divb
in
mov
mov
add
push
call
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
out
divl
jne
mov
or
call
xchg
push
pop
aas
in
adc
and
movl
dec
in
mov
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
pop
pop
mov
das
js
and
call
push
push
rcll
mov
mov
jp,pt
add
fistps
pop
push
push
push
push
xor
mov
push
mov
scas
and
sti
add
jmp
test
jne
pushf
or
push
jle
repz
adc
push
xchg
mov
add
iret
xchg
push
sbb
out
mov
jne
inc
sub
ret
mov
jmp
pushl
ja
cmp
jecxz
ret
lea
or
lock
dec
test
jg
add
pop
xor
sub
push
add
outsb
xchg
add
test
inc
pop
inc
push
adc
and
jl
fcomi
insl
roll
les
pushl
cltd
push
mov
fstpt
add
js
icebp
mov
mov
call
pushl
mov
cwtl
pop
mov
or
data16
cmpl
mov
movsb
mov
lahf
add
andl
sbb
cld
push
sub
mov
hlt
cs
add
push
adc
mov
out
cmp
sbb
sub
dec
rcrb
mov
or
outsl
mov
or
scas
hlt
or
pop
cmpsl
lret
mov
sbb
sbb
cmpsb
cmp
lea
or
int
push
call
sub
xlat
or
pop
push
loopne
std
mov
ret
add
in
sbb
into
lahf
mov
adc
mul
inc
push
sub
or
mov
mov
jbe
ret
ja
enter
or
xchg
adc
jl
inc
cmp
and
pop
addb
das
push
in
popa
and
add
mov
aaa
pusha
out
jmp
or
sbb
enter
fisttpl
sahf
add
shr
dec
cmp
je
out
sti
mov
fdivrs
fs
add
pop
push
scas
dec
testl
scas
mov
push
insl
sbb
jl
clc
movl
bound
mov
aaa
jae
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
jg
add
gs
sti
mov
mov
xor
dec
gs
clc
mov
pop
ret
arpl
xchg
pop
mov
jge
arpl
cli
or
mov
dec
add
clc
sub
enter
pusha
xchg
push
ss
mov
in
adc
sbb
or
xadd
movsl
push
xorl
adc
jg
mov
adc
pushf
flds
shrl
add
pop
mov
clc
pop
outsl
jmp
xchg
jg
rorb
test
sub
aas
cld
push
mov
sar
xor
cmp
ja
adc
lock
mov
leave
push
movsb
es
adc
xor
mov
adc
out
push
ljmp
clc
lds
iret
jle
mov
cmpl
mov
mov
push
ret
add
jge
sbb
mov
testb
add
pop
cltd
sub
shr
enter
shrl
iret
mov
mov
sbb
push
dec
push
les
add
push
jne
pop
mov
inc
bound
jmp
mov
push
pop
mov
pop
jbe
mov
add
decb
mov
mov
or
add
push
push
lea
orl
fld
push
js
fldt
xor
into
mov
aam
push
push
sub
out
and
fdivrs
fbstp
pop
adc
cld
fsubrs
pop
xchg
leave
mov
lods
loope
clc
mov
xchg
or
test
jle
cmp
mov
in
push
call
sahf
mov
das
pushf
shlb
inc
icebp
in
pop
xchg
fwait
push
push
xchg
sbb
or
jns
cs
test
mov
lea
cmp
and
js
sub
xchg
push
add
and
adcb
jbe
sub
adc
test
sbb
or
cmp
xchg
cmp
push
sar
push
push
mov
jbe
adc
cmp
jle
mov
out
pop
icebp
aas
pop
lret
add
cmp
cmp
jae
inc
stos
xchg
push
cmp
sbb
or
cltd
mov
add
jb
pop
add
xchg
outsl
jg
loop
leave
ret
lea
ljmp
je
cmp
aaa
cmp
ret
push
push
pop
outsl
scas
fadd
pop
fidivs
jmp
xchg
jmp
inc
jo
and
imul
pop
dec
jo
stos
jo
and
and
inc
sub
loope
jno
aad
aaa
stos
sar
out
orb
pop
pop
or
cmp
cmp
add
xor
jno
cmp
jne
push
push
mov
add
push
push
add
adc
pusha
or
push
mov
mov
or
pop
lret
rcrb
or
mov
jne
cmp
sahf
outsl
jae
and
sub
jo
loope
popa
adc
and
mov
subb
add
sbb
fnsave
fistpl
cwtl
mov
sub
pop
push
dec
jo
fwait
mov
mov
mov
push
or
lret
xchg
bnd
jl
or
pushf
sub
lret
rol
dec
out
pop
pop
in
pop
out
or
sbb
das
fimuls
add
or
sbb
dec
push
movl
rclb
or
adcb
mov
sbb
out
mov
mov
pop
push
pop
in
fmuls
and
add
add
sbb
cld
lcall
roll
addl
dec
inc
push
dec
lcall
cmp
popf
lea
push
add
push
sub
dec
stos
xor
daa
xchg
cmp
scas
pop
movsl
sub
nop
mov
nop
sbb
push
scas
dec
mov
popl
adc
xor
call
mov
push
cmp
push
inc
cmp
je
call
sub
outsb
adc
imul
imul
les
pop
mov
in
sbb
sti
xchg
arpl
mov
jmp
push
or
cmpsb
ljmp
cmp
push
in
mov
ret
lret
xchg
aam
out
dec
or
movsl
out
fcmovbe
mov
mov
cmp
push
cmp
adc
jge
xor
stc
push
jnp
xor
sub
jg
inc
fstp
cwtl
mov
sbbl
cmovne
sahf
add
shll
pop
mov
push
mov
adc
or
fwait
orb
mov
jle
mov
mov
push
adc
lock
mov
jecxz
lock
mov
ret
mov
insl
add
push
xchg
ret
ret
jno
ja
mov
ret
out
jg
div
decb
adc
xor
mov
adc
adcl
sub
call
xor
cmc
mov
inc
outsb
lods
loopne
xor
push
jecxz
addb
mov
aas
pop
jg
test
sub
je
dec
je
push
adc
aam
fsubrp
or
adc
inc
shll
mov
lea
push
pushf
mov
sahf
adc
sbb
push
aaa
and
xor
rcll
int3
outsb
rorb
push
push
mov
call
sub
add
or
fdivrs
fiadds
mov
add
das
sti
icebp
and
data16
sti
andl
sahf
lret
sbb
adc
or
inc
shlb
jbe
mov
lret
pop
fs
mov
pusha
mov
push
test
fsubl
lcall
test
add
testl
lea
sub
cmp
add
sbb
fcmovu
push
xor
js
and
adc
popa
add
mov
add
je
fcoml
or
aas
dec
lock
je
and
sbb
inc
pop
mov
xlat
andb
or
scas
ret
cmpb
lea
or
mov
xchg
fcomps
add
bound
pop
je
pop
sti
sbb
es
adcl
rorl
sub
xchg
mov
jg
in
test
jecxz
or
mov
add
push
sbb
adc
and
sbb
xor
jecxz
push
lret
jl
pop
push
sahf
adc
and
xorb
test
decb
outsl
negl
pop
mov
sub
out
mov
mov
dec
js
mov
push
pop
es
mov
movsl
cmp
movsb
push
jns
jns
or
jo
pop
jb
or
mov
movsb
jnp
inc
mov
or
into
scas
mov
movsb
roll
les
inc
or
mov
mull
or
dec
ja
inc
aas
ret
fcoms
or
push
dec
jmp
in
bound
cltd
or
adc
inc
sahf
and
sub
xor
cmp
push
ret
ja
aaa
add
ss
push
push
or
mov
xor
add
fsubrs
lea
leave
and
jo
push
push
fwait
sbb
xchg
xor
hlt
jne
jns
dec
mov
add
dec
orb
jmp
mov
fmuls
or
in
or
test
movsb
mov
out
mov
xor
mov
pop
jg
rolb
cmp
jne
xor
xor
sbb
xchg
push
das
pop
out
ss
jo
pop
mov
pop
add
in
push
outsl
lea
loopne
ja
pop
pop
jp
add
push
mov
mov
jne
ret
mov
ret
imul
jmp
repnz
je
or
inc
pop
sbb
and
orb
loopne
or
xchg
xor
lahf
imul
lret
cmp
inc
pop
sbb
movsl
in
push
in
pop
pop
push
test
ret
lret
sbb
mov
or
aam
jge
decl
inc
xchg
outsl
in
adc
out
add
syscall
xor
lock
push
test
test
xchg
push
loopne
aam
mov
fwait
xchg
scas
outsb
cltd
roll
movsb
mov
cmpl
mov
xor
and
sbb
add
fstl
cmp
into
push
and
add
add
fldt
pop
jbe
pusha
mov
je
in
repz
lds
pop
data16
push
adc
test
popa
mov
add
inc
out
bound
mov
movsb
jmp
jle
lods
mov
les
push
sbb
pop
neg
sbb
shlb
pop
les
ret
je
arpl
lods
rcrl
or
and
rcr
inc
lcall
push
fs
sahf
or
imul
mov
push
dec
cmpsb
in
mov
dec
xor
jns
call
test
push
xor
paddw
in
test
lods
or
lods
add
push
mov
or
sbb
imul
adc
dec
test
cmp
or
push
xor
adc
dec
insb
sub
subb
mov
push
aaa
sbb
mov
jmp
scas
js
aaa
adc
adc
adc
or
movsl
dec
jae
jo
or
nop
shlb
inc
xor
rcl
xchg
out
out
mov
xor
fwait
xchg
ret
movsb
pushf
push
sbb
and
pushf
pushf
fcoms
sbb
mov
mov
int3
sbb
inc
xor
int3
xchg
pop
enter
arpl
sbb
enter
pop
adc
rcrb
rcrb
and
hlt
mov
sbb
iret
sub
inc
mov
xchg
mov
jmp
sbb
inc
scas
movsb
sbb
mov
dec
pop
push
dec
and
mov
jmp
lock
sub
lods
into
or
add
and
shlb
mov
dec
iret
pop
cmpl
xorb
or
add
scas
jne
mov
insb
adc
cld
rorl
dec
repnz
adc
sti
ret
sbb
int
ja
cs
mov
ljmp
and
push
orl
lahf
jo
cmp
loopne
xorb
fdivl
mov
ror
inc
add
stos
sub
mov
nop
and
push
cli
sbb
cwtl
and
adc
inc
adc
dec
pusha
inc
movsb
and
push
xchg
push
shl
ficoml
push
push
dec
cmp
imul
in
add
mov
icebp
ss
pop
dec
mov
es
xchg
sbb
pop
mov
adcl
movsl
xchg
mov
mov
dec
jns
fsubs
rclb
daa
lock
out
pop
add
je
lcall
add
je
or
xor
cltd
inc
jl
scas
adcb
cld
push
orl
jne
mov
fcmovne
push
push
jecxz
in
push
jmp
enter
sub
adc
or
cmp
shll
mov
and
cmpsl
mov
je
adc
or
adc
mov
das
clc
dec
or
mov
sbb
mov
into
push
sbb
pushf
jl
cmp
push
mov
jb
or
dec
jb
or
dec
pop
dec
push
in
lret
adcl
insl
mov
aaa
adc
and
rcrb
scas
scas
and
jb
lret
jl
xorb
sub
mov
push
stc
or
fsub
push
adc
cmc
xor
inc
adc
shlb
hlt
cmp
push
cmc
fisttps
adc
push
adc
imul
push
pop
sub
push
fwait
mov
lock
mov
fistpl
jne
or
inc
pushf
jl
jo
jmp
sbb
jb
pop
push
xor
push
and
pop
dec
sbb
loopne
inc
sub
pop
mov
cwtl
push
sahf
les
testb
pushf
pop
nop
aaa
or
js
pop
stc
or
daa
fs
fmuls
testl
neg
pop
adc
clc
add
add
rclb
add
js
sub
daa
or
in
add
pop
cmp
in
and
pop
and
xchg
jecxz
adc
jg
add
ret
or
loope
sahf
out
add
fs
lret
mov
cmp
addb
and
fldt
add
cmp
je
dec
jo
aaa
push
push
pop
in
pop
test
add
adc
cwtl
pusha
mov
call
cmp
inc
sbb
add
adc
int3
es
push
pop
mov
pusha
push
pusha
in
jne
dec
push
push
lods
push
sahf
sub
mov
mov
and
jle
and
inc
jb
and
push
and
pusha
loope
je
scas
or
popa
pop
rolb
pop
stc
popa
jo
xlat
adc
push
xor
xchg
cmpsb
std
daa
aaa
add
insl
cmp
mulb
xchg
je
incb
mov
rorb
lock
sub
cltd
test
dec
loopne
adc
and
mov
scas
sub
pop
add
xor
sub
xchg
and
subl
push
popa
das
mov
sub
jno
jmp
jbe
inc
lret
ret
sbb
enter
or
jbe
mov
add
mov
add
add
cmp
pusha
inc
xor
das
aad
cmpsb
daa
sbb
pusha
insb
or
mov
lods
mov
shr
ret
sub
fsubs
jne
cmpl
mov
or
adc
out
mov
adc
ffree
cmp
lret
xchg
sbb
jo
cmp
cmpsl
xchg
inc
and
out
shlb
add
rclb
in
mov
mov
cmp
mul
or
push
sbb
imul
cmp
movsl
loopne
or
and
jle
fcomps
nop
cmp
push
mov
mov
sbb
dec
sub
or
mov
cmp
dec
testl
popf
jp
pop
xchg
cmp
hlt
ds
pop
mov
pushl
jnp
and
xchg
dec
xlat
push
mov
inc
mov
addb
pop
shl
xor
xor
sub
jno
loopne
fldcw
lcall
mulb
add
daa
inc
shlb
stc
pop
mov
sbb
push
adc
test
popf
sbb
ret
push
jo
adc
lahf
daa
pop
cmp
cmp
insb
and
pop
and
and
sbbl
and
mov
rclb
jae
je
in
xchg
hlt
js
pop
mov
test
xchg
inc
or
pushf
inc
cmpsl
std
ds
and
fisttpl
js
mov
or
mov
adc
adc
movsl
push
push
mov
push
test
sbb
pushf
mov
aad
mov
cmpsb
and
xor
add
notl
and
ret
push
je
mov
lahf
mov
mov
pop
jge
out
popf
aaa
cmpl
push
lahf
add
push
push
pusha
mov
dec
adc
lret
and
mov
fistpl
mov
sub
fdivl
sub
adc
pushf
xchg
or
push
mov
lods
sub
clc
loopne
cmp
push
mov
or
inc
lret
pusha
add
loopne
jle
push
jge
mov
add
daa
xchg
lock
popa
es
mov
loopne
sub
add
dec
adc
loope
add
xchg
sti
sub
pop
add
jge
orb
nop
sbbb
lock
rcrb
loopne
push
pushf
add
loopne
mov
mov
push
dec
dec
jne
test
nop
call
cmpsl
icebp
or
dec
adc
ret
sbb
arpl
pusha
adc
mov
loopne
mov
repnz
cs
mov
or
jecxz
xchg
sbb
add
outsb
loopne
fldl
jle
or
je
sub
jns,pn
mov
ret
adc
sub
sub
sti
int3
mov
sub
sarl
dec
sbb
sub
xchg
dec
or
add
mov
or
mov
fwait
push
test
jne
or
xchg
cmp
sti
adc
pop
test
loopne
std
mov
mov
rolb
sub
repz
sub
pop
je
add
push
and
loop
out
inc
out
add
sbb
mov
inc
aad
or
sbb
mov
mov
shrl
lock
inc
ss
cmp
lcall
les
in
scas
pop
xlat
mov
sarb
fwait
mov
mov
mov
or
les
or
push
sbb
mov
or
in
push
fdivrs
push
fsubr
or
shrb
in
or
mov
movzwl
jnp
jg
and
adc
dec
dec
icebp
jg
cmc
je
sub
jmp
jge
imul
push
jmp
adc
ret
push
cwtl
sbbb
inc
or
adc
or
or
and
push
push
cmp
movsl
mov
das
xor
aad
pop
das
mov
ja
arpl
je
lock
clc
mov
mov
xor
inc
mov
cmp
cmp
jle
push
cmp
mov
addb
push
into
fnstcw
ret
jle
mov
sbb
mov
push
sbb
xchg
push
push
fdivs
xchg
mov
dec
popf
mov
lock
cmp
pop
mov
je
pop
or
cmpsl
xlat
push
loopne
sarb
dec
sbb
add
cli
pop
pop
adc
mov
push
movsb
jae
jo
cmp
push
stos
sbb
mov
fcompl
inc
fwait
pop
lea
fildll
call
loopne
shrb
fcoml
jne
add
rclb
and
sbb
into
in
loopne
mulb
pusha
cmp
stos
loopne
jmp
mov
xor
xor
push
int3
rclb
or
imul
mov
in
add
pusha
je
mov
jl
sub
dec
mov
push
add
xor
dec
pushf
ss
jp
xchg
add
or
inc
cmp
jns
xor
add
roll
cmp
inc
nop
xchg
mov
or
adc
jb
test
and
pop
mov
or
faddl
rolb
test
in
loopne
and
cli
or
add
dec
add
ret
dec
fadds
call
dec
mov
rcrb
jo
inc
ja
sbb
adc
fimull
push
imul
stos
sbbb
dec
jns
push
pop
xchg
cmp
add
ret
cmp
cli
in
mov
dec
rcll
in
nop
or
or
stos
adc
lods
dec
xor
mov
inc
mov
scas
sbb
pusha
sbb
mov
inc
mov
adc
sub
loop
pop
cmp
les
sub
jb
pop
xor
push
sbb
push
call
and
insl
xor
or
addl
ret
fs
stc
add
decb
call
push
inc
mov
out
popf
or
push
addr16
mov
add
aaa
xor
or
push
aas
mov
sbb
add
and
add
or
imul
and
dec
cmove
pop
fmuls
dec
movlps
leave
loopne
adc
sbb
adcb
dec
clc
repz
andb
adc
out
add
xor
mov
sahf
sbb
adc
inc
mov
pushw
ret
sbb
adc
out
insb
sahf
aam
fcoms
fsubl
lahf
lret
loopne
in
mov
mov
xor
inc
mov
pushl
jae
rorl
push
js
cmp
ret
shr
movzbl
push
adc
cmpsl
jno
push
ret
push
push
inc
in
movsb
pop
add
mov
insl
mov
xchg
xchg
push
insl
mov
sbb
push
rcrl
arpl
xchg
mov
mov
stc
ror
addr16
fldt
inc
push
gs
or
xor
sbb
xor
pop
out
aaa
sbb
cmp
je
push
add
xchg
rcrb
int
or
mov
add
lock
add
mov
decl
flds
mov
cmp
jg
mov
pop
sbb
adc
pop
ror
dec
arpl
lea
arpl
pop
xchg
mov
enter
mov
enter
jns
add
mov
xchg
mov
cmp
adcl
fwait
mov
add
subl
sbb
jecxz
jne
or
loop
inc
ret
push
pop
jmp
mov
push
mov
add
sbb
mov
and
cmp
je
push
fwait
mov
into
jmp
shlb
cld
jne
xor
cmp
xor
lock
clc
cmp
pusha
or
xor
inc
cmp
jae
pop
mov
or
xor
ja
mov
and
xor
je
push
mov
outsl
pop
sub
add
fiaddl
mov
mov
pop
add
ret
hlt
sub
scas
pop
hlt
add
jo
in
jb
jg
push
adc
inc
js
mov
rorl
stos
clc
shll
test
nop
add
mov
sub
mov
push
pop
xor
adc
cli
lea
ljmp
push
push
out
sbb
lods
pop
daa
sub
test
xor
sahf
lret
jo
leave
pop
in
mov
jle
push
mov
shrl
cmpsl
mov
dec
lahf
cmp
push
addr16
js
jb
sub
or
ret
lds
xchg
xor
jg
fimull
leave
js
inc
dec
hlt
jg
hlt
or
push
je
sub
pop
or
inc
adcl
jl,pt
jbe
add
inc
sarl
mov
popaw
mov
push
push
pop
adc
cmpsl
leave
fdivr
mov
and
insl
xlat
pop
pop
scas
push
inc
rorl
jl
cld
fistps
hlt
jl
repz
push
or
jb
dec
mov
das
push
xor
mov
inc
ret
or
mov
cmp
sbb
jae
mov
push
dec
pop
or
xchg
mov
xor
popf
or
fiaddl
xor
jne
mov
mov
adc
push
add
loopne
mov
push
je
cmpsl
std
or
mov
ret
je
mov
fsubrs
mov
mov
push
mov
ds
mov
dec
sbb
or
sbb
mov
stc
or
dec
enter
mov
or
test
hlt
add
add
pop
dec
or
mov
imull
mov
jae
dec
fs
sbb
sub
adc
mov
insb
add
inc
outsb
mov
push
add
add
cmp
xchg
gs
enter
lret
push
inc
fcmove
jae
jb
insb
scas
jnp
xor
cmpsl
mov
xchg
sub
jge
or
mov
mov
cmp
jne
out
test
icebp
cmp
je
jbe
movb
fldl
or
in
push
push
and
mov
daa
lock
cmp
je
pop
sbb
add
andb
mov
mov
shlb
inc
call
push
ljmp
fidivrs
or
adc
push
scas
setne
xor
mov
insb
pop
movsb
scas
or
pop
xchg
ljmp
jne
adc
aam
add
clc
jg
jo
bsr
mov
or
es
add
adc
pop
test
pop
mov
adc
mov
rorl
test
js
push
js
dec
lock
jo
add
add
arpl
loope
push
push
pop
outsl
mov
xlat
pop
adc
dec
push
push
cmp
dec
pushf
mov
shr
add
sarb
jne
push
mov
jne
ficoms
push
inc
sbb
push
mov
cmpsb
nop
subl
add
test
jns
fnstsw
mov
nop
jb
lock
shlb
hlt
sub
pushl
or
jge
cmp
je
pop
inc
or
jb
cs
mov
repnz
or
add
insb
cld
cmp
lea
jbe
push
inc
mov
test
test
push
add
cld
sbb
test
sub
sbb
add
sbb
push
dec
hlt
xor
movl
popf
dec
add
dec
addr16
sub
mov
loope
loop
xor
js
in
adc
inc
loopne
add
inc
sub
adc
add
xlat
jecxz
cmp
rolb
adc
mov
cmpsb
xchg
mov
icebp
or
pop
mov
mov
mov
shr
jecxz
js
push
das
push
js
or
add
lcall
daa
icebp
sub
dec
lret
inc
push
sbb
lods
jb
scas
xor
mov
add
clc
sub
add
inc
scas
xor
dec
pop
shl
sub
fldt
jne
pop
sub
or
bound
sbb
mov
aam
and
xlat
sub
mov
dec
or
leave
jne
mov
call
cmp
add
ret
adcl
test
les
add
call
cmp
pushf
cmp
or
pop
add
xlat
nop
add
inc
jl
rclb
inc
push
jo
sbb
mov
sarb
clc
mov
push
popa
adc
mov
ljmp
xchg
shrl
popa
add
sub
xchg
dec
jmp
inc
cs
add
or
ljmp
in
add
outsl
and
icebp
mov
pusha
les
jno,pt
movsl
xchg
pop
jecxz
and
pop
mov
ficompl
pushf
jmp
push
push
mov
cmc
stos
add
adc
push
nop
and
mov
cmp
and
aad
inc
sub
movsl
mov
push
or
in
jmp
imul
inc
push
xor
jl
pop
clc
loope
lret
cmp
or
mov
inc
and
push
shrb
adc
loopne
jne
in
inc
inc
mov
adc
leave
and
clc
cmp
mov
repnz
adc
cmp
in
adc
sbb
push
inc
outsl
das
mov
push
push
mov
lock
mov
add
or
and
jge
sahf
xor
out
sub
sbb
js
std
pop
pop
ret
mov
pop
mov
cltd
xchg
int3
pop
or
nopl
or
adc
sti
cs
sub
dec
push
mov
leave
gs
mov
inc
sbb
or
and
push
sbb
and
and
in
sbb
and
xchg
cwtl
mov
sbb
push
sahf
pop
inc
pop
or
ljmp
push
cmpsb
add
das
rorb
out
enter
movsl
jge
pop
xlat
ss
adc
sbb
and
stc
adc
cmp
popf
cmpl
loope
sbb
cmp
push
mov
fisttpl
shrl
pop
negl
xor
or
mov
add
cmp
add
push
mov
jmp
push
add
sti
sti
lock
bound
clc
dec
sbb
jb
jbe
das
pop
mov
dec
and
pop
jmp
sahf
cld
fucomp
mov
pop
sub
jne
sub
dec
je
or
aaa
into
adc
in
jge
adc
or
decl
rcl
div
aas
sbb
jmp
mov
mov
dec
idivl
leave
jmp
sub
push
imul
add
xor
cld
mov
add
push
mov
xor
jnp
fsubl
and
or
adc
xchg
ficoms
adc
pop
push
mov
mov
pop
inc
dec
pusha
mov
mov
xchg
or
rolb
clc
xchg
jo
add
daa
pop
pushl
test
lcall
outsb
mov
and
in
popl
sbb
shr
frstor
dec
sbb
jae
mov
movsl
imul
sti
jbe
jg
fldz
andl
and
dec
xchg
outsb
jmp
sbb
and
stos
jmp
and
jmp
xchg
mov
pop
scas
lret
out
sbb
jbe
cmp
cmp
out
ljmp
cmp
add
push
pushf
mov
iret
lea
pop
and
pushw
or
stos
and
sub
stc
insb
fstl
dec
imul
jno
inc
adc
sub
stc
mov
lahf
rorb
fmuls
inc
fmuls
xchg
push
out
mov
sbb
xchg
pop
jge
pop
jg
loop
imull
inc
push
mov
jg
jg
bnd
lea
push
push
push
push
add
push
cli
mov
movb
xchg
out
cmp
subb
cmpsb
add
dec
mov
inc
test
inc
stc
and
cltd
lahf
ret
leave
into
sarl
lea
sbb
inc
dec
jl
movl
sbb
scas
mov
rcll
sbb
jp
stos
rorb
cli
sbb
sbb
or
inc
or
mov
xchg
xor
mov
int3
push
aam
outsl
pop
ret
ljmp
add
jl
inc
xor
add
add
mov
xchg
sub
add
push
ret
mov
xor
mov
adc
xchg
push
aaa
xchg
dec
adc
out
xor
lcall
xor
dec
je
jno
jle
ss
and
pop
cmpsb
adc
rorl
sub
adc
jnp
adc
xor
mov
jns
jne
push
sbb
and
adc
or
mov
mov
mov
add
movsl
dec
push
adc
lret
dec
inc
fistpl
dec
mov
call
test
mov
repnz
in
imul
mov
loopne
mov
loop
cmp
mov
mov
mov
xor
ficoml
xor
rcl
mov
fnstcw
test
add
push
cmp
out
sbb
pushf
jl
in
jge
sbb
cmp
lea
jl
add
je
cwtl
add
jecxz
cmp
pop
cmp
loope
andb
push
add
mov
clc
aam
push
aam
das
in
and
cmp
loop
jne
int3
push
roll
mov
imul
loopne
clc
daa
sub
add
jle
aam
sub
fsubrl
xchg
inc
add
cmpsl
rorb
xchg
mov
dec
test
shlb
sub
xor
dec
mov
das
add
mov
jne
push
xchg
pop
out
sub
xor
pop
faddl
jo
xor
push
rcr
pop
dec
je
lea
push
loopne
add
mov
fwait
lret
jo
sub
loope
aas
mov
cmp
pushl
call
push
or
jge
es
sub
or
jns
lcall
push
fisttpl
mov
push
mov
lock
mov
dec
div
push
dec
je
dec
push
push
sub
jg
xchg
call
fwait
cmp
lods
sub
sub
in
dec
jmp
mov
pop
sub
aaa
daa
insl
es
cmp
push
mov
add
lcall
inc
adc
dec
cmp
in
and
adc
xor
lods
xor
sbb
mov
dec
loopne
and
push
dec
pop
lcall
or
sbbb
xchg
test
jecxz
fistps
cmp
ficomps
fwait
add
dec
dec
scas
lods
enter
addl
popa
into
in
and
add
dec
cmp
sub
jbe
loop
adcb
push
iret
jl
push
sub
mov
cmp
mov
fimull
clc
neg
sbb
and
push
push
out
cmp
sub
adcb
mov
mov
lods
mov
in
hlt
dec
test
jge
pushl
inc
scas
add
jnp
pop
add
adc
punpckhdq
arpl
jmp
pushl
and
and
in
push
roll
xchg
pop
xchg
jo
pop
pop
xchg
or
mov
mov
in
pop
ljmp
js
push
rclb
decl
jle
cmpl
jne
pushl
xchg
je
ja
dec
sbb
push
adc
mov
fadds
adc
nop
jmp
sbb
add
xor
add
dec
addl
or
inc
scas
aas
movsl
sbb
pop
cmp
je
cmp
leave
fldcw
sti
sbb
or
jno
add
pop
js
push
mov
test
ja
xor
leave
popa
in
mov
test
inc
inc
shrl
xor
aas
incl
jne
movb
jmp
cmp
jecxz
les
popf
movsl
fldz
xor
xchg
cmp
enter
or
xchg
test
mov
dec
aas
mov
add
mov
test
ficompl
pop
ja
mov
sub
test
loop
sbb
cmpb
and
sti
dec
jo
test
or
popf
sub
and
sbb
or
push
fidivrl
sbb
es
add
leave
push
pop
inc
aad
adc
shlb
pop
cmp
ja
loope
iret
push
adc
enter
cltd
add
shrl
xor
cltd
stos
xchg
test
mov
in
cmc
xor
or
xor
int3
ja
movsb
shlb
adc
xor
xor
daa
sbb
mov
push
push
lea
and
add
add
insb
sub
dec
dec
jae
push
int3
inc
dec
lret
outsb
and
push
push
lret
jl
cmp
cmp
xchg
andb
jbe
xor
imul
inc
shrb
mov
mov
xor
clc
sbb
test
mov
jno
enter
cwtl
imul
inc
inc
fldl
fmull
adc
push
pop
int3
push
out
call
push
xchg
push
push
push
add
mov
aaa
movsl
mov
mov
cmp
push
stos
adc
jp
cli
ja
mov
mov
mulb
es
andl
out
sub
sbb
cmp
int
pop
into
popa
in
or
xor
ja
lea
sub
out
jge
xchg
add
mov
cmp
adc
fmuls
dec
rorl
dec
add
test
aam
or
cmc
jmp
fs
xchg
jle
add
rorl
pop
test
adc
sub
cmpb
mov
jo
fdivs
cmp
cmp
pop
sub
pop
push
pop
mov
push
inc
mov
aaa
cs
sub
push
push
mov
mov
adc
sbb
and
repz
cmc
mov
jmp
fisubrs
rolb
add
mov
cmp
or
push
das
pusha
mov
pop
inc
or
push
cmp
sub
lcall
jne
adc
pop
push
popa
push
stos
xchg
xchg
stc
sbb
sub
roll
xchg
fbld
je
jnp
nop
or
sbb
daa
out
xor
add
movsb
insl
mov
shlb
pop
jecxz
orb
fisubl
je
shld
iret
loope
and
xor
cltd
mov
pop
inc
and
lea
mov
or
into
mov
orl
pushf
dec
sub
ret
add
jo
inc
enter
add
mov
ljmp
fcoms
mov
add
adc
stc
push
in
cli
test
xchg
push
xchg
jp
test
jg
adc
pushf
mov
stos
lock
xchg
rcrb
shrb
xor
mov
scas
mov
pop
dec
loope
sbb
testb
or
shlb
and
push
fucomip
or
out
cld
fildll
pusha
fstpl
push
pop
jge
mov
sub
push
sub
xor
mov
dec
jg
lea
cltd
idivl
add
xchg
or
movsl
daa
rcr
mov
js
out
pop
imull
fs
or
xchg
arpl
mov
leave
jle
cmp
std
pop
stos
int
mov
cld
negl
pushf
movb
jnp,pt
dec
sbb
dec
lea
mov
jl
xchg
sub
jg
pop
ljmp
dec
nop
or
out
insb
std
outsb
mov
test
xchg
fildl
mov
out
stos
fisttps
test
jns
faddl
or
mov
out
ds
lock
mov
sub
mov
fcomip
xchg
int3
mov
mov
inc
les
out
push
pop
jp
xchg
pop
jl
jmp
into
add
das
or
lock
je
into
clc
fidivl
jmp
push
add
movsl
rclb
out
push
pop
mov
pop
jne
pop
pop
movb
add
xor
xor
jmp
mov
pop
in
ljmp
mov
inc
cmp
and
orl
xlat
and
xor
mov
cmpsl
je
addr16
push
out
sub
bound
int
or
push
xor
test
jmp
sbb
test
dec
mov
shll
into
pop
leave
ret
and
setl
xor
int
sub
jnp
call
push
data16
imul
in
add
mov
mov
repnz
xor
fs
sbb
sbb
loope
pop
iret
pusha
sbb
jns
sbb
mov
mov
aam
cmp
inc
jne
sti
mov
outsl
lods
add
adc
mov
cmp
fs
leave
pop
xor
orb
add
int
pop
sub
push
mov
lea
push
mov
push
movsb
pop
mov
in
inc
and
lea
subl
decb
mov
dec
or
dec
or
add
or
xlat
pop
insl
or
adc
cli
sbb
push
inc
xor
mov
sub
xor
adc
imul
add
sbbb
imul
sbb
les
pushl
or
cmp
sbb
mov
or
push
dec
jbe
shlb
pusha
pextrw
sub
mov
push
pop
shr
pop
ret
inc
xchg
pop
popf
dec
sbb
movnti
xor
test
mov
pop
or
inc
cli
and
push
lds
dec
push
ds
sbb
mov
pop
mov
and
pushf
lcall
andl
dec
cmp
sub
clc
add
fisttps
mov
push
push
add
mov
shrb
mov
clc
setb
test
inc
add
add
mov
sub
cmp
xorb
mov
xor
dec
adc
data16
push
lea
push
lods
mov
pop
aaa
cmpb
jle
je
push
fnstcw
pop
lcall
insl
add
fldl
add
cs
dec
mov
mov
jecxz
pop
push
mov
hlt
scas
sbb
mov
sub
aaa
push
pop
iret
in
incl
fldt
not
push
inc
or
das
push
loopne
nop
push
mov
mov
mov
leave
and
dec
les
xchg
pop
lods
test
sbb
add
mov
pop
out
adc
clc
mov
sub
pusha
sbb
imul
jmp
push
pop
xorl
out
xor
in
in
mov
repnz
cld
sub
pop
xchg
data16
sti
arpl
add
arpl
adc
clc
popa
jl
xor
cwtl
dec
and
add
or
js
cmp
jle
icebp
inc
push
xor
and
adc
das
inc
xor
and
add
xchg
addr16
sar
add
jmp
pcmpgtw
ja
pop
js
aad
fldt
and
adc
jmp
jno
sbb
and
test
pop
gs
or
push
mov
adc
inc
pop
les
cmp
add
ds
fs
sbb
pop
cwtl
loop
jp
jns,pn
jns
push
in
enter
push
pop
fmuls
adcb
loopne
push
jns
push
and
mov
push
rclb
or
nop
fcompl
aaa
pushl
dec
int3
add
in
pop
add
jecxz
les
adc
jae
shrb
das
add
les
push
test
test
add
cmp
outsb
hlt
fsubr
mov
mov
hlt
sub
rcl
arpl
adc
pop
xlat
mov
pop
pop
je
jne
daa
lahf
or
test
ds
or
mov
add
push
pop
xchg
push
ret
insl
test
or
and
sub
fldl
jne
movsb
pop
pop
push
cmp
outsb
xchg
lods
jnp
mov
arpl
adc
rcrb
mov
mov
push
sbb
adc
mov
js
in
adc
push
xchg
push
andl
dec
rclb
and
in
cmp
adc
jne
mov
popl
je
xchg
push
inc
sbb
push
xchg
pop
pushl
push
lret
sub
xor
jmp
ja
pop
andl
dec
cmp
mov
add
sbb
sbb
rorb
test
shlb
xlat
insl
xchg
xchg
mov
test
je
stc
loop
jne
jg
dec
mov
jmp
dec
mov
sub
and
fstl
aam
mov
lcall
dec
add
xchg
inc
pusha
inc
xor
cs
adc
cmpsl
xchg
sub
cltd
dec
insl
push
mov
sub
leave
js
cmp
jge
daa
in
jmp
mov
mov
mov
cmp
sbbb
cmp
mov
shlb
call
inc
cmpsl
lahf
push
in
or
mov
jns
js
fsubr
sbb
inc
inc
lcall
ljmp
cmp
int
inc
cs
sbb
aam
xor
sbb
push
xor
test
mov
cmp
mov
lahf
add
pop
jo
sub
dec
clc
cmp
sete
adc
loope
add
insl
xchg
and
inc
sbb
fisubrl
sbb
in
or
jnp
loopne
mov
movsb
pop
lds
mov
pusha
loop
sbb
and
pop
or
and
dec
mov
inc
leave
repnz
dec
add
sbb
jno
pop
lea
das
arpl
pop
push
or
addl
stos
es
pop
pop
popa
cmp
dec
lock
jo
add
mov
ret
jecxz
xor
popf
inc
shlb
push
or
sbb
loopne
lea
mov
jo
std
cmp
mov
push
jge
mov
sub
push
iret
frstor
fidivl
aad
mov
add
out
cmp
push
xchg
push
movsl
test
in
fwait
jle
push
pushf
lret
xor
add
jmp
mov
xchg
or
push
mov
push
jne
stc
outsb
nop
data16
adc
push
pop
pop
test
cmpsb
add
pop
dec
clc
mov
pusha
fmull
adc
sbb
stos
and
insl
addr16
or
or
in
repz
int3
arpl
in
call
inc
sbb
lock
and
adc
or
pop
mov
pop
daa
pop
arpl
mov
rorb
and
loopne
cmp
sbb
dec
add
pop
mov
add
xchg
jle
jge
loope
inc
cwtl
adc
sub
call
or
adc
je
inc
add
mov
xorl
ficoms
or
ss
les
stos
xor
enter
mov
sbb
sbb
or
clc
sub
hlt
push
or
cmpsl
cmp
jmp
lock
pop
dec
call
cmp
inc
ja
clc
ljmp
xor
lods
xor
cli
in
call
lock
dec
mov
sub
lock
shlb
dec
lahf
aaa
jns
clc
pushf
jge
mov
cli
in
jmp
aas
hlt
mov
mulb
mov
sub
add
into
push
push
add
push
call
or
mov
dec
xchg
cmp
and
jp
adc
sub
inc
or
iret
push
rcrb
test
inc
jmp
jbe
cmpb
add
int
sub
jg
mov
cwtl
add
mov
jb
ret
xchg
cmp
jmp
mov
addl
rorb
or
mov
shlb
mov
or
adc
pop
push
mov
call
repz
xor
xor
jle
addl
movzwl
dec
push
cs
outsb
mov
jmp
mov
jl
cmp
xchg
push
lea
push
push
adc
inc
lods
cld
push
push
shll
or
popw
hlt
jbe
pop
push
mov
push
nop
jp
sbb
outsb
adc
add
cmp
push
and
or
inc
xor
rorl
inc
xorb
mov
push
fisttps
in
subl
scas
das
add
shl
aaa
cwtl
cmp
fwait
mov
mov
ss
pushf
es
adc
int3
ret
pop
mov
mov
jae
add
push
divl
push
mov
add
xchg
inc
ficompl
sub
sub
add
mov
adc
scas
mov
outsb
xchg
push
leave
ret
xchg
push
push
test
hlt
sub
paddb
add
lea
andl
xchg
mov
xchg
pop
inc
fcompl
push
test
cmpl
addr16
movl
loope
xchg
mov
dec
sub
adc
inc
shlb
add
iret
xor
test
push
xchg
arpl
dec
push
mov
dec
add
mov
or
inc
out
cmp
adc
pop
push
outsb
call
popf
pusha
test
and
or
push
addr16
call
or
xchg
or
test
lds
inc
add
sahf
jo
jg
int3
jmp
mov
orb
aaa
or
xchg
js
ds
cmpsl
push
sbb
pop
test
js
sti
xor
inc
ljmp
and
or
adc
or
sub
scas
cmpsb
push
inc
iret
daa
push
mov
aaa
sbb
mov
xchg
mov
xor
pusha
or
sub
loope
mov
xorb
mov
sahf
fnsave
push
enter
jno
nop
or
dec
mov
push
adc
out
or
lret
mov
push
jnp
mov
mov
mov
add
addl
add
inc
xor
add
or
inc
jp
stos
andb
and
lock
mov
adc
movsb
push
xchg
sbb
daa
adc
xchg
jb
mov
add
ja
dec
lea
mov
iret
xchg
sbb
and
pop
lods
movsl
aam
adc
push
jp
pop
ds
lea
sbb
jo
pop
int
sub
push
push
ljmp
inc
mov
out
andl
out
out
ror
orl
fstps
pop
les
rclb
aas
and
inc
add
adc
inc
or
lcall
add
sbb
sub
xchg
inc
ret
push
lret
pushf
inc
repz
lea
test
push
adc
add
iret
sub
lea
dec
sbb
scas
mov
mov
add
loopne
add
xchg
xchg
adc
iret
nop
lea
xor
pop
sbb
adc
add
mov
nop
or
sbb
setne
in
and
test
pop
iret
aam
mov
pop
push
sub
cwtl
aad
lock
sub
mov
repnz
mov
lea
or
push
imul
adc
sbb
or
mov
test
je
xor
negl
out
or
adc
push
dec
mov
or
mov
jmp
xor
cli
add
mov
push
lahf
lock
out
mov
pop
push
push
mov
cmp
mov
je
faddl
xor
popf
push
es
shll
arpl
cmpsl
lock
jnp
movsb
jo
rorl
xchg
mov
mov
insb
dec
lea
cmp
mov
mov
pushf
in
dec
adc
loop
jne
subl
push
push
pop
jne
add
sti
cmp
in
aam
mov
gs
sbb
and
push
cmc
pop
cmp
in
test
pop
ror
inc
add
stos
mov
push
pop
jmp
mov
clc
fdivl
xlat
dec
add
popa
or
lret
dec
addr16
test
sbb
sub
adc
or
dec
and
sbb
and
inc
cmp
adc
cld
xchg
or
jmp
push
sti
nop
xor
cmp
adc
movsb
call
jl
and
imul
sbb
pop
incl
xchg
xor
shlb
addb
loope
xchg
adc
aad
pop
push
pop
xor
xchg
mov
daa
loope
xlat
push
repnz
push
cmp
aam
add
lret
jge
inc
js
aad
mov
push
jle
xor
add
push
nop
mov
loope
data16
jp
rorb
mov
cmp
push
and
mov
pop
pop
mov
call
push
push
mov
mov
fadd
xor
loope
fldl
or
mov
aad
call
inc
push
rcrl
cmc
sbbl
mov
dec
adc
inc
or
lret
push
insl
mov
fsts
mov
decb
repnz
mov
scas
sahf
subl
lock
mov
push
pop
data16
rcrb
xchg
fs
lock
sub
loope
mov
cmp
or
daa
mov
inc
cmp
jnp
aas
pushf
mov
cmp
in
add
push
adcb
add
loopne
paddd
jbe
mov
fdivr
ret
jne
and
pusha
pop
pop
les
mov
scas
shrb
lret
pushfw
clc
mov
add
lea
lea
mov
mov
lea
push
scas
enter
in
ret
push
es
in
incb
fisttpll
lahf
and
lahf
sar
aaa
mov
cmp
xor
cmc
mov
cmp
mov
inc
mov
pop
addr16
push
out
sub
cli
insl
pushf
lods
and
in
popa
add
push
roll
ret
jns
and
mov
push
loop
test
sbb
js
in
andl
xchg
dec
lea
xchg
pop
mov
jecxz
add
sub
mov
sbb
inc
out
dec
das
ss
xchg
and
loope
push
pop
xchg
mov
add
or
jge
add
lret
push
add
repnz
andb
mov
and
mov
add
pop
icebp
aas
cmp
out
add
dec
mov
enter
push
outsl
jp
cltd
mov
lea
and
adc
push
cmp
adc
sarb
xchg
jle
setno
push
mov
mov
push
fists
popa
in
outsb
and
mov
push
fs
shr
imul
jno
and
sbb
imul
lret
nop
andl
push
adc
pop
cmp
or
mov
xor
popa
sbb
inc
or
adc
in
leave
ret
mov
add
adcb
inc
pop
fiaddl
or
mov
and
jne
push
fisttpll
mov
add
pop
test
mov
sahf
push
imul
insb
lcall
or
aam
add
jecxz
mov
push
add
jp
mov
dec
in
add
fadds
addr16
adc
mov
cmc
xchg
and
jbe
popf
movl
maxps
jl
pushf
loope
pop
and
je
pop
or
lds
sub
and
mov
and
fdiv
add
jge
div
mov
mov
cmp
popl
faddl
and
sbbb
sbb
add
sbb
or
push
stos
fs
imul
adc
jmp
test
sbb
xor
inc
aad
popa
xchg
lods
xlat
sbb
imul
xor
sbb
sbb
stc
shlb
pop
xlat
sahf
imul
rcrb
pop
or
sub
movsb
sar
pop
mov
push
pop
cmp
je
push
mov
mov
or
sbb
or
or
cmp
fcomps
push
dec
outsl
rcr
push
xor
and
test
and
lea
das
mov
add
add
rcr
call
and
and
adc
sub
and
lds
push
cmp
add
and
sahf
pop
sub
nop
iret
add
adc
sub
or
and
lods
mov
sbb
mov
jp
jbe
dec
testl
imul
cs
aam
lods
daa
das
call
test
xor
lcall
sbb
fs
inc
cmp
sbb
stc
mov
push
xchg
subb
into
int3
arpl
rorb
push
sbb
cmp
push
xchg
lds
jge
sub
mov
fdivr
cmp
or
shlb
mov
lds
lcall
loopne
pop
popf
call
fucomp
xchg
or
in
dec
call
rolb
jmp
push
jo
loopne
push
sbb
imul
dec
ret
insb
pop
fldl
mov
out
ljmp
in
add
mov
shlb
pop
gs
rcrb
gs
add
les
ret
dec
fstl
jp
enter
iret
adc
jl
xor
mov
push
addl
dec
xor
lea
pop
and
fsubrs
dec
repz
rorb
push
mov
fists
out
loop
ss
or
mov
pop
nop
sti
mov
loopne
pop
xchg
out
xchg
mov
sub
or
and
adc
dec
or
jb
xchg
scas
out
iret
js
call
mov
dec
pop
or
xchg
push
test
xchg
test
add
test
xor
addb
mov
pop
cmp
push
jnp
or
xor
scas
mov
jae
fisttpl
rclb
mov
mov
mov
inc
scas
int3
pusha
repz
mov
pop
inc
lret
mov
js
ficoms
push
jae
xchg
fistpll
xchg
dec
adc
and
push
cs
outsb
push
data16
add
mov
dec
add
mov
aaa
xorl
les
and
and
je
jae
rcrb
cmp
mov
xor
add
bound
add
sub
add
cmp
inc
ja
jl
push
mov
mov
xor
pop
pop
or
pop
cwtl
aad
push
sub
push
sbb
jo
mov
bnd
scas
sbb
pavgb
mov
rolb
add
lods
int3
mov
insb
rorl
movsb
dec
hlt
sub
xchg
int
lret
xchg
sbb
rcr
adc
mov
add
inc
inc
loope
mov
adc
xchg
clc
mov
outsl
cltd
dec
xchg
dec
stos
ret
sub
sbbb
fwait
outsl
cmp
enter
clc
setle
fnstenv
add
adc
mov
rcll
pusha
cmovle
or
mov
pop
clc
out
or
cmpsb
pusha
push
mov
cmp
push
mov
push
ret
xor
push
or
outsl
push
inc
jo
adc
push
mov
repnz
xor
mov
sbbb
cmc
push
scas
push
int3
push
inc
inc
movaps
cmp
mov
das
adc
cltd
xchg
lock
clc
icebp
test
push
lods
scas
add
or
mov
lods
mov
test
cmp
jmp
aad
xchg
sbbl
in
mov
shrb
mov
push
jo
jae
lods
dec
ret
pop
enter
loopne
add
sbb
add
ret
aaa
lods
stos
adc
mov
leave
test
mov
subl
pop
arpl
pusha
adc
scas
fsubs
pushf
je
cmpb
rcl
jmp
jmp
ret
push
mov
cmpsl
push
stos
fimull
adc
je
jl
clc
call
arpl
stc
sub
lea
push
lea
push
inc
xchg
cmp
push
jmp
mov
cmpsb
cmpsb
nop
pushf
xlat
loope
fisubl
xchg
jmp
xchg
lret
cmp
push
sub
cmp
jle
pop
sub
sub
scas
lcall
jne
out
cmpsb
add
push
add
jg
lcall
shll
mov
ja
int3
out
ret
or
cmp
je
sub
pop
ja
shlb
push
stc
cmp
fcmovnu
js
add
ret
fstps
sti
add
loope
sti
push
xchg
sub
dec
fwait
push
adc
in
pop
pop
ds
add
in
sub
lea
out
push
dec
or
inc
sub
sbb
or
adc
js
or
or
fisubl
cmp
mov
ja
push
or
hlt
adcl
lahf
push
and
call
hlt
jmp
lock
test
mov
mov
or
add
xor
clc
daa
test
divl
add
cmp
mov
or
mov
dec
les
sub
jne
xchg
cltd
xchg
push
sub
cmpsl
incb
out
rolb
cmp
je
sbb
jbe
push
mov
mov
fbstp
mov
shrl
mov
push
mov
add
inc
or
pop
pushl
aaa
mov
mov
rcrb
je
sub
cld
mov
add
push
push
sub
es
add
xchg
dec
add
jbe
jne
push
sub
dec
and
insb
sbb
js
push
cmpsb
dec
or
inc
sub
mov
inc
cmpl
jb
mov
dec
stos
rorl
mov
test
push
xchg
lock
jge
cwtl
pop
stos
jne
adc
cli
or
movsl
clc
dec
jnp
xchg
inc
and
push
mov
mov
push
dec
ret
dec
popa
cmp
cmp
push
leave
push
cmp
dec
clc
adc
leave
es
mul
seto
mov
enter
mov
push
jmp
cmpsl
mov
mov
push
xor
test
jbe
sub
dec
mov
ficomps
adc
mov
aad
clc
mov
push
adc
mov
cli
push
dec
shll
adc
ds
push
sbb
cmp
cwtl
xchg
and
adc
andl
add
movsb
roll
jae
fs
inc
inc
add
dec
xor
mov
xchg
push
dec
cmp
inc
clc
xor
mov
int3
cmp
scas
cmp
pop
aam
shr
push
sahf
and
cli
movsb
mov
nop
clc
or
in
mov
sbb
pop
lock
or
sbb
cmp
je
addb
add
or
lock
push
aam
cmp
jne
inc
xchg
sub
jecxz
add
aad
cmpsb
add
inc
xchg
sub
adc
outsl
push
cmp
mov
pop
lcall
aas
jge
jae
faddp
jmp
jl
ret
pop
push
test
push
ss
xchg
jmp
mov
inc
jno
cmp
les
sbb
inc
cmp
jae
add
cwtl
scas
cmp
sub
pop
jbe
shrw
push
out
sub
cmp
jne
and
scas
adc
inc
jl
cmpb
lar
push
ss
push
inc
xlat
mov
mov
arpl
adc
xlat
push
jae
test
mov
or
jbe
lcall
cli
jno
pop
or
pop
shlb
mov
mov
test
pop
or
mov
jne
lcall
sbb
stos
int3
xlat
dec
enter
mov
loope
mov
call
push
sbb
loop
andb
or
cli
mov
inc
scas
dec
cltd
adc
inc
dec
jns
fmul
sbb
fsincos
imul
adc
mov
sbb
cmp
jae
data16
and
cli
loopne
mov
ret
mov
mov
mov
push
or
or
xchg
jo
push
mov
and
push
or
push
iret
jo
loopne
xor
jno
sahf
mov
push
and
ret
and
faddp
xor
or
out
inc
push
jge
push
sub
into
mov
cmp
mov
push
lock
push
clc
pop
in
pop
dec
or
sbb
push
pop
lahf
sar
ffree
pusha
sub
dec
or
ret
xor
orb
and
sbb
inc
leave
sbb
mov
stc
bound
push
in
sbb
pop
lret
push
inc
ss
hlt
jbe
jecxz
mov
mov
neg
push
xor
imul
mov
xor
or
out
jne
push
jge
mov
shrb
add
pop
repnz
cltd
aam
fstpl
mov
insb
addl
rcrb
inc
mov
pop
xchg
jmp
call
pop
fisubl
sub
adc
flds
xchg
jno
mov
out
pop
cmp
mov
or
sub
shrb
push
orb
xchg
adc
jnp
mov
dec
sub
mov
jecxz
mov
jne
push
pop
ret
mov
and
test
aas
lds
popf
sub
popf
inc
add
scas
mov
lock
xor
cmp
xchg
je
cmp
mov
add
mov
add
mov
pop
inc
adc
fistpl
in
sub
imul
push
sub
xchg
push
dec
pusha
mov
push
sbb
data16
inc
push
je
inc
mov
cmpsl
aam
dec
js
jl
adcl
fidivs
lds
inc
repnz
mov
mov
add
add
inc
jp
and
push
pop
mov
push
add
mov
pop
or
fistpll
pop
push
or
push
adc
jb
and
adc
push
pop
popf
push
dec
lahf
pop
dec
outsb
pop
cmp
sub
sbb
ret
jnp
das
data16
ret
stos
gs
push
loop
cmp
mov
repz
mov
filds
push
pop
mov
aad
js
test
sub
push
jg
dec
and
adc
stc
movsl
int
sub
inc
movsl
insl
mov
jmp
cmpsl
xor
mov
cmc
xchg
mov
cmp
pop
cmp
inc
in
adc
cmp
clc
mov
rcl
pop
popf
dec
icebp
add
fdivl
add
jbe
push
adc
add
cmp
push
nop
xor
push
pop
and
mov
jbe
xchg
xchg
add
daa
mov
fs
shlb
adc
cld
lea
insl
int
push
mov
sub
movsb
lret
shr
mov
adc
pusha
js
sub
push
and
xor
int
adc
mov
adc
add
cmp
adc
rcrb
dec
inc
adc
rcll
push
cmp
jne
lds
add
add
repz
popf
jg
or
adc
pop
add
lea
cmp
fmul
mov
or
mov
cmc
xor
int
lock
and
adc
repnz
or
push
movsb
pop
add
lea
pop
insb
xor
sub
sub
cmp
rclb
pusha
cmp
sub
fidivs
pushf
leave
lea
cmp
subb
xlat
mov
enter
lret
pop
stos
sub
push
dec
fcompl
js
sub
fadds
push
cmp
add
movsl
aaa
cmp
jp
sbb
push
sub
pushl
mov
or
xor
call
sub
fwait
std
mov
mov
adc
sbb
aaa
push
sahf
js
push
gs
orl
cmp
call
movsl
cltd
jnp
dec
pop
dec
xchg
push
or
popf
add
in
cmp
cmpsb
adc
push
cltd
sbb
pushf
ss
mov
lret
and
xor
and
rolb
dec
and
push
insl
jg
inc
or
movsl
xor
fnsave
sub
pop
add
popa
and
and
inc
cmp
sbb
add
sbb
lret
les
push
push
pop
xchg
imul
and
push
sbb
sbb
in
pop
fistl
xor
orb
sbb
leave
rcr
int
sbb
movsl
push
stc
add
shlb
icebp
or
sti
faddp
inc
xchg
fs
mov
and
inc
inc
fwait
js
orl
cmp
cmpsb
xchg
sbb
pop
aad
mov
sub
and
adc
jns
cmp
push
mov
daa
std
lods
mov
and
inc
add
and
pusha
sbb
adc
push
xor
imull
lods
stc
mov
cld
jmp
or
jg
mov
test
loope
and
das
pushl
call
and
inc
rep
adc
dec
adc
add
push
sub
adc
adc
pop
inc
jae
test
lret
or
cmpsl
loopne
in
adc
push
mov
or
cmp
or
mov
mov
das
mov
or
add
sbb
mov
pusha
sbb
push
in
je
sub
imul
rcrb
mov
js
mov
dec
pop
dec
mov
sub
clc
js
adc
mov
mov
pop
lret
test
hlt
lea
divl
js
lds
mov
aad
scas
sbbb
xchg
jne
adc
pop
push
sti
dec
cmp
hlt
add
push
imul
push
pusha
out
push
loope
mov
ss
pop
jb
or
jecxz
or
lods
xor
loopne
outsb
add
mov
mov
mov
lea
cmp
jmp
and
ljmp
ret
lea
jmp
mov
pop
sarl
pusha
jo
inc
insb
pop
mov
hlt
loopne
mov
test
ds
pop
add
jmp
add
push
and
adc
mov
mov
inc
push
addl
or
mov
addl
loope
adcl
mov
cmp
in
push
les
mov
pop
cmpsb
mov
movsb
shl
sbb
or
mov
notl
rorl
lock
sbb
jg
push
stos
lods
jne
cmp
cld
lock
insl
popf
dec
pop
mov
xchg
insb
xchg
jecxz
int3
rcrb
xor
adc
in
adc
inc
sbb
sub
loop
sub
push
lea
jge
lea
inc
push
idivb
mov
cmp
inc
mov
aam
fsubrl
or
mov
mov
or
aad
jp
inc
stos
in
mov
xchg
xchg
jne
jo
adc
cltd
inc
jle
mov
cs
ss
xor
or
pop
mov
aad
push
inc
aam
js
cmpsb
lock
sbb
outsb
or
sbbb
hlt
adc
mov
rol
xlat
xlat
mov
loopne
in
in
int
mov
roll
sti
add
mov
movsl
jmp
pop
testl
pop
fnstenv
add
push
mov
call
xor
or
xor
adc
lea
add
stc
or
cmp
inc
push
pushf
fwait
push
pop
push
popa
dec
dec
mov
js
test
je
cmc
insl
and
mov
mov
xlat
push
adc
and
mov
add
rclb
nop
mov
jmp
push
pop
xchg
enter
or
movsb
leave
adc
jno
icebp
and
cmp
es
push
fmuls
jl
xor
dec
ret
push
jmp
js
sbb
inc
scas
in
cmpb
inc
pop
mov
mov
fdiv
mov
out
jnp
orl
push
push
mov
xchg
enter
inc
je
loope
mov
mov
jbe
push
fwait
inc
push
inc
pop
cmp
insl
test
decl
add
push
mov
mov
sub
notl
das
or
pop
xor
inc
out
xor
mov
repnz
test
mov
orl
jne
cmp
les
cs
cmp
mov
andl
mov
fcompl
jle
push
push
loopne
lods
mov
push
pop
test
inc
mov
and
aas
fsubrs
mov
cmp
pushf
adc
jle
cmp
jae
or
push
jno
fmuls
enter
aam
out
shlb
mov
hlt
pop
mov
pop
stos
hlt
enter
std
cmc
sub
xchg
movsb
pop
or
jp
loope
dec
out
add
test
jmp
sbb
inc
fsubl
aas
xor
inc
or
loopne
outsl
fiaddl
mov
insb
push
push
push
shrl
mov
and
repnz
sbb
testb
sbb
or
pop
jmp
adc
ret
je
push
das
or
leave
push
mov
jno
cmp
pop
movsb
jmp
mov
push
nop
lock
pop
sub
imul
adc
fdivl
add
adc
incl
xchg
mov
push
lods
in
or
sbb
xor
or
mov
adc
in
out
cmpsl
adc
fs
and
pop
adc
mov
or
arpl
nop
and
dec
pop
xlat
adc
pop
mov
mov
ja
enter
jbe
and
rorl
scas
mov
cmpsl
and
sub
push
loop
ficompl
inc
dec
cmp
mov
outsb
xchg
lods
pop
js
cmp
add
push
bound
mov
shrb
pop
inc
cmp
fistps
fcoml
sbb
fcompl
dec
rolb
cltd
sbbl
xchg
xchg
push
addb
xor
inc
mov
lret
dec
pusha
das
mov
lea
sahf
mov
lods
mov
add
mov
lock
inc
jecxz
in
dec
add
inc
add
add
push
ret
pop
repnz
adc
inc
push
popa
nop
pop
and
shll
clc
divb
xchg
jecxz
pop
xlat
dec
in
jno
lea
xchg
mov
mov
cwtl
nop
loope
and
pop
sbb
imul
sub
int3
cmp
scas
fimuls
mov
xchg
add
mov
inc
inc
lods
das
int3
push
and
mov
mov
js
movsl
mov
or
sub
mov
add
xlat
xchg
xchg
scas
push
inc
xor
addl
xor
enter
or
out
adc
lods
subb
adc
mov
les
aad
mov
std
and
mov
jae
jae
fnsave
mov
jb
xchg
dec
cmp
testb
lods
call
and
test
and
mov
sbb
popa
or
fbstp
add
insl
mov
fs
xor
sbb
std
out
ret
mov
fdivr
roll
xchg
cmc
je
loopne
call
lds
imul
ret
xor
pop
pop
ficomps
jl
jmp
ficompl
rolb
jl
cs
dec
xlat
scas
sub
popf
jb
adc
ja
sbb
or
sti
lea
xor
add
lock
test
inc
cld
sbb
dec
popf
adc
add
push
sbb
mov
in
cmp
add
daa
mov
std
popa
add
rclb
or
subl
and
mov
cwtl
add
pusha
adc
or
sbb
andl
scas
jmp
aad
jbe
shlb
mov
inc
adc
jno
xchg
cmp
push
sar
dec
jecxz
ret
xor
dec
push
je
dec
jne
xchg
xor
mov
adc
push
push
ret
and
jmp
lods
pop
mov
adc
xlat
add
push
dec
lods
aam
int
movsl
xchg
ficoml
xor
cmp
je
mov
mov
sub
or
push
das
mov
xchg
jge
js
mov
jmp
jnp
and
or
inc
and
dec
jae
sub
pop
jno
pop
mov
mov
lea
cli
jb
adc
or
jecxz
inc
jae
cmova
lea
jo
jmp
lea
loopne
inc
pop
add
rcrl
daa
dec
arpl
mov
fucom
pop
ret
je
push
mov
jl
or
add
adc
out
add
leave
push
adc
cltd
ret
push
dec
loop
inc
repnz
xor
jnp
enter
dec
push
push
lds
and
inc
inc
cmp
or
mov
lock
sub
push
cmp
testb
rcrl
inc
int
jbe
sub
jp,pt
and
out
je
sahf
rorb
dec
loope
or
arpl
dec
and
push
pusha
and
test
inc
sub
outsb
lock
or
popa
gs
or
call
stc
jmp
dec
pop
inc
nop
aaa
adc
lea
push
dec
cmp
or
ret
cltd
pop
mov
push
cmp
mov
movsb
push
cmp
aaa
push
inc
or
jmp
icebp
lods
mov
jmp
cmp
je
aaa
jns
or
push
jo
dec
andl
pop
push
add
insb
mov
loope
mov
ret
jmp
adcb
mov
int3
jmp
add
lcall
enter
xor
popa
add
in
dec
add
incb
andl
orb
push
mov
ljmpw
popa
sub
shl
orl
fidivl
sbb
push
nop
push
cmp
icebp
adc
push
movsb
push
or
pop
test
les
rcll
cmp
and
adc
and
imul
sbb
sub
jbe
sbb
mov
xorb
adc
fwait
mov
sub
xor
adc
andl
popf
test
inc
stos
mov
dec
addb
dec
pop
imul
dec
add
add
sub
push
mov
pop
test
add
jle
push
fs
push
popa
pop
in
loop
or
mov
and
jg
mov
mov
ja
jge
sbb
mov
shrb
adc
fdivrs
mov
movl
mov
add
sub
movsb
inc
ret
rcll
and
mov
cmpsl
dec
jl
popf
pop
mov
js
daa
sub
xchg
les
push
jo
enter
insb
mov
mov
fsubrl
lea
rorb
popf
mov
fiadds
fnstcw
push
and
mov
movsl
gs
js
push
lret
sub
fs
xor
xor
mov
dec
pop
insl
jae
inc
mov
add
cmp
adc
xchg
mov
sbb
push
dec
xlat
mov
mov
inc
cmp
cmpb
je
imul
ljmp
leave
inc
sub
movsl
dec
sbb
and
jbe
sbb
mov
adc
in
nop
sbb
lods
push
inc
and
cmp
adc
movsb
jns
enter
mov
mov
imul
mov
les
les
mov
mov
mov
lret
and
pop
fimull
jae
lret
sahf
aas
rorb
insb
jns
push
daa
pusha
or
inc
ljmp
adcb
mov
dec
add
adcl
aam
jbe
mov
inc
dec
aaa
stos
sti
test
push
mov
das
jl
sub
xor
push
and
inc
sub
pushf
in
fiadds
or
mov
loopne
cmpsb
mov
push
subl
shll
imul
sbb
inc
pop
adc
out
adc
pop
lock
aam
push
je
incl
inc
sub
jns
mov
push
push
cmp
lods
inc
dec
xor
aam
dec
pop
push
xlat
lods
and
dec
inc
or
cwtl
sbb
sbb
pop
inc
sub
push
test
cmp
lea
pop
jb
xor
sub
lea
in
aaa
sti
pop
cli
sbb
fwait
sbb
cld
pop
inc
std
xchg
adc
sub
xor
lods
lock
hlt
mov
mov
xlat
and
movsb
cmp
or
fwait
push
mov
and
daa
and
adcl
mov
test
repz
pop
std
adc
in
push
cmp
jo
mov
cmp
cmp
cmp
shl
popf
or
mov
dec
cwtl
stos
ds
push
jg
sub
mov
cmpsl
add
xchg
cld
cmc
test
dec
mov
scas
fbstp
enter
aas
dec
stos
mov
cli
insb
cmp
inc
pusha
and
sub
xchg
add
add
or
xor
mov
jl
std
lret
push
out
cmp
jge
dec
stos
push
xchg
movsb
mov
jo
pop
xchg
cmp
xchg
cmp
test
xchg
cmpsl
push
and
and
sbb
shlb
add
pop
and
jl
or
outsl
jb
test
inc
sub
lds
sbb
add
adc
push
mov
dec
outsb
inc
je
sbb
enter
fidivrs
fwait
out
pop
aad
or
xor
and
in
xchg
adc
scas
pop
and
cmpsb
xchg
cmp
in
cmp
or
jne
adc
mov
js
orl
add
mov
dec
add
cmp
mov
fwait
aad
dec
roll
adc
sbb
add
push
adc
aaa
sbb
xor
dec
pop
pop
jb
in
mov
pop
xchg
xchg
pop
std
aas
mov
jle
movl
or
xchg
inc
push
jnp
and
push
popf
push
cmp
jo
adc
pushf
andl
and
add
inc
outsb
pop
popa
inc
fldl
je
sub
inc
and
subb
xor
xlat
and
push
imul
mov
js
movsb
xchg
mov
pop
sub
xor
loop
jne
sub
sub
mov
push
push
mov
xchg
cld
mov
lods
sbb
cltd
fbld
cmp
and
sub
jge
jmp
subl
icebp
push
push
je
jmp
nop
jb
rcll
out
das
dec
sbb
lcall
sbb
nop
leave
adc
dec
je
mov
pop
lret
cmp
or
xor
and
pop
add
lret
add
popf
pop
popf
mov
sbb
fs
cs
sub
pushf
dec
leave
xor
ss
and
leave
mov
add
je
jae
xor
push
adc
jmp
push
sbb
jno
xchg
sub
stos
adc
out
je
cwtl
xlat
pusha
les
dec
xchg
sub
shll
cmp
and
movsb
outsl
jne
mov
cmp
fs
mov
mov
roll
jne
or
jmp
adc
outsl
je
add
mov
push
mov
sub
mov
sarl
aam
add
imul
adc
add
shll
ret
xor
popf
pop
sub
lea
dec
shrl
add
sbb
cmp
push
adc
sti
pushf
fimuls
daa
adc
scas
pop
or
repnz
push
and
pop
xor
xchg
rcl
imul
fwait
clc
sbb
xorl
cmc
std
lret
jbe
cmp
popf
dec
not
loopne
and
lea
sti
xor
scas
add
adc
bswap
pusha
mov
adc
loope
or
add
daa
call
mov
fimuls
mov
into
fdivl
push
mov
mov
add
out
cmpl
leave
fsubs
test
stc
push
lea
lea
mov
mov
shlb
push
call
xor
inc
call
ret
cltd
push
xchg
or
dec
push
hlt
xchg
btr
inc
push
jnp
sub
loopne
pop
xlat
mulb
fs
mov
mov
push
dec
aad
sub
mov
stos
pop
and
jl
inc
je
and
out
pavgw
jle
lea
addb
dec
aad
mov
xchg
inc
push
push
sub
test
push
imul
and
imull
xor
push
add
pop
push
add
out
mov
sub
pop
pop
or
cmp
lret
in
fadds
lods
fwait
jb
dec
popf
sub
xchg
cwtl
cmp
xchg
add
imul
xor
cmp
das
aaa
stos
pusha
adcb
adc
jp
outsl
pop
adc
mov
push
pop
jge
lds
and
mov
xchg
pushf
push
cmpsb
jg
sbb
jp
ss
adc
adc
mov
mov
xorps
dec
lret
loope
shrb
and
jno
sub
or
xor
cmova
ret
mov
cmp
cmp
sbb
push
cmp
and
sbb
ret
sbb
pop
ret
xchg
and
sbb
xor
jle
rcrb
enter
and
inc
out
mov
jnp
mov
cmp
test
pop
fisttps
cmp
mov
sbb
leave
nop
cld
pop
xor
xor
and
test
fs
pop
cs
sbb
xor
sarb
mov
iret
adc
push
xor
inc
and
xor
fistl
ret
ds
cmp
cmp
sbb
sarb
or
sub
inc
das
xchg
sub
daa
sub
pop
pop
and
sub
and
nop
subl
sub
and
xchg
push
enter
js
pushf
inc
push
sub
adc
sbb
cwtl
jbe
mov
lods
and
stos
mov
ja
in
push
push
sbb
dec
in
sub
loopne
push
fisubl
sbb
lods
jae
fwait
dec
mov
mov
in
jecxz
jg
outsl
add
and
xchg
aam
or
outsl
jle
dec
movsb
cltd
fcoms
push
and
xor
popa
mov
cpuid
ja
lcall
mov
or
dec
sbb
repz
or
lea
repz
add
sub
push
adc
or
movsb
and
sbb
sbb
adc
and
mov
out
shlb
or
sub
inc
testl
mov
movsl
push
push
inc
jle
mov
mov
lcall
or
sub
insb
adc
cli
orb
movsl
fs
pop
in
jge
add
addr16
jmp
aaa
and
adc
call
pushf
dec
in
sbb
lock
icebp
dec
inc
sub
push
test
popa
adc
nop
mov
loopne
pop
mov
xchg
aaa
dec
xchg
sbb
outsl
sbb
and
cmp
add
push
into
dec
sub
push
sbb
mov
inc
rclb
out
inc
loopne
push
fcoml
xor
fimull
cmp
xchg
cs
push
out
mov
lock
shrl
xor
add
dec
sub
stos
sbb
test
inc
pop
pop
fsubrl
pop
push
xor
pop
push
sub
jo
push
dec
xor
inc
lret
test
adc
add
dec
push
push
ret
xor
or
push
push
push
icebp
or
and
ds
sbb
orl
and
mov
and
sub
dec
jmp
popf
cmp
je
inc
xlat
adc
and
cltd
hlt
mov
imul
xorl
add
push
stc
pop
add
push
pop
sbb
or
je
mov
testb
add
or
inc
mov
sahf
out
nop
mov
cmc
int3
nop
pop
pop
sbb
xor
call
fdivl
dec
lods
jp
je
cmp
pop
scas
mov
es
int3
pop
xlat
cmp
fisubrl
xchg
test
insl
mov
adc
and
lret
sub
push
xchg
rclb
jl
sbb
fidivs
sbb
mov
fcom
cmp
outsb
or
call
loop
mov
mov
aaa
movsb
jnp
xor
ffreep
cmp
inc
push
nop
adc
testl
ja
cmpb
cmpsl
pop
es
fdivs
push
ljmp
inc
inc
orl
xchg
testl
push
repnz
push
jo
das
lahf
cs
sbb
cmp
adc
call
or
das
or
test
cmpl
jne
push
loopne
shlb
jmp
filds
mov
mov
mov
jne
dec
add
fs
aaa
add
push
stos
enter
inc
push
dec
test
mov
push
andl
movl
mov
das
sub
shll
clc
sbb
jne
lds
hlt
sbb
lods
jge
mov
lods
sub
push
cs
adc
enter
xor
out
adc
mov
pop
add
and
int3
adc
and
mov
loope
leave
inc
push
das
inc
aam
jae
sbb
adc
fmull
nop
cmp
push
es
jae
jle
pop
cs
sbb
adc
testb
xchg
push
xor
mov
hlt
pop
or
mov
mov
push
icebp
sub
push
repnz
int
and
xor
das
pop
mov
mov
je
adc
je
cmpsb
and
lret
cmpsb
imul
in
mov
dec
fucom
call
jns
push
inc
dec
push
inc
jmp
roll
mov
arpl
xchg
bound
push
pop
mov
add
pop
es
bound
pop
mov
mov
pop
fdivl
add
pop
bnd
push
jmp
sub
sbb
push
pop
cmp
leave
push
xchg
mov
jg
bound
mov
inc
in
stos
loop
xor
movsb
sbb
dec
xchg
xor
pusha
adc
lcall
xchg
hlt
std
mov
cmp
sbb
mov
mov
mov
sbb
insb
mov
aam
cmp
jp
xchg
sbbl
test
std
pop
mov
push
xor
adcl
out
add
pop
mov
mov
add
xchg
imul
popa
jo
push
sti
mov
pop
push
inc
sti
test
push
mov
jnp
mov
shr
inc
and
pop
loop
fsub
cmp
jle
cld
jae
inc
add
outsb
mov
shrb
xor
add
pop
cmp
mov
cmp
loopne
ja
lret
ficomps
cmp
sub
jmp
ror
aas
xchg
sbb
dec
add
call
and
adc
sub
add
lret
xadd
or
cmp
icebp
dec
sub
sub
icebp
repnz
and
inc
xchg
xchg
cmovo
dec
sub
rcrl
push
cmp
out
rcrb
das
call
xor
movsl
aam
xor
imul
sbb
sbb
mov
dec
lret
lar
enter
add
rorb
add
frstor
movl
movsl
inc
popa
inc
mov
sub
mov
jp
push
add
fstpl
outsb
jae
or
add
leave
leave
in
cmp
or
push
pusha
and
pop
or
ficomps
or
inc
ret
insb
inc
lods
and
sti
in
push
add
push
sub
mov
or
xor
xor
push
pop
rolb
adc
and
inc
or
andl
xor
cmp
and
mov
xor
or
dec
in
and
adc
or
and
test
orl
jmp
add
dec
sbb
inc
dec
subl
xor
sbb
dec
rorb
mov
lock
inc
adcb
jb
xor
inc
mov
xor
mov
dec
stc
dec
mov
xchg
lea
sti
in
xor
inc
test
mov
stos
inc
inc
mov
enter
xor
adc
sbb
adc
inc
lea
orl
push
or
xor
and
popf
adc
pop
inc
mov
pop
adc
dec
cmp
push
jl
inc
add
test
lret
lods
adcb
movsl
inc
lods
fidivl
addb
jo
xor
add
adc
int3
xor
lds
fs
call
mov
fdiv
mov
dec
loop
mov
dec
scas
das
fs
les
sub
sub
mov
dec
push
in
cmp
jl
jnp
notb
jae
pop
push
push
xor
mov
mov
out
push
daa
adc
sbb
jo
jb
inc
or
out
je
sahf
incl
das
inc
push
sahf
rolb
pop
cwtl
add
push
fdivl
adc
sbb
repnz
jo
rorl
mov
add
sets
loope
inc
sub
and
sbb
or
rcrb
inc
or
bound
xchg
xchg
sub
push
sub
xchg
movsl
or
dec
xor
int
inc
add
dec
pop
push
sub
cwtl
xor
je
adc
or
or
pop
call
rorb
fwait
add
enter
xchg
mov
fnsave
xor
fdivs
inc
push
or
mov
add
xor
fadds
or
and
fistpll
addl
pop
sub
out
test
adc
and
inc
adc
out
adc
lret
notb
andb
addr16
inc
cmp
push
pop
or
and
icebp
rcr
daa
call
roll
inc
cmpb
cli
cmp
adc
sbb
dec
mov
stc
sbb
adc
mov
cs
or
push
mov
rclb
sarl
lods
add
or
mov
mov
inc
enter
or
pop
dec
add
sub
add
rolb
loop
jbe
in
pusha
loope
or
push
lock
mov
popa
xorb
cmp
sbb
lcall
movsb
push
bound
adc
mov
cmp
push
add
or
inc
inc
push
mov
add
cmp
jns
add
inc
icebp
push
add
sbb
lods
or
push
add
inc
mov
push
ret
enter
das
jecxz
add
jo
fwait
cli
sub
orl
jmp
ss
sbb
mov
js
and
xchg
outsl
movsl
mov
jle
sahf
or
adc
movl
jg
subl
mov
movsb
arpl
hlt
adc
adc
loopne
push
cmp
xorl
mov
inc
insb
push
sbb
aas
sbb
loopne
mov
mov
sub
xchg
sub
sub
xor
insb
cmp
push
loope
movl
imul
aas
add
lea
test
je
push
sti
call
mov
cmp
push
push
sbb
push
shlb
mov
out
cmp
dec
push
and
adcl
xchg
in
sub
sub
icebp
cmp
jbe
dec
repz
add
dec
add
xorl
inc
add
sbb
cwtl
lods
ret
lock
adc
cmp
cwtl
mov
pop
push
stc
mov
rcrb
adc
sbb
pop
or
lock
xchg
xchg
aam
fistps
rcrb
mov
add
cmp
dec
sbb
adc
in
add
js
add
jae
test
bnd
addl
jg
xor
mov
mov
enter
add
stc
xchg
dec
add
sarl
or
mov
insl
jnp
lea
sub
add
bound
push
pusha
fbstp
test
iret
lahf
lock
das
rorb
adc
and
adc
or
in
shr
repnz
repz
mov
imul
subl
mov
xchg
or
int3
push
push
push
pop
sub
pop
roll
lea
mov
jge
sbbl
sub
cs
outsl
or
lods
mov
in
jle
cmp
or
pushl
push
sarl
inc
jno
mov
gs
cs
xchg
push
dec
xchg
pop
shll
in
push
xor
cmp
jmp
mov
cmp
cmpsl
adc
jmp
mov
cli
or
test
lds
inc
movsl
jne
and
and
mov
adc
fildl
in
mov
mov
push
xor
sahf
shrb
add
mov
cmpsb
add
pop
decl
enter
mov
jne
xchg
arpl
js
add
movsbw
ds
cmp
jne
and
dec
in
jbe
je
adc
fwait
dec
gs
arpl
cpuid
mov
mov
cmp
mov
mov
push
inc
negl
rolb
mov
dec
cmp
adc
jnp
push
fmull
insb
in
je
lret
call
stos
pop
jns
sbb
cmpsb
loope
jecxz
sar
push
arpl
imul
sub
mov
inc
std
imul
jle
in
mov
call
ja
lea
dec
dec
dec
lods
repnz
jns
push
xor
mov
scas
push
sbb
push
shlb
dec
cmp
lods
sbb
or
cs
push
xor
cs
outsl
shll
in
xchg
scas
pop
push
sub
in
shrb
xchg
jno
pushf
cmpsb
dec
dec
sbb
push
push
std
lock
dec
shll
sbb
pop
pushl
and
pusha
push
dec
add
and
loope
shlb
ds
sub
imul
cmp
jmp
pop
je
add
mov
movsl
loopne
ret
mov
lods
ljmp
or
inc
int
mov
iret
dec
iret
dec
pop
sbb
dec
ds
push
call
dec
je
push
jg
sbb
xchg
add
mov
sbb
sbb
add
cmp
xor
push
js
cmc
mov
xchg
mov
or
sbb
xchg
das
push
lahf
sbb
adc
mov
cmc
ret
mov
push
shll
pop
dec
and
xor
pop
adc
sbb
dec
in
movsb
mov
adc
sub
xor
push
neg
sub
hlt
leave
and
jo
or
test
sbb
add
lret
clc
cmp
ret
sbb
mov
jo
insl
loop
stos
push
fprem
gs
test
jae
fidivl
push
cmp
xor
inc
push
mov
xorb
cmp
imul
pop
mov
sbb
scas
push
jle
mov
add
movl
push
sub
or
cs
lock
mov
in
inc
adc
lret
movsl
mov
adc
mov
push
adcb
fsubs
cs
push
add
shll
xor
or
test
adc
adcl
jae
and
jno
xor
pop
adc
or
add
inc
xor
jne
or
mov
movl
movsb
ja
mov
xor
jne
inc
push
je
pop
jge
or
sahf
sub
int3
rorb
cmp
ret
cltd
add
push
xlat
fwait
shrb
das
and
ja
push
push
inc
jmp
lods
add
sub
and
jge
mov
push
outsl
add
sub
cld
add
je
in
jne
movsl
add
add
shll
xor
pusha
rolb
js
or
adc
push
and
mov
sbb
sub
push
aam
clc
sub
sti
mov
jecxz
push
add
push
push
push
push
popa
es
and
call
mov
jne
cmpsb
adc
cltd
out
loope
and
inc
nop
icebp
adc
cmp
mov
nop
call
sub
outsl
adc
rorb
cmp
jne
and
sub
cmp
mov
outsl
or
adc
cs
sub
xchg
xor
add
das
adc
dec
push
and
scas
stos
es
pusha
ret
dec
dec
xor
add
dec
xchg
nop
outsb
jno
cs
mov
adc
xchg
sahf
jmp
shlb
sahf
scas
clc
popa
mov
fildl
push
sub
cs
test
or
cmp
xor
andb
jbe
add
mov
inc
cwtl
lcall
lods
popf
movsb
cmpsl
adc
push
lcall
adc
pop
add
lods
movsl
xor
lods
fnstsw
mov
das
mov
mov
call
cmp
jle
cmp
js
add
xor
jbe
jp
xchg
xchg
jbe
mov
mov
add
enter
icebp
xchg
cmpb
inc
nop
pop
dec
std
outsb
sbb
jnp
imulb
add
scas
adc
dec
sbb
adc
iret
rol
addr16
ss
cmp
mov
dec
pop
pushl
shll
es
rorb
mov
das
inc
mov
dec
mov
adc
sbb
leave
push
nop
add
cltd
xchg
imul
push
xor
mov
enter
xchg
sbbl
mov
adc
sbb
out
jae
mov
adc
and
cmp
xchg
pusha
cmpsb
jnp
push
sarl
push
popa
mov
mov
push
pop
jo
les
movsl
data16
std
sbb
jecxz
in
shll
dec
clc
jle
les
cmp
or
es
mov
inc
jne
adc
in
xlat
jb
jo
or
jnp
add
cmpb
push
push
xor
rorl
and
cwtl
lea
out
add
out
lea
dec
fisttpl
add
adc
fnstenv
outsl
nop
mov
push
out
sbb
cmpsl
sarb
in
movb
adc
jo
xor
jbe
pop
stos
add
in
xchg
insb
fmull
cs
cwtl
sbb
ja
or
aaa
jnp
clc
adc
xchg
movsl
cli
and
push
rorb
rcrb
mov
ds
cld
jnp
mov
ret
cmp
jp
aas
stc
pop
pop
jmp
and
dec
movsb
je
mov
lcall
andl
nop
cmp
cmp
push
ss
cmp
movsb
add
fdivrs
pop
dec
pop
or
pop
mov
add
les
outsb
test
adc
or
pop
int3
je
mov
clc
xchg
notb
pop
push
loopne
mov
nop
lcall
and
add
shll
in
mov
inc
adc
or
cmp
xchg
adc
xor
push
daa
dec
inc
add
outsl
test
cmp
je
mov
jle
jno
pop
ljmp
jle
dec
leave
or
fsubl
repz
loop
dec
test
and
frstor
dec
mov
bound
nop
sub
jg
lods
nop
pusha
sub
or
lods
pop
andl
adc
inc
das
xchg
or
cmp
jg
adc
test
dec
add
in
cmp
mov
rorl
or
push
xchg
into
arpl
shrb
inc
nop
sti
jno
push
shll
cmp
inc
mov
fldenv
sbb
loopne
cmp
push
loopne
pop
rol
or
loopne
inc
mov
cmp
fsubrp
inc
jb
xchg
fs
scas
dec
shlb
mov
xor
add
sbb
pop
xchg
mov
adc
out
mov
mov
adc
push
adc
jle
add
cmpw
sbb
cmpb
pusha
sub
push
push
in
scas
addb
ss
push
pop
mov
add
push
push
pushf
push
je
pavgb
inc
pop
mov
mov
mov
inc
inc
cmp
add
sbb
fwait
sub
lcall
in
pop
cmp
shlb
pusha
jne
dec
clc
orl
addb
jl
sub
jmp
mov
pop
sbb
mov
pop
cmpl
push
adc
in
hlt
pushf
rorl
push
or
sahf
add
inc
push
add
sbb
mov
sbb
add
adc
sub
adc
loop
mov
sbb
cmp
jo
es
push
lcall
adc
dec
lods
adc
mov
inc
testl
push
cli
cmp
add
hlt
jo
adc
push
sub
gs
in
and
push
sbb
mov
cmc
bound
fs
cmp
jne
jb
fs
push
xchg
add
cltd
push
in
jmp
pop
push
pop
xchg
dec
xor
push
inc
jo
jnp
lret
add
xor
push
dec
cmp
sbb
or
inc
movl
and
popa
psllw
and
movsb
pop
xchg
pop
or
stos
fsubrl
jmp
xchg
push
icebp
lock
addr16
fiaddl
push
inc
sbb
and
loopne
gs
sub
sbb
mov
lods
movsl
push
mov
fiaddl
adc
xor
ret
loopne
nop
inc
fs
lds
mov
adc
cmp
or
push
test
addl
orl
bound
xor
lea
adc
lahf
mov
mov
inc
inc
lcall
ss
and
push
push
pop
cmpsb
enter
lret
lcall
push
in
add
push
aam
or
jmp
test
loopne
sub
mov
push
test
xor
shll
xor
xchg
lods
imul
inc
stc
gs
and
push
sbb
cmp
sub
or
jo
popf
add
push
add
dec
cmp
push
add
sar
pop
mov
mov
movsb
push
addl
sub
jne
ror
out
jns
and
push
arpl
sub
rorl
jp
icebp
stos
mov
in
dec
popa
and
fdivrl
sbb
movsb
ljmp
mov
jl
pusha
imul
jne
mov
int3
inc
hlt
and
add
lea
add
cmp
loop
test
jne
test
loope
jnp
and
push
and
adc
test
je
push
and
jmp
call
ss
add
mov
pop
fists
jnp
push
call
fnstsw
add
add
idiv
cmp
or
shlb
test
mov
jmp
or
fst
sbb
fmuls
push
sbb
xchg
ficoml
add
or
sbb
shl
ret
dec
mov
mov
stc
stc
pop
lods
or
adc
or
incl
fcom
mov
pop
lret
int3
sub
push
addl
mov
lahf
cmp
nop
dec
in
adc
or
mov
stc
cmp
jecxz
repz
mov
in
sub
in
and
decl
xor
sbb
push
xorl
js
jp
push
shlb
sub
push
lock
in
push
inc
ja
enter
jp
lea
jmp
push
push
das
adc
ret
addl
or
and
pop
dec
loope
popa
nop
inc
cwtl
cmpsb
dec
mov
sti
pop
dec
test
xchg
cld
inc
scas
lods
xchg
jp
inc
push
dec
dec
inc
sub
and
inc
pop
shll
rcll
daa
sahf
push
xchg
jp
bound
xor
inc
add
pushf
xchg
mov
cmc
add
mov
push
or
enter
mov
sub
push
mov
aaa
lds
xchg
mov
mov
bound
es
ja
sbb
aaa
adc
mulb
dec
clc
jle
mov
push
dec
sub
push
or
push
shrb
cmpsb
or
popa
sbb
ss
cmp
inc
inc
jmp
fwait
mov
jmp
sub
out
jnp
add
mov
jns
in
dec
inc
inc
dec
cmpsl
jno
push
inc
jne
mov
aas
and
adc
call
sbb
sub
repz
or
dec
ja
xorl
mov
lock
inc
sub
adc
and
scas
clc
fdivs
ffree
movsl
inc
xor
sbb
ret
push
xor
inc
ret
dec
push
call
pop
setbe
movsb
xor
inc
ss
ret
xor
dec
js
cmp
insl
loopne
je
adc
rclb
jge
mull
and
xchg
inc
int3
loope
rolb
xor
push
add
jnp
js
pusha
add
nop
xchg
mov
sbb
mov
mov
push
gs
aaa
mov
lea
cmpl
movsl
dec
add
dec
inc
mov
add
in
repz
lods
aam
sub
xchg
loopne
call
add
dec
lds
inc
enter
fnsave
cmp
jmp
add
push
add
sbb
fnstsw
pop
pop
adc
mov
sbb
xor
mov
movsb
sbb
add
pusha
enter
mov
inc
or
movsb
inc
xchg
rolb
pushf
jle
pop
lock
mov
jge
psrad
mov
mov
popa
and
fldenv
lea
push
xchg
cld
jbe
lock
cmp
gs
mov
jne
pushf
lock
and
out
out
ret
mov
push
pop
sub
and
add
cmpsb
cmp
cmpsb
cld
hlt
xor
xor
sub
shlb
mov
jno
mov
or
push
pusha
les
lcall
mov
lods
test
push
and
cmp
adc
iret
sub
sbb
and
xchg
loopne
adc
cmp
jmp
push
jg
mov
cmp
inc
cmp
out
pop
push
sbb
or
push
pop
inc
imul
out
mov
cmp
inc
jo
lea
and
or
imul
and
es
sub
cmp
ja
mov
push
fs
out
sbb
imul
and
hlt
dec
push
sub
sub
pop
lods
adc
icebp
mov
hlt
fcoms
outsb
or
and
add
lock
lcall
or
inc
or
sti
test
pop
incl
mov
or
mov
push
mov
orl
or
or
inc
mov
ret
xchg
loope
xchg
or
sub
xchg
pop
xorb
imul
add
fs
fsubrp
mov
in
dec
sub
xor
repnz
and
pop
test
push
outsl
add
scas
mov
fildl
push
clc
or
cs
sbb
cmp
jne
aaa
int3
test
test
pop
sbb
jo
dec
mov
fcomp
icebp
jl
push
add
add
mov
imul
xor
cmp
adc
push
adc
cmpsl
loope
sub
add
mov
lea
test
pop
scas
mov
lock
xchg
dec
jne
rcr
dec
or
cmp
add
imull
and
negl
imul
roll
mov
jo
mov
call
sub
ds
xor
or
sub
inc
ja
sbb
and
test
fsubs
xchg
or
mov
xchg
movsb
sbbl
inc
cmp
add
dec
sbbb
xor
sbb
inc
inc
xchg
or
loope
popf
xor
pop
inc
add
nop
mov
fdivl
push
adc
pushl
fiaddl
push
cmpsl
add
pop
psubsw
ja
inc
mov
push
push
push
jecxz
mov
xor
arpl
in
ja
pusha
add
jmp
inc
rolb
adc
lret
pop
jmp
enter
in
and
or
adc
jecxz
push
push
inc
add
negb
sahf
cmc
pop
add
outsl
fidivrs
nop
push
imul
pop
loopne
cltd
arpl
mov
mov
shll
xor
sbbb
adc
mov
or
add
pop
pop
pushf
mov
inc
cmove
sub
scas
in
cmpsl
outsl
cmpsl
rorl
inc
sbb
mov
jle
test
int
sub
adc
mov
push
push
xor
imull
adcl
add
ret
aaa
cmp
sbb
sbbl
ja
jmp
bound
add
adc
int3
andb
or
fiadds
insl
xchg
notl
add
cmpsl
sub
sub
jo
fbstp
sbbb
or
ret
sti
sbb
sbb
sub
andl
sbb
lret
pop
insl
shl
mov
adc
xor
fistps
lock
nop
ret
xorl
in
outsl
add
shrl
dec
popl
fs
xor
mov
cmp
das
inc
sub
push
daa
pusha
xor
rcrb
push
aad
push
add
repz
mov
jp
sub
adc
mov
sub
or
in
repz
or
or
inc
outsl
lret
cmp
mov
pop
fs
xchg
xchg
test
sbbl
test
loop
fnstsw
add
sub
mov
push
xor
filds
testl
addl
jb
popa
test
addps
xor
or
xor
lea
adc
sub
loope
dec
dec
xchg
sub
dec
jo
dec
mov
cmp
add
and
mov
xchg
in
clc
sub
add
add
mov
lea
inc
sbb
je
dec
movsb
xchg
cmp
nop
push
loop
cld
mov
or
pop
push
out
nop
or
sbb
imul
fs
add
add
push
roll
out
cs
std
ss
popf
mov
xor
rol
add
mov
mov
cmp
adc
adc
push
in
cmpsb
dec
xchg
or
bnd
sbb
cwtl
in
cmp
add
push
test
sub
sub
pop
mov
arpl
cmpsl
lods
pop
testl
pop
lahf
mov
dec
int
roll
or
mov
mov
push
sbb
aad
xor
jo
mov
xchg
aam
testl
lcall
xchg
and
cmp
leave
or
test
add
push
or
jno
mov
cmp
push
stos
or
faddl
jecxz
inc
add
mov
mov
call
add
jmp
xor
lea
adc
xor
xor
push
daa
xor
ret
les
dec
and
adc
shll
mov
add
xchg
andb
pop
pop
sbb
mov
sub
cmp
dec
in
pop
inc
sbb
leave
dec
and
pushl
shlb
out
add
jns
cmp
sub
daa
mov
in
jns
ds
cmpsl
adc
xlat
filds
or
ja
mov
add
or
mov
cmp
xchg
or
loope
mov
pop
add
and
fimull
add
dec
mov
xor
jg
or
in
fwait
xorb
cmp
test
pusha
sub
movsl
call
xor
or
xchg
push
jns
dec
push
cmp
enter
adc
xor
repnz
in
push
gs
add
repz
adc
in
dec
jo
sub
dec
data16
jle
out
jmp
adc
icebp
rolb
clc
and
mov
in
fsts
or
adc
lods
test
push
adc
add
les
xor
inc
clc
mov
and
cmpsl
push
pop
adc
shl
in
pop
mov
mov
sbb
inc
or
stos
and
pop
cltd
jno
push
cs
pop
add
fidivrs
dec
xchg
pop
sbb
or
or
jo
adc
jbe
add
xor
inc
ficomps
aaa
js
or
mov
mov
pop
or
mov
test
sub
lds
sbb
push
outsl
cltd
loop
lcall
call
or
sbb
ljmp
in
mov
jae
cmp
test
cmp
add
popa
mov
adc
and
adc
add
sub
dec
sbb
jl
es
adc
sub
scas
jns
das
icebp
or
xor
ret
js
mov
sbb
and
dec
sbb
cmc
mov
sarb
sub
cmp
clc
fwait
sbb
jecxz
mov
jno
mov
mov
cmp
mov
and
in
sbb
aaa
mov
outsl
aam
cmpsb
aaa
or
xchg
push
adc
dec
sub
pop
lea
xchg
jmp
mov
sbb
loopne
mov
jns
dec
inc
loopne
push
pop
jge
mov
mov
xchg
jmp
or
dec
cmp
inc
push
mov
inc
xadd
or
aam
stos
inc
loope
cmp
lock
push
fs
lock
mov
cmp
js,pn
push
or
adcb
and
repz
xchg
sbb
mov
push
stos
adc
add
add
sub
ja
mulb
push
mov
nop
pop
add
pop
cld
cs
das
rcll
mov
jge
jb
es
outsl
jns
jno
std
add
push
mov
sbb
push
jp
push
dec
add
arpl
fisttps
arpl
ja
lds
mov
mov
mov
je
or
jmp
movsl
push
cli
push
pop
push
and
mov
stos
jne
jmp
movsb
imul
daa
dec
cmc
add
loope
sbb
xchg
pushf
add
adc
adc
test
dec
push
push
adc
das
and
pop
repnz
dec
or
adc
add
ret
xchg
add
pushf
or
test
dec
test
fiadds
sub
test
loop
mov
or
adc
mov
mov
or
sub
push
sbb
and
leave
jmp
xor
mov
and
shr
callw
jbe
mov
push
mov
je
sbb
adc
cwtl
push
jg
adc
add
push
adc
cmpsb
jbe
out
or
jns
add
jno
lea
repnz
push
dec
inc
cmp
adc
adc
xchg
push
icebp
lds
pop
or
sbb
aaa
sbb
pusha
sbb
and
nop
popl
pop
pusha
jecxz
adc
cmp
pop
jns
or
push
cmp
lahf
mov
addl
jo
or
outsb
fisttpll
mov
xor
sub
outsb
push
add
mov
rclb
jno
inc
fstl
pop
popa
push
jge
xchg
call
mov
cmp
or
push
jns
inc
and
dec
mov
lret
inc
push
sub
push
xchg
pop
add
pop
int
add
imul
xchg
add
or
mov
sarb
pop
sub
rcll
or
dec
jo
or
add
push
jle
jne
lret
fcomps
rcl
mov
sbb
jg
jbe
js
push
daa
mov
dec
xor
xchg
and
test
mov
rolb
push
adc
jne
mov
sub
scas
adc
sub
cwtl
and
je
push
mov
pop
inc
jle
mov
jnp
std
call
jg
xchg
hlt
lods
aaa
sbb
or
mov
lods
mov
ljmp
je
pusha
sub
rcll
or
jecxz
mov
lahf
push
pop
push
push
daa
inc
jmp
jno
cmp
or
add
gs
fldenv
loope
dec
fstps
inc
sbbb
rcll
mov
mov
add
dec
rcrl
sarl
lret
mov
nop
shrb
movsb
andb
movsl
jb
daa
push
mov
pop
insl
jb
shll
loope
shl
sbb
cld
cmp
adc
gs
sbb
adc
add
jno
in
mov
shlb
mov
dec
or
sub
push
jecxz
xor
out
sub
pop
and
dec
clc
cmp
enter
cmp
es
xor
xorb
jmp
push
std
mov
dec
insl
mov
je
dec
adc
sbb
add
push
pop
fsubr
add
cs
hlt
pop
js
push
test
mov
sti
jne
push
mov
lods
sarl
mov
sbb
pop
ret
je
mov
mov
push
jnp
cmpsb
bound
ret
adc
push
mov
pop
or
subl
mov
repnz
adc
fwait
mov
xchg
sub
fisubs
jge
cmpsl
mov
repz
and
jne
push
cmp
jmp
inc
popa
adc
aad
or
push
insb
ss
push
mov
add
xorb
call
dec
push
xor
xchg
mov
in
inc
and
imul
mov
pop
xor
insl
lds
mov
pop
arpl
lock
sbb
cmp
mov
lahf
and
out
dec
call
mov
inc
adc
repnz
mov
pop
in
pop
ret
adc
stos
inc
push
xor
or
clc
sti
sub
pop
imul
jnp
add
pop
and
cmp
pusha
push
pop
and
cld
aam
repnz
and
push
mov
into
cmp
test
orl
call
sbb
push
aas
stos
inc
adc
fldz
and
add
jge
pop
imul
cmp
and
sub
mov
scas
or
inc
pop
sbb
push
fdivl
sbb
xchg
push
add
call
mov
movb
lret
cmpsb
adc
sti
xor
xchg
mov
mov
add
adc
sub
inc
mov
outsb
rol
mov
in
loop
addr16
or
lea
fisttpll
mov
xchg
adc
sub
add
loopne
lea
fsubs
lret
movsl
mov
xor
add
call
mov
mov
ds
jns
ret
fsub
in
aad
add
jg
faddl
cmpl
sbb
push
and
mov
mov
adc
adc
cmp
icebp
repz
outsl
push
cmp
jle
cmp
jp
push
cmp
cmp
add
out
cmp
add
add
inc
jmp
test
incl
movw
add
ljmp
jne
dec
fwait
ljmp
fs
pop
idiv
call
je
flds
mov
clc
sub
adc
cmpsb
or
aad
push
adc
xchg
add
mov
mov
mov
jne
jne
cmpb
popf
add
outsl
fnstenv
push
mov
push
push
sub
or
hlt
aaa
shlb
xor
dec
mov
popa
sub
imul
jmp
sub
je
jae
pop
arpl
or
xchg
dec
mov
or
adc
and
adc
xchg
pushf
push
add
orb
xor
sti
push
and
adc
lock
mov
pop
test
mov
enter
xchg
or
aas
adc
enter
iret
cmp
xchg
add
add
pop
daa
bound
andl
outsb
pop
pop
pop
push
les
sbb
xchg
add
inc
cmpsb
nop
or
rorb
or
sbb
movsb
or
adc
adc
cmp
add
inc
jge
push
ror
dec
push
enter
mov
adc
fdivl
pop
pop
jl
outsl
jl
mov
mov
mov
cmp
and
movsl
adc
fistpl
add
push
data16
sub
sub
or
xor
in
mov
mov
cmp
and
or
mov
lea
add
dec
pop
or
add
pop
lcall
pop
nop
popa
adc
push
leave
mov
fldcw
adc
mov
or
loop
test
js
repnz
sub
jl
sbb
ret
enter
aaa
sbb
pop
and
sbb
sbb
dec
in
popa
mov
cmpsl
sbb
ret
mov
daa
jbe
fwait
ds
inc
subb
push
xor
lahf
outsb
and
scas
loopne
pop
cmp
push
xorb
fstl
adcl
ljmp
movsb
adc
adc
adc
push
push
xor
cmp
mov
and
xchg
icebp
mov
or
inc
data16
add
pusha
add
popf
xor
sbb
xchg
pop
jmp
sub
pop
add
jb
adc
adc
fs
aas
pop
add
xor
nop
cmp
inc
add
adc
lea
sbb
adcb
test
sub
frstor
pop
adc
push
sbb
xor
int3
jge
lret
pop
push
imul
adc
adc
mov
loope
and
xor
out
mov
in
rol
jo
mov
sbb
push
nop
frstor
inc
mov
cwtl
mov
or
add
inc
dec
add
xchg
sbb
push
cmp
or
add
aaa
inc
icebp
ficoms
inc
xor
xchg
xor
add
mov
shrb
cmp
xchg
insb
mov
dec
rcll
mov
nop
add
or
in
adc
mov
sub
outsl
jne
sbbb
xchg
add
lods
push
bswap
lods
add
pop
fadds
or
lock
nop
adc
add
xchg
sbb
fiadds
or
adc
push
lea
sbb
mov
push
and
pavgb
ja
outsl
fdivrs
or
outsl
mov
orb
sbb
dec
sub
cli
cmp
in
rolb
xor
gs
or
jo,pn
sub
sbb
jbe
push
nop
inc
inc
and
add
fs
insl
mov
push
stos
imul
fcom
lock
lret
push
mov
pop
dec
add
add
insb
xchg
sbb
push
popa
mov
loop
stos
cmp
jne
aad
je
stc
lea
xchg
push
popa
xchg
mov
dec
jno
sbb
cmovae
mov
hlt
pop
cltd
orb
dec
cs
add
add
test
add
xchg
out
dec
sbb
jne
add
sbb
scas
xor
xchg
dec
mov
adc
add
xlat
nop
mov
push
jmp
sub
dec
pop
mov
jnp
cmp
stos
jg
adc
xchg
cmp
cmp
popa
and
push
addb
push
test
pop
push
rclb
adc
adc
add
push
rclb
push
push
lea
mov
icebp
filds
mov
lea
ret
ds
cmc
lahf
lea
mov
jecxz
add
fdivs
cltd
roll
adc
loopne
pop
and
dec
mov
ds
cmp
push
jle
push
sbbb
inc
push
and
popa
notl
mov
jbe
aaa
or
pop
jnp
in
orb
mov
sub
jle
sub
ds
sub
add
shrb
xchg
dec
add
fcompl
fnstsw
test
je
loope
mov
jp
movl
xor
push
sbb
fisttps
inc
jmp
sbb
and
and
fstpl
pop
xchg
adc
pop
or
fistpll
mov
xor
and
loope
fsubrp
lret
sub
pop
adc
xchg
inc
xchg
or
sbb
adcl
inc
aaa
aad
sbb
or
insl
mov
scas
push
xor
xor
scas
sub
or
orb
sub
add
je
mov
pusha
dec
lahf
jns
stc
jge
sub
sub
std
add
into
mov
and
das
pop
xor
inc
insl
pusha
popf
and
mov
sub
jnp
ja
pop
leave
inc
jo
mov
aaa
jo
sub
adc
and
lret
pop
call
xor
sbb
addb
andl
dec
dec
mov
mov
push
dec
dec
and
mov
jnp
add
mov
bound
mov
cltd
sub
out
xor
clc
push
add
lods
ss
xchg
cmp
jb
nop
decb
shld
add
mov
add
sbb
lea
push
push
pop
mov
jns
mov
push
push
je
mov
add
pop
fistpll
push
leave
adc
mov
push
adc
push
push
xor
inc
or
or
or
cli
push
loope
mov
push
push
push
testb
pop
pop
scas
leave
dec
ljmp
pop
or
loope
push
mov
out
cwtl
dec
cld
pusha
add
mov
fimull
shlb
faddl
adc
add
push
and
xor
popf
divb
push
adc
push
andb
xor
xor
test
push
sarb
dec
inc
cmpw
jne
cmc
out
imul
cmp
mull
inc
push
jge
mov
dec
sbb
lea
cmp
or
pop
add
sub
out
xorw
or
xchg
sub
fdivr
inc
jo
push
push
sets
dec
inc
add
push
dec
ret
mov
pop
roll
nop
pusha
addr16
sub
fsubl
mov
dec
cmp
iret
adcb
sbb
das
roll
sbb
add
xor
icebp
rclb
pop
mov
mov
adc
test
inc
stos
dec
rorb
test
adcl
adc
leave
and
jne
adc
push
jmp
adc
pop
sub
mov
loope
mov
sbb
pop
mov
fsts
test
mov
mov
rorb
xchg
or
movsb
std
push
in
add
movsb
jns
lock
xor
and
cmp
sub
ss
xchg
bswap
push
adc
add
add
sub
daa
and
rolb
pushf
mov
test
mov
loope
or
mov
mov
sub
pop
clc
push
stos
pop
pop
xlat
andl
add
loopne
cmp
cmc
xchg
lods
loopne
sub
xchg
jo
sti
pop
je
outsb
jno
mov
xor
stc
jmp
ret
dec
xor
push
mov
ljmp
pop
and
shrb
sub
cmp
cltd
mov
out
shrl
pop
pop
clc
add
or
jecxz
cmc
dec
jl
subl
shlb
int3
test
add
pusha
es
mov
pop
shlb
pop
sbb
movsb
fildll
or
or
inc
fidivrs
movsb
outsl
adcl
fwait
les
and
outsb
pop
lods
mov
jge
jae
dec
sub
add
or
sbb
test
mov
lret
jne
in
cmpsb
movsl
mov
das
addb
xchg
std
push
or
adc
push
sbb
inc
push
mov
inc
adc
add
mov
xchg
adc
push
xchg
jb
adc
dec
pop
mov
lods
psrad
mov
xor
in
jbe
mov
ret
in
pop
mov
test
popa
test
push
ja
jo
lahf
ljmp
push
push
xor
mov
mov
jge
add
lods
jmp
flds
and
xor
inc
jg
je
andl
sbbb
sub
outsl
lcall
and
push
dec
jne
xor
or
jmp
adc
pop
push
or
xchg
jmp
or
inc
aaa
rclb
dec
mov
out
or
lods
inc
out
sub
xchg
mov
les
jmp
out
out
out
add
scas
jge
jmp
or
cwtl
jmp
lea
push
mov
in
lret
jmp
add
adc
hlt
push
mov
in
jb
and
dec
or
push
enter
je
mov
loopne
or
push
cmp
push
or
pop
push
rcrb
and
dec
sbb
enter
les
enter
hlt
dec
adc
nop
inc
push
cmp
inc
push
cmp
sbb
cld
dec
sbb
xchg
enter
mov
mov
fcoms
sbbb
aad
push
adc
add
push
xor
sahf
out
sahf
ds
push
pop
data16
sahf
out
jp
mov
out
mov
ljmp
push
or
sbb
xor
repz
inc
dec
pop
insb
jbe
mov
test
mov
repz
in
out
adc
outsb
lret
lret
push
xchg
push
sbb
or
mov
mov
jle
andb
shlb
mov
daa
or
push
aaa
addr16
dec
inc
fcom
adc
cmpb
add
mov
int
shll
add
xor
add
outsl
ss
or
dec
dec
lahf
fwait
jmp
fisttpll
jo
lea
cmpsl
pop
push
rcrl
push
in
inc
mov
and
test
push
lods
call
add
out
fcompl
lock
das
jmp
nop
mov
xor
ret
das
mov
xlat
arpl
orl
adc
jae
sbb
dec
leave
inc
jb
arpl
test
dec
cs
dec
test
or
mov
rcll
xchg
popa
xchg
movups
dec
mov
cmp
rorb
cmp
jge
cmp
sub
cmp
hlt
movsl
shll
push
pusha
lock
out
dec
sub
add
shlb
and
push
xchg
sti
mov
jno
inc
cmpsl
cmpb
adc
andl
rcrb
or
mov
mov
notb
gs
ret
or
cmp
dec
and
enter
add
xchg
push
outsb
lret
or
sub
or
enter
adcb
shrb
cltd
bound
xchg
sub
and
xchg
push
decl
inc
mov
fsubs
ja
iret
jmp
dec
jno
inc
and
jo
inc
push
sbb
fdivrl
movb
insl
lret
jg
adc
sub
push
loopne
and
arpl
rolb
aad
stos
xchg
push
insb
das
pop
xchg
jmp
add
or
scas
addl
sub
push
or
lea
mov
mov
ja
jne
les
cmp
jnp
sub
ss
xchg
je
mov
ss
mov
push
mov
jae
int3
cmc
sub
sbb
mov
sbb
inc
sub
mov
sbb
fs
mov
lock
push
mov
fimuls
xor
inc
stos
sbb
fcoms
mov
dec
fisubrl
push
and
je
das
mov
xchg
fsubrs
dec
sub
dec
xor
dec
xor
mov
xlat
mov
dec
xor
in
test
push
jle
mov
and
mov
and
mov
fcmovu
sbb
xchg
out
shrb
insb
cs
out
jo
jl
out
out
cwtl
sub
xchg
movsb
sub
int3
subb
les
ss
mov
popf
mov
push
jl
adc
jmp
adc
aas
cs
and
xor
dec
js
mov
xlat
movsb
cmpsl
jge
sbb
sbb
adc
mov
or
xchg
pop
add
mov
mov
mov
js
and
add
nop
xor
clc
nop
push
test
jae
shlb
pop
inc
mov
adc
sbb
sbb
add
int3
cltd
fs
stos
pop
sbb
sbb
xchg
push
mov
rolb
inc
or
jns
xor
andl
add
nop
and
sbb
xchg
cmpsb
add
mov
es
repnz
mov
js
or
js
fcoms
stos
inc
xlat
xchg
add
addl
shll
inc
mov
adc
lret
pop
push
adc
rcl
ret
or
pop
cwtl
xchg
mov
xor
add
popf
mov
cld
test
cmp
sbb
xchg
imul
jle
es
xchg
adc
sub
int3
mov
adc
pop
mov
ds
pop
movsb
pop
xlat
push
aaa
aas
pop
test
mov
add
inc
xor
push
pop
and
dec
enter
in
add
dec
enter
das
ret
xchg
mov
nop
mov
cwtl
inc
push
adc
daa
cmp
mov
push
inc
adc
mov
push
and
inc
push
xor
pushf
mov
xorl
jo
or
iret
cmp
adc
push
cmp
inc
jno
xchg
mov
imul
loope
or
inc
shlb
pop
and
loopne
shll
dec
dec
xchg
nop
js
rcrl
sbb
push
mov
push
sub
jmp
push
sub
aam
xor
pusha
aaa
ret
inc
xor
xchg
pop
sub
loopne
pop
dec
aaa
mov
pop
add
rorb
dec
lcall
inc
test
and
shrd
ret
call
cmp
push
mov
into
popa
lds
in
fildl
int
add
or
inc
jbe
sub
out
add
jo
dec
add
inc
adc
es
adcl
pop
lock
leave
out
add
push
jns
outsl
inc
add
xor
and
pop
data16
sbb
leave
test
xchg
fldl2e
inc
mov
imul
test
inc
and
and
jo
xchg
fs
sbb
sbb
sbb
xchg
daa
shlb
mov
xor
pop
cwtl
shlb
rcrl
xlat
scas
push
sbb
sbb
rcrl
iret
and
or
and
jl
mov
xchg
push
adc
mov
add
push
sbb
popa
mov
xor
ja
sub
adc
jl
notl
xor
enter
adc
shlb
cmp
add
imul
sbb
fcoms
je
fiaddl
push
sbb
xor
sbb
imul
rorb
sbb
loope
push
mov
movsl
cltd
pop
mov
xor
mov
lods
mov
rol
xlat
and
push
movsb
push
test
leave
adc
scas
inc
sbb
xor
in
loopne
popa
testl
jae
je
xchg
subb
xor
sub
sbb
sti
rolb
orb
adc
outsl
inc
or
sbb
dec
inc
xchg
inc
push
in
cwtl
nop
sbb
inc
or
mov
xor
pushf
xchg
and
jo
xor
int
push
rorb
pop
xchg
dec
jle
fsub
test
dec
in
call
adc
popf
add
xor
push
imul
movl
or
jno
mov
cld
add
sub
shrl
enter
outsb
mov
xchg
add
jns
mov
adcb
aas
ret
and
add
addr16
or
mov
mov
cmp
repz
xchg
call
ja
or
xor
push
jbe
sbb
or
loopne
lcall
push
add
or
movsl
adc
stos
mov
mov
popf
pushl
mov
das
aam
mov
mulb
or
cmc
nopl
add
jge
and
jo
mov
or
and
adc
rol
pop
adc
int
or
xchg
loope
in
popa
pop
fimuls
das
adc
jbe
movsl
pusha
sbb
sub
jge,pn
lods
pushl
outsb
ljmp
cld
fists
jne
xchg
sar
lcall
mov
pop
sub
adc
js
mov
pusha
or
lahf
in
scas
sbb
imul
imul
dec
scas
push
push
inc
push
rolb
adc
int3
cmp
add
push
xchg
and
call
sub
repnz
sbb
pop
pop
pusha
xchg
pushf
xor
es
or
inc
mov
push
sub
dec
pop
sub
fildl
enter
sub
sub
pop
je
mov
flds
pushf
push
jbe
push
and
lahf
insl
mov
cmp
ret
mov
clc
dec
aam
imull
leave
dec
lahf
cmp
sbb
roll
push
push
sbb
and
fs
sbb
jno
and
out
int3
pop
jb
roll
pop
jb
sbb
jb
pop
jb
sbb
pop
add
pop
pop
jae
jb
sbb
and
xor
adc
sub
out
jne
push
loopne,pn
jne
popa
or
and
ret
iret
or
xchg
sub
push
clc
pop
mov
call
cs
sub
add
pop
jno
jmp
sub
jnp
inc
or
add
or
loop
sbb
jo
out
cmp
clc
cmp
inc
sub
aas
daa
lea
pop
cmpsl
aam
cmp
xchg
push
cmp
notl
in
or
test
test
jp
popf
xchg
enter
or
inc
sub
cmpsb
fs
push
movsb
jo
movsb
and
sbb
mov
cmp
jbe
clc
cmp
or
pop
push
pop
push
jmp
ds
enter
and
cs
rclb
ss
aad
sbb
jns
adc
jl
fsubrs
mov
popa
adc
xchg
popa
mov
inc
inc
jl
xor
cmp
push
or
pusha
jg
out
inc
insb
sbb
mov
cmpb
je
push
push
mov
sbb
sub
int3
add
jb,pt
mov
andl
ret
je
push
addl
dec
sbb
pop
and
inc
pushf
lea
nop
iret
js
popf
aam
sub
mov
lock
jbe
mov
xchg
cmp
jne
inc
add
mov
jl,pt
inc
mov
inc
outsl
sbb
hlt
subl
or
iret
jne
add
or
inc
movsb
mov
enter
jae
inc
add
nop
cmp
push
out
pop
adc
and
je
mov
dec
shll
mov
adc
xchg
nop
incb
push
xor
xor
mov
xor
xor
fcoms
adc
js
add
out
jo
adc
subl
jno
dec
jo
xchg
scas
out
jae
mov
daa
cmp
lods
dec
or
out
lods
aam
ds
gs
sub
jb
adc
xor
push
xor
or
fcmovbe
mov
jp
bound
xlat
fmuls
rcll
adc
pushl
push
outsl
xchg
pop
or
arpl
adc
sub
insb
and
xor
or
cmp
sub
dec
ds
aad
lods
jmp
or
cld
inc
lret
add
aaa
jns
ds
jl
or
je
test
fistpll
je
mov
inc
jmp
movzbl
movb
movsbl
shr
mov
pop
mov
and
mov
nop
inc
mov
outsb
aam
jne
pop
sub
nop
jmp
scas
inc
adc
pop
pop
repnz
bound
mov
add
test
and
cmp
insb
jno
jl
cmc
int
mov
stc
movsb
pop
sub
jge
ret
xchg
iret
adc
mov
mov
fs
test
add
and
sti
pop
lahf
jo
xchg
pop
mov
call
movsl
lea
adc
mov
or
cmpb
je
dec
and
add
inc
into
aam
push
push
jae
jo
add
pop
or
jmp
das
mov
mov
mov
mov
clc
cmc
shll
push
and
ret
push
xor
adc
pop
in
mov
sub
loopne
and
dec
enter
ja
push
je
cmp
jb
je
and
imul
mov
xchg
test
nop
repnz
cli
adc
jle
xor
mov
idivl
pop
jg
xor
mov
xor
and
jmp
cmp
or
dec
or
xor
pop
inc
or
inc
sub
fsubrl
xchg
mov
push
inc
pusha
stos
nop
cwtl
jb
or
xchg
je
xor
adc
pop
jae
jne
jae
xchg
jb
nop
leave
mov
xchg
scas
add
sub
sbb
adc
and
or
sbb
shll
call
sub
jle
add
mov
cwtl
popa
sbb
sbb
inc
inc
adc
inc
mov
ss
ja
mov
les
mov
ss
leave
inc
inc
loopne
out
push
shll
and
pop
rorb
test
or
stos
jg
sbb
push
addr16
sub
dec
nop
or
xchg
sahf
inc
sub
xchg
sbb
data16
xor
push
sbb
sub
push
sbb
mov
loope
sbb
xchg
lcall
mov
scas
scas
inc
xchg
je
lret
add
xor
pop
xchg
outsl
mov
imul
mov
jne
repz
jl
sbb
ret
adc
pop
inc
or
add
clc
and
fcomps
stc
aam
les
nop
jne
or
add
lcall
cs
xchg
enter
cmovl
xchg
dec
dec
ret
xor
mov
dec
and
cmp
mov
xchg
roll
loop
mov
push
out
fistps
add
push
dec
adc
push
mov
pop
aaa
jle
call
push
pop
push
adcb
jmp
sbb
xchg
mov
addb
lods
push
add
inc
das
arpl
sub
movsb
test
xchg
nop
divb
adc
adcb
xchg
dec
hlt
push
inc
sbb
cmpsl
inc
mov
and
mov
or
movsl
jnp
test
mov
jle
xchg
pop
inc
inc
outsl
sbb
lods
aam
jle
call
or
pop
dec
ret
jp
ret
nop
push
dec
call
xor
xchg
pusha
sbb
mov
xchg
add
sub
adc
fildl
sub
scas
cmp
sbb
pop
test
sbb
sbb
push
jle
push
cmp
inc
jo
xor
xor
or
movsl
or
addr16
push
jmp
data16
adcb
movsl
out
test
xchg
mov
pop
mov
mov
pop
stos
mov
jne
mov
dec
hlt
lock
push
dec
pop
cmp
ret
mov
sub
xor
arpl
shll
push
jmp
pop
je
push
les
xlat
cmp
iret
ljmp
je
insl
dec
sbb
and
adc
shl
les
sbbb
hlt
popa
mov
outsb
cmc
and
xchg
pop
add
add
scas
test
shr
jecxz
rolb
jl
ret
sbb
movsb
aam
dec
scas
dec
mov
test
in
mov
out
sbb
jl
clc
adc
std
in
add
dec
push
xor
jne
je
inc
inc
rcrb
pop
cmp
jl
xchg
sarb
jge
mov
jno
mov
inc
testb
push
inc
data16
mov
cmpsl
push
mov
fcoms
cmpsl
je
push
pop
popf
add
test
cltd
fidivrl
pop
sub
es
sub
push
enter
xchg
or
adc
fcomps
sub
lea
mov
mov
mov
sarb
in
pop
mov
nop
xchg
add
and
mov
sbb
test
xlat
or
adc
dec
into
loopne
jbe
call
rdtsc
xchg
and
sbb
imul
mov
or
mov
add
lods
test
lods
aaa
aad
or
scas
jb
clc
inc
das
je
jge
jne
arpl
movsl
pop
dec
adc
ret
das
mov
push
sahf
fsubr
imul
in
cmp
mov
cmp
call
push
or
fcoml
pop
fidivrs
jl
mov
sbb
add
bound
fcmovne
xchg
cmpsb
ror
and
xchg
sbb
push
mov
push
sub
sub
add
xorl
push
cmp
adc
and
sbb
mov
mov
shll
out
mov
bound
xchg
jmp
add
pop
add
adc
or
cli
mov
enter
jle
push
cmp
dec
or
and
cmp
jle
test
push
xchg
sbb
push
mov
inc
or
jg
roll
mov
mov
xchg
xchg
in
daa
jl
push
es
jns
cld
pop
add
rdtsc
mov
addl
sbb
add
jmp
int3
stc
pop
sti
pop
ret
mov
or
lods
push
outsb
jo,pt
test
jge
push
push
lea
enter
push
fldl
xor
insl
inc
sbb
inc
data16
popf
filds
adc
jne
daa
bnd
adc
js
lahf
out
jne
or
jne
or
call
sahf
push
cmpsb
dec
aam
mov
int
js
and
fwait
lds
ret
pop
mov
push
lea
mov
mov
fwait
inc
dec
iret
icebp
out
sahf
movsb
push
inc
pop
sub
push
jl
mov
lea
repnz
sbb
pop
hlt
lea
cmp
sbb
sete
imul
ret
mov
nop
dec
xchg
mov
sub
push
cmp
sti
dec
cmc
mov
and
push
into
or
cmc
int3
roll
mov
sbb
lods
dec
jmp
fnstenv
notb
cmp
stos
dec
fcompl
adc
add
neg
loopne
rcrb
lea
jo
adc
sub
popf
add
dec
jl
jecxz
popa
jl
cli
test
xor
testl
loope
fwait
jp
xchg
add
inc
loopne
fisttpll
movsl
mov
addr16
cmpsl
push
xchg
insl
mov
add
call
jmp
jmp
orl
faddp
jb
pusha
pusha
inc
xchg
xchg
pushw
pop
pop
enter
mov
fs
enter
sahf
sahf
sub
xor
or
sbb
mull
ret
cltd
mov
mov
mov
js
mov
fmull
imul
iret
sub
loope
or
mov
aad
idiv
or
add
addl
or
fmuls
into
or
or
or
into
inc
or
dec
and
pop
nop
mov
adcl
mov
xchg
imul
mov
in
inc
or
add
fldl
pop
push
or
add
and
xor
dec
sbb
inc
mov
mov
xchg
inc
fdivl
push
in
icebp
cmp
lret
pop
lods
int
fwait
push
pushl
nop
xor
mov
and
xchg
xor
pop
and
mov
mov
insl
xchg
subl
aad
imul
add
sbb
or
inc
fidivs
movsl
mov
je
js
daa
inc
xchg
dec
cmpsl
repz
in
and
scas
fcoms
pusha
sbb
js
aas
movsl
push
pop
test
dec
xorl
in
mov
lahf
and
dec
das
popa
imul
sbb
xor
fidivs
jbe
or
pop
les
cmp
mov
sub
sbb
hlt
pop
adc
adc
and
xor
inc
arpl
enter
and
adc
in
push
pop
lds
test
push
int3
jmp
fsubrs
pop
xor
push
xchg
dec
sbb
leave
add
outsl
push
adc
fwait
dec
enter
test
sbb
push
imul
and
inc
arpl
fbld
xor
test
inc
daa
mov
bound
inc
mov
fnsave
xchg
mov
cmpsl
sub
xor
sbb
dec
cmp
or
push
pushf
pop
push
push
cli
push
lea
add
adc
repz
inc
loopnew
pop
inc
sub
dec
cmpsb
push
mov
inc
push
outsl
push
je
insb
and
cwtl
nop
data16
add
sbb
stos
dec
push
js
push
or
xchg
xchg
xor
inc
stc
xor
subl
ljmp
imul
sbb
popa
scas
pop
adc
mov
xor
and
js
xchg
lock
jg
je
push
mov
imul
mov
aam
inc
sbb
fdiv
add
jns
rcrb
xchg
lahf
test
adc
xchg
es
sub
xchg
jne
xor
cmpsw
mov
cmpsb
test
mov
add
mov
mov
mov
aad
or
jo
sahf
push
push
daa
ficoml
daa
add
adc
jae
jmp
fsubrl
ret
xor
push
aas
call
test
pop
addr16
rclb
jne
outsl
in
adcl
adc
pop
mov
mov
and
mov
enter
mov
push
shl
int
cmpsl
push
lea
jecxz
insl
lods
shlb
in
mov
add
fmull
xor
inc
pop
inc
std
xor
in
mov
mov
mov
adc
data16
mov
or
sti
mov
inc
loopne
sub
push
call
mov
fcomip
pop
mov
emms
sbb
loopne
out
addl
sub
mov
sub
addl
add
pop
fadd
lahf
or
imul
aaa
push
sub
mov
sub
loop
xor
je
data16
adc
add
cmp
jne
pop
test
inc
fdivr
dec
fs
xlat
lret
push
jne
dec
aaa
or
sub
test
ljmp
dec
addb
imul
inc
or
scas
mov
cmp
insb
roll
and
xchg
xor
aas
push
sbb
mov
dec
add
or
and
xchg
in
or
sub
jne
pop
or
push
adc
dec
fidivs
adc
ds
roll
xor
clc
cld
pop
push
push
and
mov
adc
and
mov
mov
add
in
push
imul
and
inc
adcl
xor
cli
pop
lea
push
add
nop
add
fsubl
jmp
xchg
out
sbb
and
lds
test
das
mov
das
cltd
pop
jmp
out
je
xchg
incb
cmpsb
lds
adc
fcmovb
mov
xor
pop
or
fdivrl
pusha
cli
or
push
movsb
adc
add
and
pop
addb
rcll
in
push
xorl
lods
repz
push
fisttps
add
add
xor
ret
aas
jne
add
dec
outsb
sub
push
stc
add
stos
inc
pop
cmpsb
pushf
sbbb
addb
add
or
xchg
mov
test
or
sub
icebp
imul
pop
movsl
mov
lcall
and
fldt
cmp
dec
inc
adc
push
add
sub
xchg
push
add
sub
add
inc
fisttps
pushf
push
aas
stos
adc
push
push
xchg
in
or
aas
mul
pop
add
cmc
add
and
mov
xchg
aam
pushf
adc
xchg
iret
adc
jno
outsb
js
push
popa
jo
and
mov
fisubl
push
je
movsl
ja
or
or
xor
cmp
je
or
jo
shrb
sbb
sete
movsb
mov
clc
ss
push
push
cmpb
ret
cmp
fistpll
hlt
jae
movsbl
sbb
xchg
jbe
ja
inc
mov
mov
push
lcall
clc
sub
pop
int
insb
ds
jmp
enter
ret
incl
incl
add
or
jecxz
or
add
inc
cmp
ret
pop
sar
mov
test
cli
mov
loop
add
sar
add
jne
xchg
cltd
add
clc
xor
xor
ss
cmp
jecxz
ljmp
jne
enter
adc
mov
mov
dec
jne
fs
or
test
sahf
or
lods
lods
xor
test
pop
push
mov
ficompl
push
dec
bound
lcall
inc
jbe
jo
shld
loopne
andl
rol
lods
jmp
add
sbbl
push
inc
cmpl
aaa
push
cmp
jl
aam
jle
insb
push
mov
aas
mov
je
shl
ja
jo
cmp
js
inc
mov
add
dec
jne
xchg
pop
mov
pusha
arpl
rolb
push
inc
pop
aam
repnz
add
aaa
lahf
push
ret
or
add
adc
pop
shlb
hlt
pusha
insl
pop
adc
jp
pop
pop
enter
adc
or
test
xor
in
pop
sub
adc
mov
pusha
aad
in
push
xor
pop
insb
jbe
mov
cltd
mov
popf
insb
lcall
mov
popa
inc
cmp
sub
sbb
sub
sbb
dec
or
add
xor
bound
filds
pop
cmp
push
loopne
push
pop
push
jmp
jecxz
cwtl
stos
stos
and
pop
mov
mov
push
push
pop
cmp
xor
out
mov
pop
outsb
pop
pop
rcrb
leave
mov
pop
add
jmp
cmp
movsb
jmp
in
inc
ljmp
in
repz
add
scas
or
push
and
sarb
adc
in
sbbl
adcl
in
pop
jle
js
adc
js
and
push
add
pop
ss
cmp
dec
jns
push
push
xchg
mov
loopne
mov
add
add
push
repnz
sbb
daa
aas
adc
mov
aaa
mov
push
mov
scas
imul
pop
je
call
pushl
dec
fdivl
test
cs
push
cmp
pop
cmp
loopne
mov
loop
rcr
mov
jmp
inc
aas
inc
push
mov
mulb
and
mov
ret
push
cmp
sbb
dec
loop
ljmp
fnsave
nop
rorb
pop
mov
das
push
movsl
adc
popa
aam
xor
jo
jbe
icebp
dec
push
xchg
cmp
xor
mov
shl
and
xchg
add
dec
out
add
int3
add
mov
push
cmpsb
jmp
jp
mov
or
aam
inc
or
push
push
shr
cmp
mov
insl
pop
jb
xchg
adc
aam
xchg
pop
mov
jno
fwait
dec
lea
aam
dec
push
sbb
mov
pop
jo
adc
or
push
daa
and
clc
jmp
mov
cs
push
xlat
push
cli
lcall
mov
adc
cwtl
out
adc
add
adc
pushf
mov
cmp
int3
add
les
bound
jmp
push
fidivrs
sti
cwtl
sti
push
pop
cmp
fs
mov
sbb
mov
dec
or
xchg
lods
fcomps
inc
das
cmpsl
call
out
das
mov
movsl
adc
pusha
stos
and
and
cmp
add
ss
dec
push
rclb
rolb
and
in
or
mov
xchg
lret
xchg
jge
aam
and
xchg
jle
mov
adc
fcomps
lret
or
les
or
clc
jl
cwtl
lea
mov
jge
sub
add
into
clc
fldl
lcall
cmp
fadds
lret
shl
call
mov
decl
mov
mov
out
test
clc
sarb
jl
dec
out
test
sbb
adc
add
mov
js
or
rolb
andb
push
pop
add
sub
mov
aam
dec
pop
cmp
sub
movsb
fiadds
cmp
mov
mov
movsl
sub
dec
push
roll
sahf
sbb
pop
sub
add
mov
sbb
xor
mov
int
mov
lcall
call
jae
xor
iret
add
lret
cmp
jnp
xor
push
xor
movsb
es
and
add
add
add
or
add
fcoml
inc
mov
xor
cmc
mov
and
lods
dec
lock
fidivl
or
scas
push
std
pushl
jle
int
mov
mov
clc
lock
mov
sub
test
push
rorl
jno
pop
iret
and
cmp
or
pushf
jl
rcrb
hlt
mov
mov
dec
mov
mov
std
mov
clc
add
mov
add
movzbl
mov
inc
mov
push
call
or
aam
scas
dec
clc
sub
mov
fnstcw
push
sarb
sub
push
icebp
out
ja
mov
dec
xchg
add
pop
jnp
lods
add
push
mov
nop
adc
push
nop
add
or
cld
inc
inc
call
xor
mov
jl
mov
ja
adc
aad
and
fwait
jb
jne,pn
push
into
in
mov
add
push
sub
call
jle
fwait
mov
add
jo
or
push
adc
add
add
cmp
fstpt
test
in
jg
es
and
push
fs
test
xor
mov
fistl
pop
mov
cmp
inc
pushf
mov
cmp
testl
call
and
lahf
lret
mov
hlt
dec
adc
pop
aad
les
popa
xchg
inc
imul
rclb
dec
rorl
xor
lods
das
mov
dec
mov
xor
and
adc
add
rclb
and
mov
and
xchg
fdivs
sbb
push
dec
adc
pop
je
pop
clc
jp
in
mov
push
mov
cmp
and
sbb
iret
xchg
push
roll
cld
ja
mov
jb
cwtl
mov
shrb
stc
sub
ss
lea
dec
mov
jbe
cmp
jbe
mov
sbb
rclb
cmp
enter
pop
aaa
ljmp
aas
fwait
xchg
adc
jp
xchg
inc
call
insl
push
mov
sub
fadd
test
and
lock
ljmp
xchg
push
xchg
sti
push
sub
mov
divl
push
fsubs
iret
fsts
push
push
push
cmp
loopne
hlt
daa
cmp
and
jns
jnp
arpl
mov
mov
sbb
test
pop
ret
and
movsl
xor
enter
pop
addb
shll
mov
outsl
nop
cmp
pop
sbb
push
aam
call
mov
sbb
sti
lea
pushf
movsb
mov
loop
push
imul
cwtl
or
sub
pushf
test
insb
dec
and
movsl
push
ret
in
add
lods
add
or
pop
in
mov
xor
jne
into
mov
pop
xchg
inc
jnp
xchg
jg
cmp
sbb
arpl
or
sbb
mov
add
aas
jb
mov
add
movsl
sub
add
adc
adc
add
pop
adc
int
adc
pop
lcall
aam
loop
mov
mov
or
add
and
push
adcl
and
scas
inc
sub
pop
jge
inc
mov
in
mov
jno
sub
test
ljmp
add
enter
fstps
sub
jo
inc
or
jle
stos
cs
xor
ret
cmp
ss
or
push
mov
push
xor
je
nop
mov
mov
sbb
cmp
rcll
fisttpl
push
loopne
mov
pop
inc
jp
sti
dec
stos
shrl
ret
mov
enter
sub
test
or
add
insb
ss
scas
add
push
aam
push
or
inc
aaa
and
add
mov
stc
mov
shrb
adc
cwtl
je
jg
bnd
lea
mov
je
cmp
rcpps
mov
fiadds
roll
and
mov
pop
and
and
maxps
ds
mov
fiadds
and
mov
cmp
adc
dec
xchg
xchg
fwait
movl
aas
pop
orl
jge,pn
cmp
pop
cli
mov
rcr
dec
outsl
pop
fdivl
mov
jmp
loope
lahf
leave
push
fiadds
jmp
sub
cmpsl
lock
fdivrl
pop
pusha
pop
add
pop
je
push
fwait
xor
out
test
mov
in
addb
cmp
daa
popf
jmp
pop
or
push
mov
mov
pop
add
xchg
dec
aaa
jae
addr16
xchg
lahf
rolb
mov
sbb
cmp
jmp
out
xchg
cmp
dec
lods
inc
add
incl
jge
sub
mov
jg
jl
xor
aad
push
flds
and
callw
aas
jmp
push
mov
push
adc
or
hlt
imul
shlb
mov
pop
push
push
pop
push
ja
push
add
inc
mov
jne
jne
int3
add
psrlq
popa
imul
sahf
dec
cld
stos
rclb
or
clc
scas
mov
jne
cmp
jbe
mov
hlt
sub
cmp
pop
push
sbb
lahf
test
cmp
adc
test
int3
adc
pop
add
nop
cmp
sarb
scas
jmp
pop
mov
clc
jne
mov
cs
adc
andl
pop
mov
leave
test
sbb
popf
add
out
imul
lock
or
fcmovnu
push
jmp
or
scas
or
fcomps
adc
mov
call
cmp
sbb
lea
and
in
add
and
jmp
sbb
jecxz
jg
pop
lods
push
sub
adc
or
out
add
add
mov
inc
add
shll
pop
and
and
out
subb
enter
xchg
mov
xor
xor
add
popa
fdivl
inc
or
mov
or
and
repz
pop
add
orl
fs
lret
xorl
xor
dec
adc
addr16
fadds
push
lock
lods
sub
add
xor
sub
add
pop
add
pop
lahf
and
xchg
add
mov
xor
lahf
int3
and
jns
pop
cwtl
push
jae
shlb
pop
int
pop
mov
sub
test
xlat
ds
adc
mov
pop
sub
mov
dec
push
sti
pop
jp
ret
cld
test
das
push
daa
xchg
cmp
sahf
test
cmpsb
jo
rorb
xlat
and
sti
sbb
aas
cmc
das
sub
subl
das
or
push
rorb
jb
push
add
test
cs
or
lock
dec
sub
pop
or
loopne
inc
mov
inc
xor
subl
shll
or
dec
xor
xchg
mov
xchg
jae
mov
add
or
and
adc
and
dec
or
add
das
fwait
pop
and
dec
shl
mov
cmp
push
add
or
xchg
jne
add
rolb
add
int3
sbbb
dec
adc
aam
dec
movl
hlt
fcmovbe
bound
inc
in
inc
push
xchg
dec
cmpsl
testb
mov
mov
daa
loop
ljmp
or
cmp
and
cmpsl
movsb
test
or
adc
xchg
sub
jne
jmp
je
pop
ret
cmc
test
sub
shlb
sbb
sbb
sbb
daa
int3
cmp
clc
movsb
cmc
mov
cwtl
sub
pop
test
fcompl
cmp
xchg
push
and
adc
and
clc
adc
les
leave
cwtl
pop
inc
insl
xor
xchg
jmp
fcomps
add
mov
fadd
jp
shlb
insw
jp
stos
fstl
ja
mov
jo
in
xchg
xor
sbb
add
adc
or
mov
pop
sbbb
movsl
cs
inc
sbb
lock
ret
or
mov
or
or
int3
add
xchg
add
add
inc
push
sbb
adc
pop
aam
clc
sub
sub
jecxz
rcr
and
and
xchg
fdivr
notb
mov
jmp
inc
add
dec
gs
add
leave
cmp
xchg
sbb
enter
mov
sarb
dec
dec
hlt
pop
and
push
lea
iret
cltd
mov
push
out
or
cmp
push
adc
hlt
or
movb
pusha
or
pop
xor
xchg
sbb
dec
push
inc
dec
add
fld
inc
ficoml
jle
push
push
int
cmp
jb
cmp
cmp
jmp
inc
aaa
inc
xchg
cmpsl
popa
push
ret
rcl
mov
roll
and
pop
push
sbb
inc
aam
je
mov
push
mov
push
inc
adc
pop
in
hlt
movl
adc
inc
mov
xorl
mov
mov
imulb
mov
cli
das
je
or
mov
cmp
out
mov
je
cmp
jne
mov
sbb
add
adc
fistps
dec
lea
in
jmp
dec
mov
dec
std
ja
repz
push
cmpsb
mov
sub
inc
adc
je
idivl
lcall
mov
cmp
jbe
add
pop
add
mov
dec
iret
inc
cmp
je
sub
inc
jmp
inc
and
subl
test
pop
mov
dec
push
cs
aam
clc
mov
clc
or
out
aam
mov
roll
inc
pop
push
adc
into
xor
shl
push
cltd
add
mov
jl
sub
cld
inc
cmpb
jne
cmpl
jne
hlt
subb
aam
lds
mov
clc
clc
je
test
cmpsl
sub
mov
ja
js
sub
js
sub
mov
dec
cmc
es
add
nop
sbb
mov
push
mov
rorl
testb
loopne
jne
push
pop
pop
in
and
jg
xchg
mov
movzwl
data16
add
outsb
mov
add
jae
mov
add
shrb
ret
mov
aas
shl
add
jmp
pushf
aas
insb
sti
and
xor
pop
or
outsl
cmpsb
cmp
js
fs
jne
xor
aaa
push
cmp
adc
incl
or
push
mov
jmp
outsb
jecxz
popa
dec
shlb
lret
or
sub
dec
push
or
mov
push
lea
mov
add
and
lret
xchg
add
int3
inc
jg
or
jge
int
int
bound
and
es
sub
sub
outsb
push
idivb
jmp
or
adc
pop
jle
pusha
outsl
cmpsb
mov
xchg
cmpsb
jbe
lea
ds
loopne
pop
jbe
push
hlt
pop
arpl
repz
jne
add
je,pn
test
jne
pop
mov
add
std
sub
jb
dec
popa
adc
clc
add
fisttps
sub
jae
movb
inc
cltd
sub
lret
adc
shlb
inc
inc
pop
and
mov
sarb
xchg
add
xchg
data16
mov
shlb
inc
and
push
movsb
adc
adc
mov
add
daa
xchg
dec
mov
mov
cmp
fstps
inc
cmpsl
fdivrp
push
xor
inc
pop
push
mov
sbb
adcb
mov
mov
xchg
xchg
out
adc
movsl
pop
mov
je
mov
and
popa
pop
leave
jecxz
imul
add
pop
ret
add
mov
loopne
jne
testl
or
jg
or
push
push
push
imul
mov
ret
inc
adc
xchg
mov
jg,pn
jl
fistpll
in
or
and
jbe
push
add
push
push
cmp
int
push
jecxz
loopnew,pn
or
jp
test
insb
add
adc
push
mov
loop
cmp
lret
mov
inc
push
popf
inc
xchg
out
pop
cmp
inc
and
mov
bsf
stos
repz
xor
sarl
mov
or
push
andl
push
mov
xorl
nop
out
jp
inc
mov
cmp
jno
sbb
sbb
push
push
cwtl
and
xor
addr16
shrb
push
pop
push
movl
push
adc
dec
or
xor
fsub
shlb
lahf
jbe
addb
mov
push
incb
and
std
xchg
push
mov
mov
andb
pop
and
mov
loop
xchg
push
adc
cmp
sub
int
pusha
xchg
add
add
mov
xorl
je
pushl
jle
daa
or
lea
add
mov
jae
pop
push
sbb
orb
mov
cmpsb
pop
inc
add
cmp
pop
jne
lods
mov
lea
inc
sti
adc
jb
pop
sub
enter
inc
lret
negl
xor
and
in
dec
jae
jbe
mov
push
gs
add
inc
ficoml
cmp
cld
pop
xchg
push
sbb
nop
push
jl
faddl
out
sbb
xorl
jecxz
push
or
adc
fcoms
movsl
mov
stos
pop
adc
xchg
mov
sbb
xchg
sbb
clc
pop
je
test
dec
push
inc
push
shlb
xor
push
fs
add
dec
adc
or
xor
and
dec
push
test
scas
or
push
pushl
cmp
adcl
or
mov
fistl
mov
push
js
jl
add
pusha
add
add
push
sbb
inc
add
adc
mov
inc
pop
pusha
or
add
sahf
mov
aas
cmp
je
push
aaa
les
add
sbb
roll
leave
add
pop
pop
add
push
lcall
inc
add
test
adc
inc
pop
push
ret
or
andl
sti
pusha
jb
add
decl
jb
adc
roll
xchg
xor
jbe
push
adcl
call
mov
pop
test
sbb
cmp
jge
sahf
das
push
and
gs
add
adc
push
ljmp
sbb
xor
push
gs
sti
sub
cld
outsb
jb
jbe
push
push
popf
test
cmp
add
dec
and
mov
pop
mov
jne
lea
or
jg
inc
loope
fucom
subb
xchg
dec
ret
pop
or
xchg
and
in
xchg
pop
xchg
fs
popf
push
xor
push
ficompl
or
jecxz
jl
fmull
and
cmp
push
inc
mov
or
dec
or
stos
mov
rorl
orl
sub
dec
fs
ficomps
arpl
add
xchg
aam
add
lcall
xchg
in
or
sbb
mov
pop
cwtl
cmpl
dec
push
and
xor
in
lods
or
push
push
lret
pusha
push
fbld
or
mov
pop
mov
imul
insl
jnp
or
movl
inc
test
cmpl
nop
fidivl
test
cmc
push
add
mov
fs
inc
fidivl
xor
cmpsb
or
xchg
pop
and
xchg
xchg
jecxz
clc
loopne
push
bound
and
push
cmp
pop
jge
dec
inc
adc
loopne
mov
or
inc
popf
jne
push
imul
lock
and
inc
jp
mov
xchg
pop
mov
push
subl
mov
mov
loope
adc
sub
mov
addl
jnp
mov
mov
xchg
pusha
cmp
mov
dec
mov
icebp
cmpsl
call
lods
fwait
mov
movsl
insl
cwtl
jl
fsubs
dec
and
push
aas
je
push
sbb
cmp
push
pop
jne
aam
inc
cmp
shlb
or
mov
inc
pop
jne
pop
call
jl
incl
or
shrb
cs
xorl
and
push
xchg
cmp
sub
mov
mov
sbb
or
sub
or
xchg
jmp
out
fldl
mov
sbb
cmp
and
in
pop
in
subl
mov
or
je
imul
fistl
in
div
jmp
pusha
mov
outsb
cmp
jae
scas
jg
add
daa
test
sbb
dec
daa
mov
aas
inc
es
xchg
mov
orl
jmp
adc
cmpl
pop
and
pop
lock
xchg
orl
sbb
xchg
lret
in
pop
fs
push
scas
or
inc
out
cmpb
or
or
or
mov
fwait
ret
push
add
loop
jmp
lahf
les
testb
cmp
add
ret
push
mov
std
inc
push
dec
adc
cs
movsl
aas
add
inc
add
inc
mov
pop
xchg
inc
bound
sub
push
lock
sahf
xchg
pop
push
push
push
push
pop
cs
lret
in
pop
pop
pusha
pusha
pop
or
sub
and
popf
sbb
pop
xlat
push
cmp
push
sub
cmp
test
add
addb
dec
add
sub
xor
mov
push
sbb
jbe
add
in
out
rolb
mov
jg
cwtl
mov
jmp
mov
add
rcll
lret
mov
lcall
adc
popa
xor
sbb
in
leave
clc
or
inc
adc
jmp
adc
sub
sbb
pop
les
je
insb
or
mov
mov
daa
mov
sub
leave
lds
sbb
scas
jp
cld
xorb
pop
fimuls
mov
scas
jae
or
inc
push
jnp
jge
inc
cli
jp
push
pop
jmp
shr
mov
mov
adc
mov
mov
mov
push
sbb
or
push
or
loope
add
pop
push
pop
je
lock
test
call
mov
or
imul
xor
sti
es
sti
jnp
adc
addr16
fsubrs
in
sbbl
js
push
xor
sub
mov
mov
rep
decl
mov
mov
sbb
push
sahf
xchg
in
loope
fucomp
push
cmp
je
mov
adc
in
and
push
mov
je
mov
cmp
push
jo
add
ss
in
xlat
push
inc
or
dec
out
pop
inc
xchg
add
adc
mov
xor
mov
adc
sbb
mov
mov
cmp
je
push
aas
push
jnp
jb
jl
mov
and
add
sbb
pop
push
cmpb
push
adc
sbb
jle
and
adc
mov
add
push
into
sbb
jbe
push
adc
shlb
jne
dec
or
lcall
and
add
adc
clc
in
add
lock
cmp
jne
or
sub
push
lret
pop
jbe
jo
inc
bound
in
in
int
imul
sbb
ficoms
shlb
orb
daa
fisttpll
subb
jae
lcall
sbb
mov
incl
cmp
rcl
and
push
loopne
inc
test
sti
hlt
add
push
lock
mov
lods
cmp
clc
adc
cltd
jne
mov
adc
cmpsb
leave
pop
cmpb
mov
movl
add
sub
loop
inc
or
push
inc
add
or
adc
jne
xlat
test
jge
clc
dec
imul
inc
cmp
mov
lea
adc
inc
hlt
mov
lock
hlt
aaa
leave
add
lock
mov
mov
dec
loope
rclb
inc
inc
mov
xor
cmp
ljmp
mov
push
pop
mov
adc
add
pop
sbb
loop
and
mov
jecxz
mov
fisttpll
pushf
outsl
mov
and
add
xorb
jnp
push
push
popa
shlb
add
jmp
ja
push
out
xchg
orl
int
and
xlat
mov
xchg
addr16
mov
adc
sbb
push
test
mov
das
je
push
and
add
push
test
dec
add
shr
enter
xchg
push
cmpb
js
gs
jns
jmp
add
sub
lock
das
jle
inc
and
add
movsl
movsw
mov
inc
loopne
and
rcrl
or
sbb
icebp
sub
stos
sub
popf
cmp
fsubr
xor
xchg
in
adc
pop
sbb
rcl
adc
inc
inc
fsubrp
pushf
pop
push
test
pusha
es
outsb
add
inc
je
adc
bound
adc
nop
inc
sbb
cmc
dec
in
push
jnp
jmp
sub
les
aad
cmp
push
orl
or
add
add
inc
push
in
sbb
cs
adc
xchg
ljmp
les
push
jmp
mov
popa
add
int3
and
dec
mov
orb
inc
pop
push
add
dec
fmull
mov
je
mov
sbb
dec
dec
dec
jne
jo
add
jns
sbb
jb
dec
cmp
sbb
jg
jbe
push
filds
or
in
shr
mov
xorl
lock
movsl
xor
dec
adc
movsl
sbb
lret
cmp
mov
in
lret
es
fsubrs
sbb
pop
je
and
loopne
icebp
push
xor
mov
sub
sub
sub
and
adc
rclb
mov
dec
mov
or
nop
roll
adc
xor
dec
in
lret
cmc
mov
roll
jb
mov
test
fs
cld
mov
or
mov
das
test
incb
jl
jmp
pop
add
in
push
cmpsb
mov
stos
cmp
push
inc
sbb
add
lret
dec
pop
test
adc
in
sbb
cmpsl
push
cmp
dec
loop
movsb
push
imul
add
lret
clc
xchg
int3
in
mov
pop
push
rcr
lahf
in
or
xor
lea
lahf
adc
mov
jp
sbb
cmp
push
and
push
push
sub
push
rep
inc
xchg
cmp
clc
int3
mov
fcomps
cmp
decl
and
clc
inc
push
inc
pop
addb
mov
jns
xchg
mov
inc
ds
lret
rcr
test
push
push
xor
fdivrs
or
leave
adc
sbb
or
dec
mov
dec
or
or
xchg
test
or
sbb
ret
pop
dec
je
sbb
nop
push
ret
outsl
mov
push
xchg
sbb
sub
js
xor
in
in
pop
daa
sbb
lret
pusha
xchg
pop
xor
adc
rcr
clc
and
inc
inc
adc
ss
es
push
testb
not
cld
es
add
ss
in
rep
sbb
xlat
mov
sbb
sbb
cltd
mov
pop
leave
sub
out
and
stc
cmp
pop
push
push
js
test
icebp
mov
fdivs
or
psadbw
mov
adc
jmp
push
push
fadd
daa
lock
cmp
repnz
loopne
dec
xchg
roll
fdivs
ret
pop
jge
cwtl
lods
dec
rolb
inc
dec
lock
push
push
push
add
sbb
in
out
mov
mov
jmp
sub
mov
and
pushl
push
iret
xchg
pop
ja
sbb
inc
lods
cmpsl
jo
movb
clc
mov
or
jo
pop
into
lcall
xor
inc
inc
jne
and
pop
shlb
sub
push
xchg
xor
inc
sbb
adc
xlat
inc
inc
addr16
es
clts
fidivrl
pop
iret
mov
mov
adcl
dec
xor
sbb
sub
push
scas
dec
loopne
xchg
bound
xor
cmp
push
adc
mov
xchg
test
jb
jecxz
test
jle
enter
add
jne
cmp
sbb
call
xor
rorb
outsb
enter
or
jecxz
or
bound
dec
xchg
addr16
or
loopne
xchg
inc
out
mov
or
add
dec
inc
push
cmpsl
mov
sub
or
add
push
loopne
stos
cmpsb
or
loop
lea
jo
add
pop
stos
pop
push
dec
loopne
xor
mov
jle
push
lds
lock
lock
xlat
data16
inc
lock
hlt
push
leave
loopne
xchg
xor
pushf
cmp
adcb
pusha
cmp
or
or
adc
pop
dec
inc
iret
pop
cltd
push
mov
mov
fiadds
adc
pop
test
faddp
adcl
incl
adc
pop
cmp
push
and
xlat
mov
push
xor
mov
push
or
sub
pop
inc
sbb
sbb
mov
mov
mov
push
pop
loopne
and
inc
movl
cmp
outsb
push
mov
add
or
iret
push
adc
enter
mov
xor
cmp
and
or
das
jge
rorl
nop
or
xchg
add
test
inc
sbb
sbb
iret
fdivrs
jne
cmp
push
imul
pop
cmp
inc
xor
add
jo
test
dec
jns
pushf
lea
push
push
jecxz
ret
lea
lds
repnz
syscall
xor
shrb
dec
adc
fsubrs
pusha
repnz
push
mov
or
dec
push
rol
and
rorl
loope
sub
adc
jns
fsubs
fwait
aam
add
push
das
ror
int3
test
outsb
icebp
cmp
adc
dec
imul
ds
pop
outsl
ss
movb
enter
test
adc
nop
xlat
jo
mov
out
push
adc
repnz
sub
mov
rcrl
ret
and
jge
jge
cmp
js
add
and
or
leave
mov
clc
or
mov
add
test
lcall
inc
push
and
lea
andl
adc
popl
or
cmp
xchg
add
sbb
push
and
inc
sbb
icebp
mov
push
fnsave
adc
mov
or
leave
or
or
mov
adc
jbe
xchg
add
and
xor
mov
sahf
or
mov
add
adc
lahf
cmpsl
or
sub
push
aaa
hlt
sub
dec
incl
dec
cli
xchg
les
adc
outsl
fsts
test
xchg
stc
mov
mov
fsubrs
sbb
int3
jnp
inc
cmp
popa
push
push
pop
adc
lods
cmpsb
xor
dec
cmp
xchg
push
sbb
and
imul
and
stc
sub
mov
aam
mov
and
push
inc
adc
inc
daa
mov
divb
jae
rorl
jp
out
fstl
sbb
and
addl
xchg
dec
je
sbb
fmuls
pop
out
fnstcw
mov
rol
push
js
pushl
nop
sbbl
ret
sub
jge
adc
stos
fs
ret
dec
sbb
mov
stos
jge
das
or
hlt
push
lea
push
inc
loopne
mov
test
cs
rorl
es
jp
jo
add
or
cs
sbb
or
mov
fcoml
or
in
mov
hlt
pop
data16
jnp
add
adc
mov
dec
inc
int3
mov
and
dec
sbb
jle
jmp
ss
pushf
js
gs
xor
ljmp
inc
lods
add
dec
lods
or
repz
cmp
in
mov
xor
dec
inc
loope
dec
stos
js
sbb
cmp
xchg
xchg
popa
mov
pop
inc
xchg
lcall
aas
add
fadd
shlb
push
sub
sbbb
pop
push
in
jl
aas
sbb
xor
aam
or
pop
jmp
adc
mov
stc
and
sbb
xlat
cmp
push
loope
scas
jge
pop
cmpl
push
ret
and
jo
outsb
clc
clc
dec
lret
xchg
adc
mov
or
and
jo
mov
jbe
xor
dec
jmp
movsb
data16
mov
sbbl
pop
and
clc
icebp
dec
cmp
inc
loopne
mov
call
or
inc
mov
fmul
idivl
pop
sahf
pop
jbe,pn
faddl
xchg
mov
fs
jb
insb
sbb
ds
jp
xchg
mov
shll
push
adc
loop
push
dec
loopne,pn
mov
enter
jbe
or
mov
cmp
jne
cmp
or
lcall
nop
adc
outsb
mov
test
js
xchg
or
push
das
xor
mov
inc
loopne
cs
xor
fucom
ret
arpl
pop
push
shrb
pop
shlb
lldt
mov
push
leave
fcmove
mov
dec
xchg
xchg
call
mov
dec
mov
add
fistpll
jb
jmp
mov
mov
push
xchg
jno
mov
addr16
mov
stc
mov
insl
mov
lret
jp
pop
test
aad
xor
ret
jo
jb
cwtl
ret
imul
sub
push
fldenv
xchg
in
fwait
push
shlb
jecxz
xor
or
fisttps
and
daa
mov
mov
mov
inc
add
push
push
pushf
fs
push
mov
lock
add
fst
enter
push
and
aam
mov
push
fwait
cli
mov
inc
and
jne
arpl
popf
nop
mov
les
sti
mov
push
negb
push
xor
and
pop
insb
jmp
cltd
xchg
inc
mov
mov
mov
aad
mov
hlt
or
push
mov
leave
sub
cmp
rcrb
jbe
sub
sbb
rcl
scas
mov
mov
sub
or
add
fstl
ljmp
flds
inc
push
rol
aad
jle
enter
or
test
pop
call
rorl
mov
xchg
stos
xchg
lret
cmpsl
mov
out
lret
ljmp
dec
pop
cmp
pop
add
enter
mov
int3
jp
ds
jne
jge
sbb
mov
sub
add
fldl
push
out
xor
push
or
inc
loop
mov
mov
cmp
pop
cmpsl
and
fistl
sbb
push
xor
or
mov
mov
out
mov
push
pop
or
inc
les
add
leave
cmp
je
push
sub
call
adc
xchg
pop
adc
push
pop
mov
fxch
adc
push
loope
imul
and
mov
push
enter
loope
leave
and
inc
pop
inc
shrb
xor
aad
or
add
sub
fld
arpl
lods
aam
add
fildll
or
lret
lods
cld
jmp
push
and
add
add
add
neg
sbb
inc
push
xchg
icebp
aad
iret
jp
cmp
mov
ljmp
fiadds
sub
mov
add
lret
aas
mov
adc
jp
mov
dec
fldl
loope
push
sub
lret
ss
hlt
shr
frstor
adc
xor
xlat
arpl
cmp
lods
testb
inc
jo
lds
sbb
dec
adc
add
xor
in
adc
cs
adc
cltd
in
dec
adc
adc
xchg
or
adc
adc
add
sbbb
xchg
sub
add
xchg
add
enter
adc
repz
push
mov
cmpw
mov
rolb
je
cmp
dec
lock
mov
out
insl
add
xchg
js
or
xor
data16
add
psubsw
push
dec
test
fs
push
in
outsl
xor
xchg
jo
sarb
mov
mov
xchg
das
addl
popf
mov
in
cmp
jl
inc
and
ja
cmc
iret
das
jmp
cmp
loopne
imul
xchg
jnp
jne
adc
out
enter
xorl
movsl
pusha
es
lret
or
lea
in
mov
add
lock
mov
repz
pop
addr16
shlb
jbe
call
push
cmp
pop
lret
mov
and
mov
push
add
sub
js
fimull
push
fidivl
jne
into
or
push
movsl
popf
ja
cmpsl
or
movb
jmp
jo
mov
jns
sbb
pop
and
add
dec
pushf
out
add
mov
mov
addr16
popf
push
popa
add
lea
sub
cmp
add
cs
mov
sbb
xchg
cld
add
lret
inc
pusha
outsl
test
test
stos
cmp
insb
aam
mov
push
mov
test
enter
mov
pushf
stos
pop
ret
outsb
ret
testb
mov
pop
dec
or
test
mov
fiadds
mov
mov
mov
ret
xor
inc
icebp
push
in
inc
jne
insb
jne
call
dec
lock
sub
mov
sub
repz
cmpsb
sbb
jl
stc
dec
cmp
push
sbbl
or
jg
pcmpeqb
xor
jle
jge
cmp
into
or
pop
add
adc
add
popa
pop
xchg
in
fdivr
xor
jmp
sbbb
xchg
mov
lods
dec
push
je
or
dec
push
mov
jl
and
enter
push
repnz
out
mov
sahf
cs
push
shl
and
dec
sub
sub
jo,pt
push
into
in
jmp
pop
lock
and
mov
test
add
ret
jnp
xchg
clc
inc
sti
push
xchg
pop
add
or
jecxz
xor
cltd
jge
faddl
or
add
mov
loope
rcrb
mov
mov
sbb
mov
sub
and
and
and
pusha
addl
sbb
cli
cmp
xlat
xlat
add
push
rorb
lahf
mov
push
or
push
nop
dec
jno
nop
data16
mov
jb
lret
xor
lea
aam
adc
adc
inc
mov
push
sbb
cmc
cwtl
arpl
ror
jae
mov
stc
int3
or
test
pop
cmp
movsb
pop
lea
scas
add
daa
pop
lock
add
outsb
jno
mov
inc
test
pop
inc
push
xchg
cmpsl
push
cmc
jb
add
clc
inc
dec
adc
roll
mov
inc
push
push
mov
cmpl
push
mov
fadd
mov
rclb
push
sub
cld
xchg
cmp
xor
add
lret
mov
rorl
ret
stos
into
or
mov
add
push
and
mov
inc
call
push
mov
ss
psubw
mov
xchg
sbb
lret
cmp
add
scas
dec
sarl
scas
push
ljmp
ljmp
adc
push
sbbb
dec
das
jmp
fnsave
and
fmull
pop
or
rcr
test
ret
sbb
ss
mov
test
cmp
add
push
leave
mov
bsr
jo
mov
bound
xor
or
mov
dec
xor
lea
sbb
mov
dec
ljmp
shl
push
cmp
mov
rclb
xor
sbb
push
stos
add
adc
daa
outsb
andl
lea
add
fisubl
sti
jns
pop
cmp
rol
adc
fstpl
add
dec
cmp
mov
lea
fisttps
pop
mov
pop
dec
clc
xor
jl
lea
push
sbb
xchg
jns
xorl
into
sub
test
je
mov
mov
ja
inc
test
sub
or
in
sub
xchg
push
iret
pop
pushl
xchg
mov
cmpsb
pop
ds
cmpb
jne
std
push
sub
mov
push
mov
ss
sub
sbb
and
out
es
or
mov
push
jp
call
decl
jecxz
add
clc
pop
add
adc
les
add
xor
roll
pop
jnp
xor
jle
cld
and
adc
dec
adc
pop
or
pop
fistpl
add
test
fs
jmp
dec
inc
jmp
pusha
test
loop,pn
jb
dec
sub
adc
movb
sub
xlat
ret
sub
or
jle
je
dec
rorl
sbb
jmp
cltd
icebp
ret
orl
movsl
jle
dec
inc
rcrb
in
aas
mov
decl
and
jae
lea
jmp
cmpl
jne
je
inc
cmp
jbe
repnz
push
pop
xor
cld
jae
es
test
fmull
fsubrs
mov
and
push
dec
sbb
cld
mov
sbb
lahf
std
xchg
push
dec
sbb
or
dec
jge
fs
cmpsl
cmp
pushf
stc
push
test
mov
pop
and
hlt
les
je
xorb
cwtl
jns,pn
je
rclb
pop
pusha
cmpsb
jo
inc
add
inc
out
xchg
xlat
xchg
sub
pop
mov
push
addr16
aaa
push
jnp
addb
mov
pop
xor
sbb
or
jns
or
xchg
les
cmp
cs
push
loopne
fisubrs
pop
pop
add
rclb
mov
sbb
mov
inc
in
mov
pop
test
xchg
push
je
bound
add
push
cmp
mov
and
jne
and
shrl
inc
jbe
popa
mov
mov
movsl
sbb
pop
adc
sub
mov
add
pop
movsl
push
je
cwtl
xchg
dec
cmp
sahf
inc
insl
test
sbb
mov
jmp
lea
or
jbe
stc
xchg
shlb
test
or
rclb
pushl
xchg
fsubs
nop
setne
fisubrl
push
or
in
mov
out
dec
jp
aam
sub
add
add
cmp
je
cmp
lods
psadbw
pop
mov
sbb
mov
xchg
pop
subb
lea
cmp
inc
and
cmc
std
cmp
sbb
sub
pop
adc
and
in
divl
cwtl
mov
adc
push
or
cltd
mov
add
jb
xchg
push
pushf
fistl
jae
push
xchg
or
fiadds
fidivrs
and
jae
sub
adc
daa
mov
inc
test
xchg
inc
cwtl
sub
mov
add
xor
push
testb
and
dec
push
jbe
inc
in
push
outsl
in
push
ficomps
adc
pop
or
fidivrs
je
cmpb
lret
inc
rorb
cmp
arpl
dec
test
dec
int
imul
push
push
test
or
add
aaa
sub
clc
sbb
cld
cmp
stos
test
rolb
in
jg
movsb
nop
dec
push
xchg
sbb
xchg
mov
hlt
inc
scas
xchg
inc
hlt
jns
push
add
jbe
cli
sbb
cmp
out
pop
cmp
pop
add
cmp
jae
push
push
push
add
sbb
or
hlt
jne
push
loopne
add
adc
addl
jne
mov
cmp
outsb
stc
mov
xchg
fmuls
dec
inc
jmp
pop
jnp
scas
out
or
ret
sbb
inc
push
cmp
test
jp
dec
add
lahf
or
popa
clc
lea
pop
cmp
mov
mov
pop
pop
pusha
lret
or
in
fs
xchg
test
das
fs
mov
mov
outsl
dec
push
hlt
neg
sbb
and
bnd
movzwl
push
sub
push
adc
loop
dec
xchg
push
mov
add
pop
orb
js
ds
cmp
and
je
clc
adc
xchg
mov
fistpl
add
je
or
into
cmp
out
je
fcmovnu
adc
pushl
sub
jge
add
cmp
mov
sbb
in
adc
cmpsl
mov
decb
and
jle
sti
sbb
or
push
cmp
out
xchg
popa
inc
cmc
cmp
mov
mov
add
jbe
jno
cld
movsb
jae
cmp
or
iret
jp
sbb
test
pop
rorb
pop
popf
cwtl
sbb
test
lods
cs
or
mov
add
lea
adc
test
mov
adc
mov
idivl
jg
cmp
dec
outsl
add
dec
mov
push
push
xor
cltd
and
push
shlb
fsubr
aaa
je
repz
lcall
inc
mov
ret
jnp
sti
test
jp
pop
inc
mov
push
rclb
adc
mov
ffreep
sbb
xor
scas
cltd
daa
pop
add
aam
mov
out
pusha
push
aad
ds
cs
and
dec
outsb
inc
outsb
outsl
out
sbb
pop
xor
or
cmpl
add
insb
insb
test
adc
mov
pop
fisttps
cs
pushf
out
push
or
pop
inc
xor
popa
and
adc
push
mov
addr16
ss
out
cld
mov
sub
or
adcl
shll
xchg
xchg
or
xchg
dec
incl
mov
jb
xor
addr16
pop
mov
and
sbb
sub
and
pop
pusha
inc
xor
or
popf
and
add
insl
mov
jb
push
jb
fadds
jae
loope
dec
add
mov
pop
popa
insl
sub
add
and
imul
je
add
das
push
jp
dec
dec
lock
sub
mov
cmp
aas
push
add
scas
std
cs
movsb
pop
or
incl
or
push
les
jne
sub
lea
add
sub
mov
std
mov
push
andb
int
and
inc
pop
pop
outsl
mov
adc
out
ljmp
add
popf
call
imul
mov
jbe
pop
fwait
jo
xchg
in
mov
ds
into
andl
sbb
iret
call
xor
add
arpl
pop
pop
dec
mov
dec
hlt
imul
lea
adc
arpl
add
pushf
sub
mov
pusha
test
lock
pop
xchg
out
lahf
mov
and
jge
cwtl
ds
dec
dec
call
gs
packsswb
test
arpl
fdivl
or
pop
adc
scas
xor
and
lcall
ret
add
pop
xlat
sbb
add
loopne
outsb
arpl
pop
push
je
lcall
shl
inc
push
and
inc
jae
pop
mov
xchg
mov
inc
lea
addb
and
push
jo
xchg
inc
sub
adc
push
mov
pop
push
xchg
push
and
rcr
mov
popa
test
xchg
loop
lds
mov
jmp
inc
jg
ljmp
in
idivb
mov
out
sbb
cmpsl
inc
push
aam
sub
fcomps
add
and
sbb
fdivl
push
jle
push
cli
jnp
xchg
xchg
mov
or
xchg
mov
movlps
push
or
sub
adc
dec
jge
mov
xor
pop
stos
or
fdivrs
cmp
inc
jle
push
push
dec
sar
add
pushl
dec
inc
sub
pop
lea
je
add
xor
inc
add
rcl
ret
jns
mov
mov
xchg
push
mulb
arpl
cmp
jb
mov
jb
mov
mov
sub
or
ret
cmpb
test
insl
addr16
dec
mov
fistpl
cmp
add
mov
cmp
imulb
cmp
scas
jl
mov
add
pop
je
dec
pop
loopne
ret
push
jae
lea
add
add
cmpb
jne
fidivl
test
test
out
jmp
mov
pushl
popa
pop
push
jb
and
mov
or
pop
mov
lea
add
rcl
sbb
push
jae
sub
or
dec
mov
test
xor
cmpsl
fists
scas
add
daa
call
leave
jmp
push
inc
cmpsb
sub
stos
add
and
dec
ja
push
xchg
add
fmuls
push
adc
add
loopne
mov
dec
mov
add
sahf
pop
cmpsb
pop
or
rclb
out
mov
out
mov
imul
mov
xchg
pushl
adc
pushf
inc
adc
mov
sub
inc
mov
push
hlt
sub
pop
das
dec
and
sub
inc
push
pop
xchg
lret
fs
insb
or
or
and
or
add
jns
sbb
sub
popf
mov
ja
mov
adc
fisttps
addr16
out
mov
cmpsl
xor
fsub
add
add
add
add
add
push
cmc
ret
or
or
mov
popf
clc
lret
loopne
pop
mov
xlat
mov
pop
mov
pop
std
add
mov
adc
fdivrp
dec
or
out
je
outsl
add
mov
repz
aaa
xor
in
dec
xor
inc
and
pushfw
rclb
jb
sbb
xor
adc
sbb
sub
iret
stos
popa
and
sub
sub
mov
je
dec
add
cmp
cs
jmp
and
cwtl
clc
std
incl
mov
pusha
dec
add
mov
add
push
ss
clc
push
or
inc
add
mov
pop
push
xabort
mov
xchg
daa
bnd
mov
mov
adc
add
mov
jb
push
jae
lea
push
sub
rcrl
cmp
sbb
sub
popa
stos
sub
inc
ja
shlb
add
ret
test
ret
lea
cmc
loopne
jge
imul
cld
cs
cmpb
xor
fnstenv
inc
jmp
push
pop
dec
ja
cmp
cmp
sub
arpl
mov
and
lea
ds
mov
jo
outsl
fs
test
rorb
and
stos
scas
xchg
fdivs
sub
sub
out
push
cmp
xor
lea
aad
out
insb
adc
pop
testb
divb
pop
pop
testb
push
fldt
in
sti
sbb
xor
or
mov
mov
sbb
dec
mov
pop
or
int3
jb
mov
adcb
jb
add
jns
jg
cmc
fldl
cmp
xchg
pop
lret
mov
push
adc
push
inc
mov
fcompp
jae
mov
push
aad
xor
loopne
dec
sbb
cmp
insb
adc
cltd
push
sahf
xchg
imul
out
gs
cld
or
je
xor
jge
cmp
mov
cmp
inc
cwtl
cmpsl
add
mov
lret
ljmp
andl
inc
add
fimull
adc
push
mov
cmp
sbbl
push
inc
or
add
notb
inc
inc
es
out
fists
push
xor
and
sahf
sub
hlt
xor
clc
popa
mov
iret
jne
imul
adc
push
outsb
sub
cmp
push
psubw
cwtl
lret
lds
imul
and
scas
add
mov
add
sbb
adc
add
pop
in
movb
jns
adc
stos
rolb
push
jbe
pusha
jo
inc
adc
cwtl
and
mov
stos
jno
pop
jmp
pop
fcoml
mov
jo
xor
mov
add
aaa
jmp
adc
mov
push
mov
jno
mov
sub
push
sbb
std
xchg
xor
test
cmpl
jne
or
inc
lcall
pop
xor
pop
sub
dec
dec
xor
ret
fisttpll
inc
arpl
mov
leave
cltd
addb
push
loope
into
pop
add
inc
add
xor
leave
dec
sbb
movsb
add
add
sbb
or
bound
nop
lret
pusha
and
addr16
or
jno
xor
pushl
mov
pop
ds
cmp
js
push
fsubs
add
or
sbb
inc
pop
ret
pushf
imul
push
mov
adc
cmp
loop
ret
pop
jg
cmp
je
xor
jne
pushl
adc
cmpsl
insb
stos
fwait
cltd
pusha
jo
cmpl
jbe
fstps
cmp
pop
es
and
inc
sbb
mov
sub
in
lea
cmp
xor
cmovb
dec
cmp
add
fisubrl
and
aas
fcmovu
cmp
sub
xchg
or
rorb
cli
scas
insb
push
in
push
mov
mov
sbb
out
add
int3
adc
rcll
inc
aaa
inc
in
adc
sar
dec
imul
orl
or
stos
movl
mov
add
or
mov
dec
sub
cmpsb
sbb
sarb
mov
repnz
mov
daa
or
outsl
xchg
adc
mov
and
aam
in
and
jbe
ret
mov
inc
sub
test
push
pop
xchg
cs
out
sub
lahf
mov
mov
cwtl
sub
imul
cmp
adc
xchg
and
test
sub
ret
or
mov
and
and
jnp
pop
adc
sub
jo
loopne
addl
adc
add
adc
ss
leave
xor
mov
pop
mov
cmp
add
add
das
pop
xor
and
pop
mov
adc
add
inc
inc
addb
xor
cmp
pushf
gs
inc
or
sti
mov
add
pusha
fcoms
adc
std
push
repnz
loop
and
cmp
cmpl
push
dec
mov
adc
push
andb
adc
or
cmp
aas
xchg
out
or
dec
or
out
stos
loopne
push
add
shlb
or
cmp
mov
cli
sarb
and
pop
xor
xor
ret
je
js
xlat
or
xor
ds
mov
push
mov
pop
lea
push
mov
xor
lods
jb
or
pop
cs
jge
jmp
mov
xor
push
stc
stos
movsb
loop
aaa
popf
and
pop
rcrl
popf
leave
xor
push
ljmp
aam
cmc
int3
jbe
cmp
sub
and
sbbl
test
je
xorb
push
xchg
out
hlt
mov
jo
lcall
push
mov
sbb
push
jmp
xchg
jp
or
sbb
cmpl
push
or
loop
adc
jmp
adc
inc
cmpb
lcall
fs
stos
fdivrl
fdivrl
sub
push
dec
fiadds
mov
adc
mov
pusha
in
push
loope
shll
leave
lds
mov
enter
or
jecxz
lea
imul
mov
ret
xchg
jb
andl
xchg
and
adc
je
fists
insl
xchg
and
enter
push
loope
rcrb
lods
out
pusha
pop
adc
lahf
call
lret
xor
mull
pop
jle
mov
enter
in
adc
jo
clc
pusha
sbb
pop
fs
xor
in
pop
jnp
sbb
jmp
add
sub
dec
xlat
xchg
and
scas
cmp
aas
sub
inc
xchg
mov
lea
push
leave
inc
stos
clc
inc
std
popa
enter
ja
push
xchg
mov
popa
lcall
mov
mov
arpl
xchg
dec
and
add
dec
adc
dec
gs
popa
jl
pop
shl
cld
sbb
repz
push
ds
cld
push
xchg
lods
ret
fsts
add
js
fstps
mov
add
sti
dec
push
push
fs
clc
xor
and
ja
lahf
int
jne
and
fsubl
aad
lds
mov
loopne
mov
push
and
mov
popa
push
lret
pusha
and
popa
mov
sub
fwait
xchg
push
inc
cmp
and
loop
sub
daa
jge
adc
jno
push
mov
sarl
insl
dec
cmp
je
imul
mov
and
shll
jecxz
pop
jl
subl
add
cmp
into
sbb
sti
addl
lea
stos
push
jb
std
cmp
sbb
sub
int
push
mov
jbe
or
bound
inc
mov
ret
inc
out
sub
mov
or
movl
xchg
dec
add
inc
or
mov
dec
mov
gs
das
icebp
dec
and
std
push
repnz
popa
loopne
sbb
gs
cs
cmpsl
pop
adc
push
push
dec
push
cmp
mov
sahf
push
xchg
inc
pop
rclb
repnz
sub
mov
adc
and
mov
pop
inc
sub
fisttpll
mov
cwtl
into
jmp
into
out
push
loope
push
add
rcrl
xor
add
add
imulb
push
cmp
mov
je
adc
sbb
das
outsl
push
xor
subps
add
inc
std
xchg
clc
mov
adc
jl
mov
inc
mov
imul
push
jne
sahf
adc
mov
xor
test
jecxz
ss
add
fidivs
pop
js
out
pop
adc
or
push
shrb
std
inc
arpl
ret
imul
mov
add
jmp
push
mov
dec
loopne
pop
into
add
jmp
lret
movsl
cmpsb
rorl
jnp
dec
in
xor
add
pop
mov
movb
and
mov
xchg
mov
andb
lods
nop
jo
rcll
mov
add
xchg
or
sbb
pop
and
add
aam
insl
xor
bound
cmpsl
popa
lock
jmp
cmp
xlat
ret
sbb
adc
add
push
sub
movsb
arpl
call
add
in
sbb
imul
pusha
push
xor
rcl
push
sbb
bswap
and
inc
push
add
xor
jo
and
mov
pushl
cmp
jne
sub
xor
sbb
adcl
roll
adcl
daa
bound
fadd
test
push
inc
in
mov
jnp
mov
jne
aaa
sbb
push
das
ret
adc
rorb
xlat
mov
aaa
mov
aad
dec
xchg
sub
mov
fiaddl
lds
call
gs
sbb
scas
shrd
push
push
repz
enter
andl
mov
jbe
ffreep
test
add
mov
rcll
or
add
in
cmp
ds
inc
pop
mov
or
sbb
fstl
push
jne
push
push
leave
js
jne
jnp
mov
jne
or
mov
or
jne
or
jne
testl
dec
cwtl
dec
loop
mov
ljmp
lock
lods
add
fists
decb
lahf
cmp
icebp
adc
cmp
push
shlb
lret
fsubrs
sbb
imul
subl
cld
dec
jnp
test
push
popa
inc
add
jecxz
loope
daa
dec
add
pop
ficompl
xchg
rorb
push
int3
fcompl
push
xchg
clc
ja
lahf
or
movsb
inc
mov
jge
mov
and
xor
cmp
sub
addr16
sti
mov
xlat
popf
adc
push
jge
mov
mov
mov
lea
sub
jp
or
mov
out
fs
sbb
push
fdivl
pop
mov
dec
scas
lcall
inc
pop
jnp
loopne
fbstp
or
js
jg
sbb
ss
adc
popa
mov
mov
icebp
push
rcll
cmp
push
add
icebp
dec
lahf
adc
cmp
sbb
sahf
mov
shll
or
jnp
les
mov
or
dec
aam
push
rolb
dec
mov
orb
mov
enter
mov
pop
sbb
leave
mov
jne
dec
sub
test
pop
sub
sbb
jne
pop
imul
mov
dec
push
je
xor
outsl
sbb
mov
pop
imul
mov
cmp
scas
ss
ljmp
xor
fiadds
aam
adc
and
add
cwtl
pop
or
cmp
je
cmpb
in
in
push
or
cmp
adc
fadds
outsl
aam
mov
imul
sbb
and
movaps
xchg
cmp
jmp
xchg
or
jnp
icebp
sbb
push
cmp
cmp
mov
cmp
jl
mov
cmp
out
lret
les
mov
cmp
arpl
pop
sbb
mov
push
sbb
push
hlt
push
icebp
pop
mov
clc
cmp
fdivs
inc
xchg
pop
and
sbb
add
dec
outsl
push
push
adc
test
vpsubb
aam
stc
mov
imul
adc
or
lea
clc
lahf
sub
insb
mov
inc
loopne
pop
push
ja
mov
mov
pop
iret
mov
pop
ds
cwtl
insb
sub
pushf
or
lret
ja
jae
dec
add
insl
lret
xchg
add
or
rolb
and
inc
orl
pop
cmpsl
les
movsl
add
rcll
insl
cmpsb
mov
push
clc
addl
jbe
aam
nop
imul
xor
dec
xor
adc
imul
lock
cmp
dec
shll
insb
jo
pusha
shll
js
mov
out
cmp
or
call
int
pop
andl
clc
sti
or
mov
fsts
jge
inc
mov
mov
xor
addr16
scas
sub
pushf
push
adc
ficompl
adc
and
fucom
or
movb
sbb
nop
sar
mov
sub
xchg
das
push
fsubs
add
and
sbb
and
xor
add
and
push
xor
push
cmp
sub
lds
notb
and
adc
xlat
daa
or
inc
push
loop
jo
movsb
push
negb
cmp
add
sub
out
inc
pop
sbb
mov
adc
push
mov
sub
mov
jl
mov
mov
lods
mov
addps
cmp
outsl
dec
pop
icebp
and
sub
jnp
adc
mov
ret
or
pusha
sub
lea
or
xchg
pushf
push
xor
jle
sbb
jne
sbb
jb
mov
lcall
inc
sti
sbb
sbb
es
mov
mov
fbstp
or
push
xor
shlb
adc
test
ret
out
mov
xchg
lret
push
dec
and
rorb
push
mov
add
shl
ret
mov
add
add
cmpsl
loope
imul
add
je
sub
mov
das
xorl
pop
addl
loopne
les
jne
orl
xchg
imul
adc
or
pop
cli
xchg
adc
std
enter
and
xchg
mov
jne
mov
cmc
dec
mov
movsl
bnd
pop
rclb
lds
add
lods
cmp
sub
sub
and
mov
or
pop
mov
mov
xchg
out
cmp
adc
or
mov
sub
mov
pop
dec
jne
cmp
mov
data16
cmp
insl
mov
jne
xor
in
inc
xchg
ja
fwait
push
mov
dec
lahf
jo
cld
fwait
scas
adc
add
dec
mov
add
lds
push
pop
mov
or
into
js
or
or
invd
and
add
in
mov
xchg
outsl
andl
dec
pushf
mov
push
push
inc
ljmp
jne
js
sub
popf
lock
ljmp
cli
out
fidivrs
jl
adc
inc
lret
mov
fwait
lods
pop
mov
sbb
mov
dec
sbb
pop
dec
pop
jp
adc
or
inc
dec
leave
gs
wbinvd
pop
pop
jae
es
xor
xor
jge
pop
xorl
insl
adc
sub
xor
in
out
rorl
pop
sub
jo
fwait
test
sub
cmc
inc
xchg
enter
in
push
nop
repnz
push
js
movsl
mov
outsb
rorb
dec
jb
sbb
lea
cli
push
mov
mov
mov
and
mov
and
sbb
mov
int3
lock
adc
faddl
inc
lock
shll
inc
test
or
or
jo
in
nop
gs
je
nop
pop
sub
fs
push
sbb
fs
insb
insb
push
push
daa
add
xor
adc
cmp
jl
icebp
test
testl
je
cmp
je
popf
add
push
lds
arpl
and
mov
out
push
lret
adc
outsl
lds
sti
push
sub
inc
and
adc
adc
jmp
push
jne
mov
dec
rcl
inc
xor
cmpsb
movsl
mov
lock
jb
rcll
lock
mov
sti
shll
or
jmp
jecxz
push
push
testb
xchg
into
push
sbb
or
and
cmp
popa
movsl
psubsb
sarb
mov
add
push
fcmovnbe
movb
dec
roll
xor
cmp
xor
jne
pop
or
pop
flds
pop
les
push
push
push
xchg
mov
test
sahf
and
xor
test
cmpsb
xor
pop
mov
pop
pop
mov
sbb
movsl
adc
in
and
dec
adc
mov
sbbl
push
fimull
adc
in
insb
fucom
loopne
jno
test
popa
inc
pop
push
dec
icebp
popf
jecxz
and
push
cs
mov
or
icebp
and
push
push
imulb
push
xor
ret
add
stos
push
insl
or
pushf
and
fidivrs
jbe
sub
sub
cmpb
lock
divb
jl
jle
cmp
xchg
push
and
inc
sbb
push
lea
inc
add
sub
mov
pop
xor
cmpb
rclb
sbb
jmp
dec
dec
pop
lock
jo
dec
mov
push
js
sub
idivl
popa
add
sub
pop
ret
out
push
cs
or
or
mov
fstps
inc
pop
arpl
xchg
cwtl
or
test
js
dec
sbb
fdivl
enter
filds
outsb
test
or
inc
mov
inc
adc
pop
add
sub
pop
dec
cmpb
dec
cltd
rorl
xchg
adc
cli
fcoms
or
sub
sub
ret
jge
mov
mov
stos
push
sar
adc
add
cwtl
test
pop
sbb
jbe
and
or
mov
iret
xchg
sbb
jmp
push
mov
insb
inc
push
push
mov
or
pop
out
loope
movsb
in
out
nop
sub
popa
and
sbb
xchg
repz
xchg
mov
ret
inc
and
adc
xor
int
mov
out
ret
mov
xor
push
lea
mov
pop
and
inc
jno
sub
or
dec
inc
loop
push
mov
lds
xor
push
push
push
or
ja
fisttpll
adc
mov
inc
inc
lock
xor
loopne
mov
xor
sbb
gs
push
fmuls
mov
fistpl
pop
imul
je
mov
add
shll
push
xor
mov
sti
fwait
loop
mov
rcrb
push
sti
or
add
into
lcall
xor
xor
dec
loopne
sbb
xor
mov
movsl
add
jbe
sub
jl
mov
sbb
mov
sbb
and
clc
ret
subb
push
adc
mov
lds
pop
lret
movsl
cmp
imul
push
lods
scas
aaa
push
inc
adc
or
adc
ss
xor
pop
sahf
lret
cld
sbb
push
mov
push
out
and
sbb
cmp
repnz
xor
hlt
sub
movsl
out
out
cmpsb
or
test
ficompl
cs
outsl
and
daa
out
push
dec
repz
das
and
lea
or
fimuls
and
mov
fisubrl
jl
repnz
inc
loope
pop
add
movsl
push
sub
in
es
sbb
sub
inc
sbb
push
addb
and
or
push
pop
xchg
and
loope
mov
and
and
leave
mov
adc
mov
fisubrl
add
mov
pop
mov
into
mov
fstpt
jg
adc
int
rcll
ljmp
xchg
arpl
fdivs
or
cmp
imull
ljmp
add
sar
push
fs
mov
push
cs
jl
pop
or
pusha
mov
jb
and
loopne
lock
lock
inc
xchg
pop
pop
mov
xor
cmp
push
add
imul
and
sub
pop
dec
xor
call
add
push
mov
sbb
fadds
test
add
rclb
mov
pop
sub
cmpsl
in
out
aam
fxch
xor
mov
push
or
cmp
fcmovu
or
push
jbe
pop
call
xchg
push
mov
inc
imull
pushf
adc
add
add
and
sbb
and
sbb
rorb
xchg
cmp
push
jnp
xor
xor
ss
xor
adc
push
inc
xor
dec
leave
push
jb
cmp
nop
add
or
adc
ret
ret
xor
add
fwait
xchg
add
ret
sarb
ret
movsb
mov
dec
adc
mov
xor
insl
lret
test
mov
push
inc
xor
lret
clc
lds
lret
std
decl
ljmp
dec
ss
clc
or
pop
and
faddp
vpaddsb
add
sub
and
push
add
or
popa
lea
sar
pusha
sbb
and
roll
add
js
pushl
scas
mov
pop
mov
pop
add
ret
sbb
pop
mov
mov
mov
cmp
inc
push
rcrl
inc
data16
wbinvd
dec
into
arpl
bound
adc
mov
inc
negb
cmpsb
sub
xor
mov
sub
jle
inc
andl
adc
ret
jo
mov
fs
in
adc
add
ror
les
jecxz,pn
jecxz
leave
and
dec
xor
pop
and
push
push
insb
movl
inc
xor
add
push
fcoml
inc
cmpsl
shll
sub
and
jo
or
cmpsl
mov
adc
pop
jecxz
divl
leave
cmp
cmpsb
push
lcall
arpl
mov
push
pop
xor
inc
and
jl
pop
add
out
sub
sub
ja
shll
pop
jmp
pop
fiadds
adc
mov
push
pop
bound
xor
mov
push
sbb
inc
dec
add
jl
imul
push
sahf
and
pop
pop
pop
xchg
pop
pop
sub
pop
add
pop
lock
push
push
xchg
add
push
sub
pop
aam
dec
mov
mov
add
or
cmp
add
or
pusha
imul
add
pop
and
xchg
aaa
mov
cmp
mov
jl
loope
xor
jg
or
push
fistl
loopne
popa
inc
push
rolb
jl
push
push
ds
xchg
mov
int
jle
inc
mov
leave
pop
adc
push
cmpsb
divb
mov
sahf
pusha
int
cmpsl
sub
mov
pusha
repnz
mov
aas
add
xor
xchg
cli
add
inc
push
mov
cmp
popa
add
fldcw
movsl
sarl
aaa
lods
in
in
add
add
aam
xchg
mov
das
inc
cmp
xchg
fwait
nop
arpl
or
imul
rolb
test
es
push
jecxz
mov
or
or
push
leave
add
dec
cwtl
mov
fisubl
mov
mov
into
mov
cmp
jns
xchg
insl
insb
int
nop
inc
mov
or
je
out
neg
aas
jo
jle
mov
out
jmp
dec
arpl
out
pop
cmpsb
outsb
fistl
pushf
jmp
pop
add
insl
cmpb
fisttpl
pop
push
push
push
inc
popf
les
or
imul
pop
cmp
ja
mov
ja
or
lea
andb
xchg
int3
movsl
add
stos
push
ret
push
lret
dec
cmp
and
popa
or
add
iret
pop
scas
jecxz
cmpsb
imul
aad
push
addl
aas
movsl
add
xchg
and
xor
push
repnz
icebp
add
pop
sbb
add
testb
repz
mov
xchg
fimull
aas
or
sub
outsl
inc
sbb
js
adc
shrb
xor
outsl
arpl
cmpsb
xor
jns
mov
andw
cwtl
push
push
stos
loope
popl
nop
es
adc
lcall
fucomp
push
add
xor
push
jns
adc
test
cmpsl
sub
pop
sub
dec
pcmpeqd
push
push
sbb
push
loopne
or
push
push
inc
mov
aaa
pop
pop
push
xor
push
or
and
hlt
mov
add
fnstcw
rorb
sbb
dec
and
orl
mov
xor
cmpb
data16
mull
dec
sbb
bound
xor
add
sub
sbb
add
and
adc
sbb
adc
xchg
leave
dec
cmp
adc
push
xor
out
xchg
mov
cmpb
and
jp
pop
mov
xor
add
aaa
sub
pushf
faddl
dec
test
push
sub
sti
lods
mov
or
and
sahf
data16
shlb
aas
jmp
and
aad
cmp
lds
add
push
mov
int3
and
pop
cmc
push
cld
aas
movb
test
scas
jge
movl
pop
sub
insb
shr
inc
xchg
stc
jge
xor
adc
xor
loope
push
sbb
push
hlt
aam
add
or
push
cmp
std
mov
decb
outsb
fisubrl
jno
xor
dec
mov
add
mov
bound
lock
and
and
fsubs
cmp
or
hlt
sbb
pop
pop
xlat
adc
arpl
pop
push
sub
inc
lock
or
pop
cmp
xor
jecxz
inc
xor
jecxz
or
dec
add
xor
xor
jae
adc
push
xor
adc
or
or
xorl
js
push
sbb
arpl
cmpb
cs
push
add
iret
xchg
sub
sbb
test
jmp
mov
fldl
and
insl
add
push
push
sub
pushf
test
push
popl
cmpb
add
pushl
faddl
jg
inc
xor
mov
inc
movsb
xor
je
in
add
arpl
sub
adc
jno
push
loopne
movsl
addb
aad
inc
das
pusha
js
cli
add
add
je
push
push
or
add
pop
mov
fsubrs
lea
push
sbb
xor
sub
movb
leave
add
sbb
cmp
add
push
ret
jbe
daa
pop
push
insb
sub
mov
or
or
sbb
cmc
sub
ret
sbb
flds
xchg
test
aas
test
inc
dec
hlt
sahf
xchg
andb
jg
mov
das
push
je
or
fwait
or
xchg
lret
test
fisubrs
inc
ja
cwtl
ret
imul
mov
nop/reserved
push
mov
and
es
cmpb
xor
mov
aaa
movsb
or
fwait
inc
cmpsb
sahf
idivb
or
fstpl
fbld
rorb
add
daa
mov
and
cmp
adc
push
cli
jl
adc
bound
jns
adc
sbb
fwait
lock
int
fs
push
arpl
push
mov
icebp
xchg
add
pushl
dec
add
adc
xor
jbe
stos
popf
and
mov
mov
inc
cmc
pop
sub
orb
push
push
mov
repnz
xor
testl
loope
dec
pop
dec
es
and
rorb
call
mov
test
cmpsl
dec
or
sub
bound
push
leave
pop
xchg
adc
inc
push
jae
sub
jmp
or
dec
add
fstps
je
lea
hlt
lret
add
rcll
jbe
push
pushf
mov
mov
jl
je
insl
or
xor
test
add
jge
lret
mov
jle
xor
or
aaa
push
neg
ret
jge
sbb
testb
rcr
adc
mov
cmpsb
add
inc
inc
nop
jne
imul
add
fidivl
cwtl
pop
clc
mov
jo
jo
push
je
adc
pop
daa
fs
jbe
cmpl
sbbl
sub
pop
and
je
jnp
or
out
inc
xor
in
movsl
dec
and
js
lea
js
mov
cmp
cmp
mov
push
imul
sub
cmp
insl
dec
jmp
andl
pop
loopne
mov
inc
add
cmpb
cs
subl
xchg
std
and
sub
adc
cmp
sbb
shl
arpl
adc
cmp
xchg
push
mov
cwtl
add
lret
mov
xchg
mov
and
aad
sub
jns
adc
pop
aad
sbb
pop
mov
mov
addl
push
sbb
lock
jnp
jnp
out
cwtl
pop
das
in
daa
add
adc
in
roll
mov
insb
push
std
mov
in
mov
xor
lods
mov
or
lea
loop
cmp
dec
fisubl
dec
pop
adcb
pop
in
sub
mov
sar
or
dec
test
xor
shl
sub
adc
adc
xchg
adc
lds
shll
pop
les
lods
leave
loop
xchg
or
jno
adc
mov
jne
ret
aas
and
sti
dec
ja
sub
sub
sub
sub
add
das
adc
je
stos
jns
dec
ja
push
jge
push
or
add
add
sbb
sahf
add
ret
pop
jnp
ds
xor
cmp
adc
lcall
push
cmp
mov
push
inc
adc
add
int3
mov
ja
mov
inc
ret
dec
lock
xchg
lock
lock
call
mov
rorl
jecxz
lods
stos
inc
adc
inc
xor
stos
cmp
sub
inc
ret
or
adc
and
dec
pop
add
frstor
and
mov
mov
ljmp
std
and
movsl
test
jl
and
or
cld
leave
outsb
mov
dec
je
sub
and
sub
mov
testb
in
addl
fistpl
in
fwait
mov
into
adc
shll
or
push
adc
or
cs
sub
xchg
pop
mov
pop
aas
in
imul
adc
push
insl
inc
or
dec
or
or
sbb
sbb
dec
punpcklbw
cmp
jge
and
jo
nop
sbb
or
or
jne
push
icebp
mov
mov
cmp
cs
push
or
xchg
fldt
push
pop
fsubl
or
add
je
push
test
xchg
sar
and
push
inc
dec
adc
or
push
insl
pusha
sub
pop
call
push
pop
mov
loopnew
push
les
push
sub
lock
push
fsubs
pop
daa
push
repnz
pop
shr
ret
sub
sarb
out
pop
dec
xor
add
mov
dec
imul
push
dec
cltd
movl
pop
and
inc
add
adc
in
add
add
add
adc
sub
ds
das
mov
enter
in
in
dec
xor
or
fdivrl
in
add
xchg
jge
mov
les
lods
dec
out
dec
sbb
mov
sahf
push
add
fcoml
nop
cmpsl
ret
sub
in
push
xor
fmuls
mov
xchg
push
test
mov
fsubrs
or
ljmp
push
pusha
adc
dec
or
ret
mov
cmpsl
sub
iret
mov
add
mov
xchg
aas
jl
sbb
dec
aam
push
orb
push
es
xchg
or
mov
xchg
rcrl
sub
add
outsb
lcall
mov
and
orb
jmp
cltd
decb
xchg
ss
inc
mov
mov
sbb
or
adc
xchg
mov
scas
push
cmp
rorl
test
movsl
push
adc
xor
mov
mov
dec
xor
or
cs
adc
mov
mov
test
dec
sub
or
out
inc
nop
jne
mov
jmp
push
xor
or
out
aaa
inc
ret
jge
mov
jae
ds
fcompl
sub
in
pop
hlt
or
lahf
dec
jl
sbb
stos
sub
mov
sbb
and
push
jb
imull
jb
test
outsl
loopne
leave
sub
je
mov
xor
mov
and
jb
cmp
adc
or
or
pop
dec
inc
rorl
or
mov
notl
ja
scas
sub
mov
pop
loope
mov
xchg
dec
push
and
sub
mov
push
dec
push
sbb
adc
add
sbb
xchg
push
xchg
cmpsl
xor
repnz
or
inc
jb
fld
ja
mov
mov
and
mov
popf
and
jg
dec
sub
and
mov
cwtl
ret
arpl
int3
test
andl
cmp
in
jle
push
inc
mov
js
jno
ficomps
pop
push
inc
leave
fcomps
je
rcl
add
pop
mov
add
lahf
adc
pushf
imull
push
push
xchg
push
sub
lds
mov
push
inc
pop
jae
data16
xor
aaa
prefetcht2
xchg
in
mov
inc
xor
xor
orl
pop
push
push
mov
test
mov
add
dec
xor
pop
loop
fisubl
sbb
mov
js
mov
jne
mov
sarb
push
call
sbb
je
and
sbb
jp
jle
push
jb
or
pop
adc
mov
adc
or
inc
and
add
or
xor
sub
frstor
xchg
adc
out
adc
test
lock
enter
and
sub
or
cwtl
stos
cmp
bound
adc
jne
add
adc
mov
lock
jge
mov
aam
cmp
outsb
sbb
pop
hlt
and
sub
xchg
fiaddl
cmp
or
jne
xor
mov
mov
add
sbb
les
fimuls
test
sub
add
push
xor
ss
pusha
sub
lahf
add
pop
dec
enter
jne
and
and
xor
adc
mov
xchg
or
add
aam
fbld
jne
push
mov
movsb
in
out
pop
test
push
adc
andl
js
je
fcmovnu
pushf
les
dec
out
inc
mull
arpl
sti
or
inc
loope
sarb
sbb
xchg
and
ret
sarl
push
sbb
out
push
loopne
jmp
std
and
adc
mov
jmp
cmpsb
inc
or
cmp
add
sbb
xchg
mov
adc
pop
clc
and
cmp
jb
xor
mov
clc
inc
cmp
cmc
add
insb
mov
dec
add
cld
rorl
cmpsl
inc
adc
push
mov
pop
adc
fsubs
xor
ja
jno
pop
mov
into
jle
jecxz
aam
sub
jb
mov
add
dec
repz
jbe
fistl
pop
mov
sbb
lcall
mov
aam
adc
and
inc
loopne
xchg
and
xchg
cmp
in
add
adc
sub
adc
fmull
xor
clc
sbb
push
fs
mov
outsl
xor
cmp
pop
dec
out
adc
or
push
or
adc
inc
and
mov
cld
sbb
in
or
cmovno
cltd
sub
lods
fbld
fsubrs
arpl
cld
xchg
pop
mov
pop
mov
int
in
jne
leave
outsb
addr16
cmp
mov
repz
lock
arpl
loope
lock
dec
cmpsl
arpl
jmp
arpl
rcr
fadds
in
and
cmp
sbb
jge
in
sbb
cmp
icebp
xchg
pop
add
outsb
dec
out
test
test
and
or
les
jle
imul
daa
subb
mov
sahf
cmpsb
push
lret
cmp
cli
loopne
je
rclb
push
mov
popf
push
sbb
dec
dec
jo
and
sbb
cmp
or
sti
xor
sub
cli
ret
mov
dec
loop
mov
dec
dec
push
push
dec
mov
pop
je
test
cmp
in
cmp
stos
stos
mov
mov
retw
sti
mov
fsubs
shrl
xchg
inc
cld
push
mov
sbb
arpl
push
sbbb
addr16
dec
sbb
adc
call
add
lods
out
adc
rcrb
inc
sub
push
mov
sti
xor
mov
jbe
cmpb
dec
je
sub
push
add
test
pop
mov
dec
add
dec
jp
cld
push
mov
and
fwait
push
outsb
lods
adc
push
cld
cmp
or
popf
std
aas
nop
add
shlb
mov
pop
cmc
adc
stos
cltd
push
das
pop
and
and
push
mov
sbb
inc
cs
adc
pop
xor
stos
pop
int
dec
or
sahf
out
mov
je
adc
cmp
es
push
push
nop
xchg
cmpsl
sbb
addr16
dec
sbb
cld
and
arpl
mov
jmp
jne
sub
and
es
push
sahf
pop
sub
push
sub
sbb
testb
dec
add
pop
push
xor
scas
adc
loopne
push
cmp
xor
cmp
cmp
pop
imul
cmp
jns
jo
inc
scas
shll
mov
jne
inc
out
jns
dec
shl
jne
dec
mov
dec
add
daa
lods
cmp
cmp
inc
push
je
orb
outsl
test
ds
dec
dec
jmp
insl
test
add
in
adc
push
push
inc
and
xor
cmp
addr16
mov
pop
add
cmp
repz
dec
pop
jmp
es
sahf
out
sahf
cs
les
popa
dec
sub
jne
push
inc
inc
mov
test
add
add
mov
and
pop
adc
dec
or
into
mov
mov
repz
push
ret
aad
or
pop
push
sub
imul
and
add
inc
sub
or
fsubl
push
xor
xlat
nop
rclb
movsl
push
movsl
jb
sbb
andl
gs
push
loope
or
iret
push
test
out
int3
popl
jmp
sub
inc
and
sbb
dec
fcoml
in
or
and
adc
je
cltd
fsubl
iret
js
inc
in
pop
push
ret
data16
sbbb
inc
in
mov
xchg
call
mov
loope
cmpsl
mov
mov
add
aam
sbb
or
xchg
xchg
xor
imul
jp
loop
pop
dec
loopne
loopne
push
xchg
inc
pusha
add
cmpl
inc
xchg
rcrl
jb
xor
mov
jne
cmc
add
mov
icebp
and
popf
std
lcall
lds
sbb
popf
add
sub
push
cmp
pop
adc
add
add
int3
pop
inc
cmp
jp
out
pop
ds
or
inc
xlat
aaa
add
sbb
loopne
dec
and
loop
scas
pop
pusha
sub
je
and
shll
bound
push
imul
sbb
inc
ret
mov
add
add
inc
cmpsb
imul
push
or
sub
jecxz
add
mov
push
shl
in
inc
pop
or
repz
or
xchg
loopne
popf
mov
or
je
repnz
mov
inc
leave
xchg
cld
jno
push
push
mov
jge
cmp
js
add
cmpsb
jbe
push
lahf
pusha
int
and
xor
jge
cltd
inc
pushf
mov
scas
push
or
notl
stc
add
pop
ret
pop
cwtl
pop
cmp
jne
sbb
int
outsb
push
add
je
or
xchg
pop
cmp
pop
ljmp
xchg
adc
addl
push
lahf
cld
xlat
push
dec
adc
stos
stc
or
push
lods
jle
inc
xor
stos
sbbb
orl
jge
add
shlb
pop
push
mov
xchg
xchg
add
call
mov
or
jmp
jo
or
add
fsubr
in
or
sub
loop
xchg
ret
mov
dec
push
mov
jo
ja
xchg
adc
sbb
sbb
jl
dec
sbb
out
inc
push
jmp
push
fisubrl
xchg
or
xchg
mov
pop
faddl
add
ret
mov
adc
and
adc
jo
sub
cmpsl
and
mov
sub
cmp
das
jo
jmp
jg
aam
data16
inc
xchg
imul
loop
push
in
xchg
fmull
sbb
lds
and
pop
je
dec
push
push
cmpsl
cmc
int
ja
ss
fisubs
mov
xor
icebp
mov
and
in
cwtl
dec
cmpsb
adc
pop
push
push
sub
sbb
subl
jns
jnp
or
stos
add
push
xor
andb
das
icebp
cmp
mov
push
jb
or
in
mov
cld
lcall
out
shll
push
leave
push
xor
pusha
sbb
add
cmpb
imul
imul
addr16
bound
and
mov
pusha
mov
inc
add
add
adc
sarl
sub
leave
cld
xor
push
xor
push
sbb
nop
and
out
xchg
push
push
cmpsl
test
test
push
rclb
out
push
dec
stc
add
pusha
xchg
fstps
sub
adc
jnp
lea
add
mov
cmp
push
loope
mov
cmp
push
pop
pop
jmp
or
xchg
push
adc
outsb
push
or
pop
iret
test
xchg
or
loopne
ret
icebp
push
lea
xchg
xor
cmpsl
add
xor
push
sub
xchg
and
cmp
fistpl
test
fs
enter
sub
int3
or
repz
adcl
test
mov
mov
std
xchg
add
lret
ja
push
pop
push
add
inc
enter
push
mov
add
int
xchg
ja
jge
jl
cs
add
or
insb
fdivs
andl
and
fs
mov
ja
mov
daa
scas
les
jnp
shrb
jne
stos
into
and
ja
or
loope
je
scas
jbe
sbb
pop
aaa
loopne
xor
scas
xchg
jno
push
lahf
mov
sbb
and
jp
into
repnz
xlat
add
pusha
xchg
jl
jle
jbe
jg
dec
mov
sub
je
ret
dec
sub
imul
push
filds
rol
push
push
mov
add
fwait
int3
ss
pop
jb
push
loope
mov
add
dec
inc
or
popf
orb
fistpl
out
jo
sub
shll
push
lea
mov
pop
sarb
push
sbb
push
sbb
fwait
adc
add
mov
mov
xor
imul
xor
or
cmp
adc
mov
sbb
cmp
dec
or
lret
ss
rclb
xor
in
sti
jp
aad
xchg
arpl
stos
adc
add
fnsave
dec
stos
rcrb
lods
mov
jo
add
cld
leave
jae
mov
cmpsl
adc
or
sub
or
lods
punpckldq
xlat
cmc
sub
push
clc
scas
adc
and
inc
adc
xchg
mov
jo
movsl
jne
fcomi
pop
adc
push
mov
mov
pushf
mov
add
and
cmpsl
inc
std
je
add
jo
push
faddl
test
add
sub
or
adc
sub
adc
and
push
adc
sbb
add
sahf
pusha
push
decl
ss
fsubrs
sub
ret
dec
inc
xchg
or
sbb
cmp
jae
sbb
add
test
or
add
cmpb
jb
sub
add
dec
dec
sub
push
xor
push
mov
push
call
hlt
xor
in
sbb
sbb
push
out
je
mov
push
je
adc
push
pushf
cmp
lea
push
push
pop
mov
adc
or
push
mov
push
mov
and
and
dec
enter
dec
xchg
pop
ret
ret
dec
cmovg
jmp
lea
pop
sub
test
adc
mov
push
lcall
cmpsl
lods
shl
hlt
jl
push
clc
rcl
subl
std
ljmp
cld
mov
outsl
push
fsubr
data16
sub
pop
rorl
xchg
inc
pop
add
fdivl
scas
pop
inc
and
jbe
sub
lea
aam
adc
push
std
mov
fisttpl
push
cmp
pop
and
movsl
mov
dec
push
pop
leave
outsl
sarl
sub
and
inc
gs
jmp
stc
or
popf
add
inc
sbb
cmp
fimull
or
pop
sub
sbb
jnp
add
jns
cmp
rolb
sbb
adc
push
mov
hlt
out
push
add
sub
jl
test
into
xchg
jg
mov
sahf
jg
scas
add
in
sub
mov
push
cltd
pop
mov
ret
push
aas
clc
push
cld
fists
fldl
shr
not
sbb
dec
dec
shlb
push
mov
gs
imul
out
fmuls
jbe
push
es
xor
push
es
inc
lock
lret
xor
add
add
xor
repnz
cld
je
or
inc
sub
rcrl
ss
cmp
cmpsl
jns
xor
inc
pusha
fnstcw
cmpsl
dec
test
arpl
add
adcb
cmp
inc
loopne
out
movl
movl
pop
or
xchg
inc
xchg
jae
mov
fcos
inc
mov
jns
dec
push
adcb
insb
jno
jne
out
or
icebp
xor
push
dec
sbb
lret
and
pushf
push
pop
sbb
mov
in
movsl
push
cmp
dec
sub
push
add
movl
jb
and
popf
mov
cwtl
fstpt
inc
push
pop
xor
inc
dec
jne
jmp
inc
outsb
adc
fildl
icebp
push
addb
sbb
dec
call
add
roll
sbb
es
mov
call
outsl
arpl
and
bound
js
push
rcrb
inc
rcrl
out
es
and
jl
cmp
lahf
mov
lcall
or
inc
call
movb
and
mov
idivb
dec
sub
inc
cmp
adcb
sbb
pop
sub
mov
ljmp
je
pop
cmp
fbld
popf
sub
mov
out
cmp
orl
and
mov
faddl
cmpsl
lods
mov
or
sbb
jmp
adc
pushl
sub
and
ret
enter
sbb
xorl
add
mov
adc
pop
cwtl
jg
mov
imul
fistps
cmpsb
xlat
push
and
push
mov
pop
dec
pop
and
adc
clc
inc
mov
inc
fisubrs
sbbb
mov
and
or
xchg
rcrb
cmp
add
mov
mov
ret
adc
adc
data16
cmp
icebp
mov
xor
and
and
or
sub
lock
xor
push
add
dec
or
shlb
push
iret
call
fcmovnu
das
xor
sbb
int3
jae
pop
jg
sbb
mov
push
push
push
popl
test
dec
and
call
and
je
push
add
mov
test
mov
push
data16
pop
push
data16
lock
inc
mov
mov
bound
add
addb
clc
and
dec
add
jl
cmp
dec
repz
push
push
popa
sub
aam
mov
dec
sti
in
adc
mov
bound
inc
adc
gs
add
ja
add
cmp
inc
or
rolb
adcb
cmp
xor
cmp
loopne
lret
loopne
mov
mov
push
pusha
push
bound
adc
push
loope
inc
adc
add
sub
push
inc
inc
andb
test
push
inc
xor
in
out
xchg
or
jle
movups
ret
xchg
lock
ss
lea
add
js
jp
clc
and
js
add
adc
cmpb
call
test
add
das
in
xor
pusha
cmp
mov
sbb
cli
jle
cmpsb
nop
mov
pop
and
or
or
push
inc
dec
dec
loope
xchg
movsb
dec
add
test
cmp
mov
adc
sbb
sti
xorb
add
xor
test
add
xor
jl
sbb
push
hlt
sub
sar
push
faddp
lds
jb
ret
cmp
mov
dec
mov
adc
mov
ret
sub
jecxz
cwtl
or
and
push
and
xchg
push
jb
sbb
lods
xlat
xchg
add
mov
pop
outsl
mov
inc
or
ret
push
lret
shrb
add
mov
sub
mov
cmp
push
out
inc
andl
insl
cmp
and
cli
je,pn
pusha
inc
pop
ret
adc
ret
shr
mov
shlb
lods
ss
nopl
jl
inc
mov
std
pusha
js
jge
notb
je
mov
std
mov
push
jo
insl
push
jl
jno
sbb
push
cmp
ret
mov
jle
push
loopne
add
jbe
pop
add
mov
ja
insl
jne
pushf
sbb
and
jmp
xor
inc
inc
popf
inc
pop
adcl
add
sub
popl
orb
mov
sbb
dec
add
jne
sub
cltd
dec
add
outsb
sar
and
pop
xor
pop
cmp
fnstcw
jae
jb
jae
ror
jns
and
push
mov
sub
nop
mov
jg
adc
pop
push
nop
je
in
in
adc
add
mov
addb
adcl
jmp
cwtl
dec
jl
inc
inc
push
inc
movsb
push
call
loop
inc
mov
pop
add
cmp
adc
jo
xor
dec
mov
xor
xor
xorb
ljmp
add
enter
mov
inc
push
and
in
testl
xor
mov
insb
and
and
in
nop
scas
rclb
sbb
daa
or
cmp
add
andb
pusha
xchg
dec
or
and
fnsetpm(287
nop
fldenv
adc
imul
adc
adc
push
or
or
add
enter
sbb
cmp
insl
and
imul
jb
insb
cmp
xor
ret
andl
or
or
xor
icebp
dec
lds
adc
xchg
cmpsl
jne
shlb
cmp
sub
je
and
call
dec
pop
mov
js
add
in
and
add
adc
imul
inc
inc
and
or
mov
adc
inc
loope
xor
push
dec
inc
and
sbb
inc
ja
aas
and
xor
cld
dec
pop
xor
aam
fs
jg
or
xchg
or
es
xchg
or
xchg
sub
xchg
or
daa
cwtl
sub
xchg
or
sub
push
in
sub
ja
dec
dec
idiv
aas
das
jmp
cmp
xor
test
fstpt
xor
push
push
test
imul
cmp
cmp
cmp
mov
arpl
mov
leave
add
cmp
dec
fcoms
pop
pusha
adc
mov
pop
add
push
pop
pop
mov
sbb
adc
rolb
sbb
inc
call
test
push
fisubrs
mov
nopl
test
loopne
adc
xchg
jne
and
repz
mov
adcl
jge
fists
in
ja
xchg
or
dec
loopne
sub
sti
fisubs
pop
loop
mov
pop
mov
push
jae
out
fimuls
out
in
imulb
shl
fimuls
enter
cmpsl
mov
rclb
out
jns
aam
push
mov
jo
sbb
clc
push
in
jo
rorl
leave
push
and
jo
pop
scas
jns
xchg
incb
mov
or
mov
cmp
fcoms
pusha
fidivrl
pushf
adc
push
or
inc
mov
adc
inc
or
xchg
push
pop
push
sbb
jb
jg
or
fwait
push
mov
pop
push
bound
dec
and
stc
pop
out
add
sub
test
pop
lock
push
sub
or
dec
add
inc
and
js
mov
push
cmp
jne
adc
mov
cmp
xchg
in
fs
ret
add
rclb
push
push
ret
or
mov
js
and
lock
jno
or
movsb
push
pusha
push
test
push
mov
push
cmp
jbe
out
mov
sub
push
xchg
mov
out
or
jo
add
push
add
xchg
adc
addl
js
pop
jbe
or
jne
adc
jmp
popf
in
out
cmp
sbb
mov
jmp
fstp
fstl
pop
lods
jmp
dec
xchg
jmp
cltd
std
popf
in
lds
cmp
jmp
pop
or
and
or
add
adc
sbb
dec
lea
jne
nop
lock
jnp
xchg
dec
mov
xor
ret
jge
add
and
insl
fsubl
xchg
test
jne
loope
jmp
add
sti
hlt
push
push
pop
and
je
push
and
or
orl
movsl
push
inc
jmp
or
cmpsl
push
jp
mov
adc
add
add
mov
push
lock
cld
sub
rclb
pop
dec
nop
push
sbb
xor
add
test
rorb
fmul
or
push
lcall
mov
js
pusha
rclb
or
adc
ss
stos
popf
cmp
shl
adc
push
dec
cli
popf
call
or
les
cli
lcall
xor
call
mov
sub
jmp
test
jae
sbb
jmp
test
pop
cli
aam
and
lret
jo
jo
mov
jnp
dec
lcall
adc
xorb
xchg
dec
xchg
jae
mov
rorl
fdivr
aam
add
or
popa
mov
mov
xchg
sub
stc
ljmp
jge
pop
sub
dec
dec
loop
stos
ds
inc
cwtl
or
cmp
es
xor
push
test
sub
jl
mov
adc
lods
cltd
nop
sbb
rcrb
jbe
jmp
lahf
ja
adcb
sub
push
mov
inc
mov
adc
pop
mov
cwtl
iret
popf
jnp
leave
cmp
mov
scas
or
adc
imul
pusha
rcrb
inc
and
inc
and
push
push
lods
dec
add
adc
xor
sbb
xchg
pop
faddl
dec
aaa
rorb
in
mov
in
xchg
sbbb
and
shrb
popf
fwait
aam
add
push
cwtl
jge
lods
push
movsl
loop
call
imul
or
dec
ja
cmp
stos
mov
mov
sub
inc
add
dec
mov
lods
arpl
divl
adc
jb
xorl
sbb
inc
inc
fnstsw
and
es
rclb
adc
push
sbb
sub
jle
cs
and
mov
mov
mov
leave
cmpsl
popa
and
adc
push
lock
fildll
cmpsl
and
push
sbb
iret
ret
cmp
fstp
pusha
leave
jns
dec
testl
hlt
mov
pop
pushl
mov
xchg
imul
nop
add
ljmp
or
ss
push
pop
movsb
rol
int
loopne
imul
and
mov
mov
push
lret
add
into
xchg
cmp
xchg
aam
push
xchg
out
lds
add
imul
jl
push
push
xchg
push
pop
adc
ds
and
andl
sub
inc
push
xchg
cmp
mov
fmul
sub
push
sub
es
or
mov
inc
fmull
jo
mov
or
enter
rorb
lea
adc
xor
add
aam
shrb
negl
stos
or
pusha
push
sbb
pop
andl
stc
or
mov
es
push
add
ficoms
pushf
lea
sbb
jno
xor
mov
xchg
aas
sti
movsl
loopne
mov
pushf
and
aaa
mov
js
adc
or
jbe
xchg
sub
mov
cmp
jbe
adc
mov
or
mov
mov
fstps
sub
push
int3
addb
ret
sbb
enter
add
outsl
mov
hlt
and
xchg
jp
adc
adc
xchg
pusha
xor
cmp
sub
arpl
dec
cmp
and
das
or
sahf
mov
shlb
or
inc
or
cld
jne
lret
xor
jecxz
rorl
or
lahf
push
xor
add
or
push
lods
pop
adcl
mov
sbb
loope
stos
shll
or
call
sbb
xorb
repz
mov
push
sahf
push
adc
adc
pusha
mov
xchg
enter
lods
push
cmpsl
enter
ret
sbb
push
adc
jnp
shlb
test
or
ret
fcmovnu
jo
orb
push
or
xor
mov
and
aam
cmp
and
dec
add
or
popa
sbb
jp
adc
dec
ficoml
int
rclb
push
push
mov
js
inc
inc
push
cltd
inc
add
xchg
insb
and
lret
daa
push
xchg
xor
mov
add
add
add
and
sbb
repnz
fs
jle
cmp
mov
dec
jnp
inc
es
mov
push
dec
test
add
inc
cwtl
cwtl
pusha
test
cli
mov
stos
iret
add
push
pop
inc
and
popa
lret
ret
mov
sbb
negb
rcl
mov
jns
adcl
xor
xchg
adc
add
xchg
cmp
sbb
dec
iret
push
adc
mov
mov
pop
push
fs
jp
imul
cltd
add
adc
fisttpll
fcomps
and
adc
dec
mov
push
xchg
lret
pop
or
call
mov
pop
pop
push
rol
sbb
inc
add
imul
push
nop
sbb
push
ljmp
or
ss
adc
inc
aaa
scas
xchg
ja
ds
cmp
and
pushf
lods
inc
hlt
inc
or
test
push
dec
lret
jl
or
add
stos
enter
or
sbb
scas
add
rolb
jo
int3
adcb
pop
inc
or
jbe
inc
imul
push
xlat
push
mov
outsl
push
add
ds
in
pop
dec
clc
je
adc
je
sub
push
movsb
jo
push
cmp
jmp
push
and
jnp
test
jl
and
imul
dec
mov
mov
insb
push
sbb
jno
loopne
inc
and
icebp
movsl
mov
pop
add
das
fdivrl
push
mov
and
imul
jge
mov
sbbb
xchg
and
sub
movsb
lods
nop
hlt
enter
pop
lret
addr16
mov
jo
or
inc
in
xchg
fiaddl
movsb
xor
mov
or
movsb
cwtl
fisttpll
loope
add
mov
mov
call
jge
mov
push
js
cmp
add
xchg
mov
subb
mov
bound
fs
xor
jmp
and
mov
push
pop
fbstp
jl
mov
cwtl
sbb
das
cmc
mov
dec
add
sbbl
mov
loope
sbb
ret
cmp
and
mov
or
and
push
ja
pusha
std
sbb
call
mov
pushf
xorb
lcall
dec
adc
add
add
inc
lahf
sub
arpl
pusha
aaa
arpl
inc
dec
std
push
cmp
in
cmp
call
sub
or
mov
shrl
imul
mov
add
dec
les
fcmovnb
cmp
es
add
push
pop
cmpsb
mov
fsubrl
push
jns
inc
ret
outsl
xlat
push
push
repz
adc
pop
pushf
pop
inc
je
rcrl
push
xchg
ret
push
or
jmp
dec
cmpsl
test
jae
je
sbbb
bound
lock
movsl
insb
xlat
push
icebp
filds
lods
pusha
sbb
xlat
and
add
cmpsl
cmp
mov
sbb
out
roll
push
add
xchg
sbb
jo
incb
dec
icebp
or
arpl
pushf
rol
pop
loope
cmpsl
jmp
daa
aas
in
adc
or
shll
mov
lds
fnsave
pop
mov
cmp
inc
push
ja
mov
stc
dec
rcrl
and
lea
or
inc
mov
dec
mov
cwtl
pop
inc
inc
inc
je
mov
mov
cmp
lock
stos
dec
cmp
test
mov
pop
sub
xor
gs
mov
mov
add
or
add
mov
repz
shlb
rcrl
xchg
push
add
xchg
fsubr
and
imul
pop
and
and
jnp
pop
add
es
push
jo
mov
fwait
mov
or
mov
sar
pop
adc
lret
inc
push
subb
or
test
outsl
orl
adc
mov
sbb
rorl
das
push
loopne
call
sbb
rcrl
mov
push
xorl
hlt
jae
or
test
push
mov
sbb
push
js
enter
adc
loop
mov
test
decb
pop
xchg
sub
pop
jl
add
repnz
outsb
lock
cmp
pushf
and
xor
jp
mov
sbb
mov
cmpsl
adc
cs
popf
pop
fwait
mov
or
in
mov
inc
xor
cmp
fs
hlt
into
cmp
hlt
mov
lods
pop
cmp
sub
pop
push
xor
mov
pop
cmp
popa
std
dec
loop
sub
sbb
ljmp
test
xchg
ds
jmp
add
mov
add
sbb
ret
jg
aad
mov
outsb
adc
mov
fnstsw
add
push
jge
push
jo
repz
jle
xchg
push
cmp
or
outsb
stos
add
mov
lock
bound
pop
jge
les
sbb
notb
jb
lcall
je
push
cmpsb
dec
cmp
xor
scas
roll
jp
sbb
xor
out
pop
adc
inc
inc
jmp
inc
jo
add
addr16
and
andb
jne
js
test
adc
lock
add
or
and
and
popfw
ret
sub
push
ds
mov
adc
sbb
repz
lret
jmp
pop
cmpsb
mov
mov
mov
int3
xchg
lock
ret
add
ret
mov
mov
or
gs
lret
bound
inc
ljmp
dec
push
dec
rcll
xchg
mov
out
dec
call
cmp
dec
jbe
push
out
dec
sbb
pop
adc
push
mov
es
mov
enter
jmp
push
stc
cmp
xor
in
mov
mov
lods
sub
in
adcb
mov
xchg
mov
jns
pop
sbb
sbb
mov
mov
sub
mov
enter
sub
jmp
cmp
inc
in
pop
mov
mov
sbb
jecxz
adcb
and
jl
adc
or
pop
loopne
push
les
iret
push
fs
andl
push
repnz
sbb
cmp
mov
jnp
jno
test
jne
jmp
data16
loop
pop
int
testl
fiaddl
ret
adcl
xor
push
xchg
xchg
loopne
ljmp
push
pop
mov
jno
push
push
inc
pop
test
nop
cltd
xchg
das
lock
iret
cmp
mov
sub
pop
jo
jg
pop
movl
xor
lcall
and
shlb
cwtl
pushl
icebp
test
in
rcl
adc
jnp
fldcw
jno
shlb
daa
inc
add
fsubs
jae
jo
adcb
jl
pushf
ficoml
aaa
mov
jle
cli
insb
mov
test
jo
insb
call
jnp
xor
inc
repz
jo
daa
frstor
inc
fwait
mov
outsb
in
push
cmpl
jo
sti
cmp
add
dec
add
lods
cmpsl
fldt
push
push
loopne
outsb
adc
pop
cmp
xchg
push
or
lret
xchg
pop
hlt
push
iret
cmp
inc
test
inc
arpl
mov
test
or
jbe
je
bound
or
inc
addr16
pop
jle
dec
push
xor
xor
enter
test
gs
xchg
std
dec
pop
cmp
bound
and
sub
int
mov
or
and
mov
inc
push
stos
push
add
ret
gs
aaa
mov
sbb
mov
lret
pusha
xor
cltd
lret
inc
or
cmp
sbb
jp
push
es
xchg
add
inc
sbb
test
add
mov
push
call
mov
jbe
xor
inc
add
cmp
adc
xchg
add
cmp
sbb
push
test
test
dec
mov
lods
cmp
in
sahf
or
inc
cmp
nop
lock
mov
fistl
add
divb
mov
and
shr
xchg
lock
inc
adc
mov
mov
aad
or
test
sub
fmuls
cmp
add
pop
pushl
add
jmp
add
insb
cmp
dec
out
adc
and
aaa
arpl
mov
loopne
inc
inc
movsb
adc
mov
sbb
enter
icebp
outsl
xchg
or
movsl
push
push
das
push
dec
or
sbb
jl
mov
sub
fildl
jbe
test
push
sti
cmp
mov
add
test
and
and
jp
outsb
gs
push
add
pop
mov
mov
addr16
add
dec
mov
scas
test
jmp
rcl
xchg
addb
cmc
add
xchg
fs
mov
jb
cmp
sub
or
cmp
sub
inc
sarl
sbbl
addl
enter
cmp
jg
xor
mov
stos
add
int3
arpl
inc
outsl
xor
jp
iret
data16
je
fs
adc
mov
sub
xor
adc
sbb
ret
into
add
add
rcll
sub
ja
or
pcmpeqw
lcall
or
lea
inc
je
mov
push
jge
push
push
inc
cmp
sub
scas
cmpb
or
cmp
xor
je
cwtl
adc
dec
jge
pop
add
jbe
sbb
in
mov
int3
movl
mov
xor
loopne,pt
sub
ffree
popf
adc
call
mov
repz
dec
aaa
add
mov
lcall
pop
scas
das
stc
dec
loopne
clc
xchg
lret
push
add
push
data16
fnsave
call
or
std
mov
insl
add
addb
xor
sub
sbbl
or
sti
aam
xor
inc
stos
push
cmc
sub
sub
mov
outsb
inc
jne
sbb
das
push
ljmp
loop
push
mov
or
dec
push
push
xorl
jo
minps
test
or
dec
xchg
mov
xor
lock
xor
adc
jmp
add
jo
les
pop
imul
mov
lret
lock
dec
movsl
adc
mov
or
repz
repnz
repz
pop
fcoms
sbb
les
xor
sbb
inc
xor
push
xchg
test
mov
lret
mov
and
insb
pop
add
dec
repnz
rol
and
fmul
shr
movsb
mov
push
ficomps
add
mov
je
sti
movsl
mov
mov
xchg
das
aam
pop
cwtl
and
jl
jbe
adc
pop
and
js
cld
scas
xor
adc
repz
add
mov
loopne
movsb
adc
fdivl
addb
and
sbb
test
push
push
xor
repnz
hlt
lods
or
es
push
pop
jle
mov
shl
stos
mov
pop
data16
loope
add
mov
sbb
mov
or
cmp
pop
adc
fcmovb
cmpsl
and
inc
loopne
jbe
push
push
rcr
or
lock
test
mov
mov
push
jno
push
call
inc
jle
cmpl
lret
loop
dec
jae
jp
or
sub
or
repz
inc
cmpsl
inc
xchg
jle
add
add
xchg
aad
pop
mov
into
idivb
outsl
adc
cmp
fisttps
or
inc
add
jge
cmp
outsl
fmul
pop
mov
push
add
enter
decl
int
push
push
ret
ljmp
push
inc
jle
lcall
mov
push
add
cmp
dec
nop
mov
add
or
pop
dec
divb
or
mov
xor
cwtl
sub
pushf
add
and
enter
stc
mov
push
sub
xchg
stos
add
nop
lods
jns
cmpsl
cmp
test
mov
mov
mov
in
sahf
les
rorl
sub
inc
faddl
mul
or
or
cmp
or
notb
cmp
pop
or
dec
inc
push
jp
mov
sarl
mov
add
mov
sbb
jbe
loopne
icebp
movsb
orb
aam
sbb
mov
test
or
add
aaa
sti
loop
out
push
inc
sahf
cwtl
addl
movsb
fldl
mov
xchg
jl
andb
xchg
outsb
loopne
or
cs
js
mov
mov
pop
movsl
lret
add
inc
add
add
push
sbb
push
adc
cmc
pushf
jmp
and
inc
fwait
xor
dec
jne
inc
sub
lcall
les
mov
dec
hlt
pop
lea
insb
je
sbb
jg
jmp
and
push
mov
repz
gs
in
mov
shll
or
xlat
subl
jmp
xor
pushf
ja
xor
ja
sub
xchg
xor
loopne
lret
orb
jmp
xor
push
or
test
inc
add
dec
fstps
jecxz
xchg
pop
xchg
mov
scas
adc
popa
js
jbe
adc
orb
lods
inc
push
xchg
or
outsb
je
aaa
movsb
jbe
mov
pop
clc
das
js
lods
into
lcall
adc
dec
out
adc
or
js
cs
pop
jg
cld
or
cmp
inc
shlb
rcll
and
mov
or
add
xor
rol
add
in
loope
dec
inc
icebp
add
out
clc
loopne
jmp
loopne
pop
inc
enter
push
push
bound
lock
mov
dec
inc
imul
adc
cmp
cs
push
les
add
out
inc
mov
movsl
outsl
xor
ljmp
data16
les
sbb
adc
cmp
push
sbb
jno
mov
dec
push
rep
adc
pop
lahf
xchg
imul
xchg
dec
loop
movsl
and
outsb
lahf
xorl
les
or
sbb
pushf
subb
mov
and
mov
shrl
push
imul
jecxz
push
xchg
daa
mov
andb
inc
ret
inc
xchg
mov
push
xchg
mov
mov
fisttpll
add
mov
push
push
or
inc
bound
xor
sahf
adc
scas
or
lret
add
je
cltd
pop
add
sbb
mov
stos
fmuls
idivl
add
leave
xor
sub
cmpl
fsubl
mov
push
pop
dec
xor
dec
cli
mov
mov
orl
inc
jnp
adc
dec
pop
jle
inc
ljmp
popa
insb
testl
sarb
call
das
add
cmp
pop
xchg
push
aad
jae
adc
out
stc
inc
sbb
test
fmuls
add
adc
and
nop
sbb
pop
dec
in
inc
cmp
mov
sbb
jp
jmp
popa
mov
dec
lods
sub
xlat
gs
jl
xor
lock
rol
xor
fnstsw
call
movsl
push
push
movsl
fistpll
inc
hlt
fstl
mov
lock
fnstsw
mov
in
fldl
pop
fsubr
pop
faddp
andl
sbb
jbe
orb
dec
adc
mov
cs
sub
sti
sbb
sarb
inc
js
pop
lret
cmp
pusha
pop
lcall
inc
sbb
jge
mov
cwtl
fdivrs
sub
adc
arpl
xor
out
sbb
loope
fstpt
dec
adc
in
sub
pop
push
or
or
xor
mov
add
into
push
cmpsl
cs
adc
mov
loope
cmp
cli
cmove
cli
xor
imul
push
mov
or
inc
cmp
dec
mov
int3
dec
ret
sbb
enter
outsb
push
or
xlat
mov
mov
out
scas
sbb
in
sub
mov
add
dec
or
mov
ljmp
dec
mov
cmp
jge
ret
push
fs
roll
dec
popa
popa
push
adc
int3
adc
jne
push
pop
shlb
cwtl
stos
jmp
test
and
dec
add
adc
or
in
fcoms
popf
adc
adc
inc
cwtl
adc
test
pop
add
aad
icebp
jne
push
push
adc
daa
adc
sub
leave
das
ds
mov
rorl
fldt
into
inc
add
xchg
add
dec
jns
mov
mov
adc
and
mov
sbb
shlb
mov
mov
lods
ss
jmp
das
aaa
mov
subl
stc
xchg
mov
inc
dec
cmp
pop
and
xor
inc
add
jl
cmp
ret
ja
inc
lods
xchg
hlt
or
mov
in
adc
decl
inc
adc
scas
dec
lea
hlt
nop
dec
xor
popf
test
xor
adc
int
gs
push
jle
das
inc
jl
dec
stos
js
inc
mov
xchg
popf
dec
ss
mov
jecxz
lock
and
pop
jle
or
rolb
mov
iret
outsl
add
addr16
in
arpl
jns
sbb
push
inc
cltd
mov
push
les
dec
add
pop
xor
cmpb
out
mov
ljmp
and
sbb
pop
outsl
xor
fcoms
jle
outsl
mov
push
pushf
push
push
lds
adc
dec
lods
nop
inc
dec
sbb
js
ja
imul
insb
add
nop
les
inc
mov
or
mov
dec
mov
daa
popl
xor
mov
js
bound
lds
arpl
xorl
insb
ret
jmp
mov
roll
sub
call
sbb
pusha
arpl
inc
jp
adc
push
and
mov
sbb
mov
ret
cmp
push
push
xchg
sbb
or
lods
mov
lea
cmp
lods
mov
or
repz
shll
lock
or
lods
mov
div
loop
bound
repz
gs
add
push
hlt
dec
mov
data16
push
sub
movsl
test
mov
stos
dec
and
sbb
add
leave
add
mov
push
out
enter
dec
int
in
inc
adc
push
mov
movsb
rcl
arpl
add
mov
pop
xor
xor
sbb
inc
xchg
cmp
push
movsl
out
loopne
xor
sub
sbbl
xor
mov
xor
daa
add
dec
jb
je
and
jmp
in
inc
inc
subb
cmpsl
xchg
push
sarb
lods
bound
xor
jmp
jg
pop
mov
add
sbb
add
add
mov
push
enter
shlb
sub
inc
dec
add
sbb
rcll
outsl
and
scas
mov
pop
cmp
dec
insl
adc
leave
add
repz
bound
dec
lods
es
sbb
rolb
ljmp
dec
adc
mov
ds
xor
ds
ljmp
mov
adc
push
movsb
sbb
dec
dec
mov
nop
or
jns
clc
arpl
sub
addr16
cmp
sub
pop
or
and
and
fimull
js
xchg
test
lahf
ljmp
bound
test
pop
push
mov
jp
scas
test
xchg
call
idivl
hlt
insl
movb
and
mov
and
or
orl
pop
mov
mov
push
fucomip
inc
adc
int3
xorl
subb
ret
aas
sub
aam
push
imul
bound
enter
inc
cltd
pop
xlat
mov
xor
inc
xor
xor
mov
xor
cmp
test
test
mov
inc
and
jl
push
in
push
mov
add
dec
ds
popa
adc
inc
lret
xchg
cmp
add
xchg
ret
ret
call
fiadds
or
dec
mov
sub
add
dec
aam
push
inc
push
inc
ds
dec
bound
xchg
xor
add
adc
sahf
into
test
pop
fmuls
dec
xchg
cmpsl
dec
pop
pop
xor
aas
mov
gs
cmp
cmp
push
mov
cs
lock
inc
push
loopne
xchg
aas
nop
push
mov
clc
jne
and
lock
nop
or
clc
lret
ficoml
jmp
sbb
cmp
loop
inc
mov
roll
lret
xchg
setl
and
or
mov
jnp
add
inc
lret
movsl
das
pop
jmp
ss
es
leave
lock
shr
mov
xadd
fcoml
js
xchg
push
adc
push
mov
ffreep
ljmp
movsl
sbb
mov
push
lcall
inc
cmp
mov
fnstsw
dec
cmp
push
push
push
inc
clc
popa
sar
test
push
les
or
mov
cmp
ja
push
sbb
jbe
cmc
or
loopne
aaa
add
add
push
test
pop
icebp
jne
lcall
sbbl
add
nop
dec
enter
jmp
pop
repnz
or
adc
adc
pusha
and
add
pop
add
std
in
inc
dec
rcll
mov
stos
lock
cmp
pusha
jmp
xchg
or
sbb
xor
insb
jb
or
pop
clc
jl
test
xchg
cmpsb
and
sbb
imul
clc
subb
aam
leave
xor
jb
push
inc
dec
sahf
add
add
add
push
lret
xor
add
sahf
testl
sti
sbb
or
dec
pop
fcomps
xchg
dec
dec
aam
aaa
shlb
mov
jl,pt
inc
and
xor
movsl
or
mov
push
pop
jne
pop
xorb
lods
stc
inc
xor
inc
scas
ljmp
jp
ljmp
sub
stc
cmc
bound
fadds
add
jnp,pn
push
adc
xlat
jb
enter
or
jp
push
push
data16
idivl
push
rcrb
add
fldcw
inc
jp
add
push
cmc
xchg
dec
mov
dec
stc
sbb
cmpl
inc
roll
jns
or
push
sahf
in
add
mov
stc
pop
or
fmulp
shlb
je
in
push
test
jbe
shrb
les
inc
xchg
cmpsb
stc
in
in
loopne
mov
pop
add
add
inc
pop
js
pop
insl
mov
mov
push
add
jge
sti
add
add
jmp
inc
and
xchg
and
xchg
pop
pop
dec
cmpsl
out
scas
loopne
cs
call
sbb
rcr
rcrl
int3
sub
dec
daa
mov
fcoml
lret
andl
cmp
iret
fmuls
aas
pop
jmp
and
and
pop
mov
or
es
ljmp
mov
ret
pop
lahf
nop
lret
mov
pop
loopne
dec
je
andl
fcmovnb
call
xor
push
sbb
and
push
xchg
jmp
and
push
outsl
adc
xor
in
into
cmp
sahf
and
mov
daa
inc
pop
cltd
int
mov
pop
add
nop
roll
pusha
out
stos
xor
lret
inc
mov
rorb
xchg
test
xor
xor
sbb
sahf
push
mov
inc
dec
fistpll
movsl
and
rcl
fldt
jmp
adc
ljmpw
inc
inc
cmp
sbb
jo
and
mov
dec
aam
es
jno
push
mov
sub
xor
inc
nop
ja
pusha
sbb
xchg
jge
loop
jo
mov
data16
out
add
and
ss
or
pop
cli
cmc
lea
sti
das
push
scas
dec
pop
cmp
repz
sub
push
xor
filds
add
xchg
mov
add
out
jl
push
inc
inc
dec
push
cwtl
shrb
pop
pop
sbb
imul
xor
and
jb
sbb
jbe
and
sbb
inc
andl
push
xchg
fs
pop
lea
popf
add
roll
gs
xchg
push
popf
adc
inc
adc
pop
xchg
sub
pop
or
xor
inc
add
sub
push
jge
dec
lock
xchg
cmc
and
fwait
add
sbb
and
aas
xorb
lahf
mov
adc
jb
lock
rcrl
xchg
or
sarl
xor
mov
cmp
and
push
pop
or
in
xor
std
sub
push
in
xor
or
cmp
xchg
and
jo
ret
cwtl
sahf
popf
sbb
sbbl
and
or
or
lret
orl
dec
fbld
add
dec
jb
sub
pop
and
add
sbb
into
adc
add
std
push
mov
push
test
inc
pop
mov
pop
pop
data16
xchg
xlat
push
rol
pop
cmp
inc
loope
jne
imul
jns
xchg
add
pop
arpl
mov
cmp
pop
and
fdivr
sar
add
or
push
inc
pop
adc
sbb
ss
or
and
test
mov
hlt
dec
mov
xorb
push
inc
mov
fnstenv
pop
pop
xor
mov
jbe
aam
ret
inc
mov
dec
lahf
add
adc
jo
fcomps
test
sbb
inc
sbb
js
iret
ds
add
jo
sbb
ret
adc
pop
sahf
cltd
insb
jbe
addb
lea
mov
pusha
inc
jmp
notb
and
lcall
sub
jo
insl
call
and
pop
cmp
jl
xor
lret
into
push
dec
fimuls
jne
pop
push
lcall
aaa
lock
dec
push
cmpb
sbb
punpckhdq
jl
shl
push
inc
sti
insb
push
pop
enterw
and
sahf
aam
jmp
out
mov
push
pop
je
push
mov
cmp
adc
add
and
pop
inc
cmp
or
popa
mov
mov
and
lahf
push
sarl
cltd
inc
and
addr16
or
jns
pop
sbb
repnz
push
jmp
push
sbb
out
mov
dec
sub
dec
xchg
pop
ds
stos
xor
mov
lock
jne
mov
shll
stos
loopne
ret
sbb
push
jge
lret
mov
ljmp
pop
xor
loope
sub
pusha
add
sub
gs
sahf
mov
and
das
jecxz
cmp
ljmp
add
push
inc
lock
movb
sar
rcrl
pop
nop
js
rcrb
xor
inc
lods
pop
push
ss
jae
aam
mov
test
jmp
cld
adc
inc
clc
cmp
je
push
iret
loopne
inc
fs
stos
or
push
loope
dec
push
clc
mov
and
ret
test
lea
push
mov
adc
pop
xor
add
inc
dec
add
in
inc
loopne
push
das
orl
or
aas
mov
add
mov
adc
sarb
inc
sub
dec
sti
mov
or
iret
aas
push
enter
and
and
mov
aad
dec
pop
ss
sub
cmc
push
mov
jg
lret
mov
jg
fisttpl
mov
push
or
xor
insl
popa
lods
les
leave
insb
dec
sbb
cmp
lods
add
sbbl
inc
adc
ss
inc
jb
add
mov
xor
in
and
pop
adc
or
push
xor
push
cmp
das
popa
ret
mov
data16
push
mov
or
add
mov
lods
lea
adc
stos
movsl
imul
scas
or
test
aas
decb
call
fsts
push
pop
and
mov
cmpsl
aaa
and
mov
and
cwtl
sbb
mov
push
pop
inc
insb
sbbb
je
loope
add
repnz
mov
xchg
rolb
push
sub
aad
fistl
cmp
aad
pop
jne
push
jmp
cmp
ss
adcl
inc
xor
sbb
mov
lock
test
jbe
add
adc
sub
push
inc
in
imul
lock
rcrb
clc
push
dec
pusha
je
movsl
xchg
pop
lret
loopne
stos
mov
adc
mov
nop
push
push
das
cmpsb
rcr
les
fwait
movsl
mov
sbb
ljmp
rolb
cmpsl
and
pop
jge
lods
rolb
jp
mov
ljmp
mov
fimuls
decl
jns
int
aaa
fiaddl
or
or
pop
mov
mov
adc
dec
mov
shlb
jne
rorb
inc
cmp
test
pop
and
nop
pop
lea
xor
sub
dec
dec
push
or
inc
add
pop
adc
inc
sub
fdivl
sbb
sarb
fs
imul
jbe
mov
mov
dec
loopne
cmpsl
or
add
sbb
popa
xchg
test
insl
subb
dec
pop
das
popf
sti
sub
loop
ss
fsubp
dec
add
mov
adc
and
test
add
push
add
loope
and
mov
push
imul
mov
call
fstpt
fwait
xchg
mov
pop
mov
inc
mov
dec
push
push
dec
fisttpll
mov
mov
xor
inc
adc
jne
hlt
and
xor
adcb
mov
or
sub
add
jle
iret
jge
mov
and
xchg
mov
fwait
jb
arpl
dec
cmp
shrb
fisttps
inc
shrb
add
pop
add
pop
inc
shl
inc
pushf
sub
in
es
pop
xchg
jmp
sbb
je
jbe
ret
pop
call
ret
jno
gs
cmp
mov
pop
rcr
stc
data16
call
dec
or
xor
add
or
lods
imul
mov
mov
xchg
rcr
jmp
mov
cmp
mov
inc
jle
call
inc
les
and
adc
out
sub
dec
mov
pop
sub
sbb
dec
adc
or
and
add
and
adc
pop
mov
pop
ret
movsl
jg
cmpl
popf
shrb
add
mov
dec
pop
add
inc
mov
jl
movl
push
inc
or
in
popa
ret
cmpl
lahf
mov
mov
sbb
sub
or
fwait
jmp
sub
scas
ds
adc
sahf
cltd
clc
jnp
inc
pusha
sti
fcompl
pop
cmpsb
clc
lahf
mov
decb
adc
dec
hlt
jl
push
push
push
hlt
mov
and
add
loope
cmp
les
inc
scas
push
push
outsl
inc
pop
dec
loopne
inc
daa
ret
in
xor
hlt
stos
cli
lea
stos
or
mov
insl
xchg
inc
add
imul
mov
or
jmp
in
in
hlt
sbb
push
push
sub
popf
icebp
adc
gs
stc
imul
repnz
and
dec
add
stc
xchg
aam
xor
cmp
mov
jne
push
adc
push
test
jmp
insb
jb
sub
push
or
pusha
push
insb
je
sbb
push
sub
xchg
add
stos
sbb
mov
dec
add
or
fld
inc
and
push
xchg
orl
xor
dec
jp
add
mull
icebp
insl
jmp
push
test
dec
iret
jnp
push
and
icebp
inc
lret
les
sub
testl
test
inc
imull
out
insl
pushf
add
add
cmpsl
mov
jecxz
test
pushf
xchg
inc
mov
in
add
movsb
xchg
jo
adc
test
sbb
ret
and
lea
jmp
call
add
mov
or
xchg
xchg
mov
in
pop
leave
inc
add
dec
movsb
sti
inc
xchg
nop
inc
scas
in
sub
mov
dec
pop
push
mov
lods
in
jne
sbb
pop
jl
and
mov
test
jl
fldt
sub
lahf
rolb
push
push
add
sub
shr
aas
pusha
push
push
xor
or
adc
adc
adc
aaa
jo
or
and
pop
jb
or
rolb
out
or
add
sbb
dec
or
je
mov
and
push
dec
push
cli
and
stos
gs
enter
cmp
test
imul
inc
ret
ljmp
push
testl
insb
vmread
cs
pop
out
xchg
aas
sbb
or
leave
test
std
adc
adc
mov
pop
xchg
mov
inc
or
xchg
add
popa
or
loopne
into
test
adc
sub
jae
push
inc
nop
stos
loope
lret
adc
mov
adc
lock
js
jmp
push
int3
jmp
and
lock
adc
addb
add
loop
rolb
mov
or
pusha
mov
sbb
rclb
cwtl
mov
sbb
ret
jae
adc
inc
addr16
and
jmp
xchg
add
sbb
cmc
cmp
mov
sub
inc
sbb
mov
dec
mov
imul
lahf
push
xor
xor
mov
sbb
push
add
dec
subb
stos
cmp
jb
in
dec
lock
jo
movsb
sub
add
jmp
cwtl
imul
xchg
or
push
jmp
in
push
lea
fsubl
add
adc
add
mov
sbb
stos
xchg
or
push
sbb
lods
inc
dec
sbb
sub
jne
out
fsubl
xchg
push
inc
scas
fmul
cmp
fsubs
jg
inc
ljmp
add
and
fdivr
add
mov
sbb
outsb
sub
inc
aas
fdivrs
xchg
pop
mov
xor
jge
stos
mov
push
add
rclb
mov
sbb
fldt
add
dec
ret
out
xchg
out
gs
cmp
dec
fmull
stos
sub
and
jns
mov
dec
lods
mov
pushf
dec
jmp
fsubs
xchg
adc
mov
adc
jb
or
or
insl
lahf
push
cmp
shl
cmp
rcrb
mov
sbb
pop
sbb
inc
push
xor
fsubrl
into
nop
push
sub
arpl
sarl
pop
jo
outsl
and
scas
mov
test
pop
push
in
ja
and
je
movsb
push
push
xor
xor
mov
rorb
pop
push
rorl
pop
or
jo
adc
clc
arpl
test
sub
pushf
jecxz
nop
mov
call
call
fst
lock
pop
ret
pushl
lea
cmp
lea
cld
jne
mov
and
mov
pop
shll
xorb
test
add
lock
pusha
mov
sbb
push
pop
push
insb
movsl
loopne
cwtl
movsb
cmp
stos
ds
push
adc
loopne
in
sahf
addb
xorl
add
and
push
fwait
popf
ret
xchg
mov
sti
shr
push
pop
mov
push
cli
and
add
mov
mov
bound
es
jmp
sarl
push
push
mov
push
enter
aas
js
mov
and
mov
loope
mov
push
sahf
ss
movl
inc
int3
in
movzwl
push
cwtl
cmp
fmull
fucomi
mov
sbb
ret
insl
add
cmp
icebp
nop
push
sahf
jecxz
mov
mov
sbb
jno
mov
scas
dec
push
daa
and
cmp
jl
test
iret
iret
mov
fiaddl
xchg
push
mov
imull
cmp
pop
adc
jne
xchg
repnz
jl
js
popa
cmp
or
sub
les
jp
js
rolb
movb
push
popf
hlt
or
cmpb
enter
rcl
loope
xchg
mov
int3
inc
cmp
js
es
adc
mov
xchg
sub
cmp
and
dec
repz
adc
jbe
push
push
inc
xchg
or
xlat
push
cmp
or
sar
out
push
shr
mov
mov
in
scas
xchg
adc
jmp
cmpb
and
adc
push
jg
push
add
inc
fnsave
inc
testb
fxch
rorb
testl
cmp
push
xchg
pop
dec
sub
sub
clc
adc
jbe
push
paddb
es
sbb
xor
and
or
subl
jl
enter
cld
pop
xchg
jbe
je
movb
rol
les
xorl
loop
add
jle
fdivs
sbbl
out
fcmovnb
cmpl
out
sub
andl
or
mull
pop
in
lcall
sub
dec
push
mov
test
insl
mov
dec
jp
ljmp
adc
push
cmpsb
shlb
inc
hlt
or
or
adc
lods
or
xchg
sbb
add
lahf
mov
test
fwait
repnz
movsl
movsl
in
mov
repnz
repnz
push
add
daa
daa
daa
add
daa
pop
or
or
jnp
or
jbe
jmp
or
fwait
fwait
fwait
fwait
por
jmp
adc
pop
adc
fwait
fwait
fwait
fwait
push
adc
dec
adc
dec
adc
fwait
fwait
fwait
fwait
aas
pop
jmp
sbb
xor
jmp
fwait
fwait
fwait
sub
jmp
sbb
and
dec
fwait
fwait
fwait
pop
pop
jmp
and
or
add
cmp
push
and
test
xor
dec
cmpsb
inc
mov
popa
or
mov
in
loope
inc
jmp
icebp
sahf
out
sahf
pop
arpl
jnp
jns
out
mov
jns
out
mov
mov
sahf
lret
rcl
fcmovu
jns
out
in
out
repz
sahf
out
out
std
out
push
pop
or
push
sti
jmp
jns
and
add
add
and
sti
aas
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
testb
push
std
rcrb
cmp
adc
std
icebp
shll
inc
or
or
sub
dec
ljmp
add
cmp
mov
loope
pushf
les
stc
or
rclb
aam
andl
or
mov
xor
or
and
pusha
lea
push
ficoml
fsubl
xor
mov
mov
cmp
inc
dec
sbb
cmc
fnstsw
jo
cmp
shrl
push
inc
push
inc
sbb
mov
jns
popa
lods
add
sub
repz
mov
mov
xchg
jbe
cmp
setnp
adc
in
ja
sar
faddl
rolb
sbb
add
loope
push
cltd
push
pop
andl
sbb
les
pause
fsts
pop
pop
sub
cmp
jae
lds
rclb
lock
sbb
ljmp
and
ret
jp
jge
dec
fidivl
lods
xchg
mov
fidivrl
sti
jae
popa
lret
cmp
add
clc
cmp
adc
daa
sbbl
sub
scas
data16
mov
sbb
sbb
shr
add
test
or
insl
push
shll
xor
fcomip
and
imul
xor
dec
and
sbb
push
or
inc
mov
dec
sub
lea
rcrb
xor
dec
pop
or
movb
imul
js
ret
movl
jl
divb
dec
cmp
jbe
mov
lock
adc
sbb
divb
lods
xchg
dec
insl
stos
or
push
mov
dec
inc
out
scas
bound
pusha
pop
cltd
leave
pop
cmpsb
pop
mov
or
or
fldl
inc
mov
jp
fimull
adc
cmp
filds
add
adc
shrb
mov
in
adc
lcall
out
andb
fwait
add
or
xchg
pusha
popf
adcb
shlb
js
sysret
mov
push
and
test
pop
pop
movb
andl
inc
addb
js
inc
pop
popa
add
subl
add
shrb
je
loop
add
add
mov
mov
xchg
mov
and
adc
aad
adc
je
push
sbb
add
mov
xor
push
out
pop
imul
sbb
add
sbb
pop
lock
lods
add
lret
out
adc
clc
ljmp
jnp
lea
mov
push
fiaddl
add
and
cwtl
aaa
nop
inc
and
rorl
sahf
sub
pop
stos
nop
fs
xor
movl
adc
adc
and
andb
xchg
or
xor
inc
add
out
pop
andl
pop
adc
sbb
jle
ficompl
adc
or
jl
xchg
lea
movsb
sub
push
dec
jmp
add
jle
in
inc
cmp
add
cli
es
lea
cmp
mov
jg
and
or
js
cs
jle
and
js
sbb
sahf
sub
aad
or
xor
filds
jmp
cmp
mov
icebp
jl
neg
mov
cmp
push
insl
mov
test
jae
daa
int
xchg
ds
nop
jmp
and
pushf
jmp
daa
lods
test
cmp
jae
movzbl
push
mov
add
or
adc
ret
cmpsb
js
add
dec
jmp
mov
inc
pusha
lock
mov
pop
push
inc
in
add
pop
ss
pop
xor
orb
movl
lcall
sub
pop
pop
sbb
adc
sbb
jne
inc
cmp
icebp
push
mov
adc
add
shlb
or
jno
adc
jmp
sub
add
or
adc
dec
add
stos
push
cmp
and
add
pop
rol
pop
sub
jne
jbe
push
leave
adc
clc
outsb
pop
mov
adc
push
push
sbb
jl
dec
adc
adc
pop
or
push
dec
sti
adc
fdivrl
adc
add
call
sbb
dec
dec
mov
and
cmp
ja
movsb
rcll
mov
pop
pusha
mov
adc
add
or
and
out
xchg
sbb
xor
outsl
push
add
mov
popa
out
xchg
rolb
rclb
lea
xchg
sbb
inc
jl
xchg
mov
add
jbe
mov
add
add
cltd
inc
in
cmc
xchg
in
stc
inc
std
mov
in
mov
sbb
inc
xchg
add
repz
jge
cmc
inc
xchg
and
sbb
ja
adc
adc
xlat
cmp
ljmp
mov
sbb
adc
fists
test
jle
mov
cmp
addr16
popf
xlat
xchg
add
and
xchg
mov
and
shrd
daa
jmp
xor
inc
or
neg
push
cltd
cmp
sbb
xchg
mov
adc
inc
popa
call
push
fdivl
push
fs
enter
js
je
jno
fst
and
push
or
scas
inc
push
mov
mov
cmp
jmp
sub
cmp
test
cmpb
inc
push
push
sbb
jg
fcmovnbe
jb
or
mov
adc
pop
add
or
test
sub
cmp
daa
dec
outsb
sbb
xchg
or
jo
je
sbb
jp
call
sub
cli
push
jne
push
repz
sbb
mov
adc
push
cmp
adc
mov
ficoms
mov
je
dec
lds
or
andl
js
cli
push
xchg
outsb
pusha
jmp
ret
test
adc
stos
scas
cmovnp
add
and
jnp
pop
mov
push
xor
add
loopne
and
ss
add
daa
push
xorb
in
leave
stos
xchg
or
mov
jne
adc
adc
movsl
xor
dec
enter
mov
mov
lods
sub
js
insl
cs
dec
mov
and
or
push
inc
pusha
sbb
cmp
das
lods
or
mov
sub
lcall
or
or
inc
es
inc
inc
rorl
pop
ret
jmp
daa
stc
mov
or
push
or
cmp
adc
xchg
or
xor
aam
addb
jo
in
mov
xchg
adc
and
mov
mov
clc
shll
inc
or
and
push
cmp
movsl
test
cmp
push
adc
shlb
lds
dec
rclb
mov
lea
xchg
cli
cmp
jl
mov
xchg
jecxz
push
xchg
inc
les
loope
sbb
push
mov
nop
xor
andb
rdmsr
and
clc
mov
pop
in
je
dec
adc
inc
jmp
test
hlt
ss
push
or
mov
clc
and
dec
sub
sub
jnp
inc
lods
ljmp
nop
dec
and
je
cmp
sbb
adc
xchg
xor
push
or
dec
adc
imul
jl
out
shlb
mov
ja
push
loope
adc
pop
daa
icebp
jno
jnp
sub
sub
daa
cmpsl
adc
clc
lcall
dec
sub
nop
andb
nop
int3
je
xchg
in
lock
xchg
inc
dec
pop
pop
jb
inc
int3
jmp
mov
or
jg
and
xchg
inc
popa
fsubl
imul
shll
mov
sbb
aad
hlt
fs
xchg
or
imul
or
cvtpi2ps
je
push
xor
bound
insb
jbe
inc
inc
outsb
dec
popl
imul
fs
call
sbb
xor
imul
in
mov
mov
xor
adc
push
push
xor
insl
mov
mov
add
push
or
pop
push
lods
cmp
sub
sub
aas
fs
and
jg
mov
flds
xor
fsubrs
stc
xchg
xchg
and
and
or
and
lret
xor
dec
inc
outsl
shrb
add
in
dec
adc
enter
nop
or
loop
and
mov
inc
and
xchg
or
push
hlt
rcll
jmp
mov
push
and
and
ret
sbb
andl
add
loopne
xchg
push
jns
cmp
cmp
fistpl
cmp
cltd
fidivrl
fnstenv
mov
xchg
pop
aam
les
cld
jne
push
cltd
or
mov
jle
out
mov
out
sbb
or
ja
inc
js
jle
jecxz
lea
xchg
mov
add
fiadds
sbb
pop
or
insb
mov
sub
jne
push
inc
dec
push
lahf
push
sub
pop
insb
ret
adc
in
push
loop
rcr
cmpl
jne
popf
out
and
sti
pop
pop
and
jno
cld
out
ret
dec
sbb
int
cmp
or
ja
call
mov
arpl
add
pop
sbb
inc
sbb
xor
or
add
nop
push
mov
push
nop
push
inc
xor
mov
fldl
pop
and
outsb
insl
negl
inc
sub
ds
dec
pop
sbb
jne
add
sarb
or
bound
popa
outsl
and
inc
fstpl
fisubrl
push
cmp
loope
add
push
aam
push
sub
leave
inc
mov
or
xchg
push
sub
mov
pop
add
xor
cs
sub
cmp
or
ficoms
xchg
dec
pop
movl
repnz
xchg
add
or
add
sub
xor
outsl
push
movzbl
rorl
xorb
je
or
repnz
or
aad
cmp
pusha
cmp
leave
mov
xchg
push
mov
cmpsb
ss
add
les
mov
hlt
fisttps
mov
lea
daa
ljmp
aas
lock
cmp
add
sub
push
cmp
jge
adc
sbb
inc
into
jnp
hlt
push
mov
add
fldt
dec
lds
jo
push
shll
icebp
test
mov
imul
hlt
clc
cld
xor
jae
movl
mov
push
add
add
dec
push
add
add
and
out
xor
dec
je
idiv
mov
dec
jne
mov
and
dec
or
mov
shr
sbb
loope
orl
dec
ljmp
xor
mov
hlt
and
xchg
dec
or
jo
in
cli
or
outsl
cmpsb
adc
scas
push
dec
push
jnp
je
push
add
out
loop
inc
push
aad
pop
mov
dec
mov
add
dec
movsl
out
lret
sub
testb
mov
test
mov
push
cld
je
cmp
jne
sbb
adc
mov
pushf
cmp
cmp
mov
fdivrl
xor
add
fidivrl
or
clc
xor
inc
addb
jmp
sbb
bound
lret
idiv
inc
inc
imul
mov
popa
loope
jge
mov
cmp
pop
lahf
pshufw
je
mov
add
or
cmp
mov
loopne
mov
stc
push
or
int
and
adc
push
push
lock
cmp
je
mov
pop
jbe
xor
fstpl
inc
test
jmp
daa
pop
out
js
js
pop
cmp
sarb
in
clc
jge
fists
xorl
gs
push
or
lods
dec
orl
pop
in
pop
xchg
into
testl
jle
adc
cmp
je
cmp
push
cmp
jne
inc
jne
test
mov
repnz
push
push
mov
dec
pop
daa
mov
pusha
pop
adc
inc
adc
mov
loopne
insb
sub
cmp
and
test
in
pusha
mov
pop
sub
and
aas
shlb
cmp
jne
mov
adc
imul
push
inc
mov
push
xor
fadds
add
xor
popa
imul
xor
cmp
test
leave
sub
jmp
and
push
jmp
push
pop
outsb
outsb
inc
jl
inc
jg
aaa
jp
add
xchg
mov
std
shl
dec
mov
sub
mov
mov
and
jg
std
push
pop
les
outsl
adc
test
or
dec
xchg
and
dec
jp
jl
jecxz
mov
pop
adc
sbb
and
xor
js
xchg
mov
pushl
ja
inc
xchg
incl
xor
pusha
mov
jg
pop
xlat
je
aas
imul
mov
or
sbb
add
addr16
mov
cmpb
sub
rorb
mov
and
mov
xor
push
jge
push
pop
das
movsb
add
xor
xor
fsubs
inc
cmpb
mov
dec
pop
push
mov
pusha
xor
call
adc
add
jmp
xor
dec
add
adc
xchg
dec
fs
push
dec
cmpsb
mov
cmp
inc
mov
pop
cmovbe
std
ret
adc
cmp
cmp
mov
push
inc
xor
lods
loopne
dec
push
movsl
mov
or
add
je
and
roll
mov
clc
test
or
mov
push
clc
mov
fisubrs
mov
add
jne
mov
mov
addl
xchg
cltd
bound
inc
mov
add
mov
push
pop
adc
test
je
xor
leave
mov
dec
gs
rcll
dec
or
test
mov
xor
xchg
lock
dec
jg
jno
push
jne
cmp
mov
add
mov
cmpsb
dec
sbb
rcl
inc
mov
jmp
aam
dec
lock
xor
testb
das
adc
fs
dec
dec
fucomip
push
lock
sub
jge
jne
and
and
dec
imul
pop
push
add
roll
lret
add
add
movsl
mov
lret
jo
inc
inc
fsubs
pop
cwtl
mov
xchg
push
adc
xchg
adcb
addr16
add
ficoml
dec
lea
int3
rclb
das
in
inc
cmp
jne
dec
cmc
fildl
mov
sbb
outsl
dec
data16
icebp
jmp
push
rolb
push
aaa
push
or
or
xor
aam
dec
repnz
sbb
inc
bound
xchg
shl
adc
imul
or
xchg
pop
adc
xor
mov
sub
or
mov
xlat
xchg
inc
inc
push
fisttps
movb
xchg
js
xor
pop
dec
mov
inc
and
dec
inc
incl
cmp
pop
loopne
aam
cmp
popf
or
jle
fisubrs
adc
inc
fistpl
shlb
and
mov
lods
push
pop
or
xor
pop
stc
cmp
enter
inc
nop
faddl
test
out
cmp
js
cmp
xor
xor
mov
roll
mov
pop
or
je
and
sbb
mov
xchg
imul
and
enter
or
movb
jbe
xchg
and
loopne
and
jns
mov
add
cmpb
jne
leave
or
pop
fincstp
negl
dec
loop
int3
dec
inc
into
adc
sbb
sub
int3
shrb
xor
xchg
jne
clc
add
and
repnz
or
add
lods
xor
dec
movsb
or
shll
dec
data16
adc
mov
movsb
push
cmp
aam
xchg
dec
jmp
push
jb
rol
push
clc
jmp
add
or
in
adc
inc
add
adc
nop
jno
sub
cmp
js
add
xor
push
jg
repnz
test
add
fildl
rcrl
adc
add
mov
xor
stos
test
mov
in
mov
add
mov
dec
and
dec
sbb
jne
movsl
xchg
and
les
jp
cs
sub
jae
adc
push
adc
or
popf
inc
insb
je,pt
faddl
sbb
ret
pop
outsl
pop
add
scas
jmp
addb
addl
push
sbb
lcall
push
pop
popf
je
frstor
push
cmp
pop
mov
mov
push
xor
push
add
and
clc
add
arpl
inc
stos
push
addb
adc
adcb
ss
fistpl
loopne
jnp
jo
push
testl
push
push
cmp
xchg
in
rclb
or
push
push
mov
loopne
xchg
and
cmp
sub
inc
testl
xchg
loop
call
push
sub
pop
sbb
addr16
or
loop
in
jmp
mov
mov
loope
lods
add
mov
mov
inc
fucomp
cltd
sbb
jge
insl
test
leave
stos
push
mov
cmpsl
lret
loope
adc
push
movsl
fsubrs
test
jae
cmp
xor
negb
adc
xor
imul
pop
sub
aad
sbb
mov
sti
fnstenv
lea
sbb
test
push
push
outsb
aaa
lock
add
push
sbb
pushf
hlt
sub
or
pop
mov
lret
ficoms
daa
jmp
adc
mov
push
or
mov
or
add
and
sti
dec
and
inc
je
dec
adc
push
out
inc
addr16
enter
in
shrb
jmp
cmpsb
and
cmpb
mov
test
xchg
fsubrl
adcl
jg
pop
mov
mov
sub
dec
sbb
in
pusha
rorb
es
js
mov
rolb
cs
push
cmp
or
jnp
mov
push
filds
or
inc
or
adc
je
and
xchg
jo
mov
inc
shlb
jmp
add
sub
or
pop
dec
adc
add
shlb
iret
cmp
leave
push
test
push
adc
aaa
adc
add
stc
cmp
push
stc
in
fsts
jnp
xchg
mov
add
and
adc
ret
sbb
xor
jle
sbb
cmp
clc
adc
dec
sbb
data16
jo
out
sbb
mov
into
je
mov
lret
ja
jmp
jno
call
sub
jmp
sbb
sbb
cmpsl
cs
jo
adc
rorb
push
fs
insl
cli
movsl
push
sbb
lcall
ss
pop
fdivl
or
push
dec
pop
js
rorb
mov
je
inc
xchg
mov
add
outsl
cmp
pop
push
loopne
mov
jle
dec
inc
sbb
arpl
cmc
in
fnsave
dec
sbb
cmc
jno
or
cmp
xor
fists
dec
movsl
ljmp
bound
fwait
xor
jno
push
dec
mov
jecxz
sbb
and
add
and
shrl
xor
push
or
cwtl
mov
push
rclb
sub
popa
pushf
cmp
push
push
dec
pop
inc
dec
xor
sub
daa
scas
lea
rolb
jns
in
sub
fcom
xor
pop
test
sbb
mov
push
loop
push
cmc
hlt
test
bound
mov
sub
mov
add
push
push
and
push
inc
add
dec
mov
pushf
subl
xchg
sbb
rclb
stos
pop
aaa
cltd
or
add
imul
aaa
movsb
jb
loopne
xchg
movsb
push
out
mov
test
rorb
cmp
adcb
gs
popf
cwtl
rolb
nop
lock
mov
cmp
sbb
adc
and
dec
loop
jbe
lcall
loopne
or
bound
jmp
clc
xchg
dec
ret
mov
pop
in
push
adc
sub
daa
pop
cmpsb
dec
jb
inc
ja
add
test
and
enter
add
addb
pop
js
pop
pop
push
lock
or
ss
leave
jno
shlb
inc
xor
or
cmpl
sarl
test
mov
jo
loopne
in
aam
loope
rcll
out
pop
dec
add
mov
inc
fmuls
pop
pusha
shlb
cltd
or
loopne
sbb
call
jns
fadds
les
rcrl
pop
js
and
fwait
icebp
jg
push
pop
jo
arpl
dec
or
xor
testl
mov
lret
sti
add
in
inc
push
out
fsubl
mov
inc
push
xor
push
pop
lahf
mov
and
jle
movsb
icebp
push
jnp
xor
jg
jo
xchg
add
sub
fwait
mov
shrb
cmp
shlb
jmp
mov
dec
roll
outsl
mov
jmp
xchg
push
sub
imul
adc
cmp
pusha
in
xchg
xchg
cmpsb
or
data16
out
and
adc
imul
or
pop
push
ret
sbb
mov
mov
daa
pushf
pusha
xchg
inc
enter
cmp
pop
sbb
mov
push
and
or
fmuls
adc
test
fistl
push
rol
xor
dec
gs
das
clc
inc
xor
jmp
rorb
adc
or
add
aad
adc
pusha
add
sbb
push
sub
cwtl
dec
push
cmp
je
ret
ljmp
add
out
sub
decl
adc
mov
movl
pop
jo
add
ffreep
or
or
mov
popf
sub
jp
cmp
int
inc
dec
enter
mov
ja
sbb
and
push
dec
sbb
jo
sbb
sub
dec
sbb
pop
cld
or
or
push
dec
sub
subl
sub
xor
push
ja
sub
push
and
hlt
push
es
sub
out
jbe
push
inc
mov
sbb
loope
xchg
jo
mov
ds
mov
ja
add
pop
popa
push
je
pusha
sbb
and
mov
ss
xchg
dec
aam
test
aam
jne
fcoml
sbb
cmp
in
sub
mov
sbb
push
jae
cmp
jmp
push
ljmp
add
pop
insb
pusha
int3
pop
inc
push
loop
inc
mov
xchg
xchg
ss
xlat
rcll
mov
dec
sbb
sbb
mov
add
mov
test
inc
in
jmp
dec
sbb
push
sub
aad
dec
aam
sbb
adc
or
mov
sub
xchg
push
add
adc
adc
fincstp
mov
inc
insb
or
sbb
in
pop
and
test
xor
cmp
adc
pusha
pushf
test
add
sub
aas
lds
sub
loopne
call
push
jno
arpl
mov
es
pop
mov
mov
loopne
cmp
mov
or
mov
repz
push
adc
cs
sbb
rclb
outsl
dec
incl
pop
lea
stos
mov
xor
sub
out
xchg
jp
in
jae
cmp
pop
mov
jmp
dec
stos
aaa
xchg
fs
push
flds
jb
outsl
and
nop
aaa
xchg
sbb
mov
shl
jg
dec
lds
ret
rep
adc
data16
sbb
xchg
and
sbb
in
or
adc
daa
mov
jmp
pop
and
push
pop
add
cmp
fwait
scas
sub
mov
stos
pop
jg
sub
mov
push
imul
adc
test
or
cmp
mov
outsl
xor
jb
fs
jg
sarb
push
or
adc
dec
jnp
imul
ret
mov
mov
push
jp
mov
add
sbb
lods
adc
orb
jmp
add
inc
sarl
inc
mov
movsl
sub
mov
adc
push
subl
incb
rorb
sbb
ljmp
pop
cmpsb
xchg
mov
jmp
pop
lock
neg
push
add
push
loopne
cmpl
pop
add
xchg
add
mov
jg
gs
negl
adc
xchg
into
add
or
mov
imul
call
rorb
cli
aad
xchg
ret
sbb
mov
adc
and
jo
cmc
out
and
mov
xchg
int
push
cmp
sbb
adc
test
in
jbe
add
dec
andb
cmpsl
rolb
add
pop
loopne
and
and
jg
mov
aas
xor
or
sbb
add
push
xchg
push
xchg
lcall
or
dec
add
stc
pop
add
cmp
inc
and
test
cmp
ret
and
mov
scas
xchg
insb
call
rcll
data16
inc
cmp
sbb
adcl
call
fs
mov
cmc
jb
ljmp
aam
clc
imull
stos
loope
or
mov
or
sbb
clc
dec
call
push
jae
push
cmp
loope
call
pshufw
or
sub
ja
sub
push
xor
ss
jne
sub
push
sub
orl
ss
ret
les
dec
ljmp
mov
enter
adc
je,pt
sar
adcb
xor
loope
mov
stc
jnp
or
outsl
inc
jp
push
mov
sbb
int
xor
bound
jecxz
push
jg
ret
pop
mov
rclb
aam
cltd
loope
out
inc
lret
adc
popa
cld
inc
sub
mov
out
shr
sub
movsb
mov
cmpsb
adc
sub
inc
pop
rorb
lret
xor
dec
xchg
mov
lahf
push
adc
and
xor
mov
mov
or
sub
or
mov
es
add
inc
push
rcrl
adc
cmp
jbe
push
adcb
add
sar
loop
push
lods
push
rclb
push
and
jecxz
pop
ret
add
adc
or
or
cmp
cltd
nop
dec
lock
pop
inc
daa
mov
pop
pop
or
push
imul
pop
mov
vshufpd
cmc
sub
mov
jmp
push
add
adc
js
xchg
xchg
xor
dec
jo
mov
js
daa
jmp
dec
xor
rorb
imul
sub
mov
jo
ljmp
add
and
loope
fcompl
cmp
add
dec
stos
push
pop
pop
mov
mov
add
inc
test
mov
data16
sub
loope
push
inc
or
sub
add
or
insb
shll
or
dec
shll
mov
push
push
call
push
mov
mov
lahf
enter
pop
sarl
lret
jne
mov
jl
lret
sub
cmp
in
fcomi
jmp
pusha
jle
push
xor
pop
div
add
jb
lea
sbb
ljmp
xchg
jmp
lods
push
sbb
xorl
mov
pushf
push
adc
cmp
lret
sbb
adc
sub
xor
in
jmp
xorb
js
xchg
xor
sub
sbb
or
jle
fsubl
andl
gs
into
mov
in
sub
mov
rclb
call
add
push
je
pop
bound
jmp
lahf
rcl
je
icebp
cmp
push
shrl
jbe
je
adc
sub
sub
jne
bound
jne
adcl
orb
adc
mov
das
pushf
fidivrl
clc
int3
add
sub
mov
jnp
imul
add
xchg
loopne
dec
xor
ljmp
mov
neg
and
je
sub
mov
mov
sarl
mov
or
rorl
lret
or
add
stos
mov
dec
ljmp
ret
or
imul
iret
and
inc
add
shrb
xchg
call
insb
mov
test
pushf
mov
push
or
dec
add
icebp
lods
sbb
and
xor
push
sub
adc
xor
xor
jle
or
add
cmp
or
pop
push
pop
and
mov
and
psubusw
xor
and
inc
dec
xorb
jg
fs
jno
add
movd
movapd
mov
fldt
enter
shlb
jle
xor
and
lcall
xchg
decl
int
lods
pop
bnd
repz
or
jg
jmp
push
pminsw
adc
jnp
mov
call
aam
ret
or
notb
sbb
mov
add
mov
jbe
and
pop
mov
int
sub
fcmovb
sbb
dec
pop
ja
adc
mov
pushf
push
mov
leave
iret
into
loopne,pt
and
orb
jg
add
rolb
pop
add
mov
mov
je
mov
jb
test
mov
push
dec
lods
mov
lcall
xchg
rol
std
add
cwtl
cmp
and
movsl
or
rorl
and
ficoml
dec
pusha
mov
ficoml
sub
sahf
add
outsl
or
jg
jb
push
data16
pop
inc
mov
push
sub
add
dec
pop
shrb
out
clc
ja
mov
aas
lea
je
adc
push
jne
inc
cmpb
out
addb
add
mov
inc
inc
into
xchg
and
loope
adc
or
lret
fmuls
cmpl
daa
cwtl
ljmp
cmpsl
arpl
test
in
scas
sbb
add
into
clc
jmp
mov
sbb
mov
cltd
loope
lea
data16
or
dec
xor
or
incl
xor
inc
mov
sbb
decl
mov
wbinvd
loop
and
cwtl
sbb
mov
adc
aaa
enter
xchg
lahf
nop
dec
bound
lock
roll
sub
jecxz
imul
jns
and
inc
pop
subb
sub
mov
inc
push
jne
pusha
cmpsb
addr16
pop
dec
pop
bound
dec
push
sbb
aaa
iret
adc
or
movb
xchg
lcall
sbb
sbb
cwtl
mov
xchg
sbb
push
mov
adc
cmp
enter
enter
rolb
push
shlb
cmpl
mov
mov
movsb
jnp
je
jp
xchg
xor
rep
xchg
xor
daa
add
dec
loop
repnz
cmp
or
and
call
jecxz
add
jne
out
incl
and
out
push
mov
icebp
fidivrs
pop
mov
or
fwait
out
hlt
push
test
add
inc
mov
sbb
push
cltd
hlt
jp
adc
or
xchg
repnz
or
int3
sbb
xchg
mov
jmp
cmp
aaa
mov
cld
inc
push
cmp
arpl
orl
push
push
out
in
dec
jg
push
imul
add
lock
fadd
lods
inc
sub
xchg
cmp
adc
in
inc
jb
or
push
cmpsb
mov
adc
pop
mov
mov
jp
add
data16
aas
movsw
jbe
mov
add
jbe
aaa
inc
je
pop
movsl
sti
mov
adc
add
je
jae
jo
rcrb
add
xchg
ret
mov
test
inc
mov
pop
mov
cmc
add
or
pop
shr
arpl
outsb
test
pop
loop
icebp
mov
out
rolb
rorl
xchg
subl
shlb
test
lret
jle
addl
insl
jno
repnz
pusha
movsb
pop
inc
inc
push
lods
or
dec
mov
adc
jne
insl
lock
lock
aad
jo
hlt
fwait
mov
cmp
jg
or
testb
je
mov
pop
clc
inc
mov
cmp
xor
es
loope
daa
pop
lock
lret
jne
dec
jmp
shl
mov
xor
and
lds
mov
push
loope
push
lds
ja
imul
cltd
or
adc
pop
je
push
fistpll
sbb
sub
jecxz
fdivrl
stos
jno
test
cmp
pushf
xchg
mov
mov
repz
mov
cmp
pop
and
or
fmull
pop
jne
mov
adc
out
test
ret
stc
or
rep
jmp
ss
mov
mov
mov
jb
push
add
test
int
add
lea
nop
or
mov
fs
sub
push
in
sub
inc
add
add
lahf
cltd
dec
mov
push
jmp
add
lret
push
nop
inc
xor
xchg
repz
dec
mov
push
aam
int3
push
cmp
les
mov
mov
cmp
in
call
iret
repz
hlt
hlt
clc
clc
pop
adc
mov
andl
lock
sbb
jmp
repz
clc
mov
nop
mov
imul
pop
sti
and
popa
xor
and
xchg
pop
jno
lea
jl
cld
pop
and
pop
ss
out
ds
ds
xchg
mov
stc
sub
pop
pop
nop
push
mov
mov
mov
mov
add
ret
mov
inc
push
mov
sub
push
add
test
mov
cmpsb
rcr
push
mov
inc
repz
repz
dec
push
pop
pusha
push
jo
ss
sbb
repz
sbb
adc
or
iret
repz
or
add
out
xchg
movsb
dec
inc
sbb
add
sub
mov
outsb
shlb
enter
enter
add
paddsw
test
sub
imul
loopne
cwtl
or
ljmp
imul
pop
lds
pop
and
adc
repz
fists
adc
dec
sar
dec
scas
mov
dec
cwtl
dec
pusha
sbb
je
inc
xor
mov
lea
push
mov
dec
sbb
testl
es
clc
and
jo
push
lea
fistpl
and
mov
xchg
cmp
test
jmp
mov
popa
inc
les
int
adc
push
pop
mov
movsb
test
jo
imul
dec
add
mov
or
je
mov
fadds
pop
sub
ret
jb
jmp
inc
xchg
and
and
mov
insl
or
jne
sub
sbb
enter
adc
lock
or
jle
ret
lcall
hlt
fisttpl
dec
push
jbe
sub
das
mov
xchg
cmp
pushf
mov
cmp
mov
lea
cmp
cld
lret
sub
jnp
or
cmp
jne
push
adc
or
ja
imul
jne
pop
es
cmp
ficomps
add
andl
mov
in
jne
ds
repnz
pop
cmpsb
clc
mov
xor
cld
add
mov
mov
aam
xchg
popa
psraw
mov
loope
faddl
rolb
mov
scas
rolb
mov
or
loopne
faddl
ror
and
xor
pop
adc
loop
cs
shrb
inc
outsl
pop
and
les
scas
jns
push
addb
dec
jns
jge
pop
adc
xorb
mov
dec
lds
and
xor
mov
andl
cmp
ret
add
push
shll
sub
add
mov
push
sub
sbb
jne
popf
inc
fdivrl
orl
jmp
adc
or
push
push
and
cmp
xchg
fistl
cmp
cltd
mov
pop
add
aas
push
adc
inc
cwtl
add
xor
movsl
jbe
cmpsb
xlat
adc
ljmp
jne
into
mov
or
jl
and
pop
roll
aaa
push
or
sub
ljmp
mov
adc
jmp
push
sub
loopne
dec
inc
movsl
sub
ss
xchg
fs
or
popf
icebp
ds
je
or
je
std
xor
adc
gs
add
cs
mov
pop
sbb
add
or
test
push
fcoms
sub
fldt
sub
ja
pop
jbe
lea
adc
sbb
sub
jp
sahf
roll
and
leave
push
sbb
pusha
adc
dec
iret
int
push
clc
jbe
add
and
adc
out
fs
adc
jns
pop
or
or
cmp
pop
lods
xchg
jmp
push
add
sbb
sbbb
add
xorl
mov
int
lret
push
jle
mov
cmc
je
andl
cmpsb
inc
inc
push
mov
mov
negl
push
aam
test
out
inc
and
inc
rcrb
roll
and
push
add
push
xor
cld
cmc
sub
mov
inc
pop
cltd
and
dec
loopne
cmp
cmpl
add
loopne
push
or
roll
dec
push
outsl
xchg
or
or
cli
xchg
or
dec
pop
mov
inc
dec
push
rolb
push
test
or
repz
loopne
ret
add
sbb
lods
cmp
das
pop
aaa
or
add
shlb
dec
ret
out
dec
repnz
dec
scas
jmp
inc
cmp
xchg
push
adc
push
push
lret
rcrl
add
sub
sbb
int3
dec
push
xchg
call
mov
inc
repnz
and
mov
inc
cld
verr
dec
jne
jmp
mov
adc
pop
repnz
dec
and
sbb
dec
jne
mov
mov
adc
sahf
xchg
cwtl
push
xor
outsb
mov
inc
imul
aam
mov
sub
add
xchg
pusha
mov
push
rorb
adc
cld
outsb
into
add
std
push
lret
push
in
cmp
jne
mov
push
cmp
outsb
sahf
out
jne
es
jne
dec
inc
insb
out
aam
orl
push
or
and
mov
dec
jno
lahf
xlat
or
adc
jmp
std
cmp
adc
cld
jmp
fldt
adc
in
adc
adc
inc
inc
inc
es
push
push
out
cmpsl
sub
xchg
stos
push
test
fdiv
mov
push
and
sbb
cmpsl
mov
mov
daa
mov
xchg
cmp
sub
outsb
adc
and
stos
repz
xor
add
pop
inc
add
mov
lock
sub
enter
xor
add
sub
adc
nop
or
pushf
dec
jg
pop
xor
xor
or
and
pcmpgtb
fs
pop
dec
jge
int
es
fs
insl
push
sbbb
jo
sbb
cmp
test
sbbl
jo
add
loope
pop
or
add
dec
lods
je
xor
rclb
shll
add
xlat
xchg
add
jne
fmuls
cli
das
add
add
add
and
dec
dec
mov
pop
subl
pop
call
push
push
or
adc
imul
mov
divb
out
scas
and
pop
dec
pusha
jle
adc
aas
add
add
lea
mov
and
xlat
mov
xchg
je
xlat
mov
or
addl
xorb
clc
pop
nop
sbb
push
pop
pop
or
push
sbb
leave
adc
xchg
cmp
call
mov
adc
and
push
xchg
push
and
add
jne
inc
xor
mov
push
inc
sbb
sbb
rol
sub
push
push
hlt
mov
xor
add
es
fisubs
arpl
push
fimull
pop
pop
mov
or
adc
sbb
lea
dec
add
add
push
xor
aam
fmuls
cs
sti
jge
not
and
sub
add
and
adc
push
sti
scas
xchg
jl
push
fimuls
and
mov
pop
mov
adc
sub
int3
cwtl
mov
ja
jne
lcall
push
lcall
xchg
jmp
add
cmp
ja
mov
xchg
clc
mov
mov
lea
neg
mov
sbb
clc
neg
inc
cli
or
add
jmp
or
mov
inc
inc
push
int
cmp
sbb
scas
clc
fwait
jmp
mov
add
mov
inc
cmp
jb
sbb
fsubrs
shll
stos
addb
dec
idivl
dec
pop
ret
xchg
cs
and
add
or
fdivs
lods
add
add
jge
add
push
sub
or
or
shl
push
adc
push
imul
stc
add
imul
iret
xor
jo
and
stos
jne
and
cmpb
adc
mov
adc
test
inc
cld
clc
push
push
outsb
ss
inc
test
and
add
repz
push
aam
xchg
pop
addr16
inc
mov
xor
inc
sbb
loop
cmp
bound
adc
add
out
xor
bound
test
in
mov
iret
dec
lea
jl
and
outsb
sahf
sarb
xlat
mov
cld
rclb
pop
dec
or
mov
flds
xchg
sub
loop
pop
mov
imul
inc
jmp
cmp
sbb
jmp
adc
jne
sub
lret
sbbb
or
mov
adc
fimull
into
cmp
movsl
lret
adc
lock
inc
jns
out
or
and
adc
adc
pop
mov
fidivrs
pop
lods
adc
mov
push
aam
xor
or
dec
mov
and
je
lret
or
or
xor
xor
sbb
test
and
push
addl
test
aam
add
or
jp
push
jbe
push
add
xor
sbb
and
movsb
inc
xchg
or
fcmovnbe
push
push
push
add
loopne
std
mov
sbb
push
sub
jecxz
xchg
sbb
push
sbb
add
or
or
xchg
sub
mov
inc
loopne
mov
mov
les
push
insb
dec
lcall
push
sub
inc
mov
push
lcall
xor
jne
mov
pop
ret
or
mov
inc
sbb
jne
fs
add
adc
sbbb
roll
add
xchg
add
aas
inc
inc
sbb
push
push
or
adc
xlat
lds
push
adc
arpl
push
inc
adc
inc
imul
orl
cmp
popf
loopne
pusha
cmpsb
sbb
dec
or
or
push
mov
sbb
adc
shrl
pop
xor
daa
inc
pushf
adc
sub
add
cwtl
sbb
inc
inc
mov
loopne
jno
sub
or
int
nop
je
inc
or
icebp
lea
push
adc
or
ja
aaa
xchg
adc
add
push
pop
cmp
push
clc
sahf
movsb
cmp
bound
inc
cmp
or
mov
fnstcw
les
test
adc
mov
jne
or
push
xor
jno
add
or
mov
jmp
rorl
gs
jnp
or
mov
or
mov
stos
add
es
in
mov
sbb
testb
add
call
cwtl
cmc
add
data16
outsl
adc
mov
pop
fimull
shrb
mov
sbb
inc
insb
or
xchg
jo
jp
int3
clc
dec
test
pop
inc
hlt
adc
lea
push
push
inc
jecxz
or
xor
sub
mov
jmp
in
ret
add
adc
sub
mov
mov
inc
leave
test
sar
add
xchg
jmp
test
stos
lock
mov
rcrb
cwtl
add
fistpll
rcll
or
or
aad
and
push
into
and
jmp
xor
adc
loop
or
scas
jne
sbb
out
mov
hlt
push
fisubrl
jne
ja
rdpmc
mov
cmc
inc
pusha
aas
xor
test
subb
adc
stos
rcrl
dec
lea
jp
cld
push
push
jge
xor
pusha
out
gs
fsubr
or
rol
sub
in
inc
int
inc
pusha
mov
add
dec
cmp
mov
sbb
pop
aam
push
insb
push
mov
xchg
add
add
cmp
movsl
test
out
insl
mov
mov
jbe
dec
cltd
pop
idiv
lea
adc
decl
mov
add
cli
mov
ja
pop
sub
popa
lcall
xor
rol
addl
js
adc
inc
sub
ficoml
subb
dec
mov
mov
pop
push
movsl
adc
mov
xchg
push
bound
mov
fwait
jae
or
add
jecxz
jmp
iret
sub
push
in
sbb
inc
adc
or
sahf
out
push
repnz
add
or
cmp
test
testb
ja
push
loopne
mov
lock
rolb
and
dec
push
stos
inc
fcoms
fists
pop
mov
insb
and
ret
in
mov
adc
and
lods
add
addl
rcl
add
or
jg
pusha
cmpsb
in
xor
pushf
push
push
or
adc
mov
faddl
xor
adc
clc
fs
lods
popf
jmp
daa
adc
mov
adc
or
imul
sti
xchg
push
push
or
push
movsl
jmp
dec
je
add
aas
cli
dec
sbb
dec
jne
push
pop
pop
insb
push
or
addr16
fisubrs
sbb
add
jmp
call
hlt
push
and
push
jmp
add
sub
pop
push
push
les
lea
test
push
cmpsl
pop
sbb
push
add
sub
arpl
inc
xchg
roll
add
insb
movsbl
push
jne
mov
addr16
add
dec
jo
xchg
or
xchg
inc
mov
xchg
dec
jne
pop
cltd
push
repnz
dec
repz
xchg
test
je
dec
mov
and
cmovp
lret
enter
pop
jns
pop
in
imul
lods
mov
sub
subb
add
push
iret
or
js
in
movsl
lds
leave
add
ja
pop
push
mov
out
pop
rorb
add
dec
pop
movsl
pop
aas
push
or
in
push
jmp
sub
dec
mov
pop
sbb
pop
cmc
loopne
dec
mov
fsubrs
dec
scas
add
cmp
aad
imul
and
andb
xlat
mov
jmp
cmp
jae
push
sbb
sub
adc
sbb
add
and
add
loope
sub
mov
loop
push
push
pop
lcall
add
add
sub
dec
sbb
add
insb
iret
sub
mov
call
fsubrl
push
jl
sub
sub
je
or
dec
sbb
pop
xor
sbb
shl
jns
movb
clc
mov
sub
mov
adc
xchg
imul
pusha
ss
cli
or
lea
stc
mov
and
dec
pop
push
sbb
and
movsl
jo
addr16
or
push
pop
int
xor
decl
das
pop
pushl
mov
lock
sub
sub
push
shll
push
pop
pop
outsb
outsb
jmp
scas
push
pop
sub
dec
add
imul
or
push
push
dec
test
sub
jmp
inc
sbb
imul
cmp
lret
push
rcr
or
dec
sbb
push
inc
lods
push
sub
daa
movsl
stos
sbb
xlat
out
mov
sub
cmp
lahf
push
and
sarl
sarl
inc
push
mov
mov
sti
pop
push
push
inc
cmp
pop
pop
fsts
stc
xchg
clc
mov
mov
stc
mov
push
lock
cmc
mov
fs
xchg
cmpsb
bound
insl
inc
sub
je
sub
pop
adc
cmp
adc
shlb
out
add
lock
push
mov
inc
mov
jmp
jnp
pop
cli
dec
or
mov
inc
mov
pop
inc
loopne
mov
jno
adc
pusha
push
clc
sbb
xlat
mov
xlat
je
xor
add
jbe
jbe
add
and
insl
push
mov
int3
scas
cmp
sets
push
insl
gs
arpl
int
push
pop
xchg
and
jg
fldl
add
aam
inc
movapd
pop
popa
imul
mov
lret
inc
jo
imul
add
push
test
pushf
aad
sbb
rorb
fcom
pop
lea
jge
orb
call
call
les
jb
inc
cs
subl
mov
enter
rol
pop
es
push
insb
fbld
jmp
inc
and
ss
mov
aam
push
push
mov
jl
jge
cli
loop
pushf
add
sbb
adc
aam
pop
lret
movsb
sbb
lods
into
dec
add
daa
mov
fmul
push
xchg
mov
and
push
ret
cmp
sbbb
mov
in
call
and
addb
push
cmp
mov
ja
push
push
adcb
sahf
lcall
add
cmp
stc
and
dec
insb
sub
jmp
jmp
adcb
sub
and
inc
add
push
jo
js
inc
mov
pop
mov
mov
scas
sub
in
pop
enter
or
mov
lods
mov
ret
inc
dec
call
cmpsl
dec
inc
pop
mov
pop
and
lock
test
lea
jmp
pop
mov
dec
pop
cmp
sub
leave
cmp
sbb
repnz
jle
mov
std
or
fcmovbe
clc
ja
adcb
jnp
adc
loopne
rcll
inc
xor
into
je
fstpt
pop
jne
mov
or
mov
loopne
adc
enter
add
stos
fcoms
dec
push
popa
xchg
iret
xchg
or
aad
dec
lret
jb
and
sub
mov
push
mov
ds
sub
mov
and
dec
leave
push
call
out
inc
leave
arpl
in
je
gs
out
in
lret
adcb
push
rcrb
loop
mov
decl
mov
or
push
push
sahf
out
sahf
dec
inc
cmp
sub
ud2
loopne
lcall
decl
push
mov
jmp
mov
sbb
data16
push
and
inc
insb
pushl
call
mov
mov
mov
cmp
repz
fsub
call
lock
add
iret
repz
ret
inc
sahf
sbb
and
dec
mov
jo
lcall
mov
sub
push
lds
test
adc
pop
mov
mov
adc
cmp
dec
push
dec
push
add
sti
sti
xor
or
je
mov
inc
ret
js
xlat
sbb
inc
or
jne
inc
mov
test
jle
xorl
cli
add
bound
add
fildll
sub
pusha
jmp
push
mov
jne
push
pusha
adc
push
stc
lret
enter
push
loopne
lea
inc
and
cmp
fsubrs
jne
out
jle
add
arpl
movsl
popf
pop
movsl
xchg
mov
nop
inc
or
jne
outsb
cmp
pop
popf
push
stos
rcll
mov
or
jmp
test
cmp
fldenv
push
sbb
jecxz
jns
cmpb
dec
inc
mov
sbb
pop
add
or
icebp
loopne
mov
pop
xchg
push
push
add
add
inc
xchg
js
jns
icebp
inc
push
dec
push
pop
ret
add
aam
push
rcll
pushf
test
test
andl
inc
loopne
inc
push
std
call
cmp
rcrl
dec
inc
inc
or
and
movsl
cmp
sbb
xor
out
ja
lds
xor
enter
mov
and
mov
insb
mov
andb
add
pop
std
movb
je
sbb
adc
cld
addb
mov
adc
push
push
dec
or
sub
je
jo
push
mov
push
clc
mov
or
dec
stc
add
fmuls
or
inc
cwtl
or
adc
loope
dec
and
and
sub
inc
test
orb
out
mov
std
std
imul
xor
jne
mov
push
stc
imul
mov
movsl
jge
test
add
inc
push
mov
sete
arpl
sarb
mov
ljmp
adc
add
test
fs
ret
adc
mov
mov
in
pop
lock
inc
xor
int3
xor
out
push
inc
jbe
push
mov
cmp
loope
add
sub
sti
sbb
movsl
xchg
data16
cmpb
mov
mov
pop
push
xor
inc
gs
and
fcoml
gs
aam
sarb
das
das
mov
popf
enter
rol
cmp
lods
mov
mov
divl
fbld
aam
aaa
dec
cld
xor
inc
cmp
aaa
xor
adc
and
in
sbb
clc
jno
sub
orl
fmull
add
scas
jmp
mov
xchg
push
inc
in
jo
mov
cs
mov
call
push
sub
jno
add
add
mov
rcr
call
dec
xchg
in
adc
add
adc
sbb
test
add
or
test
fimuls
and
adc
enter
rclb
lret
rcrb
daa
jge
xlat
lcall
cltd
adc
jbe
push
std
movsb
sub
fisubrs
push
jecxz
test
inc
pusha
lcall
xor
sbb
add
pop
divl
jmp
ja
add
sahf
mov
jp
sub
dec
push
stos
and
sbb
shrb
call
cmp
jp
jns
mov
pusha
pop
sahf
stc
rcrl
mov
arpl
jo
push
push
pop
fcmovne
mov
adc
and
inc
fmuls
jmp
adc
push
mov
cmp
adc
or
push
push
xchg
mov
inc
js
in
bound
subl
rol
xor
sub
mov
mov
iret
mov
push
push
cmp
push
sub
iret
das
nop
mov
and
je
pop
push
pop
push
fistps
mov
xchg
lret
gs
or
mov
hlt
fdivrs
rcrb
popf
jne
sub
cmpsl
mov
xchg
mov
shrb
xor
aas
sub
movsl
xchg
call
loopne
cmp
jg
dec
pop
mov
stos
pop
add
cmpl
cs
mov
lea
push
pop
ja
orl
dec
loopne
jg
add
sbb
sar
pop
fsubl
sbb
es
adc
addb
add
mov
fsubr
shll
les
lret
lods
push
mov
dec
or
je
or
inc
mov
scas
mov
into
inc
pushf
pop
or
add
sub
andl
addr16
adc
jg
pop
xor
sub
mov
mov
mov
scas
mov
imul
in
lea
ja
mov
mov
movsl
mov
mov
arpl
sbb
hlt
hlt
stc
int3
add
int
je
or
inc
insb
add
test
in
mov
loope
insb
jo
lods
js
pusha
sub
fcmovne
in
ficoml
pop
and
js
add
or
jge
je
inc
fiaddl
xor
fdivr
inc
fs
cmp
sbb
imul
out
and
pop
std
xor
movsl
adc
mov
add
mov
test
or
cmp
bndldx
andl
mov
sbb
sbb
sub
adc
or
mov
ds
mov
mov
inc
movsb
insb
cmp
sub
lock
cmp
mov
push
arpl
idivl
insb
arpl
sub
pusha
dec
mov
jae
aaa
jne
das
mov
lock
mov
push
sbbl
and
in
push
test
sub
adc
xchg
push
daa
clc
dec
mov
mov
ror
sbb
mov
jge
adc
push
stos
mov
adc
add
push
insl
cmp
cmp
lahf
jl
xor
xorb
decb
jmp
pushf
sub
shl
scas
adcl
dec
mov
xor
ss
cmp
mov
adc
ret
add
xor
mov
aad
fwait
inc
and
les
outsb
dec
out
cmc
lods
maskmovq
jg
aas
jmp
mov
inc
lods
cmpsb
sete
xlat
mov
mov
dec
imul
dec
push
jl
lock
stos
mov
je
inc
lods
je
repnz
jp
sbb
out
dec
mov
jo
or
gs
xor
or
jmp
inc
pusha
je
or
sub
cmpsb
ss
popa
xor
subb
mov
pusha
aaa
gs
push
imul
xchg
add
sub
adc
je
mov
or
jo
popf
mov
test
stos
jb
lods
cmp
scas
aaa
inc
mov
dec
jne
movsb
addr16
mov
ja
fbld
jmp
cmp
jle
popa
mov
clc
adc
and
pop
push
push
js
or
fadds
push
adc
adc
rclb
push
insb
push
mov
aam
testb
and
xorl
icebp
outsb
and
sbb
xchg
sub
inc
sbb
mov
push
pop
enter
enter
and
imulb
popf
push
push
push
test
data16
call
cwtl
or
cmpb
jne
xor
and
rcl
stos
push
xor
js
sub
and
jae
pusha
cld
mov
adc
jo
inc
cmp
add
sahf
add
adc
mov
hlt
or
xor
jecxz
mov
jbe
mov
stos
lea
adc
sub
ret
sahf
or
cwtl
or
add
rorl
add
jl
sub
sbb
adc
add
fidivrl
and
pop
sbb
sub
sbb
clc
xor
mov
test
inc
dec
mov
or
and
mov
jbe
sbb
dec
test
pop
add
sbbl
bound
iret
dec
add
movsl
clc
repnz
cmp
dec
jmp
sub
sub
movb
mov
aam
adc
pop
xor
lods
fcomp
dec
shlb
sbb
movb
inc
jmp
movsb
xor
or
jmp
dec
loopne
sysret
pusha
xor
repnz
roll
ret
jge
push
lcall
int3
adc
push
outsl
add
sub
pop
aam
sub
inc
sub
sub
cmpsb
jo
data16
decl
and
pop
sti
in
jle
cmp
cmpb
xor
add
rolb
and
mov
sub
loope
pop
dec
outsb
movsl
test
and
adc
xor
shlb
pop
inc
aam
adc
movzbl
sub
aam
data16
adc
mov
adc
lret
xor
sub
pop
jecxz
add
lcall
popf
sub
fsubr
push
pop
int
fchs
pushf
cwtl
andb
inc
and
outsb
rorb
xor
sub
xor
mov
movsl
daa
pop
mov
mov
push
push
cli
movsb
addl
outsl
loope
into
sbb
jge
mov
xor
add
daa
ret
jb
push
jns
iret
mov
jo
insb
leave
jno
and
inc
out
imul
xorb
repz
cli
movsb
nop
mov
dec
lods
sbb
xchg
and
pop
adc
xor
sbb
pop
cli
popf
loopne
push
jnp
adc
int3
dec
std
fimuls
mov
adc
call
pop
lcall
or
xchg
hlt
xlat
repnz
xchg
lcall
dec
xor
add
mov
cmp
push
ret
subb
scas
sbb
xor
je
pop
sarb
fisubl
gs
mov
xchg
jnp
push
pop
cli
loopne
enter
ss
add
and
ljmp
imul
jmp
jl
int3
adc
xchg
inc
add
sub
and
addr16
loope
cmp
xchg
push
pop
outsb
inc
hlt
shlb
add
jp
mov
mov
fwait
rcrb
lods
lock
call
sub
jnp
into
add
inc
and
jge
or
add
fadds
dec
jle
add
mov
pushl
popa
cs
out
and
lahf
and
mov
jp
add
push
mov
stos
mov
stos
loop
xorl
or
adc
add
out
loopne
or
je
loopne
cmc
jo
aaa
icebp
jge
subl
jmp
inc
cmp
and
outsl
lea
mov
push
mov
mov
jl
inc
sub
sbb
mov
sbb
rorb
stos
insl
sub
icebp
jge
int3
dec
adc
clc
mov
and
pop
dec
loop
es
jb
scas
add
fsubl
and
es
or
jmp
orl
test
add
add
pop
or
clc
sbb
pop
and
mov
dec
rclb
xor
ret
cmpb
jnp
icebp
or
insb
xchg
cmc
loope
mov
push
popf
fwait
mov
mov
xor
or
rclb
ret
aaa
mov
movsl
or
xor
sub
xchg
cmp
pop
das
xchg
inc
sub
sub
lea
pop
lock
sub
inc
sar
outsl
cmp
sub
fistl
mov
aam
sub
pop
xor
loopne
movsl
into
in
xchg
test
aam
push
sub
das
or
pop
push
add
cli
push
dec
mov
lock
pop
testl
inc
mov
jbe
ss
sbb
loopne
call
clc
shl
cmp
or
or
rorb
lods
or
push
add
mov
jo
les
mov
nop
sbb
ret
sub
pop
mov
inc
sbb
xchg
push
xchg
rcll
cmc
outsb
imul
xchg
mov
sahf
pop
push
ret
outsb
mov
dec
and
jl
cltd
mov
xor
push
int3
push
or
push
std
push
mov
xchg
fld
cmpsl
popf
cmc
mov
sub
add
xor
push
xchg
ljmp
pop
lock
xchg
lock
icebp
push
mov
test
add
xor
jo
outsl
loope
test
into
movsb
in
loop
inc
testb
xor
dec
sbb
pop
mov
or
in
outsl
sbb
dec
data16
sbb
push
push
enter
pop
or
add
sbbb
or
es
cld
dec
xchg
arpl
jo
pop
push
inc
lea
pop
out
in
push
call
dec
and
ljmp
into
leave
and
add
push
cmp
mov
and
leave
add
add
xor
push
mov
js
or
mov
call
mov
sti
push
fstp
xchg
or
cs
inc
xchg
and
and
dec
addl
xchg
ror
sub
add
repnz
or
pop
pushf
shll
lds
lods
lret
test
xchg
movsl
inc
ret
mov
adc
xchg
movsl
in
imul
out
xor
or
add
pop
xchg
or
push
xchg
ljmp
orl
loopne,pn
lods
clc
dec
sub
mov
mov
mov
mov
mov
push
mov
into
iret
movzwl
mov
or
les
pushf
enter
cmp
add
popf
lcall
sahf
jbe
cli
pop
ja
fstpl
mov
mov
jo
xchg
les
add
sbb
fnstenv
mov
push
arpl
ja
push
mov
in
sar
mov
out
jae
mov
push
or
mov
mov
dec
or
jge
xor
mov
or
arpl
add
jae
call
jne
push
pusha
xlat
jb
cmpsb
mov
jecxz
cmp
nop
imul
mov
pop
sub
mov
inc
sub
sub
insb
jne
jbe
xlat
xor
or
pop
pop
in
pop
mov
mov
cmpsb
sbb
jb
andb
das
inc
cmp
xor
mov
fwait
cmp
leave
inc
cmp
add
inc
pusha
rcrb
int
sub
xor
cmp
add
lea
or
lahf
xchg
xchg
add
xchg
lret
pop
mov
and
call
dec
adc
mov
jnp
jl
xchg
cmp
mov
fsubr
dec
in
sbb
mov
int
leave
adc
mov
fs
dec
fwait
call
fmuls
jmp
jb
inc
sub
std
add
in
pop
xor
sbb
cli
cmp
stos
sbb
nopl
mov
clc
mov
mov
jmp
xchg
es
pop
call
push
dec
nop
mov
xchg
fs
xchg
mov
mov
imul
imul
scas
in
xchg
pop
mov
mov
lods
add
or
mov
mov
or
push
in
in
cwtl
lods
xchg
inc
cs
pop
dec
in
add
fmuls
mov
nop
repz
push
sbb
enter
jb
fcompl
cltd
cmp
pop
call
aam
enter
in
mov
mov
andl
in
mov
aam
and
mov
stos
loope
push
jbe
xchg
xchg
loopne
jb
daa
pop
lods
imul
jmp
add
xor
add
fbld
aad
js
repz
fisubrl
fiaddl
movsl
xor
ss
icebp
std
test
cmp
lret
adc
pop
xchg
les
and
dec
daa
js
xchg
imul
sub
xchg
into
lret
int3
push
dec
inc
ret
mov
ret
xchg
adc
sub
in
jbe
fwait
rcll
outsb
repnz
jmp
mov
mov
inc
pop
pop
push
mov
jp
mov
das
add
and
adc
dec
fdivrs
or
ret
cltd
inc
push
dec
insl
ficoms
inc
icebp
nop
ss
cmc
sahf
pop
pop
shr
lds
daa
xor
mov
ss
iret
dec
fildll
loopne
cmp
jne
or
cmp
and
inc
enter
inc
add
sub
xor
dec
mov
cmpsb
xor
lea
jo
sbb
rcll
add
xchg
push
sbb
add
push
add
add
mov
mov
fisttps
mov
xor
and
or
or
pop
jne
or
rcll
or
ja
movsl
movsb
dec
sbb
sub
enterw
dec
lret
sahf
out
inc
adc
roll
add
inc
adc
sub
mov
mov
inc
iret
pop
inc
outsb
add
sbb
popa
sahf
or
stc
sbb
adcb
xchg
add
mov
mov
sub
add
add
hlt
mov
subl
push
dec
add
pop
dec
popf
out
and
mov
add
int
fimuls
ja
sub
xor
or
inc
add
cmpsb
xchg
push
xor
jnp
jge
jbe
loopne
ficoms
push
push
jnp
cmp
arpl
cmp
loop
jb
cmpb
cld
pop
jae
add
dec
and
in
inc
xlat
int
mov
mov
push
sbb
lods
jmp
and
cmpsl
je
add
push
fsub
std
insb
jbe
mov
ljmp
lahf
mov
leave
sub
mov
cmp
decw
sbb
mov
orl
jp
sbb
and
cld
and
cmp
shl
das
dec
clc
lea
and
mov
lods
jb
pushf
jg
jl
ja
pop
pop
xchg
push
xchg
das
mov
xchg
lods
jmp
stos
inc
xchg
add
xchg
xchg
mov
lcall
js
jno
jnp
sahf
cwtl
mov
mov
push
jo
addr16
dec
rcll
shll
xor
xor
cmp
sbb
fsubrl
in
jne
movl
inc
inc
sarl
std
jne
mov
cmp
cmp
les
inc
lods
fistl
dec
cmpsl
and
xor
adcb
fwait
testb
push
pop
arpl
fwait
xchg
icebp
mov
mov
movb
pop
shrb
xor
inc
shl
into
std
call
push
fs
lock
nop
add
mov
scas
dec
in
addr16
and
stos
xchg
adc
push
aas
rolb
pop
cmc
inc
jo
cmp
or
push
call
push
pop
xchg
inc
loope
out
xchg
imul
je
inc
inc
push
leave
inc
fwait
lea
imul
lea
xchg
add
sub
jle
adc
jmp
loopne
cmpb
or
mov
inc
jge
add
ljmp
add
cld
jge
rolb
loopne
xorb
nop/reserved
sub
xchg
aam
push
push
and
lock
pop
andb
inc
push
shll
jne
mov
mov
xchg
dec
jle
pop
and
add
jle
in
icebp
and
xor
push
mov
add
jne
xor
loopne
sbb
mov
jmp
mov
push
jnp
cmpsl
cmp
iret
adcb
inc
sbb
push
es
loopne
add
jno
mov
adc
xor
cmp
adc
andb
in
or
inc
fcmovnbe
mov
mov
roll
pop
jmp
or
jmp
xchg
pop
push
dec
pushf
push
nop
dec
jecxz
push
aam
xor
xlat
testb
insb
ljmp
add
add
ljmp
sti
push
sub
or
xor
lock
add
out
outsl
and
or
sub
inc
jmp
xor
jg
or
mov
add
jns
inc
pusha
sbb
aaa
test
push
inc
jo
out
imul
stos
rcrb
sbb
push
aad
mov
popf
jmp
es
cmp
mov
push
jp
add
cli
insl
pop
pop
mov
js
std
and
push
mov
and
outsl
lret
jns
push
fiaddl
xchg
jmp
sbb
mov
lea
cld
test
mov
clc
xor
fistpll
cmpl
loope
ret
xchg
pop
ret
adc
shrb
movsl
sub
sbb
subb
push
call
je
adc
adc
mov
js
push
cmp
je
push
testb
push
cmp
lods
or
pop
sbb
mov
imul
cmpsl
nop
mov
negb
lahf
sahf
xchg
out
lods
das
adc
sbb
sub
clc
and
mov
sub
sbb
sbb
push
mov
test
je
cmp
ljmp
jle
jg
mov
or
imul
cld
lds
add
add
shrb
loope
jns
cld
add
push
pop
cmp
mov
inc
xor
sub
add
fnstsw
popa
in
addr16
inc
push
lock
jl
sub
out
add
cmp
in
jle
loope
or
sbb
jo
or
lods
xchg
aaa
mov
insb
pop
movsl
mov
jmp
xor
mov
pop
or
dec
pop
clc
ret
or
clc
mov
dec
sbb
cwtl
mov
hlt
inc
test
dec
jp
fiadds
xchg
stc
push
lods
push
push
push
inc
es
test
pop
or
push
scas
xchg
lds
out
icebp
outsl
aam
or
hlt
addb
mov
pop
test
add
inc
sub
dec
pop
pop
inc
inc
jo
movsl
adcb
inc
or
add
jg
mov
imul
jo
push
inc
scas
subl
shrb
push
xor
bound
pop
mov
and
loopne
push
imul
cmc
add
sbb
adc
loopne
and
xchg
int3
add
and
xchg
cmp
aas
cmp
test
fwait
je
adc
mov
cmp
or
xor
shr
pop
xor
pop
mov
xor
push
mov
and
sub
push
in
push
xor
inc
inc
push
in
inc
dec
mov
data16
pop
cmp
daa
ds
push
adc
cmp
dec
popf
aad
lods
and
std
jbe
cmp
clc
shll
push
sbbl
add
in
xchg
fdivs
hlt
mov
stos
xor
push
push
fnstenv
mov
or
fwait
aaa
sub
in
movl
fmuls
mov
nop
xor
movsb
cmp
mov
cmp
mov
inc
push
daa
sbb
adc
mov
jnp
mov
adc
jo
faddp
stos
cmp
mov
ja
ljmp
add
nop
or
negl
xor
push
inc
test
fistpl
cmp
xchg
arpl
mov
pushf
mov
fwait
cwtl
shlb
push
inc
sub
dec
adc
xchg
mov
adc
cmp
pusha
lods
jle
add
push
fisttps
mov
push
js
push
test
sahf
pop
js
sub
mov
lods
std
jle
push
inc
add
or
cmp
inc
outsb
pop
or
sub
jg
inc
lsl
sbb
or
ss
sbb
aas
and
sub
pxor
push
push
add
inc
sub
cmp
inc
jmp
push
loop
shr
je
fistpll
jg
dec
movsl
sarb
inc
adc
and
inc
js
sub
mov
dec
jne
and
imul
mov
jnp
add
xor
mov
je
xor
add
adc
sbb
add
jne
push
je
fidivs
or
inc
inc
cli
pop
pop
ret
lock
rcrl
push
mov
bound
add
out
outsb
dec
cli
shr
add
cmp
cmc
xchg
bound
push
adc
jae
pop
pop
repz
notb
cmp
in
adc
xchg
outsb
sub
es
push
int
fldt
adc
loopne
test
mov
idivl
push
or
shll
enter
or
inc
sub
jp
ret
pop
add
les
cli
push
cli
fnstcw
pop
add
add
mov
mov
dec
mov
mov
lcall
pop
mov
push
inc
sub
test
lcall
imul
rcll
xorl
dec
popa
lret
ret
xchg
push
clc
out
fdivrl
add
sbb
insb
xor
call
lock
shl
and
mov
and
add
cmp
or
xchg
out
mov
popa
les
mov
fistps
jmp
add
into
das
add
pop
popa
push
mov
push
sbb
push
dec
add
and
sbb
in
mov
jp
add
cmc
clc
jmp
adc
jmp
xlat
mov
push
xchg
imul
push
pushaw
iret
in
call
cmp
or
or
lcall
or
icebp
imul
mov
jmp
adc
das
mov
pop
les
mov
adc
bound
cld
fmull
fstl
mov
cmp
push
mov
push
mov
and
fucom
jns
mov
dec
push
push
pop
push
sahf
jge
mov
sbb
shl
push
sahf
cmpsl
jge
adc
movsb
mov
incb
push
xor
add
pop
aaa
fnsave
mov
or
cmp
mov
xor
sti
je
push
inc
test
or
mov
sbb
and
inc
adc
loope
inc
add
lea
mov
in
je
push
cltd
jmp
inc
faddl
inc
sbb
ret
es
sar
push
jmp
test
dec
push
jmp
rcr
jg
xchg
and
ret
and
push
push
test
adc
fstl
jmp
mov
rol
aam
or
mov
aaa
andb
cmpsb
jle
mov
test
cld
divl
adc
std
xchg
hlt
das
mov
ret
jl
push
inc
sbb
cwtl
sbb
cmp
or
pushl
lea
mov
shr
std
mov
les
mov
push
mov
shll
add
sti
je
jmp
bound
shl
pop
jo
add
sbb
test
or
add
and
push
ret
or
push
test
ret
sarb
xchg
add
or
and
inc
adc
lds
push
cmp
push
push
enter
xchg
shll
rolb
stc
jp
mov
imul
jno
idivb
movsb
fs
rorl
sti
dec
or
mov
xchg
out
das
jecxz
insb
inc
cmp
dec
and
ds
cmp
sbb
xchg
es
mov
mov
and
fbld
fcoml
loopne
pop
lock
mov
mov
dec
dec
jnp
cmpsl
push
xchg
jne
pop
or
popa
mov
orl
xor
cmpsl
fcomps
pop
cld
jbe
mov
mov
mov
loope
push
xorb
xor
call
xchg
pop
test
mov
and
or
push
int3
je
loopne
rclb
lahf
loope
mov
insb
jne
inc
sub
pop
aad
pop
and
ss
cmpb
add
ja
cmp
inc
xor
or
and
bound
icebp
ret
lcall
loope
fstps
pop
leave
inc
inc
stc
push
mov
andl
scas
push
ret
add
das
mov
mov
lea
or
or
scas
sub
sub
popa
cmp
sbb
ficompl
mov
arpl
push
or
pop
or
mov
orb
cmc
inc
add
or
inc
lea
or
adc
cmpsl
xor
dec
push
popa
lods
vcmpsd
imull
popa
cwtl
add
in
mov
stos
mov
push
add
cwtl
xchg
stc
mov
jo
in
push
xor
add
loope
xchg
pop
cmpsl
or
int
scas
ljmp
or
add
pop
lock
je
movzwl
int
xchg
inc
inc
add
push
ja
pop
mov
pop
dec
scas
jge
enter
mov
and
push
jno
xor
mov
or
imulb
testl
pop
push
addl
and
adc
pop
sub
sub
iret
hlt
add
mov
cmp
pop
std
rol
or
ficomps
insl
pop
lock
lret
icebp
out
fisubl
lret
adc
out
or
add
and
pop
inc
pop
mov
ja
add
ja
in
jne
sub
sbb
pop
arpl
or
cmpl
mov
pop
push
xor
call
call
pop
mov
out
mov
pop
or
mov
lods
repnz
mov
rcrl
and
mov
mov
mov
inc
enter
scas
inc
imul
je
inc
pushf
inc
sbb
inc
cmpl
stos
or
shll
jmp
dec
xchg
and
inc
add
jl
bound
nop
mov
pop
mov
inc
daa
add
clc
imul
inc
jo
inc
add
pop
mov
leave
dec
xor
pushf
pop
lcall
ret
bnd
sbb
lret
inc
dec
dec
shrl
inc
mov
or
inc
nop
sbb
adc
pop
add
dec
inc
daa
rorb
inc
inc
imul
addr16
sub
test
inc
rolb
aaa
sbb
vmovntpd
mov
cwtd
or
call
dec
data16
push
push
shlb
push
nop
and
jmp
push
mov
mov
inc
push
cmc
roll
rol
imul
sti
sub
or
jmp
test
sbb
jmp
and
int3
mov
jg
mov
cmp
sbb
lahf
jmp
mov
add
and
cld
sbb
add
fstpl
fisttps
jno
push
insb
mov
adc
lods
dec
sub
add
pop
jmp
fwait
add
bound
mov
mov
dec
lahf
fstpt
sbb
push
push
push
push
mov
jle
push
imul
xchg
xor
mov
xchg
pop
sub
lock
or
cmpsb
jmp
int
daa
add
mov
inc
mov
inc
pop
cmpsl
mov
inc
lret
add
and
mov
outsb
test
bound
pop
mov
mov
mov
test
xor
xor
in
mov
cld
in
cmpsb
mov
adc
cmp
out
sahf
insl
test
cmp
out
cld
push
or
aaa
ss
stos
jmp
lea
in
dec
add
or
icebp
mov
pop
mov
jne
or
add
clc
sub
dec
sub
shlb
adc
nop
jne
movsl
divl
les
into
mov
mov
movsl
mov
stos
and
nop
xchg
mov
pop
aaa
push
mov
shrb
insb
xor
mov
nop
dec
inc
sub
or
dec
imul
mov
pop
aam
sbb
cmp
mov
mov
mov
cwtl
es
push
xor
mov
loope
jbe
jno
xor
aaa
push
aad
fstpl
pop
add
xor
add
sub
arpl
pusha
jns
adc
aad
movsl
cmp
mov
xchg
xlat
scas
mov
xlat
mov
mov
icebp
xor
mov
aam
in
adc
and
mov
xlat
inc
and
and
in
in
aad
xor
and
lds
xor
call
inc
cmp
test
inc
movsb
repnz
push
fldl2e
ja
xor
repz
mul
mov
inc
mov
nop
mov
movsl
pop
je
lret
fstpt
push
int3
es
xchg
push
and
movsb
mov
push
cmp
add
jecxz
aaa
leave
xchg
xchg
dec
in
fsubrs
outsb
or
frstor
inc
leave
push
aaa
aad
movsb
fwait
mov
and
cs
cld
mov
mov
mov
push
dec
mov
inc
cs
mov
mov
outsb
or
push
xchg
mov
in
xchg
mov
inc
je
mov
pushf
push
mov
sub
cmp
dec
ret
or
outsb
jl
jne
iret
dec
mov
push
iret
dec
mov
cltd
movsb
test
subl
add
nop
lods
lods
psllw
in
rol
adc
or
xchg
sub
hlt
adc
out
movsl
mov
sahf
rep
push
mov
test
daa
add
jnp
ss
sub
scas
or
div
mov
sahf
and
nop
popf
add
inc
inc
daa
pop
addb
clc
jo
popa
sbbl
and
push
movsl
mov
pop
xchg
or
outsl
inc
cld
pop
lea
or
pop
pop
roll
inc
mov
mov
xchg
sbbl
mov
or
jae
xor
dec
sbb
loop
stc
mov
test
jmp
lods
mov
inc
iret
cmpsl
xchg
fstpl
add
push
jg
mov
test
and
or
or
neg
rep
movsb
inc
loopne
ja
fcomps
inc
mov
xchg
testb
shlb
cltd
or
test
xor
aaa
movsb
in
lock
jecxz
lock
or
loop
inc
push
hlt
mov
dec
push
jne
loope
add
cmp
and
bound
inc
inc
sub
sarl
inc
pop
or
cmp
and
inc
hlt
repz
mov
jg
ljmp
add
push
push
dec
adc
push
and
and
out
jns
dec
push
pop
outsl
inc
or
jns
test
jbe
jle
dec
outsl
add
call
int3
in
lods
adc
and
dec
jne
pop
dec
in
mulb
xor
ffreep
dec
mov
lea
inc
out
mov
lea
lock
mov
cmp
add
cli
enter
push
inc
or
jg
pop
fildl
push
negl
ret
mov
lret
jnp
fmuls
pop
shr
dec
mov
mov
push
add
push
add
or
jb
jae
mov
pop
inc
ret
ja
or
xchg
lea
and
push
push
dec
or
sub
fsubs
sarl
sbb
xchg
push
addl
xchg
sarl
xchg
xor
stos
add
jmp
mov
sbb
xor
adc
jae
les
inc
sbb
pop
pop
inc
pushl
cld
mov
js
add
inc
adc
and
cmp
ja
push
cmp
pop
sbb
xor
and
shll
loope
xchg
pop
movsb
roll
push
cmp
lret
mov
cmp
add
xor
inc
cmp
iret
mov
xchg
adc
call
inc
fstpl
push
jno
and
jg
jo
loopne
pop
pusha
mov
dec
cld
xchg
and
mov
lock
mov
andl
or
stc
nop
in
fdivrs
fs
iret
pop
mov
cmp
scas
or
outsb
cmp
xchg
mov
dec
cmp
push
xchg
cmp
jb
push
cmp
mov
pop
or
fs
addb
movsb
xor
pop
loopne
subl
loop
dec
ret
mov
jo
jmp
or
mov
mov
dec
call
mov
test
mov
inc
or
out
and
jo
data16
jne
sbb
in
test
cltd
repnz
outsl
popa
aad
shl
push
mov
popa
outsl
loop
pop
dec
mov
outsl
xor
gs
jmp
outsl
mov
or
mov
dec
call
inc
outsb
cmp
dec
and
jne
mov
lea
pop
add
incl
es
add
pop
insb
in
dec
insb
mov
out
dec
scas
sub
in
int3
pop
xchg
inc
xchg
arpl
in
xorl
xchg
adc
rorb
push
mov
xor
mov
and
fcoms
sahf
add
movsb
pushf
loope
add
gs
cld
enter
fistl
jne
dec
push
call
push
sarb
adc
out
dec
add
sub
fidivrl
movsl
dec
dec
cmp
adc
jmp
pop
jg
add
jbe
pop
je
cmp
pop
sbb
xor
pop
xlat
mov
and
and
cmp
orb
push
mov
inc
jb
push
pop
jle
out
push
dec
in
mov
aam
and
add
sbb
or
test
or
push
mov
jecxz
data16
es
test
inc
add
mov
pop
and
mov
shlb
fstpt
mov
mov
enter
test
add
dec
lea
int3
arpl
push
push
adcb
ret
sbbl
jae,pn
jb
pop
add
and
jae
lea
add
add
jle
mov
xor
push
lock
orl
pop
and
push
test
loope
xor
std
movsl
sub
scas
negl
ljmp
push
push
je
std
pop
pop
fs
pop
clc
push
sub
lea
sub
adc
or
test
push
mov
pop
dec
mov
dec
in
push
push
pop
push
int
daa
add
fadd
mov
nop
xor
pop
pop
mov
push
dec
int3
ret
lock
fwait
negl
movw
mov
adc
movb
xor
cmpsl
das
xchg
pop
dec
inc
cmpsl
sbb
cmpl
push
mov
mov
out
push
aaa
call
imul
ret
dec
pop
scas
je
push
push
fidivrs
xorl
cmp
or
inc
aas
shlb
or
add
arpl
in
ja
push
add
andb
push
xor
cmp
or
rorb
add
nopl
into
sub
shll
adc
and
lds
adc
sub
add
pop
call
or
or
or
or
lock
push
add
xor
xor
and
push
xor
iret
incl
clc
sbb
dec
sbb
mov
decl
jne
xor
push
orb
jmp
push
incb
push
negb
or
pop
push
xchg
cmc
cmpsl
loop
and
hlt
add
inc
sub
push
aaa
lret
xorb
mov
mov
jne
mov
or
add
or
es
js
sub
mov
movl
pushf
loop
loope
js
rclb
out
push
mov
pop
idivb
add
cmp
fildl
add
dec
inc
inc
or
mov
cmp
pop
adc
fildll
dec
out
mov
les
or
xor
add
gs
dec
dec
loop
aam
xor
pop
sbb
lock
dec
xor
dec
mov
dec
into
xor
and
imull
adc
out
repz
adc
inc
or
mov
add
shll
and
jb
mov
jae
mov
add
mov
jecxz
mov
repnz
push
sbb
mov
pop
pop
push
sub
fistpl
xor
push
lock
jecxz
or
dec
bnd
sub
lea
daa
pop
mov
add
inc
push
xchg
fistl
in
movsb
cmp
shll
fidivl
das
inc
mov
xchg
das
push
push
jb
sbb
dec
xchg
es
add
push
add
jnp
incb
in
push
sbb
daa
fists
jg
xor
xor
add
jns
xlat
xor
or
ss
xor
xor
fcomip
or
mov
push
adc
adc
stc
daa
cmp
inc
jl
inc
jl
repz
test
cwtl
adc
jae
adc
push
xchg
lret
cmp
pop
addr16
fnclex
dec
sbb
xchg
dec
add
sub
lock
add
jmp
add
or
cmp
movb
or
leave
inc
sub
icebp
cli
rclb
push
mov
dec
ret
jne
lea
fistpll
sub
loope
lock
pop
lock
and
or
adc
lods
test
sbb
addb
es
es
and
push
pop
pop
test
inc
pavgw
add
dec
and
pop
push
adc
sub
pop
push
and
add
stos
sub
popf
sbb
cmp
jle
mov
dec
cmp
test
dec
inc
sub
shlb
hlt
jge
inc
push
sbb
ja
xor
sbb
and
pop
add
insl
hlt
xor
add
sbb
nop
add
insb
data16
push
sbb
std
inc
scas
adc
fcomi
aas
pop
mov
jmp
xlat
inc
xor
test
in
out
outsb
jno
dec
fcmovnbe
loopne
or
or
cmp
or
add
cmp
push
push
and
and
mov
shll
mov
jno
mov
mov
and
lock
cmp
dec
movsb
je
movl
dec
fsubr
sbb
mov
daa
imul
xor
lock
mov
add
jb
pusha
lods
and
or
push
movzbl
mov
jo
or
addb
inc
pushf
adc
pop
lea
sub
or
adc
xlat
push
mov
int3
out
sbb
rorb
add
enter
cmp
add
jb
mov
pop
xchg
sbb
add
ret
sub
call
push
dec
or
rolb
push
or
out
xor
or
lock
mull
out
mov
add
jmp
push
pop
push
push
inc
cmp
mov
shr
rcr
or
mov
repz
dec
mov
xchg
xchg
fs
mul
pop
jb
cmp
ja
jb
cmp
or
xor
and
jle
fwait
scas
adc
or
fisubrl
lret
iret
inc
inc
pop
ljmp
xchg
sbb
cs
sarl
jbe
mov
inc
adc
pop
sbb
ljmp
add
mov
addb
divl
cwtl
jbe
icebp
insl
or
xchg
or
inc
fisttpl
shll
sub
mov
cmpsl
arpl
push
cmc
jmp
fsubrl
sahf
call
sahf
stos
jo
xchg
dec
icebp
add
out
sub
add
and
xor
in
imul
mov
xor
cmp
xchg
push
mov
push
loopne
jecxz
xchg
sarb
into
jmp
js
add
insl
xorl
push
and
pop
hlt
jo
dec
pop
sbb
adc
push
dec
and
lea
inc
inc
shlb
jmp
or
adc
and
add
and
aas
fnsave
cmc
push
pop
loope
and
lret
jo
add
lret
fiaddl
jmp
inc
adc
iret
loope
jne
nop
inc
ret
add
cmp
inc
cmp
mov
xor
sahf
cs
xor
bound
ds
nop
jns
subb
mov
pop
dec
adcl
and
push
and
lea
mov
enter
pop
or
fmul
add
dec
inc
or
nop
ret
push
aam
enter
jnp
cmp
test
and
pop
outsb
cmp
in
rcr
aaa
sub
jb
pop
inc
lods
fdivs
lcall
int3
rorb
loopne
or
ret
jnp
mov
arpl
xorb
push
pop
je
mov
push
sahf
imul
add
push
mov
xor
imul
loop
add
sub
faddl
ljmp
lds
movsb
xchg
and
pusha
popa
inc
testl
ss
mov
jg
es
jo
cmpsb
out
adc
cmp
cmpsl
sti
fadds
ret
je
mov
outsl
mov
outsl
fsubr
push
fildl
notb
xlat
out
adc
int3
and
mov
in
cmp
pop
jo
or
mov
jmp
adc
ficompl
outsl
push
pusha
jae
sub
and
dec
mov
sbb
test
inc
mov
mov
adc
dec
fmul
fcom
and
push
adc
mov
pop
xlat
mov
or
iret
push
mov
mov
adc
mov
sub
or
fwait
addr16
cmp
jecxz
imul
push
ret
mov
jl
addr16
call
inc
jmp
rol
lds
mov
cmp
imul
mov
fnsave
aas
sbb
icebp
sub
cmp
jbe
movsb
mov
or
push
dec
rorb
or
mov
out
inc
lock
xchg
rolb
xor
pop
push
ds
jae
mov
xchg
push
adc
dec
cmpl
incl
pop
popf
push
fmull
sbb
inc
push
adc
sbb
outsl
dec
gs
cmp
jge
mov
xor
jae
shlb
push
mov
pop
test
xor
orb
add
inc
scas
loope
add
sub
push
sbb
mov
fwait
push
insl
gs
jb
adc
add
dec
psubd
push
sbb
pushf
xor
mov
inc
jge
les
jl
jns
and
cmpsb
sbb
jle
fcmovnu
addb
mov
pop
mov
out
lcall
sub
adc
orl
test
orb
or
call
adc
push
gs
pop
enter
pop
testb
inc
cmp
push
gs
sub
pop
cmp
or
sbb
enter
xchg
les
mov
lock
ja
ja
mov
outsb
movsl
stc
loopne
addr16
pop
mov
adc
loop
inc
and
push
loope
add
mov
ficoml
add
add
out
sarb
adc
and
and
or
xor
mov
push
fisubrl
jo
cmp
add
mov
shr
lea
lea
or
add
aas
pushf
sti
ret
out
or
and
jmp
popl
andb
inc
ret
inc
add
pop
das
ljmp
js
adc
enter
sbb
aam
add
adc
clc
fadds
fbld
dec
clc
mov
mov
sub
test
mov
jno
add
jno
push
sbb
pop
mov
loop
mov
push
adc
movsb
pop
push
outsb
rorl
pushf
shrl
das
imul
test
push
ds
push
jo
add
cwtl
or
sub
mov
push
push
loop
mov
in
fistpll
test
mov
popa
pextrw
es
sub
sbb
mov
fst
fistl
mov
sub
sub
test
pop
push
add
push
pop
mov
pop
shlb
aad
aas
scas
ds
es
jge
addb
add
cmp
ja
or
mov
scas
call
jno
sbb
data16
ret
add
fistpl
mov
add
sub
mov
sbb
or
cmp
rorb
mul
mov
push
fwait
push
xlat
mov
add
clc
movd
fisttpl
loopne
mov
jmp
pop
add
pop
lret
lcall
cmpsb
adc
adc
jl
lcall
clc
das
cmp
push
or
jnp
pop
clc
xor
add
mov
push
sbb
pop
cmp
call
cmc
mov
lods
adcb
jae
cmp
jge
cmp
ljmp
hlt
push
dec
push
insb
cs
lea
xchg
orb
jbe
xor
cmp
stos
or
push
cmp
mov
unpcklps
push
sub
cmc
dec
ljmp
jg
inc
inc
fsubr
das
mov
inc
jmp
fdivr
popf
pushl
loop
mov
pand
cwtl
ret
cmp
jo
add
pusha
loopne
sbb
cmp
mov
dec
or
xlat
inc
mov
push
push
nop
imul
fcomps
movsb
adc
cmpsb
mov
dec
and
or
add
jl
push
sbb
bound
mov
cmp
orb
add
das
push
jmp
mov
cs
push
iret
or
ja
xchg
lea
and
xchg
push
or
add
inc
pop
sub
adc
push
cmp
hlt
add
inc
or
je
ljmp
jl
into
andb
movsb
incb
iret
jbe
movsb
andl
jmp
mov
and
in
jbe
popf
add
scas
mov
and
pusha
cld
mov
das
cwtl
cmp
jle
sub
cmp
loope
sbb
xor
inc
jmp
dec
push
and
xchg
shrb
testl
out
fimuls
adc
sbb
adc
sbb
mov
xorl
jmp
adc
insl
pop
jge
mov
mov
add
jge
movsb
es
dec
jae
imul
sbb
enter
jmp
and
scas
shlb
xchg
shr
sbb
ficoms
bound
jmp
and
cmp
dec
inc
dec
cwtl
add
pop
aaa
inc
pop
pop
push
and
shl
or
stc
sub
cmp
mov
rol
jbe
sub
mov
dec
lret
stos
loopne
je
mov
cwtl
mov
test
nop
mov
inc
cmpsl
mov
dec
cmp
ja
inc
jbe
testl
add
mov
jecxz
fldl
pop
add
dec
dec
or
iret
sarl
cmp
popf
les
repnz
and
lea
addl
push
jg
cmc
jecxz
icebp
rcll
jmp
cmp
mov
icebp
sub
dec
add
dec
jbe
data16
loope
sti
ljmp
cmp
mov
cwtl
jge
add
mov
pop
push
sbb
out
fwait
clc
mov
mov
or
adc
jmp
lahf
add
add
add
out
ds
inc
xor
jne
and
fisubl
fsts
pushf
int
cmpsb
push
add
pop
fsubrp
lods
jmp
jge
add
mov
sbbl
sbb
mov
jb
or
and
jge
movsl
add
push
pop
mov
dec
inc
mov
mov
sub
mov
lea
and
and
or
jne
inc
pop
nop
inc
push
shll
mov
xchg
pop
inc
iret
push
or
mov
or
lods
push
pop
xchg
pop
and
pop
inc
testl
mov
jne
push
les
int
adc
dec
into
sbb
jle
faddl
jne
inc
or
cmp
roll
or
int3
cmc
xchg
pop
dec
xchg
nop
adc
push
and
pop
clc
cwtl
xchg
sub
push
xchg
test
push
pushf
push
push
lea
lcall
add
xchg
mov
push
aam
add
scas
ret
xor
cmp
jb
or
mov
or
shll
incl
cmpl
or
ss
data16
or
cmp
sub
sbb
inc
jge
test
jg
add
jno
cmpsb
aaa
loop
sub
mov
sub
aam
mov
pop
mov
add
or
shr
aas
or
push
jae
mov
bound
into
or
adc
inc
mov
mov
sbb
lcall
incl
fadd
loopne
shr
or
mov
sahf
adc
xor
jne
outsb
mov
adc
cs
mov
adc
loop
cmp
inc
xchg
dec
push
sub
sub
mov
xor
add
enter
aas
ljmp
jmp
or
andl
fldenv
and
mov
xchg
pop
mov
mov
mov
loope
jl
rcrb
jmp
xchg
mov
shr
or
daa
mov
jp
lret
into
jmp
lods
jle
movb
sarb
and
jae
jno
les
les
dec
and
inc
rcrl
xorb
lret
lds
jmp
sub
test
sbb
add
xor
and
inc
lods
mov
or
call
sub
mov
icebp
out
rcrl
fdivl
int
cmp
fstl
inc
mov
aam
test
jns
sub
jecxz
sarb
or
mov
or
sub
or
add
testb
push
push
xchg
shrb
sbb
sub
mov
enter
int3
xchg
mov
int
sbb
add
adc
inc
lret
test
xor
in
pop
in
ds
fadds
dec
push
aad
lea
ret
push
popa
jne
jmp
pusha
cs
fnstenv
aam
sbb
mov
sbbb
inc
sbb
pushf
mov
jb
dec
in
and
add
test
or
add
mov
mov
pop
imulb
es
sbb
sub
mov
add
in
mov
jbe
and
fwait
jecxz
sbb
mov
cmp
testl
rcr
push
jne
jg
sub
shlb
add
push
test
xchg
lea
orl
sbb
test
clc
pusha
aam
call
jmp
push
loop
jmp
sar
push
js
xor
lret
cmp
push
adc
out
iret
cli
pusha
stos
cmp
iret
sbb
dec
sub
adc
and
push
cli
and
mov
and
in
rclb
cs
or
add
push
push
cwtl
xchg
cmpsl
push
sbb
cmp
popf
in
pop
bound
loopne
sbb
jmp
gs
in
stc
pop
test
dec
jmp
in
lret
cld
add
mov
jne
pop
in
add
testl
mov
enter
cmp
ds
push
lea
add
jle
pop
mov
add
sar
mov
aas
or
add
loop
or
dec
adc
leave
sbb
mov
sahf
add
and
lods
pop
jge
mov
shr
cmc
lods
push
cltd
lods
loop
pop
jae
cmp
sbb
or
mov
push
inc
pushl
mov
jns
cmpsb
dec
jnp
mov
or
out
mov
cmp
out
inc
dec
outsb
and
mov
push
sub
xchg
add
inc
mov
mov
mov
pop
ret
add
sbb
push
add
fdivr
pop
sbb
adc
push
hlt
mov
andl
lock
cwtl
push
dec
ss
mov
adc
out
lret
add
mov
push
pusha
inc
mov
fsubs
inc
mov
push
mov
cmp
js
cmp
inc
inc
call
jmp
adc
sbb
cs
inc
outsb
mov
pop
cmp
cmpb
lea
pusha
xor
pop
lods
jnp
int
aas
mov
pusha
enter
and
push
inc
pop
mov
je
cmp
xchg
mov
jns
mov
pusha
cvtdq2ps
rcr
cmp
adc
mov
and
add
test
push
or
add
mov
mov
adc
jbe
push
cmp
test
jne
icebp
mov
pusha
xor
sarb
dec
sbb
or
mov
repz
push
jmp
icebp
and
cmc
push
es
rorb
or
push
pusha
dec
iret
test
lcall
and
pop
sbb
popf
popa
xchg
jb
call
mov
inc
mov
sbb
sbb
cmp
mov
jo
xchg
mov
rorb
mov
std
xchg
lret
out
jl
xor
fs
xor
lock
mov
cmp
jne
mov
and
movb
mov
push
and
adc
aad
gs
adc
rolb
and
loopne
fisttpll
jne
jl
mov
sub
cwtl
pusha
mov
sub
insb
pushl
jle
or
push
lea
or
pop
jbe
fs
test
in
pop
jns
adc
fiadds
push
in
or
sbbl
mov
mov
fcmovbe
pop
data16
test
imul
mov
sub
push
mov
daa
add
xor
push
lea
shrl
or
add
shlb
test
push
push
sub
xchg
jmp
push
mov
es
cmp
mov
lret
stos
loop
xchg
sbb
sub
add
adc
inc
mov
pop
mov
push
gs
adc
mov
xchg
aas
push
jae
ret
and
sbb
cmp
ret
sub
lahf
fstpl
insb
adc
sub
aad
cmp
xor
pop
popa
xchg
fidivrs
sub
rdtsc
cmpb
dec
xor
sbb
and
sbb
push
addr16
cmpsb
or
jmp
inc
loop
rcll
and
in
test
push
push
cwtl
mov
shl
inc
movsb
sub
pop
test
paddsw
add
cld
inc
mov
or
pop
pop
add
sbb
insb
fmull
popl
das
adc
mov
or
xchg
pop
push
out
and
aaa
int
int
scas
mov
pop
mov
sub
adc
data16
test
add
inc
lods
out
push
xor
jne
push
mov
mov
and
mov
pushf
push
xchg
pop
fcompl
inc
cli
mov
mov
sbb
jg
add
out
add
bound
test
loop
sbb
push
inc
add
xor
pop
mov
fisttpll
xor
or
hlt
mov
mov
cld
outsb
inc
jle
inc
mov
jmp
test
fdivrs
sbb
enter
jl
fcos
adc
and
or
clc
add
or
call
push
xor
push
lcall
add
mov
ds
ljmp
jb
inc
mov
mov
add
and
adc
enter
dec
sbb
mov
js
clc
pop
adc
push
cmp
les
icebp
xchg
xor
cmp
pop
add
inc
test
lret
xor
dec
or
lods
icebp
add
add
sub
jl
dec
js
enter
push
movsb
push
das
sub
pop
adc
scas
xchg
jg
jb
cmp
lcall
fcoms
lods
inc
mov
out
adc
sub
add
roll
push
cld
sub
mov
addr16
and
lcall
insl
pop
shl
mov
cmc
adc
icebp
les
add
pop
mov
and
sbb
loop
movsl
orl
jo
cmpsl
testl
jle
jnp
fsubs
lea
cmpl
or
push
decb
cmp
cmp
or
js
or
cwtl
push
jne
push
aas
out
int
xor
jo
mov
mov
jo
mov
fnstcw
mov
popa
pop
fdivs
lret
adc
insl
push
es
test
jne
or
jno
push
jnp
or
mov
jne
pop
push
pcmpeqw
xor
adc
out
sbb
cld
ror
or
addb
repnz
adc
fistpl
lea
ficoms
add
pop
xor
pushl
outsb
and
jmp
movsb
push
sub
enter
addb
add
int3
push
cmp
lea
add
icebp
imul
add
jnp
dec
jb
imul
dec
or
or
inc
or
dec
lret
xchg
sub
lock
imul
add
cmpb
pop
sub
int3
pop
sbb
jns
or
jne
jge
sahf
call
xor
sarl
inc
mov
aam
nop
sbb
stos
jp
lock
nop
dec
adc
loopne
mov
je
jae
mov
movsl
mov
jl
jmp
test
xchg
inc
test
inc
sub
adc
imul
sbb
pop
lds
in
xchg
cmp
lock
cwtl
je
adc
sbb
pop
add
mov
cmp
jne,pn
push
mov
rol
inc
mov
neg
outsb
dec
fcoml
les
sbb
or
movsb
mov
sub
mov
push
push
icebp
mov
fwait
xchg
add
loope
jmp
cwtl
les
jns
and
aaa
test
and
sub
adc
push
adc
fs
ret
orl
sbb
inc
jp
inc
cmp
roll
dec
out
sub
adc
xor
dec
sbb
inc
pop
stos
mov
add
push
adc
bound
stos
loop
mov
push
pop
sbb
add
push
hlt
push
or
loop
mov
jb
ljmp
cmp
inc
stos
sub
push
and
lahf
pop
adc
push
cltd
mov
add
cs
or
adc
inc
popa
clc
cmp
into
add
mov
adc
add
xor
in
andl
daa
push
xor
add
out
and
insb
mov
add
and
push
loopne
loop
jg
addl
add
repz
pop
dec
nop
je
call
push
ret
jo
les
lret
xchg
lods
mov
dec
cmp
movsl
loopew
jge
pushf
aaa
sub
inc
pop
insb
jmp
xchg
fcompl
push
xor
pop
lret
in
lret
insb
xchg
push
cwtl
fsubr
sub
xor
push
daa
sub
or
js
cmp
mov
mov
jp
inc
pop
ljmp
es
cmp
lock
imulb
xorb
mov
orl
inc
xor
test
icebp
movsb
mov
test
ja
cwtl
pmaxub
push
mov
cmp
nop
daa
sti
adc
cmpsb
mov
xor
dec
lods
loopne
jge
jne
mov
sbbl
dec
jne
stos
pusha
stc
gs
sub
jnp
je
movl
or
jle
add
dec
test
aaa
mov
je
or
mov
arpl
enter
jns
mov
cltd
and
les
inc
hlt
jg
cmp
mov
lods
push
int3
outsl
addr16
fs
xchg
movsb
loop
push
ret
in
sub
rcll
sbb
orb
leave
je
das
test
in
test
lds
pop
sbb
inc
dec
and
push
jnp
or
xor
push
or
jb
jb
adc
ss
and
and
sub
leave
leave
leave
xor
cmp
dec
sarb
and
xchg
xchg
xchg
fildl
dec
push
in
adcb
in
in
fs
in
je
jl
rcrb
test
mov
dec
cwtl
pushf
mov
movsb
test
xchg
dec
es
rol
dec
xor
fs
sarb
adc
dec
es
in
in
dec
es
fs
hlt
xchg
add
and
or
es
ficoml
adc
fs
dec
and
fs
dec
es
xor
dec
es
cmp
gs
inc
es
inc
dec
dec
mov
dec
xor
pop
adc
xor
pop
pusha
sbb
mov
jg
push
cmpsb
dec
shlb
popl
cs
and
dec
cs
pop
sub
cld
push
mov
shrl
xchg
xchg
mov
jb
adc
nop
adc
pop
cs
and
and
and
cmp
cmp
mov
cs
inc
les
adc
push
sar
dec
enter
pop
dec
pop
or
xchg
adc
push
test
js
ret
lcall
icebp
or
or
movsb
xor
mov
loopne
mov
sahf
or
and
test
xor
pop
add
daa
lods
test
fadds
fiadds
push
inc
add
dec
pop
idivb
test
and
add
popf
inc
cs
or
arpl
out
xchg
and
fdiv
shll
dec
xor
adc
in
mov
or
shr
xchg
fcompl
in
shr
and
jo
and
and
aam
js
in
test
adc
enter
adc
add
test
hlt
mov
xor
ss
or
push
mov
rol
sbb
clc
incb
mov
std
or
jmp
inc
and
mov
fcmovnu
dec
mov
aaa
jecxz
sbb
xor
or
jmp
jp
adcb
loopne
movhps
cli
xor
sub
aaa
enter
jge
je
pop
loope
mov
add
fstps
aas
pusha
mov
pusha
loope
pop
sub
jmp
mov
lret
pop
fstp
ds
push
xchg
inc
pusha
fldl
cmp
sub
push
aaa
mov
xor
pusha
jnp
testb
in
mov
or
add
mov
out
test
fisttps
xchg
sub
mov
mov
das
sub
add
jne
orl
and
or
jle
outsb
fs
testl
inc
or
adc
imul
push
and
or
push
or
popf
xor
fstps
jmp
fisttpll
xorb
ljmp
hlt
adc
mov
add
jbe
in
pop
sub
jmp
adc
push
push
imul
test
or
cmp
mov
jge
push
inc
call
sbb
push
aaa
sbb
out
sbb
es
xchg
dec
jmp
sub
fstpl
sub
jmp
sub
outsb
das
pop
jb
or
jmp
push
shrb
into
xor
leave
xor
scas
mov
mov
cmpsl
adc
rorl
mov
and
and
adc
les
roll
push
mov
sbb
cmp
sarb
repz
jmp
addb
mov
xchg
scas
add
enter
imul
xchg
push
jmp
dec
mov
cwtl
clc
mov
in
test
mov
dec
cmp
sbb
nop
loopne
ss
jle
push
or
jmp
pop
cs
icebp
daa
in
orb
push
pop
add
or
xchg
mov
daa
cs
or
mov
sbb
aam
adc
jg
aaa
int3
dec
movsl
sbb
and
cmp
lret
mov
jmp
adc
repnz
lods
dec
ret
add
inc
pushf
mov
add
mov
ret
pop
jno
pushf
clc
cmp
je
mov
aaa
push
outsb
sbb
pop
imul
add
or
pop
or
sbb
sbb
hlt
mov
cltd
and
cmp
inc
sub
ds
pop
aaa
push
cmp
or
pop
mov
xchg
mov
pop
xor
jmp
jbe
jp
jno
leave
dec
inc
divb
and
lock
lcall
xchg
add
testl
jo
sub
adc
adc
xor
mov
mov
fmull
lock
imul
add
aas
fmul
adc
pushl
dec
or
lods
add
and
inc
loopne
ja
push
das
adc
xchg
popf
inc
in
popf
cltd
xlat
mov
mov
fs
xor
add
mov
cmp
inc
and
add
push
push
andl
jo
mov
loopne
jecxz
into
jmp
cld
in
add
cs
sub
or
add
jp
add
shufps
mov
push
dec
lret
lock
or
mov
arpl
sbb
incl
add
push
mov
dec
fsubs
into
pop
mov
jo
mov
sbb
mov
test
mov
sub
enter
aam
dec
out
fld
fucomp
pop
fnstcw
pop
out
mov
dec
and
xor
test
pushf
push
xor
and
mov
test
pushf
ficompl
push
or
dec
shl
lret
rorb
push
or
push
out
jmp
loop
mov
push
pop
je
mov
or
push
and
ficoml
es
sub
or
mov
push
push
push
movsb
loope
imul
cld
mov
enter
jnp
fnstsw
movswl
lret
sbb
loop
clc
or
cmpsb
inc
fstps
sub
sub
not
dec
xor
cmpl
mov
inc
jl
cwtl
or
sub
sbbb
fwait
test
fsubs
loopne
ficompl
fwait
sbb
adc
jo
pop
mov
fdivp
jle
pop
cwtl
jb
movsb
fldpi
xor
adc
rcl
mov
push
je
sbb
mov
ss
fistl
adc
mov
cmp
or
xor
or
xchg
out
jmp
and
and
loopne
insl
mov
push
jg
xchg
sub
and
mov
test
mov
dec
lds
in
jbe
jo
dec
inc
movsb
stos
push
pop
inc
js
test
lock
mov
nop
es
mov
inc
sub
mov
sahf
adc
push
ja
inc
mov
test
sub
adc
mov
pushf
xlat
int3
pop
inc
add
in
inc
or
sub
lock
add
jo
jmp
lods
xchg
je
or
aam
mov
push
push
dec
push
pop
push
sti
xchg
out
xchg
rcr
ret
push
and
cmp
stos
popa
aas
mov
or
push
or
jle
or
or
add
loope
push
or
or
int
add
or
jge
add
pop
std
cmp
into
xchg
jmp
or
inc
cltd
mov
push
test
push
or
xchg
jle
pop
outsb
add
aas
cld
mov
xor
sti
add
icebp
inc
push
and
daa
mul
pop
test
loopne
fdivs
jl
insb
jecxz
jp
push
in
lock
stos
cli
and
jbe
stos
pop
pop
add
push
inc
xor
sub
or
jle
inc
cmp
mov
add
inc
pop
add
stos
andb
aas
es
ret
dec
or
inc
lea
icebp
xchg
inc
push
pop
sub
inc
shrl
mov
xorb
push
jg
jnp
pop
sub
call
loop
rolb
cmpl
add
outsb
out
pop
pop
pop
and
mov
out
mov
inc
fistl
adc
iret
jbe,pt
dec
imul
mov
add
mov
cmp
sbb
and
clc
sbb
popf
dec
call
jne
shrl
bound
pop
das
push
jae
and
inc
rolb
mov
sahf
jns
or
adc
lock
mov
mov
sqrtps
scas
pop
jge
lea
sub
and
jge
je
inc
in
xchg
xor
rcl
mov
pop
or
cmpb
or
mov
xchg
push
inc
aam
push
or
movsl
cmp
mov
rolb
rcrl
iret
fmul
shl
sub
and
push
fdiv
jp
lea
sub
or
mov
and
push
ds
ret
cmp
scas
and
aam
out
inc
rorl
mov
inc
dec
or
inc
pop
leave
adc
incb
sub
mov
sbb
mov
inc
ret
or
jns
jb
pop
push
pop
dec
lea
mov
movsb
bound
faddl
jge
or
sbb
test
popa
lods
sub
push
mov
into
loopne
xchg
push
rcrl
dec
aaa
icebp
cmp
cmp
push
cli
push
add
cmp
pop
push
push
jb
arpl
push
incb
enter
pop
mov
cmp
and
jo
ss
hlt
push
arpl
sub
cmp
inc
mov
fstpl
movsb
jcxz
mov
adc
cmp
arpl
ss
shll
stos
rolb
sbb
pop
xchg
add
je
mov
gs
into
pop
add
imul
lea
out
and
inc
mov
jge
mov
mov
adc
xchg
shl
xor
push
add
pop
jle
or
fildl
pop
lock
mov
push
push
adc
push
lret
clc
pop
push
lock
and
jo
mov
adc
push
mov
push
dec
push
adc
push
add
and
inc
sub
dec
add
in
pop
dec
je
or
or
inc
pop
adc
hlt
lcall
rolb
dec
inc
cwtl
pop
mov
lahf
dec
aaa
adc
call
xchg
add
jb
push
push
outsl
mov
js
inc
mov
mov
lea
inc
outsb
repz
add
test
add
pop
mov
sub
mov
cmp
insb
inc
imul
sahf
cs
or
ss
cmp
je
or
incl
pxor
xor
mov
push
mov
cmp
pop
jne
add
incb
dec
mov
inc
inc
mov
xchg
imul
call
and
fistpll
enter
arpl
sub
or
sub
sbb
inc
sbb
mov
rorb
mov
rorl
xchg
es
les
aam
add
popf
pop
fcmovu
jge
add
adc
jno
adc
dec
in
test
jle
testb
sub
xor
fadds
loopne
jne
xlat
mov
or
jbe
or
add
lds
cmp
cmp
xor
push
pop
sbb
out
sbb
rorb
xor
adc
sub
js
add
mov
popf
and
aas
sub
or
pop
add
xchg
rorb
jle
or
cld
mov
inc
or
pop
push
cli
sbb
add
add
imul
add
fbld
jmp
sub
add
cmp
ljmp
hlt
and
push
push
je
das
mov
fadd
enter
inc
add
adc
push
inc
push
mov
add
aas
and
add
enter
into
xchg
mov
xor
mov
inc
andl
push
jo
push
mov
add
cs
test
push
mov
xor
sbb
pusha
sbb
iret
test
daa
iret
ret
jmp
and
push
xchg
xchg
sub
adc
mov
xchg
push
addb
xor
and
push
sbb
aam
push
test
and
push
jmp
xorb
push
jne
push
clc
xchg
pop
xchg
and
push
fadd
dec
xor
xor
xchg
les
dec
push
mov
fcoml
in
js
and
movb
fdivrs
imul
adc
push
or
add
dec
ficoms
cld
push
and
movsb
jae
push
rcll
enter
push
insl
test
incb
adc
js
mov
dec
push
outsl
or
xchg
adc
or
sub
jbe
sub
test
sbbb
add
mov
fucom
or
add
in
push
js
popf
popa
xlat
ljmp
leave
and
add
insb
movb
fists
ficomps
enter
mov
cwtl
js
popf
neg
sbb
mov
stos
cmpsb
and
das
mov
icebp
adc
jg
ret
add
shll
es
xor
xor
sub
cli
in
call
mov
mov
jb
dec
adc
mov
packssdw
or
mov
shlb
sub
or
push
push
hlt
nop
adc
mov
sub
adc
mov
call
clc
sub
sbb
pushf
pop
xchg
rol
fsubrs
xor
xor
dec
test
pop
fs
pop
ljmp
lods
enter
inc
pop
pushf
dec
inc
es
cmp
mov
scas
sbb
clc
cwtl
xor
pop
data16
jmp
in
inc
and
xor
out
or
into
in
cld
sub
push
or
rorl
inc
call
insb
dec
sbb
xor
adc
add
adc
xor
jo
imul
js
mov
push
and
sub
ja
in
sbb
js
jg
xchg
fidivrl
xor
jmp
mov
sub
fimull
jl
loope
adc
cmp
fs
xchg
sub
add
mov
jg
and
lock
sarl
push
lea
xlat
jg
mov
jb
lods
dec
dec
inc
dec
pop
or
test
cmpb
rcrb
add
and
jnp
push
lods
ja
fldcw
dec
adc
loope
mov
icebp
rcrl
xlat
fsts
add
shufps
cmp
or
jp
fimull
xor
xor
sbb
jle
in
idivb
cmp
push
sbb
mov
push
imul
push
inc
sub
add
dec
or
xchg
call
iret
cs
xchg
inc
or
or
inc
cli
ret
aaa
push
lods
mov
add
sbb
mov
adc
pop
push
xchg
fiaddl
mov
adc
pop
repnz
je
aad
mov
jbe
jl
test
add
rcrl
mov
loopne
mov
addb
and
and
sbb
sbb
jmp
sbbl
fs
push
divb
push
cmp
push
push
xchg
inc
out
sub
sub
add
test
xor
enter
push
pop
lods
insb
lods
push
dec
push
mov
dec
out
sbb
jl
aaa
loop
sub
inc
or
and
push
add
popf
jmp
push
pop
je
lea
inc
nop
fstps
sbb
mov
or
pop
data16
inc
fwait
repnz
popa
je
bound
fwait
push
inc
je
dec
sbb
xchg
cld
xorb
jge
pop
adc
adc
popf
sbb
je
adc
movsb
adc
push
inc
or
push
inc
das
mov
popa
imul
sti
aaa
or
mov
inc
shl
insb
mov
mov
ret
arpl
test
mov
mov
inc
test
imul
mov
xchg
lret
ds
push
adc
test
cmpb
jne
int3
fidivs
sub
nop
fisubs
sarl
test
hlt
adc
clc
insb
ja
adc
push
popf
pop
push
aaa
cmpsb
loopnew
cmp
add
or
sbb
je
mov
hlt
ja
in
inc
push
popa
push
adc
or
incl
ljmp
fdivrl
sub
mov
cmc
add
xchg
add
push
loope
mov
push
xor
roll
push
mov
adc
xor
push
lret
sbb
sub
and
push
data16
addb
jg
cs
std
ret
push
push
pop
mov
inc
ljmp
sub
fidivrs
dec
insl
outsb
dec
hlt
or
cmp
and
or
mov
mov
mov
pop
inc
mov
rol
xchg
adc
jmp
insl
imul
iret
fwait
xchg
xor
mov
adc
clc
cmpl
pop
inc
mov
or
push
sbb
dec
push
mov
xchg
cmpb
jmp
orb
or
mov
pop
dec
jecxz
add
shrb
dec
add
cmp
enter
loope,pn
test
jb
adc
test
popaw
andb
mov
sbb
dec
je
dec
push
push
or
hlt
jmp
or
jmp
mov
ret
lcall
test
and
outsb
arpl
sbb
add
add
rcrl
and
sahf
andb
or
int3
or
imul
das
xor
or
inc
cmp
pop
add
mov
mov
das
adc
cmp
dec
mov
pop
cmp
je
mov
mov
fstpt
insb
subl
push
ss
or
dec
sbb
mov
pop
xor
lcall
push
adc
fiaddl
imul
nop
lcall
cs
cmpl
arpl
or
cmpl
add
xchg
or
pop
dec
add
xor
inc
add
cmp
inc
jecxz
add
call
test
dec
add
sbb
lret
and
jmp
cmpb
out
pop
add
or
mov
mov
iret
mov
imul
pushf
push
push
adc
test
and
add
notb
jl
mov
lock
cmp
mov
movsl
and
cmp
leave
movsl
inc
jbe
add
jl
in
dec
lods
adc
sbb
cmp
or
dec
pop
adc
lcall
sti
and
push
sbb
dec
fidivrs
into
sahf
adc
adc
sub
xor
inc
sub
into
lret
clc
xorb
dec
movsb
dec
and
nop
dec
pop
movsb
fxch
shlb
outsb
lcall
xchg
mov
gs
and
add
mov
cmp
cli
adc
push
ficomps
adc
loope
pusha
sub
adc
clc
mov
add
loop
pop
add
mov
add
cli
jne
cmpsl
push
movsb
dec
push
sbb
cmpsb
or
mov
push
or
pop
lea
hlt
je
data16
sub
popf
daa
dec
mov
push
ja
mov
insb
subl
sub
sahf
xor
popa
xchg
adcb
inc
sbb
je
repnz
mov
fwait
push
test
loope
icebp
cmpsb
mov
pop
dec
pusha
je
jns
lea
repnz
sub
mov
popa
cwtl
ret
xchg
test
nop
addl
lret
pop
lret
xchg
insb
xchg
test
dec
jo
cmp
and
mov
inc
cltd
sub
or
add
push
add
inc
sbb
cmp
stos
test
or
ret
nop
cmp
stos
jo
test
emms
and
sbb
inc
sub
fildl
pop
cli
add
movsl
add
loope
jp
pop
sub
mov
fldl
ljmp
inc
daa
outsl
das
pushf
outsl
inc
xchg
icebp
add
fimuls
adc
in
int
inc
lcall
dec
mov
or
dec
popa
sub
mov
adc
xchg
lods
push
pusha
insl
popf
mov
scas
stos
and
add
aam
sbb
add
pop
je
add
xchg
and
pop
int3
or
icebp
add
inc
sbb
movsb
cmc
jbe
dec
cmp
mov
hlt
add
jno
loopne
mov
negb
add
jecxz
pop
call
and
jmp
out
cmpl
jmp
pusha
lea
imul
into
xor
or
cmp
dec
adc
repnz
popf
mov
pop
jecxz
lock
mov
in
mov
cmp
jle
xchg
pop
mov
inc
and
push
lea
sbb
out
movsb
adc
cmpsb
sbb
bound
pop
mov
frstor
jmp
sbb
xor
cmpb
call
idiv
xor
add
rolb
fstl
push
popa
nopl
inc
cmp
inc
push
mov
add
push
imul
ficoml
orb
mov
aaa
jne
cmpsb
mov
cmp
aam
cmp
sub
jmp
rcrb
xchg
xor
adc
lret
imul
inc
dec
add
jbe
out
dec
fdivr
into
adc
rorb
push
cltd
or
adc
and
xor
clc
out
roll
leave
add
or
je
mov
iret
push
add
mov
or
and
je
sub
fs
sub
sbb
pop
bound
sbb
jne
enter
inc
dec
test
add
pushf
xchg
add
loopne
inc
aaa
add
adc
out
clc
add
add
xor
push
or
inc
xchg
add
or
xor
inc
inc
push
neg
neg
sbb
and
repz
sub
inc
sbb
add
sbb
mov
addl
adc
jae
push
inc
sbb
push
push
inc
and
fnstenv
nop
dec
sbb
adc
or
sbb
mov
jbe
adc
dec
jns
mov
push
push
pop
pop
pop
aam
loop
fisttpl
jae
or
jae
lods
rcl
ljmp
dec
and
shr
sub
jg
add
adc
push
idiv
and
jl
cmpsl
enter
cld
lock
je
cmc
bound
cmp
inc
add
aaa
icebp
fiadds
lret
inc
into
movsl
push
pop
pop
add
stos
shlb
lahf
push
test
in
adc
movsl
jo
xor
test
push
or
aad
loope
inc
xor
jbe
aas
xchg
pop
cli
addb
aam
push
aas
in
or
push
cmp
push
push
jge
mov
dec
inc
mov
outsb
out
nop
add
or
paddusb
mov
lret
mov
pop
ret
cmp
add
xchg
leave
gs
inc
jmp
das
ljmp
add
imulb
push
xchg
or
adc
sahf
cld
inc
ss
adc
push
nop
aaa
dec
sub
cmpsb
sti
add
add
addl
fstl
mov
mov
xlat
into
enter
pop
imul
cmp
add
xor
gs
clc
or
enter
xor
test
adc
xor
xlat
ret
push
orb
mov
mov
mov
sar
or
es
mov
je
std
mov
jl
out
push
cmp
ja
add
cmp
pop
dec
cli
out
ret
cmp
jne
shll
leave
hlt
adc
mov
or
and
pop
pop
je
and
cmp
xor
orb
sbb
shrb
push
and
push
mov
add
imul
or
fdivr
aas
cs
fisttps
push
movb
jmp
or
jne
call
and
cmp
dec
add
ret
es
xadd
mov
or
ret
movl
add
inc
aas
add
test
ficomps
mov
mov
push
adc
jne
xchg
cmpl
mov
aaa
add
adc
insb
jl
inc
jb
xchg
out
fstpl
jmp
andb
sbb
pop
cs
push
movsb
jnp
je
mov
sbb
push
fwait
mov
mov
push
imul
aas
mov
shr
shr
xchg
out
adc
rorb
or
lcall
movswl
mov
lods
ja
neg
push
es
ljmp
mov
cmp
mov
call
inc
cwtl
inc
xorl
sbb
mov
add
jmp
addr16
or
cwtl
mov
push
or
jb
jl
mov
or
dec
jle
repnz
in
inc
xor
adc
mov
mov
mov
and
and
lea
lods
jb
scas
inc
xor
cs
push
rcll
into
sahf
cmpb
repnz
addr16
mov
stos
loopne
xor
and
leave
out
inc
testl
push
jnp
lods
fs
inc
push
xor
cli
mov
cmp
mov
and
lea
rolb
adc
sahf
inc
mov
sub
push
les
dec
or
xor
or
dec
or
xorb
movsb
xor
inc
adc
cmp
lods
sarl
repnz
sub
sub
xchg
mov
xor
pushf
push
mov
jl
lods
fwait
cmpsb
mov
rol
add
jae
cmp
add
cmp
bound
shll
mov
add
shr
or
and
addr16
or
sbb
push
shrb
jg
or
pushl
mov
mov
mov
jbe
int3
shrl
loope
shr
or
mov
jp
or
dec
mov
dec
dec
lret
pushf
jp
jnp
movsb
cmpsl
cmc
cmp
and
dec
in
repnz
add
xchg
cli
cli
inc
cli
div
rol
or
ret
pushf
jbe
test
push
movsb
cmpsl
and
fcom
fiaddl
test
sbb
mulb
cli
adc
push
sbbl
sub
dec
push
mov
pop
dec
fcoml
xor
and
and
pop
scas
push
mov
insb
lret
out
je
enter
mov
lock
inc
mov
stos
fidivs
or
pushw
sbb
loop
dec
inc
sar
out
jge
shl
jo
out
enter
pop
mov
mov
lret
dec
in
aam
imul
mulb
ss
shlb
adc
xchg
fdivrs
aam
int3
or
jbe
dec
sub
pop
cmpsl
or
mov
sbb
adc
cmpsb
xor
adc
test
fmull
or
mov
xchg
lret
sbb
fcmovu
mov
mov
insl
test
dec
movl
jg
add
add
add
xchg
add
idiv
adc
xchg
adc
jg
mov
dec
and
dec
gs
lock
out
or
add
enter
pop
jge
dec
inc
lock
or
cmp
jne
sub
add
mov
out
loopne
sbb
mov
pushf
pusha
mov
pusha
add
popa
mov
push
sbb
sub
aas
and
lock
sbb
movb
jmp
xor
add
pop
outsb
call
xchg
sub
dec
cltd
and
or
mov
shl
rorb
shrl
cli
pop
xchg
pop
adc
mov
xchg
fcoms
xor
fiadds
fsubrp
jle
inc
imul
jmp
xlat
pop
je
loopne
call
mov
or
pop
add
and
mov
push
in
pusha
insl
adc
fisubs
out
pop
sti
cmpsb
fwait
aad
add
mov
pop
orl
inc
les
enter
cli
into
or
movsb
or
pop
jb
mov
lahf
ljmp
aad
add
enter
sahf
mov
test
add
sub
test
mov
es
add
sarl
sbb
or
mov
inc
ljmp
jmp
add
push
std
jmp
add
inc
cmpb
or
add
dec
cmp
add
dec
add
add
fadds
add
inc
jp
push
call
jnp
dec
jp
jne
dec
mov
jb
int
addb
push
cmp
dec
push
loope
in
jbe
pusha
sub
cs
lret
or
rcll
jp
ret
adc
inc
or
mov
add
add
test
or
adc
stc
lret
xchg
push
mov
push
lods
push
xchg
adc
adc
or
repz
add
pop
push
movsl
es
jne
or
rorb
ret
sbb
adc
xor
test
mov
and
mov
xor
or
xchg
adc
inc
bound
sbb
sbb
inc
pop
mov
mov
pop
and
cmp
xor
into
pusha
sbb
sbb
inc
and
sub
and
pop
pop
adc
cmp
prefetch
lds
sahf
inc
ret
or
xor
addb
ror
and
mov
or
or
adc
and
push
pop
push
ja
push
or
or
mov
mov
or
xlat
or
push
pop
sub
jae
push
jo
xchg
adc
jne
and
sbb
fucomip
mov
shrl
clc
dec
jge
out
and
arpl
shrb
cmp
sbb
inc
add
cmc
add
nop
clc
mov
add
push
and
je
jnp
push
iret
enter
push
scas
adc
and
or
mov
xchg
orb
adc
xchg
rcl
or
add
add
stmxcsr
ds
pop
test
int
xor
adc
or
adc
xchg
into
mov
mov
sbb
and
sbb
repnz
push
inc
jg
into
into
test
mov
and
outsb
lds
pop
sub
push
pop
xor
aaa
nop
pop
sahf
pop
mov
aam
pop
stos
adc
shlb
or
sbb
stos
cmp
pop
add
adcl
lods
sub
loopne
pop
lcall
cmp
out
adc
push
into
enter
movsb
and
mov
into
mov
and
mov
jp,pn
and
cmpsb
leave
adc
sub
lock
roll
mov
fsub
movsb
lret
ljmp
mov
out
adc
cmp
pop
mov
mov
loop
sti
adc
mov
add
popa
sub
in
mov
add
add
clc
sbb
push
mov
lret
push
pop
jbe
mov
scas
jbe
jnp
push
sarl
xchg
in
hlt
lret
xor
jge
and
jns
je
fldenv
mov
cmp
js,pn
add
pop
fdiv
jle
push
sahf
add
sbb
mov
jno
sbb
stos
je
dec
sub
mov
outsb
cmp
je
mov
stos
test
repnz
mov
iret
adcb
cmp
jb
cmp
jbe
dec
sub
enter
jmp
push
mov
cs
loopne
mov
fisubrl
cmc
fldl
or
mov
cwtl
push
or
and
mov
test
stc
gs
jle
mov
adc
add
popa
test
pop
mov
push
es
aam
mov
pop
inc
adc
inc
punpckhdq
loopne
cmp
addb
pushl
aam
lds
push
and
push
push
mov
push
aaa
sbb
pop
and
test
ret
xor
mov
enter
xchg
notb
sbb
cmp
lret
xor
push
roll
cltd
dec
pop
or
jne
subb
rcll
test
ljmp
sub
cmp
cs
aam
jne
sbb
sub
fsubrs
mov
or
ret
cmp
adc
mov
add
scas
pop
push
outsb
daa
fsts
adc
sar
xchg
pop
fisubs
mov
pop
test
mov
mov
lds
pop
notl
dec
loope
cmpsl
dec
sub
adcb
dec
mov
in
sub
lahf
inc
ret
mov
loope
aaa
dec
adc
and
push
pop
mov
inc
orl
call
add
push
ret
pop
or
hlt
cmp
pushf
sbb
pushf
inc
sub
stos
dec
or
into
pop
mov
mov
cmpl
mov
mov
push
cmp
imul
in
mov
clc
cli
jno
outsl
pop
xchg
add
jg
iret
rcrb
mov
gs
nop
push
mov
loopne
mov
jnp
iret
cs
adc
pop
call
cmpsb
lock
lea
mov
movsl
enter
fldt
test
incb
add
adc
jae
loop
das
adc
mov
lea
jmp
dec
fs
movsb
fcomip
sub
adc
ss
inc
mov
jae
ja
and
xchg
aam
add
mov
adc
dec
sbb
jne
leave
inc
insl
push
test
push
iret
sub
dec
jae
xor
push
mov
cld
inc
mov
sub
add
daa
arpl
inc
ss
or
push
je
insb
sbb
hlt
decl
xor
je
jg
orl
aam
inc
pop
scas
adc
xchg
jnp
pop
test
jecxz
cmp
jbe
test
lock
adc
imul
mov
lret
pusha
pop
rorb
mov
jns
push
sbb
mov
in
repnz
mov
inc
jbe
lods
lea
pop
nopl
cmp
fcomps
fs
sub
daa
data16
adc
out
loopne
jge
pop
call
les
pop
xor
test
sbb
and
sahf
or
xor
dec
push
rcll
push
lods
and
loopne
cmp
loopne
dec
pushf
jmp
or
popa
mov
jmp
clc
outsb
leave
push
pusha
xor
enter
mov
pusha
or
adc
xor
mov
sub
pop
jmp
js
inc
adc
ret
clc
sub
mov
add
mov
dec
inc
cmpb
sar
xor
sbb
dec
pop
push
and
mov
mov
cwtl
pop
sub
je
push
ret
pop
rol
rorl
cmp
stos
es
rorb
adc
ret
cmpsl
loopne
sub
or
out
xor
in
add
cmp
xchg
lods
add
xorb
imul
test
push
inc
dec
scas
push
pushf
ret
sbb
fimuls
sahf
dec
xchg
push
add
pop
test
ror
int3
jmp
fadds
add
add
sbb
push
and
rcrl
sbb
insl
loop
push
loopne
jmp
pop
xchg
or
cmpsl
test
popa
fs
or
mov
in
les
adc
and
add
outsb
mov
insb
add
les
cmp
mov
jo
cld
adc
pushf
dec
cwtl
mov
xor
push
aaa
call
dec
lret
or
push
mov
jp
insl
dec
or
into
inc
mov
xor
jns
js
rclb
addl
shl
adc
dec
add
add
dec
es
lock
fwait
mov
repnz
lods
dec
add
sbb
pop
xor
mov
or
pop
outsb
insl
clc
pop
popf
dec
insl
and
popf
and
jne
shrb
call
push
dec
sar
fwait
add
push
aam
pop
pushf
enter
or
cmpsb
mov
add
mov
sub
adc
sbb
fisttps
xor
mov
xchg
std
data16
xor
inc
and
jg
sbb
push
xchg
jmp
pop
sbb
adc
in
adc
pop
adc
cli
adc
inc
xchg
cmpsb
test
adc
xchg
shlb
xchg
cs
push
jmp
arpl
imul
dec
pop
sub
fidivrl
fiaddl
ja
mov
jmp
jb
add
push
mov
jb
das
inc
imul
add
xchg
jge
cmp
sub
add
sub
jge
clc
push
jg
adc
mov
sbb
cmp
ja
fidivl
jge
aaa
pop
inc
pusha
lds
xlat
cwtl
xchg
pop
das
push
xchg
add
mov
daa
push
inc
jmp
sub
or
mov
repz
dec
test
sub
xchg
std
jg
adc
lock
or
ds
push
add
fldl
add
icebp
cmp
push
pop
pop
test
add
shlb
or
call
inc
int3
into
lock
fadds
sbb
dec
and
dec
mov
mov
lea
add
xor
sub
movsl
push
cmpsb
repnz
jmp
push
and
nop
and
jmp
push
insl
jne
jb
lea
or
lock
jp
test
js
or
sbb
sub
push
add
pop
fs
popf
or
test
sbb
in
sub
or
xlat
sub
fcoml
inc
loopne
pop
cmp
cmp
sbb
mov
lcall
xchg
fistpll
sbb
mov
sahf
adc
adc
jg
mov
jg
jae
xor
imul
cmp
bound
mov
adc
xchg
shrl
jp
fldl
mov
sti
pushl
jge
out
int
shr
sbb
xorl
mov
jmp
testl
rcrl
cmpsb
jo
mov
inc
xchg
cmp
popf
imul
push
and
and
inc
sbb
inc
lea
xor
cmp
mov
mov
inc
call
mov
pusha
jno
push
sbb
test
pop
shrb
mov
push
je
ret
pusha
mov
ret
bound
mov
mov
jl
mov
test
push
add
add
adcl
add
or
stc
sbb
mov
loopne
js
loop
es
sbb
xor
push
jmp
call
loopne
add
or
cmp
xor
push
push
add
adc
jle
or
pop
jg
insb
pop
inc
push
add
fs
pop
jl
mov
mov
sti
outsb
mov
xchg
rcrb
lods
push
or
adc
sbb
xchg
icebp
iret
loopne
inc
addl
adcb
sub
cwtl
fldcw
cld
or
inc
add
jo
stos
test
pusha
push
les
add
mov
mov
shl
aaa
loope
fsubs
insl
cmp
and
and
nop
adc
jnp
push
lods
inc
xchg
push
es
loope
mov
and
cwtl
ret
cmpl
dec
cmpsb
pop
adc
jne
jle
inc
or
sbb
push
sbb
dec
and
adc
cmp
shlb
mov
lock
das
adc
mov
add
test
push
cmpsb
jmp
and
pop
pop
push
jo
outsb
fcomps
add
mov
aam
rcr
rep
push
jle
cld
mov
push
pop
cmp
ret
movsb
push
scas
out
rcrb
fistl
lock
inc
or
sbb
repnz
mov
inc
xlat
in
mov
cmp
adc
push
or
dec
push
mov
and
mov
faddl
or
cmp
ds
dec
inc
pop
ja
pop
or
js
stc
repnz
and
add
das
insb
push
cmp
es
xchg
cmp
jbe
js
jle
pop
inc
jb
dec
mov
pop
je
and
cmp
pop
mov
pop
sarb
xor
dec
rorb
fisubl
ljmp
jmp
cmp
or
je
xchg
mov
push
mov
sbb
xor
rcrl
jmp
outsl
sub
mov
testb
xchg
imul
sbb
push
add
add
or
shrb
cmp
in
test
inc
pop
adc
adc
cmp
jg
cmp
je
dec
jne
push
xor
jno
mov
jo
push
or
sbb
sub
inc
xor
cli
add
je
adcl
push
sahf
or
push
les
mov
aaa
add
std
lds
enter
inc
test
inc
cs
arpl
and
mov
or
dec
addl
je
mov
xchg
jns
mov
or
in
xchg
loopew
inc
sbb
xor
lock
sub
and
mov
in
xchg
inc
mov
lods
jle
testl
loop
mov
loop
fstpl
cmp
lret
cmpsl
clc
push
lea
je
add
aaa
jl
xor
mov
add
fimuls
xchg
push
hlt
jle
cmpb
sub
or
imul
add
xchg
mov
push
xor
add
fcmovb
mov
sub
jb
arpl
xor
sbb
push
push
dec
sbb
pop
mov
stos
sub
and
jl
enter
adc
mov
ret
add
and
cltd
sbb
xor
pop
imul
das
or
adc
sbb
adc
shl
sbb
scas
leave
test
xchg
pushf
push
cmp
mov
and
mov
mov
xor
and
or
rcll
or
dec
sbb
lret
mov
sbb
fs
cs
lock
jle
sahf
mov
sti
jecxz
add
cmc
xor
inc
mov
cmp
jne
sbb
adc
call
push
pop
imul
cmp
sbb
jg
add
imul
mov
xchg
mov
leave
test
imul
sub
dec
add
push
jmp
mov
inc
lock
or
hlt
movsb
or
lock
out
nop
lea
dec
adc
fcomps
jbe
and
and
daa
fdivl
lea
sbb
nop
ret
add
dec
push
movsb
popa
fstpt
adc
orl
jg
jmp
adc
rorl
shrb
lret
and
es
add
adc
cmp
jo
mov
jb
or
cmpsl
push
mov
mul
inc
scas
gs
pushf
cmpsl
or
shlb
jg
pop
mov
jae
scas
sub
push
js
jno
and
imul
sub
inc
bound
rcl
and
mov
unpcklps
or
cmpsb
inc
shr
adc
and
es
lret
jo
test
push
adcl
mov
cmp
or
xor
sub
aas
out
pop
mov
mov
xlat
je
sbbl
es
mov
and
cmp
jb
testb
rcrb
add
cmp
cs
or
sub
jge
push
jmp
inc
push
mov
cwtl
and
jb
mov
push
cmp
sbb
mov
sub
pop
adc
daa
clc
push
push
or
or
push
cwtl
sub
mov
xchg
xchg
cmp
xor
push
movsl
mov
jne
daa
push
adc
pop
or
sub
and
dec
outsb
sbb
test
sahf
test
shlb
pop
es
jmp
jle
sbb
jle
push
inc
pop
pop
cltd
mov
iret
pop
jnp
or
sub
xchg
push
mov
mov
mov
mov
inc
sbb
or
int
or
add
adcl
jle
test
je
push
inc
mov
adc
and
sub
push
mov
add
sub
xor
jb
xor
jne
add
adc
add
add
cmc
mov
pop
sti
adc
xchg
lock
int
out
movsl
cltd
add
aaa
cmp
push
push
inc
stos
mov
outsb
adc
push
inc
shlb
fcmovu
mov
add
lcall
andb
je
pop
and
fld
fnstenv
fcomip
fildll
mov
sub
clc
jbe
pop
cmp
jmp
cwtl
mov
xor
aaa
and
add
pusha
loop
ret
sub
adc
enter
ficompl
adc
ret
fstps
adc
pop
push
or
mov
and
pusha
mov
mov
xchg
mov
xchg
nop
or
sub
aam
dec
in
sarl
jge
inc
jmp
xor
ret
jg
in
jb
movsb
fdivr
sub
push
cmpsb
jmp
dec
ss
outsb
daa
daa
cmp
fnstcw
lock
add
inc
dec
movsb
imul
repnz
insb
sti
scas
sub
jo
shl
test
sub
enter
fbstp
or
add
pusha
dec
xor
call
mov
in
jb
in
inc
lock
or
pushf
fmul
pusha
enter
cld
shlb
add
mov
fistpl
lds
inc
lods
xchg
sbb
ret
pop
jns
adc
add
cmpsb
sbb
dec
dec
dec
mov
xchg
roll
iret
mov
rcr
fwait
dec
dec
sbb
arpl
add
inc
lahf
call
fmuls
jbe
sbb
loopne
jno
add
fstl
test
fcomi
xor
andb
add
or
nop
shr
dec
or
sbb
push
cltd
ficoms
sub
out
jb
dec
mov
in
xchg
cmpsb
popa
rolb
in
inc
leave
les
stc
adc
mov
or
rcrb
adc
push
and
or
and
aad
cmc
lret
mov
pop
push
push
pop
dec
lcall
jle
cmp
faddl
sbb
loopne
in
rolb
ja
cmp
pop
dec
fisttpll
cmpb
je
xchg
push
xchg
pop
fcoms
sub
int3
loopne
in
and
mov
rorb
jb
cmpsb
call
or
aaa
rolb
les
jb
test
mov
imul
gs
shlb
pop
test
xchg
pop
adc
rcrl
insb
pop
fsubs
mov
cmp
outsb
xchg
push
jno
xchg
dec
repnz
dec
xor
insb
jo
js
xor
and
add
sbb
call
adc
xlat
loopne
cwtl
sub
and
mov
stos
inc
xchg
xor
inc
pop
pop
dec
or
push
mov
cmovnp
xchg
lods
dec
int
lret
inc
lea
mov
ret
mov
jno
and
mov
mov
xlat
in
sti
gs
and
scas
nop
xchg
inc
enter
aam
push
lock
mov
adc
cmp
inc
sbb
les
ret
sbb
sub
inc
sbb
ds
cli
int3
shrl
xlat
dec
sbb
push
pop
sub
out
jl
add
cmp
cwtl
fimuls
or
sbb
shl
xchg
in
aaa
xor
xor
adc
in
jnp
jo
pop
and
insb
jnp
ds
push
xchg
and
adc
cmpl
push
stc
subl
cmpl
xlat
inc
pusha
dec
or
aas
mov
cmp
ret
fidivl
push
lock
hlt
or
rcl
adc
enter
aam
call
inc
out
add
movsb
fstps
push
and
or
or
cmp
bnd
out
jnp
iret
sbb
subb
mov
sbb
dec
int3
mov
mov
jno
fdiv
jne
pop
push
loopne
fwait
test
sbb
jmp
fadds
enter
aam
out
or
xchg
jmp
movsb
lods
addb
xor
daa
ljmp
cwtl
loopne
pushf
les
push
ret
loopne
dec
add
and
in
jbe
or
or
adc
xchg
iret
loopne
les
in
adc
push
dec
inc
jl
adc
icebp
add
dec
dec
shlb
call
lahf
in
gs
adc
in
cwtl
mov
dec
das
adc
or
insb
or
in
lock
test
and
mov
dec
hlt
mov
xor
mov
ret
mov
popf
or
cmpsb
sbb
sbb
or
dec
popa
test
scas
add
orl
or
pushf
out
and
jp
out
pop
adc
add
outsb
or
inc
mov
std
cmp
push
out
mov
mov
out
in
adc
rcr
out
adc
lea
repz
inc
sbb
iret
add
mov
aad
leave
rolb
fwait
enter
rorb
loopne
ljmp
sub
dec
push
fcomip
inc
test
jg
movsl
sbb
inc
cli
mov
je
inc
daa
nop
push
subb
mov
or
sbb
lock
lea
add
in
pusha
shl
sbb
inc
xor
dec
fidivs
xlat
jns
pop
fcompl
xlat
in
xlat
cs
test
inc
repnz
imul
or
in
stc
icebp
mov
sub
test
xchg
cmp
mov
or
loopne
or
stc
loopne
repnz
sbb
adc
and
cltd
nop
aam
fsubrs
cs
shl
pop
push
sub
mov
push
adc
hlt
cwtl
bound
xor
add
dec
repz
fs
lods
inc
daa
mov
and
lods
stos
mov
movnti
loopne
fdivl
xor
inc
sub
test
mov
push
movsl
cmp
aas
xor
or
cmp
cmp
and
or
or
or
enter
lock
cmp
cmc
pop
enter
jb
xor
cmc
test
adc
mov
movsb
xchg
test
add
mov
cmc
mov
xor
or
sub
or
pop
or
cmp
das
mulb
movsb
or
inc
adc
imulb
mov
xor
fmuls
rcll
add
add
shlb
aaa
adc
mov
dec
push
out
testl
jecxz
pop
sub
sbb
ret
in
push
mov
negl
add
test
aas
faddl
dec
xor
insl
idiv
and
in
mov
fsubs
mov
dec
pushl
bound
mov
clc
mov
and
mov
shlb
adc
add
enter
push
cld
stc
test
mov
stc
push
jbe
fcmovbe
arpl
xchg
push
xor
mov
mov
add
pop
cmpsb
push
aam
test
add
push
pop
cmc
aam
enter
and
ret
adc
or
in
or
adc
fmuls
das
ret
xor
add
cli
fs
test
call
and
in
cli
sar
rorb
fsubs
adc
push
sbb
insl
sub
lds
adcb
adcl
loope
push
sti
test
pop
pop
jmp
ja
xlat
xchg
test
jno
sti
lock
gs
add
in
loopne
xor
add
stc
or
mov
push
pusha
sbb
mov
jns
and
xor
in
sub
xor
or
adc
test
or
or
and
xor
ljmp
adc
in
and
test
insb
bound
call
loopne
and
lock
daa
shll
icebp
fdivs
jge
cs
lock
jmp
fisubrl
call
push
cmpsl
ss
loopne
cwtl
mov
lock
icebp
fcoms
mov
fnsave
ret
add
cltd
push
insl
inc
jge
xchg
xchg
or
and
fisttps
sbb
addr16
pop
aam
jl
orb
adc
push
inc
add
add
mov
in
dec
lock
or
gs
mov
js
adc
xor
or
or
pop
push
or
fstps
adc
mov
mov
push
movl
jae
xor
push
popf
ss
adc
xor
xlat
ret
adc
cs
btr
fldenv
mov
lods
adc
adc
pusha
add
repz
inc
test
and
sub
inc
push
fistl
xchg
dec
in
or
les
pop
int3
pinsrw
in
dec
fwait
add
mov
cmpsb
ficompl
iret
enter
mov
mov
mov
push
add
mov
mov
sub
adc
test
pop
testl
mov
outsb
xor
movsb
fsubrl
sub
pop
add
push
arpl
lahf
inc
jmp
aad
xlat
add
adc
mov
popf
ficompl
rcr
aas
aam
cs
fsub
pop
push
push
cmp
mov
js
add
aad
add
add
sub
sbb
lahf
int3
in
dec
in
das
unpcklps
aam
or
or
fdivrs
mov
daa
push
popf
xchg
dec
movsb
add
or
xor
mov
push
cmp
jmp
xchg
dec
mov
in
cltd
icebp
fs
leave
aam
lcall
imul
nop
and
test
fcompl
hlt
jmp
insb
imul
adc
insb
mov
jo
jnp
les
test
sbb
pop
lret
enter
mov
mov
mov
aaa
inc
adc
sbb
jp
mov
and
sbb
int
push
and
push
or
movsb
fdivr
enter
shlb
clc
mov
shll
push
mov
out
lea
pushf
sbb
mov
or
call
jns
or
or
sub
imul
xchg
int3
into
inc
scas
test
stos
filds
fadd
inc
xchg
rcll
sbb
adcl
xchg
dec
ret
or
and
leave
inc
fimull
sub
repnz
add
adc
fcmovnbe
dec
mov
or
add
xchg
mov
sbb
or
movsb
shl
jecxz
ds
movsb
stos
adc
inc
cmp
jnp
mov
cmp
push
sub
subb
mov
pop
xchg
mov
sbb
pusha
jnp
fdivr
notb
dec
and
mov
inc
push
loope
jecxz
rcl
adc
pop
xchg
lods
sbb
test
pop
and
in
loopne
dec
fisttpl
repz
mov
movsl
jo
xchg
rolb
xchg
jno
xor
jmp
push
pop
push
add
push
in
test
cmp
jne
mov
adc
push
rclb
rcl
mov
mov
mov
lods
inc
out
or
adc
aaa
and
rolb
dec
jae
cmp
sti
or
aad
dec
scas
pusha
sub
sub
and
pop
mov
lret
mov
addl
test
push
xchg
dec
and
fcompl
adcl
inc
dec
and
lcall
outsl
xchg
test
adc
xor
push
or
call
rcrl
addr16
orb
cmp
lock
orb
test
xchg
xor
sahf
ljmp
and
xlat
lods
mov
cmpsb
jge
rclb
and
push
in
push
add
lock
loope
push
push
adc
xor
movsl
dec
push
sbb
add
dec
push
in
loopne
add
sub
jo
adcl
jne
dec
rorb
xchg
dec
lods
adc
in
rolb
in
ja
sbb
nop
outsb
adc
enter
add
xor
in
adcb
shlb
lods
test
adc
fiaddl
aad
shlb
testl
les
sub
shlb
sub
into
mov
in
sbb
aam
mov
daa
mov
dec
rorb
das
nop
and
and
cwtl
test
test
enter
arpl
les
sbb
cmp
divl
in
sbb
sbb
pop
fs
add
mov
pop
pop
mov
push
sarl
xor
mov
push
mov
inc
jl
pop
mov
enter
cs
push
insl
mov
mov
aad
sbb
push
test
aad
inc
pop
sbb
add
sbb
sub
inc
pop
fbstp
sbb
jne
xadd
add
mov
gs
inc
push
jne
mov
scas
or
insb
adc
aas
cmp
adc
sbb
ja
es
adcb
xchg
xchg
xchg
mov
roll
jns
add
and
sbb
adc
xor
push
sbb
dec
mov
das
mov
mov
lods
lods
test
dec
insl
dec
call
xor
rol
jbe
jle
jge
lahf
pop
insl
sbbl
sarb
and
in
js
popf
ret
or
das
gs
mov
nop
aas
in
scas
and
dec
mov
and
orb
add
call
mov
push
pop
xor
sbb
xor
inc
mov
inc
lea
cmpb
std
imul
add
inc
imul
sub
mov
sub
nop
mov
jl
in
fcmovu
lcall
xchg
push
and
std
pop
loopne
fsubs
and
and
loopne
call
push
mov
or
pop
loopne
imul
and
mov
jmp
dec
fidivl
loop
adc
test
push
and
mov
push
jb
mov
sarb
cmc
iret
sub
fsubl
push
and
mov
add
or
mov
call
pop
rcr
and
scas
push
sub
aaa
or
and
or
movsl
mov
jne
fadds
fdivr
sub
loopne
add
lock
addl
sbb
xorb
popa
mov
mov
xor
andb
outsl
and
or
cmp
mov
pop
and
mov
pop
mov
mov
mov
push
imul
ljmp
adc
insb
xor
cwtl
dec
movsb
mov
call
cmp
aam
enter
rclb
inc
jecxz
lods
xchg
jbe
cli
dec
dec
lea
adc
fs
push
insl
jo
lea
xchg
imul
adc
fs
fs
cmp
sbb
cltd
fs
dec
inc
cmp
orb
sub
xor
je
add
fdivr
test
add
sbb
aas
mov
or
scas
sbb
jp
mov
int
inc
enter
cmp
jnp
pop
movsb
adc
in
test
es
sub
or
adc
cld
jo
cltd
or
sub
push
enter
or
shlb
stos
aam
adc
scas
outsb
sub
cwtl
lcall
nop
pop
test
adc
xchg
mov
mov
or
jne
test
mov
aad
adc
sub
inc
pushf
add
pop
addb
fwait
xchg
pop
lods
add
mov
xor
sub
xchg
fnsave
xchg
xchg
dec
enter
pop
push
mov
jne
pushf
dec
test
popf
xchg
in
mov
lcall
out
cmp
pop
dec
sub
out
mov
xor
cmp
cmp
mov
sub
es
inc
or
enter
jl
dec
mov
ss
int3
ja
pop
int3
mov
rclb
cmp
adc
push
inc
scas
or
ret
add
pop
xor
leave
mov
adc
jb
fs
or
ja
les
scas
bound
xchg
pop
rolb
imul
insb
inc
fldl
pop
dec
jo
jmp
push
cmp
fs
fwait
xchg
sbb
lcall
adc
nop
insb
aad
xor
mov
sbb
scas
adcb
test
movsb
cmp
inc
xor
mov
test
jecxz
fdivr
mov
add
inc
xor
push
popa
addb
jns
mov
dec
xor
test
push
test
xor
test
movsb
mov
and
inc
test
and
orl
outsl
int3
jmp
mov
ret
push
xor
add
inc
xor
and
dec
jae
aam
sti
xor
push
test
adc
in
push
pop
add
cwtl
fldcw
and
xor
mov
in
pop
adc
gs
in
or
stos
add
inc
xor
and
rcrb
imul
enter
jo
mov
adc
test
sub
mov
xchg
leave
ret
mov
inc
test
xchg
adc
xor
push
data16
pop
dec
ret
dec
hlt
adc
mov
push
xor
movsl
rcrb
pusha
dec
jns
xchg
shrb
lods
imul
add
ss
test
push
dec
popf
xor
add
and
test
rolb
mov
dec
orb
cmpsl
bound
and
sbb
push
adcb
icebp
push
lods
adc
pusha
push
shll
shrb
icebp
mov
rclb
inc
popa
adc
xor
je
push
mov
mov
xchg
sbb
loopne
or
bound
test
or
stos
cmp
aam
pop
pop
inc
add
or
mov
in
cs
dec
xchg
mov
mov
fiaddl
bound
aam
push
lea
dec
mov
pop
add
jg
nop
add
scas
cwtl
mov
cmp
cmp
dec
sbb
jns
mov
outsb
mov
dec
dec
dec
dec
movd
and
fdivr
xchg
adc
mov
lret
adc
mov
jb
and
and
ss
and
xor
inc
orl
cmpsb
pop
repz
mov
sti
sub
cltd
por
ss
mov
xor
push
xchg
fs
push
movsb
sbb
js
sbb
nop
mov
nop
arpl
test
cmp
fwait
stos
ret
int3
adc
push
pushf
rorb
and
sbb
mov
outsb
aaa
mov
shrd
movsb
inc
ror
insl
xchg
xchg
pushf
pop
xchg
bswap
leave
leave
leave
leave
enter
xchg
xchg
fcmovne
test
lds
xchg
orb
jo
leave
add
aam
push
data16
push
sub
jnp
and
cld
xlat
pushf
pushf
pop
lds
mov
jo
stc
mov
lret
sbb
xchg
inc
adc
adc
inc
scas
mov
je
xchg
pop
sbb
xchg
mov
and
fnsave
xchg
jl
aam
mov
inc
jb
mov
mov
mov
pop
test
xchg
sub
scas
pop
cmpsl
or
jge
inc
es
lock
inc
dec
popa
adc
cmpl
or
enter
mov
rolb
rcl
xchg
lods
arpl
sbb
and
mov
or
cltd
pop
xlat
inc
add
ljmp
xchg
cmp
push
mov
test
movsb
mov
jmp
sbb
mov
xor
in
out
insb
rolb
xchg
push
pushf
mov
lds
or
jo
pushf
mov
lahf
in
repz
inc
cmp
dec
mov
les
out
mov
jge
add
add
mov
mov
sarb
and
inc
add
add
dec
mov
cmp
push
movsb
movsl
dec
cmp
dec
adc
cltd
fs
sbb
and
mov
pusha
imull
pop
xor
jecxz
aam
and
cmpl
dec
ss
xchg
jl
leave
pop
sub
push
and
jbe
or
xor
sub
sbb
xlat
adc
adcb
imul
ret
insl
and
dec
pop
mov
movsb
jecxz
bound
leave
xchg
push
loop
add
inc
mov
xor
stc
dec
aad
sub
inc
cs
invd
inc
sbb
outsl
fdivs
mov
stos
aam
shl
xor
adc
or
mov
stc
les
nop
loopne
cmpsb
std
shlb
dec
loopne
pop
sbb
movsb
add
es
dec
cltd
sub
imull
mov
sbb
fcomps
mov
test
add
xchg
sbb
xor
test
pushf
mov
mov
adc
adc
xchg
or
and
mov
sbb
and
stc
les
mov
mov
cmp
or
movsb
test
add
nop
inc
jl
dec
xor
mov
adc
xchg
xchg
xchg
ja
xchg
xchg
rol
mov
mov
aas
xchg
xor
or
mov
mov
inc
es
pushf
and
xlat
sub
movsb
ficompl
jo
add
ljmp
jmp
xchg
pop
adc
and
pop
lods
fs
push
add
xor
fisubl
dec
mov
adcb
inc
arpl
repz
sub
jno
adc
int
bnd
das
insb
mov
xlat
add
das
sbb
nop
add
leave
and
jmp
dec
pop
mov
enter
pop
mov
pop
or
jo
or
std
jo
sbb
push
neg
xor
mov
add
mov
pushf
xor
sbb
or
dec
mov
jbe
pop
or
push
mov
or
jb
mov
or
sub
repnz
dec
sub
push
test
ficompl
pop
jp
inc
adc
mov
sub
cmp
ret
sub
sbb
adc
xor
and
lods
jbe
dec
sbb
sub
in
adcb
push
popf
mov
mov
test
add
pushf
cld
icebp
out
xor
or
lds
nop
inc
iret
clc
icebp
dec
and
popa
mov
pop
xchg
fadds
lahf
test
mov
dec
pop
xor
enter
dec
adc
push
mov
push
sbb
pusha
sub
push
sub
add
repnz
mov
iret
out
fwait
call
sub
jae
xor
sub
loope
sub
jp,pn
pop
jno
lods
sub
cmp
mov
aaa
mov
add
and
adc
imul
sbb
jmp
aad
sbb
mov
faddl
mov
xchg
xchg
and
and
push
mov
test
lock
sbb
fidivl
xchg
adc
lcall
pop
dec
adc
and
xor
mov
sub
sub
cmp
insl
push
jne
movsb
aad
andb
xor
sub
or
mov
cmpl
cwtl
or
fistps
lods
and
mov
push
xchg
inc
sbbl
adc
add
jns
frstor
mov
mov
mov
outsb
jnp
or
and
pop
rep
imull
dec
add
sbb
and
push
leave
adc
sub
imul
and
aam
movsb
scas
aam
adc
adc
or
inc
sub
sbb
mov
add
xor
loopne
pop
and
pop
push
shll
add
push
sbb
pop
or
fcomp
imul
jg
or
push
jo
xor
sub
push
pop
mov
and
nop
outsl
ret
xor
std
xorl
and
pop
ret
inc
dec
ret
and
stos
enter
test
push
in
dec
mov
rclb
call
cli
mov
popf
mov
sub
mov
sbb
incb
bound
jmp
push
and
enter
dec
jnp
rclb
dec
ficoml
push
leave
rep
test
cwtl
enter
fldt
test
je
and
adc
ret
cmpsb
lret
sbb
test
xor
sti
mov
sub
xor
or
sbb
lret
shll
inc
gs
pusha
cmp
xor
cmp
mov
cmp
sbb
mov
and
inc
lods
bound
adc
mov
pop
adc
add
push
add
jo
pop
sub
add
incb
jbe
cmp
cmp
fcmove
xorb
xchg
bound
sbb
sbb
cltd
jbe
jno
xchg
adc
mov
pusha
outsb
push
pop
mov
adc
nop
inc
test
sbb
add
push
ret
pop
pusha
and
and
xlat
adc
popf
mov
movsb
fcomps
sub
ret
xor
mov
adc
test
mov
add
mov
mov
adc
or
pop
js
push
and
and
es
punpckhdq
mov
gs
pop
mov
add
ret
pop
inc
or
or
pop
dec
testl
sub
bound
test
aaa
insl
sub
mov
mov
lret
rcrb
adc
inc
add
jb
ja
xor
push
dec
cmp
sahf
shll
and
inc
in
lret
in
insl
cwtl
rcrb
dec
call
mov
mov
repnz
add
mov
dec
std
and
movsb
sti
movl
sbb
jmp
adc
inc
sbb
fstpt
sub
lahf
pop
nop
out
movsb
sub
xor
mov
fadds
shrb
out
movsb
inc
xchg
push
and
cmp
jne
test
dec
lea
movsb
movb
mov
sub
je
fcomp
aam
or
and
inc
and
dec
pop
pusha
cmp
je
xor
arpl
loope
cmp
adc
and
pop
xchg
je
push
or
clc
sub
icebp
push
mov
and
daa
jge
xchg
test
push
xchg
mov
push
push
mov
imul
test
fwait
out
repz
and
jo
jns
out
mov
out
out
add
sbb
push
jae
divb
loope
roll
sub
push
xchg
sahf
mov
out
and
aas
add
testb
mov
and
push
jg
rolb
clc
jnp
mov
add
adc
mov
outsl
jg
rcll
xchg
adc
or
cmp
rclb
cmpl
insl
dec
test
add
nop
add
into
pop
adc
test
and
push
test
mov
sub
add
daa
mov
sub
fdiv
aas
rdpmc
add
ja
pop
in
incl
sub
outsl
fwait
shlb
flds
mov
and
insb
outsl
arpl
imul
aam
gs
jb
sub
popa
arpl
mov
popa
jb
outsb
je
gs
das
add
sarb
push
insl
adc
mov
lcall
push
rolb
jb
js
je
jb
gs
cmp
or
outsl
add
add
add
add
jne
les
inc
and
jb
dec
fmuls
mov
add
add
aaa
jl
sbb
or
imull
push
cwtl
inc
xor
inc
push
add
mov
push
ss
fidivl
and
push
insl
addl
je
and
jae
out
imul
fisttpl
fs
cmpsw
mov
push
push
or
bound
jns
push
jne
imul
or
jbe
aas
fsubrp
imul
jp
outsl
or
mov
or
gs
fstpl
addr16
and
outsl
jmp
and
add
jne
int
lret
stos
insl
sub
push
imul
and
scas
ja
cmp
pop
fdivrl
push
data16
push
mov
outsb
dec
sub
xchg
ds
jp
sub
insb
adc
repz
push
sbb
xchg
jecxz
push
inc
arpl
or
inc
daa
dec
jbe
js,pn
sbb
fbstp
outsb
bound
xchg
aaa
adc
sbb
jo
arpl
mov
jo
push
xor
scas
push
lds
sbb
fbld
mov
filds
push
das
jb
mov
xchg
popa
ret
fidivrl
cs
leave
push
xor
xor
nop
andb
xorl
fidivrl
jg
loope
mov
popa
sub
shll
lahf
je
inc
lds
jg
dec
and
sub
iret
fbstp
cs
fbstp
jne
jbe
jb
push
push
data16
pop
inc
sbbb
jg
xlat
xchg
scas
pop
stos
bnd
das
roll
jae
pop
sbb
ljmp
push
jo
lahf
outsl
aas
arpl
sbb
iret
arpl
sbb
mov
xlat
popl
pop
and
aaa
insl
lret
sbb
jecxz
stos
fs
imul
test
pop
rcll
dec
fbld
psubb
popa
leave
xor
add
xchg
push
jmp
mov
pop
add
adc
pop
cltd
idivb
je
scas
cmp
mov
lea
jae
subb
pop
pop
jecxz
push
and
rcrb
dec
addr16
imul
add
add
js
and
enter
enter
sub
pop
mov
in
enter
sub
in
mov
and
jmp
sbb
jb
push
ljmp
and
xchg
and
fdivrs
jns
jp
fs
cmp
lcall
lock
add
add
jp
fwait
sbb
out
sub
push
push
mov
sbb
fcmovne
or
pop
ja
pop
mov
pop
mov
imul
arpl
fidivl
push
out
mov
rcrl
sbb
in
cmp
push
xor
jbe
negb
and
jns
add
push
dec
insb
xchg
das
das
and
adc
jbe
ja
or
dec
inc
and
push
sbb
or
dec
inc
jmp
stos
out
adc
je
dec
idivl
and
inc
mov
js
andl
mov
clc
adc
mov
daa
outsl
dec
xor
inc
mov
and
pop
pop
divl
iret
jns
out
out
pushf
fidivs
iret
and
ss
arpl
pop
js
cmp
push
and
outsl
xor
sub
pop
dec
mov
fwait
jbe
addr16
ds
imull
sbb
mov
clc
aaa
lods
mov
into
cmp
cmp
repz
sub
fs
dec
and
jns
mov
push
das
das
jns
push
dec
push
inc
aas
testb
insl
bound
dec
outsl
jbe
dec
arpl
popa
or
jo
sub
addr16
clc
mov
xor
insb
xchg
outsb
xchg
inc
jo
imul
popa
jb
jg
bound
inc
jae
fnstsw
popa
outsb
adc
xchg
into
mov
outsb
jns
jg
iret
fdivrl
addr16
popa
je
jb
xor
push
push
gs
sbb
into
fdecstp
jnp
outsl
outsb
and
jbe
pushf
jae
dec
inc
aas
add
jge
imul
or
mov
filds
fildll
push
push
mov
push
popa
insb
jne
inc
inc
mov
outsb
mov
adc
and
and
sub
ljmp
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
test
mov
dec
push
push
stos
push
pop
pop
pop
pop
mov
popa
sbb
jmp
fs
imul
jo
add
jbe
divb
jp
jl
jle
dec
adc
lcall
insb
adc
fs
pop
add
ret
mov
rorb
ljmp
lret
jno
icebp
repz
inc
mov
clc
ret
movsl
add
xorl
outsl
shrb
outsl
imul
xor
outsl
das
cmp
sarb
daa
push
add
jo
xor
popa
js
addl
test
dec
pop
sbb
out
shl
rol
sub
je
lods
rcrb
add
adc
add
cld
imul
add
and
push
pop
rolb
push
add
xor
pop
xor
and
add
pusha
push
mov
or
cmp
add
sbb
sahf
mov
xchg
push
xchg
test
add
orb
into
in
fnstenv
enter
lret
jb
les
int3
push
jo
add
lds
loopne
xchg
inc
add
imul
outsb
and
push
or
and
pop
pop
cmp
test
jns
ss
rorb
add
cmp
lea
mov
nop
xchg
xchg
xor
dec
cs
mov
mov
mov
pop
add
mov
scas
mov
pop
push
cmpsl
hlt
add
lods
push
pop
lods
mov
pop
scas
xlat
repnz
sbb
outsl
sbb
cmp
push
push
inc
fildll
rdtsc
ss
inc
pop
dec
dec
inc
dec
inc
sbb
or
push
nop
fs
je
cs
jae
hlt
jbe
dec
dec
bound
je
outsb
data16
xorb
dec
out
je
xor
push
rclb
jo
pop
lret
aad
jae
mov
outsl
js
push
inc
fdecstp
in
push
and
insl
jo
jo
and
fidivrs
xchg
shlb
aaa
insb
les
dec
imul
mov
outsl
lods
insl
cmp
dec
inc
jb
jns
out
imul
notb
mov
insb
and
mov
outsb
in
and
addr16
sarb
pusha
fsubrl
push
jbe
cld
mov
jmp
or
jb
and
push
xchg
pusha
inc
jbe
push
push
lahf
fs
insl
or
inc
ss
lods
jp
pusha
xchg
push
popl
loopne
cs
jp
cmp
push
andb
xchg
daa
mov
dec
adc
orl
popa
push
outsb
mov
insb
pop
pop
push
push
jae
or
es
pop
cmp
call
pop
hlt
clc
addr16
xor
ja
das
outsb
gs
mov
sbb
add
mov
inc
mov
adc
push
push
push
dec
testl
pop
scas
cltd
pusha
dec
push
lods
cmp
push
fisttps
inc
ret
lea
ds
adc
jle
jb
mov
imul
mov
cwtl
push
inc
adc
mov
xor
clc
gs
sbb
mov
or
subl
ljmp
insb
scas
mov
mov
pop
loope
aaa
daa
xchg
mov
popw
fstpt
dec
jnp
cmp
cmp
ds
je
repz
and
sub
inc
jl
ret
es
addr16
jle
dec
mov
add
add
cmp
sub
pop
or
sbb
adcl
das
push
jb
aaa
cmp
pop
and
and
push
mov
mov
xchg
pop
pop
and
aad
outsb
stos
addr16
push
jbe
rcr
sbbl
adc
xor
gs
lock
pop
imul
xchg
test
sahf
inc
jae
mov
pop
sub
popa
sub
and
jl
out
sub
repz
iret
cmp
xor
sbb
addr16
add
clc
lock
nop
out
lcall
push
mov
mov
lods
test
cwtl
repz
mov
test
addb
js
je
cmp
jo
out
out
pop
fs
pusha
aas
pop
push
push
sahf
out
sahf
push
dec
dec
inc
inc
cmp
sahf
out
cmp
sub
rep
sahf
out
or
cld
call
iret
enter
dec
sub
sti
call
sahf
out
pusha
push
dec
inc
xor
cmp
out
or
cld
in
sarb
mov
out
lock
mov
stc
xchg
stc
mov
xor
or
jnp
stc
and
fdivrp
inc
clc
jle
mov
ja
xor
xchg
sbb
sub
insb
and
add
addl
push
jg
add
stos
arpl
add
add
and
push
add
in
loopne
add
add
add
roll
inc
and
sbb
shll
push
pop
fisttps
jle
jg
or
or
test
mov
decl
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
ljmp
mov
mov
mov
mov
ret
enter
int3
int
dec
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
push
test
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
jmp
mov
and
sub
stos
jmp
dec
lea
adc
stos
add
pop
outsb
gs
popa
data16
add
cmpsb
pop
jns
movsl
mov
add
fiaddl
data16
les
push
arpl
insb
fs
sbb
dec
jne
je
xor
outsl
lods
mov
push
femms
loopne
lahf
pushf
pcmpgtw
xor
push
inc
adc
xlat
add
push
xor
push
dec
inc
dec
jg
inc
fimuls
dec
dec
inc
add
adc
sub
push
clc
jo
adc
lock
into
mov
mov
jnp
inc
loop
fsubs
in
outsb
mov
ds
pop
adc
clc
lret
mov
and
sbb
jb
jge
arpl
cmp
mov
jno
in
fstl
mov
and
sahf
jg
xchg
cmp
dec
imul
lret
shr
incl
inc
mov
mov
sub
fwait
repz
ds
sbb
pop
jns
ds
xor
incb
jg
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cld
push
int
das
xchg
pop
and
xchg
lret
sahf
icebp
mov
ljmp
cld
or
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
pop
push
dec
mov
out
leave
ljmp
orb
popa
push
or
clc
andb
int
mov
leave
hlt
mov
mov
xchg
dec
add
scas
lods
dec
lock
xor
pop
mov
and
in
pop
pop
repnz
jmp
mov
and
es
sbb
add
inc
fwait
test
xor
jo
scas
pop
mov
movl
sbb
push
fildl
or
ljmp
push
into
mov
xchg
and
lahf
cmovg
add
dec
xchg
je
fbld
pop
and
ret
fwait
imul
sbb
sti
es
jae
rorb
add
mov
adcb
scas
push
or
mov
arpl
bound
jg
rcll
cmp
test
sti
or
ja
popa
daa
add
daa
je
sub
cs
ret
lahf
je
lahf
fucomi
and
xchg
lret
xchg
ret
adc
arpl
notb
cs
jb
add
mov
sbb
adc
mov
pop
xchg
xor
jae
in
jae,pt
insl
jle
or
push
fisubs
cmpsl
mov
and
lock
pop
inc
jmp
arpl
xor
rclb
jno
fbstp
out
sub
fisubs
push
push
ret
jg
mov
sbb
xchg
push
sbb
add
sub
jl
stos
jg
out
or
xor
sbb
jo
aaa
jns
outsb
xlat
cs
fs
inc
and
into
xchg
ret
adc
cmp
push
mov
sub
cmpsl
xchg
push
add
dec
mov
cmp
pop
pop
ret
out
mov
adc
jp
mov
jo
inc
popa
shrl
jo
hlt
mov
es
es
adc
sti
sti
cmp
shlb
daa
or
push
mov
mov
rorl
sub
loopne
icebp
arpl
dec
dec
cmp
js
fsubs
ja
dec
jp
or
jo
aas
ja
imul
bound
in
jno
mov
dec
imul
ret
out
inc
scas
fcmovnbe
pusha
addr16
out
xlat
adc
fbld
je
and
insl
int
pop
aas
arpl
daa
ret
add
sbb
pop
gs
jo
mov
out
push
faddl
andl
je
push
and
pop
jbe
push
mov
add
cmp
inc
fldt
and
pop
cmpb
add
arpl
mov
stos
push
xchg
lret
sub
push
les
daa
loopew
test
and
scas
mov
fbstp
add
ret
pop
mov
mov
mov
mov
je
xchg
push
loope
jb
push
add
or
arpl
inc
mov
or
push
jp
popa
jae
or
cld
bound
bound
adc
fisubrs
ja
out
out
mov
push
adc
aaa
adc
xchg
pop
stos
test
push
pop
push
push
mov
push
mov
ja
bound
or
mov
and
jnp
icebp
or
jne
add
lock
dec
pop
aas
dec
call
push
jmp
inc
scas
mov
pop
mov
xchg
js
mov
dec
pop
jecxz
push
cmp
inc
outsb
mov
jb
push
push
cmp
sub
or
push
sbb
add
ds
push
stos
inc
mull
inc
jnp
push
jae
push
pop
mov
addr16
shl
push
lret
and
xor
bound
testl
inc
xor
add
aas
jmp
and
daa
outsl
add
adc
inc
addr16
ds
aas
ja
inc
cs
adc
xlat
pop
shll
adc
dec
orl
inc
push
inc
jnp
jnp
mov
arpl
dec
dec
in
loope
insb
xchg
inc
inc
sbb
pusha
stos
ja
sbb
imul
inc
ss
mov
aaa
mov
dec
sbb
jno
and
loope
push
pop
je
pop
pop
lds
aas
pop
jbe
scas
adc
bound
mov
mov
mov
roll
xchg
jnp
lock
inc
arpl
pop
pop
push
mov
orb
or
orb
ja
cs
mov
mov
inc
jl
jl
mov
lret
mov
pop
sbb
mov
loop
arpl
lret
push
addr16
bound
mov
ja
rol
mov
jl
cmp
mov
bnd
jae
jno
ret
gs
jl
push
jecxz
ja
pop
push
pop
jl
iret
js
jo
jnp
sbb
cmp
push
jmp
es
inc
mov
lds
ja
pop
popf
out
pop
outsb
mov
out
orl
out
cwtl
shlb
jno
jo
mov
imul
jl
dec
outsl
lret
jl
jo
mov
pushf
bound
jns
rcrb
clc
jae
adc
es
sarl
lods
push
clc
mov
cmp
clc
xor
push
mov
inc
adc
adc
fadds
push
jle
xchg
push
imul
flds
pop
and
pop
push
js
xchg
add
push
push
outsl
push
pop
pop
or
xchg
mov
fisttps
aaa
sbb
pop
inc
sbb
test
inc
or
mov
jae
insb
imul
or
xchg
bound
scas
dec
push
jne
mov
jg
fiadds
negl
jo
outsb
xor
out
scas
push
pop
adc
jecxz
aad
ljmp
sbb
insb
test
fcoms
add
add
popl
je
aaa
es
test
das
fidivl
jno
addr16
js
mov
imul
push
add
or
pop
push
cmp
mov
int
or
fidivl
mov
sub
sub
pop
inc
fbstp
cwtl
insl
shlb
xor
insb
out
insl
inc
inc
sub
xchg
fiaddl
push
inc
popf
add
mov
or
bound
into
addr16
adc
cmp
es
ss
fdivp
mov
ds
int3
inc
in
imul
jg
mov
or
lds
fmull
push
arpl
addr16
inc
cltd
inc
dec
or
mov
add
mov
insb
add
jae
add
or
adc
fimuls
pop
movsl
cmpsb
arpl
inc
adc
das
inc
iret
mov
popa
mov
push
addb
shlb
xchg
lahf
outsb
dec
out
jnp
or
pop
aaa
dec
and
xor
imul
add
pop
jae
ss
or
and
shufps
inc
aaa
test
jbe
ret
mov
cmpsb
push
and
arpl
or
pop
test
sti
stos
pop
pop
push
jae
imul
and
fmull
mov
jae
insl
pusha
push
popa
jne
or
hlt
sbb
push
dec
bound
xor
pop
sub
and
jle
arpl
test
repz
mov
cli
mov
jns
and
stos
lahf
repz
jbe
icebp
push
add
es
addr16
repnz
in
cwtl
test
cmpsb
push
repnz
ds
xchg
ds
fldl
pop
data16
ja
or
jb
jno
sbb
cmp
out
add
mov
je
jb
mov
mov
jae
ss
sbb
ds
sti
movzbl
cmp
and
and
arpl
xor
xor
mov
pop
adc
mov
push
addb
int
mov
jne
je
ss
cmp
xorl
adc
adc
sub
ja
adc
shll
cmp
loopne
movsl
xchg
aas
rcrb
mov
popf
push
mov
imull
inc
arpl
push
cmpsl
xchg
and
scas
ja
sti
xchg
mov
dec
push
adcl
js
adc
xchg
or
dec
lea
lea
inc
mov
sahf
lea
push
and
adc
aaa
movsl
icebp
fsubs
cmpsl
add
xor
hlt
add
xchg
push
adc
push
lock
cmpsb
pop
repnz
pop
mov
hlt
fisubrl
jbe
ds
pop
lods
push
add
or
int3
push
movsb
ja
test
or
mov
xchg
or
shrb
jg
mov
pop
pop
mov
mov
add
je
adc
inc
fs
bound
cmpsb
jnp
xchg
movsl
and
inc
fiadds
jecxz
les
xlat
lods
sar
dec
inc
aaa
dec
add
pop
je
popw
or
movl
dec
jnp
push
sub
aam
mov
mov
or
pop
mov
inc
adc
lea
xchg
ds
push
inc
pop
dec
sub
iret
dec
stos
sub
pop
jmp
sbbl
pop
repz
clc
iret
inc
mov
adcl
rorl
rcrb
es
inc
adc
outsl
lds
mov
mov
sub
xchg
add
outsl
loopne
mov
and
mov
push
add
aad
in
cmp
dec
mov
add
add
or
aaa
and
cwtl
sub
jbe
imul
shrl
stos
jae
inc
jp
movsl
mov
adc
movb
dec
fbld
xchg
aaa
pop
bound
jmp
arpl
inc
xchg
jge
outsl
dec
xchg
je
icebp
jb
fs
js
les
js
jbe
jae
inc
andb
xchg
or
cmc
xchg
fwait
stos
jbe
cmpsb
loope
out
push
jns
push
mov
or
ja
pushf
fcompl
mov
lsl
or
mov
fidivl
xlat
push
push
jecxz
sub
jae,pt
test
xor
dec
out
xchg
inc
lcall
sbb
aas
dec
dec
pop
mov
inc
mov
mov
js
add
push
call
push
xor
fisubrl
imul
data16
cmpsl
pop
inc
mov
fnsave
stos
shrl
add
movhps
ja
or
mov
arpl
lods
pop
pop
add
jns
mov
push
cmc
out
out
je
imul
arpl
xchg
je
stos
lahf
push
mov
push
dec
xchg
shlb
jmp
je
cmpsl
mov
adcl
jb
pop
icebp
cs
test
mov
or
test
ret
lds
cmpsl
push
cs
cmpsl
adc
push
and
mov
inc
cmp
negl
out
fdivs
imul
stos
jae
sbb
imul
inc
or
xor
adc
push
add
bound
xor
addr16
pusha
ja
inc
push
imul
aas
add
pop
xor
mov
aaa
fnstsw
push
pop
mov
pop
ret
and
ss
popa
int
outsl
pop
das
rolb
imul
shrl
pop
in
pop
ret
rolb
dec
xchg
je
push
push
cmp
shll
sub
mov
ret
fldt
dec
and
outsl
add
add
dec
cmp
ret
or
xchg
mov
mov
sub
arpl
push
loope
insl
scas
mov
mov
pop
cmpsl
xchg
xlat
pop
mov
ds
dec
in
pop
iret
inc
outsb
loope
sub
fs
fiadds
push
xchg
addr16
or
push
mov
jbe
pop
jo
arpl
pop
push
or
mov
inc
push
pop
sbb
jnp
mov
jnp
jb
xlat
pop
push
fisubs
jo
push
inc
push
cmp
pop
jg
add
adcb
out
addr16
jo
jp
xor
je
insb
scas
loopne
aas
xor
in
cli
push
push
push
sub
es
jb
push
cmp
push
pop
add
cmp
xor
push
ret
sub
or
pop
xlat
sbb
ret
imul
stc
cmp
data16
or
iret
mov
cmpsb
adc
test
adc
and
mov
add
fwait
cs
inc
mov
stos
xchg
daa
inc
or
mov
lock
arpl
imul
push
fs
das
fwait
lcall
cmpl
mov
mov
mov
arpl
sub
push
push
loop
push
cmc
das
outsl
adc
dec
aaa
add
and
push
sbb
ss
add
sbb
mov
cwtl
mov
out
mov
cmpsb
xchg
fsubs
push
into
aam
or
push
outsl
daa
pusha
lcall
fidivrs
pop
inc
mov
xor
loopne
dec
das
outsb
push
xorb
insl
lret
push
mov
pop
orl
popa
xchg
decl
or
add
or
pop
sbb
sbb
sub
push
cs
mov
dec
rclb
push
add
pushl
adc
cmp
inc
arpl
cmp
ja
bound
in
adc
jmp
les
jae
arpl
out
pop
xchg
and
pop
add
dec
ja
out
xor
dec
cmp
loope
mov
orl
sub
fsubrs
mov
mov
rsm
fdivrs
andl
mov
inc
lcall
sub
dec
push
pop
minps
aas
push
adcl
rcrl
jle
dec
mov
jmp
pop
pop
jecxz
insl
repz
push
mov
mov
aaa
add
push
mull
push
sahf
cmp
gs
pop
das
outsl
cmpsl
adc
pop
les
jae
adc
test
jnp
mov
fimull
cmpsb
jo
pop
scas
pusha
add
dec
xchg
push
jmp
adc
test
or
lods
aaa
ja
inc
ficoml
mov
pop
cmp
mov
pop
loopne
in
mov
lea
in
sti
in
add
push
dec
pop
cld
pop
shlb
add
add
insb
fstl
in
push
push
dec
movsb
pop
mov
cmp
jae
and
sbb
ret
mull
dec
add
and
js
mov
push
in
dec
pop
bound
les
pushl
mov
sbbl
push
loop
mov
xorl
mov
mov
das
ljmp
mov
inc
out
sti
push
orb
fbstp
sub
adcl
dec
sbb
jo
and
pop
add
das
add
inc
lods
sbb
ret
jmp
int3
push
insb
arpl
mov
add
mov
adc
mov
lods
sbb
jmp
adc
pop
or
mov
pop
test
add
dec
jo
imul
out
mov
aaa
das
sbb
cmpsl
iret
sub
cs
add
scas
aas
scas
push
adc
xor
and
adc
aam
or
iret
or
mov
sbb
pop
fistpl
popa
lods
jecxz
rcr
or
xlat
and
xchg
xchg
mov
pop
mov
push
mov
xor
inc
push
jae
inc
imul
pop
jecxz
cmp
cmpsl
dec
mov
scas
add
andl
mov
jnp
sbbb
pusha
mov
push
aad
fnstcw
mull
fs
jecxz
clc
scas
mov
jo
push
daa
aaa
lahf
add
sahf
nop
push
jg
insl
inc
cwtl
or
pop
sbb
and
push
mov
cmp
scas
mov
add
jmp
in
push
push
insl
arpl
bound
roll
fcoml
test
in
mov
popf
push
xor
xor
and
scas
in
in
mov
push
leave
test
jb
pop
pop
or
mov
adc
pushf
dec
lods
shrb
push
sbb
enter
scas
js
push
leave
push
jb
aam
xor
and
push
jnp
test
dec
scas
xchg
stos
xchg
inc
push
jb
pushf
cmpsl
hlt
mov
pop
cmpsb
clc
inc
cmpsb
movsb
jne
pop
and
xor
movsl
movsl
dec
dec
mov
movsl
add
movsb
mov
aad
mov
push
leave
mov
and
pushf
dec
mov
stos
fbld
pop
and
mov
jb
dec
mov
in
mov
mov
mov
mov
jb
ljmp
xchg
push
leave
push
popf
popf
test
imul
data16
les
and
inc
shlb
aas
inc
outsl
adc
aam
xor
pop
pop
pop
cmp
xchg
rorl
ret
je
inc
inc
pop
add
shlb
loope
fistl
xor
dec
inc
inc
xchg
push
push
sbb
test
inc
xlat
inc
pop
and
lods
lods
add
push
aas
pop
loop
dec
push
sbb
mov
dec
mov
arpl
imul
or
aas
imul
push
das
dec
sbb
push
or
fidivrl
inc
pop
cmp
aaa
addb
mov
imul
xor
test
push
inc
xlat
and
push
dec
push
out
sbb
rolb
neg
sbb
push
das
rclb
and
adcb
add
dec
data16
pop
push
sbb
aas
xchg
fildll
sbb
adc
push
mov
scas
sbb
lahf
pop
or
sub
inc
sub
aaa
inc
cli
add
push
push
scas
inc
and
push
mov
xchg
inc
jmp
nop
jo
dec
sbb
aaa
push
ljmp
or
jbe
out
aaa
fistpll
iret
aaa
adc
scas
pop
mov
add
das
inc
or
outsl
push
adc
jecxz
ret
lahf
mov
mov
sub
mov
gs
pusha
addl
pushl
mov
jg
aaa
or
push
or
push
inc
aaa
scas
and
dec
pop
test
xchg
ror
inc
daa
push
sbb
js
pushf
rorl
cmp
test
outsl
rclb
outsl
jbe
inc
add
fcoml
dec
call
jae
and
lret
xlat
pop
sahf
pop
or
xor
loopne
fcoms
and
xchg
rolb
inc
inc
daa
sbb
sub
pop
or
pop
sub
xchg
pusha
mov
rol
ficoms
bound
mov
push
dec
inc
es
push
mov
inc
dec
bound
sti
std
loope
cmp
jne
addr16
add
daa
bound
or
push
je
push
js
mov
cs
sub
adc
icebp
cwtl
cltd
cmp
subb
arpl
pusha
loopne
pop
jae
jns
mov
les
in
ss
in
or
bound
jae
imul
sbb
xor
idivb
mov
sub
shrb
dec
stos
push
adc
fiaddl
iret
and
hlt
pop
pushf
shlb
xchg
outsl
jae
repz
push
adc
iret
repz
sbb
push
cmp
repz
andl
jp
push
cltd
or
xchg
stos
push
repz
push
sub
push
aam
pop
insl
push
adc
fiaddl
stos
das
adc
mov
jns
and
sub
xor
inc
fnstsw
data16
mov
mov
mov
add
add
shrb
ret
sub
fldcw
shrb
xchg
pop
adc
push
adc
pop
add
int
mov
xchg
rclb
lret
str
mov
shlb
stc
das
xor
scas
incl
inc
mov
pushw
aas
inc
iret
out
mov
sub
insb
sahf
out
push
pop
mov
push
add
jnp
repz
outsb
movsb
pop
push
insl
mov
mov
cmp
push
add
cmpsl
cli
cli
into
testb
dec
jg
dec
ror
or
sti
lock
sbb
bound
lock
jae
js
add
push
inc
pop
mov
xchg
add
add
ljmp
dec
pop
pop
mov
inc
push
pop
push
jo
push
adc
dec
mov
lahf
imul
scas
das
popf
stc
add
cmp
xor
xor
pop
and
andl
adc
imul
pop
and
or
cmpsb
lea
cmp
adc
mov
cmp
out
and
fildll
jns
and
stos
mov
add
cmpb
pop
pop
push
or
or
add
inc
and
dec
les
lea
aaa
mov
and
rcrl
adc
sbb
pop
adc
ss
mov
lock
push
orl
ja
mov
es
sub
mov
mov
push
sahf
push
cs
cmp
xchg
sahf
out
xor
jnp
and
out
es
add
mov
add
insl
xchg
jnp
andl
cmp
jns
xor
jae
fs
mov
sub
into
xor
pop
js
aam
jecxz
pop
xlat
dec
shlb
pop
sub
mov
or
add
js
xor
inc
cmp
or
es
btr
jbe
dec
or
inc
push
loop
shrb
jbe
push
dec
mov
bound
sahf
ja
adc
xor
out
jne
xor
cs
lret
cs
cmp
push
ret
sarl
cmpsb
xchg
ja
retw
fsubrp
sbb
pop
mov
mov
xor
push
inc
jmp
arpl
jnp
loop
sub
arpl
fs
inc
mov
iret
cmp
adc
dec
daa
xor
out
imul
push
mov
cs
loopne
fstl
and
imul
pop
pop
into
fnstsw
mov
push
es
ss
outsb
pop
push
pandn
notl
daa
dec
jb
das
inc
pop
lods
loope
dec
es
das
add
and
jns
inc
pop
push
sysexit
mov
scas
jns
dec
cs
sahf
push
outsl
jecxz
cmp
push
push
neg
jnp
sub
push
insl
mov
fisubrs
mov
xor
push
jp,pt
jp
iret
jnp
add
ds
fiaddl
clc
fidivs
jg
dec
das
xor
lock
xchg
jp
pop
outsl
pop
pop
out
loopne
dec
xor
xor
or
outsl
outsl
and
enter
inc
jb
jb
dec
xchg
xor
lods
cmovg
push
sbb
loop
push
sbb
lcall
inc
test
inc
mov
mov
push
sbb
mov
inc
cmp
pusha
mov
xchg
jo
ret
pop
inc
inc
js
jle
sub
lock
xor
add
fcmovnbe
ljmp
daa
mov
sub
xchg
and
xor
push
or
bound
pop
dec
inc
inc
mov
xchg
mov
xchg
jg
les
sbb
dec
mov
call
lcall
sbbl
ret
test
inc
inc
add
adc
out
arpl
shlb
jae
stos
mov
adc
andb
pusha
scas
repz
mov
mov
sbb
lahf
push
mov
add
nop
pop
dec
daa
push
sub
mov
dec
mov
mov
cmp
dec
and
pop
ficompl
sbb
dec
outsb
mov
pop
cli
shrb
push
xchg
mov
and
push
addr16
rolb
out
sbb
or
stos
mov
pop
hlt
sub
insb
outsl
popa
fs
outsl
insb
adcb
pop
pop
aas
add
sub
add
jbe
add
and
add
inc
sub
int
imul
scas
mov
movsb
lock
pop
ljmp
sub
shlb
push
pop
sub
gs
sbb
push
xor
shlb
cwtl
mov
pop
jg
ja
push
outsl
in
jae
push
mov
xor
or
idivb
jecxz
bound
mov
enter
push
mov
xchg
add
pop
jo
push
cmpsb
std
mov
cmp
jo
arpl
scas
hlt
ss
pop
pop
ja
xor
xor
push
inc
cmp
pandn
adc
pop
lea
je
adc
jae
jae
dec
rorb
xor
in
push
pop
mov
fdivrs
fldt
lret
add
mov
push
sub
pop
jnp
mov
pop
outsl
ret
lock
jmp
js
lahf
lcall
push
arpl
inc
sub
dec
pop
dec
jl
xchg
add
out
jecxz
addl
fisubl
imul
cs
ljmp
cmp
mov
or
xchg
sbb
stos
arpl
and
sti
dec
pop
popa
fldt
sbb
lock
iret
cmp
data16
lahf
inc
mov
add
bound
movsb
xor
jno
outsb
mov
dec
pushl
inc
andb
daa
jns
mov
out
test
or
and
mov
outsb
dec
arpl
jae
lea
sbb
jbe
push
imul
xor
das
add
push
popf
repz
add
and
push
les
sbb
mov
sub
stos
pop
movsb
push
xlat
adc
add
inc
sarl
mov
push
femms
dec
add
scas
lea
data16
xchg
fiaddl
shlb
inc
mull
push
push
xor
pop
lahf
sub
imul
daa
mov
fadds
dec
cmp
mov
testb
or
outsb
push
mov
int
jne
inc
push
scas
mov
dec
mov
aam
adc
fadd
popa
add
add
mov
ds
adc
push
and
mov
add
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
push
mov
idiv
push
mov
inc
push
insl
ss
adc
cli
mov
sub
sub
jmp
cmp
mov
sbb
mov
ds
pop
repnz
pop
sbb
xor
mov
mov
fsubs
sbb
mov
push
dec
xchg
jecxz
dec
push
pop
pop
cmp
pop
add
pop
adc
adc
pop
push
and
xchg
xor
mov
loopne
dec
push
dec
sub
imul
pop
mov
mov
add
or
jle
addl
push
mov
sub
xchg
push
mov
test
push
insb
dec
mov
and
dec
cmp
mov
sub
or
in
jl,pn
cld
xor
xor
jb
xchg
fdivrl
int3
inc
mov
dec
lods
pushf
dec
mov
or
outsl
repnz
xor
test
inc
imul
dec
lods
inc
pop
dec
xchg
scas
pop
add
lods
pushf
inc
dec
xchg
sbb
sahf
hlt
inc
or
fwait
xor
pop
jecxz
dec
adc
ja
lods
cmp
ss
cmp
sub
pop
xor
inc
adc
inc
push
mov
cmp
inc
repz
daa
mov
xor
pop
push
aas
imul
push
ret
pop
imul
aaa
mov
jl
inc
dec
xchg
inc
jmp
daa
bound
je
push
cwtl
adc
bound
imul
dec
pop
add
sbb
sub
push
add
add
xor
aaa
fisubrl
rclb
cmp
jge
inc
es
popa
xor
xlat
xchg
mov
rorb
scas
pop
push
rorb
notl
imul
loopne
dec
push
push
scas
xlat
jp
xorb
inc
imul
sub
push
iret
daa
xor
adc
xchg
outsb
pop
addr16
sbb
push
inc
dec
xchg
cmc
and
mov
popa
inc
pop
js
xlat
aas
inc
inc
push
jne
inc
call
xorl
adc
mov
iret
add
and
out
push
inc
fwait
pop
inc
pop
jb
aaa
aam
stos
pop
mov
xor
adc
test
mov
cmpsb
mov
sbb
bound
stos
xor
fbstp
insb
imul
outsl
dec
and
push
push
mov
aaa
dec
inc
arpl
jl
cs
fisttpl
add
insb
iret
jbe
jl
hlt
adc
cmp
fsubp
test
pop
subb
fstpt
iret
dec
popf
pop
inc
loop
mov
int3
out
mov
push
jmp
or
sahf
xchg
pop
subl
pop
mov
test
data16
notl
add
push
lahf
es
inc
insb
mov
ret
test
jae
insl
movsb
xchg
mov
adc
push
push
fwait
mov
and
push
and
lar
and
imul
jp
aam
sar
cmp
imul
cmpsb
leave
and
add
push
dec
pop
negb
insl
jnp
push
jl
push
mov
sub
and
out
cmp
mov
xor
or
sub
out
cmp
cs
jge
fwait
lds
pop
or
iret
mov
ss
adc
push
les
repnz
imull
hlt
testl
fidivs
sarl
add
stc
mov
push
movb
pop
xchg
inc
aaa
mov
fcompp
mov
jmp
sbb
repz
inc
lods
psllq
mov
testb
mov
jg
aaa
inc
or
negl
pop
or
cs
out
mov
add
mov
jecxz
mov
movsb
es
neg
jne
inc
push
xor
dec
nop
cmpsl
add
fdivp
popa
arpl
inc
jp
das
inc
jl
jns
fwait
out
xchg
cmp
icebp
xor
je
insb
sahf
out
leave
loop
add
jnp
iret
inc
ja
push
mov
out
sbb
jle
inc
out
mov
add
sahf
int
outsl
or
repz
test
sahf
out
sahf
ds
andl
insb
cmp
dec
mov
out
sahf
addr16
ss
jb
iret
mov
sahf
test
sub
cmp
lock
jecxz
iret
and
jg
dec
sbb
scas
sub
push
sub
adc
stc
add
adc
jecxz
fisttps
adc
push
mov
xor
adc
mov
pop
pop
mov
pop
enter
add
idivb
or
or
sar
int3
push
and
pop
sbb
enter
adc
in
call
or
adc
daa
or
pop
adc
add
or
pop
mov
adc
sbb
sub
repnz
leave
cld
orl
xor
aam
or
ja
outsb
outsb
inc
mov
xor
push
js
data16
imul
insl
gs
cmp
dec
pop
push
dec
xchg
push
jp
xchg
mov
and
lods
xchg
pop
fildll
stos
lcall
rorb
xchg
js
shrb
pop
push
dec
lea
push
dec
ljmp
and
push
popa
je
and
adc
inc
fldt
inc
push
push
xchg
cmp
shrb
mov
out
pop
mov
fidivrs
pop
call
mov
xor
sbb
dec
movsl
andb
inc
or
mov
and
lahf
pop
sub
lods
lcall
pop
addr16
loop
mov
aaa
sbb
cmp
mov
outsl
xlat
ja
mov
jo
inc
mov
stos
lods
aas
dec
sbb
xchg
and
pop
inc
adc
mov
mov
jecxz
xor
testl
popa
or
aaa
fs
cmp
inc
out
jb
xchg
pop
aaa
rcr
out
sub
out
and
sub
xor
daa
add
mov
sysexit
ja
les
mov
fisttpl
bound
dec
lahf
cmp
filds
inc
or
inc
jo
xor
lahf
mov
sbb
outsb
push
jnp
rclb
movsl
pop
rol
das
adc
push
and
xor
lahf
inc
js
sub
pop
jb
addr16
add
add
in
stos
add
and
push
cmp
lods
adc
jo
xlat
dec
sbb
aas
sbb
lahf
or
add
dec
add
inc
mov
gs
aaa
sbb
or
repz
xor
das
cmpsl
mov
xchg
add
xchg
push
ja
mov
mov
ja
aam
addr16
mov
mov
sub
pop
aas
jae
mov
andb
push
or
das
sbb
adc
push
lods
and
emms
imul
xlat
das
pusha
mov
sahf
add
add
sub
push
btrl
adcl
mov
imul
mov
add
mov
mov
ja
das
mull
mov
inc
das
mov
xchg
jb
sbb
insb
das
pop
dec
mov
sub
add
push
fildl
pop
das
mov
bound
pop
jp
loopne
inc
dec
push
incl
pop
push
aad
pop
jecxz
test
push
lret
pop
sub
int3
or
and
lock
jp
mov
jbe
inc
adc
push
xorl
or
add
sub
dec
mov
sbb
push
repz
test
roll
xchg
push
jmp
add
mov
aas
push
add
push
arpl
sti
adc
ret
fcmovbe
adc
sbb
adcl
das
mov
pop
add
xlat
pop
and
mov
pop
outsl
scas
or
inc
jmp
aas
add
mov
subb
jnp
imul
cmpsb
inc
inc
push
fidivl
push
inc
xchg
sbb
cmp
mov
repnz
popl
pop
lods
xorl
mov
pop
pop
inc
mov
jno
mov
not
inc
aaa
mov
dec
bound
dec
mov
les
xchg
inc
mov
lahf
inc
dec
sbb
inc
xor
dec
stos
arpl
lock
cmpsl
push
pushl
jg
shlb
mov
testl
pop
pop
inc
lret
inc
pop
test
aaa
jns
je
and
or
out
xchg
nop
outsl
mov
adc
and
lret
or
or
insl
jo
je
aaa
shr
or
ds
jo
jae
es
mov
outsl
xor
push
jg
xor
xor
add
fdivrs
cmpsb
jns
je
jne
or
add
push
aas
lcall
ret
aas
das
das
mov
mov
dec
jae
mov
sbb
mov
cmp
cmp
fstpt
push
inc
push
mov
cmp
imul
push
or
or
iret
pop
inc
popa
cwtl
lods
mov
ret
add
xchg
movsb
mov
cmpsl
pop
stos
pusha
and
outsb
loope
sbb
bound
cmp
inc
mov
jae
sub
pop
adc
test
adc
push
mov
push
jmp
jo
push
pop
dec
push
das
inc
jb
dec
cmpsl
pop
stos
outsl
test
insl
cli
push
add
add
adc
emms
or
fidivrl
jb
sbb
adc
test
movsl
ret
mov
xlat
mov
out
or
fstpt
js
aaa
inc
insb
rorb
enter
sbbl
push
xlat
lret
pop
dec
loope
cmpsb
jb
out
pop
sub
ds
popf
jp
icebp
add
push
pop
outsl
sbb
push
dec
inc
dec
push
xchg
add
add
inc
sbb
mov
pop
mov
out
jg
ret
jbe
add
add
pop
add
sbb
into
inc
add
les
and
pop
ja
and
pop
outsl
lods
fnstsw
das
ds
das
sbb
sbb
add
imul
daa
push
and
jg
push
inc
push
pop
inc
inc
inc
push
inc
pop
and
or
fs
es
js
insb
cwtl
lahf
add
cs
sbb
push
and
lods
insl
and
les
lds
sub
ja
insb
xchg
push
sbb
gs
shll
xor
popw
jo
sbbl
dec
aaa
cmp
lret
jbe
push
push
in
push
xchg
xor
adc
add
orl
jmp
mov
outsb
in
data16
xchg
aam
sbb
xor
mov
ss
sbb
push
cmpsl
sbb
fimull
data16
lahf
outsb
divb
in
lret
into
push
mov
shl
subb
cmp
xor
sbbb
mov
insb
scas
cmpsb
pop
push
dec
xchg
add
insb
scas
push
enter
aaa
add
pop
sti
xchg
in
mov
outsl
mov
mov
or
jecxz
mov
ss
adc
pop
int3
pop
xchg
push
cmpsl
lea
dec
or
popf
popf
mov
popl
inc
push
or
mov
sahf
daa
adc
jb
mov
mov
out
push
imul
outsl
mov
je
and
loopne
and
bound
sub
sub
cmp
jns
ret
outsb
in
adc
je
mov
inc
push
adc
std
xor
fsubs
sub
sub
mov
mov
jo
xor
clc
loop
dec
inc
dec
and
push
add
jne
push
js
mov
popa
mov
outsl
fs
gs
jo
jns
iret
js
mov
inc
mov
xor
insl
jne
mov
push
dec
pop
fiadds
sbb
xor
or
addr16
cmp
lds
sub
jbe
cmpl
jae
inc
insb
pop
push
and
pcmpeqd
out
loope
imul
sbb
aaa
xor
mov
outsl
jo
xor
negb
mov
mov
xchg
mov
or
inc
xadd
sbb
inc
cmovo
add
inc
mov
in
mov
in
cmp
nop
jo
maxps
mov
inc
lahf
sub
sti
inc
xor
mov
pop
jecxz
xorb
das
jbe
add
push
sbbb
sbb
cmp
aas
add
xor
cmpw
push
xchg
push
jns
insb
fcoms
in
pop
mov
jo
xchg
cmp
sahf
dec
fcmovnu
les
repnz
add
xchg
les
xchg
mov
outsl
inc
daa
outsl
inc
lods
mov
xchg
xchg
mov
insl
xchg
outsl
call
and
outsb
iret
repz
aam
fsubrl
out
sub
test
pop
fisubrl
xchg
cmp
add
dec
mov
mov
add
nop
push
rcrb
jbe
xor
nop
sbb
mov
cmp
mov
outsl
lock
xchg
pop
or
inc
xchg
pop
in
mov
pop
fdivrl
push
cmp
cmpsl
pop
xchg
and
fstpt
cwtl
push
movsb
cwtl
rolb
orb
sahf
or
in
out
inc
cs
dec
aam
data16
mov
bound
xchg
js
adc
movsb
insb
and
movsb
or
test
mov
sbb
out
pop
mov
inc
fdiv
dec
cltd
adc
sbb
inc
daa
cmp
mov
outsl
xchg
xor
insl
adc
mov
cmp
roll
push
xchg
enter
movsb
xchg
mov
add
jae
adc
pop
adc
into
lcall
add
repnz
fdivs
lahf
lcall
add
lcall
jl
outsl
sub
das
scas
jbe
aam
push
nop
inc
dec
dec
lock
in
in
cld
fwait
add
js
orb
mov
fwait
daa
mov
mov
pushf
loopne
fwait
insb
data16
and
out
or
or
ja
push
aas
fwait
or
pushf
sbb
fdivrs
and
ret
xor
pusha
push
add
mov
jl
mov
or
adc
aam
xorb
daa
repnz
nop
or
mov
inc
adc
or
cs
push
jo
cmp
test
divl
mov
pop
popf
int3
push
fdivl
orb
out
test
sahf
sbb
sub
pop
jnp
in
ja
lcall
insb
jl
enter
lahf
pop
xor
cmp
repnz
mov
enter
testb
lahf
mov
or
dec
rolb
lahf
pop
insb
out
xchg
pusha
xlat
ja
mov
pushf
lods
mov
inc
pushf
loopne
insb
mov
and
mov
or
test
add
les
mov
add
dec
sahf
rclb
cmp
mov
cmpsl
cmp
mov
mov
call
clc
xchg
mov
jnp
jb
call
or
adc
movsl
and
mov
ja
in
mov
cs
mov
fwait
or
hlt
mov
enter
call
and
cmpsl
mov
repnz
in
movsl
jg
dec
mov
scas
cmp
and
test
loopne
nop
addr16
mov
cs
loopne
jle
ljmp
push
push
lahf
mov
das
ja
enter
out
xchg
movsb
enter
add
or
hlt
clc
fstps
movsb
and
fimuls
movsb
xor
inc
lahf
dec
lahf
jns
imul
in
sahf
or
or
les
aam
call
dec
mov
cmpsl
les
nop
sbb
outsb
imul
cmpsl
loopne
sahf
or
jl
or
push
cmpsl
insb
shll
iret
sahf
adc
shl
and
int3
push
push
cmpsl
sarb
jae
cmpsb
adc
and
cmp
pop
push
push
cmpsl
jg
sub
out
js
push
pop
in
push
mov
jns
dec
inc
movsb
mov
enter
add
mov
test
push
xor
push
cmpsl
pop
jnp
jg
lahf
jg
cmpsl
pop
stos
js
jo
aas
push
jns
in
cmpsl
pusha
pop
mov
sub
push
mov
mov
ds
or
nop
mov
ja
rorb
cs
push
nop
rcrb
js
subb
ja
es
sbb
cmpsl
test
inc
mov
and
test
pop
dec
dec
add
out
dec
jbe
inc
lahf
pop
jo
rolb
push
inc
or
js
inc
adc
mov
inc
sahf
or
ja
mov
outsb
stos
pop
adc
push
mov
lock
jbe
loopne
mov
int3
sahf
imul
xchg
push
loop
or
mov
jno
xlat
jg
aam
in
mov
cs
xlat
cmp
loop
ljmp
pop
add
push
inc
jg
or
inc
sahf
xchg
and
ja
repnz
nop
inc
cwtl
fcompl
popf
xor
push
pushf
xchg
push
mov
fmul
jbe
mov
test
jnp
mov
ja
mov
daa
addb
movsb
enter
iret
mov
adc
pop
xor
sahf
in
inc
jo
xor
ja
ss
pusha
lods
and
xor
and
push
inc
mov
dec
out
rorb
inc
sahf
mov
pusha
fbstp
mov
enter
enter
push
inc
enter
pop
ja
inc
scas
sub
mov
and
fimuls
ljmp
inc
adc
add
insb
inc
inc
shlb
rcrb
test
scas
adc
or
bound
jns
lahf
mov
adcb
jns
in
mov
cs
or
shrl
and
and
in
dec
leave
jae
out
movsb
ja
lahf
pusha
jo
mov
push
nop
out
sahf
inc
mov
add
push
aam
lock
mov
aas
subb
fsubs
jbe
popl
jmp
pop
mov
popl
pop
enter
ss
or
inc
add
mov
mov
out
mov
push
and
dec
dec
outsl
add
jb
add
addr16
or
fsubrs
xchg
add
jo
cmp
repnz
test
adc
xchg
mov
lock
mov
cmp
cmp
daa
mov
push
jbe
outsb
iret
pushf
push
call
add
cs
addr16
fcom
rcl
mov
daa
fisttpl
mov
mov
enter
cmp
push
mov
mov
pushl
pusha
cwtl
inc
pop
mov
pop
pop
inc
loopne
fisubrl
push
cs
dec
xchg
pop
data16
ja
cmpb
xchg
ss
inc
adcb
pop
xchg
dec
enter
xabort
or
adc
or
or
addr16
andl
add
out
ja
daa
scas
clc
mov
dec
dec
scas
in
inc
inc
in
scas
in
xor
scas
in
scas
sub
and
lods
in
add
scas
push
pop
aaa
add
jns
out
mov
lock
les
into
mov
les
sbb
pop
mov
insb
sahf
nop
je
cwtl
jl
inc
sahf
cmp
cmp
pop
sahf
mov
mov
aam
mov
fs
sub
mov
fwait
sbb
ja
jns
fsubs
mov
xchg
dec
push
lock
jl
xchg
inc
xchg
or
pop
iret
jo
inc
add
seto
mov
repnz
inc
xchg
cwtl
add
inc
test
hlt
jbe
ja
js
out
fistpll
add
pop
or
jle
ja
dec
fisubl
jb
fcmovb
jg
push
xchg
rcr
or
dec
and
aaa
outsl
lock
in
push
inc
lods
pusha
pop
jb
push
inc
inc
mov
adc
nop
push
pushf
dec
outsl
add
add
or
inc
jl
inc
aaa
adc
and
or
pop
or
jl
dec
mov
outsl
cmp
adc
idivl
adc
mov
mov
mov
add
enter
jl
and
xor
fistpll
lods
aas
out
inc
test
aaa
mov
mov
scas
add
repnz
adc
push
lret
out
inc
xor
cmp
xor
sub
inc
mov
sbb
push
ljmp
sub
sub
int3
cmpsb
pop
add
in
xorb
cmp
xlat
aad
into
mov
mov
les
out
adc
mov
jle
ja
mov
mov
jo
jle
cmp
add
out
ja
cmp
push
inc
mov
lock
mov
mov
cltd
inc
xlat
aaa
fists
push
jbe
pop
scas
add
or
outsb
test
outsl
cmp
sub
hlt
cwtl
inc
enter
insb
and
mov
fbld
jl
mov
push
adc
dec
inc
testb
outsb
jbe
pop
push
push
pop
addr16
leave
mov
add
clc
es
sbb
mov
pop
jg
ror
fcomps
mov
jg
cmp
and
scas
clc
add
hlt
aaa
enter
mov
sbb
pop
pop
mov
aaa
lds
dec
ja
jmp
out
pop
cmp
test
ja
cmp
inc
dec
shlb
xorps
out
in
push
int
xchg
mov
pop
daa
out
jl
aaa
or
and
hlt
adc
cmp
dec
push
mov
xorb
ret
xchg
fmuls
bndstx
in
mov
cmp
je
js
ror
add
or
fcoml
clc
popf
sbb
nop
or
dec
mov
ljmp
xlat
or
xlat
mov
push
orb
scas
in
add
push
mov
popf
sub
pop
ret
ret
or
mov
dec
inc
outsl
and
dec
add
cltd
inc
nop
insb
add
scas
ret
pusha
push
call
pop
aaa
mov
lods
in
sub
jbe
or
ja
aaa
stos
sbb
outsl
nop
adc
mov
mov
les
mov
xor
in
add
jle
lods
inc
dec
and
sarb
mov
adc
daa
and
data16
dec
jnp
in
lds
aaa
pusha
and
adc
and
lds
fimuls
pushf
xchg
outsl
fistps
aad
orb
aaa
sbb
stos
pop
int3
pop
call
ds
clc
aaa
push
sub
or
dec
and
aaa
add
inc
jbe
dec
add
push
push
xchg
xchg
add
data16
outsl
leave
mov
addr16
and
ret
lahf
iret
push
mov
test
out
es
sbb
xchg
pop
leave
xchg
add
cmp
aas
push
sub
movsb
sahf
addr16
push
push
push
push
enter
mov
jns
sbb
enter
fiadds
in
xchg
or
je
push
or
or
test
jo
add
fistps
pushf
mov
pop
leave
sub
pop
outsl
add
or
sub
enter
push
dec
daa
xchg
add
add
add
inc
fs
in
aaa
enter
dec
out
enter
pop
scas
add
push
adc
outsb
sub
sub
adc
loopne
push
add
add
sahf
inc
sbb
andb
adc
mov
or
mov
mov
setb
add
in
popf
nop
and
xor
cmp
pop
inc
fiaddl
stos
mov
fistps
filds
jecxz
sub
dec
lret
insl
or
mov
divl
inc
je
lahf
call
fxch
add
inc
and
test
out
lret
inc
push
push
aaa
test
iret
sub
addb
mov
cmpb
lock
shlb
int3
popa
iret
cmp
int3
xor
cmp
inc
dec
fistl
or
outsl
xchg
hlt
movsb
or
jl
sahf
pusha
mov
insb
xor
mov
jp
xor
pop
push
sub
sarl
lock
jb
sahf
out
cmp
cld
and
xorb
jns
shl
push
outsl
inc
stc
cmp
repz
cmpsl
lret
jo
jns
cmpsl
xor
jno
repz
cmp
mov
jns
jb
arpl
out
repz
mov
je
push
sbb
sarl
dec
ja
and
jp
repz
xchg
mov
dec
repz
xchg
mov
fs
repz
movsl
lret
stc
push
jns
sahf
out
popa
cmpsb
lret
jmp
jp
cmp
shll
inc
outsb
mov
out
sahf
out
jnp
pop
jg
out
cmp
cmp
movb
mov
inc
ds
repz
nop
mov
sahf
out
pop
xchg
mov
and
push
out
cmp
out
push
sbbb
push
jg
lcall
out
test
mov
lahf
repz
adc
out
lahf
out
and
mov
cwtl
out
mov
lcall
mov
out
shl
sbb
jnp
mov
lea
mov
ds
fcoms
xchg
or
inc
repz
out
stc
and
push
out
lcall
lahf
out
ds
xchg
out
pop
xchg
xchg
fnstcw
sahf
push
flds
xchg
sbb
mov
out
repz
into
xchg
adc
inc
mov
adc
sahf
jg
sti
sub
mov
cmp
and
iret
sarl
jge
jmp
popf
out
out
lret
sahf
push
push
out
xor
fldt
lahf
add
mov
sbb
jg
repz
mov
mov
dec
repz
pusha
stos
out
movsl
sub
sahf
cmpsl
stc
cmp
add
cmp
repz
dec
cmpsl
ja
in
jl
cmpsl
stc
and
test
xchg
jge
loope
stos
jl
cmpsl
flds
jle
fmull
sar
jbe
cltd
in
sub
cmpl
cmp
out
pop
mov
pop
popf
stc
cmp
out
mov
mov
fimuls
mov
jl
cmpsl
xor
faddl
mov
cmpsl
stc
cmp
jg
aad
mov
out
xor
xchg
mov
out
mov
mov
lds
out
lcall
iret
sarl
fildl
mov
repz
mov
jo
fisubs
mov
rcl
sahf
ja
jns
aaa
shrl
fwait
iret
out
ret
cmpsl
fisubrl
out
les
out
leave
lret
in
shr
inc
int3
outsb
or
dec
iret
ja
ds
jnp
push
adc
mov
fldcw
dec
fcmovne
fcompl
fidivs
lcall
xchg
mov
out
xor
jp
icebp
mov
int3
nopl
sub
inc
rcr
xchg
cmpl
stc
in
inc
sub
getsec
into
add
adc
faddl
ja
pop
or
shrl
iret
pop
mov
lret
push
fistps
daa
fimull
jns
imul
jge
mov
and
fdivrs
adcb
fimull
call
adc
xchg
xchg
lahf
jg
gs
and
xchg
lcall
in
pushf
adc
and
pop
xchg
inc
xor
loop
mov
fs
aas
lahf
fcmovnbe
cpuid
popf
mov
in
jno
mov
or
xchg
pushf
repnz
testb
push
aas
add
jmp
or
or
adc
add
xchg
jle
fisttpll
pop
jmp
enter
and
in
fldenv
sub
inc
pop
daa
cld
mov
inc
insb
push
add
jl
mov
leave
in
pop
adc
add
aaa
xchg
add
movsb
mov
outsb
cmpsl
or
push
lods
adc
cmp
lahf
dec
mov
xchg
lahf
dec
in
cmpsl
xchg
outsl
xlat
cmp
dec
and
fisttps
sub
in
add
cmpsl
movhps
and
push
testb
mov
xchg
pop
push
daa
push
sub
dec
inc
scas
fmuls
sbb
les
push
aaa
lock
add
xchg
push
in
pop
pop
push
addr16
inc
or
mov
addr16
test
jmp
out
inc
pushf
inc
or
testl
pushf
sub
fcomp
fmul
daa
call
scas
add
push
push
testb
ja
fldenv
fucomip
in
movsl
ja
fbstp
dec
mov
xchg
jb
pop
jb
nop
jo
pop
jb
int3
hlt
dec
dec
mov
fiaddl
push
pop
pop
enter
sub
and
inc
add
add
add
pop
mov
js,pn
push
fwait
pop
or
xchg
enter
in
jge
add
enter
dec
dec
fistl
jmp
leave
mov
inc
pop
push
insb
xchg
sbb
push
xchg
pop
xor
lods
nop
cwtl
pop
inc
xlat
dec
leave
add
jge
fcmovnu
scas
int3
and
sub
in
xchg
pop
jl
pushf
in
xchg
test
pop
lcall
test
or
scas
xchg
inc
or
scas
sbb
dec
pop
jo
sbbb
les
mov
stos
dec
leave
push
and
adc
fdivr
daa
popf
sub
and
popa
jne
outsb
cmpsl
or
daa
jl
sub
sbb
in
ss
inc
jb
mov
fistpl
push
out
icebp
add
add
add
cmpsl
push
cmp
roll
or
cmpsl
xchg
mov
mov
add
lods
jg
push
push
pusha
and
sbb
xchg
pop
in
fistps
push
lods
mov
rcr
inc
data16
lcall
xchg
cmp
jb
lods
bound
daa
sub
xor
fcomip
mov
movsb
mov
gs
add
bound
cmp
mov
bound
imul
movsl
xchg
add
in
daa
daa
daa
in
cmc
std
add
arpl
add
xchg
fmul
xchg
mov
arpl
cmpsl
arpl
arpl
in
in
dec
push
pop
loope
fldt
cltd
jnp
andl
pop
xchg
setnp
shll
pop
leave
leave
leave
dec
into
loope
cmp
enter
add
pop
and
sbb
or
or
or
enter
or
daa
push
in
mov
xchg
mov
movsb
shrd
loop
xchg
das
dec
faddp
fs
lock
add
mov
xchg
add
xchg
add
and
gs
jecxz
test
jmp
pop
jb
jbe
jecxz
daa
push
leave
and
pop
inc
mov
add
lods
push
mov
xchg
sbb
sbb
out
in
xchg
add
or
inc
lds
push
out
clc
out
inc
mov
in
data16
out
inc
push
push
add
sub
aaa
in
ffreep
or
call
das
in
in
daa
fmuls
daa
cmp
data16
adc
adc
incl
in
test
insl
daa
in
daa
incl
pop
pop
out
xchg
cmpsl
and
in
adc
push
add
add
loop
xchg
add
push
add
mov
pop
or
js
popf
lds
filds
pop
xchg
adc
xchg
test
and
popl
mov
xchg
imul
dec
inc
sub
mov
pop
mov
or
adc
jb
aaa
out
out
add
push
inc
mov
add
jno
mov
scas
jp
fsubrl
mov
jo
dec
jo
push
leave
and
shlb
inc
jnp
out
push
out
pop
call
lcall
and
test
nop
outsl
daa
or
mov
inc
add
dec
add
pop
movsb
or
lock
xchg
jmp
in
xchg
sahf
xchg
js
bnd
adc
dec
bnd
mov
pop
ja
fsubrs
adcb
push
xchg
ja
fisttpll
push
ljmp
jns
dec
aaa
add
xor
scas
je
test
inc
int3
jbe
loop
mov
setl
cmp
data16
pop
push
lret
mov
xchg
xchg
add
shr
rolb
adc
notb
xor
inc
imul
push
sub
bound
cmpsl
add
in
inc
mov
cmpsb
sbb
jmp
daa
mov
sahf
in
in
cmp
pop
push
xchg
sub
lcall
jb
enter
aad
loopne
jmp
inc
mov
add
add
in
daa
and
mov
nop
xchg
adc
insb
pop
insb
push
xchg
or
push
jo
scas
cmp
daa
loopne
test
sbb
lods
pop
out
outsl
cmpsb
imul
loope
add
stc
aaa
out
out
in
xchg
pop
insl
sub
mov
inc
add
dec
dec
movsb
add
andb
andb
mov
fucomip
or
mov
mov
and
xchg
xchg
lret
mov
xchg
dec
cs
stos
inc
jb
mulb
mov
dec
mov
sti
xchg
pushf
dec
js,pn
inc
movsb
leave
mov
adc
rclb
leave
and
xchg
ja
rorl
outsl
repz
push
mov
dec
mov
setp
jmp
stos
filds
inc
mov
push
and
push
shlb
and
dec
test
jno
aaa
jg
dec
cmp
xchg
repnz
add
stos
pop
mov
fidivl
std
push
cmc
iret
add
push
orb
add
outsb
vmwrite
sub
sbb
cmp
adc
addb
and
lods
mov
jb
push
ja
movq
mov
add
xchg
add
or
adc
iret
hlt
mov
mov
jne
sbb
add
pop
push
xchg
mov
add
lods
pushf
pusha
cwtl
jge
je
bsf
dec
jb
enter
add
insl
add
sbb
js
addl
in
and
or
xchg
cmc
jl
mov
push
sbb
sahf
sbb
mov
cmp
pop
cmc
shl
test
sahf
faddl
push
fistps
add
outsb
fistpll
testb
shrb
push
cmpsb
add
mov
paddw
and
mov
in
fcmovb
push
push
minps
addr16
xchg
add
das
iret
leave
dec
ja
push
lea
in
pop
les
jne
notl
sbb
clc
jbe
outsb
daa
cmp
xor
orps
and
test
jb
pushf
clc
sbb
dec
mov
xlat
fisttpll
out
leave
mov
je
or
push
pusha
call
cmp
mov
scas
divl
add
pop
mov
paddusb
cmp
js
js
add
pop
xchg
pandn
addr16
addb
push
fists
add
jo
mov
mov
mov
ja
aaa
mov
pop
movb
add
daa
xchg
xchg
push
clts
cli
xor
or
xchg
and
push
sub
add
lea
cmp
add
iret
jns
jg
and
ficomps
test
nop
fwait
add
mov
xchg
daa
mov
mov
cmp
add
jns
cs
repz
jp
push
jp
lea
jns
adc
xor
xchg
and
adc
addr16
push
push
lods
lods
addr16
mov
daa
insl
push
or
into
rcr
lret
outsb
pavgw
push
add
push
es
cld
jnp
push
daa
scas
addr16
inc
ds
das
add
aas
add
inc
add
dec
push
pop
pop
xlat
or
sub
adcb
dec
add
xchg
lret
addr16
mov
negb
push
sub
in
adc
inc
mov
push
cmp
inc
add
jne
test
jl
xchg
cmpsb
inc
jb
sub
insl
std
bound
loop
lock
das
jno
mov
jb
xchg
decb
cmp
pop
xor
pop
or
shl
mov
nop
dec
and
repnz
insl
decb
mov
enter
setb
sbb
push
and
sub
decl
xchg
jge,pn
xchg
dec
dec
add
insb
jbe
jle
movsb
mov
pop
pop
dec
mov
pop
push
mov
and
in
sbb
push
add
push
add
es
ss
xchg
sbb
jle
xchg
mov
add
pop
jo
aas
mov
dec
dec
inc
fucomi
testb
jg
push
lea
in
rclb
add
sbb
cmp
pop
pop
jg
jg
xchg
mov
sub
out
add
fucomi
jg
mov
scas
cmp
jb
jg
jg
jg
jmp
adc
xorb
movsb
jnp
sbb
add
or
incl
add
out
movsb
mov
addb
mov
ss
iret
mov
mov
leave
sbb
pop
jb
ss
clc
addl
adc
subl
in
ret
dec
add
inc
sbbl
iret
jg
xchg
sub
sbb
pop
add
popf
pop
jo
mov
rolb
xchg
and
fiaddl
add
lret
xchg
repnz
or
mov
xor
sbb
or
dec
inc
xor
adc
in
enter
adc
adc
bound
push
fistps
mov
and
outsl
xchg
add
cmp
aaa
sbb
jecxz
push
cltd
cmp
push
add
sbb
sbb
cmp
push
inc
dec
xchg
mov
xchg
mov
lods
mov
test
wbinvd
cmp
add
or
daa
jbe
andl
jbe
jle
adcl
xchg
cltd
mov
dec
or
test
nop
mov
mov
sbb
cmovg
add
fs
iret
push
cmp
pop
aas
data16
sub
mov
repnz
into
push
shlb
lods
cmp
rolb
dec
adc
int3
cmp
pop
sub
mov
hlt
stc
jns
add
into
add
inc
sysret
addb
pusha
daa
nop
lcall
jmp
ljmp
cmp
add
xor
pop
push
inc
add
pop
pushf
ret
lahf
or
cmc
mov
or
daa
pusha
jb
push
or
and
in
jbe
pop
cmpsb
cmpxchg
idivl
xlat
push
call
les
decl
mov
test
out
iret
cli
sahf
pusha
mov
filds
call
repnz
or
sbb
pusha
push
cmp
incl
popa
add
sahf
int3
out
outsl
jge
jnp
enter
pop
mov
imul
pop
or
jns
inc
sbb
xchg
enter
xor
inc
add
mov
jb
add
mov
enter
lcall
stc
cmp
rol
push
or
lcall
daa
mov
mov
push
das
add
aam
add
pushf
pushf
push
jb
dec
enter
or
fisttpll
sbb
push
inc
dec
data16
push
pushl
mov
and
out
jbe
pop
or
or
and
int
lds
mov
movsl
or
lcall
xor
data16
dec
jnp
mov
cmpsb
popa
in
add
mov
ss
decl
dec
cs
addr16
or
mov
stc
push
fildl
jecxz
add
jb
loopne
ja
dec
jp
cmp
ds
push
mov
pop
add
xlat
cwtl
mov
dec
insl
cmp
in
ja
ja
mov
mov
and
shrb
ret
pop
add
push
repnz
pop
push
dec
daa
insb
cmovae
pop
pmaxub
jl
mov
or
pop
cmpsl
or
shlb
fsubr
mov
sub
andps
fisttpll
sahf
insb
add
jl
test
maxps
push
ficoml
add
insb
xlat
pop
scas
push
rolb
faddl
repnz
mull
movsb
push
test
xor
dec
ja
mov
cld
and
daa
pop
gs
jne
xchg
mov
adc
cwtl
mov
test
mov
mov
insl
nop
xchg
fninit
aaa
mov
lea
lea
fisubl
ja
ss
dec
push
pop
add
lahf
gs
xchg
xor
pop
leave
dec
pop
adc
in
add
cmp
mov
sub
and
mov
push
add
sbb
iret
adc
cmpsl
fcmovne
leave
inc
ret
xchg
and
push
push
inc
dec
testb
decb
jmp
adc
in
movsb
and
imul
in
leave
enter
cmpsl
cld
daa
daa
mov
sahf
mov
pushf
ljmp
out
mov
testl
fimuls
into
pop
sbb
and
and
daa
and
das
or
or
xchg
daa
mov
cvtps2pd
push
stc
leave
enter
xchg
lea
movsl
cmp
sti
outsb
mov
add
cmp
sbb
fabs
pop
jmp
icebp
add
pop
or
out
inc
repnz
xchg
dec
sbb
xor
cmp
add
aam
xchg
leave
lods
mov
xadd
add
rcr
pop
pop
loop
in
adc
cmp
or
lahf
adc
out
xchg
sbb
xchg
and
pop
leave
dec
add
pop
outsl
xchg
je
sub
and
fdivrs
fisttpll
ficoml
sbb
mov
mov
xchg
push
adc
sahf
sub
pop
ss
dec
dec
divl
pusha
movsb
or
xchg
jg
in
mov
paddsw
outsl
push
ret
rorb
es
rcr
loop
pop
das
ljmp
xchg
or
pop
pop
push
jge
dec
adc
push
dec
add
push
aas
rorb
subb
leave
inc
jnp
jnp
mov
xchg
fwait
cmpsl
mov
push
lret
cwtl
mov
leave
dec
ja
das
xchg
add
je
and
mov
push
ds
inc
add
enter
add
add
ja
mov
fisubl
mov
dec
dec
mov
iret
xchg
xchg
mov
cmp
in
cmc
cmpsl
loopne
or
ja
inc
inc
xchg
jg
xchg
mov
inc
mov
cvtdq2ps
add
jb
mov
xchg
fisubrl
sbb
add
pushf
fmull
leave
rorl
fabs
push
and
fistpll
sbb
xchg
mov
adc
add
repnz
xor
sysenter
cmp
sbb
or
loope
or
sbb
xchg
lcall
xchg
pop
dec
jo
aad
fisttpll
dec
in
mov
xchg
out
in
lds
adc
ja
int3
fisubrs
xchg
clc
cmp
inc
add
sbb
sbb
enter
jbe
jbe
jle
adc
sbb
push
xchg
iret
inc
sub
fcmovnbe
xchg
pop
sahf
or
cmp
fcomps
pop
cltd
adc
cmp
mov
mulb
sub
inc
push
xchg
xchg
xchg
xchg
pop
arpl
mov
cmpsl
push
pop
mov
stos
add
push
cmp
lret
aad
mov
and
cmp
lcall
pop
add
add
sub
dec
add
int
popf
in
outsb
push
adc
cwtl
fsubrl
daa
mov
xadd
leave
movsb
mov
mov
jl
jns
mov
fwait
fwait
push
jnp
addl
dec
fidivrl
dec
andnps
pusha
add
xchg
daa
and
add
enter
orl
lods
mov
sarb
repnz
in
adc
pushf
add
xchg
and
prefetch
adc
ror
xor
cmp
pop
mov
outsb
pcmpeqd
and
dec
pushf
mov
test
mov
int3
aam
addr16
inc
imul
aas
jns
cmp
pop
add
pop
pop
pop
push
and
sbb
pop
daa
or
or
and
aas
cmova
mov
cmpsl
xchg
push
orl
pop
popf
cmp
cltd
jge
roll
paddusb
repnz
add
xchg
add
mov
inc
clts
and
cmp
dec
sahf
pop
mov
loopne
push
and
out
dec
bswap
push
push
pop
and
enter
or
or
call
shll
out
fldcw
push
les
inc
sahf
mov
add
faddl
mov
mov
push
pop
addr16
pushf
cmp
add
push
add
daa
inc
mov
arpl
add
or
jae
pop
cmp
dec
sahf
mov
test
and
xchg
pminsw
repnz
leave
xchg
cli
mov
cmp
dec
pop
sub
push
leave
sub
and
pop
pusha
punpckhbw
push
jb
mov
xor
jbe
push
fwait
mov
dec
cmp
jns
push
mov
sub
sbb
push
outsb
out
xlat
push
icebp
add
in
or
and
mov
cld
daa
xor
aaa
lock
mov
lock
xchg
test
insb
daa
xchg
outsl
daa
sub
mov
mov
and
dec
outsw
mov
paddusw
enter
repz
add
enter
pop
pop
or
sub
xor
jb
or
or
inc
mov
adc
enter
adc
inc
mov
push
les
iret
sbb
in
enter
sbb
sbb
in
in
pop
push
adc
in
adc
adc
in
in
push
or
fisubrs
xor
and
jmp
jns
adc
cmp
add
and
in
daa
int3
daa
pushf
daa
xchg
es
negb
mov
add
mov
adcl
add
mov
cmp
in
push
mov
sbb
leave
add
mov
mov
leave
mov
xchg
and
mov
xchg
fisttpl
addr16
cmp
and
dec
outsl
push
pshufw
add
in
add
in
loopne
pop
aaa
mov
jg
mov
leave
push
movsl
cmp
dec
jb
and
and
ja
iret
movsb
pop
and
jnp
mov
int
cs
xchg
add
xlat
into
pop
cmpsb
add
out
cmpsb
and
mov
cmp
xchg
xchg
out
inc
xchg
add
fisttpll
outsb
jbe
jle
in
mov
mov
in
ret
add
lahf
xor
pop
cmpsb
cld
cmpsl
or
sar
xor
push
cmpsl
fisttps
inc
add
cwtl
popf
mov
fbld
imul
or
jnp
mov
pop
xchg
or
dec
inc
mov
addl
cltd
add
cmp
in
test
mov
mov
push
and
or
inc
sub
cmp
cvtps2pi
rolb
sub
test
mov
push
jae
jnp
addl
xchg
daa
and
outsb
in
enter
or
xchg
or
xchg
jno
out
iret
push
jb
les
inc
cs
dec
push
fsubl
push
push
test
iret
cmp
stc
xchg
test
sbb
mov
add
adc
les
aas
test
jbe
daa
push
hlt
ja
mov
xchg
popf
movsl
lods
lgs
in
popf
stos
mov
call
loopne
add
stos
inc
lds
sbb
imul
push
push
jns
xchg
sub
cmp
movsb
out
movsb
mov
outsl
sbb
loopne
addl
cmpsl
lock
lahf
cmpsl
pop
add
out
test
adc
fimull
or
mov
loopne
pusha
jg
xlat
stos
cmp
imul
inc
mov
xor
in
in
movsb
or
addl
leave
mov
push
repnz
xor
stos
fistps
add
jnp
jb
mov
or
ret
add
push
rcll
mov
inc
cmp
popf
xor
lods
and
inc
dec
add
push
cltd
ja
add
fcmovne
mov
out
push
xchg
insl
push
aam
mov
daa
and
in
idiv
leave
enter
or
or
dec
ret
leave
leave
and
xor
xor
iret
lods
push
lods
lods
rorb
pusha
xchg
xor
outsb
daa
daa
insl
jbe
xchg
lcall
xor
in
mov
lods
outsl
shrb
xchg
sbb
add
out
inc
jg
or
inc
xchg
or
in
daa
xor
imul
roll
pop
scas
xchg
pop
fwait
add
shrb
pop
xor
pop
inc
lods
jo
scas
das
mov
mov
mov
leave
in
scas
into
push
psubusw
inc
dec
bound
aaa
imul
xchg
mov
movsb
dec
xor
and
or
or
xor
mov
daa
dec
scas
fwait
sbb
push
lds
adc
push
ja
dec
or
rol
xchg
inc
jmp
movsb
cmp
pusha
add
push
ss
sbbl
outsb
daa
pushf
pop
mov
add
in
fmuls
adc
mov
frstor
mov
fcoms
pop
aaa
or
daa
dec
cs
cmpsl
push
movsb
cmp
das
mov
aaa
inc
pop
sahf
fsubrl
mov
lahf
xlat
add
out
add
add
leave
leave
leave
pop
add
in
leave
add
or
cmp
pop
or
movsb
repnz
aaa
pushf
mov
push
add
push
or
pop
jb
jb
jbe
sahf
cmpsb
add
add
mov
push
mov
or
or
and
lret
cmp
das
cmp
and
mov
insb
xcrypt-ctr
cmpsl
push
xor
add
dec
inc
inc
mov
xchg
push
pushf
pop
popf
mov
lods
popa
leave
in
in
movsb
dec
mov
andps
pop
and
lds
fs
adc
enter
adc
in
mov
inc
sahf
pushf
aam
sbb
in
xchg
mov
and
hlt
pop
paddb
xchg
fsts
or
pop
adc
fs
sbb
and
sub
sub
sbb
jb
sub
inc
sub
xchg
and
sub
dec
mov
leave
insb
je
jl
xor
add
or
ja
sbb
push
xlat
mov
or
cmp
daa
pop
call
cmp
add
daa
cwtl
data16
cmp
mov
mov
xor
xchg
lret
cmp
jnp
jnp
or
xchg
add
inc
jo
jb
push
dec
push
pop
gs
movsl
push
xchg
cmp
dec
mov
outsl
pushf
sbb
jnp
add
xchg
add
inc
mov
outsb
mov
xchg
or
lret
dec
ficoml
loop
out
push
mov
jb
enter
adc
adc
adc
inc
mov
push
insb
jb
enter
sbb
mov
inc
mov
xchg
sbb
in
xchg
and
and
and
and
and
and
lods
prefetch
sbb
xchg
sub
sub
outsl
mov
in
inc
aas
dec
pop
push
jg
lahf
imul
jno
jns
andl
mov
xchg
pop
pushf
push
movsb
sbb
lods
sbb
sbb
les
int3
sbb
push
fcoml
in
out
adc
adc
xchg
or
and
inc
pop
addr16
mov
imul
enter
add
add
cmp
pop
sahf
or
inc
mov
push
mov
or
or
out
lock
mov
repnz
sbb
and
xchg
and
adc
sbb
jb
dec
sbb
sbb
xchg
and
jnp
test
in
pushf
pop
test
fcmovnb
dec
int
fmuls
stc
jnp
iret
repz
sbb
mov
xchg
and
sbb
cmp
enter
adc
mov
mov
push
pop
or
in
xchg
or
or
cmp
add
and
test
add
ds
divb
xchg
push
ds
ror
or
xor
push
sbb
xor
pop
pop
xor
and
mov
or
or
xchg
push
pop
pcmpgtw
insl
adc
bnd
jne
jne
in
xchg
pop
lahf
cmpsl
mov
push
push
jno
mov
clc
xchg
xchg
mov
stc
push
push
mov
sbb
dec
inc
mov
add
inc
add
fmull
cvtdq2ps
imul
cmp
jae
orl
setle
test
dec
popw
mov
pushf
pushf
pushf
pushf
out
mull
dec
mov
sbb
and
mov
inc
pop
pop
push
outsb
daa
and
jbe
jle
daa
and
add
xchg
mov
mov
mov
enter
push
pop
shlb
dec
loopne
pop
call
addr16
inc
mov
lods
mov
inc
mov
fidivrs
add
dec
add
pop
fs
xchg
add
jg
sbb
repnz
xchg
or
cmp
pop
in
push
mov
xchg
xchg
and
adc
cli
movsbl
fcmovne
add
pop
xor
enter
cmp
inc
push
sbb
fs
pop
push
cmp
jns
mov
inc
sahf
mov
daa
inc
outsb
daa
and
in
maskmovq
idivl
daa
or
cs
cmp
push
mov
filds
sbb
push
jg
mov
xchg
add
and
pop
jb
pop
pusha
shrl
or
or
jnp
fucom
or
out
idivl
cmp
jb
rolb
pop
mov
adc
das
pop
aaa
push
in
cwtl
mov
dec
push
dec
adc
cmp
sbb
pop
sbb
addr16
outsl
dec
and
xchg
out
dec
rclb
xchg
mov
into
cmp
xchg
fimuls
out
out
inc
movsb
and
stc
roll
inc
dec
adc
daa
shll
cmp
cmp
jbe
jb
arpl
jnp
setno
imul
xchg
scas
scas
or
sarb
lahf
call
adc
inc
mov
push
pop
and
and
push
sbb
sbb
sub
xchg
sbb
sbb
jbe
repnz
and
jb
fsubrl
fstpt
mov
push
xchg
and
pop
sub
jb
cmp
enter
sub
and
sbb
xor
xchg
xchg
mov
iret
aad
loopne
ss
jb
lret
clc
aaa
ret
add
sahf
cmp
sbb
cmp
inc
mov
aas
in
clc
mov
inc
fimuls
push
inc
out
and
outsb
daa
and
inc
ds
das
push
into
or
adc
les
cmp
add
movsb
cmp
dec
lahf
dec
adc
add
dec
dec
mov
lea
les
les
or
rcrb
add
inc
mov
add
stc
leave
enter
add
movups
sbb
in
fldt
pop
xor
inc
push
dec
cmovbe
push
inc
mov
dec
scas
push
cwtl
adc
dec
scas
mov
mov
fisttpll
ficompl
out
sbb
mov
or
pop
and
and
dec
xchg
andl
dec
pop
adc
mov
cltd
lcall
mov
sahf
aam
pandn
add
add
cmc
movl
leave
in
push
or
and
dec
aaa
sbb
jb
inc
or
arpl
pushf
mov
jbe
and
mov
in
leave
enter
sbb
rcrl
das
mulb
sbb
hlt
push
ud0
jb
enter
and
and
and
sub
and
sbb
jb
dec
sub
push
sub
insl
test
cmp
mov
movsb
lds
sbb
out
push
xlat
add
mov
add
add
or
pop
adc
outsb
daa
and
push
es
ss
incb
leave
ds
inc
or
mov
daa
mov
xor
jle
leave
leave
leave
add
jb
enter
loop
in
or
or
lret
push
sbb
and
pushf
pop
and
das
adc
adc
fnstcw
push
pop
add
sbb
pop
jae
sub
jle
jnp
push
daa
daa
and
pop
mov
enter
and
and
and
dec
or
lret
pop
iret
lret
aad
xor
lret
inc
push
inc
dec
adc
inc
push
cmc
ret
sbb
and
sub
dec
loop
add
jle
fs
pop
scas
lret
push
xchg
add
xor
or
or
or
or
int3
or
mov
mov
inc
adc
fsts
adc
outsl
mov
outsl
xchg
xchg
sbb
lahf
sbb
mov
sarb
mov
int3
repz
push
sti
add
jo
repnz
push
sbb
and
sbb
mov
sub
xor
cmp
dec
inc
dec
or
aas
push
inc
mov
dec
out
push
fs
insb
cltd
mov
orb
adc
xchg
popf
mov
adc
mov
rcrb
fsubr
leave
enter
sbb
repz
nop/reserved
repnz
pop
into
add
or
adc
xchg
mov
loopne
cmp
pop
pop
sbb
push
push
inc
mov
fistpl
push
dec
jne
addb
xchg
xchg
and
pop
in
leave
enter
ret
int
sbb
jb
push
fmuls
jecxz
out
adc
and
adc
sbb
outsb
outsl
das
and
sbb
xor
cmp
dec
sbb
in
leave
enter
imul
in
jg
dec
mov
xchg
and
sbb
and
movsb
jb
fisttpll
xlat
into
sub
adc
mov
loopne
xor
push
scas
add
xchg
daa
mov
shlb
fstpt
inc
push
sub
cmp
rclb
outsl
mov
mov
in
in
stos
mov
shl
in
int3
add
add
and
in
or
roll
or
in
add
push
sbb
das
sqrtps
pop
adc
dec
inc
mov
jb
adc
xchg
push
loopne
jmp
divb
ss
add
pop
pop
sbb
and
sub
jl
sahf
int3
sahf
sahf
and
test
xchg
and
es
loopne
xchg
fcmovnu
leave
jmp
aas
jmp
das
sub
test
imulb
das
pop
pop
xor
jbe
and
aas
and
das
sub
xor
inc
ss
dec
pop
bswap
xchg
pop
repz
rcll
leave
in
leave
test
lret
xchg
dec
arpl
into
inc
push
jbe
pop
dec
shrl
in
pop
xchg
les
xchg
inc
outsw
das
repnz
paddw
or
in
enter
or
ss
fucomi
fs
dec
das
pop
pcmpgtb
pop
leave
in
leave
enter
test
seto
das
test
mov
pop
mov
xchg
leave
aam
loope
stc
mov
enter
push
nopl
fcmovne
enter
and
pop
enter
cmp
sub
jb
stos
sub
sub
pushf
mov
cs
inc
das
push
inc
sahf
int3
sahf
pop
xor
addr16
jge
popf
int3
ficomps
jecxz
out
bswap
leave
in
jbe
outsl
add
bndldx
dec
fcmovb
mov
push
xchg
mov
mov
pop
mov
or
psubq
insl
into
pop
shld
xor
out
push
sub
pop
clc
add
jo
xlat
xlat
dec
dec
fiaddl
adc
cmpsl
in
mov
mov
adc
mov
lret
cmp
or
das
popf
xchg
subb
pop
adc
pop
pop
pop
mov
add
cwtl
xor
and
add
inc
add
adc
xor
in
outsl
push
xorb
pop
add
lret
iret
cs
inc
push
and
ljmp
adc
inc
scas
into
sub
xchg
pop
inc
outsb
dec
ret
imul
in
inc
xlat
add
cs
add
mov
add
sub
pop
push
or
in
in
or
or
or
outsb
mov
scas
or
daa
dec
outsb
push
inc
mov
das
and
pop
inc
inc
push
addr16
das
mov
in
jbe
xorps
insl
leave
repz
push
and
jb
in
sbb
pop
andb
cmpb
out
xchg
addl
dec
dec
mov
or
into
aas
xlat
sbb
data16
test
mov
add
adc
add
fsubrs
add
adc
mov
rorl
mov
jne
addb
adc
mov
add
movsb
add
cmpb
cmpsb
fisttps
mov
cld
push
jg
sub
subb
mov
cmp
cld
decl
inc
mov
iret
mov
in
call
cmp
add
fnstcw
mov
fidivl
rcr
fsubp
stc
jb
jle
mov
adc
div
jl
js
jo
sahf
out
sahf
push
inc
jns
out
xor
and
out
sahf
out
adc
add
sahf
out
scas
repz
push
clc
hlt
lock
int3
pop
repz
mov
mov
mov
iret
repz
je
push
or
iret
mov
fistpll
out
sub
sbb
repnz
jns
out
push
in
fadd
mov
out
sahf
out
nop
mov
mov
pop
push
dec
repnz
repz
xor
add
cmp
cmp
clc
push
in
fmul
mov
movsb
nop
faddl
mov
icebp
jl
push
dec
add
mov
adc
pop
xchg
or
adc
and
mov
pop
cmpsl
jmp
into
rolb
add
cmp
mov
add
adc
dec
daa
aas
sbb
and
xchg
add
push
dec
inc
test
jbe
scas
lret
and
xorb
icebp
call
push
jnp
push
push
mov
add
push
fbstp
cmpsl
rolb
dec
add
ret
add
mov
add
add
mov
addb
es
mov
add
sti
cmp
andb
pop
ror
outsl
iret
inc
les
pop
lds
cs
leave
mov
jl
enter
mov
insl
add
in
pusha
mov
add
add
aas
movsb
enter
es
jb
enter
movups
add
add
nop
inc
mov
and
iret
push
clc
or
adc
addr16
xor
mov
in
enter
or
or
adc
in
and
mov
adc
inc
mov
add
pop
clc
and
and
enter
and
and
inc
pusha
fsubrs
clc
loope
ss
out
pop
imul
adc
xor
push
xor
xchg
cld
xorb
xor
cmp
xorl
fcomi
cmp
adcl
push
pop
js
out
push
cmp
mov
xor
enter
idivb
dec
insl
add
mov
sbbb
bnd
das
adc
repz
dec
insb
dec
nop
sub
add
inc
dec
repnz
inc
pushf
or
in
ds
ret
mov
adc
pop
stc
and
mov
leave
sbb
jmp
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
cmp
incl
xchg
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
fistpl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
fisttpll
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
incl
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
cltd
cli
fldl
xchg
and
add
addr16
add
aas
jno
or
mov
pop
fs
fisttps
xchg
outsb
adc
sub
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
pushl
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
xchg
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
aas
xlat
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
jmp
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
cmp
cmp
std
xlat
cmp
mov
sbb
ljmp
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
xchg
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
dec
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
enter
orl
pop
ficomps
frstor
add
sub
adcb
loopne
pop
jnp
outsb
xlat
add
inc
je
add
inc
inc
push
dec
addr16
push
out
push
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
jg
fldt
or
mov
call
push
inc
dec
inc
jo
inc
popa
shrl
push
outsb
jbe
imul
lods
lods
pop
gs
outsl
mov
aas
dec
insb
imul
dec
push
dec
insb
xor
push
cmp
add
clc
rcl
adcl
daa
pusha
push
or
and
mov
pushf
push
inc
inc
inc
test
out
dec
inc
gs
inc
adc
outsb
gs
daa
inc
insb
les
ds
arpl
mov
inc
or
and
bound
inc
sbb
push
dec
pop
mov
sbb
add
popf
ret
xchg
push
cld
cmpsb
insb
and
mov
rorb
push
fs
pusha
sub
inc
daa
aas
dec
or
sbb
imul
adc
jae
imul
data16
and
inc
inc
inc
jg
inc
jns
dec
mov
loopne
lahf
push
push
push
push
push
cmp
popl
lods
mov
data16
jns
ljmp
cltd
xor
mov
dec
in
inc
add
inc
je
jb
dec
push
dec
dec
sbb
jae
jbe
dec
cmpsb
lods
cmpsb
pop
test
pop
dec
mov
movsl
cwtl
or
dec
adc
add
pop
dec
inc
jnp
cli
popa
jne
arpl
outsl
push
push
bound
dec
dec
pop
xlat
push
adc
xchg
add
sub
les
sbb
mov
inc
xchg
push
mov
push
js
cli
dec
addb
mov
mov
rcrl
inc
pop
dec
notl
push
loope
push
notl
cmp
ds
xor
jbe
test
mov
mov
das
push
or
adc
push
clc
stos
inc
mov
jne
push
fcoms
adcl
repnz
mov
cmp
inc
arpl
push
insl
les
cmpsl
inc
push
pushf
nop
pusha
out
sub
repz
jg
mov
mov
pop
popl
adc
or
and
add
add
outsb
data16
xchg
inc
add
fisttpl
ja
mov
pusha
pop
ja
fisttpl
xchg
ja
or
les
stos
push
pop
pop
sbb
aam
pop
push
stc
jl
add
lahf
icebp
shll
push
ja
std
push
xchg
lcall
mov
scas
xlat
xchg
aam
dec
dec
lahf
insb
mov
push
inc
dec
lahf
add
test
popl
stos
and
dec
movsb
cmp
mov
adc
stos
leave
addl
mov
push
lahf
or
or
adc
cmp
subl
xchg
dec
and
adc
cli
push
dec
dec
jbe
mov
aaa
or
xchg
jae
in
cmp
push
inc
push
inc
mov
sbb
insl
imul
jne
inc
stos
adcb
rolb
adc
imul
outsl
addr16
or
or
insl
mov
iret
pop
les
inc
stos
andb
cmp
xlat
out
pop
fadds
add
jns
iret
repz
sub
xchg
lock
jns
out
test
js
xor
insb
sahf
inc
or
hlt
cwtl
mov
push
push
add
push
sbb
pusha
js,pt
adc
insb
daa
lahf
aas
xchg
xor
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
decl
fdivrl
jmp
rclb
mov
sub
mov
call
mov
repnz
repz
test
ficompl
jmp
mov
hlt
movl
insb
adc
test
fs
std
in
leave
mov
add
add
cmp
push
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
ljmp
or
insb
cwtl
mov
leave
mov
lods
jecxz
fdivs
jne
filds
or
jmp
pop
cmp
fldenv
cmp
fisubs
enter
call
popa
sarb
and
mov
cltd
xchg
mov
mov
or
or
mov
mov
jl
das
adc
stos
sbb
cmp
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
pop
rcl
xor
mov
js
stc
subb
lcall
cwtl
push
loope
or
insl
or
jmp
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
push
fnstenv
adc
mov
mov
bound
ficoml
gs
aam
pushl
cld
sti
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
xchg
fadd
jg
shll
jmp
outsb
xor
mov
sarb
add
in
add
lcall
or
cmp
add
daa
adc
or
and
test
decl
aam
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
lcall
loop
fistpl
arpl
test
fs
ds
decl
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
lcall
inc
push
imul
xorb
sbb
push
imul
aam
loopne
call
mov
ficoml
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
call
mov
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
decl
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
cmp
jmp
mov
loop
push
xchg
ja
int3
add
mov
das
es
lds
or
mov
sub
mov
cmpsl
call
ret
shlb
sbb
ret
es
jmp
pushf
mov
insl
add
ss
jmp
addr16
jb
push
pop
cmp
decl
xchg
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
call
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
decl
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
incl
insb
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
call
dec
inc
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
lcall
iret
mov
mov
sbb
mov
dec
xor
mov
add
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
or
add
push
sub
mov
or
sbb
mov
out
add
xchg
incb
pop
mov
xchg
jg
rolb
jne
fistpl
xor
push
imul
insb
imul
xlat
jmp
push
and
pop
inc
jbe
push
jns
arpl
add
push
outsl
arpl
ja
subb
push
inc
insl
jns
dec
adc
cli
outsl
insl
addr16
sub
add
fildl
push
lcall
xor
push
cmp
jns
rcrl
sub
mov
dec
inc
js
inc
insl
bound
add
or
loopne
add
js
mov
popa
or
sbb
ljmp
dec
and
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
ljmp
cmp
arpl
or
xor
bound
pop
xor
popa
add
xchg
pop
sbb
in
inc
mov
push
dec
inc
sbb
fistl
aam
inc
or
mov
inc
cmp
ret
dec
mov
add
fs
pop
or
ss
jbe
in
gs
cmp
or
inc
aas
push
inc
movsb
push
xchg
stos
popa
fs
inc
jle
inc
rcl
bound
sub
mov
getsec
pop
orl
insb
popa
jns
push
add
ljmp
push
push
mov
aaa
je
aaa
mov
inc
push
ljmp
jg
ficoml
jae
inc
ljmp
sahf
bound
push
inc
adc
stos
aaa
inc
and
sbb
inc
pop
jnp
adc
pop
es
inc
inc
inc
add
fimull
mov
ds
in
scas
add
mov
iret
int
push
dec
dec
lea
xchg
orl
adc
inc
outsb
jne
mov
sti
mov
push
jge
xor
fidivs
adc
arpl
add
aaa
mov
test
push
push
add
pop
inc
cmp
xlat
scas
inc
adc
add
imul
push
shrb
orb
and
mov
lahf
push
mov
dec
jo
fisubl
pop
mov
xlat
mov
push
and
pop
xchg
loopne
cmpsl
sbb
inc
jb
iret
or
mov
dec
popa
jo
roll
push
cmpb
outsl
outsl
test
add
push
push
mov
inc
bound
adc
in
push
andl
test
sub
add
pop
test
arpl
aad
adc
push
cmp
mov
jo
popl
pop
push
outsl
inc
xchg
stos
shrb
fcom
aad
inc
and
pusha
adc
sahf
mov
stos
cmp
insb
daa
sub
mov
adc
inc
xchg
jne
xor
jg
rcl
movsl
divl
arpl
sbb
xchg
add
adc
js
fmuls
pop
sub
sbb
jg
imull
add
cmp
cmp
jo
imul
pop
and
movsb
push
xchg
mov
outsl
xchg
fisubl
add
pusha
and
and
rcll
push
or
and
pop
insb
mov
push
loop
aaa
pushf
and
cwtl
jb
adc
dec
test
daa
push
add
test
inc
inc
add
adc
adc
push
add
dec
xorb
sbb
popa
fsubr
mov
add
nop
xor
push
sub
popf
xchg
cmp
decl
push
pop
mov
int
mov
inc
shlb
and
popa
insl
or
xlat
add
outsb
outsl
je
pop
add
jb
mov
inc
dec
push
and
fistl
dec
xchg
cs
cmpsb
dec
shrd
popa
dec
pop
shll
pop
or
bswap
mov
into
jmp
jmp
jmp
repnz
in
push
pusha
ljmp
pop
ds
aas
lret
cli
push
cld
sub
add
push
imul
mov
add
mov
dec
daa
jo
addr16
jnp
or
or
insb
daa
aam
cmp
cmpsb
mov
add
clc
fcoms
add
rcr
jnp
inc
sbb
add
mov
repnz
test
mov
jo
mov
fistl
pop
subb
or
loop
adc
xor
nop
insl
inc
mov
loopne
add
cld
roll
cs
and
lahf
or
and
lods
add
jb,pn
pusha
inc
add
mulb
inc
ficoms
lret
cs
mov
sub
mov
or
loopne
outsb
inc
rcrb
loope
jl
out
add
jb
out
iret
add
xor
dec
sbbb
or
xchg
push
inc
pop
inc
ret
clc
add
push
dec
sbb
dec
es
jmp
xor
lea
sahf
mov
lea
cmp
push
adc
xor
sbb
cwtl
clc
dec
jne
movsb
mov
bound
ret
inc
mov
dec
jecxz
add
push
or
inc
push
scas
pop
jbe
fcmovbe
lea
xor
or
fstpt
and
int3
fucomi
adc
add
inc
pop
cmp
ja
popa
jmp
jmp
mov
dec
xor
cltd
das
sbb
or
call
sbbl
inc
cltd
jb
test
shr
xchg
ja
jnp
cmpsl
pop
inc
jle
dec
lret
js
push
hlt
mov
outsb
adc
xchg
mov
out
mov
add
pop
jmp
sbb
xchg
xlat
push
push
pop
ds
inc
arpl
push
mov
adc
or
or
sti
imul
and
push
sbb
push
movzbl
or
rcll
sbb
add
les
dec
dec
xchg
testb
in
jnp
cmp
jbe
mov
iret
sub
xor
adc
cmc
pop
cmpsl
add
sti
xor
lahf
stos
roll
sbbb
loope
xor
add
outsl
out
xchg
and
mov
mov
loopne
call
sbbb
push
add
outsb
pop
xchg
xor
pop
pop
dec
sti
xchg
and
jbe
add
aam
es
jbe
jne
push
inc
imul
add
adc
imul
or
push
stos
or
sti
addb
pop
outsb
xchg
in
inc
add
in
dec
dec
and
insb
lret
mov
jne
push
push
insb
adc
adc
fsubl
rcr
loopne
adc
mov
add
push
movsl
test
mov
shll
jbe
leave
fs
imul
enter
add
pop
push
or
stc
dec
jnp
in
push
leave
push
sbb
pop
mov
into
int3
pop
pop
add
xchg
ficomps
push
push
test
ljmp
inc
cmpsl
icebp
push
test
je
sahf
or
inc
fidivrl
dec
pop
push
ret
test
jno
add
ret
sbb
add
lods
and
orl
pusha
sub
push
mov
ret
lock
dec
jmp
adc
push
mov
es
decb
aam
pop
inc
test
movb
or
fidivrs
dec
adc
add
push
mov
idivb
aam
lea
mov
and
sbb
mov
loope
dec
add
pop
adcl
push
roll
push
mov
fldenv
adc
roll
and
or
rclb
sbb
pop
loop
insl
ljmp
js
push
cmp
pop
mov
jno
repnz
mulb
insl
jmp
movsl
fxtract
add
xor
inc
pop
jne
jge
in
push
insb
mov
push
test
popa
fs
adc
xchg
popf
jl
pop
inc
outsb
fcoml
and
add
jo
stos
stos
cmp
inc
pusha
inc
ljmp
adc
insl
lock
loop
je
call
push
push
add
xcrypt-ofb
cmpsl
insb
fdiv
sub
or
lahf
push
push
or
sub
xor
loope
sbb
sbb
enter
xor
add
loopne
mov
push
xchg
movsl
sbb
adc
or
stc
call
push
push
pop
inc
fwait
jp
or
mov
cmp
jp
push
or
mov
or
out
jge
add
and
dec
mov
addr16
xchg
sbb
test
ja
in
adc
add
outsl
cmpl
data16
cmp
int
sbbl
lret
xchg
loope
xor
mov
into
subl
cli
loop
pop
call
pop
nop
xchg
add
and
add
in
add
dec
or
ljmp
and
or
and
pop
movb
test
xchg
rcll
gs
or
push
or
push
sbb
inc
cmp
mov
cmc
loope
inc
sub
cmp
push
push
call
call
push
fldcw
jne
xchg
lea
sbb
lds
ljmp
mov
nop
adc
ss
xchg
cmpsl
sbb
jmp
in
repz
ss
push
test
lock
ret
push
mov
pop
pop
adc
pop
add
lods
mov
lds
lods
ds
ss
ja
pop
mov
xchg
out
adc
or
xacquire
mov
sbb
push
inc
into
xor
in
dec
push
inc
dec
roll
or
or
sub
in
mov
rcr
push
fs
sbb
sbb
mov
and
mov
cmp
fsubr
shl
or
je
popa
pop
hlt
ficoml
pusha
jp
cmpsb
rolb
xor
loop
push
repz
sbb
adc
xchg
aad
pop
idivl
sub
es
ret
sub
or
pop
xlat
mov
mov
push
ret
aam
shl
inc
movzbl
xchg
aad
inc
imull
out
shlb
mov
add
dec
xchg
sbb
jbe
mov
mov
sbb
and
push
pop
lahf
movb
gs
test
push
mov
ljmp
bound
sub
inc
adc
push
fsubrs
xor
push
jns
or
movb
push
jo
add
and
pop
adc
cmp
ss
lret
lods
xchg
cmc
xor
mov
in
push
and
or
fiadds
in
cmp
ds
sbb
push
sbb
add
lock
sbb
sbb
loop
or
popa
sarb
mov
cmp
cltd
adc
push
push
dec
fdiv
xchg
mov
xchg
push
sbb
movsl
sbb
pop
pop
pusha
push
mov
call
into
fcoml
je
push
das
mov
cs
sub
pop
adc
stos
addr16
out
andb
xchg
inc
or
and
mov
popa
mov
out
fcompl
jb
call
push
fcomip
mov
xlat
rolb
addr16
in
dec
mov
xchg
xchg
test
add
xchg
fisttpll
xlat
dec
push
adc
lds
cmp
dec
addb
mov
test
mov
push
mov
daa
shrb
xor
fildl
or
shll
xchg
add
out
aad
dec
ljmp
vmwrite
xlat
in
jl
ss
xor
ficompl
cmp
mov
pop
loop
ret
add
mov
xor
decb
add
stos
pop
mov
push
in
inc
inc
ds
cwtl
movsl
xchg
aas
xor
mov
or
mov
add
out
aad
or
mov
adc
stos
mov
or
and
pop
lcall
mov
mov
lea
inc
leave
lds
dec
outsl
xor
repnz
mov
lea
and
pushf
and
push
mov
xor
cmp
jle
rcll
fisubs
nop
bound
adc
inc
in
andb
sbb
push
shl
and
sub
push
repz
cmpsl
fisubs
sbb
mov
pop
push
sbb
sbb
std
jo
shlb
push
mov
rolb
sbb
mov
dec
dec
sbb
cmp
pop
outsl
push
jb
je
ljmp
ljmp
pop
pop
stos
je
adcl
fiaddl
iret
jl
je
cmpb
adc
sub
js
call
cmpb
aam
leave
mov
jle
push
xor
mov
sub
ljmp
ss
mov
push
or
push
int3
mov
xor
into
rcl
fiaddl
mov
sahf
ret
lret
or
loopne
pop
cmpsl
cmp
jbe
and
xchg
scas
ss
aas
js
mov
out
lret
mov
std
sub
lcall
enter
push
rclb
lret
dec
add
push
fsqrt
xchg
testb
jo
dec
adc
cli
mov
push
loopne
subl
xchg
sbb
adc
daa
add
cmp
push
mov
jmp
adc
fimuls
xor
shlb
loopne
adcl
dec
in
push
xlat
in
int
push
and
pop
daa
xchg
or
xor
pop
dec
sub
out
sti
and
in
xor
pop
mov
jne
pop
or
dec
in
addl
mov
push
pushf
lret
enter
pop
xor
ret
test
insb
cmp
adc
leave
sub
adc
ds
mov
into
xchg
lods
inc
rcr
in
sbb
xor
mov
mov
pop
mov
cmp
iret
add
push
mov
cltd
je
inc
mov
mov
mov
cmp
pop
mov
jno
jne
je
in
xchg
in
in
in
pusha
sbb
jns
pop
jno
jle
mov
shlb
fcomps
mov
cmp
push
imul
sub
mov
xor
and
push
cmpsl
int3
pop
mov
adc
push
fists
and
pop
xchg
stos
cwtl
xchg
jp
sbb
jne
sbb
fildl
inc
sbb
jne
lods
lods
push
arpl
ja
cmp
fisubs
adc
movsl
push
sbb
sbb
push
repz
mov
xchg
dec
int3
mov
xor
xchg
cmpsb
adc
jmp
sbb
out
fcomp
into
lea
cmp
push
shlb
adc
rolb
movsb
ljmp
sahf
les
loope
inc
fcompl
test
aad
mov
lods
dec
xlat
push
push
mov
jecxz
repz
xor
sub
pushf
jg
lea
fcmovb
sub
jb
xor
fs
cwtl
add
in
imul
or
and
sub
dec
cmp
xchg
adc
add
add
jl
push
jecxz
loop
test
cld
pop
add
arpl
mov
rcrb
or
or
sahf
in
insl
cmp
subb
mov
push
or
test
sbb
push
inc
mov
pusha
pop
nop
aam
ljmp
push
add
add
out
enter
lock
mov
push
jl
xchg
cld
mov
sahf
and
xorl
push
call
or
nop
gs
mov
gs
inc
and
pop
in
inc
xchg
sub
dec
pop
and
je
sti
adc
pop
je
mov
inc
test
jmp
cmovp
call
inc
mov
inc
pop
and
adc
push
jmp
fimull
sbb
xor
bound
jmp
mov
fs
push
test
loopne
mov
adc
movsl
cmpsb
aad
jle
sbb
mov
push
cld
lcall
iret
xlat
cli
rcrb
insb
cld
adc
mov
nop
add
or
push
mov
push
mov
sub
dec
add
mov
movsl
xchg
orb
ret
mov
jne
xlat
nop
adcl
push
add
into
jae
mov
adc
mov
mov
xchg
mov
pop
cmp
push
loopne
jge
loopne
ja
push
mov
mov
outsl
push
xchg
push
inc
add
push
loopne
add
aam
repnz
pop
dec
insl
dec
inc
inc
xor
mov
or
or
shr
lods
fstp
pushw
or
jnp
fcomip
mov
call
imul
push
xor
cmp
sbb
cld
cli
jo
or
push
cmp
mov
pop
inc
sbb
mov
loopne
or
push
push
push
xor
inc
adc
adc
mov
in
inc
dec
mov
jo
cld
addl
sub
fadds
push
jle
pop
dec
adc
std
adc
xor
and
push
push
ds
sarl
iret
mov
aad
scas
out
and
cmp
bound
cmp
xchg
out
pop
dec
add
mov
and
test
mov
mov
imul
testl
sbb
mov
subl
sbb
adc
int
mov
or
or
out
add
in
dec
fcomi
mov
les
xor
lock
test
mov
jae
add
and
rcll
loopne
aam
mov
push
push
add
pop
shrb
daa
js
out
fucomp
cmp
cmp
pop
pop
cmp
cmpsb
jne
rclb
bswap
xor
shrb
push
sbb
xor
jg
fwait
push
cwtl
inc
jecxz
push
mov
mov
call
pop
emms
lret
sub
inc
adc
mov
decb
sbb
in
mov
sbb
xchg
shr
adc
pop
mov
test
push
and
push
inc
push
mov
and
adc
std
mov
push
clc
jmp
and
xor
popa
and
insl
add
in
imul
or
jle
or
xor
xchg
fadds
sarb
mov
or
sbb
mov
jno
inc
cmp
add
repz
aam
inc
pop
sub
pop
fsubl
rorb
adc
push
imul
sbb
cltd
add
add
rcrb
sbb
jp
mov
cmp
push
gs
mov
and
adc
jne
mov
jmp
mov
add
or
inc
int
aam
js
or
or
add
add
or
adc
dec
aas
mov
pusha
push
xor
jns
jbe
loope
sub
push
pushf
push
insb
add
adcl
and
cmp
inc
inc
push
add
xor
push
adc
es
xlat
pop
loope
xchg
ljmp
sbb
and
add
shll
sub
add
mov
cmp
ss
mov
outsb
add
call
nop
jbe
inc
cmpsb
xchg
mov
pop
sub
aam
inc
mov
add
push
mov
lea
bound
push
out
stos
push
fisttps
pop
in
out
call
cmp
jbe
and
rorb
xchg
jne
cld
xchg
inc
push
add
mov
fdivrs
std
pop
mov
das
aad
fsubl
pop
mov
inc
push
in
lods
loope
dec
xchg
mov
mov
cli
adc
push
popf
xchg
mov
mov
xor
pushf
fwait
or
loop
test
inc
or
addl
add
push
adc
xor
mov
xchg
xchg
imul
mov
or
mov
rorl
xchg
mov
rorb
test
sbb
jbe
jbe
fwait
jmp
xchg
lock
push
mov
aas
fisubs
push
sbb
adc
movsl
cltd
adc
pop
adcl
call
imul
mov
js
inc
adc
pop
add
in
push
or
sti
enter
push
je
push
sub
lea
dec
jle
test
lahf
add
into
in
push
das
lcall
dec
jg
icebp
sub
sub
pop
push
lea
insb
and
pop
xorb
push
xchg
aam
mov
data16
push
jecxz
jle
push
cmpsb
aam
mov
popa
mov
loop
push
inc
cmp
cwtl
popa
fsubrl
call
jg
push
inc
test
dec
je
or
shrl
mov
push
and
fdivs
xor
scas
dec
je
gs
fdivs
js
push
push
inc
cmp
shlb
or
adc
call
push
adc
aam
or
push
inc
cs
push
or
or
mov
into
xor
pop
shrl
pusha
stos
or
mov
and
subl
enter
fdivr
pop
adcb
add
sbb
subb
pop
xor
mov
int3
dec
push
hlt
mov
rorl
add
mov
add
cmp
ss
clc
and
cmp
push
sbb
push
adc
sub
mov
xor
jmp
sub
and
pusha
andl
movsl
sub
or
aaa
jo
mov
or
mov
fisttpll
mov
aam
in
push
ret
pop
mov
mov
iret
call
rcr
mov
sbb
mov
or
lea
jmp
sbb
in
movsb
xchg
sbb
sbb
cmp
jecxz
jne
into
cmp
sahf
adc
jmp
ss
cmp
jne
sbb
arpl
push
pop
and
pushf
dec
jo
or
je
int3
jb
dec
pavgw
mov
js
dec
sub
mov
xchg
lods
jmp
nop
xor
adc
jae
arpl
jmp
loopne
pop
mov
call
rclb
inc
call
dec
xlat
and
push
mov
xchg
push
lea
cmp
xor
sbb
or
mov
xchg
push
clc
push
xlat
push
push
testb
push
enter
pop
jecxz
push
dec
xor
fxtract
icebp
daa
or
sbb
jne
into
movsb
inc
or
mov
xorl
xchg
add
xor
or
fcoml
push
lret
and
xchg
in
mov
add
push
call
in
movsb
push
push
xchg
sub
js
sbb
mov
aad
test
or
scas
adc
mov
sbbl
cmp
xchg
and
int3
jbe
sub
jg
icebp
mov
mov
and
out
bound
call
cmp
xchg
fcompl
je
adc
ret
sbb
push
sbb
inc
in
fdivl
or
loop
jno
mov
cwtl
or
popf
pushf
or
cmp
test
cld
test
sbb
test
test
stos
push
inc
add
fs
inc
mov
xchg
rcrl
mov
pop
incb
sbb
andl
cmp
jg
push
dec
cmp
adc
je
or
in
push
call
test
and
push
sbb
mov
out
mov
and
or
push
inc
adc
push
cmp
fadds
dec
jne
movzbl
add
aad
or
xor
movsb
nop
inc
sbb
sbb
addb
addl
add
adc
sbb
sub
sub
xchg
es
mov
jmp
jo
lods
and
adc
cli
sub
xchg
or
dec
inc
mov
and
ja
sub
lock
inc
xor
inc
pop
pushf
test
rorb
mov
xchg
mov
fwait
xor
xchg
cli
add
in
cmp
call
xchg
pop
dec
fisttps
call
nop
in
push
push
cld
dec
add
sbb
imul
pop
das
dec
aam
movsl
sbb
dec
push
sbb
xchg
dec
jge
or
je
cmp
push
mov
mov
jge
aas
dec
nop
out
dec
inc
jge
xor
sarb
enter
sbb
sub
push
jecxz
xor
xor
jno
xor
inc
lea
movsb
test
sub
or
mov
push
or
sub
or
or
out
xor
inc
inc
test
lea
movsb
inc
dec
cwtl
and
pop
mov
xor
xor
mov
or
pushf
mov
leave
inc
adc
test
adc
xor
mov
aaa
pop
xorl
sbb
pop
mov
insl
fcoml
xor
push
imul
sub
daa
gs
in
mov
adc
rorb
ljmp
push
popf
xchg
pop
popa
pusha
dec
mov
push
nop
dec
es
shrl
cmp
pop
sbb
out
xchg
call
daa
callw
mov
xor
jmp
cmp
hlt
std
mov
dec
aam
inc
adc
rcll
data16
call
and
pop
dec
xor
cmp
adc
int3
pop
fs
mov
xchg
mov
ja
test
cmp
cmp
or
inc
bound
push
add
xor
add
call
or
andb
insb
mov
pushl
cmp
jmp
cmp
xor
xchg
sbb
push
or
xchg
rolb
adc
les
test
cmp
pop
push
les
imul
fimull
ljmp
lds
shl
mov
and
add
sbb
push
fidivs
jo
and
cmp
or
adc
leave
test
cs
sbb
lock
dec
mov
adc
add
loope
xor
push
cmp
jge
call
and
arpl
inc
mov
dec
incb
mov
es
cmpsb
add
movsl
adc
and
push
or
aam
repz
push
insl
adc
decl
dec
shrl
repz
push
sub
push
sbb
dec
outsl
add
data16
outsb
iret
dec
jle
adc
call
ficomps
cltd
mov
sbb
xchg
or
mov
js
sbb
fnstenv
lea
push
dec
rorl
xor
dec
sbb
pop
fs
adc
jp
test
inc
dec
loope
sbb
cs
arpl
and
xchg
pop
aaa
xor
sbb
movsl
adc
or
adc
and
sbb
rorb
shlb
or
push
push
and
mov
xchg
mov
loopew
adc
push
in
orb
push
push
les
pop
pop
or
push
adc
sbb
push
addr16
adc
and
adc
pop
orb
inc
inc
jbe
addr16
cmp
mov
lods
lret
call
inc
or
inc
out
or
or
push
inc
sbb
push
inc
dec
out
imull
inc
cs
pusha
nop
push
in
nop
je
or
push
out
inc
add
out
repz
out
inc
or
push
sub
repz
and
adc
add
addb
ds
jmp
inc
inc
inc
inc
out
addb
adc
and
je
fistpl
pop
nop
add
and
dec
in
add
add
out
insl
adc
or
repz
mov
into
repz
jge
or
out
cld
or
add
sub
inc
mov
pop
les
xchg
xchg
or
xchg
add
xchg
xor
xor
mov
insb
and
cmpb
adc
dec
pushf
push
pop
fstl
loopne
jmp
cmp
je
mov
add
sub
fs
ret
lea
adc
add
pop
add
or
add
add
add
adc
adc
sbb
out
jg
jo
cmp
je
xchg
add
in
fmulp
mov
inc
scas
in
push
push
push
gs
int
add
inc
or
and
or
lret
sub
or
add
or
or
sysenter
xchg
subl
or
mov
or
or
or
push
or
xor
push
cvtdq2ps
pop
xor
adc
pop
in
sbb
adc
cmp
in
add
adc
pop
and
and
push
adc
push
adc
adc
adc
jb
jb
adc
xchg
cmp
push
push
inc
mov
pop
and
ljmp
sbb
xchg
sub
mov
pusha
in
sahf
sbb
mov
in
sbb
xor
repnz
jo
sub
ja
sbb
mov
negb
pop
xchg
add
add
sub
std
and
xchg
movl
decl
xchg
and
lods
pop
cld
popf
pop
sbb
cwtl
xchg
push
in
push
in
imul
insl
adc
repnz
ret
repz
leave
jnp
xor
mov
leave
out
out
jb
cs
aas
sub
call
nop
aaa
call
in
inc
xchg
mov
cmp
cmp
ljmp
jmp
jmp
or
or
in
in
xchg
mov
in
cmp
jb
iret
enter
xchg
lret
add
out
je
mov
lcall
mov
icebp
das
jnp
and
repnz
push
jns
in
std
hlt
hlt
imul
xchg
std
cmc
jns
scas
div
cmp
xchg
testl
std
clc
clc
clc
in
mov
stc
sub
scas
and
cli
mov
sti
sti
fdivrp
add
mov
insl
cld
push
push
fwait
xchg
idivl
shlb
mov
xor
sbb
ss
iret
xor
mov
cli
or
sub
jb
lahf
rcrl
push
dec
ljmp
or
fwait
or
jecxz
lret
stos
pusha
nop
jecxz
xchg
xor
mov
addl
rorl
out
sbb
scas
call
cltd
sti
cltd
and
adc
or
jae
jmp
xchg
daa
and
test
in
cltd
or
adc
push
jmp
xorl
repnz
lock
cmp
cli
or
aas
repz
add
push
mov
inc
jb
stc
dec
push
cmp
imul
mov
xchg
clc
repnz
cltd
jb
push
stc
test
xor
sti
and
movsb
sti
sti
xchg
or
push
lret
sub
cld
jmp
mov
cmp
push
filds
inc
mov
clc
mov
xorl
repnz
jecxz
inc
clc
inc
mov
inc
and
xor
add
or
stos
lret
stos
xchg
fdiv
out
rcll
testl
mov
xchg
push
jmp
sub
nop
mov
rclb
or
mov
mov
repnz
loope
notb
pop
or
ss
repnz
inc
repz
and
test
sub
or
xchg
adc
out
notb
mov
xchg
mov
dec
loope
cmp
xchg
clc
cmp
pusha
sbb
push
inc
test
repnz
cmc
cli
hlt
inc
aaa
inc
mov
xlat
inc
stc
mov
push
lock
push
sub
push
out
mov
sbb
shl
clc
sti
mov
loope
loope
xlat
enter
loop
popa
leave
and
hlt
cmp
xchg
cmpsb
jb
mov
hlt
in
scas
in
pop
pop
repz
leave
or
repz
dec
in
rorl
or
mov
scas
add
ucomiss
int
andb
in
in
leave
or
mov
scas
add
repnz
bnd
test
cmp
mov
icebp
das
xchg
pop
and
les
pusha
pop
repnz
repnz
movsl
test
insb
and
icebp
mov
rcll
icebp
or
jne
stc
pop
xchg
adc
mov
rcll
or
out
lock
mov
sbb
xchg
test
jp
jmp
jns
notb
je
int
push
sub
ffreep
push
inc
in
jmp
sub
inc
cmp
cmp
ret
mov
adc
mov
push
mov
imul
and
pcmpeqw
sti
in
bound
jmp
xchg
add
ss
dec
cmp
nop
out
jmp
dec
test
push
inc
int3
dec
push
nop
push
jns
lcall
aaa
or
push
add
cmpsl
fnstcw
adcl
fldcw
push
jecxz
repz
mov
dec
jae
insb
sbb
push
push
aad
out
xor
xchg
gs
dec
outsb
xchg
or
mov
push
mov
jmp
mov
lods
mov
sbb
les
stc
jns
inc
cmp
and
xchg
movsb
xchg
pop
inc
movsb
cmc
sub
push
negl
clc
inc
sbb
adc
lods
jle
xchg
push
vpor
popf
arpl
addb
fsubrs
out
mov
mov
sbb
add
push
add
ficoms
or
or
dec
rclb
icebp
add
lea
sarb
xlat
pop
mov
xor
pusha
jl
inc
xchg
push
push
adc
adc
hlt
ret
mov
or
sub
pop
jmp
sbb
pop
pop
movsl
and
add
push
enter
push
and
pop
leave
inc
ds
jmp
jmp
ret
cmp
sub
inc
push
dec
rclb
mov
insb
icebp
sub
mov
jb
inc
icebp
movsl
mov
and
cli
adc
jmp
cwtl
bound
pop
xor
stos
sub
loop
adc
or
adc
hlt
psubsw
xor
dec
xchg
dec
int
push
cmp
jb
cmp
jecxz
add
adc
jns
xor
jg
call
adc
xchg
fiaddl
enter
add
cwtl
test
xchg
xchg
push
add
sub
add
loopne
mov
jo
add
mov
xorb
dec
xor
test
mov
cmpsl
jo
and
add
mov
sbb
outsb
inc
inc
mov
adc
mov
dec
pop
mov
inc
pusha
push
and
fsts
or
inc
cmp
pop
cmp
test
push
xor
or
in
repz
add
test
jle
and
je
add
rclb
stc
xor
add
cwtl
push
inc
xchg
lods
clc
add
or
nop
pop
sbb
movsl
xchg
add
xor
test
out
mov
add
jg
movsb
jae
test
je
test
xlat
loop
push
and
ret
sub
sti
inc
inc
xor
iret
mov
stc
push
add
add
ret
mov
and
lock
sbb
pop
and
ret
and
andb
add
shr
adc
enter
int
pop
add
mov
push
test
outsb
lcall
add
ret
outsl
inc
inc
mov
push
sbb
mov
nop
out
ss
ret
or
in
push
popf
add
inc
ret
pop
enter
ret
aam
add
sbb
rcl
or
or
arpl
and
nop
or
push
ret
imul
inc
cmp
cmp
ret
sub
lock
cmp
sysenter
cld
add
imul
or
repz
mov
inc
ret
pop
mov
nop
or
ret
add
jp
dec
adc
ljmp
adcb
adc
ret
test
ret
out
shr
adc
add
aam
push
mov
test
insb
pop
fs
mov
add
ret
and
mov
adc
push
and
sub
mov
ret
and
cmp
dec
dec
bound
sub
or
xor
ja
and
ret
cmp
ja
or
cmp
push
or
std
sub
xor
ret
add
cmpl
lret
or
movsb
inc
adc
xchg
add
sub
aad
outsb
ret
mov
test
jns
jecxz
dec
dec
lcall
pop
imul
mov
add
inc
scas
mov
or
leave
mov
and
cs
adc
into
movsl
fwait
in
in
lock
pushf
adcb
shll
add
adc
cmpl
xor
mov
cmc
data16
inc
inc
pop
or
test
adc
in
push
dec
sub
fiaddl
stos
or
cmp
lahf
lock
popa
aas
ss
popa
rclb
fnstenv
je
mov
and
scas
cmp
ljmp
mov
inc
loopne
je
or
inc
adc
aaa
pop
cmp
and
pop
and
loope
add
dec
cmp
cmc
dec
pop
vorps
jo
rorb
sub
es
daa
or
shl
mov
rcrb
dec
mov
ss
push
dec
mov
mov
and
xor
into
and
mov
loop
cmp
mov
lods
mov
push
mov
cmp
int3
xchg
adc
sub
sbb
push
jo
rcl
sub
sbb
loopne
xor
shlb
test
addl
sub
or
mov
dec
dec
repz
clc
xor
cmp
nop
adc
mov
shrb
sbb
lahf
call
je
sub
inc
sub
push
sbb
cmp
fs
or
sbb
mov
add
pop
insb
in
rcr
les
aaa
shrb
je
ljmp
mov
sarb
sub
or
or
inc
pop
xor
adc
sub
inc
mov
or
inc
sub
addb
cltd
or
insb
mov
sub
mov
fs
dec
imul
inc
sub
loopne
mov
add
cli
enter
inc
adc
sub
inc
inc
aaa
mov
es
imul
sub
nop
sub
das
dec
xlat
ss
rcrb
fs
xor
popl
sbb
ljmp
adc
shrb
inc
inc
push
call
or
sub
push
sub
stos
addl
stos
sub
push
fs
dec
sbb
fdivs
inc
inc
sub
pop
or
call
sub
push
outsb
sbbl
sub
or
pop
or
dec
sub
push
sub
je
mov
xor
add
mov
out
imul
jo
adc
or
aam
sahf
and
movsl
test
fldcw
rclb
push
pop
ss
jp
sub
rcl
cmpl
sub
push
rclb
and
popa
xor
push
shl
add
sub
sub
adc
add
sub
aam
or
rclb
mov
cltd
jbe
sub
inc
sbb
sub
sbb
or
aaa
xor
sub
and
add
push
movl
scas
addl
test
call
mov
sub
sub
pop
add
push
mov
sub
test
rcl
adc
and
or
xor
or
sub
add
int3
sbb
lock
push
sbb
add
test
or
or
bound
add
ss
xor
fucom
pop
push
sbb
fistpll
sbb
in
call
push
sub
mov
push
inc
inc
lret
jo
inc
imul
pop
mov
pop
imul
sub
aam
out
je
cs
xchg
xor
add
sti
lret
shrb
out
mov
shrb
and
add
cwtl
adc
stos
cmp
xchg
and
inc
inc
out
pop
sub
and
mov
ret
imul
jp
jp
sbb
push
nop
mov
bound
je
rcl
sbb
xorb
mov
js
or
mov
sub
or
addl
jg
sub
bswap
imul
mov
out
mov
xor
sbb
sbb
sbb
sbb
pop
dec
rcrb
sbb
cmp
inc
lret
lcall
call
adc
loope
dec
push
popa
jo
push
or
cmp
cmp
daa
adc
xchg
mov
push
lods
pop
fdivs
mov
ffree
sub
push
inc
sarb
mov
and
pop
push
dec
add
add
mov
ret
das
mov
push
jno
xchg
mov
xchg
mov
xlat
or
inc
out
push
mov
dec
dec
inc
add
mov
pop
out
inc
push
sub
sbb
cmp
push
dec
lock
jbe
lods
ret
sub
jmp
enter
adcl
pusha
add
mov
pusha
mov
stos
ja
ja
mov
xor
movntq
add
inc
dec
fs
nop
sub
add
pop
sbb
add
jp
xchg
add
sbbb
xchg
enter
add
xlat
adc
xchg
dec
jae
mov
xor
les
rolb
cmpsb
cmpsl
or
mov
push
mov
mov
bound
inc
pushf
or
cmpsl
lcall
pop
in
or
dec
mov
in
sbb
push
sub
dec
dec
orb
testl
js
movsb
jnp
dec
test
out
subl
add
xor
dec
nop
xchg
pop
out
insb
cmp
push
dec
sbb
faddl
push
jae
push
push
sbb
dec
inc
mov
mov
leave
ret
ljmp
movsb
xor
out
or
call
pop
inc
xchg
push
shr
rolb
jl
loopne
or
in
cli
stc
test
sbb
fmull
dec
arpl
dec
ret
or
mov
inc
push
jo
test
and
arpl
mov
leave
xchg
add
adc
es
nop
push
cwtl
pusha
arpl
add
fwait
roll
das
push
loopne
or
out
or
scas
or
enter
cmpsl
loope
jl
inc
stc
push
js
add
notb
and
int
jbe
lcall
stos
xchg
fbld
dec
or
sub
or
pop
ret
jmp
psubsb
adc
roll
jge
jbe
fimuls
call
push
cmpsl
pop
jmp
nop
into
addr16
and
inc
mov
out
add
push
cwtl
dec
addr16
sbb
sub
push
inc
xchg
ret
ret
aam
mov
pop
rcrb
popa
dec
or
rclb
dec
ja
mov
sbb
popa
out
fistpl
rcrb
pop
inc
sub
adc
pop
push
add
push
sbb
and
fnstcw
mov
jo
popa
pop
and
or
sub
xor
cld
push
sub
inc
loopne
add
and
or
jmp
push
mov
imul
pop
clc
cs
call
ja
sbb
scas
xchg
pushf
gs
popa
xor
or
pop
jo
mov
inc
leave
mov
adcl
and
clts
ja
xor
and
sbb
inc
inc
adc
nop
adc
fstl
or
and
insb
inc
call
nop
jnp
aaa
adc
lea
adc
nop
fs
jmp
mov
sub
mov
add
sbb
adc
daa
cmpsl
cmp
adc
les
adc
aam
pop
adc
daa
adc
sbb
inc
jle
push
jo
call
mov
add
xchg
mov
call
movsb
mov
cli
add
incl
jl
je
sbb
cmp
sahf
xchg
and
int
add
push
pop
xchg
leave
mov
adc
pop
inc
pop
loopne
xchg
push
ljmp
pop
mov
cmp
adcl
mov
imul
add
pop
push
lods
pop
push
jns
push
cmp
xor
rolb
add
mov
out
call
adc
or
fiaddl
adc
mov
out
adc
sub
jnp
or
and
adc
mov
repnz
push
cld
mov
nop
inc
and
add
jmp
incl
sarb
aam
mov
inc
mov
xor
push
inc
call
setl
inc
mov
and
call
add
fsubl
xor
test
les
or
jne
add
dec
jge
movb
outsl
pop
xor
jne
insb
cmp
add
cmp
inc
jmp
lock
dec
jmp
xor
push
addb
shr
arpl
inc
jmp
inc
inc
inc
pop
je
pop
adc
mov
add
adc
cmp
and
or
push
push
orl
mov
add
push
mov
xorb
daa
cwtl
push
add
je
rcrl
pop
and
cmp
leave
or
push
mov
jbe
fcmovne
call
xor
inc
jmp
fidivs
add
adc
push
outsb
ret
cli
enter
pop
arpl
and
cli
or
nopl
add
in
pop
enter
push
mov
add
loop
pusha
popa
push
mov
dec
addl
inc
fs
ss
cmp
xlat
push
adc
or
inc
inc
shl
sbb
pop
jb
cmp
negl
shl
pop
fisubrs
jge
push
push
sub
std
dec
mov
pop
xor
xchg
aam
aam
fisttpll
jmp
cmp
xor
jnp
add
lock
push
add
or
ret
push
sar
inc
push
adc
xlat
test
cmp
in
insb
cmp
shlb
mov
cmc
inc
adc
sub
pop
jb
jp
cmpl
addl
dec
nop
adc
jge
add
aaa
sbb
jge
xorl
xor
and
pop
pop
sbb
test
jb
stos
popa
cmc
add
mov
jecxz
add
popa
xchg
mov
add
pop
add
sahf
in
sub
inc
xor
cmp
mov
shlb
push
add
lock
adc
adc
or
popl
ret
jo
adc
enter
int
fs
aas
push
cmpsb
rcrb
xor
push
les
mov
jle
adc
setb
push
mov
mov
pusha
js
mov
shll
loopne
inc
daa
sbb
fldcw
xlat
cmc
fists
xchg
les
pop
icebp
xlat
sbb
mov
mov
test
xchg
lcall
xchg
mov
xorl
fnop
xchg
xchg
int3
pop
xchg
xchg
xor
lcall
cwtl
insb
call
repnz
cmpsb
jbe
pop
add
pop
bound
cmp
add
push
rcrl
pop
fwait
inc
xor
xchg
sub
xchg
sbb
and
or
call
mov
xchg
roll
lret
sarb
mov
adc
xor
xor
xorb
jp
les
fsubs
dec
pop
and
inc
rcrb
lret
mov
adc
mov
dec
sahf
xchg
repnz
ror
or
cmovb
add
pop
dec
ss
xchg
mov
or
imul
gs
cwtl
insb
call
pop
inc
loop
sbb
xchg
lret
xor
xchg
ret
push
dec
ss
xchg
push
or
ljmp
fbstp
fildll
cmp
ljmp
cwtl
xchg
pop
xor
rclb
xchg
out
xchg
xor
mov
out
fs
adc
shll
test
cmpsb
cwtl
insb
push
adcl
mov
add
insb
call
call
inc
inc
and
sbb
pop
rcll
push
xchg
sbb
adc
mov
fwait
mov
xchg
and
sbb
mov
jle
jb
or
roll
xor
or
aam
push
rorb
pushf
rorb
xchg
push
push
xor
and
dec
sub
jne
in
mov
and
sub
fnop
sar
hlt
call
daa
aaa
lcall
cmp
in
push
dec
call
es
cltd
outsb
push
ss
lcall
push
dec
cltd
xchg
lcall
test
adc
in
sarl
adc
je
push
mov
pop
and
iret
outsl
mov
lods
push
adc
call
aam
add
sbb
adc
movl
and
mov
call
push
mov
pop
cmp
add
or
mov
and
pop
lock
call
jbe
mov
mov
cwtl
and
push
sbb
jo
testl
addl
shlb
addr16
pop
mov
xor
daa
push
xor
inc
sub
movsl
ret
inc
push
sub
mov
mov
jno
or
scas
push
lds
sbb
push
mov
inc
dec
movsl
mov
and
adc
xchg
mov
xchg
mov
daa
jl
ss
dec
push
daa
jne
rcr
sub
test
mov
icebp
or
xlat
imul
in
inc
addr16
test
out
ljmp
add
pop
push
dec
pop
movsl
dec
sbbl
packuswb
out
outsb
std
mov
loopne
add
cvtdq2ps
push
and
push
inc
or
mov
or
pop
call
xor
insb
jmp
push
push
adc
int3
flds
sub
mov
and
xor
and
and
fldenv
fldenv
xchg
int3
ret
stos
cmp
dec
adc
neg
dec
call
cld
cs
xor
inc
in
pop
pop
lret
xchg
inc
outsb
popf
and
and
push
test
test
mov
add
adc
ret
add
adc
cmpsb
xchg
loop
cmp
push
test
movsb
int
inc
cmpsl
or
pushf
and
scas
movsb
inc
enter
xchg
lds
pop
xor
inc
jo
fldcw
adc
aaa
call
adc
xchg
mov
inc
mov
cmpsl
or
jecxz
sub
int3
dec
xor
into
mov
sbb
fnstcw
xchg
ficoml
ds
dec
jno
pushf
pop
adc
ds
popf
orb
fcomi
adc
jo
fsts
dec
adc
fldenv
dec
adc
test
sbb
cs
pushf
fnstenv
fsts
fstps
and
jbe
cmpsl
or
or
jne
or
mov
out
lcall
pop
jno
nop
fldenv
xchg
flds
add
mov
sbb
cmp
push
lea
dec
adc
adc
cmp
and
fldenv
fldcw
inc
das
push
lods
sub
fnstcw
mov
adc
shrl
inc
fldpi
sbb
inc
popf
and
lahf
jg
je
shrb
rorl
xchg
sbb
add
mov
popf
sbb
imul
sbb
int
mov
sub
and
imul
xchg
rorb
mov
sbb
stos
in
test
sub
outsb
jnp
or
mov
inc
call
xor
or
ficomps
inc
sub
les
test
mov
or
inc
or
adc
push
int
int3
sub
call
inc
push
adcl
sub
mov
and
pushf
xor
push
push
mov
xor
inc
insb
xchg
adc
fildl
sub
sbb
test
sarl
out
dec
mov
je
mov
mov
mov
pop
and
cmp
mov
sub
jbe
jb
fcmovbe
call
mov
mov
lahf
mov
dec
dec
pop
daa
or
cwtl
cmp
adc
stos
adc
sbb
push
daa
or
loopne
or
rcrb
xchg
push
fiaddl
pop
mov
cmp
or
or
mov
call
sbb
xor
sub
loop
ret
cs
aas
loopne
push
mov
sarb
call
or
xchg
pop
pop
and
jb
cmp
cs
lsl
hlt
add
push
fsubl
movsb
push
ret
pop
cmp
shlb
push
and
fisttpll
sbb
cmc
jns
jb
xlat
fsubl
fs
vpmadcsswd
mov
and
fdivr
fsubl
movsb
rcl
fs
mov
add
loop
pop
inc
sbbb
mov
or
cmp
mov
pop
fisttpl
aad
faddp
das
or
inc
andl
xlat
jae
pop
mov
es
dec
pop
rorb
jnp
xchg
jae
hlt
sbb
mov
mov
sbb
sub
add
mov
xchg
xchg
mov
cmpb
and
adc
ret
dec
lea
adc
rcl
push
jnp
imul
xchg
xchg
jnp
adc
lds
jnp
mov
jnp
and
jnp
mov
movsb
aam
jnp
push
popl
add
pop
ljmp
push
dec
adc
jno
add
inc
xchg
or
in
loope
loopne
pop
loop
pop
in
nop
jns
movsbl
jno
add
decb
or
adc
mov
dec
enter
mov
arpl
je
mov
and
mov
jnp
loopne
mov
je
cmpsb
sarb
js
mov
cmp
lods
adc
dec
mov
mov
and
dec
xchg
les
mov
jl
jecxz
add
and
and
outsl
nop
pop
or
adc
dec
dec
sub
push
mov
or
pop
adc
sti
inc
inc
sbb
mov
int3
je
inc
push
call
xor
shlb
dec
call
stos
sub
dec
sub
mov
mov
mov
call
ss
cmp
inc
pop
dec
aam
or
inc
sbb
xor
unpcklps
das
ljmp
ss
in
lahf
adc
and
adc
call
das
pop
scas
cld
xor
clc
lret
xor
lock
call
into
xchg
loopne
call
fwait
pop
int
inc
call
mov
repnz
mov
lods
andps
movsl
pop
call
jl
call
fs
in
xchg
jge
call
je
gs
call
pop
jl
push
movsl
shr
sub
sbb
cmp
sub
es
lret
test
push
sub
xchg
add
out
dec
in
mov
movsl
repnz
ret
pop
sub
lods
int3
mov
lret
xor
movsl
mov
jle
jae
jb
pop
loopne
in
pop
sub
inc
aam
movsl
jb
cmp
xor
test
clc
sbb
adc
lret
add
add
out
adcb
xor
adc
push
mov
lret
sbb
dec
rcrb
mov
mov
mov
jle
xchg
dec
in
jae
push
push
cs
push
inc
gs
rorb
dec
xor
pop
sub
push
sbb
movsl
jb
or
or
mov
or
add
cs
movsl
or
inc
pop
insb
and
daa
int
ret
mov
and
cmp
pop
pushf
and
mov
mov
dec
pop
je
data16
push
adc
xchg
xchg
data16
sbb
lcall
movsb
sbb
or
mov
lcall
cmp
cmp
dec
inc
test
pusha
in
sbb
dec
xchg
out
movsb
cli
mov
dec
mov
adc
add
push
shrb
and
adc
xorl
dec
and
mov
xchg
je
pop
inc
fs
xor
push
xor
mov
push
sub
adcb
pushf
lods
insb
inc
pop
pop
mov
lea
arpl
or
mov
inc
xchg
sbb
push
or
test
mov
arpl
mov
adc
arpl
push
and
mov
dec
sub
nop
or
add
add
pop
inc
or
sarb
in
les
pop
or
mov
inc
cld
ja
adc
push
mov
imul
xor
jae
sbb
add
das
inc
dec
pop
mov
xor
inc
shlb
call
or
push
pop
adc
adc
sahf
mov
push
call
sbb
push
jecxz
dec
xor
push
inc
pop
xchg
mov
sbb
mov
shlb
inc
push
lcall
pop
adc
push
mov
cmc
push
mov
stc
mov
mov
mov
push
and
or
sub
xor
shlb
push
or
cs
mov
xor
inc
out
add
push
js
mov
lods
add
fbld
fs
or
in
bound
sbb
push
ret
xchg
mov
outsb
pushf
rorl
stos
daa
inc
cmp
movsl
movb
pop
pop
popf
shll
outsb
test
je
shll
sub
fld1
dec
mov
inc
cmp
jne
sbb
mov
in
mov
mov
mov
ffree
inc
mov
cli
and
bound
rcrl
stos
mov
push
in
push
push
out
movsb
pop
mov
movsl
les
rorl
add
dec
cmp
sub
sub
rclb
or
add
xor
lods
pushf
xchg
sbb
dec
sub
xchg
sub
leave
dec
lea
pop
pop
dec
sub
push
call
and
sub
movsb
sub
sub
sub
add
xorb
js
xchg
sub
lods
cmp
or
sub
add
sub
and
fnsave
sub
sub
xchg
shlb
fisttpll
adc
sub
add
sbb
jnp
imul
push
sub
dec
dec
addr16
dec
dec
insb
pop
cmp
sub
mov
mov
push
and
sub
in
fisttpll
xchg
pop
sub
test
sbb
fwait
shlb
xchg
ret
movsl
lcall
and
out
rorl
lea
add
fwait
adc
sti
call
call
mov
jno
and
inc
call
mov
lds
pop
xor
push
test
sbb
and
addl
fwait
dec
js
jmp
push
test
xchg
leave
lods
add
mov
jne
rcrb
enter
nop
cmpsl
adc
push
adc
popf
cmpsl
ret
cmp
push
outsb
dec
sahf
adc
xor
jne
push
mov
pop
pushf
cmpsl
rcrb
je
shlb
jecxz
or
push
pop
and
or
push
jecxz
sarl
push
jno
jecxz
mov
shrl
xchg
sub
xor
lods
push
cwtl
or
loopne
mov
lcall
xchg
sbbb
or
xchg
and
es
mov
and
cwtl
or
test
out
mov
dec
xchg
imul
gs
inc
inc
fsubr
mov
popl
repnz
lods
mov
negl
call
add
push
mov
shrb
push
mov
nop
xchg
xor
mov
nop
outsb
sarb
mov
mov
mov
xchg
mov
adcb
xchg
inc
pusha
inc
or
xchg
push
pusha
inc
ja
lret
subb
cmpsb
sub
add
jl
in
popa
pop
mov
xchg
pop
inc
cmp
add
pop
fs
add
fs
mov
mov
add
xchg
add
mov
xor
call
mov
jbe
sbbb
lock
nop
xchg
aam
mov
or
push
xchg
imul
mov
pop
test
inc
xchg
stc
adc
ss
push
cld
add
jb
cmp
mov
cld
jb
ret
sbb
sahf
shr
das
mov
pop
je
push
or
sub
mov
cltd
test
test
mov
mov
test
das
dec
inc
inc
out
nop
dec
and
and
mov
les
movsb
repz
ret
add
call
icebp
sbb
fisttpll
add
add
adcb
pop
sbb
sub
mov
into
je
add
jle
loopne
shll
and
jp
cwtl
cmp
popa
adc
adc
lea
movl
dec
xor
inc
add
xor
or
mov
and
adc
xchg
and
adc
add
and
push
mov
scas
fwait
subb
jnp
loop
and
push
jnp
pop
pusha
loopne
pop
sahf
cmp
inc
jne
jnp
mov
faddl
add
jbe
pop
jmp
fwait
subb
jnp
and
push
loop
jnp
inc
add
push
sarb
shll
add
jnp
out
sbb
fwait
cmpb
sub
pop
xor
push
mov
cwtl
jo
jns
in
jb
popf
inc
inc
adc
mov
xor
mov
push
out
mov
jns
adc
pop
imul
ffreep
sbb
adc
mov
and
xchg
scas
and
push
lods
inc
xor
fs
jmp
imul
push
xchg
or
dec
inc
dec
xor
xchg
xchg
add
xor
rcrb
cmp
and
loopne
jb
or
test
cwtl
mov
mov
or
xor
mov
xchg
or
inc
push
adc
inc
pop
or
or
push
sub
addl
push
lahf
xor
xchg
push
mov
xchg
or
sbb
lahf
xchg
or
cs
fdivl
add
sahf
adc
stos
jmp
stos
sahf
sbb
or
jmp
adc
sbb
fstl
cmpl
mov
pop
mov
dec
xchg
fwait
jg
mov
sub
in
mov
popa
push
popf
dec
push
outsl
xchg
std
insl
push
mov
out
call
jno
xchg
cmp
sub
nop
xchg
out
sbb
adc
stos
add
inc
loope
mov
and
sbb
and
dec
inc
xchg
or
sub
rclb
adc
xor
lods
sub
push
xchg
add
rcrb
sbb
fisubrl
and
mov
sub
sub
adc
sub
rcrb
sahf
adc
mov
adc
repnz
xlat
fwait
pop
mov
mov
sbb
sub
dec
adc
mov
mov
inc
scas
cwtl
clc
adc
xchg
fwait
jge
lcall
fwait
insl
adc
adc
fildl
mov
js
push
shl
nop
xchg
jbe
jge
inc
ja
sbb
ret
std
add
sti
lcall
adc
xlat
ret
pop
or
or
icebp
in
pop
and
out
out
xorb
out
cs
mov
repz
mov
lea
cmp
xor
repz
add
jo
ss
pop
pusha
pushf
push
int
pop
enter
cltd
test
dec
mov
dec
addl
push
and
sbb
cmp
out
cltd
adcl
xorb
out
xchg
or
dec
lcall
xor
stos
jmp
and
xchg
rorb
js
add
push
mov
incl
rclb
and
dec
repz
and
sbb
out
sbb
ret
repz
sahf
mov
repz
repz
ds
or
jns
out
sbb
aam
push
mov
cmp
in
add
int3
loop
iret
jnp
clc
push
inc
push
push
sub
push
out
nop
movsb
push
push
xchg
jl
jns
jns
push
inc
cmpb
push
push
pop
dec
cmp
sbb
repz
push
repnz
fmulp
mov
cmp
mov
ret
into
sbb
out
out
jns
add
es
loop
iret
repz
sbb
sahf
sahf
out
cmp
outsb
pusha
sbb
jns
out
pushf
scas
lret
repz
repz
and
pop
iret
repz
data16
nop
sahf
lods
cmp
repz
rcr
in
inc
repz
push
inc
push
ror
cmp
jle
sahf
mov
jns
mov
daa
rol
loop
clc
adc
sub
cmp
aaa
je
fs
push
cmp
lods
clc
cmp
adc
daa
pop
mov
jbe
push
in
cmp
add
fwait
ret
fisubrs
cmpsl
insl
mov
iret
dec
test
scas
push
pop
repz
int3
xchg
push
jbe
push
scas
test
or
push
mov
or
bound
push
fiadds
pop
aaa
jo
dec
push
push
outsl
jne
xchg
xor
sub
inc
dec
sbb
out
imul
dec
push
rolb
jb
pop
mov
push
outsl
push
push
ja
addb
pop
fadds
xchg
lahf
mov
pop
insl
xchg
mov
xor
fstpt
jae
outsl
ss
add
push
xor
pop
js
add
negb
gs
add
sub
nop
out
xor
mov
push
out
mov
shr
es
dec
cmp
pop
or
das
xchg
aaa
or
cmp
mov
ret
and
addw
inc
mov
dec
lahf
sarl
jp
sbb
jbe
and
imul
add
adc
mov
sub
mov
es
ficomps
daa
add
out
sbb
cmp
mov
jg
loope
test
aas
ret
je
add
incl
aad
das
push
dec
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
push
out
push
mov
push
xchg
jb
inc
adc
xchg
mov
sub
sbb
pop
dec
ficomps
lods
pop
dec
imul
jo
xchg
mov
inc
jne
outsb
je
es
fbld
xor
fildll
ss
inc
xor
sub
pushl
inc
inc
sub
sub
inc
inc
xor
xor
xor
jge
fstpt
xor
xor
inc
xor
xor
ss
xor
leave
mov
fdivl
cmp
xor
clc
inc
inc
xor
mov
adc
xchg
push
lret
out
inc
add
gs
push
jo
or
aas
cmp
inc
inc
movsb
jg
in
xorb
xor
or
push
and
lock
xor
adc
xor
inc
pop
dec
sbb
or
jl
xchg
push
ficoml
push
cld
stos
mov
inc
push
dec
and
cmp
or
add
xor
and
aam
cmp
dec
outsl
mov
dec
adc
ret
pop
ds
pop
sub
push
push
sbb
inc
dec
hlt
imul
ficoml
pop
push
xor
push
out
adc
cmp
repz
sub
out
cmp
aaa
mov
in
in
mov
lods
sahf
add
movd
hlt
sub
pop
cmp
ret
test
xchg
inc
push
and
jg,pn
lret
cs
insb
outsl
xor
les
test
fwait
mov
je
push
push
cwtl
mov
sub
and
mov
cmp
cs
mov
sbb
xchg
fistpl
lea
mov
subl
inc
inc
neg
cmp
insb
mov
icebp
fsubp
inc
xchg
and
outsb
ret
les
push
push
or
les
lret
dec
inc
xor
arpl
jle
or
pop
popa
mov
pop
cltd
cmpsl
orl
inc
pop
jg
jp
dec
and
pop
cmp
xchg
pusha
push
and
dec
popa
jae
and
mov
push
imul
ljmp
jne
xchg
or
lcall
je
lods
popf
fisubrs
dec
fs
imul
push
rcll
jo
pusha
sub
jmp
add
push
sub
dec
movsb
jmp
imul
jae
outsl
push
pop
arpl
inc
cs
mov
push
push
add
ja
cmpsb
les
shlb
fsubl
add
popa
imul
test
dec
ds
sbb
fdivl
outsb
pop
add
inc
test
xor
pop
xchg
adcb
data16
dec
repnz
out
nop
inc
rolb
xorb
test
dec
rorb
ja
aaa
sbb
and
xchg
pushf
add
sbb
push
sbb
push
inc
or
out
mov
push
xor
out
mov
adc
int
jns
orb
or
add
sarb
push
adc
repz
dec
xchg
adc
push
sbb
out
lcall
sbb
cmp
call
das
push
pop
out
scas
stc
nop
cld
and
cli
mov
push
jns
stc
jp
jns
out
cld
fdivr
mov
out
popa
in
fwait
test
out
fists
sbb
mov
xor
xchg
sbb
adc
dec
sbb
jns
cmp
lds
iret
cltd
push
sbb
adc
repz
repz
cld
or
in
int3
repz
les
xorl
out
nop
sahf
out
fimuls
jo
sahf
out
insb
push
iret
repz
pop
push
push
dec
dec
inc
jns
repnz
cmp
xor
out
sahf
out
sub
sbb
out
sahf
sbb
or
add
dec
repz
cld
or
hlt
call
enter
repz
nop
jo
xor
lock
out
lcall
jl
out
sub
adc
cld
push
repz
rcr
rol
mov
out
cmp
js
sub
aam
lahf
out
sahf
mov
cld
add
repz
call
cwtl
jl
orb
lcall
test
pop
sbb
adc
cmp
inc
push
cmp
inc
xor
dec
adc
jbe
push
sub
inc
inc
add
adc
inc
mov
push
inc
dec
cmp
xlat
inc
adc
mul
xchg
mov
imul
add
out
popl
fiadds
jecxz
gs
push
mov
adc
adc
inc
mov
lret
and
andb
or
dec
dec
adc
cmpsb
rcll
imul
sbb
bound
sub
imul
mov
mov
jbe
or
call
sub
js
shrb
mov
pushf
andb
icebp
inc
sub
inc
mov
dec
ret
jns
xor
mov
jecxz
filds
push
inc
push
xor
xchg
cld
inc
inc
mov
inc
fwait
fs
inc
cmp
inc
cmp
pop
jne
adc
stc
sbb
ret
push
ror
test
pop
call
jne
imul
sub
arpl
inc
cld
and
imul
pop
jb
pop
push
gs
cli
jp
jo,pn
bound
pop
jne
xlat
cmp
xor
mov
ja
filds
push
insb
das
inc
fucomp
adc
dec
outsl
jl
mov
jns
add
mov
jg
das
cmp
sbb
loopne
xchg
loopne
sbb
push
jmp
sarb
add
in
test
mov
insb
test
jg
fs
pop
enter
aam
sub
ret
sete
pop
enter
data16
data16
ljmp
and
fcomps
and
xlat
jns
pop
in
pop
rcr
xorb
sti
cltd
ss
lcall
jmp
push
test
adc
or
push
popf
jl
and
xchg
loope
lds
lahf
jg
cmpsb
jg
adc
loop
xor
xchg
pop
xor
mov
aam
aas
vmptrst
daa
cmp
enter
in
shr
outsl
pinsrw
adc
mov
shlb
dec
jbe
in
jp
push
push
aam
insb
adc
fs
fisubrl
dec
mov
repz
loopne
daa
mov
dec
lock
enter
mov
loope
xchg
imul
pop
adc
lret
imul
xor
sbb
inc
je
dec
pop
adc
nop
imul
mov
ltr
std
stos
push
jb
push
lcall
sbb
push
and
clc
outsl
dec
insb
add
push
push
add
push
outsl
ja
xor
cmc
xchg
lcall
lret
gs
sub
add
ja
sbb
movsb
and
sbb
rol
dec
inc
repnz
sarl
test
lods
or
in
neg
ljmp
mov
add
mov
push
jb
or
mulb
insb
jae
shrl
arpl
add
outsb
push
add
push
imul
add
push
mov
jae
outsb
iret
mov
push
jae
push
popa
sbb
and
outsl
push
push
call
jb
inc
mov
pop
fmuls
out
adc
cmp
push
jae
inc
addb
push
jno
mov
push
add
and
es
dec
add
pop
rcl
dec
mov
inc
push
mov
push
push
sbb
das
push
mov
dec
or
cmp
push
jo
jb
js
out
fidivrl
imul
xchg
testb
cmpsl
cmp
push
lods
cmpsl
xor
mov
sbb
imulb
xchg
adc
mov
inc
and
pop
jnp
inc
pusha
inc
and
mov
push
inc
sub
and
in
lret
push
cmpsb
xchg
xor
testl
sub
adc
inc
add
adc
push
fbld
jne
ret
fisubs
gs
or
flds
test
subb
dec
stos
fstpt
stos
outsb
jecxz
jo
es
pop
push
ret
sarb
cmpsb
mov
dec
inc
dec
sub
cmpsl
jno
push
nop
pop
ds
inc
sub
xor
pop
dec
xor
dec
lock
or
push
jecxz
cltd
mov
call
sbb
out
mov
fidivrl
and
adc
jecxz
inc
push
call
popf
lea
lahf
outsb
xor
adc
and
or
dec
add
shlb
push
sarl
pop
outsl
sub
dec
mov
shrb
inc
add
stc
add
push
lcall
orb
mov
add
push
dec
dec
dec
bound
pop
pop
pop
add
inc
jns
insl
mov
arpl
lds
mov
lret
fimull
outsl
jl
sarb
xchg
dec
and
clc
aad
roll
push
adc
add
sbb
cmp
testb
sbb
lock
jecxz
mov
add
xchg
popa
xorb
push
js
loopne
mov
adc
mul
adc
mov
sbb
das
enter
sub
ja
js
aaa
dec
inc
dec
pop
or
shlb
sbb
inc
cmc
inc
sbb
in
sbb
inc
xchg
jno
mov
xor
enter
mov
add
inc
jp
pop
jnp
in
mov
stos
iret
add
jo
add
adc
jno
inc
rcl
sbbb
mov
movsl
cs
sub
add
aam
clc
dec
pusha
push
jo
mov
add
jno
cmp
dec
xchg
std
and
arpl
jmp
in
xchg
add
cmpsl
ljmp
dec
imul
adc
mov
iret
pop
add
pusha
dec
lret
je
xchg
into
out
inc
fwait
sbb
outsl
inc
cmpsl
add
push
jo
jo
mov
imul
pop
sub
push
and
jns
cmp
add
jae
push
inc
jmp
adc
add
je
ja
jno
sbb
add
xor
das
cmp
shlb
sub
dec
mov
mov
lods
pop
sarb
pop
mov
out
into
insb
sbb
add
lcall
push
enter
imul
sbb
and
fistpll
jae
cmp
pop
ficomps
mov
push
popa
je
mov
and
push
sbb
and
adc
aam
push
jecxz
inc
rcl
insb
out
push
pop
and
daa
sub
sbb
inc
and
pop
add
mov
pop
push
insb
push
xchg
push
xchg
push
punpcklbw
sub
sbbb
arpl
jp
add
and
movsb
push
cmp
mov
add
mov
rclb
add
rorl
in
inc
dec
add
inc
cmp
cmp
xor
sti
fcoml
dec
jns
ret
int3
lcall
out
xor
stos
add
pop
hlt
mov
pushf
jo
or
inc
adc
and
mov
xchg
inc
lods
dec
push
adc
sbbb
lcall
out
pop
xchg
or
sarl
add
out
lock
cmp
enter
out
iret
repz
test
pop
mov
pushf
cwtl
xchg
nop
mov
jo
pusha
push
pop
repz
repz
inc
cmp
and
stc
cmp
and
cld
in
lock
sub
daa
call
repz
fcom
enter
cmp
repz
mov
repz
repz
sub
sbb
stc
cmp
adc
add
in
hlt
sahf
out
sahf
in
in
int3
mov
jge
in
pop
xchg
push
mov
js
iret
repz
out
inc
sub
and
or
add
loopne
push
adc
inc
es
add
adc
add
jo
push
push
addr16
mov
push
mov
jnp
lcall
xor
testl
cmp
loopne
callw
mov
addr16
add
ja
push
aaa
maskmovq
mull
jp
add
adc
add
fildl
add
test
pop
jg
fs
inc
dec
push
xor
pop
mov
mov
xorb
shlb
inc
push
mov
scas
push
imul
iret
pop
je
push
jae
xor
test
cs
and
addb
insl
mov
push
pop
jo
add
add
xor
add
push
adc
add
mov
push
push
jae
and
sub
icebp
pop
adc
xor
and
addb
xor
xor
rclb
and
cmp
pop
xchg
pop
rorb
fwait
xor
insl
mov
and
push
sbb
xchg
imul
sbb
cmp
pop
loope
and
and
add
jbe
add
sbb
jb
jne
sbb
mov
popa
insb
into
fdivs
das
sti
sbbl
jmp
push
sbb
inc
add
inc
pop
pop
adc
in
and
aam
add
xor
xor
sbb
bound
loopne
sbb
das
xor
pushl
xorb
xor
xor
xor
xor
xor
xor
movsb
xor
xor
xor
xor
pushl
xor
xor
xor
xor
xor
xor
dec
xor
xchg
shll
pushl
dec
ss
es
dec
aaa
push
aaa
mov
iret
aaa
call
aaa
adc
lcall
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
or
out
out
cmp
cmp
cmp
sub
ret
add
push
lock
idiv
shr
cmpb
xchg
add
adc
and
dec
pop
lock
pushl
push
xor
xor
js
popf
xor
xor
xor
xor
decl
push
xor
xor
xor
xor
xor
xor
loopne
jmp
jge
xorl
xor
jge
mov
xor
xor
fidivl
cld
mov
les
fnsave
out
xor
ljmp
jno
cltd
ss
ss
ss
aaa
sbb
jno
mov
leavew
cli
shll
out
cmp
pop
cmp
outsb
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
push
cmp
jl
cmp
nop
cmp
cmp
cmp
push
adc
cmp
cmp
nop
hlt
cmp
cmp
pop
cmp
imul
cmp
cmp
incl
ds
jo,pt
test
mov
aas
adc
xor
inc
aas
popa
aas
addl
aas
cltd
aas
mov
les
into
aas
out
jmp
repz
cmp
pop
xor
xorb
xor
fdivs
fnsave
ljmp
pushl
mov
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
incl
add
daa
xor
xor
xor
pop
xor
jo
xchg
xor
call
xor
xor
xor
xor
xor
xor
xor
xor
push
aaa
push
lcall
sub
ss
clc
loop
cmp
cmp
cmp
mov
mov
cmp
cmp
dec
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
xchg
aas
adc
clc
inc
aas
pop
aas
ja
pusha
pop
mov
xor
pop
xor
push
xor
cmpl
in
xor
xor
xor
xor
ret
lock
push
xor
xor
lcall
clc
xor
xor
aas
xorb
xor
xor
out
in
xor
scas
outsl
mov
xorl
xor
cmp
pushl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jp
loop
loop
cmp
cmp
std
cmp
cmp
jg
test
sbb
cmp
cmp
ds
ds
andb
outsb
xor
xor
pushl
cmp
ss
ss
xchg
cmp
cmp
mov
mov
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
js
cmp
dec
aas
push
mov
cmpb
aas
sarl
aas
in
cs
mov
and
sub
mulb
xor
xor
xor
fisubrl
jg
xor
xor
loop
xor
xor
xor
mov
lcall
jge
xor
xor
scas
std
xor
cmpsb
data16
ss
ss
pushl
or
aaa
and
aaa
dec
aaa
dec
aaa
push
aaa
pop
sbb
pushl
imul
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
xchg
decl
cmp
pusha
cmp
mov
cmp
cmp
sbb
push
clc
pop
cmp
inc
cmp
dec
cmp
popa
cmp
cmpb
cmp
jg
nop
cmp
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
bnd
adc
pushl
cld
cmp
cmp
cmp
adc
inc
cmp
push
cmp
pop
cmp
jb
js
cmpl
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ret
mov
dec
cmp
inc
cmp
pop
cmp
push
cld
decl
cmp
mov
jp
jg
cwtl
ds
ds
jecxz,pt
sbb
out
ds
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
jmp
daa
or
push
xor
insl
stos
lcall
sahf
xchg
les
fidivl
in
hlt
jg
mov
and
sub
cmp
jb
mov
jg
pushl
lret
xor
xor
xor
xor
mov
jl
cmpsl
xor
clc
fnsave
add
scas
jno
xchg
xor
xor
xor
std
mov
push
xor
xor
mov
ret
aaa
xchg
aaa
fwait
hlt
jg
jge
cmpsb
mov
bound
scas
cmp
ss
scas
jp
cmp
fdivrl
aaa
cmp
jmp
fistpll
in
mov
or
cmp
cmp
cmp
cmp
aam
adc
sbb
xor
pop
and
or
xchg
cmp
add
pushl
bound
data16
push
outsb
aaa
jb
jbe
xchg
ja
js
jge
cmp
ljmp
cmp
cmp
cmp
cmp
cmp
jle
mov
and
cmp
ja
lahf
xor
xchg
aas
loopne
cs
push
mov
insl
xor
jg
mov
fidivs
xor
xor
jl
filds
cmpsb
cltd
aaa
mov
ret
aaa
jmp
bnd
or
cmp
pop
cmp
jge
mov
fsubrp
cmp
cmp
jbe
xchg
cmp
cmp
cmp
mov
std
fistpll
cmp
cmp
cmp
fdivrs
push
aas
jne
mov
jg
mov
mov
fwait
xor
xor
jl
pop
pop
dec
or
repnz
aas
xor
fcomip
or
divl
pop
xor
fsub
adc
call
pushl
es
dec
ss
outsb
notb
ss
in
and
cmp
lods
decb
xchg
cmp
mov
mov
push
cmp
pop
pop
loopne
or
cmp
jne
test
mov
ret
pop
cmp
cmp
push
cmp
pusha
data16
aam
push
std
cmp
cmp
jp
mov
cmp
cmp
pop
sarb
inc
cmp
dec
cmp
mov
and
push
subl
scas
ds
ret
idivl
add
sbb
test
push
sahf
loope
rol
sar
jl
xor
xor
pop
xor
xor
cmp
or
jmp
xor
xor
xor
xor
xor
mov
xor
push
jg
mov
aaa
xor
ds
dec
aaa
pop
aaa
js
mov
stos
cli
fidivl
out
scas
decb
lock
aaa
cli
aaa
mov
cmp
mov
or
mov
fstpt
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
jbe
cmpl
cmp
cmp
ss
call
cmp
and
pusha
aas
cmpb
aas
fdivrl
loop
out
out
pop
shl
mov
jne
adc
xor
jae
cmp
jne
jg
xchg
xor
xor
xor
daa
pop
hlt
popf
fdivr
xor
xor
ljmp
or
loopne
adc
adc
sbb
sbb
sub
sub
nop
cmp
call
mov
cmp
cmp
cmp
cmp
cmp
ljmp
push
out
xor
aaa
clc
incl
into
cmp
inc
xor
xor
inc
add
jl
mov
ljmp
xor
les
int3
mov
xor
xor
xor
and
and
sub
sub
fbstp
cmp
push
sarb
inc
cmp
cmp
cmp
adc
rcrb
cmp
inc
mov
sub
je
js
jl
cmpb
cmp
adc
push
loope
push
push
rcr
cmp
mov
cmp
stos
scas
sarb
mov
cmp
inc
lock
dec
shr
mov
sahf
or
adc
pop
cmp
jg
cmp
cmp
sub
sub
xor
cmp
jg
icebp
cmp
inc
xchg
dec
cmp
pop
cmp
pop
incb
cmp
insb
cmp
je
jl
cmpb
push
pop
pop
lcall
mov
jmp
cld
ds
xor
inc
mov
push
aas
push
aas
xchg
aas
cwtl
aas
lods
aas
call
aas
shrb
aas
fdivrs
loopne
clc
jbe
jg
jge
push
or
xor
xchg
xor
fildll
clc
xor
xor
inc
xor
xor
cwtl
xor
xor
xor
cld
push
popa
ret
cmpsb
cmp
loope
es
mov
jb
inc
xor
sbbb
jae
pusha
cmpsb
and
fimuls
xor
cmpsl
fbld
ss
sahf
int3
shlb
aam
fdivs
lcall
ss
call
ss
ss
add
add
or
or
adc
aas
cli
pop
adcb
sbb
and
and
sub
sub
xor
cmp
call
aaa
inc
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
pop
test
mov
aaa
test
mov
nop
aaa
xchg
aaa
cwtl
mov
mov
aaa
test
mov
mov
mov
inc
aaa
les
enter
shlb
aam
fdivs
fcompl
in
inc
pop
and
out
aaa
hlt
xor
aaa
hlt
push
loopne
jno
cmp
adc
adc
sbb
cmp
into
ret
fdivrl
call
and
pop
cmp
cmp
cmp
idiv
jmp
sub
cmp
cmp
cmp
cmp
push
cmp
pop
stos
jl
test
mov
lcall
test
lods
cmp
mov
cmp
adc
pusha
add
or
and
jg
or
mov
jne
call
pop
jle
sahf
repnz
shufps
lock
lahf
lahf
mov
insl
es
jb
pop
out
es
cld
fs
rcr
pop
cmp
cltd
add
lret
push
inc
enter
inc
add
add
jae
dec
xorl
fsubs
push
add
sbb
push
stos
dec
or
xor
xor
add
xor
fs
add
sub
xchg
or
fisubrs
sbb
rcrb
repz
dec
sahf
ja
sahf
add
fists
rolb
dec
add
sub
jg
and
push
imul
stos
loope
sub
pop
adc
mov
inc
sbb
or
out
orb
jmp
sub
or
bound
or
sub
test
jae
dec
insb
fsubrl
push
shl
jb
pop
sbb
shrb
js
add
pusha
mov
jne
push
mov
les
pop
out
dec
fs
mov
out
mov
enter
adc
mov
push
push
cmp
je
xor
in
pusha
inc
xor
dec
sbb
insb
rcr
test
jge
push
and
pop
fisubrs
push
sbbl
push
push
xchg
xor
and
adc
pop
stos
or
pusha
fistps
jns
addl
mov
mov
sbb
shll
leave
sub
je
cmp
outsb
int3
push
add
dec
shl
inc
jp
add
cs
and
pushf
or
xor
bound
insb
std
mov
inc
mov
mov
cmp
and
and
jae
pop
orl
mov
jne
jge
cmp
rcr
popf
pop
inc
lahf
xchg
fildl
cltd
xchg
add
pop
push
push
adc
and
cmpsb
mov
fwait
xor
push
push
mov
mov
mov
dec
adc
adc
lea
push
push
scas
or
insl
pop
jb
cmpb
insl
fsts
js
cmpsb
add
fs
fildll
add
rolb
fcoml
mov
pusha
jbe
movsb
outsb
movsl
xor
push
mov
icebp
shrl
push
mov
std
inc
cmp
inc
push
mov
mov
fisubrl
lahf
fidivs
inc
cmp
andb
call
mov
sbb
nop
pop
cmp
js
add
in
nop
inc
or
mov
mov
mov
add
lcall
mov
push
mov
jo
inc
and
adc
test
sbb
push
frstor
mov
add
in
and
int3
mov
mov
jmp
lock
push
push
loop
shl
test
adc
add
adc
es
inc
shr
jg
pop
or
push
add
fmuls
push
xor
jo
jl
fisttpll
add
xchg
aam
pop
push
subl
ja
dec
cld
sub
or
jge
outsl
loopne
int
cmp
xchg
or
xchg
test
xchg
mov
and
xchg
and
or
mov
cmp
stos
lret
push
push
aad
or
cmc
mov
lock
out
fcmovnu
xor
movsb
add
jge
or
add
pop
mov
hlt
das
add
pop
or
or
leave
push
push
in
orb
cmp
rcrb
push
fs
and
mov
and
lock
shrb
jmp
xor
out
and
loope
inc
or
jge
in
out
orl
call
push
and
gs
adc
je
jp
dec
push
dec
push
sub
in
pop
rorb
push
mov
push
sbb
inc
inc
pop
xchg
ret
dec
es
movlps
imul
cmpl
or
xchg
and
adc
xor
adc
pop
pop
hlt
sub
movsl
sub
fs
test
test
push
ret
xchg
jo
jl
or
push
adc
dec
ret
fistl
pop
call
pop
add
xor
push
mov
lock
xor
or
mov
pop
inc
or
lock
jl
adc
adc
lds
inc
or
shlb
push
ja
and
idiv
dec
inc
into
jg
movsl
stc
jbe
addl
or
xor
sbb
mov
ret
push
psubsw
mov
add
or
leave
into
sub
add
jge
fnsave
jno
cmpsb
xchg
mov
mov
shll
call
add
ret
sbb
aam
mov
jnp
rolb
and
inc
fnstsw
push
ja
insb
addr16
adc
dec
and
add
movsl
adc
or
mov
push
dec
add
pop
cmpsb
or
roll
in
imull
add
imul
add
push
add
pop
push
pop
movsl
lea
pop
ds
adc
sub
in
pop
mov
lods
aad
mov
call
adc
je
sub
push
bound
sbb
mov
and
jbe
sbb
sbb
mov
or
int3
mov
int
addl
or
sub
sbb
mov
cmp
xor
out
loop
lods
int
outsb
mov
mov
cmp
cmp
jae
dec
testb
fildl
and
or
imul
cmp
rcl
add
in
pop
enter
lods
sbb
cmp
dec
outsb
sub
lods
pop
cmpsb
sub
repnz
sub
or
mov
adc
pmaxsw
or
push
arpl
fsubs
push
mov
push
jmp
lea
aam
lock
mov
stos
hlt
pop
ret
inc
popf
in
cmp
ds
out
cmp
dec
stos
movsl
mov
mov
pushf
stos
test
lret
mov
lea
sub
mov
and
xchg
push
push
lret
mov
outsb
add
mov
push
subl
xchg
rol
push
add
loope
pop
xchg
sbb
push
push
xchg
xor
sbb
add
pop
daa
notb
sbb
es
lock
out
scas
popa
or
outsb
addb
or
pop
movsb
xchg
adc
gs
sbb
sbb
xchg
nop
scas
dec
pop
pop
pop
sub
scas
jge
jmp
or
lods
cmp
and
mov
sub
jmp
scas
call
popl
mov
mov
sbb
or
nop
jne
and
addb
adc
sbb
addr16
ss
mov
pop
mov
dec
mov
or
lret
sub
adc
xchg
out
cmpsb
test
mov
cmpsl
popf
mov
push
sub
jmp
stos
inc
pop
call
or
test
adc
es
inc
stos
clc
loope
dec
dec
push
call
incb
pop
push
jne
arpl
pop
fdivr
mov
dec
and
fadds
inc
or
pop
xor
jge
call
push
add
mov
and
xlat
inc
les
addb
icebp
sub
adc
mov
add
sbb
cmpb
sbb
and
jg
or
pop
inc
xor
cmpsl
cs
sbbl
sbb
loop
and
sbb
adc
addl
dec
mov
or
or
lret
xor
pop
jle
mov
sbb
je
pop
and
and
or
cmp
add
xchg
or
inc
mov
scas
add
mov
cmp
out
sub
cmp
xor
pop
add
dec
or
dec
mov
jge
mov
xorb
cmpsl
and
ds
gs
pusha
pop
inc
sub
fisttpll
pop
inc
mov
pop
push
mov
ret
or
add
addr16
shld
jo
mov
fnstcw
pop
mov
mov
insb
lret
xchg
enter
mov
jae
bound
pop
pop
xchg
pop
dec
pop
mov
pop
xchg
and
cmp
nop
nop
push
adc
rolb
hlt
pop
push
pop
sub
mov
mov
fidivrs
push
pop
push
dec
or
jns
inc
cmp
or
sbb
jmp
jns
movsb
mov
sub
sti
pop
int3
and
pop
out
fstp
and
pop
nop
xor
push
push
jl
subl
push
jo
pop
push
mov
mov
repz
cmp
fadds
loopne
lock
rolb
push
pop
out
sbb
inc
sub
xor
inc
add
or
dec
in
out
push
push
or
and
stc
rcl
add
loopne
push
jns
rclb
and
dec
sbb
hlt
inc
push
sbb
rcrl
adc
push
mov
adc
test
or
mov
pop
or
xchg
push
test
hlt
push
hlt
mov
stos
pop
push
add
dec
mov
ret
xchg
inc
sub
lcall
enter
sub
sub
shlb
sub
sub
inc
xor
jb
sub
sub
sub
add
sub
sub
sub
and
nop
sub
cmpsb
jns
inc
sub
sub
xchg
xchg
sub
sub
pop
xchg
sub
dec
shll
sub
lcall
adc
movsb
imul
and
dec
testb
movsl
filds
or
sbb
mov
inc
pusha
or
mov
sbb
mov
subb
cwtl
popa
repz
jns
mov
push
addl
inc
inc
stc
push
scas
or
lcall
or
sub
sahf
sbb
xchg
push
fs
adc
inc
psubsb
je
mov
push
inc
and
es
mov
inc
shrb
or
cmc
cmp
cmp
inc
repz
sti
stos
rolb
mov
add
inc
les
stos
inc
cwtl
pop
nop
or
inc
jo
nop
dec
pop
hlt
ds
inc
mov
mov
iret
push
xchg
in
subb
nop
adc
mov
push
je
inc
adc
iret
inc
and
in
roll
addb
inc
out
pop
rorb
and
sahf
test
push
notb
shl
xor
inc
xor
jle
les
cmp
and
je
into
mov
adc
aam
inc
shrl
ret
call
inc
inc
add
or
cltd
mov
add
jmp
dec
xchg
jp
filds
pop
mov
daa
adc
mov
cmpsl
cmpsl
cld
add
and
add
pop
push
and
xor
adc
jnp
jns
mov
jns
sbb
loope
pop
add
loop
in
js
xor
mov
inc
js
roll
jno
inc
jns
adc
jmp
lcall
add
xor
xchg
mov
js
adc
pop
jns
sbbb
and
outsl
sbb
les
jns
sbb
inc
loop
into
daa
jns
leave
mov
jbe
sub
sbb
xchg
sbb
bound
and
pop
sbb
jns
adc
ja
xchg
jns
ljmp
icebp
sbb
xchg
cwtl
jns
mov
icebp
outsl
cltd
adc
shll
popf
sarb
fbstp
push
push
xchg
xchg
jp
ret
mov
push
mov
xchg
jmp
outsb
cmpsl
push
push
mov
push
out
cmp
fs
mov
mov
or
call
jb
sbb
in
add
rolb
adc
push
in
mov
lret
ret
mov
cmp
enter
pop
jl
mov
xor
and
pop
lcall
push
fst
popa
push
sbb
mov
mov
sbb
out
or
fsubrs
ljmp
push
idivb
push
in
ficomps
or
aad
cwtl
dec
mov
xor
mov
lret
adc
call
xchg
nop
or
mov
and
dec
mov
add
inc
call
outsb
and
pop
stos
lea
adc
push
fs
xor
jb
mov
pop
aam
push
movl
popa
lret
dec
enter
xor
cmp
daa
mov
dec
jae
das
push
nop
xlat
mov
mov
and
dec
nop
bound
in
jnp
cmp
pop
pop
ret
or
xorb
add
icebp
mov
mov
and
sarb
aam
sbb
sbb
and
outsl
fistl
pop
daa
in
outsb
mov
xor
sub
cs
push
push
nop
push
sub
leave
into
mov
mov
xchg
adc
dec
or
mov
inc
rorb
nop
mov
je
xchg
lcall
sbb
mov
sbb
push
ret
adc
mov
adc
or
mov
xor
ret
mov
pop
and
ds
pop
adc
arpl
xor
shlb
mov
mov
xor
xor
sbb
mov
mov
inc
mov
pop
cmp
dec
and
xor
repnz
or
xorb
mov
lock
aaa
xor
mull
xchg
cmp
enter
inc
cmp
add
mov
scas
call
adc
jno
dec
pop
call
adc
in
aad
std
jo
inc
nop
into
add
cwtl
bt
lret
enter
sbb
pop
movsl
aam
dec
dec
popf
adc
sub
jb
aam
aad
pop
add
dec
aad
test
jmp
pop
cmp
mov
and
movsb
aad
fnstsw
and
test
dec
jl
mov
inc
pop
fistpl
push
pop
xor
inc
cli
call
mov
mov
xor
aad
xchg
stos
inc
lahf
enter
dec
enter
dec
mov
aad
sti
pop
enter
xor
xchg
lahf
sbb
cwtl
add
cmpsb
jmp
xor
fisubrs
fiadds
mov
mov
frstor
jo
ret
xor
pop
bound
jmp
or
das
sub
or
mov
sub
sbb
pop
or
cmp
lret
call
ret
add
ljmp
dec
pop
enter
push
lcall
and
push
mov
dec
lock
out
pop
fcoml
lret
push
nop
pushf
test
cmp
jp
push
int3
pop
fmull
sarb
fs
and
or
mov
push
enter
jp
pop
or
cmp
hlt
push
dec
loope
popl
call
add
das
shl
xlat
dec
and
leave
sti
sub
jb
loopne
out
loopne
je
mov
bnd
fcoml
pop
movsb
jmp
xchg
push
xchg
xchg
add
xchg
xchg
or
fwait
roll
hlt
dec
jge
das
sbb
stc
loopne
loope
pop
clc
adc
mov
std
mov
lea
stc
ret
stc
jecxz
loope
push
stc
mov
push
mov
call
mov
pop
pop
xor
fcoml
aas
je
mov
stc
pop
ds
xor
push
stc
push
fcomps
in
dec
push
call
nop
mov
mov
cmp
stc
adc
fstp
push
jb
ds
frstor
sbb
push
mov
daa
mov
pop
rcrl
leave
stos
jmp
and
lret
repnz
fcoml
mov
inc
pusha
jne
ret
pop
jmp
mov
rep
jmp
jecxz
push
aaa
gs
data16
pop
stc
sub
je
add
fcmovnu
fcmovne
xor
jae,pn
call
adc
aas
jne
sbb
mov
lock
cltd
outsl
imul
aas
iret
aam
leave
jns
outsl
adc
inc
enter
adc
call
stc
adc
add
push
xor
sbb
popa
pop
mov
pop
sub
sbb
sub
mov
adc
ret
call
jp
adc
xchg
and
fdiv
je
test
sub
jge
sbb
cld
push
inc
xchg
and
xchg
js
jl
aad
dec
movsl
addb
lods
shll
subb
and
mov
push
and
rcl
and
mov
or
rcr
pushf
stos
sbb
fldl
je
sarb
mov
pop
xchg
jno
dec
push
lret
shrl
ret
adc
ljmp
mov
pop
adc
or
test
imul
sbb
shll
mov
sbb
jae
lock
les
push
sbb
mov
stos
orb
rolb
xchg
insb
inc
inc
push
push
test
mov
pop
add
inc
cmp
cmp
rclb
in
xchg
pop
pushf
push
out
adc
push
fdivs
xorl
adc
repz
mov
hlt
xchg
pushf
cmp
movsb
adc
fmull
xor
xor
mov
xchg
pop
adc
adc
adc
adc
addl
or
sub
lahf
in
pop
or
pop
into
add
leave
and
xchg
cmp
aam
roll
fldenv
sarl
xor
fst
sbb
xchg
lods
inc
iret
jbe
adc
movsl
shrb
sub
xlat
adc
sub
dec
push
inc
or
adc
dec
add
sub
adc
mov
ss
movsl
movsl
insb
add
adc
inc
mov
xchg
adc
das
mov
mov
lcall
xchg
int3
xor
stc
outsb
imul
or
push
adc
xchg
cltd
fnstcw
mov
mov
push
imul
inc
sub
mov
adc
adc
int3
mov
jge
out
mov
inc
cli
mov
push
imul
shlb
bound
mov
jl
mov
add
mov
ficompl
jnp
in
and
push
dec
sbb
or
xor
dec
aam
dec
push
fcoml
push
lret
pop
adc
and
adc
push
cmpsb
mov
cmpsl
or
inc
mov
lea
and
dec
in
daa
jp
orl
sub
imul
mov
sarb
push
dec
mov
daa
jae
das
lcall
pop
orl
jp
cmp
dec
dec
out
pop
fnsave
in
shrl
xor
cmp
subl
mov
cmp
lds
mov
pop
sub
xchg
aam
pop
gs
inc
mov
mov
adc
inc
popf
in
inc
mov
aam
loopne
pop
je
jb
pop
or
xorl
xor
test
nop
fdiv
pop
push
jne
adc
subl
pop
in
and
mov
outsb
pop
rorb
pop
cmpl
nop
jns
xor
push
mov
sbb
leave
mov
xchg
in
add
push
ljmp
mov
sbb
sub
pop
jns
pop
pop
pop
pop
fbld
ret
outsb
push
push
inc
pop
jmp
inc
cmp
xorl
pop
mov
mov
or
aaa
test
mov
fsubl
xor
pop
mov
out
jns
cs
lock
test
ljmp
je
push
aam
imul
add
roll
enter
fstpl
jecxz
in
or
and
addr16
xchg
inc
add
loope
fstps
pop
jle
add
add
shlb
dec
test
add
adc
fs
pop
pop
adc
fdivs
cs
adc
push
sbb
in
dec
leave
in
add
lea
and
leave
jecxz
int3
add
lret
sbbb
pop
or
xchg
xchg
xchg
mov
pop
mov
xchg
mov
cmp
xchg
mov
sbb
xchg
mov
sti
mov
lock
fdivrs
sarb
mov
repnz
test
mov
repnz
mov
js
cmp
inc
pop
push
pop
mov
and
dec
mov
push
jb
subl
sbb
cmp
inc
pop
mov
sbbl
out
fstpt
nop
mov
and
cmp
lods
mov
nop
sbbl
mov
enter
push
pop
mov
pop
cmp
ds
sbbl
sbb
enter
mov
sbb
and
jecxz
fdivrs
add
mov
lods
mov
mov
mov
cmpb
nop
mov
and
cmp
inc
mov
sub
mov
inc
or
mov
fsubl
in
clc
rcll
fs
xor
and
dec
rcrb
and
xchg
fistl
cld
xchg
mov
int3
dec
lcall
enter
sbb
push
xor
daa
int
or
and
jb
mov
enter
sub
cmp
pushf
xor
daa
stc
mov
jb
mov
dec
dec
jae
push
cli
cmp
mov
mov
mov
and
cwtl
dec
inc
lock
adc
es
inc
call
inc
and
push
dec
push
rcll
js
pusha
ss
push
sahf
xor
cmp
mov
ljmp
sub
or
subl
sub
data16
inc
cmova
push
mov
leave
dec
sti
testl
xor
aas
pop
scas
and
inc
sub
lcall
push
sub
inc
int3
addb
add
nop
pop
or
adc
aam
imul
imul
sub
out
push
and
test
scas
out
inc
xchg
into
ss
and
sub
mov
or
out
jmp
and
jo
adc
addr16
test
and
inc
mov
out
xor
fs
js
mov
out
mov
fs
gs
nop
movsl
add
stos
out
mov
or
and
jb
dec
push
and
fbld
out
leave
shlb
adc
je
out
mov
dec
out
cmpsb
sub
push
test
jle
leave
pop
test
outsb
pop
xchg
out
sub
and
loopne
inc
out
xor
enter
or
inc
or
imul
sbb
jmp
mov
fstpl
adc
inc
sub
out
mov
out
and
scas
push
scas
nop
and
inc
xchg
scas
mov
sbb
fs
sub
lcall
adc
inc
adc
mov
adc
nop
scas
dec
ja
mov
sub
out
mov
xchg
dec
jnp
sarb
push
enter
push
pop
out
xor
or
and
sub
and
out
in
jbe
push
inc
test
test
fwait
and
inc
and
pop
dec
aaa
add
shlb
push
les
out
sub
fwait
mov
je
dec
sub
call
dec
push
out
pop
hlt
push
sub
lock
or
ss
int3
fdiv
loopne
pusha
ja
pop
cld
sub
ds
cld
sub
cmpsl
dec
xchg
cmp
fs
mov
pop
enter
and
fs
shrb
xchg
xchg
ficoms
out
dec
sbb
inc
sbb
fs
out
sub
fldcw
loope
sbb
xchg
add
inc
xchg
sbb
lods
adc
bound
sbb
enter
xlat
mov
clc
inc
inc
call
ja
out
dec
sbb
rorb
out
pop
lods
nop
movsl
ret
push
out
and
mov
lock
add
out
inc
and
pushf
out
push
and
cmp
out
shrb
in
xlat
and
lret
xor
jbe
enter
stos
enter
repnz
sub
je
out
cmp
inc
test
mov
je
nop
test
out
pop
dec
sub
push
sbb
cmp
or
and
jle
sub
das
fs
or
pop
adc
sub
xor
jbe
push
std
ds
adc
test
test
fadds
inc
loopne
push
sbb
cwtl
add
or
xor
inc
out
push
push
pop
mov
nop
xchg
inc
cmp
out
mov
jmp
cmc
or
out
shrb
pop
mov
push
out
dec
or
repnz
test
push
mov
imul
ljmp
cltd
lock
push
push
inc
out
stos
rorb
das
xchg
push
test
repnz
fs
mov
rcrb
mov
sub
jb
std
pop
push
adc
mov
out
adcb
aad
pop
test
jne
and
push
push
and
add
jmp
test
pop
bound
and
loop
int
stos
out
andb
pop
cmp
out
and
mov
repnz
out
push
stos
lea
mov
lahf
mov
out
pop
add
out
sub
stc
xor
imul
fs
xchg
repnz
sub
push
popa
mov
jno
adc
adc
scas
inc
xchg
out
pop
jmp
out
addr16
pop
inc
and
lahf
loope
sub
add
les
sbb
fs
jb
inc
inc
xchg
scas
xor
lods
sub
test
sbb
test
jp
mov
xchg
popf
test
test
imul
cmp
out
xchg
or
scas
inc
addl
int3
repnz
test
rolb
sbb
lods
nop
mov
add
push
mov
jmp
push
iret
inc
mov
pop
iret
movsb
add
mov
mov
jnp
or
pop
push
jmp
shll
movsb
mov
push
pop
jbe
mov
addr16
lcall
int
fucomp
cmp
aaa
cwtl
adc
pop
test
in
xor
mov
andb
aaa
stos
lea
cmpsl
rcll
test
add
movl
sbb
movb
jnp
push
xchg
jmp
shrl
fdivrl
mov
fisubl
loopne
mov
jns
out
ds
pusha
jo
repz
out
in
add
adc
iret
repz
push
bound
mov
mov
sahf
cmpsl
stc
add
out
sahf
out
test
jns
ret
or
push
sub
iret
repz
dec
pop
data16
cmp
xrelease
jns
iret
lock
stos
and
sahf
out
sahf
push
pusha
insb
jbe
xchg
popl
jns
mov
popa
xchg
nop
dec
repnz
lea
pusha
mov
push
adc
adc
push
int
xor
dec
and
movsb
sbb
sarl
push
fcoms
sbb
aad
outsb
jl
sarl
jl
push
clc
mov
insl
sbb
mov
fimull
fwait
shlb
add
iret
repz
clc
mov
push
mov
out
or
add
test
adc
das
push
adc
xchg
sbb
iret
repz
call
stc
sahf
out
or
mov
repz
test
push
and
cmp
repz
cmpb
sbb
jns
iret
jp
cmp
gs
aam
adc
es
add
pop
testl
pusha
xor
aaa
mov
or
xchg
sahf
out
sahf
or
xor
sbb
add
iret
sarl
hlt
call
iret
repz
enter
repz
mov
mov
pushf
cwtl
xchg
nop
mov
cmp
xrelease
cmp
je
insb
push
repz
pop
push
push
dec
repz
repz
inc
inc
cmp
iret
repz
xor
sub
sbb
sahf
cmpsl
stc
cmp
cld
nop
in
les
out
movsb
test
iret
repz
add
push
shlb
cmp
dec
inc
xor
sahf
out
add
mov
int3
lods
repz
out
pop
xor
in
loope
cmp
enter
xor
jg
push
add
in
mov
mov
push
add
nop
inc
adc
pop
push
nop
inc
push
xlat
nop
push
subl
incl
notl
xor
push
push
add
cmp
into
add
pop
xor
mov
insb
test
sub
mov
ja
mov
ss
xchg
mov
iret
test
pop
mov
fdivrs
idivb
daa
or
push
and
aas
mov
xor
scas
mov
push
daa
lods
fcmovnu
sti
and
push
mov
inc
add
outsl
mov
iret
test
sti
cs
das
data16
pop
xor
xor
mov
arpl
jns
add
rorb
push
sbbl
es
jnp
and
jb
shlb
repnz
mov
fsubs
jbe
jge
cmp
jge
inc
add
leave
xor
cmp
pop
pop
stos
adc
mov
inc
out
aas
inc
shl
sbb
dec
lahf
or
dec
jg
dec
mov
mov
je
aas
cmp
and
fs
xchg
pop
jo
icebp
sub
mov
mov
push
clc
push
dec
sar
push
fwait
and
movsb
iret
insl
and
jg
pop
or
lds
jns
fistpll
jnp
dec
arpl
les
xlat
add
aaa
xchg
nop
imul
xchg
popa
fadds
push
insl
sbb
les
pop
iret
aam
inc
in
xchg
pop
sti
mov
loopne
fiadds
iret
jb
jbe,pn
jbe
cmp
ud2
jno
sub
mov
movsl
add
leave
ret
add
or
push
xor
adc
inc
xlat
cmc
mov
mov
adcb
push
xchg
or
daa
movb
mov
inc
sub
xchg
aas
outsl
jne
fists
lea
push
push
arpl
sti
sub
mov
mov
and
ss
loop
mov
pop
jecxz
movsb
jno
cmp
and
adc
inc
jecxz
push
int3
xor
or
adc
scas
or
xor
add
aad
aaa
lret
sbb
xor
and
push
or
dec
adc
out
and
sbb
pop
sub
mov
mov
arpl
iret
rorl
push
push
xlat
xor
orl
push
adc
aam
roll
xor
cmpsl
rorl
dec
xor
push
rorl
adc
xor
xchg
pop
add
xchg
jo
sbb
inc
rcll
rorl
xor
add
imul
psrlq
push
fcomps
push
addr16
dec
arpl
lea
mov
incl
pushf
xor
xchg
orl
add
mov
cmp
pushf
mov
fiaddl
aad
xor
dec
or
adc
ret
pop
outsl
sbb
xchg
movsb
xchg
cmp
push
add
push
pushf
cwtl
xchg
repz
pause
mov
iret
push
inc
inc
jns
out
cmp
xor
sub
jns
out
and
sbb
sbb
jl
adc
xchg
hlt
xchg
in
push
sahf
out
fsubp
push
enter
sahf
out
lods
test
mov
push
dec
je
insb
push
sub
jns
fs
push
dec
mov
fdivrp
sahf
out
and
add
in
xchg
push
enter
jns
mov
jns
out
nop
mov
iret
repz
pop
inc
cmp
lahf
out
and
adc
lock
loopne
cmp
repz
mov
lret
insb
pop
dec
sub
xor
sbbl
dec
lock
loope
or
xor
mov
stos
mov
mov
push
add
push
stos
test
push
push
mov
lcall
jo
sbb
leave
fdivs
push
jg
in
pop
enter
push
or
mov
lods
xchg
push
inc
xor
sbb
aas
test
push
mov
mov
dec
inc
mov
out
incl
rolb
add
mov
loopne
xor
xor
adc
sbb
jg
xor
xor
xor
sahf
xor
sarb
xor
xor
xor
aaa
fbstp
arpl
sub
cmp
cmp
cmp
inc
daa
mov
notb
cmp
mov
and
fwait
cmp
cmp
sahf
fdivrs
bound
cmp
xchg
aaa
ret
loop
cmp
mov
decb
ficoml
and
pop
ds
data16
cmpsb
xchg
icebp
aas
fs
imul
aas
jecxz
call
sbb
sarl
and
sub
xor
mov
dec
mov
push
rcr
and
out
xor
outsl
lcall
adc
sbb
and
daa
xor
cmp
inc
xor
xor
xor
jno
ja
lea
xchg
xor
jg
xor
xor
xor
push
test
mov
xchg
xor
xor
adc
sbb
sbb
clc
mov
and
sub
sub
xor
outsl
call
ljmp
mov
repnz
ss
xor
xor
xor
xor
xor
incl
sbb
xor
xor
xor
xor
xor
xor
xor
xor
clc
call
xor
and
sub
insb
ss
xorl
mov
aad
push
jp
aaa
cmp
insb
cmp
adc
clc
test
mov
xchg
xchg
leave
or
or
cmp
and
and
decl
pop
xchg
xor
jp
test
mov
mov
repnz
cmp
sar
popa
pop
dec
cmp
test
stos
push
arpl
mul
mov
mov
ss
dec
cmp
cmp
cmp
or
inc
idivb
cmp
cmp
jl
mov
inc
cmp
mov
icebp
or
cmp
add
dec
jl,pt
mov
outsb
ds
cmp
dec
xchg
dec
mov
fs
aas
repnz
and
clc
das
xor
inc
xor
xchg
or
xchg
jle
xor
jle
xor
or
xor
aam
fimull
jecxz
push
dec
in
dec
xor
cmpsl
clc
bound
repz
outsl
test
lret
push
sarl
mov
mov
or
aaa
in
outsb
pop
aas
cld
jg
sub
cmp
inc
js
jle
xchg
xchg
cmp
cmp
mov
and
pop
adc
ss
cmp
arpl
dec
idivb
xchg
mov
fbstp
cmp
cmp
dec
push
inc
sbb
cmp
jne
jnp
subb
cmp
xchg
cmp
cmp
cmp
or
dec
es
in
jmp
lock
sbb
jge
movl
sbb
insb
cmp
cmp
cmp
cmp
cmp
sub
clc
decl
cmp
push
ds
ds
clc
xor
or
adc
and
dec
aas
push
aas
or
arpl
add
pop
xchg
xor
inc
icebp
dec
xor
mov
das
xchg
es
cmc
xor
xor
shlb
aaa
std
or
inc
xor
insl
xor
test
sbb
je
popf
xor
push
loope
xor
aaa
jnp
das
test
mov
or
cmp
gs
rolb
push
cmp
and
xchg
xchg
cmp
xchg
icebp
sub
ja
inc
cmp
mov
mov
pop
cmp
mov
orl
cmp
jno
ja
or
cmp
cmp
cmp
cmp
cmp
jecxz
cmpsb
sbb
cmpb
fbld
pop
cltd
cmp
cmp
cmp
inc
daa
mov
aas
es
sub
pushf
push
xchg
inc
sbb
pop
push
outsl
or
js
lock
xor
fildll
xor
push
cmpsb
xor
xor
jg
add
add
xor
xor
lcall
pushl
in
out
push
adc
sbb
das
ss
mov
mov
aaa
pop
sub
pop
cmp
clc
sbb
push
mov
lret
cmp
cmp
cmp
sbb
leave
mov
bound
das
ljmp
jo
jg
cmpsb
cmp
cmp
cmp
test
lahf
cmp
push
lret
clc
mov
scas
pusha
add
call
lahf
sbb
sub
cmp
xor
test
xchg
stos
fs
lds
fbstp
icebp
push
push
stos
orb
pop
mov
sbb
inc
ss
ss
aaa
ficoml
cmp
cmp
cmp
cmp
scas
or
pop
mov
xor
xchg
popa
cld
out
adc
outsb
and
incl
mov
cmp
jb
pop
inc
xchg
jnp,pn
mov
lcall
subb
or
adc
or
add
and
je
sbb
orps
fwait
mov
nop
out
or
add
cwtl
xor
sbb
xor
aaa
mov
stos
sbb
mov
movsb
jle
rorl
ret
in
ret
call
add
inc
or
push
and
xchg
jo
movb
inc
orl
shlb
cs
fcmovb
xor
int3
xor
mov
fsubr
loopne
xchg
push
and
call
sbb
test
xor
xor
adc
mov
dec
cmp
inc
xor
cld
or
push
xor
pop
shrl
xor
insb
push
je
or
xchg
mov
xor
shll
pushf
cmpsb
movsb
xor
orl
rolb
fsubs
out
xchg
clc
lods
divb
je
xor
lcall
add
jle
jp
mov
push
xor
push
mov
mov
int3
xor
cmp
nopl
xor
mov
mov
or
pop
stos
fmull
js
cwtl
out
fsubrs
xor
inc
jecxz
mov
xor
xor
xchg
xor
sbb
shlb
shl
add
bound
xor
pusha
inc
mov
mov
movsb
push
dec
mov
aam
ficomps
inc
xchg
pop
stos
sbb
loopne
xchg
daa
pop
fcompl
sub
jecxz
in
in
xor
dec
xor
data16
shl
sbb
sbb
jb
mov
xor
cld
cmp
inc
aas
clc
loopne
xchg
dec
xchg
push
lcall
insb
xor
cli
ljmp
jl
xorb
mov
xor
xchg
dec
adc
rcrb
and
pop
ficoms
test
xchg
xlat
sub
cmp
and
mov
inc
cmp
jo
nop
ljmp
jp
test
add
inc
dec
inc
nop
inc
inc
inc
cmp
and
add
add
add
add
or
pop
pop
push
or
or
or
or
or
fidivs
adc
push
adc
or
pop
sbb
adc
adc
adc
add
data16
in
cmpsb
jbe
or
rclb
or
xchg
add
mull
add
add
adc
adc
mov
jb
pop
sarb
ds
pushl
movb
adc
pop
and
xor
inc
mov
adc
in
dec
divb
bound
js
push
les
enter
and
or
movsb
lds
mov
xchg
mov
jecxz
inc
inc
or
add
xor
push
sbb
movsb
lahf
or
sub
or
into
add
shrl
ja
mov
inc
lods
push
adc
pop
popa
jno
and
adc
or
or
xor
adc
and
loopne
and
adc
cwtl
xorb
scas
fiaddl
or
js
scas
xor
jo
or
mov
adc
sbb
cli
and
mov
inc
jnp
test
jge
call
mov
test
pop
lahf
mov
movsl
jecxz
cli
pop
mov
adc
mov
xchg
jg
or
ljmp
addr16
out
or
push
push
xchg
add
repnz
inc
lock
scas
fprem
decl
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
out
pop
sbb
mov
push
pop
mov
pop
pop
mov
popl
movb
xchg
sbb
inc
dec
adc
adc
mov
xor
lods
scas
xchg
test
aam
and
sbb
call
gs
roll
fwait
movsb
jmp
push
lret
push
out
in
and
jg
divb
aas
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
decl
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
push
std
iret
xor
out
or
cld
push
mov
mov
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
call
clc
xchg
jmp
sbb
add
mov
mov
pop
jb
mov
or
push
mov
sub
lock
pop
mov
jl
rorl
adc
mov
push
jg
hlt
push
add
stc
loope
mov
sar
andl
push
in
idivb
icebp
testb
mov
pushl
scas
fadds
in
sub
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
mov
mov
dec
adc
push
lock
lods
jp
div
decl
aaa
sbb
into
fcomps
sbb
sbbl
into
andl
jmp
test
loopne
cli
adc
aaa
xchg
in
add
inc
adc
loope
cmpsl
aaa
or
icebp
aas
std
cli
push
push
push
idiv
sub
inc
scas
inc
mov
jg
je,pn
sub
decl
jg
imul
mov
mov
inc
es
gs
jns
enter
or
push
pushf
push
cmp
ljmp
incb
aas
sti
punpckhbw
cmpsb
orb
mov
xor
jmp
not
mov
xchg
pop
clc
pop
hlt
lret
movsb
add
xlat
call
lea
jg
gs
std
xorb
jg
aad
adc
js
ret
das
pop
pop
pop
shlb
out
sarb
sbbl
ljmp
or
sarb
std
pop
les
cli
mov
mov
inc
arpl
incl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
imul
pusha
adc
and
sbb
xchg
jo
and
out
test
jae
push
dec
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
sbb
xchg
sub
cld
call
js
cmp
call
outsl
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
add
fcmovu
ds
cmpsl
scas
popa
in
pop
or
pushl
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
call
xchg
and
push
push
jo
pusha
imul
add
mov
cmp
xchg
mov
hlt
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
loop
add
jae
shrb
shlb
out
aas
stc
add
pushl
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
cld
xor
cmp
fmull
enter
iret
in
lret
mov
pop
mov
sub
fldt
pop
mov
dec
incb
fisubrl
aas
mov
or
cld
pop
sti
add
pop
ret
cmpsb
push
pop
jg
add
out
pop
jg
mov
aad
test
mov
mov
fistpll
aas
iret
push
jbe
push
sbb
stos
icebp
pop
incb
pop
out
dec
jno
adc
push
inc
jecxz
sbb
sarl
or
jg
adc
loopne
and
clc
xorl
mov
imul
dec
cmp
sti
push
push
in
aas
mov
fsubrl
shlb
loope
lock
and
pop
imul
add
push
sbb
sar
add
push
and
mov
adc
inc
aas
push
rcrl
inc
pop
rolb
pop
inc
jb
fistpl
adc
call
ljmp
nop
mov
inc
sti
arpl
daa
std
or
sbb
pushl
ret
incb
popf
push
loop
sbb
or
imul
xor
dec
xor
mov
incl
fsubr
fistps
lds
fidivrl
jg
stos
jecxz
jmp
add
dec
mov
sub
jge
xor
lahf
les
jg
mov
sbb
sbb
cld
addl
sbb
xchg
orb
int3
push
sbb
pop
push
arpl
out
out
outsl
xchg
call
loopne
inc
test
in
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
shl
cmp
ret
dec
jp,pn
adc
lahf
mov
or
out
lcall
mov
pop
shl
cld
mov
adc
stos
pop
call
push
jg
pop
shrb
rcl
jg
adc
xor
pop
rcr
dec
ja
decl
pushf
lea
jp
jnp
jecxz
adc
inc
inc
ds
pop
adc
imul
or
inc
pop
xor
rorb
and
pushl
add
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
and
xchg
fsubrp
adc
clc
insb
test
aas
repz
sbb
push
cmp
lock
in
jmp
out
sbb
aaa
clc
push
std
mov
jl
icebp
or
out
jne
or
cmc
mov
push
mov
fsubrp
dec
sahf
push
loop
dec
inc
push
pop
fcmovb
inc
adc
inc
loopne
test
out
rolb
pop
and
fisttps
mov
or
dec
ss
div
leave
inc
lods
movsb
or
repnz
mov
or
call
fistps
cmpsl
lret
pop
in
cmp
jmp
mov
int
cmpsb
insl
pop
lock
jmp
hlt
dec
mov
incl
inc
aas
mov
jg
mov
outsb
call
loopne
addr16
sbb
cld
daa
jp
std
adc
cltd
stos
pop
test
or
mov
ret
nop
cmp
das
incb
lock
pop
div
cld
idivl
fs
sbb
stc
lahf
loope
jae
jmp
shrl
je
jge
aas
mov
push
fbstp
out
xchg
add
out
icebp
mov
cld
and
lock
mov
cmpsl
popf
sti
mov
fisttps
aaa
ja
push
test
jmp
call
xor
scas
mov
push
adc
mov
and
sbb
mov
and
xor
dec
or
pop
cld
bswap
mov
inc
add
push
pop
aaa
and
xor
fstps
fimuls
sbb
xchg
fimull
cmp
aas
icebp
ret
ror
sbb
aaa
jno
ja
inc
adc
rcl
out
icebp
push
sub
mov
pop
clc
loope
loope
mov
lahf
andb
add
xlat
rcrl
je
xchg
fldenv
iret
fdivrl
xchg
sub
jg
jne
push
cmp
repz
and
gs
test
jg
pop
out
jg
jno
ret
xor
or
decl
or
inc
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
sbb
mov
ds
inc
mov
in
sbb
xchg
imul
ljmp
sub
jmp
std
mov
daa
jmp
push
sub
faddl
mov
push
insb
inc
outsl
pop
fisttps
pop
stc
push
dec
out
fstpt
mov
enter
dec
popf
pop
pop
adc
fsts
dec
or
add
pop
add
inc
or
push
push
push
push
nop
aas
fiaddl
popf
test
and
add
pop
fldl
jle
bound
push
loopne
cs
int3
lret
mov
out
jnp
or
push
mov
sub
fwait
dec
jnp
lcall
push
xchg
push
mov
inc
xchg
adc
mov
push
cld
sub
mov
test
decl
into
jle
mov
jmp
or
subb
rcr
jbe
ret
imull
decl
cs
stos
loope
adc
mov
inc
popf
in
mov
lcall
jb
outsb
mov
mov
xlat
icebp
cwtl
cld
mov
cmp
popa
lret
pushl
pop
jns
cltd
div
jno
bound
mov
cmp
mov
test
pushf
jp
enter
popw
stc
pop
incl
loope
mov
lds
jno
jle
ss
xchg
or
test
dec
add
lret
and
stos
call
popa
push
icebp
pop
out
or
sub
pop
ljmp
out
jmp
cmp
inc
jb
cmpsb
shrb
cmp
cmp
in
pop
bound
pushl
and
mov
xchg
std
sarl
lods
xlat
mov
lods
dec
xor
inc
jecxz
inc
mov
ret
dec
out
out
movsb
std
rolb
fistpll
pusha
daa
mov
out
jmp
mov
xor
icebp
pop
pop
fistl
sti
jo
fsubrp
cli
lret
pop
negb
jmp
leave
jne
sub
xor
jb
sti
inc
pop
stos
aas
xchg
call
sbb
xchg
ret
fdivl
gs
jmp
stos
jl
lock
pushf
mov
xor
out
xor
adc
jl
ret
xorl
xchg
sub
shrl
sub
iret
gs
and
mov
jmp
jg
and
dec
sub
push
es
push
pop
jmp
push
xorb
jg
cmp
sub
lcall
lret
xor
push
hlt
jmp
pushf
jge
sub
adc
les
cmp
mov
cmp
int
jge
and
pop
mov
mov
lcall
pop
lea
cld
sub
scas
ljmp
in
lret
wrmsr
mov
lcall
xchg
addl
pop
test
iret
push
fstpl
mov
jno
jbe
sbbb
mov
aam
pop
cmp
mov
shrl
cmpsl
dec
and
sub
lods
dec
xchg
daa
sub
inc
sub
punpckldq
pop
test
cltd
call
das
sbb
jecxz
and
mov
sbb
out
add
inc
incb
cmpsb
cmp
icebp
inc
cmp
mov
pushf
in
movsb
jns
push
addb
push
push
test
pop
cwtl
rorb
iret
decl
mov
outsb
mov
sahf
out
xor
je
or
ret
jl
in
shlb
aas
mov
popf
daa
ret
adc
pop
repz
xchg
das
mov
jmp
add
push
xor
inc
adcl
addr16
adc
dec
fdivs
push
pop
bound
cltd
fcomip
sbb
dec
pop
and
subb
inc
dec
out
jle
popa
mov
in
lcall
add
mov
stos
lret
gs
inc
int
ljmp
sbb
jns
mov
jle
mov
std
gs
mov
dec
lods
dec
std
jmp
mov
xchg
push
popf
mov
sub
rcrb
in
in
pop
lock
idivb
jg
call
nop
and
mulb
shll
sub
xor
adc
cltd
xchg
pop
jmp
cmp
repnz
push
and
mov
jge
jmp
jae
movsb
arpl
lret
sbb
rorl
test
jmp
lods
jns
cmc
mov
scas
mov
mov
mov
aaa
pop
push
cmp
mov
fbld
xlat
inc
jo
fcomps
dec
in
cmp
out
mov
loope
sbb
jnp
xchg
dec
sar
jns
insb
out
jb
push
or
xor
pop
push
ret
aad
test
jge
pusha
shlb
or
pop
sbb
sub
pusha
cmp
nop
mov
loopne
xor
int3
cwtl
int3
iret
mov
sub
pusha
dec
push
cmp
jae
shll
cld
pushl
sbb
icebp
or
ja
sub
adc
cmp
push
lock
mov
mov
mov
add
aaa
dec
add
cwtl
je
cmpl
sub
aam
mov
aam
pop
stos
mov
dec
jmp
cmpb
push
pop
sbb
lods
mov
adc
ljmp
jg
loopne
inc
adc
and
cld
inc
push
dec
mov
incb
dec
popa
sub
xor
les
addr16
cmp
mov
mov
xchg
mov
xor
das
in
and
sub
push
push
jns
lds
mov
dec
pop
incl
into
xchg
push
les
sub
mov
cmp
mov
negl
mov
pushl
cld
out
mov
ret
add
cld
xchg
mov
adc
and
sub
push
push
ljmp
out
mov
lods
jb
mov
insl
mov
ret
jbe
dec
mov
mov
aaa
sarb
cmp
dec
scas
fiadds
pop
jge
int
adc
scas
popa
mov
mov
or
or
push
sub
push
dec
cmp
incl
pop
inc
pop
jecxz
mov
cmpsl
and
add
cli
outsb
or
incl
dec
je
push
repnz
dec
adcb
loopne
pop
in
ljmp
jg
adcl
cs
inc
inc
mov
pop
mov
xchg
sbb
and
call
pop
fiaddl
mov
test
imul
xchg
repz
sbb
shrl
xor
stos
inc
mov
inc
sbb
pop
ret
lock
test
or
xor
cli
fstpl
outsl
dec
and
jbe
cmp
data16
in
fdivrp
push
sar
lcall
push
adc
xchg
out
sub
loopne
xchg
add
sbb
repz
adc
pop
pop
add
das
js
stos
sub
js
xchg
jb
fcomip
mov
mov
xchg
or
adc
pop
push
loopne
aam
movb
dec
sti
mov
xlat
or
test
fwait
mov
test
cltd
int
lcall
ja
push
mov
out
mov
out
jecxz
push
ljmp
repnz
dec
into
jmp
in
mov
pop
pop
cmp
push
dec
roll
pop
loope
cmp
jae
mov
push
mov
imul
and
sbb
test
ss
jg
arpl
scas
xorl
sub
loopne
je
xor
mov
cli
fistps
fcom
adc
or
sbb
mov
jmp
jg
inc
add
dec
in
mov
xor
dec
mov
sbb
fdivrp
jne
jo
loopne
jo
mov
inc
dec
loope
mov
pop
sub
mov
xchg
ds
or
jp
lcall
rcr
lock
out
jg
out
sub
xor
xchg
inc
xor
popf
stos
mov
lcall
pop
movsl
pop
pusha
loope
daa
mov
pop
adc
and
jns
pop
add
mov
fwait
pop
xchg
int3
daa
jbe
inc
cltd
dec
pop
or
sbb
xchg
idivb
decl
cld
inc
mov
into
mov
jo
xchg
outsb
jg
iret
cmp
cli
pushl
jns
int3
dec
jbe
pop
pop
scas
and
sbb
mov
mov
mov
fwait
xor
insb
mov
das
inc
push
adc
push
pop
mov
add
jecxz
xor
decl
cs
ljmp
mov
cltd
das
sbb
push
jnp
jmp
sub
sub
int
lcall
push
xor
sahf
leave
xlat
fnstcw
orb
mov
lcall
cld
sub
cmp
pop
jmp
imul
das
in
jmp
out
inc
lcall
xor
jle
stos
push
jle
push
aaa
mov
adc
sub
mov
adc
jne
or
lods
inc
sbb
pushl
int3
pop
test
cld
cli
daa
rcrb
add
dec
in
dec
fcomps
jmp
inc
test
gs
dec
mov
shrb
int
or
mov
push
mov
cli
sbb
or
xchg
dec
out
imul
pxor
fbstp
pop
clc
mov
mov
sbb
les
or
clc
xchg
repnz
mov
sbb
roll
adc
xchg
sbb
bound
sbb
outsl
stc
jnp
jp
fidivs
call
cld
pushl
or
mov
das
cmpsl
mov
mov
js
shl
cmp
pop
inc
mov
or
gs
dec
sub
mov
out
xchg
add
call
mov
stos
lcall
enter
mov
in
imul
sarb
cld
in
sub
xchg
jne
fcoml
jg
decl
inc
bound
lahf
pop
imull
jge
ss
mov
in
xchg
xchg
insb
jge
jno
xor
orl
stos
or
lcall
and
out
notl
aad
and
mov
jo
pop
push
test
inc
ljmp
clc
jmp
pusha
xchg
in
test
lods
fcompl
aad
mov
jl
add
jmp
cli
pop
mov
loopne
repnz
xlat
call
insb
cmp
out
incl
das
push
jbe
es
inc
xchg
dec
sahf
jbe
lret
or
cli
incl
cmpsb
imul
push
scas
ret
data16
xchg
rol
lcall
xor
jmp
stos
xchg
dec
imul
dec
popf
outsb
jmp
testb
aas
push
and
outsl
jbe
push
lods
gs
int3
sbbb
mov
decl
jne
push
jbe
mov
xor
sub
sbb
adc
push
idiv
jg
sahf
inc
pop
loope
or
mov
add
push
sbb
cmp
das
jb
jmp
inc
mov
aam
pop
pushf
fcompl
jmp
jg
clc
mov
mov
ljmp
cmc
dec
pop
loopne,pn
loope
cld
inc
and
xchg
in
mov
pop
pop
data16
fistps
cld
stc
les
movsl
arpl
mov
jae
js
or
pop
lock
pushl
popa
mov
mov
xchg
push
into
repnz
or
std
sbb
fistpll
jno
dec
xchg
mov
cwtl
loope
fbld
sbb
jecxz
jne
add
movsl
mov
mov
rcl
pop
sahf
push
and
mov
insl
shll
sysret
arpl
divb
jmp
fimuls
push
mov
jl
sbb
push
sbb
xchg
xor
lcall
pop
testl
arpl
jle
sub
in
add
popa
dec
je
scas
xchg
adc
ljmp
andl
push
in
inc
push
cmpb
es
loope
incl
fisubrs
mov
adcl
xchg
sbb
lcall
or
jecxz
nop
sbb
mov
jecxz
jl
loope
jg
and
out
jnp,pn
loope
das
xchg
lcall
sub
decl
adc
sub
xchg
gs
mov
inc
inc
sbb
fistl
sub
decl
mov
xor
int
mov
cwtl
xor
call
test
cltd
enter
push
push
daa
out
je
add
adc
sbb
mov
psubsb
test
in
roll
and
mov
sub
lcall
incb
pop
xchg
das
push
inc
int
mov
incl
sti
pop
mov
fcoml
stos
rclb
rsqrtps
xchg
jne
xchg
lods
call
sar
cld
xchg
sbb
dec
xrelease
push
mov
ljmp
loope
ljmp
xor
sub
lods
push
pop
lcall
push
daa
fwait
adc
outsl
mov
ret
cmp
push
jmp
jns
sbb
inc
inc
push
push
jmp
fsub
leave
pop
push
in
cltd
or
lods
or
ja
sbb
sub
add
cli
mov
in
pushf
test
pop
pop
pop
call
mov
mov
fisubrs
int
dec
pusha
push
imul
xor
dec
jmp
and
adc
test
and
dec
xchg
das
int3
hlt
enter
xchg
sbb
ss
sbb
sub
jl
call
sbb
outsl
repz
sub
inc
jmp
cmp
jne
or
gs
pushl
sbb
scas
cmpb
xchg
pop
inc
mov
fs
icebp
icebp
inc
ss
push
fiaddl
sahf
nop
push
mov
xlat
xor
fidivrl
pop
std
jl
fs
fbstp
rol
dec
sub
sbb
jge
push
daa
inc
xchg
pop
xchg
icebp
add
mov
jmp
and
fdivl
cmp
xor
test
pushf
jle
jg
mov
repnz
iret
pop
lea
mov
nop
push
nop
inc
push
orl
loopne
lea
in
dec
movl
rcpps
pusha
enter
jmp
mov
scas
mov
mov
lcall
pop
insb
mov
ret
cmc
mov
insb
cmp
int
inc
xor
movsb
push
mov
jg
lcall
push
test
popa
and
push
lret
dec
mov
sarl
add
mov
jo
push
andl
jbe
sbb
scas
mov
mov
hlt
jecxz
mov
fbld
aaa
bound
sbb
andb
xchg
cld
and
aad
cmpsb
sub
pop
lock
aaa
cltd
sar
jmp
jb
push
fcmovnu
lcall
incl
call
test
cmp
mov
adc
mov
in
mov
push
jle
xlat
rorl
sub
add
cltd
jmp
add
test
scas
xchg
repz
ja
scas
xor
call
adc
sub
push
hlt
adc
fimuls
andl
xchg
fcomip
jle
sbb
xchg
inc
sahf
bound
sub
fdivl
rcr
addr16
xchg
xor
dec
in
jo
test
lds
stos
mov
out
sub
mov
xchg
xchg
pop
outsl
xor
bound
sbb
lea
popa
ljmp
add
dec
insb
test
idiv
xor
push
mov
sbb
call
pop
sarb
sbb
loopne
jg
cli
mov
mulb
sub
or
xchg
inc
sti
sub
xor
sbb
fcomip
icebp
mov
xor
push
fs
arpl
add
add
mov
decl
xlat
cwtl
hlt
loopne
test
pop
sar
ss
in
jl
lcall
ja
decl
jae
std
jp
movsl
addl
cmpsl
fwait
in
mov
out
lahf
mov
adcb
ljmp
sahf
rolb
aad
fildll
shr
into
pushf
inc
ds
test
cmp
push
insb
cmc
inc
add
xor
push
lcall
clc
in
xor
mov
jns
adc
push
bound
sti
icebp
sbb
lea
sub
std
ljmp
out
rorb
dec
sbb
ficompl
jmp
data16
mov
outsl
clc
ja
or
mov
mov
pop
sbb
add
pop
or
out
mov
pop
divb
lea
jbe
and
cmp
lea
sbb
orl
mov
sbb
cmp
fidivrs
cmp
adc
cmc
mov
nop
cmp
add
ljmp
xor
mov
aad
push
ss
pop
in
fstpl
xchg
xchg
adc
scas
call
or
or
incl
jg,pn
stos
jg
je
jge
lods
push
xor
dec
jb
hlt
decl
lock
leave
pusha
enter
cmp
movsl
xor
and
jle
jge
test
cmp
fnstcw
stc
jecxz
jg
out
out
push
adc
loope
jmp
or
das
ret
pusha
movzbl
aaa
push
pushl
ret
rclb
fsubrl
lahf
sub
add
lods
sbb
js
jo
ljmp
inc
insl
popa
xrelease
lret
jge
dec
inc
dec
push
jp
mov
test
pop
lcall
cltd
popf
icebp
loop
dec
into
test
fimull
mov
xor
or
loop,pn
fstpl
stc
jp
adc
xchg
lahf
mov
mov
fwait
jne
mov
sub
decl
stos
fidivl
sbbb
js
dec
sbb
cltd
push
add
insl
lcall
xor
jo
hlt
pushf
fidivrl
fisttpl
xchg
sbb
sub
sbb
pop
outsl
sbb
aad
iret
jbe
push
loop
movsb
inc
jmp
push
bound
leave
cmc
cmpsb
test
add
stos
lods
test
adc
sbb
mov
je
cs
mov
ljmp
call
jmp
xchg
mov
aas
insb
sub
or
xchg
sub
jg
push
sub
lcall
mov
cwtl
inc
lret
adc
std
mov
call
sbb
call
sbb
xchg
mov
xchg
inc
fcompl
mov
pop
push
outsb
add
js
aam
adc
or
and
fwait
push
fwait
stos
ss
cmp
cld
repz
cli
jmp
fstpl
mov
sahf
dec
rclb
out
adc
pop
sub
and
flds
movsb
fadds
ljmp
mov
imul
lahf
sub
sub
test
cmp
jg
xchg
jecxz
xchg
add
in
inc
pushf
inc
xchg
inc
lods
addb
cmp
outsl
incl
inc
rcl
lds
adc
into
out
mov
cmp
test
out
orl
popf
aaa
lcall
test
mov
cmp
pop
int3
adc
dec
addr16
icebp
lret
fsubs
inc
sub
cltd
outsl
ret
inc
inc
clc
pop
xchg
test
push
ficoms
mov
inc
movsl
sbb
aad
inc
test
xor
pop
pop
in
xchg
movsb
push
sub
fsubrl
out
jmp
gs
mov
xchg
gs
push
dec
inc
xchg
popa
dec
cmp
jns
pusha
pushf
aad
ljmp
outsl
xchg
orb
outsb
test
xlat
imulb
daa
daa
jo
sbb
mov
ret
cld
imul
outsb
pop
fs
pop
push
out
mov
dec
sbb
lods
insl
lret
jecxz
ljmp
add
sub
or
int3
lock
or
ljmp
out
out
pushf
sub
jo
xchg
in
sahf
xlat
ja
jnp
jle
pop
filds
fstpl
insl
sti
sbb
clc
sbb
dec
in
in
jmp
mov
xchg
jno
inc
insl
clc
or
adc
std
aaa
aad
jbe
inc
scas
push
or
mov
das
add
dec
clc
xchg
xchg
popf
cs
decl
cmp
mov
shlb
or
push
mov
in
loop
ja
jl
pop
cmp
es
mov
dec
arpl
imul
jno
jecxz
jmp
pop
loop
cli
inc
lock
fidivrs
cs
pop
push
push
and
fldlg2
jl
jg
incl
movl
sub
adc
cmpsb
stos
jmp
insb
pop
xor
add
mov
pop
jbe
xchg
fcoms
pop
pop
mov
pushf
ljmp
xor
daa
add
and
and
leave
jle
jl
mov
push
inc
sbb
inc
dec
std
lock
xorb
add
sub
addr16
inc
clc
filds
incl
stos
out
nop
dec
in
lcall
add
movl
std
pop
adc
subb
ljmp
pop
xorb
cmp
aas
sbb
xor
mov
sub
xchg
lret
jno
les
push
in
lcall
in
loope
scas
jbe
cli
pushl
sbb
jp
int
test
lods
std
dec
dec
ret
push
bound
pop
incl
jno
push
push
decb
imul
hlt
xchg
jno
clc
dec
push
mov
mov
push
ret
and
mov
aas
mov
sub
mov
push
xlat
adc
lret
jge
cmp
and
pop
inc
inc
xchg
pop
cwtl
push
fmull
ss
push
mov
arpl
xchg
fdivrl
mov
dec
stos
lds
lcall
mov
xchg
jmp
add
xor
inc
cmp
ljmp
incl
mov
popa
arpl
loop
pop
cwtl
ret
es
in
and
incl
and
xor
js
inc
popa
in
inc
mov
in
call
and
lds
sub
cmp
cmp
in
lcall
inc
and
xchg
das
scas
xchg
pop
or
sahf
add
stos
pop
mov
out
decl
loop
call
cld
fisubs
inc
into
inc
cmp
fisttpl
lahf
clc
pushf
cmp
movsb
inc
mov
and
ret
sbb
aas
mov
or
dec
fwait
and
rclb
push
in
push
std
push
rol
daa
push
xor
fldl2t
test
ss
dec
jae
sub
mov
push
mov
xchg
test
addr16
inc
push
mov
xlat
pop
cli
jmp
mov
push
push
xor
cli
shlb
jbe
imul
inc
pushl
iret
fsubl
in
xchg
mov
mov
ficoml
dec
inc
out
mov
or
leave
ljmp
lcall
pop
xchg
xorb
cmp
pop
popf
out
mov
bound
xor
incl
aad
jmp
sub
mov
pushf
and
cmpsb
imul
insb
loope
inc
aaa
adc
clc
repnz
jg
dec
mov
push
inc
or
add
fwait
jnp
jns
insl
arpl
dec
jb
pushl
and
out
ss
out
jg
in
clc
mov
sbb
data16
les
sbb
decl
mov
xchg
dec
push
cwtl
push
loope
leavew
adc
and
jb
dec
mov
jg
fs
xchg
add
and
call
cltd
xchg
fistl
decl
cmp
sarl
std
jbe
divb
xor
cmp
pop
xchg
or
or
cmp
jnp
daa
cmp
aas
cli
xor
dec
clc
lret
jns
xchg
inc
or
inc
mov
negb
outsb
jg
mov
fdivrs
mov
dec
push
xorb
pop
sar
jmp
sub
xchg
cli
or
mov
sub
test
or
mov
repz
fbstp
clc
jle
jmp
and
mov
pushf
dec
repnz
jmp
test
das
add
dec
or
pushf
loop
stos
sub
push
mov
jno
jmp
outsl
clc
ljmp
xchg
sbb
adcl
scas
and
adc
xor
mov
ljmp
enter
ret
pop
aam
dec
add
xchg
adc
orb
jle
add
push
mov
pop
mov
aaa
data16
add
cmp
push
test
dec
mov
decl
and
inc
std
mov
cmp
arpl
cmpsl
shlb
aam
mov
lret
scas
mov
bound
mov
out
inc
xor
add
shl
incl
or
lahf
jle
out
jl
iret
cltd
pop
jle
or
mov
movsl
je
movsl
push
adc
push
and
lods
jle
lcall
dec
push
jae
adc
lcall
xor
lahf
dec
mov
or
ds
sahf
ss
dec
scas
xlat
imul
fistpll
and
lods
sar
notl
jg
inc
and
js
in
jg
pushl
xlat
das
mov
movsl
adc
sbb
sbb
or
fcoms
cmp
test
fdivrs
add
dec
loop,pn
push
movsb
dec
mov
xor
push
mov
push
addl
decl
andl
dec
fdivrs
roll
ljmp
ja
jne
pop
xor
sbb
dec
adc
decl
sarl
and
push
sbb
fmuls
push
add
pushl
out
jno
sub
pushf
ljmp
loop
addr16
inc
dec
adc
mov
xchg
push
arpl
call
sub
gs
mov
push
adc
jno
pop
lea
pop
lcall
fistps
subl
cmp
lret
incl
xor
xchg
dec
btc
loopne
sbb
incl
pop
push
js
lods
daa
out
cmp
add
inc
inc
sub
mov
incb
test
hlt
add
popf
push
cli
int3
push
jno
adc
sub
add
fucom
syscall
and
fwait
mov
jbe
popa
xor
mov
mov
pop
test
push
fadds
push
fimull
loopne
push
repnz
outsl
clc
mull
movb
addr16
ret
imul
mov
add
shr
mov
cmp
cmp
mov
mov
pop
lret
inc
ja
imul
into
fdivs
imul
out
cld
jnp
push
xchg
cmp
push
call
enter
sub
or
dec
and
incl
and
add
movsl
and
andb
and
mov
aaa
push
and
add
and
push
dec
and
push
idiv
jg
mov
hlt
xor
aad
pushf
test
lock
and
mov
mov
incl
or
mov
cmp
pop
call
out
mov
cmp
xlat
loopne
dec
mov
adc
ljmp
test
sub
inc
lods
inc
mov
into
out
int
fldenv
sub
dec
lds
pop
mov
movsb
lock
mov
rol
cmp
ret
dec
nop
xchg
push
jnp
incl
ret
ljmp
xor
pop
je
jecxz
loopne
sbb
call
dec
fcoms
xchg
pop
outsb
testl
popa
pop
ret
jb
hlt
xor
movsb
dec
push
test
icebp
lcall
rcrb
in
andl
pop
jmp
dec
aas
sbbb
decl
push
xchg
shr
mov
mov
mov
fdiv
jg
pop
jmp
adc
movzwl
les
push
mov
ret
push
inc
lcall
ja
imul
sar
das
clc
pop
int3
cli
mov
add
mov
addl
jnp
push
ret
sar
jg
pop
xchg
and
push
pop
call
or
das
test
mov
sub
xchg
or
mov
js
inc
shl
push
fdivrl
lcall
or
subb
pop
addr16
js
push
push
cld
cmc
and
jge
adc
lcall
aaa
stos
xchg
stos
xor
add
add
inc
out
imull
scas
jg
cmc
call
cli
loop
push
cmc
xor
add
and
jnp
pop
mov
lret
ud0
inc
out
dec
lods
lret
mov
rcll
push
popa
push
push
push
pop
gs
mov
ljmp
mov
mov
aad
add
lods
xchg
jg
inc
aad
repnz
mov
subb
jp
cmp
pop
movl
ja
dec
div
leave
bound
add
add
decb
mov
ret
push
inc
data16
push
cmp
test
cld
and
jno
ret
dec
ja
mov
inc
push
cmp
in
movsb
in
stos
in
xchg
orl
mov
daa
in
push
push
add
mov
decl
and
xor
loopne
inc
repz
lock
or
imul
sarb
ljmp
subl
mov
repz
adcl
dec
enter
sti
das
sahf
imul
jb
cli
call
jmp
loope
lock
jmp
push
lea
mov
int
inc
push
bound
out
mov
dec
incl
xchg
jl
and
into
dec
mov
ds
inc
iret
pop
dec
lahf
add
jmp
pop
pop
pop
sub
pop
lret
xor
push
loope
adc
int3
xchg
scas
test
js
lds
scas
pushf
sub
jg
xor
push
aaa
test
adc
jecxz
jmp
sbb
aaa
xchg
push
fists
std
ja
ds
jae
push
shrl
jo
cmpsl
arpl
ja
push
mov
inc
cli
filds
push
cmpsb
cwtl
in
xor
ret
outsl
cli
jmp
mov
push
dec
or
cld
add
xchg
js
in
incl
push
pushf
idivl
pop
gs
sbb
add
es
nop
fdivl
addb
jle
xchg
push
test
out
movsl
lods
push
pop
jl
inc
movsl
jns
lret
xor
insl
inc
repnz
cmc
inc
lret
incl
mov
in
scas
push
nop
inc
adcb
xor
or
jge
xchg
mov
push
mov
addr16
add
lea
mov
popf
xchg
mov
flds
call
add
jl
popa
mov
bnd
or
pop
jnp
mov
dec
jns
lahf
xor
push
arpl
pandn
dec
enter
inc
push
or
fildl
adc
xchg
call
mov
ss
fldcw
mov
divl
ljmp
xor
subl
jl
les
dec
loopne
daa
fdivrs
lods
jnp
mov
mov
xchg
jg
outsb
mov
stos
lock
add
adc
jne
data16
ljmp
enter
stos
scas
in
outsl
daa
cwtl
cmp
int
mov
aam
sub
xchg
dec
mov
mov
jno
fcomip
dec
int3
punpcklwd
test
into
jmp
mov
fimull
into
enter
cmp
xchg
sbb
adc
repnz
mov
jnp
ds
mov
aad
cmp
sti
xor
sub
repz
popf
mov
mov
sub
adc
jb
push
ljmp
jp
inc
aaa
push
aas
cld
mov
inc
sbb
addr16
sbb
movsb
repz
xor
incl
xor
ljmp
je
xchg
mov
and
outsb
mov
inc
out
clc
icebp
push
sbb
test
push
ret
andl
imul
ss
push
or
lret
cli
inc
sub
idivb
adc
push
push
or
and
cmp
sbb
incl
enter
push
ja
mov
repz
movsl
je
pushw
sub
ljmp
inc
pusha
enter
jb
pop
mov
push
jns
fisttps
add
mov
call
jb
jmp
lea
les
out
int
pop
hlt
loope
add
sub
in
xchg
mov
mov
lret
aad
cmp
sub
fidivs
and
repz
or
pop
adc
mov
jno
in
jmp
mov
sub
clc
and
movsb
pop
dec
arpl
movsl
notl
flds
mov
xchg
notl
mov
xor
sahf
mov
incl
push
lock
or
dec
pop
mov
call
xchg
dec
mov
andb
mov
push
ss
cltd
repnz
jge
popf
sub
add
lods
ljmp
mov
sbb
ret
jmp
int
nop
sub
lock
iret
cmp
push
add
sbb
xchg
push
pop
data16
jg
fistpll
inc
clc
push
sbb
xchg
push
dec
lret
iret
xor
adc
addb
cmc
xchg
mov
sti
and
mov
aas
clc
mov
sbb
mov
aad
repnz
sub
insb
inc
push
sub
or
hlt
call
daa
mov
jmp
insb
ret
mov
and
in
xor
pushl
sub
cld
sets
cmpsl
adc
add
dec
punpckldq
pusha
lcall
jno
jg
cmp
fwait
loope
cmpsl
fdivr
ss
outsl
call
dec
dec
mov
call
mov
pushw
lret
in
imul
jne
out
js
jecxz
loop
jl
aam
xchg
nop
cli
inc
cwtl
mov
jae
sbb
loop
notl
les
fwait
jle
ljmp
imul
mov
xor
or
sbb
or
test
aaa
or
jg
out
xchg
lret
mov
adc
mov
add
sti
pop
mov
std
or
popf
mov
jg
dec
negb
clc
pushl
xor
stos
xor
rcrl
jnp
hlt
or
pop
sub
pop
mov
nop
repz
pop
mov
in
dec
push
out
push
mov
scas
scas
xor
jge
pop
adc
into
adc
or
bound
mov
cmp
add
in
decl
test
mov
jecxz
add
sub
push
jo
mov
jne
mul
test
sub
filds
adc
push
adc
cltd
sbb
jns
cmp
ds
dec
int
inc
negb
pop
mov
xchg
ret
call
mov
add
imulb
ljmp
xor
gs
pop
call
subb
jns
scas
jnp
and
inc
fcmovnb
xchg
cs
push
mov
popf
icebp
js
xor
out
or
cltd
push
jb
cmp
orl
adc
cld
jmp
enter
test
mov
shrb
mov
or
xchg
pop
inc
ljmp
dec
cmc
fwait
or
cld
movsb
sar
pushl
jg
cmc
int3
lods
mov
dec
ret
and
clc
mov
or
iret
je
xor
mov
lods
into
sbb
ljmp
sub
inc
loop
mov
mov
jnp
bound
aad
fs
sbb
jle
pop
inc
inc
cmp
pop
sub
mov
mov
jg
cmp
call
nop
mov
cmpsl
and
adc
pop
sub
decl
mov
jo
add
int3
mov
cmp
outsb
sbb
sub
and
mov
imul
mov
pushf
lcall
inc
jl
cmp
cs
inc
lds
test
or
out
mov
or
out
inc
lret
popa
dec
and
push
sub
bound
fcoml
mov
jg
test
rolb
lret
adc
test
enter
fisubl
ret
mov
mov
sub
lret
addr16
ljmp
and
sar
fimuls
shrb
lock
cltd
mov
cmp
test
inc
dec
pop
push
movl
loope
mov
call
mov
mov
jmp
xchg
jnp
or
dec
test
dec
mov
cwtl
sahf
add
mov
sar
cmc
xchg
and
jp
das
lods
add
movsl
cli
cmp
inc
pop
jno
lock
das
nop
call
loopne
ret
mov
in
imul
adc
sub
mov
ljmp
ljmp
pop
pop
xchg
out
push
xchg
fwait
mov
scas
fimull
xor
and
fwait
and
ljmp
inc
enter
decl
ds
and
stos
loop
pop
xchg
and
psrlw
jb
hlt
add
dec
jns
dec
jge
or
or
pusha
andl
daa
test
arpl
dec
push
ljmp
shll
popa
sarb
jnp
lret
mov
push
fisubrs
jmp
pop
lods
or
xor
mov
xchg
pop
push
lock
les
xchg
rcll
jmp
mov
xor
js
mov
repnz
adc
mov
inc
sahf
jecxz
call
dec
cmpsl
rep
xchg
jge
mov
pop
push
pushf
inc
daa
nopl
lods
mov
mov
test
mov
inc
mov
fwait
pushl
in
add
lods
add
mov
repnz
cmp
aad
pop
hlt
lcall
mov
mov
sub
push
inc
lods
adc
xor
fs
push
sub
mov
pop
hlt
pushl
or
fdivl
outsl
test
lret
ret
aaa
mov
stos
loope
xor
sbb
sahf
mov
bound
lds
int
sub
pushl
lea
add
push
dec
mov
and
xchg
mov
push
and
fld
sub
pop
or
jmp
jg
stos
mov
jmp
cmp
jge
pop
adc
and
pop
imul
sahf
jae
mov
cmpsb
jge
pushl
sti
cli
sub
cld
mov
scas
movsl
push
ret
fstpl
movsb
mov
inc
sub
dec
shl
stos
lcall
sbb
inc
popa
repz
es
mov
mov
stc
lcall
in
jmp
jp
insb
jl
push
jmp
mov
and
pop
xchg
imul
jg
rorb
test
ss
mul
and
push
cmp
and
push
pop
into
mov
ret
mov
mov
mov
sbbb
pop
mov
in
jmp
pop
nop
xchg
push
mov
mov
add
pop
aad
or
mov
ljmp
test
add
movsb
std
inc
out
aas
xor
mov
ljmp
int3
pop
arpl
iret
xor
sub
pop
hlt
xor
or
mov
jmp
pop
popf
jne
iret
cltd
es
test
jae
enter
adc
fwait
add
mov
leave
dec
stos
pusha
sbb
popf
arpl
push
ja
out
or
pop
outsb
cmp
out
jecxz
dec
cmp
call
shl
push
sub
add
xor
fistps
icebp
xor
rcr
and
and
dec
in
mov
mov
aas
lods
push
or
mov
cmp
push
mov
jge
cmp
cli
in
in
jmp
popa
jne
mov
in
inc
test
lcall
clc
lods
ljmp
xchg
cmp
mov
movsl
std
lcall
jo
clc
and
xchg
psubsb
xchg
sbb
addl
or
cld
call
or
cmp
mov
fcoms
mov
cmp
mov
cmc
nop
iret
cs
mov
pushl
mov
mov
inc
push
pop
ss
push
ret
rolb
orb
jg
loopne
push
testl
pop
mov
sbb
push
mov
loop
add
ret
pushl
mov
fcomip
adc
stc
lret
rcl
mov
mov
mov
mov
dec
mov
daa
and
ja
je
pop
mov
sub
lret
xchg
outsb
mov
out
sbb
scas
mov
add
or
mov
push
aaa
jne
popf
fsubs
or
jo
xlat
je
dec
outsl
stos
push
or
cmp
out
sub
outsl
adc
pop
cld
mov
ds
fs
xchg
xchg
out
mov
movsb
int3
mov
movsl
ds
and
call
scas
pop
pusha
sbb
scas
imul
fcmovbe
adc
cwtl
rorl
aaa
shl
call
notl
fsubrp
out
lret
xor
xlat
fcmovnbe
add
cld
mov
fcomps
clc
adc
pop
pop
dec
mov
inc
cmp
pushl
fwait
aas
lret
mov
lock
in
enter
jg
jmp
mov
xchg
cmp
and
ljmp
or
stc
pop
scas
bswap
xor
movsb
sub
inc
sbb
add
jg
data16
ss
int3
inc
sub
das
jnp
shlb
bound
mov
sub
decl
cmp
jmp
mov
and
arpl
mov
xor
inc
movsl
sbb
lcall
popf
mov
add
nop
xchg
xlat
sbb
sub
cmp
ficompl
push
jecxz
cmp
decl
fwait
and
jae
and
sbb
es
mov
push
cmp
scas
jo
jmp
add
insb
mov
sbb
aaa
ret
add
and
jb
pop
xchg
lods
ret
mov
cmpsl
xchg
loope
fadds
outsb
inc
sub
data16
test
in
scas
inc
movsb
mov
lcall
icebp
jg
pop
mov
pop
mov
clc
inc
adc
xchg
sar
lcall
inc
xor
daa
lahf
dec
inc
cli
lahf
mov
daa
and
pop
shlb
ljmp
mov
pop
and
add
push
sub
cmp
std
loop
adc
jg
aaa
jno
sbb
out
cmpsl
lahf
cmp
and
pop
cltd
call
lcall
xor
in
scas
push
mov
aas
push
or
and
fcoml
jo
push
xlat
add
pushf
sbb
call
imul
dec
xor
jge
sti
and
xchg
enter
mov
xchg
push
push
inc
pop
mov
std
mov
bound
sbb
pop
dec
xchg
sbb
push
jo
fcomip
fcomip
je
adc
cwtl
loop
cld
mov
pop
adc
mulb
jp
pop
xlat
adc
cmp
popf
call
dec
mov
cmp
and
loope
mov
pop
out
cltd
aas
mulb
mov
jo
rcll
cmp
imul
sub
jmp
jp
jmp
mov
jle
cld
and
loop
mov
inc
rolb
sbb
lahf
jg
add
lcall
loopne
pop
dec
sub
cmp
test
mov
push
mov
call
dec
test
jp
in
insb
add
sub
inc
arpl
imulb
jecxz
and
and
das
popa
in
movsl
mov
mov
pop
inc
mov
mov
jg
inc
mov
pop
mov
adc
inc
negb
jge
push
in
popa
aad
out
ljmp
addl
or
aam
fldenv
xlat
shll
es
popl
sti
mov
rcrl
je
movsb
dec
sub
jg
repz
cs
rorb
push
pusha
lcall
jo
cli
adc
push
cmp
mov
add
lock
or
out
jb
inc
mov
call
jnp
test
add
cmp
mov
in
jg
adc
cwtl
int
aad
pushl
jb
and
sub
sbb
jp
add
mov
cld
mov
pop
xor
cmp
push
pushf
cmp
cltd
cmp
ljmp
mov
int
jno
mov
nop
mov
fbld
das
test
jbe
add
pushl
add
cmpsl
add
test
sti
ljmp
in
mov
cmp
mov
xchg
loopne
cmp
sub
push
add
ljmp
inc
xor
adc
rolb
push
js
test
push
stos
or
jecxz
pushf
xchg
data16
mov
and
and
adc
mov
mov
decl
xbegin
lcall
mov
inc
adc
addr16
mov
sub
cmp
add
xchg
cld
jmp
repz
xchg
mov
pop
loopne
popf
dec
mov
repnz
addl
push
andl
sar
aam
movsb
add
sub
fwait
loop
sarl
lret
cli
cmp
mov
adc
icebp
add
in
outsb
jnp
sub
repz
add
stc
nop
cmc
pop
add
loopne
dec
out
xor
decl
adc
xchg
pusha
mov
pop
jbe
xor
out
nop
sbb
insl
out
fistps
dec
cmp
aad
pop
xor
out
add
pop
cmp
stos
enter
insb
aas
pushf
repz
decl
aam
movsb
aam
push
fcoml
inc
inc
jo
scas
mov
mov
mov
rcrb
xchg
sar
jle
adc
mov
push
icebp
mov
dec
and
lds
gs
nop
xchg
inc
das
mov
pushl
cltd
stc
gs
aam
or
out
lcall
out
repz
xchg
fistl
dec
mov
push
mov
jmp
xchg
inc
dec
sbb
in
jns
mov
call
mov
lock
call
in
sbb
pop
cmp
inc
cld
lret
fs
mov
lret
xor
lcall
test
loopne
mov
shll
mov
repz
loop
stos
into
mov
cmp
repz
mov
inc
das
mov
dec
shlb
xchg
push
loope
les
jg
sbb
int3
movsl
adc
mov
inc
add
aas
fcoml
arpl
xchg
rcr
mov
insl
fstps
stc
loopne
lcall
xchg
jle
ret
scas
leave
hlt
jo
add
inc
cmpsl
ja
push
inc
sub
call
repnz
pusha
shrb
gs
or
xor
stos
push
adc
dec
mov
lock
inc
call
mov
out
imul
mov
sbb
cmp
arpl
and
pushf
orb
jne
xor
jmp
repnz
push
xchg
adc
call
ljmp
mov
packssdw
jb
add
and
ja
push
cmp
fldl
pusha
mov
xor
cmp
lods
lods
or
fisubs
pop
pop
pop
les
in
pop
jo
fistpll
pushl
jae
xchg
dec
mov
std
cmp
pop
adc
shrb
nop
jge
std
cld
lcall
movsl
mov
sbb
aaa
add
adc
add
xlat
dec
jl
xchg
xchg
lock
pop
ljmp
jmp
jae
adc
shl
stos
lcall
cmp
sbb
sub
jmp
and
pop
repz
ljmp
dec
push
imul
iret
dec
aas
jecxz
mov
cmc
je
repnz
sbb
call
rcrl
adc
xchg
push
adc
movsl
fbstp
cld
sbb
pop
mov
push
pop
jns
push
cmp
cli
rcl
cltd
or
adc
ds
jle
seta
lret
mov
inc
or
sub
or
xchg
subb
sbb
mov
sahf
pop
adc
push
sar
mov
or
lock
ljmp
cs
and
jb
gs
xchg
sub
or
pop
cmpsl
or
loop
pusha
inc
test
pop
push
repnz
jns
movsl
mov
or
das
sar
out
pop
sub
adc
or
es
pushf
fsts
mov
loopne
push
repnz
xor
inc
nop
lods
into
add
dec
in
xchg
push
add
addr16
fadd
fdivrs
imul
jnp
shll
addr16
clc
decl
and
sub
adc
or
mov
adc
xor
jecxz
cmp
decl
inc
cs
and
lods
data16
jnp
out
inc
push
jno
dec
sub
xchg
add
rolb
lea
adc
aad
pop
xchg
pushl
dec
out
in
cmpsl
and
push
jbe
and
test
xor
jle
gs
scas
or
sub
inc
lret
xor
fwait
mov
cli
ds
popa
pop
jg
pushl
es
lock
adc
pop
popl
jecxz
adc
movsl
into
pushl
push
cmpb
mov
lahf
mov
pop
mov
inc
loop
push
rorl
fcompl
fistl
mov
aas
rorb
inc
mov
xchg
stos
dec
rorl
or
jl
ret
fsubrs
cld
jo
mov
dec
test
jmp
fistpl
cmp
add
inc
scas
add
xacquire
std
arpl
lock
pop
jp
test
mov
frndint
call
shlb
mov
int3
jge
sti
jecxz
dec
mov
pop
inc
in
sbb
cmp
js
out
cmp
fs
push
jns
adc
cmp
test
xchg
pop
pusha
mov
in
int
and
test
push
scas
xor
adc
decl
or
arpl
lods
sbb
out
mov
inc
and
pop
xchg
xchg
incl
mov
or
sti
sub
mov
negl
mov
ja
repnz
mov
sub
push
rcrb
sub
fiaddl
popa
mov
ljmp
or
les
cmp
lahf
div
adc
stos
add
mov
push
add
sub
incl
loope
mov
pop
sub
dec
xchg
dec
ljmp
push
mov
mov
fists
adc
sbb
xor
shlb
decl
xchg
mov
push
xlat
ret
in
sbb
adc
insl
inc
aas
xchg
dec
xor
int
pop
test
in
sub
stc
xchg
and
mov
adcb
mov
push
inc
dec
xchg
mov
dec
adc
mov
imul
jmp
inc
pushl
repz
sti
mov
les
push
mov
or
in
add
call
lret
push
loope
inc
shll
jmp
sti
stos
mov
shl
les
call
lahf
dec
dec
outsl
mov
add
pushf
dec
pop
insb
clc
sub
es
mov
adc
decl
jmp
fisttpl
sub
arpl
imul
mov
xor
mov
push
xor
mov
jmp
jb
cmp
test
call
jle
adc
and
repz
cwtl
and
dec
sti
inc
push
ss
notl
fwait
js
jb
fcomip
fnstcw
lahf
and
mov
add
ret
sbb
fcoml
mov
rorb
fs
out
lods
cmp
dec
aas
jo
add
ljmp
dec
in
push
push
sub
test
xorb
fcmovnb
push
inc
jno
xor
testb
pop
in
jp
ret
or
lret
pushl
jmp
mov
mov
outsl
insb
aas
aas
pop
mov
in
cmp
or
or
clc
push
dec
js
xor
push
stos
xor
sbb
cmpsl
mov
fimuls
mov
add
mov
jno
mov
push
ret
xchg
ja
jmp
xor
cmp
movsl
daa
adc
jmp
lahf
sbb
jle
out
shll
cmpsb
sbb
mov
call
lds
push
popa
inc
in
xchg
es
or
andb
leave
add
inc
out
fdiv
ljmp
add
insb
dec
add
xor
sbb
sub
cmc
pop
shrl
mov
movsl
negb
lret
test
in
or
mov
insb
mov
jmp
dec
movsb
xchg
icebp
push
les
shrb
ss
xchg
mov
add
in
and
xchg
mov
dec
out
in
pandn
pop
push
mov
cld
aaa
xchg
mov
pop
cmp
les
int
shll
cmp
add
scas
mov
cmp
js
dec
lahf
iret
add
lods
sarb
adc
in
push
dec
call
xorl
out
push
aam
mov
pop
mov
call
cli
divb
ret
mov
push
sar
fistpll
sbb
mov
xchg
cmp
mov
inc
icebp
pop
in
out
pop
aas
jne
jo
iret
js
fcomip
mov
inc
jl
lock
fldl
push
push
xor
lcall
testl
stos
add
rcrl
push
movsl
and
in
test
mov
lcall
es
mov
ss
inc
and
lock
or
flds
imul
popf
mov
inc
fadd
aaa
push
add
stc
push
mov
adcb
mov
sti
sub
gs
push
movd
jns
jg
inc
pop
and
imul
lds
push
inc
in
push
mov
pushl
into
movsl
je
jns
aad
fbld
pop
lods
sub
je
xor
push
inc
lods
jg
xchg
mov
sbb
lret
push
jle
and
cld
dec
push
loopne
push
cmpsb
mov
test
or
dec
add
mov
push
mov
mov
mov
hlt
incl
jns
sub
adc
jbe
or
push
aas
pop
fstl
add
fisttps
lret
or
add
or
outsl
mov
scas
xchg
icebp
mov
in
jg
pushl
icebp
cmpsb
jecxz
sbb
popa
jmp
mov
test
add
neg
jg
ljmp
daa
mov
jno
imul
cmp
ljmp
cmp
xchg
push
cmc
call
cltd
and
rclb
inc
pop
lcall
and
xchg
stos
ss
fistpll
mov
add
repnz
fwait
adc
jns
jae
idiv
jg
rcl
fs
lds
fdivl
inc
dec
lock
adc
adc
and
pushl
sbb
or
xchg
pushf
stos
call
daa
or
fmuls
cmp
in
ret
fcomp
mov
jnp
mov
aaa
enter
lcall
lds
test
popf
fdivrp
out
nop
fistpll
sub
inc
daa
fnstenv
ret
cwtl
rclb
ljmp
movsb
repz
lds
nop
cmp
mov
push
adc
incl
jae
mov
aad
les
fstps
es
dec
jno
dec
imul
iret
cld
lods
out
pop
push
add
shlb
mov
dec
jp
scas
into
or
pop
out
outsl
loop
jl
xlat
pushl
mov
test
adc
scas
cmpsl
sub
inc
jne
push
lods
pop
dec
cli
xlat
inc
sub
cmp
jmp
int3
mov
js
push
sbb
jmp
gs
bound
pop
aaa
arpl
adc
ret
pop
push
sub
xchg
xchg
out
loop
ja
xchg
sub
sub
call
pushl
fnsave
xor
call
xchg
cld
testb
pushl
mov
xchg
lods
mov
jo
mov
ja
xor
test
mov
int
cmpsl
add
push
cld
ljmp
iret
jb
add
dec
out
das
jbe
push
jle
mov
jmp
mov
jnp
jmp
xorl
je
jg
pushl
rcll
sti
or
iret
jecxz
push
arpl
push
ljmp
jmp
jl
loopne
jmp
or
es
jge
mov
stc
repnz
cmp
sbb
pushl
gs
pop
mov
nop
xchg
ss
mov
cmpsb
movsl
and
pushl
cld
rcrl
insb
mov
sub
mov
xor
jl
popf
sub
add
insl
pushf
push
or
dec
divl
lods
clc
in
dec
jnp
loope
orl
mov
popf
and
ds
shll
fwait
aad
iret
or
add
jno
sbb
pusha
repnz
ljmp
sub
aad
rcrb
mov
std
sub
mov
pushl
add
push
push
repnz
adc
push
lods
pop
push
mov
cwtl
test
lock
decl
dec
test
aas
fldl
into
xor
push
movsl
inc
jg
roll
or
dec
cmpsb
inc
push
es
xor
pop
nop
or
mov
xchg
mov
lcall
imul
cmp
int3
adc
js
cltd
xchg
jmp
or
lahf
sub
loopne
or
repz
jmp
push
jae
stc
fidivrs
jp
call
fs
or
mov
pop
decl
aaa
rclb
test
sbb
or
jmp
sbb
gs
mov
jge
sbb
cmp
out
xor
in
outsl
popf
or
insb
out
push
cltd
mov
push
mov
cs
mov
add
mov
mov
inc
les
stos
fistps
lods
cltd
mov
mov
jp
push
and
push
decl
and
pushf
sbb
shr
push
xor
or
pushf
jno
and
decl
invd
adc
mov
ljmp
call
mov
popa
ret
clc
je
decl
ljmp
sub
out
jmp
das
mov
fs
sbb
and
cmp
and
decl
pushf
pop
jae
imull
divps
out
or
add
js
repz
out
gs
scas
mov
enter
cmc
push
cld
add
lock
ljmp
lds
cli
and
mov
dec
push
sbb
mov
push
out
xchg
in
jge
ds
enter
jmp
xchg
insb
xchg
rclb
xor
inc
or
and
movsb
xor
rcrb
inc
daa
rcll
and
add
decl
stos
xor
fsubl
in
ljmp
mov
sbb
ret
push
xor
adc
sub
jl
jb
dec
dec
cld
inc
xor
sub
or
lock
jmp
sub
cmp
inc
aas
cmpsl
dec
lods
sbb
rolb
fs
icebp
pushl
xor
mov
inc
imul
inc
pop
cmpsl
les
data16
daa
js
adc
sub
and
cmc
pop
fcomip
inc
push
loop
icebp
mov
add
cli
scas
dec
inc
xor
inc
mov
jmp
mov
sub
aaa
pop
push
push
xor
xchg
jo
hlt
xor
incb
pop
es
ret
adc
inc
push
insb
lahf
aaa
mov
mov
cmp
cmpsl
mov
into
rcrl
arpl
sbb
cltd
imul
ja
sbb
clc
mov
pop
jp
cmpb
lock
shl
fidivl
pop
mov
mulb
cmp
or
mov
je
into
in
dec
mov
cld
pop
pop
add
inc
outsl
sarl
ss
inc
stos
mov
lret
aas
add
pushf
xchg
in
mov
in
jg
jecxz
clc
bound
rcrl
dec
mov
adc
push
cli
inc
das
jmp
ljmp
jle
push
aaa
and
jo
xor
mov
add
int3
mov
shlb
aaa
imul
mov
out
push
sub
fcmovb
push
xlat
fildl
dec
xchg
fidivrs
add
dec
testb
inc
sbb
push
dec
mov
push
mov
incb
mov
in
cmp
dec
call
stos
out
mov
bound
out
bound
mov
mov
mov
insb
lcall
push
add
gs
idiv
mov
ja
movsb
cmp
pop
loope
movsl
das
add
push
add
or
lea
ljmp
add
push
lock
test
jns
gs
and
inc
int3
fcmovnb
jo
cmpsl
es
or
scas
mov
pushl
jns
call
clc
ret
jb
pop
sub
decl
push
mov
pop
movsl
adc
mov
pop
jmp
jg
addr16
mov
orb
mov
test
int3
pop
pop
cmpsb
inc
xor
dec
stc
cs
pop
loope
and
das
mov
xlat
in
icebp
dec
daa
mov
cmp
jnp
lcall
mov
and
or
jno
mov
mov
dec
enter
mov
scas
bound
xchg
out
mov
fwait
adc
push
pop
jo
test
pop
out
or
mov
movsb
add
stos
loope
repnz
call
pop
adc
cmpsl
pushf
cmp
pop
pop
push
test
mov
mov
incl
imul
ret
lds
mov
mov
test
jg
jae
decl
andl
cmp
adcb
lods
clc
std
mov
fwait
call
loopne
fsubl
adc
sbbl
in
insb
mov
sti
adc
sbb
jns
ja
incl
aad
mov
xchg
cs
out
cmp
sub
pop
inc
push
push
les
int
and
mov
mov
jne
inc
aas
bound
lods
mov
in
lcall
sub
sub
and
xor
setns
test
jo
ds
dec
jl
clc
jg
push
es
je
xor
or
cmc
frstor
cmpsb
sub
mov
call
dec
imul
mov
fsubs
jl
mov
rep
loop
fcomp
add
call
mov
mov
pop
push
push
xchg
iret
sub
icebp
aaa
out
out
insb
scas
push
xchg
mov
icebp
mov
into
push
sub
and
add
aas
lcall
xchg
inc
jg
js
xchg
inc
pushl
cld
pushl
push
xchg
lds
aad
dec
cld
out
inc
mov
mov
les
push
and
and
ja
cmp
pushf
call
icebp
repz
inc
inc
jb
rolb
mov
ljmp
das
call
push
in
cmp
fs
jle
push
std
dec
mov
cmc
mov
std
mov
and
mov
jae
xchg
add
fsub
cmpsl
leave
xchg
dec
sub
std
jnp
sbb
shrb
or
aaa
loope
push
cmp
pop
hlt
ljmp
rolb
test
es
dec
and
dec
push
mov
dec
pop
rcll
pop
icebp
xor
iret
mov
pop
mov
decl
jmp
xchg
cmp
or
insl
adc
cmp
pushf
inc
sarb
fstps
test
ljmp
enter
inc
and
test
lahf
imul
xchg
je
dec
movsb
jle
gs
repz
mov
movsb
addl
push
sub
adc
mov
push
test
pop
jmp
decl
std
cltd
sub
inc
sub
outsl
pushf
jle
mov
mov
add
or
das
jecxz
xchg
pop
hlt
and
cmpsl
decb
test
or
pusha
imul
xchg
test
loope
das
cli
call
out
daa
fwait
push
sbb
cmpl
in
mov
insl
cltd
jmp
jmp
ret
imul
iret
cmp
xchg
addr16
dec
inc
mov
mov
mov
gs
scas
fistl
push
cmp
dec
jo
add
out
sub
fldcw
mov
jg
adc
xchg
xchg
popf
movsl
pop
sub
cmp
xor
and
fildl
call
ljmp
and
xchg
mov
push
adc
into
xchg
jbe
inc
mov
push
xchg
ljmp
cmc
xchg
mov
fbld
mov
pop
shll
mov
pushl
rclb
inc
insl
adc
inc
cmpsb
mov
aam
and
fcmove
repnz
popf
iret
fdiv
incl
popa
cmp
pop
xlat
fmull
icebp
xchg
pop
jno
xor
call
loope
xchg
aam
lock
lret
mov
xorl
in
push
fcomip
pushl
lcall
pop
loop
out
stos
push
and
sub
or
jmp
push
fistpll
and
jp
lcall
adc
mov
dec
or
mov
inc
mov
cmp
leave
mov
push
xor
cmpsl
adcl
xchg
pop
fcoms
push
mov
fsubrp
or
idiv
ds
std
lea
jmp
add
incl
cld
test
movb
in
cmp
sub
sbb
loopne
cmp
bnd
cwtl
mov
out
cs
inc
push
ss
mov
aam
sub
mov
xchg
push
aad
lea
push
add
push
int3
mov
decl
ss
aas
xor
xor
add
xor
call
mov
incl
stc
cli
mov
mov
pop
arpl
mov
push
addr16
imul
jo
jg
repz
es
dec
and
push
or
add
and
inc
gs
push
lods
fs
jae
int3
popl
out
movsb
addl
mov
xchg
arpl
push
mov
faddl
fisttpll
sar
decl
lahf
fistpl
sbb
out
sub
shll
push
je
push
sub
jns
outsl
pop
pop
push
mov
test
push
xacquire
imulb
mov
add
jg
lcall
inc
test
or
inc
test
in
aas
int
call
decl
push
bound
xchg
jnp
jns
fs
mov
cmp
insl
xchg
loopne
in
call
or
bswap
push
out
cmpsb
out
push
xchg
jmp
in
aam
sahf
inc
out
mov
inc
ja
jmp
lcall
fdivrs
cld
iret
data16
dec
fcomi
sbb
insb
std
pop
mov
inc
jecxz
xor
ds
push
dec
or
add
mov
jb,pt
mov
ljmp
xchg
test
fs
out
int
dec
sub
pop
fisubrl
sub
call
adc
push
out
sti
push
call
enter
bound
icebp
aad
idiv
dec
std
cmp
ljmp
arpl
rcl
mov
out
lods
dec
pop
push
out
clc
leave
jae
incl
pusha
or
jb
push
and
es
cmp
mov
pop
push
push
imul
lcall
in
ja
and
jle
sbb
adc
xchg
mov
cmp
insb
mov
stos
out
test
push
inc
stos
dec
or
xor
or
mov
cmpsl
inc
arpl
dec
aad
xchg
pop
decl
lahf
push
fsubrl
cmp
sbb
xor
jno
mov
xchg
mov
cli
mov
rcl
sbb
and
add
jle
testb
dec
add
or
mov
add
adc
in
loopne
pusha
cltd
lret
add
ljmp
jmp
repnz
aas
test
or
les
pop
jo
sbb
fdivrl
out
adc
adc
outsl
dec
in
daa
mov
out
jne
mov
pop
rclb
add
in
sub
sbb
ret
into
sar
fwait
jns
shrd
pop
xor
dec
decl
mov
jne
test
jle
push
loop
xchg
das
das
cmpsl
sub
ljmp
and
lret
lcall
xchg
dec
push
xchg
iret
push
cmpsl
xchg
mov
jle
xchg
mov
cmp
sbb
jg
sub
dec
fcoml
je
dec
popa
int
sbb
sti
mov
push
jnp
adc
into
imul
fs
in
das
add
jle
jg
incl
fcompl
mov
int3
sub
jecxz
out
fdivrl
xor
sub
call
sbb
imul
push
inc
testl
jne
jge
mov
incl
test
ljmp
jge
inc
mov
mov
push
pop
adc
ljmp
aam
xor
mov
sbb
jbe
cmp
loope
cli
into
mov
and
dec
ds
mov
dec
mov
fists
mov
inc
mov
mov
push
test
inc
lret
jecxz
incl
push
and
loop
add
loope
mov
mov
mov
or
push
cmp
dec
stos
dec
sub
mov
pop
xor
or
inc
mov
les
xchg
sahf
in
push
test
dec
and
dec
xor
xor
decl
imul
fimull
xor
lret
lcall
pop
jecxz
fildll
cmp
mov
decl
aas
add
shll
aam
jle
pop
cwtl
push
mov
cmc
or
ret
incb
jg
clc
or
loopne
hlt
sbbb
cmp
cmc
mov
jmp
jg
adc
push
fldt
mov
add
pop
out
xchg
xchg
mov
les
mov
aam
daa
les
div
fstpt
xchg
nop
mov
fcmovb
inc
fwait
pushl
out
stc
movsb
pushf
les
roll
push
inc
repnz
push
pop
mov
dec
call
in
ss
pop
lea
xor
cmp
xor
add
stc
pop
dec
push
movb
andb
jns
incb
inc
add
movsl
mov
idivb
cmp
lds
lahf
outsb
in
jmp
adc
inc
cwtl
dec
inc
cmp
stc
aam
insb
adc
nop
push
mov
xchg
in
mov
popa
mov
ljmp
clc
cmp
rol
lods
push
filds
adc
push
ret
cmp
cmpsl
in
incl
xchg
les
inc
mov
fnsave
sbb
push
data16
sar
lcall
call
jno
lds
loopne
mov
es
ret
jg
data16
mov
add
inc
arpl
adc
sbb
pop
xor
mov
mov
pop
push
ljmp
lea
push
stos
jnp
push
sbb
sahf
gs
je
or
incl
stos
inc
movsb
dec
xor
inc
insb
fcmovnb
adc
test
lods
adc
lret
ret
sbb
jg
out
lds
ja
mov
mov
out
insb
dec
outsb
popa
xchg
jl
decl
aas
fwait
pop
pop
out
rolb
push
cltd
nop
cmp
cmp
mov
idiv
call
pushf
xchg
addr16
mov
lds
loop
fimuls
ret
and
enter
fsubr
jle
stos
push
push
ljmp
adc
out
sti
push
hlt
ret
pop
stos
movsl
lret
pop
std
cmpsl
sbb
cld
fiadds
stc
jp
xchg
pop
and
bound
sti
fldenv
call
mov
add
ljmp
clc
shl
dec
xlat
pop
pushf
xchg
shl
mov
jb
call
rcl
fildll
call
push
xchg
fldl
xor
fistpl
iret
es
lahf
movsl
cltd
cmp
mov
sub
pushl
scas
inc
pop
lret
fsubs
leave
dec
movsl
mov
mov
movsl
jp
pusha
dec
decl
inc
xlat
das
pop
lret
sub
sahf
addr16
in
add
mov
ljmp
iret
lods
jns
push
pop
pop
push
sbb
or
xor
fidivrs
sbb
adc
das
nop
lret
in
mov
into
add
lret
mov
sar
subl
or
mov
enter
sub
push
cld
jg
hlt
shl
jl
xor
int
je
cmc
aam
call
jp
ss
repz
adc
fs
mov
pop
jns
repnz
or
pop
rcrl
jmp
add
jle
adc
or
mov
fimuls
pop
lock
incl
shll
or
jnp
xor
jne
setg
sbb
loopne
decl
repz
xchg
mov
cltd
add
dec
jnp
mov
or
lods
call
test
scas
lahf
sarb
mov
inc
pop
sub
inc
cmc
pushf
pop
rcrl
pop
sbb
cmp
mov
ja
jmp
fsubl
jo
test
jge
outsb
jnp
mov
movsb
aad
mov
roll
pop
dec
add
ficoml
ljmp
mov
pop
int3
xor
mov
mov
pop
and
push
les
rcrl
fidivs
xchg
decl
push
cmp
or
and
adc
js
not
out
or
lret
xor
push
sub
sbb
adc
mov
pop
imul
mov
mov
adc
cs
push
inc
mov
pop
or
xor
mov
cmp
je
inc
ljmp
jle
jne
sarb
dec
data16
test
call
push
pop
movsb
lcall
loope
movsl
or
sbb
sbb
inc
and
dec
dec
push
xchg
sub
insl
and
aaa
cld
pop
and
push
pop
jae
jle,pn
enter
decl
loop
pop
jo
adc
jg
fimuls
inc
inc
out
fnstcw
jmp
jle
pushl
in
insl
das
fs
ret
das
mov
add
out
int
imul
jno
mov
fst
cs
popa
jae
lahf
mov
lcall
jg
sahf
mov
lds
jne
cmpsl
add
dec
pminub
xorl
test
adc
xor
test
imul
popf
push
arpl
fisubrl
lret
ja
gs
lock
lcall
mov
or
xchg
pop
daa
xor
adc
sub
incl
iret
adc
popl
adc
mov
dec
inc
jb
inc
sub
lret
sti
call
or
fs
hlt
orb
push
lock
or
dec
add
mov
cmp
push
fisttpl
xor
arpl
enter
mov
cli
fmulp
or
iret
pop
ror
xchg
jb
adc
stos
lcall
push
lds
repz
mov
js
or
pop
into
push
insl
mov
repnz
call
cwtl
inc
mov
pandn
mov
and
stc
popf
cs
sbb
in
into
jno
pop
hlt
lcall
loopne
icebp
hlt
sbb
inc
scas
jmp
mov
repz
cld
lret
mov
sarl
mov
xor
ja
xchg
lret
push
push
jmp
popa
scas
xchg
cmpsb
mov
es
mov
movsl
cmp
subl
data16
mov
mov
ds
lcall
and
mov
lret
cmp
cmp
movsb
jne
cli
incl
pop
or
mov
and
das
push
push
mull
loopne
xlat
jb
dec
jae
aaa
std
ljmp
cmp
shll
subl
adc
mov
decl
sarb
push
dec
add
push
es
push
decl
loopne
int
aaa
rol
mov
aad
sbb
in
arpl
scas
int3
ret
pushl
xlat
inc
mov
dec
mov
adc
insl
add
xchg
xor
and
jmp
into
sub
push
cmp
or
sbb
imul
repnz
inc
outsb
mov
jmp
in
mov
adc
adc
scas
arpl
push
pop
cld
outsb
inc
inc
testl
decl
push
jb
movsl
sub
pushf
inc
repnz
sbb
aam
popf
mov
push
pop
cmp
lret
loope
test
mov
jl
or
lods
addr16
and
fwait
push
rcll
add
jmp
fcoml
je
inc
xor
pusha
jg
jmp
scas
jmp
lods
fst
jp
call
cs
movsb
xchg
pop
sbb
insb
push
sub
mov
push
pminsw
fisubl
adc
mov
out
or
dec
cmp
mov
adc
adc
call
mov
stc
cld
aas
dec
sbb
add
into
sub
add
jmp
mov
popa
fisubrl
das
sbb
stos
xor
lret
leave
and
mov
daa
sarl
in
pop
mov
mov
jmp
mov
xchg
rcl
push
popa
dec
push
test
sahf
fsts
cmp
dec
cs
sbb
adc
addr16
and
cmp
mov
xchg
ret
dec
xor
into
iret
scas
sti
xor
dec
adc
pushf
lret
inc
ficoml
pushf
cmp
xchg
and
adc
lock
lcall
pop
add
bound
or
xor
dec
mov
mov
mov
mov
dec
fldenv
repz
add
punpckhdq
movsl
push
cmp
insb
int
adc
notb
sbb
dec
int3
or
or
scas
or
out
inc
in
jns
sub
addr16
pop
leave
xor
decl
or
xor
xchg
mov
ret
test
pop
daa
jne
sub
jns
and
decl
jo
xchg
mov
imulb
dec
inc
mov
jp
mov
ds
add
lock
gs
call
xchg
dec
adc
loope
aaa
add
cmp
orb
outsb
jg
mov
ljmp
test
jmp
push
mov
out
sbb
fs
mov
mov
sbb
or
mov
movsb
sbb
pushl
sub
or
fnstenv
push
in
les
or
sbb
xor
pushl
data16
and
movsl
fidivl
outsl
jb
insb
mov
decl
ret
stc
adc
scas
mov
ret
jle
in
xchg
pop
jno
mov
test
jmp
or
stos
adc
sub
mov
test
cmp
mov
sub
xor
xor
add
decl
mov
xchg
gs
or
gs
lea
pop
pop
or
insb
add
loope
inc
leave
or
mov
sub
xchg
mov
addr16
xchg
loope
in
sub
lock
dec
push
xor
mov
addr16
loop
sub
sbb
es
call
je
jp
inc
push
idiv
pop
sti
daa
je
mov
or
dec
xchg
push
stc
incl
add
pop
pop
sbb
rcll
add
in
movsb
mov
pop
cltd
stos
add
decl
dec
push
jecxz
jp
out
test
js
lret
ja
and
ja
insl
ljmp
add
test
add
adc
xchg
notl
sbbb
cmp
jmp
add
rcrb
mov
pop
cld
out
movsb
lock
insb
pop
and
loope
and
xchg
fisttps
hlt
xlat
mov
add
jno
lds
imul
xor
hlt
sub
jge
push
inc
clc
mov
pop
sub
xor
adc
pop
xchg
addb
mov
jmp
hlt
test
mov
adc
mov
cmc
jae
aam
add
lahf
fsubrl
fsts
pusha
out
int3
shrb
call
fisubs
push
and
lods
mov
or
mov
adc
scas
xlat
inc
mov
and
faddl
insb
cmp
dec
aas
imull
mull
mov
jp
inc
sbb
or
cmc
ret
add
cmc
or
pop
mov
jg
sub
flds
pop
xlat
lds
ja
xchg
popf
lea
push
xchg
or
mov
inc
fdivr
jg
or
mov
inc
mov
add
lret
addr16
gs
mov
pushl
mov
fs
mov
sub
xor
push
jmp
das
clc
add
mov
stos
adc
sbb
mov
cs
xchg
fcomip
pusha
insl
xchg
fstpl
sbb
push
lea
mov
les
stc
mov
jb
lcall
test
loop
addr16
adc
push
or
xchg
enter
sub
jbe
jge
mov
movsl
lret
jmp
jns
sub
xor
add
call
std
push
add
int3
sbb
lods
dec
daa
fldcw
dec
mov
pop
fnstcw
in
lock
pushl
sub
movsb
jp
pop
add
xor
ror
test
rcll
leave
cmpb
sub
sti
xchg
out
negb
add
sarl
ret
shlb
fisttps
arpl
jl
call
xor
add
hlt
mov
sbb
inc
int
push
or
sahf
pusha
imul
decl
mov
lods
add
xor
dec
mov
push
not
ja
lcall
inc
dec
pusha
inc
xchg
dec
sbb
xor
gs
fwait
sbb
movsl
pop
andl
subl
outsb
ror
mov
cmp
sub
sub
ljmp
sarb
mov
dec
pop
cmp
add
lds
add
jbe
out
iret
push
rclb
push
dec
jg
push
inc
mulb
es
push
lcall
fnstenv
rclb
add
test
and
add
inc
mov
sbb
test
mov
add
enter
pop
pop
mov
sub
out
jle
int3
cmc
fs
gs
int3
les
and
or
movsl
out
int3
jp
incl
dec
sti
xor
mov
jo
lcall
jo
mov
cmp
xor
ds
loop
xchg
cs
lahf
sbbb
xlat
or
dec
push
fcoml
adc
aaa
cld
aad
popf
popa
rolb
pop
and
ss
sahf
dec
outsl
xchg
out
xchg
call
fistl
js
std
lods
mov
sbb
and
push
xchg
shrl
mov
les
decl
lock
add
pop
sub
xchg
jg
and
jbe
add
fucom
daa
jbe
shl
jns
or
push
scas
outsb
push
fwait
push
aaa
movsl
cmp
incl
jmp
stos
test
dec
icebp
jge
fwait
pop
jg
nop
out
inc
sub
imul
call
ds
ja
or
sahf
dec
add
lds
movsl
loopne
leave
ret
mov
out
and
dec
lock
nop
push
adc
adc
push
or
das
cli
decl
push
aas
mov
adc
mov
sahf
jg
stos
pop
arpl
decl
rclb
xchg
test
inc
add
test
mov
inc
ljmp
mov
call
push
jnp
rolb
ss
xchg
push
xchg
imul
mov
mov
push
pop
sbb
sub
xor
dec
adc
adc
shll
push
mov
inc
lods
test
jmp
mov
xor
sub
fcoms
wbinvd
sar
mov
clc
jmp
push
mov
movsl
xchg
sub
push
rclb
inc
in
scas
mov
sub
cmp
ljmp
jp
inc
mov
sbb
push
cmp
ret
or
mov
in
push
aaa
cld
in
mov
out
sub
shrb
decl
pop
jg
test
or
jle
jmp
mov
cmp
dec
mov
inc
mov
jnp
test
into
arpl
push
sti
js
pop
das
cmp
xchg
dec
pushl
and
pushl
lods
scas
xchg
gs
and
scas
or
fldenv
sub
xchg
out
ljmp
inc
aam
add
mov
and
rorb
cmp
pop
int3
and
mov
adc
mov
xchg
jns
das
mov
mov
sub
jle
xor
aaa
cld
lcall
cmp
jo
rcll
jp
add
or
outsl
mov
out
jb
shlb
loop
fimull
je
fisttpll
sbbl
xlat
incl
push
fwait
in
gs
sub
mov
mov
cld
jo
mov
jo
dec
pop
ret
lods
decl
sti
test
lods
sbb
push
shl
out
ljmp
mov
loop
inc
rcrb
call
jb
dec
lcall
incl
pop
shlb
stos
cmp
enter
jg
xlat
mov
sbb
stos
cmc
fidivl
call
sti
subb
es
or
jge
pop
adc
fmuls
mov
fbld
test
mov
std
dec
xchg
fwait
xchg
cltd
fs
rorl
adc
lret
pop
loope
push
outsb
mov
pushl
dec
mov
inc
sbb
roll
mov
jge
push
lock
pop
xchg
ljmp
pop
in
addr16
in
aas
dec
fiaddl
xorl
mov
sbb
mov
cmp
scas
lds
or
ljmp
jecxz
jg
pushl
je
shlb
cmpsb
aad
push
cld
test
sbb
popa
emms
ja
ljmp
dec
insb
ficomps
cwtl
repnz
mov
subb
sti
and
decl
call
sub
xor
pusha
add
mov
movsl
sub
xlat
cmp
leave
decl
neg
push
push
lock
testb
xor
jbe
pop
cs
add
dec
dec
insb
sahf
and
and
dec
jbe
repnz
inc
subb
nop
sub
jmp
jnp
enter
dec
dec
or
pushf
ret
in
insb
mov
mov
arpl
addr16
aad
xchg
dec
pop
add
ljmp
sub
je
decl
outsb
test
xchg
dec
lods
lods
roll
lcall
jmp
cmp
pushf
incl
loop
in
roll
es
lods
iret
mov
imul
jb
mov
sbb
jle
push
in
mov
push
imul
loope
push
in
push
fisubrl
xchg
push
xchg
pop
mov
lcall
add
movsl
adc
lret
sbb
xchg
mov
repz
arpl
je
shll
icebp
adc
mov
movsl
mov
stos
dec
xor
xchg
cmpsl
mov
decl
inc
fdivs
mov
inc
mov
hlt
mov
mov
mov
sub
sub
pop
mov
je
adc
adc
cmp
pop
ss
or
dec
flds
push
and
or
adc
jbe
mov
into
sub
jmp
push
int3
fidivrl
and
aas
out
hlt
push
xor
incl
add
je
adc
or
mov
incl
fidivrl
fstpl
inc
les
push
xchg
mov
add
push
aas
gs
pop
insb
push
push
test
jp
sbb
dec
lcall
adc
add
lret
push
pop
inc
mov
pop
inc
ret
fwait
iret
fcomip
stos
inc
push
ljmp
aad
das
jl
in
test
mov
pop
repnz
and
jmp
lods
inc
ss
jbe
in
jecxz
imul
aad
xor
jno
push
addl
mov
adc
jg
int
inc
inc
aas
scas
adc
int
aad
lds
sbb
mov
inc
adc
jp
fildll
jno
inc
sbb
push
fmull
jge
and
cmp
push
ss
adc
jg
incl
aaa
jge
lock
ds
dec
test
ret
add
push
std
call
pusha
movsb
mov
dec
stc
cmp
push
jp
pop
andl
lds
cmp
sahf
or
stos
ja
push
mov
cmp
sarb
insb
out
adc
dec
rorl
jg
cmp
das
lds
mull
or
imul
shlb
mov
ss
call
adc
lods
xchg
or
fs
ret
addr16
sarb
jp
xchg
pop
decl
jb
cld
ja
jg
dec
js
or
lret
xchg
xchg
xor
jmp
sbb
jge
into
pop
push
shlb
inc
imul
cld
or
lods
or
mov
sbb
std
outsl
movsb
lea
in
popf
call
cmpsb
add
jno
cmp
sub
incl
sar
xlat
pusha
xchg
pop
inc
std
jns
xor
addr16
stos
add
dec
and
pop
cmc
pushl
je
shl
call
test
ret
movsl
int3
decl
mov
repz
dec
sub
mov
inc
jo
cmpsl
cwtl
sbb
lcall
in
mov
push
inc
cli
xor
mov
fwait
pop
sbb
repz
js
and
push
xchg
adc
decl
and
rcll
xchg
pushf
mov
lret
shl
dec
mov
sub
outsb
js
dec
out
nop
xchg
call
in
lcall
sub
dec
cmp
xor
xchg
mov
out
add
mov
adc
adc
push
xchg
sub
lcall
stc
sbb
movsl
mov
adc
out
lock
jae
insl
mov
sar
das
cli
jmp
sbb
pusha
mov
lcall
inc
xor
call
xchg
add
dec
daa
push
xchg
inc
mov
addr16
cmpsb
mov
and
inc
js
mov
sbb
ret
ljmp
mov
xorb
mov
pusha
cmp
adc
mov
jg
lods
dec
popf
loopne
sbb
lret
cmc
lahf
jo
or
jo
pop
outsb
push
subl
ljmp
dec
push
xor
mov
sbb
push
popf
gs
shr
mov
fldl2e
and
ljmp
add
rol
sub
cmp
and
aaa
adc
ljmp
adc
in
pusha
leave
jmp
cmp
dec
cmp
and
fstp
push
insl
repz
mov
bound
lret
mov
cmp
add
pushf
push
inc
rolb
popf
push
push
xor
mov
pop
scas
adc
pop
outsb
cmp
cmp
cmovbe
xchg
jg
dec
fwait
addb
imul
mov
ljmp
fbld
push
xlat
int3
pop
xor
shlb
cmpsl
outsb
mov
pop
test
das
outsb
fwait
inc
lcall
dec
pop
mov
push
pushf
cwtl
xor
outsb
or
leavew
adc
sahf
sub
fnsave
fiadds
push
cmc
mov
push
mov
mov
popf
icebp
xchg
imul
pusha
and
lcall
mov
mov
sarb
inc
popa
fistpll
sahf
adc
shll
leave
lcall
sub
pusha
outsl
les
cmpsl
rcrl
cvttps2pi
jg
lret
sub
jo
imul
call
push
xchg
inc
mov
arpl
inc
lahf
mov
mov
bound
mov
jmp
jne
lds
movsl
dec
xor
mov
cmp
sarb
sub
fucom
xor
out
bound
pop
jno
fld
jae
inc
jae
rcr
adc
outsb
mov
cmp
pop
push
or
pop
aam
outsl
jb
inc
mov
sahf
movsb
repz
mov
aad
loop
outsl
adc
idivb
pushf
je
mov
pop
mov
push
sbb
std
out
cli
sbb
jle
out
popa
cmp
stc
in
cmpsl
insb
jmp
and
pop
or
pop
lock
outsb
or
enter
sub
mov
cmp
ret
xor
aaa
cmp
jb
aam
rcrl
sub
cld
cmp
push
dec
arpl
cli
push
dec
and
push
inc
push
ret
mov
adc
imul
push
in
fdivrp
ljmp
xchg
scas
subb
xchg
inc
in
cmc
mov
in
daa
hlt
fs
in
loop
cmp
scas
jbe
call
cld
sahf
jb
jb
lcall
adc
call
sub
inc
scas
cmp
sbb
js
rcrl
dec
es
jbe
xor
jb
mov
dec
sahf
jg
pushf
mov
call
pop
and
mov
fstpl
dec
pushf
clc
push
lcall
jg
push
jno
cwtl
ds
pop
xchg
lock
dec
mov
mov
loope
add
jg
test
xchg
or
mov
xchg
in
mov
out
mov
mov
mov
jb
xchg
data16
and
lcall
push
jge
cmp
js
cwtl
popf
ja
sub
jmp
lock
ds
pop
cs
jp
clc
jl
mov
and
jnp
cld
inc
mov
out
pop
dec
jo
lret
stc
add
sbb
decl
ret
mov
lret
sub
test
imul
xchg
push
pop
mov
cmpsb
sub
in
lds
jb
adc
adc
mov
lock
in
pop
pushf
mov
incl
push
push
jge
lcall
insl
rorl
add
leave
inc
fdivr
jg
sbb
xchg
pop
and
xor
and
pop
fs
loop
dec
ljmp
pop
mov
int3
fidivl
sub
sub
mov
hlt
pop
push
mov
stc
cld
cmp
and
insl
stos
frstor
cmc
mov
add
mov
mov
fdivs
ljmp
xchg
lea
jp
pop
sarb
dec
pushl
inc
rcl
jmp
nop
inc
jbe
cwtl
push
pop
repz
cwtl
push
je
sahf
fwait
cmp
das
mov
sbb
or
decl
add
lcall
mov
fidivrl
int3
arpl
xchg
xchg
mov
sbb
jg
pushl
fisubl
test
push
jge
sub
outsb
xor
cld
decl
and
inc
out
sub
aaa
in
jbe
aas
add
ficomps
mov
pop
xchg
xchg
sbb
jo
mov
pop
and
and
decl
pop
fdivrl
xchg
push
mov
pop
addb
or
in
cli
jne
loopne
xchg
or
add
xor
sub
and
insl
dec
sub
ljmp
cmp
ss
sub
fcmovne
movsl
sbb
in
stos
dec
ljmp
sub
mov
leave
ljmp
push
cli
jmp
xlat
lcall
ljmp
fsubs
in
mov
xchg
dec
push
cmpsb
xchg
pop
test
pop
add
shrl
jg
pop
push
fidivrs
mov
jmp
pop
mov
imul
rcrl
sarb
cwtl
inc
rcrb
add
push
std
cld
ds
loopne
bound
pushf
and
arpl
cmc
mov
sub
mov
decl
mov
mov
sub
cmp
fstpt
and
enter
decl
test
jp
adc
in
jecxz
jnp
pop
inc
sub
das
daa
jo
jmp
cmp
mov
pop
pop
and
xchg
outsl
lods
popa
call
add
and
mov
es
fs
jns
in
lods
mov
mov
jae
inc
xchg
mov
xchg
mov
pop
or
jo
mov
jnp
call
fdivrl
repnz
loope
jb
fdivrl
and
or
incl
pop
mov
mov
sub
jle
sahf
or
jb
mov
popa
call
lods
dec
mov
and
xchg
out
push
std
push
cmp
popa
lea
jle
lahf
mov
sar
pushl
pop
lcall
sub
fstpt
lret
repz
dec
push
lds
movsb
mov
jmp
movsb
mov
in
mov
pushl
std
mov
adc
out
jb
inc
jno
xor
push
xor
push
lods
mov
fs
adc
add
push
nop
fistl
in
testb
lcall
addr16
or
and
int3
loop
inc
icebp
sub
add
sarl
mov
jmp
sub
outsl
mov
ss
sub
lret
add
mov
pop
mov
pushf
push
les
sbb
inc
push
dec
sahf
popf
and
repz
incl
mov
sub
dec
push
repz
inc
sti
outsb
dec
mov
loope
push
ljmp
sbb
or
clc
sub
pop
xor
cmp
movsl
jl
imul
sub
jl
stos
or
xor
cs
jl
fisubs
lea
jmp
in
jbe
sbb
fwait
sbb
aaa
cmc
xor
out
fdivrl
jmp
loopne
jne
daa
jg
adc
lcall
pushf
mov
add
mov
imul
or
mov
jno
xchg
mov
decl
adc
mov
push
cs
xlat
cmpsb
fistps
jbe
inc
ds
cmc
test
inc
pop
pop
add
cmp
cmp
sar
mov
cld
mov
mov
mov
pavgw
ljmp
mov
pop
jg
adc
sub
and
sti
push
jg
inc
or
inc
or
inc
cmc
ds
dec
xlat
clc
add
clc
mov
add
scas
cmp
lret
sysenter
das
test
or
dec
test
jl
pushl
mov
outsl
stos
cmp
dec
aad
out
stos
test
mov
ds
jg
sti
cmp
inc
sub
sub
mov
dec
push
or
mov
es
sbbb
jmp
sub
scas
call
bound
addb
imul
jmp
ljmp
cmp
ljmp
sbb
loopne
add
jl
sar
lcall
xor
out
out
aas
arpl
pop
pop
push
ret
push
xchg
aad
mov
iret
push
call
cli
call
cmp
int
cmpsb
test
xor
dec
add
cld
xor
jmp
aam
out
clc
loop
mov
cmpsb
xor
cmp
pop
es
call
test
int3
sub
int3
inc
int3
aaa
mov
lret
jmp
fadd
daa
jmp
jno
xor
fsubs
in
das
cmpsb
xchg
int3
adc
sub
incl
loop
mov
pushf
decl
mov
push
mov
lea
mov
adc
testl
in
push
jg
pop
icebp
push
fwait
and
std
leave
xorl
dec
push
and
call
outsb
add
test
xlat
mov
mov
icebp
or
ja
lcall
hlt
out
jns
jl
mull
inc
inc
and
int
mov
xor
cs
mov
sbb
push
add
cmp
mov
jg
ja
cwtl
and
ja
or
jle
push
pop
rorb
xchg
jecxz
loopne
mov
cli
call
std
stc
or
and
and
add
sti
mov
push
inc
cmp
call
rolb
pop
enter
adc
xchg
mov
test
ljmp
xor
mov
arpl
adc
push
nop
std
xchg
repnz
js
fcompl
insl
dec
xorb
add
stos
divb
pop
repz
movsb
adc
jo
push
pushl
insb
fildl
into
xor
pop
sub
push
dec
fiadds
out
nop
jmp
sub
adc
hlt
jnp
rorb
pop
ja
stc
mov
mov
incl
imulb
inc
dec
sbb
mov
pop
out
int3
lea
or
incl
dec
xchg
or
xor
loop
mov
push
add
pushl
push
in
xor
mov
push
rolb
and
mov
clc
fbstp
mov
fisttpll
mov
jmp
jl
jge
aaa
dec
stc
sahf
push
lcall
sub
jmp
fildll
repnz
iret
jmp
fisttps
cwtl
add
outsb
and
push
xor
inc
insb
sub
call
mov
adc
clc
mov
addr16
repz
and
xchg
ljmp
rolb
insl
mov
fcmovnb
mov
in
ljmp
cli
sub
fsub
subb
pop
testb
je
xchg
cmp
sub
test
call
jb
mov
jmp
xor
dec
push
jle
push
mov
jp
outsb
dec
lahf
cmpb
xchg
mov
std
or
inc
push
push
out
jns
incl
repz
push
daa
add
cmpsl
out
testb
scas
subl
insb
mov
aas
cwtl
pop
push
mov
xchg
xlat
lock
adc
inc
xor
xlat
and
jp
cltd
push
sbb
incl
sub
out
jnp
jb
jns
push
jmp
scas
icebp
sbb
scas
jmp
sbb
icebp
faddl
and
mov
jmp
outsl
insl
hlt
sub
mov
cli
xchg
rol
jne
addb
loop
in
mov
faddl
push
dec
loope
pop
loopne
push
ljmp
in
test
fs
sbb
popf
sub
hlt
call
and
xor
xchg
aad
xchg
loop
icebp
and
mov
fs
inc
scas
dec
fcomip
clc
mov
xor
enter
lock
pushf
aam
out
int
int3
push
decb
call
xchg
jmp
sbb
in
repz
outsl
xor
enter
fs
cmp
fcom
push
aam
fs
mov
jg
fdivs
js
incl
stos
or
scas
dec
mov
repz
fs
cmp
ljmp
dec
in
jmp
decb
cmp
aad
pop
add
repnz
sbb
fcomip
incl
out
ss
xor
push
inc
and
call
or
clc
incl
sbb
mov
fidivrl
jno
outsl
shl
jno
add
dec
mov
ljmp
stc
pop
fsubl
inc
jp
lods
orl
add
sbb
push
das
sub
ljmp
or
lret
dec
fmuls
mov
in
dec
fwait
mov
mov
aam
sbbl
push
add
pop
in
mov
mov
or
mov
fistpl
cmc
ljmp
cmpsb
xchg
pop
dec
mov
scas
sbb
xor
xor
and
mov
jmp
loope
sbb
sahf
jg
adc
mov
sbb
xlat
push
mov
jg
call
mov
pop
jle
dec
cwtl
and
lods
cli
add
dec
mov
lcall
shrl
test
mov
scas
out
adc
or
mov
jne
or
cmp
test
xchg
xchg
mov
fdivrs
pushl
ds
xor
mov
push
fisubs
rorb
icebp
cwtl
loope
fmulp
push
cltd
or
pushl
sub
jmp
cmp
out
push
add
sub
jg
cmpsb
popa
push
je
stos
jno
sub
stos
sysexit
cmpsb
into
rcrb
arpl
lret
mov
adc
pusha
cmp
test
mov
decl
jl
test
sub
inc
cmp
sbb
outsl
mov
es
movsb
sbb
mov
lcall
cmp
orl
xor
daa
xchg
insb
cmp
pop
das
sbb
repnz
dec
movsl
and
test
add
aas
fisttpl
jbe
jae
lret
decl
xor
sub
xrelease
and
push
cld
aad
lcall
cmc
test
pop
sti
mov
popf
inc
insl
sbb
pop
stos
or
dec
jp
mov
xor
sub
mov
mov
or
sarb
push
xor
inc
sbb
cwtl
cld
clc
mov
scas
repnz
mov
pop
sbb
sub
out
js
jmp
das
arpl
test
fimuls
jge
lock
sbb
xchg
adc
call
cmp
roll
scas
pusha
in
pushf
jecxz
lods
incl
mov
push
dec
shlb
jp
push
inc
adc
call
xchg
iret
in
clc
mov
inc
mov
dec
sar
sub
xor
pop
int3
push
mov
add
decl
sbb
xor
mov
push
incb
test
test
mov
mov
ljmp
mov
dec
pop
cltd
das
movsb
xchg
insb
pop
ret
mov
sbb
push
mov
adc
nop
icebp
jg
push
and
mov
mov
adc
in
pop
jl
out
int
and
push
cld
in
stos
fs
faddl
pop
pop
cmp
mov
pop
dec
into
ljmp
xchg
outsb
lods
dec
pop
scas
xchg
sub
les
xchg
sbb
fnstsw
and
flds
and
or
cmp
sub
and
cmp
ja
cltd
decl
sub
xorb
mov
pop
push
push
sub
adc
div
inc
mov
xchg
clc
hlt
rolb
lcall
andb
ficomps
push
mov
dec
cmpsl
movsl
push
pop
push
filds
inc
jmp
lcall
or
fcmovne
sbbl
dec
mov
out
shlb
mov
cwtl
sbb
insl
dec
mov
clc
or
jle
leave
int3
scas
aaa
adc
pop
lods
and
test
cli
mov
cmp
xor
in
or
xchg
ret
decl
fstps
jge
mov
pop
not
shll
popa
js
pop
jp
dec
add
sbb
ljmp
imul
icebp
scas
jae
mov
out
xchg
dec
movsl
jp
ja
rcrl
enter
ljmp
cli
cmpsb
sbb
fsub
scas
call
dec
xchg
sub
xchg
or
aaa
cld
pop
mov
outsb
out
jo
sub
sub
cmp
ljmp
loope
sbb
jae
add
movsl
pop
inc
dec
dec
mov
sbb
mov
test
pop
mov
lahf
mov
jb
xor
add
and
pushl
fiadds
sbb
lret
pop
push
movups
sti
sub
jle
pop
cmpsb
adc
out
clc
mov
jne
mov
test
imul
push
in
pop
loopne
loopne
inc
mov
xlat
shrl
inc
sub
adc
cmovl
fbstp
iret
outsb
pop
mov
jmp
cmp
sub
fdivrs
sub
and
add
test
mov
mov
sar
mov
mov
movsb
jne
mov
aad
xchg
stos
mov
jge
push
mov
mov
decl
outsl
jg
dec
test
int3
aam
cli
mov
adc
sub
popa
cwtl
or
mov
mov
rdtsc
shld
lret
repnz
mov
dec
adc
jmp
flds
push
pop
push
gs
hlt
fmulp
push
push
and
jge
es
jne
mov
xor
push
ds
pop
fstps
pushl
ret
push
jmp
out
cmp
js
stos
fcomps
pushl
mov
jp
mov
sub
push
push
daa
in
cmp
adc
push
rorb
push
ret
mov
jbe
decb
idiv
ljmp
push
pop
popa
xchg
jno
push
cmp
movsl
test
push
push
or
dec
cmp
out
sbb
icebp
xchg
xor
push
or
adc
lcall
ret
ss
cwtl
add
or
xlat
incl
push
repz
sahf
sub
cs
or
xorl
cmp
pop
inc
adc
add
mov
push
mov
pusha
lahf
stos
and
out
cli
lods
ljmp
stos
enter
call
jb
in
icebp
jb
rcrl
xchg
mov
mov
rcrl
adc
inc
jbe
enter
push
aaa
inc
and
mov
mov
pop
sbb
pop
shl
mov
lcall
decl
pop
add
mov
add
sub
mov
aaa
push
clc
lcall
add
loope
xor
mov
xchg
popa
sbb
outsb
lret
ljmp
or
mov
jno
push
por
xchg
adcl
in
mov
add
xchg
pop
bnd
std
iret
pop
movsl
mov
push
adc
sub
adc
jne
ljmp
pop
icebp
inc
into
cmp
lock
fcoms
outsl
push
pop
popf
js
and
ds
test
and
mov
data16
aad
mov
xchg
pushl
lods
mov
loop
insl
ret
push
movsl
popa
sahf
fbld
imul
out
push
push
xor
push
sub
xor
test
mov
pop
inc
xchg
cmp
ds
push
jg
or
mov
mov
mov
mov
loope
imul
add
pushl
dec
dec
test
rol
cmp
mov
sbb
lahf
pop
out
mov
or
stos
popa
stos
mov
pop
movsb
dec
dec
mov
aam
fdivr
decl
shlb
les
add
aas
pop
pop
mov
cmp
mov
repz
mov
lcall
out
sbb
test
icebp
xchg
stos
push
jg
lds
dec
jmp
std
popf
add
loope
cld
mov
incl
out
movsb
xor
pop
out
jge
cmp
repnz
movsb
js
ds
adc
call
lret
or
jae
push
or
test
stc
sub
mov
pop
lret
into
dec
cmp
rorl
jnp
int3
ficompl
mov
mov
mov
cs
mov
outsl
pop
pop
in
repz
or
pop
outsl
dec
jp
ja
inc
dec
enter
jle
dec
cmp
or
push
fldcw
xchg
ret
lahf
mov
cmp
imul
or
orl
cmp
mov
js
std
mov
ret
pop
dec
fdivr
pushl
insl
jmp
or
inc
and
fs
add
imul
xchg
mov
inc
fdivrp
call
std
add
cmp
or
cmp
mov
shl
shrl
push
rcll
pushl
adc
aaa
adc
and
push
icebp
imul
push
add
sbb
repz
lock
lods
mov
adc
mov
test
push
sbb
sub
int
outsb
icebp
pop
sub
outsb
sar
jecxz
add
mov
pushl
push
ret
add
pop
inc
xchg
ds
mov
sti
sbb
popf
int3
int3
mov
ja
lahf
popa
xchg
in
test
adc
pop
xchg
push
loopne
pop
cld
or
dec
dec
loop
movsb
in
cwtl
push
pop
aas
jne
mov
call
adc
lret
sti
mov
push
xlat
sti
mov
pop
adc
test
pop
xchg
sbb
sar
call
daa
lods
sub
subl
dec
and
sub
popa
dec
repnz
lcall
xorb
insl
and
sarl
xor
xor
xchg
mov
dec
aaa
and
cmc
jmp
or
dec
push
cmc
shlb
int3
inc
add
jo
sbb
fdivrp
lods
push
lcall
inc
mov
ret
mov
mov
dec
fildll
xor
repz
jmp
adc
xchg
out
add
jno
cmc
push
pop
lret
mov
mov
insl
repz
pushl
cld
jle
ja
roll
ja
test
jbe
jmp
addl
std
jg
jecxz
scas
xchg
sub
jl
mov
lock
adc
jmp
mov
repz
jge
fwait
sbb
lahf
mov
out
pushf
and
inc
pop
mov
insl
pop
clc
xchg
ljmp
pushl
push
lea
ds
into
outsb
lahf
daa
xor
in
pop
cmp
jmp
pop
sar
lcall
fsubrs
sbb
rcrb
out
sub
fwait
hlt
add
icebp
xor
jg
cmp
xchg
cmc
mov
pop
xchg
push
adc
aas
aaa
outsb
mov
add
inc
inc
sub
mov
outsb
movsb
repz
xor
mov
test
inc
stc
pop
dec
notb
iret
or
pushf
or
loope
mov
stc
cwtl
cmc
subb
enter
sbb
lcall
out
fwait
jmp
pop
and
jmp
iret
mov
sub
into
lcall
lods
nop
incl
add
jl
pop
xchg
mov
test
or
lods
push
dec
dec
lods
and
decl
lock
jnp
push
mov
movsb
jle
adc
test
into
mov
popf
lea
push
das
pop
mov
fisttpll
mov
ljmp
shlb
pop
dec
pop
xchg
cwtl
cmp
jo
jb
inc
movsl
pop
aad
adc
call
xchg
mov
insb
leave
mov
xor
cwtl
push
dec
jle
cmpsl
dec
pop
call
xchg
loop
repnz
notl
adc
insl
mov
mov
push
and
decl
add
aad
das
adc
ss
sub
cmpl
lret
call
dec
mov
dec
ret
imul
inc
mov
lcall
cs
mov
sub
pusha
test
dec
dec
lds
xchg
test
adc
jecxz
std
lcall
xchg
mov
enter
leave
cmp
icebp
push
add
call
xor
mov
fwait
aam
lret
xchg
in
add
es
ljmp
xchg
rclb
inc
jo
cmp
add
stos
incl
test
inc
ret
in
pop
lods
in
addr16
cs
mov
gs
stos
sbb
mov
push
sub
ficoml
push
xlat
sub
pop
sub
divl
aam
add
addl
dec
mov
ljmp
push
enter
xchg
sbb
mov
je
aaa
lret
out
in
mov
mov
imul
jmp
andl
aad
mov
cmpsb
or
pushf
cs
in
cmpsl
clc
in
or
int
sar
js
jmp
lcall
mov
sbb
fmulp
sub
xor
imulb
fisubrl
cmp
imul
xor
push
mov
xchg
ja
xchg
ljmp
dec
mov
repnz
out
inc
jbe
sub
xchg
ljmp
inc
daa
outsb
andl
pushf
jl
bound
fwait
cmp
lret
lcall
pop
mov
shl
ja
sbbb
into
mov
push
jle
mov
decl
jmp
pop
sbb
jb
and
icebp
sbb
cmc
pop
mov
jo
sbb
jne
jg
clc
dec
xchg
enter
sbb
mov
jmp
xor
lcall
ljmp
xor
fcomps
add
rcll
decl
push
cmpsb
repz
ljmp
lds
call
popf
push
insb
mov
mov
aad
iret
xlat
fwait
mov
gs
ljmp
cli
pop
add
loop
xchg
loop
xchg
push
cwtl
push
xchg
dec
push
xchg
push
xor
xchg
call
stos
inc
cld
jo
mov
in
mov
and
xchg
jp
in
inc
fwait
and
dec
addr16
add
xor
adc
std
cmp
sub
fcomps
ja
jge
cli
sarl
lahf
xor
jno
mov
sbb
das
rorb
sbb
fcomip
xor
pop
negl
sbb
cld
xchg
xor
jmp
pop
es
repnz
mov
add
push
out
movsb
nop
sbb
jg
outsl
repz
scas
push
dec
mov
psllw
int3
lahf
popa
test
lcall
incl
and
popa
push
push
mov
bound
push
scas
std
push
mov
mov
inc
in
sbb
and
jo
jge
xchg
lea
cmc
xor
inc
decl
xor
sti
jmp
xor
mov
in
mov
and
xchg
mov
call
ffree
dec
mov
pop
mov
push
pop
inc
add
enter
call
inc
mov
call
push
push
mov
ss
nop
insb
and
sbb
mov
sahf
xorb
in
jecxz
push
pop
aas
and
ljmp
adc
xchg
add
jecxz
pop
lcall
lods
loop
fcomip
ljmp
imul
add
data16
push
movsl
jns
sbbl
pushl
adcb
in
pop
push
and
pop
push
dec
inc
and
incl
cwtl
jp
push
lods
mov
dec
inc
int
movsb
fldcw
xor
xchg
dec
insl
push
rcl
xchg
xor
std
pushl
call
and
in
and
sbbl
mov
cs
jle
lcall
and
inc
inc
inc
mov
leave
jne
rcr
ds
shll
js
xchg
lcall
out
cmpsl
or
ret
ljmp
adc
pop
lret
sbb
and
push
mov
jbe
or
ss
lcall
negb
push
inc
push
leave
sbb
mov
je
mov
xchg
or
pop
fstpl
inc
andb
ret
inc
dec
jp
xchg
call
xchg
jnp
subl
insb
ja
cwtl
or
in
addr16
sub
and
push
mov
lcall
lods
inc
xchg
xor
and
das
pushf
stos
jle
jmp
cmpsb
insl
lahf
xor
sub
loope
jb
mov
fistpll
stos
les
pop
push
jecxz
loope
fwait
enter
dec
jg
jp
mov
lods
hlt
testb
inc
test
rcl
lods
mov
dec
xchg
jg
test
pop
pop
outsb
rcrb
mov
push
lods
push
xchg
jns
pushl
shl
jmp
mov
sub
in
jle
mov
loop
mov
test
adc
out
push
jne
aaa
in
shl
inc
fiadds
aaa
fwait
imull
in
in
adc
pop
popf
call
repnz
push
sub
dec
popf
push
sub
es
sub
jl
pop
scas
pop
pop
out
push
les
xorl
jp
jecxz
mov
jmp
ljmp
call
sbb
push
ret
mov
push
jmp
lods
rol
loop
lea
mov
dec
mov
jb
std
bound
xor
mov
nop
dec
or
rcrb
aam
fwait
mov
mov
popa
loopne
sub
xchg
fabs
cmpsl
pop
outsl
les
push
imul
and
les
sub
add
dec
popa
sbb
faddl
fidivl
inc
leave
cmp
inc
cmp
jnp
sub
xor
cltd
fildl
mov
jle
je
call
js
xchg
mov
pop
mov
xchg
loopne
data16
push
or
out
push
xlat
pop
ljmp
push
pop
das
loop
add
mov
jno
fsubs
cmp
cld
cmp
outsl
sub
sub
ret
mov
cmp
std
cmp
int3
mov
xchg
push
xchg
test
lcall
sbb
ljmp
sbb
lock
fidivl
add
mov
call
jg
divl
sbb
mov
pop
shrl
add
adcl
inc
repz
jecxz
push
mul
mov
rcr
inc
push
scas
inc
imul
sbb
jmp
sbb
mov
loopne
or
cmpsl
in
sbb
xchg
push
and
jge
fdivrl
es
mov
call
inc
andb
pushf
subb
pop
dec
bound
notb
decl
sbb
jne
push
nop
subl
scas
pop
mov
mov
sbb
mov
loop
jb
repz
adc
clc
testb
push
popf
pop
cmp
mov
test
test
outsl
dec
xor
stos
mov
cmpsb
dec
cltd
cmp
dec
call
mov
arpl
subb
jp
xchg
test
mov
fsubs
mov
incl
pop
xchg
out
push
lahf
or
in
cmp
hlt
adc
jmp
out
imul
pop
mov
add
mov
data16
movaps
fnstenv
mov
inc
inc
rorl
outsb
jnp
repz
repnz
call
pop
clc
aaa
xchg
xlat
push
dec
cmpb
movsl
sub
dec
mov
lea
push
in
xor
cmpsb
lahf
jle
mov
nop
icebp
insb
lock
dec
jg
sbb
lret
or
pop
push
jl
rcrl
add
sub
pop
dec
fdiv
push
xlat
sub
dec
cs
jne
jle
jle
lds
inc
pop
jmp
daa
clc
lret
mov
jmp
sbb
int
mov
std
test
out
in
inc
pop
test
decl
cmpsl
add
lock
inc
push
lcall
nop
add
jne
sbb
fldt
testl
scas
dec
pop
not
imul
ret
subl
arpl
das
mov
movsl
out
aaa
push
jae
lcall
jmp
mov
fldl
add
ret
mov
jl
mov
pop
jmp
pop
sbb
ljmp
sub
push
scas
dec
pop
jp
lret
ja
pop
ret
hlt
pop
jg
out
clc
movsb
pop
inc
bound
inc
mov
jmp
out
in
fdivr
sbb
push
cmp
outsl
mov
lahf
jbe
iret
stc
push
pop
enter
jecxz
jg
push
inc
jle
ja
enter
repz
sub
dec
inc
lret
mov
fbld
sbb
add
push
dec
shlb
and
rep
add
dec
jle
inc
call
and
fisttps
test
jl
mov
ljmp
aad
xor
popa
pop
pop
dec
out
jns
mov
mov
incl
pop
xchg
mov
inc
lds
enter
ss
das
dec
ja
ds
fcomi
std
stos
incl
xchg
pop
nop
mov
xor
in
shrb
mov
mov
test
and
mov
add
aaa
aas
push
jg
leave
fnsave
dec
cmpsl
xor
mov
or
nop
add
mov
aad
mov
cmc
jecxz
inc
mov
imul
jle
rorl
mov
stos
ljmp
std
jmp
mov
jp
mov
lock
mov
insl
dec
push
andl
sbb
cmc
mov
ds
add
push
cmc
or
xchg
mov
cmp
pushl
repz
jbe
fldt
add
inc
push
xor
das
inc
add
jb
stos
sbbb
decl
jne
mov
push
pop
mov
popa
pop
push
cmp
jge
movsl
push
adc
fmuls
dec
div
shrb
pop
dec
lret
in
add
xlat
lcall
insl
xchg
mov
loop
jne
xchg
mov
ss
cmp
jg
inc
ret
sti
orb
cmp
rcrl
mov
sub
push
jp
sbb
subl
imul
xor
and
lcall
test
ffree
setl
in
jns
subl
cmp
adc
add
mov
lahf
jo
mov
daa
dec
pop
incl
ds
mov
stos
push
inc
ret
movsb
cmpsl
adc
inc
add
shl
mov
test
mov
inc
xor
movsl
inc
push
outsb
push
pop
popa
xchg
aad
daa
fcomip
dec
mov
xchg
or
cmp
dec
aam
add
xchg
adc
fimuls
push
inc
push
xor
jne
jl
test
unpckhps
fwait
imul
jno
sbb
dec
sbb
mov
sbb
pop
and
sarb
pop
out
ss
jmp
add
pushf
gs
out
adc
jg
sub
or
ljmp
sti
jnp
pop
add
imul
stc
testb
pushl
movsl
mov
mov
into
fs
into
or
insl
cmp
popa
clc
push
ljmp
xlat
jg
push
mov
xchg
push
call
sbb
xchg
mov
jmp
jb
popa
inc
push
dec
jmp
ret
clc
fwait
mov
mov
call
scas
stc
sbb
dec
call
push
fs
or
or
mov
cmp
popa
fsub
and
orb
pop
xchg
call
enter
adcb
das
and
cmp
data16
push
aas
xlat
dec
jno
repz
call
cld
push
data16
scas
int3
cmp
jl
hlt
mov
ja
ja
call
sbb
mov
scas
orl
sub
xchg
mov
fwait
out
xchg
adc
loop
mov
cltd
jbe
aaa
cmpsb
sti
neg
add
mov
jg
lret
lcall
lea
push
je
rorl
test
call
jg
in
dec
add
mov
hlt
fdivp
cmp
les
mov
or
scas
into
cs
pop
stos
pop
mov
jo
mov
pop
in
call
loop
cmpsb
pop
lret
or
ja
pushl
fadd
sub
jbe
push
mov
dec
pop
or
jo
arpl
pushl
fldcw
outsb
pop
mov
cli
push
mov
mov
jno
scas
jge
pop
loopne
incl
fwait
or
inc
pop
dec
and
scas
add
and
pop
inc
sbb
cmp
push
push
icebp
aaa
cmp
jne
add
pusha
pop
xchg
mov
push
or
add
decl
dec
add
popa
push
push
shrb
es
push
daa
in
fwait
jge
out
pop
fcomip
jmp
pop
lods
out
aam
jo
cld
scas
add
adc
pushl
in
mov
sbb
mov
adc
and
adc
mov
hlt
loope
call
lret
sar
mov
lcall
dec
decl
leave
mov
or
imul
in
in
movb
std
aas
sub
inc
pop
lds
loopne
mov
into
mov
mov
mov
mov
dec
mov
cmpb
test
daa
outsl
and
out
xchg
fwait
ret
cltd
repnz
subb
pop
lret
cmp
inc
adc
inc
xchg
outsl
test
dec
dec
fdivp
fdivr
jg
fcoms
lahf
mov
outsl
mov
and
pop
xchg
mov
mov
cmp
dec
pop
push
in
lods
sbb
test
or
pop
das
xchg
jnp
jmp
popa
pop
fidivl
out
sets
push
xchg
cmp
das
lds
icebp
mov
jg
test
outsb
mov
sub
mov
std
or
in
push
adc
adc
ljmp
jno
iret
add
or
push
imul
cwtl
faddp
xor
loopne
dec
scas
je
imul
incl
and
and
mull
mov
lods
rorb
add
ljmp
jns
dec
xor
add
mov
and
jmp
mov
call
dec
ret
int3
jecxz
fs
dec
bound
push
in
and
hlt
and
jmp
nop
in
or
push
outsl
rcrl
xchg
jmp
in
nop
push
out
rcr
lcall
pushl
pop
int3
and
push
cmp
fisubs
and
shrl
shr
jbe
sub
aad
mov
shlb
mov
mov
stos
inc
aam
pushf
clc
xor
adc
loopne
cld
pop
push
in
cmpb
int
mov
push
mov
mov
dec
mov
jmp
pushf
mov
xchg
scas
outsl
lcall
xor
jmp
fnstenv
iret
out
dec
push
sahf
cmpsl
outsb
mov
scas
gs
call
dec
leave
int3
jne
add
cmpsb
mov
xor
jg
fwait
js
mov
sub
fdivrl
and
jmp
push
test
decl
xor
fwait
sti
icebp
mov
or
outsb
jo
push
adc
xor
ja
call
movsb
jle
pop
and
and
mov
enter
or
repz
aas
push
push
xor
adc
jp
and
inc
js
push
push
push
lahf
movsl
sub
imul
xlat
cwtl
mov
ljmp
out
mov
jl
shl
xor
push
mov
xor
outsl
fldl
jmp
jmp
pop
fwait
es
mov
out
dec
adc
xchg
jo
loope
cmpsl
dec
dec
mov
mov
fildll
dec
mov
ss
adc
lret
xorb
jmp
push
jmp
imul
incl
cmp
sti
xor
loop
out
pop
cmpsb
mov
fs
stos
adc
pop
cs
sub
jg
adc
push
jecxz
fwait
lods
dec
dec
js
mov
xchg
outsb
xchg
ja
sub
mov
insb
aam
fwait
clc
fcomps
cmpsb
popf
add
pushf
jge
es
mov
cmp
jg
ds
jg
lock
stos
cmpsl
shlb
push
jns
add
stc
or
pushl
mov
fistpll
jle
lahf
and
xlat
aaa
std
pushl
sbb
cmpsl
fyl2x
iret
jb
popl
mov
out
mov
jg
into
pop
repz
push
jne
cmc
cmp
out
pop
push
idivl
and
je
ja
cmp
decl
xchg
repz
add
ljmp
push
subl
jbe
adc
jae
lock
jmp
cmp
push
mov
fcmovbe
addr16
and
repnz
ss
call
lret
or
cmp
incb
stos
ffree
scas
les
in
arpl
les
lock
or
push
pushl
fsts
adc
inc
or
or
mov
into
push
sbb
mov
mov
aad
jbe
out
loope
loop
nop
or
inc
cltd
insb
jle
mov
popf
cmp
leave
sub
sub
push
div
les
ja
data16
mov
push
adc
pop
cltd
inc
jmp
sahf
mov
jmp
push
inc
jnp
loope
sahf
js
mov
sbb
cld
adc
ror
outsb
je
jg
call
icebp
aam
jnp
lock
addr16
adc
aam
jmp
addl
push
pop
fimuls
inc
cli
mov
jnp
ljmp
bound
jecxz
jne
aam
iret
cmp
ja
popf
lahf
je
lret
xor
xor
decl
outsl
insb
push
cmpsl
test
push
cld
pop
pop
or
sub
jns
push
arpl
mov
and
mov
test
or
cmp
pop
cmp
cld
mov
sub
adc
rorl
or
loopne
or
mov
std
pop
aam
dec
fdivl
push
popa
int3
or
adc
nop
in
mov
sahf
ja
mov
fldcw
in
fsubrs
cli
push
ljmp
and
into
mov
imull
and
aad
test
lcall
out
pop
sub
and
jge
in
lret
aad
aam
push
and
test
and
call
sub
push
xor
xchg
stos
mov
mov
mov
or
mov
lahf
lcall
lcall
and
inc
cltd
adcl
movb
test
icebp
jmp
add
stos
xchg
jg
loope
pusha
mov
pop
jmp
aad
mov
push
jg
jae
ffreep
sub
or
iret
aam
push
mov
mov
lds
shlb
fsubl
adc
mov
jo
dec
dec
es
mov
jns
jne
rolb
add
xchg
push
adc
lcall
fiaddl
and
mov
lahf
mov
and
movsb
inc
or
faddl
movsb
mov
mov
mov
pop
xchg
or
movsl
jb
mov
pop
add
decl
lods
jo
outsb
add
shrl
and
push
out
sub
call
cmc
inc
test
pushf
xor
cmp
leave
repz
outsb
mov
in
cmpsb
mov
pop
ljmp
sub
push
addr16
mov
inc
mov
xor
adc
cmp
or
addl
cmp
outsb
dec
sub
stos
xchg
adc
xor
gs
ret
decl
add
cmp
daa
shll
and
test
movsl
imul
push
ljmp
mov
nop
push
xlat
jge
fildl
fisttpl
popf
sti
sub
ss
das
xchg
or
push
push
aas
popa
cmp
aas
cld
stc
cld
ljmp
xchg
inc
xchg
adc
mov
sbb
pop
and
ret
cwtl
push
xor
test
call
insl
xor
out
and
jnp
pop
inc
mov
xchg
add
mov
aaa
cld
decl
jg
in
jae
and
mov
es
and
pop
xchg
decl
adc
xor
or
or
push
or
mov
pushf
nop
xchg
loopne
mov
sub
sub
fstl
or
bound
mov
into
fmul
fnsave
movsb
pop
out
les
xor
fildll
mov
call
add
sbb
mov
into
sub
pop
dec
jmp
int3
icebp
loopne
scas
lock
scas
mov
fcomip
call
mov
dec
adc
pop
shl
xor
and
xchg
xor
scas
sahf
mov
div
cli
cmp
mov
push
cmp
mov
dec
jg
call
mov
sbb
mov
mov
inc
dec
ret
xor
push
adc
pop
aad
pop
incl
inc
pop
jg
and
sahf
sub
shr
hlt
inc
dec
ljmp
push
dec
jecxz
call
mov
jmp
scas
mov
scas
or
adc
mov
ja
maxps
jecxz
inc
popa
sbb
mov
xchg
pop
lods
sbb
xchg
decl
push
xor
sub
add
sub
sbb
test
test
cmp
or
adc
push
push
shr
enter
dec
loop
cmp
and
arpl
jo
test
jl
jp
add
dec
mov
orb
mov
decl
push
repz
das
sub
aam
pop
test
out
mov
jl
mov
lcall
add
ss
inc
ret
pop
push
cs
pop
pusha
pop
and
adc
fs
jg
or
call
out
out
cmc
fidivrs
lods
inc
mov
adc
clc
jecxz
lret
cmpsb
dec
lret
lcall
dec
dec
mov
add
push
xorb
loopne
lods
jmp
insb
jne
lcall
mov
in
add
mov
cli
push
pop
mov
repz
add
sub
cli
jg
ret
jns
in
mov
addr16
sbb
fisttpl
into
adc
pop
add
out
in
xchg
jg
aaa
std
ljmp
rcll
insl
jl
test
test
in
sbb
jnp
movsl
pushf
fsubrl
imul
add
daa
inc
cmp
dec
mov
push
loop
int3
add
incl
mov
pop
push
mov
sub
dec
std
insl
sub
sbbb
pop
subb
aaa
cli
cmp
ss
pop
sub
push
hlt
jbe
aaa
sbb
push
jle
or
cmpsl
add
ljmp
cli
jmp
cmp
fcomps
jnp
mov
pop
fwait
pop
faddl
in
mov
in
jg
scas
iret
inc
pop
add
nop
aam
sub
aaa
das
xchg
jle
aaa
movsl
cmc
scas
pop
scas
push
push
icebp
sub
xor
lret
bound
add
sub
push
jns
bound
mov
push
fwait
inc
incl
push
js
inc
mov
adc
xchg
mov
dec
pop
pop
and
adc
data16
incl
test
hlt
or
cmp
stc
adc
mov
mov
es
int
rcr
mov
ret
popf
pop
push
clc
mov
or
jmp
decl
call
inc
inc
xor
push
sbb
decl
insb
fwait
pop
jmp
push
pushf
xlat
cmc
mov
fcomip
sbb
or
xchg
sahf
in
jecxz
mov
adc
call
cld
cmp
jb
adc
bound
jo
mov
ds
sub
fisttpl
cltd
out
jecxz
popf
sub
fimull
mov
mov
scas
lcall
mov
loop
dec
pop
cmp
mov
decl
loopne,pn
les
je
cmpl
lods
pop
adc
ror
push
enter
lret
loope
mov
adc
cltd
xchg
mov
dec
xchg
lcall
mov
testb
lods
xchg
pushl
lds
test
jp
pop
call
sti
or
aas
fcmovnu
jmp
aaa
cwtl
cli
test
cli
into
out
or
mov
mov
imul
sahf
mov
or
push
std
inc
mov
push
sub
cmp
cwtl
outsb
mov
pop
jp
dec
or
test
lock
out
cld
push
mov
jne
dec
ret
and
gs
dec
jl
xor
inc
jae
decl
mov
sub
insl
out
pop
cmp
daa
shlb
ret
or
hlt
frstor
dec
mulb
mov
ret
gs
lea
imul
fcomip
sti
inc
mov
sbb
inc
mov
cmc
sub
test
imul
jmp
add
mov
and
lea
aam
aas
pop
or
lcall
cmp
add
mov
add
loope
mov
movsl
out
cli
ljmp
jle
xor
lret
out
aam
adc
sahf
fdivl
in
adc
or
call
fbld
sbbl
xchg
arpl
pop
pop
gs
in
rorb
inc
pop
cmp
xchg
cmp
inc
aad
fmuls
ja
cs
sub
pushl
movsl
shll
scas
fsts
push
mov
scas
xchg
cmp
xchg
pop
cmp
inc
xchg
mov
pushf
sub
lods
or
imul
scas
ljmp
xchg
or
pusha
jne
pop
cmpsb
sbb
in
jno
xor
inc
inc
in
mov
int3
or
lods
push
aam
adc
popf
adc
sub
xor
aad
decl
addl
lahf
call
sti
inc
sbb
sub
add
jg
add
xchg
xor
shll
push
lock
lcall
loopw
adc
jo
pushf
arpl
push
push
or
iret
sub
xchg
jb
mov
out
fsub
fdivp
fwait
cmp
mov
jge
repz
pushf
cmpsb
jg
inc
ror
out
mulb
inc
ljmp
cwtl
fcoml
xor
fsubrp
dec
inc
iret
divb
jae
push
test
add
and
ljmp
cmc
sub
sbb
mov
push
pop
sar
mov
mov
push
loope
mov
clc
decl
aad
sub
xlat
sub
popa
jno
fsubs
cli
pushl
cmp
adc
add
es
mov
int
testl
decl
sarb
jnp
dec
push
das
push
sbb
xchg
push
dec
jo
mov
lods
cltd
mov
and
fildll
dec
mov
test
int
std
test
lea
clc
cmc
push
test
loope
call
pop
xchg
push
icebp
add
and
aaa
xchg
mov
call
dec
xchg
mov
push
push
dec
inc
test
test
test
int
and
lcall
mov
call
inc
ds
mov
decb
sbb
iret
sub
incl
adc
repnz
roll
lret
das
and
rclb
mov
lcall
pushl
inc
inc
xor
mov
stos
out
fistpl
push
outsb
std
adc
daa
popa
test
call
or
enter
lods
or
and
enter
jmp
adc
add
cli
push
lcall
xchg
into
mov
inc
jmp
inc
xor
mov
das
push
add
push
cmp
nop
shrb
pop
pop
pusha
mov
movsb
cs
pop
incl
in
ss
rcr
jg
adc
cmp
and
pop
fs
in
lods
push
xchg
push
or
div
cmp
pop
add
ja
scas
fs
mov
stos
adc
jl
popa
inc
packssdw
roll
or
sar
jmp
inc
pop
das
js
mov
insl
push
jecxz
popa
mov
fdivrl
jo
mov
call
lods
sbb
xchg
loopne
xchg
pop
and
and
jg
adc
inc
and
fidivrs
mov
inc
xchg
jg
mov
mov
xchg
and
not
aas
lret
sbb
ljmp
sahf
push
push
lcall
and
mov
imul
and
sub
int3
shr
ret
outsl
mov
imul
cltd
adcb
fidivrs
insl
push
pop
rcrb
jno
sbb
push
mov
lods
lods
xchg
xchg
enter
fstpt
sub
stos
sub
stos
or
cmp
add
sbb
call
push
jae
dec
mov
ret
xor
cwtl
adc
das
mov
ljmp
mov
cmp
fidivl
mov
sub
mov
dec
dec
in
je
push
loope
out
xchg
or
xor
aam
push
andb
pop
pop
xchg
and
decl
into
jmp
lcall
mov
jl
mov
xchg
jl
test
in
out
lods
xsha256
cmpsb
xchg
in
push
cmpsb
push
sarb
or
mov
sub
or
ljmp
mov
cld
js
mov
jae
aad
push
outsl
lods
mov
incl
adc
jbe
std
fisttpl
jmp
adc
jne
add
inc
push
ljmp
aaa
inc
cmp
sub
test
or
mov
lcall
fwait
aad
aas
jp
inc
dec
mov
inc
mov
repnz
cmp
std
cld
push
fidivrs
xor
out
mov
mov
jp
movsl
xor
lock
mov
sub
inc
push
repnz
fbstp
lods
roll
in
xchg
pop
or
repz
cmpsb
ljmp
test
xchg
sbbl
jp
jns
adc
aaa
psubw
sub
pushl
inc
sub
mov
ja
mov
adc
jge
inc
pusha
stc
cltd
pushl
out
xlat
xchg
mov
push
mov
addr16
and
mov
inc
lahf
xchg
gs
ljmp
pop
cs
cmp
mov
adc
mov
xor
outsb
out
xor
decl
mov
adc
aam
mov
dec
pop
mov
ljmp
clc
sti
adc
arpl
xor
ds
pop
pop
push
ds
decl
lock
fdivrl
in
dec
lods
inc
dec
std
and
sub
popa
jecxz
iret
push
adc
sahf
fdivrs
stc
adc
jg
fbstp
dec
dec
jecxz
fstpl
int
das
andb
decl
imul
sbb
sahf
sti
std
into
pop
inc
push
stos
test
divb
cmp
sahf
jbe
push
dec
or
test
xor
pop
cmpsb
adc
ljmp
mov
outsl
call
jnp
stos
sub
stc
push
jo
mov
cwtl
stos
mov
call
push
out
push
cmpsl
ret
mov
or
shlb
sti
mov
inc
sbb
adcb
dec
sub
ljmp
add
das
in
xor
leave
pop
ds
sub
xorl
lea
inc
clc
rolb
call
insl
std
lds
jmp
inc
mov
orb
pop
test
mov
sbb
stos
sub
stos
sbb
or
call
rcl
jle
int
outsl
xchg
out
popa
add
xchg
test
adc
jmp
jmp
pop
mov
addr16
xchg
xchg
rcr
and
jae
mov
decl
mov
dec
test
pop
in
fsts
xchg
faddl
sbb
mov
dec
lcall
cld
sbb
sbb
dec
je
cmpsb
and
jb
lods
cmp
sbb
jo
inc
shlb
pop
lahf
mov
fisubrl
popf
inc
cmc
adc
jecxz
stos
xchg
loop
lcall
adc
add
movsb
arpl
in
nop
mov
les
jg
adc
ds
pop
mov
push
push
test
sbb
scas
pop
lcall
mov
out
int
cmp
dec
mov
rcl
ljmp
push
xchg
ljmp
shlb
pusha
bound
push
out
jmp
cmp
and
mov
xor
scas
cmpsb
inc
jle
xor
mov
inc
outsb
aas
ss
cmpsl
cmp
mov
mov
xlat
addb
mov
mov
je
imul
std
decl
jle
imul
jp
pop
loop
jecxz
push
mov
pop
cwtl
xorb
cmp
pushl
enter
lods
mov
out
xor
leave
mov
inc
test
mov
add
sub
mov
adc
and
mov
repz
dec
ljmp
nop
and
fstpl
jg
mov
movsl
out
push
mov
mov
ja
insb
cmp
xor
cmpsb
incl
pop
inc
nop
push
mov
stos
and
jp
std
inc
mov
rcr
lods
movsl
out
cli
add
push
imul
jl
cmp
shlb
in
pop
mov
push
loopne
xor
ljmp
push
das
vpavgb
dec
cld
lods
dec
add
inc
add
or
mov
push
mov
adc
cmpb
mov
push
negl
rcrb
ja
ret
pop
or
insb
test
sub
jne
lods
add
adc
sbb
decl
bound
pop
fwait
pop
sbbb
push
mov
popa
and
and
out
pop
mov
hlt
adc
xlat
leave
jnp
movsb
lcall
mov
subl
lds
mov
inc
add
inc
hlt
push
inc
std
int3
mov
out
outsb
mov
pushl
dec
aas
push
adc
and
inc
push
mov
arpl
or
jecxz
js
cmpsl
dec
inc
fs
and
fistpll
sahf
mov
mov
xchg
xchg
mov
push
pop
outsl
in
call
ljmp
dec
sub
jg
cmp
adc
ja
sbb
dec
lods
ljmp
sahf
xor
rolb
xorl
in
fucomi
adc
cmc
pushf
xchg
addb
decl
cli
cmpsb
in
cmc
cmc
popa
inc
fildll
mov
push
arpl
lret
lea
repnz
sub
mov
jbe
ljmp
push
mov
mov
loopne
addr16
imul
mov
iret
pop
fstl
ja
pushl
lcall
or
jg
and
stc
push
bnd
cli
sbbb
mov
mov
adc
sbb
sub
xlat
ret
shl
sub
cltd
add
xor
bnd
je
cmp
mov
inc
adc
js
lds
out
mov
fcomip
cmp
cld
insb
loopne
sub
ret
dec
pusha
adc
push
fisubrl
add
ljmp
mov
mov
scas
insl
popa
cli
into
aas
call
fadd
or
sar
xor
fcmovnb
fistl
out
fwait
adc
pusha
mov
les
inc
pushl
shr
add
cmp
lock
idivb
push
or
cli
mov
stos
testl
dec
hlt
sbbl
dec
jno
push
cld
addr16
dec
or
int
adc
andb
std
arpl
lahf
hlt
mov
ljmp
dec
push
xlat
addr16
popf
lods
pop
xor
xchg
mov
pop
pop
andb
adc
decl
jno
scas
rcll
jne
mov
mov
pop
in
jno
fnstenv
in
sub
dec
and
sub
stos
movsl
andl
out
inc
mov
loopne
outsb
data16
mov
cmp
pop
mov
adc
inc
inc
jge
or
jp
push
pop
cmpsl
fisttpl
dec
loope
addl
lcall
jnp
iret
lahf
or
push
decl
cmp
inc
push
fs
stos
dec
popa
sub
mov
cld
lcall
leave
scas
inc
mov
mov
fs
sbb
aas
xor
or
inc
outsb
sbb
pop
lock
lods
es
xor
int
out
xchg
jg
scas
decl
xchg
or
xor
sub
push
pop
shrb
xchg
add
lahf
out
ljmp
dec
jecxz
das
pop
dec
dec
fistl
test
mov
cmc
xchg
in
jge
push
cld
call
push
jno
xchg
dec
sbb
sub
pop
jle
outsb
je
pop
call
mov
ljmp
in
jmp
icebp
push
add
repz
mov
jmp
out
push
iret
ja
dec
aaa
cmovae
pop
aam
sub
add
lea
js
ljmp
mov
in
outsl
mov
icebp
mov
push
sbb
fistpll
call
mov
test
pop
push
movsl
jns
push
push
repz
push
push
stc
lret
lcall
loop
jp
pop
stos
enter
and
xor
clc
pop
sub
lret
in
xsave
cmpl
jbe
push
mov
sub
mov
mov
lcall
xor
push
cmp
or
dec
sub
dec
push
dec
push
subl
jae
push
lret
ljmp
ljmp
xor
loopne
outsb
lahf
out
daa
xor
or
mov
adc
pop
ljmp
push
jmp
mov
cld
cmp
mov
arpl
pop
data16
sbb
xchg
xlat
inc
incl
rclb
adc
incb
cwtl
pop
test
leave
jno
cmp
mov
fisttps
sub
and
jmp
fcmove
sbb
pop
add
and
push
out
cmp
pop
std
decl
incl
jge
mov
and
filds
dec
iret
les
xchg
inc
test
xchg
nop
sbb
cli
call
jbe
imul
in
adc
mov
ljmp
push
xor
bound
dec
arpl
inc
jae
invd
loop
fwait
adc
cmp
lret
cli
mov
iret
lcall
pop
out
jnp
insb
inc
xor
mov
insl
ffree
cmp
lea
sub
sbbb
popf
add
push
repnz
jmp
jp
jne
and
incl
inc
lods
lea
iret
pop
popf
loope
xchg
ret
decb
sbb
lcall
lret
lret
ljmp
cmp
hlt
mov
idivb
decl
stos
mov
mov
clc
xchg
xor
xor
cmpsl
fmul
sub
bound
and
mov
mov
push
pop
test
pop
push
xchg
mov
inc
dec
jmp
inc
mov
lds
add
lods
sbb
pop
mov
ljmp
dec
cmp
int3
ljmp
cmp
test
sbb
jno
mov
je
add
mov
dec
scas
lcall
mov
push
aad
stos
pop
xor
inc
adc
addr16
int3
jb
out
popf
stos
in
int3
mov
xchg
inc
daa
lcall
jge
jb
les
cwtl
popf
pop
test
cld
cmp
jbe
pop
fwait
in
push
das
sbb
pushl
movsb
outsl
push
outsl
xor
int3
inc
sub
cmp
test
mov
push
fnstcw
stos
sar
cli
fcom
xor
fs
into
decb
or
xchg
ljmp
es
sub
lret
subb
sub
xchg
scas
in
mov
cmpsb
in
call
xchg
cli
pop
iret
dec
xor
adc
pop
out
cmpsl
out
and
dec
jnp
fildll
loope
xchg
mov
std
pop
insl
or
cld
fcoml
cmp
aam
inc
dec
mov
xor
jle
pop
cld
push
dec
dec
xor
pushf
inc
pop
std
pushl
insl
pop
lcall
xorl
lret
or
sub
and
cmp
inc
xor
sub
fmull
movsl
push
push
adc
hlt
dec
call
xor
es
in
xchg
enter
jg
xchg
xlat
scas
fidivrs
sbb
lcall
mov
xchg
fiaddl
or
sub
sarb
pop
xor
pop
add
jmp
out
add
clc
inc
rep
test
out
arpl
aad
xlat
sub
mov
fwait
mov
jp
lcall
push
sbb
cmp
dec
dec
jns
and
pop
xchg
push
push
and
jae
sti
outsb
cmp
cmc
daa
lock
adc
sti
fcomip
lcall
sub
dec
out
fstl
xchg
push
fldt
jnp
lcall
in
mov
and
stos
mov
lret
fadd
into
fildl
lahf
inc
lds
jbe
pop
es
inc
dec
scas
and
lret
pop
jecxz
mov
cmc
inc
lods
imul
xor
sbb
or
out
jbe
stos
ds
icebp
sbb
mov
fisubrl
mov
das
and
insb
movsb
lcall
inc
dec
mov
pop
push
mov
scas
cli
push
popf
andl
pushl
jmp
movsl
popa
sub
das
mov
mov
push
or
cmp
mov
cmp
fxch
lock
jns
inc
mov
clc
daa
loop
int3
test
mov
adc
loopne
cmp
jmp
pushf
int3
lods
sub
mov
xchg
and
jecxz
adc
outsb
sub
ljmp
clc
xchg
xor
pop
xchg
in
scas
test
fimull
in
lahf
push
push
sti
and
call
push
insb
mov
jmp
rcl
lock
xor
xor
outsl
decl
and
mov
jg
mov
push
repz
movsl
out
hlt
xor
xchg
add
jg
pop
dec
push
mov
sub
and
std
or
decl
and
mov
out
jl
add
mov
fdivr
push
xchg
xor
popf
movsl
in
aas
leave
xor
inc
leave
ss
fcomps
scas
sub
jno
push
push
fsqrt
mov
jg
mov
push
pop
fwait
into
push
jge
push
mov
cmpsl
cmc
insl
nop
repz
decl
stos
pop
xor
mov
inc
inc
push
inc
push
mov
dec
fdivr
or
add
popa
addb
mov
subb
out
jae
insb
xchg
out
cmc
fwait
push
test
rcll
pop
out
dec
pop
and
imul
incl
sub
mov
xchg
test
out
or
int
sti
and
sbb
call
mov
dec
loop
pop
mov
outsl
dec
movsb
arpl
sti
or
jle
in
pop
ficompl
adc
mov
lcall
test
xchg
sbb
imul
fcmovnb
lret
xchg
and
cmp
cmp
aas
test
inc
dec
mov
mov
scas
adc
movsl
out
jae
movl
and
ljmp
mov
sbb
lods
insb
xchg
cmp
mov
mov
lcall
test
lods
data16
aaa
ud1
xlat
je
push
pusha
push
sub
aas
add
cmp
pop
cmpsl
incl
fmull
push
lock
cmp
aaa
test
rcl
xor
ja
lock
in
mov
outsl
fisubrl
scas
mov
lock
pushl
inc
xchg
aad
adc
mov
lds
push
ljmp
movsl
scas
enter
mov
mov
mov
pop
cmp
sahf
cld
mov
dec
scas
cmpsl
je
movsb
fisubrs
pop
push
lret
xchg
cltd
fildl
inc
repnz
aad
fcmove
pushl
imul
aas
mov
test
push
shlb
or
ljmp
inc
jmp
add
or
mov
adc
mov
xchg
out
pop
and
lcall
movsb
sub
pop
or
repnz
enter
push
dec
das
push
mov
decl
push
loopne
push
out
mov
pop
lods
pop
jg
loop
sbb
sbbl
fcomip
adc
mov
subl
lods
lcall
mov
in
pop
cmp
call
and
sub
call
adc
jmp
popa
fcmove
call
jg
rolb
push
mov
cmc
sub
adc
jg
test
push
pop
sub
lret
mov
cmp
pop
mov
decl
adc
lcall
test
pop
push
or
mov
ljmp
add
jbe
cld
roll
pop
test
dec
cltd
in
xchg
aad
jne
js
movsb
movsl
sbb
mov
xor
push
push
cmp
pop
aam
divb
push
adc
movsl
shrb
add
call
sti
nop
leave
aas
js
movsl
pushf
mov
inc
push
push
jno
scas
test
push
ja
popa
jne
sbb
in
mov
scas
pop
ss
push
sarb
mov
aad
addb
popf
xchg
pop
pop
xchg
sti
int
jg
inc
or
pop
in
lcall
adc
popf
stc
xor
push
enter
fisttps
js
test
call
test
pop
aas
fsub
dec
rcrl
sbb
test
xchg
xor
int
lcall
xor
test
xchg
jnp
xor
sarl
push
and
not
aad
cld
push
sbb
push
adc
call
and
addl
out
repz
jo
dec
paddd
ljmp
fsub
adc
loopne
sti
out
adc
insl
fwait
hlt
push
push
push
xor
jl
inc
test
addr16
fldt
imul
imul
sub
enter
sub
ja
clc
incl
xor
inc
popa
mov
sahf
das
or
dec
xchg
scas
cli
decl
or
ret
lahf
mov
mov
bound
pop
cld
std
or
sub
push
sbb
xlat
push
xchg
pop
nop
fwait
into
stos
dec
pop
lea
or
jmp
push
test
mov
outsl
jge
shlb
flds
inc
call
pushl
mov
notb
jl
jns
frstor
pop
jbe
daa
mov
popa
inc
scas
adc
mov
aaa
jne
stos
add
ret
push
mov
sbb
inc
push
jno
stos
mov
jle
int
sbb
adc
add
push
mov
imul
dec
icebp
bound
dec
int3
push
pop
fcompl
jne
outsl
notb
mov
xor
cs
jmp
jle
lock
lret
outsb
jmp
cmc
nop
xchg
daa
mov
lods
cmc
jp
sub
stc
call
hlt
and
es
out
pop
jne
popl
push
xchg
inc
imul
pop
jno
dec
cld
test
dec
dec
mov
cmp
or
data16
lock
pushl
lock
rorb
mov
fwait
or
outsl
lret
pop
cmp
pop
loopne
ljmp
sbb
ret
sbb
stos
in
in
inc
adc
loop
dec
push
je
adc
sub
aad
sub
fisubrl
jg
je
inc
sub
cmp
xchg
add
sti
iret
out
arpl
jmp
ljmp
popf
test
mov
sti
loopne
cli
lcall
inc
movsl
mov
out
jl
cwtl
adcl
push
stos
cli
outsb
pushl
std
out
mov
aad
fmuls
mov
dec
fs
cmp
jno
sub
icebp
cmp
lods
movzbl
sbb
mov
inc
mov
lock
lcall
add
into
mov
movl
mul
decl
sbb
cmp
sub
fxtract
inc
addr16
ja
loop
push
les
clc
jg
lods
test
push
outsb
out
lcall
xlat
push
stos
jg
neg
ljmp
ds
xlat
out
imul
daa
cwtl
insb
mov
test
push
fldcw
or
aaa
jmp
cli
jecxz
sbbl
xchg
pop
lahf
mov
xor
arpl
roll
adc
push
jp
jmp
data16
cmpsl
scas
inc
cmc
sbb
call
sti
int3
adc
mov
shl
push
call
adc
shr
mov
ret
aaa
mov
push
nop
pop
jmp
add
fwait
aad
dec
xchg
cli
jmp
push
mov
out
aas
pop
sub
testb
insb
jmp
dec
ja
dec
mov
cmp
imul
and
gs
ficoml
jnp
loopne
push
repz
lcall
pop
pop
push
jg
outsl
mov
ja
aaa
or
cmpb
stos
push
popf
sub
mov
cld
in
mov
cltd
or
push
pop
mov
xor
dec
xchg
dec
cmpsl
jae
shl
sbb
mov
sbb
incb
sub
mov
idiv
in
ljmp
jns
aaa
insl
push
or
sub
ss
or
jnp
call
push
and
shlb
cltd
pop
and
aad
jmp
cmpsl
sub
jg
xlat
push
push
pop
mov
ljmp
test
pop
or
cld
cmpsb
rcr
sub
push
jp
jae
lret
out
dec
lahf
add
mov
or
idiv
call
add
inc
pusha
insl
dec
and
call
xchg
jge
lea
into
outsl
push
cwtl
mov
pushl
gs
push
scas
sahf
icebp
jo
ret
in
jnp
jns
dec
data16
popa
dec
xor
dec
mov
or
mov
loope
sub
push
lret
test
incl
lahf
stc
int3
pusha
daa
jle
add
adc
fmuls
xor
stc
jae
xchg
cld
mov
ljmp
shll
gs
xor
jns
das
cmpsl
mov
stos
push
stc
dec
ds
mov
push
out
pop
call
mov
push
xchg
mov
shr
aas
lahf
dec
insl
cmp
aad
push
scas
cmp
dec
test
call
shll
test
in
sub
shlb
test
push
lret
sti
aas
sbb
incl
std
stos
lods
inc
sti
repz
stos
or
cmc
repz
out
insl
cmpsl
cwtl
adc
decl
sub
das
imul
mov
loope
sub
cli
xor
xchg
and
mov
lcall
scas
mov
repz
inc
sbb
pop
les
test
nop
xlat
pushl
cmp
out
out
cmp
pop
pop
popl
adc
es
aaa
mov
int
ljmp
ljmp
mov
scas
scas
aas
lods
je
mov
stos
xor
nop
jmp
pop
jl
mov
aas
pop
leave
je
jo
mov
pusha
cwtl
mov
xchg
fsubrl
js
fsubrs
pop
mov
outsb
add
jmp
mov
mov
cwtl
ret
bound
icebp
rorb
fstp
pushf
add
push
xchg
sbb
call
xor
sahf
add
outsl
sbb
stos
int
ljmp
sub
inc
and
leave
out
xchg
and
cltd
das
cmpsw
fldenv
sbb
incl
fildll
ds
inc
mov
adc
jne
inc
lcall
push
add
lock
jns
clc
xor
pop
push
mov
mov
dec
loope
push
popf
lock
push
nop
lcall
jmp
inc
mov
cmpb
mov
cli
pop
or
les
decl
xor
push
aad
sbb
inc
jb
jnp
aad
in
pop
adc
rclb
mov
cmpsl
out
cmp
mov
mov
xchg
sbb
hlt
pushf
sub
inc
push
lcall
cmp
repnz
outsb
and
or
mov
aad
pop
jl
loopne
ret
call
stc
repz
orb
inc
sub
dec
push
ss
out
mov
clc
jmp
push
pop
mov
or
add
sarb
mov
add
pop
push
mov
sub
or
sub
adc
hlt
in
gs
lcall
add
gs
mov
lret
xchg
iret
lcall
in
fisubrl
and
incl
fs
sbb
mov
addr16
xor
jo
mov
lret
fnstsw
decl
pop
gs
xor
xor
je
mov
decb
push
cmp
lcall
mov
sub
pop
xor
push
xor
mov
into
jb
or
aaa
aad
push
std
in
mov
leave
lock
and
int3
sti
sbb
xor
std
push
mov
aas
aas
jne
xor
sbb
dec
stc
repnz
js
orl
add
xor
sbb
inc
pusha
icebp
mov
cmp
lds
sub
inc
sbb
shll
push
std
jmp
repz
cmpsl
adc
inc
mov
cwtl
push
sbb
push
jns
test
dec
mov
mov
push
or
add
inc
aam
subb
xchg
hlt
cmpsb
and
mov
call
stc
in
popa
stos
mov
inc
xchg
dec
lret
jmp
mov
dec
je
jmp
je
jmp
cmp
push
out
nop
cli
cmc
inc
aaa
xor
cld
imul
xchg
push
test
mov
in
call
outsb
mov
sub
pop
add
insl
mov
icebp
xchg
sub
sbb
ljmp
pop
push
xor
mov
sbb
rcll
repnz
add
pop
ljmp
push
jp
stos
lods
stc
pop
mov
jl
insl
mov
fwait
inc
scas
dec
cmp
mov
ljmp
mov
stos
xor
mov
sub
aad
mov
outsb
jb
addr16
push
inc
mulb
mov
roll
xchg
xchg
adc
les
inc
outsl
mov
add
lcall
mov
cld
xchg
and
push
cld
cmp
adc
add
incl
inc
pop
pusha
push
push
insl
ss
mov
push
out
clc
pop
je
aad
add
test
and
or
xchg
lcall
aaa
and
in
cmp
test
pop
add
fst
cltd
jmp
jmp
mov
cmpsl
les
arpl
adc
cmp
or
lcall
loope
test
jp
xchg
xor
add
xchg
cmpsl
push
dec
jl
cmpb
ret
out
cmpsb
icebp
ljmp
xchg
adc
fsubrp
pop
in
jg
push
ja
in
mov
in
sbb
jmp
adc
xchg
stc
ret
daa
imul
fidivl
les
fmul
sub
mov
call
push
xor
imul
stc
bound
jmp
xor
lods
clc
mov
mov
cli
cld
pushl
inc
adc
cmc
imul
mov
push
mov
cli
pop
ss
ficoms
call
ljmp
mov
push
out
push
out
fsubs
loop
lds
aas
jo
jecxz
adc
std
sbb
cmpsl
mov
mov
dec
mov
hlt
inc
call
jge
stos
sbb
xlat
out
lcall
incl
rclb
and
mov
sub
and
jnp
mov
jge
xor
push
ljmp
jg
scas
std
jbe
mov
mov
out
movsl
stc
cmp
or
jmp
pop
push
pusha
pop
mov
xor
stos
imulb
sbb
mov
stos
and
cmp
sub
mov
js
push
icebp
addl
mov
das
sar
imul
imul
sub
enter
cmp
mov
dec
add
imul
xor
push
fidivrs
add
sbb
mov
lcall
ds
sbb
bound
int3
add
and
xchg
repnz
dec
mov
xchg
push
es
hlt
or
aam
xchg
ret
xor
inc
fisubrl
lcall
sbb
xor
stos
xor
mov
int3
xchg
test
mov
nop
mov
dec
jg
fnstenv
mov
or
sub
mov
jmp
fwait
ds
in
ss
jge
pop
mov
stos
sbb
push
lods
insb
stos
mov
in
and
dec
cmp
stos
rcll
outsl
decl
adc
les
mov
pop
mov
ljmp
lcall
jle
popf
mov
push
xor
faddp
scas
xor
adc
call
inc
mulb
repz
jge
lods
ret
xchg
outsb
cmp
mov
mov
call
cld
mov
mov
sub
ret
mov
adc
dec
mov
xor
mov
mov
mov
ret
ljmp
mov
insb
jnp
or
movsb
xchg
jmp
pop
clc
jmp
mov
cmpsl
sub
ljmp
in
push
incl
aas
lea
xor
fadds
mov
inc
fwait
clc
pop
ljmp
pushl
into
pop
sub
in
mov
mov
pop
test
mov
mov
aas
ffreep
ljmp
data16
leave
out
cmc
mov
aad
add
fwait
or
fcomip
pop
cmp
mov
fildll
add
and
add
sub
mov
ljmp
jge
insl
daa
jo
outsl
idivl
clc
jmp
incb
and
clc
mov
insl
inc
in
call
cld
inc
addr16
push
lcall
stc
shll
ljmp
shrl
add
xchg
push
mov
test
xor
push
push
push
fs
insb
jecxz
incl
or
mov
fdivs
dec
cmp
mov
incl
pop
push
lret
cmp
and
test
mulb
dec
repnz
popa
pop
pop
aaa
fwait
insl
std
pushl
cld
and
jmp
cltd
adc
mov
cmc
adc
mov
pop
dec
ret
cmp
mov
xor
pushl
jmp
cltd
out
repz
cmp
idivb
sarb
imul
out
repnz
pop
outsb
cltd
stos
mov
or
into
inc
dec
popf
mov
test
jmp
mov
mov
push
ss
adc
repnz
push
rolb
shrb
call
pop
icebp
adc
testb
call
sub
xchg
stos
mov
add
pop
ss
sbb
sub
cmp
mov
cli
and
outsl
imul
loopne
fs
std
jo
inc
andl
xor
daa
out
in
mov
cs
fwait
rol
out
ficompl
ljmp
stos
arpl
mov
cli
jg
mov
mov
mov
push
sub
dec
lcall
jp
add
out
lahf
cmpsl
sti
sti
push
dec
int3
xlat
gs
push
add
cmp
jmp
fcompl
cli
scas
mov
xor
cmp
dec
mov
pop
fnstenv
data16
ret
hlt
jae
cmp
cmp
lahf
push
pusha
cld
xor
lcall
scas
add
addr16
sub
gs
dec
or
add
xor
icebp
inc
mov
into
test
dec
rclb
push
pop
mov
fsubrs
lahf
pop
pop
add
xchg
jne
lock
push
imul
ljmp
je
adc
ljmp
xor
insl
call
pop
mov
xchg
add
fidivrs
ljmp
clc
or
push
pop
loope
shrl
pop
outsb
sbb
sarb
jmp
test
push
push
lea
adc
imul
lcall
fisttps
jno
repz
cli
bound
mov
call
jno
ficoms
aad
test
sbb
xor
dec
add
lock
or
movsl
dec
pop
aas
dec
xor
call
jmp
mov
xor
lea
aad
push
push
cld
mov
cld
xchg
mov
or
repnz
adc
stc
repz
cmp
xchg
xchg
outsl
sbb
adc
incl
cld
in
sbb
in
mov
aad
shrb
inc
sti
ficompl
xor
incl
loope
sbb
test
dec
stos
mov
dec
ja
addr16
xchg
push
mov
sub
push
mov
js
imul
cmp
pop
xchg
les
push
clc
and
js
ljmp
clc
push
inc
jb
cs
and
fidivrs
push
cmp
mov
into
out
push
dec
mov
stos
push
notb
or
aam
xor
jl
scas
lret
add
cmpsb
loopne
adc
shl
in
cmp
aas
stos
mov
mov
hlt
incl
decl
dec
lcall
jmp
dec
icebp
and
addr16
loopne
lret
enter
jo
inc
lcall
mov
mov
sub
stos
icebp
and
lods
lcall
jg
xor
push
push
mov
in
std
sbb
sub
adc
mov
mov
and
mov
sbb
dec
dec
lods
jle
in
repnz
shlb
and
incl
fstp
jb
les
mov
lret
imul
clc
cmp
mov
xor
ljmp
iret
mov
dec
sar
test
xor
aam
adc
mov
ror
push
loope
mov
pop
stos
stos
cmp
int
lods
loopne
cmp
inc
int3
sub
lods
inc
aaa
mov
cltd
outsl
fcomip
fistpll
out
ret
mov
dec
lods
test
lock
jo
mov
les
dec
inc
xchg
cs
pushf
push
inc
push
push
dec
cmp
and
pop
fnsave
pop
cmp
xor
sbb
out
pop
mov
ja
pop
xor
inc
mov
leave
push
xchg
mov
enter
mov
cmpsb
push
push
mov
mov
sbbl
adc
sub
jnp
and
insb
gs
adc
movsb
sahf
jmp
cmpsl
and
into
andl
bound
mov
aaa
and
popf
dec
clc
scas
loope
lcall
out
outsl
mov
dec
rclb
por
mulb
adc
and
adc
or
in
arpl
adc
ljmp
hlt
inc
in
das
sahf
sub
push
cmp
enter
shl
incl
add
sbb
hlt
pop
bound
or
mov
jmp
adc
insb
loope
cld
push
sbb
push
fst
or
shlb
jmp
jle
mulb
dec
mov
outsl
rep
rorl
dec
fisttpl
je
lret
repz
pushl
movsb
push
or
repz
xlat
std
xor
mov
adc
jns
mov
adc
cmp
and
enter
jae
xor
sub
stos
daa
or
lods
jg
decl
add
iret
dec
jno
ljmp
add
out
xchg
cmp
aad
lock
fcoml
and
or
sbb
pop
cld
int
out
mov
xchg
mov
adc
sub
push
mulb
sti
ficomps
pusha
mov
add
inc
pop
xchg
add
je
fdiv
cmp
call
push
fstpt
sub
lret
xor
cmp
decl
test
not
sbb
arpl
inc
fwait
ret
test
adc
pop
pop
push
insl
inc
lock
std
movsb
mov
mov
lret
fcoms
fs
pop
inc
sbb
fbld
adc
sbb
fwait
push
xor
mov
test
ljmp
lea
insb
jg
daa
ja
lock
adc
or
decl
inc
inc
mov
imul
push
mov
xlat
sbb
mov
xchg
loop
add
sbb
xchg
inc
pushl
mov
push
popa
into
shr
xor
nop
repnz
dec
dec
iret
dec
inc
leave
aaa
sub
jg
call
lock
repz
pop
push
cli
pop
inc
ljmp
push
movsb
dec
mov
call
cltd
sbb
pop
dec
clc
stos
adc
rcll
jl
cs
mov
jg
cmp
movb
aas
mov
out
in
xor
aam
jle
test
pushl
mov
xchg
mov
ja
and
push
shlb
cld
xor
mov
nop
test
pop
and
add
add
cld
sub
mov
decb
pusha
dec
int3
stc
out
or
fcmovnu
clc
insl
and
jns
adc
dec
push
ljmp
aaa
sub
jle,pt
cmpsb
mov
idiv
std
or
inc
mov
pop
mov
mov
in
test
das
fistps
push
jg
ficoml
arpl
pop
lods
mov
gs
inc
out
clc
out
mov
pushl
imul
std
mov
mov
fs
pslld
push
jp
fcmovb
rcll
mov
das
jmp
adc
rolb
lock
xchg
rcr
sahf
out
clc
xchg
sub
jl
sub
subb
aas
sbb
rorl
xor
aas
js
shl
xor
sti
inc
ljmp
xor
cmp
notb
into
pop
inc
jmp
dec
mov
out
xor
sbb
pop
pop
imul
not
inc
mov
dec
test
jmp
pop
xchg
aad
filds
push
negb
sti
mov
iret
pop
pop
cmp
fmul
jmp
add
pop
jecxz
js
jne
jge
push
jmp
cmpsb
ret
mov
sbb
aas
xor
lahf
pusha
loop
pop
mov
and
sahf
jp
ret
ljmp
incl
mov
add
arpl
lret
inc
ret
in
mov
call
lods
dec
in
sbb
clc
rclb
mov
sub
stc
xchg
dec
nop
mov
cmp
or
call
push
pop
faddl
xor
jle
imulb
xchg
repz
dec
daa
pop
inc
fnstsw
cmp
jmp
pusha
scas
idiv
test
gs
mov
sbb
dec
inc
mov
sbb
scas
clc
call
add
outsl
pmaxsw
int
jns
adc
movsl
orb
ret
cmc
mov
lret
ljmp
stos
push
scas
and
adc
incl
or
out
mov
push
lods
aas
sti
cmp
xor
pushl
mov
xchg
fcoms
lods
incl
rep
fisttps
lds
xchg
out
out
repz
imul
repnz
pushl
shrb
dec
rcrl
fdivs
and
add
cmp
sub
dec
test
cmp
aad
jmp
push
or
xor
lods
data16
hlt
jmp
ljmp
sbb
imul
outsb
pop
xor
sbb
aad
fs
sbb
sub
mov
jp
cltd
fidivs
dec
mov
out
jnp
pop
pusha
push
xchg
clc
sub
or
mov
dec
imul
pushl
clc
xchg
mov
ljmp
movsl
fsubs
pusha
call
sub
cmpsl
out
ficomps
mov
dec
adc
mov
mov
shlb
in
inc
cwtl
lods
and
and
sbb
jge
cld
inc
mov
pop
bound
mov
push
push
xor
push
addl
fbstp
outsb
mov
xlat
sbb
cmovo
cmpsl
sarb
dec
movsb
cmp
push
xchg
dec
xchg
push
call
int3
jno
rcll
xor
rol
xlat
jns
divl
fdivrs
fdivr
das
add
inc
push
into
xchg
push
cwtl
or
add
mov
jb
and
adc
lds
inc
push
das
cltd
pushf
add
clc
lcall
imul
adc
push
cs
daa
or
lock
xchg
adc
xchg
cmc
outsl
mov
mov
dec
lods
ljmp
sarb
jnp
stos
addb
dec
insb
jno
aaa
bound
decl
inc
and
jo
xchg
iret
std
mov
aaa
mov
pop
jno
pop
adc
jo
mov
mov
push
pop
mov
aas
sarl
or
aaa
insb
cltd
cmp
mov
lods
into
je
inc
imul
add
daa
cmp
movsb
hlt
mov
push
decl
add
stos
loopne
push
iret
xor
sarb
ret
es
xchg
call
aad
dec
shlb
in
jno
ror
decb
mov
mov
iret
ja
dec
pushl
and
adc
aaa
mov
cld
cmpsb
dec
in
ljmp
ss
add
outsl
cmc
cmp
inc
lcall
rclb
dec
icebp
xor
jne
mov
jg
adc
pop
loopne
js
mov
xchg
ret
xor
mov
loope
lret
xchg
ljmp
movsl
loop
pop
dec
addl
les
push
jbe
add
lcall
pop
rcll
xchg
and
into
insb
std
mov
add
decl
mov
mov
sbb
arpl
mull
sub
movsb
popa
sub
ficomps
insb
shr
shll
pop
fdivrp
ljmp
sbb
imul
push
mov
xor
xor
cmp
xor
pushl
dec
lcall
imul
out
fnstenv
sbb
pop
add
pushl
imul
dec
ficomps
push
rorb
test
fsubl
xlat
cmp
decl
nop
aam
mov
les
out
dec
jmp
sti
mov
mulb
pop
decl
mov
mov
push
shrl
sbb
addr16
out
mov
fadd
jle
add
and
push
sbb
push
ljmp
out
ss
sbb
cmp
js
sbb
imul
std
decl
cs
daa
outsl
and
aam
sbb
lods
test
lea
mov
xchg
pop
jle
fldt
mov
das
testb
call
lods
in
mov
int3
rorl
test
pop
cmpb
sbb
call
rol
pusha
aam
mov
mov
in
xor
roll
int3
inc
adc
lods
call
push
sbb
icebp
outsl
jb
pop
cmp
fucomi
in
das
pushf
pop
ret
jge
or
add
mov
sub
sti
add
dec
mov
call
sbb
dec
cs
pop
sahf
scas
inc
nop
jg
push
rorl
fimull
mov
jbe
mov
vmovmskps
lcall
iret
pop
adc
dec
add
sbb
sbb
push
mov
out
dec
adc
push
sbb
add
mov
nop
pop
mov
enter
and
xor
out
test
mov
pop
hlt
decl
scas
les
test
pusha
xchg
clc
js
push
je
xchg
dec
imul
cmc
lcall
mov
cmp
mov
lcall
pushl
cwtl
sub
sbb
jne
dec
mov
fiaddl
in
sub
aad
push
ljmp
push
nop
lcall
inc
aam
mov
fisubrs
xchg
gs
pop
push
and
call
xchg
add
sbb
mov
add
clc
jmp
jmp
xchg
mov
test
jmp
sbbl
setp
js
dec
jecxz
lcall
or
fwait
jne
pop
mov
jmp
leave
pop
movsb
pop
sbb
cli
pop
or
cmp
repz
lcall
xorl
lahf
clc
lret
sub
in
dec
pusha
mov
rcrl
incl
pop
pusha
jo,pt
inc
fs
inc
insb
scas
pop
out
sub
cmp
pop
and
cmpsb
call
fstpt
jne
loope
iret
cmpsl
cmp
jns
movsl
lock
jl
jnp
lcall
mov
inc
xchg
es
and
sbb
xor
insb
stos
jge
call
dec
ret
lock
ljmp
repnz
fdivrl
mov
scas
adc
xchg
in
scas
lahf
mov
xchg
dec
xchg
je
mov
xchg
jb
cld
pop
movsb
int3
pusha
mov
cmpb
jo
jle
decl
mov
hlt
in
xchg
mov
loopne
push
push
pop
mov
jmp
mov
ret
fs
in
test
mov
jne
stos
inc
fxch
pop
dec
into
fcmovnu
pop
add
ljmp
mov
xor
dec
insl
movsb
pop
in
sbbl
sub
mov
mov
dec
jno
mov
jbe
insl
aam
ficomps
xor
push
or
sbb
jnp
sbb
add
mov
jecxz
dec
sbb
out
fadds
scas
pop
inc
mov
xchg
cld
mov
jae
ljmp
ds
pop
xor
cmp
jne
mov
lret
into
dec
std
push
add
fstps
clc
cmp
and
mov
push
dec
lods
add
cmp
mull
mov
mov
sbb
in
xchg
in
repz
inc
test
fbstp
add
fmul
inc
cmp
clc
jge
notl
push
push
fcompl
int
in
jo
mov
iret
mov
jl
cmp
mov
insl
ljmp
cwtl
mov
ljmp
cmpsl
cli
jmp
dec
out
clc
out
iret
stos
mov
cmpsb
or
movsl
cs
xor
call
repnz
inc
cmp
mov
inc
test
inc
mov
out
insb
xchg
inc
dec
jle
sbb
dec
lahf
adc
decl
sbb
jo
into
arpl
lahf
jge
iret
inc
jecxz
and
mov
fildll
hlt
xor
dec
fs
mov
pop
jnp
mov
ret
divb
jmp
ds
push
xchg
popf
inc
and
test
std
push
and
lret
cmp
adc
mov
pop
hlt
push
pushf
outsb
jecxz
shrb
dec
jmp
adc
dec
jg
dec
push
dec
test
mov
push
fsubs
outsb
lds
mov
mov
out
push
clc
int3
int3
in
dec
adc
aas
popf
or
cmp
aas
das
push
pop
std
ret
nop
and
mov
push
iret
mov
mov
xchg
sub
push
mov
bound
mov
fwait
sbb
clc
leave
fs
daa
fwait
add
movsl
and
lcall
sub
mov
test
fstpt
xchg
mov
ret
stos
dec
pop
pop
jmp
mov
inc
sbbl
testl
mov
push
and
ljmp
in
incl
hlt
shrb
mov
mov
fsts
cld
mov
jno
jl
adc
mov
sti
pop
out
pop
stc
cmp
cli
push
inc
aam
and
cltd
pushl
stc
sub
mov
cwtl
inc
aas
mov
sub
movsl
xor
xor
push
cmp
decl
dec
mov
mov
outsl
jb
test
pop
pop
adc
lret
out
call
push
decl
sbbb
bound
sti
imul
sbb
inc
loop
dec
jle
mov
xchg
mov
adc
mov
push
push
sti
fistl
push
sbb
fcomps
test
or
pop
mov
rep
pop
std
jmp
pop
xlat
sbb
movsl
icebp
ds
cld
and
cwtl
sbbb
pushl
outsb
pop
insl
xchg
push
mov
sbb
jno
out
das
addb
fcomps
iret
add
decl
xchg
call
mov
adc
sub
rolb
int
adc
cmc
jg
push
fstps
cmp
test
adc
shl
inc
sahf
ficomps
inc
fidivrl
call
fisttpl
aas
cmc
lcall
sbb
adc
popf
iret
sub
stc
lock
js
call
fbstp
pop
fcom
cmp
mulb
pop
and
aam
cmc
aad
dec
inc
movzbl
mov
adc
jmp
mov
lods
xchg
mov
mov
cmp
add
and
cwtl
mov
out
lea
push
and
and
adc
xchg
dec
pop
push
and
cmp
xchg
popa
lcall
inc
cmc
adc
jp
pop
aam
ds
adc
stos
in
mov
push
inc
aad
call
adc
shl
jmp
rcrl
dec
cld
jg
jns
ss
stc
push
jl
jb
flds
or
dec
mov
pop
vcmppd
push
bound
ficoms
shll
add
jns
lret
xchg
lcall
pop
inc
add
call
xor
and
dec
dec
push
cli
push
mov
or
cmp
ljmp
pop
iret
jp
adc
or
hlt
ret
cli
rclb
pop
scas
mov
decl
jb
and
and
dec
push
std
fsubrl
jns
jbe
push
repnz
negb
jmp
ljmp
mov
rcr
adc
pushf
lds
pop
cmpsb
das
add
sub
lcall
lock
mov
in
dec
inc
xchg
jne
icebp
aas
aam
outsl
fists
xlat
scas
sbb
negb
and
ret
jecxz
dec
icebp
inc
dec
sbb
push
lock
mov
in
ja
aad
shl
lods
inc
gs
ljmp
cli
xchg
mov
lret
bnd
popa
or
and
fistpl
adc
jnp
push
clc
mov
arpl
loop
xchg
outsl
in
jb
cmp
pop
cmp
mov
mov
int3
jb
xor
xchg
loop
inc
xlat
lds
push
int
jmp
sub
mov
fcmovbe
in
jno
mov
xchg
adc
pop
push
adc
imul
hlt
lods
je
push
adc
cmpb
insb
pop
and
mov
push
and
adc
ret
data16
mov
call
ljmp
xor
push
cmpsb
mov
mov
cs
adc
hlt
filds
pop
or
in
add
iret
and
std
ret
pop
jno
decl
sbb
pop
decb
adc
shrl
aam
or
fstps
adc
decl
mov
jmp
shlb
out
pop
and
sub
imul
sbb
lret
xor
out
jp
cli
dec
and
pop
ret
xchg
mov
aaa
je
and
jg
pop
out
in
pusha
or
frstor
jmp
inc
jae
inc
jle
ljmp
pushf
cwtl
cmpsl
data16
pop
mov
ret
fisubl
je
mov
outsb
jg
xor
sub
arpl
dec
movb
or
mov
xor
call
dec
dec
leave
cli
xchg
fwait
in
cltd
add
cli
paddusw
jl
test
cs
push
add
pop
push
xor
mov
std
decl
loope
gs
pop
add
aaa
sbb
jb
mov
sbb
xor
mov
aad
pop
fiadds
enter
add
xor
pushf
decl
xchg
mov
pop
testb
jg
adc
outsl
pop
fisttpl
sti
lds
xchg
mov
xor
cmc
in
repz
sub
imul
or
cmpsb
pop
fcomip
addr16
es
mov
xchg
jle
inc
sub
xor
add
mov
xchg
xor
jo
add
out
xchg
fistl
loop
jmp
and
out
in
push
inc
mov
in
add
fstl
ljmp
repz
adc
shlb
hlt
mov
mov
lods
push
mov
xchg
pusha
and
lcall
lods
mov
and
push
pop
push
xor
or
and
xor
movsb
jne
repz
cmp
mov
pop
or
jb
clc
jecxz
or
jne
imul
lds
cmp
cmpsb
push
dec
rcrb
sbb
inc
pop
push
repnz
mov
out
pusha
cmp
cld
hlt
repnz
shlb
cmp
insb
call
fs
stc
and
xchg
ret
imul
add
adc
xor
pop
mov
push
aad
loopne
shll
test
insl
hlt
ljmp
xchg
data16
das
lods
pop
mov
ficoms
add
push
int
sbb
lcall
add
xor
fsubrs
jb
lock
lcall
in
push
push
movsb
fistl
scas
mov
pop
in
cwtl
mov
jmp
xor
sub
xor
sbb
mov
pop
gs
sub
or
mov
decl
pop
sub
push
inc
sub
aaa
in
push
xchg
loop
insb
push
insl
loopne
hlt
fisttpl
lds
imul
mov
decl
sub
bnd
outsl
daa
mov
jge
adcb
lods
fimuls
test
xchg
sub
test
adc
pop
mov
and
incl
mov
push
or
push
mov
scas
dec
mov
sahf
mov
lret
outsb
ljmp
or
push
call
and
mov
arpl
pusha
ret
sbb
mov
cld
clc
cmpl
mov
adc
sub
jmp
push
or
loope
cmp
les
mov
inc
ficompl
xchg
cmp
icebp
arpl
push
mov
mov
lcall
mov
mov
xlat
push
lods
xlat
xchg
js
push
xchg
pop
pop
fnsave
mov
enter
ss
xor
fs
cwtl
adc
repz
push
clc
mov
or
xabort
cli
inc
xlat
test
out
insl
mov
das
int3
push
rep
jge
call
pop
cmpsl
adc
and
xor
loope
mov
call
iret
std
shrb
cltd
fdivrs
and
jmp
jl
in
iret
ds
jp
lock
insb
cld
pop
into
adc
gs
dec
bound
dec
mov
aaa
std
jg
mov
mov
xchg
out
ljmp
stos
movsb
xlat
cmpsl
cmp
sbb
mov
lods
pop
dec
xchg
imul
sbb
jo
sahf
insl
ja
cmp
sbb
lcall
adc
call
dec
fiadds
les
cltd
jbe
or
jbe
clc
lahf
pop
push
stc
mov
addl
test
scas
loope
test
cmp
xor
jmp
ds
mov
dec
dec
scas
mov
pop
inc
imul
lcall
outsb
add
addr16
fcmovne
jmp
mov
pop
ret
pop
xchg
push
or
in
xchg
dec
push
lcall
pushf
int
xchg
outsb
out
sbb
xor
lea
ret
jo
and
rorb
xchg
pop
lea
stos
jmp
ja
ret
lock
pop
imul
cmpsl
xchg
clc
repz
repnz
mov
ljmp
dec
mov
push
xor
mov
xchg
xor
rorl
mov
jmp
incl
sbb
nop
sar
outsb
out
fidivl
rcrb
in
push
ljmp
int3
or
push
ljmp
sbb
pusha
xchg
repz
jmp
fcomip
call
stos
scas
or
pop
push
repnz
shrl
mov
push
add
lock
lcall
adc
stos
int
xchg
jmp
rcr
xchg
jp
or
pop
sahf
nop
js
mov
stc
jmp
mov
divb
mov
test
movsl
lahf
std
notrack
fisttps
jge
loope
stos
mov
inc
iret
pop
inc
sub
int3
cli
call
enter
fdivs
push
inc
push
pop
mov
mov
pop
and
or
imul
jo
mov
out
sbb
push
lock
in
lret
ja
cld
pop
xor
cld
jbe
cmc
ljmp
cmp
inc
xchg
pop
mov
ror
mov
in
jle
pop
in
arpl
mov
in
pop
int
loope
push
push
dec
bound
fwait
push
pop
inc
incl
cld
pop
mov
pop
xor
add
lea
sbb
mov
inc
popf
insl
jecxz
jg
sub
imul
cs
mov
stos
push
pushl
xchg
mov
out
xchg
out
orb
pushf
jnp
outsl
jo
call
jg
cmp
or
xor
mov
les
sbb
mov
xor
xchg
jg
lods
or
sub
pop
push
xchg
sub
adc
cmpsb
cwtl
sbb
lahf
aam
and
adcb
cmpsl
loop
pop
sub
xor
sub
lret
xor
dec
lock
push
scas
xchg
sub
sbb
call
or
jp,pn
ret
mov
jle
test
js
scas
and
or
test
ljmp
mov
push
pop
loopne
sbb
pop
add
pop
xchg
adc
js
xchg
lahf
xorl
jmp
lea
sahf
ljmp
adc
mov
xchg
shlb
add
jge
es
lret
mov
ficoml
jmp
xor
jmp
mov
mov
dec
mov
jp
lods
pop
jge
outsb
adc
xor
test
jmp
xchg
sarb
into
mov
inc
adc
test
rorb
mov
sarb
gs
jbe
lcall
repz
ljmp
movsb
icebp
or
inc
shlb
popf
fnstsw
das
div
cli
test
inc
add
decl
cs
mov
xor
cmp
push
aas
negb
imul
lock
cmp
fistl
jp
out
mov
jae
js
xchg
mov
mov
cmc
or
decl
ret
add
icebp
mov
fldcw
mov
in
mov
les
psubw
ljmp
mov
sub
cli
mov
dec
or
ficoms
mov
fcomps
pop
cmp
cs
les
jl
lcall
js
sahf
jnp
jge
addb
mov
sub
das
daa
sbb
and
jbe
xchg
xchg
call
cwtl
lods
adc
jne
cwtl
test
nop
fldt
jmp
jno
stc
jl
pusha
es
ja
std
add
stos
test
cmp
cmp
pop
aam
xlat
call
mov
mov
scas
and
mov
or
mov
sahf
mov
mov
ljmp
imul
and
mov
inc
adc
push
jns
nop
pop
pop
inc
call
xchg
jno
cmp
ljmp
add
dec
cmp
insb
and
sub
aaa
cmp
sub
pop
fnstenv
rcll
push
movsb
into
ffree
sub
ret
test
fnstcw
sub
jmp
stos
imul
xchg
daa
insb
mov
outsb
leave
xchg
or
rorl
or
cmp
sbb
inc
sub
clc
adc
hlt
fisubl
minps
pop
inc
test
ret
mull
jo
inc
and
cmp
in
repnz
push
lret
or
sub
fadds
outsb
jp
loop
call
mov
xchg
jb
mov
nop
je
leave
inc
loop
cmp
lock
fisubl
sub
add
into
and
xor
fsts
fcomip
jmp
pop
dec
inc
shll
fwait
xchg
inc
mov
lock
mov
xchg
xchg
ja
mov
lock
lods
xchg
add
pushl
lret
lods
sub
add
in
test
inc
mov
xchg
sub
adc
fimuls
pushl
mov
in
adc
mov
sub
mov
sub
inc
repnz
insl
in
mov
test
gs
lahf
jp
mov
dec
xchg
sub
std
sahf
clc
lcall
pand
add
cli
shlb
dec
fs
movsb
push
jae
cmpsb
imul
int
adc
and
ljmp
mov
sbb
jns
sti
mov
jmp
dec
ljmp
push
iret
xchg
add
mov
dec
mov
pushl
fs
mov
xor
js
sarb
int3
xchg
dec
adcb
decl
lret
das
add
fisttpll
aad
ss
xchg
mov
inc
and
adc
outsl
fsts
movl
dec
cli
dec
adc
adc
xor
lock
decl
pop
jnp
loope
or
lret
cmpsl
lock
lahf
mov
rolb
clc
inc
or
mov
cmp
lret
push
inc
ljmp
jae
sub
lcall
les
cwtl
fsubs
imul
cmp
out
cmpsb
out
test
push
lea
sub
add
cld
jge
ja
lods
sbb
std
fists
xor
inc
add
mov
data16
out
xlat
incl
test
jb
nop
xchg
push
dec
sub
jp
mov
add
jg
shl
mov
test
outsb
aad
mov
out
adc
icebp
sbb
lret
jmp
cltd
adc
xor
cs
xor
testl
or
jae
adc
mov
jns
mov
stos
sahf
mov
jo
add
clc
mov
dec
add
xchg
jo
adc
scas
sbb
call
fwait
sbbb
rorl
xor
xchg
push
inc
mov
arpl
pushl
cmp
push
out
pop
sub
andl
sub
ret
add
testl
rorl
xchg
and
sub
movsb
lods
ret
adc
inc
sub
or
jp
incl
dec
cmp
aaa
jmp
lcall
push
sbb
push
imul
decl
inc
jnp
test
sbb
dec
mov
mov
lock
inc
int
inc
push
xor
out
pop
mov
call
xchg
pop
pusha
push
and
decl
test
mov
es
test
pop
stc
ret
push
ljmp
loopne
sar
incl
adc
push
out
fnstenv
out
mov
fs
jg
mov
repz
stos
stos
movsl
pop
cmpsl
push
pop
rorb
sbb
jbe
cmpsl
add
lcall
pop
sbb
aam
add
iret
iret
jns,pt
int
frstor
pusha
xchg
xchg
pop
decl
lock
fs
rcll
out
ss
movsb
push
scas
pop
jae
mov
decl
loop
lret
mov
aas
lods
pop
adc
imul
adc
xchg
jle
xlat
inc
jb
push
jl
cli
mov
je
test
idiv
mov
scas
jno
dec
mov
mov
cmp
imul
add
incl
daa
daa
outsb
mov
inc
jbe
adcb
fistps
in
xor
ljmp
loope
rcrl
pop
insb
add
pop
loope
mov
pop
call
mov
cmp
or
decb
lahf
movl
pushl
add
inc
lods
ljmp
sbb
pop
decl
or
lret
sbb
lcall
in
mov
mov
in
pop
push
out
addr16
gs
call
cli
aaa
popa
mov
mov
ljmp
mov
cmp
mov
mov
mov
movsl
pop
repz
jns
test
popf
mov
dec
andl
cwtl
aad
jl
int
mov
or
jno
imul
std
push
pushf
pop
test
jo
out
cmp
popf
xor
mov
cmc
xor
and
pushl
push
or
cmp
dec
daa
in
mov
pop
pop
mov
repz
out
out
fdivrp
in
push
pop
ficoms
push
mov
pop
cltd
xchg
nop
cli
in
insl
push
imul
adc
ljmp
sub
pop
and
jl
push
int
lods
xchg
outsl
repz
gs
inc
andl
sbb
ret
push
lods
push
insl
xchg
fimuls
outsb
aaa
pushf
mov
mov
test
mov
mov
movb
rcr
decl
sub
sti
xchg
stc
push
jge
and
popl
scas
in
pop
xlat
call
sbb
sub
rclb
cmpsl
mov
jg
flds
pop
shll
add
push
mulb
loopne,pt
scas
adc
lsl
cmp
pop
sbb
adc
mov
fisttps
xorl
mov
incl
mov
mov
call
pop
fstps
jb
push
or
cmp
ss
jae
gs
dec
test
out
rolb
loopne
das
insb
sub
push
out
sub
insl
movsb
push
lcall
push
jmp
dec
ficompl
sbb
adc
inc
ficoms
jmp
call
jmp
jns
scas
mov
add
or
sub
add
decl
add
test
push
mov
mov
jmp
fnstcw
loop
lods
out
cli
mov
xchg
fdivp
pop
cmp
or
mov
in
hlt
pop
or
call
cmp
or
sub
jle
sar
push
mov
jle
jmp
in
shll
nop
imul
xchg
adc
sbbl
inc
ss
adc
nop
shll
dec
loope
pop
add
inc
scas
inc
cmp
sbb
dec
sub
jmp
push
scas
adc
dec
pop
pop
test
cmp
orl
xor
testb
lcall
imul
push
lock
out
repnz
mov
popf
add
pushl
ret
addr16
fcoms
mov
or
out
pushl
sbb
mov
rcl
daa
and
and
pop
jle
outsb
enter
incl
nop
jns
frstor
cmp
mov
and
mov
ja
pop
and
decl
sti
jmp
sbb
jl
pop
jmp
pop
mov
arpl
mov
mov
imul
fisttpl
call
repnz
jnp
loope
mov
push
inc
and
cmpsl
jge
push
inc
orl
loope
pop
sbb
loopw
dec
fdivr
jg
ljmp
insl
jge
or
stos
sarb
cmp
mov
popa
lahf
rol
aad
cli
cmp
mov
mov
fsts
cltd
push
push
pusha
push
arpl
jmp
ficompl
jmp
mov
cmp
dec
fs
xchg
rcll
out
sbb
incl
pop
mov
cmp
or
imul
sub
xor
lcall
divb
addr16
ss
testl
lahf
jle
shlb
jae
notl
decl
lods
out
cmpsb
jmp
in
pop
dec
lock
stc
sbb
mov
lcall
lahf
bnd
mov
jecxz
stos
inc
ljmp
mov
rorl
mov
sub
xor
ss
outsl
out
into
call
adc
cld
push
pop
cmp
ret
push
gs
inc
xchg
insl
mov
and
daa
push
inc
push
adc
ljmp
push
or
dec
daa
jg
mov
stos
cmp
iret
addr16
scas
xor
sub
pushl
and
cld
pop
dec
push
and
pop
mov
push
lea
stos
pop
push
and
call
std
cmp
cli
into
mov
ss
xor
shl
imul
insb
lcall
xchg
das
mov
sbb
mov
rolb
or
in
sub
push
pushw
ljmp
add
or
xchg
pop
and
add
fcomip
pushl
and
and
aaa
push
scas
jo
insl
push
or
sub
addr16
std
mov
incl
sbb
fcomps
into
idivb
xor
pop
popf
sbb
xchg
dec
push
inc
sbb
push
lock
xchg
call
mov
pop
aad
loopne
sub
sub
and
shl
sbb
fsubl
ja
mov
sahf
adc
push
push
or
pushl
cmp
xchg
jb
xor
arpl
push
scas
mov
mov
shr
xchg
sti
fcomip
incl
xchg
outsl
sbb
lea
xor
jecxz
js
aad
mov
adc
mov
mov
adc
lock
sar
stos
xor
pushf
jo
jmp
mov
nop
cmp
das
cmp
cmp
pop
and
jo
or
fnstcw
incl
sti
mov
fstpl
cld
mov
push
js
fidivl
pop
cli
mov
jne
and
call
cmp
arpl
jp
push
aad
adc
aas
xor
icebp
sub
inc
dec
fwait
push
add
in
pushl
insl
xchg
mov
xchg
das
js
xchg
pop
imul
lods
cltd
shlb
inc
add
decl
pop
ds
push
fimuls
outsb
pop
fldt
rcrb
mov
bound
data16
or
fcomps
out
fistl
xchg
mov
negl
add
adc
cwtl
movsl
call
sub
outsl
aaa
leave
pushl
mov
and
out
cltd
inc
sbb
sub
subl
repz
xchg
cli
popf
mov
out
clc
xchg
cmp
inc
clc
xchg
mov
mov
mov
pushf
cld
mov
or
xor
mov
sbb
xchg
imul
movsb
outsl
xor
and
dec
scas
sub
inc
inc
add
test
inc
ljmp
cld
sbb
mov
sbb
pop
inc
sbb
pop
add
repnz
fs
ljmp
add
jae
cmp
add
lcall
mov
lcall
bound
cld
adc
cmp
sbbb
mov
push
testl
and
lretw
push
repz
test
push
insb
ret
cmpsl
test
adc
fsubrl
add
fnstcw
fdivrl
push
cmp
arpl
push
in
test
inc
jne
mov
and
call
push
mov
mov
stos
jge
dec
cwtl
push
push
incl
push
in
test
pop
movsl
pop
daa
scas
cmp
push
inc
add
fsubrp
std
cmc
popa
mov
sar
ljmp
mov
imul
jno
xor
jge
adc
or
loop
sbb
fcomip
call
aaa
xor
push
pop
pop
shll
std
sub
popf
mov
hlt
mov
add
scas
fcoml
mov
stos
ret
cli
adc
incl
jo
gs
ljmp
fstpt
popa
mov
xchg
push
add
inc
cmp
lcall
push
iret
jo
cld
ljmp
mov
xchg
lods
cmp
sti
push
xchg
mov
pushf
xchg
incl
js
xor
adc
int3
pop
pusha
mov
pusha
and
jmp
jns
insl
ljmp
int
mov
mov
int3
push
int
imul
adc
pinsrw
movb
cmpb
ljmp
fisubs
iret
sbb
mov
sbb
es
fcoms
and
dec
scas
fmuls
pop
cs
add
mov
xchg
sbb
dec
xchg
sahf
push
aam
jnp
inc
mov
ljmp
adc
jno
popa
xchg
pop
sub
push
xor
incl
lods
inc
daa
out
xchg
sbb
outsl
imul
iret
push
test
ljmp
xor
mov
les
ljmp
jno
lods
in
rorb
ljmp
cwtl
jecxz
cli
or
out
shlb
sbb
popf
test
ret
out
lods
popf
push
sbb
rcr
lcall
fnstsw
or
push
sub
pop
in
jnp
subl
lock
sub
cld
adc
push
mov
xchg
mov
in
dec
mov
mov
inc
fcoms
leave
xchg
mov
hlt
fisubs
aam
dec
or
out
cmpsb
sub
pop
cmc
xchg
enter
and
imul
sahf
xor
cld
insl
add
cmp
dec
add
push
inc
jl
test
mov
mov
inc
pop
arpl
jmp
mov
in
stos
and
cmc
mov
test
repnz
mov
dec
mov
lahf
pop
jge
mov
mov
mov
test
xchg
and
xchg
pop
xor
push
mov
xchg
sbb
xchg
xchg
jge
decl
cmp
jb
mov
xchg
out
popf
fcoml
test
sub
and
cmp
jl
decl
push
and
negb
lods
mov
add
inc
mov
jnp
loope
daa
lahf
jne
jno
cmp
mov
incl
xchg
sarb
push
jp
mov
adc
mov
jb
mov
out
daa
push
out
push
lcall
add
inc
push
out
insb
movsl
or
cmp
dec
aaa
popa
add
ljmp
cmp
dec
add
nop
cmp
push
sti
in
cmp
std
clc
add
out
ljmp
das
pop
cmp
and
lcall
test
mov
lods
jne
add
add
fildll
std
ljmp
mov
jl
hlt
lcall
decl
xor
cmpsb
dec
je
pop
dec
outsl
mov
push
cld
push
ja
jg
decl
std
sbb
in
repnz
das
mov
insb
ficomps
sahf
push
xchg
adc
jmp
test
xchg
cmp
sti
shll
and
inc
sarl
jp
push
cmpsb
push
mov
jns
rcrl
mov
pushl
mov
mov
jne
cmc
jl
ja
xchg
test
pop
xlat
cmp
lods
clc
jge
jmp
jl
or
inc
movsb
jmp
or
jecxz
pop
imul
int
pop
adc
dec
stos
ljmp
loop
inc
push
aam
push
adc
and
in
lock
push
push
fs
jmp
or
pusha
pop
in
stc
or
shrl
mov
sbb
mov
ljmp
aaa
dec
loop
cld
pop
or
add
out
aad
sarl
push
adc
lcall
inc
or
sbb
pop
mov
aas
outsb
cmp
xor
push
and
fbld
imul
lea
mov
sub
dec
or
dec
sahf
jecxz
push
lcall
inc
push
fisttpl
cmp
cmp
in
mov
test
lcall
fcoms
mov
mov
pusha
xor
dec
cld
cmpsb
inc
inc
pop
adc
mov
arpl
and
scas
xchg
sbb
or
mov
lds
xchg
jecxz
fcmovnbe
inc
jl
dec
movsb
in
scas
lock
ljmp
ds
add
jle
jne
push
mov
or
mov
cmp
scas
push
fadds
cmp
es
leave
in
add
les
sbb
lods
test
sbb
out
pop
adc
ficoml
into
ss
lds
dec
inc
mov
incl
or
sbb
fs
sbb
cmp
fistpll
call
lods
loop
cwtl
or
insb
dec
cmp
in
cmp
or
out
sbb
lret
push
cmc
inc
jmp
stos
lret
fcmovu
inc
mov
push
rclb
fnstenv
jge
mov
call
xchg
sub
int3
repz
jp
outsl
mov
clc
cltd
out
pop
or
das
decl
out
xchg
add
mov
std
xor
cld
mov
in
ja
shll
dec
mov
nop
cmp
std
jno
lahf
ja
push
cli
lcall
pop
xchg
push
ss
cli
adc
vcmpss
mov
jne
lcall
mov
mov
cmpsb
inc
lcall
pusha
xchg
shll
xchg
movsb
push
sbb
decl
js
sbb
push
and
cmc
and
imul
add
adc
push
out
mov
mov
stc
mov
push
xor
jecxz,pt
js
inc
sub
ss
dec
inc
mov
fdivl
xchg
lock
cmp
cmp
mov
subl
jnp
idivl
xchg
jb
test
fists
pop
popa
rolb
in
sbb
cmp
incl
mov
insl
pop
pop
sub
push
dec
jb
cli
mov
mov
sbb
int3
xchg
cld
jg
mov
arpl
scas
movsb
pop
and
ss
call
cmp
in
or
test
xchg
dec
xchg
adc
mov
aad
repnz
pop
pushl
dec
es
jb
scas
stc
out
out
mov
frstor
jmp
mov
sub
jl
jl
mov
dec
and
pop
stos
fsub
rolb
incl
mov
dec
sub
cmovno
adc
lcall
push
or
je
cld
push
cmp
mov
xchg
lahf
xchg
cmp
fsubs
jo
mov
stos
jg
inc
sbb
outsl
dec
mov
incl
adc
sbb
lahf
inc
push
push
pop
sbb
insl
or
ja
stc
push
das
cmp
call
jge
xchg
shlb
lret
and
divl
arpl
mov
push
or
adcb
sbb
ds
or
pop
incl
cli
into
push
pop
mov
in
lds
add
lcall
dec
imull
push
jne
hlt
test
push
cltd
push
in
and
pop
lcall
jmp
dec
insb
dec
adc
movsb
pop
insl
jge
sti
xchg
sahf
lret
fdivrl
mov
aad
cmp
cld
inc
sahf
add
add
mov
pusha
inc
mov
mov
or
and
xor
sbb
mov
leave
mov
or
cmp
or
icebp
scas
ljmp
dec
mov
adc
in
mov
rcr
mov
scas
jmp
dec
lods
fidivs
push
pop
mov
iret
ja
js
push
inc
data16
mov
cmp
imul
lcall
inc
and
insb
mov
xchg
pushf
in
add
mov
push
je
imul
clc
ljmp
or
inc
mov
arpl
mov
mov
adc
xor
pushl
and
fisubl
add
imul
mov
cmpsb
dec
enter
clc
jg
sub
adc
xor
xchg
xchg
test
test
jb
ja
pushf
out
sbb
in
sub
add
insb
xor
faddl
imul
cld
dec
shll
sbb
testb
add
aaa
fmulp
cmp
scas
les
lock
incl
repz
ret
outsb
sub
pusha
sahf
in
lock
xor
add
xchg
enter
jb
pop
mov
mov
pop
orl
cmp
push
and
enter
aaa
std
lcall
rorl
or
xor
adc
pusha
push
dec
or
xlat
jne
clc
idivb
movsl
jmp
mov
lea
aam
cmpsl
mov
mov
decl
mov
in
pop
cmp
add
jmp
pop
cmp
jns
icebp
pop
lcall
sbb
aad
xor
das
adc
js
xor
pop
movsl
xchg
fldenv
jmp
mov
sub
push
pushf
gs
mov
incl
hlt
push
mov
sub
xchg
mov
jl
fiaddl
mov
mov
sbb
clc
sub
call
or
call
pop
inc
mov
sbb
roll
xor
mov
movsb
int3
jge
in
inc
dec
scas
add
or
inc
mov
xor
sarb
xchg
cmp
scas
popa
cld
xchg
dec
decl
fldenv
stc
flds
sub
dec
sub
or
popf
ret
movl
jmp
in
xlat
jbe
add
inc
pop
shl
mov
xchg
sbb
incl
sbb
bound
aam
cmp
xchg
dec
xor
jne
popa
incl
imul
mov
add
outsb
and
push
pop
xchg
cmp
jp
pop
xchg
sbb
pop
std
into
xchg
jae
xchg
out
mov
dec
int3
arpl
icebp
lcall
cmp
fcmovu
lcall
orl
pop
incl
lods
es
lods
push
push
pushf
jecxz
mull
push
pop
mov
pushl
mov
xor
rcr
lea
xor
pop
shll
mov
jmp
outsb
or
sarl
cmp
pop
mulb
bound
test
mov
pushl
rorb
icebp
xchg
or
sahf
fld
test
iret
push
lret
xor
cld
push
push
cmc
aas
xor
jp
call
mov
shrb
and
mov
sub
pop
insb
loopne
mov
jg
or
mov
and
xchg
inc
pop
and
add
push
outsl
mov
test
cld
mov
and
shlb
scas
xlat
mov
mov
fldt
std
ljmp
mov
shl
inc
jbe
inc
dec
movsl
mov
push
popf
xor
addr16
dec
push
ret
dec
mov
push
fnstcw
xchg
cli
jecxz
jmp
fidivrl
loope
repnz
icebp
loope
push
lods
cli
call
push
mov
mov
push
shlb
adc
mov
scas
adc
mov
cltd
pop
cld
ds
mov
dec
cltd
sti
jle
mov
js
lret
aas
call
mov
iret
cmp
ljmp
or
call
mov
pushl
pop
mov
mov
rorl
mov
repnz
cmp
jp
std
pop
popa
aaa
push
test
cmpsb
cmovp
jge
ss
out
out
sbbl
mov
movsl
andl
cld
inc
pop
pop
pushf
mov
insl
lret
xor
sbb
test
jno
call
addr16
andl
mov
into
adc
into
jge
es
stc
loope
scas
mov
add
cmpsl
sti
pushf
adc
bound
addl
out
dec
mov
decl
out
nop
leave
iret
xchg
sbb
je
lods
add
jns
cld
imul
add
dec
fwait
dec
mov
fcoml
sub
js
sub
jecxz
cmp
pop
lock
xor
jnp
rclb
call
push
adc
imul
sub
sbb
call
pop
pop
sub
arpl
or
icebp
fbld
enter
je
outsl
enter
dec
lods
inc
pushl
pop
push
cld
stos
loope
push
std
shlb
mov
lahf
mov
repnz
push
fiaddl
or
jmp
in
sub
in
pop
add
pop
inc
rclb
fistps
scas
pop
mov
andb
stc
daa
shll
sti
cld
jecxz
decl
outsl
les
dec
dec
pop
int
daa
nop
addl
jbe
cmp
shll
sub
xchg
lock
pop
dec
mov
out
imul
or
cmpsl
xchg
adc
pop
lcall
jge
xchg
mov
jg
incl
gs
xchg
fdivr
icebp
cli
mov
jecxz
hlt
repz
lcall
incl
inc
pop
cli
sahf
sbb
fwait
sub
aas
add
xchg
es
mov
mov
ficoml
xchg
ret
iret
push
jp
push
mov
jb
or
mov
add
repz
xchg
xchg
add
in
fnstsw
enter
mov
cmp
jl
sub
outsl
lock
and
out
jl
ljmp
hlt
push
xor
cmp
ljmp
lock
push
decl
push
xchg
mov
outsb
xchg
insb
in
lods
rorb
fwait
cwtl
stc
pushl
pop
shrb
and
frstor
xlat
into
int
mov
ret
push
incl
cmp
stc
popa
insb
pusha
iret
repz
hlt
jmp
in
lock
lods
in
push
negl
lcall
dec
mov
mov
loop
pop
scas
mov
int3
pop
mov
dec
add
mov
in
mov
iret
xor
push
lret
out
aaa
js
cmp
loop
pop
dec
mov
pushl
insb
je
mov
ficomps
mov
or
lods
cmpsl
push
icebp
jnp
roll
call
ljmp
jg
xor
cltd
inc
pop
fwait
push
jne
or
inc
inc
and
add
push
xchg
mov
pop
dec
mov
fs
scas
fwait
sub
outsb
and
decl
xchg
mov
sarb
push
fisubs
mov
in
push
test
push
xchg
bnd
push
or
mov
ret
or
lcall
push
push
cmp
scas
inc
mov
cmp
mov
adc
cmp
out
cltd
aam
push
add
dec
cmp
testb
movsl
fwait
ret
pop
lcall
jp
jge
dec
ljmp
pusha
cli
test
jecxz
roll
pop
pushl
push
scas
jp
add
rclb
mov
loopne
cmpsb
repz
cmp
das
mov
ret
xor
fidivrl
lods
adc
dec
xor
das
popf
mov
mov
icebp
dec
mov
ljmp
enter
jno
jecxz
ss
add
mov
sbb
and
cmp
lcall
xchg
loope
dec
jbe
js
push
aaa
faddl
dec
mov
outsb
ret
xchg
mov
fs
jmp
cmpsl
stos
cli
push
iret
rorl
pop
mov
sub
stos
cmp
sub
pop
push
push
fstpt
inc
ljmp
popa
xlat
sub
xchg
push
pop
push
mov
pop
adc
dec
sub
jmp
push
xchg
fstl
iret
mov
mov
hlt
push
out
and
adc
mov
mov
stos
cmp
mov
in
lahf
inc
xlat
push
pop
out
mov
mov
cld
sar
pop
pop
jno
jbe
or
pop
std
sbb
sbb
test
adc
or
out
aaa
mov
add
sbb
jbe
les
xchg
jg
ret
adc
fcoml
mov
int3
dec
fldt
dec
push
popf
xor
outsb
decb
dec
dec
sbb
dec
mov
stc
sbb
out
mov
add
fcomip
pushl
add
sub
fisubl
and
jl
out
and
xlat
pop
repz
fcomip
lcall
jecxz
mov
mov
cmp
sbb
aaa
aaa
sub
lcall
lods
loopne
push
sub
loop
mov
les
xor
mov
adc
incl
push
lahf
push
rcrb
cmp
insl
add
sbb
outsl
push
add
test
and
les
push
cld
lods
incb
ja
or
push
add
cmp
mov
scas
into
lcall
int
mov
jl
imul
xchg
or
adc
outsb
pushl
enter
leave
mov
insb
lock
xorb
lea
incl
pushf
pop
mov
cmp
lret
pop
in
sbb
inc
mov
dec
jp
sbb
call
out
and
cmpsb
outsl
xor
pop
test
jl
insb
mov
mov
mov
call
es
js
ret
push
repnz
mov
lahf
dec
jecxz
add
mov
jl
push
int3
cmp
and
push
cs
stos
pop
pop
fbstp
orl
mov
loope
cli
mov
in
repnz
jg
cmp
pusha
popf
fstpt
inc
stc
jge
stos
cwtl
xor
add
dec
imul
cmp
mov
mov
dec
or
jle
push
cmp
fnstcw
in
popf
and
incl
adc
inc
aaa
sbb
lret
stc
cmp
adc
in
out
cmp
nop
and
sbb
cmpsb
ljmp
stos
fimuls
icebp
mov
aam
mov
aad
dec
ja
sbb
negb
aad
cmc
call
stos
push
insb
insb
push
fnsave
jne
jo
mov
pushf
pop
in
lods
dec
jae
repz
jg
xor
pop
scas
imul
repz
mov
lds
testl
pop
shlb
movsb
jg
push
sub
pop
adc
sbb
out
pop
pushf
sub
xchg
lret
imul
sahf
push
call
xor
sarb
pop
push
jno
cmpsl
push
in
inc
push
loopne
add
decl
or
cmc
or
jnp
jbe
lea
lods
mov
test
fucomip
in
fdivrs
mov
mov
into
div
add
enter
dec
out
dec
jmp
fs
mov
data16
or
jo
jecxz
incl
fwait
decl
dec
mov
jo
and
cmp
jmp
inc
insl
mov
and
sarb
clc
adc
push
push
ret
add
dec
clc
arpl
icebp
cmp
sub
mov
jecxz
ret
movsl
nop
push
xchg
call
xor
fbld
insl
push
insl
cli
jmp
jno
sbb
mov
sbb
insl
rcrl
mov
lcall
cmp
xchg
shlb
add
adc
xchg
mov
or
das
pop
lods
mov
or
mov
pop
xor
aaa
mov
call
es
aam
and
lcall
add
ret
ret
ds
imul
inc
cmc
and
mov
mov
lcall
jecxz
insl
xchg
or
aam
cmpsl
cmp
scas
repnz
xor
lods
mov
pxor
jmp
cmpl
xor
xchg
test
xlat
jo
insl
stos
fldenv
jbe
test
jle
cld
pop
std
fcmovnb
movsl
jo
shrb
dec
test
dec
ss
mov
in
cmpsb
lock
ret
enter
mov
inc
test
sbb
or
push
push
cmpl
add
inc
loop
mov
xchg
mov
dec
dec
push
cmp
jo
sub
cwtl
and
jb
lcall
sub
mov
cs
bound
adc
fmulp
test
inc
or
jp
cwtl
pop
cmovo
lcall
sub
push
int
jns
jp
js
ss
imul
fstp
jmp
js
es
sbb
enter
in
mov
inc
mov
int3
in
mov
call
mov
mov
and
js
dec
data16
in
sub
mov
incl
adc
arpl
xor
push
cmp
mov
pop
sbb
inc
push
in
lock
decl
push
enter
xchg
das
mov
lds
hlt
or
sbb
popa
adc
or
fidivl
repnz
rcl
ds
into
fildl
add
call
mov
push
inc
mov
daa
and
das
pop
mov
fsubrl
push
fs
and
call
and
jbe
pop
lods
roll
xchg
es
mov
lret
jnp
out
jmp
fildl
xor
in
js
adc
cmp
sbb
test
cli
call
pop
xchg
jle
aam
pushf
mov
and
cmp
cmpsl
or
out
fdivr
pop
push
and
pop
adc
bound
das
cmpl
fs
jp
xor
push
pop
insl
lcall
aaa
xchg
aaa
adc
gs
xchg
and
inc
mov
pop
pop
lea
mov
imul
ds
mov
cmc
inc
sbb
adc
lock
loope
call
sbb
xlat
sbb
mov
cmp
shlb
mov
add
popa
das
adc
adc
xchg
jg
mov
cs
jmp
inc
pop
aad
pop
adc
xor
cmp
and
call
sub
add
adc
lahf
adc
adc
xor
popa
test
xchg
out
dec
ja
jg
dec
xchg
dec
fnstenv
sbb
call
cmp
or
ljmp
call
in
cld
mov
dec
mov
inc
ds
in
pushl
xchg
cmp
stos
lret
mull
pop
inc
and
jb
popf
cmpl
add
pop
xor
add
mov
push
test
xor
inc
cld
jmp
xchg
aas
lods
popa
fbld
jg
fs
sahf
cmp
sbb
aam
sbb
es
push
mov
cmp
call
push
cli
loop
jmp
mov
loope
in
add
xchg
sbb
jns
enter
jmp
xchg
sbb
test
scas
stc
dec
negl
test
dec
mov
mov
lcall
or
pop
pushl
pop
inc
cs
lret
xrelease
sbb
cmp
xor
fwait
mov
inc
daa
sti
fcomps
sti
xchg
cmpsb
sub
pushl
adc
addr16
push
xchg
arpl
sbb
sbb
dec
sub
movhps
push
inc
jle
incl
and
add
cmp
xchg
aas
push
jae
aaa
shlb
push
xchg
stc
jp
incl
insb
sub
and
sbbb
pmulhuw
adc
inc
rcrl
out
jns
xor
or
call
pop
and
adc
aam
out
aaa
or
xchg
jb
fldenv
imul
ljmp
hlt
cmpsb
testb
ss
mov
ret
iret
push
xchg
decl
inc
or
test
sub
movsb
stc
addr16
or
dec
add
sub
mov
fcoml
andb
movsb
cmp
sub
fisttps
stos
xchg
dec
sbbl
sbb
std
decl
push
mov
cli
or
sbb
or
mov
lock
ljmp
and
iret
dec
xchg
xor
lcall
inc
adc
push
scas
out
xchg
mov
in
lock
das
lock
imul
mov
decl
sahf
jno
lcall
ficomps
aam
shlb
or
mov
adc
pop
mov
hlt
fmuls
stos
push
push
jg
leave
lahf
orl
subb
xchg
sarb
loope
pop
mov
decl
push
scas
test
call
add
xlat
add
cmp
adcb
sub
cld
jge
ljmp
push
leave
push
push
mov
std
clc
mov
lcall
xor
outsl
outsb
stos
sub
mov
outsb
adc
loopne
cmpsl
mov
mov
enter
daa
or
jle
push
xor
sti
jmp
sub
iret
cmp
lcall
cld
adc
ds
popa
pop
ds
ljmp
out
pusha
mov
jl
mov
incl
push
sub
xchg
ror
movsb
xchg
and
in
cmpsl
in
xor
add
mov
lret
movsl
xor
aas
jo
mov
dec
mov
jl
pushl
testb
xchg
pop
add
sub
clc
inc
rcrb
jg
or
xor
gs
mov
adc
mov
ja
jmp
or
lock
jmp
mov
fists
int3
sub
ds
pop
sar
ja
push
pop
fstps
incl
in
inc
sub
push
push
lods
out
ljmp
cmp
aaa
xor
lods
jb
aad
inc
and
sbb
aaa
popa
std
ljmp
dec
adc
xor
jno
ljmp
push
aad
ja
sub
mov
push
fiaddl
enter
mov
fs
insl
mov
testb
sti
ficoml
inc
and
in
xchg
or
orl
pop
in
dec
inc
insl
xchg
xor
jg
cmp
mov
dec
pusha
mov
pop
xor
jecxz
imul
sub
sub
ljmp
clc
push
testl
cmp
pushf
loope
cs
sbb
std
push
nop
push
les
movsb
fldenv
mov
push
mov
xor
call
pop
xchg
dec
rcrl
xor
adc
push
mov
jbe
movsb
or
ud0
incl
das
xor
lahf
repnz
outsb
mov
jne
mov
lret
bound
orl
lcall
sar
mov
out
adc
fldenv
insl
stos
cmc
in
push
push
mov
sarl
jmp
imul
pop
pop
inc
fwait
inc
add
stos
push
sub
icebp
stos
pop
negl
fcomip
jmp
and
ss
push
lea
jb
fcmovu
js
or
pusha
call
mov
mov
cmpb
inc
rol
and
fsts
sub
cld
lahf
sub
mov
mov
loop
pop
sbb
incl
or
pop
and
dec
pushf
pushf
jge
test
fsubrs
mov
push
sub
or
cld
call
fwait
test
ret
cmp
decl
mov
pusha
mov
jnp
mov
pushf
lock
popf
jbe
js
mov
cs
cmp
push
dec
popf
inc
xor
lss
or
movsb
punpckhwd
incl
ret
stc
repnz
push
adc
mov
int
cltd
lahf
ja
lahf
fwait
jno
mov
dec
in
fcomip
fildl
enter
and
rclb
sbb
out
icebp
idivb
xor
incl
or
mov
push
cmp
incl
je
mov
in
adc
orl
data16
in
push
cltd
dec
jbe
mov
jecxz
cmp
into
and
pusha
push
pop
int3
sti
fisubrl
clc
or
into
stc
subb
push
aam
mov
dec
out
loop
sti
out
mov
outsl
stos
dec
shlb
test
int
and
add
lock
or
pop
cli
decl
sbb
xor
mov
jge
and
ss
mov
add
mov
pop
and
mov
pop
iret
or
lea
aas
rcr
ljmp
jmp
or
out
dec
pusha
jb
enter
into
push
and
dec
repz
push
addr16
xchg
sarb
icebp
pop
sbb
push
jae
sbb
das
or
push
pushl
cmp
repz
add
js
mov
mov
stos
pop
jmp
pushl
aas
xchg
fsubl
fld
ljmp
pop
adc
in
decl
cmpsb
lret
das
xorl
or
or
push
push
push
xor
jne
mov
push
and
hlt
lcall
dec
or
out
sub
add
in
lds
aam
dec
add
jg
sti
adc
idivb
jo
ffreep
dec
inc
push
inc
xchg
cs
mov
pop
nop
pop
pop
out
mov
lods
push
inc
les
loopne
movsb
adc
ljmp
xchg
sub
push
adc
movsl
push
outsb
cld
loop
fcomp
jmp
ficompl
inc
dec
push
mov
sahf
sbb
lods
push
xchg
mov
subb
and
test
dec
xor
out
mov
inc
lods
data16
inc
bound
inc
sbb
cmp
scas
stos
mov
lcall
in
vmovdqa
inc
mov
or
scas
push
add
outsb
xchg
mov
inc
loope
call
roll
lret
push
sbb
imul
mov
enter
pushl
lret
insl
jbe
in
adc
pop
jmp
fbld
sbb
dec
adc
ds
out
mov
js
sbb
lock
fldl
sti
in
xchg
in
aad
loopne
mov
push
icebp
sub
push
leave
push
mov
aad
fs
incl
js
je
mov
xchg
pop
jl
fmulp
add
xchg
or
icebp
jmp
int3
mov
jbe
mov
enter
out
enter
cmp
dec
lret
hlt
loopne
push
stos
xor
std
mov
sub
arpl
decl
mov
mov
scas
inc
mov
inc
data16
into
sub
mov
pop
pushf
insl
adc
jmp
jg
mov
or
daa
fisubs
mov
test
or
inc
nopl
xor
mov
and
cwtl
insl
loop
xchg
lds
imul
call
pop
jecxz
cmc
int
mov
in
push
icebp
roll
ljmp
call
pop
aad
jle
cs
movsb
jb
inc
lock
lahf
movsb
pop
std
outsb
sarb
jno
add
outsb
mov
mov
cs
in
sbbl
sub
jnp
addr16
ljmp
cmp
xchg
test
cwtl
pop
enter
inc
sbb
cmp
ss
stos
mov
adc
jge
in
loopne
mov
add
lcall
jns
out
inc
insl
cs
stc
xor
push
sbb
push
mov
call
cltd
mov
and
push
jns
mov
inc
arpl
xlat
or
mov
call
jge
inc
pusha
push
sub
push
loop
movsb
add
pop
mov
ljmp
call
loopne
hlt
push
adc
dec
dec
insb
mov
push
icebp
pop
pop
call
call
mov
mov
cmp
mov
gs
push
iret
jg
mov
pusha
and
fldenv
pop
fs
mov
hlt
or
dec
cmp
inc
out
push
push
cmp
add
cmp
jmp
mov
or
push
out
je
call
in
inc
scas
push
cmc
inc
mov
daa
insl
cmp
ss
dec
imul
xchg
push
mov
in
incl
cmp
xlat
add
dec
lods
fbstp
insl
mov
es
xchg
dec
hlt
shlb
dec
and
cmc
mov
call
xor
and
call
jns
mov
xchg
pop
cmp
iret
adc
xor
sbb
nop
dec
jp
pop
aaa
ds
mov
xchg
imul
push
inc
or
in
xor
jle
push
or
movsb
into
jnp
clc
pop
leave
inc
std
cmp
sbb
jno
clc
pop
lock
sbb
jo
bound
ss
push
inc
ljmp
mov
loop
ja
incb
and
je
and
cmp
fwait
rclb
fiadds
lock
sub
jg
decl
fisubs
lods
push
in
push
gs
mov
adc
jb
push
mov
ljmp
xor
cmp
aaa
mov
xlat
xchg
push
mov
popf
test
push
repnz
ljmp
jle
xor
jo
ret
out
arpl
add
out
out
cwtl
add
mov
outsb
xlat
aaa
out
iret
xor
jo
or
mov
mov
or
shl
mov
or
rcr
lea
push
sbb
call
xchg
ret
shr
or
inc
test
faddl
dec
jnp
pop
xchg
imul
push
dec
fwait
push
push
fs
lock
fsub
cwtl
inc
push
xchg
pop
mov
int
scas
cli
ljmp
mov
mov
mov
scas
in
xor
jle
das
call
xor
adc
sbb
inc
mov
int3
lods
clc
ret
and
jle
sar
jmp
mov
sub
bnd
ds
sub
mov
cltd
daa
sub
adc
clc
jg
push
pop
dec
xchg
test
sbb
gs
loope
lcall
pushl
inc
xchg
pop
and
cs
aad
sbb
ret
pop
ret
jle
outsb
cld
out
xor
and
or
add
pushf
dec
fstpl
mov
call
shlb
js
daa
fistps
push
push
test
mov
loopne
xor
lods
lcall
pusha
add
sbb
inc
mov
xchg
inc
sbb
decl
jo
fstpt
loope
cwtl
es
sbb
rcrb
sub
adc
inc
mov
les
pop
mov
adc
add
pop
shrb
xor
lcall
ljmp
cli
jl
dec
push
mov
fwait
std
mov
or
arpl
adc
cmp
mov
sbb
cmp
sub
sbb
lcall
pop
enter
mov
fs
popa
pushf
xchg
ljmp
je
mov
aas
dec
dec
lret
push
outsl
xchg
jle
jmp
loop
mov
pop
xor
out
in
inc
std
inc
push
fs
mov
xor
decl
push
test
adc
mov
xchg
in
inc
xor
fs
jmp
orl
inc
and
hlt
lods
sub
inc
lds
pusha
insl
pop
jg
int
test
iret
lcall
xor
fcmovb
add
sbb
in
adc
icebp
into
push
sub
jno
lret
pushl
pop
jns
js
lock
jmp
and
push
jecxz
mov
out
mov
call
sets
mov
loope
push
sbb
dec
jb
js
inc
pop
imul
jmp
cmp
loopne
fdivs
pop
pop
jb
pushf
clc
cmp
mov
scas
icebp
jle
and
add
cmp
orl
out
movb
test
cmp
in
lahf
repz
stc
rolb
fstpt
mov
adc
inc
jae
leave
jg
andl
mov
fsubp
lret
jo
pushl
mov
int3
push
jnp
pop
jns
in
sbb
add
test
push
stos
add
inc
icebp
mov
jp
xchg
jmp
cmp
xor
notb
dec
cmc
into
decl
and
sar
xchg
xorl
pushw
incl
mov
inc
xchg
inc
pop
and
popf
or
es
mov
js
pusha
mov
out
imul
incl
movswl
push
xchg
jne
mull
xor
pop
cltd
lcall
jp
mov
mov
in
cmpxchg
lods
sbb
sti
and
arpl
in
mov
sub
std
leave
xchg
arpl
sub
daa
lock
jg
incl
and
pop
jno
dec
das
icebp
aam
push
lret
pushl
pop
and
adc
adc
ds
cmp
cltd
sbb
fsubrl
loope
in
mov
lods
jo
cli
inc
cmp
sti
cli
add
xchg
incl
movsl
sbb
inc
cmpsl
and
lret
and
aam
jb
and
adc
jmp
sbb
cmpsb
bound
mov
mov
push
int
pop
outsl
ljmp
fdivs
mov
mov
xchg
jae
inc
sub
daa
cmpsl
mov
xchg
call
dec
mov
sub
xor
sbb
movsb
enter
clc
cld
andb
xor
clc
decl
or
dec
mov
popf
mov
mov
add
ja
mov
test
xor
enter
jg
incl
push
imul
pop
mov
mov
and
add
fstps
xlat
in
push
ret
test
add
dec
jmp
push
add
je
push
push
mov
jl
pusha
lods
ja
push
in
fsub
orps
push
or
mov
lea
sbb
incl
and
sub
je
lock
in
incl
push
push
jbe
sbb
or
clc
sbb
fnstcw
in
pop
xchg
mov
jg
or
mov
mov
push
mov
mov
lcall
dec
jbe
xchg
popa
adc
sbb
jnp
adc
add
jmp
sub
push
cmp
stos
pop
fwait
pop
mov
xor
pushf
aad
xchg
loop
jmp
movsl
dec
subb
pop
dec
jmp
sbb
mov
lea
inc
sbb
mov
lcall
dec
test
pop
xor
lret
push
jns
lahf
jo
push
sbb
sarl
popa
jno
inc
loope
xor
mov
jb
into
jmp
push
lcall
sub
loope
and
add
out
xor
fsts
fimuls
cli
mov
loop
or
andb
stos
jg
mov
or
out
xor
or
cmc
je
clc
fmul
addr16
sub
pushl
pop
push
jge
sub
dec
mov
fdivr
ljmp
or
insl
sub
call
dec
aam
pop
push
pop
push
add
stos
push
pop
jle
and
xchg
rcrl
ljmp
inc
pop
insl
inc
popf
push
stc
sub
jg
popf
hlt
scas
cli
dec
jns
and
stos
push
bound
dec
nop
call
clc
out
and
pop
mov
pop
and
incl
and
divl
jl
xchg
push
adc
andl
gs
leave
xlat
and
mov
lods
jle
push
stos
sub
jae
mov
movsl
push
loopne
rcrb
jp
in
dec
pop
lcall
cmp
movsl
jno
lds
lock
orl
mov
mov
dec
ja
and
mov
cmc
mov
xchg
push
imul
daa
jns
lcall
sbb
push
and
or
cmp
mov
lock
loopne
cltd
pushf
or
decl
push
subl
add
outsl
xchg
mov
jle
add
cmp
ljmp
fs
sbb
mov
into
jno
mov
stc
jnp
xchg
fwait
push
adc
inc
cmp
loope
aad
rcll
loopne
mov
jge
inc
leave
in
movsl
mov
fdivr
call
adc
leave
int
test
loopne
mov
mov
cwtl
fcmovne
mov
pop
cs
pop
lret
ja
jne
jno
xchg
fisttpl
decl
mov
data16
rclb
aad
pop
clc
ret
pop
xchg
jno
nop
aaa
out
jg
push
lock
inc
xor
sahf
xchg
xor
mov
cmp
ljmp
xchg
aaa
sbb
sti
movsb
rcrb
cmc
outsl
ds
fdivrl
inc
mov
sar
ljmp
mov
pushf
repnz
ret
dec
insl
adc
std
push
xchg
jle
xchg
call
aas
stos
inc
pusha
xlat
popa
or
andb
bound
ljmp
mov
add
sbb
sub
mov
call
jg
xchg
call
or
pop
adc
or
test
call
adc
call
mov
mov
in
sub
outsl
out
inc
data16
ljmp
adc
cmp
adc
out
mov
and
add
cmpsb
mov
adc
subl
arpl
push
js
sahf
lock
jae
lret
addl
adc
inc
add
xchg
push
mov
lret
adc
cld
mov
fwait
decl
mov
dec
sbb
or
mov
dec
lcall
fimull
lea
push
sbb
and
cmpsl
lods
sbb
mov
add
in
or
int3
icebp
sbb
outsb
incl
mov
mov
pop
cwtl
and
add
incl
and
lock
xchg
xchg
jbe
inc
lds
imul
lcall
not
inc
sub
out
pop
test
roll
lcall
lods
lock
mov
sbb
or
adc
mov
inc
push
mov
pop
es
jo
pop
fistpl
mov
cmp
push
xchg
mov
incl
dec
cmp
mov
jb
rcll
or
dec
addr16
add
lcall
incl
and
mov
pusha
cmpsl
jbe
or
cld
ret
jnp
pushl
and
or
leave
pop
insb
insl
inc
insb
inc
inc
pop
loope
xor
push
mov
jg
add
xchg
pop
pop
lods
insb
dec
sub
lea
lcall
jg
mov
pop
jbe
push
in
call
add
fidivrs
pop
out
mov
decl
mov
add
pop
ss
icebp
les
xchg
leave
sub
mov
push
jns
in
push
fwait
lcall
in
xchg
out
fistpll
orl
nop
or
decl
shl
rorl
push
or
aad
jge
in
scas
shr
mov
std
cmp
sahf
insb
rep
add
pop
mov
std
cmc
adc
outsb
mov
jns
cld
pop
jle
pop
std
jno
cld
add
push
mov
ljmp
rclb
cli
fnstsw
inc
iret
test
and
outsl
jle
xor
or
cmp
ljmp
je
mov
andl
add
xchg
push
js
xchg
jg
insb
std
leave
ss
or
adc
cmp
inc
pop
jns
arpl
xor
and
lea
push
cmpsb
xchg
lock
mov
repnz
push
nop
iret
or
mov
mov
sbb
lods
cmp
adc
aad
lds
into
push
repz
lcall
ja
sub
pop
imul
cmpsb
popa
push
mov
mov
leave
mov
sbbb
xor
fsubl
or
adc
push
dec
cmpsb
jg
js
pop
fstl
pushl
xor
dec
cmp
orb
xlat
pop
mov
stos
xor
icebp
push
aad
negl
mov
mov
pop
xorl
add
imul
sbbl
ljmp
rcr
stc
dec
fmull
mov
es
rcr
cmp
cmp
jg
movsb
or
push
push
popf
mov
daa
stc
fisttps
daa
mov
jae
enter
jl
leave
dec
cmp
clc
call
mov
jge
fidivl
ret
flds
outsb
and
jmp
daa
mov
xchg
pushf
or
and
pop
push
out
push
pop
and
call
sbb
pop
jmp
cmovle
xchg
add
or
mov
lcall
xchg
or
repz
pop
cwtl
enter
cld
xchg
fmul
popf
out
push
icebp
jl
stos
mov
xchg
lcall
adc
outsb
jae
lea
mov
push
mov
in
fcomps
mov
mov
inc
jae
ljmp
sbb
cmp
sub
movsb
sbb
inc
mov
lcall
shlb
loope
ja
cmp
mov
lds
cmp
xchg
icebp
add
jg
mov
je
dec
add
ficomps
inc
ljmp
pusha
cwtl
jns
jb
les
fnsave
mov
and
rcll
test
or
add
or
jmp
jbe
mov
inc
std
rorb
lss
cmp
imul
dec
aaa
jg
jnp
decl
mov
sti
lock
lret
nop
mov
pop
jl
out
jnp
cwtl
jo
faddp
stos
cmp
xchg
sbb
insb
fs
or
cs
sub
out
dec
dec
adc
mov
cli
ljmp
clc
and
push
negb
inc
or
cmp
imul
dec
jp
decl
inc
fdiv
insb
lea
es
mov
mov
or
dec
xlat
jns
pushl
push
inc
add
cmpsl
add
popf
ljmp
aad
xchg
lods
aad
add
and
stos
lcall
cli
into
cmp
jo
mov
cmp
inc
test
das
clc
scas
cli
jl
sbb
jb
mov
dec
gs
xlat
in
push
jge
mov
std
ljmp
clc
add
dec
jnp
in
inc
push
gs
push
scas
cmpl
pushl
fimuls
jo
pushf
jle
pop
movsb
in
sub
int3
or
sub
ss
movsl
mov
out
arpl
jg
mov
fs
mov
test
fisttpll
or
inc
decl
cmpsl
sbb
xor
arpl
mov
fsub
test
dec
cmpl
movsb
in
int3
test
lahf
cmpsb
pop
decl
sahf
in
xchg
lods
dec
push
cmp
mov
xor
ds
scas
fsts
jp
xchg
xor
dec
loopne
jmp
popf
call
and
inc
lcall
nop
jbe
stos
pop
mov
ljmp
mov
xor
xchg
xorl
call
jg
call
dec
jecxz
inc
test
popf
xor
pop
loopne
insb
push
test
fistps
adc
pop
pushf
fistpll
stos
xchg
lret
rcl
inc
out
hlt
lods
and
fsubs
fcmovnb
xchg
xorb
pushf
sbb
dec
rcll
sub
sti
es
dec
loop
mov
inc
rcl
cmp
es
mov
push
lods
in
hlt
xor
adc
mov
sbb
add
pop
lret
sarb
cmp
push
xor
das
clc
call
xlat
pushl
jnp
xchg
add
pop
mov
xor
aas
mov
jae
jmp
ljmp
inc
scas
pop
lea
sub
mov
xchg
sarb
push
addb
or
jecxz
fstl
ljmp
loop
sahf
cld
push
xchg
daa
or
stc
rcrb
aad
mov
cmc
dec
mov
imul
ljmp
xor
jge
xchg
fcmove
std
jmp
jge
jns
test
aam
decl
mov
loopne
inc
mov
lahf
jg
ljmp
cld
mov
cli
inc
sbb
cmp
push
pop
xor
mov
sti
incl
push
out
mov
inc
mov
pop
int3
cmp
iret
mov
sbb
jg
pop
or
sub
push
pusha
inc
adc
icebp
sub
nop
fcompl
or
adc
pop
sbb
ljmp
mov
movsb
adcl
mov
push
dec
clc
sub
mov
jae
cmp
in
popf
hlt
ret
dec
movsb
adc
jl
js
les
decl
pusha
cmpsb
and
out
lret
dec
test
ljmp
adc
ljmp
sbb
or
imul
fidivrs
lcall
popa
push
cmpsb
xchg
xchg
pop
cmp
incl
xchg
fnstenv
ljmp
adcl
xchg
dec
xchg
daa
stos
push
dec
mov
orl
fldl
sbb
cmp
xor
push
jns
mov
cmp
adc
adc
imul
adc
out
xchg
les
decl
divl
inc
fs
jle
das
lods
cwtl
in
fldl
stc
sahf
pop
mov
sarb
mov
incl
mov
imul
pop
dec
adc
pop
sarb
ljmp
pop
cmpsb
xor
lcall
jecxz
inc
sub
call
jle
fildll
in
sbb
mov
mov
mov
push
std
incl
adc
enter
enter
insl
lea
and
ljmp
dec
jnp
push
xchg
hlt
lcall
je
ffree
adc
fistps
pop
jbe
repz
jmp
inc
mov
add
jb
dec
mov
pop
es
int
icebp
and
push
fucomp
cmp
inc
sbb
dec
testl
xchg
inc
cli
mov
bound
jp
incl
dec
or
or
lcall
loopne
xor
mov
push
jns
mov
shr
scas
rcr
faddl
pop
dec
incb
pushf
jno
and
movsl
sbb
call
push
cmp
pop
movsb
adc
aaa
fcompl
dec
sbb
js
into
sti
sbb
add
add
stc
cmp
lret
cmp
push
in
push
add
ss
xchg
xchg
jmp
push
call
mov
inc
jl
stos
fidivrl
cltd
push
nop
and
jg
insb
xchg
dec
aam
push
xor
dec
test
xchg
jmp
jecxz
sti
jp
aad
ljmp
mov
inc
jns
int
mov
ret
les
dec
lods
add
ljmp
clc
daa
pop
pusha
and
ljmp
test
jne
pop
gs
ja
orb
ja
std
imul
mov
ret
sbb
push
das
sar
sub
sbb
xchg
and
xlat
or
inc
or
aad
ffree
pop
or
lcall
inc
cmp
addr16
sti
jg
jp
xorb
jg
test
sbb
popw
mov
xchg
ror
lahf
addb
xor
stos
test
mov
aaa
testl
lcall
sbb
inc
pop
inc
pop
pop
jno
cmp
lret
inc
loopne
and
decl
xchg
enter
movsl
cmp
iret
xor
and
xor
mov
or
fidivrs
enter
and
jae
ja
test
and
repnz
mov
cmc
inc
data16
cld
cmp
repnz
push
sbb
jle
jno
loope
push
insl
mov
mov
adc
or
test
in
push
fsubl
into
flds
popf
js
adc
pop
int
outsb
decl
mov
adcl
xor
xchg
cmp
movsl
cmpsl
jnp
movsb
mov
call
fs
jge
enter
mov
sbb
push
and
mov
filds
leave
sub
popf
push
stc
test
xchg
cmp
je
or
cmp
xchg
pop
jge
sbb
roll
jp
outsb
imul
pushl
dec
stc
dec
scas
adc
xchg
dec
icebp
movsb
jo
and
es
movsb
aas
mov
decl
cmp
es
cli
inc
sahf
mov
push
jg
mov
cmp
je
enter
in
dec
insb
jo
add
out
jno
jp
or
push
stc
outsb
sti
fwait
movq
dec
jecxz
dec
add
mov
je
jnp
xchg
mov
push
pop
insl
mov
mov
decl
or
clc
int
pop
or
shrb
xlat
sub
mov
cmpsl
dec
out
push
dec
sahf
jo
push
std
sub
fdivrl
pusha
arpl
xchg
call
jl
lahf
and
sub
das
decl
ja
xchg
pop
jge
jbe
mov
shlb
ljmp
ja
arpl
or
add
gs
mov
lcall
push
hlt
jbe
or
mov
sub
xor
and
mov
call
hlt
xor
mov
pop
inc
xor
adc
inc
xor
mov
cmp
sub
mov
push
gs
rorl
ret
jnp
push
ret
sahf
dec
out
movsb
inc
sbb
fwait
in
mov
and
lods
cmc
mov
shlb
add
fnstsw
push
mov
test
nop
mov
call
repnz
pushf
sbb
jg
ljmp
adc
lods
fnclex
jp
cli
lea
popa
or
lcall
in
ret
movsl
adc
cld
std
or
addr16
cmpl
decl
imul
mov
cmp
or
xor
cs
jns
add
insl
mov
pop
fsts
cmc
shll
sarb
lds
sbb
jmp
mov
mov
pop
mov
lret
lcall
sub
xchg
js
jnp
xchg
push
and
aaa
adc
jmp
mov
lahf
outsl
add
ds
mov
jle
rclb
mov
dec
mov
das
add
fdiv
xchg
pop
rcr
sub
mov
repnz
adc
int3
mov
add
fcomps
dec
push
int
ret
test
loop
stos
fs
adc
or
and
inc
mov
incl
cmpb
mov
add
xchg
loope
lods
stos
stos
leave
cmp
mov
dec
push
jmp
ljmp
mov
pushf
and
paddq
and
shll
xchg
fadds
decl
adc
pop
mov
sub
and
and
inc
mov
mov
in
es
idiv
ljmp
mov
dec
sbb
xor
aam
in
shrb
or
and
xor
in
in
mov
add
call
mov
and
outsl
pop
push
out
mov
stos
icebp
incl
ds
pop
inc
repz
xor
mov
lcall
inc
ljmp
arpl
or
insb
and
dec
mov
cmp
pushf
add
jnp
dec
xchg
out
xchg
mov
dec
ret
jmp
and
or
in
imul
xlat
scas
push
inc
scas
sbb
dec
pop
pushl
sub
push
pop
in
mov
jecxz
cltd
imul
lea
rolb
cmpsb
mov
in
sub
pop
mov
push
add
orb
in
xchg
fnstsw
sbb
loope
std
mov
in
mov
sub
jle
hlt
loope
aas
jg
out
add
roll
es
int3
xor
fisubrs
ljmp
js
jbe
cli
inc
dec
xchg
push
leave
xor
decl
add
pop
gs
sbb
mov
inc
test
ss
mov
xor
jne
sbb
jmp
push
dec
call
insl
inc
cmp
out
loope
push
jmp
jno
mov
xlat
push
sti
mov
xchg
mov
push
mov
bound
add
lahf
adc
push
mov
push
mov
data16
xor
xchg
pop
leave
xchg
test
mov
cli
pop
out
setge
ja
gs
aas
loope
pop
dec
push
insl
mov
push
inc
sub
push
cmpsb
push
dec
jns
repnz
sub
cs
testb
andl
jnp
rorb
shr
jmp
scas
xchg
dec
outsl
or
xor
icebp
push
xor
mov
lcall
fwait
jge
pop
cmc
ljmp
sbb
fsqrt
jecxz
push
add
mov
lcall
aaa
insb
mov
inc
push
inc
lock
xor
mov
mov
mov
lcall
test
mov
and
fadd
into
push
pushf
push
rcrl
ret
inc
add
push
lcall
xchg
fcoms
sub
pop
sbb
repnz
bound
loop
mov
mov
out
or
stos
ret
mov
xchg
sbb
sbb
call
sub
pop
out
clc
mov
jnp
jae
or
pop
add
fwait
loope
test
decl
mov
adc
ja
mov
ds
int
andl
js
mov
jbe
out
inc
aas
andb
fstpl
dec
add
xacquire
ret
jmp
add
loopne
inc
cmp
in
fsubrl
fisubrl
pop
jnp
sub
jmp
mov
jg
jp
jne
cwtl
jno
jecxz
cmp
and
sub
pop
lret
lret
cmp
clc
xchg
push
out
or
xchg
jmp
call
jg
and
fildl
xchg
leave
bound
in
aas
insb
push
xor
pop
call
popa
js
xchg
mov
lcall
aam
out
add
sub
lcall
std
add
sarb
test
insb
mov
mov
push
rol
push
push
loop
ret
pop
sub
xchg
mov
inc
cli
cmpsl
mov
add
mov
lea
insb
push
mov
sbb
inc
mov
insl
mov
call
pushl
dec
or
movsb
dec
lret
jno
inc
in
sbb
push
adc
cwtl
cmp
leave
cs
jecxz
lcall
int3
and
aas
cs
or
mov
xor
cmpsb
dec
cld
lcall
inc
or
mov
dec
cmp
mov
or
clc
mov
outsb
cmp
test
insl
icebp
jne
aas
cmpsb
hlt
incl
shlb
test
int
fucomip
inc
or
scas
adc
cli
lcall
mov
lahf
cltd
and
gs
jg
sbb
or
and
dec
inc
sbb
push
mov
cmp
and
add
fisttps
and
pop
pop
xor
lock
push
push
insb
insl
stos
dec
push
cmpl
decl
jae
out
xchg
lret
mov
lods
inc
std
rcrl
mov
sub
pushl
cld
hlt
jecxz
test
xchg
subl
and
pop
push
and
add
add
clc
pushl
pop
cmp
repnz
mov
dec
xchg
dec
movsl
or
rclb
add
xchg
addr16
incl
xor
xchg
shll
aaa
sbb
cli
mov
dec
add
aas
outsb
gs
jns
push
call
inc
mov
cltd
cmp
scas
dec
in
ja
je
dec
or
add
pop
pop
popa
enter
mov
or
add
add
lahf
shll
and
pop
mov
or
divl
push
in
push
jle
shlb
shl
subb
adc
xor
mov
dec
sahf
repz
call
xchg
dec
movsb
ja
cli
inc
fmuls
sub
push
add
pushf
sbb
fwait
jmp
mov
lock
xor
push
push
into
pop
in
stc
popa
jg
push
ljmp
mov
sub
es
in
hlt
push
aaa
test
pop
std
mov
xor
ja
mov
mov
or
or
push
cmpsl
ret
stos
inc
aad
xchg
pusha
jl
cld
fisubl
sbb
nop
lret
or
or
xor
incl
push
out
mov
lods
pop
int
pop
out
pop
loop
sbb
outsl
decb
add
popf
adc
inc
or
mov
jg
ja
scas
int
sahf
scas
faddl
push
repz
jle
fdivp
push
push
nop
stc
mov
jle
int3
out
push
mov
xchg
push
rorl
pop
fdivl
cmp
push
inc
fisttps
rorl
ljmp
cmc
out
arpl
call
insb
mov
call
add
push
sbb
pusha
mov
pop
cltd
fwait
lock
jge
call
cmc
xlat
push
xor
jp
pop
push
or
cmp
dec
lods
cmp
jb
mov
ficoms
fists
lret
outsl
iret
jbe
jl
and
pushl
xor
push
add
test
hlt
pop
loop
or
lahf
and
or
decl
xchg
lods
ss
mov
sbb
out
xchg
loopne
ret
and
bound
daa
and
call
adc
cmc
push
dec
sbb
pop
fmull
scas
clc
jg
jle
mov
ss
mov
fmuls
mov
cld
fisubrs
lcall
in
or
sub
je
inc
push
xor
fimuls
and
test
pusha
push
jl
jae
fiaddl
decl
jp
xchg
inc
jl
push
mov
sub
popf
mov
cmp
addb
ljmp
mov
or
sbb
psubsw
fs
inc
xchg
cs
shrb
into
cwtl
test
call
jle
mov
mov
in
cli
int3
jo
lar
ljmp
lahf
xor
pusha
dec
negb
dec
lcall
push
repz
mov
and
pop
arpl
mov
push
sub
jne
repnz
mov
adcl
out
push
movsl
or
les
stos
pop
inc
dec
inc
and
cmc
xchg
dec
aaa
loopne
rcr
jg
adc
push
xchg
ss
fimuls
repz
icebp
shrl
xor
ret
aad
or
jae
jg
pop
icebp
jmp
mov
pop
lods
mov
dec
ja
push
loopne
pop
dec
inc
push
sbb
ret
xchg
icebp
cmp
call
jg
push
inc
sub
out
decl
cld
and
and
sahf
stc
mov
mov
lods
decl
fchs
mov
cmp
cld
sbb
inc
pop
or
xor
sub
loop
mov
jge
decl
dec
xor
or
push
ret
jg
xchg
lcall
inc
in
xor
mov
decl
fidivl
mov
inc
and
negb
lret
ret
rcl
mov
mov
mov
add
pop
cmp
leave
xor
jmp
pop
jg
mov
int
mov
out
adc
sub
mov
cli
mov
cs
cli
adc
incb
sti
fisubl
pop
leave
into
jg
sub
into
jmp
orb
jg
call
mov
test
bound
sarl
mov
jmp
adc
lods
js
negl
icebp
decb
xchg
int3
xor
outsl
call
sbb
jl
les
fstl
sbb
int3
daa
push
sbb
insl
idivl
rolb
stos
call
fimuls
mov
out
mov
jmp
mov
data16
lcall
or
pop
in
pop
adc
lea
mov
popa
cli
jmp
sbb
xchg
pop
cld
pushl
push
jno
push
ret
rorb
pop
pop
mov
ret
inc
in
add
cmp
mov
imul
xchg
int
shlb
adc
je
cmc
scas
fcomip
decl
push
ret
das
cmp
cmp
stos
fs
push
pop
mov
mov
and
mov
cld
push
aas
sub
in
out
dec
pop
xor
inc
into
pop
pop
mov
out
leave
jbe
xchg
inc
adc
mov
icebp
in
fsubr
hlt
mov
mov
cmp
shrb
xlat
jb
xchg
std
jge
pop
cs
jb
inc
les
or
decl
mov
mov
mov
aad
arpl
pop
cmc
lahf
pushl
adc
scas
push
mov
insl
jns
dec
push
dec
fistpl
xor
mov
outsb
fbstp
ljmp
loopne
es
js
push
aad
icebp
jne
push
mov
insb
lds
andb
cs
pushl
inc
cmp
lods
stos
subl
jo
shlb
sar
push
inc
mov
add
xor
cmp
or
addr16
aam
cs
push
mov
sbb
out
cli
or
inc
das
aas
xchg
orb
leave
mov
popa
out
shl
cmp
ret
cltd
dec
fnsave
ficoms
std
dec
popfw
lea
out
dec
sub
fistpll
test
mov
or
fisttps
xchg
out
leave
lret
xchg
sbb
decl
cmp
cmp
jge
mov
inc
fnstsw
cmp
and
es
pop
out
std
mov
loop
jg
call
lods
jge
mov
xor
mov
sbb
sub
adc
call
adc
mov
xchg
fdivl
imul
sub
cmp
jne
das
xor
pop
aaa
push
xchg
mov
lret
xchg
sbb
sub
incl
mov
fdivr
ljmp
clc
ds
sbbb
out
jmp
mov
aas
iret
adc
dec
idiv
lcall
xor
or
fwait
ljmp
fisttps
cmp
int3
lock
cmp
xor
jl
pop
in
lds
test
fsubrl
cmp
mov
mov
pop
mov
and
ds
sti
das
dec
xor
movsb
repz
pushl
lea
add
or
inc
or
and
popl
pusha
pop
add
fucomip
mov
sbb
lods
sbb
rolb
pop
cmc
mov
xchg
sbb
add
scas
mov
lds
arpl
ljmp
cmpsb
jg
movsb
push
popa
pusha
jb
imul
cmp
imul
cmp
mov
daa
sbb
pushl
test
and
aaa
fcmovbe
rorb
mov
push
dec
incl
sub
xchg
je
xor
pop
xor
iret
in
adc
fadd
jns
adc
incl
or
movsb
push
mov
andb
pop
in
xor
ljmp
and
nop
lods
loope
stc
mov
bound
and
sbb
decl
xchg
jae
jbe
in
adcb
test
jge,pn
sub
or
mov
mov
decl
sub
nop
loope
stc
jns
mov
cs
loope
rclb
mov
or
push
insl
inc
in
decl
pause
lods
int
cli
xchg
pop
pop
lds
rclb
mov
call
call
int3
dec
orl
ds
adc
push
mov
inc
xor
mov
movsl
test
mov
test
imul
cld
aaa
inc
and
lcall
xchg
mov
iret
xchg
jns
xchg
ja
jbe
aam
jns
add
movlps
push
jns
push
pusha
cmp
add
pop
loopne
std
jmp
xchg
xchg
or
mov
mov
faddl
mov
lea
out
cmp
scas
adc
ds
nop
adc
or
mov
outsl
push
pop
fdivr
pushl
and
xchg
add
imul
inc
loop
sub
sbb
stos
mov
sahf
mov
pushl
repz
xlat
stos
orb
insb
stos
mov
xor
clc
jl
les
push
fimull
add
aaa
mov
rolb
stc
stos
loop
jecxz
movsl
sub
cmp
adc
in
call
ljmp
lahf
mov
es
ds
dec
pop
sbb
add
jo
dec
jae
xor
arpl
ffreep
lea
dec
push
mov
cld
xchg
inc
rcl
imul
call
dec
lret
pop
jbe
das
in
addb
push
daa
insl
xor
inc
mov
jg
mov
mov
xlat
mov
insb
mov
push
outsb
scas
pop
or
dec
push
je
sub
push
repz
mov
mov
aad
xlat
scas
lret
pop
inc
push
inc
jle
mov
test
jl
mov
sbb
dec
add
xchg
sbb
in
mov
scas
lds
pusha
dec
es
push
js
push
adc
or
ljmp
rcrl
ror
test
jg
pop
in
cmpsl
mov
sub
jne
cmp
mov
lcall
cmp
pop
jl
cmp
in
daa
into
bound
lahf
mov
pop
nop
js
xorb
lds
je
in
cmp
iret
popa
lcall
iret
adcl
mov
jnp
push
vmovntpd
sbbl
xor
out
pop
mov
clc
inc
sbbl
sub
or
adc
call
das
je
xchg
clc
int3
xchg
dec
inc
add
xchg
mov
or
stc
xchg
jo
dec
pushl
or
inc
adc
cltd
adc
or
xchg
lcall
push
fnstsw
mov
shll
push
jp
cwtl
fldt
insb
fadd
pop
daa
int
dec
ljmp
fisttpl
lcall
xchg
sbb
xorb
mov
cmp
scas
fwait
push
test
fdivp
push
mov
call
mov
insb
cmp
adc
cmp
or
xor
in
fsubrs
jbe
lret
mov
and
and
sbb
push
adc
sub
and
insl
inc
inc
lcall
or
jmp
dec
pusha
aaa
data16
adcb
into
cli
dec
outsl
data16
sbb
lds
cli
push
repnz
sub
nop
testb
mov
xchg
mov
js
adcl
cli
hlt
mov
jp
push
ljmp
incl
out
lods
lahf
int
push
pop
jge
mov
inc
cmpsb
push
insl
add
xchg
or
ja
ljmp
sub
clc
cs
add
jle
and
insl
ss
jge
jmp
push
pop
jecxz
push
dec
push
and
insl
rcl
clc
mov
dec
fisttpl
das
stos
ljmp
sbb
push
pusha
ja
subb
fisttps
and
cmp
rcrb
jecxz
dec
sbb
jl
cld
daa
jne
mov
aaa
adc
lcall
add
lcall
std
xchg
fcompl
xchg
jnp
jno
or
mov
dec
fcoms
mov
adc
test
ret
loopne
leave
pop
mov
push
pop
push
jae
loope
aaa
ret
fnstsw
xor
xor
mov
push
rcll
mov
in
xchg
mov
push
cltd
or
enter
cmp
das
push
imul
jb
aas
inc
arpl
sub
mov
call
in
xchg
jb
es
mov
mov
and
adc
scas
sbb
jmp
lret
cmpsl
pop
adc
dec
lcall
jnp
adc
xor
dec
fs
xchg
jmp
int3
cmp
nop
flds
mov
xchg
dec
shll
repz
shrl
inc
push
mov
mov
cwtl
into
cmovae
ret
sbb
aas
or
in
fcoms
sub
adc
push
push
dec
daa
xchg
sbb
fs
mov
push
push
mov
std
cmp
add
pop
in
test
aad
pop
idiv
xor
cmpsb
and
push
loopne
mov
adc
es
pop
clc
incl
pop
sub
sbb
test
xchg
in
ljmp
jmp
or
pop
scas
popf
js
and
mov
and
xlat
incl
adc
inc
cmpsb
mov
lahf
hlt
test
mov
cld
loopne
push
pop
fstps
je
cmp
sahf
mov
jle
jne
sahf
inc
pop
out
push
fcomps
mov
mov
repz
xchg
pop
mov
roll
sub
xor
xchg
sub
sub
cld
add
or
data16
jmp
or
inc
rolb
loope
lahf
cmp
add
mov
sbb
cmp
cmp
popl
mov
mov
xchg
stos
outsb
sbb
pop
mov
in
inc
xor
pop
pop
out
cmp
jmp
or
pop
mov
xchg
testb
pop
mov
add
lods
xchg
push
test
sarb
dec
movsl
cwtl
mov
fcomip
call
dec
or
adc
cmp
and
fldcw
das
lcall
jnp
lods
cmp
insl
std
cmc
cmp
int3
push
add
out
xor
pusha
xchg
filds
scas
push
cmpb
imul
imul
ljmp
push
jno
cmp
dec
dec
mov
mov
jo
scas
mov
into
cmpsb
sub
loope
push
adc
in
sub
lret
je
lea
or
lcall
ds
loop
imul
jo
add
xor
push
push
push
sub
arpl
xchg
or
lahf
mov
cmc
xor
push
dec
incl
fdivrl
ror
sub
sbb
scas
fnstenv
stos
and
inc
decb
idiv
decl
xor
scas
dec
test
fsubrs
mov
cwtl
pop
sub
xchg
sbb
inc
adc
cmp
les
movsl
in
fdiv
cli
cmpsb
xchg
push
subb
lock
fists
sbb
inc
insl
shlb
loopne
pop
mov
jmp
dec
jns
insb
dec
mov
or
jbe
add
or
mov
or
inc
js
pushf
leave
xchg
add
idivl
mov
dec
jg
add
repnz
out
xchg
dec
mov
add
cld
call
push
add
cmpsb
call
inc
je
cmp
incl
clc
ret
and
leave
xor
xchg
mov
fwait
mov
jne
xchg
cmp
xor
jg
test
sti
xchg
les
or
mov
sbb
sub
pop
outsb
ja
out
sub
xchg
in
scas
fmull
mov
mov
test
inc
lret
adc
sub
jge
cmpsl
pushf
and
pop
loopne
aas
cltd
shlb
mov
scas
cli
push
imul
or
rol
pop
ja
sbb
push
int
repnz
push
jg
or
je
and
fdivs
shl
xchg
xchg
lods
or
pop
fstl
jle
pop
ret
xchg
and
out
lds
call
mov
fwait
dec
jbe
pop
jns
es
and
or
enter
shl
push
rorb
mov
pop
mov
pop
jmp
sbb
repnz
sub
pushl
pop
adc
jge
shl
xchg
int3
loop
arpl
ljmp
ja,pn
jge
sub
adc
pop
cli
repnz
xor
sahf
js
shlb
xchg
lock
jne
lock
mov
out
add
fistpl
jnp
add
mov
sbb
mov
mov
outsl
mov
mov
or
and
mov
sbbb
adc
dec
loope
ja
cmp
mov
mov
push
xchg
lcall
test
dec
fcoms
mov
jae
pushf
jg
ljmp
lcall
out
or
shr
add
xchg
xor
push
stos
lret
into
mov
ret
and
jp
mov
loope
jmp
jge
lea
add
mov
push
lds
out
fcomip
lcall
shll
xchg
cmp
pop
add
and
or
hlt
push
aas
jge
stos
lcall
sub
inc
lret
lods
adc
push
movsb
aaa
int3
ja
repnz
mov
jmp
pop
ror
gs
inc
dec
xchg
sbb
xor
inc
jb
pop
xchg
dec
je
jne
andb
call
sbb
iret
daa
int
cmp
xlat
lods
js
scas
in
out
pop
inc
xor
notl
dec
rol
jae
sub
out
xchg
lods
sub
sub
lds
clc
jp
je
jnp
lret
and
cli
jg
dec
pushl
mov
pop
mov
insb
fdiv
sub
dec
pushl
cwtl
sub
stc
fistpll
fisubs
adc
cmp
test
cli
jmp
pop
inc
fs
or
scas
mov
cmpsl
clc
sbb
jno
mov
pop
lods
out
or
add
cmp
and
adc
dec
call
dec
pop
sub
mov
sti
sub
push
sub
fisubrs
mov
aaa
xor
arpl
ljmp
arpl
mov
addr16
pop
loop
push
mov
jbe
cltd
stos
lret
cmpsl
mov
push
decl
data16
and
aaa
mov
pop
pop
cwtl
jmp
dec
out
inc
jns
mul
adc
fistps
mov
insl
out
jbe
stos
sbb
push
dec
push
jmp
adc
scas
jb
ret
and
test
inc
pushf
jb
inc
push
outsb
sti
xchg
cs
nop
test
dec
jg
cmp
les
stos
adc
rcll
aaa
xchg
loopne
pop
sbb
dec
stc
icebp
mov
mov
jle
pop
popa
jmp
mov
jp
out
mov
das
cmp
nopl
push
pop
adcl
dec
inc
lcall
jl
push
insl
in
dec
out
xchg
or
xchg
pop
sub
sbb
fldcw
call
fcmovnb
jg
insw
pop
lds
call
push
rorl
push
sbb
mov
cmp
dec
andl
imul
stos
sahf
ror
xchg
inc
jnp
push
fildl
mov
inc
out
fwait
popf
jbe
dec
ljmp
sub
hlt
pushf
loope
pushf
sbb
mov
rcll
jno
ljmp
jo
dec
repnz
test
ljmp
mov
lock
insb
cmc
sar
insb
push
xlat
sbb
cltd
addr16
js
jg
call
roll
iret
fimull
push
loope
inc
cmp
mov
in
cmp
mov
call
lcall
push
orb
jg
dec
jne
sub
stc
clc
xchg
lahf
add
xchg
dec
int3
movsl
test
je
mov
test
jno
das
cli
dec
dec
add
jns
es
jle
mov
stos
mov
insl
sub
shrl
add
fwait
xor
sti
dec
movsb
cli
scas
push
lahf
leave
insb
or
cs
mov
ljmp
sbb
mov
push
fisubl
rcrl
mov
inc
mov
cmp
lcall
loopne
mov
dec
dec
and
inc
and
dec
paddusw
ja
push
fcomip
pushl
daa
movsl
gs
sarl
in
mov
cmpsl
stos
rorb
jle
in
mov
jmp
or
lock
pop
xor
aaa
dec
jmp
cwtl
dec
lret
jle
gs
sub
ret
push
repnz
and
ds
jg
ret
test
add
decl
lods
pop
mov
inc
leave
fnstcw
or
jp
push
jle
popf
add
push
jno
ss
bound
ljmp
mov
xlat
push
push
dec
aas
test
mov
in
addr16
in
ffree
mov
call
loopne
in
imulb
in
mov
outsb
scas
or
ja
cmpsl
mov
jg
neg
inc
jle
rcrb
mov
loopne
stc
test
xchg
cmpsb
dec
xorb
inc
xor
jl
jb
push
jbe
mov
insb
push
xchg
xor
call
xchg
jne
call
mov
mov
ss
dec
dec
adcb
adc
push
inc
popa
inc
lods
call
ret
cli
adc
mov
cmp
loope
add
int3
pusha
loop
push
inc
xchg
dec
out
jmp
test
stc
adc
cmpsb
adc
push
jecxz
cmc
jmp
push
loopne
stos
add
pop
shlb
fldcw
incl
and
orb
dec
int3
push
and
cld
jp
cwtl
cmp
xchg
xchg
out
xchg
pop
popf
or
or
push
shrb
stc
jp
test
push
call
jmp
jecxz
cld
cmc
call
scas
mov
popa
dec
lahf
mov
adcb
dec
int
add
cld
lcall
and
push
fadds
aam
out
cmp
mov
inc
add
adc
cmp
loope
movsb
mov
addb
fidivs
add
incl
jae
add
push
repnz
mov
sbbb
jg
add
pop
ss
inc
add
pop
imul
add
dec
orb
push
add
and
mov
adc
pop
inc
or
sub
dec
fs
movq
loop
ss
add
nopl
dec
mov
scas
dec
fsub
test
popf
push
jne
jno
mov
jnp
xchg
movsl
out
mov
add
push
push
mov
add
cmpsb
mov
push
movsb
push
movsb
inc
scas
aas
xlat
pop
sub
add
test
and
cmp
imul
push
inc
pop
pop
add
push
dec
lods
push
mov
pop
sbb
add
std
mov
inc
mov
pusha
sbb
mov
addr16
fcomip
push
adc
fs
mov
insb
or
lret
imul
mov
push
add
push
sub
lret
mov
js
push
add
fstps
imul
mov
stos
pop
stos
mov
add
jb
ss
add
jo
mov
mov
ret
outsl
push
shll
add
outsl
push
shll
fidivrl
iret
outsb
or
push
ret
je
fsubrp
mov
fidivrl
out
jge
fisttps
add
fwait
inc
mov
in
movsb
push
add
cld
stc
repz
fcmovnu
mov
shlb
mov
xlat
mov
mov
push
jne
push
lahf
jbe
fcmovnbe
jb
ret
add
mov
jnp
add
push
pop
dec
add
sarl
add
inc
xchg
jns
fstpl
cs
push
shlb
into
divb
stos
aas
add
ja
out
mov
jne
add
ja
push
subl
push
xlat
ja
js
push
fsubp
mov
neg
jns
push
jp
jp
inc
push
fidivrl
mov
mov
sarl
ja
fldl
or
push
ret
jmp
ljmp
je
roll
xchg
in
xchg
sub
xchg
xor
jne
push
xchg
push
setbe
xor
outsb
fisttpl
push
lcall
loope
addr16
cmp
pushf
cmp
popf
aaa
xor
notb
inc
push
lahf
inc
lahf
mov
outsb
mov
push
jecxz
push
imulb
in
adc
out
out
push
hlt
jns
out
clc
stc
cli
sti
cld
inc
clc
lahf
out
incb
jecxz
arpl
inc
xchg
fldcw
add
jo
imul
insb
add
pop
add
pop
add
push
add
pop
sub
mov
mov
jnp
repnz
add
mov
or
or
outsl
or
and
stos
add
test
mov
or
push
sbb
push
pop
pop
adc
adc
xor
lods
pop
stos
cvtdq2ps
lods
pop
mov
mov
insl
cmp
scas
insl
lods
pop
pop
adc
push
scas
lods
push
and
fldcw
sbb
scas
scas
scas
and
subl
inc
and
mov
mov
add
pop
push
mov
push
pusha
cmp
and
xor
lock
test
mov
pop
and
sub
pop
sub
pop
pop
sub
or
sub
daa
in
ret
sub
pop
daa
mov
dec
xor
push
es
mov
insb
shrl
dec
pop
cmp
pusha
fistl
add
into
int3
mov
mov
pop
xor
pop
or
or
int3
add
pop
pop
xor
mov
sti
outsl
lcall
das
push
cs
xor
add
xor
das
pop
push
push
xor
adc
mov
push
cs
dec
inc
adc
sub
adc
mov
xor
push
push
popa
jbe
cmp
jl
jge
jno
dec
fsub
add
pusha
pop
pushw
dec
dec
cmpb
jo
mov
inc
cmp
mov
mov
mov
pushf
cld
jg
fwait
lcall
mov
mov
sub
dec
in
fisttps
jle
je
push
bound
js
lock
cmp
je
pop
inc
mov
jg
fmuls
or
ret
xadd
xor
add
sub
test
aas
outsl
sti
mov
jle
xchg
pop
push
dec
add
out
and
mov
and
cmpsb
push
mov
xor
in
xlat
mov
ja
push
ja
jb
cs
xor
mov
add
fwait
and
pop
jbe
dec
sbb
popf
mov
mov
xchg
jo
lock
mov
cmp
mov
inc
add
jae
pushl
or
xchg
jp
inc
push
popf
inc
mov
aaa
add
xchg
jno
lret
fnstenv
pop
pop
mov
mov
cli
jns
inc
push
sahf
mov
insb
add
mov
xchg
pop
push
imul
stos
cmpsb
dec
push
dec
push
movsb
or
insb
inc
jae
add
jb
shll
outsl
pop
xlat
pushf
sbb
ljmp
rorb
add
inc
rcrb
insl
outsb
mov
dec
push
add
ja
add
sahf
jbe
fistpl
imul
jge
std
ds
push
add
and
es
js
out
mov
add
mov
shrl
insb
pop
repnz
sarl
push
ds
add
aam
sbb
jg
shll
fisttpll
lock
rclb
data16
add
and
fistpll
mov
add
test
data16
loopne
iret
sahf
mov
fstpl
push
jb
out
in
push
jle
or
jecxz
or
fiadds
fnstcw
aad
push
notb
mov
push
fildl
adc
push
adcl
addb
sbb
test
cs
sbb
test
in
mov
push
xchg
aaa
or
out
xchg
in
xchg
lock
sub
dec
add
sub
imulb
lods
fnsave
xor
cwtl
push
cmc
sahf
xor
fbld
es
pushf
cmp
rorb
mov
aam
jle
xchg
or
scas
jo
test
sahf
mov
pop
jbe
stos
into
shll
lgs
dec
pop
mov
int
mov
mov
sarb
jmp
mov
ret
cmp
add
addr16
and
add
dec
out
je
or
adc
daa
add
push
enter
or
inc
cld
femms
or
or
fdivrp
sbb
es
push
adc
push
add
mov
adc
adc
ds
add
or
jle
mov
adc
sbb
push
and
mov
mov
imulb
mov
add
and
mov
and
cs
mov
imul
aas
and
aas
aad
iret
add
cmp
jae
cmp
aas
aas
cmp
mov
push
enter
loopne
jge
add
jbe
ja
push
stos
cmp
inc
jle
cmp
js
push
scas
xor
dec
mov
scas
ds
jle
aas
adc
mov
mov
ds
xor
dec
inc
test
mov
scas
add
cmpsb
fcom
push
mov
addr16
mov
popw
jecxz
ds
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
test
jmp
lods
lcall
sub
sub
add
add
ss
add
dec
and
ss
in
inc
inc
mov
push
push
push
push
push
xor
and
call
push
push
push
imul
fildl
pop
imul
nop
cltd
mov
mov
decb
xchg
insw
popf
mov
jg
incl
jns
jle
addl
jo
outsb
pushf
shlb
divl
imul
rolb
pusha
mov
addb
add
add
push
cs
or
aaa
jl
push
add
cmc
repz
dec
xor
aas
add
mov
cmp
test
add
mov
add
mov
push
mov
ret
bound
fnstsw
repnz
mov
in
push
mov
gs
jecxz
pushf
add
mov
push
in
lcall
bound
push
arpl
mov
push
mov
mov
push
dec
lret
mov
xchg
add
mov
mov
test
scas
fldl
in
out
mov
nop
sub
sub
xchg
push
sub
mov
fsts
nop
sub
xchg
xor
xchg
xor
cmp
outsb
lcall
leave
jbe
div
fisubs
sahf
in
fidivrl
shlb
iret
push
lret
inc
adc
loopne
push
std
into
incb
inc
sub
imul
mov
insb
mov
add
test
jg
jle
jge
inc
inc
add
add
inc
adc
dec
dec
jmp
incl
or
pop
or
add
push
dec
or
adc
cmp
in
outsl
xchg
adc
dec
or
add
push
adc
sar
dec
inc
add
or
pop
pop
cmovg
sti
mov
add
sbb
inc
adc
fscale
dec
inc
inc
inc
adc
sbb
dec
add
dec
adc
inc
ds
inc
add
aas
cmp
cmp
daa
and
sbb
sbb
and
add
dec
ss
pushl
cs
xor
sub
sub
xor
stos
push
lods
mov
add
movsl
cmpb
subl
mov
mov
andl
mov
push
outsl
adc
add
ja
adc
add
pusha
addb
add
mov
pusha
pop
adcb
into
incl
roll
push
inc
push
clc
sbb
sbb
xor
scas
push
incl
outsb
sysret
adcb
mov
add
testb
stc
sysret
and
jns
in
lock
or
or
or
adc
jg
adcb
sub
aaa
outsl
and
mov
data16
jg
test
inc
or
mov
into
jg
lods
pusha
mov
cli
mov
cli
shlb
mov
or
push
or
cli
pusha
and
push
xchg
adc
jg
sti
jg
or
mov
sub
mov
or
jg
push
stos
add
jg
and
adc
adc
sbb
cmpsl
notb
lods
and
push
cld
jg
add
adc
jo
jle
and
std
ja
jg
inc
dec
sub
jg
repnz
dec
out
jg
mov
pop
mov
jle
lods
or
add
adc
fs
incl
adcl
lret
dec
xor
incb
xor
sub
sub
mov
nop
incl
add
xor
jg,pt
xchg
sbb
push
jbe
insb
mov
add
add
jmp
cltd
lea
call
add
jmp
lods
pop
mov
stc
jle
lret
imul
addr16
orb
and
mov
dec
xorl
cmp
jbe
add
shlb
data16
add
push
pop
sbb
outsb
arpl
push
dec
push
or
mov
and
incl
mov
movb
pop
mov
dec
jg
jle
aam
jne
fdivrp
cmpsb
in
sub
pop
push
stos
pop
stos
pop
pop
insl
fcmovnu
cmp
pop
daa
aas
aaa
mov
mov
pop
pcmpgtb
lods
jle
add
push
inc
push
mov
mov
lods
adc
adc
jle
push
fucompp
sahf
rorb
bound
add
mov
push
mov
mov
push
arpl
pop
fisubl
ret
pop
push
mov
test
out
mov
sub
dec
decl
ljmp
out
scas
dec
loop
dec
enter
test
test
pop
jle
lcall
scas
test
mov
fnstenv
mov
push
push
jne
pop
push
jbe
dec
or
push
push
jp
fwait
adc
dec
jbe
mov
add
mov
mov
popf
jmp
jbe
es
adc
test
push
outsb
notrack
jp
test
jle
inc
jbe
test
incl
ss
push
or
call
dec
ja
xchg
test
testb
fiadds
mov
mov
fldt
dec
mov
and
sahf
inc
out
mov
xchg
sbb
scas
cs
aas
popf
inc
push
pushf
push
inc
outsb
fwait
cmp
data16
or
xor
xchg
xor
mov
push
sub
sub
nop
daa
ss
out
mov
dec
xor
nop
fstpl
pushl
push
or
push
xor
dec
add
pop
fnsave
xor
cmp
pushf
push
inc
sahf
or
lcall
sub
cs
add
test
ja
sahf
sbb
adc
xchg
adc
push
in
movb
ja
push
jg
xchg
aaa
mov
add
and
mov
add
dec
rclb
lea
jno
jno
fidivrl
add
outsl
add
xchg
adc
pop
or
inc
aas
jns
mov
push
adc
pop
push
orl
lea
iret
sbb
imul
xchg
inc
and
cmp
lock
cmp
pop
icebp
adc
xor
in
add
mov
aam
jne
decl
or
add
xchg
cmp
jmp
xchg
adc
push
push
test
jnp
push
push
mov
xor
adc
xor
pop
adc
add
into
arpl
call
add
mov
incb
add
pop
jge
adc
xchg
pop
lcall
or
mov
jge
call
cld
pop
in
sbbb
inc
mov
pop
daa
std
out
adc
xchg
pcmpeqd
adc
lcall
or
loope
push
push
mov
mov
call
inc
flds
incl
decl
decl
sub
gs
push
addb
pop
decb
cmpsb
pushl
lcall
mov
scas
dec
jae
inc
outsb
decb
mov
and
inc
clts
add
sub
lods
iret
jle
adc
stos
insl
xor
sti
out
jbe
push
inc
xchg
cmpsb
push
incb
dec
or
pop
push
jb
arpl
incl
adc
mov
arpl
fdivrp
mov
sub
push
sub
jbe
xchg
pop
sti
push
std
ljmp
and
mov
call
inc
xor
mov
sub
push
inc
test
arpl
xlat
jg
mov
idiv
loop
push
dec
dec
xchg
and
sbb
lcall
incl
ficoml
pop
pop
inc
seto
ficoms
aaa
mov
stos
push
push
shll
jecxz
mov
roll
dec
testl
incl
ljmp
movsb
ljmp
lahf
inc
fidivl
inc
inc
pop
inc
pop
fildll
insl
mov
movsb
dec
fidivs
push
popf
inc
cmpsb
dec
dec
inc
xlat
xor
fs
dec
mov
mov
add
and
insb
ds
push
out
push
shrb
rcl
outsb
shrb
dec
rorb
jb
repnz
ja
sub
pop
daa
outsl
pop
dec
push
dec
imul
lcall
jne
push
cs
call
mov
dec
pop
add
ficompl
int
repnz
call
popfw
cmp
aas
cltd
and
ss
cwtl
xor
dec
cmpsb
push
xchg
push
push
aaa
push
lcall
ss
xchg
push
xchg
xor
xlat
push
xchg
xchg
push
fisubrs
ja
mov
ljmp
dec
sub
pop
pusha
fimuls
stos
movsb
jg
adc
fcmovbe
js
std
faddl
addr16
fstpt
push
jnp
jp
or
jl
cmpsb
shrb
or
jl
push
jge
int3
jle
fnstcw
es
jbe
adc
fidivrl
push
dec
int
dec
push
dec
repnz
repnz
jae
pop
fidivrl
push
mov
mov
out
add
in
add
int3
outsb
nop
testl
pusha
mov
stos
xchg
lods
cmp
nop
xlat
push
adc
adc
pop
and
mov
addl
es
addl
xor
sub
sysret
jg
and
xchg
out
push
sub
iret
aaa
aam
aaa
out
mov
cli
pushl
test
clc
push
idiv
push
mov
out
jb,pt
sub
jg
mov
icebp
dec
pop
out
push
push
dec
cld
daa
jno
push
adc
fstpt
mov
icebp
xchg
mov
je
daa
jg
mov
adc
enter
loope
xchg
adc
bnd
jp
es
xchg
out
subl
aaa
incb
in
rorb
in
mov
sbb
jg
dec
in
sarb
adc
dec
and
xor
jge
idiv
lea
push
fsub
test
push
inc
push
int3
mov
jle
mov
fisubl
jne
out
jg
arpl
clc
jbe
and
push
pop
push
pop
aam
in
into
push
pop
or
scas
decl
push
xchg
mov
lcall
jns
pop
insb
test
sub
mov
jmp
xchg
jmp
mov
push
xchg
mov
cmp
adc
loop
adc
xchg
out
sbb
loope
and
lret
jg
out
mov
or
cmp
pop
add
ja
aas
test
adcb
and
scas
inc
and
push
push
xor
movsl
in
add
dec
mov
mov
adc
call
and
dec
adc
imul
pop
pop
fiadds
ds
lret
adc
call
sub
pop
push
inc
test
pop
push
sbb
xor
in
ja
sbb
push
or
and
or
inc
or
push
add
stos
push
stos
incl
add
dec
mov
add
or
adc
addl
mov
add
mov
icebp
inc
push
les
sbb
insl
jo
add
add
cmp
and
sub
les
les
jae
inc
fcomps
loopne
pop
xchg
inc
cmp
scas
add
xchg
inc
sbb
imul
es
add
movsb
xchg
inc
fistl
ss
jmp
cmp
sbb
sbb
pop
push
ret
add
imul
jno
cmp
or
iret
add
add
stos
xor
sbb
es
orl
orb
and
pusha
mov
stos
cmc
add
flds
xor
mov
add
add
insl
ret
and
and
mov
popf
in
negb
shlb
xor
popf
dec
jecxz
jb
xor
sbb
orb
xor
inc
inc
fdivrs
sbb
add
and
push
filds
mov
push
mov
xor
push
fdivrs
inc
add
or
add
inc
sub
or
out
mov
sbb
push
test
xchg
insb
jno
outsl
sbb
sbb
shrb
jo
xor
dec
push
outsl
or
in
adc
mov
xor
pop
sub
fstps
ljmp
pop
pop
dec
insb
out
and
imul
mov
or
in
insb
jne
mov
in
in
push
sbb
sbb
dec
mov
popa
sbb
and
add
ss
cmp
mov
arpl
cmp
ss
and
mov
mov
fiaddl
sbb
pop
push
clc
js
add
add
aad
cmp
adc
mov
mov
push
add
xor
xchg
dec
sbbl
mov
je
push
dec
in
inc
movsb
fdivs
xchg
sbb
push
adc
push
fsubrs
mov
loop
cmp
or
bound
and
test
jbe
dec
outsl
xchg
and
inc
pavgw
addb
pop
pop
or
xor
dec
sub
add
fsubs
orb
xchg
scas
shrl
and
je
and
ret
mov
adc
push
arpl
pop
xchg
stos
xor
imul
pusha
adc
push
cwtl
or
pop
mov
mov
and
jecxz
lea
dec
fdivr
add
add
subl
push
ss
mov
or
add
adc
xor
fnstcw
in
lock
shll
lret
int
lods
in
pop
add
in
dec
arpl
inc
imul
cmp
or
push
sbb
jo
add
inc
imul
sub
dec
fscale
xor
je
jne
inc
mov
bound
xor
add
sbb
pushf
dec
fxch
push
and
and
ja
cmpsl
shll
or
nop
mov
adc
sub
adc
mov
leave
pop
sub
pop
lret
xchg
jbe
mov
test
xorb
gs
gs
mull
push
inc
mov
push
pop
imul
mov
push
cltd
pop
arpl
jnp
test
push
ss
dec
mov
jbe
arpl
xchg
or
notl
cmp
in
test
or
or
inc
es
insb
dec
mov
cs
rcpps
adc
inc
jno
mov
fs
mov
inc
imul
mov
ja
mov
sbb
sahf
daa
mov
rorl
inc
jo
push
outsl
jo
jb
imul
fwait
ds
jbe
mov
dec
inc
cmp
dec
and
ss
fnstenv
and
push
ret
sub
popf
rcrl
pusha
js
hlt
cwtl
imul
push
fldenv
xchg
rcrb
adc
aam
imul
adc
pop
or
inc
popa
outsl
sub
mov
adc
loopne
mov
inc
mov
mov
or
ficompl
and
or
inc
je
insl
dec
outsb
dec
stc
add
ret
sub
sub
mov
xor
mov
loop
pop
add
add
sbb
mov
cmpsb
imul
dec
or
or
push
adc
or
mov
xchg
pop
jbe
add
es
in
ret
jecxz
inc
xor
jb
fisttps
inc
fcmovnb
add
and
lret
lahf
imul
and
shlb
xor
ds
lret
inc
insb
inc
jns
int
xchg
daa
es
ret
xchg
cmpsl
and
sub
insb
mov
fsubp
mov
mov
sub
mov
pop
iret
dec
push
lds
sbb
lods
pusha
add
or
xchg
nop
jns
sub
jo
inc
sbb
push
push
dec
in
add
sarb
sbb
cltd
and
adc
mov
or
and
or
andl
js
in
mov
arpl
lret
jb
jne
fs
push
and
imul
xor
xor
add
ret
and
ret
dec
inc
test
push
gs
or
jle
jle
xchg
mov
cmc
pop
cmp
out
dec
pop
lret
inc
or
push
nop
xlat
fadds
push
mov
inc
cmp
outsb
movsb
loopne
mov
xor
andb
sub
test
inc
sbb
nop
pusha
insl
xor
bound
xchg
and
sub
cmp
call
mov
cmpsl
inc
or
push
pop
mov
jecxz
lds
or
pop
push
push
push
insb
in
loope
pcmpeqd
dec
insl
rcl
lock
fisubl
sub
inc
dec
test
dec
sarl
cld
fsts
adc
arpl
and
jne
pop
xor
cwtl
dec
mov
push
pop
pop
outsb
add
aaa
mov
mov
cmovno
sbb
mov
shll
mov
cmp
cmp
jns
push
lea
cmp
pop
inc
cmp
mov
and
out
jmp
mov
outsb
fdivs
rcl
push
pop
push
mov
sbb
imul
pushf
lds
add
test
rol
add
jnp
cmpsl
pop
sub
mov
mov
inc
xchg
sbb
jge
incl
sub
push
lret
jnp
and
arpl
or
arpl
mov
jnp
xchg
xchg
cmp
mov
outsb
inc
je
dec
cmc
rcl
mov
imul
mov
inc
sbb
test
sub
push
push
push
cmp
mov
sub
jmp
push
or
inc
and
cmp
or
sbb
add
sar
pop
xor
adc
and
and
fidivrl
or
and
adc
add
mov
add
add
push
or
or
add
adc
mov
sbb
sbb
push
sub
mov
or
push
or
adc
es
mov
idivb
inc
pop
adc
sbb
push
sub
push
push
inc
sbb
jg
push
sbb
cs
or
xor
and
lea
bndldx
lahf
jbe
jle
ss
sbb
push
add
decl
incl
adc
cmp
push
sbb
add
and
pop
shll
and
cs
or
push
or
push
adc
cmp
pop
add
adc
ss
sbb
ds
jle
in
sbb
inc
pop
sbb
push
sub
or
and
sbb
in
pushl
inc
sbb
add
sub
sbb
lods
add
sbb
adc
xchg
movsb
adcb
ljmp
fsub
adc
hlt
and
xor
sbbb
push
and
daa
push
or
sub
sbb
or
or
add
dec
mov
sti
subb
xor
push
cmp
and
sub
mov
pop
sub
aas
and
pop
pusha
mov
jle
mov
fimull
xchg
push
adc
idiv
jbe
xchg
cmovne
xor
add
or
daa
add
es
xor
xor
daa
or
cmp
daa
aas
sub
stos
pushl
sub
or
cmp
es
xor
dec
sbb
incl
bswap
add
or
das
adc
adc
decl
or
push
push
lods
adc
adc
or
push
or
pop
aaa
adc
bound
adc
daa
adc
or
xor
push
decl
es
mov
xchg
daa
cmp
xor
and
or
mov
jg
and
or
add
mov
and
or
cmp
pushl
or
or
pop
adc
pop
and
or
or
outsb
sbb
ja
add
lock
jo
sub
sub
cmp
jg
lock
jno
out
ss
incb
xor
das
xorb
lock
lock
or
fstpt
jl
sub
sbb
mov
push
adc
push
inc
das
clc
adc
or
cmp
sub
push
or
bound
pop
push
popa
clc
jo
or
or
push
sbb
xor
and
mov
add
xchg
jb
xor
cmp
adc
jg
call
inc
dec
sub
pop
dec
adc
sub
lock
add
cmp
incl
adc
lock
sbb
add
mov
mov
std
jmp
lock
xor
cmp
sub
or
adc
sbb
and
repnz
mov
jno
jmp
push
xor
mov
outsl
dec
adc
push
add
sub
fisttpl
mov
or
xor
cmp
push
sub
jmp
add
push
mov
pop
adc
adc
inc
dec
outsl
and
clc
xor
dec
xor
testb
add
in
mov
add
and
dec
sub
cmp
inc
mov
jmp
push
push
or
cmp
or
mov
add
cmpsl
or
fdivr
push
cld
dec
inc
outsb
fadd
shll
xor
bound
adc
outsl
inc
or
outsl
jg
clc
add
insl
fmull
and
xor
incl
adc
cmp
adc
adc
in
filds
adc
lods
lock
fcoms
psubsb
sub
pop
jno
adc
sbb
xor
adc
sbb
push
sbb
lock
or
jg
rorl
and
pop
inc
addr16
aas
dec
pop
pop
imul
lods
xor
cli
ljmp
sub
and
lock
add
inc
pop
pop
adc
lcall
inc
ds
scas
adc
andb
jno
sub
outsl
stos
aaa
insb
pop
pusha
dec
arpl
incl
mov
adc
inc
pop
sbb
adc
call
clc
xor
xor
daa
dec
sbb
femms
push
sbb
sbb
mov
adc
aaa
and
or
aaa
sbb
js
lock
fbstp
cwtl
or
dec
jnp
jne
and
mov
sub
sub
insl
xor
inc
and
sbb
adc
adc
mov
push
cmp
dec
add
jb
jns
dec
cmp
push
std
mov
adc
sbb
loopne
xor
adc
xor
push
pop
pop
and
lods
adc
add
sub
add
inc
jg
adc
push
call
inc
push
mov
cmpsb
aam
jb
rolb
pop
jno
test
std
add
and
cld
cmp
sub
loopne
dec
je
sbb
xor
sub
sub
sbb
mov
adc
hlt
das
adc
and
xor
dec
add
and
add
push
or
jb
pop
subb
pop
xchg
outsb
dec
xor
mov
adc
and
shl
push
push
out
inc
and
and
popa
or
xchg
sbb
xor
push
dec
pop
lcall
adc
lret
sarl
sub
aaa
push
jle
sub
cmp
adc
xor
or
adc
loopne
sub
adc
mov
imul
or
es
adc
ja
add
nop
mov
add
add
xchg
push
mov
or
insl
push
mov
and
movsl
or
lcall
lock
add
sbb
sbb
dec
add
loopne
jae
insl
ja
mov
sub
adc
lock
lahf
idiv
push
fsubl
sub
push
add
inc
push
sbb
adc
push
cld
pop
outsl
and
add
sbb
adc
daa
pop
adc
cld
lret
adc
cli
dec
fists
inc
or
inc
push
and
add
scas
dec
dec
push
sub
push
adc
outsl
cli
hlt
xchg
daa
sbbb
dec
add
jo
push
adc
std
incl
jg
popf
and
ficompl
imul
or
dec
pop
cmp
test
or
testl
or
sbb
xor
push
dec
ss
add
adc
mov
in
pop
sbb
add
lock
add
sbb
addr16
pushf
sbb
call
mov
mov
xchg
cmp
add
sbb
sub
fistpl
or
cmp
lock
or
or
dec
sti
in
sub
sub
xor
push
or
pop
inc
adc
cmp
inc
inc
push
sbb
add
mov
mov
js
mov
or
inc
adc
aas
insb
inc
and
aas
scas
xor
ljmp
cmp
rorl
push
sbb
pop
add
push
push
pop
push
sbb
and
mov
pop
mov
in
int
es
aas
enter
inc
cs
pop
fistps
dec
sub
sub
adc
lock
lock
add
lock
add
add
pop
clc
jg
decl
add
mov
sbbb
sbb
add
cmp
adc
pop
or
and
jmp
test
push
adc
or
push
sbb
cmp
unpcklps
cmp
push
sub
mov
ret
decl
adc
xor
sbb
sub
ret
sbb
adc
daa
adc
aaa
push
sub
or
sbb
push
ljmp
push
aas
adc
push
push
sub
adc
pop
sbb
push
cld
or
stos
cmp
pop
mov
mov
dec
test
fmuls
imul
outsb
jle
cld
sub
adc
fsubrs
xchg
pop
sbb
leave
add
movlps
pop
sbb
add
fdiv
jnp
jne
push
pop
push
jb
pop
sub
aaa
outsl
jle
mov
push
cs
fs
lahf
dec
in
movswl
push
mov
add
pop
xor
add
add
pop
std
pushw
and
add
outsb
cmpl
ljmp
rorb
movntps
push
pop
adc
adc
push
and
sbb
pop
pop
or
jne
sub
push
sub
pop
popa
js
sub
sbb
inc
push
push
inc
or
push
cmp
and
cli
ljmp
mov
and
sub
cmpsb
pop
invd
or
mov
push
cs
sub
or
sbb
or
lcall
sbb
adc
adc
daa
or
insl
or
add
and
pop
push
xchg
movsl
adc
pop
sub
jmp
push
sbb
or
mov
or
xor
adc
push
or
adc
or
call
adc
add
adc
push
subb
lock
add
and
wbinvd
push
and
outsl
pop
loopne
lock
push
dec
xor
dec
adc
sub
sbb
incl
nopl
or
and
shlb
sbb
jb
inc
inc
fcomip
jg
cmp
test
adc
cmp
mov
xor
popa
pop
sbb
inc
aaa
sub
arpl
incl
sti
adc
adc
xor
and
sbb
inc
cmp
pusha
mov
pop
mov
dec
pop
adc
loop
push
or
push
rolb
and
adc
inc
dec
or
pop
ss
push
xor
popa
mov
addb
loop
sub
pop
lods
cli
cmovno
movsl
or
sbb
sbb
decl
push
xor
test
or
xor
inc
mov
inc
cmpb
or
and
das
mov
adc
ds
aas
push
cmpsb
push
inc
pusha
das
js
mov
nop
adc
cmp
loopne
inc
push
pop
or
clc
decl
cmp
cmp
fdivrp
data16
pop
pop
mov
jb
sbb
add
or
sbb
out
ljmp
es
mov
adc
es
sbb
mov
in
xor
or
push
sub
or
adc
sbb
pop
sub
data16
adc
add
sbb
mov
adc
sbb
lds
mov
pop
and
push
push
sub
dec
dec
imul
xchg
or
dec
mov
sbb
and
mov
in
stos
adc
pop
and
add
xor
or
push
inc
inc
sub
das
sbb
dec
jle
les
rcrl
outsl
add
and
xor
bswap
test
cmp
adc
cmp
sub
push
aaa
dec
adc
cwtl
pop
ds
outsl
adc
sbb
aas
adc
adc
pop
cmp
and
sbb
dec
lock
pop
inc
sub
or
dec
pop
sub
xor
adc
loopne
sub
or
cmp
push
sbb
and
adc
mov
dec
and
int
fistpll
pop
adc
pop
adc
test
adc
sub
or
push
adc
sub
sbb
pop
and
or
add
adc
sbb
push
adc
sbb
mov
xor
jbe
out
js
and
sbb
sbb
push
inc
or
das
or
add
xor
and
cmp
cmp
jp
pop
lret
or
or
inc
or
bound
dec
inc
cld
vsqrtpd
mov
sbb
dec
rorb
or
adc
push
add
dec
insb
idivb
mov
pop
inc
push
sbb
arpl
fildll
inc
cmp
sbb
sbb
pop
lock
add
dec
cmp
adc
pop
lock
sbb
sbb
adc
adc
clc
pushl
andl
xchg
sbb
ds
sbb
and
push
dec
fdivs
add
cld
dec
ficomps
ds
addr16
or
outsl
or
or
add
add
or
adc
pushl
sub
add
pop
cmp
aam
inc
or
or
jl
and
adc
cli
add
xchg
ja
insb
std
aaa
popa
push
das
or
adc
lcall
push
inc
adc
adc
das
sub
pop
popa
lahf
pop
sub
mov
adc
sbb
and
pop
inc
adc
jg
test
cmp
call
adc
push
or
inc
inc
cmp
fdivs
lock
cmp
orb
out
add
mov
notl
sbbb
daa
mov
push
icebp
incl
xor
adc
dec
pop
shlb
cmpsl
clc
mov
test
mov
bound
cmp
daa
inc
add
pop
adc
sbb
pop
and
out
imul
std
incl
mov
or
sub
and
inc
pop
adc
sbb
pop
cmp
adc
add
push
cmp
sub
sub
push
sbb
mov
mov
sub
sbb
dec
nop
dec
and
out
cli
decl
cwtl
lock
add
outsl
dec
dec
sub
push
sub
sbb
cmp
add
outsb
xor
add
mov
pop
cld
dec
and
sysexit
cmp
ret
ss
dec
mov
add
sbb
es
nop
sbb
jno
sbbb
sbb
ja
inc
sbb
or
mov
or
push
pop
adc
pop
or
xor
mov
push
andb
push
pcmpgtw
or
lahf
add
dec
dec
push
js
ljmp
mov
pop
xchg
or
call
jo
sbb
mov
out
xor
aam
push
xchg
jp
lock
fsubp
rorb
out
add
sbb
aam
es
pop
jle
iret
sbb
dec
push
data16
and
xor
js
inc
outsb
add
fldl
mov
or
rolb
push
lock
add
add
or
or
push
and
or
stos
test
add
adc
xchg
sbb
adc
stos
jno
mov
push
lock
lock
add
into
hlt
aas
adc
pop
and
aad
lea
xchg
add
je
dec
or
test
sbb
cmpsb
pop
inc
add
adc
or
xor
fisubrs
cs
stos
lock
pop
add
lock
js
xchg
dec
or
push
pop
notb
add
clc
ja
fisubs
push
adc
or
inc
sbb
sbb
adc
xor
push
dec
or
and
add
push
fcmove
sbb
loop
lock
xor
mov
or
cmpsb
sub
add
cmp
mov
jo,pn
adc
or
or
sbb
adc
xor
adc
dec
outsl
pop
je
aam
pop
push
or
add
dec
dec
dec
push
ret
js,pn
push
scas
popf
sbb
add
or
adc
das
add
loopne
es
push
sub
sbb
add
es
or
or
sahf
sub
or
dec
cmp
adc
out
xchg
out
add
push
and
push
sbb
inc
add
sbb
cmp
sub
bound
xor
add
add
sbb
inc
jmp
loope
fidivl
arpl
lcall
scas
dec
add
and
loopne
and
ds
push
ds
inc
fucom
incl
imul
adc
and
sbb
cmp
or
cmp
or
add
inc
xchg
jmp
push
cmpsb
inc
push
push
rorl
into
sub
push
mov
add
arpl
and
into
sub
add
arpl
lods
add
lock
cltd
shl
les
lock
add
fwait
std
sub
sbb
pop
sbb
adc
or
cwtl
in
mul
and
xor
sahf
je
mov
and
push
adc
das
dec
or
cld
stos
insb
bound
lock
dec
xor
add
add
or
sbb
xor
lcall
jmp
cli
lock
pop
mov
mov
shlb
push
das
mov
ss
and
adc
mov
adc
movsb
outsb
je
loope
das
pop
or
pop
push
push
and
sbb
faddl
and
adc
push
sub
push
mov
inc
or
shlb
or
cmp
sbb
lock
adc
es
orl
movsb
sbb
push
or
lock
inc
clc
jo
insb
dec
lock
dec
or
push
xchg
bound
std
or
loope
push
mov
sbb
lock
push
inc
lock
add
or
adc
or
sub
mov
ss
or
adc
and
sbb
xor
pop
sub
ss
cmp
or
outsl
pop
test
out
clc
add
mov
jl
sub
sbb
xor
add
mov
rcll
or
cmp
pop
mov
call
jg
pop
or
push
adc
and
xor
push
mov
and
adc
mov
mov
les
lock
das
add
lock
add
ss
ja
xchg
pusha
jb
and
arpl
and
and
cmp
sub
inc
push
sbb
and
ja
pop
sbb
es
sub
dec
dec
push
mov
xchg
push
sbb
in
mov
and
sub
das
adc
mov
in
and
sub
and
mov
arpl
and
insl
add
dec
cmp
inc
dec
sub
or
xchg
dec
dec
xor
jg
sti
inc
xor
ds
dec
inc
push
and
jg
mov
je
adc
dec
aam
pop
and
je
jp
cmp
and
cmp
xor
fildl
xor
shl
xor
mov
cmp
sub
push
ds
dec
xor
dec
xchg
jle
dec
push
push
push
fldt
push
xchg
cmp
movsl
xor
mov
sub
xor
mov
or
xor
pusha
inc
aas
dec
jne
fs
cmp
sub
lods
pop
ss
push
push
pop
dec
lods
adc
sti
ds
add
lcall
jle
mov
inc
cmp
and
inc
cmp
dec
cmp
push
test
jo
xor
mov
sub
xorl
and
jnp
pop
dec
inc
add
fisttpl
sbb
add
push
push
sbb
xchg
lock
inc
sti
scas
xorb
sbb
xchg
lock
subb
into
and
mov
aam
lock
push
add
jae
or
loop
add
mov
or
dec
aam
adc
mov
test
push
add
or
or
je
pusha
mov
fisttpl
jl
pop
or
fsubrs
add
push
inc
fdiv
js
insl
push
inc
jle
add
or
or
or
sbb
stos
scas
lock
add
add
xchg
ss
test
add
dec
mov
lock
or
jo
or
imul
push
mov
add
mov
mov
inc
or
or
add
insl
sub
sbb
decl
pop
adc
lock
insb
jbe
shlb
xor
mov
cwtl
xchg
push
adc
jg
add
sbb
idivl
add
and
daa
adc
outsl
sti
mov
adc
or
das
push
sub
sbb
fisubrl
adc
and
or
mov
xor
or
and
add
mov
dec
push
or
mov
mov
and
insl
jae
jno
or
add
dec
cmp
adc
cmp
pop
mov
bound
popa
or
adc
les
mov
imul
adc
lods
sbb
mov
or
add
pop
insb
outsl
add
xchg
cwtl
pusha
outsl
push
iret
std
testl
loope
jae
add
sbb
inc
xor
add
push
adc
pop
add
lods
mov
sbb
add
mov
int3
or
or
or
and
insb
outsl
ja
sti
pusha
adc
data16
xor
cmp
das
jne
xor
adc
or
add
adc
and
mov
out
cmp
sub
xor
inc
mov
gs
sub
and
or
sub
jb
roll
or
test
mov
stos
fildl
sub
mov
dec
push
xor
in
lods
test
stc
lea
arpl
pop
jge
sbb
add
insl
or
and
pop
adc
mov
std
or
cvtps2pi
das
pop
imul
mov
popf
dec
adc
dec
lods
mov
fwait
xor
sbb
mov
jne
rolb
adc
lea
fwait
and
fisubs
pop
test
outsb
xor
neg
mov
lods
pusha
fcmovnu
scas
arpl
adc
in
dec
sti
imul
dec
xor
push
and
cmp
sbb
sarl
movsl
popf
das
and
fistpl
lods
lea
cmp
sbb
pusha
adc
jecxz
inc
jnp
fldenv
adc
adc
cmp
pop
rolb
add
fldenv
leave
pop
fiaddl
push
add
xor
mov
jecxz
jmp
or
sub
and
scas
mov
fisttpll
mov
stc
cmp
adc
jno
sbb
sbb
xor
mov
or
adc
xchg
mov
adc
lea
sub
mov
rolb
jl
sbb
mov
cmpl
xor
jb
adc
adc
or
addb
and
add
xor
and
es
aam
add
adc
sbb
faddl
shrl
mov
daa
les
in
add
adc
ljmp
dec
imul
sarl
sub
xor
and
add
pop
imul
xor
push
add
and
sub
imul
sub
cmp
xor
sbb
or
push
push
cmp
or
in
jbe
push
xor
pop
add
xor
sbb
pop
ret
ds
xor
push
pop
and
and
mov
fisubl
and
sbb
pop
inc
and
add
pusha
push
sbb
sbb
sub
mov
push
inc
sbb
into
cs
adc
test
add
clc
fsubl
push
or
ss
adc
es
rcl
mov
inc
aad
sbb
out
jle
popa
shr
pop
cmp
push
enter
dec
mov
add
mov
roll
inc
dec
dec
push
mov
insb
fiaddl
insl
or
add
popa
in
dec
lock
xchg
push
loopne
mov
mov
cmp
mov
jbe
jae
fs
pop
mov
push
mov
insb
and
loope
push
jns
ds
mov
add
or
jle
dec
js
cmpsb
inc
or
push
dec
xchg
incl
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
xchg
inc
add
add
