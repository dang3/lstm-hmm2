divb
in
mov
mov
mov
inc
add
add
ror
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
inc
cld
add
jmp
test
jne
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
inc
push
adc
add
inc
pop
push
fcmovnb
les
mov
push
mov
xor
pop
mov
mov
mov
call
pushl
fwait
mov
mov
or
data16
sbbl
sarl
push
lahf
add
xchg
notl
andl
mov
push
sub
mov
hlt
cs
addl
add
sbb
lock
fcomi
sub
dec
shlb
in
or
mov
mov
xor
hlt
or
pop
cmpsl
push
repnz
in
cmpsb
cmp
lea
fwait
popa
xor
push
call
sub
add
out
push
sbb
push
insl
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
fdivrs
xchg
sub
ret
test
push
xchg
mov
call
addb
das
xor
push
dec
and
add
dec
inc
pop
xlat
push
sbb
test
or
sbb
fildl
scas
bound
sahf
add
stos
lcall
push
fst
popf
jp
fdivrs
fs
mov
jge
jl
add
pop
add
mov
jge
push
push
sub
jnp
push
dec
pop
push
insl
sbb
add
loopne
lds
iret
bound
das
pop
mov
pop
pop
ljmp
mov
mov
cmp
or
jge
lcall
add
mov
mov
xor
mov
inc
sub
pop
ret
arpl
sarl
dec
lock
sar
pop
jo
popf
pop
inc
sub
inc
clc
sub
enter
inc
add
in
orb
jmp
fs
pop
or
movsl
push
xorl
sbb
in
incl
adc
jg
mov
adc
add
or
dec
cmp
add
cs
movsl
add
jmp
enter
push
jmp
dec
sub
push
mov
sar
imul
cld
aad
jge
ja
adc
pop
dec
clc
add
push
fimull
ret
pop
in
inc
andl
sahf
leave
les
pushf
add
loop
lds
js
mov
mov
cmpl
or
push
fucomp
sub
cmp
jge
dec
cmp
add
or
add
pop
cltd
sub
shr
enter
mov
or
inc
ret
cwtl
and
push
test
cmp
jl
cmp
jne
mov
incb
add
xor
jbe
mov
adcl
rolb
inc
add
lea
add
adc
lea
xorl
xor
insl
int3
pop
hlt
into
mov
aam
sbb
jnp
sub
push
cmp
cmp
cmpsl
mov
pop
adc
cld
fsubrs
mov
sbb
jmp
lock
or
test
jle
cmp
mov
inc
xor
rcrl
ret
or
inc
icebp
and
sbbl
push
push
xchg
jno
sbb
aas
adc
jle
jmp
loope
mov
inc
sbb
inc
push
pop
sub
xchg
or
cli
insb
andl
fucom
fadds
ret
and
adcb
inc
xor
and
inc
enter
push
inc
push
orb
xchg
mov
push
xor
push
push
hlt
inc
push
sbb
out
cmp
jle
mov
loop
or
out
add
push
mov
mov
or
and
cmp
sub
pop
lret
or
addr16
add
jb,pt
pop
add
xchg
and
enter
ret
lea
mov
cmp
je
cmp
aaa
cmp
clc
push
push
push
jg
xor
rcrb
ja
jmp
xchg
rolb
call
insb
or
cmpsb
imul
cld
pop
cmpsb
out
cmp
jo
inc
sub
adc
add
out
ret
aad
aaa
fcompl
loopne
loope
mov
or
pop
lods
cli
or
or
cmp
push
mov
int
in
decl
jne
push
push
push
push
andb
js
push
mov
mov
or
push
lods
push
sahf
pusha
pop
pop
push
imulb
sarb
jne
cmp
in
mov
and
add
nop
adc
into
dec
jne
scas
cld
stc
out
mov
adc
mov
out
fisttps
lods
fstpt
stc
jae
mov
sub
mov
xlat
cmpsb
std
jns
jnp
mov
clc
cwtl
push
jge
in
adc
sbb
lret
in
or
and
dec
lahf
in
dec
out
push
icebp
cmpsb
ffreep
ja
stos
or
push
mov
lock
pop
and
jl
movl
or
add
push
lea
dec
jnp
and
push
xor
js
pop
xchg
insb
sahf
dec
push
out
cmp
add
imul
push
add
inc
ret
imul
dec
inc
or
clc
push
dec
dec
xchg
push
aas
int3
popf
jns
cli
out
lea
push
add
push
mov
leave
loope
loope
sub
mov
loop
push
mov
mov
loopne
scas
push
bound
mov
in
add
push
jmp
cmp
loope
aas
add
pusha
cmp
je
xorl
mov
or
jne
imul
cmpsb
mov
pop
mov
cltd
leave
fadds
imul
insl
push
jb
cmp
test
ficomps
and
pop
ds
loope
test
cmpsb
in
out
aam
ja
push
pop
dec
or
movsl
mov
jle
pop
shll
mov
jbe
mov
cmp
adc
enter
jge
xor
iret
mov
or
inc
sbb
in
fmull
movsbl
sub
add
or
sub
mov
push
ret
push
adc
jle
mov
mov
push
imul
jne
add
sbb
int
lock
push
xchg
and
sbb
mov
jl
sub
push
int3
les
xor
aad
add
lcall
adc
sub
adc
mov
inc
aaa
push
lock
inc
lods
push
inc
and
mov
xlat
sbb
je
dec
je
push
adc
aam
fsubrp
or
adc
inc
shll
mov
lret
or
nop
pop
fs
sahf
adc
push
mov
xor
aad
call
mov
push
mov
sub
push
cmp
mov
xor
fcomps
mov
inc
and
mov
aam
and
mov
cmp
pop
cmc
andl
sbb
test
xchg
mov
test
mov
stos
jae
out
test
mov
ss
roll
or
scas
aad
mov
add
jnp
cmovge
shr
sbb
lret
push
push
movsl
or
or
movzbl
js
and
adc
popa
add
retw
push
in
dec
call
jl
pushl
ljmp
shrb
andb
testl
test
lea
pop
fldcw
mov
notb
add
xchg
pop
movsl
push
jle
push
fcomps
popf
sub
adcl
clc
repnz
sub
adc
cwtl
mov
sbb
or
out
add
sbb
adc
inc
shll
pop
sbb
and
sub
insl
sbbl
jl
ret
pop
loopne
mov
adc
test
out
add
adc
mov
pandn
mov
sub
or
fnstsw
mov
dec
jle
mov
push
pop
mov
nop
cmp
les
in
repnz
or
into
shl
push
or
mov
je
inc
mov
xor
scas
mov
or
push
xor
mov
ficomps
sub
add
inc
repnz
push
adc
or
jmp
push
xchg
fdivrs
out
cwtl
dec
adc
adc
and
cmp
adc
lahf
xor
lea
adc
negb
xlat
push
push
or
mov
xor
dec
sub
dec
bnd
xchg
inc
subl
or
xchg
xor
xchg
sub
pop
sbb
add
pop
mov
in
or
out
scas
mov
ljmp
push
and
out
mov
xor
mov
push
cwtl
sarl
cmp
jne
push
pop
movsl
push
cmp
or
inc
pop
or
in
or
lea
mov
in
inc
loopne
jp
add
in
mov
addl
push
pop
imul
pushl
imul
inc
adc
loope
pop
orl
xchg
xor
jo
cmp
les
fstl
sbb
inc
pop
pop
add
cmp
xchg
pushf
cmp
xor
mov
jnp
aam
jge
decl
inc
movb
je
out
out
add
in
xchg
lock
lock
mov
faddp
add
aam
imul
cmpsl
mov
je
mov
cmpl
icebp
loopne
adc
adc
xchg
in
push
and
push
loopne
mov
or
and
add
add
fldt
pop
sub
testb
int3
in
jnp
mov
and
test
add
icebp
push
arpl
xor
push
cmc
les
je
filds
jp
test
mov
pop
in
push
and
fistpl
fistpl
in
ffreep
jae
ret
je
push
out
and
mov
sahf
inc
and
mov
mov
mov
cwtl
cwtl
xchg
out
lret
lods
mov
mov
push
xor
mov
nop
xchg
lock
inc
pop
sub
nop
add
xchg
add
adc
lods
or
lods
lods
add
mov
mov
nop
sub
dec
pop
add
pop
adc
inc
jns
jecxz
outsl
mov
mov
mov
popf
popf
negb
adc
sub
cld
push
mov
lcall
outsl
stc
push
fcoml
dec
out
xor
out
sti
loopne
dec
imul
ss
pop
push
imul
fidivl
xchg
shlb
adc
enter
adc
movsb
leave
jae
pop
rclb
cmpsb
dec
rol
les
pushf
pushf
clc
cmpsb
in
in
pop
mov
xchg
sbb
leave
xchg
xchg
in
int3
leave
xchg
cmp
sbb
int3
fs
aaa
clc
arpl
ret
sbb
inc
sub
enter
fwait
fs
sahf
sbb
shrb
inc
xor
mov
cmp
les
in
mov
pop
test
dec
inc
mov
jle
data16
out
pop
pusha
xchg
and
mov
mov
cmp
dec
pop
mov
pop
pop
testl
cwtl
arpl
test
shrb
inc
inc
jo
pushf
push
sbb
insb
sub
xchg
out
sbb
shlb
jne
mov
loope
test
mov
imul
push
hlt
push
addb
sub
mov
push
xor
sbb
rolb
add
push
add
or
enter
lock
imul
pop
or
jle
inc
push
jl
insb
add
in
andb
pop
mov
nop
and
outsb
and
fisttpll
movsb
and
push
dec
punpckhwd
aaa
adc
dec
scas
je
sti
or
push
divl
test
clc
out
pop
test
sub
fs
shll
pop
sbb
and
insl
or
add
popa
cmpsb
xor
lret
xchg
mov
xchg
or
std
and
pushf
push
adc
adc
loope,pt
mov
mov
or
jl
or
lea
push
leave
aad
lock
or
push
jmp
push
fldenv
pop
jmp
adc
adc
jle
imul
test
scas
cmc
inc
or
adc
add
ror
sbb
sub
or
sbb
mov
push
push
sbb
daa
sbb
lea
or
or
xor
push
lock
mov
in
lret
adcl
fdivs
aaa
adc
test
adc
inc
adc
leave
orb
jno
shll
loope
add
sbb
repnz
into
adc
pushf
cmc
ss
adc
push
sbb
xchg
mov
push
cmpsl
add
add
cmc
gs
cmpb
rolb
fs
lret
insl
or
add
pop
push
lock
movsl
mov
mov
fistpl
jne
loopne
add
add
stc
shr
push
ds
push
sbb
push
in
push
dec
pop
push
out
cwtl
sar
mov
lret
adc
cmp
pop
add
push
sahf
les
rolb
and
nopl
xchg
je
stc
ret
push
scas
xor
testl
sbb
and
clc
add
scas
std
fisttps
add
rclb
cmp
or
pop
push
adc
xchg
mov
pushw
mov
inc
jb
sub
and
xchg
addb
mov
add
sbb
or
testl
push
push
call
mov
xorb
cld
adc
and
fstpt
sbb
push
test
hlt
je
push
push
enter
pop
ljmp
push
or
mov
movsl
lock
add
cld
int3
inc
sbb
clc
adc
std
mov
mov
jne
or
add
sahf
sub
dec
push
push
cmp
add
push
dec
add
and
mov
leave
adc
and
bound
adc
dec
xlat
and
pop
sub
pusha
jo
mov
and
scas
movsb
std
daa
cmp
mulb
sub
add
incb
xchg
in
js
push
cmp
and
sbb
fsubrs
int
icebp
aam
stc
scas
sub
pop
and
push
sub
push
ljmp
sub
push
test
pop
pusha
cwtl
xorl
xor
ret
test
movsb
ljmp
outsb
sti
in
or
stos
add
imul
xchg
inc
pop
add
sbb
cmp
fadds
rorb
rclb
lods
sub
and
aaa
sub
stos
mov
mov
aas
loope
leave
pop
mov
inc
sbb
xchg
inc
cmp
test
cmp
lret
push
test
cmp
outsl
xchg
ficomps
mov
test
add
jl
mov
or
sbb
mov
je
lock
push
mov
sti
lahf
mov
mov
mov
cmp
mov
push
add
rolb
loopne
sahf
xor
cmp
out
jmp
mov
ljmp
sub
mov
jg
stos
dec
mov
jo
pop
enter
enter
xchg
idivl
fadds
inc
das
daa
pop
dec
mov
cmp
insl
sbb
xor
xchg
mov
testb
inc
xchg
inc
xchg
addl
mov
xor
out
sbb
sub
cmp
inc
cmp
gs
and
testb
xor
stc
nop
pushf
or
pop
hlt
xor
bound
xor
push
adc
sbb
add
push
orl
repnz
adc
pop
rcrl
cmp
cmp
sbb
and
xor
add
or
and
mov
and
hlt
push
stos
clc
lret
mov
xchg
js
bound
in
adc
sbb
jns,pt
cwtl
dec
mov
push
adc
mov
imull
test
pop
pusha
and
push
pushl
clc
dec
push
inc
xchg
out
sub
scas
mov
and
sbb
mov
xor
ret
push
je
ss
mov
sub
adc
adcb
cmpl
push
push
lea
pop
cmp
mov
add
mov
adc
fiadds
adc
add
cltd
sub
mov
lock
sub
movsl
push
mov
test
or
cmpb
cmp
jne
xor
movb
mov
loopne
jmp
cmp
push
mov
mov
pusha
cmp
add
jle
or
jge
mov
bswap
sub
add
adc
xchg
adc
loopne
adc
mov
outsb
outsl
push
add
add
add
scas
ret
inc
repz
cmpsl
adc
outsl
clc
cmpb
push
push
adc
test
xchg
add
aam
lods
push
or
jne
or
sub
cmp
adc
dec
cmpl
call
cmpsl
lds
or
into
loopne
adcb
clc
or
movsb
mov
mov
cmp
mov
das
xchg
setne
or
jmp
mov
mov
pop
negb
adc
pop
out
jne
or
pop
in
out
je
subb
push
in
sti
loope
fsub
add
ret
pop
inc
das
mov
xor
loopne
mov
pop
in
faddl
sbb
loopne
and
push
xchg
int
xchg
out
cmpsb
push
jne
or
ret
fcoml
inc
shrb
mov
pop
mov
mov
not
add
incb
cs
lahf
je
and
sarl
insb
xchg
inc
in
sbb
mov
loop
out
inc
out
inc
je
adc
xchg
push
add
imul
xchg
mov
mov
mov
xor
lock
test
jno
mov
leave
jmp
sbb
dec
sub
jecxz
mov
clc
jg
mov
or
aad
fwait
add
or
enter
inc
int3
cmp
mov
or
jle
push
add
les
mov
mov
cmp
pusha
cli
test
movzwl
jnp
or
jge
push
dec
dec
je
sub
jmp
jge
imul
push
mov
mov
ret
jmp
push
xorb
int3
int3
ror
sti
mov
dec
xor
adc
dec
mov
push
pop
push
add
loope
insb
fs
ljmp
dec
jae
ljmp
lock
sbb
mov
xor
inc
mov
sarl
push
push
pop
or
cmp
in
sub
aaa
popa
cmp
jle
cmpsb
jae
ret
ret
and
sbb
pop
mov
add
cld
fstl
mov
pusha
ds
mov
ja
add
cmp
pop
mov
mov
push
test
mov
cwtl
xor
mov
testb
push
mov
sub
outsb
loopne
xor
xor
push
add
push
jns
inc
fbld
jne
ds
jecxz
xchg
loopne
xchg
in
shrb
fcoml
jne
jo
jo
sti
or
push
adc
cmc
or
in
jb
out
insl
inc
push
pop
in
stos
add
mov
xor
pop
ficoms
js
bound
add
mov
jne
fisttpl
ss
add
jns
add
int3
mov
bound
adc
dec
mov
fmul
ds
ds
inc
cmp
std
xchg
xchg
mov
and
call
mov
mov
nop
es
dec
call
add
and
daa
jo
fmull
jle
faddl
mov
mov
push
loopne
pop
xchg
adc
scas
cld
loopne
andb
addr16
ljmp
in
call
xor
out
and
aam
enter
or
rcrb
push
cmove
and
add
loopne
aaa
enter
mov
loopne
in
sub
in
mov
dec
add
dec
rcll
fidivrl
scas
dec
cmpsb
jbe
mov
movsl
push
pusha
insl
mov
mov
scas
jecxz
les
in
add
fisttps
arpl
inc
mov
and
clc
dec
push
adcl
setle
jb
ds
test
push
push
cmpsb
sbb
rcll
mov
jp
je
fs
iret
or
ffree
add
popl
repnz
in
call
push
inc
fisttpl
mov
loopne
icebp
jge
repz
mov
or
push
add
shll
mov
and
pop
mov
adc
or
dec
fisttpl
movhps
sub
push
nop
mov
push
and
mov
adc
and
sub
rolb
sbb
mov
popf
dec
mov
adc
int3
pop
pop
pop
mov
cmp
adc
aam
fcoms
fcompl
or
mov
insl
shlb
mov
jbe
je
pushl
call
mov
and
shr
movzbl
push
adc
push
ret
push
sbb
icebp
aaa
xchg
dec
cmc
mov
imul
outsl
mov
pop
jae
xchg
cmpsl
jle
sbb
popf
cmp
xchg
fdivrs
xchg
add
sbb
fidivs
sub
sbb
xchg
xor
xchg
push
xor
data16
imull
je
push
add
mov
mov
cli
cmp
out
xor
loop
add
jle
push
cli
dec
enter
inc
push
push
mov
cmp
jg
mov
lret
clc
inc
adc
aaa
dec
enter
inc
add
ret
pop
xchg
cmp
mov
sbb
push
enter
call
aas
jb
sbb
mov
ds
ss
push
sbb
xor
aaa
outsb
sub
fsubrl
addl
in
sub
jl
mov
push
jne
sbb
sub
sbb
push
fcompl
pop
jmp
mov
push
std
add
inc
ret
outsb
insl
in
and
sbb
ss
shlb
mov
add
sub
jne
fmull
imul
fmul
test
js
xor
mov
les
cmp
jae
mov
add
push
inc
hlt
lea
ja
dec
test
in
pop
push
call
push
mov
je
insb
rcr
add
fiaddl
pop
std
or
mov
cmpsb
lock
imul
add
loopne
fnsave
jl
in
cmp
jg
aam
subl
sbb
sbb
roll
popf
jecxz
test
shll
into
popa
nop
add
add
fisttpl
pop
xor
add
fwait
adc
cli
lea
ljmp
xor
testb
push
test
adc
cmp
pop
xor
jo
mov
insl
fcmove
add
mov
mov
addl
aam
mov
test
lahf
inc
js
adc
adcb
out
test
mov
pop
pop
push
inc
pop
std
mov
leave
js
inc
dec
hlt
jg
js
mov
hlt
or
je
inc
mov
shrl
pop
movb
daa
push
inc
inc
push
xchg
add
xor
add
inc
add
push
jno
mov
push
xor
ret
jl
inc
mov
fmuls
xchg
daa
rorl
lock
jns
idiv
cmp
jl
repz
sahf
fldpi
push
or
ljmp
adc
ret
pop
xor
xchg
popa
movl
jae
adc
mov
mov
pop
adc
or
xchg
bound
les
mov
mov
mov
sarl
mov
testl
and
je
aaa
mov
xor
mov
ret
je
mov
js
mov
jbe
leave
mov
pusha
mov
push
aaa
push
mov
sub
mov
js
or
popa
mov
adc
add
inc
and
sti
and
dec
call
jl
xor
push
adc
adc
inc
popf
mov
mov
pextrw
or
fadd
je
push
and
movb
xor
xchg
xor
nop
fcmovne
jae
dec
dec
sbb
jb
jnp
mov
sbb
adcb
xchg
jmp
adc
jb
mov
imulb
clc
jne
cmp
je
jbe
movb
xor
mov
or
and
sbb
mov
push
mov
add
data16
xor
out
test
sbb
or
jo
daa
inc
insl
xchg
sarb
cmp
xchg
or
mov
mov
adc
insb
jp
or
test
imul
push
push
adc
js,pt
push
movl
lods
xor
inc
push
ss
or
or
push
mov
push
lods
subb
sbbl
push
push
roll
js
push
leave
cmp
daa
js
or
inc
lret
jmp
mov
mov
add
dec
sar
fldpi
sahf
fbstp
nop
dec
sub
push
cmp
add
incl
add
ficoms
test
push
lods
clc
mov
jb
lret
push
enter
add
inc
jo
pop
push
test
inc
mov
dec
cmp
fdiv
call
pop
hlt
sub
or
std
mov
lcall
je
scas
mov
divb
shrb
enter
orl
ret
insb
cld
cmp
lea
or
add
push
test
adcb
mov
adc
int
add
or
faddl
mov
push
jno
push
ret
sub
xor
popf
dec
add
cmp
inc
add
mov
insl
mov
xlat
xchg
adc
shl
mov
cwtl
pop
adc
jnp
and
fs
cmp
dec
add
xor
mov
jle,pt
or
and
sbb
adc
fdivrs
push
das
push
cmp
andl
shll
inc
or
imul
lods
sub
pop
or
sub
jb
add
jns
xchg
rolb
xor
or
xchg
and
aaa
insl
add
and
movsb
push
in
ss
jno
sub
pop
enter
sub
and
jno
shlb
xlat
dec
mov
sbb
stc
or
scas
popf
call
cltd
mov
movsl
jb
fsubrs
lret
hlt
jno
add
lods
mov
cmpsl
in
mov
inc
push
and
push
or
adc
lods
jno
pusha
cmp
mov
mov
dec
xchg
pop
clc
mov
push
repz
sbb
sub
mov
pop
pop
mov
shr
push
loopne
mov
xchg
sbb
inc
jmp
push
jmp
push
and
xor
pop
and
ljmp
in
xor
push
jne
outsl
and
mov
mov
shll
enter
adc
scas
icebp
pop
mov
test
dec
push
push
xchg
fcoms
xchg
bound
sub
fldl
xchg
add
inc
out
mov
in
inc
xor
into
lcall
mov
movsb
inc
pop
mov
jmp
push
loop
adc
jbe
xchg
inc
dec
add
mov
sub
loope
lret
cmp
mov
nop
cmpb
lock
test
cwtl
gs
mov
scas
and
add
leave
jae
cmp
lret
adc
mov
dec
ljmp
dec
adc
fidivl
push
lea
mov
add
iret
dec
clc
imul
and
adc
or
sbb
pop
xchg
lods
mov
mov
iret
mov
add
int3
cmp
sbb
pusha
fldt
stos
jns
inc
pop
pop
dec
mov
pop
push
push
in
push
pop
adc
lea
fisttpll
xchg
or
cmp
in
adc
pop
inc
sbb
cmp
sbb
sbb
sbb
aaa
add
pusha
inc
cltd
push
jmp
pop
cmp
shll
or
xchg
push
cmp
push
mov
sbb
enter
test
dec
mov
adc
shrb
cmp
out
fwait
popf
cmpl
cmp
push
sbbb
in
sbb
clc
sub
ret
jne
clc
mov
add
cmp
mov
jle
push
adc
pop
inc
outsb
stos
sbb
mov
ja
test
sub
pop
js
add
popa
pop
sbb
push
jbe
es
pop
or
jmp
cmp
jg
mov
lret
pop
mov
jne
sub
dec
je
ret
or
sub
test
ret
sbb
dec
ss
hlt
std
std
or
dec
jl
adc
mov
shlw
dec
aaa
push
or
xchg
loopne
dec
adc
pop
jne
lods
xor
mov
jmp
push
add
push
mov
xor
push
mov
push
inc
xchg
adc
fildl
sub
mov
pop
push
test
mov
icebp
xchg
xchg
pop
sbb
dec
mov
shl
loope
xchg
js
and
push
or
add
daa
pop
pushl
shlb
sbb
rcrb
dec
lea
adc
mov
push
sub
mov
sarb
jmp
cmp
je
cmp
pop
imul
lods
shlb
adc
cli
fucomip
out
mov
sbb
fstpl
imul
jmp
sbb
and
jmp
and
jmp
xchg
mov
pop
scas
test
rcrl
sahf
out
bound
and
jns
out
test
jns
pop
push
aas
aaa
cltd
inc
sbb
mov
mov
add
pushw
and
dec
cmc
scas
shrl
insb
fstl
lea
enter
adc
sub
in
jecxz
mov
fmuls
mov
popa
movb
in
cwtl
inc
lahf
push
push
or
xchg
dec
sub
ficoms
ljmp
inc
push
mov
mov
adc
push
lea
push
push
push
push
add
push
lea
sbb
dec
cmp
jmp
inc
cmpsb
add
dec
mov
inc
test
cltd
imul
lahf
sahf
mov
push
inc
enter
lea
movl
push
xor
add
imul
adc
inc
pop
inc
and
jns
jecxz
ficoml
mov
dec
ficoml
jmp
lods
popa
cmc
dec
pop
push
push
loopne
jl
inc
xor
add
lods
mov
or
cld
xchg
cld
adcl
or
lods
pushf
arpl
add
aas
lret
inc
sub
stos
xorl
push
loopne
pushf
push
push
xchg
jp
xchg
adc
jno
jle
ss
and
pop
iret
sub
and
mov
cmp
adc
negl
ss
or
testl
idivl
sarb
mov
pusha
add
xor
dec
and
ret
adc
inc
repz
xchg
pop
daa
sub
adc
rcrb
call
call
jno
adc
xor
loope
xorb
sarb
push
loop
xor
mov
test
aas
mov
xor
pop
sub
mov
mov
scas
aam
cmp
push
push
push
cmp
js
cmp
fnstenv
icebp
pushf
jl
sbb
pop
dec
pop
rolb
mov
lea
pop
pop
sub
jl
lcall
push
jg
xor
adc
lret
adc
fisubs
xchg
pop
stos
clc
push
add
push
aam
das
test
mov
in
clc
loop
popa
and
jne
int3
push
imul
aam
jl
mov
xchg
or
add
jle
outsb
pop
lock
sbb
inc
and
push
push
add
cmp
sub
stc
fdivr
ret
xchg
ret
repz
adcb
add
xor
adc
jne
push
sub
xor
pop
clc
or
adc
jo
xor
mov
iret
je
lea
push
loopne
add
mov
aaa
lret
jo
or
lcall
mov
jne
call
push
or
add
dec
xor
sub
clc
mov
rcll
es
shrb
les
rcl
mov
ficomps
dec
loopne
or
mov
push
adc
dec
lea
ffreep
cli
push
dec
push
push
sub
cmp
fisubrs
sub
sub
in
cmp
jmp
sub
cwtl
push
sub
in
cmp
push
mov
insl
fstpt
add
mov
inc
adc
dec
cmp
dec
and
inc
shll
dec
insb
add
cmp
sub
mov
js
mov
push
xchg
cmpsb
adc
pop
inc
sbb
xchg
fcomps
jns
cs
lock
sub
jno
fistps
cmp
dec
inc
and
add
jp
dec
dec
mov
lock
bswap
in
and
dec
dec
cmp
pop
mov
adc
push
push
fdivs
mov
shrb
lock
cmpsb
push
fimull
leave
and
push
push
inc
pop
mov
sub
fbstp
sbb
push
aaa
enter
cmp
ljmp
mov
adc
sub
aaa
add
je
push
mov
or
aaa
and
es
inc
test
dec
cld
adc
pop
xchg
jo
pop
jo,pt
outsb
stos
and
rcll
in
adcl
sbb
ljmp
pop
ret
jl
mov
mov
adc
adc
ja
push
jo
int
sbb
push
cs
push
int
xchg
lds
xchg
cwtl
popf
cld
adc
rcrl
dec
mov
std
push
les
add
int3
ss
cli
xor
cmp
je
cmp
mov
pushf
in
sti
sbb
repz
pop
add
and
xchg
inc
lret
mov
pusha
inc
ja
and
shll
loop
test
xor
aas
add
sbb
push
jne
mov
std
test
jmp
or
pop
repz
xor
push
fs
movsl
fldz
xor
push
mov
movb
test
lock
cld
aas
mov
cmpsl
mov
xchg
or
sub
add
sbb
lock
hlt
mov
adc
jge
fisttpll
mov
mov
push
cmpsl
popf
scas
dec
or
adcb
fsubl
enter
leave
push
adc
fcoml
push
test
or
sub
push
adc
enter
jp
rcrl
jp
push
imulb
mov
mov
xlat
cmpsl
shlb
add
add
mov
mov
loope
inc
sub
xor
cwtl
imul
or
into
sbb
push
push
pusha
push
mov
lea
and
mov
stc
mov
pop
push
sbb
sbb
cmp
mov
push
lret
jl
mov
andb
jbe
movsb
pop
sbb
xor
in
adc
and
jge
int
push
rcrb
mov
das
test
sub
sub
jmp
inc
fldl
ret
cmc
fmull
lods
cmpb
int3
dec
ret
push
push
push
add
mov
movsl
mov
add
popf
sbb
inc
xchg
cli
popf
cmp
dec
inc
fiadds
out
mov
sti
add
lods
int3
sub
jno
insb
inc
idivl
lcall
ds
sbb
and
addr16
sbb
pushf
outsb
int
adc
mov
fmuls
or
call
add
repz
or
adc
ss
test
jmp
mov
pop
xor
and
rorl
pop
test
adc
sub
cmpb
loop
jg
xor
je
push
pop
cmp
push
mov
push
xor
jmp
ljmp
sub
sub
push
push
jnp
iret
decb
adc
xor
and
pusha
aad
mov
pop
mov
inc
lock
add
sbb
push
cli
or
push
icebp
jo
pop
gs
lcall
pop
xor
jnp,pn
push
call
jmp
fsts
popa
push
sbb
xchg
inc
sub
fbld
adc
xor
sbb
jo
daa
out
jo
sbb
out
shrb
add
adc
inc
xchg
pop
sbb
mov
js
push
jge
orl
pop
jl
mov
cltd
mov
mov
cmp
push
or
dec
adc
sbb
sub
dec
push
add
sbb
jge
mov
ljmp
idiv
push
mov
mov
mov
aaa
outsb
lea
xor
idiv
cs
mov
add
jg
mov
mov
xor
jo
or
dec
mov
mov
xlat
dec
cmc
inc
xchg
or
out
inc
cmp
xchg
add
sbb
fstpl
push
pop
insb
xor
clc
arpl
sub
sub
clc
je
popf
hlt
pop
add
lea
cltd
idivl
fistl
jp
xor
mov
daa
pusha
js
or
popa
jg
fs
or
xchg
sub
mov
test
movsl
fisubrl
jbe
lahf
xor
not
lahf
sbb
dec
int3
loope
call
jl
outsb
sti
pop
xchg
sub
cmp
or
or
js
decl
out
insb
mov
hlt
testl
test
jns
faddl
xor
lock
sub
xor
mov
fdivrp
mov
sub
mov
icebp
xchg
out
mov
test
int3
mov
mov
out
push
pop
cmpsb
inc
idivb
xchg
pop
jl
jmp
cmp
or
mov
and
clc
fidivl
jmp
add
movsl
shrl
cli
aaa
out
mov
push
pop
mov
pop
jne
loopnew
jg
pop
movb
push
or
loope
dec
outsb
mov
inc
pop
mov
decb
rcll
stos
movsl
aad
shlb
inc
hlt
adc
push
ds
adc
je
addr16
push
mov
sbb
bound
mov
and
jne
pop
jmp
out
aad
xchg
loopne
bound
and
sub
pop
pop
into
pop
leave
pop
clc
inc
movsl
mov
cwtl
xchg
adc
pusha
stos
sub
shlb
lods
add
add
imul
xor
sbb
mov
xor
fdivs
fcompl
sbb
loope
pop
iret
shll
imul
jns
aaa
jnp
and
cmp
loope
jne
sti
mov
push
std
lea
adc
push
fldenv
pop
leave
pop
xor
loope
push
movsb
dec
jne
loopne
push
mov
xchg
push
pushf
lea
push
mov
push
adc
mov
lea
add
or
fnstsw
push
rcll
or
add
xchg
imul
jecxz
dec
adc
dec
imul
andl
push
setp
sbb
or
push
add
lcall
adc
popa
add
push
and
roll
scas
sbb
leave
add
push
sbb
lahf
sub
sbb
fs
and
int3
pop
and
into
mov
pop
in
out
pop
cmpl
dec
sbb
xchg
orb
mov
and
inc
cli
inc
repnz
inc
push
roll
cmp
das
sbb
leave
or
and
xor
add
mov
ss
pusha
dec
cmp
pop
scas
xchg
pop
adc
fdiv
inc
cmp
aaa
add
add
push
mov
add
mov
clc
setb
test
rorb
outsl
in
adc
xor
dec
adc
data16
pop
or
aaa
mov
fmull
push
fldenv
negl
gs
add
imul
mov
ss
mov
hlt
jno
cmpsl
mov
call
sub
lods
fwait
scas
sbb
rcl
scas
jge
fldt
inc
scas
xlat
das
push
jp
push
inc
mov
int
add
in
arpl
rorb
push
js
lods
test
sbb
ja
push
mov
cli
out
adc
clc
mov
sub
pusha
sbb
mov
sar
bound
xchg
add
sub
jecxz
int
add
fstpt
jmp
test
mov
xchg
adc
xor
mov
movl
dec
cld
pop
loop
add
cmp
cmc
add
out
insb
sbb
pop
pop
dec
push
or
nop
and
xchg
pop
das
inc
xor
shrb
sbb
xchg
pop
leave
mov
push
add
and
inc
in
push
dec
jp
push
mov
std
int3
sti
mov
add
mov
push
push
and
int
pusha
pop
add
xchg
jne
add
lret
in
les
call
xchg
test
insb
push
push
ror
or
add
imul
les
pop
fmuls
jo
rcrl
dec
lcall
sbb
mov
insb
aam
inc
xlat
or
aam
add
aaa
pushl
dec
push
movsb
std
add
push
cmp
les
test
fcoml
rorb
rcrl
sub
test
add
test
cmp
jle
and
mov
lret
call
sub
and
push
mov
and
push
mov
mov
das
jno
adc
loopne
push
scas
push
notb
mov
add
and
cmp
push
push
mov
outsb
ljmp
jp
push
hlt
push
pop
push
jb
xchg
push
or
push
add
push
mov
pop
push
push
add
adc
sti
pushf
inc
call
mov
loope
pop
sbb
fimuls
lods
add
xchg
clc
jmp
mov
push
cmp
enter
and
or
mov
and
adcb
push
adc
push
xchg
pop
pushl
push
cmp
mov
pop
fadds
cmp
aas
mov
xor
xor
ret
je
lahf
mov
mov
test
je
std
ja
or
loop
dec
mov
jmp
dec
mov
sub
pop
dec
insb
js
push
mov
mov
jae
dec
add
ss
pusha
shlb
mov
int3
xchg
sub
mov
sub
lcall
cmp
jge
mov
mov
mov
cmp
sbbb
jl
or
cmp
jle
call
jne
inc
mov
push
iret
add
fsubr
sbb
sarb
fcomps
or
je
insb
nop
mov
aam
jne
and
sbb
push
adc
xor
enter
dec
dec
mov
cmp
in
mov
adc
in
jo
sub
inc
sete
adc
loope
dec
sbb
mov
xorb
push
xor
outsl
or
push
xchg
stos
push
or
sti
xchg
fdecstp
cmpl
dec
out
mov
mov
jge
add
rclb
enter
sub
or
mov
scas
push
bnd
imul
xchg
adc
shl
dec
add
sbb
fcompl
add
pop
loop
cmp
add
push
js
das
sbb
pop
cmp
lods
pop
pop
jl
pop
aaa
adc
push
dec
lock
add
jmp
ret
movsl
inc
outsl
xor
adcb
xor
mov
push
sbb
jl
adc
movsb
bound
cld
test
sub
mov
out
fcoms
ss
inc
ror
rcr
mov
push
jmp
test
mov
xchg
mov
add
mov
ret
sti
add
jmp
mov
push
or
and
mov
mov
jne
repnz
xchg
in
sbb
pop
pop
or
pop
adc
clc
mov
int
andl
ret
jmp
lock
xchg
or
in
repz
in
push
lret
adc
dec
xor
fdiv
in
and
mov
xorl
cmp
arpl
xchg
cmpsb
sub
adc
add
and
lock
loop
dec
jle
mov
mov
add
xchg
jle
jge
or
add
adc
shlb
inc
jge
xchg
popf
xchg
or
sbb
adc
in
xor
xchg
les
mov
xchg
daa
push
test
test
mov
imul
aam
dec
or
clc
sub
or
dec
cmp
lea
mov
cli
xor
push
hlt
add
fsubl
adc
dec
clc
cmp
leave
sub
shrb
pop
inc
dec
push
add
add
inc
lret
inc
cld
sub
lock
cmp
add
jge,pt
cmp
in
mov
aaa
hlt
mov
divl
xchg
sub
add
into
push
push
add
push
outsl
inc
aaa
jo
or
and
or
xchg
fstpl
dec
jp
add
add
in
negb
dec
call
jge
adc
test
inc
in
jg
lock
cmpb
fstpt
das
aad
shrb
pop
clc
jg
mov
cwtl
add
lsl
sub
xchg
ret
inc
aas
or
idivl
sub
jbe
or
stc
xor
or
sbb
push
or
cmpsb
xorb
pop
movsl
rol
push
push
mov
inc
incl
or
push
xor
xor
icebp
mov
in
stc
jbe
movzwl
mov
add
push
lods
cli
pop
test
push
lea
push
mov
in
push
in
pusha
gs
push
rcll
push
cmp
in
jbe
pop
push
mov
subb
sbb
jo
mov
pop
mov
jo
roll
fistpl
mov
xchg
loop
ret
xor
cmpsb
nop
add
xchg
push
ffreep
xor
add
cmpsl
mov
pop
rolb
loop
mov
iret
in
cmp
dec
or
mov
cmovne
mov
ror
int
adc
pop
adc
mov
add
mov
ljmp
xor
add
xor
push
sub
call
ljmp
int3
outsb
pop
imul
xchg
push
leave
ret
xchg
push
test
push
or
inc
inc
aad
icebp
cmp
xchg
cld
lea
andl
mov
adc
dec
mov
xchg
pop
sub
or
or
pop
inc
pop
sbb
out
addr16
movl
fnstcw
xchg
dec
sub
adc
mov
andl
push
mov
hlt
push
xchg
arpl
dec
xor
int
mov
mov
cmpsb
ret
xchg
push
push
add
repnz
push
movsb
pop
mov
or
jns
cwtl
xor
adc
notl
cmc
xor
ss
loopne
inc
and
jbe
xchg
test
xchg
adc
inc
add
mov
adc
int3
jmp
push
push
pusha
inc
and
add
shl
sbb
movsb
out
ss
add
not
mov
mov
fisubrl
sbb
mov
ljmp
inc
sbb
mov
adc
sbb
push
xorb
rorl
cmp
sub
jae
sbb
inc
pop
jns
stos
and
mov
or
bnd
aas
xor
jns
in
aad
dec
jo
jg
call
stos
adc
push
adc
or
pop
push
xchg
out
mov
dec
dec
aad
jne
cmpb
lret
mov
jnp,pn
jmp
dec
inc
mov
jle
cmp
mov
mov
inc
push
mov
add
mov
or
cltd
rorb
adc
ss
inc
in
aaa
push
or
sub
mov
lea
cmpsl
adc
dec
and
fptan
inc
cmp
cmpsl
sub
inc
cwtl
movl
sti
loopne
mov
cmpsl
add
test
inc
adc
lahf
repnz
dec
jl
pop
sarb
lea
movsb
sub
test
orl
push
xchg
add
sub
ja
pop
add
jl
dec
sbb
pop
shl
fstps
push
cld
push
jae
sbb
mov
gs
sbb
inc
or
lcall
or
sub
sub
add
int3
push
dec
shll
mov
addb
lea
test
mov
mov
adc
adc
and
movsb
pop
lea
lea
jmp
int
cmp
jae
sbb
mov
addr16
mov
xchg
test
or
mov
in
sbb
or
addb
lret
sahf
lods
pop
nop
cmp
cmpsb
movsl
pop
lahf
cmp
mov
int3
test
lret
xchg
mov
rorb
aaa
rcll
leave
lea
nop
xchg
or
nop
or
mov
adc
inc
divl
nop
sbb
aad
movsl
lods
nop
push
rcll
jo
xchg
cltd
mov
fists
or
or
push
shrl
jg
sbb
push
mov
insl
cwtl
std
jecxz
jno
pop
mov
push
push
sahf
mov
xor
popf
push
dec
xchg
add
add
test
int3
add
jne
repz
or
aam
les
adc
lods
pop
sbb
fistl
or
lret
fwait
mov
ret
and
or
ljmp
mulb
incb
loopne
mov
pop
call
jae
pop
pop
push
cmpsl
mov
xchg
mov
push
cwtl
sub
js
pop
loopne
imul
out
push
hlt
lret
in
lea
loope
sub
add
push
mull
mov
pop
popa
xchg
xor
repnz
push
rcrb
dec
js
and
dec
inc
nop
xchg
pop
push
add
and
mov
or
xor
mov
lahf
dec
orb
roll
pop
jl
jne
ljmp
push
cmp
push
and
add
pop
rcll
or
xor
rcl
mov
and
or
xchg
mov
add
call
ret
mov
add
sub
push
push
mov
pop
repz
mov
sub
mov
pop
push
dec
into
mov
mov
dec
jbe
adc
movzwl
outsb
mov
pop
pop
mov
fsubl
xchg
mov
mov
lods
xor
xchg
ret
adc
mov
fisubrs
mov
test
push
jle
dec
adc
rorl
push
adc
inc
or
and
cmpsb
stos
push
and
mov
adc
jo
popa
xor
add
test
test
cmpsl
push
arpl
pop
ljmpw
pop
outsl
mov
jae
loope
cmc
mov
cmp
inc
add
cmpb
outsl
in
movsb
fdivrs
fbld
sbb
adcb
fists
test
adc
xchg
in
loopne
clc
add
movsl
jbe
js
mov
sbb
mov
adc
hlt
cmpsl
xor
lea
fs
mov
ljmp
lea
push
mov
adc
rcr
in
sbb
add
pop
aam
aaa
pushl
fcomps
ss
mov
mov
xchg
cmp
fiadds
ljmp
inc
mov
xor
adcl
mov
loopne
mov
mov
sahf
mov
sahf
adc
dec
pushw
sarb
test
or
cli
xchg
ret
lea
adc
mov
jbe
mov
pop
jg
lret
xlat
mov
add
iret
push
mov
ss
pop
cmp
cltd
dec
fsub
add
pop
mov
gs
movsb
xchg
shl
push
les
rclb
push
mov
sbb
daa
pop
loopne
loopne
and
fimuls
orb
shll
out
lret
test
mov
xchg
pop
int
or
clc
stos
lods
mov
scas
rorb
mov
and
mov
pushf
ja
or
lret
loopne
add
lods
cvtdq2ps
jmp
push
arpl
jb
dec
call
enter
gs
andb
jns
insb
jmp
jno
and
imul
je
inc
mov
add
xchg
xchg
lret
pushf
lea
into
mov
imul
add
aam
dec
in
mulb
mov
insl
stos
adc
fmull
push
movsb
notb
inc
cli
add
stos
xor
iret
add
insb
inc
cmp
jne
pop
push
or
cmpsl
hlt
mov
cmp
arpl
inc
pop
in
push
jl
outsl
dec
or
mov
jg
dec
and
sarb
cmp
dec
push
cmp
fidivrs
mov
mov
fdivrl
mov
inc
adc
mov
outsb
jo
movsl
or
inc
lds
orb
sahf
loopne
and
inc
ffree
add
push
jne
pop
xchg
shlb
aad
lahf
icebp
mov
and
shlb
andb
push
jg
dec
fcomps
mov
cltd
pop
jae
or
leave
pop
stos
push
and
dec
faddl
imul
xchg
inc
popf
pop
pop
or
mov
push
push
mov
or
and
sti
xchg
jmp
push
iret
sub
xor
fcoml
rcrl
inc
aad
rcrb
or
or
inc
icebp
sbb
sbb
stc
divb
imul
pop
pop
or
rcrb
jno
jge
sub
cmpl
lcall
add
push
pop
cmp
je
cwtl
orl
xor
xorl
or
sbb
xor
dec
clc
cwtl
xchg
xchg
xor
test
and
pop
add
push
test
jne
cmp
and
enter
aam
jge
mov
xchg
outsb
dec
and
add
sbb
and
pop
rcll
push
mov
sbb
fdivr
pop
sub
inc
add
rclb
mov
test
fsubrl
mov
sahf
int3
sub
jl
pusha
adc
mov
mov
or
test
sbbl
sub
loopne
sub
push
fcoms
aas
aam
xor
sbb
das
mov
sbb
xchg
das
jo
es
jns,pn
icebp
and
sub
pusha
sub
inc
aaa
mov
stos
fwait
cmp
insl
into
int3
xor
lds
cmpsb
dec
or
push
cld
jp
dec
hlt
push
xor
mov
add
pop
insl
faddl
rclb
sbb
and
mov
imul
add
mov
enter
push
sbb
call
cmp
leave
mov
or
or
mov
jne
add
push
push
pop
pop
adc
cltd
mov
sub
mov
xchg
scas
sbb
sbb
add
xor
inc
cmp
fistps
cld
outsl
fadd
in
jp
fidivs
pop
pop
fdivl
mov
mov
sti
inc
or
fs
mov
or
sbb
mov
push
inc
and
xchg
outsl
pushf
loop
inc
fcompl
cmp
cmp
mov
inc
in
push
xchg
cmp
push
out
cmp
cmpsl
sbb
and
jmp
jae
les
jmp
bound
scas
or
movsb
mov
sbb
xchg
pop
out
mov
cmp
jge
or
or
pop
fsubs
sbb
test
xor
add
dec
test
jbe
mov
js,pn
push
jnp
or
ret
imul
in
xchg
popf
cmp
cli
fisttpl
rclb
xor
and
into
sub
aad
pop
orl
les
fidivl
das
sete
push
push
movl
dec
jb
jge
daa
push
pushw
mov
das
add
mov
dec
orl
or
add
fnstenv
gs
jb
shlb
pusha
cmpb
lock
xor
loopne
bound
inc
flds
loopne
cli
push
sti
mov
push
mov
lret
jg
rcrb
aad
push
sub
mov
pop
gs
or
lret
repz
sbb
or
sub
lret
ds
push
incb
aad
mov
fwait
xor
mov
push
dec
hlt
sub
push
arpl
or
add
mov
pop
jb
push
pop
jne
push
adc
imul
rol
popa
push
in
xchg
ljmp
inc
dec
mov
outsl
xor
repnz
cs
clc
punpcklbw
scas
and
cmp
ja
add
adc
add
xchg
or
dec
stos
into
ret
jb
mov
lret
cwtl
clc
out
sub
push
iret
int3
lcall
bound
mov
push
ret
pusha
repnz
mov
mov
lds
push
pop
std
iret
and
popa
mov
mov
or
rclb
push
add
icebp
inc
inc
ret
in
movsl
loop
mov
cltd
xchg
fimuls
or
mov
int3
xchg
add
or
call
jne
jne
popf
lds
and
ret
rcr
sub
scas
sub
pop
push
xorl
shlb
mov
cmovle
fldl
das
dec
xchg
fiadds
mov
push
lods
add
push
xchg
add
inc
push
mov
or
add
aad
or
leave
test
rcrb
adc
sahf
or
or
pusha
adc
scas
fadds
or
cmpb
addr16
ds
ret
push
mov
xchg
nop
loope
xor
push
clc
je
cs
xchg
jg
mov
sub
lea
push
lea
push
inc
push
leave
enter
fwait
push
bswap
je
and
or
push
dec
fisubl
jmp
outsl
xchg
lret
cmp
jl
push
mov
mov
int3
xor
sarl
pop
sub
lcall
and
cmp
jne
repz
add
pop
cmp
add
push
shll
mov
out
sub
lock
jle
cmp
je
sub
pushf
sbb
mov
push
jns
push
fmull
add
fnstenv
loope
sahf
adc
push
sar
addl
jecxz
mov
sub
pop
ret
jmp
sub
adc
cmpsb
dec
jmp
push
mov
lahf
in
xor
mov
fldcw
fisttps
js
dec
or
in
push
mov
xorl
dec
adc
mov
push
or
in
or
sbb
cmp
neg
and
or
movb
inc
stos
xor
call
mov
pop
inc
or
adc
inc
add
popa
mov
pop
bound
rcrl
fwait
add
divl
subl
or
or
push
jl
ret
or
jne
xchg
fwait
inc
or
inc
pushf
xchg
pop
add
sbbl
cmp
je
sbb
aas
cmp
or
push
mov
fbstp
pop
insb
jne
mov
xchg
mov
repnz
popa
cld
fildl
xchg
add
inc
or
pop
pushl
add
cmp
mov
mov
out
in
inc
out
pop
push
push
xchg
add
daa
add
test
push
sub
dec
and
or
ret
cmpl
cmpsb
dec
or
push
shrb
push
sbb
cmpl
jb
loope
mov
cmp
pop
adc
adc
ss
inc
cmc
scas
cltd
push
stos
jne
loope
js
popa
adc
cmpsb
and
mov
cmc
das
mov
notb
cltd
das
clc
push
push
leave
push
cmp
adc
leave
fs
mul
seto
out
jecxz
xor
enter
imul
and
push
jmp
jae
cmpsl
mov
push
xor
test
push
dec
mov
ficoms
orl
or
mov
inc
mov
add
jns
fadds
or
fnsave
loopne
pusha
sub
mov
lcall
add
dec
adc
mov
je
rcll
pushf
fcmovb
cmc
cmp
cmp
lds
cld
sub
inc
or
jno
and
adc
pop
jbe
lods
cltd
push
and
adc
and
rol
data16
mov
adc
js
test
outsb
sbb
mov
icebp
inc
inc
add
js
cmp
cld
cmp
std
lcall
jmp
adc
add
and
sbb
callw
mov
mov
pop
test
loop
cmp
scas
adc
push
je
adc
or
daa
xchg
lock
and
lock
cmpsb
jbe
cs
lock
jne
ds
xlat
daa
inc
into
js
push
jb
jb
jo
add
test
lock
sub
loope
pop
add
jne
or
cltd
aad
add
aaa
cld
jmp
lock
ret
out
push
test
je
cli
jmp
fidivs
jmp
jno
cmp
push
inc
cmp
jae
and
push
subl
xor
cmp
xor
pop
sub
or
subl
loop
jne
and
adc
orb
jge
mov
pop
push
ss
push
fucomi
jb
mov
xor
adc
cwtl
ss
test
mov
sbb
push
mov
mov
shl
inc
adcl
cmp
xor
dec
movsl
or
or
lret
je
add
aas
and
or
mov
cmc
in
jo
insb
or
and
addb
fwait
xor
mov
jne
mov
and
ja
jp
lds
dec
mov
mov
dec
mov
inc
shl
jmp
push
jle
test
dec
jns
mov
mov
fistpl
fcomps
or
or
inc
and
jae
xor
pop
enter
ja
cwtl
incb
mov
jmp
mov
or
mov
hlt
cmpsl
fisttpl
push
mov
xchg
inc
sbb
jg
mov
push
push
icebp
adc
sub
pop
pop
adc
mov
shlb
and
dec
sub
adcl
mov
fs
mov
mov
adc
sub
dec
add
js
push
pop
stos
pusha
add
push
or
push
add
inc
aad
xor
cmp
lea
or
clc
add
mov
jl
inc
cltd
mov
int3
add
mov
shl
push
clc
je
movsl
popa
xor
xchg
push
push
xchg
jmp
and
adcb
out
rclb
push
jl
icebp
mov
mov
sub
test
mov
jnp
jne
lar
and
dec
js
push
push
xchg
adc
insb
loope
imul
mov
add
and
mov
inc
jp
push
bound
push
in
inc
loopne
dec
adc
push
push
jbe
insb
mov
neg
push
mov
ret
mov
adc
pop
out
jne
rclb
testl
inc
mov
dec
inc
jmp
mov
int
enter
xor
dec
push
inc
cwtl
add
fs
xchg
add
aaa
xor
loop
aad
sti
faddp
pusha
and
out
adc
ret
xchg
push
jp
push
cmp
nop
inc
les
movsb
xchg
in
xor
xchg
popf
pop
pop
imul
jns
mov
and
jns
shrb
push
orb
xchg
inc
repnz
ud1
mov
dec
orl
xor
mov
or
rcll
push
sub
lock
add
movl
int
inc
out
sarb
add
mov
push
or
lods
dec
add
ret
lods
pop
inc
adc
testb
push
jae
mov
dec
imul
sbb
pop
add
mov
and
fcmovb
push
push
movsl
sbb
in
adc
aam
sbb
dec
js
jl
andl
cmpsl
jge
repz
mov
lds
and
add
bound
fs
or
andl
pusha
mov
cmp
push
xor
pop
mov
fwait
and
push
pop
or
mov
push
aam
dec
orl
pop
sub
in
cmp
push
je
jo
and
popf
leave
in
subb
sub
ret
adc
mov
inc
push
add
test
aad
mov
mov
repz
or
mov
dec
lret
test
dec
xlat
mov
pop
add
js
test
sub
or
je
orl
xchg
call
adc
pop
bnd
fimull
push
jmp
je
sbb
xlat
mov
js
push
cmp
or
cmp
pop
fs
and
je
rclb
sub
sbb
repnz
popf
dec
fldl
add
mov
cmp
add
sbb
add
jno
push
jb
jp
xor
dec
or
mov
rolb
insb
sub
cmc
adc
dec
lahf
cld
lea
fldl
mov
mov
mov
sub
and
xor
push
and
ret
sub
xor
add
inc
fidivs
add
adc
insl
imul
inc
push
cmp
xchg
lea
pop
push
faddp
xor
cmp
stos
push
popf
jg
or
dec
and
sub
clc
push
iret
mov
inc
sbb
pop
xchg
pusha
lock
add
push
mov
repz
adc
xchg
inc
or
push
mov
pusha
inc
lea
pop
insb
xor
pop
das
xchg
fsub
pop
xchg
or
sub
sub
rcll
sub
dec
sub
leave
lea
xorl
mov
adc
addr16
or
mov
sub
push
dec
xor
js
and
sub
sub
cmpsl
fadds
push
cmp
aaa
cmp
mov
pushl
lods
mov
add
add
mov
jg
movsb
sti
adc
pop
sub
sbb
jmpw
xor
lcall
inc
dec
popa
jo
loopne
sub
mov
xchg
cmc
popf
addr16
repnz
lea
push
cmp
jnp
cltd
sbb
insl
aaa
xor
cs
inc
mov
loop
incb
pop
jns
jns
rolb
or
hlt
dec
and
inc
or
cmpsb
mov
cltd
push
mov
arpl
cmpl
rdtsc
push
adc
mov
sub
push
mov
rol
mov
test
lea
push
push
pop
push
lock
cltd
in
pop
push
xchg
sub
mov
lock
or
mov
nop
int
sbb
stos
je
sbb
in
addr16
sbbl
loope
xchg
loope
mov
mov
ret
mov
inc
insb
inc
test
add
pop
sbb
mov
mov
xchg
pop
aad
rolb
mov
lahf
xchg
inc
mov
pop
jnp
es
xor
daa
std
cmp
outsb
subb
loopne
test
inc
add
ret
in
add
and
addr16
or
mov
inc
cmc
daa
stos
cld
jmp
mov
rolb
and
call
jl
pushl
mov
test
inc
and
xor
adc
add
scas
lock
cmp
test
adc
jbe
out
jae
sbb
adcb
imul
add
jae
arpl
inc
mov
daa
mov
add
mov
add
scas
adc
or
inc
inc
add
mov
jb
ja
popa
dec
jnp
push
stc
test
push
in
and
xchg
jo
pop
adc
movsb
inc
cmp
mov
pop
divb
pop
sub
dec
fisttpl
icebp
sar
js
adc
in
movb
cld
cmpsl
test
inc
hlt
inc
hlt
arpl
sub
js
pop
mov
adc
pop
push
ret
pop
jmp
rcll
xchg
cmp
inc
jo
shll
and
or
or
int
sub
dec
dec
push
rcll
imulb
pusha
pop
dec
scas
mov
xor
xor
sbb
insb
add
jmp
notl
jo
inc
insb
pop
dec
jno
mov
bts
movb
rorl
mov
inc
or
xchg
sub
mov
loope
inc
inc
push
fadds
test
sub
lock
dec
sbb
adc
pop
add
mov
lcall
cwtl
cmp
les
mov
inc
mov
loopne
cmp
mov
mov
xchg
rolb
roll
or
pop
sbb
lods
sbb
jne
and
push
mov
cmpsb
in
jae
or
xchg
pop
pop
imul
int3
mov
pushf
ds
jae
in
and
pop
ss
aaa
mov
clc
push
lea
shrb
lret
hlt
adc
cmp
loope
pop
cmp
inc
mov
and
add
push
imul
inc
dec
mov
push
icebp
xor
mov
jle
sbb
mov
mov
movsb
mov
adc
dec
xchg
inc
loope
ja
add
nop
inc
incl
test
sbb
nop
out
lods
sarl
clc
inc
push
sahf
cs
pop
or
sbb
mov
out
negb
fadds
shl
adc
mov
rol
inc
cmp
lock
daa
in
add
add
xchg
or
xor
xchg
push
xchg
cmpsb
pop
neg
xchg
and
sbb
loope
es
xchg
in
push
cwtl
xor
xor
jmp
ss
push
xor
or
cmp
loopne
xchg
xor
stc
lcall
mov
or
jo
test
mov
xor
xor
addr16
insl
and
fimull
cltd
mov
xlat
push
adc
mov
dec
sub
adc
and
rcl
sub
pop
adc
scas
mov
mov
rcrl
pop
cwtl
or
jno
mov
jmp
xor
push
pop
jecxz
test
addl
js
cmpsb
jmp
js
add
jg
in
cmpb
xor
sti
add
xchg
jle
xor
dec
or
sbb
jl
ud0
shlb
notb
inc
je
or
test
xor
pusha
cmp
mov
mov
jne
inc
mov
push
cmp
pop
sbb
adc
or
lcall
fsts
pushf
pop
and
pop
test
cmp
push
test
pop
bound
popf
icebp
add
cmp
js
jo
int
push
andl
pop
push
inc
or
push
icebp
add
test
jno
push
pushf
cmp
sub
fsubrs
mov
cmp
pushf
adc
jle
cmp
jae
mov
push
jno
and
aam
out
shlb
adc
jne
push
dec
scas
lods
enter
std
push
or
jns
xor
push
aas
cld
mov
outsb
out
add
test
daa
mov
mov
aas
adc
nop
cmpsb
cmp
dec
rclb
dec
cmp
cld
insb
push
push
push
cmc
inc
sahf
dec
pop
xchg
sbb
xor
dec
adc
add
cmpsb
arpl
push
das
xchg
sbb
sbb
sbb
pop
mov
adc
mov
movsl
jge
push
inc
inc
sbb
xor
push
out
lods
pop
push
adc
inc
add
das
pop
or
adc
popf
jmp
and
push
lods
or
sbb
add
or
mov
roll
nop
cld
ljmp
aas
sub
jo
mov
adc
add
or
and
std
mov
mov
mov
jbe
push
push
movsl
je
enter
and
nop
sbb
rorl
sbb
cmpsl
and
call
inc
fiaddl
cmp
mov
rolb
lods
popl
roll
mov
add
mov
dec
data16
les
pop
inc
enter
ja
fistps
push
ljmp
xchg
xchg
sbb
sbb
add
out
push
cmp
aaa
sub
push
add
shlb
inc
xor
mov
adc
push
push
pusha
pop
and
mov
mov
add
mov
mov
pop
fisubs
lret
inc
add
fisubs
inc
adcb
dec
fmuls
sbb
pop
add
dec
rcrl
add
push
cmp
scas
mov
xchg
sbb
xlat
dec
in
jno
lea
lea
push
mov
ret
test
and
pop
imul
and
cmpsb
imul
leave
int3
imul
loope
jno
mov
test
mov
shlb
push
aas
mov
test
mov
andl
and
inc
daa
jo
xchg
je
xor
or
test
ret
pop
mov
mov
and
sub
sub
es
or
incb
inc
inc
xchg
and
mov
push
jl
into
mov
fs
repz
cmp
xchg
mov
out
je
lods
call
add
daa
int3
and
mov
stc
popa
or
repnz
sbb
xor
add
mov
sub
loopne
xor
adc
or
out
dec
sbbb
push
sti
setge
xchg
jg
outsb
mov
xchg
mov
shlb
aas
pop
in
pop
sbb
xor
pop
fiaddl
fidivs
pop
cs
fstl
cmp
dec
xlat
scas
sub
jno
jl
popf
jb
adc
ja
dec
popl
mov
sbb
dec
push
movl
stc
inc
inc
inc
adc
daa
es
js
inc
xorl
aad
in
inc
out
dec
cmp
ljmp
add
add
xor
sarl
adc
add
sbb
xor
jecxz
cmpsb
fiadds
add
ss
push
jp
mov
or
jnp
shl
or
inc
adc
outsb
mov
xchg
test
arpl
xor
push
icebp
xor
jo
xor
dec
jne
pusha
mov
mov
clc
adc
sbb
shr
and
jmp
adc
test
pop
mov
dec
mov
aam
dec
insl
and
jp
int3
pop
aaa
lock
push
xor
repz
mov
in
mov
das
xchg
sub
mov
xchg
jge
sub
arpl
or
js
cmp
movl
xchg
daa
xor
std
sub
enter
push
lea
cli
jb
mov
or
or
ret
faddl
mov
jmp
lea
repnz
sbb
pop
ja
xchg
push
mov
xlat
je
jp
push
out
dec
orl
add
xchg
test
ja
push
nop
xchg
or
push
jns
cmp
and
jl
aas
mov
inc
stos
imul
rolb
cmc
push
push
lods
or
sub
cmpsb
cmpsl
xor
aad
or
jb
pusha
icebp
and
cmp
testb
jle
mov
fmul
data16
test
out
je
pop
clc
lods
sbbb
push
xor
mov
mov
sbb
nop
and
sub
xorb
sub
jno
and
fmuls
and
jmp
inc
cmp
inc
lea
push
cmp
cmp
mov
adc
test
cmp
dec
push
fcomps
push
lods
adc
xchg
jns
pop
cwtl
aaa
push
iret
into
cld
push
std
mov
fcmovnbe
jmp
cmp
je
loopne
mov
aaa
js
rol
sub
inc
jae
and
inc
add
adc
cld
inc
add
add
jmp
xor
adc
jnp
and
dec
lcall
lea
sarb
fs
add
ret
popa
add
cmp
incl
inc
adc
mov
mov
sbb
mov
iret
push
pop
aaa
jne
jmp
mov
xor
dec
mov
rcll
push
loop
mov
stos
adc
notb
push
or
movsb
and
lret
loopne
sub
inc
mov
cmp
scas
add
push
loope
ss
les
jae,pt
inc
sub
mov
test
mov
pop
add
dec
movl
add
inc
sub
push
push
and
sub
incb
mov
lret
ja
mov
adc
bound
dec
pop
enter
imul
push
mov
pop
test
mov
ret
adc
push
dec
loopne
adc
adc
sbb
and
ret
fdivrs
ja
jge
mov
divb
inc
cmp
jl
pop
test
lods
and
movl
nop
out
dec
add
jno
lods
ja
xor
addr16
mov
push
pop
mov
inc
decl
loopne
sti
dec
jo
enter
insb
mov
xor
xchg
aam
xorl
sbb
mov
mov
cmp
imul
or
add
js
sub
cmp
aad
arpl
inc
mov
add
fmull
out
clc
movsl
insl
pusha
xchg
push
incl
fimull
popf
mov
inc
cmp
cmp
cmp
je
push
mov
xor
es
cmpsl
data16
leave
jo
andl
sbb
and
push
inc
imul
movsb
pop
cmp
in
mov
in
xchg
test
call
xor
or
dec
push
movsb
jns
or
mov
test
sub
imul
mov
shlb
push
es
cmpl
and
movsl
mov
mov
jae
int
push
push
push
imul
inc
sub
daa
mov
test
add
cmp
add
and
adc
or
int3
aam
inc
dec
aaa
lods
or
shrl
xchg
fmull
sbb
sub
fs
mov
inc
dec
mov
push
mov
outsl
lock
cmpsb
mov
test
je
sub
cmp
js
cmp
test
push
inc
pop
adc
pop
pop
dec
je
mov
sbb
sbb
inc
enter
pop
fcoml
mov
jbe
cmp
mov
dec
aam
dec
inc
ljmp
inc
or
rorb
adc
sub
pop
push
test
in
cmp
push
adc
and
push
sub
data16
lea
cli
sbb
or
sbb
adc
pop
adc
sub
xor
adc
shrb
outsl
ja
pushf
mov
mov
dec
and
ja
cmp
cmp
push
adc
roll
adc
push
and
sbb
ljmp
jecxz
xor
adc
in
mov
and
aad
inc
imul
lock
dec
cwtl
stos
and
sub
sub
push
fsubrp
sub
inc
xchg
jns
je
pop
mov
aas
leave
mov
filds
stos
mov
xor
cli
insb
cmp
pushf
dec
ss
mov
orl
sub
add
xor
mov
jne
jb
jl
push
out
cmp
jge
xchg
stos
inc
xchg
movsb
lea
pop
cmp
aaa
xchg
cmp
stc
subb
add
dec
and
sbb
sbb
cmp
xchg
ss
and
dec
inc
in
sbb
or
insl
sub
pop
andb
adc
xchg
mov
inc
rcll
jecxz
pop
xchg
inc
fidivrs
dec
out
pop
or
adc
je
mov
dec
push
xchg
adc
cmpl
addw
inc
pop
loopne
mov
add
and
aaa
fistps
lcall
dec
add
push
sub
sub
js
mov
fwait
vpcmpgtb
add
nop
addr16
pop
xor
or
dec
pop
add
sbb
leave
and
pop
add
push
test
pop
faddp
stc
pop
test
and
pop
fcomps
push
dec
sub
pushf
adcl
mov
sbb
jnp
xchg
push
arpl
adcb
sub
aad
push
aaa
xchg
data16
jl
sub
xchg
add
xlat
xchg
pushl
enter
cld
pusha
mov
lock
int3
js
pop
das
jmp
xor
sbb
jge
or
aaa
das
adc
sub
adc
cld
sub
fstps
or
cmp
and
dec
aad
inc
mov
jp
mov
subl
mov
mov
lret
mov
je
out
mov
adcb
xor
adc
xor
xor
sbb
nop
out
xchg
sub
cmp
lea
in
xor
and
push
loop
or
or
and
popf
adc
xor
sbb
leave
xorb
inc
xor
ljmp
and
cmp
sbb
mov
cmp
int3
jno
xlat
and
nop
inc
sub
adc
mov
xlat
out
mov
lret
call
pop
loop
cwtl
imul
orb
push
les
rcll
sbb
inc
das
jecxz
bound
pop
or
notl
mov
adc
outsl
mov
pop
add
push
adc
je
lret
push
cmp
mov
cld
xchg
adc
rcrb
pop
sub
or
xor
mov
ja
sub
jae
sub
lret
iret
test
add
out
jae
or
lret
mov
cli
pop
inc
push
and
mov
jbe
adc
outsl
loop
push
jmp
sub
pop
and
inc
test
xor
jbe
ja
hlt
sub
popf
dec
testl
mov
loopne
add
cli
push
sub
lahf
pop
cmovle
adc
fnsetpm(287
jb
and
jae
or
add
adc
fldl
inc
pop
mov
and
or
mov
xchg
jne
jnp
mov
ljmp
loopne
cmpl
xor
daa
xchg
inc
push
in
lea
xchg
testb
repz
pop
xchg
xchg
stos
shll
adc
dec
test
shlb
fildl
test
jo
cltd
push
xchg
or
and
in
sbb
jnp
sub
dec
mov
xlat
notb
popf
push
dec
imul
xor
cmp
dec
push
dec
or
popf
xchg
mov
sub
ljmp
and
add
xor
sahf
lea
aad
mov
push
outsl
ret
push
test
inc
or
popa
adc
sbb
iret
mov
jno
movsl
dec
and
add
test
mov
xor
cwtl
pushf
sbb
mov
movsl
pop
sub
sbb
mov
cmp
add
popf
sub
cmp
in
cli
push
repz
in
divb
mov
hlt
adc
ss
or
mov
lcall
outsl
pop
xlat
test
jbe
rcrb
pop
jge
hlt
pop
testl
adc
push
cmpsb
or
shrl
hlt
dec
xchg
or
or
aam
mov
pop
or
icebp
jno
jns
mov
and
push
xor
mov
fadd
ljmp
sarl
shl
push
cmp
repnz
push
sbb
into
clc
push
push
push
pop
push
xchg
mov
xor
lds
sahf
or
push
imul
jg
lock
in
sbb
push
cmp
lea
cmp
mov
pop
pop
lret
mov
nop
andl
fs
add
sbbl
leave
pop
rcrb
inc
push
xchg
add
and
xchg
and
and
and
push
mov
ret
cmp
es
cmp
lds
sbbl
leave
adc
daa
xchg
sbb
pop
mov
jmp
stc
andb
test
and
mov
shrb
inc
cs
inc
push
pop
sub
sub
cmp
sub
push
xor
sub
icebp
or
insb
pop
mov
xchg
aaa
arpl
pop
fcomps
repnz
mov
push
push
sbb
xchg
jl
inc
imul
test
push
xor
pop
and
in
fcoml
xor
icebp
fs
inc
out
mov
sub
outsl
xchg
xorl
jle
dec
mov
pop
adc
dec
adc
pop
rcl
jo
ja
push
or
pop
movsb
jns
lcall
jns
and
fidivrs
push
adc
movsb
adc
and
and
test
add
arpl
add
mov
add
xor
out
pop
imul
mov
inc
pop
or
aad
inc
pop
or
push
loope
xlat
sbb
or
iret
ss
push
mov
push
push
inc
add
je
testb
or
and
fisttps
cmp
les
lret
pop
popa
or
push
les
push
rclb
mov
lock
add
adc
jmp
shl
std
xor
pop
insb
or
icebp
fcmovu
push
pop
clc
loopne
add
push
push
fadd
lds
add
mov
jl
lcall
fsts
pop
adc
mov
dec
add
jne
pop
pop
cwtl
pop
or
data16
dec
lock
test
out
mov
data16
push
hlt
dec
sub
gs
call
or
pop
pop
dec
cld
dec
push
pop
push
xor
pop
push
push
xchg
xchg
mov
dec
adc
test
shlb
adc
xor
xor
mov
xor
pop
les
adc
or
icebp
or
or
or
and
es
sti
mov
sbb
push
out
or
cmp
cmp
je
inc
xlat
adc
hlt
dec
stos
cwtl
xor
sarl
mov
dec
add
add
sub
into
cmp
push
inc
icebp
mov
int3
lcall
inc
add
cs
js
add
ja
dec
nop
xor
in
lahf
ret
je
daa
loop
or
add
test
popa
call
mov
orl
imul
mov
pop
push
cmpsb
inc
fisubl
fcomps
fs
lret
enter
sbb
mov
rol
rorl
add
in
mov
les
fisubs
inc
fidivrl
push
pushf
shll
mov
or
pop
xor
jbe
popa
pop
orl
add
daa
push
clc
jle
dec
rclb
ja
adc
iret
xor
fdivs
push
ds
push
addb
inc
ljmp
push
inc
or
repnz
jo
addb
hlt
inc
add
bound
adc
nop
xchg
push
call
jnp
inc
jne
push
loopne
shr
out
subb
jge
mov
mov
clc
pop
adc
push
sbb
hlt
add
aaa
add
scas
in
add
adc
jle
push
add
push
andl
movl
mov
push
pusha
mov
pop
sbb
adc
pop
jp
lds
dec
xor
lods
push
sbb
pop
dec
adc
in
push
lea
movsb
mov
rep
adc
xchg
mov
lods
adc
inc
dec
daa
xchg
stos
jmp
adc
xchg
movsl
mov
mov
scas
mov
push
ret
add
pushf
fstpt
lret
arpl
ffreep
mov
mov
jne
or
int3
sbb
adc
daa
jecxz
and
lea
rolb
add
aas
lret
dec
adc
incb
cs
cmp
mov
push
dec
jo
adc
sbb
mov
and
dec
sub
inc
inc
inc
in
cmp
rorl
mov
scas
insl
ja
dec
push
inc
jmp
mov
and
dec
insb
aaa
or
shll
bound
pop
pop
mov
mov
lahf
test
mov
add
add
push
add
jl
scas
movl
xchg
xchg
sbb
mov
jg
sahf
or
add
add
sbb
stos
mov
xor
pop
inc
mov
mov
jae
and
mov
adc
sbb
sbb
mov
mov
mov
mov
and
mov
mov
cmp
or
cmc
nop
pop
add
or
je
and
adc
sbb
loope
pop
push
test
pop
cmp
mov
dec
fs
dec
in
ja
jecxz
aas
imul
or
pop
or
loope
test
into
ret
pop
mov
add
in
inc
or
clc
jg
adc
cmp
jle
cld
jae
inc
add
outsb
mov
subb
ret
and
adc
cmp
loopne
ret
cmp
add
mov
faddl
outsl
rorl
sub
cmovle
stc
xchg
sub
add
fldcw
pop
mov
lret
jp
cltd
push
mov
sbb
jmp
xor
lock
mov
js
scas
pop
xchg
and
outsb
push
loopne
mov
repnz
dec
inc
push
mov
dec
sub
mov
lods
add
sub
leave
cmpsl
stos
pop
cwtl
sub
mov
aam
stos
xor
mov
test
add
cmp
rcrb
add
mov
push
arpl
add
pop
xor
dec
add
adc
sub
mov
fimuls
call
shll
fldt
add
pop
mov
add
test
mov
lea
fistl
mov
and
pop
or
xchg
xchg
inc
or
mov
sbb
das
or
sbb
lret
adcb
insb
sti
push
ficoms
pop
jmp
scas
jo
inc
scas
enter
mov
jno
movsl
push
push
push
push
addb
dec
inc
push
push
cld
jno
adc
pop
dec
andl
add
lods
out
rcrl
mov
and
cmpsl
pop
mov
xor
popa
repnz
lea
jmp
loopne
stc
or
data16
adc
subl
cld
add
or
aaa
adc
adc
loopne
mov
sbb
mov
sbb
jne
and
call
pop
xchg
adc
push
xor
cmp
fimuls
mov
mov
mov
mov
xchg
sbb
out
xor
mov
push
loopne
inc
inc
mov
enter
clc
popa
adc
sbb
adc
inc
lea
iret
pop
dec
inc
bound
xor
es
or
call
adc
or
mov
inc
js
pop
mov
dec
jnp
push
inc
daa
adc
outsl
lret
popl
add
fidivl
jo
daa
cwtl
sbb
jo
sbb
movb
dec
popf
inc
jnp
xchg
cltd
mov
mov
stos
nop
bound
sub
scas
cmp
pop
and
pop
in
dec
xchg
cmp
lea
pop
push
push
xor
fcmovnb
push
test
push
daa
push
stos
orl
sbb
xchg
stos
sub
call
scas
je
sahf
incl
sbb
xchg
push
sbb
lds
iret
leave
push
fsubl
inc
push
jl
sbb
inc
cmp
mov
and
add
int
test
shlb
nop
inc
pop
or
or
inc
movsl
adc
mov
lahf
xor
in
or
push
sub
stc
test
add
dec
dec
dec
xor
add
std
sub
xor
icebp
test
and
stos
nop
popf
insl
adc
mov
or
das
je
fmuls
and
imul
pop
jb
aas
add
lods
xor
data16
in
fidivrl
adc
aas
pop
dec
test
fisttpll
cmp
insb
andl
mov
js
dec
add
fistpll
fistpll
jmp
mov
data16
adc
xor
rcrb
sub
inc
js
sub
mov
pop
loop
movsl
out
or
inc
lea
jbe
imull
and
push
mov
test
xor
mov
loopne
js
fcmovu
cmp
dec
fisubrs
adc
xor
lea
xor
mov
fs
inc
dec
jo
cs
or
sbbb
push
inc
out
loop
cmc
adc
lods
dec
sub
mov
pop
fs
push
inc
push
fldcw
add
cmp
loopne
xor
or
pop
dec
int
adc
lds
or
orb
nop
mov
push
push
ja
sbbb
cld
or
sbb
add
dec
pushf
outsb
mov
adc
in
imul
xor
jmp
mov
add
cmp
push
push
sub
ss
inc
icebp
push
inc
lcall
sbb
fs
bound
push
xor
ret
push
pop
and
push
outsb
pop
mov
add
jo
fwait
mov
addl
cmp
shlb
je
js
add
outsl
movsl
jns
mov
outsl
into
adc
push
movl
cwtl
popa
cmp
or
push
mov
xor
movsb
arpl
test
gs
pop
adc
rcl
insb
pop
je
sbb
xorl
add
sti
mov
push
sbb
aas
sbb
adc
scas
mov
add
test
and
cmpsl
loop
ljmp
mov
xorb
jne
in
push
cmpsb
mov
in
aaa
add
pop
cmp
insb
js
rcrl
push
sbb
mov
add
push
jge
push
and
push
mov
add
stos
in
outsl
int
lds
je
je
adc
dec
dec
fs
cs
add
dec
add
or
dec
add
enter
add
xchg
inc
jo
xchg
adc
outsl
pop
push
pop
sbb
testl
mov
les
rcll
sbb
repz
sbb
mov
add
adc
jno
cltd
arpl
mov
mov
inc
xor
adc
nop
dec
nop
dec
xchg
rorb
add
aam
push
xorl
imul
lea
sub
push
inc
test
inc
mov
mov
add
pusha
mov
xchg
mov
int
pop
dec
jmp
rorl
stos
mov
or
or
clc
inc
outsb
hlt
int
test
add
or
adc
adc
enter
movl
in
jo
shr
repnz
pusha
icebp
or
mov
aaa
int
movb
jno
xor
mov
or
sub
push
adc
jle
fs
or
pusha
dec
push
mov
sarb
jge
mov
sub
xchg
push
or
sbb
jp
test
loopne
sub
lea
jb
jle
cmp
or
pushl
dec
mov
cmp
inc
jno
insb
arpl
dec
mov
add
mov
add
dec
xchg
sbb
mov
sub
sub
dec
sbb
push
mov
mov
cmp
lods
jnp
loopne
and
adc
je
adc
cli
or
push
ret
push
and
lds
inc
and
and
ljmp
or
add
les
lea
pop
dec
or
push
imul
and
je
adcb
jnp
dec
add
movsbw
inc
jg
xchg
mov
cmp
jne
xchg
fucomi
and
or
or
fwait
dec
add
xor
inc
adcb
sbb
mov
pop
add
inc
hlt
mov
hlt
push
inc
rol
out
push
jg
rolb
pop
pusha
roll
dec
cmp
adc
jo
dec
lods
pop
js
je
and
ficoms
fidivrl
sbb
imul
lret
xor
xchg
mov
push
aas
ljmp
inc
fucomi
add
cmpsl
push
repz
add
leave
sbb
or
les
cmpsl
and
xor
sahf
add
dec
mov
inc
popf
or
jb
mov
shll
inc
gs
jnp
outsb
ret
push
sub
xchg
addr16
jp
dec
sbb
je
std
lock
dec
mov
test
inc
or
mov
test
neg
mov
test
and
add
or
pop
push
popa
sub
movsb
neg
out
popa
sarb
in
add
push
jecxz
leave
xchg
pushl
push
push
add
mov
ret
mov
bound
mov
sbb
and
inc
ret
xorl
sub
dec
push
call
sub
push
pop
jg
sbb
fs
xchg
sbb
sub
xor
dec
and
add
mov
dec
xlat
cli
mov
daa
jne
cwtl
xchg
mov
outsl
xor
das
push
jg
and
adc
mov
test
rcrb
xchg
aam
mov
sbb
jecxz
jb
inc
xor
mov
dec
in
adc
mov
imul
add
bound
hlt
leave
and
scas
wbinvd
repz
sbb
sub
clc
cmp
adc
or
xchg
leave
inc
or
test
pop
fnstcw
pop
pop
and
jae
call
mov
cmp
andb
push
mov
repnz
push
in
test
mov
mov
mov
pop
mov
jle
sub
scas
mov
add
movl
mov
mov
pop
scas
xchg
lock
rorb
pop
js
popf
xchg
or
int3
out
xchg
icebp
add
push
push
push
nop
pop
jp
push
out
mov
add
mov
inc
cmp
adc
pusha
fbld
insb
and
mov
and
stc
imul
xor
call
cwtl
mov
movl
jo
inc
or
cmp
inc
dec
inc
adc
mov
sbb
dec
xchg
mov
shrb
add
pop
adc
test
addl
addl
icebp
sub
sbb
das
jmp
and
sub
cld
or
jne
movsl
add
and
and
add
sarl
or
adc
mov
in
subb
jp
push
push
and
movsb
mov
aam
hlt
adc
sub
lret
jmp
aam
clc
sub
dec
stc
add
push
add
push
push
push
push
es
and
jne
pop
xor
mov
push
mov
cmc
push
cmp
add
icebp
push
jne
mov
nop
call
sub
aas
nop
xor
cmp
jne
and
jnp
push
mov
push
rolb
bound
cmp
fsubl
cmp
mov
cmp
and
push
gs
rclb
jo
pushf
push
mov
mov
repnz
xchg
xor
ficoml
adc
lret
mov
push
fiaddl
dec
jmp
and
in
inc
inc
jmp
cld
jmp
push
test
fadds
xchg
testb
push
movsl
cs
xor
jbe
inc
cwtl
cmpsl
popf
add
lcall
adc
aas
pushf
lea
inc
add
je
pop
add
fs
mov
lods
fnstsw
mov
or
sbb
pushf
cmp
jle
addl
js
add
xor
jo
jp
xchg
xchg
jbe
icebp
mov
mov
popf
enter
adc
aam
dec
sbb
jnp
push
nop
pop
dec
push
outsl
mov
loopne
dec
sbb
adc
cmp
lds
cmp
push
test
loop
xchg
popa
add
push
fs
mov
mov
sti
mov
lcall
sub
dec
xor
pop
add
movsb
rclb
add
inc
fsts
dec
cmpsl
or
cmp
int3
push
rol
or
pop
push
push
stos
into
cmpsb
mov
mov
mov
xchg
pop
or
push
inc
mov
lahf
addr16
out
negl
and
lds
push
arpl
cltd
adc
adc
adc
push
xchg
mov
mov
add
das
mov
std
push
cli
pop
shll
ljmp
lahf
lock
jb
xchg
inc
jne
lcall
ja
les
mov
add
dec
fists
jo
and
push
sbb
ss
mov
sbb
in
lea
adc
cmp
and
iret
loopne
cmpsb
push
push
mov
and
jo
xor
jg
push
xor
sbb
pop
or
mov
clc
jo
arpl
mov
scas
xor
mov
pop
mov
mov
orl
mov
adc
pop
add
adc
ds
leave
push
add
test
orl
mov
xchg
test
in
lock
roll
or
enter
or
pop
hlt
jmp
and
dec
ljmp
adc
sub
jl
mov
sub
addb
xor
outsl
mov
add
xchg
mov
mov
scas
add
pop
dec
pop
xor
and
les
mov
cld
jmp
sbb
es
lahf
add
cmp
je
inc
push
int3
pop
jl
and
push
cmp
lods
sub
dec
out
lock
dec
out
jmp
jae
rolb
je
gs
outsl
loop
das
cmp
or
insb
push
inc
push
sub
pop
daa
xchg
cmpsl
push
push
out
cmp
jbe
cmpsl
mov
or
jnp
loopne
adc
lcall
fiaddl
js
xchg
or
adc
mov
ret
cmpsb
push
stos
and
aas
mov
andl
lods
pop
inc
nop
lret
lret
or
stos
jnp
xor
inc
mov
loope
dec
add
lods
ret
xor
das
dec
mov
add
xchg
clc
into
cld
add
es
xchg
jae
lea
shll
add
dec
popa
add
jmp
test
adc
push
loopne
or
imul
loopne
rcll
sub
fiaddl
and
stc
pop
pop
sub
push
sbb
adc
xchg
mov
adc
cmp
push
jo
jle
add
cmpw
sbb
cmpb
sub
push
pop
add
in
scas
jmp
pop
push
pop
mov
add
sar
inc
jmp
push
je
sbbb
mov
jns
and
pop
jns
call
add
xor
adc
orl
test
jne
xchg
dec
jl
int3
test
jl
sub
jmp
std
outsl
jg
out
cld
lcall
dec
movzwl
cmpl
push
enter
adc
rorl
out
and
gs
add
add
imul
pop
and
sub
pushf
lock
mov
and
jae
xchg
dec
in
cmc
dec
push
inc
pop
pop
in
inc
xchg
add
push
ret
adc
pop
mov
sysret
or
dec
loopne
pop
and
leave
movb
and
stos
bound
dec
cmp
jne
jb
fs
push
loope
lock
add
add
cli
pop
dec
pop
push
pop
push
dec
lods
sbb
add
shl
and
dec
es
jle
mov
js
sbb
sbb
repnz
loop
and
movsb
or
push
imul
icebp
add
popf
dec
out
inc
add
adc
or
xor
addl
sub
imul
add
push
mov
scas
clc
fldl
xchg
jne
adc
movsb
and
stc
jo
or
pop
add
adc
movsb
push
nop
xchg
xor
dec
add
lock
into
mov
aaa
mov
adc
xor
xor
push
data16
or
fwait
mov
lret
in
out
mov
inc
iret
mov
lock
test
jle
sub
jmp
fiadds
mov
cld
jmp
push
mov
dec
nop
and
add
mov
mov
shll
xchg
mov
xor
push
outsl
pusha
sub
xor
adc
popa
dec
repnz
and
push
add
sbb
jne
inc
pusha
xor
and
add
push
add
dec
mov
pop
dec
daa
rcrb
add
jp
cmpl
pop
je
or
in
aaa
in
adc
test
hlt
imul
mov
and
shl
push
cmp
mov
test
jecxz
sbb
mov
adc
sbb
jl
jne
dec
sub
inc
hlt
ret
call
lea
out
pusha
push
ret
pop
inc
lret
test
pop
jne
imul
dec
movsl
shrb
or
cmp
push
and
and
scas
push
sbb
icebp
and
cmp
movsl
aad
lods
adc
push
or
scas
xor
xchg
sbb
idiv
fists
dec
pushf
nop
mov
cmp
jnp
and
loopne
dec
scas
and
xchg
mov
lock
inc
pop
sbb
aam
lock
inc
dec
or
mov
psubw
or
das
mov
push
lds
jle
lods
or
cli
dec
inc
fnstenv
stos
xor
adc
shlb
lock
nop
aaa
lahf
in
or
adc
addb
inc
mov
push
leave
push
xor
sub
jmp
push
ret
test
inc
sti
dec
xchg
test
add
dec
jmp
dec
ja
clc
ret
dec
or
jae
sub
lea
jle
xor
push
inc
aaa
mull
pop
lea
jmp
push
push
das
mov
inc
inc
pop
pop
push
sbb
test
testl
sbb
xor
adc
pop
dec
fisttps
sub
ljmp
pop
in
inc
fimull
xlat
push
inc
push
dec
or
sub
pusha
adcl
jl
pusha
add
xchg
xor
inc
add
mov
inc
mov
add
push
sbb
daa
add
or
mov
push
sbb
mov
sub
adc
dec
nop
lods
inc
mov
xor
nop
cmp
pop
sub
push
ficompl
mov
dec
clc
push
dec
mov
loope
sub
push
or
inc
add
jmp
repz
sbb
dec
inc
fcmovbe
fimuls
sub
mov
mov
pop
dec
mov
sbb
inc
inc
shrl
in
push
scas
xlat
pop
xchg
js
repz
cmp
xor
xlat
sbb
push
push
xorl
push
stos
sbbl
or
and
push
test
jecxz
pop
pop
fwait
ljmp
dec
test
push
dec
mov
add
push
cmp
push
fdivrp
push
sbbb
jmp
movsb
xor
pop
jae
pop
cmpb
cmc
insl
adc
add
xor
pop
jge
clc
mov
add
rolb
int3
into
rclb
add
xchg
push
pusha
add
push
push
iret
push
clc
mov
pop
mov
sub
pop
dec
mov
dec
pop
clc
push
mov
repz
cmpl
jo
pop
sahf
movsl
inc
mov
or
loop
movsb
adc
or
push
insb
xchg
sub
dec
xorb
push
int
ret
fmuls
dec
shr
inc
fisubl
es
mov
sahf
data16
push
fidivrs
inc
mov
jo
mov
or
push
adc
fdivl
push
sub
enter
push
icebp
fistps
sbb
ficoms
repz
movsb
lret
cmp
xor
jle
cld
out
dec
cld
out
jmp
add
loop
and
movsl
sub
dec
es
xor
pop
pop
in
fisubs
lea
xchg
mov
sub
add
jae
push
and
and
faddl
push
xor
ret
sub
cmpsb
cmp
cmpsb
cld
daa
test
leave
in
or
xor
mov
lods
jno
mov
dec
mov
mov
push
push
push
pop
repz
push
xor
pop
mov
adc
rclb
cmp
pop
rcrb
cmc
cmp
and
xchg
call
adc
mov
cwtl
jmp
push
jg
lods
clc
repz
cmp
outsb
or
out
pop
arpl
aaa
add
rolb
bound
ret
push
out
mov
pop
sub
arpl
xor
mov
ljmp
outsb
push
or
add
leave
cmpsb
cmp
test
or
xor
push
inc
or
cmpsl
jns
jns
xor
and
in
sbb
pushf
and
cmp
test
ret
dec
adc
mov
xor
xor
shrl
xor
jne
adc
mov
dec
mov
dec
pop
cltd
mov
inc
ja
test
xchg
or
cmp
dec
pushf
inc
inc
dec
dec
xor
sbb
or
jns
cmp
or
adcb
adc
pop
and
test
xor
dec
sub
subb
mov
or
enter
mov
lret
lea
xor
nop
jo
insl
push
cli
and
mov
mov
stc
addr16
cmp
or
pop
popa
mov
scas
and
in
push
orb
push
pop
or
jae
aaa
ljmp
call
push
fcom
push
fs
test
lock
addr16
xor
les
inc
add
pop
test
das
je
push
sub
insl
iret
rclb
and
into
sub
lods
xchg
inc
rorl
int
loopne
lock
mov
lods
fs
push
test
rorl
lea
addl
insl
sbb
inc
lods
sbb
mov
lea
jae
push
jb
sub
sub
leave
xor
xor
or
sub
sahf
lods
es
mov
imul
mov
shll
push
add
mov
cld
cltd
pop
shlb
push
cmpsb
out
cwtl
mov
popf
or
push
or
mov
adc
inc
daa
push
mov
insl
pusha
add
xorb
int
push
and
icebp
or
les
mov
add
movsl
dec
sub
push
push
nop
xor
lea
movsb
or
or
in
adc
loope
pushf
xor
inc
mov
adc
cmp
push
or
xor
inc
mov
inc
add
pop
adc
mov
cld
bound
shrb
push
xchg
adc
cmc
rolb
or
adc
jg
popa
stos
enter
and
movb
xchg
push
es
adc
cltd
xchg
or
sub
or
leave
xchg
mov
and
testl
test
test
ds
shlb
mov
fsubrs
sbb
in
xor
pop
pop
test
or
addl
out
lods
or
imull
div
add
movsb
sbb
add
insb
dec
sbb
jns
test
jecxz
inc
xor
jp
xchg
xchg
push
sub
loop
jne
lea
mov
movsl
pop
cmpsl
add
orl
xchg
sub
dec
and
push
mov
int3
insl
lahf
sub
lahf
hlt
push
xor
rcll
push
shrb
sti
sub
icebp
in
lods
andl
sbb
mov
and
pusha
mov
push
fwait
mov
inc
lock
adc
repnz
ss
outsl
and
sbb
fucomp
pop
cmp
mov
and
shlb
inc
pop
jae
jne
nop
sub
fstps
dec
cmpsb
and
push
dec
lcall
aam
inc
cmp
xchg
jp
hlt
jge
in
popf
cld
icebp
mov
cs
sub
stos
in
in
mov
mov
enter
inc
aas
movsl
sbb
mov
lods
cltd
xchg
xchg
mov
or
rol
push
jo,pt
add
fdivrs
rcrb
imul
test
mov
insl
inc
rcrb
dec
flds
test
jb
or
pusha
mov
test
insb
int
cs
pop
xor
and
das
mov
mov
sub
push
dec
sub
pop
dec
sbb
movsb
sub
lret
shl
push
sub
xchg
fisubs
cmp
push
xchg
popf
orb
movsb
scas
jecxz
les
pop
push
xchg
bound
sub
inc
hlt
adc
or
add
pop
sub
sub
loope
mov
in
inc
mov
outsl
bnd
inc
out
adc
lcall
mov
stos
jecxz
rcll
in
cmp
add
push
xor
add
addl
xor
and
dec
mov
mov
imul
push
pop
inc
jo
push
pop
dec
movsb
push
or
mov
mov
dec
add
add
lds
movsb
xor
ret
xchg
add
lret
sti
pop
aaa
ret
push
pop
rcrb
adcl
sets
push
lods
or
js
or
inc
cli
xchg
out
push
push
or
jno
cmp
int
cmp
inc
pop
and
inc
jns
jp
add
push
and
mov
sarb
sbb
lods
sub
or
out
dec
push
ret
pop
adc
xor
outsl
stos
ret
cmpsl
add
lcall
test
loope
add
movzwl
add
pop
dec
movsl
loopne
pop
sbb
mov
movsb
shll
fstp
pop
aaa
or
inc
sbb
inc
or
jae
lret
pushl
rcrb
jnp
xchg
push
fisttpl
xor
lods
jns
cmp
jne
sbb
popa
mov
push
cmp
insb
push
jnp
or
adc
jo
cltd
push
push
jp
mov
insl
mov
xor
jno
popf
add
xor
bound
mov
add
mov
mov
sbb
inc
jg
cmpsl
data16
xor
insb
les
or
or
mov
movaps
movsl
imul
or
insl
out
gs
xlat
sbb
push
xor
outsl
or
sarl
rol
push
inc
pop
mov
mov
mov
jb
adc
loopne
repnz
cmpsb
int3
sbb
pop
jle
loopne
nop
repz
in
pop
loope
inc
clc
inc
loop
mov
xchg
sub
inc
ret
add
or
insl
adc
in
and
lcall
les
mov
aam
outsb
inc
clc
xor
jbe
jno
push
mov
mov
pop
pop
movnti
mov
adc
sbb
adc
aam
scas
cmp
and
pop
xor
pushf
pop
add
faddp
push
mov
xor
mov
das
xlat
pop
jo
sub
jae
cltd
insb
xor
arpl
aam
dec
mov
and
ss
push
or
repnz
test
pop
insl
sbb
bound
out
adc
sbb
inc
jmp
cmpsb
outsl
push
pop
add
repnz
lahf
inc
add
sbb
adc
and
pusha
push
lds
cwtl
xor
adc
adc
daa
stos
jno
jecxz
test
pop
popa
add
sub
xchg
sub
loop
jl
es
lods
jb
out
adc
sub
scas
jns
das
mov
sbb
icebp
push
xor
xchg
sbb
rorl
sbb
cli
inc
sub
dec
sub
daa
pop
pop
push
nop
popa
xchg
xor
xor
popf
arpl
xchg
loop
filds
sbb
stos
das
pusha
stos
dec
ds
inc
es
push
mov
sbb
ja
xchg
ss
mov
aaa
hlt
insl
pusha
or
xchg
movsl
pusha
inc
loop
push
dec
adc
cmp
icebp
lea
push
jmp
aaa
add
out
mov
jns
dec
inc
sbbl
mov
sub
cmp
sbb
out
and
add
aad
cmp
inc
push
outsb
sbb
xorb
outsb
pop
push
outsb
xchg
pop
nop
stos
and
or
or
or
ds
jo
jmp
and
mov
and
add
mov
add
insl
xchg
sbb
sarl
out
add
pop
push
or
nop
xchg
add
clc
in
push
pop
mov
push
icebp
add
subb
rcll
inc
mov
jge
fucomip
pop
nop
or
push
push
mov
mov
mov
into
add
aas
movsl
xor
out
push
xor
push
mov
or
ss
scas
jp
int
inc
push
adc
push
and
stos
movsl
push
sbb
enter
jmp
xor
add
and
sbb
enter
adc
je
xchg
dec
dec
mov
das
mov
inc
and
mov
sub
adc
sti
add
ret
xchg
add
sbb
dec
cmp
testl
sub
or
mov
cmpsb
sbb
xor
lds
mov
stos
mov
test
cmp
pop
mov
mov
shr
push
sbb
and
js
mov
inc
inc
or
pop
or
cs
ret
adc
inc
xor
lahf
mov
in
jne
and
or
loope
sub
test
xchg
sbb
adc
inc
dec
mov
jg
aam
inc
in
push
adc
mov
aam
or
pop
in
add
inc
mov
add
fcmovbe
adc
pop
inc
frstor
adc
and
or
sti
push
icebp
jl
jmp
jecxz
aaa
sbb
nop
mov
adc
incl
mov
mov
pusha
and
inc
or
into
inc
push
popa
ss
or
or
mov
cmp
sbbl
outsb
push
adc
fisttpll
dec
xor
inc
mov
je
cs
sbb
dec
mov
mov
and
loopne
add
call
popa
push
mov
xchg
enter
cmpl
stc
or
or
dec
pop
stos
in
mov
push
jae
in
jnp
les
xchg
out
inc
cmp
es
hlt
adc
sbb
je
or
and
or
pop
add
push
jle
jne
sub
out
das
fcomps
mov
push
adc
sub
adc
jg
mov
cmp
int3
rcrb
pop
dec
sbb
test
scas
ss
mov
sbb
add
push
shl
xor
cmp
je
or
adc
push
pop
loop
popa
pop
ret
mov
add
and
mov
insl
fs
icebp
or
into
nop
sahf
imul
jnp
mov
lods
mov
mov
jnp
jbe
sub
sub
or
adcl
add
push
pop
push
push
push
sub
ds
pop
lret
fs
mov
cmpxchg
inc
push
push
fnstcw
out
inc
sbbb
sub
pop
andl
mov
xor
ret
pop
sbb
jecxz
lret
cwtl
pop
mov
testb
inc
jl
xchg
sahf
pop
subb
daa
push
or
inc
stc
jb
inc
xor
and
mov
rclb
outsb
in
sub
setp
pop
aas
push
add
xchg
or
sbb
or
call
and
cltd
into
cmp
call
mov
outsl
aam
pusha
add
das
fnsave
and
das
mov
sbb
or
rorl
lock
mov
pop
xor
iret
push
sub
lea
push
lods
or
add
sbb
sbb
adc
sbb
push
leave
ret
fwait
cs
hlt
inc
add
xchg
adc
mov
add
test
push
roll
mov
cmp
sbb
mov
cwtl
push
fucom
pop
fcoml
fcom
adc
mov
ret
adcl
outsl
es
ret
mov
test
or
fwait
lret
dec
pop
mov
fisubs
jmp
into
test
push
aas
and
addr16
stos
jne
pop
adc
ret
xchg
loop
add
push
and
lahf
fistpl
sarb
fbld
jbe
dec
push
pop
or
or
aam
xchg
or
add
xor
mov
ret
popf
dec
les
cmpsl
xchg
xor
xor
xor
mov
inc
adc
bnd
mov
pop
in
pop
ret
adc
jne
and
sbb
or
clc
xchg
fwait
sbb
cltd
or
add
pop
popf
adc
cmp
pusha
push
pop
mov
xor
in
jb
inc
and
test
jmp
push
jbe
movl
lods
inc
push
ja
inc
movl
call
adc
pop
sti
push
and
add
and
scas
jge
pop
cmp
and
sub
cmp
fiadds
test
push
cmp
fidivl
adc
sbb
push
mov
mov
sbb
or
xchg
lds
adc
adc
loopne
push
cmp
outsl
adc
sub
adc
push
mov
push
rcrb
add
pop
adcl
in
fisttpll
int
mov
pop
in
data16
insb
pop
add
lea
fsubs
data16
mov
sbb
pusha
stos
cmpsb
xor
adc
mov
pop
decl
fstl
sbb
shll
rcrl
mov
jle
push
mov
and
jmp
xchg
xor
jle
vmovddup
adc
cmp
push
cmp
jle
cmp
fisttps
push
cmp
cmp
cmp
mov
mov
and
inc
jmp
repnz
movw
xchg
ljmp
hlt
sahf
cld
les
dec
fwait
inc
or
fs
pop
idiv
xchg
test
rolb
adc
xor
mov
sbb
lods
ficoml
cmpsb
or
bound
cmp
in
jnp
icebp
test
mov
add
test
sub
dec
outsl
call
mov
popa
or
hlt
repz
lea
mov
xorl
arpl
sub
and
aaa
dec
xlat
or
mov
movsl
or
cmp
jb
adc
and
xchg
lret
adc
inc
sub
push
xor
mov
cmp
push
cmp
mov
int
xor
xchg
xor
sarb
mov
add
orb
insl
lock
dec
jb
push
dec
jb
popf
rorl
dec
or
pop
mov
pop
pop
pop
pop
or
roll
or
mov
pop
leave
and
shlb
or
add
dec
and
daa
and
ss
push
push
rclb
insl
or
in
or
jno
jbe
andb
je
mov
add
sarl
xor
pop
mov
pop
adc
adc
mov
dec
xor
pushf
xchg
bound
sbb
arpl
data16
inc
nop
mov
push
sub
rclb
and
xchg
and
or
xchg
shlb
pop
cwtl
push
lcall
rcl
dec
and
dec
add
xchg
popa
and
push
pusha
push
sahf
popa
ret
mov
fs
rcr
jne
push
or
jecxz
rcl
adc
int3
add
inc
subb
ficompl
push
lock
and
sbb
fdivrs
and
sbb
sub
sub
sbbl
test
jg
ss
mov
sbb
stc
adc
in
pop
test
push
outsb
and
xchg
sub
loopne
mov
push
fstl
and
ljmp
push
inc
pop
mov
sub
dec
adc
bound
push
fsub
cmpsl
std
cmp
mov
test
hlt
mov
cmp
push
add
add
orb
je
popf
adc
add
adc
or
orb
leave
adc
and
mov
pop
add
adc
pop
add
or
add
hlt
inc
or
adc
test
mov
xchg
sbb
dec
test
loopne
push
inc
push
shrl
cmp
dec
insb
pop
mov
and
xchg
jge
xor
lret
mov
jo
adc
loope
mov
stc
fwait
inc
repnz
jae
pop
xor
out
stc
add
push
rol
je
mov
sbb
push
mov
mov
pop
push
and
sbb
sbb
push
add
js
add
push
adc
sbb
icebp
or
add
fimuls
enter
jne
lea
add
cmc
add
xor
push
icebp
xchg
fsubl
mov
lock
repnz
shrb
lods
mov
cmpsl
cmpsl
cmp
or
aam
lds
adcl
add
push
stos
das
in
add
sub
lock
enter
fistl
sbb
pop
or
and
or
cmp
or
in
mov
add
ljmp
jbe
lea
mov
add
outsl
add
jp
sbb
add
pop
sub
arpl
addr16
sub
popl
repz
and
sub
shlb
and
pop
add
sbb
sar
inc
push
call
push
fsubs
mov
out
cmp
adc
stos
push
js
lock
aad
pop
push
loopne
adc
pusha
or
pop
les
sbb
in
aad
mov
push
popa
stos
out
ret
cmp
jne
stc
push
insl
lea
ret
adc
into
push
popa
xchg
mov
subl
add
adc
pop
xlat
and
fildl
lea
cltd
xchg
xor
loopne
adc
inc
push
icebp
pop
adc
daa
fadds
sub
xor
enter
add
repz
pop
clc
or
push
xchg
dec
add
push
adc
dec
cmp
stos
loopne
pop
pop
adc
test
add
push
imul
or
adc
xor
notl
out
je
adc
aaa
inc
xchg
inc
push
fdivl
mov
add
mov
loop
mov
inc
and
push
pop
fldcw
and
shl
add
sub
inc
add
inc
inc
jl
dec
loop
test
xchg
testl
sub
das
add
push
mov
inc
push
ss
inc
inc
push
std
ret
out
and
popf
push
mov
xor
mov
aaa
je
mov
out
sarb
add
jge
js
jne
sub
insb
movsb
pop
inc
sbb
or
xchg
movsl
sub
push
dec
call
mov
dec
fldl
loopne
les
clc
inc
fidivl
enter
movl
pop
push
push
fldl
push
sbb
mov
add
fstpl
and
fsubrl
in
mov
fstpl
xor
pop
cmc
decb
fbstp
mov
jo
jnp
xchg
add
and
add
dec
clc
loope
fsubrp
pop
aaa
push
cmp
push
inc
repz
insb
jns
repnz
sbb
mov
in
ret
jb
dec
ss
test
iret
and
cwtl
jbe
mov
dec
add
dec
pop
ss
lods
outsb
testb
or
xor
fwait
scas
aam
nop
mov
ss
sub
adc
or
shll
jbe
imul
mov
jge
or
neg
subb
clc
add
test
pop
loop
pusha
pop
xor
insl
dec
mov
popa
bound
popa
movsl
jo
xorb
shrb
add
jnp
ja
and
lock
mov
js
bound
fcmove
ret
and
dec
pop
push
rcrb
sbb
jp
add
add
push
pop
cltd
push
pop
fnsave
jnp
sbb
add
or
add
ret
push
daa
and
mov
jb
pop
add
leave
shld
add
ja
jb
clc
lahf
add
ss
push
inc
mov
push
add
push
je
lods
roll
or
add
mov
std
ds
leave
adc
mov
push
adc
push
push
pusha
pop
addb
int3
or
or
cli
adc
push
push
push
fiaddl
dec
pop
pop
dec
leave
adc
dec
arpl
dec
pushf
push
mov
fmuls
dec
push
sub
cmp
mov
shlb
shlb
push
testb
notb
add
adc
sub
pusha
call
sbb
sub
dec
inc
cmpw
jne
mov
cld
mov
adc
inc
inc
cld
cmp
sti
mov
jmp
push
push
jl
mov
mov
aad
repnz
cmp
or
push
loopne
enter
push
cld
mov
push
push
push
clc
jmp
push
push
pop
in
jnp
mov
xor
xlat
int
mov
push
orb
inc
xor
jb
roll
sbb
ds
mov
ret
lcall
add
sbb
insb
aaa
jle
sbb
inc
add
cmp
sbb
mull
jnp
fwait
jp
std
and
je
mov
add
enter
jbe
xchg
ja
xor
movsl
adc
push
movsl
jnp
fld
sub
cmp
loopne
cld
rcll
pop
js
sbb
fxch
pop
movsl
sahf
pusha
adc
dec
adc
test
pop
pop
and
xor
pushf
shr
jmp
push
or
movsb
std
mov
test
pop
xchg
xchg
lock
xor
movsb
xchg
pop
nop
in
aaa
mov
pop
sub
rcrl
pop
js
test
or
rolb
pushf
stc
es
push
test
mov
lret
xchg
add
lock
pop
xlat
andl
add
inc
sarb
push
add
push
lods
mov
adc
pop
sbbl
fisubl
pop
je
arpl
ds
fwait
pop
ret
pop
add
dec
cmpsb
add
aam
mov
ja
jne
nop
xchg
sbb
cmp
push
rclb
xor
push
xor
or
jno
aaa
fwait
repnz
mov
xchg
xor
int
fs
ret
test
mov
jb
xchg
push
ja
in
or
and
mov
sbb
pop
fidivl
xor
sbb
fstpt
pop
sbb
cmc
loopne
repnz
cmpsb
repz
in
push
je
imul
or
test
pushl
sbb
add
jecxz
push
rep
nop
push
int3
test
add
movsl
push
sbb
or
loopne
subl
push
jo
hlt
dec
push
sbb
mov
adc
pop
movsl
pop
aam
int
orb
loopne
cli
movsl
psrad
aas
icebp
xor
movsb
ret
mov
or
std
push
lods
inc
pop
rclb
test
push
ja
xor
add
mov
push
jmp
pusha
jmp
jno
outsb
daa
mov
jge
ljmp
icebp
and
xor
out
jle
inc
mov
fs
add
add
sub
jg
je
dec
je
add
sbb
dec
jne
dec
mov
push
push
in
push
xchg
or
dec
pushf
or
jge
cmpsb
push
push
sarl
or
mov
sub
push
test
in
mov
push
xchg
out
cmp
jnp
cmpl
mov
inc
mov
cmp
hlt
push
push
push
in
inc
push
andb
adc
push
cmp
nop
fs
enter
leave
inc
or
push
pop
push
push
stos
mov
out
sub
push
adc
fs
xchg
or
nop
inc
push
cmp
xchg
inc
push
cmp
lods
enter
xor
or
dec
fs
enter
sarb
xchg
call
inc
push
cmp
subb
lock
and
mov
call
fs
xlat
insb
loope
jmp
decl
gs
repz
adc
cmp
repz
pop
orl
mov
iret
repz
rcr
out
sti
add
nopw
sub
jns
dec
push
pop
imul
jge
fwait
xchg
sbb
stos
jo
inc
aaa
push
pop
aam
call
imul
xchg
shl
lret
ret
dec
dec
lock
mov
and
pushf
xor
nop
sti
fwait
ret
dec
je
xchg
int3
repz
cmpl
pop
int3
hlt
fisubs
rol
jno
or
xchg
xorb
mov
aam
fwait
jmp
jl
mov
shrb
lcall
test
es
push
and
out
fcompl
test
test
mov
fmull
fisttpll
add
lods
pop
faddl
dec
or
push
mov
pop
movsb
and
xor
sbb
loope
int
sbb
in
fs
test
adc
mov
test
and
mov
adc
pop
roll
sbb
mov
dec
mov
cmp
cmp
cmpb
jge
jge
movsb
pop
push
cmp
push
push
hlt
cmpsl
sub
shl
add
dec
out
dec
mov
adc
fcompl
xchg
fistpll
mov
shll
sub
ja
or
and
insl
xchg
lea
daa
jns
or
push
xchg
je
push
add
cmovnp
enter
add
cmp
sarb
sub
adc
cltd
fadds
shrb
pop
dec
cmpsb
cwtl
nop
xchg
adc
rclb
or
mov
pop
jnp
cmp
or
mov
orl
test
cmp
cmp
xlat
pop
push
adc
imul
mov
jge
cmpb
or
mov
xchg
pusha
mov
pop
xchg
mov
push
inc
xchg
and
stos
pop
enter
out
in
mov
mov
mov
pop
adc
xor
jp
rcll
hlt
adc
mov
push
lea
fildl
push
mov
dec
leave
sub
int3
mov
mov
dec
mov
mov
add
cmp
mov
add
icebp
push
dec
jp
jmp
fisttpl
fidivl
imul
cwtl
fwait
dec
mov
out
cmpsb
xor
push
cmp
push
and
cmp
push
das
mov
fisubrs
insb
push
pop
jl
rcrb
jp
mov
cmpsb
and
mov
dec
inc
mov
insb
mov
push
jle
icebp
xor
es
and
mov
xor
sbb
dec
lcall
dec
lcall
dec
lcall
dec
lcall
ss
sbb
add
popa
mov
add
popf
mov
test
jl
mov
hlt
stos
mov
test
into
mov
addl
push
insb
xlat
incb
mov
mov
sbb
repz
sbbl
cmpsl
cmp
enter
or
push
pop
ret
in
vmread
ljmp
pop
decb
loopne
rolb
imul
mov
sbb
gs
add
fs
stos
ror
sbb
in
push
cltd
sbb
and
mov
mov
or
dec
jns
sbb
js
lea
inc
rcrb
sub
sbbl
sbb
es
test
xor
test
and
jge
or
xor
addl
cmp
inc
mov
push
mov
cmp
pop
push
mov
cmpsl
mov
mov
mov
xchg
push
xchg
sahf
xor
rcrl
xchg
sbb
add
popf
pop
rorl
mov
lea
test
rorl
pop
test
adc
sub
cmp
int3
lods
addr16
xchg
cmp
mov
sub
xor
movsb
jo
jp
aas
push
adc
inc
test
es
imul
es
and
bound
in
aaa
loope
orl
dec
enter
ss
push
cmp
nop
adc
push
sbb
push
inc
or
pop
sbb
inc
and
ret
inc
mov
in
adc
sbb
push
push
outsl
into
ret
sub
xchg
jo
scas
movsb
adc
add
jno
pusha
and
inc
inc
mov
dec
pop
pop
mov
test
and
xlat
shlb
inc
adc
lock
adc
outsl
mov
jmp
push
sub
ljmp
stos
mov
in
sub
mov
dec
fcoml
movsb
mov
dec
dec
popf
and
and
and
push
cmp
pop
sbb
push
mov
test
sbb
iret
ja
lods
mov
lret
and
movsl
shlb
sbb
pop
sub
test
jne
or
pusha
mov
xor
clc
test
push
popa
or
mov
sbb
xor
push
nop
pop
and
or
xor
mov
fimull
aam
or
xor
and
jl
sbb
and
add
loop
call
imul
pusha
nop
sbb
push
and
push
xchg
ret
push
arpl
push
in
in
mov
jne
inc
aas
jo
and
mov
or
cltd
outsb
dec
repnz
mov
cmp
mov
js
gs
jl
add
enter
scas
jne
test
or
dec
sahf
inc
sahf
nop
push
call
lcall
dec
sahf
fsubl
adc
adc
inc
repz
or
add
xor
add
and
pop
mov
jns
adc
push
inc
test
adc
push
mov
pop
push
enter
fidivl
sbb
mov
in
push
adc
int
negl
lods
fwait
push
mov
scas
pop
xchg
lods
sbb
test
mov
pop
imul
enter
push
mov
imul
cltd
nop
data16
mov
mov
and
mov
orb
ret
adc
imul
inc
cmp
mov
nop
dec
dec
fs
pop
cmp
mov
inc
test
sbb
nop
adc
push
outsl
inc
sbb
cwtl
xor
int
pop
pop
push
inc
popa
sub
pop
int3
adcl
inc
mov
addr16
dec
adc
adc
mov
movsb
pushf
xchg
pusha
nop
jno
mov
lods
shlb
test
out
mov
and
je
movsb
cltd
or
add
or
pop
sbb
leave
inc
sbb
popa
push
fwait
popa
xor
xor
or
sbb
and
les
inc
pop
lret
xor
pop
inc
mov
addb
inc
xor
loopne
outsl
imul
or
push
rorl
repnz
test
push
and
cld
icebp
sbb
inc
xor
jo
out
adc
dec
cs
roll
sub
sbb
jge
faddl
add
mov
or
lahf
movb
lods
add
mov
shlb
cmpb
adc
outsl
or
aad
sub
sbb
divl
adc
sub
inc
or
push
mov
or
data16
sbb
adc
mov
or
imul
mov
test
jle
sbb
setb
inc
icebp
push
popf
sub
push
mov
xor
loop
mov
dec
sub
pop
fmuls
xor
leave
push
mov
ret
cmp
fdivrl
and
push
mov
arpl
inc
ret
loope
mov
mov
adc
enter
adc
mov
inc
pop
dec
repnz
sub
mov
mov
or
rcrl
aam
sbb
fstpl
or
fs
fiaddl
imul
pushl
in
popa
add
push
xchg
mov
xchg
cltd
aaa
cmpsl
xor
jl
ror
mov
sahf
jge
pop
dec
xchg
orb
nop
pop
and
fwait
and
mov
adc
and
push
sub
test
and
and
movsl
pop
and
jl
andl
sub
push
pop
es
sub
pop
daa
push
fs
sub
mov
sub
and
lods
enter
xor
pop
insb
sub
dec
dec
movsl
pushf
shrb
dec
movsl
pop
loopne,pn
dec
cmp
mov
lea
mov
in
dec
dec
xlat
addb
and
je
dec
pop
adc
insb
mov
notb
clc
pop
inc
push
cs
or
popa
xor
fisttpll
loop
dec
popf
das
cmp
rorl
or
shlb
inc
lcall
movsb
cltd
sub
or
mov
movsb
cltd
nop
fs
push
and
movsb
cltd
nop
and
lcall
mov
pop
cwtl
push
or
movsb
nop
sbb
sbbb
sbb
xor
shlb
sbb
mov
int
sbb
pop
mov
dec
dec
rclb
movsb
loop
sbb
sahf
cmp
adc
rorb
mov
rcr
push
js
in
orl
add
les
andb
stos
pop
shll
mov
aaa
gs
xor
cld
rcl
int3
movsb
adc
icebp
fdivrs
sbbb
jle
cmp
or
and
bndstx
dec
cwtl
mov
jns
push
imulb
pop
jecxz
repnz
pop
and
scas
aam
xor
shll
sbb
pop
or
and
pop
jg
test
cmp
xor
fimull
and
push
jmp
xchg
cmp
cmpsb
adc
sub
and
sub
inc
inc
fnstenv
cmovns
ret
ss
dec
inc
and
pop
mov
inc
cmp
popf
mov
push
inc
or
cmp
shlb
cmc
xchg
pusha
jl
mov
push
movsl
daa
xchg
lock
decb
call
jae
cmp
lcall
cmp
adc
inc
dec
test
cmp
rcrl
stos
add
popf
ljmp
push
jo
fs
add
test
repz
lods
imul
outsb
addr16
mov
movsl
ja
test
cmp
sub
test
aam
mov
std
add
addr16
jmp
in
add
mov
stc
aad
mov
ror
pop
lret
mov
add
jl
fidivrs
test
arpl
pop
inc
adc
mov
je
inc
xor
repnz
cmp
inc
andl
sub
push
cmp
cmp
outsl
sarl
push
push
clc
or
push
jbe
add
sub
ret
or
call
xchg
mov
mov
lcall
jb
adc
and
xor
pushf
lea
and
inc
cmp
loopne
cmp
sbb
push
lock
jbe
mov
xchg
cmp
jne
inc
add
mov
jl,pt
dec
lods
or
push
addb
mov
mov
test
push
or
iret
jne
mov
sub
add
pop
shl
cmp
jae
inc
adc
cmp
loopne
sub
call
jmp
rorl
add
or
scas
in
cmpsb
adc
mov
ret
adc
inc
and
test
jecxz
inc
add
sbb
adc
daa
inc
add
dec
jnp
roll
xchg
mov
mov
or
jne
mov
xlat
aad
pop
inc
js
dec
or
ds
jne
call
mov
push
loopne
sbb
imul
adc
rcll
add
in
ds
pop
adc
lret
jo
sbb
push
sbb
and
mov
add
dec
pop
inc
jbe
xchg
pop
push
jo
jl
sbb
cmpsb
sbb
sub
fmuls
xchg
data16
daa
ret
xchg
sbb
pop
push
jmp
shl
adc
inc
enter
imul
xchg
jae
sti
decl
add
ds
jl
or
je
adc
jg
je
mov
inc
jmp
movzbl
movb
movsbl
shr
mov
aaa
pop
mov
and
mov
nop
inc
mov
addl
xchg
clc
mov
test
jo
cmp
pop
cltd
ret
inc
pop
nop
bound
mov
mov
loop
cmp
test
push
mov
hlt
pop
adc
fiadds
pop
dec
push
mov
jnp
adc
shrb
lods
rorl
orl
in
mov
push
xor
outsb
inc
ss
add
mov
pop
cmc
ss
mov
sbb
xchg
lock
pop
addb
cmpb
je
dec
fisttps
in
add
in
push
mov
pushf
inc
lret
popl
wbinvd
jae
xchg
inc
pop
pop
cmp
sbb
fadds
xor
adc
jne
stos
lret
pusha
push
jnp
push
add
enter
je
cmp
cmp
addr16
dec
and
jecxz
outsl
loop
add
mov
sbb
mov
push
mov
mov
add
sbb
data16
xlat
fildll
outsl
test
ficomps
testb
pop
jp
inc
xchg
imul
inc
mov
jbe
xor
jno
xchg
dec
arpl
int3
push
dec
loopne
rorb
mov
flds
loopne
xor
sub
dec
imul
nop
sbb
sbb
mov
loope
push
push
dec
push
xor
bnd
jne
out
scas
mov
cmp
or
adc
popf
xchg
aad
orb
fistpll
ret
pop
lock
xchg
rolb
pop
add
pop
sbb
sub
or
jg
outsl
sub
jle
dec
sub
mov
xor
xor
cli
call
sbb
mov
xor
and
jmp
cmp
add
lret
xor
mov
sbb
flds
xor
fs
ss
loop
mov
dec
add
dec
loope
xchg
jl
cmp
lea
cmp
add
pusha
adc
xchg
roll
in
insl
orb
pop
clc
fnstenv
inc
mov
pop
popl
sub
dec
pop
dec
sub
or
nop
lods
dec
add
sbb
test
xchg
sbbb
leave
cmp
adc
jbe
sub
sbb
fadds
sbb
aad
xchg
sar
test
inc
mov
or
add
aam
inc
mov
out
mov
sub
cmp
inc
gs
sub
or
sbb
dec
add
pop
loope
sbb
jbe
test
fcomps
cmp
aas
cvtdq2ps
xorb
shrb
movsb
es
adc
pop
stos
fstpt
jecxz
cwtl
cli
jne
dec
mov
xchg
or
fmuls
xchg
cld
or
xchg
test
inc
rol
xchg
fldl
out
out
out
pop
push
test
fistps
lea
aaa
xchg
and
jle
cmc
xchg
jno
in
movsl
adc
sub
loope
dec
add
out
dec
pop
jl
or
addl
fcoms
adc
andb
dec
fmull
and
sub
cmp
rorb
dec
in
popa
fmuls
inc
dec
hlt
push
inc
sbb
add
add
and
stos
add
nop
add
fsub
or
cmc
inc
movsl
js
fstpt
mov
pop
stos
int3
enter
lock
sbb
cmp
lea
sarl
xchg
int3
repz
roll
mov
aaa
add
add
dec
push
add
and
cltd
or
add
or
bound
fistl
clc
jge
nop
test
adc
cmp
andb
sbb
sbb
xor
add
cmp
dec
xor
or
push
jne
pusha
push
jmp
inc
push
stos
add
and
dec
loopne
mov
mov
cmp
cmpsl
je
stos
mov
aas
pop
aaa
push
enter
push
rorb
cmp
notl
push
sub
and
add
jns
inc
sub
mov
cmp
enter
je
push
les
push
adcl
sub
call
adc
shl
shrb
in
mov
inc
or
in
loopne
add
or
test
push
add
sarb
mov
jmp
add
aam
dec
xor
sub
test
clc
loope
add
je
in
dec
add
sbb
xor
dec
adc
fistps
sub
cli
mov
xor
jne
je
mov
jbe
sarb
sarl
out
test
js
out
xlat
sub
sti
clc
jne
mov
adc
push
fadds
adc
cmpsb
xor
fsubs
adc
mov
sbb
jmp
cmpl
dec
adcl
enter
nop
rolb
add
push
enter
xor
mov
xor
xor
rclb
nopl
ds
notb
lea
dec
je
in
cmp
inc
jne
nop
sub
imul
pop
fsubrs
add
push
dec
xchg
add
cmp
daa
cmp
mov
or
scas
dec
shrb
xor
or
dec
popf
shll
xchg
call
rdtsc
xor
enter
fst
loopne
sbb
mov
xor
lods
bnd
or
aad
or
lret
clc
inc
das
je
aad
xchg
mov
dec
lea
lea
jns
jnp
and
into
outsl
das
mov
push
sahf
fcompl
lcall
cs
idivl
cmp
test
jne
es
pop
mov
pusha
clc
jb
jne
jno
ret
jle
add
mov
sbb
or
add
dec
or
dec
subl
lret
pop
sub
push
push
andb
cmp
sub
mov
addr16
sbb
icebp
mov
lea
jmp
call
add
rclb
mov
adc
in
decl
cli
mov
push
js
push
cmp
dec
mov
cmp
jle
test
arpl
pop
les
sahf
mov
enter
pop
pop
inc
add
inc
or
xchg
mul
cmp
push
xor
pop
jecxz
or
add
seta
movl
pop
out
jl
jle
mov
pop
jecxz
in
ret
ret
pop
pop
adc
mov
xor
stos
jo
fists
add
dec
je
int
pop
pop
push
fldl
hlt
dec
es
mov
fildl
hlt
cmp
adc
jne
out
jns
daa
bnd
adc
hlt
jne
or
sbb
out
jne
or
push
mov
sbb
xor
popa
subb
mov
and
mov
aad
loopne
adc
inc
sbb
add
popa
imul
xchg
adc
clc
int
inc
cld
mov
push
jl
mov
lea
fstpl
mov
dec
hlt
pop
lea
add
es
mov
sti
push
lcall
push
aaa
aam
sub
daa
mov
xchg
xchg
stc
sub
sub
shrb
hlt
int3
jae
mov
jnp
xlat
or
cmc
int3
dec
dec
sbb
lea
mov
pop
aas
or
clc
adc
in
les
or
add
sub
fdivr
add
shrb
loopne
data16
jb
adc
mov
add
jl
pop
mov
cli
and
shrl
imul
ss
xor
mov
inc
loopne
or
sbb
add
lea
adc
xchg
insl
mov
movsl
pop
call
jne
jmp
orl
dec
popa
cmp
pusha
pop
enter
xchg
test
in
sbb
mov
fs
insb
push
fs
push
jne
iret
push
repnz
xor
adc
and
pushl
pop
add
icebp
sub
out
mov
fsubp
xchg
xchg
mov
jo
js
scas
mov
jg
data16
js
data16
jae
mov
mov
loopne
or
fmuls
or
fldl
ror
inc
sbbb
pop
sbb
sbb
inc
test
lods
xchg
or
shlb
test
sarb
sahf
and
sub
or
push
enter
outsb
jmp
push
or
jb
clc
nop
adc
xor
mov
push
mov
rcr
inc
sbb
xor
lods
or
lcall
data16
and
imul
push
xchg
movsb
push
loope
mov
cmp
imul
insb
orl
mov
jnp
pop
cmp
push
in
push
adc
push
cmp
ret
bound
xorl
pop
sbb
fildll
cld
adc
dec
test
bound
mov
pushf
mov
or
add
pop
jns
pop
ret
dec
xorl
out
inc
xor
mov
test
pop
jnp
das
adcb
sbb
xor
int
push
dec
ror
inc
out
pop
fs
sbb
cmp
sbb
xchg
inc
adc
mov
mov
pop
inc
adc
push
sbb
loope
leave
and
lds
sub
xor
adc
push
sub
and
scas
xchg
pop
xor
push
sbb
lcall
and
daa
adc
inc
push
inc
and
sbb
sbb
mov
adc
pop
cmp
dec
pop
movb
lods
mov
and
inc
arpl
and
cmpsl
daa
and
add
fiadds
aaa
cmp
enter
push
lea
ret
das
add
push
dec
imul
mov
mov
inc
push
push
mov
je
inc
lcall
lods
inc
dec
arpl
xchg
pop
xor
dec
push
out
sbb
imul
rcl
push
mov
inc
inc
add
jo
shl
shll
or
mov
js
xor
and
js
inc
scas
jae
jg
dec
cld
jae
je
push
xchg
xor
mov
lea
mov
xchg
inc
mov
push
fmul
loopne
into
xchg
ds
sbb
adc
cld
inc
jns
js
adc
negb
adc
mov
test
leave
mov
push
or
or
test
sub
out
sub
add
adc
xchg
jge
repnz
hlt
fld1
mov
push
shrb
popf
cmp
add
rorb
xchg
mov
adcl
jne
jno
in
adcl
pop
loope
mulps
pop
inc
rorb
arpl
addl
fbstp
test
es
jecxz
inc
pop
mov
mov
pop
push
lock
inc
add
fmull
test
pop
inc
std
xor
sbb
and
cld
sbb
pop
popa
mov
roll
idivl
mov
sbb
dec
inc
fcomp
push
lcall
dec
adc
fisttpll
mul
pop
pcmpeqd
rolb
mov
rcrl
sbb
cmp
dec
jnp
out
sub
xchg
add
aaa
push
rorb
dec
sbb
orb
int
fs
aaa
mov
test
addl
push
xchg
sub
jne
pop
adc
iret
shrb
or
mov
push
jne
mov
incl
mov
jle
xor
int3
pop
cmp
imul
pop
pop
lock
xor
and
push
pop
lret
adc
lret
inc
cmpsb
pop
add
daa
fcoml
and
mov
and
jne
ja
xchg
adc
xorb
out
and
or
cld
ja
inc
je
push
ret
je
adc
insl
cmpsb
fisubl
stos
cmp
add
jle
addb
or
sub
adcb
xchg
mov
jecxz
sbb
out
push
pop
add
cmpsb
or
inc
jecxz
test
aam
add
loope
push
add
jbe
sub
mov
and
bndstx
cmc
mov
das
cltd
pop
jmp
out
je
je
lods
xor
call
adc
fisubrl
mov
xor
rcll
inc
sub
xchg
jne
inc
popa
sub
push
fnsave
inc
or
or
and
or
xlat
shr
xchg
mov
mov
lods
adc
xor
push
jno
arpl
aam
xor
xchg
shrb
test
pop
aad
inc
std
push
sub
mov
or
mov
sbb
popf
add
adc
mov
add
pop
mov
sub
adc
mov
pop
inc
or
es
push
or
dec
aad
xchg
fiadds
sub
or
fnstsw
add
push
mov
and
lret
mov
pop
adc
ds
cmp
in
add
lret
test
aaa
and
lea
and
sarb
dec
xchg
jno
push
push
popa
mov
ret
fisubl
js
push
je
movsl
ja
mov
fisttpl
xor
cmp
je
or
and
jb
rolb
sbb
sete
mov
clc
adc
int3
push
cmpb
ret
mov
jne
jae
movsbl
mov
add
sbb
mov
add
sbb
aaa
sbb
pop
jmp
enter
incl
jg
lea
and
dec
inc
sub
dec
jmp
shl
mov
incl
or
add
inc
cmp
jl
cmpl
test
scas
xor
cltd
and
add
sar
add
xor
xchg
adc
clc
jl
jae
xor
ss
cmp
jecxz
ds
add
jne
enter
cli
lret
shr
xor
mov
mov
dec
jne
add
mov
xchg
or
scas
cmp
lods
cmpsl
mov
add
push
mov
inc
lret
ljmp
jbe
enter
jo
shld
lea
jmp
sub
inc
adc
roll
push
and
idivb
cs
push
inc
ljmp
cs
jle
insb
aas
mov
fcmovnb
pop
pop
pop
mov
test
addr16
testl
add
dec
jne
imul
enter
test
loope
rcl
cmp
pop
aam
repnz
xor
repnz
add
movsb
dec
push
ret
or
inc
adc
notb
dec
mov
movsl
fs
es
dec
orb
sub
or
adc
or
movsl
mov
scas
ficompl
sbb
push
cmpsl
push
xor
in
push
xor
pop
or
andl
leave
or
repnz
in
sbb
fs
add
sbb
loop
pop
repnz
sub
and
add
push
sub
bound
mov
sahf
jecxz
lock
pop
push
jmp
imul
pop
mov
cs
or
inc
or
lods
cmp
lods
jmp
fmull
mov
in
pop
add
jmp
push
in
nop
in
add
in
dec
dec
add
call
les
pop
add
push
sbb
dec
mov
and
xchg
sub
loopne
dec
jnp,pn
inc
pop
call
sbb
pop
pop
mov
cmp
xchg
adc
lds
ss
jns
lret
jg
push
jnp
cmpsl
add
lds
fldcw
out
push
and
inc
ds
sub
push
jmp
add
mov
add
in
insl
mov
and
shl
shl
dec
je
push
pushl
scas
inc
pusha
xor
push
push
mov
fwait
cmp
mov
cmpsl
xor
jnp
mov
fistl
in
in
cmpsb
mov
adcb
loopne
and
lcall
pusha
mov
push
inc
mov
xor
nop
test
rorb
dec
or
rolb
push
dec
push
xchg
inc
ret
out
mov
mov
test
mov
add
int3
dec
bound
xchg
scas
pop
mov
loop
mov
mov
rolb
or
xchg
sbb
xlat
push
shll
adc
aad
lret
mov
ret
add
jno
in
ss
mov
push
pop
aam
jle
lcall
shrl
push
std
jne
loop
sbb
or
aaa
mov
daa
adc
add
mov
sub
jmp
cmp
sbb
ret
xchg
pop
mov
fwait
adc
add
add
int3
pop
mov
dec
int3
add
fwait
cmp
add
sti
icebp
aas
push
pop
cmp
mov
mov
jecxz
pop
lock
je
dec
fdivr
adc
cmpsl
call
out
pop
roll
das
rcl
adc
bound
sti
push
bound
xor
and
sbb
in
mov
mov
pop
mov
test
gs
mov
sub
iret
xchg
cmc
mov
xor
xchg
and
adcb
sbb
dec
aam
add
insb
and
mov
testb
cmp
jl
cwtl
loopne
fdivrl
pop
jge
inc
call
add
xor
mov
sbb
mov
push
daa
movsbl
add
sbb
insb
call
cli
or
scas
push
decl
mov
aas
inc
test
mov
sbb
test
sbb
lret
movb
mov
push
test
repnz
or
add
sbb
shlb
cmp
dec
cmp
mov
xchg
mov
repz
xchg
je
dec
push
roll
jg
inc
and
test
add
test
aaa
cli
test
aas
cld
les
jp
jmp
xor
lock
mov
js
jge
mov
sub
test
adc
add
cmc
add
enter
mov
sbb
inc
mov
lret
sbb
call
mov
rcrb
cmp
je
pop
int
add
fcos
mov
pop
sbb
or
xchg
mov
xlat
std
lock
mov
loopne
loopne
or
cmp
mov
adc
das
xchg
nop
imul
mov
or
add
jle
jl
hlt
mov
inc
push
dec
mov
mov
mov
push
xor
adc
add
movzbl
mov
roll
sbb
js
jl
dec
cmp
addl
insb
ljmp
iret
push
std
scas
mov
incb
mov
add
out
pop
or
mov
nop
bound
nop
add
or
jmp
pushl
xor
mov
inc
call
jne
pop
push
stc
icebp
and
stc
lret
pop
fwait
jb
sub
pop
ljmp
add
inc
mov
xor
mov
sbb
cmp
and
test
arpl
or
push
adc
test
add
in
test
in
icebp
jae
mov
sub
insb
xchg
sub
cmpsb
ds
inc
cmp
adc
inc
in
jecxz
adc
push
enter
popa
aas
and
ja
pushf
jne
call
lret
push
scas
fadd
pop
clc
and
mov
and
push
popa
imul
push
rorl
loopne
xor
adc
xor
in
lods
das
mov
jae
push
inc
mov
and
adc
add
jno
or
mov
and
fadds
add
cmpl
push
shrl
cmp
in
lds
mov
push
jns
add
xchg
mov
xor
shll
lcall
cwtl
pusha
aaa
sbb
mov
stc
sub
ss
rcr
lret
lea
enter
iret
jbe
xchg
aad
mov
jbe
mov
inc
xor
add
ret
imul
and
insl
mov
pop
pop
mov
mov
das
push
cli
sbb
adc
mov
lea
mov
sbb
test
jno
ret
or
cmp
ja
jp
push
add
lea
imul
push
call
push
push
pop
pusha
cmp
push
jmp
cmpsb
or
and
push
test
sbb
adc
mov
jmp
ret
and
enter
inc
int
cltd
jbe
add
xchg
jne
fldcw
inc
or
pop
sbb
push
fcmovnb
call
push
js
push
call
xchg
xchg
cmpsl
mov
lcall
or
sub
pushf
popa
xor
push
cmp
dec
ds
xchg
in
cmp
push
std
pop
adc
inc
cmpsb
mov
fists
add
rorl
or
int
mov
test
out
nop
pop
fcomps
mov
add
inc
fwait
or
jb
movsl
sub
addr16
add
movb
adc
jnp
cmp
int3
sbb
xchg
pop
movsb
notl
cmp
inc
sbb
inc
adc
adc
cs
sbb
and
loope
jp
insb
jae
add
mov
add
and
nop
adc
stos
sub
movsb
fsubrp
jecxz
mov
int3
loopne
mov
pop
shrl
cmc
sub
out
test
subb
xor
iret
pop
add
mov
inc
or
push
mov
shrb
inc
nop
pop
push
adcb
pop
xor
in
adc
fmull
mov
adcl
cmp
sbb
mov
loope
mov
adc
loopne
insl
cmpsb
cld
and
dec
sti
cmp
dec
mov
mov
push
je
sbb
call
add
jnp
test
data16
scas
add
push
aam
push
and
inc
loope
shrb
sbb
adc
jno
cmp
test
out
lock
outsl
fdivl
mov
je
inc
pavgw
hlt
nop
mov
dec
add
cmp
in
push
test
jl
mov
mov
mov
xchg
movsl
shlb
out
jg
cmp
mov
jge
loope
jp
push
push
dec
fwait
movl
aas
push
stc
xchg
rolb
or
cmp
rorb
in
faddl
js
pop
fdivl
test
inc
add
push
or
testb
in
or
sub
add
cmpsl
int3
sarb
mov
adc
xchg
mov
test
mov
lcall
add
add
test
sti
addr16
inc
ljmp
and
into
and
push
lcall
popf
dec
lea
pop
jns
out
int3
test
inc
or
jmp
sub
loopne
lcall
inc
loopne
rcrl
and
add
enter
inc
aad
dec
jmp
ja
pusha
fs
dec
jmp
push
dec
mov
adc
inc
scas
push
imul
sbb
movsl
sarb
xor
push
push
cmc
and
out
mov
dec
add
xchg
jne
xor
popa
aad
push
sbb
psrlq
into
mov
push
pushl
mov
dec
cmp
jle
pop
cmp
jbe
out
xor
ljmp
jmp
push
pop
push
sbb
mov
pop
cmp
add
sub
adc
mov
nop
cmpsl
or
push
mov
data16
std
mov
xor
sbb
pop
clc
jne
mov
push
cmp
adc
shrb
gs
jmp
pop
mov
leave
xchg
movsl
xchg
addb
test
rclb
xor
fcomp
cmp
jmp
push
imul
dec
ss
and
adc
push
call
cmp
sbb
and
and
add
add
fwait
jno
and
call
xchg
popf
mov
jns
pop
es
add
mov
testl
cmp
jae
inc
jmp
stos
mov
cmp
and
enter
lock
testl
xor
shrb
loopne
subl
bound
fisttpl
rcrl
pop
mov
mov
xchg
stos
push
sarb
push
pop
adc
xchg
mov
cmp
add
andl
sub
xchg
jge
fs
xor
add
xchg
and
add
insb
dec
cvttps2pi
sub
call
out
mov
xor
sbb
inc
testl
jae
in
pusha
inc
shlb
mov
jmp
sti
xor
icebp
into
mov
es
adc
xchg
pop
sub
iret
andb
mov
and
mov
sbb
ds
pop
jne
or
pushf
adc
xor
test
push
push
jo
mov
loope
adc
mov
insl
push
cs
shrb
sub
xchg
lock
adc
push
cs
or
adcb
push
fimuls
mov
xchg
sub
sahf
add
sub
cmpsb
dec
xor
xchg
push
push
or
lahf
movsl
jae
aaa
and
and
sbb
stos
or
rcll
mov
xchg
mov
shrb
mov
lea
sbbb
sbb
or
add
cmp
sub
or
rorb
dec
testl
mov
popa
push
or
push
push
xchg
imul
jno
push
xchg
dec
pop
sbb
lds
add
fstl
sbb
mov
or
and
jnp
mov
xor
dec
or
mov
jne
cmp
test
test
or
les
into
mov
push
daa
call
lahf
fistl
sarl
lea
or
jb
adc
mov
xchg
aam
fcompl
or
push
gs
aam
xchg
xchg
in
sub
in
ret
ret
mov
in
ret
ret
sbb
rcr
sbb
cmpsb
push
sbb
outsb
popa
mov
insb
cmp
pop
jp
xchg
mov
stos
cmp
loope
jo
jb
sub
add
or
mov
sub
adc
cs
inc
mov
lock
sub
mov
aaa
or
or
ror
shll
sbb
shlb
mov
pushl
or
jl
push
inc
push
push
je
xchg
add
xchg
adc
fcoml
and
aam
jle
fsubrl
popa
das
jmp
pop
jecxz
sub
pop
fsubrl
call
mov
adcb
mov
xchg
repnz
mov
cwtl
mov
les
xchg
or
fisttpl
iret
movsb
dec
cli
xor
stos
nop
lock
pop
movsb
das
cld
dec
cmp
mov
push
stos
or
jl
cwtl
cmp
dec
adc
pusha
outsb
mov
imul
insb
lock
push
cmp
jb
cmp
xchg
cmpsl
popf
push
adc
cmp
lcall
jnp
dec
lods
push
push
dec
je
add
push
lock
je
insl
pop
mov
stos
or
adc
cmpsl
push
inc
adc
add
mov
movb
je
mov
imul
in
xor
sti
mov
filds
or
mov
cmp
repz
fists
cmp
je
cmp
jne
mov
sbb
add
mov
push
inc
mov
pop
dec
cmp
jns
or
cmpsb
push
jmp
testb
je
negl
js
or
sbb
aam
in
cmp
jbe
loopne
pop
adc
cmp
je
sub
inc
jmp
inc
and
pop
push
xor
pop
mov
cld
push
adc
add
xchg
hlt
test
jp
add
js
sbb
add
les
cltd
add
push
jl
push
xor
pusha
sub
mov
pop
cmp
add
sti
cmp
imul
cmp
bound
pop
les
clc
je
mov
arpl
sub
mov
test
xchg
sub
xor
gs
jge
mov
add
inc
cld
rorb
sub
je
pop
pop
dec
or
xor
add
arpl
and
and
jno
dec
push
mov
pop
mov
mov
aaa
jae
movl
pop
inc
shrb
shl
add
jmp
shlb
mov
sti
and
cmpsb
and
or
or
adc
push
test
jns
test
jne
xor
lock
subl
dec
push
mov
or
push
outsb
pop
jae
mov
jmp
dec
shlb
out
ss
xor
sub
mov
mov
or
mov
push
add
or
xor
jbe
lsl
xchg
inc
jg
or
scas
or
cmp
push
xor
and
outsb
fsubl
jle
sub
sub
and
pop
or
jl
popa
adc
jle
pusha
bound
cmc
add
pop
aam
cmp
jbe
sbbb
push
and
pop
arpl
pop
add
and
adc
je
test
jne
pop
and
dec
adc
mov
clc
add
push
xor
mov
mov
adc
movb
inc
in
xor
push
sub
sahf
and
xchg
test
xchg
mov
data16
mov
inc
and
dec
add
adc
fsubr
daa
addb
mov
or
inc
fs
clc
loopne
add
daa
sbb
call
inc
push
lcall
jbe
clc
push
call
inc
popf
push
mov
insb
and
push
push
mov
mov
dec
aam
mov
or
push
fcom
int3
mov
inc
subb
and
insb
mov
popf
mov
lea
data16
mov
sub
dec
sarb
movsl
lods
fdivl
mov
mov
inc
sahf
rorb
push
push
imul
test
pop
sbb
imul
jg,pn
pop
push
jecxz
fidivs
cmp
push
xchg
jbe
push
stc
inc
xor
mov
add
or
cltd
test
jecxz
addl
jp
mov
ja
sbb
cmp
mov
jns
jno
imul
add
imul
dec
xchg
xchg
ja
fcmovu
add
mov
sbb
imul
lahf
xrelease
dec
sbb
and
nop
mov
jecxz
push
int3
loope
faddl
iret
orb
xchg
pop
cltd
or
jp
inc
test
cltd
lods
xor
fisubl
pop
stos
in
insl
push
push
inc
iret
ret
out
mov
es
hlt
pop
push
movl
push
adc
jmp
pop
mov
xor
push
lahf
mov
add
jbe
inc
add
lods
push
ss
mov
enter
mov
mov
xchg
aam
add
int3
add
xor
mov
cmpsl
add
lds
nop
cmpsl
andl
jecxz
or
push
add
pop
sbb
push
outsl
outsb
je
pushl
std
loopne
adc
mov
cmp
add
jnp
outsb
fsubr
jae
pop
push
xor
or
push
mov
dec
sbb
add
cmp
pop
ljmp
dec
lea
xorl
jb
pop
sub
lcall
inc
xchg
out
cmp
fbld
ficompl
mov
mov
icebp
add
inc
inc
mov
popa
jo
cmp
pop
and
push
into
test
cmp
or
or
out
and
fcoms
movsl
rorl
adc
outsb
cltd
mov
aaa
push
ret
idiv
pop
je
test
dec
push
inc
inc
and
xor
push
fs
mov
or
shll
adc
mov
xor
xor
cmp
xor
lea
call
adc
cmp
pop
or
inc
push
fdivrs
shl
and
inc
push
sarb
rorb
xor
sbb
sbb
inc
push
mov
lock
in
mov
xor
mov
loop
inc
and
stc
je
fdivs
aaa
les
add
add
leave
add
pop
xor
call
mov
mov
add
das
push
ret
and
pusha
loop
jp
pusha
jb
loopne
decl
in
adc
roll
btc
daa
push
adcl
rcl
mov
mov
xchg
sbb
das
push
and
push
mov
orb
add
or
push
ljmp
push
clc
mov
mov
jl
push
cmp
mov
arpl
push
movb
push
popf
test
push
cmpsl
inc
pop
xchg
addl
xchg
add
xchg
xchg
sbb
sbb
xchg
or
and
lea
or
jg
inc
loope
fnstsw
pusha
stos
adc
and
or
pop
xchg
cmp
push
xor
push
enter
mov
pushf
sbb
loope
mov
idivb
faddp
add
cmp
pop
cs
insb
loopne
fmul
insb
gs
sub
push
sbb
push
pop
lret
cmp
add
test
jmp
testl
mov
cwtl
cmpl
dec
push
cmp
ficomps
push
lret
test
and
jne
add
pop
jecxz
ret
jb
mov
out
xor
insl
jnp
das
das
mov
sbb
loopne
and
mov
dec
arpl
enter
cmc
cmp
cmpl
loopne
mov
sub
xchg
fcmovu
mov
or
xchg
lret
jmp
bound
and
sbb
push
cmp
mov
add
lret
ljmp
fmuls
jne
mov
daa
shrb
push
cmp
mov
sbbl
dec
jno
mov
loope
xchg
xor
repnz
test
dec
cmp
adc
lret
push
push
adc
mov
leave
repnz
ficoms
roll
jnp
pop
mov
fcmovnb
mov
xchg
jne
mov
icebp
cmpsl
inc
dec
movl
insl
ret
in
loopne
fsubs
sub
dec
xlat
push
shlb
aas
je
cmp
push
pop
jne
aam
flds
cmpsb
and
enter
imul
jne
pop
call
sbb
imul
in
stc
jbe
adc
jle
pop
jne
jmp
xor
sub
mov
sub
or
jmp
dec
and
xor
xchg
push
mov
lea
xor
add
je
pop
in
and
addb
pop
jo
pusha
pop
je
sti
lds
jno
and
shl
imul
adc
insl
into
mov
jae
scas
jg
mov
and
xor
adc
mov
enter
xchg
leave
jecxz
sti
mov
sub
decb
adc
cmpl
andb
pop
fimuls
sub
mov
sbb
jb
pop
pop
pop
fs
add
or
inc
bound
or
or
clc
adc
rorb
push
add
sbb
pop
ret
lahf
adcl
pop
loopne
mov
lcall
dec
adc
fildl
aas
add
inc
sbbb
push
mov
xchg
dec
in
out
adc
or
add
jno
xchg
xlat
push
push
push
push
pop
in
mov
pusha
or
xchg
lret
pusha
or
sub
adc
add
cmp
sub
loopne
addb
adc
xor
or
add
cld
test
mov
push
shll
dec
cmpsb
out
sarb
in
aas
jmp
push
inc
mov
adc
push
adc
insl
adc
push
add
push
popa
mov
push
in
push
or
inc
adc
sub
cmp
int
adc
sub
and
test
fsubrs
push
insb
or
or
cmpsl
or
add
daa
mov
lret
push
dec
cmp
es
xor
cs
lret
in
scas
sbb
ljmp
fisubrs
mov
scas
mov
pop
cli
sub
sub
pop
jmp
or
stos
mov
je
into
or
xor
or
sti
and
add
inc
popa
or
sbb
and
push
and
xor
insl
test
jbe
cmc
sti
sbbb
mov
or
xor
sti
mov
add
es
sti
pop
stos
mov
out
addr16
pop
push
mov
mov
pusha
jae
sub
loopne
rep
dec
push
in
cmp
test
sbb
sbb
cmp
adc
pop
xor
lret
je
xchg
dec
sub
in
and
push
mov
je
rorb
cmp
jne
ss
pop
fwait
mov
in
in
mov
add
adc
adc
shlb
adc
and
cmpb
sbb
out
out
test
nop
mov
cmp
je
push
and
mov
pop
cmpsb
pop
adc
orb
cmp
inc
cmp
test
pop
add
inc
jecxz
sub
std
adc
or
add
xchg
dec
sbb
push
sbb
adc
ds
add
movb
lea
dec
imul
add
in
jecxz
mov
xor
shlb
or
or
push
rclb
sbb
cmp
out
mov
ret
mov
out
sub
mov
je
or
inc
ds
cs
int
int3
jae
js
imul
push
bound
addl
add
add
nop
out
add
adc
ret
push
adc
rorl
mov
mov
and
cmpsl
jno
scas
insb
cmp
negb
mov
mov
pop
jno
mov
dec
cltd
mov
pusha
ljmp
jne
push
scas
mov
add
push
inc
cmpsb
in
inc
add
in
pop
jo
addb
movsl
sbb
push
add
jne
xchg
leave
inc
cmp
lea
pop
loope
adc
inc
hlt
mov
lock
clc
cli
hlt
aad
arpl
push
aas
test
loop
inc
inc
mov
cmp
ljmp
hlt
mov
enter
jne
je
pop
jb
daa
and
imul
add
scas
mov
jecxz
mov
mov
pop
call
mov
ret
and
int3
cli
add
pop
jg
loopne
pop
jmp
popa
lea
test
test
xchg
outsl
orl
sarl
and
push
pop
cmpsb
imul
mov
jne
shrl
mov
push
rclb
hlt
pop
add
test
xchg
add
inc
mov
push
or
jle
out
fisubl
loope
adc
pusha
lods
xor
jb
xchg
push
cmpb
mov
add
fnop
adc
add
pop
filds
lahf
notb
fsubl
xor
xchg
and
sub
or
sbb
cld
mov
sub
icebp
cmp
fdivrs
dec
push
in
push
adc
pop
sbb
mov
sbb
push
fcmovnbe
nop
ja
in
push
test
pusha
es
sbbb
adc
bound
and
xchg
mov
mov
jge
testl
sub
push
push
out
adc
push
popa
cmp
adc
add
dec
push
adc
ljmp
test
nop
inc
bound
mov
loope
jmp
mov
adc
sbb
sbb
mov
orb
add
mov
icebp
je
mov
or
dec
jne
jns
jo
adc
add
jmp
jb
dec
inc
in
sbb
lahf
or
jg
jbe
push
sbb
ja
jmp
mov
xchg
in
xchg
cmp
cmpl
test
out
sbb
adc
stos
fiadds
repnz
aam
loope
dec
cld
mov
fsubrl
and
jg
push
cmp
ja
lock
lock
call
ds
push
out
mov
mov
add
subl
push
test
xlat
push
fwait
es
mov
mov
or
pop
dec
test
icebp
je
fdivs
loope
mov
incb
jl
jmp
push
pusha
pop
pop
orb
enter
jmp
add
sbb
lret
lds
mov
cmpl
mov
insb
movl
sbb
sbb
test
push
xchg
sarb
sub
xor
daa
push
lea
mov
push
js
fsubs
and
mov
int3
add
jg
fadds
cmp
mov
and
jmp
add
lock
inc
push
xor
mov
jns
and
inc
ds
call
test
push
push
xor
inc
jbe
mov
jne
jmp
push
mov
cmp
add
lea
add
push
lret
movsb
mov
int3
or
test
ret
or
ret
pop
pop
adc
aas
sbb
mov
cmp
push
sbb
je
cwtl
hlt
sub
push
clc
xchg
jno
aas
in
pop
outsl
sbb
out
adc
pusha
xchg
pop
xor
mov
push
lods
add
and
inc
mov
cmpb
inc
push
sahf
inc
add
test
inc
ljmp
add
daa
insb
movsb
xchg
lea
or
jae
sbb
add
leave
sub
notl
stc
cmp
mov
cmp
ret
cs
push
or
popf
sbb
ja
add
pushf
pop
imulb
jnp
add
and
push
loopne
sar
adc
mov
cmp
repnz
fwait
mov
xor
add
adc
jge
pop
lock
jle
jne
nop
mov
jne
inc
dec
nop
push
add
rcl
adcb
mov
jle
dec
add
mov
xchg
fidivrl
test
push
and
pop
ret
pushl
push
iret
jmp
pop
ja
cmpsl
sub
testl
or
in
rolb
or
movsl
add
loopne
xor
xchg
js
ljmp
add
stos
fs
or
inc
inc
data16
sub
sub
ret
pop
iret
stos
mov
mov
dec
popf
push
faddl
xor
movsl
mov
add
dec
loopne
and
or
bound
movsb
jnp
cmp
mov
add
sub
jns
sbb
call
push
push
push
dec
es
cmp
or
mov
xor
scas
sub
xchg
jne
ja
pop
push
sub
or
jo
mov
cld
sbb
jmp
or
push
roll
stos
ficompl
cmpsb
add
cwtl
add
cmpsb
or
cmc
ret
insb
jbe
add
push
sub
sub
stos
sub
jns
loopne
adc
add
xchg
pop
xor
cltd
xchg
divps
adc
into
push
test
subl
or
outsl
iret
or
pusha
cmp
adc
pop
add
ss
jne
cmp
jns
xlat
or
popa
adc
pop
mov
dec
sahf
dec
in
push
incl
pushf
testb
adc
jbe
push
and
xlat
mov
push
pop
sbb
inc
lcall
scas
adc
adc
out
push
mov
add
cld
rcrl
pop
inc
sub
and
inc
adc
cmpsb
jge
pop
ret
add
xchg
bound
add
dec
pop
cmp
adc
dec
sbb
sbb
mov
add
cmp
and
mov
pushf
and
mov
inc
add
sbb
xor
sahf
xchg
mov
das
arpl
arpl
add
xlat
or
mov
add
jo
in
cltd
test
mov
cltd
test
lea
jbe
in
pop
pop
loope
or
xchg
pushf
and
enter
sub
test
movsl
stos
mov
lret
rol
and
popf
or
loope
inc
and
push
adc
popa
dec
aam
sub
pop
push
rclb
inc
in
outsb
std
out
adc
dec
popf
fadds
outsl
aaa
xor
jns
push
fcoms
jo
in
sub
jo
xchg
jne
mov
sub
test
hlt
lret
jge
fnsave
pop
sarb
add
push
in
hlt
xchg
mov
pop
leave
mov
clc
sbb
mov
lds
and
fstpl
inc
push
and
lea
or
movsb
mov
adc
inc
cli
and
dec
shl
cmp
push
mov
addr16
and
icebp
pop
sbb
inc
sbb
mov
push
mov
jmp
sub
push
mov
inc
movsl
jmp
or
cwtl
cs
and
sarl
and
int
add
inc
mov
ret
or
pop
mov
sarb
adc
repz
and
and
sub
loop
push
or
dec
push
shrl
cli
popf
sub
and
fsts
ret
insl
mov
mov
xchg
mov
sub
mov
xchg
jnp
inc
cmp
dec
adcl
inc
or
and
nop
jbe
sahf
sbb
xchg
pop
push
add
ja
push
sub
dec
aam
mov
and
and
rclb
aaa
sbbb
inc
aam
out
sahf
xchg
je
inc
scas
push
push
adc
rclb
sbb
mov
sbb
gs
aaa
ret
outsb
insb
lret
fisttps
pushl
repz
push
jnp
pop
sahf
jmp
jge
push
jecxz
jmp
push
push
sarl
jbe
mov
xor
inc
push
xchg
jle
repz
push
rclb
sub
mov
mov
jo
xor
out
cmpl
pop
adc
or
push
lods
inc
mov
jo
sbbb
inc
mov
pushf
mov
cmpl
fdiv
adc
jne
adc
imulb
mov
mov
and
add
lea
mov
pushf
dec
xchg
add
xchg
jne
mov
dec
in
je
add
dec
lods
or
mov
data16
inc
shlb
loop
or
push
xor
xchg
mov
dec
inc
pop
inc
cltd
jmp
nop
or
nop
xchg
push
xchg
add
fcoml
mov
sub
loopne
outsl
add
daa
out
push
cli
mov
dec
xor
push
fiaddl
jg
jmp
adc
push
xchg
call
clc
adc
mov
lods
scas
jge
bound
xchg
mov
mov
adc
cmp
xchg
adc
ror
add
add
sbb
adc
hlt
push
inc
jbe
xchg
ds
mov
and
std
insb
jle
pop
add
pop
aas
mov
push
sahf
inc
loopne
mov
push
popf
inc
rcrb
bound
xor
fistpll
cmc
ror
aam
sahf
pop
jbe,pn
test
neg
jne
ret
mov
nop
push
fdivrs
add
clc
je
mov
jo
ror
add
sub
push
mov
dec
adc
jno
cmp
sbbl
mov
cmp
jne
cmp
push
inc
mov
inc
fsubr
adc
call
adc
xor
loopne
sbb
les
add
rcrl
je
cs
test
inc
mov
add
and
and
inc
imul
stos
mov
out
es
push
xor
and
mov
incl
cmp
pop
cld
fs
dec
cmpl
adc
add
jb
jmp
mov
inc
insb
jl
hlt
adc
hlt
xchg
cltd
push
jo
fmull
sbb
cltd
pop
push
inc
mov
dec
movzbl
fs
add
out
dec
loop
cltd
push
or
xlat
push
or
push
repz
enter
imul
je
sub
aam
or
push
mov
mulb
jg
push
or
stos
iret
adc
ljmp
jle
pop
fidivl
jmp
test
fwait
lock
inc
sbb
and
ret
xchg
popl
out
pop
es
test
mov
xchg
jne
jge
popf
das
or
pop
push
mov
scas
add
jle
test
and
test
push
jl
or
adc
scas
mov
sarl
mov
pop
jbe
sub
pop
xor
addb
mov
sub
mov
movsb
push
pop
or
add
fstl
ljmp
inc
push
inc
push
rorb
push
fbstp
cmp
jb
mov
push
dec
jae
pop
mov
dec
cwtl
cmp
dec
cmpsb
jbe
push
cs
cmp
shrl
xchg
sub
jp
adc
jp
inc
inc
cwtl
push
and
hlt
shl
xor
mov
mulb
fdivs
je
hlt
sub
dec
lods
push
roll
out
xor
mov
dec
add
push
test
cld
ja
shlb
dec
pop
shll
sbb
popa
aas
pop
sbb
and
sbb
daa
mov
mov
push
aas
inc
pop
jmp
cmp
loop
cld
jne
ret
outsb
pop
dec
sub
xchg
pop
push
test
jg
mov
adc
test
push
add
je
xchg
inc
xor
adc
mov
adc
adc
dec
xor
insl
jmp
in
add
lret
xchg
rcr
mov
out
cmp
ss
ds
cmp
cs
shll
add
xor
ficoms
mov
icebp
ds
dec
clc
mov
pushl
aas
test
inc
jb
xor
adc
nop
xchg
inc
push
jmp
gs
push
adc
adc
dec
jb
adc
cltd
fs
lret
adc
adc
mov
xor
sbb
or
das
addb
add
les
add
enter
pop
fcompl
cmpw
je
or
lret
icebp
rolb
out
fstl
adc
js
mov
std
or
xor
add
leave
lret
out
sbb
int3
pop
pop
call
stos
sti
movsl
imulb
jo
cltd
push
mov
ror
mov
pop
inc
inc
mov
test
lret
push
sbb
bnd
in
add
jl
inc
and
das
jmp
cmp
mov
sub
dec
sti
jge
cld
cmp
bound
rcll
adc
cmp
fmuls
movsb
cmpb
jb
adc
popf
push
in
mov
lea
mov
and
dec
rorl
mov
cmp
sbb
xor
adc
sub
adc
pushf
out
loope
mov
sub
pop
jnp
xor
add
xor
add
sbb
aaa
cmpsb
cld
imul
jne
sub
xor
movb
pop
mov
addl
sbb
std
and
subb
pop
adc
lret
mov
xor
pushf
jmp
inc
add
popl
lods
ss
push
popf
xor
mov
in
push
fidivs
aam
jne
sub
jmp
fcoms
clc
push
stos
push
mov
movsb
add
adc
add
jns
aam
jg
out
adc
mov
inc
or
adc
push
loope
fcmovnbe
pop
mov
fnsave
testb
push
js
mov
push
inc
sbb
mov
mov
clc
xchg
test
aam
adc
loop
xor
push
adc
rcl
aas
pop
jne
jl
jnp
ret
inc
test
in
jns
inc
fwait
stos
mov
mov
adc
decb
mov
in
or
scas
mov
out
pop
loope
xor
xor
cmp
test
cs
jg
icebp
outsl
js
add
iret
pop
xchg
repnz
pop
loop
mov
xchg
pusha
or
dec
push
je
or
movsb
push
inc
sbb
mov
imul
or
arpl
movsl
jl
mov
fstps
sbb
dec
popa
test
mov
pop
loopne
and
push
push
dec
pusha
stc
idivl
inc
jo
add
test
orb
test
cmp
or
sbb
jmp
inc
sbb
push
jmp
mov
push
lcall
aam
push
lahf
hlt
rorb
xchg
into
out
and
add
les
clc
jno
mov
or
jecxz
es
sub
adcl
les
imul
ss
lock
sub
push
cmp
sbbl
or
lea
push
int
lret
repnz
cmp
nop
popa
jmp
js
nop
mov
adc
and
jno
mov
inc
test
pushf
into
mov
xchg
repz
add
jg
out
push
test
dec
adc
roll
push
push
mov
mov
jp
ljmp
sbb
into
add
jo
jb
sub
and
fadds
mov
outsl
pop
rorl
mov
adcb
insb
loope
sbb
std
jo
xchg
decb
pop
jae
les
scas
jp
xor
adc
inc
sub
std
jbe
mov
stc
mov
inc
pop
sub
xchg
lret
scas
dec
aad
bound
mov
ljmp
lahf
mov
inc
xor
cltd
not
xor
in
push
or
movsl
xor
and
adc
imul
shll
cmp
ret
sbb
or
adc
mov
shl
mov
add
jo
sub
add
shll
lods
mov
xor
mov
lds
mov
xor
mov
cmp
mov
push
xchg
shl
push
add
push
shrb
dec
mov
adc
imul
stos
add
adcl
mov
xor
inc
imul
out
pop
adc
cmp
add
fwait
adc
fisttpll
aad
test
cltd
mov
mov
mov
mov
lock
loope
cltd
pop
cwtl
stos
lock
xor
push
push
sbb
xchg
jns
xorl
into
inc
sub
jae
mov
adc
test
bound
add
das
sub
xchg
push
subps
daa
xchg
mov
cmpsb
pop
ds
repnz
jne
std
push
mov
mov
push
mov
ss
sub
ret
hlt
insb
jecxz
les
adc
daa
dec
or
lcall
insl
loop
adc
clc
pop
add
adc
ret
test
push
add
xchg
add
addl
cld
and
adc
lea
rcrb
push
and
pop
roll
lahf
fs
jmp
or
test
es
xor
add
jmp
mov
int
or
push
mov
adc
sub
mov
or
inc
jmp
enter
inc
orl
mov
shlb
ret
ljmp
repz
lret
adc
or
cmp
inc
cmp
jbe
fimull
push
adc
idiv
push
aam
push
fs
aaa
gs
fmull
fcoms
shrb
sbb
mov
xor
pop
add
add
test
and
jl
dec
fistl
fs
xchg
cmc
in
sarb
les
out
hlt
movsb
or
inc
lcall
push
and
and
pop
pusha
add
notb
stos
or
loope
xchg
xor
out
dec
inc
mov
std
add
jb
or
dec
add
push
or
pop
shll
xchg
pop
lods
sti
add
xchg
or
das
lods
or
leave
pop
add
mov
jb
repnz
mov
movsb
lea
cmp
rorb
add
cmpl
and
mov
and
dec
jb
xadd
mov
mov
mov
movsl
xchg
pusha
pop
fistpl
mov
push
cltd
jecxz
push
and
or
xor
addb
cwtl
xchg
add
out
sbb
and
mov
sbb
or
repz
add
xchg
movsl
mov
xchg
lds
lods
xor
test
add
shll
sbb
cs
rcrl
sub
mov
inc
sub
into
pop
dec
ja
test
add
mov
cmp
je
cmp
xchg
insl
outsb
or
pushf
sbb
mov
sbbl
subb
adc
cltd
insb
sub
and
cmc
std
cmp
sbb
sub
pop
adc
and
in
daa
je
push
cmp
adc
push
or
cltd
mov
fldenv
add
jb
xchg
push
pushf
sbb
jae
push
xchg
dec
sbb
andb
jl
sbb
jae
sub
jmp
in
lea
test
xchg
push
fsubrs
add
sti
mov
add
xor
shl
adc
push
inc
push
mov
xchg
cs
outsl
insb
push
ficomps
adc
pop
or
fidivrs
je
cmpb
lret
adc
push
or
cmp
arpl
dec
test
dec
int
imul
mov
push
test
xor
sub
or
sub
cmpsb
xchg
add
xor
add
add
js
mov
dec
movsb
and
enter
jbe
fs
lret
clc
hlt
hlt
inc
cmp
xchg
jns
or
push
pop
mov
nop
pop
pop
push
and
push
cmp
add
cmp
call
jae
pushf
or
lods
and
inc
pop
sbb
push
js
fldt
clc
shl
cld
loopne
fnstenv
mov
add
sbb
xor
repz
cld
fsubs
inc
popa
cs
dec
inc
mov
scas
out
or
inc
push
cmp
add
inc
mov
push
in
cltd
lahf
into
clc
es
or
lock
inc
in
imul
xchg
adc
xchg
incl
dec
sub
mov
hlt
neg
sbb
and
sti
mov
bound
mov
push
sub
push
adc
push
icebp
inc
mov
xchg
in
into
adc
popa
xchg
pushf
test
js
inc
add
add
adc
and
test
je
faddl
inc
push
loopne
addr16
fildl
lods
jnp
and
leave
test
insb
fistpl
xor
aam
add
cmpl
jne
cmp
jbe
out
in
adc
or
jne
push
lds
dec
add
dec
push
lock
cmp
fwait
aad
std
lret
shrb
das
data16
push
fbld
popa
inc
cmc
jmp
rcl
mov
jno
adc
sahf
jecxz
inc
pop
or
sarl
sbb
cmc
dec
fists
push
shr
sbb
cs
in
inc
imul
mov
call
add
jge
lods
das
lea
push
push
xchg
je,pn
pop
jl
xchg
fisubs
pminsw
mov
js
and
cmpb
testb
ss
cltd
outsl
push
cmp
loop
add
xor
data16
mov
gs
add
cmpsb
sbb
xchg
push
pushf
mov
jnp
lock
test
add
or
mov
adc
inc
mov
adc
or
sbb
dec
adc
inc
pushl
andl
leave
ret
pop
or
xchg
fidivrl
movsl
clc
nop
aam
mov
push
push
ja
cmp
paddusb
add
daa
inc
fsts
push
inc
add
aas
arpl
mov
andb
dec
popf
mov
sbb
pop
xor
or
adcl
add
call
xor
jnp
sub
out
lods
mov
cmp
push
inc
cld
push
test
lds
push
icebp
cmp
test
imul
or
jne
pop
sub
pop
mov
lock
inc
or
mov
es
push
lahf
xor
movsl
repnz
adc
xchg
adc
inc
cmp
mov
jmp
je
mov
hlt
dec
mov
fs
andl
push
and
or
xor
adc
loopne
cmp
aam
scas
mov
or
movl
push
jae
and
stc
mov
pop
jbe
add
mov
jp
in
or
dec
or
cld
xchg
push
inc
cmp
dec
loopne
int3
add
aam
cmp
cmpsl
push
push
cmp
pop
add
xchg
popf
push
sar
push
add
push
jmp
xor
fadds
mov
add
aas
add
sahf
adc
push
out
mov
icebp
dec
sub
sbb
sbb
repnz
test
int3
ds
mov
scas
adc
mov
test
cmp
add
mov
dec
hlt
imul
lea
bound
mov
or
dec
add
jle
pop
lock
faddl
cmp
add
xchg
shr
sarl
jge
dec
mov
call
pop
iret
loop
arpl
test
cmpsl
cmp
fdivl
or
xor
out
pusha
cmp
faddl
cmpsl
pop
lcall
add
sbb
push
je
roll
ficompl
mov
gs
push
jge
leave
enter
cmp
add
or
and
xorb
add
adc
and
sub
mov
pop
push
mov
mov
push
push
and
ret
or
insl
les
mov
mov
int
inc
dec
push
xor
dec
sub
in
sub
mov
mov
add
push
aam
je
mov
loopne
sbb
or
lods
pop
fsubs
popf
sbb
faddl
cwtl
dec
adc
jle
enter
ja
mov
adc
jb
mov
or
or
mov
roll
xor
add
push
fisttps
push
or
pop
fdivrs
cmp
leave
fldenv
push
push
add
or
icebp
pushl
dec
pop
xchg
pop
fisttpll
sub
or
and
push
push
sahf
rorl
loopne
add
fisttps
jne
cmp
sbb
mov
repnz
sub
sbb
sti
jb
mov
xchg
out
mov
pop
or
fsub
add
lea
mov
pop
add
pop
jo
into
xor
test
sbb
add
popf
pushf
outsl
jno
mov
xor
sub
into
adc
jns
and
test
sbb
je
dec
adc
add
lea
ja
cmpb
jne
jp
imul
jne
out
add
or
loopne
adc
faddl
jb
stc
push
daa
or
ja
mov
lea
lods
inc
dec
sbb
pop
push
push
jnp
addr16
or
dec
mov
test
je
iret
lea
aaa
add
dec
mov
jge
cs
jae
leave
jmp
push
inc
sub
xchg
mov
ss
xor
push
sar
push
xchg
or
sbb
cmp
lsl
sarl
mov
dec
jp
xchg
jmp
dec
mov
enter
pop
push
push
dec
jno
sbb
adc
loopne
out
mov
je
mov
sbb
xor
decl
sbb
adc
pop
sbb
adc
jp
mov
inc
mov
mov
call
filds
pop
mov
xchg
enter
fcomps
sahf
jne
lret
cmc
inc
popw
push
lea
cmp
jle
xchg
repnz
xor
ss
pop
popf
pop
ja
fimuls
or
mov
jmp
and
or
cmp
fsub
add
sub
add
add
xor
push
fcoml
mov
inc
pop
lahf
mov
test
add
xor
mov
mov
outsl
mov
je
lea
dec
or
adc
inc
cmpl
dec
jmp
movsb
pop
xchg
data16
movsl
pushl
xor
pop
fcmovbe
inc
and
data16
shlb
aaa
push
sbb
add
dec
inc
aaa
adc
jns
adc
ret
sub
inc
clc
jmp
push
je
dec
lods
imul
in
les
orl
xor
dec
adc
repz
incl
add
rclb
adc
add
outsb
xchg
movsl
incl
mov
xor
mov
ror
or
add
mov
dec
mov
push
mov
daa
bnd
mov
lcall
inc
cmp
cmpb
ret
push
jae
lea
daa
fidivs
push
sub
sbb
inc
push
lds
mov
xor
loope
test
inc
dec
pop
es
dec
and
push
or
cmp
sub
cmc
loopne
jge
cmpsb
jge
sbb
leave
pusha
pop
cld
cs
mov
cmpb
xor
fnstenv
ja
testl
cmp
cmp
sub
sbb
sbb
lret
xor
mov
dec
xlat
movb
adc
cltd
mov
lcall
fdivs
sub
sub
out
mov
sti
sub
pop
ret
push
out
insb
adc
dec
imulb
divb
dec
dec
shl
imul
lods
jmp
mov
rorl
lcall
jge
pop
and
jne
mov
jbe
mov
push
cs
add
test
cli
repz
lock
lea
jbe
or
lret
js
sbb
out
int3
or
xlat
push
scas
mov
push
aad
xor
or
jge
mov
jnp
inc
mov
adc
adcl
movsb
shl
fimuls
sub
int
or
xor
jp
je
xor
popf
mov
xchg
cmp
push
jmp
gs
and
xor
mov
cmp
jb
inc
mov
adc
movsb
mov
jo
sahf
mov
mov
cmp
sub
push
inc
or
mov
hlt
ds
es
xchg
or
jo
jns
mov
xchg
popa
xor
sahf
mov
add
clc
js
mov
std
cmc
imul
xor
push
enter
enter
stc
push
out
adc
arpl
jb
nop
xchg
enter
push
imul
adc
and
movsl
sub
sbb
pop
in
lea
xor
outsb
or
jbe
xor
in
setb
std
push
testb
add
push
rcrb
mov
add
or
xor
aad
shlb
cli
jo
lds
cmp
cmp
and
mov
push
call
roll
lcall
sbb
fcoml
cmp
orb
or
fsubrp
mov
sbb
dec
cmp
cmp
push
rcl
out
adc
out
ret
shlb
cmp
divb
sbb
ret
dec
sub
aas
testb
je
divb
pushl
xchg
dec
scas
ljmp
sbb
sub
pusha
jo
adcl
xchg
xchg
ss
or
inc
es
das
in
and
movsl
pop
adc
add
and
lea
popa
push
push
cmp
call
jecxz
dec
and
cwtl
push
lret
cwtl
and
xor
sub
mov
mov
mov
inc
sub
push
add
xor
pusha
sub
jle
fmuls
sbb
in
mov
lods
out
movsb
jne
mov
orl
test
mov
imul
pop
adc
or
mov
dec
sub
mov
sbb
push
push
pop
add
fadds
xchg
shlb
mov
test
or
in
add
sbb
lods
cmp
sub
xchg
mov
aas
add
pop
xchg
lret
in
mov
lahf
mov
mov
mov
test
fcmove
insl
int
into
shrb
push
dec
add
inc
das
jb
lcall
and
and
push
jge
cmp
shlb
adc
test
mov
mov
mov
push
iret
add
jne
or
inc
xchg
arpl
mov
out
adc
mov
popa
shlb
lret
add
dec
lock
mov
clc
ret
sub
dec
rcl
out
xor
xchg
push
adc
add
mov
cmp
jl
es
xchg
jmp
push
ja
lcall
push
scas
cmp
fimuls
cmpl
mov
stos
adc
adc
push
out
mov
push
or
or
dec
or
ja
ret
push
sbb
or
incl
pop
push
mov
dec
dec
pop
cmp
ret
or
leave
push
cmp
sub
jmp
cmovge
imul
jb
movb
dec
pop
xor
push
cwtl
pop
dec
jnp
cmpsb
out
ss
add
xor
or
idivb
test
push
addl
pop
push
hlt
out
jo
int
insl
lahf
add
pushf
inc
daa
jae
unpcklps
pop
fwait
ret
mov
popf
movsl
inc
push
pusha
pushf
jo
push
out
fistpll
xor
push
push
or
enter
pop
jp
or
movzwl
test
je
test
lahf
add
or
jo
jo
jo
rorb
mov
mov
xchg
ret
dec
xlat
mov
sbb
push
cmpl
push
add
inc
dec
std
mov
and
das
jmp
cmp
lcall
shl
push
push
clc
push
push
pop
std
inc
adc
js
fdivrl
sub
push
mov
mov
mov
lds
cmp
fidivs
jne
es
mov
sbb
or
pop
mov
js
and
jl
rclb
jle
js
fisttpl
push
push
loope
jl
cld
sbb
push
push
mov
stos
add
aam
add
ds
mulb
loopne
or
popf
in
pusha
pop
pop
and
jno
int
push
lahf
xchg
aad
xchg
and
mov
add
jle
mov
mov
xor
or
sbb
xchg
xchg
and
in
sub
addb
loopne
sub
sub
in
xchg
push
pop
sub
sub
inc
mov
pop
or
inc
rdpmc
dec
pop
inc
stos
or
ret
push
mov
dec
push
out
sub
shl
daa
inc
outsl
mov
cmp
and
movsb
add
call
dec
cwtl
call
xchg
sbb
repz
push
addr16
jl
cld
push
adc
cld
js
mov
mov
mov
add
and
clc
or
push
sbb
test
or
add
inc
out
sub
dec
roll
and
loopne
aad
jne
mov
and
rcll
sbb
popa
in
xchg
mov
lret
icebp
mov
xor
loopne
and
and
loope
out
jge
mov
add
mov
movsl
jne
mov
sarl
scas
cmp
inc
adc
mov
adc
out
ds
lods
sbb
inc
addr16
std
into
sbb
gs
mov
lea
mov
cli
jne
cs
and
pop
jmp
jg
xor
cltd
jo
lahf
roll
xlat
inc
mov
lock
sub
push
std
mov
add
inc
or
mov
mov
jle
adc
cmpsl
or
push
ja
fimuls
sbbb
loop
push
jbe
gs
push
push
clc
scas
xor
and
push
mov
jbe
xchg
push
push
dec
push
cmp
inc
add
mov
adc
inc
loope
repz
add
dec
pop
pop
in
and
mov
mov
into
jmp
fidivrl
into
out
push
loope
roll
dec
xor
pop
mov
lock
cld
push
cmp
cmp
mov
xor
outsb
das
outsl
push
xor
icebp
rorb
sti
and
mov
adc
jl
mov
mov
jle
rorb
je
lea
shl
subb
cmpsb
jg
xlat
or
jmp
cmp
adc
lret
iret
push
aad
aam
shrb
mov
xor
es
add
jmp
and
jne
push
and
add
hlt
mov
sbb
mov
mov
popf
dec
data16
in
xor
jg
or
cs
inc
jb
adc
add
or
or
xor
add
adc
sub
inc
jle
add
aam
outsl
add
mov
xchg
xor
jbe
jmp
and
sbb
adc
add
push
sub
pop
mov
adc
xchg
mov
lahf
in
sbb
imul
pusha
fs
add
test
push
add
inc
movsb
inc
setl
sub
sbb
dec
sbb
cmp
jo
lret
cmc
addr16
mov
pushl
sub
push
pop
mov
sbb
shl
push
dec
shlb
and
roll
push
cmp
rol
push
xchg
inc
in
mov
sub
mov
push
lds
sarl
xchg
jp
adc
movsb
push
push
xchg
push
dec
enter
sbb
jecxz
xor
mov
daa
es
mov
in
inc
sbb
pop
loop
mov
cld
push
and
cmpsb
out
adc
xor
sti
add
mov
cltd
xchg
daa
mov
rcll
jne
andb
pop
stos
inc
and
popf
fdivrs
or
inc
mov
push
and
jne
sti
movsl
stc
rclb
or
sub
mov
or
jne
or
jne
std
pop
push
cs
nop
cmp
cwtl
dec
add
mov
mov
add
mov
lock
cmp
outsl
add
add
lea
sbb
lret
ds
clc
inc
sbb
xchg
fcoms
loopne
repnz
cld
test
pushf
notb
popa
inc
add
in
mov
js
dec
add
xchg
sarb
push
je
xchg
push
ret
or
movsb
inc
mov
sbb
cmp
push
xor
xor
cmp
sub
adc
jmp
mov
inc
inc
adc
pop
push
push
jo
mov
test
mov
pop
lea
or
adc
or
rcrl
mov
sbb
addr16
imul
jmp
scas
lcall
xchg
fbstp
dec
lock
mov
jg
and
pop
lea
pushf
pop
sbb
data16
mov
mov
cmp
orb
enter
inc
mov
insl
cmp
daa
mov
mov
ja
pop
sub
loop
dec
jb
addl
rorl
push
rol
adc
rorb
andl
andb
dec
xchg
sub
cli
rolb
push
jne
dec
fldt
dec
cli
or
pop
sub
sbb
push
lcall
push
in
mov
xor
outsl
sbb
test
or
sbb
pop
sub
scas
aaa
jo
jg
dec
push
mov
aam
push
inc
and
xor
cwtl
inc
or
cmp
je
cmp
add
in
push
or
cmp
or
jne
addb
xchg
test
test
fsubs
sbb
xor
jmp
loopne
xchg
cmp
shlb
aad
push
jnp
push
imul
mov
pop
mov
cmp
jl
mov
mov
es
out
push
xor
arpl
pop
sbb
in
push
mov
and
cmc
push
sahf
cmp
mov
and
sbb
aam
faddl
or
mov
clc
subb
mov
imul
adc
or
lea
clc
pop
sub
jno
mov
mov
push
ja
mov
mov
adc
mov
pop
ds
bound
cltd
sbb
adc
out
fcoms
shl
nop
mov
add
jbe
mov
mov
push
xor
xchg
xchg
pushf
insb
adc
inc
dec
rorl
mov
es
cld
or
sub
js
push
inc
mov
sbb
mov
dec
push
xor
bound
roll
sbb
mov
aam
adc
cmp
push
pusha
dec
shll
je
int
push
ss
xor
fdivl
or
outsb
andl
cmpsl
mov
sub
insl
mulb
aad
mov
sub
sub
xor
sbb
pop
cmp
loopne
push
pop
nop
in
jle
movb
sbb
mov
adcl
subl
jae
popf
nop
xchg
push
fadds
sbb
je
sbb
add
nop
add
movsl
mov
mov
in
pop
mov
sahf
inc
test
lret
jo
movsb
or
push
test
cmp
push
push
mov
sbb
push
adc
push
mov
inc
sbb
cmp
jo
adc
mov
lods
mov
sub
xor
pop
adc
xor
add
xor
add
mov
test
test
stos
insl
cld
xor
xchg
add
xchg
cli
inc
mov
pusha
lcall
add
jne
push
add
movswl
adc
sbb
sti
sbb
xchg
test
ret
pushl
sbb
or
push
test
adc
push
imul
xor
push
lock
je
repz
push
cmp
push
clc
in
mov
fcoms
insl
repnz
clc
inc
sub
push
push
push
inc
add
shl
ret
imul
add
xor
dec
add
je
das
mov
xor
das
xorl
ficomps
jl
insl
addl
jne
orl
mov
adc
imul
int
xor
test
mov
xchg
add
jge
or
test
das
add
lods
push
test
stc
fldl
in
cmp
sar
lds
add
lods
cmp
cltd
std
fwait
loope
sub
sub
mov
sbb
out
inc
xchg
les
mov
movsl
sti
dec
sub
xchg
sub
jnp
push
jne
mov
sub
sbb
sarl
mov
and
push
cmp
pop
sub
xorl
inc
xchg
ja
fwait
pop
jle
or
hlt
cld
cmpsb
imul
jbe
or
add
cltd
add
cmp
mov
and
add
push
testb
inc
rcl
dec
bound
push
sub
mov
sbb
into
dec
and
cmp
push
inc
movsb
sbb
cmp
cmp
push
popf
lock
mov
dec
xor
cli
out
fidivs
test
cmpb
lods
pop
mov
push
cwtl
add
sbb
xchg
dec
push
xchg
mov
pop
dec
push
adc
jle
or
movsb
jns
adc
or
push
xchg
fdivrl
sti
insl
adc
adc
xor
aad
stos
mov
and
fldcw
inc
xchg
enter
in
pop
nop
repnz
push
js
mov
outsb
outsb
rorb
dec
jb
sbb
lea
je
mov
gs
sar
xor
and
mov
and
push
and
mov
adc
pop
out
orb
int3
lock
push
mov
inc
inc
lock
inc
rcr
notl
and
ret
jne
or
cmp
je
je
enter
pop
fs
orl
inc
mov
out
adc
aaa
movsb
xor
sbb
jnp
call
push
xchg
inc
jne
in
inc
pushf
cmp
cli
je
popf
add
xor
mov
scas
pop
repnz
inc
adc
lea
xchg
push
push
hlt
sti
push
sub
inc
adcb
and
orb
or
dec
add
inc
xchg
add
adc
outsb
dec
adc
enter
jnp
lock
and
cld
lock
iret
sub
dec
jmp
push
adc
push
pop
adc
loope
ja
adc
sbb
push
pop
jg
test
sarb
in
push
mov
jg
leave
add
add
push
and
xchg
mov
aaa
sub
sub
xor
stos
dec
movsb
cmp
xor
pop
add
push
flds
push
push
aam
pop
jle
mov
and
test
or
inc
and
shlb
inc
sbb
sbb
pop
pop
mov
lock
sbb
je
and
jbe
clc
mov
cmpsl
adcb
and
push
sbb
xor
jns
in
insb
outsl
pop
mov
jno
test
popa
cmp
add
inc
lcall
add
adc
std
jle
std
je
push
aas
jne
outsb
fmul
mov
add
add
stos
mov
fldt
pushf
and
add
out
jbe
sub
sub
mov
cmp
sbb
test
adc
push
and
add
loopne
dec
push
lea
or
adc
out
adc
pop
sbb
adc
dec
push
or
out
add
xor
lock
jl
rorb
fcoms
add
les
xchg
negl
add
pop
popa
add
or
xchg
add
addl
clc
pop
arpl
mov
push
inc
aad
es
ret
sbb
and
dec
xchg
fdiv
or
cmpsl
sbbl
pushf
or
outsb
push
das
out
cmp
push
pop
add
push
xlat
cltd
pop
pop
push
or
jne
xchg
jne
cmp
fdivs
xchg
test
ljmp
dec
movsb
push
ret
jge
int3
mov
jg
sbb
xchg
in
mov
sbb
adc
inc
call
jge
dec
ljmp
or
es
orb
or
pop
out
xchg
mov
jmp
pop
movsb
xchg
xchg
in
adc
push
movsl
mov
dec
mov
pop
sbb
pushf
dec
adc
int
push
aam
push
adc
xor
inc
stos
sub
xchg
adc
dec
and
jo
push
lea
and
push
push
cli
sub
sub
test
pushf
xchg
inc
xor
dec
inc
in
sub
mov
push
push
push
out
mov
jbe
cmp
adc
fiadds
mov
pop
ret
mov
cmpl
cltd
hlt
inc
or
hlt
sub
mov
sbb
pushf
mov
rolb
je
push
les
testl
pop
jo
mov
rcrb
adc
push
jae
jbe
lcall
xor
xor
xchg
ret
cmovge
or
pop
mov
movsl
add
mov
jl
mov
dec
mov
jecxz
xorl
and
push
movsb
loopne
adcl
add
jl
add
xchg
std
cmp
pop
dec
dec
or
repnz
sub
mov
mov
mov
xor
lret
sub
out
mov
popa
aaa
cmp
and
sbb
cmp
repnz
movsl
push
mov
hlt
sub
mov
outsb
jne
jae
out
push
dec
sub
dec
repz
and
aam
fimull
divl
push
xor
popf
out
insb
in
adc
mov
lea
cmp
movsl
cs
gs
mov
cmpsl
ja
sub
sahf
cwtl
push
aam
jp
hlt
insl
es
mov
sbb
and
or
pop
jnp
and
or
push
fstpt
push
test
and
imul
stos
sbb
or
push
and
pop
mov
rolb
popf
mov
jg
adc
mov
lret
adc
add
lret
push
or
sbb
sbb
jo
sbb
out
xor
mov
out
inc
mov
sbb
mov
push
cs
inc
inc
das
pop
or
pop
mov
push
and
daa
addl
ss
xor
push
xchg
pop
pop
in
dec
push
adc
je
or
or
loopne
mov
imul
and
inc
and
inc
addb
xor
call
add
sahf
push
mov
mov
daa
loopne
push
xor
sub
ja
scas
xlat
fnsave
xchg
test
and
xor
push
or
or
inc
push
or
push
dec
push
pop
cmp
mov
adc
add
push
cltd
xchg
or
sbb
lods
add
pop
inc
add
aam
fldt
sbb
xchg
jnp
push
nop
sub
add
test
push
outsb
ss
int
mov
inc
xor
xor
push
xor
sub
adc
jg
lock
add
fwait
xchg
cmp
pop
cmp
dec
loop
add
adc
xor
pop
sub
lret
push
xor
mov
push
push
push
sbb
roll
sbb
add
cmpsl
std
decl
jnp
cmp
cwtl
lret
ss
aas
mov
inc
push
dec
pop
fcmovb
sbb
sub
sub
inc
in
adc
jmp
cmp
mov
aaa
lods
jle
cmp
inc
cmc
js
aas
outsl
and
es
pushl
mov
loopne
jne
cmp
pop
add
push
orb
push
fmull
or
dec
push
inc
xor
cmp
nop
ret
int3
dec
ret
or
es
pop
pop
mov
inc
negb
dec
push
sub
mov
jl
andl
push
adc
in
ret
iret
insb
sub
mov
cltd
adc
jne
jl
outsb
inc
jae
daa
xchg
dec
jnp
jecxz
cmp
mov
push
push
call
adc
test
inc
xor
stos
xchg
adc
fistpll
ret
icebp
add
mov
popf
scas
test
mov
adc
adc
stos
les
xchg
cmpsb
shrb
sbb
push
ret
jp
adc
cmpsl
dec
jl
and
or
mov
xor
icebp
jne
je
push
pop
fisubrs
mov
xor
js
push
add
inc
push
jbe
pop
ljmp
aaa
cmp
das
pop
bound
xor
or
xchg
or
fsubrs
add
add
mov
movsl
add
pop
pop
sub
movsl
divb
aam
orl
pop
lock
push
sub
inc
xor
je
and
jle
mov
mov
cmp
cmp
cmp
dec
ja
imul
ret
inc
sbb
mov
fdivl
cmp
dec
or
dec
jl
loope
xor
push
and
scas
mov
adc
rolb
adc
mov
lods
push
push
leave
ds
test
pop
adc
xchg
cmc
lods
mov
mov
dec
fstl
sub
add
enter
mov
aas
mov
inc
bnd
leave
add
push
pop
lods
in
push
popa
add
sarl
aaa
add
adcl
imul
push
push
pop
and
adc
adc
or
or
adc
and
cld
push
addb
xchg
test
clc
add
scas
nop
cmp
add
push
cmovle
mov
pop
fcoms
rolb
mov
pop
and
mov
or
push
xchg
xor
jnp
or
mov
mov
cmovo
inc
mov
jns
sub
fcomip
fcoms
mov
add
fsubrl
jmp
mov
ret
or
mov
mov
jp
es
mov
imul
push
push
jg
mov
rolb
jge
mov
cmpb
jbe
mov
fstps
mov
ljmp
mov
push
lahf
mov
enter
or
add
or
cmp
iret
pop
jmp
jecxz
push
xor
andl
push
movsl
push
leave
scas
add
jl
dec
xor
mov
add
inc
sbb
add
subb
xchg
fcoms
adc
inc
mov
or
rolb
sub
daa
js
lock
push
sarb
adc
or
mov
jmp
adc
js
adc
add
outsb
jo
xor
inc
aam
je
sub
mov
mov
shrb
or
add
sbb
test
stos
cmp
and
popa
arpl
bound
fcoml
mov
mov
cmpsb
sbb
push
mov
cmpsl
testl
pop
jae
fsts
add
push
insb
js
or
inc
ret
orl
cwtl
sbb
call
cmp
data16
mull
movsl
fsts
aas
je
xor
add
imul
or
add
pushf
inc
xchg
mov
enter
movsl
std
mov
adc
sbb
lea
sbbb
jle
pop
mov
mov
scas
jne
pop
add
push
add
cmpsb
fcoms
insb
xchg
mov
add
add
and
repz
cmp
aas
pop
xchg
sub
es
jbe
or
cmpl
cli
push
lea
test
mov
jmp
jge
mov
xor
shr
inc
add
gs
pusha
pop
call
loopne
adc
cmp
pop
out
add
cmc
xor
mov
insb
std
popl
push
inc
call
sub
or
adc
add
and
mov
mov
out
in
mov
jae
movsl
mov
movsl
dec
mov
es
sbb
jne
pop
jnp
popa
sbb
push
arpl
jecxz
jne
pop
adc
inc
lock
shl
push
xchg
adc
pop
jns
add
inc
and
lret
push
int
push
ja
testb
sbb
xor
shrl
or
push
mov
or
ljmp
int3
xchg
cmp
or
xor
sub
in
xor
bound
xor
loopne
push
adc
test
orl
jmp
push
fisubrl
pop
out
mov
adc
int
insb
or
mov
int
adc
xchg
pop
imul
loopne
add
inc
scas
fadds
out
or
xor
sbb
jle
out
mov
je
cmp
add
imul
push
jne
ss
call
add
cmpb
jl
add
jmp
push
jnp
xorb
push
push
pop
mov
inc
push
out
lds
dec
xor
cmpb
jle
add
inc
xor
dec
push
push
idivb
addr16
pop
push
xor
or
in
js
ret
jbe
es
js
js
mov
cmpsb
add
or
cmp
jo
cmp
nop
test
dec
jnp
mov
adc
inc
jo
into
sub
sahf
xchg
lock
mov
or
push
or
xchg
lret
push
lea
addr16
add
pusha
or
rorl
dec
jle
cmp
add
xor
cmp
call
jne
cmp
es
pop
sahf
notb
push
mov
push
and
lea
cwtl
add
sbb
sub
push
xchg
and
and
sbb
inc
fcomps
ret
and
int
mov
fistpl
or
insl
shlb
fisubrs
dec
jl
dec
dec
mov
push
adc
xor
int3
imul
lods
les
xchg
sbb
test
ficoml
movb
push
xchg
adcb
into
adc
loope
testl
jo
cmp
dec
es
fldenv
enter
dec
mov
test
sbb
dec
pop
ljmp
pop
pop
sbb
pop
or
adc
mov
sbb
ret
mov
mull
std
js
add
and
inc
adc
addr16
lret
add
add
sbb
mov
mov
je
add
inc
sub
adcl
fwait
sub
testb
in
rorl
jle
xor
or
loope
neg
ret
pop
xchg
jle
jmp
mov
cmpsb
add
mov
adc
imul
mov
xlat
scas
jno
xchg
pop
and
lock
jo
push
mov
es
mov
sti
js
movl
enter
inc
or
rcr
orb
add
pop
fwait
add
les
push
xor
sbb
cmp
sbb
addr16
adc
cmp
sahf
jb
testl
xorl
lret
add
add
fcoms
jbe
and
sti
inc
clc
pop
sub
daa
inc
insl
xorl
sbb
cmp
call
fidivrs
adc
add
mov
xor
mov
femms
fisubl
rcl
adc
fcomps
lds
aaa
sbb
aad
mov
mov
xchg
inc
push
lea
loopne
cmpsl
shr
and
adc
pop
das
in
adc
daa
jp
add
lret
mov
test
arpl
cmp
call
fsubrl
sub
xchg
pop
add
loop
cmp
jge
test
pop
cs
mov
push
addl
daa
adc
add
shl
jg
fisttps
ret
cltd
adc
inc
mov
bound
or
and
push
and
test
push
sbb
lea
jp
cmpsb
jne
ret
outsl
mov
xorb
sti
dec
ja
je
or
test
jbe
je
or
sub
sub
sti
das
adc
pusha
mov
push
or
pushf
stos
das
cmpl
movsb
xchg
mov
js
jne
sahf
popa
pop
inc
push
arpl
xor
jmp
int
cmp
je
push
adc
adc
push
xor
fnstcw
pusha
inc
mov
int3
lds
add
push
mov
mov
push
lcall
cmp
xor
push
andl
mov
mov
lret
icebp
and
sahf
dec
sub
lcall
inc
mov
fs
sar
sbb
push
sub
adc
in
xchg
mov
or
xchg
and
leave
inc
gs
jmp
ljmp
pop
inc
or
call
pop
or
ret
cmpsb
sbb
sub
dec
je
sub
adc
rorl
xor
sbb
adc
adc
cld
inc
outsb
fcmovnbe
pop
inc
or
in
mov
call
daa
or
xchg
fisttpll
ret
push
adc
inc
push
mov
nop
inc
dec
mov
sbb
fnstcw
insb
adc
pusha
jmp
dec
pusha
xor
or
divl
add
fs
pop
jp
and
push
mov
sub
adc
movsb
cmp
nop
aam
loopne
inc
jo
mov
jne
cmp
fldl
rol
inc
sbb
dec
inc
lds
mov
test
imul
fsubl
dec
or
ret
pusha
mov
ds
icebp
clc
and
orl
scas
and
or
push
add
movb
sbb
push
xchg
out
pop
pop
add
dec
imul
aad
mov
push
jg
dec
sub
je
push
push
lret
adc
or
mov
imul
fcompl
add
les
inc
xchg
xor
dec
mov
cmpl
cmp
cmp
xlat
xchg
pop
repnz
scas
inc
add
add
add
sub
adc
add
mov
push
dec
leave
test
enter
lahf
dec
xor
faddl
in
add
pop
mov
and
jecxz
iret
sub
inc
sbb
push
scas
js
lods
mov
jae
cmpsl
ret
push
sub
in
dec
sbb
nop
push
xor
int
testl
pop
cmc
dec
lcall
dec
sbb
pop
sub
out
jp
clc
xchg
push
inc
mov
je
out
loopew
mov
dec
fidivrs
xor
leave
add
pop
aas
and
adc
roll
sahf
push
dec
aam
movntps
pop
mov
sbb
xchg
pop
adc
in
xchg
push
dec
lret
pusha
xchg
dec
adc
pusha
adc
inc
sbb
mov
test
int3
lods
or
sbb
sbb
int
jne
iret
sar
dec
arpl
stos
std
decl
or
scas
mov
push
cmp
mov
or
adc
rol
fidivl
jge
clc
push
movsb
push
icebp
jle
add
sahf
and
or
mov
xor
js
inc
sub
cmpb
loope
cltd
insb
loopne
and
jb
data16
push
daa
push
mov
xor
add
es
jl
in
push
xchg
jge
xor
xchg
and
call
adc
idivb
hlt
or
scas
mov
data16
inc
pop
mov
xor
jo
sbb
push
dec
push
movsb
inc
jns
and
test
outsl
shlb
adc
xchg
xchg
jb
mov
mov
sbbl
insb
movl
stc
adc
xchg
or
lea
loope
sbb
sub
loope
ja
mov
mov
sub
sub
aas
mov
fs
add
pop
andb
sub
mov
and
push
or
inc
ja
or
jo
imul
ret
fistl
test
jl
pop
adc
or
add
js
mov
mov
in
fld
add
mov
int3
cmpsl
jp
popa
and
pop
add
inc
jp
adcb
push
mov
push
inc
mov
je
rcl
add
and
rcll
mov
daa
in
subb
xchg
push
insl
icebp
add
sub
dec
sahf
imulb
repz
pop
movsl
cltd
inc
xor
xor
aaa
push
xchg
loope
pop
aaa
in
mov
xchg
dec
cmp
inc
movsb
xor
push
mov
ret
pop
mov
movsl
mov
mov
lret
clc
add
pop
push
mov
test
sbb
mov
ficomps
add
mov
jo
xchg
mov
and
out
sbb
mov
test
adc
cmp
xor
push
and
pusha
popa
mov
bound
push
sub
adc
cmp
adc
push
dec
mov
repz
sub
xchg
push
mov
adc
jne
cmpsl
cmpsb
jo
xchg
jp
mov
mov
outsb
mov
iret
inc
push
inc
pcmpeqb
add
and
mov
pop
pop
or
cmp
mov
sub
or
mov
sbb
pop
push
xchg
ds
xor
jnp
test
movsb
or
sub
add
push
push
xor
lahf
fld
pusha
sub
pop
pop
jl
pushf
insb
enter
jne
xor
adc
mov
imul
adc
dec
inc
push
pop
and
and
popa
imul
test
in
or
inc
mov
cmp
mov
je
sti
jge
xor
cs
idivl
sti
or
jl
adc
test
cmp
comiss
inc
xchg
jmp
cmpl
push
imul
sbb
mov
add
rolb
sbb
cmpsb
pop
in
adc
pop
cmp
imul
add
inc
out
xor
adcb
jnp
cmc
add
push
shr
xor
xchg
inc
sti
push
mov
pop
push
js
xor
ja
jno
jg
ret
xchg
into
jle
sti
push
inc
stos
add
mov
dec
stos
and
lcall
mov
fwait
jmp
aam
notl
sub
cli
test
rcr
in
add
and
lret
sub
or
rcrl
imul
push
das
xor
dec
dec
push
mov
ljmp
sbb
add
and
je
mov
or
and
jle
por
dec
mov
cmpsl
loope
push
in
pop
les
xor
dec
ja
int
in
addr16
cmp
lods
repz
inc
add
insb
jp
loope
lock
mov
loope
jmp
push
loop
push
fcomp
mull
or
or
in
xor
or
lock
add
lret
mov
xchg
jge
or
add
or
and
or
punpckhwd
daa
subb
jg
xor
push
lret
cmp
je
ljmp
mov
popf
icebp
fcomps
fnstcw
dec
pop
addb
mov
xlat
jo
stos
dec
adc
push
or
sti
and
cmpsl
mov
jbe
pop
inc
sub
mov
pop
je
roll
mov
je
cmp
enter
imul
or
inc
subl
div
into
fsubs
cld
jae
mov
mov
sub
arpl
adc
or
call
scas
ret
mov
push
fstpl
inc
fsubrl
push
cmp
dec
and
sti
xor
mov
jnp
cmpb
xor
movb
jbe
xchg
orb
fsub
inc
mov
stos
loop
jp
cld
ss
inc
adc
and
gs
or
lea
dec
cmp
add
add
cmc
lret
and
cltd
push
nop
pop
orl
adc
cltd
loop
gs
push
sbb
in
adc
or
push
fisubl
dec
or
je
adc
incb
or
xchg
out
xor
push
inc
adcb
fwait
mov
nop
data16
and
sbb
xor
sub
mov
xlat
sub
add
lea
fwait
rcrb
xchg
sub
jae
inc
mov
cmp
add
jge
xchg
sub
jae
mov
xor
xor
lods
xor
dec
xor
les
fs
cmp
inc
shlb
jle
mov
cmp
mov
ss
inc
jne
movl
ret
ror
ja
jns
cmp
jle
fs
jg
jmp
push
das
inc
push
movsb
xor
js
add
cltd
int
cltd
jg
push
inc
and
jge
and
fiaddl
dec
insb
cwtl
jno
rolb
or
mov
loopne
sbbb
push
testb
mov
push
mov
mov
rclb
pop
rorl
call
addb
add
rcll
mov
adc
mov
push
popf
jno
test
and
imul
ret
jo
pop
pop
push
sub
push
mov
loope
arpl
jb
jbe
adcb
mov
mov
movsl
movsl
push
sbb
push
sub
jb
sbb
mov
imul
lea
cmp
sarb
push
loope
sub
push
movsb
cld
and
push
loope
sbb
pop
call
jle
pushf
inc
cmp
dec
jns
or
add
orb
stc
mov
add
fdivl
pop
push
into
loop
cwtl
icebp
test
mov
imul
push
push
xchg
call
mov
stos
in
jle
dec
aaa
and
in
push
testb
mov
mov
sbb
cmp
mov
push
negb
and
xor
loopne
add
push
ja
mov
js
ds
loop
cmp
xor
mov
jne
cmc
add
cmc
pop
imul
xchg
push
cltd
std
ljmp
sbb
push
sbb
popf
add
sub
dec
pop
sub
adc
or
jne
fs
push
int3
mov
add
call
popf
pop
pop
mov
aaa
add
or
loopne
and
scas
pop
mov
push
pop
in
int3
inc
dec
movsb
inc
add
add
or
rcrb
sub
imul
mov
shl
pop
rolb
pop
out
jne
mov
or
shl
cmp
in
or
add
cs
loopne
sub
ret
add
add
xor
push
xchg
push
fidivrs
mov
add
leave
arpl
mov
pop
push
push
cmp
add
add
je
popa
das
xchg
out
lahf
adc
jl
mov
and
test
mov
add
dec
or
fstl
stc
add
pop
cmp
jne
sbb
push
push
aaa
add
and
mov
lods
sbb
scas
mov
add
add
jp
add
push
xlat
push
push
jbe
push
jns
lock
pop
add
mov
push
xor
orl
adc
jns
lahf
mov
or
push
xchg
scas
in
inc
js
dec
sub
push
and
or
cmp
pop
jae
subl
nop
pop
rcl
push
jp
or
sbb
je
lods
cmpb
test
in
jo
jnp
mov
adc
subb
call
les
cmpb
adc
push
mov
sbbl
jns
inc
mov
and
ret
lock
xlat
sub
jge
adc
lret
decl
sbb
xchg
cmpl
andl
das
notl
movhps
nop
fs
or
call
loop
adc
mov
pop
and
mov
ja
lock
mov
lcall
lods
test
sub
gs
test
cmpsb
adc
sub
push
add
sub
jne
shlb
push
push
enter
jge
xor
adc
push
xor
pop
push
or
mov
mov
jmp
mov
cmp
jbe
shll
cmp
push
xor
cmpb
rcr
push
imul
push
shll
je
stos
jno
mov
xchg
inc
lock
add
bound
add
jns
mov
xchg
and
adc
adc
inc
sbb
xchg
add
mov
push
inc
add
mov
add
mov
cmp
sub
jo
add
mov
sbb
mov
cmp
push
cmp
push
pop
rol
bound
lods
add
jle
mov
mov
xchg
jno
adc
mov
clc
inc
or
sub
add
addl
xor
nop
pop
dec
nop
pusha
and
push
aad
push
nop
adc
stos
pop
fildl
add
repz
add
lods
and
lock
dec
or
scas
pop
enter
std
aaa
aas
ja
push
sbb
inc
add
mov
or
ljmpw
cltd
and
jg
loop
xor
fisttpl
and
add
inc
and
add
or
scas
les
or
rol
test
push
cmp
mov
stos
aam
je
sbb
jbe
jb
lock
mov
arpl
push
push
roll
fwait
sarl
insb
fstl
xor
repnz
mov
push
jbe
mov
fwait
sub
es
inc
adc
ret
sub
iret
cmpsb
jno
jl
push
adc
sbb
adc
int3
mov
rol
inc
enter
popf
loopne
xor
dec
mov
aas
push
push
pop
mov
xor
ss
jo
daa
inc
jmp
dec
leave
mov
sbb
addr16
push
pop
sbb
adc
add
pop
ret
jne
scas
inc
or
cmp
adc
sbb
jae
or
jecxz
and
cmp
adc
addl
sub
push
mov
pminub
adc
rorb
jne
aad
add
in
lods
xchg
push
push
dec
stos
or
sbb
jp
jmp
sub
sti
push
adc
sub
sub
lock
push
test
or
sti
and
pop
xlat
mov
fs
adc
cmp
icebp
es
pushf
add
inc
add
stos
jo
fmull
adc
cwtl
loope
cld
addb
jae
call
fcoml
pushf
mov
add
sub
addl
add
stc
hlt
test
sbb
sub
or
test
sbb
sub
aaa
ljmp
adc
mov
dec
test
adc
je
repnz
aaa
mov
dec
push
js
sbb
sbb
add
push
jge
mov
xchg
jo
dec
dec
pusha
lock
xor
pushl
and
adc
hlt
dec
xchg
xchg
mov
sbb
js
push
hlt
test
in
inc
imul
xor
scas
icebp
push
out
push
dec
push
enter
xchg
adc
inc
add
sarb
cwtl
and
push
push
and
or
pop
and
or
test
adc
or
pop
or
and
bound
add
je
dec
mov
adc
mov
inc
push
add
cmpsl
in
test
jl
push
clc
adc
lock
xor
jge
mov
push
cs
cld
adc
adc
mov
cld
sub
pop
pop
mov
fldl
pop
loopne
and
jbe
sub
lea
jle
push
shlb
cmp
jb
popa
push
pop
pop
cmp
inc
outsl
je
cmp
lock
cmp
popa
outsl
xchg
adc
leave
nop
sbb
cmp
or
dec
hlt
mov
pop
mov
jg
dec
in
loopne
inc
xor
dec
inc
dec
jle
inc
or
push
add
inc
push
inc
inc
sti
jl
test
xor
xchg
jg
cmp
jg
nop
das
faddp
jg
mov
sub
mov
push
cltd
pop
adc
test
clc
outsl
fcmovnb
push
inc
incb
sarb
and
rcl
sub
push
imul
xor
and
es
cmc
andl
xor
push
icebp
inc
inc
xchg
sbb
imul
push
inc
add
in
movsb
stos
arpl
int3
in
sub
sub
xor
cmpsb
repz
sbb
xor
dec
movsb
or
and
mov
sbb
cmp
add
rcl
jg
jno
movl
movsb
add
jae
inc
movsl
imulb
add
loopne
and
decl
jno
jne
jl
xor
or
push
bound
sub
dec
ret
or
xchg
push
xor
xchg
mov
pushf
push
mov
repz
add
popf
add
test
movl
push
mov
lret
inc
sub
shll
push
pop
jns
jmp
iret
inc
adc
movl
xor
pop
mov
daa
xchg
fwait
jmp
sbb
push
and
jnp
cmp
push
gs
movsb
ds
cmp
adc
add
cmp
pop
inc
sbbl
inc
cmp
out
and
inc
in
scas
jl
lcall
push
mov
mov
xchg
insb
add
inc
dec
add
shlb
mov
mov
xchg
or
popf
xchg
and
or
xchg
xor
jge
xchg
fstl
je
pop
cmp
sub
daa
sbb
push
push
push
cmp
mov
sbb
cmp
icebp
sti
rep
inc
inc
xor
fnstsw
or
sbb
cmp
jae
or
sbb
add
cmp
sbb
andl
outsl
xor
sub
jne
push
push
in
cld
jae
push
push
mov
cmpsb
xlat
jge
xor
push
and
push
mov
clc
pop
loopne
adc
pusha
sub
inc
xor
loop
pop
sub
sub
and
push
jecxz
aas
mov
inc
lock
mov
mov
or
les
adc
loop
fists
xor
sub
or
into
add
mov
nop
and
mov
repnz
cmp
inc
scas
push
iret
test
xor
das
mov
lret
xchg
mov
jae
sbb
mov
push
push
push
mov
add
sub
xor
mov
cmp
and
mov
add
push
xor
dec
adc
hlt
lock
inc
pusha
cld
addb
or
dec
gs
popf
push
push
test
movsl
sub
call
fdivrl
call
adc
decl
mov
xchg
push
push
xchg
dec
daa
lock
xchg
push
in
xor
in
scas
lods
sbb
mov
adc
adc
add
loopne
add
push
rolb
and
roll
sbb
push
mov
sarb
dec
jne
lcall
mov
jg
in
cmc
add
push
loope
sbb
jb
js
add
nop
dec
and
add
cmp
dec
ss
mov
pushf
sbb
or
jns
incl
sub
mov
stc
sub
pusha
loopne
dec
sub
js
es
or
clc
adc
and
inc
xor
adc
add
or
jnp
call
fwait
jb
inc
and
shlb
add
add
and
add
test
adc
jnp
xor
and
inc
stos
inc
loope
or
push
mov
and
sbb
mov
cmpsl
add
xor
dec
adc
xor
sub
in
inc
cmp
xorb
test
cmp
jbe
pop
les
adc
popl
hlt
sub
sar
divl
mov
add
rcrb
cmp
mov
or
xor
ret
sub
jecxz
es
shlb
in
jbe
mov
les
inc
inc
jmp
xchg
add
call
rcrl
or
ret
xor
fstpt
sahf
ja
test
mov
insb
sub
rcr
or
push
iret
test
pop
xchg
push
int3
rcl
mov
cmp
and
ds
push
and
icebp
mov
ret
and
shr
loop
jo
xor
stos
or
jl
adc
dec
xorb
pop
fwait
push
ret
notb
outsb
int3
aam
je
push
cmpsl
sub
or
lcall
lcall
andl
push
mov
inc
or
sbb
sti
sbb
pop
add
ret
and
aaa
int3
add
jne
pushf
sbb
lret
adc
and
lods
in
dec
pop
or
push
pop
mov
dec
or
inc
pop
enter
pusha
mov
sbb
adc
fisubrs
orb
push
shll
mov
stc
jne
loopne
ret
fsubrs
incb
inc
mov
pop
cmp
and
sbb
jae
jb
jae
das
inc
cmpl
inc
rcrb
jae
mov
add
pop
push
pop
push
cmp
ret
push
push
push
dec
icebp
sbb
push
xchg
mov
and
inc
test
inc
inc
test
adcl
or
dec
sub
in
jo
cmp
add
adc
jbe
and
inc
sbb
cltd
mov
cltd
ljmp
jnp
mov
add
push
fwait
and
xchg
or
jne
fs
or
jg
sbb
or
insb
and
dec
push
jmp
adc
daa
or
jbe
cmp
add
dec
ja
mov
add
sbbw
dec
outsb
xchg
adc
pop
enter
dec
and
adc
or
pop
fwait
dec
mov
mov
fsubs
or
sbb
fwait
lods
dec
mov
jae
jmp
mov
sbb
cmp
xchg
lret
add
xchg
daa
je
dec
adc
xlat
or
cld
or
test
sbb
push
inc
mov
pop
pop
fsubs
sub
cmp
cwtl
jne
cmp
or
dec
pop
mov
add
add
sbbb
mov
nop
xchg
mov
push
add
mov
test
movsb
mov
cmpsb
or
sti
pop
and
lods
mov
push
or
nopl
mov
and
xchg
and
mov
and
and
jg
sub
and
sbb
xchg
xchg
sub
cs
into
bound
or
push
cmp
xchg
mov
mov
xor
push
pop
jb
add
and
js
add
aas
xor
or
xor
mov
mov
xchg
rcrl
lea
mov
rol
leave
fnstsw
or
or
in
pusha
cmp
pop
add
in
inc
or
sbb
adc
xor
add
sbb
daa
or
add
sbb
int
cmp
in
fidivs
loope
jne
xchg
adc
push
ds
nop
jae
rorb
sub
jne
mov
push
inc
inc
cmp
insb
mov
or
pop
jge
aam
mov
ja
dec
cmp
mov
and
xor
adc
daa
dec
push
sbb
xchg
scas
dec
repz
inc
mov
shl
dec
sti
xor
fimuls
enter
cmp
roll
int3
loopne
in
mov
mov
mov
test
add
push
shrb
movsb
pusha
lcall
mov
xchg
dec
jne
xor
inc
pop
pop
hlt
mov
aas
pop
mov
divb
push
push
jns
push
cmp
mov
xor
push
push
cmp
addr16
push
jmp
mov
add
cmp
push
inc
or
loopne
sbb
dec
sub
inc
in
imul
sub
icebp
cmpsb
ss
dec
pop
lock
sub
or
push
lock
sub
divl
push
push
movb
iret
inc
loopne
lahf
enter
and
jns
mov
dec
arpl
inc
jecxz
sub
jns
xchg
popl
je,pt
and
shlb
loopne
lcall
mov
es
or
adc
and
xorb
inc
push
mov
cmp
sti
lods
cmc
xor
or
out
jno
push
add
pop
adc
xchg
adc
lock
add
fwait
or
jne
push
cmp
and
insb
sbb
mov
xchg
sbb
jl
xor
fs
popf
jmp
xor
out
lret
adc
push
inc
add
mov
test
sbb
insb
test
bound
xchg
or
cmp
mov
jb
mov
sbb
sub
loope
or
pop
loop
test
or
pop
sub
lcall
xor
add
mov
lret
add
popa
sub
sbb
andl
mov
and
pop
lock
movsb
imul
lock
sbb
mov
add
rcll
xor
pop
push
push
pop
adc
xor
std
inc
push
mov
loope
arpl
or
push
lods
andb
mov
pop
mov
mov
add
stos
popf
cmp
sti
in
sub
push
pop
and
adc
loopne
or
sbb
fmuls
call
add
xchg
push
les
push
adc
rclb
jne
xor
mov
nop
inc
scas
in
push
push
cli
aam
push
lret
mov
jl
jo
jnp
dec
push
cwtl
rclb
lods
or
inc
and
imul
push
sub
cli
aam
xchg
stos
sarb
fcomp
fwait
addl
xchg
cld
mov
imul
stos
xlat
aad
mov
push
add
push
jge
cmp
and
push
push
push
dec
sbb
or
loop
cli
jb
or
pusha
sub
push
push
pop
clc
jl
mov
xor
pop
hlt
adc
cli
clc
mov
test
jbe
jmp
es
setg
outsl
subb
and
movsl
push
addb
add
rolb
insb
sbb
mov
and
pop
test
scas
pop
imull
inc
and
ljmp
jo
rolb
movq
cld
sub
push
xor
adc
or
fldl
mov
cvttps2pi
fsubrl
loopne
sbb
xchg
data16
mov
or
inc
pop
mov
lea
sub
add
xchg
pop
push
cwtl
std
clc
lods
push
mov
adc
or
or
dec
ja
cmp
stos
mov
mov
sub
inc
add
dec
mov
lods
arpl
divl
adc
jb
push
cwtl
add
call
call
push
es
push
mov
into
xor
sarb
fnstenv
push
outsl
inc
push
fs
outsl
clc
orl
push
push
lds
fwait
outsb
jnp
mov
in
push
and
inc
ja
pop
mov
in
in
xchg
push
movsl
outsb
dec
ret
sub
aad
and
pusha
arpl
repnz
mov
or
lock
cmp
loopne
ret
push
jmp
loopne
and
popa
dec
icebp
xor
add
int
inc
sbb
loopne
dec
lcall
and
add
pusha
pop
ss
xor
inc
out
enter
ss
les
aam
int3
test
dec
sub
xchg
imul
push
insl
push
push
lea
pop
adc
test
mov
dec
inc
push
mov
test
aaa
into
push
out
xchg
je
mov
jo
dec
push
mov
or
mov
repz
jo
xchg
ret
xor
sbb
test
aam
out
and
bound
xchg
sub
push
loope
sbb
cs
sbb
or
pusha
ret
sbb
cwtl
arpl
das
xor
cmc
out
loope
cltd
push
addl
rclb
movsb
outsb
sbb
jno
lods
into
scas
or
push
xchg
or
mov
lock
mov
mov
loopne
data16
push
xor
imulb
push
aam
icebp
pop
push
mov
push
outsl
mov
mov
movsb
ds
push
adc
add
push
lahf
mov
xor
xlat
gs
pop
outsl
insl
jp
das
inc
jb
mov
ds
fadds
adc
xchg
pusha
lahf
movsb
dec
jmp
and
rorb
sub
mov
cmp
pop
pushf
mov
or
lahf
mov
jo
in
adc
xchg
lds
add
mov
pop
lahf
and
nop
addb
int3
inc
push
test
insb
push
dec
inc
lret
add
sbb
xor
scas
gs
movsb
int
and
or
cmpsl
add
pushf
addl
insb
xor
fmuls
sti
add
adc
adc
xlat
push
push
inc
cmpsl
stos
xor
mov
repz
popa
shll
addb
jnp
cli
push
jo
aas
xor
jo
mov
and
add
push
mov
test
fimuls
sub
and
add
divl
mull
or
ds
fs
rclb
push
and
hlt
inc
mov
sub
adcb
add
mov
xor
outsl
mov
push
cmpsl
imul
push
sbb
mov
add
les
lock
movsl
das
inc
out
add
shr
ss
push
es
sbb
enter
xlat
sbb
mov
mov
in
mov
fistl
mov
adc
mov
enter
fdivrs
stos
iret
add
imul
movsl
test
insb
and
test
cli
sub
adc
in
xor
adc
push
xchg
add
pop
sub
loopne
xor
xchg
lcall
sti
push
push
sub
mov
data16
xchg
stos
loope
dec
add
in
cmpb
cmp
clc
pop
push
or
dec
in
pop
or
call
add
insl
jno
test
dec
lret
xchg
xchg
imull
cmp
inc
clc
mov
ss
xor
nop
ljmp
jbe
popa
cmp
dec
and
xor
sub
pusha
imul
sub
xor
or
lret
out
mov
enter
or
rolb
jo
mov
and
int
popf
pop
in
inc
imul
mov
sub
lods
adc
das
add
outsl
inc
clc
and
adc
adc
xchg
inc
pushf
pop
out
jne
push
pop
sub
or
inc
jbe
xchg
movsb
test
lret
in
xor
add
adc
lahf
jp
pusha
cld
mov
adc
sub
push
stos
popf
pop
mov
scas
fmul
inc
test
and
adc
clc
mov
sub
rorl
fnstcw
popf
mov
enter
je
movsb
sarb
pop
lock
sbb
lea
nop
jo
movsl
cwtl
xor
inc
in
lods
jmp
data16
xlat
sahf
mov
mov
bound
mov
pop
sbb
jle
aaa
je
jnp
sub
mov
js
sahf
sti
mov
mov
rcll
jne
fmuls
sub
sub
pop
mov
xor
ljmp
scas
outsl
push
pop
out
pop
ret
cmpsl
mov
pushf
xchg
mov
and
dec
add
negw
xorb
sbb
push
dec
outsb
xor
cmp
lcall
or
mov
xchg
mov
sbb
incl
push
inc
mov
adc
loope
addb
pop
add
sar
insl
mov
xor
push
jbe
and
dec
outsl
shl
cmp
jno
jmp
cld
test
xchg
lods
mov
or
loopne
sub
adc
push
ud1
incb
sbb
add
adc
and
push
pop
cmpsb
push
adc
and
pop
popf
cmpsb
outsl
xlat
push
push
repz
adc
mov
push
lea
or
mov
adc
sub
push
movsl
dec
lock
and
dec
mov
enter
pop
lods
mov
sbb
add
andl
push
fisubs
push
ret
push
lods
pusha
sbb
xlat
adcb
fwait
and
mov
call
mov
jge
jbe
mov
loopne
xchg
test
incb
ret
sub
mov
fsubr
pop
xlat
lret
lret
xchg
data16
out
rorb
pcmpeqw
mov
mov
xor
fnsave
int3
test
movsl
fldcw
push
ret
adc
dec
and
jno
xor
lea
mov
incl
dec
jg
adc
mov
inc
inc
inc
push
jl
loop
jmp
push
js
jae
inc
stos
dec
cmp
jb
cmpsl
pop
sub
mov
lods
or
jb
xchg
lock
subb
jge
and
dec
xor
in
repz
push
cmpl
add
xor
mov
add
out
jo
mov
and
push
mov
mov
mov
pop
and
mov
xchg
je
js
xchg
or
add
sti
mov
mov
je
or
jecxz
stos
push
mov
rorl
pop
fsubl
rcrl
loope
jp
pop
hlt
lock
repz
ds
jle
xor
or
sbb
cmp
cmpb
mov
pop
stc
push
call
pop
or
cmpl
adc
andb
pop
ss
outsl
xor
cmp
jbe
push
stos
sti
lea
cltd
gs
push
and
cltd
ret
cmp
jb
add
xchg
lods
adc
cmp
push
cmp
movsb
scas
sbb
push
aaa
ret
ljmp
jne
scas
dec
jno
pop
pop
sub
dec
or
xchg
pop
call
loope
int3
mov
jae
insb
arpl
mov
push
adc
xchg
xor
fcmovbe
sub
in
in
push
jo
loope
in
push
push
xchg
rcl
sbb
or
add
fsubrs
push
xor
popa
push
pop
add
loopne
add
mov
or
lahf
push
push
and
mov
xchg
add
loop
fdivl
out
push
loop
inc
lods
adc
bnd
ss
adc
mov
shr
filds
add
push
rolb
push
mov
and
jb
xor
dec
jno
mov
adc
mov
addb
scas
cltd
mov
scas
popf
mov
jp
or
cmp
push
or
inc
pop
rolb
push
jns
cmp
sarl
mov
pusha
add
xorl
ja
mov
push
lcall
adc
jg
jae
mov
and
xor
xor
add
sbb
std
pusha
mov
and
mov
movsb
test
decb
cmpsl
adc
inc
mov
aaa
clc
jge
divb
outsb
lock
sub
repz
xor
xchg
adc
cmpsb
mov
jb
pop
leave
sbb
iret
sub
or
adc
daa
cmp
lock
mov
mov
lods
push
rcrb
jo
push
das
aas
movsb
mov
out
cmp
xor
not
pop
std
sub
out
pop
xchg
jp
je
cli
ljmp
je
data16
sub
push
aam
dec
scas
jle
call
cmp
jg
outsb
adc
int
add
cmp
or
outsb
add
inc
sub
jge
push
jle
cmp
jns
xchg
push
ficompl
jp
outsb
and
mov
lock
mov
daa
pop
clc
pusha
xor
inc
test
fisttpl
jb
jmp
notb
jge
cmpsb
dec
cmp
cmp
xor
mov
sbb
xor
mov
inc
inc
jmp
inc
jo
add
addr16
and
or
cld
lock
pusha
iret
add
ret
xor
and
movsl
push
or
cmpb
add
jae
inc
or
adc
sub
jge
lret
jmp
pop
cmpsb
xor
add
dec
fs
or
push
sbbb
pop
pop
jge
mov
sub
mov
dec
seta
jle
mov
mov
cmp
movsl
outsl
push
out
sbb
andl
and
adc
push
mov
scas
add
push
sarl
imul
lret
xchg
lret
mov
xchg
les
aam
in
add
je
fldcw
adc
add
mov
insl
adc
jo
jl
push
inc
movsb
adc
mov
add
stos
pop
push
push
inc
adcb
in
jns
adcb
test
add
mov
add
push
in
and
jl
rolb
push
imul
xchg
popa
aaa
imull
andl
enter
or
or
popa
add
jo
push
or
jge
push
test
adc
rorb
int
rclb
divl
jo
xchg
rcl
push
add
and
je
das
sbb
adc
add
movsb
add
add
nop
cltd
xchg
ret
mov
iret
cmp
lea
add
cmp
fldl
cmp
jle
inc
inc
js
mov
and
pop
outsl
push
mov
mov
dec
std
add
mov
xchg
mov
or
test
xlat
mov
pusha
and
dec
add
push
pop
push
pushf
xchg
nop
push
scas
cwtl
scas
mov
mov
xlat
clc
cmc
dec
insb
mov
xchg
push
jg
xorl
fsts
mov
rol
add
lahf
push
xchg
mov
mov
adc
orb
xchg
jae
xchg
add
xchg
movsb
sub
fistpl
fcomps
push
aas
mov
test
push
and
test
add
mov
mov
cwtl
add
push
hlt
push
into
dec
cmc
xchg
or
loope
les
push
xor
imul
xchg
imul
or
sarb
decl
inc
ss
mov
incl
adc
je
cltd
test
scas
test
gs
pop
cmp
loope
xor
js
loopne
shrb
lea
pop
out
int3
xor
popf
sub
mov
inc
push
stos
push
add
cmp
push
test
inc
sbb
xor
and
rclb
push
sbb
or
jp
loopne
pop
ljmp
or
inc
dec
jmp
mov
sub
mov
pop
fadd
dec
jnp
mov
or
sbb
mov
mov
call
nop
or
inc
add
cmp
testl
cmp
jno
xor
insl
lea
mov
mov
rolb
aaa
jl
rol
call
aad
mov
adc
mov
mov
add
or
inc
test
outsb
nop
lcall
mov
shr
cmp
jbe
add
jmp
add
fcompl
cltd
sar
add
add
add
inc
xchg
and
mov
test
mov
adc
dec
mov
xchg
inc
in
fistps
push
int3
xor
pop
mov
push
mov
loope
mov
cwtl
stos
das
mov
test
add
cmp
add
sub
push
das
fisubs
pop
scas
and
push
pop
or
les
leavew
int3
add
dec
cli
aad
add
sbb
filds
mov
jl
mov
shrb
or
cmp
repnz
test
xor
sub
lahf
shlb
fmull
ror
sub
or
xor
aaa
orl
jb
push
mov
push
xor
sub
sbb
cwtl
arpl
and
pop
xorl
aas
jg
and
stos
inc
sbb
jl
aaa
je
leave
mov
jmp
mov
popf
rclb
loop
sbb
call
insb
mov
ds
add
popf
in
inc
jge
add
inc
rcrb
int
inc
mov
push
sbb
xchg
xchg
or
test
or
add
and
dec
cmp
inc
fisubrl
ja
les
xor
dec
mov
scas
sub
xchg
mov
push
mov
aas
mov
add
mov
ret
call
repz
push
sbb
or
push
lcall
mov
pop
xchg
adc
outsl
lods
dec
loopne
inc
clc
jle
in
push
add
dec
cs
fnsave
push
add
jmp
insl
inc
rorb
add
stos
dec
jne
add
fsubrs
xchg
or
rsqrtps
dec
negb
cmp
sbb
or
int3
stc
fmuls
arpl
mov
cs
notb
je
mov
sbb
int3
add
ret
lock
sbb
push
femms
sarl
inc
sbb
out
popa
clc
pop
mov
inc
xor
adc
enter
jmp
pop
dec
adc
out
rorb
pop
mov
dec
inc
adc
je
adc
dec
sub
test
test
enter
nop
sbb
int
push
pop
js
dec
in
adc
xchg
sbb
jle
dec
mov
in
inc
xchg
push
push
lock
ds
mov
push
ds
pop
mov
pop
adcl
shrl
enter
push
sub
fsubrs
mov
jne
push
or
jno
dec
test
test
add
or
bound
fcom
sub
push
mov
pushf
pop
jmp
aaa
xchg
ret
icebp
xor
scas
jb
push
dec
movsb
roll
cmp
dec
xchg
ja
and
sbb
xlat
mov
es
add
filds
mov
mov
push
push
xor
clc
sub
mov
sbb
push
push
pop
imul
stos
incl
adc
out
pop
insb
mov
mov
negb
pusha
lret
mov
cltd
mov
in
arpl
loop
or
add
xchg
dec
je
push
jns
arpl
insl
lock
xor
into
dec
scas
mov
push
jno
push
movsl
adc
int3
ret
pop
stc
sbb
mov
fistps
addl
cltd
push
popa
enter
lcall
vpshab
jmp
mov
push
call
xchg
dec
ds
inc
jge
add
add
pop
jg
into
push
sti
push
add
xor
popa
dec
imul
pop
test
dec
jne,pn
inc
push
sbb
or
inc
or
ret
lret
push
add
aam
jmp
das
cmp
pop
cwtl
cli
or
ljmp
cli
xor
cli
cmpsb
mov
add
test
testl
lock
pop
mov
push
and
lret
mov
push
stos
add
adc
popf
adc
cld
push
mov
push
push
xchg
aaa
add
fsubs
je
lods
rcll
inc
xor
insl
add
add
fistpll
subl
insl
enter
add
adc
repnz
dec
push
mov
mov
mov
push
rcll
sub
mov
rdmsr
mov
sbb
add
or
popa
jl
movsl
sub
jnp
arpl
out
pop
sbb
ret
add
pop
cltd
mov
addr16
sbb
push
in
and
inc
sahf
mov
or
add
sub
inc
fwait
sub
cmp
and
imul
xchg
cmp
sbb
pop
inc
pop
lea
mov
jmp
mov
clc
push
cmpb
adc
dec
mov
jns
es
js
push
bound
xchg
and
adc
pop
mov
sub
xchg
lods
lea
lcall
cmp
pop
je
aaa
add
dec
inc
cmp
cmp
push
rolb
pop
shlb
jne
les
pushf
idiv
repnz
mov
mov
ficoml
mov
repz
mov
mov
or
sbb
inc
or
cwtl
roll
mov
mov
sbb
adcb
sub
sub
cltd
sbb
cli
testl
rolb
push
add
or
push
jl
push
xchg
mov
arpl
dec
adc
or
adc
aaa
inc
dec
adc
loopne
xor
call
lret
cmpl
hlt
jle
push
pop
sti
mov
push
jne
jo
sub
push
cmp
cmp
in
dec
jbe
push
mov
ds
and
pop
cmp
shrb
sbb
xor
pop
pusha
leave
lret
or
addl
xor
and
and
sub
loope
test
xchg
cmp
inc
js
dec
ds
xor
in
add
mov
pop
mov
cltd
push
mov
lret
push
cmp
hlt
xor
and
add
pop
imul
push
fildl
add
or
mov
add
push
loop
rcrl
sbb
and
push
stos
dec
lea
add
orl
popa
or
add
repnz
adc
incl
or
mov
fs
mov
or
adc
test
mov
enter
cmp
push
dec
test
pusha
mov
nop
xchg
subb
in
in
movsb
pushf
lods
mov
int3
mov
repnz
in
cld
rclb
sub
inc
xor
fmull
cmpb
xchg
inc
lea
cwtl
andl
mov
mov
jl
mov
popa
stos
subl
das
push
mov
add
lcall
mov
dec
aad
ss
mov
and
aas
mov
pusha
xchg
mov
add
icebp
inc
adc
ss
sbb
mov
dec
xchg
push
mov
xchg
jl
xchg
dec
enter
in
je
popf
add
fs
js
adc
adc
shlb
sub
divb
add
jae
inc
or
mov
xchg
addr16
dec
inc
mov
mov
imul
test
mov
push
cmp
jmp
or
push
jge
je
sbb
cld
lahf
jae
scas
aas
cmp
jne
push
mov
fcmovnb
cltd
pusha
loopne
cmpsb
fs
sbb
sub
xlat
imul
jmp
outsb
ss
addl
mov
add
ljmp
movsb
mov
inc
push
iret
mov
add
sbb
jmp
xor
push
inc
sub
mov
inc
addb
lds
jo
sub
into
movsb
adcl
mov
subl
adc
aaa
cmp
push
push
test
sarb
inc
sub
jne
test
rcrb
mov
jg
or
jo
push
mov
cmp
jno
or
ret
sub
loopne
cmp
lods
push
adc
mov
dec
shlb
popf
push
add
dec
lock
lret
sub
in
mov
clc
cmp
and
das
jge
dec
inc
or
jl
out
test
pop
clc
js
sbb
add
dec
and
pop
sbb
imul
dec
push
xor
jmp
jge
add
push
dec
loop
fwait
mov
cmp
pusha
inc
jo
ret
mov
and
rcl
push
inc
hlt
jmp
mov
push
mov
sbb
mov
loopne
cmc
rcrb
or
movsl
loop
push
add
lods
adc
sub
cmp
repnz
sub
pop
lret
sbb
inc
inc
mov
adc
inc
mov
jl
or
mov
rclb
gs
pop
icebp
out
adc
imul
sbb
xchg
add
pusha
push
push
xlat
inc
mov
repz
iret
xchg
iret
push
push
ja
and
inc
push
sub
or
clc
mov
add
insl
fsubrl
test
in
xchg
jmp
stos
inc
loop
pop
xor
pop
jg
or
subl
sbb
cltd
pop
leave
fldenv
addb
pusha
or
les
ss
jnp
dec
cmpsb
dec
sti
in
repz
stos
in
mov
add
add
leave
jne
loopne
mov
mov
sahf
imul
add
popf
les
jo
les
inc
xor
cmpsl
adcl
mov
rcll
sbb
imul
aas
scas
je
xchg
push
push
xchg
mov
mov
inc
mov
repz
dec
or
nop
cmpsl
mov
cltd
sbb
lret
andl
or
add
aaa
test
xor
enter
hlt
mov
icebp
lock
faddl
adc
sub
add
aaa
add
cmpsb
movsl
push
push
movsl
mov
inc
hlt
fstl
cld
xor
loopne
arpl
xor
fldl
pop
fistpl
fsubr
pop
faddp
andl
sbb
mov
adc
popf
sub
mov
cs
and
inc
insb
adc
add
xchg
lods
and
nop
jne
sbb
mov
cmp
lret
sbb
mov
leave
pop
test
pop
les
adcl
push
add
fdivrs
sub
mov
clc
xor
out
mov
add
filds
sub
sub
add
sbb
push
or
lds
add
mov
cmp
or
and
sbb
clc
dec
xlat
fsubs
vphsubbw
mov
xor
aaa
cmp
call
push
cmp
mov
int3
dec
sbb
cmp
lock
push
xor
jnp
mov
jne
push
fistps
in
sub
mov
add
ret
fimuls
divb
jmp
mov
cmp
jge
and
xor
clc
movsl
movsb
dec
sbb
es
xchg
inc
int
push
insl
cmpsb
mov
adc
inc
mov
gs
and
adc
cwtl
cltd
pop
aaa
push
imul
sbb
mov
pusha
popf
cwtl
insl
test
jg
cmp
add
cmp
loopne
stos
sbb
adc
push
pop
pusha
xchg
pop
mov
loopne
or
imul
inc
add
adc
push
pop
xchg
add
ficompl
or
jns
mov
mov
wrmsr
mov
adcb
cld
mov
bound
pop
dec
mov
mov
pop
bound
leave
inc
pop
arpl
xchg
jmp
pop
sub
push
insl
mov
sbb
nop
fisubrl
adc
mov
pop
ret
dec
cwtl
add
pushl
add
ljmp
dec
or
jne
pop
mov
rcrl
mov
aam
test
mov
mov
inc
adc
mov
movsb
sub
mov
imul
and
lock
adc
push
loop
fcomi
mov
ja
jle
loopne
xchg
test
add
fisttpll
in
and
and
pop
fmuls
push
adc
adc
das
faddl
test
cmp
mov
add
adc
xchg
rorb
or
dec
ret
inc
stos
out
cmpsb
xorl
fsubs
mov
test
fcoms
les
push
push
js
push
outsb
rcll
add
dec
sbb
scas
fnstenv
insb
add
push
fmull
popa
xchg
cmp
adc
and
loope
fsubl
push
xlat
sub
or
push
lods
fildl
dec
inc
mov
rolb
pop
dec
sub
sub
mov
xor
enter
jle
inc
cmpl
adc
sbbb
mov
fisubl
je
bound
adc
cmp
pop
fcoml
adc
push
pop
dec
add
push
mov
sub
call
pop
das
push
rclb
test
pusha
mov
push
cs
clc
pmuludq
loop
dec
adc
pop
and
add
repnz
jg
xchg
repz
sub
shrb
arpl
sbb
icebp
lock
or
iret
fwait
stos
aad
rorb
jle
int
add
ret
mov
jne
mov
xchg
add
out
enter
mov
in
sub
shrl
jl
ss
mov
ret
inc
arpl
mov
mov
xchg
sub
clc
mov
mov
mov
jmp
mov
xchg
or
shld
push
add
or
inc
push
pop
je
subl
push
lods
jmp
aam
bound
addr16
mov
mov
add
mov
pop
add
cmp
es
clc
xor
inc
rolb
movb
push
pop
scas
adc
adc
clc
add
rcrl
scas
leave
add
pushl
dec
xchg
adc
lods
mov
adc
sub
adc
mov
sub
push
sbb
int
pop
push
dec
pop
stos
aas
cmp
jo
ret
push
xchg
push
or
mov
inc
lods
mov
pop
dec
dec
shll
in
cmp
sub
push
add
pop
or
sub
enter
adc
xchg
sbb
or
xor
jecxz
lods
xor
loopne
or
or
test
popa
mov
imul
sbb
jle
shlb
movb
and
mov
in
xor
sbb
jmp
cmpl
ljmp
sbb
int3
or
subb
inc
adc
mov
cwtl
sub
push
mov
fs
or
cmpxchg
sub
in
and
cmpb
sbb
xchg
dec
lea
push
popa
inc
add
pop
lea
sbb
pop
sbb
jl
jl
nop
adc
loopne
adc
push
mov
push
enter
add
inc
push
inc
xchg
xor
inc
sub
and
ljmp
push
pop
imul
push
fdivrl
sub
lds
dec
jno
jno
ljmp
inc
ds
push
ds
jl
cmp
mov
xor
mov
dec
xchg
mov
in
aas
or
xor
inc
cmp
shlb
push
imul
push
cmp
xor
jne
dec
rcll
enter
clc
cltd
sbb
cs
cmpsl
outsl
pop
sbb
sbb
add
or
popa
cmp
pushf
dec
or
cmp
lock
add
dec
push
test
lret
mov
rclb
test
out
and
movsb
inc
sub
adc
push
mov
and
mov
insb
lahf
into
sub
loope
jno
cmpsb
dec
js
aam
in
push
fisubs
imul
dec
cmp
lods
les
inc
xor
loope
test
icebp
les
cwtl
inc
fs
loopne
in
in
les
or
jbe
inc
or
mov
add
add
stc
insl
sub
icebp
jne
es
sbb
ds
sahf
xchg
xor
fadds
lods
xchg
leave
daa
in
testl
adc
sahf
pop
mov
ret
enter
and
shl
xchg
jbe
lds
push
stos
mov
pop
jmp
xchg
mov
mov
jb
and
add
push
push
test
xor
sbb
sbb
rcrb
loopne
xchg
cwtl
xchg
rolb
xor
xchg
leave
loopne
inc
push
addr16
cmp
inc
sahf
add
xor
mov
add
cmpsl
testl
sti
sbb
or
dec
shrl
std
lcall
mov
dec
aaa
sarb
xchg
adc
imul
and
pop
stc
push
and
jp
xor
pop
stc
pop
push
push
jne
push
push
sub
stos
cmc
mov
in
or
dec
orl
pop
dec
xchg
pop
call
movsb
inc
add
testl
push
inc
sub
jmp
jp
jo
add
adc
dec
js
test
sub
push
add
jle
jge
inc
test
stos
test
stos
dec
pusha
cmpsl
dec
pusha
add
incb
pop
push
lods
or
cltd
call
jo
or
xlat
ror
push
push
sbb
xor
sbb
or
hlt
sub
xchg
loope
or
fdiv
lods
mov
in
in
or
call
dec
test
jo
stos
pop
inc
in
cmp
in
mov
adc
les
push
jecxz
adc
add
roll
sub
jmp
and
rolb
jb
in
scas
jecxz
fld
mov
roll
dec
add
test
leave
sub
jg
sbb
ss
cmpsl
imul
mulb
mov
shlb
cmp
push
arpl
cmpsl
sub
lahf
push
lret
cli
pop
loopne
nop
lock
push
dec
je
sub
inc
loopne
jbe
fisubrs
sbb
push
mov
ss
and
mov
cwtl
dec
pop
loopne,pn
pop
inc
fcoms
xor
cmp
sub
inc
cli
push
jg
dec
adc
add
addb
add
mov
cltd
es
add
fld
adc
and
inc
rcrl
or
push
xor
imul
loop
inc
mov
adc
push
jl
inc
inc
add
shrb
pop
inc
jmp
pop
cmp
inc
inc
cmp
xlat
mov
aam
mov
imul
imulb
dec
test
push
mov
idivl
and
popa
mov
in
inc
sbb
xchg
jge
loop
fnstenv
in
fidivs
out
add
and
cmp
mov
jnp
dec
xor
loopne
cmp
push
add
dec
and
jl
lahf
jge
sub
push
xor
add
jne
adc
mov
testl
cmp
inc
inc
cmpsl
shlb
dec
push
sub
xchg
xor
adc
pop
sbb
insb
push
and
jbe
inc
xchg
pusha
pop
clc
andl
dec
xchg
aaa
dec
xchg
add
pop
lea
inc
les
loopne
push
fsubp
mov
push
lcall
push
mov
push
popa
leave
sub
pop
or
xor
mov
cmp
dec
add
lods
xorb
mov
and
add
testb
adc
and
adc
add
cmp
ret
dec
lahf
or
sub
mov
or
pop
aaa
adc
push
push
dec
cmp
xlat
xor
push
enter
cli
std
sbbl
jge
or
jns
dec
sub
cmp
jo
sbb
fdivs
sahf
adc
or
add
or
sub
add
je
add
adc
and
add
sbb
sub
adc
fisttpl
jecxz
adc
je
stos
test
int3
pop
adcl
pop
jno
enter
inc
xchg
lock
cmpsl
flds
cmp
pop
test
inc
aaa
add
cmp
movsl
mov
lock
aaa
or
mov
sar
add
test
push
andl
pop
loope
pop
adc
add
cmp
or
adc
enter
push
sub
jl
sbb
sbb
add
in
and
push
sub
sbb
leave
push
inc
fbstp
scas
dec
push
jecxz
inc
mov
xlat
mov
dec
fadds
pop
and
imul
cmp
mov
movsb
push
ds
xor
xor
pop
rolb
mov
inc
pusha
xchg
mov
lea
mov
xor
add
data16
je
sub
inc
or
add
je
js
and
mov
pop
cmp
jl
xor
lret
into
dec
inc
cmp
jns
dec
fadds
rorb
cmp
pop
in
aaa
shll
dec
push
cmpb
es
push
out
push
punpckhdq
jl
shrl
pop
cli
icebp
dec
mov
loope
ret
sbb
or
std
dec
xchg
mov
push
pop
je
push
mov
cmp
pop
jae
pop
xorb
inc
cmp
or
push
iret
mov
xchg
xor
loopne
cmp
inc
and
pop
jne
add
jge
sbb
scas
sti
push
jmp
push
sbb
aaa
inc
shll
dec
int
xchg
ret
xchg
stos
xor
bound
pop
push
jne
jl
jo
faddp
inc
mov
dec
push
inc
jecxz
lds
lret
xor
push
mov
jbe
lea
shl
lods
rcll
pop
sub
movsl
xchg
sahf
push
rorb
les
xchg
and
mov
add
sbb
pop
mov
xor
or
stc
jbe
loopne
scas
pop
push
pop
sbb
nop
imul
adc
js
add
xorl
loopne
pop
mov
and
aaa
inc
andl
mov
inc
fs
or
mov
nop
push
fldl
lods
or
and
ret
sub
pusha
push
rorb
je
inc
mov
dec
and
subl
sub
cmpsw
aas
mov
adc
push
mov
mov
jle
std
add
mov
je
mov
aas
ret
xchg
mov
adc
ds
lock
adc
je
js
cmp
in
je
lret
mov
lock
sub
sbb
or
xor
insl
popa
lods
les
out
insb
dec
sbb
cmp
lods
or
sbbl
inc
adc
sub
add
addl
sub
mov
xchg
adc
mov
cmp
push
xor
push
cmp
and
data16
aam
jbe
aas
jne
xor
xchg
test
mov
testl
push
or
fisubl
push
cmpsl
ret
out
mov
adc
add
push
dec
cmpsl
test
inc
aaa
mov
add
sbbl
pop
fdiv
je
shl
rcrl
ret
add
in
add
mov
jmp
adc
cmpb
jne
movsb
aad
add
push
mov
ss
xchg
mov
dec
sub
add
adc
mov
in
je
adc
or
hlt
mov
mov
dec
inc
push
imul
add
loopne
and
push
adc
xchg
shrb
xchg
and
adc
mov
in
aad
cmpsb
shl
clc
push
dec
jge
jl
add
pop
push
and
call
cld
mov
and
mov
movl
dec
or
dec
in
mov
cmp
rorb
sbb
aaa
fiaddl
and
and
dec
sub
mov
inc
add
fs
mov
shlb
jne
inc
or
mov
lods
xchg
test
and
jl
movsl
out
pop
and
adc
mov
push
adcl
mov
arpl
add
fs
stos
ljmp
fwait
rcl
mov
dec
push
jecxz
pop
xor
nop
cmp
lods
int
mov
icebp
jnp
or
movsl
popf
inc
mov
sti
ss
addl
aad
cmp
test
cmp
and
adc
pop
bound
cmp
dec
rcr
sub
lock
push
or
xchg
shlb
mov
adc
shrl
cmp
dec
push
push
mov
imul
fiaddl
xor
jle
rcrl
lock
push
adc
mov
sub
adc
xor
jae
ljmp
add
xlat
into
popa
jmp
fstps
out
push
scas
dec
inc
stos
loopne
loop
push
dec
in
adc
inc
inc
or
loope
mov
add
fwait
jo
or
and
mov
insb
mov
xchg
jmp
dec
add
or
ja
add
movsl
adc
xchg
add
sub
adc
mov
ret
jp
pop
push
cmp
mov
test
or
and
add
fsubrs
ffreep
addb
fucomi
add
test
js
aam
je
mov
xchg
mov
inc
jle
adc
add
call
add
dec
clc
mov
push
mov
ss
out
or
sub
and
or
sbb
test
inc
in
sub
or
jg
cmpl
add
outsb
loope
test
and
jecxz
jecxz
adc
dec
pop
add
jl
movl
mov
popa
ret
cmpl
mov
gs
lahf
sub
sub
sub
fcmovnbe
and
xchg
enter
scas
ds
or
adc
cmp
sti
jmp
loop
jmp
inc
lahf
mov
aas
rorb
add
xchg
cmp
sahf
and
push
push
aad
mov
sub
adc
xchg
push
ret
mov
push
or
pop
jno
push
test
popf
daa
xor
dec
mov
cli
lea
add
adc
dec
inc
mov
mov
mov
outsb
loope
add
cs
cmp
in
bound
imul
push
dec
test
jecxz
push
mov
dec
push
xchg
or
mov
lods
in
or
pop
addl
inc
xor
dec
mov
pop
jne
add
push
pop
xchg
jno
fs
scas
sti
jne
shl
jb
push
push
sub
addb
cwtl
xchg
inc
inc
or
jo
mov
enter
loopne
xor
xorb
movsl
int
lock
or
inc
push
xor
xchg
test
inc
sbb
nop
push
mov
icebp
iret
clc
xlat
daa
sbb
dec
bound
jns
and
in
inc
fwait
pop
or
loopne
push
inc
adc
mov
sarb
loope
mov
dec
add
adc
xor
pop
sbb
push
fistpl
scas
sbb
xor
mov
push
push
ss
add
lea
jmp
push
mov
movb
imull
push
in
add
inc
mov
inc
mov
pusha
add
add
push
push
pop
leave
and
push
enter
jae
dec
push
adc
clc
sbb
jne
fsubs
mov
test
mov
sbb
dec
or
push
or
push
sbb
add
push
push
push
xor
pop
push
sahf
aam
push
and
jb
add
or
cmpsb
pusha
mov
adc
push
add
inc
or
or
sbb
sub
je
xor
jp
or
sarb
add
push
push
dec
push
cli
push
in
jo
xor
adc
in
jo
sbb
sbb
std
daa
popa
mov
sbb
mov
orl
mov
dec
mov
push
scas
fs
scas
push
test
inc
mov
cmc
clc
lock
add
jae
or
aad
add
jbe
enter
hlt
fstp
push
xor
add
inc
or
adc
xorl
pop
adc
es
nop
mov
mov
mov
or
mov
push
imul
in
push
lock
jl
push
dec
jmp
push
shl
testl
lock
data16
jg
inc
sbb
sarl
shlb
mov
nop
inc
or
xor
adc
cmp
lock
scas
push
stc
and
jge
movsb
adc
leave
bound
mov
lods
scas
adc
push
xor
adc
test
dec
in
inc
push
iret
jo
and
jne
insb
sbb
dec
mov
test
dec
call
mov
movsl
fwait
subb
mov
test
cmp
in
in
lret
add
jo
and
inc
sub
test
jno
jbe
cmp
add
jmp
in
push
enter
lea
adcb
push
in
shlb
inc
push
mov
rcrl
jmp
push
pushf
cmp
or
pop
enter
scas
fsubrs
dec
mov
add
xchg
sub
adc
ljmp
clc
iret
push
ret
mov
fsubrl
xor
mov
mov
mov
mov
mov
mov
lea
imul
add
rclb
mov
ljmp
jb
outsb
push
out
xchg
out
imul
test
mov
int
jno
xor
add
lods
loopne
jg
mov
adc
mov
fsubs
mov
cmp
jno
xor
or
xorl
cmp
shrb
sub
add
je
xlat
add
jb
rcrb
xor
sub
add
mov
mov
xlat
cmp
or
mov
stos
mov
xor
or
int3
or
mov
lret
push
pop
push
rorl
sub
push
pop
mov
adcb
hlt
stc
shrb
test
xlat
mov
push
into
inc
pop
adc
sbb
push
xor
or
pushl
inc
imul
fsubl
mov
jnp
jnp
mov
shl
push
fsubs
jl
dec
xorb
or
and
rorl
sub
adc
rep
push
subb
xchg
lahf
mov
test
loopne
sub
ss
sub
pop
or
test
pop
in
mov
sbb
in
je
stos
cmp
xchg
push
push
sahf
mov
jo
inc
into
repnz
xor
mov
jns
ds
pop
jns
pop
cld
mov
test
push
pop
push
mov
fidivrs
inc
mov
sbb
mov
or
or
rcl
sar
call
and
push
or
push
shl
push
mov
movsb
mov
mov
or
mov
stc
stos
add
adc
cmp
mov
enter
lfs
sub
shl
push
in
add
push
faddl
notl
daa
in
js
lret
pop
add
jecxz
shlb
cmp
scas
push
push
scas
inc
sub
clc
sar
pop
repnz
in
dec
jo
push
and
xchg
popa
js
enter
clc
push
add
clc
sbb
nop
rcl
enter
ret
dec
inc
cmp
xchg
cmp
scas
mov
adc
mov
add
mov
mov
repz
push
jne
clc
sbb
sbb
movsb
cmp
pushf
pop
or
sarb
mov
shr
nop
and
and
ja
data16
scas
or
or
adcb
rcrb
add
mov
imul
insb
or
mov
dec
rclb
out
int3
jne
movsbl
dec
sub
xorl
std
clc
adc
jbe
push
paddb
cmp
cmp
mov
adc
or
lret
mov
cwtl
jo
jo
les
inc
cmp
dec
xor
or
push
push
cmp
loope
inc
rorl
and
pop
sub
inc
add
jle
test
test
mov
cltd
pop
sbb
mov
cmp
jl
icebp
pop
add
pop
xchg
pushl
sub
movsb
push
fs
push
fildl
add
xchg
sbb
pop
cmp
out
cmp
push
add
hlt
push
inc
addl
and
pop
and
push
mov
pop
dec
ja
dec
add
pop
cmp
xor
add
sarb
cmp
stos
lcall
jb
add
jb
or
or
jnp
mov
jmp
or
jno
jmp
push
jmp
mov
jmp
adc
pop
adc
pop
adc
push
mov
jmp
adc
dec
adc
aas
mov
jmp
sbb
xor
jmp
mov
jmp
sbb
and
pop
xchg
mov
mov
jmp
and
int3
imul
inc
and
inc
verw
loopne
xchg
mov
dec
adc
repz
cmpsl
jge
mov
mov
fnstsw
in
cmc
std
add
sahf
out
adc
sahf
out
sahf
xor
cmp
dec
jns
out
dec
push
pop
pop
arpl
jns
out
insl
jb
jl
out
sahf
addl
pop
into
add
add
push
pop
or
and
idiv
jg
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
push
xchg
mov
arpl
mov
add
test
rcrb
lods
cmp
in
and
mov
or
cmp
cmp
xchg
out
imul
or
shlb
aam
stos
shr
sub
out
pop
mov
fsubs
addl
push
xor
dec
mov
lods
jbe
aaa
xor
mov
or
decl
sbb
adc
pop
mov
cmp
loope
pop
inc
xor
xchg
inc
cmp
mov
lea
and
sub
sbb
cs
lret
and
adc
adc
movsl
mov
fsub
jbe
cmp
cmpsb
xor
mov
test
call
xor
inc
jmp
xchg
fadds
add
pop
or
iret
and
sbb
loop
faddl
add
adcl
jns
mov
test
mov
dec
rcrb
cmp
jae
sbb
ljmp
pop
das
inc
mov
inc
jge
push
adc
data16
sub
inc
pop
push
push
push
rclb
xor
pop
xor
fisubrs
xchg
loopne
sbb
insb
pusha
pop
in
pop
cld
add
push
outsb
add
adc
pop
add
sbb
xchg
sbb
call
stos
mov
add
xchg
jno
shll
adc
fbld
adc
pop
mov
pop
xchg
aaa
in
mov
call
add
jb
movsb
ret
push
push
movsb
and
dec
adc
rorb
pop
push
inc
push
xchg
mov
xor
je
pusha
xchg
push
mov
ror
jg
lcall
xor
fld
ret
or
call
xor
add
add
add
jne
jne
fsts
pop
iret
or
insl
push
and
and
not
and
xor
add
add
div
ds
sub
jge
fsubr
add
or
mov
ror
mov
sti
jg
data16
aam
cli
and
and
mov
push
rcrb
test
xor
or
add
fs
fcmovbe
lcall
mov
movsl
or
push
or
xlat
and
mov
into
add
add
dec
roll
call
jb
rcl
call
pusha
nop
xor
fwait
xchg
subl
sub
ljmp
rol
rcll
add
movsb
imul
fsub
in
mov
cmpsb
in
aam
xor
dec
in
shl
in
sub
dec
fwait
push
cmp
data16
add
or
cmp
loopne
cwtl
mov
aaa
fadd
xor
call
rorb
add
call
enter
cmp
dec
shll
pop
cmp
aam
jl
pop
xor
test
inc
jl
or
cmp
cmp
pusha
cwtl
cmp
add
sahf
xor
test
jge
and
call
xor
or
add
and
xor
pusha
xor
push
xchg
lock
and
xor
add
push
ret
push
jo
ficoms
or
les
pushf
xor
or
filds
sbb
addl
jne
mov
pop
pop
dec
inc
sbb
lods
dec
fadds
pop
fs
lcall
insl
and
ficompl
aas
outsb
lret
push
clc
jl
push
and
add
shlb
and
cmp
xor
fs
call
test
mov
mov
out
aam
xchg
fisubrl
arpl
add
cli
and
xchg
mov
rcl
cmp
and
call
in
mov
shl
rolb
subb
ss
or
push
xor
inc
or
inc
or
cmpsb
sub
dec
loopne
or
loopne
call
or
or
imul
lcall
adc
add
sub
inc
sbbb
js
scas
pushf
and
pop
add
xor
fs
and
nop
out
push
pop
inc
mov
cmp
enter
xchg
pop
ret
ficoms
scas
push
add
or
and
scas
inc
pop
inc
push
cmp
int3
pop
cltd
add
pop
fs
leave
in
movsb
pusha
shlb
or
xchg
sub
or
mov
mov
lds
add
aam
dec
xchg
dec
shll
or
fxch
pop
in
adc
pop
push
mov
ucomiss
inc
dec
xor
dec
shll
loopne
mov
or
adc
mov
sbb
and
push
mov
es
mov
dec
xor
cld
aaa
popa
out
pop
add
sub
mov
and
inc
inc
add
lret
jb
xchg
cli
add
lea
scas
add
insl
or
cld
sub
pop
xor
pop
stos
rcl
sbb
decl
outsl
ss
scas
mov
stos
lret
loop
lods
add
add
rorb
or
or
adc
push
popa
jne
add
pop
jbe
imulb
or
test
mov
pop
movsb
sub
loopne
lea
push
rolb
mov
subl
sub
pop
mov
ja
lret
dec
mov
jne
pop
cmpsl
and
das
scas
loope
mov
jl
test
or
enter
clc
aaa
jbe
or
or
fs
fists
mov
add
jae
push
in
add
mov
rolb
rep
or
add
in
mov
sbb
lret
fs
ret
ja
mov
fdivp
ror
mov
hlt
push
shr
xchg
or
mov
cli
pusha
loope
add
lea
push
inc
push
stc
shlb
movb
mov
rol
add
movl
jl
faddl
cmpsb
cmp
jbe
adc
notl
add
push
fadds
sbb
jge
sub
cmp
es
xor
inc
jl
push
add
gs
stc
ja
inc
ljmp
rolb
cmp
ja
and
les
cmp
add
xchg
dec
sbb
sbb
lock
inc
rclb
inc
inc
xchg
xor
add
adc
push
and
sbb
add
pop
gs
or
or
or
cmpsb
scas
mov
xchg
xchg
pop
mov
aas
cmp
xor
and
test
pop
pop
and
mov
mov
push
mov
mov
inc
fcmovnb
cmp
push
rcr
inc
pop
cmp
aaa
stos
xchg
icebp
adcl
insb
stos
insl
out
sahf
push
jbe
je
adc
call
push
pop
test
xorb
lock
lret
xchg
and
adc
push
cmp
lcall
mov
mov
shll
mov
xlat
mov
add
sbb
cmp
hlt
lret
out
fists
lret
sbb
add
push
mov
adc
ds
iret
cmp
sbb
test
cltd
leave
inc
jle
and
cmp
xchg
add
sbbb
mov
xchg
les
and
loopne
jno
xchg
push
jbe
adc
push
inc
jnp
and
add
cmp
inc
ret
xchg
adc
sbb
jle
adc
adc
jo
mov
jl,pn
arpl
inc
dec
inc
rcr
mov
mov
and
jle
mov
cmp
add
cli
es
lea
cmp
fdivrs
or
jne
or
js
shlb
dec
xor
adc
sahf
js
sbb
inc
push
aad
pop
pop
hlt
mov
inc
mov
or
std
push
outsl
or
icebp
jl
dec
sub
mov
jge
test
jae
ds
jb
xor
nop
pusha
and
cmpsb
dec
daa
lods
test
push
test
mov
mov
jge
add
daa
and
adc
js
sbbb
sbb
pop
mov
pop
call
inc
in
ss
or
sbb
ret
mov
inc
mov
and
mov
sub
or
xchg
lahf
cltd
ja
fs
jne
push
cmp
jbe
mov
add
fwait
and
mov
ret
sub
add
push
imul
imul
or
dec
les
jbe
ss
es
pop
add
ficomps
sub
mov
dec
test
push
sbb
adc
push
sub
mov
mov
bound
push
test
xchg
add
ljmp
and
push
pusha
jo
cmp
pop
add
jecxz
rcll
mov
scas
push
lcall
jo
fwait
clc
popa
adc
out
mov
dec
aas
push
add
mov
out
pop
rolb
dec
jmp
adc
inc
mov
mov
add
jnp
dec
or
jo
inc
sbb
lahf
fs
cmc
fldl
and
enter
sbb
imul
cmp
dec
andl
ja
loopne
movsb
mov
nop
push
ljmp
push
jmp
push
adcl
sete
jle
push
popl
mov
pop
js
dec
hlt
mov
fsubrs
sub
xor
add
clc
je
xor
ss
loopne
xor
adc
adc
push
or
fsubrp
lods
fs
push
dec
dec
scas
insb
push
out
xor
lods
enter
lds
sbb
in
testb
mov
lods
cmpl
adc
mov
push
mov
push
insb
adc
or
mov
push
aam
mov
fcmovnb
or
fsubrl
push
adc
push
or
xchg
cmc
repz
adc
lea
cmp
dec
jo
je
dec
ret
push
add
pop
clc
xchg
mov
pushf
jle
push
push
push
cmc
adc
repz
pop
adc
cmp
push
cmp
aam
push
mov
jg
adc
rorb
sbbl
mov
dec
cli
push
xchg
sub
mov
jnp
mov
sub
or
cwtl
mov
inc
and
inc
daa
rcrb
push
scas
dec
or
inc
pop
jmp
xchg
push
orb
mov
and
test
daa
stc
sub
lods
mov
orl
mov
sahf
adc
scas
jg
mov
mov
and
and
gs
mov
ss
cmp
and
data16
cli
add
adcb
aas
adc
aam
or
lock
xor
xor
lods
cmp
call
or
pop
shll
inc
inc
pop
inc
inc
cmpsl
imul
sub
and
or
stc
push
or
add
mov
cld
mov
jo
adc
jbe
divl
dec
nop
jb
fnstenv
das
out
enter
out
adc
ds
sub
fstl
shll
lret
adc
pusha
and
cltd
jae
adcb
sbb
cltd
cld
cmpl
test
aam
push
adc
and
insb
sbb
lds
push
xlat
nop
mov
inc
inc
pop
pop
xor
fsts
sbb
pop
push
jl,pt
cmp
mov
adc
je
inc
mov
data16
cmp
or
cmpsb
inc
bound
push
lock
pusha
je
scas
sub
in
ficompl
push
hlt
jecxz
inc
push
ss
push
push
or
notb
xor
mov
pop
xchg
popf
xchg
add
ljmp
daa
nop
mov
sub
adc
xor
and
xor
mov
inc
jle
lret
jae
mov
scas
mov
xor
or
push
dec
adc
inc
in
pop
jnp
sub
js
push
pop
xchg
pop
lcall
call
cmpl
das
cmpb
inc
xchg
add
inc
lret
dec
clc
inc
mov
ret
mov
pop
cmp
bound
stc
xchg
inc
pusha
sbb
cmp
ds
xor
cmpsb
pusha
lds
pop
or
mov
mulps
jmp
cmp
mov
or
movsbl
div
mov
push
xor
sub
dec
sbb
loope
cmp
inc
dec
imul
int
mov
xor
imul
and
mov
dec
scas
push
xor
scas
fs
pusha
je
roll
cmp
pcmpeqd
jge
jnp
test
push
test
and
push
mov
or
out
sub
mov
and
and
push
outsl
mov
jg
mov
xor
and
das
cmp
mov
cmp
push
enter
scas
jb
mov
sub
xor
je
push
or
push
out
sbb
rcll
in
add
add
or
xchg
add
mov
inc
and
inc
xor
je
dec
je
hlt
inc
dec
sbb
jmp
push
and
and
andl
icebp
sub
dec
pop
loopne
in
cld
inc
fidivs
xchg
cmp
fistpl
cmp
xchg
outsb
lcall
ret
lods
push
sbb
xchg
jne
lock
jl
inc
push
cltd
or
mov
jle
out
mov
out
sbb
or
ja
inc
js
jle
jecxz
lea
nop
lods
cwtl
les
cld
outsl
cli
lahf
lea
push
mov
nop
and
test
xchg
push
movsb
xchg
or
mov
fildl
icebp
sbb
jne
xchg
fstl
js
rorl
or
mov
arpl
sbb
jle
cmp
fisubs
cmpb
mov
adc
mov
ret
cmp
je
cmp
push
xchg
xorb
or
push
push
xchg
sbb
sbb
jge
sub
xor
xor
mov
sbb
fimull
sbbl
std
and
scas
sub
or
add
mov
jp
fcomp
add
or
pop
lea
add
ret
std
scas
add
mov
pop
fidivrs
mov
push
push
or
inc
lods
lretw
xchg
lods
cmp
lods
cmp
movsb
xchg
mov
inc
push
lods
xchg
test
push
in
repnz
xchg
push
xor
ret
pushf
add
js
in
push
adc
movzbl
push
push
xorb
je
ds
pop
repnz
test
push
inc
pusha
cmp
xor
add
pop
cmp
inc
push
mov
test
aaa
pushf
les
adc
hlt
pop
clc
mov
lea
daa
jmp
push
jg
je
cmp
lods
shrl
push
cmp
jge
add
adc
mov
push
inc
cmp
lea
cmp
mov
adc
xor
mov
aam
mov
in
repnz
add
lock
clc
jg
xor
cld
fbstp
mov
add
push
add
add
repnz
push
aaa
add
lcall
pushl
in
dec
je
add
adc
cmp
dec
or
mov
shr
cmp
mov
mov
or
mov
sub
xor
inc
icebp
adc
xor
ljmp
dec
or
cmp
and
cli
sub
sub
adc
je
dec
je
push
add
out
loop
sarl
adc
repnz
movsl
out
aas
mov
inc
add
jmp
sub
in
pop
push
cld
incl
push
mov
test
je
cmp
jne
sbb
fimull
mov
adc
shrb
mov
jmp
or
inc
inc
adc
clc
xor
inc
sbbb
inc
jmp
sbb
cmp
incl
imul
cmp
addb
add
push
adc
xchg
or
fiadds
mov
add
or
cmp
mov
stc
push
or
add
adc
push
aam
inc
or
lock
cmp
je
cmpsb
mov
pop
jbe
inc
test
jmp
daa
pop
pop
push
or
cmp
add
mov
or
mov
mov
and
mov
outsb
gs
jae
bound
ficompl
jmp
mov
sub
pop
dec
testl
arpl
adc
cmp
je
cmp
push
cmp
je
cmp
jne
inc
jne
clc
into
add
adc
sub
inc
pop
or
pop
inc
mov
add
mov
je
ret
mov
lea
cmp
jne
add
loop
cmp
jne
adc
cmp
or
loopne
inc
add
pop
push
push
inc
sbb
call
mov
mov
jp
jl
or
jg
push
ficompl
mov
jmp
and
push
jmp
sub
aaa
aaa
inc
jl
inc
jg
aaa
jp
add
int
fld
out
dec
mov
sub
mov
dec
je
sahf
mov
jle
scas
les
outsl
adc
test
mov
and
mov
pop
or
mov
lcall
sbb
xlat
xorb
push
out
mov
add
and
adc
outsb
xor
push
call
mov
jl
pusha
mov
jg
jbe
mov
push
fs
imul
mov
inc
mov
roll
adc
sub
aaa
lcall
xor
dec
sub
gs
loopne
pop
inc
xor
jne
push
jge
adcl
mov
imul
xor
xor
fsubs
inc
cmpb
push
xorb
mov
ret
adc
cmp
in
inc
inc
push
out
jmp
xor
les
sub
xor
mov
push
add
dec
jb
andl
fisubrl
in
ja
pop
ucomiss
or
fdivrs
push
cmp
out
adc
xor
mov
in
adc
enter
cmp
adc
je
roll
cmpsb
pcmpeqb
add
mov
mov
push
clc
int
mov
arpl
mov
pop
or
ja
loop
adc
cld
sub
sti
or
or
stos
sbb
mov
mov
sbb
imul
adc
cmp
sbb
xor
leave
or
sub
in
fadd
xchg
mov
sbbb
adc
xchg
add
add
test
sbb
and
adc
sub
inc
dec
or
jp
stos
mov
les
mov
xor
mov
mov
cwtl
or
icebp
inc
pop
mov
je
push
mov
adc
fucomip
add
push
push
lock
sub
jge
jne
add
push
int
je
add
push
and
rclb
sbb
loopne
or
adc
loopne
movsl
mov
adc
xor
inc
dec
push
sbb
in
sub
mov
movsb
sub
sub
and
pushw
mov
cwtl
adc
leave
rcrb
pop
inc
aad
xchg
xchg
push
adc
data16
mov
jmp
push
rolb
mov
fdivl
mov
lds
out
jl
ss
and
nop
dec
jge
mov
sahf
adc
push
jo
imul
mov
mov
jmp
sbb
add
add
mov
int
movsb
xor
or
inc
call
push
movb
xor
and
dec
std
dec
xor
arpl
push
cmp
ljmp
lcall
cmp
lods
aam
pop
inc
imul
jmp
sti
push
add
push
out
xor
pop
sub
fldcw
cmp
inc
ret
and
push
ds
cmp
outsb
mov
sahf
xchg
inc
or
push
or
xchg
or
adc
lahf
and
push
push
push
mov
lea
enter
sub
or
jle
leave
or
jmp
shlb
jmp
rolb
push
jmp
std
add
jns
cmpb
jne
mov
cmp
or
test
test
dec
sbb
push
sbb
icebp
mov
scas
jmp
or
ja
dec
movsb
xchg
or
ret
sbb
or
mov
aas
add
lods
ret
test
xlat
mov
inc
adc
rcrl
mov
rcr
dec
cmp
mov
insl
dec
and
xchg
test
mov
jb
lods
push
add
enter
es
adc
call
add
adc
inc
lock
mov
xor
push
jb
aad
mov
pop
repnz
cmp
add
ret
pop
adc
sub
push
addb
shll
repz
xchg
in
mov
insb
jl
jnp
mov
dec
pop
lret
dec
and
popa
es
clc
mov
sub
sub
test
shlb
inc
pop
rorl
push
adc
ret
jns
insb
outsb
ss
je,pt
inc
jo
push
jecxz
sbb
scas
fistps
shlb
cmp
hlt
add
xorl
push
es
cltd
and
mov
jl
fisttps
xor
imul
sbb
scas
test
jbe
movb
cmp
xchg
jne,pt
inc
jo
cmp
or
push
fimuls
push
or
jl
or
jns
cmp
das
mov
rclb
in
sbb
cmp
inc
dec
call
cli
std
mov
enter
call
out
popa
int3
roll
xchg
loop
inc
xchg
sbb
addr16
les
mov
xchg
jmp
sbbb
aam
pusha
pusha
mov
xor
cmp
or
mov
cltd
xor
popa
push
inc
test
leave
and
push
fwait
xchg
lret
sahf
or
ret
adc
xchg
jle
mov
push
jae
cmp
add
xor
lea
lcall
xor
mov
push
jmp
push
sbb
add
mov
jbe
shlb
ret
push
sbb
adc
xor
push
or
fsubrl
push
mov
inc
movsl
xchg
hlt
pop
mov
pop
mov
xchg
iret
xchg
jmp
adc
aas
push
xchg
mov
mov
lea
jne
dec
and
and
xor
inc
je
dec
adc
adc
and
arpl
shlb
dec
inc
push
dec
cld
minps
mov
mov
cmpb
add
imul
pop
inc
push
scas
push
inc
mov
mov
das
dec
sub
jg
fmul
or
dec
pusha
add
in
xchg
push
and
pusha
js
test
push
dec
add
push
mov
subl
push
or
jmp
ret
mov
filds
mov
je
and
xchg
lods
xchg
adc
mov
jne
jg
inc
jne
fimuls
push
add
movsb
push
pusha
inc
rorb
in
pop
dec
aas
add
xchg
dec
mov
add
add
into
int3
iret
incb
out
add
sbbl
add
mov
pop
add
inc
fsts
repnz
xchg
pop
add
add
jmp
cmp
jne
xor
jbe
sbb
jecxz
xor
movsl
xor
jns
dec
cmp
sbb
bound
out
data16
inc
dec
or
iret
sub
mov
je
mov
add
jns
enter
pop
scas
adc
xchg
push
sub
aas
mov
pop
sbb
pop
js
jb
push
test
mov
enter
pop
sub
pop
push
adc
jp
dec
xchg
mov
inc
or
in
jmp
dec
dec
dec
inc
mov
in
call
jnp
ret
rcrb
addr16
stos
pop
js
adcb
fadds
imul
cmc
in
sbb
cmc
jno
sbbl
into
or
add
fists
mov
fwait
xor
or
xorl
sbb
je
bnd
lods
jecxz
gs
dec
dec
jecxz
dec
xor
je
push
clc
adc
push
sub
or
ret
mov
int
lret
push
dec
stos
mov
xor
mov
sub
mov
in
into
add
outsb
xor
pop
mov
cmpsl
xor
lock
loop
or
jmp
bound
mov
mov
push
mov
mov
dec
cmp
pop
mov
xchg
insb
lock
fldl
enter
add
or
mov
jno
or
pop
or
mov
push
sahf
fs
aaa
int
mov
movsb
xchg
movsb
push
out
xlat
test
call
xchg
jo
adcb
int
cwtl
or
icebp
push
push
dec
cmp
cmp
sbb
push
int
test
push
and
shll
cmp
stc
inc
add
loopne
rcl
movsl
or
movl
mov
ret
mov
push
or
or
sub
and
adc
test
adc
push
inc
mov
sub
fwait
or
enter
popa
das
mov
mov
and
jno
lea
ss
cmp
orl
fdivl
js
idivl
aam
loopne
in
cltd
sub
sbb
jns
out
sbb
push
imul
or
sbb
sub
leave
call
sbb
sub
pop
pop
test
add
cmp
mov
or
jo
dec
test
add
ret
or
out
adc
jmp
sub
inc
adc
arpl
fmul
addb
out
dec
jmp
adcl
pop
pop
ds
cs
loope
add
ss
xchg
dec
add
sarl
sub
call
xor
pusha
and
sub
mov
xor
jmp
mov
dec
mov
loopne
and
cmp
cmp
add
iret
insb
inc
sub
fs
jo
inc
arpl
mov
imul
sarl
andl
ret
outsl
mov
xor
or
jnp
jecxz
pusha
cmp
dec
dec
les
daa
pushf
and
out
or
inc
xchg
adcb
loop
cmpsb
mov
adc
xchg
mov
repnz
test
fistpl
cmp
sbb
les
inc
subb
and
pop
jmp
mov
lcall
sbb
push
or
popf
xchg
adc
add
inc
sbb
ss
lock
push
xor
adc
pusha
je
adc
sbb
or
decb
daa
xor
dec
or
cmp
inc
or
ror
pshufw
push
jns
add
or
aaa
cmp
aam
sub
jo
sbb
int
and
mov
dec
mov
ja
pop
rcll
cmc
arpl
outsb
nop
loopne
iret
fwait
xchg
or
fmull
inc
leave
lret
push
dec
sub
subl
add
pop
sub
adc
js
int3
fstl
ret
adc
ja
popf
mov
adc
add
addr16
mov
sbb
xor
mov
jg
cmp
pop
dec
inc
mov
or
inc
jo
xor
lea
cmc
mov
dec
aad
test
xor
jne
pop
pop
mov
dec
pop
mov
push
pop
daa
sub
inc
jne
pop
push
sahf
pop
shrl
lods
mov
adc
adc
mov
movb
inc
or
push
or
lock
pmullw
ds
jge
push
adc
dec
or
cmp
push
jmp
lea
adc
jmp
xchg
push
push
in
pop
dec
cmp
mov
cmpl
mov
mov
fisubl
hlt
dec
and
jne
in
add
orb
push
add
dec
add
and
or
lock
in
insl
popa
and
cmp
and
adc
loopne
mov
js
add
push
arpl
sub
addb
loopne
call
add
dec
aad
adc
cmp
jecxz
in
mov
ds
mov
or
lock
jmp
jne
repz
adcl
xchg
mov
xchg
push
pop
inc
add
adc
xchg
jl
addr16
in
jae
cmp
pop
xor
fisttpl
xchg
or
jo
mov
loopne
sbb
push
push
xor
aaa
nop
stos
add
sbb
xor
add
and
jge
xchg
fidivrl
ret
rep
adc
data16
and
sub
arpl
dec
sbb
in
adc
sbb
ds
push
jmp
out
mov
xor
mov
pop
add
scas
stos
pop
jg
jbe
das
pop
sub
sar
icebp
sub
movsb
cmpsl
pop
sbb
mov
cmp
ja
xor
and
sub
daa
push
leave
sub
or
js
decl
xchg
jbe
xchg
jle
je
lods
stos
push
rcll
rcrl
pop
adc
hlt
sub
jo
pop
mov
test
or
inc
jmp
inc
daa
cmpsl
loopne
js
sub
lock
xor
cmp
mov
ret
lds
out
mov
sub
xchg
jne
mov
js
adc
sub
cld
or
adc
push
and
add
mov
loopne
cmp
insl
loopne
jle
add
cld
add
jb
orb
call
sarb
push
xchg
scas
cld
data16
fisttpl
sub
aad
dec
dec
pusha
lock
inc
jg
into
mov
pop
jo
movsb
or
out
and
inc
xor
cwtl
pop
add
push
cmp
movsl
xchg
pop
adc
or
or
mov
out
and
test
jbe
cmp
dec
mov
inc
dec
xor
popa
pavgb
dec
and
inc
rclb
add
aas
xor
mov
xor
inc
sbb
pushf
stos
imul
add
js
data16
cmp
addr16
es
lds
and
aas
pop
out
ret
cmp
pop
in
mov
pop
add
inc
jle
or
push
lods
mov
adc
aam
add
pop
es
scas
inc
jmp
inc
push
stos
stos
gs
xchg
inc
ss
aam
fs
clc
notl
test
loope
adc
inc
inc
test
lea
add
mov
inc
sbb
clc
dec
xor
inc
pop
adc
or
shrb
mov
cld
sbb
rolb
add
adcl
sti
aam
pushf
in
mov
jb
and
inc
push
jmp
jae
aaa
adc
push
lret
cwtl
add
les
dec
test
add
or
push
inc
adc
ds
pusha
cld
inc
je
sar
xor
out
jecxz
inc
in
add
jge
xor
sub
pop
lock
dec
imul
and
mov
pop
cmpl
subb
clc
stos
and
je
loopne
mov
ret
push
stos
lret
inc
inc
ds
cmpsl
push
xor
mov
pop
movsb
mov
ret
push
mov
inc
and
aaa
pop
jae
enter
test
popa
push
jl
pop
dec
push
adc
rclb
es
pushf
dec
enter
mov
sub
mov
sub
or
mov
add
or
fs
test
add
push
je
cmp
jbe
push
popf
pusha
rorb
stc
call
loop
push
lret
sbb
pop
push
movl
pop
ret
mov
lcall
mov
or
or
ss
cli
pop
inc
daa
or
test
lods
jbe
inc
inc
adc
inc
cs
inc
adcb
filds
push
test
data16
add
push
push
push
cmp
inc
das
lock
xor
jne
mov
jmp
xor
dec
aas
scas
push
cld
or
inc
jo
ljmp
add
pop
add
and
lea
push
cmpsl
loop
shlb
jno
jmp
inc
push
adc
push
popf
jp
lods
lods
xchg
outsb
data16
test
dec
cli
sub
push
mov
ficoml
pusha
xchg
pop
or
popf
std
xchg
insl
dec
shll
mov
sbb
push
and
and
mov
cmpsb
mov
fwait
mov
cwtl
outsb
mov
jne
mov
adc
fiadds
xchg
jae
jmp
jge
inc
shlb
push
xor
pop
div
hlt
add
movsb
mov
or
dec
jbe
mov
lea
divps
xchg
jmp
lods
push
dec
addl
inc
cmpsl
aaa
cmp
jo
adc
rcpps
add
in
in
and
mov
pop
sub
outsl
stos
sub
push
mov
cmpsl
sbb
push
dec
jb
fsubrl
mov
and
inc
push
pushf
mov
testl
lock
sbb
sub
add
or
imul
fdivrs
nop
shrb
fucomp
and
shrl
ret
jo
shlb
hlt
fwait
scas
adc
sub
sub
jne
bound
adc
out
adc
cmpsl
cmp
mov
test
rorl
jp
clc
int3
add
add
imul
incl
jb
cmpl
pop
add
push
cli
add
xor
fld
outsl
mov
sub
mov
mov
jne
hlt
sarl
add
or
xchg
fsincos
xor
stos
mov
dec
ljmp
ret
or
push
jg
dec
inc
add
shrb
xchg
mov
push
cmc
out
mov
daa
mov
adcl
inc
push
shlb
icebp
out
imul
or
test
test
xor
xor
or
add
mov
jb
pusha
cmp
ficomps
lds
jno
and
sbbb
psubusw
cs
fwait
pop
add
and
clc
jg
fs
jno
add
movd
movaps
jnp
push
enter
shlb
jle
xor
add
lret
je
or
jge
repz
or
jg
mov
ljmp
and
in
fisubs
mov
aam
ret
or
adc
push
hlt
adc
mov
pop
ficompl
xchg
repnz
addr16
ret
mov
add
ljmp
addps
int
add
out
adc
loopne
push
dec
sbb
cmp
pop
pop
test
inc
lds
shr
and
ret
mov
lea
aam
pop
sarb
xor
xor
pop
add
add
xorl
fdivs
mov
lret
or
popf
lcall
lret
sub
nop
inc
fcmovb
ret
adc
std
cld
gs
shl
inc
hlt
gs
lods
pop
and
stos
mov
add
mov
arpl
shlb
push
inc
dec
pusha
ret
pop
or
adc
mov
test
loope
jb
pop
incb
ficoms
cs
lods
ds
inc
sub
sbb
in
clc
ja
mov
jbe
lcall
inc
cmp
jne
inc
cmpb
out
addb
or
xor
rorb
inc
and
adc
insb
addr16
fimuls
push
or
mov
arpl
ret
daa
sub
loope
xchg
andb
mov
addr16
ret
imul
mov
or
mov
xchg
int3
jo
nop
xchg
xor
xor
sbb
mov
or
mov
sbb
cli
add
dec
xchg
xor
rol
add
push
mov
test
adc
adc
cmp
xchg
push
rcrl
shrb
jns
add
push
xor
mov
inc
pop
sbb
push
jne
inc
adc
ret
mov
push
push
movb
les
ret
sbb
pushf
pop
addr16
lock
sbb
sbb
ret
push
sbb
pop
test
mov
sub
mov
shlb
or
inc
xor
adc
mov
addr16
movsb
jnp
out
jbe
je
jp
leave
icebp
sub
into
movl
loopne
xchg
imul
pushf
push
or
mov
dec
fwait
inc
fwait
pop
cmp
jmp
jae
add
out
idivb
cs
add
jl
mov
or
cmc
add
daa
call
test
push
dec
add
or
popa
rorl
jle
xor
ja
and
int3
stos
push
sbb
xor
sbb
ret
sub
inc
cmp
or
jmp
arpl
cmp
int3
sbb
add
ja
imul
loopne
lock
or
fists
sbb
or
movsb
fldt
fidivs
dec
movsl
or
sarb
shlb
aas
pushw
add
mov
xor
inc
data16
push
xor
das
jnp
push
ret
add
je
jae
adc
pushf
push
enter
sub
jecxz
lock
jne
das
jo
pop
inc
adc
dec
pop
ret
add
jmp
in
jae
pop
aaa
pop
loop
icebp
mov
and
rolb
shrl
pop
or
shlb
jbe
jmp
adc
cwtl
xor
packsswb
pop
movsb
pop
inc
inc
push
sub
adc
or
cld
jne
and
pop
cld
aad
and
jo
hlt
les
out
outsb
jne
out
jmp
add
ljmp
int3
testb
je
inc
mov
cmp
mov
leave
es
loope
or
cmp
jne
dec
jmp
inc
cmpsl
dec
es
jl
or
lret
jne
inc
aaa
push
lds
mov
mov
loope
jne
adc
adc
mov
push
push
pop
xchg
hlt
push
call
dec
push
rolb
or
loop
std
int3
mov
mov
mov
roll
cmp
cli
xlat
and
mov
cmp
mov
repz
pop
and
arpl
fdivl
jne
test
or
sbb
out
into
cmp
jb
rep
jmp
mov
cmp
jb
jnp
jae
outsb
add
cs
fs
loopne
push
mov
mov
and
inc
push
and
ficoml
adc
sub
inc
add
add
pop
shr
lods
adc
sbb
push
dec
add
dec
cmpsb
nop
inc
xor
xchg
sbb
or
push
lods
repz
repz
movsb
pushf
xchg
mov
inc
mov
mov
call
jns
in
lock
hlt
clc
bound
out
clc
cld
shlb
mov
clc
sbb
mov
xlat
jmp
and
or
or
into
nop
inc
pop
pusha
sbb
and
loop
mov
sbb
lea
jl
cld
jl
daa
mov
cld
out
insb
addr16
lods
neg
adc
sbb
daa
in
xchg
xchg
xchg
stc
sub
pop
nop
xorb
cmp
push
movsb
push
int3
fiaddl
jl
mov
out
add
push
ficoms
push
out
push
add
nop
dec
dec
addr16
dec
mov
fs
iret
repz
mov
or
push
xor
inc
repz
cmp
push
arpl
sbb
repz
sbb
sbb
adc
repz
or
or
dec
enter
inc
jl
adc
push
xchg
test
aaa
sub
xchg
cmpsb
push
add
pop
punpckhbw
xchg
daa
ja
daa
dec
aaa
pop
push
pop
jbe
push
sbb
gs
mov
pop
inc
cmc
sub
push
fimuls
dec
orb
mov
and
iret
insl
xchg
adc
fidivs
sub
in
outsl
inc
cmp
fists
popl
mov
dec
movsb
pop
cmp
push
lcall
test
inc
iret
mov
dec
es
jmp
lea
mov
or
cmp
inc
and
popf
push
lea
xchg
daa
fildl
mov
pop
outsb
aad
and
inc
cmp
pop
or
xchg
cmp
xor
popa
imul
adc
xor
imul
add
enter
jp
dec
pop
outsl
out
pop
jmp
punpckhbw
or
test
movsl
inc
mov
aam
sbb
xchg
inc
and
pop
sub
cltd
pop
std
jb
and
and
jp
dec
cmp
pop
pop
cltd
mov
jecxz
push
sbb
js
dec
adc
fcoml
dec
push
jle
xchg
insb
sbb
arpl
fndisi(8087
add
push
jbe
sub
inc
aaa
pop
shrl
xchg
cmp
pushf
mov
cmp
into
lea
cmp
andb
add
jmp
sub
dec
jnp
and
sbb
push
adc
or
add
out
mov
jne
pop
fcompl
call
jns
jl
jle
push
or
add
imul
and
push
or
add
aam
adc
les
jne
fldenv
pop
adc
pop
push
xchg
stos
shlb
inc
cmp
mov
cmpsb
mov
mov
inc
pop
ljmp
fdivs
mov
shr
mov
adc
pop
sub
sahf
adc
imul
jb
jle
pop
dec
pop
and
push
fistpll
xor
clc
fwait
ss
pop
das
mov
aaa
ss
loop
nop
fidivs
or
repnz
and
add
xchg
push
or
push
xchg
adc
inc
fstpt
inc
les
orb
call
fsubrs
cmp
xor
push
push
sbb
jne
xchg
ljmp
mov
push
mov
insl
mov
fimull
inc
rorb
repnz
dec
pop
mov
add
add
mov
in
js
xchg
mov
cmp
rcrb
std
jne
scas
add
repz
or
add
jg
sub
sub
loopne
js
push
ljmp
in
insb
cltd
testl
adc
jmp
push
sub
push
fmull
mov
dec
jecxz
fs
or
lahf
inc
mov
or
pop
cmp
xor
fs
pop
sbb
sbb
roll
ja
add
inc
dec
mov
dec
fists
mov
push
sub
push
negb
pop
add
or
or
shrb
ja
jp
rorb
cmp
out
push
sbb
or
pusha
xchg
cld
jb
jp
sub
push
clc
jbe
add
pop
cmpsb
pop
add
adc
addl
popa
jmp
push
mov
add
jmp
test
jne
test
scas
adcb
cmp
xorl
orb
lods
cld
jbe
jle
mov
cmc
je
cmpsb
notl
mov
pushf
pop
hlt
pusha
push
dec
lock
ret
xor
negl
cld
rolb
pop
out
inc
and
testb
les
xor
add
arpl
lods
mov
into
adc
nop
in
mov
popa
call
ljmp
mov
pusha
dec
sti
mov
orb
adc
dec
or
aas
pop
and
or
shlb
or
pop
data16
outsl
push
xlat
pusha
sub
pusha
insl
xchg
roll
mov
or
hlt
or
mov
or
leave
inc
dec
push
rolb
jns
xor
push
test
shl
inc
adc
cwtl
rcr
outsb
jl
mov
pop
adcl
dec
test
jmp
cmc
or
rclb
jge
xor
pop
rclb
aam
insb
xchg
push
pop
add
fs
frstor
rcl
js
mov
ret
rorb
repnz
and
pop
rolb
cs
dec
jne
jmp
add
push
xchg
adc
cs
cmp
dec
cmpsb
dec
jne
ret
jmp
cmp
es
pop
pop
inc
sahf
xchg
push
pop
and
pop
mov
mov
data16
mov
movsl
stos
ds
test
pop
andb
push
shlb
decb
into
lock
and
neg
sub
cmp
jne
mov
push
mov
std
jne
es
jne
outsb
stos
cltd
cmpsl
call
aam
mov
icebp
cmpsl
add
jb
jmp
push
inc
incl
dec
mov
jns
pop
inc
adc
jmp
std
push
out
jle
xor
cld
cld
jmp
fldt
mov
in
adc
adc
inc
inc
inc
ss
add
inc
ljmp
pop
ret
mov
lcall
in
xchg
aam
and
xorb
shrb
dec
and
mov
pushaw
sbbl
push
jp
popa
xor
inc
cmp
or
xchg
roll
addb
inc
add
adc
adc
mov
lahf
or
and
or
leave
adc
in
push
pop
pop
loopne
and
pop
pop
lds
es
or
pop
or
mov
lods
and
mov
pop
add
xlat
add
push
cli
push
mov
pop
jne
fwait
dec
loope
fmuls
add
or
and
add
mov
push
and
mov
mov
ret
sub
push
push
push
push
inc
test
and
lret
loope
or
add
push
divb
out
fs
jno
add
dec
add
lea
push
inc
frstor
add
cmp
mov
adc
add
and
arpl
add
sar
sbb
or
lret
ret
loope
cld
and
push
jb
daa
call
adc
jmp
mov
push
xchg
movb
gs
push
fbld
push
mov
mov
xor
jns
ss
and
xchg
test
int
cs
hlt
mov
test
dec
mov
xor
stc
push
mov
push
fimull
pop
xchg
call
or
adc
push
xchg
clc
or
add
add
push
xor
shl
fmuls
cs
sti
jge
not
and
sub
add
pop
mov
sbb
out
mov
lock
rcrb
adc
imul
adc
dec
inc
pop
mov
add
test
xchg
sub
xor
pop
push
ja
jne
xor
cltd
insb
pop
mov
push
lcall
xchg
jmp
add
icebp
jg
incb
mov
inc
je
mov
lea
neg
mov
lock
mov
or
add
jmp
or
mov
inc
inc
cmpsl
mov
loope
sbb
roll
mov
pop
add
mov
sbb
fdivr
inc
cmp
jb
jno
jge
orb
add
data16
pop
pusha
add
cmp
ret
cs
sbb
adc
clc
lods
subl
xchg
adc
add
add
sbb
add
jmp
fsubs
mov
mov
mov
divl
lret
in
imul
stc
addl
xor
jo
xchg
fst
rolb
or
mov
shl
jne
pop
fiaddl
push
ficoml
and
ljmp
jecxz
daa
repnz
repz
mov
aam
xchg
pop
dec
cmpsl
add
inc
mov
inc
lret
sbb
mov
loopne
mov
pop
ljmp
ret
in
mov
iret
dec
lea
jl
and
outsb
sahf
sarb
fbld
cld
rclb
pop
dec
mov
and
inc
arpl
xor
pop
mov
imul
inc
jmp
cmp
sbb
jmp
adc
jne
sub
sbb
xlat
ret
cmp
adc
fimull
and
cmp
movsl
lret
adc
clc
js
inc
jns
out
or
and
adc
adc
pop
mov
fidivrs
pop
lods
adc
mov
push
aam
xor
or
mov
and
je
lret
or
dec
pusha
je
lea
push
sbb
sub
jo
inc
leave
and
orl
push
jp
push
jbe
push
add
and
dec
movsb
and
call
jecxz
push
lea
in
aad
push
adc
shl
cld
std
mov
nop
dec
inc
cltd
sbb
mov
push
adc
add
sbb
push
popa
insl
xor
dec
in
xor
cmp
insb
les
jmp
push
in
push
stos
mov
lds
sub
sbb
push
pushf
adc
jmp
aaa
ja
inc
loope
add
add
lock
and
hlt
mov
inc
mov
dec
jne
fs
add
add
bound
iret
add
push
inc
pop
insb
xor
adc
xor
add
xlat
lds
push
inc
push
inc
lods
sub
push
adc
orl
cmp
andb
sbb
sbb
dec
mov
je
adc
mov
push
or
imul
inc
cmpsl
fisttpll
xor
jno
enter
mov
xchg
and
push
adc
cwtl
sub
movsb
pop
outsl
inc
mov
jno
or
int
mov
adc
mov
pop
nop
jb
lea
push
adc
or
in
mov
xchg
adc
add
cmp
mulb
dec
js
clc
gs
xor
push
clc
mov
es
imul
inc
mov
mov
xor
jg
mov
lret
daa
or
pop
jne
or
jno
sbb
inc
dec
lds
or
pop
jmp
iret
movsb
mov
dec
xor
pop
or
mov
mov
push
xchg
es
or
in
in
outsl
inc
stos
mov
int3
movsl
xorl
test
push
mov
pcmpgtb
push
outsl
mov
push
shrb
add
jmp
mov
clc
xor
jo
stos
push
mov
fistpl
or
push
inc
sar
hlt
push
in
inc
xchg
insl
xor
inc
jecxz
inc
sub
pop
test
xor
or
inc
fdiv
lret
cmp
add
incl
ss
inc
mov
pop
fisubrs
xchg
fcomps
rcrl
clc
or
sti
or
gs
out
inc
xor
adc
and
sahf
data16
adc
add
or
push
into
dec
clc
ljmp
adc
loop
and
or
dec
in
mov
xlat
jle
mov
les
ja
cmpxchg
jp
mov
pop
or
mov
js
pusha
mov
and
push
push
dec
xchg
dec
pop
cld
dec
add
imul
jge
arpl
popa
orb
add
outsb
sub
in
inc
mov
imul
or
mov
pop
dec
add
insb
push
inc
loopne
push
jne
pop
addl
xor
das
decl
cmp
pop
imul
sbb
mov
jbe
sbb
push
mov
sti
ljmp
pop
mov
aad
xchg
sbbb
popa
push
rcll
mov
pusha
adc
shll
ret
and
and
dec
ficoml
or
std
push
dec
loopne
dec
test
test
push
pop
sub
mov
inc
mov
jne
and
mov
adc
fdivrl
into
add
add
sbb
inc
adc
jnp
out
or
repnz
add
ja
sbb
adc
clc
mov
es
fldl
and
sub
pushl
sbb
rolb
dec
dec
inc
imul
aaa
popf
fcoms
mov
jg
sub
mov
mov
jle
adc
inc
adc
adc
cmp
adc
adc
cmp
dec
xchg
fcom
pop
iret
sub
sub
je
loopne
js
mov
mull
pop
add
clc
adc
fs
mov
adc
inc
je
testb
mov
mov
stos
cmp
push
or
call
movsl
jmp
dec
je
add
or
jmp
cltd
rcrb
fstp
jnp
outsl
jno
push
sbb
add
jmp
push
xor
push
push
fisttps
or
adc
cmp
jg
test
push
stos
push
lea
push
inc
cmp
vcmpunord_sss
rcll
add
xor
arpl
xchg
cmp
shlb
push
push
push
addr16
sub
mov
addr16
add
dec
or
loopne
call
mov
xchg
popa
jb
push
repnz
push
test
je
mov
add
cmp
and
dec
sub
iret
mov
cmovp
mov
popa
dec
or
mov
pop
pusha
mov
mov
add
dec
loopne
mov
ds
rol
filds
iret
or
js
xchg
push
setb
leave
add
ja
rcr
xchg
add
jmp
rorb
add
dec
jno
xor
jae
push
jmp
sub
push
push
pop
dec
loopne
scas
adc
or
push
fsubrs
adc
inc
js
imul
jae
pop
daa
lods
orb
jae
sub
inc
add
pusha
jne
adc
sbb
jp
ret
push
push
test
lock
js
fs
pop
adc
loop
pop
lea
add
sub
rolb
in
xchg
cmpsb
dec
or
test
or
fst
fsubrl
add
xor
je
mov
mov
sbb
dec
and
add
cmp
mov
pop
jle
call
aaa
push
pusha
ss
cli
or
lea
cs
xchg
and
dec
js
movsb
mov
push
scas
mov
cmp
add
mov
push
decl
das
ds
dec
cmpsb
pushl
sub
xchg
je
push
add
adc
push
inc
xor
lcall
dec
push
pop
sub
repz
mov
cli
push
push
dec
outsl
out
fs
pop
rcrb
imul
cmp
popf
rcl
lret
push
push
add
sbb
jmp
inc
lods
movsl
stos
in
push
or
insl
or
cld
dec
xor
sarl
ret
adc
add
dec
jmp
push
out
inc
in
data16
push
inc
cmp
je
imul
mov
stc
xchg
clc
push
mov
stc
mov
stos
xor
fs
cmc
mov
notb
imul
add
sbb
jge
insl
xchg
mov
imul
pop
mov
jle
inc
dec
or
je
xorb
ret
add
push
xchg
mov
out
jbe
mov
jmp
dec
or
mov
cltd
pop
inc
mov
push
dec
movsb
adc
ja
rcll
clc
or
stos
xlat
je
cmc
push
in
test
sub
jb
insl
push
jbe
sub
dec
pop
sets
inc
imul
push
ret
cmp
push
mov
nop
jae
in
push
add
jnp
or
sarl
mov
add
mov
dec
inc
mov
movsb
lret
inc
dec
inc
xorb
add
xchg
add
clc
mov
pushf
out
lds
jbe
jmp
push
add
cmpsb
sbb
xorb
scas
dec
and
mov
mov
adc
or
add
js
dec
ss
add
popa
rol
pop
es
push
test
cmc
jmp
dec
and
ss
mov
aam
push
push
mov
jl
jge
cli
loop
lods
or
icebp
adc
adc
aam
pop
lret
movsb
sbb
lods
into
dec
add
daa
mov
fmul
outsl
jne
push
push
and
sbb
inc
aam
sbb
sub
in
call
clc
push
and
dec
or
cmp
pop
jns
jbe
add
imul
fadds
insb
dec
ret
div
lcall
push
xchg
pop
sarb
stc
and
jge
jnp
sbb
cld
jmp
adcb
loopne
mov
jge
sahf
adc
in
push
test
mov
push
jae
test
lcall
dec
lcall
or
mov
ret
clc
cmp
cmp
daa
dec
inc
pop
pop
pop
inc
adc
lock
test
push
popf
lea
dec
jmp
pop
jae
and
mov
in
add
jl
cmp
stc
xlat
repnz
jle
pop
xor
or
cs
fsubrl
mov
clc
xchg
add
inc
ja
xor
in
xor
xor
into
je
fcmovne
lea
pop
jne
mov
fdivrs
xchg
jnp
enter
popa
jp
lea
pop
jnp
add
lds
out
repnz
jnp
scas
orb
dec
and
sbb
mov
xchg
repnz
push
jne
mov
mov
and
push
cmpsb
sahf
push
in
xchg
push
push
leave
jl
and
mov
negl
push
lea
in
nop
je
and
push
les
test
sub
incl
lahf
out
sahf
sub
sbb
or
mov
sbb
ds
sar
push
cmp
stos
loop
in
pushf
mov
mov
add
and
inc
pop
icebp
push
dec
lcall
mov
mov
push
outsb
add
jne
mov
out
sahf
testl
enter
lahf
shl
clc
mov
xchg
or
push
adc
nop
inc
lods
orb
ret
push
pop
nop
adcl
pop
cmp
add
hlt
sub
jecxz
dec
push
or
je
mov
movsb
mov
out
jmp
testb
sbb
pop
lock
sbbl
mov
rol
cli
add
pop
dec
add
add
inc
mov
and
sub
push
sbb
stc
xchg
dec
xor
lret
add
popa
adc
xchg
mov
and
test
add
jne
out
js
mov
dec
adc
mov
cmp
pop
pop
mov
xor
xor
repz
lock
pop
popf
push
ret
or
push
andb
jmp
negb
je
movsl
cmp
push
lods
cld
in
push
fstl
mov
aad
sub
sub
lret
sbb
xor
or
sbb
cmpb
xchg
insl
fsubs
mov
inc
mov
add
fadds
add
pop
cmc
rolb
cmpb
aam
push
rcll
aam
cmc
imul
test
or
push
std
adc
sbbl
pop
mov
add
sbb
movsb
hlt
add
inc
cmpb
lock
sub
add
rcrl
ss
mov
les
je
rolb
dec
jb
push
mov
ss
sbb
pop
jmp
loope
fucompp
insl
xor
sub
std
add
jo
add
sbb
add
or
adc
mov
xchg
push
and
clc
mov
sbb
sbb
or
dec
stc
repnz
or
jo
repnz
and
ret
mov
rolb
in
add
add
push
pushf
or
aas
sub
xor
mov
das
das
das
das
sbb
subb
pushf
popl
mov
jno
mov
testl
mov
ja
sbb
cwtl
cltd
sub
aad
jge
inc
enter
adc
subb
sbb
fsubr
dec
js
std
push
lcall
push
int3
adc
popa
or
push
xor
push
in
or
add
rol
add
xchg
ss
mov
pusha
decl
test
andl
ljmp
ret
sub
xchg
iret
xchg
rorb
fcoml
fcomps
int3
mov
xchg
clc
or
test
mov
mov
mov
cmp
mov
add
hlt
fistpll
insl
xlat
sbb
aam
aaa
dec
cld
xor
loopne
rclb
ror
pop
in
xchg
int3
jno
insl
push
jne
push
and
test
jecxz
in
das
adc
sbb
push
add
test
sub
pushl
pop
cli
add
mov
mov
inc
push
leave
sbb
adc
add
add
and
push
push
or
das
lock
dec
or
xchg
xchg
push
mov
and
shrb
lahf
jge
pop
imul
mov
mov
adc
jbe
push
lock
stos
rolb
push
jne
imul
or
or
clc
or
sbb
push
scas
movsb
jbe
add
push
adc
or
or
loopne
pushf
mov
xchg
insl
test
dec
push
shlb
loopne
jbe
push
push
jne
xchg
pop
call
dec
ljmp
sbb
stc
shl
add
pop
mov
mov
addb
outsb
mov
mov
push
pop
stos
and
cmp
sbb
add
and
cld
out
jmp
push
frstor
or
cmp
adc
mov
mov
test
push
or
pop
push
in
sbb
add
lret
gs
shl
sarb
test
in
mov
cmp
and
or
test
ror
xchg
sbb
sarb
leave
xchg
call
addr16
xchg
loopne
cmp
out
or
sbb
lahf
mov
mov
cmp
sar
lahf
lea
pusha
and
pop
ja
or
mov
xchg
xorb
push
sarb
add
sar
pop
lods
movsb
add
jbe
xchg
push
sub
jo
mov
or
lret
movsl
mov
loopne
sbb
pusha
xchg
mov
lcall
or
sbb
into
dec
pushf
mov
or
add
setg
jb
sbb
or
push
add
xor
sti
mov
adc
push
sti
add
or
mov
clc
adc
push
imul
cs
dec
lock
ja
movsl
mov
mov
leave
test
pop
orb
jbe
movsl
hlt
hlt
stc
rcr
push
add
push
sbb
xor
test
insl
and
jo
test
test
ds
jle
sub
scas
pop
ret
sbb
pop
and
fnsave
jne
js
add
movb
inc
xor
movsl
sbb
adc
out
inc
fs
sbb
sbb
imul
sub
js
rolb
add
pop
and
dec
and
btc
in
lods
dec
arpl
add
or
fdiv
sub
pop
jle
inc
je
xlat
add
or
add
fcmovb
and
ret
ret
adcl
mov
mov
adc
cmp
mov
push
arpl
push
or
nop
jbe
xchg
mov
ljmp
push
or
dec
and
in
subl
mov
mov
es
add
xchg
mov
adc
es
push
xchg
or
addr16
cmp
sub
inc
inc
push
insl
cmp
jl
xor
jmp
xchg
pushf
sub
sbb
dec
mov
repnz
sub
and
clc
cmp
dec
mov
test
cmp
or
pop
pusha
or
aaa
pop
sub
lds
dec
sub
aaa
inc
cli
inc
stc
jo
xlat
mov
mov
cmovns
sbb
dec
ret
inc
seta
stos
mov
ret
lea
cmp
pushf
mov
sbb
movsb
imul
dec
shrl
add
pop
gs
inc
mov
mov
add
addr16
insl
je
hlt
xchg
pusha
je
or
sub
cmpsb
or
ss
ss
jo
pop
lret
xor
mov
fildll
mov
xor
sbb
xchg
daa
sub
adc
xchg
mov
sbb
or
and
mov
add
jp
fcoms
mov
mov
adc
jge
movsb
addr16
mov
jmp
cmp
jle
mov
out
mov
cmp
scas
jo
jno
cmpsl
ja
pop
fs
stos
pusha
and
insb
adc
mov
sar
push
shr
push
push
insb
dec
lods
or
or
inc
cmp
adc
adc
insb
mov
loope
jne
push
push
xchg
sub
inc
sbb
cmpb
mov
mov
push
xrelease
imul
dec
add
cmp
call
enter
cmpb
jne
xor
cmpsb
adc
stos
mov
lea
hlt
sub
and
jae
pusha
cld
xlat
add
jo
inc
pop
adc
lods
push
adc
fwait
dec
loope
popa
roll
sub
mov
cmp
inc
mov
rcll
mov
adc
ss
dec
dec
sub
push
cltd
je
sbbl
add
jo
fcoms
push
push
add
fidivrl
jno
xor
pop
mov
jnp
or
sbb
push
lock
and
mov
or
or
and
jnp
fmul
lea
or
or
and
push
inc
les
cltd
push
popf
call
sbb
shll
clc
repnz
loop
mov
sahf
add
mov
xchg
add
jmp
in
mov
test
pop
inc
into
adcb
sub
rorb
mov
add
inc
jmp
movsb
mov
rclb
jmp
dec
out
mov
add
repnz
sar
or
imul
std
push
sub
add
sub
mov
push
sub
adcb
mov
sbb
or
decl
inc
fcomps
inc
sbb
in
jle
cmp
cmpb
sub
std
or
push
cltd
cmpb
nop
mov
inc
mov
dec
test
xor
add
xor
lcall
addl
add
jle
aam
mov
add
sbb
jl
dec
adc
cltd
push
jge
jle
sub
cmc
hlt
loope
lret
in
jg
jmp
add
es
aas
jmp
pop
int
out
adc
fldenv
sbb
addl
outsb
push
xchg
xchg
movsl
pushf
cmp
les
std
out
mov
mov
mov
pop
sbb
and
cmp
xlat
inc
movsb
adc
mov
dec
jne
rorb
xchg
mov
mov
testl
xor
lcall
out
lcall
dec
mov
mov
es
xor
mov
pop
mov
or
or
adc
mov
arpl
stc
pop
popa
xchg
addr16
adc
int3
int3
sti
or
mov
adc
xchg
negb
les
pop
aad
or
lods
cld
add
cmpsl
or
movsb
add
aas
push
xor
mov
sbb
inc
scas
in
pop
notb
fwait
cmp
test
push
es
je
add
and
clc
adc
pop
or
test
cs
idiv
add
fmuls
shrb
and
pop
movsl
and
mov
jb
into
mov
add
pop
add
add
and
rclb
cmp
pusha
lods
dec
test
cmp
sahf
les
lock
mov
pusha
add
mov
inc
cmp
arpl
xchg
ljmp
cmp
es
addl
fsub
push
rolb
or
mov
ljmp
and
out
pop
call
lahf
xchg
test
jp
add
sbb
mov
ljmp
cld
push
cmpl
dec
or
adc
adc
outsb
mov
add
out
loopne
push
loopne
loopne
mov
dec
loopne
xchg
aad
xor
ljmp
imul
or
xchg
xchg
inc
mov
cwtl
mov
jl
add
pop
or
and
rol
rolb
pop
mov
test
dec
jmp
clc
pop
inc
mov
mov
jb
mov
ret
push
inc
inc
push
cld
add
sbb
data16
xor
call
dec
insb
add
add
jmp
push
cmc
pop
and
mov
ret
mov
mov
pop
hlt
cmp
xor
push
mov
clc
pop
push
das
push
ret
test
xchg
lock
mov
or
pop
push
xor
sbb
ss
add
dec
mov
lahf
jge
cmp
sub
lea
into
rorb
mov
sar
jge
fstps
adc
mov
sbb
je
jne
clc
pusha
push
add
in
xchg
push
pop
mov
pusha
sub
sarb
push
add
pop
adc
js
cmpsb
rcl
lock
inc
xor
cmp
lods
sti
inc
mov
sbb
inc
and
out
jb
rcrb
jnp
shl
test
std
and
mov
xlat
xlat
push
xchg
imul
jo
pop
leave
inc
sub
mov
aam
mov
shrl
add
icebp
add
popa
sbb
icebp
pop
or
sub
lahf
inc
push
fpatan
mov
inc
push
loopne
cmp
sahf
pop
push
ret
xchg
call
ret
in
nop
jmp
xchg
xchg
adc
mov
dec
sub
lock
push
imul
ret
push
test
and
lahf
notb
mov
sub
add
pusha
mov
xor
push
mov
sbb
popf
icebp
xchg
cmc
dec
mov
test
lock
push
or
dec
push
arpl
stos
subl
inc
mov
xor
xchg
and
outsl
inc
inc
or
out
pop
jmp
pop
add
xor
aas
sbb
lcall
sarl
mov
xchg
pop
sub
push
cld
mov
adc
dec
in
sti
sbbb
ss
decb
xchg
and
dec
sub
inc
mov
mov
mov
jg
in
test
mov
into
and
leave
addb
nop
dec
add
or
or
subps
push
andb
adc
and
rcrb
sbb
pop
in
or
popf
jmp
mov
addb
lock
sub
subb
jae
mov
loop
mov
lret
test
push
mov
sbb
pop
aam
pushf
xor
jg
add
add
add
add
add
mov
pop
fxam
mov
test
cmc
xor
push
jmp
mov
pop
jp
and
dec
ret
xor
pushf
rol
lcall
cmpl
jne
push
fdecstp
mov
cmp
iret
das
nop
outsb
sbb
or
test
xchg
push
imul
les
into
lcall
shlb
mov
jne
adc
push
cmpsl
sub
je
jb
pop
sub
or
mov
enter
test
fiadds
popf
fwait
out
ja
cmp
jbe
cli
pop
adc
or
addr16
pop
orl
lods
sub
test
mov
cmovo
scas
sahf
pop
shl
jmp
adcl
lahf
pop
mov
jns
and
fistpll
out
dec
pop
shrl
xor
and
in
push
push
adc
mov
push
sub
pop
add
fdivs
mov
xor
sub
inc
adc
fs
cltd
leave
cltd
imulb
and
hlt
adc
mov
push
jns
xchg
push
inc
shl
xchg
loop
fistpll
insb
jne
jbe
jne
jbe
or
pop
and
mov
mov
shrb
cmp
mov
xchg
xor
jg
pushf
pushf
je
jb
inc
cmp
es
push
add
jb
jmp
pop
leave
dec
rorl
mov
xor
and
int
imul
insl
pop
mov
and
and
cmp
lret
movsl
and
and
sahf
test
lods
push
das
push
mov
xor
call
push
mov
adcb
dec
ud1
cltd
jg
fsubs
sbb
push
daa
iret
fidivrs
in
test
insl
and
mov
ja
call
inc
inc
push
mov
push
leave
cmpsb
fildl
cli
mov
mov
mov
repnz
inc
mov
shrb
lret
ja
dec
sahf
lret
call
and
xchg
mov
cltd
add
or
inc
adc
popf
cmpsl
shll
lods
pop
ja
gs
addr16
mov
lahf
inc
sub
lods
lret
xchg
sbb
das
mov
inc
jb
faddl
lods
and
enter
lods
mov
dec
fmuls
loopne
inc
and
shlb
enter
sub
fcompl
aam
in
or
mov
fdivrl
push
enter
mov
fdivs
outsb
lods
inc
and
adc
aam
sti
es
in
jne
in
push
inc
dec
bound
xchg
lods
xchg
jbe
jne
pop
mov
lods
dec
call
addl
jp
pushf
mov
or
inc
xor
add
fistps
pop
dec
in
icebp
scas
inc
add
lods
push
and
cmp
sbb
adc
add
inc
cmp
jbe
jbe
fisttpl
and
sub
xchg
aam
mov
ror
dec
lea
mov
aas
clc
xchg
ret
xlat
gs
add
fwait
repnz
push
mov
mov
jne
mov
pop
sti
push
and
adc
mul
das
mov
or
ret
jle
or
or
test
js
dec
add
jp
enter
xor
int3
jp
aad
cmovno
jmp
mov
and
lods
pop
add
dec
dec
xchg
ss
scas
movsb
add
jbe
cmp
jne
or
or
je
cs
out
ljmp
rcrb
xchg
or
push
nop
sbb
sarl
add
xchg
sbb
jbe
out
add
add
mov
mov
inc
clc
pop
add
jmp
sub
xor
or
and
js
push
or
or
adc
call
outsl
xor
inc
push
shr
sbb
and
or
sbb
mov
fsubl
aam
or
inc
pop
xchg
or
adc
ja
test
sub
mov
mov
inc
out
pop
inc
push
add
dec
popa
sahf
or
out
inc
ret
add
mov
mov
andb
test
jmp
out
cli
cmp
xchg
and
adc
add
movzbl
add
and
pop
mov
push
mov
andb
pop
mov
dec
bound
xor
mov
jbe
loopne
ficoms
push
pop
rclb
ljmp
ucomiss
sub
push
push
mov
inc
cld
mov
dec
and
int
decl
dec
push
sbb
lods
jmp
adc
and
dec
nop
mov
adc
mov
lahf
aam
lret
int3
leave
sub
mov
or
rorb
sbb
mov
fwait
les
or
inc
jmp
jmp
cmpsl
roll
jb
push
jo
push
pop
pop
clc
mov
in
jo
jg
xor
mov
push
lret
xchg
jnp
mov
mov
cltd
inc
mov
xor
outsl
repnz
push
or
sbb
jno
loopne
movl
push
subb
jmp
mov
shll
cltd
or
cmp
jne
movl
inc
or
in
outsb
mov
adc
sahf
adc
sti
jmp
sub
or
cmp
les
add
dec
rolb
mov
cmp
inc
push
fisubrl
notb
cmp
test
sbb
push
mov
mov
lock
incl
cmp
into
jb
or
movsl
cltd
je
jmp
loop
call
mov
push
and
pop
popf
xchg
enter
js
aaa
les
rolb
cmpsl
mov
jae
cmp
jbe
and
shl
jne
jmp
and
inc
push
leave
inc
imul
imul
and
mov
aaa
jmp
outsb
setge
enter
sbb
fs
test
cmp
or
lcall
push
ljmp
fadd
shlb
inc
in
jge
inc
cmp
xorb
ja
movsl
adc
sti
dec
sbb
enter
or
out
std
xchg
xchg
out
dec
jne
mov
rolb
xchg
stos
lods
sbb
sbb
shll
mov
mov
xor
push
mov
inc
dec
jne
cld
cmp
stos
mov
jmp
adcb
lret
jnp
cmpsl
cmp
adc
push
enter
jle
push
adc
jo
addl
mov
adc
mov
push
pop
xor
cmp
sbb
mov
imul
or
inc
push
cmpsb
pushf
sub
xor
out
pop
add
mov
cmp
adc
insl
test
push
mov
fidivrl
and
add
inc
inc
mov
lods
add
sbb
das
mov
andb
les
or
pop
popfw
push
cmp
clc
add
andl
inc
cmp
inc
jmp
xor
or
mov
fwait
xlat
add
cmp
out
jno
adc
jno
es
mov
jmp
mov
int3
sbb
cmp
sub
add
mov
or
fsubs
std
and
mov
ljmp
xchg
ret
xor
xor
faddp
sub
cmp
sbb
mov
lea
push
test
lock
mov
enter
jnp
ret
and
adc
subb
add
movsl
sub
cmpsl
rolb
pusha
inc
add
pop
test
push
scas
rclb
repnz
ret
je
sarb
andl
and
pop
sbb
adc
dec
mov
mov
adc
int3
inc
mov
das
inc
mov
xor
sbb
xor
jno
inc
inc
sbb
sub
fwait
xchg
add
sub
and
add
sbbl
mov
cmp
cmp
add
mov
aam
inc
mov
lea
jg
pop
mov
or
pop
cld
js
bound
mov
aad
adc
mov
adc
dec
jge
cmp
xor
and
bound
fisubrs
push
mov
mov
mov
addr16
stc
test
sbb
push
sbb
mov
sbb
sbbl
and
js
add
push
sbb
jo
adc
add
dec
jecxz
add
leave
mov
pop
add
lods
fsubrp
mov
rorl
ret
or
or
cwtl
testb
test
sub
adc
and
pushf
arpl
in
xorl
xchg
push
push
push
pusha
out
cmp
mov
fdivrl
push
mov
cs
push
aas
mov
mov
or
inc
movl
inc
add
aad
mov
inc
or
add
jo
sbb
jg
sahf
mov
pushf
mov
push
mov
shlb
push
bound
repnz
mov
imul
dec
sbb
orb
faddp
call
mov
pop
dec
pop
sbb
cwtl
ss
cmpsl
mov
sub
js
imul
mov
pop
push
mov
aad
push
mov
and
sbb
lock
dec
sti
cs
pop
sti
iret
push
adc
jns
xor
jns
mov
or
sbb
pop
jb
cmp
js
pop
jb
dec
pop
cmp
dec
and
jle
add
sbb
jmp
cwtl
pushf
mov
push
dec
mov
jmp
jbe
and
popf
or
sbbl
jp
add
xchg
mov
mov
insl
jg
mov
push
xorl
mov
sbb
enter
out
mov
in
mov
push
ljmp
and
push
xchg
xchg
lret
pop
jo
les
pop
xchg
push
jo
cmpl
leave
test
push
adc
pop
push
and
fsubr
hlt
cmp
add
fiadds
and
add
cmpsb
mov
js
or
stos
cmp
xchg
mov
xor
sub
fistpl
js
push
xor
cmc
jge
inc
pop
xchg
arpl
lds
jne
push
rcll
cmp
add
and
xchg
sbb
or
mov
xchg
and
pop
sub
and
adc
jnp
inc
fisttps
scas
add
mov
punpcklbw
js
cmp
inc
adc
mov
adc
pop
pop
hlt
mov
pop
popl
mov
push
mov
inc
or
mov
rcr
lsl
sbb
or
and
in
sub
bswap
pop
pxor
push
push
sarb
jg
loop
fists
pop
je
mov
inc
adc
and
inc
push
sbb
loope
pusha
jo
mov
dec
jne
rcr
sub
int3
je
andb
mov
jg
adc
divb
xor
cmp
dec
push
sbb
add
jne
ss
mov
inc
inc
cli
pop
pop
ret
sub
sub
push
mov
bound
push
inc
dec
cli
shr
add
outsl
or
sbb
push
insl
out
pop
loop
test
ret
decb
neg
loop
dec
sub
or
pop
testb
dec
popf
adc
adc
or
xor
inc
dec
subb
mov
mov
push
or
shll
enter
pop
and
push
fistpl
or
push
jo
icebp
orb
mov
popl
mov
push
test
mov
pop
cli
sbb
nop
mov
lock
add
sub
jmp
mov
mov
fmull
enter
xorl
add
or
sbb
faddl
add
inc
jb
inc
adc
mov
mov
push
fldl
or
add
rcl
inc
repnz
adc
sub
mov
mov
in
jno
ja
imul
xchg
cmpsb
ss
jl
popa
xchg
pop
inc
fs
jns
sbb
mov
and
pop
stc
sbb
dec
pop
pusha
mov
add
and
sbb
push
jns
outsl
adc
adc
test
add
push
push
sahf
mov
sarl
fld
dec
sbb
cld
and
jl
rcrl
stc
cmpsl
subl
int3
test
adcb
fwait
xchg
jmp
decl
iret
hlt
jmp
mov
mov
jne
pop
pop
adc
aam
lahf
in
pop
js
and
push
mov
push
pop
or
lock
push
xorb
or
cmp
add
loop
nop
sbb
out
fisubrs
push
cmp
ror
pop
repz
idivl
test
outsb
push
ja
adc
cmpsb
jge
mov
and
movsb
out
aam
mov
and
inc
push
and
mov
ss
xor
js
add
push
sahf
sub
arpl
js
fildl
mov
sti
adc
inc
inc
sbb
push
cltd
inc
sbb
inc
faddl
out
insb
adc
popa
push
jmp
lea
adc
clc
in
arpl
inc
ficompl
jmp
xchg
mov
lahf
clc
and
ret
and
push
push
test
jmp
adc
inc
mov
sub
or
mov
adc
pusha
inc
sbb
mov
test
mov
xor
data16
sub
je
mov
in
rcrb
jo
pop
xor
jne
lea
mov
mov
jle
add
les
mov
push
mov
shll
fucomip
stos
rclb
iret
bound
mov
iret
add
xor
pop
or
jne
sub
xchg
popf
fstpt
fadds
mov
inc
mov
jb
enter
pop
jb
mov
lods
std
leave
faddl
jne
movsl
pop
mov
mov
test
lods
and
and
mov
add
hlt
and
push
shr
lea
cmpsb
outsb
jno
mov
mov
idivb
mov
or
out
or
mov
xchg
out
enter
xor
or
in
mov
js
dec
and
sarb
mov
lods
pop
lret
or
repnz
mov
or
sar
jo
lock
pushf
mov
jne
int3
pop
cmpsl
pop
or
add
xlat
dec
pop
sbbl
subb
jno
add
mov
inc
loopne
pop
cld
fnstsw
add
add
sub
sub
add
loope
mov
pusha
push
add
call
xchg
shl
call
pop
dec
or
inc
xor
orb
mov
cmp
jne
inc
sub
pop
aad
pusha
mov
outsb
lahf
mov
push
cmpb
movl
testl
pop
pop
jnp
pop
inc
push
fimull
mov
imul
cmpsb
shl
jne
js
ds
mov
andl
orb
add
ret
gs
js
mov
outsl
stc
xor
lea
lret
pop
test
scas
sub
arpl
push
clc
mov
jns
pop
mov
or
out
ret
push
jle
push
or
movb
test
push
inc
lea
xor
in
pushf
sub
ret
inc
dec
dec
lock
int
push
dec
lds
sub
inc
icebp
mov
cwtl
add
pop
cmp
jne
xor
shll
stc
mov
jecxz
mov
add
jle
push
push
cmp
or
xor
mov
out
mov
rcl
jns
daa
mov
stos
pop
and
add
xor
mov
cld
roll
add
push
push
push
lahf
mov
push
arpl
enter
mov
mov
dec
aaa
dec
nop
jno
or
mov
or
mov
inc
out
add
imull
and
push
xlat
inc
loopne
mov
adc
mov
mov
jbe
fisubrs
into
nop
cmp
mov
lcall
std
and
or
push
mov
into
adc
cmp
jnp
add
mov
xlat
push
xor
addb
xor
in
or
push
add
push
mov
arpl
jp
in
mov
dec
mov
mov
mov
add
add
aaa
movsl
pop
pop
sub
pop
mov
or
jl
fwait
repnz
stos
dec
push
mov
mov
pushl
fistpll
bound
roll
add
imul
es
mov
inc
fildl
cmpsl
add
cmp
add
clc
push
les
sub
add
mov
xchg
mov
daa
add
daa
push
mov
sbb
add
sti
xor
aad
aas
shlb
push
ret
movsl
jb
hlt
sbb
mov
adc
mov
xor
outsb
adc
adc
ss
lock
repz
and
xchg
mov
jp
paddw
xchg
adc
adc
fwait
cmovne
or
add
sub
pop
js
bound
push
jns
xchg
aas
dec
add
cs
rorb
lret
xor
inc
jl
jmp
dec
xchg
add
jns
cmc
roll
sbb
push
pop
lcall
cltd
inc
pop
imul
sbb
or
inc
mov
jg
int3
cmp
jnp
sub
test
jne
pop
mov
test
cmpsl
rcrb
fisttps
add
dec
shrb
call
lods
sbb
jle
mov
adc
mov
mov
dec
lahf
jl
or
fstpt
sbb
mov
je
in
push
push
push
push
mov
xor
inc
or
mov
lcall
sub
enter
dec
aas
inc
jp
jmp
int
fs
lret
inc
sbbl
dec
add
adc
scas
add
xchg
mov
adc
pop
mov
sub
or
mov
mov
in
adc
lea
push
mov
push
dec
pop
sub
das
push
sub
roll
fmul
push
or
push
jl
repz
pop
cs
testb
ror
fstpt
inc
adc
adc
push
lcall
push
clc
nop
mov
jecxz
or
out
in
push
les
pop
dec
sub
int
cmp
out
out
popa
mov
xor
loop
or
movsl
mov
inc
xor
mov
push
mov
outsb
sub
mov
aaa
lods
lods
pop
fsubs
xor
lods
push
cmpsl
or
inc
ret
and
shrb
out
push
pop
pop
aam
or
fxch
stos
imul
xor
int3
mov
xor
xlat
popa
push
add
stos
daa
ret
or
jbe
aaa
sahf
or
jmp
xor
add
add
xchg
arpl
sub
test
movsl
mov
int3
cmp
xlat
scas
mov
xlat
int
mov
mov
xlat
jge
rorl
xlat
xchg
adc
and
sub
xlat
sbb
jmp
in
sbbl
sbb
int
inc
nop
loope
getsec
add
mov
cltd
inc
cmpsb
test
inc
xchg
adc
ljmp
sbbl
testl
and
mov
xor
fistpl
cltd
movsb
repnz
int3
es
pushf
add
sub
xchg
or
fcmovnbe
pop
pop
push
sbb
sahf
pushf
push
cmp
incb
fisttpll
mov
dec
and
cmp
out
add
mov
mov
shll
xor
lods
mov
jb
sbb
mov
mov
mov
int
xchg
mov
inc
je
cmpsl
and
in
cmp
sahf
add
push
and
and
dec
xorb
xchg
leave
jne
iret
lea
arpl
push
jb
leave
iret
movsb
test
push
leave
inc
test
sbb
xchg
pop
outsb
ret
lret
loope
rorb
sbb
hlt
adc
out
pop
dec
imul
add
push
jns
and
sub
jae
ss
pop
sub
or
sbb
push
out
daa
loope
faddl
pusha
popa
test
je
or
sbb
jnp
js
loopne
add
fadd
xor
and
adc
push
inc
or
pop
pop
push
shlb
aaa
or
mov
or
movb
in
mov
push
sbb
icebp
push
scas
sti
or
or
sbb
lahf
add
sti
mov
push
jmp
jg
mov
add
push
mov
icebp
mov
sub
dec
xlat
xor
dec
add
dec
cmc
dec
push
divl
dec
movsb
or
add
movsl
xchg
mulb
testb
sar
adc
inc
cltd
cmp
and
inc
ret
cld
aaa
dec
dec
mov
push
cmpsl
je
mov
sbb
shlb
adc
inc
sbb
sbb
sub
push
mov
add
jmp
pushf
add
or
repz
pop
xchg
ja
or
shr
je
cld
fwait
loope
jge
std
outsl
push
push
dec
adc
push
and
out
lcall
adc
lahf
out
outsl
inc
or
jbe
jle
iret
lahf
out
dec
outsl
ja
jo
mov
push
mov
adc
dec
jne
pop
dec
in
jnp
pusha
ficoms
pop
ffreep
and
sar
lea
lea
inc
out
mov
mov
fidivl
add
dec
cli
add
sahf
xor
jp
jle
lahf
ljmp
ret
mov
ljmp
shrb
lret
ret
mov
shr
push
push
ret
fadds
icebp
mov
sbb
sbb
in
pop
inc
loope
or
jae
jns
shll
jmp
jmp
or
addr16
es
bound
or
sarl
pop
jmp
ds
inc
mov
push
bts
jmp
mov
inc
xor
sbb
cmpsb
stc
add
xor
sbb
and
call
or
inc
jne
cmpl
in
incl
cmp
je
cmp
and
shll
ret
notl
or
ljmp
loope
inc
cmpsl
test
dec
pop
push
lock
outsl
fadd
push
cmp
lret
mov
and
add
test
mov
test
mov
add
pop
daa
cld
and
aas
adc
mov
pusha
sbbb
sbb
repnz
pop
or
shrl
pop
andl
or
stc
mov
mov
mov
adc
inc
fs
popa
aas
jle
nop
pop
subl
xor
cmp
and
leave
sub
mov
cmp
or
pop
pop
mov
and
mov
add
sbb
orb
pop
loop
mov
rolb
adc
mov
scas
sub
lock
test
rolb
stos
xchg
jmp
inc
or
sbb
push
sbb
pop
pop
ljmp
cmp
mov
xchg
fiaddl
out
mov
add
fsubr
inc
js
imul
lods
gs
jmp
outsl
xchg
mov
sub
push
jbe
add
gs
sbb
mov
lock
out
jne
mov
add
incl
inc
and
sbb
mov
pop
jne
out
add
out
dec
adc
add
xor
add
std
adc
popa
mov
out
cs
adc
repnz
add
xor
push
mov
push
xor
push
xchg
sub
and
jp
imul
mov
xchg
je
or
jne
dec
xchg
pop
sbbb
xor
call
dec
add
sub
mov
aas
movsl
adc
fildl
inc
cs
je
adcl
jne
jnp
mov
and
and
sbbl
push
ljmp
outsb
or
xchg
jne
push
insl
and
cld
add
sbb
subl
push
or
push
push
popa
idivb
test
es
push
aas
adc
push
cli
push
ss
and
ja
inc
std
jb
sbb
xor
sub
xor
jle
idivb
mov
lods
or
clc
sub
or
pop
clc
insb
pusha
arpl
int3
mov
sub
push
je
jb
xor
and
sar
cmp
lea
add
add
and
mov
sub
push
daa
orl
mov
in
rcrb
shlb
xor
sub
mov
out
shlb
into
js
push
je
lods
add
lock
sub
lea
adc
fldenv
or
push
cmp
or
or
out
dec
mov
and
mov
ljmp
push
pop
push
int
sarl
loope
lea
daa
mov
or
dec
jg
out
mov
incl
or
movb
xor
out
xchg
pop
dec
inc
cmpsl
sbb
cmpl
push
push
mov
out
push
pop
call
imul
add
mov
push
out
jl
fimuls
or
fnstsw
sbb
movsb
or
aas
ss
push
or
add
arpl
scas
add
faddl
add
cmp
mov
xor
aas
cmp
or
rolb
roll
cmp
jb
scas
daa
les
out
nop
cmp
pminsw
jle
insb
stos
pop
add
jp
orb
push
or
fmuls
mov
or
pop
ret
add
addr16
add
push
pop
nop
movsb
inc
out
mov
cmp
or
add
add
sbb
adcb
dec
jmp
inc
jne
mov
xor
out
push
testl
sub
mov
dec
push
pop
jmp
lea
lods
inc
push
xchg
cmc
push
jnp
lock
ds
aaa
xor
mov
mov
jne
sub
ret
aam
adc
daa
dec
in
insb
lock
push
mov
movl
xchg
xchg
add
jmp
push
pop
aam
mov
test
pop
js
mov
push
outsb
addb
inc
aam
xchg
dec
and
cwtl
cwtl
jge
or
maxps
dec
out
mov
stos
inc
adc
test
not
mov
adc
jmp
push
stc
push
sub
xor
inc
and
mov
mov
dec
lock
repnz
adc
jne
xchg
and
mull
dec
mov
pop
mov
out
repz
mov
or
mov
add
push
lret
mov
pusha
dec
imul
mov
jae
dec
aam
dec
jb
ret
mov
sbb
push
sbb
lea
pop
pop
push
sub
push
lock
nop
popa
cmp
jecxz
or
sub
xchg
int
dec
jbe
pop
mov
add
or
xchg
fistl
imul
sub
or
xor
arpl
in
xchg
xchg
das
push
push
jb
pop
iret
and
sbb
addr16
lret
push
add
jnp
incb
insb
fs
enter
loopne
daa
jg
cmpsb
push
cmp
xor
xor
add
into
jnp
xor
or
or
fwait
gs
xor
push
xor
idivb
inc
adc
stos
in
cs
cmp
inc
dec
ds
inc
ja
sub
dec
inc
js
dec
push
sahf
lret
push
push
outsl
adc
and
in
aaa
popa
inc
adc
fnclex
sub
dec
mov
in
adc
movsb
dec
sbb
inc
popa
xchg
ja
pop
sub
adc
xchg
adc
ret
cmpl
shlb
jne
mov
pop
add
xchg
jbe
leave
and
das
inc
mov
push
nop
rcll
mov
adcb
push
shr
jmp
loopne
push
es
movb
andb
push
clc
stc
aad
or
or
xchg
push
pop
lea
fisttpll
lock
xchg
sbb
sbb
mov
lock
and
pushf
add
aad
mov
insb
mov
adc
ja
jo
loope
sarl
pop
out
pusha
bswap
dec
cmp
cli
sbb
adc
not
sbb
mov
cmp
jge
inc
push
sbb
clc
outsb
scas
cmp
jne
test
js
addr16
int
arpl
sub
add
jo
sbb
insb
data16
push
cmp
out
inc
inc
scas
adc
mov
add
jo
inc
adc
lods
sbb
in
out
jecxz
out
inc
fcmovnbe
loopne
xor
lret
sahf
mov
mov
test
dec
test
andb
fwait
loopne
sub
sbb
push
or
mov
inc
jns
clc
xchg
mov
dec
ja
sub
sub
sbb
pop
sub
adc
or
mov
adc
les
ds
sahf
clc
lock
loop
pusha
mov
insb
pop
lods
and
or
push
dec
rcll
dec
mov
xor
loopne
andb
adc
pop
lea
adc
test
or
xchg
add
aad
mov
sbb
addr16
je
mov
sbb
add
fdivs
or
enter
add
lock
je
jb
mov
pop
xchg
fadds
ret
sub
cmc
add
jmp
neg
jle
rcl
add
out
sub
or
fcoms
jnp
out
fisttps
push
lock
mull
lsl
jmp
push
loopne
ficomps
push
inc
shr
rcr
shr
rcr
or
sub
jno
mov
repz
dec
fs
outsb
lahf
jo
out
jb
cmp
or
cmp
or
cmp
add
sbb
adc
push
push
sub
or
ficoml
aam
test
fxch
pop
ret
adc
xchg
stc
je
sbb
inc
rdmsr
sbb
pcmpeqd
insb
add
and
inc
jmp
das
xor
in
sub
sbb
repz
mov
cwtl
pavgw
into
rolb
xchg
or
inc
jp
mov
lock
jb
sarl
sarb
pop
mov
rcrl
xlat
sahf
stos
in
loope
cmp
jecxz
scas
sub
add
and
and
inc
pop
les
les
inc
imul
xlat
mov
mov
xchg
jne
add
mov
push
jae
or
js
inc
clc
into
jmp
insl
loopne
push
push
outsl
xor
sbb
cmp
xchg
shlb
clc
loop
and
test
jmp
dec
and
push
pop
ret
mov
nop
lret
stos
mov
inc
and
add
xor
jmp
pop
push
dec
inc
aaa
sub
push
pop
lret
js
xor
jo
add
cmp
sub
sub
inc
adc
out
ja
mov
and
jmp
push
mov
sbb
mov
pop
xor
pop
inc
cmp
mov
add
pusha
push
and
cmp
lock
fiaddl
sbb
roll
dec
inc
decb
dec
adc
mov
loope
shrl
fs
adc
xchg
push
or
add
add
rcr
and
jo
ret
push
ficoms
enter
sub
or
add
add
rolb
test
pop
cs
dec
fcoml
lods
fadds
lock
mov
mov
sub
loop
sub
mov
movsb
add
sar
imul
jno
inc
push
movb
cwtl
jne
add
je
mov
push
push
mov
les
pop
lcall
cmp
push
loop
mov
cmp
xor
dec
out
inc
in
add
stos
mov
xorl
or
or
cmp
or
add
push
imul
inc
cmp
xchg
es
adc
add
sub
sbb
sbb
adc
cmp
sub
push
fisttpl
sbb
add
push
sub
push
push
or
pandn
rorb
or
pop
and
adc
outsl
push
dec
in
sbb
or
fdivrl
adc
sbb
push
rclb
arpl
imul
dec
movsl
fsubs
xor
int
add
inc
inc
fidivl
dec
xor
push
jnp
mov
pop
roll
movb
sub
out
lock
out
cmpb
jecxz
aam
push
sub
outsl
mov
cmp
jg
inc
jmp
mov
ds
or
lds
jbe
in
and
cmp
imul
fisttpl
jge
aas
sbb
enter
mov
in
sarb
fmuls
sbb
clc
xlat
sub
dec
je
mov
mov
inc
pop
fadds
xor
icebp
xor
shll
inc
jne
push
xor
test
jne
push
adc
cld
and
add
jo
out
or
pop
mov
push
adc
outsl
dec
js
stc
gs
cmp
jge
inc
mov
xor
jae
add
jae
addr16
push
and
mov
popf
and
sbb
scas
add
sub
add
and
stc
xor
aas
sarl
pop
inc
rclb
mov
dec
psubd
push
sbb
pushf
xor
and
or
sti
test
test
jl
js
mov
xchg
ljmp
lcall
loop
push
push
gs
and
ja
mov
sub
adc
dec
mov
test
cltd
add
push
dec
or
pop
lock
push
pop
enter
insb
orl
add
arpl
add
addl
cmp
or
sub
shlb
xor
insb
xchg
lock
ja
pusha
imul
sub
and
lods
mov
pop
imul
inc
mov
test
mov
or
adc
adc
adcl
cmp
mov
mov
in
clc
pop
or
sbb
in
mov
je
xchg
cli
adc
mov
pop
subb
xor
lea
or
out
andl
cmp
out
cmp
jmp
popl
inc
xor
ljmp
out
mov
pop
xor
loopne
push
js
xor
xadd
push
mov
jl
adc
sahf
lock
inc
mov
div
xchg
and
pushl
add
jno
pop
sub
mov
loop
mov
test
pop
push
push
xor
test
movsb
pop
inc
ljmp
push
inc
cmp
ds
sbb
dec
sbb
push
push
push
inc
sbb
out
pusha
ss
insb
enter
push
rcll
push
or
adc
push
les
xor
aad
jp
shld
popf
sub
or
mov
stc
dec
xchg
cmp
cmp
jmp
mov
jne
arpl
pop
mov
add
sbb
aas
cmp
mov
cmpl
sbb
dec
mov
sub
push
pop
out
xchg
dec
out
andl
xlat
sub
pop
pop
pop
aad
or
xor
addb
test
or
cmp
push
sub
int
loopne
push
les
jae
push
jmp
clc
movd
adc
cmpl
movups
lods
cmpsb
jl
femms
push
or
or
into
add
xor
sahf
push
popf
mov
gs
adc
push
sbb
lods
movl
mov
call
shrb
xor
inc
cmp
ret
xchg
adc
inc
xchg
adc
push
push
lea
or
dec
push
push
pop
and
jle
sarl
lret
inc
das
adc
push
test
sbb
xchg
or
aam
or
sbb
sar
insb
xor
xor
inc
jmp
adc
popf
inc
and
leave
lcall
mov
pusha
bound
jo
add
sub
jl
mov
adcl
mov
mov
inc
push
push
nop
imul
mov
test
imul
and
daa
test
jecxz
dec
cmp
mov
mov
cmp
push
push
or
push
mov
cs
mov
hlt
add
sbb
dec
popa
or
inc
jne
sub
adc
pop
ret
orb
dec
shlb
ss
cmp
mov
push
push
hlt
add
test
loop
je
push
inc
stos
pop
and
sbb
sub
mov
adc
adc
jmp
mov
stos
popf
or
xchg
scas
mov
mov
adc
mov
das
cwtl
cmp
jle
sub
cmp
xor
add
decl
push
jmp
dec
push
in
and
sbb
jbe
pushf
add
jl
ret
loopne
out
negl
lock
ret
test
sbb
sbb
mov
sub
insl
xorl
mov
pop
jge
cmp
add
movsb
fstpt
mov
movsb
jne
enter
out
dec
jae
imul
sbb
sub
push
jmp
and
scas
shr
outsb
mov
dec
decb
lods
leave
pop
push
sub
and
cmp
dec
cwtl
in
pop
aaa
es
pop
cs
and
or
pop
stc
sub
cmp
mov
push
movsl
jbe
sub
mov
push
inc
stos
loopne
je
mov
mov
jge
in
mov
cmpsl
mov
pop
sub
inc
inc
cmp
testl
testl
sbb
inc
jmp
sahf
dec
dec
or
cmp
xor
pop
es
repnz
and
or
insb
decl
stc
push
adc
jg
cmc
jecxz
ds
inc
jmp
cmp
and
push
pop
pop
xor
push
div
dec
mov
dec
test
jno
mov
mov
xchg
cmp
ljmp
dec
adc
adc
clc
mov
sbb
xlat
test
cmp
out
fwait
or
mov
add
lods
pop
call
jnp
jle
inc
ret
sub
xor
jne
add
ret
adc
inc
pop
adc
jmp
call
add
mov
je
lock
pushf
imul
mov
mov
push
sarb
add
test
lea
enter
les
lods
mov
out
xchg
inc
movsl
cmpsb
or
jne
mov
addr16
out
mov
and
xchg
jo
inc
imul
jae
lret
sti
mov
push
or
mov
sub
ja
mov
out
inc
jg
or
inc
testl
out
jne
out
or
mov
ljmp
pop
cmp
inc
add
push
scas
addr16
mov
test
add
jbe
pop
push
or
clc
cwtl
xchg
test
push
pushf
fstpt
inc
add
test
mov
loope
in
push
lock
cld
sub
add
dec
inc
imul
add
mov
ja
shlb
sub
in
incl
cmpl
insl
mov
pop
xchg
sbb
or
mov
test
jg
add
sbb
lahf
nop
mov
sub
or
shll
shr
aam
or
shr
sbb
test
or
push
sahf
pop
idivl
or
jg
or
and
mov
mov
movb
je
xchg
and
or
jl
mov
out
jg
insl
fadd
loopne
shr
or
mov
sahf
dec
mov
mov
outsb
mov
fistl
mov
mov
adc
andl
or
shrb
lock
js
xchg
jo
ficoml
pop
sbb
loopne
pop
ljmp
jmp
out
jmp
or
lods
mov
fldenv
and
lds
pushf
mov
mov
mov
loope
jl
dec
hlt
loopne,pn
int3
int3
jmp
xchg
or
cmp
mov
and
outsl
push
dec
into
jmp
lods
jne
imul
and
inc
int
sbb
mov
push
sbb
pop
adc
jne
push
lret
das
sub
test
sbb
repnz
sub
movups
and
hlt
jo
mov
mov
mov
inc
mov
inc
mov
mov
add
out
inc
fldl
inc
add
pop
ds
repz
movsb
std
call
out
pop
or
jo
sub
push
mov
or
add
testb
adc
sbb
mov
movsb
icebp
ss
push
push
idiv
add
xor
sbb
cmp
ficomps
cmp
mov
sbb
int
or
inc
int
pop
test
test
adc
push
cmp
pop
or
add
in
xor
push
mov
aas
jne
add
pop
stos
mov
adc
cld
dec
sbb
dec
sub
popa
in
ret
rolb
or
rcl
repz
jb
push
push
or
push
or
xchg
mov
in
pop
pop
imulb
es
lea
jno
and
mov
loopne
cld
in
or
lea
shlb
fwait
mov
in
jbe
imul
gs
push
push
call
pop
mov
add
insl
mov
inc
mov
mov
xor
mov
psubsb
sbb
xlat
jmp
sar
or
inc
ljmp
mov
pusha
stos
cmp
iret
jmp
sbb
faddl
dec
cs
xor
mov
dec
push
rcrl
adc
mov
loope
mov
add
and
lock
int
dec
xor
push
adcl
std
es
and
jmp
ret
scas
push
xchg
loopne
gs
decb
xor
dec
pop
xchg
mov
mov
push
inc
pop
push
add
in
loopne
cmovp
or
or
mull
sbb
enter
cmp
or
jne
inc
loope
push
lea
call
dec
cmp
leave
sar
mov
xor
aam
aas
or
testb
add
movsb
dec
adc
fstp
call
mov
subl
dec
nopl
xor
cmp
cltd
lods
loop
dec
push
xor
pop
ret
test
ret
insb
pusha
dec
outsl
or
ljmp
mov
and
cmp
pop
pusha
rorl
lcall
push
push
divl
mov
inc
xor
and
xchg
push
sub
cmpsl
mov
jp
and
inc
mov
andb
iret
mov
testl
mov
mov
sub
unpckhps
hlt
mov
inc
or
cmc
andl
push
fcmovb
lea
test
pop
xor
xlat
add
xor
jle
fsubs
in
push
or
sti
sbb
js,pt
inc
call
jmp
push
pop
cmp
lret
dec
inc
outsb
cmp
adc
hlt
in
inc
xor
or
inc
pusha
jns
cmp
pusha
enter
inc
mov
lea
rcll
add
je
dec
or
or
mov
pop
add
lea
mov
and
fstps
jl
mov
int
lods
pop
sbb
test
loopne
out
sbb
mov
inc
mov
out
add
fcoml
xchg
mov
rol
cs
enter
add
pxor
mov
repz
push
jmp
sub
mov
mov
pusha
and
mov
dec
je
rcl
or
sbb
add
fcompl
xor
loope
sbb
jb
fldcw
mov
inc
mov
sbb
inc
dec
xor
imul
mov
mov
shll
dec
std
xchg
lret
ss
loope
enter
xor
jae
subb
mov
cmp
jne
bts
adc
add
mov
push
adcl
adc
aad
gs
xchg
and
pop
lahf
dec
add
loopne
imul
cmp
ret
sub
sub
add
add
add
dec
dec
dec
int
andl
jbe
fs
jl
or
pop
jns
adc
fiadds
into
sub
adc
sbb
mov
pop
pushfw
std
aam
jle
add
test
sub
and
pushf
xchg
inc
and
popa
add
mov
push
mov
push
lea
or
inc
push
add
shlb
test
stos
in
and
mov
push
or
add
lods
mov
push
es
inc
xchg
adcl
in
mov
es
call
mov
add
jmp
pop
pop
mov
pop
mov
movl
stos
and
xchg
aas
push
jae
adc
movsb
mov
adc
ja
xchg
add
lcall
jne
adc
sub
pop
adc
mov
fimuls
shrl
cmp
cmp
je
xor
dec
inc
and
sbb
js
in
cmpsb
or
jmp
and
push
and
push
mov
push
loopne
fdivr
xchg
cmp
pop
adcl
push
mov
add
cmp
mov
ret
call
or
orl
sbb
dec
jecxz
add
xor
add
out
or
cli
adc
add
or
mov
adc
mov
xchg
or
pushw
ss
int3
add
mov
push
inc
mull
add
mov
bound
cltd
push
mov
inc
pop
mov
pop
pushf
push
xchg
and
out
pop
fcompl
pop
mov
loopne
mov
and
cmp
xchg
dec
jae
fstpt
add
inc
andb
loop
sub
test
lea
jmp
xor
rolb
sbb
fdivrs
mov
mov
mov
inc
mov
jmp
lahf
push
test
sub
cmp
jg
insb
pop
jl
jmp
addl
js
pop
fs
add
sbb
or
stos
popa
add
push
push
adc
push
jo
add
add
adc
xchg
aam
sub
mov
pop
adc
inc
or
mov
sub
jl
pop
adc
push
lds
leave
cwtl
pusha
cmp
jno
xlat
and
sub
dec
add
sbb
push
dec
test
lock
lret
xor
outsl
stos
popa
jge
mov
add
add
inc
xor
loopne
push
stos
adc
movsb
push
pop
pop
pop
icebp
fisttps
inc
adc
gs
cmp
push
pushf
imul
sub
mov
push
or
add
sarl
sub
push
bound
add
data16
pop
jmp
push
or
or
adc
idivb
pop
les
and
pop
mov
adc
adc
sbb
or
and
rcrl
jo
cmpsl
testl
jle
fwait
arpl
data16
push
mov
or
scas
cmpl
gs
or
or
or
cwtl
movsl
cwtl
data16
push
jne
push
aas
out
mov
pushl
leave
inc
push
or
enter
or
dec
arpl
inc
mov
xchg
jno
shlb
sub
jmp
push
std
js
ss
jne
push
push
clc
mov
dec
jnp
jne
pop
push
xchg
add
popa
pcmpeqw
loope
loopne
movsb
mov
or
rolb
pop
mov
in
arpl
jo
and
lea
mov
std
lods
pop
adc
lcall
movsl
stos
mov
mov
or
movsb
cmp
cmp
cmpb
or
outsb
outsl
mov
push
sub
imul
dec
or
fcoml
and
cmp
imul
js
mov
imul
outsb
movsl
fadd
or
cmpb
pop
sub
cmp
ror
or
jne
mov
clc
push
or
scas
rcll
or
or
push
xor
jbe
push
mov
or
outsb
dec
xchg
jbe
into
jmp
nop
or
or
xor
pop
cmpl
dec
je
jae
mov
push
mov
mov
mov
ret
or
and
or
loopne
mov
sbb
pop
lds
in
xchg
mov
cwtl
add
adc
sbb
pop
or
mov
loop
pusha
jne,pn
sbb
rol
inc
mov
xor
jo
adc
add
cmp
mov
mov
pop
popf
lcall
ja
jle
push
icebp
or
int3
cmp
pop
jmp
cwtl
les
test
dec
sub
test
aaa
sub
ljmp
cmp
add
orl
loope
jg
loopne
dec
adc
dec
adc
add
cmpl
cs
shlb
dec
sbb
cmpw
add
dec
bound
inc
loop
jno
push
push
sub
pop
push
out
mov
dec
mov
jb
sbb
sub
ljmp
adc
sbb
add
mov
test
lahf
push
push
push
movups
xor
add
or
add
xor
mov
dec
adc
in
mov
or
daa
push
push
ljmp
mov
add
inc
and
imul
cmpsl
mov
jmp
adcl
mov
stos
popa
jmp
test
shlb
ret
neg
push
add
lret
cmc
cmp
mov
clc
call
or
xor
add
push
push
xlat
gs
mov
push
cmpb
cmpsl
cli
rclb
in
movsb
mov
mov
mov
sbbl
mov
notl
push
and
gs
or
stos
inc
cmp
or
xor
sub
clc
or
sub
and
stos
cmpsl
push
fsubrs
mov
jno
push
mov
lock
imulb
or
mov
mov
inc
andb
mov
dec
mov
in
ja
mov
aaa
and
cmp
lahf
daa
pop
rcrb
xchg
cmp
mov
out
sbb
jo
addl
dec
jl
out
rcr
or
in
add
inc
cwtl
pop
popf
add
call
or
adc
xchg
ljmp
and
arpl
stos
or
rcrb
sbb
test
adc
inc
mov
cmp
inc
dec
pop
dec
or
xor
or
mov
and
push
push
addr16
mov
adc
enter
jns
daa
xor
jae
dec
in
and
mov
cmp
add
sub
add
fists
xchg
sbb
push
or
push
xchg
xchg
xchg
xchg
or
adc
outsb
mov
sbb
sbb
dec
dec
dec
dec
sub
xor
pop
add
cmp
inc
and
inc
cmovs
pushf
pushf
push
push
pop
add
daa
pusha
fs
daa
jo
js
idivb
and
sbb
cltd
fs
test
xchg
dec
xchg
cwtl
pushf
fs
dec
mov
and
mov
xchg
dec
enter
xor
sarb
leave
and
loopne
call
in
aam
and
dec
xor
clc
cld
add
cmp
add
add
add
shll
adc
leave
sbb
and
xor
and
sub
xor
and
xor
cmp
leave
adc
inc
gs
dec
fs
imul
xchg
dec
es
pop
pop
pusha
lods
add
je
rcrb
adc
push
adc
cmpsb
dec
mov
and
test
xor
mov
xor
imul
movsb
mov
and
xor
sbb
sbb
and
and
cmp
cmp
mov
xor
inc
rorb
dec
enter
mov
mov
pop
mov
sbb
xchg
adc
xorl
bound
rolb
or
pop
adc
push
mov
xor
lahf
push
or
nop
aam
or
pop
push
outsl
enter
pop
add
fcoms
fsubrp
xorl
lret
and
xchg
add
or
or
and
pop
out
jb
aas
mov
shll
dec
xor
adc
or
inc
outsb
and
shr
add
es
and
cmc
xorl
test
js
or
mov
in
test
adc
push
jae
bound
jo
fcmovbe
aam
insl
insl
loop
mulb
shll
and
or
sub
adc
clc
incb
bound
or
jmp
inc
cmp
outsb
and
mov
and
aaa
out
jae
jecxz
sbb
add
or
cwtl
or
adc
pusha
xchg
lock
or
mov
out
aaa
jge
je
cmp
mov
flds
and
pop
adc
pusha
mov
pusha
loope
pop
or
xor
inc
jecxz
test
fstp
jne
push
movsb
ds
pusha
fldl
cmp
not
xchg
sbb
outsl
mov
ret
setbe
testb
sahf
lret
mov
adc
sti
add
mov
out
test
fistpll
push
dec
cmp
xchg
sub
mov
rclb
shl
mov
or
sub
push
and
and
or
into
adc
testl
mov
add
xor
icebp
lcall
jmp
push
and
or
push
or
arpl
aaa
inc
flds
fstps
jmp
fisttpll
xlat
adc
fsubp
inc
push
hlt
adc
fildl
movsl
jbe
in
pop
sub
jl
push
divl
or
mov
adc
xor
hlt
ds
or
lock
mov
aaa
sbb
and
cmp
add
or
mov
mov
hlt
dec
jmp
sub
pushf
sbb
pop
sub
jmp
sub
push
mov
loopne
fldcw
inc
test
into
adc
call
imulb
cld
sub
mov
rorl
mov
push
nop
mov
inc
mov
mov
and
inc
or
cmp
xchg
jge
ffree
repz
add
push
add
pop
push
push
in
inc
shll
cli
bnd
imul
mov
repnz
dec
push
movsl
jge
test
scas
imul
insl
in
call
jbe
dec
cmp
sbb
nop
loopne
fchs
mov
push
push
pop
ss
nop
pop
jmp
pop
cs
icebp
pushf
nop
adc
pop
scas
sbb
loopne
cmpsb
mov
es
sub
cmp
aam
add
filds
push
add
sbb
and
pop
mov
lret
add
xchg
inc
outsb
inc
lods
mov
adc
loop
shrb
xor
ret
or
aam
cmp
je
or
sbb
sbb
or
mov
cld
sbb
add
hlt
hlt
pop
cltd
and
jmp
sub
pop
or
stos
and
inc
sbb
or
mov
ret
cmp
sbb
pop
fstpl
jp
lahf
mov
cmpb
and
ret
fidivs
lock
add
xor
push
or
fisttpll
mov
or
hlt
mov
pop
xchg
push
sub
cmp
pusha
in
fwait
dec
cmp
lock
mov
add
or
ret
call
jae
fadd
mov
or
sbb
mov
jbe
push
das
adc
outsb
dec
add
int3
mov
pop
pushf
arpl
arpl
out
sbb
mov
xor
nop
mov
or
sbb
jnp
xchg
hlt
and
add
andl
sbb
mov
sbb
dec
lret
into
sbb
mov
xchg
mov
call
clc
xor
sbb
xor
stos
push
fcmovbe
or
mov
jge
adc
or
sbb
rcll
cltd
and
decb
mov
clc
push
and
pop
cmpb
add
or
adc
ret
imul
enter
or
cli
out
fld
fucomp
pop
fldcw
pop
mull
loopne
out
mov
xor
test
outsl
jne
orl
mov
icebp
das
pop
pushf
ficoml
gs
or
shl
pop
and
or
push
or
jmp
loop
push
out
mov
push
sahf
jge
push
pop
je
aad
xor
push
ficoml
nop
cld
es
adc
push
push
push
movsb
imul
push
sub
aam
loope
ljmp
jo
fstsw
movswl
sbb
loop
or
inc
xor
icebp
and
rorb
data16
or
insl
or
and
fsts
dec
cwtl
or
sub
call
test
fcoms
pop
and
sbb
adc
pop
mov
nop
call
je
jo
movsb
fldpi
xor
loopne
lcall
add
mov
je
sbb
sbbb
shll
xsaveopt
dec
sbb
mov
mov
ret
loope
inc
popl
or
movsl
pop
mov
and
jno
iret
test
pusha
dec
rclb
clc
or
add
pop
jnp
jo
sub
icebp
xor
js
inc
cmp
cmp
subl
mov
cmpsb
es
mov
xor
inc
add
rcrb
add
mov
and
add
test
cld
sub
inc
mov
pushf
xlat
int3
pop
inc
add
in
inc
notl
add
adc
fiadds
imul
subl
lret
je
test
add
mov
sub
adc
jbe
sbb
insb
xor
js
adc
aas
mov
or
push
or
jle
or
or
add
loope
push
or
or
int
add
dec
test
push
rcrb
and
insl
pop
inc
or
push
mov
mov
pushf
pop
dec
imul
dec
push
or
sub
or
outsb
add
mov
aas
dec
push
mov
loope
adc
daa
testb
mov
loopne
test
jbe
jl
mov
rcr
jne
xchg
lock
stos
jp
pop
pop
dec
insb
jmp
sub
cli
clc
and
sbb
mov
inc
and
lret
pop
add
xor
scas
cmp
add
inc
lea
pop
mov
lret
inc
movb
rolb
ljmp
not
test
andps
or
pop
repz
outsb
inc
pop
pop
and
mov
out
sbb
mov
inc
adc
iret
and
insl
push
jbe,pt
dec
mov
add
push
outsb
int
or
or
cmp
sbb
dec
cmp
mov
loopne
insb
jmp
sub
push
orl
mov
xchg
pusha
add
sahf
jns
shrb
and
sarb
mov
mov
add
or
add
add
xor
mov
or
adc
jge
inc
stos
inc
es
movsb
sar
popa
or
adc
dec
xor
cmp
mov
cmp
ss
loopne
mov
daa
push
iret
rcl
sub
sub
pop
pop
or
bound
mov
jno
push
shlb
push
ds
push
or
test
xor
out
mov
xchg
test
push
mov
cmpsb
pop
in
sub
js
push
and
sbb
mov
mov
dec
jns
mov
pop
dec
lea
or
ret
movsb
push
rcr
inc
lods
and
sbb
test
jmp
push
lods
sub
dec
pusha
push
aas
xor
dec
or
inc
rcrl
dec
xor
push
aam
add
cli
mov
mov
jb
pop
pop
push
push
jb
mov
repnz
incb
mov
xor
cmp
and
scas
shll
shl
hlt
push
sub
lock
aas
mov
mov
mov
mov
and
mov
cmp
dec
push
or
ss
test
inc
add
inc
popa
sbb
push
push
mov
roll
pcmpeqw
daa
andl
rcll
out
je
add
in
lea
push
jecxz
mov
and
mov
and
lea
dec
and
inc
xchg
inc
sti
rorl
jecxz
enter
pop
in
dec
or
fiaddl
bound
xchg
xchg
ficoms
lret
jne
fcoml
mov
jae
jns
or
mov
push
cmp
xchg
test
adc
adc
sbbb
mov
push
mov
in
dec
je
pop
and
add
sbb
adc
dec
jp
addr16
lret
loopne
xor
and
sub
add
jbe
jne
cmp
enter
jb
mov
xor
mov
sub
inc
mov
mov
rcr
or
pop
xor
mov
sub
pop
sti
scas
push
xchg
cmp
insb
inc
cs
jg
xchg
or
ss
cmp
je
or
decl
out
mov
dec
cmpb
je
mov
cmp
pop
jne
dec
mov
shll
inc
divb
xchg
ss
and
fcompl
filds
cltd
arpl
add
xchg
mov
outsb
push
inc
jmp
inc
adc
mov
add
adc
or
movaps
push
xor
bnd
mov
push
add
adc
les
sub
add
adc
xchg
icebp
mov
fadds
mov
shrb
xlat
rcrl
add
fdivs
or
jle
aad
sub
inc
pop
ret
sahf
dec
loopne
push
pop
sbb
rorb
sub
dec
xor
popa
lock
les
sub
mov
popf
rol
outsl
xor
cmpl
mov
hlt
sbb
push
push
add
jle
push
cmp
pushf
cld
mov
adc
or
sbb
xchg
add
lods
ja
add
fiadds
daa
add
and
cld
loopne
icebp
push
jmp
es
je
loop
inc
sub
das
pop
insb
loopne
mov
fadd
inc
add
push
xor
mov
xor
or
add
xor
jp
testb
pop
lock
fimull
imul
adc
sub
loope
cmp
mov
adc
dec
das
ficompl
pusha
inc
lahf
shlb
fs
and
jg
ret
jmp
xchg
jmp
push
or
add
adc
bound
and
push
inc
or
adc
shlb
ret
inc
cmp
pop
push
add
sbb
shll
push
jmp
addb
lods
jne
xor
add
data16
push
fadd
pushf
insl
shrb
jge
mov
add
jl
nop
stos
inc
fcoml
lret
shl
inc
and
lea
xchg
xor
mov
fdivs
call
dec
mov
enter
sbb
xchg
sahf
dec
jl
inc
mov
cld
push
and
dec
out
rorb
lret
andl
imul
inc
lea
loope
or
xor
ret
nop
js
mov
jmpw
xor
cmpb
jbe
sub
push
inc
xor
add
mov
pop
sbb
js
inc
popf
push
dec
sub
leave
and
add
insb
lahf
mov
push
xchg
scas
and
adc
enter
inc
inc
mov
fistpl
fstpt
test
jg
ret
mov
or
jne
bound
xor
aam
es
icebp
sub
cli
in
call
xor
mov
mov
sbbb
je
fisubs
or
mov
xor
shlb
mov
push
hlt
nop
or
call
dec
scas
and
pop
xchg
and
inc
xor
pushf
ret
inc
sbb
xor
add
dec
jge
daa
inc
fs
cld
add
add
cmpsb
clc
hlt
shrd
sbb
fs
cmp
jge
sbb
shlb
xor
xor
inc
es
cmc
pop
and
xor
out
and
mov
cmp
cmp
or
rorl
pop
rcpps
insb
xor
add
fcmovb
push
nop
lcall
nop
sbb
dec
pop
in
mov
imul
or
js
jg
jb
xor
out
xor
mov
vaddsd
shl
fimull
jl
push
push
shll
pusha
cmpsb
outsl
dec
xchg
inc
cmp
mov
push
lock
pop
push
or
sarb
add
mov
jns
pop
jnp
inc
dec
pop
or
or
dec
and
or
cmp
cmp
add
in
add
lods
ja
dec
frstor
es
hlt
nop
mov
fwait
adc
adc
sbb
movw
add
add
inc
rcrl
jle
in
push
sbb
push
push
jmp
lock
and
sahf
and
bound
adc
xor
neg
call
inc
or
or
ret
loopne
push
hlt
aaa
push
lods
lds
js
xor
inc
mov
push
mov
push
add
add
xchg
mov
repnz
je
loopne
roll
and
add
lret
cmpsl
jl
into
roll
or
insb
cmp
sbb
mov
or
mov
sub
clc
sbbb
xchg
or
cmp
nop
dec
adcl
xchg
pop
aam
and
or
test
or
in
push
push
orl
dec
out
mov
cld
jl
loopne
jge
adcb
popa
push
mov
inc
push
add
add
sub
popf
jmp
xor
lea
sahf
clc
gs
push
xor
or
pop
data16
daa
aaa
in
add
movb
sti
lds
inc
je
dec
ss
xor
ret
add
dec
jmp
mov
sub
add
int
inc
aaa
je
sbb
or
pop
inc
hlt
jb
popa
cmp
or
inc
sub
rcrl
xorl
sbb
arpl
add
xchg
repnz
mov
inc
xchg
rcll
push
aaa
lock
test
and
imul
sbb
pop
fldenv
push
adc
cmp
adc
mov
sti
and
testl
pusha
push
xchg
sarl
push
fwait
lea
mov
jmp
jbe
or
cs
push
into
mov
add
add
loopne
cmp
notl
add
mov
inc
mov
test
or
and
mov
sbb
push
and
xlat
aam
jecxz
sti
adc
lea
xchg
cmc
cmp
loope
adc
daa
lods
sub
dec
inc
add
mov
push
ljmp
sub
push
push
and
leave
test
int3
inc
shll
std
lcall
push
add
and
cltd
nop
cli
inc
data16
mov
xchg
mov
cmp
fistpl
or
cmp
dec
test
or
mov
ljmp
mov
inc
mov
lock
xchg
adc
test
xor
rcr
mov
cmpl
rcll
push
or
push
or
mov
push
mov
sbb
or
mov
cld
ja
inc
adc
imul
jge
rcrb
sar
pop
add
adc
or
enter
mov
jb
dec
and
test
xor
sub
and
out
cli
mov
lret
je
dec
je
dec
push
push
jmp
add
mov
or
jmp
cmpb
mov
or
lcall
rclb
fistps
and
insl
lods
sub
jp
icebp
pop
ret
shll
add
sbb
push
jo
sub
int
adc
push
sub
cs
add
es
pop
mov
adc
das
jne
adc
fistpl
cmp
je
mov
cmp
mov
pusha
and
or
roll
test
lahf
and
add
pop
mov
adc
xor
lret
adc
fiaddl
into
test
or
xor
bound
jnp
dec
inc
sarb
xor
pop
sbb
lods
imul
sub
adc
xchg
sbb
loopne
cwtl
sbb
or
addb
call
add
or
or
or
les
movsl
xchg
adc
push
clc
shr
add
loop
or
or
cmp
leave
shr
or
mov
icebp
in
pop
jae
push
adc
test
and
add
mov
fwait
mov
add
add
fs
mov
xchg
jp
push
add
fidivrl
dec
inc
sbbl
inc
jl
in
sbb
cmp
movsb
leave
les
or
dec
pop
pop
adc
scas
sbb
and
aam
push
out
dec
fidivrs
ja
mov
adc
xor
repnz
into
clc
or
xor
mov
lea
add
xchg
push
pushfw
stc
test
fxch
push
insl
mov
nop
sub
sub
decl
mov
cmp
sub
and
xchg
xor
addr16
push
fiaddl
xlat
lock
cli
ficomps
adc
xchg
xchg
xor
push
insb
adc
xor
mov
mov
fsubrl
add
lret
dec
sti
xor
dec
push
call
incl
insl
mov
xchg
or
mov
pop
call
data16
sub
mov
scas
sbb
outsb
cmp
std
fs
dec
sub
loope
xor
bound
sbb
add
je
repnz
jp
cltd
bound
fwait
mov
inc
enter
outsl
stos
pop
loop
dec
inc
aaa
xchg
inc
push
xor
adc
pop
add
test
xchg
jne
inc
push
sbb
dec
leave
inc
jbe
decl
xor
js
aas
xorl
push
jns
and
gs
add
add
test
rclb
and
bound
mov
mov
jo
mov
stos
jb
pusha
sbbb
loope
or
mov
subl
or
rcrl
pop
mov
movq
clc
add
push
outsl
inc
mov
or
cmp
clc
and
xor
push
stos
sbb
mov
test
clc
sbb
inc
mov
xchg
mov
scas
mov
pop
out
add
aam
sbb
add
pop
je
add
bound
ret
mov
xor
str
cs
js
mov
push
lds
hlt
mov
mov
pop
inc
jno
mov
sub
push
add
sub
sarl
call
inc
ds
push
jbe
fcomps
add
call
ss
rcrl
nop
into
xor
and
add
push
int
sbb
cltd
dec
sarl
lock
stos
rol
call
pop
in
mov
cmp
jle
inc
rolb
jmp
dec
loope
sbb
aaa
adc
dec
cmpsb
sbb
mov
es
mov
jge
cmpsb
jmp
adc
cmp
cmpb
je
insl
pop
subb
push
incl
adc
push
pusha
push
fstl
and
or
push
mov
push
insb
jmp
add
push
sub
ficoml
push
xchg
fidivl
orb
and
aaa
jne
cmpsb
cmp
lret
sub
jmp
enter
std
jne
cmp
jne
gs
negb
jmp
dec
add
iret
add
jbe
into
adc
rorb
xor
cltd
or
adc
out
roll
leave
add
jl
js
je
mov
iret
adc
sbb
xorb
movsb
and
mov
jge
or
popl
xchg
pop
sahf
jne
movsw
and
int
or
push
mov
add
add
lahf
and
dec
or
adc
nop
add
clc
or
or
lea
mov
push
mov
lcall
jmp
dec
jge
inc
inc
push
neg
neg
sbb
jns
add
sub
inc
addl
mov
addl
sbb
and
push
adc
rcr
mov
xor
shl
sbb
adc
push
divb
adc
sbb
or
dec
jns
mov
dec
jne
pop
pop
pop
fildl
jp
or
adc
mov
rcl
ljmp
shr
add
test
cmpsl
jg
rclb
jmp
enter
andl
cld
je
outsb
xor
push
repz
add
addr16
dec
or
aaa
icebp
inc
into
add
push
pop
lods
jae
aam
dec
adc
adc
dec
lahf
push
enter
incl
jo
mov
je
push
xor
sarl
jbe
cli
sbbb
xor
xchg
push
xchg
pop
dec
and
push
daa
aam
or
push
rcrb
inc
sub
outsb
cmp
add
cmp
js
jg
sarb
mov
or
cmp
jo
pop
gs
or
push
add
cmp
dec
fst
jb
and
inc
ss
mov
aaa
dec
sub
pop
rolb
sub
inc
jns
push
out
cltd
movsb
cmp
cld
mov
enter
fcmove
jne
pop
cmp
inc
jmp
sub
add
rcr
popf
push
inc
mov
mov
sbb
or
or
or
imul
sbb
or
mov
je
adc
fdivrp
mov
cmp
jb
cmp
ja
add
cmp
adc
notb
loopne
or
shll
leave
adc
pop
adc
add
jl
les
je
adc
mov
mov
shll
push
push
and
push
mov
sub
aam
fcmovu
mov
sti
aas
cmpsb
mov
mov
push
movb
jmp
or
inc
sbb
aaa
scas
dec
shrb
pop
sub
sub
mov
or
popf
inc
push
inc
add
xor
add
mov
xchg
and
js
xor
pop
mov
ljmp
mov
push
sub
push
mov
jbe
inc
jb
mov
fdivrl
dec
push
andb
sbb
cmp
into
push
add
add
add
cmp
add
fwait
mov
xchg
cmpsb
push
imul
jmp
lcall
inc
imul
pop
pop
xchg
lea
sar
dec
ja
ja
dec
movswl
xchg
inc
stos
cltd
lods
fildl
es
dec
mov
lods
mul
mov
cmp
mov
je
inc
call
rcrl
adc
adc
jmp
sub
addr16
xor
and
mov
push
loope
stos
or
jb
jl
pop
mov
decl
jle
repnz
mov
adc
adc
mov
mov
mov
and
scas
std
and
lea
inc
xor
lods
push
cmpsl
add
into
sahf
cmpb
mov
js
cmp
idivl
hlt
xchg
icebp
iret
leave
out
mov
inc
call
jnp
ljmp
loope
rorl
add
and
lea
rolb
loop,pn
sub
sahf
inc
mov
push
lea
xor
sub
pushf
or
outsb
stos
fcoml
imul
add
movsb
pop
sahf
push
pop
xor
cmp
lods
shll
inc
insl
pusha
shrw
cmpsl
insb
xchg
mov
mov
pop
push
lcall
and
cmpsl
jne
rorb
addl
decl
popa
add
rolb
rol
nop
popf
loope
pop
or
and
rorb
lods
sti
sub
sbb
push
lret
rcrl
inc
mov
js
mov
jle
int3
jg
neg
shrl
loope
shr
or
mov
cltd
rcrl
dec
mov
jp
mov
lock
dec
and
jnp
repnz
jb
div
add
inc
pop
sahf
cmpsl
cli
div
rcrl
pop
js
jbe
mov
lcall
fcmovb
test
pop
test
add
or
cli
adc
and
sub
scas
mov
dec
aas
sbb
cmp
mov
push
fidivl
aad
mov
fldenv
enter
jg
or
lret
enter
rcrl
mov
in
sbb
push
sbb
dec
scas
inc
repnz
push
push
sbb
loop
out
inc
arpl
sahf
jge
out
mov
add
enter
imul
fwait
sbb
aam
daa
adc
mov
push
cli
or
jp
jae
dec
mov
shlb
fdivrs
aam
xor
jbe
dec
test
xchg
jge
adc
push
mov
ret
add
mov
adc
dec
xor
fmull
or
sub
add
add
mov
add
add
insl
test
sub
int3
jg
add
out
add
xchg
add
add
inc
adc
xor
adc
jg
or
xor
enter
lock
inc
mov
stc
jge
add
mov
nop
mov
movsb
jmp
add
pop
add
jne
jae
xchg
pop
fnsetpm(287
loopne
sub
and
pusha
mov
test
add
sbb
sub
xor
insb
sbb
div
mov
adc
inc
add
inc
mov
stos
ljmp
add
pop
outsb
call
xchg
sub
mov
mov
mov
and
rcrb
jb
cli
pop
inc
sarl
fsubrl
fdivs
mov
and
imul
mov
imul
cs
dec
loopnew
fmuls
leave
outsb
pusha
lea
push
and
mov
push
in
out
add
neg
movsl
out
jbe
in
pop
sti
add
lock
sar
sub
ja
into
inc
les
enter
xor
push
sbb
rclb
jbe
movsb
clc
lock
inc
dec
enter
fnsave
mov
sahf
mov
and
dec
int3
push
add
test
call
add
xor
add
add
sub
or
into
or
mov
inc
ljmp
jmp
mov
rcrb
jmp
cmp
jge
or
lahf
sub
cmpb
or
add
dec
cmp
imul
inc
dec
add
add
fadds
inc
inc
mov
call
ret
jp
jne
dec
sarb
or
adc
cmp
in
out
mov
mov
lret
mov
add
push
mov
nop
adc
test
mov
mov
mov
or
cmpsl
mov
dec
adc
and
ret
lcall
add
push
mov
mull
or
push
push
pop
rorb
jne
or
hlt
mov
or
add
rcrl
xchg
add
pop
jne
or
push
pop
scas
je,pt
sbb
ret
mov
cld
mov
ret
or
movsl
add
xchg
adc
or
pop
and
add
test
fistpl
mov
mov
iret
xchg
xchg
lret
lret
into
pusha
inc
cli
xorl
and
pop
pop
fidivl
pop
cwtl
cli
mov
ret
xchg
mov
loopne
sahf
inc
ret
or
mov
sbb
loopne
add
push
rolb
imul
or
or
jo
dec
push
add
add
push
gs
je
das
push
mov
jae
mov
pop
or
pop
add
insl
add
adc
cmp
jne
and
mov
loope
test
add
es
out
and
push
cmpb
cmc
or
ret
imul
jns
inc
push
jo
loop
clc
mov
mov
test
sbb
shll
push
scas
orl
mov
inc
subl
add
movb
daa
mov
loopne
mov
rorb
xchg
lock
loopne
sbb
repnz
test
adc
int
add
or
adc
into
mov
xchg
into
mov
mov
sbb
and
sbb
leave
repz
inc
jg
into
into
dec
inc
or
adc
sarb
push
pop
loopne
ficoms
pop
or
cwtl
insl
test
or
sbb
stos
push
jmp
and
and
push
fs
mov
pushf
hlt
add
leave
sti
cmp
out
adc
push
into
enter
movsb
and
mov
into
mov
and
mov
jp,pn
and
cmpsb
leave
adc
sub
lock
roll
aad
mov
cmpsl
fsub
movsb
lret
ljmp
mov
out
adc
cmp
pop
mov
add
loop
cmpsl
cmp
loopne
mov
lahf
xchg
mov
or
enter
xor
scas
sub
sub
push
lock
scas
outsb
pusha
outsl
adc
rcrl
in
ret
jl
add
testb
add
je
jnp
sbb
cs
add
test
jle
rclb
sbb
push
nop
insb
jno
aaa
xchg
clc
das
sbb
je
dec
mov
mov
jb
outsb
cmp
je
mov
or
mov
repnz
pop
adc
jg
or
or
cmp
jbe
dec
sbb
cmp
sub
jmp
push
mov
movsl
sbb
sub
fisubrl
push
lods
add
push
leave
mov
mov
mov
ret
mov
into
das
add
stos
les
and
in
and
inc
popa
test
dec
aam
add
scas
mov
fcompl
adc
loopne
jp
or
cmp
add
scas
pushl
mov
and
push
push
mov
push
mov
aam
movsb
mov
cltd
fsubs
fmul
orb
or
pop
cmpl
ret
sahf
mov
lret
xor
jb
pop
pushf
push
rclb
cmpb
or
aam
loope
movsl
ljmp
insb
or
fisubrs
sub
popf
inc
push
aaa
sbb
dec
js
add
mov
movsl
mov
or
pop
cmp
test
stos
add
popa
in
sub
mov
clc
xchg
pop
aaa
test
cmp
lock
pop
stos
sahf
mov
cs
mov
les
bound
dec
sub
adc
fwait
in
in
fsubp
adc
xchg
mov
loope
aaa
ljmp
lods
xchg
push
pop
mov
add
call
xor
push
ret
or
mov
push
jge
pushf
inc
push
dec
adc
inc
cmp
pop
test
adc
or
mov
in
jge
cmp
adc
icebp
mov
dec
loope
gs
sbb
popa
in
je
in
push
push
add
clc
cli
sbb
add
jg
mov
jp
fadd
js
movsb
xchg
sti
jo
mov
addl
pop
mov
push
lods
dec
loop
rol
xor
addr16
xchg
enter
insl
cmpsl
mov
add
loopne
push
pop
nop
out
push
out
mov
test
cmpsb
mov
push
jle
push
jmp
dec
fs
movsb
fisttps
fucomp
add
jp
cmp
jmp
int
subl
push
js
push
adc
add
push
sbb
adc
xchg
aam
loopne
sbb
inc
insl
push
test
pushf
iret
pop
cmp
push
cmp
push
mov
sub
add
loop
sub
sbb
add
push
es
dec
xor
shl
decl
jno
lods
push
jg
scas
sbb
or
sbb
out
btc
aas
pop
cmp
pop
mov
xchg
add
push
iret
imul
pop
mov
cs
inc
and
test
inc
fs
and
repnz
loop
cmp
pop
inc
push
sbb
mov
cmpsb
js
pop
syscall
push
or
sub
fcomps
xchg
gs
jmp
lods
loope
mov
cld
ret
add
in
pop
dec
pop
js
les
invd
loope
nop
sahf
test
push
sub
and
movsl
loopne
call
cmp
and
jmp
loopne
pop
mov
sbb
pop
clc
addr16
xor
outsb
pop
rorb
dec
in
push
push
xlat
mov
inc
jle
mov
test
push
jmp
inc
adc
popf
mov
push
xor
add
clc
cltd
mov
push
add
or
jnp
mov
sar
xor
sbb
dec
pop
push
inc
sub
pop
and
mov
and
pop
mov
adc
xchg
pop
inc
sub
rol
push
sarl
stos
aas
test
ret
cmpsl
or
add
mov
es
sub
sahf
xor
shlb
insb
add
jecxz
shrb
and
adc
test
dec
or
cltd
push
or
add
push
inc
rcrl
test
pusha
mov
lods
push
mov
sbb
push
stos
test
int
add
shlb
ds
jmp
mov
sub
pop
jecxz
sbb
mov
push
sub
or
insl
cld
mov
loopne
movsl
jnp
rcrl
xor
and
andl
jo
jo
mov
roll
pusha
imul
inc
add
jmp
stos
sub
cld
mov
inc
or
or
adc
add
pop
or
jmp
in
mov
cmp
arpl
adc
scas
sub
fstps
adc
mov
inc
das
cmp
and
sbbb
pop
adc
pusha
mov
push
mov
xchg
mov
mov
xchg
sahf
adc
in
sub
sbb
mov
call
or
cltd
push
mov
aas
push
sbb
jo
popf
inc
push
xchg
xchg
xchg
rolb
sbb
pop
addb
add
aam
pusha
loopne
dec
enter
bound
push
popa
sub
mov
xor
subb
push
mov
or
xchg
shr
std
data16
xor
inc
and
push
and
nop
insb
jmp
push
pop
loope
pop
mov
adc
imul
xor
stos
pusha
jne
pop
sub
xor
or
popa
xor
sub
push
arpl
imul
fidivrl
flds
ja
mov
jo
fsubrp
sub
add
inc
imul
add
jb
xchg
jge
cmp
sbb
loopne
les
jg
sub
inc
mov
sbb
cmp
ja
jbe
inc
pusha
or
jge
das
push
aaa
pop
in
xlat
cwtl
xchg
lret
pushf
xchg
pop
add
mov
pop
sbbl
push
call
jp
repnz
test
jg
adc
in
ds
shl
lcall
xchg
icebp
imul
shll
inc
jmp
mov
cmpl
lock
mov
fadds
add
jbe
mov
mov
lret
push
cwtl
inc
clc
rcrb
adc
in
ljmp
and
jmp
adcb
inc
lea
subb
stos
inc
or
push
outsb
sub
or
fs
cmpsl
and
pop
fs
int
sub
test
or
xchg
mov
dec
xlat
sub
cld
push
inc
inc
loopne
pop
cmp
cmp
cmp
mov
data16
jmp
mov
mov
sbb
cmpsb
mov
hlt
xor
adc
jg
mov
push
cld
jae
push
cmpsb
xchg
or
imul
cmp
bound
mov
jp
ja
ret
inc
xor
mov
mov
dec
testl
imull
and
xchg
mov
in
sbb
es
cltd
and
jmp
testl
ret
or
inc
loop
sub
mov
ret
arpl
cmpsb
loopne
test
popf
ds
movsl
mov
adc
and
and
adc
inc
sbb
push
mov
test
lds
std
data16
rcll
sbb
sub
mov
mov
push
add
sbb
test
pusha
inc
stos
bound
mov
adc
or
popf
xchg
add
js
sub
addb
push
add
add
push
pop
cmp
stc
inc
dec
sbb
cmp
loop
es
sbb
sbb
lcall
mov
loopne
test
push
in
push
sbb
fistl
push
mov
push
or
pop
jg
cli
mov
sub
jmp
pop
jl
or
mov
repnz
mov
xchg
addl
rolb
mov
loopne
and
add
sbb
test
sbb
int3
add
pop
stos
test
jp
les
sahf
sbb
scas
mov
mov
shl
aaa
loope
fsubs
insl
cmp
pop
inc
rclb
js
test
push
lods
push
xchg
sbb
jmp
loope
mov
and
cltd
ret
cmpl
dec
cmpsb
pop
adc
cmp
jae
inc
mov
lret
cmp
adc
cmp
shlb
or
out
mov
xor
cmp
insb
arpl
hlt
add
mov
jmp
pop
pop
push
xor
nop
inc
outsb
fadds
jae
push
pop
outsb
pop
mov
shl
movsl
push
inc
cmpl
sub
cmp
femms
pop
push
dec
ret
movsl
and
out
rcrb
sbb
lods
lock
inc
scas
inc
fisttpl
sub
data16
and
fcomps
or
xlat
inc
in
jmp
inc
dec
add
adc
or
push
test
mov
dec
fiaddl
or
xchg
addb
shrb
ja
clc
add
fnsave
sbb
push
add
mov
sub
and
adc
insb
inc
data16
push
xorb
cmp
test
je
cmp
aam
adc
lods
fnstenv
push
xchg
and
lds
cmpsl
test
cmp
or
cltd
mov
xchg
je
mov
cltd
neg
add
cmp
movsl
xor
arpl
add
inc
jb
pop
mov
push
ss
ss
add
jno
push
popa
sbb
std
repnz
sar
sbb
rolb
push
adc
and
cmp
aas
xor
xor
dec
sbbb
icebp
jne
push
mov
jo
fcoms
jmp
xor
pop
add
cmp
add
pop
je
adcl
push
xchg
lret
hlt
or
push
sub
mov
std
pushl
lds
enter
or
inc
mov
icebp
mov
cli
arpl
mov
and
add
sbb
stos
add
xlat
xchg
jle
in
xchg
orb
lea
lahf
lock
or
inc
aam
or
je
inc
movsb
add
insb
inc
mov
rolb
pusha
hlt
push
rorb
cli
push
jb
bound
mov
cs
mov
loopne
jl
mov
adc
fwait
orl
cmp
cwtl
sub
add
and
rcrl
into
sbb
pop
and
mov
jb
addl
pop
sbb
or
adc
and
sub
jle
stos
insl
inc
push
jl
enter
xor
cmp
ret
sub
ljmp
sub
scas
xor
mov
insl
cltd
das
or
add
adc
add
mov
ror
enter
pop
jecxz
rorl
stc
jbe
sbb
mov
es
add
add
and
or
mov
push
mov
jnp
mov
mov
mov
mov
outsb
aam
lods
lahf
ss
adc
jle
lahf
jbe
xchg
les
sub
es
data16
adc
sub
sbb
xor
jmp
js
or
and
jg
dec
inc
in
jg
add
mov
add
adc
imul
inc
pop
add
repz
test
mov
or
negb
dec
hlt
adc
jnp
pop
jle
out
call
lea
add
in
clc
and
lods
mov
and
sbb
pop
add
push
jge
call
sbb
adc
orl
jg
jmp
adc
lods
pusha
add
mov
and
es
or
adc
cmp
loopne
push
popf
out
dec
fadds
cmpsl
push
jnp
setle
gs
lret
pop
pushf
and
mov
jle
push
jae
scas
addb
or
push
mov
push
inc
or
lock
inc
nop
gs
sub
stos
add
mov
inc
lret
pop
xchg
sub
sti
imul
loop
insb
and
lcall
add
sub
fidivrl
sbb
cwtl
arpl
pop
mov
pop
clc
aaa
enter
je
cmp
adc
cmp
jb
ret
iret
mov
testb
out
inc
push
rcrb
add
sub
pop
mov
jnp
fmuls
jmp
inc
sbbl
je
cmp
jo
inc
aad
jns
jb
cmp
jbe
clc
adc
js
push
push
or
outsb
cmpsb
lock
in
push
rcll
xor
rcl
call
and
ljmp
shrb
cmc
and
or
push
mov
push
je
mov
add
fidivrl
shlb
pop
es
sbb
sahf
test
imul
pop
lret
imul
mov
pop
sti
subb
push
xchg
mov
mov
xlat
in
push
mov
sbb
sub
add
add
fstl
hlt
lods
arpl
aad
cli
mov
sbb
pop
shll
and
inc
stc
aas
add
adc
add
add
aas
xchg
bnd
jne
add
xchg
sbb
in
add
and
aas
xor
pop
enter
fisubrl
aaa
pusha
xor
adc
mov
cmp
adc
push
dec
shlb
mov
add
lcall
andb
je
pop
and
fld
fnstenv
fists
fildll
mov
dec
lock
jbe
pop
idivb
jmp
cwtl
mov
xor
push
inc
rolb
popa
loop
jmp
cmp
enter
fidivrl
adc
ret
fstps
int3
adcb
inc
pop
or
mov
and
in
pusha
xchg
inc
adc
xchg
mov
xchg
nop
mov
mov
mov
loope
clc
cmp
pusha
leave
xor
xchg
xor
jne
ret
jg
or
add
fcompl
adc
addr16
or
insb
mov
dec
sarl
xchg
lock
pop
lock
insb
push
les
nop
sub
das
nop
mov
jo
add
xchg
or
adc
mov
sbb
or
dec
xchg
mov
dec
jnp
xchg
call
dec
push
cltd
fmuls
jne
shlb
sbb
bound
cld
fmuls
fs
int3
pusha
cld
xchg
cld
push
cmp
push
jne
add
fcmovb
sub
mov
sub
int3
push
ljmp
popa
in
adc
add
pop
setne
or
dec
xchg
mov
je
roll
xchg
push
jae
rcrl
enter
add
inc
lahf
iret
inc
push
jb
xor
dec
in
or
enter
loopne
adc
ljmp
jge
or
lock
jp
mov
ret
jnp
adc
add
push
sbb
mov
dec
lock
insb
adc
pop
in
or
xchg
cwtl
repnz
stos
mov
clc
adc
ret
fsubr
inc
in
bound
dec
pop
mov
call
add
adc
xchg
adc
rorl
inc
push
js
or
sub
cli
xor
lods
jbe
fcomps
xor
popa
out
or
sbb
inc
fadds
cld
xor
inc
cwtl
inc
push
movsb
call
in
fadds
mov
int3
movsb
lcall
js
add
mov
movsl
cmp
pop
enter
pop
cmp
jg
rorl
mov
call
cmp
nop
adc
les
xchg
jbe
test
and
rclb
stos
in
jb
lcall
stos
push
ret
jb
cmc
inc
adc
xor
adc
sbb
mov
pusha
fs
dec
es
push
cltd
fs
jl
mov
addl
adc
jo
xor
fstpt
lea
xchg
out
mov
sub
adc
mov
xchg
shlb
roll
popf
mov
push
adc
icebp
jmp
xor
push
lods
xchg
fxch
sahf
mov
sbb
xchg
inc
cli
sub
ja
and
mov
xor
pop
shll
add
sti
push
and
jl
push
push
fcmovnb
add
jle
cmp
mov
cwtl
add
les
cmp
jbe
clc
add
xor
sub
and
or
int3
orb
icebp
outsb
inc
sbb
cmpb
enter
add
sbb
aam
push
jo
insb
adc
xchg
in
sbb
or
jge
sub
fidivl
insl
mov
popf
lock
lea
out
scas
or
sub
mov
sbb
orl
mov
in
sbb
jp
and
adc
dec
or
mov
fs
sbb
inc
cmpsb
in
sub
in
sbb
and
dec
rorb
inc
jbe
fsubrl
jle
jne
jne
test
in
push
jne
xlat
sbb
cltd
imul
fsubr
aam
and
mov
sub
inc
and
dec
mov
clc
pop
in
adc
adc
add
sbb
dec
push
andb
ljmp
in
jnp
push
pop
push
cmp
and
imul
je
fadds
imul
roll
cmpsb
push
xchg
fisttps
pusha
jp
push
incl
adc
ret
fists
pop
cmpsl
push
call
jl
lahf
inc
test
movsb
fs
pop
xchg
adc
push
es
cmp
dec
pop
dec
fsubl
aas
pop
add
mov
push
sub
mov
and
dec
fs
hlt
mov
or
or
clc
lods
add
mov
cwtl
adc
push
jno
mov
jne
jg
int3
and
and
popf
jge
cmpsl
ss
popf
push
and
dec
adc
popa
mov
xchg
add
lods
add
stos
and
sbb
in
add
loopne
push
adc
adc
aad
and
or
mov
sbb
adc
insb
and
and
loopne
insb
mov
or
in
or
dec
jb
or
add
and
sub
dec
push
ljmp
pop
dec
pop
sub
out
lea
test
fisubrs
sbb
fiaddl
mov
push
je
fdivr
add
mov
pop
shll
or
test
stos
push
jb
push
pusha
and
xlat
faddl
dec
mov
jns
movsbl
xlat
and
clc
inc
mov
ret
test
jns
pop
fcompl
jbe
pusha
add
cmp
pop
cmp
and
adc
in
pop
shll
fadds
add
sbb
fcomp
aam
fs
es
fmull
inc
cmpsb
fmuls
das
faddl
or
jns
sti
call
sub
es
aam
fs
inc
fcom
sub
movsb
mov
xchg
sbb
inc
mov
or
jl
sbb
mov
cwtl
je
sti
daa
jnp
ret
fsubrl
scas
fwait
sbb
leave
sbbb
sub
movsl
test
sti
adc
jbe
mov
loop
pop
or
movsl
aam
xchg
push
insb
sub
xor
sbb
dec
or
or
pop
jb
and
or
pop
leave
and
cmp
jo
loopne
enter
jb
xor
or
outsb
push
adc
add
and
test
cmp
sub
or
or
sub
or
mov
adc
insb
int
inc
cwtl
and
cwtl
adc
sub
nop
test
testb
adc
push
ror
xor
aaa
adc
imul
mov
popa
in
jnp
cmp
sub
sbb
ret
sbb
push
dec
push
dec
sub
mov
and
sub
sti
fadds
fdivs
movsl
movsb
adc
inc
push
pusha
sub
les
and
push
movsb
sub
add
adc
test
rclb
sti
mov
call
insb
mov
xchg
aam
jnp
movsb
in
sub
and
sbb
leave
ret
adc
adcl
pop
pop
sub
jge
das
rcrb
ljmp
mov
sbb
test
sbb
mov
test
arpl
leave
push
pushf
or
jno
insb
adc
sub
jmp
push
lds
push
mov
push
mov
scas
xchg
shrb
pop
cld
inc
cmpsb
or
jmp
nop
ret
ja
das
sbb
iret
fs
mov
addb
das
and
xchg
ljmp
jno
dec
pavgb
xor
push
mov
arpl
enter
orl
xchg
test
inc
or
adc
sbb
cmp
or
or
fs
adc
cmp
dec
adc
push
jb
xor
pusha
xor
or
xor
mov
lods
in
pop
and
dec
inc
xor
test
mov
fisubrl
cs
aad
cs
stc
xchg
mov
loopne
mov
sarl
inc
fs
push
and
fmuls
dec
xor
mov
je
mov
roll
jne
mov
push
test
mov
xor
es
pop
into
mov
repnz
add
mov
mov
inc
xor
cmpsb
add
insl
lock
dec
inc
fmul
jne
or
adc
and
or
and
add
orb
xor
mov
push
mov
pop
cmpsl
mov
cwtl
in
scas
nop
lock
inc
dec
mov
pushf
aaa
and
cmp
stc
cwtl
and
lea
sbb
leave
adc
or
lock
sub
ss
add
loope
jno
aam
inc
adc
mov
imul
mov
sbb
and
fimuls
int3
pslld
enter
in
mov
test
sbb
inc
int3
and
maxps
iret
enter
adc
mov
and
mov
in
fistpl
jmp
adc
and
adc
and
add
fsubl
insb
mov
add
lods
push
loop
push
fadds
inc
jmp
enter
out
adc
repz
push
and
pop
cmp
sbb
in
loopne
xor
call
xorps
ljmp
ret
and
cmp
loop
lcall
xor
movaps
fcoms
aam
adc
sub
mov
les
rcrl
mov
call
inc
rcll
cmpb
mov
cmp
cwtl
adc
xchg
nop
pushf
adc
nop
mov
lret
test
inc
adc
fcmovb
mov
xchg
sub
enter
inc
clc
xor
dec
push
faddl
aaa
test
test
sbb
mov
inc
mov
dec
popf
and
lods
mov
scas
sbb
push
and
movsb
fdivr
loopne
movsl
xor
rcrl
sub
mov
fnstcw
repz
shl
fsubs
inc
sub
sbb
imul
call
in
aam
orb
fldt
mov
or
inc
testl
stos
pop
fcoml
pop
add
pusha
jmp
lock
aas
dec
add
mov
loope
enter
sbb
inc
push
mov
cmp
sub
repnz
adc
jp
add
cwtl
testl
adc
or
xchg
xor
xchg
mov
dec
mov
jo
xchg
cmp
ret
dec
inc
ss
adcl
lea
adc
mov
cmp
lea
mov
cli
notb
cmp
xchg
mov
or
inc
pop
das
test
das
mov
mov
mov
leave
cmp
lock
dec
jns
shrl
dec
or
arpl
push
mov
xor
enter
mov
jnp
sub
jne
dec
lock
pop
popa
test
test
sbb
rorb
popf
cmp
sahf
xor
add
mov
cmp
loope
nop
inc
data16
sti
or
aad
daa
movsb
pop
push
call
dec
inc
sbb
mov
mov
popa
adc
inc
cmc
mov
sbb
or
sbb
adc
fwait
mov
mov
jb
test
call
push
in
or
flds
and
pusha
cmp
jl
inc
sub
add
nop
and
insb
and
icebp
inc
and
inc
in
movsb
sbb
lahf
call
dec
xchg
imul
adc
insl
int3
inc
aam
or
pop
mov
addb
push
aam
pop
or
pushf
and
inc
push
mov
jnp
dec
inc
push
jb
in
loopne
inc
adc
xor
test
cmp
dec
repz
enter
rorb
and
jbe
popf
ja
push
adc
clc
rolb
xor
movsb
lea
adc
fdivrl
add
add
bound
insl
add
shrb
pop
fisubrl
shlb
push
pop
int3
gs
sub
adc
pop
in
cltd
test
jge
daa
in
inc
aad
aam
dec
rcrb
and
mov
in
dec
push
cwtl
gs
ret
les
mov
shlb
les
lds
rol
xor
divl
lock
nop
inc
in
pop
gs
adc
pop
sbb
stc
adcl
rorb
add
push
xchg
pop
rclb
push
xor
or
addb
in
sub
in
mov
ja
inc
adc
push
push
cmpsl
aad
pop
dec
insl
sbb
jne
and
fiaddl
mov
lods
in
test
jne
cmp
test
lds
aas
mov
mov
ret
push
shll
dec
xchg
or
fiaddl
in
sbb
cltd
pop
sub
test
and
aam
add
or
push
lods
fs
and
gs
mov
dec
outsb
pop
add
sahf
xor
fsubl
rcrb
push
and
mov
dec
test
and
sbb
aad
enter
in
scas
in
int
leave
pushf
cwtl
xor
fsubs
cmp
inc
lcall
mov
pushf
mov
sbb
dec
insl
cmp
adc
stos
push
iret
testl
or
and
xchg
add
mov
lods
fadd
lods
sbb
mov
or
rcl
leave
push
roll
xor
inc
and
mov
js
adc
push
fbstp
add
adc
mov
inc
mov
cmpsb
pop
xchg
adc
mov
js
pop
or
add
sbb
adc
sub
imul
mov
gs
and
jo
adc
leave
and
push
jb
xor
push
or
lods
push
adc
jno
lods
enter
pop
int3
xor
push
jns
xor
sub
mov
movsb
jge
add
mov
adc
mov
test
aam
iret
or
jl
mov
call
push
rcl
dec
push
shlb
je
leave
aad
sub
scas
fsub
mov
iret
fcoms
or
push
inc
push
mov
push
sbb
sar
sub
pop
js
cmc
push
lods
call
xor
rorl
inc
outsb
and
fs
sbb
insb
xchg
cli
jo
adc
mov
jge
ficoms
add
push
fs
fnstsw
xor
insl
add
mov
push
pop
push
out
push
movsb
adc
jae
rcll
and
mov
lret
pop
inc
adc
test
or
dec
jno
jo
push
pop
rcrb
push
pop
enter
and
shlb
mov
jp
idivl
subb
xchg
jp
or
leave
add
insb
adc
mov
sti
fs
and
adc
cltd
push
cltd
fs
sbb
cltd
fs
and
cmpsb
pusha
xchg
dec
sub
xor
daa
fmuls
push
adc
and
mov
inc
ret
or
cmp
shrl
jne
mov
fwait
inc
enter
push
sbb
jbe
movsb
cmp
inc
or
stos
inc
pop
add
scas
mov
dec
and
mov
dec
je
lea
inc
add
movsb
add
mov
pop
pop
sbb
and
inc
pop
or
or
jne
inc
or
jge
adc
inc
fs
outsb
push
in
lods
test
xor
sbb
push
or
ret
sub
int3
ja
adc
fiaddl
bound
in
pop
in
mov
jle
add
and
sub
push
es
and
mov
cmpsb
movsl
sbb
enter
jle
add
ret
cmp
add
sbb
pusha
mov
aas
or
inc
int3
dec
les
les
int3
rcl
pop
stc
mov
cs
jecxz
push
mov
daa
fsubs
repz
xor
sbb
jns
imul
inc
mov
and
shrl
ret
stos
movb
rcrb
adc
mov
or
inc
lcall
sbb
jmp
mov
cmpsb
inc
in
fildll
jbe
lods
xchg
mov
or
call
nop
add
jecxz
je
or
popl
and
mov
loopne
mov
cmp
movsb
ja
mov
aaa
addr16
fdivs
rorl
dec
mov
sub
fs
cs
ja
dec
xor
scas
mov
inc
ret
mov
or
mov
test
test
lcall
int
imul
mov
shll
xchg
mov
ret
push
mov
mull
xor
add
mov
enter
das
push
inc
call
xchg
out
add
aam
cwtl
lods
and
sti
sti
ret
pop
push
addr16
scas
or
fdivl
cwtl
cwtl
and
sbb
insb
jbe
mov
fdivs
push
daa
adc
mov
pop
lods
jo
push
leave
fcoms
sub
mov
sbb
enter
xchg
lea
or
pusha
inc
xchg
clc
push
sbb
sub
addr16
xorb
test
fisubrl
in
inc
mov
jmp
dec
push
cwtl
sbb
leave
xor
in
jns
inc
sub
andb
add
lea
pop
nop
pusha
rcr
mov
je
lock
ret
sbb
xor
push
dec
xchg
add
lods
in
ja
add
imul
rorb
aad
push
add
inc
mov
and
inc
arpl
xor
jg
sub
in
mov
cmp
add
lods
loopne
sbb
mov
roll
inc
add
mov
or
and
pop
or
repnz
daa
jg
call
or
leave
mov
sbbb
fsubr
pop
mov
das
aam
movsb
shrl
mov
stos
sbb
out
lahf
in
mov
mov
adc
pushf
jo
int3
rcrl
inc
add
mov
insl
mov
inc
gs
movsl
mov
shlb
fcoml
inc
aam
mov
imul
push
notb
sbb
outsb
das
push
dec
pop
dec
adc
dec
imul
bnd
mov
pop
rorb
ret
or
add
test
sbb
or
xor
mov
fcomp
adc
lahf
pop
or
and
rorb
or
cmpb
adcb
add
cwtl
mov
add
and
xor
push
test
and
xor
add
and
lods
insb
pushf
or
xor
dec
movsb
lods
add
orb
inc
inc
es
ss
pushf
cltd
fs
dec
insb
lods
push
fs
dec
mov
dec
es
push
jl
dec
es
fs
mov
cwtl
nop
mov
fs
dec
mov
dec
and
cmp
sub
in
decb
imul
out
test
fcoms
mov
enter
mov
ljmp
cltd
bndldx
mov
mov
stos
sbb
add
mov
sbb
pop
xor
jl
test
mov
enter
movsb
jb
and
and
cmc
push
cmp
aam
sub
fs
fsubrs
in
mov
adc
leave
mov
mov
gs
lods
mov
in
addb
and
pushf
js
pop
xchg
xchg
xchg
fcmovnbe
bswap
les
lods
movsb
pushf
sub
mov
xchg
mov
test
and
fcoml
pop
sbb
pop
imul
xchg
mov
pop
mov
cmc
push
jbe
xor
push
in
orb
imul
sub
dec
inc
test
xchg
push
lods
xchg
inc
jmp
cmp
stos
inc
sti
xor
or
pop
ja
inc
lea
gs
aam
adc
and
dec
adc
ret
inc
jo
jmp
sbb
mov
pop
add
movsb
and
cs
xchg
sub
xchg
shlb
sub
cmpsl
test
sbb
add
pusha
adc
into
fwait
movsb
pop
stos
imul
mov
pop
dec
push
lods
push
add
pop
sub
and
ror
enter
mov
inc
mov
xlat
lret
xor
and
movsl
dec
repnz
idivl
fs
push
movsb
dec
adc
sbb
adc
cmpsb
or
int
jecxz
in
dec
dec
dec
dec
mov
or
push
mov
dec
loopne
shll
sub
dec
dec
mov
fsts
shll
sub
adc
flds
mov
and
adc
push
insl
dec
add
adc
mov
cmpl
push
fildl
pop
shlb
push
adc
sub
mov
adc
fnsetpm(287
clts
and
xchg
fidivrl
outsl
fadds
push
loop
adc
dec
rol
ret
mov
and
rcrl
push
adc
sub
sbb
addr16
sub
jb
nop
mov
nop
ja
or
icebp
add
cltd
ss
fiadds
mov
pop
pop
push
mov
imul
das
xchg
add
fadd
sbb
xor
sbb
sbb
cltd
mov
adc
and
rclb
fmul
les
mov
stc
les
or
mov
enter
test
add
and
fs
imul
ja
and
rolb
aas
xchg
xor
aas
mov
orb
inc
mov
scas
sub
dec
mov
or
pop
mov
ja
jle
fwait
sbb
stos
sub
and
movsb
add
imul
or
push
les
in
nop
inc
add
mov
and
repz
sub
jno
adc
mov
das
insb
mov
imul
jl
or
jge
mov
xchg
nop
movsb
xor
pop
lods
adc
pop
sahf
pop
inc
mov
xchg
subb
mov
std
push
mov
adc
jo
lock
adc
sub
pop
adc
or
movsb
add
add
in
int
movsb
mov
lea
fwait
sbb
dec
or
sub
repnz
fisubl
adc
mov
sub
shrb
rol
sub
cmp
jg
push
dec
outsb
test
in
sti
jo
popa
dec
leave
fists
dec
jb
and
and
adc
sub
movsb
addb
les
push
sub
clc
mov
push
pop
scas
cltd
add
icebp
mov
clc
xor
xor
repz
adc
cmpb
mov
lea
rorb
pop
cwtl
mov
adcl
insl
nop
inc
jo
sub
ret
in
dec
sbb
push
bound
add
cmp
jo
enter
imul
int3
pop
call
insl
inc
push
push
sub
movsb
lods
sub
jno
inc
pop
mov
mov
or
sbb
pusha
inc
fcmovbe
out
mov
pop
cltd
aas
out
sbb
or
sbb
or
jns
ljmp
rorl
mov
sbb
pop
dec
and
mov
test
sub
rorl
cmp
inc
shrb
and
cltd
mulb
adc
and
xor
xor
pop
xchg
mov
and
orl
or
push
jno
push
inc
mov
jb
adcb
inc
int
call
or
inc
push
fistl
xchg
in
pop
mov
adc
mov
adcb
mov
sub
mov
enter
pop
mov
sub
lods
imull
push
jo
pop
dec
push
cmp
xor
addb
adc
adc
pop
and
dec
adc
inc
insl
test
adc
mov
lods
inc
sub
lds
and
xor
add
subb
and
dec
pop
add
test
xor
and
ret
test
mov
add
nop
repnz
push
mov
xchg
jge
adc
sbb
ret
xor
std
add
xor
xor
fsubrl
arpl
sub
add
xchg
adc
push
inc
push
and
insl
mov
push
mov
lcall
lods
jbe
add
dec
cli
inc
adc
sbbb
sbb
inc
dec
ljmp
dec
rclb
scas
test
lcall
inc
sahf
lods
cmp
je
movb
add
ss
xchg
inc
add
in
lcall
pop
push
xor
push
add
leave
je
js
add
xchg
or
leave
and
mov
jns
xor
lds
nop
mov
out
popf
dec
stos
mov
orb
mov
mov
xchg
sub
xchg
loopne
or
add
ret
int
sub
ret
movsb
mov
bound
sbb
sbb
fidivl
lea
dec
and
cmp
dec
inc
nop
test
mov
fstpl
add
ret
adc
dec
test
sbb
xchg
int3
adc
je
jae
dec
mov
and
sarb
les
add
lods
adc
cltd
cwtl
mov
icebp
adc
mov
andb
lea
xchg
mov
jmp
rolb
stos
dec
cmc
or
or
cmp
fstps
mov
inc
or
mov
add
push
adc
pop
imul
pop
cmp
cmp
and
pop
bound
jge
mov
mov
lock
pop
dec
push
push
and
inc
inc
push
pop
mov
clc
sti
xlat
fisubl
iret
dec
dec
push
cld
in
inc
jo
in
hlt
icebp
inc
ds
jb
add
jecxz
sahf
or
lods
xor
inc
or
lods
or
mov
dec
jb
mov
shrl
sub
addb
add
inc
adcb
sbb
movb
fisubrl
scas
xchg
and
cmp
push
ret
jl
subb
push
rclb
rorb
adc
in
jmp
popf
je
call
pop
mov
and
pushf
stc
loop
pop
mov
mov
daa
add
fs
push
icebp
lock
jecxz
add
xchg
test
rcll
nop
xor
nop
imul
add
hlt
sub
or
out
and
push
xchg
in
sbb
dec
sbb
cmp
in
mov
loop
inc
jmp
cmp
es
xchg
es
or
insl
push
int
mov
jl
std
mov
pinsrw
adc
inc
std
add
add
orb
add
add
out
push
out
or
sahf
out
jl
cltd
scas
rcrb
add
push
aaa
push
jae
jg
jns
add
push
inc
add
push
mov
aas
jbe
fprem1
int3
push
ljmp
inc
aas
dec
pop
inc
add
and
add
incl
orb
jnp
mov
add
adc
mov
rcll
xchg
mov
or
outsl
cmp
adc
jp
lret
pop
mov
incl
nop
add
into
pop
adc
test
dec
testb
push
mov
mov
dec
cld
sahf
or
mov
or
enter
push
jnp
popa
pop
lock
rdpmc
add
invlpg
mov
incl
sub
pusha
mov
pushl
popa
and
insb
outsl
arpl
imul
mov
xorb
sub
popa
arpl
jne
jb
outsb
sti
fisubrl
je
add
das
ss
insl
adc
jnp
subb
inc
outsl
jb
js
je
mov
mov
jae
or
outsl
add
add
add
jge
add
jne
les
inc
cs
mov
jb
and
add
pusha
pusha
daa
add
aaa
or
jl
dec
add
xor
fdivr
mov
inc
push
add
aas
push
add
pop
dec
add
sub
mov
insl
xchg
je
je
and
idivl
dec
fisttpl
out
loopne
mov
insl
push
push
shr
loopne
or
bound
repz
sbb
popa
idivb
xor
insb
jp
fndisi(8087
fisttpll
or
mov
frstpm(287
arpl
lret
aas
rcrb
fisubs
out
outsl
jmp
jo
mov
pop
xor
stos
insl
sub
adc
push
imul
push
cmp
jne
inc
push
data16
xchg
mov
ds
jp
sub
sub
jnp
popa
pusha
sbb
daa
lahf
popa
into
jecxz
adcb
arpl
pop
jnp
inc
or
daa
dec
enter
jbe
fbstp
jge
ja
bound
jnp
ficomps
ficompl
ret
arpl
mov
or
push
xor
sub
mov
xlat
xor
filds
push
jo
scas
das
jb
ret
fiaddl
cs
movaps
pop
or
add
fs
mov
imul
jg
popa
sub
cmp
or
outsl
xchg
pop
push
sbb
lahf
aaa
jg
rclb
pop
dec
iret
push
fists
in
xor
loopne
divl
jb
jne
and
jg
out
sub
xor
stos
bnd
icebp
jbe
push
das
rcrl
jae
shrl
mov
cmp
push
cmp
fistps
outsl
aas
or
arpl
sbb
push
mov
inc
jb
push
xlat
aaa
jge
shrb
jecxz
stos
fs
fidivl
imul
shll
sbb
rdtsc
cmpsl
outsl
loopne
sbbb
sub
pop
xchg
sbb
mov
pop
add
pop
out
jnp
in
pop
insl
lret
je
mov
cmp
addr16
mov
loop
subb
ja
jecxz
push
push
sub
lock
cmp
xor
mov
fldenv
pop
add
mov
or
push
inc
imul
insb
jecxz
push
inc
inc
mov
sahf
adc
das
sbb
testl
fcomps
int
jns
mov
sbb
test
sbb
cmp
das
push
pop
sahf
push
sbb
sbb
repz
cmp
jns
jp
push
cld
js
sahf
out
outsb
incl
clc
mov
addr16
jp
ja
pop
sub
sub
push
push
push
out
mov
fucom
xchg
add
pop
mov
jl
insl
out
xchg
push
or
pop
mov
pop
pop
sti
mov
and
jge
fdivrl
push
xor
mov
and
jns
in
repnz
add
das
das
and
ret
pop
mov
out
dec
ljmp
loope
and
decb
cmc
pop
ret
ret
dec
repnz
jnp
jns
aas
dec
inc
out
pusha
xor
mov
mov
sbb
ds
daa
outsl
jo
mov
dec
and
add
inc
inc
das
pop
mov
ss
imul
iret
jns
rcr
mov
out
and
outsb
sti
adcb
inc
pop
xlat
mov
inc
jae
push
imulb
dec
and
sub
pop
jbe
scas
push
dec
fbld
ds
insl
arpl
mov
mov
xor
es
cmp
cmp
ficompl
sub
fs
dec
and
popf
scas
imul
dec
testb
arpl
bound
dec
outsl
jbe
popa
or
arpl
inc
jo
sub
jne
jne
xor
insb
xchg
outsb
xchg
call
jo
imul
fnstsw
adc
into
mov
jae
xchg
popl
jge
into
jg
addr16
popa
je
jb
xor
mov
jae
push
gs
sbb
idivb
push
jne
dec
outsl
outsb
and
jbe
ja
pop
dec
inc
aas
add
imul
out
dec
or
adc
fistpll
dec
add
insb
jae
push
dec
mov
push
popa
insb
jne
inc
add
mov
add
mov
jmp
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
or
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
insb
jl
test
xchg
pop
pop
pop
pop
pop
or
lcall
arpl
addr16
insl
outsb
outsl
jo
add
jbe
js
jp
jl
jle
dec
adc
fs
lcall
loopne
pop
ret
mov
orb
sar
lret
repz
repnz
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
pop
loope
lds
shrb
outsl
fs
xor
imul
aas
daa
mov
gs
xor
cmp
outsb
bound
add
negl
dec
pop
sbb
icebp
cmp
ret
sub
int3
adc
adc
test
add
add
add
add
adcb
and
push
pop
push
sbb
sbb
hlt
and
add
pusha
fidivrl
into
push
add
inc
add
or
fucomip
into
add
sbb
addb
add
xchg
test
add
neg
cmpsb
flds
push
cmpb
push
and
sub
jb
int3
push
je
fcmovne
jo
add
nop
push
js
and
das
push
outsb
imul
mov
push
jo
add
add
aam
pop
adc
fcmovnb
lock
sbb
add
lea
leave
and
nop
and
xchg
xchg
repnz
in
add
outsb
pusha
sub
hlt
inc
scas
jmp
lret
stos
aad
aad
add
lods
mov
enter
pop
scas
xlat
jmp
push
sbb
cmp
cwtl
xchg
pop
sbb
push
inc
sub
cmp
rdtsc
ss
jmp
dec
inc
je
test
adc
notl
fs
push
mov
xchg
je
cs
jae
rcr
add
xchg
je
outsb
data16
push
add
mov
ss
out
je
xor
xchg
outsl
push
push
xchg
daa
pop
lea
inc
sti
iret
mov
outsl
js
push
xchg
fstpt
xchg
push
and
insl
jo
jo
and
and
ficoml
shlb
aaa
insb
les
dec
imul
mov
mov
inc
cmp
dec
inc
jb
jns
daa
fwait
ret
cmpsb
and
ss
jns
lahf
mov
pusha
je
and
imul
mov
and
cmp
mov
inc
pusha
fsubrl
push
jbe
mov
fcmovnu
cmpsb
fdivl
or
jb
and
mov
xchg
pusha
inc
jbe
push
mov
lahf
fs
insl
es
adc
and
lods
jp
pusha
xchg
sbb
mov
pushw
popl
sbbb
mov
jp
cmp
push
pop
or
push
jo
sbb
daa
mov
dec
adc
or
mov
outsb
mov
lods
mov
push
push
jae
or
cltd
shlb
pusha
insb
call
push
clc
addr16
add
fdivrl
adc
insb
adc
cmp
sti
dec
push
push
push
push
dec
testl
pop
mov
aam
enter
pop
or
loope
or
and
imul
lock
sub
pusha
cmp
mov
enter
das
pop
xor
gs
sbb
ret
mov
lea
or
mov
je
outsl
xchg
daa
xchg
mov
popw
insl
sti
cmp
pop
cmp
cmp
ds
and
push
das
push
sub
ret
frstor
push
addr16
jle
cmp
sahf
imul
add
mov
sub
pop
or
sbb
or
cmp
das
push
jb
aaa
in
mov
outsb
cmp
mov
xchg
xchg
pop
pop
jne
push
xchg
stos
addr16
push
jbe
add
das
jo
ss
gs
imul
mov
sbb
fdivl
dec
sbb
sahf
inc
int3
cmp
fs
jo
sub
mov
jl
out
sub
cmp
repz
push
push
dec
cmp
and
ds
repz
or
sub
mulb
push
cwtl
orb
fdivrs
out
push
aam
int3
enter
sahf
out
mov
lods
test
movsb
repz
cmp
mov
mov
idivl
xchg
adcb
push
sahf
out
dec
jl
push
jo
cmp
repz
fs
pop
pop
repz
repz
push
dec
inc
xor
stc
cmp
sub
or
sub
sahf
out
sahf
enter
dec
and
dec
repz
in
les
jo
fs
xor
sbb
lock
lahf
out
sahf
test
pop
sub
in
sub
jl
ja
push
pushf
jo
sub
pusha
lcall
lock
faddl
add
jb
test
and
mov
ss
addl
mov
addb
push
sbb
add
xchg
sub
inc
or
jbe
addl
imul
push
adc
movl
add
add
mov
jnp
or
jnp
push
pop
fildll
or
cmp
or
test
mov
call
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
pushl
mov
mov
mov
ret
enter
int3
int
iret
rcl
call
rcl
aad
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
test
std
push
repz
cmc
div
clc
stc
cli
sti
cld
std
jmp
or
sub
call
sub
push
test
push
adc
js
popa
data16
add
cmc
pusha
pop
shlb
cmc
out
xor
add
fiaddl
data16
daa
fidivs
add
push
arpl
jecxz
sti
sub
fs
sbb
jns
je
xor
jp
mov
jne
iret
decb
sub
add
inc
adc
mov
dec
and
xor
push
dec
inc
dec
xor
test
cmove
push
shrl
mov
adc
adc
pop
dec
rolb
popa
into
mov
mov
out
xor
jnp
inc
loop
mov
ds
pop
adc
call
or
cli
jb
jge
arpl
pop
in
dec
scas
jp
jno
in
fstl
nop
mov
and
cmp
dec
imul
jmp
iret
lret
add
inc
mov
mov
sub
pusha
pop
imul
ds
xor
mov
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
mov
cmc
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
and
xchg
call
lret
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
addr16
leave
or
insb
mov
out
leave
ljmp
add
loopne
dec
test
shrl
leave
hlt
std
aas
jl
adc
xchg
dec
add
scas
lods
dec
lock
xor
adc
fistps
into
or
icebp
pop
pop
repnz
fistpl
sub
lret
es
sbb
or
and
shlb
dec
or
daa
and
xor
inc
jmp
fistpl
fdivrs
sub
sub
mov
inc
inc
loopne
and
mov
inc
out
clc
xchg
dec
xchg
pop
and
sti
and
out
into
inc
cmp
outsb
addr16
es
repnz
jae
lret
cmp
and
or
sbb
mov
sub
loope
xlat
bound
jg
aas
fldt
je
aaa
pcmpeqw
sti
sub
rorl
ja
popa
daa
sub
cmp
add
je
jmp
jae
insb
add
push
sub
addr16
sub
jmp
xchg
lret
xchg
cmpsl
lock
fstpt
shll
inc
jb
add
or
pop
jae
xorl
push
stos
add
outsl
test
inc
imul
sbb
divl
jae
insl
div
outsb
js
mov
mov
mov
and
add
sub
jmp
addl
adc
out
fbstp
push
test
aaa
adc
jno
mov
shll
mov
inc
pop
rol
jnp
cmpsl
int3
push
lds
loopne
fdivs
inc
jecxz
or
out
sti
arpl
jns
out
mov
xchg
jg,pn
jg
imul
push
push
or
adc
jmp
pop
hlt
push
out
js
sub
push
lods
mov
cmpsl
out
add
push
mov
cmp
pop
ret
jge
ret
jne
adc
xorl
dec
push
out
mov
shll
imul
add
xchg
cmp
divl
cmp
out
rorb
inc
xchg
mov
sub
insl
ret
dec
dec
fisubrs
and
push
loope
xchg
gs
test
jmp
dec
jp
xchg
or
pop
xorb
jecxz
mov
mov
dec
adc
ja
out
push
cmp
cmp
jle
out
xlat
addr16
je
imul
aas
shlb
pop
arpl
add
movsl
sbb
pop
gs
jne
xor
cmp
and
and
andl
filds
rol
pop
stos
pop
inc
cs
mov
mov
add
outsl
fiaddl
mov
mov
xor
aas
arpl
sub
inc
aad
pop
lret
sub
inc
sub
ja
lods
and
ss
jne
or
cmp
aas
mov
adc
into
mov
pop
aas
pop
jecxz
addr16
push
ds
mov
push
arpl
call
test
and
mov
add
sub
dec
popa
jae
sbb
test
data16
or
dec
add
xor
icebp
jle
or
shll
push
mov
pop
dec
aaa
pop
xchg
jbe
fmuls
pop
jnp
sbb
push
and
jecxz
pop
aad
stos
outsl
subl
sub
pop
sbb
dec
aas
jecxz
test
push
inc
pop
daa
jne
aas
dec
sbb
outsl
dec
push
movlps
fwait
push
sbb
lcall
adc
shl
inc
push
ret
js
clc
mov
idivl
xchg
mov
push
loopne
inc
outsb
out
imul
jb
sub
shll
xor
add
jecxz
mov
out
pop
push
fiaddl
mov
mull
bound
jae
push
pop
mov
addr16
sti
and
xor
bound
pop
js
push
or
outsl
out
dec
inc
mov
outsl
sub
shrl
daa
lahf
mov
mov
ja
jcxz
and
outsl
cmpsl
cs
loope
jmp
add
in
mov
dec
mov
insl
mov
out
inc
push
inc
mov
imul
mov
push
outsb
clc
dec
insb
xchg
inc
inc
add
sbb
jmp
outsb
xor
mov
shrl
ss
mov
dec
sbb
daa
addb
xchg
je
pop
dec
push
jl
jo
jmp
insb
aas
pop
sti
pop
adc
addr16
cmp
sti
sub
sub
cmpsl
cmpsl
pop
pcmpgtd
pop
pop
sbb
mov
and
cwtl
inc
jle
inc
mov
mov
mov
inc
jl
jl
mov
fsubl
imul
push
xchg
cmp
inc
pop
out
mulb
and
addr16
bound
pop
mov
push
das
fnstsw
mov
in
subb
cmp
jns
jae
ja
pop
gs
jl
push
ja
jno
adc
jl
mov
pop
pop
jnp
sbb
jmp
repz
es
ja
into
xor
mov
imull
outsb
cs
push
mov
arpl
lock
mov
jae
jno
negl
insb
sub
shl
dec
outsl
lret
jl
jo
call
cmp
mov
mov
pop
mov
push
mov
roll
imul
push
imul
xchg
jl
repnz
orl
xchg
pop
adc
clc
fdivs
push
add
and
jne
mov
mov
mov
outsl
push
jo
pusha
inc
jle
fistl
fisttps
xlat
aaa
sbb
movsb
adc
inc
divl
jnp
jnp
pop
inc
jns
jae
data16
fs
inc
lock
pop
fisttps
add
jg
sbb
cli
add
jecxz
sbb
mov
test
pop
pop
pushl
pop
std
xorl
pop
data16
rolb
jnp
aaa
push
or
inc
pusha
cmp
mov
popa
popl
je
aaa
es
pop
fildl
adc
xchg
addr16
js
mov
push
add
sub
push
add
push
sbb
dec
push
in
jnp
dec
sub
sbb
ss
in
cli
lcall
jge
in
mul
lret
ss
inc
pop
cwtl
ss
push
imulb
mov
add
outsl
sbb
stc
mov
mov
rcll
cmp
push
out
int
movsl
push
stos
add
pop
push
mov
push
inc
push
inc
jg
push
mov
es
jl
scas
fnstcw
test
push
and
or
fcomp
sarl
add
aas
pop
mov
into
dec
pop
out
push
pop
jns
sub
adc
fisubs
je
and
fistpl
lods
push
int3
sahf
xlat
mov
inc
outsl
jg
push
loope
jnp
sarl
sbb
push
mov
pop
push
push
outsb
dec
fdivp
mov
iret
pop
aaa
dec
and
push
adc
aam
add
insl
ja
outsl
jo
jns
push
mov
pop
sbb
sub
cmpsb
dec
push
add
add
lret
les
sti
aas
mov
popa
push
jae
xchg
xchg
pop
fs
and
ret
sbb
push
gs
insl
pusha
push
popa
jne
or
dec
pop
and
dec
bound
xor
pop
sub
and
imul
jae
push
loop
decl
iret
repz
sbb
push
and
jnp
mul
clc
cmp
add
dec
push
pop
push
lahf
out
sahf
bound
shl
jbe
lahf
divl
popa
or
mov
cmp
aaa
clc
dec
xor
cmp
gs
sub
cltd
pushf
je
cmp
push
push
or
push
push
jo
jb
into
jb
pushf
mov
add
and
jae
sbb
subl
xor
and
and
and
arpl
les
sti
xor
cmp
fs
adc
adc
adc
imulb
mov
outsb
je
adcl
imul
dec
outsw
sub
ja
or
cmp
sbb
aaa
push
movsl
xchg
out
mov
inc
popf
adc
daa
imul
add
sub
sub
push
scas
fdivl
inc
push
ja
push
mov
scas
ltr
jbe
rcrb
cmpl
insl
or
pop
pop
inc
or
insl
xlat
cmc
insb
inc
cli
mov
push
and
mov
aaa
add
xchg
cmpsl
add
sahf
mov
inc
ds
dec
cmp
rclb
mov
idivb
sbb
or
add
rclb
faddl
sub
or
push
push
or
xor
or
push
cmp
mov
ja
out
mov
imul
add
fcomps
mov
ja
and
fs
clc
and
fs
bound
jle
out
enter
aaa
inc
or
sbb
lahf
scas
push
rcrl
mov
scas
pusha
imul
inc
cmp
ret
mov
or
jmp
pop
mov
sub
mov
pop
jo
cmpsl
mov
cmp
mov
outsb
fcoml
ss
sti
mov
loop
mov
mov
dec
pop
add
push
xchg
ret
fs
mov
or
lea
dec
inc
inc
add
push
mov
mov
mov
or
mov
stos
scas
imul
xor
xlat
scas
pop
push
shlb
ret
push
lea
cmp
ret
add
add
shlb
add
and
sub
gs
pop
int
imul
lods
lods
jp
jp
pop
pop
fidivrl
add
mov
iret
aaa
cmp
push
pop
bound
and
rolb
nop
aas
jb
fs
sub
dec
push
add
clc
inc
lods
icebp
lcall
mov
inc
pop
iret
jle
adc
pop
iret
repz
sbb
push
cmp
repz
andl
or
cltd
or
xchg
pop
pop
dec
or
in
xor
or
stos
mov
add
das
adc
mov
insb
jns
and
sub
xor
inc
neg
mov
mov
mov
mov
mov
add
add
shrb
ret
insb
ss
cltd
sub
shrb
xchg
pop
adc
fsts
and
add
fldcw
xchg
rclb
lret
verr
loopne
lea
shlb
push
dec
jl
stc
das
incl
pusha
into
mov
ds
icebp
imul
sub
pop
mov
xor
clc
out
repz
in
cmpsb
pop
xchg
fidivl
inc
push
call
ret
add
das
xchg
push
nopl
push
dec
into
sub
in
adc
sti
ja
and
mov
sti
iret
add
pop
and
sbb
add
pop
or
push
inc
outsl
inc
push
fiaddl
sbb
outsb
mov
arpl
xchg
adc
jne
inc
pop
pop
mov
sub
push
jmp
stos
fs
fnstsw
mov
outsl
cmpsb
sub
jns
sub
jo
movsb
or
mov
mov
pop
xlat
cmpsl
dec
stos
pop
push
jae
popa
insl
dec
shlb
es
mov
mov
das
xchg
hlt
or
addr16
push
push
mov
adc
cmp
or
dec
lods
iret
xlat
mov
sub
arpl
divl
pusha
das
and
cmpsl
push
sub
ljmp
cmpsb
mov
lea
ds
sub
sarl
xchg
stos
out
or
add
imul
add
sbb
jno,pt
jbe
or
aaa
push
add
rolb
fwait
imul
inc
inc
push
aad
fldl
sti
cmpsb
aas
rcrl
sbb
inc
jae
mov
xor
jbe
aaa
fwait
sub
pop
ret
and
and
mov
cmp
or
js
imul
xchg
pop
inc
and
shrl
push
loope
pop
outsl
es
push
add
nop
lcall
sub
mov
mov
mov
ret
lret
fistpl
arpl
scas
bound
pop
push
xchg
data16
sbb
mov
pop
xor
pop
mov
inc
outsb
cmp
outsb
cmp
ficomps
push
sub
push
xchg
inc
jmp
insb
mov
ret
push
add
lahf
sti
test
cmc
add
insb
cmp
add
inc
push
pop
xchg
mov
jnp
jb
aad
aad
xlat
pop
push
ficoms
xor
inc
fstpt
lahf
adc
xor
add
sbb
addr16
jo
cmp
je
lahf
xorl
notb
jbe
add
pop
es
scas
ja
jo
pop
inc
outsl
daa
jl
mov
repz
push
cmpsl
sub
or
pop
xlat
sbb
movsl
xor
inc
dec
pop
clc
fnstcw
and
mov
aaa
dec
iret
mov
adc
scas
fbld
fcoms
adc
mov
aad
ljmp
mov
or
cmp
adc
arpl
imul
push
inc
lahf
bts
aaa
loope
fadds
inc
sbb
inc
mov
add
xor
sub
aaa
es
enter
insl
push
outsl
xchg
pop
das
or
cs
outsl
push
inc
dec
bound
cmp
ss
add
sub
pop
sbb
out
xor
out
call
outsb
adc
add
out
xor
jnp
stos
add
mov
rcll
sahf
xor
add
mov
frstor
fsubrs
mov
les
rcrl
push
jmp
aad
mov
mov
ss
cmp
adc
mov
mov
push
or
xchg
and
adcl
push
mov
fsubs
pop
aas
ja
adc
jae
or
out
lcall
outsb
and
dec
bnd
sub
dec
cmp
es
mov
cs
lret
sub
mov
add
sub
adc
jno
or
inc
cmp
inc
lar
xchg
jb
stos
push
mov
push
mov
push
xor
aas
push
or
push
sbbl
add
jl
orl
jmp
pop
pop
fildl
and
repz
push
stos
adc
scas
lods
mov
push
or
ret
sbb
gs
mov
iret
jp
pop
call
dec
jmp
jae
insb
je
mov
jnp
push
sbb
mov
mov
xchg
aas
nop
inc
push
mov
mov
fists
push
stos
shlb
wbinvd
mov
and
iret
sub
fcomps
nop
push
in
pop
jae
jl
or
gs
int
daa
adc
mov
jl
iret
shll
pop
sbb
iret
sarl
xchg
add
clc
add
inc
call
add
fwait
mov
icebp
outsb
push
and
and
inc
dec
fwait
icebp
fisubrs
push
push
mov
outsb
bound
adc
out
xor
pop
inc
das
mov
sbb
cmpsl
loop
loop
arpl
lret
mov
xchg
imul
inc
inc
lods
aas
add
add
jmp
out
xchg
orb
dec
sub
adcl
sub
pop
xor
xchg
mov
sbb
aas
add
dec
add
lcall
pop
pushf
ret
jge
int3
jbe
mov
sbb
ret
adc
or
repz
push
fistpl
pop
or
test
dec
lds
jnp
aaa
add
das
sbb
adc
enter
iret
outsl
inc
lods
push
adc
lahf
das
shrb
and
sahf
mov
inc
sub
mov
or
or
push
add
pop
push
rcr
xlat
and
xchg
push
addl
mov
daa
movb
pop
addb
repz
addr16
vcvttps2dq
ficomps
xor
std
adc
out
jnp
jge
jbe
sbb
enter
inc
push
and
mov
rcr
cs
add
xor
fists
pop
mov
scas
add
push
insl
pop
push
or
sub
jae
aam
orl
add
sti
xchg
lgs
arpl
bound
ja
js
mov
pop
mov
pop
mov
in
negl
mov
fidivs
cli
push
push
sti
lcall
cs
jecxz
pop
and
fsub
in
cltd
dec
mov
loope
sub
pop
dec
hlt
loopne
xchg
stos
movsb
push
add
xchg
mov
xchg
push
leave
push
or
cmpsb
fs
leave
push
repnz
sbb
dec
pop
and
stos
in
sub
fistl
xor
sub
fimull
in
xchg
in
jb
inc
in
fmuls
xchg
test
xchg
mov
and
mov
in
cltd
dec
pusha
or
push
leave
stos
mov
xchg
pop
adc
push
xchg
dec
and
in
enter
mov
rcll
push
xor
movsl
xchg
shr
loop
cmp
les
mov
xor
jg
shlb
add
and
mov
xor
pop
aaa
jmp
rorl
je
cmp
movsb
insl
and
inc
shlb
loope
ret
je
or
mov
insb
xor
fadds
pop
das
inc
xlat
adc
adc
xor
sbb
out
dec
or
es
pop
inc
adcb
sbb
xchg
jae
mov
test
sbb
push
adc
mov
mov
repz
or
mov
inc
xchg
xor
jne
mov
dec
cmpsl
inc
xorl
mov
mov
add
xor
pusha
aam
aas
push
inc
dec
xchg
out
pusha
jmp
or
push
das
sub
sub
aaa
inc
mov
inc
sti
pop
push
scas
addr16
int
es
inc
lds
lea
inc
adc
pop
adc
hlt
push
scas
cmpsl
lahf
add
xchg
mov
pop
inc
sub
mov
push
and
and
and
popa
and
mov
mov
sbb
aaa
push
call
cmp
das
out
aaa
and
xchg
inc
iret
loope
mov
fadds
rorl
adc
sub
aaa
outsl
sub
shll
sti
push
aas
mov
les
gs
inc
sarb
das
mov
pushl
xchg
mov
mov
sbb
mov
mov
fwait
lret
call
push
sbb
aam
repz
cmp
add
call
mov
jg
jbe
mov
mov
popa
xor
add
arpl
loopne
xchg
xlat
mov
fisttpl
popa
xor
mov
arpl
mov
inc
inc
orl
mov
sub
jnp
add
sub
or
pop
sub
and
push
xchg
fdivrs
inc
es
and
add
xchg
out
aaa
sbb
sti
cmp
addr16
mov
sub
adc
je
or
push
rorb
insl
je
jnp
mov
dec
sub
mov
les
cmp
movsb
pop
sbb
mov
imul
xchg
jae
pop
inc
mov
push
ja
scas
add
add
loope
divl
imul
mov
mov
push
out
mov
xor
xor
mov
loopne
daa
outsb
xor
xorl
dec
bound
sarb
ja
adc
faddp
xorl
popa
jae
js
outsl
jae
imulb
js
fs
pop
daa
sbb
xchg
push
adc
push
clc
fucomip
push
loopne
int3
sbb
add
sbbb
jne
repz
dec
or
add
jae
xorl
in
popa
inc
adc
rorb
les
mov
dec
push
adc
imul
outsb
or
stc
cmp
sbb
addr16
fcmove
rclb
pop
push
pushf
push
inc
or
push
pop
inc
mov
xor
sub
pop
lods
add
xchg
pop
jb
xchg
rolb
adcl
push
jae
imul
pusha
je
imul
das
jmp
xor
scas
push
cs
fsubs
loop
push
fistps
jmp
mov
add
gs
out
mov
cmp
xor
stos
movsb
xor
xor
lock
adc
stos
mov
dec
cmovno
or
pop
cmp
mov
out
add
add
mov
aas
mov
bound
insb
adc
out
cs
inc
sbb
cmpsl
movsb
inc
mov
xor
push
mov
pop
movsl
jno
add
inc
lods
mov
addb
arpl
sbb
imul
xchg
shrb
xchg
cltd
push
jecxz
xor
scas
dec
insl
lock
loop
outsb
sub
in
sahf
cs
cs
cmp
mov
push
sahf
cs
xor
push
repnz
out
es
and
loopne
push
jae
xor
adc
in
fidivrs
inc
xchg
cmp
inc
pop
ret
cmp
jnp
fs
dec
sub
into
xchg
fcmovb
xchg
jmp
jecxz
pop
pop
in
pop
scas
dec
shlb
or
inc
or
loopne
stos
jle
js
xor
fucom
jmp
inc
cmp
xchg
ficomps
dec
or
inc
push
mov
out
inc
and
ss
push
dec
repz
push
fimull
pop
incb
mov
xor
ret
lds
outsb
jb
loop
pop
mov
push
cmpsb
xchg
ja
pop
das
jge
ret
pop
lret
inc
popaw
sub
pop
mov
xor
stos
inc
mov
arpl
sub
arpl
fs
sub
ds
mov
cmp
xchg
dec
dec
daa
jge
fidivs
mov
scas
jnp
out
inc
push
packssdw
inc
jnp
sbb
push
sbb
dec
ss
outsb
jnp
fidivrs
daa
dec
jb
das
xor
pop
dec
es
das
add
pop
out
mov
and
or
xchg
jne
sysexit
mov
cs
sahf
xchg
push
push
mov
mov
push
scas
push
in
mov
insl
push
inc
ja,pn
xor
push
jns
lds
jp
jp
ds
fucomi
loope
fiaddl
jg
dec
das
xor
fisttps
jp
pop
fstpl
mov
dec
xor
loopne
push
into
xor
cmp
push
dec
cs
push
dec
outsl
push
dec
and
pop
data16
add
lcall
sub
dec
dec
out
mov
imul
sbb
lret
fistps
insb
cmpsl
jo
jnp
adc
jnp
add
jbe
jnp
js
aas
add
fldt
dec
lea
test
jae
pusha
adc
xchg
mov
mov
mov
mov
xor
out
scas
mov
sahf
add
ret
xchg
mov
mov
cmp
data16
shlb
dec
adc
pusha
mov
mov
mov
pop
in
pop
push
addl
and
arpl
andb
mov
arpl
pop
shrl
repz
add
mov
addl
push
cmp
dec
dec
daa
jbe
scas
add
sbb
dec
lret
inc
jo
add
sbb
scas
cmp
dec
push
je
mov
mov
shrl
insb
xor
mov
sbb
adcl
xor
pop
mov
mov
and
mov
call
outsl
popa
fs
outsl
mov
test
lods
push
add
pop
je
in
add
inc
fs
or
aas
sub
sbb
andl
sbb
adc
out
scas
js
sub
inc
sbb
push
add
sbb
mov
xchg
push
xor
addr16
xor
push
xor
icebp
arpl
xlat
add
aaa
jb
repz
int3
dec
ja
pop
imulb
mov
jl
fsub
xchg
pop
and
lods
or
push
jo
sahf
out
outsl
jle
fs
pop
mov
mov
inc
insb
xlat
pop
xor
pop
mov
cmp
jo
arpl
xor
notl
push
jae
pop
xor
punpckhbw
cmc
push
stos
adcb
and
pop
sub
pop
repz
inc
lea
xlat
jae
dec
adc
cmp
xor
push
daa
mov
add
lahf
lea
add
xchg
inc
dec
insb
sbb
add
or
xorb
push
sub
inc
fldt
mov
outsl
ret
outsl
adc
sub
pop
adc
sub
push
sub
lahf
sub
test
xlat
add
das
jecxz
shrb
rolb
push
inc
sbb
mov
lcall
mov
mov
and
dec
push
popa
les
arpl
iret
inc
das
mov
and
lahf
popa
sbb
and
imul
movsb
pusha
add
or
repz
xchg
test
push
push
lret
pop
and
push
pop
xor
call
inc
pop
dec
dec
orl
daa
jns
add
das
mov
aaa
iret
fbld
dec
lods
xchg
outsb
dec
arpl
jae
daa
test
dec
xorl
inc
testb
pop
jae
push
das
repz
push
pop
mov
outsl
pop
xor
aaa
sub
rcll
xor
push
fs
mov
add
movsl
fildl
cmp
push
lods
jp
sub
adc
loopne,pn
adc
push
pop
mov
lock
inc
jmp
std
fisubrl
mov
sbb
or
cmp
xchg
mull
imul
lahf
sub
subb
xlat
and
xchg
loopne
or
popa
out
data16
jmp
pop
outsl
clc
out
leave
jmp
sub
inc
das
pop
mov
dec
xchg
push
in
inc
dec
add
daa
sar
dec
nop
and
mov
mov
mov
sbb
ljmp
mov
mov
call
mov
lods
pop
dec
movsl
enter
push
push
mov
inc
push
insl
ss
adc
cli
mov
add
test
cmp
mov
xchg
mov
mov
ds
pop
sbb
or
jle
jo
fsubs
sbb
decl
cmp
dec
pop
dec
xchg
jge
mov
push
pop
add
pop
inc
jbe,pn
adc
adc
outsl
call
hlt
or
xchg
dec
sub
nop
ss
push
ss
pop
jmp
push
insl
pop
pop
dec
inc
mov
rolb
inc
mov
rolb
lds
xchg
cmp
sbb
ret
push
dec
sub
cmp
cs
or
cld
fwait
dec
cmp
in
fdivrl
das
int3
xor
mov
xor
cmp
mov
and
jns
pop
inc
outsl
xorb
mov
or
lcall
ds
inc
mov
inc
cld
pop
dec
xchg
aaa
imul
dec
xchg
fmuls
dec
ret
or
pop
fwait
add
je
pop
xor
shll
cmp
ss
jge
mov
sub
adc
xchg
or
cmp
adc
loopne
inc
mov
jecxz
cmpsb
jp
mov
inc
cwtl
adc
xchg
adc
add
nop
stos
aaa
inc
dec
push
jp
es
mov
data16
aas
daa
bound
je
bound
imul
xor
add
pop
scas
sbb
sub
add
add
aas
aaa
daa
dec
shrb
aas
fsubs
je
aaa
push
out
cmp
jae
inc
mov
adc
xchg
xor
scas
pop
mov
push
xor
rcll
xchg
stos
pop
dec
push
test
mov
scas
cmc
fidivs
sub
and
xor
pop
addr16
jmp
lcall
push
mov
xchg
mov
xchg
jne
jmp
call
bound
and
cmpsb
fst
mov
add
insb
inc
dec
and
xlat
adcb
out
test
lock
sbbl
pop
data16
cmpsb
test
repz
cmp
sarl
cmp
add
bound
dec
adc
je
add
pusha
mov
jbe
daa
xchg
pusha
fsubrs
pop
xchg
dec
ljmp
bound
dec
imul
cmpsb
dec
push
add
cli
xchg
pop
jae
add
cltd
pop
adc
es
xchg
lahf
test
repz
pop
mov
lret
ficomps
inc
xlat
and
sarl
push
push
jbe
cld
xor
jl
sbb
hlt
cwtl
adc
or
cmc
cmpsl
pop
mov
int
fwait
pop
adc
ds
mov
push
daa
mov
fs
es
leave
xchg
inc
out
add
xchg
aam
jnp
cmp
inc
cld
pop
add
sysret
mov
mov
aaa
push
pop
mov
xchg
fnstcw
scas
call
cmpsl
imul
shl
lcall
into
xchg
das
es
push
lea
pop
mov
stc
mov
ds
mov
cs
lods
inc
ds
repz
add
mov
dec
pop
push
push
adc
sbb
push
or
push
fists
out
mov
daa
xor
jg
aad
xor
idivl
sub
pop
push
lea
popf
ficoms
sti
xor
notb
pop
mov
sub
dec
push
pop
push
jae
mov
mov
push
dec
pop
out
out
ret
pop
outsl
push
and
mov
aas
sbb
fiadds
xchg
xchg
xchg
pop
push
fistpll
xlat
or
loope
push
cmp
cs
imul
pop
clc
call
hlt
sahf
idivb
push
std
out
imul
das
push
jmp
es
pop
pop
jnp
fst
push
jg
inc
popa
sbb
repz
shll
mov
xor
sahf
dec
mov
imul
add
lahf
out
fldl
test
mov
nop
sbbl
std
xchg
dec
or
jns
out
dec
jle
ret
in
cmp
repz
push
jge
repz
iret
roll
dec
pop
push
subb
negl
push
cs
out
sahf
push
insb
xchg
mov
clc
pop
xor
jl
push
das
das
iretw
and
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
fimuls
xor
adc
mov
mov
pop
push
mov
das
jbe
jg
loopne
mov
jbe
inc
mov
and
pop
sbb
ljmp
in
enter
adc
or
adc
aas
pusha
or
bound
pop
mov
pop
adc
dec
mov
movsb
push
dec
cmp
mov
lock
xlat
mov
add
clc
push
adc
iret
or
push
imul
jp
xor
push
js
mov
imul
cmp
xor
dec
addr16
dec
xchg
cmpsl
jp
xchg
mov
and
lods
xchg
pop
fildll
stos
cltd
fisubrl
add
dec
jo
js
rcrb
push
push
dec
dec
inc
outsl
and
test
je
and
adc
fadds
lahf
clc
push
or
push
mov
data16
mov
out
pop
push
ret
mov
cs
decl
mov
fisttpl
es
adc
cmpsl
push
pop
fisubrs
push
rorl
sub
inc
sub
mov
lahf
pop
sub
mov
pop
out
push
hlt
lock
addr16
mov
subl
aaa
outsb
loopne
notb
or
pop
cmp
xlat
cmpsl
jo
pop
pop
daa
fwait
push
jo
inc
lret
sbb
dec
jno
push
mov
inc
push
mov
jecxz,pt
outsb
insl
mov
in
frstor
push
cmp
push
sbb
xchg
fs
arpl
jae
imul
imul
sub
sub
pop
out
mov
data16
jns
mov
sub
push
adc
xor
jae
push
add
mov
add
leave
add
xor
daa
or
lods
sub
daa
xchg
ss
xchg
add
pop
cmp
xor
arpl
push
push
decl
fs
jo
xor
imul
pop
loope
bound
outsb
push
jnp
or
dec
dec
adc
inc
inc
sbb
lods
cmpsl
inc
ret
mov
inc
dec
and
add
lock
clc
ja
addr16
cs
jecxz
pop
fdivs
push
cmp
stos
sub
ret
inc
mov
sbb
or
bound
inc
and
sbb
aaa
mov
mov
push
adc
shrb
or
lea
movsl
test
sub
push
call
push
das
and
pop
mov
cmpsb
sbb
pop
addr16
arpl
testb
jae
and
sub
fs
mov
das
and
pop
or
fisttpl
jo
pshufw
das
or
out
data16
shll
lods
dec
lret
dec
mov
shll
sub
shlb
pop
pop
dec
mov
rcll
mov
icebp
popf
cs
popw
outsl
aaa
lea
mov
inc
jmp
push
xchg
das
ss
cs
inc
das
push
clc
sub
pop
popa
imul
xorb
popl
sbb
test
imul
bound
xchg
fiadds
push
popl
pop
xchg
sub
add
add
repz
lret
jecxz
out
inc
into
inc
inc
pusha
dec
sbb
or
cmpsl
lahf
imul
mov
dec
cmpsl
sub
dec
add
aas
cmp
pop
adc
sbb
cmp
lods
iret
pusha
sub
pop
sahf
and
xchg
add
sub
sub
aas
push
mov
mov
xlat
pop
add
mov
stos
xchg
add
ja
add
push
test
mov
pop
imulb
push
inc
daa
sbb
in
in
cli
cmp
dec
push
or
loop
inc
cmp
ljmp
pop
inc
ss
mov
dec
dec
inc
shrl
inc
aaa
or
addl
jmp
xor
pop
notl
add
and
jnp
pop
fistpl
sbb
loope
jg
add
push
jne
inc
cmpsl
push
call
pop
icebp
push
adc
inc
inc
clc
outsb
add
inc
pop
pop
pop
or
inc
pop
push
or
add
jns
je
add
movsb
mov
icebp
pop
push
xchg
das
push
sbb
repnz
and
rclb
out
cmpsl
cmpsl
es
insl
jo
je
pop
out
std
lea
ds
jo
jae
daa
pop
mov
out
jno
outsl
xor
push
xadd
push
xchg
xchg
adc
insb
pop
sub
or
pop
out
jns
je
jne
or
bound
mov
xor
ja
out
mov
jae
lret
sub
out
ds
movb
mov
mov
mov
je
adc
imul
dec
orb
clc
gs
push
test
jbe
inc
and
xor
mov
push
arpl
nop
mov
testl
out
pop
stos
add
rolb
bound
cmp
dec
jecxz
jg
mov
adc
pop
pusha
mov
push
push
adcb
jmp
test
push
mov
cmpsl
pop
dec
jne
push
pop
daa
fwait
sub
push
test
bound
loop
inc
cmpsl
in
aam
jns
jb
add
sahf
iret
mov
add
mov
push
ret
pusha
or
xor
adc
out
inc
push
inc
fldt
or
aaa
inc
insb
addb
jp
pop
daa
out
pop
mov
sbb
pop
sbb
jb
out
or
mov
jmp
les
add
push
pop
nop
cmp
aaa
incl
dec
inc
dec
push
xchg
add
rcll
je
pop
dec
fidivs
fidivrl
jg
ret
movl
add
pop
adcb
add
add
push
lahf
incl
add
call
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fdivr
incl
pop
adcl
test
and
jge
push
je
mov
andb
fwait
rol
fwait
in
incl
popf
rorl
mov
jmp
dec
fsubrl
stc
jbe
push
ds
ljmp
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
cmp
sbb
cld
insl
sub
adc
or
or
cs
ret
sub
xchg
mov
decl
sbb
mov
call
cltd
test
push
push
shll
insb
aaa
push
dec
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
rep
cs
ljmp
movsl
js
js
test
add
mov
mov
movsb
mull
jno
addr16
push
incl
rep
cmp
cmc
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
and
ret
js
sbb
mov
pusha
dec
pop
mov
das
sbb
xor
add
pop
daa
daa
dec
in
xlat
daa
push
and
push
pop
inc
inc
inc
push
sar
fildl
and
or
aas
js
insb
cwtl
pop
fisubrl
push
pop
push
or
and
dec
or
or
inc
pop
lahf
ss
sub
pop
gs
subb
fistpll
push
push
mov
inc
popw
push
sbb
aaa
push
cld
xchg
sub
add
daa
push
mov
sbb
outsl
adc
sub
sub
lods
mov
and
xor
inc
pop
xchg
inc
lahf
int
mov
push
pop
mov
mov
int
int3
mov
xlat
jl
sbb
adc
xor
xor
jbe
scas
sar
mov
push
push
inc
cmp
inc
cmpsb
cs
mov
out
sub
jne
sub
and
pop
mov
adc
outsl
pop
or
mov
jae
sub
pop
testl
push
inc
dec
jbe
in
dec
imul
xor
push
cmp
xor
and
xor
dec
jb
rcr
adc
ja
out
push
imul
inc
enter
mov
out
and
bound
mov
test
push
imul
shlb
cmp
or
mov
movsb
outsl
je
mov
popa
stos
rcrb
mov
out
testl
sub
push
loop
rolb
js
ret
dec
inc
sti
int3
int3
or
and
push
fnsave
add
push
add
outsl
fs
out
xchg
gs
jo
jns
iret
inc
mov
and
adc
pop
dec
les
outsl
insl
jne
shrb
jnp
fiadds
les
add
cmp
and
push
inc
je
bound
clc
or
aam
inc
insb
aas
jbe
jg
mov
pop
inc
popa
imul
inc
sahf
loop
outsb
mov
xor
fidivrl
pop
add
gs
fcoms
jnp
ret
orb
inc
or
inc
mov
outsb
xadd
sbb
inc
cmovo
addb
adc
cmpb
aas
js
insl
pop
nop
jo
maxps
loopne
mov
mov
mov
inc
movups
xchg
mov
dec
adc
or
xor
test
das
sbb
dec
insb
dec
add
sbb
jbe
lret
out
hlt
daa
ds
mov
shlb
testl
enter
push
inc
push
jmp
jmp
pop
das
inc
add
fstp
add
lahf
ds
jnp
add
daa
les
or
enter
sub
daa
outsl
inc
xchg
outsb
mov
out
lds
leave
daa
xchg
sub
fs
push
mov
push
fcompl
adc
dec
fsubl
xor
scas
fisttps
inc
test
add
in
and
scas
jl
inc
mov
mov
outsl
jle
pop
lods
pop
jb
mov
and
mov
lret
jno
outsl
adc
outsl
add
mulb
in
lret
dec
add
out
dec
mov
rep
negl
push
sbb
cmpsb
pop
and
jle
inc
mov
lret
in
adc
inc
cs
movl
filds
xor
xchg
rep
sub
js
repnz
enter
js
pop
jb
pusha
movsb
lods
enter
mov
and
lods
sar
or
outsb
addr16
aas
add
nop
int
mov
int3
sbb
pop
push
movsb
das
inc
daa
repnz
in
push
outsb
xchg
xor
aas
es
pop
add
dec
sahf
or
in
iret
lds
nop
push
aam
mov
sahf
mull
cmpsb
int
xor
inc
push
nop
enter
dec
aas
ja
pop
repnz
lahf
aam
cmp
add
test
nop
int
movsb
inc
sub
cs
scas
hlt
ja
inc
cs
aam
lock
fsubrs
cmp
inc
daa
lock
pop
pop
addr16
inc
enter
fstpt
testl
mov
mov
xchg
pop
add
add
bound
adc
insl
shrl
push
sub
push
sahf
outsl
mov
inc
cs
xchg
jo
pop
jnp
mov
mov
daa
add
mov
pop
mov
mov
jae
in
cld
add
das
in
sbb
in
and
jnp
inc
ss
inc
push
test
push
xchg
dec
in
add
jl
stos
shrb
cmp
jnp
jo
pop
int3
mov
mov
sbb
add
roll
dec
in
dec
add
pop
enter
rorb
inc
sahf
or
imul
lret
inc
sahf
or
sbbb
lahf
or
or
xor
pop
enter
cmp
nop
mov
lahf
pusha
enter
ja
mov
lods
mov
iret
test
faddl
cld
mov
fsub
sub
pop
xchg
sbb
pop
cmp
push
shl
fcompl
xchg
fcoms
jg
negl
or
adcb
pop
frstor
test
cmp
in
pop
and
jae
cmpsl
cmp
fwait
nop
iret
test
aam
push
or
dec
push
dec
fisubs
imul
jl
and
repnz
in
mov
iret
test
rcrb
hlt
nop
fbstp
in
and
adc
fiadds
loopne
in
repz
pop
and
and
enter
js
pushf
fadds
cmpsl
js
jae
iret
dec
int3
fdiv
jl
add
fiadds
xor
inc
pop
and
sti
push
and
cmpsl
js
mov
mov
push
mov
dec
add
and
aam
and
repnz
les
adc
and
insl
orl
jae
int
lahf
and
fs
mov
enter
fs
iret
test
les
pop
enter
fwait
sub
pop
js
fadd
adc
stos
jo
ljmp
sahf
jg
test
pusha
push
shl
push
cmpsl
inc
sahf
or
inc
sahf
out
rcr
loopne
mov
into
add
xchg
lcall
addr16
ficomps
insb
xor
push
push
shl
inc
fs
addr16
sahf
or
test
bnd
addr16
out
scas
jbe
lahf
test
and
or
sbb
jbe,pn
xor
iret
test
pop
jo
aas
subb
out
lcall
and
in
push
push
cmpsl
mov
pop
hlt
add
ds
nop
or
and
inc
icebp
mov
pop
sahf
push
and
nop
addr16
rcrb
mov
jns
out
call
and
or
ja
out
and
and
loopne
dec
dec
fcompl
push
inc
jbe
dec
mov
xor
fwait
or
push
mov
pop
pop
pop
add
mov
jns
inc
js
lock
pop
jb
jo
inc
loopne
js
inc
ds
inc
push
push
push
movsb
imul
and
jg
mov
jl
int3
test
addr16
lahf
mov
and
cs
inc
lock
clc
or
aam
fs
sbb
sub
cmp
mov
pop
push
dec
inc
ja
or
or
mov
pop
push
pushf
fdivrp
push
sbb
insb
inc
jmp
mov
jo
and
sbb
loopne
les
sub
inc
fists
addb
int3
shl
push
imul
fiaddl
inc
lcall
lods
lods
add
push
inc
jg
nop
out
pushl
shl
loopne
mov
loopne
dec
inc
ja
enter
pusha
fs
sbbl
inc
pusha
enter
jg
nop
mov
enter
adc
mov
loope
or
loope
mov
sub
daa
and
frstor
lahf
in
inc
dec
repz
inc
adc
lods
sbb
pop
mov
pop
insb
inc
mov
cmpsl
inc
movsl
jbe
clc
add
inc
adc
lahf
imul
fs
sahf
or
pusha
jo
nop
or
fs
mov
jns
in
mov
out
cs
mov
nop
lock
adc
out
cs
mov
dec
enter
pusha
in
pop
pop
and
adc
push
repnz
dec
nop
mov
in
dec
lahf
nop
inc
es
pop
enter
in
inc
lahf
or
in
mov
pop
testl
pop
outsl
aas
js
sub
lcall
testb
ror
fiaddl
cmp
out
clc
or
pushaw
cmp
push
xchg
inc
outsl
enter
xchg
clc
inc
in
leave
repz
push
pusha
enter
push
outsl
jg
lds
or
aad
jl
jb
lock
iret
add
jmp
out
sahf
adc
fxam
out
js
and
inc
call
adc
inc
mov
sub
fwait
push
push
pop
daa
aas
daa
add
mov
data16
pop
mov
daa
nop
xchg
testl
fcmovb
cs
call
scas
mov
mov
xlat
mov
inc
lcall
negb
call
mov
hlt
call
ljmp
or
lods
inc
pushf
or
mov
outsl
mov
fstl
dec
aam
in
push
xlat
data16
xchg
sbb
xchg
push
in
dec
in
pop
dec
cmp
dec
push
push
daa
ret
pusha
stos
mov
orb
or
add
jns
ja
daa
sbb
test
dec
push
jb
push
inc
inc
cmp
xor
push
jb
sub
popa
and
mov
mov
out
ljmp
dec
push
xor
icebp
mov
negl
clc
add
es
push
cmpsl
stc
xor
and
lock
out
mov
mov
clc
out
sahf
ja
out
dec
xor
ds
push
push
jl
in
movsb
mov
sahf
cmpsl
stc
je
pop
cmp
add
push
test
add
repnz
es
xchg
pushf
in
dec
test
xchg
mov
aas
imul
xchg
cmp
sub
nop
add
dec
sahf
out
jmp
add
fidivrs
mov
jg
push
xor
mov
fdivp
push
inc
out
cld
inc
mov
push
push
xor
add
or
push
in
ja
add
sbb
jns
xchg
inc
dec
outsl
xchg
sti
inc
inc
xor
dec
sbb
push
add
add
rcr
in
dec
ret
push
xor
add
inc
or
and
dec
test
in
fbstp
outsl
fisttps
mov
outsl
cmp
or
cmp
pop
and
pop
ret
lods
pop
scas
add
outsl
out
mov
xor
fnstsw
and
fbstp
cmp
add
aam
test
call
sbb
out
scas
add
sbb
ljmp
pusha
and
xor
xor
xchg
in
nop
out
out
out
outsl
xchg
popa
sub
add
sub
or
sub
xor
jbe
into
js
aaa
js
cwtl
repnz
repnz
mov
push
hlt
out
movl
sahf
sbb
lock
leave
add
dec
jg
or
ja
adc
jg
mov
sub
or
mov
or
repnz
cld
fimuls
icebp
outsl
add
mov
fbld
bound
and
mov
fiadds
and
insb
add
cwtl
pop
scas
sbb
push
xor
pop
outsl
js
ret
push
out
dec
fisubs
jae
pusha
cmpsl
or
daa
add
je
orb
cmpsl
in
or
xor
push
aaa
stc
out
pusha
xchg
sub
add
fwait
test
call
and
es
xorb
call
loopne
subb
mov
loope
fimuls
xchg
push
cwtl
aam
jg
push
adc
push
call
addr16
and
xor
aaa
inc
repz
push
xor
pop
sbb
loopne
xchg
mov
ss
js
test
or
repz
mov
pcmpeqd
mov
leave
xchg
lock
outsl
js
in
xchg
outsl
jg
sub
xchg
loop
hlt
jge
jne
daa
testl
cmpsl
jge
scas
push
movsb
clc
push
mov
hlt
scas
mov
testb
and
and
dec
cmpsl
bound
loope
adc
cmc
push
pusha
mov
dec
xlat
or
decl
idivb
add
pop
jne
daa
xlat
or
shl
pushf
xchg
dec
inc
divl
add
test
fdiv
add
fimull
xor
popa
xor
outsl
and
sub
push
mov
xchg
cmp
nop
imulb
mov
divb
subl
stos
pop
nop
divb
call
aaa
sbb
outsl
loopne
and
jecxz
and
pushf
pusha
divl
scas
es
pop
mov
add
mov
call
jg
hlt
ja
loop
fisttpl
sbb
and
jg
in
dec
scas
addr16
add
xchg
or
fs
add
sub
das
and
and
push
jb
jge
mov
inc
aad
lods
aaa
pop
in
jl
sub
sub
pop
cmp
ss
cmp
dec
stc
aaa
add
movsb
or
leave
test
mov
pop
iret
int3
xlat
jo
push
xor
sahf
iret
aad
sub
daa
loopne
xchg
pop
leave
in
pop
cli
daa
or
add
repz
pop
cwtl
push
xchg
add
call
dec
int3
js
or
outsl
mov
xchg
aas
add
decb
cli
cmpsl
sbb
and
mov
decl
xlat
xchg
push
inc
sti
das
outsl
add
or
inc
cs
xchg
movsb
inc
outsb
rclb
push
test
mov
add
cld
push
xchg
mov
pop
andl
push
xor
outsl
out
add
or
inc
lcall
inc
dec
loopne
or
jb
arpl
out
daa
or
add
addb
cmp
std
addr16
or
negb
jl
aas
addr16
fisubs
daa
lods
int
lds
iret
movsb
in
sahf
aam
addr16
gs
in
hlt
std
push
mov
push
dec
divl
mov
push
inc
inc
add
decb
imul
incb
nop
decb
or
rol
pop
repnz
shl
rclb
adc
orl
lahf
fsubl
arpl
clc
out
mov
jl
les
clc
sub
xchg
or
std
lods
push
mov
addr16
test
mov
add
add
jb
test
cmpsl
stc
cmp
stos
shr
and
push
dec
repz
mov
pusha
ds
repz
mov
mulb
mov
out
inc
xchg
dec
repz
mov
pop
mov
arpl
lahf
out
mov
pop
add
or
lea
call
adc
cs
insb
xchg
nop
iret
repz
push
pop
mov
imul
xchg
xlat
out
fidivrs
xchg
es
mov
xor
sti
push
xchg
inc
mov
mov
push
ljmp
ja
jne
push
xchg
push
out
cmp
xchg
fucom
jns
aas
push
ret
add
out
jne
loopne
cltd
jb
imul
lcall
in
fwait
push
imul
pushf
cmp
incb
mov
sbb
push
push
mov
out
sahf
out
lahf
dec
ja
into
out
cmp
add
mov
das
push
mov
inc
subb
xor
out
jmp
out
ds
fistps
cmpsb
jns
out
xor
sarl
push
and
pop
flds
xor
mov
stos
out
addr16
lahf
out
stos
icebp
pop
lods
xchg
fdiv
jns
out
lods
pop
fdiv
cmp
xchg
test
test
sahf
out
mov
mov
pop
mov
stc
cmp
pop
test
pop
mov
dec
repz
mov
mov
cmpsl
stc
cmp
and
sarl
adc
mov
out
ds
pop
mov
mov
xor
in
xor
iret
cmp
out
popa
mov
mov
cmpsl
stc
push
mov
inc
imul
lock
out
hlt
dec
sarb
jns
iret
lock
push
xorl
push
ret
xor
ja
fiadds
outsb
push
out
movsb
lahf
cmpsl
stc
pop
xor
push
int3
jl
out
out
inc
enter
leave
jge
out
push
add
data16
outsb
push
pop
xchg
hlt
int3
cmp
iret
sarl
xlat
add
sub
out
ds
ds
outsl
stos
out
repz
out
shlb
sarl
push
sarb
adc
pusha
out
iret
pushf
fcom
aam
movsb
out
xor
fbstp
iret
sarl
mov
xlat
mov
pop
dec
repz
fmuls
sbbb
ficoml
into
imul
imul
shl
fiadds
xchg
or
stc
xor
dec
aam
jmp
in
aad
lock
dec
mov
repnz
jo
dec
pmaddwd
push
jl
int
mov
mov
repz
flds
insb
add
push
insl
or
add
lahf
int3
cvtdq2ps
or
push
inc
aas
sarl
cmpl
pushf
sbb
pusha
push
scas
rorb
ficomps
push
xor
mov
popf
mov
loopne
aaa
int
mov
lahf
out
pop
mov
cltd
nop
insb
shlb
inc
dec
mov
pop
xchg
aas
cmp
rcr
fdivrs
lds
test
or
pop
call
mov
das
bound
cmp
frstor
aas
movntq
out
inc
leave
and
pop
testb
xchg
pop
mov
fbstp
test
add
mov
stos
or
outsl
out
mov
or
push
inc
outsl
dec
ds
das
push
inc
mov
inc
imul
or
mov
dec
mov
leave
gs
daa
dec
jg
dec
mov
pushf
int3
aas
in
mov
ss
push
inc
pop
sub
ds
jmp
outsl
addr16
and
add
aam
rorb
daa
in
loopne
adc
xchg
das
sub
inc
pop
push
push
fists
adc
adc
iret
or
inc
dec
shlb
mov
lahf
dec
enter
jbe
jno
dec
ja
xchg
pushf
dec
xchg
or
mov
filds
mov
push
pop
int
fs
outsb
jp
jb
pop
jnp
add
je
das
je
or
psubw
jg
jmp
cs
add
fiadds
mov
xchg
pop
inc
leave
xchg
lret
iret
les
push
sbb
jo
push
mov
dec
movb
scas
hlt
add
fisttpll
inc
pop
xor
jmp
push
daa
inc
scas
xlat
fldl
push
xchg
push
push
dec
sbb
mov
in
ja
data16
ja
jne
leave
aas
inc
fbstp
leave
leave
in
insl
fbstp
call
cmpsb
scas
and
sarl
pop
pop
push
js
pop
jb
test
es
and
pop
xor
enter
pop
xchg
mov
jnp
adcl
movsb
mov
imulb
dec
je
insb
push
out
lret
push
cwtl
adc
les
xchg
ss
xchg
adc
mov
mov
addr16
sbb
mov
inc
insl
mov
inc
xor
and
daa
xchg
add
inc
xchg
pop
mov
in
mov
jp
jl
mov
mov
scas
dec
adc
scas
addb
sbb
push
scas
dec
das
inc
dec
cmp
das
cmp
scas
or
add
mov
es
mov
inc
sahf
sub
mov
add
add
adc
in
inc
scas
aam
xor
or
out
fs
jb
inc
jb
mov
leave
inc
mov
mov
pop
push
pop
jmp
push
add
add
mov
or
filds
mov
and
cmpsl
and
jmp
push
daa
xor
ret
outsb
in
dec
mov
addr16
adc
jle
xchg
fildl
daa
push
movsb
mov
in
daa
shl
and
add
fbstp
adc
data16
fmul
je
add
mov
iret
test
dec
scas
add
mov
push
adc
lock
stos
daa
mov
lahf
pop
ja
mov
sahf
pushf
pushf
dec
fucom
in
cmc
mov
std
mov
in
add
mov
sbb
cmp
jo
xchg
dec
mov
jbe
fisttpll
setae
fwait
pop
mov
adc
addr16
into
out
in
in
in
cli
push
add
add
sbb
jns
out
or
or
or
les
cmp
dec
xchg
push
lea
cmp
das
push
push
mov
xchg
xchg
add
add
pop
adc
inc
fstl
push
je
inc
adc
stc
add
jns
push
je
out
xchg
push
xchg
sbb
sub
jb
fmul
in
jg
in
and
push
mov
inc
mov
imul
xchg
and
mov
inc
repnz
dec
or
pop
fsub
mov
std
pop
or
pushf
pushf
pop
addb
call
dec
pop
or
dec
pop
psubsb
xlat
sbb
popl
insb
sbb
cs
xchg
sub
add
cltd
popa
mov
xchg
int
add
add
sub
lds
xorps
and
push
bound
repnz
filds
pop
popl
or
add
in
sbb
sub
mov
dec
mov
nop
jmp
in
xchg
ja
call
mov
xchg
pop
enter
mov
dec
ja
cmp
sbb
daa
js
stos
push
xchg
pop
and
into
aam
and
adc
scas
rcrb
xchg
xchg
in
inc
jb
sbb
push
xor
movsb
sbb
push
leave
cmpsl
add
sbb
nop
xchg
pushf
xchg
xchg
push
dec
iret
mov
scas
mov
mov
push
pop
push
jg
push
add
hlt
cld
xchg
add
push
cltd
jmp
or
adc
das
add
jb
cmp
pop
cmpsl
xchg
sbb
js
dec
test
daa
movsb
mov
loopne
aaa
outsl
pop
jp
scas
icebp
in
orb
cmp
fcompl
xchg
sbb
daa
and
cmpsb
scas
and
adcl
bound
xchg
push
mov
mov
scas
pop
and
outsl
jg
in
adcb
sbb
pop
into
testl
inc
rclb
mov
fdivrl
pop
add
mov
xchg
add
cmpsb
out
daa
pop
in
xchg
stos
in
addr16
sub
daa
aam
pop
jg
mov
xchg
incl
jns
dec
dec
and
add
test
pop
mov
dec
dec
add
pop
scas
inc
es
in
mov
cmpsl
jo
leave
sbb
jl
daa
jns
cltd
mov
lcall
movsl
aaa
push
add
repz
movb
loop
mov
mov
xchg
subb
and
cmp
and
cmpsb
inc
add
lock
and
pusha
and
popf
inc
cmp
ja
and
xor
adc
ja
pop
movd
pop
push
pushf
dec
ds
popl
mov
cmp
xor
rcll
mov
fs
pop
jb
pop
nop
jmp
xchg
or
call
mov
aaa
xchg
jmp
push
pop
jmp
inc
pop
add
dec
mov
mov
push
xchg
mov
xchg
stos
test
dec
lds
popl
and
pop
fwait
dec
pop
push
sub
scas
out
mov
mov
add
xchg
imul
push
in
popf
out
push
cvtps2pd
bound
push
jb
sbb
push
fisttps
sub
push
jo
cli
popl
daa
inc
lcall
inc
pop
ja
pop
pop
cmpsb
mov
mov
aaa
lods
push
iret
aam
mov
jmp
ret
shrb
es
jno
xchg
fwait
or
push
mov
pop
push
pusha
es
jne
mov
mov
mov
aam
test
add
xlat
push
xchg
push
daa
cmp
inc
mov
fnsave
push
add
in
sahf
add
and
flds
daa
test
sbbb
scas
arpl
movsl
adc
fsts
pavgw
jne
xchg
xor
es
pop
add
sub
pop
ja
daa
insb
push
daa
jns
pop
xlat
pop
ja
push
cmpsl
push
scas
lcall
js
push
mov
push
mov
mov
repz
cltd
jo
cmp
es
push
mov
cmp
aas
add
cmp
or
push
daa
lret
ds
pop
sub
push
out
push
fildll
test
dec
dec
add
popf
ja
sub
push
xlat
push
dec
aad
in
sti
fcomip
unpcklps
es
iret
aaa
sahf
dec
push
pop
ja
jae
pcmpeqb
push
add
nop
das
lcall
dec
lods
or
aaa
cltd
loopne
sahf
xchg
scas
faddl
add
lahf
adc
insl
jbe
push
xor
in
loop
mov
scas
sub
jo
xchg
daa
and
pop
mov
push
mov
fsubrs
pop
jmp
ja
mov
push
mov
cmp
sub
fs
sub
xchg
push
inc
repnz
ja
nop
fwait
jecxz
leave
icebp
iret
xlat
mov
repnz
jo
addr16
in
mov
in
popf
je
push
pop
ja
inc
pop
movsb
add
jae
mov
cmpsb
push
leave
mov
out
subb
hlt
iret
cld
pop
add
xchg
cltd
std
xchg
pop
adc
cs
andb
aas
arpl
pop
push
cmpsl
jae
cmp
pop
imul
jns
daa
iret
push
mov
in
add
lods
inc
mov
xchg
out
jns
in
cmp
sahf
out
adc
add
repnz
adc
xchg
inc
loope
mov
inc
pushf
xlat
mov
xor
fwait
mov
pop
addr16
das
scas
iret
pop
fcmovne
in
into
fiadds
push
xchg
add
sbb
mov
push
ljmp
pop
xor
leave
repz
inc
dec
xchg
subb
push
movsb
addr16
mov
xlat
orb
jl
cmp
mov
push
xlat
xor
loope
movsb
pop
dec
mov
push
rcl
pop
xlat
daa
adc
daa
movsl
sarb
jg
xchg
dec
xchg
or
movsl
cmpsl
adc
add
sub
xor
mov
xor
sbb
sbb
daa
daa
ret
scas
movsb
add
mov
das
mov
cmp
adc
cs
push
pushl
push
daa
xor
adc
ror
ja
cmpsb
adc
cs
push
outsl
adc
in
xor
cmp
leave
inc
dec
push
add
cmp
fcmovnbe
jg
jno
or
push
xchg
jg
xchg
dec
mov
push
mov
xor
xchg
xchg
test
out
iret
in
xcrypt-ctr
cmpsl
pop
pop
add
pop
add
daa
das
cmpsl
aas
aaa
cmpsl
jo
adc
or
pop
cmpsl
jmp
xchg
xchg
mov
cmp
adc
shll
cmpsl
cmpsl
cmpsl
cmc
pop
sahf
pop
scas
cld
or
nop
cmp
pop
or
test
mov
sbb
inc
test
test
xchg
lods
push
xchg
cmp
pop
ja
mov
test
pushf
mov
test
lret
lock
push
ljmp
inc
fwait
xor
xchg
xchg
or
sbb
cmp
in
test
pop
adc
mov
push
call
test
xor
sti
push
stos
jns
shll
ja
sub
push
stos
cmp
out
pop
mov
mov
iret
subb
loop
iret
xchg
setp
movl
push
aad
add
xlat
popf
fisttpll
push
ss
movsl
in
jle
stos
pop
out
jns
or
sbb
sahf
and
out
jns
cmp
pop
aaa
jns
push
adc
adc
in
push
insl
jne
xlat
sbb
inc
repnz
cwtl
push
outsb
and
push
stos
out
mov
cmpsb
add
push
xor
mov
and
sbb
jb
push
mov
ret
addr16
and
cmp
mov
inc
adc
das
daa
daa
pop
insb
xor
add
cmp
fiaddl
cmp
mov
mov
jl
test
dec
ja
or
mov
sete
movsb
dec
or
lods
cmp
and
mov
lods
aam
les
cmovle
add
push
jns
das
push
in
cmp
jg
push
aas
test
xchg
jnp
les
or
aas
pop
pop
mov
cmp
or
push
mov
adc
adc
dec
popf
cmpsl
ret
ja
mov
inc
mov
lahf
cmp
pushf
and
vmwrite
cmp
cmp
cmp
sbb
pop
adc
out
push
outsl
sub
add
out
in
mov
ss
lahf
enter
jo
pop
inc
cmp
or
test
imul
jl
xchg
pop
mov
add
scas
push
pop
jb
mov
pop
enter
mov
inc
sbb
leave
mov
jo
cmp
xchg
aas
lock
scas
aaa
sub
cmp
in
push
add
dec
scas
pop
push
add
jmp
mov
iret
test
mov
cmp
or
mov
sub
mov
sbb
shl
decl
mov
push
iret
repz
add
add
add
cmp
push
pop
addr16
cmp
repz
xchg
xchg
mov
sub
or
mov
inc
cmp
shll
fwait
jecxz
outsl
xchg
mov
or
hlt
movb
ror
sub
inc
filds
mov
in
sbb
mov
mov
mov
daa
cmp
je
xor
divl
call
pop
pushl
mov
out
incl
jbe
pushf
cmp
hlt
test
leave
leave
leave
in
mov
mov
sub
iret
iret
in
addb
add
add
testb
xor
mov
push
mov
mov
jne
jge
pushl
rorl
inc
addr16
mov
mov
mov
cs
out
into
push
push
dec
cld
mov
mov
jb
mov
mov
aas
push
outsl
inc
jae
outsb
mov
add
sarb
stos
pop
pop
push
or
stc
sub
or
inc
sbb
jbe
xchg
fwait
mov
fadds
sbb
out
sbb
inc
xor
xchg
inc
pop
in
pop
in
or
nop
pop
scas
hlt
fstps
xor
addr16
lcall
mov
mov
mov
dec
ja
or
push
iret
jae
into
pop
out
addr16
outsl
add
and
outsb
daa
jg
xchg
or
pop
and
mov
inc
push
mov
inc
lahf
int
xor
loopne
lock
add
ja
mov
adc
mov
cmpsl
push
mov
mov
dec
ja
mov
mov
xchg
fwait
in
out
in
mov
mov
jg
mov
inc
cmpb
and
mov
mov
ret
jmp
inc
mov
fldt
and
ja
daa
daa
pop
je
test
out
fisubrs
add
add
xlat
pop
in
mov
inc
fwait
dec
incl
jb,pn
inc
jb
push
cwtl
jae
into
inc
xchg
add
in
in
lods
aas
jl
and
push
call
popf
fadds
adc
inc
cmp
sbb
in
fdivl
aaa
cvttps2pi
jg
mov
jmp
aaa
mov
cltd
mov
cmpsl
mov
andps
leave
dec
int3
xlat
loop
in
stos
pop
leave
inc
adc
mov
mov
inc
leave
in
jbe
mov
arpl
add
test
cmp
cmp
sldt
cs
fmulp
repz
jns
outsb
cmp
das
femms
rorl
out
lock
out
out
adc
inc
bound
outsb
cvtpi2ps
xor
jns
xchg
cmp
dec
push
das
stc
dec
jno
cvtps2pd
sahf
fldt
scas
xlat
xchg
setle
sbb
jns
xchg
mov
lock
xchg
ljmp
sahf
out
xchg
push
add
add
iret
rep
fstpl
pop
inc
or
mov
or
and
sbb
mov
lcall
mov
mov
mov
xchg
mov
decl
cmp
jnp
mov
addr16
out
in
add
xchg
leave
jae
popf
mov
inc
inc
jb
pop
loopne
mov
adc
and
sub
dec
push
add
fmull
dec
dec
mov
add
decl
dec
addr16
aaa
loopne
insl
pop
pop
mov
push
aas
jnp
mov
mov
fsub
paddsb
add
sub
mov
mov
getsec
mov
cmpsl
aas
xchg
dec
mov
mov
mov
outsl
jns
out
test
mov
sahf
xchg
out
pop
rolb
rolb
fsub
mov
cmp
loopne
aaa
or
daa
iret
sbb
push
add
sub
popf
xor
xchg
dec
push
and
leave
in
pop
xchg
cmpb
popf
pop
mov
mov
test
fcmovne
int3
aam
fsub
jb
loop
in
xchg
adc
xadd
nopl
add
das
mov
cmp
inc
rcr
repnz
pusha
dec
push
inc
xor
mov
addr16
addr16
jb
xchg
das
popf
movsl
lods
xchg
xchg
out
clc
rcr
sbb
loopne
xchg
xchg
xor
es
rorl
shrl
ja
addr16
jb
pop
jmp
dec
ja
jno
xchg
jbe
addr16
outsb
push
sarb
fwait
sub
dec
sub
daa
iret
fbstp
fdivl
xchg
aaa
push
je
out
jg
push
add
clts
repnz
repz
lock
inc
inc
ret
cmp
fnstsw
ja
movq
daa
xchg
leave
in
ss
mov
mov
leave
leave
into
loopne
push
push
sbb
or
testl
cmovs
ret
mov
pop
test
data16
mov
mov
iret
inc
mov
mov
repz
push
ret
fbld
jo
xchg
or
js
mov
mov
or
and
les
je
pop
les
hlt
mov
outsl
ja
push
pop
outsb
daa
mov
xchg
jg
test
or
daa
lds
iret
les
pushf
cmp
insl
xlat
out
fisttps
out
jae
dec
ds
adc
vunpckhps
ss
lds
pop
push
in
insl
div
fbstp
cmovno
out
dec
xorps
out
sahf
xlat
popf
insl
idivl
or
mov
mov
push
int3
push
dec
popf
call
out
sub
incl
das
xchg
sub
add
xchg
addr16
jne
lret
add
ja
outsl
pop
mov
add
gs
pop
clts
repz
repz
jne
jge
test
outsb
daa
iret
or
or
pop
iret
leave
mov
push
into
xlat
es
and
cli
jns
inc
jg
daa
push
add
xor
dec
cmp
cmp
aaa
movsb
jl
adc
mov
inc
popf
out
xchg
addr16
daa
rcrb
dec
pop
scas
add
stos
push
aam
add
movsb
fildll
fildll
push
xlat
mov
fistpll
iret
xbegin
test
push
or
jp
leave
pop
inc
enter
enter
dec
pop
xor
orb
add
out
in
pop
addr16
addr16
in
cltd
pop
mov
fucom
mov
test
ror
incl
out
or
add
leave
fcmovne
pop
cmp
pop
dec
cmova
pusha
mov
jle
popf
fsubl
movsl
mov
je
out
add
cmp
xrelease
out
or
iret
repz
or
or
lret
out
or
or
push
lret
xchg
iret
push
xor
lret
xchg
jno
punpcklwd
sahf
add
test
mov
pushf
mov
setl
mov
pop
paddd
lret
pop
cmpsl
cmp
outsb
add
xchg
ljmp
lret
add
xor
pushf
pop
outsl
je
pop
rolb
fistpll
mov
cld
mov
add
or
pusha
stos
dec
aad
lret
scas
inc
inc
push
sub
jbe
addb
lret
cmp
mov
iret
leave
lods
psraw
add
neg
in
enter
int3
or
or
out
and
or
repz
dec
push
or
iret
push
pshufw
cmp
repz
xchg
xchg
adc
cmp
repz
adc
adc
iret
push
mov
es
repz
ficomps
jmp
prefetcht1
push
adc
adc
adc
cmp
cmp
adc
push
or
mov
test
ret
add
pusha
adc
cmpsl
inc
js
inc
mov
or
push
cmp
je
push
notb
dec
or
int
push
imull
nop
push
dec
ja
lahf
aaa
xchg
pop
xorl
dec
fsubs
or
call
pushf
xor
mov
iret
int
mov
inc
jb
pop
repnz
addr16
gs
jg
pop
iret
into
addr16
xor
and
sbb
ret
fisttpl
popa
into
jg
into
jno
jns
inc
mov
or
in
in
or
rorb
mov
rclb
pop
dec
jb
and
iret
xor
pushf
scas
icebp
jbe
push
addr16
iret
jmp
cs
xchg
iret
ja
xchg
xorl
xchg
pop
xchg
into
iret
in
in
push
add
out
add
and
rclb
push
sub
sar
ja
test
rcrb
xchg
xchg
xchg
xchg
rcrb
insb
sarb
mov
je
rorb
dec
movsl
xlat
or
fcomps
jbe
cmp
fsubp
out
psadbw
negl
in
push
rcrl
push
pop
push
push
mov
push
push
or
es
or
cmp
repz
push
xchg
outsb
mov
fisttpll
popa
push
add
add
jns
pop
outsb
pop
xor
cmpsl
call
push
add
or
iret
rcl
pop
or
inc
pop
xor
popa
add
add
inc
popa
lahf
nop
popa
sahf
xlat
pop
rorb
dec
push
push
add
cmp
in
add
cs
add
fwait
push
fistpll
cmovbe
subl
enter
js
pop
mov
xor
add
and
dec
ja
daa
insb
popf
pushf
pop
adc
cmp
les
int3
and
jns
dec
rcll
rcr
or
lea
shll
roll
dec
ja
inc
mov
xchg
add
xor
cmpl
leave
leave
add
xchg
mov
mov
iret
sti
push
je
xor
adc
nop
jmp
cmp
xchg
aam
pop
aam
fs
cltd
push
pushf
aam
cwtl
cmpsb
pop
jmp
mov
movl
xlat
pop
inc
jl
push
imull
adc
mov
rolb
clc
es
inc
into
test
add
mov
sbb
xchg
aad
sbb
and
sub
aad
xchg
push
pop
punpcklbw
push
pop
ja
lock
scas
push
lahf
sbbb
xchg
pop
aaa
jns
pop
add
jns
sahf
or
iret
shll
out
xchg
cmp
aad
js
inc
push
in
in
cmp
icebp
or
pop
iretw
adc
mov
test
cmp
fsubl
sahf
sarb
divl
outsb
inc
leave
mov
addr16
jg
xchg
dec
cmp
push
cmp
in
push
add
clts
decb
inc
sahf
push
xlat
adc
and
in
dec
sub
cmp
push
icebp
in
dec
xlat
aas
push
pop
mov
add
xlat
xlat
push
or
pushl
jb
ja
movsb
lods
in
in
jbe
pop
mov
push
loope
in
scas
push
jecxz
and
pop
not
add
pop
push
mov
fsubrs
pop
push
and
scas
fadd
fildl
cmovg
aas
mov
sbbb
fsubrs
addl
push
leave
imul
pop
mov
add
loopne
mov
cmp
ltr
pop
jb
packsswb
sub
or
xchg
rcrl
or
mov
nop
push
xor
sarl
push
cmpsl
and
hlt
nop
outsb
add
push
ja
sbb
push
mov
pshufw
jae
jp
push
lods
popf
push
jo
add
pop
add
ja
cli
ficompl
cmp
fisubl
xchg
mov
cmp
js
xchg
mov
xchg
jb
scas
fnstsw
add
jno
leave
push
scas
loopne
jmp
xor
stc
add
dec
sahf
out
aaa
or
xchg
adc
add
aaa
jns
pop
add
xchg
xchg
add
or
or
xor
cmp
or
das
or
incb
dec
fstpt
insb
ds
adc
insb
insb
fisttpl
icebp
push
out
ja
leave
leave
add
xchg
jo
rcrb
mov
jb
clts
fsub
add
in
or
lock
add
fistpl
or
insl
inc
cmp
mov
fsubrl
aaa
push
cmovbe
dec
sahf
out
aaa
pop
push
add
push
iret
repz
scas
push
mov
dec
jbe
jne
pop
iret
into
dec
jnp
out
outsb
cs
push
pop
iret
repz
push
adc
repnz
sahf
movups
leave
in
xchg
push
pop
fsubp
fwait
cmp
leave
out
negb
decb
in
xchg
scas
sbb
push
pop
push
push
out
cmp
mov
es
and
jns
xchg
cs
ds
es
sahf
out
fisttpll
sub
sub
jns
out
pop
sub
outsb
out
sahf
out
jbe
jle
stc
mov
setbe
lahf
xor
js
mov
insl
mov
fadds
stc
addr16
pop
gs
das
mov
mov
aas
push
mov
or
int
outsl
add
rcrb
ficomps
xlat
pop
fiadds
mov
insl
ss
jb
jg
add
adc
pop
fbld
mov
daa
mov
jns
outsb
jmp
rcrb
sysret
fisttps
fucomi
in
in
stc
das
add
dec
pi2fd
daa
push
xor
jae
mov
jp
test
adc
adc
jns
test
mov
out
sahf
out
sbb
sbb
sahf
out
sahf
sbb
sbb
sbb
jp
ds
sbb
and
and
and
jns
out
dec
and
and
out
je
subl
mov
fwait
sub
jns
sub
sub
out
fsubrl
jmp
xchg
hlt
add
aas
or
pop
pop
loope
aad
and
lahf
sub
filds
aas
iret
repz
push
daa
pop
es
outsl
and
and
and
repz
cmpsb
pop
mov
mov
cmp
sbb
sbb
repz
repz
sbb
pop
out
ds
adc
loop
adc
iret
repz
sub
fwait
cmp
repz
inc
dec
dec
bswap
jmp
scas
push
dec
pop
pop
push
jle
pushf
pushf
fdivrl
adc
outsb
daa
iret
repz
jg
das
xchg
jns
out
dec
mov
mov
add
loop
loop
fcmovne
stos
in
pop
jecxz
movntq
xchg
wrmsr
add
add
cmp
popf
inc
xlat
push
push
inc
jle
sbb
jg
jecxz
jns
out
or
jg
repnz
sahf
mov
or
repz
push
movzwl
rcll
iret
repz
adc
adc
push
adc
loop
std
pop
jle
in
push
sahf
out
sahf
sbb
sbb
sbb
sbb
sbb
sahf
out
pop
pusha
and
fisttpll
and
das
mov
outsl
mov
in
jbe
movsb
scas
lods
iret
mov
mov
xsaves
rorb
pop
fidivrl
out
push
in
in
adc
js
out
adc
adc
add
lea
sbb
push
pop
in
or
jns
out
or
js
or
dec
pop
in
in
cmp
and
jl,pt
es
nop
das
dec
push
or
xor
xor
pop
sti
jno
mov
push
fildl
out
out
pop
cmp
negb
add
filds
out
push
out
repz
repz
nopl
adc
fcmovne
cs
adc
jae
jb
push
pop
pop
pusha
push
lea
iret
sbb
out
sbb
and
mov
inc
xor
out
je
xlat
pop
push
daa
rorl
add
movsb
sahf
fwait
and
in
in
mov
sbb
leave
leave
leave
leave
and
xor
repz
leave
inc
dec
xorps
cmp
leave
bound
adc
pmulhuw
jbe
mov
in
in
mov
ret
sahf
out
in
rcr
pop
out
out
jns
icebp
cld
and
cmpsb
xchg
iret
enter
test
sub
mov
push
add
inc
pop
dec
sahf
out
dec
push
add
in
pop
insb
je
jl
or
dec
aaa
jns
mov
push
pushf
movsb
dec
lods
push
adc
cmp
mov
sub
pop
scas
push
lock
movsl
adc
in
pop
jmp
out
add
add
add
xor
out
mov
or
push
or
jns
cmp
repz
test
adc
adc
dec
outsb
daa
iret
adc
out
repnz
int3
mov
sahf
or
adc
pop
push
cmp
leave
repz
xor
aas
iret
leave
repz
dec
pop
push
pusha
and
repz
cmp
jbe
xor
and
xchg
fcmovne
lods
mov
sahf
xchg
xchg
ftst
out
cs
cltd
loop
out
add
xor
fstl
jns
pop
add
and
sbb
pop
jmp
cmp
repz
add
add
cmp
addl
or
sahf
or
or
pushf
pushf
cmp
ret
lret
shl
pushf
pushf
pushf
fninit
jmp
pop
loope
leave
repz
add
das
or
fucom
jns
pop
adc
sbb
sbb
jns
and
sub
sbb
xor
dec
cmp
and
push
leave
cmpb
vmread
leave
leave
leave
orb
leave
mov
in
mov
inc
lds
int
or
jl
cmp
xchg
fcmovne
pop
pop
or
push
mov
mov
in
filds
or
push
in
jns
out
push
or
jnp
dec
pop
aaa
prefetch
mov
jbe
jg
lahf
mov
mov
jns
out
aad
loop
in
out
jns
clc
syscall
out
ficompl
repnz
sahf
out
hlt
sbb
add
scas
fwait
mov
push
sbb
and
sub
out
pop
ds
jg
out
lahf
push
mov
mov
sbb
jnp
sub
sub
sub
out
out
mov
jg
cs
out
sahf
das
jne
xorb
repz
xor
mov
leave
lods
mov
les
sahf
rclb
cmp
cmp
cmp
aaa
jmp
out
aas
mov
cmp
cmp
iret
mov
sahf
out
rol
iret
pminub
jns
out
inc
lock
std
inc
aaa
cmp
repnz
pop
lock
and
dec
sub
sahf
adc
add
pop
shrb
in
cmp
dec
mov
jge
sbb
cmpsb
into
mov
lock
jecxz
push
mov
outsl
xchg
push
iret
repz
add
add
ja
cmp
or
test
in
or
cmc
jns
fwait
push
push
push
sbb
out
sahf
out
adc
aas
iret
repz
sahf
adc
adc
adc
outsl
jp
pop
sbb
mov
nop
fwait
pop
mov
fsubrp
in
sbb
push
and
jns
jns
stc
repnz
dec
cmp
bnd
call
rcpps
xlat
pop
repnz
mov
and
ja
mov
push
add
out
mov
ror
xlat
fdivrl
cmp
loop
repnz
iret
jnp
mov
add
push
push
or
cmp
and
dec
xor
cmp
jg
outsl
cmova
pop
push
repz
fistpl
unpckhps
push
cmp
pop
jle
mov
sbb
sbb
ror
inc
hlt
iret
repz
mull
push
loope
push
in
and
out
cmpsb
sub
push
daa
daa
iret
repz
sbb
and
cmp
rep
cmovg
sub
movaps
mov
xor
mov
mov
out
push
add
add
add
jns
out
add
mov
in
out
aas
idivl
lahf
pop
cmc
inc
xchg
out
and
xor
xor
jmp
int
ficomps
dec
cmc
iret
push
cmc
out
pusha
push
push
out
mov
imul
push
or
or
sahf
out
cmp
ficompl
pmulhw
jl
out
lock
adc
idivb
testl
jl,pt
cmp
sub
xor
fsubrp
idivb
out
aas
push
sbb
out
sahf
out
fs
outsl
pop
jns
xchg
xchg
jl
xchg
and
and
outsb
mov
ror
fmul
jecxz
stc
les
loopne
notl
test
pop
and
inc
jg
sbb
pop
dec
test
sub
daa
fldl
mov
lahf
aas
je
outsl
jmp
add
push
cmp
mov
push
add
jbe
sahf
out
addl
out
out
or
push
or
pop
jle
negl
or
jb
adc
in
div
testl
femms
adc
daa
push
adc
xor
push
sbb
sbb
jno
clc
jg
push
test
add
clc
bswap
leave
pushf
fidivrl
clc
dec
sahf
pop
cltd
aas
clc
push
pop
std
mov
or
adc
inc
sbb
sub
cmp
inc
cmovnp
adc
iret
repz
pop
push
adc
adc
popf
jbe
cmp
sahf
out
xchg
sbb
xchg
out
test
jns
out
pop
les
int3
and
aam
and
lret
enter
stc
decl
cli
cli
das
shrb
push
cli
push
add
ds
dec
pop
push
repnz
cmp
bound
ds
fwait
cmp
sub
movntq
cmpsl
push
cltd
shld
cmp
scas
adc
mov
rcr
das
out
nop
popa
jb
jg
cli
cld
cli
enter
or
adc
sbb
cmp
fisubrs
push
pop
xor
out
cltd
mov
popa
sahf
out
sahf
and
and
sbb
dec
lea
cwtl
sti
out
add
addr16
es
inc
inc
decl
mov
mov
sti
inc
sti
add
sbb
cld
das
dec
cld
cmp
mov
cld
and
push
mov
cld
fcmovne
shrl
syscall
cwtl
mov
sahf
scas
or
pushf
je
add
mov
das
lock
sbb
adc
sub
xor
out
sahf
out
dec
push
mov
sahf
lods
sbb
mov
sbb
sbb
daa
stc
std
iret
sbb
cmp
sahf
aaa
pop
push
and
and
sahf
out
orb
sahf
out
sub
jbe
das
sub
sub
cmp
push
das
fdivs
jecxz
mov
xor
out
xor
pop
call
aas
ud0
sbb
or
fmull
cmp
ds
std
pop
in
mov
lahf
push
jne
cmp
out
aas
scas
xchg
std
inc
shrb
loope
xchg
mov
mov
xchg
add
aas
seto
out
outsb
test
mov
push
jns
mov
mov
loope
jmp
out
in
testl
jne
comiss
push
adc
sahf
ja
cmp
cmp
adc
mov
imul
in
jbe
cmp
mov
iret
leave
leave
lods
mov
out
popf
fisttpl
out
icebp
ja
jmp
sidtl
dec
cld
cs
popf
mov
punpcklwd
xchg
out
sahf
insb
sub
sbbb
scas
das
cld
cs
add
sbb
xor
adc
sbb
repnz
xor
lea
mov
cwtl
movsb
lahf
scas
btrl
jb
rcr
dec
mov
aaa
inc
add
popa
test
xchg
mov
mov
add
sahf
add
pop
xchg
in
in
push
pop
lahf
cmpsl
mov
jns
shlb
mov
imul
add
add
fwait
mov
add
sti
pop
repz
xchg
jo
push
aaa
in
shll
jle
inc
iret
test
sbb
adc
push
adc
push
mov
mov
outsb
fisttps
das
testl
jmp
mov
data16
add
es
push
or
add
dec
lods
push
inc
stos
stos
lahf
add
pusha
dec
add
dec
pop
ss
add
lock
pushf
mov
cs
inc
push
adc
push
iret
or
sbb
aad
out
inc
pushf
adc
outsb
pop
inc
or
or
dec
aaa
xlat
push
ficoml
aaa
xlat
add
insl
inc
outsl
das
pop
mov
jbe
push
out
sahf
adc
pop
fmull
sahf
or
or
aaa
or
jbe
xchg
scas
or
daa
in
pop
test
leave
leave
in
xor
addr16
das
push
xorps
cmp
jae
insl
push
and
jb
cs
orl
mov
xchg
sub
in
in
sahf
mov
in
shll
pop
das
cltd
pop
shlb
xor
dec
loope
sbb
adc
adc
xchg
adcb
mov
add
jno
and
push
imul
imul
pop
mov
loope
sbb
testb
add
movsb
add
addr16
mov
andb
fisttps
mov
jb
lahf
loopne
inc
jle
test
shll
mov
mov
add
mov
in
call
nop
pop
jle
adc
push
ficompl
fisttpl
pop
push
pop
fisubrl
xor
fcomp
loopne
jb
jle
andb
movsl
jns
xchg
nop
out
sahf
out
mov
sahf
insb
pusha
push
dec
inc
cmp
sahf
out
cmp
sub
out
sahf
out
and
adc
sarl
or
and
in
and
iret
repz
push
faddl
aam
shlb
mov
nop
into
je
iret
repz
push
pop
push
dec
repz
jns
inc
cmp
sbb
sahf
out
out
and
aam
mov
jns
mov
repz
jo
pusha
push
fmulp
repz
xor
push
or
iret
sarl
call
cmp
mov
pushf
push
je
pusha
sub
add
icebp
and
pop
outsb
pop
fisubrl
cmpb
lock
js
clc
mulb
lret
incl
dec
hlt
xor
jecxz
addr16
sbb
es
push
stos
loope
mov
out
or
imul
adc
xchg
aam
popf
loopne
jo
lock
call
push
mov
push
inc
jg
mov
mov
call
add
mov
inc
sgdtl
push
mov
jg
xor
adc
mov
addb
adc
add
int3
or
in
ror
test
mov
xor
ss
outsl
popl
inc
insl
add
xchg
xor
adc
cs
in
add
jg
adc
outsb
add
stc
pop
mov
jl
out
repnz
adc
es
sbb
into
xchg
sbb
jns
sbb
sbb
push
xor
pusha
and
int
mov
push
adc
ds
and
cmp
fisttps
out
iret
sbb
adc
aam
sahf
out
sahf
rorb
or
adc
pop
inc
sbb
fcompl
cmp
repz
sub
and
jns
repnz
push
and
pushf
out
sahf
adc
and
sbb
clc
aaa
inc
out
subl
pop
outsb
ret
popa
ret
imul
mov
xchg
cld
xor
aas
orb
xorl
fcmovnbe
repz
repz
pop
js
mov
mov
jnp
repz
xor
dec
insl
add
out
fidivrs
push
pop
ja
mov
js
xor
jae
das
push
dec
insb
inc
or
sub
dec
push
repnz
mov
enter
cli
or
or
ret
movnti
adc
inc
lods
dec
push
pop
and
sbb
mov
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
push
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
incl
fisttpll
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
jmp
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
decl
leave
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
jg
lcall
pop
cmpsb
lock
mov
popa
sar
mov
sbbb
xchg
xor
clc
repz
mov
subb
fwait
xchg
and
sti
iret
int3
jbe
add
int3
add
aas
jno
or
mov
mov
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
sbb
lds
mov
insb
scas
add
aas
xor
aad
mov
inc
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sar
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
ljmp
aas
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
cmc
jmp
cmp
mov
cmp
std
xlat
cmp
mov
sbb
decl
rolb
jne
fldt
cmp
jno
shlb
pushl
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
jmp
sub
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
xor
std
jmp
sbb
gs
std
orl
pop
ficomps
frstor
jb
into
or
inc
add
notb
fmull
xlat
pop
push
add
nop
mov
inc
inc
push
dec
aam
filds
pop
dec
dec
inc
push
dec
inc
aaa
xor
mov
mov
jg
mov
imul
inc
aad
mov
jo
popa
push
outsb
jbe
imul
mov
sub
outsl
js
mov
mov
sbb
and
stos
dec
push
push
cwtl
mov
add
sub
dec
push
and
xor
add
push
inc
dec
push
inc
push
nop
sbb
jo
jb
push
lea
inc
test
lods
xor
gs
gs
mov
cmp
ds
arpl
and
mov
dec
sub
dec
outsl
push
dec
pop
mov
push
push
xchg
xchg
add
je
out
xorb
test
adc
das
pusha
add
push
fs
adc
xchg
xor
aas
roll
dec
mov
inc
or
dec
daa
daa
inc
hlt
out
fisttpl
imul
xor
inc
jg
fdivs
jl
inc
jns
dec
lahf
push
xor
les
push
cmp
mov
data16
jns
add
push
test
or
dec
in
inc
pop
and
sbb
sbb
out
dec
push
dec
dec
and
jae
jbe
push
push
or
dec
test
push
mov
xchg
rclb
mov
mov
popf
and
popa
jne
arpl
or
sbb
outsl
dec
dec
pop
xlat
out
add
push
sbb
add
pop
or
or
inc
xchg
push
stos
jbe
add
rcl
fnstsw
cli
dec
sub
mov
insl
shlb
das
addr16
pop
mov
divl
push
negl
imul
push
arpl
outsl
push
jb
or
or
lds
sarb
push
xlat
push
mov
jp
lock
push
aad
and
gs
push
inc
dec
pusha
push
xacquire
sbb
xor
push
push
stos
mov
inc
arpl
push
push
sub
mov
pusha
out
test
pop
jg
stos
pop
insb
outsl
xchg
insl
add
pop
xchg
loopne
rolb
mov
mov
data16
mov
outsl
xchg
insl
add
outsl
ja
inc
xor
ja
add
xor
ja
xor
inc
mov
push
pop
cmp
bound
push
xor
mov
add
icebp
ja
pop
dec
mov
adc
stos
sub
push
and
fiaddl
stos
enter
push
and
jb
leave
dec
sbb
sub
mov
inc
jg
mov
inc
or
iret
aas
incl
pop
dec
push
lahf
adc
enter
and
movsl
stos
inc
out
xchg
dec
mov
jge
es
dec
dec
xchg
sbb
sub
js
xchg
push
dec
lea
cmpsl
mov
adc
dec
outsl
push
shrb
push
dec
push
push
rorl
push
jne
les
outsl
loopne
loopne
loopne
push
sub
outsl
addr16
cmpsb
iret
ss
lea
push
rol
insl
pop
arpl
outsb
sbb
das
xlat
pop
insl
mov
cwtl
jns
daa
adc
push
jl
dec
repz
out
or
iret
repz
mov
jl
sub
aaa
int3
test
inc
insb
push
out
jns
add
js
nop
add
jns
push
and
lahf
incl
inc
addb
xchg
xor
ja
popa
push
out
mov
les
hlt
push
xor
jmp
mov
mov
push
movsb
mov
aad
mov
rclb
mov
sub
mov
nop
adc
push
jno
repz
test
ficompl
jmp
mov
call
hlt
movl
imul
std
in
leave
mov
add
insb
push
arpl
decl
cli
cmc
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
decl
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
mov
fcompl
shrl
cmp
ficoms
push
call
enter
mov
and
mov
cltd
xchg
mov
mov
or
decl
mov
jl
das
adc
stos
sbb
data16
inc
fdivl
pushl
add
aad
mov
mov
movsl
in
lahf
xor
mov
js
out
mov
stc
mov
or
mov
cmp
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
jmp
or
fnstenv
adc
mov
mov
bound
or
adc
gs
aam
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
jmp
outsb
xor
mov
sarb
pusha
fidivl
add
in
add
pop
dec
or
cmp
add
daa
adc
or
decl
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
call
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
pushl
ljmp
fildl
push
fdivl
or
test
fs
ds
or
ljmp
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
jmp
pop
push
test
ss
sbb
push
imul
aam
loopne
rorl
jp
adc
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
inc
fdivrs
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
idiv
decl
ss
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
call
outsl
and
xchg
ja
int3
add
mov
das
es
lds
or
lcall
sub
mov
cmpsl
call
ret
shlb
sbb
ret
es
pushf
outsl
cli
jmp
insl
add
ss
jmp
addr16
jb
push
hlt
orb
call
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
inc
loop
icebp
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
cli
pushl
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
ljmp
mov
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
ljmp
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
pushl
xor
mov
lret
mov
cmpsb
mov
sarb
sub
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
or
out
add
iret
push
add
movsl
dec
call
test
gs
mov
inc
cmpsl
outsl
inc
jne
mulb
imul
pop
sub
aam
imul
mov
fistps
jbe
push
jns
or
std
outsb
arpl
arpl
mov
sbb
insl
jns
add
jne
outsl
insl
addr16
xchg
fildl
xor
out
or
push
popf
testb
mov
xchg
push
outsl
ja
mov
js
inc
insl
bound
inc
out
sub
aad
mov
inc
inc
js
in
bound
push
dec
orl
jno
fistl
and
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
imul
pop
popa
arpl
cmp
arpl
or
xor
dec
popa
add
bound
popa
add
jbe
pop
sbb
jnp
icebp
xor
inc
xchg
notb
inc
or
insb
add
lock
fmull
sub
fbld
inc
rorl
ss
jbe
jnp
push
arpl
popl
add
sbb
ret
lcall
fadds
sub
sub
xchg
inc
sbb
inc
and
xor
inc
fstl
push
rcrb
dec
insb
xor
adc
aaa
je
aaa
push
inc
push
mov
add
ljmp
pop
cltd
and
jae
mov
adc
push
dec
push
mov
nop
lods
stos
aaa
inc
or
fisubrs
xor
ficomps
add
jo
inc
inc
add
ds
jnp
add
mov
iret
int
push
dec
dec
sub
xchg
pop
fistpll
xchg
ja
outsb
jne
lods
mov
and
mov
lret
pop
xor
jne
xor
or
add
ss
push
mov
or
mov
aas
jle
stos
pusha
aaa
cltd
dec
jo
add
mov
dec
or
inc
mov
inc
outsl
pop
mov
add
lahf
mov
fwait
incl
or
xchg
imul
adc
rorb
lds
dec
sbb
adc
push
push
js
popa
jo
lahf
or
add
push
outsl
outsl
test
mov
cmp
jno
lds
and
sub
sub
in
nop
test
pop
cmp
aam
pop
ljmp
xor
sarl
jo
test
xchg
pop
adc
insb
jns
das
mov
xor
popa
jb
test
addr16
adc
push
nop
adc
insb
or
cs
test
clc
inc
push
bound
adc
xor
ret
test
ja
pop
adc
xor
xor
add
adc
mov
aaa
pop
pusha
jl
adc
loopne
push
pop
pop
orb
scas
addr16
sub
and
mov
scas
xchg
fisubl
xchg
movsl
sahf
aas
mov
popa
adc
jg
push
outsl
rcll
and
aaa
hlt
mov
insb
mov
push
loop
aaa
pushf
and
cwtl
mov
adc
dec
lds
daa
push
inc
lds
aas
pop
inc
and
and
and
add
add
add
loopne
push
filds
lahf
es
dec
add
cld
rolb
movsl
push
mov
ljmp
inc
cli
out
pop
mov
movsl
popf
xchg
dec
dec
iret
adc
lods
cmpsl
out
jmp
into
xchg
aad
das
mov
jmp
xlat
arpl
mov
sub
and
xor
jmp
or
les
pop
adc
sub
lcall
inc
cmpsl
aad
inc
pop
lcall
cmpsb
inc
inc
imul
sbb
int3
icebp
lock
mov
icebp
push
push
test
ret
push
and
out
push
mov
pushfw
scas
incl
dec
mov
jge
js
cmpb
sbbb
mov
jp
mov
cmp
jmp
loop
clc
imul
or
jne
rolb
int3
pusha
and
inc
and
pushl
orl
mov
xchg
inc
jp
fisubrs
pop
iret
lods
cmp
in
xchg
push
das
push
xchg
sub
clc
leave
xchg
cld
or
jp
das
lods
mov
fs
incl
sub
xor
sub
pop
jno
jp
lret
fs
jbe
xor
or
lcall
cltd
adc
pop
and
jns
mov
decl
stos
sbb
mov
sbb
mov
fimull
clc
cmp
xlat
into
or
decl
mov
jne
or
add
inc
lods
jbe
sbb
dec
movsl
js
negb
cmpsl
sti
xchg
and
cmc
push
push
xor
es
adc
daa
rep
popa
aas
gs
in
dec
fsubs
jle
or
dec
int
jns
mov
xchg
jnp
xchg
fcomip
push
jo
xor
enter
dec
xor
in
rorb
out
or
fldt
push
ljmp
and
sbb
push
dec
xchg
pop
jo
out
ss
lea
or
idiv
xchg
ljmp
jmp
outsb
imull
xor
rcrl
test
mov
or
cmp
iret
fcoms
out
xor
idivl
cmp
pop
jbe
fmull
ffree
push
push
inc
push
jge
lret
xor
or
aaa
dec
sbb
cmpsl
inc
fbstp
jbe
xchg
mov
incl
adc
movsl
popa
mov
test
dec
in
inc
fwait
aad
nop
idivb
mov
ljmp
adc
or
mov
mov
mov
insw
ss
mov
xchg
cmpsb
xchg
les
xor
ds
cld
decb
dec
sub
fstpt
idivb
ret
jns
fsubl
pop
cli
es
test
orb
mov
cld
addb
pop
mulb
repnz
testl
fidivs
jle
cwtl
cmp
popf
sbb
cmpsb
inc
lea
arpl
jmp
xchg
rol
pop
sub
jg
sub
dec
loope
adc
cmp
push
test
out
add
call
pop
ljmp
pop
sbb
shll
sub
cmp
popa
addr16
mov
sbb
and
dec
std
inc
repnz
sti
popf
rolb
faddl
loopne
xchg
add
test
cmpsb
adc
in
fildl
mov
push
dec
clc
ljmp
cli
xchg
or
decb
pop
rorl
xor
adc
sbb
ret
scas
sbb
addr16
sub
dec
add
jmp
and
inc
xor
imul
adc
dec
scas
cmp
add
lea
jbe
mov
lea
clc
pop
lock
adc
inc
pop
jbe
cmpsb
push
push
div
mov
pop
or
mov
out
loop
lret
mov
decl
dec
out
adc
ljmp
cli
decl
in
mov
pushf
inc
dec
cmp
lods
sbb
aaa
adc
data16
fcom
lret
lret
call
rolb
jp
scas
pop
insw
fdivl
jge
mov
test
testl
sub
jecxz
jecxz
in
xchg
test
in
jmp
divb
mov
int
sahf
jmp
enter
xor
jle
lds
dec
push
leave
dec
jp
cmp
or
jecxz
loop
outsb
loopne
add
jl
adc
xor
ljmp
sub
jb
sti
mov
mov
lock
add
mov
incl
movsb
dec
in
xchg
or
pop
insb
cmp
mov
lds
cmp
pop
cmp
scas
pop
testl
add
or
add
jbe
imul
lret
inc
in
xor
outsl
cli
mov
push
shrl
or
dec
and
push
mov
call
mov
repnz
sub
aas
mov
pop
sub
outsl
mov
fdivs
mov
and
fldenv
xchg
clc
inc
cmp
cmp
jmp
movsb
arpl
lcall
or
jbe
push
in
mov
sub
stc
push
clc
mov
scas
sar
ljmp
xor
fadds
and
out
mov
cmp
ljmp
ret
xor
mov
or
scas
jo
addr16
push
mov
mov
imul
adc
lcall
addl
aaa
popa
insb
xchg
mov
test
scas
xor
and
and
incl
or
adc
lods
sub
outsb
and
in
push
imul
mov
sub
adc
push
test
inc
push
and
add
lret
lods
stc
lcall
testb
push
adc
push
cmp
push
sub
sti
lret
ret
push
or
ljmp
in
adc
adc
call
mov
lock
adc
imul
outsl
arpl
ficoml
call
stos
cmpsb
stc
ficoms
fisttpl
pop
scas
pusha
pushf
and
jo
jp
jns
or
pop
jns
ljmp
sar
xorb
jle
call
inc
es
sub
adc
lods
mov
jle
xor
cmc
or
jg
sbb
inc
movsb
jnp
testb
jl
push
test
jmp
inc
inc
push
lcall
jb
loope
sub
into
push
jb
jp
mov
sbb
jle
lcall
xor
ljmp
ja
push
loop
xchg
das
jns
xchg
or
xchg
adc
ljmp
mov
dec
ja
inc
mov
dec
dec
mov
inc
clc
inc
jg
add
adc
addb
int3
sbb
nop
call
test
incl
mov
outsl
gs
cld
jge
lgs
subl
cmp
mov
in
mov
icebp
aaa
sbb
xchg
xlat
pop
sub
les
in
jnp
add
ja
push
add
adc
pop
pop
inc
ja
jb
xor
sbb
sbb
pusha
shrl
stos
jg
xchg
repnz
sbb
inc
inc
mov
dec
imul
cltd
jbe
push
pop
in
sub
pusha
sbb
push
jp
das
nop
pushf
jnp
or
inc
xchg
out
xchg
pop
xchg
sarb
xor
outsb
or
mov
mov
lea
call
cmp
les
pop
test
fs
jle
testb
jb
or
call
cs
leave
mov
xor
fucomi
jb
ljmp
lcall
cmpsb
fwait
les
out
pop
pop
int3
adc
push
insb
push
pop
sahf
inc
adc
js
imull
or
cmp
aaa
das
inc
mov
aam
xchg
test
xor
call
scas
and
test
scas
push
lret
pusha
jl
jae
add
les
push
mov
test
sbb
fmuls
push
add
and
push
jns
jmp
clc
pop
xchg
test
sti
std
lahf
lahf
lds
mov
lock
leave
roll
push
insb
cmc
call
dec
cmp
lods
pop
cmp
mov
in
lds
and
test
ljmp
mov
fists
dec
ljmp
or
ja
loop,pn
movsb
jmp
mov
push
std
decl
push
add
int3
or
and
fnstsw
leave
sbbb
mov
push
mov
imul
xchg
test
and
fstl
mov
mull
jo
call
pushf
jmp
xchg
ss
test
pop
jge
test
incl
mov
jmp
ret
pop
jmp
rcl
inc
dec
shll
std
out
dec
daa
fidivs
inc
cld
ljmp
cwtl
aam
push
push
push
mov
xchg
dec
cmp
cmp
pop
mov
mov
push
addb
std
into
mov
lahf
lea
out
daa
inc
pushl
fs
cs
sub
in
lret
call
mov
pusha
add
ljmp
clc
lret
mov
and
add
add
in
jae
add
jmp
sub
cmp
les
or
pop
mov
inc
xor
movsb
ds
mov
pushl
adc
inc
dec
je
push
sahf
in
mov
cmp
mov
incl
mov
data16
inc
jns
subb
in
cwtl
xor
decl
pushf
xor
or
jno
jnp
jno
cmc
jb
jns
imul
repz
jo
inc
jp
jg
lcall
jmp
add
jb
lods
pushf
push
pushf
mov
xchg
pusha
pusha
jg
xor
pushl
imul
push
ja
jecxz
loop
sarl
cwtl
mov
adc
scas
push
ljmp
decl
jnp
repz
fidivrl
testl
jmp
loopne
push
or
inc
push
add
popa
cltd
gs
and
xor
lcall
add
push
hlt
shll
test
jbe
test
mov
shlb
jnp
jb
jne
cmpsb
dec
inc
and
ljmp
jp
ficompl
mov
repz
std
xchg
xchg
push
sbb
pop
inc
pushf
cmpsb
andb
fistps
push
in
or
pop
mov
mov
fists
setnp
bound
cmp
adc
pushf
mov
es
ljmp
ss
dec
jp
aas
push
add
push
mov
add
rorb
iret
mov
and
push
jle
sbb
mov
ljmp
mov
adc
and
mov
lret
outsl
lahf
aaa
addr16
orl
push
and
mov
je
lret
sar
or
sub
dec
in
dec
fnstsw
jecxz
sub
sbb
inc
dec
popa
dec
push
adc
jb
adc
sahf
leave
push
cmp
popf
inc
fstl
jmp
mov
daa
cmp
fdivs
jg
mov
sub
scas
jo
aaa
mov
inc
dec
stos
xchg
ficoms
andl
jg
clc
pop
cmp
in
xor
xlat
jge
push
scas
xchg
push
ja
cmp
pop
adc
incl
arpl
daa
cs
cmp
adc
push
ljmp
mov
bound
arpl
pop
and
loope
cmp
xor
inc
or
mov
mov
icebp
push
fistpll
stos
jg
out
ret
and
enter
jmp
mov
das
mov
flds
and
xchg
adc
ffreep
cmp
push
mov
mov
incl
mov
cmpsl
imul
dec
out
shlb
insl
mov
jmp
leave
clc
mov
and
mov
iret
mov
in
outsl
rclb
dec
ror
int
decl
pop
pop
fldl
std
ret
aad
xchg
test
mov
mov
mov
push
int
call
dec
add
in
ret
test
xor
loope
std
cmp
jb
sahf
mov
mov
incl
mov
jb
scas
add
jo
dec
imul
push
add
jg
mov
cs
xor
jmp
add
aam
mov
pop
push
add
xchg
dec
fisubrl
jmp
jl
and
ljmp
mov
icebp
and
push
mov
inc
out
leave
cld
idivl
ljmp
mov
pop
mov
xor
xacquire
test
sbb
add
incl
adc
pusha
lret
insl
add
jp
mul
bound
mov
stos
hlt
dec
pusha
dec
xor
xor
adc
push
inc
add
push
lcall
add
sub
dec
push
cwtl
cmp
incl
out
mov
and
mov
adc
insl
push
jno
rcll
shrb
pop
push
popa
xor
mov
inc
cmp
imul
inc
dec
les
push
adc
lcall
mov
sbb
mov
sub
push
aaa
cmpsb
xor
nop
push
dec
clc
mov
cmp
decl
or
jg
jl
addr16
or
in
xor
mov
stc
mov
decl
in
ds
mov
pop
in
cltd
nop
mov
lahf
add
sbb
dec
movsb
fbld
xchg
sbb
incl
cld
mov
cmp
and
aaa
cmp
jg
jb
sbb
aaa
pop
jmp
aaa
xchg
std
add
push
inc
stc
adc
mov
rcrb
ljmp
sub
das
xchg
and
inc
jp
jmp
or
cmp
dec
addr16
sub
cmc
call
loope
iret
aas
int
ss
test
icebp
loopne
jae
mov
stos
incl
stos
out
sti
mov
gs
ret
lds
push
cs
mov
or
cmp
jae
mov
outsb
fucomip
ror
add
and
xchg
rclb
lcall
punpckhwd
fsubl
inc
pop
push
repz
divl
flds
xor
sub
inc
imul
push
movsl
outsb
out
mov
call
arpl
inc
insb
sbb
fadds
add
into
jle
xchg
adc
jmp
pop
cltd
inc
push
out
sbb
pop
shll
ljmp
pop
sub
mov
rcrl
xor
sbb
clc
jge
sti
xor
test
mov
ss
push
lock
cs
fsubl
lret
iret
popa
jg
pop
push
sbb
ljmp
ljmp
xchg
fistps
push
stc
das
vxorps
dec
in
inc
jmp
sahf
dec
mov
dec
mov
sbb
mov
shll
sbb
xchg
iret
sbb
out
clc
pushl
sbb
in
fs
aas
inc
push
in
sbb
jmp
mov
in
jns
jae
pusha
sarl
mov
push
jecxz
inc
inc
cli
fiaddl
stos
mov
stc
ljmp
imul
daa
fwait
add
dec
sahf
ljmp
shll
adc
pusha
movsl
lods
hlt
loopne
ljmp
cmc
ja
adc
inc
aam
inc
jne
pop
sbb
lods
repnz
out
xor
repnz
mov
inc
sbb
mov
mov
dec
jnp
ljmp
lcall
je
xor
push
in
repnz
xor
scas
mov
adc
mov
enter
pop
addr16
jg
or
in
xchg
jno
xchg
mov
adc
and
stos
stos
dec
cmp
and
subl
faddp
add
push
stc
cmp
adc
fucomp
adc
inc
cmpl
cmp
or
sub
push
out
addr16
cmpl
call
loop
add
mov
push
int3
lock
adc
and
cli
and
pusha
mov
adc
mov
aam
fldenv
lret
pop
jp
std
ficomps
fdivrl
out
push
push
mov
adc
mov
ljmp
sub
or
fwait
cmpsl
repz
mov
mov
stos
jl
mov
lcall
mov
pop
out
fsub
jp
mov
incb
push
imul
data16
jmp
int3
dec
mov
jl
adc
int3
and
add
popl
mov
jl
and
call
jl
daa
popf
fs
cwtl
outsb
insb
jle
add
out
push
or
push
or
test
lcall
cld
jb
cmp
stos
or
xchg
xchg
jp
xor
shrb
sub
fnsave
push
or
scas
push
jnp
test
mov
cmp
jmp
cmp
sub
lcall
cmc
imul
mov
sub
das
movsl
xor
fldenv
aad
mov
ljmp
lret
aad
jge
jge
cmp
div
mov
sub
fwait
movsb
adc
or
adc
daa
in
add
loopne
sub
dec
mov
ljmp
pop
fdivrp
stc
push
dec
sub
pop
fiaddl
int3
mov
in
pop
push
inc
cmp
ljmp
mov
push
dec
jns
data16
push
jbe
dec
imul
incl
dec
mov
ficompl
out
std
das
xchg
adc
sarl
sar
push
jmp
js
pop
or
imul
mov
aaa
scas
iret
in
rcr
repnz
cs
leave
in
sbb
mov
jle
test
hlt
pop
cli
pushf
clc
sub
testl
ljmp
subl
call
add
cltd
push
dec
jp
pop
shll
mov
lret
repz
push
xchg
stos
xor
lods
cmpb
pop
int
push
sub
stos
push
into
xor
pop
fcom
cmp
add
cmp
pop
add
sbb
xor
pop
arpl
iret
lahf
aaa
sub
mov
pop
dec
dec
pushf
cwtl
aam
decl
shll
testl
mov
jns
inc
xor
cltd
out
xchg
mov
decl
mov
sub
pop
dec
into
xor
movb
sub
cmp
ja
jnp
out
mov
lea
test
inc
dec
and
sbb
popa
lods
pushf
std
aas
hlt
fldenv
sub
in
jge
popf
sub
test
daa
dec
filds
js
jecxz
dec
or
lcall
lea
adc
dec
movsb
jne
add
xchg
adc
fnstsw
add
mov
decl
in
incl
out
sub
jecxz,pn
or
cmpb
sti
cld
jns
lcall
jmp
mov
cwtl
insl
pop
push
pop
test
test
daa
mov
mov
mov
add
xorb
inc
insl
cld
add
cmp
call
clc
mov
add
dec
rcrb
mov
pop
in
xorb
mov
push
in
adc
jp
mov
test
stos
push
mov
inc
daa
shlb
inc
mov
adc
or
mov
pop
loopne
push
inc
push
dec
push
adc
sti
pop
shlb
jg
pushl
sub
push
jecxz
repz
pusha
lods
jmp
jb
mov
adc
jmp
scas
dec
push
push
lea
iret
outsl
test
outsl
or
loope
push
xorl
mov
andb
mov
push
mov
adc
push
jnp
in
sahf
repz
mov
sub
add
pusha
xor
push
test
lcall
ljmp
pop
fistl
xchg
ja
fisttpll
daa
icebp
dec
jo
and
cmc
cmp
les
inc
mov
popf
xchg
movsl
loopne
mov
cmp
inc
mov
inc
repz
sti
inc
xchg
dec
xor
jmp
xor
or
jo
sar
insb
and
jle
daa
outsl
out
icebp
jmp
push
scas
sbb
test
jb
dec
mov
jg
aas
movsl
jle
cmp
or
dec
mov
push
incl
sub
sbb
int3
imul
jb
inc
mov
call
xor
add
jae
test
arpl
sbb
fildl
push
mov
ljmp
dec
int3
scas
inc
std
adc
jo
mov
add
mov
loop
sti
les
pushl
mov
adc
inc
setb
xor
cmp
pop
incb
adc
jmp
lcall
add
jle
nop
subl
sti
stc
jge
test
jb
xchg
cmc
cmp
mov
cmc
into
dec
bound
stc
fdivs
jmp
push
pop
or
mov
sbb
jg
decl
jecxz
inc
xor
adc
cmp
fmulp
outsl
outsb
xchg
mov
dec
pop
lods
pusha
jge
out
cld
jge
push
xor
or
jne
and
ljmp
into
sti
hlt
push
imul
or
jmp
pop
ficoml
xchg
out
outsb
inc
pop
xchg
xorb
test
mov
xor
inc
mov
pushf
jo
dec
mov
push
out
sbbb
or
mulb
pop
add
decl
sub
mov
xor
imul
pop
xchg
jne
dec
cmpsb
cmp
cmpsl
fstps
dec
dec
leave
xor
dec
mov
xor
call
scas
jbe
ljmp
inc
or
push
jns
pop
sbb
ss
stos
push
dec
jmp
js
cmp
jg
add
mov
les
leave
jb
pop
mov
xchg
adc
ljmp
rcrb
inc
iret
mov
out
pop
xorb
sbb
jnp
aas
sub
sub
lcall
inc
dec
pop
lock
hlt
mov
mov
enter
das
hlt
mov
idiv
pushl
icebp
call
cmp
test
int
out
add
cwtl
push
cli
in
sbb
add
jns
clc
inc
pushl
push
mov
push
jns
inc
cmpsb
movsb
enter
lods
test
sub
mov
and
cmc
inc
cs
ljmp
adc
or
dec
and
mov
sub
pop
aaa
fxam
sti
jp
jg
mov
repnz
mov
cmpsl
addr16
ret
js
mov
incl
pop
inc
jns
iret
jns
out
push
out
and
jmp
out
es
lcall
in
stos
xor
xchg
roll
test
pop
lcall
pop
add
lahf
pop
cmc
outsb
out
mov
lock
decl
aam
aam
push
ja
inc
dec
dec
lcall
aam
test
xchg
xlat
pushl
std
imul
ss
out
xor
adc
and
or
jo
push
dec
xor
into
dec
and
fdivr
ljmp
push
ds
divl
push
sbb
cltd
dec
lea
pusha
and
inc
xchg
pushl
cs
stc
fnstenv
mov
xor
sbb
arpl
cmp
lcall
loopne
js
hlt
les
aas
pop
push
sub
rcrb
jmp
sbb
loope
mov
cmp
bnd
cmp
sar
pop
cld
push
int
dec
addr16
push
std
adc
dec
adc
sbb
xchg
jb
pop
fcmovu
imul
jmp
jp
mov
inc
in
cltd
cmp
mov
cmpsb
inc
out
lock
adc
adc
push
jo
leave
test
out
es
movsl
outsl
mov
jg
das
lds
mov
push
ficomps
mov
pop
lock
out
pop
loopne
cmp
and
sbb
mov
and
add
lds
or
mov
jmp
or
cld
fcomip
cmpsb
int3
or
or
xchg
aad
sub
jp
jecxz
jmp
push
sarb
ret
fs
rclb
enter
and
fdivs
decl
adc
popa
xor
int
ja
int
leave
sbb
and
rcrb
pushl
andl
pop
mov
jbe
pushf
inc
pop
loope
mov
lcall
add
push
shlb
jge
push
sbb
imul
sbb
inc
xor
popf
psllw
sbb
out
cwtl
mov
or
call
pop
mov
pop
jb
adc
mov
cmpsb
push
shrl
lock
lcall
rcll
or
pop
inc
ficoms
sbb
mov
mov
xchg
pop
cmp
fistpll
and
push
cs
mov
lods
xchg
xchg
jbe
aam
push
in
rorl
push
movsb
mov
js
pop
xchg
cmpb
sub
aas
inc
or
sbb
pop
insl
orb
xchg
inc
loope
lods
ficoml
pop
aad
insb
mov
dec
pop
fisubrs
push
cmp
jb
shl
shl
mov
mov
orl
lock
inc
lds
je
mov
add
pop
cmpsb
or
jae
pop
lcall
inc
out
scas
loop
dec
jmp
fs
test
clc
inc
mov
mov
test
incl
jnp
xor
and
adc
ss
xor
cmc
rcrb
call
cli
ds
add
rolw
pop
rorb
into
sub
sahf
stos
mov
add
clc
or
sub
mov
jg
xor
push
cmp
jnp
xor
es
popa
sti
jl
loop
aaa
cld
lcall
je
jl
cmp
dec
xor
mov
mov
push
cmp
jmp
pushf
cltd
dec
xlat
aad
cmpb
movsb
or
out
inc
iret
subb
jmp
in
lcall
mov
shld
iret
cmp
fwait
xor
pop
ljmp
pop
movsb
loope
inc
addr16
adcl
fsubl
out
dec
and
adc
jns
xchg
add
mov
jmp
push
std
andl
nop
psubw
ficoms
out
pop
cmpsb
decl
lret
enter
push
pop
in
mov
ljmp
and
ljmp
clc
cmp
and
hlt
mov
std
mov
inc
rcr
mov
decl
xor
fildl
xorl
test
ljmp
jns
stc
int3
into
pusha
icebp
xchg
lcall
add
sbb
popf
lea
add
enter
popf
cmc
aas
bound
add
call
or
pop
mov
inc
lret
pop
mov
orb
mov
lcall
dec
out
scas
imul
add
jmp
xchg
adc
daa
popa
jbe
imul
pushl
mov
int
or
dec
mov
xor
mov
cli
mov
dec
mov
insl
jmp
sahf
ljmp
or
inc
mov
mov
nop
mov
cwtl
adc
sbb
ret
leave
shll
icebp
ds
incl
push
out
mov
das
xchg
cmp
nop
roll
fwait
sbb
mov
mov
mov
scas
mov
mov
popa
cmp
hlt
icebp
loopne
push
loopne
and
js
jl
sub
add
test
call
negb
push
mov
ja
fcom
cmp
rolb
jns
imul
or
pop
or
test
enter
mov
dec
jle
sbb
test
jmp
pop
push
icebp
pcmpgtd
push
pop
mov
movsb
push
mov
xchg
sbb
jg
mov
inc
jge
ret
ss
dec
subb
lahf
enter
dec
push
sarl
rcrl
imul
in
mov
leave
cmp
xor
mov
pop
aas
js
mov
ljmp
leave
out
sub
pop
or
xor
mulb
daa
cmp
push
shl
test
incl
out
lahf
mov
stos
mov
out
sub
xor
jg
lds
xlat
mov
dec
mov
aad
hlt
lock
ret
movsb
in
inc
mov
in
sbb
ljmp
push
cmp
shrb
cld
orl
cltd
lods
sbb
push
push
dec
mov
pushl
cwtl
pop
stos
xchg
mov
test
cmp
jb
nop
std
mov
dec
dec
mov
push
ljmp
sbb
iret
rcrb
dec
loopne
pushl
punpcklwd
xor
cmc
fcmovu
and
lock
xor
and
xchg
inc
std
sbb
fiadds
inc
rolb
push
lock
call
stos
pushl
inc
sbb
mov
les
dec
rcll
in
or
incl
cld
fbld
roll
cmp
xor
push
pop
ss
add
decl
pop
imul
sub
mov
in
mov
mov
jbe
aad
lcall
sbb
sbb
lock
fsubrs
iret
mov
jae
mov
cmp
pop
sahf
pop
repz
xchg
push
test
push
lcall
inc
jl
fwait
aad
xchg
push
int
loope
add
xchg
inc
inc
cs
push
enter
mov
mov
add
jecxz
aaa
ljmp
push
lock
add
xchg
mov
shlb
xlat
fisubrl
test
pop
insb
cmp
sahf
mov
sbb
dec
cmp
pop
jg
cld
lcall
push
add
int
or
or
ret
in
cmp
fldt
xchg
lret
jmp
add
ror
xor
cmc
pop
jge
fwait
leave
cmpsl
cli
add
icebp
mov
lret
data16
arpl
fcmovne
mov
fldt
add
outsl
lret
and
dec
push
or
lods
fistl
cmpsb
mov
add
push
call
std
sub
fsts
lea
pop
adc
leave
push
or
repz
and
jge
xchg
incl
mov
mov
add
pop
sti
sbb
pushf
addr16
cs
fcomp
aam
test
jl
out
ss
jnp
jo
xlat
mov
xchg
pop
nop
in
popf
jp
jmp
inc
fwait
jl
mov
cmpsb
ret
pop
jnp
pop
std
fisttps
dec
lcall
idiv
ljmp
sub
outsb
adcl
adc
sub
mov
mov
mov
cs
dec
mov
inc
das
xlat
test
mov
ss
dec
insl
cmp
mov
adc
les
sub
ficompl
adc
std
add
jno
add
push
xchg
arpl
adc
fnstcw
cmp
out
cli
out
test
xchg
sbb
fdiv
mov
pop
jbe
daa
call
fcomps
pop
or
push
sar
test
aad
and
pushl
add
mov
fwait
cmp
hlt
ret
into
shr
and
imul
lcall
push
or
fwait
movsl
cli
repz
stos
jne
in
and
cmp
xor
aaa
cld
add
jbe
adc
jae
sbb
insb
ljmpw
ljmp
daa
popf
mov
cmpsl
xchg
or
add
sbb
mov
pop
mov
lcall
es
jnp
test
xor
cltd
sub
cmc
out
sbb
lcall
lods
in
notl
or
mov
and
or
or
sarl
std
dec
and
dec
push
stos
xchg
dec
test
jnp
lock
pushl
stos
les
in
orb
mov
call
decl
add
cld
inc
adc
ja
enter
rcll
pop
cwtl
add
add
fdivs
lea
out
test
fsubl
xchg
popa
fcomip
jmp
sbb
sub
xchg
lret
push
les
jmp
cwtl
add
ret
cld
jge
push
sbb
push
cmp
sbb
or
lret
movsb
insb
sbb
pop
xchg
mov
jmp
xor
push
pop
mov
cmc
call
inc
fucomp
es
rcrl
or
adc
roll
dec
insb
mov
pop
ljmp
mov
xchg
outsb
jecxz
push
in
iret
sbb
lret
cmpsb
push
test
loop
in
mov
decl
in
pop
test
and
pop
mov
in
mov
adc
mov
inc
pop
mov
incl
push
addr16
scas
inc
cmpsl
std
mov
in
or
inc
inc
cmp
int
int3
ret
out
ret
mov
jle
jmp
push
sar
mov
or
or
and
push
xchg
data16
es
and
decl
mov
stos
popf
cmp
pop
iret
fidivl
and
in
bound
aam
test
jns
cwtl
popa
incl
in
dec
in
jo
jp
dec
popa
leave
rol
in
add
or
mov
mov
sbb
das
clc
in
inc
mov
xchg
outsb
repz
cmpsb
sbb
sub
inc
cmp
add
roll
aas
and
or
in
jae
mov
cmpsl
mov
repz
negl
push
jg
je
sti
test
movsb
repnz
pop
add
mov
test
cmp
inc
daa
fists
cmp
jne
pushl
mov
jecxz
ds
insl
scas
or
mov
cmp
and
fwait
shrl
jg
mov
addr16
add
or
cs
shrb
adc
loop
cmp
ljmp
fidivrs
xor
ss
in
mov
or
stos
nop
sub
lret
call
xchg
jecxz
jno
gs
jge
cmpsb
rcrb
xor
push
dec
bound
roll
inc
out
pop
mov
mov
mov
cmc
ss
cmc
callw
pop
pusha
and
or
cli
jno
idivl
aas
incl
inc
mov
jp
or
adc
shlb
cld
pop
sub
mov
sbb
pop
cmpsl
imul
shlb
sarl
iret
pop
or
adcl
decl
sti
rorl
cmc
jmp
jmp
sub
pop
cmp
std
ja
mov
push
loope
cmpsb
scas
or
add
ljmp
sbb
loopne
sti
into
aas
inc
push
dec
xchg
push
cmp
mov
and
lcall
inc
push
ljmp
inc
pop
mov
mov
lock
jne
inc
test
ljmp
popf
inc
mov
mov
sub
sub
ret
pop
les
outsb
rcrl
jmp
mov
call
ja
out
dec
xor
lea
jb
data16
lret
ja
mov
jl
out
mov
popa
nop
sbb
je
into
xor
hlt
std
sahf
push
push
fldcw
push
add
pop
lods
adc
fwait
jae
cmp
or
arpl
and
jmp
jg
pop
into
test
shrl
adc
enter
or
cli
incl
iret
jno
adc
cltd
xchg
daa
mov
repz
iret
sbb
lcall
test
pusha
subl
push
adc
aas
call
shl
call
adc
push
dec
fcoms
ss
mov
fisttpll
pop
shll
call
mov
jae
cli
inc
push
push
push
jecxz
sbb
sbb
ret
out
fdivrp
decl
push
xchg
mov
mov
xor
jmp
pop
jnp
cwtl
data16
sub
and
enter
or
dec
mov
push
call
shll
int
out
and
cmp
mov
sub
shll
ret
push
shlb
lahf
emms
insb
rorb
sub
pop
mov
xchg
daa
in
jg
adc
inc
adc
fidivrs
push
or
movsl
xor
subl
and
decl
sub
pop
xor
xor
and
xchg
mov
sub
pop
xor
int3
dec
mov
hlt
out
addr16
push
sub
data16
mov
jnp
add
or
mov
pusha
sbbb
pushl
xor
xor
aaa
jg
lcall
cmp
rorb
outsl
movsl
xor
addr16
mov
fwait
xchg
leave
repnz
lods
push
jp
mov
std
ss
xchg
lea
aad
out
jnp
and
fistpll
cmpsb
sub
push
in
mov
dec
incb
sbb
cmp
pusha
addr16
mov
mov
fmull
inc
repz
decl
push
lock
cwtl
sahf
sbb
dec
cltd
or
cltd
pop
lods
push
mov
call
add
xchg
leave
lahf
js
xchg
lods
or
and
dec
hlt
dec
inc
inc
cs
stos
adc
lcall
pop
jl
mov
test
xchg
dec
loopne
idiv
jp
push
and
outsl
aad
nop
insl
pop
js
dec
mov
pushf
sub
in
or
rorb
adc
cmp
shrb
cmpsl
jae
flds
push
cmpsb
mov
clc
or
ljmp
and
dec
into
cmc
sbbb
mov
or
shll
cmp
push
loope
dec
fistl
inc
cmp
xchg
stc
addr16
hlt
pushl
pavgb
push
aad
out
add
nop
mov
sti
out
add
inc
xorl
cmpl
mov
jo
add
xlat
xchg
in
fiaddl
aaa
xor
scas
aam
and
and
lret
int
fbstp
fsubrs
adc
test
mov
jmp
xchg
jnp
pop
inc
insb
cmp
ret
clc
jno
adc
pusha
ret
aaa
js
adc
movsl
inc
mov
lcall
push
push
ret
dec
fcmovnu
xlat
lods
jns
jp
stos
stos
dec
and
loopne
or
xor
jb
scas
ljmp
jle
xchg
dec
pop
xchg
into
xchg
out
pop
insb
xorb
xchg
fldcw
jecxz
xchg
pop
ljmp
clc
lcall
mov
scas
testl
cltd
or
dec
lods
outsl
cld
and
ljmp
adc
or
mov
xchg
jnp
jnp
push
clc
xchg
dec
pop
test
inc
mov
add
outsl
lcall
daa
xor
popa
decb
xchg
cwtl
adc
pop
out
or
lcall
lahf
imul
pop
sahf
xor
fwait
push
fadds
add
mov
and
cmp
outsl
lcall
iret
xor
js
hlt
pop
icebp
adc
inc
movsl
jne
decl
cmp
fmuls
pop
imull
loopne
xchg
mov
lods
idivb
shrl
dec
rorb
sbb
or
js
xor
sbb
iret
pop
xchg
shl
call
sbb
shlb
andb
insl
pusha
adc
pop
aad
mov
add
push
or
push
fs
xor
mov
call
ljmp
scas
shl
and
inc
popf
mov
pushf
ret
sbb
cmpsb
add
mov
ja
jge
stos
insb
fildl
mov
mov
cli
fmull
pop
cmp
add
sub
dec
arpl
adcb
and
decl
pop
outsb
lods
xlat
mov
je
jne
outsb
sub
add
pushl
iret
xor
push
push
xchg
xor
xchg
inc
inc
xchg
les
popa
dec
add
mov
push
fsubl
jp
sbbb
xlat
popa
and
filds
das
cli
pop
gs
push
mov
and
shrb
mov
adc
lahf
mov
ljmp
aaa
push
or
movsb
sar
and
cld
js
imul
les
ljmp
out
aam
fcomip
lcall
cmp
loop
jle
mov
xchg
fdivr
push
push
jns
pop
sbb
in
sbb
jmp
jle
pop
pop
or
in
stos
fidivl
mov
jle
jg
imul
sbb
push
fwait
insb
data16
out
inc
xor
out
mov
pop
xchg
sub
decl
cmp
stc
sub
lods
or
mov
nop
lahf
sbb
sbb
sbb
clc
decl
push
jae
mov
pop
lahf
insl
nop
ljmp
call
gs
std
repnz
mov
and
xor
sub
aam
mov
ljmp
movsl
push
cmp
xchg
mov
cmp
test
arpl
pop
mov
inc
mov
incl
sbb
pop
cld
sub
jle
dec
mov
fstps
xchg
sti
mov
call
push
sbb
dec
lahf
in
arpl
lods
push
imul
adc
fbld
loopne
data16
xchg
dec
sbb
js
scas
jne
sbb
mov
sti
sbb
filds
mov
clc
sbb
fldenv
jno
or
jg
ljmp
test
and
add
fstps
sbb
push
repz
decl
lds
cld
mov
fs
inc
repz
insb
mov
out
cli
inc
fs
sub
push
out
cltd
and
repz
dec
push
loopne
sbb
and
out
movsl
sbb
pusha
addr16
push
rcrl
cli
mov
repnz
push
mov
jle
mov
cmp
cs
cltd
pop
mov
xchg
test
addr16
mov
pop
pushf
into
in
lock
andl
mov
test
cmp
jp
lret
leave
andl
mov
cmp
insl
push
jg
push
fldenv
adc
dec
xchg
jge
sub
insb
push
pop
int3
into
scas
std
int
jl
mov
scas
lods
push
pop
push
test
jge
pop
sub
mov
xor
inc
adc
or
jmp
xchg
jl
add
je
pop
and
or
jp
fidivrl
pop
xchg
jmp
dec
and
lods
aam
cltd
mov
stos
arpl
xchg
xchg
sar
shl
push
lcall
lods
leave
jmp
icebp
orb
and
jo
inc
ljmp
fisubl
cmc
push
daa
xor
or
jae
inc
pop
aad
pop
xchg
jmp
enter
xchg
and
mov
pop
mov
mov
sti
leave
scas
outsl
adc
pop
enter
mov
fdivrs
cmp
pop
popf
pop
rcl
push
mov
cmp
dec
pop
aad
xchg
cltd
sbb
fcomip
sahf
pop
enter
jmp
les
mov
lea
cmp
inc
sbb
sub
jp
xchg
sarb
sub
shll
pop
fmuls
mov
and
push
stos
add
in
pushf
icebp
ret
add
dec
push
int
mov
xlat
inc
enter
ljmp
xchg
ret
addr16
lcall
scas
aad
neg
pop
flds
add
das
repz
ds
xchg
or
mov
cmp
cmpsb
das
mov
cmp
xchg
inc
scas
das
push
in
rcll
stos
jmp
cli
fs
lahf
leave
hlt
add
or
sbb
ljmp
xchg
popa
adc
xor
test
out
adc
jge
call
mov
or
cwtl
add
sti
mov
sub
pushf
popf
add
mov
mov
push
or
lret
stos
push
roll
adc
daa
insb
int3
arpl
xchg
pop
clc
jmp
cmc
pop
and
into
xchg
mov
lea
jnp
pushf
mov
ja
ss
mov
cld
ljmp
push
push
inc
dec
lods
std
lock
call
out
push
movsb
fbld
push
inc
sub
jl
test
hlt
mov
pop
andb
mov
xlat
enter
add
jmp
shrb
cmp
xor
rcrb
cwtl
repz
jg
movsl
pushl
and
loop
das
bswap
ds
push
rcl
xchg
scas
jl
ljmp
push
in
sub
not
mov
popa
xchg
scas
cmpsl
push
mov
mov
inc
jmp
rorl
filds
and
lock
js
out
scas
mov
xorb
inc
pusha
add
rcrb
pop
inc
xchg
in
push
xchg
es
jmp
into
mov
rcrl
loopne
xchg
stos
hlt
mov
adc
and
pop
mulb
decl
out
pusha
nop
jo
inc
addr16
mov
xchg
dec
outsb
jb
jnp
add
cmp
std
clc
ljmp
cli
add
mov
jle
stos
mov
dec
or
shrl
cld
incl
add
dec
or
cld
or
fisubrl
fnstenv
inc
mov
jg
out
test
mov
adc
xchg
or
pop
push
outsl
push
loop
das
cli
ljmp
pop
mov
inc
xchg
jns
push
je
rol
mov
call
pusha
mov
das
fwait
pop
sub
mov
das
jnp
fwait
or
movsl
pop
and
and
lea
dec
cmp
xorl
xor
je
push
pushl
les
dec
leave
imul
push
stos
nop
or
leave
dec
ret
loop
cmc
inc
clc
or
xlat
in
imul
shrb
out
loop
mov
mov
rcl
xchg
and
incl
mov
pop
aad
add
in
inc
cmp
mov
in
jmp
es
out
les
pop
sbb
cmpsb
and
outsl
mov
jmp
dec
rcrb
test
fstl
inc
stos
call
enter
jne
and
js
lock
decl
imulb
inc
adc
jge
xchg
push
ror
je
outsb
js
sti
add
push
add
or
dec
mov
loope
jo
adc
lock
sbb
jp
jg
aas
movsl
jmp
movsl
inc
mov
pushl
out
cmp
insl
outsl
sbb
and
adc
cltd
int3
dec
inc
movsb
icebp
jge
sti
lret
jle
xchg
aas
js
cmpsb
stos
fiadds
xchg
adc
sbb
mov
mov
add
scas
ljmp
xchg
mov
das
or
sbb
fs
jne
add
xchg
adc
repnz
clc
sbb
and
sub
sub
push
fstl
adc
mov
or
incl
pop
inc
cmpsl
mov
int
testl
lods
mov
xchg
adc
cmpsl
bound
call
sti
negb
jns
push
xor
fs
mov
repnz
lret
mov
jmp
aad
jle
jbe
lret
sub
mov
lcall
repz
scas
jmp
push
jle
fs
ret
lds
sbb
sub
mov
fnstsw
cmp
aam
lcall
loopne
mov
inc
dec
popf
sbb
loop
aaa
ljmp
data16
pop
repnz
clc
test
mov
ljmp
repnz
mov
lods
sbb
cmpb
adc
pop
and
inc
stos
and
mov
mov
cmp
add
and
and
incl
call
jg
divb
dec
aam
out
pushw
and
mov
xchg
mov
xchg
call
pop
push
test
push
cmp
dec
fimull
add
mov
adc
ja
xchg
test
shrl
outsl
sub
push
xchg
out
repnz
movsb
lret
mov
dec
mov
mov
call
fildll
mov
lds
add
and
mov
dec
pop
mov
repnz
add
incl
dec
popf
cmp
cmp
cltd
idiv
rcl
fstpt
lea
sbb
stos
or
leave
cwtl
xchg
and
adc
fmull
sbb
add
pop
mov
xchg
xor
xor
cmpsb
xor
adc
pop
sub
sub
decl
xchg
and
push
xchg
sbb
jae
pushf
mov
jg
xor
lock
cmp
inc
dec
lods
jg
ljmp
add
lods
pop
out
stc
sub
xlat
out
mov
inc
inc
xchg
aad
push
incl
in
movsl
std
jo
adc
cltd
or
sub
pop
out
pop
dec
divl
ljmp
stos
push
xchg
mov
mov
lods
les
stc
mov
or
fdivr
mov
inc
cmp
sub
test
aad
adcl
ljmp
mov
jbe
dec
push
mov
sbb
pop
pop
cmp
pushf
repz
mov
push
jae
ljmp
icebp
fistl
fnstsw
adc
outsl
cli
jmp
movsl
cmp
pop
cmpsl
cmp
pop
mov
ficoms
push
in
ret
inc
and
out
incl
aas
add
sbb
xor
out
mov
dec
orb
in
mov
fistpl
call
or
add
mov
add
add
outsl
dec
mov
jno
xor
call
mov
insb
dec
insb
push
out
mov
push
lods
jne
stos
insl
push
pop
addb
push
mull
or
incl
xor
inc
inc
shll
in
out
popf
pop
rolb
in
rcl
ljmp
ret
sbb
add
pop
jl
jecxz
inc
lods
popf
cmp
sbb
call
mov
lods
bnd
out
call
push
jnp,pt
mov
loop
jbe
in
xchg
rcrb
repz
scas
push
dec
icebp
je
push
cld
ds
push
sbbb
out
lret
loope
stos
add
lcall
fwait
jae
adc
icebp
mov
js
mov
push
jns
iret
mov
sti
jmp
and
xchg
inc
sbb
iret
fldcw
repnz
test
mov
adc
test
sarl
or
or
xchg
test
pop
dec
int
dec
cs
dec
dec
and
xlat
jmp
iret
jg
mov
lret
nop
roll
or
call
ficompl
inc
ss
movsb
data16
jbe
jp
push
sub
sahf
xchg
xchg
pop
pop
int
mov
cld
inc
sbb
inc
repz
fucomp
adc
add
jno
sub
jns
subl
icebp
push
outsl
or
cli
mov
push
sub
or
mov
imul
or
decl
adc
xchg
mov
call
in
pop
jno
enter
xchg
int
stc
ljmp
cli
xor
jne
out
cld
cld
into
jne
push
lret
frstor
adc
lret
call
loop
mov
std
inc
sub
aad
arpl
xchg
sbb
popa
pop
les
filds
decl
arpl
in
or
pushf
jmp
pop
nop
icebp
xchg
jmp
pusha
pop
pop
mov
dec
xchg
or
sbb
add
lock
add
xor
popf
or
pushl
sub
out
iret
test
pop
lcall
and
in
sub
decl
and
fsubrl
subb
loop
fists
mov
mov
jmp
ret
jle
aaa
popf
cmc
es
xor
and
insl
adc
push
cltd
ljmp
jl
xchg
movsb
mov
pop
push
dec
scas
mov
mov
testb
inc
inc
jg
js
scas
daa
inc
repz
jg
mov
cmp
movsl
sbb
aaa
jno
push
ja
dec
mov
ljmp
decl
jbe
pop
imul
jns
adc
mov
sarb
adc
jl
mov
push
fsubs
push
jmp
push
jmp
jp
or
insl
cmp
and
ss
scas
roll
lcall
xchg
mov
call
ss
aas
jge
cld
pushf
inc
mov
and
imul
jns
fs
mov
push
sub
cs
stos
sbb
data16
mov
and
hlt
and
push
aas
js
mov
cmp
call
mov
das
lret
mov
mov
mov
pop
cmpsb
aaa
and
fdivl
or
loope
aas
dec
xchg
outsb
jle
imul
into
idivb
loopne
hlt
lret
push
int3
lahf
lods
sar
mov
inc
push
sbb
orb
or
jg
and
popa
fwait
dec
gs
rorl
fsts
lret
dec
push
jge
sti
ss
mov
ljmp
std
jne
fisttpl
test
bound
adc
xor
fs
pushl
pop
mov
ret
pop
shrb
fmull
sub
fisubrs
cmpsb
lock
inc
xchg
cld
xchg
xor
push
and
test
cli
test
cwtl
repz
outsb
aam
sub
fcomip
pop
and
add
aam
add
adc
mov
scas
fsubl
ljmp
shl
mov
aas
shl
call
pop
mov
or
daa
call
dec
xchg
jmp
xchg
jb
and
dec
sub
stc
mov
ljmp
adc
push
mov
sub
lea
pop
adc
jo
lock
call
push
push
mov
pop
pop
adc
jge
ds
cmc
xchg
shll
call
lret
add
rcll
sub
movd
insl
push
lahf
addl
dec
cld
jb
pop
add
mov
mov
push
sbb
movsl
pushl
sbbl
ret
mov
pop
loopne
or
lcall
jmp
lock
leave
push
addr16
pop
inc
rorb
mov
call
sub
mov
jge
in
gs
cwtl
jno
and
cmpsb
xlat
fdivrs
push
mov
cmp
sbb
inc
ds
jmp
data16
in
pop
nop
ljmp
pop
lods
sahf
push
ja
js
push
mov
xchg
jg
push
call
pop
loopne
sbb
sub
sub
and
cltd
addb
mov
and
add
push
cld
cmp
repz
jl
pushf
iret
cs
ljmp
std
and
testb
test
mov
pop
stos
lock
leave
mov
sar
mov
push
lret
push
mov
mov
hlt
mov
mov
xorl
or
push
mov
mov
push
adc
filds
sub
or
leave
sub
shlb
jg
pop
aad
inc
add
or
repnz
xor
and
movsb
aas
cld
xchg
fnstenv
sub
jg
mov
lods
adc
aam
pop
sarb
mov
daa
js
pop
imul
mov
test
and
movsb
and
or
in
jle
and
pop
add
cli
ljmp
into
adc
xchg
jge
mov
negb
scas
imul
daa
data16
loop
fyl2x
rorl
clc
call
fildll
cltd
ret
enter
in
fcoml
stos
cs
xchg
jmp
push
add
push
mov
rcrb
dec
mov
ret
cmp
ljmp
daa
aam
scas
pop
dec
les
andb
lret
into
push
in
sti
ljmp
pop
add
mov
mov
jo
movsb
ja
sbb
lret
xchg
insb
lret
cld
out
pop
imul
adc
add
daa
xchg
jne
cmp
mov
test
call
loopne
jnp
stos
ljmp
test
ficompl
std
sub
loopne
test
in
in
out
xchg
push
push
lcall
fsubl
shl
imul
lock
out
pop
test
lret
shll
outsb
cltd
mov
loope
decl
lods
ja
add
fwait
jo
jne
bound
idiv
mov
or
test
call
and
mov
push
ret
sub
cld
mov
push
daa
aaa
lcall
inc
sarb
sub
dec
push
and
ja
dec
iret
rcrl
cmp
pushl
sahf
stc
dec
test
stos
idivl
rcrl
imul
dec
in
jmp
mulb
sarl
dec
mov
out
mov
pusha
push
sbbb
nop
push
arpl
jno
pop
loope
repz
decl
dec
mov
cmp
fisubs
loop
dec
cmc
test
rcrb
add
push
push
xchg
fisubs
push
call
fwait
sbb
psrld
fistps
or
pop
mov
divl
or
cli
xor
int
push
add
jmp
insl
sub
push
andb
call
xor
lock
lds
sbb
push
lea
in
mov
cmpsb
in
call
popf
or
fstps
movsb
sub
aad
mov
ret
mov
movsl
inc
imulb
jo
push
rcrl
cwtl
data16
insb
jo
fidivrs
adcb
pop
ficomps
inc
movsl
inc
add
sbb
stos
mov
mov
push
mov
xchg
push
mov
jns
sbb
push
and
decl
cmpb
jb
and
and
rorl
mov
mov
mov
divb
testb
mov
jnp
imul
leave
mov
mulb
jb
pop
pop
jne
push
subb
ljmp
adc
mov
or
test
enter
xchg
sbb
or
sbb
adc
cmp
sub
int
cmp
and
fcmovb
adc
pushl
sub
sub
jge
test
test
mov
pushf
push
call
add
call
jge
add
pop
mov
mov
jp
dec
mov
xor
incl
std
jp
cld
xchg
push
push
into
fmuls
adc
mov
jmp
lidtl
insl
imul
adc
lahf
add
xlat
cld
repz
call
int3
not
test
out
mov
pushf
clc
mov
lea
lret
xor
mov
mov
or
push
mov
data16
ss
mov
xchg
inc
jl
cltd
sub
pop
jmp
gs
jmp
mov
std
jl
lock
das
fwait
je
mov
test
push
cmpsb
rorl
adc
fstpt
lret
fldl
scas
test
sub
adc
pop
fdivrl
decl
pop
adc
ds
stos
lahf
or
mov
insb
pop
std
sub
jno
push
cmp
gs
incl
and
inc
inc
lcall
lock
push
scas
fst
jp
call
cld
daa
pop
int3
lods
adc
push
pop
cmp
cwtl
ret
ret
push
xor
pushl
mov
and
jne
popf
stos
mov
testb
imul
filds
push
pushl
xor
cmpsb
stos
xor
or
push
dec
fstps
add
fbstp
push
stc
scas
repz
inc
xor
sub
test
mov
mov
addb
stc
addl
lcall
push
add
and
mov
incl
mov
loop
cmc
mov
sub
add
sti
add
lea
push
sbb
mov
decl
scas
add
xchg
sbb
push
and
pop
jecxz
sbb
es
or
arpl
or
sbb
imul
decl
jg
cmp
pop
es
ss
push
mov
cltd
xchg
jne
cmp
or
dec
and
rolb
in
mov
cmp
lcall
jno
ljmp
shlb
lahf
cmpsl
mov
pop
loop
dec
sahf
ljmp
ljmp
lret
les
inc
sahf
lret
push
xchg
mov
out
imul
inc
jno
call
scas
sbb
cmp
andl
xchg
lahf
mov
aaa
pop
dec
out
xchg
push
filds
aas
sbb
xchg
sarl
arpl
mov
outsl
rcll
cli
mov
ds
push
pushl
pop
mov
mov
loopne
add
das
jp
rcrl
jg
ds
insl
shr
jmp
cli
es
in
and
push
rorb
xchg
dec
mov
loop
pop
push
fnstcw
push
cmp
imull
mov
scas
mov
nop
in
scas
adc
daa
pop
jb
and
lcall
push
ret
scas
sub
call
rorl
outsb
and
decl
xchg
daa
sbb
and
jb
pusha
pop
sub
pop
mov
add
mov
fsubl
insb
sub
scas
xor
mov
adc
dec
jns,pn
dec
shll
fcomps
adc
cmp
sbb
mov
rcrl
xchg
xchg
sbb
fwait
jg
call
xchg
push
inc
and
xchg
push
and
add
sbb
xchg
or
cmpsb
mov
jnp
test
mov
cmp
aaa
cmp
lcall
push
add
push
sub
push
cmc
push
nop
dec
mov
leave
xchg
cwtl
pop
call
add
idiv
decl
icebp
cmp
push
subl
inc
and
xchg
call
jg
mov
cmpsl
xor
fiadds
popa
mov
xor
addr16
call
rcrb
ljmp
inc
adc
xchg
or
dec
aad
out
clc
aas
icebp
push
cmpsb
sbb
jg
xor
cmp
mov
in
in
int
cli
jae
pop
adc
adc
mov
cmpl
dec
movsl
mov
push
clc
popf
xchg
mov
fcoms
dec
inc
fadds
incb
add
adc
pushl
and
mov
cmp
add
pop
mov
push
cmpsb
pop
add
pushl
sub
and
aam
sub
ret
jo
jp
pop
leave
push
leave
lds
int3
pop
mov
jbe
ljmp
into
cmp
inc
jae
pusha
jge
push
jg
cmp
sub
and
push
divl
xchg
test
cmpsl
push
cmp
lcall
sti
aam
push
popf
daa
and
fistl
in
cmc
adc
das
sub
mov
mov
mov
fisttps
lcall
imul
pop
fwait
mov
push
push
push
jge
or
int
cmp
ds
je
jne
mov
adc
and
xchg
cld
xlat
adcl
loopne
jmp
fcmovnb
xor
add
xor
mov
mov
fnsave
pop
std
call
add
cld
or
jno
adc
push
mov
mov
inc
rorl
mov
dec
cli
popa
incl
cwtl
inc
cmp
and
test
shrb
je
mov
sar
call
jp
movsl
cwtl
scas
mov
out
jl
pop
xchg
scas
sbb
cmpsl
fists
adc
shll
lcall
imul
sub
xchg
scas
push
clc
mov
dec
ss
sub
addr16
jg
ja
xor
xor
mov
and
or
scas
clc
mov
mov
stc
movsl
bound
cmp
and
das
movsl
rclb
in
ljmp
sub
pop
pop
dec
jae
or
dec
inc
xor
dec
or
fldl
fistpl
cmpsb
mov
adc
jne
jb
and
push
aad
and
pop
push
stos
xor
lcall
ret
ret
or
aaa
test
pop
rcrl
enter
jle
xchg
mov
call
adc
nop
cmc
stos
push
push
test
sub
xchg
mov
push
sar
jmp
and
repnz
jg
shlb
or
lods
jle
mov
lock
ret
enter
fcomip
pop
push
xchg
nop
mov
jge
jl
popa
sahf
stos
add
ret
insl
adc
inc
sbb
push
sbb
mov
xchg
insb
movl
pop
mov
lea
bound
cmc
xchg
add
out
cli
jmp
jae
sarb
mov
subl
call
lret
shrl
imul
ret
and
mov
clc
es
or
in
mov
ja
repnz
xchg
in
push
addb
incl
xchg
popf
imull
pop
push
in
minps
mov
lock
hlt
cs
cwtl
jecxz
ljmp
sbb
sub
imul
sbb
xor
fistpll
sub
rorb
mov
repnz
inc
push
or
jg
roll
fcomp
int
les
mov
popa
ret
inc
mov
xchg
out
ret
mov
jnp
pop
push
scas
testl
lret
adc
or
rorl
aaa
cld
das
xor
adc
lock
out
test
call
mov
loopne
dec
dec
jge
pusha
pusha
sbbl
mov
mov
mov
jns
int3
push
cli
jp
lcall
mov
addr16
insl
cld
pop
imul
mov
xchg
adc
xchg
outsl
and
test
xlat
stos
popa
fwait
inc
sub
subl
xor
out
xchg
shr
push
aas
xchg
push
das
mov
jno
roll
push
sti
call
orl
cld
cltd
or
or
adc
cmp
ljmp
sbbb
jle
inc
jns
xor
sbb
or
push
xchg
call
ljmp
push
ljmp
push
aad
int
dec
inc
aad
and
aam
push
dec
shll
lcall
stos
push
mov
inc
and
dec
es
adc
push
cmc
mov
icebp
xor
leave
leave
pop
pop
push
pop
call
and
mov
dec
and
jle
stos
les
pop
lcall
jmp
rolb
daa
jg
incl
mov
sbb
add
push
fsubrl
lahf
js
pusha
decl
sub
sub
lock
call
loopne
out
jl
mov
mov
fldl
mov
jne
sar
lcall
icebp
pop
dec
test
xchg
cmp
mov
rcr
xchg
jp
shl
or
jae
push
ljmp
push
ljmp
pop
std
cld
iret
shl
popa
in
jbe
dec
insl
inc
and
inc
ja
loope
jmp
mov
fwait
jge
scas
mov
fcompl
mov
jno
adc
add
pop
xor
push
xchg
mov
mov
fldl
adc
push
scas
aas
popf
enter
in
imul
sbb
sub
nop
push
sub
push
pop
popf
mov
popf
pop
ljmp
mov
sub
test
jecxz,pt
push
fistps
push
mov
jmp
mull
hlt
fisttpl
jmp
sub
jo
roll
add
adc
pop
dec
push
pushl
pop
inc
xor
sbb
ljmp
notl
add
mov
sub
pushl
xchg
mov
jne
test
pop
cmpsb
pop
sub
les
test
ja
add
jmp
adc
in
test
pushf
pop
insl
jns
push
negl
cmpsb
repz
fbld
jle
ret
jg,pt
ds
mov
sbb
in
incl
faddl
or
push
leave
dec
jmp
pop
jp
cmp
mov
data16
scas
outsb
nop
mov
xchg
xchg
mov
in
ficomps
lds
add
aam
adc
data16
pop
mov
ficoms
cmp
hlt
mov
loop
cmp
jmp
pop
lock
or
jp
call
mov
ljmp
sub
cwtl
or
icebp
cmp
xchg
cmp
jns
je,pn
lock
rcll
push
mov
loop
mov
gs
or
in
jnp
lock
mov
pushl
xor
xchg
sub
cltd
jns
mov
mov
xchg
sahf
addb
ds
pushl
cltd
adc
movsl
push
and
xchg
ret
lcall
out
cmp
jmp
pop
push
xor
pop
xlat
in
jb
inc
xchg
cmp
xchg
jbe
pop
mov
aad
push
adc
xchg
jbe
mov
js
popf
repnz
loope
push
mov
cmp
xchg
and
vmovmskps
insb
xchg
clc
push
movsl
sub
scas
sbb
arpl
xchg
push
mov
mov
std
call
insl
push
movsl
pop
adc
int3
mov
add
xor
lea
mov
jmp
xor
call
xor
or
insl
mov
cld
mov
pushf
sbb
sahf
ljmp
mov
dec
sbb
rclb
fcomps
jae
xchg
es
xchg
cmpsb
pop
aaa
mov
inc
test
sub
push
incl
cmp
xor
push
jns
fists
test
jg
popf
sbb
jle
popa
cmpsl
out
cmp
out
mov
cmp
pop
jbe
jbe
mov
adcb
stos
incl
mov
sbb
jb
push
ja
fcomip
jmp
xchg
jmp
roll
push
js
fcoml
mov
adcl
notb
push
xor
popa
mov
dec
and
sbb
xlat
mov
int3
mov
andl
les
xor
mov
sbb
cmp
adc
pop
test
int3
push
adc
leave
inc
dec
push
jmp
shr
aaa
js
jae
or
arpl
dec
fcomip
out
push
shrl
movsl
fs
outsl
pushf
jnp
inc
lret
test
dec
dec
or
sub
shl
sub
out
jae
aaa
adc
xchg
mov
mov
fcomps
xor
inc
addr16
imull
xchg
push
and
ss
inc
dec
adc
inc
or
flds
inc
jge
pop
out
ret
sub
add
jo
decl
sub
pop
adcb
mov
sarb
jbe
cmp
rol
inc
mov
sub
xchg
ds
xchg
dec
or
jge
sahf
in
xchg
xor
lcall
cmp
dec
mov
shll
aas
mov
repz
mov
leavew
adc
mov
push
imul
ljmp
lods
in
mov
push
mov
pop
aad
and
js
xchg
call
stc
push
mov
xlat
lods
add
lcall
les
push
in
inc
pop
and
fnstcw
imulb
mov
lds
inc
fwait
cmp
lods
xchg
mov
cld
pushl
aam
xchg
movsl
roll
mov
sub
int3
xchg
jg
jl
pushl
sub
imul
mov
and
mov
stos
push
jmp
push
cmpsl
adc
mov
pop
das
dec
fwait
push
arpl
fadds
and
stos
decl
and
jae
add
es
cltd
daa
adc
ds
lahf
cmp
ljmp
xchg
cmp
cmp
data16
mov
daa
outsb
fstpt
cmp
mov
adc
test
lcall
shll
sub
and
fisubrl
push
xor
or
push
mov
cli
mov
cmp
decl
xor
and
cmp
push
and
jnp
into
or
in
inc
test
cltd
addr16
scas
pop
jg
call
shll
cwtl
fildll
cmpsb
inc
ljmp
in
adc
call
ja
jno
and
sahf
in
pop
fxtract
das
fidivs
shr
incl
or
sarl
xor
jge
push
cmp
lret
pop
outsl
rcrl
outsl
mov
rcll
ljmp
mov
fwait
js
pop
popf
ret
fisttpll
cmpsb
jle
loopne
lcall
fnsave
addl
test
loopne
cmp
fistl
and
std
decl
or
add
jns
arpl
mulb
mov
mov
push
je
mov
push
stos
and
in
push
mov
pop
loopne
arpl
jg
pop
jmp
and
jns
cmp
inc
xchg
and
and
push
xchg
xchg
int3
insl
sti
dec
ljmp
jecxz
in
inc
jns
mov
inc
imul
pop
out
imul
incl
cmpsl
aas
bound
scas
xor
ret
adc
cli
je
sbb
sub
mov
push
jmp
ret
adc
inc
and
jnp
cmp
cmp
mov
and
ja
or
push
leave
push
mov
icebp
sar
decl
push
mov
mov
and
call
movsl
xlat
ja
jle
ljmp
sahf
push
in
ret
add
shll
inc
pop
sub
lea
lret
stos
sub
in
add
decl
mov
mov
or
imul
out
xor
mov
and
lret
pushl
sbb
in
adc
repz
and
pop
mov
out
test
nop
inc
inc
inc
mov
mov
xlat
data16
push
shl
mov
push
xor
dec
ljmp
mov
pop
rcrl
sbb
cmp
pop
push
int3
pusha
push
les
push
cltd
incl
adc
xorb
mov
mov
int
cmp
pop
adc
mov
jmp
cltd
leave
push
pop
in
insb
jp
cmp
bound
shlb
out
cli
inc
mov
pop
loope
ror
mov
js
repz
push
cs
call
sub
xor
sar
jp
repnz
mov
mov
jns
push
sahf
les
mov
xor
pop
repz
inc
je
insb
scas
jmp
jg
pop
add
popf
leave
mov
jno
test
dec
hlt
test
mov
ret
repz
xor
into
push
add
test
call
cmp
out
cli
and
mov
call
push
cmp
gs
cmp
aad
sbb
pop
les
outsb
jle
repnz
out
and
nop
sub
nop
shlb
dec
xchg
loopne
dec
or
jg
cmp
jmp
add
adc
mov
mov
jg
iret
mov
and
ljmp
imul
lea
pop
repnz
imul
or
in
shll
dec
das
lods
lahf
leave
test
mov
rolb
ja
or
mov
mov
sbb
ret
cmp
pop
imul
xchg
aam
test
jb
decl
inc
pusha
jne
call
in
push
aam
mov
mov
lcall
stos
push
lods
lret
add
sub
sbb
fmull
das
jg
pushl
inc
inc
lods
enter
ljmp
stos
cmp
cwtl
dec
loope
das
cli
xchg
aas
pop
xchg
sub
jge
ficoml
jecxz
ljmp
xor
add
out
fistpl
cltd
test
roll
scas
push
shr
push
arpl
imul
jnp
aam
and
push
insl
movsb
fwait
cmpsl
dec
cmc
push
cmp
lret
push
jmp
subb
lds
loopne
insl
mov
lds
sbb
filds
outsl
idiv
pushl
out
mov
jbe
dec
jle
insl
xchg
jnp
mov
xchg
stc
dec
ret
aad
jge
pushl
add
sbb
cs
jb
mov
mov
lret
cmp
stc
jbe
fstps
mov
add
pop
dec
sbb
push
pandn
push
mov
inc
int
ret
rol
fdivr
mov
inc
xchg
pop
cmp
or
movsl
cmpsb
enter
subl
incl
mov
xchg
sub
cs
fwait
jmp
xchg
pop
mov
shrb
je
ja
xchg
cmp
dec
or
sub
mov
cmc
sti
or
sub
aad
cli
jle
jae
inc
jge
inc
push
arpl
dec
cli
daa
xchg
imul
mov
imul
mov
cli
jecxz
shl
mov
sbb
jno
iret
mov
xchg
jnp
pop
mov
xchg
movsb
and
decl
dec
aam
push
adc
push
inc
inc
mov
idivb
lods
mov
fsub
repnz
adc
je
pop
ljmp
mov
xor
imul
ljmp
mov
sbb
enter
sub
js
mov
pop
dec
dec
test
daa
cmc
mov
mov
js
sar
or
dec
insb
inc
and
jle
xlat
stos
call
cmpb
xor
pop
lcall
cmp
js
inc
dec
fiadds
cmc
mov
movsl
add
jg
icebp
data16
cs
lods
mov
test
jae
mov
incl
or
stos
aaa
add
adc
and
pop
add
incl
nop
aas
inc
mov
jb
push
mov
call
loopne
lock
enter
inc
mov
pushl
mov
cmp
sbb
loopne
xchg
faddp
adc
sbb
popf
jmp
mov
inc
lcall
add
pop
call
fisubrs
xchg
and
fidivs
es
bnd
aas
scas
ds
xchg
outsl
jnp
mov
bound
clc
decl
sbb
add
cmp
mov
in
mov
movsb
sub
in
lcall
or
shl
mov
lret
ret
push
cmc
and
int
out
xchg
ret
sub
sbb
arpl
or
dec
pop
das
push
mov
cld
xchg
jmp
push
push
fwait
ds
xchg
mul
lret
cmp
jg
jmp
push
fidivrs
sbb
cmpsb
in
icebp
ljmp
inc
jmp
popa
test
xchg
dec
jmp
jne
push
ret
imul
fisttps
adc
popf
pop
push
lahf
sub
pushl
sub
dec
stos
into
fildll
xor
std
int3
movsl
adc
fidivl
fistpl
inc
loopne
cmp
in
mov
fcmove
sub
in
rcrl
das
jne
js
mov
ljmp
adc
outsl
xor
mov
sub
in
pop
in
and
or
cli
lcall
cltd
xor
call
cmc
or
pop
ret
pop
inc
push
dec
out
mov
cltd
sahf
addr16
pushl
sar
mov
push
mov
int3
hlt
daa
xor
jle
mov
ljmp
cli
xor
les
sub
add
jo
sbb
or
call
xchg
or
pop
push
or
je
push
and
adc
inc
lea
movsl
xor
sbb
or
pop
mov
dec
sbb
cmpb
inc
scas
ret
test
test
int3
pushf
insl
jg
mov
ljmp
mov
push
inc
dec
insl
pop
xchg
popa
es
adc
cmp
pushf
movsl
cmp
mov
incl
push
loope
mov
or
addr16
push
fwait
pushf
mov
test
cwtl
jmp
sub
cmpsl
andl
pop
andb
mov
mov
mov
or
jb
and
jne
mov
inc
lret
mov
pop
xchg
mov
icebp
sub
mov
sbb
cmp
fwait
or
xor
cld
call
cmp
in
int
jne
mov
sbb
inc
jns
dec
push
pushf
decl
and
hlt
ds
jno
jmp
fnstenv
push
in
xchg
shl
jo
jnp
adc
loopne
mov
stc
lds
sub
push
outsb
nop
fwait
jne
lahf
mov
call
scas
cli
inc
lds
dec
lret
arpl
cmp
dec
ljmp
shrb
inc
inc
inc
and
in
shlb
mov
jg
inc
sahf
bound
mov
fcos
fisttpl
mov
add
sbb
or
out
daa
push
lods
push
add
or
movsl
sub
ret
xor
mov
into
fcmovb
push
call
xchg
scas
mov
pop
sbb
clc
jecxz
decl
adc
add
push
mov
scas
cmpsb
lret
dec
dec
ja
imul
mov
pop
das
aad
pop
or
in
jle
ret
push
pop
orb
mov
cmp
loopne
sar
pop
jae
fstpl
sbb
mov
js
loop
dec
mov
adc
xlat
inc
cmpsb
jg
sbb
push
pop
xor
cmpsl
test
into
decb
in
add
sbb
decl
push
mov
out
fdivs
sbb
and
popf
xor
movsb
and
dec
lret
adc
mov
decl
je
inc
inc
nop
outsl
fisttpl
cmp
icebp
sahf
jno
and
int
sub
sub
and
cmc
sbb
mov
mov
dec
in
xchg
mov
jg
out
cld
daa
mov
mov
aaa
call
pop
movsl
aas
and
fldl
call
sbb
mov
inc
js
ds
call
push
dec
push
les
sub
push
fcomip
push
fcomps
aam
bound
fistpll
and
jp
mov
or
pop
pop
int3
add
sub
aaa
cwtl
xchg
fs
fbld
sub
dec
inc
out
pop
mov
jns
lcall
jmp
push
mov
push
shr
push
add
scas
jmp
mov
jg
jp
aas
cmp
sub
xor
ljmp
mov
pop
stos
test
push
push
stc
out
ds
lods
and
push
idiv
lcall
cli
fimull
repz
outsb
push
mov
test
fstl
decl
mov
in
negl
mov
jnp
out
sbb
push
imul
das
mov
and
cmp
imulb
andb
sbb
repnz
pushf
ret
fstpt
decl
xor
xchg
andb
jecxz
rol
sbb
push
xchg
pop
lcall
add
mov
jg
dec
test
pop
xor
sub
push
lcall
lcall
dec
in
xor
hlt
jno
data16
inc
dec
subl
mov
out
pushf
out
data16
call
sub
inc
rcrb
add
lods
std
std
inc
pop
jb
jg
insl
inc
xor
sbb
jge
add
ret
and
sub
mov
ret
pushf
and
psllq
sub
out
adc
sbb
push
mov
fidivs
mov
jl
out
push
ret
andb
xor
pushl
mov
lea
cmp
pushf
fcmovne
les
in
dec
sub
adc
dec
adc
test
decl
test
sbb
adc
test
pushf
in
addb
fsubrp
lcall
jmp
sbbb
loopne
push
pop
call
pushl
cmp
ds
repz
xorb
test
ret
or
pushf
lds
jle
shl
daa
and
call
pop
cld
mov
fadds
dec
jp
rcrl
int3
cmp
jp
inc
imull
mov
sub
dec
and
jbe
jno
ss
pusha
idivl
shl
cmpsl
cmp
stos
xchg
pushl
fcom
sbb
and
pop
jecxz
pushl
pop
or
ret
cli
paddd
call
jmp
mov
cmp
movsb
addb
cs
sbb
jo
aas
and
lcall
cmp
movsl
add
inc
mov
ret
add
jo
incl
iret
add
insb
pop
xor
outsb
pop
inc
fbld
arpl
adc
incl
fwait
jbe
pop
lahf
inc
sbb
jle
es
mov
push
filds
lahf
nop
mov
std
testb
mov
pop
shrb
test
push
fwait
in
mov
pusha
cmp
clc
jnp
mov
xor
cmpsl
fwait
mov
outsl
xchg
jp
xchg
punpckhbw
bound
test
ljmp
and
dec
and
cmp
popf
jae
pop
rol
mov
inc
mov
lods
xlat
addb
jno
incl
xor
inc
out
cmp
or
and
scas
inc
xor
out
lcall
lock
fiadds
fwait
jns
xchg
mov
xor
stc
jo
adc
jmp
nop
jo
mov
mov
pop
or
jge
cmp
dec
jp
adcl
xlat
cmp
jnp
orl
add
ljmp
in
std
jecxz
scas
mov
lcall
loope
mov
inc
push
in
pushl
lods
sbb
sbb
pushf
nop
lcall
sub
sub
movsb
rcrl
imul
push
cmp
fbstp
add
cmp
add
mov
or
cmp
imul
sbb
mov
fstpt
or
mov
add
leave
jg
loop
and
test
jl
add
sub
ja
adc
js
mov
mov
jge
fdivr
frstor
xchg
cld
orb
pushf
outsl
lret
cmpsb
pushl
dec
xchg
jmp
inc
in
pushf
mov
add
pushl
jne
mov
mov
inc
fnstcw
push
hlt
cmpsb
jge
test
fldcw
mov
pop
mov
sub
std
mov
stos
push
cld
ss
mov
incl
jne
test
jnp
shll
xchg
popa
cmp
adc
jmp
insb
mov
cli
outsl
jne
in
daa
cwtl
add
hlt
rcl
jmp
shrl
mov
cmp
fwait
mov
sahf
jp
pusha
test
cmp
call
aam
xor
add
xchg
mov
ret
incl
les
xchg
xlat
pop
imul
ficompl
cwtl
mov
cmp
incl
push
mov
jmp
stos
fwait
lods
inc
sbb
imul
cmp
or
decl
mov
jg
data16
mov
leave
cli
insl
pop
call
xor
xchg
cltd
push
cmp
in
adc
lods
in
shlb
mov
stc
popf
aad
ljmp
call
mov
fidivs
pushf
fsubrl
xrelease
addr16
ds
pushl
jae
cld
xor
lret
jno
mov
fwait
add
mov
test
outsb
aam
cmp
pop
jbe
xchg
movsl
into
call
clc
movsl
rorb
mov
cli
xchg
adc
shlb
out
orb
or
cmp
mov
ds
jne
dec
sbb
or
jno
negl
aad
mov
fcoms
lcall
mov
and
and
sbb
mov
xchg
and
dec
out
mov
in
xor
dec
ljmp
hlt
dec
dec
imul
sbb
adc
inc
daa
and
scas
test
jb
add
call
inc
cli
and
ret
sbb
dec
aad
faddl
xchg
leave
out
xchg
test
out
clc
cmp
movsb
push
xorb
jbe
jl
xchg
ret
mov
mov
cld
add
push
sbb
outsl
jae
stos
and
out
jns
and
pop
pop
xchg
xor
sub
jno
inc
stos
mov
sub
xchg
push
xor
push
sarl
and
mov
test
fists
inc
xor
ror
dec
adc
xor
dec
gs
incl
pop
loop
xchg
dec
pop
push
adc
cmpsb
int3
icebp
clc
push
mov
jg
loop
int3
lahf
mov
add
mov
pop
and
cli
pop
add
or
subl
jmp
aaa
sub
xchg
sarl
cmpsl
pop
xchg
jae
dec
xor
into
out
into
lcall
cltd
mov
push
jnp
jne
pop
inc
xor
pop
mov
adc
dec
xchg
enter
call
add
xchg
mov
std
add
out
clc
mov
aam
stos
cld
mov
inc
xor
add
call
mov
xor
fldcw
cmpsl
mov
adc
mov
add
fcoml
mov
cmp
les
sub
inc
movsl
pop
test
scas
call
jg
push
pop
imul
nop
test
repz
xor
nop
loopne
inc
in
sbb
ret
pop
inc
jmp
insl
cwtl
sub
jb
es
ds
addl
xchg
aas
inc
push
dec
stos
xchg
mov
mov
inc
push
data16
jmp
std
jmp
inc
insb
dec
aas
jo
nop
dec
push
sub
pop
push
arpl
pop
in
sub
jl
jg
mov
sub
mov
mov
setno
mov
fsubl
push
xchg
jle
fdivrl
sub
or
repnz
cmp
cmp
and
fadd
inc
sub
cltd
xor
mov
inc
jo
push
aam
pop
dec
imulb
push
add
pop
jg
iret
sub
adc
adc
push
movsb
xor
add
popa
addr16
loope
mov
stos
inc
xchg
fcomps
push
stc
sub
jp
sbb
loope
repnz
xchg
inc
mov
adc
das
clc
decl
jmp
xor
dec
xchg
sub
mov
loope
jae
test
pushl
jne
or
lock
lods
insl
call
or
push
ret
mov
jl
mov
push
xchg
frstor
shr
and
dec
xlat
int
cmp
push
fstps
lret
sbb
in
and
call
mov
and
mov
sub
push
movsl
mov
dec
mov
push
cld
decl
xor
lret
xchg
sub
mull
das
stos
add
inc
push
mov
stos
mov
gs
testb
cmp
pop
into
xchg
outsl
fcomip
std
dec
fsubs
js
sub
cld
cmp
sahf
fcmovu
sub
mov
inc
fmulp
pop
push
inc
add
mov
adc
dec
arpl
out
dec
xor
lcall
fcomps
mov
out
cmpsb
fnstsw
notb
mov
dec
cmp
mov
cmpsl
aad
outsl
adc
jp
xchg
sbb
mov
push
or
or
or
call
mov
and
mov
xor
mov
pusha
jle
push
lahf
movsl
incl
xor
lds
dec
sbb
lcall
mov
pop
xorl
sbb
sub
jmp
loop
lock
jbe
pop
xchg
mov
sahf
adc
idivl
decl
xor
jp
sarl
fcmovu
adc
popa
pop
decl
push
lods
push
cmp
icebp
pushl
rclb
shrb
add
cmpsl
push
pop
ja
aaa
sbb
iret
jp
push
cmp
push
mov
mov
lcall
scas
push
push
pop
clc
std
lret
pop
adc
mov
push
dec
jge
imul
sub
cld
incl
inc
lcall
jl
test
xchg
mov
cmc
inc
incl
jp
xchg
nop
cmc
mov
in
inc
fildll
dec
inc
pop
dec
test
std
push
ljmp
lcall
arpl
dec
ror
sub
or
jmp
loopne
mov
fwait
int
xchg
push
mov
fbstp
sarl
in
xlat
aam
je
es
jmp
xor
fnstsw
xor
sub
pop
cmp
pop
hlt
into
sbb
pop
xlat
mov
xchg
mov
sahf
fnsave
push
xchg
test
xchg
mov
mov
or
add
pop
adcb
jns
xchg
call
dec
jns,pt
mulb
dec
mov
imul
lock
call
das
push
mov
sub
testb
xchg
sbb
fists
nop
push
fildl
rcrl
cmp
sbb
pop
loopne
mov
insl
imul
int3
ljmp
outsl
pushl
dec
aam
xor
stos
es
adcl
nop
imul
bound
fimull
lock
addr16
mov
cmc
shrl
jmp
imul
and
push
jmp
push
sbb
jmp
test
dec
arpl
push
jae
add
jb
lods
xor
and
leave
xor
call
loopne
inc
dec
pop
pop
in
or
cmp
sub
jmp
lcall
mov
mov
into
clc
add
inc
ss
cmp
sbb
ljmp
jp
cs
jbe
mov
aad
mov
pop
imul
test
pop
loop
mov
ljmp
or
xor
cmpsb
and
pop
shld
jmp
lea
cmp
in
sub
cmp
movsl
lahf
sbb
daa
jp
lahf
test
stos
push
ss
decl
pushf
data16
jg
addl
arpl
call
imul
das
popa
mov
in
mov
div
imul
jecxz
mov
cwtl
shll
pop
lock
sti
sub
adc
cmpsl
jl
ficoml
xchg
cmp
ret
fstpt
jge
into
xor
aaa
pop
fucompp
sbb
cmp
xchg
adc
fwait
cltd
fisttpll
scas
mov
cmc
addl
and
movsb
lods
mov
jp
jge
jo
jb
decl
fists
dec
jno
add
or
js
add
sbb
dec
test
xor
ljmp
sar
jae
mov
sub
stos
xorb
mov
rcrb
lret
mov
jg
sbb
dec
sbb
gs
fcompl
lods
das
xorb
xchg
adc
lcall
pusha
push
xchg
push
dec
mov
push
cmpsb
outsb
outsl
rcll
lret
icebp
xchg
ljmp
jne
call
jle
cli
sbb
mov
xchg
cs
adc
pop
call
dec
mov
mov
dec
add
xor
sbb
xchg
daa
or
add
jmp
xlat
or
jo,pt
int3
push
jmp
imul
fwait
dec
mov
mov
fldenv
push
cmpsb
ljmp
cmp
sub
mov
loopne
sbb
movsl
lea
addl
js
in
jbe
lcall
sub
xlat
cmp
rolb
and
ror
mov
xor
int3
cmc
stos
add
fisttpll
jb
insl
xor
cmpsl
lcall
clc
imul
or
insb
cwtl
movsl
push
add
loop
mov
lahf
in
and
dec
jg
pop
fwait
pop
fisubl
jns
scas
push
inc
inc
lret
cld
inc
fwait
mov
xor
ljmp
adc
out
dec
stos
idivb
test
pop
test
add
out
pop
mov
adc
mov
je
cmpsl
or
ret
pop
add
insl
gs
push
jmp
dec
cmp
cmp
jnp
sbb
inc
cld
add
pusha
pop
add
cmc
decl
loope
push
mov
cltd
or
fmul
cmp
inc
addb
xchg
xchg
xadd
sub
pushl
sbb
jno
orb
pop
push
add
hlt
xchg
mov
std
incl
inc
mov
add
xor
fisttps
insb
repnz
pushl
in
xchg
fstps
or
push
sahf
xchg
testl
mov
sbb
adc
incl
data16
add
push
or
sub
or
mov
inc
inc
ret
and
adc
xchg
pop
ret
mov
pop
jb
mov
sbb
nop
or
ljmp
cmovne
push
sub
lret
mov
jb
and
push
mov
rcll
insl
insl
sahf
ror
scas
sub
mov
into
inc
jbe
ljmp
mov
cld
fistl
or
pushl
subl
cltd
jl
fyl2x
dec
mov
repnz
repz
pop
add
sti
dec
jg
ljmp
mov
sub
fisttpll
mov
scas
clc
mov
ljmp
push
dec
pop
scas
ss
lods
push
sub
mov
insb
inc
adc
arpl
ljmp
xchg
lcall
pop
cmp
adc
xor
aad
cmp
add
or
adc
lret
jne
xor
mov
ljmp
fnstcw
ljmp
sub
xchg
out
call
push
mov
jae
jmp
mov
lea
dec
pop
pusha
shlb
insl
adc
adc
scas
xor
or
out
push
imul
incl
mov
push
in
xchg
xor
add
ljmp
adc
es
lcall
or
or
enter
xor
xor
mov
pop
mov
mov
rcl
push
xchg
mov
push
xor
cmpsl
sbb
or
cmp
lcall
xchg
jmp
push
xor
dec
push
es
jnp
pop
add
jg
incl
sahf
jecxz
xchg
or
lock
fsubr
and
rorl
call
fdivrs
xchg
push
xor
dec
outsb
sbb
adcl
cmpsl
pushl
lods
mov
and
dec
mov
or
aas
mov
fisttps
adc
lahf
pop
cmpsb
pop
jl
incl
in
dec
and
lea
aas
movsb
mov
aaa
pop
out
daa
pop
or
jmp
inc
inc
into
inc
sar
jg
pop
in
ret
sbb
scas
pop
adc
ficoms
adc
xor
xchg
mov
dec
jbe
push
or
pop
dec
xchg
out
dec
fwait
inc
pop
inc
mov
mov
out
sbb
add
ret
or
jns
rcrb
cli
xor
jl
mov
lret
dec
aam
pop
xchg
lds
cmp
sbb
js
jno
xor
cld
shl
xor
pushl
nop
jbe
push
inc
test
pop
movsb
pop
sbb
sub
scas
dec
fdivrs
popa
cmp
cmc
pushf
mov
and
mov
jp
nop
add
and
adc
xor
or
lcall
mov
stos
hlt
test
test
or
jg
dec
mov
sub
inc
sub
cmpsb
fdivrs
js
ss
sbb
xor
sub
pushl
es
xchg
pop
jecxz
inc
lea
dec
hlt
adc
jg
incl
hlt
cmp
fs
int3
push
scas
ds
jl
loope
out
lcall
jmp
leave
xorl
push
dec
push
pop
xchg
notb
sahf
sbb
stos
add
ja
xor
mov
dec
jbe
or
lds
pop
fildl
xor
lods
test
push
enter
push
test
fdivrl
xchg
mov
sub
cmp
cwtl
jge
xchg
hlt
out
int
xlat
pop
sarb
int3
aad
and
cmp
incl
lea
dec
aaa
imul
fdivrs
jmp
inc
lahf
ret
mov
mov
cld
addl
fsub
mov
mov
pop
and
mov
aam
ret
sub
inc
insb
pop
subb
dec
call
inc
sar
shrl
and
lods
arpl
jns
pushf
mov
pusha
rclb
push
fcos
jge
ret
cmp
add
aas
aam
xor
ret
in
inc
lcall
jg
mov
in
int3
push
sub
inc
ds
xchg
adc
daa
std
incl
add
das
lahf
push
xor
mov
loope
dec
add
mov
and
jg
sub
imul
shll
add
mov
cli
daa
or
xchg
imul
jnp
and
lahf
xchg
jae
lods
add
or
mov
loop
inc
adc
ret
loop
jns
ds
aas
jmp
pop
icebp
hlt
sub
add
push
pop
mov
dec
push
jb
aaa
sub
mov
inc
push
dec
std
out
bound
aam
leave
and
pushl
cmp
push
sub
mov
xchg
xchg
mov
leave
jno
add
pushl
lret
xlat
mov
dec
push
in
ror
push
idiv
mov
aaa
repnz
lret
fisubl
stos
subb
pop
fwait
mov
pop
movsl
aam
mov
jle
das
sub
call
loope
mov
add
movsl
push
cli
out
leave
xor
pop
ds
dec
push
sbb
shrb
mov
addb
movsl
popa
mov
outsl
sub
cld
and
lock
inc
dec
push
cmpsb
call
cmpb
jno
mov
insl
mov
mov
mov
scas
mov
fbstp
incl
lods
dec
roll
aas
loop
outsl
iret
jge
xorb
loop
fs
imul
in
inc
adc
sbb
rcrl
or
pop
imull
inc
outsb
stos
jl
pop
mov
adc
or
imul
lret
dec
mov
mov
rcrl
sub
and
and
std
and
call
sub
cmp
inc
sbb
xchg
pushf
lcall
in
mov
sbb
in
outsl
cli
fstpt
fwait
jne
and
stc
lcall
mov
call
loopne
scas
ret
scas
aas
adc
and
cmpsl
xor
sbb
dec
dec
test
xor
incl
pop
sub
int3
jp
jae
out
fistpl
mov
cmp
pusha
push
lea
add
call
js
outsl
inc
push
shlb
addb
lea
jae
lret
jge
mov
adc
decl
push
sbb
daa
insl
adc
lcall
or
pusha
pushf
xlat
xchg
inc
sti
fsubl
in
icebp
lahf
pop
popa
mov
fcomip
incl
mov
xchg
jl
push
mov
arpl
mov
test
adc
pop
mov
mov
roll
ret
mov
adc
dec
pop
cmpsl
jp
jo
test
push
jne
lea
ret
popa
mov
mov
insl
cmp
iret
cmp
jns
xchg
mov
adc
cmpsb
xor
inc
hlt
push
dec
sbb
gs
jg
adc
sub
mov
xchg
int
xor
cmp
mov
push
pop
sbb
and
ljmp
mov
jns
cmovl
lret
sub
or
mov
es
sub
pushl
faddl
iret
std
mov
into
dec
mov
push
xor
lcall
pusha
outsb
aas
ljmp
call
ret
mov
inc
stos
imul
test
movsl
or
push
cmpsl
xchg
cmpsl
cmp
xchg
stos
jl
mov
push
lods
fistpll
call
lahf
in
ret
call
shrb
xor
clc
aam
sub
dec
es
push
adc
pop
inc
adc
in
mov
decl
daa
pop
mov
cs
rcll
xchg
insb
mov
dec
js
mov
shlb
and
pop
mov
sahf
or
push
push
lcall
int
jbe
dec
adc
push
mov
add
cmpsb
ja
mov
incl
and
xchg
and
pushf
mov
stc
mov
add
jnp
repz
imul
pushf
xchg
jbe
jg
call
jae
fnstcw
push
or
dec
ss
mov
pop
or
push
pop
inc
rclb
jle
mov
mov
push
mov
or
in
repz
nop
ss
adc
repz
jmp
int
cmpsl
loop
push
and
scas
cmp
mov
test
and
push
les
jle
inc
imul
addl
ret
std
jb
inc
sub
or
fcos
dec
cmp
mov
daa
push
push
fsubl
dec
mov
es
and
pushl
sbb
jbe
push
leave
rorl
cmp
std
or
push
pop
push
pushf
push
rcll
adc
repz
sti
pushl
cmc
cli
cmpsl
addb
xor
jne
or
shlb
dec
lcall
pop
mov
dec
xchg
hlt
data16
xchg
vmwrite
bound
or
icebp
add
ljmp
iret
das
jo
mov
inc
mov
push
test
das
fsts
das
in
ret
ja
fidivrl
dec
setno
out
push
pushf
lock
cmp
sbb
inc
call
xchg
cmp
and
aas
push
stc
fdivs
fwait
cmp
sub
in
cmp
test
xor
add
push
stos
inc
ficoms
push
push
cmc
cmp
repnz
add
lcall
aas
dec
inc
and
push
and
jb
mov
jl
adcb
mov
call
push
mov
xor
lcall
testl
sarl
pushl
out
xchg
cmp
iret
sub
jmp
lods
mov
sub
or
test
call
mov
nop
push
jbe
fisttps
stos
inc
fbld
lcall
jb
jp
push
push
sbbl
iret
sub
push
inc
pop
ret
in
out
hlt
mov
adc
pushf
push
jb
pop
rolb
mov
jmp
jecxz
lea
movsb
mov
cmp
pushf
jg
inc
jmp
mov
jb
das
cmp
lods
push
mov
stc
out
cmpsl
push
fistl
insl
stc
testb
hlt
jo
sbb
mov
xor
call
jecxz
andb
scas
mov
inc
cmp
jl
push
test
repz
cmp
mov
mov
dec
test
jg
pop
dec
int3
adc
cmpsb
and
cmc
fs
int
sahf
adc
aad
lcall
jge
push
and
pop
inc
push
lret
orb
and
ret
sbb
inc
faddl
mov
insb
icebp
fadds
mov
das
in
mov
loope
xchg
mov
outsl
jmp
pop
mov
sahf
subb
mov
loop
push
call
mov
movsb
les
and
std
jp
cmpsl
cmp
pop
and
imul
xor
jle
pushl
cmpsb
into
inc
fwait
out
adc
xlat
addr16
pusha
gs
sub
lcall
sub
adc
pushl
inc
cmpsl
push
clc
repz
rolb
push
push
mov
int3
outsb
sbb
frstor
mov
mov
sub
das
xor
insl
fmul
and
sub
mov
add
mov
and
jmp
add
cmpb
mov
call
out
jb
into
leave
mov
mov
stc
add
test
xor
mov
dec
scas
push
cs
sahf
loope
jbe
cs
jae
xor
pop
add
sbb
mov
adc
mov
dec
das
push
in
cmp
mov
mov
jbe
sub
or
lcall
or
in
movsl
or
stc
shl
std
inc
insb
lret
and
xchg
ljmp
jecxz
jmp
xchg
addl
pop
idivl
jno
imul
fucomp
sub
cmp
push
shll
aam
loopne
lods
cmpb
test
xchg
xchg
fists
pop
adc
pop
cli
fmull
add
repnz
mov
sub
decl
push
dec
cltd
mov
je
popa
hlt
scas
test
pop
adc
dec
sbb
jo
out
iret
fildll
pop
mov
ss
cltd
adc
icebp
fidivl
sbb
incl
ljmp
daa
es
or
das
jmp
cli
incl
jns
popa
addr16
push
push
pop
and
das
dec
adc
pop
orl
sti
xchg
push
add
stc
pop
mov
ja
push
loope
inc
std
adc
sub
inc
incl
xor
cmp
in
xor
arpl
fs
xchg
xchg
fsubr
cmp
outsl
lock
int3
movsl
add
add
mov
lcall
jne
es
in
cmp
jecxz
loope
jp
xchg
jl
jg
int
adc
call
jmp
mov
xor
loop
cmpsb
popf
and
mov
aad
push
ret
xor
cltd
mov
addr16
jns
cli
mov
pop
add
fidivl
pop
mov
sbb
outsl
adc
jns
dec
arpl
sub
sub
int3
lret
pop
push
fcomip
call
xor
xor
mov
pop
or
mov
push
fisubrs
outsl
xor
jnp
lock
fsub
jg
stc
jmp
cli
stos
aas
dec
mov
clc
icebp
testb
scas
or
inc
shll
cli
sbb
repnz
aam
mov
rorb
pop
push
or
bound
sub
push
or
outsb
dec
aas
mov
cmpsl
sbb
test
add
mov
mov
add
ljmp
rcrb
push
jecxz
adc
out
cld
or
mov
mov
lret
in
jg
mull
shl
out
out
imul
sti
leave
lret
call
mov
push
lock
dec
dec
sub
mov
pop
mov
loope
addr16
call
icebp
mov
rclb
cs
push
fisubrs
adc
stc
mov
or
push
xchg
cmp
push
xor
outsb
jae
stos
push
outsl
xor
inc
repnz
jmp
xchg
fcomps
xor
in
popa
inc
push
and
rcrb
decl
sbb
push
nop
xor
cs
xchg
cs
cmpsb
arpl
sub
xor
decl
das
adc
xchg
xchg
imull
outsl
mov
add
es
divb
stc
jae
or
add
and
pushf
stos
clc
jbe
ficompl
ljmp
ret
into
arpl
les
clc
inc
enter
jl
mov
pushf
mov
add
push
mov
std
icebp
sub
int
adc
jmp
jmp
push
cmpsl
and
xor
mov
sarb
mov
push
and
ljmp
cmpsb
out
pop
sbb
psubusw
scas
mov
sub
stos
jmp
or
jle
xor
incl
mov
push
sbb
xor
jns
out
add
cmp
in
cmc
mov
mov
je
jnp
fwait
loop
adc
andl
fnstcw
iret
dec
mov
or
add
jmp
mov
les
push
jb
cmc
test
js
sbb
icebp
mov
inc
jo
outsb
pop
insb
fisttps
sar
cmp
mov
sub
mov
jmp
adcb
sub
inc
movsl
push
and
shlb
popa
sub
mov
mov
jmp
push
push
jbe
arpl
mov
arpl
push
or
push
push
cmp
fs
mov
sub
dec
mov
imul
int
xchg
insl
mov
ljmp
xor
xchg
lds
push
loop
fcomps
fistl
xor
mov
and
jecxz
imul
call
lret
ljmp
push
repz
loop
jecxz
aam
lcall
sub
sahf
cmpsb
incl
scas
xchg
popf
mov
es
popf
incb
jmp
inc
cmp
fdivrs
cmp
subl
push
daa
dec
xchg
sub
outsb
sbb
in
repz
jg
decl
imul
mov
dec
scas
pop
cld
jg
ret
mov
or
jmp
xchg
test
jge
and
jne
jecxz
insl
in
daa
subl
xchg
ret
xorl
stos
aas
push
js
cmp
out
rolb
mov
jl
js
test
and
cli
incl
add
mov
xor
sub
xor
int3
sub
cli
sub
cmpsb
push
xchg
pop
test
cmp
mov
ljmp
push
mov
and
test
clc
das
xchg
or
idiv
call
aas
fists
cwtl
es
adc
mov
pushf
mov
sti
push
les
mov
inc
mov
cmc
jp
loopne
sbb
iret
imul
outsl
pop
movsb
outsb
xchg
xor
decl
jo
inc
fisubl
jns
lret
das
pop
in
xchg
adc
adc
jmp
dec
sbb
mov
or
lods
or
cli
pop
cld
scas
inc
pop
leave
push
jg
mov
pop
and
rdmsr
sub
mov
sbb
orl
std
lcall
dec
and
or
dec
sbb
push
fadds
mov
add
push
jae
pushl
aam
add
push
pop
addl
ja
or
call
lods
nop
jmp
testb
lret
push
push
enter
cmp
negb
pushl
repz
adc
test
xor
dec
mov
pop
sar
dec
mov
ja
pop
je
mov
rcrb
mov
jle
push
xor
pop
mov
lods
mov
mov
scas
and
sar
jl
inc
jecxz
push
ds
add
fs
jmp
and
leave
adc
xor
xchg
stos
sbb
stos
rolb
push
ret
jb
xchg
in
movsb
test
pop
data16
and
dec
push
cmp
jmp
inc
push
inc
dec
pop
loop
pop
fadd
bound
mov
out
cmpsl
push
or
lock
call
call
lds
das
rolb
cmp
add
xor
cmpsb
test
fldl
xchg
fldt
je
lods
pextrw
pop
mov
cmp
dec
arpl
push
popa
es
sub
mov
ljmp
and
fwait
das
cmp
add
add
rcr
sbb
sbb
dec
push
lcall
pop
sahf
xchg
rcr
icebp
push
xor
outsl
lcall
cmp
in
mov
xor
push
xchg
sar
mov
pop
in
loop
sbb
sub
add
mov
fiaddl
clc
mov
lcall
dec
jl
lahf
lcall
mov
lock
mov
sub
out
xchg
pop
pop
inc
pusha
ja
out
in
pop
dec
popf
repnz
push
and
push
inc
sub
pop
mov
fdivl
lret
xor
cltd
pushl
mov
or
cmp
pop
or
sbb
cwtl
dec
and
pop
hlt
testb
push
or
jp
dec
ljmp
mov
cwtl
push
stos
push
sti
inc
cmp
call
cmp
call
xor
jno
xchg
inc
adc
mov
mov
out
xchg
adc
es
daa
outsb
repnz
pop
sub
xchg
sbb
call
sub
xor
push
movsl
xlat
xchg
mov
cmp
cmp
repnz
dec
hlt
inc
aas
inc
leave
shrb
jmp
inc
ljmp
rorb
sub
pop
ljmp
nop
sbb
push
aad
lret
and
out
outsl
mov
or
and
push
mov
scas
ljmp
scas
cli
out
sbb
and
xor
push
mov
loop
mov
and
ret
adc
sbb
ja
cmp
aaa
cmpsb
nop
loopne
out
cli
ds
dec
jno
sbb
dec
add
imul
test
ljmp
shl
sub
ds
xor
dec
adc
nop
jmp
or
sub
inc
mov
pushl
and
leave
pusha
mov
jg
imul
adc
xchg
pushf
xorb
and
adc
in
push
inc
cld
shlb
mov
or
pop
cwtl
jne
mov
push
xlat
jo
jne
add
filds
pop
lds
adc
decl
and
movsb
mov
inc
adc
xor
and
mov
xor
add
xorl
imul
jg
jb
jl
nop
or
jmp
out
sub
out
xor
mov
adc
pop
push
jmp
loope
data16
out
rcrl
leave
adc
imul
xlat
xor
scas
in
arpl
ljmp
or
inc
fiadds
inc
mov
cmp
sbb
or
sub
pushf
je
decl
clc
mov
js
leave
movsb
dec
sbb
orb
andb
jg,pt
aaa
cld
insb
or
push
mov
lods
cs
mov
or
cmp
imul
js
les
daa
lret
fs
xchg
pop
out
pop
iret
test
sub
fdivs
push
repz
enter
dec
mov
push
loopne
add
in
pop
notl
or
test
sub
jb
jp
inc
pop
ljmp
stos
or
es
idivl
repz
lods
add
ss
aad
icebp
aam
xor
jge
adc
stc
jnp
pop
jo
dec
loopne
in
mov
xchg
fisubl
sbb
jg
scas
cmp
adc
insl
and
jae
mov
call
sbb
jbe
ljmp
jmp
stos
adc
pop
push
js
cmp
stos
jge
ret
sbb
ljmp
mov
aas
xor
mov
call
xchg
mov
inc
sub
and
out
mov
bound
push
lcall
pop
andb
dec
dec
cmpsl
adc
je
adc
add
aam
or
fucomip
cmp
enter
inc
jb
fidivl
das
xchg
and
xchg
sub
and
mov
cltd
add
mov
in
xor
jo
dec
and
pop
pop
xor
jp
push
xor
fstl
pop
stc
cmp
call
add
fs
mov
hlt
mov
dec
mov
dec
pop
sbb
pop
and
movsb
pop
add
icebp
cwtl
dec
pop
imul
and
mov
scas
stos
jle
hlt
lcall
inc
add
into
mov
loop
stos
pop
push
lahf
push
subl
cmp
outsb
incl
jae
or
int3
mov
mov
push
or
mov
movnti
xor
popa
cmpsl
ret
xchg
dec
fldt
add
fdivl
or
cli
pop
popf
push
aad
or
cli
jg
cmp
push
mov
push
xchg
jl
xchg
add
cmp
decl
sub
data16
push
mull
fs
jo
mov
or
xchg
xor
cltd
mov
insl
jmp
xchg
repnz
in
sub
movsl
mov
xor
push
mov
fwait
inc
jnp
jmp
incl
push
jnp
dec
dec
scas
outsl
call
jb
rclb
aad
rol
ficoml
dec
or
xor
decl
jp
inc
test
sbb
imul
sahf
movsb
rclb
imul
decl
fld
sti
lods
push
mov
scas
jg
and
or
pop
add
aas
push
push
jmp
lds
nop
addr16
insl
outsb
int
popa
pop
ret
out
jbe
jl
icebp
push
cmp
jl
mov
xchg
xor
adc
jo
xor
icebp
adc
mov
dec
sbb
xor
or
and
xor
popf
inc
add
xor
dec
pop
xchg
scas
fcompl
mov
loopne
xchg
pop
inc
mov
lock
mov
xor
call
mov
xchg
sbb
push
mov
pushf
aas
pop
dec
inc
cmp
out
pop
fsubp
mov
mov
mov
enter
xchg
push
cld
or
and
ljmp
data16
adc
out
enter
incl
sti
sbb
repnz
cltd
xchg
xchg
mov
jns
mov
cmpsl
mov
cmc
sub
call
fisttpl
jl
pmaxsw
aas
cli
lcall
scas
scas
mov
pushl
mov
lds
outsb
mov
mov
notb
pop
loop
in
decl
fisubs
in
nop
push
jge
out
adc
in
mov
decl
inc
fcmovu
add
mov
lods
cmp
ret
mov
cmp
lods
xchg
jbe
fisubrs
jl
xor
jo
mov
ss
jp
std
in
jl
inc
ja
mov
sti
push
pop
shrb
test
mov
xchg
push
push
imulb
test
inc
push
lret
arpl
xchg
imul
aas
lahf
xchg
add
out
mov
ror
dec
movb
ror
rorl
test
decl
lahf
loopne
dec
push
jne
daa
ljmp
jmp
sub
in
popa
adc
lret
jns
mov
test
scas
testb
fldt
jmp
lahf
mov
gs
call
in
mov
ss
cmp
jno
fists
push
xlat
arpl
dec
ja
stos
jp
add
xor
ret
clc
jg
in
xor
incl
inc
mov
push
ljmp
cmp
gs
push
ror
es
into
sub
jg
and
ljmp
hlt
pushl
sahf
sbb
push
call
scas
loopne
test
mov
popa
test
cmp
aad
hlt
xchg
call
imull
inc
lret
insb
and
jmp
mov
pusha
jge
mov
jg
mov
js
call
mov
dec
sbb
out
into
jo
test
and
imul
xchg
filds
decl
pop
ljmp
sar
out
sub
in
mov
outsb
pop
aad
adc
sub
test
clc
decl
and
push
lock
add
xor
call
hlt
mov
mov
pop
stc
jp
xchg
jecxz
xchg
cltd
das
push
sbb
dec
and
sbb
incl
call
lds
cmp
loop
icebp
aaa
mov
adc
in
jo
jmp
mov
fnsave
fwait
inc
lods
inc
lahf
insb
testl
xchg
test
notl
push
sbb
xchg
cmpsl
outsl
xchg
xchg
cmp
sub
pop
and
xor
mov
pop
incl
stos
or
bound
fsubl
in
sbb
mov
rolb
jmp
call
aad
push
insb
je
ret
jg
dec
js
push
mov
idivl
stc
dec
mov
jmp
int
xor
lret
mov
dec
inc
push
mov
sub
aas
shll
mov
aas
sbb
out
out
jp
xchg
lahf
inc
cltd
jle
fsubrp
popa
fcomip
jmp
nop
add
sbb
pusha
inc
mov
fbld
sub
lret
lods
sti
imul
adc
dec
adc
xor
test
dec
cli
push
int
ljmp
cs
imul
adc
push
rorl
xchg
mov
mov
cld
std
dec
cmp
jl
cmp
add
jae
les
jg
mov
jle
jae
or
repz
sbb
sbb
jae
test
shrb
sub
sub
jns
scas
in
push
mov
stos
pop
push
scas
xor
mov
add
mov
int3
mov
orb
test
cmp
inc
cmp
arpl
inc
jmp
fsubs
push
rcr
incb
imul
cmpsl
mov
incl
arpl
popf
xchg
ds
inc
je
stos
ror
jle
mov
stos
add
fisttps
fucomp
xor
fcomps
mov
cmp
jg
addr16
pop
cmc
mov
inc
adc
in
mov
cwtl
outsb
fistl
mov
fsubrs
mov
mov
lcall
mov
adc
out
and
incl
add
push
test
nop
jl
mov
hlt
pop
cmpsb
cwtl
push
decl
pushl
iret
mov
sbb
mov
push
jmp
incl
rorb
mov
sub
adc
lods
out
repnz
and
cwtl
ret
cwtl
scas
aaa
xor
and
pushl
dec
aaa
fucomip
pop
cli
pop
test
xchg
jmp
push
cs
rcrb
jnp
add
jae
incb
aad
test
or
xor
es
fsub
iret
sar
popa
das
cmp
fisubrs
mov
add
or
subb
lcall
jge
lock
aam
pop
js
mov
add
sbb
xor
dec
cli
inc
cmpsl
mov
popa
push
rcll
int
ljmp
incl
mov
inc
mov
xlat
mov
stos
mov
cmpsb
lea
test
and
decl
pop
jo
add
jns
push
inc
cmpsb
sub
and
pushf
clc
push
cmpsl
adc
out
jmp
outsb
into
cltd
mov
cmp
inc
ja
add
inc
pop
xlat
jmp
xchg
xchg
pop
loope
lods
pop
xchg
fcoms
test
clc
ret
xor
jae
rcll
mov
in
aas
xor
shll
cwtl
cld
cmp
xor
repnz
in
xchg
add
loopne
add
sub
int3
mov
mov
lods
mov
fs
aaa
movsl
or
mov
mov
mov
gs
int3
cs
mov
mov
jmp
mov
or
push
fldcw
test
ret
imul
mov
mov
lcall
loope
jne
arpl
lret
out
inc
aad
lock
lea
xchg
and
js
incl
sub
dec
xchg
push
xor
lds
incl
pop
fistl
int
push
sbb
lcall
sub
inc
mov
cmpsl
scas
hlt
mov
aas
mov
pushl
jo
mov
jle
out
out
stos
aam
lods
into
and
jp
sub
into
fistpl
mov
pushl
ja
adc
adc
cmp
cmp
es
scas
das
or
movb
lods
xchg
pop
lret
cmp
inc
notl
sbb
ret
jno
dec
xrelease
fs
add
xor
mov
add
inc
movsl
mov
lcall
xchg
or
pop
xchg
call
imul
add
nop
mov
cmp
inc
xchg
bound
incl
push
adc
xchg
pop
hlt
out
lea
aas
insb
xchg
shrb
mov
test
mov
push
xchg
inc
stos
mov
in
subb
stc
cs
incl
in
lcall
inc
cmp
nop
mov
mov
icebp
dec
jb
outsl
insb
push
mov
inc
inc
sbb
int3
gs
inc
jno
push
cmc
repz
stos
xor
cs
nop
rolb
mov
int3
inc
lcall
rcrb
dec
mov
or
mov
jno
and
push
aas
inc
mov
scas
dec
int3
fdivrs
jl
cmc
es
sbb
mov
aad
jne
movsb
aaa
std
jmp
adc
arpl
pop
jecxz
frstor
adc
mov
inc
inc
cmp
subl
enter
and
xchg
xchg
notb
test
jae
insl
aad
lcall
cld
push
outsl
cmp
adc
daa
mov
fistpl
sbb
jp
outsl
lock
jge
push
stos
decl
lock
in
and
jl
xchg
test
cmp
lds
mov
adc
sbb
xor
mov
fwait
inc
cltd
out
mov
jg
or
pushl
adc
std
fldl
xor
pushf
decl
xchg
jnp
sbb
sub
loope
add
aad
mov
in
cmp
pushl
and
lea
repnz
std
insb
pop
inc
inc
lret
fs
mov
into
xchg
fsubl
pop
jno
pushl
pushf
jmp
adc
pop
outsl
cld
mov
jo
pop
mov
dec
xlat
lock
mov
decl
pop
mov
mov
dec
add
es
in
inc
and
hlt
cwtl
mov
fs
pushl
pop
xor
inc
lods
cli
stos
mov
std
mov
or
decl
adc
addr16
inc
dec
inc
packssdw
inc
int
divb
fcompl
stc
mov
inc
idiv
call
push
mov
sub
out
pop
dec
sbb
and
push
lods
setns
mov
loop
jg
sub
fsubrs
and
inc
and
sub
jmp
hlt
in
fs
cmpsl
mov
movsl
mov
mov
add
mov
test
lcall
push
jno
in
mov
rep
es
std
mov
and
xor
add
adc
xchg
fiaddl
inc
add
pushl
jno
lret
jg
mov
hlt
mov
jl
mov
push
das
orb
aas
call
sub
cmp
fsubrs
adc
lods
out
xor
xchg
or
idiv
ror
and
mov
ljmp
mov
scas
imul
xor
pop
cmp
ret
jmp
inc
call
cwtl
push
lret
inc
ljmp
mov
adc
decl
ret
and
xchg
imulb
mov
jne
ret
out
mov
sbbb
cmp
stos
in
cmpsl
cmp
sbb
sub
loope
fs
bound
enter
iret
or
push
call
fs
int
push
icebp
mov
dec
cwtl
fidivs
or
ret
mov
mov
xchg
fwait
inc
pop
add
loope
sub
xor
inc
stos
jae
pop
and
rcrl
or
daa
fldcw
mov
insl
jle
pushf
sub
fcomi
mov
stos
mov
stc
stos
aam
jbe
jp
call
dec
mov
sub
aaa
std
call
fsubrp
cwtl
and
pop
iret
adc
jnp
shlb
int
fcomps
push
mov
jmp
dec
icebp
pop
xchg
in
hlt
shl
mov
pusha
pop
mov
cmp
lcall
adc
pushf
lea
fbstp
mov
rol
scas
xor
ret
cs
mov
sar
push
push
sub
mov
subb
movsl
imul
scas
xchg
pop
aad
call
mov
aas
cwtl
mov
sahf
mov
jl
mov
arpl
stos
fsubrp
scas
add
fnstenv
and
cmp
xchg
xchg
imul
jmp
inc
shr
mov
pop
inc
decl
ljmp
cwtl
fistpl
pop
push
lcall
inc
mov
loope
aaa
xchg
jmp
push
rcr
popa
jnp
jo
aaa
add
aaa
js
push
lods
push
call
mov
pop
add
and
sbb
mov
imul
or
jmp
bound
or
dec
mov
mov
lcall
sbb
mov
ljmp
sbb
add
pop
icebp
jg
xchg
inc
pop
std
add
daa
cmpsb
movsl
in
push
dec
inc
insb
cmp
aaa
push
fdivrl
fidivl
arpl
mov
jbe
cwtl
cmp
push
add
lcall
cmp
test
ret
shrl
in
leave
mov
lock
sahf
enter
repnz
incl
test
inc
dec
pop
push
ljmp
adc
lea
jmp
mov
dec
mov
ljmp
daa
enter
fistpll
xchg
stos
mov
test
fdivr
call
std
das
inc
add
jno
idivb
cmp
shl
jo
jo
cmpsl
cld
lcall
ljmp
push
inc
mov
ss
inc
mov
push
repnz
insl
push
loop
call
cld
jge
loopne
mov
dec
add
dec
and
sbb
lcall
sub
jne
pop
sbb
dec
and
lcall
mov
je
push
sub
cmp
adc
fdivrs
test
pop
xor
and
stos
xchg
cltd
cmp
pop
cmp
inc
addl
call
sbb
cmpsl
or
inc
or
sti
sarb
mov
lea
xchg
incl
mov
push
sub
rorl
or
lods
mov
jb
cwtl
decl
inc
adc
scas
push
push
inc
icebp
pop
sti
push
adc
stos
inc
mov
lcall
push
lahf
out
cmp
inc
ret
push
loope
dec
mov
or
imul
mov
or
push
push
lret
jne
xchg
adc
ffree
ss
adc
xchg
push
in
aam
pop
xchg
mov
aam
into
scas
cli
jmp
push
lods
xor
cmp
aaa
push
int
imul
inc
fimuls
pop
in
test
add
lods
je
push
adc
sub
shrl
cli
jae
and
lcall
xor
xor
stos
cmpsl
jns
outsb
roll
pop
cwtl
shll
dec
jne
cmp
mov
xchg
sub
sub
jg
call
ja
or
test
dec
inc
xor
and
pop
dec
or
hlt
push
decl
shr
jne
sub
jbe
imul
fld
out
xchg
cmpsb
fwait
adcb
mov
out
outsl
cmp
divl
or
jmp
pop
and
push
sub
lcall
mov
test
nop
mov
test
call
fists
push
dec
test
out
nop
push
xchg
mov
pop
xor
dec
mov
aad
mov
mov
cmp
mov
pop
adc
jmp
shll
sub
cwtl
jo
mov
jne
jl
add
and
ljmp
incl
enter
and
es
cld
xchg
push
push
movsl
pushf
repnz
mov
ljmp
push
push
ret
and
lea
jo
ret
jns
shll
or
incl
cmp
or
data16
lcall
xlat
xor
out
out
inc
outsb
cld
cmp
lret
mov
lcall
add
lods
les
adc
leave
iret
or
mov
lcall
xor
in
cli
in
lock
xchg
or
and
push
mov
sub
std
call
cli
xor
adc
jp
int
sub
rolb
mov
pushl
mov
adc
lret
mov
dec
xchg
sbb
or
call
loopne
je
xor
xor
and
dec
mov
lcall
cmp
out
adc
les
sub
lahf
mov
insb
leave
arpl
inc
pop
xchg
js
inc
std
mov
push
push
js
scas
or
sbb
and
pop
adc
repnz
jmp
pop
es
or
jl,pt
mov
lahf
bound
mov
pop
mov
push
push
cmp
sbb
pusha
mov
adc
ljmp
fistpl
ja
mov
lret
adc
sub
dec
mov
dec
mov
mov
inc
test
pop
into
stos
mov
sub
xchg
lds
mov
in
lcall
pop
and
scas
xchg
out
mov
test
mov
inc
movsl
mov
mov
xchg
aas
mov
mov
pop
loope
xor
mov
ljmp
clc
out
and
cmp
and
mov
movsl
mov
xor
ljmp
nop
faddl
iret
fs
jbe
adc
jbe
imul
push
out
std
call
mov
mov
pop
mov
data16
mov
jmp
xchg
test
sbb
push
shrl
jbe,pn
ljmp
shl
incl
cmp
lcall
jnp
and
push
xchg
push
test
std
sar
mov
loop
popf
jnp
daa
mov
mov
cmp
pop
inc
jb
add
xchg
loope
out
ljmp
cmp
xchg
cmp
push
mov
push
mov
pop
mov
shrl
jmp
push
insb
divb
jno
js
pop
jecxz
inc
in
sbb
sbb
pop
or
sub
mov
popa
pop
bound
stc
in
flds
fwait
adc
pushf
call
push
pop
xor
out
fbstp
add
push
push
ret
sahf
std
mov
cmp
xchg
shll
sub
xchg
and
cmp
scas
repnz
imul
decl
inc
mov
jns
sub
flds
cwtl
std
dec
rolb
out
mov
xchg
mov
incl
aaa
jge
pop
fiaddl
andb
gs
incl
lea
mov
add
mov
jbe
aad
scas
in
clc
push
xor
test
divb
addr16
pop
sahf
cmp
dec
shrl
lret
jae
add
les
sti
xor
inc
or
incl
cld
les
lods
mov
test
jp
jg
shlb
jbe
push
mov
mov
lahf
jmp
dec
repnz
dec
mov
call
stc
sbb
xchg
jno
scas
pop
frstor
pop
jmp
pushf
mov
lds
mov
icebp
pop
lcall
jp
adc
out
cltd
add
std
lret
test
pop
mov
jecxz
ss
add
jge
das
sbb
cld
pushl
aad
fdivl
push
adc
outsb
jo
repnz
jno
call
repnz
pop
or
push
or
imul
mov
decl
rolb
dec
ret
cwtl
movsl
lahf
sahf
jns
inc
or
pop
sbb
add
xor
shll
aad
pushl
xchg
fnstsw
mul
ret
xorb
add
mov
sbb
xchg
or
incl
cld
fldl
or
and
sahf
push
lcall
mov
lcall
leave
pop
push
push
jmp
addl
jae
mov
jnp
xchg
test
xchg
push
cld
push
xchg
popf
xchg
fcompl
lret
lret
or
ljmp
pop
pop
or
je
xor
jecxz
add
test
fisubs
jle
push
dec
pop
scas
sbb
inc
cmc
mov
push
fs
insl
xor
lods
add
inc
dec
ljmp
sub
fcmovne
cmpsb
dec
leave
add
bound
push
testb
loopne
insb
pushl
or
pop
cmp
cmp
fcos
ds
xchg
mov
pop
stos
xlat
bound
lcall
mov
mov
rorl
jmp
adc
mov
jp
push
and
sbb
in
cmp
mov
lods
pop
cmp
sbb
xlat
test
stos
std
jno
negl
push
or
xor
lret
inc
xchg
imul
fwait
jecxz
lcall
nop
add
data16
jmp
orl
bswap
dec
movsl
repz
mov
rcl
xor
jmp
fsubs
mov
cmp
stos
push
fldcw
aas
test
adc
push
sub
call
adc
xlat
pop
sbb
mov
enter
into
aaa
cld
call
je
ss
cld
stc
or
mov
push
cmp
loop
xchg
dec
ljmp
push
mov
sti
dec
xchg
mov
fstps
into
jg
jecxz
das
and
dec
push
cmp
lcall
fldenv
mov
dec
jnp
pop
push
and
loopne
mov
ds
push
and
xchg
es
lcall
cmp
push
jbe
adc
sub
repnz
push
pusha
mov
xchg
dec
xor
cmp
decl
xor
mov
cmpl
pop
cmp
fildll
mov
scas
or
imul
ja
and
pop
test
inc
call
dec
push
cwtl
scas
aas
jo
pop
pop
dec
inc
mov
and
scas
imulb
addr16
xchg
xor
leave
push
adc
es
icebp
orl
cmpsl
popa
xlat
ret
inc
popa
aam
jg
push
mov
dec
arpl
lea
repz
outsb
nop
dec
lods
data16
dec
sub
rcr
mov
mov
mov
rcrl
imul
xchg
repnz
push
jo
push
call
mov
test
mov
fwait
pop
or
sub
or
and
sub
mov
in
mov
adc
or
outsl
inc
sub
mov
jmp
mov
stc
sar
jg
push
jge
stos
test
cwtl
mov
sahf
cmpsb
or
dec
bound
push
lret
shr
addb
movsl
cmpsl
and
add
test
push
or
pop
sbb
movsb
das
sbb
lcall
xor
das
test
gs
push
nop
and
test
and
sahf
fdivrl
jmp
fs
push
push
xchg
mov
aad
sbb
int3
lods
cmp
enter
mov
mov
and
mov
dec
rcll
dec
in
push
ss
into
inc
cmpsb
stos
mov
push
pop
jns
fisubl
and
xor
popa
xor
in
ftst
repnz
bound
xchg
ljmp
addb
dec
jg
pop
imul
adc
aad
cmp
cmpsb
cmpsb
add
int
ljmp
test
sub
aas
and
adc
adc
test
sbb
insb
cli
pusha
ljmp
fwait
dec
mov
mov
pop
add
and
jle
mov
lods
fcmovnbe
mov
push
mov
iret
sub
sbb
lcall
rcll
filds
dec
cmp
dec
repnz
ret
mov
xchg
scas
xchg
in
dec
ds
jg
in
push
jecxz
pop
out
ficoml
inc
aad
push
mov
loopne
sbb
popa
out
mov
pop
ror
adc
popa
enter
lds
cmp
jmp
sbb
cmpsl
fildll
js
imull
incl
push
sbb
loopne
decl
outsb
repz
icebp
or
xor
arpl
jl
pop
pop
ss
int3
jb
test
incl
inc
xorb
push
inc
pop
mov
imul
xor
jg
adc
lock
cli
lahf
pop
pop
pop
jae
mov
xchg
cli
mov
xlat
jmp
ja
lods
ret
call
sbb
fildl
push
dec
jmp
jg
sub
out
push
inc
vcmpps
mov
jmp
lret
in
lods
cs
adc
jmp
cmpsb
stos
je
sub
ficoml
mov
rcr
mov
mov
cmpsl
dec
pop
pop
dec
or
clc
bound
mov
pusha
add
push
xor
adc
lods
aas
inc
pop
xor
lcall
movsl
or
repz
mov
in
xor
addr16
es
pop
decl
cmp
pop
xchg
jge
inc
sbb
pop
mov
mov
jge
in
fsubrs
jmp
stc
aad
aam
xchg
jmp
call
lcall
sbb
mov
fs
sub
xchg
xchg
gs
push
cld
std
inc
fcmovu
jmp
jmp
mov
jnp
xchg
sti
xor
popf
lret
data16
loope
addr16
movsb
or
lods
adc
pop
lock
mov
inc
rcr
or
inc
arpl
push
cmp
mov
lods
cli
das
in
lods
push
in
cmp
cmp
push
sbb
out
push
mull
and
fnsave
cmpsl
mov
pop
and
or
dec
fadds
cs
sbb
adc
xchg
mov
incl
mov
adc
test
in
jno
pop
ja
sahf
or
cmp
jg
lods
jns
push
sbb
ret
pop
mov
fs
jo
fcos
push
inc
shr
adc
xchg
mov
jo
dec
inc
mov
adc
mov
adc
test
xor
sub
sbb
cltd
dec
data16
ja
push
pop
rclb
or
hlt
decl
sarb
into
mov
xchg
pop
xchg
mov
outsl
scas
push
fmul
ja
clc
or
inc
mov
shl
std
inc
test
dec
ja
jecxz
xor
lret
cli
mov
jge
movsb
movsb
stos
ftst
inc
out
dec
nop
pop
nop
pushf
sahf
dec
clc
fwait
scas
lcall
pop
dec
fisttpl
mov
leave
sub
jo
fsubrs
add
movsb
nop
push
xchg
in
dec
xor
ds
incl
jae
shr
cmp
enter
push
shlb
fcmovnu
push
lcall
inc
xchg
push
in
or
push
jmp
adc
adc
aam
sbb
push
sub
jg
movsl
stos
cmp
fcoms
pop
mov
and
jp
push
jns
sbb
cmp
addr16
jb
incl
ret
mov
in
jns
jns
push
xchg
and
sub
call
adc
leave
stos
lods
stos
test
dec
aaa
mov
stos
fcoml
lcall
inc
sahf
imul
scas
lahf
test
adc
mov
movsb
fwait
jae
into
sbb
fcomip
incl
or
push
jge
push
or
fildll
daa
dec
ja
pushl
negl
repnz
fidivs
jmp
mov
sub
inc
and
cltd
jge
push
dec
add
sti
imul
lods
sub
add
xlat
sbb
mov
pusha
dec
mov
or
sub
hlt
mov
decl
sub
das
fisttps
lcall
addr16
repnz
jmp
mov
aad
loope
clc
mov
inc
mov
sbb
push
or
jl
inc
push
enter
inc
sbb
data16
clc
pushl
jns
add
std
loop
xlat
test
inc
xchg
outsb
and
mov
das
mov
jae
ljmp
xlat
mov
dec
ret
push
pop
cmp
jae
xor
imull
xchg
xchg
pushl
mov
xchg
pushf
lahf
lret
sub
push
mov
xor
pop
adc
sahf
cmp
mov
fldenv
sti
stos
cmp
push
daa
mov
cmp
pop
fsubrs
and
sbb
das
gs
xor
call
inc
outsb
inc
imul
call
cmp
jmp
js
in
gs
xchg
jmp
lcall
jmp
inc
xchg
out
faddl
xor
cmp
push
popf
fildll
inc
fsubl
dec
sbb
push
or
pop
mov
or
ss
xorl
sub
in
mov
or
xchg
aam
fisubrs
jne
sbb
mov
loop
ljmp
pushl
leave
mov
rorl
xchg
mov
mov
ds
decl
sub
imul
fstpt
aaa
inc
pop
fidivs
push
sti
cmpsl
adc
or
int
lcall
fwait
push
scas
leave
cwtl
xchg
sbb
mov
jno
popa
mov
divl
popa
push
cmp
mov
mov
cmp
and
lods
in
and
push
ljmp
sub
cmpsb
mov
jae
cmp
dec
pop
nop
add
out
rcl
jns
pop
cmp
gs
mov
loopne
sub
stos
jb
jnp
sahf
ret
cmp
es
mov
jmp
jl
dec
mov
ss
movsl
or
cmp
aas
rcrl
bound
xor
lcall
xor
push
mov
rorb
fildll
nop
jecxz
mov
ljmp
pushf
loop
mov
lret
sti
push
fwait
lahf
cmpsb
lea
fcmovne
ficomps
mov
je
pop
cmc
decl
out
outsl
jle
sbb
jle
push
sbb
call
outsl
jo
sbb
movsb
stc
testb
and
add
push
cwtl
fcmovnb
or
mov
adc
pushl
stos
out
pop
cmp
xchg
fst
jne
ror
mov
dec
int3
imul
iret
pop
das
pushl
into
mov
sti
into
pop
inc
and
pop
scas
clc
int3
sbb
push
inc
mov
cld
jmp
or
lcall
ret
inc
sub
pop
mov
cmp
test
sti
xchg
mov
in
inc
dec
int3
sbb
adc
decl
loopne
sbb
xor
pushf
orl
jp
fildll
pushw
cld
jno
leave
insl
push
adc
inc
pop
ret
sahf
notb
pop
mov
push
push
jp
je
mov
pop
pushl
testl
loope
lods
stc
inc
aam
mov
gs
sar
ljmp
jl
sbb
sti
leave
rorb
insb
or
out
push
jle
jecxz
cmp
pop
arpl
mov
test
push
mov
jns
leave
sub
fisttps
cld
jmp
lods
mov
fninit
adc
sbb
sub
adc
call
pusha
stos
jb,pn
ficompl
shll
movsb
jbe
rclb
xor
rcl
loop
pushl
cwtl
dec
dec
push
mov
mov
dec
sti
dec
adc
in
call
dec
cmp
loop
loop
call
mov
inc
pop
mov
or
ret
pop
jae
push
xchg
adc
fsubr
mov
sahf
std
sbb
xor
sub
lcall
sbb
jne
jno
xor
mov
andl
pop
xor
aad
xchg
iret
sbb
jns
sbb
jne
test
dec
mov
ljmp
inc
pop
mov
xor
in
lahf
cmp
pop
add
lret
imul
inc
out
dec
addb
jnp
and
xorl
out
pop
pop
adc
mov
fcmovne
mov
jl
sub
call
adc
or
pop
scas
adc
psubq
roll
sbb
gs
mov
int3
or
imul
std
adc
pop
cmp
fstpl
adc
add
add
int
inc
outsl
xchg
dec
stos
cmp
pop
loopne
mov
test
xlat
add
inc
sbb
pop
xor
fisubl
incl
inc
dec
mov
bound
xchg
in
mov
add
cmp
sbb
call
mov
dec
aas
fdivl
in
mov
jb
dec
pop
and
mov
or
decl
lret
push
mov
and
mov
xchg
lods
mov
fwait
or
test
icebp
pushl
add
rcrl
fmuls
sbb
sbb
fwait
cmpsl
jecxz
fidivs
insl
decl
mov
mov
cltd
daa
ja
lock
xor
incl
mov
cmpl
std
add
push
dec
les
int3
sar
lcall
dec
or
insb
cmp
in
push
fidivrs
push
addr16
mov
enter
popa
imul
mov
sbb
or
call
and
mov
xor
xchg
ret
jo
push
pop
jne
subb
das
dec
mov
sub
cld
incl
loop
ds
sarl
movsl
pop
ljmp
push
mov
sub
jo
xlat
mov
or
out
jbe
subb
jp
leave
mov
incl
cld
clc
and
xor
inc
push
test
xchg
lret
mov
push
xchg
dec
cs
jle
push
pop
mov
xchg
lcall
xlat
mov
pop
fisubrl
jo
enter
pop
pushf
mov
cmp
dec
push
xchg
or
sbb
add
xor
arpl
cmp
mov
push
in
xchg
test
and
ret
icebp
mov
dec
mov
push
add
adc
cld
jecxz
jno
sbb
sahf
dec
bound
cwtl
or
or
in
xor
stos
cmp
jns
sbb
lock
clc
hlt
xorl
pop
les
mov
loopne
xchg
adc
out
sarb
mov
xor
adc
sub
sub
aas
mov
sub
mov
ljmp
dec
mov
and
sti
cmp
into
iret
testb
mov
imul
decl
cwtl
mov
sahf
add
add
push
aad
nop
pop
out
roll
mov
cwtl
cli
lods
decl
stos
pop
repnz
call
stc
dec
in
pop
ficomps
lcall
jns
test
das
sbb
mov
mov
cmp
stc
sbb
push
test
pop
jmp
cld
movsl
mov
jg
call
sub
mov
sbbb
outsl
jle
mov
xor
xchg
sub
insb
dec
xchg
imul
mov
push
insb
ficoms
aaa
repnz
push
push
dec
sahf
sbb
cld
ljmp
shl
pop
test
cli
jl
je
push
daa
lret
stos
and
inc
xor
call
mov
add
push
out
adc
and
test
sbb
call
cmp
xor
roll
aas
imul
ficompl
incl
fsubrl
dec
cmp
mov
rorl
movsb
xchg
dec
data16
pushl
std
mov
jne
inc
jno
fadds
dec
popfw
shll
jo
fdivrs
inc
ljmp
ljmp
ljmp
and
clc
ret
test
cld
xchg
fcomps
mov
mov
jnp
cld
sbb
ljmp
mov
call
jp
mov
fwait
mov
push
ljmp
xor
out
add
mov
jg
stc
fisubl
stc
jp
push
sbb
mov
sub
push
ljmp
and
xorb
push
loop
mov
push
cld
mov
xchg
xchg
lret
cmpsb
repnz
sbb
jnp
aas
in
outsb
dec
cld
fisttps
jp
in
ss
jne
add
pop
xchg
incl
cmp
push
sahf
lret
ds
sub
and
mov
xlat
ljmp
movb
std
ret
jg
adc
pop
loope
or
into
xchg
adc
mov
jg
jns
push
mov
shrb
decb
ret
push
mov
push
jp
adc
adc
mov
mov
sahf
pop
in
sar
jg
xchg
loopne
mov
dec
out
daa
gs
sub
jg
repnz
ss
adc
sub
push
test
xor
std
leave
lock
pop
scas
or
movsl
lcall
inc
rolw
xor
mov
cmc
orb
xchg
outsb
cmp
pop
subb
stos
xor
rcrb
pop
lcall
outsl
xchg
add
ljmp
cmp
pop
or
ja
jbe
rclb
in
sub
dec
int3
and
fucomip
rcl
push
jg
sub
popf
or
iret
mov
repz
xor
xor
add
jge
test
jno
mov
clc
dec
inc
or
push
pop
std
in
push
popa
fs
cs
fwait
xlat
shrl
jecxz
push
adc
lahf
icebp
rolb
cld
pushl
rcll
movsl
test
out
add
add
cmc
push
add
jge
fstl
bnd
lcall
sahf
dec
pushf
jo
or
sbb
lods
jmp
push
int3
stc
es
int
daa
movsl
jnp
xor
cmp
jmp
push
mov
pop
sub
aaa
negl
dec
inc
in
ret
lods
fdivrs
pop
adc
clc
dec
mov
dec
ss
push
rorl
sbb
push
mov
pop
pop
jae
cmp
incl
inc
leave
adc
pop
pop
dec
lods
cmp
ficoml
std
pop
or
int
dec
call
and
lret
icebp
dec
inc
mov
mov
and
mov
test
fildll
mov
jb
add
pop
push
and
fcomip
in
fldcw
jle
ljmp
imul
and
adc
add
jae
lret
out
mov
and
bnd
mov
fcomip
inc
xchg
lret
sar
xchg
push
ss
dec
ja
int
jo
push
cmpsb
fs
fidivs
mov
sub
lcall
cld
add
pop
stos
int
and
rcr
cmp
int
mov
fcomps
or
dec
jmp
mov
fdivrp
clc
mov
incl
nop
fstps
imul
lret
roll
xchg
pop
scas
push
mov
insb
and
jnp
add
ljmp
outsl
and
mov
mov
fldl
test
dec
cmp
sbb
pop
jns
ss
or
bound
orb
add
movsl
icebp
fldl
testl
jg
push
ret
jo
js
or
incl
fwait
push
pop
pop
clc
aad
fisttpl
pop
outsb
loope
push
es
or
lahf
sahf
push
stos
push
nop
lods
shl
ret
nop
sub
push
loope
push
cwtl
iret
pop
jne
jle
rcll
sti
cmpb
out
pop
sbb
int
cmp
cmp
add
sbb
cmp
outsl
mov
mov
iret
cmp
ljmp
sar
mov
cmovne
outsl
out
pop
call
or
mov
jg
xlat
dec
sub
sub
stos
pushf
loope
xor
lahf
in
push
testb
jecxz
out
jg
xchg
lret
xchg
ret
sbb
imul
dec
and
test
fcomip
call
jns
jge
xchg
or
int
pop
pushf
jp
mov
mov
xchg
jb
cmp
lcall
outsl
push
fidivrs
int3
mov
cmp
or
lcall
jp
imul
xchg
pop
dec
outsb
xchg
push
mov
enter
push
xchg
test
cli
aas
xorl
jb
and
push
sbb
sahf
fmul
pusha
test
mov
add
lcall
cmpsl
and
divb
push
jne
pusha
lods
iret
xor
insb
jg
call
out
pop
xor
jge
pop
push
xorb
xor
or
popf
jl
sub
ljmp
xchg
je
mov
jmp
jno
outsl
les
faddp
cmp
scas
xor
dec
loopne
inc
enter
orb
or
dec
cltd
dec
lods
jp
inc
jb
dec
push
jle
and
leave
psadbw
adc
mov
adc
hlt
lcall
rcrb
push
pop
outsb
jb
and
mov
int
push
es
pop
pusha
dec
adc
fdivl
pushl
add
lods
pop
or
fsin
pop
in
sti
es
mov
je
adc
decl
lock
je
and
fldcw
aaa
js
popf
sbb
frstor
and
movsb
mov
cmp
or
and
inc
loopne
lock
dec
adc
or
sub
decl
addb
sub
movsb
mov
inc
int
cmp
andb
cmp
mov
sub
xchg
dec
dec
icebp
xor
shl
loopne
inc
inc
insb
aas
or
cwtl
pop
jbe
out
and
mov
push
or
jp
scas
pop
jle
cmp
jnp
into
in
cmp
mov
out
inc
and
out
add
xchg
jmp
ljmp
jecxz
loope
push
pop
ret
xor
mov
adc
jg
loope
loop
or
xlat
test
jo
lret
mov
fmul
pop
cwtl
jmp
test
or
cmp
in
out
mov
cli
into
mov
das
mov
mov
aaa
addr16
jmp
fbstp
sub
iret
das
je
js
sub
shrl
inc
mov
pop
dec
inc
cmp
aaa
scas
pop
or
pop
shl
push
push
inc
sbb
xor
rorb
cmp
dec
setge
jle
insb
inc
sbb
bound
repnz
xchg
hlt
adc
adc
add
push
call
sti
push
dec
aad
mov
loope
xchg
or
or
js
les
jmp
dec
sbb
sti
sub
pop
xor
in
push
inc
rcl
mov
cmp
dec
iret
loopne
inc
in
add
outsl
cli
pushl
xor
adc
ficoml
mov
clc
call
mov
mov
cmp
jg
mov
dec
xlat
loopne
or
adc
es
decl
or
add
int
xchg
jle
pop
mov
insl
add
inc
out
inc
data16
ljmp
sub
call
fcmovu
add
jae
sbb
and
addr16
fdivl
in
das
cmc
pop
daa
fists
jb
shll
sbb
imulb
fadds
dec
lahf
mov
adc
mov
cli
cmc
fmulp
icebp
xchg
jg
mov
mov
add
out
je
int
dec
into
dec
aaa
lcall
aaa
aam
and
mov
lcall
cwtl
outsl
sbb
adc
fistpll
cli
jge
push
divl
jmp
add
outsb
dec
pop
jnp
adc
push
pushl
sub
lock
cmp
pop
bound
call
iret
adc
cmp
outsl
adc
dec
mov
push
icebp
dec
mov
jbe
cltd
repnz
xor
sbb
dec
arpl
ljmp
das
pop
daa
push
mov
xor
stos
popf
mov
loop
lret
xchg
jg
sar
incl
out
sbb
addr16
xchg
andb
in
inc
mov
fimuls
and
lcall
ret
adc
and
out
insl
xor
jbe
or
call
nop
push
adc
xchg
lcall
jl
cmpsl
movb
out
in
inc
dec
movsl
ret
and
test
and
push
push
out
lcall
clc
lahf
movsb
push
pop
push
out
and
xchg
lret
and
shrb
outsb
cmp
jg
scas
or
int
lret
scas
inc
ljmp
sbb
stos
jg
dec
cmp
cmp
movsl
mov
lcall
or
inc
mov
roll
nop
fcmovnbe
adc
ljmp
sbb
inc
add
outsl
popf
adc
push
jmp
out
ljmp
loopne
xchg
add
pop
out
jo
and
dec
pop
or
ds
pop
mov
sti
lock
mov
xchg
lea
xchg
pop
lock
pop
cmp
and
stos
aam
adc
divl
xchg
xor
call
sub
inc
or
xor
lods
jno
scas
test
mov
mov
add
stos
fs
dec
adc
jp
nop
xlat
sbb
mov
mov
fs
xchg
es
mov
ret
adc
adc
ljmp
mov
sub
xor
mov
cmp
xchg
inc
mov
iret
stc
imul
fimull
push
dec
mov
test
push
push
dec
mov
loopne
jp
jmp
sbb
rclb
jg
sbb
xchg
or
adc
mov
lcall
mov
int3
mov
arpl
jmp
insl
or
push
adc
xchg
mov
pop
hlt
cmp
repz
and
pop
es
push
movsl
add
xchg
cmp
ljmp
mov
into
sbb
int3
fistpl
fidivrs
pop
stos
mov
push
addb
decl
or
mov
cmpsl
mov
and
add
xchg
mov
sbb
mov
mov
or
add
cltd
into
add
cmp
mov
decl
in
filds
jle
jo
push
js
xchg
movsl
xor
push
ljmp
xchg
mov
jae
lahf
mov
cmp
mov
mov
add
mov
cmc
out
clc
or
ret
xor
fnstcw
jnp
decl
pop
mov
mov
jbe
or
and
lret
cs
cmc
sub
cmp
in
dec
addr16
jo
pop
movsl
push
repnz
pop
addr16
cmpsl
cmp
into
ret
mov
js
das
shrb
imul
cld
dec
and
adc
xor
inc
jno
or
push
icebp
fisttps
push
fnstenv
cwtl
jbe
jmp
daa
outsl
gs
pop
mov
fiadds
popaw
outsb
mov
je
or
jnp
cmpsb
insl
xlat
push
repnz
pop
movsb
mov
lea
push
cmc
jp
rolb
push
incl
sub
fstpt
pop
scas
subl
cmc
sbb
push
cmp
pushl
push
fwait
iret
jmp
xchg
xor
enter
and
mov
dec
nop
and
cli
dec
cld
int3
push
adc
lods
or
mov
lret
mov
fwait
pop
pop
out
adc
ljmp
and
cmpsb
scas
ror
pushf
nop
bound
sbb
ret
xor
push
push
lcall
notb
mov
or
xor
stos
xor
roll
imul
sub
jmp
sarl
std
mov
jo
popf
and
fwait
adc
lcall
pop
xor
mov
push
fbstp
or
xchg
mov
add
lcall
icebp
lret
ret
sahf
aad
pop
mov
cltd
mov
push
jg
push
cmp
pushl
adc
jg
push
outsl
mov
in
adc
arpl
jns
cmp
cltd
and
pop
out
push
pushf
int3
jp
or
or
pop
mov
decl
les
iret
adc
or
add
and
push
adc
jb
popa
std
shr
dec
call
lods
mov
shl
lahf
push
mov
push
pop
push
mov
insl
sti
cmc
sbb
incl
leave
out
push
ljmp
mov
mov
stos
loope
mov
jg
jge
or
js
jg
cmc
xor
add
dec
ret
jb
jbe
push
or
mov
push
sahf
fisttpl
cmpsb
outsl
sub
mov
mov
mov
je
fsubrl
pop
hlt
mov
imul
push
nop
mov
imul
decl
sub
inc
les
ja
push
inc
leave
nop
out
jb
adc
pop
lods
fildl
loope
ds
sbb
addb
lret
addr16
sbb
fmuls
sub
fimuls
push
mov
fisttpl
xchg
adc
ljmp
xor
fisubrl
mov
push
jg
add
mov
inc
pop
xor
push
inc
mov
mov
jmp
popf
mulb
insb
push
mov
cmp
es
ficoml
push
sbb
inc
int
cld
jmp
or
inc
sbb
mov
cmpsl
sbb
jl
out
test
or
aam
fadds
gs
lret
pop
add
mov
lcall
popf
add
decl
pushl
dec
sub
pushf
jne
jp
pop
inc
xchg
call
stc
pop
jge
jno
aad
pop
push
adc
out
ret
in
and
cmpsl
mov
pushl
dec
lods
loop
gs
jnp
mov
pop
jge
dec
psrad
fstps
andl
pop
data16
xor
lcall
out
jnp
shlb
int
int3
in
stc
mov
xchg
pop
jbe
loopne
movsb
inc
pop
or
test
mov
sahf
jge
cli
out
ljmp
mov
mov
mov
cmc
inc
dec
leave
mov
call
into
cmp
fstp
push
fdivr
xchg
dec
mov
and
inc
mov
clc
call
xchg
add
daa
lahf
sbb
aam
sub
jo
leave
pop
dec
sub
mov
pop
dec
out
push
inc
mov
std
inc
lcall
fcomip
xor
lds
dec
add
out
mov
cwtl
sub
ret
cmp
jno
mov
out
fdivr
ret
insb
xchg
pop
clc
scas
sar
xchg
mov
fisubs
call
mov
jae
das
stos
inc
cld
mov
or
gs
jge
pmulhuw
decl
mov
stos
lods
hlt
decl
sub
scas
adc
jmp
add
mov
and
decl
lret
pop
xchg
lods
sub
and
lods
std
xchg
ss
fcomip
decl
jnp
or
jo
sti
call
add
dec
xor
decl
in
sub
xchg
clc
push
cmp
in
int3
scas
mov
jl
inc
pop
test
jle
in
sahf
arpl
sbb
mov
push
jge
push
mov
stos
pushl
adc
out
dec
pop
inc
cmpsb
push
shrl
mov
mov
test
pushf
jno
or
fdivp
lock
cmp
repnz
scas
lcall
mov
lock
jmp
ljmp
add
leave
jae
ljmp
mov
fildll
push
les
or
or
cmp
sub
stos
cwtl
scas
xor
daa
sbb
cld
call
shrb
call
pop
mov
sub
aad
xor
call
mov
jns
sbb
pop
movsl
data16
aaa
lods
sbb
jge
pop
orb
test
ljmp
jmp
dec
sub
sbb
loope
aad
mov
mov
xor
cld
pop
adc
inc
ret
mov
xor
scas
sub
lcall
fmuls
outsl
clc
push
mov
sbb
out
lods
out
adc
cmc
pop
and
sahf
add
jb
sub
incl
test
cmpl
ds
dec
std
mov
xor
pop
cmc
pop
jo
mov
cli
jns
pusha
xor
mov
iret
lahf
nop
clc
in
sub
cmp
in
fisubs
push
jo
jecxz
movsl
testl
sbb
sahf
inc
sub
leave
mov
call
mov
divb
sub
leave
or
popf
out
icebp
test
lods
xchg
jae
sbb
ret
mov
pop
dec
test
xchg
orb
mov
int
test
sbb
jmp
push
sub
and
popf
cld
lcall
test
repz
push
add
nop
mov
lcall
aad
pusha
mov
shrb
pop
fucomip
scas
fdivr
sbb
cld
cmp
mov
mov
sub
and
fistps
incl
push
das
popa
ss
nop
sbb
popf
cmp
je
lds
idivl
cld
mov
cmp
ljmp
sub
jbe
dec
adc
repz
dec
in
ljmp
pushl
notl
nop
arpl
sub
stos
ljmp
jae
inc
sub
push
mov
lea
sbb
loop
lods
jg
stc
pop
lcall
add
data16
jmp
mov
call
sub
fimuls
js
out
add
mov
decl
ret
stc
sbb
or
sub
testl
incl
pushf
jp
popa
sbbl
out
les
lcall
popf
lcall
lret
xchg
outsb
push
mov
aaa
dec
mov
loope
lock
nop
mov
pushl
push
nop
ljmp
jg
jge
mov
fcmovu
and
mov
add
decl
stos
in
push
loope
inc
cld
roll
pop
loope
outsl
cli
out
sarb
sbb
aas
ret
shr
loopne
dec
xchg
popf
push
scas
dec
inc
data16
inc
lcall
fnstenv
push
stos
cmp
inc
xchg
imulb
jmp
push
in
add
fwait
test
ja
jmp
inc
fbstp
mov
enter
cmp
pop
movsl
imul
filds
mov
xlat
sbb
rorl
std
lcall
adc
je
mov
shlb
stos
stc
mov
sub
stos
mov
pop
lock
xchg
das
popf
out
frstor
inc
aam
mov
pop
xlat
stc
jo
jmp
es
xchg
fstps
lret
scas
jecxz
into
adc
adc
call
lcall
or
les
in
sar
loopne
sub
cmp
xor
xor
rcl
dec
loope
dec
pop
mov
jle
sub
dec
sub
out
xor
test
push
xchg
sub
prefetchwt1
or
dec
xor
lea
inc
int3
ret
or
cmp
jnp
test
lcall
leave
pop
dec
jo
pop
aaa
inc
fs
mov
inc
call
mov
stc
push
mov
frstor
xchg
stc
sbb
push
or
into
inc
lods
push
sub
lcall
ret
cli
mov
pop
push
dec
cmp
jmp
mov
pushl
pusha
out
andl
cmpb
shll
call
and
mov
adc
cmpsb
fildll
or
cmova
sti
scas
mov
aam
jbe
stc
push
lcall
std
cmp
push
and
jg
cmp
lret
divb
aas
xchg
cli
scas
pushf
movsb
jns
std
shll
call
loopne
mov
push
dec
loop
fisubl
pop
push
mov
lcall
data16
jge
pushf
in
inc
or
inc
out
fcompl
inc
rcl
int
push
push
aas
sub
loopne
ss
repnz
in
cmpsb
jmp
fmulp
fnsave
out
enter
mov
insl
gs
jmp
arpl
cld
pop
jl
xor
or
xchg
jbe
leave
les
pop
jno
test
std
inc
pushl
push
push
pop
dec
mov
pusha
hlt
rcrb
decl
popf
jbe,pt
das
dec
scas
icebp
inc
mov
dec
popf
jno
jmp
testl
mov
sub
cmpsb
ljmp
and
xchg
dec
nop
dec
aaa
mov
inc
add
mov
jo
fdivrs
mov
pushf
xor
decl
addl
lcallw
inc
ja
push
bound
cmp
xor
jnp
pop
movsb
aam
or
push
fwait
es
decl
pushl
adc
repz
mov
pop
clc
push
dec
rorb
cmpsl
dec
into
dec
and
add
es
dec
icebp
sti
push
mov
cmp
xchg
mov
sub
or
mov
mov
inc
or
out
add
xchg
xor
adc
stc
scas
pop
ss
nop
dec
push
fdivrs
js
outsb
les
dec
pop
mov
lock
ljmp
mov
push
mov
fcompl
std
ljmp
mov
and
push
lahf
fsubrl
and
inc
push
add
daa
insl
sahf
jmp
jnp
jle
decl
int3
mov
lock
dec
repnz
mov
mov
mov
fidivrs
and
cld
sti
dec
xor
mov
loopne
push
test
cmp
add
fdivrp
fcomip
jge
cmp
pop
dec
popa
inc
push
xor
xlat
jl
nop
imul
xchg
roll
jl
mov
sbb
xchg
pushf
mov
or
pop
bound
pop
lret
mov
xor
insl
ja
sar
dec
xor
dec
out
push
outsb
imul
decl
data16
into
mov
mov
xchg
sbb
sub
ljmp
sub
lret
mov
cmpsb
shlb
arpl
pop
cmc
addr16
cmp
leave
fistps
cmp
or
jb
stc
xor
push
test
fwait
adc
jle
pushf
hlt
aam
fcmovnb
adc
in
jmp
xchg
addr16
mov
inc
cs
aam
inc
push
fimuls
pop
loope
xchg
mov
and
pop
cmp
decl
push
test
or
mov
sbb
mov
es
or
in
sub
jae
into
xor
into
fldl
jb
inc
mov
pop
inc
ds
jmp
aaa
hlt
loopne
les
jns
jecxz
cli
mov
cltd
lds
cmp
xor
sahf
into
cwtl
mov
jns
sbb
pushl
push
push
jne
cmp
xchg
sub
test
pop
or
sbbl
sub
repnz
jns
dec
mov
add
pop
jecxz
out
cmp
test
cmpsl
jmp
add
inc
pop
mov
sahf
push
xlat
aam
imul
ljmp
mov
insl
ficomps
push
mov
mov
imul
incl
sbb
adc
fcoml
add
icebp
int
ja
mov
or
or
mov
es
jmp
or
fsub
jp
mov
mov
mov
adc
outsl
sub
decl
cmpsl
cmp
cltd
and
push
jo
in
ror
jecxz
fildl
pop
cmpsb
xchg
pusha
into
out
push
mov
or
dec
push
sahf
adc
cs
ret
daa
push
incl
cld
jg
lahf
lcall
ljmp
xchg
xchg
add
test
aas
push
add
mov
inc
jns
cmpsb
jge
sti
mov
push
lods
add
cmpsl
out
and
fisttps
sbb
fcmovnb
fcmovb
repz
jb
jno
jmp
std
jne
push
movsl
mov
mov
xchg
fidivrs
test
shl
inc
lahf
ret
lods
imul
cs
ret
addr16
inc
pop
insl
add
pushl
and
mov
dec
lret
std
enter
decb
addr16
and
jmp
cmp
cli
incl
and
ja
scas
and
or
adc
mov
sbbb
shrl
mov
adc
push
ljmp
sbb
rorb
and
xor
jg
aaa
xchg
repnz
test
push
jecxz
add
shlb
mov
mov
imul
or
outsl
repnz
push
mov
in
adc
std
cld
call
xchg
pushf
aaa
ret
cmp
stc
cmp
and
mov
mov
enter
or
std
mov
and
enter
das
mov
call
mov
rorb
out
test
mov
xchg
rcl
dec
cli
es
mov
mov
cmc
mov
mov
dec
dec
push
sarb
pop
mulb
shlb
std
pushl
cmpsl
movsl
cs
jle
pop
mov
out
test
push
fsubrl
inc
jg
rclb
fs
xor
lea
lcall
jmp
shlb
adc
and
stos
mov
add
xor
dec
jnp
aad
incl
das
jo
mov
dec
js
insb
mov
fisttpl
push
mov
out
das
in
lcall
sbb
push
aaa
insb
outsb
stos
sarb
out
enter
mov
xchg
or
xor
sub
pop
adc
enter
data16
sar
mov
hlt
scas
push
out
insl
das
xor
out
sub
call
push
mov
sbb
adc
pop
push
cs
frstor
ljmp
cmp
push
mov
fsts
mov
xchg
leave
iret
subl
mov
jbe
incl
les
mov
xchg
inc
ret
jae
dec
aam
and
out
mov
cmp
outsb
push
ficoml
add
sti
pop
mov
ljmp
imul
fmull
jne
add
loope
adc
jg
cmpsb
push
xor
in
push
rcl
es
xchg
ficompl
dec
push
adc
mov
jmp
or
out
sbb
leave
insb
mov
inc
pop
in
aas
outsb
xchg
adc
jb
sub
mov
inc
adc
out
test
hlt
ljmp
cld
fistpl
jmp
sbb
adc
aaa
nop
js
inc
ljmp
out
or
lea
add
decl
or
cmp
mov
mov
sub
add
xchg
ljmp
scas
inc
out
mov
std
movsb
xor
mov
mov
xchg
mov
in
mov
fisttps
out
xchg
adc
jl
jmp
cmp
shrb
incl
scas
movsb
mov
fnstsw
pop
dec
out
xor
dec
ja
sbb
or
mov
adc
push
jnp
xchg
out
push
pushl
jmp
xor
stos
iret
outsl
push
dec
sub
dec
xchg
mov
scas
xor
jmp
cli
push
xor
mov
sar
loope
lahf
push
mov
xchg
imul
call
daa
pop
pusha
lods
xor
adc
pop
jmp
add
mov
fwait
lock
dec
sub
icebp
push
pop
xchg
mov
pushl
stos
inc
sbb
cmp
loope
xchg
fbstp
lods
mov
cmp
mov
xchg
std
fsubs
stc
xor
inc
fadds
push
leave
add
adc
jne
pop
jg
cmp
and
cmpsb
jg
loopne
cpuid
fdivrl
cld
inc
lret
fwait
mov
cmp
pusha
inc
mov
mov
pushl
lret
mov
lahf
ficompl
mov
daa
test
jae
mov
xchg
ljmp
push
mov
sub
pop
lcall
in
outsl
popf
push
jbe
adc
pop
call
push
or
jno
out
dec
test
jno
dec
mov
push
jns
jp
push
loopne
notl
lock
jmp
inc
bndstx
test
and
push
xor
out
cli
mov
std
adc
repz
cmp
and
mov
jns
xchg
add
and
dec
jo
into
fistps
mov
enter
fistpl
decl
add
xor
and
ljmp
push
pop
xor
pop
stos
imulb
jge
popf
pop
mov
call
loopne
add
sbb
xchg
push
adc
jne
mov
call
stos
imul
push
and
mov
mov
mov
adc
ljmp
insb
jl
mov
dec
and
jne
in
cmp
aas
add
jecxz
fs
aad
jns
push
mov
orb
cwtl
push
outsb
cmc
pushl
dec
sbb
push
jns
outsl
call
mov
sbbb
and
pop
or
jbe
mov
jb
scas
out
aam
jg
sub
lret
cmp
ljmp
lret
mov
data16
add
ss
dec
jb
fbstp
mov
pop
fwait
bound
enter
and
adc
dec
mov
and
sahf
mov
and
jge
decl
bound
pop
aaa
xor
mov
arpl
jmp
cltd
jns
loop
insl
pusha
adc
pop
in
and
dec
add
mov
stc
sbb
jmp
ret
pop
cmp
pop
xchg
mov
loope
push
jno
scas
push
or
shrb
das
add
adc
sbb
mov
mov
lahf
sub
and
in
jl
sar
sbb
cmp
incl
test
call
xlat
ror
fbstp
lret
mov
aam
cltd
decl
lock
dec
mov
insl
jb
fnstenv
and
jl
sbb
popa
mov
inc
fisubrs
xchg
in
dec
adc
sahf
mov
push
cwtl
out
dec
sub
dec
push
mov
loop
pop
lock
cli
fiaddl
push
pop
es
xchg
xchg
mov
inc
cmc
mov
inc
cmp
loope
cmp
jb
mov
xor
cld
or
ficoms
out
negl
jg
dec
shlb
gs
sti
aaa
pop
and
pop
sti
adc
test
ljmp
out
lahf
insb
xchg
xchg
inc
adc
cmp
ficoml
cmp
rcr
jnp
lcall
jge
fdivl
jo
cld
sub
mov
xchg
cmpsb
ljmp
ret
mov
cmp
and
test
ss
mov
push
movl
gs
jne
shrb
add
into
mov
ljmp
inc
xor
idiv
mov
mov
mov
xchg
repnz
pop
cltd
jae
mov
movsl
sbb
and
call
std
call
cmp
and
xchg
in
arpl
iret
lock
data16
ljmp
hlt
aaa
mov
pusha
icebp
negb
and
xchg
push
add
daa
imul
jb
cmc
lods
imul
jg
dec
lods
cld
adcl
pop
fsubrl
gs
pop
or
ret
add
pushl
enter
aaa
sbb
jnp
mov
ds
fwait
mov
loope
dec
loope
inc
jb
cmp
orl
insb
fcmove
jo
pop
cltd
sti
push
fstps
not
testl
loope
dec
cmp
jg
fwait
push
in
es
in
stos
cmp
xor
mov
pushf
add
outsb
mov
sbb
pop
pushf
in
jge
rep
test
push
sarb
aam
outsl
test
lcall
out
jmp
push
int3
xchg
xchg
incl
adc
xchg
arpl
push
push
adc
inc
dec
jp
mov
cmp
repnz
fsubrl
cmp
les
adc
out
ds
jae
mov
std
insl
lods
cmpl
ljmp
push
mov
add
jae,pt
div
repnz
lods
adc
out
mov
mov
dec
es
jg
mov
lea
xor
or
dec
xor
sbb
inc
popa
lcall
cli
jbe
mov
jg
cmc
aam
cmc
xorl
mulb
mov
inc
ficompl
mov
es
sahf
icebp
and
mov
mov
push
scas
and
xor
outsl
push
outsl
mov
in
cmpsl
in
test
icebp
mov
lods
icebp
rcll
jmp
mov
xchg
and
decl
out
cmp
data16
aad
into
leave
dec
and
bound
mov
pusha
dec
es
shl
lock
lods
jae
adc
pushl
insl
xor
aad
movsb
xor
jle
test
mov
xchg
outsl
cmp
pushl
and
add
lret
in
std
sahf
jge
fbld
cltd
sbb
sarl
pusha
push
fbld
lcall
adc
inc
xchg
pusha
sbb
xor
jecxz
add
dec
mov
jae
pop
arpl
aam
pushf
mov
add
movsb
data16
sti
mov
in
int3
divb
jmp
sub
adc
loope
call
ja
add
push
decl
xchg
out
mov
dec
clc
xlat
and
add
push
das
pusha
dec
jmp
out
push
push
mov
ljmp
out
inc
scas
add
and
jecxz
jp
imul
jmp
inc
and
xor
psllq
dec
sbb
mov
pushf
cmpsb
and
mov
cmpsb
or
mov
lods
pop
pop
mov
inc
in
or
push
mov
daa
pop
lea
adc
rcrb
jecxz
in
pushl
rcrl
out
mov
cmp
or
inc
ja
push
loope
ds
dec
sub
push
decl
lcall
mov
loopne
mov
insl
cmp
push
jno
repnz
mov
ja
ret
and
in
push
push
shrl
rcr
pop
into
pop
out
out
in
sbb
dec
call
call
nop
ds
shl
inc
sub
lock
test
in
push
fxch
fisubrl
pusha
daa
pusha
pushl
call
add
pop
pop
push
add
xchg
das
pop
fidivrs
mov
mov
pop
mov
sub
sub
outsl
mov
cld
push
out
pop
nop
push
push
pop
data16
dec
jmp
lcall
adc
mov
lcall
cmp
add
shll
data16
pusha
lret
shl
jp
mov
dec
xchg
cmc
daa
mov
push
aam
add
lods
dec
sbb
dec
shlb
std
jle
add
cwtl
dec
sbb
loopne
loop
mov
xor
cmp
popa
pop
xchg
dec
fwait
push
lock
incb
fdivrl
jns
imul
jmp
iret
negl
mov
popf
leave
lea
in
and
and
rorb
cmp
jge
jb
jns
addr16
jne
push
push
stos
push
jb
nop
popa
push
adc
decl
fdiv
popa
xlat
add
hlt
add
jne
iret
test
and
insl
icebp
or
incl
adc
jb
lret
sti
out
push
inc
mov
hlt
mov
stos
mov
mov
add
sbb
push
or
out
stc
mov
ljmp
mov
leave
fidivl
out
bound
mov
hlt
cmc
mov
xchg
ljmp
cmpsb
repnz
and
mov
and
xchg
adc
cmp
add
test
fnsave
insl
jno
mov
mov
jnp
mov
mov
xchg
out
and
mov
dec
scas
imul
incl
or
addr16
sub
test
cmpsb
movsb
mov
and
adc
call
push
push
xlat
mov
add
adc
clc
out
popf
xchg
sub
in
ljmp
pop
lret
cmp
test
sarl
aaa
mov
inc
xchg
push
pop
adc
fwait
call
or
inc
lods
xchg
dec
pop
jge
pusha
xchg
imul
pop
sbb
call
cmp
xor
or
xor
xchg
test
sbb
pop
sbb
shll
sti
add
cli
lcall
cmp
xor
sub
dec
shll
xorb
xor
ljmp
lock
cli
aaa
test
inc
mov
gs
mov
bound
cmp
shrb
mov
enter
pop
jne
pop
lds
cld
inc
std
pusha
gs
in
push
clc
iret
in
push
stc
mov
pop
xor
incl
cld
lcall
push
xchg
es
rcr
and
lea
sbb
ljmp
jge
mov
lahf
enter
xchg
and
fst
push
pop
mov
xorl
incl
push
lods
aam
cmc
mov
sub
cmp
pop
rcl
out
sarb
dec
sub
pop
sub
mov
sahf
dec
shlb
out
addr16
sti
sub
or
pop
lds
mov
push
xchg
inc
push
mov
fs
int3
and
adc
dec
push
cmp
outsb
aam
inc
clc
dec
inc
in
loop
loope
subl
xchg
je
dec
cld
mov
mov
xor
push
pop
fsubs
add
stc
loop
jmp
adc
cmc
mov
mov
popf
sarb
rcrb
ss
mov
shr
pop
xor
push
stos
rorl
pusha
lsl
xor
dec
nop
pusha
enter
call
ljmp
cmp
push
js
xchg
jl
jle
push
aaa
lret
jbe
jo
movsb
or
loopne
imul
sbb
in
ja
ss
test
ljmp
dec
loop
aaa
pop
cmpsb
jns
mov
scas
ret
mov
dec
filds
xor
lret
imul
lcall
xor
cltd
dec
mov
adc
mov
out
int
jmp
aaa
adc
pop
push
mov
aas
cmpb
mov
pop
arpl
mov
push
mov
ljmp
test
loop
cmpsl
mov
icebp
push
xor
je
mov
dec
jge
cwtl
icebp
cmp
mov
faddp
xor
mov
push
pop
in
xor
mov
fdivl
push
lds
mov
mov
dec
icebp
lods
mov
outsb
ds
ljmp
push
seta
lcall
out
push
cmp
mov
loop
incl
jp
jl
inc
pop
push
inc
cs
push
adc
daa
or
jg
rclb
iret
mov
addr16
mov
divb
pop
mov
xchg
jmp
sbb
adc
cs
out
repz
test
out
jne
and
push
pusha
mov
sub
mov
incl
adc
inc
mov
mov
sub
test
jno
popf
mov
pop
outsl
pop
push
popa
push
arpl
push
decl
dec
in
cmp
cmp
jp
cmp
cs
aas
daa
mov
mov
fildll
testl
out
push
callw
or
xor
pop
loop
inc
incl
mov
jmp
sahf
dec
sub
sti
cld
decl
sub
jmp
movsl
push
icebp
bound
and
mov
mov
xchg
jmp
dec
shrl
adc
ljmp
mov
enter
add
xorb
aas
outsl
inc
adc
les
repz
dec
std
jg
inc
in
adc
shll
pushf
data16
pop
hlt
lcall
dec
int
dec
mov
fistpl
andl
ljmp
add
add
jp
clc
mov
cmp
movsb
xchg
add
in
adc
mov
incl
sbb
mov
out
fidivs
cmp
outsl
cli
mov
scas
popl
or
cmp
ljmp
mov
or
faddl
xchg
cmp
push
or
ja
clc
mov
add
lret
and
jp
mov
jmp
ret
xlat
dec
inc
xlat
mov
xor
bswap
ret
sarl
cmpxchg
rorb
inc
jmp
push
gs
xor
data16
jle
cmpsl
mov
adc
xchg
mov
incl
dec
add
sbb
mov
in
aad
jge
mov
push
loopne
fildl
cmp
loopne
je
mov
pop
dec
mov
push
shll
test
outsl
sbb
call
mov
push
loopne
mov
popa
or
mov
clc
enter
pop
push
jns
sub
add
pop
fwait
cmp
mov
adc
xor
mov
cwtl
shlb
jg
incl
lahf
scas
aam
fnsave
scas
lods
pop
jne
dec
xor
imul
jl
sub
jle
push
sub
dec
pushf
clc
mov
dec
popa
fistps
les
add
fwait
dec
dec
add
pop
sar
inc
scas
dec
jp
gs
jge
sbb
mov
mov
adc
mov
sbb
icebp
decl
adc
mov
jle
inc
imul
pop
mov
negb
rorl
pop
outsl
cld
sbb
mov
mov
cltd
nop
add
adc
or
sbb
cmpl
xchg
imul
cmp
arpl
mov
xchg
xchg
cmc
fstps
lret
and
adc
or
push
mov
loopne
std
stos
cmc
mov
adcb
ficomps
repz
inc
jmp
roll
push
imul
rcr
cmp
or
in
pop
inc
cli
or
dec
mov
pop
out
testb
mov
out
push
push
or
insl
leave
fcoms
int3
xchg
jle
jle
xchg
maxps
sub
add
nop
dec
lahf
mov
je
pop
or
sti
pop
cwtl
mov
mov
cmp
push
mov
insl
int
sbb
pop
jp
andl
outsb
rcrl
aaa
inc
std
pop
shlb
pop
inc
jle
ss
scas
cli
pop
or
push
outsl
test
leave
out
jns
loop
fnstenv
inc
stc
mov
mov
and
sub
mov
or
fs
shrl
jns
xorl
jg
scas
lea
shlb
lea
and
sub
decl
jns
cmp
mov
imul
loop
add
add
mov
inc
jmp
mov
testb
jmp
fisubrs
lcall
mov
cmpsb
push
sub
sbb
lods
xorb
and
fnsave
xor
pop
sub
call
and
xchg
add
xchg
ljmp
clc
ljmp
div
adc
add
pop
jmp
mov
sub
and
ljmp
mov
sub
imul
into
inc
xor
in
lods
inc
or
add
sub
call
iret
add
popf
push
push
fsubs
add
je
fisttpll
and
sbb
or
fwait
fs
pop
mov
cmp
aas
or
stos
or
in
cmpsb
cltd
mov
test
shrb
or
rol
and
loope
sub
cmpsb
es
lods
push
xchg
sub
fdiv
enter
inc
mov
add
push
pop
or
pop
mov
and
addr16
loope
inc
daa
sahf
out
sbb
xor
xor
ret
mov
fmul
sbb
inc
faddl
pop
ret
jmp
call
mov
fucomp
adc
rcll
rcll
mov
aad
inc
cli
scas
stos
mov
mov
shr
in
pushl
xor
dec
pop
mov
adc
hlt
js
aas
mov
decl
adc
fcomi
std
add
or
aas
cmp
pop
ret
pop
inc
loope
mov
jmp
fists
inc
or
lret
lods
arpl
inc
ja
outsb
mov
pop
js
movl
es
jae
sub
out
pop
insl
xor
test
mov
jmp
mov
cwtl
jmp
adc
pop
out
pop
add
mov
ret
and
push
test
lcall
cmp
sub
and
mov
mov
cld
rorl
sbb
call
outsl
ret
in
adc
cwtl
jecxz
or
in
cmp
xsavec
pushl
repnz
divl
lods
add
fs
pop
clc
lret
insb
sbb
js
ljmp
sarb
xor
mov
sub
pop
adc
lcall
lcall
inc
scas
les
fisubrs
into
xlat
fldenv
push
fidivrs
inc
mov
loope
in
shrl
enter
test
mov
stc
notl
aam
cmp
call
dec
sbb
es
es
iret
sbb
iret
mov
es
and
les
or
test
and
dec
fistpl
mov
mov
mov
ds
cltd
ss
fnstcw
outsb
xchg
cld
mul
inc
cwtl
shll
data16
pop
stos
stc
pop
pop
setl
lcall
std
call
test
ja
adc
sub
int
shl
mov
mov
or
in
add
out
mov
or
lcall
cmp
iret
cwtl
jbe
mov
aaa
pop
call
adc
sbbl
pop
or
cmp
push
outsb
cmp
call
dec
push
and
ficoms
mov
xchg
and
int3
jle
jg
std
mov
and
adc
ficoms
mov
xor
lcall
add
decl
adc
loope
gs
push
jbe
adc
mov
add
call
sub
ja
addr16
push
scas
loope
mov
dec
mov
mov
mov
lcall
cmpsb
je
daa
push
jnp
decl
pcmpgtb
or
leave
in
pop
sub
adc
repnz
incl
cmp
sub
add
test
xor
fistps
sbb
jmp
xor
mov
sbb
dec
jl
dec
and
ret
adc
gs
lcall
das
pop
sbb
sbb
lret
jae
xchg
neg
je
lret
int3
and
in
mov
jle
andb
pop
std
jmp
mov
into
iret
inc
sub
gs
mov
movsb
cmc
push
mov
mov
xor
inc
dec
cmp
in
int3
outsl
js
int3
movsb
dec
jmp
sbb
mov
inc
inc
xchg
sbb
add
inc
jae
scas
mull
sahf
outsb
pop
cli
lcall
jb
cmpsl
xchg
jmp
mov
jo
ror
stc
out
inc
push
push
push
leave
lods
and
add
js
sti
push
cwtl
aaa
push
jae
push
pop
inc
in
jns
incl
repnz
mov
cwtl
xchg
popa
das
das
and
and
xchg
lods
sub
ljmp
lret
mov
mov
out
xor
std
sub
out
adc
inc
jns
push
fwait
aaa
std
xchg
in
sub
lcall
dec
cmc
or
popa
js
mov
lods
cmp
lods
lret
into
mov
ljmp
cmpsb
sub
xchg
in
xchg
or
inc
push
inc
test
jle
inc
int3
sub
dec
mov
mov
sti
dec
dec
imul
sbb
sahf
mov
inc
pop
stos
jmp
orb
incl
outsl
push
sub
out
das
out
cmp
pop
pop
test
gs
and
repz
loope
mov
mov
adc
push
dec
sbb
test
cli
adc
call
mov
xchg
or
pushf
and
mov
cmp
pop
lcall
iret
test
dec
rcrl
fiaddl
xor
sbb
jno
decl
inc
mov
loop
hlt
dec
and
dec
mov
std
aad
ret
jmp
fwait
push
cmp
mov
xchg
push
cld
push
inc
shlb
pop
xchg
or
incl
fnsave
mov
sbb
bound
lret
es
mov
dec
sbb
lea
push
test
mov
ja
aaa
cltd
movsl
sbb
jne
loop
sbb
lods
call
sbb
sub
jne
adc
push
pusha
xor
hlt
or
mov
fistpll
and
mov
mov
inc
jne
sub
sub
push
xchg
cli
lcall
and
dec
pop
jno
add
pop
ds
sbb
repz
jne
aad
add
out
test
sub
out
fs
in
popa
sbb
push
xchg
ljmp
decl
push
add
cmpsb
xor
loope
dec
and
test
aaa
fcomps
inc
mov
adc
xor
rcl
cmp
insb
jp
pop
rcrl
out
in
sub
leave
sub
jmp
js
test
cmp
cmovnp
js
mov
stc
cmp
std
div
inc
mov
sti
hlt
jge
gs
ret
adc
in
lcall
jmp
insl
push
push
icebp
nop
in
dec
xor
int
aas
mov
scas
add
push
dec
mov
clc
xor
setb
les
and
stc
add
xor
test
incl
mov
loop
fs
jb
pop
sub
mov
ss
call
out
inc
into
sub
sbb
mov
ss
sub
add
adc
mov
in
dec
or
sub
fisttpl
fdivrp
mov
or
pop
mov
loopne
divb
push
inc
mov
add
orl
xchg
call
aas
movsb
pop
push
sarl
push
das
loope
sbb
cmp
lahf
dec
movsb
repz
and
fwait
stos
hlt
sbb
shlb
out
cli
iret
cmp
inc
mov
pop
mov
jo
mov
xor
filds
pusha
xchg
jno
dec
mov
loop
xor
mov
push
jg
inc
ljmp
clc
or
inc
outsl
pop
xchg
bound
adc
sbb
pop
push
rcrb
mov
pushl
mov
jo
lcall
enter
push
nop
fnstenv
xor
call
jo
add
cmp
enter
mov
call
adc
mov
xchg
ret
inc
outsl
out
dec
stc
inc
pop
icebp
and
clc
cmc
push
jmp
mov
enter
pop
imul
add
inc
and
jns
stos
js
push
mov
push
mov
lahf
pusha
cs
xor
xlat
into
stc
pop
lds
push
ret
ja
outsb
in
popf
xchg
insb
fcmovne
inc
jmp
pop
push
enter
xchg
hlt
imulb
cmp
add
shlb
movsb
shll
jmp
out
ret
icebp
repz
movsl
dec
pusha
jmp
pop
push
add
dec
es
ljmp
hlt
popa
bswap
mov
call
ret
loope
in
inc
negb
out
adc
jmp
sahf
mov
stos
lret
cmp
lret
inc
rclb
mov
mov
jmp
pop
aas
push
rol
lret
shll
test
loope
mov
sbb
mov
outsb
bound
cwtl
xor
pop
jle
leave
addr16
xchg
and
jg
jp
pusha
add
es
dec
loop
test
cltd
es
dec
aam
cld
mov
data16
and
divb
fiadds
pop
bound
test
xchg
mov
mov
and
testl
or
ret
pop
pop
and
enter
pop
dec
jb
fstps
cmp
jb
decl
and
cmp
mov
pop
dec
and
lods
imulb
or
push
and
mov
outsl
and
aaa
jmp
popl
and
test
call
test
jp
loop
xchg
xchg
add
inc
sub
repz
cmpsb
dec
cli
call
lret
ret
dec
pop
lret
nop
fcmove
mov
lods
ljmp
jo
sub
sub
aas
dec
sti
push
inc
testl
mov
gs
pop
cld
mov
jae
adc
inc
and
mov
out
or
sbb
scas
call
cld
lcall
jb
dec
repz
xor
movsb
adc
jg
mov
add
push
or
jbe
popl
add
sbb
jle
push
xor
incl
mov
data16
jge
inc
je
rcrb
leave
inc
add
arpl
int3
sub
js
scas
ficoml
cmpsl
inc
or
mov
sub
jae
mov
mov
push
dec
decl
incl
in
les
js
andb
js
xchg
jne
sbb
mov
xor
js
mov
dec
xchg
xchg
inc
imul
push
idivb
data16
out
nop
inc
xchg
scas
repnz
ljmp
ljmp
sbb
lods
or
dec
or
jbe
stos
or
aas
inc
mov
movsl
sbb
call
fimull
fdivrp
idiv
call
hlt
xor
sbb
xchg
jb
lret
mov
cmp
cmp
addl
and
mov
int3
adc
jae
das
mov
dec
fimuls
push
and
mov
jge
sub
pop
xor
push
fs
add
sub
icebp
cld
mov
decl
pop
pop
jb
push
mov
or
adc
xlat
xor
icebp
loope
mov
call
ljmp
push
nop
mov
lret
test
jecxz
sub
ret
add
mov
ljmp
or
mov
pop
imul
mov
mov
fisubrl
cmpsl
xor
pop
dec
cmp
jns
cmp
out
mov
fildl
es
insb
and
fnstenv
jae
sahf
rol
je
cltd
mov
jle
cs
push
add
scas
lcall
subb
pop
push
lahf
cmpsb
xor
outsl
clc
mov
jmp
mov
mov
ljmp
aam
lods
inc
das
add
push
repz
pop
ds
lock
jg
pushf
js
shld
fdivrs
xchg
add
adc
test
mov
sbb
sbb
int3
js
push
cmp
add
adc
push
sbb
sti
addr16
ljmp
add
iret
cltd
popf
push
inc
cmp
mov
or
mov
incl
add
pop
mov
push
cmpsl
sub
hlt
jle
adc
pushl
cli
mov
cmp
lods
jns
lods
add
outsl
jmp
test
jmp
cwtl
pop
sub
stc
mov
jo
mov
push
cld
call
movsb
cmpb
addb
inc
mov
pop
cli
bnd
xor
fildll
sar
xchg
rorl
cmp
ljmp
fcomip
cmp
es
movsl
pop
dec
shl
mov
ljmp
jg
std
bound
push
and
pop
imul
mov
pop
sub
gs
call
add
fnstenv
adcb
movl
ds
gs
shl
mov
pushl
cmp
cmp
jge
aad
adc
dec
or
mov
push
mov
js
aaa
mov
negb
and
pop
adcl
arpl
movsb
jmp
int3
add
clc
ret
in
xchg
push
shrl
mov
pop
xor
aad
xchg
push
sbb
shrb
jmp
fs
xor
mov
jmp
push
out
push
dec
daa
mov
add
decl
repnz
adc
in
mov
lcall
and
jmp
adc
cmp
cli
adc
jecxz
lcall
sbb
es
insl
xor
xor
shll
ret
mov
lcall
bound
flds
ljmp
inc
notl
add
and
xor
jae
mov
lret
sub
jae
mov
mov
das
or
jno
mov
sbb
fcoms
pop
icebp
scas
dec
aaa
jge
cltd
ljmp
adc
lds
ss
push
mov
pop
mov
push
jg
xor
xor
pop
lahf
push
aas
scas
xor
ficoms
jl
sbb
lret
movsl
fdivrs
decl
push
pushf
jb
dec
rorb
xchg
xor
enter
pop
in
hlt
push
loopne
ljmp
mov
sbb
add
shll
sbb
loope
and
ljmp
mov
mov
lret
orl
ss
cmc
sub
mov
jns
and
add
paddsb
add
or
xchg
lds
lret
sti
stos
sbb
push
xor
and
jno
adc
push
mov
aaa
adc
and
push
pop
jg
movsb
scas
ljmp
popf
dec
xchg
adc
fcmovnbe
gs
sahf
dec
fcos
jg
incl
test
scas
dec
fiaddl
inc
lret
lea
cltd
in
outsb
loop
mov
pop
xor
call
dec
mov
int
test
cmp
ret
mov
jo
mov
je
pop
cmc
decl
xchg
sbb
mov
add
pushf
dec
jb
cli
mov
adc
incl
cli
xor
push
jo
movsl
and
mov
add
xor
cmp
pop
or
imul
movsl
jge
jecxz
mov
push
pop
dec
es
insl
mov
pushl
mov
xchg
fcoms
sarb
jmp
call
movb
mov
aaa
sbb
xor
mov
das
loopne
dec
mov
testl
mov
out
cli
xchg
in
movsb
jle
aam
xchg
push
jb
sub
repz
es
decl
mov
push
test
xor
sub
pop
inc
xlat
mov
out
add
insb
aad
add
dec
notl
lea
pop
jae
or
and
into
push
in
loop
sub
clc
jg
inc
xchg
lea
mov
repnz
notb
fisubl
das
das
cli
out
in
jo
stos
cmp
jecxz
or
push
lret
test
inc
scas
test
ds
push
dec
pop
pop
push
std
in
jnp
jae
std
sbb
mov
and
jae
mov
icebp
or
or
js
fidivs
pop
xchg
idiv
jns
xlat
pop
mov
call
das
int3
mov
inc
das
popf
fsubl
fwait
cltd
lret
call
clc
daa
pcmpgtb
fidivrl
movsb
push
bound
fcmovbe
cmp
jg
jmp
fldcw
mov
mov
inc
aaa
lret
add
push
add
jmp
xchg
aas
mov
addr16
and
out
fucomi
add
inc
into
jmp
xchg
popf
testb
push
mov
xor
fwait
cmp
testb
in
imul
pop
test
aas
add
jmp
jbe
arpl
push
setne
or
dec
fstl
push
es
ljmp
xchg
cmp
xchg
xchg
push
or
data16
arpl
lcall
xor
jle
rolb
div
clc
jge
mov
mov
les
mov
decl
dec
mov
scas
and
dec
popa
dec
mov
ds
add
inc
sub
hlt
push
xor
jle
scas
add
fcom
lcall
jecxz
jg
push
pop
lcall
mov
inc
or
add
add
imulb
cmp
loope
mov
pop
data16
fbstp
or
aam
xchg
sbb
decl
xlat
cmp
mov
daa
rol
mov
ljmp
lcall
xor
jo
sbb
out
jmp
ja
mov
pop
js
ds
push
mov
dec
sub
push
add
sbb
mov
divb
xor
dec
movsl
xor
or
push
mov
out
dec
jg
mov
mov
cmpl
ljmp
pop
ja
filds
pop
mov
aad
nop
stos
mov
pop
cmpl
inc
fnstcw
fbld
dec
xor
cltd
and
mov
jo
popf
jno
in
ret
jl
in
stos
xchg
mov
add
xor
mov
xchg
xorb
int
jns
or
mov
out
push
das
adc
mov
loopne
sahf
inc
push
hlt
lea
or
pop
cmp
ja
das
addb
aaa
call
test
hlt
pop
or
imul
imul
cs
repnz
pop
add
add
jmp
test
inc
sbb
in
dec
push
stos
mov
stos
and
insl
adc
clc
sub
dec
in
add
lcall
or
cmp
xchg
popf
jp
xchg
jg
xor
out
jl
adc
lods
enter
cs
inc
clc
xor
lahf
pusha
int
arpl
jnp
pop
jnp
std
insb
roll
cld
sbb
call
sub
jge
push
aaa
sbb
mov
push
fisttpl
or
ljmp
inc
rcl
loop
mov
xchg
cli
pushf
bound
jg
jp
mov
mov
ljmp
cli
ds
push
xlat
data16
sub
in
shll
xchg
jle
mov
dec
pop
out
push
or
stc
daa
mov
mov
mov
lcall
cmpsl
pusha
aam
out
mov
mov
mov
push
push
mov
jmp
dec
adc
sub
addb
sub
mov
daa
data16
movsb
or
call
xchg
fadd
pop
mull
push
push
cmpb
mov
pop
das
mov
jmp
dec
shl
aam
add
mov
loope
pop
fwait
es
lret
imul
call
fsts
push
push
jb
popa
adc
cmp
xor
fwait
sbb
das
cmpb
xchg
fisubrl
push
mov
mov
push
jbe
loop
jo
cli
enter
or
shll
mov
adc
mov
sub
insb
or
sbb
fimull
in
in
push
push
lcall
and
xchg
push
xor
xor
decl
ret
inc
push
mov
xchg
inc
cmpsb
push
cmp
outsl
divl
jmp
jns
adc
jno
xchg
adc
xchg
pusha
out
ljmp
leave
cmp
sbb
adc
pop
clc
mov
push
mov
outsl
je
cmpb
insl
mov
adc
jp
jmp
pop
jae
lds
arpl
out
clc
cmp
sub
test
pop
jbe
cmp
lcall
std
ja
dec
out
rol
jne
stc
sbb
xor
xchg
mov
lea
jge
je
incl
push
push
sub
lahf
cwtl
sub
shlb
fnstsw
jg
mov
test
nop
shrl
sbb
sbb
loopne
test
or
jg
fldl
call
int3
mov
ljmp
sbb
inc
pushw
fisubs
xchg
mov
ljmp
and
mov
imul
or
outsl
leave
aam
xor
push
add
jae
mov
popa
not
movsl
push
adc
or
jo
lcall
or
mov
sub
test
ret
mov
repz
push
inc
lcall
enter
loopne
ljmp
xorb
xor
jne
mull
stos
mov
xchg
mov
and
fistpl
pop
xchg
aaa
std
mov
inc
mov
push
and
mov
dec
sbb
jg
jbe
mov
out
rclb
dec
sub
xlat
in
addl
aaa
cld
pushl
mov
jne
mov
adc
cli
inc
xchg
std
js
and
pushl
adc
push
js
xor
ror
in
and
jp
pop
lcall
insl
pop
data16
decb
std
sub
dec
or
xchg
ja
cwtl
push
lret
sub
lcall
jmp
mov
outsb
iret
mov
jmp
cmpb
jl
and
jge
subb
xor
dec
lcall
dec
inc
push
mov
xchg
push
lcall
sub
movsl
pop
pop
addr16
les
xor
lock
mov
pop
push
mov
sub
fs
xlat
dec
jmp
iret
or
mov
sbbb
xchg
mov
mov
dec
and
add
rcrl
shl
xor
in
lds
enter
push
movsb
pop
mov
jbe
pop
ljmp
inc
cmp
mov
test
push
js
rclb
inc
scas
mov
maxps
jno
cs
cmp
add
lahf
cmp
jns
push
jmp
adc
xor
aam
lcall
or
incl
sub
dec
xchg
jmp
imul
mov
jecxz
xor
stc
sub
sbb
jae
call
loopne
pop
negl
or
xchg
stc
aam
cmp
sub
fcmovnb
shl
and
jbe
lcall
hlt
inc
loop
fdiv
leave
lock
and
cmp
xor
mov
push
cli
lcall
jno
sbb
fdivrl
mov
loopne
outsl
scas
cmp
cld
sub
inc
add
pushl
push
jmp
in
or
and
cs
mov
inc
cld
pushl
cmc
cli
and
jecxz
pop
inc
mov
mov
add
lcall
pop
iret
add
lods
lret
jl
cmp
or
cltd
aad
add
ja
decl
lret
sbbb
lock
add
fmull
test
test
jp
decl
jecxz
or
dec
xchg
or
das
push
mov
int
imul
push
shr
leave
push
jle
ljmp
int3
jecxz
jecxz
mov
push
cs
notl
out
decl
dec
js
or
xor
jne
inc
pop
lahf
adc
jns
sbb
push
int
mov
call
pop
lea
fld
add
in
mov
sub
int
test
add
dec
decl
out
dec
in
clc
push
insl
push
aaa
das
fsubl
dec
test
call
std
fildll
sub
test
mov
cmp
ljmp
dec
and
pop
loopne
mov
xor
and
ljmp
xchg
sbb
lods
and
fadd
fwait
stos
out
pop
mov
das
dec
out
iret
dec
push
cmc
jmp
mov
cs
sub
filds
mov
int
test
mov
out
push
xor
push
dec
adc
pusha
fsubrl
loop
cmp
adc
decl
add
shlb
enter
mov
push
lods
pop
pop
mov
decl
jp
fcompl
xchg
sub
out
test
jns
mov
adc
in
js
cmpb
jecxz
inc
loopw
cmp
aaa
cli
jnp
inc
pop
adc
push
in
leave
mov
cli
dec
lcall
popf
cmp
cmpsb
fnstcw
pop
gs
jo
test
clc
and
ljmp
out
lret
jae
pop
mov
cmp
testb
inc
pop
xchg
xchg
scas
test
cld
lcall
sub
subl
dec
and
mov
loopne
pop
std
jmp
subl
icebp
insl
hlt
push
add
pop
test
mov
popf
xchg
adc
pop
jb
popl
fstl
ds
jmp
in
fcmovu
xchg
bswap
mov
cmpsl
dec
add
repz
sahf
jbe
jp
or
sbb
jmp
mov
out
or
mov
in
mov
outsb
inc
sbb
into
or
popf
jmp
neg
sub
sahf
shlb
sti
or
adc
xor
cmp
outsb
mov
daa
mov
and
mov
rolb
outsl
jbe
cmpsl
testb
cs
and
cmp
outsb
scas
das
shrb
jnp
jl
jno
and
adc
call
jle
cltd
mov
mov
popf
jns
roll
sub
cmp
mov
pop
and
ljmp
push
inc
imul
jp
and
cld
cwtl
mov
ror
nop
mov
and
decl
insb
cmp
dec
arpl
shll
sbb
adc
aas
dec
rcrl
or
ljmp
add
add
or
mov
and
push
ror
inc
mov
jae
pushf
mov
iret
ljmp
jge
adc
in
mov
mulb
jmp
or
mov
pop
push
sub
lret
call
addr16
mov
out
inc
mov
mov
jl
push
sub
mov
cli
mov
mov
sub
arpl
inc
lret
inc
add
push
leave
mov
in
incl
int
xor
pusha
xchg
mov
fisttps
into
outsl
ljmp
stc
out
xor
stos
mov
cmp
xchg
and
pop
hlt
cwtl
mov
dec
pop
sub
push
lcall
arpl
cmc
fbstp
jle
xchg
in
dec
xchg
sbb
pop
insb
cld
ljmp
mov
inc
sbb
pop
mov
bound
mov
or
stos
or
hlt
mov
frstor
ljmp
je
xor
sahf
push
mov
cmpsb
dec
popa
aad
inc
push
jmp
sub
shrb
in
push
mov
add
mov
cmp
dec
adc
fwait
mov
xor
cld
decl
outsb
cmpsb
adc
xchg
mov
in
aad
popf
xlat
imull
inc
dec
jp
ljmp
repz
xchg
mov
jnp
shr
pusha
cmp
cmp
and
ja
xlat
iret
pop
add
mov
mov
jae
xchg
insl
mov
inc
sbb
jg
cmp
push
xchg
sar
dec
insb
jl
pmuludq
xor
push
jnp
loop
fimull
in
sbb
xchg
addr16
or
es
mov
mov
or
mov
cltd
pop
dec
sahf
js
ss
mov
cmp
pushl
mov
dec
mov
cwtl
ret
scas
aam
fiaddl
insl
pushl
lcall
js
or
lock
shlb
push
cld
xchg
cmp
aad
lcall
sub
out
cmpsl
out
movsl
or
and
sbb
in
dec
in
or
push
ss
push
or
loope
ds
add
mov
dec
data16
mov
xor
ja
jae
sbb
push
into
cli
pop
sub
and
pushl
dec
mov
dec
aas
push
pop
add
add
in
xor
jmp
ds
adc
lods
imul
stc
xchg
int
cwtl
mov
mov
movsb
adc
into
and
aad
sub
sahf
loopne
sbb
lds
pop
inc
pop
push
adc
or
jle
adc
js
call
out
rep
fs
lcall
xchg
and
rol
xchg
and
das
pop
in
pop
rorl
jmp
sbb
lcall
movl
test
sub
daa
std
loope
mov
adc
and
cmp
lcall
push
push
js
enter
pop
mov
or
lcall
cmp
push
mov
jg
call
pop
ficoms
icebp
frstor
stos
lock
movsb
push
push
pop
lcall
pushl
jbe
cmp
and
jle
xchg
jmp
mov
into
or
cmp
repnz
or
adc
jno
jnp
jp
in
dec
mov
in
mulb
sub
mov
sub
jp
or
mov
mov
cmp
lcall
fisttpll
and
push
push
push
xchg
mov
sbb
les
insb
or
xor
les
pop
adc
push
std
aaa
jbe
mov
mov
dec
adc
sbb
dec
aaa
mov
mov
xchg
rcl
mov
loope
jg
cwtl
pop
mov
js
out
ud2
popa
pushf
jp
loop
aam
mov
roll
pop
lcall
xchg
jnp
push
lretw
ret
sub
mov
inc
loope
mov
arpl
loopne
cld
bound
decl
cli
enter
iret
sub
ljmp
xor
loopne
aaa
mov
jns
ds
decl
sub
std
cmp
inc
ljmp
in
and
lods
xchg
sub
xor
repz
call
jmp
jmp
lock
nop
xchg
sbb
arpl
pop
pop
jp
mov
lcall
xchg
movb
dec
mov
inc
popf
pop
iret
dec
or
push
inc
mov
xchg
mov
and
inc
mov
fldl
scas
stos
popl
push
add
mov
mov
xor
pop
sub
dec
aas
cs
int3
fs
shll
adc
jmp
xchg
outsb
add
add
push
call
ljmp
pop
in
cmpsb
cld
cmp
xchg
outsb
and
ficomps
push
jae
test
sbb
arpl
sub
push
int3
and
mov
fs
jg
out
into
fcom
cmp
cltd
leave
shlb
mov
adc
xor
cli
decl
push
xor
jg
and
push
xchg
scas
jle
cmp
mov
adc
jecxz
jne
pop
or
scas
or
dec
neg
clc
xchg
pushl
jle
stos
rorb
jl
add
arpl
dec
inc
repz
ljmp
xor
cmp
push
shll
and
sub
or
idiv
xchg
cli
ss
pop
mov
dec
cmp
or
lcall
add
in
lock
fcomp
leave
ret
out
dec
rcrb
adc
xchg
cmpb
and
rol
jmp
pop
sarl
sti
pop
out
test
clc
add
call
lahf
fbld
popf
cmp
int
cltd
xchg
mov
repz
call
repz
fidivrs
cmpsb
test
lahf
add
call
jae
xor
shlb
push
fistpll
movhps
dec
pop
inc
adc
xchg
sahf
inc
decl
xchg
notb
mov
into
mov
and
jmp
and
sbb
jo
or
ds
pop
mov
push
inc
adc
mov
stos
adc
outsb
jnp
xor
xchg
dec
sbb
xchg
xor
xchg
mov
decl
ret
stos
mov
xor
mov
jo
mov
sahf
mov
sbb
lcall
inc
popa
cmp
mov
xor
push
int3
jg
arpl
mov
decb
out
push
pop
sbb
dec
pop
lods
stos
adc
leave
jmp
sbb
mov
jle
xor
cli
sub
pushl
shrl
mov
or
fcompl
sub
pop
sbb
out
jp
push
in
inc
push
dec
push
lods
shl
push
inc
in
lret
shl
cwtl
add
xchg
adc
jg
xor
add
mov
mov
pop
stos
popa
imul
and
lcall
out
push
jmp
jns
sahf
inc
sahf
cltd
mov
insl
push
je
cs
jp
iret
jae
shl
lods
aas
shr
int3
iret
scas
clc
sub
jl
loope
sub
nop
fdivp
or
aam
rcrb
movsb
test
pushl
xchg
in
jmp
imull
dec
rol
divps
leave
aas
mov
jg
add
mov
jecxz
out
out
or
push
fwait
jbe
and
mov
cmp
aad
pop
loopne
cs
das
inc
fld
jg
mov
mov
rcrb
adc
inc
and
cmpsb
cs
sti
or
loope
test
sar
add
out
test
adc
mov
jne
cmp
les
test
ljmp
enter
dec
popa
dec
xlat
test
push
push
cmpsb
xchg
pushf
test
int
jbe
sarl
bound
xchg
push
pushl
ret
daa
pop
cmp
rorl
orl
jge
inc
fstps
ja
inc
sub
mov
pop
imul
fadd
mov
les
scas
lea
aad
pop
addr16
xchg
call
pop
xor
lcall
aad
mov
cld
push
leave
neg
cmp
daa
enter
stos
jg
test
nop
dec
xor
sbb
mov
ret
loope
movsb
xchg
mov
icebp
jg
sarb
mov
mov
sub
and
stos
std
outsl
fcompl
jmp
lahf
jno
pop
add
lods
imul
cmp
jae
add
jmp
cmp
mov
inc
push
testb
fistpl
std
cmpsb
and
inc
bound
xchg
sub
lcall
div
lock
pop
xchg
xchg
or
call
jnp
sbb
mov
in
inc
test
data16
mov
mov
lock
and
fs
pushl
clc
pushf
and
lods
mov
sti
out
imul
fs
sbb
scas
testb
roll
jnp
and
incl
add
das
sub
aaa
jae
stos
push
add
mov
rcr
idiv
ljmp
sub
pusha
jg
in
sbb
jl
mov
mov
gs
es
ljmp
stos
pop
sti
fildl
lea
fisttpl
cmp
jle
movsb
sbb
or
out
icebp
ja
call
jbe
bnd
mov
mov
loop
test
add
lret
inc
lcall
inc
and
mov
xchg
in
xor
sar
mov
or
hlt
inc
lock
jae
inc
stc
pop
push
lahf
filds
sub
add
aam
movsb
fcmovu
lahf
ljmp
jnp
sahf
xchg
push
iret
adc
xchg
cwtl
jns
repz
ljmp
fsubl
mov
insb
pop
dec
xchg
int
pop
mov
cwtl
andb
sub
add
jg
cwtl
addr16
sbb
sub
adc
mov
das
enter
fwait
push
lahf
hlt
out
cli
inc
push
xchg
xor
add
or
loopne
add
xchg
out
lcall
or
clc
add
or
insb
scas
ljmp
lock
call
cmp
jge
les
add
jl
movsb
in
dec
popf
mov
popf
adc
mov
mov
adc
and
cs
push
mov
pop
lock
and
stos
cmp
lds
scas
das
imul
ljmp
leave
lods
add
inc
std
pop
scas
mov
adc
mov
jmp
rcr
jae
push
push
jbe
add
fadd
or
xor
fwait
shlb
adc
lcall
jmp
sbb
sbb
push
mov
cmc
pop
jb
lods
arpl
add
das
cmc
adc
fadd
cmpsl
xchg
stc
inc
idivb
repz
fildl
ja
es
adc
jmp
jmp
aad
add
ss
outsl
ret
and
addr16
mov
mov
inc
mov
push
decl
aam
rcrl
cmp
add
pop
sub
and
mov
jae
adc
push
adc
add
sbb
inc
or
fs
data16
jmp
push
sarl
xchg
std
mov
call
nop
cli
xchg
push
insl
out
loope
js
mov
jl
jmp
jmp
push
pusha
jmp
int
aam
xor
adc
push
in
add
repz
lcall
fimull
lret
ret
insb
popf
mov
gs
scas
loopne
mov
mov
mov
jb
add
out
pushl
dec
in
repz
movsb
push
sub
cltd
mov
xchg
or
push
aaa
outsl
das
out
pop
test
ljmp
fs
lret
lret
sbb
mov
pop
lahf
add
mov
add
dec
inc
and
rclb
les
out
pushl
mov
aaa
adc
fistps
inc
pop
aad
or
outsl
xor
ret
mov
cmp
scas
test
xchg
jl
nop
push
in
cmp
sub
mov
xchg
test
add
sub
xor
ja
je
inc
lret
lcall
jns
lea
out
jb
mov
stc
sub
and
test
inc
iret
addr16
lock
lods
call
std
pushf
flds
test
je
fiaddl
iret
in
sbb
repnz
insl
sub
decl
dec
pop
stos
xchg
stos
jne
enter
dec
sbb
dec
jbe
jg
xchg
push
ja
enter
pop
sbb
sbb
call
pop
cmpsb
mov
cmp
sbb
std
rcll
jmp
adc
aaa
cmp
sar
pushl
dec
mov
arpl
pop
and
test
sahf
in
pop
jmp
lea
incl
sbb
and
pop
fcomip
mov
adc
stc
lahf
pop
inc
repnz
mov
push
xchg
shll
ret
mov
js
add
jno
jp
out
xchg
and
xchg
ljmp
rclb
and
mov
push
les
pop
mov
and
call
out
das
pop
arpl
mov
das
sahf
jmp
jp
lahf
cli
pusha
mov
jmp
ljmp
stos
mov
lods
repnz
add
sti
add
addr16
xor
mov
adc
jle
hlt
pushl
push
loope
shrb
push
dec
dec
or
dec
out
ss
inc
ljmp
fwait
mov
sub
cmpsb
xor
int
jecxz
out
js
xchg
sub
call
pop
sub
jg
jmp
lcall
push
xor
add
inc
mov
iret
mov
or
dec
fdivrs
mov
cmp
and
inc
mov
pop
int
aaa
dec
test
lock
jmp
jo
add
dec
or
push
dec
cmp
and
into
incl
mov
mov
es
shlb
incl
stos
mov
push
rolb
int
in
sbb
add
or
iret
dec
adc
xchg
mov
jg
jp
and
xor
xor
ret
pop
adc
int
xor
popa
dec
lcall
pushl
pop
add
sub
mov
mov
out
frstor
pop
mov
repz
jmp
jnp
push
lret
mov
loope
sti
jno
jle
mov
pop
pop
orl
in
sbb
jg
jmp
aam
lds
adc
cmpsb
sbb
xor
fwait
lahf
stos
jb
cltd
adc
hlt
cld
push
adc
xlat
and
add
xor
mov
pushl
adc
jl
and
lods
notb
fstl
adc
in
mov
pushl
adc
lret
dec
pusha
cmc
ret
push
cmp
push
movsb
rol
mov
mov
mov
push
push
ret
int
inc
aad
xor
add
xor
push
call
cld
cmp
addr16
inc
and
xor
cmc
pop
ljmp
decl
pop
push
clc
pop
loop
pop
stc
bound
mov
cmovb
lret
mov
andl
jmp
push
shrl
imul
sbbl
mov
gs
call
cld
mov
fsubrs
insb
fistpl
jno
mov
stos
gs
mov
mov
loop
nop
cmpsb
mov
outsb
and
call
lock
loop
in
inc
add
test
pop
repz
dec
cmp
fnstcw
xchg
ljmp
out
jb
lods
xor
mov
mov
insl
cli
mov
loope
btc
jbe
push
dec
dec
xchg
and
and
call
sub
inc
add
int3
gs
movsb
addr16
sarb
aad
lret
decl
subl
dec
enter
cmp
adc
sub
call
cmp
mov
pushf
push
sub
cmp
cli
add
rolb
cmpsl
jae
sbb
jns
gs
sub
mov
dec
xor
sub
mov
cmpsl
push
test
xchg
dec
faddl
adc
shlb
cmpsl
xchg
call
cld
ret
mov
lret
scas
dec
pushf
lods
ret
aaa
xor
rcll
add
cmp
jmp
enter
imul
dec
outsl
pop
pop
push
push
imul
push
xchg
fbld
pushl
mov
sahf
lods
mov
jns
xchg
hlt
jge
cld
sarl
xchg
mov
adc
cmp
pop
std
sbbl
stc
int
int3
inc
sub
into
popf
test
pop
cli
lcall
jne
dec
jge
stos
sahf
out
xchg
xchg
test
sbb
lret
icebp
cmp
mov
ljmp
bound
lock
mov
push
inc
xor
cmp
cwtl
jno
outsl
jmp
pushl
mov
mov
jno
rcrb
test
mov
push
sbb
mov
push
stos
sub
dec
mov
or
ljmp
mov
push
or
aam
inc
mov
add
add
call
jb
fnstenv
jbe,pt
mov
lret
adc
pop
xor
sahf
pushl
clc
clc
gs
mov
push
jo
sub
jmp
incb
adc
idivb
xchg
mov
clc
stos
dec
cmp
ljmp
pop
jns
sbb
jns
push
dec
inc
jne
xor
dec
sub
decl
xor
pop
xor
push
xor
std
sub
ljmp
push
movsl
adc
add
mov
in
dec
sbbl
push
jl
pcmpgtd
pushf
lcall
fidivrs
xor
push
pop
fidivrl
int3
sub
pop
movsb
cmp
scas
dec
sbb
dec
cmpsl
push
enter
jge
enter
nop
std
ljmp
filds
lods
push
and
dec
jno
in
cmp
aaa
cmpsb
mov
push
dec
out
xchg
sarb
outsb
decb
lret
xchg
roll
xchg
sub
shr
ljmp
cwtl
jmp
push
test
add
jbe
sub
xlat
addr16
dec
mov
xchg
ljmp
cli
xchg
mov
loope
add
stc
jg
push
push
add
xchg
mov
mov
call
cld
popa
repnz
fbstp
addb
and
dec
and
xor
dec
jl
call
not
xchg
jb
mov
call
pusha
mov
test
fildl
mov
leave
inc
decl
mov
cmp
mov
mov
ds
cli
pushf
mov
pop
std
stos
pusha
xchg
fnstsw
push
lock
imul
dec
sar
sbb
imulb
insb
and
cmp
add
inc
out
jnp
fcompl
incl
pop
dec
shrb
arpl
xchg
sahf
cwtl
or
mov
mov
jg
cmp
inc
int
cwtl
in
test
in
mov
xchg
mov
outsl
xchg
jmp
fs
jp
xchg
fdivs
dec
add
cmpsb
add
pushf
scas
mov
or
jg
mov
add
add
xor
iret
js
pop
pop
inc
pusha
mov
inc
pop
icebp
jmp
push
shll
cmpsb
sbb
rol
rol
leave
inc
mov
call
loopne
and
jle
stc
fcmovnu
js
xor
and
filds
iret
xchg
pusha
adc
lret
and
out
in
int3
call
loopne
mov
mov
test
subl
dec
mov
mov
sbb
dec
mov
test
pop
mov
call
mov
jo
fisubrs
sub
insb
and
jmp
xlat
mov
mov
xchg
dec
cmp
fwait
sub
inc
test
cmc
das
dec
mov
pop
push
ret
and
xor
jmp
xchg
inc
andl
je
repz
cli
xchg
ljmp
repz
or
mov
dec
ret
cmp
fisttpl
test
xor
insb
adc
addr16
jnp
popa
popa
jle
lcall
mov
xchg
add
fldt
jl
movsl
aam
pop
rclb
dec
ret
pop
mov
jmp
cmp
xlat
xchg
or
adc
jge
subl
adc
push
sub
and
mov
sti
xor
mov
imul
lods
fcomi
mov
push
ljmp
imul
adc
rolb
fnstenv
xchg
jb
sub
adc
js
into
inc
dec
cwtl
inc
decl
sbb
xor
adc
movsb
popf
jg
daa
imul
ljmp
mov
pushf
leave
mov
pop
pop
or
xchg
add
pop
cmp
incl
repnz
lods
mov
aaa
cmp
sub
sbbl
sahf
ret
jbe
jbe
incl
sub
out
xor
ljmp
jmp
xor
lcall
lret
daa
mov
insb
mov
push
adc
mov
outsl
or
insb
jle
push
leave
addr16
ja
jmp
pop
dec
mov
adc
shl
inc
add
mov
ret
imul
xchg
loope
cmpl
cli
fists
jno
xchg
fnstsw
xchg
dec
inc
sbb
add
fnstsw
adc
ljmp
jle
dec
or
or
cmpsb
sbb
dec
fwait
sti
sahf
cmc
pop
call
repnz
mov
test
sub
inc
aaa
sub
lcall
push
ljmp
push
mov
push
xchg
adc
loope
out
lahf
xor
dec
cld
fstpt
and
mov
insl
mov
jp
je
push
rorb
out
mov
pop
sbb
and
xor
and
mov
sub
pushl
mov
out
repnz
and
adc
movsl
mov
gs
xlat
mov
arpl
testl
cli
in
jle
mov
mov
mov
fistps
in
and
call
mov
jmp
clc
pop
scas
fs
push
sarl
std
fcmovbe
dec
nop
adc
mov
jecxz
ljmp
or
subb
js
push
lock
push
sub
clc
incl
sbb
or
mov
push
sbb
ljmp
xchg
push
sbb
ret
enter
nop
cs
inc
fdivs
inc
in
pushl
add
aad
xchg
shlb
xchg
or
rorl
decl
jmp
push
cltd
or
mov
push
enter
lahf
insb
mov
mov
insb
in
lock
jl
push
movb
rorb
sti
enter
cmpsb
push
dec
aas
jmp
and
push
dec
insl
repnz
dec
pop
pop
jmp
lret
mov
dec
dec
test
dec
daa
jne
inc
xor
jmp
repz
inc
fwait
sahf
fdivs
inc
call
push
mov
mov
and
sbbb
xchg
into
push
js
scas
jmp
xchg
sbb
aam
fmull
hlt
sub
dec
sub
das
rcll
stos
hlt
shrl
cmc
subb
aam
xchg
sub
pop
addr16
outsl
fnstsw
and
cmp
lahf
nop
jmp
pop
push
lcall
fmul
call
push
mov
fwait
int3
ret
xchg
imul
leave
jecxz
imul
call
or
test
push
call
push
push
xabort
hlt
sub
fists
xchg
mov
icebp
and
xor
dec
int
repnz
int
mov
js
leave
pop
mov
push
pop
leave
mov
pushl
or
in
call
xchg
cli
scas
loop
jecxz
inc
frstor
ds
call
add
dec
jnp
dec
pop
or
fidivl
mov
iret
lahf
push
push
iret
pop
in
std
das
sar
pushl
jp
pop
js
movsl
cmp
popa
test
sbb
and
mov
scas
shlb
stos
mov
inc
cmpsb
sbb
lds
incl
jmp
stc
das
data16
jmp
dec
ret
lcall
repz
test
add
add
loope
mov
cmp
jmp
push
mov
dec
push
jbe
xor
mov
mov
cmp
outsl
push
lret
mov
cld
fmulp
mov
mov
mov
sub
fcom
sub
stos
sbb
jmp
popf
loopne
mov
movsl
jl
push
shrb
and
sti
into
cmp
cmp
ljmp
xchg
stc
push
cmp
mov
and
lcall
stc
call
enter
mov
sarb
xchg
ret
dec
or
loopne
outsb
movsb
inc
pushf
sbb
and
sar
cmp
popa
or
dec
mov
repz
mov
adc
jne
pop
add
push
cmc
jg
loope
add
adc
xor
xchg
cmp
fisubl
lcall
xor
call
clc
mov
movsb
dec
push
repnz
mov
outsl
int3
cmp
roll
cli
iret
sub
pop
xor
in
xchg
movsl
cltd
inc
icebp
adc
pop
in
test
mov
inc
sub
orb
out
pop
out
movsl
movsl
push
iret
jns
inc
mov
decl
int3
fimuls
jae
cmc
xor
lea
fcos
jmp
sbb
aam
and
pop
xor
cs
jp
das
jo
rol
mov
jnp
ret
xor
lcall
ljmp
dec
inc
mov
pop
fnstsw
icebp
in
mov
cmp
stos
and
cmp
dec
cmp
xchg
sahf
hlt
sub
cmp
arpl
xlat
cmp
gs
das
sar
pushl
mov
sub
inc
arpl
faddp
in
nop
cmp
out
mov
jns
lret
mov
dec
add
js
into
repz
sbbb
orl
push
push
lret
std
sub
pushl
xor
sub
dec
mov
push
or
lock
outsl
xor
mov
lods
jg
cmpl
sub
ja
pushl
or
sbb
outsb
ljmp
sti
cmc
add
sbb
movsb
and
dec
cli
pushl
ss
and
dec
or
mov
push
push
mov
jno
pop
addr16
ljmp
pop
or
adc
fwait
push
push
sti
imul
mov
dec
xor
lahf
jle
pushl
fcmovb
inc
jb
dec
adc
lods
movsb
mov
dec
jge
jne
dec
shll
jle
incl
int3
dec
es
pop
add
fwait
rcrb
xchg
clc
add
outsb
loope
ljmp
xchg
cs
icebp
insl
xor
push
pop
lret
or
ret
lds
jmp
or
dec
inc
lock
andl
jecxz
arpl
les
cmc
inc
jo
addr16
pushl
ret
int
movsl
cmp
or
xchg
xorb
cmp
adc
push
call
jmp
in
push
fimuls
jg
aad
lds
and
xchg
add
or
call
jno
out
lea
xchg
xlat
aaa
sbb
mov
mov
adc
popa
fs
jmp
mov
ret
iret
out
sub
popa
pop
xchg
imul
int3
lea
jb
divb
push
iret
push
fcmovbe
ljmp
mov
stos
inc
in
inc
pushl
call
dec
lret
mov
sbb
faddp
dec
outsb
bound
es
and
lcall
sub
outsb
cmpl
inc
dec
mov
xchg
mov
decl
popa
std
jnp
ja
aaa
lods
jecxz
in
cli
push
loop
jecxz
sub
jne
pop
es
jmp
call
xchg
pop
xchg
pushf
adc
sub
jl
cli
push
test
icebp
out
push
gs
inc
lcall
pop
out
mov
aad
adc
mov
ret
jo
adc
mov
decb
je
mov
jl
and
xchg
mov
aas
decl
mov
aas
outsb
push
ret
pusha
fcoml
pop
jno
arpl
or
decl
inc
out
cmp
pusha
push
pop
fildl
add
scas
das
dec
jo
scas
mov
cwtl
xor
and
dec
add
xchg
leave
imul
ljmp
stc
lahf
jl
pushf
dec
ljmp
ficoms
jo
push
imull
mov
ds
fcom
pop
ljmp
jmp
push
push
mov
test
and
push
bound
sar
jle
mov
test
cwtl
fsubrl
aam
cmpsl
aaa
ret
jg
mov
incl
js
jbe
dec
mov
xor
scas
pop
adc
xchg
dec
icebp
pushl
je
push
xor
popf
mov
les
adc
xlat
mov
pop
je
xor
lcall
jns
add
sbb
push
pop
cld
inc
ljmp
and
sub
test
mov
cmp
out
sub
push
mulb
push
jecxz
loop
test
or
flds
or
fisubrl
xchg
movsl
mov
ljmp
xor
loope
test
inc
rolb
add
jg
add
out
aaa
jne
ret
inc
adc
mov
mov
call
mov
sbb
or
jo
lcall
imul
lcall
cltd
ret
pop
cs
xor
pop
or
stc
in
imulb
cs
and
fldenv
fildll
negb
xlat
movsb
mov
lret
mov
jno
cwtl
lods
add
dec
lods
mov
xlat
ret
movsb
out
scas
mov
mov
inc
movsl
imul
cld
lods
xor
lock
xor
mov
and
adc
in
jmp
lcall
aad
push
or
push
dec
gs
cmp
insl
push
or
mov
dec
repz
xor
mov
sub
ljmp
les
cmp
inc
aam
test
and
addr16
lcall
test
arpl
jecxz
out
repz
rorb
push
jg
in
call
push
xchg
les
cmc
push
and
testl
sub
decl
leave
jno
fistps
mov
pop
mov
shl
xlat
cmp
call
enter
pop
ss
cli
mov
jl
mov
imul
insb
and
pusha
xor
dec
insb
add
mov
adc
inc
xchg
push
cmp
dec
inc
xor
decl
cmp
or
cwtl
stos
and
clc
and
out
sahf
sbb
test
mov
ljmp
mov
rcr
inc
testl
sbb
imul
jns
das
sar
loopne
jg
fstl
inc
iret
inc
dec
sub
dec
addr16
mov
into
and
sub
mov
pop
ss
outsl
shll
pusha
mov
jecxz
jle
jno
mov
or
push
xor
neg
hlt
cmp
scas
mov
pcmpeqb
outsl
in
adc
incl
rcr
pop
xchg
xor
loop
ds
push
popf
outsb
stos
pop
xchg
rcrb
jle
sub
mov
dec
lret
mov
jno
pop
insl
jne
mov
pop
mov
mov
and
push
add
jmp
jae
cmp
or
inc
movsb
pushf
mov
or
pop
call
fldt
push
push
imul
mov
out
out
mov
call
pop
jbe
das
gs
push
mov
xchg
push
xchg
scas
gs
jmp
pop
dec
mov
push
in
repz
xchg
nop
mov
and
jg
add
pop
insl
xchg
gs
insl
out
and
dec
jmp
cmc
sbb
push
aas
jg
or
ljmp
loope
add
pop
stc
xchg
xchg
and
inc
pushf
sahf
decb
xchg
lret
sti
lods
add
in
mov
push
push
pop
divl
lret
mov
rorb
decl
scas
cmpsl
popf
fwait
push
insl
idivb
pop
sub
adc
dec
add
xchg
mov
pushl
xor
cmp
cmp
divb
pop
adc
push
jmp
xor
push
adc
jp
scas
es
pop
out
imul
pop
xor
cmp
scas
ljmp
jbe
and
push
mov
loope
mov
decl
loop
dec
inc
dec
pushf
loope
add
add
ljmp
mov
std
mov
mov
test
sbb
sub
test
cvtps2pi
in
or
add
lds
aam
lds
and
or
xor
fisttps
xor
ffreep
xor
scas
mov
decl
in
jnp
pop
sarb
flds
sbb
loop
sbb
mov
js
xlat
ljmp
or
push
sahf
insb
dec
sbb
inc
sub
fisubrl
cld
sbb
insb
ret
adc
jno
sub
mov
ja
andb
rcrl
in
jmp
ret
aam
cmp
and
shlb
std
movsl
popa
lock
daa
add
pushf
adc
test
lods
fstps
push
imul
lahf
mov
jae
cmp
sub
and
popa
shlb
push
sub
pop
test
sbb
pop
jb
rcr
inc
mov
fwait
cli
incl
test
or
stos
push
dec
repnz
inc
inc
jg
data16
add
adc
clc
mov
cmpb
dec
dec
push
outsl
cmp
lret
icebp
repnz
xlat
test
incl
cmp
dec
popa
nop
adcl
sbb
lock
jmp
repnz
push
mov
and
cmpsb
lret
adc
jb
rcrb
mov
call
outsl
sub
adc
xchg
sub
mov
test
ror
leave
lcall
xchg
sub
mov
dec
aaa
add
xchg
clc
pushl
cmpsb
subb
loop
jmp
fs
inc
mov
pushl
shl
imul
mov
pop
jb
and
inc
dec
arpl
mov
cmc
ss
push
jnp
hlt
adc
lahf
cmpsl
mov
push
sarl
mov
add
das
dec
mov
sub
or
cld
lcall
enter
inc
cs
cwtl
jnp
xchg
mov
pop
pop
jge
xor
add
lret
sti
mov
lea
and
repnz
test
cmp
mov
sar
push
pop
and
or
sub
fisttpl
jg
lret
cs
or
add
mov
jle
add
call
inc
or
sarb
jle
cs
pushl
sub
mov
sbb
ds
sub
jns
cltd
lods
push
mov
lcall
xchg
pop
lods
xchg
sbb
inc
sub
mov
pop
inc
adc
fiaddl
sti
push
test
in
icebp
sub
pop
es
jbe
loope
das
test
and
jns
sbb
fwait
sub
inc
int
in
das
mov
adc
mov
fdiv
pop
fstpl
sub
mov
pop
jae
pop
and
mov
leave
int3
pop
std
pop
decl
sub
fildll
fs
dec
lea
in
or
jg
cmp
mov
mov
out
lret
loope
mov
add
or
push
inc
fcomip
imul
rolb
push
fwait
imul
sub
fistps
mov
rcll
fwait
push
sbb
stos
rolb
popf
sbb
mov
adc
cli
scas
sbb
leave
outsl
call
and
add
invd
inc
mov
std
mov
jl
fmuls
push
sbb
call
lcall
adc
ret
leave
mov
roll
popa
ja
repz
lcall
add
enter
mov
idiv
jmp
std
loope
add
pop
sbb
dec
scas
xor
imul
sbb
xchg
xor
testb
cmp
jae
sub
mov
xchg
out
test
lds
sar
cli
loope
dec
aaa
add
xlat
xor
mov
mov
cmpsl
xchg
xchg
cld
mov
pop
filds
cli
ljmp
ret
add
test
jmp
push
decl
cli
mov
pop
sahf
cmp
jp
rorb
int3
jp
outsl
call
outsl
clc
incl
sub
pop
scas
pop
cwtl
cmp
fxch
xchg
lea
jecxz
fisubrs
call
fnstsw
or
or
in
pop
mov
icebp
or
jg
rorl
shlb
lcall
pop
xchg
pop
jae
cltd
insb
inc
jmp
fsub
call
push
or
ja
pushaw
inc
inc
and
mov
jae
pop
jecxz
in
out
ret
orl
das
clc
cli
or
nop
je
xchg
and
sbb
loopne
popa
dec
xor
test
jle
cmp
jl
pop
in
xor
ror
push
dec
and
repnz
push
mov
mov
iret
jmp
daa
lock
hlt
cmc
jnp
arpl
shll
in
std
fnstenv
jmp
push
fwait
lret
nop
sub
jno
pop
mov
push
sub
jae
outsl
jno
pusha
negl
scas
jae
push
std
or
inc
test
int3
sbb
push
dec
mov
in
sbb
mov
ljmp
push
add
sub
flds
fwait
dec
and
xchg
sbb
jge
fs
pop
cmp
or
test
adc
sub
stos
push
or
fstps
mov
js
cmc
mov
dec
mov
jg
jo
jl
sub
sahf
fbld
pop
test
adc
and
sub
mov
call
popf
movsb
add
sahf
sbb
jbe
scas
lods
push
lods
fwait
loopne
daa
in
and
adc
inc
fidivrs
les
lret
mov
mov
push
jmp
stos
mov
push
cmp
pop
loopne
leave
push
push
xor
mov
inc
cmpsb
and
mov
mov
shrb
insl
out
pop
sti
int
push
lods
cmc
fwait
hlt
or
mov
sub
repz
clc
sub
sar
dec
loop
jle
inc
mov
push
xchg
clc
sub
jb
neg
and
shll
ljmp
rolb
push
test
aaa
pop
dec
sahf
or
mov
cmp
sahf
int3
jl
ror
aam
adcl
jg
test
ljmp
je
call
mov
hlt
and
or
jmp
inc
inc
enter
imul
mov
mov
orb
movsb
or
js
cmp
fs
sub
cmc
insl
xlat
in
mov
imul
and
adc
adc
jnp
and
pusha
xchg
cwtl
sbb
sbb
and
jae
pop
iret
dec
arpl
sbb
jl
xor
test
push
or
out
xchg
mov
lcall
call
jge
sbb
sub
xchg
adc
imul
sbb
adc
ljmp
pushf
jne
cmpl
scas
pop
dec
push
movsb
and
out
fs
lcall
gs
dec
fadd
mov
jmp
adc
ret
in
xchg
xor
xor
xchg
sarb
inc
mov
cmpsl
in
adc
sbbb
add
pop
ss
fstl
aam
sbb
call
xor
cld
jmp
mov
mov
fidivs
sbb
mov
movb
into
lods
mov
sub
std
test
stc
jns
jg
mov
xchg
and
movsl
dec
jo
es
lahf
inc
jae
je
mov
call
sbb
mov
es
mov
mov
loope
dec
sbb
fwait
mov
mov
sbb
int
xchg
and
dec
mov
hlt
mov
dec
stos
xchg
sarb
aad
aad
adc
call
dec
jnp
xor
cmp
test
mov
cmpsl
inc
xchg
out
adc
adc
dec
push
cmpsb
fnstenv
mov
sbb
mov
pop
push
arpl
or
pop
scas
jne
fcomip
int3
imul
ret
and
dec
adc
lods
xchg
ja
xchg
sar
ljmp
xchg
outsb
cmp
xchg
sbb
push
pop
dec
sub
cmp
call
movsl
push
mov
cltd
pop
jg
mov
cs
fstpt
add
cwtl
inc
incl
fsubl
mov
lret
icebp
stc
aam
jnp
mov
jmp
repz
ljmp
jo
mov
or
rcll
jbe
push
cmp
push
dec
lcall
push
and
add
sbb
push
pop
pop
shr
loopne
dec
pop
cmp
ds
mov
xchg
cli
sub
cmp
call
inc
shll
ds
cmpsb
scas
jnp
pop
test
inc
jnp
daa
incl
out
push
cmpsl
mov
pop
imul
jns
mov
incl
mov
mov
xor
pop
sbb
jns
cmpsl
cld
incl
jnp
push
fiadds
and
out
mov
pop
add
dec
add
insb
lcall
pusha
aam
mov
cmp
xchg
xor
fucomi
shll
push
jo
and
loopne
lret
cld
jge
push
pop
mov
push
loopne
mov
in
sar
xchg
mov
mov
fsubrl
cltd
adc
jnp
adc
push
rcll
cmp
mov
icebp
add
aad
mov
mov
pushl
inc
inc
dec
cmp
jo
fcoml
inc
mov
fwait
pop
jb
into
inc
cmpsl
iret
imul
push
in
pop
or
test
imul
inc
aam
push
movsb
dec
loop
loopne
inc
out
push
dec
sar
pop
lock
fiaddl
or
mov
ret
testl
mov
ljmp
arpl
cmp
jae
icebp
enter
shrl
in
jge
ljmp
loopne
adc
push
xchg
loopne
addr16
in
inc
mov
les
mov
mov
lods
hlt
mov
pop
adc
sahf
adc
sti
xor
fcmovnu
jg
dec
bound
ljmp
dec
mov
rolb
and
imul
push
divl
sar
lcall
xchg
cmpsb
ror
std
jl
pop
adc
and
push
jg
push
pop
lcall
jp
sub
sub
push
jb
pop
out
test
stc
cmp
jl
add
sbb
and
das
jns
ret
aam
sub
mov
fbld
lock
sbb
and
fimull
jl
ja
adc
lea
aaa
mov
rcr
jb
adc
pushl
xchg
sbb
das
jae
sub
jmp
fxtract
mov
loope
jmp
movsb
dec
rolb
shlb
fs
xor
inc
dec
adc
jle
inc
mov
dec
popf
aam
cli
dec
loopne
push
mov
sub
mov
cltd
fidivl
dec
dec
inc
in
incl
push
sahf
mov
xor
mov
push
movsl
pop
orl
xchg
mov
cld
aaa
lcall
fdivl
shrl
aaa
and
sub
push
nop
int
push
rolb
out
decl
cmp
pop
cmp
mov
je
inc
sub
lcall
rcrb
push
fdivs
fisubrs
cmc
mov
rolb
mov
mov
pushl
lret
sub
sub
je
or
push
es
sti
popf
mov
mov
push
adc
mov
push
xlat
fldcw
fisubrl
lea
jmp
push
les
outsl
mov
notb
lcall
xchg
das
push
cmp
ret
sub
sub
out
mov
dec
rcrl
mov
xchg
fs
imul
mov
cmp
movl
outsb
and
inc
mov
mov
pop
ljmp
pushl
sbb
sub
ljmp
lods
jle
pop
push
out
sbb
lret
dec
add
pushl
adc
insl
stc
mov
jg
movsb
cmp
lcall
or
in
out
mov
icebp
shll
jbe
sub
fsts
aam
movsb
jecxz
aad
push
loop
testl
cmc
lea
stos
xor
inc
lret
lods
mov
sbb
ret
xchg
fs
adc
pop
pop
push
dec
mov
loopne
fdivr
pop
cli
xchg
wrmsr
pop
xchg
test
dec
jmp
adc
lods
and
add
mov
incl
add
iret
sbb
jns
mov
test
pop
push
mov
cs
call
or
mov
push
pop
fstp
mov
fdiv
xor
in
mov
lret
mov
sub
jmp
imul
inc
sarb
out
mov
mov
add
inc
mov
cmp
outsl
es
iret
dec
repz
aaa
cld
scas
rclb
pop
sub
pushl
cmp
mov
out
mov
xchg
scas
lds
out
jl
rcrb
incl
nop
test
mov
shlb
mov
lcall
cmc
cs
lcall
mov
push
dec
prefetch
push
fnstsw
sti
outsl
rep
jecxz
pop
xchg
sub
jle
sbb
dec
adc
jo
pop
xor
jnp
pop
jmp
lds
inc
out
jmp
imul
mov
push
push
stc
xchg
cli
andb
call
and
lcall
cmpsb
cmp
ret
in
pop
cmp
jae
mov
iret
xchg
xor
sbb
jnp
or
mov
push
xor
or
cltd
loopne
incl
jmp
out
xchg
jbe
push
shl
cmp
lcall
in
cli
addr16
in
divl
dec
call
ret
xor
into
xchg
or
or
ret
mov
inc
push
cwtl
cld
clc
jp
sub
flds
pop
cmp
dec
adc
ljmp
cmpsb
mov
mov
push
dec
out
sub
mov
add
lock
mov
cli
dec
pop
cmp
ror
daa
pop
add
into
je
and
in
dec
out
mov
pushl
imul
shrb
insl
inc
cmp
xlat
xor
fnsave
inc
fdivl
mov
lock
add
insl
pusha
scas
or
push
xchg
push
mov
test
popa
hlt
and
stos
call
jno
jge
cmp
pop
push
and
cmpsl
sarb
jne
mov
adc
ljmp
daa
inc
out
test
mov
dec
add
mov
cmp
clc
stos
push
insl
jg
incl
sbb
and
sbbl
mov
add
adc
fcomip
decl
dec
push
adc
mov
cmp
mov
xor
lock
lcall
mov
xchg
xlat
loope
sub
mov
adc
inc
sub
pop
cld
mov
outsb
enter
popa
aad
pushf
cmp
aad
add
test
imul
pushl
gs
cmpsb
gs
gs
sbb
and
and
lret
pop
jg
jmp
lcall
lock
inc
mov
stos
xchg
jns
push
adc
mov
ja
aaa
push
ret
mov
or
cmp
push
pushl
sbb
adc
inc
js
add
bound
ljmp
ljmp
push
push
mov
sti
push
mov
out
shll
addr16
and
pushl
out
jne
xchg
loope
jmp
aam
data16
in
inc
lds
enter
cmp
ljmp
jne
in
mov
inc
adc
mov
pop
in
aam
sub
data16
cmp
aaa
gs
cmc
inc
cmp
sub
push
sarb
daa
inc
or
mov
jne
mov
push
imul
in
mov
ret
scas
adc
dec
sub
mov
dec
xchg
test
mov
call
scas
mov
add
mov
popa
popf
cmp
add
jge
stos
push
jne
and
ud0
add
int3
push
xor
lods
dec
inc
test
call
insb
repz
icebp
test
and
stos
and
xchg
fucomp
adc
dec
cmp
test
cmp
xchg
xchg
push
out
icebp
jecxz
loop
test
or
pop
xor
fsub
xchg
cmp
gs
ljmp
fstp
loopne
vmulsd
test
in
cmp
jne
add
incl
mov
scas
test
jnp
mov
aas
and
xchg
add
xchg
lret
and
pushl
sbb
xchg
ror
fstpt
int3
jb
pop
and
insl
cmp
fcmovnu
dec
lods
decl
rcl
sbb
test
mov
mov
pop
sti
cmp
or
cld
fisttpl
jbe
mov
adc
in
dec
lahf
frstor
lods
into
call
mov
aam
inc
test
fisubrs
mov
push
andl
cmpsb
or
pop
add
cmp
rcl
dec
sbb
add
insb
or
cld
ljmp
mov
or
push
loope
mov
xor
jmp
xor
xchg
insl
test
loop
cmp
repnz
fsubs
dec
pushf
test
inc
fiaddl
jmp
inc
jl
push
pop
mov
insb
mov
add
and
jg
incl
daa
inc
imul
orl
add
or
xor
outsb
adc
pushl
adc
into
pop
lret
add
enter
add
pushf
adc
iret
out
sub
lcall
ljmp
inc
dec
push
roll
ja
imulb
dec
psrad
fcomip
sbb
repnz
pop
sbb
mov
or
fcmovne
cld
mov
filds
inc
xchg
in
xchg
sbb
jb
lods
je
xchg
mov
cld
incl
cmp
call
pushf
lret
ret
mov
cs
decl
add
shlb
dec
shl
ljmp
mov
adc
loop
sub
or
xlat
dec
xor
ljmp
pop
out
add
mov
jle
test
repz
cmp
mov
inc
and
call
jns
fistpl
fs
push
mov
sbb
sub
scas
in
decl
imul
jae
adc
iret
scas
pop
adc
insl
add
mov
ja
lcall
sbb
ljmp
dec
aas
bswap
jp
xchg
call
adc
mov
int3
imul
loopne
jge
shl
mov
rcrl
sbb
xchg
decl
jae
test
pop
fs
push
aaa
adc
lcall
mov
cltd
mov
pop
add
fldl
pusha
inc
xchg
cmpsb
int
scas
inc
jno
mov
and
and
sarl
jl
iret
sbb
sbb
cmpsl
movsl
sbb
fistpll
add
js
outsb
sub
out
pushl
out
inc
inc
jge
cmp
mov
dec
es
sahf
add
fsubp
inc
jbe
aas
mov
movsl
pusha
rclb
popl
xor
out
adc
outsl
clc
pushl
daa
mov
cmp
inc
bound
jb
scas
scas
sbbb
jg
sbb
int
lock
jge
scas
test
fwait
mov
dec
adc
sbb
fsts
ljmp
xchg
mov
shl
jmp
adc
jle
adc
test
addr16
xor
xor
mov
sbb
decl
xchg
add
pop
xor
cmp
add
mov
xchg
adc
mov
jl
xor
jno
les
xchg
pop
mov
fwait
divb
inc
mov
xor
push
mov
out
xor
cld
add
mov
jmp
jmp
pop
mov
outsl
clc
jmp
std
sub
popa
add
xor
xor
or
int3
sbb
jmp
cmp
shll
adc
push
xchg
jecxz
shlb
jnp
fwait
or
pop
sbb
data16
sbb
repz
lcall
cmc
dec
stos
lret
xchg
sarl
ljmp
cmpsl
xchg
and
cltd
stc
xor
imul
push
mov
push
sahf
dec
popa
dec
je
jno
fdivrl
lds
jge
in
and
jg
lcall
lret
lods
fsubs
mov
shr
xor
addr16
mov
jl
int
cmc
popl
shlb
lcall
pop
into
out
cltd
nop
incl
clc
into
cmpsl
pop
aas
mov
out
or
or
pusha
dec
ljmp
or
xor
push
push
not
pop
rolb
ljmp
movsb
dec
mov
cs
mov
sub
jmp
jno
jbe
cmc
shlb
mov
inc
push
dec
dec
pop
mov
jmp
int3
dec
push
call
mov
data16
cld
push
and
ljmp
lret
fmuls
jb
adc
idiv
stc
movsb
xchg
add
data16
jge
movsl
or
decl
jmp
mov
shlb
cmp
inc
aad
add
sub
nop
jb,pt
ret
call
aam
loope
popf
push
cmp
das
mov
push
mov
call
decl
cmc
popa
sbb
pop
xor
xor
push
insb
add
inc
adc
test
call
jmp
popa
mov
rclb
add
decl
add
ja
lods
and
lock
jns
add
pushf
rcll
pop
js
xor
js
mov
sbb
call
pop
subb
xor
loope
sbb
test
xchg
jecxz
mov
loop
pop
mov
leave
test
popf
jmp
and
and
dec
xor
aaa
cmovle
inc
idiv
incl
shl
std
insl
aad
dec
test
fisttpl
jmp
sbb
outsl
in
cmp
add
loop
arpl
fwait
xchg
outsl
xchg
cltd
mov
or
pop
cmp
sbb
push
mov
mov
aas
jae
mov
sub
xor
rcrl
test
pop
cmp
push
xor
jbe
repz
test
jo
jno
push
jmp
xor
test
popf
inc
lret
cmp
mov
je
dec
push
add
or
sti
push
imul
add
inc
enter
pop
arpl
ds
pextrw
cmp
frstor
add
pushf
call
mov
inc
fidivl
aas
or
jmp
pusha
shrb
lret
and
inc
ret
sub
sub
push
fildll
mov
xchg
mov
int
cwtl
push
popf
push
roll
aad
stos
inc
xor
mov
and
push
cmp
xchg
sub
or
scas
xchg
adc
jb
inc
in
popf
scas
fnstenv
dec
into
xor
ljmp
iret
sbb
or
xchg
lret
in
ja
and
mov
ljmp
imul
data16
out
dec
fstpt
inc
jmp
xor
pop
int3
or
fwait
pop
pop
or
lcall
imul
xchg
or
mov
out
pop
mov
fimuls
sub
jge
jecxz
js
aas
sub
lods
sahf
push
mov
ljmp
dec
mov
push
xor
cmp
ds
cmp
push
mov
jbe
sar
sbb
inc
cmp
fwait
daa
sub
into
loope
jb
ret
scas
adc
mov
mov
dec
cmpsb
mov
aad
xor
dec
push
ret
mov
decl
xor
lods
repz
xor
xor
pusha
loopne
or
push
icebp
pusha
ljmp
dec
xor
hlt
push
mov
push
adc
cmc
outsl
clc
in
inc
lds
sti
cmp
mov
cmp
or
repnz
jge
repnz
xchg
hlt
stc
mov
push
cmpsl
xor
and
lock
and
inc
les
fildll
in
sub
pop
pop
adc
ret
faddl
repz
xlat
xchg
sub
jmp
inc
in
lcall
popf
and
cmpsl
out
mov
mov
inc
sahf
push
divb
xor
jb
mov
push
sbb
imul
mov
cli
jnp
aas
xchg
lods
fcmovne
dec
jno
mov
jg
push
dec
aas
aad
push
mov
stos
inc
loop
mov
lcall
enter
repz
cli
sbbb
jl
pop
js
nopl
push
push
fldl
in
imul
cmp
jp
adc
cltd
fcomip
decl
pop
vmaxps
into
ficoms
fdivrs
and
lahf
push
push
inc
scas
push
or
cmc
jp
sub
sub
outsb
add
mov
std
mov
push
jbe
or
lret
jae
fcompl
pop
test
lock
jl
cmpsb
in
mov
call
add
inc
jb
ljmp
push
aad
push
cmpsb
lock
sti
and
or
aad
fwait
and
dec
out
mov
dec
pushl
mov
inc
dec
xor
pushl
mov
adc
ret
lock
negb
aam
push
inc
into
adc
stc
daa
cmc
jg
cltd
add
push
lods
jbe
icebp
lods
mov
mov
int3
fdivr
jmp
mov
imul
and
and
lcall
push
rolb
jb
arpl
pusha
mov
iret
fwait
and
cli
in
add
ret
xlat
mov
insl
inc
cmp
bound
pushf
pop
icebp
push
out
push
pop
fistpll
in
pop
mov
cmpl
pushl
add
roll
inc
pop
out
push
mov
xchg
push
ret
fs
cmp
test
call
stos
addr16
push
je
pop
lods
inc
cs
ljmp
push
lret
xlat
lods
mov
or
and
cmp
add
and
insl
movsl
mov
lcall
push
mov
sub
mov
lds
cwtl
subl
incl
adc
xlat
xlat
int3
jae
dec
repnz
std
and
mov
push
ret
incl
ret
adc
pop
sahf
sub
mov
pop
cmpsl
jp
dec
jg
mov
mov
rorl
insb
push
and
cltd
fdivr
mov
scas
shr
xchg
jmp
movsl
mov
orl
mov
adc
xor
ljmp
daa
fldl
pop
into
daa
mov
sbb
data16
clc
cmpsb
pop
imul
xor
je
push
xor
out
xor
sub
scas
imul
inc
loopne
incl
sub
mov
insb
aam
xchg
mov
sbbb
imul
jmp
sbb
jae
xchg
or
clc
inc
xchg
sarb
push
ret
hlt
outsb
lahf
adc
sub
shl
call
adc
mov
cmp
movsb
dec
fstps
xchg
stos
pop
and
pop
loopne
cmpl
rorl
imul
aas
bound
mov
pop
pop
lods
jmp
das
inc
dec
adc
cld
cmpb
mov
cmp
cltd
lret
sarl
es
mov
xchg
mov
mov
insb
shlb
cmp
loopne
xor
lods
pop
jno
sahf
sbbb
stc
or
and
incl
mov
mov
inc
add
push
sbb
push
aas
cmp
jo
cli
lcall
incl
mov
cwtl
out
movsb
add
imul
add
pop
fs
incl
lahf
add
xor
mov
push
mov
xchg
icebp
repz
xchg
pop
into
imul
pushl
out
sub
push
xchg
mov
pop
jb
add
fldt
lret
pushl
ret
ljmp
movsl
xchg
mov
mov
or
stos
mov
fprem
sahf
ret
in
mov
repnz
sbb
cmp
daa
xor
and
imul
jmp
mov
jns
jno
call
adc
mov
lods
enter
pop
out
imul
je
mov
adc
cmpsl
cld
lcall
arpl
les
iret
add
or
stos
or
mov
push
mov
les
fiadds
pop
mov
mov
push
imul
mov
shlb
loope
in
pusha
push
cvtps2pd
jecxz
outsl
push
inc
jmp
sahf
xlat
cmp
mov
test
push
aas
xor
int
push
pop
mov
sub
das
imulb
cmp
lock
mov
aaa
mov
pop
dec
negb
loope
xchg
sbb
jmp
out
clc
mov
out
cli
inc
nop
out
jo
nop
outsb
and
imul
clc
mov
test
bound
jns
hlt
lcall
dec
push
scas
and
add
mov
sbb
or
bound
xor
mov
aad
aaa
insb
inc
mov
lods
je,pn
out
jmp
push
pop
rcl
pop
fwait
push
test
sbb
xchg
jmp
out
ljmp
in
loopne
mov
mov
stos
stos
movsb
sbb
test
pop
enter
call
js
mov
inc
sbb
push
xor
sbb
loop
cmp
pusha
imul
pop
fisubrl
fldenv
imul
jmp
pop
xlat
sbb
pop
push
or
bound
sbb
mov
cs
sbbb
pushl
xchg
or
sbbl
adc
pop
fbstp
call
pop
repnz
sub
sbb
nop
call
test
das
jmp
lcall
aam
test
mov
test
adc
and
or
pushaw
jns
sti
cmp
or
or
scas
test
scas
jbe
cltd
adc
leave
push
js
xchg
jp
std
and
test
je
mov
test
sahf
jnp
inc
mov
jmp
imul
ret
das
or
mov
inc
cmp
lods
add
mov
inc
sbb
loopne
xchg
mov
xchg
mov
test
adc
fidivrl
loopne
pop
dec
cld
dec
sbb
adc
lea
enter
imul
mov
inc
mov
and
jmp
jl
mov
in
test
test
incl
push
sub
inc
adc
push
mov
aas
xor
push
or
jg
add
mov
sub
pop
and
call
sti
pusha
push
adc
sub
sbb
add
fld
mov
inc
sub
or
cmp
add
sbb
and
xor
dec
jmp
xchg
sub
decl
add
push
test
dec
jecxz,pn
popf
aam
test
sub
negb
ljmp
dec
rorl
insl
push
lcall
xchg
scas
mov
fidivs
jl
scas
mov
cmp
inc
jle
fcmovnb
dec
sti
into
insl
mov
clc
lcall
sub
cmp
aaa
xchg
pop
movsb
dec
outsb
adc
jle
in
idivl
xor
mov
or
and
jno
pushl
and
push
xchg
cmp
and
jmp
push
or
cmc
jge
aaa
subl
cs
cmp
ret
or
les
jp
xchg
mov
arpl
arpl
call
or
loopne
mov
or
in
mov
inc
in
test
in
neg
in
icebp
mov
sbb
ret
mov
gs
xchg
mov
lret
jecxz
sub
dec
lret
mov
inc
pop
icebp
jae
mov
test
jnp
sub
pop
sbb
sub
dec
scas
repz
adc
out
ret
jns
test
cmovns
or
mov
aas
popf
ds
iret
lret
adc
jno
pop
movsl
ljmp
lea
add
out
pop
popf
or
sub
xchg
push
jg
loop
sub
out
or
push
xchg
insl
repnz
pop
arpl
jae
adc
jns
jne
ljmp
cmp
pop
jl
pop
jmp
je
arpl
sbb
inc
cmc
out
movsb
les
pop
ret
add
ss
fsts
and
testl
ja
inc
stc
sti
mov
push
and
sub
push
outsb
mov
fcoml
mov
sub
pop
fdivr
pushl
dec
lcall
adc
dec
xchg
inc
fs
mov
in
mov
mov
sti
fsubr
sub
ljmp
jbe
scas
lret
stos
or
je
lods
jl
add
outsb
xlat
loope
add
push
cwtl
mov
inc
or
mov
filds
jl
xor
cmp
sti
mov
add
aaa
xor
cmp
popa
push
xchg
adc
loopne
imul
mov
pusha
fdivr
lcall
xor
xor
sbb
mov
out
fisttps
fsubl
call
and
ds
mov
or
pushf
dec
fadds
cltd
mov
cld
mov
xchg
out
jmp
jecxz
mov
out
imul
ret
call
cs
mov
jbe
add
and
xchg
adc
mov
mov
call
in
sbb
aas
clc
jo
push
jge
and
lods
lret
xor
inc
mov
xor
sub
cld
mov
fimuls
test
repnz
js
enter
shlb
xchg
cld
sbb
shrl
pop
cs
push
mov
aad
sub
adc
addr16
cs
inc
fwait
xlat
xchg
inc
incl
sub
cld
jp
lret
lds
int3
xor
rdpmc
lret
rolb
mov
test
aaa
fldt
mov
lcall
jae
stos
aas
mov
sub
sahf
sbb
jmp
jmp
addb
jge
lea
sbb
loopne
sbb
fcoms
daa
jmp
in
outsl
jp
sub
test
xor
daa
out
pop
gs
cmp
push
jg
sub
sbb
fldl
repz
push
ss
lret
bound
fcomip
mov
pop
sub
ret
dec
dec
lcall
or
add
ljmp
pop
jno
aas
in
push
xchg
idivl
adc
out
test
daa
movsb
or
jg
mov
ljmp
into
arpl
inc
mov
aaa
outsb
sub
adc
int3
xchg
test
hlt
sahf
enter
movsl
ljmp
fwait
test
sub
jl
inc
pop
fs
mov
and
sbb
xchg
jecxz
xor
bound
dec
ud0
loope
or
xor
ljmp
jae
repz
dec
inc
jne
lahf
and
insl
adc
cmpl
das
adc
fdivrs
ret
jg
dec
mov
andb
push
mov
cmpsb
shll
test
shlb
call
jge
lret
in
add
xor
jmp
cmp
jnp
jmp
das
sub
imul
jmp
adc
out
shlb
xor
add
mov
xchg
std
std
es
clc
call
pop
sbb
pop
push
pop
in
or
push
adcb
ds
aas
fisttpl
push
sbb
std
enter
es
addr16
mov
push
pushl
pop
or
or
xchg
or
push
lods
pop
test
inc
pop
ljmp
incl
xor
pushf
pop
adc
or
xchg
push
lret
jmp
bound
lcall
mov
cmpsb
dec
out
dec
insb
in
outsb
mov
push
stos
xchg
call
imul
and
and
pop
push
sbb
outsb
imul
xor
push
xlat
enter
add
jg
mov
pop
fsubrl
and
pop
movsb
mov
mov
xor
out
rcl
inc
test
lock
ljmp
lock
pop
clc
mov
xlat
stos
loopne
mov
lcall
inc
xlat
jmp
popa
out
mov
mov
mov
aas
test
lahf
sbb
out
scas
aad
hlt
add
insl
inc
push
cmp
call
lods
jne
icebp
repnz
mov
fs
adcb
or
cld
pop
movb
sub
and
fiaddl
fstps
cli
call
xor
add
sbb
and
xchg
aas
adc
stos
shr
xchg
popf
adc
outsb
inc
cmp
cmp
jno
adc
lcall
jno
je
cmp
sbbl
or
and
loope
arpl
jne
fwait
adc
decl
imulb
inc
mov
pusha
imul
lret
std
and
out
push
push
clc
lds
inc
ss
pop
adc
mov
int
out
push
rcl
rcll
mov
sub
out
scas
bswap
mov
iret
fnstenv
xchg
push
fcomps
dec
aad
out
clc
cmp
mov
popf
cld
gs
addb
mov
sbb
mov
cld
push
sbb
mov
iret
subb
and
mov
insl
jb
js
mov
jl
or
clc
ret
cmp
jp
add
ret
decl
cmp
fwait
js
mov
mov
add
dec
pusha
repz
mulb
pop
ljmp
push
pop
pop
and
movsb
aas
pusha
int3
gs
ret
repz
insb
sar
in
push
mov
lcall
lock
cmpsb
mov
in
aam
dec
repz
add
into
cmpsb
call
dec
inc
out
cld
movsb
pop
jb
adc
mov
jmp
xchg
mov
jb
inc
pop
jp
push
pusha
xchg
std
sarb
mov
mov
mov
mov
std
or
mov
adc
jno
inc
pop
into
mov
or
out
in
movsb
or
cmp
stc
push
jnp
fs
icebp
sti
jl
cmp
mov
ret
sbb
fildll
add
sbb
sbb
xchg
test
das
sar
pop
or
dec
cmp
ret
push
cmp
dec
mov
sbb
mov
cmp
or
or
rolb
scas
aam
or
bound
dec
out
je
jmp
add
ss
shrb
xchg
add
shl
push
es
daa
out
ret
decl
and
cmp
mov
jmp
pusha
std
jae
jle
dec
sar
pushl
push
dec
test
pusha
stos
shl
dec
xchg
mov
das
push
mov
shl
es
pop
sub
ret
jecxz
mov
repz
out
mov
adc
fmul
dec
das
sahf
or
xor
gs
mov
jno
sub
sti
push
scas
push
pop
shrb
js
gs
jge
add
jg
pop
push
mov
lds
pop
cmpsl
loopne
pop
popa
cli
loope
mov
test
xor
xor
mov
pop
sbb
mov
and
jg
lds
and
adc
inc
push
sub
inc
stc
add
stos
scas
and
cs
neg
cli
outsb
incl
imulb
sahf
mov
mov
mov
adc
and
lret
ljmp
aad
pop
dec
lret
movsb
in
lods
dec
adc
stc
outsl
add
decl
add
testl
jge
dec
xor
jmp
sbb
push
jp
testb
push
cli
mov
mov
sub
push
daa
dec
cmp
jae
lret
lret
lods
jge
jge
aaa
jge
out
dec
xchg
test
jbe
and
mov
das
cmpsl
mov
xchg
imul
inc
das
sti
and
test
and
ljmp
mov
mov
popa
lods
and
sub
roll
xchg
imul
push
push
incl
jge
ss
mov
add
lcall
push
data16
incl
pusha
push
lods
outsb
push
sahf
enter
orl
cmp
lcall
orb
push
add
pop
xor
pop
popf
popa
xchg
je
adc
addr16
add
loop
cld
pushl
cld
add
ljmp
jae
ret
mov
sub
jb
call
sbb
pop
cmpsb
mov
xchg
sarb
xor
pop
ds
in
push
adc
inc
lock
cmc
aaa
fadds
mov
subl
push
xchg
decl
mov
popa
in
test
xchg
sbb
dec
sub
cmp
xor
adc
movsl
cmp
sub
fs
sarb
das
mov
jecxz
loope
in
pusha
inc
sbb
jmp
xor
call
mov
mov
pop
jne
movsb
lahf
insb
test
mov
inc
pushf
out
mov
cld
cmp
popf
das
in
xor
mov
xor
arpl
bound
ja
sub
add
loopne
inc
filds
sub
sub
call
inc
or
mov
cmp
xchg
out
cltd
pop
jmp
mov
adc
inc
lahf
xchg
stos
aas
dec
push
clc
call
push
cmp
xchg
dec
pushf
mov
in
jmp
mov
loopne
imul
dec
cli
jg
aad
cmp
rcr
pushf
cmp
pop
xchg
xchg
test
mov
imul
lcall
das
mov
pop
out
into
pusha
adc
jmp
mov
add
dec
decl
aas
mov
pop
adc
mov
push
rcl
cmc
or
cmp
adc
stos
inc
push
les
mov
cld
sti
faddl
sbb
cmp
mov
pop
lods
jle
mov
and
aas
fs
mov
fdivrl
sbb
enter
add
cmp
or
sub
cmp
fs
ret
sbb
mov
mov
inc
das
inc
lret
jbe
sbbb
sbb
pop
add
jg
clc
ficomps
xor
rorb
lret
inc
sbb
mov
in
add
and
lods
arpl
lcall
mov
fisubrl
sbb
sbb
lret
and
stos
jge,pt
mov
popa
xchg
and
jmp
lcall
adc
cmpsl
ss
shl
mov
out
cli
rcr
inc
std
lcall
jl
stos
jge
pop
pushf
inc
sbbl
mov
mov
and
push
aaa
jo
pop
jle
pushf
fbld
pushl
mov
adc
mov
dec
test
sahf
movsb
ljmp
push
stos
daa
call
daa
je
int
fistpll
lea
add
stos
add
ret
movsb
and
sub
ljmp
mov
mov
mov
ss
fcmovbe
inc
imull
mov
jg
mov
daa
mov
pop
test
sbb
mov
out
ret
mov
inc
push
sub
pop
int
stos
adc
in
push
in
dec
or
dec
aaa
jae
js
inc
ds
fisubl
shl
and
mov
stc
xchg
sub
jecxz
das
cli
lcall
push
push
dec
add
cmpsb
ret
and
out
adc
dec
fdivr
jg
xor
or
inc
cmc
sbb
mov
pop
aam
clc
cmp
jmp
pop
fcompl
sbb
fdiv
in
fmuls
jmp
aam
fisttpl
int3
arpl
mov
and
stos
mov
jns
loop
sbb
mov
xchg
mov
test
add
ret
xor
xchg
push
into
add
push
std
jmp
in
push
adc
push
push
adc
lcall
sub
int3
out
in
pop
outsb
shll
xchg
jo
push
test
out
je
movsl
or
cmc
dec
in
sahf
xor
test
jo
sbbb
ss
dec
jo
movsl
js
mov
lret
xchg
mov
aas
imul
jg
imul
lds
pop
mov
mov
cmpb
fwait
hlt
mov
cmc
std
cmpsl
jg
add
bound
testb
xchg
pop
daa
mov
pop
xchg
mov
mov
jmp
lods
jmp
or
sbb
int
xchg
std
jg
std
sbb
stos
mov
cmp
dec
add
mov
in
ror
fldt
aam
sub
pop
inc
sub
dec
out
sub
push
cld
sub
xchg
xchg
movsl
xchg
aas
cld
repz
mov
xchg
xchg
xchg
add
jno
mov
sar
sub
xchg
mov
arpl
jno
int3
push
or
xlat
sti
jb
lret
push
call
jno
scas
inc
xor
or
push
sbb
pop
out
and
clc
pop
push
in
lods
jne
mov
sbb
cmp
paddb
inc
xchg
xor
insb
nop
or
adc
mov
mov
test
xor
stc
push
push
xlat
aam
mov
sub
test
aaa
test
add
in
ret
stos
movsl
add
incl
in
out
or
fildl
and
scas
cmp
push
dec
or
ds
jne
decl
inc
cmp
je
insb
addr16
jge
push
mov
decl
in
cli
stc
fdivl
in
lods
push
cwtl
dec
push
and
outsb
xchg
sub
mov
cmpsb
inc
jg
popf
outsb
xchg
int3
iret
lahf
out
xchg
sar
pop
in
mov
rcrl
mov
out
fldl
mov
into
stc
mov
jg
xorb
dec
sar
lcall
push
inc
inc
std
jno
push
ja
aam
dec
out
dec
fdivrs
enter
push
outsl
cli
in
cwtl
and
call
mov
stos
add
scas
cs
cli
cmp
and
ret
push
cs
mov
cmp
decl
test
cwtl
pusha
movsl
xor
enter
xlat
call
loopne
dec
ficoms
hlt
mov
cmp
adc
push
stc
mov
and
sbb
data16
ss
or
xor
xor
push
push
sbb
int
push
sub
insl
adcb
aaa
mov
test
test
rcl
jge
mov
ljmp
mov
mov
and
gs
xchg
scas
xor
rolb
enter
pop
lock
fistpll
add
mov
arpl
js
setno
stos
outsl
cli
call
push
xchg
lods
mov
ljmp
fldl
faddl
dec
addr16
incl
enter
xorb
xorb
pop
inc
push
inc
shrb
or
pushl
dec
mov
sbb
push
mov
dec
ljmp
outsb
inc
xor
je
jbe
pop
mov
mov
lcall
loope
adc
das
stos
popl
and
inc
jmp
inc
mov
pop
inc
icebp
inc
cmpsb
aad
xchg
decl
aam
cmp
adc
push
imul
int3
push
cli
scas
add
fdivrl
loopew
mov
fistl
sbb
fidivs
es
adc
adc
or
out
ljmp
loop
mov
pop
add
inc
cld
nop
aaa
and
in
lahf
sbb
pop
cmp
popf
dec
imul
pop
pop
hlt
sub
mov
pop
sub
outsl
push
push
adc
out
test
jb
push
push
inc
xchg
repnz
xor
fisubrs
aad
push
divb
decl
rorb
pop
mov
dec
xchg
stos
xchg
dec
sub
aam
daa
repz
pushf
xchg
loopne
das
cli
pushl
sbb
push
jnp
xchg
in
dec
jbe
es
push
iret
push
in
repnz
incl
jo
loop
jmp
pop
in
sbb
mov
mov
add
jno
sub
push
and
decl
ljmp
xchg
mov
pop
inc
icebp
test
popf
out
outsl
mov
enter
jo
inc
adc
ret
jl
pop
in
xchg
aam
cmp
mul
sbb
dec
jp
jmp
jo
jae
insb
pop
xchg
cmc
ror
rol
testl
aam
pusha
jo
cltd
es
jno
inc
pushl
adc
cltd
xchg
fiadds
test
imul
les
loop
xor
cmp
or
icebp
jg
jne
aam
out
andl
push
push
leave
fisubl
and
out
mov
jo
and
push
test
call
xor
jno
ljmp
inc
je
lcall
int
int
add
lcall
int
xor
sbb
cmovs
cli
scas
andb
jl
jle
scas
sarl
test
movsb
mov
jl
sub
sbb
cmp
out
cmp
lret
clc
cmp
rol
push
inc
mov
jno
add
dec
inc
loopne
mov
imul
test
decl
jne
test
loope
pusha
and
jnp
bound
mov
cli
loope
add
je
pop
jmp
lahf
outsl
nop
test
push
repnz
jae
sti
notl
ljmp
mov
push
nop
add
shrl
loope
cmp
xlat
cmpsl
inc
or
mov
xor
call
push
sub
sub
jl
xorl
popf
dec
rcll
rcrb
adc
mov
std
jmp
xchg
inc
push
xor
ret
xchg
mov
es
adcl
xchg
decl
das
xlat
iret
inc
clc
push
push
cmpsl
in
fwait
jns
adc
xchg
sub
leave
cli
push
jg
loope
popf
mov
movsb
mov
push
fcom
jg
fstpl
xor
sarl
mov
ss
ds
je
jmp
lret
dec
pop
sbb
xlat
and
pop
adc
and
mov
push
std
pmaxub
call
aaa
mov
sub
inc
test
int3
imul
dec
jp
test
xorl
call
or
inc
cmp
pop
shll
les
lods
les
mov
shll
jmp
push
jo
pushl
xchg
jnp
loope
outsb
das
subl
xchg
cmp
decl
inc
hlt
sbb
out
mov
bound
fmuls
xor
data16
xor
push
fwait
cli
decl
fnsave
ss
mov
jmp
cs
fbstp
push
xchg
out
sub
sbb
fs
jne
and
pushl
mov
imul
push
lock
push
push
leave
pushf
test
xor
ljmp
in
dec
lods
mov
xchg
dec
movsl
pop
jmp
out
fwait
ss
or
aas
sub
xchg
or
sub
mov
xchg
and
or
icebp
pop
jg
pushl
mov
loope
or
popl
je
enter
xchg
pop
fcomip
dec
fs
ret
cs
pop
mov
jo
jae
push
fsubl
jnp
cli
sub
ljmp
insb
sarb
mov
push
out
int3
mov
sbb
lods
test
popf
incl
outsl
cmp
test
mov
dec
out
jl
and
inc
sar
leave
push
push
pop
hlt
hlt
adc
cld
xchg
push
mov
pop
movsb
aaa
dec
cli
xor
fldenv
dec
mov
imul
adc
jmp
mov
call
std
scas
push
lock
outsl
pop
repz
and
or
lods
xor
fisttpl
push
mov
aam
aam
imul
lret
arpl
cmpsl
jns
push
lcall
sub
aaa
push
insl
mov
sbb
nop
pusha
adc
cld
adc
push
mov
jmp
test
subb
adc
inc
ja
roll
test
ljmp
mov
inc
adc
rcl
sub
stos
fwait
gs
les
das
add
and
int3
mov
lcall
mov
pushf
push
addr16
out
inc
or
or
lcall
lea
jecxz
popf
sbb
pop
sbb
addr16
mov
xor
call
loopne
jbe
dec
push
les
shrb
stos
aad
sbb
pushl
mov
dec
adc
or
jb
aad
xchg
and
pop
add
push
rcll
adc
sti
xchg
rcl
mov
ss
or
mov
loopne
les
repnz
cmp
jne
sbb
sahf
ja
or
stos
cld
sub
pop
push
ffree
pop
pop
dec
mov
call
call
out
mov
inc
sbb
aad
stos
imulb
add
clc
or
pop
ljmp
iret
cmp
int
decl
mulb
push
sahf
std
rcl
dec
add
mov
inc
xchg
sub
in
pop
adc
je
outsl
sub
push
inc
xor
imul
push
push
inc
cli
call
out
mov
mov
cmp
pop
add
push
ljmp
movsl
fsts
mov
jne
mov
xchg
or
or
and
fadds
lcall
dec
mov
or
pop
mov
push
jb
pop
stos
aad
pop
add
out
leave
into
lahf
cld
sahf
xchg
mov
xor
incl
dec
inc
scas
jl
mov
jmp
stos
or
imul
ljmp
inc
incl
push
test
roll
mov
divl
stos
cmpsb
lea
push
inc
dec
into
mov
inc
xor
cli
jnp
adc
or
sbb
adc
int
in
rcr
je
pop
test
jmp
jnp
sub
loop
ja
adc
adc
mov
mov
outsl
aaa
sbbl
ljmp
cmp
cmp
cmp
mov
punpckhdq
mov
incl
sbb
stc
out
pop
push
and
inc
cmp
lock
out
mov
inc
cli
jg
lcall
shl
push
mov
mov
cmp
iret
lods
jnp
dec
mov
arpl
nop
enter
inc
mov
sbb
rcr
mov
cmp
fiaddl
jbe
sbb
mov
dec
xorb
call
in
sbb
loop
sbb
jae
mov
add
aaa
int3
or
int3
mov
fldenv
aad
das
cli
decl
pop
stos
cmp
mov
inc
mov
push
js
mov
gs
push
mov
xor
push
call
out
add
rcrl
dec
loop
push
ljmp
mov
rorl
aad
aad
xchg
cld
out
sbb
mov
push
jmp
sbb
mov
and
scas
jle
add
addr16
repz
call
fld
frstor
call
and
or
jnp
ret
test
not
gs
sub
das
in
and
cmpsb
loop
cmp
decl
sarb
scas
and
mov
daa
int
add
rcrl
push
lret
incl
es
dec
ss
cmp
jle
std
outsl
adc
sub
sbb
and
test
inc
inc
pushl
std
fsubrs
inc
add
inc
subl
scas
pop
pop
pop
rolb
popa
mov
adc
pop
loope
sub
cmp
pop
sub
in
pop
in
mov
iret
jg
lcall
in
mov
hlt
add
leave
mul
out
call
add
int3
js
xchg
mov
mov
sub
push
test
and
mov
lcall
xchg
out
inc
clc
sti
pop
icebp
sbb
cmp
mov
pop
mov
push
inc
scas
mov
jg
call
mov
mov
inc
xchg
loope
add
test
jge
inc
adc
dec
leave
mov
call
ja
das
lods
loopne
cltd
xchg
sbb
mov
mov
jmp
jbe
out
mov
bound
call
hlt
jmp
jns
enter
sbb
xchg
subb
shlb
or
adc
aam
dec
xchg
push
xor
push
push
xchg
push
loope
in
lcall
xchg
jmp
subb
gs
jg
jmp
fs
imul
jae
call
cmpsl
testl
add
mov
or
rclb
mov
mov
enter
lods
lcall
jmp
in
out
sbbb
cltd
inc
xchg
subb
mov
mov
pushl
shrb
fidivs
xor
into
outsl
cmp
lahf
dec
incb
jge
out
out
enter
pushl
aas
dec
add
out
mov
sbb
pusha
sti
mov
scas
push
out
loopne
movsb
inc
cmp
fucom
mov
cwtl
add
faddp
movsb
cmp
call
lods
dec
inc
pop
lret
xchg
or
fmull
mov
jp
jns
cmp
call
mov
jmp
push
cmpsl
daa
or
mov
jns
lcall
push
fwait
push
push
mov
inc
addr16
pop
es
aaa
ljmp
push
mov
push
dec
cmc
jno
mov
out
xor
mov
shl
data16
test
xchg
jno
jmp
mov
xchg
test
into
data16
ja
mov
cmp
std
jmp
mov
adc
sub
into
das
popa
or
negb
xor
jg
inc
fidivl
mov
pop
push
in
mov
cli
ja
dec
sub
mov
loopne
js
out
and
xor
push
imul
ljmp
repnz
jge
call
into
pushf
iret
clc
pusha
cltd
mov
out
mov
sti
loop
mov
cli
dec
and
fisttps
notb
es
call
scas
repz
or
pushf
sbb
jnp
insb
test
dec
jbe
and
sbb
pusha
jmp
sti
leave
adc
push
insl
xchg
or
lock
jnp
cmp
cs
xlat
fwait
xchg
into
xlat
or
rcl
mov
enter
ljmp
stos
xchg
add
std
mov
xchg
dec
insl
mov
addr16
mov
cmp
pop
xlat
addr16
std
jmp
sub
fdivr
pop
mov
int3
push
sbb
jo
incl
jbe
leave
mov
insb
push
pop
ljmp
jmp
cmp
and
jae
push
lock
cmp
test
mov
ljmp
mov
subl
inc
jg
pop
xor
dec
xchg
fisubrs
pop
mov
sar
imull
dec
jne
cld
mov
xor
sbb
into
repz
clc
jg
nop
fisubl
lahf
mov
push
xchg
or
xchg
inc
pop
pop
outsl
ljmp
dec
and
sub
dec
mov
dec
in
test
pushl
inc
repz
sbb
mov
and
inc
imul
out
adc
andb
jne
or
jnp
pop
lock
jnp
mov
outsl
and
jg
int3
sub
cmp
out
and
sbb
mov
mov
decl
mov
and
dec
nop
bswap
mov
jns
jb
add
sbb
add
cmp
frstor
push
aaa
jg
push
js
les
scas
push
jg
in
dec
push
jmp
shlb
mov
push
enter
mov
pop
data16
in
repnz
xchg
call
push
cwtl
jp
decb
xor
inc
mov
sarl
cmp
into
imul
les
decl
imul
insl
out
stos
dec
sti
movsl
outsb
dec
stc
xchg
xchg
xchg
out
gs
cmpsl
dec
mov
pop
sub
xchg
mov
fcmovbe
jp
mov
clc
loop
sahf
cmpsb
cwtl
adc
mov
js
scas
in
out
lods
out
clc
incl
pop
je
push
fs
inc
in
movl
or
or
call
cld
pusha
outsl
mov
fsubrl
and
scas
pop
fdivl
and
loopne
cs
jmp
xor
and
sbb
std
pushf
add
mov
pop
cld
negb
decl
or
mov
call
or
sti
int
aad
dec
adc
lret
sbb
sbb
cmpsl
mov
xor
sub
out
hlt
or
pop
cmc
ljmp
insl
fldlg2
jecxz
or
mov
mov
es
adc
pop
sbb
mov
pop
xor
mov
jmp
nop
jo
into
sub
xor
je
cmpsl
roll
js
or
lcall
out
xchg
add
push
stos
test
jns
push
mov
rcrb
cmpsl
sar
jmp
mov
push
push
in
mov
push
mov
mov
test
and
push
fwait
push
and
data16
test
pop
mov
mov
xorl
pop
pusha
jns
add
mov
sub
clc
or
pop
mov
push
and
and
cwtl
shlb
shlb
das
xchg
clc
lret
mov
je
pop
cltd
les
in
and
and
in
aaa
enter
or
cmpsb
dec
shrd
popa
in
loopne
incl
lea
in
bswap
mov
into
jmp
jp
jmp
repnz
in
push
fincstp
pusha
ljmp
lret
cli
push
cld
jnp
mov
push
inc
es
nop
jg
add
dec
loopne
add
or
or
jmp
ja
insb
daa
aam
cmp
add
pop
lock
out
jb
adc
add
decb
inc
sbb
add
popf
or
push
test
fistl
mov
mov
inc
addb
mov
js
push
loop
fs
nop
das
push
pusha
push
add
pop
add
jg
mov
cs
add
les
fiadds
and
pop
jb,pn
mulb
inc
mull
lret
cs
insb
pop
lret
fs
dec
or
cmp
jae
arpl
xlat
mov
mov
out
add
jb
pop
sbb
dec
addb
repnz
push
inc
jge
inc
inc
cmpsl
cmp
sub
sub
add
jmp
add
clc
push
dec
sub
lea
clc
pop
pop
push
push
xchg
lcall
mov
dec
jne
lods
cmpsb
test
cs
mov
aam
mov
add
sbb
rol
js
push
sbb
jbe
je
or
or
pop
dec
xor
iret
mov
xorb
fucomi
gs
sbb
dec
add
add
add
or
js
xor
popf
and
pop
or
call
pushf
xor
dec
scas
pop
add
or
sbb
in
scas
pop
loop
dec
test
mov
std
adc
sub
jl
les
fmull
testb
mov
push
push
pop
pop
push
pop
adc
ret
and
jle
mov
jmp
add
jnp
xchg
push
mov
sbb
push
movzbl
or
dec
cmp
nop
fadds
cmp
call
mov
push
outsl
adc
add
jbe
mov
pop
push
pop
gs
adc
pop
addr16
xchg
dec
inc
nop
mov
jmp
pop
aam
sub
and
pop
mov
adc
xor
movsl
mov
cmp
addb
fistl
xor
add
outsb
aaa
and
outsb
mov
push
test
clc
pushf
and
cmpsl
pop
mov
aad
or
out
insl
xor
push
inc
imul
add
adc
jbe
add
push
pop
push
pop
mov
insb
sub
outsb
push
rolb
adc
in
inc
dec
sub
and
dec
jne
jbe
adc
adc
inc
popf
xchg
inc
adc
mov
cmpsb
sub
rcl
push
addr16
cmp
pusha
pusha
push
movsl
mov
hlt
ret
mov
rcll
cmpb
cmpsb
imul
or
pop
das
lcall
add
push
or
stc
dec
jnp
in
push
leave
push
sbb
pop
mov
into
int3
pop
pop
add
add
sbb
push
push
ss
add
popa
jg
ret
xchg
sbb
test
je
sahf
xchg
in
add
dec
pop
push
ret
jmp
rorb
dec
out
nop
sbb
and
loop
pop
cltd
jl
mov
lea
mov
xchg
fs
and
add
add
push
jns
lret
addb
mov
mov
push
aam
je
inc
test
cld
sbb
movb
dec
adc
add
push
mov
adc
aam
lea
sahf
out
or
lds
adc
xlat
mov
push
mov
xor
add
mov
pop
andb
add
movsl
and
je
fimull
dec
pop
in
push
in
add
and
in
and
or
or
adc
add
shrb
cmpsl
repnz
gs
cmp
xlat
hlt
or
cmp
dec
ret
mov
movsl
mulb
cmpsl
sbb
cld
add
lods
cmpsl
sbb
in
push
data16
es
push
push
and
xchg
popf
jecxz
js
xchg
push
dec
and
add
nop
inc
ljmp
imul
repnz
je
call
jmp
push
insb
fcoml
sub
jne
mov
lahf
push
mov
mov
subb
sub
mov
cmp
nop
adc
pop
fadds
cmp
bound
jl
outsb
dec
addb
fadd
mov
stc
je
push
cmp
push
lock
add
mov
je
mov
add
call
sbb
fstps
neg
and
pop
xchg
sbb
test
push
push
dec
push
ja
mov
rolb
mov
inc
outsl
call
add
push
jnp
int
xor
mov
lock
loope
xor
jle
pusha
pop
call
add
in
dec
mov
call
add
popa
cmp
and
pop
pop
xchg
and
cmp
sti
scas
add
or
xorl
rcll
pop
push
enter
xchg
sbb
cmp
add
test
or
mov
lcall
cmp
std
cmpsl
mov
xchg
or
call
jne
jb
arpl
fsts
add
aad
xor
inc
ret
lock
nop
cmc
imul
hlt
jmp
sub
pushf
adc
add
add
mov
mov
mov
call
enter
adc
call
shrb
aad
mov
lods
or
lock
ja
pop
mov
xchg
xchg
jge
mov
ja
mov
jl
dec
call
addr16
dec
push
inc
test
fcompl
or
or
stos
cmpsb
add
add
mov
roll
loopne
sbb
sbb
mov
out
mov
push
or
in
shl
or
hlt
ficoml
sub
cmpsb
rolb
xor
movsl
pop
jp
clc
sbb
push
add
orb
xchg
aad
cmp
rorb
add
ret
sub
or
icebp
or
push
cld
push
pop
or
mov
movsb
stos
sub
pop
testl
movsb
mov
cmp
lods
mov
xchg
sbb
adc
inc
push
rorb
cmp
in
sub
lds
and
push
pop
add
bound
pop
xchg
lea
popa
mov
je
sub
sub
inc
adc
or
lea
hlt
push
add
xchg
cld
push
sub
xchg
push
push
xchg
adc
adc
pop
loop
jo
dec
cwtl
xor
lret
jne
loopne
inc
bound
ss
das
xchg
movsl
jno
and
add
ds
jae
sbb
out
pusha
testl
xor
ds
xchg
push
sub
push
push
sbb
sbb
ret
push
mov
loop
fsubs
or
arpl
aam
mov
dec
shlb
into
push
push
push
dec
fsub
or
sbb
mov
inc
pop
pop
pop
imul
int3
call
inc
add
mov
mov
cmp
adc
sbb
cmp
cmp
sar
adcl
stc
and
fisttps
push
jb
call
sahf
les
bound
rolb
addr16
xchg
push
scas
fcomps
in
inc
add
dec
push
adc
inc
jbe
xor
add
dec
xchg
xlat
pop
dec
fcomp
mov
push
lock
push
add
ficomps
shlb
add
xchg
or
cmp
xchg
add
mov
ljmp
sub
pop
sahf
lea
xlat
call
sub
jae
xor
fdivr
mov
rcl
enter
movsb
push
adc
xor
add
stos
push
pop
in
pop
mov
push
movsl
in
or
xchg
xchg
aas
xor
call
or
mov
int3
fldl
fucomp
or
mov
adc
lret
stos
mov
and
cmp
loope
push
adc
pop
mov
pop
fidivrs
mov
xchg
movsl
dec
repz
adc
repnz
roll
arpl
loopne
movsb
push
or
btc
add
cmp
lods
stos
fstpt
push
ss
rcll
das
mov
and
adc
in
inc
mov
adc
add
shl
pop
cmp
mov
cmpsl
in
push
inc
pop
mov
push
ret
pop
push
pop
lahf
fstps
into
enter
shlb
or
or
cwtl
mov
inc
mov
push
push
das
xor
lock
push
jb
test
push
dec
je
ljmp
ljmp
mov
stos
je
popa
pop
dec
add
jl
xchg
jne
and
sbb
in
pop
loopne
adc
adc
sbb
call
and
push
adc
or
cmc
ficoml
xchg
ret
sub
adc
pop
cwtl
adc
xchg
pushf
data16
in
lea
imul
cmpsl
imul
divb
lret
jo
xor
push
loopne
pop
mov
std
imul
sbb
mov
in
repz
das
fisubs
sub
adc
je
enter
push
adc
xchg
mov
and
or
insb
or
and
push
xchg
shlb
fwait
cli
mov
sahf
loopne
adcl
jae
and
enter
cmp
jle
push
mov
adc
adc
xor
mov
jno
loopne
dec
int
xchg
xchg
in
in
push
add
adc
sub
jmp
daa
xchg
or
inc
sti
xor
dec
sub
push
gs
xor
daa
push
pop
mov
pop
or
dec
in
pop
addl
in
in
sbb
pushf
lret
add
jno
pop
xor
ret
ret
jbe
insb
cmp
adc
xor
sub
mov
into
dec
push
lods
xor
fsub
adc
push
sbb
mov
mov
jo
lahf
cmp
inc
aas
stos
repnz
xor
fistps
je
inc
mov
mov
mov
cmp
mov
jne
je
in
in
aam
fsub
push
xchg
mov
mov
sbb
lcall
mov
push
pushf
or
cmp
imul
es
cmpsl
in
inc
fildl
test
fistpll
push
fists
push
pop
test
adc
mov
in
sbb
jne
lods
inc
out
inc
xor
std
jo
and
fidivrs
xor
les
mov
test
movsl
xor
out
mov
xor
js
int3
adc
cmpsb
adc
jmp
sbb
push
mov
cmpsb
fcomp
inc
test
lods
inc
popf
inc
enter
or
adc
mov
jbe
les
push
cmp
lcall
aad
mov
outsb
dec
xlat
push
push
mov
jecxz
repz
out
je
sub
or
lea
and
push
call
add
loop
or
cmp
and
jo
adc
add
aas
sbb
add
jne
clc
enter
lods
push
push
iret
loop
test
cld
out
mov
arpl
mov
adc
in
or
or
scas
sahf
in
or
cmp
adcb
ret
sbb
scas
jns
dec
or
push
fcomps
out
icebp
or
gs
sahf
data16
jmp
push
add
add
out
enter
mov
mov
cld
mov
add
inc
xorl
into
stos
add
dec
mov
ss
inc
and
pop
cmp
lods
movsl
popa
inc
dec
pop
and
aam
or
je
or
or
je
mov
mov
cmp
adc
cmpsb
ret
or
loopne
outsb
push
and
orb
inc
dec
or
ret
aaa
xchg
std
push
jmp
push
and
ss
jmp
pop
pop
loopne
mov
adc
add
lods
or
sbb
jae
jbe
outsb
push
cld
lcall
sahf
scas
cmc
xchg
rcrb
cltd
insb
cld
adc
inc
dec
or
nop
add
or
lods
cmp
mov
lods
pop
push
cltd
add
mov
mov
xor
lods
enter
jbe
mov
fdivs
xor
arpl
push
pop
sbb
jnp
xor
add
mov
test
repz
insb
mov
push
push
loopne
inc
or
mov
mov
sti
push
xchg
push
inc
rorb
hlt
repnz
ja
pop
add
adc
aad
cmpsb
aam
inc
inc
xor
sub
or
or
shr
decl
jl
or
jnp
in
sbb
call
mov
xor
xchg
nop
cld
cmp
sbb
shrl
or
adcl
xchg
imul
call
sub
fstps
jne
enter
mov
dec
repnz
mov
add
inc
adc
test
sub
mov
jo
cld
inc
dec
or
fdivl
pop
dec
adc
std
adc
push
sub
inc
fnstsw
call
mov
push
pop
fisttpll
daa
cmp
in
add
sarb
sahf
lret
dec
add
mov
jne
inc
enter
mov
and
add
jle
push
mov
jnp
out
push
sarb
adc
mov
test
push
inc
sub
lock
pop
out
or
int
mov
sub
or
sub
xchg
mov
jmp
cmpsl
in
jp
les
xor
lock
ss
jae
loopne
fildl
fs
in
or
sbb
dec
inc
sbb
lret
fcoml
loopne
pop
add
adc
xchg
adc
push
out
or
cmp
les
push
adc
cmp
xchg
shll
cmpsb
dec
sbb
js
insb
sub
inc
pop
pushf
imul
push
push
call
or
ds
sub
add
inc
jbe
jmp
xor
push
les
sbb
sub
rcll
int3
jbe
std
movsb
clc
push
or
enter
popa
push
fsts
outsl
jne
xor
ds
std
jmp
and
xor
fld1
jb
add
in
pop
cmp
or
lock
test
or
mov
and
shlb
into
sarb
dec
lret
push
pusha
or
inc
mov
ret
dec
inc
nop
cmp
fs
pop
sub
frstor
or
inc
rorb
ss
lods
push
in
test
addb
inc
dec
adc
inc
dec
pop
icebp
data16
cmp
aam
jl
pop
ret
cmpsl
sbb
shlb
jl
pop
jne
mov
jmp
or
shll
xor
or
or
or
pop
imul
dec
jae
sbb
aas
dec
or
shrl
push
push
mov
push
mov
loop
and
xchg
mov
test
or
fidivrl
xchg
ljmp
sbb
push
call
shll
mov
dec
icebp
push
push
mov
test
loopne
cmp
imul
mov
mov
push
mov
mov
mov
push
push
mov
lea
sub
xor
insb
inc
call
jg
mov
push
fucomip
cmp
je
cmp
jbe
mov
movsb
xchg
jne
jae
ds
mov
mov
nop
clc
push
and
mov
pop
jbe
sbb
dec
add
daa
loopne
loope
inc
push
in
int
jo
xchg
or
pushf
sbb
lock
adc
push
lea
shlb
jae
pop
dec
cmp
scas
pushf
loop
test
sbb
cmp
shr
je
mov
scas
push
into
or
xchg
cmp
dec
ret
test
call
mov
and
mov
xchg
mov
xor
test
loopne
jbe
jbe
nop
negb
jmp
push
mov
push
mov
mov
sbb
cmpsb
mov
lods
add
in
mov
into
jmp
lds
lods
sbb
inc
adc
pop
push
adc
add
and
cmpsb
and
gs
sti
push
je
push
add
lea
dec
jle
rdmsr
sbbb
push
or
sub
stc
xchg
mov
sub
pop
push
inc
icebp
lds
lea
mov
lock
xorb
stos
inc
mov
jne
data16
push
jnp
push
push
cmpsb
aam
in
jno
adc
cmp
cwtl
test
jle
popa
fsubrl
call
xchg
adc
fcomps
push
push
movl
fdivs
fwait
jae
js
inc
jmp
loopne
mov
mov
imul
add
or
push
dec
mov
adc
add
and
mov
mov
mov
or
xchg
popf
imul
push
mulb
mov
inc
cmp
lock
cmp
scas
filds
and
sub
jmp
je
and
call
add
sti
cmc
xor
dec
push
hlt
ret
mov
mov
jns
mov
ss
clc
and
out
add
sbb
push
cmp
adcl
jbe
add
jmp
sub
mov
ret
pop
adc
movsb
xchg
addb
add
or
add
dec
push
dec
mov
loop
loope
xchg
call
jbe
mov
or
iret
call
push
fdivrl
lods
out
push
push
imul
pop
addr16
mov
mov
sbb
sbb
sbb
jno
sbb
jne
into
cmp
ss
addr16
ss
cmp
scas
mov
dec
jne
push
pop
dec
and
or
js
xchg
push
int3
jecxz
decb
or
jns
outsl
add
push
cmp
jmp
nop
xor
push
sahf
jae
mov
addb
pop
jecxz
icebp
call
je
and
inc
call
or
and
push
or
dec
setb
push
cld
inc
cmpsl
sub
cmp
jmp
add
movsb
sbb
mov
scas
fidivrs
inc
lcall
dec
jl
js
scas
icebp
dec
mov
sbb
jne
push
adcb
add
clc
mov
fxtract
jmp
dec
out
xchg
pop
xorb
movsb
inc
or
add
mov
aam
sub
pusha
movl
jo
mov
or
fmull
lret
xlat
jnp
xchg
or
xchg
jne
add
cmp
fdivrp
push
call
in
movsb
jmp
js
dec
in
lods
sbb
out
stos
jae
test
or
dec
push
call
cmc
sbbl
cmp
addr16
jbe
icebp
mov
or
or
and
loopne
sub
je
push
stc
sub
add
lret
xchg
fcompl
xchg
add
iret
cmp
inc
rolb
sbb
add
jo
fdivl
push
or
mov
cwtl
or
clc
jbe
popf
pushf
or
cmp
test
mov
rolb
inc
loopne
hlt
xchg
inc
imul
sbb
mov
inc
mov
aad
adc
lock
pusha
ja
cmp
jg
push
dec
lea
scas
je
or
call
orb
xor
aaa
sbb
mov
and
mov
push
and
clc
dec
insb
adc
mov
cmp
push
adc
scas
fadds
dec
jne
movzbl
add
je
movsl
stos
push
aam
nop
fmull
cmpl
add
inc
mov
out
sbb
stos
incl
nop
sub
sbb
sub
sub
add
jmp
cmp
jo
dec
sarb
push
cli
sub
fsubrl
test
xor
or
and
das
gs
lea
inc
mov
xchg
xor
inc
pop
rorb
mov
or
push
fiadds
shlb
out
add
popa
or
call
pop
or
lods
inc
mov
mov
mov
cmpsb
sub
mov
push
push
dec
pop
and
call
mov
rcrb
dec
pop
movb
dec
dec
dec
pop
testb
push
jecxz
mov
cmp
jge
pop
mov
push
mov
jne
rcl
dec
mov
xchg
ds
inc
dec
pop
mov
aas
mov
inc
inc
push
arpl
xor
test
adc
pop
inc
adc
sub
inc
cli
and
push
push
pop
pop
push
arpl
sub
push
inc
arpl
inc
push
or
and
dec
arpl
adc
arpl
xchg
xor
arpl
xor
arpl
mov
aam
adc
xor
lds
ljmp
pop
jecxz
dec
arpl
pop
ljmp
addl
dec
arpl
daa
dec
or
add
cmp
adc
fstpt
inc
rorb
push
lods
push
mov
xchg
mov
nop
or
pop
dec
pop
sbb
aas
push
sahf
icebp
xchg
cli
or
or
jp
jle
ds
inc
mov
callw
cmpsl
jecxz
into
pop
call
call
out
pop
movsl
out
mov
dec
aam
inc
adc
aas
fwait
jns
cmp
call
and
pop
dec
adc
int3
pop
fs
add
mov
jo
out
pop
push
loopne
cmp
or
test
add
fdiv
fstpl
call
enter
scas
xchg
repz
pop
jmp
jle
rorb
jb
cmp
jmp
sbb
ret
jne
add
mov
cmpsl
adc
addr16
jne
out
xor
loopne
pop
mov
fmull
push
sub
shlb
fimull
jmp
sub
inc
jmp
dec
sbb
sar
sbb
or
sub
add
xchg
sbb
sub
sbb
xor
cmp
xchg
sahf
xchg
cwtl
lock
out
jo
mov
push
add
lss
dec
jmp
cmp
call
and
and
mov
incb
cmp
push
push
es
cmpsb
add
rcr
xor
aad
push
cmpsl
scas
fs
into
push
sbb
ja
shll
inc
fcomps
push
xchg
shlb
push
es
adc
mov
icebp
inc
mov
or
outsb
iret
dec
cld
adcb
in
push
loope
dec
ficomps
cltd
push
loope
xchg
mov
sub
xchg
int3
xchg
js
or
push
sbb
js
rorb
test
mov
push
mov
push
dec
movsl
imul
xor
jp
inc
js
adc
adc
shr
nop
movsb
mov
cmp
xchg
pop
aaa
adc
sub
mov
cmp
movsl
adc
mov
pop
pop
and
ja
dec
sub
ja
test
ja
inc
push
dec
push
ja
or
leave
mov
shlb
leave
sbb
loope
ja
nop
lods
fwait
rcrl
ja
fisttpll
mov
push
les
pop
dec
adc
gs
rcll
ja
push
or
nop
lods
ja
lods
mov
sub
sbb
cmpsl
nop
lods
in
ja
pop
dec
adc
gs
lods
xchg
lods
repz
jmp
loopne
shrb
or
push
inc
dec
mov
push
testl
lea
sbb
lods
repz
les
add
lret
lea
movsl
test
xchg
xor
sub
sahf
out
and
adc
add
jo
idivl
roll
je
test
gs
push
adc
mov
imull
test
jmp
testl
pop
nop
add
and
dec
jne
push
testl
push
insl
adc
iret
repz
mov
into
repz
jge
or
testl
insb
popf
cmpsl
push
adc
notl
or
pop
les
sub
xchg
inc
mov
pop
lahf
xchg
js
add
mov
adc
mov
loop
or
insb
and
adc
dec
pushf
push
add
jmp
cmp
je
mov
add
sub
jge
mov
lahf
ret
lea
adc
fildl
add
pop
add
sahf
add
in
add
and
dec
sahf
add
incl
lret
add
jno
je
inc
scas
in
xchg
add
mov
repnz
test
push
push
enter
gs
pop
ja
cs
inc
or
or
or
or
push
repnz
pop
cld
add
or
pop
and
and
push
or
push
or
or
or
jb
jb
or
xchg
cmp
push
push
push
mov
rdmsr
adc
push
movsl
adc
pop
adc
adc
cmp
mov
int
push
adc
jns
stos
add
ror
mov
adc
leave
adc
cmp
push
inc
pop
pop
jns
out
and
sbb
xchg
sbb
jns
sub
mov
jns
scas
fcompl
sbb
nop
adcl
add
rep
sub
je
push
sbb
in
lds
ja
sbb
cmpsb
pop
push
push
inc
incl
enter
pop
jne
add
add
sub
cmp
and
cli
sbb
shll
inc
mov
xchg
jmp
cwtl
xchg
push
in
xchg
mov
repz
in
imul
rcl
ret
test
xor
xor
out
mov
out
sub
fmulp
dec
call
adcb
or
call
cmp
sbb
ljmp
add
push
mov
or
cs
ss
in
in
xchg
aad
in
cmp
push
repnz
mov
out
enter
xchg
out
or
push
imul
lock
fmulp
aad
dec
icebp
cmp
pop
add
repnz
mov
repz
std
mov
dec
dec
hlt
hlt
imul
fidivl
std
cmc
cmc
cmp
sbb
testb
sbb
gs
clc
in
sbb
mov
and
jns
scas
in
add
sti
in
repnz
cld
cld
cld
je
fdivrp
or
nop
shlb
mov
xor
xchg
cmp
dec
sbb
jmp
nop
lret
ret
fstpl
jb
xchg
aaa
movsl
and
rorl
pop
and
pop
jmp
repnz
movsb
adc
jecxz
xor
out
in
in
mov
cmp
jo
mov
aam
or
inc
scas
ss
out
xchg
scas
call
cltd
sti
or
adc
or
pop
jmp
jmp
leave
or
or
add
xchg
pop
jmp
dec
in
cli
out
out
out
xchg
mov
lock
cmp
cli
or
aas
repz
inc
scas
and
xchg
push
sub
stc
rclb
imul
mov
xchg
clc
cmp
pop
push
cltd
jb
push
stc
sub
sbb
enter
sti
sti
xchg
or
repnz
fdivrp
cmp
jmp
mov
cmp
ja
or
inc
scas
ljmp
sub
and
cld
dec
loop
loop
mov
jecxz
inc
clc
adc
nop
and
or
out
out
ljmp
loope
in
repnz
push
cmp
jnp
ljmp
xchg
push
jmp
dec
push
and
notl
divl
imul
out
sub
into
idivb
pop
push
loope
notb
xchg
or
or
inc
pop
leave
or
or
add
xchg
mulb
cs
div
testb
cltd
pop
push
fnstsw
clc
lods
inc
scas
in
cmp
sbb
pop
dec
push
popa
xchg
cmp
jns
mov
cli
hlt
rorb
sub
xlat
inc
jle
xor
add
dec
aad
jo
adc
push
mov
shlb
loope
loope
jns
xor
pop
hlt
pusha
pop
repnz
mov
hlt
in
subb
pop
repz
inc
repnz
mov
dec
push
cmp
xchg
repz
sbb
mov
cs
jae
and
jno
or
in
mov
repnz
repnz
add
or
jb
scas
dec
icebp
icebp
das
xchg
pop
inc
jb
sub
ds
mov
pop
repnz
dec
push
cmc
cmc
mov
icebp
mov
andb
icebp
or
jne
stc
push
and
test
dec
icebp
xor
andb
or
out
lock
mov
pushf
mov
jp
jmp
add
mov
ret
push
inc
fcmovbe
dec
push
insb
loope
inc
cmp
cmp
ret
mov
adc
mov
test
inc
add
jne
stc
mov
fld
xor
jmp
xchg
ljmp
push
mov
imul
popl
or
push
nop
push
jns
xor
cmpsl
xor
or
push
add
dec
adcl
mov
jl
push
jecxz
repz
mov
sahf
jae
insb
sbb
push
push
aad
jns
imul
dec
xchg
gs
dec
outsb
push
faddp
cmc
insb
push
cltd
push
negl
dec
mov
sbb
lea
mov
cmp
and
add
or
test
mov
cmp
pusha
or
adc
lods
jle
xchg
fucomp
jg
mov
insb
add
adc
jp
add
xlat
jmp
push
loope
and
mov
dec
lea
mov
jne
ficoms
cmp
sub
cmpl
int3
push
pop
push
test
dec
xorb
sbb
daa
popa
dec
rcll
hlt
push
xchg
loopne
ret
and
jmp
enter
addl
inc
out
push
and
fsubl
call
sarb
sbb
add
pop
insl
adc
add
sbb
sbbb
or
push
add
negb
add
add
stos
movsl
cmp
adc
add
xor
pop
xor
stos
adc
jno
adc
test
adc
hlt
psubsw
shll
add
push
andb
jb
loopne
add
icebp
add
ret
shr
inc
add
dec
add
movsb
decl
cmp
push
sbb
add
and
and
pop
xchg
mov
push
pop
push
gs
dec
loope
js
mov
push
shll
sub
cmpsb
jne
and
xor
ret
rorl
push
mov
fstl
mov
aaa
xchg
imul
inc
roll
rorl
pusha
push
lret
or
mov
imul
inc
rolb
xor
sbb
jns
outsb
xchg
pop
inc
or
je
dec
sbbb
push
lods
mov
mov
or
mov
xchg
insl
aaa
push
insb
push
mov
pop
insl
push
pop
out
iret
not
cmp
popf
or
lds
jo
lds
sub
xchg
xchg
cmp
push
dec
and
jo
mov
jmp
stc
xchg
mov
sbb
mov
xchg
push
push
loop
sub
imul
pop
add
mov
or
test
cmpsb
jne
lds
imul
or
adc
inc
xor
ss
pop
cmpsb
jne
lds
sarl
iret
sub
mov
pusha
enter
cltd
sbb
adc
test
cmp
and
nop
gs
aaa
aad
imul
inc
cmp
cmp
les
sub
lock
cmp
sysenter
cld
xor
test
subl
jmp
mov
pusha
add
shll
push
lds
bound
pop
dec
jmp
rol
repnz
loopne
mov
or
rol
cmp
cltd
dec
mov
aam
push
mov
clc
push
call
sub
and
lret
lods
mov
les
xor
add
adc
cmpsb
cmc
jl
call
dec
lds
lods
inc
sub
xor
jmp
loopne
lds
jmp
mov
push
push
mov
pop
cmpsb
gs
lds
mov
dec
and
inc
inc
jno
in
ljmp
orb
lods
inc
sub
sub
jl
mov
es
sbb
mov
push
pop
cmpsb
jne
cmpsb
cmc
mov
fcoms
aam
pop
outsb
jno
ret
sti
rorb
gs
gs
gs
out
ret
cmpsb
xchg
or
hlt
movsl
lret
inc
sbb
ret
push
dec
ret
data16
data16
xchg
fndisi(8087
mulb
ja
ret
or
mov
pop
iret
dec
cmp
add
pop
push
bound
xchg
ljmp
popa
aas
xor
pusha
or
je
dec
xlat
movsl
sub
xchg
inc
xlat
and
or
leave
dec
add
rolb
inc
mov
dec
inc
adc
cmp
arpl
dec
sbb
mov
xor
dec
add
dec
jp
mov
vorps
fwait
daa
dec
mov
xor
push
adc
scas
jb
xchg
dec
mov
inc
add
ret
and
add
sub
ret
test
cmpb
lea
cwtl
or
push
mov
add
jbe
and
mov
out
or
ret
loop
push
inc
adc
ret
adcb
mov
push
sub
fsubl
mov
pop
frstor
outsb
sarb
sbb
loopne
mov
test
and
loop
pop
aad
outsb
test
mov
mov
mov
ds
shl
lret
mov
rolb
je
loopne
mov
mov
sbb
aaa
push
call
adc
scas
test
mov
mov
jmp
push
push
dec
ja
pop
ficomps
mov
mov
enter
in
loope
push
mov
sbbb
jle
xor
mov
cs
pop
adc
inc
jmp
pop
inc
jno
mov
pop
cmp
mov
mov
pop
pop
test
adc
mov
pop
rol
mov
mov
fs
sarb
pop
dec
frstor
leave
stos
mov
inc
lret
cmp
test
mov
shrb
jne
fcompl
cmp
add
pop
imul
pop
les
pop
xlat
ss
fsubl
aaa
push
call
pop
jmp
hlt
ljmp
sarl
cmpb
add
mov
jae
push
jno
dec
lods
mov
jmp
mov
fidivl
cmpsb
outsl
rclb
sbb
mov
push
loopne
sub
adcl
mov
sub
push
push
inc
lods
repz
mov
or
dec
mov
ljmp
sbbb
mov
xor
mov
add
inc
jo
insl
adc
jb
sbb
rclb
mov
movsl
test
push
mov
mov
imul
call
push
sub
imul
cmpl
mov
and
loop
sub
adcl
mov
push
add
sub
adc
and
loopne
je
ljmp
popa
cs
test
jge
mov
call
inc
cmpsb
push
fidivl
inc
sbb
mov
cld
loop
sub
cmp
sbb
sbb
aaa
push
pop
push
lods
push
jmp
aam
inc
loop
push
mov
jo
push
orb
aam
push
imul
dec
aaa
push
pop
sbb
push
add
push
push
lods
sti
or
hlt
or
push
and
or
push
cmp
mull
sbb
lock
add
insb
xchg
or
int
jl
lods
and
scas
cmp
aaa
push
mov
mov
rcr
mov
or
ljmp
out
push
lods
sarl
outsb
xor
mov
xor
pop
imul
or
mov
xor
sub
cmpb
cld
add
sti
lret
sarb
clc
or
push
and
or
push
loopne
or
cmp
xchg
push
in
mov
adc
push
push
ret
push
lcall
or
mov
loope
mov
jp
out
push
movsb
das
jmp
mov
add
mov
push
lods
fisubrl
nop
rorb
adc
clc
js
adc
stos
push
fbld
push
outsb
rcrb
push
rclb
push
lods
sbb
push
test
cmp
sub
push
fs
mov
xchg
xor
fs
inc
fs
pop
dec
dec
addr16
dec
pop
cmp
push
push
sti
xor
call
or
dec
push
popa
jo
cmp
lods
cli
cmp
cmp
daa
adc
xchg
sub
push
push
sub
mov
pusha
ret
ds
jbe
cmpsl
jo
jge
aaa
imul
adc
les
das
push
push
adc
adc
adc
or
das
mov
push
lds
mov
or
add
push
mov
cmp
dec
pop
ret
in
test
sub
dec
bt
mov
sbb
cmp
into
inc
cmp
jbe
lods
ret
aaa
adc
push
xchg
xor
sub
push
mov
popf
test
test
adc
std
mov
mov
addr16
jnp
das
int3
add
jl
dec
nop
popa
inc
mov
pop
and
push
in
pop
adc
inc
dec
add
fstpl
sarb
imul
xchg
add
xlat
push
dec
push
jae,pt
mov
mov
les
sbb
or
mov
or
adc
push
lea
xchg
ror
mov
insl
pop
jo
sub
test
or
sbb
fstpt
sub
das
mov
sbb
push
dec
fstpt
das
sub
fstpt
mov
js
test
sbb
cmpsl
insl
pop
shlb
xor
add
push
pop
insb
cmp
cli
out
lods
pop
sbb
fsubrl
dec
xor
jb
cmp
add
in
dec
cwtl
xchg
inc
cmp
inc
or
push
push
adc
xor
xchg
push
out
or
or
nop
call
adc
inc
cmp
pop
jp
aam
in
cli
add
psubw
adcl
jg
imul
xchg
addl
out
mov
dec
jo
push
addl
add
fwait
shrl
mov
insl
insl
xchg
out
add
lock
shll
push
enter
orb
mov
idivb
lahf
mov
lcall
inc
jl
sbb
popf
lret
or
sub
push
pop
pop
popa
mov
push
inc
out
ret
and
lods
stos
out
call
or
mov
mov
inc
cmp
inc
pop
out
or
inc
pop
ja
cwtl
pop
push
shrl
lods
mov
sbb
push
fidivl
pop
push
outsb
ljmp
add
mov
pop
rcrb
xchg
xorl
push
mov
imul
xorl
sub
sbb
or
pop
mov
and
lahf
push
lods
in
xchg
test
mov
cmp
pop
xor
or
jne
pop
xor
mov
jle
loopne
pop
mov
add
mov
mov
pop
jmp
xchg
or
push
mov
ficompl
pop
clc
sbb
out
dec
call
imul
shrl
dec
call
loopne
dec
lods
sub
mov
dec
inc
out
lods
ret
xchg
xchg
inc
sub
sub
and
and
test
push
inc
xchg
and
and
or
jb
mov
mov
inc
call
inc
xchg
inc
aaa
jb
mov
mov
jmp
add
inc
nop
fs
and
jne
fcoml
push
fstl
fcoml
push
aaa
fs
aaa
xor
fstl
lods
rcrl
push
test
jne
loop
push
mov
mov
leave
push
outsb
jae
rcll
inc
jb
bound
out
jbe
dec
cwtl
adc
add
mov
loop
call
inc
cmp
movsb
add
incl
jl
insl
jmp
add
or
and
std
sbb
sub
mov
adc
dec
push
test
ljmp
test
mov
xchg
cmc
mov
adcl
pusha
addl
pop
add
pop
push
jns
push
cmp
rcr
sub
pop
inc
sub
repz
call
test
frstor
arpl
add
sub
aaa
xorl
push
xchg
imul
sub
ljmp
loopne
jo
sbb
inc
pop
adc
repnz
cs
mov
popf
gs
incl
add
test
inc
mov
xor
push
inc
call
outsl
inc
xchg
cmp
ss
incl
subl
inc
rcr
xor
test
mov
jne
push
movb
adc
xchg
lret
fcmovnbe
int3
jmp
cmp
push
inc
jmp
dec
jmp
xor
xor
fimuls
inc
inc
mov
jo
xlat
dec
inc
jmp
inc
inc
inc
pop
je
pop
es
test
rdmsr
add
adc
cmp
popa
pop
xlat
inc
or
rorl
fs
stc
add
mov
pop
das
or
xorb
add
xchg
add
insb
cmpb
dec
jle
and
cmp
leave
or
or
mov
out
mov
call
xor
inc
jmp
sarb
adc
push
dec
and
xchg
popf
pop
pop
or
nop
fistps
and
push
cmp
mov
adc
enter
arpl
add
loop
pusha
popa
push
mov
adc
js
jo
cmp
jne
inc
jnp
cs
mov
mov
or
xlat
out
xchg
lods
inc
push
jge
push
pusha
inc
inc
shl
lods
shlb
pop
jb
cmp
repz
jbe
jne
fisubrs
jge
push
push
or
inc
dec
mov
cmpsl
add
aam
mov
pushf
and
stc
dec
leave
xchg
jmp
cmp
xor
imulb
adc
push
add
add
cld
sub
push
sar
inc
push
adc
xlat
push
dec
das
inc
arpl
xor
dec
nop
jb
pop
sub
dec
sub
pop
xorb
cmc
inc
adc
sub
pusha
cmp
or
pop
cmpsl
push
adcl
mov
sbb
insl
add
dec
sbb
jg
xchg
ja
mov
sbb
pop
add
filds
cmc
add
jmp
mov
subb
or
jbe
add
sahf
in
or
mov
push
ja
push
sub
mov
sub
mov
or
mov
jp
lock
adc
adc
add
mov
mov
lret
mov
outsl
daa
push
outsl
xchg
sub
inc
xor
sbb
das
sub
push
pop
mov
aas
inc
adc
movsb
xorl
aad
pop
or
jo
scas
stos
loopne
rolb
inc
pop
jbe
xlat
cmc
fists
in
mov
xlat
sbb
mov
mov
popa
rol
shlb
dec
cmp
cmpb
shll
cmp
ja
sbb
xor
mov
fstpl
push
ss
sar
add
nop
push
sarb
jl
xchg
sub
pop
add
pop
adc
mov
cmpsb
icebp
inc
xor
mov
sub
and
jmp
lods
rcrl
loopne
cltd
loop
mov
ficoms
xchg
mov
out
push
jae
mov
add
out
pop
shll
notb
out
dec
pop
and
inc
jne
xchg
mov
pop
xchg
mov
rclb
sahf
repnz
xchg
xchg
xchg
ljmp
xchg
lret
inc
jno
inc
pop
aad
pop
imul
and
xchg
dec
rol
nop
mov
nop
jmp
push
sarb
lods
pop
adc
xchg
add
rclb
nop
mov
or
call
or
and
adc
fbstp
fisttps
cmp
ljmp
cmp
pop
jno
xchg
mov
out
xchg
mov
icebp
movsb
gs
adc
sbb
inc
sbb
inc
dec
cmpsb
cmp
nop
and
pusha
sub
sbb
cmp
or
dec
jmp
roll
imul
sbb
nop
sub
pop
dec
stc
pop
imul
jne
in
push
jle
mov
sbb
xchg
dec
add
loopne
mov
push
sarb
lds
sarb
in
lcall
push
sbb
sub
jne
cmp
test
call
sbb
scas
inc
jmp
sbb
add
movsb
jne
leave
inc
pop
imul
xorl
or
loopw
pop
leave
xchg
mov
andb
jns
iret
rcrb
mov
outsl
mov
mov
adc
daa
lea
add
and
out
push
sbb
add
push
jne
cwtl
and
ds
add
adc
negl
xchg
sub
cmp
in
jle
mov
push
call
dec
xchg
divl
or
or
jo
adc
or
mov
push
lods
aaa
push
lods
inc
and
sub
es
xor
sub
push
aaa
ret
inc
push
or
or
mov
shrb
dec
add
int
add
stos
fldl
cmpb
dec
inc
xchg
int
adc
and
int
mov
int
mov
add
jbe
adc
jl
fsubs
sbb
or
add
icebp
sub
push
ja
push
mov
jo
push
and
inc
pop
loopne
add
arpl
inc
movsb
rorl
packuswb
out
pop
adc
cmp
mov
testl
and
arpl
ja
ja
push
pop
mov
aam
pop
call
cli
push
test
dec
hlt
push
mov
int3
sub
inc
or
inc
sub
lea
adc
xchg
nop
gs
or
adc
mov
int3
cmp
pop
es
dec
fstl
or
and
cs
or
or
dec
aad
adc
js
lods
or
dec
push
call
xchg
mov
add
mov
push
xchg
nop
jne
or
push
inc
add
or
ret
lods
adc
xor
scas
movsb
ljmp
or
xor
dec
enter
or
bound
imul
call
rcrb
imul
test
inc
or
jecxz
out
sbb
fxch
mov
inc
imul
xor
ds
or
dec
enter
ja
or
mov
pop
or
add
mov
hlt
or
pop
dec
loop
jp
pop
ja
or
inc
adc
or
push
add
or
or
or
and
xchg
or
and
xor
mov
sbb
add
or
jb
fisttpl
inc
loopne
and
push
or
or
imul
gs
xchg
nop
or
inc
test
lods
or
nop
jne
or
and
push
and
fstl
loope
mov
adc
dec
and
repnz
sbb
cmp
pop
or
xchg
sbb
add
add
push
popf
sbb
xchg
fldt
call
or
sub
dec
sub
pop
mov
int3
sub
and
test
xor
out
in
xchg
nop
or
lds
lods
or
ficomps
jae
mov
xchg
adc
in
nop
movsl
mov
sbb
push
xchg
or
loopne
les
int
call
cmpsl
dec
lret
and
or
ret
mov
xor
xor
sbb
cmp
pop
mov
or
sub
mov
scas
pop
into
push
add
push
out
inc
lret
jmp
inc
xchg
jne
shr
cmp
mov
cmp
push
jo
jmp
and
cmp
jp
sub
adcb
mov
shrb
lfs
shr
clc
cmp
pop
loope
jmp
dec
sub
cwtl
cmp
sub
pop
mov
jmp
arpl
jmp
pop
jmp
in
cmp
or
mov
jmp
pop
or
fiaddl
pop
inc
or
into
jmp
ret
or
ret
lret
call
inc
jae
adc
mov
mov
mov
dec
cs
aas
dec
pop
aaa
xor
jns
sbb
mov
fs
pop
dec
xchg
out
mov
pop
jb
and
sbb
add
sbb
pop
cmp
adc
fs
mov
fs
mov
xchg
sti
cmc
jns
xor
mov
push
lods
ss
xor
bound
bound
popf
or
jo
pop
inc
mov
or
int3
nop
mov
int3
nop
mov
nop
mov
call
push
jle
andl
fs
insb
cmp
stos
movsl
dec
pop
adc
shrl
jae
loop
lods
xlat
push
and
sbbb
jle,pn
mov
nop
orb
mov
mov
adc
dec
pop
stos
push
mov
jo
stos
inc
mov
sbb
pop
xlat
dec
mov
movups
ret
stos
jmp
fldenv
xchg
mov
push
and
fs
aam
push
sub
inc
adc
or
xchg
testl
push
and
xor
loope
adc
loopne
sbb
cld
pop
in
mov
and
sub
xor
decb
mov
lock
xor
and
in
out
adc
arpl
out
pop
push
lods
out
dec
mov
out
dec
xchg
jnp
push
mov
sub
leave
jp
js
cmp
jmp
es
pop
add
ret
lret
mov
dec
xchg
test
les
mov
bound
call
in
outsl
mov
out
sbb
out
sub
es
out
mov
and
pop
adc
sbb
xchg
out
push
call
int3
je
fnstenv
shlb
out
xor
repz
xchg
stos
sub
lcall
cltd
and
out
cmp
hlt
es
out
rcrb
or
imul
cmp
push
or
inc
or
aas
sub
sbb
aaa
unpcklps
das
shlb
bswap
lahf
ljmp
adc
and
adc
call
xor
clc
lret
xor
lock
xchg
das
pop
sbb
call
call
mov
int
inc
call
jl
dec
call
movsb
lods
movsbl
push
call
pop
call
lret
xchg
das
pop
fs
insb
call
in
call
js
pop
jl
push
out
or
jmp
inc
sbb
test
xor
nop
sbb
cwtl
add
mov
movsb
in
dec
dec
in
xchg
lret
adc
enter
sub
ror
movsl
mov
adc
sub
push
in
call
pop
sub
cmp
sub
es
sbb
jns
pop
cld
adc
add
add
leave
or
leave
gs
xor
adc
in
lret
sbb
sbb
push
mov
and
cs
dec
in
xchg
sub
xor
push
mov
cmp
dec
push
push
mov
inc
dec
cmp
out
rorb
adc
pop
sub
pop
or
movsl
add
jo
add
lea
or
cs
int
in
and
jo
xor
daa
mov
cwtl
sahf
jg
nop
mov
pushf
and
mov
inc
enter
imul
adc
js
data16
sbb
inc
sbb
xchg
xchg
xorb
test
sbb
imul
out
movsb
mov
cmp
call
movsb
sbb
imul
dec
cli
mov
lods
enter
mov
jmp
loopne
repz
cmp
push
lods
inc
pop
insb
repz
mov
mov
or
push
dec
xchg
je
add
add
xchg
sub
test
nop
test
cmp
xorl
lret
mov
sbb
jno
mov
in
lret
push
mov
js
jo
scas
mov
gs
mov
adc
add
jno
sarl
faddl
mov
lods
pop
sarl
dec
sub
mov
push
dec
lods
sbb
xlat
shrl
shrl
cmp
cli
cs
lods
outsb
sbb
pop
call
sbb
shrb
lret
rolb
and
push
idivl
mov
jo
or
pop
sbb
fwait
lret
xchg
das
inc
and
movsl
inc
inc
lret
rolb
lods
les
call
daa
add
pop
adc
cltd
hlt
out
xchg
jp
ret
push
mov
lret
push
dec
sbb
dec
movsl
push
pop
xchg
xor
mov
mov
and
push
mov
mov
push
xchg
movsl
adc
gs
mov
jo
gs
mov
gs
mov
mov
mov
mov
xchg
scas
mov
or
lret
mov
sub
shll
add
nop
push
mov
push
gs
jne,pn
mov
in
push
xchg
gs
add
xchg
gs
jp
inc
sbb
push
fbld
test
lret
movsb
sub
or
xchg
fs
ficomps
push
ret
or
shlb
sbb
stos
sbb
iret
cmpsl
loope
add
pop
pop
loope
outsb
lock
loope
sub
lods
roll
loope
or
inc
cmp
mov
aam
loope
rorl
jg
mov
mov
icebp
mov
pop
pop
fst
pop
adc
jecxz
push
jae
rclb
adc
mov
mov
add
rcrb
sub
adc
dec
adcl
sub
or
add
push
lods
pushf
add
and
sub
mov
mov
cs
jo
push
call
loopne
sub
jo
sub
dec
push
adc
add
test
and
add
cmp
lods
cmp
cltd
iret
rclb
dec
sub
xchg
add
inc
sub
sub
cmp
sub
lock
adc
and
or
dec
add
jnp
repnz
rclb
xchg
in
fdivrs
mov
or
andb
mov
addl
jo
sub
ret
add
add
sbb
mov
xchg
xchg
ret
or
adc
stos
pop
nop
jne
rorl
imul
pop
lret
jmp
aam
adc
sti
call
mov
push
mov
jmp
adc
lret
lods
pop
je
lret
xor
jo
inc
lret
mov
mov
ss
pop
nop
mov
push
lret
mov
addl
js
jmp
stos
or
xchg
leave
inc
sarl
popf
mov
push
ret
inc
rcl
ja
push
add
icebp
mov
ret
push
xor
out
es
sahf
adc
inc
mov
pusha
adc
xlat
mov
jmp
adc
imul
or
add
push
or
push
lea
adc
minps
mov
loopne
pusha
push
push
test
loope
loopne
mov
xor
pop
scas
push
loope
mov
das
xor
adc
sub
dec
repz
loope
and
out
insl
sub
sbb
xchg
int
mov
jge
adc
jmp
mov
fs
cmp
add
jnp
dec
push
mov
lea
or
call
pop
insl
sub
fst
js
pop
xchg
cmp
xchg
adc
xorb
mov
push
cmpsl
pop
mov
add
nop
cmpsb
pusha
fstl
or
add
adc
ret
pop
mov
xchg
pop
inc
cmp
aam
mov
movl
mov
mov
shll
imul
xor
add
sub
xor
pusha
mov
loopne
add
aam
mov
push
or
push
imul
inc
xchg
mov
arpl
loope
mov
stc
add
cld
add
in
jo
dec
mov
mov
test
sub
sbb
pop
psubsb
test
ret
push
pop
test
imul
dec
inc
pop
out
nop
dec
and
and
jnp
pop
mov
les
lods
repz
ret
add
call
div
sbb
dec
lret
mov
fisttpll
cwtl
add
addb
push
mov
into
je
cwtl
jle
loopne
shll
and
jp
cwtl
cmp
ret
test
adc
lea
testl
dec
xor
adc
imull
xor
testl
xor
adc
xchg
imul
test
and
push
mov
scas
pop
mov
addb
push
stos
pop
pusha
loopne
pop
sahf
cmp
inc
xor
or
add
add
jbe
pop
jmp
pop
mov
xchg
adc
and
nop
adcb
stos
mov
popa
rcrw
shrb
pop
shll
xor
pop
sbb
stos
cmp
stc
mov
xlat
inc
sahf
int3
mov
push
pop
cmpsl
adc
pushf
in
inc
xchg
mov
adc
mov
jecxz
mov
or
out
cmp
dec
dec
test
add
dec
add
test
mov
and
add
decb
rclb
test
movsb
xchg
orl
cmp
push
add
pop
xorl
jmp
addl
int3
jne
xor
mov
pop
mov
lods
mov
jo
cwtl
mov
mov
or
pop
mov
mov
or
adcl
pop
or
adc
subl
addb
sbbl
mov
add
xorl
fdivl
push
xchg
add
mov
stos
sbb
sahf
sbb
push
sbb
jns
addb
adc
add
jmp
add
sbbb
sarl
fcoml
push
mov
jg
cltd
or
pusha
sub
add
popf
popa
push
popf
inc
sub
add
mov
je
push
call
movl
mov
add
scas
pop
adc
testl
or
and
inc
loope
scas
es
shll
movsl
hlt
rclb
adc
sbb
push
xor
adc
mov
adcb
fistpl
adc
jp
and
in
idivl
clc
call
jae
xchg
add
or
jb
test
push
cmp
sub
movsb
in
push
inc
add
sti
fwait
rep
dec
add
adc
les
ret
repnz
xlat
fwait
push
or
inc
jp
inc
sub
ds
aam
dec
clc
mov
dec
out
jb
adc
xchg
fwait
cld
inc
scas
cwtl
jge
adc
jb
inc
lcall
xor
sub
push
or
js
push
sbb
popa
pop
ja
or
ret
test
sti
lcall
adc
xlat
ret
lcall
nop
lret
stos
pop
push
push
cmpsb
in
pop
mov
push
pop
mov
int3
lock
pop
movsb
repz
mov
lret
mov
add
repz
cmpsb
xor
dec
jmp
pop
adc
mov
cmp
cltd
js
nop
dec
test
and
inc
mov
mov
push
pop
sub
sbb
out
push
cmp
cmp
mov
jmp
dec
pop
push
jne
push
ja
cs
retw
int3
or
add
inc
ret
push
mov
mov
pop
and
pop
cmp
add
and
cmp
repz
out
sbb
ret
cmp
repz
mov
push
out
cmp
ds
or
sbb
out
jns
call
add
push
lods
push
mov
idivl
jnp
push
push
sub
push
nop
cs
out
fisubl
push
inc
out
out
jns
cmpb
push
push
sahf
dec
cmp
sbb
repnz
cmp
repz
into
mov
mov
push
pop
into
sbb
incb
add
out
out
repnz
loop
sbb
cmp
mov
out
outsb
pusha
sbb
pushf
repz
out
lret
or
iret
repz
and
pop
data16
iret
repz
nop
sahf
lods
mov
cmp
repz
in
decb
nop
repz
shlb
jb
jle
sahf
mov
daa
sarb
jns
loop
clc
adc
sub
cmp
cmp
cmp
push
push
cmp
cmp
lods
clc
adc
daa
pop
mov
jbe
insb
stos
push
in
add
push
cwtl
cmpsl
rcrl
add
das
out
iret
dec
test
adc
xchg
push
xorb
test
call
sbb
push
xor
adc
out
xor
or
jne
pop
dec
sbb
outsl
push
mov
and
imul
stos
dec
push
je
adcb
test
add
push
push
ja
sub
fidivl
orb
rolb
es
dec
scas
ss
and
daa
xor
fistpl
xor
outsl
ss
xor
add
mov
bound
add
out
xor
mov
sub
mov
push
cmp
fcmovu
outsb
aas
das
sbb
fwait
test
mov
mov
arpl
pop
cmpsl
jae
adcb
push
mul
ds
mov
sbb
sbb
or
push
nop
mov
and
fs
mov
sub
mov
stos
outsl
xchg
or
outsl
add
xor
jnp
add
jmp
testl
mov
jg
add
xor
cmp
sbb
imul
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
adc
pop
nop
or
rcrb
nop
xchg
inc
or
in
dec
xor
xor
mov
sbb
jae
pop
dec
imul
add
sbb
pop
inc
jne
cs
adc
push
push
pop
inc
js
fildll
lret
inc
inc
xor
fildl
push
sub
sub
sub
inc
inc
xor
xor
jg
sti
aaa
xor
jge
xor
xor
inc
xor
xor
mov
xor
xor
cmp
fdivl
cmp
xor
clc
inc
inc
xor
sbb
ret
hlt
dec
les
sysret
add
push
fwait
sets
cmp
mov
jo
adc
inc
xchg
fidivrs
cmp
movsb
mov
push
xor
or
push
and
lock
adc
xor
inc
pop
dec
push
inc
add
push
jl
adc
insl
or
arpl
scas
ljmp
inc
push
dec
and
jbe
loopne
cmp
ss
pushf
xor
add
add
dec
outsl
mov
dec
xchg
mov
push
push
popa
mov
push
ss
pop
inc
dec
hlt
imul
ficoml
pop
push
pushf
jl
mov
jle
out
inc
out
adc
push
sub
out
cmp
shrl
adc
inc
mov
in
cs
sahf
add
movd
fsubr
cmpsb
push
hlt
or
mov
scas
dec
sbb
sbb
add
add
jg
ret
push
and
jo
outsl
xor
imul
and
inc
je
push
push
push
mov
dec
and
inc
cmp
jbe
in
rolb
inc
cmp
sbb
xchg
mov
add
xor
mov
inc
cs
filds
lock
arpl
insb
mov
or
outsl
xchg
and
outsb
ret
lcall
insb
bound
xor
adc
mov
insb
popf
sub
inc
cwtl
cmpsl
addl
mov
xor
pop
nop
cmp
sarb
fiaddl
pusha
push
and
and
jnp
nop
mov
inc
push
imul
jg
push
imul
pusha
int
js
daa
scas
scas
je
dec
outsl
das
dec
fs
imul
push
or
subl
imul
shr
add
nop
or
adc
movsl
xor
aaa
dec
movsb
jmp
hlt
dec
jae
outsl
push
pop
arpl
inc
roll
repz
dec
push
push
push
add
ja
inc
push
bound
shlb
outsb
mov
add
popa
imul
les
into
add
nop
fmull
push
int3
mov
pop
add
push
sub
iret
sbb
push
outsl
out
dec
dec
and
cmp
stos
div
pusha
jmp
push
inc
dec
or
inc
xchg
and
add
movd
andl
sbb
xchg
sbb
push
dec
sub
movsb
aaa
mov
or
add
pop
inc
inc
mov
gs
out
xchg
inc
adc
mov
jns
addr16
orb
or
add
mov
das
push
adc
dec
shrb
adc
push
sbb
iret
repz
enter
idivl
sbb
push
das
jnp
stc
cmp
pop
nop
cld
and
repz
out
cli
js
jns
stc
jns
out
jp
push
cld
fdivr
mov
ja
movsb
movsb
sbb
inc
mov
or
das
push
xor
mov
and
aas
push
or
mov
mov
inc
or
inc
dec
out
inc
ds
cmp
mov
push
or
es
or
lds
sahf
cmpsl
stc
int3
adc
push
cld
or
in
jns
out
int3
les
xor
cmp
imul
iret
jl
insb
push
out
pop
mov
dec
jns
out
inc
inc
cmp
xor
iret
repz
sub
and
repz
repz
adc
or
stc
cmp
or
cld
or
sahf
out
sahf
hlt
call
jns
out
movsb
nop
jo
xor
cmp
out
lock
int3
mov
iret
repz
insb
inc
sub
adc
sahf
out
ds
push
fcom
les
js
sub
repz
repz
mov
outsl
xchg
sbb
add
call
rolb
jl
xor
xchg
je
pop
pop
and
enter
dec
repz
xchg
dec
push
mov
xor
mov
push
sub
inc
inc
add
xchg
mov
inc
dec
cmp
movsb
mov
rolb
fcmovnbe
call
imul
push
rcll
jg
out
mov
sahf
gs
xchg
mov
nop
movzwl
mov
adc
out
dec
xchg
adc
fidivrl
popa
call
das
cmpsb
fildl
pop
dec
or
push
jmp
push
mov
fwait
adc
shrl
lods
mov
adc
or
aaa
or
xchg
call
rolb
pop
pop
js
shrb
icebp
or
mov
pushf
andb
rolb
ret
jns
mov
xor
push
pop
cmp
das
push
inc
push
xor
xchg
cld
inc
inc
mov
jnp
out
icebp
inc
mov
nop
les
jne
pop
sub
ret
sbb
lods
jmp
jne
imul
movsl
dec
pop
dec
and
xchg
scas
arpl
imul
or
aas
mov
jo
push
or
popf
or
mov
cmp
inc
push
push
xor
filds
insl
out
push
push
push
insb
das
inc
dec
pop
mov
lahf
outsl
jl
add
cmpsl
ja
lahf
add
js
jg,pn
das
loopne
xchg
es
lds
loopne
out
or
push
addr16
mov
xor
sub
ret
xor
push
mov
xor
and
insb
pop
sarb
pop
xor
das
jg
fcoms
das
cltd
nop
cmp
mov
ss
mov
mov
sete
int3
or
pop
data16
ljmp
adc
jbe
xchg
inc
xlat
jns
pop
rcr
dec
and
or
push
lcall
pushf
setl
lret
push
mov
adc
sbb
pop
push
popf
jl
in
mov
aas
sbb
jo
cmpsb
jg
mov
fmuls
imul
aaa
mov
leave
or
mov
daa
or
jg
enter
xchg
adc
inc
jb
pinsrw
shlb
daa
fimull
shl
adc
jp
insb
adc
push
sbb
daa
fs
loopne
dec
sbb
movsb
dec
adc
cmpsb
jns
sahf
loopne
daa
lock
dec
jecxz
enter
mov
fcompl
mov
mov
dec
les
lret
add
sarb
inc
xchg
dec
imul
ret
adc
ltr
bound
lcall
scas
pop
push
and
cmc
push
dec
dec
add
push
scas
aam
jg
add
push
outsl
ja
xor
jle
cs
lods
add
sub
ja
add
scas
out
mov
mov
xchg
es
jecxz
and
add
cmp
mov
repnz
outsb
inc
lods
in
add
fucomip
jecxz
and
cmc
add
mov
rolb
dec
or
insl
test
adc
loopne
ss
inc
add
insl
jo
dec
pop
es
shrl
push
add
out
mov
xchg
add
push
mov
cli
add
jbe
cmp
jae
jae
push
pop
adc
lock
sbb
jae
push
add
inc
rcll
add
mov
add
adc
cmp
pushf
mov
loopne
inc
sbb
addb
add
and
xchg
or
dec
add
push
xor
dec
mov
inc
push
mov
ret
adc
push
mov
xchg
or
cmp
push
jo
jb
pop
xchg
jns
imul
movsl
jge
and
movsl
roll
push
push
lods
cmpsl
xor
add
sbb
imulb
insl
jmp
cmp
movsl
cmp
inc
and
fimull
lods
insl
inc
pusha
inc
and
pop
inc
ja
mov
inc
imul
insl
or
sbb
testl
mov
enter
inc
imul
fbld
jne
negb
fwait
jge
jnp
or
sub
push
mov
rolb
mov
xchg
inc
dec
outsb
es
and
pop
push
scas
push
ret
sarb
popf
mov
fnstcw
cmpsl
jno
ds
fs
je
sub
xor
cli
int3
xor
dec
rorl
out
jecxz
cltd
cs
adc
xchg
sbb
fidivrl
and
push
add
adc
call
enter
lahf
outsb
xor
dec
sbb
inc
push
inc
rorl
add
rorl
mov
das
pop
outsl
mov
sub
or
lret
pop
jne
xchg
stc
sub
mov
sub
xor
fadds
add
add
sub
dec
dec
dec
pop
add
add
mov
jns
mov
lea
xchg
fs
lds
inc
xor
repnz
insb
adc
outsl
inc
push
outsl
or
xchg
sti
gs
dec
and
dec
loop
ret
roll
push
inc
sbb
das
add
cmp
add
sbb
lock
mov
out
mov
rolb
push
xchg
lret
out
jb
jecxz
sbbl
outsl
subb
xchg
jp
mov
inc
jmp
pop
ja
add
das
push
in
scas
je
aaa
dec
inc
dec
pop
or
cltd
inc
rorb
inc
cmc
popa
push
sbb
aam
adc
push
and
adc
jnp
sbb
xlat
add
xor
inc
and
mov
stos
inc
push
jg
iret
add
jo
add
add
add
push
add
pop
mov
jo
sub
add
ds
dec
push
int3
or
pusha
push
jo
jno
cmp
pop
mov
mov
arpl
scas
into
pop
roll
dec
add
cwtl
lret
xchg
or
rcrb
arpl
xor
dec
imul
add
iret
cmp
rcrb
lret
xchg
mov
sbb
out
outsl
inc
cmpsl
cmp
mov
mov
adc
mov
push
push
and
ret
jns
insb
clc
and
cld
inc
jae
adc
add
je
cmp
testb
outsl
xor
and
test
xor
pusha
lods
lds
mov
or
cmp
out
into
insb
sbb
add
sub
inc
dec
pushf
xor
iret
loope
dec
sbb
and
fistps
rclb
ficomps
mov
push
popa
or
inc
mov
std
fwait
xchg
nop
loopne
and
inc
cwtl
adc
pop
pop
aam
push
jecxz
shlb
pop
in
pop
rolb
cli
and
iret
jnp
and
push
sbbb
dec
mov
pusha
sti
cmp
adc
push
iret
icebp
pop
and
adc
mov
nop
push
loop
jns
add
sbb
test
pushf
inc
mov
cmpsl
cs
mov
mov
in
rorb
gs
cmp
test
mov
inc
xor
sti
fsubrl
outsb
nop
fdivrl
inc
fs
sbb
pusha
jmp
pop
cmp
mov
mov
aad
daa
inc
adc
dec
pop
and
mov
insb
bound
rclb
test
push
adc
push
xchg
dec
mov
or
mov
out
sahf
or
add
clc
out
lock
repz
enter
iret
repz
sahf
out
fisubs
nop
jns
out
mov
iret
cmp
pop
push
inc
cmp
repz
xor
sbb
cld
pop
ss
in
lock
push
loopne
fcom
enter
repz
test
mov
iret
repz
push
cmp
sub
repz
and
adc
add
sahf
out
lcall
mov
lods
mov
mov
jns
out
js
push
inc
sub
and
out
cmp
or
jmp
and
testb
adc
pop
add
push
add
mov
jmp
mov
push
mov
ja
lcall
pmuludq
outsb
jno
cs
shl
scas
push
adc
fiadds
nop
rcrb
ss
les
dec
aaa
and
xorps
fld
sub
pusha
mov
and
xchg
fwait
push
or
jg
add
dec
pop
mov
push
push
orl
mov
arpl
adc
and
fnsave
orl
lods
mov
adcb
jns
add
sbb
fwait
out
mov
push
pop
jo
add
in
cmp
add
and
or
push
outsb
clc
insl
popf
pop
inc
fdivrs
jae
insl
xor
dec
sub
xchg
and
lahf
movsb
lcall
lahf
xor
xor
ds
je
add
add
mov
loopne,pn
pop
xor
jae
mov
ret
push
lods
popf
shlb
jbe
sbb
inc
jnp
cmp
dec
and
add
and
addb
pop
or
adc
pop
sbb
les
divb
popaw
insb
rcrl
pusha
sub
insl
stc
das
sti
ss
inc
loopne
push
sbb
push
jnp
lahf
ds
inc
add
inc
pop
pop
adc
inc
insl
pop
fcmovbe
add
jg
xor
xor
sbb
bound
loopne
sbb
das
xor
xorb
xor
xor
xor
xor
xor
pushl
xor
movsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushl
outsl
xor
test
enter
ljmp
ss
es
dec
jmp
pushl
push
aaa
mov
iret
aaa
call
aaa
adc
dec
cmp
cmp
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
data16
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jg
sub
ret
add
push
lock
idivl
or
jg
xchg
add
adc
and
dec
xor
xor
outsb
xor
popf
xor
xor
xor
xor
xor
xor
xor
xor
mov
xor
aas
clc
fnsave
xor
xor
xor
out
xor
xor
xor
xor
aas
cmp
mov
mov
mov
les
fnsave
jecxz
call
xor
jno
cltd
ss
fnstenv
loop
in
ss
aaa
sbb
jno
mov
aaa
loopne
add
or
adc
cmp
cmp
outsb
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
push
cmp
jl
aas
cld
cmp
cmp
cmp
push
adc
cmp
insl
std
cmp
cmp
cmp
pop
cmp
imul
cmp
cmp
jg
test
jo
test
mov
aas
adc
xor
inc
aas
popa
add
aas
cltd
aas
mov
les
into
aas
out
jmp
repz
cmp
pop
xor
xorb
xor
fdivs
fnsave
ljmp
pushl
mov
mov
xor
xor
xor
xor
pop
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
pop
xor
jo
xchg
xor
mov
xor
xor
xor
xor
xor
xor
xor
push
aaa
call
fisttps
sub
ss
clc
loop
cmp
cmp
cmp
mov
mov
cmp
sar
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
xchg
inc
sbb
aas
inc
aas
pop
aas
ja
pusha
pop
ljmp
jle
push
or
cmp
pop
xor
push
xor
jmp
cltd
xor
xor
xor
xor
xor
xor
ret
cld
pop
cmpsb
push
xor
xor
lcall
clc
xor
xor
xor
xor
nop
xor
out
in
xor
fwait
outsl
jmp
scas
clc
xor
cmp
pop
lods
cmp
pushl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
in
cmp
cmp
std
cmp
cmp
lcall
mov
and
cmpb
ds
imul
xchg
outsb
xor
xor
decl
xor
sbb
xchg
cmp
cmp
mov
ljmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
js
cmp
dec
aas
push
mov
cmpb
aas
sarl
aas
mov
aas
out
out
jo
and
std
xchg
xor
xor
xor
xor
fisubrl
xor
xor
xor
loop
xor
xor
xor
mov
pop
std
xor
xor
xor
scas
std
xor
cmpsb
data16
ss
jg
cmc
pushl
add
or
aaa
and
aaa
dec
aaa
dec
aaa
push
xchg
pushl
pop
aaa
imul
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
xchg
jmp
cmp
xor
pusha
cmp
mov
cmp
cmp
sbb
icebp
cmp
cmp
inc
cmp
dec
cmp
popa
cmp
cmpb
or
cmp
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
repnz
push
es
adc
sub
xor
cmp
cmp
cmp
push
cmp
pop
cmp
jb
js
cmpl
mov
cmp
cmp
cmp
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fbstp
cmp
inc
cmp
pop
cmp
jmp
xchg
cmp
mov
jp
jg
cwtl
ds
ds
jecxz,pt
ds
ds
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
cmc
int
or
push
xor
insl
stos
jmp
sahf
xchg
les
fidivl
in
pushl
or
adc
and
jg
sub
cmp
jb
mov
xor
xor
xor
xor
xor
cld
mov
mov
jl
cmpsl
xor
xor
scas
pop
filds
xor
xor
xor
cmpsb
pushl
xor
mov
pushf
xor
ret
aaa
xchg
aaa
fwait
sahf
cmpsb
mov
mov
cmp
scas
hlt
or
cmp
fdivrl
aaa
cmp
mov
xchg
cmpsl
loope
data16
dec
aas
cli
cmp
cmp
cmp
cmp
add
jle
push
jg
or
xor
cmp
bound
data16
push
outsb
aaa
jb
jbe
xchg
push
es
ja
js
aas
cld
cmp
cmp
cmp
cmp
cmp
cmp
jle
mov
sarb
ja,pt
lahf
xor
xchg
aas
lock
xchg
cs
mov
insl
xor
mov
push
xor
xor
xor
xor
jl
out
rcrb
fiadds
aaa
ret
aaa
jmp
hlt
filds
sbb
cmp
pop
cmp
jge
mov
fsubrp
cmp
cmp
jbe
xchg
cmp
cmp
cmp
mov
out
jp
cmp
cmp
cmp
fdivrs
push
aas
jne
mov
mov
ss
mov
fwait
xor
xor
dec
or
repnz
aas
xor
outsl
js
ljmp
xor
call
cmp
dec
ss
outsb
notb
ss
in
and
sbb
xchg
cmp
cmp
mov
jl
andl
lock
test
imul
cmp
test
mov
ret
sar
or
cmp
dec
cmp
cmp
jae
aam
adc
cmp
cmp
jp
mov
cmp
cmp
pop
sarb
inc
das
cli
or
cmp
orb
pop
and
push
aad
cmpb
cmpsl
ds
ds
ret
idivl
add
sbb
addr16
aas
sub
lds
je
xchg
xor
xor
pop
xor
lcall
loopne
xor
cmp
or
xor
xor
xor
xor
xor
mov
xor
in
xor
xorl
add
xor
ds
dec
aaa
pop
add
js
mov
stos
cli
fidivl
out
in
aaa
cli
aaa
mov
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
cmp
aas
ljmp
adc
jbe
cmpl
cmp
cmp
adc
adc
aas
pusha
aas
cmpb
aas
fdivrl
loop
out
out
pop
rolb
xor
adc
xor
jae
cmp
jne
jg
xchg
xor
xor
xor
xor
xor
xor
xor
ljmp
jbe
loopne
adc
or
xor
xor
loope
lcall
cmp
int3
cmp
cmp
cmp
ljmp
push
out
xor
aaa
loope
or
into
cmp
inc
xor
xor
add
jl
mov
mov
xor
les
int3
mov
xor
xor
nop
xor
xor
cmp
sub
sub
xor
inc
pop
cld
jg
cmp
inc
cmp
dec
cmp
push
rcrb
scas
push
loope
cmp
fidivs
cmp
cmp
and
lahf
mov
arpl
mov
enter
pop
test
mov
cmp
cmp
mov
cmp
scas
scas
mov
dec
cld
push
add
or
add
inc
stos
adc
sbb
and
and
sub
sub
pop
loopne
xor
cmp
inc
cmp
cmp
cld
jg
lcall
push
cmp
ret
jl
cmpb
push
mov
nop
xchg
cwtl
fwait
lock
pop
mov
sub
xor
inc
mov
filds
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
shrb
aas
fdivrs
loopne
mull
adcb
pop
jg
bound
clc
xor
xor
inc
xor
xor
pushl
nop
xor
xor
fsubl
inc
cmp
mov
imul
inc
xor
andb
jle
jge
add
or
or
ss
jg
lcall
ss
fdivs
fdivl
loopne
in
call
ss
push
adc
clc
ss
xorb
aaa
or
adc
adc
call
sbb
and
and
sub
sub
xor
cmp
cmp
mov
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
dec
jl
jl
xorb
aaa
mov
nop
aaa
xchg
aaa
cwtl
into
das
ret
mov
dec
mov
mov
mov
xchg
clc
inc
aaa
enter
shlb
aam
fdivs
fcompl
in
or
push
out
aaa
hlt
xor
aaa
hlt
add
subb
cmp
sbb
cmp
into
ret
fdivrl
call
mov
mov
cmp
cmp
cmp
cmp
cmpsl
and
sub
cmp
cmp
cmp
cmp
push
cmp
sbb
mov
xchg
jmp
cmp
mov
mov
cmp
or
mov
xorb
lods
and
mov
add
or
mov
repnz
push
push
push
push
add
push
inc
mov
mov
push
inc
push
or
aas
movsl
xchg
push
lret
sub
repnz
inc
add
sbbl
dec
loope
or
lahf
out
inc
add
pop
leave
test
add
mov
add
push
push
rcr
sub
gs
push
xorl
nop
data16
bound
mov
push
xchg
sub
sub
xchg
adcl
and
mov
cwtl
sbb
push
or
rorb
pusha
sbb
mov
pop
adc
push
jmp
cmpsb
dec
fists
cmp
inc
aas
push
mov
idivl
inc
ret
or
push
sub
inc
xchg
or
sbb
inc
inc
sbb
xor
scas
aas
or
add
inc
or
es
push
xor
ret
movsb
or
subl
mov
dec
and
cmp
mov
and
mov
jmp
sbb
notl
cli
idivb
push
sub
je
inc
ret
jae
xor
add
jle
cld
mov
jl
or
incl
jb
hlt
clc
outsl
test
cmpsb
xor
mov
sub
sub
and
sbb
test
aam
fdivs
push
ficoms
je
sbb
dec
fcmovnu
jbe
call
shll
fbstp
mov
jmp
pop
mov
ljmp
clc
lea
mov
inc
add
push
cmp
or
test
shll
push
mov
xor
mov
pop
mov
or
dec
ss
or
mov
or
test
mov
es
subl
and
push
rorl
xor
subl
pop
mov
adc
popa
dec
cltd
add
pop
std
dec
movsl
sbb
sahf
add
lret
lds
inc
dec
pop
add
mov
adc
sahf
add
inc
cmp
jne
test
sub
inc
addb
jo
add
cmp
call
jns
lret
nop
adc
dec
ror
xchg
sub
test
das
push
mov
adc
das
je
cltd
adc
int
pop
push
add
dec
add
loope
outsb
dec
xor
pop
add
test
sahf
push
scas
xor
clc
cwtl
push
mov
dec
inc
loop
sbb
lret
adc
hlt
jmp
cld
nop
adc
add
cld
dec
sub
pop
fldl
repz
cmp
push
data16
and
pop
add
aas
lea
sbb
dec
ss
clc
fnsave
cmp
mov
xchg
mov
sub
pop
ret
add
xor
pop
pop
sub
sub
push
inc
aaa
sub
add
or
add
pop
jb
or
adc
fs
sbb
sarb
mov
xor
sbbl
test
push
sub
pop
pop
xchg
jno
pop
aaa
push
jecxz
pushl
pusha
add
mov
rcrb
adc
les
mov
push
pop
aad
adc
pop
cmp
add
cmp
pop
lock
add
aas
sub
loop
pop
jne
adc
add
cmpl
int
add
faddl
int
mov
push
xor
int
faddl
int
ss
and
push
les
int
bound
int
inc
loopne
pop
int3
int
xor
xchg
or
arpl
jo
bound
ret
add
int
and
shlb
push
dec
adc
pop
sti
dec
cmp
or
fildl
movsb
pop
test
push
cwtl
and
adc
add
or
leave
out
adc
test
enter
enter
lds
pop
inc
loopne
and
jo
xor
cmpsb
sub
cmpsb
sbbb
add
pop
inc
or
rol
jl
fcoms
pmaxsw
or
es
jge
mov
mov
cmp
movsb
jmp
lahf
pushf
cmpsl
daa
and
addl
inc
or
mov
rcrb
faddl
jle
add
mov
bound
inc
mov
xchg
loope
mov
dec
push
push
push
sub
mov
adc
push
mov
lods
add
mov
cmp
or
stos
add
inc
cmpb
js
sbb
inc
dec
or
mov
ja
sbb
mov
sub
mov
out
mov
and
icebp
roll
mov
adc
cmp
push
xchg
out
lret
inc
dec
or
pusha
sub
mov
imul
arpl
sbb
cmpsl
and
dec
sbb
adc
pop
xor
insb
add
decb
ds
mov
or
sub
sub
fucomip
dec
call
call
or
jbe
sar
out
inc
and
dec
or
out
out
mov
cmp
inc
or
push
loopne
cwtl
ds
jo
stos
out
pop
inc
xchg
outsb
cmpsl
enter
sbb
call
add
jmp
xchg
add
fsubrl
test
fisttps
inc
add
gs
add
or
mov
mov
add
in
push
adc
and
mov
inc
add
inc
cmp
sub
fwait
stc
push
add
lea
dec
inc
and
sbb
movsl
sbb
jg
push
add
pop
xor
ret
sbb
xor
mov
fistps
adc
or
gs
jbe
push
fstpt
mov
or
je
push
xor
repnz
ficoml
or
sbb
mov
sub
add
or
cmp
add
inc
mov
dec
push
mov
mov
push
orb
es
add
mov
pop
pop
add
fistl
insb
add
sarl
sbbb
and
cltd
paddusb
push
testl
fistpl
inc
cmp
adc
mov
ret
inc
inc
mov
test
xor
mov
pop
jno
insb
mov
fdivrs
lret
adc
fstpt
add
pop
test
jae
xlat
test
sbbl
jg
and
cmp
mov
nop
push
and
es
add
outsb
add
inc
ja
dec
adc
fisttpl
jns
out
xchg
push
insb
fs
push
push
or
wbinvd
and
jmp
test
mov
aam
sub
sub
lret
sti
add
and
mov
xor
pop
nop
inc
push
orl
jg
sbb
jo
ja
add
xchg
push
ja
push
outsb
mov
lock
cmpsl
cmp
clc
cmp
or
and
iret
jnp
and
cmp
inc
push
push
push
ja
pushf
mov
xlat
adc
fidivl
mov
jle
and
xor
xor
xchg
cmp
in
and
mov
popa
hlt
adc
dec
add
xchg
xchg
adc
adcb
loopne
adc
pop
loope
mov
pop
or
push
dec
jnp
repz
cmpsb
jo
call
xchg
subb
adc
dec
adc
inc
ja
or
sbb
sarl
xchg
es
daa
es
add
cs
daa
daa
daa
daa
cmpsb
imul
or
or
shlb
daa
sub
sub
mov
sub
sub
or
add
sub
xor
jae
sub
sub
inc
xorb
cmpsb
imul
test
mov
or
xor
jo
sub
sbb
test
dec
and
mov
sub
adc
sbb
fcomi
addb
inc
mov
cmp
add
sbb
fisubl
cmc
push
lock
jp
int
xchg
push
or
clc
fs
dec
sbb
jle
sbb
inc
add
sub
jbe
psubsb
cwtl
or
inc
addr16
testb
xor
push
mov
out
inc
addr16
and
mov
add
addr16
jnp
call
pop
nop
dec
mov
pop
cwtl
push
addr16
jle
mov
nop
bound
pop
outsb
inc
inc
mov
je
andb
cli
rolb
addr16
in
adc
mov
sub
dec
test
imul
push
addr16
xchg
test
push
adc
adc
test
repz
cmp
cmp
and
mov
dec
sub
adc
ja
ret
call
xchg
out
add
nop
adcl
sub
xor
fdiv
imul
sbb
cltd
pop
mov
xchg
cmp
cltd
pop
mov
and
cltd
sub
and
cmp
and
inc
mov
xchg
mov
cltd
cwtl
pop
push
es
loop
sbbb
lret
inc
loop
cwtl
rol
inc
mov
inc
loop
addb
adc
dec
outsl
jno
add
cltd
mov
xor
nop
mov
sbb
adc
xor
and
pop
sbbb
pop
push
sub
pop
mov
adc
or
sub
sbb
and
cwtl
test
inc
add
or
nop
cltd
adcb
pop
ljmp
mov
data16
sub
push
adc
fsubs
leave
mov
mov
pop
popa
test
add
cmp
xlat
addb
add
mov
xchg
jmp
outsb
adc
jo
mov
dec
fs
scas
pop
mov
push
mov
test
and
xlat
mov
pop
fiaddl
rolb
push
add
adcb
aad
rol
enter
mov
mov
push
shlb
test
add
pusha
mov
into
stos
adc
pop
mov
pop
mov
jo
inc
mov
mov
or
mov
jo
mov
loopne
mov
and
fisubs
cmp
cmp
inc
call
inc
inc
scas
push
add
loopne
inc
push
shlb
test
pop
add
or
lret
bound
jo
pop
ss
lea
push
add
adc
cwtl
fs
mov
pop
addb
xor
and
inc
aad
cmpb
adc
push
adc
inc
or
mov
andb
push
xchg
mov
add
stos
add
rcrl
imul
movsb
sarl
mov
jnp
and
movsb
inc
mov
sbb
jnp
push
pop
fcoms
or
addr16
and
test
cs
pusha
or
push
mov
pop
mov
mov
pop
enter
and
cmpl
add
sbbb
je
and
nop
outsb
mov
pop
push
pusha
mov
mov
sbb
push
add
jnp
popa
mov
lock
and
xor
push
pop
xchg
pop
push
add
aam
mov
sub
sarb
loope
sub
not
mov
jo
sbbb
inc
xor
movsl
hlt
pop
xchg
xchg
xchg
xchg
out
sbb
xor
xchg
xchg
xchg
js
push
xchg
xchg
xchg
xchg
pop
inc
dec
dec
cmp
cmp
pop
pop
inc
pop
mov
nop
mov
pop
bound
push
call
inc
mov
adc
pop
testl
jle
mov
je
inc
pop
lds
fldl
loop
adc
and
or
pop
call
enter
xorl
pushf
bt
gs
push
jo
nop
rorb
movsl
addb
dec
push
cmp
mov
cmp
in
xorl
jno
cmpsb
test
ja
mov
rolb
add
int3
lods
out
jl
xor
pop
dec
mov
fistpl
sbb
std
sub
push
adcb
outsl
cmp
push
dec
push
push
subl
inc
cmpsl
add
sub
xchg
inc
ds
or
jnp
cmpb
aas
mov
xlat
cmpsb
orb
cmpsb
mov
pop
test
pop
fstpl
test
push
pop
push
xchg
pop
int3
fdivl
mov
test
call
sub
nop
das
pop
xchg
popa
push
push
or
dec
sbb
pop
int3
jns
cwtl
pop
inc
fdivl
fmull
add
xchg
cwtl
pop
lods
lret
call
xchg
inc
shlb
jo
pop
or
mov
pop
mov
fidivl
sahf
adc
push
mov
dec
lock
inc
cmpb
mov
pop
test
mov
mov
pop
push
adc
int3
dec
fmul
jns
mov
inc
sbb
or
jne
pop
sbb
or
fcmovu
fmuls
inc
bound
repnz
add
sbb
enter
push
or
clc
jecxz
adc
pushf
dec
test
movb
nop
loopne
dec
test
sbb
dec
push
repnz
inc
nop
scas
mov
or
add
or
rclb
push
shrb
jbe
shr
in
inc
nop
push
xor
adc
daa
lock
roll
pop
enter
pop
push
cltd
loopne
mov
sbbb
or
pop
arpl
mov
or
cltd
or
push
mov
adc
sub
push
cltd
pop
inc
xor
aas
cltd
pop
sub
xchg
mov
inc
sub
xchg
cld
push
dec
mov
mov
xor
mov
adc
popf
fldl
xor
and
mov
xor
push
enter
dec
inc
dec
inc
cltd
inc
ljmp
mov
repnz
fdivr
loope
fmull
cmp
lahf
mov
mov
pcmpgtw
add
and
arpl
mov
leave
lret
fsubrl
addb
sbb
mov
jo
cmpsl
rolb
cmp
mov
and
mov
mov
outsl
adc
call
adc
call
and
mov
shrl
xchg
xor
popf
mov
stos
cmc
mov
xchg
lea
add
xor
call
sub
mov
xchg
and
mov
xchg
je
mov
inc
pusha
jge
push
je
subl
loopne
mov
push
and
cmpsl
mov
andl
and
sub
hlt
inc
inc
icebp
sbb
or
enter
adc
and
push
cmpb
jl
cmpsl
pop
jmp
test
xchg
xchg
pusha
movsl
inc
jno
sbbl
dec
sbb
push
lret
pop
adc
or
inc
pop
add
or
lods
loop
push
arpl
mov
loopne
in
nop
pop
js
jne
xchg
add
test
pusha
or
test
xchg
xor
sub
pandn
mov
insl
inc
cltd
inc
sbb
cmp
inc
xchg
jecxz
xchg
pop
pushf
push
cmpsl
ss
inc
xchg
push
fdiv
shrb
push
sbb
out
imul
xor
mov
hlt
xchg
pushf
lods
dec
faddl
movsb
adc
jae
daa
mov
xchg
mov
mov
out
xchg
push
xchg
adc
test
add
or
dec
sbb
xchg
or
dec
sbb
xchg
push
dec
add
sahf
pop
push
push
fwait
js
into
xchg
lret
add
dec
js
sub
mov
adc
sarl
sbb
sbb
shrl
arpl
adc
mov
or
mov
fadds
imul
nop
xchg
inc
xor
rolb
push
out
mov
mov
xchg
xchg
dec
seta
dec
xchg
dec
mov
mov
shrl
je
xchg
adc
xchg
inc
xor
mov
xor
dec
xchg
int3
daa
xchg
jo
imul
ljmp
pusha
mov
mov
or
dec
aaa
xor
inc
xchg
movsl
fwait
mov
xchg
es
punpcklbw
or
jmp
call
xchg
mov
je
xchg
data16
add
frstor
sub
icebp
fs
lret
pop
sbb
test
movsb
icebp
jnp
in
add
inc
add
xor
int
sub
xor
xchg
daa
mov
int
and
adc
adc
sbb
int
push
xor
insb
xor
mov
aaa
mov
loope
stos
adc
int
or
mov
int3
leave
call
adc
push
int
mov
jb
out
sti
mov
das
push
in
mov
push
int3
pop
insb
push
scas
inc
push
iret
fxch
stos
rcl
dec
pushf
inc
lea
xorl
inc
sbb
inc
sbb
cmp
dec
lret
imul
aas
fimull
arpl
mov
inc
or
test
or
jb
fistl
stos
add
fildl
dec
push
out
xor
fistl
xchg
xor
idivb
call
sbb
add
enter
jb
xbegin
xchg
fnsetpm(287
cmp
mov
xchg
mov
nop
fisttpl
test
cli
test
gs
iret
fildl
ret
pop
and
pop
xorb
fistl
les
stos
add
xchg
lret
pop
ljmp
cmpsl
inc
or
inc
fildl
fisttpl
sbb
fstpt
repz
mov
sub
adcb
sbb
mov
imul
aaa
out
jns
adc
jno
rcrl
fildl
fldt
call
scas
call
jecxz
ljmp
in
fisttpl
outsb
sbb
rolb
fbstp
cmp
or
test
rolb
add
jo
xchg
xor
inc
popa
mov
addl
pop
push
loopne
aaa
fnstsw
mov
cmpsb
mov
fucomip
in
fs
xor
leave
roll
push
push
cli
lock
iret
loope
sub
inc
daa
xor
int3
push
dec
cmp
mov
mov
sub
and
or
add
in
mov
in
fdivrl
and
das
das
les
in
in
test
mov
in
mov
jno
in
in
imul
in
dec
mov
xor
and
cmp
inc
push
add
sbb
and
loope
mov
nop
add
mov
stos
mov
lahf
mov
cmpl
gs
push
jb
mov
and
cmp
inc
mov
nop
sbbl
mov
enter
add
in
pop
cmp
mov
jb
cmpl
cmp
inc
push
pushf
mov
sbb
and
jnp
jo
gs
pop
mov
pop
cmp
inc
cmp
mov
or
mov
push
or
enter
mov
inc
mov
sbb
mov
xchg
data16
jp
in
mov
mov
imul
inc
adc
adc
movsb
sbb
xor
push
lcall
sbb
cmp
dec
cli
mov
in
sbb
cmp
xchg
xchg
cmp
cmp
mov
cmp
inc
inc
mov
movsb
inc
mov
dec
leave
xchg
out
jl
dec
dec
push
dec
inc
dec
popa
arpl
add
xrelease
or
and
inc
dec
aam
stos
or
add
mov
inc
xor
adc
add
pop
js
and
adc
rolb
sub
xchg
cmp
stc
jb
dec
repnz
push
inc
jnp
adc
ret
inc
enter
inc
inc
pop
mov
call
and
dec
leave
inc
mov
icebp
or
or
scas
cmpb
insb
mov
inc
ss
add
inc
add
and
push
push
xchg
add
int3
jmp
in
fists
inc
add
mov
cwtl
xchg
xchg
xchg
inc
add
dec
add
mov
add
dec
pop
add
jg
js
and
adc
gs
es
cmp
jg
insb
add
cs
jg
and
inc
insb
add
push
insb
add
add
xor
addb
mov
and
push
jg
jbe
mov
sbb
sub
fdivp
mov
add
sarl
outsb
mov
aaa
adc
add
sub
adc
mov
loopne
jg
pop
mov
rcrb
repz
mov
loopne
jg
push
add
push
jg
add
or
or
mov
jg
jo
and
push
or
add
or
or
xor
pop
js
add
jmp
aaa
dec
push
and
adc
jle
insb
add
xchg
jns
xor
jnp
int3
push
jns
iret
scas
ljmp
dec
or
push
mov
and
sbb
jns
sub
push
dec
movsb
lcall
jns
and
adc
shrl
int3
jns
add
xchg
test
add
cwtl
jns
mov
mov
in
mov
pusha
out
call
js
jns
into
mov
pop
add
shrl
int
jns
shrb
jb
add
lcall
mov
pusha
jns
dec
mov
shlb
mov
loopne
jns
add
pop
out
xchg
add
mov
inc
or
cld
ljmp
add
pop
cld
iret
push
add
jp
js
mov
loopne
jns
adc
pop
adc
lock
subl
flds
jns
sti
push
cmp
addr16
jbe
push
xorb
push
int
pop
sbb
dec
adc
mov
fcoml
lods
out
vpunpckldq
or
or
adc
int
add
pop
jns
jae
add
mov
add
sbbb
inc
push
call
or
sbb
inc
int
jns
sub
int3
push
cmpb
sbb
add
rclb
int3
push
adcb
jns
add
pusha
insb
add
jecxz
mov
jns
add
and
lret
xor
mov
mov
rorb
add
mov
sbb
fcmove
jnp
push
popa
nop
jbe
xor
add
push
jnp
push
inc
mov
fnstcw
outsl
sub
fsubl
sarb
jno
pop
add
int
add
add
scas
cld
incb
xlat
mov
std
push
sbb
inc
test
aam
add
jg
addr16
inc
adc
inc
sbb
mov
add
push
or
inc
xor
jns
push
push
sbbb
loopne
int3
jns
mov
jns
or
jns
js
pop
xor
cmp
rcl
data16
or
lret
call
xor
aam
jbe
flds
jns
aad
sbb
or
jo
or
fnstcw
stos
flds
pusha
cmpsb
jns
sbbb
or
jns
ret
arpl
imul
add
push
pusha
jns
push
call
int3
push
jns
mov
repz
jns
add
jns
int3
cmpsl
push
mov
add
xor
pop
sahf
addb
test
dec
loop
mov
mov
repnz
gs
jns
sbb
jo
jns
and
fldcw
lods
push
mov
jns
lods
mov
add
int3
push
addb
jns
adc
stc
xor
fwait
add
jae
mov
repnz
or
mov
jno
adc
xor
insb
jns
outsb
or
push
add
cmpb
addr16
add
loope
inc
sub
dec
sub
ja
xor
add
sub
loope
mov
jns
cwtl
sub
sbb
shlb
jns
into
push
orb
ja
addb
jmp
data16
inc
push
adc
insb
ja
pushf
pop
push
test
movsb
add
movsb
and
and
or
and
fcoml
dec
test
enter
dec
cmpsb
shrb
orb
jnp
cli
lods
mov
call
push
dec
andb
dec
xchg
rclb
mov
jmp
adc
adc
lret
cld
mov
popf
in
xor
xchg
rolb
adc
ljmp
scas
lret
mov
arpl
or
inc
ret
sub
sbb
ret
pop
fimull
dec
inc
push
mov
cmpsb
ljmp
add
test
stc
mov
loopne
push
testb
push
sahf
out
sahf
sub
mov
jns
add
sbb
ss
repz
push
pop
outsb
or
cmp
xchg
test
enter
cmp
jl
or
push
ds
pop
iret
repz
jb
mov
cmp
clc
push
stos
adc
jns
out
cmp
jbe
jns
out
test
into
call
add
push
sbb
xor
fnstsw
out
pop
insb
addb
jns
ret
push
cmpsb
add
jb
push
dec
pop
xchg
jo
add
push
mov
push
lea
dec
fs
mov
xlat
sbb
scas
mov
push
push
mov
iret
repz
cmc
add
push
clc
mov
out
xor
lahf
dec
mov
add
mov
repz
clc
mov
mov
out
or
add
test
adc
das
push
adc
xchg
sbb
iret
repz
call
stc
sahf
out
or
mov
repz
test
push
and
cmp
repz
cmpb
sbb
jns
iret
jp
cmp
fs
aam
adc
mov
and
or
sbb
outsl
pop
adc
push
test
inc
add
jns
out
push
cmp
adc
repz
out
clc
xchg
in
loopne
iret
repz
fcom
int3
enter
iret
repz
mov
cmp
repz
iret
repz
mov
cmp
repz
jo
push
repz
pop
pop
push
push
iret
repz
dec
dec
inc
inc
cmp
cmp
repz
xor
adc
lcall
fmul
out
sahf
out
mov
sub
repz
add
pop
movsb
jl
cmp
repz
dec
inc
xor
jns
out
or
mov
shlb
mov
or
loope
cmp
int3
test
push
xor
cltd
ja
fwait
jg
push
add
lock
mov
push
cmpsl
call
or
stos
out
add
pop
add
push
aaa
xor
push
push
add
sub
or
and
xor
pushw
mov
es
enter
shlb
jbe
mov
mov
loopne
pop
or
iret
lds
sbb
daa
add
daa
aas
icebp
xchg
insb
xchg
add
ficoml
lods
push
daa
mov
xlat
push
mov
inc
add
outsl
sarb
and
mov
insb
jle
push
pop
cmpb
inc
pop
jbe
int
shll
jbe
add
dec
add
mov
cmpsb
mov
push
nop
adc
add
and
rol
fcomp
cmp
test
aaa
inc
pop
rorl
fsubl
xchg
xchg
push
pop
nop
cmp
push
scas
inc
fisttps
fmul
aas
inc
lahf
popa
jae
pop
inc
jg
dec
jle
enter
pop
xor
aas
sti
push
arpl
test
push
sbbb
mov
xchg
fsubl
push
clc
push
dec
int3
jbe
shll
sub
push
mull
mov
add
movnti
outsl
andb
outsl
test
jl
cmpsb
xchg
sub
mov
adc
shl
push
enter
push
inc
insb
pop
jne
bound
scas
outsb
cs
lahf
dec
outsl
jno
shrb
sahf
push
out
out
pop
pop
movsl
push
add
movsl
imull
pop
rorl
aas
je
lock
data16
rclb
jnp
daa
dec
cmpsl
mov
leave
addb
lret
scas
mov
push
lret
mov
jb
push
pop
xor
push
arpl
add
outsl
insb
add
mov
and
jb
subl
sbb
sbb
lret
add
push
add
lret
xor
lds
arpl
outsl
and
or
lret
or
fwait
jo
pop
adc
xor
sub
shrl
int
incl
dec
add
sub
or
rcrl
lods
mov
xchg
lcall
push
test
addr16
or
sbb
or
xchg
xor
push
imul
lahf
mov
pop
xor
push
sub
sub
sbb
sbb
and
arpl
add
or
adcb
sbbb
data16
mov
push
orb
pop
pop
mov
or
rcrl
or
sbb
xor
add
insl
loop
mov
insl
push
add
mov
sub
aaa
daa
sub
add
mov
inc
sahf
daa
adc
xchg
movsb
xchg
jle
pushf
cwtl
jns
out
xchg
nop
mov
je
pop
push
pop
dec
inc
cmp
repz
cmp
xor
repz
repz
and
sbb
stc
cmp
sbb
add
xchg
hlt
xchg
iret
repz
push
enter
repz
lods
test
mov
mov
jl
je
repz
push
insb
push
fs
push
dec
mov
repz
adc
in
xchg
cmp
repz
mov
repz
repz
sahf
out
fidivrs
jo
pop
inc
cmp
iret
cmp
and
adc
lock
jns
out
loopne
mov
sahf
out
insb
pop
dec
add
and
mov
pusha
pop
cmpsl
dec
push
xchg
outsl
add
test
call
xor
mov
stos
or
orl
and
add
push
adcl
jnp
lds
pop
pop
cs
clc
mov
mov
jg
cld
pop
enter
or
lcall
xchg
sub
push
push
shlb
or
xchg
inc
inc
push
xchg
pop
push
enter
mov
jns
add
cmp
call
fnstenv
fiaddl
sti
inc
xor
rcr
xor
xor
cmpsb
dec
sar
dec
cmp
ss
ss
nop
ss
test
icebp
aaa
sub
ss
jg
ja
sbb
cmp
cmp
aas
cmp
fstpt
push
ret
icebp
cmp
xchg
push
es
lret
cmp
cmp
cmp
int
dec
test
ret
mov
cmp
add
adc
xor
cmp
cmp
pushl
ljmp
enter
aad
fmull
ljmp
ds
aas
pop
aas
and
sub
xor
aaa
into
ljmp
popa
push
data16
jbe
jnp
cmpl
loopne
xor
movsb
aas
mov
sarl
div
dec
add
inc
fistps
jl
xchg
cmpsb
mov
xor
add
xor
rcrb
xor
xor
mov
mov
xor
xor
into
das
xor
faddl
scas
cmp
xchg
mov
cmp
xor
inc
rcr
add
xor
xor
jmp
outsb
cmp
mov
pushf
xor
xor
xor
xor
xor
or
jmp
xor
xor
xor
dec
mov
ss
mov
ss
lods
ss
pushl
sbb
xchg
mov
pop
ret
loop
cmp
cmp
add
out
xchg
cmp
xchg
sarb
das
xorb
mov
sub
aaa
leave
clc
xor
xor
cmp
cmp
cmp
sarl
push
outsl
cmp
cmp
shlb
aaa
mov
cmp
cli
outsb
cmp
popa
cmp
cltd
idivb
adc
clc
fdivrl
in
cmp
dec
push
and
cmp
cmp
push
mov
inc
cmp
hlt
cmp
inc
ds
ds
ds
and
jg
cwtl
xchg
xor
xor
xor
xor
loope
xor
push
xor
pushl
std
xor
xor
xor
xor
inc
lds
xor
xor
sub
mov
repnz
dec
ss
bound
xorl
ss
es
or
ss
jecxz
cmp
ss
ss
aaa
or
push
add
fbld
push
xor
aaa
addr16
push
sarb
adc
push
cmp
push
out
xchg
jno
cmp
pop
cmpsb
test
mov
mov
dec
sarl
fdivrs
cmc
outsl
push
in
jmp
repz
cmp
and
or
jg
cmp
cmp
pop
push
mov
dec
sbb
jno
jns
jle
add
cmp
cmp
fcmovb
cmp
call
add
insb
cmp
cmp
cmp
cmp
cmp
cmp
push
mov
push
cltd
mov
jno
xor
insl
pop
rorl
dec
aas
outsb
and
jg
inc
cmpl
aas
ret
aas
iret
dec
js
arpl
xor
into
xor
xor
jbe
jp
xor
clc
decl
xor
xor
xor
xor
xor
jo
in
pop
xor
fnsave
decb
xor
push
or
cmp
movsb
adc
jecxz
out
xor
xor
adc
push
fs
aad
ss
ss
arpl
stos
add
ss
ss
add
sbb
outsb
adc
jne
jle
sbb
pop
decb
sbb
sub
ret
clc
in
cmp
cmp
cmp
cmp
cmp
cmp
or
cmp
cmp
aas
cs
dec
cmp
arpl
outsb
ret
gs
cmp
cmp
scas
in
inc
or
pop
adc
or
cmp
sub
mov
leave
clc
aas
push
fbstp
divb
data16
mov
ss
xor
xor
xor
xor
xor
fbld
sbb
xor
xor
xor
xor
xor
xor
pushl
xor
xlat
xor
ja
mov
pushf
ss
mov
push
add
into
and
xor
leave
test
pop
loop
cmp
pop
cmp
lcall
cmp
mov
jmp
std
cmp
mov
ds
imul
mov
lret
aas
inc
xor
jl
jecxz
or
xor
or
out
sub
jg
cmp
cmp
dec
cmp
bound
stos
cmp
aad
dec
pop
sbb
cmc
xor
cmp
push
xor
xor
js
cmpsb
ss
adc
sbb
daa
xchg
icebp
pop
jge
xor
ss
aaa
dec
aaa
pop
aaa
fs
or
jae
pop
pusha
out
rcl
scas
cmpsb
xor
xor
and
cmp
test
repnz
adc
mov
pop
cmp
ret
jb
dec
sbb
adc
mov
mov
popa
je
call
call
cld
cmp
push
int3
mov
add
jno
xchg
insb
jb
xor
push
adc
sub
push
orb
ja
push
mov
fsubrp
xor
fbld
xor
adc
adc
sbb
sbb
rclb
mov
cmp
inc
xor
mov
adc
xor
push
pusha
xor
xor
push
lret
es
lock
lret
mov
mov
nop
xor
sahf
popa
sub
xchg
mov
cmpl
fdivs
fmuls
xor
ss
lock
xchg
xlat
jbe
xor
test
jp
cmp
push
xor
fs
sbb
sahf
outsb
jo
bound
sarb
jo
push
add
dec
add
pusha
jo
fmull
mov
out
shl
ljmp
sub
sbb
pop
rclb
xor
xor
xor
xor
xor
dec
fcomip
push
add
xor
push
sbb
std
xor
fs
xor
arpl
cmpsb
sbb
pusha
xor
xor
aas
mov
in
call
xor
xor
add
xor
loop
add
lahf
adcl
sbb
xor
aam
pop
hlt
cmp
inc
xor
xor
xor
xor
xor
pop
xor
mov
pop
jo
je
js
jl
andb
paddd
jge
pushf
xor
bound
xor
xor
xor
xor
into
shlb
addl
inc
orl
mov
lods
ljmp
sbb
mov
movb
or
push
incl
lods
and
fdivr
add
inc
cli
xor
ja
movsb
pop
cwtl
add
add
add
add
or
pop
pop
push
or
or
or
or
enter
or
adc
adc
push
adc
or
pop
sbb
adc
adc
adc
add
push
lods
fnsave
pop
adc
adc
add
add
and
inc
and
test
add
xor
cmp
imul
add
add
pushl
inc
push
adc
pop
and
xor
inc
mov
adc
xor
cmpb
and
sbb
pop
dec
add
adc
mov
test
pop
ja
lods
test
or
xorl
cwtl
dec
sub
lods
xor
arpl
das
adc
or
and
cmp
or
or
scas
cmp
adc
mov
adc
pop
popa
jno
and
adc
mov
or
xor
adc
loope
icebp
cwtl
and
mov
mov
adcb
sub
or
js
sbb
es
or
mov
lds
cld
cli
and
mov
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
jmp
mov
bound
pop
lahf
mov
movsl
jecxz
cli
pop
mov
jg
out
stc
or
xchg
jg
or
insb
sub
addr16
out
data16
decl
sbb
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
mov
in
mov
orb
int3
lcall
mov
mov
js
pop
mov
popl
movb
xchg
sbb
scas
adc
lcall
xchg
mov
xor
lods
scas
xchg
test
aam
and
sbb
sarl
and
fcom
inc
push
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
jg
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
lock
ljmp
sahf
loope
rorl
mov
int
arpl
push
out
or
adc
push
sahf
pop
clc
push
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
pop
jge
jmp
sbb
add
roll
mov
mov
sub
pop
mov
scas
sbb
arpl
dec
jp
push
gs
jg
icebp
idivb
hlt
push
add
stc
loope
mov
shrl
adc
icebp
testb
mov
ljmp
inc
gs
sub
jno
pop
sub
jg
pop
aam
ljmp
inc
sbb
paddb
inc
mov
loope
pushl
adc
push
lock
lods
jp
testb
sbb
cmp
lahf
dec
sbb
sbb
sbbl
into
andl
aas
loopne
mov
adc
aaa
xchg
in
add
inc
adc
loope
fisttpll
je
hlt
es
aas
std
cli
push
push
push
idivl
jg
inc
cmp
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
mov
stc
mov
mov
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
incb
aas
sti
punpckhbw
cmpsb
orb
mov
lock
jmp
xchg
pop
clc
pop
fistpll
xor
movsb
add
lea
jg
jmp
lock
std
xorb
jg
aad
adc
ret
das
ljmp
sar
pop
pop
shlb
out
sarb
sbbl
jno
or
jg
sarb
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
pushl
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
adc
push
pop
jns
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
fdivrp
call
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
pop
cld
lcall
mov
stos
dec
lods
xor
jg,pn
cmpsl
addr16
jg
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
dec
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
add
push
ja
xor
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
incl
lods
addb
add
jae
shrb
shlb
out
aas
stc
add
inc
and
jmp
pop
gs
jno
fidivrl
mov
call
imulb
cld
xor
repz
jge
cmp
fmull
enter
jecxz
scas
sub
decl
hlt
sub
mov
dec
incb
fisubrl
aas
mov
sti
sbb
push
inc
or
pop
jg
add
iret
mov
jg
mov
aad
test
mov
xchg
movsb
mov
iret
push
jbe
jmp
sar
push
sbb
stos
icebp
pop
incb
jno
adc
push
inc
jecxz
std
outsl
sti
push
sbb
sarl
adc
loopne
and
rorl
mov
jg
push
imul
dec
push
in
aas
mov
fisubl
cmp
fsubrl
lock
and
incl
sbb
clc
xchg
adc
jmp
or
and
fadd
das
push
mov
loope
aas
push
rcrl
ds
mov
jb
fistpl
adc
call
jno
inc
sbb
addr16
in
pop
sbb
arpl
daa
std
or
sbb
ret
incb
popf
push
loop
sbb
or
imul
loop
inc
xor
dec
xor
fsubr
fistps
lds
fidivrl
jg
mov
pop
add
dec
mov
sub
jge
xor
stc
clc
ja
lahf
les
sbb
sbb
cld
addl
loop
pop
inc
sbb
mov
lahf
outsl
int3
push
sbb
pop
lods
movsl
test
sti
jle
xchg
popa
out
out
clc
pop
ficompl
inc
test
in
jge
popa
push
test
fcomip
pushl
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
out
std
rclb
lcall
shl
cld
mov
test
mov
pop
jg
pop
shrb
rcl
jg
adc
in
pushl
pop
rcr
dec
mov
gs
pushf
lea
jp
jnp
jecxz
lcall
lds
push
pop
adc
imul
or
ret
outsb
inc
pop
xor
rorb
and
add
cmpsl
pushl
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
jnp
pushl
and
xchg
fidivrs
jg
inc
push
clc
insb
test
aas
repz
sbb
lock
mov
jmp
out
sbb
aaa
clc
push
std
mov
jl
icebp
or
xchg
lea
mov
xchg
pmullw
mov
out
movsb
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
rcr
hlt
mov
inc
out
pop
or
or
dec
ss
mov
or
repnz
clc
dec
cmc
mov
jl
call
std
testb
pop
in
cmp
jg
aaa
inc
jmp
mov
pop
lock
jmp
hlt
dec
mov
adc
xlat
inc
aas
mov
jg
mov
cmp
or
addr16
sbb
cld
daa
jp
std
adc
loope
fldt
cltd
or
mov
ret
nop
cmp
das
test
mov
lock
pop
pop
div
cld
idivl
scas
pop
or
and
loope
lock
fidivl
jmp
in
jg
push
jge
fbstp
out
xchg
add
out
sub
cmovno
push
fisttps
sbb
fbstp
push
xor
es
push
or
jge
out
adc
insb
cmpsb
cmp
call
xor
decb
add
decb
sbb
mov
xlat
cltd
add
jb
mov
inc
add
dec
lds
std
fcomip
xchg
dec
dec
inc
sbb
xchg
pusha
dec
das
js
mov
aas
icebp
ret
ror
sbb
sbb
inc
adc
push
pushf
adc
aas
pop
clc
loope
loope
push
or
jp
dec
add
xlat
fimull
je
xchg
fldenv
iret
fildll
fdivrl
xchg
lcall
decb
mov
sti
push
push
jo
sarl
pop
out
jg
jno
ret
dec
inc
sub
cmp
ret
pop
dec
arpl
out
inc
push
decl
addr16
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
jmp
outsl
jmp
std
mov
daa
jmp
fcoml
xchg
add
test
pushl
add
pop
stc
push
dec
out
fstpt
mov
enter
bound
push
inc
leave
push
add
add
push
sti
pop
inc
add
and
xchg
push
push
nop
mov
mov
iret
and
dec
add
jge
push
and
stos
sbb
xor
sub
aaa
popa
aaa
jmp
insl
mov
xor
cmp
rolb
incl
xchg
incl
and
daa
ss
ja
jo
mov
in
fidivl
push
jg
add
pop
sub
sbb
js
sbb
mov
add
pop
dec
mov
mov
addb
inc
test
adc
mov
xchg
cmpsl
adc
scas
lds
sbb
jle
vmread
add
bswap
shll
jns
mov
pop
and
popf
jno
mov
jnp
xchg
movsl
fwait
insl
adc
mov
xchg
dec
scas
imul
push
and
cs
push
movsb
push
movsb
jle
dec
jge
scas
push
stos
push
and
push
test
and
imul
sbb
pop
add
scas
dec
lods
push
mov
pop
sbb
add
shr
mov
add
push
ds
les
push
mov
ljmp
add
insb
or
lret
imul
imul
add
push
sub
lret
mov
or
mov
jbe
fxch
fdivs
dec
mov
push
mov
stos
pop
stos
mov
lock
jb
ss
add
jo
mov
push
shll
insl
fcomi
pop
add
outsl
push
shll
fidivrl
iret
outsb
or
mov
outsb
pop
push
ret
je
fidivrs
out
add
in
cmpb
mov
xorb
ljmp
add
in
movsb
push
add
mov
sbbl
rcl
jno
mov
push
divb
add
jne
push
aam
push
loopne
ret
add
mov
sub
fidivs
push
pop
dec
add
ja
jo
popf
push
data16
inc
xchg
jge
pop
add
push
push
shlb
lret
mov
int
stos
aas
add
ja
push
push
cmpb
add
ja
push
jge
fcmovnbe
jbe
xlat
ja
js
push
jns
sub
in
cmpsb
push
jp
jp
inc
push
fidivrl
sarl
push
lods
fmul
ja
fldl
ret
in
adcb
nop
sub
xchg
sub
xchg
mov
fstp
in
xchg
sub
xchg
xor
xchg
fcmovnbe
je
push
setbe
xor
mov
ss
aaa
push
lcall
push
cmp
in
flds
pushf
cmp
popf
xchg
popf
aas
fimull
inc
push
lahf
inc
lahf
mov
mov
push
push
jecxz
push
imulb
fisttps
movl
out
push
hlt
iret
repz
clc
stc
cli
sti
cld
std
xor
inc
jo
add
mov
jae
int3
data16
add
imul
data16
add
pop
add
pop
add
add
test
add
jl
mov
mov
push
pusha
out
or
or
outsl
or
or
mov
lods
stos
test
test
or
push
scas
pop
or
or
pop
pop
insb
cmpsb
movsl
pop
adc
adc
lods
aaa
punpcklbw
add
pop
stos
femms
lods
lods
into
and
pop
push
scas
insl
in
push
fildl
scas
insl
lods
pop
pop
adc
cmp
roll
lods
adc
sbb
or
sbb
scas
scas
scas
adc
fwait
inc
scas
sbb
mov
mov
adc
int
and
xchg
push
mov
push
and
dec
adc
enter
and
dec
sub
pop
and
mov
and
mov
arpl
adcb
sub
dec
incb
mov
pop
sub
mov
pop
daa
mov
adc
sub
es
outsl
add
aas
cmp
dec
pop
cmp
sub
jbe
pop
aaa
cmpsb
add
mov
pop
mov
mov
xor
pop
or
or
add
divl
pop
insl
pop
pop
xor
mov
pop
das
push
cs
fwait
idiv
add
xor
das
pop
push
push
xor
adc
pop
push
ljmp
inc
dec
inc
das
inc
inc
xor
adc
push
xor
push
push
popa
jbe
cmp
jl
jge
pushl
xor
pusha
pop
pushw
dec
dec
incl
add
mov
mov
cwtl
sahf
mov
pushf
fwait
lcall
xchg
mov
mov
mov
inc
xchg
push
add
jle
je
push
bound
mov
adc
xor
jne
addb
je
jg
add
sub
cmovl
add
aad
fdivs
add
lsl
push
or
scas
aas
and
mov
mov
pop
push
dec
add
push
mov
sti
dec
and
cmpsb
push
mov
xor
xor
ja
push
ja
mov
push
jb
cs
xor
mov
pop
outsb
pop
jbe
dec
sbb
cmp
outsb
and
mov
xchg
jo
add
pop
push
inc
mov
cmp
mov
inc
inc
fildll
jg
xchg
jae
xchg
jp
inc
push
popf
inc
mov
aaa
add
fcmovnu
iret
cld
xchg
jno
lret
push
bound
mov
mov
popf
addr16
inc
inc
push
sahf
mov
insb
add
data16
xchg
outsb
add
xchg
xchg
pop
push
test
cmpsb
dec
push
or
movsb
jae
add
jb
shll
outsl
sar
add
add
mov
aad
imul
lcall
push
rep
mov
dec
push
add
ja
sahf
jbe
add
out
mov
sahf
push
add
add
ds
push
add
xchg
mov
jp
add
js
fmulp
cs
frstor
shrl
insb
imull
ja
outsb
push
outsl
ror
push
mov
pop
jns
lret
jno
add
jge
push
jg
fiadds
fisttpll
lock
mov
in
mov
xor
stos
bound
out
arpl
sbb
sahf
hlt
sahf
mov
jb
out
inc
mov
push
jle
or
jecxz
or
divl
jp
divb
fildl
adc
out
rcll
adcl
sbb
cmpsb
insl
incb
test
sbb
test
in
mov
push
xchg
nop
and
out
xchg
add
or
in
xchg
lock
sub
sub
fnsave
out
xchg
das
push
xchg
repnz
xor
fldt
sahf
xor
lcall
fbld
mov
addb
aam
jle
push
cmpsb
scas
jo
test
sahf
insl
or
inc
stos
pop
jbe
stos
into
shll
mov
lgs
int
insb
fiaddl
cmpsb
sarb
mov
mov
ret
jmp
add
addr16
and
rorb
add
add
test
xor
nop
add
negb
or
or
es
push
adc
mov
add
push
add
add
ds
add
scas
mov
mov
xor
ds
xchg
push
mov
mov
mov
testb
mov
mov
mov
mov
and
fildll
ds
mov
aas
and
imul
in
lods
es
aas
aas
cmp
cmp
aaa
add
ss
add
incl
imul
jle
cmp
repz
ds
jle
mov
mov
aas
adc
ds
xor
dec
sti
data16
out
inc
test
mov
ds
add
mov
pushl
lds
ds
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
mov
mov
mov
lcall
sub
sub
add
add
mov
add
add
dec
and
inc
mov
ds
push
push
push
push
push
push
imul
push
pop
push
push
push
imul
fs
das
pop
imul
jmp
nop
cltd
mov
mov
nop
test
insl
popf
mov
je
xchg
jns
jle
addl
jo
outsb
pushf
pop
mov
xor
lds
dec
lods
adc
shl
adc
push
addb
add
add
roll
aas
sub
push
push
add
cmc
repz
dec
xor
push
incl
aas
add
xchg
pop
cmp
test
add
mov
add
pushl
add
push
fnstsw
repnz
inc
add
addr16
add
xchg
pop
imul
push
in
lcall
or
mov
out
jns
or
jae
js
out
decl
into
xchg
add
mov
mov
test
pop
push
cmc
add
add
scas
insl
cmp
nop
sub
sub
xchg
push
mov
addr16
push
nop
sub
xchg
xor
xchg
xor
mov
fcmovnu
xchg
outsb
lcall
leave
jbe
idivl
fidivrl
shlb
iret
push
lret
push
test
std
into
adc
mov
imul
insb
ss
lods
xchg
add
test
jg
jle
jge
adc
sar
bswap
adc
dec
dec
dec
jmp
dec
dec
dec
add
pop
add
push
dec
or
adc
pop
in
cmp
adc
dec
or
add
push
jl
aas
jbe
dec
inc
add
or
pop
pop
cmovg
jle
stc
addb
inc
and
dec
and
aas
inc
inc
inc
adc
sbb
dec
add
dec
adc
inc
ds
call
cmp
aas
cmp
cmp
daa
and
sbb
sbb
lcall
and
add
dec
ss
xor
sub
sub
fcoms
cs
test
mov
add
mov
mov
mov
mov
fnstenv
mov
add
outsb
mov
push
add
sarl
push
add
test
test
roll
outsl
mov
cmpsl
add
mov
inc
sarl
orb
jmp
adc
mov
fstpl
incl
andb
outsb
sysret
mov
es
xor
dec
ret
jmp
sbb
lock
pop
inc
jb
hlt
cmovbe
push
or
push
jg
push
and
ja,pn
pusha
inc
add
int3
inc
sbbb
jg
sbb
ret
push
push
lds
add
out
cli
mov
xor
pop
cli
fists
adc
adc
and
addr16
test
mov
inc
xchg
jg
fdivrs
das
sti
jb
adc
mov
jle
sbb
sbbl
sti
add
xchg
and
jg
inc
and
inc
jg
pop
cmp
mov
inc
idivb
inc
cs
push
cld
jg
loopne
add
jle
in
and
cmpsb
std
ja
nop
pop
inc
add
adcl
and
std
dec
dec
mov
pop
jg
enter
jle
add
inc
pop
data16
enter
sub
xchg
mov
push
decl
add
add
add
jg
add
arpl
mov
jg
pusha
xor
sub
add
jg
push
pop
add
pop
mov
fsubs
sbb
inc
jmp
sbb
scas
incl
add
incl
repnz
mov
lret
imul
add
add
mov
adc
stos
push
add
pop
add
andl
rorb
push
data16
mov
sub
jg
rorb
inc
shrb
push
adc
inc
cmpsb
sub
inc
inc
pusha
cmp
and
push
ss
pop
mov
jg
cs
cmp
fisubrs
stos
mov
pop
push
stos
pop
stos
fisubrs
pop
pop
pop
add
daa
add
fstpt
aaa
pop
pop
add
outsb
mov
pop
jle
add
xor
stos
pop
inc
push
sbb
mov
or
add
test
push
dec
xchg
push
bound
ficompl
mov
fcmovnu
neg
das
pop
daa
push
arpl
sbb
inc
insb
pop
push
mov
xlat
out
incl
or
push
inc
iret
xor
lcall
pushl
daa
push
or
ljmp
sbb
rclb
inc
jle
jle
call
or
jmp
fnsave
idiv
fnstenv
add
push
jne
enter
pop
push
jbe
out
test
insl
push
jnp
push
jp
fdivrs
fisttpl
js
dec
jbe
pop
add
out
pop
xlat
lea
es
daa
fs
push
outsb
xor
push
ljmp
jle
jae
popf
rorb
inc
outsb
inc
test
mov
scas
ljmp
xchg
out
test
int3
ja
test
inc
cmpsl
xchg
mov
and
fiadds
mov
xor
push
mov
mov
push
sahf
inc
out
int
fstps
mov
xchg
insb
fwait
aas
popf
inc
push
pushf
cmp
dec
enter
cltd
mov
xchg
xor
xchg
xor
sub
sub
or
ss
cs
xchg
ss
mov
xor
test
push
call
mov
incl
jg
pop
fnsave
loopne
lcall
pushf
rolb
sahf
movb
xchg
pusha
enterw
dec
or
insl
cs
add
rclb
dec
xchg
push
int3
push
xchg
movb
xor
aaa
stos
test
clc
mov
add
add
xchg
push
mov
push
andb
adc
mov
push
adc
test
and
les
inc
pop
or
adc
insl
mov
negl
mov
mov
push
int3
mov
push
push
imul
mov
sbb
test
push
lock
cmp
test
dec
pop
cmp
icebp
hlt
incb
and
push
in
add
mov
push
add
sbb
dec
out
pop
and
mov
dec
push
mov
inc
xchg
dec
push
push
sbb
xor
inc
cmpsb
dec
add
testl
and
add
fdivs
adc
or
push
incb
xchg
adc
mov
or
mov
sub
daa
cld
pop
das
pop
push
shlb
cld
jmp
inc
dec
gs
inc
cmp
in
push
pop
daa
std
out
or
orb
or
lcall
or
push
lds
mov
test
ds
ljmp
or
push
les
jmp
xor
test
lcall
sub
decl
inc
inc
pop
decb
lea
and
lcall
sub
ljmp
mov
add
or
nop
mov
mov
in
inc
xchg
bswap
cltd
mov
adc
inc
pop
adc
mov
out
cmovs
loope
push
incb
adcb
adc
xor
mov
iret
call
mov
mov
adc
xchg
or
add
sar
pop
sti
nop
push
cmp
std
decl
xorl
decl
inc
push
add
and
cld
pop
stc
pmulhuw
and
push
call
jg
sub
ret
movsb
and
loop
roll
sub
nop
call
decl
jmp
pushl
pop
fcmovbe
pop
imul
pop
inc
xorps
and
addr16
mov
icebp
sahf
int
push
shll
roll
mov
push
dec
dec
sahf
ret
decl
jnp
xchg
push
adc
jmp
dec
jnp
fldt
lahf
inc
inc
push
inc
mov
in
fiaddl
inc
pop
mov
out
ss
sahf
movsb
dec
push
stos
push
popf
inc
dec
xor
fldenv
aam
imul
push
add
and
sub
xchg
push
out
push
shrb
jmp
shrl
outsb
shll
xchg
mov
es
push
jb
notb
push
iret
insl
pop
dec
cmpsb
cmp
daa
outsl
pop
imul
push
push
push
sub
call
nop
mov
dec
in
imul
pop
int
repnz
and
push
jmp
pushf
cmp
aas
decb
cwtl
xor
push
inc
push
xchg
jp
in
cltd
push
push
aaa
push
lcall
fwait
dec
xchg
push
xchg
es
xchg
xchg
and
push
sub
aam
xor
scas
adc
inc
jmp
das
xor
and
push
add
test
std
faddl
inc
fstpt
push
jnp
jp
aaa
int
cmp
or
jl
shrb
jge
jg
es
jmp
mov
fidivrl
push
dec
push
dec
repnz
repnz
jae
aaa
fbld
pop
fidivrl
push
mov
jnp
jge
push
leave
xor
add
int3
outsb
nop
negl
mov
mov
stc
sbbb
xchg
push
inc
outsl
enter
lahf
push
adc
adc
fnstsw
imul
jg
or
lahf
dec
es
xchg
mov
addl
orb
mov
inc
and
xchg
out
push
sub
iret
out
mov
cli
sahf
mov
push
jbe
clc
push
idiv
ja
mov
push
jb
sub
jg
mov
mov
cld
lock
ja
daa
jno
sub
jg
mov
icebp
in
or
mov
jg
je
add
filds
jg
mov
ja
stc
cmp
jns
mov
es
mov
xchg
aaa
add
test
and
mov
jbe
jg
dec
in
rorb
or
movsb
addr16
mov
dec
and
jge
inc
stos
nop
sbb
decl
mov
push
fsub
pop
push
push
dec
lahf
inc
inc
push
int3
decl
and
mov
fidivrl
arpl
clc
xor
nop
cmp
mov
push
pop
jbe
nop
fimuls
pop
push
pop
or
test
mov
and
dec
lcall
push
or
jns
mov
push
mov
popf
fldcw
in
sbb
in
sbb
xchg
mov
pop
sti
adc
loop
adc
xchg
out
sbb
loope
and
lret
jg
out
mov
test
add
push
inc
cmp
jp
add
inc
or
lahf
xlat
movl
and
push
pop
out
adc
mov
dec
cmp
push
xchg
call
call
or
lcall
add
inc
lahf
orb
push
lret
adc
or
adc
sarb
es
sbb
push
jmp
jae
sbb
into
pop
push
into
mov
add
push
sbb
push
or
movsb
imul
or
sbb
outsb
or
push
sbb
nop
inc
push
push
and
or
test
shlb
les
adc
ss
mov
add
js
dec
and
gs
jo
cltd
jp
ret
add
sub
xor
jnp
or
shll
ljmp
pop
cwtl
fisubrl
lret
ret
jl
xlat
push
dec
add
fiadds
mov
sbb
xchg
insl
lock
cmpsb
and
and
jo
das
test
test
sbb
add
imul
or
pusha
popf
dec
pop
push
cmpsb
outsl
add
push
cmp
in
push
imul
test
add
and
add
stos
ss
add
sbb
push
xchg
adc
inc
roll
fstpl
ss
cltd
mov
dec
cmp
in
sbb
push
popa
shlb
xor
lret
xchg
lods
or
xchg
dec
movsl
test
push
ja
inc
add
pop
add
push
mov
aam
pop
mov
clc
pop
pop
gs
add
sbb
add
aam
add
cmpsl
test
cmpsb
push
pushf
cmpsb
ret
inc
push
inc
les
add
add
and
xchg
in
sbb
shrb
jo
xor
dec
push
outsl
or
in
push
divl
and
test
lret
setb
ljmp
insb
pop
dec
fiaddl
pop
popa
incl
sub
sarb
dec
inc
inc
or
in
insb
jne
add
lods
cmpsl
addr16
test
dec
sbb
cmp
cmp
xchg
pop
adc
adc
inc
dec
xor
and
adc
cmpsb
push
insb
push
notl
xchg
push
or
roll
mov
inc
xor
add
inc
sti
popf
xchg
add
xorb
popa
xchg
aad
pop
pop
pop
pop
cmp
adc
add
xor
pusha
dec
add
negb
mov
jo
je
push
dec
in
sub
mov
xchg
sbb
sbb
icebp
lahf
push
lods
add
xchg
mov
sbb
dec
sub
lds
inc
aam
nop
sbb
dec
outsl
inc
or
or
xchg
add
or
pop
adcl
sbb
push
xor
dec
sub
sbb
xchg
jb
dec
push
add
jmp
add
jo
jo
jne
shl
inc
je
lods
jmp
adc
inc
iret
add
and
cmp
sbb
pop
and
lcall
icebp
popa
and
pop
test
add
sbb
xor
push
cmp
shll
imul
mov
add
sub
inc
fsub
sub
inc
cwtl
xor
fbstp
cltd
loopne
push
jae
xor
or
inc
push
pop
sub
mov
mov
nop
jne
shrb
das
cmp
imul
and
and
pop
test
pop
inc
and
sub
inc
stos
and
mov
mov
cmp
and
push
jne
inc
pop
or
ds
outsl
jae
repnz
loop
outsl
xchg
mov
les
mov
xor
mov
test
cwtl
mov
movsl
pop
fisubs
or
xchg
mov
jne
or
add
das
sub
gs
test
lds
mov
mov
cmp
xchg
lret
xor
sub
sbb
aaa
and
aaa
xchg
test
mov
pop
imul
mov
insb
jne
arpl
ret
mov
mov
and
mov
es
lock
xchg
jo
pop
and
mov
sbb
and
inc
sbb
xchg
test
in
mov
inc
or
cwtl
pop
popa
inc
insb
push
popa
rcpps
js
lea
sbb
push
jb
inc
inc
inc
add
add
in
ljmp
lds
mov
mov
ja
mov
inc
mov
insb
pop
aad
and
push
cld
sub
fldt
inc
fs
fwait
pop
and
jbe
mov
jno
cmp
dec
inc
add
movl
pop
sub
jg
pop
test
jns
lock
push
fldcw
xchg
shlb
test
test
aam
dec
std
xchg
adc
or
add
inc
lcall
and
loopne
mov
and
sbb
pop
and
clc
fwait
popa
inc
je
insl
dec
outsb
dec
std
pop
sub
jb
push
push
lcall
xor
mov
xchg
insl
repz
js
add
pop
add
add
sbb
mov
add
sbb
movsb
dec
adc
lcall
imul
imul
jl
push
jo
stc
push
es
pop
add
inc
add
shlb
add
and
sbb
mov
and
shlb
sbb
out
test
int
adc
pop
stos
daa
es
repz
mov
out
test
pop
shrl
add
imul
inc
insb
scas
cli
test
push
mov
outsb
xorl
sbb
cmpsb
xor
mov
movl
inc
jo
add
sbb
add
rcl
sarb
into
dec
mov
mov
pop
cmp
sti
mov
addl
dec
mov
mov
cmp
sbb
jge
xor
cmpl
push
xor
add
hlt
and
ret
push
mov
sbb
ud2
lods
jle,pn
mov
imul
ja
dec
pop
pop
pop
sbb
lret
inc
lock
sub
or
mov
jge
mov
popw
xlat
subb
outsl
adc
lock
mov
sbb
adc
imul
dec
jae
mov
addb
and
sbb
cmp
imul
insb
mov
push
cmpsl
inc
ret
sub
jbe
outsb
jbe
cmpsl
nop
pop
pop
adc
push
xor
and
mov
jbe
fldcw
outsb
ret
and
or
push
inc
fs
adc
fs
loopne
or
pushf
loope
cld
addr16
xchg
pop
imul
push
pop
push
mov
out
pop
jmp
arpl
mov
inc
cmc
inc
sbb
sub
push
mov
mov
xchg
mov
push
mov
push
jae
push
and
inc
cmp
push
test
push
out
test
in
push
xchg
cmp
daa
outsb
pop
or
roll
aas
scas
inc
sub
push
jne
xor
pop
or
fldcw
add
dec
adc
add
mov
fdivr
push
inc
inc
xor
jnp
cmp
xor
xchg
pop
sub
andl
or
cmp
jo
pop
dec
mov
cmp
and
outsb
inc
test
rorb
xchg
imul
mov
add
jo
aaa
sub
push
adc
sub
inc
test
jp
and
sbb
dec
sub
insl
or
addb
add
push
cmpsl
jmp
bound
add
add
add
imul
mov
add
movb
daa
mov
lock
pop
imul
sbb
ret
cmpsl
xorb
ds
rcll
call
push
mov
push
cmpsl
add
data16
test
cmpsb
cwtl
push
xlat
ret
and
int3
rorb
loope
add
ficompl
dec
inc
insb
mov
xor
and
faddl
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
