divb
in
mov
mov
test
inc
add
add
int
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
add
stc
out
aas
mov
test
je
cmp
pcmpeqd
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
rcll
jp
jge
add
pop
push
push
push
push
xor
mov
push
mov
scas
stos
mov
std
adc
movl
cmp
pushf
or
jnp
or
push
mov
push
xor
cwtl
pop
jnp
mov
xchg
push
sbb
add
divb
inc
sub
ret
mov
jmp
pushl
sar
insb
jbe
jecxz
lea
or
lock
dec
test
jg
sbb
xor
adc
push
add
outsb
mov
push
scas
adc
mov
add
inc
jne
sub
sar
mov
je
daa
ret
push
repz
outsl
or
fadd
adc
pushl
mov
or
xor
push
mov
call
pushl
mov
fwait
cltd
fildl
mov
fbstp
mov
mov
andl
mov
push
lcall
mov
hlt
cs
xchg
adc
push
sti
lcall
mov
fcomps
sub
dec
shrb
in
dec
inc
in
or
cmpsb
stos
mov
or
jbe
lcall
ror
push
jo
sbb
mov
outsb
xchg
incb
call
sbb
jnp
dec
add
pop
pop
pop
jle
call
inc
mov
lea
mov
adc
pushf
cld
add
xor
push
in
loopne
dec
or
jbe
ret
enter
ja
enter
xchg
push
mov
xchg
mov
inc
add
add
inc
fisubs
das
and
add
rolb
xlat
push
mov
push
in
sbb
push
or
sbb
push
lock
or
ja
aad
jnp
mov
aas
fadd
jae
cmc
jne
mov
pop
pop
push
jno
cmc
jmp
aad
or
push
push
sbb
outsb
or
sub
add
sbb
enter
add
push
mov
mov
aaa
xchg
xor
bound
std
pop
sub
lock
push
mov
cmp
add
loopne
or
jge
insl
sub
dec
cli
mov
mov
xor
mov
pop
ret
push
js
and
pop
jae
xlat
fstpl
cmp
pop
inc
sub
inc
add
inc
clc
sub
enter
or
into
flds
inc
ss
push
sbb
shll
testl
pop
adc
push
ja
lods
inc
test
jne
loopne
jne
xchg
ja
add
jmp
cli
js
mov
cmp
jg
mov
adc
adc
ret
pop
dec
ds
add
pop
pop
jp
pop
movsl
pop
enter
or
rclb
mov
sub
aas
cld
push
mov
sar
imul
cld
ja
adc
ret
mov
clc
add
push
push
jmp
jmp
pop
in
nop
xchg
adc
leave
aam
enter
cs
orb
ret
cli
jg
adc
cld
clc
fistpll
iret
jle
mov
cmpl
or
cld
loope
pop
push
out
jmp
push
cmp
jge
push
std
add
inc
jle
add
pop
cltd
jge
enter
cmpsb
push
aam
push
sahf
lock
add
push
sub
add
push
cmc
sbb
jne
test
incb
add
xor
jle
fistpl
adc
pushf
mov
cmp
out
mov
or
adc
lea
fwait
or
cmp
sti
insl
mov
xor
into
mov
aam
pop
sub
sbb
cmpsl
jo
fdivrs
out
jnp
mov
cld
fsubrs
inc
stos
mov
repz
xchg
or
test
jle
cmp
jbe
mov
mov
inc
mov
rcrl
inc
icebp
roll
xchg
pop
jmp
push
mov
adc
decl
mov
jns
sub
nop
lret
lea
inc
sbbl
jmp
or
add
fucom
fmuls
lcall
hlt
jle
xor
jbe
push
and
hlt
jg
pusha
cmp
sub
cmpsl
std
xor
xor
push
push
shr
imul
cmp
jle
mov
add
int3
out
or
add
cmp
cmp
jae
push
cmp
xor
adc
inc
xchg
pop
lock
add
addr16
add
jb,pt
mov
adc
mov
push
lea
ljmp
sbb
mov
js
cmp
adc
push
push
rcrb
mov
decl
xchg
call
insb
or
sub
cmpsb
rolb
adc
sbb
out
cmp
jo
inc
sub
sbbb
aad
aaa
add
push
jg
jns
or
pop
pop
or
cmp
sub
add
xor
jno
cmp
jne
push
push
lock
push
les
jl
in
js
push
mov
mov
pop
push
test
or
pop
pop
pop
pop
andl
adc
mov
ret
pushf
mov
jne
mov
test
je
movl
jo
add
pushf
repnz
push
ss
movl
sub
mov
mov
xchg
iret
jle
mov
movsb
sbb
or
les
mov
je
jl
dec
jnp
pushw
mov
test
mov
enter
dec
imul
jmp
lods
mulb
add
and
xor
cmp
xor
pop
psubd
push
xlat
inc
inc
push
fld
incb
adc
sbb
ficompl
jge
xchg
push
loopne
add
int
pop
fs
sbb
pop
add
int
int
dec
add
and
push
lea
push
inc
inc
ja
daa
fadds
iret
cmp
inc
pop
push
add
adcb
mov
xor
sub
mov
in
into
in
test
mov
or
loopne
scas
inc
dec
add
cmc
jo
lahf
sbb
push
ss
je
rcr
dec
bound
adc
out
or
jne
dec
adc
mov
fisubl
pop
jnp
mov
pop
mov
test
pop
push
leave
jb
cmp
adc
sbb
and
dec
mov
push
rclb
push
arpl
pop
jnp
mov
mov
or
push
adc
jge
cs
xchg
jecxz
pusha
xor
add
or
dec
sahf
outsl
jp
cltd
or
push
lahf
rcr
lea
sub
or
shll
or
popa
add
and
push
adc
sbb
add
push
jle
mov
sub
in
add
adc
dec
or
sub
scas
ljmp
sbb
mov
jno
fldcw
lahf
insb
out
xchg
adc
lods
sbb
lcall
inc
inc
les
push
adc
xor
cvtps2pi
shrb
repz
sub
call
lds
cmc
mov
inc
aaa
push
lock
add
add
add
outsb
mov
cs
scas
insl
or
out
pusha
inc
fmull
int3
shrl
inc
add
push
mov
sbb
dec
out
lock
xor
xchg
inc
and
jl
out
pop
mov
add
sbb
sbb
jne
lret
pop
cmpsl
andl
sbb
push
cmp
fistl
pusha
add
mov
cli
pop
nop
or
jmp
mov
shrb
mov
sbb
sbb
nop
dec
nop
daa
xchg
lds
scas
roll
mov
mov
mov
pop
pop
rorl
adc
lods
push
pop
or
and
push
js
and
adc
adc
popa
add
les
loopne
cmp
mov
jg
std
neg
sbb
inc
inc
adc
andb
jle
or
cmpb
stos
mov
sbb
jo
and
push
lods
movsl
jno
sbb
bound
cmp
xlat
test
mov
push
and
test
pop
and
xchg
and
adc
and
cmp
test
lods
or
loopne
loope
decl
adc
lahf
cmp
cld
mov
sbb
repz
aaa
out
push
xor
icebp
push
push
js
adc
pop
adc
lock
test
fmuls
in
clc
jbe
pop
mov
sub
jmp
mov
dec
imul
xchg
inc
add
jecxz
xchg
and
xor
into
andl
or
dec
mov
je
add
push
icebp
into
scas
mov
dec
or
or
push
data16
sbb
or
rcrl
inc
xchg
sbb
pop
aas
push
and
inc
and
or
push
jo
scas
mov
bound
cltd
adc
out
in
sahf
adc
je
scas
jnp
mov
adc
lahf
and
jno
and
ret
lahf
cmp
push
push
or
mov
xor
dec
pop
inc
outsl
aam
fmuls
mov
push
push
ror
mov
push
add
enter
lcall
push
mov
or
mov
push
mov
orb
addr16
jl
or
sysenter
shlb
xchg
fisubrl
insb
repz
or
leave
add
sub
in
dec
mov
test
popa
jbe
dec
add
mov
fcoml
mov
mov
or
push
mov
in
test
into
fsubrl
or
push
adc
call
jb
popa
scas
ja
mov
dec
loope,pt
lea
out
cmp
and
test
jno
clc
addl
adc
sub
dec
mov
xor
fimull
jge
outsl
sbbl
push
cld
das
cmp
mov
out
add
xchg
js
inc
loopne
or
movl
imul
fildl
int3
aam
jnp
cmp
push
lea
mov
jle
test
mov
push
addb
or
pusha
sarb
ljmp
xor
lock
pop
js
inc
pusha
je
in
lock
push
movb
fidivrs
jo
insb
pop
test
cmp
mov
test
pop
cmp
dec
sbb
mov
fiadds
push
sbb
sub
std
outsl
div
fistpl
fistpl
jae
ret
je
push
rcrl
sbb
stos
and
jnp
ret
nop
es
xchg
out
nop
nop
aam
and
sbb
cmp
or
pushf
or
es
repnz
pushf
pusha
dec
mov
and
mov
dec
add
xor
inc
sbb
lock
push
repnz
nop
xchg
add
fs
xchg
rcl
push
cmp
test
jl
scas
cmc
add
test
lea
jno
repz
xor
arpl
cld
sub
lock
xor
sub
pushf
sbb
pop
mov
hlt
fcoml
dec
outsb
cmp
fsubp
mov
dec
in
mov
add
cld
fs
mov
sti
inc
mov
adc
and
repnz
cwtl
adc
pop
inc
or
int3
in
leave
xchg
int3
insb
les
les
adc
cltd
mov
sbb
enter
mov
cltd
xchg
out
lods
sbb
sub
and
jmp
shlb
rorb
insb
sbb
and
sbb
mov
shll
pop
lock
jmp
dec
adc
pop
push
sbb
add
mov
scas
iret
adc
cmpl
jo
push
fmuls
add
adc
jmp
or
pusha
adc
push
in
add
sub
mov
in
xchg
ds
pop
push
xor
shrb
aam
pop
mov
add
mov
sbb
mov
dec
mov
lock
clc
fsubr
aam
or
mov
shlb
in
js
push
push
call
mov
pop
sbb
add
sub
sub
adc
jge
shrb
xchg
movsb
and
mov
and
sbb
pop
jae
mov
cmpsl
push
mov
clc
fs
test
lds
pop
hlt
mov
mov
mov
test
mov
push
mov
xor
jl
mov
sbb
pop
and
addr16
les
jae
adc
ja
and
outsb
daa
add
fcoml
or
sbbl
adc
xchg
push
jle
pop
jne
xor
in
inc
mov
fcmovne
push
pop
inc
pop
pop
and
jmp
loopne
or
xor
shll
ja
or
dec
mov
or
adc
fwait
jno
add
stc
outsl
sbb
das
pop
push
lea
and
sub
add
adcb
push
lea
add
mov
mov
dec
or
or
in
lret
or
ret
mov
add
adc
test
stos
adc
roll
movsl
jno
sub
push
pop
insl
mov
jns
shr
into
adc
cmc
sub
dec
mov
mov
add
cmc
inc
xor
pushf
mov
mov
subl
sbb
pop
push
xchg
xchg
add
popa
jae
neg
pop
inc
jne
loopne
add
add
stc
shr
push
sub
sbb
push
in
push
dec
pop
arpl
xchg
popf
cmp
lret
adc
cmp
cmp
je
mov
sahf
les
rolb
and
nop
pop
stc
mov
lea
mov
mov
add
popf
addb
add
pushl
xor
rclb
cmp
or
aad
lock
lahf
add
pushf
and
pop
fwait
in
in
and
adc
call
daa
add
add
xchg
add
pop
and
fcoms
xor
leave
xor
cmp
fldcw
xor
pop
hlt
je
addr16
andl
xchg
push
test
mov
movsl
pop
or
dec
xor
xor
xchg
stos
jae
out
test
cmp
daa
add
fcmovu
jg
popa
push
pop
mov
jmp
roll
add
sahf
sub
sahf
cmpsb
sbb
mov
mov
jb
mov
fs
inc
and
cmp
ss
mov
fucomi
popa
loope
lds
jns
call
xorl
or
add
add
aad
xchg
adc
and
ljmp
push
aas
decb
inc
push
or
je
push
loope
and
test
test
inc
fsubrp
adc
rclb
sub
pop
repnz
push
sub
push
ljmp
sub
jne
add
push
sub
add
jno
sub
sbb
inc
lret
ret
inc
lcall
xor
mov
mov
stos
add
and
cmpsl
jne
add
fcompl
aas
insb
cmp
out
xor
jbe
aaa
xor
test
dec
rclb
push
movsb
mov
loope
push
loope
sub
ret
jne
fdivl
mov
sub
loope
mov
push
xchg
cmp
sub
sti
mov
adc
cmp
sub
cmp
xchg
adc
aas
adc
jecxz
add
rclb
push
push
add
add
inc
cmp
insl
clc
dec
push
push
mov
mov
ss
lock
cmp
loopne
popa
jo
fmull
or
enter
mov
cmp
mov
and
push
mov
sub
and
cvtps2pi
sub
mov
inc
ficoms
dec
das
push
lock
xor
push
pop
xchg
lahf
xor
sub
pop
sbb
insl
adc
testb
mov
cmp
mov
gs
mov
cltd
sbb
outsl
inc
stos
pop
out
sbb
cmpsl
xchg
insl
outsl
loopne
cmp
inc
mov
jae,pt
mulb
add
inc
push
xor
stc
pop
ficoms
xor
push
add
dec
sbb
pop
aad
or
ss
xor
push
and
push
add
and
cmc
sub
enter
sub
les
xor
sub
or
decl
xor
and
lahf
jne
inc
mov
adcl
aas
fadds
shll
cmpsl
mov
mov
es
adc
stos
into
and
inc
ret
jge
popa
mov
mov
add
or
cwtl
mov
aaa
loopne
dec
add
cmpsb
and
cmc
adc
inc
pop
ret
push
jo
jo
gs
adc
mov
js
sub
pop
or
je
mov
xchg
adc
push
adc
mov
jmp
je
ja
outsl
or
mov
cs
xor
pop
sahf
divl
jne
push
sub
mov
clc
jmp
or
jo
lret
jne
push
outsl
cld
and
dec
scas
jno
das
cmp
pop
sbb
xor
and
test
add
cld
ret
or
jge
mov
add
icebp
imul
cmp
xchg
popa
stos
bound
movb
popf
std
add
and
leave
add
dec
jl
leave
add
inc
mov
mov
push
out
loop
ret
adc
push
inc
cwtl
pop
popf
cmp
shl
jo
lea
push
push
push
and
out
push
or
adc
int3
ret
inc
add
in
into
rorl
mov
dec
fcoms
call
inc
xchg
sub
sub
sbb
setne
pushf
roll
xorl
jo
shl
jb,pn
pop
outsb
sub
jne
or
loopne
in
out
je
sub
adc
mov
add
das
add
sti
sub
es
enter
push
inc
faddl
iret
sbb
sub
out
add
add
call
pop
xchg
cmpb
push
jne
or
mov
emms
xchg
cmp
dec
jbe
add
pop
test
call
and
sub
aad
fadds
dec
shlb
jle
add
cld
inc
mov
imul
loop
out
inc
out
xor
and
je
push
mov
fnstenv
int3
lock
lds
loope
push
jnp
add
cmpsl
pop
xchg
push
mov
les
mov
mov
test
push
mov
or
aad
fwait
add
or
enter
inc
int3
cmp
mov
or
fsubl
inc
faddl
add
loopne
insl
adc
mov
aas
movzwl
test
cmc
jg
and
popf
dec
dec
je
sub
out
dec
pop
pop
jmp
bound
jge
imul
push
jmp
adc
int
or
mov
adc
lret
mov
sub
sbbl
xor
int3
mov
aaa
xchg
mov
addr16
xor
out
bound
jecxz
aas
inc
jae
test
mov
mov
stos
je
cmp
fistpll
mov
xor
inc
mov
out
pop
lock
jle
mov
test
sahf
pop
daa
push
mov
xor
adc
ret
jle
into
mov
sbb
push
sbb
add
xchg
sub
add
jbe
iret
int3
add
mov
bound
loopne
clc
pop
filds
lcall
mov
add
int3
add
mov
fadds
int3
mov
pop
add
jo
push
popf
arpl
mov
shrl
xorb
inc
add
sbb
push
andb
es
push
hlt
jge
dec
or
scas
ret
push
hlt
adc
push
daa
iret
xor
icebp
xor
cmpl
subb
stos
sub
sub
sbb
mov
add
insl
fwait
mov
or
push
lods
pop
sub
in
add
mov
cltd
sahf
xchg
xor
jl
adc
mov
fcoms
xchg
or
fndisi(8087
lcall
add
jns
loop
movsb
jl
loop
xchg
push
push
add
push
iret
dec
mov
add
scas
adc
dec
inc
cmp
enter
push
es
cmp
lock
mov
jl
enter
sbb
aaa
xchg
push
ret
push
mov
inc
loopne
sbb
gs
cli
stos
pop
lcall
call
push
imul
lods
pop
insb
cli
subb
out
and
dec
add
jo
clc
adc
mov
sbb
xor
outsb
loop
adc
cwtl
test
push
mov
fdiv
and
inc
push
in
pop
mov
lock
adc
or
jge
xchg
adc
popa
loope
rorl
cmpsl
and
mov
xor
mov
stos
or
scas
in
push
movsl
insl
mov
and
pusha
scas
sbb
movsl
add
jmp
mov
loope
adc
loope
mov
sub
push
add
in
push
pop
push
push
call
and
cwtl
mov
addl
pusha
jno
loopne
int
cmp
and
adc
pop
call
push
inc
cmp
loop
in
mov
cwtl
iret
pop
ret
shll
push
jo
jl
push
mov
add
and
sbb
cmp
or
rcr
inc
adc
cmovns
ret
adcb
cmpxchg
in
adc
or
cmp
dec
push
rolb
or
adc
pop
shrb
add
xor
mov
push
punpckhwd
jbe
or
nop
shlb
aam
xchg
xchg
xchg
mov
adc
aam
and
lock
fdivr
dec
sbb
xchg
mov
shrb
je
pushl
call
js
fsub
cmp
ret
shr
movzbl
push
adc
push
ret
push
shlb
push
inc
push
mov
dec
mov
mov
jle
cmp
sti
dec
popf
cmp
jb
or
mov
dec
pop
or
or
shll
xor
clc
xor
jo
fs
pusha
lods
or
xor
xor
mov
or
add
mov
addr16
in
sarb
jmp
xchg
inc
mov
js
jle
push
sub
inc
push
push
aaa
sarl
push
cmp
jg
mov
jmp
loop
rorb
leave
loope
fistps
cmp
cs
pushf
in
cli
enter
test
int3
ss
or
mov
adc
cs
push
jl
mov
push
jne
test
fnstcw
or
pop
jmp
mov
push
jg
sbb
arpl
add
and
xchg
call
or
cs
add
iret
outsb
sub
xor
ljmp
clc
mov
mov
lea
cmp
jae
mov
mov
jmp
incl
xor
sub
and
div
cmp
call
inc
add
sbb
cmpl
mov
lods
add
fbld
sahf
imul
add
adc
sarb
fistpll
and
stos
les
mov
cmp
cmp
aad
std
adc
cld
ret
lcall
fisttpl
mov
sub
xor
dec
add
lea
pusha
pop
sbb
and
push
push
pusha
or
push
jnp
outsb
nop
adc
cmp
dec
hlt
xchg
add
aaa
rolb
lock
mov
mov
stos
sub
mov
dec
cld
dec
or
jbe
xorb
int3
and
ljmp
lcall
sbb
leave
js
push
hlt
jg
pop
lret
in
insb
xor
inc
jno
sub
dec
jmp
cmpl
push
inc
inc
pop
fidivl
xor
add
movl
push
push
push
inc
arpl
ret
jecxz
inc
add
insl
jno
add
inc
add
inc
mov
hlt
jl
repz
sub
pop
jmp
or
rclb
test
mov
cmpsb
cmp
filds
test
movsl
mov
mov
jae
ja
push
sbbl
inc
pop
mov
push
xchg
lret
push
popf
xchg
mov
scas
pop
mov
hlt
lea
push
add
bound
lods
stos
cmpsl
pop
mov
dec
mov
dec
scas
test
mov
pop
mov
push
push
pop
and
rep
push
jbe
jl
mov
mov
sub
cmp
pop
sbb
mov
push
sub
jmp
movl
mov
clc
sub
pusha
cmp
pop
shrb
adc
mov
xchg
mov
or
decb
mov
je
push
and
adc
jb
or
data16
mov
jb
mov
or
mov
push
insb
scas
xchg
xchg
sub
inc
shrl
clc
ss
icebp
je
sar
shll
cmp
je
pushl
movb
test
pop
sti
dec
hlt
jmp
push
push
push
and
sbb
mov
pop
mov
sbb
leave
shrb
push
leave
out
loop
inc
loop
push
sbb
sub
setne
shl
ret
xchg
xchg
outsb
pop
xchg
pusha
cmpb
call
adc
rcrl
pop
js,pt
jo
jg
orb
aad
pcmpeqd
pusha
sub
add
subb
inc
inc
mov
sbb
cmp
jne
add
xchg
mov
add
int3
add
roll
popf
mov
sbb
sbb
push
mov
addl
aad
out
cmp
clc
out
sbb
pop
hlt
xor
add
out
add
je
push
lods
push
push
pop
add
xor
add
in
add
xor
sub
inc
pop
push
inc
adc
pop
cmpsl
cmp
jecxz
pop
hlt
sub
adcb
jg
sar
or
std
push
inc
jmp
mov
fs
mov
ret
insb
cld
fadds
lea
jbe
mov
push
mov
pop
push
popa
lcall
push
aad
cmp
lock
je
movl
sbb
mov
inc
mov
sbb
and
jp
lods
cmc
push
sub
mov
es
ds
mov
jge
adc
add
xlat
jecxz
xor
pop
mov
movsl
mov
mov
or
in
cmp
mov
sbb
push
fistl
push
jbe
adc
sbb
push
sub
sub
lods
add
cmc
or
lods
xchg
lods
cmp
push
add
lods
jecxz
aaa
mov
aas
and
xchg
add
sub
add
insb
fdivs
push
sub
or
fldt
push
sub
test
xor
nop
jecxz
outsl
rol
dec
push
inc
aad
cmp
push
adc
loop
push
adc
mov
pop
stos
or
sbb
mov
in
cmp
adcl
mov
daa
xchg
cmp
test
lret
xchg
mov
cmp
pushf
sub
js
and
adc
xchg
pop
call
loope
shrb
in
and
int
sbb
push
stos
xor
push
adc
daa
les
pop
cmp
aas
in
add
bound
jmp
and
add
insb
aas
adc
roll
enter
sbbb
in
nop
aas
sub
inc
dec
sub
int3
and
mov
ds
add
rcl
ds
or
mov
push
add
xor
push
dec
cmpsl
dec
xorl
push
out
dec
push
push
cs
mov
inc
adc
aad
fldl
adc
leave
add
enter
stc
push
repnz
mov
mov
jns
jg
xor
push
inc
sahf
rorb
mov
in
jmp
icebp
scas
adc
inc
add
orl
fists
negl
and
or
sub
clc
adcb
xchg
or
stos
es
push
lock
inc
gs
mov
add
leave
and
clc
sub
and
and
dec
cs
adc
adc
xor
inc
mov
add
or
cs
adc
mov
mov
scas
cmp
adc
pop
or
sbb
mov
mov
mov
iret
jae
mov
jno
or
or
ds
pop
ret
and
push
lea
cmp
daa
adc
js
inc
xchg
inc
adc
icebp
lea
lods
push
mov
jecxz
mov
push
and
and
sbb
and
int3
mov
sbb
sbb
add
inc
push
movsb
sub
pop
cli
inc
push
pop
pop
cmp
mov
push
inc
icebp
pusha
pop
sbb
cmp
mov
js
adc
ja
in
sub
cmp
adc
and
test
add
inc
pop
sbb
push
cmp
fistl
lcall
push
cltd
pop
negl
ret
jne
jle
push
adc
sarb
roll
jle
push
pop
jmp
push
and
sti
push
dec
mov
mov
popa
aaa
pop
lret
inc
xor
fldt
jbe
mov
jns
data16
cmp
stos
je
pusha
jmp
sub
dec
je
and
es
test
xor
fdivrs
dec
into
jmp
mov
mov
mov
or
mov
inc
mov
jecxz
ficoml
pop
jne
pop
pop
std
mov
rclb
add
call
repnz
jg
jmp
fimull
push
xlat
inc
loopne
cmp
mov
sub
push
mov
add
jg
mov
loope
jp
and
gs
and
push
or
xchg
push
xor
push
push
daa
pop
pushl
js
mov
and
mov
mov
and
inc
ret
jmp
mov
rol
jmp
cmp
sbb
sbb
jae
mov
jmp
inc
sbb
leave
adc
cli
mov
sbb
jge
lahf
add
sahf
lock
jmp
sti
movsl
inc
jae
je
xchg
push
and
jmp
and
rcrb
cmp
jmp
xchg
sbb
dec
scas
adc
and
push
jns
out
push
push
bound
jne
cltd
out
cmp
pop
adc
mov
mov
rorl
add
pushw
and
mov
enter
sbb
inc
sbb
dec
sbbl
push
pusha
lea
pop
adc
sub
fistps
aaa
sub
or
orl
fcmovne
rcrl
lahf
push
push
or
xchg
dec
stc
icebp
cs
pop
jge
lcall
push
dec
push
mov
in
lea
push
lea
push
push
push
push
add
push
lea
sbb
dec
cmp
add
dec
mov
inc
test
add
xchg
cltd
lahf
jl
push
inc
sbb
mov
aas
orb
push
mov
or
aad
divl
testl
sbb
nop
jbe
xchg
cwtl
jo
je
xchg
sbb
push
mov
pop
push
jle
sbb
movl
movsl
jo
push
pop
or
cmp
xchg
jmp
fstpl
push
jb
mov
ret
adc
or
jnp
arpl
aaa
jne
movl
add
jnp
sarl
movsb
push
cmp
jmp
icebp
int3
sbbb
and
mov
mov
lcall
movl
sub
sti
xor
ret
insb
loope
sbb
or
jae
push
es
push
push
mov
cmp
lahf
and
sbb
leave
and
in
adc
cmc
in
sbb
movsl
push
push
push
ljmp
mov
add
roll
fnstsw
jno
jge
lea
mul
push
rolb
shl
and
jg
cmp
push
push
push
cmp
mov
js
lret
scas
adc
imul
mov
lock
inc
jl
sbb
jbe
jg
inc
inc
push
push
popa
into
test
sbb
push
xchg
pop
js
fbld
push
aam
das
adc
in
bound
cmp
jne
int3
push
sub
and
std
add
fmull
adc
dec
fildl
cmp
shrl
inc
add
cmp
and
std
ret
rcll
sub
adc
scas
xor
std
add
jecxz
int3
cmp
jne
push
sub
xor
pop
fdivrs
add
mov
xor
or
je
es
testb
add
mov
sub
mov
mov
enter
mov
pusha
cmc
pop
pushl
call
push
or
bound
jl
mov
and
pop
es
push
dec
lock
inc
push
mov
mov
push
dec
lock
div
push
dec
je
cmp
push
dec
push
call
cli
cmp
je
sub
sub
mov
pavgw
pusha
cmp
in
dec
insl
sti
int
in
cmp
push
mov
add
mov
test
inc
inc
dec
cmp
pop
and
cmp
xor
push
or
rcr
sbb
lea
rep
push
in
push
or
mov
and
out
or
loop
sub
xchg
adc
clc
rclb
pop
lock
ret
insb
add
das
leave
cmpsl
lods
lock
fisubl
mov
fstp
cmpsb
imul
adcb
push
roll
inc
push
push
bound
je
or
push
push
fstps
leave
and
push
push
mov
mov
lds
sahf
sub
loopne
cmp
in
push
aaa
test
rorb
mov
shlb
inc
cmpsb
out
jl
dec
mov
add
adc
adc
sbb
mov
je
push
mov
call
pushl
and
mov
notb
pop
insl
jo
pop
jge
ret
pop
sarb
pop
setp
add
push
sub
jno
or
dec
mov
aam
jne
pushl
pop
test
sbb
push
adc
xor
pop
xchg
fadds
test
bound
mov
scas
push
aam
inc
xchg
fmuls
and
dec
test
xor
adc
std
sbb
inc
cmp
scas
cmp
je
cmp
jbe
jo
mov
push
cmp
sbb
leave
jno
mov
inc
out
testb
mov
add
mov
add
in
ljmp
mov
daa
add
es
xor
icebp
incl
jne
movb
cmpsl
enter
or
pop
repz
jae
fldz
jno
popa
xor
ds
cwtl
jno
loop
sahf
jo
movb
insl
aas
cmp
mov
cmp
hlt
mov
jbe
lea
sub
lret
mov
jmp
xor
inc
shlb
rcrb
test
and
and
jbe
test
fimull
popf
sub
and
daa
mov
mov
dec
or
ljmp
shlb
pop
push
adc
push
popa
movsl
call
mov
in
lods
nop
pop
cmp
iret
push
adc
enter
pop
xchg
loopne
cltd
add
mov
pop
cmp
adc
push
cld
hlt
jl
shlb
add
add
mov
mov
ja
sbb
je
pop
cmp
pop
xchg
js
movsl
mov
or
adc
cmp
cli
ds
or
clc
or
sbb
gs
xor
push
lret
jl
sahf
ja
jbe
andb
jbe
xor
or
mov
adc
and
inc
jge
mov
or
rcrb
test
outsb
mov
bound
add
cmp
lcall
inc
pusha
fmull
imul
push
out
push
loopne
push
push
aaa
movsl
addb
stos
inc
rcrl
pushf
mov
and
fiadds
in
dec
mov
inc
add
add
jno
insb
pop
int
out
negl
popa
in
adc
cmp
push
add
mov
jge
jmp
and
test
dec
adc
fmuls
cmpsb
loopne
jo
add
repz
nop
or
jns
pop
sbb
add
enter
mov
adc
test
in
fadds
push
adc
lea
cmpb
out
and
xor
je
push
pop
cmp
in
push
hlt
pop
push
call
enter
xor
sub
sub
push
push
ja
in
scas
mov
adc
sbb
and
and
mov
add
fisubrs
add
pop
sub
push
cli
or
push
rcll
push
test
add
pop
xor
mov
xor
push
call
jmp
fs
popa
add
xchg
stos
cltd
sub
push
jecxz
dec
or
xor
cmp
jo
xor
loopne
mov
inc
lea
clc
andl
xchg
jbe
xchg
jl
mov
jmp
cld
adc
pop
jl
mov
cltd
mov
and
lea
push
decl
int3
into
mov
orl
loope
lea
fisttps
mov
jge
mov
outsb
mov
idiv
push
mov
push
push
mov
sub
push
ret
xor
idiv
lock
cli
jecxz
cmp
inc
jp
fstpt
mov
test
rcrb
rcrb
call
pushf
loope
pusha
scas
mov
inc
mov
loop
adc
add
mov
jae
lock
push
stos
in
or
out
je
in
pop
in
pop
pusha
push
pop
insb
xor
loopne
add
sub
xor
pop
add
sbb
mov
aam
into
jp
xor
pop
lcall
pusha
js
jmp
lock
fs
or
xchg
dec
xlat
sbb
mov
cmp
in
jbe
lahf
xor
ficoms
sbb
dec
lea
xchg
mov
adc
std
out
xchg
sub
cmp
or
or
jecxz
jge
jmp
mov
hlt
fildl
scas
out
hlt
mov
test
jns
faddl
or
sub
xor
inc
sbb
mov
fdivrp
mov
sub
mov
lea
test
mov
inc
js
shll
enter
jl
jmp
sarb
xor
push
mov
mov
or
clc
fidivl
jmp
push
cmp
or
mov
pop
push
pop
mov
sbb
mov
inc
add
rclb
jle
mov
inc
inc
fmull
lods
aad
xor
rorl
lret
mov
scas
stos
xchg
inc
cld
inc
aam
clc
lea
dec
xlat
and
cmpsl
je
scas
shlb
gs
mov
push
leave
mov
jecxz
pop
and
leave
test
jmp
out
xchg
dec
mov
sub
pop
leave
arpl
sarb
sub
mov
mov
add
lods
add
push
and
cltd
or
push
push
sub
and
repnz
cltd
jl
imul
fs
loope
ret
xchg
loope
pop
iret
fimuls
xchg
mov
xor
pop
aas
mov
jne
sti
add
clc
or
test
jge
outsl
jl
jmp
punpckhdq
into
cs
sub
xor
add
test
push
mov
lea
push
mov
jne
aas
fsubrl
inc
mov
inc
mov
push
lods
xor
lahf
mov
test
add
or
dec
or
add
add
cltd
out
cmp
xor
dec
inc
sub
mov
sub
lock
roll
fsubrs
push
add
lret
push
cmpsl
sub
mov
fwait
lods
sbb
insl
xchg
pop
loop
popa
scas
sbb
in
fs
sbb
test
xchg
mov
lret
ds
subb
lods
pop
xchg
jl
fimull
pop
int3
out
pop
pop
adcl
or
and
in
ret
mov
loope
sub
test
mov
addr16
inc
cli
and
lds
xchg
push
cmp
testb
aaa
and
mov
pop
mov
and
fcomps
xchg
dec
push
ret
mov
pop
mov
fs
inc
mov
icebp
inc
sub
inc
sub
pop
int
push
mov
clc
setb
test
pop
add
add
enter
shlb
push
jl
xor
dec
adc
data16
mov
or
clc
aad
add
jle
je
push
jmp
jo
loope
pop
lcall
add
push
movsb
insl
dec
in
add
add
jo
jl
dec
mov
adc
adc
imul
je
dec
imul
sti
xchg
add
shrl
inc
ss
mov
das
push
mov
jp
pop
mov
push
adc
sarb
push
cmp
jl
inc
aaa
sbb
or
jp
fdivrl
xor
or
mov
stc
jmp
rorb
icebp
and
sbb
cmp
ljmp
sti
pop
shrl
test
jne
cwtl
mov
enter
add
aam
jo
clc
add
aam
xchg
mov
das
loopne
repnz
das
sub
pusha
imul
testl
push
and
scas
mov
mov
mov
ret
scas
arpl
push
push
sub
pop
pop
jmp
mov
push
je
pop
mov
ja
test
popa
lock
add
pushf
loopne
inc
sub
or
add
or
lret
into
xchg
std
jo
xchg
adc
add
jmp
inc
inc
les
xchg
xor
aam
inc
add
cltd
lods
push
inc
ss
pop
in
les
inc
addr16
dec
enter
aam
imul
enter
push
add
shll
leave
jae
add
in
movsb
push
fadds
ss
jnp
dec
test
sub
push
jns
popa
jo
insb
fmull
dec
inc
add
fsubl
lret
sbb
xor
pushl
lret
push
sti
pop
sub
and
les
cwtl
test
pushf
mov
out
dec
rcrl
int3
sbb
scas
test
add
dec
cmpsb
call
xchg
jle
lds
pop
addb
add
adc
lea
mov
push
ja
dec
and
push
dec
push
sub
pusha
sbbb
xor
pushl
scas
push
push
test
pop
push
or
and
pop
sub
add
cmp
and
dec
movsl
pop
or
pop
leave
nop
or
push
mov
add
out
jb
mov
iret
rcpps
xor
and
dec
sbb
add
lret
mov
mov
pop
dec
fisubrl
movq
int3
jmp
and
mov
enter
mov
lret
cmpsb
dec
xchg
je
or
fistpl
cmpsb
pusha
pop
sbb
mov
push
pushl
adc
dec
pop
lea
les
stos
xor
dec
cmp
mov
sbb
loop
imul
test
je
inc
sbb
mov
test
je
cmp
push
dec
mov
jmp
dec
mov
pop
ljmp
js
push
mov
outsb
pushf
jge
add
scas
add
dec
inc
pusha
inc
xor
shlb
xchg
sub
mov
jle
fmulp
js
cmp
jge
mov
mov
clc
out
insl
jl
movb
pusha
jle
jmp
add
in
pushl
inc
mov
roll
mov
dec
dec
fadds
std
push
and
xchg
rcr
imul
inc
sub
jecxz
out
aad
subb
xchg
mov
or
in
sbb
fdivl
adc
pop
enter
jae
sbb
cmp
jg
repnz
in
mov
add
and
cmp
cmovle
jbe
xchg
data16
loope
jl
lock
xorb
push
push
in
sbb
lods
stos
push
or
sub
xor
data16
add
jno
dec
out
xlat
and
sbb
sbb
lods
add
adc
sub
jo
imul
adc
ret
add
xlat
data16
repz
pop
shlb
xchg
mov
imul
sarb
add
ss
rorb
xchg
pop
int
pop
mov
mov
xor
xlat
sub
sbb
or
mov
dec
dec
cmp
pop
mov
push
das
mov
mov
mov
leave
add
cltd
fcmovu
push
iret
ss
in
xchg
outsl
mov
out
push
mov
lds
or
cmp
sti
add
adc
sbb
mov
nop
das
mov
iret
sub
aaa
dec
in
pop
or
adc
push
sbb
cmpl
jl
inc
orb
adc
add
mulb
pop
xor
stos
imul
repnz
call
cwtl
sbb
lock
and
push
xchg
adc
or
icebp
xchg
or
mov
or
stos
and
in
sub
movsb
inc
add
jle
outsl
mov
subb
add
or
loopne
xchg
jle
jge
inc
pop
sbb
or
sub
add
mov
jmp
push
pop
and
cmp
xor
xor
cmp
je
cld
data16
mov
in
jp
push
adc
xor
jp
lods
ds
cmp
inc
or
add
das
and
cmp
push
pop
adc
inc
pop
addr16
inc
push
or
jno
cmpsl
data16
pop
test
push
sbb
dec
push
mov
sbb
sbb
jl
adc
movb
mov
and
jae,pt
push
clc
mov
movsb
sbb
in
add
int3
pop
adc
dec
push
push
pop
or
test
cwtl
and
add
rolb
mov
and
mov
loop
mov
test
mull
in
add
clc
inc
pop
mov
jl
leave
xor
add
rolb
dec
cmp
cld
mov
xor
add
cld
add
push
inc
pop
inc
and
mov
push
mov
push
mov
jp
cmp
add
xor
ret
add
pop
std
lea
andl
mov
sbb
add
or
repz
rclb
pop
lock
out
addr16
movl
dec
xlat
js
cmp
sub
xchg
push
idivl
sub
data16
hlt
or
mov
mov
xchg
subl
push
cmp
push
and
rolb
repnz
sbb
adc
js
mov
mov
and
std
inc
std
sbb
std
in
out
popl
sbb
fdivrs
xchg
adc
inc
xor
inc
inc
mov
mov
mov
xor
shll
jae
push
mov
in
jbe
loopne
cmpsl
push
sbb
stos
js
lock
xlat
or
xor
test
sbb
lock
rcrl
jb
test
aam
fs
sbb
lock
inc
insb
stos
clc
and
outsl
loope
xchg
adc
dec
jnp
les
mov
enter
fiadds
sub
jno
jne
cmp
in
shrb
and
call
xor
adc
mov
shlb
sbb
loope
rorb
cmc
orb
or
adc
xchg
arpl
mov
add
add
jg
push
leave
ret
xchg
mov
push
sarl
dec
and
stos
sub
jnp
lar
mov
mov
gs
push
inc
adc
loopne
cmp
in
scas
scas
mov
pusha
in
add
adc
xor
adc
sbb
ret
adc
popa
inc
mov
sbb
cli
adc
inc
test
pusha
add
push
and
adc
sbb
inc
sbb
sbb
inc
or
data16
dec
pop
jae
sbb
sub
add
rclb
stos
mov
lods
rclb
mov
lret
or
sti
std
mov
movb
pop
loopne
sub
inc
js
jnp
js
packuswb
pop
cmp
ss
jl
inc
lock
loopne
test
sub
setne
xchg
lea
add
jo
pusha
xchg
aaa
repz
lea
in
push
lock
cmp
push
mov
xor
roll
adc
mov
fucomip
or
xchg
sub
add
dec
nop
add
mov
pop
aad
mov
movsb
movsb
imul
inc
xchg
sub
movsl
or
lds
mov
adc
add
loopne
and
jge
cmp
cmpl
leave
loopne
sarb
pusha
test
mov
sahf
or
daa
in
dec
mov
sub
mov
and
pop
shlb
cli
fisttpl
xchg
neg
mov
sbb
mov
xor
jg
adc
lret
mov
cmp
push
setl
rclb
scas
sub
cmp
in
push
push
jno
testb
mov
imul
stos
aaa
in
xchg
mov
push
sbb
test
dec
sarb
roll
jmp
xor
push
mov
mov
mov
jl
gs
pop
fnsave
jne
and
or
adc
subl
cli
mov
fcoml
je
mov
add
or
xorl
out
pop
iret
test
xor
adc
aam
mov
adc
or
dec
adc
push
dec
add
test
pop
xchg
sbb
inc
jb
push
mov
push
scas
int
popf
int
js
pop
add
mov
outsb
movlps
pop
loopne
adc
mov
push
mov
xor
inc
mov
aaa
xchg
fstpt
xor
add
jge
mov
add
jecxz
pushf
movzwl
pop
pop
jmp
pop
xchg
pop
pop
lea
inc
mov
mov
xor
adc
arpl
cmp
adc
rclb
mov
test
adc
xor
jbe
shll
dec
adc
inc
or
fnstsw
fnsave
test
mov
cli
popa
lret
call
int
jle
add
test
scas
push
arpl
pop
push
fsubrs
jne
push
inc
js
lock
sarb
lock
xor
subb
lock
cmp
aas
mov
cmp
fdivrs
fucomip
add
push
adcb
cmp
push
outsl
das
adc
xchg
sub
fcmovnbe
mov
movsl
jb
and
notb
jo
mov
jae
adc
sahf
ret
pushfw
mov
mov
out
mov
lea
push
mov
and
lock
in
cmp
add
into
cmc
aaa
pop
pop
mov
mov
je
add
mov
sbb
out
lea
mov
or
sar
fdivr
insl
sub
addl
rorl
ret
mov
sbb
mov
sub
test
mov
xchg
sub
jnp
dec
jb
mov
add
and
or
icebp
addr16
mov
add
inc
out
data16
jb
ss
push
aam
mov
lret
adc
jne
jmp
ss
in
cwtl
sub
hlt
aam
adc
add
jp
jp
mov
aas
in
imul
sub
enter
push
outsl
lock
insb
mov
and
add
or
scas
ret
add
rolb
pop
fs
adc
jns
or
push
mov
xchg
cmpsl
imul
and
push
gs
fisubrs
and
sbb
or
lods
fdivl
add
sbb
and
outsl
inc
jl
aaa
les
imul
pushf
mov
inc
out
jne
adc
sahf
pop
inc
gs
or
pusha
popa
sbb
enter
cmp
xchg
xchg
mov
test
jae
mov
jge
jbe
pop
ljmp
shlb
inc
test
push
jl
rorb
cmp
fcoml
push
mov
leave
push
mov
test
pop
loop
in
jbe
push
icebp
and
and
test
imulb
shll
int3
shlb
push
add
sbb
push
dec
in
xchg
xchg
inc
rolb
mov
or
xorl
je
pushf
xchg
and
into
popa
and
add
and
pop
dec
popa
pop
loope
pop
je
sub
adc
and
es
or
shll
adc
rcr
jns
pop
popa
divl
daa
or
mov
dec
push
lods
out
icebp
loopne
jl
je
push
in
mov
pusha
lcall
stos
fs
push
mov
and
je
pop
aam
jbe
nop
test
xor
es
mov
fistpl
pusha
loopne
dec
xlat
jnp
mov
or
sbb
push
dec
xchg
sbb
jge
xor
or
rcrb
push
pop
inc
push
jno
decb
mov
cmpsl
mov
jne
push
pop
cmp
ja
add
xor
jmp
andb
ss
and
adc
js
cmpsl
pushf
mov
movsl
stos
pusha
xchg
out
rorb
jns
jo
idivb
push
lea
cmp
push
and
aam
jge
pop
adc
add
loopne
pusha
das
cmp
mov
inc
das
xchg
or
mov
ss
pop
inc
jp
nop
sub
sahf
add
sub
shl
or
xchg
movsl
sbb
or
xorb
mov
jge
mov
xorb
ja
sub
push
sub
adc
inc
cs
aam
jo
das
call
test
xor
lcall
xchg
xor
fs
jno
push
add
pop
into
scas
repnz
movsl
fisubrl
int3
xor
cwtl
scas
outsb
push
rorb
cmp
xchg
push
and
xor
sub
adc
cmp
adc
and
int3
sub
jg
aam
fadds
sub
mov
mov
mov
nop
rorb
xchg
mov
sub
fwait
xchg
sbb
loope
loope
addb
scas
inc
mov
sub
push
testl
cmpsl
xchg
shrb
test
pop
cmp
lea
xorb
enter
sub
orl
leave
mov
daa
adc
push
mov
mov
push
jecxz
in
aam
popa
les
fcompl
cmp
sbb
pusha
dec
add
mov
incl
push
fnstenv
lea
adc
xchg
mov
add
inc
cwtl
or
pusha
mov
push
jle
sbb
leave
mov
sbb
pop
mov
loop
ss
movsb
xchg
pop
scas
push
sub
add
add
fsubr
test
cmp
ja
loopne
cmp
dec
xorl
push
or
and
inc
xor
mov
cli
inc
clc
cltd
pop
add
addr16
jmp
cmpl
mov
jne
mov
sbbl
and
adc
int
ror
sbb
fildll
movsl
mov
divl
mov
test
sub
nop
mov
sub
test
or
bnd
mov
push
sub
push
fldenv
sub
add
sub
push
inc
loope
mov
adc
sub
pusha
cmpb
mov
xor
xor
pop
dec
push
xorb
shr
sbb
add
push
sub
gs
and
pop
cmp
aad
push
add
cmp
mov
pop
mov
xchg
sbb
int3
rolb
pop
orl
lahf
das
loopne
push
pop
andl
mov
mov
sub
push
arpl
insl
or
stos
out
jno
in
lods
repz
mov
inc
outsl
out
fldenv
repz
adc
clc
fimull
js
rorl
je
inc
sahf
or
dec
push
push
push
pop
je
pop
jb
ss
jae
rorb
dec
sub
outsb
incl
fisttpl
lea
push
sahf
pushl
mov
sbb
inc
push
ficomps
rcr
es
rcrl
mov
call
pop
sub
roll
push
mov
mov
pop
add
sub
jl
push
pop
inc
add
cmp
or
movzwl
push
push
aam
scas
mov
push
inc
inc
or
jns
mov
enter
orb
push
push
fbstp
mov
push
pop
jmp
lods
les
or
enter
je
or
mov
ret
push
in
pop
mov
popa
test
scas
std
mov
lea
push
jae
jbe
pop
cmp
pop
push
jmp
mov
popf
lods
addr16
int3
cmpb
push
sbb
lods
test
adc
sub
std
mov
test
pop
out
and
mov
in
test
aaa
ret
adc
adc
and
ret
fcomp
push
mov
je
cmpb
addr16
stos
push
aaa
cmp
jmp
stos
push
cmpsl
xorps
loopne
pop
xchg
loope
and
aam
je
xchg
jp
cmp
push
pop
mov
js
pop
cld
push
lea
push
inc
mov
xor
ja
and
push
bound
sub
xchg
mov
add
int3
dec
fimull
push
stos
addr16
push
xchg
outsl
fildll
jl
insb
mov
int3
xor
sarl
pop
sub
cmp
lea
mov
cmp
jne
es
das
test
sbb
or
sahf
lods
stos
sti
xchg
mov
add
push
ss
pop
movsb
dec
jo
dec
sub
dec
cmp
je
sub
rcrb
pushw
push
loope
and
in
sahf
sahf
push
pushf
cltd
ret
dec
f2xm1
dec
loope
sahf
adc
push
sar
dec
inc
add
nop
jmp
sub
adc
cmpsb
dec
jmp
push
mov
lahf
in
xor
mov
sbb
fldcw
fisttps
js
dec
or
in
push
mov
xorl
dec
adc
mov
add
sub
dec
xchg
cmp
add
mov
ja
rorl
icebp
jp
cmp
and
in
scas
pop
out
outsl
lock
adc
xchg
cmp
adc
mov
shrl
or
mov
inc
fadds
cmp
adc
or
mov
jne
outsl
loope
notl
ja
inc
das
fwait
incl
scas
pop
add
and
jle
jbe
push
mov
outsb
clc
dec
add
sbb
cmp
je
sti
mov
xchg
jnp
mov
roll
push
push
jg
inc
or
pop
pushl
xrelease
mov
je
pop
cmpsb
xchg
cmp
add
cmpsb
push
push
xchg
adc
xchg
cmpsl
ret
outsl
jmp
sub
sub
dec
and
js
es
jb
dec
or
push
rcl
and
add
ds
cmpl
jb
dec
add
lahf
push
add
add
movd
mov
inc
add
test
popa
adc
imul
adc
cli
add
arpl
in
dec
mov
sahf
icebp
mov
push
leave
push
cmp
je
xor
cs
xor
seto
jle
ss
mov
push
xor
add
mov
cmpsl
mov
push
xor
lock
aas
jbe
dec
insl
iret
shl
push
sbb
or
inc
or
inc
sub
mov
in
inc
add
pop
add
sub
inc
or
jbe
inc
sbb
adc
add
xchg
jbe
or
jl
out
and
data16
cmpsl
icebp
xor
daa
int3
add
fs
lods
add
or
iret
mov
stos
add
sbb
mov
into
xor
or
jl
aam
adc
fistpll
push
imul
adc
add
nop
clc
or
in
mov
insl
mov
mov
test
cmp
je
sbbb
add
cmp
je
mov
loop
add
add
cmp
fisubrs
fsubs
rolb
xchg
imulb
test
xchg
adcb
add
xchg
test
mov
adc
call
push
push
jle
jmp
and
add
mov
loope
xchg
push
inc
cmp
jae
dec
cmp
inc
add
inc
pop
mov
jmp
mov
dec
sbb
add
jne
xor
jl
push
or
mov
push
aad
sub
push
push
inc
jmp
scas
inc
mov
movsb
inc
mov
test
scas
sbb
sub
lcall
int3
mov
push
pusha
push
cmc
pop
or
pop
shlb
or
dec
jae
mov
imul
pop
or
mov
push
mov
mov
fsub
fmuls
int3
xlat
and
mov
sbb
cld
movsl
or
pop
cmpl
lret
fdivrs
and
ja
add
mov
push
aam
or
mov
inc
shl
jmp
push
push
xchg
inc
jle
test
dec
jns
mov
pop
sub
add
ret
aad
inc
jae
dec
or
inc
jge
push
notb
jae
dec
add
pop
and
ja
psrlq
inc
adc
inc
or
pusha
or
push
lcall
dec
or
mov
xchg
inc
sbb
jg
mov
push
push
push
inc
sub
adc
push
sbb
cmp
or
push
cmc
pop
js
mov
repnz
imul
mov
jmp
fs
dec
pop
push
jb
es
pusha
sub
addb
xchg
ret
mov
movl
mov
xchg
lret
or
loop
add
decb
pop
jl
inc
ret
je
mov
mov
pusha
mov
cmp
sti
dec
lahf
shlb
xchg
rcll
mov
and
add
jge
data16
outsb
push
add
inc
push
jecxz
fisubl
test
orb
mul
and
push
clc
fsubrl
test
sbb
pop
notl
das
movsl
clc
push
test
pop
push
jbe
test
stc
mov
add
and
popl
mov
aaa
orl
fists
xchg
cmpsl
testb
jbe
mov
shr
mov
neg
push
mov
mov
in
jp
adc
js
or
out
jne
test
clc
mov
push
je
inc
jmp
scas
arpl
push
in
or
int
xorl
add
push
cwtl
insb
jb
push
dec
inc
add
adc
or
iret
mov
iret
cmp
fsubl
or
call
cmp
mov
xchg
inc
test
std
daa
loope
lods
xor
test
cs
xchg
cwtl
jge
jae
imul
jno
jl
orb
cltd
mull
mov
pop
cmp
jnp
mov
xorl
sub
mov
jne
ret
and
mov
inc
or
push
mov
mov
test
inc
xchg
add
mov
lods
add
add
mov
inc
add
mov
and
out
in
push
or
and
jle
insl
call
notb
notb
push
shlb
rcrl
sub
sbb
test
mov
imul
push
movsl
sbb
je
mov
mov
dec
js
jl
andl
inc
add
cmp
adc
lcall
adc
push
add
mov
cmp
andl
orl
movl
add
pop
jne
pop
mov
push
adc
stos
pop
xchg
pop
sub
fisubl
jo
sbb
pop
popf
outsb
pop
fs
cmp
sub
dec
sbb
ret
test
inc
add
jg
subl
or
pop
int3
lret
adc
mov
test
mov
sbb
cs
outsb
inc
js
or
and
xchg
jg
aas
sbbl
push
push
push
xchg
dec
add
pop
or
push
jmp
ret
and
xchg
je
mov
or
jp
test
sbb
sbb
mov
mov
inc
and
mov
es
test
stos
repnz
popf
dec
and
xchg
add
mov
and
xorl
inc
adc
lock
ds
xor
sbb
mov
sub
add
cwtl
jge
jbe
cmc
adc
lods
add
push
add
ja
or
add
push
adc
sbb
sub
sbb
sub
sbb
dec
dec
and
adc
pop
jb
or
jae
mov
sub
dec
mov
adc
cmp
jb
push
xchg
sub
ret
pop
add
ficomps
repz
jg
or
inc
and
iret
mov
xlat
ljmp
movsl
adcl
xchg
arpl
mov
cmc
mov
xor
and
adc
push
xchg
or
push
lea
pop
insb
xor
les
ljmp
scas
mov
shrl
adc
bswap
lea
loopne,pn
fwait
cwtl
ljmp
hlt
enter
clc
dec
dec
imul
mov
adc
xor
js
adc
fwait
sub
into
dec
add
cmp
aaa
cmp
inc
sbb
pushl
sbb
xor
xchg
mov
jecxz
xchg
mov
sub
sti
lea
and
sbb
cmpsl
ss
xor
pop
shlb
dec
push
das
sbb
add
or
enter
pminsw
add
xchg
sub
lea
push
andb
iret
cltd
sbb
insl
ss
inc
xchg
jecxz
adc
cwtl
dec
mov
loop
jecxz
pop
mov
cmpl
lock
hlt
dec
and
inc
or
mov
xchg
xchg
test
cmp
adc
inc
push
add
sbb
cmp
push
pop
aaa
leave
mov
or
addl
add
and
pop
pop
push
mov
push
sub
cltd
jnp
pushf
sbb
jb
mov
int
sbb
xchg
dec
stc
inc
lcall
or
xlat
ret
sti
faddp
shl
xor
fildl
inc
sub
push
ret
loope
or
inc
inc
pop
jbe
inc
jno
sub
data16
add
and
in
and
jb
sbb
and
push
mov
daa
std
lods
mov
and
inc
add
and
pusha
sbb
adc
push
xor
push
test
ljmp
lret
or
mov
les
loope
and
lret
xchg
fdivrp
jbe
mov
dec
dec
or
in
adc
adc
push
push
and
daa
pop
adc
adc
lods
daa
inc
leave
mov
add
push
mov
daa
lcall
enter
push
and
inc
fisubrl
repz
add
sub
sub
in
sub
push
jmp
popf
or
or
loopne
push
mov
js
icebp
js
xlat
inc
mov
or
pop
outsb
in
popa
push
test
pop
cmp
daa
lret
neg
mov
pop
sub
sub
inc
mov
or
in
movb
cld
cmpsl
orb
hlt
inc
hlt
stos
add
lcall
mov
fisttpll
adc
insb
testl
ret
dec
xor
add
test
xor
ds
cltd
or
scas
sbb
sub
enter
lea
xlat
push
decb
push
sbb
pusha
rcrl
jmp
loopne
movsl
outsb
adc
insb
pop
and
cmpb
lea
xchg
add
mov
sub
inc
pop
loope
or
inc
push
aas
idivb
inc
sub
cmpsl
push
sub
lock
xor
cld
nop
cmp
mov
xor
in
sub
bound
pop
dec
sahf
movlps
shll
sbb
lret
or
mov
xchg
mov
int3
push
pushf
in
fisubl
adc
push
test
xorb
pop
mov
lock
adc
scas
in
sbb
push
xchg
int3
cmp
mov
dec
push
pop
mov
fsubrs
push
lea
jl
xchg
lea
in
das
cmp
aad
cmp
daa
loopne
adc
xchg
pop
push
adc
loope
aaa
insb
popf
hlt
movsb
pop
lds
aaa
in
in
jnp
test
jo
adc
pop
mov
dec
mov
ss
add
pop
nop
push
mov
ret
inc
add
data16
or
lds
dec
movsb
mov
inc
pushf
sbb
mov
je
divb
nop
pop
adc
shlb
sub
xchg
cmpsb
sti
int
cmp
xchg
push
sbbl
dec
pop
push
fnstsw
xchg
xlat
mov
pop
loope
or
mov
add
lods
mov
jns
pop
pop
js
rorl
adc
stos
and
push
xor
hlt
or
mov
dec
in
cltd
roll
insl
jecxz
and
inc
inc
pop
mov
popa
pop
fildl
push
adc
pusha
mov
les
dec
xor
or
xchg
sarb
push
loopne
arpl
aam
and
xor
sbbb
movsb
xor
in
mov
js
add
and
ret
cmp
js
or
cmpb
inc
pop
pop
push
pop
or
mov
nop
ss
cmpsb
xchg
jnp
orl
push
fisubl
or
mov
inc
je
sub
ficoms
pusha
roll
inc
pop
cmp
stos
test
jne
mov
lahf
dec
cmpsb
cmp
roll
xchg
adc
or
out
sarb
push
and
mov
or
test
xchg
jle
jne
push
mov
add
stos
cs
add
cmpsb
dec
in
mov
shll
inc
lds
mov
mov
or
push
adc
movups
mov
push
aas
xor
test
inc
cmp
and
pushf
mov
rorl
outsl
jle
cmp
jae
arpl
sbbb
adc
in
aam
out
ds
nop
lods
jne
int3
and
pop
cmp
or
test
pop
movsl
inc
movsb
jmp
test
or
fiadds
push
aas
cmp
fsubrp
add
test
hlt
je
and
dec
lods
ret
mov
fcom
outsl
cmp
dec
insb
push
push
push
and
repnz
mov
js
aas
xor
rorl
cmp
or
mov
fcmovnb
iret
mov
sub
in
movsl
xchg
adc
adc
insl
adc
and
scas
jge
adcb
loopne
imul
xor
sbb
sub
inc
adc
test
jg
push
jmp
nop
inc
outsb
pop
and
add
in
or
adc
push
mov
stc
je
adc
in
push
pop
adc
lods
or
push
xor
add
sub
xchg
mov
cmp
mov
or
scas
jmp
and
sub
sbb
dec
cmp
dec
pop
adcl
push
pop
pusha
lock
les
push
add
int3
mov
xor
xchg
sbb
jo
loopne
jmp
aam
dec
pusha
pop
adc
xor
jg
and
pop
mov
test
sbb
xlat
popf
jle,pt
shlb
punpckldq
rclb
dec
add
add
mov
call
push
add
xchg
push
push
sub
fmuls
mov
mov
cmp
inc
add
and
iret
adc
nopl
inc
xor
push
lea
sbb
out
or
fidivrs
int3
pcmpgtb
je
and
mov
cli
mov
push
test
js
mov
and
pop
adc
cmp
push
add
and
das
jecxz
dec
cmp
cmpb
xchg
popa
les
mov
mov
or
lods
xorb
roll
cmc
mov
enter
les
inc
and
paddusb
pushf
or
pop
jbe
aaa
fs
mov
cmp
lods
call
pop
sub
daa
jmp
cs
inc
add
push
mov
jno
stc
cmpsl
or
jae
nop
xor
add
insl
mov
fdivrl
dec
jl
pop
push
out
xchg
sbb
popa
call
xor
roll
mov
xchg
mov
shlb
aas
paddsb
clc
and
jo
fiaddl
ficomps
pop
cs
fstl
cmp
dec
xlat
scas
sub
aad
cmp
popf
jb
push
mov
pop
push
pop
mov
adc
adc
test
cmpl
inc
or
je
aam
ss
adc
cwtl
mov
jecxz
outsb
insb
fwait
scas
mov
daa
scas
loopne
scas
jge
and
add
adc
aas
scas
xor
mov
outsl
mov
add
ss
cmp
mov
inc
fdivrp
xchg
lds
cmc
sbb
push
mov
popf
shl
mov
sub
xor
dec
push
je
dec
jne
or
cmpsb
sti
in
in
dec
imul
adc
push
and
and
lahf
lock
pusha
mov
xchg
cmpsl
add
adc
hlt
cmp
sub
dec
lods
push
add
cmp
je
mov
je
mov
sbb
ret
rorb
sub
mov
orb
imul
outsl
jg
lea
push
lea
cli
jb
lea
or
adc
dec
outsb
les
push
sbb
or
das
add
popf
lea
and
test
bound
test
xor
and
mov
lods
pop
outsb
or
ret
sbb
daa
sbb
push
push
or
repz
jb
orl
sti
xorl
mov
lock
imul
cmp
testb
adc
dec
mov
xor
int3
mov
and
je
lret
dec
push
testl
or
xor
sbb
inc
inc
mov
sti
inc
xor
fmuls
or
or
call
lret
jmp
sbb
les
or
push
pop
cmp
add
jo
adc
jne
mov
push
cmp
add
cmp
jge
or
test
push
cmp
jmp
cmp
push
push
and
cmp
and
fsubrs
ret
subb
mov
mov
aaa
movsb
aas
sub
dec
les
xlat
jg
mov
xor
std
mov
mov
je
xlat
sbb
mov
adc
push
or
sbb
jg
inc
jne
or
enter
pusha
pop
add
movl
add
push
push
and
sub
push
sbb
xorps
insb
nop
inc
dec
adc
dec
imul
fs
add
push
mov
pop
test
inc
inc
sub
fdivs
lcall
or
xor
xchg
push
mov
ja
jge
mov
push
mov
or
inc
cmp
dec
jbe
test
inc
pop
out
xor
mov
jmp
pop
cs
ret
sbb
add
insb
inc
and
mov
jp
and
adc
push
jb
iret
test
lods
cld
mov
xorl
insb
mov
mov
in
or
mov
lea
or
mov
in
dec
or
sbb
xchg
adcl
sub
fs
mov
mov
xor
mov
lods
mov
jae
inc
out
in
in
add
cmp
and
xchg
push
ja
mov
sub
popf
mov
call
cmp
cmpb
je
push
pushf
mov
sub
dec
outsl
call
jnp
movsl
dec
sbb
stos
push
xchg
cmpsb
mov
sub
lods
or
mov
dec
push
fdivrl
mov
or
ret
call
fs
lcall
hlt
xchg
ret
lds
cmpsl
mov
mov
in
mov
pop
mov
pop
xor
lret
daa
movsl
jnp
mov
jae
mov
cmp
lds
fadd
sbb
ror
lock
push
add
push
add
ror
cmc
xorl
dec
push
jbe
mov
nop
faddl
jmp
jp
adc
rolb
inc
cmp
xchg
int3
popf
pushf
jmp
or
inc
enter
cmpsb
mov
mov
call
lods
aaa
pushf
dec
mov
pop
sbb
addr16
rcll
sbb
mov
adc
je
adc
add
sbb
push
je
incl
cmp
jo
fdivrl
mov
push
jle
dec
outsb
xchg
shlb
aam
dec
and
dec
pop
leave
cmpb
or
inc
xchg
sbb
pop
push
test
in
test
sbb
or
mov
add
mov
adc
add
aas
jns
pop
cmp
insl
sbb
test
shl
aaa
sub
xor
lods
push
mov
popf
or
fdivl
inc
aad
sub
andl
out
sarb
cmp
lods
xor
addl
mov
test
push
jb
sbb
dec
pop
insb
xor
sbb
pusha
xchg
push
xor
loope
popf
add
jle
lock
dec
cwtl
test
jo
push
jnp
outsb
or
inc
sub
jge
repz
jns
hlt
adc
aas
cs
insb
test
lods
xchg
dec
aas
cli
insb
or
movsb
push
cmp
add
add
adc
add
test
sbb
jb
scas
pop
mov
out
cmp
shld
fisttpll
cmp
movsb
sub
mov
stc
mov
in
cmp
cmp
fidivrl
adc
push
dec
dec
xchg
and
sbb
mov
dec
dec
cmp
and
jl
in
sbb
sub
leave
xchg
xor
jl
les
push
add
xchg
push
mov
sub
mulb
ss
movsl
push
sbb
rorb
xchg
loope
xor
loopne
dec
xor
pop
xchg
adc
xchg
xlat
or
addl
push
and
add
add
pop
cmp
fistps
xor
and
xor
dec
add
or
movsl
dec
and
or
loope
adc
enter
add
and
enter
testl
add
sti
xchg
pop
add
cld
xor
test
pusha
das
dec
mov
enter
scas
clc
inc
push
sub
xor
push
dec
and
jmp
push
loope
dec
sbb
mov
imul
sbb
mov
pop
push
sub
push
cltd
mov
and
xchg
and
stos
sub
xchg
add
xchg
ss
jns
add
enter
push
int3
js
insl
or
cmp
scas
jnp
popf
daa
xor
or
mov
sub
push
popa
mov
cld
pop
imul
push
cmp
or
and
mov
cmp
and
mov
jmp
lock
jo
mov
inc
sub
xor
outsb
xchg
or
mov
add
nop
je
xor
cmp
xor
xor
xor
imul
dec
sub
pop
inc
push
movsb
mov
adc
sbb
sub
jno
or
pushf
inc
aaa
ss
adc
or
test
pop
dec
cmp
je
jae
mov
cmp
les
mov
jno
in
cli
jp
push
stos
adc
out
je
jno
movb
mov
cmp
movsb
pusha
sbb
outsl
pop
sbb
inc
jne
lea
orb
jae
rcrb
push
mov
xor
xor
inc
inc
mull
mov
push
adc
jo
cltd
mov
and
mov
aad
ja
push
js
adc
imul
push
repz
push
push
mov
iret
xor
add
push
sub
scas
push
mov
mov
push
clc
out
mov
ljmp
push
cmp
push
adc
enter
in
add
add
xor
sbb
add
fs
pop
pop
mov
mov
aad
jae
push
jno
fsubs
or
sti
jmp
ret
cmp
decl
xchg
lret
and
pop
lea
in
iret
in
mov
sub
mov
push
mov
hlt
jne
mov
lahf
sbb
daa
pop
fistps
pop
or
mov
pop
mov
push
pop
mov
sub
pop
add
mov
dec
lret
mov
dec
int3
test
lock
or
or
and
dec
mov
inc
xchg
loopne
push
jg
jp
lods
lea
sub
icebp
loopne
fimull
jnp
and
xchg
les
dec
loop
or
pop
out
pop
dec
push
add
cmp
sbb
iret
mov
sub
inc
bound
jne
ds
fdivs
mov
shl
sub
imul
mov
rcl
mov
xchg
shll
cmp
dec
pusha
imul
minps
xor
jo
xchg
adc
mov
pop
lahf
mov
sarl
pop
mov
pop
jge
push
hlt
xchg
jle
add
sbb
fstl
push
out
shrl
push
cmpsb
or
cmpsl
fistpl
push
rcrl
in
roll
cmp
mov
dec
push
mov
mov
mov
rclb
push
test
jb
in
xor
xchg
cmp
xor
cmp
orl
push
mov
adc
sub
push
popf
adc
push
and
arpl
sti
das
push
bound
aad
xor
lock
jg
sub
shrl
push
test
jae
xchg
mov
dec
test
popa
jne
int
leave
cmpb
leave
and
mov
mov
mov
dec
push
movsb
sbb
popa
sbb
push
sbb
mov
iret
mov
xchg
push
xor
ret
in
xor
dec
and
and
in
dec
lds
je
add
push
xchg
and
cmp
and
sub
movsb
jnp
daa
mov
movsb
fwait
dec
and
pop
xorb
dec
and
enter
xchg
push
in
sbb
out
sub
in
dec
and
out
jb
sbb
pop
in
sub
leave
adc
xchg
sbb
and
mov
andl
dec
loopne
pop
add
andb
rorl
pop
imul
xchg
test
loope
mov
add
test
stos
lock
or
sbb
iret
push
jae
roll
xorl
push
loop
leave
xchg
and
sub
int3
add
and
push
pop
add
dec
insl
mov
enter
xor
xor
insl
mov
fadds
shll
es
add
call
adc
xrelease
in
cmp
rolb
cmc
xchg
orl
add
inc
test
pop
adc
fs
or
add
and
aad
jno
nop
xchg
shlb
loope
adc
fnstenv
and
cmp
inc
je
jo
ds
repnz
sar
jl
xchg
push
repz
fs
ret
adc
daa
xor
fwait
adc
or
shrb
cmpsl
sbb
cmp
pusha
jle
test
js
neg
cmp
jge
push
fsts
xor
loopne
sbb
xchg
or
movsb
jl
fiaddl
add
lods
ror
loopne
xorb
push
das
adc
dec
popa
push
or
adc
rcrb
ds
xor
dec
adc
jle
inc
cltd
mov
ss
arpl
dec
push
add
adc
or
mov
jle
into
jae
inc
add
outsb
mov
or
shlb
loopne
mov
cmpsl
jnp
push
andb
push
lock
inc
orb
cltd
ljmp
ret
shlb
jle
xlat
pop
sbb
loop
inc
lret
inc
fdivrl
mov
lock
cmp
ret
sub
jecxz
rclb
loopne
push
mov
cmpsb
dec
adc
lods
lods
cmp
or
push
arpl
adc
cmpsl
mov
into
and
dec
lock
hlt
ret
mov
mov
mov
js
and
mov
add
lds
mov
sub
ret
add
xor
xor
lods
pop
aaa
dec
and
push
popf
add
les
sbb
cwtl
mov
pop
cltd
data16
testl
fisubl
mov
cmp
xor
sbb
daa
or
ja
out
orb
sbb
dec
mov
or
insb
dec
lock
dec
pmuludq
sub
sub
les
rorl
xor
shll
pop
fcoms
or
mov
or
imull
xorl
daa
cmp
adc
mov
jo
add
jo
mov
lret
lcall
sbb
and
dec
iret
inc
xchg
popf
mov
js
dec
je
fadds
loopne
cmovge
stc
adc
or
push
jns
adc
enter
pop
rol
movsb
imul
adc
add
adcb
adc
jbe
popa
ds
push
ret
jo
ljmp
pop
mov
mov
pop
mov
mov
cmp
mov
add
or
mov
dec
lea
inc
xchg
sbb
xor
xchg
sbb
mov
ret
adc
inc
pop
dec
xor
fcomps
sbb
push
pop
or
jb
and
xor
adc
push
cmp
mov
fnstsw
dec
lahf
sbb
inc
xchg
lods
adc
adc
xlat
lret
xor
mov
jns
adc
sub
ret
sti
add
cmp
mov
inc
gs
enterw
push
js
sbb
sbb
cmp
clc
cmp
scas
pop
push
xchg
inc
testb
outsb
mov
pop
dec
das
push
sub
cmp
pop
mov
mov
in
push
cs
xor
in
dec
xor
pop
lea
pop
pop
push
push
xor
sbb
push
cmp
sbb
jno
test
or
inc
stos
incl
movsb
inc
inc
or
xor
mov
adc
cmp
adc
mov
sbb
xchg
aaa
mov
int3
push
adcb
adc
sti
nop
dec
pop
daa
cmpsl
or
sub
sets
mov
movsl
mov
and
dec
xor
and
jmp
dec
repz
inc
dec
dec
fwait
cwtl
popa
add
xor
leave
arpl
ja
cmp
loopne
and
push
jbe
cmp
popf
fisttps
and
repnz
mov
mov
ds
js
lea
cmp
cmc
and
cltd
rclb
addb
sbb
cmp
pop
sahf
add
icebp
push
sub
sub
jge
and
in
scas
bound
add
xchg
iret
clc
cmpsl
mov
sti
push
or
fnstenv
add
jmp
test
add
pop
imul
andl
xchg
mov
aam
cmp
and
lods
xorl
and
cmp
mull
scas
adc
and
aaa
mov
int3
out
push
adc
inc
daa
scas
and
outsb
cmp
in
cmp
cmp
adc
and
cltd
sub
sbb
push
sub
pushf
inc
and
push
adc
adc
fmuls
inc
adc
and
cmp
inc
or
push
adc
repz
sub
and
dec
in
shrb
inc
pop
xor
xor
add
push
subb
mov
cmp
jmp
push
pushf
cltd
pop
dec
popa
cmp
rcrb
repz
jecxz
and
push
je
aaa
js
cmp
sbb
popa
pop
adc
mov
inc
rcrb
movb
dec
addl
ret
push
je
push
push
cmpsb
cmp
xchg
fwait
lods
push
dec
loopne
xor
mov
mov
lea
fmull
dec
xchg
push
daa
push
sub
add
adc
xchg
pusha
and
jae
es
xchg
movb
xchg
jmp
adc
fldenv
mov
push
rcrl
icebp
push
pop
cltd
or
sub
movsb
fcomps
lods
mov
sbb
xor
inc
jns
out
add
mov
dec
movl
add
cmp
test
mov
jp
dec
or
dec
add
movb
push
addl
aaa
add
add
pop
jl
fsub
xchg
orl
cmp
cmpl
test
jecxz
lods
mov
or
jle
push
movl
xchg
or
add
sub
add
jbe
mov
mov
movsl
lock
shl
lcall
movb
pop
aam
and
loope
adc
addl
out
jo
hlt
icebp
push
aad
sub
dec
jl
das
movl
mov
cmp
cmp
adc
ja
xchg
cmp
xlat
mov
dec
sarl
pop
push
push
sbb
outsl
dec
sbb
xchg
mov
and
jecxz
fisubrl
cmp
or
daa
dec
jo
add
pop
mov
pusha
push
dec
lcall
inc
into
and
jge
adc
sti
dec
pop
fs
mov
xchg
ficoml
sbb
call
cli
inc
hlt
jmp
cli
mov
mov
fdivrs
fcoml
sbb
out
icebp
inc
push
into
int
mov
adc
movlps
iret
mov
inc
shll
rolb
jno
js
scas
jle
dec
loopne
adc
cmp
add
lret
inc
stc
pop
and
sub
in
sbb
rcll
adc
jle
movl
or
in
shr
sbb
mov
cmp
xchg
pop
add
cmp
loope
push
iret
mov
lds
test
sbb
sbb
lcall
pushf
jecxz
divb
ficompl
hlt
in
out
sub
jge
mov
shrb
xor
cmp
jl
cmp
inc
cld
bound
push
push
fcmovb
ret
push
mov
adc
js
mov
addr16
jp
xchg
loope
std
js
pushf
rclb
loope
or
idivl
adcb
sets
or
push
or
xchg
dec
scas
test
pop
cmp
movb
pop
mov
adc
cld
arpl
mov
mov
adc
adc
add
ret
lea
xchg
fimuls
mov
mov
mov
incl
add
dec
mov
mov
popa
add
and
sti
jne
movsbw
dec
fildl
jns
jne
and
or
aaa
mov
adc
fwait
dec
inc
push
add
jge
insl
add
out
mov
push
lds
inc
hlt
scas
insl
mov
inc
lods
sbb
inc
mov
mov
dec
ds
je
mov
addl
or
shr
push
mov
lea
daa
add
nop
add
sbb
mov
xor
scas
popf
loopne
mov
mov
adc
cmp
sub
scas
pop
push
movsl
dec
ss
sti
sbb
push
hlt
mov
mov
sbb
jl
dec
cmpsl
mov
pop
cwtl
cs
sbb
inc
dec
sub
and
add
add
add
sbb
xchg
xor
inc
and
loopne
out
jae
push
adc
sbb
adc
shrb
xchg
xchg
xor
inc
es
les
add
sbb
testb
fcomps
lds
insl
mov
lret
xchg
mov
mov
int3
sbb
mov
dec
and
leave
or
jg
sbb
ljmp
mov
sub
cs
and
lahf
sbb
ljmp
cld
adc
in
or
arpl
mov
mov
repnz
loop
pop
add
addb
imul
inc
xor
in
lods
or
jno
stos
icebp
icebp
je
sub
cmp
pop
test
jne
fdivrs
push
or
inc
sub
mov
and
and
xchg
das
push
sub
and
mov
andl
xchg
push
push
lock
paddsw
fiaddl
push
dec
mov
popa
fcomi
in
add
movsb
mov
call
jns
sbb
dec
hlt
addr16
call
cmp
pop
pop
dec
mov
out
out
xor
shll
iret
add
push
fiaddl
lods
inc
xor
push
xchg
rcl
mov
add
push
aam
filds
dec
dec
int3
jmp
sub
mov
jnp
roll
dec
clc
pop
movl
jmp
lock
lock
test
mov
and
dec
loope
push
pusha
and
fnstcw
aam
or
push
push
push
mov
inc
popa
mov
mov
push
pushf
sub
adc
lahf
inc
jo
jge
jae
sbb
jno
loopne
lds
outsl
jg
not
mov
adc
fs
inc
sub
inc
xchg
cld
push
push
or
add
inc
pop
pop
jle
in
lea
jmp
add
add
or
add
mov
dec
inc
inc
add
add
push
mov
inc
test
addr16
add
adc
xor
sbb
and
jge
inc
sub
xor
addl
add
mov
mov
or
clc
add
add
mov
jp
in
push
push
and
adc
push
cmp
hlt
nop
sub
sub
push
and
sub
call
jno
push
add
push
push
imul
push
push
pusha
in
pop
push
mov
or
shrl
je
pushf
cwtl
in
push
cmpsl
mov
aam
xchg
mov
scas
adc
call
test
lock
inc
cwtl
cmp
cmp
jne
sbb
adc
jle
and
cmp
mov
cmp
mov
lea
dec
push
and
nop
xor
inc
push
push
hlt
dec
lods
lods
mov
dec
xchg
nop
xor
mov
pushf
orb
pushf
nop
dec
imul
mulb
add
aam
insb
shrl
test
xchg
imul
inc
jo
movsl
cs
pop
sti
xor
mov
inc
cwtl
lcall
orl
mov
cmp
lea
mov
lea
in
imul
idivl
mov
adcb
movsb
dec
mov
sti
pushl
jle
cmp
js
add
xor
jbe
jp
xchg
xchg
jbe
adc
jb
js
mov
xchg
cmpb
inc
mov
cmpl
push
cmpsb
out
cmp
add
add
loop
or
and
cmp
cld
push
lcall
mov
mov
jno
xchg
mov
xor
and
movb
adc
pop
push
sub
enter
aad
mov
sbb
inc
push
pop
pop
sbb
repz
arpl
mov
push
mov
sub
in
jae
ret
xchg
push
sbb
cmp
xchg
nop
loop
fcoml
jg
push
push
rcl
ja
xor
push
pop
dec
push
pop
cmp
push
add
call
mov
into
shll
lahf
sbb
push
cmp
lcall
adc
adc
clc
jo
or
jnp
add
sbb
mov
movsl
push
push
je
pop
push
push
adc
loopne
push
fists
push
xchg
jnp
lea
in
arpl
test
xlat
cmc
data16
inc
push
movsb
sahf
js
loopne
mov
mov
push
in
jg
adc
push
int3
sub
testb
lods
scas
push
cmp
mov
add
xchg
push
xor
dec
das
call
and
pop
or
int
push
jo
out
push
popl
xchg
inc
rolb
daa
or
adc
outsb
mov
inc
in
out
loope
loope
bound
pusha
enter
xor
in
out
les
inc
jmp
and
dec
mov
and
jge
scas
push
int3
pop
mov
add
cmp
or
mov
xor
mov
jae
or
rorl
mov
xor
dec
pop
sub
cmp
adc
inc
rol
jmp
sbb
lock
je
bound
pop
loop
push
jno
adcl
ret
sub
adc
push
or
aam
pop
add
bound
or
mov
and
mov
add
aam
xor
sub
dec
dec
push
and
mov
push
jbe
cmp
je
jge
test
test
sbb
mov
test
xorb
popa
push
shlb
inc
lret
jno
loope
dec
cmpsb
add
jle
add
push
pop
and
xor
inc
lock
pop
mov
orb
insl
adc
lds
sbb
insl
dec
in
mov
and
test
mov
gs
out
jmp
retw
pop
sub
push
lods
mov
cmp
push
rcrl
inc
mov
sbb
rcr
jmp
test
pop
pop
rol
push
loopne
or
mov
push
lret
mov
test
adc
xor
push
outsb
mov
fldcw
pusha
lret
or
js
inc
jb
sbb
cmp
or
dec
and
or
mov
mov
stc
jle
add
cmpw
sbb
push
sarb
push
push
loopne
add
pop
push
pop
mov
les
add
stc
hlt
push
je
pop
jo
add
pushl
into
jns
adc
pop
jns
mov
push
xchg
adc
pop
mov
or
les
push
sahf
ret
dec
popa
pusha
jne
dec
dec
push
add
jp
sub
jmp
cmpsb
aaa
add
jae
or
movzwl
inc
call
add
pop
or
inc
test
mull
nopl
add
cmp
add
mov
subb
ss
adc
ret
add
mov
xorl
cli
pusha
fwait
mov
in
pop
mov
icebp
aad
sbb
je
cs
xchg
sbbl
and
popa
xchg
icebp
mov
jne
mov
cmp
jne
cmp
mov
jb
fs
push
jle
cmp
insl
add
pop
dec
pop
in
push
mov
xor
lea
jo
fmull
in
jo
and
jle
lcall
ja
loopne
insl
pop
adc
sbb
cmp
stos
mov
sub
push
dec
push
sub
pushf
push
test
pusha
popa
jge
add
aaa
lret
dec
add
or
dec
xlat
add
mov
adc
movsl
xchg
sbb
mov
scas
les
and
inc
pusha
jne
jbe
cmp
fldl
aas
nop
xchg
inc
or
xor
dec
sub
lock
jns
pusha
and
mov
test
shrl
adc
add
adc
xchg
push
test
cmp
pop
rorl
or
dec
inc
push
lcall
sbb
cmpsb
sub
out
in
add
dec
arpl
popa
inc
adc
sub
mov
add
js
mov
pop
adc
test
lock
push
add
xchg
and
push
roll
push
cmp
jl
adc
xor
test
sbb
or
add
push
ret
add
into
dec
xor
xor
or
std
lds
or
sbb
daa
adc
jle
push
cmpl
pop
jo
or
jb
jnp
add
and
inc
mov
sbb
jge
jae
cmpsl
mov
sub
mov
push
jge
and
icebp
mov
mov
cmpl
mull
mov
les
push
enter
dec
decl
xor
dec
cmp
ljmp
inc
dec
pop
jne
test
pop
push
call
ja
insb
and
xor
or
loopne
outsb
punpckhbw
je
push
and
inc
pop
hlt
add
scas
push
and
lret
in
icebp
dec
ret
dec
je
ret
push
jns
in
push
or
mov
sahf
out
mov
add
lock
setbe
les
inc
inc
icebp
fisubrs
xchg
nop
outsb
sbb
fdivr
loopne
movsl
push
sbb
pop
inc
adc
or
pop
pop
pop
inc
in
inc
mov
and
dec
xor
mov
stc
and
adc
loope
incl
cli
dec
jmp
mov
pop
movsb
and
jne
adc
jo
cmp
add
pop
in
adc
inc
mov
fs
add
rcrl
fisubrl
stos
shll
lret
xchg
dec
mov
imul
fcomps
fsubrs
sbb
jecxz
les
xor
push
inc
aaa
std
dec
cmp
mov
xor
jmp
push
in
inc
cmpsb
push
das
pop
sbb
xor
ss
sbb
jmp
adc
pop
push
cwtl
sub
andb
jo
fucomip
inc
les
inc
fs
in
or
push
pop
push
inc
dec
sub
cltd
mov
xor
sub
dec
mov
loop
cmp
inc
add
ja
negb
mov
fs
sbb
and
cmpl
or
mov
push
loop
mov
pushf
and
jnp
adc
mov
mov
mov
sbb
push
push
ret
inc
push
mov
dec
push
lods
add
clc
push
dec
sub
mov
inc
push
mov
iret
shlb
dec
inc
movsb
dec
in
int
jmp
push
sub
fidivrs
fists
pop
dec
mov
enter
dec
inc
roll
test
test
push
xchg
mov
shlb
jne
push
call
sbb
test
sbb
mov
in
inc
test
and
cwtl
pop
je
xchg
jecxz
pop
cmp
fwait
int3
ret
mov
sbb
jmp
dec
push
repnz
testl
push
sub
inc
movsb
xor
adc
test
mov
jno
insl
loopne
dec
mov
mull
je
sub
pop
ja
cmp
leave
in
or
mov
loop
stc
test
or
leave
pop
dec
fists
or
out
enter
or
mov
adc
add
xor
dec
xlat
scas
push
subl
adc
or
stos
mov
daa
lret
test
dec
push
xchg
add
jecxz
jge
ret
and
test
cmp
cvtdq2ps
or
or
ficompl
cld
dec
add
jmp
lret
mov
dec
pop
adc
shrb
lods
les
enter
rolb
pop
cmp
pop
sbb
push
adc
sub
enter
adc
inc
or
pop
mov
and
loope
pop
push
pusha
or
jle,pn
subb
mov
push
push
ret
in
lea
or
and
xor
les
js
pop
pop
cmp
push
cmp
add
clc
pop
jne
cmp
cmp
push
and
imul
mov
clc
push
xor
pop
jle
fsubrs
imul
cld
hlt
mov
test
or
and
sub
rclb
rcrb
mov
xor
adc
adc
push
push
filds
sbb
add
mov
movsb
cmpsb
jmp
mov
popf
loop
push
out
xor
adcl
pop
push
mov
adc
cmp
jmp
fldt
or
xor
out
fadds
push
mov
pop
push
dec
sub
mov
sub
or
dec
imul
arpl
js
sbb
sbb
push
xor
and
jmp
cmp
jne
xor
inc
add
inc
enter
scas
sbb
jmp
ss
mov
pop
mov
xchg
dec
into
cwtl
mov
pop
leave
adcb
push
mov
pop
xchg
stc
and
mov
adc
sti
mov
shrb
ljmp
mov
push
push
push
jno
jmp
lods
or
imul
mov
stos
or
push
jno
mov
rcrb
gs
stos
jno
dec
xor
xor
jl
les
pop
sub
cmp
jl
add
jae
cli
incb
and
addr16
xchg
jns
cmp
insb
push
push
push
adc
and
pushf
inc
mov
mov
decl
and
or
lret
and
jae
sbb
cmp
adc
sbb
cmc
push
jno
add
push
loopne
adcl
jecxz
or
jae
nop
add
dec
push
mov
adc
loopne
int
bnd
imul
lret
stos
pop
mov
outsb
or
lock
push
in
add
rol
sbb
or
mov
rcll
mov
or
and
scas
xchg
pop
iret
add
jno
pop
andl
xchg
mov
sub
cmpb
sub
add
repnz
call
sub
push
xchg
mov
add
mov
or
inc
sub
sub
jne
push
rorb
sub
xor
xor
cmp
js
xor
adc
pop
adcb
sub
nop
or
sbb
jl
fldl
push
cmp
jb
cmc
or
or
icebp
push
lods
inc
and
test
scas
in
mov
jl
sbb
std
mov
cwtl
popf
or
push
or
dec
xchg
mov
xchg
add
es
rorb
shl
cmpsb
dec
mov
lcall
scas
and
ud0
test
add
adc
mov
push
movsb
pop
sbb
loop
cmp
xor
inc
js
push
lock
xor
fwait
push
andl
daa
adc
pop
inc
push
or
sbb
jo
jno
cmc
cmovge
or
shl
add
or
shr
sub
mov
and
adc
cltd
arpl
xor
movsl
and
pop
xlat
adc
push
stc
movsl
sub
popf
nop
outsb
bound
mov
jmp
mov
or
arpl
aas
shll
lds
jmp
mov
mov
push
jge
movsl
push
mov
leave
adc
sbb
inc
jp
push
mov
sub
and
mov
xchg
sub
popa
sbb
leave
lods
xor
imull
pop
lret
mulb
xor
scas
xor
aaa
mov
jecxz
pop
jb
push
sub
dec
push
mov
pop
xor
daa
sub
repz
movsl
pop
cmpsl
sbb
push
dec
dec
sub
dec
xchg
inc
push
popa
add
pop
lahf
shlb
je
add
push
adc
add
andl
mov
and
or
sbb
mov
ja
xlat
pop
cli
in
in
repnz
mov
cwtl
stos
xorl
js
adcl
pop
xor
dec
and
shrb
inc
cwtl
cmp
stos
push
sub
lock
nop
xor
icebp
aad
pop
add
xchg
cld
test
and
cld
icebp
sbb
pop
sub
cltd
inc
dec
push
stos
lock
lods
call
movsl
in
mov
lret
call
mov
mov
andb
add
adc
rcr
aas
sub
popa
lcall
xchg
mov
inc
xor
sbb
pop
mov
test
adc
jb
mov
gs
fldl
dec
push
imul
sbb
shlb
or
and
xor
fists
cwtl
das
outsl
and
movsb
pop
xchg
inc
mov
pop
xchg
ficoms
or
icebp
push
xchg
das
xor
loopne
rol
xor
je
dec
scas
lea
push
pop
sub
and
sbb
adc
les
add
xchg
add
inc
xor
jnp
and
pop
fisubl
sbb
push
push
shlb
adc
data16
sub
in
xchg
or
adc
mov
adc
ret
jns
mov
jp
mov
neg
mov
sbb
xor
jmp
rcrl
adc
push
enter
inc
adc
sbb
push
xor
add
loop
psraw
outsl
mov
fists
and
movsl
das
push
pop
xchg
cmovp
adc
or
sbb
stc
sahf
ljmp
dec
inc
into
dec
inc
jb
or
je
sbb
dec
test
dec
mov
jne
fs
aaa
roll
faddl
xchg
adc
and
inc
push
inc
add
push
out
dec
or
imul
dec
in
adc
sbb
lahf
adc
sbb
xchg
adc
adc
push
ja
shll
loope
add
movzwl
add
or
adc
cmp
mov
in
push
sub
filds
inc
sub
sub
sbb
inc
or
enter
xor
ds
mov
adc
push
mov
orb
ret
or
js
xor
jl
adc
pushf
cmp
jbe
or
fiaddl
push
inc
cmpb
arpl
jo
push
mov
xlat
xchg
push
or
and
dec
sarl
push
out
mov
adc
in
mov
es
xor
aaa
sahf
bnd
popa
or
mov
dec
and
movsl
imul
rorl
out
xor
or
sldt
sarl
lods
adc
mov
jmp
adc
add
into
in
sbbb
and
sbb
ja
sbb
ds
mov
inc
clc
and
push
sbb
and
add
pop
inc
fidivs
pop
or
insl
adc
push
adc
inc
inc
adc
add
les
dec
inc
clc
pop
mov
ret
dec
cmpsl
push
mov
imul
out
pop
pop
fnop
mov
mov
adc
ret
subl
sbb
fs
vmovntpd
sbb
ret
xor
xor
sti
adc
loopne
or
push
pop
adc
enter
push
pop
push
inc
xchg
dec
xorb
ret
mov
mov
jae
and
test
fdivs
sbb
mov
jmp
inc
lcall
out
out
mov
mov
bound
jl
jb
pop
cmpsl
jp
adc
lcall
jno
add
rclb
adc
rcrl
adc
jo
push
push
mov
es
outsb
xlat
jge
mov
xor
and
inc
icebp
push
or
inc
xchg
sbb
shl
xor
push
pop
xchg
jle
sbb
pop
xchg
mov
xor
cmp
cmp
arpl
xor
mov
mov
dec
hlt
push
inc
es
and
push
push
sbb
and
aaa
mov
dec
pusha
sub
or
shlb
hlt
xchg
sub
cli
adc
in
adc
adc
lds
mov
fwait
pop
push
loopne
push
jns
dec
add
scas
mov
jge
popa
sub
loopne
push
rclb
out
sub
add
ss
push
adc
addb
inc
jmp
push
and
jmp
nop
push
mov
stos
stc
mov
cwtl
xchg
sarb
or
push
lods
and
nop
pop
mov
or
adcb
and
repz
addb
pusha
mov
or
mov
test
xchg
addr16
push
fwait
mov
push
inc
inc
sbb
clc
pop
rcll
mov
jge
add
jns
push
mov
cli
push
push
mov
push
test
fstps
test
pop
lock
bound
fisttps
fcoml
loope
jb
in
and
aad
inc
rolb
fldcw
lods
rcll
std
jne
stos
push
push
aas
jmp
subb
popa
xor
cmc
add
iret
and
je
pushf
stos
mov
and
jae
cmp
ret
aaa
dec
and
push
adc
das
and
pop
repnz
dec
or
adc
add
ret
xchg
add
pushf
or
test
dec
test
fiadds
sub
test
loop
mov
push
mov
pop
adc
push
adc
push
sbbl
andl
sbb
shlb
mov
add
rolb
pop
hlt
adc
or
out
scas
sbb
adc
pop
sub
popa
cmp
push
adc
rolb
and
dec
mov
testl
data16
jg
inc
ficoml
adc
and
das
mov
push
mov
dec
imul
dec
or
lea
lock
lea
and
fildll
jl
jmp
loope
dec
imul
aaa
sbb
pusha
sbb
adc
jo
loopne
mov
dec
or
testl
movsl
mov
xor
and
sbb
paddusb
add
fistpl
orb
leave
push
inc
mov
sub
mov
insl
and
loope
rclb
movsl
mov
into
jno
mov
sbb
rolb
push
or
push
mov
add
adc
add
xor
or
dec
imul
mov
push
sbb
inc
mov
sub
fcom
dec
jne
xchg
repnz
xchg
mov
adc
jp
and
adc
mov
movsb
lea
inc
push
jle
fwait
mov
das
fadds
out
push
adc
scas
enter
pop
testl
fcompl
inc
mov
pop
pop
lock
mov
cmp
mov
addb
adc
loope
loopne
jne
mov
int
mov
push
rcl
cmp
je
push
or
sahf
test
cld
jle
inc
ljmp
xchg
pop
jmp
mov
or
xor
faddl
mov
lods
jmp
loope
iret
push
sub
shll
xchg
or
or
loopne
test
cmp
push
pop
push
push
pusha
cmp
xor
fs
andl
fldl2t
sbb
xor
sbb
imul
out
dec
scas
inc
mov
sbb
pop
cmp
cmpsb
xlat
push
push
movsl
iret
sbb
add
sub
push
divl
rcr
xor
inc
test
or
in
ja
hlt
or
add
mov
aaa
and
mov
das
into
movsl
inc
and
cs
orl
lahf
and
mov
or
push
adc
cs
dec
cmp
cmp
adc
mov
jne
ret
push
cmp
scas
or
shrl
enter
es
xor
iret
push
sub
lea
push
sub
or
mov
or
jo
leave
cs
hlt
les
movl
and
push
push
sarl
add
cwtl
mov
lods
into
movsl
adc
xchg
popa
testl
dec
adc
adc
mov
aaa
cmpsl
push
or
and
outsl
jbe
enter
push
and
add
inc
inc
mov
dec
popa
cmp
lret
and
adc
xchg
push
addr16
rclb
imul
pop
std
jbe
add
push
imul
push
test
sub
add
dec
push
xor
mov
mov
push
sahf
pop
pop
xor
push
jnp
mov
sbb
arpl
idivl
flds
push
mov
in
iret
call
xor
inc
adc
rcrl
push
pop
or
pop
jne
cwtl
pusha
lods
pop
jg
inc
sahf
xchg
xchg
or
clc
insb
dec
or
or
sub
test
pop
or
mov
frstor
or
add
xchg
or
mov
repnz
push
nop
test
sub
cmp
fldenv
std
lds
push
jno
adc
pop
cmp
mov
les
stos
pop
or
mov
mov
and
add
and
cmp
fidivl
lods
or
sub
cmp
sub
cmp
and
insl
addl
int3
sbbb
mov
push
inc
popa
dec
mov
push
mov
sbb
test
mov
push
and
dec
popa
call
adc
stc
popa
pop
sub
mov
adc
mov
je
push
add
js
adc
test
rorb
xchg
rcl
or
xchg
sbb
fcoms
fsubs
add
movsl
mov
sbb
je
push
dec
call
pop
push
sub
jecxz
jp
mov
sbb
mov
add
shll
push
cmp
add
jle
mov
mov
int
pushf
and
adc
cmp
stc
out
inc
push
cmp
jle
cmp
jp
push
cmp
cmp
dec
clc
negl
mov
push
add
inc
jmp
inc
and
aas
fs
movw
mov
mov
mov
in
je
mov
inc
or
fs
pop
idiv
lock
pop
in
adc
rorl
ds
cmp
adc
mov
adc
adcb
stos
lods
test
testb
sbb
imul
jns
push
popa
or
pop
push
jbe
push
sub
xchg
shl
inc
add
outsl
xor
dec
mov
xchg
xchg
add
or
xor
test
mov
ficomps
cmpsl
rcrl
and
je
mov
pushf
cmp
xor
adc
adc
cmp
jo
sbb
push
daa
int
push
xchg
int3
cmp
push
mov
dec
sub
mov
add
xchg
or
pop
add
adcb
movsb
push
or
or
add
nop
dec
enter
inc
js
jns
xchg
ss
roll
cmp
add
or
inc
adc
cltd
in
or
cltd
inc
and
adc
add
loopne
and
cmp
sbb
push
push
shlb
pop
sub
or
nop
jl
popf
js
ja
je
les
filds
or
into
cmp
add
adc
add
rclb
lea
pop
dec
push
inc
dec
or
adc
or
shrl
jb
and
add
nop
lret
push
xor
dec
scas
xchg
and
or
dec
xor
or
rolb
cmpsb
or
pushf
push
mov
mov
iret
mov
outsl
or
pop
movsl
add
push
mov
pop
add
or
lods
stos
jmp
add
sub
rcll
aaa
sbb
dec
xor
sbb
sub
adc
mov
add
sub
add
test
sub
mov
sbb
outsb
xchg
and
add
rcr
and
push
outsb
and
loopne
rcrl
sub
sarl
push
fstl
subl
incl
and
push
xorl
in
mov
lods
push
xor
cmpsl
std
bts
push
or
push
xchg
fs
in
je
enter
xchg
cmp
enter
and
adc
adc
sbb
or
pusha
mov
leave
adc
inc
jb
sbb
mov
pop
adc
pop
add
nop
or
xor
xchg
adc
cmp
and
xchg
sbb
xchg
push
loope
push
mov
push
jo
jge
jl
roll
push
cmp
add
xchg
repnz
mov
or
adc
loope
dec
or
aaa
fwait
sub
sub
inc
out
adc
xor
rol
bound
sbb
sbb
push
and
and
push
dec
xor
nop
out
add
imul
jae
jb
pop
int
stc
mov
std
sub
arpl
xchg
add
ja
xchg
popa
xchg
add
and
gs
icebp
xchg
adcl
or
mov
cld
arpl
jns
add
insb
pop
adc
mov
adc
stc
bound
pop
lcall
or
add
adc
mov
fwait
adc
repz
sbb
pop
push
enter
or
jecxz
inc
adc
icebp
and
test
lea
fcomps
pminsw
or
jo
xchg
sub
insl
arpl
test
and
sbb
or
pop
xchg
sub
cmpsb
inc
ljmp
push
std
enter
rolb
pushf
fiaddl
jbe
insl
mov
flds
adc
push
push
inc
lcall
sbb
dec
or
pop
dec
scas
loop
sti
rcll
mov
loopne
out
popa
fcoms
mov
cmp
in
pop
xchg
push
loope
mov
lock
add
imul
mov
pusha
pop
xchg
or
rcr
sub
pop
add
test
add
inc
xchg
jp
clc
or
push
jne
push
dec
testb
and
add
leave
sarb
sub
cmp
and
add
add
and
jg
and
in
adc
sahf
cmpsl
popa
fwait
sub
push
imul
xorb
pop
add
cmpsl
stos
pop
xor
notl
data16
mov
ja
xchg
inc
push
push
jno
mov
dec
mov
xchg
clc
dec
loop
and
scas
xor
jg
test
and
shl
add
movsl
inc
add
cmp
jl
push
cmp
sarb
arpl
icebp
cmp
loope
add
outsl
sbb
push
add
push
lret
in
mov
xchg
jmp
jbe
aaa
add
in
orb
lods
xchg
nop
pop
xchg
adc
outsl
out
loop
nop
fmuls
es
or
xchg
outsb
inc
aas
push
push
fldl
punpckhwd
sbb
loopne
les
nop
add
ds
fs
in
pop
push
push
fldl
fisttps
pmuludq
sbb
cmp
ds
mov
fsubrl
insb
mov
fstpl
pop
movsl
test
mov
insl
pop
or
adc
pop
mov
or
fsub
pop
fsubrp
out
mov
jb
push
loopne
or
push
les
cmp
inc
aaa
dec
xor
fs
aad
in
idivb
mov
inc
ret
adc
rclb
jb
scas
sub
adc
xchg
insb
into
adc
or
shll
pop
inc
movsb
mov
inc
sbb
mov
jge
sub
fidivs
or
insb
insb
xlat
cmp
adc
xor
insl
test
push
add
daa
cmp
rolb
cmp
ret
ja
lock
inc
push
mov
push
sbb
dec
shr
daa
and
jnp
ret
fidivrl
sbb
add
rolb
test
dec
jp
daa
add
push
or
fstl
jmp
and
insb
mov
ja
jo
inc
mov
or
leave
and
dec
stos
sbb
sub
clc
clc
mov
push
lea
cmp
jb
stos
xor
shld
cmpsb
jno
mov
jb
in
ljmp
ss
push
and
push
rclb
or
mov
adc
add
push
leave
adc
cli
notb
mov
push
adc
push
push
dec
xor
jle
popf
pusha
or
cli
mov
pop
push
push
sarb
add
fdivrs
pop
nop
leave
sub
nop
push
incl
jecxz,pt
gs
dec
dec
dec
push
inc
roll
add
push
lcall
fcmovnbe
ja
dec
incl
push
push
cmp
push
adc
mov
sbb
push
push
orb
xor
je
jle
cmp
cmpw
jne
pop
outsl
jle
inc
adc
inc
inc
cld
cmp
jge
jge
dec
push
push
jl
mov
inc
sbb
sti
jg
stc
std
mov
or
sbb
jo
cmp
out
popw
jle
and
or
push
push
movsb
jle
push
push
push
xor
xchg
mov
imul
sbb
and
dec
addb
lods
mov
xchg
addb
ret
lcall
or
dec
inc
xchg
add
add
pop
add
push
sbb
sub
iret
xor
jb
inc
cmp
imul
jge
mov
sub
mov
cmp
lods
inc
xor
xor
inc
push
test
mov
or
push
push
mov
push
adc
jne
test
adc
std
mov
leave
pop
push
in
xor
xchg
jp
jo
andb
daa
movlps
xchg
mov
scas
mov
ret
test
jecxz
and
cmp
lahf
cmpl
call
pop
cwtl
jo
gs
lds
adc
xor
gs
mov
xlat
sub
cmp
add
popf
push
mov
sbb
jne
cwtl
out
inc
push
sbb
push
add
xchg
ds
and
ret
pop
add
shlb
pusha
ja
sub
call
hlt
shrl
xlat
sarb
ret
lcall
cli
xor
sbb
xchg
mov
mov
mov
push
mov
and
dec
push
inc
add
aas
or
inc
add
adcb
add
pop
loopne
adc
push
adc
cwtl
ljmp
xor
push
cltd
adc
jnp
or
mov
ljmp
movl
lods
dec
sub
fadds
lea
loope
rcll
ret
outsb
imul
add
test
mov
adc
inc
loope
dec
stos
push
daa
nop
adc
mov
mov
dec
adc
jo
adc
push
fiadds
sub
add
mov
inc
push
push
fmul
jp
addb
adc
jge
out
push
ja
sub
adc
xor
movsb
sub
dec
mov
fisubrs
jp
test
cwtl
adc
mov
icebp
sti
and
test
xlat
out
pop
mov
loopne
ret
je
sub
dec
sbb
xor
sub
dec
jne
sahf
jb
inc
adc
pop
stc
scas
lcall
mov
js
jmp
stos
jl
adc
adc
pop
push
or
push
jmp
push
mov
sub
and
push
sahf
cmpsb
sbb
pop
adc
scas
mov
mov
add
mov
nop
pop
mov
out
por
ss
add
loopne
lahf
inc
adc
xchg
or
shrl
mov
insl
out
add
xor
dec
jbe
pop
adc
push
adc
mov
push
add
xchg
mov
lock
in
and
orl
xchg
inc
sbbb
cmp
inc
in
sbb
sbb
pop
pop
inc
dec
inc
xchg
out
pusha
mov
pop
cmp
sub
pop
push
repnz
daa
fmul
push
insl
in
cmpb
pusha
adc
cmp
dec
jnp
or
xchg
lds
in
mov
daa
inc
dec
imull
xor
ja
mov
lea
fsubrl
push
cld
imul
dec
mov
out
and
sbb
sbb
cmp
js
jg
dec
out
dec
lahf
push
jge
insb
in
adc
push
push
imul
in
in
push
xor
out
sahf
out
push
or
and
das
cmp
push
pusha
jns
out
insb
cwtl
mov
sahf
out
lret
ljmp
scas
or
push
sub
jns
out
cmp
push
pop
sahf
out
sahf
push
pushf
ret
jns
mov
test
addb
xchg
add
add
sub
inc
add
mov
jle
dec
pop
cmp
mov
loop
lock
xchg
add
adc
gs
sbb
sub
jp
int
shr
jno
add
sub
iret
pop
cmpsb
or
aas
insb
sub
fwait
jmp
jl
mov
sub
xor
inc
pushf
push
imul
cmp
decb
add
out
fcompl
nopl
xchg
push
mov
inc
adc
xor
std
xor
and
add
lods
pop
add
xor
dec
roll
cmpsl
inc
movnti
and
add
enter
mov
mov
repz
dec
test
pop
jo
adc
adc
inc
jo
movsb
xchg
push
mov
das
imul
sbb
ja
rorb
cmp
pop
sti
sbb
js
scas
mov
push
cmp
push
adc
addl
push
in
add
imul
lret
sub
xchg
out
pop
xor
int
mov
rorb
and
xor
mov
adc
jge
push
push
cs
jmp
dec
and
js
inc
popa
mov
or
sub
lods
lret
imul
test
sub
dec
insb
orb
cltd
shrb
lds
sub
pop
and
jo
enter
or
sub
dec
lcall
xor
inc
ja
adc
mov
adc
dec
orl
sbb
jnp
loope
add
test
pop
dec
push
fcmovne
pop
adc
inc
fwait
xor
mov
xor
xlat
rol
pop
test
or
movsl
xchg
rcrl
xor
fnstenv
subl
cltd
lret
push
inc
pop
adc
das
sbb
int3
cmpl
mov
mov
jnp
jne
js
popa
dec
int3
mov
ret
or
jne
icebp
ret
xchg
fwait
je
icebp
lods
fwait
insl
mov
daa
xchg
fiaddl
je
in
sub
rolb
movsl
ror
std
sub
or
aas
xor
mov
xor
sarl
enter
aad
pop
dec
inc
cmp
test
cmp
fdivrl
push
cmp
xor
push
mov
and
sahf
nop
lret
outsl
lods
push
cs
int3
aam
or
sub
inc
cmpsb
fistpl
in
es
mov
lcall
lcall
test
nop
mov
xor
enter
add
add
lea
jnp
dec
cld
jns
lret
test
cmpsl
mov
sbb
push
jno
xor
push
insb
mov
sbb
jp
sbb
add
repz
dec
sbb
sub
mov
cmp
test
cmp
adc
inc
cld
push
lock
adc
sbb
dec
sbb
dec
sbb
and
sub
and
jb
xorl
and
dec
dec
test
addl
sub
movsb
sub
and
negb
lock
lods
sub
cmp
sub
push
cmp
mov
xchg
iret
cld
jmp
pop
lods
pushl
addl
xor
lds
mov
ss
leave
clc
popa
aad
pop
inc
mov
or
mov
mov
aad
xor
rcrl
aaa
push
fcoml
es
inc
out
lock
mov
mov
fmul
push
push
jo
xor
enter
stos
shrl
and
std
test
insb
loop
movsb
mov
cmp
xchg
sub
leave
cmp
push
or
sub
ds
and
or
add
mov
cmp
or
nop
and
cmpsb
or
in
ds
inc
xor
sbb
scas
es
and
setg
mov
pop
inc
push
pop
addl
loopne
or
sub
js
add
aaa
push
adc
dec
sub
xchg
pop
sub
cmp
test
inc
pop
mov
inc
jno
movsb
add
loopne
sbb
stos
stc
test
mov
push
sub
and
shl
inc
ss
or
inc
cmp
and
lea
inc
lcall
mov
mov
rorb
mov
xlat
inc
ljmp
mov
cmp
fs
sti
mov
pop
fwait
jle
push
hlt
jge
mov
fcmovnu
jae
int
push
mov
scas
lods
add
out
into
or
xchg
add
clc
psrad
adc
mov
es
movl
mov
pop
fwait
lcall
fmull
lea
loope
xlat
mov
outsb
in
orb
pop
dec
ljmp
pop
push
call
cmp
adc
cmp
adc
push
sbb
ss
in
jno
cmp
xchg
mov
test
dec
xchg
fcomps
les
or
mov
pop
dec
sahf
inc
sahf
mov
dec
lcall
dec
sahf
fsubl
je
xchg
fistps
fidivrs
dec
adc
xor
fisubs
adc
insl
ja
jae
daa
lock
enter
mov
shrb
dec
inc
addl
push
pop
xchg
push
pop
subl
mov
push
fildl
push
cltd
sbb
jl
push
scas
or
jl
nop
fwait
or
pop
pop
mov
add
lods
cltd
and
sub
gs
pop
daa
aad
test
mov
leave
imul
and
inc
xchg
inc
inc
lcall
and
xor
pop
cmp
sbb
pop
xchg
add
cmc
daa
push
imul
adc
mov
and
imul
pop
imul
out
out
test
push
push
adc
xchg
cwtl
je
pushf
es
dec
cltd
mov
daa
test
xor
int
and
jo
adc
dec
dec
push
roll
imul
add
dec
es
in
call
popf
or
xor
lcall
push
xor
movl
mov
and
fnstsw
nop
xchg
adc
fdivrs
mov
cli
inc
mov
rolb
mov
push
rcrb
js
push
xchg
add
add
xor
faddl
mov
shll
xlat
fisubrs
dec
sub
cltd
cmp
repz
xchg
call
popa
pop
or
mov
push
jo
pop
mov
push
stc
or
sti
mov
fsubrs
sar
or
test
jns
imul
pop
inc
pop
sub
push
xchg
push
sub
mov
test
jge
nop
rcrl
lahf
fidivl
lods
out
adc
add
adc
sbb
jo
fsubs
adc
jo
adc
xor
sbb
mov
dec
fisubrs
xor
push
mov
add
pop
pushl
dec
sbb
rcrb
jmp
cmc
mov
test
test
xchg
mov
clc
gs
sbb
mov
sbb
int
addl
or
mov
aam
add
sbbb
sub
sbb
inc
daa
adc
jb
push
int
stos
lea
mov
or
dec
and
mov
sbb
insl
and
jnp
es
shr
daa
adc
push
adcb
xchg
and
daa
pop
fwait
ljmp
pusha
cmp
fs
into
sub
clc
mov
adc
pop
mov
jbe
sbb
push
mov
sbb
push
aam
push
mov
sub
add
mov
stc
sub
sub
add
dec
roll
push
pusha
push
xchg
adc
test
cmp
int3
les
push
add
push
sbb
imul
adc
pushf
fstps
or
xchg
je
pop
inc
adc
fisttpll
inc
adc
adc
adc
imul
jb
mov
push
mov
inc
test
nop
lret
or
cli
jne
fdivrl
dec
sub
or
inc
and
add
int3
mov
mov
je
or
inc
fimull
inc
or
inc
jae
addl
inc
mov
mov
push
sub
and
fcmovbe
rorb
sti
and
cmp
push
push
push
dec
ret
or
in
cmp
fwait
dec
jmp
add
dec
add
xchg
cmpsb
sbbl
jl
enter
xchg
inc
in
lock
scas
add
es
test
xchg
mov
jno
test
mov
mov
sub
in
jns
loop
repnz
jmp
cmpb
into
sub
sub
sbb
sbb
fisttps
jmp
mov
sub
leave
xchg
invd
lret
xchg
mov
push
xchg
movsl
adc
mov
push
add
cmp
inc
mov
inc
jg
sbb
sub
fsubrs
ljmp
clc
jno
and
sub
cltd
mov
jb
mov
ds
inc
loope
mov
outsb
push
lock
addl
nop
push
adc
add
xor
sub
and
xor
pop
cmp
dec
push
adc
xlat
jbe
add
inc
mov
jne
inc
ficoml
fmull
ret
jl
add
push
repnz
inc
mov
push
hlt
subl
or
iret
jne
test
mov
repz
lds
shll
inc
or
lods
enter
iret
je
mov
dec
sar
hlt
push
cli
bound
add
jmp
inc
fcomps
sub
sub
push
cmp
mov
xchg
cwtl
cld
mov
mov
inc
insl
fs
xor
inc
sub
call
orl
arpl
mulb
insb
push
mull
or
into
dec
sub
jmp
adc
cmp
push
movsb
push
aad
push
movb
or
adc
sub
movsb
in
stos
mov
pop
or
sbb
test
push
rorl
dec
add
and
cmp
adc
adc
dec
dec
add
cltd
popf
loope
insb
jmp
jae
sbb
sub
cmpb
push
or
cmc
pop
shrb
add
add
mov
stc
and
jg
je
cmp
or
mov
jmp
movzbl
movb
movsbl
shr
mov
es
std
add
pop
dec
add
mov
pop
or
cmp
faddp
mov
adcb
faddl
jno
jo
inc
loope
pop
and
cmp
add
xchg
or
mov
add
push
xchg
push
mov
push
or
cmp
add
in
stos
add
insl
xor
sub
add
pop
rcll
push
push
movsl
in
inc
lock
rcr
inc
mov
or
cmpb
je
dec
and
add
or
mov
mov
cmc
mov
jmp
sub
mov
cwtl
pop
xor
out
or
inc
inc
fnsave
sub
pop
movsb
adc
incb
cmp
outsb
cmpl
cmpsb
jo
js
sbb
mov
and
cmpb
mov
and
enter
std
cmp
inc
push
leave
addr16
mov
xchg
add
jbe
scas
xchg
repnz
scas
add
repnz
movsl
xchg
xor
mov
jecxz
addb
rcl
push
mov
icebp
xchg
dec
sub
dec
xchg
rolb
sub
jge
mov
es
sub
insl
and
dec
pushf
es
daa
pop
sbb
fisttpl
or
sbb
int3
mov
and
and
push
dec
jb
es
ds
mov
stos
mov
pusha
sbb
add
lods
sbb
lods
in
ss
mov
icebp
add
add
stos
mov
test
mov
xrelease
or
mov
push
xchg
mov
mov
mov
pop
ljmp
jne
inc
add
xchg
lods
add
mov
lods
dec
lcall
daa
test
adc
pop
adc
xor
sbb
or
dec
test
nop
xchg
arpl
fs
add
inc
ret
loop
and
or
sbb
test
jle
fmul
repz
adc
fstl
adcb
xor
movsb
out
into
loope
dec
rolb
push
pop
push
add
das
pop
and
or
adc
pop
mov
adc
fmull
mov
xor
shl
push
inc
sbb
mov
sub
jo
rol
add
adc
fcomps
lock
ljmp
enter
gs
in
shrb
add
pop
enter
push
ret
xchg
push
add
loop
fiaddl
sbb
add
ljmp
and
sub
outsl
sub
sub
sub
push
dec
and
push
negb
lret
sbb
aaa
sbb
pop
stos
cmp
pop
xor
ret
or
or
xchg
add
lahf
pusha
push
jmp
in
or
add
test
aaa
loope
lods
xlat
mov
das
jae
xor
dec
sarb
pop
andl
pop
aam
push
mov
sub
shlb
int3
ret
mov
sub
xchg
mov
adc
xchg
xor
pop
sub
test
push
iret
ret
je
pop
mov
fldenv
stos
mov
es
mov
mov
sbb
mov
add
dec
cmpsb
cwtl
rclb
or
cmpl
mov
mov
ljmp
adc
push
add
shrb
inc
dec
hlt
and
mov
mov
mov
fists
xor
jne
je
inc
mov
sarb
js
add
sarb
mov
jnp
jnp
mov
bound
pop
xlat
add
cmp
jno
ja
int3
fsubr
ss
test
adc
mov
adcb
push
and
cmp
adc
push
movsl
push
adcl
cltd
fidivrl
nop
rolb
nop
dec
push
enter
enter
xor
xor
adc
pop
addr16
adc
jbe
mov
lea
mov
pop
call
lods
inc
jne
and
fdiv
in
pop
mov
cmc
stc
jp
add
cmp
dec
jecxz
jl
or
les
xchg
jbe
fs
xchg
call
loopne
mov
sbb
mov
and
rorb
xor
sbb
enter
inc
push
scas
lods
xor
xor
je
jge
mov
mov
inc
loope
rorb
nop
popa
outsl
das
mov
or
cmpsl
jne
ja
dec
in
cmp
test
jne
es
or
mov
movsl
push
pop
xchg
jno
cmp
lock
aas
mov
sbb
gs
add
test
jecxz
push
lcall
mov
adc
push
movsl
push
inc
lea
clc
or
mov
cmp
addr16
cmp
sbb
rorb
fmuls
out
xor
mov
bound
clc
imul
movl
out
popf
and
push
cmp
dec
mov
mov
jle
test
fadds
mov
jg
xchg
pop
and
inc
add
inc
or
inc
daa
mov
and
push
adc
adc
jle
adc
sbb
push
movsl
mov
mov
add
pop
mov
pop
ret
ret
adc
push
xchg
mov
push
push
mov
mov
push
fst
pushf
and
adc
inc
sbb
fstpt
movsb
movsl
inc
data16
cmp
mov
out
jne
daa
bnd
adc
hlt
lock
iret
jne
or
jne
or
rcrb
loopne
mov
or
lahf
xor
in
sarl
mov
rolb
fcmovbe
pop
mov
lock
push
push
lea
movl
adc
sbb
push
insb
add
mov
inc
in
push
mov
fstl
mov
das
call
mov
pop
hlt
lea
shll
hlt
cs
pop
xor
nop
rorb
or
inc
add
inc
je
jo
movsb
faddl
movsb
iret
mov
jp
repnz
push
aaa
mov
inc
xlat
mov
or
mov
and
pusha
lea
cmpsl
mov
jae
scas
jae
sarb
fsubs
clc
lahf
mov
mov
or
jne
shll
fstl
popf
sub
fcom
test
rcrb
dec
in
adc
mov
and
movsb
jl
adc
in
cli
pop
xlat
sbb
lahf
push
ss
pop
adc
mov
and
aad
add
pop
subl
mov
aas
push
xchg
push
cltd
shrl
lahf
aas
add
call
xorl
mov
mov
xchg
fwait
or
test
mov
enter
fs
jne
fmuls
jne
cmp
rcrb
and
enter
ss
lea
pop
add
mov
mov
fisubrs
sbb
inc
pop
dec
push
cmpsl
mov
les
adc
out
or
fiaddl
data16
adc
pop
data16
or
mov
jbe
add
mov
fmuls
rorb
cli
adc
or
into
inc
subl
fisubrl
sub
xor
mov
add
out
mov
push
dec
push
repnz
and
popa
add
adc
xchg
xchg
inc
and
fldcw
or
push
jb
clc
jge
pop
xor
xchg
cmp
call
rcr
inc
aaa
xchg
movl
mov
scas
adc
pop
push
jmp
rcr
sub
push
and
add
das
sarb
divl
das
cmp
loope
ret
xchg
mov
mov
push
stos
jnp
and
inc
jmp
fs
push
addb
mov
addl
js
xchg
xor
ret
dec
lea
ret
jecxz
cmpl
bound
dec
or
pop
mov
popf
sbb
mov
xor
dec
mov
cmpb
mov
inc
push
or
ljmp
cmp
xor
stos
idivl
cld
or
dec
repz
sbb
es
add
sbb
xchg
adc
js
adc
xchg
inc
es
adc
sti
sti
shrb
jno
gs
mov
leave
and
mov
push
sub
pop
xor
test
mov
dec
shrb
sbb
adc
pushf
xor
xorb
push
xor
fcomps
and
movsb
cltd
and
mov
test
and
or
and
and
stc
mov
daa
ja
adc
in
dec
scas
sbb
xor
sahf
mov
dec
adc
add
jg
jae
jbe
leave
test
daa
inc
push
and
pop
shrl
pop
popl
call
je
adc
dec
in
insb
and
add
push
sbb
add
mov
xchg
adc
jno
mov
outsb
inc
popf
xor
xor
adc
mov
inc
or
pop
in
rcr
cltd
les
jle
dec
js
scas
dec
cld
adc
jae
je
push
push
mov
adc
lea
add
inc
sbb
fdivl
loopne
sbb
fcompl
and
js
adc
fwait
mov
movsb
out
jae
push
pop
and
rolb
test
adc
push
push
or
movl
adc
add
pop
movsb
mov
cmpsl
sub
push
adc
test
fadds
dec
pop
call
je
cmpsl
popf
jne
adc
or
jnp
sub
sub
mov
add
and
pop
loope
inc
repnz
movsb
pop
cmpsb
mov
add
loopne
fdivl
push
sub
call
daa
mov
xchg
mov
add
fmull
shlb
fwait
inc
lock
add
test
mov
je
cmp
mov
adc
movsb
add
leave
mov
adc
xor
push
call
push
adc
test
cmc
jo
pop
xchg
add
xchg
or
andl
lret
or
movl
sub
adc
jae
xchg
or
mov
jb
or
syscall
jle
addl
cs
push
and
inc
and
out
mov
push
cmp
ds
ljmp
inc
xlat
fisubs
and
jne
mov
imul
push
ljmp
and
add
mov
pop
subl
sbb
cmp
xor
push
insb
rcll
xchg
test
dec
call
jo
cmp
in
dec
ret
in
mov
fdiv
push
pop
and
push
mov
test
mov
cltd
and
fstl
push
jae
sub
clc
push
add
js
sbb
fwait
push
push
adc
and
xchg
decb
je
mov
rolb
and
cmp
sbb
mov
pop
sbb
movsl
or
inc
pop
adc
sub
cmp
push
pop
andb
add
jmp
mov
ret
int
adc
sbb
push
mov
setge
call
aam
jp
jmp
out
je
test
inc
cmp
add
add
fisubrl
dec
cmpb
push
xor
mov
lret
pop
shlb
xor
add
jns
pusha
push
mov
xor
jecxz
and
push
pop
addb
push
mov
sbb
mov
je
dec
adc
push
jne
movsb
and
fcoml
and
outsl
inc
mov
mov
sbb
fstpl
clc
xchg
jl
jmp
mov
push
xchg
mov
rolb
dec
add
mov
addr16
sub
pop
xor
movsl
jne
stos
insb
movsb
push
push
mov
jmp
fadds
jo
inc
sti
inc
in
add
push
add
pop
subb
lcall
push
mov
sub
sbb
in
or
or
push
cmp
sbb
add
call
lock
test
mov
jbe
clc
ss
adc
aam
jo
scas
jo
and
add
dec
add
movsl
ja
nop
cwtl
dec
or
inc
or
xor
cmp
je
dec
mov
dec
or
xor
add
dec
cld
popa
enter
xchg
ret
dec
lahf
push
push
clc
push
iret
pop
mov
ds
ret
loopne
dec
cmc
js
hlt
jae
movsbl
frstor
loopne
sbb
mov
cli
xchg
cmpsb
stc
mov
add
sbb
pop
inc
push
ds
jmp
enter
decl
inc
incl
add
or
jecxz
mov
incl
or
add
inc
cmp
jl
push
jne
insl
cld
decl
cltd
and
add
sar
add
sbbb
jle
clc
xor
xor
ss
cmp
jecxz
call
add
or
adc
js
add
mov
dec
jne
fs
adc
mov
imul
scas
add
rcrb
pop
pop
fmuls
jmp
mov
push
sub
jp
jbe
pushl
shld
lea
roll
inc
adc
roll
pop
adcb
fimull
and
jns
fsubr
mov
jl
lcall
add
push
fsubrs
mov
lret
clc
std
out
mov
mov
mov
add
fistl
cltd
gs
pop
jg
xor
inc
add
cmp
pop
xchg
out
xor
sbb
add
aaa
lahf
push
ret
or
add
ds
and
add
xchg
add
pop
cwtl
sub
xor
and
test
pop
test
mov
push
addb
sub
mov
add
jp
add
sbb
inc
lret
xor
sbb
dec
leave
repz
cmp
cmp
xchg
mov
repnz
icebp
jo
stos
sub
and
outsb
dec
or
add
nop
adc
bound
leave
loopne
cld
push
jecxz
js
lea
push
jmp
shl
push
mov
dec
push
cmp
lahf
mov
outsb
rcrl
cld
cmp
out
fcomps
jne
outsb
pop
nop
push
dec
pop
add
pop
jb
jmp
push
loopne
jb
add
push
push
sub
mov
and
pop
dec
out
dec
mov
add
xchg
or
inc
or
add
push
lea
test
mov
jno
push
fmuls
pop
mov
mov
push
push
xchg
fmul
xchg
xchg
fxch
jmp
push
push
icebp
add
mov
mov
sbb
clc
nop
lea
les
or
push
mov
and
lret
shl
cmp
push
pushl
orb
arpl
in
std
shlb
dec
mov
sbb
popf
fcmovnu
pop
pop
add
or
adc
ret
rcl
cmp
ljmp
mov
or
shlb
xchg
sub
adc
adc
out
out
push
negb
cs
dec
add
rol
push
jmp
aas
mov
shl
sub
mov
pop
lcall
aam
outsl
xchg
fcomps
jge
je
inc
das
daa
aad
adc
lret
or
adc
sbb
mov
add
jne
sbb
aam
imul
loope
jl
mov
jb
mov
aam
pop
mov
mov
xorb
int
mov
aam
jne
jle,pn
add
push
jmp
mov
mov
jb
addb
cmpb
pop
mov
cmp
sbb
loope
cmp
mov
xor
les
pop
incl
mov
push
pop
cmp
sbb
test
pusha
clc
clc
mov
shl
je
adc
cmpsl
call
out
xchg
mov
js
das
sub
pop
and
fsts
inc
fidivrs
jge
nop
xorl
rclb
add
mov
and
sbb
cmp
xor
and
add
sub
lret
inc
test
scas
and
jbe
mov
and
cwtl
loopne
fdivrl
je
lea
jge
sub
lcall
test
sub
daa
movsbl
shl
dec
je
fsubr
add
mov
dec
test
push
mov
add
mov
test
lahf
xchg
push
clc
pushf
mov
test
in
orb
add
xchg
push
jns
cs
mov
nop
insb
push
add
push
add
and
mov
aam
jno
jmp
or
sub
in
xor
push
dec
pop
shrb
dec
push
shl
inc
xchg
add
rclb
xchg
cmp
cmc
sbb
in
pop
xchg
mov
loope
inc
aas
cld
les
clc
push
inc
mov
adc
xchg
inc
xor
sbb
mov
add
sbb
cltd
add
xchg
add
mov
clc
in
adc
repz
gs
inc
inc
mov
jo
hlt
and
fdivrs
lock
mov
jae
scas
pushl
or
xchg
mov
scas
sti
loope
mov
clc
pop
mov
sarb
iret
push
mov
outsb
push
push
clc
das
imul
sub
jno
inc
jo
or
add
push
inc
jl
hlt
mov
xchg
push
fmull
ret
add
mov
add
movzbl
mov
lcall
inc
mov
mov
cmp
jl
or
ds
dec
clc
addl
mov
jle
sub
push
jle
fcompl
or
orb
or
mov
shrl
movb
add
push
imul
jne
lcall
push
leave
push
xor
mov
inc
call
jne
pop
or
cmp
mov
and
jp
pop
jb
jo
xor
add
js
mov
insb
and
cmp
imul
jmp
or
cli
stos
and
push
adc
adc
in
and
lret
or
in
xor
pop
mov
fyl2x
test
xchg
lahf
les
pop
repnz
mov
mov
cmovno
mov
cmp
push
enter
mov
cmp
mov
scas
and
xchg
xor
loope
pop
mov
pop
movsl
adc
popa
imul
push
add
xor
mov
xor
pop
jl
inc
xor
and
adc
sub
inc
in
add
lods
cmp
mov
and
enter
lahf
fdivrs
sbb
push
popa
xor
popa
push
pop
je
in
xchg
mov
add
push
mov
cmp
loop
mov
push
xchg
fmull
test
test
sub
dec
pusha
stos
in
lret
lea
cmp
jbe
cmp
jbe
mov
xchg
aad
lret
repnz
fdivl
jle
roll
not
mov
and
insl
mov
pop
psadbw
sbb
fdiv
pop
or
add
popa
test
sub
pop
fcmovnb
add
icebp
cmp
jl
inc
jmp
push
fcoms
dec
mov
call
push
push
mov
cmp
mov
and
rcrl
xchg
jle
sti
lds
mov
shlb
sbb
hlt
enter
xchg
push
sub
fsts
mov
push
mov
test
xchg
sub
mov
es
call
push
fcomps
pop
sarl
sti
lea
or
xchg
push
push
xchg
movsl
ja
sub
xchg
jl
stc
or
gs
lret
mov
adc
aas
push
mov
into
cmp
add
mov
inc
test
lds
xchg
cmc
je
aam
mov
mov
insl
sub
movsl
sub
pushf
jmp
cmp
xchg
dec
add
inc
mov
dec
repz
mov
rorl
je
mov
sbb
push
xchg
and
loope
sbbl
les
and
and
add
and
push
and
xchg
cmpl
pop
and
cmp
shrl
test
into
push
repz
mov
loope
loope
fldl
out
lret
cmp
rolb
inc
jle
orl
add
ret
push
push
mov
fidivl
push
mov
push
adcl
cmp
sbb
cmp
out
xchg
mov
push
push
fldenv
pop
loopne
mov
inc
rolb
arpl
mov
sbb
test
shrb
stos
jle
add
rolb
inc
fsubrs
add
push
aam
jge
xchg
shlb
adc
out
add
rcrl
adc
pop
adc
mov
or
out
fdivl
mov
daa
loopne
je
aad
cmovge
pop
call
in
daa
xchg
data16
mov
sbb
lret
setae
xor
popf
add
dec
sbb
xchg
andb
out
loopne
out
orb
push
or
or
dec
insb
sub
pop
fidivrl
aaa
aas
push
fisubs
jmp
push
pop
fcompl
add
jne
ret
cmp
adc
inc
add
sbb
adc
fists
insb
or
sub
add
les
mov
scas
sbbl
jo
fstl
jg
jmp
pop
je
inc
insb
ret
ljmp
insl
pop
sub
adc
aam
and
lret
popf
sub
or
aam
dec
flds
push
and
or
add
jb
cs
lea
out
je
pop
dec
dec
pop
xchg
je
int3
or
jmp
push
pop
scas
es
pop
dec
gs
repz
jmp
loopne
incl
inc
dec
mov
loope
addb
aad
fs
decl
ret
add
xchg
sbb
fsubr
and
mov
adc
mov
xchg
sbb
add
pop
inc
jo
push
push
push
mov
xchg
pop
mov
add
adc
push
adcl
push
in
aas
dec
lahf
pop
push
jo
pushf
cli
push
pushl
xor
int3
inc
cmpsl
cmp
mov
sub
cmp
sub
push
loopne
jmp
push
pop
push
sbb
in
or
loope
mov
sub
loop
lret
cld
xor
nop
cmpsl
or
push
rolb
clc
bound
mov
pusha
daa
sbb
pop
clc
jne
mov
mov
push
outsl
adc
sbb
mov
pop
leave
xlat
jp
adc
cld
out
mov
ss
pop
or
loop
leave
clc
ja
xor
cmp
pop
out
jmp
mov
mov
push
adc
push
push
call
cmp
sbb
jmp
sbbl
in
add
adc
in
xchg
call
popa
ror
sub
pop
mov
push
divl
cmp
hlt
cs
mov
or
hlt
cwtl
ljmp
nop
push
jbe
sbb
or
divl
jp
pop
mov
mov
mov
dec
pop
add
xor
out
push
in
fsubl
cmp
movb
cmp
dec
mov
xor
addr16
pop
testb
sub
movb
movsb
add
add
mov
sbb
sub
sti
dec
ret
rorb
mov
bound
out
adcl
test
shlb
or
insb
pop
jmp
js
lea
sub
adc
adc
gs
sbb
sub
mov
pop
mov
in
movsl
daa
ss
nop
jae
jo
insb
jle
sahf
test
inc
sub
or
xor
sub
inc
fwait
sbb
mov
das
sub
push
or
pop
push
jno
sub
push
cs
mov
ret
inc
mov
pop
sbb
mov
mov
pop
mov
int
and
sub
sub
xor
dec
xor
push
fistps
xchg
push
inc
loope
xchg
jae
repnz
in
and
sbb
stos
and
and
lds
aad
dec
adc
xchg
xor
das
int3
jo
mov
mov
xchg
dec
sbb
cs
add
cmp
jno
inc
sahf
pop
mov
xchg
mov
shrb
and
imul
rorb
sub
mov
cld
insl
push
xchg
cmp
pop
push
mov
adc
popa
jne
in
fimull
daa
mov
das
dec
pop
loopne
adc
cmc
inc
mov
test
shll
adc
adc
int3
notl
out
xchg
and
int3
and
mov
and
xor
test
pushf
mov
push
daa
call
sbb
enter
lea
or
mov
cmpsl
pop
xchg
adc
or
test
imul
sbb
jl
ret
test
inc
adc
mov
in
ret
sbb
lds
dec
sub
fcoms
inc
imul
add
xor
add
cmp
cmp
sbb
cwtl
cmp
pushf
adc
or
sub
xor
cs
inc
or
mov
int3
ret
inc
outsl
dec
add
vpminsd
or
mov
add
clc
sbb
shrl
adc
stc
pushl
jae
jae
or
pop
and
xchg
imul
adc
fsubrl
and
fmull
into
add
hlt
pop
jecxz
sub
mov
add
pusha
push
insb
mov
cmp
out
insb
adc
cwtl
stos
add
push
rcr
scas
movsl
outsb
pop
mov
lea
iret
mov
push
movsl
fs
mov
loope
ss
push
cmp
dec
adc
cmp
cli
pop
or
mov
push
rcrb
xor
pop
aam
sub
xchg
fld
fbstp
push
cmp
jb
cmp
jbe
test
xor
sbb
inc
icebp
in
dec
aaa
popa
push
ret
in
push
xor
dec
je
add
mov
sbb
outsb
mov
into
or
or
roll
inc
in
adc
popa
cwtl
lret
stc
hlt
les
adc
pop
js
repnz
xchg
ret
mov
icebp
add
aaa
in
xor
cmp
je
in
mov
or
mov
cmp
addr16
je
cmp
jne
mov
sbb
dec
clc
push
cmp
sbb
dec
lea
ret
sahf
negl
dec
mov
dec
xor
push
cmpsb
test
in
mov
inc
adc
je
testl
xchg
test
in
cmp
jbe
add
jg
loope
pop
add
inc
cmp
je
sub
inc
jmp
inc
push
xchg
xchg
mov
addl
adc
sbb
pop
push
inc
sub
call
or
mov
rcrl
mov
cmp
je
aam
xchg
jne
mov
cwtl
push
adc
into
inc
jl
push
xor
rcl
inc
adc
adc
and
pop
dec
cld
inc
subb
add
cmp
and
cmc
xor
jle
sub
lea
mov
cmp
jb
pop
mov
xchg
sub
sub
aaa
cmp
jge
add
push
xor
and
sar
cld
rol
pop
mov
xor
pushf
cmpsl
sbb
inc
or
loopne
jne
ss
jno
pop
push
in
dec
pushl
and
mov
mov
inc
call
add
jae
fneni(8087
adc
sarb
shl
add
jmp
pushf
aas
insb
sti
and
cmpsb
and
or
adc
fs
jne
xor
and
lock
sub
push
mov
or
push
orb
divb
shlb
mov
test
jne
mov
or
push
call
orb
add
int3
pop
mov
push
lret
int3
inc
jg
or
jge
fdivrl
jle
es
sub
rcr
outsb
fildll
and
pop
or
jl
or
adc
pop
dec
popa
adc
jbe
lea
sbb
cmp
jbe
push
hlt
pop
arpl
and
sbbb
je,pn
test
jne
pop
jo
arpl
imul
lock
push
dec
push
cld
lods
mov
xor
adc
movb
inc
rol
dec
in
push
sub
inc
xor
xchg
adc
negl
and
add
std
push
mov
inc
and
push
adc
add
mov
or
loopne
add
daa
cmovg
and
dec
inc
adc
cs
push
lcall
mov
push
dec
lods
rolb
jb
aam
xchg
cld
adc
subb
ror
mov
push
mov
insb
mov
adc
lods
or
data16
add
xor
jmp
pop
mov
stos
out
push
push
push
imul
pop
push
js
into
test
xchg
adc
dec
pushf
sub
and
jg
jl
jecxz
ficoms
cmp
push
mov
or
xchg
mov
or
push
sbb
or
int
jp
pusha
test
insb
push
adc
push
mov
jae
loop
inc
out
add
dec
test
xchg
aam
or
xchg
add
mov
sbb
sub
in
repz
and
sbb
fsubr
dec
nop
pop
push
andl
cmp
mov
xchg
pop
cltd
aaa
mov
pushf
inc
push
movsl
or
cld
jno
mov
xor
arpl
adc
sub
push
pop
push
movl
push
adc
dec
or
xor
or
roll
pop
mov
cmp
inc
or
incb
inc
loopne
xchg
push
mov
lods
int
int3
add
add
mov
andb
xchg
loopne
cmp
scas
jo
clc
or
xor
int
cmpl
or
orb
push
pushl
cmp
imull
pop
lea
outsb
fsubr
jae
add
push
pop
push
cmpl
push
je
mov
mov
in
jbe
pop
psubd
in
or
roll
rcrb
push
sub
enter
mov
pop
push
inc
rcrb
int
fbstp
fbld
jbe
mov
jge
push
gs
add
loopne
jnp
sti
inc
inc
fwait
cmp
inc
sub
pop
pop
xchg
inc
pop
nop
push
mov
cmp
je
cmpsl
popf
mov
test
push
movsl
push
das
fisubl
dec
add
mov
sbb
or
je
test
dec
push
inc
inc
adcb
jmp
xor
push
fs
inc
xor
dec
adc
rcrb
cwtl
rcr
push
jmp
enter
mov
sub
lods
inc
js
cld
pop
orl
adc
push
sbb
clc
mov
fimull
sti
xchg
lea
sbb
shl
addl
inc
push
rorl
in
mov
iret
loopne
push
loop
inc
and
je
nop
rcl
rcpps
sub
cmp
add
add
pop
inc
inc
cmpsl
mov
mov
push
out
push
les
push
pop
mov
push
and
mov
xor
or
pusha
jb
add
ljmp
add
ret
dec
sbb
jbe
je
push
rorb
fdivl
mov
aad
pushf
sahf
das
push
and
sub
cltd
adc
xchg
pop
fmuls
push
ljmp
add
mov
cs
mov
sti
in
fsub
sub
and
inc
inc
push
push
popf
mov
mov
addl
addb
xchg
push
dec
push
cwtl
xchg
pop
popa
push
inc
push
and
movsb
pop
sti
lea
or
fdivs
pop
fstpl
pop
or
and
xchg
cmp
xchg
add
leave
add
mov
fs
test
and
cmp
xchg
and
jns
pop
dec
fistpll
dec
or
int3
rolb
fstpl
adc
push
xchg
xor
test
push
movsl
lods
cmpsb
pop
or
imul
pop
testl
rcrl
ret
cwtl
cmpl
dec
push
bound
xor
push
or
lret
or
push
push
inc
dec
mov
aad
pop
mov
sti
xor
insl
jnp
das
movl
and
js
fmul
cmpl
stos
faddl
outsl
mov
andl
in
ret
aas
sub
inc
sub
sbb
dec
test
enter
loopne
mov
inc
je
fstps
or
pop
jge
fadds
mov
rcrb
jne
push
inc
xlat
daa
adc
cmp
mov
pop
in
sbb
das
push
cmc
push
sbb
pop
mov
push
xor
test
test
out
push
mov
dec
cmp
adc
push
leave
lret
adc
mov
add
insl
lods
ficoms
inc
xchg
adc
mov
fcmovnb
mov
xchg
jne
mov
icebp
cmpsl
ret
push
movl
mov
xchg
sub
in
cmpsl
mov
jnp
inc
mov
aas
je
cmp
cmpsb
shlb
push
pop
jne
aam
sbb
flds
cmpsl
jne
push
imul
jbe
inc
pop
jne
pop
call
pmulhw
test
xorb
insl
in
xor
stc
jbe
jle
inc
jne
jmp
sbb
sub
mov
mov
sbb
mov
push
sub
pop
sub
jnp
xchg
push
mov
sbb
shlb
je
pop
in
jo
and
sub
mov
pop
pusha
pop
je
sti
mov
and
into
jno
and
imul
adc
int
lret
jae
scas
jg
add
push
or
daa
mov
testb
mov
sub
incb
je
add
cmpl
lock
pop
xchg
mov
orl
sbb
or
pusha
push
scas
or
inc
decb
cmp
push
scas
or
or
lock
push
add
add
push
jo
jge
mov
push
cmp
aas
mov
std
push
mov
test
dec
adc
push
inc
fdivs
les
pusha
add
test
xchg
and
pop
pop
xchg
sub
mov
push
xchg
rcll
xlat
push
mov
push
push
pop
pop
xchg
lret
in
pop
pop
pusha
pusha
fs
ret
mov
repnz
push
pop
inc
or
popa
push
sub
add
add
sbb
clc
sub
imul
insb
adc
and
insl
jg
sub
sub
sbb
or
jmp
push
cs
add
push
adc
shrl
add
icebp
lods
ret
mov
and
push
or
inc
adc
push
lret
aad
adc
test
push
pusha
sbb
jno
jecxz
les
stos
stos
inc
mov
jbe
or
bound
decl
add
daa
mov
shlb
xor
leave
es
pop
sbb
or
hlt
scas
sbb
ljmp
or
aas
push
loop
mov
lret
cli
jp
push
pop
pop
lea
jmp
shr
mov
je
fists
add
or
sti
and
add
mov
addl
testl
sbb
fstpt
pop
push
and
cmpsl
cmc
testl
popf
push
mov
and
push
xor
sti
jae
or
addr16
imul
mov
mov
shll
mov
mov
rep
mov
jb
jne
and
test
sbb
in
loope
jge
mov
je
clc
jg
pusha
cmp
and
push
mov
je
mov
cmp
push
jo
add
ss
in
xlat
push
inc
or
dec
out
pop
inc
flds
or
je
jg
add
xor
mov
adc
sbb
mov
mov
cmp
je
push
pop
daa
inc
mov
les
add
pop
sbb
pop
bound
xor
leave
clc
cmp
std
push
lcall
into
sbb
jbe
push
adc
pop
je
ds
jae
pop
imul
add
add
add
call
lcall
pop
push
push
xor
shlb
or
or
cmp
adc
js
imul
mov
int
mov
test
jl
push
sbb
ret
add
es
lcall
cmp
sub
or
inc
js
bound
andl
xlat
sub
incl
cmp
xor
inc
or
push
adc
mov
hlt
mov
sub
mov
sbb
clc
jne
push
lahf
pop
ja
xor
mov
es
mov
cmp
hlt
cmpsl
cs
mov
lea
add
pusha
je
divb
push
lea
push
nop
jle
or
push
inc
add
andb
mov
xlat
test
jge
jb
push
fsubrl
xor
inc
cmp
lea
jns
adc
inc
hlt
mov
lock
add
cli
hlt
sbb
push
pusha
sub
dec
mov
and
cmpsl
lock
loop
inc
inc
mov
cli
add
js
dec
inc
push
rcl
pop
int
add
mov
xchg
stc
dec
les
mov
scas
daa
mov
jecxz
mov
dec
mov
bound
ret
and
add
subb
cli
cmpb
fdiv
push
popa
orb
lea
xor
cmp
orl
int
and
push
fcomi
mov
cmpl
adc
adc
mov
push
rolb
inc
rcll
hlt
test
and
mov
cmpsb
push
or
clc
mov
loope
mov
mov
inc
xor
jb
pusha
scas
xchg
push
cmpb
pop
lods
gs
jns
adc
add
jle
aad
and
mov
loopne
movsl
movsw
mov
loopne
and
xor
sbb
loop
and
sub
in
imul
sbb
pop
mov
push
test
pusha
es
faddl
in
clc
inc
je
adc
bound
adc
inc
xor
int3
mov
mov
inc
cli
fnstcw
out
clc
jmp
sub
push
iret
xchg
adc
push
xor
or
and
inc
add
dec
push
aaa
loopne
rolb
sub
aam
ficoml
adc
movsb
add
lea
lock
push
jmp
mov
lret
add
in
push
insb
pop
les
or
mov
cmp
mov
sbb
mov
dec
dec
jne
adc
sbb
or
addl
inc
jo
xchg
sbb
addb
jbe
push
aas
in
shr
mov
jmp
xchg
cmp
cmpl
out
cmp
cmpsl
cltd
aam
leave
push
ficoms
int3
repnz
inc
shlb
dec
aam
int3
sarb
scas
fmuls
fcoml
lea
sbb
pop
xor
push
movsb
fwait
les
test
mov
cmp
aam
ds
out
scas
and
pop
mov
sub
roll
dec
xchg
inc
push
push
dec
push
mov
mov
push
mov
es
test
or
mov
and
inc
mov
pusha
incl
incb
jl
jmp
pop
out
and
mov
fwait
cmpsb
sbb
loope
sbb
sbb
add
or
lds
mov
pop
leave
stos
cmp
adc
push
movsb
movl
sbb
in
stos
push
out
test
daa
mov
cmpsb
je
and
xor
daa
mov
pop
add
xor
fsubs
jge
inc
adcb
aad
dec
dec
rep
clc
int3
mov
shlb
aam
adc
add
cmp
jmp
lock
dec
clc
inc
push
jge
and
xor
lock
pop
jo
jmp
inc
ds
lret
clc
inc
js
push
push
adc
lods
or
sbb
push
xor
mov
jge
lods
push
push
or
add
or
pop
int3
cmpsb
bound
nop
or
aas
ret
or
pop
pusha
dec
adc
aas
sbb
inc
xchg
loope
mov
sbb
pop
ds
hlt
sub
stc
mov
sarb
cmp
rolb
xor
mulb
jecxz
xorl
clc
push
pushw
or
cli
subb
inc
xchg
xlat
xlat
mov
or
cmpsb
call
sbb
popa
pop
leave
sub
jg
inc
clc
pop
mov
cmp
push
das
loope
pop
push
push
fs
add
add
ja
into
add
ljmp
adc
push
loopne
and
rclb
inc
dec
cmp
out
popf
orb
xchg
ret
fdivs
inc
xchg
rcrb
jle
jne
pop
and
xchg
inc
dec
or
xorb
xchg
lods
mov
mov
fnsave
test
pop
ret
pushl
push
iret
iret
pop
inc
and
ja
cmpsl
jo
je
jo
cltd
jo
push
add
mov
jo
in
jge
sbb
into
cmp
inc
stos
jle
or
int3
daa
push
pusha
xchg
xchg
sbb
popf
or
lock
cli
adc
adc
mov
pop
iret
mov
mov
add
sbb
fiaddl
xlat
push
loopne
lock
xchg
cmp
or
daa
ret
cmp
xorb
aaa
ljmp
pop
outsb
mov
inc
jle
enter
add
jne
cmp
cmp
loopne
mov
in
xor
scas
sub
ja
test
lds
out
sbb
dec
ret
or
rolb
dec
mov
xchg
ds
or
push
cmpsl
mov
fsubrs
shrb
or
sub
add
push
or
mov
jle
push
xchg
addr16
xchg
xlat
loopne
add
hlt
push
jo
push
repnz
fdivl
mov
outsl
adcb
dec
xchg
or
adc
sub
iret
pop
cltd
xor
lcall
test
add
popa
adc
cmp
pop
mov
pop
pmaxsw
incl
adc
jbe
fidivs
xlat
xor
mov
add
push
or
push
lea
aam
stos
rcrb
lea
jmp
jecxz
fwait
dec
adc
sub
jp,pn
push
jmp
inc
cli
test
pop
mov
inc
jnp
mov
or
add
pop
test
xor
mov
dec
or
adc
es
sbb
cmpsb
imul
popa
cld
xor
jb,pt
and
add
xor
inc
sbb
pop
or
xor
add
dec
repz
push
add
ret
fbld
jb
fstps
mov
test
sbb
jle
jnp
jge
cmpsl
push
and
xchg
or
or
and
inc
shrb
leave
xchg
push
insb
push
test
aaa
mov
lds
arpl
cmp
or
or
test
jns
add
adc
test
iret
push
shlb
icebp
rclb
insb
fs
imul
daa
data16
outsl
ss
push
push
inc
pop
in
fdivs
inc
fsubl
ret
or
xor
push
das
dec
and
sub
xor
lret
jg
jg
xchg
jns
add
pop
iret
mov
cmp
dec
fstpt
and
addb
pop
movl
cmp
inc
dec
test
inc
dec
int
adc
xor
andl
and
dec
sbb
sub
cwtl
dec
or
sub
shrb
push
es
enter
mov
mov
or
adc
lcall
xor
lret
mov
inc
mov
out
or
dec
sub
fcmovbe
mov
or
roll
push
and
sub
cli
add
addl
xchg
mov
add
fsts
or
or
js
jmp
fimull
sub
pop
jle
mov
je
sbb
ljmp
xor
push
lods
add
inc
or
and
cmp
sbb
mov
and
ja
enter
mov
sub
dec
aam
lcall
adc
xor
cmc
mov
les
fidivrs
and
mov
std
dec
js
insb
orl
push
cmp
fstpt
xchg
flds
popf
mov
sbb
mov
xorb
sbb
sbb
jnp
cwtl
movsb
jmp
jge
sub
notl
push
push
dec
ja
fsubrs
call
push
jae
rcrl
call
inc
sbb
das
sbb
loopne
sub
jne
aaa
cmp
mov
roll
mov
xor
mov
adc
adc
xchg
test
gs
dec
ficompl
dec
mov
pushf
imul
jne
ljmp
adc
dec
xchg
int3
mov
and
inc
mov
pop
movsb
inc
pushf
mov
xchg
jne
mov
or
testb
mov
lods
or
lods
shlb
add
push
test
push
xor
lahf
push
or
add
sub
cmp
mov
aam
pop
sbb
rcrb
sbb
push
jmp
mov
push
or
popa
push
sub
push
and
sub
mov
fsubl
pop
jmp
adc
mov
pusha
jne
or
xor
cli
std
incb
jge
bound
test
xchg
xchg
aam
out
push
sub
rolb
sub
clc
call
fcoms
push
and
jmp
pop
cmp
jbe
adc
scas
jmp
data16
sbbl
jecxz
adc
cmp
enter
dec
loopne
mov
addb
mov
xor
cmp
lret
cmpb
stos
sahf
pop
jbe,pn
fdivl
ret
repz
mov
add
or
insb
sbb
popa
out
fidivrs
jp
xchg
mov
shll
mov
pop
loop
push
lods
mov
loop
xchg
out
mov
mov
jno
enter
mov
inc
sbb
jne
cmp
push
fsubr
adc
cld
mov
inc
rclb
dec
dec
xor
inc
rcrb
mov
push
cmpsl
test
das
inc
push
outsb
imul
inc
and
fstpt
add
lcall
data16
enter
int3
xor
cmp
or
mov
and
jae
pushf
add
outsl
cmp
jmp
mov
or
push
push
fwait
mov
mov
add
add
arpl
xchg
push
or
push
mov
sub
mov
push
xchg
cltd
push
or
push
and
xchg
xor
fld1
or
loopne
cmp
shrb
cmc
jnp
mov
mov
cmp
pop
xchg
pushf
fs
pop
pusha
ljmp
sub
lock
popa
sub
es
sbb
into
xchg
imul
addr16
out
inc
and
jne
fwait
sub
popf
cmp
int3
pop
push
add
and
mov
das
mov
pusha
mov
lods
xor
js
mov
inc
in
cvtps2pd
sub
cmp
add
rcrb
jbe
sub
add
mov
icebp
das
movsb
push
pop
mov
add
or
dec
lret
push
inc
pop
std
cmpl
shlb
or
inc
lea
sub
inc
push
rorl
aas
popa
lea
jbe
ret
sti
mov
dec
aas
xor
insb
int
dec
inc
jp
cmp
pop
push
andb
sbb
xchg
sub
int3
push
popa
dec
xlat
ds
jne
dec
add
hlt
sub
add
out
xor
lock
dec
add
or
add
mov
ljmp
push
or
inc
ret
jns
popa
sub
sub
adc
push
in
sbb
je
out
adc
test
lret
imul
jne
ret
add
push
sub
adc
ret
sub
push
add
pop
adc
pop
pop
movsb
sub
xchg
adc
arpl
push
imul
fstl
adc
in
aad
adc
je
pop
jb
inc
dec
xor
ss
xchg
fucom
hlt
inc
pop
rcr
cmp
inc
clc
enter
inc
pushf
and
pop
fmul
add
jg
lret
lods
cld
push
pushl
push
ds
xchg
and
rcrl
neg
sbb
inc
push
test
jp
cmp
es
mov
clc
adc
lock
add
aas
mov
nop
fmuls
loopne
enter
xchg
aad
je
pop
sbb
fsub
add
jge
lea
cmp
add
call
arpl
into
and
add
stos
cmp
popf
xchg
pop
adc
jae
dec
xchg
adc
orb
dec
sub
jb
adc
es
adc
enter
adc
adc
imul
and
subb
sub
orb
jae
sub
rcll
enter
push
mov
data16
hlt
cmpl
je
cmp
or
stos
cmp
xlat
test
lret
pop
cmpsw
or
xor
mov
outsb
or
ja
ds
mov
mov
xchg
test
inc
sub
inc
lret
std
add
dec
aas
inc
ss
test
cmp
in
inc
inc
in
jl
inc
and
out
add
adc
mov
cmpsl
std
jo,pt
sarb
ja
bound
add
pop
out
or
push
push
jecxz
xchg
pusha
es
sbb
mov
in
mov
add
inc
push
stos
sub
xchg
lods
out
int
push
test
jl
dec
ret
pusha
in
jg
shlb
or
lret
push
sub
push
adc
add
in
lods
test
add
lret
sbb
in
add
xor
xor
add
popf
sbb
test
pop
cpuid
inc
mov
mov
xor
and
daa
push
hlt
and
jle
mov
add
and
mov
mov
loopne
icebp
add
addr16
lea
mov
dec
stos
popf
mov
bnd
cmpl
sbb
sti
sahf
xchg
push
out
mov
test
push
insl
loope
xor
cli
pusha
adc
cmp
mov
js
ja
dec
data16
inc
xchg
loope
ret
adc
mov
or
nop
in
pop
sub
fstps
lods
cmp
jbe
push
push
push
pop
inc
dec
jg
dec
loop
test
jmp
xor
dec
cmp
mov
mov
adc
pop
test
adc
add
sbb
adc
dec
ret
pop
pop
inc
jo
pop
addr16
add
div
mov
pop
or
stos
fdivs
inc
add
sbb
outsb
sub
fisttpl
adc
nop
jecxz
ss
ljmp
outsl
addl
cmp
cmp
into
popf
jne
jg
jle
add
ja
aad
fdivrs
jl
pop
add
sub
loop
or
or
mov
xrelease
and
repnz
mov
mov
ret
imul
push
and
into
fnstcw
loope
jle
pusha
jmp
pop
lock
lods
imul
in
adcl
mov
push
insb
pop
inc
and
cld
rolb
mov
inc
xor
ret
push
lahf
push
adc
pop
xchg
sub
xchg
dec
nop
push
add
push
and
cmovae
or
fldl
inc
push
test
cmp
jl
dec
lea
jle
lea
nop/reserved
inc
mov
pop
push
repz
dec
jno
int
adc
jecxz
mov
sub
cli
daa
mov
filds
nop
adc
imul
pop
mov
xchg
das
sub
xor
arpl
or
in
dec
ret
dec
int
repnz
scas
jae
push
cmp
ljmp
ja
addb
mov
mov
lea
inc
lea
loopne
adc
into
pop
rcrl
xchg
idivl
inc
dec
hlt
jg
std
adc
roll
push
mov
cmpl
push
mov
inc
mov
or
int
add
popf
cs
xor
sbb
pusha
ret
push
dec
gs
clc
add
lret
pop
rorl
mov
inc
push
into
or
test
test
push
pop
jl
push
xor
loop
jp
xor
adc
movsb
cmp
std
add
in
hlt
jbe
stc
shlb
das
sub
into
inc
syscall
xchg
push
push
mov
cli
cmc
scas
push
faddl
adc
push
inc
arpl
mov
dec
sbb
das
cltd
xor
and
sbbl
inc
xor
shll
sbb
jne
xchg
or
mov
add
push
lret
adc
push
lock
bound
pop
mov
sub
dec
fnstsw
push
out
cmp
push
sbb
dec
xchg
xchg
fsubrs
repnz
jmp
pusha
sbb
adc
lods
mov
mov
add
andl
lea
insl
push
or
pop
xchg
in
bound
int
pop
cmp
xor
out
daa
add
or
aas
mov
add
mov
dec
jecxz
daa
sahf
mov
sub
rorl
pusha
stos
lea
rcl
xchg
push
sub
push
jns
pop
add
movsb
sub
pop
jo
adc
mov
adc
inc
dec
or
add
inc
mov
dec
xchg
push
jne
pop
bound
lcall
pushf
mov
enter
mov
cmp
jne
add
test
adc
mov
push
inc
sub
insl
jmp
loope
lock
xor
sarb
and
cmp
popa
jmp
xchg
popf
aas
dec
cmp
out
or
add
pop
add
push
jecxz
or
and
fldt
fadds
fdivs
xorb
or
fistps
pop
hlt
add
leave
adc
jbe
inc
cmp
jmp
cwtl
adc
testb
lret
mov
sbb
rcl
out
sbb
scas
cmp
das
sbb
data16
and
sbb
in
pop
or
std
mov
cmp
jl
jmp
mov
popa
test
xchg
or
test
and
xchg
cmpsl
lret
fs
or
insb
insl
mov
sub
sahf
mov
loopne
jmp
pusha
in
lea
and
rcl
mov
shrb
pop
decl
pop
pop
mov
add
cmp
jae
lea
jmp
sbb
or
je
inc
cmp
jbe
pop
sub
or
sub
xchg
push
lahf
push
in
loope
mov
adc
jmp
sub
or
adc
sbb
jecxz
dec
push
mov
adc
xor
mov
jne
xchg
sub
push
shl
gs
fcomip
scas
bound
hlt
imul
jl
call
repnz
add
mov
pop
mov
ss
stos
or
out
inc
push
add
mov
pop
xchg
sub
ds
adc
jnp,pn
js
inc
xor
jb
ret
add
pusha
loopne
mov
adc
punpcklbw
sti
add
js
mov
mov
pop
add
push
xor
rcrb
faddp
repnz
adc
dec
mov
stc
notl
flds
xchg
ss
shr
notl
add
dec
aam
jb
cmpb
aam
mov
inc
fwait
mov
in
inc
lds
lret
push
sti
imul
mov
or
rcl
jecxz
push
int
xchg
push
je
mov
movsb
jg
sbb
mov
jmp
cmp
mov
push
and
push
adc
test
add
xchg
and
pop
inc
outsb
scas
cmp
out
or
fsubrs
hlt
push
fsubs
insl
hlt
lds
push
push
sbbb
or
push
sub
or
lods
fcomps
lret
jae
push
sub
roll
pop
in
daa
outsl
call
adc
pop
or
imul
or
or
xchg
add
nop
adcb
addb
push
rcr
inc
je
xchg
xor
inc
xchg
cmpsl
shlb
or
enter
lret
push
pushf
sbb
jbe
push
pop
sbb
adc
pop
xchg
outsl
sub
or
xabort
adc
addl
xlat
ljmp
push
pop
xor
mov
inc
sti
testb
adc
and
loopne
rclb
add
pop
mov
jb
je
sbb
lods
push
cmp
data16
movsb
aam
push
or
cmp
shlb
cld
je
test
addr16
rorb
clc
jne
mov
inc
lret
jle
push
test
cmp
dec
or
sub
shrb
test
cmp
add
test
or
jnp
imul
jbe
sbbl
hlt
loop
mov
or
push
add
lods
and
pop
push
call
push
cmp
call
add
sbb
fxtract
jne
in
inc
pop
push
js
fistl
add
clc
sar
sub
jne
mov
pop
lods
push
mov
sbb
cld
stc
repz
fmuls
inc
popa
inc
dec
dec
inc
add
mov
xlat
or
loope
test
ja
push
cmp
insl
push
push
shrd
mov
arpl
mov
mov
or
pop
cmp
mov
pop
fisubrl
xchg
in
out
mov
test
neg
sbb
jle
xor
and
bnd
movzwl
push
cmp
rclb
mov
mov
inc
clc
mov
ret
leave
xchg
jp
and
popf
cmpsb
cmp
je
adc
cmpsb
in
stos
jo
sub
cmpl
popl
dec
jbe
jnp
sub
mov
mov
test
je
inc
adc
jg
mov
cmpl
jne
cmp
jbe
jnp
mov
or
jne
push
mov
dec
rorb
sub
hlt
cltd
xchg
adc
test
dec
cmp
or
lgs
mov
push
jmp
rcll
aad
ja
addr16
inc
pop
or
repz
push
or
xchg
adc
test
fimuls
das
cmp
subl
jns
adc
or
sbb
inc
mov
popa
stos
mov
xor
jl
loope
sub
cmp
sub
cmpsb
add
push
cmp
iret
outsl
pop
inc
sbb
fstl
dec
add
xor
add
add
lods
js
addr16
les
sbb
mov
adc
pusha
das
mov
inc
and
or
xor
fdivs
sub
adc
jnp
aad
into
das
movsl
js
fstpl
std
call
or
movsl
clc
jns
dec
push
sub
adc
xor
lahf
sti
fldenv
enter
push
inc
sub
push
cwtl
scas
cmp
test
adc
sahf
sub
lock
dec
cwtl
inc
mov
in
fcmove
sbb
pop
xor
test
jl
jmp
popf
sbb
mov
and
sbb
mov
scas
popa
aad
testb
es
pop
dec
test
inc
loope
jecxz
mov
inc
stos
jl
sub
add
jmp
mov
pop
jecxz
test
movsl
dec
and
or
push
insl
cs
mov
add
iret
mov
xchg
xchg
xor
test
mov
divl
xor
xor
std
inc
cmp
leave
ror
jae
cmp
push
fidivs
adc
pusha
sarb
sub
mov
jo
xlat
pop
cld
cmp
and
dec
ljmp
push
cmpb
mov
jb
push
jae
nop
shr
jb
push
pop
xor
mov
nop
xchg
pusha
mov
cmp
adc
cmp
push
jo
fisubrl
dec
mov
pop
cs
movsb
adc
xor
outsb
and
push
lret
std
pusha
mov
jg
push
jno
rorb
fisttps
fadd
dec
push
and
test
and
popf
ret
xor
mov
lcall
dec
clc
add
xor
aas
jmp
mov
popf
add
inc
cltd
xchg
pop
sbb
sbb
shll
push
add
dec
mov
push
xchg
adc
in
cld
out
arpl
adc
cmp
std
cmp
lock
mov
movsl
fsubl
jno
mov
cmp
cmpsl
and
jge
cmpsl
shll
outsl
sbb
cmpsb
cmp
packsswb
mov
mov
adcl
fdivl
or
xor
fs
jge
and
icebp
cmp
add
cmp
xlat
or
addr16
call
push
je
push
es
cwtl
pop
jl
push
and
mov
adc
add
xchg
lods
mov
push
dec
jo
xor
add
sub
mov
or
add
dec
push
outsl
shll
adc
mov
adc
mov
xchg
je
mov
sub
sbb
inc
cmc
sbb
mov
clc
mov
cmp
in
arpl
and
int3
out
add
push
aam
mov
mov
mov
sbb
push
sbb
sbb
fmull
cmpsb
push
add
push
jle
ret
inc
shll
mov
mov
leave
insl
inc
sahf
mov
dec
loope
andl
or
je
mov
addb
testl
subl
fstl
pop
fdivrs
cmp
jbe
es
push
add
ret
pop
mov
mov
inc
sub
mov
or
dec
rcll
and
xchg
icebp
add
or
xor
cmp
adc
mov
mov
jae
pop
jnp
sti
jb
mov
and
sub
je
inc
add
lea
push
pop
sahf
add
pushf
mov
xor
test
sbb
add
popf
pop
sbb
call
push
xor
mov
push
fisubrl
cmp
mov
push
mov
js
adc
add
jo
push
jae
lea
ja
cmpb
jne
ret
fiaddl
add
clc
sti
inc
mov
push
push
lea
jae
stc
add
push
xchg
sbb
pop
hlt
stos
pop
mov
andl
lea
sbb
cmp
mov
sub
or
dec
cld
ret
mov
lea
add
fcomps
adc
outsb
sbb
stc
jae
or
push
inc
sub
dec
and
dec
ja
push
xchg
and
cltd
lods
add
sbb
cmpsl
cwtl
loopne
pushf
mov
mov
dec
dec
ret
inc
adc
or
cltd
ficomps
movsl
mov
push
sbb
adc
cs
mov
imul
xor
and
jae
adc
les
jmp
imul
push
hlt
sub
das
dec
and
sub
inc
push
pop
xchg
lret
dec
lods
add
or
cmp
xor
pop
push
lea
cmp
sbb
sub
popf
movsb
scas
dec
out
ja
or
jb
pop
adc
fisttps
addr16
out
mov
cmpsl
xor
fsub
add
add
add
add
add
push
sbb
ret
push
gs
adc
lea
notb
sub
mov
mov
mov
ljmp
mov
lock
mov
movsl
movsl
sarl
sbb
mov
repz
mov
mov
xor
je
inc
and
data16
xchg
or
sbb
mov
add
push
inc
add
or
mov
jmp
insl
pop
jmp
push
jnp
dec
add
cmp
inc
pop
jmp
and
filds
jmp
mov
cmc
add
es
jmp
xchg
add
push
xor
or
mov
pop
jecxz
cmp
ja
cmpb
xchg
lock
cmp
xchg
cs
mov
pop
adc
mov
cmpb
ret
push
jae
lea
push
dec
mov
sbb
inc
push
pop
jg
pusha
pusha
stos
mov
or
jmp
pop
ret
scas
fdivs
pop
or
ret
jo
pop
cmpb
cmc
loopne
adc
insb
les
popa
xchg
fdivl
imul
xor
fnstenv
inc
jmp
push
cmp
cmp
leave
push
mov
fs
ss
jo
ret
sbb
cmp
mov
jge
outsb
xor
and
ret
nop
lret
sub
jmp
push
sti
outsb
je
or
cmp
ficoms
out
insb
testb
mov
movsb
mov
divb
fnstcw
cmc
dec
in
rol
push
push
push
add
push
add
sbb
popf
scas
lea
test
outsb
and
pop
cmp
or
jno
test
cli
repz
cmp
sub
cmpl
pop
mov
xchg
jae
int3
inc
mov
icebp
push
fidivrs
jnp
aaa
xchg
or
out
jmp
push
inc
add
mov
mov
and
pop
and
std
pop
push
inc
data16
pop
cmpsb
shll
dec
ret
shl
in
cmp
cmp
dec
and
inc
ja
inc
cmpsl
mov
cmp
cmc
lret
inc
pop
cmpb
xchg
fldt
push
inc
or
insl
test
pop
mov
cmp
inc
scas
jnp
sub
push
inc
or
add
mov
inc
inc
es
fadd
pop
add
fstpl
ret
inc
and
xchg
inc
add
rol
sbb
add
std
jno
ds
or
pop
rorb
inc
mov
pop
add
cmp
arpl
addr16
in
and
cmpsb
imul
imul
lods
sub
xor
pop
sbb
pop
in
sahf
ret
movb
sbb
or
jbe
add
lock
int
add
inc
arpl
and
xor
add
inc
mov
mov
pop
lret
in
add
mov
mov
out
or
add
cmc
push
cmp
ss
jmp
jl
loope
pop
imull
mov
sub
and
inc
inc
add
sbb
mov
mov
adc
std
rep
fadds
pop
lods
adc
imul
js
ds
add
clc
xor
pusha
cld
cs
xchg
pushf
cmc
test
shlb
cmp
sbb
pop
ret
pop
pop
jg
icebp
ss
cmpl
lcall
shll
adc
stos
outsl
pusha
jo
adcl
push
daa
and
pop
cld
dec
jge
inc
xchg
sbb
pop
adc
sub
je
test
lcall
fimuls
or
or
mov
add
xchg
rorl
aas
fcmovb
or
sbb
outsl
int
push
add
or
mov
shlb
loope
sbb
adc
dec
inc
ss
ss
adc
or
mov
dec
sub
sub
nop
test
test
pop
xor
leave
add
and
pop
xor
ret
mov
xor
pop
xchg
loopne
mov
xchg
push
sub
loope
xor
jecxz
lahf
mov
mov
mov
push
into
sub
and
insl
push
dec
sub
mov
add
mov
push
mov
and
int3
or
test
out
jnp
pop
subl
clc
stos
sbb
stc
scas
jle
jne
mov
sub
lds
pop
push
push
fisubrs
sbb
jmp
cwtl
rol
or
push
xchg
or
mov
adc
dec
push
push
rorl
fs
push
sbb
mov
add
insl
adc
std
std
es
and
js
mov
fildl
fstps
adc
fsubrl
adc
clc
sbb
aaa
or
sarb
sbb
leave
dec
push
fdivl
int
data16
mov
sub
rcl
push
out
pop
or
pop
xor
mov
cmp
cli
push
andb
adc
or
push
and
cmpb
test
mov
push
or
incl
push
push
enter
pop
ds
xchg
orb
push
push
sub
jmp
jno
popa
lcall
outsl
ret
pushf
out
cld
out
lahf
add
out
adc
pop
jl
xchg
fdivrp
fidivrs
aaa
gs
call
xchg
aad
loopne
int
imull
mov
mov
loopne
pushf
dec
jo
adc
jae
loopne
or
pushf
and
sbb
inc
adc
pop
fwait
ret
adc
sbb
sbb
dec
sub
ss
aam
cmp
addb
pop
pop
dec
mov
fbld
add
mov
add
jle
adc
ss
or
rcll
in
xchg
enter
xchg
dec
pop
push
mov
lock
xchg
dec
rcrl
insb
call
cmpl
xlat
sub
push
inc
dec
jns
mov
inc
and
jmp
cmp
or
aam
push
clc
push
push
pop
add
adc
js
fcmovne
fsubr
pop
ds
push
mov
xchg
loopne
mov
fidivs
adc
shll
loopne
lods
sbb
add
mov
and
push
jb
push
push
jecxz
sbb
and
dec
clc
loope
jl
js
fndisi(8087
clc
test
loopne
and
cmp
add
xchg
mov
inc
mov
sbb
ret
adc
repz
pusha
pop
add
ror
inc
push
inc
sahf
push
loope
sbb
ja
sub
imul
push
cld
mov
in
and
sub
rclb
rorl
enter
sbb
push
mov
xor
and
push
lret
or
mov
popf
sub
mov
xor
inc
add
cmpsb
or
or
mov
inc
stos
or
mov
test
leave
xor
sbb
out
inc
dec
ffreep
daa
adcl
adcl
push
daa
and
cld
and
sbb
repz
push
scas
call
cld
push
fsts
add
js
or
cmp
sti
dec
push
sbb
and
dec
push
ss
movsb
jne
xor
fcomps
stos
ret
xchg
cmpsb
loopne
jne
mov
shr
pop
loopne
sbb
clc
test
xchg
push
clc
popa
in
lret
xchg
inc
test
mov
add
push
push
inc
mov
and
adc
daa
jge
adc
lock
xor
lods
ret
loopne
jl
test
es
adc
scas
cmp
bound
inc
pop
jecxz
pop
jl
subl
add
cmp
into
sbb
insl
loopne
cmp
sahf
push
lea
outsl
push
enter
daa
lods
pop
dec
and
adc
jne
int
jg
and
adc
mov
push
nop
pop
inc
mov
hlt
dec
sub
push
sub
push
cli
push
or
pop
dec
add
inc
or
mov
into
lods
or
gs
push
loopne
and
cld
pop
call
lea
sahf
mov
push
sbb
subl
fldl2t
inc
mov
pop
push
dec
push
cmp
push
mov
aas
inc
iret
pop
cmp
popaw
popf
test
push
dec
mov
dec
pop
sub
loope
cs
into
imul
shr
into
out
push
loope
add
pusha
sbb
outsl
or
idiv
pop
pop
cltd
out
jmp
je
add
pop
cmp
das
outsl
push
xor
add
add
jne
inc
aas
and
push
jecxz
add
dec
adc
jl
mov
inc
mov
imul
mov
es
jl
aas
dec
mov
lea
ds
adc
sub
xchg
add
xor
or
dec
jns
adc
lret
iret
sbb
shrb
adc
insl
aaa
pop
dec
adc
shlb
inc
add
jmp
sub
popl
inc
shrb
inc
push
movsb
stos
rorl
fcoml
dec
and
xor
or
je
inc
dec
ret
je
inc
adc
jnp
ja
sbb
setb
or
push
dec
rolb
or
sub
sub
adc
and
sbb
les
in
js
je
xchg
inc
subb
cwtl
mov
xor
cmp
sbb
loope
mov
sub
or
jb
dec
push
sub
mov
and
test
imul
push
add
mov
xchg
and
adc
js
sar
add
inc
add
sahf
add
xor
rolb
pop
inc
sbb
inc
pop
scas
sub
inc
add
enter
leave
mov
shll
push
cmp
test
inc
in
mov
jnp
mov
inc
test
jo
roll
xor
ret
mov
push
push
dec
enter
ja
dec
xchg
sbb
push
cmp
imul
xchg
cmp
mov
xor
sbb
movl
push
shufps
pop
dec
mov
rorb
popf
or
pop
sahf
shr
test
add
xlat
shr
sti
lods
addr16
jne
andb
jo
cmp
or
fildl
divb
push
add
es
jno
add
jne
pop
xchg
rorb
or
pop
mov
mov
or
jne
mov
shlb
pushl
es
mov
rorb
mov
pop
push
js
popf
fists
lahf
cmp
ja
lock
mov
lea
push
js
into
add
fmuls
sbb
add
jo
push
cld
push
dec
jnp
notb
popa
inc
add
mov
dec
add
stos
pop
fisubrl
rorb
push
mov
sti
loope
fists
movsb
inc
mov
std
sbb
jge
push
cmp
aad
mov
adc
xlat
mov
mov
push
sbb
jl
adc
repz
xor
ret
or
les
imul
outsl
jp
or
jbe
mov
loopne
push
sbb
mov
jbe
fcompl
dec
scas
lcall
inc
neg
js
jnp
mov
enter
dec
add
jg
push
jnp
pusha
cltd
gs
lods
push
sub
ret
mov
inc
pop
push
cmp
push
jmp
mov
dec
sub
adc
daa
adc
lret
inc
cmp
insl
add
adc
mov
enter
xchg
pop
push
rcll
js
loope
aam
push
shl
pop
xchg
js
dec
adcb
andl
sbb
xchg
dec
cli
rolb
push
jne
dec
cli
or
fidivl
jne
sub
sbb
jne
add
out
rorb
jne
push
push
je
mov
or
sbb
dec
jno
and
cmp
js
enter
cld
push
lds
jmp
mov
dec
sbb
and
fs
mov
cmp
je
add
xchg
or
push
or
loopne
inc
lods
jne
xorb
cmpsl
xor
jb
push
rclb
cmpsl
fsubs
imul
data16
cmp
inc
xlat
push
aaa
push
jnp
push
sbb
push
push
cmp
and
jg
fdivrl
jl
mov
mov
adc
lret
jae
rolb
fidivs
pop
sbb
out
push
sbb
push
cmc
push
jno
ja
fdivrs
pop
xor
inc
xchg
and
rcrl
push
test
dec
outsl
fdivl
mov
mov
add
je
stc
lds
clc
mov
mov
adc
lcall
pop
clc
or
loopne
pop
imul
or
add
push
or
add
xchg
add
mov
mov
mov
or
inc
adc
xor
sbb
adc
inc
dec
dec
clc
fstl
jl
adc
sub
js
xor
pop
add
sbb
cmp
add
dec
push
cs
add
lods
lds
in
arpl
add
shll
mov
aam
push
push
shll
insb
jo
push
ss
je
jl
add
int
or
call
sub
mov
sti
or
mov
jbe
or
xor
xor
addr16
scas
sub
inc
sbb
pop
js
sub
int
pop
adc
and
pop
movb
sbb
mov
mov
cwtl
sbb
sbb
xchg
fmuls
imul
sbb
nop
add
js
jo
sbb
add
nop
fs
push
cmp
sbb
jle
add
adc
add
jo
js
pop
dec
dec
push
cmp
sub
or
or
sbb
dec
and
adc
add
pop
inc
xchg
add
adc
lea
jne
cmp
gs
sbb
addps
push
mov
ja
mov
adcl
sub
mov
iret
pop
test
xor
pop
dec
lret
lea
rol
cli
sbb
popl
lock
and
jne
sbb
or
mov
pop
dec
dec
fs
mov
es
add
in
mov
addb
mov
xor
or
or
xor
repz
push
sbb
sub
dec
and
mov
test
jo
and
or
add
shl
ret
mov
pop
and
ds
sbb
pusha
and
movsb
addl
xor
jnp
fstpl
jle
ret
sbb
xorl
or
addl
jne
orl
xor
inc
dec
adc
imul
data16
test
mov
xchg
mov
add
add
push
test
stc
fldl
jb
sbb
das
add
lods
cmp
int3
dec
jo
sub
adc
imul
inc
xchg
les
mov
jge
xchg
scas
add
xchg
xchg
mov
mov
mov
sub
or
clc
loopne
xchg
and
icebp
loope
data16
cmp
xchg
loopne
jne
xor
jb
inc
xchg
ja
fwait
sub
lahf
jo
cld
shll
push
dec
mov
add
sub
sahf
loopne
and
movsb
into
js
jmp
lock
or
out
mov
or
sbb
into
cmp
jle
cwtl
scas
push
push
pop
add
inc
cmp
push
jbe
push
push
popf
lock
dec
xchg
adc
cli
out
fidivrs
outsb
push
adc
jnp
shlb
lods
pop
mov
cmpsb
xor
sub
cmovo
dec
dec
push
adc
push
std
dec
or
int3
jnp
and
loope
and
pop
push
ret
test
inc
xchg
fdivl
rclb
pop
xor
xchg
adcb
mov
jmp
call
test
sub
cmc
inc
xchg
enter
in
inc
nop
repnz
push
jo
daa
test
scas
rorb
push
outsb
dec
jb
sbb
cli
nop
outsb
adc
lea
jg
mov
stos
bound
pushl
jo
and
sbb
jno
orb
addb
or
lock
hlt
mov
and
inc
lock
cmpl
add
sti
mov
pcmpgtw
jae
orl
ror
and
icebp
or
out
movsb
xor
shll
pop
pop
lds
lcall
sbb
cmp
loopne
mov
cli
je
popf
add
loop
enter
scas
dec
xor
negb
push
cmp
lea
push
icebp
push
insb
sbb
sti
push
sub
inc
and
jmp
push
jne
sbb
roll
or
push
insb
pop
or
jnp
and
cld
nop
in
cwtl
mov
mov
fbld
and
fstpl
mov
test
push
cmp
and
int
cltd
push
push
pop
fiaddl
shr
mov
mov
ret
lret
mov
lret
and
push
imul
movsb
cmp
xor
cmp
fisttpl
inc
std
mov
and
pop
insl
imul
mov
push
ret
movsb
arpl
cs
aam
fstpt
pop
cmpl
mov
jbe
pop
jle
jge
and
gs
jbe
jne,pt
sbbb
test
inc
sahf
mov
pusha
and
fidivrl
in
insb
mov
push
test
popa
loope
movsb
jbe
add
mov
sub
cs
adc
xor
dec
je
push
aas
jne
outsb
mov
imul
mov
add
sbb
pop
mov
pop
pushf
cwtl
fidivrs
inc
shrb
or
sub
mov
cmp
test
or
xchg
div
push
lock
and
dec
push
lea
push
pop
cwtl
push
out
sub
mov
add
lret
push
or
add
mov
dec
mov
push
lock
fdivrs
mov
and
push
add
testl
popa
add
push
test
xchg
fldl
out
push
and
add
add
sub
js
pop
arpl
arpl
mov
lea
outsb
cwtl
mov
movsb
imul
cmp
or
sbb
inc
adc
add
jb
pusha
jne,pn
and
xlat
dec
pop
mov
cmp
fdivs
sbb
dec
sarb
loop
sub
outsl
std
push
inc
add
es
xchg
pop
xchg
into
mov
stos
push
sbb
mov
sti
data16
je
lret
jbe
and
xor
jne
or
xchg
adc
or
push
pop
add
push
test
test
or
popa
ret
popa
dec
sub
out
and
mov
or
mov
adc
push
jb
cmp
push
jns
popf
or
pushf
sahf
adc
dec
xor
out
xor
lcall
mov
daa
and
sbb
push
ljmp
adc
xchg
dec
inc
vaddsubps
push
mov
or
or
ja
mov
mov
inc
pop
mov
mov
cmpl
pop
incb
jae
xor
push
fmuls
cmpsl
cmp
aad
push
dec
out
es
pminsw
push
jle
testl
xchg
pusha
imul
rcrb
bswap
inc
lcall
xor
or
jecxz
xchg
push
dec
pusha
xchg
cmp
xor
mov
movsl
add
cltd
fmuls
dec
jae
sbb
and
and
popl
addb
das
pusha
pusha
pop
add
shrl
xor
xlat
mov
or
or
jmp
xor
repnz
jl
jge
push
cmp
and
cmp
mov
dec
sbb
fdivp
fs
push
dec
xor
or
movsl
out
jne
jae
dec
repz
and
lea
push
inc
and
fimuls
cmpsb
divl
push
and
aam
in
adc
add
jl
repnz
pop
ljmp
loope
pop
rorl
aam
pusha
or
insl
imul
cmp
sbb
and
or
pop
jnp
and
or
jl
aas
push
test
and
imul
stos
sbb
or
push
and
pop
mov
rolb
popf
mov
jg
adc
mov
lret
adc
dec
dec
std
lret
push
fmuls
je
in
cmp
push
ljmp
add
loope
jp
add
mov
cmp
mov
push
cs
leave
int
mov
push
roll
or
and
arpl
sub
or
adcb
test
or
or
imul
adc
popa
and
dec
addb
xor
call
push
xchg
and
add
pop
mov
loope
jecxz
push
xor
xorb
cmpsl
mov
push
fbld
aad
xchg
push
xor
push
loope
clc
push
or
or
push
jbe
pop
mov
xchg
filds
mov
sub
sbb
pop
pop
mov
and
popa
mov
sbb
xchg
jnp
sbb
insl
sub
add
or
cmp
div
push
inc
xor
xor
cmpsb
sub
pop
xor
add
loopne
loope
mov
fwait
xchg
cmp
add
popa
das
in
mov
and
test
daa
js
mov
les
loop
movsb
push
push
push
addr16
push
test
xor
xor
loope
outsl
push
pushf
iret
pop
dec
jmp
in
test
cmp
nop
orl
lods
or
push
dec
pop
pop
pop
jmp
sub
push
inc
in
add
lock
es
bound
add
mov
aaa
push
lods
stc
inc
cmc
js
sbb
xchg
mov
or
jmp
or
mov
das
push
sub
jnp
pop
mov
pop
add
push
subb
pop
fmull
ret
push
inc
xor
mov
mov
xchg
xor
xor
or
ret
inc
negb
rcll
add
mov
jl
and
pop
xchg
mov
push
or
js
jb
repnz
stos
popf
jne
or
rcrl
jo
or
loop
and
dec
xor
pop
sub
in
mov
jo
sbb
jp
adc
scas
inc
xor
add
push
fcoml
inc
cmpsl
shll
sub
and
jo
or
lods
mov
adc
pop
adc
add
pop
pusha
or
add
adc
rolb
scas
andl
rorl
dec
jl
and
shlb
sbb
adc
sbb
je
push
pop
popf
mov
shll
push
loopne
push
pop
jmp
and
mov
icebp
jno
jecxz
adc
pop
bound
jb
fsubs
or
mov
pop
and
dec
addb
mov
sub
mov
arpl
jne
jns
pop
pop
sub
xor
xor
mov
pop
lock
and
bound
or
in
mov
sarb
cmp
add
sbb
cmp
add
clc
inc
mov
sbb
mov
fdivl
cmp
dec
or
dec
jl
loope
xor
push
or
jmp
fistl
xor
add
sahf
add
add
ss
push
fisttps
add
push
leave
adc
loopne
cmc
imul
ja
xchg
dec
testl
inc
add
jb
push
inc
mov
aas
mov
outsb
add
shrl
inc
push
pop
sub
xchg
add
xchg
into
outsb
movsl
sarl
aaa
add
pusha
and
mov
addr16
sti
movsl
push
push
cmp
sbb
pop
pop
arpl
mov
dec
imul
cmp
scas
lods
cld
push
test
adc
adc
pop
out
sti
or
or
pop
add
ds
lds
mov
sbb
data16
push
mov
xchg
or
mov
mov
inc
js
fadds
lea
adc
ljmp
inc
cld
adc
pop
clc
add
daa
push
pop
add
jae
inc
pushf
jmp
es
or
dec
fwait
decl
out
inc
ficoml
push
push
push
inc
movsl
stos
lcall
pop
cwtl
imul
cltd
idivl
push
xorb
pop
mov
lds
loop
fldenv
in
inc
rclb
xchg
ret
mov
push
in
pop
and
nop
dec
or
mov
movsb
stc
rorl
loopne
pop
sbb
add
mov
out
addr16
push
push
addl
aas
movsl
add
xchg
and
xor
push
push
mov
js
add
pop
popf
xchg
testb
rep
xchg
fcomp
scas
es
dec
adcl
out
mov
sbb
adc
xlat
sbb
data16
rcr
adc
sub
mov
cmpsb
adc
add
stos
loope
sti
arpl
sub
mov
movsw
fucomp
push
imul
xor
and
sbb
jbe
push
push
add
xor
sub
sbb
inc
mov
pop
lret
xor
push
or
jae
push
sbb
or
add
xchg
lods
fcomp
mov
shl
orl
cmpsl
ss
cwtl
pop
inc
in
ret
std
cmp
dec
xchg
popw
xor
add
add
mov
mov
or
ds
adc
sbb
adc
inc
cmp
adc
sbb
andb
xchg
push
jne
loope
xchg
imul
pop
loopne
jmp
shlb
insb
add
push
cltd
sbb
push
lcall
and
add
cmp
adc
aas
loope
mov
and
jbe
mov
mov
aad
and
cli
push
cld
out
adc
push
dec
pop
movsl
jge
inc
aas
jge
movl
shr
inc
add
push
sti
rolb
dec
and
das
or
adc
cmp
fiadds
loope
sbb
or
pusha
insb
std
jg
roll
pop
pop
popa
inc
sbb
lcall
in
repz
jecxz
dec
dec
push
stc
pop
insl
out
in
cld
mov
jae
movsl
mov
insl
dec
mov
or
fimull
sbb
push
sbb
push
arpl
push
pop
adc
inc
lock
and
inc
je
pop
adc
add
add
lret
push
idivl
dec
add
xor
lret
xchg
pop
push
cwtl
add
shll
push
rcrb
pop
mov
xchg
lock
in
cmc
mov
subb
pop
in
jge
shrb
inc
xchg
add
xchg
jge
bswap
or
jmp
and
arpl
add
mov
add
push
jmp
xor
je
lods
adc
cmc
mov
cli
cmpb
mov
pushl
dec
test
mov
inc
xor
mov
inc
scas
add
or
xor
je
loopne
dec
icebp
mov
sbb
jg
add
call
loop
movsb
mov
call
push
push
out
xchg
push
pop
mov
and
lea
jo
jns
aas
loopne
mov
add
xor
pop
sbb
cmp
add
sbb
jbe
es
sahf
pop
pop
sbb
repz
push
repz
inc
inc
stos
jo
sbb
in
xor
push
sub
cmp
hlt
sti
dec
sbb
cmp
push
xchg
or
jb
nop
mov
or
add
test
pop
ljmp
xchg
cmpsl
jecxz
add
mov
add
popa
mov
cld
fistpll
cmpl
sub
xchg
popf
or
inc
cmp
xchg
sub
add
and
in
lea
sbb
push
scas
add
ret
lahf
push
outsb
fstl
sbb
push
and
jns
pop
je
sub
clts
lcall
xchg
xchg
in
mov
mov
sbb
fcoms
pusha
andl
and
cmp
push
jbe
dec
testb
mov
les
arpl
cmp
cmc
pop
and
dec
insl
sub
mov
cmpsb
jo
rcl
loopne
pop
testl
pusha
je
testl
adc
fsubrp
jge
js
pcmpeqw
inc
or
dec
or
mov
xorl
adc
or
xor
pop
aaa
sbb
lock
popa
loop
push
mov
mov
pop
mov
and
push
add
into
or
orl
add
insb
nop
push
pushf
jmp
test
xor
sub
jecxz
xchg
lock
or
loopne
xchg
inc
div
jle
jle
xor
or
ret
add
and
scas
dec
xchg
out
ret
ror
adc
mov
or
insl
jne
bound
nop
imul
adc
pop
sub
jae
add
dec
cwtl
push
and
std
xchg
pop
es
js
movl
pop
pop
push
push
insb
and
inc
fs
dec
fmuls
push
xor
xchg
data16
sbbl
xlat
pop
insl
mov
cmp
mov
push
xor
clc
push
imul
testl
xorl
lret
mov
dec
sub
pop
loope
pusha
and
sub
add
ds
xorl
adc
xor
push
add
add
repnz
push
lret
mov
rol
femms
aad
adc
pop
add
sbb
mov
mov
jbe
sti
cmp
and
sub
jno
jl
jno
xchg
sti
adc
sbb
das
in
daa
dec
loop
shlb
adcb
sbb
push
add
xor
fcomps
or
lea
inc
lret
cmp
xchg
mov
adc
pop
add
stos
pop
cld
adc
push
adcl
or
daa
cmp
inc
shl
xchg
mov
or
adc
adc
mov
je
in
adcb
loop
pop
jno
imul
push
xchg
add
adc
notl
pushf
push
cmpsb
jne
ret
outsl
std
adc
mov
sti
dec
ja
je
addb
or
je
or
sub
jbe
xchg
scas
cmp
or
cmp
adc
xchg
or
add
cli
js
jne
sahf
push
or
xchg
jnp
and
jmp
rcrl
jecxz
cmp
adc
movsl
test
xor
insl
pop
or
adc
push
add
sub
ret
enter
add
cvtps2pd
sbb
out
push
mov
xchg
ds
or
cmp
adc
push
jae
jecxz
mov
xor
dec
mov
clc
adc
sahf
xor
cmpsb
or
cmp
dec
rolb
inc
push
adc
or
push
pop
pusha
jg
mov
push
sbb
adc
jbe
lcall
adc
test
xchg
and
mov
xor
ss
test
mov
or
incl
insb
add
xor
inc
dec
je
sub
xlat
jmp
out
or
jo
testb
outsb
fucomi
lods
and
scas
in
stos
mov
add
mov
ret
push
adc
inc
add
dec
adc
mov
add
sahf
insb
ds
in
mov
push
or
divl
xlat
jo
ret
sbb
in
sahf
movsl
pop
and
push
lds
lea
and
add
dec
or
jne
jnp
inc
dec
mov
and
or
inc
inc
xchg
jne
loope
push
adc
sub
cmp
or
pop
fsubl
xor
and
incb
out
je
push
loope
add
cmp
xchg
nop
ret
xchg
push
adc
add
push
jge
sbb
or
call
or
pop
or
fs
push
push
mov
xchg
xor
in
test
jo
pusha
daa
push
pop
push
jecxz
addr16
sarb
xchg
cmp
inc
add
shlb
fsubl
and
les
dec
xchg
dec
push
dec
ljmp
mov
jge
gs
mov
cmp
add
add
in
repnz
pop
add
mov
pop
test
or
adc
dec
adc
xchg
add
pop
mov
pop
push
lods
jecxz
adc
dec
insl
or
mov
lods
xchg
push
add
fcoml
nop
cmpsl
ret
sub
in
push
xor
fmuls
mov
lcall
push
add
fsubrs
or
clc
xchg
fbstp
inc
xchg
adc
pop
push
lahf
cmpsl
arpl
pop
adc
addr16
jl
mov
adc
shll
aas
mov
hlt
dec
aam
pop
inc
add
cmova
sbb
lret
pusha
das
xchg
in
xchg
push
xchg
dec
pop
aaa
dec
les
and
out
mov
lods
or
sbb
scas
jne
push
test
std
in
sahf
push
adc
bound
adc
movsb
sub
push
cmp
ret
pop
or
fidivl
xor
inc
inc
jl
jp
movsb
xor
push
mov
or
adc
cs
xor
or
fisubrs
mov
mov
dec
out
sbb
test
mov
mov
add
push
xor
pop
pop
scas
xchg
ds
inc
fcoml
in
call
lock
in
negb
push
or
aaa
sub
test
stos
inc
mov
jbe
mov
imul
xchg
xchg
pop
sub
outsb
test
outsl
cmpsl
dec
push
and
dec
je
movsl
fcompl
add
dec
imul
bt
sti
ret
pushf
jle
shl
movl
or
xor
data16
add
sbb
movsl
aas
xchg
pop
sbb
push
arpl
sub
loop
cmp
push
or
cwtl
sbbl
pop
or
xchg
xchg
xchg
inc
inc
inc
ss
pop
out
or
sub
popa
bound
push
sbb
jne
pop
orl
ds
jbe
push
add
jo
xchg
jae
in
inc
jo
int3
cmpsl
sbb
aam
or
mov
or
and
pop
push
inc
leave
mov
rcl
add
pusha
jne
es
dec
sahf
cwtl
fbld
subb
xchg
push
sub
sub
push
pshufw
roll
int
lcall
push
aaa
in
mov
addr16
cmp
hlt
inc
loop
inc
inc
mov
jl
pop
jp
dec
adc
mov
or
call
int
pop
or
nop
cmp
sbb
add
mov
add
cltd
fcoml
mov
mov
je
test
sarb
add
mov
adcl
or
push
and
add
test
and
inc
sub
adc
out
test
inc
add
push
das
adc
popa
sub
popa
daa
cmpsb
js
test
adc
inc
or
jne
cmpsl
insb
adc
xchg
pop
int3
xchg
mov
sub
pop
mov
xor
add
leave
sub
cmp
pop
movsl
jbe
or
and
cmp
and
sub
xor
mov
or
cli
fimuls
jnp
mov
or
ss
and
fwait
cmp
cmp
pop
pop
push
sbb
inc
enter
jne
data16
mov
rorl
inc
sub
movsl
cs
in
inc
mov
aaa
jg
ret
shlb
mov
or
jo
push
jp
or
mov
popa
inc
jmp
xchg
pushf
push
cs
mov
jnp
out
sub
or
jl
sbb
cmp
sub
pop
das
push
sbb
jmp
add
pushf
std
and
adc
insl
mov
push
dec
adc
and
push
out
sub
loope
xor
adc
pop
cmp
mov
adc
xlat
pop
add
jb
add
and
mov
xor
movb
add
and
pusha
popa
add
xor
ja
clc
xchg
adc
jno
sub
into
jle
fcompl
arpl
cmp
jbe
pop
mov
lods
mov
lcall
ss
adc
test
addb
fsub
xchg
add
adc
push
sub
xor
jecxz
add
loop
jo
push
das
jnp
adcl
mov
sub
xchg
sbb
out
mov
lea
adc
pushf
leave
nop
rol
shrl
sbb
int3
sub
repnz
cwtl
dec
mov
xchg
cmp
cmpsl
pop
and
and
in
addr16
cmp
lods
repz
scas
inc
mov
popf
mov
test
jecxz
mov
and
xchg
enter
fsub
jg
hlt
add
repz
dec
js
pushf
lock
add
sbb
adc
mov
adc
fs
stc
imul
pop
add
or
daa
xor
punpckhwd
mov
je
cmp
je
loopne
push
pop
or
ljmp
or
fsubrs
dec
mov
dec
orb
dec
add
int3
add
and
in
inc
roll
dec
xchg
dec
aas
shll
xchg
sub
je
adcb
push
stos
je
cmp
add
xchg
sbb
fwait
addr16
sti
fadds
mov
fisubs
inc
cmpsl
xchg
inc
cld
imul
scas
adc
push
mov
outsb
call
and
mov
add
rcrb
daa
sub
mov
cmp
cmc
xor
sbb
xchg
sub
addr16
jle
mov
mov
movb
and
pop
mov
sub
loop
jp
sub
shr
cld
inc
mov
jo
pop
push
and
out
mov
cld
pushf
js
and
mov
jl
lds
jmp
test
cltd
push
push
leave
orl
dec
or
mov
inc
and
adc
sbb
adc
sbb
lahf
dec
lods
push
sub
push
fimull
xorb
test
and
scas
sbb
push
sbb
jne
xchg
cltd
lea
sbb
jmp
in
or
inc
and
sub
add
inc
sub
das
imul
lea
xchg
mov
or
roll
mov
movsb
cltd
lea
jae
mov
xor
cmp
xor
pop
lds
push
rorl
fs
and
inc
xchg
ret
enter
inc
inc
out
push
enter
jne
dec
and
add
mull
int
enter
push
insb
fnstenv
sti
and
insl
push
subl
add
adc
data16
push
jmp
les
iret
shll
jecxz
jp
pop
push
push
xchg
sub
mov
xchg
pusha
lret
push
push
pop
push
inc
jle
cmpl
xor
imul
dec
sub
jne
push
cmc
mov
and
xor
dec
adc
in
mov
nop
sub
or
popa
addr16
pop
adc
and
pop
lcall
loope
cmp
inc
sub
xchg
movsl
ss
lock
test
pop
cmpsw
push
or
or
fldenv
mov
sbb
push
xor
movsl
bound
sbb
insl
or
test
sahf
iret
dec
mov
jg
jo
or
and
or
dec
fsubrl
jle
jno
js
and
call
hlt
cltd
fdivl
xor
into
clc
inc
xor
iret
in
add
push
in
aam
mov
mov
movsl
sbb
frstor
dec
pop
int
push
mov
push
push
add
aad
mov
sbb
shl
dec
adc
imul
fidivrs
sbb
pop
aas
loopne
loopne
xchg
in
add
xor
push
in
and
xchg
jl
sbb
stos
mov
jns
mov
incl
jne
cmc
add
pop
and
xchg
std
ljmp
sbb
repnz
sbb
popf
add
sub
xor
popf
jecxz,pt
mov
jg
jne
push
loopne
fsubrs
push
int3
add
inc
mov
adc
adc
or
xlat
int
sub
loopne
lds
lods
and
movsb
pop
xchg
dec
lahf
dec
in
jb
mov
sub
dec
jne
das
mov
push
mov
or
or
xor
sbb
fiaddl
add
mov
rol
repz
subl
scas
call
mov
rolb
inc
pop
clc
loopne
push
jae
push
cmp
pop
sbb
adc
push
aam
addl
mov
insl
add
xchg
sub
cld
aaa
cmp
xorb
lret
or
cltd
mov
cltd
adc
test
outsb
sbb
xlat
mov
dec
or
add
adc
xor
cmp
jne
sbb
loopne
xchg
jl
or
test
ret
shll
sub
mov
dec
xor
les
mov
push
push
add
shl
bound
inc
push
ret
push
or
out
mov
rcrl
jl
or
xchg
push
sbb
dec
or
push
and
xchg
shr
xor
int
ficomps
inc
add
in
adc
or
xchg
shl
popa
scas
imul
leave
insl
nopl
add
dec
enter
jo
sub
xor
fwait
mov
adc
push
rorl
clc
sbb
inc
mov
js
imul
adc
jge
adc
jo
xor
decl
dec
leave
rorl
enter
jl
adc
xchg
ret
loopne
cmpsl
test
pcmpgtd
or
jnp
push
loop
jo
je
pop
and
lds
pop
inc
xor
lock
dec
mov
push
and
adc
or
por
mov
pop
or
or
push
sub
cmpsl
sub
xchg
addl
add
subl
das
mov
add
sub
pop
repz
push
aaa
sub
add
rcll
scas
cltd
xor
leave
push
xor
enter
jmp
cmp
lods
dec
xorb
pop
add
mov
mov
es
mov
inc
lock
add
add
xchg
mov
cld
pop
and
push
add
push
push
movsl
add
mov
push
sub
in
push
cmp
sub
stc
add
test
push
mov
lcall
fcomp
cmp
push
lea
add
mov
mov
inc
cmp
push
cmp
push
pop
shrb
xor
movsb
movsb
inc
pusha
sbb
cs
xor
ret
test
test
cmp
cmp
sub
cmp
int
aad
imul
in
cld
mov
mov
mov
ljmp
xor
and
inc
xor
and
lock
nop
xchg
add
outsb
mov
frstor
and
ja
push
pop
inc
dec
add
or
mov
inc
lea
jae
pop
adcb
vmovhpd
mov
ret
data16
scas
or
subb
mov
add
lret
xor
cli
inc
mov
jne
xor
jg
inc
ret
inc
cmp
fistl
andl
dec
inc
and
movsl
scas
add
in
push
pop
or
loope
or
scas
mov
inc
push
jae
pop
inc
mov
jnp
cld
je
lret
inc
xchg
inc
mov
pop
mov
notb
pusha
xor
idivl
cmp
push
nop
repnz
insb
addl
jle
mov
aaa
lock
push
ja
clc
hlt
push
icebp
push
inc
sbb
push
aam
mov
push
test
mov
push
push
rorl
in
jle
mov
nop
nop
add
jb
pusha
cmpsb
push
xor
add
pop
in
or
dec
enter
pop
inc
xchg
jo
repz
lea
mov
push
movsl
mov
rorb
sub
add
cmp
loopne
insb
mov
pop
sbb
mov
push
leave
inc
or
mov
jmp
out
adc
sbbb
cmpsb
xor
jge
mov
jge
pushf
mov
movsl
mov
dec
or
lret
pushf
mov
stos
add
push
dec
stos
mov
sbb
inc
mov
fisttps
inc
dec
out
inc
and
or
adc
rorb
dec
add
inc
mov
ds
out
ficoms
sbb
xchg
push
fiadds
pop
or
push
mov
movsl
xchg
rorl
mov
mov
inc
nop
pusha
pop
shrl
mov
fs
mov
jecxz
dec
fsubl
add
push
in
jb
fmuls
sub
pop
popa
adc
dec
cmp
rcrl
push
adc
sbb
lock
adc
and
call
ret
dec
sti
mov
mov
fmuls
pop
ret
aaa
xor
and
xchg
sbb
faddl
cmp
sbb
push
pusha
cwtl
mov
rorl
jae
mov
sbb
jno
dec
loope
arpl
pop
and
add
xor
adc
add
test
jge
das
push
hlt
pop
xor
imul
mov
lods
lret
ret
cmp
sub
jae
or
cmp
rorb
lret
fadds
cmp
jno
push
push
test
push
es
inc
xor
rclb
push
mov
sbb
add
popa
sub
pop
sub
sbb
add
push
mov
sub
sbb
adc
outsl
sbb
fadds
jecxz
push
jecxz
daa
roll
imul
push
clc
cmp
pop
ffree
adc
jge
out
lcall
ja
jg
push
call
clc
pop
gs
inc
or
inc
pop
add
lcall
nop
jbe
sub
lea
std
loopne
add
sub
push
cmp
ret
xor
sub
inc
popa
sbb
andl
pop
push
leave
nop
sbb
cmp
adc
pusha
int
mov
or
adc
enter
inc
xor
lock
inc
sub
add
add
ret
inc
push
inc
push
sti
jl
test
jg
cmp
jg
jle
mov
or
ret
mov
loopne
pop
daa
cmp
ret
mov
pop
out
lcall
inc
jle
dec
add
jmp
not
mov
mov
push
sbb
dec
popa
jbe
out
lock
es
xor
pop
dec
fadds
push
lds
andl
add
jg
mov
add
sbb
sub
repnz
xor
xor
jno
cmp
jns
inc
push
inc
push
add
xor
inc
add
cmp
xor
fldenv
add
addr16
or
inc
add
dec
repnz
add
adc
incl
add
and
popl
dec
jl
add
or
arpl
in
adcl
dec
and
push
xor
jno
mov
dec
jecxz
ja
aad
mov
add
imul
movl
cltd
or
dec
rcrl
inc
push
pop
xchg
sbb
iret
inc
adc
roll
push
and
incl
pop
adc
sbb
cli
jo
shrb
add
mov
scas
or
pop
hlt
gs
add
rcll
mov
arpl
dec
arpl
pusha
or
sarb
push
inc
cmp
inc
lcall
cmp
push
mov
dec
jb
mov
inc
sti
and
add
lods
dec
pusha
and
dec
mov
sub
or
dec
jmp
push
lret
or
xor
jge
enter
je
pop
cmp
sub
iret
sbb
inc
cmp
fisubrl
and
clc
push
sti
rep
lcall
cs
or
jmp
sub
cmp
jp
pushl
cmp
and
adc
and
sbb
andl
mov
adc
pop
push
push
push
enter
push
push
mov
sub
into
cmpsb
xlat
push
and
push
mov
pop
lods
rcrl
dec
adc
xchg
data16
dec
les
or
sub
std
inc
fcomp
pusha
adc
adc
sbb
mov
and
xchg
mov
cmpb
adc
mov
jle
pop
xchg
lea
xor
int
mov
imul
sbb
adc
xchg
into
and
fs
repnz
fsubl
xchg
mov
push
mov
test
mov
arpl
jae
or
xchg
das
out
jnp
pop
adc
push
push
dec
sbb
orb
addb
inc
ja
xor
pop
fwait
pop
push
data16
pushf
push
push
cmp
gs
or
xchg
clc
mov
push
sbb
jo
pop
add
pushf
sub
mov
xchg
push
mov
ljmp
pop
js
inc
push
push
sbb
xchg
push
pop
pop
arpl
fidivrl
xor
pop
arpl
sahf
shlb
cmp
sti
push
add
lock
cld
loopne
xor
roll
inc
inc
sbb
and
sarb
movsb
in
das
sub
loopne
mov
add
add
push
jmp
push
loope
sbb
adc
cmp
repnz
loopne
add
outsb
push
xchg
rclb
ss
sbb
jo
adc
xchg
mov
mov
sub
jno
jb
mov
clc
adc
or
fadds
fidivrs
call
or
enter
jp
fdivs
dec
add
icebp
or
testb
sub
test
jle
jnp
movsl
add
sub
or
push
push
xchg
ret
xchg
add
rcrl
aas
xor
cmp
aaa
lock
jae
cmp
lock
add
arpl
sbb
push
inc
or
push
push
adc
inc
outsl
mov
mov
push
clc
add
loope
inc
sub
or
add
rcrb
inc
movsb
jmp
cmp
je
dec
dec
icebp
mov
push
mov
push
add
jecxz
dec
xchg
push
arpl
jb
mov
push
push
or
pop
rclb
aaa
dec
sub
inc
or
ret
popa
loopne
cmp
mov
mov
and
or
push
scas
or
imul
adc
push
rcl
jl
clc
int3
loope
add
adc
push
adc
add
sub
lahf
and
adc
dec
sbbb
or
imulb
mov
push
push
imul
pop
or
adc
and
leave
adc
lcall
push
mov
pop
add
or
sbb
and
xchg
push
mov
xchg
pop
add
sbb
sub
mov
sbb
push
call
xor
adc
sbb
jge
pop
or
inc
jmp
dec
imull
mov
orl
jne
mov
dec
test
fsubrs
incb
mov
xor
jp
cmp
inc
mov
add
jb
jae
rcrb
push
mov
lea
hlt
jae
pop
jae
or
add
pop
out
mov
jo
ret
and
xchg
push
icebp
js
mov
jge
xor
mov
or
fs
jecxz
add
sbb
inc
sub
jb
and
sbb
pusha
mov
dec
pop
xchg
mov
sub
cmp
out
sub
rep
inc
je
push
inc
mov
mov
push
pop
dec
xorb
lods
in
xchg
stos
popl
sbb
xchg
stc
mov
mov
jg
and
fsin
mov
cmp
enter
sbbl
sbb
push
push
inc
push
add
push
cli
paddw
repnz
pop
xor
push
ss
push
and
jo
cmp
or
inc
shr
ret
insb
add
sbb
or
addb
jbe
push
inc
fbstp
in
scas
sbb
mov
imul
outsb
jl
push
pop
dec
mov
adc
lock
add
inc
mov
subl
addr16
adc
je
sbb
daa
or
cmp
jmp
outsl
cmp
insl
jnp
inc
and
je
ja
xchg
enter
add
fsubl
lahf
outsl
adc
or
fsubrs
insl
lahf
jae
arpl
ja
sbb
cmp
scas
scas
ss
arpl
cmp
cmp
mov
jae
shl
jae
mov
inc
mov
or
jo
xchg
lea
xor
xor
mov
scas
cmpsl
jne
push
xor
je
fdivrl
and
or
xor
add
mov
pop
push
or
movsl
dec
add
dec
test
lods
mov
and
push
pop
pop
enter
xor
sub
push
nopl
push
nop
xchg
add
and
nop
inc
and
inc
push
nop
inc
and
push
es
sub
nop
inc
jo
nop
inc
push
nop
mov
inc
push
sub
cs
es
mov
push
pusha
call
sbb
xchg
xor
cmp
push
push
nop
sub
mov
and
mov
divb
jne
cmp
pop
push
xlat
cmp
mov
mov
add
jne
and
sub
stc
sbb
sbb
fidivrl
lcall
pop
fisubrs
or
or
mov
or
sbb
sbb
sbb
inc
add
cmp
push
jbe
insb
pop
mov
call
adc
sbb
sarb
loop
dec
std
add
xor
mov
add
sbb
sub
faddl
fcomps
mov
ja
inc
insl
sub
or
jbe
jae
test
mov
shlb
add
mov
out
sub
mov
imul
enter
cli
fsubrl
loopne
hlt
sahf
cmpsl
shr
aam
push
xor
xor
or
jge
mov
loopne
jo
pop
arpl
sub
xchg
mov
mov
call
fwait
mov
sbb
dec
mov
pushf
sbb
cmpb
push
or
xor
in
adc
inc
or
adc
mov
add
int3
pop
in
push
mov
pop
rclb
bound
rorb
adc
or
dec
jne
pop
lock
add
pusha
mov
fadds
sub
mov
or
sub
push
ret
adc
add
inc
sbb
add
arpl
into
das
fs
popa
test
sbb
pop
sbb
dec
loope
xchg
sti
mov
xor
sbb
and
call
push
mov
mov
or
dec
adc
push
xor
rcll
ja
push
push
sub
je
pop
adc
xchg
rorb
add
lock
rolb
subl
or
jbe
lods
add
fcompl
jmp
cmp
sahf
xchg
sbb
pushf
aad
sbb
inc
add
movsb
pop
xor
mov
xor
jb
jns
xchg
mov
pop
or
pusha
lock
mov
in
inc
add
int
movsl
shl
and
and
test
inc
jbe
lea
fwait
mov
xor
dec
dec
inc
adc
push
sub
or
shll
dec
jb
and
dec
incl
pusha
or
mov
je
in
or
mov
shrb
add
rcl
or
ret
daa
xchg
nop
cwtl
push
sbb
pop
insb
mov
mov
add
clc
lock
and
dec
dec
sbb
and
add
xchg
add
jno
xor
add
sub
imul
xchg
mov
or
inc
cmp
sub
aam
js
loopne
pop
push
bound
or
rcrw
pop
sarl
dec
ret
in
push
jns
enter
es
xor
inc
cmp
mov
mov
call
sub
cmp
adc
mov
inc
or
jae
sbb
add
sbb
xchg
push
jmp
xchg
pop
xchg
popa
pop
jge
dec
xchg
movsl
imul
dec
or
push
push
es
xchg
ret
xchg
aam
add
fsubs
jecxz
pop
lods
inc
pop
jnp
mov
jg
mov
push
insb
cli
fdiv
sub
in
rorl
les
cwtl
inc
loopne
les
and
and
mov
movb
cmp
jl
mov
adc
aaa
and
or
pop
adc
stos
jb
sbb
js
xchg
push
cwtl
jb
add
mov
lea
imul
sbb
pop
or
dec
sub
ljmp
shrl
inc
fnsave
inc
ja
icebp
or
pop
mov
in
add
lcall
lds
and
add
add
jne
popa
shrb
pop
add
or
mov
gs
sti
data16
or
in
jge
pop
add
bound
lea
test
inc
add
xchg
jbe
push
aam
push
cli
push
call
scas
sub
or
lea
orb
mov
cmp
sahf
cmp
jecxz
or
push
gs
fdivl
call
into
jb
push
add
push
fsts
ficompl
es
push
sbb
in
push
xor
sarb
cmpsb
adc
jle
iret
xchg
mov
pushf
mov
leave
add
lock
mov
push
inc
xchg
fwait
add
sub
movsb
jmp
loope
mov
jg
sub
mov
adcb
jmp
dec
lret
cmp
and
cli
inc
pusha
iret
sbb
call
pop
or
popf
add
mov
daa
mov
es
inc
lock
movsb
push
in
or
dec
out
xchg
xor
or
lock
loopne
jb
in
shll
and
pop
leave
nop
shrb
je
pushf
jne
sbb
rcrl
ss
rorb
movsl
fmuls
lods
push
rorl
add
retw
inc
mov
loope
inc
mov
movsl
push
mov
inc
or
int
leave
xor
into
sub
fwait
sub
incb
mov
fcmovnbe
sub
pusha
add
mov
mov
pusha
ror
mov
mov
das
xor
sbb
rolb
gs
icebp
fmuls
out
rol
xchg
or
mov
xchg
pop
loope
sub
negl
scas
or
or
pusha
push
clc
jo
daa
push
sub
pop
xor
stos
mov
shrb
sbb
loope
jmp
jl
cmp
xor
aas
icebp
push
cs
sub
xchg
js
sarl
mov
dec
jmp
sub
inc
shlb
jbe
mov
sbb
scas
pop
mov
or
add
stc
push
jno
ret
ds
xor
gs
idivb
das
and
add
and
xchg
add
adc
xchg
pusha
xor
cmp
sub
arpl
inc
cmp
sbb
lret
adcb
xchg
repnz
push
dec
pusha
xor
dec
outsb
call
or
lds
push
push
cmp
xchg
aam
enter
adc
add
aad
jns
push
push
lahf
push
mov
mov
add
push
push
test
flds
or
nop
jp
or
add
push
mov
outsl
push
adc
mov
gs
js
adc
adc
mov
mov
sub
cmp
je
iret
or
insb
push
adc
nop
cmc
xchg
add
cmpsb
push
pusha
test
or
jno
sbbl
imul
push
out
in
add
pop
inc
xchg
ljmp
xchg
int
jae
or
rclb
push
sbb
mov
mov
inc
add
mov
enter
push
in
pop
dec
mov
int
loope
add
push
push
sbb
cmp
je
push
add
adc
push
mov
mov
or
push
xchg
cmp
inc
in
push
cmp
cmp
sarl
pop
adc
bound
inc
pop
ja
xchg
arpl
add
mov
mov
adc
and
or
das
sub
in
xchg
pop
insb
mov
adc
cmp
xor
incb
pop
xor
xchg
mov
inc
push
add
or
fsubrl
mov
sbbb
jbe
dec
xchg
insl
imul
cmpb
dec
and
jl
cmp
adc
in
push
aam
or
call
inc
jecxz
mov
cmp
bound
sub
xchg
mov
aam
push
cmp
pop
xchg
int
int3
clc
push
ss
lret
cld
mov
dec
aas
mov
inc
push
mov
aam
or
xor
or
jb
ret
cmp
mov
or
pusha
imul
sbb
enter
or
rolb
pop
faddl
jo
cmp
inc
addb
push
lcall
mov
sub
das
xor
mov
dec
fucomip
adc
je
cmp
and
jne
push
pop
and
lods
xchg
loopne
inc
in
jns
xlat
adc
test
mov
nop
pop
and
xchg
xchg
cwtl
pushf
push
movsl
into
es
test
lods
lods
push
adc
sub
fdivs
lcall
ss
ret
stos
jg
pushf
lcall
xchg
cmp
mov
pop
aam
add
cmp
out
sbbb
movsb
inc
ficomps
mov
pop
adc
std
popa
cmovnp
mov
mov
jmp
cmp
cmp
mov
sub
mov
fwait
or
jae
mov
and
jo
xor
add
popa
call
push
cmp
xchg
jge
lea
push
sbb
sbbb
add
sub
fimuls
add
mov
sbb
cmp
enter
xchg
sbb
inc
hlt
test
push
or
mov
mov
mov
mov
pop
sbb
push
add
dec
jo
jecxz
inc
xchg
pop
xlat
add
test
popf
movsb
mov
rolb
mov
dec
bound
mov
and
lahf
sbb
jo
push
shll
mov
lea
rorb
adc
sub
lods
push
adc
jae
xchg
fcoms
filds
pop
fistpll
sub
pushf
out
rol
jp
lods
or
push
test
jo
cmpsl
push
push
push
xor
ja
adcl
add
ret
cmp
mov
cmpsb
mov
adc
push
push
push
mov
outsl
xlat
nop
or
adc
ljmp
jp
aaa
push
fidivrs
arpl
je
rcll
rcr
int
movsl
push
daa
and
das
push
les
pop
stc
mov
cmpb
and
lock
push
loopne
push
sbb
lret
adc
fs
scas
inc
sbb
push
mov
xor
fsub
fdivp
mov
xlat
outsb
push
testl
cmp
cli
imul
movsl
jbe
xchg
push
pop
xlat
xchg
sbb
out
in
loopne
push
mov
mov
mov
mov
cmp
pop
je
push
mov
les
and
add
scas
loop
and
adc
mov
pop
in
lret
sub
jl
jo
xchg
pushf
test
or
call
scas
cmpsl
dec
sbb
pop
pop
or
mov
inc
adc
and
dec
push
inc
lock
add
sub
push
nop
outsl
or
jo
movsb
pop
dec
add
add
and
lahf
inc
mov
jp
xor
test
jb
cmpsb
out
out
xchg
jo
mov
pop
push
mov
mov
out
pop
push
xor
pop
push
ret
cwtl
cmp
sub
lret
in
nop
mov
ja
addb
leave
adc
les
sbb
out
adc
and
ja
insl
rcl
mov
pop
mov
fsub
scas
lea
clc
ss
mov
xor
je
add
imul
js
add
dec
push
pop
sub
cmp
nop
iret
mov
push
cmpsl
add
out
push
fs
pop
add
in
jecxz
imul
cmp
repnz
in
gs
sub
or
roll
or
enter
push
push
les
shrl
outsb
lock
inc
bnd
es
loopne
test
insl
or
push
inc
pop
jmp
outsl
adc
mov
sub
in
mov
mov
icebp
cmp
inc
hlt
loop
xchg
push
cmpsb
bound
mov
dec
xor
mov
push
jns
test
jle
xchg
lcall
mov
sub
pop
rol
adc
je
data16
out
cwtl
shr
outsb
jle
push
ret
jg
outsb
adc
mov
fildl
es
or
outsb
add
mov
jge
push
jle
xchg
mov
push
or
jp
psubusb
bound
das
adc
jne
jge
adc
fstps
push
lock
jmp
or
cmpsl
xor
je
push
cmpsb
dec
cmp
mov
shlb
jp
sbb
and
pop
je
sub
data16
fs
inc
jmp
sahf
push
fisubs
cli
incb
call
and
jne
add
push
loope
push
xor
dec
adc
andl
adcb
add
or
adc
adc
lret
imul
cmpsb
roll
push
push
bound
push
data16
stos
cs
xlat
mov
sbb
pop
mov
loopne
shlb
shr
aas
rolb
sbb
ret
ja
xchg
push
dec
out
push
pop
push
out
dec
roll
adc
push
mov
add
mov
cwtl
adc
ja
lods
lods
scas
jb
push
push
flds
xor
adc
test
aam
or
js
sub
pop
mov
sbb
incl
cmp
push
pop
push
sub
add
shrb
xor
subl
add
in
push
add
xchg
aad
or
pop
push
fmuls
iret
shlb
sbb
add
sub
jbe
stos
mov
hlt
imul
sbb
les
aam
andl
fcoml
rcr
shlb
sub
or
enter
inc
imul
imul
movsl
rorl
dec
inc
dec
add
xor
js
xor
out
and
push
dec
cmp
sbb
and
into
addl
dec
add
shlb
jl
dec
lcall
add
dec
dec
enter
loope
push
jnp
call
inc
pushf
pop
inc
adc
test
int
mov
out
movl
in
inc
inc
lcall
and
pop
outsl
or
fnclex
push
ljmp
adc
mov
inc
nop
out
dec
fldcw
cmp
sbb
fmul
add
add
jmp
push
adc
andl
push
icebp
dec
sub
mov
nop
mov
dec
sub
xchg
push
mov
jmp
in
cmp
daa
frstor
pop
fwait
mov
add
push
adcl
mov
or
movsb
mov
cmpsl
fistl
aas
mov
test
aad
add
pop
push
xor
test
test
xchg
add
push
dec
lds
into
sub
and
sbb
sarb
sub
or
daa
pushl
jne
dec
pop
out
cmp
incl
ss
popf
xor
test
pop
dec
pop
cmp
mov
das
outsl
shrb
inc
mov
mov
popf
sub
idiv
xor
mov
add
mov
sub
cmp
in
ss
sbb
inc
iret
jno
jno
mov
sbb
or
jp
add
sbb
sbb
arpl
inc
pop
pop
cs
shrl
pop
sub
adc
fmull
imul
pop
cmp
or
sbb
jne
dec
and
mov
call
lds
dec
cmp
test
js
mov
testl
fadd
jl
xor
mov
xlat
and
mov
icebp
mov
ret
dec
xor
loop
push
or
mov
call
push
or
clc
adc
mov
sub
mov
add
idiv
or
pop
outsb
pop
cmp
call
cmp
jbe
add
jmp
add
mov
mov
push
and
pushf
push
fdivs
add
inc
jbe
inc
xchg
adc
mov
push
adc
sbb
pop
test
or
cmp
and
push
xor
pop
add
mov
sub
adc
fists
push
adc
mov
aam
mov
xchg
test
rorl
or
and
imul
push
adc
pop
or
in
stos
nop
cltd
outsb
cltd
test
addb
fstpl
insl
daa
add
dec
xchg
enter
add
mov
aas
andb
push
pop
add
arpl
cmpsb
in
and
inc
cmp
je
mov
jno
and
pop
mov
pushf
jne
jo
cmc
push
jo
mov
sbb
mov
aaa
adc
je
mov
add
js
xor
fld
sub
and
add
outsb
mov
out
jge
mov
push
sbb
imul
mov
addr16
push
and
pop
test
add
fimull
jno
inc
ret
inc
xor
lds
mov
push
mov
lcall
mov
ret
sbb
cs
pop
inc
jecxz
sub
add
push
and
lahf
dec
cmp
sub
je
insl
mov
addb
les
int3
adc
js
cmpsb
xchg
fistps
sbb
out
adcb
jmp
cmp
cmp
call
jp
cwtl
jl
arpl
push
rclb
je
xor
ret
inc
or
lock
cs
push
add
sbbb
xor
or
aam
popa
jmp
insl
add
mov
sub
push
dec
js
cs
inc
popf
nop
and
je
add
xchg
je
lretw
je
mov
cmp
aam
test
pop
fstpl
mov
or
sbb
int3
xor
xor
jbe
fmull
and
push
femms
dec
pop
enter
or
out
mov
pop
sbb
lahf
or
or
jp
jmp
in
and
aam
fistl
mov
sbb
cld
push
adc
cmp
mov
frstor
fxch
or
fcompl
fcomip
push
pop
out
aam
mov
js
inc
adc
fst
testb
push
push
outsl
popf
cmc
mov
mov
and
sub
xor
adc
movsl
adc
sub
push
andl
das
sbb
movsl
mov
aam
lds
and
inc
fdivrs
aam
fcmovnu
cs
aas
movsb
xchg
cmp
add
idivl
mov
adc
pop
xor
add
cmpsb
leave
loopne
movsb
adc
fdivrl
xlat
bound
jl
add
inc
xchg
jge
mov
push
push
xor
or
xor
xor
popa
shr
es
push
pop
cmp
fiaddl
rep
sbb
inc
cmp
addb
cltd
sbb
adc
mov
gs
mov
pop
sbb
mov
xor
mov
sbb
in
adc
or
lock
cmpsl
iret
les
push
lahf
jge
dec
arpl
movsb
fiadds
pop
push
jae
popa
push
dec
test
xor
sbb
xchg
orb
mov
push
push
add
or
or
outsl
pop
test
mov
ret
mov
dec
fdivrs
mov
adc
push
dec
nop
mov
in
sub
call
sbb
lret
lret
lret
mov
mov
js
into
lret
lret
int3
nop
shrb
add
ja
cmp
push
lea
adc
add
jo
add
sbb
jge
sub
fmulp
pusha
aas
mov
insl
test
test
lret
mov
or
pusha
ljmp
and
pusha
sbb
mov
orl
or
xchg
pop
mov
adc
jne
je
jge
addb
push
add
mov
add
add
in
orl
popf
add
mov
js
mov
xchg
adc
mov
stos
xor
and
les
adc
adc
add
sub
aam
jge
negl
int3
jmp
add
subb
xor
and
xor
imul
add
inc
insl
scas
iret
lods
daa
or
gs
jp
jge
je
sbb
pop
std
faddp
jg
mov
and
lods
xchg
or
popa
dec
xlat
and
out
sub
aad
jle
dec
xchg
xchg
and
les
push
sub
repnz
or
aaa
faddl
sbb
or
bound
push
or
pop
mov
cmc
stc
stos
addb
pop
cmp
adcl
loope
shll
aaa
sbb
cmp
push
gs
inc
adc
adc
clc
sbb
ljmp
or
adc
jo
jns
and
ret
add
out
mov
inc
cmpsl
jno
lock
les
push
push
push
and
jle
test
xchg
test
add
movsl
in
in
popa
lock
and
insb
mov
add
xchg
fwait
dec
mov
mov
sub
sbb
es
inc
inc
insb
or
dec
mov
lock
lock
decb
imul
inc
imul
movd
cs
push
pushf
arpl
test
sub
sar
pop
pop
add
inc
cmp
les
dec
xor
cmp
push
ds
cltd
cmp
mov
or
mov
push
add
cmc
dec
std
adc
les
jle
push
mov
cmc
jle
daa
test
imul
mov
xor
lods
dec
or
jne
insb
pextrw
aaa
or
inc
loope
movb
test
xor
shlb
pop
adcl
adc
mov
xor
xchg
sub
dec
add
xchg
push
push
xor
add
add
mov
repz
enter
leave
je
sbb
cld
add
sub
jne
mov
jmp
fldl
aam
lcall
ret
pop
pop
sahf
enter
cmp
test
les
mov
movsl
push
push
movsl
fwait
cli
aaa
sbb
inc
hlt
fstl
xor
fcomp
fnstsw
add
mov
inc
clc
pop
fsubr
pop
faddp
andl
sbb
and
and
or
add
sub
inc
dec
cltd
adc
loopne
fstl
ss
xor
dec
cwtl
loope
push
inc
popa
out
push
pop
pusha
ljmp
adc
sub
mov
arpl
jp
inc
loope
shl
test
iret
sub
es
lds
or
adc
into
popa
jns
ss
dec
adc
fisttps
push
ljmp
jmp
jle
inc
xchg
fs
push
push
shrl
inc
mov
sbb
add
dec
test
sbb
add
into
lock
push
test
push
sahf
dec
dec
sub
mov
lret
pop
in
sub
in
add
aas
adc
dec
add
mov
sahf
xchg
loope
add
xor
dec
hlt
jge
adc
jl
cmp
xchg
jnp
outsl
push
xchg
fadd
movl
push
shr
ud0
add
mov
pop
ret
rorb
xor
rorb
aaa
test
test
stos
add
jle
add
cmp
sbb
dec
pusha
sub
pop
jle
cwtl
mov
dec
adc
shrl
fs
push
fmul
inc
add
jb
add
and
dec
jns
mov
mov
dec
inc
jno
adc
cmpb
add
add
or
inc
jecxz
out
mov
pop
loop
xchg
sar
stos
jg
rol
outsb
imul
adc
clc
sbb
test
stos
mov
lock
ret
mov
std
add
orb
ret
jne
push
and
nop
sahf
or
mov
decl
inc
adc
test
xor
leave
cwtl
nop
cmp
xor
xor
xchg
jo
and
cld
cmovp
imul
sub
and
mov
cmp
jno
or
in
cmc
aaa
test
adc
cwtl
out
xor
fists
or
push
cmpb
or
cltd
clc
xor
repz
jne
test
inc
pop
push
jne
pandn
inc
aas
fcoms
adc
inc
add
les
and
add
lcall
insl
mov
rcl
mov
sbb
and
scas
sbb
ret
cld
and
les
add
push
mov
in
adc
stos
faddl
push
ret
cmpsb
jle
cmpsb
xor
adc
outsb
sbbb
test
or
test
dec
mov
fdivrl
nop
pop
push
add
add
lret
adc
popa
sub
mov
loopne
push
ds
std
xor
loope
adc
mov
out
push
jno
notl
dec
add
rolb
mov
inc
sbb
in
push
push
hlt
ret
or
in
loop
add
daa
int
repnz
in
or
mov
xor
hlt
sbb
idivl
popa
push
icebp
dec
ret
cmpsl
fnsave
push
lock
test
jmp
and
hlt
dec
rol
add
push
xchg
adc
sub
bound
jne
mov
mov
jnp
stos
lock
mov
orb
nop
pop
pop
push
dec
jns
push
cmp
sbb
jle
and
mov
lods
jg
dec
push
in
loope
cld
jecxz
push
in
inc
shlb
mov
push
andl
xchg
lret
dec
inc
xchg
movsb
jb
fsubrl
sub
or
mov
push
pushf
jmp
lds
ret
mov
add
adc
add
popa
mov
jnp
dec
test
lds
loopne
imul
adc
push
jecxz
push
add
ss
loopne
cmpsl
leave
setl
das
dec
stos
xor
lret
xor
leave
out
int3
xor
inc
add
adc
add
loope
push
ds
jo
add
push
or
loope
scas
repnz
push
add
ja
add
lcall
loopne
jg
mov
daa
mov
js
in
mov
jne
or
add
or
cmp
adc
xchg
pop
xchg
push
or
scas
clc
ss
ret
mov
addr16
push
push
insl
loopne
orl
test
xchg
mov
or
pop
rolb
push
ja
popf
xchg
cwtl
and
out
add
and
mov
pop
xchg
test
add
popf
mov
pop
add
cmpb
sub
subb
shlb
sub
mov
push
sub
mov
push
imul
dec
cmp
faddl
or
pop
pushf
mov
jnp
sbb
pop
xor
adc
cmp
fdivl
inc
lea
inc
out
imul
sub
jle
addb
jl
mov
adc
add
add
in
mov
inc
sub
cmp
inc
add
add
dec
loopne
push
xor
or
xor
push
lcall
add
cs
iret
dec
push
adc
andb
movl
rclb
mov
mov
dec
dec
mov
es
ss
imul
inc
cmp
out
xor
push
in
lock
inc
jo
add
push
cmp
xor
daa
sub
dec
nop
pop
or
lock
outsb
enter
jmp
dec
gs
pop
arpl
pop
or
or
icebp
and
mov
movsb
shrb
cmp
shl
dec
jnp
add
add
or
lock
stc
dec
rolb
gs
mov
fisubs
adc
push
mov
loopne
mov
test
loop
mov
ja
aam
xchg
xchg
cmpsb
sub
in
lods
into
fiaddl
pop
fadds
aam
imul
les
add
clc
pop
loopne
push
cld
or
aas
loopne
xchg
or
sahf
cmpsb
add
clc
in
test
sbb
mov
and
imul
fmuls
xchg
xor
sbb
insb
push
test
jne
mov
sbb
aas
std
into
and
rolb
sbbb
and
xor
sub
cmp
test
add
bound
fs
movsb
jns
std
jmp
jb
and
sbb
push
rcl
sbb
xchg
cmp
jb
dec
clc
pop
clc
jl
test
dec
sbb
sbb
adc
mov
loopne
in
xor
jbe
dec
aam
loopne
daa
pop
push
push
inc
dec
fwait
enter
sbb
add
xor
push
les
repnz
inc
push
add
orl
dec
xor
sbb
xchg
xchg
pop
out
dec
mov
ds
aaa
sarb
add
push
cmc
or
mov
inc
cmp
cmpsl
push
in
mov
stc
inc
push
int
xor
data16
popf
ss
push
sbb
pop
push
sub
dec
push
sub
lods
cmc
bound
bndstx
dec
ficoms
stc
adc
sub
popa
enter
movsb
dec
sbbl
and
add
push
lahf
dec
in
sub
cmp
push
setg
or
add
mov
mov
or
inc
and
push
push
clc
fwait
inc
push
add
push
hlt
jge
inc
xorl
aaa
cld
inc
stos
add
adc
sahf
pusha
add
or
call
into
pop
xor
shlb
mov
in
jo
mov
popf
cwtl
outsl
xchg
or
sub
mov
sarb
adc
jmp
xchg
mov
popa
push
ffree
add
pop
inc
cmp
sbb
and
pop
and
mov
xor
adc
add
and
lods
push
ss
aad
pop
adc
pop
movsl
cmp
cmp
jmp
call
pop
ret
ficompl
or
aad
into
sub
sbb
sbb
cmp
sbb
jmp
pop
sub
add
adc
jno
or
xor
test
xor
sbb
inc
add
inc
push
cmpsl
jp
mov
xor
or
jo
mov
jmp
mov
inc
sub
cmp
push
sub
loopne
sbb
pop
cwtl
dec
push
mov
and
pushf
cs
fdivs
sub
xor
adc
and
push
inc
and
lret
cmp
rclb
lods
outsl
lods
sbb
push
adc
lds
add
lods
push
sub
sub
dec
jb
movsb
aas
inc
test
es
adc
aad
xchg
xorl
test
inc
or
jl
icebp
pop
push
push
insl
add
pop
je
pop
mov
or
inc
movsb
nop
inc
inc
cmp
sbb
pop
push
mov
mov
cwtl
enter
jno
in
push
mov
aas
add
xchg
jge
loop
cmp
fidivs
out
add
and
mov
rolb
pop
call
dec
lea
mov
cmp
incb
and
xor
push
xchg
rcrb
cmp
out
dec
sub
in
push
jl
dec
loop
jns
inc
inc
dec
push
daa
mov
sub
pop
sbb
xor
mov
or
out
mov
xchg
testb
inc
andl
dec
xchg
push
dec
or
cli
xor
enter
or
add
out
mov
lea
add
in
cmp
sub
inc
mov
or
pusha
lock
push
or
add
dec
add
outsl
adc
jno
lea
sbb
aas
andb
push
push
in
jmp
push
xor
out
xor
shlb
add
inc
push
jg
int
jns
push
inc
xor
in
cli
std
jb
out
add
test
out
dec
in
cmp
push
sbb
xor
sahf
adc
leave
xor
or
add
xchg
sub
dec
aam
jb
mov
enter
and
cmp
pop
mov
and
sbb
mov
sub
mov
sbb
lret
cwtl
mov
bound
cs
pop
xchg
icebp
fs
pop
push
pop
ror
cwtl
mov
inc
clc
inc
or
ss
sbb
inc
ja
or
jle
and
mov
sar
add
aas
inc
enter
ja
inc
pop
adc
or
enter
sbb
add
repnz
in
and
push
xchg
push
push
inc
push
and
mov
insl
pop
xchg
bound
or
xchg
test
fdivl
cld
jecxz
loope
aam
or
add
fwait
loop
adcl
adcl
add
jb
mov
pop
rolb
pop
dec
pop
cmp
cltd
inc
lods
mov
outsb
bound
sahf
add
inc
jns
je
xor
or
sub
or
and
pop
cmp
mov
pop
jl
xor
lret
into
push
inc
or
or
dec
cli
xor
push
pop
add
dec
sub
dec
push
cmpb
punpckhbw
jl
shrl
pop
enterw
mov
ret
pusha
mov
in
scas
xor
xor
in
pop
je
push
mov
cmp
xorl
or
or
push
xor
xor
push
cltd
in
testb
xor
pop
jne
jns
das
shl
pop
sbb
nop
notb
add
sbb
in
aad
je
sub
dec
int
stos
in
loope
mov
outsl
lock
jne
nop
fmuls
into
jl
inc
mov
sub
mov
jge
lds
ljmp
inc
sub
xor
fs
in
cmpsb
mov
data16
fs
es
mov
cmp
push
insb
add
clc
add
and
pop
push
pop
inc
mov
nop
xor
mov
js
add
ss
sbb
push
jmp
add
add
or
jecxz
clc
inc
add
punpckhbw
inc
add
fs
stos
or
push
clc
mov
and
pop
mov
movsl
lods
add
aad
push
mov
loop
test
adc
adcl
cmp
and
pop
and
dec
addr16
test
insb
add
push
mov
pop
loopne
push
sbb
add
or
add
repnz
add
xor
mov
sti
ss
in
mov
mov
pop
jecxz
lds
dec
daa
xchg
outsb
fdivrs
dec
imul
das
cmpl
mov
rol
push
std
dec
xor
pop
arpl
pop
insl
popa
out
push
fwait
dec
sbb
icebp
jecxz
out
jge
cmp
lods
dec
inc
add
xchg
jle
fcmovnb
mov
movsl
loopne
jbe
xchg
dec
xor
ret
movsb
add
cmp
ret
fidivl
push
push
cmp
push
adc
jle
data16
adc
jne
inc
mov
add
mov
inc
pop
cmp
enter
movsl
mov
inc
jbe
adc
mov
cli
movsl
cmp
lods
push
bound
test
mov
call
mov
push
rolb
sbb
and
rorl
int
pop
sbb
fwait
aam
fwait
inc
ss
pop
notb
push
sub
popf
xchg
push
bswap
rolb
push
sbb
ss
adc
adc
leave
jne
push
jmp
cmp
and
cmpsb
mov
adc
bound
leave
fs
sbb
pushf
inc
xlat
test
lcall
and
ja
gs
inc
xor
and
repnz
jb
and
adc
push
or
dec
or
dec
pusha
je
mov
loopne
or
add
or
ret
enter
lret
mov
sbb
pop
xchg
mov
mov
sbb
mov
xchg
mov
mov
int
jg
test
movsl
or
pusha
cmp
add
in
dec
cmp
shlb
fiaddl
mov
mov
leave
push
mov
pop
xchg
mov
mov
jecxz,pn
dec
insb
divb
mov
jne
add
jne
fiaddl
imul
xchg
xchg
sbb
mov
add
adc
dec
lock
inc
mov
adc
test
scas
movlps
sub
xchg
xchg
inc
rolb
out
lret
jo
mov
fs
imul
push
inc
mov
inc
loopne
sbb
sbb
jmp
mov
sbb
adc
mov
add
adc
xchg
and
ljmp
dec
sub
xor
lods
inc
pop
and
inc
or
pop
add
sbbb
rcrb
sbb
or
mov
mov
popa
sbb
xchg
mov
arpl
dec
loope
or
dec
jnp
dec
inc
adc
push
arpl
fs
inc
mov
xor
mov
xchg
adc
jle
sarl
js
inc
clc
xor
mov
popa
pop
adc
pop
test
push
movhps
hlt
adc
in
and
fldl
inc
add
pop
and
push
adc
xchg
push
movsl
leave
ja
cmc
xor
ret
cmc
add
push
add
lcall
dec
lret
or
data16
bound
mov
dec
pusha
fmuls
and
mov
xchg
mov
fldl2t
adc
add
popa
imul
jle
call
jno
and
dec
sub
ret
popa
sub
orl
pusha
xor
js
or
jns
and
adc
push
add
inc
loopne
or
lea
mov
jle
setge
outsb
loope
push
test
pusha
lock
sbb
push
cmc
outsl
ja
pop
add
jl
add
jl
movl
inc
popa
ret
movsb
dec
push
lahf
sub
test
sub
xlat
and
jns
add
mov
ds
icebp
adc
or
push
jl
mov
jmp
inc
lahf
mov
dec
mov
cmp
js
cmp
jl
push
push
push
or
mov
shl
or
mov
iret
mov
ret
test
es
hlt
stos
cli
loopne
add
repz
cmp
inc
outsl
test
add
les
loop
in
cmp
and
jae
movb
loop
frstor
xor
in
loope
imul
jmp
and
add
icebp
or
xchg
jl
or
or
stc
inc
lret
mov
rorl
pop
xchg
call
in
test
aad
sbb
cmp
orl
add
out
test
rorl
add
mov
or
mov
es
sbb
sbb
test
adc
fiaddl
push
xchg
mov
clc
cmp
rorb
hlt
mov
push
lods
bound
add
sbb
cmp
adc
pop
pop
push
mov
outsl
mov
popa
mov
int
ror
stos
fs
sbb
popf
cmp
pop
sbb
jle
jle
icebp
pop
decb
cmpsb
cld
sub
lock
cmp
and
add
adc
enter
xor
push
outsb
mov
add
push
mov
stc
add
push
push
add
push
std
xchg
mov
or
scas
flds
hlt
adc
adc
add
mov
addb
sbb
sbb
jo
mov
add
test
xorb
cmc
xchg
movsb
fstpt
push
lcall
cmpsb
add
dec
loope
hlt
rclb
repz
popa
jo
sbb
and
pop
sub
dec
add
mov
mov
shlb
xchg
addl
dec
xchg
sarb
or
add
xor
and
lcall
nop
icebp
inc
inc
push
and
lds
cmpsb
xchg
je
mov
dec
push
out
lahf
in
mov
daa
or
xor
sbbb
add
xor
out
pop
adc
inc
scas
mov
mov
fdivr
mov
add
xor
mov
jecxz
cmpsb
ret
lea
jmp
fs
mov
mov
loope
mov
ficoms
and
test
pop
jb
add
lock
dec
scas
in
sub
jae
push
ret
adc
arpl
adc
jecxz
xor
mov
push
andb
xorl
mov
mov
dec
xchg
dec
push
add
scas
cmp
mov
pusha
push
push
xor
or
jo
inc
push
jb
adc
dec
insl
test
or
mov
sbbl
fs
adc
pop
add
dec
or
or
adc
js
and
jns
mov
push
dec
push
cli
ss
gs
pop
jb
or
sbb
push
repnz
or
lods
mov
daa
in
lret
cmp
push
and
inc
adc
push
roll
pop
push
jb
push
xor
femms
ret
shlb
aaa
jl
mov
or
dec
std
xor
adcl
add
pop
adc
pop
int3
ds
or
pusha
or
adc
mov
leave
push
mov
inc
ret
inc
add
push
inc
pop
adc
cmp
push
adc
cmpl
nop
adc
jmp
push
add
lock
out
fimull
fwait
add
mov
inc
sbb
and
xor
inc
add
imul
inc
add
loopne
lgs
pop
mov
pop
pop
or
ja
mov
push
push
inc
dec
dec
addl
xor
mov
xor
jl
adc
loope
mov
clc
inc
sbbl
dec
fstps
push
add
jge
inc
fs
ret
jo
cltd
lods
imul
mov
loopne
subb
xchg
stos
xchg
cmp
stos
cmp
push
test
add
xchg
mov
aam
sbb
add
xchg
or
adcl
hlt
push
jmp
in
push
nop
xchg
fildl
mov
mov
cltd
push
in
andl
sbb
add
call
das
push
test
fdivs
jne
cli
fdiv
xchg
add
jl
sub
add
sub
mull
fs
fadd
xchg
sbb
lret
adc
js
hlt
ja
mov
int
mov
mov
add
outsl
mov
imul
add
rclb
mov
ljmp
fcmovnb
pushw
out
xchg
out
mov
sbb
mov
addr16
stos
inc
in
les
js
xchg
hlt
mov
pusha
mov
imul
movsb
and
adc
aas
adc
jb
or
push
sub
or
loopne
lahf
xor
jecxz
arpl
dec
sbb
shll
mov
push
fcoms
pop
inc
sub
mov
sarl
pop
shrl
push
call
push
push
mov
or
in
mov
das
push
push
xor
or
adc
fsts
push
or
adc
pop
push
sarl
adcb
add
test
dec
jo
das
pop
push
jecxz
mov
outsb
jmp
cwtl
cmp
dec
aam
adc
mov
lea
mov
mov
stos
mov
push
outsl
test
sbb
jnp
adc
shll
and
and
cmp
test
outsl
mov
in
push
dec
sbbb
lock
stos
ds
push
adc
clc
xorl
lods
pop
lock
inc
test
lods
addl
pop
dec
cli
mov
mov
add
cmp
and
mov
popf
notb
push
mov
push
enter
mov
push
mov
cmp
and
shl
push
mov
icebp
sahf
ss
and
movl
inc
out
in
in
enter
mov
push
xchg
mov
cmp
jmp
pop
sbb
nop
dec
lret
cmp
icebp
jecxz
pop
mov
jno
rorb
dec
sub
and
mov
enter
test
and
sbb
push
inc
mov
sbb
repnz
adc
mov
sbb
dec
sub
mov
scas
mov
cmp
rolb
movb
push
popf
hlt
or
ds
cmp
push
add
fs
inc
rcl
enter
cltd
int3
inc
cmp
adc
mov
and
das
je
aas
lods
xchg
or
add
loopne
sbb
mov
mov
xchg
or
sbb
sbb
movsb
cmp
adc
or
shrb
mov
shr
mov
fists
mov
mov
mov
jle
jmp
cmpb
push
lret
add
jg
push
inc
add
fstl
push
fmull
rol
mov
jne
movsbl
mov
pop
lahf
addl
clc
adc
jbe
push
paddb
ja
push
mov
lret
or
jge
insb
mulb
xor
dec
jp
dec
sub
outsl
dec
sbb
and
pusha
mov
jl
ret
lahf
bound
inc
jmp
cmp
add
cli
sub
mov
jmp
mulb
mov
test
pop
cmp
jl
nop
cli
dec
lods
cmp
xchg
lods
add
mov
lahf
mov
and
and
scas
dec
xchg
lods
xor
test
pop
lods
adc
cli
xor
rcll
adc
add
rcrb
hlt
add
pushf
mov
inc
pop
xor
or
imul
xchg
iret
xorb
and
outsl
or
loope
or
sti
push
std
add
loop
push
leave
leave
leave
dec
add
add
leave
leave
leave
leave
push
pop
or
out
out
or
jnp
or
jbe
jmp
or
out
push
jmp
por
jmp
adc
pop
out
out
adc
push
adc
dec
adc
dec
adc
out
push
jmp
pop
jmp
sbb
xor
out
out
jmp
sbb
es
and
out
push
jmp
pop
jmp
and
or
add
and
and
pop
hlt
inc
jno
xor
ret
loopne
int
dec
cmp
popa
xor
sahf
mul
mov
out
icebp
push
idiv
out
fidivrs
push
clts
pop
pop
daa
sahf
out
sahf
das
aaa
cmp
inc
dec
jns
out
push
push
pop
pop
fs
sahf
out
outsb
jae
jge
out
sahf
addb
sahf
out
mov
fnstcw
rcrl
add
add
push
pop
or
and
decl
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
and
mov
ret
jne
sub
fcomps
mov
push
sbb
inc
inc
nop
inc
ljmp
loop
add
movsl
jge
pop
leave
fnstcw
in
fisubrl
enter
xor
hlt
pop
add
jo
out
lcall
add
iret
rorl
or
xor
fwait
xor
sub
xor
test
test
mov
jb
inc
lea
sub
loope
sbb
call
adc
mov
loopne
popa
out
add
and
adc
and
test
lahf
push
ret
mov
lods
cmp
ja
jb
flds
mov
cmp
aam
inc
mov
or
es
sbb
mov
jl
mov
push
loope
sub
pop
gs
fcompl
repnz
mov
push
icebp
inc
mov
dec
sarb
call
adc
sbb
ljmp
jecxz
inc
jge
movsb
inc
mov
inc
fidivrl
sbb
add
jp
jo
mov
lea
shr
and
mov
xor
pop
xchg
push
movb
cld
inc
pop
pop
mov
ret
movl
rol
sbb
pop
cmp
mov
dec
cmp
jbe
mov
fmull
push
add
int
out
or
jge
adc
push
pop
rorb
test
and
rorl
xchg
bound
xor
jno
fmull
lea
imul
and
xor
lret
out
jbe
jbe
push
lcall
ss
sbb
pop
rclb
lock
add
mov
dec
inc
das
in
or
sub
add
inc
add
or
sbb
hlt
mov
add
pop
mov
push
and
loopne
mov
pop
mov
jl
pusha
xchg
outsb
jo
inc
pop
stos
xchg
popa
cmp
push
scas
mov
fimull
inc
insl
mov
inc
out
incb
loope
out
pop
adc
sub
xchg
mov
test
adc
adc
jo
inc
je
cmp
scas
push
fdivl
mov
add
outsl
sbb
mov
and
shl
lret
out
push
sbb
adc
call
xor
sub
mov
mov
sbb
mov
cmp
and
pop
cltd
and
enter
and
xchg
ja
repnz
add
sbb
add
and
mov
pop
push
add
xchg
sbb
push
xchg
ror
inc
add
push
subl
inc
and
sbb
fidivrl
cmp
jl,pn
outsl
sbb
les
sub
out
adc
jle
arpl
cmp
jne
lea
cmp
ret
add
jg
and
or
js
mov
inc
ret
js
lods
nop
push
sahf
push
push
add
mov
inc
mov
or
filds
outsl
or
icebp
jl
dec
dec
sahf
cmp
push
test
js
jmp
and
test
xchg
cmpsb
jb
pusha
and
push
dec
daa
pushf
cwtl
sub
cmc
fwait
cmp
jae
movzbl
rorb
xlat
push
add
cmpsb
adc
mov
dec
xchg
and
or
jmp
mov
inc
or
or
push
push
inc
in
addb
or
jl
jmp
mov
mov
and
cwtl
and
movl
sbb
and
lods
add
pop
ret
shrl
cltd
ja
jmp
push
jbe
jo
pusha
mov
and
call
ret
cmp
rorl
xor
out
and
mov
or
add
add
daa
push
push
mov
es
pop
lcall
jne
testb
fwait
xchg
int
insl
pop
mov
adc
push
push
sbb
jl
mov
test
adc
repnz
in
or
sub
sbb
add
add
test
pop
or
cmp
dec
cli
mov
sarl
add
mov
mov
inc
hlt
roll
xor
inc
pop
and
inc
mov
pop
ret
loopne
pop
or
imul
dec
xchg
sbbl
inc
xchg
nop
mov
addl
cmp
scas
fmull
movsl
add
mov
add
test
jb
sbb
shll
mov
enter
add
mov
int3
lds
in
jno
push
icebp
jmp
popa
push
jne
mov
inc
ja
fcompl
add
push
ljmp
push
jmp
movsb
or
outsl
pop
dec
inc
clc
xor
test
fists
dec
xor
ret
dec
pop
pop
mov
jno
and
hlt
sub
mov
je
cmp
push
bound
andb
enter
jno
loope
xchg
xorb
outsb
cld
push
xor
jp
push
mov
and
pop
ds
jae
lods
sbb
dec
push
mov
or
inc
push
mov
pusha
cmp
jb
mov
testl
in
push
shrb
aam
jg
insl
bound
push
enter
and
addl
ds
rolb
jae
mov
lock
or
xlat
clc
ss
xor
mov
mov
ret
or
mov
push
sbb
xor
dec
sarb
adc
cmp
scas
inc
arpl
xor
dec
je
jnp
dec
ficoms
ret
pusha
adc
insl
ret
xchg
loope
lcall
mov
and
inc
in
mov
dec
push
nop
pop
int
mov
repnz
sbb
xchg
nop
xor
or
sbb
cli
lahf
ljmp
nop
fsubs
popf
fucomp
inc
pop
adc
addr16
scas
inc
sbbl
and
dec
loope
pop
stos
mov
arpl
mov
xorb
mov
push
inc
xor
cli
xor
dec
jl
and
mov
mov
adc
aam
or
xor
or
mov
xor
lea
push
rol
ret
test
cmp
lcall
inc
pop
inc
inc
jmp
bswap
in
or
pop
ret
adc
stc
push
or
shlb
idivl
popa
cmp
or
xor
dec
mov
aam
cmpsl
jno
adc
xchg
jo
cmp
sbb
ret
pop
jl
cs
fisttpll
mov
and
mov
jae
mov
push
cmpsl
sbb
push
sub
push
shrb
push
adc
mov
and
insl
lods
sbb
pusha
pop
mov
or
pop
ljmp
bound
push
pop
push
imul
or
push
hlt
cmp
sub
add
pop
in
or
cmp
inc
mov
movsb
movsl
popa
inc
xchg
mov
loop
mov
push
fdivs
inc
push
hlt
sbb
push
scas
call
and
dec
sub
stos
movsb
pop
ljmp
xchg
xchg
adc
mov
adc
add
push
jle
mov
cmp
sbb
push
xchg
stos
pop
das
adc
adc
out
and
dec
xchg
mov
pop
arpl
jecxz
jnp
sub
loop
dec
add
test
mov
pop
mov
mov
fwait
rorb
sub
xchg
adc
adc
xchg
inc
daa
fs
dec
inc
sub
ds
mov
jns
sub
xchg
inc
pusha
cmp
lock
ds
mov
sbb
lods
xor
stos
mov
outsb
xchg
or
mov
pop
enter
ljmp
insb
lods
shlb
lret
pop
mov
insb
enter
jle
fs
imul
sbb
dec
bound
push
lods
lea
mov
jb
xchg
js
leave
xchg
or
xor
cwtl
and
inc
and
jns
jnp
test
adc
in
out
push
push
lods
add
sub
jbe
pop
and
and
push
xor
psubusw
xor
xchg
sub
ret
imul
stc
and
addr16
ljmp
xor
outsl
shlb
das
cmc
loopne
inc
leave
adc
adc
sbbl
insb
mov
pop
roll
add
shrb
jmp
adc
xor
cmp
or
mov
push
and
cmpsb
imul
pusha
pop
sub
inc
loopne
dec
repz
adc
cmp
fistpl
cmpsb
cmp
add
pop
fcmovne
leave
sbb
xor
pop
ret
push
and
fcmove
popf
sbb
xchg
xor
push
cltd
pop
cli
or
dec
mov
cltd
sarb
loop
mov
rclb
mov
lods
dec
sbb
inc
mov
sbb
lea
push
scas
and
pop
test
insl
push
push
test
cld
mov
mov
cmpl
sub
sbb
jne
imul
orl
adc
dec
mov
sbb
int
cmp
jne
and
mov
mov
les
clc
dec
push
push
pop
cmp
inc
sbb
xor
push
jp
push
push
fsubl
inc
inc
mov
fsubrl
xor
adc
loope
fs
scas
insl
fimull
ss
ds
mov
add
stc
aam
jle
sub
fwait
mov
mov
daa
add
cmp
outsl
xor
pop
add
jmp
fstp
push
popa
pop
push
test
aaa
bound
cmp
lea
je
test
mov
fidivs
mov
or
push
stc
adc
sbb
shrb
mov
dec
sub
xor
enter
xchg
xor
xchg
xchg
inc
outsb
push
sbb
sahf
and
and
cmpsb
fs
add
mov
in
ja
arpl
je
or
lret
es
sti
bnd
aad
pop
push
cmp
pusha
cmp
xchg
jne
push
cmp
mov
mov
adc
cwtl
push
aad
dec
mov
mov
lea
daa
call
pop
cmp
shrl
push
cmp
jge
mov
mov
inc
pusha
leave
ljmp
cmp
inc
sub
sbb
dec
enter
mov
mov
cmp
mov
or
lock
clc
clc
cld
sub
jae
movl
mov
or
push
add
popa
lcall
aaa
in
ja
fnsave
add
dec
je
add
adc
aas
sar
cmp
dec
or
mov
shr
sbb
sbb
mov
sub
jae
loope
xor
push
clc
adc
or
cmp
js
mov
adc
loope
out
add
adc
je
dec
je
sbb
insl
push
add
inc
icebp
mov
out
pop
mov
repnz
inc
add
jmp
sub
decl
xor
add
mov
in
mov
cli
mov
adc
mov
pushf
cmp
rorb
and
mov
xor
add
jle
test
clc
xor
inc
xorb
inc
jmp
sbb
bound
insb
ret
cltd
idiv
inc
inc
imul
and
jb
test
adc
cmc
cmp
dec
xor
add
add
aas
cmp
mov
stc
data16
push
push
or
push
adc
push
push
lock
dec
add
out
fistl
ret
sbb
jne
jmp
daa
xchg
xor
pop
call
ret
aaa
push
xor
dec
mov
repnz
cld
insl
addr16
jae
ss
imul
lcall
lea
push
ds
jne
cs
in
nop
xchg
jl
sub
sbb
cmp
ljmp
pop
je
cmp
pop
cmp
je
cmp
jne
inc
jne
mov
sub
mov
or
and
adc
ret
or
fisttpl
xorb
sbb
sbb
clc
cmp
jne
xlat
mov
add
loop
cmp
jne
mov
sbb
ja
test
cmp
or
add
xor
sub
jmp
push
jl
or
jg
mov
dec
sub
xor
and
popa
push
jmp
inc
jl
adc
jg
aaa
push
add
shl
in
or
jmp
mov
iret
mov
mov
outsl
adc
test
xchg
je
lcall
sbb
jl
rcrl
sti
push
pop
in
icebp
popa
jecxz
mov
jmp
test
xor
sbb
subl
pop
subl
inc
cmp
sti
inc
jl
pusha
mov
jg
xor
pmaxsw
xor
jo
mov
roll
ret
popf
aas
cmp
lods
daa
lcall
mov
shr
shrb
rolb
ljmp
mov
jge
inc
out
insl
push
lds
xchg
xor
xor
fsubs
inc
cmpb
mov
ret
adc
pusha
and
idivb
fsubr
inc
inc
sbb
adc
inc
out
jmp
xor
sub
cmp
xor
and
adc
pop
or
lock
jo
into
or
ja
mov
cmp
insb
and
dec
subb
and
and
jmp
pop
cmp
add
les
out
cmp
jle
movb
fnsave
mov
cltd
fs
push
pop
out
loope
jne
mov
mov
pop
cmp
sub
xor
roll
insl
shr
pop
adc
je
and
jne
ret
or
pop
outsl
jnp
jbe
rclb
adc
adc
test
pop
sbb
adc
lea
push
dec
push
sub
xor
andl
mov
push
add
roll
pop
ret
push
sbb
sbb
mov
push
lock
sub
jge
jne
pop
mov
push
repnz
jp
pop
mov
add
cmpsl
push
add
repz
add
sub
mov
daa
jno
or
inc
add
jg
js
inc
or
sarl
insb
xchg
pop
sbb
or
cmp
jne
add
push
adc
inc
lock
imul
jmp
inc
rolb
mov
pop
jl
xlat
push
add
jle
sbb
imul
iret
xchg
shll
imul
jmp
jl
loopne
add
add
sub
test
in
add
cld
cmp
push
int3
sub
aas
mov
movb
jbe
xor
push
sub
imul
push
cmp
mov
cld
sub
cmp
inc
push
lock
jns
addr16
push
roll
sub
ret
cmp
mov
push
daa
inc
js
push
imul
cmp
sahf
xchg
and
js
sbb
cmp
jno
or
adc
push
repnz
sub
faddl
or
inc
mov
leave
enter
or
cli
movb
jbe
orb
push
inc
js
shr
mov
add
cmpb
jne
imul
mov
imull
jge
les
jae
sbb
cmp
push
sub
xor
and
mov
xchg
std
mov
mov
mov
aas
add
test
adc
rolb
dec
cli
xchg
movsb
push
inc
inc
or
mov
mov
xchg
test
jnp
std
jmp
addl
push
adc
or
mov
aaa
out
cmp
filds
jecxz
in
test
mov
xor
dec
jg
repnz
adc
add
mov
add
sarl
rcl
or
xchg
sub
inc
xor
in
push
mov
mov
dec
dec
lds
in
cmp
mov
scas
fs
js
cmpsb
push
inc
inc
inc
adc
push
and
sbb
or
adc
or
dec
inc
insb
je,pt
inc
add
and
pop
loopne
xchg
rclb
mov
pop
push
mov
rorl
dec
imul
test
mov
fildll
pop
add
imul
lds
push
scas
push
push
and
adc
pop
jo
mov
xlat
push
call
sti
fcmovnbe
xor
jnp
jo
js
js
push
jnp
into
out
idivl
push
push
xor
in
shlb
pop
push
push
push
mov
adc
mov
xchg
sub
xchg
call
xchg
inc
push
sub
rcrb
mov
imul
and
xor
add
mov
subl
shll
std
jmp
mov
bound
insl
test
sub
cmc
push
subb
lret
sahf
xor
fsubrs
shll
push
loope,pn
xor
lea
add
mov
pop
inc
xor
cmp
jb
pusha
hlt
cli
es
aas
push
dec
dec
rol
mov
or
sbb
fadd
je
ret
cmpsb
ss
stc
sbb
testl
push
or
mov
xor
cmp
sub
mov
xchg
xchg
lods
sub
add
sbb
mov
and
sbb
push
mov
cwtl
pop
dec
jne
hlt
jge
cmpsb
loope
leave
inc
je
cmp
not
mov
inc
mov
in
sbb
mov
inc
daa
aas
cmpb
add
sub
push
lahf
push
inc
push
rcll
push
jge
sbb
add
sub
test
adc
les
movsb
mov
xor
inc
push
push
add
dec
mov
pop
ret
fbld
popa
aaa
les
nop
mov
dec
shlb
push
lods
jne
pop
sti
fnstenv
push
add
inc
out
or
lret
repnz
sbb
and
das
or
xchg
adc
sbb
add
das
out
in
sti
mov
cmpsb
inc
stc
cmp
pop
popf
inc
inc
mov
add
cmp
jne
xor
sar
add
jne
sbb
xor
lea
iret
repz
clc
jmp
xor
call
in
push
add
ficompl
fdivs
mov
jne
mov
pop
shrb
lods
xchg
sbb
sbb
add
enter
add
enter
dec
aaa
push
add
and
cmp
prefetchw
xchg
mov
push
mov
mov
inc
jno
or
xor
inc
mov
cmpsb
jmp
adcl
or
imul
push
sub
nop
or
les
push
mov
test
shll
xchg
jno
and
push
bound
add
aad
cmpsl
fcomp
je
sbb
shrb
addr16
das
or
xchg
sub
shrb
xchg
inc
xor
and
push
jmp
mov
shrl
lock
pop
cmp
sbb
in
movl
add
pop
jmp
in
add
dec
andl
pop
clc
out
sbb
divb
xor
rclb
enter
mov
pop
mov
loope
mov
or
lods
mov
movsb
mov
xor
andl
mov
sbbb
addb
push
mov
add
push
fistl
push
jmp
adc
pop
mov
sarl
push
popf
add
out
add
jmp
fsubr
ret
mov
or
je
sub
nop
test
add
and
and
add
add
adc
inc
and
sbb
pop
or
push
xchg
adc
test
int
mov
vmread
xor
xlat
fisubl
adc
adc
push
jo
xor
rcl
add
adc
lods
add
lea
in
in
add
popa
jns
out
jmp
aaa
xlat
add
sub
rolb
add
cmp
xchg
cmp
and
mov
cmpsb
adc
les
ret
mov
adc
jae
adc
pop
cmp
push
sbb
ss
pop
push
fbstp
push
xor
jne
inc
sbb
inc
sbb
adc
imulb
jnp
xchg
lea
fwait
jle
mov
mov
sarl
js
mov
and
xor
jno
pop
mov
ss
mov
or
jmp
cmovnp
pop
sub
jmp
mov
inc
call
push
xchg
lods
int
fcmovnbe
adc
pop
out
adc
jo
out
out
mov
cmpb
cmp
adc
outsl
pop
push
ret
pop
cmp
outsl
add
imul
mov
mov
in
cmp
rorb
or
rorb
push
inc
sbb
inc
mov
ss
mov
enter
je
ljmp
fadds
cs
jmp
xchg
icebp
add
adc
jl
xchg
lret
mov
adc
push
xor
ret
add
lret
clc
push
ljmp
mov
push
jg
pushf
or
out
adc
push
cmp
push
or
add
or
jo
and
mov
inc
sti
or
jbe
repnz
xor
and
sbb
int
and
mov
dec
mov
ja
pop
rcll
push
inc
mov
pusha
pushf
out
test
je
inc
or
or
dec
sub
subl
xor
push
push
push
ret
adc
loope
adc
les
inc
mov
sbb
icebp
adcb
std
pushf
mov
cmp
rcll
pop
pusha
in
mov
and
mov
pop
sub
ficoms
cmp
pop
jp
aad
test
xor
jne
mov
mov
je
jp
sub
adc
inc
jne
pop
push
jae
and
es
xchg
adc
pop
shlb
cmp
inc
push
lock
and
loop
aaa
lahf
ds
xor
push
lcall
jmp
cmp
xchg
fdivrp
dec
pop
adc
cmp
das
or
adc
xchg
lock
cmpl
loop
push
test
sbb
xchg
or
add
inc
dec
imul
mov
popf
fwait
dec
nop
lcall
out
jle
ret
and
add
cmp
jge
jo
mov
js
sub
test
push
add
scas
push
test
jnp
pusha
mov
xor
aas
cmp
push
mov
jo
scas
gs
jl
jp
clc
addb
jmp
dec
jbe
xor
add
or
adc
fbstp
and
xchg
push
push
insb
dec
jmp
pop
push
ds
std
cli
lods
sub
out
jae
cmp
pop
mov
sub
push
jmp
sub
enter
fldcw
adc
add
xorb
and
mov
jge
push
jg
add
test
aam
pop
mov
shll
ljmp
pusha
xlat
mov
inc
push
je
jp
add
jnp
std
mov
fucomp
pop
dec
push
push
push
ss
cli
add
out
dec
nop
mov
ret
pop
sbb
pop
lock
shr
add
leave
data16
mov
movsl
fs
dec
sbb
in
inc
add
dec
movb
loope
addr16
and
iret
pop
mov
push
scas
stos
pop
aaa
cltd
sahf
into
and
sub
nop
and
push
sbb
rclb
mov
movsl
sub
push
jae
shll
cmp
ja
scas
shlb
std
sub
outsb
sub
or
jl
ljmp
lea
xorb
pop
dec
push
rorl
jbe
pop
cmp
xchg
cmp
jo
jbe
add
mov
xchg
andb
or
ds
add
ret
cmpsb
cwtl
int
inc
pop
popa
add
outsl
cmp
pop
js
jge
cmp
or
fwait
mov
pop
jnp
ret
add
loope
adcl
add
insl
add
pop
fwait
je
or
adc
push
or
xchg
scas
sub
push
loopne
fisttpl
sub
imul
sbb
push
out
les
je
shr
rcll
mov
icebp
cmp
sbb
shrb
bound
sbb
repz
es
xlat
loopne
adc
dec
inc
or
jmp
popa
sub
xchg
xor
mov
cltd
push
cli
push
das
sub
push
sarb
push
inc
ret
or
mov
mov
loope
push
and
aas
pop
cmp
push
jmp
lcall
sub
call
dec
and
mov
mov
xor
aad
mov
sbb
sbb
dec
fcmovnbe
loopne,pt
clc
imull
push
dec
pop
std
sbb
cmp
and
push
xor
jo
shrb
adc
in
inc
jo
sbb
mov
sub
loopne
sbbl
in
sbb
push
iret
rcl
xorb
adc
lcall
mov
push
xchg
cmp
hlt
inc
adc
loop
repnz
je
sar
adc
pop
es
mov
mov
ds
sbb
mov
inc
outsb
movsl
hlt
nop
inc
xchg
push
push
pop
mov
push
jg
rcl
cltd
aam
sbb
call
stos
fsubs
push
mov
je
xchg
sbb
fisubrs
test
push
mov
sbbl
pop
dec
pop
pop
add
popa
lock
adc
and
sbb
loopne
inc
repnz
mov
cmp
jnp
add
adc
or
shll
jmp
add
add
xor
cld
pop
cmp
je
cmp
jbe
push
xor
lods
inc
ret
je
rcrl
loop
cwtl
lret
lea
pop
push
movl
adc
inc
movsb
nop
roll
sub
or
cltd
jle
sbb
cli
pop
inc
imul
and
lcall
cmp
cmc
or
test
xchg
add
pop
or
or
cmp
or
add
jne
mov
sbb
cmp
scas
xorl
jo
mov
pop
stos
ljmp
test
add
push
cmp
lock
subb
jb
adcb
pop
cmp
sbb
loop
mov
mov
data16
push
inc
cmp
push
inc
xor
push
sbb
and
shll
jp
fdivs
and
add
popf
fnsave
jne
push
nop
dec
rclb
cmp
or
pop
pop
or
jne
push
sub
fcomi
ss
cmp
add
in
push
inc
pusha
jle
push
xor
pop
div
dec
cmpl
std
jb
lea
int
sbb
pop
adc
or
xchg
jmp
lods
push
dec
xor
push
inc
fidivrs
xchg
dec
push
adc
xor
jmp
add
push
add
xorl
jb
addl
mov
cltd
adc
mov
push
and
dec
mov
jo
out
add
or
pop
nop
push
sbb
sbb
dec
adcl
fstl
dec
add
or
dec
sbb
pop
dec
mov
pop
pop
push
cmp
out
cmpsl
mov
cmp
fbstp
push
sub
sub
jne
shll
or
adc
out
adc
add
pop
cmp
lret
fiaddl
inc
bound
sub
loop
pop
out
shrb
pop
in
jnp
lods
test
fwait
jmp
mov
push
jl
cmp
jo
cmpl
scas
pop
and
and
rolb
sbbb
psubusw
mov
jae
test
push
and
clc
jg
fs
test
pusha
ficomps
sti
jmp
movq
movaps
push
clc
repz
outsb
jae
xor
jle
xor
cli
rorb
das
jo
lret
je
cmp
cmp
or
dec
mov
xchg
mov
cmc
mov
adc
jnp
mov
push
and
je
adc
adc
or
outsb
adc
sub
mov
mov
outsb
ficoms
mov
add
std
imul
addps
int
add
loopne
fcmovb
sbb
sbb
xchg
pop
pop
and
push
xor
mov
rclb
clc
ja
movb
test
adc
rcrl
icebp
xor
mov
mov
repnz
push
subb
shlb
push
pop
stos
and
adc
adc
mov
adc
add
adc
push
inc
mov
or
jns
negb
sbb
mov
lock
inc
push
jne
inc
loop
daa
or
jns
daa
testb
mov
push
push
movb
or
ret
sbb
pushf
pop
addr16
sbb
sbb
sbb
data16
pop
clc
mov
sbb
and
enter
cli
xchg
adc
sub
mov
jnp
stos
xchg
and
add
or
push
iret
inc
mov
push
js
jmp
xchg
ucomiss
jne
adc
loopne
add
xchg
mov
mov
or
push
arpl
dec
aas
inc
hlt
or
insb
xor
pop
outsl
push
mov
mov
hlt
int
ss
xchg
add
nop
cltd
sub
nop/reserved
or
inc
into
adc
push
orb
push
push
cmp
enter
int3
mov
sbb
push
pusha
and
and
je
add
lcall
pop
cli
fiadds
fildll
cmp
jb
or
xchg
loope
add
test
mov
sub
sbb
fcompl
inc
pop
hlt
out
data16
movsb
in
xchg
xor
dec
nop
je
mov
cltd
pop
pop
inc
ret
add
push
jmp
jae
enter
pop
dec
adc
sbb
mov
pop
or
push
mov
add
inc
fsts
shr
arpl
rcrl
icebp
mov
pop
rcl
add
andl
lea
mov
adc
lcall
mov
mov
pushf
inc
hlt
insl
and
push
dec
js
mov
movb
and
add
pusha
adc
cwtl
xor
sgdtl
cmpsl
mov
jmp
cmp
jle
and
decb
sub
adc
pop
or
mov
ss
cmp
add
cmp
decl
shrb
je
cmp
jne
inc
cmpb
out
addb
or
and
mov
inc
inc
and
adc
or
or
mov
sub
ret
daa
mov
ljmp
cwtl
adc
inc
xor
hlt
mov
add
dec
mov
outsl
cmp
or
jo
loop
lret
ss
in
pop
lock
cmp
cmp
xor
pop
clc
inc
mov
cmp
sahf
leave
es
loope
pop
fdivp
or
lret
jne
dec
jmp
shl
xchg
cltd
loope
and
push
lret
jne
inc
les
jne
push
lds
jg
push
loope
mov
sub
pop
and
pop
hlt
jp
push
fldcw
fadds
js
adc
inc
sub
icebp
pop
rorb
or
cmp
adc
mov
inc
imul
jmp
or
pushf
ficoml
or
sbb
push
cltd
pusha
mov
adc
repz
outsb
push
add
push
pop
sub
sub
lds
fidivs
and
sub
aad
and
iret
shl
add
loope
inc
cmp
adc
fdivrl
addr16
arpl
push
add
sub
push
jge
fsubs
aam
add
jns
lock
sti
cmp
xor
adc
push
xor
or
pop
jne
sbb
ds
addl
imul
inc
enter
mov
repz
ds
push
jo
je
mov
add
cmp
jp
mov
aad
cltd
sub
pop
and
or
inc
cmp
sbb
sbb
jp,pn
lods
inc
lcall
push
cmc
mov
arpl
xlat
xor
dec
xchg
add
jbe
sub
cli
aaa
pop
shrl
pop
cmp
pushf
mov
cmp
into
lea
cmp
push
popa
aaa
adc
lret
sub
dec
jnp
xchg
sbb
push
adc
or
add
out
mov
jne
pop
sub
sbb
test
add
adcb
je
jne
stc
outsb
test
loopne
sti
shrb
and
pop
push
xor
add
in
xor
pop
aam
cmp
pop
or
xchg
rolb
and
push
add
data16
or
inc
mov
fadds
mov
rorl
call
and
xor
ds
ljmp
sub
pop
dec
cmp
repnz
shlb
jns
ja
pop
shrl
jl
jge
cmp
adc
dec
or
and
or
push
push
pop
pop
inc
scas
jmp
les
mov
addl
fwait
mov
push
add
fldl
sub
jne
imul
sbb
cs
enter
cmp
push
dec
or
cmp
xorb
fcomps
pushf
stos
cld
pop
insb
add
jecxz
jecxz
lret
mov
in
fimuls
adc
and
fadd
les
pop
xor
or
mov
jle
add
jg
mov
es
js
push
ljmp
in
xchg
sub
mov
sub
xor
sbb
xor
mov
mov
outsl
jmp
sbb
js
or
pop
push
sub
xor
je
ret
pop
fisubl
outsl
cs
cmp
add
add
shl
ret
pop
cld
push
add
xchg
clc
pop
jle
push
fimuls
jle
ja
pop
jbe
lea
adc
sbb
and
or
jp
dec
mov
leave
push
sbb
inc
pusha
add
push
clc
push
arpl
jbe
add
and
add
sub
xor
xor
xor
popf
lods
pop
pop
cmp
popa
mov
mov
adcb
in
das
mov
test
cmp
pushf
lods
pop
scas
xorl
in
add
int
mov
mov
je
mov
sbb
ss
mov
lret
pop
shrl
hlt
testl
cs
loop
add
or
test
sbb
cs
lods
push
xchg
mov
xor
push
xor
loopne
xor
and
mov
js
hlt
pop
lods
xchg
adc
out
push
mov
sbb
sbb
add
inc
sub
dec
add
adc
dec
or
ror
or
sahf
out
mov
inc
sbb
test
shl
push
mov
inc
sub
push
call
cmp
loopne
test
pop
pop
mov
jo
pop
ret
out
jnp
mov
xor
pop
cmpsl
stc
mov
ret
rclb
xchg
or
push
ret
cmp
cmpsb
or
out
push
out
xor
rclb
scas
icebp
push
and
repnz
aas
xchg
push
ret
and
jp
daa
dec
insl
aad
icebp
jne
jmp
lods
repnz
jecxz
push
push
test
lods
cmpb
dec
xor
flds
rcrl
cmovs
dec
dec
pop
xor
out
xor
pusha
dec
pop
jo
iret
adc
ret
std
insb
xor
push
rolb
xor
into
rclb
std
aaa
jecxz
dec
cmp
push
cld
jne
mov
outsb
sahf
out
push
cmp
jne
es
jne
sub
out
call
aam
adcl
leave
sub
jb
mov
lahf
xlat
aam
dec
or
adc
jmp
std
mov
push
jno
xor
cld
cld
jmp
fninit
ljmp
nop
adc
adc
inc
inc
inc
es
inc
push
out
stos
push
test
add
fdiv
mov
adc
xchg
sbb
outsl
jle
hlt
lea
mov
adc
repnz
and
adc
outsb
and
mov
aaa
adc
aas
lea
adc
add
adc
add
adc
pop
mov
xor
xor
dec
dec
xor
pop
pop
adc
xchg
pop
pop
inc
imul
push
sarl
leave
jp
sbb
pop
aam
es
adc
outsb
or
add
adc
ja
shll
repz
add
pop
add
xlat
inc
jnp
cli
xchg
fbld
sub
iret
je
mov
inc
or
jg
inc
or
hlt
add
mov
cmp
test
mov
mov
mov
push
push
pushf
cltd
mov
mov
or
push
mov
lret
xor
mov
jb
lea
push
mov
leave
in
and
and
rolb
cwtl
xorb
and
xorb
pusha
pop
loop
pop
js
lods
test
sub
cmp
adc
or
cmp
inc
popa
xchg
sbb
add
push
mov
xchg
push
cmpl
xor
mov
pop
mov
push
sub
nop
ret
adc
mov
and
lods
dec
aam
les
inc
mov
pop
in
adc
iret
es
jl
cwtl
push
dec
mov
rcrb
cmpsb
push
adc
or
ret
pusha
xchg
and
je
fbld
lcall
or
add
not
and
sub
loopne
shrb
sub
mov
cmp
cmp
loop
sbb
lret
fsub
xor
outsb
sbb
push
orb
and
inc
adc
lcall
lock
add
ja
sbb
pop
mov
sarb
mov
or
incl
stc
and
mov
inc
je
mov
mov
pop
popa
pushf
neg
mov
sbb
or
or
std
add
add
xor
pusha
repz
into
loope
sbb
scas
sbb
mov
mov
add
mov
inc
cmp
jb
jo
adcl
shll
cmp
outsl
xorl
leave
add
or
inc
and
fdivrs
loop
mov
ret
adc
dec
loope
ret
iret
pop
fisttps
pop
push
sub
or
ret
shl
push
fisttps
outsl
adc
jle
divl
lret
add
mov
sbb
xor
push
mov
jo
and
sbb
or
inc
push
add
out
jne
push
and
adc
out
cltd
call
ss
and
mov
je
test
je
cli
and
add
repz
push
aam
xchg
pop
addr16
xor
out
inc
outsb
or
cld
das
mov
sbb
lahf
cmp
dec
adc
xor
icebp
adcb
lock
pop
sahf
cmp
sub
hlt
jae
pop
or
jl
and
lret
mov
mov
pop
add
clc
in
pop
jle
addb
or
jns
notl
pop
cwtl
inc
jno
pop
inc
jmp
cmp
add
add
add
sub
mov
xor
jg
push
inc
adc
cmp
sub
rclb
mov
cmp
pop
in
js
or
and
adc
push
clc
adc
pop
rorb
jle
aaa
outsb
fmuls
adc
mov
sub
or
int3
lret
hlt
aaa
or
mov
and
je
lret
sbb
hlt
mov
jne
inc
dec
push
sbb
add
adc
mov
xor
or
mov
mov
lea
mov
add
push
inc
push
mov
and
mov
cs
mov
loopne
leave
adc
push
scas
movb
rcl
mov
ss
repnz
xor
pop
and
cmp
lods
mov
or
add
loope
push
sub
mov
scas
mov
xchg
add
getsec
jne
mov
std
jmp
or
add
repz
add
push
ret
lahf
test
sbb
or
mov
bound
xlat
jnp
jp
lds
push
xchg
push
inc
push
movsb
add
add
pop
xor
adc
call
xor
push
sbbb
ret
jmp
sbb
pop
insb
sbb
xor
loopne
or
inc
dec
jne
mov
je
push
jg
cmp
and
lret
test
fisubs
and
int
jo
or
adc
jb
lea
push
adc
fldl
dec
test
add
dec
inc
mov
push
pop
cmp
mov
or
adc
push
ret
mov
es
mov
nop
push
pushf
mov
popa
mov
outsl
daa
adc
push
jne
or
add
nop
out
jmp
or
cmp
xchg
movsl
insb
jmp
dec
pop
dec
sbb
sbbb
cmp
inc
pusha
shlb
mov
in
mov
xchg
leave
outsl
or
or
and
jmp
mov
data16
and
cmpl
pop
mov
shrb
add
jmp
mov
or
aam
xorl
or
stos
xchg
clc
pop
hlt
fs
jle
sub
movsl
inc
nop
jmp
inc
sub
add
scas
add
fdiv
fsubrp
sub
mov
mov
add
incl
inc
add
mov
mov
adc
dec
xchg
or
adc
push
test
pop
frstor
lock
push
je
rcrb
cmp
adc
int3
add
data16
adc
mov
push
into
and
test
xor
pop
shrb
or
dec
jle
shrb
jo
pop
sbb
jne
ja
lar
mov
or
inc
aas
call
jmp
subb
push
lods
and
leave
mov
push
out
dec
mov
mov
sub
in
xchg
pop
adc
int
mov
loope
loopne
in
int3
aam
pop
fiadds
push
sub
insb
push
mov
cmp
pop
addl
call
jne
pop
aaa
cmc
es
jbe
cmpsb
cltd
pop
idiv
scas
stos
movb
push
mov
mov
aad
and
push
rcll
mov
pusha
adc
shll
ror
and
dec
add
ficoml
add
mov
dec
xor
test
xchg
push
pop
push
pop
or
call
inc
mov
sahf
out
sbb
mov
mov
or
mov
cmpsb
add
add
sbb
inc
adc
jnp
out
or
repnz
add
imull
pop
or
mov
div
push
and
xchg
loopne
mov
inc
add
push
ret
add
jge
mov
stos
push
push
pop
dec
push
push
mov
fbstp
mov
adc
pop
jbe
and
lods
add
addl
xlat
leave
add
or
jg
in
xor
or
jbe
aaa
add
xor
push
push
faddl
idiv
addl
fisubrs
lods
popf
addb
sbb
adc
mov
imul
or
call
ret
jbe
push
sti
jmp
dec
je
add
or
pop
inc
mov
mov
data16
push
js
jbe
inc
add
sub
push
aad
push
cmp
mov
jmp
push
mov
push
lea
push
test
imul
add
add
inc
xchg
push
rorb
mov
push
addr16
jne
mov
and
insb
packuswb
add
dec
and
inc
jne
jmp
push
repnz
cmpsb
adc
cmp
and
jecxz
dec
xchg
cmovp
test
aad
or
inc
mov
mov
push
mov
add
movb
cld
call
or
js
dec
mov
xchg
jbe
leave
add
ja
push
jmp
rorb
add
dec
inc
cmc
sbb
fidivrl
jmp
sub
add
mov
pop
mov
and
fcoml
xor
lods
cmp
sbb
js
imul
and
and
fimuls
mov
inc
aas
cmp
jae
movl
sub
jl
inc
push
adc
sub
pop
scas
test
call
mov
out
mov
loop
pop
lea
add
sub
dec
sbb
jecxz
movsl
sub
push
push
adc
test
cmpsb
sbb
fst
fsubrl
fsts
xor
mov
or
dec
and
loopne
shl
jmp
arpl
mov
pop
jle
pop
pop
imul
ss
cli
or
out
popf
mov
lea
xchg
xchg
and
dec
imul
sbb
addr16
add
insb
sbbb
add
or
scas
xchg
xchg
imul
or
and
push
add
mov
mov
inc
mov
fnstcw
sub
xor
adc
cmp
push
mov
sti
add
sbb
psadbw
into
cmp
lret
adc
add
sbb
push
push
jo
cmpsb
inc
lods
movsl
stos
sbb
scas
insl
or
cmp
pop
rolb
xorb
sarl
inc
push
roll
jns
jb
data16
push
mov
cmp
inc
test
xchg
clc
push
mov
stc
mov
mov
cmc
int
pop
cltd
mov
fs
lods
jmp
pop
lcall
call
movsl
adc
fisttpl
xchg
xchg
mov
cs
add
rcll
sbb
cmp
addr16
inc
mov
jmp
dec
or
cmp
stos
cltd
pop
inc
mov
inc
add
push
adc
out
es
mov
inc
and
and
mov
xlat
je
xor
push
jne
add
stos
into
inc
inc
push
inc
dec
pop
lret
mov
cwtl
push
push
loope
pop
cmp
mov
js
in
push
add
dec
loopne
js
aam
aad
sbb
mov
pop
insb
adc
movsb
lret
inc
dec
mov
jo
or
insb
fiaddl
stos
jge
mov
test
pushf
ret
out
jecxz
mov
push
mov
and
or
push
orb
pushl
lea
lret
or
jb
pop
mov
test
cwtl
test
add
popa
adc
xorb
pop
fucomi
cmp
and
inc
inc
cmp
xchg
mov
sub
jl
jge
lret
sbb
dec
xchg
or
out
ljmp
repz
sarl
mov
shlb
inc
pop
fsubr
sub
leave
inc
in
movsl
fnstcw
aam
xor
or
fs
fmull
mov
xor
call
shlb
and
dec
pop
dec
daa
gs
lock
testb
outsl
lock
or
inc
sub
rclb
pop
gs
push
rorl
mov
and
sbb
dec
cld
jmp
inc
loopne
jnp
push
mov
add
push
lea
mov
add
cmp
sbb
test
ja
pusha
in
fsubrp
or
cmpb
rorl
orl
in
rclb
cmp
rolb
jmp
pop
adc
push
sub
or
int
sub
cmp
xlat
xor
loopne
push
jle
call
lock
sub
clc
std
and
loopne
fidivl
movsl
stc
rcll
es
push
ret
into
pop
jne
mov
mov
xor
pop
enter
dec
xor
adc
imul
dec
pop
dec
stc
dec
orb
dec
inc
aad
jns
xchg
mov
xor
mov
add
push
aad
xor
sub
mov
and
push
and
dec
and
test
cmp
jp
and
test
mov
cmp
lret
or
data16
jb
aam
push
sbb
shlb
mov
loopne
pop
and
add
loop
push
dec
pop
pop
jne
out
pop
test
jge
rcrl
sub
movsl
jmp
pop
and
inc
test
cmp
mov
jb
test
enter
mov
cmp
rclb
negl
adc
xor
and
jbe
bound
inc
add
add
mov
mov
test
add
cmpsb
movsl
cmp
push
nop
inc
xor
xchg
jns
or
movsb
push
pushf
push
xchg
jns
out
test
inc
mov
mov
cmp
in
call
iret
repz
hlt
hlt
clc
clc
sub
test
cld
cli
or
pop
jo
add
sbb
cmp
repz
fadds
in
push
mov
lock
nop
inc
pop
push
ret
pusha
pop
sti
and
adc
push
lea
jl
cld
pop
in
cmp
and
std
cld
out
pop
popa
or
popf
insl
neg
adc
or
daa
stc
outsl
mov
mov
pusha
pusha
pop
nop
jo
xchg
fwait
sbb
jns
mov
mov
push
jbe
out
add
cmpsb
and
push
add
nop
dec
dec
addr16
mov
out
gs
mov
cmp
dec
adc
push
and
xor
ds
cmp
popa
aaa
sbb
repz
repz
adc
adc
repz
adc
or
add
xchg
je
push
icebp
jns
test
mov
sub
and
inc
pusha
daa
ja
nop
jb
xlat
cmp
xor
lock
clc
and
cld
cmp
daa
mov
push
mov
adc
inc
je
mov
xchg
inc
lds
testb
jne
ret
call
daa
daa
sbb
fldl
cli
add
aam
pop
jl
or
pusha
xchg
add
andb
jne
push
sbb
sbb
mov
dec
sar
push
loopne
pop
pushw
ss
mov
loope
adcl
xchg
sub
and
scas
adc
and
cmp
mov
push
enter
lds
lds
and
jmp
testb
cmp
push
mov
fstl
roll
sub
dec
rclb
inc
or
inc
push
movl
and
test
out
mov
fs
mov
pop
or
sbb
fs
iret
push
test
or
jmp
lods
push
rcrl
and
mov
cmp
or
push
add
adc
or
rclb
cmp
aam
inc
and
xchg
mov
pop
lock
sub
mov
jge
push
lock
inc
xor
pop
call
xor
inc
loop
cmp
and
dec
pop
push
mov
jb
xor
les
jp
pop
push
inc
jmp
adc
ret
jge
add
xchg
add
push
pop
cld
push
shrl
mov
aam
movsl
push
jmp
je
clc
mov
or
rol
pusha
dec
stc
repnz
inc
inc
sub
dec
js
adc
test
mov
fidivrl
mov
xlat
inc
and
movsb
adc
mov
pop
dec
cmp
cmp
xor
jp
add
add
je
sub
pop
outsb
shr
cld
jmp
sub
rorl
lret
je
rep
adc
ljmp
fidivrl
in
in
testl
jl
adc
gs
insb
data16
in
or
fs
out
pop
pushf
popl
psubusb
stc
add
mov
loopne
adc
inc
lcall
cmpsl
fstp
mov
js
mov
or
sbb
clc
xchg
shlb
or
add
adc
enter
cmp
bound
cmp
push
dec
insl
cmp
js
mov
or
sub
xor
js
ror
xlat
mov
pop
ret
push
sub
sub
xchg
sub
int
andl
insb
movsl
je
sbb
popa
dec
pop
push
xor
fcmovne
lret
arpl
loopne
fcoml
lret
mov
mov
pop
pop
pop
jle
in
popf
enter
rolb
les
out
imul
fbld
aam
aaa
dec
cld
xor
push
rcrl
pusha
adc
and
pop
rorb
in
xchg
pop
sbb
int3
jno
insl
push
jne
inc
and
cld
mov
or
pop
in
and
mov
insb
mov
insb
or
xchg
inc
and
mov
ror
jmp
pop
ljmp
cli
nop
imul
sbb
and
jg
adcb
ret
sub
test
pop
or
pop
clc
call
pop
ja
lods
imul
mov
push
pusha
notb
aam
adc
hlt
scas
xor
mov
adc
jbe
push
inc
inc
jne
inc
call
jge
mov
int3
lods
mov
sbb
fmul
test
test
pop
divl
ss
les
popa
xchg
dec
dec
mov
dec
cmp
or
pop
and
repnz
ljmp
jns
pop
test
or
roll
movsb
adc
xchg
add
xor
mov
xor
cmp
push
pop
lds
ret
loop
enter
dec
or
push
mov
into
fnstsw
loopne
sqrtps
dec
jmp
pusha
arpl
ss
leave
mov
xor
cmp
push
push
into
push
adc
inc
jmp
add
js
movsb
push
iret
lock
rol
jbe
push
dec
cmp
or
dec
add
push
jmp
add
adc
dec
es
test
jmp
lcall
cmpl
mov
jp
jne
push
cmp
dec
jg
das
add
fcoms
or
je
movq
cmp
mov
xchg
lret
gs
shl
ret
fdivrs
xchg
popf
jne
sub
inc
jo
cltd
pop
je
adc
in
mov
fbld
xor
xchg
call
push
sub
subl
or
add
cmpl
push
sar
lahf
xor
jle
lea
mov
dec
inc
test
jle
jo
loopne
sbb
adc
push
sar
pop
lods
movsb
add
xchg
push
lret
out
add
call
pop
cs
mov
or
pusha
les
lret
dec
movsl
rcl
fmull
add
jl
sbb
xchg
or
sahf
pushf
lret
and
push
pop
add
jnp
mov
mov
and
fdivs
or
mov
adc
icebp
fsubs
sub
jo
add
fdivr
shll
mov
rorb
pop
xorb
inc
or
ja
movsl
mov
es
add
enter
movsl
hlt
hlt
mov
je
add
add
data16
loope
mov
fmulp
push
add
lods
js
mov
add
in
fidivl
mov
sbb
pop
js
add
movb
inc
xor
movsl
cmp
pop
jne
incl
pop
lcall
imul
sub
js
push
or
add
rorl
lret
inc
call
mov
push
das
add
sub
push
out
dec
mov
inc
je
mov
push
or
add
nop
push
repz
subl
movsl
push
test
pop
xor
adc
ja
lea
arpl
mull
xor
mov
dec
ret
xchg
aaa
jne
das
mov
adc
fadds
clc
ds
dec
and
in
mov
sub
mov
xchg
push
notl
es
mov
mov
mov
or
push
clc
stos
mov
addl
inc
push
insl
cmp
xor
arpl
sbb
jmp
push
shl
xor
bnd
add
dec
mov
cmp
inc
xor
or
push
in
test
test
or
push
imul
repnz
fisttps
movsl
jmp
xchg
pop
mov
inc
lods
xlat
mov
sbb
pop
dec
mov
dec
jp
mov
inc
mov
xor
mov
je
sub
in
cmp
movsl
add
pop
addb
push
sub
mov
gs
add
mov
in
je
or
mov
outsb
mov
ss
xor
insl
push
sub
or
aaa
xchg
rcr
test
mov
or
or
add
cs
jb
pop
je
mov
or
jo
lods
adc
test
stos
fiaddl
add
shlb
in
scas
aaa
mov
dec
jne
movsb
addr16
mov
jmp
ja
fistps
jle
popa
mov
ja
clc
and
pop
push
rclb
adc
data16
rcll
adc
pop
sub
push
shr
push
push
dec
add
add
push
pop
mov
mov
inc
cld
adc
and
sbb
mov
ret
push
xchg
sub
inc
sbb
mov
cmp
rorb
repz
dec
push
pop
jne
popf
push
push
inc
push
addl
lds
xor
inc
inc
cmpb
jne
xor
nop
jmp
sub
mov
push
push
xor
jae
pusha
cld
fprem1
shrb
mov
mov
repz
andl
sahf
push
dec
clc
movsb
repz
or
push
push
into
xor
jno
fisubrl
mov
rorl
rcll
sbb
pop
nop
lcall
push
or
sbb
sub
cltd
sbb
sbb
pop
jl
fs
movsl
pusha
xor
neg
mov
and
jmp
ret
jnp
or
jecxz
pop
cmpsb
sbb
mov
add
mov
or
and
lea
or
push
inc
sbb
xor
cltd
push
pop
push
or
daa
mov
mov
outsb
repnz
sahf
add
mov
ja
sub
inc
cmp
ss
pop
xchg
andb
or
and
add
movb
inc
jmp
nop
or
fimuls
dec
test
pop
push
repnz
and
mov
sar
ret
and
pop
std
mov
xchg
add
sub
push
xor
add
and
mov
subl
sbb
or
or
mov
fdivr
in
jle
jle
adc
cmp
mov
or
add
fsubp
cmp
mov
add
and
test
mov
adc
xor
cmpsb
leave
pop
inc
aam
adc
js
cmp
push
cmpsw
sub
jmp
dec
adc
aad
and
xor
add
sbb
lcall
iret
out
sti
fsubr
push
pop
int
flds
pop
sub
sbb
subl
mov
xor
adcb
testl
mov
mov
push
cli
movsb
add
loope
adc
mov
in
cmp
icebp
mov
pop
or
testl
inc
add
imul
lahf
cmpsl
push
jo
sbb
inc
inc
add
pusha
sub
nop
ja
jbe
ja
push
add
sti
sbb
test
mov
aam
aas
stos
sub
adc
jo
aas
xchg
cmp
jnp
inc
push
cmp
sub
add
ja
lahf
xlat
loopne
sbb
jmp
ja
push
push
add
cld
js
and
adc
nop
adc
xor
pop
js
orb
inc
pop
aas
push
push
add
out
fnsave
ror
mov
loopne
js
fsubp
or
inc
or
fiadds
and
inc
add
push
mov
lea
mov
sbb
sub
pop
mov
xchg
push
xchg
inc
fsubp
adc
and
aad
pop
test
dec
pop
arpl
pop
adc
mov
add
adc
mov
mov
push
es
sbb
push
lock
or
lock
pop
fsts
mov
dec
add
xchg
push
dec
icebp
push
addr16
nop
fimull
mov
call
in
loope
sub
imul
sbb
jo
out
loopne
or
and
fsub
pop
inc
pop
mov
mov
mov
je
lds
mov
jle
mov
or
movsb
mov
xchg
mov
push
jb
into
js
movsb
dec
cmp
cmp
fwait
sub
mov
and
dec
rorb
pop
jno
mov
js
add
mov
fisubl
lcall
aas
icebp
gs
push
mov
inc
push
push
and
push
lods
lods
aam
sbb
testb
inc
xor
adc
pushl
insl
and
out
pop
call
lahf
xchg
test
jp
add
sub
mov
inc
setne
jmp
xchg
push
andl
jae
mov
adc
jmp
inc
loopne
loopne
pop
shlb
loopne
sub
pusha
das
jecxz
fnstcw
sbb
imul
or
mov
ret
flds
leave
push
sub
sbb
xchg
cs
push
pop
sbb
pusha
xchg
repz
cmc
mov
lret
clc
insb
add
subl
fsubr
inc
xchg
outsb
popa
pop
inc
push
jb
in
addl
sub
jo
sbb
aam
jl
xor
sbb
add
add
imul
pop
and
pop
dec
nop
jo
jbe
mov
sub
andb
inc
adc
mov
jp
push
xor
add
insl
jmp
mov
pop
xchg
jo
mov
adc
mov
push
and
xor
ss
fmull
xor
sub
lea
xchg
out
enter
sar
push
xor
cmp
adc
mov
push
and
out
jne
pushl
sub
xchg
push
pusha
sub
notl
cwtl
pop
push
add
inc
push
add
add
aam
jl
inc
test
out
pop
movsb
or
mov
push
clc
sub
sbb
push
jb
sbb
push
test
mov
sbb
mov
and
cs
ja
scas
inc
xorb
addl
sub
cmpb
add
mov
psllw
push
xchg
add
inc
push
adc
inc
push
add
repz
pop
push
ret
mov
mov
pop
jl
stc
ds
outsb
fwait
xchg
or
hlt
mov
lahf
insb
int3
push
pop
es
aaa
imul
mov
jge
mov
in
fdivl
sub
push
fld
es
xchg
test
mov
ljmp
outsl
lock
lock
push
leave
dec
adc
fsubrl
dec
pop
xor
mov
loopne
and
mov
and
add
xor
push
sbb
or
inc
inc
andb
data16
sbb
xchg
cmpsb
mov
lea
push
cld
mov
fwait
les
pop
sti
sbbb
cld
dec
xchg
inc
daa
add
js
stos
xor
orb
dec
add
jb
sub
inc
adc
fwait
and
add
pop
cmp
jg
scas
or
leave
cmp
or
loopne
mov
xchg
and
call
push
cmp
pushf
rclb
push
or
pop
jle
sbb
imul
or
sub
inc
inc
aam
daa
sub
gs
aaa
cmp
dec
adc
lock
lods
lret
test
jo
mov
aaa
xchg
cmpsl
or
adc
movsl
add
pop
lods
movsl
pop
xor
hlt
arpl
adc
outsb
sbb
sub
sub
adc
loopne
or
in
push
outsl
mov
iret
movzwl
stos
or
repnz
les
mov
pop
pop
add
and
push
loope
push
ljmp
cs
ja
je
xor
cwtl
test
fdivr
add
mov
rorb
mov
and
pop
shl
dec
rcrb
pop
ja
dec
leave
ret
mov
rcll
loope
jns
dec
xor
ret
fldl
xor
adc
mov
dec
fildl
push
xor
add
pop
adc
arpl
push
bound
sub
aaa
call
lcall
leave
xor
leave
jecxz
inc
cmpsb
cmp
enter
adc
adc
push
fldl
jns
rcr
cmp
and
jne
jbe
add
scas
or
pop
and
jnp
sbb
adc
cmpb
fistpl
cmp
inc
cmp
pushf
pushf
pushf
das
es
stc
adc
fiadds
movsb
loopne
xlat
in
cltd
in
rorb
xor
pop
in
xchg
cmpsb
mov
lea
ja
push
dec
push
enter
add
add
cmp
add
pop
adc
daa
adc
lret
leave
clc
adc
cwtl
lret
mov
mov
dec
insb
xor
xor
loope
push
mov
lret
int3
mov
jb
in
int
add
inc
leave
mov
in
pop
or
call
pop
cmp
mov
adc
xchg
xchg
pushf
cmp
mov
movsb
repnz
andl
nop
imul
js
sbb
in
mov
inc
and
out
add
mov
mov
jns
stc
inc
andl
es
sub
xchg
call
leave
xchg
rcll
xor
jbe
adc
lcall
or
leave
mov
xchg
iret
and
fdivl
dec
push
nop
pop
call
and
cwtl
in
in
lods
pop
es
and
dec
fmuls
pop
dec
or
or
xor
and
movsb
cwtl
dec
cmpsb
add
aam
in
ret
add
pop
decl
aam
pop
sub
xor
adc
or
mov
js
or
cmp
outsb
or
xchg
test
lock
pop
lods
xchg
dec
shlb
call
add
sbbl
dec
test
cmc
sub
inc
xor
repnz
mov
and
addb
out
jnp
out
cmpl
jnp
xlat
xchg
and
shrd
cmpsb
int3
pop
lods
mov
ret
bound
lret
lea
jns
and
mov
lret
jne
fmuls
int3
sbb
xchg
ret
jp
pop
xchg
sub
cs
das
or
shll
loopne
adc
add
mov
pop
xchg
out
shlb
mov
pop
dec
mov
adc
and
xchg
mov
shrb
dec
add
xor
push
xchg
push
push
cwtl
popf
jle
sbb
cmp
lds
inc
dec
pop
add
dec
scas
negb
or
add
or
sti
add
in
cmp
and
ljmp
cmpsb
add
adc
ljmp
xor
rclb
mov
push
ficoms
sbb
shrl
ret
xchg
imul
inc
sbb
add
ja
fcmovu
add
mov
mov
movsb
outsl
xchg
xor
je
jo
or
jo
or
test
adc
or
push
mov
lock
xchg
xorl
sbb
and
call
enter
ret
stc
add
ret
rclb
stos
aas
add
mov
mov
inc
sub
ja
mov
mov
inc
in
sbb
adc
daa
or
nop
aaa
dec
cs
sbb
mov
cli
loopne
lea
loopne
mov
outsl
jne
shl
add
pop
loop
cld
hlt
mov
mov
inc
popf
out
and
mov
jecxz
add
add
ja
sub
rolb
or
movsb
das
add
mov
xor
dec
enter
jbe
loopne
jne
dec
cld
ficoms
push
push
sub
xchg
jne
das
cmp
sub
xchg
out
cmp
jbe
dec
inc
inc
cld
mov
and
inc
lret
cmp
orb
xchg
insb
notl
mov
cld
or
nop
mov
push
pop
mov
lea
pop
mov
ja
mov
or
rorb
sbb
in
inc
int
and
lea
cli
sbb
call
push
cld
jmp
movb
add
dec
dec
iret
aaa
clc
mov
mov
insb
lea
push
push
and
popf
sti
push
test
mov
cmp
xor
push
sbb
add
jnp
add
mov
insb
in
cmpsl
jmp
adc
movb
push
fbld
xor
andl
jne
movl
testb
xor
mov
inc
std
jne
lods
jmp
sub
rcrl
push
xor
add
jmp
pop
pop
add
mov
fwait
and
push
add
mov
fcomi
lods
add
push
mov
fadds
jp
jg
jnp
xor
xor
call
xor
loopne
out
into
std
out
push
jmp
lock
pusha
ljmpw
pushf
mov
or
push
and
aaa
lcall
push
xchg
les
jnp
jae
fs
or
push
call
into
adc
call
test
movl
inc
sbb
lods
sub
jmp
leave
out
loopne
mov
aaa
rcrl
outsb
enter
sti
sti
inc
add
subb
inc
cmp
ljmp
jno
loope
add
incl
out
inc
add
jge
add
jb
mov
mov
inc
adc
push
bswap
jo
sbb
add
mov
and
stos
roll
jne
mov
dec
cmpsl
inc
orb
aam
shl
outsb
das
mov
jbe
mov
or
dec
jne
out
dec
ret
scas
stos
mov
jmp
xchg
or
jmp
imul
into
or
repnz
push
add
adc
push
sub
mov
imul
cmp
push
push
xchg
or
and
dec
pop
inc
mov
mov
sbb
push
and
fcoml
sahf
sub
push
mov
mov
pop
pop
push
dec
mov
fimuls
cltd
dec
sbb
push
sti
popf
cmp
cmp
inc
jo
insb
ljmp
add
pusha
shll
sub
push
or
inc
ret
shl
clc
add
out
neg
imul
jmp
xor
mov
sbb
mov
je
jmp
add
ret
sub
mov
imul
stos
push
out
and
es
test
and
xchg
outsb
inc
imul
add
add
sarl
std
inc
lret
and
or
jne
pop
xor
gs
bound
xor
sbb
mov
lea
test
adc
or
fisttps
add
cmpl
xor
adc
rorb
add
movsl
sub
push
call
xor
pop
sub
sub
test
cld
sbb
sarl
hlt
ret
je
cmp
callw
or
pop
add
mov
lods
pushl
imul
inc
mov
cltd
and
iret
dec
not
das
adc
int3
ljmp
jnp
cmp
gs
adc
sbb
sub
or
pop
sbb
cwtl
daa
sbb
outsl
ljmp
jle
jg
sarl
push
imul
cld
loop
push
dec
mov
add
add
adc
jns
jle
jp
cmc
cmp
xor
and
push
ret
call
mulb
addr16
push
call
sbb
xchg
js
and
pop
enter
test
mov
lock
jle
test
jo
or
mov
pusha
sub
addb
pop
jmp
and
dec
jb
imul
inc
xor
test
inc
pushf
adc
pushf
sbb
mov
dec
leave
and
pop
mov
sbb
push
stos
adc
rorb
mov
push
scas
pop
cs
mov
js
cwtl
loopne
test
push
hlt
lahf
inc
movl
push
clc
pop
data16
imul
jo
jae
or
lock
dec
add
jg
dec
pop
cmp
xchg
mov
roll
inc
jae
inc
fidivrl
xor
mov
mov
pop
xchg
pop
arpl
in
test
sbb
imul
lods
fiadds
in
mov
mov
mov
pop
dec
dec
pushf
mov
mov
jge
xchg
xchg
xchg
cmp
ds
or
adcl
inc
push
inc
call
xor
fnstenv
not
fdivl
xchg
or
pop
jecxz
ret
dec
cmp
mov
jno
ss
inc
and
cmp
xor
add
nop
add
mov
nop
dec
pop
cmp
pop
and
jle
sbb
repnz
adc
jecxz
dec
sub
dec
mov
imul
cmp
xor
xchg
cmp
mov
sub
jge
push
fcoml
adcl
and
sbb
or
pushf
ja
push
jbe
gs
jo
movsb
mov
pushf
cmp
cmp
sub
sub
out
push
es
adc
fwait
andb
test
sbb
add
sbb
inc
insl
lcall
xchg
scas
mov
into
xorb
jb
enter
inc
pop
fcmovnu
adcb
pop
movl
fwait
mov
jo
inc
jne
cmp
or
lahf
xor
inc
adc
xchg
sbb
sbb
add
pop
mov
lds
mov
dec
jl
push
cli
and
add
sub
popa
pop
add
rorb
dec
loope
add
jbe
fimuls
fnstsw
movsb
xor
pop
xor
push
in
mov
or
and
add
sbb
or
xor
sbb
pop
or
adc
bound
ret
adc
test
add
adcb
adc
adc
mov
mov
push
ljmp
enter
or
mov
xchg
mov
orl
testb
rorl
pop
inc
mov
pop
aam
test
push
into
push
js
dec
data16
push
add
lret
fidivrl
ds
sub
movsb
xor
les
je
push
or
aam
sub
pusha
sbb
fsubl
add
insb
test
adc
push
xlat
or
imul
push
fldl
or
jecxz
rcl
fiadds
xchg
pop
jp
xchg
popf
pop
dec
enter
bnd
in
jno
xchg
mov
jp
cmp
pop
in
sbb
popa
jo
into
das
add
shr
pop
lahf
sbb
dec
add
sbb
cmp
sbb
adc
add
clc
cmc
mov
lock
cs
lahf
out
cmp
cmp
pusha
pop
pop
fld1
js
sbb
dec
sbb
add
gs
or
addr16
fwait
lret
mov
mov
pop
repnz
push
les
jns
mov
and
stc
mov
fmull
fstl
mov
add
adc
subb
lea
xor
adc
into
nop
ret
mov
cmp
aad
out
jbe
sahf
out
cmp
dec
or
add
lcall
pop
mov
jns
mov
mulb
xor
pop
add
dec
push
mov
mov
pop
and
jne
inc
shll
scas
in
hlt
fnstsw
cmpsb
sub
les
push
and
inc
popl
xorl
mov
cltd
jmp
inc
faddl
add
jl
and
push
inc
imull
jmp
test
and
jmp
xchg
cmp
and
ret
and
push
push
test
das
enter
shlb
movsb
lcall
and
ret
dec
les
push
pushf
aam
test
data16
xor
rorb
push
adc
or
nop
add
sbb
xchg
lret
lret
or
int3
js
pop
cs
cmp
push
or
xchg
das
sahf
sub
jne
mov
pop
mov
push
dec
push
add
jae
add
jp
xchg
data16
dec
inc
jmp
ret
jno
push
clc
pop
mov
cmp
mov
adc
loopne
pop
movsb
jno
mov
nop
cmp
or
pop
push
mov
in
jb
mov
dec
xchg
inc
inc
out
in
pop
ficoml
int3
sarb
jge
popf
in
lret
adc
dec
dec
jne
leave
in
jne
or
add
jb
mov
add
xlat
ret
add
mov
dec
ljmp
imull
popa
mov
and
inc
mov
push
sub
call
xor
call
or
adc
sub
ret
sahf
sbbl
jne
inc
sub
lret
mov
mov
and
std
bound
jb
jne
cmpb
pop
jb
ret
ja
cmp
inc
xor
and
mov
ret
cmpb
xchg
cmpsb
rorb
jmp
cmp
test
pop
xor
mov
andl
scas
scas
ret
jle
addr16
pop
ds
lock
loopne
popa
xchg
loopne
jb
pop
or
dec
addl
jecxz
clc
imul
es
lock
mov
jle
push
or
mov
add
cld
mov
iret
nop
cmc
push
inc
lea
js
xor
inc
cmpsl
jo
cmpsl
push
dec
push
pop
cld
sub
test
add
dec
jnp
push
xchg
scas
cmp
lea
stc
mov
jo
sbb
pop
push
jmp
add
sub
sahf
xchg
cmp
push
pop
sub
xlat
loopne
mov
out
cmpb
push
je
movzwl
lea
popa
xor
cmp
push
mov
int3
clc
jno
enter
xchg
mov
mov
or
or
dec
add
or
mov
out
xor
xchg
pop
pusha
dec
or
push
or
inc
mov
adc
adcl
test
hlt
into
nop
cmp
lcall
std
and
or
scas
mov
addr16
movsl
lock
cmp
icebp
push
jnp
orb
jno
leave
rolb
xchg
in
dec
pop
gs
add
ja
sub
adcb
mov
jno
mov
mov
add
or
mov
loop
xchg
pop
xchg
sbb
or
jo
imul
mov
mov
mov
pop
xor
or
ja
xchg
lea
outsb
adc
scas
jg
or
jg
adc
mov
inc
nop
pop
test
jge
push
inc
dec
xchg
jl
insl
sub
or
push
or
cld
scas
test
outsl
mov
daa
add
pop
repz
jo
inc
add
aam
push
jae
nop
aad
loope
ljmp
push
xchg
out
ret
sbb
jnp
inc
inc
or
mov
jnp
mov
push
fcoml
lret
adc
inc
enter
jnp
jle
adc
imul
xchg
jne
sub
addr16
popa
xor
sbb
scas
mov
bound
data16
inc
ja
loope
popa
aas
dec
cs
sbb
rcrb
das
in
push
pushf
jmp
push
mov
pop
and
orl
ret
lcall
or
dec
xor
push
sub
sbb
dec
xor
jmp
test
sbb
jg
outsl
notl
int3
cmp
xchg
ret
test
jne
ja
cmp
rcl
mov
dec
mov
sbb
inc
jae
adc
fisttps
into
xorl
lods
subb
add
pop
jmp
pusha
pop
in
addr16
mov
mov
dec
lahf
fstpt
sbb
roll
icebp
mov
je
push
push
mov
mov
in
popa
enter
nop
dec
ret
add
jmp
sub
sbb
pop
cli
lcall
int
and
into
adc
mov
inc
pop
rolb
mov
ret
or
adc
mov
sbb
adc
daa
pop
mov
sub
push
mov
clc
enter
mov
nop
mov
leave
push
xchg
fcmove
mov
sub
stc
cmpsl
xor
cmpsb
andb
mov
mov
orl
imul
lahf
iret
scas
lcall
and
adc
inc
mov
xor
xchg
and
and
and
mov
in
stos
jno
fidivrs
mov
xor
xor
xchg
inc
out
adc
pop
or
or
inc
sahf
out
pavgw
jle
pop
pop
outsb
enter
ret
mov
mov
xchg
xchg
xlat
jo
mov
push
shll
and
adc
out
popa
adc
iret
rcll
pop
add
mov
arpl
add
add
adc
pusha
outsl
inc
out
inc
scas
movsl
cmp
fimuls
mov
pop
fstp
mov
in
jno
dec
imul
jno
adc
mov
aaa
xchg
and
je
push
fnsave
jo
mov
int
xchg
mov
inc
aaa
add
push
enter
test
or
dec
xchg
inc
push
xchg
xchg
lret
ljmp
and
xchg
and
inc
jp
inc
movsl
loope
jecxz
in
jmp
rorl
int3
sbb
mov
movsb
push
dec
dec
subl
jne
xor
push
ja
sub
in
fdivs
and
dec
scas
xor
xchg
fnstsw
mov
sbb
inc
and
add
inc
clc
mov
sub
lods
dec
push
add
mov
sbbl
mov
les
xchg
xchg
xchg
mov
and
test
mov
mov
push
xchg
xchg
leave
jne
mov
dec
imul
in
cmp
push
stos
lods
lods
add
push
nop
lods
minps
js
or
test
hlt
adc
lods
pop
addr16
mov
int
imul
dec
nop
pop
mov
test
shlb
movl
cmovno
addl
push
scas
xor
clc
xor
pop
je
insl
or
cmp
push
jo
pop
and
rclb
bound
ljmp
xor
add
xor
or
leave
in
inc
pusha
mov
or
xorl
push
sbb
or
sub
or
jl
adc
sbb
or
iret
push
shlb
push
icebp
jmp
push
outsb
scas
shlb
repz
add
push
jg
mov
jnp
pop
jmp
inc
sbb
dec
fwait
xchg
or
or
or
cmpsb
in
ljmp
dec
pop
jb
scas
and
push
and
add
shlb
cltd
sub
inc
or
les
jecxz
dec
ds
shlb
test
imul
ret
pusha
mov
out
add
insl
mov
and
mov
mov
loopne
rcr
ret
rcr
inc
test
jb
out
in
xor
or
je
jmp
in
dec
popa
sbb
lret
sub
ret
adc
pusha
jb
and
cld
or
rcrl
lret
mov
loopne
or
push
outsl
mov
push
dec
mov
xor
mov
cmp
je
or
mov
pushf
pop
hlt
xor
movsb
and
jle
popa
add
sub
mov
sbb
mov
shll
fucomip
stos
bound
inc
cmp
push
sbb
ret
or
or
std
das
nop
or
mov
test
jne
cmp
push
inc
pop
inc
shll
mov
movsl
add
or
sub
or
lods
inc
add
push
push
cmp
or
mov
pop
adc
mov
fcomps
lret
enter
sbb
stc
or
jb
addr16
mov
push
dec
or
rcll
mov
stos
add
fs
add
or
jle
xchg
stos
add
jmp
scas
jl
lds
xor
shll
mov
orb
pop
xorb
js
add
out
sbb
stos
cmp
je
cmp
and
cmp
and
push
mov
mov
inc
mov
add
rcll
lock
push
sbb
add
or
ret
mov
out
push
inc
shlb
add
xorb
add
sbbl
dec
pusha
loop
add
push
test
aaa
call
cmp
ljmp
stc
mov
fs
mov
cmpl
pop
xorl
xchg
test
xchg
xchg
inc
scas
or
dec
cmp
mov
xchg
cmp
xchg
push
push
cmp
mov
pusha
jmp
fs
ror
xor
mov
rcll
pop
or
add
shrb
iret
add
ja
xor
inc
xchg
mov
push
sbb
and
dec
or
mov
add
inc
or
push
cmp
add
popa
sti
ret
mov
push
clc
cmp
sub
outsb
inc
pop
hlt
and
test
push
xchg
inc
push
shrb
lock
adc
lods
inc
mov
adc
stos
gs
jmp
fwait
shll
js
xchg
mov
pusha
dec
inc
call
mov
dec
lea
pop
hlt
vandnps
and
mov
xor
dec
out
dec
pop
mov
jne
add
in
int3
mov
or
out
inc
or
sbbl
subl
and
data16
rolb
add
xor
adc
adc
and
xchg
lods
outsb
incb
xor
adc
mov
ret
int3
xor
cld
enter
out
mov
push
or
jne
dec
cmpsb
rorb
jge
jae
xchg
loopne
mov
push
fldl
sub
fidivrl
movsl
fwait
mov
adc
jmp
add
js,pt
inc
cs
je
cmp
cmc
push
dec
push
stos
cs
or
int
mov
js
and
cmp
push
cs
inc
in
pop
pop
jle
in
pop
xorl
jmp
aam
add
sbb
mov
jmp
or
push
mov
pop
std
cmp
cli
xor
jo
ret
dec
in
sub
pop
and
dec
sub
sub
fs
shlb
fcmovnbe
pop
mov
xor
mov
mov
and
or
mov
clc
int3
pop
xchg
loopne
mov
push
scas
orb
dec
dec
or
and
jae
lea
add
add
lahf
dec
add
xor
dec
out
pop
das
adc
orl
andl
pop
mov
mov
sub
xchg
rolb
jbe
add
loopne
push
push
je
cltd
jp
call
clc
push
sub
lea
push
fldcw
pushf
testl
mov
add
mov
push
cmp
add
and
decl
push
pop
push
int
daa
add
fadd
mov
nop
sbb
pusha
shlb
dec
or
push
popa
lock
movw
mov
adc
mov
and
xor
dec
out
jbe
inc
inc
cld
add
int
mov
ljmp
inc
call
push
add
push
ret
mov
out
frstor
cmp
fs
push
or
aas
or
add
add
lea
daa
pop
or
andb
push
xor
aas
cmp
aas
js
sahf
or
rorb
and
into
sub
shll
mov
xor
lds
sub
xchg
jle
dec
dec
inc
loope
imul
lea
or
mov
popa
cmp
pop
hlt
or
sbb
sar
shl
add
xor
or
mov
nop
mov
in
cli
push
add
inc
jo
stos
mov
add
mov
xlat
push
push
sbb
test
fldl
sub
andb
sbb
negb
or
das
sbb
loopne
inc
push
icebp
inc
sub
push
fcmovnbe
add
mov
jne
sahf
test
inc
jmp
call
fchs
push
daa
je
push
mov
movl
sbb
add
loop
inc
add
jmp
lods
inc
add
cmp
pop
sub
mov
or
add
push
fwait
xchg
dec
sub
aam
nop
nop
adc
push
jno
mov
xchg
dec
out
mov
push
push
jmp
add
div
shlb
push
fistpll
dec
sub
shll
dec
adcl
mov
enter
movsl
int
xchg
jbe
add
test
sbb
adc
bound
lock
not
push
lret
cmp
lea
aad
subb
test
jb
jae
mov
andl
inc
mov
cmp
aas
jb
push
sbb
mov
cmp
rcll
testl
or
sub
lea
daa
xchg
or
leave
pop
mov
in
out
add
inc
push
push
rol
into
mov
or
xor
test
das
inc
xchg
xchg
das
aaa
sbb
mov
push
jb
pop
sbb
jnp
addr16
addr16
add
jnp
fs
icebp
incb
cmp
ss
pop
daa
jg
xor
cmp
jmp
mov
icebp
int
inc
or
mov
pusha
adc
jle
and
scas
bnd
push
pop
adc
lret
es
in
xor
xor
cwtl
in
cmp
sbb
ljmp
jbe
mov
inc
test
add
aas
fnclex
xorl
push
cltd
dec
add
cmp
add
fscale
ja
push
js
addl
mov
or
data16
leave
push
clc
add
and
stc
push
cmp
add
push
add
daa
pop
mov
inc
rolb
sbb
out
lock
and
and
push
lods
pop
push
dec
push
js
lea
or
jb
mov
call
and
dec
adc
push
jnp
xor
out
cmpl
inc
and
jne
aaa
add
xchg
enter
and
add
movsb
pop
sub
add
and
sarl
sbb
push
xchg
xchg
fnsave
mov
jge
inc
push
sbb
cmp
jne
inc
int
sarb
js
mov
adc
idivb
loop
or
cmp
lods
cld
sti
scas
push
jno
std
mov
and
hlt
jmp
push
inc
subl
hlt
out
loopne,pn
ja
out
fcmovnbe
loopne
push
xor
cmp
add
inc
jnp
jmp
das
or
cmp
es
inc
mov
jno
jno
mov
scas
mov
sub
dec
ja
adc
addl
movl
mov
sub
out
imul
shlb
jb
pusha
lods
and
or
push
loope
push
add
dec
mov
add
mov
add
outsb
adc
pop
lea
add
in
call
aad
mov
push
dec
inc
xor
mov
and
fmul
mov
enter
add
jb
mov
pop
xchg
fdivs
sbb
and
sub
sarb
pop
push
ss
rolb
and
push
or
std
jnp
fcoms
or
lock
mull
out
int3
jnp
lsl
jmp
push
pop
push
push
inc
shr
rcr
and
push
cld
shr
rcr
or
mov
repz
dec
fucomip
andl
mul
pop
jb
cmp
or
pusha
out
out
jb
cmp
or
xor
and
test
or
ficoml
mov
lret
iret
pop
xchg
push
dec
sub
insl
inc
and
sbb
push
mov
jne
adc
mov
adc
pop
jbe
add
cmpl
add
shrb
fldenv
sub
sbb
mov
cwtl
jbe
out
or
xchg
or
inc
addb
cmpsb
dec
movl
bound
add
or
cmp
inc
cmp
insl
dec
in
add
push
mov
add
lret
negb
adc
jge
inc
jp
mov
mov
mov
push
movsb
push
lock
dec
loopne
sbb
jne
addl
push
sub
cmp
and
inc
pusha
or
jmp
push
push
sbb
and
insl
adc
push
clc
sbb
daa
lret
jmp
dec
and
test
dec
lret
dec
or
and
and
add
rolb
pop
adc
xor
loope
and
jo
add
fcompl
sub
inc
add
xchg
cld
mov
jne
sbb
popf
sub
mov
je
xchg
arpl
pop
inc
cmp
mov
and
pop
mov
inc
mov
cmp
lcall
in
roll
push
repnz
inc
decb
dec
inc
pop
sbbb
pop
ret
adc
daa
loopne
push
into
add
hlt
pop
push
pusha
inc
or
clc
mov
mov
movsl
or
lock
push
jmp
aam
sahf
xchg
push
std
shl
push
daa
or
add
testb
and
pop
lods
fmuls
fwait
loope
dec
insl
lock
clc
pop
sbb
decl
mov
adc
clc
mov
push
andl
adc
jo
adc
push
mov
lock
mov
mov
jg
mov
jmp
mov
popa
push
sub
mov
add
push
jb
fisubs
mov
and
cmp
pusha
inc
xor
add
rolb
push
or
repnz
cmp
jno
mov
cmp
ret
scas
int3
sub
mov
fwait
mov
fsubr
push
cmovns
mov
ds
loope
cmp
jne
and
mov
jmp
adc
outsl
push
xchg
outsl
jmp
jbe
jae
adc
jo
push
cmp
or
xchg
sub
or
mov
adc
in
cmp
inc
ret
mov
sbb
inc
inc
fidivl
fucomp
daa
sbb
mov
movb
push
or
inc
sbb
lods
pop
imul
jno
mov
or
jl
cmp
jg
inc
jmp
cli
fdivs
inc
pop
lds
jecxz
notb
add
push
inc
mov
jge
aas
sbb
cmp
inc
enter
in
test
sbb
or
js
loop
adc
je
mov
pusha
pop
fadds
lock
xor
pop
je
pop
icebp
xor
loop
inc
fs
dec
adc
mov
std
insb
jne
push
adc
and
add
sbb
push
mov
stos
int3
addb
jle
lods
pop
sbb
ljmp
test
nop
das
fbstp
push
dec
adc
push
and
stc
jl
pusha
lods
push
dec
and
push
jg
mov
inc
or
jbe
jle
xor
std
out
es
jg
jg
jo
mov
std
pop
and
jne
repnz
in
in
enter
pop
ffreep
lea
adc
js
sbb
test
shll
shll
lock
xor
dec
sub
xchg
or
shl
inc
inc
push
negl
ret
mov
test
shrb
lret
ret
mov
shr
or
pusha
test
ret
insl
jne
and
xchg
inc
rol
mov
mov
pop
test
test
pop
movsb
mov
stos
mov
cwtl
and
mov
and
mov
inc
adc
scas
ret
mov
sub
in
and
lds
shr
push
pop
inc
mov
ret
das
in
jo
add
cli
and
shl
sbb
lock
or
fnstsw
fistl
shl
jl
js
jnp
pop
daa
cmpb
cmpb
adc
jno
sub
inc
mov
xchg
and
jecxz
sbb
pop
ret
pop
rcll
mov
mov
aaa
int3
mov
sub
je
adc
jmp
orl
add
call
repz
pop
cmp
or
mov
pop
in
rcl
push
pop
jne
lcall
mov
subb
add
lea
and
sahf
cmp
inc
clc
xor
les
orb
sahf
addr16
and
or
mov
and
or
xor
mov
push
fisubrl
push
je
xchg
cli
adc
lea
lea
or
dec
imul
pop
and
mov
jmp
fs
arpl
mov
jle
add
cmc
mov
xor
xorl
enter
dec
add
imul
adc
adc
pop
mov
cld
loopne
mov
sbb
in
out
dec
and
pushl
add
jno
push
add
sbb
and
push
mov
mov
jp
sub
sbb
rolb
out
loopne
push
inc
cmp
ds
mov
push
push
push
ds
or
push
xor
insb
enter
pop
loope
adc
adc
or
mov
jl
fs
and
adc
sarl
rclb
sbb
sbb
fs
dec
je
test
daa
jl
outsb
sub
jnp
hlt
adc
xor
pop
push
sbb
aas
test
add
ds
add
jbe
icebp
xchg
adc
xor
mov
pop
fcmovbe
scas
je
iret
xchg
fisubl
out
data16
es
pusha
xchg
ss
pop
pop
mov
je
xorb
rcrl
or
sub
push
mov
sub
pusha
push
test
jle
mov
fs
xor
loopne
mov
jmp
addb
pop
jo
jl
loope
add
lret
ret
leave
cs
das
xor
sbb
xor
pop
icebp
arpl
gs
adc
add
js
inc
sub
or
cmp
dec
or
gs
into
lods
adcb
ss
lds
sbb
jge
mov
add
adc
push
lds
inc
add
inc
mov
test
das
flds
xchg
adc
enter
movsb
push
push
call
inc
jle
clc
sysexit
ss
and
ljmp
les
xor
leave
cmp
push
inc
adc
cmp
pop
mov
shll
and
add
pop
or
add
mov
sub
inc
adc
or
pop
mov
inc
mov
push
push
nop
imul
fcomps
shll
mov
cmp
loop
dec
and
shrb
push
lods
mov
cmp
sti
add
or
push
mov
cs
sbb
ja
test
cs
iret
and
dec
and
add
cmpsb
mov
mov
xchg
test
add
add
mov
sub
or
sub
jg
xchg
and
rorb
notb
jmp
mov
stos
popf
adc
adc
shlb
dec
and
outsl
mov
mov
fs
test
jmp
dec
push
insb
lods
adc
in
jbe
sbbl
mov
cld
int3
jg
mov
lock
jo
adc
sbb
push
mov
ret
ss
adc
clc
pop
jge
push
sahf
andl
mov
nop
fisubs
mov
dec
dec
jae
imul
sbb
pop
or
push
jmp
loopne
or
and
outsb
mov
rclb
bound
repnz
sub
mov
bound
int3
pop
mov
and
lahf
inc
addb
sub
cmp
mov
insb
movsl
jbe
sub
mov
lods
inc
stos
loopne
je
mov
dec
faddl
insb
push
jge
inc
nop
mov
mov
loop
cld
cmp
jbe
testl
cmpl
pop
orb
or
xchg
call
mov
data16
repnz
test
lea
cmp
mov
push
jg
cmc
jecxz
push
sbb
pop
push
push
inc
jmp
cmp
xor
xor
mov
icebp
inc
loop
dec
sahf
hlt
clc
push
ret
jne
out
add
cmc
push
adc
fcomps
cwtl
jge
add
mov
pop
push
sbb
pusha
insb
mov
mov
mov
xor
sub
jmp
push
jp
dec
call
in
pop
jle
xor
adc
push
push
add
push
loopne
adc
cld
test
nop
nop
mov
ljmp
lods
sarl
add
mov
mov
je
lock
pushf
imul
add
mov
push
hlt
jge
movsl
add
test
lea
enter
xor
call
or
scas
sti
outsl
xor
and
and
or
and
ficoml
andl
pop
lret
sti
mov
push
or
mov
sub
ja
mov
and
sub
xchg
inc
testl
adc
iret
push
les
xchg
into
dec
inc
jne
inc
or
cmp
inc
add
push
scas
addr16
and
call
test
or
xchg
test
push
pushf
fstpt
lea
lcall
or
adc
lock
or
ret
ljmp
bnd
pop
pop
add
gs
inc
ja
mov
incw
cmpl
insl
mov
push
xor
jg
aam
push
test
jg
add
dec
cmp
jle
or
xor
cmp
mov
test
shll
shr
mov
add
or
shr
and
or
or
push
clc
pop
gs
mov
dec
sub
inc
mov
imull
fists
je
orl
cmpsb
push
out
or
fcom
insl
fsubl
clc
mov
mov
mov
jne
outsb
mov
mov
mov
mov
aas
mov
ja
push
cmp
dec
test
dec
jbe
mov
jo
lock
rcr
fiaddl
mov
testl
jmp
out
jmp
or
inc
mov
in
lods
mov
test
cmp
aam
nop
mov
push
push
cmp
mov
loope
jl
loopne
xor
dec
int3
int3
jmp
out
hlt
push
nop
daa
mov
sub
into
jmp
lods
mov
shr
add
jae
jno
mov
test
les
push
xor
sbb
movsl
mov
push
lret
das
sub
test
sbb
push
sahf
sbb
movups
fidivs
les
mov
inc
mov
adc
push
movsb
inc
in
xchg
add
lods
pop
movsl
fiaddl
lahf
out
mov
jae
lock
cmp
repz
dec
lds
loop
push
mov
dec
jle
popa
daa
rcll
incb
jne
testb
adc
sbb
mov
fiadds
subb
imul
or
sub
jg
lret
sbb
dec
push
mov
cmp
repnz
push
add
pusha
rcrb
pusha
push
adc
nop
push
das
jl
push
cmp
pop
in
mov
pop
sbb
out
mov
sbb
sub
aas
and
mov
cmp
or
rorl
in
jns
sbb
push
bound
xchg
ret
add
imul
mov
sbb
push
fscale
inc
xor
imulb
es
insl
imul
dec
ret
mov
jecxz
rolb
adc
mov
pop
lea
push
pop
pop
rolb
jbe
mov
sbb
push
adc
mov
mov
call
sbb
inc
jne
loop,pt
push
loop
jg
pop
je
subl
out
sub
inc
adc
and
aas
jg
and
inc
inc
inc
jo
mov
rcr
push
test
shlb
mov
jo
testb
adc
imulb
cmpsb
push
xor
xchg
add
xor
and
xchg
loopne
aam
or
inc
cli
pop
pop
ret
in
addb
dec
push
mov
bound
add
cli
shr
add
sub
sbb
and
add
dec
adc
inc
and
dec
lods
mov
inc
lods
cmovno
pop
jne
rolb
jmp
repz
push
outsl
cld
push
or
sub
mov
jb
adc
mov
iret
lea
push
andb
mov
leave
sub
ret
inc
cmp
xchg
and
movsb
mov
mov
mov
lahf
rorb
xchg
adc
fstps
ret
nop
mov
scas
push
shll
pop
bound
mov
sbb
jmp
sbb
pop
jp
push
sub
pop
jno
enter
push
sbb
in
cmp
test
repz
test
jmp
mov
popl
pop
cli
or
push
lea
add
dec
cmp
leave
sar
pop
cmpsb
mov
aas
or
add
pop
clc
dec
adc
sbb
mov
xor
stos
inc
pop
scas
test
xor
sub
loope
push
and
xor
xor
dec
pop
ret
or
inc
cltd
insb
mov
push
subl
push
inc
jmp
xor
js
ljmp
cmp
push
cmp
mov
push
js
push
adcb
jns
dec
pushf
pushw
push
sub
xchg
enter
ficomps
mov
add
mov
loop
sub
mov
xor
pushf
sub
rorl
cmp
xor
push
hlt
mov
andl
add
add
fs
pop
and
sbb
fwait
pop
sti
out
push
ret
lret
add
cld
cmp
fsubs
movsl
test
fcomip
fdivs
mov
call
jmp
bound
inc
outsb
pop
ja
push
dec
hlt
cmp
add
adc
rorb
call
dec
xchg
push
push
data16
fimull
add
or
sarl
fs
add
or
ja
mov
pcmpgtb
mov
add
scas
or
or
pop
divl
add
mov
sbb
add
clc
add
mov
dec
call
shl
rcl
sarl
add
pop
mov
imul
daa
push
adc
adcl
add
adc
dec
je
ret
push
negb
mulps
addl
pop
hlt
jb
mov
adc
push
sysenter
sbb
insl
push
sbb
dec
xor
cmp
cmp
stos
mov
ds
test
shll
and
lret
xchg
adc
mov
cmp
mov
mov
cli
or
shufps
scas
mov
les
adc
aad
pop
pushf
sub
sub
loop
lea
dec
add
and
cmp
ret
sub
add
insb
jmp
add
xor
sub
andl
dec
jae
in
pop
jns
or
fiadds
into
jg
sbb
bound
xchg
mov
pop
data16
gs
jle
add
test
sub
and
mov
inc
dec
leave
imul
pusha
aad
mov
movsl
jne
jb
or
mov
stc
sbb
ret
jge
mov
or
xor
shlb
cmp
test
shl
mov
or
push
fs
or
push
xchg
push
pop
call
add
dec
push
mov
pop
cwtl
test
aaa
mov
add
jmp
inc
xchg
loope
dec
mov
pop
mov
adc
in
dec
outsl
sbb
ja
outsb
push
jae
adc
push
ja
add
addr16
sub
lcall
push
mov
negb
add
mulb
mov
add
js
xor
dec
push
cmp
aas
and
popf
jge
leave
sbb
or
jmp
dec
sub
adc
movsb
inc
mov
push
or
movsb
sub
pop
test
fdivrl
insb
loopne
cmp
inc
les
or
sbb
or
sbb
movsb
icebp
jbe
jmp
sbb
xor
mov
jno
cltd
adc
add
mov
lds
mov
test
adc
xchg
in
mov
push
lcall
dec
inc
ret
xchg
cmp
add
push
xchg
mov
cmp
and
mov
mov
pop
pushf
push
pop
push
out
movsl
or
fcompl
pop
inc
cld
das
and
ret
mov
and
cmp
jae
fistpl
xchg
inc
adc
inc
and
loop
mov
outsb
les
pop
xor
push
adc
dec
mov
outsl
test
cmp
mov
stos
sbb
push
jmp
test
push
jge
inc
insb
lahf
je
inc
cmp
shrb
add
or
in
js
pop
sbb
outsb
push
ja
dec
and
pushl
std
mov
pop
cmp
sub
pop
adc
jp
enter
loope
dec
add
inc
push
or
adc
and
cmp
xor
push
mov
cmp
sub
dec
fs
cli
push
dec
out
roll
inc
jmp
xor
test
jge
mov
or
add
add
mov
lods
xchg
ret
imul
push
movsl
pop
pop
icebp
fisttps
adc
and
pop
add
sub
sub
mov
push
or
sbb
sarl
sub
push
bound
add
sub
pop
add
jmp
mov
mov
pop
lock
dec
les
es
cmc
dec
adc
jbe
push
jo
orl
jo
cmpsl
testl
push
jo
psrlq
mov
cwtl
in
shlb
fsubrl
jle
clc
mov
push
jecxz
or
mov
data16
push
pop
cwtl
mov
outsb
push
jne
push
aas
out
arpl
jge
int
xor
pop
aas
loopne
stos
xorb
push
add
xor
and
daa
pusha
cmp
shlb
xlat
sub
adc
insl
push
std
adc
mov
ret
sbb
sub
adc
push
ret
push
pcmpeqw
cmp
lcall
or
jno
addb
or
lea
pop
add
pop
jns
cwtl
fildl
ss
mov
js
pop
mov
push
das
ds
cmp
cmp
add
dec
ss
imul
add
loope
bound
mov
in
imul
dec
or
mov
iret
xchg
sti
mov
xor
andl
js
loope
cmp
jg
cmpb
pop
sub
ss
or
jne
rol
les
xor
mov
push
sbb
popa
adc
ficompl
xchg
adc
lods
fcmovbe
std
dec
les
jb
pcmpeqb
adc
dec
je
out
fsubrl
push
jae
mov
jmp
mov
je
jl
mov
cwtl
xchg
mov
pop
loop
inc
push
jo
loopne
fst
jb
fstpt
sbb
pop
lods
push
in
add
outsl
xchg
sahf
cld
add
mov
adc
test
dec
pusha
mov
mov
inc
pusha
jne,pn
sbb
ja
rol
inc
mov
sahf
cmpsb
adc
adc
add
mov
mov
aaa
stos
sub
cli
fsubr
fstl
call
jecxz
xchg
add
pop
xchg
loopne
jmp
cwtl
cmp
or
adcb
imul
shlb
movl
and
movl
fmulp
inc
cmp
roll
xchg
xor
dec
sbb
insb
xchg
inc
push
mov
xorl
bound
cltd
lea
mov
jno
cmp
push
adc
js
or
xchg
stc
jb
sbb
add
inc
or
sub
call
or
push
add
negb
add
or
out
and
pop
inc
sbb
cmp
ret
adc
ja
stc
xor
fcoml
daa
push
xor
notb
in
or
inc
and
xchg
mov
pop
add
or
nop
orl
shl
dec
nop
or
je
lcall
push
subl
into
jo
les
lods
lds
sbb
nop
adc
mov
adc
clc
inc
lea
mov
rcl
mov
xor
add
pop
ret
mov
push
mov
je
mov
pop
insb
xchg
push
pop
mov
mov
neg
push
das
or
aaa
movsl
mov
outsl
adc
cmp
imul
jp
or
and
dec
test
push
cwtl
hlt
xor
cld
add
adc
sub
dec
xor
pop
cmp
adc
in
mov
mov
xor
jo
notb
daa
out
adc
dec
mov
add
push
adc
mov
fisttpll
sbb
hlt
stos
mov
xor
sub
iret
or
ret
or
ja
jle
cmp
lcall
stos
test
and
outsl
pusha
lods
data16
jb
pop
jecxz
arpl
cmp
sbb
mov
jg
cmp
ljmp
push
jecxz
call
es
and
repnz
dec
dec
jno
push
in
mov
inc
push
and
sbb
adc
stos
fs
jmp
dec
movsl
out
mov
mov
sbb
sarl
cmp
imul
in
sbb
sbb
sbb
in
in
sub
xor
loopne
in
cmp
in
movsb
int
inc
and
inc
cmovs
leave
leave
leave
dec
push
push
pop
add
pop
pusha
fs
insb
jo
js
sbbb
jl
sbb
test
fs
xchg
cwtl
es
fs
pushf
mov
repnz
mov
leave
and
int3
and
es
sarb
xor
fsub
in
dec
xor
and
aam
xor
and
hlt
clc
cld
jo
inc
dec
add
add
add
insl
fiaddl
or
adc
dec
sbb
and
dec
xor
sub
dec
xor
xor
cmp
dec
shll
inc
dec
es
jbe
dec
mov
cltd
fs
dec
pop
pop
pusha
cmp
or
sbb
je
or
je
faddl
add
rorb
or
mov
mov
xor
and
mov
lahf
xchg
and
lcall
dec
dec
xor
sbb
sbb
and
and
cmp
add
cli
lods
rorb
inc
mov
mov
test
dec
mov
pusha
and
mov
pop
adc
mov
sub
rorl
push
ret
fbld
or
xor
fdivr
rorl
inc
mov
fcom
sub
push
or
xor
leave
mov
add
lock
inc
in
xchg
jmp
and
ret
push
test
and
enter
add
or
xor
into
stos
add
lods
shlb
divb
loope
xor
and
fildl
add
jmp
gs
add
cli
rcr
push
test
js
lock
jns
test
adc
dec
xchg
mov
or
cmp
hlt
mov
icebp
and
je
add
or
ret
or
cltd
adc
leave
add
adc
lock
and
mov
popf
mov
add
jl
and
jecxz
sbb
mov
or
adc
lea
and
dec
jp
or
aaa
jge
je
inc
pop
movsb
es
xchg
fnstcw
jge
add
fstps
aas
pusha
mov
pusha
loope
pop
sub
xor
add
jecxz
xchg
push
sahf
adc
fnstsw
pusha
mov
fldl
cmp
dec
xchg
pop
roll
testb
sub
jne
adc
sti
add
and
pop
jns
out
test
fisttps
ret
xor
lock
inc
das
xchg
or
sub
call
and
or
jb
sbbb
and
imulb
push
orb
call
pop
sbb
lcall
and
or
fwait
adc
jnp
inc
flds
fstps
jmp
frstor
pop
test
outsl
loopne
jne
in
inc
mov
hlt
adc
orb
test
and
push
pop
sub
shl
fldl
cmp
lea
push
and
xchg
sti
test
js
adc
or
push
inc
hlt
pop
dec
ror
enter
sbb
out
movb
pushf
sbb
mov
xchg
lods
sbb
test
jmp
sub
sub
jmp
sub
inc
dec
push
jp
push
or
psubusw
xchg
out
add
adc
xor
scas
mov
rclb
mov
inc
testb
icebp
or
inc
and
test
mov
cli
cli
lret
jmp
or
add
fadds
push
scas
in
and
in
inc
test
cli
repnz
add
fwait
ljmp
cld
fs
mov
test
jle
ret
cli
shrl
push
pop
orl
scas
dec
test
loopne
or
push
push
pop
jmp
pop
push
test
adc
cmpsb
roll
adc
mov
inc
outsb
mov
movsb
ja
xor
jle
push
xor
sub
add
or
or
cmpsb
lret
popl
xchg
mov
adc
repnz
test
add
lea
add
loopne
mov
call
pop
cmp
je
negb
jl
jge
imul
mov
sbb
hlt
adc
mov
adc
pop
pushf
sub
mov
shlb
and
pop
mov
or
pop
xor
jmp
iretw
jp
jno
aad
inc
ficoms
mov
push
add
js
movsb
add
pusha
imul
ss
ja
jo
inc
sub
scas
adc
mov
and
lock
dec
pop
ds
push
mov
add
xor
jae
rcr
mov
fcomi
cwtl
mov
int
xor
jbe
push
das
adc
inc
addr16
dec
pushf
mov
test
mov
adc
mov
mov
sub
rolb
data16
je
insl
rorb
and
rolb
loopne
lret
std
loope
es
sub
xor
pop
int
xchg
shufps
mov
pop
lret
lock
or
sti
js
mov
imul
decb
mov
inc
sbb
and
pop
add
xorb
adc
sbb
test
leave
pusha
or
cmc
or
out
fld
fucomp
sub
lock
fstps
out
mov
cmc
cmpsb
inc
push
xor
test
lods
push
dec
pop
and
mov
push
das
int
sub
shll
push
or
fwait
cmpsb
in
xchg
or
push
or
push
out
lods
pop
les
push
push
sti
inc
push
or
push
and
mov
jmp
sbb
sub
adc
inc
push
push
push
adc
xlat
fidivl
xor
aas
pop
xchg
xchg
stc
mov
fnstsw
lgs
or
mov
loop
mov
fld
and
xchg
xor
fdivrl
mov
xor
or
insl
or
push
mov
shrb
js
fldt
sbbb
fwait
test
fsubs
es
ficompl
fwait
sbb
and
jle
inc
repnz
mov
lods
ret
fldpi
xor
xor
rcll
add
pushf
je
lret
dec
sbb
xorb
push
cmp
xsaveopt
xchg
insl
test
mov
mov
cmp
test
or
mov
xchg
out
jmp
and
and
loopne
jns
or
push
jg
aad
or
addb
dec
dec
xor
fwait
jg
mov
enter
inc
js
test
lock
mov
xchg
push
jbe
mov
push
mov
decl
insl
sahf
pop
lret
push
ja
inc
mov
test
sbbl
push
fwait
pushf
add
lcall
popf
xchg
repz
add
subb
push
jo
cltd
sarb
fwait
mov
and
nop
lret
je
sub
mov
daa
pop
cmp
outsl
mov
rorl
inc
orl
mov
fildll
repnz
or
or
loope
nop
push
inc
cmpsb
push
or
inc
add
loope
rcrl
adc
sti
das
and
xorb
fisubl
scas
push
test
push
or
and
gs
add
pop
cli
sub
inc
test
xlat
roll
daa
testb
test
xor
out
jbe
jl
xchg
std
aam
outsl
xlat
lods
lock
stos
jp
pop
pop
xor
movsl
dec
jp
in
sub
call
cmp
or
pop
add
jp
ljmp
adc
scas
inc
outsl
and
or
inc
lea
pop
xor
lret
arpl
aaa
sbb
mov
xchg
test
lret
loop
rolb
cmpl
mov
repz
std
jle
adc
pop
pop
and
mov
out
insb
lock
mov
inc
adc
iret
mov
mov
mov
mov
stos
and
push
loopne
cmp
jb
cmp
or
add
dec
cmp
xor
jmp
sub
jae
or
inc
dec
testl
adc
cs
or
sarb
push
and
adc
enter
or
je
inc
mov
addl
or
inc
frstor
lock
inc
cld
push
mov
add
or
xor
js
mov
pop
roll
cmp
jg
push
inc
loopne
mov
shl
sub
sub
test
push
rorb
push
into
and
pop
aaa
xor
push
or
and
aam
mov
mov
stos
push
jl
inc
and
jno
out
pop
pop
sub
jne
xchg
je
lahf
fs
pop
dec
jns
mov
jb
lea
push
rorb
inc
lods
sbb
and
test
lea
push
push
lods
rol
out
pusha
push
aas
dec
or
inc
rcrl
dec
xor
mov
jno
lahf
add
mov
lods
fsubr
pop
sub
push
jb
push
repnz
arpl
aam
mov
dec
jns
shlb
cmpsl
bound
cmc
hlt
push
aas
mov
sub
lea
push
xor
inc
xor
fldl
dec
mov
movsb
shrl
cmp
aam
cmp
adc
jl
push
ss
shll
adc
jb
subb
loopne
jne
daa
andl
or
out
pop
or
nop
jl
stos
iret
and
outsl
mov
or
sub
push
in
xchg
jge
and
rcl
xchg
push
fimull
inc
dec
lods
shl
test
ret
pop
lret
or
fidivl
les
or
or
add
add
cmp
cmpsb
cmpsb
stos
sbb
dec
jmp
nop
lock
mov
shl
and
mov
rolb
cmpsb
mov
add
add
inc
mov
rolb
push
dec
data16
inc
mov
add
inc
sbb
mov
inc
dec
dec
scas
lret
push
pop
jne
add
dec
adc
movsb
test
testl
mov
mov
xchg
js
add
inc
inc
mov
inc
inc
push
lods
jge
inc
mov
mov
rorl
push
movsb
lods
fadd
repz
add
xorl
pop
xchg
xchg
xchg
adc
fidivrl
lret
cs
or
ss
cmp
je
incl
xor
mov
dec
cmpb
je
mov
jg
mov
cmp
pop
jne
dec
mov
inc
inc
mov
cltd
mov
mov
and
adc
fistpll
xchg
xor
add
dec
and
sub
fdivr
adc
aam
rclb
sbb
cs
jmp
xor
mov
xor
or
add
test
adc
mov
outsb
inc
push
add
adc
jno
fcoms
add
and
push
test
push
sub
jne
xlat
imul
stos
hlt
sub
or
add
mov
push
cmp
ret
push
fstl
or
je
clc
rorb
cmp
sbb
sub
test
add
mov
popf
loopne
pop
clc
outsb
mov
repz
push
cmp
sub
jle
lds
xchg
adc
add
sbb
xor
lock
ret
inc
inc
sub
add
adc
push
mov
push
movsb
jno
or
hlt
mov
adc
pusha
inc
ljmp
dec
dec
jns
neg
movb
xchg
mov
jbe
jl
cltd
push
test
xchg
dec
adc
and
or
add
xor
add
add
ja
xor
fs
push
xorb
rclb
and
cmp
add
sbb
cltd
xchg
or
xorb
sbbb
ret
dec
imul
add
mov
pusha
ret
mov
test
lahf
iret
ret
jmp
add
xchg
lret
or
insb
xchg
xchg
sub
adc
lds
sbb
adc
fsts
mov
mov
dec
fsubrl
sbb
or
sbb
aam
rcr
adc
push
jmp
inc
and
dec
fmuls
pop
js
cmp
push
xchg
cmp
adcb
pop
adc
adc
push
mov
in
and
call
pop
xchg
or
mov
rorl
or
cmp
dec
shlb
inc
xor
xchg
sahf
xchg
clc
push
lahf
ret
cld
push
and
xchg
into
sub
call
adc
imul
xchg
incb
pop
or
ret
dec
pushf
faddl
dec
lock
pop
ret
add
or
fiadds
cmp
sbb
push
fdiv
aas
test
enter
js
subb
fcompl
mov
push
js
sbb
das
sub
leave
and
add
insb
movb
std
or
xchg
iret
and
mov
pushf
inc
popf
neg
sbb
movsb
mov
and
or
das
adc
jg
ret
inc
sbbb
shll
add
xor
xor
dec
inc
popf
sub
add
cmp
jnp
jmp
inc
xor
mov
jb
inc
loope
push
add
sbb
cwtl
fisubs
insl
mov
mov
sub
jg
hlt
nop
rcll
or
adc
push
and
lods
mov
sbb
rol
fsubs
cmp
xor
jbe
push
cld
movsl
mov
or
shrd
sbb
xor
dec
cmp
mov
scas
sbb
clc
arpl
mov
jmp
mov
and
xor
out
imul
sub
inc
aaa
pop
cmp
shll
incb
push
adc
xor
jp
xor
cmc
mov
sub
xor
xchg
jo
mov
and
jne
shrl
mov
sarl
jg
sbb
xor
mov
jne
jmp
adc
fimull
push
icebp
cmp
jl
pop
push
shll
fistps
push
push
sbb
mov
push
add
in
lock
sarl
std
test
jl
jg
mov
js
dec
inc
dec
pop
or
dec
sahf
sbb
xlat
lcall
cmp
adc
mov
shrl
in
ja
xchg
icebp
push
sbb
or
es
sub
jbe
inc
adc
dec
cmc
movmskps
sbb
movw
push
inc
jp
fidivrl
shlb
add
loopne
push
sbb
mov
jmp
lods
add
push
inc
mov
add
out
lods
dec
ret
xchg
incl
inc
xchg
inc
or
or
adc
lock
ret
aaa
push
lods
ficomps
or
aas
pusha
addb
push
mov
push
xchg
dec
and
insb
jmp
das
push
inc
lock
fdivs
and
jb
cmp
jbe
jl
or
or
push
mov
or
mov
inc
push
add
sbbb
daa
nop
push
divb
push
cmp
mov
nop
or
mov
dec
sub
sub
dec
cmp
leave
xor
enter
push
push
cmc
mov
mov
shll
cld
jl
rorb
sub
out
adc
pop
scas
stc
mov
rorl
cwtl
push
add
push
jmp
xor
dec
pop
gs
or
pop
data16
shr
mov
lods
or
lea
imul
inc
je
repnz
mov
cmpsl
jmp
xor
insl
jmp
sub
add
lcall
xchg
sbb
jp
push
cmpsb
rorb
call
adc
push
jo
mov
push
add
pop
shll
xor
add
inc
loope
ret
pop
cmp
imul
shrl
ret
test
mov
or
push
adc
jle
mov
cmp
testl
push
movsb
ja
clc
push
xchg
sarl
push
in
hlt
bound
rcll
sub
push
test
xchg
loopne
cmp
testl
sbb
je
cmp
aas
push
or
cmp
addl
mov
mov
loopne
imull
lods
add
xchg
jmp
add
addl
adc
mov
or
pop
nop
movsb
mov
pop
pop
push
ljmp
lods
mov
sub
int3
inc
mov
and
leave
icebp
and
insb
pop
sub
movsb
push
push
stos
movsb
scas
lcall
addr16
flds
mov
xor
or
cmp
mov
inc
pusha
or
cmp
push
add
mov
sub
cmc
xchg
or
mov
pop
adc
mov
adc
mov
cmp
sbb
lods
pop
adc
mov
cmpl
push
or
aam
cmp
mov
push
mov
shlb
dec
clc
scas
jg
in
imul
pop
mov
shr
mov
pop
cmp
aam
scas
es
and
add
pop
jb
andl
adc
jge
inc
jne
sub
je
dec
je
dec
push
push
jmp
mov
cmc
jmp
mulb
call
orl
pop
adc
jmp
mov
jmp
jno
or
add
fistps
and
sahf
andb
data16
int3
or
pusha
xchg
loopne
pusha
mov
loopne
sbb
ret
xor
jno
sbb
or
push
jne
adc
fdivp
adc
adc
and
outsb
ljmp
lcall
add
push
or
lea
sub
stos
inc
imul
mov
enter
xchg
dec
repnz
inc
adc
fiaddl
into
or
mov
sub
xor
sbb
push
push
or
adc
mov
mov
mov
pop
sbb
add
push
pop
mov
adc
push
dec
mov
or
push
and
sbb
add
xchg
inc
fiadds
jnp
dec
push
rcll
call
inc
ljmp
inc
aaa
pop
ljmp
sar
add
out
pop
add
or
scas
add
shr
or
mov
fistpll
adc
test
and
add
mov
leave
test
adc
adc
mov
push
mov
add
mov
add
movsl
insl
and
dec
inc
clc
movsl
je
inc
jl
in
sbb
cmp
lcall
pop
dec
adc
je
sbb
call
repnz
loopne
dec
fidivrs
inc
adc
sub
dec
xor
bound
xor
out
inc
adc
lret
clc
xor
mov
mov
cmp
orl
stc
rolb
dec
xchg
mov
xor
nop
mov
icebp
mov
shlb
push
fbld
mov
mov
movsl
xchg
or
addl
in
or
nop
clc
add
pop
add
mov
add
cli
jne
mov
push
addb
test
add
push
or
pop
inc
mov
shll
adc
or
in
jbe
test
push
sahf
mov
sbb
adc
mov
mov
loop
push
sbb
leave
rol
xchg
nop
sbb
test
pop
jns
xor
pusha
je
xor
cwtl
sbb
pop
or
nop
sbbl
nop
jno
add
lret
int3
test
mov
lret
xchg
dec
jo
mov
int
push
dec
dec
or
iret
sub
sbb
add
inc
inc
mov
sbb
stos
fisttps
pop
xlat
inc
sbb
inc
and
fs
adcl
ret
stos
sbb
xchg
mov
mov
cvttps2pi
add
shr
rolb
cmp
jne
subl
int3
pop
or
sub
jecxz
out
mov
mov
cmp
fdivrp
push
inc
aad
xor
push
mov
clc
xchg
imul
push
test
mov
sub
test
sbb
rcr
or
inc
adcb
mov
mov
std
adc
dec
loopne
les
je
data16
add
outsb
mov
sub
push
xchg
adc
rcl
popf
xor
add
fmuls
add
test
mov
xor
je
clc
shlb
negb
add
inc
test
aas
cmp
and
jmp
ss
add
out
add
call
ss
or
cmp
adc
mov
cltd
pop
mov
add
inc
add
repnz
pop
mov
in
mov
cmp
jle
inc
and
add
or
shlb
pop
sbb
xor
leave
inc
xor
sub
pusha
mov
fucomp
fcoml
xor
mov
mov
je
out
xor
rolb
aam
push
fstl
inc
popa
add
insl
push
add
push
xor
jmp
das
push
fisttpl
dec
imul
mov
ds
mov
cld
or
push
dec
mov
aaa
cmc
je
push
hlt
pop
movsb
mov
and
jne
cmp
jne
or
mov
dec
add
mov
negb
add
adc
rorb
push
or
test
or
adc
fprem
std
jne
out
roll
leave
add
je
add
sub
adc
mov
jg
lock
xchg
push
aad
ss
divb
pop
sahf
jne
std
mov
movsl
sti
in
adc
pop
add
repnz
mov
sbb
add
outsb
add
mov
dec
and
and
adc
sub
lea
rclb
and
and
sub
cld
imul
adc
fdiv
fiaddl
fsubp
fisttpll
inc
ss
dec
add
xorl
xchg
adc
int
push
sbb
fcoms
adc
and
xchg
cmpsb
xchg
sbb
fcomi
sbb
xchg
inc
sub
adc
sbb
or
sbb
mov
dec
fsubs
fwait
dec
jne
or
pop
aam
mov
insl
mov
and
lods
rcl
ljmp
dec
and
shr
sub
xor
mov
xor
jmp
enter
popf
maskmovq
cld
lock
je
rorb
sub
mov
addr16
js
sbbl
push
mov
pop
fbld
loopne
jae
adc
inc
ljmp
or
std
movsl
mov
je
push
and
into
jbe
aas
dec
das
jge
xor
dec
adc
dec
xchg
or
or
adc
push
pusha
add
dec
inc
xchg
addb
enter
into
paddusb
sub
in
shll
sbb
or
daa
in
sub
add
aam
adc
gs
outsl
pop
cmovno
in
dec
jge
cmp
stos
cs
xchg
adc
adc
sahf
cld
inc
ss
push
nop
aaa
dec
sub
cmpsb
pop
add
dec
stc
xor
jns
cmp
out
cld
mov
adc
ficompl
pop
lods
test
adc
add
xchg
jo
subl
enter
fs
xor
cmp
xor
pop
pop
xchg
lea
xchg
clc
push
test
mov
loopne
adc
es
mov
inc
xor
and
aas
out
jmp
jb
cmp
ja
add
cmp
adc
cmp
jne
mov
sti
xchg
shll
leave
adc
mov
sbb
add
jl
pop
pop
mov
enter
cli
fiaddl
sbb
adc
sbb
fadds
and
imul
test
test
aas
sti
pop
leave
insl
scas
pop
push
movb
jmp
or
cmp
je
mov
iret
cmp
pop
js
pusha
test
push
mov
dec
dec
call
movw
jb
call
daa
cltd
mov
pop
xchg
adc
pop
push
daa
jno
mov
jb
jne
sbb
mov
shlb
loope
mov
fdivr
inc
jne
adc
or
sub
bound
out
andb
sbb
je
dec
into
push
add
jle
add
cmp
mov
movsl
ja
imul
call
jg
add
inc
imul
lea
sar
ror
cmp
mov
pop
neg
lods
testb
mov
mov
cmp
popf
and
mov
shl
inc
call
roll
ss
into
sti
add
addr16
adc
push
cwtl
mov
push
test
lods
xor
jb
jl
in
jbe
pop
or
dec
jle
repnz
addb
les
mov
scas
adc
test
and
and
mov
adc
xor
mov
cmpsl
add
into
sahf
add
decb
xchg
and
lahf
fsqrt
and
adc
inc
testl
cmp
ljmp
stos
inc
inc
or
cmp
lock
mov
mov
jne
lea
rolb
rolb
fs
mov
push
lea
mov
or
jb
pop
xchg
push
push
or
xchg
addb
mov
movsb
mov
cmp
shll
sub
insb
in
pusha
data16
sub
xchg
mov
mov
push
insb
jge
adc
repnz
and
mov
lcall
lock
lret
clc
rcr
and
bound
rorb
mov
cld
add
shr
or
and
shlb
ret
sbb
push
lret
lcall
mov
es
mov
les
or
ret
les
jle
int3
shrl
loope
shr
or
mov
sti
jmp
xor
cli
push
mull
lea
adc
xchg
and
push
pop
scas
xor
testb
dec
cli
cli
inc
inc
lret
repz
cli
div
pop
dec
or
add
xchg
dec
xor
test
add
cwtl
nop
loopne
sub
arpl
jge
sbb
adc
and
xchg
cmp
fimull
xchg
xorb
cli
fidivl
fldenv
enter
jg
or
jo
dec
divb
rorb
mov
imul
divb
inc
sbb
inc
shll
test
push
sbb
loop
popa
orl
sahf
jge
mov
test
movsl
inc
pop
inc
pop
mov
dec
in
aam
daa
adc
jne
push
or
hlt
xchg
out
and
sbb
cmp
mov
adc
int3
jbe
dec
or
sbb
test
add
sub
xor
ljmp
adc
or
fmull
or
mov
sbb
fiaddl
mov
cmpl
adc
jp
jmp
mov
pop
add
add
addb
adc
or
into
or
or
jb
adc
lock
nop
das
test
jge
or
mov
and
mov
or
cmp
jne
jne
sbb
in
or
or
enter
lret
push
mov
add
sbb
popa
mov
dec
sub
mov
aas
and
negb
inc
add
inc
mov
pop
xchg
push
pop
outsb
call
xchg
lods
out
hlt
cltd
test
mov
sbb
jne
or
cli
pop
xchg
fsubrl
mov
cmp
fcoms
xor
fiadds
jnp
lock
imul
jmp
cs
call
mov
loope
outsb
xor
pop
add
and
mov
push
in
add
into
fisubs
add
sti
add
push
sar
ja
into
sbb
loope
rcl
or
push
or
rclb
push
stc
ljmp
ss
fimuls
lea
sahf
mov
add
add
sub
test
call
es
add
or
sub
into
or
mov
inc
ljmp
jmp
add
or
dec
ret
aad
incb
jge
sub
cmpb
or
imul
fs
mov
repnz
pcmpeqb
fidivl
cmp
dec
movsb
mov
and
ret
and
cmp
add
or
jo
rolb
cmp
pop
aad
test
jbe
ret
adc
loop
add
push
mov
lods
loopne
adc
adc
mov
push
add
add
add
test
sarb
adc
stc
lret
ret
inc
mull
or
push
push
adcb
push
or
cmc
adc
or
enter
pop
or
jne
or
push
pop
scas
je,pt
cmp
ret
sbb
adc
mov
je
mov
sub
xor
and
push
add
test
inc
pop
mov
mov
mov
iret
xor
into
pusha
inc
pop
sub
mov
fisubrl
and
sahf
fld
aam
pop
push
mov
cmp
prefetchw
sahf
inc
ret
or
aad
cwtl
push
loopne
adc
inc
add
inc
push
imul
push
or
push
lcall
push
adcl
je
inc
sbb
add
je
jmp
pop
jle
pop
or
out
or
add
mov
jle
jne
and
mov
add
test
pusha
aaa
loope
add
shlb
ret
filds
push
cmp
scas
popa
and
daa
in
push
jo
rcr
nop
clc
mov
dec
mov
inc
test
sbb
pusha
lock
push
scas
adcl
cmp
subl
xchg
mov
rcrb
jge
loopne
jl
rolb
clflush
lock
sub
cltd
and
dec
sti
into
or
add
or
cs
mov
add
push
push
mov
mov
sbb
repz
and
sbb
inc
jg
into
jge
lret
into
mov
call
mov
pop
or
faddp
loopne
sahf
pop
mov
sub
shlb
or
pop
insb
test
sub
add
jae
addl
les
mov
test
lahf
pop
and
jecxz
xchg
out
adc
add
lock
movsl
movsb
jnp
clc
cmp
call
lods
and
cltd
and
cs
sbb
es
sub
jmp
roll
jmp
xchg
lret
push
xor
pusha
push
mov
mov
loopne
mov
add
cltd
push
lds
fsts
xchg
mov
cli
test
enter
rorl
clc
xchg
sbb
add
scas
sub
mov
lea
gs
or
in
hlt
test
push
fadds
jge
testb
or
jns
je
cmp
fs
cmp
jo,pn
or
xchg
or
repz
or
js
dec
adc
or
jno
sbb
jbe
dec
or
sub
loope
cld
mov
into
cmp
je
mov
cld
scas
push
mov
or
or
cmp
jbe
pop
aas
or
sub
jmp
push
jl
movsl
pushf
xchg
loopne
int3
xchg
mov
test
aaa
imul
add
mov
cmpl
ret
insb
fstpl
pop
dec
jle
push
push
out
fwait
repz
and
pop
add
ret
push
daa
ljmp
pop
mov
mov
sub
pop
xlat
adc
test
js
pushl
pop
add
and
jo
fistl
and
push
push
mov
popa
add
fstl
and
or
fadds
cmp
sub
or
dec
push
rclb
cmp
lret
in
cmp
inc
and
dec
leave
je
dec
push
test
mov
dec
pop
ljmp
into
orb
dec
fldl
aaa
sbb
dec
mov
repnz
xlat
jmp
sbb
or
pop
cmp
push
js
addb
mov
fldlg2
add
into
push
adc
pop
jmp
cmp
lock
jno
sahf
mov
lods
mov
add
xchg
push
push
mov
add
stos
pop
xchg
push
js
jl
cmp
adc
dec
fidivrl
loope
aaa
imul
and
addb
push
outsb
pop
inc
xlat
inc
ss
ret
push
add
mov
sub
cs
xorb
inc
insb
add
inc
or
pop
pop
xor
ret
mov
addb
mov
mov
mov
pusha
gs
sbb
mov
je
in
lret
insl
push
clc
cli
in
mov
lret
sub
test
sbb
xchg
arpl
paddusb
sub
sub
outsb
or
push
mov
lret
mov
add
insl
cmpsl
mov
add
loopne
push
pop
nop
jmp
push
loope
dec
idivb
shrl
push
jmp
dec
fs
and
jnp
xor
cmp
mov
push
js
xlat
xchg
mov
xor
or
mov
sbb
inc
insl
push
test
jne
inc
sub
adc
cmpsb
mov
push
test
sub
add
mov
dec
loopne
test
and
mov
sbb
mov
push
pcmpeqb
jg
subl
aam
mov
and
push
pop
cmp
jbe
clc
inc
aam
adc
and
pop
movsl
gs
inc
pop
int3
sbb
or
dec
lods
and
mov
mov
in
repnz
xchg
inc
cld
and
jmp
and
lea
add
xlat
xchg
pop
rolb
inc
mov
xchg
jne
mov
sub
cmp
mov
sbb
add
test
pop
xor
xchg
hlt
rorl
sbb
lret
add
lea
movsl
fwait
mov
mov
adc
outsb
cmp
fnsave
mov
inc
cwtl
push
std
clc
addr16
nop
loope
outsb
dec
bound
pop
sbb
pop
imul
enter
pop
jmp
add
mov
pop
push
mov
js
in
mov
and
addb
in
call
push
sar
cmp
pop
xor
sbb
adc
sbb
xor
and
pop
xchg
pop
cwtl
pop
sub
inc
and
xchg
ljmp
cmpsl
aas
adc
les
mov
cmpsb
sahf
imul
in
addr16
clc
add
push
xor
daa
sub
imul
cltd
test
mov
sti
gs
mov
pop
sub
push
pushf
ret
movsb
add
mov
test
push
icebp
push
add
push
lahf
xchg
inc
ror
int3
jmp
ret
mov
sbb
xchg
add
lahf
add
rorl
insl
cld
mov
sub
adc
stc
pop
pop
xchg
xchg
rclb
loopne
cmpsl
mov
push
mov
bound
cmp
pop
mov
sub
ret
add
sahf
mov
data16
sbb
call
cwtl
es
or
imul
inc
int
stc
dec
or
into
and
mov
pop
mov
xchg
xor
jns
adc
or
push
jg
rcrb
mov
sbb
mov
scas
cmp
xchg
pop
inc
out
mov
rcrb
stos
mov
repnz
lods
dec
add
add
pop
sub
or
pop
xor
outsb
insl
clc
pop
add
ret
pop
sub
iret
mov
shrb
std
dec
incl
add
mov
xor
mov
ret
pop
sub
popa
mov
imul
test
push
xor
fcoms
dec
or
or
xchg
std
data16
sbb
pop
movl
push
add
jmp
add
sbb
adc
sbb
gs
in
inc
js
out
or
test
adc
mov
aaa
inc
jo
arpl
imul
xchg
xorb
cmp
cmp
ja
mov
jmp
or
movsb
loopne
cltd
out
adc
aam
dec
inc
imul
add
pop
call
add
aas
or
adc
movsb
out
lock
jp
inc
mov
sbb
cmp
ja
insl
int
loop
test
add
or
push
mov
cwtl
out
add
mov
addr16
push
sbb
mov
out
inc
pop
xchg
jp
repnz
in
neg
push
dec
test
jg
adc
lock
testl
jo
bound
push
icebp
pop
add
xchg
shll
cmp
mov
pop
shlb
popa
shr
cs
into
lock
xor
inc
adc
inc
or
ret
ljmp
aaa
add
stos
test
in
mov
pusha
or
movsb
pop
push
and
pop
pop
das
add
lea
push
dec
aas
leave
jp
adc
mov
cmp
and
and
push
add
pop
outsb
imul
repnz
insl
or
test
or
pop
pushl
push
inc
inc
loopne
pop
cmp
dec
dec
or
cmp
popa
lock
in
xor
mov
das
dec
sarb
aas
dec
cmpl
mov
add
outsb
or
or
addb
je
cmp
bound
cmp
cwtl
xor
jp
adc
cmp
add
xorb
pushl
mov
hlt
jge
in
sbb
shr
inc
jl
addl
idivl
shl
rcrl
or
mov
mov
cmp
lods
test
push
and
and
inc
sbb
sub
xchg
fimull
jo
lea
jo
xor
sub
and
jne
sbb
jl
sbb
jle
dec
sbb
lea
leave
aam
push
insb
int
aaa
inc
in
xor
mov
mov
les
xor
pop
sbb
push
or
add
add
flds
sar
add
aas
mov
push
shr
add
sbb
pushf
sbb
push
out
mov
aam
test
ds
xchg
dec
je
inc
push
add
dec
lahf
dec
les
jl
jg
aad
in
and
add
fs
pop
jl
mulb
adc
push
repnz
xchg
or
cmp
rolb
and
dec
push
sbb
shr
call
adc
mov
sbb
hlt
inc
xchg
pushf
inc
and
add
movsb
dec
and
sub
scas
mov
in
sbb
into
outsb
loope
fdivs
das
gs
pop
inc
jo
loope
je
push
push
lods
inc
aaa
and
jmp
and
ss
pop
leave
cmpl
dec
cmpsb
pop
adc
sbbb
jae
inc
mov
sub
mov
cmp
jg
push
dec
shlb
xor
mov
dec
lea
mov
fadds
call
cmpsb
jmp
push
ds
and
inc
outsb
fadds
jle
mov
shl
dec
shll
stos
ds
cmpl
pop
mov
cld
iret
push
pop
cmp
movsl
and
frstor
mov
lods
mov
or
cmp
inc
in
popa
mov
dec
xlat
in
mov
pop
cmp
adc
and
cmpsb
es
test
mov
mov
cmp
or
jp
cmpb
dec
inc
lock
dec
jb
int
js
repnz
and
mov
add
loope
push
cmp
dec
cmp
jbe
inc
outsb
sbbb
cmp
in
pop
je
shrb
cmpl
adcb
dec
mov
ss
jmp
imul
ja
popa
xchg
in
or
je
mov
sbb
roll
sub
push
cli
rcrb
add
pop
add
cmpsb
mov
daa
inc
push
dec
sbb
call
add
xor
add
xor
or
shrb
cli
and
test
and
adc
adc
cmp
inc
repnz
je
mov
cld
pop
dec
jne
push
lods
ja
add
fcoms
jmp
xor
pop
add
inc
popf
ds
mov
cmp
push
pop
movsb
sti
adc
and
xor
or
push
sub
mov
aas
mov
aaa
lds
enter
subb
mov
arpl
mov
add
dec
sub
and
lret
scas
daa
std
mov
loopew
pop
add
inc
sbb
adc
in
sub
and
inc
jmp
in
xchg
sbb
addb
adc
mov
push
push
or
stos
cmp
sub
addr16
push
mov
xchg
js
cmp
jl
imul
or
inc
mov
leave
add
mov
xchg
push
shl
mov
jp
cwtl
sub
add
and
sbb
and
popa
lods
jne
add
in
les
arpl
iret
xor
pop
sbb
pop
fmuls
cmp
adc
jle
test
enter
inc
mov
mov
mov
aad
loop
mov
xlat
inc
test
lcall
dec
adc
sbb
adc
push
shrb
leave
test
xchg
push
mov
pusha
add
fdivs
mov
mov
es
or
shl
push
mov
mov
out
adc
pop
fs
pop
test
pop
movsb
pop
lock
jle
dec
in
js
sahf
dec
add
sbbl
cmp
adc
popf
sub
sbb
adc
dec
or
push
push
adc
int3
jg
and
xchg
jg
add
jno
inc
addb
movhps
sbb
pop
push
xor
or
fisubl
adc
xchg
dec
hlt
adc
pop
cld
or
negb
lea
add
mov
jbe
add
push
loope
xchg
fdivrl
fdivs
add
dec
jg
adc
orl
jg
jmp
adc
or
cmp
xor
xorb
and
pop
mov
and
cmp
mov
sahf
jb
sub
jb
or
cmpsl
cmp
loopne
gs
inc
pop
aaa
pop
pushf
and
js
inc
push
jg
jae
pop
sub
pop
scas
or
or
push
pop
and
jns
mov
pop
cmp
scas
and
adc
repnz
cmpsl
adc
int3
add
es
mov
js
add
stos
pop
sti
inc
insb
jne
push
mov
ja
test
adc
sub
xchg
fidivrl
andl
mov
xlat
je
mov
pop
loopne
cli
es
mov
and
cmp
jb
testb
loopne
mov
add
cmp
dec
xor
js
jbe
or
jge
push
jmp
inc
mov
fiadds
sbbl
je
cmp
clc
jns
pop
cmp
sub
pop
adc
daa
clc
push
push
or
test
int3
xor
sub
push
inc
shrb
lret
push
call
and
inc
and
cmp
jg
add
push
sub
and
dec
outsb
sbb
cwtl
hlt
sahf
test
shlb
pop
es
jmp
jle
pop
es
aas
push
inc
pop
pop
cltd
mov
iret
pop
sti
or
push
xchg
xchg
push
mov
mov
mov
mov
inc
sbb
or
int
or
add
fiaddl
fldl
aad
lods
mov
xor
or
in
mov
adc
and
sub
add
add
stc
add
inc
data16
dec
mov
xchg
add
nop
add
add
inc
xchg
mov
push
push
daa
pop
inc
ficomps
out
pop
sub
xorb
adc
sbb
jp
out
mov
adcb
xlat
fidivl
sarb
stos
fdivs
aaa
adc
inc
pop
aas
xchg
out
je
pop
and
fld
fxch
mov
inc
inc
fbstp
insb
pop
rol
mov
rcl
cmp
clc
jbe
fsubrp
pushf
jns
fstps
icebp
popa
insb
insb
loop
ret
rolb
insb
push
jmp
cmp
in
adc
enter
adc
ret
out
inc
lods
mov
sbb
adc
rorl
pop
gs
or
mov
xchg
inc
mov
xchg
mov
or
jg
xor
or
in
daa
and
sarl
pushf
fidivl
fnstenv
inc
pop
adc
jg
leave
and
hlt
rorl
jmp
adc
arpl
in
ljmp
test
mov
cld
xchg
dec
in
inc
mov
inc
add
inc
inc
fsubs
rol
pop
call
jmp
sub
xor
sbb
push
jns
aad
outsb
adc
aaa
jbe
pop
pop
cmpsl
add
cmp
cltd
adc
cmp
daa
in
inc
push
in
lock
and
inc
or
fsubs
pop
imul
and
jmp
or
cwtl
adc
dec
leave
ficomps
add
mov
adc
add
add
nop
push
push
inc
das
add
push
xlat
ret
in
mov
arpl
mov
xor
roll
sbbb
shr
push
push
sub
sbb
pop
sbb
jmp
push
jb
add
inc
lahf
fadds
iret
dec
in
into
loopne
fcom
addl
lock
insb
insb
cmp
ret
movsl
and
test
add
cmpsb
xchg
xor
enter
xchg
or
insl
push
mov
mov
xor
dec
ret
repnz
dec
mov
in
inc
jl
shll
in
inc
adc
xchg
pop
mov
cmp
or
nop
ficoml
xorb
popa
rcll
hlt
sub
or
imul
fistpl
mov
mov
pop
pop
mov
in
out
sbb
dec
mov
mov
call
in
es
mov
xchg
sbb
mov
sbb
mov
jl
push
js
fmull
leave
add
inc
push
jb
pop
enter
mov
rclb
cmpsb
call
fsubrl
rclb
les
arpl
push
or
xor
xor
adc
xchg
in
in
unpcklps
cmc
movl
mov
out
repnz
add
push
jno
pusha
xor
and
fs
dec
jo
js
or
jl
mov
fsubr
adc
fwait
pop
inc
pop
ficomps
rcrl
and
fsubs
inc
pop
adc
sub
fwait
or
pop
mov
ss
adc
jnp
dec
mov
mov
mov
test
pop
roll
xlat
in
sti
gs
mov
arpl
push
fildll
je
sbb
sbb
in
xor
jne
dec
adc
loop
dec
adc
cltd
sub
pop
push
jb
into
adc
xchg
shrl
or
mov
pop
ds
inc
bound
jl
xchg
dec
mov
shlb
cmp
or
cmp
scas
add
add
inc
les
jmp
rorl
xor
ds
add
push
inc
fiadds
push
xor
je
repnz
push
hlt
enter
aam
nop
test
add
aas
inc
imul
loop
cmp
jle
cmp
ret
push
inc
loop
lock
lock
js
insl
sub
movsb
xchg
xchg
sbb
inc
xchg
cmpsl
fsub
sbb
xor
call
in
inc
inc
push
nop
jecxz
stos
and
or
lods
lea
fisttpl
insb
mov
xchg
sbb
sbb
fcoms
in
loopne
jl
lods
sbbb
or
neg
adc
jne
jge
push
aad
test
cltd
or
imul
xor
fs
cmc
test
in
sbb
and
xor
pop
inc
pop
push
adc
inc
adc
mov
test
or
sbb
and
sbb
inc
cmpsb
dec
add
loopne
mov
or
pop
sub
andl
ret
cmp
push
call
sub
pop
push
int3
js
call
cmpsb
ss
addr16
push
lock
push
add
mov
call
pop
mov
adc
jge
mov
inc
dec
pusha
push
cmp
call
sub
add
mov
leave
or
jb
inc
pushf
sub
or
xchg
rol
scas
inc
ja
pushf
inc
pop
dec
sub
sub
xchg
jmp
xlat
roll
jecxz
ljmp
outsl
push
mov
add
out
xor
dec
add
xchg
adc
push
pop
in
pop
ljmp
ljmp
mov
test
push
sub
push
push
inc
test
jmp
cmp
adcb
cmp
lcall
or
push
loope
aad
pop
dec
in
shr
add
dec
popa
push
adc
rcrl
mov
je
dec
mov
add
in
das
in
lea
sahf
in
or
fmull
and
push
faddl
enter
in
lods
in
add
jns
xlat
mov
cmp
sbb
xlat
flds
loopne
nop
decb
xchg
xchg
decb
inc
in
imul
pop
push
in
in
adc
jne
jnp
jne
sub
xchg
jge
sbb
or
or
nop
roll
sbb
jl
movsb
sti
push
leave
pop
aaa
sbb
sti
sbb
xchg
das
adc
test
sbb
out
imul
out
dec
push
popf
loop
outsl
cld
out
lea
or
sbb
fsubl
mov
imul
movnti
loopne
fdivl
imul
dec
push
dec
mov
xchg
inc
jns
repnz
aam
add
cmp
mov
or
sbb
enter
or
and
push
cmp
lods
js
enter
mov
aad
push
xor
jbe
gs
imul
test
xchg
pop
mov
adc
add
xor
or
or
pop
jb
or
roll
xor
adc
mov
inc
dec
imul
dec
sub
in
mov
adc
push
and
adc
cmp
adcb
push
repnz
cmp
xor
sbb
ret
sbb
sub
or
mov
cs
push
in
repnz
sbb
sub
fadds
inc
repz
jne
js
pop
dec
xor
lods
repz
mov
xlat
in
xor
dec
or
adc
adc
iret
xor
ss
addr16
xor
mov
sub
push
and
ljmp
pop
pop
daa
fimull
in
aas
call
cmp
aam
cmp
stc
enter
hlt
jnp
add
mov
dec
movsb
addb
and
cmc
mov
dec
fmuls
das
rcrb
cmp
pop
test
push
push
adc
in
call
psubsb
das
dec
jb
daa
loopne
jno
insb
test
in
adcb
adc
inc
lds
adc
mov
insb
in
test
outsl
leave
mov
add
ja
cmpsl
sub
xlat
jne
mull
adc
mov
loopne,pn
aas
in
dec
lds
fucom
out
das
inc
xchg
cmpsb
add
enter
testl
pop
stos
adc
inc
or
and
cmp
and
xor
pop
fnstcw
push
jo
dec
adc
mov
adc
dec
or
icebp
fsubrs
std
dec
stc
mov
test
pop
jne
cmp
pop
sbb
cs
and
or
mov
fucom
mov
xchg
inc
lock
lods
leave
fdivrs
test
loope
cmp
mov
hlt
cli
add
sti
inc
call
pop
add
icebp
insl
cmpb
enter
or
or
sbbb
or
mov
enter
and
push
mov
test
imul
jo
cld
fwait
cwtl
stc
mov
or
stc
popf
andb
mov
cmp
or
inc
pop
test
bound
and
adc
sub
or
and
fucomi
adc
or
test
push
jl
in
inc
pop
inc
dec
or
ficompl
pop
rorb
pop
mov
fsubl
fildll
cs
push
fs
pop
daa
cmp
mov
shlb
cltd
sub
shlb
push
rolb
pop
inc
iret
mov
jp
xchg
lret
orl
nop
push
xchg
std
add
paddusb
xchg
pusha
xlat
test
xlat
mov
in
enter
jge
pop
xlat
sarb
add
xor
fdivrl
dec
dec
rcrl
aam
fadds
enter
aam
jb
ret
test
sbb
mov
fcom
fdivr
add
aad
jl
adc
inc
sbb
test
lock
inc
stos
xor
push
imul
mov
repz
lea
pop
fidivl
gs
adc
imul
ljmp
inc
cmpsl
mov
add
ljmp
loopne
call
adc
in
jns
scas
and
mov
out
jae
adc
enter
test
int
jb
cmp
test
add
aad
mov
mov
jl
xor
xor
or
test
and
pop
jb
cmp
cmp
sub
aas
pop
fldenv
mov
dec
sbb
and
cs
dec
push
test
sti
enter
roll
add
mov
ret
loope
or
ret
shrb
in
in
arpl
call
or
adc
imul
es
sub
push
inc
lds
add
fcoml
mov
mov
adc
ret
js
sbb
add
pop
lea
sbb
popf
fs
sub
or
cwtl
push
inc
sti
dec
sbb
int3
push
mov
sti
cmc
xchg
dec
int3
ret
adc
pushf
push
pop
and
testl
cmp
push
jp
xorb
stc
cmpsl
ss
push
andl
lcall
mov
inc
dec
ror
jecxz
jo
dec
sarl
or
mov
xchg
movsl
mov
inc
push
popa
mov
in
inc
fdivr
notb
sub
js
es
dec
adc
add
repz
mov
pop
mov
add
xor
mov
sbb
out
es
or
mov
mov
jo
push
lods
lcall
in
and
or
stc
lods
dec
dec
mov
sub
jmp
popa
lock
jmp
es
adc
inc
push
arpl
ljmp
rorb
push
xor
ja
and
xor
add
add
not
ret
lahf
pop
dec
adc
sub
lock
inc
xor
imul
cmc
cltd
dec
pusha
mov
ret
and
movsl
adc
sub
push
mov
and
movsb
and
call
or
pop
in
testl
adc
enter
xchg
insb
pusha
roll
adc
ss
das
push
or
int3
test
insl
cmp
pop
leave
add
lods
pop
dec
or
enter
fadds
nop
mov
bt
or
sbb
inc
jp
lock
sbb
sub
setl
adc
add
arpl
mov
rorb
dec
inc
xchg
xlat
pop
call
insb
aam
gs
cwtl
sbb
adc
fcoml
xchg
lret
nop
adc
inc
lea
ss
adc
xchg
push
push
pop
rclb
or
pop
xchg
xchg
add
gs
push
adc
or
iret
adc
mov
lcall
xchg
jbe
cs
shll
rolb
adc
orb
adc
loope
mov
adc
les
cs
sub
rcrb
sub
jb
adc
divl
in
stos
xorl
or
in
pop
dec
or
cmp
fmul
adc
lock
inc
jmp
adc
jne
popf
inc
xor
mov
mov
in
fstpt
inc
test
gs
in
addb
adc
mov
xor
adc
mov
add
hlt
or
popa
mov
inc
test
fiaddl
test
adc
xchg
test
fisubrl
dec
adc
aas
mov
inc
or
test
adc
xchg
enter
mov
or
pop
xor
and
ficoms
xor
sbb
test
mov
int3
mov
mov
lods
in
imul
mov
sbb
mov
xor
cmpb
imul
push
cmp
dec
rep
jge
cwtl
jo
add
or
popf
dec
push
imul
pushf
mov
push
scas
int
dec
mov
and
imul
xorl
dec
arpl
or
mov
sbb
mov
xchg
cmpb
movsb
add
jl
jl
dec
es
jl
xchg
loop
xor
sub
aaa
flds
push
sbb
pop
das
jns
pop
nop
ss
sub
jo
sbb
add
movsb
and
decb
inc
and
jo
ret
xor
std
xlat
mov
pop
mov
sbb
jge
sbb
mov
mov
push
mov
lods
cmpsb
push
inc
push
nop
push
les
or
xchg
pop
xor
shll
xor
rcr
jmp
add
dec
leave
lcall
sbb
sbb
insb
sub
call
repnz
cmp
je
nop
add
fidivrs
push
mov
mov
cmp
add
pop
xor
pop
js
fs
inc
push
mov
nop
mulb
popl
mov
adc
sbb
test
fs
nop
ret
test
dec
cwtl
pushf
aam
and
cmpsb
inc
lret
rcl
fdivrs
in
add
in
popa
xor
leave
fdivl
sub
popa
shlb
sbb
jne
shlb
mov
push
sbb
pusha
mov
imul
mov
test
fdivs
and
mov
clc
pop
jmp
xchg
sub
inc
xchg
or
inc
and
and
or
and
push
jp
idivl
mov
test
xchg
dec
push
fsubrs
push
outsl
sbb
push
insl
pop
je
fs
push
adc
adc
cltd
push
cltd
fs
sbb
cltd
fs
and
cmpsb
pusha
xchg
dec
sub
xor
pop
cmp
pop
fdivr
xchg
inc
hlt
dec
adc
das
in
mov
loop
cwtl
fwait
or
mov
lea
push
cltd
fsub
aad
sahf
or
ds
xchg
inc
or
pusha
shrb
stos
aam
inc
pop
adc
popl
sbb
and
stos
fwait
movlps
loope
in
pusha
cmpsb
enter
test
in
mov
loope
push
test
rcrb
push
test
push
jecxz
add
inc
pop
leave
sbb
or
inc
and
test
movsb
nop
leave
inc
mov
xor
and
loope
dec
popa
jnp
int3
adc
ret
pop
int3
pop
adc
xchg
rorb
push
les
leave
push
inc
mov
and
les
shll
loopne
lcall
adc
push
inc
fs
jb
push
push
sbb
pop
enter
bound
ret
or
scas
in
aam
aam
sarb
sub
xor
pop
cmp
enter
fdivs
cwtl
mov
inc
add
insb
inc
pop
cmp
aam
push
jo
pop
adc
arpl
sub
xlat
push
and
ja
inc
push
or
mov
add
pushf
mov
roll
pop
xor
push
insb
and
add
push
loope
jo
shrl
aam
mov
sub
xor
nop
test
xor
insb
das
mov
inc
dec
push
and
rorb
inc
inc
in
or
sub
xchg
imul
std
xlat
and
popa
push
rcll
jns
imul
mov
fmuls
mov
cwtl
fldcw
and
xor
sub
add
daa
aam
sbb
in
and
in
movsb
sbb
aaa
and
adc
sbb
mov
insl
dec
notl
leave
add
adc
stc
cmp
xchg
add
test
push
and
or
cmp
in
xor
fwait
adcb
js
mov
jae
sbb
cmp
push
shrb
inc
mov
insl
leave
in
jns
test
or
mov
inc
imul
test
in
push
dec
sbb
sbb
repnz
xchg
sbb
pop
mov
test
jno
xor
test
xor
dec
fcompl
pop
outsl
out
insb
add
add
sub
jg
sahf
pop
add
fdivs
mov
adc
popa
leave
and
popf
loopne
cmp
dec
mov
push
or
arpl
sbb
mov
test
xlat
dec
dec
adc
aam
or
scas
lods
jbe
aam
pop
aam
mov
sbb
fbld
or
out
fildll
pop
into
das
punpckhdq
pop
mov
sub
jg
pop
or
rcr
cmp
mov
das
and
push
enter
dec
sbb
sbb
dec
fwait
adcb
xchg
lock
cltd
mov
flds
in
mov
shrb
test
jmp
das
roll
xchg
mov
dec
aam
test
repz
jge
cmp
pop
sub
mov
fs
movsb
fisttpl
stos
dec
je
leave
and
push
cmp
xchg
pushf
adc
mov
les
nop
icebp
sbbb
pushf
sub
jb
shrb
adc
in
xorb
mov
mov
subb
and
mov
bswap
les
cmp
cmp
cmp
pushf
xchg
mov
int
leave
int
adc
in
leave
pop
aam
rorl
dec
and
cmp
adc
pushf
xor
dec
imul
jo
or
adc
insb
arpl
fisttps
pop
adc
xor
mov
adc
inc
mov
out
mov
shlb
push
mov
cmpsb
stc
insl
cmp
icebp
jecxz
xchg
jbe
or
sub
arpl
and
jns
xchg
push
push
enter
cmp
icebp
loope
dec
inc
xchg
in
mov
sbbb
std
cmp
sub
pop
movsl
adc
inc
test
adcl
shlb
push
stos
shlb
adc
in
call
and
cmp
sbb
stos
or
lock
fs
lods
addr16
test
fs
fs
mov
jo
xor
dec
fimuls
mov
adc
add
add
lea
xor
movsl
lds
jns
pusha
cmp
fldl
push
sub
mov
cmp
jbe
jmp
adcb
arpl
shl
xor
sbb
gs
pop
fwait
add
data16
shrb
stos
mov
lahf
mov
sbb
pop
jle
dec
xor
adc
shr
add
imul
mov
call
inc
add
je
repz
add
sub
ficoml
and
pop
dec
adc
addr16
or
sub
sub
ds
sub
push
adc
loope
ja
aam
aad
loopne
ja
nop
or
call
pop
sub
ljmp
or
les
inc
sbb
popa
push
and
mov
adc
ljmp
xchg
xchg
iret
int3
inc
cmc
xchg
mov
or
inc
test
adc
add
lret
imul
fadds
shrb
mov
rolb
pusha
xor
lods
dec
mov
pushf
adc
xchg
shlb
inc
insl
xlat
pop
xlat
mov
dec
push
ss
stc
int3
das
xor
xchg
mov
xchg
adc
sbbl
cwtl
lods
mov
sbb
pop
popf
cmc
cwtl
sarb
bound
inc
enter
mov
out
sub
rcrl
add
sub
pop
mov
fcoms
jo
leave
out
or
test
in
sub
sbb
xchg
adc
mov
mov
imul
ret
inc
push
sarl
repnz
jno
adc
inc
hlt
repnz
mov
pop
inc
shrl
cwtl
inc
push
movsb
and
xchg
or
mov
movsb
mov
and
pop
lods
or
sub
ds
mov
roll
stos
push
fidivl
jo
sbb
sarl
sbbb
lock
adc
push
addl
pop
xor
cmpsb
or
lock
inc
sbb
insb
inc
daa
or
and
inc
xchg
pop
sub
pop
dec
shr
sub
pop
sub
loop
in
in
hlt
lds
sub
xor
or
in
xchg
test
loope
adc
repz
cmc
or
cltd
adc
mov
push
sub
xor
inc
mov
pop
push
and
clc
repnz
in
repnz
dec
cmp
pop
cltd
cld
insl
cld
icebp
mov
add
repz
xchg
and
test
mov
adc
mov
and
and
rclb
xor
push
xchg
roll
out
inc
loop
and
jbe
fsubr
call
lea
shrl
mov
inc
add
mov
inc
mov
adc
outsl
insb
mov
aas
in
das
fadd
addb
popf
inc
mov
mov
ficomps
dec
fisttps
sbb
out
push
add
pop
int3
ficompl
test
add
sbb
or
add
mov
add
out
add
mov
mov
adc
sti
movsb
adc
scas
add
sub
scas
inc
xchg
mov
fiaddl
add
push
xorb
imul
xorl
cmp
xor
sub
sbb
pop
adc
iret
push
jp
nop
jmp
adc
testl
lods
aam
or
fisubl
inc
aad
call
xchg
inc
xchg
jo
in
push
dec
sbb
fwait
xchg
mov
sbb
adc
sbb
cmp
pop
lods
fisttps
pop
or
bound
ss
aam
stos
loopne
adc
and
arpl
sub
and
repz
cs
and
sub
fiaddl
adc
inc
test
push
repz
lods
or
push
popa
add
ret
inc
ret
push
xchg
mov
sub
movsl
lea
push
mov
adc
lods
cltd
js
icebp
pop
nop
jecxz
push
repnz
inc
repnz
dec
jge
xchg
aas
ret
jb
push
stc
xor
std
xorl
sbb
xor
pop
lods
or
loope
dec
push
xchg
xchg
sub
push
insl
mov
call
andb
rcr
in
sbb
xchg
dec
cli
inc
adc
sbb
adc
pop
jb
push
jb
mov
scas
test
cwtl
jno
movsb
add
sbb
ja
test
jns
or
adc
ret
sbb
dec
xor
ret
inc
add
mov
idivl
pop
test
adcb
jns
sarl
cmp
xchg
cmp
cmp
sahf
leave
mov
lds
out
mov
lcall
sbb
dec
mov
push
or
pop
sub
clc
loopne
add
adc
mov
in
mov
int
mov
bound
and
sbb
fidivl
lea
dec
and
cwtl
mov
mov
fwait
orb
push
ret
inc
add
pop
sar
ret
pop
pusha
int
fsubs
or
adcl
mov
sub
pop
dec
rclb
fwait
fs
dec
mov
jno
dec
lods
mov
pop
jno
mov
jnp
push
daa
xchg
sbb
pop
scas
in
or
ljmp
lds
dec
push
int3
push
lret
pop
ret
push
mov
testb
push
jbe
inc
js
sub
pop
inc
test
cmp
mov
mov
dec
cltd
nop
mov
push
imul
push
xor
repz
pop
and
outsb
or
test
inc
jae
push
scas
mov
jecxz
imul
sbb
sbb
mov
xor
std
add
sbb
data16
sti
and
add
fdivr
adc
add
mov
pop
cmp
xchg
add
adc
repz
stc
enter
push
mov
jg
mov
dec
jmp
jno
mov
or
pushf
mov
in
xchg
add
push
jbe
pop
push
and
xchg
push
popa
dec
mov
sub
mov
sbb
lret
and
in
push
dec
lea
xor
or
xor
loopne
in
ret
mov
add
mov
xchg
loope
ret
je
pop
push
sbb
or
or
pop
fwait
jge
mov
pop
pop
adc
pop
mov
or
jg
push
cmp
test
add
jns
notl
jns
inc
add
repz
out
inc
rorl
iret
repz
jg
mov
in
pop
push
cmp
jnp
and
inc
pop
add
fldcw
mov
data16
jnp
cmpsl
jl
mov
push
sub
and
shr
incl
or
jnp
mov
add
adc
mov
rcll
xchg
adc
mov
or
outsl
cmp
adc
mov
test
add
nop
add
into
pop
adc
test
and
stos
push
movl
iret
jnp
push
pop
ljmp
stc
inc
add
or
call
mov
aas
rdpmc
add
movzbl
fsubrs
xorb
mov
xor
mov
bound
and
insb
outsl
arpl
imul
insl
mov
cli
jb
sub
popa
arpl
jne
jb
xlat
out
jmp
je
add
das
add
push
insl
adc
fbld
inc
outsl
jb
js
je
jb
std
in
fimuls
or
outsl
add
add
add
mov
push
jne
les
mov
and
jb
dec
push
add
dec
mov
add
add
or
jp
dec
data16
cmpb
dec
add
aas
jmp
mov
pop
dec
add
sub
mov
je
push
insl
xchg
je
je
jo
addl
fisttpl
mov
daa
cmpsw
insl
push
push
mov
jae
bound
pminub
sbb
popa
out
pop
cmp
insb
mov
fsubrp
jp
outsl
or
mov
fisubs
gs
bound
jne
fnstsw
and
outsl
jmp
jo
mov
and
stos
insl
and
jne
sub
push
imul
scas
cmp
jne
inc
push
lock
pop
fmull
sahf
xchg
sub
dec
sub
fs
in
icebp
sub
insb
lcall
repz
lahf
popa
cmp
push
sbb
inc
arpl
mov
jecxz
inc
or
daa
sbb
or
fbstp
xchg
js
outsb
bound
jnp
adc
ret
arpl
loopne
outsl
fistl
insl
and
cmp
mov
push
filds
xchg
popa
in
mov
xor
fidivl
and
nop
or
xor
lds
lock
andl
mov
fidivrl
jg
popa
sub
or
outsl
inc
xchg
lahf
aaa
jg
shll
dec
iret
fisttps
dec
fs
xor
ficoms
data16
sbb
push
pop
jbe
imulb
stos
repnz
outsl
xlat
xchg
das
rcrl
jae
or
adc
push
jno
cmp
push
jo
jo
ss
lahf
outsl
aas
or
add
pop
scas
ret
sbb
xchg
push
mov
sbb
push
pusha
xlat
aaa
cmpsl
or
insl
lret
imul
jb
fs
imul
shll
sub
rdtsc
cmp
inc
xchg
ret
or
clc
das
xchg
sbb
push
lods
sbb
add
pop
pop
sbb
push
stos
pop
insl
sub
lret
je
scas
cmp
push
out
popa
mov
jg
cmp
sbb
fisttpll
movsb
pop
jecxz
push
push
sub
xor
cmp
xor
addr16
flds
xchg
std
cmp
ret
and
enter
orb
cmpsb
jnp
adc
adc
in
adc
adc
push
sbb
jl
push
mov
pop
idivl
push
das
ljmp
out
and
out
repz
cmp
jns
jp
push
cld
iret
mov
push
pusha
dec
pop
lahf
push
dec
aaa
add
mov
mov
test
sub
sub
push
mov
lock
loope
lret
lret
test
cmp
imul
pandn
ds
mov
fbstp
or
push
fwait
mov
dec
add
sbb
fisttpl
mov
xor
add
add
das
das
inc
pop
sub
mov
shlb
dec
ljmp
das
inc
and
decb
popa
pusha
dec
inc
jmp
jl
scas
mov
jns
aas
or
pop
ds
inc
mov
xchg
sbb
ds
push
fcomps
daa
outsl
dec
and
or
pop
inc
das
fcmovnb
push
mov
pop
imul
iret
fcmovnu
ss
imul
out
insl
pop
jo
and
arpl
fcmovb
inc
pop
pop
jp
int
jmp
and
sub
aad
mov
fbld
fcmovnbe
outsb
push
ds
neg
iret
mov
insl
mov
jg
jecxz
mov
cmp
cmp
add
jne
dec
fs
dec
and
jns
add
das
cmpsl
std
ss
jns
push
dec
push
inc
inc
arpl
bound
std
fsubrs
mov
dec
arpl
sti
loopne
sub
inc
jne
jne
xor
insb
xchg
loop
fimull
outsb
xchg
inc
jo
imul
bound
inc
popa
outsb
adc
into
mov
xchg
cmp
sahf
outsb
jns
jg
addr16
popa
imul
divl
xor
and
daa
out
fstps
clc
sbb
dec
outsl
outsb
and
cmp
push
jne
xchg
pop
dec
scas
jmp
add
out
dec
or
rcrl
jnp
mov
jae
mov
push
inc
push
popa
insb
jne
test
stc
pop
inc
inc
mov
inc
dec
mov
xchg
and
sub
sub
cs
xor
xor
xor
pushl
aaa
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
adc
push
push
xchg
pop
ljmp
movsb
icebp
pop
pop
pop
pop
aam
popa
bound
gs
imul
xor
insb
insl
outsb
outsl
jo
add
jbe
js
jp
jl
jle
xchg
and
lock
loopne
mov
add
orb
mov
ljmp
lret
jno
icebp
pusha
inc
mov
outsl
lcall
clc
ret
movsl
add
xorl
pop
test
outsl
imul
call
std
push
mov
gs
xor
popa
js
fnsave
faddl
dec
pop
add
adc
outsl
ja
ret
jnp
test
int3
adc
dec
push
add
adc
add
add
add
add
xor
cmp
push
add
xor
inc
pop
sub
pop
hlt
and
mov
fcoms
add
mov
add
inc
add
or
xor
sbb
mov
addb
add
xchg
mulb
ret
add
orb
jge
push
cmpb
push
and
sub
jb
mov
out
adc
push
jo
add
loop
cs
push
outsb
imul
outsb
and
push
or
adc
inc
sbb
jo
daa
iret
leave
ss
add
and
or
nop
xchg
xchg
es
and
push
mov
daa
cmpsl
jnp
mov
lret
cmp
stos
aad
cmc
pop
lods
mov
lods
push
in
add
mov
sub
pop
out
out
or
push
inc
sub
ss
push
fistps
js
dec
dec
inc
dec
inc
adc
mov
push
nop
fs
je
add
jae
dec
bound
jecxz
push
hlt
je
outsb
data16
push
jbe
dec
fistl
out
je
xor
push
xchg
daa
jae
fstps
lea
mov
outsl
js
in
shlb
xchg
cs
and
aam
imulb
jo
jo
and
and
pop
or
mov
jae
dec
imul
in
jns
inc
mov
ds
cmp
imul
daa
pop
cs
mov
movsb
stos
ss
jns
mov
outsb
lock
je
and
arpl
je
push
rcrb
mov
addr16
outsb
mov
push
insl
jle
jbe
mov
jo
or
sbb
mov
pop
jb
and
xor
push
push
push
lahf
inc
ss
insl
and
lods
in
mov
sarb
pusha
xchg
pushw
cs
inc
imul
pusha
gs
xchg
add
pop
or
sbb
mov
bound
pusha
lock
push
sub
outsb
mov
push
jae
pop
pop
in
adc
cmp
cmp
pop
es
call
mov
clc
addr16
subl
gs
add
icebp
or
cmp
xchg
inc
push
push
push
push
dec
cltd
pusha
mov
testl
dec
push
aam
enter
ffreep
lea
push
dec
dec
jge
push
inc
ds
xor
and
jle
jb
push
imul
call
adc
outsl
jae
xor
xor
das
gs
sbb
push
or
inc
jg
divb
mov
addr16
das
je
jp
scas
mov
daa
xchg
dec
jnp
pop
mov
popw
pop
cmp
pop
fstpt
cmp
or
ds
and
jae
je
sub
inc
jl
push
addr16
addr16
fs
mov
add
sub
push
jnp
cmp
or
sbb
das
push
jb
and
and
adc
xchg
ds
aad
mov
jne
stos
addr16
cmp
add
pop
rcr
ss
gs
imul
lock
addr16
dec
sbb
mov
xchg
sahf
inc
pop
sub
jae
inc
jo
sub
xorl
out
sub
incb
repz
out
sub
add
std
test
cmp
lock
cmp
xor
push
shlb
cmp
repz
mov
lods
test
cmp
repz
cwtl
xchg
nop
mov
outsb
test
cmpb
mov
jg
push
les
insb
push
push
sahf
out
pop
push
push
dec
dec
out
sahf
out
inc
cmp
xor
out
sahf
xor
adc
add
sarl
fmul
test
stc
cmp
repz
sti
out
sahf
cmpsl
les
jns
dec
inc
xor
or
cli
cmp
repz
shlb
iret
repz
stc
int3
test
or
out
push
xor
jg
push
add
ret
push
lock
jle
mov
or
mov
dec
cmp
cmp
test
add
addl
scas
or
stos
cmp
push
and
push
mov
insb
add
add
push
and
add
ja
xor
and
add
pop
sub
adc
inc
adc
jnp
inc
adc
push
pop
fbstp
jle
add
pushl
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
popf
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
rol
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovnu
fstp
fnstsw
loope
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
test
sbb
sti
cld
mulb
push
movsl
push
loope
or
adc
jmp
push
test
jmp
aam
push
mov
lock
pop
outsb
gs
popa
data16
push
ljmp
iret
sti
cmpsb
pop
jns
push
xor
add
fiaddl
dec
mov
add
push
fdecstp
push
mov
inc
insb
fs
sbb
add
je
xor
jp
or
push
ltr
sub
add
inc
jg
shr
dec
push
push
dec
and
xor
push
dec
aaa
adc
inc
dec
cmovns
cmove
pushf
ret
push
adc
sub
adc
dec
adc
inc
call
rclb
mov
push
imul
jnp
inc
loop
mov
ds
pop
adc
jns
rcrl
lret
sbb
jb
jge
arpl
lds
adc
dec
scas
jp
jno
in
fstl
fisubrs
and
cmp
dec
imul
aas
repnz
iret
lret
add
inc
mov
mov
sub
notb
ss
sbb
pop
jns
lcall
fdivrp
inc
dec
int3
dec
dec
xor
dec
popf
pxor
xor
loopne
ljmp
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
clc
jmp
insl
xor
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
ss
bound
xchg
sub
pop
mov
jg
mov
jns
mov
dec
test
shrl
or
mov
leave
hlt
mov
sahf
neg
call
lods
dec
lock
xor
pop
mov
pop
or
and
pop
repnz
xor
mov
and
es
inc
pusha
mov
push
int
jb
out
dec
inc
xlat
inc
xorb
dec
out
dec
and
inc
or
lret
or
add
push
into
mov
inc
inc
loopne
mov
mov
das
outsl
jns
mov
dec
xchg
pop
and
jmp
adc
or
sbb
push
jae
add
mov
mov
data16
scas
mov
dec
loopne
js
mov
arpl
addl
jg
or
subb
fs
pcmpeqw
jbe
ss
or
loope
popa
daa
sti
push
call
je
or
lods
fucomip
jae
insb
push
or
and
mov
jl
loopne
lret
xchg
loop
addr16
xor
sub
testb
test
xchg
pop
or
mull
roll
nop
nop
push
outsl
mov
push
push
loope
pop
jae
jae
mov
jle
fs
push
push
lods
cmp
pop
sbb
inc
sub
loopne
mov
or
test
pop
out
inc
mov
pop
out
rcrl
push
sbb
aaa
push
mov
sub
push
hlt
lock
daa
jnp
push
mov
shll
or
ret
jecxz
push
xor
lret
jg
out
scas
adc
push
sbb
pop
jns
mov
xlat
jg,pn
rol
cmp
mov
cmpsl
mull
je
or
mov
mov
icebp
mov
mov
lods
push
pop
je
sub
iret
push
push
pop
je
cmp
or
push
push
add
cmp
ret
aaa
jecxz
scas
push
sbb
inc
xchg
insl
popa
add
adc
outsl
or
ret
test
push
jp
jp
add
imul
bound
xor
lret
insb
jecxz
jg
xor
mov
and
pop
inc
addr16
out
xlat
in
iret
out
pop
addr16
je
out
pop
aas
jo
mov
arpl
daa
pop
arpl
das
iret
lods
mov
push
jae
push
mov
rorb
xor
sbb
adc
sbb
xchg
pop
jmp
js
mov
dec
sbb
cmp
fwait
jae
icebp
mov
add
popl
mov
ss
bound
sub
daa
mov
cmpps
add
repnz
mov
inc
aas
jle
fdivl
adc
push
push
xchg
je
or
aas
pop
jb
push
loop
stc
call
push
arpl
arpl
pop
call
jp
outsb
mov
push
inc
add
push
sub
mov
or
jmp
bound
dec
cmp
fimuls
in
mov
pop
dec
aaa
inc
loope
fdivrs
mov
arpl
shl
jae
sub
push
ret
xchg
push
mov
subb
ret
cmp
inc
xor
arpl
add
dec
ja
int
fisttps
inc
out
iret
daa
imulb
cmp
lahf
push
js
mov
ret
jg
push
jne
cmp
movl
adc
fwait
xorl
sub
mov
out
shrl
xor
add
out
pop
push
lret
pop
fdivs
pop
divb
iret
imul
and
dec
aas
jno
stos
and
lahf
xchg
fadd
dec
mov
mov
lods
xchg
out
rorb
mov
es
test
mov
lock
mov
ja
es
stos
inc
mov
cmpsl
out
inc
push
inc
mov
das
cmp
imul
lret
arpl
dec
pop
dec
insb
lahf
push
out
inc
inc
cmp
ja
sbb
xchg
ja
inc
shll
ss
mov
aaa
mov
dec
sbb
push
bound
xchg
div
loope
ds
je
pop
inc
unpcklps
cmpsl
lsl
inc
aaa
in
dec
les
or
inc
push
insl
rorl
sub
jo
out
nop
push
scas
lahf
inc
imul
mov
jo
outsl
push
aas
inc
jo
xor
inc
fiadds
filds
add
inc
jl
sub
outsb
jmp
pop
nopl
pop
imul
push
and
xor
js
and
addr16
bound
mov
out
push
das
out
out
shl
mov
adc
push
inc
cmp
jns
jae
mov
jl
push
out
mov
mov
mov
imul
popf
xor
out
jns
insl
inc
mov
add
ja
shl
lods
repz
outsb
jo
iret
clc
popw
popa
pop
arpl
jp
daa
shl
ljmp
fwait
add
jl
outsl
lret
jl
loopne
lock
bound
jns
shll
roll
push
sti
sarl
stos
inc
mov
ret
xchg
imul
iret
mov
imul
cwtl
loopne
jl
xchg
jl
mov
xchg
into
xor
ret
adc
out
sbb
jl
lods
clc
js
xor
inc
add
ds
outsl
pop
and
inc
dec
mov
stos
addl
add
adc
push
ficoms
xchg
roll
sbb
mov
push
jl
daa
ds
daa
icebp
mov
jns
jecxz
sbb
das
jae
insl
daa
inc
test
aas
mov
push
inc
add
inc
pop
das
js
aam
stos
pop
mov
xorl
lods
ret
pop
pop
cmpsl
sbb
lcall
jge
aaa
push
xchg
add
mov
or
xchg
mov
or
pop
aaa
pop
pop
fwait
push
pop
popa
inc
aas
lcall
and
loop
sbb
dec
js
push
add
imul
inc
add
dec
push
lret
int
aam
dec
sbb
dec
add
push
sbb
cmovbe
inc
add
xchg
ss
xor
and
rolb
xchg
ss
shll
mov
push
xlat
jle
push
aad
mov
ds
mov
out
cmp
or
and
mov
out
mov
push
test
push
xchg
cs
jge
aam
ds
xor
pop
imul
idivl
test
add
lds
dec
into
lods
pop
xchg
mov
mov
es
sarl
xlat
push
pop
dec
jmp
push
push
pop
mov
or
push
xor
jns
out
dec
pop
outsl
bound
dec
negl
push
push
pop
sti
ficoms
inc
jg
aaa
dec
and
cmp
inc
daa
setp
movsl
fwait
pop
pop
jae
ret
and
xorl
pop
popa
mov
mov
jge
push
mov
arpl
add
adc
sub
adcl
popa
lret
push
out
jae
push
push
and
outsl
les
cwtl
push
gs
insl
pusha
push
popa
jne
or
jge
or
and
dec
bound
xor
scas
popa
sbb
pop
fldcw
jno
sbb
jb
jns
sbb
pop
push
pop
mov
mov
xchg
pushf
mov
repz
out
mov
sbb
pusha
sahf
bound
jne
into
outsb
les
add
pop
pop
out
jno
dec
loope
cmp
ds
mov
cmpsb
push
jo
jb
outsb
jb
out
jge
and
ss
sbb
pop
insb
imul
cmp
and
jae
imul
cmp
fs
adc
xor
push
inc
xorb
loope
and
ss
cmp
pop
inc
cwtl
or
imul
frstor
sub
ja
incb
and
sbb
jo
mov
fcom
test
mov
sub
xchg
push
mov
bound
ret
fsubl
inc
out
dec
push
inc
daa
call
js
or
hlt
dec
aas
mov
sub
mov
test
shlb
adc
pop
or
jnp
cmpsl
imul
or
cmp
add
adc
fiadds
cmpb
push
adc
ja
jae
xchg
pop
and
mov
mov
scas
mov
jbe
inc
ja
push
xchg
iret
push
les
mull
or
negl
sbb
icebp
ja
aas
and
and
fs
push
xchg
push
imul
addb
mov
xorl
or
pop
xchg
mov
aaa
ret
adc
sub
dec
xchg
addb
and
es
inc
das
mov
adc
and
call
mov
mov
dec
jno
rcll
roll
push
push
daa
cmp
movsb
outsb
dec
pop
pop
dec
icebp
push
loope
dec
sti
xchg
mov
inc
xchg
inc
fwait
movsb
add
jp
lds
inc
inc
push
xchg
outsb
popf
addr16
orl
mov
xchg
pop
imul
imul
push
xchg
rorb
push
adc
mov
jg
cmp
push
popa
and
and
cs
gs
shrb
add
arpl
outsb
aad
jp
ret
in
data16
push
jecxz
sbb
push
ret
jnp
pop
bound
inc
nop
or
aas
jae
mov
jb
fs
xchg
testb
stc
push
jle
sbb
cmpsl
cmpsb
push
sbb
pop
hlt
cli
fs
sub
aaa
scas
pop
cmp
loopne
out
outsl
push
loopne
mov
dec
data16
aaa
push
or
dec
mov
inc
dec
mov
jae
push
xchg
dec
pop
call
pop
push
add
adc
imul
pop
lods
sarb
arpl
hlt
jge
pop
sti
jnp
inc
das
aad
add
sahf
jg
push
call
inc
aas
inc
push
fisubrl
mov
push
stos
mov
pop
adc
sti
dec
mov
testl
fs
mov
jb
pop
jns
jno
insl
pop
sub
pop
lods
mov
es
jns
or
sbb
scas
adc
and
imul
push
push
iret
sub
mov
dec
imul
je
inc
mov
and
adc
lret
rorb
jnp
push
cmpsb
sbb
imul
cmc
push
cs
cmpsl
push
cs
xor
cmp
jmp
lods
divb
cld
mov
inc
pop
fisttps
sub
fisttps
out
and
xlat
jbe
or
push
imul
aas
imul
adc
pop
inc
pop
mov
add
add
cmpsl
aaa
inc
jno
frstor
das
mov
aaa
gs
rolb
sbb
mov
adc
mov
xchg
mov
xchg
inc
addr16
push
icebp
nop
inc
dec
jns
mov
imul
arpl
jae
sub
fists
divb
test
subb
popa
mov
xchg
push
daa
shll
mov
pusha
loopne
push
lahf
dec
imul
shrl
mov
push
ficoms
mov
adc
mov
shll
jmp
pop
jmp
inc
imul
xchg
lods
pop
fildll
ss
aad
es
roll
xchg
xor
pop
sbb
and
cmp
xchg
iret
push
mov
mov
aas
push
xchg
and
xor
mov
aas
incl
cld
les
mull
sub
jmp
xchg
jne
arpl
imul
pop
cmp
addr16
pop
sub
push
push
movsb
clc
dec
and
adc
xchg
push
out
mov
fwait
ds
mov
add
pop
inc
imul
dec
jae
arpl
fs
add
add
jbe
push
xor
pop
in
mov
fistl
out
das
xor
inc
xor
cwtl
sub
pop
fs
cmp
lret
push
or
sbb
dec
ret
imul
pop
lea
insl
push
lcall
icebp
mov
xlat
jge
adc
popa
xchg
mov
push
fwait
lret
int3
sbb
mov
or
inc
addr16
push
or
dec
sub
inc
sub
mov
imul
inc
loope
inc
fwait
xlat
movsl
sbb
fisttpl
and
stos
push
lods
or
push
pop
out
xchg
push
loope
sti
or
or
inc
cmp
aas
ja
push
mov
mov
xor
xor
sub
dec
or
and
inc
pop
sarl
stos
xorb
inc
js
sahf
lcall
adc
es
push
mov
mov
pop
minps
add
push
jmp
mov
add
add
ret
push
mov
test
repz
cmpsl
xchg
ja
js
jbe
push
fs
or
notl
and
dec
iret
outsl
iret
mov
pop
addr16
mov
pop
rcrl
mov
xchg
arpl
pop
jne,pt
or
add
jbe
push
pop
fistpll
out
jno
push
fucom
jmp
pop
mov
test
pop
fildl
inc
cwtl
cmp
sarl
inc
add
xchg
repz
sti
in
mov
jg
mov
ds
out
push
ss
aad
pop
mov
cmp
out
xor
jmp
int
mov
or
cmovno
fists
ret
fdivrs
and
sub
mov
ret
add
arpl
fiadds
pop
cmp
arpl
mov
cmp
inc
mov
sub
jo
pop
xlat
ja
push
jae
jae
cmp
mov
push
sbb
sbbl
pop
jo
and
mov
cmp
adc
lods
fdivs
xchg
scas
cwtl
mov
adc
loope
add
ljmp
ret
xor
pop
imul
sub
fsubrl
mov
loopne
lahf
aas
scas
mov
clc
les
mov
xchg
lea
or
add
and
pop
mov
or
mov
das
adc
xor
pop
lods
push
push
xor
and
daa
mov
fwait
push
mov
add
lahf
pop
arpl
inc
lods
add
jnp
iret
and
jnp
jge
shlb
xor
xor
and
fs
data16
lods
mov
movsb
cmp
jo
mov
pop
jle
cmc
push
lods
pop
insl
das
aaa
cmp
dec
loopne
ffreep
jae
mov
add
mov
fsubrl
bound
mov
fisubl
bound
jnp
sub
pop
or
shlb
inc
repz
jb
js
or
pop
popf
mov
in
stos
inc
pushf
dec
pop
and
stos
in
cltd
lods
pop
dec
and
test
xchg
adc
test
scas
xchg
test
xchg
mov
xchg
push
leave
sub
cmpsb
test
sub
and
cmp
cltd
dec
pop
in
movsb
cwtl
push
leave
stos
in
hlt
mov
and
in
lods
mov
scas
add
mov
pusha
or
mov
fs
push
repnz
lahf
jo
pop
and
stos
in
cltd
subb
push
leave
fcomps
jns
fcompl
xor
fwait
push
jb
dec
mov
scas
xchg
test
dec
xor
test
push
leave
push
pop
or
ret
adc
testl
mov
dec
dec
imul
jg
pop
clc
imul
push
sbb
mov
adc
sbb
lret
pop
imul
lods
xlat
shrb
push
xor
cmp
add
inc
mov
insb
pop
dec
iret
dec
andl
xchg
fildll
inc
mov
inc
xor
push
cmpsl
pop
dec
pop
adc
mov
aaa
mov
mov
dec
mov
and
aas
lea
lea
movsl
repz
adc
mov
test
insl
push
imull
cmpsl
inc
sbb
adc
push
sub
inc
mov
mov
or
mov
mov
cmpsl
inc
and
popa
das
bound
outsl
scas
inc
arpl
in
ss
push
scas
addr16
stos
cltd
aas
xchg
pop
test
neg
scas
stos
mov
fimuls
cmpsl
ret
mov
fbld
inc
pop
aaa
and
xchg
inc
mov
xor
jp
mov
mov
js
sbb
insb
xor
ljmp
ret
mov
outsl
shl
inc
iret
aaa
vmovhps
scas
push
insb
andb
das
push
inc
mov
pushf
ret
add
lahf
adc
add
jmp
xchg
gs
add
inc
pop
loope
pop
pushl
mov
jg
aaa
add
imul
mov
inc
fildll
pop
jmp
inc
aas
push
sbb
push
and
mov
mov
mov
rclb
outsl
jbe
inc
mov
insl
push
dec
push
xlat
fwait
ret
push
call
jae
sub
adc
add
inc
pavgb
fcomps
out
and
cmp
sbb
mov
sarl
pop
rcl
sub
sub
outsb
push
xchg
cmp
xchg
push
lret
sbb
jmp
add
adc
inc
sbb
adc
dec
sbb
lret
sti
jne
addr16
je
fs
gs
sbb
xor
insl
je
push
bound
push
outsb
popa
inc
gs
push
jo
push
adc
dec
orl
dec
mov
inc
push
mov
mov
lock
les
sti
ss
add
dec
bound
jae
js
mov
dec
js
xor
data16
insl
add
lret
test
xchg
jo
shll
iret
and
jecxz
xor
sub
fnstsw
pop
xchg
and
add
mov
push
lods
outsl
dec
inc
dec
out
cmpsl
lret
push
mov
cltd
cmpsb
sti
sub
int
jns
mov
out
sahf
imulb
push
inc
pop
and
xor
pop
push
or
mov
push
test
inc
xlat
popa
adc
lahf
jl
mov
bound
jb
test
add
sbb
imul
das
test
push
or
mov
lods
push
mov
push
pop
nop
sub
mov
mov
xlat
pop
sub
shlb
aas
insb
sub
cmp
jns
xor
xor
or
ja
jnp
adc
pusha
repnz
dec
cmovno
das
fistl
or
popa
inc
imul
add
or
push
jns
inc
fiaddl
inc
xchg
ret
inc
ss
pop
mov
push
or
fwait
lcall
test
idivl
adc
jbe
shl
push
mov
push
out
dec
imul
nop
das
xchg
cmovbe
shl
inc
jo
ret
scas
test
outsl
xchg
aaa
jo
lods
stos
rol
mov
mov
stos
xor
andl
xchg
pop
dec
test
pop
insl
lock
xchg
ja
dec
cmpsb
loop
mov
push
bound
push
mov
push
cs
cmp
mov
xor
out
dec
add
es
push
xchg
psubsb
xor
cmp
jb
inc
xchg
cmp
paddsw
inc
pop
ret
fs
dec
stos
push
jbe
loop
je
xor
jecxz
out
pop
jg
shlb
mov
inc
js
pusha
jns
inc
lcall
cmp
arpl
imul
ja
pop
add
dec
or
fiadds
mov
ss
push
sbb
dec
mov
bound
xor
mov
incb
repz
inc
ffree
inc
cs
lret
jb
and
cmp
push
xor
xchg
ds
outsb
sbbl
data16
mov
into
and
jnp
lcall
out
pop
adc
inc
mov
cmp
testb
mov
xor
push
mov
xlat
or
loop
imul
testl
mov
push
es
ss
cmp
pop
push
push
xor
dec
jb
sbb
sti
lock
inc
pop
dec
es
das
add
xor
fbld
data16
inc
pop
push
ret
sti
mov
iret
jns
dec
cs
sahf
ret
push
sbb
push
outsl
push
push
ficoms
sub
push
fidivrs
cs
mov
inc
ja,pn
xor
mov
jp,pt
jp
ds
lods
mov
jp
dec
jg
dec
js
push
jl
xor
das
imul
js
outsl
pop
outsl
dec
xor
js
push
into
xor
and
and
test
and
dec
outsl
dec
mov
popl
js
lock
jnp
xor
jecxz
mov
jbe
push
inc
mov
ret
andl
or
incl
loope
test
adcb
add
fs
lock
mov
mov
add
scas
aad
jg
sub
fildl
ja
mov
push
inc
push
pop
push
push
int
lods
es
cltd
out
mov
and
test
stos
punpcklwd
sbb
xchg
push
fadds
xchg
sub
les
sub
imul
sti
repz
inc
add
sbb
pop
mov
loopne
sbb
inc
stos
scas
pop
rclb
cmpsb
mov
add
out
mov
jo
outsb
dec
daa
inc
fisttpl
xlat
sub
lahf
pop
sub
jno
push
sti
adc
pop
push
jmp
test
dec
pusha
iret
out
or
rolb
cmpsl
push
mov
out
mov
notl
add
push
fwait
ja
rolb
mov
jnp
push
dec
inc
mov
insb
outsl
popa
fs
outsl
in
mov
call
and
adc
pop
pop
mov
jg
sarb
mov
pusha
addr16
xor
iret
push
iret
xlat
lcall
mov
sbb
jle
lods
jo
pop
sbb
js
sub
and
add
or
fs
out
mov
xor
jle
into
sti
jae
sbb
add
pop
xor
out
jae
or
lods
pop
aas
jmp
idivl
sub
iret
imul
and
mov
lods
jns
out
push
cs
mov
lahf
out
add
jbe
inc
xlat
pop
insb
ja
pusha
cli
cmpsb
std
outsb
pop
cmp
jne
jo
arpl
xor
jg
push
inc
je
ja
xor
xor
push
add
aas
inc
adc
xchg
pop
mov
push
inc
jmp
xchg
lcall
lea
outsl
rclb
push
add
lods
pop
add
inc
xchg
pop
mov
xor
fiadds
push
sub
add
rorb
js
lock
aas
push
sbb
fwait
ja
sub
imul
ljmp
sbb
cmpl
push
addr16
or
mov
cmp
mov
arpl
ret
movsb
mov
push
mov
inc
xchg
les
adc
mov
repz
mov
iret
add
sub
xchg
push
push
xchg
mov
push
push
gs
test
adc
orl
jns
add
iret
mov
iret
fbld
dec
lods
daa
mov
repnz
outsb
dec
arpl
jae
push
popa
dec
xorl
mov
push
pop
outsl
pop
adc
jne
dec
cmp
xor
xlat
push
push
andl
imul
or
xchg
add
add
add
int
add
or
adc
fidivs
jns
and
sub
xor
data16
inc
mov
mov
mov
loopne
mov
popa
xchg
add
shrb
fldcw
ret
sub
shrb
xchg
pop
ss
data16
add
and
add
outsb
pop
sbb
lret
insb
ss
int
add
add
inc
jnp
scas
fyl2xp1
das
incl
lahf
add
das
xorl
mov
out
lea
outsb
shll
out
jmp
or
inc
adc
ds
add
dec
shrb
ds
inc
roll
add
jle
add
or
jg
push
pextrw
mov
add
das
dec
cmp
andb
inc
xor
mov
xchg
popw
cmp
outsl
insw
aaa
das
sub
jecxz
imul
iret
mov
orb
push
pop
push
mov
out
sbb
mov
jge
push
mov
mov
dec
mov
cmp
inc
imull
push
add
nop
add
pop
shlb
mov
mov
idiv
in
lcall
push
and
mov
add
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
sti
call
mov
inc
push
insl
ss
adc
cli
mov
sub
sub
jg
aas
cmp
mov
sbb
mov
ds
or
xor
pop
sbb
xor
mov
pop
insb
pusha
decl
mov
sbb
mov
cmp
dec
pop
dec
xchg
jecxz
dec
push
in
pusha
dec
mov
add
jg
nop
mov
pop
push
and
lret
adc
push
dec
cmp
add
sub
mov
daa
push
add
leave
xchg
test
inc
mov
xchg
inc
fadd
push
add
and
punpckhbw
in
push
fs
pop
mov
xor
jb
leave
sub
adc
imul
out
cmp
cmp
inc
sahf
dec
dec
sahf
les
dec
xor
dec
xchg
inc
outsl
adc
and
test
mov
lahf
xor
or
jo
xorl
mov
dec
mov
mov
arpl
adc
aad
sbb
cmp
jnp
cmp
xchg
cmp
sub
adc
filds
negl
inc
imul
addr16
stos
inc
cmpsb
clc
js
inc
mov
xor
out
cmp
mov
pop
movsb
inc
dec
imul
les
imul
pop
dec
or
cmp
popa
outsb
imul
dec
add
or
addl
or
push
mov
pop
adc
dec
xchg
inc
sub
xor
test
rcll
pop
dec
push
push
lock
scas
neg
je
and
cmp
lahf
fistpl
xor
or
gs
push
mov
sbb
and
rol
aas
aaa
adc
jne
inc
jmp
dec
sub
test
mov
mov
inc
out
in
mov
out
xchg
add
mov
pop
jb
pop
pop
dec
aam
fmuls
sub
cmp
xor
xlat
pop
stos
mov
stos
sub
xor
outsl
jbe
popa
pop
and
outsl
dec
fwait
test
inc
push
push
inc
outsl
inc
xchg
push
pop
or
dec
inc
arpl
test
push
mov
dec
test
bound
es
mov
test
pop
ds
push
dec
pop
data16
negl
mov
inc
push
cwtl
addb
insb
addr16
idivl
mov
xchg
fisubl
push
aam
cmp
repz
ljmp
in
jns
sub
jb
pop
decl
dec
pop
xor
add
jbe
loope
push
jecxz
push
test
cmp
outsb
inc
xchg
fstpt
repz
push
loop
inc
fiaddl
mov
ds
movntq
and
fidivrl
ja
insb
adcl
mov
in
add
ficoml
jb
jge
hlt
mov
out
mov
mov
mov
mov
cmpsb
nop
mov
outsb
and
ja
negl
jl
jae
dec
push
pusha
xor
cmpsl
stc
push
cs
push
cmp
mov
push
mov
xchg
ds
mov
aas
push
dec
cld
mov
push
jns
ret
testb
push
out
jae
mov
inc
push
fists
dec
jns
pop
lahf
push
mov
stc
dec
repz
inc
mov
fbld
cs
adc
addb
jnp
in
or
pop
adc
lods
push
sub
repz
imull
xor
fistpl
ss
call
pop
adc
push
inc
add
jo
mov
out
es
push
cmp
scas
dec
es
inc
cmp
cmp
sub
outsl
push
jl
repz
faddl
mov
ds
xor
cmpsl
shl
int
loope
xor
hlt
imul
push
pop
and
out
out
sahf
push
rclb
mov
lock
arpl
push
jnp
xlat
cmp
mov
testb
subl
push
sub
cmpsl
stc
mov
fildl
cmp
repz
jb
test
iret
out
or
xor
lds
pop
dec
sbb
scas
sub
mov
test
and
and
rcr
mov
jg
push
push
mov
xor
adc
mov
lds
mov
das
jbe
mov
loopne
mov
sub
int3
push
das
in
sti
and
pop
sbb
enter
adc
push
cmp
iret
pusha
or
mov
pop
adc
add
or
inc
sub
sub
mov
pop
lds
add
mov
lds
and
ja
outsb
outsb
inc
mov
xor
push
js
cmpsb
mov
imul
insl
gs
cmp
dec
xlat
push
dec
xchg
xchg
jp
mov
fwait
push
lods
les
inc
push
imul
or
jne
sub
xchg
aaa
sbb
fiaddl
mov
push
popa
lea
shlb
mov
dec
icebp
sbb
pop
inc
int
xchg
jbe
sub
pop
push
aam
push
adc
fnsave
push
daa
jb
lods
out
cmpsl
push
inc
xchg
nop
mov
adc
dec
jmp
inc
add
xor
fidivrl
pop
sti
mov
pop
sub
push
dec
pop
sbbl
adc
lahf
cmp
push
cmpsl
repnz
inc
mov
and
mov
cmp
push
jo
inc
pop
xor
pop
loop
test
pusha
jno
ret
mov
sbb
stos
mov
stos
in
mov
dec
xchg
cmp
daa
fs
dec
ret
jb
sbb
xchg
fdivrp
xor
test
add
mov
dec
inc
addr16
push
arpl
inc
add
mov
add
cmp
add
ljmp
push
ret
inc
aam
and
outsl
fsubs
dec
std
jno
pcmpgtb
jo
xor
sub
sub
add
outsb
push
jnp
jae
add
dec
and
jmp
pushl
and
movsl
adcb
lcall
pop
xorb
inc
call
shrl
add
scas
push
dec
insl
aam
repz
dec
adc
add
mov
pop
mov
aas
xchg
and
or
sbb
pop
pushl
aaa
mov
mov
scas
das
or
adc
inc
mov
jbe
rcrb
mov
pop
addr16
dec
aad
mov
xchg
inc
and
testb
or
inc
inc
inc
es
mov
and
mov
addr16
pop
ficoml
mov
cmp
jg
mov
inc
sub
push
push
pop
les
push
add
xchg
xorl
mov
mov
imul
clc
add
out
out
fcmovb
xchg
das
testl
scas
iret
popa
mov
rolb
mov
xchg
das
cmpsb
pusha
mov
pop
sbb
insb
sub
das
pop
pop
insb
sbb
or
pop
dec
push
push
mov
and
ret
pop
mov
mov
mov
add
arpl
jb
dec
add
arpl
out
jbe
stos
push
inc
or
xlat
and
fcompl
inc
xchg
add
dec
repnz
jg
hlt
jo
push
push
xor
mov
loope
in
cli
add
xor
pop
mov
jne
cmp
sbb
loopne
jecxz
jae
or
inc
cmp
or
repnz
lods
cmc
lods
ja
pop
push
inc
loopne
lea
inc
popa
mov
jp
aaa
jp
inc
pop
imul
daa
lock
pop
cmovae
pop
lds
lahf
inc
push
clc
push
dec
ljmp
xchg
push
iret
inc
cmpsl
push
xchg
divb
pop
mov
jmp
idivl
pop
arpl
inc
ja
pop
inc
mov
push
pop
jns
mov
inc
pop
ja
rcl
push
xlat
cmpsb
jl
gs
pop
das
adc
dec
dec
movb
or
popa
insl
lea
jo
je
add
addr16
jo
jae
daa
pop
jno
outsl
xor
push
or
mov
jae
insb
inc
inc
aas
pop
sub
mov
jns
je
jne
or
scas
das
or
scas
sub
adc
out
and
dec
jae
mov
push
insl
mov
dec
incl
push
mov
sub
ret
daa
inc
punpckhwd
arpl
dec
outsb
push
nop
andb
xor
add
or
aas
dec
pop
sub
mov
das
imull
xor
pop
and
mov
sbb
aam
sub
insb
lds
jg
sub
adc
cmpl
ljmp
push
les
push
outsb
add
pop
mov
dec
pop
dec
cmovp
mov
sub
test
mov
aam
push
push
jb
push
sahf
adc
mov
mov
mov
pusha
or
fistl
cwtl
out
inc
outsl
outsb
or
aaa
inc
insb
test
sysret
jno
push
jp
inc
outsb
jo
inc
adc
xchg
sub
mov
aaa
jbe
stos
out
push
arpl
add
scas
mulb
inc
push
dec
inc
dec
push
xchg
loop
and
xor
pop
ja
andl
fiadds
jg
ret
cmp
jle
add
and
push
dec
into
add
add
test
jb
inc
fdivrl
adc
inc
mov
or
xchg
rcrb
mov
add
ret
or
add
pop
daa
daa
daa
push
and
pushw
push
inc
push
pop
inc
inc
inc
push
inc
pop
and
ds
add
out
dec
es
js
insb
cwtl
pop
out
shrb
pop
push
and
fisubl
sbbb
les
add
sbb
aas
arpl
pop
gs
pusha
nop
loopne
out
ds
push
mov
lods
pop
push
sbb
jo
ret
add
mov
push
push
inc
add
incb
lea
dec
and
or
jp
pushl
mov
stc
pop
dec
rolb
pop
sbb
mov
lahf
test
push
and
stc
mov
push
pushf
sbb
lahf
shrl
imulb
sub
clc
mov
daa
sbb
loopne
fadd
push
cmpsl
sbb
shlb
ljmp
mov
push
mov
clc
out
cmpb
es
sti
mov
iret
outsl
icebp
mov
xchg
or
cmpsl
adc
cmp
push
daa
call
mov
push
filds
enter
insb
dec
mov
dec
lock
adc
push
loop
scas
inc
jb
rcr
or
push
imul
inc
outsl
arpl
popa
push
test
je
and
and
arpl
mov
dec
or
je
mov
cmp
je
and
je
mov
popa
stos
orl
out
inc
fdivrl
cwtl
and
xor
and
jo
jo
test
dec
inc
push
sbb
xor
and
push
push
pop
jbe
add
outsl
fs
gs
jo
or
mov
mov
push
addl
jne
daa
adc
add
or
addr16
and
push
mov
pop
gs
inc
or
cmpsl
test
negb
popa
pop
pop
inc
popa
imul
xor
sbb
outsl
jo
popa
imul
fstl
dec
sub
jno
xlat
sub
mov
adc
xchg
dec
inc
xadd
pushf
cmp
sti
sbb
inc
cmovo
fcmovnb
adc
cmpb
aas
nop
jo
xchg
pop
pavgb
jp
sub
add
mov
jg
inc
test
lock
popa
add
mov
fmul
sbb
cld
popl
cmp
ret
add
push
aas
aaa
mov
push
addr16
dec
inc
insl
out
int
add
push
push
pusha
push
jl
or
lods
inc
add
mov
test
add
jl
idivb
daa
mov
fsub
xchg
cmp
call
mov
daa
outsl
inc
xchg
lods
test
push
xchg
daa
xchg
inc
iret
jnp
jge
test
push
cld
push
xor
push
imul
dec
int3
scas
fucomip
sub
sbb
pop
pushf
out
fimuls
jb
xchg
mov
mov
dec
fdivrl
xor
jg
orb
lahf
add
fsubr
xchg
pop
push
scas
pusha
push
push
mov
daa
iret
mov
negl
jno
and
out
xchg
lahf
clc
add
stos
sbb
inc
inc
add
call
insl
sbbl
out
sahf
outsl
xchg
push
in
pushf
push
mov
or
fisttpl
lahf
rcrb
out
sub
popa
out
addr16
ficomps
xchg
jo
jl
les
outsl
fiaddl
xchg
fnstsw
add
and
daa
add
xchg
enter
xchg
xchg
inc
add
pop
jl
xchg
push
push
pusha
push
mov
call
iret
insb
insl
ja
les
mov
addb
or
sbb
xchg
inc
add
scas
or
adc
ja
pop
in
mov
pop
push
in
mulb
mull
mov
cld
dec
xor
xchg
daa
mull
push
xchg
das
or
iret
in
add
push
shrb
jnp
sti
pop
pop
xor
daa
jl
or
addr16
jl
cmp
bnd
nop
jl
popa
insl
andl
in
xchg
rcrb
fcoml
and
in
dec
enter
push
and
les
out
mov
addr16
adc
daa
out
dec
enter
push
movsb
xchg
jo
mov
pop
and
aad
scas
add
push
pusha
aaa
jns
not
in
ds
cmp
aam
mov
xor
fwait
test
sub
cmp
insb
lods
mov
dec
aas
ja
pop
bnd
shrb
pop
enter
repnz
enter
int3
faddl
mov
and
or
sbb
sub
lahf
mov
fidivl
in
nop
addr16
pop
insb
jl
mov
nop
out
sahf
jl
mov
mov
int
jns
or
sbb
cs
cltd
test
shl
push
dec
jl
fwait
pop
pop
push
jo
push
mov
jl
push
fisttps
jns
mov
cmpsl
cld
mov
mov
and
pop
mov
in
xor
push
les
mov
hlt
push
dec
enter
pushf
pop
insb
push
dec
push
jg
lahf
out
sahf
js
lods
rorb
add
mov
lock
out
mov
movsb
adc
mov
popf
push
nop
or
cmp
push
test
movsb
stc
lods
sub
cwtl
sub
mov
fcoms
cwtl
cmp
repz
sahf
pushf
test
cmp
mov
inc
sahf
push
push
cmpsb
inc
stos
imul
inc
push
jl
nop
xchg
daa
movsb
sahf
mov
in
mov
dec
add
cs
enter
mov
pop
call
push
lods
sub
ja
movsb
stc
lahf
adc
test
dec
lahf
test
in
inc
aam
hlt
inc
cs
or
jge
and
xor
dec
mov
xorps
jg
enter
cwtl
js
pop
insb
push
pushf
mov
pop
enter
int3
faddl
clc
shlb
fwait
pop
jb
add
shll
xor
inc
mov
cltd
lods
lods
jg
xor
jge
test
in
nop
or
mov
pop
mov
fcomps
iret
test
enter
loop
nop
mov
out
imul
xchg
inc
jg
shrb
ds
repnz
jl
mov
mov
insb
or
sub
pop
rol
shl
mov
xchg
push
cmpsl
rol
and
push
cmp
push
dec
cmpsl
jg
bnd
iret
subb
js
mov
dec
add
out
mov
inc
cs
jl
bnd
loopne
movsb
sbb
sub
sub
loopne
nop
dec
lods
jg
adc
xchg
lahf
dec
jmp
js
ss
cmp
mov
iret
test
inc
lods
push
nop
movsl
adc
pop
imul
inc
nop
push
movsl
adc
push
les
mov
jb
jg
scas
jbe
iret
mov
out
or
loopne
xchg
mov
sbb
push
loopne
hlt
fiaddl
cmpsb
pop
lahf
fsubrs
jbe
iret
inc
lock
xor
and
movsl
scas
cmpsb
call
inc
push
cs
pusha
inc
in
pop
adc
lahf
pusha
inc
in
fwait
nop
iret
test
add
mov
mov
aam
jg
mov
push
lahf
mov
fidivl
lock
lcall
lock
jg
and
test
dec
cltd
fsubrs
push
add
inc
lock
test
sub
das
push
inc
jg
enter
sbb
nop
or
fdivrs
mov
push
dec
test
iret
lods
inc
fstp
rep
jg
fdivrl
mov
and
lahf
faddl
pop
dec
repz
int3
fmull
test
insb
inc
jmp
movsl
jbe
inc
xor
imul
in
sahf
or
nop
or
rclb
jl
out
shrb
dec
and
xor
mov
ja
aam
sbbl
push
bound
xor
pop
rcl
stc
or
lahf
ja
xor
mulb
lods
lahf
xor
test
mov
pusha
xchg
inc
imulb
aas
cwtl
incl
in
mov
mov
jae
out
rorb
pop
enter
out
and
lcall
xor
mov
sub
outsl
repz
enter
fs
push
enter
outsl
or
aas
lods
decl
xchg
xchg
pushf
inc
lock
loopnew
hlt
test
inc
sahf
adc
rcrb
push
xor
popl
es
ljmp
mov
sub
daa
aas
jae
mov
daa
addr16
sub
xchg
negl
mov
bound
enter
push
addr16
pop
add
int
pop
scas
iret
test
and
sub
fs
fsubrs
adc
subb
pop
mov
inc
inc
mov
cmp
outsb
mov
dec
hlt
mov
mov
or
aam
push
pop
xlat
data16
bound
fsub
cltd
fcomps
push
mov
addr16
roll
add
dec
sub
fnstcw
dec
xchg
sub
mov
xor
mov
dec
jns
xchg
add
cs
pop
iret
mov
pop
mov
push
insb
ds
jns
push
or
mov
dec
repz
mov
aam
mov
shlb
xor
mov
push
push
mov
jns
jns
mov
mov
xor
out
les
mov
xor
iret
repz
inc
and
enter
cmc
and
push
adc
mov
insb
movsl
addr16
inc
les
fnstcw
rol
add
cmp
add
imul
mov
or
scas
in
mov
jg
out
mov
xchg
fmuls
sbb
push
jb
inc
mov
roll
ja
insl
mov
ja
xchg
and
add
and
dec
outsl
pop
leave
and
mov
inc
push
pushf
and
in
inc
inc
loopne
xchg
cld
mov
add
inc
insb
adc
and
mov
movsl
jge
lcall
insb
mov
outsl
add
cmp
filds
pushf
in
pop
or
cmp
xchg
pop
mov
add
scas
xorb
outsb
mov
fbstp
jbe
dec
mov
movsb
mov
push
mov
pop
push
les
add
insb
push
ljmp
add
sbb
or
enter
mov
ret
sarb
outsl
add
sub
mov
jo
sub
dec
xchg
out
aaa
cwtl
mov
sahf
out
mov
mov
and
mov
sub
xchg
cmpb
or
ja
mov
sub
adc
jg
daa
push
xor
sub
and
sbb
sub
fildll
filds
daa
push
xor
and
pop
popa
xor
push
jmp
sub
sub
scas
xchg
in
out
ret
sub
add
sahf
cmpsl
pop
cmp
add
xlat
push
mov
adc
dec
sahf
or
dec
ss
es
in
sahf
outsl
movsb
idiv
leave
mov
or
add
pop
call
sarb
jmp
xor
push
sub
cmp
xchg
push
mov
pushf
push
adcb
scas
sbb
xchg
push
xor
adcl
mov
ss
es
dec
lahf
xchg
push
or
sub
mov
and
mov
mov
xchg
daa
fistpll
xchg
mov
mov
fisubrl
adc
pop
and
enter
sbb
dec
mov
cmpsl
push
and
pushf
cmp
push
xlat
scas
loope
mov
xchg
dec
sbb
negb
or
lcall
sbb
dec
loopne
fs
xchg
mov
mov
or
mov
add
inc
shrb
mov
cmp
div
jg
add
pop
pop
mov
scas
rcrb
xchg
xor
aam
aaa
mov
push
sbb
xor
or
mov
cmp
outsl
add
scas
dec
mov
dec
push
pushf
nop
mov
mov
aam
dec
jnp
jo
daa
add
jg
sub
mov
shlb
leave
mov
xchg
inc
jg
addr16
iret
test
je
mov
push
jb
add
les
sub
mov
push
cld
push
rol
lods
aad
mov
aaa
lds
pop
pop
mov
xchg
adc
ss
insb
rorl
aaa
add
testl
push
hlt
cmpsb
or
mov
dec
xchg
add
iret
cltd
mov
out
jl
daa
or
mov
adc
mov
add
push
lcall
push
and
in
ret
cwtl
rcrl
or
test
scas
add
decb
ret
xchg
mov
or
ss
inc
xchg
ret
push
ret
outsl
add
aaa
imul
mov
nop
fwait
mov
rolb
cmpsb
add
add
scas
in
dec
add
shll
les
and
mov
add
mov
add
sub
orb
lcall
adc
inc
or
out
pop
rol
out
aam
or
add
cmpsl
inc
lods
add
daa
aas
xor
andl
push
sbb
mov
mov
add
gs
test
dec
divl
mov
inc
xchg
pusha
loopne
call
xor
lahf
mov
je
mov
mov
incl
mov
xor
lahf
nop
or
pop
enter
sub
push
push
lahf
lods
shrb
ja
enter
mov
adc
pushf
push
in
inc
out
add
xchg
in
dec
test
int3
decl
jo
addr16
lock
push
lcall
adc
sbb
cmp
out
loopne
xor
push
test
iret
repz
jo
jl
out
shl
pop
sub
repz
dec
jl
fldl
pop
sahf
out
sahf
sub
out
out
fidivrs
pusha
mov
mov
adc
mov
ds
arpl
sbb
in
iret
sarl
iret
ljmp
jns
leave
cmc
and
repz
repz
mov
jmp
jns
out
push
iret
repz
pop
imul
sahf
out
sbb
jl
lret
stc
cmp
repnz
icebp
imul
roll
insb
sarl
inc
test
sbb
iret
repz
pusha
subl
jns
outsb
pop
lahf
ret
outsl
lcall
dec
jo
xor
out
mov
cli
ja
popf
xor
cmpsl
stc
jb,pt
lods
or
jns
iret
repz
xor
out
fstl
jne
jp
imul
jbe
mov
in
ja
fnop
js
repz
adc
mov
sbb
sahf
pop
xchg
mov
sahf
out
cmp
mov
out
idivl
dec
jge
push
cmpsl
jecxz
repz
sub
xchg
mov
xor
jg
orb
jl
jns
add
out
ds
subl
leave
sub
filds
sahf
cmpsl
stc
cmp
adc
dec
repz
or
sahf
cmpsl
stc
daa
mov
mov
repz
mov
std
xor
jae
out
mov
ret
out
lea
int
mov
movsb
clc
out
ds
nop
mov
out
cmp
adc
jl
ljmp
jo
mov
xchg
pop
sahf
cmpsl
stc
cmp
or
cmp
sarl
dec
jg
int
jns
loope
push
push
cmpsb
in
imul
pop
cltd
push
test
les
fwait
ss
addr16
aas
pushf
ds
repz
es
cmp
out
jns
pop
lahf
inc
jne
mov
aaa
mov
dec
repz
mov
push
mov
cmp
repz
fdivr
pop
cmpsb
xchg
cmp
repz
and
sahf
cmpsl
stc
and
test
cmp
cmpsb
stc
cmp
out
ja
cmpsl
loop
lods
sarl
bound
fwait
out
ds
mov
outsb
scas
cmpsb
push
sbb
out
xor
out
cmp
out
add
xchg
mov
mov
mov
int
popf
ret
imulb
inc
mov
ss
int3
lret
push
jp
mov
jo
shlb
xchg
outsb
fwait
add
decb
nopl
sub
push
aas
aam
jb
in
mov
aas
loop
inc
xor
dec
pop
add
inc
notl
push
sub
jns
adcl
sbb
push
cmp
mov
and
shrb
xchg
pop
rcll
bound
pop
enter
arpl
fnstsw
mov
jle
ret
jle
dec
mov
sub
jg
jg
jnp
and
cmp
aas
rcll
and
xchg
sub
and
scas
dec
jb
dec
push
pushf
and
mov
mov
rcrb
lahf
mov
add
flds
sbb
loop
test
mov
jns
das
test
cmpsl
nop
adc
cmc
mov
push
adc
sub
push
aas
test
inc
fs
cmp
and
in
scas
mov
fldl
inc
pop
daa
mov
jge
inc
inc
daa
nopl
inc
pop
sarl
lods
and
pop
push
mov
fcoml
into
pop
dec
sub
scas
rorb
sarb
adc
inc
inc
mov
rorb
push
pushf
mov
add
push
lahf
js
sahf
orl
mov
mov
shrb
and
adc
cmp
push
addb
jne
xor
push
ja
cmp
pop
pushf
subps
scas
push
fsubr
xchg
push
push
pop
loopne
add
and
inc
shll
iret
ficomps
xor
or
or
cmp
lahf
push
dec
pop
stos
dec
mov
in
add
iret
cmp
rcr
and
sub
sbb
daa
cmp
push
pop
out
push
dec
lcall
inc
addr16
insb
fbstp
xlat
sahf
fucomi
mov
addr16
dec
cs
mov
fimull
aad
fabs
or
dec
dec
addr16
pop
lahf
mov
mov
daa
daa
arpl
scas
cmp
push
push
push
das
mov
cmp
mov
jp
inc
dec
mov
out
xchg
mov
fcmovu
push
nop
decb
in
and
call
push
inc
adc
scas
out
popf
mov
outsl
add
nop
inc
add
das
daa
jg
test
into
je
mov
shll
xchg
out
das
aaa
lahf
add
push
lock
clc
notl
fmuls
pop
sbb
push
rorl
or
pop
mov
pop
daa
cmp
fucomip
inc
or
dec
insl
push
ret
or
push
outsl
mov
or
dec
shrl
add
aas
lahf
pop
rolb
xchg
adc
dec
push
adc
push
mov
jl
jecxz
imul
push
loopne
pop
ja
sub
aaa
push
pop
inc
push
push
out
sahf
add
pop
pop
add
add
or
repnz
dec
jb
mov
sub
pusha
fisubl
fisubl
push
mov
mov
xchg
mov
in
push
std
mov
add
and
xor
nop
shl
pop
popa
filds
mov
mov
cmp
fisttpl
lods
push
iret
aam
dec
sbb
and
mov
mov
in
fdivr
mov
cltd
in
outsb
or
xchg
leave
leave
enter
inc
dec
mov
decl
xchg
sbb
pushf
jmp
in
jbe
cmpsl
mov
in
stos
add
in
out
xor
out
ficomps
fsubrl
pmaxsw
pop
pop
roll
arpl
xchg
and
arpl
aas
arpl
cmp
in
arpl
add
jmp
imul
push
or
repz
xchg
or
push
mov
push
mov
inc
daa
in
pop
loopne
xchg
fcomi
ud0
adc
or
lahf
cmp
jns
neg
cmovle
xchg
pop
add
in
add
sub
xor
ficoms
push
add
jg
fbstp
dec
ds
cmpsl
inc
fildll
mov
xor
call
ja
outsl
and
iret
repz
push
add
add
cmp
push
pop
pusha
or
repnz
ror
leave
leave
shl
xchg
pushf
stos
es
mov
mov
inc
loopne
nop
inc
repnz
jmp
mov
inc
dec
mov
dec
loopne
inc
clc
loopne
ret
xchg
call
data16
jmp
outsl
inc
pop
fnsave
and
push
iret
data16
out
push
add
mov
xlat
nop
popw
dec
jnp
aas
fwait
popl
cmpsl
pusha
inc
pop
imul
xchg
inc
rolb
sbb
imul
in
addr16
ja
inc
pop
xor
adc
addr16
insl
pop
leave
push
mov
daa
mov
cwtl
lock
xchg
xchg
pop
pusha
mov
adc
loop
and
fidivrs
mov
jecxz
jecxz
imul
and
or
push
hlt
loopne
repnz
and
inc
jbe
push
pop
xchg
fwait
in
pushf
push
jae
in
push
push
lock
mov
jne
jge
popl
push
jg
push
add
cs
pusha
xchg
cmp
filds
enter
pop
jne
inc
in
or
xor
push
in
or
imul
xchg
pop
mov
decb
xchg
in
mov
inc
in
xchg
mov
or
xchg
push
jb
mov
out
add
pusha
jo
insb
mov
ja
push
addr16
push
addr16
or
add
jae
inc
ja
in
inc
repnz
fisttps
out
push
leave
add
addr16
pusha
jp
leave
xor
jo
fucomi
jmp
xchg
mov
push
and
out
movsb
out
dec
leave
mov
call
adc
scas
xor
mov
dec
mov
push
push
dec
cs
cwtl
jg
loopne
push
sbb
push
addr16
repz
add
add
repnz
repz
add
jns
js
imul
enter
in
lahf
xlat
xchg
imul
jne
push
push
adc
xchg
shrl
jmp
push
jmp
pushf
and
pop
cmp
dec
adc
in
jmp
lods
cmp
fcompl
je
stc
cmp
push
pop
push
sub
and
in
fs
ret
add
push
mov
call
push
mov
insl
faddl
dec
and
cmp
jmp
out
pop
and
xor
addr16
int
xchg
cmpsb
mov
leave
jno
fisubl
in
pop
xlat
mov
rclb
outsb
call
xchg
dec
and
and
xchg
push
test
pop
scas
js
in
inc
fstl
or
cmp
or
rclb
adc
imul
in
mov
pop
daa
mov
mov
push
in
mov
xchg
dec
je
jo
aaa
pop
pop
mov
pushf
inc
das
je
push
ja
cmpsb
scas
mov
dec
cmpsb
mov
js
push
daa
inc
add
mov
out
cmpsl
inc
push
dec
cmp
aaa
dec
out
in
inc
enter
pop
out
jo
scas
and
xchg
dec
movsb
xchg
mov
cmp
pop
ljmp
and
sbb
adc
dec
sahf
xlat
pop
and
add
stc
dec
lahf
dec
jno
popa
xchg
iret
enter
imul
inc
daa
xchg
jno
repnz
mov
add
add
push
mov
andb
xchg
push
push
fsubr
ja
xchg
lahf
jo
jno
shlb
jno
jns
xchg
xchg
jno
jno
jb
push
push
in
xchg
sbb
push
and
dec
xor
sub
dec
pop
jb
test
leave
pushf
lock
push
cmpsb
in
lods
dec
add
mov
cmpsl
mov
inc
ds
lock
push
dec
enter
out
imul
fucomp
push
lahf
cli
jb
dec
and
movbe
jae
mov
popa
jae
push
punpckhbw
jbe
ja
iret
jae
cs
repnz
pop
push
add
mov
mov
das
into
je
movlps
mov
adc
arpl
cmp
je
mov
pushf
pop
xor
jne
loop
and
test
adc
scas
jns
addr16
decl
push
aad
repz
clc
adc
xchg
cmp
jne
push
mov
jne
push
das
popa
jne
push
inc
mov
shrb
leave
pop
pop
loope
jbe
pop
in
cld
iret
pop
jbe
hlt
push
in
jbe
jbe
dec
adc
fs
inc
cmpsb
ja
jp
sarb
xlat
das
pushf
jbe
push
xor
hlt
fidivl
mov
wbinvd
ja
cmp
sbb
fucomip
xchg
or
push
add
jmp
cmp
pop
aas
arpl
and
push
push
cmc
nop
cmpsl
repz
test
add
jns
leave
ror
add
mov
cs
hlt
jg
and
or
js
jns
sahf
and
sub
push
cmp
in
in
dec
das
push
or
mov
das
js
or
jae
cmp
mov
cltd
movsb
ds
iret
adc
js
xchg
jl
adc
idiv
push
or
int
xlat
dec
cmp
addr16
addr16
jns
cmpsl
sbb
jns
push
add
mov
sbbl
mov
cmp
cltd
mov
pop
test
or
leave
dec
int3
xlat
loop
pop
daa
or
mov
mov
push
cmpsb
push
mov
ljmp
add
push
inc
push
push
or
jae
jle
add
xchg
je
out
sub
cmpsl
push
clc
mov
push
out
xchg
inc
mov
push
rorb
scas
loopne
mov
jmp
in
stc
stc
stc
outsl
mov
cli
movl
and
jnp
stc
fbld
or
cmp
inc
push
add
jnp
test
fistpl
imul
xchg
outsb
push
mov
or
scas
dec
cli
jg
dec
dec
dec
idiv
pop
jl
jns
repz
add
add
mov
das
jl
aaa
sbb
insl
notb
xlat
imul
imul
sbb
popf
or
mov
mov
loopne
leave
xchg
sti
fldz
fmull
in
xchg
pop
add
and
mov
sbb
jge
ficoml
jge
jge
mov
and
jge
jb
fs
hlt
mov
cld
dec
xorb
dec
fdivrs
adc
dec
dec
cld
or
xchg
xor
iret
jle
sbb
jle
ret
mov
sub
pushl
xchg
fildl
ja
daa
cmp
lock
inc
mov
inc
std
daa
pop
dec
and
iret
fucom
aad
or
in
iret
jo
jg
mov
cmp
jg
push
aaa
pop
sub
sub
cmp
repz
add
cmp
leave
repz
or
iret
repz
jo
js
cmpb
repz
mov
repz
mov
repnz
fwait
unpckhps
mov
es
jg
sbb
mov
jmp
and
aas
loop
cmp
sbb
movsb
insb
push
mov
inc
xor
push
mov
fdivr
jecxz
mov
outsb
pmaxsw
and
jb
rcll
addr16
dec
aad
xchg
pop
pushf
mov
pop
sub
add
cvtps2pd
cmp
das
sub
cmp
fnstsw
dec
addr16
add
jb
add
add
xorl
adc
xchg
mov
mov
xlat
mov
mov
dec
or
jns
jns
fimuls
out
lret
movsb
fnstsw
clts
cmpl
aam
dec
fimuls
dec
incb
decl
arpl
lahf
das
jbe
push
xchg
pop
pop
addr16
dec
les
or
ja
ds
pop
or
push
andb
out
popf
adc
adc
ja
xchg
in
adc
mov
int
adc
lahf
rorl
push
and
scas
xchg
push
add
jmp
iret
mov
dec
pop
pop
push
add
in
cmp
insl
or
dec
sahf
xchg
xchg
add
dec
cs
add
dec
test
mov
mov
loop
clc
fcomip
push
lcall
add
in
xor
loopne
add
scas
add
iret
pop
test
push
jae
in
into
adc
sbb
xchg
xchg
pop
dec
add
das
nop
test
test
out
out
pushf
outsb
iret
out
mov
add
pop
loop
lcall
scas
mov
or
or
xadd
out
xchg
mul
aas
and
adc
push
add
cmp
repz
add
outsl
repz
repz
iret
repz
popf
or
fsubr
cmp
call
test
push
add
dec
xchg
adc
mov
das
inc
imul
filds
xchg
xorl
or
cs
xchg
xchg
fs
pop
ja
jnp
xchg
cmp
mov
pop
lahf
add
fwait
in
out
push
aam
sbb
xchg
fldt
fidivrs
aam
xchg
mov
mov
decl
xchg
orl
mov
push
mov
dec
or
daa
mov
setnp
jmp
dec
addr16
decl
mov
dec
repnz
add
js
mov
mov
daa
out
mov
dec
add
push
push
mov
lock
andb
leave
sub
inc
or
daa
ret
lret
das
psubw
fsubl
mov
iret
sbb
testb
or
mov
add
cmp
mov
pop
mov
lahf
jbe
out
dec
cmpsb
sbb
adc
fnstsw
into
daa
and
sbb
ror
in
mov
out
scas
decl
sub
int3
scas
jl
mov
mov
orb
jbe
ja
loopne
jns
sarb
iret
sbb
push
pushf
mov
mov
jp
jns
pop
pop
add
das
divps
in
aaa
mov
or
mov
or
inc
mov
test
insl
stos
mov
lahf
aas
stos
cmpsl
push
fdivrs
cmp
ja
pop
addr16
ja
mov
leave
xchg
and
mov
mov
leave
leave
inc
dec
push
pop
sub
arpl
xchg
xchg
xchg
or
xchg
add
xchg
addr16
ja
cmp
mov
or
bound
pusha
stc
enter
and
cmpsl
sub
cmp
jbe
mov
pushw
add
in
loopne
xchg
in
xchg
mov
mov
and
xchg
out
movsl
pop
wbinvd
add
mov
cmp
in
in
jne
xchg
pop
and
add
test
xlat
lea
lsl
mov
daa
fisubrl
fsubs
std
syscall
mov
sbb
das
sub
dec
push
dec
adc
xchg
das
mov
push
outsb
mov
or
mov
jns
xchg
add
dec
mov
sldt
cs
out
or
or
je
leave
in
das
femms
cli
sub
xchg
iret
syscall
adc
sbb
push
out
mov
pop
push
add
das
dec
dec
sahf
outsb
pop
arpl
out
in
pop
jae
das
jns
scas
or
in
outsb
mov
xlat
mov
pop
and
in
lock
add
in
stos
inc
push
add
add
pop
in
jle
push
lahf
pop
bswap
repz
bound
pop
insb
or
and
mov
nop
xor
lods
in
mov
pop
jo
pushf
aaa
loopnew
call
repz
cmp
xor
sub
das
xchg
cmp
push
add
pop
push
out
btr
pop
shlb
jbe
dec
testl
pop
or
pop
or
sahf
ja
mov
pop
pcmpgtb
add
dec
push
dec
je
and
adc
xchg
inc
ja
fisubrl
add
pop
aas
out
fnsave
pop
push
aas
push
iret
loop
and
cmpsl
push
cwtl
dec
repnz
adc
cmp
xchg
cmpsl
sub
cmp
fisubrl
push
xchg
push
fists
push
xor
outsl
rcll
fsts
xchg
out
icebp
stc
add
enter
adc
aaa
xor
cmp
xlat
inc
fisubrl
mov
push
xchg
iret
dec
adc
pop
dec
dec
es
xchg
ja
mov
iret
leave
in
mov
cs
pmaddwd
dec
add
sub
daa
mov
xchg
xor
cmp
dec
cs
imul
push
pop
mov
mov
repz
pushf
xchg
fwait
push
mov
or
test
cmp
in
icebp
stc
add
mov
out
xchg
xchg
inc
xchg
pop
leave
mov
outsl
ja
and
add
lcall
out
or
lds
call
add
mov
aaa
insb
ja
xchg
and
xchg
das
scas
scas
sub
es
stos
push
mov
dec
xchg
test
jbe
rcl
lea
test
dec
adc
sarl
outsb
daa
mov
psrlq
xchg
outsb
xor
and
out
or
adc
dec
dec
sbb
sub
cmpsl
push
out
in
jns
dec
push
mov
pushf
pushf
pushf
cmp
mov
addb
call
inc
les
iret
repz
loop
in
add
add
add
rorl
cltd
pop
cltd
and
push
ja
jbe
or
pop
ja
movd
movq
or
aas
mov
mov
daa
aad
loopne
in
sbb
cmp
cli
add
cmp
sbb
les
inc
adc
push
lock
aam
lahf
iret
outsb
push
pop
mov
sbb
dec
jns
sbb
iret
in
movsb
mov
mov
ja
xchg
sbb
add
addr16
sbb
mov
addr16
or
sbb
xchg
push
pop
maxps
incl
mov
out
scas
jae
xchg
lods
mov
outsl
mov
out
cmp
test
repz
jae
aad
fisttpll
mov
or
cmc
paddw
outsl
ljmp
in
setle
pushf
adc
in
xchg
push
pop
pushf
arpl
jb
pushf
mov
xchg
out
push
mov
aaa
sbb
sbbl
outsl
mov
mov
or
sub
xchg
inc
out
mov
imul
sbb
daa
aam
jo
push
xchg
jo
outsl
testl
dec
sahf
ja
cs
bswap
lret
lret
pop
mov
test
xchg
pushf
sub
sbb
orb
xchg
sbb
mov
mov
sahf
das
push
sahf
pop
push
jl
push
cmp
push
push
sahf
pop
sub
stc
xchg
cmp
sahf
leave
leave
in
push
pop
pop
punpcklwd
mov
fidivl
test
shld
ffreep
insl
stos
jecxz
push
dec
outsl
iret
inc
jne
in
xlat
pandn
xchg
out
cmp
inc
mov
clts
push
testl
pushf
or
jecxz
push
loop
pop
cs
add
inc
loopne
pushf
and
stc
in
mov
dec
pop
xchg
pop
int3
pop
hlt
orb
imul
inc
daa
negl
mov
outsl
and
and
cmpsb
xchg
jp
lahf
jmp
not
xchg
adc
ret
lahf
mull
outsb
jbe
loop
aas
add
out
jmp
sbb
and
das
add
dec
sahf
out
add
repz
repz
or
jno
repz
cmp
jl
xchg
iret
popf
push
test
mov
cmp
repz
adc
adc
repz
repz
adc
adc
cmc
push
mov
sbb
out
push
push
sbb
sbb
leave
dec
aaa
prefetcht1
push
leave
leave
leave
leave
adc
leave
leave
leave
adc
femms
insb
push
test
or
add
sbb
sahf
cmp
sbb
push
add
ja
ret
and
in
xchg
and
daa
je
sbb
ja
lcall
stos
push
divl
je
ret
stos
inc
in
daa
xor
outsl
jb
xor
clc
and
and
fldl
cmp
mov
mov
mov
iret
repz
cmp
ss
testl
mov
dec
inc
outsl
addr16
pushf
pop
xchg
popf
fsubs
shr
aam
shrb
rcrb
ficompl
loop
ljmp
pop
pop
add
xchg
testl
or
adc
inc
cmp
bndldx
out
and
adc
andb
push
out
jo
out
mov
mov
mov
xchg
and
out
fsubp
mov
scas
pop
notb
mov
and
xor
daa
pop
push
pop
movsb
rep
xchg
movsb
push
add
test
mov
cmp
or
out
sahf
or
or
pop
fmull
aas
les
clc
jb
jb
add
out
adcb
idiv
out
lods
es
into
dec
inc
ja
movsl
xchg
out
push
inc
push
dec
push
add
es
movsl
push
outsl
or
daa
fcomip
push
add
inc
mov
in
shrl
jbe
in
lods
lfs
mov
lock
les
int3
movsl
call
movsl
ret
or
dec
daa
mov
rcll
or
and
sub
mov
pop
sub
xchg
cmpsb
lods
mov
sub
xchg
xor
pushf
cmp
leave
cmp
dec
push
adc
xchg
xchg
pand
leave
jne
mov
cmp
mov
into
pslld
mov
xchg
add
inc
or
fildl
sub
cmp
outsb
sub
pop
ja
lcall
xchg
fildl
out
cmp
xchg
pop
add
leave
in
and
adc
push
jns
fisubrs
test
inc
inc
in
fmull
xchg
rcr
cltd
pop
daa
or
inc
and
adc
fwait
add
stos
and
pop
lahf
or
lock
nop
sub
daa
mov
add
mov
sbbb
call
test
and
mov
pop
addr16
lock
test
pop
sbbl
xchg
test
clc
sub
cmp
push
lahf
stos
je
mull
push
adc
push
jb
jb
sbb
sub
jb
inc
or
pop
andb
popa
imul
xchg
pusha
ss
pop
pushf
cmp
jbe
sahf
add
or
jbe
fwait
dec
shll
pop
adc
stos
ljmp
dec
outsl
or
sbb
pop
adc
pop
pop
syscall
cs
mov
sub
xchg
out
cmovnp
or
jl
jp
aas
stos
aaa
seto
lahf
stos
sub
xchg
xchg
or
stos
nop
pop
mov
xchg
fcoml
push
lahf
aas
std
mov
mov
or
scas
jo
pop
in
lods
nopl
adc
pusha
je
pop
lret
push
nop
cmp
sbb
out
or
or
pop
mov
jb
jecxz
out
lods
dec
lods
inc
mov
das
xchg
adc
jae
mov
xchg
cmpsl
push
ret
add
pop
shrl
mov
jo
pop
adc
ja
lods
and
fiadds
wrmsr
lods
ja
mov
push
out
jb
shll
mov
lret
rorl
add
fldenv
xchg
lock
into
lock
scas
aas
push
scas
push
scas
jmp
repz
push
push
add
xchg
cs
outsb
repnz
add
daa
daa
daa
mov
pop
add
add
iret
repz
or
out
fwait
adc
dec
and
push
data16
adc
xor
mov
xchg
out
scas
cmp
add
fstpl
movq
in
es
mov
cmp
or
jl
jle
adc
mov
scas
fnstsw
pop
push
xlat
pop
mov
push
scas
pushl
sub
jae
testl
punpckhbw
or
push
repz
testb
jo
movsb
fwait
cmp
nop
adc
mov
fsub
es
jae
call
int3
pop
ljmp
pop
dec
sahf
outsb
repnz
adc
and
and
sub
dec
cmp
es
sub
sub
repz
push
sub
pusha
sub
iret
repz
sub
fcmovne
repz
orb
fnstcw
xor
xor
dec
xchg
inc
pop
mov
iret
movsb
xor
fstpl
sbb
les
test
add
mov
ror
mov
xor
pop
mov
push
add
jl
push
mov
pushl
push
pop
packuswb
jns
add
or
or
jmp
pop
mov
cmpsl
rcrb
pop
lret
in
jbe
aam
das
out
out
setle
sbb
testb
vmwrite
adc
out
sahf
out
inc
adc
sahf
out
sahf
pusha
adc
jns
out
test
sbb
sbb
out
sahf
mov
mov
sahf
out
shll
frstor
out
jns
out
icebp
and
and
repz
or
daa
cmp
repz
sub
sub
cmp
repz
push
pop
fucomi
jbe
aas
addr16
outsl
jg
lahf
jg
repz
fists
and
and
cmp
repz
enter
repz
repz
loopne
call
sbb
pop
mov
mov
out
xor
scas
or
adc
adc
or
jb
mov
cmp
inc
mov
pop
js
stos
insb
outsl
bound
repz
add
iret
repz
das
mov
iret
mov
push
or
iret
repz
or
or
clc
jns
enter
mov
push
movlhps
jns
out
and
sub
sahf
out
sahf
xor
ds
adc
push
push
pop
pop
imul
jae
sbbb
out
sahf
mov
xchg
sbb
sbb
scas
push
mov
xchg
out
iret
fldcw
loope
jmp
outsl
hlt
cld
scas
pop
mov
movzbl
out
sahf
aaa
sbb
sbb
pop
sub
push
xor
push
mov
push
adc
jns
addr16
adc
jo
inc
scas
mov
or
out
sahf
mov
nop
or
jns
or
sahf
out
les
iret
cmp
xlat
loope
das
fadds
icebp
repz
sti
mov
inc
cmp
and
mov
xor
ucomiss
cmp
cmp
add
sahf
out
push
or
mov
xchg
int
scas
or
and
add
stos
dec
repz
in
mov
in
jbe
leave
lret
in
in
pop
hlt
pmulhuw
cld
add
or
iret
leave
leave
in
sbb
and
xor
fcmovne
repz
adc
daa
mov
pop
gs
insl
jne
daa
daa
daa
daa
test
cmp
movsl
sbb
sbb
daa
mov
shrb
scas
hlt
mov
decl
mov
iret
jae
adc
sbb
and
out
jbe
cmp
ss
or
mov
btc
push
data16
dec
jbe
add
daa
iret
adc
jle
xchg
iret
adc
sub
jg
mov
iret
shl
add
testl
in
add
pop
sbb
or
or
or
cmp
pop
push
subps
packuswb
fucomi
jb
jge
mov
xchg
jns
xchg
out
sahf
test
out
mov
xchg
out
jns
jmp
idivb
ds
mov
and
out
and
pushf
pushf
fmull
dec
pop
outsl
sahf
pushf
pushf
pushf
jp
nop
fwait
mov
pop
sub
inc
pop
ds
mov
xchg
rorb
mov
mov
push
pop
fwait
lock
sbb
and
push
sub
or
leave
leave
leave
leave
dec
push
pop
fs
adc
test
xchg
out
mov
aaa
nopl
movsb
sbb
sbb
sbb
or
aas
fbld
ja
psubw
mov
in
sbb
sub
aas
xor
dec
mov
aas
je
aad
outsb
scas
jg
mov
jb
repnz
xchg
mov
pushf
pop
bswap
aad
push
or
jns
out
or
prefetch
or
adc
pop
pop
mov
xor
mov
adc
cmp
mov
push
mov
jns
cmp
jbe
push
sbb
mov
push
sbb
jns
in
mov
jge
pop
fucomi
in
jbe
jg
lahf
test
sahf
jnp
mov
fistps
push
sub
out
mov
out
sahf
out
loopne
jmp
sahf
ja
sahf
divb
scas
add
xor
out
mov
xor
push
xor
jnp
ss
aas
loopne
cmp
cmpsl
stc
cmp
cmp
cmp
sarb
fucomi
enter
sarb
sahf
out
cmp
inc
push
outsb
mov
out
pop
insb
das
ja
xorb
lea
mov
add
xchg
dec
dec
mov
inc
inc
enter
cmp
sarb
jg
shr
jns
in
test
push
sbb
cmp
cmp
cmp
dec
pop
push
or
sahf
out
adc
adc
leave
leave
repz
adc
jns
ficompl
in
psubq
out
sbb
ret
push
and
pabsd
inc
dec
movaps
xchg
xchg
pop
outsl
ret
rorb
sbb
push
stc
leave
pushl
mov
inc
mov
icebp
in
cmc
ret
pop
daa
iret
repz
add
rep
cvttps2pi
or
daa
iret
jae
push
inc
dec
or
arpl
out
dec
push
outsb
vmwrite
fisttpll
out
adc
jns
out
adc
adc
jns
pop
push
enter
fidivrs
in
sbb
hlt
cs
cmp
in
sbb
pop
and
cmp
and
and
and
rorl
bound
sub
fcmovne
repz
sub
repnz
pextrw
push
repnz
xor
movsb
mov
jg
repz
push
add
and
sub
jle
pop
push
test
lds
lds
or
inc
jbe
in
fs
mov
je
fucomi
int3
iret
xlat
out
loop
pop
mov
iret
repz
or
add
jg
out
outsl
push
push
or
sbb
or
xor
pop
jns
imull
inc
push
adc
push
adc
sahf
out
push
out
sahf
out
pop
lcall
sbb
sahf
out
aad
loopne
popf
cmp
testb
push
pop
fstl
iret
sbb
aas
and
movl
add
jne
clc
inc
and
add
sub
sbbb
inc
popf
mov
pop
push
out
sahf
ja
push
add
dec
sahf
add
jns
jns
das
rol
faddp
jmp
xor
jns
test
enter
iret
fwait
cmp
adc
and
push
adc
daa
iret
repz
inc
adc
pop
fucomi
in
push
push
push
daa
iret
repz
sbb
outsl
movzwl
das
pop
dec
in
fstpl
push
add
rcll
leave
das
leave
pop
pop
dec
sbb
and
sub
das
pop
sahf
ja
je
or
inc
or
iret
repz
push
push
or
ja
popf
outsb
aas
jns
sbbl
repz
xchg
push
adc
adc
popf
lods
aas
mov
mov
jns
sbb
fimull
sbb
cmp
repz
ljmp
std
leave
pop
and
mov
lret
cmp
inc
bswap
repz
push
lret
dec
add
repz
pop
orb
jns
or
aaa
jns
femms
ret
cmp
repz
fcoms
jecxz
daa
iret
jae
adc
add
das
sysexit
cmp
jns
adc
push
cmp
repz
sbb
iret
repz
sbb
xchg
out
pop
pop
imul
inc
aas
dec
and
cmp
and
add
ror
sub
dec
add
cmc
dec
dec
push
aas
sub
aaa
add
sbbl
bswap
and
sbb
int3
pop
int3
daa
int3
inc
sub
jb
fbld
add
je
mov
mov
mov
fcmovne
rorl
add
or
jns
or
syscall
adc
add
insl
jbe
int
push
int
sbb
cmp
xchg
out
sahf
inc
adc
pop
sahf
out
sahf
addr16
sahf
xchg
out
aad
loopne
sbb
cmp
testb
dec
or
sbb
in
into
and
inc
and
push
and
repz
mov
mov
daa
lret
iret
in
movsb
es
das
sub
sub
jmp
into
iret
add
out
pushf
mov
xor
pop
leave
repz
sahf
xor
sub
push
sahf
fildl
gs
sahf
jge
jns
in
in
xchg
setle
cmp
cmp
xchg
mov
cwtl
into
iret
sub
pop
ud1
iret
mov
das
fmull
push
out
fisubrs
hlt
das
decl
or
xchg
out
and
sub
js
mov
das
inc
cmovle
inc
sbb
and
dec
sarb
jbe
ja
push
pop
test
fcmovne
repz
repnz
daa
jecxz
push
stc
dec
fidivs
jnp
rorl
mov
sbb
and
pop
and
jns
jg
mov
xchg
daa
iret
repz
mov
addr16
rcrb
rcrb
and
fmulp
repz
inc
push
xor
xchg
out
pop
xor
mov
ss
fucomi
in
ror
fmuls
jecxz
mov
xchg
out
stc
add
jb
dec
fwait
mov
pop
add
mov
dec
mov
add
xchg
mov
push
add
dec
test
rcrl
rorb
outsb
jb
add
push
loop
and
mov
in
das
setg
cmp
pop
adc
sbb
or
mov
push
xlat
in
into
sbb
fadds
pop
je
or
sub
jg
int
add
add
notb
add
inc
cmp
adc
xor
dec
push
test
bound
loopne
add
dec
dec
xchg
nop
add
add
aas
inc
push
dec
sbb
mov
pop
mov
pusha
mov
scas
pop
cmp
dec
aaa
test
dec
shlb
sahf
cmpsl
fldt
xlat
sbb
or
leave
in
in
or
or
or
outsb
mov
scas
or
daa
dec
outsb
aaa
sbb
adc
and
pop
inc
inc
push
addr16
das
mov
in
jbe
xorps
insl
leave
repz
push
and
jb
in
sbb
pop
andb
cmpb
jns
xchg
addl
fisttpl
mov
mov
into
aas
xlat
sbb
lcall
dec
add
mov
sbb
fwait
adc
add
inc
mov
ret
mov
mov
and
adc
jb
add
jbe
shlb
and
jb,pt
movsl
sbbl
test
pop
shll
cmovo
pop
inc
mov
or
mov
sbb
in
call
adc
push
ficompl
push
pop
fisubrl
xor
mov
rcr
fsubp
stc
jb
jle
mov
sub
inc
sahf
out
lds
je
insb
push
fs
push
dec
inc
out
sahf
out
sub
sbb
sahf
out
sahf
adc
or
add
cmp
sarl
clc
hlt
lock
int3
repz
les
mov
iret
mov
mov
iret
repz
je
push
or
mov
mov
cmp
repnz
xor
and
push
cld
repnz
repz
fadd
mov
repz
repz
nop
mov
iret
jo
pop
pusha
pop
push
dec
jns
out
inc
xor
add
jns
cmp
fmul
mov
movsb
nop
mov
pop
fistpll
jl
push
push
inc
icebp
jg
pop
add
icebp
adc
je
xor
push
xor
push
jo
rcrb
insl
test
add
notb
jp
mov
add
add
rorl
testb
sarb
or
and
push
les
xor
push
xorb
inc
in
fyl2x
call
push
mov
dec
jecxz
add
push
jnp
stos
subb
cmpsb
in
push
add
push
adc
add
sub
jg
add
push
inc
rolb
sbb
mov
add
mov
out
es
pop
push
testl
das
outsl
test
pusha
data16
iret
push
pop
pop
test
cs
ss
mov
mov
pop
in
push
dec
mov
pop
out
andl
out
xchg
popf
enter
pop
or
adc
xor
jnp
sbb
push
sbb
div
cmp
mov
push
inc
and
push
sbb
lock
jns
repz
paddq
xor
mov
pop
adc
mov
jns
out
mov
int3
or
repz
les
mov
out
adc
adc
or
push
popl
jns
out
push
and
and
and
jns
out
and
jb
add
clc
or
out
pop
imul
daa
xor
testb
xchg
scas
shrl
inc
cmp
xorl
jns
xlat
pop
cmp
pop
js
mov
fidivrs
aam
adc
xor
dec
insl
add
repz
cmp
xchg
mov
sahf
shl
bnd
das
push
dec
bound
pop
shrl
nop
sub
enter
inc
dec
cli
or
or
ret
mov
in
and
adc
lret
and
sbb
into
sbb
rorl
incl
lock
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
lea
scas
sahf
inc
stc
mov
adc
mov
decl
js
inc
outsl
inc
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
incl
inc
mov
repnz
test
stos
clc
scas
adc
inc
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
incl
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
pushl
pop
cmpsb
pusha
rclb
popa
sar
mov
cli
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
sbb
int
add
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
shrl
call
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
incl
in
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
inc
pop
aas
xchg
les
jne
int
mov
addr16
in
lods
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
aas
xlat
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
jmp
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
pop
cli
decl
xchg
mov
fmull
call
jmp
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
xchg
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
dec
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
lcall
push
xchg
jge
pop
ficomps
frstor
xor
sub
jmp
and
inc
inc
pop
insb
insl
jno
add
inc
je
add
inc
inc
push
dec
inc
pop
push
out
push
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
jg
fldt
pop
fisubrl
mov
call
push
inc
dec
inc
jo
inc
popa
shrl
push
outsb
jbe
imul
andl
or
fdivrs
dec
insb
imul
dec
push
push
or
or
cmp
lret
inc
jbe
je
adc
movzbl
inc
dec
push
cwtl
cmp
jo
jb
push
or
inc
test
out
dec
inc
gs
gs
inc
add
and
inc
push
dec
arpl
mov
arpl
mov
filds
sub
bound
outsl
push
dec
pop
in
adc
pusha
mov
pop
push
xchg
out
cmpb
adc
mov
sbb
les
pusha
and
ds
bound
push
push
fs
inc
inc
add
aas
dec
les
dec
dec
inc
dec
daa
mov
jae
imul
xor
inc
cmp
inc
inc
jns
dec
push
xchg
lahf
push
push
les
sbb
cmp
data16
je
dec
mov
pusha
push
mov
mov
sbb
out
pop
push
lock
dec
dec
in
pusha
imul
bound
jbe
dec
test
sub
or
dec
jmp
sub
insb
inc
cmpsb
dec
iret
rcrb
popa
jne
arpl
add
sbb
dec
dec
pop
add
mov
xlat
push
xchg
movsl
pusha
push
xor
pop
mov
inc
inc
and
add
jo
inc
xchg
push
jmp
push
js
cli
dec
sub
mov
nop
add
push
push
add
add
push
xor
push
push
imul
mov
jo
outsl
push
jb
addr16
push
insb
mov
mov
das
push
xlat
lods
inc
addb
jne
push
or
adc
gs
push
ret
lcall
push
mov
push
inc
arpl
push
test
push
cmpsl
cwtl
aaa
and
out
mov
inc
push
jg
xchg
insb
mov
mov
push
add
or
sub
inc
xor
xor
ja
xor
insl
ja
ret
xor
inc
ja
pop
test
arpl
and
ljmp
mov
loopne
and
ja
lcall
mov
cmpsl
push
dec
pop
mov
dec
mov
inc
adc
lahf
sub
dec
inc
pop
adc
aam
sub
test
rcrb
sbb
dec
iret
aas
jae
adc
call
insb
push
test
inc
push
cmp
je
mov
pop
stos
test
push
dec
dec
mov
js
test
mov
xor
sbb
push
sbb
imul
dec
push
pop
push
jne
les
or
pop
adc
fadds
mov
mov
addr16
aam
pop
xor
inc
iret
sub
insl
push
pop
les
repz
xor
addr16
mov
xlat
out
iret
imul
mov
movsb
cmp
repz
jo
xor
jns
out
or
fdivrs
insb
push
clc
mov
bound
adc
mov
add
jae
cmp
mov
jo
cmp
enter
decl
xor
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
lcall
movsb
mov
aad
mov
rclb
mov
sub
mov
nop
adc
push
jno
repz
test
ficompl
jmp
mov
hlt
movl
insb
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
or
decl
pop
adc
in
pusha
aad
jno
mov
inc
aam
dec
std
test
jmp
insb
cwtl
mov
leave
mov
lods
jecxz
fdivs
jne
filds
or
sar
ljmp
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
sbb
sahf
mov
add
scas
or
pushl
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
mov
xchg
sbb
push
sub
insb
fs
add
jmp
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
push
fnstenv
adc
mov
mov
bound
ficoml
gs
aam
sub
cld
sti
pop
popa
mov
into
pop
cmp
loop
mov
dec
xlat
fistl
movsb
sti
hlt
shrl
imul
mov
sarb
add
incl
add
pop
dec
or
cmp
add
daa
adc
or
and
call
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
lcall
or
mov
shlb
mov
lcall
mov
cmp
ljmp
fildl
push
fdivl
or
test
fs
ds
or
or
push
jmp
popf
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
push
lret
xorb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
fisttps
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
incl
ret
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
ljmp
xchg
ja
int3
add
mov
das
es
lds
or
sub
pushl
ret
shlb
sbb
ret
es
pushf
mov
decl
ljmp
test
ss
jmp
addr16
jb
push
mov
dec
mov
loop
ljmp
mov
cmp
mov
fwait
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
pushl
ficompl
int
mov
mul
ja
outsl
ja
mov
out
cli
inc
pushl
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
call
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
pushl
sbb
mov
lret
mov
cmpsb
mov
sarb
sub
push
mov
jmp
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
test
sub
popl
idivb
mov
mov
test
push
mov
inc
jne
pop
jp
sar
push
imul
insb
imul
add
lcall
jbe
push
jns
arpl
arpl
ja
rorb
push
inc
insl
jns
insb
das
adcb
jne
outsl
insl
insb
mov
dec
inc
xchg
fcmovnbe
cwtl
inc
inc
jle
add
mov
push
xchg
push
push
cmp
jne
cmovns
clc
inc
insl
test
mov
or
test
inc
inc
js
pop
ret
sbb
dec
orl
fistpll
xor
pop
inc
cmp
pop
bound
fs
pushl
aaa
aaa
cmp
popa
arpl
cmp
arpl
or
xor
adc
gs
xor
fmuls
jnp
push
inc
jbe
pop
sbb
mov
mov
push
dec
inc
sbb
out
sahf
add
rclb
adc
int3
and
dec
xchg
sub
fbld
jbe
fs
fstps
mov
jbe
arpl
or
inc
sub
mov
dec
jle
inc
mov
push
sub
xchg
sbb
js
sbb
aaa
add
test
mov
push
xchg
insb
popa
jns
or
mov
popa
xchg
mov
aaa
je
adc
stos
aaa
aas
inc
push
jge
pusha
inc
lret
mov
rorl
dec
aad
xchg
push
inc
mov
dec
push
xchg
mov
inc
mov
sbb
inc
pop
sub
sbb
es
inc
inc
inc
mov
testw
ds
and
mov
mov
dec
dec
or
xchg
push
or
push
fistpll
sbb
ja
mov
insl
jne
fisubrl
mov
mov
pop
aad
xor
xor
or
aad
arpl
add
addr16
add
into
pop
jo
inc
mov
rorl
jg
adc
mov
dec
mov
popa
stc
add
push
rorb
outsl
xor
dec
xchg
push
lcall
test
jmp
pop
addr16
mov
sbb
ss
xchg
daa
mov
add
or
add
dec
popa
jo
inc
roll
push
aas
push
outsl
outsl
test
mov
push
push
jno
test
inc
xchg
mov
in
sbb
sbb
in
nop
pop
jno
cwtl
test
xor
add
xchg
lock
cmp
out
sarl
jo
push
add
push
outsl
insb
jns
push
push
mov
push
mov
and
addr16
add
dec
roll
aas
inc
mov
inc
push
bound
xchg
jo
arpl
or
mul
inc
cwtl
mov
xor
mov
stos
add
and
rolb
add
sub
divl
ret
pop
cld
mov
pushf
dec
scas
addr16
hlt
push
testb
push
in
mov
movsb
adc
stos
outsl
cmc
mov
inc
sub
pop
add
ljmp
test
aaa
push
mov
cs
push
outsb
mov
jb
js
popl
push
daa
aas
pop
push
xchg
or
adc
push
addl
add
pop
cmpsb
add
ret
inc
add
add
and
shrl
ljmp
push
mov
pusha
in
ja
cmpsl
adc
jbe
adc
jmp
xor
lods
jl
popa
mov
or
cltd
out
mov
jl
or
sbb
jmp
lods
and
add
pusha
sub
out
and
push
in
insb
sub
pop
insl
sar
jmp
int
out
pop
das
push
rcll
sbb
sbb
gs
inc
les
mov
pop
sbbb
cltd
leave
and
pusha
loopne
or
jbe
dec
icebp
mov
outsb
scas
outsl
xor
push
clc
sub
jmp
pop
sahf
movsb
mov
xor
cmpsl
sbb
mov
insl
inc
orb
push
cs
dec
jno
fwait
lret
push
out
sbb
rorb
xchg
fnstcw
jns
dec
dec
cltd
sub
ficoml
lcall
push
xchg
dec
shl
mov
push
push
mov
jns
pop
imul
mov
cmp
xchg
imul
xor
outsl
inc
pusha
out
in
mov
dec
rcr
cmp
ljmp
push
xor
mov
pop
inc
fnstenv
cli
sbb
ret
mov
in
mov
aaa
cmp
decl
jb
push
test
push
cmp
pop
int
mov
mov
lcall
daa
lahf
mov
test
sbb
fwait
jnp
and
jge
sahf
data16
incl
xorb
sarb
add
out
pushl
cmp
movsl
mov
mov
scas
sahf
call
sbb
scas
sbb
cs
and
push
and
adc
pop
jnp
push
outsl
and
mov
mov
decl
inc
test
sbb
fiaddl
xor
into
sbb
aam
aam
lret
ljmp
mov
and
lcall
stos
int3
fidivrs
ja
arpl
push
inc
out
or
jp
fsubl
fists
and
xchg
outsl
pop
dec
dec
sbb
daa
mov
cmpsb
adc
sbb
dec
push
lock
dec
adc
fcomp
cmp
in
mov
jno
inc
push
ficoml
sub
out
scas
cmc
ret
lods
push
inc
pop
push
mov
daa
daa
in
pushf
imul
out
subl
jmp
pushl
sub
ljmp
xchg
and
popa
dec
cmp
inc
fmull
ret
jo
clc
lcall
xchg
dec
pop
ret
sbb
adc
jno
cmpsl
std
ljmp
mov
jo
inc
mov
mov
sub
movsb
movsb
lret
repnz
jg
dec
push
js
ja
ret
mov
jmp
mov
scas
mov
sti
imull
int
pop
adc
add
mov
imul
dec
cmp
ret
jnp
xchg
adc
rcrb
mov
jo
lcall
push
subps
dec
push
outsb
sbb
mov
sti
imul
incl
adc
and
inc
nop
std
leave
mov
jg
pop
shll
mov
xchg
and
mov
lret
int3
adc
jnp
fdivrs
fbstp
sarl
push
dec
sub
outsb
cwtl
add
adc
mov
imul
jmp
jmp
sub
outsb
lock
fs
fdivrl
push
cmc
sub
scas
inc
pop
add
mov
jns
shrl
fsubrs
lret
sub
push
shlb
fdecstp
jmp
jns
push
mov
cltd
popa
or
ljmp
in
gs
fcoml
std
adc
mov
sub
xor
xchg
mov
call
das
fisttps
add
fistl
mov
adc
pop
mov
pop
js
incl
test
mov
stc
pavgb
test
push
enter
push
sbbb
lcall
je
push
inc
xor
fadds
fisubrl
mov
inc
mov
push
or
in
call
imull
or
and
or
icebp
jnp
ficompl
in
xchg
into
lcall
std
sub
mov
adc
push
hlt
and
mov
ficoml
jnp
movsb
rcr
out
cld
jmp
push
into
fistpl
shll
mov
shlb
push
pop
lock
mov
pushl
dec
mov
in
mov
out
xchg
lock
adc
mov
es
xor
mov
jbe
cmp
jg
inc
and
test
leavew
add
xor
inc
mov
push
jno
jge
call
scas
xchg
dec
bnd
and
adc
inc
mov
inc
xchg
xor
test
pop
or
lea
lret
xchg
jne
push
pop
call
iret
ss
adc
nop
lea
arpl
loopne
mov
mov
jbe
scas
xchg
cld
dec
xchg
ljmp
and
jmp
movsl
incl
jg
add
leave
adc
out
icebp
ss
mov
mov
insb
jecxz
cmp
push
in
xor
lods
or
cmp
lcall
insb
mov
ret
jbe
cmp
aad
jmp
pop
dec
xchg
xor
xchg
aad
ja
pop
cmp
mov
jmp
in
pop
adcl
sub
jp
pop
adc
ret
cltd
sahf
lret
sti
test
ret
repnz
pop
rcrl
fstl
dec
sub
clc
inc
jb
scas
jl
jmp
les
xchg
stos
sub
inc
lock
sbb
dec
xchg
sub
stos
push
sbb
out
xchg
and
mov
xor
fcompl
popf
decl
hlt
scas
xchg
negl
lahf
mov
test
iret
in
lcall
mov
gs
jmp
jbe
testb
imul
call
ret
mov
out
loop
ss
xchg
test
aas
aam
callw
jge
sbb
jmp
test
inc
dec
adc
mov
jns
mov
repz
sbb
mov
fsts
lock
mov
aad
clc
jmp
adc
int3
pop
in
daa
jmp
mov
cld
icebp
enter
push
add
repz
xchg
lret
pop
inc
sti
jg
popa
inc
mov
hlt
xor
inc
in
jl
fisttpl
sub
mov
call
add
push
outsb
js
push
loop
mov
pop
test
sub
or
and
lahf
adc
mov
pushf
xchg
mov
cld
das
jb
mov
dec
frstor
decl
cli
ja
sub
scas
add
dec
mov
insl
sahf
std
ret
xrelease
push
push
sar
jmp
in
xor
pop
test
jne
lods
cmc
cmp
adc
out
sub
mov
sti
mov
or
jg
and
pop
stos
push
pop
mov
cmp
inc
call
loop
xchg
pushf
adc
roll
addr16
ss
je
out
mov
inc
popa
sbb
repz
dec
in
dec
mov
pop
sbb
mov
scas
dec
xor
pop
adc
jmp
in
insb
lods
mov
andb
jnp
pop
nop
neg
addr16
adc
incl
cmp
sub
mov
cmp
push
fcmovbe
cmp
mov
jg,pt
mov
add
cmp
sti
orb
xchg
scas
mov
pushl
mov
push
in
cwtl
cwtl
push
jo
rcll
cmp
outsl
rclb
fs
ds
mov
sbb
test
js
ljmp
sbb
pop
mov
sbb
xchg
pushl
cli
add
ret
in
test
pop
xlat
test
pop
sbb
xor
nop
aas
rcll
das
cmp
imul
out
jmp
and
rcrl
cmpb
add
cmc
stos
inc
js
dec
dec
jge
cltd
cmp
aam
enter
push
inc
sub
clc
ds
push
lock
xor
insb
sahf
call
decl
lods
cwtl
jle
enter
lods
stc
ss
sbb
imul
xchg
test
inc
lods
pop
mov
cmp
adc
movsb
lret
ss
pop
pop
pop
mov
std
xor
adc
adc
call
push
call
mov
xor
sbb
jmp
out
lods
xchg
sahf
mov
std
fistl
pop
adc
fwait
push
divb
and
or
call
test
stos
fsubrl
or
xchg
adc
add
cli
sbb
jae
inc
int
sti
pop
inc
sub
dec
sbb
fwait
sub
gs
in
in
add
xor
mov
cmp
fisttpll
data16
and
push
icebp
mov
sbb
aam
lcall
mov
jbe
mov
cwtl
insl
lea
mov
add
outsl
clc
decl
adc
shrb
sbb
xchg
sti
cmp
mov
sub
lock
or
push
cmp
ja
push
sbbb
mov
mov
pushf
or
ss
xor
push
sbb
sbb
pop
or
cld
aas
sbb
fucomp
icebp
jle
sub
mull
aam
loop
decl
shlb
jne
jl
adc
pushf
dec
dec
xchg
iret
adc
mov
ljmp
xchg
xchg
push
xchg
outsl
jmp
and
push
fiaddl
mov
std
outsl
cwtl
bound
sub
and
dec
lods
lds
jl
jecxz
xchg
incl
mov
and
jbe
or
es
setne
sbb
js
adc
cmp
cmp
lods
dec
adc
adc
pop
xchg
stc
cmp
fwait
mov
inc
cmp
ljmp
je
sbb
or
cwtl
or
lret
into
xchg
xchg
push
push
sbb
pop
out
pop
adc
mov
decl
xchg
bound
cwtl
jmp
in
lds
cli
sub
push
inc
cmp
loopne
lcall
jg
and
sub
or
ljmp
data16
out
cli
mov
cmp
jne
jno
cld
dec
pop
mov
jnp
test
fcomi
adc
shrb
jmp
cltd
xchg
dec
loopne
sbb
pop
ret
add
push
fwait
pop
mov
scas
roll
mov
xlat
add
jg
call
cltd
test
add
fistpl
or
int
movsl
cmp
imul
push
inc
jp
loop
push
ror
and
jg
or
mov
jb
fadd
dec
out
scas
xchg
add
sub
xor
aaa
add
sub
ficoms
sub
mov
jl
pop
leave
mov
adc
or
test
addr16
clc
mov
sbb
dec
mov
xchg
xchg
cmc
mov
mov
inc
jmp
mov
mov
sbb
out
xchg
push
mov
inc
in
dec
push
sub
mov
ljmp
add
xor
pop
lahf
cltd
mov
fwait
jo
sbb
and
push
repnz
jg
int3
call
xor
dec
call
jmp
jg
mov
mov
decl
dec
push
insl
xchg
xchg
in
xor
sub
stos
xchg
lock
pushl
jo
aaa
mov
shll
push
xor
fimuls
imulb
jp
stc
mov
mov
loop
or
cs
pop
or
call
sub
push
or
je
mov
pop
cmp
mov
inc
sub
inc
inc
mov
insb
jg
jmp
rorb
push
mov
lods
jecxz
addr16
fists
jmp
stc
int
imull
push
mov
ds
or
mov
fwait
insb
bound
aaa
mov
and
movsb
movsl
sbb
pop
adc
aam
sarb
push
lods
loopne
mov
mov
sar
gs
js
pop
lret
push
xor
loope
pop
popa
push
fisubrl
xor
dec
cwtl
xor
adc
lcall
lret
icebp
adc
mov
cwtl
mov
int3
mov
mov
jae
xchg
fildll
lcall
fiadds
pop
push
or
pop
pop
adc
mov
mov
dec
push
add
or
xchg
mov
mov
push
sbb
add
mov
add
call
jns
jecxz
in
sbb
rcll
insb
lock
add
sbbl
jp
out
mov
jmp
mov
repnz
push
ret
inc
mov
mov
inc
daa
fdivs
mov
mov
jb
je
xchg
hlt
mov
push
pushf
fildll
pop
test
mov
into
or
std
insl
gs
decl
mov
lock
adc
fstps
imul
ljmp
pop
fisttpll
xor
mov
mov
and
je
xor
jmp
cmpsl
mov
pop
ljmp
or
rcll
add
out
sub
fstl
cld
fsub
push
jl
sub
sbb
sahf
ret
inc
inc
jecxz
sbb
cmp
shl
jb
fucomip
movsb
and
ret
popa
aaa
sti
push
jl
imul
aad
dec
mov
mov
cmp
loopne
outsl
jb
adcb
lods
xchg
aas
fadds
or
ljmp
out
ss
add
icebp
lds
scas
mov
mov
js
cmp
dec
jbe
push
mov
and
xor
add
mov
int
jmp
mov
xchg
jl
call
xchg
loopne
jb
pop
mov
push
fcmovbe
sti
repz
and
sahf
imul
adc
cmpsl
cvtdq2ps
dec
jnp
insl
int3
test
decl
ljmp
xor
jne
and
sub
popa
rcrb
and
icebp
jmp
divl
loop
cmp
mov
scas
lcall
and
or
mov
out
mov
lock
cmp
hlt
ret
mov
pop
pusha
mov
jo
mov
imul
scas
dec
add
std
inc
mov
jne
xchg
nop
mov
sti
xor
or
cli
and
out
push
call
sbb
cmpsl
xchg
xchg
popf
inc
outsb
cmpb
icebp
push
mov
fisubl
addr16
repz
cli
nop
outsl
jmp
xchg
inc
push
mov
cmp
mov
inc
mov
push
jg
fmuls
stc
jno
call
les
ret
mov
cmp
je
inc
leave
adc
sbb
mov
sub
xchg
mov
sub
inc
cltd
icebp
dec
imul
out
clc
pop
add
sub
aad
rcrl
xor
daa
incl
sar
jnp
repz
mov
lea
mov
xor
ljmp
call
cmp
adcl
subb
bswap
push
pushf
mov
int3
add
lcall
rorl
jb
pushf
xchg
into
jge
in
dec
lea
scas
add
iret
dec
cmc
shll
ror
cld
jmp
in
test
xchg
xchg
xor
add
xchg
or
sbb
fstps
ret
nop
sub
sarl
js
add
nop
jne
mov
lods
jo
scas
clc
jg
add
arpl
fists
repnz
mov
int
lahf
data16
adc
incl
lret
sbbb
lcall
push
push
in
inc
jo
sbb
cmp
negl
add
out
int
ja
add
pop
inc
les
push
push
adc
test
inc
dec
es
adc
mov
ljmp
jnp
push
mov
xchg
les
not
sahf
sub
popa
cs
fidivl
pusha
in
push
decl
add
out
sbbb
sub
sbb
add
jns
fnsave
add
or
call
push
push
sub
jnp
jnp
mov
inc
lods
enter
sub
sbb
jl
decl
cmp
mov
jmp
push
adc
repz
je
cmp
lock
lods
dec
cltd
out
clc
incl
cmpsl
incb
mov
nop
bound
adc
mov
push
mov
jge
pushf
add
cmp
add
out
mov
lret
adc
sahf
test
dec
ljmp
sub
popa
cli
shrl
xchg
sub
xchg
jo
mov
incl
lahf
adc
iret
insb
popf
and
int
or
sbb
hlt
rcrb
decl
cltd
shll
imul
jae
mov
mov
movl
nop
mov
jp
in
jmp
rcl
cwtl
test
dec
and
call
add
repnz
adc
addb
cmp
decb
mov
and
call
arpl
leave
dec
and
sub
repz
pop
mov
call
leave
cmp
repnz
xchg
jp
jno
es
shrl
pop
fisubrl
les
mov
cmp
jb
inc
and
decl
popa
jnp
dec
adc
scas
icebp
fimull
dec
pop
test
dec
int
pop
enter
cmp
jo
fisubrs
add
imul
fdivs
stos
push
stos
sub
mov
mov
inc
pop
pop
movb
mov
sub
lods
ss
pushf
sub
insl
shr
xchg
jle
mov
shll
pop
mov
pushl
xchg
dec
in
push
jecxz
mov
xchg
lods
repnz
icebp
jp
or
push
pop
and
or
incl
add
nop
push
mov
mov
add
sti
adc
decl
or
mov
pop
xor
sub
movsb
push
rcrb
cmp
jnp
add
mov
das
cs
test
inc
fldt
or
inc
dec
imul
fdivs
adc
call
and
adc
jge
lgs
jno
sub
fiadds
cwtl
inc
xor
pushl
cmp
enter
push
into
xchg
rorb
ljmp
cmp
jo
adc
mov
negb
vmovq
test
mov
stc
fidivs
fdivrs
cld
lods
ret
call
cld
pop
mov
sub
mov
push
flds
cmp
fistpll
cmpsl
cmc
test
leave
xchg
sub
xchg
enter
inc
or
fwait
daa
clc
lcall
sbb
out
fisttps
or
rcrl
jno
dec
repz
and
ret
lcall
cmp
icebp
jns
jbe
rorb
bound
jmp
ljmp
jg
fs
das
push
orl
adc
lds
mov
xchg
jnp
insl
cmp
gs
xchg
push
and
add
out
jns
sub
pop
xchg
lcall
dec
cmp
add
es
mov
jecxz
sbb
stos
sub
or
es
fidivl
mov
push
jge
cmc
mov
sbb
mov
out
clc
and
cmc
sub
mov
popa
imul
jo
div
incl
in
cmp
int3
add
push
fdivr
outsl
lret
jge
xchg
pop
xlat
movsb
sub
pop
je
incl
lea
inc
cmc
scas
and
and
or
push
das
outsl
add
xchg
mov
dec
adc
push
scas
fldt
mov
lods
cmp
mov
and
cmp
inc
pop
push
pop
mov
daa
ja
jmp
push
lret
bnd
mov
je
push
inc
jb
ffreep
sbb
les
jmp
push
call
xor
mov
and
push
ret
lret
stc
inc
fs
xor
xchg
xor
sub
mov
sti
scas
or
cmpsl
je
cs
incl
arpl
popf
inc
and
scas
sub
pop
or
mov
inc
ljmp
mov
mov
add
dec
and
xchg
stc
push
subb
jp
add
adc
incl
js
daa
cmp
push
sahf
xchg
jmp
lahf
xor
jl
aad
and
pusha
cmc
xchg
decl
fsubr
jmp
rcl
dec
xlat
adc
mov
icebp
stc
fmul
hlt
sbb
sub
incl
or
mov
adc
lods
cmpsl
addr16
dec
push
sub
setle
sub
outsb
push
ret
fcomip
jmp
jbe
xor
mov
filds
in
jle
call
mov
dec
int
das
nop
adc
push
lcall
sbb
stos
cmp
push
int3
add
xor
in
out
cmp
ret
sbb
xchg
pusha
pop
jmp
sbb
adc
fxtract
cli
jo
add
call
repz
mov
xor
mov
mov
mov
enter
call
jg
test
sbb
xchg
inc
fadds
push
popf
nop
push
loope
lods
fbld
pushl
pop
pop
cltd
pusha
ds
pop
dec
jp
loope
dec
cmp
stos
and
scas
test
popf
sbb
lcall
outsb
lods
gs
lds
mov
xor
cmp
or
iret
aam
mov
sbbl
pop
hlt
push
push
ja
dec
scas
dec
inc
jecxz
add
sbb
flds
icebp
mov
nop
cli
cli
jle
in
aas
repz
xor
jns
insl
test
cmpsb
fisttps
xchg
popf
inc
pop
out
out
sub
das
movsb
pop
aaa
sub
jne
xchg
out
jmp
jmp
push
mov
xchg
adc
imul
bound
jmp
or
inc
lea
and
push
jno
fsub
dec
or
stc
xchg
xor
js
xlat
mov
mov
call
or
sbb
ja
popf
std
jno
add
mov
mov
lods
insl
and
insl
jmp
inc
shll
inc
xor
jnp
push
dec
mov
fcomip
call
aas
xor
sbb
loopne
add
test
adc
or
decl
mov
push
mov
inc
ja
sahf
ds
insl
lcall
cltd
jmp
cmp
adc
pop
sbb
fnstcw
xchg
cli
pushl
inc
dec
mov
inc
mov
pushl
fnstenv
cld
fwait
test
or
and
mov
out
cmp
and
xor
outsb
popa
push
repnz
mov
lcall
sbb
mov
sub
in
insl
sti
sub
jo
add
jg
adcb
je
sub
mov
out
aaa
ret
stc
pop
sbb
lcall
test
mov
int
jmp
jae
pop
movsb
shrl
loopne
sbb
cmp
incl
incb
inc
push
cwtl
xchg
dec
dec
mov
xor
inc
mov
jmp
cmp
repz
aas
xchg
ljmp
cli
lcall
fs
sar
icebp
xchg
jne
test
shl
sbb
push
gs
jp
add
xor
hlt
dec
xchg
xchg
in
out
ljmp
mov
mov
mov
test
aas
test
pusha
aas
mov
ja
ret
or
xlat
and
hlt
cwtl
adc
or
inc
fstl
push
dec
int
mull
or
flds
fisttps
jmp
loop
imul
in
enter
sbb
clc
sbb
decl
push
add
ss
fisubl
or
rcl
mov
push
iret
mov
adc
sub
rcrl
pop
scas
dec
push
std
jg
enter
and
ds
cmc
sbb
lds
jg
and
out
in
adc
xor
nop
fistl
ss
mov
dec
ja
popa
push
insb
sbb
movsb
xor
push
xor
adc
decl
ljmp
pop
repnz
adc
popf
loope
mov
cltd
orb
incl
dec
jns
adc
adc
adc
xor
mov
test
pop
pop
sbb
jae
pop
adc
call
push
in
mov
movsb
dec
call
cmp
and
and
incl
sti
add
sarl
push
hlt
xchg
filds
or
pop
push
fs
push
jge
ljmp
inc
fstpt
xor
mov
xchg
jle
sbb
cmp
lret
out
or
mov
pushf
fmull
in
mov
lret
cmp
mov
jg
je
into
ret
sub
rolb
ljmp
stos
cmp
pop
sub
shlb
dec
ss
lods
sbb
lret
dec
insl
mov
incl
pop
jne
push
ss
adc
inc
lods
sbbb
movsb
mov
cmp
inc
inc
jmp
cmc
fiaddl
jno
fmull
push
cli
out
inc
jnp
adc
imulb
xchg
out
cli
decl
fstpt
int3
testb
pushf
mov
sbb
call
hlt
mov
pop
incl
dec
inc
jnp
xchg
xchg
mov
xchg
out
iret
xor
dec
mov
lods
mov
pushl
and
aaa
ljmp
cmp
sbb
pop
cwtl
std
jge
aas
and
xor
jb
fcomip
jecxz
sbb
mov
push
pop
and
jnp
pop
inc
push
and
ljmp
mov
xorl
inc
push
jbe
negl
or
push
or
jg
decl
sub
jg
ficoms
cwtl
inc
out
jge
fists
movsl
sti
sbb
cmpsl
sbb
mov
pushl
inc
xchg
or
push
adc
or
ret
and
rcrb
push
lret
push
add
and
sub
push
adc
mov
mov
test
or
jmp
xchg
int3
aas
mov
jmp
mov
aas
inc
pop
mov
add
sbb
insb
loopne
or
adc
call
or
mov
add
or
push
pop
loope
jp
push
sbb
jp
pop
ljmp
and
js
cwtl
jne
leave
stos
ljmp
in
out
mov
xor
mov
sar
ljmp
mov
dec
add
roll
pop
dec
outsl
push
mov
push
ljmp
icebp
mov
lret
cmp
cmp
imul
shrl
loop
hlt
call
push
call
ljmp
xchg
ret
ljmp
inc
sbb
jle
and
or
xor
leave
loop
popf
jno
dec
pushl
test
nop
pop
dec
dec
outsl
push
jae
sbb
jne
leave
or
int3
jbe
ljmp
decl
sub
cmp
pusha
lock
sub
push
mov
mov
shrb
xchg
mov
xchg
fisttps
fldt
stos
je
je
push
dec
js
push
inc
jne
cmp
pop
add
repnz
jmp
sub
mov
lahf
sbb
push
rorb
sbb
cmpsl
push
cld
lret
lret
gs
cmc
sahf
pop
cli
loope
out
push
pop
cltd
notb
leave
lret
mov
push
jg
fistl
mulb
lods
add
xchg
scas
jp
mov
pushl
leave
adc
pop
js
cmpsl
inc
mov
xchg
cmp
jge
sahf
addb
incl
test
adc
insb
sub
movsb
mov
in
cld
sub
aam
decb
inc
and
sbb
aam
push
dec
pop
ret
aas
cmp
sbb
pop
and
jmp
dec
popl
jmp
pop
scas
fcoml
xchg
sbb
lret
mov
push
daa
rcrl
call
adc
xchg
and
jg
leave
incl
mov
cmp
or
sub
pushl
jo
push
lds
push
sub
mov
negl
inc
inc
mov
adc
xlat
std
jbe
xlat
or
xchg
mov
sarb
cli
xor
stos
mov
pushf
jb
add
push
enter
aad
cmpsl
push
xor
mov
inc
mov
pop
sahf
and
shlb
jne
pop
pop
cmp
shrl
pushl
ret
shlb
mov
fsubrs
push
cmp
mov
aas
adc
push
sbb
adc
xchg
test
incl
outsb
inc
cmp
hlt
int3
jae
mov
dec
fidivrs
mov
int
mov
loopne
mov
movsl
mov
cmp
dec
inc
dec
popa
stos
incl
pop
pcmpgtd
jg
fcompl
pusha
imul
cmp
mov
fwait
mov
pop
das
lret
sbb
and
call
fwait
xlat
enter
or
iret
fwait
push
mov
fimull
inc
xor
pushl
or
lea
sbb
shrl
out
cwtl
das
and
pop
or
xor
int
data16
jg
pop
cmc
mov
mov
xchg
cli
jmp
sbb
jecxz
or
adc
add
mov
push
gs
push
pop
xor
stos
jno
mov
shlb
mov
cmpsl
inc
cli
fdivr
jmp
cmp
dec
cmp
push
rolb
hlt
and
jp
push
sbb
and
stc
jg
pushl
rolb
call
mov
jmp
test
jo
sub
mov
call
push
cwtl
fcoms
loop
ret
ss
mov
jg
ljmp
into
and
gs
mov
sbb
data16
sti
in
inc
pop
test
incl
dec
mov
ret
dec
jnp
dec
xchg
sbb
aas
sar
push
push
ret
pop
mov
stos
xlat
push
lcall
andb
cmpsb
adc
jo
cwtl
push
shrl
in
sbb
ljmp
sbb
out
mov
mov
xchg
cwtl
pushf
push
xchg
mov
idivl
lock
push
add
test
mov
add
fucom
gs
lods
push
pop
jb
mov
xchg
add
clc
xchg
push
and
ret
fwait
push
sub
xchg
rolb
push
mov
in
sub
jae
lcall
sub
in
xlat
adc
in
jae
imul
repnz
incl
btc
adc
stos
push
jge
xchg
and
xchg
xor
setnp
mov
dec
push
daa
test
dec
and
xor
int3
lret
jns
bound
inc
popa
aaa
movsb
xchg
cmp
pushl
nop
and
jno
push
sbb
ljmp
sahf
sahf
jb
push
cmp
outsb
incl
ret
loop
push
aam
sbb
scas
lret
push
push
je
shr
add
jp
cwtl
xchg
arpl
ljmp
std
rcrb
sbb
imul
pop
arpl
xor
sahf
mov
dec
sub
fcos
pop
std
jle
add
and
cli
out
sbb
xchg
aad
aam
hlt
push
insl
cli
out
dec
mov
push
cmp
cli
xor
inc
mov
lcall
cmp
addr16
dec
add
mov
out
rorb
addl
ljmp
pop
mov
pusha
aad
jno
pop
sub
mov
and
inc
dec
sub
out
pushf
fdivl
jg
push
pusha
or
mov
sbb
cmp
inc
sub
xor
sar
rcl
out
sub
test
jecxz
sbb
jg
push
xchg
add
orl
xchg
les
popa
sub
test
cli
pop
incl
popa
setge
test
jno
fs
ja
out
adc
jg
inc
sub
out
test
pop
orb
or
in
mov
mov
fdivr
cld
shr
inc
arpl
cltd
jp
sbb
imul
adcb
out
cmp
call
or
push
mov
out
sarl
push
test
xchg
pop
cmp
lcall
repz
sahf
mov
add
cmp
fisttpll
addr16
nop
jne
dec
not
scas
add
fs
fnstenv
jnp
loopne
pop
pop
idivb
or
sbb
lock
inc
pop
sbb
pushl
stc
repz
sub
int
fnstenv
lret
add
and
insb
cli
in
cmpsb
pop
loope
call
add
int
fwait
jno
adc
and
sub
inc
fwait
imul
cmp
push
pushf
inc
negb
jp
iret
jg
pushl
sbb
sbb
mov
and
mov
xchg
cs
xor
push
in
idiv
lcall
mov
dec
fiadds
jo
jbe
mov
and
xor
repnz
addb
pop
pop
fs
call
mov
and
inc
or
inc
cmpsb
in
sar
call
std
or
les
mov
inc
mov
test
mov
sub
test
lcall
pop
cli
fbld
mov
and
jl
sbb
mov
add
and
adc
add
in
push
dec
cltd
and
jae
popa
jbe
inc
mov
popa
jle
jl
fstpl
or
outsl
inc
das
scas
cwtl
dec
faddl
ja
push
ret
pop
mov
pop
ds
mov
mov
jg
jns
scas
sbb
rcrl
xor
out
jg
out
loopne
scas
adc
push
xchg
push
sub
lcall
imul
sbb
loope
sub
lds
out
cli
or
sti
mov
je
es
addr16
jb
pop
cltd
out
bound
xor
jbe
outsl
cli
mov
xchg
mov
sahf
xor
push
mov
lcall
dec
mov
js
mov
push
in
imul
incl
mov
repnz
add
jle
pop
popf
push
out
inc
fsts
push
push
cmp
mov
loop
ljmp
xor
xchg
and
xor
mov
pop
or
mov
pusha
movsl
mov
sar
ljmp
mov
xchg
ljmp
cmpsl
clc
jnp
push
xchg
insl
cs
ljmp
loopne
scas
cmpb
push
and
xchg
add
push
clc
movb
xchg
aaa
aad
test
pushl
push
in
add
aam
jne
sbb
jecxz
and
pop
je
add
aad
mov
call
or
in
je
sahf
in
js
jp
sbb
xor
fdivrp
aaa
cmpsl
shll
xchg
lcall
ss
data16
bound
faddp
xlat
pop
repz
fsubrl
or
test
push
or
xchg
loopne
dec
aad
gs
mov
sub
inc
inc
adc
aaa
std
jmp
cmc
movsb
add
std
rcrb
sbb
or
jno
jmp
jno
neg
mov
xlat
addr16
and
push
add
and
cmp
jo
add
jmp
fdivrp
adc
pop
in
push
adc
adc
and
xchg
decl
sub
inc
lret
cwtl
jl
mov
es
push
insl
adc
jecxz
xor
jnp
ljmp
jecxz
cld
sbb
xlat
mov
fwait
mov
dec
jge
stos
xlat
and
dec
and
test
fsubl
fldenv
inc
adc
add
jl
sub
and
dec
or
aaa
pop
push
pop
pusha
push
test
ja
sti
mov
les
fwait
jns
jns
and
lods
jne
std
lcall
popf
lods
arpl
adc
inc
sbb
call
rclb
pop
cmpsl
hlt
push
jb
notb
lea
pop
movsl
nop
dec
mov
stc
mov
mov
push
es
cmpsl
into
mov
scas
pop
int
aas
bound
cwtl
xchg
orl
jmp
or
repz
xor
inc
and
lret
iret
xor
cmpsb
aad
aam
dec
decl
in
fmulp
pop
lcall
cmp
gs
arpl
sbb
test
jb
jmp
ljmp
push
jle
aas
dec
nop
xchg
fisttpll
mov
ds
ljmp
popf
ljmp
in
push
xchg
xchg
jge
push
push
ljmp
sar
jmp
es
push
jg
in
and
popa
iret
mov
sbb
arpl
jno
cmp
push
stos
push
lret
xor
pop
ficompl
push
inc
je
ljmp
mov
pop
stos
in
cmp
nop
pop
mov
imul
sub
adc
jmp
jb
scas
sub
sub
lahf
fistpl
jl
icebp
decl
and
lods
mov
sbb
lcall
divl
lcall
xchg
ret
mov
xchg
cmp
mov
cmpb
xchg
mov
push
rclb
movsl
lahf
cli
push
int3
mov
cmpsb
sbb
cmp
cmpxchg8b
jecxz
loop
nop
mov
xchg
jl
dec
push
jle
jl
jno
lcall
inc
movsb
inc
adc
repz
or
push
jno
repnz
adc
and
shl
cltd
loope
negb
lcall
mov
stc
jp
inc
adc
jmp
mov
mov
btc
fidivs
clc
mov
push
movsb
test
mov
roll
ljmp
adc
imul
xor
mov
sbb
inc
repz
mov
mov
jmp
std
lret
int
xchg
fdivr
and
mov
addr16
mov
mov
fcompl
imul
mov
dec
pop
stc
pusha
pop
push
cmp
hlt
clc
gs
out
cmp
cmpb
mov
pop
xchg
xchg
cmp
scas
sub
into
add
dec
loope
les
jbe
loop
jmp
adc
cwtl
adc
dec
xchg
add
sub
cmp
jmp
lods
aam
pop
ficompl
aaa
pop
arpl
lcall
repz
das
mov
loop
pusha
ud0
incl
das
stos
ds
in
mov
inc
sub
int3
std
sbb
test
inc
xchg
add
int3
iret
scas
movsl
xor
test
adc
add
cmp
mov
jmp
aas
xor
push
pop
ss
mov
pop
jp
popa
xor
cld
push
mov
sub
jnp
mov
xor
push
mov
ds
jns
xchg
js
call
jbe
in
sbb
sbb
or
sbb
xchg
in
ficoms
jo
inc
rorb
sub
test
icebp
cmpsb
push
pop
jecxz
dec
or
dec
dec
inc
and
jno
call
sbb
sbb
clc
call
inc
sbb
cld
aaa
and
ficoml
mov
and
dec
mov
cmpsb
bound
in
ss
xchg
sarb
icebp
mov
add
xlat
inc
pop
fs
mov
and
inc
jle
fbld
push
pop
idiv
fdivrl
jne
dec
adc
sbb
ljmp
fwait
movsb
pop
dec
cmp
ret
arpl
cmp
push
in
add
fcomip
dec
sbb
or
aaa
movsl
mov
push
pop
xlat
in
arpl
cli
cltd
mov
xchg
jle
das
outsl
and
mov
mov
scas
movsb
incl
shlb
rclb
dec
call
inc
in
push
mov
sbb
rorb
push
sar
push
fwait
xor
or
xlat
dec
cltd
xor
iret
xor
xchg
daa
movsl
mov
add
sbb
pop
in
jmp
lds
xchg
mov
cltd
mov
adc
dec
rorl
pop
hlt
fimull
sarb
ljmp
mov
je
stc
das
jno
and
ret
aam
insb
clc
retw
jae
and
cs
in
fadd
or
ficoms
push
dec
and
and
mov
movsb
dec
movsb
cmpsl
lret
mov
pop
ret
dec
jle
ficoms
push
mov
inc
cmp
or
jle
mov
fcos
fisubl
mov
stc
push
rcrb
dec
mov
test
mov
xchg
mov
mov
incl
mov
add
cmp
lret
push
jno
dec
push
xor
out
jmp
repz
out
in
idiv
call
loope
outsb
cmp
push
inc
pop
cmp
xor
mov
jmp
jb
xor
mov
inc
aam
test
xchg
popa
push
mov
incl
mov
mov
jns
sub
lcall
jle
xchg
cld
sbb
stos
jnp
mov
dec
jb
scas
std
add
jns
adc
ljmp
adcl
and
cli
lret
adc
add
mov
sub
mov
iret
idivl
push
popa
pop
pop
push
addr16
dec
and
jae
ror
mov
and
inc
sbb
xchg
aas
aas
sbb
push
sti
call
push
inc
or
mov
adc
mov
add
jg
and
shlb
scas
mov
jl
sbb
dec
dec
and
negl
dec
call
sahf
cmp
mov
std
ljmp
dec
loopne
mov
pop
or
push
sbb
enter
jmp
mov
jbe
add
dec
fnstsw
gs
scas
pop
mov
inc
pop
lock
orb
data16
call
or
mov
clc
or
fisubrl
aas
jo
shrb
pop
cmpsb
mov
fistpl
std
fcomps
push
repnz
imul
pop
fimuls
iret
popa
pop
hlt
ljmp
push
inc
dec
icebp
andl
nop
sub
mov
leave
and
fwait
adc
mov
jo
sbb
call
add
cmpsb
push
lock
decl
lret
inc
lret
lret
jo
ffree
pop
sbb
jns
aad
jmp
lods
loopne
notb
sub
ffreep
pop
xchg
and
and
out
inc
xor
jmp
xchg
xchg
push
inc
and
cmp
inc
xor
add
xor
js
aaa
std
jmp
stos
mov
sbb
inc
inc
jl
pop
out
jae
or
pusha
enter
nop
fwait
fcomip
incl
and
add
mov
jo
cmc
les
mov
or
add
xor
incl
push
lcall
adc
jnp
or
in
cmc
loop
lods
inc
mov
jne
inc
sub
mov
mov
lcall
push
push
lret
sub
out
xlat
stos
movl
andb
xlat
xchg
out
iret
enter
insb
adcl
pushf
sbb
xor
call
add
or
sub
jl
scas
and
inc
test
ljmp
gs
inc
add
dec
mov
pop
push
nop
in
sub
xchg
cmpsl
movsb
lock
mov
call
dec
pop
sub
xor
push
sub
fwait
pop
or
cli
clc
or
hlt
fwait
aad
cmp
jmp
push
push
aaa
bound
test
adc
movsb
dec
popa
daa
clc
int3
dec
mov
jg
insb
incb
arpl
mov
dec
lds
scas
cli
mov
xchg
or
andl
nop
jge
imul
lcall
sarb
mov
push
adc
pop
inc
shll
and
fsincos
jns
xchg
mov
cmp
pop
cmpsb
loop
mov
lods
push
mov
aaa
decl
ret
gs
jmp
aad
lds
jge
push
pop
decl
add
xchg
sub
inc
icebp
test
ljmp
cmp
lds
dec
xor
dec
adc
or
arpl
out
mov
cmp
cmp
sbb
hlt
xchg
sti
cli
jo
pmuludq
jno
ficompl
mov
test
ret
and
ljmp
lods
outsl
push
out
xchg
mov
and
lods
data16
lods
mov
decl
mov
push
es
dec
pop
shll
xor
mov
insb
and
sbb
clc
fwait
fs
outsb
jmp
insl
jp
adc
mov
mov
dec
outsl
jg
je
pushl
pop
enter
adc
ret
push
in
push
pop
xor
push
mov
pop
xor
fld
lcall
adc
test
std
ret
incl
insb
fst
imul
stc
inc
sar
jmp
movsl
xor
mov
popa
das
adcl
add
jb
pop
adc
scas
incl
enter
xchg
xor
mov
mov
js
fdivrp
fistps
add
dec
ja
rorb
push
push
imul
and
outsb
add
sub
repz
decl
xor
jge
pop
inc
sub
sti
adc
mov
mov
pop
sbb
cmp
ficomps
pusha
xorl
lock
xor
and
push
sahf
xchg
xchg
push
add
xchg
dec
and
in
mov
adc
int
outsb
aas
mov
cltd
add
sbb
xchg
nop
push
pushf
pop
push
std
fmull
rorb
jmp
or
mov
dec
mov
cmp
mov
lcall
fnstenv
jg
add
into
add
xor
or
scas
in
jmp
pop
inc
int3
mov
push
pop
mov
movsb
jp
mov
stos
sbb
inc
and
mov
add
fwait
leave
imul
testb
stos
push
cld
pushl
xchg
shrl
loop
jno
js
aas
mov
dec
repnz
mov
jp
gs
mov
imul
sbb
stos
js
out
test
mov
jmp
aas
shlb
pop
pop
push
mov
add
or
ljmp
clc
and
adc
in
push
fwait
xchg
gs
stc
dec
xorb
or
decl
dec
mov
push
jge
jbe
push
adc
mov
add
or
xor
dec
adc
aas
mov
ja
jmp
cld
in
maskmovq
testl
mov
xchg
mov
outsl
cli
jp
mov
aad
pop
in
test
fidivrs
lock
ss
sbb
dec
push
mov
mov
pusha
mov
xchg
jnp
add
mov
lahf
les
incl
lock
sbb
or
pop
sub
or
mov
mov
mov
push
jmp
bound
dec
cmp
mov
mov
mov
dec
cmp
out
clc
mov
gs
loope
push
pop
hlt
sub
dec
sbb
shl
ljmp
or
push
cmp
and
sbb
lcall
adc
lea
insb
pop
mov
lcall
lock
hlt
xchg
icebp
sub
jp
loopne
mov
ljmp
clc
cmp
mov
sarb
add
pop
sbb
jge
idiv
mov
lods
and
lods
pop
outsl
xchg
fwait
in
cmp
add
jg
pop
data16
sub
mov
mov
jno
add
lret
inc
push
lahf
push
negl
inc
ljmp
push
fdivp
out
dec
lds
cmp
fdivr
adcb
xor
aaa
cmp
rcrl
call
sbb
mov
ss
pop
jae
mov
xchg
adc
hlt
push
fisubl
add
xchg
xchg
mov
cli
movsl
je
cmpl
fnsave
or
sbb
mov
fildll
cmp
nop
data16
inc
cmp
dec
popa
out
jbe
aam
cmp
imul
loope
decl
xchg
pop
fildll
insb
daa
pushf
jg
cmp
push
inc
inc
bound
xor
lcall
mov
inc
das
sub
inc
das
cli
les
xor
stc
test
aad
decl
lock
mov
cmp
xchg
lea
int3
es
xor
pusha
adc
lahf
ljmp
dec
sti
cmp
jo
mov
int
in
push
mov
mov
addr16
xor
mov
and
jg
mov
pop
and
sub
std
clc
imul
lcall
xor
dec
inc
fnstcw
push
sbb
std
adc
or
ret
sar
in
jle
mov
dec
xor
lods
pop
into
gs
cmp
dec
ja
cmp
in
mov
incb
gs
fldl
aam
bound
xor
add
fmuls
ret
cmc
popa
call
rcrb
aaa
sbb
inc
adc
rcll
ljmp
pop
xchg
and
pushl
ljmp
push
adc
fsts
ja
aad
xor
daa
inc
xchg
push
cmp
insl
xor
ljmp
je
nop
ud0
cs
xor
in
sahf
test
call
xor
ds
cmovl
pop
in
cmpsb
sub
inc
mov
sbb
pop
mov
xor
incl
and
in
add
scas
mov
es
mov
fcmovnu
sbb
fldcw
ljmp
mov
mov
jle
mov
jae
lods
cltd
jle
popf
imul
sahf
sbb
adc
jg
xchg
sub
int
dec
in
cmp
dec
adc
fadd
mov
call
outsb
es
out
inc
jmp
orl
pushf
adc
mov
fnstcw
cmp
and
jae
repz
mov
ja
adc
push
mov
je
sub
into
hlt
jmp
gs
mov
xchg
inc
hlt
cmpsl
rcll
insl
out
dec
lcall
js
mov
rorb
loope
test
mov
sbb
xor
stos
pushl
sbb
pop
cwtl
sbb
push
push
jecxz
into
cwtl
cmpsl
test
xor
std
call
mov
cmp
cmp
jnp
mov
mov
call
jmp
cltd
mov
out
or
inc
sarl
ja
lret
rorb
aaa
daa
mov
nop
test
or
xchg
pop
fwait
mov
pop
ljmp
incl
mov
outsl
insl
cmc
insb
ror
adc
popf
pusha
jg
dec
adc
in
aad
sbb
in
mov
mov
pop
ljmp
in
mov
jge
adc
add
xor
push
jne
push
and
stos
sub
int3
xor
xor
xor
add
ljmp
xchg
rcl
iret
loopne
adc
int
dec
je
repz
ljmp
lcall
add
adc
fcomps
push
inc
push
inc
gs
ljmp
jo
mov
jl
jg
add
mov
xlat
repz
lock
lods
ja
cmp
and
ljmp
or
mov
or
jb
inc
addb
dec
lea
test
popa
je
lcall
dec
mulb
sbb
mov
or
movsl
jl
lret
pop
cld
jae
flds
inc
repz
mov
mov
scas
or
mov
out
gs
pushf
push
adc
decl
int
pop
mov
rcll
xchg
jecxz
pop
jl
je
movsb
cmp
dec
xchg
push
sarl
loopne
xlat
mov
xchg
xchg
jno
inc
aad
sbb
xchg
in
fildl
sbb
and
jecxz
mov
xor
mov
lock
inc
call
add
call
add
jg
test
push
leave
ficompl
loop
dec
es
lods
sub
mov
cltd
add
std
lret
call
std
or
and
xor
add
popa
xchg
mov
movsl
mov
stos
pop
roll
inc
dec
cmpsb
insb
inc
inc
aam
and
orl
mov
ljmp
aas
xor
xchg
mov
popf
ljmp
lcall
mov
sbb
out
jmp
push
dec
nop
stos
outsl
cli
call
jo
mov
mov
push
popf
lcall
ljmp
jmp
and
addr16
sbb
enter
shrl
pushl
sub
out
pop
push
sbb
shll
ret
cmpb
cmp
pushl
or
jne
imul
test
mov
cwtl
arpl
adc
add
jae
lcall
rclb
add
cli
mov
xchg
sbb
push
in
incb
mov
frstor
xor
sub
or
js
mov
inc
pop
adc
imul
pop
fdivrs
and
in
cmp
jg
mov
cwtl
sub
mov
push
jb
cmp
mov
xchg
adc
cmpsb
sub
push
insl
mov
lcall
jo
cmpsl
xchg
outsb
out
insl
lock
or
adc
in
jns
push
stos
sbbb
scas
imulb
inc
clc
insb
and
inc
call
test
push
rorl
idivl
ljmp
fcmovb
iret
jg
adc
mov
lods
xchg
lahf
ljmp
and
imul
push
icebp
popf
and
add
jle
fdivrl
or
call
sub
mov
push
add
mov
jecxz
dec
jbe
push
ret
adc
mov
pushl
insl
adc
lahf
and
movsb
rcrl
std
aam
and
sub
pushl
push
dec
or
aad
xorl
gs
clc
stos
fptan
bound
push
xchg
ljmp
aaa
xchg
je
clc
arpl
test
and
test
xor
and
loope
lcall
rolb
aas
sarb
pop
adc
mov
jg
xchg
or
mov
call
mov
fcmovb
add
imul
stos
xlat
sahf
test
and
sbb
in
push
arpl
or
cs
test
cld
inc
call
or
decl
sub
mov
push
pop
mov
inc
ret
xchg
push
ljmp
xor
pop
xchg
hlt
sub
cmp
mov
pop
imul
cld
into
jnp
cltd
pop
stc
inc
mov
insb
xchg
mov
xchg
mov
cmp
pop
cmpsb
dec
push
jmp
loope
sub
loopne
or
je
adc
mov
hlt
push
pop
clc
add
js
incl
ret
mov
push
je
dec
or
jle
test
pop
push
mov
pop
gs
incl
cld
mov
add
adc
add
cmpb
call
incl
xor
int3
pop
mov
adcl
aad
mov
std
jg
jl
fcomps
shl
or
decb
mov
incl
pop
push
arpl
jno
push
das
dec
insb
xchg
push
adc
mov
adc
and
call
addr16
sub
iret
hlt
xchg
xchg
pop
arpl
xchg
or
add
xor
mov
lret
lret
arpl
in
movsl
daa
sbb
cmp
push
add
ljmp
fsub
xchg
jge
xor
hlt
nop
jae
lds
adc
shl
insb
decl
mov
rcrb
xor
test
xor
pop
cmpsl
lods
std
push
lods
jle
dec
insl
call
std
std
sbb
xchg
jmp
pop
jg
call
add
sbb
push
push
filds
sbb
sub
daa
int3
loopne
movsb
cmp
jbe
aas
pop
stc
scas
leave
dec
jno
jnp
decl
lret
mov
jle
outsl
jl
out
out
arpl
jmp
mov
orl
lret
push
jl
jg
sbb
or
mov
add
mov
pop
ds
cmp
call
pushf
xchg
mov
sub
add
pop
daa
add
mov
filds
sub
popw
dec
sti
jno
jno
call
fistpl
jg
decb
and
mov
push
and
or
inc
sub
jmp
xchg
outsl
inc
in
sbb
mov
loop
xor
xor
sbb
addb
in
aam
iret
loop
ljmp
shlb
enter
mov
pop
pop
repz
xor
mov
dec
cmp
sbbb
imul
push
jmp
sahf
scas
xchg
lahf
cltd
xorl
push
jg
sbb
lret
ljmp
mov
push
aam
test
ljmp
pop
jo
push
mov
cmp
push
jg
enter
ret
cmp
cli
imul
sti
in
jo
out
fisubrl
jmp
fsubrs
test
jle
mov
cmp
decl
jae
fistpl
mov
outsl
and
jno
cmp
int3
aaa
adc
mov
mov
ja
lcall
fsubrl
mov
pop
enter
addr16
call
push
jg
lea
aas
test
out
push
inc
popl
daa
adc
in
lcall
ret
and
dec
cmc
pop
stos
idivl
jmp
pop
lret
pop
mov
stc
fmull
push
call
cmpsb
xor
jae
mov
cs
stos
shlb
mov
jmp
jb
dec
out
inc
add
dec
inc
insb
mov
fcmovu
lea
lcall
scas
and
adc
add
fsubrl
in
ret
mov
scas
mov
icebp
mov
mov
out
or
jle
ds
shlb
adc
sbb
stos
repz
aam
test
dec
mov
push
push
adc
xor
lcall
or
call
xchg
movsl
mov
lods
mov
fiaddl
jmp
or
cmp
decb
out
jg
leave
aad
lods
fwait
cs
sub
loopne
scas
or
pushf
imul
mov
or
pusha
ror
dec
push
push
movsl
fmuls
xor
adc
or
push
mov
mov
shll
or
fwait
out
dec
ljmp
jmp
jnp
mov
cmp
and
jbe
idivl
pusha
adc
scas
decl
je
fcom
cmp
push
and
aas
lods
mov
data16
sub
add
gs
jo
insb
cmp
ds
decl
sbb
adc
lahf
into
mov
push
xor
ficompl
sbb
das
mov
inc
mov
jnp
xchg
jo
mov
je
fldenv
jp
adcl
inc
test
pop
mov
jo
add
pop
lods
divb
dec
arpl
mov
push
xor
sti
dec
jnp
adc
jmp
pop
dec
pop
pop
into
fcmovnb
mov
cwtl
mov
inc
mov
xchg
nop
shll
adc
std
cli
loopne
jg
xor
shll
push
adc
ja
pop
fidivrs
popa
sahf
daa
cld
jns
jg
test
cmpsb
jns
shrl
aad
inc
push
cmp
iret
andb
insl
outsb
mov
pop
outsb
inc
mov
stos
icebp
fcomip
lcall
clc
test
insb
push
adc
add
xchg
pop
les
cli
incl
cmpsl
mov
cltd
out
mov
scas
cwtl
or
jecxz
lods
out
mov
fdivrl
and
pop
outsl
into
test
adc
add
sahf
sti
out
xchg
bound
mov
xchg
sub
or
inc
mov
mov
xor
aad
roll
stos
clc
adc
lock
pushl
data16
mov
int
push
pop
cli
lfs
jns
sbb
fs
lcall
sbb
inc
popf
clc
dec
iret
sub
out
repnz
fwait
lea
dec
arpl
leave
into
lcall
push
jb
cmp
xor
pop
stc
jo
cmc
inc
int3
jle
scas
repz
mov
incl
ficomps
loop
mov
mov
or
ret
mov
out
sbb
jle
and
les
fucomip
ret
loop
cmc
fs
fcomip
jmp
pop
das
xor
bound
popa
jl
fsubrs
push
xor
outsl
mov
mov
mov
push
jmp
ljmp
pop
sbb
jo
movsl
ret
xor
cli
add
fists
sbb
sub
mov
mov
and
push
push
mov
add
push
xor
scas
push
rcrb
lahf
pop
incl
fcomps
xchg
cmp
mov
mov
mov
push
jmp
cmp
inc
dec
jno
mov
clc
lods
test
dec
into
push
out
inc
jge
adc
sub
jmp
lds
mov
inc
scas
jne
fstps
cs
push
or
mov
loope
das
incl
repz
push
pop
shrb
xchg
js
mov
lcall
inc
xor
pop
cld
decl
sbb
scas
aaa
mov
aaa
popf
and
test
push
sub
inc
push
xchg
cli
lahf
mov
xchg
push
repnz
testb
xchg
test
xchg
jmp
push
or
mov
fcomps
cmpsb
push
push
mov
aas
call
xor
loopne
mov
lea
adc
sub
xchg
mov
out
pop
xchg
out
and
mov
xchg
loop
xor
icebp
stc
mov
xchg
mov
xchg
popf
sub
cli
cmp
cmp
sbb
cmp
mov
jno
imul
outsb
or
sub
push
or
push
lret
add
sub
cmp
fwait
xor
loopne
mov
pusha
push
sbb
decl
imul
cmp
mov
cs
incl
fdivl
inc
inc
insl
push
in
rolb
lahf
mov
or
mov
pop
lret
clc
lcall
mov
inc
shlb
mov
cwtl
decl
mov
mov
rorb
add
mov
out
or
sub
icebp
pushl
movsl
inc
jp
mov
push
or
mov
lcall
popf
sarb
inc
jl
push
jno
pop
leave
sub
fidivs
mov
lahf
push
adc
xchg
cmp
inc
out
mov
sub
mov
mov
ret
adc
xor
lcall
cmp
sarl
jge
enter
ret
out
sbb
dec
inc
daa
in
scas
pop
shrb
mov
hlt
fst
roll
xor
test
mov
adc
cmp
sarb
fnsave
sub
push
loop
ljmp
out
add
popl
and
mov
mov
mov
ljmp
rcrb
push
idiv
in
dec
fisubrs
adc
add
decl
add
imul
rolb
mov
call
dec
dec
imul
fs
popa
add
cli
cli
clc
cltd
and
jo
pop
xor
fdivs
mov
das
out
clc
ljmp
mov
call
mov
outsb
inc
mov
lock
mov
mov
xor
test
cmp
test
incl
std
push
jge
sti
xor
mov
insb
imul
jae
data16
popa
jge
pop
pop
push
icebp
xlat
popf
mov
and
or
dec
fs
fsubs
ja
dec
lods
ljmp
mov
aaa
sub
aam
lods
mov
ljmp
sub
add
ljmp
loopne
xor
push
mov
mov
xor
xchg
mov
cmp
sub
mov
push
movsb
icebp
test
loopne
stos
cmc
adcb
fildll
mov
adc
lcall
adc
shlb
push
sarl
movsl
mov
fcompl
jns
mov
fstpt
push
mov
pusha
xchg
inc
shlb
arpl
hlt
mov
cli
hlt
ljmp
sarb
jp
arpl
fistl
mov
js
jg
dec
lret
jmp
add
pop
sar
push
ss
mov
xchg
push
sub
lea
addr16
push
xchg
inc
lcall
sti
inc
into
inc
bound
lahf
lahf
mov
cmp
test
stc
ja
add
ljmp
push
sbb
cwtl
push
adc
fisttpll
cmovle
stc
mov
xchg
movsl
inc
mov
mov
pop
mov
xor
push
push
xorb
inc
push
pop
cltd
xor
out
and
jns
dec
mov
ljmp
out
lahf
rcrb
jne
sbb
adc
cwtl
and
push
test
lcall
scas
jb
int
add
arpl
sub
dec
mov
dec
in
aas
mov
or
call
pop
add
pop
pop
rcrb
mov
mov
cmp
or
pushl
xchg
mov
fiaddl
xchg
jmp
enter
dec
nop
scas
mov
xor
sub
incl
cs
cmp
into
imul
mov
imull
loopne
mov
fnsave
ljmp
clc
sti
ss
jo
cli
je
and
fildl
movsb
mov
sti
fs
pop
insb
and
ja
dec
in
mov
pop
mov
mov
insb
movsl
loopne
xor
in
sbb
lcall
jo
or
or
repz
sbb
xchg
xchg
jle
add
movsl
push
inc
jae
lea
mov
mov
xchg
xchg
lcall
stos
push
pop
bswap
lcall
arpl
dec
and
sahf
movsb
jge
mov
jg
data16
popa
xlat
sub
inc
test
cld
sbb
mov
outsb
fdivs
sub
mov
jge
fistl
or
stos
pop
movb
mov
dec
loop
mov
fcmovnb
xor
movsb
aad
cmp
mov
ficoml
sbb
jns
mov
pushl
imul
push
in
xchg
adc
cmp
jg
and
aaa
push
dec
mov
sub
sub
jl
les
out
cwtl
cmp
xchg
stos
dec
jecxz
iret
cmpxchg
outsl
sub
insl
ds
mov
lcall
das
data16
call
fildl
and
cmp
mov
ljmp
shr
sbb
adcl
pop
add
js
mov
jmp
push
push
sub
and
pop
xchg
lret
dec
out
out
sub
add
insl
pop
xor
incl
xchg
jl
cmpsl
fcos
and
pusha
aam
repz
shrb
sti
das
sbb
fsubl
lret
xchg
es
cmp
clc
inc
mov
popa
mov
cmpsb
out
cli
jg
aam
lods
push
pop
cmp
jmp
icebp
test
cmp
dec
aad
insb
pushf
cld
jmp
jge
cs
pop
xchg
sti
leave
movsb
imul
jbe
outsl
add
mov
dec
ss
add
mov
cmp
test
repnz
int
leave
lods
xchg
jo
repnz
mov
jl
pop
cmpl
ljmp
add
add
jge
mov
movsl
xor
push
jmp
decl
jp
and
imul
mov
into
jns
fiadds
sbb
sub
jg
clc
lahf
adc
aaa
shll
adc
add
mov
outsl
pop
repz
ljmp
stos
addr16
dec
pop
xor
test
aas
jge
add
xor
xor
fwait
sub
incl
push
mov
je
sub
mov
fbstp
jle
mov
rcr
out
enter
ljmp
ror
daa
scas
sub
push
sub
in
xchg
shlb
inc
out
adc
dec
sbb
aad
xlat
ljmp
lea
into
pusha
or
and
mov
mov
cmp
cmp
into
mov
incl
je
mov
out
jl
xorb
out
sbb
xlat
movl
and
ret
or
mov
fnsave
test
call
dec
fs
jmp
and
mov
sahf
cmp
dec
sub
clc
mov
sub
xchg
pop
cli
out
lcall
out
adc
in
mov
iret
xor
inc
and
aam
repz
addr16
dec
loop
addr16
loope
and
mov
adc
fdivr
push
add
ss
sbb
ljmp
ss
lret
dec
repz
and
cmc
jmp
popf
sbb
orl
es
pop
jl
sahf
in
out
push
aam
sti
scas
pop
loopne
dec
xchg
test
insl
cwtl
push
mov
sbb
xchg
lea
add
cmpsl
jns
jmp
push
pop
cmpsl
jl
incl
in
rcrl
popa
clc
mov
dec
cmpsl
sbb
sbb
ret
incl
pop
pop
or
xchg
leave
or
notb
sub
inc
cmpsl
cmpb
adc
nop
scas
lret
lock
sbb
aad
add
mov
inc
sar
fdivs
sbb
push
loop
sbb
mov
mov
roll
call
std
imul
sbb
and
mov
imul
std
xor
ljmp
movsb
decl
mov
cwtl
cmpsl
cmp
icebp
xchg
mov
mov
mov
filds
scas
sub
lcall
or
mov
add
je
jp
loopne
mov
mov
cld
push
mov
ljmp
ljmp
cmpsl
mov
out
mov
push
and
mov
cli
test
pop
outsb
xlat
pushl
jno
jle
jno
repnz
xchg
shrb
push
xchg
mov
inc
aaa
fisttps
sbb
inc
xor
mov
mov
lods
in
fldcw
gs
lcall
insl
xor
sub
cmpsl
aaa
xchg
mov
pop
and
xorb
rorl
cli
jmp
adc
xor
les
std
cmp
pop
sbb
sbb
scas
repz
fdivrp
ljmp
dec
outsl
test
mov
mov
loope
pop
sbb
xchg
xor
push
cwtl
lods
inc
inc
test
call
cmc
jb
sub
push
and
jmp
jnp
es
mov
ja
je
iret
fcomip
ljmp
adc
dec
xchg
iret
repnz
ret
jecxz
in
leave
scas
jle
pshufw
ljmp
aaa
cmp
add
xchg
sub
lods
repz
jecxz
shlb
test
les
in
pushf
push
or
fbld
in
add
or
outsl
inc
lods
lcall
jecxz
jmp
pop
loop
push
push
xchg
aaa
cmp
cmp
push
push
and
jmp
lret
sar
jmp
xor
sub
push
les
movsl
in
aaa
lds
push
pop
ljmp
or
xchg
xchg
jmp
pop
outsb
pop
mov
enter
cmp
loopne
addr16
cmpsb
xlat
clc
jb
and
xchg
and
sbb
leave
mov
mov
pop
ja
lahf
mov
sub
add
daa
pop
ss
or
lods
imul
mov
jp
imull
iret
cmp
push
jl
js
mov
ljmp
mov
xchg
dec
pushl
mov
popa
std
dec
inc
xchg
xor
lret
rolb
loopne
mov
mov
xor
decl
out
pusha
xor
fidivrs
pop
pop
aam
mov
mov
push
sbb
pop
inc
mov
imul
mov
jl
push
jb
cmp
fidivs
insl
out
or
clc
jmp
push
jle
ret
call
andl
sub
ss
movsl
popa
mov
xchg
repz
call
rcl
mov
inc
insb
dec
cmpsb
or
cli
or
lahf
push
clc
add
ljmp
adc
ret
push
dec
mov
jecxz
loope
or
cmp
and
ror
add
fadds
sub
outsl
clc
jmp
mov
ds
inc
jmp
insb
or
in
movsb
mov
jle
pushl
adc
jg
sbb
aam
push
into
push
jp
repz
push
enter
iret
ss
ljmp
xchg
test
test
pop
aaa
fdivs
outsl
cmpb
jle
inc
sbb
xor
add
mov
mov
cmpsb
cmp
jmp
cmp
sbb
daa
sbb
cmp
xchg
cmp
dec
addb
dec
lahf
and
int
xchg
iret
mov
scas
mov
xor
dec
fwait
ret
movsb
popf
pop
mov
adcl
ret
in
cld
sub
mov
test
cmp
and
dec
adc
adc
mov
cmp
pusha
fdiv
sbb
mov
sub
ja
cld
pusha
mov
outsb
add
inc
jno
mov
jmp
pop
mov
and
repnz
outsl
and
mov
out
inc
inc
outsl
out
cli
movsb
xchg
cmp
mov
nop
xor
jle
inc
and
pop
std
jmp
dec
lahf
cmp
fnsave
inc
cmp
in
xor
cmpsb
xor
dec
push
testl
testl
movsb
dec
xchg
mov
les
mov
leave
lods
addr16
std
xchg
mov
je
jge
lcall
push
cmp
inc
xor
xchg
sbb
push
or
pop
mov
jge
scas
push
cld
aam
dec
or
outsl
notb
mov
jge
sahf
mov
outsl
cwtl
dec
fldl
push
jae
sub
inc
les
in
ds
push
in
sub
fildll
pand
stos
push
fadds
jno
std
push
decl
mov
and
sub
inc
lea
pushf
stc
jo
int
xchg
scas
incl
call
sbb
cmpsb
repnz
lea
pushl
pop
lods
mov
or
int3
jl
or
loope
jl
pop
popa
test
ss
pushl
xor
seta
fmull
fsubrs
pop
sbb
mov
repnz
add
pushf
ds
outsl
xor
test
mov
test
mov
xchg
mov
out
mov
jge
daa
in
mov
pop
in
outsb
jmp
cmpsb
jl
les
iret
mov
popa
inc
mov
cmp
mov
mov
add
or
and
filds
sub
test
test
add
pminub
idivl
or
in
sar
out
clc
into
stos
icebp
enter
daa
push
aam
lock
cmp
jmp
cli
pop
jl
add
xchg
adc
test
data16
jne
jns
xor
inc
mov
dec
addr16
stc
ljmp
or
mov
push
sbb
add
mov
jmp
push
jge
adc
adc
insl
xchg
loop
mov
jle
push
push
bnd
shrb
pop
cmpsl
push
push
std
cmp
std
jmp
push
jnp
or
test
pusha
fiaddl
adc
mov
sub
inc
inc
pushf
and
pushl
stc
pushl
push
mov
stos
insl
addr16
cltd
sbb
cmpsl
imul
adc
push
cld
ljmp
shl
sbb
gs
rorl
mov
sbb
mov
ljmp
or
outsb
rolb
push
lods
sub
daa
push
and
popf
jecxz
pop
jo
xchg
lcall
incl
inc
jbe
fcomp
and
or
orl
fcos
out
clc
incl
mov
imul
xchg
call
mov
mov
dec
mov
jp
std
enter
ss
jl
mov
imul
inc
pop
scas
sbb
outsl
mov
add
or
pop
jle
imul
sar
jg
jmp
jl
xchg
cmp
insb
movsb
mov
in
or
dec
cmp
loopne
ljmp
pop
das
bound
cmpsb
out
sbb
aas
call
cmp
push
xor
icebp
mov
leave
cmpl
adc
jae
push
iret
sbb
ffreep
sti
insl
sti
mov
imul
mov
cmp
or
ljmp
pushl
jb
gs
inc
outsb
push
sub
enter
mov
and
jg
sahf
pop
inc
movb
rcrl
mov
stos
dec
sub
lret
xor
and
movsb
fwait
mov
pop
popf
xchg
mov
xor
sub
cmpsb
xchg
fstpl
dec
fbstp
adcb
clc
dec
and
mov
add
lea
fcomip
jmp
out
xchg
data16
pop
mov
dec
in
sub
inc
repnz
dec
pop
jecxz
add
cltd
xor
mov
inc
lcall
stos
lods
pusha
aas
or
inc
inc
ret
mov
cmp
pop
mov
fsubs
xchg
sar
lcall
pop
std
cmc
sbb
mov
cmpsl
pushf
sbb
movsl
aam
add
jl
ja
and
sub
ljmp
cmc
and
data16
mov
push
sbb
aam
xchg
lahf
add
out
pop
push
cmp
sub
mov
daa
inc
mov
cld
dec
dec
hlt
popa
mov
mov
mov
orb
cmp
lcall
ficoml
cld
lcall
xchg
stc
and
aas
mov
ret
push
pop
es
loope
lds
jo
or
mov
fistpll
mov
ljmp
jmp
fimuls
mov
dec
jmp
es
mov
and
sbb
hlt
incl
push
or
xor
sub
adc
js
out
push
and
dec
cmc
mov
inc
push
stc
cmp
sub
sub
sbb
dec
mov
ljmp
scas
push
inc
xchg
shrl
js
adc
sub
jmp
nop
sbb
and
pushl
cltd
pop
into
mov
scas
sbb
fisubrs
mov
aam
roll
repz
into
pushl
sbb
mov
cmc
xchg
push
stc
inc
push
aas
divl
inc
lds
fidivrs
decl
lock
sbb
or
or
mov
xor
sub
jmp
leave
jmp
add
pushf
jg
aas
xor
mov
mov
das
push
sar
dec
add
leave
out
dec
ret
aad
jp
and
clc
mov
hlt
insl
jg
out
enter
nop
mov
aaa
xor
sarb
lods
notb
jmp
xchg
mov
dec
cli
mov
call
pop
mov
mov
sbb
decl
clc
jo
popf
popf
mov
jge
add
xor
lahf
or
xchg
ljmp
fs
test
and
mov
pop
pop
repz
aaa
xchg
in
mov
call
mov
jns
fs
mov
jbe
push
pusha
xor
xchg
inc
addr16
sub
int3
push
call
or
and
or
decl
mov
and
jbe
call
pushf
add
xor
jl
sbb
int
mov
dec
mov
mov
xchg
mov
jecxz
push
movntps
in
jecxz
mov
push
popf
ja
dec
lcall
push
jl
push
mov
adc
movsl
sub
inc
xchg
fildll
imul
mov
jmp
push
cmpsl
xor
mov
cli
inc
push
jle
adc
jbe
sub
xchg
mov
incl
fisttps
fcmove
fildll
ds
jmp
xchg
pop
mov
sbb
cmp
lcall
ret
pop
adc
call
dec
lret
shlb
cmpl
lcall
mov
in
pop
enter
jb
pop
ljmp
scas
out
hlt
jo
pushw
call
in
fs
mov
js
ja
xor
or
bound
and
call
or
imul
and
inc
adc
dec
orl
push
push
pusha
fmul
sar
jmp
and
imul
or
mov
add
add
inc
push
popf
call
sbb
inc
mov
xor
int3
ret
or
orb
pushl
cmpsl
lods
mov
pop
xor
add
es
icebp
xchg
jle
mov
decl
mov
call
inc
cmp
sub
call
ud0
push
scas
jo
lret
ret
imul
ljmp
dec
cwtl
insl
inc
inc
mov
lods
adc
xchg
incl
pop
sbb
subl
cmpsb
xchg
mov
lahf
mov
mov
pop
cs
adcl
xchg
lcall
test
mov
movsb
pop
push
push
add
cltd
xchg
adc
pop
mov
xor
fsubs
sarl
jno
mov
int
push
aad
loop
fadds
mov
sbb
mov
lea
dec
mov
push
lret
dec
lods
push
pop
jae
loope
jecxz
iret
sbb
aas
out
jle
push
inc
lret
push
sbb
push
push
idivb
push
lret
add
ljmp
imul
xor
ret
scas
adc
fs
inc
lcall
xlat
ljmp
lods
mov
dec
jge
test
addr16
lods
sub
lcall
notl
push
mov
xor
inc
lock
cmp
mov
loop
add
xor
es
dec
cwtl
xchg
xor
decb
jmp
mov
data16
iret
rcrl
sahf
sbb
mov
sub
aaa
fs
lock
mov
xchg
daa
pop
or
rol
movsb
movsb
mov
decl
loope
mov
mov
xor
push
push
dec
std
mov
jmp
addr16
sbb
aas
adc
sub
cli
out
aam
jo
and
lahf
adc
bound
push
gs
lcall
shr
stos
cmp
mov
jg
and
mov
mov
adc
aam
pop
push
call
out
shl
and
push
je
sub
pop
loop
pop
push
push
jp
jmp
jmp
adc
cld
imul
sub
or
mov
test
sbb
test
mov
adc
mov
pop
int3
loopne
xchg
orl
inc
and
xchg
loop
pop
fwait
ljmp
mulb
loop
or
popa
call
jb
add
sar
cli
add
mov
mov
fucomi
je
add
mov
lcall
js
mov
mov
jb
dec
mov
mov
mov
pop
jo
push
mov
call
aaa
mov
inc
sbb
repnz
mov
xor
dec
pop
add
call
mov
stos
inc
mov
xchg
jno
jb
jg
sub
jge
jge
mov
ljmp
std
in
xchg
xchg
dec
int
mov
jle
insb
adc
data16
test
inc
xorl
adc
add
ljmp
sub
jg
jecxz
adc
jns
stos
incl
sbb
pop
loopne
fstl
push
mov
push
xor
divl
push
lods
inc
mov
xchg
xchg
cmp
jbe
mov
lcall
ljmp
dec
test
pusha
jnp
pop
push
loopne
aam
xorb
out
xor
js
push
ja
inc
mov
and
inc
lcall
scas
mov
divl
movsb
and
lcall
dec
mov
adc
movsl
and
sahf
xchg
xorb
mov
xchg
incb
pop
ret
hlt
shlb
std
out
sbbl
inc
mov
push
stos
mov
pusha
sbb
pop
push
stc
std
cmpsb
cmc
mov
jno
arpl
lods
mov
cmpsl
adc
mov
or
test
or
dec
push
pop
shlb
or
outsb
fmuls
lds
incl
add
sub
arpl
xchg
dec
dec
loopne
push
mov
pop
mov
push
adc
jg
into
sahf
sbb
push
xchg
sub
sbb
lcall
shrl
xor
xor
cmp
jge
ret
xlat
push
xchg
sbb
call
push
lcall
js
mov
xchg
or
cmp
xchg
loopne
incl
cmc
das
push
arpl
lds
ss
leave
adc
sbb
data16
sti
inc
movsl
or
pop
pop
mov
mov
inc
jmp
das
sub
or
sbb
out
cmp
ljmp
xchg
rolb
add
movsb
jne
dec
adcb
ljmp
in
dec
addr16
jle
jae
cmp
fdivl
sub
outsb
movsl
hlt
loope
ret
xchg
push
pop
out
jne
popf
stos
inc
mov
lea
into
sbb
and
out
testl
decl
cmc
sahf
xor
mov
imul
rcll
adc
xor
xor
mov
pushl
outsl
pop
ficoms
enter
sahf
jp
movsl
ja
xorl
imul
popf
mov
and
js,pn
mov
xchg
out
and
mov
pop
push
fstpt
inc
jg
stos
adc
addl
test
push
inc
hlt
push
mov
inc
lea
xchg
dec
add
jne
je
lds
fdivr
in
jmp
shr
aas
je
filds
loope
js
sarl
adc
call
shrb
push
jne
mov
cmp
repz
xchg
and
test
jns
cld
lods
enter
shr
sub
xor
shlb
decl
add
xchg
mov
xchg
out
arpl
add
mov
sub
mov
stos
xor
imul
fmul
ja
sub
mov
lods
sub
sbb
jb
cld
fsubrl
push
adc
jmp
sub
cli
lods
mov
neg
pop
push
leave
pop
cmc
xchg
lods
pop
cmp
lret
jmp
call
and
mov
je
pop
mov
cmp
sub
inc
sahf
mov
jle
call
lret
inc
add
add
outsb
jmp
cltd
in
inc
adc
or
call
or
push
sub
mov
or
jmp
push
push
imul
test
pop
add
cld
decl
lock
ds
pop
and
push
and
xchg
mov
add
xor
test
mov
repnz
or
push
lcall
rclb
out
xchg
push
adc
sub
jnp
lahf
popf
jae
loopne
call
add
jmp
mov
lock
scas
das
jp
or
or
sbb
xchg
or
incl
dec
int3
cli
rep
jno
jle
nop
not
dec
jmp
ja
lds
xor
fbstp
incl
cvtps2pi
es
fsubr
jne
test
add
cmc
enter
mov
mov
or
fdivs
movsb
and
add
sub
cld
std
repz
int3
fwait
mov
iret
hlt
scas
lods
ss
sahf
iret
jmp
jle
loope
movsl
add
hlt
mov
ljmp
lcall
sbb
dec
or
pop
jmp
aas
aad
jmp
jae
cmp
les
inc
mov
testl
lahf
aam
jo
test
out
shrb
push
jge
sar
popf
nop
lds
add
mov
lret
push
mov
pop
mov
and
lods
jae
mov
mov
repnz
aaa
mov
adc
adcb
adc
adc
pop
leave
movsl
push
adc
pushl
sub
mov
push
jnp
das
mov
cmp
std
ja
enter
ljmp
lds
stos
leave
dec
mov
add
sahf
test
scas
test
outsl
jmp
sbb
incl
test
xlat
add
fldl
cmp
push
mov
jmp
mov
and
mov
cmp
or
or
movsb
add
xor
movsl
outsl
cmp
jmp
hlt
adc
clc
adc
inc
in
and
out
xor
cmp
inc
lret
call
std
inc
jne
adc
leave
push
jmp
loope
mov
adc
jb
cld
cs
enter
xchg
sbb
ljmp
lcall
pushf
loopne
push
inc
loope,pt
and
call
jb
add
cmpsl
jo
add
fimull
pop
int
imul
or
addb
jge
je
mov
sar
lahf
dec
in
enter
mov
cmpsb
jle
jns
dec
repz
cmpsb
pushl
sbb
imul
or
mov
insl
pop
mov
xchg
push
addr16
call
mov
scas
sbb
pop
xchg
pop
mov
cltd
jnp
addr16
stos
mov
jg
mov
dec
fisubs
pop
mov
inc
adc
mov
arpl
jbe
cltd
sti
shll
cld
or
dec
xor
pop
pop
push
lds
test
inc
lahf
cmp
mov
sbb
cmc
out
xchg
dec
je
test
or
call
mov
inc
sub
js
pop
dec
test
mov
add
mov
daa
xchg
and
add
add
or
shlb
hlt
and
mov
out
je
imul
mov
mov
cmc
aaa
imul
mov
popf
dec
pop
and
jmp
mov
jbe
stos
push
push
rolb
cmc
shll
fwait
aas
push
lret
hlt
incl
fwait
mov
xchg
sub
cmp
insb
scas
and
arpl
fcomip
jb
leave
sub
xor
or
imul
xlat
mov
jg
pushf
mov
int
rol
in
sbb
push
int
mov
or
or
in
insl
jns
lcall
adc
xlat
inc
mov
nop
movsb
mul
mov
xor
mov
js
cmp
jbe
adc
sub
and
ret
incl
jp
imul
push
clc
xorl
inc
fldt
sub
std
call
xorb
cmc
jge
outsb
iret
mov
push
xchg
add
stc
mov
out
test
repnz
or
push
lret
rorl
mov
jne
scas
sbb
xchg
rclb
xchg
aas
jle
jge
mov
aas
dec
mov
sti
jne
lods
or
hlt
lret
adc
mov
pop
ss
fldt
incl
leave
or
jne
nop
movsl
les
nop
xchg
rcr
mov
pop
sbb
push
fists
mov
sahf
int
pop
or
lcall
xlat
in
and
fwait
jb
and
mov
mov
mov
jg
fcmovne
cs
mov
in
mov
pop
iret
addb
push
push
mov
cmp
jno
push
popf
fdivrs
call
nop
lods
shrd
sub
lods
adc
aad
sbb
xchg
adc
mov
rclb
mov
incl
push
arpl
and
mov
fistps
sbb
xchg
xchg
je
movsl
mov
add
jae
dec
lods
dec
cmp
fidivs
sub
xchg
incl
subl
jecxz
mov
movsb
mov
incl
mov
pushf
mov
imul
xor
aad
sbb
cmp
lea
xchg
cs
sbb
sub
ds
loop
mov
inc
jg
dec
mov
decl
movsb
into
repz
jnp
into
mov
mov
sub
fimull
inc
out
mov
lret
enter
and
pushl
loop
inc
adc
cli
lcall
sub
push
cs
push
xchg
sti
pop
inc
in
int3
in
call
test
daa
sbb
fwait
out
ret
lcall
fmul
jnp
or
pushl
shll
sub
add
popf
cmp
lds
sub
pop
ret
int3
bound
aas
popa
sbb
jg
push
sbb
mov
add
std
shrb
inc
test
loop
fisubl
clc
mov
push
jmp
pop
xor
lret
repz
push
push
push
lods
mov
test
jg
out
nop
pop
dec
sahf
fsubp
jecxz
subl
dec
shr
aad
fdivrs
call
push
cmp
roll
add
in
repz
sub
jo
int
aad
fisubl
je
ljmp
add
jl
dec
dec
inc
jae
sbb
xor
lea
push
hlt
pop
jno
pushl
sbb
js
mov
pop
int3
mov
lods
popl
out
pop
jge
xchg
outsl
mov
cld
pushl
jnp
in
mov
jb
inc
xor
das
int3
gs
stc
call
negl
add
pop
dec
push
clc
mov
push
and
das
movsb
enter
mov
cli
push
dec
dec
ds
lock
mov
int3
pop
bound
fwait
test
mov
pop
xchg
loop
jle
inc
ljmp
in
mov
mov
adc
mov
shl
add
mov
dec
mov
cwtl
pop
roll
xlat
add
push
inc
jecxz
jb
clc
or
cmp
dec
mov
mov
jnp
add
out
pop
inc
scas
dec
xadd
jecxz
xchg
sbb
fiadds
mov
cld
in
mov
push
mov
push
lcall
sbb
cmp
sbb
xchg
aas
mov
aam
add
leave
cmp
sbb
scas
cwtl
fsubrl
lock
push
pushf
test
mov
int
mov
mov
or
frstor
lea
out
add
icebp
call
push
fmuls
outsb
mov
add
sbb
mov
divl
daa
lds
fisubl
cmp
out
mov
int
jmp
sbb
fidivl
stos
fsubrl
pushf
pop
or
hlt
jmp
adc
enter
repz
in
xor
les
dec
dec
xchg
lret
ljmp
into
stos
outsb
mov
add
add
sti
scas
stos
repnz
cmp
adc
jg
call
out
js
sub
adc
call
pop
test
call
add
fmull
lods
lcall
sbb
or
xor
sar
sbb
divl
pop
push
test
js
add
les
pop
cmp
cmpsb
clc
filds
inc
xchg
dec
xchg
mov
and
dec
and
push
aaa
clc
fldt
data16
cmpsl
popa
sub
pop
insl
or
mov
data16
repnz
ljmp
xor
xchg
ficoml
inc
xlat
xchg
das
shrl
sysexit
js
mov
lcall
loopne
iret
js
aad
inc
out
add
mov
cld
adc
push
push
pop
mov
push
addr16
mov
inc
pop
xchg
sub
orl
daa
or
fcomps
jp
adc
dec
mov
lea
movlps
mov
cmp
shlb
mov
loop
js
insb
lahf
push
xlat
mov
lcall
jp
loop
ds
aaa
bound
shl
outsl
mov
imul
push
push
jp
dec
mov
jg
add
adc
fdivl
scas
pop
add
rcrb
mov
daa
mov
pushl
xchg
mov
cmpsw
dec
jmp
inc
mov
in
loopne
movsl
fdivrs
ret
inc
jmp
iret
incl
dec
cmp
ret
test
sub
lret
popf
ficompl
inc
or
lcall
or
shll
rolb
cmp
out
pop
xchg
cltd
lods
jge
rol
decl
lahf
out
mov
test
xchg
out
mov
or
xor
push
or
incl
lock
cmp
std
mov
incl
xchg
push
cmc
fs
ss
hlt
pop
or
cmp
sti
or
popa
dec
mov
xor
cmp
and
lods
lods
outsl
bound
ds
arpl
sub
inc
les
jmp
xor
rorb
xor
xor
mov
scas
mov
dec
imul
fs
fldcw
lret
xchg
push
cmp
lds
rep
pop
aam
imul
fcoml
std
lcall
lret
pop
ds
pop
sarl
xchg
stos
pop
mov
mov
mov
addl
loop
push
dec
out
jl
pop
bound
xchg
shl
dec
inc
mov
cmpb
inc
sbb
jmp
lahf
ja
add
cmp
jmp
aam
sub
push
dec
loopne
sbb
mov
fcmovbe
incl
xor
cmp
xchg
nop
mov
outsl
mov
lret
lcall
fbstp
std
idivl
or
pop
xor
xor
incb
or
mov
test
cli
push
push
subl
push
mov
pushl
xor
les
or
mov
rcll
pop
or
cmp
call
mov
lret
add
fdiv
mov
lods
frstor
xchg
cli
ljmp
inc
inc
out
scas
jno
adc
incl
jp
int
xchg
aas
and
rorl
inc
pop
out
rep
and
jmp
outsl
add
mov
scas
adc
dec
pop
cmp
xor
add
mov
xor
lock
outsl
jae
jp
jno
fst
xchg
scas
stc
imul
fstpt
cs
inc
cmp
dec
and
add
bnd
adc
xor
jo
mov
or
lahf
mov
mov
fcoms
mov
movsb
cmp
pushl
rorb
subl
dec
adc
dec
cmp
ret
fstpl
sbb
ljmp
dec
notl
hlt
mov
push
push
das
loopne
hlt
enter
push
adc
decl
adc
inc
movsb
sahf
lret
pop
into
fmull
mov
sub
in
xor
cmp
xor
mov
jno
sbb
addr16
test
push
clc
jne
inc
div
or
cld
mov
fstpl
jae
cs
lcall
add
fidivrs
sub
and
les
sub
mov
icebp
dec
outsl
popl
xor
int3
or
sahf
mov
xor
stos
mov
aas
jnp
lret
mov
inc
pusha
sub
xchg
jno
adc
popa
cmp
call
pop
jbe
pushf
cld
xchg
mov
fdivp
sub
add
dec
mov
loopne
push
jno
adc
imul
add
test
aad
call
inc
push
cmp
lods
cltd
push
je
jg
loop
mov
inc
xchg
mov
mov
cmp
pop
lock
xchg
test
daa
dec
cmp
stos
sub
shl
push
data16
lahf
push
mov
jmp
cmc
xchg
orb
sbb
ljmp
cmp
out
jb
mov
testb
out
leave
test
cli
fnstsw
outsl
pusha
push
push
pop
ljmp
loopne
jae
inc
jo
loope
sub
jl
int3
mov
xor
xor
sbb
pop
data16
mov
dec
fbld
das
les
push
hlt
push
push
inc
cwtl
fmuls
loop
nop
aaa
pmaxsw
outsb
rcr
xorb
lcall
iret
fcos
mov
mov
pop
xor
cmp
xor
mov
je
mov
mov
lcall
stc
in
jg
pop
inc
xor
mov
xchg
sub
xor
mov
into
out
xchg
inc
cmp
inc
inc
jno
cmp
jae
and
ljmp
clc
imull
fimull
repnz
jp
adc
lods
adc
mov
call
jle
lret
xchg
lock
inc
cltd
dec
iret
sbb
popa
pop
inc
cmp
rcl
loopne
sbb
jbe
inc
cld
jmp
iret
xlat
ficoml
pop
cli
fcompl
fnstenv
scas
push
cli
push
push
scas
push
adc
pop
in
mov
call
pop
mov
dec
sbb
cmpsb
ret
mov
pop
out
ss
stos
sbb
enter
jmp
mov
pop
call
mov
adc
dec
push
cwtl
xchg
cltd
pop
adc
cld
fs
loopne
hlt
sbb
hlt
pushl
xchg
movsb
in
xchg
nop
stc
jg
dec
imul
pop
xor
test
add
decl
push
push
scas
or
fisttps
ja
popf
sub
in
add
dec
out
xchg
std
decl
dec
pop
jmp
out
shll
mov
shrb
pop
inc
out
aas
inc
mov
mov
aaa
xchg
mov
cmpsl
mov
mov
mov
adc
decl
rclb
es
test
push
int
out
mov
jg
cmp
loop
or
sub
xor
mov
mov
in
or
dec
xchg
aam
mov
scas
lret
pop
das
jno
ljmp
sbbb
popa
icebp
adc
pop
inc
jnp
decl
movsb
jp
or
out
mov
pushf
push
mov
mov
adc
ljmp
call
imul
loop
lcall
dec
out
mov
arpl
mov
cmc
cmp
jmp
popa
dec
pop
lods
jecxz
enter
lods
xor
jns
mov
and
inc
adc
and
call
xor
adc
and
jecxz,pn
lahf
jns
cmp
pop
add
mov
jmp
adcb
shll
ss
cmp
pop
mov
loope
lret
ficomps
add
jae
jmp
adc
lea
sbb
ficompl
sbb
iret
cld
jg
mov
scas
faddl
mov
cs
cmc
jmp
and
and
cmp
fistpll
fbstp
inc
lahf
aas
scas
in
aaa
and
or
mov
cmp
div
mov
pushl
ficoms
in
jp
outsb
aad
sub
pushl
or
fadds
mov
jmp
mov
mov
inc
stos
mov
int
ret
pop
add
jge
scas
popa
add
lret
sbb
sbb
mov
adc
mov
jg
decl
pop
cmp
lds
pop
lods
fcompl
test
lock
aaa
lret
fldl
aad
inc
pusha
popa
dec
mov
push
cmc
inc
lods
mov
mov
jge
pop
push
xor
inc
cmp
sbb
mov
jp
lcall
jle
bound
lcall
inc
adc
and
mov
lcall
scas
or
insl
das
dec
and
bound
movsb
pop
xchg
lret
dec
ret
pop
add
cli
pushl
push
add
xchg
push
xlat
mov
push
add
jmp
add
ljmp
dec
pop
jl
jno
lods
lcall
divl
jg
sub
mov
outsb
mov
fistl
roll
jmp
iret
inc
mov
std
pop
jmp
movsl
dec
js
data16
cmp
rcrl
in
rep
dec
sti
pushl
scas
mov
add
xor
jo
cmp
insl
or
xchg
mov
jmp
sub
imul
xor
mov
scas
nop
test
push
ror
out
clc
fildl
and
mov
xchg
iret
dec
xchg
sub
mov
loop
jmp
pop
adc
pop
repz
rcrb
addr16
ja
iret
pop
loopne
ljmp
cmp
jl
or
lea
lcall
cs
dec
cmp
push
cmp
call
add
add
out
sti
dec
mov
pop
inc
push
or
inc
sahf
add
es
call
ljmp
push
lcall
mov
filds
andl
pop
stos
mov
test
sub
mov
decl
cli
js
jne
aaa
outsl
jae
stos
jmp
nop
mov
sbb
test
shll
int3
ljmp
dec
cmpl
xchg
cli
mov
sub
adc
mov
subl
dec
xor
imul
cmpb
and
adc
mov
nop
gs
mov
or
ffree
ds
mov
cli
lock
cld
dec
push
shrb
or
in
cmp
div
mov
cli
loopne
dec
sbb
jmp
jae
jle
mov
test
popf
jl
aad
inc
xchg
dec
scas
mov
jl
dec
push
adc
pop
shl
dec
outsb
fwait
mov
inc
enter
sbb
cmpl
sub
cwtl
and
mov
into
jne
adc
cs
pop
stc
jns
push
cli
call
jne
or
inc
jns
adc
call
inc
dec
outsb
jnp
inc
pop
sub
pop
push
lea
es
xchg
inc
incl
pushl
movsl
mov
push
xchg
imul
pop
sbb
mov
cmp
pop
out
push
lock
mov
test
test
cmp
cmc
jb
test
ljmp
xchg
popf
push
xor
lahf
lods
popf
xchg
out
loop
push
mov
xor
xchg
es
lret
loopne
loop
rcll
push
sbb
inc
dec
lds
jg
sti
add
xor
shll
push
xchg
into
fsubs
scas
mov
inc
lcall
int3
fs
ja
test
mov
jno
inc
scas
push
mov
inc
mov
inc
fdivs
push
aaa
hlt
sbb
into
rcr
fcompl
ficoms
shrw
mov
push
in
push
decl
repz
rcrl
icebp
mov
push
mov
lahf
and
mov
cmpb
pusha
add
sub
inc
stc
or
push
inc
ret
and
or
out
add
adc
scas
popf
mov
into
pop
mov
test
mov
lcall
test
cmp
sbb
mov
mov
dec
call
mov
jnp
push
inc
mov
pop
lcall
or
aas
pusha
outsb
dec
dec
push
shlb
ljmp
mov
cs
mov
jmp
daa
fcmovb
inc
add
pop
sti
push
ss
inc
xlat
push
pop
fsubs
mov
mov
aad
mov
sbb
sahf
lcall
xchg
ljmp
imul
pop
jne
cmp
push
rcrl
xchg
mov
rorl
mov
push
mov
mov
lret
mov
adc
aas
and
scas
cs
frstor
mov
enter
inc
imul
mov
sahf
mov
push
xor
lcall
ljmp
inc
les
lock
cmpsl
mov
hlt
or
cmp
cmc
add
outsb
shlb
xchg
pop
add
rorb
adc
sbb
ljmp
xchg
repnz
pop
add
mov
inc
cld
aad
mov
jmp
notb
xor
push
mov
scas
sub
sarb
pop
dec
es
sub
incl
cs
flds
mov
sbb
insl
or
popa
cmp
dec
and
test
lcall
call
ja
xor
stos
xchg
mov
das
xchg
mov
pop
pop
int
dec
xchg
mov
xchg
mov
stos
or
rcr
aaa
xchg
mov
std
lcall
mov
cld
mov
out
sbb
jg
cmpsl
inc
jnp,pn
andl
stc
cmpsb
mov
pop
leave
cmpsb
xchg
mov
icebp
dec
leave
add
jmp
mov
xchg
addb
and
stos
or
repz
and
aam
je
decl
fmuls
sbb
outsb
or
jnp
aam
jl
decl
pop
push
pusha
out
mov
mull
rcrl
sbb
cmp
ret
bound
cmp
inc
jg
incl
or
cmpsl
out
mov
addr16
push
sub
jecxz
lock
pop
gs
jmp
or
fisubrs
pusha
cwtl
mov
lods
ret
popf
insb
sbb
sbb
frstor
cltd
in
stos
push
mov
push
repnz
xchg
insb
test
decl
mov
jl
test
lcall
in
xlat
xchg
mov
adcb
sbb
gs
dec
push
mov
mov
dec
in
call
push
add
lret
nop
xchg
mov
xor
cltd
pop
stos
mov
push
stos
movsb
add
dec
std
push
outsb
jecxz
inc
ljmp
dec
adc
pop
sahf
cmpsl
push
mov
pop
mov
cmp
xor
jp
and
ror
orl
xor
fsubrs
enter
inc
jmp
pushl
mov
das
cmpsl
jmp
enter
nop
ja
sub
out
adc
fsts
incl
jp
lret
jo
xor
mov
inc
inc
ret
push
fimuls
mulb
pop
jl
sub
pushl
lahf
xchg
dec
inc
test
xor
movsb
xor
sub
adc
mov
incl
rcrb
push
dec
pop
shl
mov
ljmp
pop
imul
decl
adc
out
mov
dec
fadds
sbb
lret
sub
mov
mov
inc
mov
xchg
xchg
les
jmp
mov
or
call
jne
call
jle
imul
xor
pop
add
arpl
int3
xor
out
dec
mov
xor
loop
cltd
sub
mov
sti
dec
xchg
je
dec
pop
clc
stos
jns
leave
mov
jb
or
mov
js
xchg
subl
ja
mov
test
or
jae
incl
inc
dec
sbb
inc
cmp
xchg
or
cli
lcall
fdivs
insb
cmp
cmpsl
inc
xor
leave
popf
or
loope
push
bound
dec
pop
cwtl
sub
pushl
mov
jnp
sbb
xor
clc
and
ljmp
dec
dec
sub
cltd
xor
lcall
ja
and
jae
adc
ss
adc
jle
cmpsb
adc
xchg
pop
andb
push
xchg
shlb
dec
bound
mov
dec
mov
in
int3
loopne
fidivs
dec
fistpl
and
clc
and
pushl
std
mov
push
push
ret
inc
push
iret
cmp
into
bound
shl
push
incb
lcall
movsl
jno
push
loop
pop
xor
test
sub
and
or
push
ljmp
fidivl
adc
testl
add
nop
or
push
xchg
push
call
dec
les
inc
mov
mov
fstl
pop
testl
mov
mov
ja
lcall
aam
in
movsb
cwtl
cwtl
and
jne
mov
inc
andb
push
mov
dec
sbb
mov
loop
ss
repz
sub
jo
mov
sbb
loopne
cwtl
pop
sahf
mov
mov
push
sbb
aad
int
movsl
inc
clc
mov
rcrl
insl
inc
jns
sbb
jmp
xor
cmpsl
jl
or
cmp
dec
cmp
pusha
pushl
ret
hlt
sub
sub
dec
push
aad
lret
test
or
or
cmp
pushl
xor
jp
sbb
jae
fldcw
jo
dec
add
pusha
jo
pushl
sbb
out
lret
inc
jmp
pop
aam
insb
aam
dec
mov
js
imul
scas
cli
imul
pop
into
add
js
mov
jo
add
jg
fsubr
dec
pusha
adc
xchg
fiadds
mov
lods
out
idivb
aaa
adc
sahf
pushl
rorb
xor
xorl
fbstp
add
push
lahf
sbbb
adc
jg
mov
test
out
dec
jnp
push
pusha
notb
hlt
jns
mov
mov
out
pop
inc
call
decl
dec
xchg
inc
inc
shll
fs
mov
jne
cld
loop
jecxz
call
int
aas
mov
add
mov
jle
insb
repz
mov
jg
popa
cld
fcomps
les
shlb
int3
xor
outsl
cmp
test
cmc
jge
and
clc
cltd
cwtl
sub
call
inc
mov
pusha
fsubl
loope
pop
mov
mov
inc
lcall
bound
lea
jnp
dec
push
jne
jae
mov
xchg
pushf
adcb
jmp
ficomps
mov
and
dec
popf
out
loopne
mov
jo
test
clc
decl
dec
sbb
cmp
inc
jne
sub
xor
mov
inc
adc
fcmovne
pushf
mov
bound
fadds
ljmp
push
cmp
pushl
stc
dec
xchg
sub
xchg
xor
mov
cmp
and
sub
dec
adc
decl
sbb
mov
das
fistps
mov
sub
or
pop
cmp
add
frstor
nop
sub
decl
adc
repnz
clc
rorb
movl
pop
xor
pop
inc
pop
inc
xor
popf
ds
xchg
repnz
hlt
sbb
sbb
call
cmp
jecxz
push
call
mov
or
mov
add
cmp
mov
fsubl
jo
mov
inc
sub
inc
mov
cmp
or
movsl
rclb
dec
jo
mov
sub
jg
out
and
mul
jno
cmp
vmwrite
jnp
push
jmp
mov
pushl
fnstcw
loope
or
adc
xchg
and
decl
scas
push
lret
push
mov
mov
pop
lea
incl
stos
cmp
sbb
xor
int3
test
push
xor
test
adc
push
cmc
lods
mov
shl
pushl
mov
mov
pop
or
daa
pop
in
popf
popa
fimuls
leave
fcomip
or
cli
sub
jge
jb
jbe
in
ljmp
xchg
icebp
decl
out
call
sbb
decl
cmp
sahf
sti
sub
xchg
orb
repz
and
mov
mov
pop
sub
out
adc
test
xor
fidivrl
jl
cmp
jne
sarb
ret
jmp
sbb
mov
mov
cmp
mov
popf
sbb
adc
stos
movsb
xchg
jp
ret
movsb
lock
fwait
jecxz
aas
out
js
clc
or
jmp
xchg
mov
lahf
lret
mov
mov
pop
fsubrs
stc
jnp
outsl
je
dec
inc
fsub
fildll
jmp
aaa
add
mov
cwtl
mov
bound
cli
xor
or
aas
test
pop
scas
insb
xor
jb
push
adc
jae
inc
fiadds
aam
xchg
bound
jmp
pushl
sahf
sahf
or
inc
jbe
popa
test
mov
outsl
mov
mov
and
push
mov
pushf
jge
inc
inc
lcall
test
inc
repz
cmp
ljmp
pusha
inc
lock
push
cmp
incl
test
shll
inc
and
push
mov
jb
push
pop
xchg
and
jg
lock
xlat
mov
inc
pop
mov
mov
lods
ret
shlb
sub
call
ficoml
push
jbe
fisubrs
cmp
out
push
jb
pcmpgtb
addl
or
jo
loopne
adc
inc
jne
loop
pusha
mov
mov
push
aas
mov
jl
dec
cmp
imul
outsb
fldl
cli
call
cmp
ljmp
xchg
adc
lds
bound
inc
adc
pushl
outsl
xchg
push
rorb
fisubs
aaa
pop
mov
pop
jnp
inc
in
pop
xlat
ja
xor
cld
jmp
or
test
add
jecxz
bound
push
push
xchg
pop
adc
mov
inc
push
push
sbb
mov
push
gs
call
mov
pushf
test
loop
mov
adc
mov
xchg
psubsb
dec
lods
daa
mov
xor
sbb
cli
je
adc
inc
mov
clc
lock
mov
mov
add
inc
push
sub
ja
jnp
aas
adc
mov
push
xor
jg
sub
mov
insb
jmp
mov
xor
mov
imull
mulb
lcall
dec
cmp
in
loopne
push
sahf
in
lcall
xchg
rol
mov
mov
repz
mov
lret
out
cs
pop
pushf
jl
jecxz
or
call
jbe
mov
cs
ljmp
adc
stos
popf
hlt
stos
pop
das
int
lock
sti
adc
mov
or
rcrl
cmpsl
jne
mov
shlb
push
sbb
aam
stos
iret
xchg
jmp
hlt
insl
lret
push
adc
or
push
xlat
and
adc
push
jecxz
lcall
jecxz
call
ja
inc
xor
mov
sub
jmp
cmp
cld
call
loop
pop
fisubs
ficompl
jno
sbb
push
push
jmp
lea
mov
push
js
dec
push
fst
lds
shlb
pop
dec
xor
call
push
hlt
and
scas
push
shl
sbb
int3
out
shrl
aad
jbe
inc
sbb
jae
xor
and
jmp
rol
rcrl
js
push
sbb
repz
cli
push
jae,pt
xor
lcall
into
add
push
aam
loopne
sahf
repz
adcb
lret
fisubrl
adc
decl
sub
mov
push
std
mov
mov
aaa
outsl
ret
orl
dec
pushl
sub
pop
adc
mov
xchg
or
inc
ss
es
cmpsl
test
jl
call
test
mov
ficompl
scas
rorb
or
push
inc
daa
ficoms
mov
in
sbb
into
repnz
leave
cmc
movsl
aad
outsb
push
fdivrp
loopne
mov
mov
jg
add
fdivr
call
lcall
repnz
jne
imul
push
adc
pusha
movsl
ss
ljmp
mov
cmp
ljmp
pop
into
add
inc
stos
aas
cmp
incl
and
lea
dec
ja
xor
jno
cmp
mov
int3
aas
jmp
mov
inc
jg
pushl
loopne
add
nop
inc
jmp
xchg
cmp
jecxz
sar
push
decl
add
imul
xchg
mov
inc
testl
call
sbb
sbb
int3
bound
inc
sbb
jo
xor
pop
js
sbb
sti
scas
lret
adc
iret
negb
stos
movsb
cmc
jb
pop
fucomi
inc
gs
pop
sub
xchg
push
mov
jg
repnz
mov
cmc
into
or
rorb
stc
mov
in
into
mov
xchg
lcall
aad
push
data16
fcomps
lea
ds
dec
sub
dec
mov
loopne
and
shlb
ficomps
aam
lret
frndint
adc
in
stos
lahf
and
and
mov
jmp
cmpsb
inc
rcrl
xchg
adc
mov
int3
fsubrl
outsl
cmp
ljmp
out
dec
mov
mov
jo
jne
jl
cmpsl
ficompl
std
cmc
fisttpl
lcall
test
ljmp
test
cli
inc
xor
popf
out
lcall
dec
xchg
sbb
inc
cmp
dec
and
pop
aaa
imul
call
sub
fmul
inc
movsl
mov
out
ja
push
add
mov
xchg
sahf
cli
in
inc
xchg
fcomps
sub
cmc
add
xor
xchg
sti
jb
es
repnz
decl
or
incl
dec
mov
mov
or
call
fcmovbe
push
mov
rcr
jecxz
aam
cld
cmp
xorb
test
or
xchg
scas
fs
pop
fildll
add
dec
cmpsl
cwtl
mov
and
add
or
data16
pusha
lock
fs
loope
outsl
mov
mov
pushf
pop
cmp
pushl
cmp
clc
arpl
add
sti
loop
dec
xor
xchg
mov
daa
pop
inc
xchg
jge
mov
cli
outsb
sbb
sub
popf
dec
dec
cwtl
insl
cmp
cmp
xor
fwait
and
cmp
popa
rcrb
and
mov
or
ljmp
jle
xchg
adc
es
fdivl
mov
lahf
jle
mov
repz
imul
incl
cmp
adc
push
pop
xchg
push
ljmp
notb
cmp
adc
test
scas
cli
lcall
testb
in
repnz
cli
jecxz
int3
pop
xchg
bnd
jae
decl
arpl
sub
movsl
xlat
push
test
or
iret
mov
mov
pushl
inc
sbb
or
pop
shrl
mov
xchg
xor
inc
pop
lods
push
xorb
std
jmp
stos
cmp
je
and
push
xchg
movsl
outsb
mov
add
xchg
xchg
jnp
lds
incl
xchg
or
das
dec
dec
aas
pop
js
push
rclb
imul
sti
sbb
fs
pop
mov
mov
ret
ds
lock
shlb
jbe
call
sbb
xchg
xchg
or
or
pop
xchg
stos
dec
or
pusha
cmp
mov
xchg
fcompl
movsb
addr16
add
int3
repnz
jmp
push
addb
mov
int
lea
fstpt
test
pushl
ljmp
sub
mov
scas
stos
daa
fdivrs
cwtd
mov
fidivl
sbb
call
lret
adc
push
shll
inc
test
jmp
outsb
cli
or
js
sub
incl
sbb
pop
ss
fstpt
sub
pushf
jbe
hlt
mov
sub
jle
xchg
pushl
sbb
jmp
jl
fcompl
divb
inc
orps
jbe
fwait
push
icebp
jmp
enter
loope
mov
lea
sti
push
fldcw
add
repnz
dec
lcall
data16
jno
xchg
pop
loopne
and
mov
add
ljmp
cmp
jmp
sbb
cmp
or
pop
lcall
mov
decl
jno
lea
mov
dec
pop
std
add
mov
dec
jg
iret
lcall
jbe
mov
fcompl
sahf
pop
adc
je
stos
cld
outsb
push
jmp
xor
pop
or
sbb
adc
sub
inc
mov
decl
ret
ds
jecxz
mov
repnz
adc
push
cmp
out
mov
dec
mov
ljmp
addr16
mov
repnz
pop
je
imul
clc
ljmp
lods
dec
loopne
mov
inc
pop
pop
aas
mov
add
ss
in
xor
movsb
mov
inc
xor
xchg
xor
mov
insb
outsb
jae
adc
cmp
addr16
mov
dec
and
xor
dec
mov
imul
aaa
push
inc
mov
jl
mov
lcall
data16
bound
scas
mov
mov
inc
leave
shll
jle
ja
lret
push
out
es
test
adc
dec
popf
rorl
xchg
inc
jecxz
std
addb
insl
and
and
cvtps2pd
add
int
cmp
ss
outsb
sar
decl
aas
addr16
push
push
nop
incb
stos
push
testb
decl
and
leave
push
fnstenv
aad
mov
pop
push
inc
inc
lea
mov
lcall
inc
mov
cmp
jge
push
add
loope
incl
shr
sbb
lcall
sbb
ss
pop
hlt
fisttpll
pushf
pushl
in
in
cmp
mov
lret
ficompl
fcomps
xor
aas
mov
push
cmp
sbb
jbe
xchg
push
or
pop
push
loopne
jg
sub
sahf
pop
sub
pushl
jmp
sub
js
sub
xorb
mov
loopne
mov
cmpsl
jbe
cmp
xchg
cmp
jp
divl
pop
lods
stc
jo
nop
inc
ljmp
sar
fcomip
pushl
das
xor
out
cld
cmpsl
mov
mov
decl
pop
and
jmp
mov
cmpsb
fnstenv
push
mov
cmp
nop
sub
mov
mov
mov
aas
add
ljmp
mov
movsl
pusha
out
xchg
dec
sub
notb
xchg
jne
testl
xor
sbb
cmp
jmp
pop
rclb
mov
dec
cmp
mov
mov
call
fimull
xchg
addb
adc
stos
xchg
out
or
in
call
mov
mov
push
dec
and
into
push
rol
xchg
lock
fmul
add
test
lcall
jmp
push
aas
and
sub
hlt
sub
push
sub
or
or
cli
xor
cli
sbb
and
mov
mov
dec
loope
sahf
cmp
orw
cmp
pushl
sub
inc
dec
mov
jmp
add
jl
push
push
pop
incl
inc
scas
lcall
arpl
jmp
jecxz
pop
xchg
aad
incl
and
inc
sti
fsubs
cmp
jnp
daa
fldenv
decl
dec
out
sahf
scas
cmpsb
filds
jns
mov
inc
ret
cmpsl
in
cmpsb
hlt
popf
jp
ret
ljmp
stos
in
mov
mov
out
in
xor
les
cmp
inc
repnz
ljmp
dec
gs
dec
sbb
outsl
ds
scas
or
imull
or
lcall
jl
lahf
jbe
call
decl
cmp
pop
xor
mov
arpl
lods
jp
dec
jo
mov
decl
lea
in
ficompl
inc
fdiv
jne
bound
aaa
and
cwtl
fstp
icebp
jmp
inc
test
xchg
int
and
inc
and
fwait
and
mov
in
sub
mov
xchg
mov
or
roll
mov
in
std
mov
popf
jns
jns
inc
call
aaa
xor
cmp
jmp
pop
inc
inc
pop
int3
push
xlat
loopne
xlat
pop
xor
or
movsb
dec
cmp
push
fprem
decl
rclb
ss
pop
mov
fdivrp
lcall
dec
cmpsl
sbb
enter
xor
sub
mov
jle
ljmp
fiadds
stos
lock
imul
rorb
lods
dec
test
pop
pushf
xchg
jge
add
mov
mov
xchg
mov
mov
lcall
imul
movsb
inc
fadds
or
leave
mov
mov
mov
popf
mov
fadd
pop
jbe
lret
mov
lods
pop
xorb
sub
xor
mov
cmpsb
mov
icebp
jg
decl
cmp
rcl
mov
jb
repnz
sbb
lcall
sti
es
pop
cmp
xor
scas
lret
scas
xor
jns
movsl
scas
jecxz
mov
jmp
add
into
ss
xor
mov
arpl
ljmp
jnp
in
push
push
ss
or
push
cld
cmc
pop
xor
mov
jecxz
incl
dec
cmpsl
icebp
lods
mov
insb
nop
loopne
je
js
repz
mov
fdivr
outsl
cli
dec
xchg
fisttpll
imul
and
xor
jmp
xor
mov
les
shlb
and
push
pushf
lea
sbb
insb
xchg
test
test
dec
jae
pop
inc
repz
jne
stc
mul
pop
cmpsb
fidivs
aaa
adc
mov
js
adc
sarl
push
mov
jnp
ljmp
mov
pop
mov
xorb
push
loopne
push
adc
mov
adc
repz
mov
cmp
xlat
jnp
push
fwait
mov
addr16
ljmp
pop
pop
in
xor
cvttps2pi
inc
cmp
mov
pop
cmp
dec
int3
jae
xchg
sahf
pop
ja
pushl
mov
insb
movsb
ffreep
bound
fadd
jnp
mov
mov
xor
in
lret
ljmp
mov
jg
out
jmp
loopne
cmpsl
test
pop
ret
mov
icebp
mov
cld
pop
mov
mov
incl
sahf
jns
jo
xor
jbe
aaa
int3
add
repz
cmp
inc
ja
fcomip
dec
push
mov
lods
push
test
mov
idivb
fcmovnbe
nop
std
push
sub
add
insl
add
jecxz
jne
and
jns
inc
aas
repnz
push
aam
push
mov
dec
add
test
pushl
repnz
and
pop
ret
stos
fiaddl
sbb
dec
int
push
pushl
push
jecxz
mov
xchg
mov
add
lahf
dec
dec
mov
xchg
adc
cmpsl
lcall
gs
call
popa
jp
ds
dec
lret
sbb
add
pop
stc
mov
cmp
incl
add
je
sub
cli
stos
xor
sahf
dec
jle
pop
push
pusha
shll
pushl
std
ja
pusha
mov
pop
mov
rcrb
test
std
xchg
mov
aad
call
loopne
dec
inc
jns
movsb
xchg
out
test
leave
jb
and
ds
sub
je
es
jo
jmp
mov
push
sti
cmp
adc
push
cmp
lcall
pop
out
scas
cmp
or
jb
and
aam
push
stos
js
mov
sti
addl
pushl
xchg
inc
jns
lsl
sub
sub
scas
ror
stos
mov
mov
stos
loop
idiv
mov
mov
ljmp
mov
addl
and
popl
test
lods
mov
and
lcall
ja
lret
inc
jbe
loope
adc
movsb
jbe
push
mov
fdivs
ljmp
fsubs
mov
das
sub
jae
call
dec
cli
rcl
nop
xchg
jns
mov
ficoms
xchg
dec
jne
jecxz
incl
jmp
sub
inc
pop
pop
loopne
subl
out
dec
xor
ljmp
jne
int3
lcall
in
enter
aam
pop
das
mov
sbb
or
mov
decl
mov
loopne
aam
xlat
lds
pop
fbld
lods
int
call
call
dec
jbe
jle
cli
lahf
test
push
push
or
std
enter
shrl
and
insb
int3
jle
sarl
and
out
dec
int3
outsl
sub
ja
cmpsl
mov
cli
inc
xchg
mov
inc
jge
std
jmp
stos
lds
add
mov
xchg
xchg
scas
out
int
push
iret
cli
es
fucomi
scas
cmc
jns
nop
scas
xchg
std
and
or
xchg
cmpsb
dec
cmp
dec
movsb
loope
mov
fcoms
mov
xor
les
push
sahf
rorb
pop
imul
sub
decl
loop
dec
in
cmpsl
in
mov
pop
xchg
adc
push
sarb
sbb
std
jp
popf
mov
inc
jne
arpl
jmp
cmp
lea
mov
fildll
mov
xlat
decl
or
pop
sbb
add
notb
push
and
mov
imul
popf
pop
decl
sbb
adc
sahf
dec
xchg
data16
mov
lret
test
add
imul
lds
int
or
in
jl
and
sbb
js
out
push
das
add
push
stos
dec
mov
fdivr
pop
mov
in
outsb
or
bound
push
aaa
mov
ljmp
dec
adc
inc
lods
sbb
mov
repnz
adc
pop
rorb
testb
cld
ljmp
dec
cmp
filds
sub
mov
sub
sar
incl
repnz
mov
pop
in
xchg
jmp
ja
adc
test
xchg
cmp
pop
sbb
gs
in
out
mov
cmp
mov
push
mov
lcall
ljmp
loop
pop
mov
test
test
cmp
dec
jne
pop
jns
lcall
add
jle
shr
cmp
inc
fstl
push
jnp
push
gs
mov
sti
ljmp
lea
sti
pop
pop
bound
mov
aam
push
and
pop
cld
int3
shrb
xor
xor
cmp
pop
leave
pop
jnp
jbe
mov
addr16
clc
in
mov
frstor
test
sbb
jmp
sub
cwtl
sub
jae
incl
andl
cmp
mov
sbb
inc
pop
hlt
mov
scas
sti
lds
xchg
ljmp
adc
mov
js
cmc
cmp
in
dec
loopne
aam
out
xchg
movsl
push
ss
cmp
ds
lcall
jle
pop
loope
sub
sub
xchg
in
aam
ljmp
movsl
jo
sahf
ljmp
dec
push
add
xchg
mov
out
mov
jmp
call
xlat
in
jne
loope
pusha
das
adc
and
sti
fmull
imul
call
fiaddl
out
push
int3
aam
leave
mov
adc
inc
cmp
lcall
adc
dec
push
adcb
push
gs
or
jl
push
cli
ljmp
push
cmp
jbe
in
test
test
sbb
incl
cld
lret
jb
lret
das
aas
movsb
xor
sub
icebp
gs
cli
incl
sbb
pop
xor
mov
push
add
testl
in
call
cmp
fisubs
inc
in
and
aam
xor
cmp
jmp
pop
sub
fmuls
rcrl
movsb
popf
stos
sahf
aaa
cmpsl
jno
fldl
xchg
sar
outsl
cld
iret
push
jbe
mov
sbbl
pop
rclb
out
xchg
in
dec
jb
inc
out
shlb
xchg
pop
or
js
shll
stc
push
or
dec
xchg
adc
dec
negl
mov
inc
and
sarb
jl
xchg
mov
cs
fildll
mov
xchg
ja
insl
nop
jmp
loope
shr
pusha
mov
mov
aas
insb
add
xor
scas
daa
clc
popa
dec
incl
lea
push
loopne
and
jns
xor
ljmp
sbb
decl
repnz
lods
mov
test
es
mov
add
lahf
pushl
icebp
fsts
cmp
out
push
insb
int
es
daa
fistl
ljmp
out
idiv
jg
mov
shrl
imul
inc
jg
bound
inc
push
pop
pop
add
lcall
fdivr
in
test
lret
in
xchg
mov
push
inc
adc
pop
dec
shrl
pop
xor
incl
xchg
stos
sbb
sub
add
jl
loopne
pop
lcall
inc
xor
out
pop
xor
xchg
adc
push
mov
fst
mov
shlb
jmp
mov
rcll
jbe
into
inc
setl
jo
mov
rolb
scas
lock
popa
or
fldenv
call
repnz
sub
pop
cwtl
int3
data16
fisubrs
cmc
ljmp
jno
stos
mov
mov
mov
js
inc
cltd
pop
and
decl
lock
cmp
sbb
icebp
fsubs
std
mov
or
lret
mov
lcall
dec
xlat
ds
out
gs
cmp
xchg
adc
jno
pusha
std
call
jmp
sub
es
nop
cmpb
dec
sbb
incl
mov
push
popf
mov
and
push
hlt
dec
leave
iret
out
les
decl
divb
and
ja
cmc
or
push
mov
mov
cwtl
xor
jns,pn
dec
ret
adc
call
mov
leave
ljmp
in
jl
lock
ja
or
incl
jno
and
mov
or
add
xchg
add
add
push
mov
fidivl
xor
push
mov
sbb
ja
movsb
dec
jae
cltd
jmp
stos
into
sbb
adc
mov
mov
loopne
fistpl
mulb
int3
push
inc
jnp
or
mov
cmp
mov
nop
jbe
pop
cmp
cmp
pop
push
decl
push
pop
sbb
icebp
jg
loop
in
mov
movsl
xor
mov
push
pop
aad
out
jmp
cmpsl
adc
nop
clc
icebp
push
jne
test
jmp
jg
dec
jecxz
adc
push
sub
inc
or
fwait
in
dec
scas
mov
mov
in
imul
dec
es
mov
mov
in
out
leave
std
jno
cmpsb
mov
je
cmpsl
outsl
addr16
cmp
pop
mov
incl
cwtl
insl
mov
push
fwait
cmc
shld
mov
outsl
adc
cmpb
and
decl
jg
fld
xor
cmc
int3
scas
adc
adc
mov
lahf
ja
push
jmp
sub
es
and
in
cmc
jp
ljmp
rorb
xor
pushf
lret
xor
mov
lcall
js
mov
ret
or
pop
test
sbb
inc
mov
fmuls
or
in
rcrb
aaa
outsb
repz
jns
xchg
pop
add
movsl
cmp
push
mov
push
hlt
jbe
or
pusha
divb
scas
dec
fimuls
stos
push
xchg
pop
iret
ljmp
in
cmp
mov
xor
es
out
fildll
mov
jmp
pop
mov
pop
pusha
pop
push
or
jns
xchg
sbb
adc
add
mov
pop
decb
fdivp
inc
push
cmp
ds
sbb
ds
test
xor
cmp
movsb
out
icebp
lret
dec
sub
mov
cmp
call
lock
xor
mov
mov
mov
lock
stos
mov
mov
mov
leave
sub
ljmp
xor
xchg
pop
sbb
mov
call
fcomps
or
dec
int3
and
out
incl
mov
push
rcll
push
jae
cld
inc
packssdw
call
ljmp
push
andb
xchg
and
fisttpl
push
xlat
dec
test
in
xchg
rorl
lods
pop
cmp
cmpsl
xchg
call
mov
lock
imul
sbb
mov
int
push
sbb
jbe
dec
addr16
repnz
mov
mov
cmp
decb
out
fiaddl
jmp
idiv
je
jae
cli
rolb
add
scas
in
ret
cli
decl
outsl
sub
ljmp
push
pop
sub
and
movsl
xor
js
ljmp
mov
pop
daa
movhps
into
xchg
lock
incl
cld
dec
out
and
adc
inc
sub
inc
aaa
mov
sbb
and
fdivs
popa
test
mov
mov
rcrl
push
push
pushf
sbb
int
xor
xor
shl
inc
adc
jns
lock
rorl
or
mov
push
idivb
push
push
xchg
lcall
adc
lcall
andb
out
xor
cmp
in
cmp
jg
dec
mov
fidivl
push
dec
pop
insl
fwait
push
xchg
in
out
cmp
sbb
decl
je
adc
dec
rolb
dec
dec
repz
and
inc
dec
incl
ret
fcoml
addl
sbb
ja
mov
cs
and
mov
adc
dec
outsb
or
insl
aas
inc
inc
sbb
xchg
and
lods
dec
lret
mov
mov
cmp
dec
sub
inc
push
fidivrl
pop
ror
mov
sub
xor
cld
push
in
dec
sbb
lods
xor
clc
cmp
int3
inc
decl
sub
cmp
push
xchg
js
xlat
push
sbb
mov
pop
repnz
fisubrs
fdivr
fsubl
inc
inc
insl
push
insl
repz
lods
fwait
and
repz
pop
das
pop
decb
push
xor
push
ficoml
shlb
pop
push
add
ret
sar
jg
lods
int3
dec
mov
incb
sub
add
dec
mov
jmp
jecxz
xor
decl
pop
les
sub
in
or
movsb
sub
mov
cmp
ud0
pop
inc
pop
jno
decl
dec
pop
ret
cli
or
loopne
dec
test
cmp
ret
cltd
mov
jecxz
call
mov
xchg
loope
bound
xchg
inc
fwait
mov
xchg
sub
into
aam
mov
sbbb
lock
sti
decl
and
repnz
cltd
jl
cmp
mov
je
jmp
out
popf
mov
jle
ss
call
dec
inc
insl
cmp
imul
lcall
add
inc
mov
mov
push
or
push
out
es
test
add
jbe
cmp
jle
arpl
in
xor
daa
jnp
enter
idivl
shlb
xor
lcall
fildll
adc
lds
lea
jnp
inc
decl
ljmp
sub
mov
mov
pop
sbb
jmp
testb
into
in
mov
xchg
aam
xchg
out
clc
fdivrl
fprem1
mov
jge
mov
jmp
fstpl
mov
leave
add
xrelease
xchg
in
mov
mov
and
fsub
and
fcos
incl
shl
sbb
push
jne
cmc
pop
std
xchg
sbb
mov
or
addl
mov
jmp
mov
or
cwtl
xor
xchg
pop
insl
xor
push
mov
xchg
incl
push
mov
cmpsb
and
mov
sti
push
fmuls
cmp
fs
std
pusha
sti
or
lcall
xchg
adc
sub
lock
outsl
pusha
ror
mov
sti
xor
mov
cmp
repz
incl
push
push
add
bound
out
mov
cmp
jb
lods
mov
mov
and
fcoms
idiv
sbb
jmp
orl
push
rolb
nop
dec
and
ds
std
inc
aas
pop
shll
mov
push
inc
fidivrl
or
xchg
fnstenv
popf
icebp
adc
rol
mov
call
push
outsl
pop
inc
jns
mov
and
stos
xchg
xor
lcall
cwtl
aam
fisttps
imul
in
mov
movsb
push
xchg
outsl
sbb
lcall
push
dec
push
insb
out
push
cwtl
inc
xor
fistps
adc
dec
dec
rolb
jmp
nop
sbb
test
cmp
lods
push
lret
les
andb
das
pushf
mov
sub
pusha
xlat
shlb
ja
or
imul
sbb
jp
sahf
lcall
inc
jno
test
sub
int
adc
je
cmp
pushf
cmp
incl
clc
mov
es
fwait
dec
sahf
add
lahf
push
jg
mov
fldenv
sbb
pop
pop
mov
dec
and
call
mov
jno
fnsave
sub
mov
pop
popa
dec
mov
push
decl
and
iret
shlb
inc
mov
pop
repz
loop
pushl
dec
outsl
mov
pop
mov
or
mov
hlt
inc
jle
cmp
jmp
push
loope
int
test
jge
mov
aam
sub
or
inc
push
cmpsb
and
call
mov
xchg
and
insb
cmpsb
mov
mov
add
incl
xor
sub
jno
movsb
and
dec
add
imul
hlt
test
fwait
xchg
dec
xor
mov
inc
push
inc
inc
andl
lods
adc
out
jp
pop
inc
inc
les
push
test
jo
xchg
push
loop
icebp
jl
mov
and
mov
das
outsb
sub
mov
decl
push
cwtl
clc
mov
lcall
call
daa
push
testl
aas
es
jecxz
es
out
add
jle
rorb
sysret
cmp
stos
dec
add
inc
adc
std
fwait
ljmp
ljmp
pop
pop
fcoms
lock
mov
add
js
dec
cli
fwait
mov
js
adcl
arpl
jno
xchg
xchg
popa
int
pusha
sahf
mov
movb
push
outsl
dec
filds
int3
jmp
cli
into
mov
popf
lret
mov
jae
mov
inc
lret
xchg
sbb
stos
lods
arpl
ret
mull
and
insl
outsl
jo
sub
mov
mov
jb
movsb
dec
jne
enter
xlat
cmpsb
and
adc
iret
dec
cmp
push
or
jns
jle
pushl
inc
adc
jno
push
or
fbld
sbb
push
inc
inc
sbb
sub
incb
ret
push
js
mov
mov
adcl
into
jnp
lods
jno
cmp
adc
out
fsubrp
or
hlt
jo
add
or
test
xor
lcall
jmp
cwtl
add
sub
scas
add
push
cmp
mov
mov
aaa
push
jne
negl
xor
lods
mov
xor
int3
sbb
jmp
mov
call
out
call
xor
and
iret
out
add
js
int
jne
es
sub
flds
call
xchg
jbe
dec
std
add
imul
mov
lock
incl
adc
imull
pop
mov
jecxz
or
cmc
or
cwtl
fsubrs
test
stos
and
pop
push
cltd
add
repnz
xchg
rcr
push
sbb
xchg
xlat
push
imul
cmp
shrl
pop
cwtl
cmp
xor
dec
sbb
mov
into
pop
sbb
das
pusha
dec
pop
lock
pop
das
jecxz
mov
js
sar
push
mov
aaa
mov
es
jmp
add
mov
xchg
pop
or
pop
and
rcl
cli
stc
lea
ljmp
pop
outsb
adcl
dec
sbb
xchg
add
lea
cmpsl
or
dec
push
mov
ljmp
adc
xor
popf
cmp
xor
push
jnp
lcall
pop
mov
cmp
add
adc
in
cmp
stos
xor
out
or
bound
cmpsl
pop
cld
xor
imul
incl
je
xchg
sbb
fdivp
loop
add
shl
jae
and
mov
sti
ds
out
cli
push
add
popf
mov
sbb
add
jns
xchg
mov
fistpll
jmp
push
mov
jmp
lret
fstpl
jecxz
inc
lods
shlb
mov
repnz
adc
incl
sbb
notb
shrl
xor
xchg
mov
dec
or
push
and
dec
ret
pop
jo
orb
test
loop
or
xchg
inc
xlat
decl
sub
ret
enter
jo
jecxz
inc
stos
dec
and
xlat
arpl
push
jmp
and
aam
jge
rorl
das
sbb
popa
test
adc
mov
push
xor
cmp
in
enter
dec
in
loope
fnstcw
mov
xor
mov
mov
test
ret
or
leave
ja
jb
xchg
aam
jmp
push
inc
arpl
inc
cmpsb
pop
loop
fldl
pop
or
out
xchg
mov
and
hlt
pop
pop
mov
push
jmp
fwait
jne
testl
inc
sbb
in
sub
sbb
les
push
mov
das
sar
dec
iret
das
push
jns
mov
loopne
pop
dec
and
and
in
ja
mov
sbb
sbb
adc
fisubs
out
jge
int3
sub
push
xor
inc
mov
cmp
sub
mov
bound
fwait
mov
push
ljmp
addr16
and
xchg
cwtl
rcrl
mov
dec
sbb
or
xorl
repnz
jno
imul
fisttps
mov
inc
cmp
arpl
inc
sbb
inc
es
cmpsl
shl
dec
int
enter
mov
or
sub
int
das
inc
test
hlt
aam
pop
std
outsl
add
orb
xchg
xor
scas
daa
mov
in
mov
sub
push
out
push
mov
dec
mov
xchg
mov
scas
sahf
or
clc
pushl
nop
bound
mov
ljmp
test
jmp
cmp
dec
popf
dec
pop
sub
roll
loop
sbb
xor
jmp
cmp
mov
insl
rorl
xchg
in
testb
fwait
xorb
decl
and
jns
outsl
xchg
jmp
fwait
aad
cmpsb
dec
shrl
fdivr
ljmp
out
xchg
jmp
xchg
cmp
iret
insl
add
sahf
push
pop
cmp
or
or
dec
mov
and
leave
sahf
sub
mov
in
xchg
call
adc
xlat
ljmp
xchg
aad
repz
into
xlat
sbb
cmp
in
or
out
xor
mov
pushl
adc
adc
add
push
test
jmp
jl
enter
jns
sbb
jg
gs
and
jno
repz
divb
pushl
add
mov
into
push
xchg
loopne
push
inc
cmpsb
pushf
jmp
push
push
dec
adc
push
add
sbbl
adc
jo
pushl
std
call
xor
jecxz
scas
xor
pushf
loope
mov
std
mov
aad
pushl
fidivs
mov
inc
push
xchg
jecxz
mov
add
pusha
jg
popa
in
testl
data16
sbb
xchg
gs
inc
lods
out
pop
in
test
pop
clc
call
dec
enter
and
push
inc
sarl
aad
daa
mov
es
icebp
or
out
in
xor
rep
push
lods
negb
lock
xor
xchg
or
dec
mov
inc
and
add
adc
aad
decl
data16
test
adc
xchg
sub
xor
call
das
and
jb
addl
fwait
sti
test
lock
jmp
mov
mov
lds
push
and
lcall
mov
dec
mov
js
sahf
stos
test
push
stos
stos
xchg
push
dec
pop
mov
test
inc
cmp
in
aas
mov
imul
jg
cmp
stos
cs
cmp
out
aad
fcoml
mov
cli
adc
test
lods
fwait
jl
int3
loope
mov
leave
lret
pop
xchg
mov
mov
inc
mov
adc
and
dec
daa
subb
lcall
jl
and
iret
cltd
lcall
imull
xchg
inc
std
mov
pushl
cli
iret
pop
xchg
les
imul
lahf
bound
mulb
je
jo
fisubrl
cmp
out
inc
into
data16
cmp
push
cli
mov
je
mov
cld
mov
sub
shlb
sbb
push
xchg
inc
push
call
or
test
ret
cld
and
jno
dec
les
and
cmp
call
out
negb
inc
clc
mov
jns
test
lock
leave
pop
add
pop
mov
pusha
fisttps
mov
jo
adc
sub
push
fisubrs
pop
push
cld
jmp
push
cmc
fs
xchg
xlat
out
movb
addr16
les
pop
sti
lcall
push
pop
and
outsl
xlat
es
pop
mov
pop
cmpsb
jge
push
mov
ja
out
out
mov
xor
adc
jl
aam
pop
decl
je
and
aas
mov
pop
pop
xchg
pop
add
shrl
clc
pushl
ljmp
aad
dec
or
fsub
lret
jns
xchg
pop
scas
pushf
incl
add
daa
cmc
jnp
std
movsl
fcmovbe
xor
out
jg
imul
mov
jno
popa
std
mov
js
lret
fisttps
pop
jp
mov
mov
mov
arpl
mov
ficomps
lcall
push
xor
call
add
xchg
cwtl
add
inc
pop
or
call
adc
xchg
mov
add
push
pop
nop
push
sub
jae
in
test
stc
stos
inc
push
nop
jl
pop
int
aam
ror
cmp
and
fbstp
mov
in
cmp
incl
bound
pop
pop
adc
fiaddl
jne
pop
xchg
mov
out
gs
idiv
jg
sahf
lds
jb
cltd
dec
mov
adc
loop
xorb
xor
mov
fadd
in
push
sub
lock
in
xchg
jne
fimuls
es
mov
inc
mov
cld
nop
xor
add
pop
decb
lea
mov
imulb
jbe
ljmp
scas
lods
adc
mov
in
mov
incl
mov
push
shrl
push
call
in
push
ret
jae
movsl
insl
xchg
jae
jae
scas
xor
cmp
clc
add
dec
out
pop
pop
pop
sbb
rcr
jno
scas
sarl
movsl
adc
mov
sub
std
push
cmc
jmp
cmp
imul
dec
and
rolb
pop
sar
jmp
mov
mov
mov
jmp
xchg
inc
psrlw
out
push
insb
popf
mov
stc
loope
cmp
in
jmp
dec
in
dec
mov
fs
call
cmpsl
imul
ja
outsb
lods
or
xor
push
shlb
add
ljmp
movsb
pop
fistl
cmpsb
pop
mov
add
dec
mov
cld
xchg
scas
cmp
loope
xchg
mov
jnp
sub
lcall
mov
xor
jne
stos
pop
jns
adc
mov
cmc
pop
jmp
mov
push
lcallw
scas
and
fwait
adc
addr16
fmulp
insl
cmpsl
lods
lods
fdivs
cld
outsb
cmp
hlt
dec
dec
dec
push
and
ds
pusha
ljmp
mov
xor
fs
mov
aas
pushl
fcmovnb
test
pop
mov
aam
lods
push
mov
cmp
pop
mov
aam
or
mov
xchg
lods
pop
or
dec
test
and
xchg
int
aad
mov
scas
test
lcall
out
and
mov
roll
decl
lods
sbb
lock
loope
push
jecxz
dec
mov
ja
push
jge
push
sahf
movsb
pop
insl
cwtl
out
cmp
or
and
mov
cmp
adc
ljmp
sub
loopne
xchg
or
push
in
and
jg
jg
xchg
and
mov
mov
lret
cmp
fcom
add
xor
mov
add
cmp
mov
rsqrtps
pop
push
aam
lds
orb
jbe
outsl
fisttpll
inc
or
add
mov
cmp
decl
lds
loopne
sahf
and
cld
add
into
loope
lods
ljmp
movsb
incl
pop
jmp
push
or
push
cmp
inc
mov
jl
loopne
cld
push
and
pop
loopne
clc
add
and
xor
test
lea
stos
xchg
xchg
lea
xchg
es
scas
incl
add
out
push
fsubrs
pushl
cmp
mov
shlb
dec
jmp
bsf
clc
repnz
mov
ljmp
popa
adc
fmulp
test
orb
xor
sub
add
xchg
or
lds
push
test
add
xchg
movsb
addr16
sbb
push
mov
push
imul
inc
shlb
fdivr
loopne
adc
dec
adc
xchg
or
pusha
inc
push
and
add
fisttpl
mov
add
or
pop
push
or
fcomi
decl
or
or
or
or
adc
adc
push
adc
mov
xor
pop
sbb
adc
adc
adc
fnsave
jbe
or
pop
cld
push
inc
add
or
xchg
add
add
adc
add
les
add
or
or
inc
mov
jb
jg
shrb
add
add
push
adc
lods
jmp
incl
and
xor
inc
mov
adc
xor
cmpb
or
xchg
or
pop
dec
sub
add
aas
adc
dec
push
scas
mov
mov
flds
loope
lret
test
mov
pop
inc
mov
xchg
xchg
mov
add
add
inc
sub
pop
adc
incl
inc
adc
push
adc
pop
popa
jno
and
or
or
mov
or
xor
adc
shrl
icebp
mov
add
mov
push
xor
or
push
mov
or
dec
std
cld
pop
adc
or
add
lds
cld
cli
and
mov
pushl
ret
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
lods
inc
nop
movsl
jecxz
cli
pop
mov
stc
decl
mov
xchg
jg
or
insb
sub
addr16
out
or
push
push
xchg
add
cmpsb
mov
repnz
inc
lock
scas
jle
hlt
clc
cmp
fisubrl
lcall
mov
orb
int3
lcall
mov
push
pop
mov
pop
pushl
inc
pop
movb
xchg
sbb
scas
adc
mov
xor
ljmp
lods
scas
xchg
test
aam
and
sbb
sarl
and
mov
movsb
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
jg
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
hlt
ljmp
sahf
loope
rorl
mov
int
arpl
push
out
or
add
push
sahf
pop
clc
sti
jg
pushl
mov
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
jmp
or
cltd
inc
sbb
add
decl
mov
mov
sub
pop
mov
jl
push
jo
lock
adc
stos
div
mov
hlt
push
add
stc
loope
mov
sar
andl
aas
icebp
testb
inc
push
in
sbb
scas
fadds
in
sub
jbe
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
jmp
outsl
sbb
jb
adc
push
lock
lods
jp
testb
sbb
idiv
inc
into
fcomps
sbb
sbbl
into
andl
sti
idiv
test
cli
adc
aaa
xchg
in
add
inc
adc
out
dec
jbe
dec
fisttpll
out
aas
std
cli
push
push
pushl
inc
cmp
sub
inc
scas
inc
mov
jg
je,pn
decl
pop
imul
mov
mov
inc
es
gs
jns
enter
or
push
pusha
lcall
jae
inc
cmp
sti
punpckhbw
cmpsb
orb
mov
mov
js,pn
jmp
xor
pop
clc
pop
hlt
lret
movsb
add
mov
pop
jg
gs
std
xorb
jg
aad
inc
loope
outsl
adc
ret
das
pop
pop
pop
rorb
incl
out
sarb
sbbl
jno
or
sarb
std
pop
call
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
leave
incl
scas
loop
jge
push
shrl
mov
push
mov
adc
and
sbb
xchg
ljmp
arpl
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
std
aad
fcmovnu
rorl
insb
stos
arpl
add
cld
call
js
cmp
ljmp
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
ret
fcmovu
ds
cmpsl
scas
popa
in
pop
or
mov
call
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
incl
adc
push
jo
pusha
imul
add
mov
cmp
xchg
pop
ljmp
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
pop
gs
jae
shrb
shlb
out
aas
stc
add
notb
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
mov
mov
cmp
fmull
enter
aas
lahf
cs
in
pop
mov
sub
mov
cld
aas
mov
dec
incb
fisubrl
aas
mov
or
cld
inc
das
testb
or
pop
jg
add
mov
std
fistpll
mov
aad
test
mov
mov
std
mov
mov
push
push
sbb
stos
icebp
pop
incb
nop
dec
jno
adc
push
inc
jecxz
sbb
sarl
pop
fdivr
jnp
inc
clc
xorl
mov
imul
dec
jae
imull
mov
aas
mov
fsubrl
mov
push
and
punpckhwd
push
clc
xchg
pushf
mov
repnz
add
push
and
mov
adc
inc
aas
push
shll
cld
decl
inc
jb
fistpl
adc
call
jno
lcall
pop
pop
nop
mov
inc
sti
arpl
daa
std
or
sbb
ljmp
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
xor
push
fsubr
fistps
lds
fidivrl
jg
stos
inc
pop
add
dec
mov
sub
jge
xor
lahf
les
sbb
shrb
xor
inc
and
mov
in
stc
mov
lahf
outsl
int3
push
sbb
pop
sar
jmp
arpl
out
out
outsl
xchg
ljmp
sar
test
in
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
add
incl
xchg
aad
loop
lahf
mov
or
out
lcall
mov
pop
shl
cld
mov
adc
stos
pop
jg
das
in
loopne
shrb
rcl
jg
adc
xor
pop
rcr
dec
mov
push
pushf
lea
jp
jnp
jecxz
adc
inc
ds
pop
adc
imul
or
inc
pop
xor
rorb
and
frstor
incl
subb
xor
mov
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
and
fimull
lcall
cwtl
inc
mov
insb
test
fldt
jo
aas
repz
sbb
lock
in
jmp
pop
clc
lods
out
sbb
aaa
clc
push
std
mov
push
mov
out
xchg
out
sub
cmc
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
outsl
sub
call
faddl
xchg
lcall
jne
pop
sti
adc
dec
ss
lods
movsb
or
incl
pslld
pushf
imul
jl
in
add
imul
out
scas
cli
pop
in
cmp
jmp
mov
sub
ljmp
lock
jmp
hlt
dec
mov
xlat
inc
jo
inc
aas
mov
jg
mov
sub
outsl
mov
or
daa
jp
std
adc
cltd
or
mov
ret
das
ret
nop
cmp
das
incb
lock
pop
pop
div
cld
adc
push
mov
js
fs
sbb
stc
lahf
loope
jae
jmp
push
das
je
jge
pop
jb
out
xchg
add
out
icebp
mov
loope
mov
jle
insb
sbb
fbstp
cmpsb
bound
das
hlt
mov
out
es
call
xor
decb
pusha
xlat
pop
push
adc
mov
and
call
or
dec
in
loope
or
mov
cmp
int
add
push
pop
aaa
std
out
nop
or
sbb
mov
mov
aas
icebp
ret
inc
xchg
sahf
ror
sbb
aaa
inc
stos
cmp
cmp
shrb
mov
push
clc
loope
loope
mov
lahf
jp
inc
rcl
dec
add
xlat
rcrl
sbb
iret
fdivrl
xchg
lcall
xchg
mov
repz
movsb
pusha
shlb
xchg
sarl
pop
out
jg
jno
ret
fs
cwtl
scas
xchg
cmp
inc
sbb
incl
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
adc
mov
in
sbb
xchg
imul
loopne
adc
sbb
mov
daa
jmp
fsubl
mov
or
outsl
pop
decl
or
push
imul
push
dec
out
fstpt
es
mov
mov
enter
jo
lahf
add
fsts
dec
jg
xchg
jl
add
sti
push
sti
pop
inc
xor
sbb
push
push
push
rorb
or
into
push
popf
pop
ss
fwait
test
and
push
pop
add
xchg
dec
outsb
and
and
add
cmp
rolb
incl
xchg
incl
and
daa
ss
ja
jo
mov
in
fidivl
push
jg
add
pop
sub
sbb
js
andl
decb
mov
addb
or
inc
push
adc
pop
inc
repnz
adc
pop
and
and
mov
test
vmwrite
pop
pop
imul
push
ret
dec
xor
jg
or
jnp
xchg
cmp
push
daa
add
xchg
dec
and
cmpsl
push
and
out
xor
push
movsb
push
movsb
inc
scas
push
and
stos
jg
aas
xlat
push
and
push
test
and
imul
push
jl
push
push
inc
pop
pop
add
mov
pop
std
mov
lahf
sbb
add
mov
pusha
sbb
mov
push
ds
les
push
adc
fs
jmp
inc
adc
add
imul
mov
push
add
push
sub
lret
mov
jg
push
add
fnstenv
fdivs
pop
stos
pop
dec
xor
xor
mov
addb
push
add
jo
mov
mov
mov
push
shll
add
outsl
push
shll
fidivrl
iret
outsb
fcmovnu
mov
or
push
ret
je
fdivp
fildl
jge
fisttps
add
fwait
inc
ds
in
jmp
push
add
mov
sbbl
rcr
mov
mov
push
push
push
fwait
in
imul
jne
push
aam
push
ret
gs
inc
push
mov
push
pop
cmp
outsb
jbe
push
mov
pop
add
inc
xchg
cs
lcall
jno
lret
stos
addr16
xchg
aas
dec
inc
push
jo
jge
xlat
jne
add
ja
push
jae
aad
push
xlat
ja
js
push
jns
lahf
fnsave
or
push
fidivrl
rol
mov
push
fldl
mov
mov
ret
jmp
ljmp
mov
mov
sub
xchg
xor
sbb
setbe
xor
fidivl
cwtl
aaa
push
lcall
push
setg
cmp
popf
xchg
popf
mov
push
sahf
inc
push
lahf
inc
lahf
mov
in
jg
pop
mov
push
imulb
movl
out
pop
pop
out
push
hlt
clc
stc
lahf
out
sahf
cli
sti
cld
std
incb
insb
mov
clc
jecxz
arpl
inc
jae
add
imul
add
pop
add
data16
add
pop
add
insb
inc
xor
in
test
stc
mov
add
add
or
mov
or
outsl
or
or
repnz
stos
test
test
or
aam
pop
or
or
pop
pop
adc
adc
lods
outsb
push
rcrb
push
lods
lods
popf
lods
dec
rcrb
pop
push
scas
fcmovnu
stos
mov
scas
scas
insl
lods
pop
pop
adc
mov
add
sbb
push
pop
scas
sbb
scas
scas
scas
and
sbb
nop
fwait
and
mov
mov
push
inc
push
xorl
pushf
sub
sbb
lock
xchg
push
xor
mov
and
and
outsl
push
and
mov
fwait
and
pop
sub
mov
cld
test
pop
sub
popa
and
mov
push
and
adc
out
pop
aas
shrl
sarb
pop
cmp
cmp
add
mov
scas
inc
mov
xor
xor
pop
or
int3
into
or
add
pop
pop
xor
gs
pop
pop
das
push
cs
xor
add
xor
fimuls
push
push
xor
adc
pop
push
cs
dec
inc
das
incl
sub
adc
push
xor
push
push
popa
jbe
cmp
jl
jge
jno
outsl
addr16
dec
add
pusha
pop
pushw
dec
dec
cmpb
jo
mov
inc
xorl
inc
jmp
mov
pushf
fwait
lcall
mov
jle
int
mov
inc
xchg
push
dec
ja
jns
dec
push
bound
jg
fwait
push
js
imul
add
mov
pop
jg
xor
or
and
imul
add
pop
pop
test
insl
push
scas
aas
mov
push
outsl
dec
aas
out
sti
jle
xchg
pop
push
dec
add
push
mov
mov
push
mov
xor
xor
ja
push
ja
aad
lock
jb
cs
xor
mov
push
mov
add
mov
and
push
mov
mov
dec
pop
jo
push
inc
mov
cmp
mov
or
pop
lock
add
jae
xchg
jp
inc
dec
popf
mov
imul
xchg
jb
pop
sti
or
push
bound
mov
mov
mov
mov
insb
add
mov
sti
xchg
outsb
add
xchg
xchg
pop
push
test
cmpsb
dec
push
dec
push
pusha
shl
movsb
jae
add
jb
shll
outsl
subl
pushf
push
pop
daa
clc
das
es
imul
lcall
outsb
pop
in
outsl
fidivrs
dec
push
add
ja
sahf
jbe
fcmovnu
dec
pusha
lcall
imul
stos
push
add
and
das
shlb
jp
add
js
mov
data16
into
mov
push
insb
pop
outsb
push
outsl
shl
sub
ds
push
ds
jno
add
jge
adc
jg
fiadds
call
jo
or
mov
jecxz
sbb
mov
in
mov
add
test
inc
xchg
push
loopne
iret
sahf
mov
in
add
jb
out
in
push
jle
or
jecxz
or
push
aad
push
movsl
jns
imul
push
fildl
adc
push
sbb
addb
sbb
test
adc
faddl
in
mov
push
xchg
nop
and
out
xchg
in
xchg
rolb
lock
sub
sub
imulb
outsb
out
xchg
das
push
xchg
repnz
xor
cwtl
push
cmc
sahf
xor
push
lcall
cmpsb
pop
cmp
mov
aam
dec
shrb
pop
jle
push
cmpsb
scas
jo
test
sahf
mov
pop
jbe
stos
into
shll
lfs
int
mov
mov
sarb
repz
rcl
mov
push
inc
jp
ret
data16
add
addr16
adc
std
dec
out
je
add
xchg
inc
dec
daa
push
test
add
and
femms
or
or
out
in
mov
or
es
push
adc
push
add
sti
pop
adc
adc
ds
add
xor
pop
mov
xor
ds
loop
mov
mov
mov
mov
mov
push
add
and
mov
mov
loopne
ds
mov
xor
aad
aas
and
lock
mov
xor
or
push
enter
aas
cmp
lret
jae
cmp
cmp
add
mov
sbb
inc
jbe
cmpsl
insl
mov
cmp
inc
jle
adc
jbe
cmp
dec
mov
scas
ds
jle
aas
addr16
ds
xor
dec
inc
popf
test
scas
add
jge
addb
xor
pop
mov
xor
outsl
ds
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
jg
jg
test
mov
sahf
ds
xor
sub
sub
sub
sub
add
ss
and
push
inc
inc
inc
mov
push
push
push
push
push
imul
push
pop
push
push
push
imul
mov
pop
imul
nop
cltd
mov
dec
call
orl
cmp
insl
popf
mov
jge
jns
jns
cli
js
jg
test
jb
jae
jo
outsb
pushf
sti
daa
mov
stos
lds
in
pop
loopne
rolb
or
fwait
add
push
addb
push
add
or
int
cmc
repz
dec
xor
dec
push
aas
add
xchg
pop
cmp
test
add
mov
add
mov
mov
mov
and
mov
repnz
out
push
adc
cmpsb
gs
jecxz
pushf
jg
xchg
add
ret
push
in
lcall
pop
imul
fs
decl
or
jae
js
into
xchg
add
mov
cwtl
add
cmpsb
mov
test
scas
xchg
js
in
and
out
es
nop
sub
fcmovnbe
ss
sub
xchg
push
sub
nop
sub
mov
das
push
xchg
xor
xchg
xor
xchg
outsb
lcall
es
jbe
negl
fcmove
iret
insb
fst
es
push
lret
loopne
push
decb
inc
sub
std
into
fdivrp
int
or
add
jg
jle
jge
or
nop
xchg
dec
dec
dec
dec
dec
add
jg
pop
or
add
push
dec
or
adc
cmp
adc
pop
mov
dec
dec
dec
inc
add
push
adc
add
or
inc
fmuls
pop
cmovg
inc
push
dec
sbb
imul
adc
inc
inc
adc
sbb
jg
aas
mov
adc
inc
ds
cmp
cmp
cmp
mov
and
sbb
and
adc
sub
push
pushl
xor
xor
sub
sub
push
add
mov
addb
mov
pop
mov
mov
cmp
mov
add
outsb
mov
inc
and
int3
push
outsl
or
push
fcmove
pop
inc
into
inc
adc
enter
add
push
cmpsl
adcb
inc
jbe
mov
pop
sbb
test
jmp
scas
push
clc
sbb
incl
inc
mov
xor
pop
mov
es
cltd
test
popa
ds
testb
lock
mov
or
push
push
jg
sub
or
ja
mov
adcb
outsl
add
and
sahf
jg
or
mov
test
xchg
pusha
mov
add
cli
add
xchg
or
push
or
cli
inc
lds
pusha
and
insb
mov
das
sti
cmp
jle
mov
inc
sub
dec
sti
add
or
xchg
adc
stos
jg
and
adc
jg
pop
sbb
mov
pusha
and
jg
and
lods
push
cld
jg
jo
add
jbe
and
std
ja
sub
cmp
inc
dec
mov
jg
dec
push
add
jg
add
jg
add
add
and
add
add
add
decl
sbb
add
dec
xor
dec
adc
mov
jg
dec
adc
mov
inc
addb
inc
adc
sbb
jbe
bound
adc
jmp
ror
sbb
sbb
mov
lea
push
jmp
lods
jle
loop
add
lret
imul
addr16
add
mov
push
pop
dec
push
lods
inc
pop
jg
pop
add
les
jbe
and
add
scas
data16
and
push
jg
inc
lret
fiaddl
outsb
mov
incl
and
inc
mov
stos
mov
pop
lret
and
add
jle
fistl
pop
fdivrp
cmpsb
ljmp
out
mov
xor
pop
pop
pop
add
mov
insl
arpl
aas
aaa
pop
pop
mov
xchg
addl
nop
imul
push
inc
test
or
test
jle
sbb
mov
test
jle
push
dec
xchg
into
imul
push
mov
outsb
in
push
comiss
daa
push
arpl
mov
addr16
pop
push
mov
arpl
out
cmpsl
test
mov
dec
mov
lcall
sub
jmp
sub
sbb
jle,pt
inc
push
call
push
sbb
dec
jmp
repz
mov
push
jne
push
push
jne
pop
and
jbe
out
push
jnp
insl
inc
sub
push
jp
push
js
inc
in
mov
pop
add
inc
ja
jmp
fdivrs
test
mov
push
outsb
ds
call
jle
fnstcw
mov
outsb
ss
and
or
ljmp
call
dec
ja
xchg
dec
ja
xchg
adc
mov
fwait
adc
xchg
inc
outsl
mov
push
push
mov
mov
jns
jbe
sahf
inc
out
mov
data16
push
xchg
or
pushf
cmp
ss
mov
xchg
xor
push
xchg
xor
sub
sub
nop
daa
ss
cmpsl
test
cmp
in
mov
xor
cwtl
aaa
outsb
call
aam
push
mov
les
jg
pop
fnsave
xor
jo
int
inc
fs
push
jbe
mov
xor
ss
cs
cmpsl
xchg
or
dec
and
push
hlt
dec
mov
xchg
movb
ja
sbbl
mov
add
push
aam
ja
add
inc
bound
and
and
push
push
shrl
add
push
inc
orb
or
adc
jns
cmpsb
or
adc
pop
push
cmpl
push
mov
popf
push
imul
ds
test
push
lock
cmp
pop
mov
cmp
icebp
or
xor
in
mov
sub
cmpsb
cmpb
decl
out
pop
cmpsl
pop
add
push
mov
mov
outsl
daa
orb
push
sbb
xor
mov
cli
push
addb
sti
xchg
std
jp
add
jmp
syscall
mov
sub
xchg
lods
push
incb
xchg
or
add
lcall
or
mov
sub
insb
lahf
xchg
daa
cld
pop
das
pop
sub
and
jmp
daa
mov
decl
test
xchg
test
add
adc
lcall
or
decb
sti
pcmpeqd
inc
popa
ds
pushl
ljmp
popa
or
call
sbb
inc
jmp
bound
movsb
sbb
inc
rorl
lods
test
sbb
sub
outsb
sqrtps
fdivr
or
mov
clts
add
mov
jb
and
iret
int3
shlb
incl
mov
sti
out
shld
pop
rorb
push
dec
pushl
pop
cwtl
sbb
iret
ljmp
lcall
pop
inc
rcl
add
cwtl
fdivrp
push
sub
add
lcall
mov
incl
call
call
incl
test
pop
cmpsl
mov
or
pop
stc
pslld
call
jg
adc
popa
out
cli
rclb
loop
call
inc
sbb
lcall
movsb
push
test
es
addr16
inc
pop
fcmovbe
pop
mov
fildl
inc
xorps
nop
sub
jmp
iret
data16
push
shll
roll
fiaddl
sub
sahf
ret
jmp
jmp
push
adc
jmp
in
fwait
in
ljmp
lahf
inc
inc
push
inc
imul
in
inc
pop
es
mov
arpl
sahf
movsb
dec
push
stos
push
and
sahf
int
inc
cmpsb
dec
dec
inc
popf
mov
dec
mov
and
adc
dec
push
out
push
shrb
repz
outsb
shll
dec
lret
xchg
push
push
jb
dec
xchg
das
xor
das
push
iret
insl
fs
outsl
pop
imul
push
push
push
xchg
stos
and
ljmp
jmp
lcall
sbb
pop
add
repnz
push
jmp
mov
movsb
outsl
pushf
cmp
aas
decb
cwtl
xor
int
pop
lahf
push
inc
push
xchg
mov
sahf
dec
push
push
aaa
push
lcall
cltd
movsb
xchg
push
xchg
es
xchg
xchg
xchg
notb
sub
dec
push
xchg
pushl
xor
data16
fimuls
sbb
add
fidivl
aad
or
faddl
push
fstpt
push
jnp
jp
or
int
push
jl
or
jl
push
jge
shrb
adc
push
jbe
adc
fidivrl
jg
data16
dec
push
dec
repnz
repnz
jae
pop
fidivrl
cld
aaa
fbld
mov
jnp
jge
hlt
in
add
int3
push
push
leave
xor
pop
add
push
push
xor
xchg
push
outsl
lahf
adc
adc
adc
or
imul
cmp
jnp
lahf
dec
es
addl
adc
xchg
in
orb
sbb
out
and
inc
and
push
sub
iret
mov
push
out
mov
cli
pushl
clc
push
pop
mov
sahf
idiv
push
jb
sub
movsb
sahf
icebp
dec
pop
cld
out
ja
mov
jno
sub
jg
sub
icebp
movl
xorb
fidivs
in
dec
loope
xchg
cld
sbb
jl
jp
es
xchg
aaa
repnz
dec
and
in
jbe
add
jg
dec
stos
dec
or
addr16
mov
orl
mov
stos
nop
sbb
rolb
push
push
fsub
pop
dec
lahf
inc
mov
pushl
and
jle
mov
fidivrl
arpl
jmp
cmp
push
out
fidivs
pop
push
pop
push
inc
ljmp
decl
ds
lcall
jp
int
push
jns
shl
sub
mov
jmp
xchg
jmp
mov
sti
popf
fldcw
sbb
jmp
adcb
add
lcall
cs
sbb
loope
and
lret
jg
out
mov
inc
push
test
or
iret
sbb
push
mov
add
push
sbb
or
xlat
mov
mov
and
sti
push
push
les
aaa
adc
add
pop
xchg
pop
mov
or
adc
ficoms
lret
ret
sbb
xor
inc
lahf
fiadds
ds
lret
adc
repnz
out
adc
xchg
push
mov
lods
test
pop
push
sbb
rcrl
add
insb
fstpt
or
push
adc
or
or
add
mov
add
mov
dec
cmpsl
movsl
push
add
rolb
mov
sbb
sub
mov
or
xchg
push
push
adc
jb
xchg
mov
jae
mov
cmp
dec
inc
into
fimull
jo
or
push
mov
jae
push
ljmp
xlat
nop
mov
ljmp
imul
push
ss
das
inc
adc
sbb
fldt
push
pusha
inc
push
popa
jb
push
imul
push
popa
imul
test
and
pusha
sub
sti
scas
jg
inc
hlt
jb
fisttpll
cltd
cmp
jbe
push
inc
adcb
add
add
int
pop
iret
jno
push
mov
cmpsb
fildll
or
test
or
sbb
mov
sbbb
cmc
inc
push
repz
sub
mov
sub
sbb
cmp
dec
movsb
push
dec
in
cltd
decb
addl
lret
gs
and
lods
roll
shl
jo
mov
jne
addr16
jge
std
outsb
jbe
mov
shrl
insl
xor
mov
stos
inc
mov
xor
jo
push
or
out
pop
mov
jne
push
jnp
jae
cmp
out
roll
ljmp
rcrb
jbe
push
outsl
dec
cmp
and
jl
or
pop
and
push
stos
clc
pop
pop
gs
jg
subl
jns
pop
insl
cmp
jge
adc
cmp
mov
push
jmp
add
push
push
outsb
nop
fildll
gs
cmp
rcl
mov
lret
push
sbb
lcall
sahf
call
inc
dec
into
sbb
dec
pop
mov
adc
outsl
ljmp
outsb
mov
cld
in
dec
mov
rcrb
jp
gs
dec
outsb
aaa
lcall
mov
mov
aas
inc
imul
das
sbb
inc
and
pop
sbb
sbb
push
inc
or
sarb
pop
sbb
inc
sarl
movb
ret
icebp
xchg
inc
dec
fistl
inc
cmovno
adc
xor
arpl
out
leave
lods
fldl
jb
cmp
hlt
popa
dec
das
or
push
movsl
fadd
ret
fiaddl
jle
test
ds
dec
call
sub
cmp
mov
es
push
in
and
and
xor
push
rorl
sti
test
sub
dec
or
cmp
cmpsb
push
push
xchg
in
insl
insl
cmp
bound
in
mov
sub
push
push
mov
mov
cmp
jno
adc
adc
jns
and
dec
outsl
mov
jecxz
rcl
add
pop
sub
push
xor
xor
sbb
je
pop
xor
mov
pusha
subb
sbb
imul
adc
and
ja
je
add
fistl
mov
ds
int
ja
popf
repz
sarb
fadds
mov
lods
lods
mov
stos
fsts
lods
pusha
adc
jge
lcall
mov
jmp
lcall
inc
push
rcll
adc
mov
cmp
sub
je
add
push
dec
test
jmp
test
jae
xor
or
push
inc
scas
push
mov
add
mov
outsb
jno
pop
sub
shl
mov
push
loope
mov
inc
imul
cmp
in
jb
test
mov
test
add
cltd
sti
inc
xchg
movsb
and
push
jno
ret
mov
loopne
cmp
icebp
clc
roll
scas
cmpsb
xchg
sub
inc
pop
cmpsl
adc
pop
inc
add
xor
add
mov
inc
jne
gs
ror
mov
xchg
ja
and
gs
inc
arpl
lods
test
iret
sub
sub
cmp
sbb
xchg
pop
sub
sub
dec
pop
or
mov
adc
dec
dec
fnstenv
pusha
jg
and
es
inc
scas
push
pop
imul
roll
or
fidivrs
inc
sbb
sub
cmp
and
enter
sbb
test
sbb
jno
or
pop
dec
add
mov
lret
pop
imul
orl
inc
insb
sub
aam
jnp
rcpps
js
inc
mov
push
jb
inc
inc
xlat
inc
jl
sbb
inc
fs
ficoms
push
push
leave
xor
mov
push
sbb
scas
adc
or
sahf
daa
push
insl
ret
bnd
push
outsl
sub
jecxz
cmp
push
popa
xchg
stos
dec
pop
jmp
aad
xchg
mov
dec
pop
imul
jne
jns
push
xchg
jns
repnz
into
push
and
rcll
push
pop
push
mov
mov
inc
jge
xchg
and
xor
fcomps
pushf
push
pop
xor
mov
adc
cmp
mov
outsb
outsb
inc
dec
mov
push
sub
pop
sbb
pop
add
xchg
dec
outsb
dec
and
aad
add
rcrl
xor
sub
mov
ss
push
int3
sar
pop
add
add
sbb
mov
mov
sbb
movsb
dec
adc
jnp
or
or
push
adc
xor
shll
sub
xor
jl
push
es
jo
loopne
cmp
repnz
sbb
inc
add
lock
jmp
movsb
cltd
loopne
mov
arpl
fidivl
cmp
inc
jae
pusha
out
mov
mov
jo
sbb
dec
cmp
dec
imul
stc
or
push
test
fsubrs
inc
insb
scas
mov
push
dec
int
stc
test
test
jo
inc
out
sbb
cmp
jecxz
or
inc
push
adc
sbb
add
push
inc
mov
and
adc
enter
scas
mov
test
hlt
fbstp
sub
arpl
divb
fs
push
pusha
inc
cmp
aas
ss
js
cmp
pushf
xor
push
les
cmp
imul
push
sbb
popa
adc
inc
fst
jo
outsl
inc
inc
xor
mov
fistpl
lock
sub
nop
xlat
fdivs
sbb
mov
xchg
xorb
pop
xlat
adc
or
mov
ret
gs
push
movsb
fnsave
and
dec
xor
fcomps
push
and
lret
xchg
fadd
rcll
mov
mov
jecxz
add
test
cmpsl
adc
or
xchg
mov
es
mov
rcrl
mov
outsb
cmovns
inc
cmp
push
inc
push
inc
daa
movsl
and
nop
popf
adc
daa
or
add
mov
mov
arpl
xchg
test
pop
xor
push
xor
imul
rcrb
adc
xor
test
sbb
imulb
pop
adc
nop
fs
mov
cmp
jns
stos
xor
and
cmp
jbe
sub
out
mov
cmp
loope
pop
push
jo
rorl
aas
scas
or
lahf
mov
sub
mov
fisubrs
mov
pusha
lods
mov
add
push
adc
outsl
imul
and
iret
repz
push
push
mov
mov
inc
xchg
pushl
dec
mov
add
sub
mov
sbb
sbb
xchg
or
cmp
cmp
outsb
adc
test
imul
shll
add
aaa
pop
shrb
and
out
push
movsb
addb
inc
rolb
pushf
sarb
cmp
add
fwait
loope
leave
aam
dec
add
mov
loopne
mov
dec
or
or
enter
jnp
daa
dec
ds
adc
xor
xchg
jns
pop
inc
xchg
adc
mov
mov
or
adcl
pop
or
int3
jmp
testb
mov
pop
repz
xorl
outsl
addl
movb
mov
or
jb
dec
rorb
push
in
add
mov
das
cmp
out
inc
cs
notb
adc
push
pop
push
dec
cmp
sahf
jae
arpl
lahf
ds
sub
sahf
xchg
push
lods
lock
or
inc
js
int
sbb
and
ret
jg
mov
dec
xchg
incl
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
lock
add
enter
add
