divl
in
mov
mov
enter
lea
push
call
int3
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
mov
dec
adc
movb
lock
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
jg
lock
push
push
push
mov
push
into
pushf
add
jge
jmp
jmp
stos
adc
push
push
sahf
jp
push
testb
clc
test
ds
jmp
pushl
sar
dec
sub
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
ljmp
lahf
push
mov
andl
push
pop
add
enter
add
mov
punpckhwd
add
cmp
bound
inc
in
or
push
push
outsb
iret
negl
inc
cld
add
xchg
mov
add
incl
sti
inc
add
add
call
jle
add
mov
mov
jmp
push
mov
lock
add
sahf
or
sbb
pop
inc
push
or
out
or
in
lock
add
xchg
add
push
loop
inc
adc
mov
insb
mov
out
leave
sbb
xor
dec
sbb
int3
sub
outsb
sub
add
push
push
cwtl
in
add
mov
add
cmp
fsubrs
cmp
add
data16
mov
sbb
push
push
lods
push
cld
pop
inc
add
fdiv
fistpl
fldt
inc
add
test
mov
ds
je
pop
add
pop
mov
push
cmp
loopne
cmp
rolb
popl
push
cmp
pusha
pop
add
aad
add
pop
inc
mov
in
pusha
les
xchg
shlb
dec
add
sub
in
cmp
call
loopne
out
sub
sahf
or
daa
xor
cmpsb
call
fidivrl
gs
js
in
push
adc
out
mov
add
push
sub
inc
mov
sub
xor
pop
sbb
mov
pop
out
imul
jmp
mov
push
inc
dec
mov
push
faddp
push
lock
and
jmp
cmp
mov
sti
sbb
adc
mov
push
pop
cmp
and
aaa
jb
mov
sub
adc
mov
inc
cmp
jae
xchg
cmp
adc
mov
add
and
test
adc
mov
mov
xor
jae
sub
push
mov
xchg
subl
push
adc
add
sbb
jle
insb
jno
xor
cmc
push
adc
xor
or
je
push
mov
push
cmp
sbb
call
lds
jl
cmp
jb
xor
or
sbb
pop
xchg
gs
addb
imull
inc
or
mov
push
sub
push
sbb
jo
push
jo
mov
push
stc
stc
add
or
or
sub
inc
in
loope
xor
subl
and
or
nop
xor
push
or
and
and
push
inc
xlat
xchg
mov
push
fwait
je
push
or
cli
bound
add
lret
adc
cwtl
mov
push
jmp
fildl
daa
mov
int3
push
xchg
mov
mov
inc
jmp
push
cmp
mov
jnp
aad
xchg
add
sbb
xadd
sub
loop
shrl
stc
call
ss
repnz
jb
sbb
cmp
fldcw
shrb
mov
push
push
sbb
xor
sub
mov
movsl
mov
scas
inc
pmulhw
repz
jmp
enter
adc
ret
paddd
nop
add
in
cmp
xor
adc
fwait
or
adc
out
jo
push
mov
iret
sub
push
pop
in
in
cmpsb
inc
push
xlat
dec
xor
aam
mov
add
cmp
xor
xor
mov
or
push
movsb
push
mov
pusha
sbb
inc
add
leave
repz
push
stos
jae
push
mov
adc
add
mov
pop
pushf
pop
jl
adc
sbb
out
ret
sub
lds
push
inc
cmpsl
test
mov
adcb
mov
out
lea
mov
push
push
push
push
adc
ret
je
ret
fiaddl
jl
mov
pusha
push
mov
pushf
mov
push
xchg
or
mov
out
and
mov
sub
dec
xor
push
mov
jge
jle
movsl
cltd
mov
mov
lea
ds
scas
sbb
inc
mov
in
pusha
rclb
mov
lds
or
fmull
sbb
je
popa
cmp
mov
lea
fildll
fdivs
je
add
imul
adc
cli
mov
ja
insl
lea
jno
imul
bound
sbb
dec
inc
mov
jne
adc
out
mov
inc
or
jno
stos
mov
cmp
or
lret
push
fdivs
or
mov
sbbb
xchg
xchg
inc
pushf
mov
push
sbb
and
popf
xchg
arpl
pop
xchg
xchg
push
cmc
push
stc
or
jl
and
mov
shr
mov
xchg
iret
aas
test
hlt
bound
xor
cli
mov
leave
ret
push
mov
sbb
push
test
lods
push
dec
aas
fisubl
sbb
push
mov
cltd
and
jge
cmp
hlt
faddp
pop
lock
jne
pop
mov
sub
push
xchg
sub
js
or
cmp
scas
cli
je
sub
dec
pushl
pop
in
push
movsl
sbb
sarl
pop
add
mov
iret
enter
sub
lds
ljmp
mov
sbbb
dec
repz
loopne
mov
sub
std
lods
and
push
add
xlat
mov
test
jne
fs
in
jl
inc
cmp
jl
jmp
pop
and
pop
daa
pop
insl
popa
sbb
pop
push
pop
push
push
fdivrs
push
adc
pop
mov
ret
push
or
test
mov
mov
push
pop
enter
sahf
pop
pop
ficompl
sbb
bound
and
rorl
push
mov
push
gs
cli
std
fucomip
add
add
push
ss
andl
push
fbstp
and
xor
ljmp
psrlw
and
push
push
push
and
dec
cmp
sbbb
pop
pop
ret
push
push
fcomps
ja
icebp
and
rcl
or
repnz
jbe
mov
mov
and
adc
sub
adc
pop
push
cs
testb
rcrl
xor
add
pop
or
aas
icebp
mov
jne
js
sub
pop
cmp
mov
jge
iret
xchg
pop
ss
mov
or
test
add
mov
add
mov
add
push
mov
imul
add
jmp
mov
loopne
add
push
adc
mov
pop
jbe
adc
xor
ret
icebp
std
negb
cmp
cmp
push
add
or
mov
jle
std
adc
adc
adc
and
addl
loopne
jg
push
jge
inc
stc
jne
mov
jmp
xlat
int3
fcmovnb
xchg
in
adc
push
repnz
ja
rorl
push
ja
lea
int
pop
das
decb
pushl
cmp
push
jge
aas
mov
andl
gs
pop
pop
mov
rolb
inc
out
loopne
adc
pop
inc
out
xchg
add
stos
push
fsubl
leave
je
add
pusha
in
das
out
mov
sahf
push
xchg
insl
push
push
mov
lock
fisubrl
cmp
push
push
dec
push
push
cmpsl
mov
je
push
inc
out
jo
jno
push
push
push
mov
mov
pop
inc
pop
pop
movsl
mov
test
xor
shlb
adc
or
scas
retw
sti
mov
das
icebp
inc
lock
jle
ds
add
add
sbb
ficomps
mov
aaa
push
sub
push
leave
adc
cmp
or
xchg
mov
mov
out
adc
into
je
jle
jl
adc
sub
push
jne
push
push
jge
into
test
ret
nop
pop
pop
jmp
in
mov
push
mov
pop
dec
pop
arpl
cld
fmuls
xor
xor
dec
xor
mov
sub
or
jge
inc
xchg
jl
push
inc
clc
jecxz
mov
jg
inc
fimuls
movb
push
mov
pushf
xor
ja
fistps
pusha
mov
or
shlb
adc
ret
outsl
mov
lcall
add
das
inc
dec
xchg
cmpsb
je
and
sbb
adc
xchg
cmpl
inc
notb
jne
test
or
dec
push
push
call
mov
sub
inc
dec
into
and
xchg
add
jae
aad
mov
push
mov
jbe
loop
pop
hlt
ds
mov
mov
push
test
mov
mov
jae
adc
mov
jge
inc
or
push
or
ds
lret
loop
add
xor
mov
xchg
add
cli
loop
dec
xchg
mov
inc
repnz
pop
outsb
icebp
add
push
daa
daa
jmp
mov
mov
aam
add
ret
ret
shlb
loopne
sbb
unpckhps
or
fstl
cmp
push
sub
xchg
push
mov
outsb
nop
mov
inc
mov
jbe
pop
fsub
nop
inc
add
or
adc
arpl
inc
adc
lock
jge
ret
jge
mov
cmpsb
adc
repnz
push
dec
push
or
push
roll
push
ss
lods
mov
push
scas
adc
jge
cmp
ss
sarb
cmp
cmp
not
popf
sbb
or
mov
or
xor
or
push
add
imul
or
mov
add
jo
pop
mov
push
call
pop
inc
fldt
sub
addb
pushf
sbb
clc
loope
fnstsw
inc
fcoms
lea
push
pop
mov
dec
mov
pop
pop
jmp
test
push
sub
negb
mov
mov
call
out
pushl
movsl
das
mov
jg
ds
ret
push
mov
pop
sbb
adc
inc
fcoms
push
pop
ja
cmp
lret
test
insb
ret
call
cli
mov
cwtl
dec
and
negb
add
add
jae
hlt
pop
in
shlb
shlb
lahf
add
xor
inc
add
mov
int
mov
add
mov
or
push
push
add
cmp
add
push
xlat
imul
inc
add
lahf
dec
mov
adc
shll
add
test
mov
push
pop
enter
add
out
repnz
adc
push
or
push
sub
and
and
and
out
in
das
sbb
sbb
sbb
cmc
add
pop
cs
imul
sub
insb
inc
pop
pop
scas
into
adc
pop
adc
push
int3
adc
push
in
sbb
or
cmpsb
stos
push
mov
add
adc
pop
cli
mov
lods
dec
or
iret
cli
pop
push
add
cmp
ja
mov
test
adc
and
stc
jle
aas
fists
add
inc
pop
sbb
push
cmp
filds
push
cwtl
hlt
mov
push
cltd
pop
testl
jne
lock
mov
mov
shrl
inc
add
jb
jmp
push
mov
push
hlt
loope
mov
pop
sbb
mov
sub
add
push
push
jbe
call
xchg
scas
add
cmp
fwait
outsb
jg
sub
jmp
sub
dec
je
adcb
sbb
mov
sub
test
adc
dec
adc
loopne
sbb
jo
lret
jmp
or
test
popf
cmp
jecxz
pop
jne
jp
add
jle
xor
sar
push
incb
push
insb
xor
hlt
scas
out
sbb
add
mov
scas
adc
mov
lea
add
enter
clc
adc
push
mov
xchg
xchg
mov
mov
mov
push
std
mov
addb
repz
push
sub
cmpsl
jge
fbstp
js
jo
push
in
in
iret
int
andl
std
mov
jmp
mov
adc
jmp
cmp
mov
xor
je
cmp
add
fs
sbb
leave
adc
adc
mov
add
fstpl
imul
shlb
scas
push
and
test
sbb
pushf
and
jmp
data16
sbb
mov
jmp
sub
push
push
sub
out
pop
jb
xchg
aam
ds
fisttps
sub
lods
sub
ret
push
push
fs
stos
stos
cld
sbb
cld
cmpsb
or
mov
adc
push
push
rcr
addb
add
out
or
or
clc
pop
xor
add
movsl
bnd
or
adc
push
mov
mov
ds
dec
mov
pop
push
lea
inc
ret
mov
xchg
xlat
dec
cmp
mov
cmp
inc
lods
xchg
xor
add
pop
call
lahf
jge
mov
dec
adc
movl
push
pop
jo
std
jnp
insb
push
sbb
xchg
dec
xor
mov
dec
adc
xchg
jbe
fnstenv
call
xchg
lock
and
mov
push
ja
mov
sub
jo
dec
shrl
pushf
lret
test
testl
repnz
sbb
jmp
or
and
pop
nop
or
push
outsl
lock
out
nop
sub
int
mov
adc
and
sahf
mov
arpl
in
jl
mov
mov
imul
je
jmp
pop
jae
push
jne
inc
lock
mov
rclb
mov
and
clc
add
mov
dec
pop
xor
lds
mov
imul
shrb
shr
xor
test
cmp
nop
insb
clc
cmovno
push
push
push
mov
loope
push
fdivrs
sahf
ja
ficoml
push
xor
test
xchg
push
lds
mov
lods
mov
jp
sahf
mov
add
pop
pop
xlat
stos
fcoml
daa
lea
je
mov
fisttpl
push
jo
mov
mov
cld
inc
xlat
in
and
cmpl
add
mov
sbb
push
push
push
cmp
pusha
rorb
push
ret
adc
xor
xchg
ror
out
push
ljmp
adc
clc
push
xor
lcall
cmp
mov
pushl
mov
adc
fcmovu
imul
mov
dec
lea
or
rorl
sarb
je
dec
call
lods
pop
sub
cltd
sub
sar
add
bound
in
fldt
lcall
mov
add
mov
dec
mov
pop
add
inc
cmp
cmp
pop
dec
repnz
leave
shr
mov
push
sbb
daa
inc
pop
or
ret
pop
sub
and
insb
sbbl
push
add
or
rcrl
push
and
inc
sub
push
sub
jo
dec
push
fs
sub
out
fists
inc
js
dec
test
jle
mov
neg
sbb
and
and
xchg
flds
lock
pop
andl
shrl
pop
pop
pushl
add
out
fnsave
dec
inc
cmp
dec
or
cmpsb
loope
lahf
push
insb
mov
adc
push
incl
push
push
lea
sbb
and
shl
or
test
aas
mov
lea
adc
mov
mov
adc
push
popf
ljmp
adc
add
mov
sbb
mov
adc
punpckhdq
mov
inc
lock
pushl
sub
push
repnz
mov
popa
sub
pop
inc
sub
daa
lods
aas
jo
sbb
jg
pop
les
scas
push
call
jge
shll
mov
push
adc
xchg
sbb
fsubrp
adc
jmp
jg
jmp
mov
add
xchg
andl
pop
stos
cs
xor
int3
mov
lds
loopne
push
aam
mov
and
push
out
pop
icebp
sahf
or
add
sbb
in
pop
or
jbe
add
hlt
movb
das
jo
lock
or
xlat
inc
fldz
enter
xor
cwtl
jo
movb
loope
push
loope
cld
aas
mov
mov
add
je
loopne
xchg
pop
fs
jmp
test
cmp
push
test
inc
pop
loopne
mov
mov
mov
push
mov
mov
sbb
dec
inc
test
jns
xchg
jle
or
cmp
lea
mov
push
outsb
pop
jbe
adc
jo
pop
pusha
cmp
mov
mov
push
jbe
sub
shlb
push
and
fmuls
add
hlt
jns
push
jp
push
enter
adc
loope
push
pop
insb
xor
rolb
fs
or
xor
cmp
or
mov
push
adc
pop
xor
cmp
or
scas
jo
cmpsb
dec
lock
pop
push
addr16
sbb
sub
test
xlat
call
xor
addb
adc
cmpl
mulb
and
inc
mov
ret
repnz
iret
sbb
test
repnz
aaa
faddl
sub
inc
imul
inc
dec
fldl
fmull
imul
push
cs
out
add
dec
es
push
iret
sub
rcrl
loopne
andl
xchg
stos
mov
inc
add
movsl
pusha
or
sub
push
sub
in
test
ds
rorb
daa
jns
push
add
or
jne
mov
and
or
pop
mov
lea
pop
insl
stos
iret
in
dec
push
add
push
addl
push
push
sbb
scas
add
divl
stos
fcoms
pop
dec
dec
or
sbb
or
dec
adc
jge
inc
es
add
out
in
jg
das
sub
dec
and
add
in
rcll
inc
mov
test
jb
mov
adc
pop
mov
dec
test
ficomps
cld
je
cmpb
sbb
inc
je
cwtl
pop
shrl
mov
xchg
xchg
push
cld
pop
nop
inc
stc
cmp
sub
sub
push
push
or
sbb
cmp
pop
rorl
cmp
dec
je
lock
es
push
shll
pop
inc
shlb
ret
imul
or
sarb
insb
push
mov
in
in
adc
je
notb
push
mov
rcrl
cmp
popa
dec
ret
xchg
inc
sub
out
jl
or
jbe
rol
sarl
ss
mov
fsubrl
fisubrl
xchg
mov
pop
adc
xchg
testl
bound
jl
mov
cltd
mov
add
sar
push
sbb
or
adc
push
xor
ss
dec
inc
sbb
xlat
div
cmpsb
lock
adc
out
icebp
jge
mov
fcomip
sti
push
pop
push
or
dec
jmp
xor
idiv
jle
mov
aas
mov
aaa
jp
mov
add
aaa
dec
pop
mov
loopne
jbe
adc
movsl
sbb
jmp
fnsave
mov
int
jo
in
cmpsl
xchg
pop
pop
in
adc
sbbl
push
adc
add
mov
or
out
pop
or
pop
pusha
rcrb
movsb
sti
sub
mov
je
test
pop
lea
cltd
idivl
mov
inc
mov
xor
dec
mull
pusha
jl
mov
icebp
into
mov
jne
jnp
or
xchg
arpl
mov
test
insl
or
jbe
lahf
xor
xchg
pop
sahf
das
pushf
sbb
and
lods
lea
clc
add
pop
inc
repz
ds
xchg
imul
cmp
or
jmp
lds
jmp
mov
pop
hlt
fildl
pusha
mov
sarb
faddl
adc
sub
xor
mov
and
pop
or
stc
mov
mov
sbb
sbb
mov
mov
or
cmp
push
add
add
inc
mov
xor
or
clc
fidivl
jmp
gs
testb
sahf
lods
jmp
jne
xor
jo
pop
add
jl
dec
call
push
icebp
mov
aad
mov
mov
mov
shr
test
f2xm1
or
stos
mov
cld
push
adc
and
sbb
mov
je
mov
pop
push
mov
rcrb
lret
je
or
pop
and
mov
test
sbb
cld
push
cmc
imul
or
adc
push
outsl
adc
loope
int
xor
mov
or
nop
arpl
clc
jbe
arpl
and
push
std
pushf
sbbb
adc
gs
pusha
or
push
mov
xchg
mov
jo
xchg
xchg
jo
push
fists
pushf
loopne
jg
add
and
xchg
or
pop
pop
xchg
inc
and
je
pop
push
ljmp
push
mov
lea
push
mov
push
jo
jae
jecxz
pop
loopne
mov
jns
pop
push
sbbl
fdivrs
dec
add
push
xor
inc
or
aas
pop
jnp
sbb
andl
pusha
lock
or
test
add
xchg
fimuls
adc
jb
and
push
add
test
aam
cld
jo
inc
mov
ret
ret
add
push
fs
out
or
push
pop
add
mov
xchg
push
sbb
ja
mov
dec
pop
repnz
dec
push
repz
mov
and
xor
leave
mov
mov
mov
pop
xchg
and
jl
add
and
sub
shrb
or
push
xor
sub
scas
mov
add
push
loopne
xchg
push
sar
loopne
sbb
setb
test
jne
mov
enter
inc
outsl
lods
loope
sar
xor
and
adc
or
push
pop
adc
dec
sarb
je
sub
pop
mov
jmp
rcll
mov
mov
nop
movsw
pusha
insl
lock
hlt
mov
test
imul
xor
sbb
fstps
xor
and
inc
inc
scas
movsl
cmp
push
xchg
lock
out
xchg
hlt
add
or
mov
imull
or
adc
or
push
int
loope,pn
popa
mov
call
into
inc
pop
xchg
pop
mov
adc
imulb
push
add
and
or
fisttpll
jno
es
sub
clc
ret
in
or
and
push
je
and
je
into
icebp
mov
shr
hlt
pop
or
in
ret
int3
pop
jo
mov
mov
hlt
cmpsl
mov
and
std
lcall
mov
or
movl
mov
or
clc
dec
test
dec
mov
dec
outsb
stc
fwait
lock
dec
mov
test
push
sbb
gs
sbb
mov
adc
lret
mov
mov
cltd
pop
js
dec
rcll
test
dec
push
in
jp
sub
xchg
ret
decb
test
aas
movsl
mov
lock
repz
lcall
jne
push
and
insb
pop
push
jmp
fnstcw
ja
xor
push
inc
or
cmp
bound
leave
mov
mov
push
and
sbb
pop
ja
inc
frstor
sub
cmp
jl
lret
or
and
lahf
iret
adcl
test
addb
add
in
jle
xchg
inc
and
add
jmp
push
mov
sub
stos
add
inc
loopew
xor
adc
in
xchg
cmp
xor
lock
mov
ds
int
xor
mov
pop
pushf
mov
insl
lcall
mov
mov
lret
xor
mov
mov
call
mov
ds
push
pop
mov
sbb
dec
inc
lea
cmp
cmp
jecxz
or
push
imul
inc
mov
or
xor
cmp
sub
mov
push
stos
inc
repz
fnsave
adc
and
lock
add
loop
cld
je
cmpb
repz
adc
mov
sub
adc
movsb
rcll
add
jns
cs
cmp
or
dec
gs
and
or
stos
sbb
push
scas
or
push
aaa
nop
push
cmp
rolb
stos
test
ljmp
pop
lock
ds
mov
lea
push
test
pop
loope
pop
orl
pop
and
out
push
add
push
daa
adc
outsb
cwtl
movsl
out
cmpsb
xchg
pop
dec
cs
popf
inc
pusha
ficoms
mov
inc
add
add
js
jg
mov
cmc
push
mov
js
mov
sbb
and
add
sub
inc
mov
pop
push
adc
cs
int3
push
dec
nop
rcrl
mov
and
outsb
or
add
pop
sbb
sarb
pop
leave
mov
jge
mov
or
adcl
fsubs
adc
push
and
shl
daa
add
pop
jo
pushl
fdivl
in
in
fsubr
cmp
fisubrs
add
adc
jge
jl
bound
rorl
fsubrp
adc
sbb
fsubrs
aam
in
mov
mov
dec
and
mov
test
sbb
test
lock
push
aam
sub
scas
adc
fdiv
popa
rcrb
xchg
shlb
bound
push
push
addr16
or
call
cmp
into
repnz
push
and
adc
lret
arpl
in
aam
add
cli
sbb
push
lea
adc
or
add
add
adcl
cmp
push
mov
insb
in
sbb
loope
push
neg
sbb
mov
jle
bnd
xor
inc
and
popf
fsubrp
jo
ja
rorb
xchg
fcoms
or
sbbl
in
bound
cmpsl
sbb
lods
lahf
xor
loopne
rolb
repnz
jl
rcrb
push
mov
pop
add
or
cmp
cmpsl
mov
mov
xchg
outsb
xor
push
mov
pop
cmp
xor
mov
add
mov
add
into
mov
fnsave
bound
adc
mov
cmp
cmpsb
int
addr16
or
jo
aas
fsubr
stos
xchg
xchg
orb
jne
pushf
mov
xlat
imul
sbb
je
in
sub
pop
es
stc
out
les
xor
xchg
sbb
mov
and
movsb
inc
adc
popf
lcall
adc
push
addl
xor
inc
push
and
rcrb
push
pop
xor
push
lcall
add
rorb
fbstp
in
inc
clc
cmp
ret
sbb
or
push
mov
scas
shrb
push
jb
cmpsl
mov
js
divb
mov
push
fsts
push
rclb
cwtl
sub
adc
push
xchg
xor
aaa
adc
mov
mov
cmpsb
adc
mov
cs
xchg
imul
pop
mov
adcl
push
mov
and
pusha
push
push
lds
daa
adc
cwtl
sahf
sbb
lods
and
add
adc
sbb
and
movsb
add
test
rorb
ja
outsb
dec
sahf
or
fdivrl
push
ss
jmp
cld
and
jnp
add
sti
xlat
cs
jnp
cmp
xchg
out
fldenv
sti
add
repz
and
pop
mov
add
test
jo
push
daa
sldt
push
repnz
dec
cld
xor
cmp
or
adc
sub
cmp
leave
sub
sbb
cwtl
pop
scas
in
jns
sub
das
jne
xor
sbb
repnz
inc
mov
cmp
or
sbb
mov
inc
call
inc
add
js
scas
jno
add
mov
push
push
adc
sub
pusha
push
add
or
mov
push
pop
push
or
jbe
enter
push
or
shlb
xchg
sub
pop
or
push
addl
add
add
int
xor
popf
rcrl
popf
icebp
push
adc
or
insl
xchg
push
sub
enter
xchg
sbb
outsl
pop
sub
xlat
adc
in
insb
push
mov
ficoml
xor
in
dec
mov
push
ret
pop
icebp
movsb
outsl
adc
js
jo
jmp
xor
inc
push
xor
adc
int
xor
pop
popa
loope
cmc
jae
imul
or
cltd
icebp
cmp
lods
add
mov
push
jl,pn
sbb
jl
mov
fdivr
in
dec
mov
and
idivb
jo
jle
hlt
lcall
daa
fcomps
inc
inc
cwtl
cmp
je
ja
stos
sarb
lret
add
lcall
push
mov
sub
push
iret
cmp
or
imul
in
fs
sbb
mov
and
push
xlat
or
jge
js
dec
push
movsl
or
imul
outsl
fdivs
dec
in
testb
lock
gs
fs
adc
in
mov
jmp
jno
dec
call
jbe
insl
in
test
cmp
mov
dec
or
and
cmp
movl
inc
mov
inc
hlt
sub
or
add
repz
push
mov
or
fwait
nop
or
lret
or
nop
cmpsl
repnz
test
add
sti
jns,pn
mov
xchg
lock
push
sub
das
mov
nop
or
sub
jbe
ja
pop
in
rorl
sbb
push
sub
movsb
xor
pushf
fsubl
lods
call
inc
rorb
inc
sahf
call
adc
inc
inc
or
and
inc
push
test
ss
scas
mov
adc
orb
cwtl
test
sbb
add
xorb
push
outsb
cmpsl
rcll
imul
mov
int
or
sub
mov
adc
adc
roll
mov
lret
ftst
and
adc
lock
inc
adc
push
xchg
fsts
or
fildl
ss
push
outsl
and
iret
jae
add
inc
add
add
add
add
in
out
or
cmp
mov
mov
xchg
sub
pop
cmp
inc
dec
sub
insl
push
mov
adc
jge
cmp
loop
jo
sbb
pop
fwait
and
inc
push
fsubl
lock
sbb
cwtl
pop
adc
lret
and
out
sarl
dec
aam
gs
or
pop
and
pop
adc
in
fsubrl
cmp
and
add
pop
xlat
cmc
jbe
jecxz
and
push
mov
loope
adc
cmpsl
sbb
pop
dec
cmpsl
xchg
shrb
sbb
push
jne
cmp
testl
jnp
div
pop
test
mov
andl
icebp
mov
or
lea
icebp
dec
xor
movups
pop
xor
sbb
icebp
adc
xchg
movsb
out
jge
outsb
fwait
call
hlt
lcall
insl
cld
dec
pop
add
jns
out
outsb
test
mov
or
imul
sub
inc
pusha
sub
mov
mov
ret
pop
push
cld
xchg
mov
insb
loopne
cmc
jge
jbe
mov
pop
stc
jne
push
and
inc
or
sbb
jb
and
inc
bound
pop
push
dec
shlb
mov
sbb
out
outsl
pusha
cmpl
jne
push
shr
ffreep
jo
leave
int3
cmp
test
jge
push
and
aas
jl
movl
mov
js
mov
or
orb
push
pusha
insb
icebp
mov
mov
test
loopne
mov
jge
mov
and
jl
int3
mov
fwait
in
stos
cmpl
fadds
es
js
push
dec
shll
dec
js
js
pop
dec
xor
in
adc
xchg
int3
xor
mov
and
sbb
push
daa
leave
xchg
mov
inc
push
push
jae
dec
fdivrl
xor
rcrl
push
fists
cmp
jns
inc
js
dec
orl
fiaddl
mov
cmp
jo
mov
inc
push
out
inc
lahf
addr16
mov
pop
sbb
mov
or
pusha
add
sub
fstpt
cmpl
fistpl
add
dec
dec
push
sbb
pop
push
mov
and
cmp
aam
ffreep
fcoms
mov
popf
or
imul
mov
leave
dec
xchg
aad
xor
add
mov
adc
pop
jle
xor
pop
push
aam
aam
sbb
push
and
mov
test
dec
cmpsl
hlt
loopne
cmpb
xchg
or
add
and
icebp
mov
cwtl
add
fmull
jge
stc
or
fisttpl
mov
xchg
mov
pushl
mov
xchg
jecxz
cwtl
or
out
cmp
push
push
xchg
sub
popf
sub
sub
push
or
or
test
ja
dec
sbb
mov
xrelease
fsubl
lret
push
test
xchg
lret
sub
mov
pusha
xlat
and
sbb
pop
and
mov
std
and
dec
push
adc
push
scas
mov
add
rclb
stos
mov
inc
in
cmp
push
imul
or
shll
rclb
lret
sub
fs
inc
jl
sub
repz
loop
pop
hlt
setne
je
loopne
pop
repz
sti
aas
push
push
push
movl
hlt
jne
push
push
sbb
sbb
push
sbb
andl
imul
xchg
call
pusha
adc
push
cltd
pop
loopne
and
push
push
or
popa
xchg
pop
repnz
popf
scas
xchg
test
nop
sub
adc
and
sub
inc
sbb
mov
clc
dec
mov
jecxz
popf
outsb
add
sete
jne
push
enter
pop
daa
dec
inc
ret
add
push
sbb
add
filds
push
jg
xor
push
repnz
addl
mov
push
add
dec
xchg
inc
loope
push
and
aad
dec
mov
sub
shrb
and
loopne
pusha
jge
xchg
mov
dec
or
cmpl
add
je
xor
or
ret
gs
and
stos
shl
stos
sub
imul
call
add
bswap
push
lock
pop
push
sbb
mov
push
outsl
and
lret
stos
adc
daa
cmc
push
xchg
inc
pop
push
push
sub
dec
pop
inc
mov
mov
mov
adc
dec
adc
jne
jb
push
sbb
fs
jo
bound
pop
jmp
sub
es
insb
repnz
cmp
or
scas
xchg
xor
add
mov
push
pop
mov
rolb
jmp
mov
mov
mov
pop
into
mov
mov
inc
out
mov
mov
loope
inc
inc
jle
xor
add
je
pusha
push
mov
idivl
movzwl
popa
mov
mov
pop
dec
or
daa
jo
outsb
loope
dec
test
mov
fldcw
sbb
xor
cmp
mov
mov
test
and
push
out
push
fs
loope
pop
shlb
rol
pop
sub
pop
pop
insb
and
push
test
xor
mov
aaa
xlat
icebp
in
or
mov
sti
or
ss
add
sbb
mov
push
mov
push
pop
lods
ja
shlb
inc
ret
stos
dec
xrelease
push
push
sub
mov
xchg
test
loopne
xor
mov
pop
push
xor
loope
sub
cmp
fdivrl
xchg
mov
and
ss
mov
mov
test
xchg
push
fidivrl
mov
mov
inc
add
push
inc
adc
dec
popa
add
test
inc
movsb
movl
ja
out
in
add
mov
sahf
sub
mov
test
jno
scas
and
daa
outsl
lods
add
js
mov
mov
outsl
mov
lds
leave
ret
push
jmp
fmulp
push
push
mov
movsb
inc
out
pop
daa
push
push
popa
ret
inc
add
mov
lret
push
es
into
lock
out
cmpsl
push
adc
shll
sbb
aaa
dec
shll
or
clc
cmp
jae
push
push
pusha
mov
add
cwtl
shl
and
jbe
pusha
es
sub
push
add
cmpsl
push
pop
push
add
cmp
sti
pop
and
dec
cmp
dec
hlt
jge
mov
or
mov
add
mov
outsb
test
ja
mov
repz
pop
sbbb
jmp
xor
ljmp
inc
cwtl
push
iret
pusha
pop
test
jecxz
or
test
jl
mov
cmp
jg
loope
shl
jge
push
push
lahf
add
push
jmp
fbstp
pop
mov
hlt
mov
adc
out
and
xor
adc
iret
mov
xchg
pop
mov
sub
rcll
mov
or
add
xor
add
pop
xchg
mov
nop
or
shl
jno
inc
adc
jnp
scas
jae
pop
mov
fsubrl
add
jge
xorb
inc
or
rcr
pop
push
sbb
ret
mov
jmp
jle
push
cmpsb
mov
aad
and
clc
clc
bound
pop
push
movb
clc
jb
and
xor
inc
xlat
int
push
cmpsb
cmp
sbb
xchg
jge
or
mov
jo
cli
cmp
mov
ljmp
pop
lock
cltd
inc
js
add
sub
adc
jle
cmp
dec
or
fsubs
or
sbb
sahf
aam
xchg
sbb
push
inc
jp
mov
pop
push
ds
and
jns
or
std
or
push
or
and
pop
hlt
mov
pop
sbb
add
mov
mov
push
fnsave
into
aam
mov
das
andl
fldenv
es
or
lock
movsb
jb
lea
aam
fidivl
sti
inc
jmp
stos
mov
movsb
scas
sub
cmp
fimuls
mov
jmp
dec
xor
cmp
inc
jae
stos
push
sbb
xor
pcmpeqw
adc
shufps
ret
add
push
adc
xchg
pop
mov
in
scas
scas
push
cmp
outsb
push
mov
cs
mov
outsb
or
add
jp
nop
xor
and
cli
test
mov
pop
adc
inc
push
or
adc
adc
popf
mov
push
xchg
fs
cltd
out
ret
adc
adc
scas
test
icebp
lcall
cmp
xor
or
inc
cli
pop
jg
test
mov
movsb
mov
in
sbbb
stos
test
or
jle
mov
xor
xor
inc
pop
dec
jne
jmp
jne
pusha
xchg
adc
push
push
push
scas
test
imul
mov
cld
xchg
loopne
add
stc
fwait
in
in
cmpb
inc
test
loope
mov
mov
hlt
inc
je
push
mov
jmp
push
jbe
lods
or
sub
or
in
pop
adc
ret
dec
mov
jne
mov
cmpsb
cmp
jl
adc
lret
push
xchg
jae
std
and
sbb
mov
sbb
and
popa
test
push
xchg
shrb
test
je
repz
sbb
add
push
cmp
xchg
nop
and
leave
cmp
add
sub
sbb
hlt
push
ss
sub
ret
dec
mov
enter
pop
popf
pop
pop
sbb
mov
push
jbe
inc
hlt
cli
ret
test
lock
cwtl
adc
and
arpl
popf
push
int
call
mov
add
mov
push
pop
stos
enter
out
aas
jno
pop
dec
lcall
in
jne
sbb
cmp
in
gs
mov
sbb
jmp
fists
add
adc
adc
mov
scas
es
hlt
inc
prefetchwt1
movsb
in
sahf
sbb
sbb
leave
inc
jb
mov
push
mov
lods
or
in
xchg
lods
xor
xchg
popa
jo
in
pop
pop
lock
pusha
cmc
jmp
fildl
out
cld
popf
pusha
fistl
sbb
jecxz
mov
adc
imul
dec
or
rolb
movsl
add
or
cmc
or
lcall
mov
enter
mov
pop
jmp
jmp
imul
mov
pop
ja
sub
adc
and
push
add
jp
test
push
mov
loopne
or
test
insb
aaa
sub
mov
pop
pop
ss
xor
fucompp
xchg
or
mov
test
add
stos
cltd
mov
fildl
pop
jle
xlat
cld
add
outsl
ds
call
js
shlb
add
push
xor
xor
jne
xchg
aam
pop
mov
add
arpl
leave
lcall
ljmp
movsl
lock
icebp
imul
jmp
push
loopne
dec
jge
jno
mov
mov
pop
mov
add
jo
push
pushf
mov
dec
adc
and
or
or
loopne
push
popa
loopne
stos
inc
arpl
movsb
xchg
add
out
add
pop
pop
cmpsl
je
ficomps
xor
add
mov
inc
pop
mov
movsl
test
sti
aam
and
sbb
aas
insb
imul
jo
jae
pop
fcom
adc
mov
call
push
loop
and
in
push
adc
add
jne
popa
std
repz
cmc
xor
xchg
loopne
jno
lret
loopne
rorl
sbb
inc
shlb
mov
add
mov
sub
ficomps
or
fmuls
je
or
xor
add
jmp
xchg
das
inc
jl
in
and
mov
rorb
jne
adc
hlt
or
fldcw
stos
aaa
daa
cmp
add
pop
leave
pop
push
lea
js
push
sbb
or
push
xor
or
inc
xchg
rorl
push
mov
push
inc
mov
lock
pop
push
and
ds
push
push
xor
clc
cmpxchg
sub
subl
int
outsb
mov
inc
inc
sbb
add
lea
and
in
add
adc
or
sbb
cmp
out
mov
dec
jmp
mov
imul
jne
xor
push
push
mov
stos
or
cld
and
push
sub
mov
pop
inc
ficoms
popa
pusha
cmpsb
cli
clc
mov
mov
mov
or
or
cmp
or
push
add
fiaddl
push
mov
cld
sub
mov
imul
jo
fimuls
loopne
jg
adc
lock
aaa
aaa
aam
call
loop
pop
inc
lods
lods
pop
hlt
shr
sbb
push
sub
sub
add
iret
xchg
add
push
xlat
jecxz
into
out
cmp
or
mov
adc
je
or
imul
mov
shll
inc
inc
hlt
addl
jo
cmpb
dec
jmp
pop
pop
pop
push
cwtl
hlt
adc
dec
mov
mov
push
inc
roll
rclb
sub
adcb
sbb
outsb
pop
adc
into
pop
jmp
inc
xchg
mov
mov
cmp
push
insb
into
lods
mov
push
movsb
test
out
xor
add
sub
dec
pop
add
push
mov
push
lcall
mov
std
or
cmp
je
sbb
adc
push
push
sbb
mov
pop
lret
inc
stos
aad
cmp
mov
bound
pop
and
jp
dec
test
fnsave
jl
loope
push
movsb
push
push
sub
insb
jnp
outsl
mov
sub
adc
nop
push
ljmp
cmp
push
nop
xchg
iret
popa
sub
jecxz
push
or
dec
imul
cmp
test
or
mov
mov
adc
incl
shll
push
cld
push
outsb
outsb
mov
xchg
cmp
cmp
sub
push
sbb
mov
xchg
repnz
jnp
dec
adc
sub
movlps
cld
sarb
data16
dec
lret
mov
xlat
push
aas
push
adc
lods
push
jns
xchg
cmp
xchg
xor
mov
inc
dec
fldt
call
clc
add
hlt
push
in
mov
in
lods
jbe
inc
mov
es
mov
neg
push
add
test
cli
frstor
pop
in
jl
ret
mov
sbb
push
ljmp
sbb
and
test
ja
setne
jbe
movsl
push
push
xor
cmp
push
push
cmp
je
fcmovbe
push
push
xchg
push
push
add
test
ss
mov
adc
fdivrs
fnsave
push
aas
sub
add
inc
mov
xchg
push
xchg
outsb
mov
jmp
dec
lods
cs
mov
mov
scas
xchg
inc
je
jns
int3
testb
test
loopne
add
imul
cli
rcr
shll
push
adc
into
gs
cltd
push
xchg
decb
jnp
andb
push
and
imul
xor
lods
cmp
shlb
pushf
push
arpl
ds
js
aad
cmp
pop
insb
pop
or
and
cmp
sub
inc
adc
xchg
clc
sub
adc
add
jb
pop
movsl
dec
sarl
nop
inc
sbb
mov
ss
std
mov
aam
pop
int
and
shl
jb,pn
js
ret
out
add
push
cmp
je
cmp
jne
inc
cmp
add
cmpsb
mov
stos
out
add
je
push
call
mov
gs
or
cmc
sbb
mov
or
sbb
pop
mov
cmp
xor
adc
push
mov
loope
das
pop
clc
jo
add
aad
ds
mov
adc
jmp
xor
sub
jne,pt
xchg
out
adc
mov
push
loop
and
mov
mov
or
cmpsl
jp
lcall
sbb
imul
add
jl
inc
sub
mov
and
mov
fdivl
leave
ret
push
mov
jo
imul
pop
incl
jb
cmp
ja
movb
imul
push
xor
dec
push
ret
xchg
push
call
cli
dec
je
add
push
sbb
pushf
mov
add
xor
push
pop
push
inc
adc
xlat
or
adcb
sbb
lret
jmp
jge
sbb
in
xor
filds
stos
pop
add
mov
cmp
gs
je
cmp
jne
mov
pop
out
shl
sbb
add
push
dec
inc
clc
inc
jg
fisubrs
jmp
dec
mov
dec
xor
push
movsb
jne
jmp
testb
xorb
mov
rcr
faddl
loop
cmp
jbe
std
notb
mov
dec
dec
inc
jmp
inc
add
mov
sub
add
hlt
ljmp
sub
lods
jo
ret
inc
or
jae
mov
clc
lahf
mov
outsl
add
cmp
cmp
je
mov
lea
or
jo
lock
and
data16
negb
dec
dec
xor
inc
cmpl
scas
shlb
cmp
jne
notb
cmp
outsb
xlat
nop
lea
addr16
je
fsubrl
sub
jb
or
ja
add
fsubrs
enter
push
jp
cmp
cld
add
push
cmp
stos
cmp
push
jp
xchg
jno
jmp
jno
femms
cmpsb
inc
sub
popa
loop
jne
sbb
push
test
mov
xor
add
mov
es
out
push
data16
jb
cmp
lcall
fsubr
adc
aas
les
jne
and
dec
hlt
add
std
data16
jns
test
jne
xor
xchg
cmp
push
test
incl
or
push
jae
mov
jmp
jmp
cwtl
xor
cld
jbe
test
mov
cs
lea
cld
pop
xor
test
push
add
xchg
xor
rolb
add
lret
cmp
jg
or
jge
ds
outsl
outsb
outsb
outsb
or
jle
es
sub
sub
and
xchg
pop
cmp
jl
pop
jle
pusha
call
mov
jp
jb
jbe
orl
push
adc
cld
cld
dec
or
je,pn
test
jne
je
outsb
and
add
je
je
hlt
aaa
daa
push
xor
add
add
inc
or
movsb
pop
mov
push
sub
push
and
push
or
mov
dec
push
push
mov
inc
and
testb
hlt
adc
jg
cmp
mov
add
pop
rorl
cmp
and
push
add
mov
mov
je
pop
push
movl
sub
mov
nop
int3
sub
pop
and
and
imul
fs
orl
add
lret
pop
push
mov
das
mov
jb
jbe
xor
pusha
sub
scas
jecxz
sbb
lea
add
pop
sub
sbb
inc
mov
movb
call
inc
lea
xchg
push
push
loop
pop
add
pop
jb
sbbl
clc
sub
pop
cmp
mov
cmp
or
loopne
inc
das
mov
dec
sub
decb
inc
lea
pop
cwtl
xor
lods
push
pusha
lock
lret
scas
mov
incl
pusha
cmp
push
mov
and
jae
jo
addl
cmp
je
test
adc
xor
push
call
sti
mov
loopne
push
jp
or
pop
mov
jne
pop
daa
dec
add
lret
push
arpl
or
add
xchg
ss
pop
xor
or
test
lock
pop
aam
xor
pop
test
jo
sbb
inc
mov
adc
add
sub
es
jl
add
cmp
add
test
data16
inc
pushf
cmp
mov
adcl
sbb
je
push
cmp
lock
popa
imul
push
xchg
add
hlt
inc
xchg
pop
adc
scas
xchg
aam
pusha
sub
rorl
mov
xor
loop
cmp
cmp
pusha
pusha
sti
pusha
jb
xor
mov
icebp
jo
push
or
dec
enter
adc
mov
xchg
push
inc
push
cltd
jmp
pushl
cwtl
outsb
shrb
cltd
push
add
fdivs
lods
pop
push
mov
push
add
and
and
sbb
xchg
sub
mov
lahf
jne
cmp
and
addb
and
xor
xchg
xchg
sbb
mov
ja
das
or
jne
iret
sbb
inc
sbb
mov
cwtl
rorl
or
and
cmp
and
and
and
mov
bound
call
jle
setne
ret
loopne
inc
clc
mov
rorb
aam
call
sub
xor
jmp
in
mov
xor
ljmp
in
es
add
xor
push
shlb
sub
mov
cmp
jne
cmp
push
fdivl
jne
mov
je
lods
cmp
jnp
das
movl
cmp
das
bound
add
bound
movb
orl
mov
pop
rcrl
out
js
mov
jb
fdivrs
inc
mov
sbb
loop
hlt
cmp
je
mov
or
inc
mov
inc
inc
inc
xchg
in
loope
jge
pop
or
adc
cmpsl
das
mov
mov
jne
cwtl
mov
jnp
mov
subl
aam
fsubr
cmp
in
test
sbb
rorb
push
cmp
fsubp
imul
jne
jl
sub
jae
xor
sbb
test
scas
push
inc
pushl
pop
cld
mov
jmp
pop
inc
cmp
je
lea
cmpb
cmp
in
mul
pop
jne
les
aam
adc
mov
pop
cmp
mov
mov
inc
jge
addb
fld1
orb
fiadds
outsb
jmp
mov
jne
fucom
loop
movsb
push
adc
pop
fdivs
jge
cmp
xchg
xchg
or
jo
and
sbb
out
add
add
dec
andl
add
ja
xchg
sbb
cmp
sub
lds
push
sbb
sti
popa
in
adc
pop
sbb
jp
mov
jecxz
pop
push
fnstsw
mov
cmp
orl
adc
add
int
insb
add
dec
mov
jne
lds
sbb
xlat
test
mov
sbb
cmp
or
out
mov
inc
data16
mov
or
and
mov
push
rcr
dec
push
push
push
sbb
sub
push
xor
push
push
jecxz
push
jo
push
das
mov
mov
xor
jmp
rclb
cmp
pop
ja
cmp
jbe
fdiv
xor
cmp
and
push
fidivs
mov
xchg
push
sub
xor
pop
xor
cmp
xchg
lret
in
cmp
fists
mov
adc
ret
xchg
mov
cmc
jnp
jbe
dec
lea
cwtl
push
in
or
in
inc
and
add
enter
and
ret
scas
data16
adc
ds
sbb
add
inc
std
aam
mov
pop
mov
push
jb
jl
lret
loop
enter
push
mov
push
fimull
gs
push
push
jo
aas
push
push
pop
idiv
jnp
sahf
insl
pusha
outsl
imul
mov
in
or
insb
add
ret
push
jnp
or
or
sub
in
dec
or
adc
loopne
lods
aaa
outsl
sbb
mov
dec
movl
mov
sbb
js
or
ja
sub
loopne
mov
and
inc
inc
cmp
push
jl
inc
repnz
hlt
sbb
cmp
faddp
mov
mov
add
lcall
dec
js
addr16
sarl
jmp
pushl
mov
push
push
loopne
in
jne
sub
dec
xor
test
xchg
cli
int
fadds
add
add
push
mov
js
hlt
cmp
jp
or
pop
adc
inc
dec
rclb
jnp
orb
in
adc
dec
jge
adc
fucomi
ud0
add
mov
pop
jg
fisubrs
aad
fmuls
addr16
xor
rcr
pusha
lods
ret
jb
cmp
sbbb
jmp
dec
bound
xchg
je
in
loopne
pop
and
cmp
mov
dec
add
sbb
push
pusha
enter
rclb
cmp
fidivl
hlt
in
sub
xor
js
mov
out
push
lret
in
negl
push
xchg
out
cmp
pop
into
xchg
mov
jmp
pmuludq
aam
sub
xchg
inc
mov
add
xor
in
pop
movsl
sub
mov
sbb
push
adc
pop
sbb
clc
idiv
push
ret
push
adc
gs
roll
add
mov
sub
or
mov
push
sbb
or
fsubl
stos
or
or
ret
and
lahf
sbbb
cmp
rol
adcb
pop
push
adcb
mov
into
inc
pop
jae
into
iret
and
pop
rcr
add
sbb
and
adc
mov
stc
bound
inc
push
fcoml
jl
cld
or
push
fnsave
push
cltd
inc
mov
test
scas
dec
cld
fidivl
js
mov
sub
pushf
or
int3
push
lods
sub
pop
pop
sbb
xor
rorb
loop
jmp
sbb
and
and
push
pop
mov
mov
int3
movl
jbe
pusha
inc
aam
dec
xor
pop
imul
push
adc
dec
sbb
push
xor
cmp
dec
stos
imul
cmp
xchg
pop
mov
clc
push
idiv
and
movl
sbb
inc
js
add
dec
push
std
add
pop
sarb
pop
leave
sub
push
adc
xchg
adc
rcl
jne
ja
pop
bound
cmpsl
pop
rorl
es
add
inc
xor
mov
xchg
xchg
sub
or
and
mov
sti
lahf
pop
faddl
and
xor
shrl
in
lock
movsl
add
mov
out
pop
shrb
inc
dec
idiv
cmp
pop
ret
push
or
mov
xchg
andl
dec
mov
jns
sbb
jecxz
dec
cmp
jecxz
cmp
mov
add
push
sbb
ret
dec
fisttps
into
test
mov
decb
push
in
mov
dec
inc
out
testl
push
mov
test
cmp
mov
adc
adc
inc
inc
cvtps2pd
imul
push
shrb
std
adc
pusha
or
mov
sbb
loope
and
insl
xchg
gs
pushf
int3
add
adc
addr16
orl
mov
xchg
xchg
stos
xor
shll
cmp
in
clc
xchg
xchg
lret
sbb
lret
mov
inc
cwtl
push
push
adc
loopne
pop
movsl
dec
and
inc
dec
and
inc
xor
lea
mov
int3
jecxz
xor
dec
adc
pop
cmp
and
jb
mov
test
push
mov
xor
adc
add
loopne
add
push
and
movsb
sti
repz
inc
push
insl
inc
dec
icebp
push
jb
inc
push
or
rcr
cmpsl
clc
cmp
xchg
mov
jecxz
data16
push
pop
cmp
push
mov
xchg
push
mov
pop
pop
mov
jge
iret
enter
shrb
lea
mov
push
mov
sbb
inc
popl
das
enter
or
pop
cmp
inc
stos
sbb
and
adc
call
sahf
cli
mov
icebp
mov
xchg
data16
int3
sar
out
and
xchg
dec
push
jae
minps
cwtl
daa
adc
movups
pop
es
lcall
adc
std
or
inc
popa
test
cwtl
mov
pop
neg
pop
or
adc
jnp
mov
fimull
pop
mov
fwait
inc
cmp
pop
mov
pop
mov
jecxz
xchg
stos
xchg
cmc
push
mov
cmp
cmp
jne
push
repz
push
xchg
roll
jb
sahf
push
sub
or
jmp
or
cmpsb
inc
push
aad
add
or
cmpsl
cmp
xchg
adc
cmp
inc
sub
nop
das
roll
dec
bound
xor
or
lock
xor
cmp
scas
jle
pop
out
shll
repnz
xchg
jb
testl
dec
pop
cmpsb
jbe
mov
outsl
adc
mov
xlat
xchg
pushf
adc
push
inc
aam
sub
and
ja
jecxz
adc
div
cmp
subl
aad
add
mov
nop
push
icebp
pop
adc
push
popa
push
and
icebp
cmp
jne
sub
adc
out
in
xor
pop
dec
or
lods
pusha
adc
and
or
xor
cwtl
pop
or
xor
dec
push
pop
mov
pop
loope
mov
add
inc
sbb
hlt
mov
adc
dec
pop
test
push
aas
add
xchg
cmp
push
out
cmp
pop
mov
mov
insl
es
add
mov
sbb
adcl
and
add
push
call
movsb
sbb
rcll
sub
inc
rol
or
les
xchg
adc
sbb
xchg
adc
inc
add
test
pop
rolb
cmc
pop
test
jg
psrad
and
add
dec
push
jns
sbb
mov
sub
sbb
inc
fst
and
pop
js
into
icebp
movsb
sbbb
shll
testb
jns,pn
pop
pop
mov
int
movb
jmp
jnp
adc
test
push
push
and
in
xchg
jmp
fadds
push
xchg
adc
es
sbb
loope
leave
dec
sub
or
adc
sahf
push
call
notb
jo
xchg
or
dec
mov
add
add
cld
lea
or
xor
cmpsl
cmp
push
push
je
fs
xor
push
cmp
inc
jo
and
insl
iret
xor
sbb
mov
scas
cltd
xchg
xor
push
test
push
adc
pop
push
add
sub
sub
jne
stc
xchg
push
cmp
cmp
cmp
sub
mov
sub
xchg
lock
ljmp
and
ljmp
xlat
add
inc
pop
daa
jne
addr16
xor
sub
outsb
or
push
push
jmp
sbb
popa
ret
xchg
or
scas
fs
sub
adc
jmp
mov
jmp
dec
sub
or
sbb
add
cmp
inc
ljmp
orl
or
inc
jecxz
stos
xchg
adc
nop
or
ds
inc
mov
cmpsl
inc
xor
mov
aas
add
cmp
add
jnp
shll
incl
and
pop
push
hlt
xchg
add
sub
je
shrl
add
fcmovu
ljmp
cld
push
add
push
jns
push
out
push
xor
fmull
aas
fsubs
test
sbb
cs
ret
cmp
mov
cmp
sbb
xor
add
icebp
xor
adcl
or
add
xor
mov
pop
push
mov
out
xor
add
sub
clc
ja
cmp
jne
mov
jmp
loop
orb
ds
icebp
and
popf
xchg
pop
pop
xchg
sahf
add
nop
ljmp
sbb
xchg
dec
andb
xor
push
or
cmp
enter
cmp
adc
push
pop
dec
xorl
jp
repnz
scas
dec
xor
xor
leave
clc
sbb
sub
cmp
aas
mov
sbb
push
mov
pop
or
loopne
clc
mov
push
push
add
cmp
adc
or
sub
fisttpl
cmp
jne
push
inc
clc
and
loope
fisttps
mov
out
scas
jl
or
or
jmp
mov
rorb
dec
mov
mov
outsb
pop
mov
inc
sahf
pop
test
popa
leave
push
repnz
mov
je
jl
popf
fdivs
xor
pushf
cmp
xchg
iret
in
ss
push
shlb
xor
add
or
fwait
or
xchg
or
lcall
fwait
jne
call
in
fisttps
push
call
mov
cmp
das
pop
mov
dec
and
imull
pop
push
stos
xchg
jb
inc
jno
imul
add
jbe
rclb
bound
push
push
mov
xor
lret
sbb
fsubrl
adc
mov
push
es
lcall
or
dec
scas
test
faddl
xchg
pusha
adc
jmp
push
shlb
or
or
bswap
mov
xchg
cmp
jno
jmp
sub
mov
pop
mov
movsb
jns
xchg
or
mov
sbb
gs
sti
fdivs
scas
sub
mov
jo
sub
xlat
adc
shrl
aam
mov
and
cmpsl
sbb
or
lods
inc
jne
dec
ror
or
xchg
or
aaa
addb
negb
and
loopne
mov
mov
nop
mov
pop
aas
lret
sub
jp
inc
add
xlat
dec
in
xor
xor
test
mov
leave
mov
push
sbb
insb
inc
dec
loope
add
xchg
int
add
and
lret
mov
mov
sub
adcl
mov
pop
add
sbb
icebp
cmp
punpckhdq
int
inc
movsb
loopne
insl
rep
sub
inc
mov
sub
out
add
push
mov
or
inc
cmp
dec
xchg
push
inc
pop
inc
add
call
push
xchg
sub
pop
push
in
sti
dec
xchg
addr16
xor
or
sub
sbb
xor
dec
dec
cmc
sbb
adc
xchg
popa
insl
mov
xor
or
push
jle
fisttps
add
pop
movsl
cmp
sahf
push
push
push
adc
push
mov
jmp
and
xor
add
jl
shlb
xchg
nop
pop
push
in
jmp
cs
int3
and
int
push
push
lods
adc
scas
nop
lock
pop
out
fiadds
decb
lea
push
xchg
adc
and
xor
push
nop
lcall
mov
adc
adc
lods
cmpsb
pop
add
mov
testb
inc
mov
data16
inc
inc
hlt
add
mov
aam
ljmp
stc
sahf
add
adc
pushf
add
dec
sbb
mov
xchg
jge
lea
fcom
or
mov
sarb
iret
and
mov
add
or
push
push
xchg
cltd
sti
adcl
nop
dec
jmp
cli
sbb
inc
sbbl
dec
pop
movsb
jne
ret
sbb
rclb
sarl
push
test
xchg
jmp
push
je
xor
mov
sbb
adc
pushfw
ficoms
loopne
jo
pusha
xor
ficomps
je
sub
mov
int
pop
pushf
push
jp
push
jmp
push
lcall
pop
mov
xor
sub
mov
mov
das
ss
adc
mov
xlat
decl
adc
push
inc
push
mov
bound
dec
lret
jnp
addb
push
or
data16
pop
cmp
xlat
and
jns
xor
cmpsb
arpl
or
frstor
mov
pop
add
sub
fmuls
sbb
and
pop
cmp
test
cmp
or
add
or
add
lock
stos
xchg
cmp
push
mov
adc
cmpsb
dec
mov
add
push
jge
jbe
fwait
bound
cmp
inc
in
aad
pop
ss
cmp
jne
push
movb
outsl
dec
imul
inc
or
xor
sbb
inc
clc
add
or
aas
jns
jle
inc
inc
imul
sbb
dec
js
lea
lock
stos
test
popa
jno
cmp
je
xor
fdivp
or
leave
xchg
push
push
push
sub
sub
mov
popa
dec
mov
and
push
sbb
mov
xchg
inc
nop
and
jge
pusha
mov
jo
ret
psllq
add
in
mov
push
test
jge
add
inc
push
fisttpll
ret
test
mov
sub
ret
adc
je
cs
cmp
in
imul
dec
mov
mov
movb
mov
xchg
hlt
je
sub
sti
jg
outsb
xchg
add
enter
iret
jbe
mov
mov
inc
mov
aaa
push
pop
roll
push
lahf
repnz
call
mov
cmp
into
sub
push
sbb
adc
add
or
dec
dec
lea
lea
and
inc
pop
in
mov
sbb
push
rorb
mov
adc
sbb
repnz
cwtl
lea
inc
push
popl
ja
jl
mov
cs
call
push
cmp
cmp
addr16
push
jle
mov
ret
nop
test
js
loopne
lds
pusha
movsl
cs
fadds
movsl
cwtl
sub
push
sbb
adc
ss
bound
sbb
movsb
pushf
stos
nop
add
je
in
inc
scas
push
xlat
imul
scas
addr16
xor
add
insb
mov
sahf
jnp
add
outsb
lcall
icebp
fcomp
mov
push
loop
ds
jl
push
sbb
xlat
icebp
push
sub
and
and
stc
jge
xor
test
sahf
filds
add
mov
or
cwtl
sbb
sbb
stos
push
cmp
sbb
outsb
mov
arpl
pop
jae
bound
pop
jbe
mov
mov
fsubs
dec
mov
push
std
add
mov
mov
pop
mov
mov
ret
lea
cmc
out
movsl
outsl
mov
flds
push
pop
fstps
add
mov
and
dec
sbb
xchg
adc
mov
adc
dec
imul
adc
popa
repnz
lcall
movb
insl
fstps
xchg
dec
mov
mov
add
je
testb
popf
lock
ja
int
inc
inc
cmp
int
popa
xorb
ret
aad
cmp
call
cld
adc
adc
mov
push
aad
adc
inc
dec
test
mov
in
adc
rolb
outsl
sub
sub
mov
sbb
inc
adc
pop
test
test
sub
es
sbb
mov
or
jb
and
xor
push
inc
pop
fdivrl
mov
sbb
dec
pop
notb
jle
andl
add
push
int
das
or
add
sar
push
je
pop
mov
push
xor
sbbl
dec
rcll
push
sbb
cmp
dec
mov
out
xorb
mov
xlat
movsb
push
out
inc
jbe
push
ret
jo
dec
sub
xor
inc
mov
adc
push
adc
in
pop
push
rol
sbb
sbb
sbb
push
cmp
mov
xorl
js
jb
inc
mov
in
add
shlb
pop
jp
sahf
sbb
xor
mov
loope
xchg
dec
push
fistpl
imul
xor
movsl
clc
or
mov
lods
pop
xor
xor
add
pushf
mov
xor
or
cmp
popl
xor
jmp
mov
rclb
das
addb
call
mov
push
xchg
sbb
xor
add
adc
sbb
adc
xor
mov
outsb
andl
jmp
or
call
inc
lahf
int
and
vpmovsqw
loop
popf
and
jle
lods
mov
adc
pop
fucom
push
cmp
jmp
mov
test
mov
std
jecxz
andl
xor
cmp
pop
jl
cmp
add
add
sbb
stos
hlt
dec
fcoml
jmp
push
sbb
sub
push
je
or
xchg
mov
sahf
ljmp
xor
pop
mov
ret
push
add
cld
rolb
imull
cmp
xor
call
sub
into
in
and
mov
mov
cmp
imul
mov
inc
lods
push
push
testb
cmp
jge
test
lahf
fmuls
jae
or
pop
jno
or
rclb
loop
or
pop
mov
je
test
imul
add
or
iret
adc
push
mov
ds
xchg
cmp
jp
pushf
adc
xchg
mov
cwtl
pop
push
push
or
and
clc
dec
mov
inc
xchg
xor
inc
jle
jg
mov
push
push
aas
les
mov
pop
jbe
ja
insb
jmp
xchg
pushf
xor
or
sub
sub
push
clc
mov
jecxz
or
pop
push
mov
push
xchg
nop
mov
mov
add
rclb
pop
inc
ljmpw
pop
sbb
push
push
icebp
in
push
mov
mov
adc
loope
fiadds
pop
pop
sti
sub
and
leave
testb
rclb
pop
pop
dec
fnstsw
shlb
stos
push
jo
add
lcall
incl
mov
or
je
xor
jle
jbe
push
xor
test
cs
mov
mov
adc
inc
repnz
inc
cmp
jb
stos
fs
pop
push
test
data16
cmp
inc
inc
push
push
inc
pop
mov
xchg
xor
nop
push
mov
insb
jge
jmp
sub
dec
cmpsb
jns
sbb
jmp
jne
js
dec
test
mov
inc
push
xorl
pop
sbb
xor
sub
insl
push
dec
mov
adc
sub
test
cmp
jae
xor
or
pop
sbb
scas
and
adc
cwtl
cltd
shlb
lret
inc
nop
or
mov
inc
mov
jg
sbb
push
push
mov
pop
or
adc
popa
test
popf
pop
shlb
scas
ljmp
mov
xor
icebp
and
lock
mov
orl
sbb
ds
sub
mov
ficoml
mov
and
inc
loopne
mov
or
inc
loop
popf
in
cmpsl
inc
mov
xor
or
jno
and
push
stc
mov
imul
in
fwait
icebp
ror
mov
or
inc
adc
xchg
clc
add
push
test
shrb
test
xchg
add
and
inc
mov
jmp
aaa
lret
mov
lea
leave
scas
cmp
xchg
add
push
inc
xor
or
cli
push
int3
push
cmp
jae
je
pop
add
adc
push
xor
pop
push
jge
cwtl
sti
hlt
in
mov
push
adc
scas
cmpsl
add
cld
push
jmp
mov
xor
inc
xor
cmp
std
fmuls
dec
mov
mov
and
mov
or
icebp
adc
push
divl
adc
loop
call
mov
xor
fistpll
cs
ja
lea
orl
daa
mov
lea
push
sbb
lret
or
mov
aad
lret
fadd
xchg
loop
push
sbb
push
data16
xor
and
ja
jge
and
push
sbb
mov
or
sbb
rolb
jmp
sbb
loop
stos
roll
push
out
iret
cmpsb
or
into
rorb
add
jle
sti
imul
pop
dec
inc
cmp
or
mov
jnp
pusha
jne
push
dec
and
arpl
jnp
dec
push
aam
in
mov
ss
jne
mov
pcmpgtw
call
cli
xlat
xor
fs
or
insb
cmp
rcll
push
stos
lret
push
cltd
imul
push
xchg
xchg
pop
ljmp
rclb
aas
mov
mov
or
add
movlps
or
add
mov
xor
mov
ljmp
sarb
jne
inc
lods
sbb
pusha
sti
pop
dec
adc
scas
in
add
sub
push
push
cmp
je
mov
into
push
mov
daa
xor
movsl
dec
push
and
mov
or
ret
pshufw
js
jle
or
jmp
ret
cmp
daa
adc
xchg
lock
xchg
fisubs
imul
add
add
in
dec
pop
cld
test
out
mov
inc
or
xor
sbb
dec
je
dec
jl
popa
in
scas
pop
or
js
xor
addr16
mov
lea
orl
adc
mov
add
je
xchg
daa
out
int3
adc
xchg
stc
mov
cmp
cwtl
lea
jmp
cmpl
or
cmp
jbe
pushf
in
enter
mov
or
inc
and
clc
sub
ret
ljmp
sbb
shrb
pop
and
sbb
mov
sbb
mov
cmpsl
add
inc
jo
cli
push
xchg
fs
in
xchg
scas
insl
movsb
or
mov
xor
shr
xor
adc
fsubrs
and
movsl
mov
pop
cli
dec
pop
add
orb
xor
add
pushf
addl
sbb
shll
and
cmp
sub
mov
mov
add
lock
in
pop
data16
cmp
mov
xchg
mov
or
sbb
fcomps
sbb
and
les
pop
add
and
add
nop
or
mov
jo
loopne
mov
sbb
cmp
mov
sti
test
scas
pop
jge
into
shlb
and
pop
push
mov
pop
out
bound
in
shrl
inc
mov
mov
and
push
fsub
push
and
or
loopne
int3
mov
enter
push
je
cmp
or
inc
loopne
test
fistl
mov
mov
or
test
push
xchg
push
add
out
outsb
xchg
pop
dec
xchg
call
js
out
stos
ja
jb
sub
push
or
ret
add
cmpsb
sub
fwait
mov
xor
xlat
movsb
push
cmp
add
inc
lods
insb
hlt
fidivl
lea
mov
jp
and
sub
sbb
mov
and
xchg
mov
and
lock
nop
xchg
sbb
add
xchg
adc
cmp
cmpb
cmp
inc
xor
pop
add
push
push
call
adc
jne
sub
adc
dec
xor
sbb
adc
cmp
test
sahf
jle
popa
test
data16
sbb
xchg
lea
lods
pusha
mov
adc
lea
clc
sbb
inc
jns
pop
mov
or
rorb
add
ss
push
hlt
orl
loope
es
push
jecxz
sti
push
jmp
in
xchg
mov
jnp
cmp
aam
ljmp
inc
cld
popf
shr
cmp
push
mov
mov
pop
or
dec
dec
dec
clc
jne
mov
push
test
cmp
dec
or
sub
cmp
fisubrl
lea
sub
shlb
pop
add
xchg
nop
test
xchg
dec
xchg
sbb
xchg
xchg
clc
hlt
hlt
jns
jnp
and
inc
pop
lea
fmuls
pop
pop
mov
pusha
addb
fidivrl
cmp
frstor
int3
jae
mov
subb
hlt
jne
push
mov
dec
fistl
cld
inc
jo
loopne,pt
fnstenv
mov
lods
push
mov
sub
and
and
jo
add
lock
cld
clc
pushl
cmp
add
mov
xchg
cmp
rorl
pop
sub
les
daa
xor
xchg
or
xor
add
xchg
pop
add
adc
loopne
cmp
push
mov
add
or
and
je
mov
dec
pop
jo
rorb
lds
insb
imul
lods
and
outsb
mov
nop
pop
mov
xchg
xchg
adc
inc
adc
test
pop
ja
ret
sbb
fld
add
inc
shlb
cmpsl
cmp
jle
in
fwait
jne
jne
or
add
mov
jbe
xor
adc
add
xor
dec
cmpl
jne
cmp
cli
mov
push
cmp
adc
adc
jecxz
loopne
jbe
push
sbb
dec
hlt
rep
cmp
nop
adc
pop
jne
lea
call
pop
into
out
add
imul
xor
jbe
jne
sub
das
push
jmp
fcmovb
lea
data16
jne
push
push
mov
and
clc
dec
jnp
fstpt
add
jo
inc
notb
push
scas
sbb
loopne
js
or
in
lods
push
cmpsl
movsl
lods
add
add
bound
add
add
xor
call
mov
inc
adc
or
push
movzbl
jno
adc
or
and
push
dec
xchg
mov
or
loope
and
in
mov
pop
cmp
mov
cmp
int3
cmp
mov
push
push
iret
adc
mov
mul
seto
and
dec
aam
adc
enter
mov
jo
pop
mov
adc
mov
sub
push
ljmp
mov
inc
std
xlat
xlat
push
cmp
jbe
xor
push
clc
add
lret
je
xchg
ljmp
pop
or
mov
pop
test
jecxz
negb
sbb
mov
push
jp
data16
mov
xchg
mov
call
add
add
fadds
dec
das
insb
flds
fsubs
add
jb
adc
inc
sbb
push
sbb
adc
data16
xorl
inc
inc
popf
push
mov
cld
lock
cs
mov
pop
mov
sbb
shll
xchg
xor
adc
push
push
jns
xchg
or
in
pusha
or
pushf
stos
xor
lret
pop
push
test
scas
rcrl
jo
sub
mov
subb
inc
test
mov
sbb
mov
test
mov
and
ljmp
lock
and
fsubr
cmpsb
out
test
sarl
cmpb
push
mov
adc
cmpsb
das
push
addb
jl
jmp
or
mov
pop
enter
mov
mov
add
enter
rorb
shll
lret
sub
out
pop
jae
sub
mov
push
psubsw
xchg
les
xor
lock
sbbb
les
into
jmp
sbb
or
xchg
xchg
xchg
mov
cmp
sub
inc
cmp
jae
inc
xor
dec
xchg
pushf
mov
xchg
push
push
sub
je
push
or
clc
and
cs
lods
aas
jle
mov
or
inc
test
jb
and
in
sub
lock
push
add
add
cmp
adc
je
pop
mov
mov
jmp
daa
mov
stos
mov
add
shrb
xor
push
mov
or
in
and
push
pop
int3
sti
std
jb
dec
jp
lea
sahf
mov
pusha
inc
and
push
pop
push
inc
add
pop
test
adc
adc
add
add
adc
daa
nop
and
movl
scas
jne
jp
cmpsb
sub
xchg
add
lock
sbb
jl
and
sub
les
xor
int
jp
push
and
arpl
add
xchg
loopne
push
cli
scas
adc
inc
decb
mov
cmp
test
add
sbb
or
jmp
lea
jbe
ljmp
call
xor
sbb
adc
call
insb
jne
in
in
jl
cmp
jmp
shll
pop
clc
mov
or
call
adc
enter
inc
jl
pop
popa
push
mov
xchg
mov
out
out
outsl
pusha
dec
rorb
clc
add
rcr
xor
jno
repnz
push
or
mov
add
roll
repz
enter
sbb
or
mov
lcall
je
sti
ret
in
jecxz
push
or
and
test
jl
std
xor
lea
data16
jbe
popf
rol
test
jmp
pushf
fmuls
or
std
jo
cmp
test
jne
negl
sub
pushl
sub
lods
or
rorl
xorl
jo
test
cmpsl
mov
jb
cltd
shlb
push
and
movsl
pop
xchg
rorl
hlt
xchg
lahf
and
mov
mov
fimull
fimull
insb
in
mov
ljmp
xor
test
data16
mov
push
ja
pop
inc
call
and
jge
cmpsl
adc
xchg
mov
ret
add
lret
jb
sbb
imulb
roll
int
dec
add
sbb
lea
sti
dec
loopne
xlat
adc
gs
sahf
pop
or
cmp
add
add
cli
xor
movsl
or
xor
sub
ja
pop
add
or
mov
inc
dec
adc
push
lods
outsb
pop
mov
xchg
lods
mov
enter
das
jmp
push
push
push
lds
jbe
mov
orb
shrl
xchg
scas
lods
jnp
inc
cmpsb
and
imul
lcall
add
xchg
mov
cmpsl
mov
jmp
mov
lea
inc
dec
int3
cmp
jae
sub
loopne
adc
pop
sub
cs
adc
ljmp
iret
mov
cmc
xchg
rorb
fstpt
inc
es
pop
aad
cmp
fstpt
add
mov
mov
inc
inc
mov
xor
pop
adc
and
mov
pop
jmp
mov
nop
jae
xor
add
push
push
add
xchg
cmpsb
mov
jo
lea
sub
clc
lret
sub
int3
jge
incb
pushf
mov
add
add
cld
jb,pn
cmp
xor
mov
mov
scas
adc
addl
cmp
rorl
push
mov
and
add
add
sbb
repz
sbb
sbb
lea
lret
lds
inc
je
cmpsl
xchg
mov
je
mov
push
pop
icebp
int
push
mulb
cmpl
icebp
xchg
push
cltd
adc
adc
mov
or
lds
scas
lea
or
add
aad
add
jo
adc
adc
ret
cwtl
std
mov
and
push
dec
outsb
rorb
jbe
adc
sbb
lds
or
xor
pop
pushl
add
adc
jmp
cmpb
cmp
jno,pn
xchg
out
push
sbb
pop
repnz
mov
mov
fcoml
push
aam
cmp
js
jo
or
mov
push
out
out
or
xchg
aas
bnd
loop
fcmovb
mov
xchg
adc
cmpb
fidivs
ljmp
push
sub
movsl
or
add
mov
push
lods
mov
mov
push
hlt
dec
pop
ret
movsb
aam
or
or
mov
ds
daa
xchg
sbb
mov
test
push
sarb
cmp
push
cmp
jae
inc
jmp
push
or
mov
sti
sub
mov
xchg
out
jge
adc
jle
outsl
out
test
add
mov
push
mov
mov
ja
push
add
xchg
jnp
into
or
int
imul
pop
mov
push
ds
rclb
push
jo
jne
in
xor
xor
dec
push
jmp
ret
je
mov
mov
xor
xchg
negb
sbb
push
xchg
dec
stos
sub
addb
fisubrl
sbb
ficomps
pop
leave
subb
inc
or
mov
mov
push
or
or
and
and
outsb
push
ret
jae
xchg
add
mov
cld
xlat
or
cwtl
repnz
jb
or
xchg
ret
insb
loope
push
dec
jbe
xchg
outsb
test
pushl
mov
mov
je
mov
cli
fwait
push
jb
adc
ja
cmpb
push
push
dec
sbb
or
or
xor
sbb
adc
add
push
inc
mov
cmp
jb
inc
pop
aaa
mov
fadds
add
inc
add
test
and
push
pop
push
inc
or
add
mov
jbe
xor
mov
push
mov
sbb
fidivs
adc
jmp
mov
fcmovnu
insl
cli
adc
shlb
lea
cli
ja
cmpb
subl
ret
push
xor
inc
pop
push
sub
mov
into
mov
icebp
popa
or
mov
mov
lahf
ret
adc
sbb
je
push
xchg
push
addr16
popf
leave
cmpsb
imul
in
pusha
inc
pop
popf
aam
push
nop
test
pop
in
inc
ja
loopne
insl
pop
xor
aam
sbb
xor
or
sub
ljmp
repz
rolb
and
jmp
aad
lret
mov
mov
js
movsl
out
or
add
insl
data16
mov
cmp
jo
xchg
pop
push
or
mov
jne
inc
sti
insl
or
mov
dec
or
pop
push
es
add
xor
prefetch
xchg
pop
or
adc
mov
addl
es
add
add
mov
jnp
xor
mov
les
enter
dec
push
adc
jns
je
cmc
lods
int
ljmp
in
push
add
and
lods
in
jo
adc
inc
or
push
shrb
inc
stc
ds
xor
int
lock
dec
pop
cmpsb
push
or
cmp
out
xor
lahf
add
pop
or
lcall
sbb
loopne
cmp
fdivl
loopne
pop
addl
in
je
cs
mov
enter
push
push
unpcklps
clc
fisttps
or
aam
mov
adc
push
xchg
or
push
insb
movsb
ja
call
ret
aam
or
or
or
test
add
fs
push
js
jle
xchg
xorb
push
mov
pop
sub
adc
int
add
aam
in
lcall
and
add
xchg
pushl
pop
mov
gs
test
int3
shr
movsb
loopne
leave
adc
jno
sub
jne
faddl
cmpsb
xchg
fst
push
push
mov
aad
mov
sub
mov
mov
repnz
cmp
movsb
add
mov
sarl
dec
mov
clc
push
add
add
loopne
flds
imul
out
or
ret
aam
dec
pop
or
adc
in
test
cmpb
lock
pop
mov
movsl
xor
pop
and
or
insb
mov
dec
sahf
xchg
outsb
test
js
push
scas
in
jge
fs
adc
dec
sahf
xchg
nop
mov
daa
and
mov
xchg
sub
arpl
pop
icebp
popf
xchg
pop
adc
jge
push
sahf
push
jl
or
add
call
movsb
fisttpl
jmp
sbb
dec
pusha
mov
push
or
loop
xor
lcall
iret
xlat
cli
test
pushf
int3
inc
dec
sub
std
incb
sub
ret
push
push
and
xor
out
imul
sub
push
ret
and
je
jle
add
xchg
push
jb
pop
mov
pop
aas
test
into
aas
mov
inc
xlat
xor
movsl
mov
push
dec
push
bound
xchg
inc
daa
push
call
popa
xchg
add
mov
jmp
and
inc
xor
dec
sbb
outsb
inc
mov
pushl
add
jmp
xchg
fimuls
sahf
popf
xchg
fidivl
daa
push
mov
adc
aas
push
shlb
adc
pop
pop
push
mov
inc
cwtl
and
mov
daa
mov
hlt
cwtl
out
add
sbb
lods
lcall
sbbl
shrb
test
dec
mov
les
or
mov
mov
push
mov
mov
or
repnz
rolb
rorl
cld
adc
sub
popl
insb
aaa
lret
mov
and
lock
loop
add
sub
aam
mov
adc
pop
pushf
mov
in
mov
es
inc
sahf
imul
push
negl
xor
sbb
cmp
lods
loopne
les
loope
sub
rclb
add
in
jmp
sbb
fistl
xchg
pop
sub
ror
or
jle
adcl
or
xchg
lods
test
inc
inc
addr16
rorl
cmp
mov
push
jle
xchg
jle
je
cmpl
adc
cli
xchg
adc
fcmovu
cmpb
popf
and
push
aam
and
pop
push
inc
lea
pop
mov
add
xor
push
and
adc
test
push
or
in
inc
mov
cltd
pop
lock
std
iret
out
cmp
pop
add
mov
pushf
mov
cmp
push
les
xor
ja
or
cmp
lea
lock
arpl
sarb
iret
popf
cmp
orl
out
push
jbe
arpl
jns
push
add
sbb
add
psrad
idiv
and
add
mov
rcrb
adcb
add
std
adc
pop
adc
or
lret
jae
mov
lret
lock
test
add
add
push
test
sub
bound
test
popa
rcl
inc
shll
cmp
pop
mov
add
xchg
out
cld
lods
mov
push
mov
lods
dec
pop
xor
pushf
dec
or
fdivrl
or
pop
mov
jns
shrb
stos
xor
imul
xchg
fcompl
imul
cmp
lods
jb
daa
fsubp
das
js
add
xchg
adc
push
ja
hlt
sub
loope
push
mov
lea
ds
cmp
inc
cmp
pushf
add
cmp
pop
test
cmp
pop
mov
rorb
xor
dec
imul
lar
push
pop
imul
adc
mov
into
aaa
jl
and
in
mov
lea
popa
roll
sbb
dec
jp
add
sub
dec
mov
add
ret
ds
js
or
fldcw
pop
ret
push
aas
add
jp
popf
mov
nop
sub
lock
push
cwtl
dec
push
fdivrs
mov
cmp
and
add
mov
call
sbb
incl
xchg
mov
jecxz
or
or
or
mov
icebp
add
popa
sbb
mov
je
pop
rorl
mov
test
movsl
add
xchg
es
shlb
xor
xor
push
sbb
mov
call
cmp
jl
jne
aad
ss
jl
aaa
flds
rolb
xlat
dec
cwtl
dec
xor
mov
and
add
int3
inc
or
mov
unpckhps
and
mov
xchg
or
mov
mov
inc
adc
mov
fstps
jle
or
adc
je
outsl
jbe
dec
adc
jno
pop
rorb
or
idivl
xchg
pop
push
push
imul
aaa
das
jmp
dec
fisubrl
shlb
inc
sub
cmp
call
loopne
or
mov
push
xchg
jne
clc
fsubr
mov
cmpsl
test
add
sbb
xor
or
int
cmpl
add
add
popf
mov
roll
cmp
jge
jne
and
int
movsl
adcl
cmp
adc
xchg
mov
sahf
shr
aam
lds
adc
jle
adc
testl
popa
add
fwait
xchg
add
add
mov
mov
or
sbb
leave
add
loopne
test
stc
xchg
out
subb
sbb
sti
lret
sub
rclb
jo
cs
add
mov
js
stos
cmpb
je
nop
mov
out
stc
and
jmp
call
push
and
and
and
jne
or
out
pusha
push
cs
push
jo
leave
loopne
sbb
fiadds
mov
das
aad
inc
movsb
insl
cmp
rorl
sub
lds
out
sbb
cmp
jl
pop
stos
popl
xor
aas
lcall
push
and
or
enter
fidivl
mov
add
stos
or
cli
add
or
add
mov
cmp
shrb
cmp
dec
rclb
adcb
inc
je
cmpsb
mov
in
pop
add
add
rolb
mov
clc
add
test
pop
mov
mov
dec
mov
idivb
inc
pop
inc
xor
je
data16
add
push
sbb
dec
add
add
sub
inc
add
add
jmp
movsl
or
pop
mov
pop
rolb
pusha
and
cmp
clc
and
and
out
sbb
sbb
inc
add
sub
aam
test
lcall
adc
mov
inc
push
out
cld
push
arpl
and
test
sbbb
sbb
loope
push
or
stos
or
sti
int
pmuludq
sub
mov
push
es
frstor
scas
shlb
incl
adc
idivb
out
push
repz
mov
lea
lahf
cmp
pop
jbe
adc
in
push
sub
push
mov
enter
pop
add
aaa
mov
or
movsb
or
mull
test
mov
movsl
loopne
push
addr16
jb
mov
in
mov
clc
xchg
out
push
adc
jb
jp
outsb
inc
lcall
addb
lret
mov
sbb
stos
add
mov
add
hlt
std
inc
or
test
mov
mov
inc
adc
outsl
xchg
subl
cmp
push
mov
mov
pop
ss
and
mov
js
xchg
mov
repnz
test
jnp
cld
mov
sbb
or
pop
loope
pusha
sub
xchg
and
cmc
xchg
xchg
push
inc
adc
mov
xchg
mov
add
push
jb
sub
in
movsb
pop
or
movl
ljmp
inc
mov
jecxz
aas
xchg
addb
stos
sbb
jo
les
jecxz
ja
adc
es
adc
jg
scas
movsl
pop
scas
enter
pop
mov
mov
inc
outsb
notl
adc
repnz
push
and
xchg
push
sti
sub
xor
jb
ja
ret
sub
adc
insb
mov
fcompl
mov
clc
dec
sub
je
and
fisubrs
sub
pop
xor
fstps
in
sub
jb
dec
xchg
cmp
filds
cs
and
mov
inc
outsb
pop
popf
xchg
cli
xchg
mov
rolb
jl
fcoms
or
xlat
sbb
add
sbb
lret
and
daa
xchg
sub
xor
xor
test
or
inc
or
xchg
xchg
lret
dec
push
fs
inc
sub
push
pop
movsb
jnp
icebp
clc
int3
test
in
cmc
mov
pop
mov
cmpsl
fisttps
arpl
or
leave
and
fistpl
pop
push
or
sahf
fsubrs
cmp
aam
push
movl
in
inc
pusha
add
pop
mov
push
or
add
cwtl
inc
js
cmp
sbbb
incb
inc
sbb
cli
cmpsb
mov
inc
jg
rcrb
int3
rclb
adc
test
pop
push
xchg
enter
sbb
push
jae
jnp
and
inc
xchg
enter
xor
enter
and
and
and
adc
cs
aad
clc
add
shll
shlb
loope
roll
incb
sub
xchg
fldl
fistpll
movsl
lock
or
repz
sub
out
push
add
or
cs
mov
dec
int
mov
mov
push
leave
dec
dec
adc
and
adc
add
js
inc
imul
dec
sarb
and
pop
cld
orb
lret
pop
sub
mov
pop
addb
call
and
nop
push
dec
and
inc
stos
and
or
adc
imul
cmp
adc
add
or
lea
add
pop
sbbl
xor
sbb
push
clc
fwait
mov
sbb
cmp
ja
inc
sub
jg
push
pushl
push
inc
sbb
or
add
loopne
aas
push
push
push
or
clc
scas
inc
mov
push
pop
push
jge
add
mov
loopne
inc
or
jmp
lea
outsl
mov
mov
add
jo
loop
ret
mov
add
jne
cmp
push
popf
mov
shll
pop
daa
inc
cmpsl
pop
push
add
into
mov
pushf
sbb
and
pop
add
and
or
test
xchg
dec
add
sbb
xor
ljmp
fisttps
stos
cwtl
push
xchg
xchg
rolb
mov
fcomip
sub
mov
rorl
adc
xor
in
or
xchg
dec
negb
push
pop
cwtl
sbb
dec
fwait
and
aam
push
or
cmpsl
test
js
fwait
lea
sub
shlb
add
roll
test
mov
push
fmuls
les
sub
daa
jle
sahf
cmp
out
loop
add
add
sub
or
cltd
push
jo
mov
daa
fstpl
sbb
jb
pop
lock
icebp
adc
sub
lods
fcoms
lcall
sbb
fcoml
xchg
add
pusha
push
loop
repnz
loopne
int3
loop
sbb
popf
adc
test
jbe
test
jnp
or
aam
push
push
bound
je
sub
loope
xor
gs
shrl
fdivrs
adc
add
pop
add
imul
cmp
push
ss
push
insb
leave
xchg
cli
mov
inc
adc
std
add
sar
cmp
sbbb
cmp
lcall
movsb
dec
outsb
push
jne
pop
jmp
add
loope
pop
add
adc
lds
aas
inc
orl
in
push
inc
or
dec
pop
adcb
ret
cld
mov
push
shrb
mov
stc
cs
jne
inc
call
pop
jne
cmp
jae
push
imul
jmp
mov
add
test
mov
sub
dec
cmpsl
dec
and
pop
loopne
mov
pop
add
xchg
or
inc
and
push
sub
xchg
inc
mov
lea
ss
sbb
push
inc
add
addr16
insb
mov
sbb
adc
sbb
cmpsl
sti
cmp
add
sbbb
jb
add
and
mov
mov
xchg
lret
and
xor
or
xor
and
and
jne
rorb
push
adc
inc
dec
lcall
pop
lea
inc
or
sub
push
push
fidivl
imul
adc
fiadds
ret
xor
pop
and
lea
adc
push
loop
mov
shl
arpl
mov
add
ds
pusha
push
cmpsl
pop
or
clc
nop
dec
mov
lea
ja
lock
repz
add
xchg
das
cmp
cmpsb
out
adc
gs
xor
add
xchg
sbb
add
xor
push
xchg
mov
pop
push
mov
das
add
mov
ret
mov
mov
mov
popa
jp
jne
ja
and
lods
out
sub
js
fidivs
fs
addl
push
push
mov
mov
subb
stc
push
arpl
shlb
or
ret
pop
sbb
or
push
stos
xor
inc
jl
or
imul
cmpsl
mov
or
out
mov
xchg
in
pop
mov
fwait
or
notl
js
adc
cltd
mov
add
jnp
add
or
jmp
xchg
xor
jne
push
je
sbb
xchg
pop
and
mov
and
lcall
push
sub
std
vmread
and
decb
aas
add
pop
jmp
add
cmp
mov
pop
or
mov
jmp
mov
and
or
sti
js,pt
and
add
mov
aad
test
xchg
incb
push
mov
mov
stc
or
or
pusha
jb
je
push
pop
mull
mov
and
inc
mov
mov
push
xchg
add
bound
je
sbb
ds
cmpsb
ret
dec
or
push
hlt
es
cld
push
ret
inc
push
ja
popf
jno
orl
loope
and
stc
inc
js
push
jp
inc
in
loopne
mov
nop
nop
and
jmp
push
jae
cmc
inc
xor
shll
dec
movaps
aam
adc
test
jg
lret
mov
or
sti
out
inc
inc
mov
mov
ss
leave
pop
scas
cmpsl
scas
cmpl
in
pop
sub
add
cmp
push
icebp
sbb
and
inc
sub
mov
nop
cmc
add
cwtl
fisubrs
out
inc
cmp
lods
inc
icebp
pop
sbb
pop
das
insl
pop
popa
mov
leave
add
mov
jl
std
cltd
icebp
lods
xor
or
lock
adc
lock
mov
leave
mov
xchg
loope
cmp
add
cmp
adc
hlt
es
popa
mov
mov
lcall
add
adc
xor
bound
mov
inc
jns,pn
addl
push
inc
or
inc
or
pop
mov
jns
loop
xchg
lock
out
lock
hlt
std
add
xor
loopne
mov
es
add
and
das
or
test
addr16
pusha
xor
xor
cmp
sti
stos
cmp
stos
pop
enter
add
or
mov
inc
hlt
test
cmp
cld
out
dec
rcrl
add
xchg
push
jne
lods
add
jbe
xorb
mov
xor
jnp
cmp
in
rcrb
adc
sbb
jns
test
sub
push
pop
mov
xchg
addl
xchg
xchg
dec
insl
movsb
or
or
inc
add
stos
xchg
sbb
or
mov
ror
and
pop
xchg
cmp
cmpb
and
fsubrs
leave
in
call
sub
inc
sbb
sti
lret
dec
push
nop
inc
out
repz
mov
push
icebp
pop
and
out
sbb
fs
shlb
test
or
imul
negb
push
movsl
or
fwait
add
jne
hlt
cmp
and
into
jnp
and
sbb
push
movsl
outsb
imul
mov
add
aam
insb
mov
add
rol
jp
xchg
mov
test
into
xor
int
adc
dec
push
mov
imul
es
jbe
jecxz
adc
fcomps
push
out
mov
sahf
cmpsb
xor
insb
pusha
in
fcmovnbe
lea
adc
or
and
pop
mov
aad
add
dec
mov
jp
out
nop
mov
jmp
jne
dec
aam
mov
cmp
clc
pusha
push
jmp
movsb
loopne
push
cmp
dec
popa
and
rcl
insl
xor
push
jo
rolb
sub
outsb
scas
popa
inc
cmp
mov
push
cli
add
xlat
iret
dec
push
nop
cmp
sbb
movsb
mov
add
dec
or
push
pop
mov
xchg
or
add
cmp
pop
mov
dec
into
inc
cmp
in
xchg
mov
or
jecxz
push
push
bound
movw
add
sahf
adc
movsl
sbb
mov
pop
lds
les
push
pop
add
pop
orl
popf
inc
mov
push
and
mov
call
repz
adc
lock
mov
inc
or
ret
pop
inc
stos
addb
push
xor
test
push
decb
je
dec
jne
aad
dec
jecxz
xchg
xor
clc
adc
clc
xchg
cli
and
inc
and
xchg
lahf
sub
cltd
lock
or
inc
sti
sub
decb
mov
xchg
push
push
jmp
cmp
pop
fldl
cwtl
cmp
in
sbb
lea
sbb
xor
call
push
fstps
mov
dec
jns
jp
fiadds
mov
aaa
mov
mov
orb
add
mov
loopne
jbe
daa
fcomps
jne
pusha
adc
sub
pop
sbb
cmpsb
push
je
sbb
pop
sbb
push
mov
or
xchg
pop
sbb
or
push
cwtl
and
and
pop
add
sub
add
inc
or
int3
adc
sbb
rep
push
lods
xchg
mov
pop
cmp
or
push
push
xor
dec
jp
or
or
and
in
push
mov
pusha
cltd
jo
or
sub
and
mov
jmp
sub
mov
bound
add
push
jl
push
or
xchg
pop
into
std
add
ds
dec
and
or
fldcw
inc
mov
mov
cmp
je
mov
inc
or
in
push
add
nop
cmpsl
in
inc
pop
and
sbb
js
fldt
or
push
dec
paddb
out
xchg
ds
jns
inc
inc
mov
add
mov
and
decl
push
dec
jae
xor
add
cmp
dec
push
push
pop
mov
dec
movsl
pop
add
cmp
sbb
je
xor
js
popl
jb
mov
test
inc
fs
and
and
and
sub
outsl
insl
push
sub
inc
movb
popf
lret
movsl
cltd
mov
mov
adc
inc
lods
mov
lret
imul
xchg
or
test
and
lea
mov
jmp
cmp
lar
loop
sub
add
and
add
mov
lret
ja
inc
lret
andl
dec
jns
fucom
dec
pusha
lock
into
popa
leave
mov
sti
sbb
pop
adc
mov
enter
sbb
cltd
imulb
cmp
inc
dec
mov
sbb
or
push
pop
pop
and
popa
sbb
nop
adc
adc
lahf
jae
push
xchg
popf
add
dec
ret
popa
cmp
clc
jne
push
or
inc
xor
mov
adc
and
and
lods
call
mov
jno
mov
and
movsb
jne
lea
das
gs
mov
or
mov
insb
mov
rol
cltd
inc
inc
mov
dec
cld
roll
cmpb
xor
test
mov
push
mov
pop
sbb
cmp
int3
lret
push
dec
imul
mov
push
mov
add
inc
popa
xchg
inc
pop
imul
test
ret
shrl
scas
push
fiaddl
sbb
or
push
push
xor
xor
add
add
mov
cli
int
pop
faddl
and
or
jne
in
add
cmp
in
xor
push
mov
add
pop
cmp
imulb
stc
and
add
fcoml
sbb
hlt
or
out
addb
or
or
int3
pop
add
lret
inc
fiaddl
add
xchg
jne
cltd
pandn
jge
push
add
pushf
jle
jecxz
add
dec
out
mov
jmp
push
jmp
xor
cltd
ljmp
xor
shlb
fsts
orb
jbe
or
adc
sbb
lods
jbe
mov
decl
xchg
ljmp
or
push
hlt
shlb
and
or
movsb
repnz
test
mov
int
lds
lock
jl
add
push
sub
icebp
int3
rclb
rcl
jne
lods
or
subl
inc
ret
cmpl
bound
lods
push
pushl
inc
push
gs
mov
or
sbb
repz
pushf
sbb
sub
mov
mov
aas
sbb
mov
pop
dec
or
adc
lea
lcall
dec
les
adc
lea
enter
inc
movsb
push
push
fidivrl
cmp
jne
dec
aaa
leave
add
pusha
dec
adc
jae
outsb
or
in
xorl
cwtl
in
repz
mov
mov
dec
inc
lcall
xchg
mov
push
add
adc
pop
testb
lret
nop
sbb
or
push
lods
lahf
out
shl
inc
inc
enter
inc
fmuls
addb
jns
add
bound
sbb
int
sbb
ret
ret
add
and
jo
or
shlb
movsb
or
cmp
sbb
push
xchg
sbb
test
loope
and
xlat
or
fsubr
cmp
iret
repz
clc
sbb
xor
push
nop
imul
push
imul
inc
and
or
xor
xor
xchg
jecxz
lods
push
stc
jbe
mov
orb
fisttpl
xchg
out
mov
sbb
sub
cmp
dec
out
inc
push
or
and
sub
sbb
es
or
repz
pop
mov
xor
outsl
xor
inc
stc
jnp
insb
insl
add
shll
mov
cmp
jl
test
aad
cld
add
ljmp
ds
adc
pop
stc
insb
mov
mov
dec
shrb
movsb
sbb
inc
sbb
xchg
pop
sbb
pop
bound
shll
mov
push
mov
xchg
and
sub
mov
push
mov
inc
sub
cmp
xchg
loopne
mov
inc
jmp
jns
mov
repnz
addb
lret
push
dec
jae
les
xchg
ljmp
jo
cmpb
les
sbb
mov
cmp
dec
sub
jbe
jecxz
fiadds
add
or
push
and
cmp
addr16
xor
sbb
push
or
sbb
imul
add
add
leave
fidivrl
mov
add
filds
sbb
nop
mov
dec
adc
in
sbb
xor
scas
mov
mov
sbb
add
movl
loop
cmp
mov
inc
cld
sbbb
push
inc
js
xchg
adc
test
add
lods
inc
call
cmp
sub
and
adc
xor
sbb
add
repz
add
movsb
jb
mov
lret
or
push
sbb
xchg
add
push
lret
or
xchg
add
add
in
dec
push
sub
xchg
sbb
add
mov
or
es
sahf
or
sbb
xchg
jne
inc
sbb
icebp
sbb
add
pop
mov
jle
sbbl
sbb
push
sbb
stos
add
push
add
jecxz
lcall
pop
add
and
insl
xor
in
repnz
mov
and
or
stos
or
xlat
and
and
pusha
int
icebp
push
pop
xchg
xor
inc
lea
dec
and
scas
iret
or
jmp
inc
jne
mov
xor
sub
sbb
or
jg
add
cmp
sbb
cmp
testb
and
testl
adc
adc
pop
add
sbb
adc
jns
push
arpl
jl
leave
or
bound
jge
adc
das
jbe
or
jne
sub
mov
lds
add
fwait
xchg
add
sbb
jns
int
in
outsb
das
in
push
pop
nop
add
daa
push
icebp
loope
cmp
cmpsb
jo
dec
sti
ficomps
pop
ss
and
push
insl
sub
mov
sub
ds
push
pop
cmp
dec
push
inc
mov
inc
test
pop
cmp
test
popf
lock
cmp
sti
xor
movsl
mov
idivb
jne
pop
js
lret
stos
push
leave
inc
loopne
xchg
test
adc
or
add
mov
aam
add
in
mov
push
sub
push
fildll
pop
add
test
addl
es
sbb
pop
add
push
dec
popf
cmp
in
push
dec
or
shrb
or
or
or
iret
lret
sub
and
shrl
push
dec
jb
stos
add
lret
and
and
mov
lret
push
test
enter
jecxz
xor
push
shll
xchg
rclb
sub
fidivrl
sub
int3
cltd
insl
in
xchg
out
adc
adc
pusha
inc
lock
mov
loope
mov
adc
sbb
cwtl
insl
enter
in
mov
mov
xchg
sbb
rcrl
inc
aam
sbb
pusha
ds
jb
js
or
adc
sbb
jl
mov
or
adc
push
mov
pushl
or
lods
in
fisttps
sub
pop
cwtl
adc
subb
mov
add
sbb
mov
mov
pop
ret
aam
in
mov
add
insb
and
dec
je
lods
jl
enter
sbb
fadds
in
and
adcb
adc
push
stos
sbb
loop
imul
inc
outsl
inc
sbb
lods
addb
xor
or
xor
mov
test
rcl
mov
mov
mov
jecxz
pop
aam
and
sbb
cmp
ret
push
pop
dec
pop
xor
data16
outsl
pop
jmp
inc
sbb
loop
or
xor
pop
das
push
inc
cmp
inc
cmpsb
and
and
fimuls
jmp
mov
dec
ljmp
xorb
and
fcomps
insl
add
stc
mov
insl
xor
jne
add
ret
jno
idivb
xchg
xchg
subl
push
push
stos
les
popa
test
mov
lea
xlat
adc
nop
xchg
xchg
sub
sub
lods
push
or
aad
and
daa
mov
xchg
sbb
mov
jge
mov
sbb
pop
push
mov
mov
sub
sub
or
sub
ret
sub
jnp
push
loopne
mov
adc
jnp
enter
or
pop
loopne
mov
shlb
mov
lcall
in
adc
mov
xor
fdivl
cs
add
popa
cmp
call
jl
sahf
dec
pop
xor
push
loopne
test
popf
je
push
sub
xor
sbb
sub
mov
xchg
and
cltd
pushw
xchg
nop
stc
aam
dec
movsl
repnz
pusha
sub
lret
sub
dec
add
sub
dec
dec
icebp
lock
xor
sbb
xor
cs
push
pop
outsb
sbb
leave
add
jl
sbb
aaa
sub
mov
and
rorl
mov
pop
setnp
insb
and
mov
int
icebp
dec
repz
inc
scas
inc
pop
shlb
lods
fs
daa
adc
nop
sbb
sbb
nop
push
aaa
jnp
cmp
dec
pusha
sbb
adc
push
in
lahf
push
cmp
pop
stc
push
je
scas
inc
or
in
test
dec
test
inc
push
push
fstpt
pop
push
loopne
orb
push
cmp
sub
repnz
cmp
and
pop
jno
orl
nop
mov
sbb
rcrb
inc
aas
pop
or
test
mov
mov
aas
xchg
and
add
push
js
push
and
lds
int3
adc
les
popa
pop
jns
pusha
notb
pop
add
add
repnz
mov
addr16
jne
mov
lea
loop
popf
xchg
adc
push
pop
pop
inc
jno
push
and
push
or
pop
lock
cmp
cmpb
inc
jae
dec
jns
imul
sub
stc
sub
pop
add
sbb
fcomps
and
inc
rol
push
push
cmp
jno
mov
int
pop
add
test
mov
test
arpl
and
pop
inc
inc
sub
enter
xor
adc
push
lret
pop
add
xor
jns
sub
push
add
sbb
repnz
dec
inc
push
out
shl
xor
jbe
aad
fnsave
adc
cli
cmp
fcmovb
xchg
dec
mov
sbb
enter
mov
add
mov
in
add
movsb
test
sbb
jge
add
push
js
sbb
mov
cmp
movl
mov
sbb
mov
mov
mov
gs
push
test
xor
movsl
xor
sub
mov
rcrl
mov
inc
cmp
ret
jne
sbbl
fldl
andb
pop
or
xorb
fs
add
test
push
add
repnz
xor
pushl
call
in
sub
std
pop
repnz
push
mov
mov
push
test
fst
sbb
stc
and
in
add
mov
pusha
arpl
orl
xchg
lret
adc
mov
aad
adc
inc
lret
jns
inc
repnz
and
mov
push
pop
adc
enter
push
mov
sbb
mov
pop
sub
sbb
rclb
pop
sbb
dec
or
adc
jge
fs
and
mov
xchg
ds
ud0
push
cmp
push
pushl
xchg
pushl
bound
sub
or
dec
imul
mov
sbb
mov
movsl
or
pop
add
sbb
pop
int
or
cmp
test
adc
movsl
jo
xor
adc
adc
xor
cmp
xor
mov
sbb
insb
sub
push
sbb
dec
pop
mov
push
mov
adcl
subb
sbb
adcb
dec
ds
sbb
loopne
xor
mov
sbbb
fcompl
xchg
jg
pushf
fisubl
sbb
subl
iret
out
sbbl
int
add
sbb
jbe
outsl
push
mov
mov
pop
sarb
push
inc
add
mov
imul
fadds
test
sub
je
inc
jns
jg,pt
or
cmp
loopne
sti
sub
es
and
xchg
sarl
mov
sub
push
ficoml
push
das
sbb
xor
mov
fisubl
mov
jno
aad
gs
and
repnz
xor
jmp
lret
push
std
mov
ret
and
pop
mov
mov
leave
push
xor
xchg
pop
mov
aad
cmp
xor
xor
bound
jb
inc
xor
cltd
outsb
jne
cmp
jb
add
inc
add
leave
xor
xor
bound
test
and
and
pop
sub
aaa
xor
leave
leave
mov
loopne
mov
loope
pop
call
ret
cmp
fimuls
loopne
loope
outsl
fsubs
lods
cmp
sbbl
loopne
and
sbb
imul
jnp
jmp
sbbl
sbb
hlt
xor
inc
push
out
xchg
stos
call
and
mov
push
pop
pop
das
jns
je
push
and
cmp
arpl
mov
dec
push
push
in
imul
in
test
xor
xor
insb
and
adc
xor
mov
dec
shll
mov
mov
jp
dec
push
sbb
addl
push
mov
sub
std
test
cmpl
ds
ret
dec
sub
jl
inc
inc
push
imul
mov
daa
xor
pop
sub
fcompp
push
sub
and
sub
aad
mov
scas
sub
inc
loop
and
shll
inc
pop
jno
adc
jnp
test
mov
push
dec
xor
mov
inc
test
xor
in
xor
dec
dec
andl
and
xor
mov
and
adc
push
movsb
sbbl
pop
inc
push
lret
add
mov
pop
dec
popa
dec
loope
jb
dec
dec
or
inc
xor
movb
xor
rcrl
subl
inc
test
inc
icebp
mov
daa
cmp
icebp
cmc
mov
mov
sbb
andl
pop
daa
dec
add
pop
add
mov
test
xor
dec
lds
push
jl
shll
push
rol
or
mov
adc
jg
mov
mov
and
popf
or
or
pop
ret
pushf
lcall
jnp
stos
fmulp
jecxz
je
ffreep
lahf
aaa
jns
jle
pop
inc
ds
cmp
push
mov
mov
int
xor
or
push
aad
push
pop
mov
and
sahf
aaa
adc
mov
sbbl
iret
outsb
rorl
pop
movsl
rclb
mov
add
sub
arpl
dec
and
add
pop
nop
mov
dec
or
push
xchg
ret
icebp
pop
ret
adc
insb
lea
stc
aad
bound
sbb
in
in
test
or
sbb
arpl
repnz
movsb
cmp
xor
movsb
pop
mov
icebp
dec
test
xchg
add
mov
scas
enter
xchg
sbb
jne
push
lods
lahf
mov
leave
aam
lock
int3
jo
jle
dec
pusha
mov
cmp
jae
cmp
mov
mov
jge
incb
shr
pop
test
jl
hlt
mov
pop
and
pop
add
sub
mov
jp
cmpsb
fs
adc
dec
push
lods
adc
mov
int
adc
ss
call
addr16
or
jae
aas
addl
add
movsb
adcb
fidivl
insl
xor
and
or
icebp
push
inc
pushf
sbbb
push
sbb
dec
inc
push
inc
jg
jmp
adc
cltd
lods
or
cmp
and
or
jl
cmc
pop
popl
dec
pusha
xor
sub
jle
pusha
pop
add
fldenv
jg
mov
loope
push
loope
or
lea
xchg
pusha
sub
sub
xor
sub
loopne
sub
dec
dec
movb
pop
add
pusha
or
or
pop
pop
popf
add
pop
inc
enter
dec
lcall
outsl
xchg
data16
adc
adc
stc
test
out
adc
mov
and
mov
je
push
or
inc
inc
xor
scas
inc
sub
sbb
inc
rol
rorl
in
add
xchg
sub
mov
daa
sub
loop
fcmovnu
adc
insb
js
lock
xor
inc
add
mov
jo
test
or
pop
or
jbe
bound
clc
or
sarb
push
or
popf
mov
lods
sbb
out
xor
mov
sbb
je
push
add
sub
cmpsl
and
sbb
fisubrs
adc
fdivl
fs
aad
les
mov
add
cld
mov
aad
xor
and
lock
sbb
movl
lcall
xchg
mov
add
sbb
call
sub
mov
fimull
dec
or
jae
sbb
adc
add
mov
lret
sub
insb
jo
pop
and
sub
dec
sbb
fstps
mov
imul
and
popa
push
and
inc
rorl
jo
scas
jecxz
mov
xchg
add
loope
cmpsl
jns
add
fs
fwait
xor
xchg
add
and
mov
inc
sub
fs
cmp
pop
sub
mov
mov
push
and
add
mov
xor
ss
jno
or
adc
sti
adc
xlat
mov
dec
pop
shlb
sub
push
sbb
lea
fildl
and
add
mov
pop
insl
dec
dec
andb
or
dec
lea
shrw
add
and
add
test
sbb
mov
jbe
movsl
cwtl
pop
rcrb
xlat
push
sbb
xchg
sbb
sub
loope
outsb
mov
inc
inc
xor
ljmp
push
jno
and
cmp
xchg
jecxz
inc
inc
dec
and
test
es
or
mov
cli
adcb
stos
xlat
inc
jle
add
fwait
pop
dec
popl
fnstcw
xor
in
pusha
jno
adc
mov
push
es
pop
jo
xchg
mov
adc
mov
xor
das
divl
pop
add
and
xorb
add
add
bound
addl
xor
mov
movsb
xor
test
fisttps
xor
inc
lods
cmp
xor
not
add
call
andb
jne
pop
jbe
add
pushf
pop
cmp
pop
push
cmp
mov
push
ja
jl
xchg
xor
pcmpeqw
jecxz
jg
mov
cmp
je
cmp
je
cmp
je
cmp
je
cltd
icebp
mov
jge
imul
test
inc
hlt
jne
push
fidivrs
adc
mov
pop
xchg
loopne
xchg
xchg
sarl
add
pop
mov
aam
pop
cmp
ret
mov
xchg
mov
fwait
out
rclb
pop
pop
xchg
add
push
push
jns
push
add
xchg
test
add
call
inc
adc
int3
adc
in
xor
out
adc
pop
push
sub
push
les
lea
sbb
fiaddl
in
dec
imul
jo
sub
pop
scas
and
loopne
xchg
fcmovb
pushf
xor
push
sub
enter
int3
xchg
and
jb
sub
mov
sbb
sbb
jo
sub
inc
add
or
or
sbb
adc
sbb
add
loope
leave
stos
aad
add
incb
push
js
sar
movsb
loopne
or
or
push
daa
iret
sub
cld
rcrb
xor
xchg
sbb
ljmp
dec
sbb
das
jnp
inc
xchg
pause
clc
ja
fs
and
sub
lock
inc
and
jns
adc
test
fcmovne
mov
inc
test
add
lock
jl
ret
cmp
and
test
sub
daa
fisubrl
loopne
xchg
push
push
dec
lods
pushl
xchg
pop
xchg
push
data16
pop
cli
mov
sub
imul
adcb
int3
leave
mov
test
xchg
cltd
add
inc
lcall
xor
hlt
and
loopne
hlt
xlat
dec
pop
mov
inc
push
dec
jb
xor
add
popa
pop
jb
inc
jo
test
popa
jns
inc
insb
lods
xor
jae
aas
movsb
adc
scas
jne
sbb
inc
outsl
stc
xchg
xchg
scas
mov
enter
jno
movb
push
xchg
popf
aas
mov
orl
push
pop
negl
or
sub
daa
pop
jb
push
push
mov
xor
mov
sub
mov
xchg
cmpsb
enter
inc
rcrb
pop
pop
xor
adc
push
aam
xchg
cmp
je
push
int
inc
and
adc
or
mov
push
ds
adc
inc
cmpb
dec
add
or
xchg
out
fnstenv
js
adc
ret
divb
sbb
out
xor
ljmp
es
push
mov
sub
push
mov
pop
aam
test
xchg
cmp
adc
sub
insb
and
orl
adc
add
daa
adc
dec
jne
or
mov
gs
push
cmp
fsubrs
xchg
pop
fists
add
and
in
mov
inc
fcompl
or
adc
lahf
sbbl
mov
imul
cmpsb
sub
in
or
ret
inc
test
fildl
and
sub
in
adc
mov
lea
movsl
add
push
dec
dec
sub
mov
inc
fmull
lock
push
push
mov
lods
decb
pop
mov
adc
sub
mov
sbb
aas
dec
test
add
jo
and
outsb
sub
and
or
adcl
and
sbb
mov
cld
jg
hlt
outsl
dec
add
cmp
jne
cmc
mov
incl
rclb
add
aam
sub
sti
adc
mov
repz
or
mov
inc
dec
xchg
lock
lcall
sub
pop
xchg
mov
ja
push
or
in
mov
pop
imul
or
jo
aam
loopne
rcrl
loope
pusha
test
adc
popf
gs
dec
mov
xchg
push
pop
je
mov
push
add
add
push
lds
jbe
icebp
inc
sbb
loope
or
dec
pop
add
add
pop
mov
or
sub
loop
push
pop
jbe
fucomi
jno
aad
adc
jno
and
out
test
je
or
fucomip
mov
mov
shll
mov
jbe
cmp
cmp
jmp
xchg
jne
pop
jge
mov
or
jnp
je
inc
addr16
pushf
jecxz
dec
push
shl
inc
lahf
inc
test
movsb
jecxz
add
sbb
sub
js
test
outsb
cmpb
xorl
mov
loopne
pop
push
mov
rcrb
sub
push
pop
dec
int3
push
shrl
cmp
jmp
movsb
mov
xchg
pop
pop
test
popf
add
in
or
adc
dec
pop
or
inc
in
cli
push
lea
clc
push
int
adc
cmp
es
mov
or
sub
std
sbb
push
mov
cmpsb
jo
push
mov
gs
mov
xor
xor
inc
push
xchg
xchg
rcl
fiadds
call
sub
imul
fisttpll
inc
je
je
aad
xchg
push
push
dec
in
movb
and
push
adc
in
sbb
dec
out
mov
jp
dec
push
push
mov
cmp
xor
sti
mov
fs
jmp
push
add
cmp
mov
and
leave
adc
adc
mov
test
dec
cmp
push
sbb
xchg
mov
scas
sarb
mov
dec
shll
dec
mov
xor
dec
and
in
pop
fwait
push
mov
dec
dec
fadds
sub
ret
add
sub
pop
inc
test
xchg
push
add
mov
mov
push
push
inc
xor
lods
push
adc
xchg
xor
dec
sub
sbb
adc
mov
dec
mov
mov
test
xor
pop
call
pop
mov
cmpsl
andl
push
mov
call
jno
es
inc
mov
dec
pop
adc
enter
and
subl
push
mov
xchg
adc
in
pop
or
lock
push
mov
push
insb
pop
sub
xchg
dec
and
push
adc
dec
pusha
sbb
xchg
push
add
test
inc
xchg
xor
rorb
xchg
pusha
add
rorl
pop
test
andl
cmp
mov
jmp
or
sbb
mov
pop
mov
setl
mov
push
dec
lret
sbb
jae
testb
fwait
sbb
push
add
mov
push
sbb
test
pop
jo
lods
popa
stos
ret
test
inc
adc
pusha
lock
mov
push
sub
insl
mov
inc
push
or
push
loope
inc
inc
lods
mov
pushf
out
cmp
fidivs
jl
sub
xchg
loop
pop
mov
jns
or
iret
pusha
push
push
jae
loop
stos
cwtl
imul
ljmp
sbb
sbb
sbb
pop
imul
add
loopne
in
xor
dec
mov
enter
loope
jne
or
stos
mov
sub
cmpsl
add
decl
or
cmp
mov
xor
cmp
pop
push
xor
adc
sbb
lock
mov
mov
mov
push
cwtl
popf
push
pop
notl
cld
sub
pop
add
andb
push
or
lock
pop
lret
imul
ret
push
rcll
sarl
pop
daa
adcb
lahf
jno
pushf
dec
push
or
mov
and
aaa
mov
sbb
nop
push
jae
cmc
push
inc
inc
lmsw
jns
pop
add
mov
out
repnz
push
jb
sbb
int
js
and
rclb
sub
inc
sbb
sbbl
dec
sbb
xchg
das
push
and
inc
pop
push
ss
pop
inc
xorl
fsubrs
adc
add
jne
push
dec
jmp
push
pop
jmp
or
pusha
jmp
pop
cmp
es
test
je
xchg
jmp
pop
mov
repz
sbb
test
lods
push
hlt
cmc
mov
loope
mov
mov
rcrb
lcall
add
pop
pop
mov
pop
xchg
mov
ret
sub
cmp
jne
jne
inc
pop
sbb
into
add
inc
pop
lcall
ret
sub
xchg
lahf
dec
outsl
sub
xor
push
inc
sahf
add
push
fiaddl
clc
adc
cld
into
add
cmp
and
pop
bnd
sbb
add
lret
into
xor
push
or
sbb
dec
xor
mov
push
cwtl
mov
pop
shll
sub
stos
push
push
into
sub
mov
and
fsub
xor
sbb
push
daa
adc
cmp
call
in
pop
clc
test
or
data16
or
in
test
cld
inc
dec
enter
or
and
aad
add
stos
div
cld
adc
pop
sbb
xor
pop
dec
jb
and
stc
mov
lret
sbbl
push
ss
pop
add
popf
and
adc
mov
sbb
lcall
lcall
outsb
add
pushf
pop
shll
add
inc
mov
insb
add
push
add
and
dec
sbbb
adc
out
jne
das
pop
pop
cmp
adc
test
mov
arpl
jns
and
cmpsb
jecxz
sarb
fisubrs
clc
mov
sbb
lcall
pop
shlb
xor
iret
sub
and
mov
pop
inc
sub
sarb
fistps
pusha
sub
repz
lret
sbb
sub
xor
or
mov
dec
adc
pop
mov
pusha
xchg
inc
jbe
scas
dec
pop
push
lea
movsb
sbb
popf
adc
or
adc
cmp
divl
push
shll
pop
adcb
sbb
cmp
or
enter
push
imul
loopne
aam
call
dec
jecxz
lret
aaa
xor
push
movb
call
push
pop
dec
psraw
scas
fmull
sub
mov
add
push
adc
mov
das
jge
mov
push
cmpl
xchg
mov
pusha
mov
xor
xchg
loope
mov
sbb
mov
lret
push
inc
mov
jmp
add
xchg
mov
mov
and
add
push
mov
cmp
cmpl
shlb
out
jbe
xor
push
inc
in
lds
pop
push
xchg
jmp
push
xchg
add
in
xchg
xor
inc
push
fistps
incl
lea
cmpb
inc
imul
nop
pop
notl
add
lock
ds
mov
sub
lahf
clc
sub
cmp
pop
jl
pop
lcall
clc
fbld
mov
insb
inc
fdivl
mov
fcmove
les
adc
icebp
or
lret
out
ds
cmpsb
stc
lods
call
test
dec
push
outsb
cmp
mov
ret
lock
movsb
inc
mov
lock
pop
sbb
jne
cmp
cmp
aaa
mov
jae
push
lods
test
int
sti
or
js
add
sbb
test
aas
movsl
mov
test
hlt
sti
imul
mov
mov
or
dec
or
pmaddwd
pop
imul
or
jmp
dec
adc
movsl
mov
mov
cmpl
jg
push
push
xchg
or
dec
mov
inc
lock
push
fists
pop
dec
rolb
je
nop
xor
and
jmp
cmp
jne
xor
inc
lret
icebp
mov
push
mov
sahf
scas
jp
inc
mov
or
jbe
mov
fistps
cmp
je
pop
and
rolb
mov
mov
adc
push
repz
cmpsb
mov
add
pop
fsubs
scas
pop
cmpl
loop
sub
jne
push
and
ja
cwtl
inc
icebp
push
shll
add
rol
loop
lea
aam
push
sub
push
test
in
or
dec
jns
mov
shl
push
addb
in
cmp
sub
rorb
cmp
mov
xchg
lock
add
xchg
mov
fildl
or
xor
sub
inc
sbb
mov
sub
mov
inc
dec
pop
cltd
les
add
mov
xorb
and
popf
mov
sub
out
adc
test
cmp
fisttpll
push
sbb
adc
push
adcb
push
or
fimuls
cmp
ror
sbb
sbb
loope
mov
jl
cmp
inc
xorl
push
xchg
cmpsb
xor
jecxz
mov
inc
dec
call
fs
add
pop
jecxz
sub
outsl
cmc
aam
mov
jmp
imul
cwtl
rcll
mov
push
lea
into
imul
mov
jne
and
and
xchg
rorl
test
xchg
and
fucomip
test
dec
and
dec
les
test
push
cmpsb
and
mov
mov
pop
push
movsb
xor
stos
push
data16
jle
or
sub
mov
xchg
and
sub
daa
jno
cmp
test
mov
sub
sarb
in
xchg
sbb
xor
mov
mov
iret
jne
push
dec
cmp
jno
pop
int3
push
fldcw
in
or
hlt
loop
aaa
xchg
sbb
scas
lcall
clc
or
adc
mov
call
notb
dec
push
cmp
sbb
mov
mov
dec
test
inc
cmpsb
movsb
cmp
mov
orl
pop
insb
nop
adc
test
je
test
hlt
cmp
mov
add
sbb
enter
pop
jne
cmpsl
insb
push
mov
xchg
aam
loop
test
add
dec
sbb
jne
sbbl
jle
or
xor
cmp
sub
cmp
lret
sahf
fdivs
push
cwtl
movsl
sbb
stos
out
es
clc
lret
out
mov
or
loopne
in
xor
or
fs
inc
aas
pop
gs
mov
add
xchg
leave
add
adc
push
sbb
add
loop
daa
ljmp
out
or
sar
adc
cwtl
xchg
mov
sbb
mov
push
imul
cmp
jb
inc
jb
and
mov
jecxz
sbb
test
mov
je
mov
test
popa
fstps
es
add
push
mov
xor
lods
data16
mov
pusha
out
in
pusha
cld
pop
pop
mov
incl
je
jmp
sub
popa
outsb
mov
pop
jle
mov
sub
in
inc
add
outsb
aam
repz
and
pusha
dec
ret
sbb
inc
cmp
and
jge
sub
insl
dec
sub
inc
inc
mov
push
xor
inc
adc
jae
adc
repnz
inc
and
adc
sub
in
ja
or
les
xor
nop
shlb
dec
test
cwtl
mov
fs
add
push
in
loopne
sbb
xor
frstor
pop
nop
daa
mov
int
arpl
pop
das
add
add
out
mov
pop
in
xchg
es
js
push
lock
lods
xor
sbb
adc
mov
adc
mov
pop
lds
push
ja
int3
and
mov
xor
mov
push
test
outsl
xlat
nop
add
add
push
push
icebp
jge
fstps
push
loopne
push
mov
mov
mov
sbb
inc
daa
sbb
adc
dec
inc
mov
cli
lahf
dec
lock
subl
je
or
sbb
scas
push
xor
push
jae
push
sub
fdivrl
call
xor
jno
sbb
add
sbb
sbbb
mov
push
hlt
gs
addl
rorb
jl
xchg
loop
inc
adc
sbbl
jg
out
add
arpl
pop
rorl
mov
sub
push
sub
push
mov
dec
add
inc
or
push
into
cmp
mov
cwtl
xchg
cmpsb
pushf
out
stos
test
cwtl
cwtl
add
lahf
sarb
sbb
mov
and
pop
ss
pop
test
adc
mov
push
push
adc
mov
and
rcll
aam
pop
les
push
adc
add
sar
pop
pop
ret
roll
sub
int3
fst
add
fisttps
push
rorl
loope
pusha
inc
dec
shr
imul
dec
ret
push
outsl
ja
popf
push
fdivs
arpl
fcomps
xor
add
lock
dec
out
lret
sub
testl
jl
mov
lock
mov
dec
or
fsubrs
pop
and
in
pop
out
cmp
xchg
out
push
idivb
add
mov
cmpsb
jle
xchg
lods
sub
jo
imul
adc
sub
push
mov
loope
jmp
cmp
jnp
add
push
dec
ret
xor
inc
enter
sbb
in
sub
loopne
cmp
clc
adc
loop
cld
sub
sbb
fbld
xchg
test
rcll
shr
int3
test
sbb
adc
sti
mov
data16
mov
je
pop
pushf
mov
ds
push
mov
jns
mov
or
ljmp
jne
inc
push
or
and
sbb
pop
pop
or
mov
js
sub
jo
dec
scas
faddl
push
or
adc
fisubs
sbb
dec
aaa
mov
mov
push
in
push
xor
push
mov
xchg
loope
mov
lock
ret
daa
mov
ret
and
fs
sub
push
sbb
push
inc
bound
fidivrl
or
pop
jbe
mov
es
shll
aaa
jmp
out
inc
adc
jb
or
xchg
lea
aaa
dec
adc
mov
push
adc
xorb
cmpb
push
add
push
push
push
push
inc
push
sub
repnz
sbb
mov
cld
movsb
ljmp
nop
loopne
cltd
add
and
jnp
jne
sub
lods
pop
pop
jo
test
shll
or
mov
fistl
mov
cmp
dec
mov
push
adc
jae
mov
test
or
xor
cmp
cmpsl
imul
cmp
lahf
ja
inc
adc
clc
inc
push
mov
scas
jge
sbbb
sub
mov
mov
adc
sbb
jb
dec
xchg
sti
adc
and
pusha
cmp
cmp
mov
mov
xchg
add
jmp
mov
ret
dec
mov
push
shr
push
cmp
add
xchg
pop
mov
push
in
push
or
add
jp
rolb
sbb
pushf
cmp
xchg
add
lods
testl
aam
stos
push
in
push
push
mov
mov
dec
test
popf
mov
dec
mov
add
insb
lock
hlt
push
xor
pop
jo
xor
and
mov
jo
xchg
mov
aam
lds
xchg
adc
push
push
aam
mov
push
pusha
push
xor
in
loop
xorb
or
mov
movsb
mov
xor
jg
repnz
subl
xor
add
xor
out
loop
pop
xchg
lock
popf
jmp
add
fstl
lahf
popf
mov
or
fs
jg
adc
mov
adc
rcl
lahf
and
pop
push
cmp
fimull
movb
not
xchg
push
aas
rcll
enter
inc
or
jae
in
add
add
push
jae
arpl
das
iret
add
push
iret
mov
inc
or
push
or
mov
insb
jne
or
cmp
push
push
enter
sub
sbb
cmp
mov
nop
andl
xchg
or
jnp
xchg
mov
cmp
and
pop
mov
shrb
cmp
je
mov
jg
adc
jne
xor
movsl
cmp
aam
xchg
sbb
sbb
add
fadd
add
negb
sub
iret
imul
dec
xor
ss
push
xor
icebp
push
add
jmp
xor
xchg
sub
je
sbb
or
into
mov
sbb
mov
lock
adc
rorb
mov
dec
sbb
jnp
push
mov
call
leave
clc
sbb
sbb
mov
stc
sub
and
jne
fcomp
jmp
lea
mov
mov
mov
outsb
std
cmp
jnp
and
insb
stos
dec
cs
mov
mov
movsb
mov
or
rcrb
dec
inc
sub
or
sub
xor
shlb
sarl
testl
add
push
sbb
fldl
orb
bound
adc
inc
and
add
lcall
fs
imul
stc
mov
fsubr
mov
stc
andl
add
in
mov
int3
inc
test
inc
mov
add
pop
scas
sub
and
cmpsb
rcrb
divl
xchg
int
dec
subb
adc
and
xchg
sbb
pushl
sbb
xchg
popf
sbb
or
fadds
sbb
sbb
add
nop
insb
push
sbb
cmp
imul
xor
std
xor
dec
cwtl
icebp
or
scas
jg
sbb
call
mov
clc
adc
and
cmp
dec
jo
lcall
xor
shrl
xor
mov
sub
or
and
int
adc
jae
mov
push
sbb
or
bound
pop
mov
sub
mov
adc
fbstp
jmp
cmp
sbb
and
sub
sbb
rol
mov
or
testl
sbb
add
jne
mov
jb
sbb
rorl
add
inc
jnp
repnz
mov
push
inc
dec
jbe
inc
add
or
test
fwait
pop
ret
or
xor
mov
shl
mov
dec
xorl
adc
sbb
xor
mov
inc
push
push
shr
loopne
rol
ljmp
add
add
add
jb
test
jnp
shr
imul
xor
testb
vmovshdup
dec
xorl
popa
pop
mov
xorb
out
test
adc
andl
sbbb
adc
in
shl
push
or
adc
cmp
stc
add
add
je
mov
das
add
push
jo
xchg
iret
cmp
das
mov
sbbl
insb
pop
mov
add
imul
cmp
add
xchg
out
add
mov
js
in
leave
sub
mov
sub
inc
sbb
lock
cmp
pop
clc
push
stc
je
icebp
imulb
and
jb
inc
adc
lahf
xchg
ja
fwait
inc
adc
push
fistpl
rol
data16
jne
popf
notb
xor
and
push
iret
js
xlat
mov
testb
adc
mov
xor
mov
cmp
test
jne
lret
clc
mov
sbb
mov
loop
ja
inc
loop
loop
xchg
scas
or
jmp
gs
dec
xchg
cmp
rcrb
xor
sub
inc
pusha
adc
dec
lods
pop
jmp
inc
or
dec
jno
dec
cmp
dec
test
adc
call
jae
and
orb
inc
cmp
popf
sti
inc
adc
xchg
arpl
sub
sub
mov
adc
icebp
mov
mov
inc
mov
mov
lahf
or
add
das
mov
sbb
shrl
pusha
push
adc
pop
scas
pop
iret
adcb
jo
lahf
fldl
and
mov
add
rorb
pusha
xchg
sbb
sub
mov
sbb
add
sbb
jnp
push
sbb
mov
add
nop
gs
je
push
cltd
test
fs
xchg
inc
insb
insb
push
push
les
adc
or
jns
lea
pop
xchg
ja
pop
negl
dec
sbb
mov
dec
cli
ret
in
je
cmp
je
mulb
sbb
xor
roll
mov
and
ja
and
iret
je
xor
lock
dec
inc
push
push
lock
jl
mov
push
sub
inc
pop
xchg
jmp
lea
pop
fcoml
xchg
add
add
dec
add
sub
push
add
pop
jb
dec
lock
adc
lock
jb
cld
lock
pusha
jl
das
cmpsl
addb
mov
sub
adc
mov
jo
movntq
jp
dec
add
shlb
mov
filds
jno
add
add
push
push
jle
mov
lahf
testb
cmpps
pop
rorb
jg
mov
pusha
out
inc
xchg
dec
and
leave
inc
cmp
jne
sahf
shlb
mov
pop
jl
testb
test
add
mov
dec
or
mov
je
test
ljmp
sbb
xor
jnp
ljmp
adc
push
sbb
adcl
adc
pop
jl
pop
push
jge
jne
fcmovnbe
xchg
pushw
aam
mov
cs
lret
fildll
jmp
addr16
push
aas
jne
in
xchg
lods
mov
push
xor
xchg
sub
ret
es
je
xchg
mov
mov
stos
or
xchg
mov
cwtl
fisubrs
add
sub
fimuls
mov
sub
pop
loopne
je
sbb
pusha
or
xchg
div
push
lock
and
dec
push
lea
push
pop
cwtl
push
adc
movsb
jo
pusha
add
push
sub
push
or
add
fwait
pop
sbb
lods
add
dec
stos
pop
test
or
xchg
xchg
or
and
sub
loope
adc
jo
mov
lods
in
popa
pop
sbb
out
cmp
je
filds
loopne
adc
and
pop
mov
pop
arpl
inc
sarl
dec
outsl
aad
push
push
cmc
adc
ja
movsb
cmc
cmp
std
mov
mov
insb
push
pop
cmp
sbb
push
je
push
mov
push
nop
out
pop
fs
rorl
sbb
pop
loopne
rclb
mov
add
xchg
es
adc
mov
out
jge
sbb
jg
adc
test
push
cmpb
or
cmp
xor
pop
mov
inc
shll
mov
adc
cwtl
push
and
pop
and
orl
or
push
inc
dec
push
jbe
cmp
ss
pop
push
pop
into
jecxz
or
inc
data16
adc
loopne
cmp
test
lretw
jns
inc
jo
test
mov
inc
verr
sbb
fists
aam
inc
adc
mov
jecxz
dec
insl
sbb
loope
shlb
cmp
sub
mov
scas
add
loope
int
pop
call
push
movsl
lea
push
add
pop
mov
jnp
shlb
rcr
sbb
adc
xchg
pop
cmp
xchg
sbb
mov
pop
jl
sbb
dec
or
xor
stc
sbb
into
jo,pt
or
add
jge
das
cmp
icebp
adc
out
jo
push
lds
mov
imul
xor
subb
cmpsl
mov
ss
outsb
stos
mov
cmp
mov
cmpsl
push
push
add
add
pop
sarl
and
ljmp
adc
jle
test
inc
popf
cs
dec
shll
jae
add
push
push
push
push
je
push
fs
and
lahf
das
mov
ljmp
or
cli
pop
ljmp
je
repnz
push
push
add
pop
xchg
cmp
cwtl
mov
icebp
adc
push
add
push
les
dec
jecxz
stos
xchg
and
cmpsl
jne
je
xor
or
xor
inc
xchg
nop
sub
cmp
aaa
aas
adc
mov
sub
imul
add
push
addr16
cmp
aad
nop
les
push
inc
sbb
and
stos
out
shll
cmp
orb
daa
mov
xchg
mov
adcb
out
pusha
shll
mov
test
test
xor
mov
pop
enter
das
mov
pop
or
les
pop
sub
adc
dec
and
int
rcll
xor
aad
loope
push
xchg
dec
loop
jnp
and
sbb
rdmsr
xor
fcmovne
sarb
push
stos
or
fldl
push
ret
xchg
mov
sbbl
dec
xor
call
or
xor
shrb
push
nop
xlat
and
dec
pop
adc
jno
int3
jnp
test
icebp
xor
cmpsb
hlt
cmpl
push
xor
push
lea
push
mov
and
jo
sub
xchg
fimuls
inc
mov
insl
enter
add
lret
stos
rclb
int
push
and
in
lods
jno
fbld
mov
les
out
sub
sub
pusha
in
leave
inc
repnz
neg
sbb
push
cmp
ret
loopne
and
cmp
inc
into
sbbb
jb
sbb
mov
or
jp
outsl
inc
inc
cltd
sub
jecxz
xor
subl
movsb
mov
daa
pop
andl
lcall
insb
xor
cltd
inc
push
sahf
pop
inc
xchg
mov
jl
andl
jne
jno
xor
xor
ror
roll
fidivl
push
gs
mov
iret
push
sbb
jmp
or
cmc
ss
testb
das
shr
push
adc
or
out
xchg
jge
pop
sbb
pop
pop
pop
pop
jge
inc
testb
cmp
jb
ss
and
add
mov
jl
inc
inc
lock
andl
adc
pop
cli
sbb
and
push
add
inc
or
cmp
pop
mov
cmp
loop
and
xor
pop
and
push
xchg
dec
outsb
mov
adc
adc
push
xor
add
xchg
dec
adcl
popa
pop
lds
daa
popa
fs
iret
inc
stos
test
mov
fdivrl
rcll
push
mov
cmp
jl
or
cmp
inc
repz
jl
or
shrb
mov
adc
push
pop
jo
xor
shr
pop
add
dec
insb
dec
clc
mov
inc
adc
push
and
in
inc
adc
inc
push
dec
or
inc
mov
jp
shll
jmp
es
pop
pop
fbstp
idivb
jl
xchg
sub
add
and
ret
or
push
sbb
sub
popl
add
cmpb
mov
dec
mov
imul
add
bsf
sbb
testb
jbe,pt
jno
add
xchg
jle
mov
decl
shll
loope
xor
scas
addl
xchg
sbb
addb
data16
push
mov
mov
push
ficomps
mov
mov
scas
push
mov
aaa
dec
jae
lahf
sbb
lahf
inc
add
andl
mov
in
out
and
mov
mov
push
push
lea
adc
popf
mov
lahf
aaa
add
or
add
cmc
data16
popa
xchg
push
push
test
pop
pop
add
mov
je
xor
mov
jne
rol
filds
adc
lods
cmp
jne
xchg
push
jg
pop
adc
call
stc
imul
push
mov
stos
pop
les
push
mov
inc
jo
inc
addl
mov
push
fs
pop
nop
jmp
sbb
sbb
mov
push
xor
lods
ret
push
pushf
xchg
inc
xlat
adc
int
or
aad
test
sbb
or
adc
add
inc
ljmp
test
loopne
pop
mov
pop
push
bound
stos
sbb
roll
adc
pop
andb
sub
mov
ret
jmp
repnz
inc
ficoml
fwait
out
fisubl
jmp
nop
push
push
lea
pop
xor
mov
subb
in
mov
cwtl
inc
push
rcr
sub
dec
aad
fcmovne
clc
loop
je
mov
dec
and
sub
jno
dec
xor
cmp
mov
or
out
sarl
jno
xor
addr16
xor
mov
push
jbe
nop
add
sub
sub
out
and
lods
xchg
mov
inc
inc
dec
enter
loop
rorb
js
xor
in
add
inc
mov
movsb
adc
call
jp
inc
cmpsb
daa
add
or
inc
inc
xchg
push
adc
or
mov
ss
imul
jmp
xor
js
add
mov
sti
pop
dec
cs
sbb
sbb
and
or
mov
aam
scas
cli
pop
pusha
test
jbe
mov
push
mov
jl
pushf
pushf
add
inc
je
fbstp
es
and
pop
clc
xor
or
cli
loope
push
in
ret
mov
mov
mov
pop
mov
or
jae
lods
mov
jo
push
bound
add
cmp
fdivrs
orl
jne
inc
xor
xchg
add
data16
mull
jb
add
test
jo
dec
insb
add
jle
add
mov
aam
mov
sub
sbb
cmp
jp
mov
clc
or
jge
mov
add
negl
es
cmp
sub
mov
pop
mov
lcall
mov
movsb
stc
mov
pop
push
shll
pusha
fs
lods
das
add
movsb
pusha
or
xorl
pop
and
aas
cli
mov
test
inc
lods
jbe
jae
mov
cmpl
push
and
sti
or
aas
in
movb
inc
in
jg
lahf
out
sbb
pop
adc
inc
insb
shr
inc
add
mov
loop
adc
pop
xor
push
cmp
mov
movsb
out
mov
sbb
jecxz
cmpsb
stos
pusha
insb
std
mov
decb
sbb
dec
fucom
pop
xchg
rcr
js
jb
pop
pop
inc
mov
lock
test
and
sbb
ficompl
clc
mov
les
inc
je
push
lock
jne
aaa
push
push
pop
adc
jbe
rclb
fsub
xchg
cmpb
jo
sbb
out
jnp
jge
push
lahf
jne
je
mov
mov
lods
adc
sub
jb
icebp
add
and
xchg
and
sbb
pop
xor
and
mov
inc
sub
dec
scas
in
xor
xlat
or
pop
cld
jecxz
adc
push
sbb
out
movsl
addl
insb
pop
cmp
sbb
cmpl
mov
jg
call
in
nop
or
adc
adc
movb
cs
mov
mov
push
sub
je
fadds
xor
xor
sbb
daa
test
pop
test
add
add
dec
add
rcrl
push
pop
mov
ljmp
inc
mov
jle
xchg
pop
adc
inc
aaa
jbe
cmp
add
mov
int3
dec
sub
xor
cmp
add
xchg
addps
testb
jo
dec
in
pop
fidivs
cwtl
aas
or
ja
cmp
pop
mov
add
je
push
jmp
out
roll
movsb
or
and
dec
pop
call
mov
push
dec
mov
sbbl
push
out
mov
xor
call
cmp
dec
mov
ljmp
pushf
pop
push
jmp
les
or
xchg
xor
lea
test
inc
jo
in
push
push
popa
mov
push
ret
rclb
jne
loope
push
push
push
adc
stos
ret
pusha
mov
or
pop
les
dec
lret
mov
test
loope
or
pop
nop
fwait
lea
lahf
sub
outsb
pop
cmp
data16
mov
push
mov
mov
pop
mov
out
pop
and
xchg
xchg
test
pop
dec
jmp
insb
pop
testl
mov
and
sub
ret
inc
mov
dec
or
dec
or
arpl
dec
or
sbb
or
ret
fdivrl
jmp
test
add
and
arpl
dec
fmull
fs
adc
lea
jp
into
addb
push
push
sbb
nop
push
pushf
and
pushf
mov
int
je
fbld
into
add
or
pusha
xchg
mov
cmp
rcll
mov
jge
enter
mov
push
add
pop
jecxz
hlt
and
iret
dec
pop
lcall
mov
and
shlb
loope
bound
jmp
in
mov
push
mov
outsl
rolb
jae
push
push
or
jae
movsb
fdivrl
sbbl
sub
sbb
push
in
or
les
aas
mov
in
mov
rcl
push
rorl
sbb
dec
sbb
sbb
push
or
pop
aas
inc
scas
xor
mov
sbb
es
push
jae
add
int
cmpl
mov
push
shlb
cwtl
inc
filds
sbb
inc
and
fisubrl
lods
push
jle
lods
xlat
add
idivl
lods
push
inc
lret
mov
xchg
shlb
shrb
jno
mov
lret
push
in
xchg
cmp
mov
sti
xchg
cmp
xor
mov
dec
sbb
cmp
xchg
cmp
or
cwtl
or
push
ret
lods
add
pop
in
fcoms
or
push
xor
xchg
mov
inc
push
push
dec
mov
adc
or
ss
dec
add
cmpsb
jp
sbb
push
lahf
dec
les
xorl
testb
dec
add
sbb
add
cmp
addb
pop
scas
test
pop
push
imul
push
and
mov
jecxz
stos
in
jle
insl
cmp
cmpsb
jne
ret
xor
ret
inc
aaa
mov
mov
ja
je
or
je
or
sub
xchg
out
jbe
adc
adc
hlt
xchg
femms
or
ret
cmpl
mov
test
xchg
sbb
or
mov
and
mov
sti
sarb
push
je
push
adc
adc
push
xor
inc
dec
flds
sub
xchg
lds
insl
sub
sub
dec
mov
jbe
call
hlt
cmp
mov
pop
add
mov
ret
and
mov
mov
or
movsl
std
jbe
gs
add
je
adc
or
ret
push
push
rorl
adc
loopne
enter
call
adc
and
nop
or
das
icebp
lcall
mov
mov
dec
or
and
adc
mov
adcl
push
fnstsw
adc
add
data16
inc
nop
adc
in
mov
push
add
mov
in
cmpsb
jnp
daa
or
push
adc
push
sbb
mov
xchg
imul
mov
and
mov
out
dec
or
mov
adc
xor
movl
sbb
adc
push
mov
or
or
xchg
cmp
ss
punpcklwd
pop
fcomps
jnp
push
leave
mov
cli
sbb
push
sbb
adc
fdivrl
notl
xor
ja
sbb
das
sbb
addr16
sub
mov
inc
push
inc
push
jo
test
in
inc
dec
xor
push
mov
hlt
call
movsb
mov
push
enter
cmp
xchg
sbb
fdiv
cmp
iret
test
push
dec
or
fsubl
pop
sbb
stos
stc
test
stos
sarb
rcll
xor
push
push
cmp
jne
getsec
push
cld
icebp
in
mov
xchg
inc
lcall
mov
jmp
jbe
movsb
fiaddl
xchg
add
sub
mov
fwait
int
les
leave
and
cmp
enter
fmul
mov
and
ds
cmpsb
mov
leave
ret
imul
in
leave
add
repz
xor
lret
push
call
sahf
fistl
push
adc
inc
fisttpl
adc
fnstcw
and
ds
jnp
lds
jge
xchg
sub
lods
rclb
popf
ja
xor
lcall
xchg
add
aam
jb
push
xchg
aam
fmull
sbb
jb
cmp
push
nop
cmpsl
leave
xor
adc
les
lods
mov
mov
push
and
jnp
xchg
adc
jl
cmpsb
push
repnz
and
mov
cmp
shll
add
clc
inc
shr
rolb
repz
mov
ret
push
add
imul
lock
jl,pt
in
leave
mov
fstpt
sbb
or
daa
js
pop
jbe
idivl
pop
pop
dec
fisubl
mov
sbb
sbb
push
sub
xchg
rcrb
jle
popa
push
dec
inc
movsb
adc
lcall
rcr
mov
ret
xchg
xor
jo
sbb
jmp
mov
popf
adc
sbb
push
ret
mov
push
shl
dec
test
sub
dec
push
sub
ds
mov
adc
dec
adc
inc
xor
scas
adc
add
pop
mov
cs
jae
pop
call
int
mov
daa
mov
lret
enter
movsl
mov
add
add
cwtl
or
jbe
addr16
icebp
push
lahf
dec
in
sub
mov
pop
xor
mov
lcall
inc
cwtl
mov
je
addr16
fcoms
push
mov
mov
sub
daa
leave
and
loopne
sub
mov
je
and
rol
push
or
nop
into
adc
ret
xor
or
dec
movl
out
ja
add
or
mov
add
jle
lcall
sbb
or
and
cmp
inc
add
sbb
xor
xor
sbb
mov
ljmp
popf
mov
pop
mov
loope
add
aaa
push
xor
or
add
jg
xor
imul
pop
cld
dec
in
insl
dec
push
xchg
cmpsl
shr
clc
mov
lock
mov
pop
incl
rcr
mov
fsubrl
decl
mov
inc
inc
mov
jl
push
xchg
mov
dec
and
push
lea
pop
push
and
rorl
dec
lea
and
imul
pop
test
or
sbb
daa
adc
sahf
repz
neg
sbb
mov
pushf
mov
out
push
add
cmp
nopl
dec
wbinvd
mov
rolb
scas
jge
jl
iret
push
pusha
pop
movl
out
push
mov
xor
jl
push
push
pop
mov
shl
mov
pop
mov
loopne
jae
je
sahf
add
call
into
inc
cmpb
bound
cmp
add
xor
lods
or
nop
mov
mov
add
push
add
add
dec
ror
pop
jg
sti
je
adc
stos
add
and
xorb
repnz
cmpl
mov
push
sbb
inc
and
lock
mov
push
adc
pop
xor
xchg
movsb
dec
sbb
inc
es
les
mov
fstpt
sbb
mov
mov
mov
sbb
call
pop
movsb
imull
xchg
jns
add
fdivs
js
je
cwtl
aaa
xor
test
mov
mov
dec
loope
sarb
sbb
xchg
pushf
cmpsl
fstl
and
push
inc
add
add
mov
pusha
adc
aaa
sub
push
adc
and
setle
orb
jmp
and
sbb
xchg
cmpsl
imul
in
add
sub
cmpsl
mov
lret
addb
adc
xor
ret
lret
je
hlt
jle
push
shl
vpaddsb
test
mov
mov
mov
cmp
sbb
adc
pop
sbb
cmp
mov
mov
mov
lea
inc
loop
test
push
inc
cli
testl
das
or
push
add
fistps
inc
adc
dec
in
popf
icebp
cmp
out
pop
fimuls
cmpsb
or
ss
or
cltd
xchg
stos
popf
fadds
scas
ret
mov
jge
daa
xchg
mov
mov
je
into
hlt
je
adc
adc
loopne
lret
add
mov
jo
sbb
xor
lods
push
adcb
cmp
mov
cmp
mov
sub
fs
jp
jp
je
cmp
push
fisttps
push
mov
jno
add
push
jbe
in
dec
bound
xchg
dec
add
mov
and
add
mov
fisubl
dec
dec
hlt
add
pop
je
or
add
or
push
cmp
rolb
clc
and
mov
inc
cltd
adc
lods
dec
aaa
mov
mov
lret
add
xor
lods
sub
dec
sbb
ret
dec
leave
decl
fisttpl
fs
adc
add
sub
cmp
sbb
push
push
jo
ficoms
and
pop
pop
lret
mov
mov
jle
dec
push
add
hlt
adc
and
mov
lock
aas
mov
icebp
lea
push
add
or
add
xchg
outsb
push
out
popa
in
mov
or
mov
es
enter
mov
cmp
addr16
les
dec
fldt
adc
mov
mov
sbb
lods
cmpsb
stc
fsubr
push
outsb
sub
dec
or
je
adc
addr16
int
or
mov
das
add
sbb
popa
or
fcmove
jns
loopne
xchg
and
cmp
and
sub
andb
push
mov
iret
lret
xchg
adc
pop
or
sbb
and
fs
lods
and
pop
mov
clc
add
lea
pop
or
xchg
add
test
push
jbe
mov
xor
cmp
je
xchg
and
mov
add
xchg
or
and
in
xchg
cmp
xchg
lahf
xchg
movsb
cmc
sbb
addr16
cmp
mov
or
repnz
fwait
enter
mov
and
inc
xchg
aam
dec
jle
cmp
or
jb
in
subb
sub
xchg
gs
das
outsl
rorl
inc
dec
xchg
hlt
movaps
xchg
cld
adc
sbb
daa
push
sti
or
ret
shrl
cmp
add
mov
leave
outsb
loopne
inc
gs
nop
jp
fs
in
jl
or
push
pop
mov
out
call
push
cs
push
ret
sar
add
dec
sub
jne
push
and
push
int
inc
xor
pop
dec
push
enter
icebp
sbb
mov
out
aam
or
xchg
or
pop
cwtl
add
push
rorb
and
filds
push
fisttpl
mov
jge
lock
or
pop
mov
movsl
mov
nop
push
mov
loop
or
lcall
xchg
test
adc
jmp
lcall
int3
mov
rclb
mov
orl
pop
xchg
shl
clc
daa
push
in
cmp
jl
int
sbb
mov
ret
daa
in
push
in
add
push
inc
or
inc
or
add
aam
dec
push
and
js
sub
pop
and
push
jl
cmp
jmp
jnp
jae
mov
mov
or
out
pop
cmp
jne
jbe
sbbb
adc
pop
dec
xor
fcoml
shrb
xchg
movl
ss
pop
lret
stos
push
shl
ljmp
insb
or
imul
filds
arpl
insl
mov
fisttps
xchg
sub
enter
sahf
xlat
push
xor
aas
enter
jge
inc
shrb
adc
test
negb
push
aam
and
xchg
pcmpgtb
push
test
les
pop
addr16
xchg
xchg
lods
mov
test
xor
hlt
sbb
push
jle
jecxz
roll
push
inc
adc
jno
repnz
loopne
push
sub
mov
lret
pop
mov
fidivs
imul
fsubl
pop
sbb
les
adc
decb
decl
pop
popf
add
jb
popf
jp
scas
insl
lea
cmp
call
mov
xor
push
dec
xchg
movsl
dec
shrl
pusha
in
sbb
dec
push
insb
andb
in
es
sub
test
xor
pop
ret
lock
jns
inc
inc
add
xchg
pop
inc
adc
mov
scas
mov
push
push
out
sub
mov
push
cmp
jbe
roll
scas
cltd
xor
leave
push
xor
xor
loope
push
or
xor
insl
xorb
xchg
jo
or
cmp
lock
and
push
add
add
fcoms
test
xchg
xchg
or
and
push
and
add
xchg
dec
push
or
inc
stc
add
stos
or
dec
dec
stc
add
test
lds
sub
lea
add
mov
cmp
push
inc
lock
push
and
push
mov
add
jmp
leave
inc
and
jbe
subl
cmp
jbe
xor
lea
in
push
mov
inc
inc
pop
inc
adc
stos
dec
inc
push
mov
insl
movsb
inc
mov
pop
jno
pusha
nop
xchg
mov
mov
jo
dec
dec
xor
add
shlb
out
pop
addb
push
mov
inc
fdivrl
add
add
hlt
out
mov
cmp
push
mov
inc
es
lods
inc
mov
test
mov
loopne
mov
add
jmp
or
bound
push
cmp
adc
sbb
jle
mov
inc
adc
adc
aas
and
add
pushf
sub
mov
or
jg
cmc
xchg
add
fdivs
orl
mov
pop
subl
push
jbe
xor
iret
or
es
and
inc
pop
ja
fcoml
mov
movsl
and
or
dec
inc
and
xor
add
xchg
jo
dec
lea
sub
rcrb
cmp
inc
pop
or
arpl
add
arpl
lcallw
aas
xor
add
mov
mov
xchg
mov
in
in
or
mov
xor
lds
adc
movsl
out
xchg
popa
out
sahf
inc
xchg
add
pop
gs
imul
xor
sbb
add
sub
push
push
sbb
std
imul
rol
andl
mov
push
pop
push
out
aaa
rcrb
shl
or
imul
sbb
hlt
fcoml
repnz
push
and
iret
adc
pop
pusha
push
repnz
push
fisubrl
sarl
andl
fcompl
add
add
add
and
fimull
sbbl
mov
shrl
pop
sbb
push
sub
in
movsb
xor
movsl
loopne
inc
pop
mov
clc
subb
push
daa
pop
out
leave
andl
sbb
or
add
cmpb
in
daa
jns
or
and
dec
out
adc
adc
pushl
xchg
or
push
push
int3
testl
cmp
xor
jbe
inc
bound
enter
xor
mov
push
xor
in
sbb
or
pusha
cld
shlb
fsubrl
bndldx
jo
jg
xchg
add
xchg
js
push
aaa
andps
adc
push
sbb
and
push
or
into
sub
ret
add
je
cmp
subb
inc
xor
in
mov
int3
arpl
popa
adc
std
rcrl
adc
push
clc
fisubrl
lock
adc
cld
loopne
jge
lock
call
fs
sub
push
mov
dec
jno
inc
xchg
pop
inc
and
jae
push
jbe
sub
lea
ret
push
fcomp
jle
xor
inc
cmp
jb
dec
incb
push
rcll
fnstenv
mov
mov
sbb
movsl
mov
loopne
inc
les
sbb
jmp
push
and
cwtl
or
gs
push
mov
test
jge
cmp
sub
pop
pop
xchg
xchg
mov
jg
mov
push
sub
cli
jp
inc
in
inc
mov
sahf
inc
call
xchg
add
add
add
leave
cmp
sbb
xor
sbb
in
add
in
mov
ss
rolb
in
sbb
push
pop
xchg
sti
jl
fldcw
mov
test
dec
cmp
arpl
sub
adc
inc
inc
std
outsl
call
mov
leave
and
pop
mov
or
mov
jle
dec
add
jmp
xor
or
data16
jns
push
sbb
out
add
push
mov
xor
push
xor
cmp
mov
xchg
mov
mov
imul
das
das
sub
xor
xor
cmp
inc
les
cld
dec
in
mov
dec
sub
and
add
lods
sbbb
sub
sti
movl
jge,pt
sbb
add
lods
push
addb
movsl
push
sbb
cld
sub
in
jo
leave
dec
inc
add
decl
jo
es
jno
stos
xlat
pop
je
aaa
xor
push
lods
shlb
enter
xor
ljmp
xchg
rclb
pop
inc
sarb
ss
jb
and
sub
icebp
pop
fsubrp
xor
or
aaa
push
mov
xor
or
mov
sbbl
xorb
movb
add
mov
or
js
cmpsb
pop
loopne
mov
jo
jge
sahf
aas
jno
sub
aas
cmpsl
inc
call
or
lods
mov
lea
ret
add
ret
je
sub
cmp
cmp
repnz
ficoms
and
add
or
dec
jno
dec
ljmp
or
xchg
fs
mov
fs
pop
jne
pop
cmp
pop
ja
sub
stos
xchg
mov
jb
dec
outsb
fsubr
imul
sar
rep
bound
ficompl
or
adc
jmp
sub
cmp
cmp
jae
pop
shlb
add
mov
fildll
mov
mov
adc
rcr
imul
mov
aaa
sbb
push
push
mov
ret
push
and
push
mov
xor
loopne
pop
adc
push
xor
inc
sub
mov
xchg
mov
rcll
pop
inc
inc
inc
xor
rorl
mov
jbe
inc
xchg
jo
nop
cli
push
mov
icebp
pop
popf
cmp
flds
sub
rolb
sub
add
mov
jno
and
jb
testl
jl
cmc
mov
mov
ljmp
mov
or
test
push
mov
xor
xchg
lds
push
ja
popa
inc
fcmovnbe
and
insb
sbb
push
rcl
or
lret
push
xchg
cmc
pop
repnz
inc
sbbb
lcall
push
jne
fstpt
push
mov
push
lret
add
jmp
ret
js
mov
push
push
push
movsl
inc
and
shrl
dec
xchg
adc
fucomi
scas
mov
inc
inc
xlat
pop
mov
das
rol
rcl
jbe
jg
je
mov
push
mov
mov
dec
ljmp
mov
mov
addb
ljmp
mov
leave
sub
sbb
mov
fcomps
adc
mov
adc
arpl
insl
xor
and
add
pop
mov
fimull
sbb
js
dec
rorl
pushw
sbb
and
sarb
dec
inc
popa
aas
imul
lods
ret
add
push
mov
sub
xor
or
int3
es
push
insl
pusha
cmc
stos
pop
mov
jge
je
mov
int
sbb
testl
xor
add
mov
outsb
loopne
push
push
mov
aad
push
sub
cmp
pop
cmp
push
test
out
push
ja
mov
and
xor
jo
dec
mov
bound
in
jae
sbb
repnz
gs
rorb
pop
in
jne
mov
jle
in
mov
add
sbb
adc
inc
data16
adc
add
call
cmp
es
mov
xchg
in
xor
mov
cli
add
add
jle
dec
xchg
stos
mov
add
dec
test
jle
mov
sbb
insb
loope
insl
data16
rclb
shrl
decl
pop
cmp
cmp
dec
adc
push
and
sub
adc
cmpsl
outsb
cmp
je
fdivl
mov
adc
xchg
rol
add
clc
jbe
or
add
mov
jmp
push
push
or
lret
dec
inc
lods
pusha
in
je
mov
inc
ret
pop
sub
jecxz
xchg
gs
inc
xchg
pop
hlt
out
push
repz
mov
add
call
adc
push
mov
push
fiadds
add
testb
lea
mov
fdivp
add
add
ror
pop
push
inc
hlt
xchg
or
xor
cmp
iret
jl
cli
add
in
jne
loope
mov
and
fstps
ret
cltd
mov
push
mov
test
xor
push
add
pop
sbb
inc
pop
sub
push
sti
sti
or
sub
pop
mov
loopne
loop
shlb
pop
sub
rclb
sbb
rcrb
or
cmp
mov
pop
mov
sub
dec
popa
nop
adc
adc
ret
pop
shl
push
mov
jno
sbb
enter
arpl
orl
jne
sub
outsb
sar
fdivrs
cmp
mov
push
adc
push
aad
jae
jb
pushl
mov
inc
sbb
into
pop
or
jmp
stos
push
sahf
add
clc
jae
adc
test
mov
and
shl
and
dec
iret
adc
outsl
mov
or
outsl
mov
incb
not
dec
lods
adc
les
out
insl
sub
mov
sub
cltd
in
sub
adc
dec
int
adc
inc
and
xor
test
pop
imul
mov
lods
push
gs
cmp
enter
pop
ret
xor
inc
dec
and
cmp
repnz
sbb
notl
xchg
subl
mov
mov
or
enter
sbb
dec
sub
arpl
dec
or
or
and
insl
cmp
daa
cmp
in
mov
fucomi
mov
fisttpl
arpl
ja
adc
and
jnp
or
sub
xchg
add
sbb
ja
cmp
fidivrl
jmp
outsb
in
nop
and
daa
cmp
out
and
add
shrl
jo
jle
addb
or
sbb
mov
adc
popl
add
push
xor
add
push
pusha
test
pushf
fistpll
inc
pop
jecxz
cmpsb
dec
cmp
mov
add
pop
inc
fwait
mov
push
lods
lea
mov
xchg
insb
shll
pop
adc
shll
out
iret
mov
mov
mov
and
jne
cltd
push
nop
mov
add
nop
and
in
add
jl
pushf
add
nop
add
nop
es
sub
nop
add
hlt
daa
and
add
add
push
enter
sub
jb
or
jmp
push
pusha
cmp
pop
push
jb
inc
push
and
das
xor
or
xor
cmp
dec
mov
mov
mov
fmul
leave
rcrl
cmp
or
pusha
push
cmp
hlt
rcll
out
and
pop
hlt
jge
test
or
sbb
adc
adc
pop
sbb
add
arpl
fadd
inc
mov
mov
mov
or
adc
inc
adc
mov
add
sub
add
imul
or
adc
lea
add
stos
adc
int
sub
stos
cmpsb
jno
dec
ror
pop
mov
pop
pop
pop
call
mov
dec
addl
pop
sub
sahf
sub
test
xor
pop
sbb
fimuls
imul
jmp
int3
mov
xorb
dec
and
popa
sbb
inc
mov
mov
in
and
and
fisttpll
ret
mov
cmp
adc
cmpb
lods
andl
push
nop
mov
rcr
js
ds
pop
push
cmp
mov
add
fsubrl
sub
push
and
leave
lods
cmp
mov
std
fcmovbe
mov
or
and
push
pop
add
lods
pop
js
shlb
and
push
push
outsl
lods
rorb
je
lds
jecxz
pop
add
or
out
add
scas
rorb
jnp
xor
mov
xchg
in
mov
inc
repz
lods
xor
loopne
push
mov
roll
adc
rcll
ja
jne
and
mov
je
daa
add
push
inc
pop
pop
orb
sbb
or
xchg
je
and
xor
ficomps
lea
cmp
xor
mov
xchg
mov
xor
and
pushf
jg
movl
mov
mov
jno
fmuls
xor
jmp
cmp
mov
jecxz
or
push
adc
push
aaa
jmp
jo
cmp
inc
sub
mov
push
jmp
or
ljmp
das
das
xor
sti
jg
mov
pop
adc
fsts
dec
bound
jle
inc
jo
push
inc
lods
lcall
push
xor
inc
pop
sbb
push
fnsave
call
cmp
rep
or
mov
dec
psrlw
or
repz
mov
cmp
add
mov
mov
sub
mov
or
fisttpl
sbb
arpl
dec
movsl
movsb
dec
mov
stc
xchg
or
fadds
sbb
xor
adc
nop
and
iret
xchg
fsubrl
cmp
or
mov
mov
loopne
or
dec
insb
add
or
xor
cltd
jb
xor
cmp
sbb
cmpsb
or
push
mov
jmp
hlt
sub
xchg
lret
add
cld
adc
add
cmp
xor
push
lock
xor
inc
cmpsb
add
or
gs
pop
lock
cld
lock
outsb
pop
cs
call
loope
xchg
push
or
push
nop
iret
dec
dec
or
in
add
jmp
jge
adc
or
fidivl
lock
sar
sbb
sbbl
jb
es
xchg
mov
inc
and
adc
mov
cmp
jl
cmp
jle
cmp
push
fisttpll
clc
jp
or
pop
enter
cmp
stos
stos
mov
inc
cmpsb
cmp
adc
jge
mov
pop
and
jg
daa
sbb
xor
je
cmp
je
dec
ljmp
sub
fdivs
sub
and
sbb
push
enter
dec
test
sub
lcall
add
loopne
rcrb
mov
mov
ja
mov
ja
mov
cmp
sbb
enter
mov
add
mov
jmp
call
add
mov
fimull
fdivrl
inc
pushl
inc
subl
pop
sbb
mov
push
outsl
xchg
rorb
int
xor
xor
pop
or
stos
or
mov
loopne
adc
or
out
fisubrs
call
dec
mov
imul
xchg
mov
sbb
sahf
xchg
or
cmp
flds
xor
sub
or
adc
loopne
mov
fidivs
in
xor
push
aam
and
mov
add
cld
sub
sbb
sub
loopne
sub
pop
invd
sbb
push
or
movsb
je
cs
cs
in
mov
mov
pop
or
sbb
xor
sbb
xchg
loope
dec
push
mov
sbb
scas
pop
lea
push
test
mov
aad
sbb
cmp
pop
es
pop
inc
xor
popa
xchg
and
pop
push
in
jo
adc
mov
push
test
push
or
pushf
flds
push
mov
dec
stos
flds
dec
and
sbb
fldt
test
add
pop
adc
mov
pop
pop
addr16
add
pusha
fs
push
jo
js
and
cmp
sarl
lods
adc
lea
sub
lods
gs
jb
sbb
or
and
xchg
push
lahf
push
cmp
sbb
add
add
inc
push
rclb
in
insb
adc
js
and
jo
or
je
fsts
and
add
mov
or
popf
push
scas
and
xchg
out
sbb
test
inc
loope
add
xchg
add
jno
push
inc
pop
cmpb
rorl
adc
fidivrl
or
nop
pop
rclb
ret
pop
fs
sbbb
inc
mov
and
dec
inc
aam
fs
rclb
sbb
outsl
jne
jecxz
mov
or
les
mov
push
and
xor
imul
and
pop
ret
add
lock
jmp
outsl
por
inc
in
push
movsb
and
add
sbb
sbb
adc
or
inc
jmp
inc
jl
in
lock
fucomi
mov
push
test
lea
xchg
cwtl
insb
pusha
adc
test
mov
or
and
adc
add
mov
stos
das
stos
inc
shrb
mov
ret
sub
js
mov
je
push
push
sub
inc
push
inc
xchg
movsb
orb
das
mov
mov
pop
pop
fisttpl
add
fldl
dec
adc
xchg
sub
xor
and
xchg
pop
fsubrl
dec
sbb
mov
sbb
fildl
mov
mov
clc
and
daa
je
add
fwait
pop
cmp
and
or
inc
push
pop
push
add
pop
sbb
push
push
push
mov
dec
lahf
pop
filds
fildl
fbstp
and
jne
xor
sti
mov
je
mov
jle
dec
add
and
lods
xor
dec
jl
popa
and
xchg
mov
jne
mov
pop
push
push
repnz
jmp
and
pusha
or
jne
mov
je
fldl
sbb
fs
repnz
insb
addr16
fyl2x
xor
sub
fadds
insl
or
aam
push
push
xchg
pop
cmp
xor
fldt
cmp
inc
rorl
mov
dec
dec
add
mov
popl
fdivl
xorb
xor
jp
and
pushf
test
and
cmp
cmp
jl
add
fdivrs
dec
pop
cs
cmp
mov
fs
sub
sub
jle
into
push
mov
mov
nopl
aam
mov
push
sub
xchg
cmpsb
sub
push
xchg
sbb
push
jge
pop
push
add
add
dec
test
inc
push
mov
sarb
push
hlt
jg
mov
cmp
dec
and
je
adc
pusha
pop
mov
sub
out
sbb
push
push
js
adc
orps
or
or
loope,pn
or
cmp
sub
repz
inc
pop
pop
or
sub
lea
add
lret
pop
ret
sahf
xorb
jg
out
and
icebp
jne
push
push
or
push
test
or
pop
lcall
adc
shrl
or
neg
outsb
add
adc
call
mov
xchg
add
orb
add
rcl
xchg
nop
mov
or
in
or
add
pop
push
inc
add
inc
push
int
inc
inc
gs
dec
sahf
aam
adc
lret
pop
add
ja
mov
inc
add
and
push
inc
pop
or
or
and
stos
and
or
cwtl
and
ret
push
cwtl
add
lods
xchg
dec
pop
jmp
frstor
data16
xor
aas
adc
mov
pop
push
orb
pop
aad
jl
outsb
lret
xor
pop
nop
les
push
dec
jmp
mov
lea
fs
xchg
pop
movsb
les
and
shll
mov
push
push
adc
movsb
rcrl
pushf
ljmp
ss
add
sbb
jae
push
add
mov
cmc
and
sbb
push
inc
fstl
add
dec
inc
psubsw
je
hlt
mov
adc
xchg
or
mov
jb
dec
pmulhuw
pop
fdivr
movl
rorl
pop
mull
adc
mov
and
dec
lock
inc
loopne
push
fdivrs
addl
je
fldl
jmp
aaa
push
xchg
push
fstpl
dec
in
pop
lock
push
cmp
cld
cmp
add
bnd
push
divb
or
iret
repz
jne
or
jne
or
xor
or
dec
fldz
cmp
sbb
test
xchg
inc
push
adc
cmp
sahf
dec
or
pop
mov
mov
push
test
loopne
test
and
out
mov
in
pop
pusha
fstpt
lret
lea
fisttpll
jecxz
fsubs
mov
adc
dec
sbb
xlat
pusha
loopne
test
mov
lea
aad
aas
movsl
mov
jg
mov
in
add
inc
cwtl
add
sbb
xchg
xor
cmc
fimuls
adc
movsb
jbe
push
mov
test
push
add
aam
add
sbb
jle
sub
movsb
loop
mov
mov
movsl
popf
dec
imul
pmaxub
dec
mov
cli
lcall
and
mov
pop
sub
rcrb
sub
clc
nop
loop
pop
jbe
fwait
jp
xor
or
or
mov
popa
add
sbb
adc
xchg
add
pop
mov
jbe
test
or
push
jo
sub
pop
push
adc
fists
inc
adc
xchg
jbe
aam
mov
fcoms
and
adc
cmp
pop
mov
add
sbb
cmpsl
sbb
xor
and
enter
rorb
int3
out
push
adc
adc
push
pop
loopne
cmp
addr16
sub
hlt
xor
es
sahf
xchg
add
call
fwait
icebp
pop
or
and
pop
cmp
adc
gs
orl
push
push
sbb
adcb
inc
lods
inc
pop
addr16
int3
test
and
dec
arpl
inc
add
dec
pop
sbb
mov
xchg
jns
sub
push
adc
lods
sti
push
or
jno
fs
mov
repz
mov
xor
adc
pop
adc
enter
xchg
out
add
enter
inc
fmull
int3
adc
xchg
imul
fs
fmuls
xchg
mov
or
leave
enter
mov
adc
imul
xor
call
inc
in
add
rolb
imul
dec
mov
adc
xchg
mov
sub
dec
fsubrs
dec
and
adc
push
sahf
cmp
cmp
gs
inc
add
loope
xor
stc
jne
mov
jle
out
pop
das
fistps
out
test
pop
mov
cli
or
cli
inc
fwait
sub
shll
fcompl
xor
aad
cli
pop
sbb
es
cmp
jmp
xchg
mov
add
mov
fs
add
adc
add
add
pushf
mov
movsb
add
mov
mov
fwait
stos
cmp
jl
enter
mov
shrb
pop
add
xor
add
add
xchg
inc
pusha
pop
lods
ret
test
add
mov
sidtl
add
pfrcpit1
add
test
aad
push
rolb
mull
sbb
pop
pusha
mov
dec
sub
cltd
in
add
adc
dec
movsl
jne
dec
daa
test
fnstcw
fstpt
mov
aaa
inc
ljmp
cmp
xchg
pusha
xchg
pop
fsubl
add
xor
outsb
pop
jmp
add
sub
test
ret
mov
adc
je
es
mov
leave
call
scas
xor
adc
insb
test
jae
mov
and
pop
fnstenv
push
add
psubq
or
out
add
xor
xor
inc
out
in
xchg
push
xchg
sbb
mov
jo
out
arpl
ss
mov
mov
leave
inc
sbb
loope
or
mov
stos
xchg
lods
jno
add
stos
mov
mov
lcall
shlb
cwtl
stos
fs
push
adc
pop
jle
push
rcrb
push
inc
bound
movsb
clc
lret
inc
pusha
mov
or
cmp
xor
imul
aam
sub
popf
pop
push
jmp
leave
dec
push
sarb
inc
popf
add
scas
clc
inc
or
addl
inc
or
sbb
pop
cli
xor
pop
cmp
fisubl
iret
loope
or
adc
inc
sub
test
sbb
push
shlb
inc
sub
cld
sbb
pop
sbb
fs
inc
inc
adc
adc
pop
rorb
mov
sub
daa
shlb
push
pop
outsb
or
jmp
cmp
xchg
mov
dec
lock
or
xorb
rclb
pusha
enter
push
jae
outsb
sub
clc
pop
inc
dec
and
mov
sbb
jo
cmpsb
adc
test
pushf
shll
popa
ror
js
push
shll
cmpsb
pusha
xchg
and
enter
jmp
adc
mov
adc
push
mov
pop
and
sbb
xchg
das
push
lock
xchg
xchg
mov
pop
les
shll
lods
jecxz
stc
es
cmp
cmpsb
push
jle
mov
jno
sbb
and
mov
pop
and
mov
movsl
sbbl
mov
stos
mov
popf
push
xchg
movsb
push
push
pop
jg
xor
add
xor
jnp
sbb
sub
or
movsl
mov
and
pop
and
scas
pop
sbb
movsl
popf
testl
pop
mov
daa
mov
dec
and
mov
mov
aam
movsl
sbb
lds
stos
adc
push
add
jecxz
nop
xor
inc
pop
popf
mov
popa
xchg
push
leave
mov
cmp
sub
mov
cmp
sbb
mov
adc
movsl
mov
sbb
loop
push
sub
loopne
cmp
jae
jp
lock
sbb
mov
stc
adc
inc
xchg
les
rcl
mov
out
adc
inc
ret
inc
mov
imul
pop
push
sbb
or
stos
or
ss
shrl
or
mulb
mov
push
out
xchg
mov
add
xchg
sbb
outsl
popa
xor
xor
inc
loop
lea
or
add
push
or
arpl
xchg
sub
mov
cmp
loop
addl
movsb
fldcw
xor
and
pop
stos
fstps
or
bound
push
call
sti
pushl
pop
jns
sbb
and
adc
sbb
inc
orb
and
movsl
negl
call
inc
mov
xor
mov
adc
sbb
sub
arpl
lock
test
push
mov
fisttps
loopne
sbb
dec
add
ret
dec
dec
jp
imul
cmp
push
xlat
mov
arpl
movb
add
mov
loope
add
lds
add
cmp
fdivr
and
mov
pushf
mov
fucomip
push
cltd
or
adc
and
and
xchg
and
xchg
loope
or
xor
jo
cmp
mov
jge
push
or
addr16
call
add
insl
push
int3
xor
aam
inc
xor
xchg
cmc
inc
mov
adc
ljmp
add
xor
cmpsb
xor
sti
ficompl
das
in
sub
in
or
and
cmp
xor
lods
sub
insl
mov
or
xchg
sahf
xor
sti
pop
mov
and
cltd
mov
cli
cmp
and
cld
adc
dec
and
add
cwtl
sub
test
or
lods
stos
mov
testb
inc
ret
xor
popa
pusha
les
outsl
pop
sbb
scas
stos
inc
loopne
pop
mov
int
fldl
mov
cli
dec
and
negl
test
add
jnp
cld
ds
shrb
cmp
bound
push
dec
ds
sub
and
sub
mov
das
push
jmp
xchg
hlt
pop
and
or
imul
ret
jmp
sbb
mov
mov
sub
in
adc
mov
mov
aaa
in
jae
idivl
jae
pushl
mov
and
fs
addb
sbb
sbb
sbb
loopne
clc
mov
hlt
mov
pop
mov
loopne
sub
test
mov
push
and
sub
mov
enter
add
inc
or
jl
stos
adc
sbb
fwait
cltd
shl
imul
inc
mov
es
sahf
xchg
dec
nop
push
mov
jae
push
pushf
pop
pop
shlb
rcrb
andl
adc
inc
or
jo
pop
enter
rorb
sub
mov
adc
xchg
movsb
jb
inc
movsb
or
rcll
sub
shll
adc
cmp
daa
push
dec
sub
and
stos
mov
push
jp
push
xor
sub
or
sub
imul
cmp
dec
loopne
push
xchg
sbb
lods
and
sub
fwait
pop
dec
mov
and
pop
cmc
inc
in
xor
ret
sub
jp
dec
push
mov
push
xchg
inc
push
fstl
sarb
add
int
fwait
add
inc
cwtl
shl
mov
out
or
mov
add
xor
cmc
sbb
and
arpl
inc
jb
test
fbstp
ficomps
mov
outsl
addb
cmpl
xor
cmp
lea
ret
mov
sbb
daa
lods
outsb
add
es
and
inc
inc
or
sbb
cmp
pop
sbbb
push
adc
push
sub
push
dec
xor
popa
xlat
push
mov
imul
xor
lret
pop
stos
enter
cmp
adc
push
xchg
cmp
jp
dec
xchg
sbb
sub
pop
mov
jo
jnp
insb
outsb
pusha
push
insl
jp
outsb
sub
mov
cs
in
adcl
popf
push
xor
add
and
inc
aad
adc
test
adc
ljmp
ja
and
mov
out
or
sbbb
xchg
sbb
add
add
xchg
sub
pop
testl
shlb
sub
sahf
dec
xor
sub
dec
loopne
add
lock
xorl
mov
test
sbb
xchg
add
push
and
dec
ljmp
ret
imulb
testb
cs
rcll
std
and
jmp
sti
cmc
adc
addr16
and
pop
cmp
push
fxch
adc
popa
in
int3
mov
and
sbb
test
mov
dec
push
add
or
loopne
clc
arpl
xor
outsb
push
addb
lock
pop
add
push
outsb
push
adc
add
adc
dec
push
or
inc
mov
outsl
inc
sub
xchg
and
mov
adc
push
or
mov
mov
and
in
inc
lods
jnp
mov
pop
in
mov
push
test
std
inc
mov
pop
or
mov
xchg
and
scas
pop
or
cmp
movsl
add
rclb
sub
xor
mov
xor
cld
sub
jb
fwait
add
or
mov
movl
add
jne
test
test
inc
cmp
jae
fistl
faddl
adcl
push
xchg
fists
xchg
outsb
aaa
adc
sbb
mov
insb
fildl
jmp
jo
gs
hlt
add
leave
adc
adc
or
pop
sbb
adc
js
pop
pop
aam
shrl
pop
sbb
inc
jl
je
pusha
stc
mov
push
mov
rolb
ret
pop
nopl
lock
jo
add
js
mov
cmp
lcall
xor
dec
and
sbb
push
ljmp
or
mov
xchg
gs
mov
jecxz
push
icebp
xchg
mov
cltd
clc
addr16
pop
sub
cmp
cmp
ret
mov
lret
inc
sub
xor
dec
xor
dec
jno
cmc
dec
jmp
mov
inc
sbb
or
dec
cltd
dec
cld
out
adc
loopne
leave
test
adc
and
cmc
add
ror
pusha
dec
imul
fnsave
or
sbb
add
fnstsw
test
je
rclb
add
cmp
shrl
nop
fadds
rcr
and
push
lea
pop
sbb
aas
or
jb
fstpl
and
insl
clc
push
mov
in
test
cmp
out
out
cmp
xor
sbb
pop
fsubrp
outsl
jns
sbb
shlb
sub
mov
stc
xorl
test
mov
icebp
and
add
push
ror
xchg
sub
and
add
pop
ljmp
dec
je
add
shrl
xor
adc
ss
xor
cmpsl
or
cmp
push
push
out
dec
pop
jle
in
incb
mov
sub
sbb
and
jmp
push
sub
adc
or
adc
or
insl
xchg
pop
xor
jno
pop
addl
lcall
shll
adcl
cmpsb
xor
lret
pop
sub
enter
xor
push
sbb
mov
sbb
mov
cmp
and
push
cmp
lea
stc
add
or
sbb
inc
jbe
flds
pop
je
sbb
repnz
mov
mov
push
sti
xchg
pushf
and
or
mov
pop
ds
sahf
adc
and
sbb
fdivl
ss
mov
pop
ret
in
mov
lahf
push
add
jg
or
push
inc
mov
sbb
js
pop
add
and
pop
scas
jb
pop
push
test
or
das
shrb
add
fnstcw
push
or
sbb
lock
ds
jge
push
ja
push
nop
push
adc
inc
push
into
push
and
pop
or
xor
clc
xor
mov
ret
mov
jne
add
stc
pop
jne
mov
test
cmp
pop
mov
insl
test
push
sub
aaa
mov
push
jns
push
and
and
or
push
mov
xor
aaa
ds
sub
mov
subb
push
mov
or
iret
out
mov
xor
aas
or
lret
inc
pop
or
fmuls
test
andb
mov
push
and
dec
pop
add
push
mov
add
in
stos
pop
sbb
outsb
push
jge
lcall
lret
fsubr
hlt
add
out
sahf
cmpsl
adc
pop
push
sahf
xchg
xor
out
fucomip
decl
sbb
repz
repz
repz
jae
nop
lahf
mov
jae
repz
in
or
stos
subb
scas
dec
adc
mov
bound
xor
or
ds
test
dec
popa
push
inc
jl
mov
xchg
or
or
or
lods
mov
inc
add
stos
test
insl
int
inc
cs
add
xchg
subb
jne
test
addr16
fsts
xchg
lock
xchg
pop
js
and
lds
loop
pop
cltd
mov
fildl
fs
aaa
imul
sub
ds
or
push
mov
js
and
xchg
test
popf
or
cmpsb
nop
and
fdiv
xor
cwtl
and
push
xor
pop
mov
into
cmp
pop
imul
movsl
adcl
mov
js
adc
addr16
mov
or
das
call
es
inc
add
push
and
dec
add
mov
add
or
mov
rolb
roll
aam
jb
xchg
stos
jmp
and
push
add
dec
add
out
addr16
cmp
add
add
add
push
inc
mov
mov
push
enter
add
popf
inc
outsl
loop
mov
jl
adc
sub
aam
push
cli
jle
jnp
pusha
aam
add
aaa
out
xor
cmp
arpl
arpl
push
push
mov
imul
aam
out
rcrl
cld
aaa
cmpl
jb
popl
test
jp
inc
push
nop
ret
fldcw
call
pop
or
movsb
add
or
pop
inc
enter
add
out
adc
rcll
test
inc
jge
pop
adc
adc
lods
dec
mov
cmp
or
inc
movsl
push
push
xor
push
or
mov
and
adc
xchg
pop
leave
repz
or
repz
and
xchg
out
sbb
push
sbb
adc
loopne
pop
jmp
ret
cmpsl
mov
popa
sub
in
push
repnz
xor
mov
add
dec
ds
xor
adc
sub
ret
les
jge
sub
mov
leave
in
sarl
and
adc
jmp
push
inc
and
mov
add
movsl
mov
lods
xchg
or
jns
add
sbb
add
int
sub
and
adc
dec
mov
or
xor
adc
jl
mov
lock
adc
imul
push
sub
in
add
cmp
mov
dec
mov
mov
inc
test
inc
dec
insl
and
adc
add
add
je
in
ret
sbb
orl
add
cmovs
in
andb
add
pushf
or
push
mov
push
loope
aad
mov
mov
pop
pop
inc
or
je
and
movsb
or
loope
xchg
shlb
jmp
arpl
fimull
mov
sbb
xor
add
sbbl
sub
in
lods
xor
adc
mov
lods
les
cmpsl
adcb
adc
adc
inc
stos
mov
add
loopne
pop
ja
pop
rol
xlat
inc
add
mov
sbb
lcall
stc
or
int
jo
or
pusha
mov
je
adc
add
mov
add
inc
sbb
mov
push
test
pop
xor
sub
add
fiaddl
cmp
or
push
mov
leave
xor
push
or
add
add
jns
ffree
in
addb
add
jns
cmp
dec
or
cs
mov
jmp
inc
jo
add
or
sbbb
lret
mov
and
push
pop
sbbb
and
mov
nop
cmp
inc
lea
mov
push
pop
add
or
cmp
xchg
sub
xchg
mov
imul
add
fs
xchg
add
adc
xchg
cld
orb
or
rol
aad
push
push
inc
lods
sub
adc
push
mov
scas
inc
jno
lods
icebp
adc
nop
mov
mov
outsl
inc
add
or
push
dec
mov
jno
cmovp
xchg
or
push
and
lods
lods
dec
push
hlt
nop
cmp
adc
adc
adc
in
scas
inc
mov
sbb
add
sbb
xor
ret
das
add
nop
add
es
add
and
jmp
sub
and
adc
push
push
jnp
push
pop
add
fstl
cmp
xlat
mov
sbb
dec
lods
jg
xchg
stos
pop
test
rcpps
cmp
xor
adc
shll
mov
add
cmp
in
jno
adc
sbb
jge
adc
or
popa
add
or
mov
shlb
xor
add
nop
and
add
cmp
dec
fwait
dec
sub
inc
and
mov
push
mov
mov
jnp
popa
pop
imul
sbb
mov
or
rcl
xor
lods
adc
sub
mov
imul
test
xlat
rolb
push
pop
mov
sbb
add
mov
imul
rolb
add
mov
arpl
rcl
add
and
movsl
das
or
mov
pop
jmp
dec
hlt
mov
ss
jmp
push
push
inc
fmul
dec
or
fmull
fistps
sbb
pop
adc
cmp
mov
clc
push
mov
push
jp
add
nop
add
xor
lret
adc
inc
or
xor
fldl
lret
push
push
push
xchg
mov
lods
pop
adc
sti
in
inc
fstps
cmc
lea
in
pop
popf
movb
push
js
adc
ret
push
in
dec
ret
stos
pop
lods
push
sbb
sbb
rorb
cmpsb
sub
call
or
sub
xchg
add
sub
and
sbb
cld
adc
jecxz
imul
icebp
inc
add
mov
adc
fucom
lea
sbb
or
push
mov
mov
jg
or
sub
push
loopne
rolb
cmp
add
push
xchg
lock
or
and
lods
sbb
mov
ret
aaa
adcl
adc
iret
inc
test
lock
iret
rcr
xor
sbb
xor
pop
insl
mov
pop
dec
gs
add
inc
test
imul
inc
cwtl
movsb
aad
sub
add
fs
sbb
ret
push
push
and
push
mov
pusha
xchg
mov
decl
and
adc
jl
xor
jmp
cmp
jl
movsl
mov
jle
adc
jle
xor
jg
jle
cmp
je
mov
mov
push
add
inc
cli
pop
adc
push
add
mov
push
pop
cltd
idiv
testb
out
ljmp
jno
fdivrl
lret
lret
rorl
pop
push
mov
jecxz
sbb
mov
jne
jp
dec
dec
or
movsb
test
or
sub
mov
add
dec
add
inc
push
in
frstor
stc
push
in
in
hlt
incb
sub
sbb
popf
and
xor
cmp
pop
sahf
lret
inc
mov
dec
fsubrl
mov
and
daa
cmp
aad
cmpsl
rcrl
push
xor
sub
add
fisttpl
inc
push
push
inc
fildll
cmpl
cmp
mov
lret
sbb
push
les
loop
add
dec
fldl
ljmp
xor
push
xchg
aas
icebp
pop
lcall
aad
sub
loopne
push
mov
addl
enter
add
push
je
loope
loopne
cmp
inc
ja
lods
mov
jl
shrb
in
jb
movsl
imul
aam
dec
push
dec
sbb
xchg
push
pop
sarl
clc
lock
pushf
adc
shlb
jl
movsb
rcll
inc
inc
cmp
andb
jmp
sub
cmp
and
aad
lret
sbb
rep
mov
adc
or
xor
adc
ret
loop
mov
je
jg
dec
mov
pop
outsl
test
add
imul
bnd
iret
in
push
pop
push
jle
roll
xchg
or
les
flds
xor
mov
pusha
sbb
mov
shll
xor
aas
bndldx
sbb
lods
jl
shr
nop
push
fsubrs
push
ucomiss
mov
dec
aam
sbb
and
push
in
imul
mov
and
push
push
jb
push
rolb
push
iret
and
pop
inc
nop
and
adc
aaa
pop
jnp
pop
test
mov
outsb
add
mov
pop
es
or
es
cmovo
dec
or
leave
arpl
sub
and
mov
add
jge
xor
xor
subl
dec
orl
add
mov
sbbb
int
sbb
js
jo
fs
xchg
dec
mov
movsb
pushf
dec
xor
and
mov
jl
enter
adc
or
and
push
fsubrp
call
and
sub
popa
movsl
sbb
sub
ds
imul
pushf
xchg
lock
dec
idivb
bound
ljmp
pop
add
adc
sub
int3
jge
cs
inc
push
and
cmp
mov
and
pop
sbb
enter
movsb
fcompl
jg
lea
or
imul
fildl
scas
hlt
in
ljmp
sub
mov
and
push
push
and
vmovss
cmp
mov
enter
cwtl
push
shlb
cvttps2pi
js
sbb
xor
xchg
push
sbb
stc
sbb
enter
pop
xor
int3
loopne
xorb
in
mov
lret
mov
cwtl
bound
add
pop
inc
in
push
jns
orb
and
dec
mov
or
test
jo
mov
xchg
out
or
push
xor
push
pop
popf
ret
xor
rol
xor
movsb
dec
mov
or
cmpxchg
pop
inc
sub
adc
mov
push
aad
adc
push
xchg
mov
dec
cmp
movsb
shr
push
sbb
fadds
push
jno
int3
pop
xchg
adcb
mov
xchg
arpl
pop
movsb
mov
sbb
add
andl
dec
push
adc
ss
adc
lea
inc
sub
mov
xchg
fstl
sahf
inc
push
outsl
xor
sub
fsubrs
sub
rcl
xor
ds
ss
sub
inc
xor
fldenv
inc
inc
pop
loope
dec
pop
add
sub
mov
sbb
add
or
mov
movsb
dec
test
cmp
mov
scas
pop
scas
push
push
roll
data16
jo
jmp
push
sub
gs
mov
shlb
pop
jg
push
shlb
es
xchg
xchg
push
imul
sub
pop
cmc
xchg
je
jno
mov
fldenv
je
shll
and
add
pushf
or
imul
and
sub
pop
pop
shlb
adc
pop
mov
add
pop
mov
dec
xor
or
mov
cmc
inc
add
jge
lret
and
fsubrs
cmp
ja
bound
add
inc
mov
popa
jmp
adc
rcrl
testb
shlb
push
roll
mov
cs
icebp
fbld
cmpb
clc
and
jnp
push
adc
or
add
shrl
xchg
int3
mov
add
add
imulb
fstl
invd
push
inc
add
in
and
in
aad
mov
popf
mov
lret
ljmp
loop
dec
cmpsb
and
mov
shlb
or
mov
daa
inc
je
add
mov
or
and
sbb
add
clc
call
out
add
femms
jne
imul
loopne
push
movsl
stc
xor
sbb
jl
cli
sahf
and
or
mov
jno
fidivrs
add
xchg
xor
cmp
jne
mov
adc
push
add
add
and
mov
test
mov
testb
int3
loopne
bound
mov
ret
cwtl
shrb
sub
adc
fs
subb
push
aam
dec
sahf
data16
or
xchg
mov
pop
xor
and
add
shlb
and
popa
cwtl
pusha
or
adc
fcom
adc
fdivl
mov
int3
adc
cmp
cwtl
inc
shll
je
in
in
xchg
mov
test
shlb
jecxz
cltd
lods
sbb
fisubs
or
mov
ss
add
or
jge
sbb
dec
push
es
int3
adc
push
call
push
in
pusha
push
mov
leave
mov
aam
cmpsb
stos
add
dec
sub
insl
mov
xor
cmpb
ss
xor
adc
fst
xor
inc
movsb
in
adc
cmpsl
push
outsl
je
mov
xchg
jle
jp
inc
cmp
cwtl
jle
gs
test
ds
adc
add
orb
loope
sub
movsb
cmc
sahf
xor
sahf
xor
mov
popa
aam
inc
pop
inc
add
test
add
and
push
and
push
stos
xchg
sub
sub
fildl
ja
mov
ret
jmp
daa
stos
push
push
pop
cmp
stos
pop
sub
cmp
adc
lods
jp
rorl
cmp
in
cmp
push
cmp
sub
pop
dec
cmp
cmp
in
xchg
ljmp
pop
cmp
mov
cmp
pop
ret
xor
adc
xor
inc
push
lcall
add
cmp
fidivl
jne
jl
sbb
add
adc
add
xor
es
inc
pushf
lcall
or
cmp
int
push
rcll
pusha
cmpsl
icebp
pusha
jl
notl
push
sub
jle
ljmp
or
and
push
add
xor
jl
cmp
jne
les
add
xor
jecxz
fimuls
push
xlat
pop
and
add
jo
pushf
cmp
cltd
or
bound
or
dec
or
jns
add
stc
or
stc
and
andl
xchg
and
mov
and
jg
sbb
or
rorl
cmp
in
jbe
add
jo
inc
imul
xchg
in
in
add
push
negl
ret
ret
mov
mov
jnp
push
inc
stos
sub
in
inc
or
and
imul
xlat
jnp
loopne
push
xorb
call
sbb
inc
movsb
roll
adc
in
and
mov
xchg
in
shlb
or
jb
sbb
sbb
or
pop
dec
xor
aad
push
mov
mov
movsb
pop
xchg
aam
push
and
adc
inc
sub
pop
inc
sbb
subb
and
les
mov
cmp
adc
jmp
das
xor
mov
loope
icebp
out
push
or
lds
adcb
fwait
adc
push
lea
mov
iret
adc
push
test
adc
xchg
inc
ja
push
dec
lret
adcb
sub
and
xor
mov
or
add
imulb
cmp
xchg
in
test
add
test
push
popf
pop
cli
add
push
lcall
or
cmpsb
inc
adc
or
cmp
xchg
ret
sbb
lods
loop
add
xchg
test
cmp
movsl
xchg
lea
or
add
cmpsl
xor
inc
push
mov
sub
inc
cmp
xchg
clc
shrb
cmp
jb
pop
add
aam
insb
cld
xor
push
jp
sbb
in
push
icebp
je
add
mov
add
in
sub
iret
xor
in
push
push
adc
sbb
mov
andb
mov
pop
mov
je
pop
popa
mov
jp
mov
xchg
cld
add
xchg
scas
pusha
ljmp
test
addb
mov
pop
in
xorl
jg
jnp
imul
loope
mov
cmp
add
cmp
fldl
or
cmp
jp
fstpl
inc
push
push
inc
ffreep
dec
fcompl
adc
pop
mov
cmp
dec
rclb
add
fildl
addl
add
xchg
cmc
dec
lcall
dec
mov
push
pusha
stos
in
inc
adc
sub
jne
jb
aaa
xchg
testb
jae
mov
cmp
mov
mov
jp
sub
pusha
inc
mov
jge
adc
mov
sbb
adc
fs
push
inc
jbe
out
cwtl
loope
push
arpl
cmp
loope
sub
and
hlt
icebp
xor
std
sub
add
hlt
scas
add
scas
push
push
pop
push
imul
or
dec
es
mov
shlb
enter
loope
test
add
mov
push
sbb
cmpsb
loopne,pn
and
loopne
hlt
push
popa
and
repnz
popf
addr16
inc
test
and
pop
rclb
fs
cmp
call
mov
scas
pop
repnz
shlb
xlat
sub
lret
adc
jno
adc
push
dec
pop
sub
sub
xor
add
loope
pop
push
imul
sub
out
sub
insb
mov
pusha
mov
xor
sub
cmp
add
jns
and
mov
sbb
or
ret
fidivl
jo
fimull
adc
notb
dec
lock
loopne
aam
mov
pop
or
dec
ja
add
incb
mov
into
rcl
jl
and
ds
and
mov
xlat
and
push
mov
or
and
mov
and
pop
ficompl
dec
pop
sub
inc
mov
lea
test
jbe
push
push
add
pop
and
push
push
daa
push
pusha
or
fadd
subb
sbb
dec
pop
dec
adc
rolb
nop
and
cmp
pusha
xchg
cmc
add
fimull
or
sub
xchg
add
cmp
std
mov
pop
movl
or
sbb
rcl
loopne
cmp
pop
pop
loopne
push
fdivrs
popf
sub
mov
add
pusha
adc
lods
fisubl
lods
testl
sbb
push
loopne
jmp
lock
mov
adc
xchg
dec
or
cmp
or
push
xchg
lret
ja
enter
fildll
pop
sub
xchg
pop
add
dec
adc
loop
aaa
mov
mov
movsbl
push
push
jns
jp
sub
inc
or
jns
insb
shr
popa
sbb
jb
adcb
repnz
pop
les
add
push
push
shrb
orl
orb
sbb
xchg
inc
lods
inc
add
pop
cs
push
leave
stos
je
add
arpl
arpl
mov
push
xchg
mov
xor
jp
or
pushf
pop
mov
add
mov
xlat
scas
popa
or
and
inc
sub
paddb
and
icebp
cmp
jne
inc
push
dec
adc
xchg
loope
push
xor
jecxz
mov
sbb
out
rcl
mov
push
sahf
mov
cmp
or
cmp
or
ret
adc
ret
in
stos
and
test
adc
aaa
push
jl
addb
outsl
int
pop
sbb
sbb
or
xchg
push
jmp
mov
lret
push
lods
add
movl
dec
add
lret
cmp
pop
add
xchg
or
adc
std
popf
ss
sti
test
daa
sbb
outsb
ja
in
add
jo
pop
sub
mov
nop
mov
inc
sbb
sub
adcb
jae
inc
cs
xor
gs
in
pop
xchg
push
popf
subb
add
lods
adc
or
in
cmpsb
shlb
and
cmp
je
push
jo
add
pop
ret
imul
pop
pop
add
enter
rcll
jne
inc
imul
adc
adc
jmp
sub
or
push
cmp
rclb
inc
add
jns
inc
inc
sbb
ret
es
adc
lahf
fs
mov
add
and
ffreep
or
fimuls
push
rolb
push
in
and
inc
adc
daa
and
jb
push
mov
and
or
and
inc
inc
mov
push
mov
stos
dec
inc
add
hlt
cmp
and
aaa
mov
and
jnp
sbb
mov
dec
and
push
sbbb
fnstenv
lds
add
das
cmp
rorb
jo
fwait
xchg
cs
aad
jecxz
test
mov
fstps
sbb
out
lods
add
push
jne
push
push
test
sbb
jg
daa
inc
xchg
sub
dec
je
push
sub
shll
or
leave
mov
sub
sbb
add
adc
nop
inc
test
xor
pop
pop
ss
subb
lods
add
popf
sub
jp
adc
mov
out
mov
mov
mov
mov
pop
fs
es
mov
jo
dec
adc
imul
mov
or
xchg
push
cmp
mov
jo
xor
push
jnp
jno
imul
or
rol
sub
adc
addb
stc
and
cs
inc
add
mov
cmpsl
adc
jl
jmp
add
sahf
or
andl
sbb
lock
add
shl
sbb
stos
xor
dec
or
cmp
subb
mov
inc
aaa
mov
xor
push
xchg
daa
pop
and
mov
cmp
ljmp
cmp
pop
jne
mov
out
or
xor
iret
sbb
pop
and
jg
jmp
sub
add
jge
jne
sbb
adc
aam
enter
xchg
add
sbbl
pop
loope
loope
jno
add
pusha
dec
add
mov
and
insb
addr16
iret
xor
lcall
add
mov
je
pusha
jecxz
sub
out
cs
in
stc
je
jle
mov
and
ret
mov
sti
fcmovnu
jbe
test
inc
cmp
pop
aam
sbb
sbb
jbe
incb
rol
push
or
std
cmp
decl
sub
push
mov
sub
sub
scas
sbb
or
cmp
or
clc
jl
imul
jmp
aaa
push
fcoms
roll
or
cmpsb
in
and
popa
xchg
inc
jmp
mov
ret
cs
into
add
adc
inc
mov
adc
and
popa
xor
mov
psubw
inc
jecxz
insl
cmp
dec
nop
into
sub
jns
add
in
dec
loopne
inc
and
xor
sti
stos
cltd
js
je
add
pop
lock
cmpl
cwtl
sarb
jno
loop
adc
repnz
inc
cmp
aaa
jl
icebp
jb
jmp
adcb
and
inc
movsl
pusha
and
ret
ret
dec
mov
fsubl
push
ljmp
sbb
pop
in
ret
mov
inc
fs
mov
mov
loopne
mov
mov
mov
fs
jo
int3
pop
fildl
or
adc
push
nop
lea
add
pop
lcall
lods
pop
pop
daa
adc
sarb
repnz
jle
dec
test
xchg
js
cmp
add
jbe
xor
or
jns
or
sub
sbb
mov
mov
dec
fmuls
sti
jl
insb
mov
test
pushf
adc
and
or
jae
loop
popf
mov
lea
cs
push
adc
inc
push
dec
inc
pop
add
or
fs
mov
adc
adc
pop
sbb
rcll
int3
xor
adc
aad
rorl
dec
sti
ficoms
xor
pop
mov
mov
cmp
aaa
test
pop
fdivrs
push
or
sub
xchg
inc
sahf
push
cmp
ss
cltd
push
mov
xchg
pop
cmp
add
cmp
lds
std
add
push
fucom
xchg
lcall
test
std
pop
popf
jo
lahf
or
shlb
faddl
lea
cltd
sbb
stc
jo
push
nop
xor
push
adc
add
pop
rclb
loope
mov
cld
lret
test
mov
cmp
lea
pop
cmp
xor
mov
in
bound
rcrb
setb
icebp
push
lret
jb
jno
andb
pop
cmp
loopne
adc
gs
cmpl
pushl
dec
ret
imulb
adc
frstor
shll
les
and
push
fimuls
enter
xchg
mov
cwtl
push
aaa
loopw
aas
pop
lea
pop
sbb
push
movb
cmp
fisubrl
and
lea
mov
add
cmp
aam
adc
mov
arpl
cmc
incl
add
mov
fsubrl
adc
jo
cltd
add
mov
ficoml
cmpsb
sahf
outsl
xor
mov
or
pop
inc
bound
push
dec
push
fsubrs
or
inc
popa
test
ret
icebp
mov
enter
xor
push
das
sti
sub
sbb
icebp
jl
scas
in
loopne
push
mov
mov
or
dec
inc
jnp
scas
sbb
js
lcall
inc
loopne
ret
imul
dec
dec
inc
addb
test
xor
dec
lods
cmp
push
aam
cmc
leave
xor
or
popa
sbbl
stos
xchg
adc
fldt
aad
loope
add
lds
cmpl
xor
xchg
xchg
cmp
mov
mov
adc
adc
dec
adc
test
cmpsb
dec
repz
mov
and
adc
push
adc
add
lock
jp
cmc
cs
and
mov
cmp
bound
sbb
mov
dec
hlt
js
push
adc
push
pusha
fildll
push
imul
jl
pushl
es
cmp
imul
out
and
xor
push
cmp
mov
adc
nop
pop
push
sbb
inc
or
sub
or
push
push
push
out
push
push
inc
or
push
inc
pop
jbe
mov
das
cwtl
dec
call
add
int
sbb
sbb
push
and
out
decl
dec
and
aam
mov
sarb
adc
rclb
shll
mov
push
inc
stos
dec
mov
add
add
pusha
mov
faddl
jns
push
mov
fldt
cli
adc
xlat
jge
lea
movsb
xchg
stos
movsl
inc
sbb
ss
clc
push
add
repnz
adc
mov
or
sub
jmp
jmp
call
push
cmp
in
popf
faddl
dec
and
or
outsl
flds
dec
orl
push
in
or
add
xor
nop
pop
jp
inc
jno
lea
push
push
jle
cmp
scas
lcall
xchg
inc
pop
mov
xchg
cli
jbe
andl
jne
cmp
jbe
mov
push
push
push
xor
push
inc
pop
sbb
or
mov
call
sub
jae
lods
mov
rorl
mov
imul
fbld
andl
pushl
xchg
inc
adc
inc
cmp
and
dec
loopne
mov
pusha
cmpl
lcall
push
fsts
enter
sbb
nop
mov
inc
xchg
push
mov
add
test
lcall
sub
mov
inc
mov
add
or
sub
cmp
dec
dec
fidivrs
insl
push
int3
add
bound
pop
dec
add
push
stos
and
add
push
insl
inc
sbb
and
jne
add
push
test
das
inc
jp
and
jmp
je
add
mov
fbld
or
sbb
pop
daa
nop
jne
xor
andl
mov
add
jmp
stc
xor
xor
cmc
test
test
int3
addl
add
adc
push
push
xor
shl
adc
sbb
cmp
dec
sbbb
enter
filds
addl
shr
jbe
out
and
int3
out
enter
xor
mov
adc
jp
adc
int
and
addl
into
sbb
xchg
xor
shrl
ret
hlt
aas
xor
dec
test
and
ret
and
cwtl
and
inc
pop
push
out
imul
lods
push
mov
xchg
stos
pop
pop
iret
push
lea
scas
popa
int3
popf
add
inc
and
imul
in
mov
lock
call
stos
inc
getsec
push
and
sbb
repz
mov
mov
pop
pop
adc
pusha
test
mov
int3
and
sub
int3
xor
fdivrs
sub
pushf
out
xchg
iret
xorb
push
bswap
out
negl
lret
incb
inc
popf
test
inc
daa
jp
cmp
ret
pushf
mov
cmp
test
mov
test
xor
cmp
jge
test
test
loopne
lea
lahf
ja
cmp
dec
add
je
scas
add
insl
jns
sub
mov
jge
lcall
popa
jnp
movsl
loopne
dec
sbb
mov
or
sbb
pop
mov
sbb
cs
lock
mov
test
inc
pop
test
adcb
push
lds
nop
add
test
aas
add
ljmp
aas
push
add
mov
mov
sbbb
xor
add
and
and
lock
orl
pop
add
mov
mov
cmp
pushf
add
js
mov
data16
adc
add
mov
call
sbb
pushf
or
aam
sub
es
mov
pop
mov
xchg
sbb
jo
rcrb
clc
pop
mov
test
push
shll
mov
loopne
mov
mov
adc
cmp
popa
ljmp
div
add
mov
arpl
xchg
bound
popf
sbb
and
sub
sub
dec
insb
rolb
cmc
xor
sub
mov
mov
jecxz
inc
mov
push
rcll
push
mov
dec
or
aam
jne
mov
aas
loope
dec
aaa
out
sub
and
mov
sbb
adc
sbb
sbb
mov
icebp
fsts
outsl
cmpl
xor
jp
xor
jmp
sub
sbb
daa
lret
dec
add
xchg
cmp
mov
out
add
es
into
cmp
jne
push
and
cmp
popf
test
arpl
test
aaa
scas
push
fwait
addb
and
cmp
iret
push
add
loope
adc
jo
lahf
sub
popa
ja
mov
cmp
aas
movsl
pop
mov
inc
rcrb
popf
xchg
add
push
out
loop
jns
call
jp
cmp
cltd
mov
cmp
inc
dec
mov
dec
fdivrp
cmp
adc
push
push
push
call
cmp
inc
push
push
and
mov
and
push
xor
mov
test
jmp
mov
and
lods
lret
or
imul
add
mov
push
push
or
inc
push
or
push
mov
hlt
mov
push
and
add
add
jns
mov
inc
or
scas
pushf
loopne
inc
push
out
addr16
imul
inc
pop
cmp
insb
call
mov
aad
add
or
stc
je
inc
push
sub
push
test
lods
adc
pop
dec
add
dec
nop
add
dec
js
es
cwtl
sub
loopne
cwtl
shrb
aas
push
mov
sub
rolb
push
mov
sub
out
and
call
adc
and
add
mov
push
push
push
vmread
xchg
stos
jno
mov
dec
repz
xchg
push
or
insl
shl
pop
mov
cmc
mov
pop
pusha
push
out
push
sbb
mov
pop
push
movzwl
inc
mov
inc
push
cmp
jbe
insb
jl
cmp
orl
mov
mov
mov
or
push
mov
jne
cltd
cmp
push
ficoms
dec
mov
fstpl
lret
sub
or
lock
ficompl
in
icebp
mov
sub
cmp
mov
ficoml
fcoml
daa
in
jmp
loopne
add
dec
dec
lret
in
jmp
mov
inc
cmp
or
jo
out
jo,pn
test
push
loop
hlt
or
cmp
adc
cmpb
cmpsb
in
adc
stc
inc
cmp
mov
jmp
std
mov
add
cmp
test
cld
mov
mov
add
inc
add
int
pop
insb
push
pop
pop
mov
sti
repz
jo
movsl
movsw
push
cld
movsb
aas
adc
rcl
or
mov
out
lahf
adc
ljmp
or
mov
inc
inc
cmp
jle
movb
lret
mov
push
lea
popf
xor
xor
jg
push
push
push
mov
inc
notl
and
lret
add
movsbl
xor
jmp
ss
push
imul
jb
and
push
cld
or
leave
je
push
push
rorb
lods
fndisi(8087
jmp
sbb
mulb
mov
sarl
mov
pop
push
outsl
sbb
xlat
push
inc
add
mov
or
subl
fistpll
fs
mov
dec
sub
mov
or
cmp
pop
arpl
insl
inc
mov
mov
add
sbb
push
cmp
jg
cmc
dec
adc
xor
adc
out
inc
push
lods
stos
cmpsb
lock
xchg
rorb
mov
loop
mov
push
xchg
inc
mov
and
dec
jp
or
ja
sahf
xchg
mov
mov
push
add
add
push
in
xchg
xchg
xchg
pop
or
or
jnp
or
int
int
jbe
jmp
or
addr16
int
int
bound
jmp
adc
pop
adc
push
adc
int
int
dec
adc
dec
adc
aas
pop
int
int
jmp
sbb
xor
jmp
sbb
int
int
es
and
pop
pop
int
int
jmp
and
or
jmp
and
sub
ret
adc
fimull
push
add
mov
push
mov
xor
sub
mov
repz
mov
leave
cmp
repz
fneni(8087
in
cmp
repz
sahf
out
xchg
or
jns
sbb
sub
xor
cmp
inc
dec
dec
lcall
push
or
add
and
or
push
decl
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
lret
test
or
andb
js
in
inc
mov
inc
push
push
lods
pop
pop
je
xchg
sub
test
cmp
sub
sub
push
push
inc
or
xchg
roll
dec
adc
pop
push
dec
sahf
orb
inc
arpl
inc
movsl
jb
dec
dec
pop
jb
xchg
or
sub
clc
add
in
test
add
push
nop
adc
dec
aaa
test
pop
push
add
push
push
inc
cmp
sbb
pop
sub
push
sub
out
dec
lea
add
adc
mov
out
or
mov
push
test
or
jmp
jno
inc
call
pop
pop
fs
xor
dec
pop
test
inc
sbb
loopne
xchg
xor
adc
mov
adc
das
movsl
adc
mov
add
push
push
ret
js
push
lock
icebp
xor
pop
loopne
or
add
js
call
inc
pop
mov
push
push
pushl
dec
and
cmpsb
or
cmpl
insb
dec
dec
adc
pusha
xchg
gs
mov
test
aam
adc
add
push
in
mov
test
sahf
shl
lea
dec
push
push
push
pop
loopne
push
rolb
or
cltd
lea
imul
sti
insl
and
jmp
mov
jne
and
mov
adc
jne
jno
inc
stos
rdmsr
aas
jo
ss
popa
push
xchg
movw
adc
push
mov
loope
push
add
fadd
sub
sbb
push
mov
inc
aas
sub
dec
push
push
push
mov
xchg
faddp
je
dec
sahf
call
cld
push
clc
or
ss
je
xchg
clc
ror
inc
data16
push
xor
rcll
adc
cmp
cmp
pop
add
add
or
mov
call
add
inc
loopne
cmp
xor
sbb
inc
inc
pop
frstor
jno
cld
in
fnsave
xor
adc
or
insb
pop
pusha
sbb
adc
and
aaa
sub
xchg
dec
ds
pop
ret
and
xchg
sbb
jo
push
xchg
and
or
clc
jne
test
sub
incb
test
andl
dec
mov
add
xor
pop
or
loop
sbb
adc
pop
add
test
inc
sub
mov
sub
add
cmp
lret
int
xchg
lret
push
mov
add
inc
pop
adc
aas
jp
add
cwtl
or
jbe
pop
popa
push
aam
fstps
and
mov
pop
cs
add
fstl
movsl
xor
dec
push
mov
jle
push
jmp
dec
and
pop
jne
add
aad
lods
rorb
arpl
inc
enter
lret
mov
inc
pop
inc
jae
add
scas
loop
jo
rclb
sub
push
stos
push
cs
adc
out
lods
andb
cwtl
rcrl
sub
dec
or
fs
ja
or
fs
xor
mov
dec
pusha
mov
mov
movsl
adc
dec
dec
nop
xor
mov
add
pop
cli
or
jb
lahf
test
sbb
icebp
movsb
push
shll
push
push
and
push
movsb
dec
and
push
and
mov
xor
add
inc
das
ficoml
or
pop
mov
ret
ror
pop
mov
pop
dec
pop
pop
mulb
adc
pushf
sub
rcrb
mov
leave
xchg
or
popf
and
repz
aam
mov
lods
sub
and
push
ret
and
and
loopne
lds
insl
stos
cmp
mov
sbb
sbb
adcb
xchg
popa
add
cvtps2pi
mov
notl
adc
add
mov
daa
or
pop
inc
cmp
adc
les
or
sbbl
subl
sub
lea
in
rclb
pop
or
nop
push
mov
rcll
test
test
add
movb
xor
pop
sahf
adc
shlb
jl
inc
lods
pop
icebp
and
adc
add
fwait
ss
push
loop
push
mov
in
and
sub
push
push
iret
push
incb
xor
jnp
je
xor
shl
inc
add
and
fs
faddl
loopne
cmp
pmulhuw
inc
call
sbb
fwait
movsb
lock
jg
adc
sbb
popf
mov
add
add
or
sub
mov
jecxz
inc
mov
jmp
and
xor
mov
pusha
sub
sub
xchg
dec
xor
cmp
inc
dec
push
adc
andb
cli
jb
pop
fwait
push
aaa
mov
xchg
mov
sbb
xchg
ds
pop
mov
push
cmp
inc
mov
mov
loop
mov
lea
add
cli
add
xchg
mov
xor
sub
or
jbe
or
sbbl
movsb
fs
outsb
push
cmp
jl
sub
lea
cmp
mov
add
mov
or
popf
testb
sbbl
xchg
testl
dec
outsl
std
jmp
push
call
and
popa
xchg
movsb
cmp
in
or
pop
jl
jmp
out
sbb
mov
pop
fisubs
mov
jbe
mov
clc
push
mov
pop
sti
cmp
je
push
push
cwtl
mov
and
and
aas
dec
push
jmp
rcrl
pusha
cmp
xorb
inc
fcmovbe
inc
int3
xchg
or
jae
int
xor
das
sub
daa
insb
je
js
pusha
pop
mov
sbb
fwait
push
imul
sub
lods
sub
sub
jns
ljmp
push
addb
xor
jne
and
sti
jge
push
mov
hlt
cmp
jl
cmp
jle
pusha
xchg
aad
ret
add
sbb
xor
jne
cmp
xchg
cmp
loope
mov
hlt
mov
jnp
ret
mov
iret
sub
push
add
ds
call
movsb
pop
add
adc
js
add
pop
and
sbb
inc
cmpsb
push
icebp
sbbb
ret
pushf
cmp
push
loopne
fsubs
in
jge
fiadds
mov
mov
adc
mov
sahf
jo
inc
pushl
movsl
cs
leave
nop
or
push
jne
pop
pop
cmp
adc
int
adc
or
and
sbb
inc
stos
xor
sub
and
adc
aad
mov
xchg
sbb
mov
shr
and
and
xor
dec
inc
and
fs
sub
xchg
jns
imul
jbe
jne
in
jge
lahf
stos
movb
in
bnd
xor
adc
testl
jg
jg
orb
xor
je
xor
and
jecxz
pop
push
cmp
and
sti
and
adc
fadds
scas
mov
pop
or
rorl
popf
lods
cmpsb
xor
roll
loopne
sub
inc
jge
add
jle
orl
pop
inc
aaa
adc
adc
enter
push
sub
jno
jne
and
push
shlb
adc
mov
addl
mov
sbb
mov
dec
push
jmp
sbb
subl
pushf
jne
xlat
jmp
inc
xor
xchg
rorl
add
sbb
dec
rol
in
add
fwait
xchg
jnp
add
loopew
insl
dec
or
add
pop
mov
dec
pop
insl
mov
mov
push
xor
pop
repz
push
scas
cltd
or
xchg
adc
or
imul
and
jnp
pop
adc
sbb
push
movsl
inc
ss
nop
fnstcw
push
push
outsl
xchg
fst
ret
sub
shl
sbb
cmp
test
sbb
adc
movsb
jne
jno
cmp
cs
out
cltd
outsl
jne
sub
inc
mov
bound
push
mull
aam
xor
push
adc
jmp
std
decl
mov
xlat
fbld
sbb
inc
xchg
imul
sarb
xor
in
pop
add
and
rcll
push
hlt
loopne
testl
lea
add
mov
popa
ret
inc
sub
popa
pop
and
fwait
jmp
rolb
loope
mov
sti
mov
dec
xchg
adc
sti
inc
lret
sub
adc
jp
aam
jl
jbe
add
pop
pop
cmp
add
pop
call
pop
add
lock
mov
add
and
or
shrb
add
pop
imul
xor
xor
or
push
jg
sub
and
sub
and
inc
in
inc
out
scas
dec
and
push
stos
pusha
or
lods
inc
pop
fdiv
lahf
rcr
mov
or
ss
jle
sarl
out
push
in
arpl
mov
iret
push
xor
outsl
adc
in
shlb
rorl
test
filds
or
repnz
push
loope
ret
and
xchg
imull
idivl
mov
mov
rolb
jmp
lret
cs
decl
pop
cmp
jae
and
call
sbb
shr
daa
inc
pop
loop
add
orl
shll
dec
mov
clc
movsbl
mov
std
inc
push
jbe
pop
or
ss
jns
mov
mov
test
fadds
jmp
add
or
lcall
aad
xchg
add
in
adc
push
stc
cmp
inc
cs
dec
add
rcrb
jae
test
lods
mov
iret
mov
mov
mov
dec
mov
dec
pop
mov
dec
push
cmp
inc
pop
adc
xor
sbb
bndstx
cmp
lods
mov
mov
inc
lcall
iret
out
inc
push
adc
je
pop
xor
mov
add
in
sbb
or
shrl
dec
loopne
imul
mov
xor
andb
mov
or
pop
faddl
fldl
push
adc
adc
fldz
fcomp
fnstsw
int
pop
std
dec
and
or
jmp
fstpl
push
mov
hlt
fs
dec
enter
push
stos
dec
js
mov
or
stos
and
add
dec
pop
or
pop
pop
hlt
xchg
hlt
xchg
cld
mov
sti
push
push
ret
mov
stc
and
jne
jge
jmp
loop
sbb
pop
aaa
jne
or
loopne
lret
sbb
fs
mov
xchg
mov
sub
inc
lret
add
jmp
leave
pop
movl
adc
clc
jnp
out
ret
jg
rcr
and
cmp
cmp
dec
and
mov
mov
lea
mov
cmp
and
mov
mov
cld
push
add
or
sbb
test
dec
addl
and
sti
pop
xor
dec
pushf
aad
js
inc
loop
push
add
xchg
dec
push
fcoml
das
int3
test
outsb
or
mov
push
loopne
or
mov
lahf
out
fimuls
enter
dec
jnp
inc
or
int3
loopne
shr
pop
test
movsl
dec
stc
fdiv
add
mov
call
or
aas
enter
std
incl
jle
push
mov
js
inc
int3
push
dec
pusha
pop
andl
inc
xor
mov
jmp
pop
iret
xor
es
or
pop
data16
xlat
xor
xchg
add
arpl
cs
ficompl
push
aam
add
dec
ja
or
xor
adc
or
test
jne
xchg
pop
fistl
pop
xchg
je
xchg
inc
push
lods
adc
cmp
mov
out
pop
push
mov
push
or
adc
push
insl
rolb
es
test
xor
lock
mov
icebp
jecxz
push
popf
mov
jge
dec
fsts
push
fldl
sub
popa
sub
and
sti
and
shrb
add
negb
or
aaa
add
popa
push
adc
jmp
mov
sub
pop
inc
scas
sbb
repnz
cmp
jb
push
or
int
inc
daa
dec
pop
jb
adc
or
out
lret
push
dec
pop
mov
lock
xchg
add
or
lods
adc
sbb
cmp
dec
add
dec
xchg
add
cwtl
stc
xor
in
imul
out
push
das
decb
xchg
lret
push
iret
add
cltd
movb
jne
cmpsb
jno
movsl
xor
shlb
or
je
subb
addb
mov
loopne
std
xlat
push
mov
jp
xchg
pop
or
test
mov
jbe
inc
movsl
cmp
test
sbb
sbb
pusha
or
or
jge
pop
clc
or
mov
pop
data16
es
xor
fwait
mov
testl
pop
xchg
cwtl
dec
mov
xor
int3
adc
xchg
popa
roll
sub
sub
pop
mov
xor
adc
loope
dec
hlt
daa
mov
daa
add
rcl
cmp
aam
adc
xlat
add
in
scas
sahf
cmp
je
xor
push
jmp
and
lret
mov
sub
loop
cmp
dec
mov
and
imul
sub
repnz
fwait
mov
lret
add
lods
adc
fsubrs
movsl
pop
pop
push
mov
sub
jnp
sbb
mov
inc
sub
sbb
add
pop
xor
lret
ss
cmp
jb
xlat
jg
and
xor
lea
outsb
popa
shrl
and
jbe
push
xor
mov
push
push
inc
mov
das
mov
or
sahf
cmp
movsb
mov
jnp
mov
pop
fists
push
xchg
aam
aaa
push
dec
test
mov
ret
add
lahf
inc
or
ljmp
inc
jp
add
or
mov
sbb
test
inc
mov
cmpsb
or
lods
imul
aaa
arpl
sbb
xor
inc
loop
sbb
jo
sbb
iret
call
pop
or
xchg
xchg
arpl
adc
jae
popa
rolb
mov
lods
dec
pop
push
mov
pop
enter
loope
push
imul
push
dec
andnps
shlb
jl
dec
cmp
mov
lds
ljmp
mov
push
mov
std
mov
call
add
andb
dec
and
push
jns
push
or
jo
xchg
dec
loope
mov
and
xor
test
shlb
or
add
pop
push
and
adc
adc
xor
adc
and
daa
dec
pop
dec
addl
cmpsb
xor
push
js
mov
pop
push
insb
sbb
xchg
fstl
push
mov
mov
mov
fisttpl
test
pushf
xchg
and
subb
int3
lea
jp
dec
mov
cmp
test
lcall
ja
pusha
xchg
test
push
sub
test
inc
mov
es
and
mov
inc
cwtl
loope
pop
fmull
mov
add
sub
cmpl
call
inc
or
jmp
jo
jb
or
add
sbb
iret
pop
add
cmp
xchg
xchg
js
adc
jo
xor
push
push
xchg
or
adc
cli
xchg
scas
mov
aam
jbe
inc
adc
sbb
mov
and
push
mov
loop
add
aas
jo
pusha
push
sbb
lock
test
xchg
jge
push
inc
add
movsb
shrl
push
jmp
inc
sub
lahf
into
mov
addl
lods
cmp
mov
rorb
outsl
add
fbld
ficoml
cwtl
aaa
push
add
inc
xchg
test
aad
repz
je
push
adc
or
jmp
fs
rol
add
sub
outsl
js
push
push
jnp
xchg
mov
pop
or
orl
aaa
dec
cmp
lock
mov
xlat
aad
cmp
xchg
mov
inc
iret
sbb
sbb
push
push
pop
test
mov
push
adc
jnp
mov
ds
add
push
cwtl
xor
test
aam
push
jne
mov
shrl
xchg
or
or
orb
pop
xchg
xchg
fmuls
lret
sbb
scas
mov
mov
add
arpl
mov
mov
js
xchg
addb
inc
jle
cmp
fwait
scas
loop
cmp
mov
push
jp
xchg
dec
loop
loop
call
movsl
roll
cmpsl
pop
xor
bnd
sbb
in
mov
inc
sbb
fisubrl
add
sbbb
jae
nop
rorl
pop
xchg
pop
jmp
movsb
repnz
in
xchg
or
push
incl
sbb
or
in
jns
pop
add
add
sub
or
lock
or
mov
ret
add
sbb
mov
and
lret
inc
mov
out
mov
hlt
add
testb
dec
push
mov
or
fsubrs
dec
xchg
or
ja
out
inc
push
or
in
fprem
push
inc
stc
or
test
sbb
cmc
mov
sub
stos
icebp
cmp
incl
jle
dec
ret
push
push
push
sub
js
das
test
imul
addr16
or
xor
adc
out
lcall
push
adc
add
and
outsl
dec
sub
mov
xchg
pop
inc
or
imul
or
in
jl
sbb
mov
in
sub
or
inc
adc
adc
adc
loop
xor
dec
orl
add
repz
lods
and
and
or
adc
fldt
xchg
push
push
dec
in
sbb
sbb
cwtl
xor
and
cmp
cmpsl
imul
data16
jge
or
jno
push
test
pop
out
push
xor
dec
xchg
and
nop
dec
pusha
pop
add
rcll
sub
and
sub
pusha
sti
cmp
xor
cmp
or
mov
in
subb
xor
daa
test
outsb
imul
dec
jo
pop
pusha
push
sbb
cwtl
inc
addb
aad
or
js
mov
loopne
mov
mov
js
push
inc
cwtl
mov
testl
mov
jmp
xchg
testb
dec
or
sahf
fimuls
sbb
push
test
mov
xor
sub
jl
pop
fstl
aad
insl
popf
test
and
xchg
pop
stos
pop
push
in
sbb
mov
movsl
into
addl
aad
mov
push
push
adc
add
jb
cmpb
clc
xor
dec
mov
xchg
test
daa
fmuls
aas
mov
enter
stc
loopne
and
push
xchg
pop
push
lret
dec
adc
pop
bound
mov
push
scas
adc
xor
insl
inc
imul
aaa
movsb
push
mov
jne
jp
sti
fldl
jl
call
push
xorb
and
lret
xchg
xchg
rol
sub
lea
out
cli
and
popf
test
mov
add
into
add
and
adc
xor
xor
push
nop
or
andb
inc
sbb
push
cmp
xor
cmp
sbb
pop
push
pop
inc
insb
add
lods
dec
out
bound
mov
fucomp
dec
js
repnz
incb
push
or
add
cli
jnp
cmp
adc
mov
push
mov
or
mov
lcall
cmp
out
mov
popf
inc
in
and
dec
adc
dec
sub
cmpb
cmp
sub
xchg
test
inc
sbb
xor
adc
dec
sahf
hlt
aas
and
ss
add
dec
lods
mov
add
ja
movzbl
and
test
stos
fs
outsl
sbb
mov
incb
and
scas
loopne
dec
push
jl
mov
lods
pop
test
sub
outsb
adc
jmp
push
mov
rolb
push
push
jnp
cmp
jecxz
sarl
js
push
mov
popf
popf
scas
ret
or
add
daa
adc
and
ret
mov
dec
inc
adc
adc
test
adc
fldenv
ret
sbb
stc
inc
lret
in
dec
nop
outsb
or
sbb
sbb
or
test
or
add
jnp
push
les
push
shll
pushf
jl
push
dec
xlat
hlt
mov
iret
cmpsb
and
mov
cmp
jecxz
hlt
hlt
dec
mov
push
fcmovu
or
inc
cmp
fdivrs
or
or
and
mov
sbb
add
sahf
insb
dec
jo
cmpsb
xor
mov
lea
lock
add
sub
movb
sub
test
fcmove
mov
popa
in
cmp
movsb
or
jg
mov
and
adc
inc
mov
push
xor
aaa
push
ret
nop
pop
js
jns
in
push
js
jb
adc
xchg
pop
loopne
or
test
adc
and
xchg
shrb
test
inc
pushf
nop
push
push
push
clc
mov
negl
out
sarl
lods
movl
push
scas
push
mov
aaa
lea
add
rorb
loopne
sbb
xor
jns
stc
in
rcll
mov
imul
popf
xor
pop
mov
mov
add
out
fucomp
lret
adc
mov
test
sti
loopne
mov
or
pop
cmpb
xor
jae
xchg
jmp
push
pop
sbb
push
dec
nop
pop
enter
and
sub
insl
int3
loop
ss
int
mov
fwait
sub
pop
sub
cmp
mov
mov
and
cmp
cmp
cmp
jne
jp
call
push
jbe
notb
cmp
enter
adc
notb
adc
cwtl
xchg
mov
aam
or
mov
xchg
lret
loope
sub
ja
in
or
or
cmp
movsb
inc
cmp
std
mov
loop
xor
jne
scas
nop
adc
rolb
push
or
roll
or
lret
inc
mov
out
push
mov
push
lea
nop
and
xor
insl
cmc
je
xorb
imul
and
xor
xchg
push
mov
lea
cmp
mov
jns
fimull
jbe
fimuls
mov
pushl
pop
inc
pop
cmp
rcrb
add
pop
add
setg
lods
orl
jle
je
jmp
orb
push
mov
nopl
xchg
or
mov
into
pop
adc
arpl
push
inc
js
push
sbb
add
mov
adc
push
nop
inc
and
shlb
add
icebp
or
test
xlat
lret
sub
cmp
cltd
movsb
stos
lret
pop
rorb
jb
mov
cwtl
sbb
pop
lret
cmp
addb
adc
push
nopl
jle
xor
pop
mov
inc
lods
shll
jne
adc
leave
pop
fisttps
adc
mov
xchg
xor
sub
mov
mov
inc
sbb
sbb
outsl
jns
jnp
sbb
out
sbb
out
inc
or
and
cs
jne
jmp
hlt
scas
push
inc
fwait
mov
sbb
enter
sub
in
add
pop
mov
jns
or
sarb
mov
cmpsb
push
fcomp
xor
leave
ret
jg
les
cmpsl
add
dec
adc
xor
enter
or
sub
nop
or
pop
fdiv
les
test
loop
inc
clc
fwait
shl
or
clc
jns
and
rcrl
or
sbb
pop
sbb
mov
sub
call
jns
loopne
xor
fdivrs
add
outsl
into
add
push
rorb
sub
call
inc
xchg
lcall
adc
mov
popa
add
xor
push
dec
jle
dec
lds
adc
mov
les
shl
push
xor
adc
cvtps2pd
xorb
cmp
mov
push
and
lret
ret
push
add
push
leave
mov
push
pop
dec
movsb
pop
add
dec
mov
sub
insb
gs
or
sub
in
jp
lea
sbb
push
les
aam
jne
xchg
or
ja
xchg
xchg
adc
push
cmpl
test
mov
test
or
jo
jo
cmp
outsb
xchg
sbb
xor
mov
mov
or
rorb
pop
daa
mov
xor
aas
cmp
sub
pop
xor
dec
add
cmp
sub
rol
rolb
and
outsb
push
cld
insb
orb
out
ds
add
pop
sbb
lcall
jp
push
cwtl
sub
data16
fcoms
inc
inc
decl
aad
ret
jg
mov
outsb
nop
mov
fiaddl
push
add
out
je
insl
dec
lea
cmpsl
out
cmp
cmp
push
push
es
dec
xor
sub
sbb
pushf
jge
test
xor
sbb
jb
sbb
adc
ss
mov
mov
ret
sub
mov
xor
sti
imul
pop
rorb
sub
shll
inc
inc
jmp
inc
fs
sub
and
and
cmp
and
add
sbb
mov
adc
lea
test
cmpsb
add
add
jo
jne
or
sub
fimull
fcmovu
stos
arpl
inc
mov
out
mov
sub
loop
jno
leave
and
je
mov
add
mov
das
cmc
sbb
das
add
les
in
cmp
lea
and
and
xchg
cmpsl
aam
xchg
mov
ljmp
mov
inc
push
sti
and
mov
or
int
cmp
xchg
insl
fcoms
and
inc
in
aam
inc
pushf
adcb
xor
movsl
inc
mov
push
jne
sub
cwtl
push
dec
add
in
xor
stos
add
cmp
push
or
and
mov
dec
add
sbb
push
mov
fsubrs
jnp
in
aam
sbb
and
push
shl
add
imul
push
or
sub
lods
add
dec
clc
or
es
mov
xor
adc
imul
or
sbbb
or
inc
inc
push
nop
push
xchg
push
jp
outsb
adcb
pop
mov
orb
jle
xor
fistps
sbb
rolb
push
dec
sahf
and
pushf
dec
cmpsb
mov
shlb
xchg
sub
mov
pop
int3
or
inc
push
sub
mov
enter
add
or
xchg
adc
rcrl
insl
add
mov
mov
cmp
clc
pop
je
lret
loop
outsb
loop
push
rorl
inc
fldenv
inc
xor
xlat
fdivl
test
sti
dec
pop
cmp
add
mov
pop
inc
dec
notl
filds
mov
icebp
push
mov
xlat
xor
mov
test
cmp
sub
and
popa
in
mov
mov
add
push
dec
mov
outsb
loope
mov
test
jl
repz
lods
fsts
addr16
jne
dec
leave
aad
fadds
push
insb
outsb
inc
add
inc
sbb
imull
imul
add
inc
movsb
push
pop
jge
ja
test
mov
incb
outsl
add
test
mov
rcr
adc
cmp
jmp
adc
ret
sysret
or
subb
or
rorb
pop
test
xor
shr
xor
adcb
adc
pushf
sahf
loopne
loope
push
not
loop
movsb
pushf
xor
test
cmp
push
movl
fmull
cmp
jbe
add
add
mov
xor
pop
sar
xchg
outsb
out
and
or
inc
push
push
test
pusha
mov
inc
notl
stc
mov
fxtract
xorb
dec
inc
sub
or
les
pop
sbb
adc
mov
lea
dec
xor
and
add
push
push
add
cmp
lods
dec
pop
and
cmp
sbb
add
clc
push
jge
cmp
adc
sbb
iret
jne
push
add
mov
dec
push
sub
enter
jo
outsl
loopne
xor
les
or
pop
inc
test
and
or
lahf
add
push
mov
popa
adc
out
mov
or
sub
cmp
inc
push
or
xchg
inc
sbb
push
adc
movsb
pop
pop
xor
inc
adc
call
xlat
int
push
fldl
aaa
das
adc
xchg
es
add
pop
cmp
in
mov
ret
out
adc
pop
repz
or
mov
int3
pop
dec
loope
orl
add
dec
cmp
pop
lea
int
add
add
xor
and
stos
or
addl
add
add
xor
lods
fisubs
xchg
addr16
pop
pop
add
pop
filds
sbb
adc
push
push
xchg
filds
add
push
or
and
sahf
inc
sahf
sbb
push
jmp
and
cmp
cmp
iret
out
xchg
sbb
push
adc
std
ret
into
loopne
movsb
dec
cmc
add
insl
jo
cmp
mov
cmp
roll
mov
insb
or
lea
pop
push
scas
or
pop
jo
adc
xchg
inc
add
push
xchg
ret
inc
es
or
aas
repz
adc
mov
and
push
or
pop
in
jmp
push
and
aaa
or
sbb
sub
add
mov
in
les
loopne
push
adc
pushf
fwait
es
mov
and
push
shl
mov
mov
add
bound
pop
cmp
jl
mov
mov
je
fldl
dec
cwtl
push
lock
fwait
mov
xchg
or
leave
and
mov
xchg
jo
sbbb
xor
test
sbb
daa
iret
push
xor
prefetchw
fucom
clc
and
jmp
mov
sub
dec
and
shrl
aam
dec
test
sahf
add
sub
jg
ficoml
cmp
push
push
or
lret
cmpb
or
cmp
cmp
and
rcrl
add
dec
sahf
cs
xor
dec
repnz
jl
test
adcl
fld
or
sbb
aaa
sbb
outsb
push
call
xor
inc
andb
in
inc
loopne
or
pop
pop
mov
sub
adc
cmp
and
mov
xchg
push
cwtl
sub
cmp
xlat
or
xor
or
sbb
shlb
insl
movsb
test
jbe
cltd
fistpl
arpl
gs
mov
push
mov
mov
sahf
add
imul
mov
jne
mov
mov
ret
mov
adc
xchg
adc
js
pop
cmp
mov
enter
xor
int3
fdivrs
inc
pop
arpl
add
push
sbb
test
insl
pop
test
lcall
xchg
add
push
icebp
sub
rcl
addr16
push
or
cld
or
movsb
dec
push
or
mov
out
ss
jl
aad
or
sub
mov
pop
sbb
push
sbb
mov
cmp
lods
imul
pop
and
dec
mov
xor
mov
iret
divl
sub
loopne
dec
enter
jmp
test
dec
pop
add
push
into
std
pop
fwait
and
jmp
scas
sti
loop
mov
push
cmpsb
mov
lea
sarl
stc
call
push
and
inc
aaa
push
fwait
dec
push
and
sbb
push
adc
or
int3
addl
mov
popf
sub
mov
cmp
dec
mov
scas
lods
aas
adc
jmp
sahf
jmp
push
add
sbb
adc
sbb
or
jle
ret
inc
pop
ss
scas
movsb
mov
jno
add
iret
pop
test
and
add
int3
dec
pop
in
test
scas
movsb
dec
sbb
jnp
rorl
into
nop
lock
test
xchg
test
mov
mov
push
push
xlat
xchg
jnp
inc
cli
adc
mov
push
inc
mov
adc
rsm
fsts
sbb
and
pusha
outsl
ljmp
pop
test
ret
jbe
add
data16
mov
sub
in
pusha
xchg
movsl
jno
push
adc
add
pop
bnd
jp
or
jne
in
loopne
scas
inc
dec
xchg
cmp
je
jbe
inc
mov
push
arpl
sub
ja
popl
push
or
and
mov
in
ljmp
jl
cmp
jmp
sbbl
test
daa
adcb
mov
jns
nop
push
in
push
sarl
cmpsl
icebp
fnstsw
jne
stos
stc
xorl
je
mov
mov
loope
and
jp
adc
jo
pop
push
push
fsubl
ficompl
fstpl
das
ds
push
daa
call
out
ret
or
aaa
jno
call
or
or
orb
inc
popf
in
push
movsb
cmp
or
pushf
fs
loop
dec
push
or
loopne
add
push
fisubl
loopne
inc
loop
pop
push
push
gs
mov
or
adc
push
insl
cmp
pop
add
cli
int
push
pop
mov
inc
push
pop
cmpsl
sub
mov
ret
test
push
test
lahf
sbb
loopne
or
mov
add
pop
mov
pop
pop
inc
push
sbb
loope
int3
push
adc
lahf
cmp
mov
xor
hlt
cmp
cs
daa
sub
fs
lret
inc
les
add
push
and
sub
mov
xor
lret
notl
xchg
adc
sub
ds
push
mov
mov
mov
aas
add
lea
pop
sbb
imul
dec
insb
mov
test
cmp
in
adc
mov
or
sub
and
leave
adc
shl
fsubl
cs
adc
adc
jmp
loope
repnz
or
and
or
dec
cmp
or
jl
adc
inc
or
cs
mov
jl
push
dec
movl
ss
add
fisubrl
xchg
loope
lods
dec
stos
clc
rorl
mov
or
push
es
sub
idivb
push
test
jp
fsubs
sub
test
je
or
pusha
mov
sti
adcb
xlat
aad
test
cmp
dec
cmp
xchg
fisubs
sub
popf
xchg
and
fsubrl
sub
and
push
mov
sbb
push
add
xor
or
add
xor
push
test
mov
fcmovu
adc
mov
lods
pop
jmp
jno
and
dec
or
sub
push
dec
push
or
popa
pop
movsl
fdivrl
add
xchg
data16
and
pop
jecxz
cld
pop
adc
add
mov
add
mov
test
bound
mov
add
popa
push
mov
sbb
push
jmp
jg
sub
cmp
and
imull
imul
pop
pusha
jmp
add
add
mov
inc
jl
adc
inc
adc
in
in
leave
movl
mov
or
sbb
andb
mov
sbb
or
mov
cmp
jp
in
or
sbbb
mov
xor
or
repz
push
jecxz
add
jmp
pop
dec
pusha
subl
popf
mov
push
push
hlt
dec
xor
push
push
lock
adc
shlb
cltd
fidivrl
imul
pusha
adc
push
pushf
add
aam
je
or
jle
push
pushl
stos
cwtl
inc
cwtl
mov
dec
push
inc
cmp
or
jns
in
mov
inc
aam
push
push
in
addl
or
or
adc
and
adc
push
sti
je
push
shrb
jp
add
mov
scas
enter
and
jbe
shrb
adc
cltd
jmp
xchg
mov
jmp
inc
int3
adc
bound
pusha
and
movsl
imul
add
xchg
mov
add
cmpsb
iret
cmp
sbb
xor
in
and
adc
or
cmp
stc
pusha
or
mov
cmp
adc
dec
pushf
mov
imul
dec
lret
shrb
push
les
pop
push
cmp
inc
add
adc
add
mov
insb
push
das
add
xchg
test
sbb
jmp
ret
jnp
xor
popa
int3
call
lret
inc
push
insb
push
lock
lds
enter
inc
push
and
adc
mov
arpl
push
inc
shrb
and
xor
hlt
jge
adc
xchg
mov
dec
mov
push
rorl
sbb
or
iret
mov
cmp
movsl
or
test
lcall
xlat
cld
xor
pusha
jno
add
rclb
xchg
xor
ret
add
mov
or
jns
pop
call
loopne
mov
inc
in
push
ss
mov
adc
mov
jnp
pop
mov
shufps
push
out
lds
add
mov
push
fsubrs
rolb
dec
cmc
ret
imul
and
jne
pop
xor
sub
mov
mov
add
mov
sbb
pusha
xor
aam
cmp
cmp
ljmp
cmc
cmp
or
xor
cltd
lock
adc
sbb
mov
adc
add
sbb
movsb
jle
or
jo
pop
lea
or
test
push
in
xor
decl
rol
mov
ror
xor
shr
xor
es
mov
rol
mov
pushl
repz
xor
add
add
add
mov
ror
repz
or
push
mov
and
not
and
xor
add
add
cmpsb
pop
aam
sub
jbe
sti
push
add
mov
ror
mov
push
xor
add
xor
and
and
xchg
add
or
push
aam
xor
and
push
fs
sub
sub
fmull
push
push
or
xlat
ret
sbb
sub
rolb
testl
hlt
add
xor
fsubr
orl
in
or
push
xor
sub
jae
stc
ljmpw
ret
shr
xor
jae
add
push
xor
xchg
xchg
cmpsb
jb
loopne
pusha
xor
dec
shll
in
call
in
shl
in
add
cmp
bound
push
bound
add
adc
aaa
sbb
add
ret
test
call
loopne
push
nop
cmpsb
shl
call
mov
loopne
xor
pop
cmp
aam
cmp
push
xor
push
or
int3
into
fildl
sbb
add
in
push
xor
and
and
lahf
neg
jne
out
iret
or
xor
lcall
push
test
adc
es
adc
inc
jo
mov
push
jo
ficoms
sub
mov
lahf
test
xor
inc
adc
push
cld
rol
xor
jne
mov
filds
cltd
insb
pop
xchg
mov
inc
fadds
pop
jbe
call
or
ret
lret
push
clc
jp
cld
jo
xor
xlat
add
gs
fdivrs
lcall
call
in
shlb
icebp
ret
cld
lret
inc
mov
lods
push
or
xchg
clc
jo
cli
movsb
inc
jo
stos
adcb
sbb
aaa
cmp
test
call
in
je
shr
shlb
sbb
push
roll
xor
shlb
add
inc
lcall
in
add
lahf
jo
add
imul
inc
and
jl
scas
dec
cs
push
dec
or
adc
in
push
xor
es
lcall
adc
test
jae
push
pop
and
int
pop
mov
push
leave
pop
mov
sub
add
rol
movsb
sbb
push
or
or
or
pop
fs
and
nop
pusha
test
sub
xchg
movsl
fcoms
stc
enter
andl
add
fs
or
xchg
fs
xor
lcall
aam
xor
mov
adc
icebp
inc
mov
orb
jne
aad
dec
xchg
fmuls
adc
imul
fidivs
push
sbb
sub
movsb
lock
jno
pop
push
filds
push
aas
pop
add
sub
mov
enter
movb
inc
and
loopne
pop
or
push
aam
cmp
pop
cld
sub
mov
insb
call
adc
loopne
enter
add
push
xor
int3
sarb
xchg
or
rol
and
mov
adc
mov
sbb
in
push
add
jbe
jae
mov
sub
or
mov
fidivrl
add
sub
sub
pop
out
out
sarb
mov
ret
dec
or
mov
outsb
add
pop
or
add
sub
push
mov
jl
sub
jg
or
cmp
jbe
or
test
pop
mulb
rcll
mov
fwait
shrb
jae
push
pop
fadds
rep
or
fildll
and
sbb
jbe
or
mov
push
pop
loopne
ror
mov
mov
xchg
or
xchg
ljmp
mov
mov
mov
adc
mov
imul
inc
and
repnz
aam
sbb
imul
adc
add
dec
rcrb
cld
lods
lea
rorl
shlb
rep
dec
sahf
test
leave
add
testb
arpl
pop
inc
dec
mov
test
inc
adcb
fbld
ret
movsl
test
push
nop
mov
pusha
jns
inc
ss
mov
shrl
loope
cwtl
sbb
add
inc
stos
adc
push
push
lods
das
jno
or
pusha
and
cli
add
xor
jl
xchg
mov
cmp
test
and
adc
or
mov
xchg
lock
dec
add
dec
inc
pusha
mov
mov
xchg
sub
mov
loope
mov
movl
stos
or
push
xchg
sahf
mov
adc
mov
ficomps
pusha
ljmp
mov
sub
push
mov
xchg
add
imul
ret
dec
inc
mov
adc
jns
jecxz
push
sub
and
dec
decl
lds
push
subl
pop
push
dec
popl
or
adc
push
push
sbb
dec
inc
std
jno
push
mov
add
loopne
jnp
adc
xor
or
cmp
add
and
pop
xchg
or
mov
fistl
push
adc
and
add
and
mov
outsb
mov
fwait
into
xchg
loopne
add
add
iret
sbb
dec
jle
es
xor
ss
push
cmp
sarb
inc
sbb
add
push
and
in
setb
or
cld
cld
fcoml
or
hlt
sbb
xor
fildl
cld
imul
sbb
mov
sub
push
adc
xor
push
icebp
fs
mov
push
nop
dec
or
rcll
ret
jo
inc
pusha
push
cmpsb
lds
repz
push
sub
push
notb
dec
and
enter
and
and
lock
out
scas
subb
jae
push
push
and
sub
inc
test
hlt
inc
or
add
sbb
xor
call
jmp
cmp
add
xor
jb
dec
test
or
testb
pop
ljmp
or
insb
loopne
or
ror
pop
xchg
lcall
and
inc
cmp
and
inc
jmp
mov
divl
push
pop
incl
and
mov
and
andb
mov
sub
lret
mov
adcb
mov
jg
je
cmp
push
dec
mov
mov
and
add
push
push
push
dec
addr16
jae
ret
xchg
add
and
aaa
push
and
jbe
adc
sub
push
xchg
dec
clc
adc
inc
scas
cmp
jno
pop
cmp
xchg
mov
test
pop
and
pop
adcl
xor
mov
mov
push
mov
in
in
and
xor
push
add
and
push
dec
push
dec
out
mov
out
jge
xchg
jbe
xorl
xchg
rcll
mov
jmp
mov
movsb
cs
add
movsb
sub
xlat
add
test
jbe
mov
xor
mov
dec
push
mov
in
in
sub
xchg
adc
cmp
jnp
and
dec
add
cli
pop
xchg
addr16
or
push
aas
or
add
cmp
adc
pcmpgtd
rorw
mov
lods
mov
cld
mov
and
pushf
xor
add
mov
std
fists
or
dec
lret
cmpb
lock
fsts
cli
mov
test
jbe
push
push
mov
sbb
mov
dec
hlt
adc
jae
push
stos
jnp
test
sarl
jb
jmp
cmp
aaa
push
and
sbb
movsl
sbb
subl
add
movsw
je
nop
ret
mov
fwait
lods
jbe
fidivl
pop
mov
bound
mov
push
sbb
push
jns
nop
ret
popa
push
push
insb
pop
daa
cmpl
idivb
cli
test
insl
test
int3
sahf
in
enter
push
jne
adc
inc
mov
mov
xchg
loopw
cmp
xchg
adc
leave
orb
adc
xchg
jne
loopne
push
add
xchg
xor
ret
insb
and
aad
and
adc
and
ret
adc
imul
and
lock
mov
inc
jb
inc
sti
inc
stos
ss
lods
sub
cmp
jmp
jbe
sub
add
add
fnsave
outsb
movsb
mov
mov
mov
pop
fstl
ljmp
mov
dec
sub
adc
rcll
or
add
mov
inc
push
cmc
dec
cld
imul
leave
lret
dec
add
scas
push
mov
scas
xchg
jmp
test
jne
pushf
xor
mov
nop
data16
xor
cmp
andl
xchg
add
sbb
sub
xchg
mov
iret
dec
mov
xor
and
sub
or
insl
add
ret
ja
add
sbb
adc
lods
lea
push
inc
jae
inc
mov
cmpsl
cmp
add
adc
push
xchg
jge
add
mov
fsubrl
xor
dec
pop
cmp
les
or
aas
or
je
cmp
fldt
pop
in
mov
mov
push
pop
or
das
mov
push
dec
and
and
jnp
scas
or
or
add
and
cwtl
dec
inc
or
ja
adc
aaa
inc
and
jmp
jmp
stc
ja
ja
ss
cmp
pop
lock
jb
mov
push
mov
rclb
shll
mov
sahf
xor
sub
inc
push
in
insb
add
mov
cmpsb
mov
push
cmp
dec
add
sub
sahf
ss
das
dec
jno
int
jbe
cmp
sub
dec
lahf
mov
dec
xor
rorl
mov
scas
or
push
jae
xchg
mov
dec
xor
pop
ret
jmp
or
mov
xchg
mov
mov
push
or
add
push
add
jns
jo
loope
add
sahf
add
and
adc
pop
mov
mov
inc
cmp
fstpl
inc
cmp
mov
movb
out
lock
jnp
insl
lods
nop
sub
movzbl
adc
mov
pop
cwtl
xor
mov
jne
movsl
insl
cltd
imul
incb
repz
xchg
mov
jnp
enter
adc
xor
iret
adc
repnz
push
dec
add
add
push
aaa
imul
cmp
cmpsb
mov
cmp
je
mov
inc
mov
push
nop
mov
lea
call
push
inc
cmp
jl
push
pusha
sub
mull
mov
or
enter
aaa
ret
push
xor
or
loope
sub
xor
push
orl
in
jne
fyl2xp1
xor
sbb
pusha
add
lahf
add
xchg
cmc
xor
and
sbb
ret
push
das
cwtl
test
pop
or
push
jl
xchg
add
mov
dec
xchg
loope
push
dec
xor
cwtl
bound
mov
add
jne
pop
mov
and
or
rorl
push
fsubs
cmp
push
popf
adc
lock
shr
cmp
push
dec
arpl
inc
cmp
xor
das
ljmp
inc
mov
inc
push
mov
aaa
dec
data16
pop
or
add
or
xor
testb
push
in
and
loope
and
add
mov
outsl
sub
mov
shr
shl
add
loope
shl
xor
mov
mov
or
sub
adc
movsb
mov
pminsw
mov
test
jp
mov
sub
jge
pop
sub
push
fidivrs
pop
add
xchg
loopne
ja
add
or
test
fisubrs
dec
rclb
icebp
sub
pop
or
add
mov
or
pop
add
jge
and
cs
fs
ret
lock
mov
insb
add
call
movsb
addr16
mov
rolb
enter
fs
andl
adc
jl
sbb
int
pusha
or
popf
add
dec
push
lock
xchg
orl
xchg
test
push
mov
cmp
stos
push
ljmp
sub
xor
es
fs
icebp
cmp
addb
aam
sbb
pop
mov
sbb
rcrb
pop
adc
les
or
test
or
add
push
insl
push
ljmp
add
push
jge
repz
adc
xchg
les
dec
jne
xchg
or
push
jo
mov
lret
cmp
jno
push
rcll
and
xchg
jo
mov
loope
mov
sub
xchg
test
mov
sbb
inc
scas
mov
fs
fwait
mov
and
add
push
and
cmpsb
inc
shlb
xor
fsts
inc
aaa
inc
adc
fwait
shlb
dec
sub
add
out
sub
shlb
adc
mov
and
enter
pop
inc
insl
push
pusha
push
sbb
or
imull
push
js
pusha
and
sti
fisttpl
or
xchg
jle
sub
cmp
mov
aas
sarl
mov
add
add
adc
out
xor
dec
sub
xchg
xor
aam
push
dec
xor
push
ret
adc
movsl
dec
stos
jno
jecxz
popf
add
in
rcl
inc
inc
pop
fimull
gs
inc
jmp
sbb
sbb
mov
jmp
jae
loope
xchg
pop
xor
or
inc
cmp
roll
loopne
mov
xchg
push
push
push
les
leave
xchg
imul
adc
sbb
pop
movsb
std
sbb
mull
or
pop
pop
ret
shlb
mov
pop
jmp
rorb
nop
mov
mov
cmp
mov
in
or
test
sub
rcl
ret
cli
bound
xor
fsubrl
cmpsb
sbb
adc
dec
or
push
adc
dec
add
cmp
mov
adc
in
in
or
or
out
inc
push
add
mov
fidivs
int
subl
mov
stos
call
lock
mov
out
repz
sub
inc
or
ret
rorl
and
or
hlt
dec
pop
inc
mov
and
loop
push
imul
ret
adc
mov
mov
inc
ja
mov
out
dec
adc
inc
clc
mov
xchg
xor
ss
cmp
bt
sbb
sbb
mov
lock
jo
mov
lods
push
inc
xor
inc
xchg
sub
bound
sbb
mov
sarl
je
jl
lock
xor
sbb
mov
dec
push
rolb
in
push
das
aas
mov
xchg
push
addb
daa
pop
mov
cmpl
outsb
lock
add
pop
push
js
pop
or
out
les
clc
loopne
pop
mov
pop
push
pop
cmp
push
push
push
adc
xchg
ret
adc
lret
xchg
pop
movsl
adc
in
ret
fcompl
dec
je
lods
fdivr
add
jbe
push
lods
test
loopne
adc
pop
sbb
mov
sub
cmp
xor
add
inc
leave
pop
push
insl
nop
and
and
fwait
jbe
sub
push
adc
and
add
out
cmp
jle
cmpsl
mov
dec
enter
ja
mov
adc
or
cmp
in
push
ret
xchg
cmpsb
push
jecxz
jne
push
in
xor
mov
or
push
insl
sub
in
iret
pop
mov
and
jo
jmp
jne
repz
add
ret
mov
je
in
push
dec
insb
mov
push
mov
insl
or
repnz
insb
inc
or
or
clc
mov
jo
jne
aaa
add
mov
cmp
loopne
dec
add
aas
or
shll
testb
jne
addl
into
scas
fcmovnb
push
or
inc
add
out
cmpsb
xorl
or
insb
mov
adc
ror
dec
add
add
call
clc
and
movsb
cmc
movl
xor
mov
add
add
jo
imul
push
sarl
sbb
adc
adc
cld
divb
aaa
sbb
adc
push
add
push
cmp
xchg
jmp
sub
in
mov
jne
push
adc
add
cmpb
or
pop
sub
xor
addr16
dec
popa
and
movsl
xorb
push
or
cmp
mov
inc
cmp
subl
add
inc
dec
or
loopne
and
jbe
jae
dec
and
icebp
jno
xchg
shr
out
jge
xchg
sbb
dec
ret
adcl
lods
push
sbb
jne
jg
add
adc
xor
in
add
jl
push
stc
or
fisubrs
adc
push
clc
insb
jo
imul
ja
pop
test
jo
adcl
inc
hlt
push
push
mov
ret
data16
sbb
or
inc
mov
xor
pusha
testb
pop
fdivl
jmp
loopne
pop
cmp
add
cmp
jbe
push
push
sbb
push
add
subb
push
adc
in
dec
lahf
pop
mov
sbb
add
lcall
int3
lock
shr
clc
or
testb
or
es
add
repnz
roll
add
in
aas
pop
cmpb
leave
jmp
lea
aam
sar
sbb
dec
inc
and
dec
adc
inc
clc
sub
bswap
lret
into
jne
data16
cmp
pop
push
cmpsl
xchg
adc
stc
jmp
loope
sub
js
dec
xor
mov
jmp
push
dec
pop
pop
xor
mov
sub
push
ficompl
stc
sub
pop
js
jl
pop
or
sub
cmp
jne
push
push
out
std
xchg
ret
pop
mov
testb
add
subb
pop
cmc
sbb
test
jmp
add
jmp
and
dec
push
jne
mov
and
add
cwtl
xchg
lock
pop
clc
adc
ja
sbb
call
push
sub
cmp
ja
pop
push
inc
scas
rolb
sub
mov
gs
or
mov
cmp
aaa
dec
mov
sub
jo
mov
push
mov
or
push
ss
mov
inc
adc
inc
sbb
jl
inc
mov
lcall
mov
jne
adc
fwait
imul
in
adc
xor
loopne
rorb
adc
or
ret
int3
add
inc
mov
sahf
je
mov
dec
jecxz
add
dec
and
add
stc
or
movsb
and
add
add
sbb
push
sbb
test
imul
filds
jb
test
mov
pop
lcall
push
je
jmp
add
nop
data16
add
adc
pop
adc
in
cld
push
adc
cmp
repz
daa
movsl
fildll
jne
popf
add
add
dec
inc
xchg
scas
push
mov
mov
or
icebp
cld
sub
mov
hlt
ret
adc
sub
adc
adcb
or
jmp
ja
loop
or
cwtl
adc
fadds
pusha
dec
adc
ja
or
dec
in
xor
jmp
lods
sti
xor
xchg
mov
cmpl
push
ljmp
or
and
cmp
cmp
adc
cld
add
enter
cs
xor
push
adc
fisttpl
sub
push
lea
mov
cmp
or
and
xchg
and
dec
cld
cmp
sahf
adc
mov
xor
cmp
pop
addb
jl
add
out
jne
insl
jbe
push
inc
std
sbb
push
mov
and
inc
and
lret
jo
clc
aaa
lcall
adc
push
jnp
mov
in
or
cmp
push
push
ss
adc
test
xor
pop
rolb
adcl
lods
inc
jle
ds
dec
pop
rcrl
adc
mov
lock
dec
cltd
pop
ss
xor
test
lds
cmp
jmp
fwait
inc
imul
and
add
mov
adc
fidivrs
and
mov
or
inc
je
push
mov
cli
and
xor
mov
stos
add
js
jp
negl
mov
fbstp
out
add
ja
adc
or
loop
push
ds
jae
das
add
pusha
loopne
sub
cmp
xorps
dec
jl
ret
mov
xor
sti
cmp
repz
pop
cli
push
into
mov
push
xor
xor
insl
cli
lock
ret
push
dec
push
iret
orl
cmpl
js
pop
sbb
ret
xor
dec
or
sbb
cld
mov
inc
popa
vunpcklps
cmpl
les
dec
jnp
mov
push
movsl
in
adc
inc
mov
out
jb
es
pushf
add
cltd
jmp
in
pop
sbb
push
mov
mov
scas
pop
mov
and
cwtl
sub
test
aam
cld
and
jbe
rolb
shll
repz
and
push
mov
loope
push
or
rolb
jl
movsb
jbe
sbb
cmp
push
fisubs
mov
loopne
test
out
pop
jb
cmp
mov
loop
int
shll
jp
push
push
xor
cmp
rcll
je
adc
xchg
push
push
lock
cmp
push
bound
push
push
mov
inc
jmp
scas
xchg
add
and
jne
movsb
xchg
push
cmc
fisubrs
dec
xor
fcompp
adc
in
push
mov
int
jmp
push
shll
xchg
or
mov
dec
mov
xor
popa
insb
sbb
mov
mov
xchg
sub
jne
sbb
out
iret
jne
je
jmp
or
push
dec
push
movsb
ret
jno
push
dec
out
ficoms
or
add
sbb
and
lret
cltd
add
cmp
mov
leave
andl
scas
mov
xor
icebp
jnp
adc
negl
bound
dec
mov
xchg
xor
inc
shlb
and
pushf
es
push
mov
jecxz
js
dec
inc
pop
pop
and
jo
sbb
rclb
jns
add
adc
and
pop
rolb
jns
mov
adc
popa
or
and
in
sub
mov
daa
in
data16
adc
push
dec
push
lahf
cltd
sub
cmp
and
jmp
add
dec
bound
data16
ss
jb
pop
stos
cs
push
pop
in
pushf
push
inc
loopne
lahf
jl
and
dec
push
push
inc
or
or
adc
or
cmp
add
inc
sub
enter
xor
imul
jno
mov
adc
sarl
push
and
cmc
cmp
pop
mov
sub
mov
inc
xor
cmpsl
cmp
dec
or
mov
jmp
adc
out
xchg
pusha
jne
imul
dec
sbb
aaa
jno
outsb
add
and
jnp
mov
and
ret
add
je
movl
and
sbb
mov
inc
sub
or
mov
loopne
jle
rcrb
js
xor
adc
clc
push
dec
add
shrb
xchg
xor
insl
int3
and
xor
mov
jle
add
sub
mov
imul
mov
lea
cmp
mov
and
cld
sti
mov
clc
jg
fs
test
jmp
movq
movaps
sbb
jae
xor
jle
xor
add
lret
je
mov
adc
jge
repz
or
or
fsts
or
pop
push
sbb
in
xchg
ret
adc
jnp
mov
mov
or
mov
add
adc
push
add
adc
add
sub
pop
add
outsb
ret
mov
mov
xlat
xor
pusha
addsd
int
add
fdivrp
fcmovb
sbb
sbb
inc
mov
sbb
lcall
imul
mov
mov
sub
or
cmp
push
movlps
incl
adc
das
cltd
nop
dec
sbbb
push
outsb
rcrl
ret
jge
mov
jge
push
mov
push
push
sub
sbb
es
push
inc
mov
fwait
inc
mov
or
inc
sub
dec
mov
loope,pn
ss
xchg
out
cmp
jb
neg
mov
je
sub
mov
adcl
lahf
out
add
add
or
fimuls
push
rep
mov
dec
ljmp
fnstenv
xor
lret
or
sub
push
pop
adc
aaa
outsb
or
lods
add
shrb
hlt
movsl
add
xor
add
ja
cmp
mov
add
roll
movb
jo
xor
clc
jb
ss
pop
push
pop
and
ret
push
cmovs
mov
idivl
call
enter
or
or
aad
rep
jmp
int3
mov
stos
cld
jb
pop
add
xor
cltd
das
lea
jl
es
or
and
cmp
data16
outsb
mov
mov
or
scas
adc
mov
movsb
mov
jl
add
movl
xchg
inc
add
add
mov
push
jo
push
jns
push
dec
mov
mov
repz
repz
iret
repz
lock
hlt
clc
clc
cld
std
inc
xchg
cmp
add
sahf
xlat
inc
mov
and
lods
push
mov
call
nop
inc
pop
ret
pusha
pop
mov
and
mov
sbb
je
into
jl
cld
sub
leave
adc
cld
out
enter
xor
dec
fimuls
in
daa
stc
sub
ror
jnp
pop
nop
inc
push
push
movsb
mov
int3
jl
mov
add
sahf
inc
push
out
push
and
dec
dec
mov
mov
addr16
add
ljmp
mov
push
in
push
hlt
lahf
cmpsl
stc
cmp
add
or
daa
xor
jns
pop
aaa
sbb
sbb
sahf
out
sahf
adc
adc
or
inc
sahf
out
or
add
clc
mov
or
pop
insb
xor
push
add
and
daa
cmp
bound
call
jbe
dec
or
movsb
mov
and
shlb
mov
jl
pop
mov
fbld
pop
jl
scas
add
idivl
bound
dec
mov
push
adc
outsb
std
sbb
cmp
xchg
add
xor
pop
test
mov
push
inc
shlb
push
mov
jmp
jp
je
mov
dec
jmp
rorl
sahf
mov
push
sarb
pushl
xor
js
loop
sbb
jo
adc
orl
mov
rcr
sbb
je,pn
cmpsl
mov
subb
sarl
mov
push
sbb
es
or
popf
rolb
inc
add
hlt
push
add
lock
adc
sub
hlt
fcomi
arpl
add
add
ds
sub
push
push
inc
nop
and
inc
adcb
adc
xchg
inc
mov
xor
mov
add
xor
out
push
ficoms
mov
or
adc
jne
inc
cmp
push
pop
push
or
xor
ljmp
mov
dec
inc
inc
cltd
bound
push
push
jbe
fadds
pop
and
add
das
and
adc
dec
or
sbb
pop
inc
inc
cmp
cmp
adcb
sbb
arpl
and
jae
dec
adc
push
or
out
cmp
lret
dec
jnp
dec
aam
adc
or
test
ficoms
sahf
or
in
and
push
sbb
pusha
inc
mov
or
addl
and
sbb
aas
inc
hlt
cmp
movsb
mov
into
lret
cmp
dec
dec
add
addb
sbb
clc
mov
cmp
insl
adc
loope
shlb
fstpt
sbb
rorb
inc
pop
call
sbb
rcrl
test
ret
cmp
aam
dec
adc
or
jne
sbb
shl
or
jg
jmp
or
push
icebp
push
add
push
aad
push
lods
cmpl
add
xchg
ret
int
jecxz
dec
int
call
jno
seta
je
sbb
test
addb
subb
in
inc
sbb
out
out
add
orl
outsl
mov
stc
adc
out
adc
daa
mov
hlt
lret
or
inc
xor
leave
sub
jne
or
sub
sbb
or
push
mov
add
orb
push
shrl
and
and
sub
add
inc
cmp
jecxz
out
dec
cmp
jmp
jg
cmp
ja
adc
push
pop
dec
into
rorb
push
sub
pop
or
neg
mov
add
mov
or
add
jmp
or
mov
inc
ds
int
daa
scas
jbe
mov
fisubrl
xchg
adc
sub
add
jmp
mov
jo
jg
dec
mov
mov
dec
dec
mov
inc
cmp
jb
lret
ret
push
jno
pop
adc
jne
or
imul
xor
insl
and
clc
cmpsb
dec
or
inc
stos
xorl
xor
dec
add
in
and
fistpll
sub
jb
lea
cld
loopne
adc
fwait
idiv
dec
and
cld
jne
mov
push
cmp
jne
mov
es
jne
lcall
in
cmpl
out
insl
movl
dec
jmp
adc
repz
cmp
jmp
std
std
jmp
cld
ret
cld
ret
pmaxub
dec
push
adc
scas
jb
call
push
movb
shr
pop
xchg
add
xchg
inc
mov
into
sub
popf
shl
in
popf
scas
or
testb
in
adc
add
dec
xor
sub
pop
ret
adc
add
leave
push
pop
into
aad
cmp
or
or
push
leave
mov
pushf
or
adc
sub
and
sub
pop
or
daa
insl
pusha
xor
jne
mov
cs
stos
add
sbbb
add
scas
into
and
mov
cmp
jg
add
mov
mov
lock
daa
loop
das
jno
outsb
add
jae
push
push
push
popa
or
leave
xchg
cmp
repz
dec
mov
jae
mov
xchg
cltd
mov
xchg
and
jecxz
jle
push
jbe
stos
loopne
pop
div
jb
inc
dec
and
cmp
aas
push
pop
jae
sbb
or
rol
roll
xor
push
mov
loope
pop
cmpsl
pop
add
sbb
sub
aas
adc
ss
mov
pop
inc
nop
jmp
adc
mov
sub
int
mov
inc
dec
sahf
gs
jo
jne
mov
and
add
sub
xchg
cmp
rcll
push
xlat
pop
sub
leave
xor
jp
fwait
lcall
leave
or
hlt
adc
push
mov
mov
jle
cmpl
pop
pop
fisubs
roll
sarb
xchg
xor
pop
rorb
cmp
jne
orl
jmp
adc
jne
js
loopne
sub
in
dec
add
sub
cmp
and
cmp
inc
jnp
push
xor
dec
or
orl
and
mov
insb
adc
pop
jne
dec
add
sbb
add
lds
lock
or
test
dec
clc
sub
mov
jmp
cmpb
fidivs
lret
sub
cmp
ja,pn
xor
pop
mov
dec
adc
sbb
loope
sbb
and
sbb
dec
das
call
sbb
or
inc
or
sbb
lods
mov
jbe
je
cld
mov
add
inc
cmc
mov
nop
test
jne
test
jne
push
orl
ja
mov
in
xchg
jo
cld
jbe
mulb
clc
dec
je
daa
mov
insl
adc
mov
pop
add
into
jae
mov
mov
das
in
bound
test
sahf
lods
sbb
mov
pop
sbb
imul
add
xchg
pop
jg
jmp
push
mov
lret
cmp
je
test
sub
pushf
inc
inc
test
and
imul
cmp
stos
mov
shr
shlb
decb
adc
jmp
jno
jbe
inc
les
add
rcll
mov
and
pop
loop
jne
imulb
jge
testl
adc
push
adc
in
shlb
adc
sbb
hlt
iret
or
shlb
push
mov
inc
inc
data16
outsb
inc
adc
clc
dec
and
aaa
cmpsb
mov
test
mov
cmp
mov
or
push
out
inc
xor
push
mov
mov
mov
push
mov
mov
insb
add
dec
jmp
jb
or
fidivrl
scas
rcr
xor
push
es
push
mov
adc
mov
push
adc
inc
scas
int
push
push
mov
stos
lock
dec
out
push
rorl
ret
stos
and
les
inc
lea
pop
arpl
fcoml
js
fs
add
add
or
and
inc
dec
ret
pop
jb
and
frstor
mov
data16
push
jbe
sub
clc
andl
or
adc
adc
ret
addr16
rorb
mov
sub
or
sbb
rcll
xchg
lock
sub
movsb
add
push
xchg
shl
or
jne
rolb
loopne
je
or
divb
int3
stc
sub
in
push
adc
movsb
jbe
cmp
ss
add
mov
ret
cwtl
mov
add
icebp
and
add
es
mov
mov
mov
dec
enter
mov
popa
sbb
push
mov
jne
push
out
cmp
sub
insb
sbb
sub
nop
sub
jmp
pop
and
push
es
pop
jb
lods
icebp
adc
xchg
push
pop
addb
pusha
push
adc
mov
inc
inc
scas
push
sahf
or
es
jno
push
cmpsb
cltd
ljmp
pushf
mov
das
xchg
sbbl
and
icebp
test
mov
mov
jne
test
call
mov
aam
jge
or
jbe
add
adc
xchg
and
mov
add
push
leave
sub
adc
mov
std
add
xchg
push
clc
push
push
push
orl
jecxz
fisttpl
test
mov
mov
je
inc
stc
xlat
daa
jle
inc
rorl
adc
adc
ja
push
jns
test
loopne
xor
fldl
jmp
sub
mov
ja
ficomps
push
iret
mov
xor
push
pop
inc
xchg
insl
out
xchg
cltd
je
les
sbb
pop
and
icebp
xchg
aad
push
test
push
pop
decl
int3
push
cwtl
or
ds
ds
fbld
xor
or
jb
pop
icebp
and
and
jmp
nop
leave
xchg
mov
push
inc
rorl
in
stos
imul
mov
mov
jl
or
and
jnp
lds
aam
or
fldcw
aaa
nop
inc
push
xchg
mov
mov
pop
xor
mov
shr
iret
xchg
cmp
pop
je
push
shll
mov
and
ss
sbb
add
test
ljmp
sbb
sbb
push
mov
rcrl
push
subl
pop
pop
cld
adc
js
xor
pop
dec
call
sub
push
adc
push
addr16
push
dec
in
sbb
ss
jp
lods
stos
and
xlat
test
dec
pop
xchg
push
add
push
cmpsb
fmul
xchg
sbb
jle
rolb
loopne
mov
jmp
pop
in
insb
mov
xor
push
loope
mov
loopne
push
movsl
in
dec
idivb
test
add
xlat
fistps
imul
and
sub
sbb
pop
jo
dec
pop
sbb
cmpb
or
xchg
frstor
jnp
and
cltd
call
or
cmpsb
jg
out
in
inc
and
fistpl
int3
add
add
test
push
cmp
add
add
or
mov
adc
rcr
inc
add
inc
xchg
test
pop
sub
add
xchg
shrb
xor
pop
popf
jbe
mov
rcrl
add
xchg
inc
loop
data16
out
jmp
fsubrl
add
mov
in
lds
mov
sub
sub
dec
add
push
push
and
inc
cwtl
add
movsl
cmpl
inc
js
dec
pop
fadds
fidivl
mov
push
bound
daa
mov
sbb
test
test
mov
adc
mov
adc
rolb
sbb
sub
mov
movsl
pop
jg
jmp
cmp
das
cmp
adc
jns
in
xor
inc
cld
xor
ss
pop
jecxz
orl
sub
jecxz
mov
push
xchg
lret
pop
mov
or
mov
pop
push
inc
add
loope
test
call
enter
xorl
addl
mov
cmp
xchg
bound
imul
popa
sub
mov
adc
bound
lret
mov
into
mov
mov
adc
outsb
and
xchg
adc
inc
adc
mov
fwait
push
repnz
dec
or
xchg
xchg
xchg
int
dec
mov
mov
pop
jle
testl
add
add
jl
sub
je
fisubl
pop
rcrl
adc
imul
cmp
add
add
daa
add
ud2
add
or
jecxz
dec
add
cmp
cmpb
je
lcall
nop
ja
inc
add
add
xchg
pop
lcall
add
or
add
pop
or
dec
mov
iret
or
sub
iret
enter
pop
or
rclb
loop
or
pop
push
and
or
or
add
inc
or
sbb
inc
ja
push
int
or
adc
iret
enter
adc
sbb
pusha
inc
or
adc
add
adc
sub
adc
repnz
push
nop
adc
adc
enter
push
push
test
pop
push
pop
pop
jns
out
xor
sbb
lcall
sbb
add
pop
push
call
enter
sbb
sbb
add
je
pop
sbb
sahf
push
and
nop
out
inc
pusha
push
push
add
push
inc
push
pop
pop
or
icebp
pushl
add
add
sub
cmp
cmp
test
lcall
bound
daa
aam
mov
repz
call
lods
std
in
push
in
jno
repnz
sub
rol
enter
lea
aad
cmp
add
cmp
mov
cmp
fwait
out
push
outsb
or
jbe
add
call
repnz
call
xchg
add
mov
sub
ljmp
cmp
out
in
xchg
pop
insb
nop
in
in
cltd
mov
add
in
sahf
out
push
inc
push
nop
out
jge
sbb
dec
jae
inc
pop
lock
enter
xor
icebp
repnz
pslld
and
in
out
std
repz
push
push
leave
std
hlt
hlt
rorl
iret
enter
hlt
fwait
mov
cmp
jg
notb
idivl
push
imul
clc
clc
nop
aaa
jb
cltd
adc
inc
stc
add
cld
cli
cli
and
pusha
in
sti
sbb
mov
cld
cld
cld
je
cld
push
imul
add
xor
mov
jns
sub
std
sbb
aad
or
adc
ret
or
or
mov
or
int3
cmpsb
shl
shrl
push
imul
es
jecxz
cs
mov
in
stos
enter
inc
les
mov
push
push
jns
sti
out
out
mov
sbbb
inc
repnz
sti
sub
nop
out
inc
sbb
xchg
pop
insb
jmp
in
add
cli
popf
cli
lcall
out
out
lea
inc
out
cltd
push
lock
das
cli
push
cli
sub
stc
repz
push
imul
xchg
or
push
push
stc
inc
pop
dec
xchg
fstpl
mov
div
pop
fwait
adc
enter
add
mov
adc
out
clc
nop
cmpsb
jb
cmp
jns
pop
insb
sti
cltd
mov
push
in
orl
add
jmp
cmp
and
push
xlat
dec
sub
sub
mov
mov
repnz
mul
pop
mov
inc
repnz
scas
notl
cmp
jg
mul
sbb
imul
or
in
repnz
mull
notl
inc
mov
sti
imul
jb
or
jno
testb
mulb
pusha
leave
xchg
negb
int
out
jno
inc
pop
lret
inc
negb
mulb
andb
pop
lcall
mov
pop
xchg
cmc
pop
dec
pop
and
cmc
pop
mov
cmc
div
idivb
fwait
and
push
add
clc
clc
adc
stc
popa
cmp
mov
inc
pop
lret
and
and
hlt
sbb
das
pushw
data16
dec
scas
mov
jge
jo
push
or
sti
lahf
pusha
adc
dec
fsubrs
ljmp
in
xlat
loop
scas
repz
popa
leave
mov
test
xchg
cmpsb
in
repz
and
and
adc
xchg
pop
push
sbb
jmp
leave
and
mov
mov
sbb
dec
in
in
cmc
scas
adc
and
repnz
orl
sbb
mov
mov
add
divb
icebp
mov
inc
xlat
jb
test
dec
push
cmp
cmp
inc
jb
sbb
add
pushf
mov
ffree
lock
or
push
jno
imul
je
dec
push
lock
scas
inc
add
sbb
inc
repnz
fldl
ss
and
ja
push
add
sub
out
jne
adc
in
cmovno
push
add
add
mov
cmp
add
push
fwait
push
jnp
and
xchg
adc
jne
adc
add
and
add
sahf
and
ljmp
je
inc
mov
ljmp
fcmovnu
pop
push
call
push
dec
pop
mov
insb
jp,pt
ficoms
push
leave
pop
out
sahf
data16
dec
cmp
ss
int
push
lahf
push
stos
pop
int3
pop
xor
jl
out
sbb
mov
sahf
data16
pop
scas
pop
push
repnz
incb
push
or
mov
add
jl
mov
push
in
loope
mov
pop
aam
lock
push
pop
push
cld
pushf
jge
push
push
sbb
fstpt
push
iret
xor
adc
insb
shlb
fs
movsl
pop
fimull
cmp
mov
lea
or
movsb
fdivs
fbstp
cmp
cmp
mov
ja
and
add
insb
mov
or
sub
cmp
adc
sbb
add
add
adc
int3
lea
jecxz
enter
lock
xchg
push
sub
cli
adc
dec
sahf
jge
jb
pusha
add
adc
mov
mov
in
inc
je
lret
sbbl
rolb
js
cltd
sahf
test
lcall
mov
mov
and
ret
and
adc
cmp
inc
jb
pop
and
and
dec
inc
jle
pop
inc
inc
inc
inc
loopne
movsl
xor
cmp
mov
jmp
jb
lret
jp
rcll
push
imul
sub
adc
shlb
iret
mov
std
xor
in
cmp
dec
andl
sub
sub
pop
or
and
dec
add
je
pop
rcrl
sub
in
add
sbb
pop
cmp
jno
jnp
enter
add
xor
orps
sbb
push
dec
pop
adc
dec
dec
shl
push
cmp
pop
loop
shrb
jo
sbb
xor
or
push
adc
fimull
jmp
add
repz
sub
xor
in
cmc
rcrb
or
adc
adc
inc
or
insb
push
stc
aad
iret
inc
xor
lock
ss
mov
mov
inc
inc
cmp
push
jnp
mov
push
jmp
sbb
pop
imul
outsb
out
jns
mov
dec
mov
jg
ret
bound
push
mov
pop
pop
mov
inc
cwtl
ja
stos
les
mov
test
or
mov
mov
filds
push
cmp
testb
xor
and
pop
jmp
inc
popa
cltd
nop
xlat
clc
lods
push
js
dec
add
sti
inc
loope
setnp
shr
stos
add
testb
sub
xor
push
sahf
xor
and
mov
xchg
add
mov
mov
and
hlt
mov
push
xchg
ret
leave
adc
xchg
xchg
ljmp
ret
sbb
filds
sbb
cmp
mov
ret
int
das
add
inc
test
repnz
icebp
std
sbb
mov
incl
inc
decl
jne,pn
loop
adc
and
repnz
mov
jecxz
pop
push
push
xor
aaa
jbe
push
cltd
pop
idiv
inc
or
or
and
imul
dec
mov
mov
xor
and
jmp
adc
jmp
cmp
jae
dec
popf
push
dec
sbb
jbe
dec
loop
out
adc
dec
loopne
cmp
pop
sub
adc
cmc
clc
adcb
push
xchg
push
mov
lret
dec
sbb
add
call
or
sbb
dec
dec
je
push
push
jne
or
cmp
out
xchg
insb
adc
adc
pop
decb
push
dec
repz
dec
test
mov
inc
pop
mov
xchg
inc
lcall
shlb
sahf
and
rolb
xchg
xchg
filds
fs
cmp
mov
mov
xor
add
inc
sub
popa
loopne
pop
out
and
push
adc
fisubrl
pop
ret
mov
inc
sbb
cmc
mov
sbb
and
and
pop
cmp
inc
enter
ja
mov
or
aas
jge
shrb
sub
push
cltd
pop
idiv
int3
pushw
mov
inc
xor
xchg
inc
aam
idivl
out
cmp
pop
mov
adc
xchg
fs
mov
mov
xor
js
cmpsl
enter
mov
imul
test
mov
dec
inc
insl
mov
sbb
sub
mov
mov
pop
movsb
loope
adc
repnz
pop
subb
cmp
and
sbb
or
inc
or
add
pop
out
and
pop
jg
pop
pop
jl
and
sti
cmp
pop
sub
loopne
pop
mov
inc
xor
leave
and
jl
cmp
push
mov
mov
pop
xchg
push
cmp
loope
push
jmp
jge
pop
je
sbb
movl
add
ud2
add
lcall
adc
test
mov
outsl
mov
mov
in
pop
je
dec
inc
or
sti
fiadds
dec
jne
mov
int3
or
dec
mov
adc
mov
test
loop
mov
adc
insb
lahf
pop
xchg
mov
or
call
xchg
loop
fimuls
or
mov
out
aaa
subl
jns
xlat
jl
test
pop
push
adc
mov
rorl
jg
mov
pushf
add
jp
ret
lea
fldl
xor
jb
ret
push
push
mov
xchg
movsb
xchg
mov
js
insl
and
jge
add
push
push
hlt
ret
cmp
sub
add
ja
or
push
loopne
adc
adc
or
out
call
addb
push
jae
bound
jmp
jbe
icebp
push
sbb
dec
ljmp
sbb
xchg
rorb
adc
push
jg
push
pop
and
pop
es
mov
sub
sbb
mov
sbb
sbb
add
jp
adc
out
xchg
aad
mov
mov
add
push
inc
jg
inc
test
in
je
gs
xchg
lods
leave
xor
orl
xor
cmpl
add
movsbl
cmp
cli
adcb
mov
fadds
inc
push
fidivrl
dec
je
popa
inc
sbb
xchg
sub
push
dec
sbb
mov
and
mov
cmp
mov
incl
fdivr
lret
rcr
hlt
push
mov
push
inc
sbb
mov
inc
pop
int3
lret
insb
lcall
mov
pusha
rcrb
bound
mov
out
sbb
or
xchg
dec
ret
add
push
fwait
insb
sub
push
xor
push
nop
hlt
mov
addr16
cld
add
test
adc
sar
test
cmp
rcl
push
mov
in
mov
push
and
shll
pop
jo
or
cmpsb
xor
push
pop
pop
xor
mov
int
roll
add
push
adc
sbb
frstor
mov
subb
mov
daa
iret
es
mov
sub
fcoml
or
loope
fiaddl
fcoms
iret
add
mov
lea
push
bound
jne
jmp
dec
cmp
or
pop
cmp
cs
dec
jmp
dec
les
mov
into
pushf
inc
popf
mov
mov
and
pop
iret
shll
stos
arpl
ret
pop
fs
jne
dec
jecxz
pop
call
fdivs
loope
lcall
xchg
lock
in
out
sbb
mov
adc
hlt
call
movsb
ret
push
aam
lock
jns
and
stos
and
push
test
inc
je
movsl
call
add
fimull
add
push
push
sbb
inc
push
jmp
cmp
rorl
ja
or
inc
inc
mov
sar
sbb
int3
pop
mov
shl
lods
ja
or
subl
movsb
sbb
cmpsb
or
adc
mov
clc
xor
mov
and
jmp
or
pop
shll
inc
jmp
aas
rorb
mov
jb
movsb
jne
cli
mov
pop
inc
mov
inc
dec
test
mov
rorb
jmp
sbbb
sub
adc
adc
pop
push
jmp
aam
out
push
xor
adc
inc
ds
data16
sub
push
test
xchg
fcomp
shlb
lcall
pop
icebp
or
adc
hlt
add
xchg
pop
filds
add
loopne,pt
fdivl
mov
mov
pusha
pop
cltd
in
insl
int3
jo
sbb
loopne
arpl
xchg
push
push
fcmove
lret
fs
sbb
mov
pop
rclb
dec
pop
add
sub
mov
rol
inc
add
icebp
scas
push
mov
cmp
xorl
or
inc
xchg
test
popa
push
push
into
mov
xlat
cld
pushf
jo
sbb
subl
add
jbe
lods
and
adc
or
cwtl
and
sub
fidivs
or
sub
add
les
out
mov
stos
mov
andl
dec
rcrl
or
call
enter
daa
add
push
jp
mov
push
sbb
popf
in
inc
nop
icebp
sahf
enter
or
mov
xor
into
dec
mov
das
push
aam
inc
cmpsb
mov
pop
pop
daa
aaa
mov
jmp
xchg
enter
test
lcall
adc
pop
std
data16
out
and
mov
insb
in
dec
mov
or
sbb
gs
in
inc
js
and
mov
jb
add
push
xchg
pop
gs
sbb
cld
arpl
or
fidivrl
mov
ja
loop
lcallw
and
outsl
inc
mov
xor
lret
adc
adc
nop
loopne
inc
jge
cmp
dec
orb
dec
fwait
mov
jge
fiaddl
mov
jl
xor
ja
lods
ret
jp
jbe
subl
out
mov
frstpm(287
cmpsl
push
jo
dec
sbb
xor
inc
sbbl
jl
cmp
inc
inc
mov
dec
push
jg
adc
fidivrl
pop
lcall
xchg
cmp
test
inc
imul
in
cmp
push
pop
or
ror
shl
clc
add
jne
fdivrs
mov
lock
fadds
inc
add
or
xchg
or
mov
loopne
pop
jbe
push
or
das
inc
cli
lods
adc
jge
and
ljmp
inc
xor
sub
mov
mov
sub
je
sub
test
sub
inc
and
gs
add
mov
fnstsw
clc
leave
shlb
xor
les
mov
faddl
nop
jns
jecxz
imul
stos
insb
push
lea
adc
in
mov
into
lret
or
loope
repnz
inc
add
inc
cltd
xchg
xor
xor
or
jecxz
stos
jnp
je
add
iret
xor
mov
shrb
pop
pop
or
jo
data16
push
sarl
sbb
mov
js
or
sti
sbbb
mov
dec
lea
dec
xchg
xchg
daa
adc
pop
es
xor
cwtl
xlat
mov
ljmp
inc
jg
pop
fdivrs
add
xchg
jg
and
push
cmp
mov
jo
leave
test
push
or
pop
jne
adc
mov
push
repz
push
and
dec
outsb
mov
call
jecxz
cmpsl
cld
sbb
pop
or
inc
xor
loopne
rorl
add
dec
or
push
aas
sbb
mov
xor
adc
pop
push
adc
lret
test
sub
outsb
mov
or
xor
and
repnz
data16
sbb
stc
repz
popl
cld
xor
mov
mov
test
push
movl
cmp
xor
xchg
push
imul
pop
fs
testb
xor
fmul
adc
cmpb
dec
pop
jo
sub
dec
push
loope
shl
call
rolb
push
or
inc
xor
lods
cld
sub
das
and
in
enter
je
dec
flds
adc
or
sbb
push
into
sub
lret
ret
rol
or
cld
push
or
shl
or
and
aas
adc
fadds
mov
sub
mov
xor
mov
inc
dec
jne
lea
adc
cmc
pop
bnd
shlb
add
jb
call
push
dec
mov
or
test
dec
and
mov
and
ds
and
addb
test
out
push
sub
notb
call
push
adc
push
jb
push
mov
fdivr
ficoml
push
xchg
mov
ja
jns
imull
std
push
cmp
cmp
cld
shlb
or
out
enter
cmp
in
push
orb
mov
je
dec
fldenv
mov
in
iret
and
rclb
aad
xor
jo
jmp
mov
movsb
lahf
test
pop
mov
aas
in
scas
out
cmp
and
sbb
lret
add
lahf
dec
sti
and
jae
ljmp
add
xor
or
mov
ficoml
je
movb
ja
mov
jecxz
in
or
insb
or
ja
loopne
xor
pushf
mov
sbbb
push
jno
inc
xchg
jno
push
xor
jns
sbb
and
sbb
lock
cmp
push
sbb
dec
mov
insb
aas
loopne
push
hlt
ret
outsb
fucomip
mov
or
rcrb
lods
mov
mov
dec
lret
cmpsb
push
cmpsb
push
sub
aam
in
in
jb
cmp
std
jne
mov
jmp
sub
stos
fst
imul
iret
adc
xchg
pusha
rclb
push
push
call
mov
sbbb
cmp
push
imul
xchg
cld
fimuls
mov
xor
orl
fidivl
push
jmp
fs
xchg
jbe
pop
sbb
loope
add
faddl
dec
lret
js
push
inc
rolb
jnp
xchg
cli
push
inc
jae
cmp
jbe
call
mov
test
push
in
rcll
inc
pop
leave
inc
jo
lea
imul
test
stos
push
mov
aaa
jmp
loopne
dec
mov
into
sub
cld
jmp
clc
fs
andb
cmp
rorb
ljmp
push
shlb
outsb
incl
cld
std
push
jge
add
jb
mov
xor
inc
or
push
xchg
inc
push
push
idiv
jg
out
adc
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
cltd
mov
outsl
xchg
jl
sbb
dec
or
mov
and
jo
mov
and
or
jne
test
movsb
mov
fdivp
scas
dec
addb
xor
notl
ja
lahf
insb
adc
dec
loopne
adc
repz
jp
mov
fisttpll
ret
push
and
mov
out
daa
push
xor
adc
mov
outsl
testl
mov
mov
inc
enter
push
mov
cmp
sub
xlat
cli
jo
insb
ljmp
xor
pop
outsb
addl
or
fwait
les
ret
sbb
adc
dec
loopne
or
pop
idiv
jle
inc
jmp
xor
dec
sbb
mov
sbb
jmp
mov
jns
ss
push
out
arpl
push
inc
insl
adc
aad
es
xchg
cmp
dec
inc
and
sti
imul
xorb
lret
push
leave
cmpl
push
movsb
cld
jno
pop
movl
out
adc
outsl
cmp
test
fisubrs
mov
pop
pop
xchg
loopne
imul
cltd
pop
xchg
into
int3
sub
lahf
movsb
jb
jno
das
rolb
mov
sbb
sub
fidivl
sub
and
inc
ficompl
mov
pop
cmp
xor
out
cwtl
mov
jne
fdivs
fildll
add
lea
or
push
cmpl
pusha
or
fs
pop
lds
pop
cld
rolb
sub
push
decl
jne
sbb
dec
xor
or
mov
subb
sbb
mov
lea
xchg
ficomps
cmp
mov
aaa
cmpl
shll
jo
jnp
movsl
sub
add
xorl
sub
sbb
clc
inc
xchg
loopne
fs
xor
je
xor
jecxz
push
mov
dec
movsb
sbb
add
pop
in
lret
xchg
or
pop
jbe
add
test
push
lock
test
ret
sbb
inc
push
cwtl
jo
insb
loope
or
adc
ds
add
cwtl
mov
fiadds
jbe
jmp
push
ficomps
or
jbe
pop
mov
jge
and
mov
lock
push
cmp
rcr
pop
stos
add
sbb
daa
mov
aas
or
adc
rol
pop
mov
push
inc
ss
sbb
and
dec
push
cld
je
daa
jmp
cs
ljmp
or
adc
sub
movl
nop
testb
lea
outsb
ja
rol
or
aas
push
idiv
test
sub
mov
enter
mov
xor
cmp
inc
pop
ret
adc
sbb
jo
cwtl
and
sbb
cmp
out
insb
push
cld
push
jo
sti
mov
or
inc
mov
cmp
push
sbb
movsb
xchg
js
imul
insb
mov
cmp
bound
xlat
adc
imul
loope
add
lock
sbb
popa
sub
roll
sbb
xor
addl
push
or
cmp
xchg
xor
push
movsb
pushf
xchg
or
jns
arpl
je
clc
orl
xchg
or
or
shlb
stc
je
adc
xchg
cwtl
repz
xor
mov
jmp
sub
cmp
add
nop
inc
inc
dec
sub
and
rorl
sbb
decl
repnz
push
dec
jp
out
pop
inc
sti
jbe
xchg
jge
xlat
and
pop
cmp
je
jle
stc
lea
jae
rol
xchg
sub
mov
jge
sbbl
adc
sub
repnz
mov
bt
gs
test
aam
jbe
mov
pop
lcall
and
popf
ds
mov
ds
pop
xchg
dec
ja
mov
xchg
mov
cli
test
clc
or
scas
mov
es
dec
push
mov
cwtl
mov
pushf
loopne
leave
rcrl
aaa
inc
mov
push
xchg
pop
inc
ret
jne
sub
add
test
aam
call
push
cld
outsl
sarb
dec
shll
add
movsl
dec
adc
lea
sbb
mov
das
mov
inc
inc
xor
sbb
or
lret
loopne
fcoml
out
iret
lret
mov
clc
or
lret
lret
popf
enter
shrb
jecxz
test
or
add
sarl
pop
dec
dec
cld
adc
sub
sub
jecxz
aam
xchg
mov
mov
fcomps
lea
mov
xchg
fs
push
das
pop
or
push
jno
movsb
lock
sti
js
jmp
jge
jnp
add
daa
mov
repz
dec
add
or
mov
bts
jmp
mov
xor
iret
or
or
mov
mov
sbbl
clc
hlt
aas
push
js
or
push
add
xor
pop
mov
in
in
jns
mov
enter
add
sahf
out
test
cwtl
mov
faddl
cmp
clc
sbb
cld
push
or
lds
lahf
adcb
nop
test
and
jnp
mov
test
nop
repz
or
push
inc
dec
or
cmp
push
pop
fs
outsl
xchg
or
push
test
nop
lahf
mov
xlat
les
dec
cmpsb
xchg
pop
les
cs
push
xor
xchg
sbb
mov
jmp
into
sub
jne
and
data16
adc
dec
xorb
movb
adc
mov
imul
jns
add
mov
sub
movsb
stos
adc
inc
and
cmpb
add
adc
add
and
sub
inc
lahf
fs
loopne
lds
fwait
and
xlat
inc
test
and
mov
idivl
and
mov
cmpsl
mov
lret
sbb
hlt
fdiv
mov
pop
push
hlt
call
daa
mov
adcl
cmpb
mov
ret
lahf
or
inc
or
je
rcr
leave
dec
dec
dec
adc
fsubr
jae
pusha
leave
add
cmp
cmp
and
inc
push
push
inc
mov
push
jge
jmp
adcl
sub
ficompl
dec
mov
adc
jne
or
push
adc
rol
xorl
xor
pop
jbe
xchg
sbbb
test
mov
and
sbb
cmpsb
xor
outsb
cmp
add
cwtl
outsl
or
sahf
sub
dec
ret
xor
aam
add
cmp
and
sbb
scas
inc
jle
test
ja
enter
xchg
ret
ffree
pop
sub
faddp
ret
mov
ficomps
insl
or
or
push
dec
bound
mov
dec
add
lret
outsl
popa
fadds
pusha
in
imul
or
jl
ljmp
pushf
loopne
mov
jg
test
testl
mov
mov
sbb
adc
mov
ds
or
test
or
jp
dec
mov
lods
lret
or
inc
dec
mov
ficompl
pop
test
and
test
ret
mov
push
inc
leave
rolb
adc
adc
data16
push
add
sbb
and
sbb
and
ficoms
sub
ret
xor
inc
dec
sbb
pop
mov
adc
fdivs
inc
dec
test
adc
push
dec
or
and
xchg
ret
clc
xor
add
inc
adc
adc
inc
loope
shrl
imul
inc
pop
push
mov
adc
jbe
push
dec
mov
test
lds
or
in
or
mov
or
jle
push
sti
jge
mov
adc
pop
divl
in
and
cmpb
enter
ds
mov
xor
dec
xchg
mov
in
sbb
fs
dec
loopne
shrb
mov
outsb
and
mov
adc
loopne
testb
scas
dec
cli
add
add
add
add
movsb
es
or
and
lock
mov
add
and
orb
pop
add
push
add
lock
mov
jmp
or
popa
testb
mov
add
lret
sbb
add
jmp
fdivr
jnp
push
ljmp
cmpl
pop
cmpb
test
cmpl
les
xor
pop
out
rorb
dec
pop
movsl
xorb
movsb
test
cmp
xor
shl
jb
popf
in
mov
xchg
lret
hlt
fadd
fcomps
cmp
frstor
add
frstor
test
lods
inc
push
lods
in
leave
mov
leave
test
clc
pop
stc
cs
or
add
or
and
mov
ljmp
ret
adc
pop
ja
mov
movsbl
push
pop
sbb
mov
pop
mov
cmpsb
jo
inc
push
inc
sti
mov
js
lea
les
xchg
lret
in
fdivr
fsub
push
icebp
xor
call
je
jae
testl
scas
dec
scas
mov
pop
or
add
sbb
sbb
test
sub
jnp
pop
orb
jnp
rolb
idivb
mov
ret
arpl
or
or
ja
movsl
mov
cmp
nop
imul
sbb
push
and
nop
je
or
inc
insb
xorb
int3
je
lock
test
data16
insb
xor
lods
js
pusha
sub
test
ficoml
pop
and
pop
or
nop
fcomi
jle
xor
mov
dec
add
xor
es
fs
or
mov
int
incl
outsl
cmc
jne
dec
xor
jmp
loope
xlat
cli
push
imul
push
stc
adc
je
cmp
pop
lea
in
shlb
jb
or
sbb
jnp
clc
dec
je
cmp
adc
or
in
sub
and
mov
add
hlt
sbb
mov
loop
and
push
ds
addr16
push
jae
dec
testl
aad
cmp
mov
aaa
jne
das
mov
adcl
ret
loope
mov
and
xchg
int3
add
fcomps
fmull
or
es
xorl
popf
jbe
or
push
mov
add
jno
inc
inc
push
insl
aaa
jno
push
cmp
loopne
push
addl
negl
mov
rol
dec
dec
lret
or
jae
jo
fdivs
mov
mov
mov
movsl
iret
add
pushl
adc
aaa
repz
jno
jge
outsl
lds
hlt
mov
inc
cmpsb
sete
mov
add
cmp
xor
add
or
je
or
loope
xchg
js
clc
push
sbb
sub
test
sub
outsb
jo
add
add
push
push
pushf
into
add
addr16
push
xchg
mov
jno
clc
outsb
je
test
cmp
sbb
push
enter
xor
aas
add
xor
mov
test
mov
inc
sub
data16
movsb
sub
adc
mov
daa
xchg
jb
lds
mov
adc
jecxz
jmp
add
push
add
ret
pop
jne
std
imul
hlt
jmp
cmp
jle
jae
mov
xor
test
pop
inc
sub
add
int
or
mov
out
push
mov
mov
inc
cld
adc
lea
hlt
rcl
sbb
arpl
lock
dec
pop
mov
mov
pop
sbb
jecxz
lea
stc
rcll
push
pop
xchg
cwtl
in
push
jo
inc
call
pop
icebp
pop
jb
cmpb
jne
and
aad
adcl
enter
push
outsb
mov
push
cmp
out
addr16
decb
mov
mov
inc
daa
add
adc
xor
sbb
inc
test
push
sub
lret
stc
scas
call
push
xor
dec
je
adc
jbe
insl
test
mov
or
mov
add
lret
dec
sub
or
jae
sub
fsubs
adc
in
sbb
mov
xor
mov
xor
jge
inc
sbb
dec
test
pop
mov
or
jne
and
ficomps
testl
adc
dec
push
aas
cmp
and
fwait
ret
xor
lds
xchg
clc
sahf
add
mov
dec
jmp
pop
pop
faddl
inc
cmp
arpl
cmp
dec
shlb
decl
movb
inc
jmp
mov
test
or
adc
mov
fdiv
xchg
and
sub
push
je
data16
test
sub
aas
adc
add
sub
mov
jmp
test
sahf
and
sub
sub
sub
sub
or
pop
shl
jb
or
push
jp
mov
iret
popf
data16
lea
jns
stos
dec
add
add
push
dec
push
pop
jbe
dec
sbbl
pop
pop
xchg
test
jno
aaa
add
mov
call
pushf
push
rcll
pop
popa
jle
sbb
popa
lret
push
mov
jg
dec
push
dec
lcall
sbb
push
and
jo
icebp
jl
testl
push
xchg
cld
push
or
sub
movsl
daa
pop
mov
mov
dec
insl
mov
mov
add
jbe
sub
movsb
cmp
adcb
mov
adc
mov
cmp
mov
mov
test
add
test
cmpsl
orb
cmp
lods
movsb
bound
pop
lcall
adc
adc
xor
mov
dec
idivb
lea
push
push
add
xor
cli
fmulp
mov
test
rolb
and
lcall
mov
out
mov
mov
push
xor
add
push
push
fsubrs
push
jge
or
or
fcoml
popf
or
popa
lcall
add
inc
xor
pop
xchg
psraw
lret
adc
add
rcrl
cmp
cmp
mov
jmp
push
xchg
or
mov
jne
jecxz
call
push
xor
add
sbb
pop
shlb
imul
push
or
shl
xchg
mov
insl
or
lea
notl
cmpsb
add
ss
mul
xor
or
or
out
and
imul
add
jmp
clc
sub
or
cs
mov
adc
test
pusha
cwtl
jmp
retw
pop
rclb
sub
mov
shr
mov
imul
mov
movsb
icebp
and
dec
inc
outsb
dec
xor
mov
js
mov
add
inc
ja
mov
clc
adc
icebp
decl
je
cli
add
cmp
jbe
push
pop
xor
or
or
es
fildl
mov
shr
lea
not
and
decb
jne
or
sbb
lea
xor
pop
cmp
pop
add
push
imul
mov
dec
rcrb
addl
pop
jg
movsb
pusha
jmp
clc
and
sti
mov
shlb
and
sti
add
mov
add
dec
pop
cmp
icebp
mov
mov
imul
cmp
dec
movsb
push
jae
adc
jno
mov
xchg
and
sbb
jne
sub
jmp
lea
das
sahf
sub
shll
cltd
dec
or
add
mov
pop
xchg
sub
add
mov
ljmp
or
mov
inc
push
pusha
ficomps
or
dec
or
adc
jo
popa
pusha
mov
mov
inc
mov
mov
add
lret
lahf
loope
push
or
pop
mov
pop
dec
or
jmp
dec
adc
push
mov
or
test
add
inc
xor
lcall
and
cmc
or
and
ret
dec
and
adc
in
jg
inc
shl
add
scas
jp
push
jecxz
jnp
call
aas
gs
push
or
cmp
sub
dec
inc
adc
jne
add
add
and
pushl
push
push
cmp
dec
push
mov
mov
mov
je
hlt
repnz
mov
adc
sbb
dec
or
sbb
mov
sub
cmp
jle
jp
or
mov
add
jbe
mov
sub
mov
inc
mov
jne
data16
outsl
push
push
fstpl
mov
addl
and
les
and
insl
lods
jae
add
sbb
adc
andpd
outsl
test
sahf
push
and
jge
fucomi
fwait
orl
insl
lods
fldt
incl
and
inc
imul
data16
jno
fadds
add
inc
dec
stc
ljmp
rorb
clc
incb
pop
rolb
mov
dec
jne
or
pop
push
cltd
out
popa
cld
mov
popa
cltd
out
lea
xchg
sub
xchg
dec
fadds
sub
shr
push
inc
xchg
jo
pcmpeqb
dec
clc
pop
in
adc
jge
inc
rorb
adc
out
mov
cld
lock
call
stos
mov
lret
je
clc
add
pushf
mov
or
cmp
sahf
pop
mov
or
inc
inc
mov
lock
dec
dec
inc
jne
or
icebp
stos
popl
and
stc
jo
xchg
les
sbb
sub
and
pop
mov
rcrb
jb
cld
or
icebp
out
or
adc
lock
jno
ret
int3
inc
mov
cmp
add
push
xchg
mov
aad
sar
push
mov
int3
push
cmpsb
add
pop
inc
pop
mov
xchg
inc
stc
sbb
clc
notb
nop
es
add
cmp
inc
or
lcall
add
push
jns
add
add
ljmp
adc
pushf
sar
dec
mov
int
push
mov
lea
sti
jbe
jg
cmpsb
stos
cltd
adc
jle
mov
pop
push
sahf
cmpsb
imul
sub
lcall
iret
jmp
add
data16
and
ljmp
imul
adc
inc
insb
xor
out
out
sahf
mov
mov
sub
adc
into
hlt
jl
int
or
lds
mov
inc
dec
insb
pop
xor
push
movsl
rcrb
incb
jp
movsb
decb
add
pop
adcb
mov
adc
xor
xor
cmp
dec
mov
sbb
xchg
fisttps
mov
mov
ja
add
dec
ficoms
sbb
add
cmpsb
adc
mov
lea
mov
xchg
nop
or
ret
jbe
mov
lock
push
cmp
lods
decb
mov
mov
imul
lods
rolb
add
cld
ja
add
insb
stos
add
xchg
cmp
sbb
loopne
push
push
push
jge
cld
shr
pop
push
or
adcl
mov
movsb
stos
dec
or
out
fldcw
push
nop
cmp
pop
add
outsl
and
decb
xlat
xor
adc
shlb
data16
cmpb
mov
scas
fnstenv
jmp
jnp
add
xor
cmpsl
pop
cmp
aaa
arpl
add
daa
cwtl
cmp
fsubs
xor
in
push
lahf
mov
sub
pop
lcall
cmp
je
mov
mov
sbb
in
cli
and
mov
mov
dec
pop
iret
jne
push
jno
mov
and
cmp
mov
rep
jnp
pop
dec
mov
and
jne
mov
push
xor
and
leave
inc
test
inc
push
pushf
push
cmp
jno
or
out
icebp
sbb
or
and
add
test
add
xchg
sbb
shrl
xchg
sti
push
cmp
dec
and
mov
das
sbb
clc
decb
jne
adc
and
jmp
xor
int3
dec
jp
mov
mov
bound
dec
push
and
push
clc
into
xor
test
movsl
imul
shll
inc
mov
enter
or
pop
xor
and
and
scas
call
push
or
dec
cld
or
push
push
mov
push
mov
ljmp
sub
es
call
shll
ljmp
push
lea
ds
jne
cmp
mov
and
sbb
leave
xor
sbb
repnz
cmp
add
jge
in
jb
or
xorl
gs
loope
adc
pop
mov
inc
pop
jbe
pusha
add
daa
adc
fs
cmp
mov
push
ret
fidivrs
mov
or
inc
mov
add
add
add
jg
and
nop
in
fisttpll
movb
imul
es
add
bndldx
or
sbbb
cmp
cmp
sub
add
push
les
es
mov
mov
or
and
and
in
repnz
ja
fcoms
loope
push
and
jp
push
push
dec
push
push
cmp
xchg
inc
add
mov
or
orb
test
add
adc
std
lahf
shrb
mov
adcl
sbb
push
divl
xchg
out
pop
jne
push
rcll
pop
mov
mov
add
std
pop
sbb
movsl
mov
daa
hlt
popa
arpl
jnp
adc
js
or
fwait
xlat
push
or
pop
movsl
fcompl
hlt
or
pop
jl
mov
mov
push
insb
dec
fwait
hlt
and
jo
adc
insb
int3
push
mov
sbb
or
je
and
push
int
js
xor
mov
push
adc
lods
add
pop
add
add
adc
andb
loopne
call
jg
pop
xor
or
jnp
xor
rolb
out
js
and
xchg
mov
call
xchg
sahf
test
inc
cwtl
sbbl
jmp
shlb
enter
sbb
jle
call
movzwl
or
int3
test
scas
jl
lods
in
je
into
rcr
cmp
mov
push
stc
inc
rorl
sbbb
or
dec
out
test
mov
inc
in
lcall
xor
ja
or
inc
mov
xchg
mov
ljmp
dec
xor
sbb
adc
sti
jne
inc
xchg
cltd
mov
lret
pop
add
fdivs
xchg
arpl
stc
sub
rcrl
mov
lea
lods
ljmp
ljmp
hlt
fisubrs
in
inc
out
add
rorb
push
inc
jmp
fistpll
insb
jne
xor
push
stos
or
mov
and
fidivrs
adc
add
enter
pop
jns
mov
mov
enter
cmc
jmp
jae
or
int3
les
and
dec
jae
xchg
xor
dec
lcall
in
jns
inc
lea
jb
cmpsl
mov
orl
sbb
sub
cli
pusha
sub
rcrb
dec
push
push
mov
pop
push
mov
in
xor
push
jb
lods
dec
lods
dec
jb
test
fmulp
nop
lret
call
add
rorl
pushf
mov
pusha
push
jb
or
mov
ret
nop
inc
in
fimuls
cld
inc
mov
fldcw
cmp
shl
test
mov
movsb
roll
cmp
jb
in
test
push
or
out
hlt
xchg
lahf
push
lods
inc
sub
in
lods
add
inc
sahf
rclb
and
and
adc
push
jb
lods
mov
ret
nop
sub
mov
xor
in
leave
add
in
pop
enter
test
adc
and
mov
test
dec
pop
aas
mov
cld
enter
cmp
mov
sysret
movsb
bound
movsb
cmc
or
fmuls
mov
cmpsl
jne
fidivs
pop
repz
aaa
mov
ss
fadds
movsb
repz
sbb
xor
sub
jbe
push
insb
ljmp
pop
imul
pop
adc
mov
lcall
fiadds
pusha
xchg
ret
xchg
add
and
or
fwait
shll
out
adc
mov
or
std
or
fldenv
cmp
or
mov
jne
push
lods
lock
inc
cmc
das
mov
jnp
mov
cwtl
or
push
xchg
and
adc
out
mov
dec
inc
mov
jmp
mov
insl
pop
add
repz
add
sub
jbe
mov
out
fsubs
push
adc
dec
int
add
test
loop
jne
dec
mov
pop
add
hlt
stc
mov
jne
dec
out
aaa
inc
cld
push
cs
inc
mov
add
nop
hlt
add
adc
ret
pop
mov
loopne
and
andb
andl
not
and
test
xor
pop
lret
sub
out
add
xor
dec
ret
dec
cmp
xor
push
clc
add
cli
sti
cld
std
mov
shll
mov
xor
jl
insl
es
in
fcoml
cmpsb
mov
jle
xor
jg
inc
gs
sbb
add
push
pop
ss
fisubrl
rcrl
int
mov
aas
xor
push
movsl
xchg
je
push
or
pop
inc
fmul
lock
sbb
lcall
push
add
call
fwait
cmp
push
and
adc
jle
add
mov
lcall
in
xchg
imul
cltd
jo
push
dec
mov
mov
fbld
xor
sub
das
negb
sub
xchg
dec
je
add
test
lcall
or
sti
sub
sbb
rorb
sbb
push
cmp
pop
cmp
and
add
add
test
stc
fwait
add
or
test
xchg
jns
iret
repz
lock
test
frstor
push
in
inc
adc
push
jns
faddl
push
fdiv
fadd
punpckhwd
sub
push
push
shl
push
mov
xor
aaa
jne
das
lea
inc
lock
mov
push
mov
repz
mov
adc
enter
in
mov
jb
add
xor
aam
enter
dec
push
sbb
inc
sbb
push
es
sub
xor
xchg
add
loope
sar
mov
sbb
xchg
fdivrp
push
mov
jle
js
pop
push
inc
add
incb
out
dec
sti
lret
push
xchg
jmp
inc
faddl
mov
adc
and
scas
mov
aas
test
fmull
iret
mov
inc
rolb
cmp
mov
ret
and
push
push
adcl
jne
outsb
cmp
js
inc
arpl
mov
ss
mov
sub
push
in
rol
xchg
xchg
pop
jo
mov
lods
std
jecxz
jecxz
rclb
std
pop
mov
or
add
pop
mov
sar
out
fsubrl
add
mul
dec
movsl
sti
inc
and
jne
dec
sbb
pop
sar
clc
mov
inc
and
inc
movsl
test
mov
sbb
std
or
adc
rorb
loopne
mov
pop
gs
inc
adcl
test
std
insb
or
add
mov
pop
push
lock
call
lods
inc
cli
loope
test
fmuls
xchg
lret
movsl
sbb
ror
lock
jo
enter
cmpsl
mov
pop
cs
int3
pop
or
add
subl
xor
cmc
xor
push
iret
mov
inc
lock
cmp
inc
je
or
push
and
clc
jge
mov
ret
outsb
pop
xchg
lret
call
mov
inc
mov
jae
je
dec
cmp
sti
mov
pop
lahf
dec
dec
cmp
inc
sub
pop
jno
je
aad
sbb
mov
pop
and
insb
fdivl
jne
jb
jne
inc
jne
out
orl
movsl
push
pusha
arpl
dec
inc
test
aad
cmp
push
int
imul
mov
dec
push
pop
lods
cmp
lea
and
inc
mov
flds
jp
pop
xchg
lea
push
addr16
les
push
sbb
dec
sahf
sbb
pop
cmpsb
adc
mov
rorl
loopne
pop
out
or
pop
adcb
sti
push
inc
cmp
xchg
mov
in
das
sub
mov
mov
scas
testl
rorb
mov
xor
xchg
xchg
jecxz
push
adc
test
mov
push
lock
or
imul
fidivl
jns
daa
mov
sahf
mov
mov
clc
inc
cld
dec
jns
addl
sti
jnp
jge
jle
pop
enter
mov
and
imul
mov
mov
pop
pusha
cmp
divl
negl
adc
pop
insb
jns
pop
adc
lret
popa
mov
xchg
sti
jecxz
xor
xchg
loopne
sbb
jns
aaa
addr16
push
cmpsb
pop
and
std
scas
or
xor
cmp
jecxz
add
mov
add
cmc
test
fadds
jbe
push
add
jno
cltd
nop
mov
gs
jl
jmp
mov
call
bound
es
push
jb
sbb
mov
std
push
sub
push
push
lret
loop
jge
mulb
sub
imul
fidivs
sub
lea
sub
dec
xchg
out
imul
lods
push
sub
insl
xor
mov
push
aam
xor
daa
int3
movb
icebp
push
mov
xchg
ds
adc
mov
scas
xor
mov
pop
repz
stos
out
imul
mov
test
xor
xor
loop
movsl
push
shl
xor
roll
adc
mov
inc
inc
adc
lds
cmpsl
adc
cmp
mov
mov
lods
arpl
inc
lock
xor
popf
imul
test
mov
std
shlb
dec
cmp
mov
scas
mov
push
fstl
lret
fdivrp
or
ds
push
es
cs
loop
cmp
stos
mov
sub
mov
pop
dec
cs
movsb
cmc
roll
sar
xchg
lret
lock
xor
push
mov
mov
sub
sub
or
sbb
jge
int3
mov
cmp
or
jmp
rolb
fwait
enter
cmp
push
div
enter
sbb
sub
jae
dec
cmpl
pushfw
inc
fbstp
bound
cmpsl
add
push
movsb
adc
popl
mov
inc
lret
jne
sub
xor
cwtl
paddsb
fld
dec
hlt
or
lret
sbb
stc
fdivr
das
push
dec
xor
loop
jno
push
je
popa
and
and
jb
std
loope
adc
cmp
push
test
aaa
fsubrl
adcb
mov
xchg
fidivrl
je
and
nop
mov
inc
add
sarl
mov
jmp
test
sub
insb
js
mov
add
inc
or
adc
jecxz
sbb
push
mov
mov
jo
push
sar
mov
xchg
shlb
xor
dec
call
fmull
mov
xlat
and
mov
mov
leave
aad
mov
and
pop
in
and
add
cmp
lea
mov
push
loopne
cmpsl
xor
rolb
fmull
jmp
ja
add
mov
loope
outsl
icebp
or
lock
arpl
pop
pop
movsl
push
fisttpll
xchg
cmc
ds
or
jo
lock
mov
dec
fisttpl
push
movsl
pop
fdivrs
xor
add
mov
jb
repz
mov
daa
adc
mov
dec
test
cmpsl
int3
test
int3
test
xlat
adc
and
xchg
inc
frstor
mov
mov
mov
lods
pop
xchg
repnz
or
cmpsb
outsb
in
xchg
stos
mov
mov
xchg
test
xchg
xchg
xchg
dec
pop
xchg
test
lods
and
xchg
pushf
inc
enter
push
jb
mov
lret
call
mov
dec
dec
jb
and
cmp
daa
loopne
xor
lret
mov
and
daa
xchg
cmc
loope
xor
pop
cmp
fwait
mov
cmpsl
sbb
int3
lea
xor
gs
mov
leave
jmp
pop
pop
push
enter
and
or
lret
rorb
mov
inc
push
nop
xchg
pushf
and
stos
mov
mov
stos
outsb
lods
xchg
loopne
dec
mov
lock
mov
dec
sub
movsb
stc
adc
pushf
dec
pop
inc
aaa
into
inc
mov
es
pushf
movsb
xchg
nop
add
aas
dec
or
leave
adc
scas
nop
movsl
test
test
test
test
pushf
pop
add
enter
nop
nop
push
orb
lods
pop
enter
lods
or
cltd
ret
adc
push
add
push
add
je
aam
outsl
xor
dec
shl
fbstp
rorb
add
sarl
imul
xor
or
xlat
arpl
dec
dec
arpl
fs
rolb
xchg
mov
loopne
mov
cltd
nop
sbb
jg
adc
and
inc
push
aam
rorb
lea
adc
pop
add
jecxz
lods
adc
cltd
enter
xor
sub
or
push
loop
xchg
xchg
test
lret
cmp
out
or
sub
loop
nop
inc
add
test
jge
dec
jmp
stos
ss
neg
pop
mov
sub
movsl
lock
push
add
je
push
add
xchg
xchg
inc
pop
adc
sub
sbb
push
push
or
loopne
int
lahf
out
pop
xchg
push
dec
adc
push
and
icebp
jl
xchg
lret
pop
outsl
inc
or
movsl
repnz
jbe
jle
sbb
popa
push
lcall
int
fsubl
hlt
js
sbb
xor
ds
xor
enter
xor
xchg
test
test
adc
fsubl
and
call
mov
pop
sbb
into
and
sub
lods
or
ja
ss
sub
xor
cmc
or
sub
adc
in
rolb
rep
jge
sub
xor
in
insl
call
ljmp
push
or
mov
pop
insb
inc
mov
sbb
rorb
add
loope
push
in
cld
dec
xchg
sub
dec
mov
pop
xor
fsub
pop
mov
and
dec
inc
sbb
cmp
mov
cmp
cmpsb
push
mov
inc
shlb
and
icebp
add
jne
xorb
cmp
ja
lea
jecxz
add
test
push
mov
rolb
enter
cmp
adc
and
push
pop
sub
pop
mov
sub
push
outsb
xchg
xor
inc
adcb
stos
adc
popw
mov
jg,pt
leave
ret
or
int3
inc
mov
lahf
cld
push
mov
jecxz
test
mov
add
scas
divl
adc
loop
ret
aaa
popa
add
mov
sbb
mov
pop
and
push
xor
jne
lea
popa
add
ja
add
les
mov
push
mov
js
out
and
stos
bound
adc
ds
xchg
mov
dec
orb
push
cmp
add
mov
jb
shlb
add
stc
movl
decl
mov
inc
push
pop
inc
push
pop
in
inc
icebp
ret
mov
xor
jmp
push
sarb
lock
dec
jecxz
inc
loope
jl
rclb
mov
dec
fs
ffreep
aaa
and
rorl
add
je
and
clc
inc
push
inc
jle
shr
sbb
jae
testl
out
or
ss
pushf
orl
push
nop
push
jne
inc
jp
sarl
xchg
xor
cmp
jae
adc
dec
rclb
or
pop
adc
or
mov
rcrb
fs
jb
dec
je
mov
inc
push
pop
push
push
inc
shr
rcr
shr
fstpt
leave
jne
div
pop
dec
adc
inc
mul
pop
fsincos
sti
ja
push
cmp
or
cmp
or
xor
and
out
insb
cmp
or
fimull
or
fcmovu
fmul
jle
es
mov
add
inc
lcall
xorl
mov
pop
jmp
xor
add
movb
xor
das
inc
inc
clc
movb
xor
out
fwait
push
jno
rcr
sub
dec
sbb
adc
jo
push
and
jae
aam
push
push
lea
xor
add
sbb
push
call
out
sub
sbb
sub
cmpsl
sbb
push
or
mov
sub
icebp
add
jae
addb
sarl
push
pop
mov
pop
or
sbb
pusha
mov
loop
adc
popf
dec
sub
dec
js
and
pop
mov
sbb
cmova
dec
sbb
sbb
mov
inc
cmp
mov
test
mov
jle
jne
lea
jb
loope
lock
push
test
sub
push
sub
test
fcomps
jne
in
jg
addl
cmp
adc
fldcw
fs
adc
mov
and
nop
les
addb
sub
sbb
jecxz
orl
lods
or
add
into
xchg
jl
mov
push
mov
inc
jl
cmpsb
cld
sbb
subb
mov
int
dec
mov
pop
push
sub
nop
push
dec
aas
adc
inc
fs
shrl
stc
mov
shrb
adcb
lret
jo
imul
sub
mov
flds
test
add
movsb
rorb
jb
in
or
stos
add
scas
pusha
mov
pusha
xor
test
dec
js
test
imulb
jge
xchg
or
push
in
sarl
sub
add
xchg
fisttpll
lock
or
xchg
add
movsb
adc
cmp
rcrl
cltd
pop
pop
xlat
xchg
mov
js
faddl
fwait
or
jbe
call
push
leave
scas
lods
je
lea
and
sbb
outsl
ja
les
mov
rcr
add
pop
ret
add
popa
or
or
dec
jo
test
adc
inc
and
je
mov
fisubs
es
cld
iret
jle
sub
mov
fsubrs
adc
pop
shrl
divl
lret
scas
push
xor
test
xor
jo
and
push
push
jbe
je
jo
pop
test
int3
xchg
xor
or
ss
pop
mov
jecxz
daa
ss
jns
dec
shlb
or
aam
xchg
pop
addr16
outsb
or
add
add
cld
pop
mov
repnz
and
out
add
std
sbb
ret
bound
add
inc
fs
dec
push
mov
test
clc
cmp
setl
stc
or
sub
adc
test
add
mov
mov
call
fistps
test
sub
inc
mov
mov
cmp
roll
dec
cwtl
cmp
add
mov
mov
pop
jne
mov
or
pop
shlb
adc
push
dec
das
test
sbb
dec
or
or
mov
sbb
jb
inc
sub
or
and
xchg
lahf
push
push
jp
mov
or
cmp
mov
aad
call
test
ffree
das
add
cs
cmpsl
popa
xor
enter
insl
mov
pop
pop
push
imul
adc
dec
inc
roll
cmp
cmp
mov
add
clc
xchg
add
mov
mov
mov
push
lret
inc
test
shrb
aaa
and
push
or
es
inc
out
bnd
lret
or
add
mov
cli
mov
cmp
add
or
sbb
xor
aaa
dec
pusha
lcall
js
movsl
xlat
add
inc
cmpsb
lret
or
push
faddl
and
leave
and
stc
outsb
xchg
lret
xor
add
sbb
mov
add
es
outsl
sub
cmp
div
pop
sbbl
pop
orl
addl
or
cs
mov
lret
push
cmp
aam
movb
jmp
add
pop
leave
push
sbb
js
bound
shrb
cltd
sub
dec
or
pop
xor
movsb
loope
adc
push
cmp
icebp
imul
shl
mov
ret
je
mov
pop
or
ljmp
test
xor
addl
add
jg
fbld
sub
jle
pop
stos
dec
lock
inc
mov
repz
or
xchg
icebp
sbbb
fisubs
mov
pusha
xorb
testb
add
mov
pop
xchg
rol
pop
jbe
cmp
test
pop
sub
sbb
jmp
push
mov
xchg
push
push
mov
mov
sub
das
push
mov
sbb
fidivrl
sti
inc
mov
add
jb
in
push
in
adc
add
rcrb
or
je
sub
add
fbstp
jne
sbb
inc
mov
cs
sub
adc
jbe
add
cmp
jge
mov
mov
pop
mov
add
and
fildl
cmp
pop
sbb
imul
and
and
rolb
add
xor
add
test
sub
adc
push
dec
shlb
mov
add
sbbb
mov
ret
xchg
insb
in
das
push
je
inc
sub
les
or
movsb
stc
mov
inc
mov
cmp
jmp
cmp
sbb
bound
ja
push
cmp
mov
aad
movsl
ss
nop
sub
push
cmpsb
andb
cmp
xchg
add
jb
movsb
jb
xchg
xchg
xchg
shll
ja
lcall
xchg
movsl
test
or
adc
jno
or
mov
rcll
push
push
push
out
sbb
dec
and
test
mov
loopne
cmp
jbe
add
sbb
out
js
ljmp
mov
mov
lret
adcl
ja
lret
stos
orb
je
test
push
inc
and
mov
popa
sub
repz
imul
in
daa
adc
sub
mov
gs
divb
add
jp
and
sbbb
loopne
push
out
mov
movl
repnz
mov
add
adc
fsubrs
mov
jo
xchg
cld
mov
inc
and
or
cli
jmp
incl
dec
or
xchg
pop
mov
push
pop
inc
mov
adc
sub
mov
or
inc
mov
daa
and
lret
sbbb
test
sub
or
xchg
add
inc
dec
xor
jge
xor
loop
ja
cmp
das
loope
scas
ss
jmp
xor
push
add
pop
inc
inc
adc
add
sbb
inc
inc
pop
je
ficompl
sahf
jb
je
dec
test
fisttpl
adc
adc
mov
fbld
sub
adc
add
add
pop
cld
pop
push
pusha
ret
inc
or
test
flds
clc
cmp
cmp
leave
inc
adc
addb
fstpl
xor
inc
jmp
lcall
add
adc
mov
pop
pop
jno
orb
push
mov
test
cmp
xchg
inc
push
insb
xor
lea
mov
mov
inc
or
pop
sub
sbb
sbb
mov
cmp
add
loopne
inc
stos
sbb
hlt
aas
jae
mov
rolb
shl
push
pop
pop
lods
andps
push
insl
lds
dec
stos
pusha
xchg
jge
les
dec
mov
or
push
add
mov
movsl
cmp
push
pop
loope
mov
mov
cs
and
and
inc
or
or
sbb
jo
and
push
and
pop
push
jne
in
fdivl
cmp
pop
dec
inc
inc
or
jne
repnz
cmp
push
sar
add
nop
dec
xor
inc
hlt
mov
shrl
movsl
test
cmp
mov
jb
cld
cwtl
ljmp
inc
pop
mov
jmp
sbb
dec
test
add
inc
es
jp
sbb
or
sbb
sti
or
xor
lock
or
push
ss
sub
mov
mov
xchg
pop
adc
sbb
and
dec
icebp
and
add
inc
fsubrs
dec
lea
fbstp
add
or
or
or
push
xor
or
cmp
sbb
fsubr
inc
mov
in
js
jo
gs
dec
mov
cmp
cmp
and
andb
loop
fs
hlt
stos
out
mov
add
pop
sbb
push
push
loopne
aas
xor
sbb
and
repnz
dec
andb
add
shll
into
fnsave
inc
cmp
add
fadd
adc
xchg
jle
add
push
push
mov
and
inc
dec
bound
sub
push
inc
push
mov
cld
clc
inc
sar
and
shl
add
flds
out
inc
add
rcr
in
and
jns
fildll
or
inc
adcl
addr16
xchg
bound
jl
repz
sbb
push
sub
jb
xchg
cwtl
add
stos
xchg
fcmovnb
div
shll
pop
shl
lea
mov
inc
mov
in
push
aaa
xor
mov
mov
jne
negb
adc
sub
push
cmp
and
or
les
mov
decl
cmpsl
pop
loope
pop
notb
imul
fsts
sub
lock
add
aaa
inc
dec
out
mov
arpl
sahf
or
lods
push
icebp
shlb
xlat
cs
ss
pop
dec
jns
pushl
lock
xchg
movsb
loope
lock
movsb
cmp
mov
std
cmp
mov
or
insb
daa
cli
loopne
or
xor
not
push
rol
xor
enter
xchg
std
enter
add
adc
jb
das
outsb
xchg
pop
xchg
dec
add
ret
sub
pop
sbb
cmpl
dec
add
mov
mov
das
in
mov
shll
xor
jle
mov
cmp
mov
insb
bound
jae
clc
cmp
push
in
mov
mov
mov
sar
das
add
add
jmp
pushl
movsb
sbb
push
push
mov
lcall
add
aas
pop
xchg
lea
ret
mov
add
mov
sub
je
push
inc
inc
adc
jl
fsubp
repnz
subb
xchg
scas
repnz
dec
mov
lds
daa
bound
inc
cmc
dec
js
fs
mov
js
je
pop
mov
loop
xor
dec
popa
mov
xchg
shrl
ja
add
sbb
pop
jno
out
sbb
add
cs
or
nop
mov
scas
jmp
in
sub
inc
js
push
shrb
aam
in
adcb
pop
mov
test
test
jmp
test
jmp
inc
pop
scas
leave
xor
call
inc
fmul
push
and
stc
mov
mov
roll
call
movsb
pushf
or
adc
push
lcall
or
js
push
cltd
and
lock
push
sub
or
add
or
push
mov
pop
mov
fstl
cmp
das
cmpl
add
jmp
pop
mov
xorb
or
lahf
fmull
xchg
notl
push
or
sub
mov
rol
es
sbb
mov
sub
cmp
ret
xor
mov
lcall
outsl
fsubr
push
mov
add
pop
fstpl
jae
test
stos
int3
icebp
cmpsl
sub
call
ljmp
shlb
sub
adc
outsl
outsl
stos
adc
jo
fdivs
jmp
cmp
or
sbb
xchg
mulb
fcoml
sbb
mov
mov
in
xor
push
push
mov
aam
lret
enter
or
les
out
jo
or
jl
repz
and
sub
adc
inc
jmp
mov
or
jbe
jne
imul
push
or
cmc
aas
sbb
push
ret
js
enter
xor
insl
push
and
xor
popa
and
insb
add
push
mov
push
fidivl
adc
xor
fdivrl
xor
dec
jge
push
jbe
std
loop
sbb
jne
push
ja
imul
imul
rolb
push
mov
push
mov
or
dec
or
inc
arpl
ljmp
movl
sbb
and
repz
sbb
fstpt
inc
mov
nop
inc
inc
data16
add
pop
mov
mov
ss
cmp
decl
rolb
testb
je
testb
je
cmp
sub
and
sbb
rcl
outsl
in
sub
decb
cmp
dec
dec
inc
loopne
jne
pop
sbb
sub
mov
push
andl
mov
or
add
xchg
cmp
jo
insb
adc
mov
idivl
add
not
push
mov
insl
cmpsl
add
int3
sub
jle
cmp
jl
xchg
jbe
dec
movsb
inc
push
enter
loopne
push
nop
xor
mov
scas
add
je
cltd
xorl
xchg
test
cmp
out
and
or
adc
mov
jmp
sahf
sub
or
cmpsb
or
ret
das
cmp
mov
sub
and
inc
ds
pop
test
shrl
sbb
dec
sbb
mov
sub
jl
or
mov
push
push
add
and
jg
outsl
or
adc
imul
pop
test
mov
inc
or
xor
sub
lret
adc
xor
repnz
mov
jl
push
into
mov
or
add
add
mov
sub
sti
jg
xor
std
aas
add
mov
sbb
inc
mov
lea
fstpt
stos
dec
xor
test
add
bound
push
icebp
and
dec
out
inc
js
rcrl
lock
jg
pop
dec
sbb
outsl
es
fs
pop
jl
mov
sub
push
dec
add
jns
mov
mov
adc
push
call
ret
adc
and
inc
rolb
ret
int3
add
jbe
out
addr16
test
xor
shlb
jle
mov
add
je
inc
inc
push
clc
aaa
adc
cltd
stos
lods
jg
pusha
inc
mov
mov
out
leave
sbb
pusha
mov
pop
cmp
fcoml
jns
cmp
clc
cmp
jae
jb
push
insb
cmpsb
mov
fdivrl
sahf
jg
mov
scas
or
shlb
enter
jbe
xchg
into
pop
scas
adc
or
addr16
xor
or
cmpsl
and
sbb
xor
sbb
insl
pop
mov
rcl
pop
inc
cmpl
cmp
inc
aas
cmp
mov
int3
movsl
and
jge
mov
mov
mov
cli
js
int3
xchg
lock
ret
pop
cmp
rorb
das
test
cmp
pusha
fisubrl
dec
or
or
and
push
insl
loopne
mov
or
xchg
mov
mov
push
les
test
inc
or
sbb
movsb
cmc
repnz
jmp
sbb
ficoml
repz
mov
sarb
dec
xor
in
or
je
cmp
aam
push
push
and
and
cmpl
daa
stos
mov
cmp
pop
jnp
cmc
pushf
cmp
or
je
xchg
je
arpl
fs
mov
sbb
or
fs
cmp
sbb
xlat
xor
shl
add
add
sbb
add
scas
adc
push
dec
sti
cmp
xchg
loope
mov
das
test
in
pop
adc
cmp
bound
subb
cmp
repnz
xorb
add
andl
push
or
sbb
rolb
cmp
and
push
ja
sbb
imul
mov
int3
inc
je
pushl
mov
icebp
dec
pop
and
adc
mov
andb
mov
mov
ss
jns
xor
mov
add
mov
nop
fbld
in
aas
sbb
fildl
je
pop
cmc
and
shll
or
or
sub
inc
mov
fwait
sub
leave
in
scas
adc
aad
movsl
fistl
cmp
jae
add
aaa
jl
mov
inc
add
push
mov
add
outsl
les
jns
pop
jns
jle
pop
lock
call
jne
clc
push
mov
mov
std
into
push
ljmp
jb
mov
sub
inc
add
and
inc
xorb
adc
dec
dec
and
mov
enter
inc
enter
icebp
cmp
data16
sub
mov
sbb
and
pop
push
mov
scas
or
dec
incl
sbb
or
xchg
adc
lods
mov
shll
xchg
or
insl
sbb
xchg
xlat
jns
jne
fadd
cmc
jle
and
in
rcll
arpl
lods
xchg
cmp
add
and
lock
scas
xchg
pop
jle
xchg
mov
jmp
mov
jl
jecxz
and
push
adc
mov
adc
lock
xchg
sbbl
and
add
andb
mov
mov
dec
inc
push
lock
adcl
sbb
lods
cmp
sbbl
outsb
or
insb
aam
dec
fs
cs
adc
in
jle
inc
sub
and
or
sub
dec
in
cmp
sahf
insb
fisttpl
fstl
orl
and
hlt
mov
loopne
call
xlat
or
rolb
and
scas
subl
pop
std
cmp
testl
jecxz
js
sub
ret
or
cmp
lds
popa
and
notl
repnz
xchg
pop
sub
jae
inc
cmpsb
adc
call
pop
pop
xchg
add
pusha
ror
jnp
es
lret
push
mov
push
mov
adc
cmc
xor
aad
sbb
movsb
imul
and
sbb
and
nop
adc
xlat
je
lcall
lock
mov
and
cmp
jb
testb
js
fs
sub
add
or
pop
orl
cmp
jge
push
daa
fidivrl
jmp
inc
movb
ret
pop
je
test
cmpl
xor
cmp
notb
dec
or
pusha
push
or
and
add
gs
sbb
shr
jmp
das
outsl
fdivl
negb
adc
mov
push
adc
xchg
stos
iret
les
cld
jl
les
rcrb
pop
es
jmp
add
and
lea
inc
pop
pop
cltd
pop
mov
push
push
rcr
stc
push
dec
push
push
ret
mov
out
and
and
icebp
push
or
sub
sbb
in
cmpsb
pusha
or
cmp
test
pop
add
jbe
lea
lea
or
mov
mov
int3
fucomp
dec
pushf
cmp
repz
push
test
in
jmp
popl
cmp
call
ja
sbb
push
dec
je
cmpl
xchg
mov
push
cmpsl
or
sbbb
sub
js
mov
data16
sti
sbb
add
sub
sahf
xchg
push
cli
loop
mov
aas
sub
popf
xchg
call
ljmp
je
cmp
xor
out
add
test
push
cwtl
inc
jnp
sub
mov
notb
or
push
in
out
sbb
test
xorl
or
jb
jb
adc
ss
and
and
sub
leave
leave
leave
xor
cmp
xchg
ret
inc
and
xchg
xchg
xchg
fildl
dec
push
in
adcb
in
in
fs
in
je
jl
rcrb
test
mov
dec
cwtl
pushf
mov
movsb
test
sub
mov
je
push
add
inc
add
cmpsb
or
lock
test
shlb
movsb
mov
data16
clc
adc
cld
out
adc
or
nop
add
or
fs
or
or
and
or
iret
enter
pop
push
pop
mov
adc
enter
pop
dec
inc
xor
cmp
rcl
sarb
mov
inc
dec
jne
out
and
pusha
sub
jb
lret
sbb
sub
call
add
sub
or
loop
push
fnstenv
call
dec
sbb
mov
add
jo
add
daa
lods
xchg
dec
int3
inc
aam
or
pop
repnz
add
out
adc
push
inc
sbb
loope
fadds
jne
int3
mov
xor
inc
mov
fucom
fcomp
dec
dec
adc
pop
pop
cwtl
jo
fsubp
jle
cmp
inc
cwtl
ss
das
cmp
xchg
inc
cmp
adc
xchg
or
add
rol
add
inc
add
addb
add
fmuls
in
mov
add
popf
or
int3
sbb
rcrl
inc
lcall
pusha
pusha
es
sbb
jle
jbe
dec
pop
je
push
pushf
xlat
leave
rolb
lea
inc
jl
mov
push
dec
and
loopne
sub
jge
dec
add
or
add
or
pop
or
mov
addr16
add
and
cltd
stos
imul
enter
int3
add
push
or
repnz
add
arpl
cltd
stos
imul
push
int3
data16
or
mov
testb
jp
andl
add
test
lock
jmp
je
les
jbe
adc
cltd
and
xchg
push
fadds
clc
xchg
xor
loopne
int
add
pop
roll
inc
iret
jo
mov
fcoms
pop
pop
jo
popf
pusha
ja
sbb
cmpsb
mov
rolb
mov
pop
add
adc
mov
add
and
mov
neg
jb
push
mov
push
outsl
inc
test
enter
push
ret
std
xor
lods
ljmp
add
loope
xorl
lcall
xor
fadds
notb
sti
inc
push
xchg
js
push
fsubrp
sbb
sbb
fwait
mov
or
das
movsl
dec
jnp
daa
mov
ja
push
orb
jle
add
in
in
repz
inc
aas
shlb
aad
mov
push
or
add
jecxz
pop
lock
sub
es
push
lea
push
and
push
or
out
mov
add
sar
imul
sarl
cmp
sbb
or
or
jo
or
jne
wbinvd
fisttpll
lods
popa
or
and
push
cmp
popf
adc
add
mov
inc
sbb
daa
lea
ljmp
add
push
inc
pushl
mov
out
adc
cmp
dec
sub
push
xchg
xchg
sti
cmp
pop
adc
int
addl
inc
outsb
xchg
sbb
mov
mov
cmp
adc
mov
pop
cmp
in
lods
mov
lea
sub
adc
adc
xor
push
hlt
mov
cmp
mov
jmp
push
add
xchg
out
push
cmp
add
shrb
movsl
mov
mov
jge
push
xchg
adc
bswap
popa
inc
call
jmp
push
dec
cli
nop
cmp
push
jo
adcb
out
inc
or
loop
lods
jnp
int
lahf
mov
pusha
fcoms
push
inc
xchg
aam
orl
sahf
mov
dec
sub
push
jp
add
cmp
mov
lret
incl
cmpsb
int
mov
insl
mov
test
subb
rolb
jno
add
clc
jecxz
mov
cltd
cmp
or
mov
and
jle
cmp
sub
paddq
mov
mov
out
inc
int
push
incl
sub
loopne,pt
adc
iret
test
mov
pop
sahf
stos
cmp
pop
cmp
sbb
fisttps
cmp
jmp
test
sub
inc
inc
lock
mov
sbb
dec
sub
sbbb
pop
fcmovnbe
inc
adc
lret
mov
jmp
xchg
jge
jbe
mov
andl
out
les
jae
mov
pop
pushl
adc
cli
or
inc
mul
in
adc
mov
adc
mov
mov
fsubrs
sub
and
lods
sub
inc
pop
inc
add
adc
daa
jmp
adc
mov
dec
ljmp
pop
gs
lahf
pop
push
in
movsl
dec
add
cmp
addb
pop
push
cwtl
sub
adc
lods
push
xorl
pop
mov
inc
inc
sbb
or
cwtl
adc
push
jb
bound
pop
add
xor
aas
mov
roll
stc
pop
jbe
and
mov
add
out
add
xchg
push
xchg
sub
les
inc
addb
test
mov
fsts
pop
fcmovu
pop
pop
lock
scas
sub
gs
shl
fs
std
sbb
adc
loopne
subb
fisttpll
mov
jns
je
add
push
jo
lret
jmp
or
popa
aad
pop
and
push
fiadds
aas
lea
arpl
pushl
lods
adc
xchg
inc
ja
pop
lcall
ljmp
lock
adc
sub
mov
xor
jnp
add
mov
sbb
sbb
pop
inc
cmpb
pop
cwtl
fdivrl
mov
jg
or
dec
shll
pop
inc
add
popa
subb
or
and
xor
inc
pop
push
and
mov
scas
or
add
mov
pop
pop
mov
and
or
loop
jl
add
sub
or
clc
mov
or
push
push
jp
sbb
add
outsb
mov
popa
add
or
cmp
adc
js
call
sbb
or
aam
add
sbb
adc
les
shrb
inc
add
inc
bound
or
mov
adc
imul
jno
jge
mov
mov
sub
movsl
fdivrl
sbb
push
and
sub
ja
mov
or
scas
xorb
repnz
and
mov
mov
ljmp
adc
icebp
push
mov
out
pushf
cli
mov
pop
inc
mov
insb
lods
add
mov
adc
rcl
xchg
cmpb
push
inc
push
xor
xlat
cmp
je
in
and
andb
sbb
sub
cmpb
dec
or
test
ss
sbb
pop
notl
pop
adc
orl
inc
out
push
gs
lods
and
repz
pop
cmp
jnp
js
lods
jg
rclb
shlb
adc
jbe
jge
jge
addr16
pop
mov
push
adc
or
adc
arpl
xchg
add
mov
push
jne
leave
add
mov
nop
cmp
push
lea
pop
lods
pop
lods
pop
pop
add
inc
and
jg
add
adc
xchg
add
clc
je
add
clc
add
cwtl
dec
into
decl
push
lock
push
fwait
sub
js
mov
jo
shl
mov
ficoml
dec
jmp
push
in
shll
push
pop
je
inc
cmp
in
mov
test
add
js
pop
add
icebp
sbb
push
add
push
popa
add
pushf
xchg
inc
bound
sarl
clc
add
mov
cmp
test
adc
and
mov
xchg
fwait
in
outsb
test
lret
jae
dec
dec
fstps
dec
mov
push
or
rclb
xor
jecxz
int3
mov
loop
jle
mov
push
push
movsb
arpl
push
dec
xchg
ret
push
add
dec
and
pop
pop
push
sub
xlat
movsl
cmp
and
pop
add
sbbb
or
cmp
push
sbb
or
pop
adc
add
push
cmp
jle
rclb
ret
adc
mov
rcl
mov
dec
mov
cmp
and
inc
dec
out
mov
mov
push
repnz
sub
fsts
jno
pop
and
das
mov
lret
xor
pop
dec
inc
es
jb
pop
mov
mov
das
push
adc
or
or
sbb
gs
sbb
dec
test
pop
clc
arpl
xchg
add
dec
inc
sbb
xchg
sbb
dec
inc
adc
mov
cmp
dec
jbe
jbe
mov
and
lahf
mov
insb
cld
xchg
int3
push
or
mov
not
cmpsb
aas
repnz
xchg
ficomps
mov
adc
inc
hlt
in
adc
jl
popl
or
adc
mov
jmp
or
inc
adcb
es
in
inc
inc
dec
inc
xchg
sbb
popf
jbe
jae
jne
or
test
push
inc
les
hlt
and
inc
mov
mov
in
popa
adc
add
fiadds
jmp
adc
jne
and
sbb
cmp
and
leave
mov
xorb
or
cmp
sub
xchg
dec
mov
add
dec
lods
adc
adc
inc
push
pop
push
das
sbb
hlt
push
pushf
mov
outsl
icebp
pop
mov
xor
pop
sub
je
push
popf
ds
cmp
inc
push
test
adc
pop
mull
sbb
lcall
adc
add
mov
sarl
je
lcall
or
rorl
mov
add
cmp
js
lock
ret
and
xchg
test
and
sbb
dec
xchg
add
or
or
nop
iret
outsb
jg
mov
shll
dec
xor
adc
or
add
and
shr
add
dec
outsb
xadd
add
add
mov
sti
test
adc
test
adc
dec
pslld
adc
test
xor
cmp
and
mov
lods
lret
sbb
or
mov
mov
jg
jmp
pop
clc
incb
jmp
sbb
std
or
jmp
inc
and
mov
and
inc
jl
and
jecxz
jge
sub
fsubrl
jmp
xchg
jmp
decb
popf
jns
in
and
cmpsb
mov
cmp
xorl
loope
lahf
dec
xor
add
or
pusha
push
pusha
pusha
loope
pop
sub
dec
sub
dec
and
adc
jnp
mov
fnstsw
pusha
pusha
fldl
cmp
call
or
push
addr16
pop
arpl
sub
adc
outsl
add
es
adc
sti
add
out
lret
add
test
fisttps
add
repz
and
dec
xor
cmpsl
or
push
shl
sub
push
mov
sub
or
test
cmp
and
sbbb
addl
je
jb
sbb
jmp
push
and
divb
add
inc
jp
movb
push
fnstcw
xor
pop
mov
fstpl
push
and
push
mov
std
out
inc
dec
mov
cmp
inc
xchg
daa
mov
hlt
cmp
out
clc
fadds
neg
sbb
push
sbb
mov
adc
xor
jp
xchg
add
mov
mov
xor
sbb
aam
xchg
push
aaa
xchg
dec
xor
out
fldt
sbb
les
jnp
jmp
sub
sub
jmp
sub
sbbl
sub
fldcw
and
test
int3
adc
push
add
pop
ret
cwtl
repz
ret
mov
ffree
push
fstpl
xor
outsb
jg
sub
stc
into
jbe
or
fmull
mov
inc
leave
ljmp
add
sub
bnd
enter
xchg
stos
repnz
test
out
dec
into
lahf
imul
insl
in
push
pop
adcl
sbb
shl
jno
mov
push
push
and
jmp
pop
movsb
push
xor
loope
in
aam
rcll
adc
loop
push
and
sbbb
out
lock
xorb
push
push
add
fcompl
and
sbb
jl
xorb
inc
mov
xchg
test
adc
cltd
js
push
xchg
test
fwait
mov
movzbl
add
mov
push
cmp
je
or
mov
push
rolb
jecxz
or
adc
call
sbb
lods
xor
hlt
adc
or
popa
or
sub
or
pop
cmp
test
out
xor
push
shll
divl
fsubrp
fwait
jno
mov
in
mov
pop
cmp
add
xor
mov
into
cmp
adc
xchg
or
loopne
adc
in
fmul
jo
sub
pop
xchg
mov
add
fsubp
xor
adc
imul
or
in
lds
sbb
or
mov
and
sub
xor
and
push
mov
out
int3
jl
add
jle
sbb
inc
push
jb
fnstsw
loopne
adc
mov
inc
sbb
inc
mov
mov
jg
jae
pop
test
stos
std
lret
push
int3
pop
cld
or
aad
pop
clc
jge
adc
mov
sub
cs
into
jp
loope
ret
or
push
cmp
mov
pop
shl
jne
pop
je
popw
gs
mov
fdivl
lcall
rolb
mov
push
pop
fadds
into
and
dec
popa
aaa
mov
sub
pop
cwtl
sbb
push
push
xor
test
fbstp
jne
dec
pop
or
mov
aad
icebp
sbb
in
das
aam
gs
or
stos
inc
add
or
push
xchg
incb
inc
and
jne
iret
scas
mov
sbb
xor
push
xlat
sahf
add
and
fsubrs
das
jae
imul
incl
sub
xchg
inc
ljmp
call
mov
ret
fnclex
and
dec
lock
add
pusha
or
xor
xchg
sbb
push
mov
das
adc
loopne
sub
fwait
sahf
in
cs
adc
sbb
or
and
jle
pushf
loopne
fdivp
jb
mov
sbbb
cmc
adc
and
inc
je
xchg
cmc
shll
xchg
scas
push
mov
xchg
and
jle
or
and
mov
xchg
ret
repz
out
push
mov
push
mov
add
lods
jbe
and
inc
dec
insl
jmp
push
test
orb
pushf
lods
ret
shlb
dec
dec
or
inc
adc
lods
mov
out
insl
push
inc
test
sub
and
das
repz
sbb
push
jnp
add
inc
ds
and
dec
jp
dec
nop
pop
subb
in
fiadds
mov
sbb
and
gs
inc
jmp
xchg
mov
fwait
xor
ja
shlb
sti
jbe
xchg
sub
rorb
fildl
xor
dec
iret
adc
enter
or
pop
testl
pop
xchg
or
add
sbbb
stos
test
or
dec
mov
sub
mov
dec
cmpw
inc
inc
dec
sbbb
add
cmp
decl
imul
mov
inc
add
fwait
add
push
push
dec
push
or
test
adc
out
sub
push
add
mov
cmp
xchg
mov
pop
test
jne
or
adc
xor
mov
stos
test
addb
adcl
xor
pop
add
and
add
sub
testb
add
lea
icebp
pop
shrb
subb
inc
shl
scas
add
sub
pop
or
movsb
mov
rolb
adcl
mov
pop
or
jmp
push
cltd
insb
pop
and
mov
out
psubd
scas
mov
inc
insb
sub
and
mov
mov
add
dec
push
inc
out
or
jb
cmp
sbb
iret
xor
cmp
mov
in
movsl
or
jb
incb
jae
add
mov
adc
jns
loopne
shll
aam
sub
and
or
mov
mov
push
add
hlt
ljmp
insb
cmp
dec
dec
stos
inc
and
hlt
test
stos
enter
test
aam
xor
cmp
push
movsl
xor
mov
lcall
push
clc
out
and
push
cld
not
sub
pop
popf
je
push
push
pop
ds
push
and
xchg
les
je
jne
shl
adc
and
mov
jl
sub
inc
shl
mov
fsubrl
cmp
jl
mov
fs
push
in
xchg
aam
jmp
sub
mov
add
xor
mov
hlt
test
dec
scas
sub
notl
push
or
lcall
lea
dec
add
cli
unpckhps
mov
pop
xchg
push
cmp
pop
xor
pop
add
xor
inc
lock
sbb
mov
popa
or
clc
daa
xchg
or
cmp
lock
addl
mov
xchg
sbb
andl
cmpl
gs
loopne
loopne
mov
cltd
into
out
ret
or
lea
and
cmp
orb
sub
xor
lods
cld
sbb
jge
and
adc
sub
and
pusha
pop
scas
shl
out
pop
push
mov
or
mov
or
mov
or
push
mov
or
mov
dec
ljmp
bound
pop
pop
pmulhuw
sub
sub
adc
inc
push
leave
lret
or
adc
sub
pop
inc
repnz
lahf
or
sbb
mov
adc
sub
sbb
adc
xor
les
jp
inc
mov
xor
push
or
mov
mov
xor
or
inc
adc
ret
mov
shlb
imul
jo
mov
mov
push
cmpsb
xchg
lcall
das
push
inc
jmp
mov
sub
or
xchg
add
bound
mov
sub
cmp
adc
out
ret
push
dec
jmp
fs
insl
mov
sub
add
add
mov
add
call
adcl
or
popa
cmp
jmp
movaps
ljmp
jmp
andl
jmp
cmpsl
mov
sub
pop
add
push
sub
and
xchg
pop
mov
jle
adc
push
push
xchg
dec
xor
adc
jmp
dec
push
mov
jne
jbe
push
lods
subl
fisubrl
pushf
push
cmp
push
dec
fs
mov
dec
or
mov
jae
cmp
ret
dec
cmp
jbe
sbb
push
pop
jge
pop
out
jne
sarl
out
aam
add
add
jne
dec
dec
jae
imul
test
aad
cmp
pop
mov
adc
and
daa
mov
call
decb
jge
out
push
sub
fucom
adc
gs
orl
mov
dec
or
aas
push
and
adc
test
stc
sub
cmp
mov
jo
test
mov
fnstenv
call
mov
shll
test
add
fstps
add
cmp
in
loope
or
testl
and
sbb
rcr
hlt
pop
mov
dec
addl
jmp
cld
push
mov
in
sbbl
and
sub
or
push
adc
or
jecxz
add
mov
jmp
push
cwtl
pop
mov
xor
mov
dec
xchg
mov
xor
xor
jne
xor
xorb
or
jge
neg
add
xor
aam
mov
sub
cmp
xlat
test
cmp
lods
scas
mov
sbb
inc
add
ret
jge
jle
add
and
xor
jne
lea
lods
inc
out
and
add
mov
sarl
xor
inc
mov
sbbl
rorl
std
cmp
jb
mov
dec
mov
ss
rorb
nop/reserved
sub
lea
push
xor
and
and
and
scas
mov
nop
shlb
and
jle
std
mov
ja
ja
cwtl
mov
je
enter
js
xor
testl
add
fmulp
jne
or
jne
lret
out
cmp
inc
into
jne
inc
or
fisubrs
pop
cmp
cmp
jne
hlt
int3
add
loopne
imul
loop
add
scas
mov
lds
rcrb
inc
add
les
lea
lods
mov
jp
jge
rolb
icebp
clc
je
add
dec
ja
fs
js
cltd
jbe
sti
subl
lcall
inc
xor
cld
push
cmpsb
stc
jg
add
lods
dec
push
push
aaa
adc
adc
js
jo
add
aaa
nop
shll
hlt
lods
add
add
testb
shr
add
rcll
adc
into
or
sub
mov
sub
lods
mov
notb
mov
mov
adc
dec
fcom
insl
fadd
loopne
push
sti
pop
shr
or
mov
sahf
dec
xor
jne
insb
mov
push
jl
es
mov
push
ja
aam
loope
mov
sub
inc
jge
xor
xchg
inc
cmp
add
ficompl
popa
iret
rcr
sar
pop
xor
in
fiadds
push
call
push
dec
scas
fidivl
mov
mov
mov
or
mov
orl
popf
fisubrl
jmp
stos
or
sbb
shrl
mov
dec
sub
push
push
into
jmp
scas
push
xchg
rcrb
and
fcomps
orb
data16
rclb
orb
push
lret
das
sub
jnp
into
xchg
add
negb
mov
adc
les
bound
mov
stos
add
push
xchg
xchg
add
and
push
cmp
push
add
jns
cmpsl
xor
les
cmp
or
int
lods
mov
mov
addr16
adc
jmp
inc
add
test
pop
jmp
icebp
cmp
add
pop
cli
adc
push
mov
xor
fcoms
mov
adc
mov
pop
cmp
inc
pop
in
push
in
stos
or
test
push
xchg
xlat
sahf
mov
xchg
adc
inc
cs
or
packssdw
ss
cmp
je
or
out
mov
incl
dec
cmpb
je
mov
cmp
pop
jne
dec
mov
inc
inc
mov
add
out
add
pusha
arpl
mov
mov
inc
jp
ret
lret
jae
fcmovb
pop
xchg
outsb
fisttps
les
xor
call
pop
adc
or
lahf
mov
std
cmc
dec
add
pop
push
and
jns
cs
dec
rolb
notl
pop
jno
leave
imul
mov
and
sbb
or
testb
sub
add
inc
jnp
mov
and
jbe
xlat
mov
shlb
jbe
or
add
and
adc
mov
push
push
pop
je
psubb
cmpsl
lahf
push
cmpl
out
clc
add
mov
fbld
loopne
aas
sub
movb
lea
shll
add
push
ficoml
scas
and
mov
es
add
add
dec
dec
aam
pop
lret
jmp
sub
add
sub
das
sub
pop
xor
mov
push
mov
mov
fs
dec
inc
int
ret
adc
jns
les
sub
inc
fs
xchg
xlat
movsb
fcmovu
pop
idiv
xor
push
or
xchg
aam
daa
add
testb
cmpsb
add
jne
test
stos
insl
push
inc
add
pop
pop
sub
dec
mov
xor
adc
ja
push
xchg
icebp
adc
aam
test
and
insb
push
inc
shlb
cwtl
jmp
sbb
push
ret
jbe
xchg
dec
adc
push
add
sub
adc
lahf
ret
fcoml
lods
scas
mov
cmp
xor
cmp
data16
xchg
push
or
shlb
daa
or
jno
popf
ror
xor
jl
and
add
roll
mov
mov
insl
push
jle
and
decl
xor
call
jge
adc
testl
pop
xchg
fnstenv
xchg
pop
jmp
es
out
adc
shlb
cmc
jle
or
fcoml
nop
jp
dec
lea
loopne
add
adc
orb
inc
lret
lret
and
clc
mov
cmp
insb
add
mov
sar
lea
sti
xchg
or
testb
mov
and
mov
das
xor
pop
add
add
push
xor
cmp
inc
enter
aam
jmp
js
push
rcl
js
mov
dec
imul
dec
and
add
mov
popf
rcll
enter
test
popf
cmp
orl
neg
sbb
sti
pop
cld
shl
mov
jg
ret
daa
xor
or
jne
pop
mov
sahf
ret
jmp
out
jo
fwait
mov
test
movb
inc
sub
xchg
mov
or
xor
sub
mov
mov
sbb
gs
adc
sbb
dec
push
movswl
sbb
mov
arpl
pop
or
add
cmp
pop
lock
add
mov
add
dec
shld
and
jle
mov
ss
jl
jmp
clc
mov
or
pushl
xchg
stc
inc
add
dec
jmp
addr16
xchg
clc
sub
sbb
xchg
xchg
sbb
push
lock
rol
call
push
addb
xlat
adc
cmp
add
adc
sbb
out
and
call
pop
sbb
js
jg
loop
add
in
push
sub
or
inc
adc
neg
cmp
mov
lock
push
push
cli
or
inc
shll
sub
adcl
jbe
and
mov
and
push
jg
lods
jb
scas
mov
dec
inc
dec
pop
adcb
or
mov
mov
add
adc
mov
adc
jae
stc
mov
dec
add
sub
mov
or
xchg
cmp
ret
jg
add
les
loop
call
jb
pop
rorb
and
sub
mov
pusha
dec
push
cwtl
or
sbb
lock
inc
sub
mov
call
es
jne
orb
stos
mov
mov
push
mov
add
or
pusha
daa
out
into
mov
adcb
xor
filds
sbb
test
or
pop
or
add
pop
push
nop
dec
ds
shl
jne
cmp
dec
mov
inc
lret
jbe
sbb
mov
inc
rorb
push
push
lea
mov
stos
sub
icebp
cmpsb
sti
and
adc
push
insl
push
jmp
insl
cmp
cld
cld
jl
fimuls
mov
mov
inc
aam
out
xchg
or
mov
inc
shlb
sbb
mov
cmc
inc
fsubr
sbb
jns
fldt
nop
call
je
or
push
ds
pop
data16
lea
jmp
cmp
inc
popa
je
inc
je
in
mov
jmp
xor
shr
dec
dec
xchg
pop
add
call
or
push
mov
xor
repz
inc
mov
add
adc
in
das
call
jne
fmull
insl
push
pop
clc
fstps
adc
sub
fldenv
shrl
mov
leave
and
add
shlb
cmp
adc
shlb
pop
mov
or
jecxz
icebp
adc
xor
dec
out
mov
sub
mov
inc
inc
ja
dec
add
mov
repz
sbb
cmpb
jne
jp
dec
aad
xchg
or
inc
push
iret
xchg
loop
sub
add
hlt
sbb
xchg
cmp
xchg
cmp
aam
add
add
jo
pop
cmp
movsl
arpl
ficompl
dec
cld
lahf
jo
insl
aaa
dec
push
sub
and
hlt
sbb
pop
popf
addb
cwtl
and
aaa
rolb
push
mov
add
mov
aaa
sub
pushl
xchg
and
push
cmp
imul
or
pop
cli
sub
stos
sub
mov
addr16
mov
adc
pusha
lock
jmp
insl
sar
jnp
sub
pusha
mov
cmpl
pop
lret
add
cmp
mov
push
test
and
jle
insb
mov
pop
add
jne
test
push
jp
pop
gs
xchg
call
or
or
sbb
test
lret
and
add
fsubrl
out
mov
fdivs
jge
jno
add
pusha
mov
sbb
mov
leave
xchg
testb
adcb
out
cmp
jl
or
int
lock
sbb
repz
pop
cmp
into
gs
mov
pushf
add
nop
add
push
les
xor
inc
inc
pop
cmp
or
mulb
pop
pushw
jmp
or
jmp
js
popf
cmpsb
testb
sub
das
add
mov
pop
insl
or
sbb
and
xchg
cmp
xor
sub
test
mov
mov
hlt
loopne
inc
pusha
push
lock
shl
test
adc
push
lock
pusha
push
push
sbb
xor
sub
movl
jne
fidivrl
dec
xor
cltd
lea
or
xor
push
push
inc
sub
jne
adc
add
mov
push
cld
cwtl
adc
mov
adc
add
push
sbb
mov
add
movsl
dec
sub
push
add
mov
inc
hlt
hlt
fsts
lock
sahf
xor
or
adc
xor
push
push
pushf
and
imul
jo
movl
add
in
xchg
pusha
ret
cmc
add
jmp
cmp
mov
test
cltd
sbb
sbb
lcall
inc
fisttpll
das
add
sti
mov
call
sub
push
add
cltd
fbld
and
xor
sub
add
push
inc
jmp
arpl
pop
or
and
add
cmp
inc
xchg
gs
cmp
data16
inc
arpl
sub
dec
in
xchg
push
outsl
bound
mov
sbb
mov
jmp
sbb
push
outsl
test
cld
jo
andb
dec
mov
cmp
out
push
or
jne
lea
pop
jmp
adc
mov
xor
cmp
inc
mov
pop
imul
adc
iret
push
sub
xorl
mov
push
pop
adc
mov
cmp
mov
adc
adc
push
adc
mov
add
add
inc
gs
mov
dec
sbb
cmp
sub
jmp
xchg
jno
cwtl
sbb
xchg
adc
sysexit
xor
ljmp
inc
jmp
test
popa
mov
sub
mov
jae
pop
mov
fimuls
loope
push
mov
xor
jecxz
movsl
sbb
mov
xlat
sbb
int
inc
and
loope
pop
xchg
and
push
jmp
xor
leave
xor
leave
mov
and
adc
inc
fs
lret
mov
setbe
inc
jo
and
mov
push
fwait
mov
mov
out
xchg
loopne
test
xor
jmp
pushf
xchg
popf
push
popa
mov
and
dec
ret
or
add
push
cmp
jne
inc
xor
insl
push
jno
pusha
cmp
adc
sbb
jo
adc
sbb
lock
jno
push
add
ss
cmp
xor
jne
pop
adc
lea
pop
dec
cmp
lea
or
and
shr
add
or
xchg
or
imull
clc
ja
sub
shr
shr
or
mov
add
add
or
bound
scas
push
bound
in
stos
mov
cmp
sbb
mov
fildl
sub
adc
xchg
je
loope
xlat
subl
fiaddl
and
ds
inc
dec
add
lea
mov
shll
cli
mov
adc
ss
inc
stos
or
mov
cs
sub
xor
mov
or
cltd
repnz
and
sbb
push
jbe
test
dec
enter
stc
or
jbe
out
decb
inc
jbe
nop
sub
and
mov
fdivs
call
cli
cld
add
adc
iret
shl
andl
lock
mov
mov
es
js
lds
pop
push
add
decl
in
mov
clc
stos
imulb
or
sysret
xchg
test
test
adc
scas
subb
lret
je
dec
call
test
sbb
loop
cmpsl
cmp
test
and
movsb
adcb
jae
out
icebp
sub
lods
mov
negb
add
popa
sarb
call
sbb
sub
jne
mov
testl
into
inc
add
adcb
dec
movsb
or
and
enter
jns
adc
add
adc
dec
es
frstor
jmp
jle
cmpsb
mov
cld
inc
push
ja
xchg
sbb
or
pop
cmp
and
cmp
leave
inc
xor
mov
cmp
lock
jl
cmpb
jl
xor
fdivl
cmpb
idiv
sub
mov
insb
xor
add
subl
inc
add
stos
cmc
pop
inc
adcb
inc
push
push
mov
push
push
xchg
mov
pop
nop
iret
adc
inc
adc
fstps
and
adc
or
push
loopne
sub
and
adc
call
jo
shlb
insl
adc
add
and
sbb
adc
enter
out
or
mov
daa
hlt
test
adc
push
fcmovu
mov
std
jb
and
shll
mov
je
mov
dec
jo
or
int3
aam
inc
lds
and
dec
ret
and
jne
adc
sub
lahf
bound
mov
movsl
xor
or
test
or
add
aam
sub
push
cmp
xor
jmp
int3
subb
xchg
mov
cmp
inc
in
sub
inc
inc
div
out
or
neg
neg
sbb
sub
iret
and
adc
sbb
inc
or
xchg
sbb
sbb
sbb
fadds
inc
and
shlb
inc
divb
xor
sbb
and
inc
or
repnz
cmp
fwait
dec
jne
pop
pop
pop
test
adc
mov
mov
and
lods
rcl
ljmp
dec
and
shr
test
stc
icebp
push
aam
push
idiv
and
pop
shll
cld
je
div
xchg
ds
jb
or
add
pop
add
lock
mov
adc
pop
jno
push
add
pop
push
xchg
stos
mov
jge
jle
jne
xchg
dec
rorb
gs
int
or
into
jbe
jns
dec
push
jno
aas
ds
jne
cmc
push
adc
pop
bound
sarb
mov
mov
add
push
cmp
push
mov
sahf
int3
inc
das
popa
cld
sbb
xor
adc
or
mov
sbb
pop
and
mov
lods
push
jmp
mov
add
lret
test
int3
push
int
fstpl
cld
and
dec
incl
cs
aaa
dec
fidivs
mov
arpl
inc
jge
popa
sub
jo
and
mov
leave
jne
sub
mov
testb
sbb
fists
or
je
imul
adc
mov
out
xor
adc
es
mov
je
les
mov
add
out
push
cmp
ja
add
cmp
adc
cmp
jne
shll
cltd
shll
leave
adc
mov
xor
idivl
pop
add
nop
jp
dec
add
dec
in
add
mov
cmp
fidivl
scas
ret
ja
clc
addb
mov
pusha
xor
pop
pop
jne
push
es
scas
sbb
das
test
xchg
ret
jmp
idiv
fidivl
iret
push
push
addr16
pop
xchg
js
mov
inc
ljmp
sub
pop
xchg
sub
mov
or
mov
dec
js
xchg
dec
sahf
push
cwtl
jne
add
test
fdivrs
les
dec
cmp
lea
out
in
jmp
in
cmc
sarl
jo
mov
std
cmpsb
inc
sub
ljmp
sbb
in
cmp
push
pop
call
movsb
daa
sub
addr16
inc
sbb
or
xorb
sbb
in
or
es
enter
add
inc
sbb
xchg
or
adc
add
lret
add
pop
jle
imul
inc
ror
push
rcl
sahf
out
sahf
rcl
aad
xlat
fmuls
jns
fstpt
mov
test
lahf
int3
movb
jmp
or
push
cmp
das
cmp
test
mov
fwait
std
shlb
mov
mov
add
sub
pusha
push
inc
push
add
loope
in
jne
mov
push
bound
je
test
adc
push
icebp
adc
mov
push
xor
push
mov
push
fwait
or
add
orb
lea
pop
insb
mov
imul
sub
sbb
sbb
sub
dec
lea
sar
inc
add
fidivrs
mov
add
lfs
test
loop
out
loop
pusha
inc
xor
cwtl
pushf
sub
clc
into
push
adc
sub
fisttpl
adc
mov
mov
sub
inc
xchg
mov
dec
inc
clc
jb
inc
cmp
rolb
or
dec
mov
cmpsb
sub
movb
push
or
adc
ljmp
testl
into
and
lea
pop
sbb
xor
inc
or
jae
xchg
ja
add
lret
push
pop
arpl
into
push
pop
mov
enter
in
ljmp
loopne
inc
or
jnp
xchg
lahf
mov
push
jp
shlb
add
repz
test
rolb
push
mov
addr16
sbb
lea
dec
xchg
mov
or
or
dec
push
or
clc
movsb
sub
cmp
pop
sarl
mov
push
ror
fwait
out
inc
xchg
cwtl
mov
jge
jl
fwait
cmpsb
sub
and
rorb
stc
jle
jle
mov
mov
and
enter
add
mov
or
and
hlt
rorb
ds
mov
push
push
push
lret
xor
add
inc
or
pop
or
or
dec
shrl
mov
mov
mov
or
sbbb
dec
inc
dec
in
movsb
mov
inc
lods
lock
rclb
repnz
iret
push
pop
sbb
cli
inc
cli
div
adc
push
mov
or
inc
or
call
mov
jae
sbb
adc
or
getsec
ret
and
mov
push
clc
call
dec
leave
lock
outsb
adc
fnstenv
xor
icebp
js
clc
mov
out
je
iret
dec
rolb
and
sbb
loopne
cmpsl
add
pop
sbb
or
pushw
sub
loop
dec
inc
sar
out
jge
xchg
test
adc
and
or
jb
test
mov
mov
xor
call
inc
pop
into
or
jne
fdivs
aam
inc
inc
test
jmp
ss
mov
dec
add
loop
inc
dec
mov
xchg
rorb
or
dec
sarl
cld
lea
fcmovu
mov
sub
cwtl
pop
insl
enter
mov
lods
lods
rolb
cltd
add
sbb
clc
sbb
xchg
add
sbb
enter
negb
negb
lret
iret
test
mov
add
xchg
jge
or
jge
sbb
fs
and
es
sbb
jmp
add
jne
push
movsb
repnz
fnsetpm(287
loopne
movsb
pop
xchg
push
outsl
fimuls
into
mov
adc
je
cwtl
sub
push
in
scas
pop
sub
mov
or
add
inc
add
add
or
aas
int3
push
nop
cmp
cmp
inc
fbld
push
out
adc
mov
add
push
js
inc
pop
shr
daa
and
pop
add
or
inc
test
mov
icebp
adc
fcomps
xor
fiadds
mov
imul
jmp
loopne
icebp
sub
xchg
fsub
leave
test
lea
push
and
js
sahf
sub
mov
push
adc
sbb
rcr
sub
out
cltd
loop
xor
and
xchg
inc
aad
stos
mov
repnz
mov
add
sub
push
xchg
mov
into
out
enter
movsl
push
xor
sbb
or
stos
jbe
pop
sub
xabort
mov
jb
inc
enter
cmp
push
sbb
push
shlb
add
notl
sahf
jne
cmp
sbb
testb
lock
inc
test
sbb
inc
in
jg
rclb
mov
dec
cmp
jge
pop
lock
incb
bound
movb
dec
cmp
popf
xchg
mov
add
add
fadds
dec
jb
pop
add
and
mov
cmp
add
or
pop
imul
inc
ret
and
mov
mov
sub
rcll
inc
or
sti
mov
add
add
add
ja
mov
ret
lcall
sarb
push
mov
andb
je
xchg
adc
or
fisttps
jmp
jns
inc
out
xchg
push
or
add
or
pop
pop
test
add
adc
push
add
or
mov
add
xchg
adc
ret
rclb
or
jae
js
fdivrs
test
lret
push
jns
and
cmp
xor
into
pusha
mov
mov
and
in
inc
jecxz
pop
pop
dec
mov
nop
ret
or
pop
shll
or
das
mov
adc
addl
inc
push
pop
jae
or
or
adc
and
test
push
ja
push
or
or
or
mov
pop
pop
dec
dec
pop
or
adc
xlat
dec
pop
lahf
push
outsb
dec
pusha
test
ret
loope
mov
and
mov
inc
jge
cmp
mov
or
sub
popa
pop
jg
pop
push
rsqrtps
xor
push
movsb
dec
lcall
sahf
xchg
or
or
inc
sarl
sub
into
xchg
adc
dec
aam
add
mov
add
bound
imul
ss
or
add
cltd
xchg
data16
or
adc
push
add
into
jle
loopne
out
pusha
mov
xor
inc
lret
repz
into
into
into
lods
push
push
mov
pop
sub
sarb
push
pop
nop
pop
mov
push
out
cwtl
pop
mov
xchg
mov
or
pop
xchg
mov
jnp
pop
push
add
push
dec
popf
pop
lcall
add
leave
lahf
pop
test
pop
or
add
push
add
add
add
imul
and
scas
push
imul
sub
dec
inc
sub
jmp
dec
in
jmp
ret
lods
xchg
lret
xor
sbb
cmp
scas
flds
adc
push
push
jbe
mov
and
or
jae
loopne
sub
lods
pop
fmul
cmp
imul
push
cmp
and
cmp
add
sub
and
jle
xor
insb
pusha
xor
push
sbb
pop
pop
or
cli
xor
sub
adc
jge
mov
popa
ljmp
ljmp
jl
push
icebp
leave
push
xor
sub
cmpb
aam
xlat
les
mov
mov
int3
rcll
add
inc
pop
or
jmp
inc
or
pop
sbb
bnd
or
mov
mov
out
je
sub
or
call
push
cmp
jbe
inc
inc
dec
mov
jmp
pop
sbb
enter
jo
lds
out
and
clc
mov
jo
cmp
mov
jbe
into
add
pop
sub
push
lahf
xor
in
adc
or
lock
push
sbb
cmp
pop
mov
push
into
inc
jns
lea
repz
sbb
add
mov
dec
jmp
test
jp
cmp
inc
and
jmp
sahf
test
pop
sbb
inc
xchg
imul
inc
test
xchg
cld
test
je
test
insb
xor
push
jl
out
cmp
mov
aam
pop
dec
jbe
cli
popf
push
fcoms
jecxz
lret
push
cwtl
pop
mov
or
xor
in
dec
jge
sbb
mov
adc
sbb
mov
mov
sti
pop
xchg
dec
fcoml
jp
shlb
jbe
pusha
xchg
dec
inc
sbb
cmpsl
mov
clc
incl
enter
and
jge
lea
jae
lret
pusha
push
xorb
or
add
les
jl
and
xor
lods
lods
push
rcrl
cmp
and
xchg
dec
pop
mov
sbb
adcb
out
aas
add
pop
leave
loopne
sub
outsb
mov
pusha
add
jae
inc
mov
and
xlat
push
test
pop
xchg
jb
lcall
fistl
fsts
xorb
clc
or
rorl
loopne
pop
jmp
xor
loopne
xor
mov
inc
repnz
push
jne
push
inc
add
mov
das
lods
and
enter
dec
jmp
xchg
addr16
cmpb
mov
mov
fisubrl
sub
inc
add
fdivrs
and
push
aam
int
or
sbb
pop
ret
mov
ret
sbb
std
xchg
sarb
jle
pop
add
pusha
arpl
adc
daa
inc
inc
test
or
mov
and
sbb
dec
sbb
dec
roll
push
clc
or
cwtl
and
in
addl
sahf
xor
or
call
add
lahf
lock
jl
add
clc
push
inc
cmp
pop
jl
lods
mov
lea
pop
addl
adc
mov
xchg
pop
fistpl
pop
nop
xchg
sti
scas
jae
fcoms
scas
aas
adc
cld
push
stos
loopne
jmp
dec
loop
aaa
inc
xchg
scas
xchg
fisttps
int
ss
xor
mov
push
js
mov
xchg
shll
mov
ret
shll
inc
xchg
outsb
stos
js
sbb
scas
mov
clc
xor
pop
push
das
std
xor
shrl
sub
mov
rol
add
shlb
inc
shlb
ljmp
roll
and
push
adc
dec
in
ret
xchg
subb
push
add
add
adcb
push
mov
xchg
pop
testb
mov
testb
adc
mov
addb
push
xchg
pop
pusha
mov
pusha
push
or
cmp
loope
nop
and
inc
in
xor
add
or
shlb
xlat
pop
adc
mov
mov
mov
sbb
lret
cmp
cmp
adc
mov
or
test
sarl
cmc
fwait
jg
data16
dec
shlb
cmp
pop
push
mov
lea
pmaxub
and
push
or
scas
cmp
adc
pop
outsb
mov
dec
and
in
loope
and
mov
mov
loopne
clc
out
cvttps2pi
mov
aaa
xchg
sbb
xor
rorl
push
pop
inc
pop
cs
fldenv
inc
adc
fists
adc
xor
adc
les
sarb
fstps
icebp
lahf
les
pop
or
add
jmp
cmp
fdivs
in
lcall
mov
xchg
and
pop
sbb
push
dec
pop
sub
jge
mov
arpl
pop
fcmovbe
lea
jp
or
sub
cli
inc
rorb
sub
addr16
mov
and
sub
aad
jae
or
incb
or
enter
faddl
lock
leave
and
in
call
addr16
int
ds
nop
in
loopne
mov
into
mov
nop
mov
and
sbb
mov
cmp
imulb
cwtl
jbe
inc
jns
mov
inc
mov
cs
dec
add
fidivl
arpl
inc
push
in
lock
les
jne
dec
enter
inc
lock
lea
and
adc
push
adc
sbb
jp
arpl
std
push
adc
xor
sbb
ret
mov
adc
in
add
dec
inc
jl
pushf
xor
hlt
in
dec
jge
sbb
and
xchg
outsl
adc
fwait
cmp
ss
inc
inc
adc
push
xchg
dec
jo
dec
lea
out
jae
cld
lret
or
pushf
es
sbb
jo
mov
movsl
push
imul
add
pop
movsb
pop
pop
and
bound
mov
stc
xor
pop
out
and
inc
gs
fwait
in
pushf
mov
sbbb
or
mov
and
mov
adcl
push
pop
repz
xchg
and
mov
xchg
mov
adc
les
mov
aam
test
jge
in
push
adc
in
in
movups
cmovg
cmpsl
insb
subb
mov
shll
icebp
fcoms
mov
sarb
xor
fwait
inc
xor
inc
add
lock
adc
sti
mov
mov
and
addl
ret
aaa
cmp
cmpb
orb
dec
push
or
xlat
test
mov
inc
in
adc
push
in
aad
or
roll
stos
fmuls
cmp
or
negl
in
rclb
leave
loopne
mov
movsl
int3
or
in
aam
mov
rorb
lock
sub
dec
scas
add
xor
sub
leave
and
adc
and
dec
cmp
and
dec
xor
ds
int
push
and
xchg
xor
pusha
sub
cmp
ljmp
aaa
xchg
add
js
popa
sbb
mov
movsb
inc
in
adc
fcomps
sub
sahf
adc
and
xchg
sbb
push
xor
aas
xchg
je
je
sbb
and
xor
loopne
xor
nop
inc
pop
xchg
or
call
lea
movsl
sldt
lods
jmp
les
mov
stc
sbb
movsl
mov
mov
xchg
mov
aad
or
sbb
lds
or
mov
outsb
add
add
add
aam
mov
imul
pushf
adcl
shll
mov
enter
inc
or
cld
push
or
pusha
adc
dec
lcall
in
rcll
insl
mov
popf
lods
mov
jns
pushf
pop
mov
mov
xlat
and
cmp
cmp
mov
xchg
push
in
inc
xchg
sbb
fcom
push
imul
in
dec
adc
jecxz
push
jno
xchg
cli
add
inc
pop
mov
aam
mov
sbb
cmp
sahf
sbb
dec
fwait
insb
int3
out
sub
popf
xor
lcall
sahf
pusha
enter
cmpb
lds
ljmp
xor
dec
push
loopne
out
lea
fcomp
aam
inc
pushf
mov
adc
sbb
add
in
js
mov
lock
outsb
inc
roll
fldt
dec
dec
dec
mov
mov
dec
enter
xor
sub
rorb
sbbl
popl
push
imul
cmp
ret
sbb
cwtl
lds
pop
js
in
fldl
nop
pop
and
adc
nop
jbe
xor
inc
fsubs
dec
and
test
scas
insl
in
bound
pop
das
test
sub
sbb
push
lock
imul
jmp
in
andb
mov
dec
jmp
pop
mov
mov
int3
das
cmovae
cmp
jnp
add
mov
outsl
fmuls
and
adc
dec
inc
jecxz
je
sbb
cmp
dec
mov
xchg
add
rorb
xor
pop
and
jnp
dec
xchg
xchg
lods
pusha
mov
shlb
cmp
inc
aad
sub
imul
jl
ja
xor
dec
push
pop
cs
xchg
pusha
cltd
fs
add
mov
js
jl
stos
pop
sbb
addl
mov
test
xchg
addr16
inc
jmp
in
test
sti
mov
adc
gs
lock
das
dec
adc
popa
in
rclb
sbb
adc
mov
in
cmp
call
mov
inc
test
rcrl
adc
popf
cmp
dec
lods
add
iret
aaa
mov
xor
sub
mov
in
or
js
xchg
sub
outsl
loopne
xchg
pop
jl
add
ret
add
shll
sbb
sbbb
lock
mov
push
repnz
cwtl
cmp
fs
pop
imul
add
cltd
or
bound
jne
popa
xchg
adc
jb
and
or
sbb
and
pusha
mov
leave
inc
or
call
and
lcall
adc
hlt
pop
mov
dec
inc
inc
or
or
mov
add
mov
enter
xlat
fst
add
sbb
inc
jbe
ret
xchg
push
jb
add
in
fwait
scas
mov
and
hlt
add
jmp
mov
dec
stos
lods
fcompl
movsb
jl
and
fnstsw
testb
in
and
mov
add
inc
popf
xchg
mov
fcompl
cwtl
pop
movsb
in
xchg
and
xchg
nop
decb
add
popf
std
mov
or
jbe
arpl
xor
pop
call
out
and
mov
sbb
pop
xchg
pop
xor
jne
or
pop
jo
mov
mov
sub
inc
fwait
or
mov
xchg
jbe
pop
sti
pop
movsl
push
sub
dec
inc
mov
in
stos
shlb
xlat
enter
sbb
lods
sbb
int3
enter
dec
dec
dec
mov
dec
dec
dec
xchg
cwtl
mov
pop
sbb
pop
xor
movsl
dec
cmc
inc
xchg
int
xorb
js
pop
jno
or
mov
jmp
das
xchg
mov
mov
rol
and
jle
fimuls
mov
std
xchg
test
xor
fcoml
adc
loope
mov
mov
pop
mov
leave
and
lods
test
push
sub
lock
fstl
adc
adc
xor
push
xchg
repz
mov
or
fcmovnu
cmp
aam
dec
pop
or
aam
sub
dec
nop
movsb
sarl
in
mov
sbb
pop
sub
push
adc
in
cmpl
stc
into
mov
xor
int
aaa
mov
jb
xor
xchg
and
lock
aam
daa
pop
dec
aaa
inc
bound
sub
lahf
stos
lret
nop
jecxz
push
loopne
or
adc
dec
sub
jne
hlt
shlb
push
pop
insb
jmp
mov
sbb
in
call
cmp
jne
cmpsb
daa
lcall
cmpsl
enter
jne
test
or
inc
fisubl
loope
push
mov
mov
mov
or
in
cmp
mov
es
xor
shlb
and
rorb
in
inc
fstpt
sub
mov
push
rorb
sbb
enter
pusha
or
and
add
subb
jge
loopne
int
sub
fldenv
and
loop
aam
jecxz
push
es
stos
lret
lods
insb
std
cmp
leave
pushf
std
pop
pop
inc
nop
dec
ficoml
mov
out
dec
repnz
fildll
adc
dec
mov
test
jo
das
push
fbld
test
push
xchg
inc
test
fcoml
lods
sbb
inc
in
or
fwait
jno
xorl
in
loope
inc
test
rclb
fs
test
dec
rclb
aam
push
sub
rclb
out
in
or
dec
adc
es
inc
aam
xor
pop
mov
sbb
fmuls
movsb
imull
in
stos
std
push
call
fsub
aas
lods
cs
mov
dec
cmp
pop
cwtl
lods
or
mov
loopne
mov
xchg
scas
push
adc
shrl
dec
add
ss
int3
xchg
sub
push
inc
das
cwtl
xchg
inc
pop
out
scas
lock
lock
outsl
shrb
nop
dec
addl
rcl
pop
inc
outsl
in
lea
fsubr
aad
inc
mov
bound
adc
push
insb
pop
mov
sub
nop
xchg
lcall
mov
push
ss
or
enter
mov
dec
dec
fcoml
out
inc
mov
rcll
jnp
shlb
shll
mov
enter
gs
out
lret
adc
xorl
into
out
pop
add
push
inc
xchg
pusha
test
push
nop
out
stc
pop
loopne
xchg
sub
stos
dec
sbb
sub
or
mov
jno
nopl
mov
in
and
push
in
popa
mov
in
mov
fcompl
xor
mov
bound
sbb
les
inc
lods
jns
xorb
inc
mov
sub
stos
or
or
shll
and
cmp
push
sub
in
in
stos
push
sub
adc
dec
add
add
subl
adc
mov
jp
xchg
cwtl
int3
cmp
insb
out
inc
loopne
push
fsubrs
fsubs
int
mov
lds
iret
rclb
fdivrs
rorb
leave
fsubs
or
imul
pop
pop
and
sub
xor
dec
jmp
mov
push
inc
enter
or
mov
fiaddl
movsl
pand
or
gs
andl
lods
fadds
dec
jle
mov
pop
inc
rolb
test
test
and
popf
fcom
je
jne
or
js
imul
sub
push
push
leave
xchg
xchg
cmp
call
lea
inc
mov
or
push
mov
call
shrb
cmp
mov
mov
jecxz
jo
adc
or
and
add
jmp
insl
or
adc
loop
shrb
and
sarb
mov
aam
mov
enter
xorb
push
inc
dec
ret
push
pop
movsb
and
adc
inc
sub
mov
push
enter
add
xor
lcall
in
out
or
sub
repnz
pop
sbb
fisttps
rcrb
inc
aaa
xchg
jl
inc
mov
test
xor
dec
pop
bound
push
jns
add
adc
in
lret
add
inc
mov
cmp
nop
outsl
adc
sbbl
cmp
mov
xchg
sbb
sbb
sbb
js
and
nop
mov
dec
inc
les
call
enter
fsubr
add
sub
dec
pop
out
sub
mov
add
test
pop
xchg
dec
cmp
push
jmp
in
pop
or
shll
mov
xor
sbbb
push
roll
push
xorl
mov
adcl
mov
pop
shr
in
sarl
add
or
mov
adcl
ljmp
leave
and
pop
je
test
adc
mov
fwait
stos
jo
outsb
push
dec
push
xlat
js
mov
push
addb
inc
pop
fs
and
cltd
in
mov
dec
dec
push
mov
dec
test
enter
incb
ret
shrb
aas
adc
adc
mov
xor
loopne
or
xor
int3
loopne
push
jno
add
ret
mov
mov
push
and
push
and
sub
insl
jne
lds
popf
sub
adc
lahf
push
sbb
call
decb
push
cs
mov
roll
adc
or
sub
cmp
nop
loope
push
iret
call
jo
pop
in
or
movb
push
or
and
jb
xor
std
xor
xchg
or
test
adc
insb
enter
fists
add
nop
das
jae
mov
or
adc
dec
mov
sbb
add
and
nop
and
outsb
sub
gs
sbb
adc
gs
out
shlb
cmp
pusha
dec
push
fists
and
adcb
aam
add
test
adc
mov
xchg
invd
xlat
dec
xor
adc
cmp
push
and
jo
push
xchg
fistl
loop
adc
mov
stos
dec
in
fbstp
mov
les
mov
push
aas
lahf
and
cmp
lock
mov
nop
mov
ja
push
test
cmpsb
addb
lret
sbb
and
gs
cwtl
lret
movsb
es
add
xchg
inc
adc
sbb
insl
adc
mov
mov
sbb
add
xchg
jne
int
sub
inc
mov
adc
adc
lds
arpl
test
adc
mov
stos
sub
test
or
sub
dec
adc
inc
iret
sti
inc
jo
cmpsl
or
mov
mov
jno
mov
push
jno
rolb
jp
pop
dec
shlb
sbb
nop
jne
mov
es
mov
xor
cwtl
loope
adc
fs
inc
or
or
mov
es
sbbl
push
or
paddb
aad
jbe
push
sub
insl
rolb
mov
sub
scas
add
add
loopne
call
cmp
sub
and
adc
shlb
insb
adc
test
cmp
fidivl
adc
orb
les
psubusb
call
adc
push
sti
mov
scas
mov
sbb
icebp
adcb
loope
inc
push
cmp
test
je
rol
in
pushf
adc
test
cwtl
fs
xor
dec
mov
shll
leave
add
outsl
mov
int3
mov
add
push
xor
ror
popa
clc
loopne
inc
jo
mov
push
jne
and
mov
cmp
adc
ret
outsl
jo
push
and
adc
movsb
mov
scas
pop
je
jo
or
add
push
fcoms
adc
subb
push
dec
gs
pop
or
in
mov
cmpsb
sbb
aad
aad
popf
fmuls
movsb
adc
lock
fldl
fcmovnu
inc
pop
ret
push
fldt
sbb
or
pop
mov
jb
mov
dec
pop
fcoms
inc
fcoms
in
std
xor
pushf
movsl
adc
fadds
int3
adc
mov
aam
int3
es
xor
clc
mov
add
sbb
fstps
shlb
and
je
cmpsb
fwait
pusha
mov
fcomps
scas
test
jb
fiaddl
mov
subb
stos
pop
inc
ficoml
adc
pop
dec
push
sub
sbb
repnz
cltd
mov
in
mov
add
push
sub
lods
cmpsl
mov
sbb
mov
sub
faddl
push
xchg
sub
xlat
test
lock
xchg
cmp
lock
scas
notb
mov
in
jb
inc
lock
decb
or
xchg
mov
sub
lcall
inc
adc
push
nop
mov
pop
jmp
or
sbb
cld
in
mov
sbb
adc
jno
aaa
cmp
aam
fstl
aam
addr16
or
or
add
pop
and
aam
cmp
fldl
movsl
jne
xor
aad
ds
and
cmp
pop
sub
scas
jecxz
into
jmp
adc
movsb
xchg
cwtl
dec
or
push
and
push
ret
mov
jbe
inc
push
test
fistps
dec
adc
sub
dec
cmpsb
dec
push
pusha
pop
insb
jo
mov
pop
subb
and
cltd
nop
dec
pop
mov
dec
cltd
subb
cltd
mov
fiaddl
sbbl
sub
cmpl
imul
xchg
inc
adc
and
inc
faddl
mov
xchg
adc
loope
adc
rclb
ret
int
rcl
sbb
xor
or
jbe
and
cmp
pop
nop
inc
repnz
outsb
lret
sarb
ds
insb
push
add
push
cmp
and
adc
or
sub
scas
insl
mov
aam
sar
out
and
and
add
or
out
sarl
xchg
and
add
out
mov
mov
pusha
or
in
mov
pop
test
mov
mov
sub
and
lods
mov
mov
mov
inc
mov
mov
or
pop
mov
xor
mov
or
mov
js
xor
and
and
ds
pop
int
sarb
jl
rcr
and
fs
aam
jmp
and
fs
push
insb
jns
cmp
ficoml
je
cmpsl
loopne
out
adc
orb
sahf
fadd
mov
adc
leave
in
cmp
out
lods
fdivrs
cmp
adc
out
inc
push
jo
sub
push
and
negl
cltd
and
out
inc
jg
in
adc
test
inc
adc
cmp
decl
dec
mov
fistpl
or
jnp
mov
add
lahf
pop
pop
and
shlb
leave
or
adc
outsl
dec
mov
out
leave
ljmp
cmpb
mov
iret
sub
cmp
cmpl
sbb
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
jg
mov
pop
pop
pop
popa
bound
jmp
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
xor
xor
add
das
mov
das
mov
gs
xchg
adc
clc
xchg
stc
lcall
or
cmp
rclb
cmpl
xor
divl
outsb
and
iret
repz
add
push
dec
outsb
je
jb
jbe
lods
std
outsl
arpl
fs
out
sbb
push
dec
imul
mov
jne
push
gs
xor
cs
in
lahf
decl
pop
bound
and
popa
je
outsl
outsb
push
cwtl
ret
push
lds
pop
lock
rdpmc
pusha
scas
divb
incl
sub
and
cwtl
aaa
imul
inc
js
je
jb
inc
fldt
gs
cmp
or
add
add
cld
in
cld
add
add
je
push
je
jbe
lock
jb
mov
pop
pop
mov
add
arpl
iret
mov
insl
cmp
dec
and
xor
add
push
das
das
adc
push
dec
addr16
lock
insl
bound
daa
jnp
aas
jbe
outsl
jbe
dec
arpl
push
jo
sub
jne
jne
dec
jne
xchg
in
out
popa
mov
inc
jo
imul
subb
jb
inc
insb
adc
mov
popl
outsb
jns
jg
addr16
or
fcompl
jne
xor
cltd
loop
and
daa
push
scas
clc
sbb
in
cmpsl
cwtl
adc
and
jbe
pushf
outsl
pop
dec
inc
ds
popa
das
mov
lcall
add
mov
sub
call
fs
jp
pop
sbb
add
and
push
jno
cmpsl
mov
arpl
sub
sub
cs
lahf
cmpsb
das
movsl
cmp
cmp
ds
inc
das
mov
pop
xchg
pusha
cmp
jl
jle
add
arpl
test
rorb
addr16
and
out
mov
inc
adc
xchg
negb
inc
insb
jae
cs
scas
jmp
mov
inc
jae
shr
mov
xor
lds
jnp
insl
and
jb
jbe
dec
push
push
sbb
aaa
cmp
inc
sbb
ss
outsl
int
and
push
xor
sbb
cmpsb
aas
aad
push
jo
imul
insl
pop
mov
popa
je,pn
jo
xchg
mov
mov
idivb
and
rolb
inc
ds
scas
int
mov
or
xorb
inc
popa
data16
daa
mov
jne
pop
ja
loopne
xor
and
insl
push
xchg
sbb
mov
xor
mov
dec
mov
int
shll
les
out
mov
add
xchg
and
sub
test
sbb
jp
sbb
fs
inc
pusha
push
xchg
je
addl
in
ds
fs
popf
jb
loope
mov
loopne
outsl
mov
test
daa
sub
lock
inc
and
das
arpl
cmp
arpl
dec
popa
sub
mov
fiadds
inc
xchg
insb
push
in
inc
imul
xchg
imul
or
push
lcall
mov
push
xchg
idivl
jns
push
fistps
movsb
pusha
push
cs
insl
lock
adc
xor
bnd
aas
xor
hlt
pop
dec
nop
or
dec
add
pusha
out
dec
aaa
ja
or
ss
in
stc
jae
fs
push
hlt
cli
jbe
add
inc
jbe
je
xchg
push
mov
jo
andl
push
and
lds
xor
xlat
outsl
push
or
arpl
cmp
outsl
push
push
xor
inc
aaa
ret
or
mov
dec
xor
imul
in
jae
lea
rclb
shlb
leave
nop
inc
insl
imul
cmp
stos
sbb
popa
in
or
xchg
cmp
je
add
push
and
pop
push
cmp
push
pusha
test
addr16
jae
push
addr16
xor
fsubl
sbbb
add
sub
je
cmp
rol
movzbl
push
sub
lret
inc
sub
pop
jge
add
jmp
jo
in
push
lods
push
and
cmp
cwtl
ja
lods
vcvttpd2dqy
inc
and
dec
cmp
cltd
fisttpll
lcall
loopne
out
ss
add
ds
sub
rol
das
lret
jno
icebp
ret
repz
inc
mov
clc
ret
movsl
add
xorl
jae
jae
push
loop
imul
pop
add
cmpsb
test
out
aad
popa
dec
add
xor
insl
stc
fldl
js
jae
je
mov
fidivs
dec
pop
add
add
jb
sbb
sub
xor
mov
xchg
adc
adc
add
pop
movsl
jge
add
add
add
and
push
pop
push
push
pop
icebp
pop
or
aaa
ds
push
pop
hlt
and
or
cltd
divl
js
or
sub
fidivrs
add
addb
add
imul
push
xchg
test
add
sub
dec
mov
pop
daa
push
cmpb
push
and
sub
jb
int3
push
jmp
into
jo
add
pusha
push
inc
add
push
dec
icebp
xlat
push
stos
int3
js
jo
mov
xor
int3
rorb
sbb
pushf
xchg
lea
mov
and
loopne
xchg
pop
xchg
xchg
jno
push
inc
mov
adc
or
test
xchg
push
dec
pop
pop
adc
loope
adc
dec
cmp
test
cmp
pop
cmp
test
data16
adc
adc
out
push
adc
je
sbb
rcrb
xchg
and
sub
sbb
pop
and
xchg
sbb
xchg
adc
and
xorb
add
ja
inc
jb
rolb
adc
add
fs
add
add
or
ljmp
mov
test
mov
sub
push
shr
and
jg
add
addb
xchg
lea
xchg
call
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
pushl
mov
mov
enter
int3
int
iret
rcl
rcl
call
aad
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
inc
and
mov
roll
mov
lea
roll
nop
bound
incl
dec
test
fists
das
cwtl
mov
outsl
ja
inc
cs
jae
sbb
dec
bound
dec
stos
inc
lea
popa
mov
repnz
fisubrs
jne
daa
pop
lea
dec
mov
popa
addr16
outsl
js
push
push
inc
push
mov
xchg
ss
and
insb
gs
mov
fcmovnu
cmp
dec
mov
daa
add
insb
mov
gs
in
dec
imul
mov
imul
dec
inc
jb
movsl
and
daa
pop
enter
andl
mov
push
sbb
aad
lcall
addr16
cmp
outsb
inc
sub
insb
pushw
mov
mov
push
in
fisubrs
pop
pusha
inc
jbe
push
loopne
test
jns
lea
dec
lcall
sti
inc
adc
pop
cmp
push
push
lock
and
push
es
dec
lahf
inc
or
inc
lock
push
popa
jnp
xchg
jae
mov
test
pusha
mov
call
push
subl
gs
mov
data16
xchg
mov
pop
bound
push
push
push
dec
testl
push
int3
repnz
mov
in
loope
cmp
lds
mov
aas
jg
dec
ret
adc
call
sub
fistpll
inc
adc
lods
sbb
xor
jg
popa
jl
rorl
stos
mov
or
ljmp
outsl
data16
test
mov
aaa
daa
xchg
mov
cmp
mov
pop
pop
cmp
cmp
add
jnp
negl
push
sub
insb
mov
jl
push
jle
sub
sub
cmpsl
in
fdivrl
addr16
sub
sub
cmp
cmp
jmp
inc
cmpsl
bnd
cmp
in
out
push
cwtl
sbb
addr16
push
jb
imul
jo
ss
lret
out
cltd
loope
lods
sbb
cltd
adc
inc
jo
cmp
jae
mov
jl
scas
or
jbe
sub
cld
push
hlt
push
call
les
rep
cwtl
dec
add
sti
out
sahf
cmpsl
push
aam
cwtl
nop
mov
sahf
cmpsl
stc
mov
push
test
xor
out
jo
pusha
adc
pop
rcrb
cmp
lock
das
notb
cmp
adc
loopne
push
fmuls
dec
out
jns
jnp
push
inc
movb
push
cmp
jns
jns
cmp
xor
sub
xchg
out
sahf
and
sbb
adc
jns
repz
add
decl
sahf
out
sahf
shrb
out
inc
or
incb
test
sahf
out
sahf
pusha
inc
xor
sub
cmp
sarl
in
loopne
mov
cmp
repz
insb
inc
sbb
cld
out
sahf
cmpsl
aam
mov
and
pop
aam
inc
mov
shlb
mov
outsb
push
xor
inc
dec
mov
cbtw
cmpsl
pop
push
push
pop
cmpsb
bound
fs
repz
push
lret
jae
jb
xor
jnp
cmp
push
mulb
xor
add
jle
push
inc
test
incl
dec
jae
insb
inc
out
gs
mov
sbb
push
incb
dec
inc
dec
xor
inc
dec
dec
dec
push
push
loop
and
inc
dec
jg
xchg
mov
inc
add
adc
sub
or
jo
adc
incl
popa
into
mov
sbb
fwait
mov
adc
outsb
mov
ds
pop
fpatan
push
pop
clc
lret
sbb
jb
mov
jge
arpl
cmp
adc
dec
scas
jp
adc
jg
fstl
mov
and
cmp
dec
imul
inc
sahf
push
cmpsb
iret
lret
add
inc
mov
mov
shr
test
sub
fwait
ss
sbb
pop
jg
jns
ds
xor
incb
int3
dec
dec
xor
dec
popf
pxor
xor
mov
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
jg
insl
xor
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
inc
cmp
push
pop
popa
push
or
scas
int
mov
pop
leave
loop
mov
aam
lahf
xchg
lods
in
aas
test
cwtl
iret
adc
xor
pop
mov
inc
sub
lret
es
sbb
sbb
fisttpll
test
push
dec
push
push
adc
ret
inc
or
outsb
jbe
and
nop
add
sbb
ficoms
insl
cmpsb
imul
and
lcall
push
sub
mov
pop
push
loopne
ss
push
sub
push
ss
push
add
ss
or
pop
add
push
adc
sub
push
pop
xor
add
xor
pop
or
in
call
inc
push
adc
pop
or
ss
dec
push
inc
es
mov
jb
sbb
sub
adc
pop
xchg
jg
jnp
add
adc
cmp
push
add
es
pop
pop
std
mov
sub
or
inc
sbb
aas
xor
xor
or
and
and
lods
pop
xor
ret
pop
pop
push
add
push
fdivrp
mov
ljmp
pop
push
cmp
cmp
sub
or
out
or
inc
ss
and
push
adc
mov
pop
inc
push
cmp
cmp
sub
add
inc
inc
adc
inc
sub
pop
push
test
sub
push
adc
inc
add
mov
inc
pop
dec
daa
sbb
inc
and
leave
xlat
pop
divb
sub
addb
pop
and
or
sbbb
pop
push
cs
dec
mov
pop
dec
sub
push
mov
or
sbb
adc
sbb
sbb
sbb
xor
fstps
sbb
das
sbb
xor
sbbb
cmp
adc
inc
xlat
outsb
dec
add
int3
xor
xor
xor
adc
ss
push
dec
and
dec
inc
xorb
mov
cmp
push
push
mov
jb
ja
push
lcall
pop
push
gs
mov
xchg
pop
push
pop
mov
and
cmp
xor
or
or
sub
pop
dec
lock
sub
dec
cmp
cmp
mov
and
or
mov
adc
cmp
pushl
adc
fs
adc
dec
cwtl
in
push
cmp
cmp
daa
xor
push
lcall
push
push
jge
jb
mov
iret
rcr
leave
out
cmp
ja
scas
outsb
jg
sub
pop
sbb
cmp
repz
sub
sahf
out
daa
dec
and
mul
pusha
inc
ret
pop
hlt
inc
scas
sub
cwtl
sbb
xor
or
jp
cmp
push
lahf
loope
outsl
insl
mov
inc
popa
outsb
push
add
jmp
lods
or
push
popa
ret
out
fcoml
mov
bound
xor
pop
mov
or
inc
mov
pop
jbe,pt
mov
cmpsb
leave
in
aas
and
push
sbbb
or
and
es
cmp
mov
pop
lock
shll
adc
push
pushf
es
push
aaa
sub
add
pusha
sbb
scas
test
call
sub
or
push
sbb
sbb
and
pop
sbb
fisubrl
dec
mov
pop
imul
pop
or
xor
adc
or
mov
sahf
or
push
sub
mov
push
inc
cmpsb
inc
aaa
or
xor
jb
arpl
mov
or
adc
cli
adc
or
push
push
insb
push
inc
or
mov
inc
and
push
sbb
push
sbb
jb
lods
sub
add
or
or
cmovno
dec
inc
jp
cmp
or
es
or
dec
in
out
sub
cmp
ds
xor
sub
ja
sub
push
mov
cld
xor
out
cmp
loopne
pop
sub
daa
jecxz
push
add
scas
jge
or
int3
cmp
outsb
sub
scas
scas
and
mov
dec
sub
daa
inc
or
xchg
xor
fistpl
sub
adc
sub
pusha
mov
and
adc
push
push
insl
and
or
inc
sub
in
and
in
push
cmp
cs
mov
adc
push
pop
cld
mov
iret
cmp
inc
cmp
mov
cltd
fcmovb
jo
jne
push
xor
out
sbb
and
dec
adc
and
addl
aaa
and
dec
es
fwait
or
mov
imul
adc
and
xchg
testl
test
xchg
push
add
push
dec
inc
xchg
add
ss
pop
dec
add
rclb
xor
ss
inc
testl
and
and
push
testl
das
push
icebp
mov
outsl
arpl
xor
push
push
push
outsl
jle
lret
popa
push
adc
into
aaa
daa
jo
cmc
or
xor
mov
sub
jo
or
into
ss
lods
push
and
dec
xor
ret
daa
mov
dec
and
xor
pop
sbb
sbb
divl
pop
adc
and
adc
cmp
cmp
push
add
and
pop
pop
or
jle
in
dec
dec
sbbl
push
cmp
fwait
cmp
push
and
pop
sub
loopne
jmp
or
xchg
xchg
jbe
int
jmp
xor
and
movsl
xlat
mov
ret
add
imul
inc
xor
ss
bound
cmp
into
and
push
push
fcomp
or
sub
push
sub
add
cmp
push
sbb
push
or
add
jae
test
dec
dec
ss
cmp
cmp
xchg
sub
jbe
or
popa
push
je
pop
daa
add
xchg
imul
inc
push
aas
push
insb
pop
adcl
dec
and
push
jge
ret
sti
adc
adc
sub
and
pop
mov
push
sub
add
or
loopne
cmp
out
sahf
jnp
out
push
cmp
sbb
leave
imul
and
outsb
dec
pop
jns
enter
pushf
js
sub
pop
adc
and
ja
and
jae
push
xor
push
insl
popa
imul
cs
outsb
bnd
jo
pop
outsl
jo
sahf
adc
jl
sbb
push
ja
pop
iret
repz
xchg
adc
push
pop
push
inc
cmp
repz
add
dec
add
mov
pop
cmp
out
insl
ja
xor
cmp
and
xchg
cmp
and
pop
test
into
or
inc
jnp
sbb
pop
je
sub
aad
cs
dec
pop
sbb
and
sarb
xor
mov
cmp
loopne
pop
or
pop
shrb
pop
pop
ja
lds
outsb
or
cmp
addr16
hlt
or
dec
push
sbb
xor
scas
jo
dec
cmp
or
sub
scas
psubb
or
idivl
mov
rcrb
out
push
mov
xor
aaa
sbb
add
sbb
add
cmp
push
pusha
int
ret
push
ficoms
pop
mov
out
push
pushf
push
popf
add
push
roll
and
sbb
rclb
mov
xor
fmuls
mov
pop
iret
dec
bound
xchg
out
inc
iret
mov
pop
mov
bound
icebp
outsl
jae
gs
inc
pop
imul
sub
jnp
and
and
push
push
das
cmp
adc
dec
adc
and
mov
mov
and
inc
das
mov
push
sub
mov
push
dec
sub
lea
das
cmp
xor
je
dec
jae
ds
and
test
and
jb
sbb
mov
outsl
imul
daa
jbe
jmp
push
lods
pop
cmp
push
mov
je
xor
loope
pop
xor
adc
and
inc
pop
adc
fdivrp
add
inc
or
cmp
cmp
sub
sub
dec
add
sbb
out
js
test
push
push
fidivrs
inc
call
cmp
mov
inc
and
add
aas
mov
inc
cs
mov
push
push
es
mulb
xchg
jle
dec
mov
xor
loope
or
or
mov
clc
repnz
fidivl
mov
fwait
sub
mov
mov
inc
pop
and
add
enter
adc
inc
sub
push
shll
dec
popf
lock
insb
adc
xlat
into
xor
or
mov
or
pop
push
out
rcl
dec
push
or
and
mov
imul
fisttps
test
aaa
sbb
and
pop
inc
xchg
mov
xchg
adc
rorl
fnsave
and
inc
sbb
push
push
inc
prefetch
mov
pop
lods
pop
pusha
add
pop
test
xchg
in
lahf
mov
pop
xor
push
adc
push
or
ss
jmp
adc
xor
add
in
cwtl
or
sub
shrb
or
aaa
push
jl
jae
xor
push
addl
and
repnz
pop
dec
enter
pop
es
add
repz
adc
push
sbb
xchg
or
xor
push
jecxz
jae
imul
cmp
outsl
sbb
xchg
push
add
push
clc
mov
push
clc
ljmp
fs
jmp
fs
inc
lock
test
push
dec
jno
test
and
adc
gs
test
xchg
xor
outsb
xor
push
or
pushf
cwtl
jnp
or
cmpb
xchg
test
sub
dec
adc
out
jno
push
comiss
add
out
pop
pop
sbb
pusha
in
mov
sbb
and
pusha
inc
jno
cmp
mov
cmp
push
sbb
sbb
adc
and
push
cmp
mov
dec
xor
fistpll
ret
add
dec
ljmp
cmp
mov
pop
dec
jae
mov
mov
cmp
stos
mov
dec
sub
dec
popa
inc
aaa
sbb
mov
mov
mov
sub
push
jae
dec
sub
dec
and
pop
addr16
and
pop
add
xlat
mov
push
push
jbe
lods
int
ja
xor
sbb
push
xor
pop
nop/reserved
es
stos
stos
enter
lcall
xor
pop
pop
mov
out
dec
push
pop
mov
cmp
add
data16
and
add
push
data16
fisubl
adc
push
sbb
lea
sbb
dec
push
push
xchg
sub
add
push
add
aaa
push
and
inc
and
and
mov
or
xor
adc
aaa
int3
sbb
mov
cs
sub
loope
cwtl
or
lds
loope
xlat
or
clc
or
sbb
outsb
xor
sbb
rcll
adc
or
xor
enter
repz
xor
jg
cmp
daa
jae
addb
hlt
mov
es
or
mov
sbb
hlt
sbb
adc
and
aaa
stos
das
adc
add
sbb
shll
repnz
cmp
mov
dec
cmpsb
mov
sbb
pop
or
xor
push
lock
adc
jg,pt
sub
inc
cmp
or
mov
adc
insb
and
sbb
jnp
ss
add
jbe
cmpb
dec
push
out
xor
ss
cmp
das
movsl
mov
xchg
mov
sub
cmp
add
sbb
adc
dec
cmp
pop
inc
cmp
and
aad
adc
adc
mov
loop
pusha
dec
cltd
adc
or
cmp
pop
add
fldt
or
push
dec
icebp
js
ss
in
jo
fnsave
in
mov
fdivp
scas
dec
and
mov
das
sbb
insl
xor
stos
mov
popa
mov
xchg
movsl
inc
int3
loope
or
adc
insl
sbb
push
sbb
or
and
andl
hlt
inc
imul
xor
and
stos
mov
rorl
imul
push
pop
push
icebp
test
push
aaa
addl
jb
xor
orb
xor
xchg
repz
add
popf
adcb
sbb
pop
or
inc
push
add
in
mov
jg
or
scas
aas
cmp
add
sbb
xor
push
inc
lea
ficoml
cmpsl
and
hlt
ja
or
pop
adc
pop
pop
cs
shlb
or
out
gs
sti
pop
dec
inc
sbb
xorb
sbb
cwtl
sbb
dec
adc
or
cmp
mov
add
inc
imul
inc
xor
inc
jp
xor
xchg
mov
push
cmp
adc
roll
add
cmpsl
inc
mov
int
nop
push
flds
aaa
adc
mov
jge
sub
or
shlb
inc
add
sub
insb
gs
jmp
imul
and
cmpb
das
notb
push
cmp
test
es
movsb
dec
push
push
jecxz
lahf
out
sahf
inc
inc
add
push
enter
int
insb
ss
ss
xor
pop
popf
pop
lcall
pop
repz
stc
cmp
jnp
push
nop
test
xchg
pop
cmp
data16
pusha
je
and
sbb
data16
xor
mov
punpckldq
ds
push
dec
dec
jne
getsec
mov
and
mov
mov
pop
sbb
ljmp
add
adc
mov
mov
lods
pop
dec
movsl
enter
push
push
mov
inc
push
iret
idiv
insl
ss
adc
cli
mov
sub
sub
jae
sbb
mov
sbb
mov
ds
pop
sbb
insb
incl
lods
sub
and
jle
jo
fsubs
fsubrs
xchg
pop
sbb
mov
lds
in
pop
dec
xchg
pop
shl
dec
push
adc
cld
or
and
xor
aaa
xor
push
lret
and
fimull
push
test
mov
inc
pop
push
dec
inc
jb
insl
pop
sbb
mov
push
dec
imul
mov
pop
insb
sub
sub
cmp
in
in
sub
sbb
dec
sahf
xchg
xor
cmp
and
jb
pushf
in
dec
fmul
add
jae
dec
mov
cmp
js
cmp
jle
add
or
pop
aam
dec
dec
popa
in
and
clc
dec
out
push
push
dec
cmp
sub
xor
inc
sub
sub
xor
inc
xor
inc
pop
xor
inc
xor
add
jne
out
jne
push
cmp
insb
push
outsb
add
sbb
das
js
jmp
bound
ss
jne
negl
nop
cld
push
dec
jp
push
push
jb
ja
scas
mov
outsl
jne
cmp
popa
outsb
rclb
es
loopne
fsubs
push
add
inc
rclb
add
mov
aas
add
xchg
incb
lods
rcr
imul
xlat
das
add
pop
loopne
pop
sbb
dec
scas
out
adc
add
imulb
sbb
shrb
iret
stos
cmp
cmpb
adc
clc
outsl
push
jo
outsb
cmp
cmp
xor
cmp
adc
or
pop
jg
push
add
insb
repnz
fadd
ret
lret
out
pop
add
sbb
test
mov
jns
stos
cmp
dec
dec
dec
fwait
subl
movsl
pop
orb
mov
mov
jno
shr
push
inc
das
sub
das
pop
cli
inc
dec
xchg
inc
xor
mov
sti
outsl
push
xor
dec
dec
fs
mov
add
mov
fcomp
jl
pushf
pop
stos
into
es
imul
sarl
outsl
rcrb
shrl
adc
test
pop
add
push
or
pushf
jns
stc
bsf
div
push
movsl
ret
inc
in
mov
sti
rcl
and
adc
idivb
mov
aaa
lret
or
sbb
adc
enter
or
mov
cmpsb
push
mov
js
dec
lock
adc
aaa
xchg
int3
mov
popa
scas
arpl
es
push
jns
pusha
sarl
dec
mov
and
in
int
imul
cmpsb
jg
push
mov
idivl
mov
jns
int
push
xchg
ljmp
cmp
repz
xchg
pop
xchg
test
and
ds
scas
cwtl
xchg
add
in
jnp
inc
push
nop
xchg
daa
xchg
dec
cmp
fdivp
outsb
out
jnp
mov
out
push
sti
outsb
iret
sarl
inc
push
cwtl
ja
out
fincstp
push
sti
push
bound
push
movsb
lahf
idivb
shl
dec
lcall
nopl
pop
outsl
pop
mulb
loopne
mov
xchg
lcall
fwait
xlat
insb
push
xchg
push
jmp
out
ss
pushf
pop
movsl
sahf
data16
mov
xchg
push
lock
jg
sahf
idivb
jno
jne
outsb
mov
jns
fwait
loope
pop
in
out
imul
push
jns
repz
mov
bound
jns
andl
push
arpl
or
out
sahf
dec
std
popl
sub
inc
repz
out
xor
cmp
repz
push
nop
movb
ja
mov
filds
xchg
das
push
xchg
dec
repz
fiadds
xchg
adc
out
sahf
out
imul
fdivrp
and
mov
pop
test
jg
aad
pop
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
xor
adc
adc
xlat
add
mov
and
push
mov
and
pop
add
idivb
adc
mov
bound
push
and
pop
sbb
enter
adc
repz
inc
repnz
iret
pusha
or
or
adc
pop
enter
add
bound
sbb
inc
inc
dec
push
outsb
push
push
jae
popa
mov
ss
fistpll
inc
push
jne
pop
sub
sbb
add
je
addr16
push
mov
pop
sub
cmp
loope
out
nop
jae
fisubl
push
jnp
xchg
push
repnz
es
dec
cmp
les
dec
je,pn
mov
out
insl
push
ljmp
inc
dec
add
push
inc
fsubp
push
cmpsb
push
insb
pop
push
dec
pop
je
scas
xor
push
fistps
loop
out
or
das
push
ret
pusha
sbb
outsb
xlat
jbe
jno
sbb
iret
push
pop
retw
mov
jnp
dec
or
and
sbb
pushf
push
mov
addr16
add
call
jle
and
push
fimuls
push
ds
pusha
fisubrs
adc
das
jbe
insl
jo
xchg
insb
je
notl
popa
jo
jae
es
outsl
insb
mov
scas
and
aas
cmpb
sub
xchg
pusha
in
out
and
cmpsb
mov
mov
xor
xor
xor
xor
xor
jle
outsl
mov
and
xor
push
xor
xor
cmp
push
add
sbb
and
and
cmp
sti
mov
iret
cmp
or
push
sbb
xor
bound
mov
or
test
and
mov
pop
adc
daa
add
test
shrb
pushf
jne
pop
repz
sbb
pop
or
mov
pop
pushf
push
mov
sbb
add
dec
aaa
in
jne
loope
jbe
push
in
push
or
bound
push
pop
push
add
push
inc
mov
push
jne
inc
jmp
add
das
cltd
or
add
sub
cmp
pop
adc
sub
subb
dec
inc
xor
sbb
xor
sub
adc
lea
xor
ret
bnd
pop
sbb
ret
inc
daa
ss
add
push
popa
pop
or
lock
cmp
inc
ss
xor
adc
sub
push
ret
pusha
push
jbe
int
lahf
inc
mov
jns
sbb
push
add
push
pop
out
sahf
out
and
out
sahf
push
andl
lahf
out
xor
cltd
or
xchg
ss
add
pop
push
push
add
fstps
or
adc
ss
in
mov
sub
xor
inc
mov
arpl
mov
mov
insb
rorb
sub
ret
sub
add
or
int
fsts
and
add
fldcw
add
dec
ss
int
lea
and
das
pop
popa
mov
jge
mov
and
cmpsl
pop
jmp
orb
dec
add
adc
add
xchg
sti
pop
mov
cli
xchg
das
sub
aaa
pop
sbb
mov
pop
or
out
sbb
jmp
into
rorb
fdivs
and
and
aaa
dec
loop,pt
js
js
and
add
dec
push
jo
ret
jge
mov
sahf
addl
or
aaa
lahf
mov
add
jbe
lods
daa
fidivl
fisubl
daa
mov
loop
xorl
sub
lods
daa
and
ja
aad
mov
das
notl
lods
ss
iret
xor
dec
mov
insl
adc
sbb
mov
daa
imul
add
das
dec
js
push
dec
pop
mov
es
pop
inc
push
cmp
ja
ds
xor
ja
sbbl
outsl
es
inc
iret
add
pusha
insl
pop
scas
pop
cltd
or
or
daa
lahf
pop
xchg
sub
add
adc
pop
addr16
and
addr16
jg
add
dec
dec
jecxz
cmpsl
pop
in
sbb
mov
and
mov
inc
imul
orb
add
outsl
inc
cmp
or
clc
add
es
push
outsb
or
xchg
andb
js
jl
subb
jl
shr
push
push
pop
imul
pop
dec
aad
aaa
cmpb
and
dec
pop
jo
outsb
inc
or
xchg
adc
mov
fs
push
ja
cmpsl
call
adc
nop
sub
aam
dec
add
insb
pop
jno
cmp
lea
fsubrs
testl
test
je
xor
pop
jle
and
cmp
das
fidivrs
and
xor
and
movsb
repnz
pop
inc
loopne
mov
loope
nop
movaps
push
or
pop
mov
and
pop
hlt
sbb
loope
out
inc
or
push
shrl
pop
add
pop
push
loopne
notb
pop
das
in
push
fsubr
dec
adc
adc
js
or
xchg
inc
fdivrs
adc
sub
dec
mov
adc
das
pop
cmp
popa
lcall
shlb
and
outsb
cmp
test
cwtl
sbb
and
js
sbb
test
jmp
rsm
push
loop
xor
jg
jb
in
adc
pushf
testl
test
pushf
push
inc
push
sub
shll
jno
push
and
imul
fmuls
adc
inc
cmpb
shrl
or
dec
jo
jbe
fiaddl
rorb
mov
jmp
repnz
xor
mov
ljmp
sbb
or
movsb
lods
pushf
push
sbb
pop
mov
sub
add
cwtl
cmp
loop
das
add
aad
shll
lcall
push
das
sbb
xchg
fs
inc
loop
cltd
leave
mov
push
mov
or
mov
ss
xchg
cmp
ret
or
sbb
dec
shrb
orb
or
push
lods
cltd
add
mov
push
sub
cmp
sub
or
fsubrs
xor
adc
mov
and
bound
cltd
mov
clc
push
inc
ret
gs
orb
xor
fnstcw
or
insb
pop
aam
movups
mov
adc
fbld
mov
inc
stc
sbb
fwait
sbb
jno
jg
pop
pop
sbb
add
or
adc
inc
out
dec
dec
pusha
cmp
jmp
pop
decl
test
shrb
pusha
pop
pop
fs
cmp
mov
stos
xchg
pop
and
xchg
mov
in
cmp
xor
loope
decl
pop
sbb
das
jmp
imul
pop
cs
dec
dec
cmp
movsl
clc
push
imul
sahf
sbb
adc
lock
cmp
push
sbb
jge
decb
mov
bound
dec
jbe
rcrb
mov
xor
jl
add
imulb
aas
dec
add
or
mov
jge
aas
pop
adc
push
sbbb
add
add
add
sbb
mov
pop
cmp
pop
sub
push
xor
xor
dec
sbb
sub
pop
inc
adc
inc
aaa
inc
xor
es
push
push
inc
push
inc
adc
pop
cmp
push
pop
or
sbb
lcall
pop
inc
es
cs
or
sub
add
push
sbb
rorl
and
aas
push
aas
adc
lret
sub
inc
dec
adc
pop
or
sbb
push
sti
jg
adc
pop
and
or
xor
lcall
push
or
sbb
cmp
pop
cs
push
adc
rdtsc
push
push
push
cmp
call
and
sbb
sbb
pop
push
add
daa
sub
inc
daa
cmp
adc
add
in
jne
loope
cmp
and
mov
push
xor
mov
ret
push
and
mov
push
jg
add
xchg
add
pop
push
or
add
jmp
adc
add
mov
add
outsl
cmp
outsb
sub
sbb
loopne
or
aaa
ds
lock
xchg
push
ss
adc
mov
stos
das
lea
pop
mov
les
mov
bound
dec
inc
out
mov
jecxz
adc
ljmp
xor
mov
mov
pop
dec
cmp
push
sbb
and
push
sbb
mov
push
dec
add
xor
add
add
out
imul
dec
cmp
sar
add
pop
add
dec
dec
push
add
js
aas
or
sub
adc
outsw
jle
and
addr16
pop
mov
daa
pop
daa
pop
push
adc
cmp
and
das
or
and
xor
clc
pop
inc
dec
inc
cs
lcall
push
inc
add
xor
xor
out
cld
in
push
inc
add
inc
pop
mov
jbe
inc
inc
xor
and
aaa
inc
push
inc
cs
inc
ss
cmovb
pop
push
leave
test
ss
pushl
dec
das
cwtl
das
mov
es
sti
shlb
ret
call
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
andb
fwait
rol
fwait
in
inc
mov
bswap
mov
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
jmp
movb
aad
arpl
push
sub
adc
or
cs
insl
ljmp
cmp
jae
gs
leave
ret
sub
xchg
mov
data16
mov
push
insb
sbb
xchg
shll
cltd
test
push
push
shll
ja
daa
mov
mov
sbb
dec
stos
fmuls
lret
rep
cs
outsl
arpl
test
lcall
mov
movsb
mull
jno
addr16
push
scas
addr16
jb
outsb
cmp
cmc
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
jnp
jb
es
ljmp
inc
bound
ja
dec
sub
je
sub
insw
imul
cmp
pop
push
pushl
arpl
push
aaa
popa
cmp
jl
jae
sub
push
or
push
pop
push
outsb
inc
lcall
push
pop
cmp
jo
jne
sub
or
jno
pop
aas
xor
mov
test
stos
clc
or
jo
push
aam
pop
inc
or
push
ret
or
ds
in
ret
pop
xor
mov
add
ds
fldcw
cmp
ss
ret
test
jp
xor
sti
cmpsl
fistpl
dec
jbe
jge
test
arpl
xchg
shrl
xor
punpckhbw
mov
mov
cmp
out
sub
mov
add
cmp
cmp
xorb
es
in
mov
lods
sbb
les
sub
sub
nopl
cmp
aad
shlb
pop
xor
xor
cmp
push
jp
addr16
nop
pop
mov
push
push
push
es
dec
or
adc
sbb
jp
pop
mov
or
push
sbb
sbb
pop
bound
rol
int
sub
and
dec
mov
add
adc
jno
loopne
or
or
adcb
pop
and
inc
add
mov
pop
fs
mov
rcll
or
adcb
pop
daa
fcompl
and
sbb
adcb
dec
xchg
mov
mov
aaa
es
ret
adc
lret
movsb
lds
push
in
pop
sub
cmp
js
sbb
sbb
fs
dec
adc
mov
xchg
icebp
sbb
pop
add
outsl
fidivrs
xor
sbb
cmpsb
and
inc
bound
inc
mov
cltd
adc
test
pop
test
loop
pop
aad
insb
or
outsb
outsb
je
xor
js
xor
in
enter
jae
popa
insl
gs
cmp
out
ret
shlb
loop
lretw
loope
inc
loopne
and
inc
aad
mov
movsl
outsl
idiv
les
insl
loop
xor
pop
int
lret
testb
outsl
insb
add
sbb
popa
je
push
jecxz
pop
popf
insl
aaa
adc
dec
filds
pop
or
adc
push
and
mov
or
push
gs
pop
cmp
pop
outsl
inc
dec
dec
cmp
and
dec
in
subb
or
movsb
lret
ljmp
pop
fnstsw
add
adc
push
dec
jge
insl
mov
iret
fwait
mov
cs
mov
cmp
xor
andb
rcrl
mov
stos
dec
sbb
popa
int
adc
das
arpl
xchg
shrb
sbb
cmp
outsl
push
lret
xor
pop
inc
shrl
mov
push
xchg
adc
dec
jle
push
push
cmp
push
mov
pop
cmp
fsubrs
fs
dec
popa
dec
mov
pop
push
ja
jb
pop
sarl
repz
mov
pop
inc
jne
fldt
or
adc
inc
xor
scas
mov
or
pusha
pop
fldt
loop
das
mov
mov
dec
test
roll
push
cmp
push
test
push
notb
add
adc
ret
daa
ficoms
call
pop
cmp
enter
ret
sbb
ljmp
fs
jo
out
test
xor
or
and
stos
push
outsl
imul
dec
test
pop
pop
pop
je
es
pop
cmp
hlt
pop
pushf
fnstsw
sub
sbb
das
scas
ss
arpl
add
dec
sub
or
cmp
dec
mov
xor
adc
aaa
data16
add
inc
dec
flds
or
inc
adc
iret
mov
aas
and
cmp
cs
mov
addr16
pop
add
push
mov
ror
add
xchg
jbe
xchg
inc
or
cmpsl
and
add
hlt
inc
xor
les
jne
int3
insb
push
jb
xor
jle
mov
mov
pop
pop
pop
pop
aas
ja
fdivr
xor
xchg
or
mov
pop
or
xor
inc
jle
xchg
insl
das
dec
pop
dec
pop
movsl
pop
fcmovnu
sbb
dec
pop
repz
test
cmp
cs
push
push
inc
cmp
jge
or
add
adc
jno
maxps
fimull
inc
gs
push
jge
loopne
add
cmp
sub
ret
fiaddl
scas
movsb
aas
add
sub
inc
dec
mov
loopne
and
pop
inc
and
inc
sarl
dec
cmp
add
sub
add
cmp
loopne
mov
jmp
pop
push
stos
lods
xor
add
jb
mov
dec
and
sub
mov
outsl
mov
push
dec
outsl
and
cmp
add
mov
inc
push
punpckhwd
rcrl
and
and
pop
daa
insb
lock
add
push
inc
pop
sahf
adc
dec
inc
push
pop
mov
jb
gs
adc
js
rsqrtps
push
rolb
fwait
pop
daa
cmp
daa
dec
push
dec
jb
or
sbb
inc
inc
aas
dec
xchg
cmp
push
cmpsl
orb
xlat
sbb
shrb
and
push
in
es
xor
outsl
pop
sahf
and
loope
sbbb
loope
cmp
cs
and
orl
ret
jb
in
popf
and
push
adc
pop
add
mov
pop
inc
or
movb
pushl
ljmp
cmp
pop
and
jmp
mov
or
sbb
imul
inc
ljmp
dec
call
cmpsb
push
pop
xchg
pop
or
rorb
and
adc
push
mov
cmpsl
les
in
or
mov
cmc
inc
add
inc
push
cs
insb
test
mov
fistps
push
jnp
mov
push
mov
xchg
mov
cmp
pop
dec
and
xor
addb
les
lock
push
mov
insl
les
mov
add
inc
sbb
and
in
or
xlat
outsl
or
insb
shr
fsubs
mov
imul
rolb
inc
fsubrs
push
and
mov
das
fmuls
dec
add
mov
inc
xadd
sbb
inc
sub
cmp
inc
cmovo
xor
insl
sti
fdivr
cmpb
aas
mov
jo
maxps
inc
dec
add
fwait
adc
add
xchg
sbb
das
test
lods
push
in
movsl
xor
les
ja
xchg
push
mov
dec
movsb
hlt
daa
add
mov
adc
sub
or
lods
add
imul
dec
push
aaa
pop
lahf
add
jnp
push
daa
mov
and
inc
int
insl
adc
aam
repnz
add
in
aas
mov
addr16
outsl
nop
sbb
imul
inc
jb
push
jb
cmp
jb
push
xor
and
add
movsl
je
pop
sbb
xor
or
push
push
enter
out
mov
es
fs
out
ds
adc
iret
sarl
sbb
in
xchg
mov
pop
pop
pop
sahf
pop
pop
ds
iret
repz
pop
add
dec
repz
pop
int3
mov
pop
mov
cmp
fs
push
jo
and
mov
pop
inc
inc
adc
enter
cwtl
jecxz
and
dec
xchg
inc
adc
adc
mov
mov
imul
pop
jns
movsb
sbb
xor
or
scas
in
lock
fcomip
mov
push
sbb
out
push
xchg
sbb
inc
mov
add
ja
pop
lods
pop
jb
mov
xchg
and
xchg
dec
das
jbe
and
push
inc
clc
sbb
lock
and
xor
dec
xchg
outsl
add
scas
fs
inc
adc
inc
cmp
jb
nop
mov
xchg
outsl
fists
cmp
cmp
push
repnz
ss
add
dec
and
push
je
pop
add
dec
xchg
fsubs
out
pushf
pop
leave
adc
xchg
out
and
orl
in
pop
pop
add
lods
fs
or
scas
add
insb
push
ljmp
add
sbb
sbb
xchg
rcrb
and
and
aam
lcall
jae
int
fcomps
sbb
cwtl
loop
and
pop
mov
push
clc
push
jl
push
fs
scas
xchg
or
mov
roll
jg
add
lds
call
sarl
enter
sub
sub
pop
push
push
leave
mov
add
and
nop
fistl
xchg
push
cwtl
sbb
and
xorb
pop
insl
sub
mov
add
dec
xchg
add
cmpsl
push
and
loopne
xlat
cmpsl
int
xor
aaa
addr16
mov
in
sbb
or
idiv
hlt
push
cld
daa
jns
xor
nop
ss
mov
sub
dec
pop
mov
sub
push
insb
popa
outsl
xchg
sub
xor
jg
push
sarb
push
add
xor
pusha
popl
leave
xor
pop
and
and
inc
and
mov
inc
dec
adc
and
testl
mov
outsl
push
push
outsl
pop
pop
xor
jg
pop
mov
push
push
xlat
xor
sbb
push
cmpsl
movl
arpl
je
imul
or
xor
push
movups
or
cmp
hlt
sub
and
insb
bound
and
or
xlat
pushf
nop
push
ret
or
popa
shlb
pop
in
fsubrs
pushf
orb
push
pop
inc
arpl
loopne
aam
lahf
pushf
and
fimull
pop
dec
arpl
testl
and
ss
add
scas
and
cmp
push
mov
adc
xchg
popa
addl
mov
mov
shlb
inc
add
dec
xchg
jl
add
cmp
icebp
lock
add
shlb
cwtl
add
movsl
mov
adc
jg
jb
iret
pusha
add
jns
mov
gs
add
mov
xchg
cmpb
inc
iret
test
mov
int3
add
and
dec
mov
sub
mov
push
cmp
addr16
and
add
ss
test
mov
bnd
pop
cwtl
ss
pusha
ret
aaa
add
mov
aaa
in
hlt
xor
popa
and
leave
mov
or
pusha
shlb
sahf
iret
outsb
push
mov
daa
push
out
mov
leave
aad
add
mov
xchg
int3
push
inc
iret
repz
xchg
push
hlt
imul
je
jns
push
sub
pushf
mov
push
inc
ja
cmpsl
jb
pushf
aas
or
je
pop
test
push
popa
inc
outsl
add
cmpsb
nop
fwait
pop
or
fists
add
adc
push
xchg
pop
and
add
cmpsb
mov
ret
roll
scas
xor
push
mov
or
int3
outsl
xchg
ret
out
popl
mov
rorl
and
xor
inc
pop
or
addr16
mov
daa
add
ss
nop
add
add
imul
mov
cld
xlat
or
push
repnz
test
xlat
popa
repz
mov
daa
xor
pop
imul
xor
push
jl
mov
lock
or
inc
cwtl
imul
jbe
das
test
ja
inc
pop
jmp
cs
mov
outsl
lods
in
leave
or
insb
push
pop
sti
es
and
xlat
popa
adc
fisttps
das
pop
jo
pop
int
sahf
orb
sbb
addr16
insl
rcll
out
jne
or
nop
sahf
data16
jns
or
fmull
jns
mov
dec
repz
sbb
jns
jns
iret
repz
aad
jnp
pop
repz
out
mov
add
cmp
sbb
adc
jge
imul
push
out
jg
andb
sti
push
xorb
out
sahf
imul
int
repz
movsb
out
adcb
cmp
iret
repz
mov
or
push
movsb
divl
test
cmp
shll
mov
sub
mov
and
jns
icebp
and
rep
leave
xor
lahf
out
fmull
sarl
jno,pt
jl
iret
bound
cmpsl
stc
xor
aad
mov
ds
jp
repz
mov
iret
test
xchg
xchg
or
aaa
fwait
iret
repz
mov
xchg
sahf
out
xor
loopne
xchg
es
cmp
repz
and
lahf
cmpsl
stc
push
xchg
dec
frstor
cwtl
fiadds
int
jns
jg
int
imul
fwait
pop
push
mov
repz
pushf
jb
popf
sbb
jbe
mov
jo
stos
repz
out
adc
push
cmpsb
loope
xor
out
mov
sub
je
fimull
repz
out
movsl
in
cmpsb
xor
imul
cmpsl
push
lahf
mov
pop
test
divl
stos
insl
enter
repz
pop
add
sahf
cmpsl
stc
cmp
xor
cmp
sarl
push
jo
out
cmpsl
stc
mov
push
rorb
jns
jns
jnp
leave
sub
incb
ljmp
xchg
test
mov
mov
mov
push
ja
ds
jnp
mov
mov
xor
jne
mov
rcrb
add
inc
sahf
cmp
repz
or
inc
jp
xor
cmpsl
stc
sub
arpl
sahf
out
mov
stos
fsubp
jns
push
push
insb
jecxz
inc
int
ds
roll
js
out
into
mov
bswap
xlat
rclb
sbb
scas
andl
jl
xor
inc
jns
cmp
xor
sbb
decb
inc
pop
add
leave
jae
outsb
push
add
xchg
dec
outsb
mov
das
xchg
dec
faddl
jp
wbinvd
xchg
iret
insb
ja
adc
add
jb
fmull
inc
dec
add
cmpsb
rclb
push
in
and
aas
pop
enter
and
std
and
mov
dec
int3
xor
ss
and
mov
nop
and
repz
lea
pcmpgtb
add
jo
sub
cmp
popf
mov
aaa
mul
inc
adc
inc
mov
enter
xorl
sub
dec
outsb
mov
add
out
and
adc
loopne
scas
jg
orb
aas
pusha
mov
outsl
es
dec
fmuls
mov
adc
jecxz
dec
mov
repz
aas
dec
mov
daa
or
dec
mov
inc
sarb
jae
popf
test
mov
test
out
das
cltd
fdivs
out
ss
testb
or
xchg
aas
mov
lea
xor
iret
push
std
mov
and
lods
ljmp
js
or
mov
xlat
mov
cmp
dec
das
fnsave
pop
pop
fs
xchg
and
mov
add
in
push
dec
xchg
scas
sbb
push
pmuludq
cmpsl
jp
ds
adc
lahf
xor
inc
rcll
xchg
ja
or
or
dec
in
inc
sub
rcrb
sbb
add
and
imul
sub
daa
fiaddl
push
jg
je
adc
push
pusha
pop
popa
aas
cwtl
sbb
adc
add
sbb
jmp
movsb
js
pop
cs
adc
sbb
cli
pop
inc
fmuls
push
add
das
push
hlt
inc
adc
je
inc
dec
inc
mov
sub
mov
xlat
imul
inc
repnz
shlb
xchg
mov
movsb
call
sbb
push
gs
xchg
int
cld
jns
not
out
pushf
addr16
mov
jnp
outsb
adc
addr16
jp
push
add
dec
cwtl
in
lds
outsl
sbb
frstor
aam
les
mov
mov
sbb
inc
sub
or
enter
cmp
and
je
imul
jbe,pt
jnp
push
inc
outsl
and
cmp
pushf
jb
add
sarb
and
sarb
popl
insl
inc
xchg
and
and
or
cmp
ficoml
and
inc
scas
js
repnz
in
mov
enter
push
rol
loopne
cmpsl
in
sbb
adc
sbb
jge
mov
in
sub
aad
mov
jl
jl
sahf
out
stos
push
add
sahf
out
lret
push
pop
jns
jns
loope
in
out
enter
sub
imul
jle
jle
jle
or
jge
push
addr16
pop
pop
push
add
test
out
jb
jge
xchg
dec
dec
dec
cs
pushf
cmp
repz
add
add
push
cmp
stc
cmp
jle
jle
inc
mov
jle
jle
jle
xchg
mov
mov
xchg
xchg
insb
je
test
loopne
mov
in
movzwl
iret
cmpsl
xlat
dec
pop
fsubrl
fbstp
mov
jg
push
sub
mov
and
repz
punpckhbw
jo
js
and
out
add
xor
xor
inc
fisubl
cmpsl
mov
pusha
push
mov
add
repz
mov
icebp
in
inc
pop
sarb
add
inc
sbb
adc
pop
leave
inc
push
stc
jo
into
lahf
push
daa
arpl
xchg
jo
in
pushf
and
sarb
lods
or
jg
inc
repnz
mov
cmp
in
inc
in
or
jns
sub
inc
je
aam
je
pop
push
iret
test
adc
cmpsl
sub
xor
xchg
fistpl
outsl
ja
add
or
xor
pop
test
test
ret
mov
pop
pop
pop
rolb
repz
or
jns
out
or
or
sahf
inc
or
or
out
popa
adc
jns
out
adcb
adc
adc
adc
out
les
rcrb
sahf
loopne
dec
je
and
push
test
or
pushf
test
inc
repnz
jns
leave
pop
push
jbe
js
mov
fwait
aaa
cmp
xlat
iret
xchg
inc
dec
lret
inc
push
test
cwtl
xchg
inc
jg
scas
add
lock
xchg
das
decl
xchg
enter
cmpsl
je
jl
lea
test
cs
add
adcl
pop
arpl
loopne
xchg
add
cmp
pop
add
outsb
xor
fsubs
push
dec
pop
adc
out
test
mov
out
pop
jno
test
outsl
ljmp
pop
jno
dec
adc
aas
add
aas
enter
fmul
dec
pop
adc
test
mov
xchg
imul
push
cmp
dec
cs
dec
push
xchg
xchg
adc
pop
push
xchg
xchg
or
mov
xchg
and
adcb
pop
mov
dec
movsb
or
in
cmp
rcrb
cmp
cmp
out
xchg
or
cmp
cltd
dec
jne
mov
add
jbe
mov
add
or
loope
jmp
xchg
and
or
pop
mov
mov
dec
push
mov
mov
mov
inc
dec
sub
adc
dec
orb
pop
popf
mov
xchg
daa
pop
leave
jae
lods
push
xchg
mov
daa
sbb
sub
clc
dec
mov
pushf
fildl
enter
fisttps
scas
ljmp
in
add
mov
pop
cmpsb
adc
call
enter
int3
mov
mov
mov
and
decl
pop
mov
mov
mov
mov
jns
daa
mov
mov
mov
mov
jns
inc
mov
push
mov
jns
jns
mov
ja
jg
daa
daa
fnsave
pop
pi2fd
daa
daa
daa
daa
or
or
daa
daa
daa
daa
or
push
add
add
add
iret
pop
es
add
and
jbe
sbb
xchg
cmpsl
and
call
mov
pop
mov
dec
add
mov
pop
mov
insl
in
mov
add
xchg
out
pop
mov
xchg
add
mov
and
daa
mov
aas
fisttps
out
pushf
xchg
out
push
out
idivl
cmpsl
call
mov
or
xchg
iret
in
and
push
add
or
jo
dec
pop
mov
fiaddl
in
mov
jge
lods
cmp
in
movsb
push
mov
in
and
mov
out
in
in
cmp
xadd
rorb
out
ja
push
lock
push
cmp
aas
add
push
cmovle
add
test
inc
aas
add
push
aas
xchg
jl
sbb
add
inc
sbb
or
js
daa
adc
popf
out
cmp
daa
cwtl
outsl
xchg
and
and
sub
inc
in
incl
leave
andl
xchg
xchg
xchg
fisttpl
fdivrl
add
test
inc
repnz
lock
pushf
mov
nop
lahf
mov
shll
mov
mov
mov
cmpsl
cmp
bound
js
repz
in
mov
jb
cmp
movsb
or
or
leave
jae
clc
jmp
daa
cld
pop
adc
sbb
push
inc
cs
iret
or
pop
lods
cld
addr16
decl
fisubrs
inc
jmp
lgdtl
or
push
adc
or
jl
es
rdtsc
nop
ret
es
pusha
jb
mov
inc
hlt
xchg
mov
xchg
add
inc
xchg
repnz
jb
nop
ja
dec
enter
mov
pop
xchg
iret
add
xchg
insb
fnstsw
mov
mov
sbb
js
out
in
add
xor
xchg
xchg
pushf
xchg
mov
xchg
and
mov
adc
and
xchg
xor
and
jl
push
cmpsl
jmp
xchg
pop
enter
daa
daa
pop
pop
test
jg
outsl
aas
leave
xchg
jg
xchg
fsts
push
or
cwtl
push
xchg
call
xchg
push
mov
xchg
mov
add
mov
xchg
xchg
pop
jo
jb
movsl
mov
add
fs
sbb
inc
mov
pop
pop
xchg
das
das
das
das
sub
dec
xchg
das
das
das
das
push
xchg
popa
xchg
insb
xchg
ja
xchg
iret
adc
test
pushf
pushf
fsubl
leave
pushf
pushf
pushf
pushf
aam
ljmp
pop
or
xchg
and
jb
push
inc
xchg
dec
xchg
pop
xchg
and
sbb
xchg
jo
jnp
xchg
leave
enter
xchg
pushf
cmpsl
out
xchg
adc
mov
pop
nop
lcall
fcoms
dec
repnz
xchg
push
push
xchg
jmp
mov
sqrtps
nop
pop
fwait
pushf
pop
jg
add
int3
xchg
loop
ret
fcmovne
sbb
ljmp
jae
sbb
xchg
das
adc
jno
xchg
adc
cmp
leave
inc
dec
xacquire
inc
jb
in
xchg
addr16
xor
inc
frstor
push
daa
xor
add
mov
cmpsb
test
popf
das
jns
mov
jge
test
fucom
xchg
verw
popf
mov
movsl
xchg
lods
das
mov
or
outsb
repnz
ss
xchg
mov
es
dec
cwtl
mov
sbb
inc
sahf
ja
inc
mov
xchg
xchg
cwtl
dec
adcb
add
jb
lcall
lds
and
cmc
jae
loop
push
lahf
scas
sub
cltd
cmovno
add
pop
aaa
jns
push
scas
push
cltd
push
pushf
jmp
cltd
sbb
cmp
mov
cmp
xchg
pushf
movsb
add
mov
imul
les
in
in
cltd
fcompl
pushf
pushf
je
hlt
pop
ud2
or
pushf
pushf
pushf
pushf
or
push
add
add
add
jns
iret
repz
sbb
sbb
repz
sbb
adc
sbb
and
outsb
repnz
sub
and
jns
dec
cmp
and
xchg
push
js
and
lcall
lahf
jg
cwtl
lcall
mov
cmp
faddl
push
add
in
lcall
iret
pop
cld
or
pop
fwait
pop
daa
fwait
das
fwait
cs
mov
aaa
fwait
cmpsl
pop
mov
push
pop
sbb
repnz
jp
sbbb
outsb
imul
cmp
dec
cmp
scas
mov
cmpb
lret
mov
iret
aas
jbe
jb
loopne
idiv
pop
jo
dec
lock
pushf
xchg
push
pushf
aas
adc
add
daa
dec
rclb
push
pushf
push
pop
pushf
push
mov
data16
mov
idiv
inc
out
mov
and
mov
frstor
lea
bts
enter
pushf
rcrl
xlat
pushf
loop
in
pushf
clc
pushf
in
xchg
and
popf
push
popf
sbb
and
push
das
movsl
into
repz
adc
out
shll
xchg
jbe
add
movsb
test
mov
iret
jae
add
leave
popf
xor
rcrl
mov
popf
jg
sahf
cmp
enter
sahf
cs
ss
xchg
pop
outsb
sbb
pop
push
jg
sahf
iret
insl
in
dec
sahf
push
sahf
pop
pcmpgtd
outsb
sahf
in
adcb
sahf
aaa
cltd
movsb
and
shl
sahf
outsl
not
sbb
inc
mov
inc
aam
cmpsl
or
cmp
fstps
xchg
sahf
sahf
sahf
ror
mov
cmpsb
lahf
lahf
ja
mov
sub
dec
dec
sahf
fxch
push
lahf
lahf
mov
nop
outsb
cmp
mov
push
out
cmp
mov
cmpsl
push
dec
dec
cs
in
into
xchg
or
pop
fiadds
xchg
out
cmpsl
incl
push
xor
jb
mov
add
pushf
pushf
pop
and
xchg
lsl
popf
dec
ds
shll
psrlw
das
pusha
test
cmp
mov
iret
repz
add
add
add
cmp
daa
daa
das
aaa
aas
or
iret
repz
or
pop
pop
jns
out
or
or
fsub
ja
jg
repnz
lock
pop
mov
sbb
lret
repz
in
rorl
fildl
jecxz
xchg
push
or
push
lahf
xchg
daa
push
push
pop
mov
or
and
nop
and
test
lods
xchg
jno
aaa
mov
dec
and
push
js
fldt
das
orl
mov
mov
in
in
pextrw
mov
xchg
int
loop
mov
repnz
inc
mov
jmp
leave
inc
inc
dec
daa
push
pop
ljmp
push
dec
and
stc
jg
mov
pop
pop
mov
pop
push
mov
mov
ret
rclb
add
lahf
sbb
or
lahf
or
jbe
aas
pop
sbb
or
sbb
dec
mov
lods
add
mov
or
stos
lods
out
and
jne
out
jge
push
lahf
fwait
cmp
addb
mov
movsb
add
movsb
movsl
movsb
and
js
lods
pop
movsb
pop
into
movsb
xor
loope
lods
dec
icebp
movsb
stc
sahf
ja
jnp
movsl
wbinvd
adc
add
cmp
in
add
mov
push
or
inc
push
or
cmp
push
or
xchg
movsl
mov
movsl
and
aas
vmwrite
cmp
pushf
movsl
ja
movsl
mov
sahf
lds
int
fnsave
pop
mov
pushf
mov
ljmp
iret
cmpsb
push
pop
add
xchg
scas
cmpsb
pop
push
cmp
adcb
cli
inc
inc
pop
adc
mov
mov
filds
mov
fists
xchg
out
scas
xchg
adc
imul
aaa
xor
std
mov
add
push
add
mov
repnz
pop
cmp
repz
or
movsb
fwait
sysret
fistpll
cmp
aaa
pshufw
inc
sar
xchg
stc
inc
loopne
xchg
sbb
mov
leave
and
add
andl
mov
nop
lret
outsl
and
push
cs
cmpsl
enter
fisubs
mulb
cmpsl
push
test
out
test
pop
andl
shl
mov
cmp
addr16
mov
mov
dec
lock
test
cmp
xchg
and
push
test
jae
xchg
pop
adc
mov
mov
ja
daa
mov
incl
bswap
pop
pop
js
test
push
test
push
sbb
mov
pushf
dec
and
lret
dec
outsb
daa
daa
loopne
push
add
aas
or
aas
or
aas
test
iret
in
ss
push
test
addr16
xchg
out
fiadds
xchg
aam
cwtl
je
push
test
lahf
ja
jg
lahf
test
xchg
test
mov
adc
xlat
push
loopw
in
out
out
test
int
enter
stc
loopne
push
pop
push
out
stos
sub
inc
repnz
outsb
push
cmpsl
push
mov
leave
dec
push
xchg
pop
gs
mov
mov
popl
mov
in
cwtl
stos
push
scas
jne
xchg
stos
test
cmpxchg
or
stos
pop
repnz
jle
shll
inc
pop
jae
outsl
mov
pop
xchg
or
or
and
cs
das
pop
push
mull
inc
add
scas
lahf
jecxz
and
daa
repz
lsl
scas
stos
iret
adc
xchg
sub
mov
inc
jbe
dec
xchg
cmp
iret
add
movsb
cs
out
jns
add
pushf
add
bsr
or
inc
outsb
daa
daa
adc
call
cmp
dec
or
jnp
lods
cmp
push
setns
push
xchg
mov
lods
out
sbb
lods
lods
xchg
dec
cs
sarb
and
add
hlt
cld
outsb
adc
lods
iret
or
adc
xchg
ja
add
lsl
push
cwtl
pop
or
add
ud1
int3
xchg
enter
inc
mov
fdivl
imul
test
jne
mov
ss
mov
das
pop
add
sahf
lods
cmpsb
lods
scas
lods
es
fsubl
movsbl
into
hlt
in
sysret
into
lods
scas
fisubrs
cmpb
dec
call
scas
rcr
enter
scas
inc
cmovge
mov
and
jns
jl
insb
mov
jp
pop
mov
xchg
sbb
scas
les
mov
repz
outsb
ja
push
add
outsb
and
mov
scas
ficomps
out
or
ffree
or
daa
push
inc
inc
es
scas
scas
and
leave
jecxz
fs
frstor
andps
insl
add
aaa
jns
jne
jge
add
test
and
or
mov
dec
ds
repz
and
jecxz
push
fists
add
pushf
pop
push
dec
push
mov
mov
insl
aad
mov
xchg
loopne
mov
pop
push
leave
inc
rcll
push
roll
aas
in
leave
in
hlt
cld
pop
add
mov
dec
cmp
lahf
adc
sbb
mov
add
or
add
jg
repz
repz
add
pop
add
sbb
outsl
emms
movq
pop
leave
repz
cmp
xchg
adc
pop
ljmp
movsb
sbb
in
adcb
loop
sub
iret
add
sbb
aad
fdivrs
mov
and
cmp
popa
mov
imul
or
outsb
repnz
test
lods
mov
xchg
xchg
mov
int3
daa
daa
daa
daa
fdivp
incl
xchg
xchg
xchg
xchg
mov
cmp
xchg
xchg
xchg
imul
ret
loope
sbb
iret
and
xor
cmp
and
mov
out
lock
mov
les
leave
and
int
or
mov
mov
sub
or
xchg
xchg
xchg
arpl
mov
xchg
movb
in
or
xchg
xchg
xchg
xchg
fsubrp
cli
and
in
enter
mov
pop
mov
or
cmp
dec
and
adc
adc
push
outsb
pop
leave
jae
dec
lahf
iret
mov
shlb
jns
ja
fsub
push
push
call
out
or
or
iret
fwait
leave
jns
or
or
repnz
into
jbe
sbb
sub
xor
dec
lock
push
mov
pop
mov
cmp
repz
arpl
add
fwait
paddd
xchg
xchg
mov
mov
mov
mov
xchg
xchg
xchg
xchg
mov
mov
mov
mov
xchg
xchg
xchg
xchg
mov
mov
mov
mov
xchg
mov
sub
outsl
aas
mov
das
das
push
mov
push
iret
repz
insl
pop
jne
andb
iret
repz
and
iret
repz
and
cmp
mov
or
sub
cvttps2pi
loop
jns
out
cs
idivl
xor
ret
inc
setle
popf
and
add
push
incl
dec
mov
rol
iret
jo
xor
jae
iret
xchg
add
fwait
pop
sgdtl
leave
inc
pop
or
test
int3
ja
paddsw
enter
movsb
adc
pop
and
add
dec
gs
repnz
lds
jns
leave
nop
fwait
push
add
cmp
jae
cmp
pop
call
stc
jmp
mov
in
pop
pop
sub
adc
in
dec
dec
adc
in
dec
sahf
adc
jns
test
sahf
out
sbb
sahf
out
sbb
out
rcrl
fsub
xor
std
mov
out
push
lds
mov
push
mov
inc
mov
jle
cmpsl
rcr
dec
dec
inc
sahf
or
jns
dec
push
pop
punpckldq
push
adc
mov
int
xchg
in
mov
leave
repz
sbb
and
dec
data16
out
jns
jbe
xchg
mov
cmp
xchg
mov
mov
enter
mov
push
or
cmp
es
aas
das
rol
and
push
push
mov
sahf
xchg
out
add
xchg
inc
xchg
out
xchg
lahf
mov
iret
mov
push
or
repz
jmp
push
ds
bswap
adc
jns
leave
xlat
fisttps
adc
out
push
js
daa
iret
adc
testl
or
pop
rcrb
bswap
in
dec
decl
sbb
mov
leave
sbb
es
push
sub
jle
iret
push
incl
out
rcrb
xchg
sarb
sar
rorb
mov
out
pop
inc
xchg
rcrb
in
jbe
lgs
popf
pop
fsub
psubsb
xchg
and
inc
lret
adc
rorl
xchg
dec
jnp
xor
rcll
pop
data16
rcl
repz
pushf
fadd
jle
mov
pop
and
leave
xchg
or
mov
aas
ror
cmp
cmp
cltd
dec
in
hlt
cld
mov
insb
cmp
ret
js
daa
mov
inc
ret
aas
fsubrl
xchg
imul
insb
popf
pushf
jb
popa
fsubrp
ss
mov
movsl
push
add
mov
mov
lds
int
ret
mov
in
int3
clc
xlat
add
cmp
enter
ret
sbb
and
inc
pop
mov
jg
cmpsl
inc
ret
dec
sbb
dec
push
pop
xchg
sbb
ret
xchg
daa
iret
jae
mov
jb
cmp
ror
daa
daa
iret
add
fabs
pop
jmp
add
add
in
push
lds
int
and
fistpll
insl
in
les
cmp
add
out
dec
add
add
fs
pushl
push
xchg
xchg
into
xchg
negl
cmpsl
pop
scas
divl
cs
jl
loop
xchg
dec
dec
dec
repnz
enter
das
sbb
xor
add
mov
jo
add
pushf
cmp
add
sahf
fcmovne
fwait
mov
cmp
mov
fisubrs
mov
out
lds
and
or
and
mov
nop
cltd
mov
cmp
addr16
rcrl
pop
add
cmp
add
xchg
dec
cs
out
mov
mov
cmp
xchg
dec
iret
push
add
and
out
pop
pop
ds
outsl
test
pop
pop
pop
pop
sbb
and
cs
cmp
in
mov
outsl
pop
in
in
gs
jo
jnp
xchg
in
in
xchg
pushf
cmpsl
mov
in
in
mov
faddp
je
in
jmp
pop
nopl
sbb
pushf
pushf
pushf
pushf
sbb
push
adc
adc
ds
cmp
daa
mov
mov
ss
cmp
repz
xor
iret
repz
xor
insl
xor
cmp
xorl
cmp
jns
repz
cmp
movsb
cmp
cmp
ds
mov
psllw
inc
cld
dec
repz
leave
inc
adc
jae
cmp
sbb
iret
repz
ds
dec
dec
in
jbe
push
pop
pop
push
dec
sahf
out
orb
rorl
push
mov
fcmovne
ret
fmul
lahf
pop
dec
hlt
sub
loopne
or
fists
lret
and
lret
push
cmp
iret
das
lret
lret
and
sbb
lret
outsb
lret
in
xchg
lret
jb
xchg
lahf
fbld
mov
cmp
lret
fmul
out
pop
iret
repz
adc
lret
aaa
or
call
push
sbb
push
sbb
repz
sub
xor
aas
sbb
dec
push
push
pop
pusha
jns
leave
repz
push
and
and
jb
lods
das
mov
repz
into
sub
sub
cmp
outsb
daa
out
psubd
fiadds
mov
int3
sbb
es
fcmovne
repz
cmp
inc
push
psllq
mov
pop
push
repnz
cmp
mov
ds
aas
lahf
stos
btc
in
mov
lret
das
push
jle
daa
iret
inc
loope
inc
fdivp
int3
cmp
shll
int
sahf
xchg
dec
push
push
add
fcmovne
repz
add
punpcklbw
fistps
int
int
leave
leave
push
xchg
fwait
mov
cmp
stos
add
add
mov
xchg
lock
ljmp
xlat
add
xor
lahf
test
add
mov
and
add
add
jns
leave
repz
clts
xor
cmp
cmp
push
into
and
pop
into
xlat
mov
pop
sbb
pop
test
cmp
pushf
movsb
fisubrs
test
iret
add
outsb
mov
fdivr
mov
daa
daa
mov
out
out
idiv
xchg
cmp
daa
pop
iret
mov
cmpsl
mov
aaa
push
pop
inc
xchg
fisttps
add
mov
iret
iret
repz
popa
pop
ja
andb
repz
lea
cwtl
mov
pop
scas
mov
jns
ficoml
in
sarl
lock
cs
cmp
in
rcrb
sbb
sbb
repz
xor
cmp
dec
mov
pop
repnz
je
and
in
in
mov
xchg
mov
out
cmp
shrl
sarb
cwtl
cmp
shl
jns
xchg
lahf
push
add
add
leave
repz
sahf
add
ds
add
jecxz
sarl
fcmove
cmpl
jns
scas
repz
les
push
iret
cmp
es
pop
fimull
add
push
popa
scas
in
lock
rol
in
pop
push
rclb
push
push
mov
sbb
daa
shlb
sarb
iret
adc
pop
in
sahf
out
sbb
jns
and
push
push
xchg
repnz
push
and
mov
and
int3
pop
and
xlat
es
push
sub
incb
rcrl
add
movsb
imul
or
sub
fcoml
enter
test
and
rcr
and
or
cmp
out
add
js
psllq
jae
pop
cltd
or
lahf
pop
fdivl
rcll
mov
daa
iret
add
std
or
repz
test
pop
sub
cmp
or
aas
pslld
jbe
pop
pop
dec
aam
push
aam
out
repnz
aam
aam
push
adc
adc
pusha
xchg
aam
push
out
xor
iret
push
mov
cmp
out
out
aam
notl
fisttpll
fisttps
test
sahf
aaa
jb
and
sub
xor
add
fmulp
rorl
add
dec
push
push
je
out
push
pop
pop
jae
repnz
or
jb
repnz
or
pop
jns
sahf
out
adc
in
in
mov
cs
andb
repz
fsub
aad
xor
aad
sbb
pushf
dec
push
mov
enter
pop
sub
aaa
popl
repz
in
pop
push
push
arpl
repz
cmp
outsb
or
or
jns
leave
lcall
jb
jb
rcr
and
jp
out
std
or
popf
mov
adc
in
sahf
sbb
sbb
dec
jae
mov
push
push
pusha
pusha
outsb
repnz
and
jbe
cmp
repnz
mov
pushf
cmp
repz
iret
leave
repz
into
sub
jns
out
in
sub
mov
cmp
fucomi
push
imul
sahf
xchg
inc
push
aaa
pop
push
js
fdivr
cmp
fildll
lret
adc
stos
add
mov
aas
mov
sub
cmp
cmp
and
add
aas
inc
push
push
pop
sbb
inc
aas
dec
stos
xor
into
pop
inc
popa
sub
iret
cmp
inc
outsl
aaa
cmp
push
add
jns
daa
add
add
add
or
or
or
or
in
jbe
scas
or
daa
adc
adc
jbe
dec
das
and
in
in
push
addr16
das
push
xorps
mov
imull
push
and
dec
sahf
out
sbb
push
pop
sbbb
cmpb
test
cmp
pop
xchg
sub
jbe
fbld
sub
js
xlat
sbb
data16
add
dec
ret
sub
enter
movb
out
sahf
out
sub
sbb
sarl
or
call
iret
repz
aam
int3
enter
repz
sarb
sahf
mov
movsb
cwtl
nop
mov
repz
addb
jo
pop
repz
repz
inc
inc
cmp
mov
adc
add
aaa
and
inc
cli
andl
mov
xor
test
adc
and
sub
adc
adc
test
stos
mov
rclb
addl
push
and
add
add
movsb
add
pusha
cmpb
cmpsb
fisttps
mov
movsl
sbbl
cmp
mov
decb
inc
out
in
jbe
pop
inc
mov
iret
mov
in
sbb
in
call
adc
aas
and
pop
fidivrl
xor
fcomp
loopne
pop
push
mov
jle
mulb
inc
mov
or
pop
dec
or
add
or
and
cmp
clc
jle
inc
aaa
push
jle
push
xlat
incl
aad
pop
sub
inc
mov
aas
pop
add
mov
roll
xor
icebp
repnz
mov
jg
das
repnz
out
xchg
out
push
adc
iret
repz
sbb
in
jns
out
sbb
sahf
out
push
sub
enter
cmp
mov
iret
push
lcall
or
into
decl
cmp
cmp
sbb
push
mov
jbe
jl
dec
rorb
push
add
jnp
mov
pop
aam
inc
pop
dec
pop
or
js
and
fisttpll
inc
xchg
and
cwtl
push
jae
aam
call
icebp
addr16
push
push
mov
inc
dec
or
adc
js
xor
pop
aas
pop
push
xor
out
aaa
jno
pop
and
imul
arpl
loopnew,pn
inc
sub
push
arpl
imul
sub
inc
daa
mov
lret
mov
xchg
es
repz
xor
cmp
sbb
sbb
cmp
add
aas
cmp
jns
lock
and
push
and
ds
cld
lock
out
idivl
adc
fdivrl
out
and
push
or
or
sahf
out
out
adc
in
enter
jnp
push
rcrb
push
iret
repz
mov
test
movsb
and
repz
and
and
xrelease
pushf
or
clc
mov
je
orb
inc
out
xor
jmp
stos
pushl
fwait
dec
jg
cmp
xorl
jg
cmp
jmp
cmp
pop
js
mov
imul
add
dec
shll
fisubrl
cmp
sbb
bnd
ljmp
insb
jnp
pop
push
cmpsl
add
dec
inc
pop
jl
dec
push
enter
inc
pushf
or
jl
xchg
mov
adc
xchg
cwtl
push
and
sbb
pop
mov
ret
inc
and
sahf
mov
sub
inc
rcrb
and
lcall
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
jg
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
jl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
call
jecxz
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
call
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
call
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
mov
outsb
dec
leave
fwait
xchg
and
and
aas
mov
add
sti
aas
jno
or
mov
pop
fs
dec
call
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
pushl
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
cli
jmp
aas
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
sbb
aas
and
loop
mov
add
pop
sarl
jl
mov
pushl
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
call
fstl
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
incl
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
pushl
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
lcall
adc
xor
push
scas
into
imul
faddp
jge
call
mov
idiv
call
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
frstor
fmuls
filds
and
repnz
pop
inc
inc
je
inc
inc
push
dec
sub
jnp
cmpsl
add
xor
popa
push
out
mov
les
hlt
push
xor
jmp
mov
mov
push
movsb
mov
aad
mov
rclb
mov
sub
mov
nop
adc
push
jno
repz
test
ficompl
jmp
mov
call
hlt
movl
imul
std
in
leave
mov
add
insb
push
arpl
decl
cli
cmc
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
int
decl
movsl
cli
test
xor
leave
mov
insb
fdivs
jne
out
cli
incl
or
shrl
push
ficoms
push
xlat
enter
mov
pushl
cltd
xchg
mov
mov
or
or
and
or
ljmp
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
mov
pop
mov
push
movsl
in
lahf
xor
mov
js
stc
inc
in
test
xchg
sbb
push
sub
insb
fs
add
hlt
push
ljmp
bound
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fcos
pushl
adc
mov
mov
bound
ficoml
gs
aam
pop
popa
mov
dec
into
pop
cmp
mov
inc
movsl
fisttps
fdivr
ffreep
shll
jmp
outsb
xor
mov
sarb
add
in
incl
xor
or
cmp
add
daa
adc
or
and
test
ljmp
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
pushl
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
call
popf
adc
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
jmp
jno
insb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
pop
aad
mov
call
xchg
shll
push
repnz
jmp
shll
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
hlt
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
ffreep
push
xchg
ja
int3
add
mov
das
es
lds
or
or
mov
cmpsl
call
ret
shlb
lcall
ret
es
pushf
mov
insl
add
ss
jmp
addr16
jb
call
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivrl
jmp
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
outsl
pushl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
ljmp
cli
clc
sar
imul
push
js
or
push
addl
mov
cmp
pop
inc
ljmp
rorb
imul
scas
fsubrl
fldenv
filds
aaa
mov
sahf
mov
inc
jmp
lcall
mov
lret
mov
cmpsb
mov
sarb
sub
push
mov
ljmp
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
inc
pop
cmp
dec
pop
testb
dec
sbb
aam
inc
push
adc
aad
push
xlat
fcomp
jns
out
fcmovu
ficomps
jecxz
in
jns
out
jmp
out
sahf
out
hlt
cmc
div
out
sahf
clc
stc
cli
sti
cld
mov
adc
aas
adc
cmpl
or
add
jmp
xchg
mov
bound
cmp
mov
dec
inc
and
bound
fwait
inc
xor
je
push
test
aas
and
cmp
dec
aam
pop
inc
jno
idiv
push
xor
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
xor
xor
bound
xlat
sahf
adc
inc
jbe
pop
insb
imul
push
insb
gs
jecxz
pop
imul
dec
inc
and
in
mov
inc
or
add
jp
das
mov
jno
dec
icebp
popa
or
fs
push
pop
or
ss
jbe
add
dec
jp
scas
imul
fcoms
add
gs
lcall
js
sub
or
xor
cli
xor
xor
jns
push
pop
imul
dec
insb
sub
addb
insb
aaa
and
loope
aas
inc
push
mov
add
push
aas
add
inc
mov
pop
cltd
and
jae
or
int
dec
mov
pop
inc
aas
jbe
add
jnp
adc
sbb
inc
pop
js
imul
testl
mov
scas
add
mov
iret
int
push
dec
cmp
andb
inc
mov
adc
mov
mov
mov
ja
outsb
jne
pop
insl
inc
push
popa
mov
xchg
jge
xor
cmp
adc
arpl
add
mov
addr16
clc
xchg
into
mov
jo
popf
rorw
jg
pop
subl
lret
dec
cld
push
adc
outsl
add
lods
dec
pop
mov
mov
lcall
cmp
sbb
pop
movsb
sub
push
xlat
mov
arpl
add
mov
inc
jb
andb
dec
popa
jo
sbb
add
mov
outsl
test
inc
sub
jno
xor
stos
loop
in
jb
pusha
rcrb
in
nop
pusha
lds
inc
push
cmpb
arpl
or
mov
popa
add
out
mov
je
addr16
xchg
shlb
dec
adc
jb
push
jae
inc
stos
mov
je
inc
outsl
arpl
insl
dec
popa
mov
sarl
iret
inc
push
bound
ja
inc
jbe
cmpsb
outsl
push
bound
addr16
mov
push
dec
xor
bound
xor
jge
inc
add
add
repz
insl
adc
or
and
xor
dec
adcl
pop
inc
inc
xchg
movsb
sbb
sahf
dec
xor
add
addr16
sbb
sbb
add
mov
push
push
sbb
jg
inc
push
inc
dec
pop
bound
inc
je
jmp
arpl
je
testb
pusha
in
insl
or
xchg
sub
push
pop
inc
sub
fucomi
push
inc
and
mov
dec
addb
adc
add
add
add
add
jo
and
jmp
test
mov
shrb
and
add
test
and
movl
sbb
inc
into
cmp
fnstcw
icebp
push
push
jle
mov
mov
pop
push
pop
jmp
mov
cmp
imul
cmp
test
inc
shrl
or
push
nop
ud0
in
cmp
mov
rorb
sub
fsub
ljmp
sahf
jo
adc
xorb
pop
fsubl
pushl
mov
push
insb
in
jl
test
add
int
push
fdivl
push
dec
scas
jno
mov
outsb
lock
lcall
xor
rcrb
mov
ss
and
pushf
mov
aam
fcomps
dec
or
mov
fstpt
push
xchg
mov
mov
pop
pushl
stos
lods
cmpsl
or
mov
ljmp
sub
sub
mov
frstor
ret
scas
sti
jp
fwait
les
sbb
pop
stos
mov
mov
in
stos
in
sbb
or
jg
mov
pop
dec
es
mov
jb
pop
iret
clc
mov
fcmovne
fwait
fs
call
sub
outsb
cltd
in
sbb
fs
inc
pop
data16
pop
lcall
push
push
dec
idiv
jmp
cmp
enter
sbb
sub
in
leave
fcom
jno
push
adc
cli
sti
jl
adc
call
out
mov
out
pop
sarb
in
dec
outsb
aas
mov
cmpsl
push
jecxz
sar
push
daa
or
ljmp
sbb
shrb
xor
push
daa
mov
xchg
mov
jecxz
mov
mov
adcb
mov
scas
lock
ljmp
test
mov
mov
lock
aam
sbb
mov
fbld
or
in
or
scas
movsl
cmp
insb
mov
bnd
incl
es
daa
daa
je
ja
iret
add
stos
dec
fiadds
mov
xlat
dec
insb
cmpsb
or
sahf
mov
push
jle
push
scas
sbb
jg
xchg
cmpsb
dec
icebp
push
xor
stos
fisubl
in
jae
out
jge
dec
pop
mov
fsts
mov
jne
add
mov
popa
outsl
arpl
push
sti
lods
jge
decl
xchg
enter
fsubrp
mov
push
push
sub
jp
or
pop
mov
cmp
ljmp
jne
ljmp
pop
sub
xchg
loopne
and
inc
repnz
xchg
lds
lcall
push
mov
mov
push
adc
fdivrl
scas
jno
mov
fstpt
lcall
imul
and
mov
fnstcw
arpl
cmp
daa
mov
call
pushf
rorl
jb
call
test
xchg
out
repz
xchg
pop
cld
ljmp
fists
aam
scas
mov
out
and
inc
out
sub
stos
adc
imul
mov
bound
pop
sub
pop
cs
insb
dec
mov
sti
leave
imul
divb
fs
sub
cmp
push
dec
jnp
or
lock
adcl
lret
incl
ljmp
mov
repz
xchg
decl
imulb
aaa
xchg
mov
inc
add
jno
outsb
mov
inc
leave
cmp
jno
pop
imul
mov
inc
adc
lods
mov
and
lods
mov
por
jge
jno
ds
lret
push
mov
cwtl
mov
ret
ret
push
xchg
mov
xchg
in
xchg
or
add
das
adc
xor
dec
push
xor
mov
lcall
xor
clc
jne
jle
pop
fcomps
inc
aaa
push
fiaddl
pushf
or
aam
and
incl
jle
cs
out
jmp
dec
lea
std
lahf
cltd
test
xor
xor
call
cmp
push
push
jno
mov
inc
xchg
inc
in
imul
sub
stc
aam
xchg
cmp
decl
xor
test
push
in
jmp
addr16
jb
lods
push
mov
add
jb
call
pop
xchg
rorl
mov
ja
cmc
pop
xchg
sub
mov
and
and
mov
adc
xchg
dec
push
and
sbb
or
push
out
ret
jge
outsb
xchg
and
mov
lret
call
sbb
decl
lret
in
push
push
test
push
sub
aam
lret
call
aad
lcall
xor
pop
lods
addr16
mov
pop
and
in
mov
std
adc
sbb
adc
das
outsb
or
insb
push
aad
decl
mov
nop
add
nop
mov
cmpsl
dec
xor
test
cmpsb
loopne
incl
lods
sti
pop
mov
pop
add
dec
mov
xlat
mov
bound
loopne
ljmp
sete
shrb
aad
mov
or
scas
xor
iret
pop
mov
xor
jmp
stc
test
lcall
test
scas
adc
clc
jg
mov
push
movsb
mov
adc
incl
lock
movsb
add
pop
fxch
add
ret
xlat
les
test
das
cli
pop
out
or
leave
inc
sbb
lcall
mov
lds
inc
subl
sbb
add
ljmp
adc
test
inc
push
xchg
mov
push
aas
add
push
loopne
cmp
cmp
sarl
fs
xchg
add
je
enter
dec
mov
add
add
nop
push
inc
shl
push
stos
dec
fcomip
dec
test
jno
xor
in
cld
cld
push
push
inc
imul
fildl
lock
decl
dec
add
adc
out
mov
adc
mov
push
cmpsb
add
inc
xchg
add
xchg
lock
jg
inc
aam
daa
mov
jle
sub
jmp
cltd
cwtl
mov
imul
lods
dec
imul
lods
pop
mov
mov
pop
das
pop
stc
pushf
subb
jbe
push
xorb
xchg
mov
add
out
hlt
mov
xchg
adc
inc
bound
xor
inc
mov
ljmp
testb
stos
ret
inc
stos
test
mov
lods
and
sub
jg
aaa
add
inc
pop
rorb
movsl
jmp
inc
insb
out
pop
fsubs
lahf
rcrb
or
ds
std
jo
adc
sub
sub
push
sbb
ljmp
shrb
and
xchg
pusha
xlat
fnstsw
push
xchg
lret
xor
dec
jg
sub
mov
xor
in
repnz
or
outsl
cli
xchg
rcrb
adc
ja
lcall
xor
dec
xchg
mov
testl
mov
add
xor
out
jne
mov
je
or
sub
jae
aam
loope
and
mov
test
and
push
data16
stos
xor
notl
outsb
das
mov
add
incl
les
repnz
sub
movl
lahf
and
sti
add
lcall
xor
pop
fmull
aaa
xlat
xor
shll
repnz
mov
mov
jmp
push
in
cli
negb
mov
jo
mov
stos
jbe
pop
push
repnz
fcoml
adc
cwtl
fdiv
push
mov
inc
fisubl
push
ljmp
fsubr
bound
andb
cmp
mov
lahf
es
sbb
repnz
add
lcall
iret
and
jp
jbe
adc
out
sub
cmp
add
ljmp
add
int3
mov
call
mov
or
inc
cld
mov
push
pop
ljmp
sbb
lahf
add
jl
clc
lcall
nop
cmp
test
sub
xchg
loop
push
mov
fisubl
hlt
daa
mov
decl
cmp
das
rcrb
ljmp
mov
fnsave
call
push
xchg
mov
enter
add
mov
xor
ljmp
and
pop
sti
cld
rolb
test
into
jb
rcll
test
testb
xchg
inc
ret
icebp
stos
and
adc
adc
push
scas
mov
add
push
cs
arpl
add
movsl
or
lret
ds
call
pop
fisubs
mov
test
clc
push
ret
int3
add
dec
js
xor
sbb
sbb
nop
inc
testb
lret
push
jb
sbbb
decl
push
mov
lea
aaa
jae
call
ret
outsl
lock
xor
and
xchg
xchg
jmp
pop
cld
aaa
push
shrl
or
cmp
dec
loope
jo
jnp
dec
sbb
popa
and
icebp
jg
pop
add
mov
loop
push
int3
inc
js
mov
andb
mov
xchg
cmp
sub
aam
push
and
hlt
incl
in
icebp
xor
cmp
cmp
inc
outsb
cmp
adc
cmpsl
hlt
in
dec
add
mov
cmp
icebp
scas
pop
jbe
es
stos
jg,pn
pop
xlat
pop
push
lret
xchg
cltd
dec
movsl
shrl
pusha
dec
dec
jl
inc
fs
jne
int
and
xchg
push
add
cmpsl
add
cltd
rcl
inc
cmp
ljmp
mov
adc
dec
outsl
mov
idivl
lahf
and
mov
jl
inc
clc
mov
xor
mov
mov
pop
aas
stc
das
adc
push
fsubr
jl
std
jg
add
and
loopne
rcr
jp
pop
add
push
lds
clc
lret
jg
add
pop
mov
fwait
jp
stos
pop
vmwrite
pop
dec
push
mov
std
jmp
dec
aad
add
push
push
sub
jecxz
push
jge
lret
lods
into
inc
movsb
lock
ds
pop
adc
mov
insl
enter
inc
jl
sahf
jae
outsl
mov
jns
xor
in
lea
mov
mov
or
mov
rolb
in
xor
loopne
inc
or
push
inc
ds
pushf
std
je
and
or
decl
jb
das
int
xlat
out
leave
scas
xor
mov
in
int3
cmc
adc
cs
decl
inc
arpl
fistpll
jae
cmp
jge
fdivs
xchg
cld
pushl
dec
pop
cmp
fisubs
popf
cmp
jns
hlt
adcb
push
or
ljmp
xchg
shlb
jne
fdivs
push
cli
cmp
sub
addr16
jae
outsb
add
lock
filds
sub
xchg
cmp
cmc
fldl
jmp
incl
dec
pop
movsb
ficoms
cmp
pop
rorl
lcall
jp
call
and
or
je
xchg
or
pop
shl
xchg
jne
add
push
outsl
lea
decl
adc
lea
jae
insb
add
cmp
pop
fcmove
js
stos
popf
ret
xchg
xchg
jg
mov
pushl
dec
mull
mov
push
xor
in
mov
std
ss
mov
ret
ja
jb
leave
mov
in
xchg
pop
mov
and
add
ljmp
pusha
inc
aam
cld
inc
add
jno
mov
cmp
push
mov
jg
dec
cld
dec
stos
je
cs
test
dec
mov
decl
or
xchg
out
xchg
les
lahf
jnp
ret
scas
adc
xor
mov
fistl
jecxz
test
sahf
lods
mov
sbb
stc
imul
ja
mov
ficompl
jge
mov
insl
daa
nop
xchg
or
mov
decl
mov
aad
loop
repnz
addb
xchg
sti
in
pushl
ljmp
xlat
mov
add
and
iret
xchg
lret
or
push
mov
daa
inc
addr16
cli
jmp
imul
ds
mov
sub
xchg
push
call
call
jno
xor
dec
rclb
inc
mov
pop
mov
call
adc
cmp
and
imul
rcll
push
lods
mulb
dec
leave
call
call
cmp
pop
iret
enter
jne
add
roll
jmp
lods
jb
cmp
adc
xchg
mov
shlb
mov
jp
adc
mov
call
cmp
sub
lea
inc
outsb
das
pop
rcll
sub
lahf
fsubl
in
incl
daa
bound
jmp
sar
jo
xor
dec
in
lods
sub
aaa
std
jmp
push
xchg
addl
dec
ss
outsb
adc
in
mov
stos
mov
mov
add
fistpll
into
icebp
shrl
mov
ja
mov
xor
mov
mov
inc
lds
aad
mov
fmuls
mov
add
addb
xchg
sub
js
sbb
jp
ljmp
lds
or
leave
mov
jl
and
and
or
or
ljmp
cld
cmp
mov
fucom
xorb
int
loopne
lret
push
ljmp
mov
es
sbb
pop
out
mov
cs
mov
add
lcall
mov
insb
into
inc
aaa
mov
frstpm(287
std
loop
and
daa
push
lahf
xor
data16
movsb
icebp
jmp
or
jne
cmp
add
sbb
ljmp
cmp
or
cmp
push
lahf
pop
mov
adc
mov
inc
push
dec
int
mov
notl
aas
loopne
jb
mov
orb
cmp
mov
enter
movsl
xchg
fs
es
inc
push
sbb
aaa
cld
dec
jl
arpl
js
mov
negb
adc
xorl
jmp
lret
aam
inc
xor
or
push
mov
add
jnp
or
clc
aad
mov
adc
loope
fsubp
aad
rorl
cwtl
inc
aad
repz
ljmp
js
push
sub
ja
inc
shll
sub
or
out
incl
mov
jmp
lock
adc
out
test
and
adc
pop
arpl
idiv
ljmp
dec
ds
and
xchg
pop
bound
add
insb
cmp
std
jge
xor
call
les
dec
mov
mov
sub
jl
insb
loopne
dec
inc
nop
dec
mov
ljmp
test
out
addr16
call
sub
or
cmp
sbbb
jo
xchg
push
push
mov
sbb
call
fdivrl
lcall
push
lahf
jge
ret
xor
addr16
adc
ljmp
rol
sub
adc
shll
lods
jp
push
ret
jle
enter
ja
inc
jo
cld
ja
push
cmpl
cmp
mov
or
mov
sbb
jg
pop
inc
js
xchg
mov
lret
dec
add
movl
mov
decl
ficoml
sahf
in
lcall
jb
mov
mov
sub
outsb
aam
call
test
inc
dec
pop
or
jno
xchg
sarl
sub
pop
pusha
out
fdivrp
pushl
repnz
push
stos
xor
scas
pcmpeqw
addb
push
mov
ficoms
mov
cmp
test
aas
aaa
xor
inc
loopne
cmpsl
in
lods
mov
sub
mov
pop
das
inc
pop
loopne
xor
or
int3
ficoms
imul
lret
jmp
decl
call
cmp
aaa
into
inc
out
ljmp
out
sahf
and
lret
fcomp
jle
loopne
push
ljmp
movsl
cmpsb
test
cmpsb
popa
inc
jbe
jne
pop
repnz
mov
pop
cltd
mov
dec
mov
pop
push
icebp
out
insl
push
addr16
cltd
mov
incb
out
leave
clc
fcomip
call
cmp
pop
aas
mov
movsb
jae
xchg
inc
cmp
cmpb
inc
fcos
pushl
push
ss
or
mov
sahf
cld
cmp
test
or
roll
scas
fmulp
sti
adc
enter
mov
pop
sbbl
aaa
jmp
ljmp
push
jl
andb
mov
and
push
jo
cwtl
cltd
lods
mov
pusha
add
mov
mov
cmpb
mov
sbb
shr
cwtl
mov
incl
xchg
ret
aam
fiadds
xchg
pop
outsb
cmpsl
test
push
mov
enter
cld
sbb
call
imul
pop
stos
xchg
inc
test
sub
push
pop
push
call
pusha
dec
out
xchg
lret
xchg
sbb
mov
dec
mov
xor
int
aad
xchg
dec
sbb
mov
stos
je
sbb
ret
ljmp
add
mov
les
call
ret
xorb
xchg
xchg
jae
cli
ss
pop
int
cs
cmpsl
call
jge
mov
push
cmp
adc
mov
lds
test
ror
lret
mov
ljmp
loopne
sbb
dec
xor
test
in
sub
cmp
mov
out
pop
xchg
aad
inc
ds
call
and
mov
fwait
shrl
das
mov
test
call
and
lahf
inc
lods
outsb
xor
push
inc
ss
sbb
sbb
ljmp
insb
mov
mov
cmc
cltd
sub
arpl
xor
stos
fistpl
cmp
sub
jns
out
and
cmp
scas
pop
cmp
shrb
jmp
nop
sub
xchg
mov
mov
call
jo
pop
insl
dec
divb
aas
adc
xor
movsl
imul
repnz
mov
inc
aam
pusha
outsl
icebp
cmpsl
sbb
and
push
inc
cmp
push
inc
cs
sub
scas
push
out
call
lods
repnz
mov
ret
xor
and
cmp
and
inc
jb
out
mov
jecxz
jle
out
sahf
lods
ss
xchg
sub
jb
push
lods
bound
pushl
dec
orb
add
cmp
popa
int
rcrl
ret
pop
pop
lahf
dec
cmpsb
test
push
sbb
xchg
lds
aas
lret
or
jmp
pop
loope
mov
sbb
scas
loopne
lcall
sub
leave
pop
push
rol
xchg
dec
xchg
das
pop
mov
lea
jl
nop
and
popf
and
cmc
push
incl
or
cmp
jns
and
fistl
call
fists
stos
es
decl
popl
in
iretw
ja
enter
cmpsl
and
js
in
sbb
fildl
add
adc
in
add
mov
incl
and
or
sub
ret
pop
sub
popa
imul
incl
inc
in
inc
sub
sub
sbb
popf
or
cltd
pop
xchg
outsb
in
ret
cmp
fistpl
xchg
out
js
or
adc
cmp
test
xchg
pop
xchg
push
jmp
cltd
xor
hlt
dec
sub
push
sub
out
push
dec
int3
cmp
in
jne
dec
add
imul
call
jno
rolb
cmp
jo
subb
lret
mov
insl
lcallw
icebp
ljmp
add
sub
mov
loop
cltd
inc
and
push
std
jb
ret
hlt
ds
leave
data16
fdiv
pop
inc
dec
adc
test
in
scas
lds
ret
jnp
lea
imull
xchg
popf
jo
mov
cld
lahf
rcr
sbb
decl
sahf
rcrb
ret
shl
sbb
inc
cmpsb
jnp
or
push
mov
das
xchg
mov
add
sti
ljmp
xlat
xchg
sbb
out
test
or
ljmp
xor
jnp
addr16
popf
rcrb
cwtl
mov
xchg
adc
cmp
cld
mov
jbe
push
fwait
push
stc
inc
push
dec
repz
adc
lahf
mov
ja
pushl
mov
xchg
loop
add
jns
in
nop
cmp
sbb
dec
fimuls
push
jne
incl
imul
stc
push
sarl
js
ret
add
adc
mov
sub
decl
ja
mov
inc
stos
or
cmp
dec
cltd
cmpsb
xor
frstor
jno
test
cmc
add
adc
sti
and
dec
stos
pushf
xor
cwtl
xorb
outsb
lret
mov
es
push
bnd
mov
jmp
xchg
jb
xor
daa
lcall
out
fadds
imul
incl
jge
in
ror
cmc
loop
sub
push
pop
mov
adc
fcomps
xchg
pushl
push
mov
lret
mov
mov
lahf
bound
xor
fidivrs
cmp
pop
xchg
and
pushl
xchg
xchg
insb
jle
xor
push
cmp
std
xor
push
mov
int
mov
dec
add
and
mov
fwait
shll
dec
addl
push
jle
aad
inc
aam
ret
dec
add
or
aam
mov
aad
jbe
xchg
aas
cmpsl
adc
lahf
ret
loopne
call
mov
lods
js
imul
inc
sub
jp
sbb
mov
daa
sahf
lcall
sub
push
mov
lahf
push
dec
jno
mov
push
lds
adc
cmp
call
mov
pop
xchg
jp
xlat
fistps
lcall
sbb
dec
stos
mov
dec
jge
loop
jg
mov
sbb
inc
fmuls
mov
xchg
shlb
loopne
sbb
mov
mov
ljmp
inc
dec
cmp
test
xchg
adc
inc
sub
and
jmp
cmp
pushl
mov
inc
xchg
std
push
jecxz
daa
and
insl
pop
test
jno
add
adc
sti
sub
and
insl
sbb
outsb
aam
dec
xor
lock
lock
sahf
lret
popf
mov
or
or
int3
js
mov
lret
pop
ret
fsubl
int3
sbb
sti
movsl
cwtl
call
std
ja
shll
je
inc
push
fldcw
gs
jmp
xchg
cmp
decl
jno
test
fwait
out
mov
into
pop
pop
outsb
and
lret
icebp
push
decl
fisttps
cmc
inc
icebp
outsb
xchg
or
in
sahf
push
inc
pusha
add
lahf
jmp
inc
and
arpl
fs
lcall
icebp
loope
fldenv
mov
rcl
in
jl
mov
mov
inc
lcall
jg
push
movsl
push
inc
pop
in
pop
mov
bound
in
out
lods
test
cld
or
jp,pt
hlt
fstps
ljmp
or
push
insb
jbe
imul
push
sub
adc
dec
inc
sub
jecxz
pushl
imul
rcrb
pop
clc
xor
cmp
insb
dec
mov
cmpl
mov
jmp
jae
sbb
mov
and
adc
pop
ret
xchg
test
ljmp
cmovl
xor
or
rcrl
pusha
mov
lods
cmp
scas
dec
insb
xlat
push
sub
inc
cmp
push
inc
add
or
gs
arpl
lret
cmp
mov
gs
ss
in
fidivs
aaa
inc
lret
inc
hlt
sbb
inc
pcmpgtd
test
cld
pushl
xor
fidivl
inc
sub
cmp
jg
adc
cld
stos
test
pop
dec
loop
cmpsl
push
jmp
pop
dec
jb
cli
mov
pop
mov
test
or
add
mov
jecxz
fstpt
scas
loopne
add
test
popf
mov
sub
stos
mov
fwait
js
test
jmp
ds
ja
ror
out
adcb
xchg
jecxz
fwait
mov
push
dec
mov
jmp
cld
notb
aas
adc
paddb
dec
mov
incl
and
xor
insl
lods
dec
les
cmp
aaa
fs
sti
sbb
ljmp
jmp
je
int
mov
jge
inc
jb
scas
push
lods
add
mov
cmp
inc
pop
movsl
add
pop
cmp
push
pop
loope
lea
imul
add
mov
add
jl
loopne
or
ret
inc
mov
mulb
or
mov
mov
test
dec
popf
xor
mov
movsb
sub
pop
test
fisttpl
cmpsl
cmpsb
test
jecxz
jmp
test
sub
mov
push
jbe
xchg
popa
cmp
decl
xor
and
push
in
jae
faddl
push
in
xchg
scas
sarl
fstpt
jae
popa
int
stos
mov
sub
inc
lea
adc
sbb
incl
leave
push
jge
mov
popf
call
mov
sub
add
call
icebp
mov
fbld
dec
lds
arpl
int3
icebp
dec
cmpsb
push
repnz
jno
test
xor
jge
add
jge
push
repz
popa
push
repnz
jmp
jmp
cmpsb
fdivs
or
call
mov
aaa
aas
aam
fldt
or
loope
pop
js
hlt
xchg
enter
cmp
scas
ljmp
jb
mov
push
xchg
sbb
test
out
fsubrl
repnz
in
dec
int
jg
mov
iret
xchg
sbb
mov
aam
bound
add
ljmp
insb
xchg
dec
call
add
xchg
dec
das
shlb
gs
mov
cli
lcall
leave
mov
hlt
mov
fisttpl
add
mov
xor
aaa
cmp
repnz
cmp
ljmp
dec
mov
mov
dec
mov
dec
xchg
and
divl
lods
xor
gs
ds
jmp
adc
leave
fwait
add
in
test
jmp
and
ror
sub
aad
out
cmp
out
mov
jo
in
push
popa
xchg
cmpb
fisttps
lret
fistpl
mov
xor
mov
sbb
les
dec
xchg
xchg
jns
push
jecxz
incl
mov
push
and
je,pn
jnp
add
xor
incl
lock
test
nop
xchg
xchg
mov
fisubl
xchg
mov
rorl
sub
ljmp
xchg
lret
ja
icebp
push
mov
or
fmul
dec
jge
lret
ss
ljmp
push
mov
inc
int
fnstcw
lret
sahf
or
mov
pop
mov
sbb
and
lds
inc
std
sbbl
sar
mov
repz
jp
fcmovb
test
into
sub
movsb
jnp
aas
pop
fcos
in
fmul
mov
arpl
inc
push
sti
mov
mov
sbb
push
xor
and
push
bound
lods
jle
dec
je
outsl
popa
cmp
lcall
cmp
aad
fsubl
push
mov
pop
aaa
sub
sub
ljmp
nop
and
sbb
push
ret
loopne
pushf
int3
out
cli
adc
aaa
jecxz
ljmp
dec
test
int
mov
movsb
mov
imul
movsl
cs
fldcw
or
mov
sub
mov
pushl
imul
xchg
daa
cmpb
and
xchg
dec
lods
mov
dec
cltd
idiv
inc
jge
lds
jns
sbbb
enter
jecxz
movsb
adc
jbe
test
sti
jnp
pusha
je
in
popf
arpl
lds
ret
adc
repnz
mov
or
inc
sbb
jmp
call
call
in
pop
setp
xor
pop
cwtl
test
or
inc
and
ss
sbb
call
and
lock
and
xor
dec
inc
sti
inc
es
ljmp
jg
fwait
mov
mov
push
ret
ds
cmpl
js,pn
pop
jns
mov
sub
stc
aas
movsb
in
xor
add
push
mov
hlt
and
lcall
aad
es
or
pop
sbb
das
or
or
lods
out
xor
fcomip
jmp
jp
mov
mov
negb
leave
imull
add
jp
mov
mov
push
push
aam
sub
mov
movsb
nop
pop
mov
aad
cmc
decl
jae
in
rolb
push
lcall
jb
pop
jge
inc
sub
dec
cmp
fbstp
pop
inc
cmp
out
mov
ja
adc
shll
mov
push
and
mov
rolb
inc
xchg
daa
cmpl
or
repz
rcrb
mov
incl
mov
cmp
and
lods
lret
scas
ficompl
dec
out
jmp
inc
cli
lahf
or
cwtl
cmpb
or
insb
or
adc
sbb
data16
sub
lock
decl
lret
xchg
cmp
or
sbb
pop
aam
mov
and
icebp
ljmp
daa
mov
jne
jp
cld
inc
es
dec
jns
das
or
pop
in
mov
fisttps
pop
inc
fcoml
cmp
test
lods
movsl
insb
mov
jns
enter
jno
jae
ss
pop
jg
ljmp
inc
and
xchg
pop
pop
xor
xchg
js
inc
and
mov
mov
call
jle
xchg
mov
xchg
mov
das
sbb
fistpll
cmp
xchg
jl
out
pushl
adc
mov
aam
inc
add
xchg
lea
cld
lret
shrb
pop
and
inc
ljmp
mov
push
pop
mov
sahf
mulb
mov
jge
ret
jae
fsubrl
cmp
daa
data16
pop
adc
mov
out
sub
das
mov
aas
inc
mov
push
xchg
js
cld
pop
cld
ret
or
scas
jno
fnstsw
in
sar
rcr
and
lcall
aam
pop
gs
add
pop
adc
add
inc
pop
ljmp
push
xchg
mov
cmp
mov
test
rcrb
call
roll
and
mov
xchg
dec
push
stos
jg
mov
sbb
xchg
push
ljmp
jmp
or
add
js
xor
jp
xchg
lret
insb
push
std
push
adc
dec
je
imul
xor
lods
bound
rorl
push
mov
popf
xor
sbb
sarb
movsl
lret
decl
mov
mov
test
inc
shrb
ss
dec
adc
in
mov
mov
je
and
rcrl
push
add
jb
inc
ror
les
adc
stos
out
inc
sub
imul
repnz
inc
add
mov
lcall
cltd
sti
inc
push
andl
push
and
aam
cmc
stc
mov
jmp
stc
push
sub
pop
sbb
jno
mov
add
pushl
or
rorb
jae
int
ss
shll
push
ljmp
lcall
xchg
adc
push
shll
dec
in
inc
cmp
pop
pop
mov
insl
and
decl
push
pusha
add
sub
push
imul
pop
mov
call
add
dec
add
sub
mov
cmc
dec
daa
fcmovu
dec
mov
inc
mov
cwtl
jecxz
roll
ljmp
mov
jns
push
aad
and
lcall
cmp
stos
mov
pop
idivb
cmp
faddl
lods
insb
call
stos
test
xlat
push
imul
pop
mov
cs
sahf
movsb
cmpsb
push
xchg
dec
sbb
push
test
jmp
push
stos
xchg
test
daa
cmp
sbb
pop
les
fs
add
test
jg
sub
or
dec
in
adc
push
cli
mov
aaa
std
out
and
or
leave
mov
addl
lods
test
mov
mov
mov
cmp
imul
push
xchg
sub
mov
out
scas
ja
mov
pop
xor
lret
mov
sub
fnstcw
ljmp
cltd
sbb
jp
push
mov
jmp
imul
ljmp
mov
les
jecxz
mov
cmp
enter
jg
sub
mov
test
xchg
mov
icebp
sbb
decl
enter
inc
movsb
imul
xchg
push
and
add
pushl
int3
push
and
sub
popf
mov
jl
or
cmp
pop
mov
or
mov
inc
ljmp
dec
cmc
loop
jae
stc
cmpsl
pop
ficoml
inc
mov
or
inc
add
mov
xor
cmpsb
fisttpll
sbb
mov
jno
mov
jle
pushf
pop
call
and
cmp
push
in
jl
add
ss
adc
sub
xor
pop
mov
call
dec
add
ret
sbb
shlb
inc
ret
mov
test
cwtl
loop
dec
test
mov
jg
cmp
dec
cmpl
push
dec
enter
pop
fcoml
mov
into
mov
push
ret
xchg
jnp
fcmove
mov
adc
scas
xor
bound
push
lret
hlt
pushl
jbe
cld
add
arpl
stos
push
fwait
aam
jge
dec
out
mov
dec
insb
je
popf
and
ds
lods
sbb
pop
xchg
mov
movsl
sub
ss
out
stos
outsl
xchg
iret
and
imul
cmp
in
pop
stos
cmp
xor
mov
dec
lods
fwait
shrl
adc
xchg
inc
rorb
sub
pop
cmp
pop
mov
outsl
ja
inc
gs
lcall
leave
adc
mov
mov
stos
icebp
dec
cli
adc
push
sar
jmp
pop
add
cmp
xor
xchg
sub
sbb
loop
push
ljmp
xchg
xchg
xchg
test
pop
jge
xchg
add
cmpb
test
xchg
ds
or
xor
int3
cmpb
cmp
in
inc
es
addr16
repnz
sahf
mov
loop
ja
inc
push
imul
jne
loopne
add
pushl
mov
repnz
xchg
xor
out
cwtl
xchg
loopne
and
sub
pop
call
das
push
clc
fidivs
jbe
push
mov
movsb
sbb
std
mov
xchg
enter
inc
mov
jb
push
lods
jl
imul
enter
decl
out
adc
in
mov
dec
or
bound
jl
sub
jno
mov
fs
mov
fcos
call
xchg
jmp
sarb
out
push
push
and
dec
popa
mov
push
sub
cmc
outsb
mov
push
inc
daa
push
out
rorl
mov
dec
lods
orb
xor
lea
incl
inc
cmp
cwtl
sahf
lea
movsb
subps
ljmp
jo
push
fs
mov
mov
adc
popf
shrl
ss
jae
mov
decl
out
pop
popa
add
cs
adc
xchg
je
push
and
pop
lea
mov
das
cli
incl
sub
push
and
or
fstpl
dec
out
jns
jg
in
fwait
sbb
movsb
adc
loopne
leave
ds
aam
loopne
adc
mov
call
fstpt
push
ror
pop
xchg
lods
addb
xor
jmp
lret
call
cld
dec
stos
in
adc
cwtl
mov
mov
jb
dec
movsl
aam
pop
inc
fsts
incl
je
fwait
jmp
add
jmp
push
sbb
xor
jle
ret
test
aas
push
test
mov
pushf
dec
sbb
out
push
mov
mov
jl
or
imul
fs
jmp
xor
or
idiv
jg
cli
mov
xor
out
and
fnstsw
lock
push
imul
jmp
mov
add
arpl
sbb
jbe
cmp
scas
iret
sub
lcall
int
aaa
and
pop
aas
jb
imul
dec
xchg
pop
mov
leave
gs
xchg
mov
decl
loopne
mov
cmp
add
lea
ficompl
ret
jne
jle
scas
scas
insl
jae
sbb
add
mov
add
ja
xchg
jae,pt
or
mov
jmp
mov
push
test
movsb
sbb
xor
cmp
insb
out
outsb
aas
mov
adc
dec
xchg
lret
fistps
imul
push
in
jno
repnz
insb
call
lea
cmp
popl
int
push
xlat
out
adc
rcrl
test
pushl
ds
jbe
xor
push
pop
test
push
int
or
jns
js
and
incl
lcall
ja
jmp
rorb
mov
mov
mov
cmp
loopne
cmp
sub
in
stos
gs
fimuls
inc
fdivrp
imul
mov
outsl
sub
inc
xchg
cld
divl
mov
sar
jmp
adc
rorb
lret
sarb
inc
push
hlt
and
adcl
push
mov
aas
xor
pushf
test
repnz
cmpsb
inc
not
call
insb
cmc
popf
xorb
xlat
fnsave
mov
sub
mov
daa
adc
mov
mov
pop
jg
in
jno
or
sar
jmp
das
sub
cmpl
fadds
jg
mov
jge
xchg
aas
cli
loop
je
or
pop
mov
test
imul
pop
xchg
dec
or
and
js
int
jg
lcall
loop
shlb
push
adcl
mov
scas
xchg
arpl
cld
jmp
push
xor
adc
xchg
aaa
clc
aam
adc
or
jno
loopne
jg
ja
outsl
push
dec
mov
cmpsb
iret
cmc
and
add
inc
mov
pop
or
pushl
repnz
sbb
icebp
xor
jecxz
mov
arpl
mov
addr16
mov
cmp
sbbb
jns
mov
jge
int3
aaa
fistps
ljmp
mov
jecxz
pop
mov
xor
js
sub
arpl
jmp
mov
stos
add
push
xchg
cmp
jo
or
jmp
int
pushf
pop
decl
pusha
xor
aas
test
or
pop
cwtl
xchg
cmp
cmp
pushl
mov
xor
push
mov
jne
out
add
test
xchg
lcall
mov
flds
insl
mov
jne
aas
mov
lahf
adc
lret
lret
shl
outsb
cli
jmp
push
mul
nop
mov
mov
test
jns
xor
sbb
insl
mov
out
dec
nop
jp
mov
and
pop
sub
xor
iret
push
mov
dec
fdivs
out
or
jge
add
adc
sbb
pop
clc
repnz
outsl
xchg
roll
adc
adc
sbb
fbstp
add
call
inc
sub
fnstsw
push
mov
rorb
sbb
mov
xor
icebp
mov
jmp
add
ljmp
aas
cmpsl
xor
dec
pop
loopne
sub
scas
pop
ljmp
mov
cmc
adc
out
rolb
popa
sub
jmp
inc
or
incl
mov
jae
aad
lahf
lods
jnp
mov
mov
pop
lock
ljmp
test
fs
lret
mov
mov
jns
sbbb
pop
inc
lret
or
decl
and
negl
loop
mov
sub
pop
int
stos
or
js
aas
int
jp
and
pop
loopne
sub
push
mov
jno
fcmovnbe
fisttpl
sbb
jg
inc
ret
adc
push
sar
jle
mov
adc
in
outsb
std
into
xor
decl
cmp
push
jmp
and
into
fcmove
cld
lret
es
rcr
inc
cmp
jp
pop
pushl
and
iret
lods
cmp
ss
sbb
je
fstps
sbb
jle
icebp
sub
push
lcall
sbb
push
ret
dec
pop
data16
mov
inc
orb
clc
cmp
mov
lds
push
pusha
jg
scas
bound
hlt
adc
insb
sub
cmp
push
imul
bnd
sub
cld
std
pop
nop
out
incl
or
jge
mov
add
gs
jmp
push
mov
cmp
cmpsb
push
xchg
inc
fwait
adc
out
xor
nop
push
jns
jo
inc
xor
jo
xchg
mov
fs
mov
inc
xchg
imul
mov
xchg
pop
notb
rorl
je
cmp
push
lea
jnp
outsb
rcrb
lret
push
and
xchg
sbb
cmp
icebp
pop
repnz
jmp
movsb
repz
decb
push
cmp
rcll
insb
mov
mov
jecxz
fwait
lods
out
decl
lods
lods
cmp
mov
int3
shr
repz
push
and
mov
mov
push
repz
sar
bound
gs
and
pop
dec
iret
call
incl
flds
in
or
pop
stc
jle
mov
movsb
outsb
mov
clc
mov
repnz
int
lods
lcall
js
xchg
stos
pop
pop
out
fldenv
out
jg
lods
jge
outsb
aad
lcall
in
ljmp
in
sub
cld
lcall
in
inc
sahf
fwait
lcall
add
xor
inc
lahf
out
cli
lea
insb
in
inc
dec
nop
cmpsb
imul
or
inc
mov
fwait
sub
dec
cmp
mov
push
subl
lcall
sahf
jp
xor
pushf
push
addr16
inc
lds
les
add
movsl
pushf
lods
add
inc
mov
std
repnz
into
cmp
lods
in
dec
cmp
inc
imul
mov
repz
ret
ret
aaa
les
js
add
jmp
push
pop
arpl
mov
mov
ret
call
das
and
and
stos
mov
jge
and
cmc
jmp
dec
pusha
adc
ljmp
sti
mov
push
xchg
adc
sbb
outsb
stc
mov
test
lahf
jae
lods
std
call
or
pop
nop
dec
int3
or
and
add
nop
neg
pushl
into
add
jae
iret
decb
pusha
jb
jno
jbe
lds
cld
fcmovnbe
cltd
je
lcall
cwtl
cli
xlat
lods
sbb
and
rcrl
inc
cmc
shl
mov
add
loopne
jne
jg
mov
inc
push
jbe
jbe
xor
out
cmpsb
pusha
pop
add
shrb
xlat
add
push
in
mov
outsb
and
scas
lret
inc
inc
fadds
jle
jl
adc
dec
test
or
jmp
clc
in
mov
stos
cmp
push
jp
and
das
push
or
iret
jg
iret
jmp
mov
jne
mov
shrl
lcall
into
arpl
fcmovnb
ficomps
pusha
cmp
cld
cwtl
test
ret
jbe
int
es
outsl
movl
jg
jbe
cmp
ret
mov
mov
sti
and
push
ja
or
cmp
mov
dec
lret
cli
jle
lcall
ljmp
ret
subl
xchg
outsb
cmp
xchg
push
aad
and
incl
add
pop
das
ret
or
push
test
aas
fildl
decl
xor
mov
sahf
incl
pop
jno
jnp
movsl
mov
rorb
rcrb
pushl
mov
pushf
arpl
ret
push
mov
movsl
pop
adc
mov
ljmp
inc
std
sbb
and
pop
cltd
call
adc
loope
int3
push
imul
clc
decl
inc
imul
sub
inc
out
xchg
sti
xor
lret
jg
outsl
testb
push
or
pop
sbb
sbb
jno
or
je
call
xchg
sbb
mov
mov
stos
lea
loopne
sub
dec
loop
xor
push
inc
mov
mov
test
dec
aad
pop
movsl
xor
loop
cli
fwait
inc
cmp
lcall
cmc
aaa
push
mov
dec
and
pushf
fwait
cmpsl
mov
lock
decl
and
push
push
ljmp
setge
out
fprem
inc
mov
inc
shlb
es
call
xchg
lcall
loope
mov
mov
xor
rorl
push
call
sar
jmp
xchg
inc
xchg
enter
xchg
in
xchg
push
das
xchg
dec
fsin
clc
push
or
ljmp
fbstp
jp
sub
test
push
mov
call
mov
jl
pop
push
cli
filds
dec
jecxz
push
xor
jg
sub
rolb
adc
push
daa
cmpsl
jb
rclb
push
adc
aaa
rcl
adc
xchg
in
lcall
in
addr16
rolb
mov
pushf
es
cmp
hlt
xchg
fs
fs
mov
decl
mov
xchg
pop
jmp
or
es
in
jno
inc
shrb
fwait
mov
call
mov
dec
arpl
icebp
in
dec
cmp
movsl
aad
xchg
jmp
stc
out
jle
mov
push
mov
pushl
jo
add
jg
cmc
pop
fnstsw
inc
mov
ljmp
gs
and
dec
loope
outsb
repnz
pop
adc
aas
sbb
push
adc
imul
add
imul
push
xlat
lret
cmc
sbb
movsl
mov
sbb
movsb
cli
int3
loope
mov
sbb
fidivs
sbbl
aad
test
adc
int3
cli
roll
call
pop
push
jno
or
rcr
in
movsl
cmpsl
inc
test
lcall
xor
sbb
mov
jb
adc
dec
mov
jae
add
inc
loopne
jl
fistpll
fs
std
mov
fidivrs
shr
ficoms
pop
lods
popa
lock
jmp
es
ljmp
jnp
sbb
mov
das
scas
out
mov
in
mov
lcall
push
mov
cmc
mov
xchg
or
push
cmp
popf
mov
jmp
clc
pusha
xchg
mov
fildl
sbb
add
and
stc
add
inc
nop
pop
xchg
push
lret
push
lcall
push
push
push
jge
into
mov
fdivl
fldenv
fmuls
inc
ljmp
push
mov
and
adc
aad
rcr
out
pushf
nop
xor
addr16
lcall
movsb
xchg
pop
push
jmp
pop
mov
inc
jno
es
or
add
push
pushl
xchg
inc
sub
fsubl
mov
jae
mov
mov
xchg
mov
mov
call
scas
notb
mov
out
outsl
cmp
decl
lock
push
cld
subl
mov
std
push
sub
push
xor
mov
dec
fnstsw
jne
fnstenv
sbb
ss
inc
mov
sar
lcall
aaa
inc
icebp
lods
sub
ljmp
xchg
sbb
or
insl
out
and
insb
add
pop
insl
loope
ud0
dec
xor
subb
orl
ljmp
rclb
mov
mov
les
into
mov
out
popa
clc
dec
lods
xor
push
incl
mov
fwait
mov
popa
arpl
xchg
mov
inc
xchg
mov
and
lcall
mov
sti
cmp
clc
cmp
cmp
add
adc
cmp
out
cmp
ljmp
mov
daa
mov
rolb
pusha
pop
or
dec
call
das
dec
stc
xchg
jecxz
out
daa
xor
jmp
pop
jmp
hlt
adc
clc
loope
sbbl
movsl
outsb
xorb
mov
ljmp
jp
pop
dec
in
mov
lcall
ja
pusha
adc
xor
mov
movsb
jne
dec
ficoms
inc
xlat
lods
dec
or
xchg
jb
test
scas
push
and
inc
mov
call
mov
xor
ss
jp
cmp
lret
mov
push
or
popa
push
mov
dec
scas
idivl
aas
call
sti
out
push
add
pushl
mov
pop
ja
rcrb
push
or
and
and
test
xchg
mov
incl
loop
fcomps
add
adc
jp
lret
jecxz
mov
xor
or
mov
push
or
iret
and
jnp
shl
inc
lret
testb
mov
jns
jmp
jb
push
pop
leave
popf
inc
sbb
pop
int
outsl
mov
push
or
push
insb
adc
fbstp
cmc
mov
sub
jo
push
mov
imul
sbb
ljmp
push
cmp
pushl
push
dec
xor
sbb
bound
mul
xchg
cmp
sti
cmp
pusha
pop
jp
or
ljmp
mov
mov
lods
push
stc
je
pop
inc
xchg
or
ja
sub
cmp
adc
std
fisubl
aas
jg
push
negb
icebp
lds
mov
push
mov
jmp
popa
lods
int
in
popf
adc
sbb
mov
mov
aad
mov
mov
add
xor
decb
or
push
ret
add
vphaddbd
iret
pushf
xchg
xlat
push
cli
and
test
enter
mov
dec
fsts
fdivrs
xadd
jo
xor
nop
mov
aam
incl
sbb
or
or
popf
sbb
test
cmp
dec
jle
fidivrl
divl
call
jecxz
pop
mov
push
fsubrs
ss
sub
inc
adc
cmpsb
ret
xchg
push
dec
ret
sar
jl
leave
xor
adc
cmp
pop
sub
divl
adc
mov
push
clc
push
stc
pop
jbe
jmp
dec
push
inc
sbb
or
icebp
mov
inc
sub
mov
fdivs
rclb
ljmp
cli
add
test
adc
mov
sbb
push
jecxz
divl
lret
cmp
popf
cmp
mov
dec
push
push
hlt
push
jp
sahf
fcoms
ss
jg
pop
stos
cmp
dec
xchg
sub
pop
cmp
xor
sub
sti
cmp
push
and
mov
mov
add
std
and
mov
sti
dec
arpl
gs
cmc
lea
fwait
mov
mov
adcb
sahf
popf
cmc
or
push
cmp
cli
aam
incl
test
int
cmp
out
popf
sbb
mov
aam
xchg
add
sub
decl
xchg
arpl
sub
xchg
mov
jno
sub
popf
adc
ret
das
clc
incl
mov
dec
daa
push
dec
lret
xor
sub
xor
pop
jg
in
pop
frstor
xlat
stos
mov
and
in
and
adc
or
and
cmp
jmp
ficompl
popa
fwait
mov
cwtl
gs
mov
fnstsw
mov
cmp
incl
fnsetpm(287
mov
test
xchg
movsb
sbb
push
cli
xchg
test
ljmp
icebp
mov
cmp
mov
mov
insb
int3
pop
xchg
ret
ljmp
in
arpl
sahf
outsb
or
pop
and
enter
inc
mov
in
jl
and
mov
out
jp
repnz
adc
enter
inc
mov
aad
enter
jg
ljmp
lcall
addb
pop
movsl
jle
dec
loopne
xor
dec
das
sar
out
jo
testb
sub
mov
push
js
ljmp
sar
fnsave
je
jge
jl
sub
rorl
lcall
push
int
sub
mull
gs
gs
push
xchg
jmp
cmp
inc
xchg
adc
push
ss
push
in
push
sahf
sti
scas
in
sub
mov
jg
testl
neg
int3
jmp
fisttps
xchg
mov
push
lahf
in
xchg
jecxz
scas
push
clc
mov
pop
in
push
ljmp
mov
ss
bound
jmp
mov
sbb
jmp
hlt
inc
pop
std
into
cmp
fldenv
xchg
ljmp
loop
cmp
shl
push
sahf
lret
mov
cli
mov
adc
inc
pop
pop
dec
int3
or
cmp
adc
popf
inc
xchg
sub
dec
mov
mov
stos
jg
jbe
xchg
int
sbb
pop
mov
xor
xor
jo
and
mov
test
icebp
dec
loop
and
sub
repnz
das
sar
sti
xlat
and
adc
addb
mov
mov
xlat
jg
in
movsb
xchg
mov
add
jp
xchg
cmp
pop
or
cli
ljmp
roll
xor
cmp
cmc
push
add
lcall
movsl
nop
out
jecxz
cmp
jl
add
mov
enter
decl
arpl
ds
lock
xor
mov
pop
jne
or
std
mov
sbb
enter
mov
aad
mov
dec
sbb
pop
cs
rcrl
sar
incl
out
jne
ja
cmp
add
cmp
cmpb
shrb
mov
lcall
rcl
sarb
adc
push
pop
jge
repnz
jmp
push
mov
dec
xchg
lock
pop
out
in
jle
or
pop
mov
mov
mov
mov
add
xchg
sti
test
sbb
mov
mov
xchg
cwtl
mov
sbb
dec
int
call
std
jmp
xchg
enter
stc
out
adc
cld
jmp
shrb
xor
push
and
aas
lret
mov
jp
cs
add
or
xchg
popa
lcall
jg
push
pop
les
insb
mov
sub
mov
inc
insb
inc
fdivl
and
stc
rcll
out
fcoml
ja
insb
push
es
int
jl
sarl
movsl
cmp
push
sahf
cmp
lcall
mov
mov
dec
ljmp
push
adc
jg
cmpsb
outsb
hlt
sbb
pop
or
data16
scas
push
mov
popf
bound
fwait
lahf
je
mov
dec
ljmp
cmp
sub
dec
mov
adc
mov
aam
sub
out
xlat
int
jge
imul
adc
jle
sbb
gs
stos
add
jmp
iret
sti
call
fistpll
data16
lea
data16
dec
dec
inc
outsb
jg
mov
sub
or
addb
js
push
les
xor
pop
cmp
lds
inc
mov
lret
outsl
aaa
insb
aam
adc
lret
bound
adc
call
jae
ja
sahf
enter
push
das
mov
mov
xor
mov
xchg
and
es
es
mov
xchg
movsb
fwait
mov
and
cmp
decl
or
inc
fs
gs
test
mov
mov
inc
mov
incl
addr16
pop
out
inc
xchg
inc
in
stc
in
adc
enter
test
fs
jnp
not
xor
jnp
pop
daa
adc
push
in
aad
ss
in
arpl
popa
enter
sub
mov
test
fiadds
fwait
in
popa
mov
popf
cmp
and
incl
out
loop
dec
fimuls
iret
pop
lret
jmp
or
jl
ss
iret
aad
leave
xchg
cmp
mov
shr
sahf
or
stos
or
test
icebp
incl
pop
imul
pop
je
dec
inc
sub
jg
pop
lret
pop
mov
lock
jmp
and
hlt
popa
dec
into
nop
mov
inc
stos
cmp
push
pop
les
xchg
aam
fbstp
xchg
and
or
mov
jmp
mov
or
mov
pushl
cs
jne
testb
sub
pushw
inc
push
nop
aas
add
fs
cmp
and
dec
inc
adc
and
int
xchg
filds
ret
jp
loopne
add
cmp
and
jl
jg
pop
add
mov
and
cld
pop
test
ds
cmp
jns
sub
out
cmp
push
pusha
adc
js
cld
ljmp
fsubrl
or
movsb
test
imul
ja
jl
adc
imul
adc
adc
adc
and
cltd
sbb
ret
cmp
es
lret
mov
adc
inc
call
loopne
dec
dec
mov
pop
jmp
xchg
and
jno
hlt
into
scas
je
dec
call
inc
out
dec
push
mov
or
shrb
in
sbb
aas
fmull
pusha
sbb
lret
ljmp
repnz
ret
xchg
xor
add
sbb
ljmp
fs
iret
incb
inc
jmp
pusha
addr16
xchg
into
sub
push
or
mov
xchg
mov
lret
aam
push
cltd
cltd
out
xor
nop
mov
push
ja
mov
fmuls
int3
cli
fisubrs
aaa
add
push
mov
sbb
xchg
jl
jl
out
in
lcall
inc
addb
outsb
insb
add
sahf
xchg
lret
mov
mov
cmpsl
and
call
shrb
xchg
stc
pop
sbb
dec
fcomps
jo
je
andb
xchg
negl
jl
sbb
repz
je
cmp
enter
cmp
push
in
jg
dec
sbb
das
clc
in
pop
cmc
rcrl
orl
mov
in
ljmp
lea
je
cmp
pushf
ret
sbb
js
nop
pop
icebp
adc
decl
mov
sarl
lods
mov
mov
fs
pop
push
fisubl
push
ljmp
dec
jae
pop
sbb
in
sbb
sbb
cmp
lcall
ljmp
out
stc
or
cmpsb
dec
in
mov
sti
fcoms
push
punpcklbw
call
sbb
dec
lret
mov
sbb
and
xor
cmpsl
shr
lcall
adc
cli
inc
and
mov
jne
mov
and
movsb
stc
jmp
jb
pusha
daa
dec
dec
mov
call
xor
push
dec
lods
pop
das
lock
mov
out
scas
shl
in
cmpsb
pushf
cmp
mov
addl
addr16
push
mov
incl
mov
aas
mov
mov
inc
xchg
xchg
shld
push
mov
ret
fmull
pop
xor
jo
das
aaa
dec
hlt
jmp
daa
or
lcall
jnp
ss
es
push
cmp
filds
lahf
and
icebp
ds
pushf
lcall
outsl
or
pop
mov
ret
lock
cwtl
mov
add
push
pushl
adc
mov
adc
mov
mov
sbb
into
ret
jle
mov
out
mov
pop
xchg
sub
and
xor
lcall
call
ss
std
mov
ss
stos
je
sub
sbb
out
add
nop
dec
xchg
jmp
mov
lea
or
call
adc
call
dec
sahf
imul
cs
dec
and
adc
xlat
fdivp
in
xchg
mov
cld
filds
jb
lods
adc
das
cmp
ret
jg
inc
cld
push
call
aaa
cmp
movsb
xchg
add
or
gs
jg
or
daa
into
decb
sub
mov
mov
and
fwait
jmp
xchg
mov
mul
dec
dec
and
inc
loope
jl
mov
aad
pop
or
mov
dec
stos
add
mov
mov
mov
push
jbe
jmp
in
sub
adc
popa
data16
or
mov
mov
push
sub
xchg
xchg
mov
lea
mov
pop
push
pop
cmp
xchg
push
and
pop
xor
jg
call
push
cmpl
fstpl
and
enter
or
loop
js
out
xchg
gs
jl
mov
push
fwait
je
fisttpl
or
ja
ds
xchg
scas
jg
sarl
movsl
cli
sets
sbb
fwait
mov
pop
adc
pushl
fwait
out
xchg
outsl
aas
xchg
and
popf
push
sbb
stos
add
fstps
call
push
add
arpl
aam
mov
ja,pn
mov
pop
fdivl
das
cs
fcom
adc
cmp
push
mov
jge
out
je
sub
and
xchg
loope
xor
test
call
adc
shlb
arpl
adc
fwait
push
dec
stos
mov
adc
in
std
mov
cld
jb
test
pop
cmp
lods
in
loopne
push
jns
push
test
pop
lret
adc
mov
repz
in
lock
mov
pushl
jbe
add
push
mov
fdiv
js
cmpsl
test
fdivs
or
ja
xor
inc
out
mov
inc
xchg
sbb
jbe
mov
sub
lret
pop
data16
ds
pop
icebp
decl
xchg
inc
pop
sub
mov
loop
out
les
stos
adc
clc
call
sbb
pushf
movsl
in
cwtl
ds
ljmp
jbe
and
mov
and
cs
or
jb
lock
test
adc
and
add
loop
enter
mov
ljmp
xorb
sub
fldt
jno
inc
fcomi
or
xchg
pop
xor
scas
cmp
cmc
call
and
test
jg
or
sbb
inc
cmp
mov
addr16
push
and
icebp
out
int3
orl
mov
xor
lcall
sub
outsl
nop
mov
rorb
sbb
movsb
movsl
ret
jecxz
ds
and
je
lcall
inc
xchg
cmp
data16
jmp
das
mov
shlb
ds
in
jge
addr16
movsb
dec
data16
inc
loop
call
loop
sarb
stc
fisubrs
inc
jne
test
push
add
fwait
cmp
in
jmp
mov
xor
xchg
mov
xchg
cmp
add
ljmp
scas
and
mov
subb
pop
inc
adc
lret
adc
cmp
xor
lods
jl
and
movsl
sub
sub
or
ffreep
adc
cmp
xor
sub
sbb
pop
pop
cmpsb
cwtl
ljmp
jg
call
lcall
mov
cs
xchg
stos
lods
divl
xchg
out
cmp
lcall
orb
cs
mov
ret
jmp
test
pop
inc
and
pop
movl
movsb
daa
fnstcw
xlat
xor
mov
mov
call
or
mov
aam
inc
adc
cmp
lcall
lds
lcall
loop
rcrb
adc
cmp
or
cs
call
sub
mov
jnp
push
mov
mov
stc
xor
aaa
rcl
ret
outsl
cld
adc
leave
and
pop
mov
incl
stos
test
cli
mov
or
adc
mov
pop
jno
dec
and
lcall
in
dec
aad
stos
call
fs
aaa
das
dec
mov
mov
pushl
xchg
fstps
iret
adc
mov
into
cltd
daa
andb
xor
out
push
cli
call
push
sbb
mov
push
pop
cld
mov
push
cmpsl
jle
inc
adc
aas
dec
lcall
jle
lcall
outsb
or
sbb
por
inc
adc
dec
inc
or
aam
int3
fimull
mov
jmp
arpl
loope
xor
add
hlt
lcall
jb
pop
arpl
int
test
out
inc
xchg
cwtl
cmp
sub
adc
frstor
in
out
fiadds
inc
jmp
sbb
and
or
insl
imul
fildll
movsl
rcll
rclb
push
add
loope
and
or
repz
lock
mov
test
fisubs
and
aas
push
lock
add
jmp
and
icebp
sbb
decl
jle
int3
testb
mov
decl
rorb
movsl
push
push
push
xchg
cmp
and
lret
or
jbe
hlt
mov
lcall
dec
movsb
aaa
repz
mov
adc
push
inc
add
shl
jmp
aad
xor
mov
fistps
lods
cwtl
ja
and
sub
add
call
push
cmpsl
lahf
loop
cmpb
scas
in
mov
shll
dec
mov
je
cmp
mov
mov
test
cmpsb
xchg
and
mov
movb
mov
push
iret
stos
sbb
cli
incl
rcrl
push
cmp
jecxz
add
dec
mov
cmpb
cmp
jmp
js
pop
je
sbb
jmp
dec
dec
clc
mov
push
mov
sub
adc
mov
pop
and
sti
and
call
jmp
imul
pop
out
fildll
cmpsl
enter
mov
jmp
test
lcall
orl
es
iret
repnz
ret
movsb
or
inc
or
addl
mov
lcall
mov
addb
fsub
mov
shrb
jno
mov
call
xchg
bound
pop
jl
out
jmp
rclb
clc
scas
scas
call
cs
std
call
rorb
call
jp
xor
xchg
lods
inc
fbld
das
cli
cmp
push
lret
and
or
aas
scas
xor
or
cmp
enter
jg
inc
pop
push
into
in
std
fcomps
idivb
rcrl
jno
jmp
testb
addr16
mov
mov
leave
fs
and
lcall
pop
mov
comiss
sahf
in
loop
icebp
arpl
cmp
aam
call
pusha
add
xor
pushf
cmp
sti
les
je
jl
jns
push
push
out
jmp
stos
adc
dec
mov
inc
jne
and
jecxz
pusha
xlat
inc
push
sub
or
sarb
jg
and
les
in
clc
decl
mov
pushf
mov
sbb
lcall
jnp
mov
mov
xchg
mov
pop
pushf
cmpsb
insl
fwait
adc
dec
test
stos
loopne
push
xor
notl
stos
mov
roll
push
mov
fisubs
xor
jg
sti
das
or
das
and
in
xorb
lret
popa
inc
push
mov
out
test
mov
jnp
incl
clc
jp
push
dec
popf
outsl
shll
mov
leave
pop
cmp
mov
push
pushl
mov
or
cmpsb
loop
and
cmp
pop
fldcw
cmp
loope
ljmp
test
dec
gs
test
insl
test
inc
loope
hlt
into
int3
add
arpl
mov
popf
push
rcr
xchg
insb
add
xor
sub
mov
inc
pushf
iret
testb
lret
cld
or
jbe
jg
push
xchg
outsl
jnp
adc
ljmp
jle
inc
sbb
fs
xchg
fmuls
aaa
push
jo
jge
scas
and
in
out
cli
ljmp
cltd
stc
mov
sti
dec
cli
xchg
and
jae
sub
lahf
jge
mov
adc
incl
std
push
add
and
sub
iret
pushf
dec
pop
stc
call
jmp
dec
mov
int
add
mov
cli
pushf
mov
popf
mov
push
and
or
jmp
nop
add
mov
neg
in
scas
subb
adc
es
call
xor
sub
mov
push
das
mov
imul
clc
fdivr
jmp
mov
cmpsb
and
outsb
adcl
sahf
and
xchg
xchg
out
mov
pushf
or
call
and
ret
lods
test
rcrl
push
cwtl
mov
daa
add
cltd
into
ljmp
jmp
cmpsl
movsb
mov
bound
jge
mov
push
pop
lcall
decl
mov
sub
add
sbb
xchg
insl
and
stos
lods
filds
sbb
or
add
cs
mov
pop
pop
pop
jb
decl
pop
cli
or
add
push
xor
and
lret
das
fisttpll
pop
das
sar
ds
rolb
push
data16
mov
sbb
lea
push
cld
pushl
lret
das
pop
xor
mov
xchg
adc
and
or
inc
insl
out
call
lret
xor
sub
cltd
das
loope
add
jp
push
in
xchg
stos
ljmp
sub
es
mov
mov
or
or
in
adcb
call
sbb
jg
sbb
pop
stos
fsubrl
ds
mov
jno
outsb
pop
decl
icebp
cld
scas
sti
or
xor
pop
lret
loopne
ret
dec
mov
adcb
stos
mov
sub
inc
and
add
fstl
jmp
dec
adc
sbb
lret
push
jns
outsb
pop
inc
outsl
inc
cmp
sti
mov
or
rcl
mov
pop
fcmovnb
add
push
mov
jg
popf
or
add
fldt
int
call
shl
and
repz
pushf
push
addr16
xor
and
sti
push
mov
incl
add
push
and
iret
dec
jg
lcall
mov
fildll
mov
incl
pop
add
sbb
xchg
repz
inc
xchg
shrb
dec
outsb
les
lret
es
fcomip
decl
mov
pop
in
sub
jno
pop
jae
and
gs
sbb
incl
push
out
push
lods
lret
sbb
push
ret
test
sub
xchg
addr16
xor
ljmp
inc
popf
andl
adc
mov
call
gs
jp
pop
lock
pop
sarl
adc
andb
call
lock
pop
pushl
push
xchg
push
cmpsb
int
xchg
lcallw
mov
bound
ljmp
aas
jo
popw
inc
sbb
pop
xor
sub
inc
add
addb
shrb
mov
lcall
xlat
in
xlat
mov
test
lods
out
push
dec
hlt
das
cwtl
outsb
incl
jecxz
mov
add
sbb
out
mov
xor
sub
call
dec
leave
push
adc
jo
cli
sti
cmp
in
mull
push
sub
add
cld
or
inc
mov
mov
leave
das
lock
cltd
mov
jb
and
jl
pop
cmc
je
loope
call
pop
cmp
add
out
xor
adc
inc
fstpl
pop
aas
xor
lahf
mov
stos
sub
jnp
call
inc
mov
test
dec
repz
or
inc
inc
inc
jbe
addl
inc
mov
pop
out
mov
inc
gs
pushl
scas
or
fstps
out
pop
call
fs
mov
push
jecxz
cmp
lods
cmp
leave
arpl
js
add
and
test
cmc
pop
imul
outsl
and
cmp
xchg
mov
sti
call
ret
sub
push
in
xor
xchg
push
inc
mov
fcmovnu
inc
xchg
outsl
jb
mov
fisubrl
das
push
xor
mov
and
xchg
jle
mov
call
and
lcall
jp
loopne
lcall
cli
icebp
push
jp
jno
jns
loop
pop
xor
pushl
inc
cs
inc
xor
loop
jge
leave
mov
movsl
jbe
jp
cmpsl
cmp
xchg
movsl
pop
or
clc
xchg
push
scas
das
int3
gs
jg
add
mov
lahf
cmpsb
push
adc
fidivs
jge
cmpsl
ja
adc
nop
mov
daa
mov
or
mov
jle
sub
lcall
dec
mov
pop
mov
movsb
mov
in
adc
lcall
inc
sub
and
add
shll
mov
out
clc
lea
incb
stc
xchg
mov
idiv
outsl
lods
idivl
lods
repnz
jl
mov
sbb
push
lcall
mov
in
mov
ss
cmp
mov
adc
dec
dec
bound
mov
decl
sub
insl
lcall
jne
sbb
sub
lahf
in
jle
aaa
jmp
clc
movsb
lcall
pop
test
cmpsb
test
out
mov
jne
add
jge
xchg
mov
fdivrl
pop
popf
rsqrtps
lret
stos
bound
xor
mov
aam
ljmp
mov
in
in
push
mov
jecxz
push
mov
pushl
adc
pmuludq
dec
mov
xchg
addr16
test
hlt
out
gs
mov
xchg
leave
mov
pop
sub
add
ret
sbb
cmp
jmp
bound
sub
mov
cmp
xchg
ljmp
jge
movsb
sarl
lcall
scas
aam
aas
fsubp
mov
push
mov
jmp
add
imul
lcall
inc
sbb
sub
xorb
pusha
jbe
mov
push
add
cmpb
add
add
xchg
sub
pop
iret
mov
jmp
lock
in
pop
adc
inc
cltd
pop
mov
call
pop
ja
push
mov
fs
inc
repnz
or
loopne
mov
pop
sbb
add
fldt
aas
cmpsl
add
mov
scas
jp
mov
jns
pop
cmp
arpl
pop
push
divb
xchg
push
jnp
out
pushf
pop
and
sbb
mov
imul
add
pushl
adc
fsts
out
push
inc
adc
roll
sub
fcomp
push
pushf
bound
adc
adc
aas
pop
xor
movsl
stos
out
xchg
or
mov
pop
cmp
adc
std
mov
decl
int3
iret
clc
out
jb
inc
pop
xor
or
jp
imul
jmp
repz
mov
push
mov
jnp
ljmp
xor
inc
and
data16
sbb
adc
sahf
scas
imul
mov
incl
adc
inc
les
cmp
jae
adc
hlt
sub
mov
jns
push
call
cmpsb
jb
push
adc
loopne
movsl
pop
push
or
push
and
push
jle
or
cld
jl
xchg
mov
cli
ljmp
test
dec
fldcw
cli
sub
stos
jp
int
jae
jl
js
inc
cmp
icebp
lcall
sub
mov
out
and
insl
ja
cmp
loopne
mov
dec
or
call
add
sbb
pop
fisubrs
or
cmp
pushl
loope
dec
push
push
cli
outsb
aam
fildll
lods
sub
sub
scas
mov
fnsave
dec
pop
jbe
pusha
and
lcall
xlat
leave
xchg
sbb
mov
ljmp
hlt
movsb
jno
or
ljmp
jp
xor
push
xor
sarb
sbb
mov
fldz
dec
xchg
shrb
lcall
into
loop
lock
inc
cs
into
sti
jmp
arpl
loopne
rclb
inc
cmp
dec
add
push
call
sub
xor
daa
outsl
arpl
rclb
push
test
push
bound
shll
movsb
mov
jle
and
push
or
icebp
enter
lcall
das
iret
adc
jns
popa
and
mov
test
dec
mov
int3
inc
repz
decl
cmp
fisttpll
mov
adc
and
inc
ret
cltd
adc
jmp
xchg
out
dec
pop
gs
mov
inc
cltd
mov
adc
sbb
jle
pusha
andb
or
adc
ljmp
fisubl
jmp
push
jecxz
test
cltd
rcr
xor
cld
inc
into
fwait
lret
sub
push
hlt
fidivrl
loop
push
inc
fdivr
loopne
adc
dec
or
add
jo
clc
add
fistpl
lcall
or
pop
pop
push
or
or
or
or
jecxz
sti
or
adc
adc
push
adc
outsb
xlat
decb
add
pop
sbb
adc
adc
adc
add
lds
shll
or
jle
ud0
add
or
pop
add
and
add
sahf
add
mov
adc
add
xor
push
pop
jns
mov
pusha
or
cli
jb
imul
adc
add
add
adc
pop
and
xor
mov
incl
inc
mov
adc
xor
cmpb
or
bsr
xor
adc
mov
les
xchg
addl
add
or
dec
outsl
popa
adc
sbb
push
fs
inc
xor
add
into
cmp
add
add
sub
cmp
adc
aaa
incl
push
pop
popa
jno
and
adc
xchg
mov
stc
and
push
lock
loope
icebp
mov
or
push
mov
xorb
scas
inc
addb
js
decl
cli
sub
rcr
push
ret
xchg
and
sub
call
std
cmpsb
xor
aas
imul
cmp
inc
or
pop
les
mov
dec
add
mov
cmp
pop
dec
out
cmp
xor
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
inc
mov
dec
or
adc
pop
inc
inc
xchg
add
stc
stos
pusha
add
std
or
add
lds
cld
cli
and
pushl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
leave
les
pop
mov
mov
clc
cmpl
jg
or
insb
sub
addr16
out
or
push
push
xchg
jmp
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
fdivp
jmp
orb
int3
lcall
fs
scas
mov
pop
pop
fbstp
movb
xchg
sbb
scas
adc
mov
xor
lods
ljmp
movsb
cltd
jns
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
ss
cmp
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
mov
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
pop
cwtl
int
arpl
push
out
or
push
fcmovnb
mov
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
lcall
mov
jmp
sbb
add
mov
jb
mov
mov
mov
sub
pop
mov
adc
xor
jl
rorl
adc
mov
hlt
push
add
stc
loope
mov
sar
andl
aas
icebp
idiv
push
push
mov
imul
scas
fadds
in
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
test
subl
jb
adc
push
lock
lods
jp
testb
mov
jp
into
fcomps
sbb
sbbl
into
andl
aas
loopne
cli
jbe
idiv
adc
aaa
xchg
in
add
inc
adc
loope
fisttpll
call
icebp
aas
std
cli
push
push
push
idivl
pushl
jle
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
ret
scas
call
les
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
pusha
incl
aas
sti
punpckhbw
cmpsb
orb
mov
loopne
cmp
cmp
js
jmp
xchg
pop
clc
pop
hlt
mov
xor
movsb
add
lea
jg
call
cmc
jmp
std
xorb
jg
aad
adc
ret
das
pop
lcall
call
pop
shlb
out
sarb
sbbl
jno
or
sar
ljmp
les
cli
mov
mov
inc
arpl
stos
mov
lcall
pusha
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
adc
lcall
cmpsl
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
lock
sbb
cmpsl
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
das
clc
decl
add
ret
fcmovu
ds
cmpsl
scas
pushl
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jmp
cmp
test
dec
jb
adc
xchg
and
push
push
jo
pusha
imul
add
in
pushl
xor
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
decl
orb
add
jg
jle
jg
call
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
adc
loopne
idiv
pop
cld
addl
adc
and
xor
mov
lahf
fmull
enter
jecxz
scas
sub
mov
pop
decl
hlt
sub
mov
dec
incb
fisubrl
aas
mov
negb
push
inc
or
pop
jg
add
pop
jg
mov
aad
test
mov
idivb
movsb
mov
iret
push
jbe
push
inc
mov
icebp
pop
incb
jno
adc
push
inc
jecxz
cld
sti
fcomip
sbb
sarl
adc
loopne
sar
addl
mov
mov
imul
push
in
push
cmp
dec
push
in
aas
mov
inc
fildl
push
and
fwait
imul
add
push
sbb
in
or
and
mov
adc
inc
aas
clc
call
jnp
rcrl
rolb
pop
inc
jb
fistpl
adc
call
mov
addr16
pop
nop
mov
inc
sti
arpl
loop
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
sub
xor
fsubr
fistps
lds
fidivrl
jg
decl
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
sbb
cld
addl
cs
incl
mov
in
stc
mov
lahf
outsl
int3
push
sbb
std
inc
pop
pop
test
bound
pop
outsl
pop
cmp
xchg
inc
test
in
jge
popa
push
test
jbe
outsb
hlt
decl
daa
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
dec
cmp
shl
cld
mov
mov
js
pop
jg
pop
shrb
rcl
jg
adc
xor
std
lcall
mov
gs
pushf
lea
jp
jnp
jecxz
mov
lds
push
pop
adc
imul
or
inc
pop
xor
idiv
jmp
rorb
and
add
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
push
incl
fwait
into
test
xchg
movsb
insb
or
and
xchg
fisubrs
add
insb
test
aas
repz
fwait
ljmp
sbb
lock
in
jmp
stc
out
mov
clc
push
std
mov
jl
icebp
or
push
ror
mov
xchg
pmullw
cmp
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
dec
jg
mov
inc
out
pop
or
or
dec
ss
xchg
mov
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
outsl
das
or
lret
pop
in
cmp
or
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
adc
aas
mov
cmpb
lods
jg
mov
sub
addr16
sbb
cld
daa
adc
std
jp
std
adc
cltd
or
mov
ret
nop
dec
cld
stos
jle
icebp
das
incb
lock
pop
pop
div
cld
idivl
addl
scas
stc
lahf
loope
andb
shrl
je
push
xor
mov
add
fs
call
out
icebp
mov
loope
mov
cmpsl
popf
sbb
mov
mov
fbstp
push
daa
outsl
das
int
pop
mov
add
cmpsb
cmp
call
popf
js
data16
decb
adc
mov
add
mov
or
or
add
fs
inc
add
loop
out
or
aaa
std
fistpll
cmp
inc
sbb
xchg
mov
pop
cmp
mov
aas
icebp
ret
ror
sbb
mov
adc
sub
adc
aas
pop
clc
loope
loope
mov
or
jp
dec
add
xlat
jbe
scas
and
fbstp
xchg
flds
call
and
fdivrl
xchg
lcall
decb
js
pop
fbld
sarl
pop
out
jg
dec
sbb
jno
ret
fs
mov
inc
sbb
iret
call
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
jmp
outsl
jmp
std
mov
daa
jmp
fcoml
mov
push
jae
popa
lds
outsl
pop
hlt
dec
add
pop
stc
push
dec
out
fstpt
mov
enter
popf
xchg
pop
add
cmpsl
mov
daa
icebp
push
lahf
sti
inc
lcall
aaa
sbb
cmpsb
scas
les
pop
xor
mov
xchg
mov
fildll
fsubrl
add
xor
sub
inc
aas
add
cmp
add
sti
push
sti
pop
inc
xor
stos
inc
dec
push
mov
push
push
mov
int3
pop
iret
add
jl
icebp
mov
push
jg
fimuls
adcb
rclb
sub
and
dec
imul
scas
push
and
push
lds
mov
add
pusha
loopne
mull
push
stos
addb
inc
pop
jle
ds
or
adc
je
stc
fstl
jne
jo
imul
ja
push
insb
or
ds
addb
add
inc
out
sub
movaps
nop
shlb
xor
inc
loope
jb
adc
insb
push
aas
add
or
pusha
sub
nop
mov
cmpl
sub
push
push
dec
jo
daa
sbb
xchg
and
xor
gs
cmovs
push
xchg
push
outsl
outsl
insb
push
push
jo
push
outsb
popa
jo
push
fstpt
push
mov
sub
push
or
dec
dec
jne
js
or
pop
inc
scas
ret
add
add
push
popa
jecxz
add
lds
sbbb
fs
inc
jns
push
and
adc
jb
or
jecxz
push
es
ljmp
dec
insb
cmp
mov
mov
insl
insl
ret
sbb
sub
xchg
cmpsl
and
push
xorb
or
add
inc
in
int3
int3
jl
loopne
sub
cld
inc
or
imul
data16
stos
sub
sub
inc
or
mov
push
testb
push
outsb
flds
sub
mov
push
dec
inc
or
jae
cli
arpl
mov
xchg
xchg
test
push
ds
pop
pop
add
jo
mov
xchg
and
mov
jne
addl
xchg
sub
push
xor
icebp
insl
clc
imul
dec
xorb
mov
fiadds
fildl
subl
jbe
ret
jnp
mov
jne
subl
xor
mov
push
jns
rcrb
jae
adc
or
pop
mov
push
push
push
hlt
add
inc
jecxz
pop
xor
std
dec
cmp
push
or
sub
pop
mov
mov
flds
push
jo
pop
subl
push
fidivl
dec
pop
lods
ret
sbb
adc
and
les
stos
push
aas
sbb
adc
jns
imul
imul
or
jl
pop
mov
xor
inc
mov
imul
jnp
sub
pop
cmp
popw
push
gs
push
mov
pop
divl
push
inc
xchg
popa
and
pusha
rol
xlat
das
ljmp
jae
pushf
inc
or
mov
mov
dec
or
inc
xchg
mov
mov
dec
jb
xlat
subl
lahf
or
fs
sub
icebp
sbb
rcl
je
ja
mov
mov
push
mov
ja
fisubrl
mov
cmp
and
test
cmp
es
jp
adc
push
in
mov
sbb
adcb
and
cmpl
aam
sub
outsb
adc
jbe
ret
pop
test
mov
dec
pop
cwtl
cmpb
outsl
test
flds
xchg
and
lods
in
adcl
stos
aad
jns
add
aaa
xchg
inc
je
push
inc
inc
and
xlat
out
sti
xlat
or
rcll
movsl
popa
fs
xor
lods
sub
jno
push
pop
ficompl
loope
pop
push
or
rcl
mov
add
shlb
outsl
lods
jb
andl
sbb
mov
sbb
phsubd
jo
jnp
out
ret
pop
aaa
adc
xlat
mov
dec
and
iret
push
pusha
push
stc
pushf
push
jne
sub
or
lea
push
pusha
or
pop
gs
jae
xor
xchg
and
loope
popa
add
test
xchg
jnp
xor
ficompl
dec
add
sti
inc
mov
imul
repnz
scas
pop
outsb
push
outsl
add
and
add
add
rclb
js
movsl
sub
or
inc
rcl
cmp
mov
gs
jne
stos
int
inc
cmpsb
xchg
or
fdivl
arpl
sti
mov
popa
sub
fs
pop
adc
jo
adcl
mov
sbb
inc
out
loop
jmp
xlat
fiaddl
mov
or
and
jo
xchg
push
popa
sbb
cmpsl
push
outsb
adc
dec
shr
mov
mov
sbb
sub
push
fiadds
xchg
pop
and
inc
jns
cli
pop
cmp
idivl
xor
scas
mov
or
jb
and
test
inc
in
lods
lods
cmp
inc
and
arpl
sbb
pop
inc
imul
js
xor
fs
fidivl
mov
inc
insb
notl
jle
mov
ret
ljmp
push
mov
into
cmpsl
cmp
jae
xor
aad
test
nop
iret
mov
ja
jns
push
lds
inc
popa
add
mov
cwtl
add
scas
nop
sbb
mov
push
les
movsl
push
movsb
fincstp
and
push
push
xor
push
xchg
and
adc
or
inc
adcb
jnp
push
adc
inc
nop
ja
pop
fists
jnp
or
dec
pop
sub
outsb
dec
adc
adc
ss
sar
pop
imul
mov
mov
xor
xchg
movsb
dec
adc
lcall
push
xchg
cmpsb
cmp
push
addb
pop
loopne
sbb
inc
shl
sub
pushf
out
inc
jb
xor
cmp
and
dec
or
add
and
mov
and
push
or
out
stos
jg
addl
inc
jae
fcomp
fiaddl
inc
leave
inc
rcrl
cs
fisubl
imul
iret
push
repz
jo
sbb
and
test
insb
cmp
das
mov
dec
rclb
push
icebp
adc
ds
mov
mov
imul
mov
sbb
aad
add
push
mov
lret
push
mov
call
push
xor
mov
and
fcoml
adc
push
mov
adc
fstpl
adc
inc
or
hlt
or
or
mov
sub
cmovno
rorb
addb
jmp
fisubs
test
push
icebp
and
jb
lods
int3
and
cmpsb
fdivl
shll
adc
insb
jl
mov
push
push
pop
inc
mov
mov
xor
xlat
push
mov
mov
push
js
into
dec
mov
test
or
int3
adc
pop
sub
adc
ja
aaa
dec
sub
cwtl
addb
lods
sbb
or
mov
push
outsb
jo
add
push
push
fcompl
or
insl
insb
out
mov
xor
popw
in
testb
mov
inc
cmpsb
xchg
mov
stos
lods
pop
es
inc
and
pop
nop
sub
arpl
inc
lds
xor
sbb
inc
and
movsb
xchg
inc
push
in
inc
mov
nop
movsl
rcl
fcomi
cmp
xor
outsl
or
xchg
movsl
inc
sbbl
outsb
out
mov
sub
or
das
xor
icebp
push
pop
adc
pop
cwtl
sbb
cmp
xchg
pusha
and
cmpsl
fnstenv
cmp
scas
add
pop
inc
iret
or
pop
jns
roll
nop
shll
push
fs
pop
je
pop
cmp
jnp
push
xor
bound
cwtl
cmp
or
sbb
les
aam
out
cmp
xchg
xchg
cld
add
pop
pusha
inc
mov
inc
push
mov
rcll
enter
imul
push
push
inc
out
adc
jb
inc
mov
ljmp
inc
push
inc
jmp
pop
xchg
dec
push
sub
dec
dec
dec
jae
ret
add
pusha
mov
cmp
jne
data16
xchg
add
jmp
sub
negl
sbb
sbb
inc
fwait
jp
popf
loopne
cmpb
inc
mov
add
in
dec
ret
cs
loopne
or
daa
mov
mov
movsl
imul
aas
dec
add
add
pop
xor
rcl
lret
jnp
fwait
testb
push
cmp
stc
mov
out
mov
jae
loope
or
pusha
pop
dec
mov
insl
mov
push
push
push
mov
dec
pop
add
pop
cs
aam
add
adc
and
add
and
fiadds
stos
jb
popa
adc
push
shlb
out
inc
cs
adc
insl
xor
dec
sarb
mov
push
xlat
pusha
dec
mov
push
loope
mov
out
shl
add
add
inc
incl
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
insb
inc
add
add
