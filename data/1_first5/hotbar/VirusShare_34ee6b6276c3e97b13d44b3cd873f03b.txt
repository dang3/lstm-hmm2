fcomp
decl
shlb
lea
push
mov
or
sbb
ljmp
push
mov
push
or
call
test
jne
pop
pop
ret
push
push
aas
int
rcrl
mov
test
je
cmp
lods
add
cmp
jmp
pcmpeqd
cmp
jae
sub
movzwl
lea
jne
push
jb
pop
pop
xor
std
fwait
insb
and
neg
sbb
and
pop
xchg
add
inc
fdivr
fnstcw
push
push
test
rcr
test
jne
pop
ret
push
cmp
or
pop
sbb
add
les
and
insl
shr
adc
xor
push
mov
inc
add
ja
movl
push
add
test
jne
mov
scas
inc
push
push
push
in
xchg
int
push
mov
xor
push
lods
std
dec
mov
pop
je
xchg
inc
mov
pop
lock
and
pop
push
pop
ret
pop
adc
sbb
dec
shrl
incl
or
lock
dec
test
jg
cmp
adc
incb
testl
add
ljmp
mov
in
fstpl
mov
in
adc
push
mov
les
jae
cmpl
or
dec
push
out
pusha
push
mov
test
jle
mov
adc
mov
mov
pushf
push
xchg
pop
enter
push
and
push
stc
fsubrp
jge
adc
jno
and
push
add
sbb
push
fistps
sub
adc
lock
dec
add
lahf
loopne
loop
je
pop
jle
add
push
mov
jmp
dec
add
or
bswap
and
mov
jge
xor
inc
hlt
push
push
adc
push
shll
sbb
sub
push
lds
adc
je
pop
push
leave
or
push
dec
push
nop
leave
or
inc
lock
pusha
push
in
sub
mov
das
nop
mov
and
xchg
push
lods
idiv
jo
and
andl
sub
fs
cmc
aaa
adc
push
mov
and
mov
adc
imul
cs
cmp
cwtl
mov
pushf
dec
add
inc
test
jae
ss
push
fsubrp
or
clc
push
mov
sete
jnp
insb
push
into
mov
je
aam
fadd
in
inc
cmp
shll
lods
mov
jns,pn
js
push
cmpsl
push
or
ret
dec
enter
push
dec
test
push
sbbl
movb
sbb
jle
hlt
addb
push
jb
xor
fsubs
push
push
xor
inc
stc
xchg
fcompl
mov
sub
dec
push
mov
lea
pushf
sbb
push
or
mov
cmp
dec
sub
int3
push
dec
xor
les
cmp
or
in
insb
and
mov
xor
stc
or
test
nop
sub
stc
icebp
or
push
in
and
mov
nop
xchg
jmp
cs
push
lea
repnz
jae
clc
pop
jge
mov
xchg
pop
pop
repz
mov
ret
xor
mov
dec
dec
push
icebp
add
push
inc
push
insb
sbb
fsubl
push
add
pop
cmp
jns
push
ds
jl
jbe
add
inc
scas
push
movsb
cmp
ja
mov
mov
mov
sbb
lret
test
in
sti
loope
call
nop
dec
ds
or
mulb
mov
movsb
jne
sub
clc
jne
mov
push
lock
int3
cmp
jae
mov
mov
sbb
jg
mov
fsubr
adc
cmp
dec
or
adc
push
jne
insl
loopne
or
imul
dec
push
out
inc
jno
mov
pushf
hlt
call
mov
test
je
ret
sti
inc
add
inc
add
inc
repnz
adc
dec
push
ss
out
xchg
mov
lods
in
inc
bound
rol
jecxz
push
jecxz
leave
repz
hlt
push
and
jns
add
pop
cmp
insb
add
push
mov
or
sbb
mov
js
repnz
fldl
data16
hlt
mov
dec
aaa
filds
sbb
mov
dec
inc
jnp
jo
add
aam
popa
addb
incl
push
jbe
push
add
sub
negl
and
ss
aad
dec
pop
xor
lods
into
out
fdivrl
test
mov
pop
imul
inc
xchg
cmp
je
je
jae
sbb
or
dec
or
mov
add
mov
stos
add
dec
enter
lea
push
mov
cmp
pop
xlat
sbb
push
ja
push
jl
push
orb
sub
mov
fdivp
push
sbb
int3
mov
lock
sbb
adc
pusha
lahf
cltd
loope
push
popf
push
enter
sub
and
or
daa
ja
pop
mov
mov
ud1
sbb
sbb
insl
aad
popf
icebp
test
mov
xchg
cmp
popa
mov
je
mov
cmp
lock
add
add
pushf
mov
xchg
cmp
in
and
xor
adc
xchg
sub
je
push
pusha
sub
sete
test
dec
popl
into
test
inc
repnz
or
in
inc
or
add
sub
push
lods
pop
push
out
out
scas
das
cmp
adc
insb
xor
xor
repnz
push
xchg
dec
sub
cmp
ds
push
test
and
mov
divb
push
mov
or
adc
in
push
pop
gs
test
orb
adc
add
jmp
nop
dec
sahf
dec
sbb
adc
xor
repnz
aas
inc
sub
inc
jb
push
idivb
js
sahf
mov
in
inc
fdivl
leave
inc
add
pop
sub
cmp
add
call
push
mov
test
push
or
and
fwait
movaps
add
mov
dec
outsb
inc
xorl
ds
push
mov
xchg
cmpsl
add
pop
leavew
data16
aad
sbb
pop
test
pushf
add
sbb
std
imul
out
inc
test
fcoms
add
push
inc
mov
aaa
fisubl
mov
push
in
mov
sbb
mov
cmp
push
pop
cmp
icebp
icebp
sbb
push
aaa
dec
lods
jge
incl
jle
xor
pop
cmp
pop
cmp
adc
lcall
or
leave
mov
movb
lods
mov
add
outsb
ss
push
nop
xor
mov
imul
stos
into
mov
xor
pusha
mov
in
lahf
mov
shrb
adc
mov
cmp
mov
adc
pop
jno
xor
lds
mov
lea
add
loopne
stos
or
sti
imul
loopne
lea
data16
or
jae
test
sub
mov
test
cmpl
je
loop
or
push
dec
adc
das
rclb
mov
xor
jp
adc
call
cmp
in
add
fistpl
sti
lret
xor
adc
dec
popa
je
into
mov
add
cli
outsl
nop
mov
cmp
adc
loope
or
add
ja
popf
cmpsl
push
adc
das
mov
xorl
mov
adc
push
jecxz
add
adc
lahf
jmp
outsl
jmp
inc
mov
add
mov
dec
in
lods
pop
or
jmp
fstps
pop
xor
adc
jo
clc
inc
daa
lea
ret
jge
sbbb
scas
dec
aad
lret
mov
mov
and
or
mov
add
pusha
andl
es
and
mov
cli
xchg
sub
in
jg
push
bound
add
inc
cmc
lea
mov
fnstcw
clc
mov
mov
int3
in
add
mov
gs
xchg
adc
aad
out
pop
incl
test
sub
jb
inc
mov
cmp
mull
into
in
push
dec
lods
or
mov
cmp
add
sbb
inc
cmp
adc
cltd
iret
loopne
mov
mov
lods
incb
add
adc
outsb
hlt
jne
mov
xor
sub
test
sbb
and
adc
scas
aam
sbb
push
jg
mov
je
sub
cmp
je
xchg
andb
adc
adc
sub
pushf
xor
clc
mov
push
in
mov
cmp
xchg
clc
test
mov
push
sub
pop
or
mov
or
push
sti
int3
add
sbb
add
loopne
sub
mov
dec
pusha
or
jg
call
push
adc
call
inc
cmp
jl
add
incb
ret
outsb
lea
jne
jnp
sbb
push
js
nop
imul
jne
cmp
jbe
pushf
push
nop
ja
xor
enter
loope
int
imul
rolb
outsb
nop
adc
xchg
shlb
pop
add
cmpsb
pushl
movzwl
push
lods
mov
mov
es
int
out
mov
jl
sbb
jmp
sbb
test
jne
sub
mov
xchg
cmp
loope
mov
hlt
sbb
or
inc
mov
fistl
or
jne
lods
push
mov
stos
mov
pop
xchg
ret
jo
add
add
fbld
pop
mov
add
xor
mov
cwtl
or
pusha
or
mov
cmp
jl
xchg
xor
push
outsb
fldl
mov
sub
mov
push
or
imul
not
xchg
adc
popa
sbb
pop
adc
add
push
popa
pop
mov
pop
inc
or
inc
xor
sbb
push
mov
dec
sub
pop
hlt
mov
sub
push
jge
mov
push
mov
push
in
mov
movsl
sub
adc
cmp
jle
jb
cmp
sub
cmp
pop
pop
test
sub
mov
lea
sub
or
jge
mov
jmp
add
jmp
add
call
mov
jg
push
push
add
push
push
daa
pusha
jl
int
xchg
pop
inc
add
test
outsb
adc
cmpsb
sbb
add
lret
pop
push
or
mov
ret
out
je
cmpl
mov
push
sub
add
leave
in
inc
hlt
cmc
push
stos
add
pop
or
sub
push
leave
push
mov
ficomps
add
test
cmp
cli
rorl
jge
add
fsubs
or
mull
cmp
cmc
dec
dec
pusha
lods
jp
loopne
sub
push
xchg
jb
hlt
xor
in
mov
or
ja
inc
jnp
cmp
ja
push
push
sbb
pop
in
jmp
arpl
or
clc
push
cmp
mov
mov
fwait
mov
sub
xor
fcmovb
lahf
ss
jecxz
add
pop
les
push
mov
popf
or
outsb
inc
movsb
pop
int3
adc
push
jbe
or
fstpt
xor
cmp
adc
jb
roll
ror
aas
sbb
out
movb
into
mov
xor
jl
xor
jae
hlt
mov
push
push
loope
jle
push
pop
pop
or
js,pt
dec
adc
rcr
test
mov
movsl
loope
mov
mov
mov
sarl
add
jb
sbb
es
or
push
mov
mov
xor
cmp
je
cmpl
mov
and
or
push
push
jne
push
push
iret
pop
cld
call
dec
test
push
notl
int
add
lock
pop
pop
pushf
pop
sub
scas
and
inc
inc
in
in
sarb
inc
clc
outsb
mov
xchg
and
ret
loope
pop
repnz
sub
fdivs
cmp
adc
xor
shlb
adc
sbbl
filds
js
add
mov
push
pusha
add
outsl
add
pop
sbb
sub
and
inc
mov
mov
jb
dec
fsubs
xchg
test
and
xor
mov
jmp
fsubr
jle
pop
mov
pop
push
adc
movsl
test
dec
mov
hlt
jmp
inc
add
outsl
adc
or
add
push
or
add
adc
sub
xchg
sub
fsub
pop
pop
mov
or
push
int3
lock
jo
test
jl
mov
cmp
and
add
rcrb
add
mov
and
push
xchg
sti
push
adc
rcl
cmp
stos
and
add
ret
pop
mov
pop
jae
lahf
add
lock
jge
sbb
cli
cmp
shlb
clc
cltd
add
fbld
mov
or
adc
cmp
add
shll
inc
push
push
or
or
sbb
pop
lahf
sub
jge
pushl
pop
push
xor
add
test
or
jmp
mov
push
add
adc
fdivl
jmp
xlat
call
pop
pop
cmpsl
mov
lods
fstpl
pop
mov
sbb
fildl
sub
test
lret
test
addps
pusha
cmpb
pop
insb
in
mov
xor
mov
fsts
dec
dec
mov
sub
and
mov
push
or
push
sbb
push
or
inc
arpl
int3
adc
inc
adc
adc
setbe
loopne
int3
push
and
addb
cmp
jae
je
sbb
sbb
and
jae
xor
pusha
aam
negb
je
push
jbe
cmp
int3
in
fidivl
lods
dec
popa
mov
cmp
mov
pop
lea
fidivrs
pop
sbb
mov
or
sub
add
mov
sub
subl
leave
mov
jg
jb
lea
mov
inc
cmp
iret
push
shlb
fists
dec
iret
push
call
and
sub
adc
inc
add
xchg
in
ss
aas
or
add
sbb
or
pop
adc
sbbl
mov
push
mov
mov
jnp
outsb
mov
rol
pop
popa
lahf
adc
or
xchg
dec
lcall
sbb
and
leave
xchg
fs
and
or
pop
sbb
sbb
xor
mov
xchg
xchg
into
rclb
jecxz
jns
or
inc
pop
roll
das
and
pop
pop
test
stos
mov
hlt
mov
xchg
inc
cmp
decl
mov
or
push
clc
and
je
xchg
lock
push
femms
or
jne
mov
push
rcl
fisubrl
pop
mov
adc
scas
jb
fstpl
cld
mov
pop
testb
adc
aas
fists
cmp
in
cmpl
inc
pop
sbb
and
jle
lock
out
dec
or
mov
add
jmp
ret
pop
add
jne
test
clc
adc
sarb
rcr
jle
repz
repz
inc
jecxz
mov
insb
icebp
cmpb
jl
mov
ja
je
add
cmp
sub
jne
cmp
mov
dec
les
aas
insb
xchg
xor
in
cmp
mov
movb
jno
add
xchg
mov
inc
or
inc
and
mov
daa
jl
jg
jl
push
add
repnz
push
js
dec
in
aas
and
and
adc
inc
jle
mov
mov
xchg
xchg
sbb
fcomip
pop
push
mov
idivl
pop
dec
icebp
cmp
jo
mov
add
sbb
and
mov
push
mov
loop
push
out
xlat
and
std
mov
cmp
sti
test
sahf
in
out
daa
adc
add
mov
mov
insb
inc
fadds
adc
xchg
std
movsb
shlb
mov
popa
dec
sbb
inc
push
jl
test
cmp
out
movl
xchg
sub
xchg
mov
push
sbb
sbb
jb
mov
aaa
sub
mov
mov
adc
aaa
clc
fwait
push
or
pop
sub
cmp
repz
pop
ret
cmp
cmp
cmpsl
or
cmp
adc
mov
pop
mov
mov
or
and
cmp
mov
push
pusha
lea
aaa
lods
sub
add
and
popf
icebp
cmp
popf
in
or
clc
movb
sbbl
dec
loop
adc
cs
xchg
adc
add
jns
popf
mov
dec
aam
mov
dec
push
dec
mov
paddq
push
pop
push
push
push
add
push
lea
movsl
xor
dec
cmp
and
mov
push
fs
adc
pop
cmpsl
jmp
cld
jl
xorl
sbb
push
call
mov
sbb
xor
je
js
jle
add
cli
into
xlat
lahf
cmpb
mov
nop
xchg
aad
add
xchg
cmp
clc
leave
add
lock
push
or
push
push
jle
ficompl
stos
out
sub
add
pushf
fwait
test
push
pusha
mov
mov
mov
dec
xor
inc
lods
or
xor
dec
sub
rorl
jno
mov
mov
dec
movsl
call
dec
mov
aad
and
int
push
dec
mov
xchg
sbb
movsb
mov
cmp
call
in
out
inc
loopne
sbb
xchg
push
sub
nop
mov
mov
js
cmp
sbb
out
dec
xchg
xchg
sbbl
mov
daa
push
and
and
sbbl
js
jp
and
setne
push
and
pop
xchg
sub
xor
jecxz
lea
mov
in
inc
sbbl
push
push
push
push
jecxz
shrl
cmp
je
pop
popa
jg
lds
push
inc
xchg
mov
pop
jno
repnz
pushf
push
mov
sub
push
jle
sahf
mov
push
mov
lock
sbb
rol
clc
mov
cmpl
xor
adc
pop
and
test
divb
cmp
inc
mov
sub
popf
imul
rcll
lret
inc
fcoms
xchg
add
rcl
sub
pop
mov
inc
mov
insb
aas
out
pushl
dec
dec
mov
push
push
xor
push
push
lea
sbbb
xorb
sub
insb
sbb
rcrl
shll
mov
xor
sub
and
jmp
mov
add
sahf
inc
add
mov
ficoml
into
cmp
ja
xchg
sbb
fisttps
add
xor
inc
mov
push
sub
xchg
xchg
rol
push
push
and
push
adc
repz
push
xor
cmp
inc
pop
sbb
cmp
cmp
stos
fwait
sahf
sub
push
gs
cmp
inc
jo
or
or
mov
or
fistps
out
and
sti
cld
call
adc
sub
push
jg
scas
mov
add
mov
cmp
xor
add
or
inc
cmpsl
loope
shlb
xor
add
daa
cld
jecxz
add
movzbl
mov
mov
inc
or
adcb
cmp
lret
push
mov
jno
mov
cwtl
push
sahf
into
adc
lock
and
fiadds
sub
das
and
or
push
mov
inc
add
cwtl
add
jmp
lret
push
mov
push
push
push
and
jbe
push
inc
mov
aas
cs
jo
lret
push
mov
xor
xor
sbb
add
mov
push
xchg
pushf
mov
shlb
pop
xlat
loop
pop
call
xchg
aam
sarl
clc
add
inc
xor
jl
aad
arpl
inc
out
call
sub
cld
jb
call
lea
jmp
pop
or
movl
push
inc
scas
jbe
pop
stos
fldl
repz
rcrb
sbb
push
and
inc
cmp
xchg
xor
adc
and
loop
sub
jns
dec
es
pop
ftst
and
add
jmp
scas
xor
mov
mov
ret
aas
int3
add
push
xchg
stos
sbb
sub
inc
and
and
xor
push
mov
sahf
sub
or
pusha
and
sub
lea
or
push
pop
push
sub
fstpl
rol
out
xorb
outsl
jae
push
pop
repnz
push
inc
outsl
sub
jo
push
enter
or
and
sub
mov
push
xchg
pushf
and
je
add
sub
test
mov
or
xor
je
push
dec
lahf
ss
xchg
inc
push
push
sub
push
mov
js
inc
inc
lahf
ret
mov
push
xor
pop
push
pusha
movsl
jne
les
test
push
push
inc
jge
push
cmp
pop
sub
push
push
sbb
rorb
ret
clc
jl
or
dec
fs
pop
ljmp
and
cmp
or
jmp
je
jno
cmp
pusha
pop
inc
xchg
adcb
pop
add
inc
xchg
mov
cmp
add
dec
stos
popa
lcall
add
inc
push
test
mov
and
push
xor
push
and
and
inc
fisubs
jo
sbb
dec
jo
inc
add
push
xlat
ja
mov
mov
int
adc
sbbl
rorb
imul
xchg
inc
pusha
fmull
add
movsb
lock
dec
cmp
add
cltd
adc
mov
lahf
push
mov
mov
movsb
lock
adc
adc
popa
je
popa
mov
scas
add
sbb
push
popa
mov
repnz
dec
xchg
sub
gs
push
xlat
jecxz
loopne
aaa
adc
xor
test
aas
call
xchg
and
mov
out
fbld
push
push
pop
dec
push
add
push
mov
lret
movsb
dec
js
dec
in
movsb
pop
jl
mov
inc
lock
ss
xchg
or
mov
push
insl
cmpsl
push
movsb
in
pop
add
test
cmp
inc
xor
mov
inc
mov
cmpsb
pusha
push
adc
push
or
or
subl
mov
add
mov
cmp
lret
cmpsb
shrl
add
rcrl
andl
rorl
cmp
jge
lods
lock
push
sbb
sub
sub
push
pop
inc
movsb
mov
fs
insb
pop
int
dec
push
mov
fcomps
shrl
cmpsl
ret
bound
decl
push
loope
ret
xor
xchg
or
push
mov
and
inc
shrb
dec
sbb
push
ljmp
push
push
loope
je
ret
jo
lods
outsb
xor
add
cld
inc
sbb
cmp
data16
sbb
ja
jo
inc
inc
push
sbb
mov
adc
push
clc
ret
lea
dec
enter
dec
mov
adc
push
out
pop
inc
lods
pop
cltd
push
enter
add
popf
enter
pop
subb
inc
cs
sub
xchg
sub
les
sbb
xor
popa
or
mov
dec
add
cltd
and
sar
mov
addb
in
and
int
pop
adc
jl
push
int3
data16
div
enter
mov
mov
dec
bound
imul
roll
sti
cli
push
mov
shr
add
mov
imul
push
lret
fisttpll
sbb
jle
inc
cltd
imul
fisttps
imul
icebp
mov
jo
out
testl
add
das
xchg
xlat
mov
sub
sub
jo
add
cmp
je
cmpl
inc
jne
mov
cmp
jne
xor
jmp
dec
cwtl
xorb
dec
xor
fisubrl
jmp
mov
hlt
push
arpl
lea
or
mov
and
jne
pushf
inc
push
shlb
jecxz
jl
icebp
in
loope
sbb
lock
inc
lock
inc
je
insl
loop
and
test
sbb
sub
sub
or
out
cmpsl
inc
out
inc
inc
fstpl
push
int3
je
or
fisubrl
sahf
hlt
sbb
insb
adc
nop
es
int3
jl
mov
cltd
idivl
push
aaa
mov
ds
inc
push
idivl
sub
cmp
pop
scas
add
jl
insl
arpl
mov
push
jle
cmp
fisttpl
mov
adc
sbb
xchg
sbb
and
push
or
insb
add
popf
imul
imul
jno
jae
dec
sub
scas
cmc
jbe
jge
jmp
mov
pop
add
nopl
faddl
fmull
ds
fbstp
sub
xor
mov
fdivrp
shll
into
filds
xor
sbb
clc
mov
mov
mov
xchg
add
jns
inc
cmp
rol
sbb
jl
jmp
fbld
in
or
pop
mov
xchg
out
fidivl
mov
lods
add
out
testl
push
pop
movb
add
mov
mov
pop
jecxz
jge
sub
push
or
cli
enter
out
pop
shll
push
sbb
and
cmp
xchg
mov
or
call
sbb
adc
es
xchg
xchg
sbb
lock
ret
xor
xchg
and
aam
filds
insl
pop
mov
xor
addl
xchg
xchg
adc
jno
cmp
and
and
rolb
inc
test
sbb
add
xchg
sbb
xor
fsubp
and
xchg
mov
add
inc
push
pop
les
out
mov
jns
cmp
jmp
jecxz
bound
into
sbb
pop
add
ret
xchg
or
and
sbb
sbb
xor
or
sbb
xor
pop
clc
sahf
nop
inc
adc
or
and
cmp
jle
mov
add
push
loop
mov
pop
cmpb
or
push
rcll
test
stos
jmp
notb
xchg
test
mov
adc
add
push
inc
mov
mov
mov
iret
shrl
fstpl
inc
mov
push
xor
scas
subl
adc
pop
jbe
or
and
and
ss
pop
sbb
test
clc
cli
sub
sbb
adc
sub
pop
inc
sbb
jmp
loope
mov
sub
lea
dec
xchg
mov
jo
or
pop
sbb
cmp
cmovns
insl
jb
mov
mov
adc
and
xor
pop
aas
adc
push
repnz
and
cmp
pop
xor
mov
pop
ret
lahf
or
add
mov
scas
ss
push
fisttpll
pop
retw
and
dec
and
clc
jg
icebp
sub
sub
clc
setb
scas
push
mov
sub
cmp
push
jae
sub
xchg
rcrb
es
push
movl
int
jle
hlt
or
dec
xchg
ret
jno
pusha
pop
mov
dec
sub
cmp
aas
mov
push
sub
inc
outsb
mov
push
hlt
xor
push
aad
push
movsl
mov
es
pop
pop
jnp
xchg
rorl
cld
jecxz
add
cmpb
leave
push
add
or
fimull
push
xchg
adc
inc
sbb
sbb
sub
mov
adc
cwtl
sbb
inc
ss
push
dec
in
sbb
dec
push
push
loop
cmp
add
cmpsl
inc
pushf
lahf
enter
dec
mov
in
xchg
add
dec
imul
adc
push
movb
fwait
in
mov
pop
cmp
ja
movzbl
jbe
ss
or
push
mov
outsl
mov
stos
adc
jne
xchg
aaa
push
inc
dec
mov
add
add
adc
sub
adc
aas
xchg
sub
cmovbe
inc
in
sub
call
and
into
sub
pop
ret
aas
or
inc
jb
adc
rorb
push
nop
movsl
dec
lea
negl
movl
xchg
mov
pusha
sub
mov
mov
cmp
add
mov
xchg
rorb
nop
add
lea
aaa
in
adc
add
push
popf
notl
jo
push
roll
scas
ljmp
jle
aaa
rclb
sub
or
stos
fmuls
jp
cmp
xchg
rol
test
test
hlt
add
mov
lds
call
push
pop
mov
lods
push
add
lods
pusha
inc
sbb
lea
xor
sub
or
push
lahf
fmull
je
mov
sub
mov
sbb
dec
xchg
or
push
ja
popf
inc
mov
or
jmp
push
adc
gs
push
bnd
push
pop
or
leave
push
shll
mov
cltd
dec
add
test
mov
mov
mov
ret
jecxz
imul
sub
js
test
fstps
daa
xor
push
sbb
push
sub
mov
mov
in
outsl
sti
cld
jnp
out
mov
mov
sub
clc
sbb
and
cmp
iret
movsl
and
lds
push
pop
mov
push
stos
mov
aam
daa
lahf
setg
push
movsl
sub
inc
xchg
cli
dec
aaa
dec
sbbb
dec
pushf
dec
cmp
dec
mov
scas
sub
fwait
dec
push
fldt
or
shl
inc
int3
push
aaa
mov
xor
mov
iret
and
rcrb
sbb
and
dec
or
int3
xchg
cmp
xor
sub
or
aad
call
enter
ds
leave
pop
push
push
push
push
add
cli
js
cwtl
pop
mov
enter
xchg
cld
sbb
mov
push
out
inc
add
ljmp
or
or
dec
jb
add
inc
jae
jg
mov
jmp
xor
pop
in
cltd
lea
push
sbb
call
inc
sahf
adc
adc
out
sbb
aam
xlat
or
xchg
add
sbb
sub
test
aad
and
scas
mov
ret
add
ror
jb
or
mov
fstl
push
shlb
lods
push
or
mov
cltd
mov
aaa
js
push
add
cltd
or
mov
add
push
push
mov
push
sbb
jle
cmpb
mov
iret
in
or
es
sbb
jl
rorb
js
pop
movl
mov
test
mulb
xor
and
push
out
outsl
mov
mov
push
pusha
sub
push
enter
lods
push
nop
lods
push
lods
xor
adc
or
leave
mov
push
mov
pop
rol
push
lret
push
dec
sarl
xor
enter
and
setbe
add
inc
inc
sub
add
dec
hlt
rorb
adc
cmpl
xchg
sub
out
dec
fs
cmp
dec
adc
sub
sbb
sbb
sub
popf
push
lcall
mov
sbb
jo
pop
push
inc
sub
in
push
adc
sub
push
and
jge
fmul
pop
adc
pushf
mov
push
xchg
mov
jne
mov
insb
cli
push
push
xor
movsl
mov
ret
add
in
aas
adc
pushf
mov
lret
xor
inc
cmc
or
aad
xchg
push
stos
pop
je
jl
add
fwait
and
add
xchg
xchg
add
push
xchg
popf
ds
lahf
add
jl
jno
pop
xor
and
push
or
jmp
mov
rorb
pop
mov
xor
inc
and
adc
push
pop
sbb
sahf
xchg
subl
xchg
and
pop
mov
xor
popa
push
lret
and
sahf
and
mov
mov
push
jge
and
sub
out
push
add
mov
sub
dec
adc
push
popa
gs
sbb
pop
in
out
aaa
sbb
xor
or
inc
jne
mov
lds
fldenv
out
cmpsl
mov
mov
and
push
lret
arpl
aad
aaa
popf
push
sub
sbb
cld
ljmp
sub
test
ret
cmp
adc
adc
sbb
idiv
push
mov
out
mov
add
and
cmp
sbb
pop
cmp
push
cs
xor
jb
mov
xchg
into
ret
jge
sbb
adc
xchg
xlat
pop
push
pop
push
push
or
stos
xchg
and
cmp
js
mov
add
lcall
test
cmpsl
clc
std
sub
adc
ljmp
add
add
jle
je
or
add
pop
push
cmp
jle
or
sti
mov
mov
push
mov
sub
loope
mov
add
jb
cmp
adc
pop
xchg
das
mov
cmp
add
xchg
inc
sub
jne
inc
or
add
xchg
pop
mov
mov
xor
mov
inc
and
insl
push
pop
or
sub
stos
ret
bound
and
push
pop
push
mov
adc
popa
mov
in
cmp
scas
lds
xor
pop
cmp
and
orl
and
add
addb
mov
aas
dec
and
mov
and
test
and
push
aam
ret
adc
xor
lds
adc
add
or
das
leave
adc
rcrb
add
nop
adcl
adc
mov
push
mov
push
scas
mov
mov
xorl
popf
clc
rclb
adc
aam
rorl
inc
xor
inc
imul
sub
xchg
data16
add
cmp
or
or
sub
aam
lahf
xchg
add
pop
fdivrs
nop
and
dec
aad
loopne
add
mov
cs
pop
push
addb
pop
mov
push
enter
sub
or
push
and
sub
das
push
sub
push
or
xchg
sub
pop
xchg
stos
xor
cld
inc
or
or
cmp
xor
and
bound
sub
mov
push
sbb
xchg
das
or
pusha
jecxz
dec
mov
mov
adc
push
arpl
xor
out
xchg
and
and
sbb
shlb
add
not
je
in
or
inc
sahf
sub
inc
ret
inc
mov
xor
or
xor
mov
xor
inc
dec
inc
pop
add
enter
ss
imul
shrb
lea
pop
test
test
and
push
imul
fdivs
int3
and
insl
xchg
xor
jg
pushf
jmp
push
sbb
insl
stos
xchg
push
lods
pop
jge
je
or
cli
add
jne
movl
mov
push
and
cmp
or
cltd
dec
dec
and
sbbb
mov
cmp
xor
mov
cltd
cwtl
jecxz
and
mov
xchg
sbb
insb
mov
pop
add
iret
sub
and
popa
jo
lods
ja
out
sub
sub
or
in
pop
dec
mov
or
or
jge
inc
inc
movb
cmpl
cs
mov
fbld
adc
stos
out
and
mov
aam
movsb
ja
sbb
sbb
lret
in
push
cmp
cmpsl
outsb
cwtl
lahf
and
call
xchg
call
lds
add
or
call
cld
in
push
mov
xchg
mov
xchg
push
lods
outsl
aam
cmc
loop
xor
enter
mov
dec
mov
adc
pop
and
jecxz
or
and
jmp
mov
adc
pop
test
adc
add
das
inc
pop
or
push
or
orb
pop
lret
add
ljmpw
inc
inc
sbb
mov
cltd
fisubl
jo
xchg
addr16
into
cmpsb
adc
mov
jle
pop
test
mov
push
sbb
js
xchg
stos
pop
lahf
mov
scas
mov
xlat
pop
js
pop
lds
aam
dec
inc
xor
sbbb
gs
mov
repnz
xchg
adc
sub
sahf
nop
out
addl
push
mov
lea
pop
push
add
or
pop
xor
fldcw
test
add
jg
cmp
test
jmp
push
adc
out
or
lcall
stc
orb
inc
sub
iret
sahf
add
mov
imul
and
push
pop
jg
pop
push
mov
test
je
add
and
xchg
or
jecxz
ret
mov
jo
push
pop
adc
scas
jle
rcrl
dec
push
sbb
or
mov
add
icebp
int3
jo
repnz
data16
jl
popf
push
xchg
push
jns
lret
push
xchg
and
jl
adc
push
and
cltd
mov
add
imul
xchg
adc
inc
mov
les
addb
or
mov
lret
in
xlat
add
sahf
inc
cmpsl
js
test
adc
mov
add
or
ret
add
es
std
sti
and
out
push
cwtl
and
pop
inc
or
push
jns
cmp
mov
dec
and
xchg
test
pop
adc
cmpsb
nop
notl
in
cs
dec
adc
sbb
dec
pop
cltd
inc
cs
movsb
filds
nop
or
push
inc
lcall
inc
cs
popa
fistpll
xor
xchg
push
cmp
pop
aas
imul
enter
jno
add
mov
roll
push
adc
inc
dec
roll
inc
lods
dec
and
xor
sbbb
add
adc
adc
xchg
test
jns
mov
push
loop
jecxz
dec
rolb
imul
test
and
add
inc
ret
add
ret
test
xchg
sete
dec
sahf
sbb
adcb
xor
inc
je
pop
and
pop
sbbb
hlt
xchg
scas
mov
adc
fs
push
sbb
add
popa
loopne
and
les
cltd
and
cmp
ret
mov
shrb
sbb
sub
mov
jle
lea
push
mov
mov
dec
mov
hlt
dec
mov
les
and
mov
mov
les
ret
xor
fcomps
cmp
and
repnz
leave
test
sbb
cwtl
cmp
orl
mov
rol
fistl
jno
mov
test
dec
mov
test
into
sub
jbe
mov
jb
or
sub
mov
outsl
sbb
lods
sbb
inc
push
or
leave
inc
imul
hlt
movl
nop
cmp
add
das
mov
mov
inc
add
mov
hlt
xchg
fs
sub
push
sbb
xchg
mov
shrb
lock
lock
jo
mov
add
cltd
data16
push
push
push
pop
inc
push
lea
push
push
pop
sbb
push
lds
jmp
adc
add
ret
dec
mov
out
jbe
push
sub
or
push
add
xor
mov
add
xor
and
pop
ss
std
cmp
or
and
pusha
xchg
ror
insb
jl
les
bound
lds
loope
xchg
pusha
loopne
mov
cmp
xchg
xor
outsb
adc
add
mov
or
or
ret
xchg
pop
cltd
hlt
dec
xor
insb
mov
fdivs
and
push
or
push
and
push
lds
inc
stos
xor
mov
pop
xchg
repnz
add
dec
add
loop
lea
je
rcrb
dec
clc
aas
sub
test
sarl
iret
negl
dec
jns
add
clc
sub
rorb
jle
clc
jg
dec
and
mov
aaa
add
sbb
pop
jl
psubw
in
dec
ret
xorl
jne
push
imul
xor
outsb
cmpsl
jmp
push
imul
sbb
mov
divl
cmp
pop
jnp
mov
push
inc
ret
test
push
scas
imul
jge
push
sub
cmp
mov
adc
add
or
inc
out
adc
add
mov
sub
push
lea
jl
mov
jle
push
cmp
jl
mov
dec
out
push
adc
shlb
mov
pop
loope
push
mov
mov
mov
addr16
test
pop
pusha
inc
mov
jb
dec
xor
sbb
ret
sbb
stos
leave
inc
lret
jae
sub
add
int3
inc
dec
add
pop
and
inc
mov
adc
and
pop
or
adc
in
sbb
inc
xchg
push
dec
movsl
pop
pop
icebp
sbb
fldt
lock
testl
inc
push
mov
addb
iret
pusha
add
clc
shlb
or
or
lea
dec
sub
loopne
rcrb
test
adc
xor
add
cmp
mov
mov
or
loop
inc
in
test
push
jnp
imul
add
jl
adc
je
cmp
pop
sbb
pusha
and
mov
movsl
jo,pt
cli
mov
xchg
jo
out
adc
jecxz,pn
hlt
icebp
push
xchg
mov
jo
xor
incb
jle
mov
sahf
xor
push
pop
mov
mov
xor
push
test
push
add
sbb
mov
ror
inc
movl
mov
and
aad
mov
mov
add
pop
cmp
addb
xchg
add
pop
lahf
mov
je
popa
scas
push
xor
mov
cmpsb
mov
rol
and
aaa
pop
jno
push
out
dec
mov
jle
mov
add
add
int3
sarb
in
cld
sbb
imul
mov
shl
outsl
into
dec
jb
sbb
loopne
clc
and
cmp
cli
test
add
sub
ret
xchg
xchg
lds
add
neg
mov
sub
adc
jno
cmp
movsb
negb
test
nop
loop
js
js
inc
push
push
add
pop
xor
int
sbb
scas
push
add
out
imul
test
sub
push
mov
inc
add
jg
sbb
pop
aad
cmp
mov
aas
sub
or
adc
pop
xor
add
push
mov
in
ds
inc
leave
pop
push
loopne
negl
je
cmpsl
test
push
mov
roll
push
push
call
sub
dec
xchg
or
loope
int3
pop
xchg
inc
xor
mov
fdivs
js
mov
xor
push
mov
cmp
je
mov
ljmp
sub
aad
mov
pop
hlt
data16
je
sti
verw
sbb
push
push
jo
sub
jmp
mov
pop
push
test
orl
push
ret
add
push
jg
insl
adc
jo
mov
mov
adc
sbb
add
jmp
sbb
add
sbb
xchg
add
lea
xor
push
jb
xor
push
movsb
mov
jb
xchg
sub
add
push
add
lods
xor
jge
xchg
shll
inc
inc
into
and
inc
push
adc
fs
push
repz
push
daa
mov
aaa
in
lock
add
mov
lahf
nop
inc
and
push
jbe
push
push
mov
cmpsl
inc
popl
jg
cmpsb
push
mov
inc
js
xchg
mov
and
aam
xor
add
adc
aam
leave
pop
push
dec
add
clc
mov
add
push
cmp
and
push
add
dec
sub
xor
or
push
push
mov
push
jnp
movsl
xchg
mov
rcl
and
notb
pop
or
cmp
dec
sbb
adc
mov
popa
sbb
ret
outsb
cmp
xchg
dec
pop
mov
or
adc
cs
jnp
add
cwtl
or
pop
gs
mov
setge
xorb
sub
mov
xor
or
xor
imul
jne
push
mov
rcrl
xchg
movl
psraw
or
sbb
lldt
mov
imul
dec
mov
testb
stc
add
and
and
mov
cmp
xor
dec
leave
push
push
scas
enter
xchg
sub
sub
mov
jnp
int
shrl
popa
add
add
and
call
xchg
pusha
lds
lock
dec
repnz
leave
dec
repnz
cltd
add
icebp
mov
push
int
xchg
dec
fidivs
and
sbb
xor
push
mov
jl
or
nop
into
mov
inc
es
inc
push
test
imul
pop
shlb
inc
inc
adc
orl
push
loop
pop
mov
in
insb
scas
or
add
add
inc
lds
outsl
or
in
imul
push
mov
mov
cli
mov
jle
adc
mov
dec
movsl
adc
aas
rcrl
inc
movsl
fldl
into
cmp
mov
mov
adc
outsb
fistl
mov
add
add
mov
mov
xor
mov
dec
popa
mov
jecxz
test
out
pop
fdivr
pop
push
shrb
push
dec
or
dec
inc
lahf
xchg
loope
es
add
je
push
lock
addb
mov
ret
aad
mov
adc
dec
sub
or
sub
jne,pt
iret
sbb
cmp
xor
add
cmp
sahf
or
inc
add
cmc
fistps
out
rcll
ss
ja
jo
iret
das
lock
imul
mov
call
cmp
mov
mov
out
lods
mov
sub
das
cmp
clc
das
loopne
mov
mov
icebp
enter
mov
lea
mov
cmp
jle,pn
vxorps
lea
ret
adc
mov
aad
push
push
xchg
xorb
cmp
mov
jg
in
sub
clc
mov
cmp
jne
mov
ret
std
stc
fimull
cmp
lahf
jle
jl
scas
sub
test
adc
jmp
push
leave
add
pop
loop
lods
nop
cmp
int
mov
xchg
sbb
dec
nop
and
or
sbb
movsl
jne
add
mov
push
mov
jl
pusha
xchg
test
or
mov
mov
sbb
dec
dec
sahf
jne
call
test
push
inc
iret
mov
add
lcall
xor
jle
mov
jg
pop
aad
pushf
hlt
call
adc
sahf
adc
clc
sbb
lea
add
cmp
scas
mov
cli
mov
addr16
jle
add
cmp
std
test
and
add
cmp
xchg
push
push
into
pop
hlt
pop
mov
mov
dec
hlt
jge
adc
sub
ret
fcoms
shrb
jnp
add
push
das
mov
mov
cltd
mov
es
je
adc
repnz
loopne
loop
push
es
or
or
fsubrs
jl
mov
cmp
jg
push
add
push
dec
add
push
push
push
jno
adc
fcmovnu
push
bound
or
add
inc
pop
out
adc
push
pop
hlt
pusha
xchg
push
jmp
jae
ret
bswap
sahf
test
fs
dec
pop
sub
sub
push
les
fld
push
jnp
and
ljmp
jae
lods
xor
push
outsl
xchg
mov
inc
adc
push
lcall
arpl
sub
push
jo
adc
add
jle
dec
loope
sarb
adc
je
inc
popf
sub
push
xchg
inc
and
jb
mov
add
fiaddl
xchg
push
adc
add
push
push
mov
pop
cmp
mov
and
fists
push
inc
jle
lahf
mov
add
or
clc
jmp
push
addb
xchg
adc
push
and
ja
pushf
or
pop
repnz
loopne
cmp
je
jns
jno
inc
enter
pop
pop
adcl
bound
or
or
dec
pusha
xchg
mov
in
cmp
jl
mov
insb
lea
cmp
pop
imul
sarb
pusha
sub
cmp
jle
lcall
add
inc
xlat
pop
sub
shll
jo
dec
sub
fcomp
cmc
inc
sub
fstl
lea
shlb
dec
xor
pop
cmp
pop
xchg
lret
sbb
add
push
push
loope
xchg
mov
into
mov
push
add
and
push
pop
call
pushf
push
cmp
in
sarl
push
orb
cltd
adc
sbb
and
movsb
inc
aas
inc
andb
pop
add
add
push
jo
or
add
inc
or
jb
push
inc
or
adc
mov
cmc
adc
inc
repz
cld
or
jae
js
add
jo
jl
xor
rolb
test
out
add
pop
mov
cld
mov
sar
pop
mov
mov
push
mov
or
dec
lret
pop
jmp
fs
pusha
push
in
xor
inc
cmp
lock
xor
push
out
lods
xchg
and
data16
and
jl
decl
xchg
dec
add
or
sbb
lods
and
xchg
push
xchg
adcb
dec
jne
lahf
in
add
inc
pop
out
xchg
jmp
xchg
cli
adc
push
push
push
js
mov
xchg
test
in
mov
push
cmp
mov
fidivs
sbbb
push
fbstp
and
leave
leave
and
mov
pop
jmp
fwait
lcall
xor
jp
icebp
out
lahf
xchg
lods
call
mov
push
jge
fcompl
cs
sub
jecxz
xor
lock
fcmovnu
add
inc
mov
add
shll
jecxz
loopne
mov
xchg
push
mov
push
pushf
or
sbb
cmp
adc
pop
filds
test
inc
xor
xchg
fidivrs
sbb
or
add
mov
repz
rcll
int
add
xchg
aas
mov
xchg
adc
and
sbb
rorl
mov
push
jb
add
sbb
pop
xchg
push
dec
push
je
fsub
addr16
je
or
rcrb
jl
add
sub
dec
ret
xor
pop
rorb
adc
add
push
mov
adc
or
and
ja
nop
and
arpl
les
mov
movsl
xor
push
sbb
jae
stc
sub
mov
push
jns
adc
mov
inc
icebp
or
push
es
xor
xor
sbb
cld
repnz
popf
mov
repnz
jnp
push
xchg
adc
inc
fimull
adc
adc
cmp
sub
inc
jecxz
sub
xor
movsl
adc
sub
and
dec
pop
mov
push
pop
shrl
add
mov
add
imul
mov
cmpsl
and
daa
test
arpl
dec
test
mov
stc
inc
inc
xor
and
dec
sub
cmp
adc
pop
pop
mov
xor
jmp
cmp
pushl
mov
mov
mov
ret
or
ja
pop
inc
scas
xchg
push
mov
mov
or
lds
add
adc
dec
dec
ds
hlt
and
es
cmp
cs
xchg
fists
ret
sub
ja
movsb
pop
inc
push
push
cmp
sub
movsb
ret
or
sti
mov
adc
sub
loope
insl
push
push
sbb
repnz
js
movsb
pop
fcoml
sub
lock
xchg
xor
pop
dec
sbb
xor
fcomip
loop
lret
push
push
sub
add
mov
jnp
sbb
add
jns
ret
push
adc
add
or
pop
mov
pop
nop
or
lds
ds
mov
or
fimuls
add
lods
sbb
in
push
push
es
xor
push
ficomps
repnz
leave
sbbb
mov
mov
or
cmpsb
xchg
ja
andl
stos
addl
shlb
push
aam
mov
or
lret
andb
test
jl
inc
and
add
sub
mov
jmp
lcall
lock
scas
and
dec
sub
jnp
ficoml
and
mov
into
les
mov
mov
cwtl
addr16
mov
fadds
fdivrl
xor
sbb
sbb
test
push
add
inc
mov
sub
mov
or
mov
outsl
pop
gs
push
or
pushf
inc
lea
fstps
adcb
add
test
mov
add
sub
xor
stos
xchg
jno
add
xor
push
cmp
adc
es
xor
in
xor
stos
nop
pop
sub
cmp
cld
inc
adc
pushf
js
imul
pop
push
insb
cmp
or
das
sbb
xchg
int3
roll
adc
cmpsl
loope,pn
push
xchg
or
je
js
mov
and
adc
clc
test
vunpcklps
dec
and
mov
inc
xchg
and
add
sbb
add
push
and
or
cmp
xchg
mov
fstl
push
push
pop
sub
jge
sub
fwait
add
cmp
adc
sbb
push
add
loopne
mov
clc
or
inc
aas
shrb
or
fldenv
push
ficoms
adc
cmp
xor
pop
and
add
lock
xchg
push
cwtl
add
sarb
shlb
and
fdivr
mov
dec
stos
pop
shrl
enter
cmpb
cmpl
mov
mov
add
adcl
mov
addb
loope
shlb
test
push
pop
sub
lcall
adc
push
ja
icebp
mov
int
mov
xchg
or
std
push
push
mov
inc
sbb
adc
add
xor
fldcw
xlat
sub
fldl
scas
cwtl
or
pop
sbb
cltd
add
adcl
adc
add
jmp
add
test
add
imul
subl
bnd
pop
clc
cmp
xor
xchg
or
and
ss
js
push
push
push
and
aam
lock
ret
add
adc
mov
movsb
or
lret
inc
mov
sbb
test
rcll
int
cmpsb
jo
lea
add
rcr
shrl
fsubs
inc
out
incb
out
jg
push
cmp
clc
jb
pop
pop
clc
jg
xorb
pushf
imulb
xor
xchg
lea
push
push
inc
sub
rolb
push
mov
pop
xchg
lea
cmp
adc
push
and
ljmp
inc
rcrl
sti
sub
imul
add
jnp
pushf
fs
call
clc
fwait
or
mov
sub
sbb
or
sub
lock
mov
xor
lea
pop
out
and
and
pushf
outsb
adc
pop
pop
mov
pop
lahf
jle
cs
imulb
imull
push
mov
pop
add
pop
push
dec
movsb
dec
and
popa
repz
push
push
push
push
dec
and
sahf
mov
sub
push
add
notl
call
push
add
loopne
je
dec
mov
out
lock
and
and
jecxz
andb
or
xor
add
ret
mov
adc
nop
pushf
or
dec
pop
jnp
mov
push
jge
out
fbstp
dec
mov
mov
jg
rorl
ret
lock
inc
je
push
pop
push
sub
loopne
andb
add
push
mov
or
xlat
mov
pop
ffreep
pop
jp
in
cltd
push
faddl
fs
pop
incl
fcoml
xlat
sub
out
push
or
adc
loopne,pt
lock
xchg
fs
mov
xor
xor
shl
push
lods
xchg
push
mov
add
jno
out
add
pop
dec
add
jne
add
popa
push
push
ret
lea
cmp
add
out
inc
add
movl
or
mov
gs
andb
mov
pop
sbb
divb
mov
es
lods
jae
inc
loope
test
push
cmp
push
mov
pop
imul
and
inc
add
xor
stos
insl
inc
aad
sbb
add
push
lods
sarl
mov
jge
xor
test
adc
pop
das
add
sub
inc
ss
into
mov
addl
push
pushf
pop
xchg
sbb
cld
dec
add
shll
dec
cmpb
xor
iret
int3
sbbb
inc
push
xor
sbb
aas
inc
clc
cmp
call
push
nop
fadds
cmpsb
push
mov
push
rorl
popf
sub
push
push
mov
sbb
push
add
test
pop
inc
stos
xor
sbb
add
inc
cld
sahf
ja
in
xor
negb
dec
inc
es
inc
sbb
add
dec
and
cmp
scas
lea
add
fnsave
push
xor
push
lods
sub
push
mov
add
cmpsb
and
xchg
cli
ret
or
or
rclb
mov
leave
mov
lahf
mov
inc
add
rol
enter
add
fwait
mov
lock
push
pop
sub
push
push
rcll
push
dec
cmp
dec
bound
jle
arpl
clc
xlat
or
bound
sbb
testl
fisttps
jle
shrl
mov
add
or
mov
xor
push
dec
inc
faddl
inc
js
xor
xor
push
sbb
mov
imul
adc
or
int3
adc
js
in
and
xor
cmp
fadds
ret
pop
mov
mov
pusha
jle
sbb
dec
lock
leave
ret
inc
dec
subl
lock
adc
jmp
mov
ss
lcall
in
loope
stos
or
push
rol
jle
stos
mov
pop
fsts
inc
inc
jnp
cmp
jae
adc
sbb
sahf
test
push
std
fisttpl
sub
fcompl
inc
je
ss
mov
jl
xchg
xor
cmp
jl
jae
and
iret
add
in
sub
bnd
pop
cmp
sub
mov
xchg
scas
xor
sub
push
test
test
inc
add
inc
or
and
and
jge
cmp
dec
imul
rorl
cld
and
js
pop
or
js
mov
ret
or
divb
decl
lea
jne
push
push
push
mov
aam
push
dec
adc
add
mov
mov
fcoms
js
and
test
xchg
vmread
xchg
pusha
in
mov
les
xchg
add
pop
in
or
sub
call
mov
xlat
testl
or
imul
adc
rcrb
sub
fdivr
test
aas
xor
leave
mov
xchg
adc
cltd
loop
pushf
xchg
cmp
jbe
add
cmp
mov
adc
cmp
sbbl
shlb
or
lea
xor
push
add
adc
dec
mov
push
fcomps
imul
hlt
jl
int
movsb
mov
enter
cwtl
pop
fcomps
or
mov
mov
int3
jno
call
arpl
push
stos
je
daa
test
push
xor
dec
aaa
or
jecxz
ja
sub
in
mov
insl
or
loope
mov
movl
or
sub
or
dec
push
dec
dec
or
lods
shl
add
xchg
ret
data16
adc
inc
les
cld
mov
je
jg
inc
js
stos
pop
js
fldcw
adcl
and
test
sub
repz
inc
sbb
add
divl
mov
loope
push
es
mov
mov
notb
cli
mov
jp
sbb
pop
mov
cmp
fwait
xor
xor
inc
loopne
sub
cmp
call
mulb
jne
jp
sbb
adc
push
test
push
adc
cld
push
add
mov
fucomi
int3
mov
push
push
fbld
add
or
fcmovu
push
xchg
jl
movsb
cmp
mov
mov
lods
add
lods
out
daa
jmp
fcomps
push
mov
mov
imul
mov
mov
push
jge
dec
enter
push
idiv
mov
cmp
jne
call
mov
push
dec
or
fdivs
in
dec
add
add
dec
mov
xchg
addb
add
cmp
ljmp
lcall
rorb
stc
dec
mov
icebp
in
sbb
daa
xchg
and
in
pusha
xor
in
jo
lds
mov
sbb
nop
in
shlb
inc
dec
mov
ret
in
fwait
mov
pop
add
lock
add
xor
insb
push
dec
stc
jo
mov
xchg
jb
in
mov
sub
push
nop
sub
rcrl
add
pusha
mov
mov
sbb
rclb
mov
movsl
rolb
je
pop
movsl
cwtl
dec
loope
mov
push
or
mov
pop
dec
or
and
or
add
into
pop
inc
icebp
sbb
dec
push
mov
lds
mov
add
xor
call
loopne
in
xor
adc
stos
pop
add
xchg
test
shr
cmpsb
stc
or
sub
or
adc
pop
clc
mov
mov
bound
push
insb
mov
les
leave
inc
ret
push
inc
cmc
push
or
jne
pop
insl
xchg
shl
or
cmp
decb
push
sub
shll
fdivl
jl
sbb
xchg
mov
leave
and
lods
jne
xor
or
test
pusha
repz
xchg
xchg
and
scas
in
adc
sub
mov
xor
sbb
mov
mov
inc
fdivs
cmpsl
insl
cmp
push
loopne
mov
or
cs
cmp
xchg
in
and
inc
xchg
mov
movsl
push
push
loope
jb
test
xchg
sbb
imul
sub
popf
nop
adc
lahf
jb
adc
push
or
cmpsb
aam
fiaddl
adc
mov
dec
hlt
nop
inc
jle
add
adc
cmpb
nop
sub
inc
add
xor
mov
andb
cmp
int
push
mov
pop
loopne
sbb
and
mov
dec
std
ret
popa
mov
repnz
aaa
mov
xor
mov
push
andl
adc
cmpl
insb
push
push
and
add
mov
shrl
bound
pop
push
mov
dec
adc
push
ss
inc
ret
push
inc
sbb
lret
sbb
lock
sub
and
dec
outsl
aaa
dec
rcrb
push
dec
mov
xchg
jge
push
add
mov
add
add
jge
jle
imul
cmp
cmp
cmp
xor
mov
mov
mov
outsl
mov
mov
sahf
pop
fdivrs
mov
hlt
push
sbb
cmp
push
popf
mov
lret
mov
subb
sbb
jo
jns
or
inc
sub
call
adc
insb
imul
adc
cld
lea
cmp
or
push
push
mov
aam
dec
xor
fs
cwtl
mov
jae
pop
imul
pop
out
mov
dec
push
cmc
insb
cmp
mov
rorl
iret
xor
sbb
sti
xchg
sbb
icebp
add
and
mov
cmpl
test
in
mov
das
mov
mov
roll
add
pop
cmpsb
pop
sbb
xorb
dec
pop
jo
push
and
sub
lcall
scas
xor
adc
addl
and
xor
inc
jb
hlt
push
and
xor
cmc
sub
pop
dec
xor
test
dec
push
daa
mov
push
jle
insb
fldt
jmp
lahf
inc
nop
sub
xchg
mov
and
bound
xchg
add
sub
pop
and
ret
sub
sub
lahf
sbb
aad
push
jge
push
mov
push
add
dec
push
cs
idivl
xchg
jmp
outsb
sbb
loopne
filds
ljmp
insb
xor
je
rcrb
jecxz
sbb
jne
mov
test
pop
push
xchg
cmp
cwtl
adc
inc
aaa
or
pop
ljmp
pop
jge,pn
enter
inc
das
js
xchg
or
adc
sub
imul
in
xor
xor
insl
fnsave
jl
sub
js
leave
stos
inc
sub
push
sbb
xchg
xor
ss
stos
outsl
ds
sbb
or
cs
or
mov
insb
push
push
mov
push
sbb
dec
add
or
push
push
add
mov
inc
adc
and
xor
mov
add
icebp
mov
pop
clc
das
fdivrs
push
push
cltd
mov
push
push
push
xor
sbb
jo
adc
pop
mov
mov
shlb
sbb
mov
jmp
shrb
dec
jo
sbb
add
cltd
mov
xchg
cli
pop
push
cmp
push
mov
add
mov
lret
xchg
sbb
add
call
icebp
sub
pop
push
adc
fsubl
add
outsb
sbb
lret
outsl
xchg
sub
and
ja
cwtl
push
dec
or
mov
push
mov
rcrl
dec
clc
and
mov
and
add
push
scas
fdivrl
pop
shl
andb
xor
or
inc
mov
cs
movntps
scas
or
xor
push
push
cmpsb
xor
push
dec
adc
jecxz
push
and
pop
pop
stos
mov
xchg
vfrczpd
lret
sub
rolb
in
push
push
mov
fmuls
push
inc
scas
adc
arpl
xor
cmp
decl
pusha
movsl
fadds
scas
sbb
xchg
and
or
cmpl
or
je
mov
push
push
aaa
call
mov
repnz
push
test
mov
inc
outsb
xchg
lds
mov
push
jo
insb
mov
ds
test
fbld
jo
lcall
push
push
and
inc
inc
jl
inc
test
mov
or
jnp
test
mov
cwtl
insb
scas
movsl
sub
rolb
loope
jo
mov
pop
mov
jp
in
cltd
in
les
xor
pop
in
inc
xor
dec
add
inc
add
mov
orb
and
loope
test
mov
add
fildll
lods
outsl
loopne
clc
lret
xchg
jae
cs
push
fsubs
adc
out
xchg
dec
cmp
sub
mov
dec
pushf
pop
push
divl
sbb
jnp
jns
popa
adc
or
push
add
mov
mov
push
ss
rorb
pop
pop
add
test
sub
add
lods
dec
pop
push
mov
lret
xor
iret
cmp
dec
adc
or
mov
andl
pop
and
sbb
or
sub
cld
xor
das
and
jp
in
mov
mov
sbb
fnsave
or
mov
pop
insb
sbb
push
inc
xchg
pop
sbb
test
xchg
push
ss
movsb
push
fs
or
mov
and
sbb
dec
ds
push
sbb
test
cmp
aas
nop
push
and
inc
add
outsl
push
jne
pop
stos
xchg
jp
jge
add
fistpll
jae
push
xor
sub
js
dec
and
cmpsl
lahf
insb
xor
push
xchg
pop
sbb
mov
push
push
jmp
mov
sub
push
xchg
sbb
or
jns
divps
sbb
or
clc
pusha
pusha
nop
std
mov
xchg
jne
ret
mov
push
pop
add
add
sbb
pop
dec
adc
gs
sub
jb
imul
sbb
mov
sbbb
jae
andl
adc
out
sub
xchg
loopne
pop
sbb
in
jg
popf
rcrl
lods
push
add
push
xchg
jno
dec
push
js
push
mov
sbb
pop
loopne
rcll
inc
leave
shll
push
int
jge
xchg
roll
dec
inc
stc
popa
push
or
cmp
enter
js
xchg
push
hlt
les
dec
lock
les
add
push
ficompl
mov
add
pop
loope
test
sbb
je
idivb
push
insb
mov
push
add
add
movsl
pop
leave
jnp
xchg
xchg
pop
repz
orl
or
adc
lock
ret
in
pop
leave
mov
testl
testb
add
pop
lcall
jl
test
or
sarb
inc
mov
fnstcw
xlat
jmp
lea
push
push
mov
arpl
or
jo
insb
or
xchg
cmpb
je
faddl
and
call
ljmp
sbbl
jmp
xchg
pop
fldl
pop
adc
int
mov
mov
mov
dec
movsl
mov
popa
xor
das
adc
mov
add
add
push
cmp
mov
cmp
sub
xchg
mov
sbb
arpl
scas
xlat
push
or
je
pop
sbb
push
push
lock
enter
fwait
sbb
in
push
ret
add
or
in
lahf
jl
ret
test
ret
or
jns
lea
inc
xor
sub
push
adc
pushf
mov
ljmp
subl
dec
iret
sbb
and
mov
and
adc
dec
dec
cs
or
sub
xchg
pop
stos
xchg
xor
jp
dec
mov
lods
push
popa
imul
xchg
mov
hlt
leave
je
adc
sbb
cmp
adc
orl
leave
inc
imul
adc
add
insl
and
xor
push
popl
xlat
jnp
and
push
push
sub
xor
cmp
jbe
adc
cmp
pop
inc
adc
jp
sbb
or
xchg
ds
sbb
push
push
lds
sbb
lea
xor
cmp
insl
ret
adc
cmpsl
int3
clc
push
xor
stos
push
jmp
lret
shr
movzbl
outsl
fildl
adc
push
push
rcll
push
inc
jb
sbb
pop
fidivl
dec
insb
movsb
cwtl
push
fucomip
mov
aas
add
outsl
and
and
mov
xor
pusha
sbb
add
dec
sbb
adc
cmp
movb
cmpl
push
icebp
sub
push
pop
es
or
push
lahf
xchg
test
mov
pop
push
push
xor
dec
fwait
mov
xor
stc
mov
outsb
xlat
fs
and
push
sbb
mov
add
in
sbb
jb
pop
dec
jmp
jns
gs
mov
pop
xor
and
mov
movsb
xchg
sbb
and
cmpsl
inc
push
push
leave
daa
lods
and
sub
scas
sahf
jno
xor
inc
dec
or
sbb
mov
adc
mov
push
filds
push
push
cmp
mov
sbb
aaa
test
mov
movsl
sbb
or
xchg
mov
ds
pop
pop
add
inc
xor
xchg
jb
push
lds
daa
dec
lods
lods
rcl
push
ja
cltd
cmp
add
adc
lahf
dec
mov
push
fs
divb
add
push
xor
mov
and
jne
push
js
rcrl
lods
and
addr16
es
dec
ljmp
es
xor
pop
cmp
ret
filds
data16
mov
lea
je
pushf
je
mov
mov
inc
add
bound
inc
aaa
mov
test
sub
jg
push
fcmovb
cmp
adc
enter
adc
ret
cmp
inc
dec
aas
push
cmpsb
dec
jl
arpl
push
stc
sub
inc
cmp
and
mov
xor
inc
cmp
js
and
aaa
call
push
sub
rcr
lock
out
add
or
sub
fsubrl
loopne
add
fbstp
mov
jecxz
rorl
cmpl
test
jle
popf
incb
sub
cmpsb
cmp
into
mov
cli
jno
mov
jl
clc
xchg
daa
mov
inc
or
repz
push
add
ret
mov
popa
mov
fadds
push
sbb
jp
es
cs
push
add
xchg
mov
lock
dec
hlt
sub
pop
and
arpl
adc
adcb
jge
cltd
inc
push
ljmp
sub
lea
push
lea
push
inc
push
addl
leave
andl
fnstsw
dec
and
adc
cmp
mov
xor
iret
cltd
and
xor
in
inc
sub
ret
mov
scas
fcoml
inc
xchg
aam
cmp
mov
mov
add
jns
scas
jne
shlb
mov
push
adc
and
adc
mov
in
shrb
push
aaa
or
in
and
fs
sub
cld
test
cmc
call
and
or
dec
test
mov
xor
and
loope
btr
push
mov
jmp
add
or
push
orb
mov
mov
add
xor
cwtl
cmpsl
mov
lods
stos
add
push
xchg
xor
cltd
js
dec
hlt
pusha
dec
hlt
mov
push
or
jg
cmpb
les
shll
add
imul
inc
sbb
sub
push
hlt
pop
shrl
push
sbb
add
sub
cmpsb
inc
enter
or
cmpsl
xor
sbb
rcrl
pop
pop
inc
push
leave
mov
aaa
adc
adc
pop
aaa
xor
ret
pushf
popf
mov
pop
push
cs
adc
mov
and
loopne
lret
mov
je
js
add
popf
hlt
mov
js
lods
sbb
movsl
movb
adc
or
pop
xchg
pop
adc
inc
or
sahf
outsb
les
mov
dec
inc
add
test
mov
xor
xor
scas
cs
xor
loopne
jmp
pusha
test
stc
mov
pop
test
out
inc
cli
push
lea
cwtl
out
sub
in
iret
pop
fdivs
insb
pop
dec
xor
mov
jbe
or
inc
enter
or
iret
mov
test
mov
outsb
push
out
addl
xlat
cmpb
test
add
and
xor
movsl
xor
and
sbb
sbb
fs
sahf
add
into
add
lods
cmp
jbe
fldcw
test
arpl
stos
mov
push
mov
pop
inc
xchg
mov
pop
aaa
ss
jne
push
fs
cs
adc
js
pop
leave
mov
and
es
icebp
xchg
cmp
push
xor
mov
push
adc
and
push
test
adc
push
inc
or
push
cs
adc
adc
sub
leave
and
iret
sub
in
adc
adc
in
mov
orb
test
cmp
mov
sub
sahf
es
and
xor
lret
push
dec
push
sbbb
es
add
dec
inc
and
push
rolb
or
cmp
mov
adc
mov
or
xchg
ja
clc
aaa
lds
jecxz
das
jne
cmpl
add
dec
aaa
rclb
icebp
or
loope
pop
jmp
movsb
rorl
xor
es
push
stos
mov
or
nop
or
inc
cli
adc
inc
lock
out
jb
mov
jo
push
scas
pop
test
sub
cmpsl
jmp
mov
sbb
or
mov
sbb
and
stc
xor
adc
or
push
and
add
popf
subl
scas
dec
pop
adc
mov
movsb
sbb
dec
and
sbb
add
inc
test
orl
xchg
push
push
pop
inc
fadds
mov
inc
mov
sbb
inc
add
push
call
in
fs
mov
aam
call
fistl
clc
sub
ds
adc
pop
xchg
push
and
push
lea
jge
data16
mov
jns
ficomps
mov
sbb
push
pop
jmp
xchg
mov
popa
shl
shrb
cltd
fldlg2
xchg
adc
sub
mov
adc
mov
jae
mov
or
and
and
and
xchg
sbb
mov
sbb
pop
js
fisubrs
ficoms
js
test
xor
mov
sub
cmp
push
add
sbb
cmpl
and
rclb
xchg
push
adc
lds
andb
scas
adc
cmp
and
push
cmp
add
dec
loope
inc
into
gs
pop
ret
push
fs
adc
vpmacsdqh
ret
mov
fs
xchg
sbb
sbb
xchg
xchg
push
sub
and
and
and
orl
sbb
ret
aam
pop
cmc
dec
mov
mov
push
dec
cwtl
pop
xchg
push
sti
push
rcrl
gs
push
dec
push
sbb
and
or
push
icebp
dec
mov
add
leave
jne
mov
dec
jne
push
or
jge
jb
push
inc
pop
jns
out
into
rcll
cld
lret
in
rclb
push
mov
loopne
sub
ret
push
or
sbb
and
cmp
sub
idiv
add
add
stos
push
inc
rcrb
icebp
dec
pop
and
sti
jnp
andl
into
sahf
pop
leave
push
sbb
gs
add
rorb
sbb
push
cmc
push
rcrb
add
or
dec
sub
push
sub
push
into
add
jmp
pop
inc
xchg
add
cltd
sbb
aas
mov
sub
or
adc
fld
sbb
adc
or
add
stos
mov
or
loop
push
in
cmpsl
lods
add
stc
sub
push
es
daa
femms
sbb
and
or
mov
or
jo
movsl
test
jmp
inc
fbld
adc
xchg
clc
ret
cmp
out
jge
mov
cmpl
mov
xchg
incl
in
lods
pop
sub
cli
and
mov
lds
ds
push
mov
or
popa
jnp
push
mov
or
pop
pop
add
inc
and
sbb
xor
push
jno
xchg
adc
mulb
mov
push
push
push
push
inc
sbbb
or
aas
adcl
aam
mov
or
scas
inc
movb
inc
leave
inc
fcoms
cmpsl
jbe
jge
push
fsubl
shrb
jl
dec
js
sbb
loopne
pop
inc
cmp
ficoms
pop
adc
loope
push
mov
in
movsb
push
aam
and
mov
adc
add
outsl
push
daa
fldpi
adc
sbb
ret
imul
bound
inc
int3
xchg
or
lods
pop
adc
lcall
mov
pop
mov
pop
pushf
hlt
push
out
add
push
test
lock
sbb
int3
xchg
stos
add
ret
inc
mov
ds
add
aas
push
push
push
addps
lea
inc
adcb
mov
lods
sub
nopl
mov
ret
push
mov
pop
push
je
andl
adc
bound
xchg
push
lret
mov
shlb
arpl
inc
inc
cmp
or
adc
and
mov
adc
or
iret
fxch
push
sub
push
jno
pause
xchg
nop
cmp
pop
and
lcall
inc
movsb
jns
adc
sbb
and
aas
pusha
mov
and
push
mov
inc
jp
lods
nop
loopne
jp
sbb
fistpll
add
lea
cmp
fcoms
hlt
jne
cmp
aaa
iret
or
pushw
sbb
jle
add
lahf
dec
outsb
sbb
addl
jbe
cmp
loope
push
push
jmp
and
or
add
ljmp
mov
cmp
or
xor
push
mov
cmp
test
hlt
imul
adcb
push
sbb
push
out
xor
bound
into
xor
push
xchg
mov
data16
mov
test
jmp
cmp
je
inc
add
cmp
jl
jmp
jge
dec
shl
cmpb
hlt
hlt
pushf
xor
test
ret
sbb
mov
and
mov
xchg
xchg
in
push
sti
test
add
add
nop
inc
mov
xor
lods
rcrb
add
testb
sub
or
add
movb
cmpsl
add
pop
cltd
sub
out
push
sub
lods
push
rorb
cmp
das
mov
shrl
aam
add
mov
sbb
cmp
js
ficompl
jge
nop
in
push
sbb
cltd
insl
dec
cmpsl
ret
xchg
and
fdivr
test
adc
push
cmp
and
inc
test
mov
push
movsb
jle
or
aaa
and
sub
je
jne
sbb
xchg
or
fs
mov
or
xchg
push
xor
add
add
cmp
and
sbb
sub
mov
adc
enter
call
jge
adc
in
push
and
add
sbb
mov
addb
push
add
adc
int
in
mov
in
dec
int
call
rcrb
je
nop
loopne
push
mov
pop
loopne
or
and
or
xor
mov
movsb
sahf
push
inc
push
fs
mov
xor
nop
push
pusha
pop
push
mov
add
mov
and
xchg
call
xor
push
sub
call
phaddd
mov
lret
adc
add
movsl
orl
or
inc
mov
shll
push
dec
stos
loope
call
cmp
xchg
notb
test
inc
add
adc
bound
popf
ljmp
sub
movsb
sarb
mov
push
js
sub
addb
cmpsb
dec
outsb
adc
and
cmc
mov
adc
mov
cmpsb
in
jl
adc
inc
jns
push
cli
cmpsl
fmull
push
mov
push
lods
imul
lods
push
xchg
or
jl
adc
cmp
inc
jbe
dec
mov
inc
xor
or
and
ljmp
sbb
mov
stos
xchg
xchg
xchg
and
add
push
and
and
mov
xor
pop
adc
add
inc
sub
or
cmp
push
xor
or
add
insl
mov
cmp
mov
movsb
mov
sub
cmp
pusha
xchg
movsb
stos
and
les
rorb
imul
cmp
jb
pop
lock
sbb
add
cmp
jae
mov
xchg
out
cli
jmp
xor
lock
leave
dec
xor
ja
push
push
push
add
sbb
xchg
test
or
xchg
pop
aas
std
lods
call
nop
ds
inc
or
in
cmp
push
dec
inc
xor
ss
outsb
add
das
mov
ret
jmp
mov
jl
pop
xor
cs
mov
mov
mov
sbb
jl
jl
mov
cmp
xor
mov
push
pop
cmpsl
adc
pop
loop
mov
xorb
clc
pop
out
inc
add
fbstp
dec
or
add
xchg
add
test
test
sarb
xchg
aas
mov
loope
push
idivb
mov
jecxz
sbb
sbb
sbb
in
xor
int3
add
dec
or
imul
sbbb
add
fistl
sbbl
cmpsb
xchg
shrl
dec
je
mov
add
add
add
push
adc
add
cwtl
jg
pop
rclb
imul
mov
aad
xor
inc
inc
test
push
jg
ret
adc
iret
cmp
cmp
int
cmpsb
inc
pop
jmp
mov
jmp
aam
push
cmp
sbb
lea
push
sbb
jns
push
or
or
cmpsl
jle
add
xor
out
mov
mov
ret
add
or
dec
or
mov
fcmovnb
mov
fcoml
pusha
jbe
outsb
mov
push
adc
mov
push
leave
xor
repnz
adc
ss
push
sub
sub
xchg
adc
cmpsb
add
inc
lods
pop
xchg
sbb
add
jae
movsb
sub
or
mov
jbe
cmp
cmpsl
aas
or
ret
xlat
dec
movsl
in
push
jle
or
push
pop
jmp
popf
push
pop
cmp
mov
push
icebp
xorb
lock
data16
or
jo
jge
mov
out
add
es
pop
add
jmp
out
rolb
jnp
sbb
or
mov
je
xchg
pop
mov
adc
jle
push
push
add
push
mov
in
xor
mov
loopne
frstor
adc
adc
imul
mov
fs
jne
add
cmp
cmp
out
mov
push
mov
or
dec
bound
sbb
push
mov
xor
jae
push
mov
aad
mov
sub
out
cmp
push
dec
mov
pop
or
and
push
xchg
inc
scas
fiaddl
mov
adc
out
jns
adc
frstor
scas
adc
lods
in
shrl
insb
fistl
ret
popa
mov
add
pop
cmp
cli
xor
push
and
mov
mov
jne
push
jno
xchg
mov
sti
adc
pop
lcall
mov
add
add
add
sub
xchg
jg
popa
xor
cmp
dec
cwtl
stos
adc
xor
sbb
popf
dec
es
into
test
jb
add
push
push
nop
ret
addl
sbbb
clc
or
xor
add
sub
dec
gs
sbb
and
push
push
nop
lret
sub
add
or
xchg
xor
cmp
add
add
inc
push
sbb
or
lret
pcmpgtb
cli
cmpsb
sbb
jl
push
jo
add
jl
mov
xchg
into
sarl
adc
in
or
in
add
adc
test
shrb
inc
enter
pop
add
dec
mov
in
sub
and
fcomps
xchg
js
sub
pop
push
inc
pusha
sbb
mov
mov
adc
sbb
jbe
inc
andl
and
and
add
pop
and
or
adcb
lods
pop
mov
and
lea
dec
pop
sbb
cmp
and
sbb
pop
ror
push
rcrb
adc
and
lea
int3
rclb
sbb
insb
data16
hlt
setne
xor
push
xchg
xor
dec
dec
or
xor
or
dec
xor
xchg
xor
or
xor
xchg
xor
dec
and
and
dec
xor
add
dec
xor
xchg
xor
add
ds
adc
mov
sub
addb
mov
in
xlat
add
lds
cld
add
add
lods
push
lea
add
and
sub
decl
pushf
cmpsb
sbb
pop
pop
in
adc
add
xchg
sbb
inc
lcall
sub
pop
jne
cwtl
lcall
ljmp
or
dec
push
cmp
lds
mov
adc
push
and
push
xchg
dec
daa
push
and
pop
lods
dec
rclb
adc
fsubp
sbb
es
cmp
dec
sbb
add
push
jo
or
jne
mov
dec
dec
pop
test
or
xlat
mov
lcall
stos
ljmp
mov
add
sbb
rolb
add
jne
test
sub
int
xor
and
and
mov
test
and
add
fildll
add
push
in
inc
sub
mov
and
mov
clc
into
push
pop
mov
pop
xor
cs
shll
out
mov
lea
ja
addl
nop
sub
push
and
jne
adc
push
out
pusha
sbb
sbb
inc
push
mov
cmc
sbb
sbb
mov
in
stos
or
or
push
dec
sub
jmp
fs
cmp
dec
push
push
push
pop
sbb
cmpsl
cs
or
sbb
enter
xchg
loopne
mov
inc
sub
mov
push
cmp
jne
inc
sbb
dec
mov
inc
es
mov
dec
and
xor
push
push
or
mov
in
add
hlt
or
or
push
mov
and
sbb
lock
cmp
test
sbbl
sbb
nop
ja
push
mov
push
add
adc
and
push
inc
shlb
xchg
iret
push
cmp
mov
out
mov
ret
push
out
jl
or
std
dec
mov
push
stos
adc
rcll
and
sti
mov
outsl
push
sbb
sub
inc
cmc
sbbb
push
or
dec
or
and
pop
test
mov
scas
mov
imul
xchg
clc
jb
sbb
jno
sar
push
hlt
lods
or
jnp
xor
add
mov
je
mov
adc
hlt
cmp
mov
xor
mov
add
bnd
clc
add
inc
into
mov
mov
push
mov
into
push
lcall
push
mov
movl
sub
outsb
lock
or
push
pop
mov
repz
cwtl
mov
ss
call
shrb
nop
add
adc
add
enter
or
mov
pop
lss
jg
test
scas
lcall
inc
cld
jge
add
xchg
add
lods
push
fistpl
popf
out
in
sub
lods
ret
cld
fisttpll
fstpt
outsb
dec
pusha
sbb
sub
adc
xor
inc
dec
or
jns
scas
cld
dec
fcompl
mov
out
dec
or
pop
repz
jl
push
loopne
incl
aas
mov
pop
popa
xchg
je
in
push
mov
je
sub
js
push
pop
in
shll
fdivs
call
call
xor
daa
or
xor
mov
stos
ds
or
cmp
dec
push
mov
call
jae
fdivl
mov
jle
add
add
sbb
lret
and
push
and
or
cmp
fsts
loop
rorb
lea
rclb
ret
pushl
cmpb
adc
sub
xchg
inc
sub
pop
fmull
adc
xor
or
xchg
mov
xor
fiadds
std
or
clc
adc
adc
jmp
adc
and
orl
pop
xlat
add
fisubl
sbb
mov
adc
pusha
movsb
jle
cmp
mov
in
cmc
sbb
jge
jae
push
dec
sbb
sti
jmp
mov
dec
and
lahf
add
imul
cmp
push
cmp
jno
mov
ss
nop
cmpsb
add
mov
addr16
imul
sbb
push
jmp
arpl
mov
sub
or
adc
jo
adc
shlb
aaa
add
mov
insb
cmp
iret
push
mov
push
adc
gs
push
pop
mov
inc
jo
inc
pusha
pop
push
pop
aam
sahf
add
and
push
mov
push
jl
roll
jmp
xor
in
push
inc
movsb
repnz
cmp
mov
adc
push
dec
daa
pusha
and
les
lds
movsl
cmpb
jg
push
and
jo
adcb
pop
jne
or
and
stos
inc
movsb
push
les
stos
nop
mov
mov
push
push
mov
fs
xchg
test
sbb
in
mov
int3
add
popf
negb
adc
pop
sub
sbb
movsl
pop
les
pop
cmp
pushf
or
das
sub
cmp
mov
mov
sbb
jb
sti
mov
arpl
xor
xchg
and
subb
sbb
push
stos
dec
mov
aaa
pop
adc
cmp
pop
dec
ds
push
pop
xor
into
pop
daa
arpl
ds
out
es
in
ret
pop
adc
push
add
push
add
push
mov
xchg
repz
lret
mov
jno
enter
loope
iret
xor
jo
jns
sbb
push
sub
psubusw
inc
or
and
push
sahf
fsubrs
push
adc
cmp
sbb
arpl
add
fst
inc
ja
loope
or
or
sub
or
dec
dec
adc
pop
hlt
js
cmp
push
fstps
es
daa
es
dec
dec
push
cs
dec
dec
add
mov
popl
mov
test
das
sub
or
cmp
insl
loopne
mov
je
or
sbb
push
mov
rcrl
aam
adc
sbb
sbb
hlt
dec
imul
jmp
adc
adc
mov
stc
or
jns
cmp
js
or
mov
scas
or
pop
pusha
addl
cld
movsl
cmc
subb
lea
mov
enter
call
test
lea
sahf
dec
push
push
mov
mov
push
mov
fsubr
cs
in
loop
icebp
inc
js
push
xor
mov
bswap
sub
sbb
cmp
aas
or
pop
sbbb
jge
cmp
mov
rcrb
je
movsl
adc
cwtl
xchg
mov
sub
stos
or
int
sub
xor
xor
sub
xchg
pop
insl
pusha
dec
in
fwait
icebp
sub
add
ja
xorb
push
add
sbb
aaa
mov
pop
fstpl
push
rclb
inc
push
jnp
dec
push
clc
loopne,pt
mov
push
and
in
mov
mov
push
xchg
jne
jg
xlat
rorl
push
jmp
sbb
cs
sbb
xlat
add
cmpsl
rcl
inc
orb
adc
cwtl
pop
add
or
or
inc
xchg
lret
in
les
dec
push
loopne
mov
xor
loopne
add
push
stc
push
xchg
adc
add
mov
jmp
pushf
xor
and
push
and
xchg
or
sbb
loop
stc
pop
sahf
add
sarb
out
add
int3
movsb
xor
cmp
aaa
or
jmp
lds
aad
xchg
sbb
test
add
xchg
mov
rcr
inc
dec
jne
outsb
loope
mov
mov
cmp
pusha
lahf
push
mov
and
add
xchg
push
inc
movsb
fdivrs
rolb
scas
adc
mov
sbb
les
fwait
dec
xor
push
and
xor
mov
pop
cmp
or
push
adc
jmp
idivl
pushl
loope
scas
out
stc
cld
sbb
sub
push
push
addr16
xchg
jno
xorb
fwait
sbb
aam
and
cmp
mov
push
mov
or
mov
cli
movsb
nop
adc
inc
cmp
jmp
test
jl,pt
mov
xlat
or
pop
mov
nop
call
dec
clc
add
int3
mov
mov
mov
jmp
sti
inc
subps
dec
cmp
mov
add
sarb
sub
int3
das
and
mov
mov
sbb
test
lea
ljmp
jnp
shld
call
lret
cmc
pop
pop
dec
jns
cwtl
dec
leave
mov
add
or
xor
shlb
adc
aaa
adc
aas
push
adc
inc
xchg
pop
dec
xchg
jb
pop
addl
mov
dec
or
push
fidivrs
movsb
sub
sbb
inc
or
or
sub
push
dec
or
pushf
or
subl
outsb
xor
nop
push
ret
xchg
pop
push
or
fs
pusha
jg
movsl
add
adc
nop
xchg
scas
dec
adc
data16
ljmp
dec
xchg
xchg
mov
push
lock
mov
iret
lds
cmc
adc
adc
imul
mov
idivb
cmp
push
pop
and
ret
mov
push
test
imul
cmp
mov
inc
repnz
outsl
rclb
add
js
out
jo
rolb
push
sub
lahf
mov
cltd
in
lea
rorb
pop
xlat
test
sar
sbb
insb
dec
push
sbb
sti
add
insb
add
enter
or
pop
jo
adc
mov
push
mov
inc
pop
sbb
outsb
loop
sub
fnstcw
add
les
ret
mov
sbb
cmp
loopne
testb
push
das
mov
mov
sbb
xchg
ss
xor
xchg
testl
inc
faddl
lcall
and
jp
mov
sti
ret
mov
inc
cmp
xchg
mov
xor
push
ret
pusha
and
and
cwtl
xchg
inc
adc
or
stc
fs
lcall
popa
add
push
mov
mov
xchg
or
bound
in
or
pop
add
mov
inc
lock
sbb
inc
add
xor
repz
push
adc
fwait
rolb
movsb
fs
pop
xor
jb
pop
or
xchg
cmpsl
or
or
test
mov
sub
ret
sbb
pop
push
mov
int
add
add
jle
insl
ss
xor
pop
mov
ret
sub
scas
pop
jl
xchg
popl
push
sbb
sub
int3
push
inc
cmp
dec
aam
add
stos
cltd
movsl
fwait
push
imul
lock
xor
clc
mov
xor
fsubl
outsb
jno
cwtl
dec
pop
jb
sub
sbb
movsb
mov
xor
invd
daa
sahf
push
mov
aaa
push
xchg
test
movsl
mov
push
dec
fidivrl
mov
or
fcmovu
dec
add
adc
jle
cmp
and
pop
rcl
adc
lea
insb
pop
jmp
and
icebp
push
pop
jns
js
adc
call
inc
xor
int
sbb
inc
leave
or
xor
mov
sbb
and
insl
imul
sub
pop
sub
or
dec
push
es
push
lods
aad
pop
mov
pop
and
or
adc
push
andb
iret
or
pop
and
sub
ficoml
inc
xlat
or
enter
and
inc
pop
sbb
fcom
jo
stos
ss
cltd
and
push
push
sbb
dec
or
movsb
dec
mov
inc
add
inc
add
mov
mov
sub
push
mov
or
push
xchg
lahf
cmpsb
insb
je
pop
jb
fistpll
cmp
adc
mov
scas
mov
push
cmp
loope
push
or
add
movb
pop
xor
cmp
and
popf
mov
add
mov
mov
cmp
les
sahf
and
cmp
je
or
cwtl
pop
ret
cmp
je
mov
push
pusha
add
jo
xor
ja
mov
jmp
inc
lahf
or
movsb
mov
pop
enter
and
int3
sub
push
cmp
add
or
shrb
mov
push
ret
divl
aad
adc
je
mov
jb
sbb
fsubrs
push
lds
int3
dec
loope
pop
push
rcr
pop
mov
cmp
stos
and
fwait
mov
cmp
push
mov
push
jb
mov
inc
add
fildl
insb
pushf
push
push
cmp
pusha
leave
and
jns
mov
insb
mov
js
js
outsl
pop
gs
sub
lea
mov
or
pop
or
sub
adc
addl
sbb
and
stos
or
inc
mov
xor
and
adc
dec
push
mov
push
add
adc
sbb
cmp
xchg
pushf
fbld
add
test
pop
and
jmp
cli
add
jne
xchg
pop
cmpl
iret
xchg
dec
inc
push
into
xchg
js
mov
in
dec
pop
cmp
xchg
dec
add
mov
jge
fstl
fwait
add
popa
dec
xor
mov
nop
push
imul
cmp
test
cmc
jl
mov
jl
fmuls
sbb
sbb
and
inc
inc
dec
mov
mov
decl
cltd
js
ret
xchg
es
cmp
lea
pop
es
jnp
out
mov
mov
pop
add
cs
or
push
les
aas
and
cmp
int
stos
dec
or
pop
push
mov
add
push
lret
push
mov
or
nop
fldenv
daa
lcall
adc
push
adc
aad
push
mov
sub
dec
ret
dec
cmp
jae
inc
cmp
shrl
lock
js
cltd
mov
push
filds
add
sti
cwtl
jns
add
xor
je
xor
in
arpl
or
dec
lods
jmp
sbb
inc
mov
fisttpl
rcl
pop
adc
in
adc
cmp
or
add
dec
pusha
pop
pop
push
dec
sub
imul
in
js
or
les
dec
xor
sub
jle
fs
enter
mov
jo
push
and
add
popa
jnp
pop
lds
or
pop
push
pop
add
mov
arpl
fsubl
int3
dec
jl
adc
shlb
push
enter
add
call
rclb
or
xor
pop
sub
jno
push
adc
sbb
and
jo
rcll
pop
aaa
pop
dec
xor
sub
xor
jp
test
sbb
loope
inc
lods
or
inc
push
data16
es
add
out
pop
bound
add
inc
xchg
orb
pop
push
and
adc
rolb
adc
in
inc
pop
jbe
sub
pushf
clc
inc
pop
add
enter
pop
mov
lret
sahf
push
and
or
call
outsb
mov
pop
mov
inc
jbe
mov
or
into
add
dec
rcll
insl
insb
loope
lsl
add
push
jno
xchg
xor
pop
rcrl
mov
test
nop
inc
inc
mov
xor
lcall
aam
xchg
jmp
inc
pop
imul
dec
clc
lret
leave
imul
xor
les
dec
mov
push
inc
mov
sbb
psrlq
and
lea
mov
pop
pusha
ja
out
add
cmp
fisubl
push
sbb
test
pop
mov
sbb
in
mov
xor
cmp
mov
jns
adc
jl
add
add
add
and
or
jl
movhlps
push
adc
fbld
pusha
cmp
fstl
rcll
adc
pop
inc
lcall
pop
or
addl
sbb
aam
and
cmp
jg
dec
rcrl
xor
dec
xorb
push
push
arpl
pop
xor
pop
lea
push
adc
pop
jne
pop
enter
jo
je
push
or
and
fiaddl
in
orb
xor
cmp
add
mov
in
and
or
sbb
jg
pushf
sub
mov
jb
test
pop
lods
push
adc
movb
mov
sahf
sub
bound
push
pop
inc
dec
test
into
nop
loop
out
dec
lea
jecxz
dec
or
clc
xor
or
inc
xchg
mov
movsb
jmp
ljmp
sbb
js
or
or
or
or
dec
sbb
pusha
ret
push
inc
pop
bound
imul
int3
xor
sbb
cmpsb
add
add
mov
mov
or
adc
inc
sbb
xchg
xchg
loopne
mov
pushf
fs
mov
add
sbbl
jo
inc
adc
xor
subl
add
and
cwtl
fs
imul
xor
and
xor
dec
xor
and
int3
add
fnsave
pop
sub
ja
and
jmp
dec
add
xchg
jns
xor
hlt
cmp
xor
mov
cmp
push
push
leave
aam
mov
adc
out
fwait
sub
aam
sub
jo
sbb
ret
mov
les
out
inc
xor
decl
rol
cmp
ret
lahf
outsl
sbb
jae
mov
lea
mov
insb
jno,pt
add
push
xor
sti
jle
push
push
les
xor
or
pop
dec
aaa
rorb
cs
xor
out
flds
shl
add
mov
inc
bswap
les
sahf
dec
mov
dec
mov
decl
lea
dec
and
dec
cmpl
xchg
or
mov
js
adc
sbb
xor
jne
mov
push
adc
sbb
cmp
or
cmp
fs
js
pop
and
aas
xchg
fs
or
dec
je
adc
mov
adc
in
cmp
data16
shrl
xor
fst
test
push
ds
and
pop
sbb
fstpl
lret
imul
pop
sub
xchg
lea
and
add
cmp
pop
pop
xor
adc
iret
dec
push
lea
mov
scas
pop
pmaxsw
add
jnp
mov
add
fisubs
mov
push
cmp
xor
sub
je
loop
sbb
jne
lea
ja
imul
imul
push
mov
in
and
jmp
mov
data16
pop
mov
clc
sub
js
nop
and
fucompp
inc
mov
outsb
pop
mov
scas
test
adc
sbb
push
jle
hlt
push
mov
je
mov
test
push
out
xor
fmuls
dec
mov
arpl
fisttps
lea
add
add
push
inc
adc
xchg
jle
add
xor
popa
adc
add
mov
pop
lahf
xchg
push
mov
sbb
adc
add
pop
test
jns
push
pushf
and
and
movsl
repz
aaa
push
cmpsl
aaa
jl
loope
jl
sub
or
data16
add
push
cmp
xchg
sbb
mov
inc
test
xorb
add
push
xor
add
pop
fs
or
add
imul
sbb
xchg
lret
push
sbb
mov
and
adc
mov
outsb
sub
mov
adc
inc
inc
das
sbb
sbb
insl
ljmp
shll
jmp
cltd
adc
mov
cmp
popf
lahf
xchg
inc
mov
call
das
lea
imul
lock
push
mov
xor
cli
adc
daa
dec
adc
mov
mov
mov
xor
and
or
push
sbb
lock
cltd
test
add
push
xor
or
dec
and
test
dec
adc
cmpsl
repz
sar
test
call
test
mov
push
cmpsb
fwait
jb
insb
mov
adc
and
gs
push
pusha
and
fidivs
inc
or
mov
push
jae
daa
inc
icebp
mov
push
pusha
and
jg
push
cltd
sub
std
push
lret
outsb
jbe
and
into
shlb
dec
sbb
lahf
nop
scas
xchg
frstor
ja
cltd
out
lea
add
mov
add
xchg
dec
and
inc
pop
pop
loopne
loope
or
dec
mov
mov
push
jl
add
sbb
push
fdivr
mov
cmp
stos
push
hlt
jns
sbb
outsl
adc
and
adc
jecxz
lods
adc
add
mov
setb
sahf
adc
push
cli
ss
xchg
pop
push
stos
inc
andl
push
sbb
adc
cmp
cmp
push
or
dec
sbb
jno
jno
adc
mov
push
addr16
sub
xchg
push
adc
cmp
xchg
and
and
sub
and
sub
and
or
imul
jecxz
and
add
xor
and
adcl
movsb
mov
popl
mov
or
inc
inc
add
push
push
push
cld
data16
push
je
cmpb
imul
jnp
insb
mov
add
add
lcall
adc
pop
test
and
adc
or
sbb
int
daa
and
or
pop
sbb
cld
mov
je
lahf
movsb
mov
jne
inc
mov
call
popa
jmp
loope
sub
mov
fwait
cmp
lahf
aad
and
add
push
in
lock
xor
pop
pushf
mov
je
push
sbb
mov
push
and
icebp
sbb
sub
dec
cmp
sbb
xor
sbbl
add
mov
daa
sub
add
xchg
addr16
fwait
int3
adc
push
jb
xchg
xchg
sub
sbb
push
sbb
sbb
or
fwait
nop
or
outsb
inc
or
add
arpl
sbb
nop
xorl
dec
aaa
je
add
cmp
xchg
mov
and
push
dec
adc
inc
cmp
adcb
repnz
mov
adc
mov
dec
dec
or
or
and
cld
inc
ljmp
sbb
sbb
cmp
inc
and
mov
mov
mov
or
test
or
add
push
or
inc
lcall
mov
adc
outsl
sub
int
xchg
inc
xor
add
add
and
push
cmp
sbb
xor
fsubs
test
sbb
mov
js
ret
xor
xchg
cmc
fidivrs
push
inc
mov
jge
lods
mov
leave
outsb
ljmp
push
and
xor
in
or
sbb
inc
daa
sub
add
test
stos
cmpb
pop
xchg
jb
mov
push
inc
stc
xor
cmp
les
mov
push
or
mov
push
ds
scas
aaa
mov
sub
aad
mov
sub
dec
jmp
loopne
xlat
sbb
mov
or
sbb
xorl
mov
pusha
pop
aam
pop
jo
or
xchg
add
dec
or
xchg
mov
in
je
push
jp
mov
sub
inc
mov
sti
outsb
xchg
or
or
or
and
xchg
and
sbb
add
sbb
jecxz
cmc
mov
mov
inc
add
or
jge
jb
and
inc
inc
jbe
dec
fisubl
pop
mov
mov
mov
cmp
xor
dec
push
or
popf
in
xchg
push
add
inc
pop
jns
fdivrs
aaa
sbb
push
fists
mov
dec
push
adc
jp
pop
and
mov
test
adc
push
adc
dec
and
adc
add
inc
adc
iret
add
push
add
leave
and
adc
adc
adc
fsubs
xchg
sbb
cmp
push
or
xor
daa
pop
push
inc
repnz
sbb
iret
xor
fldl
lret
sbb
lods
stos
dec
mov
pop
or
pop
or
inc
pop
pop
and
fdivrl
inc
xchg
in
dec
add
add
xor
insl
sbb
and
cld
jne
mov
jno
sbb
jo
sbb
mov
ret
push
add
sbb
mov
xchg
std
and
movsb
out
pop
mov
xor
insb
mov
inc
dec
cmp
or
mov
add
in
cmp
inc
pop
push
mov
xor
sbb
imul
sub
sub
and
pop
dec
xor
outsl
adcb
xor
les
imul
pop
or
mov
mov
inc
insb
inc
das
pop
aam
sbbb
sbb
adc
add
push
mov
pop
and
es
in
fs
pusha
iret
dec
cltd
dec
inc
popa
add
rolb
and
lret
xchg
or
pop
push
xor
dec
xor
and
test
jne
add
cs
and
inc
lea
inc
adc
add
adc
jbe
cmpsb
test
jno
sbb
pop
stc
add
call
cmp
add
jge
jp
push
push
push
push
push
push
add
add
lret
jno
jp
add
sub
movsb
lahf
add
mov
mov
and
cmp
ret
ja
inc
adc
loope
cmp
aad
test
cmp
dec
xchg
icebp
push
das
orl
push
pop
add
sbb
test
or
subb
push
pop
push
add
adc
pop
adcb
fists
mov
push
add
inc
jl
jne
adc
xchg
imul
loopne
fstps
mov
xor
fcomps
aam
xor
or
jae
cmp
es
pusha
test
or
xor
int3
lret
pop
adcb
xchg
int3
jns
rcll
movsb
and
lahf
aam
xchg
in
xchg
xchg
pusha
sbb
and
sbb
sub
outsb
sbb
flds
mov
jl
in
hlt
test
add
add
sub
inc
std
cmp
and
leave
xchg
aam
pop
mov
leave
sub
xor
fists
sbb
cmp
cmp
dec
pop
inc
pusha
push
mov
inc
mov
shlb
inc
fwait
scas
pop
dec
call
je
adc
dec
fdivs
sahf
jg
out
fstl
leave
push
push
or
mov
push
pop
or
add
andl
push
or
push
inc
jne
push
cmp
inc
jmp
loopne
ljmp
loop
pop
scas
call
enter
jno
fisttpll
rorl
sub
and
leave
jae
or
or
sarb
cmp
jmp
dec
xor
addb
adc
je
in
aas
adc
stos
and
pop
xchg
iret
aam
mov
lods
cmp
dec
adc
and
aam
fistpl
mov
push
push
nop
adc
mov
mov
pop
push
xor
xchg
in
aas
or
push
add
xchg
push
inc
dec
push
in
sbb
jnp
lcall
es
jb
fcomps
shrl
cltd
xchg
sbb
pop
jb
add
mov
and
leave
sub
xor
mov
repnz
or
push
fsubrs
add
jle
dec
lcall
nop
out
push
and
xchg
and
add
cltd
add
addr16
rolb
es
sub
sub
sub
or
adc
add
xor
cmp
push
aam
cmc
jo
bound
sbb
cs
test
das
jmp
mov
sahf
mov
push
imul
inc
lret
pop
js
inc
pop
jne
sbb
adc
sub
test
sub
or
pop
mov
ja
pop
lret
sbb
cmp
sub
adcb
inc
sbb
jmp
push
sub
pop
outsl
xor
or
sbb
push
xor
sbb
pusha
sbb
push
xchg
mov
or
inc
loop
sbb
jbe
mov
inc
rclb
shlb
jo
aaa
push
mov
sbb
push
push
push
sub
in
data16
pop
dec
pop
loopne
lea
push
push
push
adc
inc
pop
push
call
push
inc
movsl
xor
jle
adc
xor
jne
iret
inc
xor
fnsave
push
add
add
xor
rolb
sbb
xor
test
adc
dec
inc
push
aaa
dec
pop
sub
sub
popa
xor
dec
or
test
lahf
sbb
push
xor
sub
lret
dec
cmp
add
and
sub
cmp
xchg
dec
cmp
or
jns
lds
cmp
inc
mov
inc
les
xor
aaa
arpl
dec
in
aas
mov
xor
inc
push
arpl
dec
cld
lcall
in
add
inc
aaa
mov
int3
arpl
pusha
adc
or
push
xchg
out
cmpsb
inc
roll
mov
inc
bound
xchg
movsb
ret
cmpsb
sbb
orb
or
out
adc
pop
push
push
sub
loopne
push
stos
sbb
shr
and
xorb
fadds
addr16
push
mov
sahf
or
aas
in
add
movsb
push
jnp
add
and
sbb
jecxz
test
add
dec
cmp
jne
stos
add
shl
aas
inc
daa
push
jg
clc
lea
daa
jl
mov
call
sub
add
add
cmp
scas
cmp
mov
sarb
mov
test
or
push
int3
sbb
test
les
sub
data16
andb
and
test
insb
das
aaa
and
or
push
push
and
or
mov
pop
or
mov
dec
addr16
or
mov
adc
movsb
cmc
inc
adc
rorl
aam
in
aaa
inc
dec
dec
push
cmp
setne
subl
rorb
popf
jo
shrl
sbb
mov
mov
or
sub
sbb
inc
sarb
dec
sbb
or
dec
or
orb
ret
cmp
fldl
push
or
mov
or
in
cmp
sbb
mov
in
jmp
psubusw
inc
test
sbb
pop
or
dec
inc
loope
dec
or
dec
xchg
mov
popa
movsl
je
push
loope
shl
adc
jmp
adc
sub
sub
and
pop
lret
mov
sub
lock
adc
fs
scas
js
sub
and
push
push
lret
inc
shrb
sbb
cmc
xchg
mov
les
adc
cs
sub
push
aaa
inc
and
ret
inc
and
push
xor
jae
inc
or
add
repz
jmp
mov
jbe
cltd
push
mov
xchg
mov
movsl
movsl
loopne
scas
addb
mov
xor
xchg
dec
push
and
push
rolb
push
mov
and
dec
push
inc
mov
and
lahf
pop
insb
ret
push
mov
aas
or
mov
cmpsl
sub
xchg
adc
adc
and
pop
add
pop
push
mov
push
cmp
or
fisttpll
mov
lods
movsb
cmp
sbb
leave
push
xor
pop
aaa
and
jge
jno
jl
push
cmp
or
push
mov
int
jns
iret
pop
es
dec
pop
enter
mov
pop
xor
sahf
xchg
fistl
add
pop
andl
cmpsl
pop
dec
inc
inc
loopne
sbb
pushl
or
pusha
insl
push
in
and
inc
mov
lds
cwtl
sub
mov
popa
and
xchg
adc
add
push
sub
xchg
or
out
les
loope
sbb
push
mov
pcmpeqd
jo
jae
mov
adc
adc
cmp
dec
inc
mov
adc
sub
adc
add
pusha
add
inc
les
inc
dec
push
adc
add
dec
cmp
add
rclb
or
xchg
lods
nop
inc
es
push
mov
test
pop
and
mov
inc
cmpsl
fiadds
rcll
insb
push
scas
ficomps
xchg
xchg
pop
push
jo
push
mov
sub
cld
adc
daa
xchg
add
adc
add
in
js
repnz
ds
jl
cmp
jae
data16
xor
cmp
repz
leave
xchg
sbb
mov
jmp
cmp
sub
movsb
bound
mov
fidivrs
cmp
aas
push
inc
jecxz
jb
fnsave
and
xchg
loopne
rclb
jo
inc
cmp
sbb
dec
jmp
lea
push
mov
adc
ret
mov
xorb
push
test
pop
test
cmp
and
xlat
xor
or
add
out
stos
dec
or
aam
or
insb
loopne
add
or
push
pop
cltd
jg
test
mov
inc
jo
push
adc
adc
push
and
add
mov
xchg
mov
cmp
or
shrl
daa
popf
jb
add
cmp
mov
inc
push
sbb
pop
dec
add
inc
dec
fwait
sub
xchg
add
jmp
outsb
in
mov
bound
xor
fistl
pop
sbbb
or
pop
add
cmp
push
and
xor
pop
jb
and
and
pop
add
and
add
and
cltd
sub
mov
and
jecxz
out
jno
js
mov
inc
shrl
ret
cmp
mov
xchg
adc
mov
xchg
xor
shl
sub
jne
push
cmp
sub
and
packsswb
ljmp
dec
test
add
dec
push
inc
lea
inc
add
mov
lds
adc
or
mov
sub
and
dec
test
pop
lcall
sar
jnp
pusha
push
and
mov
and
add
xchg
push
cmp
pop
rorb
push
push
mov
adc
int3
jecxz
xor
lea
or
xor
arpl
inc
sbb
cmp
in
xchg
mov
or
adc
addb
sub
or
xchg
cmp
sub
add
add
or
lcall
and
mov
pop
pop
lahf
mov
push
jmp
xchg
xchg
xchg
dec
push
stos
xorb
mov
shrb
adc
or
in
sti
adc
dec
adc
adc
aaa
adc
imul
mov
mov
imul
or
xlat
rorb
xchg
add
hlt
addl
jle
cmp
test
add
add
lldt
ret
mov
inc
cmp
jl
in
or
nop
nop
sbb
sbb
imul
adc
xor
add
adc
and
add
enter
push
ret
push
add
xor
add
out
or
or
add
mov
jo
aas
push
dec
imul
pop
and
hlt
dec
mov
fs
cmpl
jg
push
popa
insl
mov
insb
lock
jb
ja
test
incb
pop
sub
cmp
jb
mov
cld
ljmp
or
jg
adc
sbb
jb
push
fisttpl
sub
dec
add
push
cli
push
aas
mov
fdivs
test
loopne
in
jl
fiaddl
leave
imul
xchg
pop
pop
imul
mov
push
sbb
out
fs
jne
adc
sbb
mov
in
push
add
mov
add
cmp
cmp
imul
inc
xor
dec
dec
and
pop
mov
mov
push
push
pop
pop
pop
pusha
flds
adc
dec
fs
mulb
pop
or
or
sbb
sub
ficompl
sbb
sahf
or
lcall
push
xor
into
add
sub
or
sub
mov
gs
xchg
ficompl
jns
call
sahf
mov
and
sub
cmp
jnp
pop
mov
imul
cmp
cmpsl
and
add
lock
filds
jno
jl
xchg
cld
xor
mov
mov
cmp
imul
adc
push
sbb
addl
push
or
ljmp
pusha
ja
pop
rcll
es
push
jae
cmp
or
sbb
cmpsl
lods
les
push
nop
pop
nop
clc
fidivl
xor
test
shlb
inc
lock
lret
mov
mov
or
iret
lea
inc
xchg
inc
add
data16
mov
cmp
mov
sbb
push
les
mov
iret
inc
xor
shrb
rolb
cwtl
and
add
iret
or
and
cmp
sti
popa
fdivl
scas
xor
sbb
cmp
mov
sbb
fwait
pop
leave
inc
int3
mov
test
lea
in
mov
fneni(8087
sbbl
lock
xchg
popa
push
and
mov
dec
xor
lods
sub
imul
mov
pop
push
movsl
mov
ror
movsb
mov
mov
push
sbb
push
mov
js
mov
push
pushf
js
out
dec
or
out
inc
shlb
movsb
lea
inc
sbb
mov
js
loop
test
in
or
test
inc
add
push
sbb
xchg
in
inc
or
enter
jge
notb
pop
xchg
xchg
pop
cmp
mov
test
xchg
push
cmp
push
push
jp
dec
sub
pause
loop
sbb
loopne
sbb
mov
and
jl
addr16
jo
aas
add
mov
std
lcall
push
jne
cmp
je
cmp
je
cmp
je
cmp
je
imul
lret
sbb
jl
data16
cmp
xchg
mov
dec
hlt
jne
in
inc
cmp
add
xchg
push
stos
pop
dec
shl
ret
pop
daa
mov
cmpb
sbb
stos
mov
test
dec
fisttps
movsb
arpl
data16
jo
push
dec
lcall
cs
and
sub
add
pop
cmpsl
lods
je
adc
sbb
pusha
push
repz
aam
call
push
sbb
jno
or
adc
adc
cltd
add
lods
adcb
and
or
test
adc
pop
pop
sub
xor
popf
jge
sbb
xchg
mov
ds
xor
lods
mov
int
nop
push
lock
xor
or
les
push
aam
or
and
sub
inc
gs
aam
sbb
adc
aam
jb
sbb
and
push
bound
rclb
pushf
loopne
mov
inc
fmuls
clc
arpl
and
sbb
dec
sbb
and
sbb
outsl
sub
push
adc
scas
and
xor
pushf
clc
mov
loope
mov
inc
xchg
jmp
pop
das
sahf
sbb
gs
adc
inc
push
scas
sub
inc
stos
loopne
mov
jne
jb
dec
dec
lock
xor
push
ljmp
sbb
and
clc
ret
add
popf
gs
and
jo
in
pop
pop
push
dec
jae
and
or
insl
pop
xor
xor
lock
mov
stc
inc
sub
lods
pop
jmp
adc
cmp
sub
cs
pop
ljmp
fstl
jne
xchg
movsb
mov
jmp
ret
pop
xchg
and
or
mov
loopne
ret
scas
jae
es
add
jp
push
je
and
push
les
push
test
mov
fsubrs
mov
add
movsb
mov
sub
lods
xchg
and
pop
or
pop
inc
and
jne
push
push
inc
jno
sbb
popf
push
mov
or
lcall
lcall
in
movsb
cltd
dec
adc
mov
xchg
push
push
call
adc
mov
dec
lcall
and
push
mov
jno
dec
jl
inc
mov
aam
icebp
dec
dec
pusha
cs
arpl
xorb
rclb
aam
mov
jl
inc
sub
jae
and
aas
sub
cmpsb
mov
mov
shlb
mov
add
pop
or
js
jo
xor
pop
inc
fldt
or
arpl
push
xor
pop
clc
jge
and
xchg
mov
lea
outsb
add
in
negl
lock
jb
pop
hlt
cmpsb
sbbb
mov
popf
in
inc
push
cltd
inc
mov
call
mov
je
test
mov
mov
or
fcomp
sub
xchg
rol
cli
scas
jecxz
cmp
test
xchg
xchg
jnp
mov
ficompl
inc
je
flds
jbe
cmp
repnz
sub
addl
or
icebp
movsb
adc
andl
int3
jno
xor
sti
imul
hlt
cmp
fmull
dec
jbe
push
add
pop
mov
outsl
adc
add
addl
cmp
and
xor
xchg
add
subb
add
mov
cmp
cld
jnp
dec
xchg
pop
xor
dec
push
xor
sub
jne
je
mov
stc
jns
out
pusha
imul
incl
sub
mov
mov
dec
dec
cmp
push
mov
sbb
sbb
dec
mov
mov
or
or
lahf
and
add
xchg
sub
inc
pop
pop
or
shlb
xchg
rorl
adc
pop
sub
adc
adc
lds
push
dec
stos
test
xorb
adc
fs
inc
sub
add
insb
or
cmp
pop
lea
inc
pop
je
dec
ss
cmp
jg
arpl
bound
adc
mov
mov
stos
or
pop
and
mov
aaa
sbb
fnstcw
xchg
sbb
int
add
pop
int
mov
jno
je
lea
sbb
jbe
fdivrs
out
inc
sbb
pop
cmpl
adc
add
adc
cmp
and
cwtl
pop
test
push
and
push
add
shrl
mov
cmp
aam
sub
sub
jle
movsl
nop
push
subl
cld
sbb
sar
xor
push
add
in
push
lret
insb
pushf
test
es
ud0
push
dec
or
mov
cmpb
call
add
cmp
jne
cmp
jne
int3
jns
inc
jmp
fs
or
dec
xor
inc
das
js
push
out
or
movb
lea
inc
add
xchg
in
test
add
or
xor
push
mov
add
sbb
int3
and
lea
cmp
mov
push
or
xlat
daa
enter
jle
xor
cmpl
jb
nop
shr
test
push
and
pop
inc
inc
pop
xchg
push
lcall
push
pop
jo
js
inc
cltd
and
scas
mov
xchg
fiadds
mov
rcl
out
test
int3
ret
clc
jne
int
scas
mov
movsb
jle
ja
pop
enter
stc
mov
cmp
adc
adc
imul
fwait
addb
mov
push
inc
or
ljmp
enter
out
bound
data16
out
lods
pop
add
mov
sbb
rcrb
cli
or
mov
adc
sbb
ret
push
loopne
sbb
lea
outsb
mov
xchg
adc
sbb
je
mov
icebp
push
push
push
movsb
inc
insl
jns
adc
inc
adc
push
inc
add
lock
movb
insb
sbb
jne
xor
and
arpl
pop
lea
dec
or
nop
test
add
popa
jmp
inc
loop
xchg
dec
mov
push
adc
xchg
addb
cvtdq2ps
add
outsb
inc
add
inc
shrb
xchg
cmp
je
aad
or
jae
xchg
sahf
faddp
push
movb
xsha1
cmpsb
or
push
sbb
adc
and
add
or
push
inc
rorb
out
add
ret
lret
call
inc
sbb
aas
mov
aam
sbb
push
xchg
push
cmp
mov
pop
ficompl
movsb
and
dec
scas
push
movb
add
mov
pop
cmp
or
push
flds
add
push
out
idivl
icebp
xor
sub
clc
jo
and
rolb
outsb
or
sbb
adc
fiaddl
dec
int3
sarl
cmp
or
pop
add
sti
and
jge
push
xlat
pop
lock
xchg
into
sub
adc
adc
test
aam
sub
je
mov
cmp
push
movsb
add
shrb
nop
loope
shll
pop
pop
je
cmp
std
or
aad
jne
jle
sub
loopne
cwtl
pmuludq
inc
pushf
adc
insb
jbe
or
sub
pop
sub
das
add
rolb
xchg
addb
lret
push
insl
push
jb
sarl
aad
or
inc
dec
nop
cmp
push
push
add
bound
cs
dec
adc
sbb
clc
scas
lcall
push
push
repz
sbb
rolb
or
add
adc
jnp
cmpsb
adc
jge
mov
inc
test
out
pop
xlat
push
lea
mov
sbb
pop
mov
adc
sbb
add
and
dec
fisttpl
mov
bound
arpl
dec
jo
repnz
sub
add
or
rolb
sub
jle
mov
lock
sbb
in
mov
lods
loopne
sbb
inc
inc
inc
cmp
and
pop
sub
xor
ljmp
or
imul
push
cmp
mov
shrb
cmp
sbb
or
xor
add
sub
mull
push
or
jmp
in
daa
pop
sub
adc
inc
xor
inc
adc
shr
dec
mov
pop
lea
jmp
push
push
in
add
cs
loopne
add
sarl
sbb
dec
xor
and
push
push
daa
or
pop
test
adc
and
jle
jecxz
inc
cmp
mov
xlat
mov
pop
push
test
cmp
mov
add
out
mov
movsl
dec
or
lret
jo
out
mov
xchg
and
mov
cmp
push
or
add
jg
js
push
sub
sub
inc
add
push
mov
ja
xchg
shl
and
pop
das
jl
xor
inc
les
and
inc
push
in
xor
pop
or
and
adc
lcall
dec
out
ret
stos
leave
outsb
sbb
or
icebp
les
repz
pop
movsb
or
jecxz
adc
add
shll
dec
std
xchg
pushf
test
clc
add
xchg
icebp
mov
xor
nop
jmp
iret
fs
mov
cmpsl
sub
test
sar
sub
jge
outsb
insb
addl
pushf
mov
inc
or
pop
add
sbb
adc
in
arpl
mov
ljmp
push
mov
jg
jne
dec
push
jne
cmp
jb
sub
jmp
push
dec
movzwl
pop
icebp
int
pop
dec
pop
cmpl
push
setl
movzbl
inc
in
ror
dec
mov
push
push
dec
add
push
mov
sbb
pop
loopne
in
inc
insl
loope
xor
es
push
lods
sahf
shrb
sub
je
in
in
or
ljmp
out
push
shrl
or
ret
inc
push
daa
xchg
sbb
push
push
or
mov
imul
frstor
outsl
mov
sbb
inc
stos
sub
inc
push
les
adcb
push
movsl
sbb
pop
mov
add
adc
cltd
mov
fldenv
cmp
in
or
insb
pop
push
daa
add
mov
movsl
movsb
daa
push
cmp
mov
mov
mov
mov
jbe
mov
push
dec
lcall
inc
pop
xor
and
das
adc
pop
and
shrb
sub
ds
mov
das
adc
shl
push
push
push
shll
jo
jmp
push
jl
cmp
dec
sub
and
ret
xchg
add
or
clc
dec
push
mov
mov
pop
das
sbb
in
or
xchg
or
cltd
cmp
inc
inc
jno
push
faddp
sbb
jb
sbb
xor
add
push
and
pop
jne
lods
nop
xchg
xchg
roll
xchg
test
test
lret
or
mov
inc
jb
jg
push
push
lcall
sbb
pop
pop
dec
adc
sbb
das
adc
and
cmp
addb
iret
add
mov
push
sbb
mov
and
in
dec
push
cmp
rorb
and
jg
mov
push
test
adc
jle
adc
imul
mov
push
outsb
fnstenv
sbb
add
sub
and
dec
insb
or
dec
je
push
fnstcw
push
pop
or
or
jle
add
nop
shlb
push
lcall
jbe
cld
aas
adc
cmpl
add
push
push
ret
ret
add
mov
mov
rorb
cmp
push
inc
jmp
dec
repnz
mov
or
push
sub
push
cmp
fwait
adc
xchg
mov
xor
xchg
mov
ret
mov
ret
adc
add
hlt
cmp
jle
lea
cmp
jl
fcmovnb
out
cmpb
jne
int3
jbe
orl
in
cmp
andl
add
cmp
mov
arpl
pusha
mov
push
cmp
in
pop
mov
or
and
ret
add
js
or
out
xchg
movsl
pop
pop
push
bound
and
shll
dec
push
dec
add
cmp
inc
mov
pop
je
and
pop
add
sbb
inc
or
adc
add
jb
inc
fsubl
and
inc
or
xchg
decl
push
push
pusha
arpl
add
push
xor
inc
pop
adc
jl
sub
push
aaa
mov
add
pop
or
inc
dec
insl
sbb
mov
pop
inc
or
and
add
movsb
sarl
lahf
dec
xchg
push
pop
fldl
jge
rcrl
or
xor
outsb
push
jecxz
sbb
mov
push
adc
cli
insl
fisttpl
sbb
xchg
pusha
xchg
lea
adc
test
mov
test
outsl
sbb
dec
add
or
in
xchg
jg
ljmp
push
mov
aaa
sub
adc
push
adc
push
push
xchg
test
mov
jne
sub
mov
jg
inc
add
mov
mov
repz
jns
sbb
mov
xor
in
sub
dec
leave
test
aas
push
imul
decl
lahf
mov
add
aad
popa
push
mov
xchg
xchg
les
movsl
test
adc
cmp
sbb
mov
xor
loopne
pusha
cld
enter
ja
push
add
imul
mov
fwait
dec
jns
sahf
dec
enter
aad
or
enter
mov
xchg
adc
mov
ss
push
lahf
ds
stos
xchg
popa
adc
jo
fbld
ret
inc
scas
dec
adc
xchg
pop
jle,pn
ds
aam
je
xor
adc
or
add
test
push
insl
add
or
mov
inc
xlat
xchg
fadds
add
cmpsl
inc
fisttpl
cmp
inc
sub
fadds
xchg
dec
cltd
inc
dec
adc
frstor
cs
dec
outsl
pop
dec
ret
push
test
wrmsr
xorb
sub
jo
loopne
movsb
add
dec
je
pop
mov
dec
lods
or
sbb
mov
xchg
and
daa
add
push
rol
loopne
fucomp
into
cmpsl
mov
push
movsb
rcrb
push
inc
je
lea
and
xor
push
orl
xor
cli
add
xchg
and
ficoms
sub
sbb
adc
xor
ds
pushf
push
rolb
sub
add
mov
cli
add
or
pop
inc
sahf
stos
in
lahf
push
cmp
enter
dec
mov
jl
xchg
push
data16
sub
and
xor
addr16
mov
jae
cmp
aas
push
cltd
pop
xor
sub
inc
push
fdivrs
sub
and
and
into
int3
sarl
dec
adcl
ret
repnz
loopne
cwtl
dec
push
and
and
add
adc
inc
aad
adc
push
std
sbb
push
dec
int
scas
mov
leave
pop
push
and
inc
pop
push
adc
sub
adc
jg
mov
stc
or
or
inc
push
or
and
and
lea
adc
pop
test
and
or
test
cmp
jmp
sub
aam
inc
mov
add
push
lcall
push
das
lods
dec
das
add
inc
push
jae
inc
adc
test
lea
imul
cmpsb
movsb
and
mov
loopne
mov
cs
leave
adc
insb
call
addr16
shr
cmp
mov
stos
hlt
sbbb
push
inc
scas
loopne
cmp
fcmovne
jb
inc
pusha
inc
out
pusha
push
dec
mov
add
inc
daa
xor
rcrb
mov
lret
je
test
push
jae
pop
cmp
gs
shrl
mov
enter
lahf
xor
data16
xor
sub
pop
cmpb
je
stc
cmp
test
lea
add
push
add
adc
adc
inc
sbb
addr16
into
sbb
orb
test
jmp
cmp
out
test
sbb
and
sbb
call
inc
mov
mov
clc
in
imul
cmc
jg
insb
mov
add
jne
xor
mov
jg
aam
stc
add
add
push
imul
jmp
sub
inc
cli
fisttps
je
test
jl
popf
add
aaa
push
push
push
inc
inc
pop
roll
fisttps
imul
clc
jle
dec
cmpb
dec
push
mov
mov
push
js
sbb
sub
cmp
push
push
out
adc
mov
mov
add
jle
adc
enter
nop
sub
sar
jp
pushf
lret
addb
mov
cmpsl
xchg
push
pop
jb
jae
add
xor
outsb
or
frstors
mov
out
cwtl
or
adc
and
sti
push
rorb
inc
push
cmpsb
fldcw
push
stos
lea
pop
ret
test
enter
or
out
push
in
sub
or
mov
inc
ja
loopne
mov
ret
div
mov
mov
jbe
adc
pop
mov
and
mov
addb
ret
pusha
xor
xchg
push
adc
push
or
or
jmp
arpl
fstl
inc
xor
mov
xor
inc
pop
lea
sbb
sub
mov
test
or
inc
popa
mov
jmp
add
sub
clc
and
and
adc
mov
sbbl
loopne
push
mov
fsubrs
mov
jle
cmpsb
inc
inc
out
push
inc
add
notb
inc
add
mov
cmpsb
mov
cmp
movsl
cmp
inc
jp
mov
cmpsb
xchg
adc
adcb
inc
mov
push
pop
aad
and
adc
clc
push
int
mov
seto
aaa
neg
adc
dec
les
enter
mov
jmp
mov
cwtl
xor
push
jp
jbe
adc
outsb
or
and
sub
or
jo
pushf
fs
pop
inc
andb
push
mov
shrl
mov
adc
or
xor
add
cmp
sbb
mov
fdivs
and
movsl
and
stos
and
add
xor
jp
pop
in
pop
loope
daa
je
ja
sub
call
imul
mov
in
cmp
xor
or
or
mov
subl
mov
mov
into
jp
out
and
pop
inc
bound
jb
ret
or
cmp
andb
pop
pop
adc
or
fadds
mov
or
insb
add
mov
add
insb
cmp
data16
fldcw
jl
pop
shll
mov
or
adc
filds
add
pusha
push
jle
sbb
adc
add
ficoms
lock
and
jne,pn
inc
and
adc
aas
shlb
cmp
jne
aam
jb
push
inc
loopne
jge
sbb
push
and
rol
loop
mov
xor
shll
hlt
mov
push
sub
push
ss
adc
push
mov
movsl
cwtl
xchg
ret
adc
outsl
push
ret
push
es
inc
mov
imul
jg
lcall
fcompl
cmp
mov
ja
clc
cmp
jbe
or
test
std
ret
xlat
mov
cmc
imul
cmp
mov
movsb
sub
or
sub
mov
sub
sbb
pop
aad
dec
adc
mov
jne
push
pop
pop
mov
adcb
lret
adc
jg
sbb
flds
flds
cmp
les
aam
pop
jl
fmulp
lret
leave
iret
sbb
push
sbb
sub
fmuls
push
sbb
pop
out
dec
inc
sbb
jae
adc
lock
sbb
fdecstp
xor
push
lahf
movsl
aas
and
pop
jns
pop
add
add
jnp
adc
cmpl
or
adc
lcall
add
push
or
push
cmp
dec
inc
jb
addb
xor
pop
cmp
sub
jae
cli
mov
inc
movsl
ss
add
push
add
loop
inc
inc
call
sti
mov
push
pusha
inc
push
sub
mov
jmp
mov
mov
aam
or
dec
mov
and
cmp
cmp
xchg
xchg
add
cwtl
stos
add
cmpsl
es
outsb
xor
int3
into
aaa
adc
enter
subl
push
lock
add
or
push
adc
data16
pop
add
push
push
and
push
add
rorb
pop
jo
xchg
or
push
xor
filds
push
mov
push
call
test
inc
cmpsb
mov
cmp
mov
in
push
sub
cld
imul
lea
jb
mov
test
cmp
test
or
push
mov
xor
leave
andl
cmp
pop
ret
push
punpckhdq
pop
js
mov
adc
adc
out
mov
inc
lret
pop
je
push
dec
mov
stos
push
sub
loop
mov
or
adcb
pop
inc
pop
es
fcomps
js
cmp
je
sbb
sbb
sbbb
inc
push
or
loop
mov
call
sbb
ja
sub
dec
add
jns
cmp
pop
jmp
dec
mov
je
pop
add
cmp
push
inc
cwtl
pop
jg
arpl
cmpsb
cwtl
popf
mov
jmp
pop
mov
add
push
rorl
es
cmc
in
sbb
or
sub
xor
jne
and
add
push
dec
imul
fdivr
add
add
ja
insb
push
dec
dec
test
push
push
sbb
repnz
cmpl
push
and
call
xor
cwtl
cmpw
jne
mov
inc
add
imul
or
mov
or
adc
mov
add
shll
call
jmp
cmpl
mov
cmp
cmpl
pop
rcll
or
inc
fs
add
mov
mov
mov
call
shlb
rol
clc
sbb
mov
or
lods
int3
jl
and
test
jg
pop
pusha
xchg
add
loopne
lea
push
push
movsl
sbb
adc
jb
fldenv
mov
ds
push
mov
jmp
adc
adc
jns
adc
sub
mov
sbb
push
jmp
pop
and
xchg
pop
mov
sbb
lds
mov
xchg
cmpsb
push
push
jo
jl
js
pop
daa
push
push
sub
jb
andl
scas
push
icebp
out
fidivrs
push
mov
add
push
mov
mov
ret
push
mov
sbb
mov
in
pusha
aaa
push
shll
add
fs
sbb
aas
adc
scas
xlat
sub
popa
outsb
push
push
cmpl
jle
mov
sahf
push
cs
sub
cmp
in
addb
push
call
lret
sbb
lea
movl
clc
mov
adc
mov
adc
call
in
insb
ja
or
mov
or
outsl
and
loop
and
add
cmpsb
hlt
and
adc
add
cld
sbb
test
jge
mov
test
and
aaa
test
sbb
repz
fs
push
out
or
fcoml
inc
das
add
sbb
and
mov
sub
inc
mov
movsl
sub
adc
push
gs
lock
push
push
mov
in
insl
loope
shll
lock
jne
mov
and
in
inc
add
push
push
aaa
mov
pop
fstps
out
mov
add
push
push
icebp
mulb
xor
enter
aam
bswap
or
cmp
fistps
inc
or
inc
mov
cld
leave
adc
lock
subl
fwait
inc
pop
cmp
insl
movsb
lock
jb
and
lea
sub
push
adc
mov
mov
in
call
xor
insl
lods
ficoms
inc
inc
add
mov
adc
int
or
hlt
hlt
aaa
xchg
inc
inc
push
push
xor
jle
and
rorb
dec
loope
pop
cmp
inc
cld
mov
loop
and
push
mov
mov
lret
fcmovnbe
ljmp
lock
sub
push
sub
pop
add
movb
mov
cwtl
nop
cmpsb
aad
add
loope
mov
mov
shlb
repnz
add
iret
aam
popf
sub
pop
fsubs
jo
push
test
aad
cmp
cmp
and
xchg
push
sahf
push
inc
rcll
xor
adc
pop
ret
cs
pop
ret
shll
mov
mov
mov
or
push
shr
rclb
enter
inc
sub
inc
or
jmp
cmp
roll
mov
or
and
fsubrp
mov
jae
out
das
push
pop
test
jne
bound
cwtl
xor
dec
icebp
dec
cmp
pusha
sub
imul
sbb
lods
cmp
call
add
pop
cmp
xchg
sbb
das
fbld
dec
sub
idivb
scas
mov
mov
pop
pop
push
gs
push
inc
test
in
xor
jge
dec
adc
in
cmp
dec
cmpsl
and
lea
sbb
sub
into
popa
push
hlt
mov
sub
ljmp
xor
je
fs
pop
mul
xor
mov
hlt
jp
add
xchg
shlb
rcll
int3
inc
jge
cmp
adc
fwait
mov
hlt
in
lea
je
pop
push
popf
xchg
inc
pop
push
pop
jns
push
jmp
pusha
cmpb
bound
sub
add
inc
in
adc
sub
dec
pusha
lock
adc
mov
sbb
add
pop
sub
jbe
scas
into
inc
mov
mov
outsb
push
fs
xchg
pop
sub
push
dec
mov
test
pusha
add
lea
loopne
test
inc
push
xor
pushf
fs
sarb
pop
push
rorl
sahf
dec
mov
faddp
pop
mov
test
adc
lcall
sbb
mov
add
push
jbe
and
cmp
push
jns
xchg
add
jmp
mov
mov
push
fisubl
bndstx
xchg
les
dec
es
push
add
inc
adc
and
pusha
add
aas
mov
rcrb
imul
ja
jb
imul
mov
adc
add
xor
xor
loopne
xchg
jnp
jne
push
mov
fisubl
call
sbb
pushf
movsb
dec
sbb
mov
scas
std
sub
jb
push
adc
das
pop
push
dec
loop
or
xor
int3
movsl
jno
movsb
mov
or
xlat
mov
inc
lahf
pop
push
icebp
push
jb
rol
jl
pusha
inc
xchg
push
lock
pop
jl
xchg
pop
pushf
js
push
fwait
pop
or
test
das
scas
mov
mov
add
jmp
cmp
daa
dec
mov
mov
insb
add
testb
cmp
push
add
push
lock
sub
bound
jl
gs
mov
arpl
fs
in
push
push
cmc
xchg
imul
or
outsb
ret
lea
ss
fisubrl
fstpl
pop
stos
int3
xchg
int3
add
loopne
shll
sbb
add
ss
and
xchg
ja
xor
jmp
inc
add
icebp
mov
adc
push
pusha
push
mov
xchg
ss
push
sbb
adc
sbb
and
movsl
jecxz
adc
cmp
fadd
xchg
not
jno
pusha
or
mov
fbld
clc
dec
xor
das
outsl
sti
or
jae
inc
add
push
jae
arpl
repz
dec
push
jns
mov
je
inc
or
push
or
mov
or
cmp
push
pusha
hlt
inc
or
popa
std
lods
sbb
leave
icebp
js
add
ret
call
push
jo
pushf
ds
inc
sbb
scas
cmp
sahf
aam
pop
mov
jle
xor
cmp
and
push
fidivl
push
mov
hlt
adc
fcoml
cmp
je
push
nopl
mov
aam
mov
cmp
popf
sub
das
sbb
aaa
scas
sub
add
call
pop
jb
push
push
adc
xor
mov
mov
lods
cmp
cld
push
outsl
and
pop
push
mov
lock
pop
fadd
pop
sub
xor
mov
mov
cmp
sub
cmpb
faddl
test
call
popa
xor
and
stc
mov
jb
cmp
jne
clc
les
nop
cmp
fstpt
orl
pop
inc
mov
push
cltd
or
mov
push
add
or
dec
sub
mov
jo
fstpl
mov
or
sbbb
and
shrb
hlt
mov
and
xor
cs
mov
in
movsb
adc
pop
sbb
inc
mov
int
test
lahf
adc
or
imul
mov
insb
jo
js
xor
faddl
popf
lahf
lahf
call
cmpsb
cwtl
jne
sti
sbb
push
mov
inc
int3
mov
cmp
inc
inc
mov
mov
sub
push
and
pop
out
stc
add
mov
or
int
adc
and
ds
add
pop
ret
ret
add
xor
cmpsl
xchg
mov
fadds
sbb
orb
je
or
orb
orb
pusha
push
dec
rcrl
jmp
notb
stos
dec
movb
adc
insl
movsb
mov
rcr
pushf
inc
movsb
leave
cmp
jne
jg
into
clc
adc
and
imul
cmp
stos
loop
jo
insb
mov
xor
sbb
test
cltd
icebp
testb
sub
add
add
in
test
adc
mov
and
sub
popa
add
fbstp
ljmp
sbb
pushf
in
repz
outsl
push
xor
xor
shlb
or
aam
lret
xor
xchg
add
daa
pusha
add
push
ja
jecxz
and
add
lret
jp
inc
shll
mov
adc
adc
and
lret
lea
mov
xor
sarb
mov
insb
fadds
sbb
pusha
mov
pop
cmc
iret
mov
inc
rorl
pop
fsubl
jo
rol
ljmp
add
xchg
add
lea
mov
out
add
jne
lea
loope
mov
add
or
adc
fnsave
push
ja
negb
js
adc
ret
inc
sbb
push
filds
fdivrs
mov
or
mov
out
jb
add
or
or
incb
repnz
addr16
xchg
out
out
add
iret
jo
or
cmp
pop
test
clc
out
sbb
inc
xchg
xchg
inc
outsb
dec
out
fnop
add
ret
roll
mov
pop
fistl
mov
sub
mov
pop
dec
jne
stc
lock
cmp
push
stc
je
imul
es
divb
inc
xchg
ja
fwait
lret
push
fildl
cld
aad
dec
add
dec
sub
das
je
add
push
scas
ja
xor
push
repnz
or
adc
in
jbe
shrb
add
nop
mov
mov
mov
fdivs
lret
clc
mov
cmp
cmp
or
jmp
cmp
pusha
scas
or
js
rclb
dec
xchg
aas
xor
lea
into
bound
sub
dec
shlb
jmp
mov
or
faddl
dec
or
shlb
sub
add
movsl
add
inc
jecxz
out
cmp
adc
pop
push
push
or
or
add
aas
icebp
and
mov
enter
jle
or
mov
xchg
incl
fcoms
adc
mov
cmp
loopne
xchg
je
pusha
push
lea
or
fildll
mov
xor
in
push
js
fstl
adc
cmpsb
shrb
int3
lock
or
int3
cwtl
adc
jo
cmp
xchg
and
loope
add
sbb
lods
int3
push
pushf
or
sub
push
or
inc
push
sbb
insb
icebp
or
movsb
sarl
push
jl
jbe
je
ds
ret
ja
add
mov
shl
mov
je
cmp
je
not
mov
jne
mov
cmpl
clc
adc
iret
je
mov
adc
xor
mov
lds
sti
push
sub
inc
pop
and
pop
lea
inc
repnz
dec
add
inc
xchg
add
xadd
dec
push
add
lock
adc
pop
jb
lock
dec
das
jb
lock
cmpsl
addb
jmp
jns
push
adc
xchg
and
cmp
ret
jns
jp
dec
ss
mov
jbe
imul
mov
into
add
push
mov
dec
mov
into
lea
mov
sub
cs
adc
sahf
mov
and
push
leave
inc
push
je
jo
sbb
or
or
jl
testb
push
add
in
add
dec
push
push
nop
call
or
inc
rcrb
adc
xor
jecxz
outsb
scas
sbb
adc
adc
in
lcall
mov
mov
movsb
fsubrs
push
jge
jne
push
mov
mov
inc
mov
and
sbb
cs
es
aad
sub
jne
outsb
and
sbb
in
push
xor
xchg
add
mov
jg
divl
stos
or
ss
cwtl
fidivrs
inc
inc
lods
sub
push
test
mov
mov
fwait
sbb
or
cmp
data16
outsl
add
push
lea
push
pop
cwtl
push
adc
inc
or
sbb
insb
jno
sbb
lret
push
or
add
add
add
test
pushfw
xchg
fcoms
cli
les
mov
out
xchg
pop
xor
pop
add
pop
sub
popa
lock
pop
aad
push
roll
push
in
and
adc
fsubrs
mov
idivb
arpl
and
lods
rcrl
andb
inc
faddl
fwait
hlt
sub
fcoml
loopne
rolb
or
rcrl
cmp
je
mov
xchg
push
and
mov
or
sbb
adc
cmp
je
push
scas
and
ss
ja
add
divb
mov
ud2
and
sbb
jg
adc
test
push
xor
mov
jo
mov
ret
pop
lcall
pusha
pop
xchg
cmp
sub
or
sbb
pushf
pusha
mov
adc
ds
adc
or
pop
add
xor
cmp
mov
cs
jo
loop
lock
cltd
sbb
xchg
cmp
ds
cmp
cld
inc
aam
mov
adc
clc
aad
inc
add
lcall
pop
add
lcall
adc
fistl
sbb
or
adc
inc
push
cmp
and
fiaddl
orb
xchg
jle
pop
or
test
push
jmp
loop
popa
aad
mov
and
lahf
aaa
mov
lea
addl
pop
pop
aam
in
icebp
xor
push
mov
out
push
ja
xor
mov
movsl
add
idivb
sbb
fmuls
add
and
cmp
es
add
movsb
jo
push
cli
xor
idivl
sahf
test
push
xchg
mov
cmp
or
je
test
push
xor
inc
jb
mov
or
pusha
mov
adc
mov
cmp
add
les
inc
ljmp
inc
jge
mov
pop
or
test
mov
cmpsl
daa
jae
and
in
add
push
mov
or
cs
or
test
fstl
jnp
cmp
push
add
jmp
arpl
push
xor
sbb
out
lret
mov
dec
push
mov
das
nop
in
pop
sub
and
add
push
les
sbb
push
mov
pushf
aaa
lock
std
sub
andl
gs
pop
cld
fs
cmp
jl
or
push
outsl
or
inc
sbb
mov
sti
and
ljmp
jge
les
adc
orb
xor
ret
push
into
xor
xchg
cld
cmpsl
jp
push
jnp
add
xor
cmp
xorb
push
mov
push
pop
xchg
mov
sub
mov
pop
cmpsl
mov
dec
cmp
mov
add
decl
xchg
xrelease
add
xor
mov
aaa
lcall
ljmp
jg
mov
xor
call
mov
loop
shlb
xor
imul
jo
bound
test
mov
test
mov
jno
add
fstl
xchg
push
mov
shl
in
jb
push
ss
and
sbb
inc
sub
fmull
sub
out
add
or
push
into
outsl
adc
xchg
sbb
mov
sub
roll
cld
mov
neg
sbb
push
cmp
ret
inc
xor
fs
and
jo
cmp
test
sbb
jo
push
push
cmpl
add
insb
js
lret
add
push
xor
lea
fdivrl
xor
andl
cwtl
insb
addb
test
xor
mov
mov
loope
dec
incl
add
ljmp
stos
cmp
inc
outsb
jl
aas
sbb
xchg
jl
jmp
pushl
loope
into
pop
mov
lea
lods
adc
lods
daa
ss
cmp
inc
shr
rcll
rorl
or
and
ret
and
hlt
loope
divl
push
inc
idivb
andl
mov
push
sub
fidivrl
sbb
fistpll
gs
adc
fmull
mov
xlat
cmpsb
cld
and
jmp
add
or
pop
loopne
jecxz
clc
dec
sub
fistpll
pushf
dec
xor
mov
sahf
push
xchg
dec
outsb
mov
and
adc
xor
loope
xor
jmp
push
adc
aad
add
or
test
dec
and
xor
mov
xchg
mov
lds
add
mov
mov
push
mov
mov
dec
cmp
sbb
xor
jl
sub
or
inc
sub
je
mov
adc
sbb
fiadds
shr
pop
add
cmp
insb
dec
dec
mov
adc
push
inc
or
ret
arpl
call
clc
adc
and
je
push
insb
repz
addl
jns
xchg
pop
pop
push
dec
jp
fnsave
mul
or
ljmp
jns
push
dec
mov
movb
sub
in
out
xor
add
add
cmp
mov
sbb
add
inc
sbb
sbb
testb
je
and
mov
mov
sti
lahf
test
xor
and
xor
out
sbb
or
sti
rolb
outsb
inc
movzbl
push
mov
dec
or
mov
push
inc
testb
mov
push
loopne
lret
rcr
in
mov
sbb
mov
add
cmp
add
aas
mov
mov
mov
push
enter
lea
cs
sbb
lahf
aaa
add
inc
mov
pusha
outsb
pop
add
mov
xor
add
sub
push
test
cmp
stc
je
enter
insb
scas
xchg
fucomi
test
lret
filds
sbb
cmp
fsubs
or
jg
inc
xor
mov
out
clc
push
push
movhps
cld
mov
cmpl
push
addr16
shlb
enter
pop
mov
leave
mov
jmp
gs
jb
push
mov
mov
nop
push
pushw
pushf
lcallw
inc
xlat
adc
aad
mov
lods
jns
test
rcl
mov
andl
mov
lea
out
pop
ret
cmp
aaa
dec
push
jo
jmp
xor
push
mov
pop
bound
mov
lret
push
push
pop
cmp
aaa
mov
cltd
idiv
lret
insb
mov
cwtl
scas
mov
mov
cwtl
andl
and
rcr
adc
xorl
loopne
mov
out
stos
and
leave
inc
mov
add
mov
dec
icebp
mov
inc
push
mov
leave
movsl
fsubs
mov
sub
add
xchg
outsl
mov
push
addl
cmp
inc
cmc
les
add
inc
fiaddl
cmp
cmpb
add
adc
shrb
andl
adc
mov
mov
insl
es
xchg
outsl
inc
or
cmp
jle
into
add
pusha
pushf
push
jae
movsb
mov
pop
push
clc
test
adc
cmp
mov
xchg
sub
push
jmp
scas
scas
sub
add
pushf
mov
push
dec
push
test
test
push
ljmp
mov
pop
and
and
loope
cmp
mov
ret
sbb
cmp
xchg
push
mov
or
jae
sbb
dec
pop
lahf
lret
sub
add
or
sub
orl
data16
mov
lock
data16
imull
dec
push
push
scas
push
popa
adc
push
lea
add
add
xor
cmp
and
push
mov
pop
arpl
cli
orb
out
ds
jge
adc
sbb
pop
cmp
insl
lea
cmp
jne
mov
xor
jo
inc
pop
pop
mov
xor
cmp
loope
cs
inc
loop
mov
mov
cmp
and
sbb
sub
add
and
aas
scas
cmpsl
and
xchg
int
jbe
and
out
test
adc
and
lods
dec
adc
xchg
inc
cli
push
cld
out
mov
mov
xchg
clc
push
aam
hlt
push
add
sbb
pop
adc
inc
insb
jno
fsub
shr
inc
add
arpl
inc
mov
lcall
sbb
and
push
sub
sbb
std
mov
in
jecxz
sbb
mov
fimull
adc
frstor
pop
inc
shlb
dec
or
sbb
lock
add
jle
lock
cmpsl
bound
fs
xchg
clc
inc
sub
dec
jmp
sbb
push
pop
dec
cmp
les
sub
rclb
xlat
sub
jns
cmpsl
shr
pop
dec
jnp
shl
mov
out
icebp
aas
sbb
jle
push
push
cmpsl
add
rorl
data16
aas
push
push
inc
sbb
imul
sbb
sub
fmuls
not
adc
mov
add
xlat
or
pop
lea
cmp
pop
jmp
fldt
test
out
movsl
addl
movsl
testl
fimuls
fimull
cmpb
sbb
ja
mov
inc
or
push
add
inc
xor
push
sub
push
cld
xor
je
adc
mov
pop
dec
sub
adc
mov
sbb
stos
das
das
lcall
push
sub
push
pop
jbe
outsb
js
add
push
lea
shll
mov
push
icebp
movb
inc
aaa
jbe
sbb
out
pop
jo
mov
jb
cmpsl
ja
decl
pop
or
sbb
xchg
pop
mov
add
mov
jo
fisubl
ss
in
insb
imul
aaa
mov
inc
or
jo
out
or
daa
and
dec
dec
je
xor
inc
adc
jg
pop
cwtl
hlt
inc
pop
push
mov
inc
lods
shrl
xchg
mov
pop
adc
popa
cwtl
mov
addb
mov
jl
adc
mov
xor
pop
cli
rolb
push
mov
dec
rcrb
inc
shr
scas
and
aam
inc
dec
dec
jp
lea
sbb
addl
out
sub
dec
dec
adc
add
xchg
xchg
push
push
add
push
clc
movlps
push
rorl
popf
pop
fs
cmpb
mov
sbb
or
xor
push
lea
out
xor
mov
lahf
xor
mul
lock
push
and
sbb
pop
push
aad
clc
test
cld
mov
adc
pop
notl
or
add
aas
adc
loopne
rcrl
mov
nop
addr16
inc
mov
loope
and
les
fadds
jge
ss
xchg
dec
loope
or
aad
add
je
sbb
xor
ja,pt
sti
lods
dec
jmp
or
xchg
lock
sub
js
add
mov
into
push
add
jl
mov
adc
xchg
mov
cmp
je
add
jg
xchg
shl
inc
mov
testl
shl
pop
nop
jle
xor
or
or
lahf
ret
rorl
out
cmp
in
adc
mov
cmpsb
mov
dec
xchg
insl
jne
setnp
or
popa
in
xchg
mov
push
mov
mov
jae
push
push
xor
insb
xor
mov
sbbl
sub
pop
cltd
or
jl
aas
add
dec
push
xor
cmp
dec
dec
in
dec
lea
push
pop
add
mov
jo
mov
lods
or
inc
sbb
clc
adc
imulb
adc
testl
mov
inc
js
ror
jae
cmpl
mov
push
rolb
arpl
pop
xor
fwait
mov
pop
lods
push
xor
inc
xlat
add
and
mov
add
pop
inc
or
aaa
adc
loopne
loopne
testb
rcl
mov
sti
sub
rolb
jo
xor
adc
aad
sbb
dec
mov
aad
pusha
daa
daa
loope
push
cmp
pop
test
loopne
cmp
or
jns
cs
xor
xchg
mov
adc
inc
push
push
xor
into
loop
pop
dec
inc
loopne
inc
xchg
sbb
jbe
push
push
add
je
rorb
movsl
rolb
mov
insb
shl
add
and
and
xor
ret
div
les
pop
fadds
or
pop
sbb
cmp
and
dec
out
mov
mov
and
out
ret
outsl
or
and
xchg
hlt
sub
dec
ja
shlb
mov
je
or
je
or
sub
xchg
adc
adc
sti
aam
jl
imul
adc
or
cmpl
adc
shl
sub
sbb
lcall
js
push
jmp
rcrl
jecxz
cmp
adc
movsl
test
xor
sub
push
inc
movb
cmp
sub
scas
movzwl
dec
clc
pop
sub
shr
cmp
lret
mov
icebp
lfs
or
and
mov
rorl
gs
add
sub
lcall
inc
movsb
push
push
or
adc
adc
or
test
add
hlt
inc
movsl
and
rolb
mov
push
push
sbb
push
mov
push
ret
push
mov
mov
dec
je
sub
sub
adc
push
arpl
adc
add
pop
adc
xlat
push
adc
aad
mov
cmp
or
xchg
fisttpll
push
adc
inc
pop
xchg
push
xchg
insl
add
ds
add
hlt
fldl
mov
jge
inc
or
ja
imul
adc
adc
pop
and
sbb
int3
gs
or
jp
lea
cmp
loop
push
in
cmp
sbbl
sub
cltd
mov
hlt
rorl
push
mov
pop
fcoml
pop
add
sbb
nop
sbb
and
scas
loopne
xchg
or
inc
mov
sbb
clc
mov
loopne
push
xor
ror
cltd
sub
fs
call
jb
push
push
ss
xchg
roll
push
push
jecxz
fdivl
sbb
lea
in
icebp
stos
xor
xchg
movnti
mov
adc
fnstenv
fcompl
adc
cmp
lea
add
add
mov
lea
mov
or
imul
push
fs
dec
scas
cltd
mov
imul
nop
sub
sbb
rorb
sbb
nop
add
push
lock
cmp
push
in
mov
call
sbb
outsl
inc
push
jnp
mov
jge
scas
je
jle
dec
sbb
sbb
ret
in
cmpb
xchg
fcoml
in
xor
add
push
and
jnp
sbb
xor
aam
dec
mov
int
aam
xor
bound
mov
xor
rorb
sbb
js
and
sbb
negl
adc
xor
or
idivl
les
adc
jmp
sbb
ret
or
pop
pusha
and
fisubl
mov
sbb
or
or
inc
sub
loope
fmuls
pushf
popa
push
jnp
je
mov
adc
or
aad
repz
fs
in
jl
movsb
xor
or
jmp
jle
mov
mov
sbb
xor
jbe
shll
inc
daa
xchg
js
addr16
dec
mov
fisubl
push
pop
sub
pop
mov
mov
lods
cs
lret
lcall
fldt
daa
pop
adc
inc
enter
mov
and
jle
mov
test
mov
into
mov
lahf
dec
in
cmp
ss
in
cmp
in
nop
adc
shlb
es
lds
cwtl
mov
add
sub
push
jo
mov
jo
stc
sub
subb
mov
adc
dec
mov
add
add
and
mov
lds
or
pop
movsb
dec
cmp
or
or
pop
mov
add
inc
mov
lea
mov
and
in
psubsb
cmp
inc
ss
cmpsl
xor
or
push
push
xchg
lret
jmp
add
cli
cmp
pop
push
sbb
push
sub
dec
push
sbbb
addb
mov
or
push
add
jnp
aam
xor
outsb
and
add
sbb
add
sbbl
add
hlt
call
xor
cmp
incl
sub
sbb
inc
xchg
decl
inc
ds
and
hlt
pop
add
dec
filds
out
pop
cmp
movsb
pop
jp
inc
mov
cli
add
fcomps
cmp
nop
dec
lds
lea
sarb
orl
push
mov
mov
insb
sbb
push
mov
xchg
pop
or
add
ds
add
and
inc
ret
mov
aam
call
andb
pushf
int3
push
push
pop
loopne
xchg
add
test
or
pushf
loopne
jg
and
push
dec
stc
jae
addr16
pop
add
call
add
add
push
psubsb
sbb
inc
sarb
orl
or
or
nop
mov
jg
xlat
add
push
lock
mov
sti
mov
pop
jne
es
push
data16
stc
lods
add
aam
or
mov
fcmovnb
mov
jp
xchg
mov
cs
rcrl
pop
ds
ja
push
movsb
push
test
out
mov
js
je
dec
cmp
cmpsl
push
jg
inc
lcall
js
mov
sarb
sbb
xchg
inc
int
push
inc
insb
dec
push
and
add
and
add
add
shll
push
arpl
mov
cmpl
add
sub
cmp
adc
sbbb
pop
push
xor
adc
mov
and
aas
cmp
stos
pop
add
adc
jae
loopne
sbb
cs
movb
ret
mov
inc
mov
xchg
sub
push
adc
ficoms
inc
jle
push
push
adc
arpl
mov
inc
add
incb
xchg
enter
sub
jbe
push
xor
add
adc
fcoms
test
sbb
dec
fimull
push
push
push
inc
sub
push
sub
pop
inc
jbe
loopne
orb
inc
add
notb
pop
sbb
inc
les
lods
insb
add
hlt
sbb
pop
enter
fisubrs
push
test
or
pop
or
in
aaa
stos
dec
inc
mov
enter
jo
jp
jge
xchg
mov
arpl
lret
es
into
hlt
je
rolb
movsl
inc
add
hlt
push
test
jb
add
lcall
sbb
shll
cltd
jnp
add
pop
adc
or
add
mov
dec
rorb
xor
aam
add
sti
and
add
lahf
testb
adc
push
dec
dec
outsb
sbbb
sub
lock
push
mov
add
cmp
lock
data16
adc
push
or
xchg
shrb
sub
popl
inc
popa
fldenv
xchg
lods
paddsw
sahf
sub
or
rorb
cmp
sbb
dec
pop
movsb
mov
in
adc
push
xchg
dec
data16
add
mov
jle
sub
push
jg
add
inc
push
add
sub
insb
insb
fsubrl
and
mov
sbb
aam
adc
push
cld
push
cmp
jmp
outsb
mov
repz
stos
inc
cs
push
stos
in
or
outsb
xchg
sbb
push
jg
sub
cltd
nop
lahf
sub
mov
mov
pop
mov
in
imul
je
dec
push
and
iret
push
das
adc
add
sbb
xchg
cmpl
inc
xchg
sbb
xchg
inc
push
add
out
cwtl
nop
lahf
or
mov
lods
int3
and
mov
in
and
pop
repnz
mov
das
pop
and
lea
sbb
cmp
ja
enter
clc
push
pop
mov
dec
sub
push
sub
jg
and
xchg
mov
inc
cmp
add
xor
and
adc
and
xor
movsb
adc
nop
inc
cmp
or
pop
sbb
sbb
add
push
push
dec
enter
or
push
popw
inc
xchg
pop
ja
or
push
inc
roll
inc
add
gs
push
mov
inc
push
in
inc
dec
dec
enter
in
ret
mov
sbbb
jmp
push
and
sub
mov
push
xor
jecxz
push
mov
out
insl
sti
mov
add
fnstenv
xchg
and
push
imul
stc
cmp
mov
cmp
int
imul
lret
pop
push
dec
fisttps
adc
pcmpeqw
add
xor
in
fistpl
call
add
mov
in
mov
push
sbb
pop
cli
adc
pop
jmp
pushl
dec
inc
movsl
sub
ficoml
mov
loope
xor
sub
jo
lret
dec
loopne
or
jl
roll
fsubrl
shll
lods
adc
mov
push
sbb
cwtl
push
movsl
js
or
xor
cmp
sbb
pop
sbb
daa
xchg
or
push
arpl
mov
fmuls
jge
jecxz
or
sub
cltd
scas
adc
push
mov
and
ds
mov
mov
mov
divsd
repz
loopne
filds
mov
lea
dec
scas
in
sub
push
cmpsb
call
lahf
mov
stos
jns
cmp
sub
cmc
testb
mov
push
mov
in
frstor
mov
add
xchg
or
push
shrl
out
jne
xor
push
std
repz
test
push
push
lock
lock
pop
add
pop
or
or
pop
mov
mov
inc
adc
int3
jns
mov
or
lock
sub
xchg
mov
cmp
push
outsl
dec
xchg
das
sub
movsl
test
cmp
or
rcrb
cwtl
insb
jb
jo
dec
or
push
add
arpl
and
nop
in
and
mov
insb
mov
lea
call
xchg
mov
scas
incl
sbb
sbb
lret
aam
or
xchg
push
mov
jge
cmpsb
jge
movups
test
add
mov
mov
cmovl
ds
push
adc
inc
aam
adc
movsb
lret
mov
ficoms
add
out
push
mov
xor
dec
cmp
cli
sbb
iret
out
out
fildl
add
push
and
movsb
add
mov
nop
add
pop
and
jb
sub
inc
mull
iret
into
nop
test
jae
scas
faddl
and
mov
cmp
mov
xchg
sbb
shl
pop
cmp
jne
sub
push
cmp
adc
push
pop
cmp
jl
ret
cmp
xorb
fidivrs
clc
push
mov
jmp
push
push
push
inc
pusha
mov
and
in
stos
mov
loopne
jl
inc
cmovo
mov
mov
mov
enter
adc
andb
jno
rol
sbb
cmp
aam
adc
or
je
push
int3
push
add
loope
int3
mov
and
call
je
push
sub
or
lret
cmp
mov
jle
cmp
xchg
pop
jb
sti
push
cmp
ret
push
pop
lcall
addr16
fdivs
push
xor
rcll
dec
stc
outsl
sbb
or
ja
add
loopne
les
cmp
mov
pushf
in
out
sub
popf
pop
enter
push
cmp
sbb
cwtl
add
or
ja
pop
pop
xchg
push
add
sbb
sbb
push
and
cmp
jmp
push
mov
add
pop
cmpl
mov
cmp
ja
mov
in
xor
push
xlat
push
repnz
cmp
xlat
adc
mov
aad
into
cmp
or
dec
jmp
lods
flds
jns
push
xor
sbb
adc
push
sub
add
mov
int
and
or
out
push
lods
or
cmp
rcl
mov
jge
in
xor
xorl
roll
jmp
orb
push
adc
cmp
sbb
cmp
jbe
and
mov
stc
mov
xor
inc
pop
push
adc
popa
insl
add
fwait
cmp
popa
jb
push
sub
adc
or
dec
inc
xchg
inc
mov
adcb
cmp
jbe
mov
rcl
arpl
and
mov
push
push
test
adc
push
or
jmp
adc
inc
lock
add
jbe
iret
mov
aaa
jle
lahf
leave
add
add
cwtl
xchg
ljmp
pop
loope
in
inc
stos
mov
outsl
out
lock
or
rolb
aas
mov
sbb
push
xchg
add
insb
jecxz
mov
adc
and
push
xchg
or
scas
in
xchg
cltd
adc
enter
inc
add
das
sbb
push
mov
xchg
and
adc
sub
or
ret
out
imul
or
inc
imul
in
dec
push
or
adc
popl
cmpsl
js
push
lods
incl
cmp
jb
lea
cmp
pop
mov
std
mov
cmpps
mov
cmp
or
add
mov
pop
mov
inc
ret
xor
mov
cld
jmp
rclb
or
je
fwait
add
xchg
movb
js
loope
inc
cmp
sti
and
pop
andl
shl
pushf
xor
sbb
lods
repnz
mov
cwtl
lock
or
loop
xchg
or
mov
fcomp
inc
dec
cmpsb
nop
test
sahf
inc
jmp
leave
fcmove
push
insb
and
xor
lea
dec
pop
imul
out
shl
movsl
push
inc
lcall
and
and
ret
xchg
xor
out
fmull
xor
add
push
xchg
sarl
inc
adc
xchg
push
xchg
jno
jle
bound
add
or
fs
or
xchg
outsb
and
rcrl
dec
xchg
jp
push
mov
adc
inc
movsl
mov
scas
and
dec
and
jne
push
dec
and
xchg
pop
pop
and
or
cmpsb
shrb
add
ljmp
or
mov
mov
xchg
rorb
aas
jmp
pop
mov
pop
or
neg
xchg
push
cltd
lret
jg
xor
push
mov
sub
add
inc
mov
add
pinsrw
mov
cli
pop
adc
push
and
lods
loopne
mov
dec
push
push
push
adc
add
test
push
sbb
push
jnp
sahf
jge
mov
rep
std
mov
je
mov
in
cmp
enter
cmp
pop
lahf
cld
and
int3
or
pop
andb
fisttpl
push
sbb
sbb
popa
sbb
rcr
mov
push
sub
xorl
mov
ss
lret
lcall
push
mov
lods
sub
push
push
add
loope
sbb
arpl
loope
and
add
cmp
dec
in
and
data16
pushf
mov
jecxz
stos
mov
cmp
or
push
mov
rolb
pop
andps
cmp
adc
or
pop
orl
loop
pop
or
xor
sub
pcmpeqb
cltd
cmp
and
jo
inc
hlt
add
je
mov
ret
std
cmpsl
in
lods
push
pop
and
jl
push
clc
mov
loopne
rcrl
mov
cld
jecxz
lcall
sub
mov
aas
lods
mov
lods
imul
cmp
sbb
sub
lea
ret
push
push
add
mov
push
inc
inc
cmp
jb
loopne
ds
or
dec
and
les
dec
or
orl
or
imulb
cmp
pop
fadds
lret
out
cli
xchg
mov
cwtl
sub
shlb
sarb
push
push
push
cld
push
xor
outsl
mov
mov
inc
je
sbb
jp
inc
jno
or
enter
out
fcoms
and
std
jb
jo
inc
jecxz
sbb
push
cmpsb
pop
cmp
adc
fisttpll
cmp
pop
sbb
jl
push
imul
adc
or
test
das
je
or
ret
mov
dec
insl
sbb
or
xchg
insb
lock
pushl
jle
dec
add
jmp
sbb
aas
fldl2t
cmp
push
sbb
out
and
outsb
gs
xchg
shll
push
xor
mov
pop
mov
addr16
or
mov
in
aaa
fcoml
sub
pop
stc
repnz
xor
sbb
jns
jns
cmp
fs
js
pushf
addl
jns
in
test
lods
add
lds
pop
pop
or
addl
js
push
mov
inc
add
insl
fmulp
sub
cld
xchg
cltd
stos
add
fmuls
int3
repz
jno
call
or
push
nop
das
das
arpl
loopne
xor
orb
ljmp
add
adc
push
mov
or
cmpsl
in
mov
push
icebp
pop
ja
lea
xchg
es
insb
insl
inc
push
sahf
rcll
scas
inc
push
sbb
push
inc
sub
dec
jp
xor
push
xchg
xor
pop
and
pop
adc
mov
xor
test
pusha
jl
loopne
sarb
outsb
mov
imul
mov
xor
cltd
gs
inc
lods
push
cmp
loope
clc
ret
je
or
je
cmp
je
cmp
cmp
daa
sub
mov
cmp
insl
inc
xor
sbb
adc
cmp
test
test
test
scas
subl
or
mov
sub
dec
pop
fsts
adc
fucom
sti
rep
bound
push
outsl
aaa
dec
sub
jmp
sub
jae
sbb
sarl
not
and
arpl
loop
sbb
andl
push
sbb
and
jne
push
push
jg
jae
push
rolb
add
and
cmpsb
cltd
sub
jecxz
int3
loopne
adc
fsubr
mov
data16
inc
sub
adc
inc
out
adc
inc
cmp
fld
aaa
subl
loope
cmp
inc
mov
testb
shr
or
lcall
dec
imul
jg
push
sub
or
mov
rolb
and
xor
andl
sbb
mov
inc
sbb
js
sbb
add
or
sub
loopne
pop
dec
and
push
mov
mov
pop
sbb
or
cmp
sete
add
xor
xchg
push
sarl
cmp
mov
scas
cld
sub
or
xchg
jge
pop
mov
xor
mov
repnz
inc
jp
mov
push
ljmp
dec
clc
pop
adc
lea
push
lret
add
rcrl
mov
push
push
aam
xchg
sahf
aas
aaa
call
aad
popa
add
dec
pop
adc
and
push
sbb
je
nop
call
add
adc
push
mov
orb
mov
roll
or
adc
inc
out
leave
add
jge
aas
xor
and
ljmp
xor
pop
cmpb
out
sarb
rclb
mov
sarb
bound
inc
adc
arpl
add
les
mov
outsb
mov
inc
add
cmp
push
sbb
in
or
sarb
dec
jne
fadds
adc
or
add
addb
push
inc
sbb
or
rcl
jno
test
lahf
mov
popa
xor
and
je
inc
dec
rorb
fisubs
or
je
pop
cltd
cmp
jl
aad
loop
pop
sbb
cli
jo
cmp
movnti
lods
sub
subb
cld
sbb
bound
push
xor
sarb
adc
lods
xor
lock
adc
dec
mov
adc
das
ror
call
lret
dec
sti
leave
adc
inc
and
push
inc
mov
stos
xor
lods
xlat
and
movb
adc
mov
adc
adc
ds
jge
shrb
in
leave
andb
pusha
dec
inc
cli
adc
sysret
pop
add
cmpsb
push
add
xchg
jmp
std
data16
add
rdpmc
or
dec
and
jle
mov
xchg
ret
or
rcrb
insl
insl
push
adc
es
or
add
mov
pusha
push
cmp
or
cmc
imul
mov
outsb
cmp
je
and
outsl
out
adc
push
lret
sar
cmp
jbe
or
add
jp
cmp
jmp
ret
shll
dec
inc
pusha
in
adc
sub
jecxz
faddl
xchg
add
test
dec
mov
push
dec
xchg
or
lahf
pop
push
dec
rdmsr
mov
add
rcr
mov
js
fiadds
add
lock
cmp
adc
mov
fdivp
push
sbb
dec
pop
mov
cmpsb
xor
sbb
jo
cmp
rcll
pop
mov
xlat
loope
xlat
jl
pop
in
mov
iret
stos
or
and
lea
xchg
push
mov
or
push
adc
xlat
sbb
dec
xchg
or
xchg
pop
sbb
stos
xchg
inc
push
aas
shll
inc
dec
ret
or
js
dec
iret
pop
lods
add
xchg
pop
mov
mov
orb
sbb
or
inc
rol
orl
shrb
leave
or
jb
adc
xor
sbb
daa
pop
pushf
testb
stos
mov
sbb
enter
aad
mov
arpl
dec
add
jne
sub
outsb
sar
lea
jp
cmp
aas
add
push
cmp
jb
rcrl
mov
pop
or
sbb
xchg
pop
jmp
xor
jae
push
addb
push
add
or
and
sbb
mov
adc
int3
and
xlat
mov
dec
inc
test
mov
dec
movsb
dec
mov
push
fst
jp
xchg
push
pusha
cmpb
add
call
stc
stos
or
add
pop
sub
mov
sub
into
push
inc
rorb
mov
movsb
jmp
imul
lock
pop
xor
jmp
test
sub
test
inc
xor
dec
push
sub
mov
push
imul
xchg
mov
loopne
jecxz
dec
add
pop
mov
fst
add
and
inc
push
cld
cmp
push
push
pop
sbb
scas
in
sbb
push
es
add
cli
jbe
or
aas
mov
xor
or
jmp
add
lods
lea
jmp
mov
add
roll
sti
inc
mov
mov
sub
scas
adcb
inc
mov
ret
xchg
adc
add
adcl
test
rolb
adc
inc
mov
cmp
xchg
inc
sub
push
mov
iret
mov
add
mov
xchg
fcmovnu
xchg
lods
arpl
ja
adc
pop
jb
addr16
insl
add
aas
mov
out
enter
scas
inc
call
fmuls
ljmp
add
and
mov
dec
inc
movl
cmc
lret
out
add
or
push
inc
std
push
sbb
adc
adc
jne
push
cmp
andl
pusha
cmp
or
jo
out
inc
cmpsb
push
fwait
add
sbb
call
mov
and
inc
loopne
lods
and
dec
in
ret
sbb
push
nop
imul
xor
pop
push
or
inc
aas
pop
enter
fsubl
and
enter
in
add
or
and
add
nop
add
nop
es
sub
nop
add
test
mov
in
add
loopne
add
nop
sub
sbb
jb
or
jmp
push
pusha
cmp
pop
push
jb
inc
push
pop
jb
push
jne
cmp
and
cmp
mov
stc
adc
xor
jmp
in
loope
lods
in
sarb
cld
mov
pusha
push
movl
cmpsb
daa
nop
call
or
sbb
adc
andb
xor
sarb
inc
cld
lcall
or
mov
inc
adc
aaa
ret
js
inc
shr
adc
cmp
jecxz
and
sub
notl
dec
pushf
sub
sub
unpcklps
pop
push
loop
mov
sub
lcall
add
jae
add
jl
inc
lea
jmp
sarb
adc
rcpps
jne
mov
pop
inc
xor
cli
test
add
out
bound
xor
inc
nop
sub
lods
sub
filds
jmp
sti
inc
and
or
or
xchg
cmp
or
stc
push
xchg
loopne
test
dec
push
out
roll
loope
pop
lea
sbb
cmpsb
xor
or
rorb
inc
incb
sub
bnd
jo
ds
pop
test
mov
add
add
sti
jbe
stos
lea
or
and
mov
in
pop
leave
ret
push
adc
push
add
adc
loop
std
popa
add
out
cmp
sbb
hlt
xor
jne
push
icebp
mov
add
mov
repnz
fistps
ficoml
xchg
mov
add
mov
push
imul
dec
mov
mov
int3
or
shrb
lock
dec
xor
loop
mov
cltd
neg
cmp
and
mov
sahf
out
sbb
call
jo
imul
push
and
or
adc
cmp
dec
mov
jns
ret
jg
clc
test
pop
push
into
mov
push
cmpb
cs
and
jae
outsb
js
or
jge
xor
or
xor
cmp
leave
jo
movsl
adc
jb
mov
cmc
sub
jmp
insb
lock
xchg
sbb
gs
add
sbb
or
popf
rorb
in
jle
mov
fisttpl
xor
sbb
in
cmp
jg
lock
es
push
popa
and
sub
jne
dec
dec
jne
pusha
and
pop
pop
aaa
inc
cltd
lea
jbe
adc
adc
add
and
or
sbbl
add
lret
jo
loopne
fs
jl
inc
dec
stos
shll
push
inc
xchg
mov
loopne
ret
sahf
dec
or
pop
ss
or
add
aaa
imull
test
or
jae
cmpl
sbb
push
dec
inc
jg
jmp
add
or
add
push
mov
push
xchg
or
push
rcll
or
popa
addr16
inc
inc
xchg
xchg
loopne
and
push
mull
in
or
or
leave
jmp
mov
insb
cmpsl
repnz
add
push
movsl
lock
sbbl
jl
or
pop
movsl
pop
call
add
fstl
js
or
inc
fwait
xchg
test
pop
mov
in
fstl
xchg
cmp
pusha
sbb
push
dec
pusha
push
leave
and
sub
xlat
jmp
outsb
xchg
lret
out
mov
xchg
js
ds
movsb
shlb
push
pushf
lods
xor
mov
lock
mov
mov
cmp
icebp
cltd
nop
popa
das
add
aaa
adc
test
sbb
add
and
push
cwtl
mov
fwait
cltd
mov
orl
add
mov
sarl
decl
inc
mov
add
jl
cmp
int
cli
idivl
cmp
push
jp
or
pop
ret
aas
stos
mov
loopne
test
rcrb
jge
sti
mov
cmp
jge
mov
pop
and
cmp
mov
cmp
je
cmp
je
jne
pop
outsb
ffree
or
cmp
or
mov
imul
imul
aad
mov
dec
inc
sub
cwtl
call
push
leave
or
sbb
and
cmp
ljmp
hlt
mov
cmp
jl
pop
mov
inc
mov
iret
mov
add
ror
jge
mov
cmp
sahf
fs
jne
mov
push
jo
bound
mov
cmp
inc
dec
insb
xchg
lods
inc
add
sub
add
cld
lock
inc
mov
mov
add
lea
out
aam
mov
pop
push
xor
sub
dec
xor
lock
icebp
int3
prefetcht1
mov
push
pop
pop
outsl
xchg
pop
movsb
mov
sti
jge
xor
xchg
sub
cmp
cmp
add
mov
push
sub
scas
sub
push
push
in
push
xchg
js
adc
add
cmp
iret
arpl
xchg
out
push
pop
mov
cmpsl
mov
jne
mov
js
add
ds
sub
stc
movsb
add
nop
imul
je
inc
push
push
shll
inc
mov
pop
sbb
jb
add
jnp
cmpsb
ret
test
pushf
pop
sbb
insb
push
and
dec
mov
insb
insb
mov
decb
pushl
mov
cmp
jg
inc
ret
or
dec
inc
mov
test
mov
popf
dec
xchg
push
xor
ljmp
fistpll
add
xor
test
sbb
pusha
add
movsl
add
push
or
iret
repz
pop
pop
pusha
fs
rclb
and
popa
jne
shr
es
int3
jge
xor
xchg
xor
in
dec
in
sbb
pop
mov
jmp
ja
in
fisttpl
inc
dec
adc
add
add
jno
add
cmp
and
cmp
jb
sbb
sbb
xchg
add
pop
and
loopne
pop
outsl
jp
push
add
push
xor
outsl
orb
cmp
aam
add
loope
push
sbb
jne
inc
mov
pop
pop
sbb
jnp
int3
pop
data16
lock
lahf
add
sbb
leave
in
push
call
fldl
ljmp
data16
and
cmp
or
pushl
roll
lahf
test
loop
jbe
mov
and
cltd
sub
loope
push
inc
inc
xchg
add
cmp
scas
adc
dec
and
inc
bound
push
ljmp
std
pop
mov
movq
js
add
xor
cmp
cmp
and
xchg
add
lock
cld
push
lcall
pop
mov
add
add
push
inc
shrb
fs
push
xchg
and
and
jae
or
test
cmp
push
movb
inc
sahf
push
sub
push
cwtl
loopne
push
add
or
push
push
ret
pop
pop
ret
mov
ror
or
mov
or
pop
je
sti
pop
add
aaa
add
bound
mov
push
fnstsw
shlb
mov
sub
inc
repz
mov
add
pop
xchg
movl
xor
cmpsl
test
xchg
pop
fmull
lea
mov
dec
out
call
mov
cmp
je
or
je
mov
dec
cmpb
jg
mov
push
add
pop
test
push
inc
rcrl
pop
popa
lea
nop
mov
arpl
xor
mov
xor
mov
je
push
jle
sbb
jne
and
jne
push
dec
mov
in
mov
mov
pusha
movsb
or
push
in
mov
mov
sub
mov
mov
orb
je
lahf
push
in
adc
sub
jnp
repz
fs
inc
rcrb
jno
add
push
icebp
ficompl
aad
mov
rolb
or
cld
pop
cmp
fs
lds
adc
and
or
test
ss
shll
aam
xor
mov
les
ret
pop
add
add
repnz
pop
xchg
jo
dec
andb
fmull
fwait
inc
es
popa
sbb
ret
add
cmp
pusha
pop
popa
icebp
loopne
pushf
pop
xchg
pop
sbb
push
mov
pop
lret
cmp
ss
add
sub
aaa
add
push
fildll
and
sub
sub
inc
lret
mov
add
rcll
lret
lock
add
ljmp
sbb
pop
stos
movsb
int
lcall
sub
adcl
add
pop
rolb
cwtl
pop
inc
pop
ret
inc
sub
pop
mov
push
cld
mov
xorps
fimuls
dec
sub
je
ficomps
pop
fldcw
hlt
lret
daa
add
push
cld
cmp
inc
push
push
pusha
pop
mov
ret
push
xchg
add
in
mov
mov
fwait
test
int
mov
cmp
push
je
mov
jle
mov
dec
adc
shrl
mov
fdivrl
inc
add
ficoms
or
jnp
movsb
or
jns
jb
pop
call
xchg
adc
dec
cmpsb
mov
insb
add
jnp
adc
or
add
gs
lret
scas
jmp
cmc
adc
sbb
xchg
rolb
pop
mov
dec
mov
fucom
xchg
add
adc
sub
fsts
add
jb
fwait
stc
cwtl
mov
xchg
int3
cmp
in
cwtl
cwtl
fwait
or
pusha
jmp
test
imulb
mov
mov
mov
add
jb
jmp
andl
lret
sbb
cmovle
or
push
push
and
xorb
out
sub
push
inc
or
or
rolb
mov
sbb
sub
movsb
ret
cmp
pushf
ljmp
pop
jnp
subb
lods
cmp
push
lods
js
sbb
jae
cltd
leave
xchg
cmpsl
repnz
dec
sbb
push
inc
sbb
jae
jae
push
or
divb
jo
mov
cmp
ret
or
inc
test
cmpsb
dec
movsb
add
hlt
sbb
cmp
jle
dec
test
push
je
sub
sbb
pop
xor
aad
les
dec
add
fcomps
sti
dec
pop
je
movsb
fsubrp
push
fldl
pop
push
push
fstpl
add
add
pop
cmp
fistl
inc
add
bnd
push
divb
or
cld
cmp
clc
jne
or
jne
or
gs
sar
leave
lods
push
flds
shrl
andl
nop
enter
icebp
push
inc
in
pop
inc
shrb
lcall
in
xchg
les
lock
addr16
aam
xchg
or
lret
in
jle
or
mov
cmp
inc
add
lea
movsl
cmp
mov
or
outsl
push
into
in
sbb
cmp
sbb
adc
imulb
jae
dec
push
lea
pop
dec
pop
push
sbb
scas
ret
push
sub
aam
add
xor
sahf
pusha
mov
mov
fstpl
add
aam
pushl
fwait
add
repnz
in
ficomps
or
fimuls
sti
movsl
pminub
or
hlt
push
sub
sbb
jnp
and
inc
mov
xchg
adc
imul
mov
fcmovu
or
or
jmp
cmp
sub
push
pop
mov
sbb
push
jbe
pop
sub
mov
dec
adcl
and
icebp
sub
daa
daa
jns
jge
and
aad
dec
mov
xchg
popf
push
clc
pop
push
add
mov
jle
ds
jo
mov
push
xchg
cmp
shll
pop
in
es
pop
pop
adc
pop
mull
and
ret
adc
push
pop
jo
or
dec
test
sbb
pop
mov
mov
pop
sbb
insl
adc
cmp
mov
push
dec
lds
and
gs
arpl
or
or
xor
adc
repnz
lock
adcb
inc
arpl
test
fwait
inc
or
dec
clc
xchg
sbb
nop
sub
icebp
jbe
jecxz
js
pop
pusha
mov
or
add
push
nop
adc
dec
mov
push
test
mov
lcall
cmpl
rclb
pop
xchg
xchg
or
enter
push
or
mov
add
adc
enter
or
shlb
mov
imul
or
and
cwtl
aas
sub
nop
aaa
inc
xchg
inc
jo
loopne
xchg
push
dec
mov
in
outsb
dec
xchg
xchg
call
mov
xchg
adcb
xchg
push
push
xchg
xchg
xchg
xchg
enter
xchg
xchg
xchg
xchg
mov
fldl
and
dec
jo
mov
sbb
mov
push
mov
mov
lods
dec
shll
or
sub
adc
push
xchg
imul
add
push
push
rolb
xor
pop
cld
lret
in
xlat
pop
ret
cs
arpl
or
test
jge
cmp
jle
lahf
jns
push
cmp
daa
adc
pop
cwtl
mov
js
add
add
add
shr
and
psubq
mov
arpl
jp
push
fs
add
int
fldl
scas
or
loopne
sbb
jo
divl
jmp
in
cmp
jl
push
jb
pusha
inc
into
push
pop
enter
add
inc
loopne
adcb
movb
add
add
imul
or
pushf
loopne
add
add
or
or
push
sub
rorb
mov
xor
xor
mov
mov
mov
push
xchg
shrl
push
call
and
push
aad
data16
sub
orb
lods
orb
lods
or
pop
scas
clc
mov
dec
jl
cmp
repz
add
shll
mov
mov
fnstcw
xor
fsubrl
pusha
fst
ja
subl
add
dec
ss
push
push
cmp
dec
adc
dec
xor
add
fcoms
sbb
mov
push
scas
lahf
shlb
dec
aad
sub
xchg
xchg
pop
fdivs
sbb
mov
test
sbb
pop
mov
shll
mov
es
jo
sbb
lret
fmull
loope
mov
xor
or
xchg
pop
in
sub
lcall
pop
sbb
orb
loopne
mov
push
movb
add
pop
jle
es
callw
cmp
pop
pop
push
mov
cmp
sub
dec
push
sub
jns
pop
xchg
adc
sbb
pop
xchg
jne
or
cs
and
push
jge
mov
push
mov
sahf
xor
into
pop
rclb
in
and
jnp
jb
xor
mov
mov
pop
mov
adc
gs
scas
dec
sbb
cmp
stos
dec
or
xchg
scas
xchg
mov
push
je
clc
sub
out
shlb
add
push
movsl
and
into
sub
mov
jne
lea
push
icebp
cmpl
into
inc
inc
std
cwtl
jge
lea
sub
xor
add
cmpsb
mov
sbb
xchg
bound
mov
mov
or
adcb
test
sar
and
ret
dec
inc
divb
clc
into
inc
or
jbe
push
dec
jne
inc
mov
jo
push
xchg
cs
add
mov
in
jge
shl
sbb
aam
and
push
jo
mov
jecxz
jbe
or
data16
or
dec
mov
movsb
pop
movsb
and
sbb
mov
test
push
pusha
sub
in
jge
out
jb
push
jmp
repz
rcrb
xor
dec
sbb
and
lret
jl
sbb
ds
lock
popa
mov
xchg
lds
mov
cmpsl
xchg
cmp
test
push
xchg
xchg
mov
stos
fistps
aad
loope
popa
mov
adc
add
arpl
popa
add
inc
and
or
mov
lods
mov
lcall
sbb
fists
rclb
mov
loope
pop
inc
or
or
mov
lods
mov
sub
add
pop
xor
adc
rcrl
jp
in
jmp
rcrb
insb
inc
imul
add
jp
push
lods
adc
mov
andl
addl
or
mov
jl
mov
add
and
xorl
xchg
xchg
and
or
mov
int
and
clc
pop
js
scas
lock
or
add
popa
mov
dec
cmp
out
movsb
pop
test
test
jo
or
xchg
pop
movsb
mov
ret
popa
or
add
popa
mov
rcr
push
orl
aaa
sbb
fildl
jns
bound
fstpt
pop
dec
ss
test
insl
or
pusha
jbe
loopne
nop
cltd
repz
je
mov
push
inc
or
not
aaa
jno
cmpsl
push
push
lret
add
push
or
dec
adc
ret
xor
dec
or
stc
cmp
fwait
xchg
popf
call
dec
mov
orb
cmp
dec
jmp
push
push
jg
mov
mov
dec
jl
push
inc
andb
fisttps
lret
incl
ss
push
sub
add
dec
mov
cmpsb
inc
adc
xchg
cmpl
add
jo
shll
cs
jbe
fs
mov
cwtl
cltd
dec
pop
or
ret
mov
push
sub
fs
fs
push
pop
xor
aam
in
cmpsb
xor
add
xor
add
push
movsl
xchg
or
xchg
lock
sbb
ret
add
fmuls
movsl
out
lea
or
sub
push
sbb
or
mov
rcll
mov
push
pop
stc
aaa
inc
ljmp
sub
lea
and
jp
ds
pusha
mov
popa
jnp
xor
ljmp
sbb
jg
addb
xchg
mov
cmp
xchg
outsl
add
mov
sahf
sbb
jne
cmpsl
clc
jno
in
aaa
xchg
test
mov
push
lock
add
out
mov
jne
inc
inc
negb
push
shll
cld
js
xchg
or
fdiv
sbb
les
mov
rcrb
mov
cmp
cmp
in
pop
popf
xor
lahf
inc
sbb
test
dec
test
inc
push
dec
add
sahf
xchg
xchg
mov
add
addr16
fstpt
fnsave
fists
inc
add
xchg
sub
cwtl
fsubl
push
data16
ret
inc
or
lcall
in
push
or
cmp
es
cmp
cli
adc
js
inc
sbb
sbb
and
out
js
shlb
add
out
adc
and
dec
outsb
add
cmp
push
jbe
subb
lahf
mov
adc
add
jmp
in
lds
mov
leave
dec
adc
sbb
js
sub
dec
sahf
xchg
scas
add
pop
or
sahf
aad
inc
inc
data16
add
push
andl
xor
pushf
push
cs
push
pop
pop
cmp
popa
repnz
mov
push
or
sub
outsl
call
xchg
xchg
movsb
jb
and
inc
add
fstpl
orb
or
cld
sub
sbb
inc
sahf
and
xchg
inc
dec
push
idivl
mov
and
ljmp
mov
jmp
lcall
xchg
inc
popf
cmp
in
sub
sbb
idivl
cmp
cmp
xchg
push
inc
push
sub
mov
add
cs
xor
fs
xchg
ror
je
or
in
lods
jnp
cmp
sub
push
and
aad
cltd
sbb
dec
sbb
xor
pop
jae
out
xor
jo
bound
inc
xor
in
xor
jo
push
out
cltd
add
and
addb
push
lcall
inc
jbe
test
scas
adc
or
jmp
mov
push
xchg
and
lea
rcr
push
sub
mov
lret
add
and
nop
and
and
inc
sbb
push
faddp
and
pop
lock
addl
cmc
lods
xlat
and
pop
cmp
in
sahf
jle
and
mov
pop
xchg
sbb
or
pop
popa
mov
or
adc
aas
arpl
es
ror
pop
sbb
roll
adc
xor
addl
push
pop
cmp
test
and
outsb
in
ret
inc
andb
test
cmp
dec
mov
addl
mov
add
xor
inc
add
test
pop
inc
call
addl
cmp
sub
xor
inc
and
bound
inc
fisttpl
and
out
xor
add
sbb
iret
adc
and
mov
pusha
stos
cmpsl
xor
stos
inc
lods
movsb
inc
inc
inc
testb
pop
idivl
add
jl
inc
in
int3
add
jge
adc
xor
and
aaa
jo
mov
cmc
dec
int3
dec
push
sbb
push
mov
adc
outsb
dec
lock
nop
in
jne
rclb
pop
lret
cmp
out
jne
sbb
jnp
or
add
or
out
pop
adcb
rolb
sti
sub
int3
push
out
xchg
fstps
dec
or
stos
mov
sbb
fstps
sbb
shrl
adc
daa
push
or
mov
inc
mov
insb
sbb
sub
test
xchg
mov
xor
popa
sbb
je
cld
push
hlt
mov
and
xor
aas
lea
push
push
ja
mov
xor
data16
cmc
cmp
jne
sahf
ja
mov
inc
into
add
in
fisttpl
fs
sub
lock
adc
mov
fisttpll
lcall
or
or
and
je
mov
clc
inc
pop
jle
jbe
push
cmpsb
sbb
fcmovu
loopne
lret
mov
mov
mov
repnz
inc
cmp
jb
pop
pop
pushl
push
mov
push
iret
pcmpgtd
clc
mov
adc
push
add
and
cmp
mov
and
leave
inc
jmp
ret
sbb
mov
adc
mov
outsl
jmp
cli
shll
cmp
or
dec
jl
addr16
push
lcall
jecxz
pop
adc
add
jge
js
or
lea
testl
lea
inc
xchg
or
test
jo
rcrb
pushf
or
add
inc
mov
cmp
lds
leave
jne
inc
pusha
add
rorb
ret
add
inc
xor
add
dec
loop
stos
jb
in
add
int
ret
adc
mov
test
mov
add
xor
aas
cli
fdivs
xor
add
mov
sbb
ja
lcall
inc
xchg
mov
enter
rorb
and
mov
mov
je
movsl
ds
mov
add
icebp
lcall
cmp
or
jo
test
shlb
add
push
cmc
mov
negl
dec
sub
daa
sbb
jne
cmp
fisttpll
fldl
sbb
fdiv
fnstsw
test
je
and
sbb
jmp
ret
jecxz
movsl
roll
mov
jp
add
int
aas
jg
into
adc
sbb
fsubrl
aam
bound
xchg
pop
push
fnstenv
dec
mov
sbb
cli
fbstp
jl
or
fsub
pop
fsubrp
adc
pop
xor
jge
es
popf
mov
cltd
xorl
jl
fsubrl
add
xor
xor
popa
out
shrl
in
scas
popf
mov
dec
sar
sub
dec
je
add
and
js
push
sbb
cmpb
lods
stc
push
push
push
stos
mov
pop
push
loopne
cmp
enter
jbe
addr16
mov
pop
pop
mov
movsb
sub
sbb
dec
nop
icebp
xchg
inc
pop
xchg
fucomip
pop
jmp
push
sbb
pusha
and
xor
lret
inc
xor
jbe
out
cwtl
push
enter
push
in
mov
pusha
fwait
adc
iret
sub
push
mov
xchg
punpckhbw
push
pop
sahf
hlt
or
add
lea
sub
cmpsb
popf
movsb
inc
jge
dec
daa
xor
mov
sbb
and
in
and
clc
jmp
xchg
pop
lahf
sbb
push
xor
fcmovne
jbe
inc
cs
fdivrs
sahf
mov
or
pusha
and
push
inc
je
or
mov
rcrl
in
lods
pop
jp
lahf
push
jbe
scas
sub
pusha
or
add
pop
sbb
and
mov
sbb
sbb
sub
xchg
and
repnz
push
lods
add
mov
fs
xor
add
push
mov
pop
cmp
xor
mov
repz
push
push
mov
lods
pop
clc
and
push
mov
jne
aaa
enter
in
test
jne
iret
xchg
addr16
push
mov
mov
out
pop
cmp
xor
sub
xchg
push
push
sbb
js
and
aas
jbe
outsl
movsl
pop
je
adc
or
mov
inc
cwtl
aas
ljmp
lods
jbe
mov
xchg
testb
notl
and
sbb
mov
push
sbb
sbb
and
xor
pop
mov
sub
pop
jge
insb
aam
cmpl
adc
cmp
repz
adc
cmp
repz
pop
push
mov
repz
cltd
iret
fsubrp
cld
or
sbb
cmp
jns
out
fs
nop
pushf
out
sahf
out
mov
repz
cli
or
pop
repnz
je
cmc
add
push
inc
je
adc
sbb
push
adc
int3
in
xor
xchg
mov
cld
and
mov
cs
push
lods
add
push
lock
and
mov
nop
and
add
adc
loope
mov
js
mov
sub
push
add
sbb
lcall
push
adc
cmpl
leave
in
rol
jne
push
je
add
push
imul
stc
jo
gs
sub
jge
lret
cmp
and
inc
sbb
cmpsb
sub
mov
or
scas
stos
cs
cmp
test
adc
sbb
into
push
push
jge
push
dec
cmp
shrl
sbb
mov
and
int
push
pop
push
rcll
add
lea
inc
movsb
xor
push
inc
scas
xchg
adc
loope
nop
sub
adc
mov
and
dec
sub
pop
call
fnop
or
add
add
inc
sub
addr16
sub
push
adc
in
arpl
and
and
add
mov
ret
stos
push
in
sarb
stos
jne
cwtl
aas
lds
lahf
mov
test
adc
enter
mov
orl
sub
or
add
dec
testb
mov
sub
xor
flds
mov
pop
mov
loopne,pt
xchg
in
loopne
icebp
add
inc
scas
sub
call
dec
in
add
lea
jne
out
xchg
mov
or
fisubl
xchg
test
add
mov
in
inc
roll
or
xchg
lods
or
xchg
test
roll
shlb
push
xorl
adc
out
add
lods
ja
mov
stos
adc
and
mov
stc
shrb
test
and
push
or
add
or
or
inc
dec
xor
mov
loop
or
inc
rclb
add
mov
mov
pop
in
shll
xor
movsb
adc
adc
jb
out
add
cvttps2pi
push
std
stos
inc
popa
cmp
sub
add
sub
xor
mov
sub
and
mov
push
push
test
adc
lods
push
test
push
sbb
mov
add
mov
lret
leave
add
add
add
mov
cmp
in
xchg
adc
sbb
push
push
push
test
push
leave
xchg
or
dec
inc
stos
mov
mov
out
insl
sub
pop
sbb
dec
mov
adc
or
cmp
xor
rol
add
pop
and
inc
lock
xchg
bound
push
inc
dec
xchg
pop
mov
sub
repnz
add
and
fmul
and
push
adc
xor
push
sub
jo
popa
inc
sub
icebp
sbb
stos
pop
test
dec
add
std
call
rolb
testl
addb
pop
add
dec
xchg
xchg
dec
push
cld
fs
or
jb
adc
mov
mov
add
in
or
jbe
or
inc
test
cmp
sbb
add
mov
fwait
les
or
sbb
inc
sub
popl
in
sub
inc
mov
cltd
jns
add
pop
testb
ds
push
mov
outsl
jno
rorl
add
adc
sbb
test
orb
rorl
pop
test
and
leave
or
push
add
xchg
scas
aam
push
enter
jmp
les
cmc
cmp
fmuls
ljmp
and
mov
jge
mov
movl
iret
cmpsl
push
or
mov
cwtl
sbb
stos
lods
mov
lods
adc
cmpb
add
or
and
enter
and
pop
enter
and
adc
sub
push
scas
dec
add
sub
jl
mov
add
cmp
test
imul
or
xor
or
rcll
or
dec
inc
xor
mov
mov
addr16
or
or
sbb
sbb
cmp
push
inc
notb
mov
adc
pop
and
push
add
cmp
xchg
es
jae
inc
sub
pop
add
xchg
sub
gs
mov
xchg
dec
dec
add
in
in
out
ds
push
or
sbb
xchg
pop
mov
fs
arpl
lret
sbb
mov
or
cmp
add
repz
clc
dec
mov
xor
sbb
jg
ret
cs
xor
and
or
pop
mov
cmp
pusha
rcl
movsl
dec
dec
shr
add
adc
rol
lea
movsb
adc
pop
test
dec
insl
cmp
xchg
sbb
pop
mov
pop
add
pop
andb
aad
push
xor
loopne
hlt
aam
out
pop
adcb
sub
stos
loope
movsb
lret
mov
pop
pusha
jmp
fstpl
cmp
lods
leave
shlb
add
adc
sub
mov
jecxz
or
mov
sub
fwait
outsl
or
or
fdiv
fimull
adc
pop
stc
cmpsl
pop
mov
orb
mov
sub
cmp
dec
push
sbb
mov
mov
nop
xchg
jns
or
jmp
movsb
cmp
or
jne
or
fldl
add
out
enter
inc
dec
loope
pop
inc
mov
divl
clc
insl
loopne
push
jp
xchg
cwtl
sar
jne
pop
sbb
push
pusha
sbb
push
test
dec
cmp
insb
lods
daa
sbb
xchg
loopne
mov
popa
out
xchg
adc
push
push
xlat
xchg
andb
mov
shlb
jbe
adc
xor
and
es
push
and
aaa
dec
sti
pop
aas
dec
pop
inc
cmp
pop
mov
xor
daa
call
std
add
cmp
jmp
sbb
in
iret
push
jns
fmuls
push
loop
lods
je
add
pusha
lods
jne
add
add
lds
mov
xchg
sbb
jae
pushf
push
and
push
jns
and
inc
push
loopne
mov
xchg
sbb
inc
ret
add
push
jmp
push
lods
in
push
sbb
cmc
dec
leave
adc
sbb
mov
lret
ret
push
bound
orl
fsubrl
push
or
int3
inc
add
pop
add
mov
cmp
outsb
push
sbb
dec
jmp
cmp
mov
rcrl
cmp
pop
cwtl
mov
pop
lfs
mov
jno
and
xchg
mov
ja
in
lods
or
fmul
stc
mov
call
aaa
sub
aam
dec
popf
shll
imulb
ret
or
mov
or
shr
and
cli
inc
jl
or
sbb
popa
sub
add
cmp
je
mov
mov
pop
dec
clc
decl
add
inc
jmp
movb
mov
push
cltd
xor
stc
movsb
mov
fstp
in
cmc
lds
jl
sub
mov
sbb
ffreep
inc
in
and
sahf
mov
mov
mov
lods
int3
test
int
sub
rolb
loop
dec
cmp
test
xor
mov
inc
xor
add
dec
aam
dec
add
dec
lahf
lret
inc
push
in
in
in
dec
movsl
jnp
in
incb
xor
or
push
add
cmp
mov
adc
jae
aam
cmp
daa
cmp
data16
xchg
ds
push
mov
mov
or
rclb
icebp
add
enter
or
rcll
mov
pop
xchg
test
movsb
push
stc
dec
jnp
rolb
int
aaa
xchg
scas
mulb
popf
and
pop
popa
adc
dec
or
dec
or
lea
inc
mov
outsl
shl
loope
enter
or
test
or
dec
mov
push
sub
push
fwait
lret
jp
mov
mov
xchg
test
add
add
lds
loop
ljmp
push
sub
xchg
adc
pushf
stos
mov
andb
or
xchg
inc
loop
enter
push
ret
jbe
xchg
lods
pop
cmp
mov
popa
test
mov
leave
aas
jp
shrl
push
iret
call
call
xor
mov
xor
jg
cmpsw
cmp
sbb
repz
loop
push
jl
cmp
sbb
imul
sbb
fs
cmp
jb
mov
xchg
mov
add
sbb
and
push
enter
enter
inc
jno
xchg
or
fdivs
jmp
leave
enter
adc
icebp
fcomps
nop
fnstenv
cwtl
jns
mov
aas
sbb
cmp
cmpb
and
mov
test
outsb
sub
outsl
pusha
pop
into
jae
jg
inc
inc
lcall
in
dec
pushf
daa
jns
jne
int
jo
jg
adc
repz
and
or
fisttps
cmp
and
fs
cmp
cmp
es
xchg
mov
fwait
fs
dec
jo
push
dec
mov
lods
movsb
pushf
jb
cmp
xchg
mov
dec
je
les
sub
call
mov
xchg
cmpsl
cmp
dec
mov
jl
sub
in
or
sub
hlt
int3
stos
lock
and
xchg
inc
out
cmp
std
arpl
je
out
mov
repnz
out
add
mov
pop
cs
push
jecxz
xchg
adc
das
mov
pop
push
and
in
int3
push
push
dec
sub
add
rorb
inc
mov
rolb
out
call
or
test
pop
inc
mov
or
clc
imul
dec
clc
mov
les
scas
int3
int3
faddl
cmp
aas
addl
add
inc
lcall
es
pop
push
popa
or
call
sub
inc
cmp
xor
dec
mull
sbb
inc
jl
aad
cmp
xchg
out
pop
insb
jp
inc
jmp
cmp
mov
je
or
sbb
scas
imul
or
cltd
sbb
sbb
ret
js
movsl
mov
xlat
inc
lcall
pusha
daa
push
pop
or
jae
mov
xchg
mov
jmp
sbbb
inc
out
sub
inc
fnstenv
or
shr
inc
rcll
shl
ljmp
mov
or
mov
inc
leave
repz
subb
bound
dec
cmp
es
inc
es
adc
test
jl
sub
jnp
xchg
cmpsb
pusha
dec
idivl
in
mov
cmovl
cld
cmp
je
adc
or
push
rclb
sub
loopne
je
mov
imul
fsubrs
sub
ds
push
add
js
ss
daa
leave
and
adc
dec
shlb
xchg
cmpsl
push
test
or
shlb
xor
lods
subl
and
mov
inc
popf
lods
inc
repnz
inc
sahf
add
outsb
shlb
or
or
and
mov
fs
fsubl
adc
jae
loope
pop
fsubrs
inc
xchg
in
add
dec
lds
mov
mov
sub
push
xchg
dec
int
sbb
daa
xchg
cwtl
cmpsb
adc
sub
roll
aas
popa
sub
dec
ja
lcall
iret
sub
xor
addr16
rolb
jmp
xchg
adc
inc
jns
inc
add
add
or
or
xchg
fwait
mov
add
hlt
jge
pop
ret
mov
and
ja
jmp
hlt
sbb
lret
and
sbb
add
rorb
movsbl
enter
or
ret
sbb
cmp
loopne
or
incl
repz
xchg
xor
fisttpl
push
ss
rclb
aas
ss
mov
push
add
xchg
jbe
xchg
pop
pop
push
in
rorb
call
ret
cmp
add
orb
push
inc
mov
movb
cmp
adc
js
sbb
fldl
test
cmp
pop
test
sub
ror
repz
adc
pushf
arpl
xlat
dec
scas
popf
push
pop
es
int3
and
push
push
pop
into
cmp
fisubrl
inc
loop
jne
cmp
loopne
dec
movsl
push
and
sbb
jl
cmp
or
adc
out
jmp
add
add
fisubl
sbb
xor
adc
jge
mov
xor
outsb
in
fidivl
iret
push
enter
ss
loop
dec
jae
fmull
add
cmc
in
push
fcoms
mov
mov
movl
mov
dec
addl
enter
repnz
adc
test
add
icebp
test
add
aam
rcll
ljmp
dec
jmp
mov
push
lret
cltd
push
adc
fdiv
push
cmc
clc
push
lods
push
adc
ret
xorb
jns
loope
or
mov
lea
movsb
mov
cmp
pop
shrb
cltd
push
and
add
add
lods
sbb
test
rcrb
jge
cmp
orl
jne
aas
pop
test
adc
add
or
fs
sbb
shrb
dec
in
cmp
xor
shlb
adc
int3
mov
cmp
xor
or
or
fs
int3
daa
push
nop
adc
rolb
jns
lret
push
dec
pop
xor
mov
add
daa
adc
decl
popa
push
xor
and
sub
mov
jge
mov
add
popf
or
push
lock
mov
pop
mov
cmp
cmp
cs
mov
adc
lret
rorl
cmp
scas
pop
mov
push
cmp
dec
cmp
push
inc
cmp
xor
ljmp
in
es
sbb
scas
adc
pop
call
add
rcll
loop
sub
push
sbb
ret
mov
sub
pop
leave
cltd
aam
push
push
sbbl
into
and
out
hlt
jecxz
repnz
and
js
movb
lods
sub
test
adc
sub
adc
cwtl
and
add
xor
jle
cmp
mov
fsubrs
std
cmp
je
es
cmp
jne
pop
addl
xchg
xor
addb
add
mov
push
stos
movb
sbb
fs
nop
pop
xor
add
test
lock
cmc
push
loopne
xlat
sbbl
sbb
adc
fwait
dec
popf
and
add
jno
add
cltd
lods
dec
sbb
cltd
adc
dec
ret
popl
enter
arpl
out
rorb
cmp
xor
adc
or
or
add
sub
and
add
and
mov
dec
out
cltd
in
push
cmp
lods
add
test
cs
lock
xchg
jmp
loope
push
jl
xor
loop
outsl
fdivrl
decb
cwtl
inc
js
lock
ja
and
aam
push
pop
in
xchg
adcb
imul
movsb
sbb
pop
adc
and
or
jo
sbb
xchg
mov
pop
pop
inc
hlt
cmp
mov
mov
dec
inc
in
push
mov
mov
adc
push
mov
scas
or
lock
fisubl
or
leave
push
outsl
lea
push
xchg
inc
xor
loopne
pop
or
imul
jp
mov
in
arpl
xchg
data16
jne
mov
lods
outsb
addl
push
pop
dec
popa
rcrl
fistl
pop
sub
xchg
mov
aam
loopne
orb
movsb
test
push
loopne
mov
or
loop
add
or
sub
push
adc
orl
adc
or
and
jo
or
data16
add
add
in
and
jl
imul
dec
std
mov
add
lods
adc
or
jecxz
and
lods
adc
mov
add
push
push
push
push
imul
xchg
adc
adc
es
inc
cwtl
das
push
in
jge
sti
mov
inc
push
or
pop
rcrb
mov
inc
mov
or
adc
fstl
xor
mov
sub
dec
adc
in
loop
cwtl
adc
jmp
jo
cmp
cmp
inc
sub
xor
xor
sub
daa
add
adc
or
jecxz
dec
push
xchg
lret
rclb
decb
ljmp
divl
dec
xchg
xor
sbb
add
jbe
xchg
clc
nop
push
push
lods
mov
and
pop
lret
lea
xor
add
ja
jne
mov
add
push
cltd
jb
imul
daa
je
loope
sahf
pop
mov
add
xorb
pop
or
fistpll
add
xchg
xor
cmp
test
sub
or
cmp
add
inc
cmp
jb
dec
nop
xor
jg
sbbb
adc
xchg
and
and
inc
cmp
jae
mov
push
xchg
mov
mov
sub
push
out
es
mov
daa
decb
add
mov
ret
cli
push
lock
ret
nop
roll
mov
rol
ret
push
pop
pop
pop
loope
icebp
add
fyl2xp1
xor
test
adc
inc
jbe
add
movsl
mov
std
dec
push
inc
aam
adc
pop
sub
add
cmp
adc
mov
add
mov
mov
and
dec
inc
mov
fwait
sub
push
add
add
mov
inc
loopne
jb
add
lods
sub
push
add
jmp
dec
push
dec
add
mov
sbb
sbb
xor
jmp
sbb
cmp
or
sbb
daa
xchg
ljmp
ds
lods
pop
icebp
or
addb
add
xchg
cwtl
xchg
mov
insl
and
mov
lock
or
int
enter
adc
push
mov
xor
xor
sbb
mov
test
jge
int3
loopne
pop
pop
pop
fisubrs
pop
mov
add
xor
or
jne
adc
mov
sub
aad
mov
mov
and
subb
andb
test
les
ds
addl
sti
and
jns
push
orb
test
lea
adc
test
push
test
cld
out
std
loope
repnz
or
add
inc
test
mov
xchg
nop
into
jne
push
nop
test
xchg
sub
sub
xor
inc
test
test
jbe
and
lods
sbb
sbb
or
stc
hlt
and
sti
hlt
and
sub
fs
sub
or
add
jge
inc
insb
rcl
mov
ljmp
andb
cmp
or
testl
jno
sub
push
and
and
sub
decl
in
mov
sbb
inc
xor
push
add
jmp
xor
adc
inc
add
pop
add
andb
xchg
fiaddl
or
mov
inc
aas
inc
mov
add
bound
or
or
outsl
shrb
jmp
push
cmc
pop
mov
add
cltd
movsb
mov
add
roll
sbb
sbb
or
stos
adc
push
out
push
or
mov
cmpsl
loopne
mov
mov
mov
pop
mov
and
push
xchg
sbb
ljmp
dec
out
ret
dec
and
or
loopne
add
adc
fs
dec
push
movl
arpl
movsbl
add
sub
add
dec
divl
adc
pop
lods
dec
jmp
xchg
orl
push
ret
sbb
adc
movsl
push
add
or
pop
add
daa
js
or
imul
mov
pop
sbb
sub
sbb
add
or
or
xchg
mov
pop
cs
sub
mov
and
dec
pop
jl
push
incl
jo
enter
aas
push
add
sbbb
pop
outsb
cmp
movsb
cltd
dec
inc
dec
dec
pop
icebp
test
inc
mov
insb
rcll
pushl
ljmp
xchg
and
xchg
mov
dec
xchg
imul
pusha
sub
add
ds
fwait
sbb
mov
cmp
stc
mov
ficomps
push
pushf
mov
xor
dec
inc
testl
bound
xor
add
cmp
shr
or
xor
daa
popa
or
inc
lret
add
pop
fwait
adcb
adc
sbb
sbbb
test
jmp
ja
and
jl
xor
mov
xchg
shlb
stos
sbb
add
sbb
dec
je
mov
in
inc
fimuls
dec
insb
add
lret
or
and
adc
aaa
add
mov
adc
adc
pop
xchg
jns
adc
or
inc
jp
pop
and
dec
push
ret
add
or
mov
inc
xchg
addl
sub
orb
dec
cmp
push
clc
adc
or
push
add
popa
lds
fiadds
stc
fcomps
xor
or
push
mov
and
out
push
mov
in
in
inc
xor
js
push
or
and
jae
push
push
popa
jl
or
sbb
adc
ret
mov
rorl
xchg
lock
ret
push
adc
nop
data16
iret
adc
and
jmp
adc
rcll
inc
xor
adc
negb
mov
jmp
mov
adc
sbb
push
inc
and
mov
stos
mov
dec
shrb
dec
sbb
push
add
mov
xor
or
jmp
sub
pop
or
xor
fdivl
xchg
bound
js
lods
cltd
in
nop
scas
add
dec
pop
jo
sarb
jns
outsb
lcall
inc
pusha
sbb
dec
jg
adc
loope
push
push
fcomp
and
or
enter
ret
stos
or
je
or
bnd
push
daa
sbb
sub
or
sbb
and
sti
sub
sbb
pop
xchg
adc
popl
and
xor
dec
pop
into
xor
jo
push
inc
push
xchg
and
cmp
xchg
cmpsb
xorl
add
cwtl
mov
shr
sbb
das
lea
outsl
add
in
mov
dec
jp
and
dec
add
and
test
mov
jne
in
mov
cmp
add
aam
inc
ss
and
movsl
jmp
pop
inc
stos
mov
xchg
sub
adc
push
cli
xsha256
cmpsb
adc
jecxz
gs
or
int3
push
cmpsl
cmpl
in
or
movsb
or
sahf
add
adcl
push
pushf
pop
and
adc
and
jp
and
pop
lods
or
stc
xchg
sahf
andb
pusha
add
sub
repz
int3
sbb
pop
inc
add
test
mov
outsb
xchg
es
jp
das
outsl
jne
add
pop
and
xor
add
lock
out
add
into
mov
clc
bound
jg
add
fstp
insl
stos
movsb
sti
lods
cld
fwait
sub
sub
inc
sbb
cmp
sub
jnp
cmc
push
xor
adc
and
jmp
adc
insb
lock
mov
enter
or
push
mov
dec
sub
mov
xchg
icebp
outsb
pop
incl
xor
in
mov
jbe
mov
jbe
add
jbe
lock
imulb
inc
cmp
pop
push
pop
adc
nopl
andb
test
add
or
sub
rol
mov
lock
jbe
scas
subps
dec
or
ds
jmp
cmp
push
clc
call
cmp
clc
mov
push
add
fisubs
ja
or
pop
cmp
je
lods
out
adc
inc
in
mov
mov
clc
jmp
mov
cltd
dec
mov
mov
lcall
add
mov
rcrl
adc
add
lock
pop
psubw
ret
leave
ja
sub
sub
lock
jge
push
rclb
faddl
cld
jmp
adc
mov
outsb
push
cld
xchg
ss
stos
call
pop
daa
sub
pop
adc
or
or
test
lea
fs
and
bound
stos
in
fdiv
icebp
mov
icebp
jb
jmp
push
mov
mov
cmp
roll
ret
dec
pop
pop
xor
mov
or
mov
adc
sub
inc
scas
add
loopne
mov
add
jns
xor
sub
pop
jmp
push
cltd
push
decb
mov
push
or
cmp
mov
and
loop
es
dec
or
cmp
cmp
adc
dec
cld
jl
cwtl
and
sbb
mov
sqrtps
in
pop
jns
dec
test
xchg
dec
jae
dec
sbb
es
push
sub
xchg
dec
sub
andl
and
fcoml
push
push
mov
stos
and
sti
jl
mov
or
and
mov
xchg
into
pushf
adc
add
dec
in
pop
inc
loopne
dec
std
xchg
push
lcall
adc
adc
test
das
push
imul
mov
xchg
in
sub
in
cmp
or
inc
dec
pop
call
mov
fmul
les
cmp
pop
fwait
rclb
pop
xor
nop
adc
pcmpeqw
jne
sbb
or
add
cmp
add
push
push
hlt
dec
cmp
aam
dec
pop
adc
push
add
pop
fadds
call
outsb
dec
rclb
dec
adc
in
insl
add
aaa
mov
aas
addb
lock
xor
mov
cmpsb
sub
clc
loopne
sub
push
adc
popf
pop
je
pop
popf
lods
rolb
push
push
out
call
push
fistpl
mov
jo
xorb
les
xacquire
sti
and
jbe
cs
push
mov
inc
xorb
cs
test
pop
mov
out
andb
aam
mov
xchg
mov
das
adc
xchg
jge
data16
add
or
arpl
adc
add
add
pop
rclb
out
sbb
mov
cmp
lock
inc
lea
mov
or
lea
or
out
add
dec
in
xchg
cmpl
loopne
and
rcr
decb
jno
incb
push
mov
out
and
pop
push
scas
cmpl
pushl
xchg
aas
push
cmovae
fisttpll
jne
sub
movsb
mov
mov
pop
xor
loopne
fwait
push
ret
mov
add
sbb
data16
clc
cmp
push
dec
mov
mov
jae
loopne
dec
lods
xchg
mov
add
movsb
cmp
xor
je
mov
push
and
in
push
dec
jp
fucom
and
loop
add
cmc
incl
push
cmpsl
lods
xchg
aam
lcall
mov
dec
jnp
aam
mov
mov
inc
push
mov
add
pusha
dec
pop
mov
and
pop
clc
pusha
mov
sub
sbb
cmpsb
and
mov
ret
ret
mov
fists
add
add
or
add
push
xchg
daa
ljmp
shrb
add
or
dec
cmp
out
xor
sub
test
mov
jb
xchg
pop
hlt
je
enter
mov
cmp
jmp
mov
or
jmp
mov
loope
jmp
add
or
dec
or
imul
dec
in
adc
add
loopne
mov
andl
mov
adc
jecxz
mov
in
jp
call
xchg
call
push
inc
sub
xorl
call
xor
dec
inc
dec
inc
jo
sbb
sbb
popa
notl
inc
imul
cmpsl
test
vrcpss
sbb
in
push
popa
and
dec
loopne
cmp
pop
pop
and
sbb
xor
std
sbb
dec
repnz
ficompl
or
xor
int3
out
out
out
dec
mov
fsubrs
pop
inc
mov
and
sub
mov
jl
rolb
adcl
cmp
and
mov
pop
adc
sub
test
cmp
movsl
ror
add
or
jl
sub
push
push
or
lods
sub
mov
sahf
add
pop
dec
out
popf
scas
pop
setge
mov
fdivs
insl
add
xor
add
pushf
aam
pop
lret
jo
xchg
lock
inc
cmp
adc
jne
fs
and
and
and
je
or
pop
gs
and
adc
add
xchg
arpl
and
dec
aam
add
inc
inc
dec
mov
push
or
nop
xor
lds
insl
jmp
mov
std
jge
ds
movsl
inc
dec
push
xor
pusha
or
mov
out
push
or
xchg
dec
movsl
push
in
in
jmp
jmp
call
sub
fcoml
xchg
cld
or
and
add
test
jl
ja
roll
jnp
or
mov
pop
cs
pop
cmc
in
shrl
sub
and
cltd
xorb
cmp
pop
pop
jo
mov
sub
add
pop
pop
xor
add
movl
rolb
fcompl
into
xchg
push
lea
xchg
sbb
mov
dec
mov
addl
pop
jmp
lahf
mov
or
mov
or
add
scas
icebp
clc
roll
jne
lahf
cltd
cmp
out
cmp
jbe
cmp
jbe
mov
sbb
xor
jne
mov
and
ds
mov
sub
inc
test
test
and
mov
xchg
ret
rolb
jge
nop
jo
dec
xchg
lcall
pop
mov
add
jne
push
aad
orl
mov
lods
dec
fildll
frstpm(287
into
or
and
pop
fwait
js
sub
jle
xchg
scas
jmp
dec
aam
add
ret
cmp
jb
nop
xchg
cmc
movsb
sbb
das
or
push
cmp
ret
mov
mov
xor
shrl
rolb
outsl
decl
lea
fcomps
movl
pop
sbb
int3
adc
les
fwait
les
fwait
sti
es
inc
push
add
inc
dec
add
imul
add
or
shrb
add
mov
orb
inc
mov
inc
sub
lea
sbb
sub
xchg
sbb
dec
call
leave
cld
xor
dec
and
int3
js
movsl
test
aam
es
push
dec
in
sbb
xor
pop
mov
sbb
test
xor
sub
ljmp
or
jg
push
pop
cmp
mov
or
push
sbb
aam
pop
sbb
sahf
out
into
push
or
adc
add
xchg
lcall
push
shlb
mov
mov
in
add
dec
pop
or
insb
pushf
int3
outsl
mov
xor
dec
push
push
fdivrl
push
hlt
jne
popf
adc
cmpsl
in
push
add
mov
outsb
sbb
call
ret
in
in
js
xchg
adc
sbb
fadds
adc
mov
hlt
es
jle
cmp
stos
sbb
int
xchg
pop
xor
and
push
cli
push
xor
mov
in
data16
pop
pop
add
movb
loopne
adc
lea
push
rcll
movsb
fcoml
push
mov
enter
mov
in
mov
add
cli
or
pop
or
fcmovbe
rep
js
mov
xor
bound
add
aaa
mov
dec
mov
rorb
nop
add
int3
int3
nop
add
and
pop
jecxz
dec
repnz
or
sbb
aaa
and
fists
mov
test
popl
mov
mov
ja
pop
mov
aam
mov
test
not
sbb
jp
cmp
popf
test
movsb
jmp
and
pusha
push
dec
int3
mov
sahf
inc
stos
test
xchg
test
lretw
out
mov
in
insl
loopne
mov
adc
push
sbb
scas
xchg
out
jns
inc
int3
imul
pushf
ds
insl
jl
xor
aaa
scas
aaa
dec
adc
ret
shlb
insb
lds
or
inc
sub
and
pop
sbb
push
mov
adc
or
pusha
sub
iret
jmp
mov
push
sbb
pop
mov
ret
rcrb
sub
add
or
inc
or
rcl
and
lods
cltd
mov
mov
incb
lods
call
into
cmp
andb
pop
fcompl
inc
dec
sbbl
lods
cmc
jmp
push
xchg
lods
sbb
add
dec
cli
mov
inc
mov
sub
lds
push
dec
add
loopne
or
pop
push
sub
mov
xor
fsubrl
shrl
mov
stos
jne
mov
int
fcomip
incl
out
pop
cltd
rorb
neg
pop
sbb
pop
inc
inc
xor
inc
adc
and
mov
pop
cmp
sub
push
incl
add
loop
cmp
clc
pop
pushl
mov
xor
push
fisubl
cmc
push
mov
sub
stos
inc
daa
dec
insb
shrb
data16
dec
call
add
inc
ljmp
pop
jmp
push
push
push
and
or
ljmp
adc
cli
xor
sub
inc
xor
jbe
enter
mov
in
add
shl
xor
push
push
sub
jmp
sti
xor
cmp
xlat
mov
add
add
icebp
pop
add
push
hlt
xor
jmp
sbb
sbb
cmp
add
fidivrl
sub
rcr
cmc
mov
shrb
xchg
push
xchg
out
testl
adc
push
ss
subb
cmpl
jge
xor
fwait
cvtpi2ps
and
ret
add
mov
jb
mov
sub
lods
andl
incl
sbb
mov
mov
push
mov
outsb
inc
mov
popf
fwait
clc
imul
call
cmpl
hlt
sbb
pop
stc
into
enter
das
dec
jmp
outsb
cltd
sbb
push
add
inc
adc
xorl
das
push
aaa
and
movsb
pop
roll
xchg
jb
aas
out
or
sahf
divb
sub
fcmovb
mov
sub
dec
jmp
cmp
jae
stos
sbb
or
add
add
addl
andl
jl
push
mov
mov
dec
aas
cmp
lock
rcll
mov
icebp
add
mov
push
cmpsl
adc
fnstcw
add
stos
xor
push
sub
fdivr
mov
out
xor
rolb
xlat
adc
popf
or
and
andl
mov
lock
lock
inc
mov
mov
xchg
sbb
imul
add
push
push
aas
push
mov
jg
or
aam
fwait
push
cmp
jbe
ror
lea
push
and
mov
mov
mov
mov
jo,pt
adc
vmread
push
mov
sub
jecxz
push
hlt
in
sbb
cli
insl
shl
adc
cmc
idivl
mov
pop
dec
cmp
or
xor
cli
dec
ret
mov
adc
adc
sbb
lock
fisttps
pusha
cmpsb
in
jo
mov
xchg
fwait
cmp
mov
push
push
jp
add
xchg
mov
cmp
cmp
hlt
cmp
inc
mov
lret
sub
cmp
dec
mov
pusha
icebp
push
push
push
push
stc
mov
cmp
pop
adc
adc
in
mov
adc
loopne
add
push
fildll
inc
push
scas
inc
cmp
or
add
test
push
loop
hlt
or
or
arpl
cmp
outsb
orl
adc
stc
imul
inc
cmp
stc
sbb
int3
std
inc
cmp
repnz
fldt
mov
leave
add
nop
xor
add
loopne
add
pop
mov
sti
rep
movsw
push
loope
add
cld
movsb
mov
push
xor
mov
adc
fnstsw
std
shr
mov
inc
mov
adc
movb
mov
and
adc
out
jle
in
push
mov
mov
and
pop
ret
add
movsbl
xor
xchg
push
push
std
add
jb
and
daa
push
cld
je
sbb
ret
push
sbb
insb
add
pop
ret
lret
xor
fs
mov
jne
mov
ljmp
cmp
pop
inc
jp
push
insl
pop
call
or
xor
xor
sub
pop
or
aam
scas
cmp
pop
sarl
popa
sbb
cld
push
cmp
jl
mov
in
add
sbb
mov
pusha
dec
sbb
popa
sub
cs
pop
and
fdiv
ss
inc
sti
xor
mov
in
xchg
push
cmp
push
push
push
push
sub
cmpsb
sahf
mov
roll
call
loope
outsl
jb
mov
lods
dec
ja
pop
adc
and
test
inc
lcall
adc
adc
add
daa
daa
daa
daa
add
push
pop
daa
daa
or
or
jnp
or
fwait
fwait
fwait
fwait
jbe
jmp
or
por
fwait
bound
jmp
adc
pop
adc
push
adc
fwait
fwait
fwait
fwait
dec
adc
dec
adc
aas
pop
jmp
fwait
fwait
fwait
cmp
jmp
sbb
xor
jmp
sbb
fwait
fwait
fwait
fwait
es
and
pop
pop
jmp
fwait
fwait
fwait
adc
jmp
and
or
jmp
and
ret
rol
hlt
out
jecxz
add
aam
test
add
out
add
push
clc
pop
jbe
xchg
mull
push
mov
jns
out
push
mov
repz
out
jmp
sti
add
iret
repz
add
push
cmp
repz
sub
iret
repz
inc
dec
push
iret
repz
push
pop
pop
imul
js
and
add
dec
incb
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
sub
sbb
and
aas
mov
dec
test
adc
cmp
nop
mov
stos
sbb
gs
dec
adc
iret
push
mov
push
or
testl
mov
xchg
jmp
icebp
in
mov
js
pop
aam
cld
jo
in
jae
sub
sbb
adc
push
add
mov
xor
add
iret
dec
or
push
dec
and
jge
jle
dec
out
clc
ss
mov
les
jbe
cli
nop
lock
add
cs
add
lods
xor
dec
mov
pop
mov
or
stos
push
fsubrs
fwait
or
dec
add
rol
jae
cs
mov
jae
adc
sub
and
sbb
iret
and
add
imul
stos
mov
cwtl
add
out
rcrl
sub
xchg
dec
add
dec
loope
adc
push
xchg
dec
inc
xlat
cmp
add
dec
dec
mov
mov
das
pop
and
push
cmpb
pop
adc
int3
dec
in
hlt
and
movsl
xor
cld
mov
add
xor
adc
mov
cmp
add
inc
push
adc
scas
jb
dec
lods
sub
lret
pop
jns
sub
xor
and
in
std
add
push
add
addr16
cmp
add
push
insl
lret
je
mov
in
inc
xor
iret
mov
ja
sbb
add
add
into
mov
pop
inc
mov
or
imul
adc
sub
int
fstpl
inc
clc
adc
lods
fst
inc
test
dec
mov
iret
adc
mov
cwtl
movsl
lahf
pusha
lock
repz
hlt
push
mov
xchg
cmp
xchg
in
dec
mov
xor
call
aas
add
repnz
shlb
pop
pop
jne
ret
lea
ljmp
inc
push
push
xor
daa
scas
pop
test
insl
mov
andl
sbb
adc
adc
adc
or
imul
mov
pop
and
arpl
push
or
jle
jo
dec
hlt
add
lock
shll
es
jne
fcomps
mov
push
mov
lds
aaa
and
das
add
sub
bound
out
mov
fwait
dec
and
sbb
cmp
aam
jmp
ss
mov
or
push
shlb
jno
or
inc
jge
sbb
adc
push
paddb
dec
icebp
add
dec
and
mov
aaa
js
mov
lock
pop
or
adc
cmp
adc
cmp
push
hlt
xor
enter
sbb
inc
faddl
push
or
dec
cwtl
pop
pop
lods
test
enter
bound
push
push
pop
idivb
push
jns
mov
inc
xchg
push
xchg
cld
dec
arpl
dec
push
push
sub
aaa
lea
pop
push
xchg
xorl
push
adcl
mov
mov
fs
xchg
popf
sub
inc
push
add
and
sub
cmp
popa
nop
loop
mov
cmp
enter
pop
or
cwtl
dec
xchg
movsl
pop
pop
inc
sub
in
jle
sbb
mov
mov
cmp
mov
xchg
test
pop
and
jne
es
test
inc
scas
sahf
data16
mov
jns
rorb
in
xchg
test
stc
faddl
xor
loopne
int3
enter
movsb
xchg
xor
push
in
hlt
sbb
div
and
ficompl
inc
icebp
andl
cld
jne
popa
stos
or
xchg
sbb
inc
adc
ljmp
aas
sbb
push
in
icebp
jne
jp
cmp
xchg
loopne
xor
or
pop
out
add
enter
clc
adc
pop
pop
repnz
fstpt
add
inc
sub
std
cs
mov
sbb
add
je
insl
mov
call
sbbb
es
out
cmp
inc
add
addb
popf
xchg
mov
repnz
push
cld
sbb
sbb
orl
loopne
loopne
push
xor
cmp
add
and
enter
es
or
idiv
add
xchg
mov
das
sti
std
push
dec
es
in
jno
imul
mov
xchg
faddp
add
sbb
pusha
cmpsb
pop
push
test
push
pop
push
push
add
pusha
xchg
cmp
mov
mov
xor
adc
data16
mov
lcall
ret
xchg
lea
jno
add
rorb
pop
dec
add
add
loop
pop
sbb
mov
rcll
dec
je
cmp
and
dec
sbb
in
push
dec
xor
add
push
mov
andl
mov
sub
sbb
enter
mov
call
cmpb
and
and
cld
jp
mov
sti
push
les
sub
xor
mov
leave
or
push
sub
mov
shrb
jno
mov
cmpl
sbb
adc
lds
arpl
add
push
cs
push
fdivr
ret
ret
dec
xchg
dec
adc
push
sbb
pop
sbbb
aas
pop
mov
loopne
mov
xor
movl
inc
mov
out
mov
sub
push
jbe
mov
repnz
sub
add
dec
push
movsb
pop
mov
sahf
fnstsw
dec
shll
or
pop
cmc
or
shll
push
dec
mov
andb
call
icebp
stc
adc
cli
je
test
inc
ret
add
aaa
pop
mov
or
add
popa
dec
and
push
test
xchg
inc
dec
pusha
leave
call
lea
cmp
inc
cli
sub
inc
sub
and
and
les
or
bound
je
aaa
adc
jle
push
cmpb
and
mov
jne
push
call
jmp
cmp
je
xchg
push
ds
mov
fimull
pop
ljmp
jl
into
adc
pop
aas
sbb
and
xor
test
fidivrl
in
add
dec
je
jecxz
add
push
adc
mov
cmpsw
hlt
movsl
mov
dec
add
sbb
mov
fidivrs
shlb
xor
xchg
dec
xchg
cmpsb
hlt
sahf
mov
and
push
cmp
movsl
mov
lods
sub
add
dec
negb
push
sti
pop
and
aas
cmp
xchg
mov
jmp
or
mov
add
call
jbe
push
push
dec
and
push
xor
in
repz
shrb
cmp
adc
mov
add
in
lds
jge
adc
arpl
into
jo,pt
inc
or
arpl
inc
and
or
jno
push
ss
xchg
cmp
cmp
loop
aad
pop
inc
xorl
add
pop
pusha
or
jns
sbb
mov
pop
repnz
and
or
sub
in
adc
dec
push
bound
xor
dec
cs
enter
adc
push
xor
popa
xor
pop
and
sbb
in
cltd
pop
or
sbb
cmp
pop
mov
mov
inc
movzbl
mov
imul
test
mov
fs
fidivrs
fmull
xor
shl
inc
add
enter
mov
xor
js
push
enter
xor
in
es
inc
add
xchg
cwtl
push
add
jb
in
daa
mov
xor
movsb
xor
xor
out
inc
lods
mov
enter
mov
pop
xor
dec
rol
enter
cltd
movsb
rcl
fcomp
xchg
fistpl
sar
subb
and
data16
lods
not
inc
aas
into
nopl
add
ljmp
pop
ret
push
hlt
sbb
lock
jp
sbb
mov
mov
cltd
cmp
and
nop
repnz
das
or
jg
or
pop
in
or
incl
cmp
jl
sub
jns
xor
dec
rcr
fnstcw
jl
push
jne
inc
cmp
xor
das
xor
inc
sti
je
out
xor
xor
pop
mov
cmp
inc
bound
mov
jl
jmp
imul
push
add
cmp
mov
xchg
dec
pusha
nop
push
sub
sub
sbb
push
iret
or
add
jle
mov
test
in
sbb
repnz
sbb
and
adc
in
dec
into
jmp
inc
sbb
hlt
aas
test
popf
push
jl
in
sti
and
dec
xor
pop
xchg
inc
clc
cmpl
sbb
xor
mov
jo
fwait
xchg
js
popa
mov
or
pop
xchg
add
sbb
inc
jno
cmpl
into
mov
je
mov
push
jno
movsb
xchg
cmpsb
push
pop
inc
inc
popa
daa
add
push
pop
cmp
jge
mov
lret
jl
add
inc
jle
daa
mov
addb
jae
pushf
inc
push
jmp
fdiv
fistpl
sbb
xor
scas
pop
inc
filds
xor
jle
mov
pusha
movsl
jno
fstpl
lock
sub
shrb
push
push
pop
ja
std
rol
adc
mov
js
or
incl
pop
jne
push
inc
pop
inc
insb
push
and
push
cmpb
push
jmp
cld
mov
sarb
cmp
mov
xor
mov
mov
fwait
sbb
push
lcall
lea
pushf
pop
push
shlb
in
mov
shrb
or
add
lret
or
dec
outsl
lods
shrl
icebp
jbe
sub
cmp
push
jne,pn
insb
mov
pop
out
jge
loopne
cmp
add
stc
jns
cmpl
pop
or
xor
leave
mov
call
mov
je
popa
add
call
nop
pop
int
jl
imul
popf
jb
mov
add
add
jo
imul
jecxz
pop
cmc
mov
movsb
cmpsb
inc
xor
xor
mov
out
testb
pop
add
movsb
mov
rorl
ljmp
hlt
jno
sbb
mov
dec
xorl
icebp
xchg
and
add
xchg
adc
neg
inc
mov
mov
push
inc
or
cmp
or
or
jmp
mov
xchg
and
or
push
jmp
adc
gs
push
mov
testb
adc
jne
lret
jmp
inc
outsl
dec
or
lods
xchg
rorl
jne
jge
xor
push
cmp
mov
jo
mov
repnz
jnp
xchg
jbe
inc
add
fldcw
cmp
or
push
test
scas
add
shrl
dec
fwait
test
jnp
xor
lcall
adc
inc
and
mov
cwtl
sbb
push
cmp
sub
sub
jp
xor
sarb
gs
mov
inc
and
push
test
add
and
ljmp
and
xchg
xor
inc
test
sbb
push
sbb
test
movl
cmp
mov
xor
sbb
imul
and
js
cmp
pop
adc
sbb
call
mov
push
fisttpl
sub
add
cmp
pushf
add
ja
loopne
add
add
cmp
dec
mov
les
pop
in
fucomip
hlt
dec
push
inc
mov
cmpsl
cs
movsb
pop
sbb
loopne
inc
add
mov
push
xor
retw
sub
pop
les
neg
push
fildl
pop
adc
jne
or
mov
cli
test
loopne
add
lea
add
or
add
test
test
iret
inc
push
adc
push
or
and
test
das
cwtl
or
or
xlat
and
jmp
fbld
mov
jg
aam
push
add
in
add
movsb
lea
push
dec
shrb
pusha
and
loope
or
xchg
data16
lock
cli
loopne
xor
pmulhuw
xor
loopne
aaa
pop
movsl
pop
scas
mov
inc
sub
xchg
push
push
imul
out
sbb
fdivs
or
nop
cmp
xor
roll
sub
jmp
inc
or
repz
movsb
push
xchg
or
sbb
mov
and
adc
pushf
push
loope
push
adcl
in
adc
xor
fiadds
adc
insb
xchg
rcrb
orl
xor
cs
inc
sbb
or
xor
dec
sbb
jo
push
outsb
test
subb
clc
mov
push
and
and
iret
or
mov
and
xchg
inc
imul
inc
xor
sbb
mov
addb
popa
inc
add
xor
xchg
pop
and
inc
repz
adcl
cs
pop
sbb
xor
push
mov
jae
aas
dec
popa
les
mov
sub
icebp
lods
sub
imul
std
add
jge
add
idiv
out
aaa
jbe
sub
cmpsb
mov
mov
inc
cmp
adc
cmp
das
fisttpll
add
pusha
sub
mov
mov
nop
sub
lahf
jge
and
mov
adc
mov
pop
and
mov
int3
jne
pop
dec
fstpt
pop
xor
xchg
or
xlat
pop
aad
pop
jo
and
or
add
mov
ficoms
add
inc
add
add
mov
xor
popf
mov
test
out
rorl
in
inc
pop
or
jmp
and
and
jmp
fwait
adc
inc
cld
dec
add
xchg
inc
xchg
mov
or
inc
sbb
pop
jno
adc
arpl
add
mov
dec
clc
sub
inc
cmp
jl
stos
add
fs
jge
pop
call
push
mov
pop
icebp
mov
push
inc
push
shll
movsb
jle
cli
xchg
adc
jns
mov
xchg
cltd
sub
ja
or
jle
add
mov
jmp
xor
idivl
and
rdmsr
mov
dec
icebp
icebp
lea
jmp
cs
and
bound
sbb
cld
jl
ffree
pop
sbb
mov
daa
es
dec
jmp
gs
mov
sbb
push
femms
mov
add
aam
rorb
or
or
sub
aaa
xor
ret
push
adc
fildll
push
cmp
aad
xchg
xor
mov
int
or
pop
popa
imul
mov
popf
jecxz
adc
push
lcall
xor
mov
jl
sub
fisttpl
adc
leave
and
and
rcll
xor
test
js
in
rol
lea
adc
and
gs
in
push
push
imul
in
test
xchg
movsb
sub
inc
cs
sub
mov
adc
in
xchg
aam
mov
sub
test
aam
pop
cmc
add
or
jmp
test
sbb
popa
xchg
add
cwtl
loopne
shlb
popa
cmp
shr
test
mov
or
pop
or
cmp
sbb
lea
aam
ljmp
repz
push
ficoml
lret
or
mov
in
ja
je
or
jne
push
mov
inc
hlt
xchg
rorb
fcoml
ljmp
jbe
pop
or
inc
sub
inc
jmp
mov
mov
shlb
add
add
call
mov
mov
shr
shl
add
and
shl
xor
mov
mov
pop
mov
aas
jne
movsw
movsb
mov
add
xchg
arpl
and
sti
push
js
jge
jl
into
push
rclb
dec
sahf
movsb
add
subb
sub
adc
js
loope
jecxz
fisubrs
dec
sbb
sbb
loopne
jecxz
push
add
in
and
push
ret
mov
sbb
jecxz
and
int
les
insl
inc
or
mov
dec
add
add
faddl
fstl
aad
and
out
fcomp
fnstsw
addl
xor
or
jmp
data16
push
ret
inc
adc
pusha
and
inc
vpsrld
imul
sbbb
mov
push
xchg
mov
sbb
lock
xchg
push
nop
xchg
lock
xchg
mov
push
jbe
test
inc
dec
push
scas
rcrb
dec
clc
or
movsb
in
pop
xchg
scas
dec
sbb
lods
mov
iret
jge
cmp
ss
mov
cmp
or
mov
fistpl
inc
push
or
adc
daa
imul
add
lcall
jb
jmp
pop
inc
jle,pt
ret
jne
push
inc
stos
mov
lock
setae
movsb
mov
mov
sub
dec
add
setae
movsb
jmp
jo
loope
movsl
in
loope
adc
add
popf
orb
cmpb
mov
push
je
call
mov
imul
push
enter
clc
fsubrl
loopne
movsb
sahf
cmpsl
shr
aam
rcll
cld
mov
bound
sbb
pop
or
sarl
stos
sub
push
hlt
push
je
add
pushl
jnp
call
fs
add
inc
outsb
add
icebp
and
add
dec
data16
mov
adc
sti
pop
sub
adcb
and
xor
pop
pop
sbb
xchg
cmp
cwtl
mov
mov
sbb
push
fwait
loope
sbb
xor
stc
adc
cwtl
add
lods
imul
mov
adc
sub
popf
and
or
or
mov
and
adcl
cmp
gs
lock
dec
fs
jo
clc
jmp
pop
lock
push
adc
pusha
pop
movsb
push
pusha
push
pop
push
add
dec
movsb
mov
add
data16
push
jne
mov
mov
jge
pop
mov
pop
insb
call
add
mov
pop
or
cmp
and
test
inc
loop
std
or
mov
in
adcl
aam
nop
mov
push
enter
test
mov
dec
neg
and
and
sbb
dec
cs
mov
jne
jbe
push
mov
or
or
hlt
adc
dec
add
push
mov
and
adc
or
mov
outsb
adc
cmp
or
jl
mov
sbb
les
ss
xchg
or
mov
jb
stc
push
lock
xorl
ret
xor
test
inc
adc
add
pop
lock
add
stos
push
es
inc
int
or
jbe
push
mov
sahf
push
mov
jmp
adcl
lock
adc
inc
lods
nop
push
xlat
push
les
mov
cli
push
lds
pop
adc
adc
mov
enter
sahf
imul
dec
loop
push
add
adc
ret
or
dec
push
add
push
adc
inc
pop
add
push
jp
aaa
mov
mov
xchg
pop
push
inc
push
sbb
push
xor
push
jmp
cmp
cwtl
jne
clc
cmp
pop
add
cmp
ss
outsb
pop
dec
dec
data16
in
and
sbb
xor
adc
sbb
adc
je
mov
adc
fsubl
push
rclb
ss
cld
add
jne
mov
jp
iret
or
adc
adc
test
fcoms
decb
cmp
jb
cmp
loope
and
pop
ret
dec
push
jbe
add
shl
inc
popa
push
push
cwtl
xchg
sbb
jg
push
push
inc
pop
add
negl
rorb
cltd
xor
notb
and
out
push
push
dec
imul
or
sub
jbe
arpl
call
outsb
or
cmpsb
in
lock
sub
int3
shlb
push
add
lock
ret
adc
mov
push
push
push
inc
rolb
pop
jnp
adc
bound
call
xchg
dec
or
mov
cwtl
sub
sbb
push
jb
push
push
sbb
jb
aas
daa
xor
enter
xor
insb
ud1
add
in
insb
shlb
jl
xchg
pop
scas
mov
outsb
xorb
jnp
mov
sbb
and
sbb
inc
add
data16
mov
inc
das
test
in
cmp
fadds
xchg
dec
daa
add
mov
xchg
lock
fadds
cmp
xchg
push
lods
inc
aaa
xor
cwtl
test
xchg
or
pop
mov
das
int
insl
cmpb
xchg
pop
enter
jne
fcomp
xor
xor
pop
repnz
pop
aam
in
mov
cmp
fstpt
sbb
ja
rcrl
and
jg
push
lcall
inc
in
add
add
fisubl
lods
sub
sbb
dec
leave
mov
ret
insb
adc
outsb
bound
jmp
movsb
movsb
loopne
sbb
ficoml
faddl
xchg
push
adc
or
sub
sub
cs
movsl
repnz
out
mov
fbstp
inc
adc
popf
mov
int3
cmp
push
pusha
stos
adc
incb
sbb
xor
dec
or
arpl
xchg
mov
cmp
pop
test
xchg
jns
imul
or
sub
dec
fsubs
push
mov
xchg
or
or
cwtl
in
sub
mov
das
add
mov
cwtl
xor
and
imul
aad
or
mov
and
movsl
insb
out
fistl
and
sub
mov
fwait
cli
cmc
jmp
je
sbb
push
pop
cmovg
inc
cmc
cmc
mov
rolb
movl
or
or
push
testb
add
inc
je
push
jecxz
popa
lods
xchg
in
adc
addl
cmc
xchg
push
inc
dec
ljmp
loopne
rol
mov
xor
push
push
movsb
ljmp
mov
mov
sti
cld
jge
inc
adc
aad
inc
mov
add
in
sti
inc
adc
das
pushf
iret
mov
sbb
adc
dec
fbstp
outsl
ss
or
pop
loop
ljmp
sbb
inc
sbb
repz
add
add
xor
and
xor
xor
test
cmovg
fcomps
adc
xor
push
or
rcrl
stos
add
test
shll
pop
jnp
rcrb
push
aaa
popl
or
or
xchg
mov
push
jns
enter
inc
xor
or
sub
lock
movl
or
push
dec
xchg
loopne
sbb
enter
mov
add
fdivrp
lret
mov
pusha
xor
sahf
call
mov
xchg
mov
and
test
fcomps
icebp
inc
mov
push
add
push
enter
inc
and
call
cmpsl
push
add
in
push
mov
das
add
mov
cs
jns
mov
or
xor
xchg
lock
pop
lret
incb
or
mov
dec
sahf
notb
loopne
les
push
push
xchg
in
adc
xchg
movsbl
ljmp
imul
xchg
add
fisubs
fadd
xchg
and
fdivl
cs
fmull
pushf
lcall
les
scas
add
sbb
mov
aas
fcoms
adc
in
fucomp
stos
das
and
and
pop
push
ljmp
repnz
nop
lds
sbb
and
mov
mov
dec
call
push
mov
add
clc
push
les
add
or
in
std
popa
xchg
enter
or
lret
or
js
fldt
aam
sub
leave
inc
imul
cmp
rclb
mov
enter
cli
pop
je
xchg
push
adc
add
or
cs
loope
sub
std
mov
add
cmp
leave
sti
lea
roll
push
push
push
cmp
mov
add
adc
cli
sarl
jns
popa
das
pop
movsl
mov
mov
jmp
dec
sbbb
sub
fidivrl
out
arpl
ss
and
xor
movsb
je
pusha
mov
pop
xor
push
mov
push
xchg
stc
insb
loopne
mov
dec
mov
loopne
in
sbb
push
outsb
loopne
push
lock
jl
sbb
lret
xchg
and
adcb
sbb
cmp
mov
sbb
xorb
lods
sub
adc
inc
sbb
clc
push
and
cmp
pop
xchg
pusha
rclb
sub
mov
jmp
cmp
jno
fiaddl
and
aam
andl
lods
dec
mov
and
sbb
mov
movsb
xchg
fidivs
jno
in
jle
sub
inc
mov
jne
add
xor
sbb
pop
jge
filds
jo
dec
and
adc
ret
mov
push
sete
iret
add
and
add
push
test
shl
push
xor
and
mov
jp
je
lock
rcll
sbb
pop
sub
xor
jp
push
sub
jne
std
pushf
xchg
test
fcoms
sub
mov
cmpsb
js
mov
add
cltd
mov
adc
cmp
inc
repnz
cmp
cli
and
std
shrl
cmp
adc
mov
sbb
jge
je
push
jo
dec
dec
fidivrs
push
je
push
pop
lcall
push
cvtdq2ps
inc
push
dec
divl
mov
adc
ret
pop
fcmovb
dec
popf
hlt
shll
xlat
and
pop
cmpl
arpl
cli
sahf
xchg
sbb
les
pop
loopne
cwtl
sbb
data16
mov
das
data16
and
sub
xor
jl
lods
and
xlat
stos
mov
mov
push
sub
arpl
mov
dec
pop
and
dec
aaa
add
ret
adc
xor
int3
mov
in
jle
lock
and
mov
xor
and
inc
pop
test
dec
ljmp
lds
into
add
dec
inc
pop
lock
cld
push
jl
mov
mov
daa
sbb
scas
flds
and
out
bound
inc
mov
in
outsb
dec
sbb
sbb
cmp
mov
inc
pusha
jge
movsl
sub
inc
test
dec
push
cld
push
mov
insb
gs
adc
pop
lock
cmp
test
roll
sbb
push
test
pushf
or
push
xchg
insl
xchg
push
ljmp
cmp
sub
push
leave
sub
cmp
sbb
cli
clc
mov
and
push
sbb
shrl
sarl
mov
push
sbb
adc
in
shr
sarb
ret
lods
test
xchg
ds
push
or
and
and
jne
cmp
out
mov
roll
frstor
add
mov
movsb
adc
add
inc
push
dec
sub
loop
mov
mov
fwait
adc
orb
sbbb
fnstsw
xchg
pop
mov
stos
cmp
push
sub
scas
xchg
adc
scas
push
pop
fs
shlb
shrd
xchg
cmp
je
push
or
mov
inc
imul
add
std
or
dec
dec
mov
lock
or
sbb
insl
add
sub
pop
push
scas
cmp
mull
jl
jo
push
mov
je
adc
adcl
or
jo
cmpsb
jo
daa
adc
pop
push
push
pop
push
push
mov
ljmp
xchg
push
mov
sub
fwait
jl
cmp
adc
popf
and
ja
cmpsl
mov
lea
repz
mov
fldl
out
out
pop
cmpb
testb
push
pop
ljmp
pop
add
movsb
or
shlb
ss
nop
push
adc
aam
pushf
xchg
or
pusha
adc
movsl
adc
mov
daa
push
pop
sbb
aaa
iret
fucomp
int
inc
xor
popf
and
fmull
push
insl
mov
js
jmp
jecxz
movsb
jg
push
pop
or
dec
and
jge
mov
test
xchg
mov
or
push
mov
pop
mov
lock
cli
add
cld
or
iret
jo
lock
mov
inc
icebp
cmp
jne
add
pop
shll
mov
rolb
mov
jns
dec
or
push
sar
mov
inc
and
push
stos
xchg
sbb
add
adc
xor
fstp
test
lea
jns
jno
sbb
hlt
jle
push
aad
push
push
jae
lods
cmp
rcrl
sub
mov
jmp
test
mov
mov
mov
jb
mov
cs
ss
andl
je
ja
add
mov
adc
xor
das
pushf
pushf
jmp
push
lea
xchg
push
mov
lods
jle
or
fincstp
push
xchg
push
pop
loope
dec
cmp
or
inc
insb
adc
xor
movsl
push
cmp
aam
movsl
dec
xlat
sbb
int3
jp
fnstenv
nop
shrb
out
nop
nop
mov
popf
or
sbb
test
push
mov
subl
jecxz
pushf
movsb
in
or
cwtl
mov
movsl
std
lcall
lret
test
adc
xchg
aas
mov
mov
hlt
fsubl
in
sbb
jp
out
dec
push
or
and
pop
mov
jb
data16
push
je
and
loopne
mov
nop
test
mov
call
loope
les
shrl
sub
mov
or
in
adc
fadd
add
dec
pop
jne
scas
xchg
push
adc
push
mov
sub
and
pushf
inc
fmuls
and
push
addl
stos
daa
in
push
adc
sub
and
dec
pop
mov
sub
push
add
loopne
loop
in
lcall
push
or
push
ja
push
xor
and
shl
xchg
add
inc
sbb
push
mov
lahf
sub
add
push
mov
adc
aas
add
and
mov
xchg
mov
pop
mov
mov
dec
xor
and
inc
and
sbb
add
cmp
dec
and
shlb
jmp
lods
sbb
xor
push
lret
adc
inc
icebp
pop
insb
dec
or
sub
cmp
scas
outsl
dec
mov
xchg
pop
les
dec
mov
and
cmp
mov
lock
lret
add
cmp
lcall
cs
cmpl
push
sahf
fincstp
cmpsl
lret
sub
js
and
mov
pop
imul
in
es
sti
sbb
shl
cmpsl
test
pop
mov
sub
fwait
je
adc
adc
movsb
je
xchg
add
or
dec
sahf
or
push
add
push
sbb
xor
pop
cmc
add
loopne
dec
or
pushf
adc
adc
adc
xor
xchg
jge
pop
cmp
cmp
lea
or
call
adc
xor
cmp
jp
push
hlt
mov
pop
ret
dec
movb
aaa
or
lock
adc
lock
cmp
je
xor
cmp
mov
cmp
bound
sarb
jg
fwait
mov
into
mov
mov
cmp
or
pop
add
dec
xlat
loope
test
inc
adc
and
into
repz
movsb
mov
divl
dec
and
dec
hlt
cmp
sbb
dec
outsb
jl
cli
fstl
jg
sbb
xor
out
rcrb
or
pushl
fs
or
je
cmp
jne
inc
inc
jmp
pop
cmp
and
test
cmp
ds
pop
repz
scas
cmp
cltd
int3
and
mov
xchg
rorl
push
or
or
movntps
xor
sub
enter
cmp
scas
push
mov
push
add
push
push
inc
dec
gs
sbb
sbb
shrb
jl
jecxz
sbb
xchg
and
ror
mov
and
aam
pop
ret
aam
pop
in
adc
ret
inc
imul
in
in
and
add
xor
es
inc
daa
shll
mov
jo
out
fcoms
inc
loope
mov
insl
mov
roll
push
inc
mov
les
add
add
test
cmp
mov
repnz
add
jae
pop
lods
push
jl
push
mov
jne
cmp
push
les
enter
cmp
push
arpl
jnp
in
mov
ret
dec
call
les
add
aas
pop
je
push
mov
addb
cmp
push
sub
adc
je
push
pusha
cmp
js
outsl
push
popa
insb
add
add
repz
or
mov
jae
test
loop
fwait
push
data16
push
fldt
mov
jbe
fpatan
jle
imull
xor
pop
pop
push
sbb
movsb
fnstcw
cmp
push
adc
mov
mov
and
push
add
aam
repnz
jne
call
mov
sbb
or
xor
add
fisttps
pusha
cmp
and
sbb
dec
jno
dec
leave
push
or
dec
sub
jg
inc
and
add
mov
cmp
fldenv
cmc
add
dec
or
scas
movsl
imul
mov
inc
call
sub
push
xchg
insl
dec
repz
push
out
cmpsb
mov
inc
pop
in
or
sub
fld
inc
sbb
or
out
push
add
dec
stc
cmc
call
je
or
es
jp
lret
pop
cmpsb
dec
mov
rcrb
movsb
xchg
inc
or
xchg
xchg
ss
xor
pop
cltd
test
jle
fdivrs
xchg
xor
fmuls
pop
leave
push
pop
push
repnz
jb
sub
lods
pusha
lods
mov
jge
js
xor
int3
mov
inc
loop
ret
push
add
and
push
xchg
inc
in
add
sub
arpl
out
mov
mov
insb
mov
data16
push
or
push
sub
pop
inc
fistpll
fcomps
pusha
loopne
shlb
adc
fcompl
push
popf
and
lea
add
cmp
mov
and
mov
mov
outsl
stos
mov
mov
out
pop
pop
mov
cmpsl
inc
cmp
mov
push
syscall
sub
jle
cmc
movsl
pop
or
mov
mov
push
xchg
xor
call
xor
shr
xor
adc
shrl
fcompl
jo
ret
sbb
shl
test
sbbl
push
mov
jbe
add
jmp
add
mov
rcr
add
movsb
add
inc
push
push
inc
add
lods
imul
add
imul
add
cmp
add
jno
dec
sub
insl
jge
or
adc
jle
push
xchg
sar
xchg
xchg
fdivrs
cmp
xchg
aaa
shll
add
inc
fiadds
sbb
sahf
stc
and
add
add
notb
scas
in
clc
xchg
leave
mov
dec
daa
jno
iret
ret
adc
jge
sbb
cmc
inc
lcall
cld
nop
dec
daa
push
nop
cld
in
push
and
dec
ret
inc
js
leave
loopne
mov
mov
jb
xor
push
repnz
add
pop
push
sub
push
insl
imul
dec
lcall
push
pmulhuw
add
or
popa
and
sbb
out
push
hlt
shll
into
and
dec
push
adc
sbb
pop
push
fs
and
and
or
mov
adc
imul
jg
andl
bound
inc
into
in
add
jb
push
mov
push
cmp
cmc
inc
dec
in
or
sub
rorb
jmp
inc
mov
stos
push
cmp
jge
cmp
ret
std
xor
in
xor
outsb
inc
movaps
sbb
fildl
jno
aas
push
adc
and
add
push
push
repz
insb
add
inc
or
pop
mov
push
sbb
push
orb
and
pop
cmp
fistps
add
add
inc
push
test
aam
ljmp
call
test
add
inc
push
push
add
lret
pushf
push
or
sub
test
or
iret
add
pop
cmp
inc
inc
enter
mov
push
jns
das
push
pop
je
mov
cmp
pop
mov
mov
and
xor
or
push
push
sub
lock
loope
push
ficoml
push
push
push
movsb
xor
sub
pop
stos
or
sub
rorb
or
push
xor
stc
sti
loopne
imul
push
enter
push
or
pushf
cmp
jb
cmp
ss
inc
sub
push
ret
adc
mov
push
add
mov
push
or
mov
inc
lret
cmp
mov
mov
popa
sub
popa
xor
cmp
and
rclb
adc
and
test
mov
add
push
mov
inc
inc
pop
mov
movsb
repnz
sahf
das
sbb
mov
shll
cmp
or
pop
mov
xor
cmp
imul
xorl
pop
nop
les
mov
xlat
fistl
push
insl
cltd
sbb
sub
or
outsb
cmpsl
in
fildl
adc
inc
cmp
cld
pop
jne
push
adc
xchg
adc
adc
sbb
and
sub
loope
cltd
out
xchg
pop
adc
add
and
and
orb
sbb
add
inc
cmp
sub
imul
je
shlb
cs
dec
adc
or
js
cmovb
int3
and
mov
scas
or
bound
cmp
inc
mov
inc
das
in
test
subb
shlb
daa
add
xchg
sub
inc
lcall
add
and
xor
jns
push
mov
insl
add
jmp
adc
adc
or
lock
loope
ja
jg
sbb
mov
add
mov
shl
mov
jl
iret
sub
pushw
xor
push
iret
inc
cmp
ss
push
or
test
adc
stos
mov
mov
rcrb
nop
push
xchg
sub
out
or
lahf
dec
push
or
adc
fxch
fisubrl
mov
add
hlt
adcl
fbld
push
sub
jmp
adc
adc
and
mov
mov
popa
xchg
add
cltd
or
pop
lds
sub
or
cmp
sbb
jecxz
lods
out
mov
test
sbb
adc
inc
test
addl
cmpsb
mov
push
jmp
jmp
incb
shrl
cld
push
insb
add
xchg
add
or
or
mov
sahf
xchg
rorb
rcrb
xor
mov
jl
mov
cwtl
outsb
push
adcb
sub
pop
mov
outsl
push
inc
loopne
push
sbb
dec
loopne
in
mov
pop
mov
sub
and
scas
ret
xchg
sbb
xor
movsb
sbb
mov
arpl
test
ss
cmc
rcr
lods
scas
jl
mov
adc
mov
push
sub
inc
andl
andb
test
in
shr
sub
enter
lods
or
daa
lret
jns
mov
jmp
rorl
lock
and
test
add
jns
mov
mov
cmp
jne
push
jne
add
and
mov
fs
cmpsl
cmc
jmp
push
pop
lahf
lahf
je
sub
in
push
dec
mov
add
push
inc
or
punpckhbw
movd
push
jmp
sub
and
add
aam
icebp
pop
fwait
push
lods
andb
filds
mov
cwtl
jae
add
adc
dec
ss
push
fstps
mov
jge
or
jecxz
dec
jns
ret
jl
mov
pop
sbb
repz
adc
sti
jmp
rorb
pop
and
jns
pusha
dec
addr16
test
adc
xchg
push
into
add
call
fwait
cmp
push
in
mov
fbld
inc
seta
pop
or
out
subb
adc
jae
jnp
jge
loopne
push
ret
mov
sbb
inc
shl
push
jns
lahf
dec
rclb
imul
jecxz
bound
pusha
dec
hlt
cwtl
mov
test
daa
in
jge
rorb
jb
sub
sbb
sub
test
sahf
mov
movb
out
std
sub
jo
cmp
add
sbb
push
or
push
sbb
sbb
pop
into
add
cmp
fisttpll
lock
sub
pop
ficoms
imulb
and
andps
push
in
fs
inc
lea
sbb
add
adc
sbb
dec
ds
mov
push
cmp
add
xor
dec
xchg
loopne
jecxz
sub
jmp
movsl
mov
out
push
insl
stos
xchg
jns
xor
je
rcr
les
push
push
fbld
pop
adc
sbb
in
leave
jecxz
shlb
ja
pop
add
adc
cmp
add
pusha
sub
xchg
xorb
aad
jbe
repnz
mov
dec
add
fiaddl
in
jmp
jle
jg
jbe
add
repz
sub
sub
inc
lea
add
push
add
add
dec
cwtl
lea
pop
test
dec
cli
mov
jle
sbb
in
popf
adc
aaa
pop
jne
sbb
daa
lods
push
add
xor
inc
mov
mov
cld
pop
mov
pop
inc
mov
mov
popf
add
fwait
cmp
outsl
jnp
js
ud0
inc
adc
sarl
and
jecxz
lods
push
jno
gs
mov
test
dec
adc
pop
xchg
inc
and
pop
and
clc
nop
pusha
sbb
rorl
scas
inc
jmp
aad
cld
jnp
sbb
cmp
lret
pop
mov
inc
inc
jle
enter
push
nop
or
add
mov
jne
andb
sub
lock
sbb
mov
pop
popa
mov
pop
xlat
add
rclb
data16
sub
jle
mov
and
es
jb
dec
cmpsl
add
cld
insb
push
sub
jp
mov
jne
jecxz
and
or
sahf
ret
dec
and
scas
xlat
out
mov
pop
or
jmp
outsl
mov
pop
inc
shll
cltd
add
subl
add
push
push
mov
jge
dec
add
adc
jns
cld
mov
mov
nop
arpl
xchg
loope
jle
sub
movb
mov
pop
xchg
rcrb
imul
inc
add
inc
mov
arpl
xor
and
add
xchg
lock
push
jge
inc
push
inc
xlat
pop
cmp
add
adc
push
hlt
and
insl
lret
jl
scas
jge
dec
mov
mov
ret
add
pop
push
jl
mov
lahf
sarb
pop
or
int
adc
add
mov
xchg
sbb
mov
js
sbb
mov
jne
mov
sahf
push
ljmp
mov
or
mov
into
nop
jmp
adc
insb
sbb
ja
mov
push
mov
add
dec
xor
push
cmpl
jp
xor
mov
test
push
sbb
dec
fistps
or
cld
cmpsb
push
incl
xchg
lock
push
mov
push
enter
cltd
mov
jb
cli
mov
ja
jl
rcrl
cli
cmp
or
push
sbb
addl
mov
inc
dec
push
cwtl
push
movsl
shrl
movups
outsb
add
inc
adc
gs
jg
arpl
and
xchg
rcrl
repz
les
jmp
push
dec
push
ds
gs
jae
add
lods
sub
push
adc
mov
cmp
inc
cmp
data16
sbb
adc
pop
fildl
mov
das
push
push
dec
enter
pusha
or
or
push
sub
mov
cmp
or
dec
pop
jb
or
xor
add
addr16
xor
aam
loopne
push
or
xchg
inc
lahf
sub
inc
add
pop
or
xchg
jno
lret
cmp
adc
xor
dec
pop
je
inc
fs
and
push
dec
inc
or
dec
les
orl
or
rclb
lret
push
or
ds
push
or
imul
add
push
cmp
dec
shlb
mov
sbb
sbb
lahf
or
ss
xor
mov
pop
aaa
or
nop
dec
punpcklbw
xor
gs
or
xorb
cmp
add
inc
loopne
inc
aas
mov
sbb
pop
and
pop
aas
add
mov
fdivs
mov
ficomps
in
pop
mov
or
push
mov
int
sbb
stos
cwtl
lock
icebp
ret
lcall
dec
cmc
ret
data16
mov
arpl
mov
mov
lcall
rorl
adc
mov
cmp
ret
rcl
arpl
test
cmp
mov
out
cmp
in
pop
or
or
cmp
imul
insb
pop
jno
add
adc
mov
mov
jo
mov
and
lcall
popa
push
in
xor
pusha
mov
rol
mov
ror
xor
call
sti
shr
xor
sub
jnp
xor
shr
xor
add
add
inc
add
dec
add
mov
mov
sahf
iret
hlt
fs
or
jae
or
cmc
not
and
fiaddl
sti
add
mov
add
jl
sub
imul
stos
repnz
mov
fisubrs
sbb
xor
and
and
xchg
push
aam
push
repnz
cs
cmp
mov
repnz
imul
sbb
fmull
pop
push
or
and
not
ret
rcl
add
add
cmp
add
add
xor
test
in
rcl
adc
call
repz
rorl
cli
mov
rol
out
dec
shr
add
push
xor
add
fsub
in
cmpsb
imul
in
cmp
aam
in
rclb
lahf
push
cmp
and
or
bound
push
daa
xor
punpckldq
pop
mov
push
add
xor
fadd
cs
cltd
call
push
shl
cwtl
loopne
in
sbb
loopne
or
dec
cmp
pop
cmp
movsb
imul
push
jbe
xor
or
xor
add
add
push
xor
and
and
ror
cmpsl
jge
iret
or
xor
mov
mov
hlt
xor
add
inc
adc
add
dec
enter
mov
push
mov
inc
jo
ret
push
jo
inc
inc
scas
add
adc
pusha
adc
dec
pusha
lcall
daa
stos
adc
push
loop
in
pop
jg
mov
add
add
pop
lcall
imul
ficompl
aas
lretw
push
clc
jp
push
and
add
add
aas
gs
fdivrs
inc
inc
lcall
xor
push
cmp
fmul
inc
add
pop
cld
mov
xchg
pushf
dec
sub
jo
cli
stos
orb
aam
aaa
cmp
dec
xorb
inc
sbbl
in
in
faddl
imul
shr
rolb
inc
xor
pop
add
sub
pop
xor
shlb
rorb
add
sub
dec
inc
scas
nop
cmpsb
loopne
call
add
inc
add
inc
sbb
xor
dec
in
es
lcall
add
call
inc
xor
add
orb
sahf
push
pop
xchg
or
in
push
push
dec
xor
rcrb
push
xor
adc
pop
jae
push
and
fwait
dec
add
or
imul
inc
push
pop
pop
or
inc
leave
gs
pusha
xchg
jb,pt
or
ds
adc
dec
add
adc
in
adc
cld
lcall
dec
icebp
clc
mov
fnstcw
dec
mov
insl
rcrb
dec
ljmp
imul
insb
and
aaa
in
add
and
cmp
push
add
cli
push
test
xchg
push
dec
aam
out
pop
add
sub
mov
pop
cmpl
add
lret
jb
sbb
decl
sub
pop
cld
sub
cmpsb
cmc
fstpt
lea
pop
xor
notb
mov
cmp
decl
sub
pop
or
or
rorb
aaa
or
or
mov
adc
in
push
dec
cmp
jae
mov
adc
ss
xor
aas
lea
jmp
or
sub
frstor
pop
add
outsb
fbstp
pop
dec
jne
pop
add
loope
lahf
push
add
lock
jl
sub
add
fidivrs
cmp
jbe
or
push
push
xchg
inc
adc
fildl
mov
lea
sub
jae
push
pop
fdivrs
sub
testb
stos
or
push
les
sbb
mov
push
pop
loopne
ror
mov
mov
xchg
or
xchg
ljmp
adc
mov
adc
dec
sbb
add
cmp
cmp
jb
cmp
ja
inc
andl
sbb
inc
aaa
popa
xor
shrl
xor
mov
je
add
rol
xor
sbb
mov
cmpsb
or
push
inc
adc
push
insb
mov
popl
xchg
add
das
repnz
std
arpl
je
mov
mov
sbb
mov
cmp
je
or
mov
adc
xchg
popa
cmp
jne
adc
or
in
call
lea
inc
mov
pop
dec
xor
iret
or
movsb
or
negb
mov
or
adc
add
and
loop
jno
rorb
in
or
stos
mov
cmp
fs
dec
inc
push
inc
and
punpcklwd
mov
adc
jp
pusha
mov
pop
cwtl
or
mov
inc
call
data16
insb
cmp
sbb
mov
xor
adc
lea
nop
mov
pop
mov
and
or
xor
sahf
imul
jle
lods
pop
cmp
jne
notb
pop
shll
testl
je
mov
mov
in
mov
inc
in
xchg
in
ja
pushf
push
or
cmp
push
mov
pop
inc
stos
push
and
inc
mov
sar
jbe
fsubl
jmp
popa
stos
loop
loop
jne
mov
mov
mov
inc
xchg
mov
fsubs
jb
aaa
xor
xorl
shlb
rcrl
jecxz
add
jmp
cwtl
aas
les
and
and
dec
hlt
xor
and
popa
mov
add
xor
inc
inc
lock
test
incl
or
add
pop
jae
mov
jmp
sub
push
popa
dec
shlb
cmp
mov
sub
loopne
add
push
push
sbb
push
inc
call
add
push
idivb
push
cltd
shrb
stc
inc
jg
or
out
out
jge
and
jle
es
mov
jle
sub
and
pop
cmp
jl
pop
jle
pusha
push
fimull
inc
test
pop
mov
jle
push
clc
pop
popa
test
fwait
and
or
je,pn
test
iret
jne
je
outsb
and
add
je
xor
ss
adc
popa
or
push
sbb
movsb
dec
inc
loope
je
inc
scas
xchg
inc
push
push
mov
inc
and
je
jb
add
mov
xchg
icebp
mov
xchg
push
jae
mov
pusha
inc
es
add
add
xor
lahf
sahf
and
add
push
fisttpll
rorl
add
das
lcall
rorb
xchg
ljmp
notl
xchg
mov
data16
push
test
inc
add
mov
js
add
sbb
jb
test
pop
rclb
movsb
jne
ret
cmp
xchg
mov
add
pop
outsl
xor
cmc
inc
mov
xor
or
nop
push
cli
outsb
clc
sbb
sahf
sub
xor
push
push
push
arpl
cmp
in
pop
push
xor
cmp
mov
daa
xor
cwtl
loopne
inc
das
mov
or
xchg
sbb
pop
int3
push
rcrb
cld
mov
stos
dec
daa
mov
add
pusha
xchg
mov
cmp
push
cmpsb
fldt
lahf
push
inc
and
jae
js
xchg
xor
getsec
and
cmp
je
test
adc
daa
jbe
push
fsts
sti
mov
lcall
or
mov
xor
add
mov
push
and
inc
mov
dec
sub
ds
add
push
stos
movsb
jo
insb
pop
push
gs
push
and
fs
mov
mov
lidtl
adc
dec
cmp
add
push
test
inc
sbb
push
mov
pop
roll
or
push
cmp
push
cmp
lock
enter
popa
push
sbbb
clc
hlt
inc
xchg
fildl
stos
orb
std
push
mov
roll
cld
ds
pop
ret
shrb
or
sub
sub
pusha
mov
xor
jb
cs
es
fisttps
es
add
ds
dec
adc
mov
dec
lea
hlt
sti
push
je
dec
mov
jns
jno
insl
mov
roll
mov
and
add
cmp
push
xor
xchg
jne
lahf
jne
and
addl
sbb
push
xchg
xchg
adc
int3
popa
pop
adc
or
insl
pop
movsl
mov
iret
push
leave
mov
cmp
or
jns
sub
xchg
or
mov
inc
or
xchg
lea
lahf
test
pop
pop
dec
adcl
sub
cmp
movb
ffreep
lock
rclb
jnp
loopne
ret
sub
mov
rorb
mov
add
ret
dec
insb
mov
mov
andl
sahf
push
loopne
jne
dec
rclb
js
testl
cwtl
mov
add
mov
push
push
fdivl
ds
add
cwtl
test
cmp
incb
imulb
sbb
das
sarb
cmpl
dec
adc
lcall
cmpl
int
jbe
dec
dec
pushf
repz
push
mov
inc
cmpsb
dec
pop
pop
xor
cmp
je
mov
cmp
icebp
lds
add
inc
xchg
and
outsb
loope
jge
pop
and
aaa
sbb
das
lods
jb
push
sbb
sbb
push
sbb
lahf
stos
adc
push
lcall
jmp
fsubr
cmp
jo
push
sbb
rorb
push
cmp
fsubp
cmp
fs
insb
jne
fsubs
push
jl
sub
jge
arpl
out
add
inc
push
lret
pushl
ss
or
inc
lock
adc
pop
cmp
jne
daa
push
jo
les
aam
adc
popa
les
inc
push
sub
cs
call
sti
and
dec
mov
mov
sbb
test
or
cmp
jl
jo
icebp
mov
add
and
jae
push
or
or
dec
and
or
sahf
loope
pop
stc
cmpb
je
ds
mov
xchg
nop
jmp
inc
push
sbb
ds
in
adc
pop
je
pop
addb
rorl
cmp
push
sbb
mov
jmp
add
addb
rol
jne
mov
xchg
outsl
inc
sub
cmpb
mov
mov
xchg
mov
cs
sub
xor
cmp
pushl
mov
mov
mov
fmuls
and
mov
pushf
sbb
cmp
fiaddl
popa
inc
push
ds
out
add
mov
mov
imul
cmp
movsb
sub
mov
test
cmp
jbe
in
fiaddl
and
and
mov
dec
fadds
stos
push
sub
jb
pop
xor
xor
sub
cmp
call
mov
pop
es
pop
mov
add
ret
xor
addb
or
push
adc
data16
movsl
adc
pop
imul
fbld
inc
mov
push
shr
cs
lds
and
fldenv
push
push
imul
in
mov
and
cmp
mov
push
sti
push
mov
xor
out
push
jne
mov
int3
sbb
jmp
nop
addl
pop
push
shll
inc
nop
inc
shrb
push
je
add
and
int3
dec
sub
aas
push
xlat
sahf
cmp
or
or
add
fwait
sub
popa
jbe
or
addl
mov
push
lock
lock
dec
xor
ss
cmpsl
sbb
mov
jne
sbb
nopl
stos
sbbb
cmpb
pop
lcall
mov
add
roll
cmp
mov
pop
mov
enter
jne
dec
call
xor
jbe
mov
sub
pop
xchg
mov
mov
mov
std
sahf
loope
cmp
shll
adc
or
bound
push
daa
cwtl
popa
push
xor
xor
dec
mov
jl
dec
sbb
push
neg
sub
add
push
jbe
data16
push
adc
sub
adc
rorb
pop
lods
frstor
xchg
dec
mov
pop
mov
fmuls
addr16
rorl
and
xlat
mov
xor
push
fwait
je
or
sbb
sub
jnp
das
sbb
sbb
imulb
js
dec
and
push
jns
inc
sub
or
in
xor
les
or
bound
inc
sbb
or
xor
mov
sbb
shlb
xor
fxch
mov
cmp
cli
cmpsl
mov
add
xchg
adc
hlt
mov
inc
pop
dec
rol
sbb
aam
fidivl
enter
loopne
or
mov
push
movsb
mov
hlt
xorl
imul
xor
or
xchg
and
sbb
add
pop
popa
adc
pop
or
int3
jbe
dec
scas
dec
cld
aam
inc
or
push
notb
aaa
jbe
push
out
push
xlat
and
sub
push
pop
sbb
int
adc
loop
test
or
jg
sbb
and
ret
mov
mov
pop
push
mov
adc
and
lods
inc
cmp
add
push
adc
xor
imul
xor
cmp
and
adc
clc
or
bound
xor
push
push
call
sbbl
lea
outsb
adc
mov
lea
add
xor
xchg
pop
xor
cmpsb
xchg
in
pusha
mov
pop
dec
pop
pop
pop
pop
sub
inc
rcrb
push
inc
insl
xor
in
and
ret
or
icebp
push
fiadds
inc
insb
or
or
push
push
gs
and
add
mov
and
sub
jae
push
pop
add
leave
dec
jae
mov
add
or
popa
faddp
outsb
ror
sti
insb
ret
add
jnp
xchg
clc
add
dec
and
jbe
imul
pop
xlat
and
jo
leave
mov
mov
add
rorb
sub
ds
cmp
inc
loop
push
dec
loop
push
cmp
sub
xor
pusha
ljmp
js
and
sub
push
inc
shll
and
or
jg
mov
and
mov
and
add
cmpsl
popf
push
adc
push
and
sub
mov
shr
dec
orl
inc
push
sub
xchg
popl
inc
sub
mov
rolb
xchg
or
clc
clc
mov
or
or
xchg
or
and
sbb
and
or
or
cmp
pop
cmp
fldl
cmp
sub
xchg
mov
pop
or
and
mov
fldenv
incl
and
mov
push
xchg
rorb
ds
pop
or
fcoms
push
dec
inc
dec
bound
call
les
pop
arpl
xlat
mov
push
push
adc
sub
xor
or
fs
xor
xor
jecxz
pop
mov
mov
pop
shlb
inc
and
adc
xchg
mov
in
in
sbb
cltd
cmp
bound
cmpsl
jmp
xor
sub
push
lock
adc
mov
mov
lock
lahf
nop
push
xor
mov
shrb
push
mov
jne
dec
mov
into
or
pusha
pop
adc
hlt
iret
inc
pop
movsb
cmp
jae
sbb
add
daa
bound
inc
dec
cmp
mov
call
stos
jge
sbb
sub
pop
cmp
push
and
mov
imul
testb
add
jle
or
xor
loopne
mov
mov
pushl
xor
cmp
adc
jmp
sbb
fdivs
into
clc
fucom
and
mov
adc
push
dec
call
stos
mov
outsb
mov
pop
add
sub
test
mov
inc
or
test
cli
je
cmp
add
push
inc
cs
push
sbb
movb
push
add
addr16
adc
adcl
cmp
icebp
mov
jge
xlat
dec
inc
imulb
adc
xor
jb
jp
adc
sub
push
pop
inc
mov
jo
je
cmp
jbe
lds
jmp
jbe
mov
ja
filds
xor
enter
push
push
or
ffree
jp
in
insl
xchg
cmp
pop
xor
mov
and
push
not
mov
adc
fidivrl
test
repz
int3
push
or
pop
movsb
jmp
test
imul
movsb
movsl
jle
jae
mov
mov
std
push
push
lea
les
repnz
adc
lock
pop
jmp
jnp
cmp
cmp
out
push
add
cmp
pop
adc
push
in
push
shll
sub
cmp
push
cmp
nop
add
pushaw
cmp
inc
rorb
or
insl
mov
jo
and
push
sbb
xchg
mov
push
sbb
pop
pop
pop
mov
jo
xchg
loope
es
add
and
mov
das
sar
movsb
pop
mov
and
add
push
inc
sub
add
add
and
test
inc
push
and
push
addl
adcl
cmovs
xor
arpl
jbe
lret
sahf
in
and
cltd
cltd
push
add
add
cltd
add
jmp
push
cmc
dec
mov
ja
mov
int3
pushf
jg
aas
shl
and
pop
bound
mov
jbe
cmp
jmp
das
add
mov
xchg
push
lods
mov
cmp
add
fs
xor
xchg
push
or
inc
inc
and
pop
addr16
jle
adc
or
sbb
data16
adc
pusha
jo
mov
fstpl
insb
rcll
sarl
test
lcall
roll
mov
shrb
mov
add
sahf
push
pop
mov
add
push
mov
andl
imul
mov
ret
fidivrl
adc
push
jb
sub
xchg
cli
ss
jle
ss
lods
mov
mov
or
sbb
mov
sbb
mov
inc
jl
test
adc
daa
stos
mov
inc
inc
jbe
adc
shll
jmp
sar
dec
cmp
dec
jecxz
lods
mov
sbb
add
mov
inc
sahf
fisttpll
push
add
add
ja
repnz
clc
nop
ret
xor
dec
push
shlb
xchg
and
or
sbb
push
lods
scas
cmp
jns
dec
xor
test
or
icebp
popf
dec
loopne
popf
pop
jg
mov
cld
add
push
js
mov
and
and
in
inc
jl
push
push
sbb
add
mov
lock
scas
rol
xchg
stc
pushl
lret
ret
mov
outsb
ss
pop
sub
icebp
sbb
add
enter
or
adc
pop
mov
or
les
sub
jb
add
xchg
inc
adc
pushf
sbb
int
inc
push
lret
fbld
in
pop
cmp
xchg
ss
xlat
es
je
cmp
clc
mov
ret
or
inc
inc
lea
mov
jge
push
sbb
push
dec
mov
sub
jb
lea
cmp
sbb
scas
jecxz
outsl
pop
scas
sub
lcall
cmpsl
push
mov
inc
ss
cmp
xorl
add
mov
loopne
jae
ss
jb
jecxz
lahf
nop
sbb
mov
xorl
jle
mov
inc
add
out
push
loope
ja
mov
cmpsb
lcall
sbb
rcl
and
push
stos
dec
loop
and
mov
int
aad
cmp
xchg
xchg
xor
xchg
inc
mov
jp
fmull
and
push
push
mov
fwait
xorl
pop
and
and
cld
rorl
mov
loopne
lahf
les
xor
pop
fmull
mov
jl
inc
mov
clc
jmp
in
inc
add
pop
aam
pop
sarb
sub
push
hlt
imul
push
js
pop
sbbb
jmp
andl
jp
or
adcb
adc
add
repz
xchg
aam
mov
dec
add
inc
push
ret
lahf
aaa
movsb
inc
jo
push
and
mov
xchg
pop
cmp
jne
int
mov
rep
rorb
push
rcr
pop
adc
cmp
sub
sub
aam
xor
dec
stos
cmp
repnz
cwtl
jnp
imul
mov
mov
or
clc
dec
popf
jge
xor
ljmp
jmp
cmpl
add
push
xor
or
movsl
scas
dec
jle
les
xchg
xor
loope
sbb
adc
inc
das
js
testb
sub
inc
jo
and
inc
push
jo
inc
sub
push
and
les
jne
icebp
adc
add
in
and
sbb
inc
scas
mov
xchg
inc
add
imul
xor
xchg
fcoms
or
push
shll
loopne
mov
xchg
int3
jg
cmp
clc
or
es
into
or
sbb
dec
aad
ja
fmull
je
xchg
mov
sbb
fadds
add
data16
or
orl
adc
insl
dec
and
fdivrl
dec
arpl
sbb
dec
adc
ja
sti
jmp
push
push
adc
and
mov
inc
jl
add
xor
add
push
add
int
sub
or
ds
sar
dec
sbb
decb
jle
sahf
sarb
inc
xor
loop
and
cmp
call
lret
add
pop
das
imul
mov
es
mov
or
xchg
lret
cmp
je
add
push
mov
pop
inc
add
dec
push
mov
push
sbbl
sbb
pop
add
add
xchg
in
adc
cmc
dec
lea
ret
mulb
add
cmp
shrb
sbb
jge
cli
dec
mov
and
dec
push
out
adc
mov
sbb
lds
add
push
or
das
add
loopne
out
in
cmp
push
mov
data16
pushf
lea
das
inc
clc
add
inc
adc
dec
xlat
sbb
cs
sub
mov
call
add
out
imul
movsl
nop
mov
orb
sub
add
lcall
test
jno
fcmovnb
inc
push
cwtl
fs
addr16
cmp
jno
loopne
lock
test
mov
ret
add
and
lods
jne
and
push
ss
rcr
mov
test
jae
dec
fdivs
xchg
sbb
push
adc
mov
push
mov
xor
ja
cmpsl
push
pop
lods
inc
inc
add
xchg
mov
stos
mov
scas
stc
mov
loope
push
sbb
inc
push
and
push
xchg
cli
pop
add
and
getsec
leave
ret
pop
mov
mov
mov
lds
add
in
iret
or
dec
iret
dec
in
and
jl
and
adc
addl
sbb
sub
cmpsl
sti
push
or
push
movsb
test
pop
mov
test
xchg
mov
pop
adc
pushf
cltd
mov
stc
adc
xor
and
clc
mov
push
add
in
mov
sub
je
insl
pop
es
data16
add
push
stos
dec
ret
call
mov
shll
xchg
call
xor
sbb
adcb
sub
scas
ret
lds
or
inc
sbb
lea
loop
push
xor
jge
mov
loopne
subb
sub
add
sub
scas
shrb
push
lock
pusha
loop
cltd
aam
les
js
xchg
xor
add
adc
sar
dec
das
mov
sub
add
mov
test
xor
in
push
cmpsl
das
stc
inc
into
std
popl
add
mov
jmp
push
mov
push
add
inc
mov
fsubp
dec
cmp
inc
inc
popa
arpl
and
inc
or
cmp
call
cmp
push
jge
int3
inc
cltd
jp
divl
sbb
xchg
add
mov
or
adc
addl
adc
adc
cwtl
dec
lods
or
and
mov
inc
sub
pop
mov
dec
xchg
add
inc
addl
ja
jbe
icebp
aas
or
pop
cmp
je
mov
push
mov
mov
jl
mov
cmp
push
sub
jl
add
dec
fistl
mov
jl
jmp
mov
imul
xchg
sbb
in
push
jg
push
stos
mov
adc
sub
dec
je
dec
sub
insb
pop
loope
jge
mov
mov
movsl
jl
sub
lods
inc
xor
add
or
ljmp
dec
add
cld
jmp
cmpl
and
add
add
and
inc
xchg
pop
cmp
int3
dec
mov
fbstp
mov
push
jmp
ficompl
dec
jae
xchg
jge
sub
cmp
mov
and
and
adc
adc
xchg
in
cmc
add
mov
lret
sbb
dec
jo
lahf
dec
repz
dec
inc
in
pop
pop
push
rcl
incl
xor
imul
int
jbe
in
jo
inc
push
rcrb
shrb
xor
cmp
pop
cmp
lea
adc
ds
lret
sbb
add
pop
orl
cltd
add
inc
adc
and
push
es
xor
fnstsw
add
clc
adc
adcb
mov
inc
push
fcomi
xor
in
adc
add
mov
sahf
cmp
into
and
mov
lea
sbbl
and
jmp
rorl
jl
jl
iret
lea
loope
lea
ds
out
sbb
enter
insb
call
mov
push
call
cmp
je
add
push
shlb
inc
sbb
cwtl
sub
jmp
sub
xchg
xor
sbb
xchg
jbe
idivl
xchg
lret
lock
sub
add
xorps
shr
xchg
or
or
enter
ljmp
sahf
inc
mov
sbb
pop
cmp
or
pop
mov
je
jg
ret
xchg
cld
adc
sub
and
inc
lea
mov
and
sbb
faddl
out
cmp
cltd
add
pop
or
popa
mov
cmp
inc
mov
cmp
icebp
fcomps
xchg
mov
enter
bound
cmp
loopne
dec
pop
mov
rolb
dec
xor
mov
or
popa
pop
mov
jno
and
xor
fisubrs
test
pop
lods
shl
mov
jge
mov
cmp
add
iret
pop
sub
incb
adc
inc
adc
fdivs
adc
or
mov
mov
cmp
xchg
pop
cmp
jo
pop
insb
in
mov
inc
inc
cmp
divb
dec
rorl
dec
dec
dec
clc
jne
mov
fsubrp
cltd
push
push
test
cmp
or
fnclex
sub
out
movsb
cmp
stos
es
insl
js
sbb
stc
adcl
mov
or
sbb
hlt
hlt
test
xor
jb
inc
sbb
lcall
dec
xor
outsb
cmp
call
mov
sbb
jl
or
push
js
sbb
adc
fistl
cld
push
dec
or
sub
jne
mov
sbb
or
xchg
add
or
pop
sbb
or
lock
adc
pushl
inc
add
lods
nop
add
push
mov
mov
sbb
iret
inc
xchg
or
xor
inc
inc
dec
idiv
movl
push
inc
lcall
std
nop
add
iret
les
inc
or
fadds
push
sub
repz
inc
cmp
xchg
mov
dec
xor
fists
adc
cmp
inc
inc
or
mov
or
jo
mov
pop
mov
mov
xchg
mov
xchg
lea
xor
mov
push
or
mov
adc
call
adc
ja
mov
popf
loopne
sti
inc
add
sbb
cmp
adc
xor
lcall
add
adc
test
push
adc
add
fcomps
sti
inc
scas
pop
mov
lds
lds
adc
in
mov
mov
jbe
inc
in
xchg
lods
rorb
scas
mov
push
pop
or
inc
sub
pop
scas
decl
push
add
xor
pop
adc
insb
ret
add
adc
or
sar
pusha
and
jne
mov
bound
lods
sarb
dec
insb
xchg
or
and
add
cld
fnstcw
adc
and
leave
mov
push
sahf
adc
lcall
jo
xor
mov
out
or
scas
movsb
orb
movsb
or
lahf
mov
fmulp
xchg
rcl
dec
and
sbb
fdivs
cmp
or
jl
cltd
sbb
ljmp
pop
clc
xor
sub
mov
inc
push
nop
sbb
mull
xor
nop
lret
lret
xor
inc
or
sbb
aaa
cs
sub
cmp
fcomi
inc
add
adc
popf
out
dec
dec
jmp
dec
inc
cwtl
sbb
sbb
mov
sbb
gs
or
jo
adcl
jp
pop
jo
push
orb
test
test
je
cmpl
cmp
addb
pop
sub
test
sarl
cmpb
add
cmp
adc
adc
dec
sub
jmp
mov
xchg
test
mov
sbb
and
ret
inc
popa
lahf
loope
jns
jo
out
inc
ret
sub
in
pop
push
jbe
inc
adc
xchg
push
xor
addr16
sbb
push
lds
fiaddl
add
add
mov
cld
mov
cmpsb
in
stos
nop
fnstenv
jbe
test
pop
xor
sbb
mov
adc
xor
ds
jb
addr16
je
mov
xor
nop
data16
cltd
pop
mov
cmp
sbbb
out
clc
and
mov
pop
mov
push
inc
cmpb
leave
jb
push
jae
aaa
lea
ret
jg
into
jo
dec
jp
or
pop
mov
and
sbb
out
jns
mov
mov
push
popf
ret
gs
inc
jmp
enter
pushf
fisubrl
je
imulb
inc
rorl
aaa
clc
push
xlat
or
and
mov
add
test
lea
sahf
mov
adc
mov
mov
adc
hlt
cmc
adc
mov
ljmp
dec
sbb
dec
pusha
daa
mov
push
add
dec
sbb
sbb
cmp
pushf
mov
jmp
xor
or
cmc
jp
pop
or
daa
push
in
add
fabs
dec
push
sahf
add
enter
mov
add
inc
outsl
scas
sbb
movsb
xor
lret
mov
dec
sbb
inc
add
xchg
inc
sahf
sahf
adc
sub
xchg
or
cmp
add
out
in
jl
hlt
pop
adc
cmp
dec
inc
add
movsb
sti
adc
outsb
xor
call
mov
cwtl
push
inc
xor
insl
xchg
sub
bound
call
out
test
sbbl
jmp
clc
scas
pusha
adc
pop
mov
pusha
rorl
add
icebp
daa
pop
jo
or
repz
jno
add
sbb
or
pushf
ja
lret
sbbl
mov
inc
push
adc
sub
orl
dec
cs
pushf
lahf
pop
outsl
inc
les
popf
rol
test
pop
dec
arpl
leave
popf
fsub
and
jbe
or
inc
sarb
pcmpeqw
fdiv
dec
jecxz
outsl
jl
out
or
in
addl
notl
xor
mov
jo
mov
faddp
xchg
push
sbb
inc
je
psrlw
pop
pop
js
sub
lahf
in
push
sbb
push
insb
loope
push
test
cs
test
pop
push
add
add
push
mov
and
aaa
jo
or
ficomps
fsubrl
xchg
dec
imul
xor
lea
xchg
push
mulb
subb
mov
in
and
push
cmp
addr16
dec
add
sbb
loop
sbb
mov
fadds
mov
roll
or
dec
andl
push
dec
pop
fimull
dec
or
sbb
cld
add
xchg
inc
je
dec
adc
xchg
push
mov
cmp
pop
jne
push
jae
sbb
sbb
out
fisttps
cs
xchg
xchg
loopne
test
pop
rcrb
pop
xor
into
nop
addr16
sub
add
js
cmpsb
stc
mov
notb
insb
enter
mov
pushf
jmp
mov
sbb
jae
sub
setbe
cmpb
adc
ljmp
mov
cltd
pusha
cmp
lret
add
pusha
xor
imul
in
add
test
incb
mov
fcomp
jecxz
jle
pop
lea
insb
cmp
push
icebp
repz
pop
je
aad
or
jae
roll
sub
push
cltd
sbb
push
cwtl
xchg
aad
rcrl
jle
sub
loope
or
sub
add
mulb
add
jb
inc
pop
fwait
push
repnz
cld
pop
test
sub
inc
addl
and
das
fildl
mov
pop
add
in
push
mov
add
xor
cmp
and
imul
push
dec
test
jecxz
mov
xor
jmp
pop
int3
adc
push
add
xor
xor
mov
mov
test
mov
sbb
sbb
cwtl
repz
sub
imul
or
jmp
or
mov
rolb
sbb
dec
sub
mov
and
cmpl
and
inc
lret
jmp
lea
dec
sub
jp
cmpsb
nop
loopne
mov
xor
or
shll
mov
cmp
cmp
orb
inc
mov
push
arpl
call
jge
and
fdivrl
repz
push
jae
lea
xchg
xor
loop
sub
sbb
aam
jne
push
inc
mov
stos
insb
mov
ja
push
sub
pop
dec
daa
lahf
or
inc
jo
mov
call
mov
sbb
fnstenv
push
rcll
cmp
cmp
jae
inc
jmp
push
jp
sub
popa
js
outsl
xor
test
and
ret
jmp
test
roll
mov
push
inc
add
fsub
sub
clc
andl
jns
push
add
pop
mov
inc
lods
test
mov
ja
dec
daa
push
int3
and
lock
push
push
dec
in
mov
sub
sbb
rorb
je
movb
sub
cmp
mov
mov
lret
dec
add
in
xchg
jnp
pop
call
push
jl
pushf
rcrb
insl
sahf
push
cmp
or
pop
rclb
fcmovbe
pop
push
loopne
add
jl
and
mov
dec
cmp
push
gs
xor
sbb
add
or
add
js
int
mov
pop
bound
ss
and
adc
lea
mov
dec
add
cmp
ja
cmpb
mov
pusha
or
clc
dec
leave
jne
jl
pop
mov
lret
inc
mov
ds
push
sub
invd
enter
mov
mov
cmp
sub
push
inc
or
add
dec
adc
bnd
xor
add
repnz
orl
and
sti
mov
jmp
mov
adc
shlb
lea
cli
ja
cmpb
mov
aas
ret
push
xchg
sahf
sub
add
std
adcb
push
add
cmp
in
mov
push
and
or
lea
fstl
out
into
dec
cmpsb
imul
imul
sub
xchg
popa
mull
xor
mov
clc
inc
fisttpll
xchg
adc
dec
enter
jbe
push
pop
sub
cmpsb
xor
ret
dec
and
hlt
pop
out
xor
mov
outsb
icebp
rorb
add
cmp
lock
cmc
sbb
lret
push
mov
cmp
testb
and
mov
int3
mov
xchg
and
testl
dec
push
dec
insl
or
ficompl
cmpsb
cltd
test
add
cld
jp
and
ja
mov
cwtl
daa
rorb
dec
sub
pop
fnstcw
push
out
inc
push
iret
icebp
mov
pusha
xchg
inc
leave
leave
or
mov
hlt
inc
push
es
or
jp
inc
in
arpl
or
xchg
loope
xor
minps
mov
hlt
inc
filds
cmp
push
push
xor
or
adc
and
and
sub
mov
push
push
push
lret
mov
daa
cli
push
es
sbb
add
or
cmp
dec
movl
sub
in
add
or
sbb
push
sbb
adc
daa
leave
cmp
adc
mov
sub
sbb
jo
mov
fisubrl
mov
jmp
test
cmp
jne
frndint
ret
adc
mov
or
sbb
cmp
scas
dec
gs
loope
xchg
flds
loop
gs
xor
testb
adcl
and
jae
es
inc
add
mull
mov
inc
mov
adc
or
rcrb
mov
call
xor
in
or
or
in
das
adc
ret
cwtl
push
push
iret
aaa
and
iret
ljmp
das
mov
sbb
push
dec
jne
mov
pushl
scas
push
push
fnsave
mov
dec
adc
xor
int3
mov
fdivl
imul
repnz
insb
sub
mov
fcoms
pop
fwait
mov
fcmovnu
ljmp
or
cmp
loop
cmp
mov
pop
sub
mov
aaa
pushf
adc
push
xorb
mov
ret
mov
sub
es
stc
adc
mov
jo
inc
mov
scas
scas
cld
cmpsb
mov
ljmp
ret
fldl
mov
loopne
jnp
and
or
fsub
movsb
insl
adc
cli
jle
jne
mov
jne
cmp
mov
cmp
add
xor
cli
and
ret
pop
cwtl
mov
aas
leave
add
add
xor
and
loopne
dec
test
xchg
and
enter
mov
test
lret
jmp
push
in
ror
subb
fisttpl
subb
shr
mov
mov
test
lods
jo
add
xchg
cmpsb
loope
je
stos
push
or
push
add
imul
xor
int3
mov
mov
loopne
movsb
pushf
movsb
loope
pushl
call
pop
testl
sbb
inc
add
adc
fsts
xchg
and
xchg
mov
cmp
lock
in
xchg
fsts
push
sub
xor
ret
aaa
fdivs
lcall
pop
dec
fucomi
jne
clc
mov
cld
or
outsb
stc
push
in
mov
into
pop
push
cmp
ss
mov
cmpl
push
push
js
ficoms
mov
jmp
das
mov
sbb
xor
int3
adc
push
cmp
mov
cli
push
add
add
adc
data16
ret
add
or
sub
jge
mov
insl
add
je
enter
pop
pop
push
ret
mov
xor
jno
jecxz
into
popa
pop
sub
pusha
cmp
jne
fisubrl
push
and
or
mov
pop
mov
movsl
std
jae
addb
lds
testb
push
fwait
subb
dec
fimuls
xchg
xchg
das
rorl
idivb
push
pushw
sbb
pop
mov
or
mull
add
pop
pop
pop
ret
mov
mov
imul
mov
rorb
enter
adc
or
sarl
push
in
inc
clc
push
xor
or
test
aad
pusha
cmp
stc
das
mov
pop
push
add
sub
mov
add
push
push
adc
mov
xorl
jo
inc
pop
sub
pop
or
outsb
in
inc
or
sub
out
sub
cmp
popa
lea
aam
enter
mov
stos
mov
xchg
test
inc
adc
jns
call
or
inc
or
js
sbb
or
push
and
dec
dec
mov
mov
in
push
aam
adc
fnsave
xchg
test
ret
adc
or
sbb
sub
cmovo
xchg
add
outsl
adc
ss
mov
enter
xor
mov
bt
jbe
out
sbb
sbb
mov
lea
mov
out
jo
fsubrs
insb
sub
push
jnp
xchg
repnz
mov
inc
xchg
dec
push
push
xchg
mov
mov
mov
dec
mov
push
sbb
cld
adc
loope
pop
icebp
cmpl
into
or
popl
sub
mov
mov
repnz
push
out
cmp
adc
jo
add
fdivl
push
pop
rcll
jne
outsb
adc
incb
mov
push
mov
lock
jb
hlt
mov
push
and
das
loop
mov
cmpl
jne
sbb
jb
loopne
cmpsl
mov
inc
lcall
and
or
testl
sarl
xor
adc
aaa
repnz
cmp
jle
push
clc
imul
and
mov
shlb
mov
in
mov
or
dec
stos
mov
cmpsb
sbb
jne
push
add
jb
and
loop
xor
push
push
inc
and
pop
xlat
pop
push
pop
imul
rorb
and
or
pop
add
pop
mov
enter
push
arpl
add
xchg
dec
popf
dec
insb
mov
adc
mov
or
or
insb
mov
lahf
loopne
int3
pop
sahf
dec
jo
dec
dec
pusha
icebp
out
adcb
add
or
ret
inc
hlt
push
cmpl
adc
add
pop
push
push
adc
cmp
add
test
sub
mov
jne
pop
push
fcompl
inc
sbbl
outsl
stos
lret
jne
cmp
cmp
out
add
push
add
hlt
mov
xchg
inc
cmp
mov
shlb
imul
dec
add
pop
test
sub
out
cli
testb
je
cmp
mov
and
cmp
mov
ret
sub
imul
push
adc
add
outsb
inc
jb
add
lcall
dec
popa
sbb
lret
adc
imul
cmpsl
jg
inc
loope
in
sbb
imul
xor
jg
sub
or
jo
je
shlb
and
fisttps
push
mov
push
sbb
add
jg
dec
movsl
gs
mov
lods
mov
jge
push
add
add
xchg
push
add
mov
mov
fisubrs
mov
jo
and
push
pop
nop
sarb
movsb
or
cmpsl
xor
mov
push
push
mov
inc
data16
sbb
or
inc
dec
add
mov
and
out
sbb
xor
nop
cld
inc
fcoml
add
push
push
xlat
stos
jmp
es
pop
addb
or
jge
dec
xlat
pop
mov
sbb
mov
dec
std
add
ret
ds
clc
fwait
mov
rorl
sbb
sbb
mov
sbb
sbb
push
mov
pop
cmpb
leave
jmp
and
nop
insl
je
or
push
add
sbb
adc
inc
and
aam
sub
bswap
lret
into
jne
popw
pop
push
sbbb
add
jmp
pusha
outsl
clc
push
scas
add
sbb
jmp
push
leave
test
pop
xor
repz
das
sub
into
xor
push
mov
sbb
int3
rcpps
notl
cwtl
or
sbb
test
xor
and
lcall
lods
aas
fisubrl
insb
inc
mov
cmp
in
gs
es
loopne
ds
pop
fdivs
cmp
jne
push
imul
push
adc
fldlg2
mov
mov
fiaddl
iret
imul
aaa
les
push
popf
test
lret
and
push
fsubrl
inc
popl
sbb
dec
andl
orl
cmp
sbb
test
xchg
mov
jmp
shlb
loopne
xchg
rcrb
push
adc
sub
mov
cmc
push
jbe
loopne
outsb
lcall
sub
sbb
cltd
push
and
nop
mov
push
pop
shll
xchg
or
xor
rcll
scas
and
xlat
shrl
dec
jne
lcall
add
dec
jbe
aas
push
ficoms
jae
lcall
loopne
fcoml
outsb
dec
rorl
lds
push
or
jae
filds
dec
inc
sbb
push
cltd
cmp
mov
add
sub
cmp
out
or
sbb
mov
sbb
lock
bound
pop
push
leave
or
or
fld
scas
jbe
push
dec
adc
mov
sub
adc
in
loop
test
insb
pop
add
loopne
pop
pop
add
cmp
insl
loopne
rcrl
ret
call
cwtl
sub
mov
fstps
dec
les
cmp
and
or
dec
fs
fcmovbe
lock
loopne
fsubrs
popf
jmp
xchg
dec
adc
fucomi
dec
loop
sti
sbb
sub
push
and
mov
adc
and
repz
mov
dec
cmp
jbe
aad
add
ss
stos
orl
cmp
subl
xorb
dec
fidivrl
insb
mov
xor
pop
jns
cmp
lret
pop
cmp
adc
cs
and
outsb
pop
in
ja
pop
aam
lock
dec
pop
cwtl
dec
jle
dec
in
pop
icebp
add
ficompl
xchg
cmp
imul
xchg
inc
add
cmc
push
push
scas
test
xchg
jns
test
mov
or
fmulp
mov
adc
cmpsb
inc
cmp
in
shlb
je
je
call
adc
sar
inc
mov
testl
pop
cltd
fisubrs
fistpll
ret
mov
dec
dec
push
ds
jae
mov
jb
mov
jo
mov
andl
adc
inc
or
xor
sti
adc
loopne
pop
mov
and
sbb
fdivl
jo
jo
cmp
add
and
test
dec
loopne
pop
out
ja
cmc
sbb
ret
fisttpl
andb
ficoml
inc
adc
jle
lds
in
dec
out
out
scas
sbb
nop
outsl
push
dec
popa
out
cmp
pusha
add
jnp
movb
adcb
adc
pop
or
les
jb
mov
add
shll
pop
and
les
scas
pop
inc
movsl
movsb
cmp
adc
xchg
mov
pop
cmc
shll
lock
pop
rolb
or
test
push
sahf
and
mov
fsubl
or
inc
inc
xchg
pop
fisttps
jbe
aam
cmp
mov
js
inc
inc
inc
mov
cmp
jmp
or
daa
and
pop
shll
add
push
and
movsb
inc
dec
push
pop
out
inc
sbb
jge
jmp
je
xchg
js
ds
pusha
mov
repnz
or
sbbl
aam
push
mov
add
in
inc
add
pop
mov
sbb
popf
sbb
vpcmpeqw
sbb
mov
flds
ret
pinsrw
lret
jmp
dec
push
or
popa
insb
sbb
mov
add
mov
scas
dec
xlat
and
inc
or
mov
je
jmp
or
push
dec
nop
push
movl
mov
jns
shlb
sbb
sbb
add
cmp
cli
jg
jmp
shlb
mov
mov
daa
xor
cwtl
push
xor
sbb
and
jnp
mov
cmpsl
loope
bound
dec
mov
xchg
push
sub
aaa
and
outsb
cmp
push
mov
dec
inc
outsb
pop
sbb
pop
pop
and
pop
push
sbb
mov
and
mov
or
and
inc
mov
ds
and
shrb
jl
cli
imul
and
inc
inc
mov
adc
mov
dec
push
insb
inc
sbb
fstps
and
dec
push
xchg
outsb
test
adc
jmp
sbb
add
and
ss
jb
push
popf
movsb
add
shll
cmp
pop
mov
xor
push
insl
or
adc
push
jmp
push
enter
adc
cltd
gs
loopne
sub
sub
mov
lahf
enter
test
jno
mov
arpl
aas
dec
pushf
inc
jp
cmp
jne
and
loop
mov
mov
add
dec
xchg
pop
ja
mov
dec
orl
xchg
jno
and
jo
dec
mov
xor
dec
push
lods
dec
mov
rcll
jecxz
fsubl
pop
jle
adc
adc
repnz
or
sub
test
or
mov
cmpl
inc
cld
jle
rcrb
js
sbb
cmp
repz
add
sbb
xchg
fisubrl
xchg
sub
test
les
push
xchg
mov
or
scas
pop
sub
adc
or
or
mov
and
clc
jg
ret
dec
and
xchg
pusha
add
movd
ficomps
cld
movapd
push
clc
jae
xor
repz
or
xor
cli
rcl
lret
mov
lahf
mov
jl
dec
mov
lret
or
jg
mov
cmpl
cs
jnp
mov
pop
jno
push
aam
ret
or
xorb
and
lret
cli
pop
add
repnz
roll
add
mov
mov
adc
addps
int
mov
push
sub
ret
adc
dec
sbb
inc
pop
aad
movsb
cltd
in
bound
sbb
jmp
sbb
ja
sbb
adc
or
sbb
xor
mov
mov
jge
or
and
adc
pop
and
jl
lahf
xchg
pop
xor
push
push
ret
jge
outsl
push
loop
mov
ja
dec
pop
and
gs
xchg
pushf
and
add
sbb
and
jbe
int
addb
pop
stc
fimuls
stc
or
mov
mov
adc
fbstp
loope
cmc
clc
add
idivl
push
test
dec
mov
mov
or
jb
mov
adc
inc
out
inc
adc
push
inc
inc
or
mov
cmp
loope
jg
outsb
sbbb
mov
mov
cmp
jne
nop
adc
adcb
adc
std
mov
cltd
das
cs
dec
and
test
stc
cmc
cmp
cmp
js
ret
sbb
adcb
push
sbb
adc
mov
push
js
cltd
sbb
movl
or
popf
fistl
sbb
mov
enter
cli
add
lock
mov
pop
pop
push
dec
subb
pop
das
shl
hlt
fcomi
arpl
adc
dec
sub
test
jmp
push
xor
ret
test
nop
jl
push
pop
add
push
test
inc
mov
subl
adc
lcall
push
inc
cmp
inc
xor
inc
mov
orl
bound
data16
adc
sub
fadds
and
sbb
das
clc
addb
xor
dec
mov
pop
mov
inc
cmp
cmp
movsb
sub
scas
sbb
arpl
and
jae
dec
adc
push
add
out
cmp
lret
dec
jnp
pop
aam
adc
or
push
or
and
pusha
inc
mov
imul
adcl
sti
in
imul
icebp
scas
in
hlt
cmp
sub
xchg
cld
sti
out
into
add
enter
sbb
adc
xchg
imul
shl
shlb
dec
leave
sbb
cmp
cbtw
or
inc
pop
cmp
mov
mov
xchg
sub
shl
rol
push
fmull
inc
cmp
aam
lret
jne
sbb
pop
jmp
imul
or
cli
aad
jecxz
sub
test
add
adc
add
jo
add
adc
add
push
cmp
and
pop
seta
aad
sub
inc
or
stc
pop
rolb
pop
jo
je
add
ja
scas
loopne
sbb
xchg
or
stos
int
lock
fnstenv
daa
pusha
push
or
xchg
xchg
inc
movsl
fdivr
cltd
pop
repnz
loop
jbe
inc
xor
xchg
fiaddl
pop
push
jbe
inc
push
adc
lea
stos
mov
mov
mov
dec
dec
or
addl
rclb
jmp
inc
adc
clc
fmuls
aas
xor
pop
inc
jge
imulb
mov
data16
jne
idivb
icebp
test
add
xchg
or
mov
sub
and
jle
cmc
or
xor
or
cmpsb
and
xorb
adc
sub
lds
ds
cmpl
scas
add
push
push
sub
jmp
inc
divb
les
inc
cld
xor
xor
pushf
rcrb
mov
adc
and
hlt
sub
shrl
jl
jg
lock
push
add
and
add
add
or
push
int3
std
sbb
xchg
inc
sub
xor
pop
div
inc
push
orb
jae
or
xor
inc
imul
fcomps
cltd
dec
insb
es
aas
xchg
call
adc
repz
jo
daa
add
andl
adc
and
cmp
mov
adc
pop
pop
jne
nop
sbb
pop
add
stos
shll
subl
xor
push
mov
and
add
pop
jle
icebp
jl
add
aam
ret
and
lock
push
rolb
or
push
fistpl
jb
mov
shll
psrlq
push
dec
jge
inc
rorl
in
pop
cmp
mov
mov
mov
dec
lds
dec
aas
nop
jnp
and
clc
cmp
fiadds
inc
inc
pop
cmp
popf
jmp
mov
xor
inc
push
lods
jl
pop
lahf
push
fisubrl
jle
scas
bound
and
jnp
in
adc
cwtl
fsubrl
push
sub
sbb
std
or
mov
test
cmpl
or
fdivs
mov
in
out
out
or
out
add
cmp
jb
xor
dec
in
in
sbb
ss
jp
repz
sub
push
imul
loopne
push
sarb
out
cmpsb
fmull
stos
or
or
adc
pop
pop
push
sahf
es
adc
or
shrl
lds
fmuls
xlat
sbb
mov
out
and
sub
sbb
pop
jo
dec
pop
sbb
add
fisttpl
mov
jae
xchg
add
xchg
int3
ja
push
add
shr
and
fistpl
add
adc
jo
je
hlt
pop
cmp
xchg
js
push
loop
clc
mov
testb
inc
mov
mov
test
or
lret
aas
adc
or
sbb
sbb
je
inc
push
rcr
adc
push
aas
push
add
push
jmp
out
add
adc
shrl
roll
add
lock
push
int3
push
push
dec
push
lcall
inc
mov
ret
mov
hlt
or
movsb
adc
mov
adc
or
and
cli
or
add
ret
pop
sbb
dec
les
add
cld
jge
or
imul
out
cmp
sub
add
xor
and
lds
jl
push
jmp
cwtl
inc
push
pop
jp
dec
pop
jle
sbb
test
mov
stos
pop
icebp
or
adcl
add
jbe
in
cmp
je
push
jbe
mov
in
mov
adc
sbb
add
shlb
jp
xchg
sub
lret
add
aam
push
mov
adc
nop
outsl
dec
out
adc
mov
dec
jecxz
pop
fstps
mov
push
and
adc
dec
or
and
or
add
mov
test
dec
enter
movsb
or
cmpsl
icebp
cli
mov
fisttpll
cmpsb
xor
popa
add
jne
add
mov
jmp
in
mov
or
or
cmp
pop
fisubl
in
push
sbb
test
pop
jbe
or
adc
loop
lods
mov
mov
rorb
and
xchg
xor
xchg
cmpb
or
in
inc
inc
popfw
arpl
or
jnp
dec
xor
push
pop
in
mov
decl
dec
mov
cmp
je
dec
xor
sub
clc
daa
pusha
sub
ret
lea
push
ljmp
cmp
jo
push
pop
repnz
add
add
cmp
enter
add
fisubrl
add
push
jno
jle
add
jns
cmp
flds
add
nop
add
pusha
in
xchg
pop
push
pop
pop
lcall
or
enter
dec
or
repnz
sub
or
iret
enter
or
rclb
add
or
or
pop
push
and
inc
sahf
xchg
add
sbb
ja
push
sub
in
adc
pop
adc
fwait
pusha
iret
enter
adc
jns
cmp
adc
adc
add
adc
add
adc
lcall
adc
ror
push
push
push
push
jb
cmp
pop
pop
xor
jns
out
sbb
lcall
sbb
call
pop
sbb
xchg
inc
enter
sbb
jns
sbb
jb
sbb
add
mov
sbb
iret
pusha
push
push
inc
call
enter
pop
jne
add
add
sub
cmp
sbb
movl
add
ljmp
stos
cmp
in
jno
repnz
lret
in
repnz
lea
aad
add
cmp
out
add
fwait
out
or
ret
dec
push
and
add
call
imul
dec
cwtl
jmp
inc
jmp
mov
or
sbb
dec
push
jns
out
in
in
mov
cltd
mov
enter
sahf
out
out
and
and
jge
sbb
sbb
lock
addr16
xor
icebp
add
push
pslld
nop
out
out
std
repz
std
cmp
hlt
rorl
pusha
hlt
mov
in
fwait
mov
repnz
div
inc
enter
idivl
cmp
xor
std
clc
clc
clc
cltd
pop
enter
stc
inc
stc
lock
cmp
cld
cli
cli
iret
in
jb
sti
sbb
stos
cld
dec
fmulp
dec
cld
cld
je
cld
push
pmulhuw
mov
xor
nop
out
cmpsb
sbb
adc
imul
xchg
ret
inc
addb
jmp
push
dec
xlat
push
lahf
jb
rcrl
xchg
movsb
or
sbb
or
imul
mov
std
sti
in
in
fisubrl
mov
stc
daa
xchg
sti
orb
out
repnz
outsb
call
mov
inc
sub
sbb
pop
jmp
jmp
inc
pop
xchg
pop
in
add
cli
popf
cli
sbb
js
out
out
jno
sbb
out
cltd
push
lock
cli
push
cli
imul
stc
repz
rolb
cltd
sar
xchg
or
push
stc
stc
xchg
inc
pop
dec
fstpl
testl
negl
fwait
in
xlat
enter
adc
mov
mov
clc
cmp
lret
sti
sti
cltd
add
pop
mov
insl
push
in
or
clc
mov
sbb
out
dec
and
mov
xor
pop
insb
nop
and
loop
xchg
inc
pop
xchg
mul
pop
shl
and
jg
nop
or
mul
sbb
out
inc
pop
and
out
inc
andb
sbb
sti
imul
ljmp
negb
pop
and
mov
xchg
imulb
inc
add
insb
out
out
pop
push
jno
jno
idivb
cmp
pop
and
add
push
push
adc
loop
shl
jno
cmc
and
mov
xchg
cmc
sbb
pop
bnd
pop
dec
cmc
cwtl
xlat
movsl
test
fwait
jbe
jne
and
seto
clc
jecxz
stc
sub
mov
popa
imul
cmp
pop
pop
jne
or
sub
push
hlt
sbb
lock
data16
hlt
divl
fstpt
jge
jo
sti
in
or
adc
iret
movsl
imul
loope
loope
mov
repz
dec
pop
and
scas
repz
xor
inc
or
imul
mov
mov
and
push
sub
bnd
jmp
je
dec
xchg
repnz
inc
add
sbb
xor
cmc
shll
jns
repnz
orl
sub
loope
sbb
je
icebp
js
divb
xchg
cmp
xchg
icebp
jb
sbb
icebp
cmp
sub
cmc
cmc
pushf
dec
push
jno
add
jecxz
xchg
push
pop
xchg
ffree
lock
in
rcrl
and
cmc
jne
leave
mov
xor
jne
pusha
sbb
icebp
dec
mov
ss
rclb
imul
sub
push
sub
out
xlat
push
pop
cmovno
jns
push
fcoms
inc
int3
add
les
add
inc
mov
jp
push
jnp
nop
mov
adc
jne
dec
jo
adc
dec
add
cli
mov
add
sbb
mov
pop
add
and
fstpt
inc
cmp
inc
add
and
cmp
pop
sub
data16
mov
stos
es
sub
fwait
iret
repz
sbb
out
insb
mov
and
imul
sbbb
mov
sub
repz
filds
push
jo
jno
testl
inc
filds
roll
lahf
pop
fidivrl
add
jne
add
sbb
or
movsb
shlb
jle
rolb
add
stos
gs
inc
cld
jb
test
shrb
es
and
pop
int
lret
sub
dec
push
cmp
gs
or
push
dec
mov
jns
add
push
shlb
jl
icebp
hlt
rorl
inc
adc
xor
movsb
adc
imul
push
or
xlat
loopne
and
push
dec
add
or
mov
outsb
mov
cmp
loop
pusha
sbb
lea
lea
neg
jo
fildll
mov
push
cmp
fmuls
stos
insl
sub
and
add
lods
and
mov
sbb
inc
jns
sub
add
sub
xorb
inc
jnp
je
xchg
data16
test
dec
ret
rorb
test
push
cmpl
mov
mov
cmp
xor
fsts
mov
sub
mov
jl
sbb
cmpsl
pop
pop
add
or
cmp
je
rep
mov
dec
ljmp
cmp
add
add
inc
stos
test
jge
xor
add
adc
jmp
lret
add
pop
arpl
and
adc
jle
mov
aad
xor
fdivrp
add
add
mov
insl
xchg
int
dec
loope
jne
xchg
or
lcall
and
sub
das
enter
inc
inc
inc
aam
cmpl
enter
jbe
cmp
cmpl
inc
loop
jl
add
adc
mov
push
push
gs
lods
clc
or
xor
inc
sahf
subb
pop
sbb
repnz
ficompl
add
mov
roll
into
enter
and
rorl
enterw
pop
jnp
data16
add
mov
xor
mov
push
mov
mov
xor
std
notb
and
or
or
jl
or
lods
push
mov
or
addr16
jle
mov
xchg
test
push
mov
mov
addr16
mov
xchg
cmc
lcall
pop
inc
jmp
cmp
jne
orl
es
cmpsb
add
sub
lods
xchg
jns
in
xchg
shll
jb
and
cmp
sub
je
movsb
aaa
mov
jmp
mov
sub
cmp
and
or
fbstp
jne
pop
jne
dec
add
add
lds
sbb
xchg
add
sub
lret
or
div
xor
cmpsb
sbb
xor
sbb
xchg
out
pushl
lret
sub
cmp
cs
mov
leave
cmp
jae
push
ss
jb
movsb
loopne
sbb
sbb
push
dec
cmc
adc
sub
and
add
hlt
jmp
inc
add
pop
neg
nop
cmc
adc
arpl
jne
test
cmp
lret
dec
jmp
or
sub
mov
inc
mulb
add
inc
and
pop
dec
add
adc
fstps
or
imul
cmp
in
rolb
sbb
mov
xchg
cltd
pop
xor
xchg
lea
add
movsl
inc
mov
jmp
push
xor
loopne
sub
pop
sarl
popa
push
sub
mov
lds
cli
add
xchg
and
push
cmp
and
jne
jnp
imulb
insb
mov
add
negl
adc
cmp
jne
mov
push
mov
std
jne
es
jne
xchg
mov
cmpsl
call
ljmp
and
push
or
out
jns
repz
adc
jmp
std
nop
xor
xor
push
sub
jne
hlt
int3
test
mov
adc
sbb
or
stos
sub
shll
repnz
add
lock
adc
and
sbb
cli
inc
mov
ret
loopne
leave
jns
adc
into
cmp
xchg
pusha
sti
adc
and
std
and
leave
push
or
push
leave
and
or
xor
push
add
adc
orl
aaa
in
arpl
jge
lret
xchg
jbe
rcrb
adc
inc
dec
mov
icebp
aaa
testb
jmp
mov
dec
add
movsl
test
jne
jo
orb
dec
shll
fst
cmp
xchg
stos
fdecstp
inc
hlt
adc
stc
pop
fs
out
aad
hlt
push
jmp
lret
adc
rcrl
ss
or
loop
pop
add
sbb
mov
push
dec
outsb
out
jns
mov
dec
mov
pop
adc
addr16
ljmp
lcall
outsb
cwtl
ja
push
sbb
cmpb
daa
loope
sub
adc
and
pop
scas
xchg
ret
sbb
dec
insl
mov
ret
popa
and
cmpb
mov
dec
fbstp
std
testb
pop
hlt
cs
ret
jmp
lret
clc
rcrb
adc
test
call
inc
inc
sbb
dec
stc
imul
or
ret
testb
js
inc
sbb
sahf
mov
xchg
out
sub
clc
adcl
or
test
cvttps2pi
push
mov
mov
lahf
jns
inc
adc
add
and
fs
push
fcmovbe
or
inc
xor
mov
mov
das
int3
add
addr16
xor
lret
scas
movsb
pop
roll
cmp
jbe
cmp
andb
stc
mov
push
pop
and
mov
inc
xor
dec
pop
pop
scas
push
mov
cli
add
mov
adc
mov
rep
jmp
loopne
dec
inc
mov
lods
bnd
add
enter
cmp
lret
hlt
push
js
or
push
pop
and
aaa
movsb
mov
or
scas
adc
jl
int3
lea
dec
add
pop
pusha
push
movl
dec
cmp
cmp
jnp
fisttpl
push
rorb
mov
jns
iret
repz
in
inc
in
out
sahf
out
in
in
lock
out
sahf
hlt
hlt
clc
clc
cld
fldt
aam
mov
clc
jl
adc
jmp
sbb
lods
xchg
mov
nop
insb
or
or
pop
sti
and
and
adc
je
into
jo
in
cmp
and
std
cld
out
cmpb
popf
insl
neg
adc
xor
lods
mov
test
pop
nop
xchg
push
mov
push
loopne
add
out
add
xchg
push
jbe
out
add
cmpsb
and
push
add
nop
dec
dec
addr16
sbb
jno
add
ljmp
mov
or
push
inc
dec
push
out
out
pop
fs
aaa
sbb
out
sahf
sbb
sbb
adc
out
adc
or
int
nop
out
add
nop
inc
sub
out
or
aaa
push
push
mov
pop
xadd
loop
xchg
adc
bnd
push
xchg
pop
xor
mov
mov
incl
inc
decl
jne,pn
pop
pop
ljmp
aaa
dec
in
push
mov
or
idiv
add
mov
pusha
or
mov
adc
out
inc
sti
adc
adc
mov
jg
shl
cmp
jae
dec
loop
cmp
pop
jbe
add
push
dec
sub
inc
push
es
pusha
add
sub
mov
hlt
mov
mov
jg
add
test
dec
sbb
add
adc
movsl
mov
sbb
sbb
dec
dec
fcompl
push
or
push
cld
imul
jne
xchg
insb
adc
imul
adc
pop
decb
push
out
dec
rcrb
mov
inc
xor
xchg
xchg
sbb
push
das
sbb
arpl
and
and
dec
add
add
cmp
push
sbb
fbld
pop
push
push
pop
add
addb
dec
adc
repz
test
xor
adc
cmp
imul
data16
int
sbb
ret
mov
mov
scas
mov
enter
ja
insl
or
mov
aas
jge
push
push
cltd
pop
mull
xchg
in
cmp
inc
push
inc
xor
cwtl
cli
ds
xchg
inc
out
cmp
sub
mov
jmp
or
mov
jle
cmp
aas
dec
enter
or
fs
lods
pop
sub
jmp
jl
mov
sbb
shll
or
or
pop
insb
sub
sbb
sbb
adc
sbb
add
bound
cs
outsb
add
mov
adc
cmp
add
mov
sahf
mov
pop
sti
cmp
pop
sub
push
cmp
rolb
push
and
jae
inc
add
xchg
cmp
add
data16
mov
push
fdivp
daa
adc
xor
mov
enter
jg
insl
cmp
orb
jle
sti
ljmp
mov
divl
dec
jno
mov
mov
ja
int3
dec
jo
mov
je
mov
inc
add
dec
jne
mov
mov
push
sbb
orb
adc
loop
lcall
pop
popl
shrb
mov
jno
sub
push
or
inc
mov
push
aaa
orl
cmp
pop
loopne
imul
pop
push
adc
lcall
xchg
inc
jmp
push
pushf
and
adc
pop
mov
and
dec
lock
and
fldt
ret
push
je
mov
imul
shll
mov
mov
pusha
movsl
and
jge
loop
in
pop
scas
or
push
lock
and
icebp
push
adc
data16
push
iret
repz
ja
inc
adc
or
out
call
add
jae
arpl
mov
out
pop
pushl
in
test
call
or
insl
mov
cmp
xchg
rorb
add
insl
jg
push
fs
rcrb
fdivs
cld
mov
dec
or
js
loop
adc
adc
and
push
scas
sub
aam
add
pop
mov
jg
jbe
sub
je
gs
lods
dec
les
sbb
mov
and
sub
jl
dec
cmp
mov
inc
inc
cmp
je
xchg
mov
ds
orb
xchg
lods
sbb
adc
add
aas
xor
or
dec
and
mov
or
ficoml
dec
mov
mov
pushf
mov
ret
lock
mov
incl
pushl
pusha
push
mov
push
inc
cmp
addb
inc
cmp
xor
cmp
lods
mov
xor
mov
mov
sbb
lods
das
ret
outsb
or
xchg
dec
push
arpl
push
imul
inc
cmpsl
sbb
add
add
es
or
js
cmc
outsl
mov
addr16
test
adc
cwtl
pop
pop
test
cmp
loopne
je
mov
in
mov
push
and
shll
xor
inc
or
cmpsb
xor
push
pop
pop
xor
mov
int
roll
add
push
adc
sbb
frstor
mov
subb
xchg
xchg
xchg
pop
jns
js
daa
iret
cmpsb
or
inc
sbb
mov
adc
loope
orl
xchg
inc
push
iret
add
shll
lea
pop
cmp
jne
jmp
dec
or
sub
hlt
push
jmp
das
xlat
jmp
push
dec
sbb
jo
push
jnp
mov
jbe
test
and
cmpsl
and
sbb
dec
lds
loopne
ret
and
cmp
add
call
inc
in
xchg
gs
dec
adc
pop
ret
icebp
leave
rcl
sbb
pop
adc
add
hlt
mov
jp
lahf
jge
outsb
jns
and
cmp
scas
push
mov
cmp
inc
enter
sbb
mov
xor
imul
mov
inc
push
jmp
cmp
ja
push
cmpb
jne
inc
inc
call
push
lcall
outsl
jmp
pop
ja
or
xor
sub
push
sbb
mov
xchg
shll
xchg
and
fucomp
xchg
mov
es
inc
lcall
cli
push
push
imul
push
incl
test
mov
repnz
fnstenv
sbbb
add
jmp
mov
addr16
add
pop
jnp
rorb
out
divl
add
dec
ds
dec
push
push
and
dec
enter
or
bound
cmp
cmp
fimull
ja
jae
dec
insb
stos
cmp
call
mov
jmp
pushf
test
or
cmp
ja
and
out
and
mov
sub
fdiv
filds
mov
enter
jbe
add
jmp
pop
xor
mov
push
add
call
push
cld
jb
mov
cli
mov
fidivl
lahf
mov
dec
js
add
mov
inc
xor
dec
add
ret
adc
or
adc
jne
and
push
loope
or
jmp
arpl
cmp
popf
cwtl
add
mov
pop
xor
pusha
jo
pop
subl
dec
cli
mov
cmp
call
adc
aam
addb
or
rorl
pop
jg
scas
push
movsb
dec
les
in
std
cmp
adc
test
sub
mov
js
push
cmp
push
xor
in
jae
out
push
repz
pop
jle
add
xchg
mov
sub
rolb
scas
add
push
push
or
sbb
subl
add
adc
jecxz
mov
aam
sub
popa
sub
sub
add
dec
xor
cmp
inc
dec
lret
adc
mov
popf
mov
xchg
call
mov
inc
inc
sbb
adc
dec
sarl
dec
xor
add
xor
inc
dec
adc
lea
push
adc
push
dec
fimull
pop
dec
ss
add
sbb
push
or
jecxz
cmp
lret
aam
cwtl
add
xlat
out
mov
es
sbb
cmp
mov
xchg
or
cmp
or
out
and
cmc
inc
outsb
orl
das
or
push
sub
jmp
pop
movsb
mov
int3
rolb
icebp
jae
mov
add
adc
push
in
xor
pop
call
dec
pusha
pop
sub
adc
jge
sbb
cmp
or
mov
cmpsb
mov
xor
mov
and
loopne
adc
push
add
call
push
push
jmp
pop
jmp
leave
sub
cmp
add
add
notl
add
cmp
adcb
adc
movsb
and
and
add
mov
cmp
rcl
sub
push
cmc
adc
lahf
sbb
into
mov
in
cmp
mov
rolb
cli
mov
mov
insb
push
lea
loopne
xor
or
cwtl
lds
pop
jo
push
mov
push
and
mov
ret
pop
push
subb
add
or
imul
sbb
mov
cmc
jnp
das
xchg
sbb
out
dec
add
iret
xor
rcrl
mov
test
inc
mov
jmp
push
call
pop
sub
add
repnz
sbbb
inc
sbb
add
dec
xchg
xchg
adc
sbb
repnz
dec
jmp
inc
lret
xchg
lock
push
into
and
adc
add
mov
hlt
adc
jp
ss
leave
mov
dec
ret
fdiv
clc
jne
fdivs
inc
inc
cmp
into
sub
popa
dec
mov
out
pop
push
and
imul
and
pop
or
lock
xor
rorl
dec
inc
mov
pop
xor
mov
sub
shll
push
or
push
lods
lret
test
insb
ds
sub
gs
adc
xor
adc
gs
and
mov
in
or
sbb
sbb
repz
adc
popl
btc
inc
mov
pop
inc
aaa
sbb
add
cmpsl
fstp
mov
xor
sarb
negl
mov
mov
fsubrl
sarl
xor
lcall
adc
test
push
pop
fiadds
mov
int3
push
or
pop
xor
pop
je
sbb
or
les
sub
adc
je
out
push
or
nop
ds
dec
push
xchg
sub
shlb
add
pop
test
mov
or
loope
or
jne
or
add
movsl
fbstp
flds
mov
inc
dec
jne
dec
pop
ljmp
or
mov
dec
fildll
add
xchg
mov
mov
fdivl
outsl
add
add
or
out
push
gs
and
and
lea
in
test
and
scas
adc
sub
mov
mov
inc
in
leave
ret
fcoms
fdivr
xchg
aam
cmp
push
repnz
push
in
cmp
inc
sub
jbe
fidivs
push
xor
add
cld
test
out
add
and
int
jg
xchg
push
orb
mov
push
outsb
and
je
and
add
dec
into
mov
xor
addl
mov
mov
lahf
lods
leave
sub
mov
or
rorb
sti
aas
lods
loop
lret
add
jmp
cmp
push
push
add
add
je
inc
arpl
pop
push
mov
add
pop
je
arpl
add
popf
mov
mov
push
dec
push
idivb
add
ja
test
pop
add
movsb
and
jmp
mov
push
repnz
out
xchg
clc
imul
push
sbb
ljmp
outsb
loope
jnp
insb
push
cld
pop
movsl
inc
add
inc
jmp
push
or
adcl
sub
out
fsts
cmpsb
push
sub
aam
popf
jl
xchg
inc
cmp
std
jne
xchg
imul
and
cmp
out
add
bound
sarb
cld
pusha
loope
or
pop
ret
dec
lcall
mov
ljmp
mov
repz
xor
or
add
jo
push
jmp
adcl
push
or
pop
push
out
dec
ljmp
sub
les
test
call
and
sub
lea
mov
loop
cmp
ret
inc
pop
leave
inc
xchg
mov
repz
leave
xor
in
dec
jno
mov
aaa
jmp
mov
into
sub
adc
fs
inc
adc
filds
cmp
push
inc
fmuls
jne
std
sub
inc
idivb
add
push
sbb
xorb
xor
jae
ret
into
push
lods
out
mov
lea
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
inc
adc
inc
sahf
dec
add
and
divb
jle
fstpt
jo
mov
inc
dec
jne
adc
testl
ljmp
push
jnp
nop
lds
jmp
cmp
sbb
cmpsl
push
push
add
dec
fwait
adc
hlt
bound
sbb
mov
dec
test
and
mov
adcl
testl
inc
sbb
inc
xorb
loop
pavgb
inc
adc
mov
cld
aas
cwtl
jbe
inc
dec
lds
inc
call
mov
xchg
loopne
mov
repnz
dec
lock
jg
xor
std
xchg
and
fs
or
mov
into
mov
or
loopne
icebp
std
outsb
lret
pop
sub
jmp
xor
dec
xorb
std
sbb
mov
add
jmp
cmp
ret
rolb
mov
arpl
xchg
jno
stos
cmpl
inc
pop
jmp
inc
fs
push
xchg
sbb
data16
and
arpl
push
mov
cmpsl
lock
push
mov
std
and
sub
stc
inc
stc
pop
movl
jnp
mov
cmp
mov
push
add
dec
jmp
pop
sbb
cltd
pop
out
pushl
inc
mov
into
int3
sub
lock
jnp
jno
inc
inc
sbb
test
hlt
sub
imul
xchg
sub
and
add
mov
push
inc
pop
cmp
inc
sub
lds
pop
lea
sbb
rep
or
push
cmpl
add
stos
test
cld
sahf
inc
add
add
sub
jne
push
bound
add
adcl
mov
mov
mov
outsl
sbb
lea
jnp
mov
aaa
cmpl
test
out
or
or
cmp
add
flds
and
cmp
push
test
in
and
out
and
dec
xor
andb
aam
sub
dec
cli
pop
rorb
inc
pusha
sbb
shl
or
pop
in
pop
adc
in
mov
jbe
inc
mov
enter
test
sbb
jo
fstps
xor
loope
push
add
dec
push
ds
add
sub
mov
lret
push
ficomps
xor
push
push
int
les
int3
ja
inc
push
mov
and
cmp
push
cmp
shlb
jle
push
roll
loopne
or
push
adc
ljmp
fcomp
or
push
sub
out
push
mov
test
push
cld
add
aaa
daa
jmp
cs
ljmp
or
sub
mov
rcll
sub
outsb
ja
aam
or
aas
push
idiv
shrb
jmp
mov
enter
in
lahf
xchg
push
dec
inc
inc
pop
call
xchg
nop
xor
cwtl
and
sub
mov
sbb
push
cld
popa
or
cmp
addl
mov
les
xchg
mov
adc
mov
mov
mov
adc
sbb
or
outsl
or
sbb
mov
lock
sub
sbb
pop
ret
int3
inc
ret
dec
dec
rclb
jbe
jne
xor
push
push
movsb
pushf
jbe
pop
sub
dec
aas
dec
cmp
dec
mov
adc
jns
shr
xor
not
les
lcall
and
adc
push
andl
sbb
jb
sub
and
jb
inc
inc
xor
cmp
inc
test
jle
push
popa
lcall
push
and
test
cli
mov
and
pop
cmp
je
jle
or
fcmovbe
lods
mov
push
loope
mov
jg
jge
inc
and
addl
ficoml
dec
pop
add
pop
into
pusha
movsl
xor
sub
mov
mov
sbb
adc
cmpsl
dec
out
cmpl
shlb
es
es
adc
out
add
and
daa
test
es
pop
inc
xor
ss
cmc
ja
mov
push
daa
mov
loope
xor
out
xchg
imul
addr16
nop
lret
loopne
call
sti
mov
push
loope
in
xchg
mov
sbb
xor
sbb
inc
into
pop
das
mov
pop
mov
pop
repnz
sub
andl
dec
dec
lea
addr16
mov
sub
jle
mov
rorb
or
fcoml
mov
aam
sarb
clc
or
in
popf
enter
sarb
rep
mov
aam
dec
fs
sarl
xchg
call
adc
sub
cmp
ljmp
inc
or
test
lahf
lea
mov
sub
mov
ret
sub
dec
in
mov
jmp
jge
jno
mov
push
popa
xor
xchg
sbb
dec
cmp
insb
or
add
and
icebp
mov
es
dec
repz
mov
sbb
test
lcall
arpl
push
movsb
aas
push
sub
add
les
arpl
arpl
push
enter
xchg
or
push
jo
pusha
pop
push
or
and
dec
arpl
imul
push
mov
mov
xor
sbb
push
loopne
xor
pop
push
dec
jl
nop
inc
push
push
test
gs
ja
pop
mov
push
in
push
hlt
cld
mov
sarl
or
daa
gs
ret
add
pop
inc
inc
or
push
pop
insb
gs
xchg
dec
or
jecxz
mov
test
xchg
pop
loop
push
push
cs
push
adc
arpl
push
jmp
and
sti
sub
js
or
add
adc
repz
xor
pop
dec
cwtl
test
insb
lret
jne
add
or
dec
push
pop
repz
cmp
jge
inc
mov
dec
sub
add
popa
test
mov
adc
push
and
call
jno
and
adc
add
andb
add
insl
or
add
and
or
and
stos
idivl
jb
lea
imul
dec
mov
and
jno
fwait
subl
xor
cmp
add
enter
sbb
inc
or
je
xchg
sbb
mov
xor
adc
cmpsb
pop
jae
andl
cmp
jl
xchg
dec
push
inc
push
push
add
dec
sbb
jmp
addl
push
xorb
xor
and
add
add
jne
or
push
adc
pop
sub
and
add
out
sbb
sbb
jbe
jno
sub
push
bound
xor
mov
push
cmp
or
mov
push
or
jge
fistps
xor
cmpsb
stos
out
pop
sbb
adc
dec
mov
jmp
aam
lock
mov
in
iret
mov
loope
negb
jle
test
sub
shll
sub
pop
pop
call
sub
clc
shl
sub
fdiv
loop
mov
push
mov
insb
es
and
jp
pusha
in
inc
popa
jo
mov
loope
pop
and
push
xchg
dec
jne
mov
pop
xchg
test
pop
xchg
ret
cmp
or
sub
leave
loopne
jo
or
scas
adc
aam
ljmp
mov
and
add
push
loopne
push
stc
fistl
pop
insb
sub
lea
inc
cmp
je
push
ror
subb
pop
popf
mov
sbb
int3
pop
jbe
js
push
imul
inc
les
mov
add
xor
jbe
lock
dec
mov
sub
lock
out
adc
inc
inc
in
add
shrb
lods
test
adc
mov
mov
ret
mov
xlat
stos
mov
or
test
jne
xor
imul
jp
fisubrl
aaa
jecxz
xchg
pusha
add
mov
or
fistl
ret
inc
cltd
adc
jbe
push
inc
cmp
test
or
cmc
in
or
icebp
adc
jae
ret
xchg
pop
ret
mov
divl
in
nop
test
ret
fwait
std
or
mov
dec
xchg
es
adc
jle
push
inc
in
or
jmp
ljmp
jns
ret
das
sub
decb
inc
or
loopne
jnp
aaa
adc
add
add
inc
push
jp
mov
adc
add
and
clc
push
fcmovbe
xchg
int3
and
ret
add
scas
add
bound
adcl
mov
mov
mov
xchg
mov
jo
cmp
mov
xlat
cli
xchg
sbb
decl
orl
sbb
pop
imul
nop
xchg
dec
pop
fldl
push
bound
scas
jg
sbb
jo
add
or
jbe
mov
sti
sub
or
push
mov
pop
popf
lret
in
fadd
cmp
jne
xor
mov
push
mov
mov
jmp
inc
testl
imul
loopne
or
or
lret
call
or
or
xchg
test
mov
dec
push
mov
mov
lea
insb
ret
ficompl
jl
enter
psrlq
in
insl
xor
test
call
clc
sbb
fs
add
mov
sbb
pop
dec
scas
ja
adc
out
add
sti
or
aam
mov
fsubs
mov
scas
inc
lret
decb
add
mov
mov
adc
sbb
push
lret
in
fsts
add
and
sbb
and
sub
jbe
jo
push
or
aam
fisubs
jb
mov
mov
dec
adc
push
imul
lret
or
dec
imul
ja
movsl
mov
mov
cmp
leave
test
out
sbb
hlt
hlt
stc
pusha
outsb
outsb
fwait
cwtl
je
or
inc
insb
je
and
pushf
shl
subb
loope
insb
cmp
sub
adc
sbb
pop
and
push
xchg
ss
or
xor
mov
sbb
xor
and
jmp
sahf
fnstenv
or
imul
data16
cmc
jne
js
dec
ret
imul
ret
ret
and
rcll
lret
jbe
pop
dec
xchg
movsl
inc
adc
sbb
sbb
jnp
js
jle
inc
je
pop
push
or
in
imul
nop
mov
ret
add
hlt
sbb
les
cld
push
mov
and
push
ds
addr16
push
jae
testl
fldt
xchg
pusha
ljmp
cmpl
push
add
dec
and
in
sub
inc
sbb
mov
pusha
imul
inc
xlat
imul
mov
inc
push
inc
push
xchg
pop
jne
cmp
mov
inc
sbb
bswap
negl
fstp
rolb
sbb
push
cmp
test
mov
adc
adc
pushf
jbe
std
je
mov
push
mov
mov
mov
aas
push
dec
cmp
pop
adc
cmpsl
in
sarl
lcall
push
dec
nop
inc
mov
fld
cwtl
pop
das
dec
push
data16
xchg
aam
jecxz
mov
lea
iret
sbb
push
sbb
xchg
cmpsb
jecxz
outsb
jo
add
add
jl
adc
jmp
pop
push
outsb
je
test
ss
out
push
out
je
aas
add
sbb
arpl
outsl
cmp
xchg
adc
or
add
sbb
inc
stos
add
add
xchg
mov
into
ret
imul
mov
jne
mov
jmp
cmp
std
pop
jle
insl
cmpl
incl
xor
mov
xor
int
lods
or
adc
mov
pop
mov
cmp
xor
adc
sti
repnz
xlat
mov
adc
dec
sub
dec
rclb
or
gs
lea
fldcw
dec
stc
lcall
cmpsl
adc
call
xlat
dec
sub
add
ret
push
int
and
push
push
movsb
loop
ret
push
outsb
mov
nop
jae,pn
addr16
or
mov
call
inc
daa
add
adc
lahf
inc
pavgw
xor
sbb
xor
enter
push
lret
pop
mov
adc
ret
in
push
popf
inc
fbstp
inc
push
rcll
and
cmpsb
jmp
in
cmpsb
and
or
mov
dec
jecxz
add
push
pusha
pop
test
push
mov
and
adc
int3
neg
jecxz
nop
pop
fisubrl
clc
jne
cmp
rcrb
pop
lods
cmp
lahf
mov
or
jne
and
lea
outsl
jbe
sbb
adc
cld
and
inc
clc
and
inc
push
rcrl
cmp
push
nop
loop
xor
xchg
clc
sahf
add
mov
dec
jmp
add
popf
pop
xchg
sub
inc
cmp
xor
aas
je
into
sub
add
push
or
add
inc
jmp
bswap
mov
loope
or
mov
rolb
sub
sar
roll
rorl
data16
jg
add
sub
sub
push
test
lcall
mov
sub
cltd
sub
sub
sub
or
pop
shl
push
sbb
or
ja
leave
dec
fdivrl
lea
nop
sbb
int3
jns
movsb
adc
stos
movsb
repnz
jbe
dec
sbbl
dec
push
fdivs
jno
icebp
push
pusha
nop
aaa
cmp
call
in
fistps
rcll
jo
push
sub
pushf
test
addl
pop
jg
add
lea
ds
push
and
loopne
icebp
jl
testl
push
xchg
jo
out
add
adc
jle
pop
mov
mov
mov
and
movsb
cmp
test
add
pop
jmp
daa
sub
adc
test
outsl
hlt
insl
cmp
out
push
mov
xor
inc
xchg
cs
xchg
ss
adc
in
ss
rolb
lock
pop
mov
mov
and
mov
test
mov
fmull
clc
xor
iret
pushf
push
lea
mov
cltd
dec
add
repnz
cltd
test
dec
xchg
hlt
and
rolb
and
lcall
dec
aam
or
imul
pushf
adc
enter
push
ret
add
mov
or
jl
push
pop
cmpsb
cltd
mov
add
out
mov
ret
out
xor
pop
out
push
movsb
es
cmpsb
clc
repz
lock
mov
push
les
lds
sbb
jge
cli
xor
cmp
arpl
push
pop
lock
jmp
push
movsb
loopne
xor
insb
imul
adc
imul
rclb
or
aad
outsb
mov
dec
mov
or
adc
add
adc
dec
popa
outsb
xor
cmp
mul
sbb
mov
or
adc
enter
cmc
rclb
push
or
les
adc
fsubl
rclb
adc
cwtl
jmp
mov
fildl
jns
add
lock
mov
orb
or
jbe
icebp
lahf
add
push
lea
mov
adc
scas
rorb
pushl
dec
ljmp
dec
cmp
jbe
rcrb
mov
jne
ljmp
subb
jae
mov
shr
lea
not
and
decb
jne
aad
adc
loopne
sub
sub
mov
cmp
sub
mov
push
dec
pop
add
add
xor
push
or
mov
push
add
sub
jmp
dec
std
pop
clc
and
sbb
in
imull
jne
and
sti
add
test
sbb
cmp
test
mov
imul
jl
and
rcrb
lock
cmp
sti
pop
mov
shr
not
and
add
fisubrl
je
sub
lret
xor
cmp
das
mov
xor
jae
rcrl
add
enter
add
xchg
ficomps
mov
int3
inc
or
jnp
adc
dec
or
adc
push
cmp
sub
rorl
mov
pop
inc
push
xchg
lods
push
or
clc
pop
lock
mov
jmp
dec
adc
jbe
dec
push
mov
sub
push
outsl
or
jne
pop
mov
nop
xlat
imul
and
pusha
push
pop
fbstp
jp
inc
shl
add
gs
mov
scas
jp
push
call
aas
gs
mov
testl
cmp
movsb
mov
add
decb
adc
inc
test
adc
and
pushl
push
push
mov
mov
adc
int
insb
hlt
repnz
mov
fwait
dec
mov
adc
pushf
or
sbb
sub
add
cmp
adc
sbb
or
das
mov
inc
inc
mov
pushf
pop
mov
mov
test
adc
scas
adc
cwtl
outsl
push
stc
cmp
dec
ja
add
js
add
out
mov
les
bound
arpl
adc
or
stos
jecxz
pop
sub
push
xor
or
adc
jae
dec
data16
jmp
orl
mov
add
test
mulb
cmpsb
and
jne
push
mov
or
add
inc
mov
xor
ljmp
jl
test
incb
pop
loopne
xchg
sub
add
or
hlt
test
push
mov
mov
mov
or
push
push
popa
outsb
mov
mov
in
test
xchg
lock
jmp
dec
clc
loop
aas
lock
nop
cld
or
adc
ja
jge
sbb
lock
call
aad
add
je
clc
add
movsb
mov
js
pop
jb
adc
adc
or
fs
inc
bsf
pop
mov
mov
lock
icebp
stos
cmp
inc
jne
or
lds
not
and
xchg
ror
cmpsl
or
rol
stc
adc
adc
or
shrb
mov
scas
xchg
stos
dec
cmp
cmp
adc
mov
test
fnstcw
repz
cli
cmpsb
pop
push
stc
scas
add
and
add
pop
xor
mov
xor
stc
sbb
clc
push
cs
pop
add
push
xorb
adc
mov
add
push
jns
xchg
mov
into
add
cltd
and
jnp
push
mov
incl
mov
cs
fstpl
shlb
outsl
hlt
lea
sbb
imul
dec
in
lcall
movsb
shlb
iret
fisubs
jo
js
and
and
out
loopne
mov
sub
pop
pusha
test
adc
inc
insb
dec
inc
pusha
scas
xor
test
and
inc
and
clc
push
out
dec
aas
jl
addl
mov
pop
add
inc
dec
insb
pop
xor
push
pusha
push
cld
push
sar
dec
jp
movsb
incb
loope
in
inc
cwtl
shrb
cmp
iret
jo
cmp
dec
je
lret
sbb
push
mov
xchg
fbstp
pop
mov
fnstenv
dec
ficoms
add
mov
loope
lea
mov
mull
sbb
sahf
jbe
rolb
mov
pop
sbb
bswap
mov
out
cmp
pmulhuw
scas
or
dec
jmp
push
inc
sbb
popf
add
imul
insb
and
add
js
and
inc
cmp
push
push
jo
inc
loop
jge
shr
adc
cld
xor
in
or
mov
dec
or
test
cs
nop
cmp
and
decb
xlat
rorl
xor
fadd
pop
or
call
sbb
jle
jne
sub
xchg
out
or
jae
xor
aaa
rolb
je
arpl
clc
insb
sbb
jmp
adc
inc
je
xorb
gs
mov
or
rorb
pushl
popa
mov
sbb
and
pop
mov
mov
pop
mov
iret
jne
mov
jno
mov
pop
je
nop
in
stos
jp
lret
dec
mov
jle
mov
adc
outsb
mov
sahf
jns
inc
test
inc
push
pushf
mov
sub
mov
sbb
mov
xchg
dec
add
dec
dec
dec
pop
xchg
sbb
iret
js
or
sahf
cmp
fbstp
test
pop
mov
decb
jne
jbe
rcl
repnz
jmp
jp
dec
xchg
cmp
and
jo
sti
bound
dec
push
and
into
xor
dec
jp
push
popa
sub
or
jns
inc
mov
or
lea
mov
cmp
mov
or
and
cli
push
or
dec
cld
or
lcall
or
subb
insl
push
mov
or
test
add
or
adc
or
sbb
add
scas
test
mov
and
lods
test
lea
jno,pt
loope
push
sbb
sbb
das
sbb
push
ds
push
mov
inc
add
hlt
loopne
push
repnz
sbb
std
loopne
push
mov
mov
jb
or
xorl
imul
pop
jge
and
das
adc
cmp
xorb
xor
cmp
icebp
push
mov
dec
push
add
scas
mov
push
sbb
and
and
notb
and
adc
shlb
int3
mov
add
sub
scas
orl
xchg
js,pt
jmp
inc
cmp
cmp
sub
adc
push
mov
inc
inc
lock
scas
je
pop
es
test
bnd
dec
orl
movsb
rcll
adcl
inc
dec
and
add
mov
or
push
dec
push
cmp
insb
sti
ficompl
in
jbe
and
inc
xor
lahf
pushl
pop
nop
fisubrl
push
adc
imul
push
divl
xor
jne
push
add
std
pop
jo
pop
inc
insl
sbb
ret
mov
cmp
pop
es
mov
sbb
js
push
loopne
mov
or
pop
iret
ret
filds
test
jmp
int
jbe
xchg
cmp
and
insb
sbbb
xchg
imul
or
mov
inc
cmpsl
mov
jo
pushl
mov
push
jmp
mov
insb
les
cli
or
hlt
inc
inc
dec
jne
daa
mov
mov
aas
xor
adc
shrb
jae
pushf
xorl
loopne
push
lea
and
call
add
hlt
mov
mov
xor
add
mov
sbb
loop
call
jge
jmp
jl
xchg
out
int
in
int3
test
movsb
inc
push
int3
data16
into
shlb
cli
cmp
mov
mov
mov
sub
mov
imul
test
test
movsl
mov
pop
mov
add
lcall
mov
xchg
gs
jle
hlt
xchg
movsb
sbb
lcall
dec
and
mov
adc
fwait
xorl
imul
imul
mov
or
add
pop
jb
ficomps
rol
lea
sbbb
sbbb
and
jl
mov
nop
out
pop
mov
sub
insb
jne
jp
sbb
or
or
pop
pop
loopnew
and
jg
dec
outsb
push
mov
add
cmp
add
enter
pop
jns
mov
lcall
daa
push
jmp
jae
or
int3
les
and
dec
jae
xchg
xor
dec
lcall
in
jns
inc
lea
leave
xor
jb
jl
call
add
inc
sub
cli
pusha
sub
rcrb
dec
push
push
mov
pop
push
mov
in
xor
push
jb
cmp
cli
jb
test
fmulp
nop
lret
call
add
rorl
pushf
mov
pusha
push
jb
or
mov
jb
daa
nop
inc
in
fimuls
cld
push
mov
fnstcw
stc
orl
test
xchg
or
inc
scas
dec
dec
call
mov
xor
xchg
xchg
push
lods
dec
gs
cs
lods
add
enter
jge
add
call
mov
lods
adc
and
adc
les
xor
rolb
push
add
loop
in
cmp
pusha
xchg
in
add
and
test
bound
in
test
mov
and
mov
jmp
cld
enter
cmp
xor
mov
stos
xor
cmc
or
fwait
mov
orl
mov
out
dec
mov
mov
sub
jl
inc
sub
cmp
sub
jbe
push
testl
mov
es
lret
pop
xor
sbb
int3
xchg
ret
xchg
or
sub
pop
mov
fidivl
jmp
mov
adc
sub
add
lret
or
inc
push
andl
adc
scas
pop
insl
push
lods
loopne
subb
das
mov
testl
sub
bound
xor
push
or
mov
test
dec
shr
lds
or
sar
sbb
ret
mov
cmp
jne
or
cmp
and
iret
add
nop
cmp
sub
xchg
pushf
xor
push
fistpl
jb
push
das
xchg
sub
js
add
xchg
cmp
in
mov
ss
out
add
add
mov
mov
add
jmp
add
add
rcr
loopne
push
or
and
jge
lcall
inc
or
inc
add
jne
call
mov
or
lods
ficomps
cld
push
ds
mov
inc
mov
dec
cmp
add
adc
add
das
mov
add
in
mov
lret
int3
and
not
and
mov
add
or
xchg
adc
adc
sub
loope
and
inc
cmpsb
imul
les
push
std
dec
inc
mov
xor
push
adc
in
in
push
dec
adc
cmpsb
dec
outsl
jmp
inc
lret
je
pop
mov
sbb
add
in
shrl
insl
aaa
fisubrs
rcrl
int
mov
sbb
add
add
jno
je
mov
or
jmp
and
mov
mov
rcrl
push
fldl
dec
jae
mov
or
sub
out
dec
sub
aad
mov
das
and
jns
insl
leave
pop
jmp
jo
push
insl
mov
rorl
mov
pop
xchg
dec
xchg
mov
xchg
lods
imul
dec
dec
je
add
and
sbb
sub
mov
adc
xchg
insl
ljmp
bound
mov
jne
data16
sub
sbb
mov
adc
stc
fwait
add
xchg
inc
test
sub
or
test
pushf
jl
pusha
push
je
cs
in
push
adc
fdivrl
movsb
popa
add
fstl
push
shl
push
mov
aaa
jne
xchg
pusha
xchg
das
and
inc
lock
pop
mov
cmp
cmp
repz
push
push
dec
pop
lahf
out
testl
xchg
xchg
sti
pop
std
sahf
fnstsw
mov
movsl
mov
lahf
mov
pop
sub
and
or
push
mov
inc
add
mov
sbb
lods
shlb
xchg
in
jle
fdivrp
adc
and
inc
lret
xchg
jecxz
or
dec
sti
loopne
push
push
xchg
jmp
inc
faddl
pop
or
or
popa
pop
push
sar
push
jmp
test
fmull
out
pop
mov
inc
jp
cmp
lods
add
push
cmpl
out
jle
jp
or
mov
sub
mov
mov
iret
mov
test
jp
test
orl
xor
jb
into
adc
rcrb
in
lret
enter
or
lret
test
int3
cmp
shlb
pop
jb
add
sbb
movb
pop
cmpsl
pop
mov
mov
clc
jno
daa
movsb
sub
add
incb
push
or
mov
testb
jne
dec
sbb
xor
push
adc
pop
sar
lea
ret
and
fisubl
cmp
cld
adc
adc
jae
or
mov
rolb
shlb
inc
push
std
fwait
imul
ret
sub
xchg
adc
mov
mov
adc
rcll
sub
mov
mov
jge
rorb
shl
and
xor
cwtl
mov
mov
dec
push
pop
or
pop
cs
pop
add
andl
and
jo
mov
cld
cmp
mov
xchg
sbb
push
stc
or
mov
push
jbe
mov
mov
xchg
and
es
ds
lea
pop
out
dec
je
or
inc
repnz
mov
dec
arpl
loop
imull
inc
sub
pop
xchg
pop
and
ss
jbe
jne
inc
lret
testl
inc
xor
mov
xchg
movsl
hlt
inc
push
fisubl
xor
imul
sbb
lds
js
jo
dec
mov
lods
cmp
ret
fbld
push
leave
addl
repz
lock
mov
jg
xor
mov
inc
iret
imul
jns
rorl
daa
bnd
jmp
js
orb
popf
and
xchg
cld
adcb
sti
push
inc
cmp
pop
inc
jl
lea
std
aad
in
mov
mov
testl
fisubrl
mov
cwtl
jecxz
aad
xchg
mov
push
adc
test
mov
push
lock
or
imul
fidivl
jns
daa
mov
sahf
mov
mov
and
push
stc
lods
test
mov
std
loopne
fisubl
add
sbbl
shlb
mov
jmp
mov
sub
cmpsb
sbb
jno
or
pop
pop
add
sub
cmp
sbb
test
subb
dec
add
inc
adc
addr16
xchg
push
sti
nop
cmp
test
mov
lret
insl
pop
xor
mov
std
aaa
addr16
xor
iret
das
lock
fdivr
ja
mov
adc
fbstp
into
mov
negl
pop
cli
lods
rcl
pop
pop
mov
dec
inc
or
jno
push
inc
xchg
and
push
sti
and
call
stc
call
rol
enter
push
mov
out
in
std
push
mov
lds
rcr
jge
mulb
arpl
insb
aam
std
inc
mov
cmp
nop
std
lds
das
data16
sub
mov
xchg
std
out
imul
mov
push
lods
rorb
cmp
orl
sub
nop
ja
je
mov
pop
fs
test
mov
xor
shrl
enter
inc
add
movb
vpmullw
test
sub
jecxz
jmp
roll
repnz
xchg
xor
mov
inc
insb
fwait
jne
adc
repnz
fs
cmp
adc
dec
and
sbb
call
std
mov
pop
xor
jp
lea
test
inc
cmp
std
into
jp
leave
mov
fwait
pop
frstor
push
popa
ficoms
fdivrp
or
mov
data16
push
inc
mov
or
subb
enter
mov
add
xchg
lret
sar
lock
xor
jmp
or
jmp
mov
adc
data16
jmp
mov
mov
int3
cmp
andl
xchg
push
jle
mov
jl
test
adc
xchg
cld
lods
in
mov
lock
adcl
dec
cmpl
pop
push
int
je
lods
bound
mov
push
movsb
adc
aaa
or
cwtl
inc
push
inc
sub
mov
cmp
xchg
sbb
cmovge
or
insb
mov
das
add
loop
push
dec
pop
jno
push
fs
xor
sbb
push
xor
std
std
adc
out
sti
lock
fsubrl
push
mov
xchg
cmp
andb
nop
cmp
mov
pushf
push
imul
iret
rcrl
fs
testb
mov
mov
mov
fadds
dec
les
jecxz
pushf
push
push
loopne
sbb
cwtl
mov
adc
fists
test
out
loope
mov
movsb
test
and
pop
mov
nop
pop
and
cmp
cmp
dec
jb
insb
loopne
in
cmp
jno
push
adc
jmp
push
adc
sub
cmp
ja
into
adc
popa
repnz
jo
pop
or
or
add
mov
ret
push
mov
ljmp
mov
adc
pop
pop
add
repnz
lock
sub
jbe
or
add
mov
or
je
pop
test
jl
in
mov
leave
test
add
call
mov
or
mov
inc
enter
adc
sbb
jb
or
cmp
or
les
imulb
pushf
mov
sbb
adc
xchg
mov
pushf
dec
push
cmp
sbbl
xchg
and
test
inc
stos
xchg
add
popf
mov
and
lods
test
mov
and
xchg
push
and
dec
fdivrs
cmp
cmp
cmc
loope
dec
in
cmp
insl
and
cmp
jns
mov
sbb
mov
xor
clc
mov
lahf
and
xchg
sbb
nop
mov
mov
repz
xchg
pushf
leave
aaa
ss
jno
lea
xchg
pop
sub
pop
pushf
orb
fisttpll
mov
mov
and
cmp
pushf
xor
xchg
dec
cmpb
add
bound
loope
push
aas
dec
sti
leave
adc
and
test
cltd
sub
inc
test
mov
pushf
in
cmp
fs
pushf
add
nop
xchg
lods
lods
lods
es
push
lea
mov
je
addr16
je
sbb
mov
push
sbbb
add
sahf
testb
test
jno
sbb
and
cmp
js
iret
and
jp
pop
rcrb
or
xchg
or
jne
arpl
jae
pop
or
sub
das
test
xor
mov
add
imul
js
cmp
imul
lcall
mov
outsl
in
sbb
outsb
mov
call
cmp
jne
push
lds
loop
dec
std
xor
xchg
jno
test
inc
subb
dec
scas
xchg
or
and
cmp
jl
dec
movb
xchg
xor
mov
idiv
dec
or
outsl
mov
test
je
mov
xor
loop
adc
bound
ret
cmpsl
mov
sbb
lahf
push
xor
test
sub
dec
sub
and
jle
popa
add
mov
and
mov
sti
stos
clc
push
mov
shll
fucomip
stos
bound
or
imul
or
cs
dec
dec
and
lods
or
mov
jmp
sub
mov
movl
rcr
es
lock
push
gs
or
dec
adc
pushl
or
adc
addr16
xlat
mov
jl
addl
pop
clc
or
lahf
or
jbe
jo
repnz
hlt
sbb
inc
or
jnp
xchg
insl
push
add
je
hlt
daa
int
or
clc
inc
push
inc
sbb
jae
testl
cmpsb
jmp
ss
clc
push
cmp
xorl
outsb
lret
jno
test
jo
les
ds
imul
sub
fwait
shrb
and
pop
xchg
add
movsl
push
sti
inc
sub
pop
ficomps
testb
jbe
jmp
cltd
sbb
lock
loopne
or
dec
stc
leave
icebp
dec
enter
jae
dec
pop
adc
adc
in
and
ja
xchg
dec
loopne
dec
mov
cltd
sbb
imul
or
clc
movb
mov
rcrb
push
adc
sbb
add
xor
sub
in
push
and
xor
xor
push
push
mov
sar
mov
mov
shl
mov
fildll
jo
xor
pop
ss
mov
inc
jmp
pop
iret
add
add
add
pop
sbb
and
sbb
add
out
add
push
pop
xor
inc
xor
cmp
push
push
imul
lods
mov
push
test
pusha
push
xchg
loopne
sahf
sub
frstor
test
rcrb
sbb
sbb
das
dec
fs
push
cmp
or
push
sbb
gs
pop
push
cltd
and
push
hlt
fdivr
shrl
add
daa
sub
repz
fcmovb
lea
pusha
mov
push
and
ss
nop
pop
cmpsb
fiaddl
sub
filds
rcrb
adc
mov
sbb
shr
loopne
mov
add
shr
rcr
shr
rcr
or
jne
div
mov
std
int
fs
inc
mul
add
jb
cmp
or
cmp
xchg
dec
cwtl
or
mov
call
mov
jno
xor
mov
pop
rolb
sbb
xchg
dec
mov
test
mov
or
dec
cmp
pusha
jb
ljmp
jb
lods
xchg
xor
or
dec
add
cmp
roll
xchg
lret
and
mov
xchg
pop
jg
pop
xchg
dec
adc
pop
inc
and
cld
or
outsb
dec
test
push
jp
sub
lahf
mov
insb
out
js
hlt
or
jb
inc
fsubrs
cmp
mov
and
lahf
and
and
add
jb
inc
shl
xorl
sub
or
adc
subl
and
sbb
fs
sbb
add
pop
jbe
xor
add
aas
and
adc
aam
lock
mov
push
loop
or
fistpl
add
and
imul
ret
imul
xor
enter
aas
dec
pop
std
xor
fcoms
lods
fs
out
inc
adc
and
sub
loop
or
xor
rolb
adc
rolb
mov
or
or
imull
mov
imul
jle
andl
cmp
scas
inc
add
and
sarl
mov
mov
cmp
iret
inc
cmp
sbbl
pop
addl
xchg
test
cmp
xchg
test
cmp
jo
push
push
xchg
cmp
ficoms
mov
lock
leave
push
sbb
pusha
dec
mov
or
lock
dec
mov
les
push
xor
out
push
outsb
cmp
mov
fidivl
jb
hlt
add
pop
dec
xor
cmp
adc
mov
movsl
sub
lock
call
or
pop
adc
shll
out
push
or
fsts
shr
xor
xlat
loopne
jne
inc
mov
ja
push
loopne
jmp
xchg
or
add
lahf
and
je
sbb
dec
je
xchg
out
inc
sbb
jmp
mov
jmp
dec
pop
dec
or
pop
push
inc
rcrb
popa
mov
xor
cmp
les
push
in
or
or
or
je
dec
sti
mov
mov
aam
inc
pusha
jne,pn
sbb
jb
test
and
fwait
sub
adc
mov
add
cmp
jge
mov
sbb
ret
push
pop
mov
fcomp
sbb
aas
push
sub
je
pop
sbb
push
push
dec
jmp
inc
ret
mov
dec
ret
add
and
add
adc
mov
adc
fs
lret
jno
pop
add
enter
push
or
insb
insb
in
das
adc
xor
les
addl
mov
lods
sbb
pop
and
int3
shll
mov
push
pop
test
jo
cli
xor
and
xor
es
and
lret
je
mov
push
pop
jmp
fsubs
rol
ret
adc
mov
mov
cs
xor
stc
xor
fmuls
imul
loope
jbe
pop
or
and
xchg
pop
lods
and
inc
mov
icebp
aad
xchg
ljmp
daa
sahf
mulb
push
out
and
fdivl
sti
jns
aam
xchg
pop
addr16
outsb
pop
inc
sbb
std
cld
fbld
push
inc
and
push
mov
jp
out
or
sbb
jp
popf
xor
sahf
cld
pop
pop
jg
ret
nop
add
sub
dec
cmp
hlt
cmp
hlt
js
in
cmp
and
cmp
xchg
fisttpll
inc
dec
and
and
adc
ja
xor
and
inc
xchg
cld
xchg
subl
ja
test
ds
and
inc
or
dec
mov
and
rcll
add
xorb
fcoms
fildl
mov
and
fidivrl
aad
mov
cmp
jbe
push
sti
jne
fistps
push
cmp
lea
lret
adc
jmp
popa
insb
loop
dec
cmpb
pop
je
xor
push
cmp
mov
fisubrs
stos
ss
or
out
xchg
cmc
and
dec
add
cs
cmp
jbe
add
and
sbb
push
dec
push
out
mov
stos
cmp
pusha
add
outsb
push
mov
add
adc
fdivs
int
push
adc
cld
mov
inc
and
cmp
lods
sub
inc
mov
daa
add
jb
push
xor
rorb
cltd
or
inc
push
mov
rcr
xor
push
sub
mov
add
or
xchg
add
lret
cmovno
xor
loop
ja
cmp
sub
jl
ss
jmp
xor
xor
les
pop
inc
inc
adc
add
lods
enter
pop
je
pop
fdivrs
inc
es
pop
int
or
xor
or
xor
sbb
shr
test
dec
stc
add
loopne
rcrb
mov
add
je
sarb
bound
leave
pusha
or
dec
add
ja
push
ror
inc
add
xor
jae
fimuls
pop
add
les
push
sub
or
fwait
cwtl
rorl
push
out
insl
cmp
pop
jns
pop
scas
cmpsb
mov
mov
xchg
test
xor
or
xorl
xor
test
jge
mov
cli
push
mov
stos
into
aas
jae
call
mov
push
test
dec
shl
wrmsr
iret
add
ss
ljmp
sub
push
push
orl
aad
jecxz
or
and
mov
xchg
pop
mov
pop
shrl
icebp
lea
cli
cs
and
xor
cmp
jecxz
call
add
inc
fs
mov
jbe
jne
or
dec
inc
inc
or
jne
shlb
mov
add
push
sar
cmp
sbbb
hlt
xor
test
mov
test
std
xchg
in
and
add
dec
dec
aam
inc
clc
cld
aas
sbb
aaa
mov
fs
jb
jmp
bound
jo
testb
roll
jb
test
ret
push
sub
sti
or
into
or
out
int
rcrb
pop
lret
movsl
mull
cmp
push
mov
dec
adc
icebp
mov
inc
cwtl
lea
pushf
xchg
push
adc
xlat
pop
push
dec
aam
add
or
mov
xor
mov
rep
or
or
or
push
and
scas
push
repz
inc
mov
mov
ret
int3
js
into
mov
cmp
pop
mov
mov
inc
call
cmp
mov
push
jl
push
pop
pop
sbb
lea
jb
es
loopne
aas
sbb
and
loopne
pop
dec
andb
and
sarl
daa
adc
push
xchg
adc
sar
sarb
jg
popf
or
add
test
insl
inc
adc
push
push
mov
mov
mov
insb
cmp
jp
push
es
sbb
pop
shl
add
and
xorl
or
adc
push
mov
ljmp
mov
filds
hlt
inc
adcl
xchg
lock
mov
repz
xchg
insb
or
sbbb
mov
jb
xchg
adc
hlt
or
pop
ret
jns
cmc
push
mov
clc
ret
adcb
mov
xor
jne
mov
push
lock
adc
sub
lock
and
sti
add
mov
jmp
scas
pop
push
dec
dec
notb
stos
sub
sub
adc
les
rcrb
mov
push
shll
loopne
push
jmp
sahf
not
mov
ret
push
imul
xor
jl
repnz
push
rcrb
insl
ret
lods
jmp
hlt
or
sti
mov
dec
mov
or
adc
lock
div
push
shll
mov
sub
ret
sbb
mov
add
adc
jb
adc
jle
rcrl
add
ret
sub
cltd
fdivrl
mov
or
jmp
sub
dec
imull
jnp
sbb
jg
adc
and
push
pusha
jo
cs
mov
adc
mov
out
lock
cli
stos
loope
add
or
pop
add
roll
in
sub
cmp
je
sub
mov
fcoms
jo
addb
push
test
jle
cmpsb
jge
mov
outsb
mov
rep
ss
neg
adc
lods
shlb
lock
push
jae
cmp
das
push
pushf
cmpsb
jle
sbb
add
enter
es
push
dec
pop
mov
pusha
xchg
mov
daa
ss
outsl
sbb
popa
push
mov
push
jnp
jp
jae
xchg
adc
push
mov
stos
cmpb
pop
mov
lods
aas
mov
mov
adc
jmp
sub
imul
add
jl
daa
repnz
push
jae
call
mov
sbb
mov
ret
mov
dec
dec
je
add
inc
adc
repnz
sahf
call
scas
repnz
fidivs
xor
adc
adc
clc
pop
lcall
mov
add
sub
add
cmp
mov
loop
or
or
imul
push
nop
cmp
fdivs
mov
dec
adc
push
and
ja
repz
push
sub
outsl
inc
or
xchg
lret
jbe
jle
sahf
outsl
ja
inc
imul
mov
add
sbb
hlt
or
ret
ror
out
mov
dec
lret
loope
or
dec
aam
dec
test
into
and
call
sub
lcall
insb
mov
ja
dec
mov
shrl
rol
add
sub
lock
in
lock
rep
add
and
rcll
jno
rclb
add
push
dec
and
push
or
mov
ret
xlat
jmp
pop
stc
add
dec
add
sbb
mov
pop
mov
adc
lea
sub
sub
xor
jno
pop
lcall
js
dec
fadds
add
inc
mov
lcall
movsl
dec
pusha
adc
add
and
in
add
pop
push
loopne
pop
jno
ja
ja
adc
les
sub
push
punpckldq
fdivl
inc
push
mov
mov
ret
int3
loopne
add
scas
int3
iret
decl
jg
pushf
or
push
test
and
je
xor
sub
inc
fsubl
push
faddl
dec
push
xor
inc
call
mov
nop
fistl
mov
xor
aas
add
jmp
adc
jl
sbb
push
enter
or
or
shr
rolb
sbb
addr16
push
out
aam
sarb
ret
xor
mov
mov
sub
mov
fisubl
aaa
push
sarb
pop
push
mov
int3
mov
punpckldq
mov
or
aas
mov
jmp
adc
lods
adc
imul
out
fdivs
lods
push
mov
add
or
sbb
push
imul
jge
push
dec
lahf
mov
push
dec
dec
xor
aaa
inc
adc
dec
lods
ret
mov
xchg
jb
ret
or
xchg
pop
imul
stos
inc
cmp
int3
xor
cmp
adc
out
fs
pop
push
ret
sub
cmp
imul
jle
push
ret
cmc
or
sarb
sbb
dec
enter
and
adc
bswap
hlt
rcr
fsubs
popa
inc
scas
rorb
testb
jle
inc
push
mov
jno
xor
push
xchg
xchg
fsubl
jle
arpl
inc
mov
cmp
push
mov
jne
and
add
xor
orb
add
sahf
or
enter
fistpll
or
test
cld
sub
adc
pop
shll
mov
cmp
int3
add
adc
sub
inc
lcall
mov
rclb
add
push
push
lsl
jmp
sbb
push
and
int3
push
inc
sbb
sub
or
cmp
or
aas
dec
or
sbb
adc
or
fidivl
fisubl
pop
cmpsl
add
fxch
jo
rorb
xor
adc
fadds
ret
cld
add
add
imul
rolb
pop
xchg
dec
gs
mov
mov
xchg
call
filds
xor
sbb
insb
int
mov
dec
sbb
rorb
shlb
rcrl
push
cli
ja
jle
jne
lea
shlb
stos
push
sub
jbe
jp
repnz
movsb
inc
add
jle
jae
push
movsb
cmpb
add
cmp
jne
popa
add
lea
push
incb
add
int
adc
or
ficompl
lock
mov
add
xor
sub
xor
sti
inc
stc
outsb
dec
sub
dec
mov
add
jl
mov
pop
mov
cld
sbb
subb
mov
leave
xor
push
push
add
or
sbb
repz
mov
push
push
sbb
addr16
inc
xlat
popf
outsl
leave
add
jle
js
sub
sbb
mov
cmp
add
notb
push
lea
lea
or
dec
mov
add
jo
adc
jo
fcomp
cs
sarl
popl
sbb
jmp
inc
add
mov
mov
or
js
sbb
adc
roll
dec
pop
out
insb
movsb
je
add
mov
std
cld
dec
imul
sub
mov
push
mov
clc
sub
test
pop
pop
aaa
adc
ljmp
and
cmp
xor
out
imul
xor
aad
push
inc
test
arpl
xor
test
push
and
adc
push
dec
push
cld
push
xchg
stc
add
xlat
xchg
sbbl
lea
and
jb
jb
and
sub
jo
jb
xor
cmp
shlb
roll
inc
inc
pmulhuw
in
dec
dec
push
push
cmp
mov
pusha
cmp
cmp
push
or
cmp
gs
movsb
cmp
mov
xchg
cwtl
fs
dec
es
mov
cltd
test
sub
test
lock
outsb
mov
movsb
and
xor
jl
push
mov
or
movsb
dec
dec
dec
adc
dec
adc
lcall
movsb
pusha
sbb
pop
and
lcall
popl
enter
pop
repz
adc
cmp
inc
ret
shrl
cmpsb
cmp
rolb
icebp
lods
pop
js
inc
dec
jne
out
xchg
adc
push
lret
sbb
xorb
mov
adc
sbb
xchg
sbbb
fsubrp
add
fmull
cmp
movsl
dec
xor
je
sbb
push
add
sub
fadd
and
pop
dec
int3
fdivrs
dec
add
add
mov
imul
inc
pop
push
cs
jle
adc
and
inc
add
or
pop
cltd
mov
xor
ss
inc
dec
loope
sbb
pop
cmp
jns
lea
je
sub
mov
je
sti
pusha
daa
pop
lret
ret
ret
lret
xchg
pop
insb
fcmovnb
lock
mov
sbb
add
fmuls
mov
and
popf
inc
in
dec
push
pop
int3
rorb
push
pop
sbb
cwtl
test
shrl
pusha
sbb
push
sbb
std
pusha
in
add
je
push
pushf
jnp
add
jne
sub
pop
and
push
loopne
xor
out
jge
or
imul
mov
push
add
sub
pusha
jo
pop
in
sbb
inc
or
push
popa
popa
cmp
jnp
leave
inc
cs
add
lret
pop
test
dec
push
lret
imul
push
test
pop
inc
push
sub
push
popa
jg
pop
enter
std
aad
mov
out
cmp
add
clc
loope
or
jl
adc
xchg
lods
xor
dec
jmp
cmc
sub
or
adcb
mov
push
adc
mov
subb
xor
mov
add
and
fcoms
dec
cmp
into
aas
loopne
sbb
or
mov
cmc
bound
loop
inc
rorb
sub
add
or
jl
cmp
jb
adcl
add
jp
cld
lea
add
and
sbb
xchg
pusha
and
mov
loope
sbbl
rol
pusha
sub
icebp
add
xchg
je
mov
push
fwait
lret
fwait
sub
xor
lahf
mov
sbb
mov
sti
or
int
mov
or
filds
jb
in
aam
into
in
js
pop
pop
jo
in
add
or
jbe
or
pop
jb
inc
inc
mov
xor
push
push
repz
push
lea
sahf
or
out
mov
xchg
fmuls
sar
mov
push
ret
sbb
or
xor
testl
andl
iret
dec
sbb
aam
add
and
fstl
imul
xchg
pop
popf
add
loopne
inc
ret
cld
mov
inc
sbb
imull
stos
adc
cmp
test
sahf
push
inc
into
pop
push
jg
xor
mov
jns
mov
sub
int3
les
push
sahf
inc
popf
pop
addl
pop
or
out
sbb
mov
dec
imul
mov
mov
fstp
in
jmp
cmp
in
lods
mov
sar
xchg
iret
adc
push
hlt
mov
invd
xchg
lods
mov
pop
pop
lea
or
out
lret
add
jmp
ja
adc
cs
dec
pop
jmp
nop
add
inc
call
jmp
push
jg
daa
xchg
dec
inc
lea
push
out
add
mov
add
lods
jnp
mov
cmpl
repz
push
dec
cmp
jne
mov
mov
jl
cmpsl
lods
mov
dec
sub
adc
xor
sarl
cmp
test
movsb
sahf
fisttps
add
cmpsl
mov
insl
mov
test
subb
rolb
jno
add
cli
jecxz
mov
mov
mov
mov
or
pop
inc
add
sbb
out
hlt
ficoms
inc
int
push
jmp
cmovbe
dec
loopne
outsb
push
and
test
mov
shl
int
pop
cmp
sbb
lea
and
fisttps
cmp
scas
jp
adc
sbb
mov
inc
mov
adc
dec
add
xchg
sbbb
or
jmp
clc
clc
sahf
cmp
push
xchg
aam
outsb
ja
sub
sub
jne
sahf
add
push
cmp
mov
scas
pushl
adc
cli
or
inc
pusha
das
fimuls
mov
adc
mov
jmp
repnz
scas
loop
stos
push
and
inc
xchg
cmp
push
pop
inc
add
int3
cmp
jmp
loopne
cli
or
dec
xor
mov
dec
add
js
add
xchg
mov
xor
adc
lods
push
subl
fisttps
or
inc
inc
sbb
or
sub
mov
cmpsl
in
bound
pop
add
fs
aas
mov
lods
adcb
push
inc
sbb
adc
into
int3
push
xchg
push
xchg
sub
and
addl
push
loop,pn
sbb
push
pop
lock
popf
jmp
scas
xor
fs
std
add
mov
roll
fstp
cs
outsb
cs
test
test
je
add
jmp
add
repz
clc
mov
mov
sub
sbb
lea
mov
dec
ret
ret
mov
lods
adc
dec
mov
mov
push
push
cs
ljmp
push
cmp
adc
xor
jle
xchg
fidivrs
xor
filds
inc
cmpb
outsb
lods
mov
sti
and
sbb
outsl
push
das
or
mov
cmp
pop
pop
inc
or
or
js
mov
sbb
pop
and
je
scas
or
aaa
push
xor
cmp
xchg
mov
sub
cs
in
aad
add
jne
mov
add
loope
push
or
push
jp
outsb
mov
xor
inc
mov
and
push
mov
popa
add
jmp
pop
rorl
mov
fdiv
and
stos
lahf
or
pop
ret
sbb
jo
mov
inc
add
inc
rcr
out
push
orb
xor
adc
inc
not
flds
add
inc
pusha
ja
inc
mov
jbe
mov
push
call
push
out
push
mov
adc
add
fidivrl
shlw
ret
add
ljmp
and
push
mov
out
pushf
cli
inc
rorl
pop
mov
sahf
in
fisttpll
jl
js
or
call
rcl
xchg
add
in
pop
pushl
nop
cmp
jmp
repnz
push
repnz
clc
xchg
and
adc
or
rorb
clc
push
shlb
rol
adc
push
adc
stos
xchg
mov
sbb
dec
loope
sub
push
fistps
cmp
lods
jg
rcrb
mov
push
dec
pop
fcmovnbe
sub
dec
push
xor
bound
xchg
lcall
adc
aad
aaa
dec
xchg
xor
mov
and
pop
pop
adcb
push
pop
lods
pop
mov
pop
pop
or
inc
and
mov
jg
sbb
add
push
add
clc
je
xor
push
and
mov
lcall
inc
sub
hlt
lock
mov
xor
mov
mov
adc
push
sub
push
push
push
and
je
push
ret
inc
cmp
shlb
test
add
mov
in
js
pop
sbb
push
add
insl
mov
popa
add
adc
and
les
clc
add
rol
cmp
adc
cmp
rcr
mov
sub
cmp
push
test
test
push
clc
loopne
je
jns
jmp
test
push
xor
xor
jecxz
loope
xchg
push
add
and
mov
adc
icebp
xchg
ret
push
dec
movsb
mov
sub
inc
dec
cmp
les
jb
cmp
fiadds
sbb
push
pop
mov
popl
lea
inc
lcall
loopne
sub
rclb
les
mov
jo
mov
or
jns
mov
and
inc
adc
loope
sub
lea
mov
sub
jmp
shrl
adc
mov
xlat
sub
lea
sub
test
ljmp
dec
pop
mov
int
idivl
inc
ja
mov
sbb
js
pop
push
pop
sbb
adc
lock
fs
inc
arpl
xchg
sbb
cld
push
subb
cmp
push
jbe
pop
fs
pop
cmp
mov
int3
jle
push
sbb
adc
dec
cmp
ficomps
add
mov
repnz
das
adc
inc
fdivl
dec
dec
sub
mov
jle
sti
add
add
jmp
or
mov
call
popf
inc
rclb
xchg
push
mov
cmpsl
popf
mov
and
jne
or
sbb
inc
callw
push
xchg
iret
jmp
pop
xor
sub
daa
pop
sbb
push
adc
cld
or
add
mov
pop
push
dec
or
ror
jecxz
push
adc
sub
xchg
fs
popa
pushf
std
jmp
fwait
jmp
sub
pop
stos
sbb
sbb
mov
imul
push
push
incl
cmc
cmp
mov
xor
call
pushf
pop
sub
je
push
popf
movsb
mov
test
mov
mov
sbb
data16
pop
idiv
add
dec
xor
sub
adc
inc
rorb
xor
push
or
xorb
or
roll
mov
clc
adc
test
in
push
mov
pop
fsub
and
test
and
add
mov
mov
adc
mov
nop
sub
jb
fldln2
shll
dec
xor
adc
or
in
inc
dec
push
shr
add
jmp
xor
add
popl
fadds
test
mov
adc
test
and
dec
lar
cmp
xchg
mov
test
and
or
addl
jmp
idivb
jp
incb
jmp
sbb
lock
in
shr
inc
and
mov
and
outsb
inc
jl
jecxz
jge
add
or
jmp
sub
push
loope
push
les
sub
xor
sub
mov
jbe
test
insb
pusha
and
push
sbb
add
flds
ja
pop
adc
pusha
mov
pusha
loope
pop
sub
sub
fs
and
adc
fstp
ds
dec
sbb
imul
adc
nop
daa
hlt
adcb
push
sbb
inc
or
xchg
cmp
cmpsl
repnz
sti
add
add
adc
scas
out
test
fisttps
inc
xor
fcomps
cmpsl
or
sub
call
mov
stos
je
xchg
push
adc
testl
out
and
adc
sbb
xor
pop
sbb
jmp
push
and
inc
add
and
jnp
adc
sbb
inc
flds
flds
push
sbb
sub
fstpl
or
clc
and
ret
inc
push
cmp
fisttpl
xchg
pop
pop
dec
pop
sub
jl
inc
neg
loop
adcb
adc
sub
mov
sti
lret
inc
bound
or
xchg
push
aaa
sub
jle
sbb
out
repnz
mov
mov
aaa
negb
jl
add
sub
sub
sbbl
mov
psubusw
dec
test
int3
adc
inc
push
cmp
hlt
add
enter
pop
dec
cmp
cmp
js
or
imul
les
mov
jl
cmp
ffree
repz
cmpb
inc
push
xlat
xor
ror
loopne
add
div
mov
or
jge
xchg
xor
into
jno
sti
sbb
not
insl
in
sbb
jp
dec
in
gs
mov
jbe
lock
push
pushf
or
push
push
sahf
jmp
or
loope
pop
movsb
jmp
in
aam
test
and
mov
and
negb
add
mov
mov
lcall
sbb
cmp
pop
add
and
clc
push
add
dec
mov
dec
add
jl
lret
fsubl
push
pop
fs
add
sbb
and
es
add
or
hlt
dec
sbb
and
and
jl
pop
mov
js
or
call
dec
shr
sbb
sbb
push
inc
jnp
hlt
adc
or
les
cwtl
push
hlt
push
add
mov
ja
sbb
loop
pop
sub
clc
add
or
fwait
mov
jp
jno
mov
sub
cmp
push
mov
inc
or
or
repz
push
je
adc
or
adc
insb
imul
jo
ret
insl
scas
adc
mov
pop
mov
fmul
in
mov
push
nop
shlb
push
and
or
push
mov
jbe
sub
daa
dec
jle
addr16
mov
xchg
jo
popa
loop
mov
int3
cmp
adc
add
mov
cmp
loop
cmp
mov
mov
aaa
test
pop
mov
sbb
shrb
pop
cld
mov
test
pop
clc
data16
jmp
or
add
in
call
ret
sahf
push
cld
push
sub
lock
or
jo
pusha
repnz
gs
ljmp
xchg
mov
sub
cmp
loop
jmp
sbb
adc
push
add
xchg
inc
push
pop
or
test
fadds
into
jle
jbe
addl
inc
dec
dec
jecxz
in
lcall
jnp
imul
pop
test
or
mov
dec
push
sbb
or
shl
rcll
or
jge
loope
push
out
mov
push
rcrb
mov
cmp
push
add
addl
es
inc
scas
adc
nop
subl
sti
ret
mov
fnclex
and
xchg
dec
pop
inc
fnstcw
and
xor
push
or
insl
or
push
mov
jg
adc
fldt
or
enter
fwait
int3
and
push
imul
and
loope
outsl
cmp
jle
call
in
call
xor
pop
mov
lock
in
scas
push
mov
xor
inc
xchg
scas
mov
mov
xchg
or
jo
and
pop
shlb
or
mov
push
inc
mov
pop
mov
hlt
cmp
jbe
out
add
xor
mov
pop
add
jg
sbb
mov
push
xchg
rorb
push
mov
fidivrs
push
add
mov
je
or
xor
dec
sub
xchg
iret
sbb
lahf
insl
push
les
ret
push
enter
jns
pop
aam
or
jnp
add
and
push
dec
push
xchg
adc
pop
shlb
ds
test
adc
shrb
out
test
divb
add
in
scas
shll
inc
inc
psubq
xchg
je
cmp
invd
in
out
sbb
pop
fucomip
outsl
and
adc
enter
or
add
adc
or
inc
cmp
inc
add
rorb
add
str
xchg
add
or
xor
cmp
popf
adcb
inc
inc
es
jp
dec
leave
push
xor
and
pop
int3
sti
in
xchg
xchg
movsl
dec
push
dec
or
pop
cmp
test
push
or
push
add
loopne
inc
mov
sub
push
loopne
jo
adc
cmp
mov
add
scas
cwtl
pop
test
jne
xchg
in
mov
add
out
cmp
cmc
push
lods
clc
stos
stos
repnz
pop
pop
rorb
mov
jge
adc
dec
jle
add
adc
and
add
push
pop
or
pop
jo
dec
jns
dec
xchg
loopne
lea
pop
in
nop
mov
inc
shl
les
and
not
test
adc
inc
jmp
adcl
fsubr
push
hlt
repz
dec
cltd
insb
pop
and
mov
out
and
inc
fbld
inc
push
into
push
aam
data16
dec
mov
add
or
jmp
jb
cmp
sbb
sub
adc
mov
incb
jae
and
shl
mov
adc
cmp
and
js
test
jge
push
jnp
lret
inc
testb
lcall
or
outsb
mov
dec
dec
stos
inc
in
rcrl
addps
push
aam
xor
cmp
orb
xor
sub
stos
hlt
pushl
jg
lcall
cld
not
sub
add
je
mov
and
push
mov
push
or
or
shl
shlb
ret
mov
jl
inc
shl
jle
mov
cmp
jl
mov
mov
xchg
aam
inc
xchg
test
jb
out
pop
addr16
sbb
dec
mov
hlt
push
sbb
rolb
nop
pop
mov
loop
adc
push
lret
cmp
mov
inc
icebp
mov
data16
ljmp
lcall
movsb
loop
orb
jns
inc
lock
or
lods
and
ret
jecxz
mov
xor
pop
push
pushl
cmp
mov
cmp
inc
mov
mov
mov
lea
push
jge
pop
andl
stos
stos
mov
into
out
loop
mov
lea
and
jno
cmp
add
inc
sbb
jge
pop
and
nop
es
scas
inc
push
add
shl
nop
stos
cmpsl
loopne
add
and
or
add
ret
enter
rcrb
fdivr
and
sub
rcrb
pop
pop
xchg
inc
push
enter
jl
dec
inc
push
test
pusha
and
add
push
add
push
xrelease
movsb
bnd
sbb
in
push
insb
repz
insb
or
inc
es
jl
lds
inc
mov
leave
push
dec
imul
adc
mov
or
shll
pushf
mov
mov
rorb
cwtl
jne
lds
cli
ja
push
lods
or
add
or
inc
sti
aaa
and
inc
jmp
mov
sub
cs
lods
or
xchg
add
inc
pop
ja
mov
sub
cmp
ja
push
dec
mov
rorb
mov
add
and
push
call
or
fisttpll
push
scas
pop
out
mov
inc
cli
sbb
mov
jmp
cmpsl
dec
mov
lods
jbe
mov
adc
subl
cmp
cmp
jle
or
push
fidivrl
push
xor
xchg
mov
orl
pop
sbb
lods
mov
or
sub
cmp
testb
sbb
addb
test
sbb
jecxz
sbb
sub
shll
add
mov
pop
jge
scas
jnp
into
pop
cmp
test
push
and
jbe
add
jne
clc
dec
jae
enter
imul
sbb
sub
jge,pt
jmp
and
outsb
sbb
cmp
mov
dec
decb
out
push
sub
iret
and
cmp
in
orl
jne
add
or
mov
xor
mov
jo
test
mov
adc
xchg
scas
call
arpl
jge
mov
mov
shrb
add
insl
cmp
cmp
adc
add
inc
testl
andl
pop
push
les
cmp
jle
fldl
add
jmp
cld
test
adcl
cli
and
sub
adc
rolb
jg
std
jecxz
add
mov
jmp
push
cwtl
or
xor
mov
pop
lret
jp
dec
into
hlt
shrl
xor
and
or
imul
add
mov
xor
cmpsb
movsb
sub
cmp
cmp
cmp
mov
pusha
xor
insb
je
ret
cmp
jle
push
adc
xor
test
les
push
mov
inc
in
dec
test
lods
sarl
push
aam
lods
or
and
fisubrs
adc
add
mov
dec
mov
cmpb
cmp
rolb
mov
call
outsl
fs
mov
mov
ret
pop
xorl
out
mov
nop
shrb
ret
xor
andl
adc
repnz
cmpsl
sbb
ja
stos
aad
mov
enter
clc
les
add
inc
int3
jne
mov
and
ss
shll
into
dec
push
inc
into
jne
inc
or
add
cmp
cmp
jne
jne
into
adc
xchg
jne
mov
and
mov
or
test
rcrb
add
add
les
xor
jp
dec
cmp
cld
lea
cmp
dec
lock
and
ja
adc
mov
insl
call
dec
cmp
mov
and
jg
add
adc
pop
aaa
jle
js
sbb
into
inc
aam
gs
ja
lods
aam
lods
add
or
shr
xorb
push
in
pop
jge
mov
jg
or
adc
or
sub
pop
ret
add
lods
mov
mov
jg
cmc
adc
shl
shr
or
mov
shl
call
jne
pop
mov
mov
push
push
jl
push
push
ja
xchg
cs
and
sub
cmp
xor
xchg
pop
add
ficompl
add
popa
iret
sar
pop
mov
in
fiadds
push
call
in
aad
fidivl
shlb
cmp
ret
push
faddl
sahf
nop
dec
push
out
orb
popf
fiaddl
jmp
test
or
sub
add
lret
into
jmp
fwait
xchg
scas
das
ljmp
dec
and
les
jae
cmp
aam
or
int3
test
lock
mov
es
sub
add
imulb
mov
movups
xor
push
mov
bound
inc
shl
push
lock
mov
pop
add
add
jg
cmp
repz
es
adc
repz
mov
and
xchg
inc
jmp
ljmp
pop
jne
cmp
clc
adc
inc
scas
inc
mov
mov
fdivs
fstpt
test
pop
cmp
in
push
or
addb
pop
mov
stos
or
xchg
adc
inc
pop
adc
cs
or
ss
cmp
je
add
packssdw
inc
xor
mov
dec
cmpb
je
mov
call
sbb
sbb
add
or
mov
out
add
push
add
fcompl
add
shlb
jge
lods
mov
je
push
or
mov
sbb
shl
call
es
xor
mov
fdivs
sti
repz
xchg
inc
sti
enter
insl
sub
add
adc
xchg
idivb
jno
cli
mov
inc
shl
and
sbb
sbbb
or
sub
or
gs
xchg
mov
ljmp
sar
or
jbe
jbe
or
add
dec
or
cmpsb
test
push
jle
test
setg
sub
in
clc
add
mov
dec
cld
and
mov
aas
sub
movb
ljmp
cmp
cmp
push
sbb
cld
mov
mov
es
cmp
add
popa
jnp
loop
lock
lcall
xor
add
nop
repnz
nop
push
pop
inc
xor
jge
hlt
pop
js
dec
add
push
inc
ljmp
mov
les
sub
jno
jl
jbe
idiv
adcb
or
add
andb
testb
mov
pop
jne
repnz
add
push
scas
pop
inc
imul
nop
es
or
xor
sbb
std
aam
push
push
adc
insb
push
add
add
xchg
out
sbb
push
jne
pop
ret
jbe
push
clc
dec
adc
pusha
cmp
aam
sub
adc
cmp
lret
adc
sub
or
stc
mov
adc
outsl
or
call
adc
cli
pop
data16
jo
mov
imul
add
fcom
mov
xor
mov
jl
xor
pop
inc
push
call
dec
sbb
cmp
jmp
cld
pop
fldl2t
call
popa
jle
add
cmp
insl
xchg
push
test
inc
lods
push
push
roll
add
cltd
shlb
and
push
and
test
jne
adc
dec
aaa
add
and
test
js
jne
or
ja
dec
fsub
lea
test
imul
mov
push
js
push
lock
or
xchg
add
and
pop
push
xor
push
mov
dec
and
add
cld
pop
mov
int3
dec
je
xor
leave
sbbb
add
mov
and
andl
addr16
fwait
pop
fdiv
bound
fistpl
sub
loopne
lock
decl
xor
or
jne
pop
cmp
sub
rcll
sahf
add
mov
or
xor
inc
push
xor
mov
dec
cmp
insb
and
or
jg
lea
xor
sub
mov
or
push
dec
push
lcall
adc
push
movswl
les
ret
arpl
subb
mov
ret
adc
cmpl
insl
cld
add
dec
shrd
push
pushf
int3
and
jle
cmp
push
pop
ss
jl
cmpsl
clc
outsb
mov
incl
jg
nop
stc
inc
add
dec
jmp
xchg
leave
test
cltd
clc
sub
adc
push
outsb
xchg
and
incb
push
or
xor
pop
cmp
insb
jno
sbb
adc
xor
imul
js
dec
and
pusha
std
lds
pop
sbb
js
jg
jb
lock
mov
push
sub
or
fidivrl
rorl
clc
lock
inc
inc
shll
rolb
add
pop
or
lock
test
cmc
pop
mov
test
jl
jg
lods
jb
jnp
pop
lret
dec
inc
dec
pop
add
jns
or
or
sbb
mov
inc
fldenv
adc
jae
stc
mov
in
cltd
inc
dec
lahf
es
mov
push
loope
stos
scas
lds
sub
push
push
shll
adc
or
loope
sub
loopne
jb
or
and
jp
pop
sub
or
mov
xor
mov
sbbl
inc
sub
mov
inc
xchg
test
cmp
shll
jl
or
popa
push
mov
mov
pop
nop
push
or
xor
ret
cltd
out
into
mov
and
adc
xor
aad
repz
cmp
nop
xor
and
pop
je
push
shl
jne
adc
push
mov
fmuls
sbb
lret
jbe
adc
add
lea
inc
cmp
enter
and
adc
push
insl
push
jmp
insl
orl
sbb
xor
jl
sub
loopne
sub
pop
incb
shr
loop
mov
mov
sbb
jns
adc
jle
push
jae
clc
gs
or
pop
in
push
out
lock
add
ss
inc
popa
je
inc
je
dec
sub
add
in
jmp
xor
enter
add
and
out
xchg
fcoms
popf
or
cmp
push
mov
push
enter
mov
and
adc
fdivl
sub
dec
add
push
pop
clc
fstps
or
and
in
outsl
push
das
sub
xchg
shrl
adc
ret
ret
sbbb
dec
das
xchg
rcrl
add
je
jl
ret
arpl
cmp
and
adc
dec
push
fildll
inc
pop
lods
subl
or
or
xor
jb
sbb
cmp
js
pop
push
lds
add
fwait
xchg
shrl
xchg
mov
cmp
jmp
pop
dec
das
movsl
int3
adc
enter
daa
dec
add
pop
cmp
push
ficompl
xor
aaa
lea
push
sub
call
add
adc
xor
ror
cmovnp
push
sub
pop
cmp
movaps
pushl
dec
xchg
lret
push
cmp
imul
or
pop
cli
sub
pop
add
mov
addr16
mov
adc
jmp
insl
sbb
jnp
sub
cmp
cmpl
pop
movsb
push
push
add
cmp
mov
push
and
pop
les
scas
jg
loop
addb
imul
pop
pop
pop
pop
loopne
sbb
or
popa
sbb
orb
inc
sbb
shlb
hlt
add
lret
mov
lds
mov
inc
pusha
jnp
lock
pop
xor
or
pop
jl
inc
add
adc
cmp
sahf
je
inc
pusha
mov
lock
and
pop
cmp
bound
xchg
icebp
rcrb
mov
jnp
pop
mov
push
sub
mov
sbb
dec
jne
push
push
jmp
mov
cmc
jmp
mulb
je
push
jmp
je
dec
push
adc
or
lea
xor
iret
sbb
stos
movsl
and
outsb
push
jne
pop
jno
xor
or
add
mov
fsubs
mov
or
add
push
sub
xlat
push
sbb
push
inc
mov
add
inc
pop
in
add
aad
insl
cmp
jg
push
sbb
adc
sbb
push
cmc
push
imul
lea
or
call
adc
jg
mov
sub
addr16
inc
sbb
xor
jns
and
jo
jne
int
mov
mov
or
add
fwait
or
or
mov
mov
sarl
or
loope
inc
shlb
movl
clc
rcrb
mov
ret
mov
loopne
cmp
adc
lret
les
sbb
sbb
ss
xchg
and
wrmsr
sbb
pop
add
dec
mov
ss
push
cmp
add
cmp
and
xor
adc
sbb
inc
jmp
or
dec
push
jns
or
add
inc
pop
sub
sub
sbb
or
stc
inc
inc
test
inc
inc
in
lea
xchg
sub
bound
push
testl
movd
les
std
mov
jmp
dec
add
aam
lret
cld
jo
mov
inc
in
decb
scas
pop
jne
mov
das
adc
std
insl
jnp
push
addb
add
in
in
adc
repz
loopne
push
repnz
mov
push
inc
and
cld
push
sbb
mov
dec
cltd
enter
loopne
add
pop
mov
lcall
icebp
or
jl
das
mov
adc
or
push
ds
pop
sbb
popa
jnp
cwtl
sysexit
xlat
xchg
call
loopne
jmp
shl
mov
dec
inc
repz
jnp
add
xor
mov
xchg
sub
sbb
pop
mov
adc
loope
cmp
notb
incl
fmull
sub
xor
mov
pop
or
xor
or
or
mov
sub
xor
lcall
ss
pusha
jo
mov
pop
adc
mov
pop
or
jmp
fidivrs
inc
or
cwtl
dec
cwtl
les
loop
pop
arpl
ret
and
insb
dec
inc
adc
adc
in
loop
adc
test
aaa
push
dec
js
sbb
cmp
and
xchg
les
adc
mov
mov
pop
fnstcw
sbb
rcr
repz
add
or
xor
inc
shrb
xlat
ss
mov
pop
or
int3
mov
add
add
or
bound
scas
push
bound
lock
lods
sti
in
stos
mov
adc
sbb
fildl
inc
xor
or
int3
cld
push
ljmp
fnstcw
inc
das
xchg
shlb
sub
lret
mov
add
lea
mov
shr
and
or
cmp
mov
adc
or
mov
push
push
mov
add
jp
adc
and
jae
adc
orb
dec
cmp
adc
iret
adc
loope
add
out
rolb
pop
push
inc
or
mov
addr16
in
lea
call
cli
sbb
add
test
adc
iret
shl
andl
adc
sub
add
inc
test
add
ds
add
imulb
or
test
mov
adc
push
inc
xchg
dec
call
jno
inc
pop
sub
mov
movsb
add
cmp
jmp
xchg
mov
outsl
dec
leave
repz
pushw
lock
push
mov
push
add
out
pop
call
subl
aaa
sub
jne
add
call
sub
in
or
into
adc
inc
push
adc
jnp
adc
adc
and
jns
push
jmp
inc
mov
hlt
dec
mov
mov
jle
or
fsubs
test
pop
les
xchg
push
add
ficompl
cmp
out
leave
inc
xor
mov
cmp
lock
jl
cmpb
jl
dec
xchg
mov
xor
cmpb
idiv
push
and
inc
or
push
xchg
adc
or
addb
push
adc
inc
je
es
push
mov
add
push
ds
and
inc
inc
adc
fnstenv
cmp
jne
aam
rclb
or
cmp
sub
lret
rcl
dec
jmp
in
adc
jns
sbb
jbe
dec
add
mov
stc
and
enter
mov
or
test
jne
das
xlat
outsl
add
add
lret
push
add
cmpsb
mov
mov
pop
fadd
orb
ret
dec
jge
pusha
and
jge
inc
ret
loop
aam
je
xor
jp
lods
mov
inc
and
pop
pop
imul
sub
les
dec
setbe
push
or
and
movsb
inc
add
jg
stos
ss
sub
inc
jnp
jmp
neg
sbb
sub
mov
sbb
fmul
sbb
nop
popa
xchg
adc
sbb
addr16
fcoms
inc
and
fldenv
fcomi
sbb
xor
dec
sbb
sbb
pop
imul
dec
ret
push
int
jns
fwait
dec
jne
pop
inc
jp
rcrb
xchg
loope
fldt
cmpsb
jae
or
jae
lods
rcl
ljmp
dec
and
shr
mov
dec
mov
jmp
lcall
xor
jge
mov
bnd
mov
add
hlt
add
or
loope
shrb
sub
jno
xlat
or
sbb
and
lds
push
ret
bsr
gs
int
add
into
jbe
jns
or
adc
aas
and
adc
fldcw
cs
jae
push
test
aam
push
or
xchg
ret
rolb
adc
test
adc
pshufw
repz
adc
inc
cwtl
sub
push
or
shl
shll
push
adc
dec
call
aaa
or
push
sahf
and
and
cltd
mov
pushl
dec
jp
nop
cmp
ss
nop
test
cmp
xchg
and
push
adc
adc
sub
jne
and
testb
pop
incl
leave
je
insl
mov
mov
jg
loopne
mov
dec
es
mov
je
ljmp
shlb
mov
push
cmp
ja
add
cmp
mov
cmp
jne
ds
in
shll
leave
adc
mov
push
dec
sbb
cmp
add
push
rcr
mov
and
inc
pop
cmpsb
ret
outsl
push
xor
adc
sub
mov
mov
or
notb
sbbb
dec
cld
add
not
je
sbb
push
push
xor
subl
sub
inc
test
mov
movsb
jno
mov
fwait
inc
shlw
sub
xchg
push
leave
not
outsb
pop
and
pop
add
int3
xor
sub
loopne
push
pop
fcomps
mov
dec
aas
pop
pop
pusha
adc
insl
adc
in
outsb
sub
shlb
mov
int
pop
cmp
push
mov
dec
pop
inc
movb
inc
and
xchg
or
mov
aam
or
adc
sub
or
mov
sti
imul
or
or
shl
push
push
lret
adc
pop
push
jg
jns
pop
inc
mov
push
rcl
rcrl
aad
xlat
fcomp
test
fstpt
nop
or
aas
nop
ja
cmp
jg
movb
jmp
or
xchg
sbb
push
xor
ret
sub
les
mov
mov
adc
push
adc
mov
out
aad
jecxz
or
pop
sub
or
fdivrp
xor
adcb
in
push
xor
jmp
icebp
adc
loope
or
push
xor
add
out
push
push
fisttpl
or
mov
dec
cmp
add
loopne
push
insb
pop
add
mov
imul
aas
push
lods
or
sbb
dec
lea
add
mov
inc
dec
movswl
mov
jo
adc
neg
imul
loope
dec
pop
addr16
out
loop
stc
out
sub
mov
jo
add
sub
mov
cmpsl
or
rol
sti
add
es
daa
add
push
jp
mov
aad
jb
test
mov
decl
cmpsb
and
push
or
cwtl
add
xchg
lcall
inc
xchg
inc
icebp
leave
add
mov
lea
pop
sbb
in
lods
fcmovnbe
jae
sarb
ja
sub
mov
add
and
ret
push
dec
loopne
repz
pop
arpl
pop
loope
fwait
jmp
dec
lods
loopne
inc
or
cmp
mov
inc
imul
mov
jne
dec
shlb
test
rolb
push
mov
xchg
sub
pushf
inc
sti
insb
xchg
dec
xchg
mov
or
or
sarb
insb
enter
and
cmp
push
mov
sub
mov
lcall
xchg
cwtl
mov
jge
jl
shll
and
shlb
jo
add
jle
adc
add
jne
mov
shr
rolb
shlb
or
hlt
or
and
in
fsubl
icebp
rorb
dec
push
push
lret
out
sub
mov
clc
dec
pop
mov
lods
ss
shrl
mov
hlt
sub
shl
or
mov
dec
push
dec
cmp
push
jbe
inc
lods
lock
lcall
jns
sub
testb
xlat
fadd
or
fstpt
test
loopne
mov
push
jnp
outsb
sub
sbb
adc
and
popa
aaa
xchg
mov
dec
dec
lret
mov
push
pmaxub
mov
xor
mov
rolb
lcall
mov
rcrl
mov
in
sbb
push
data16
mov
or
repnz
push
push
sub
loop
out
jae
jmp
mulb
inc
out
mov
rcrb
in
mov
ret
xor
call
xor
push
or
and
fdivrs
aam
mov
jo
inc
inc
test
dec
ss
ret
push
cld
rcrl
lcall
pusha
add
or
or
pop
and
mov
add
xor
xchg
fnstcw
dec
icebp
insl
les
jl
aaa
dec
lods
lods
rolb
cltd
add
in
idiv
sbb
mov
sbb
in
mov
imul
negb
gs
xchg
addr16
mov
cmpb
or
jge
or
xor
jno
in
movsb
adc
add
jne
pop
push
jns
in
fnsetpm(287
loopne
dec
pop
pop
inc
inc
ret
xor
into
mov
adc
push
stos
es
sub
insb
sbb
movb
pop
data16
mov
push
add
push
nop
cmp
push
in
xor
scas
cmp
mov
mov
sub
inc
pusha
fldcw
mov
mov
pop
shr
add
test
fisttpl
inc
push
rol
adc
adc
fcomps
mov
or
xor
fiadds
inc
imul
mov
imul
rol
mov
loopnew
fdivs
lea
push
and
arpl
mov
push
adc
sti
dec
sub
dec
out
test
or
xchg
mov
lret
ljmp
or
add
out
into
or
cmp
xchg
lret
jge
sub
dec
pushf
xabort
insl
movsl
insb
js
add
enter
gs
mov
push
shlb
add
out
orb
dec
adc
mov
cmp
shll
into
or
mov
dec
js
addb
cmpsl
data16
dec
nop
mov
mov
dec
cmp
jge
sub
cmpb
or
add
dec
cmp
cmp
jb
add
xchg
and
out
dec
add
add
fadds
sarb
add
ret
fst
pop
and
jp
jne
dec
mov
jb
fs
or
pushfw
adc
xchg
inc
ret
and
add
push
add
test
mov
mov
pop
enter
dec
push
imul
fidivrs
ret
or
jp
notl
xchg
and
ret
push
je
aam
ljmp
or
mov
mov
out
sbb
add
or
pop
pop
scas
add
movsl
xchg
adc
lods
add
xor
mov
ret
xchg
xchg
mov
add
jnp
fisubrl
add
test
inc
pop
mov
mov
sub
sarl
xor
into
pusha
inc
cld
xlat
add
mov
rcrl
in
cltd
cmp
cmpps
jne
or
stos
movsb
out
ret
or
pop
ret
sub
push
ficompl
incb
adc
lret
or
xchg
cmpsb
rclb
add
add
push
or
dec
orl
je
inc
sbb
imul
mov
xlat
dec
pop
outsl
testl
sbb
adc
xor
xor
inc
prefetcht2
das
sbb
push
pusha
inc
push
mov
data16
jb
xor
push
push
and
rorl
and
cld
cld
add
push
and
je
ja
jo
enter
inc
stos
and
mov
addr16
into
xchg
and
int3
jge
adc
in
stmxcsr
adcl
pop
test
pop
ss
or
add
or
int3
dec
xor
adc
xchg
add
jbe
jle
pusha
mov
lret
je
and
sbb
inc
jg
inc
in
in
into
into
mov
stos
and
pop
sub
idivl
ja
pop
nop
pop
cwtl
pop
dec
pop
dec
andl
mov
not
and
or
pop
std
daa
cmp
mov
cmp
lock
sbb
fmull
lahf
pop
test
xor
adc
add
add
bound
and
flds
test
sbb
je
and
push
test
and
lcall
sbb
lret
in
jmp
or
xor
xchg
jo
xor
push
scas
adc
fidivl
xor
dec
xchg
sub
sub
sub
ret
jae
adc
fmul
cmp
pop
adc
push
mov
sbb
cmp
and
add
test
sub
jmp
es
dec
movsb
pusha
push
fisubs
pop
or
cltd
loop
loopne
jle
and
daa
or
je
or
jge
inc
add
fisubrl
jl
shl
cmpsb
pop
or
fdivr
mov
rorl
loopne
jp
xor
aas
mov
aam
xlat
sub
sub
push
adc
cwtl
orb
adc
sub
jmp
mov
fmull
sub
call
ds
je
add
call
rorb
lret
inc
inc
inc
lret
sahf
call
jle
inc
xchg
imul
xor
outsl
adc
or
cmp
loope
test
jmp
pusha
and
js
push
cmp
ss
push
loope
adc
mov
aad
inc
stc
repz
mov
mov
test
and
rclb
xchg
loopne
insl
dec
jmp
or
sbb
or
and
adc
pusha
out
clc
movsb
xor
stos
cmp
add
sbb
jle
call
xchg
xchg
ss
cld
ret
repnz
frstor
das
push
xor
mov
aam
pop
pop
and
jb
rcl
fcoms
and
pop
mov
shl
jge
mov
cmp
test
push
popa
mov
push
je
mov
adc
lahf
adc
fcoml
cmp
inc
cmp
pusha
xchg
dec
inc
sbb
push
gs
in
call
add
in
xor
sub
pusha
push
pop
push
imul
test
imul
pusha
shrb
imul
lods
push
lods
or
and
and
sub
dec
test
mov
popa
add
lcall
iret
pop
jecxz
and
add
mov
scas
scas
sbb
add
jmp
adc
gs
or
pop
inc
or
mov
push
xchg
sub
add
add
pop
jmp
aad
dec
mov
adc
roll
inc
cmp
jl
add
aad
inc
and
push
inc
test
lock
lods
movsb
cmp
test
push
or
ss
xor
cmp
sub
adcl
rolb
in
outsb
mov
cwtl
pushf
fstl
jbe
cmp
add
lret
fsubs
dec
add
daa
loop
sbb
mov
or
jnp
orb
jp
and
pusha
jns
rorb
and
dec
rorb
shll
int
push
sarl
pop
adcb
fimuls
arpl
sub
call
mov
dec
or
sub
jne
inc
jecxz
jl
mov
lea
ss
xchg
xor
enter
fadd
stc
adc
jb,pn
lods
in
inc
ret
inc
dec
mov
jge
leave
jae
fsubs
loope
outsl
shl
out
stos
loopne
jmp
dec
loop
adc
fisttps
cmp
push
and
js
pop
call
fs
mov
sbb
sbb
into
sbb
or
cmpsb
cmp
and
mov
popa
jne
sar
and
pop
push
das
jne
adc
movsl
xor
jmp
mov
sbb
in
inc
je
fldenv
and
imul
xchg
push
adc
ret
push
add
and
sub
lcall
or
push
mov
pop
insl
sub
addb
jecxz
dec
testb
push
push
or
cltd
inc
mov
xor
sbb
xchg
nop
or
cmp
aad
xchg
adcl
arpl
icebp
or
cmp
inc
daa
inc
add
imul
pop
inc
sub
test
adc
xor
sbb
dec
adc
fisttps
data16
xchg
xchg
mov
shlb
pushf
mov
or
cmpsb
pusha
gs
loopne
mov
mov
mov
lods
insb
mov
dec
rcrl
inc
subb
pop
iret
pushw
xlat
sub
mov
adc
add
mov
adc
fs
sar
pop
pop
je
out
mov
rcr
fildll
inc
pop
xchg
fildll
mov
aas
cmpl
jmp
fstps
xor
push
jnp
mov
add
xlat
mov
mov
cmp
fcomp
adc
xchg
mov
imul
adc
pop
mov
test
pop
xor
ds
cld
mov
mov
inc
or
stos
mov
xchg
sbb
rcrl
push
popa
adc
popa
push
fs
movsl
and
inc
or
clc
in
cmpsb
push
adc
mov
mov
cmp
mov
push
das
cmpl
mov
movsb
cld
adc
stc
xor
adc
sub
inc
add
push
or
add
inc
data16
in
lret
xchg
jbe
jbe
pop
mov
or
jns
adc
add
and
cli
add
les
add
xchg
mov
push
xor
es
cs
pop
pop
dec
push
sub
nop
xlat
in
imul
test
ljmp
ret
push
mov
stos
orl
sub
pop
or
adc
aam
push
sbb
adcl
pushf
enter
leave
or
mov
mov
mov
sbb
pop
jecxz
sti
dec
or
mov
xchg
imul
loope
jbe
and
js
popa
test
mulb
mov
adc
rcrb
loope
imul
in
inc
pushf
fcmovbe
es
xor
push
jae
and
add
out
icebp
lods
int
call
mov
js
dec
rcr
icebp
add
or
ja
or
push
sub
outsl
popa
aad
or
xor
movsb
shl
or
fdivrl
inc
mov
jle
inc
or
or
add
incb
lret
mov
sbb
ja
mov
ret
mov
in
mov
fistpl
pop
or
shlb
test
decb
xlat
or
jle
repnz
mov
cmp
adc
bound
cs
mov
lcall
sbb
rorl
sub
push
cmp
shlb
sub
call
push
shl
hlt
fadds
in
ret
lret
sahf
call
mov
les
ret
aaa
ss
in
inc
fsubl
sub
pop
inc
and
jl
fs
push
std
ret
mov
mov
lahf
lret
rclb
nop
pop
cwtl
hlt
rorb
lock
fisttpll
leave
das
dec
fcomip
jnp
push
sbb
or
or
test
xchg
arpl
in
inc
daa
arpl
and
jne
jb
push
cmp
add
lcall
push
push
xor
push
mov
or
add
jp
int
push
sub
out
ljmp
gs
push
and
pop
fs
mov
sbb
in
sub
cmp
mov
adc
cmp
dec
dec
inc
loopne
pop
push
jo
mov
push
xchg
mov
adc
lret
mov
sbb
fmuls
das
adc
cmp
dec
iret
nop
xchg
sub
jae
subb
mov
cmp
je
test
push
push
push
mov
jo
insl
shl
dec
mov
and
jbe
mov
add
mov
push
pushl
leave
xchg
insb
ljmp
into
int3
inc
add
and
pop
clc
out
jmp
popf
cmp
jmp
and
mov
in
lret
cwtl
ret
in
cmp
xchg
movsb
xor
cmp
out
adc
and
and
lahf
and
mov
pop
das
cmpsl
add
fs
fmuls
popa
inc
push
sub
sub
dec
arpl
sub
sbb
cmp
jno
mov
mov
mov
adc
rolb
je
fildl
loope
cmp
push
jl
rclb
cld
mov
mov
or
add
add
pusha
movsb
dec
sub
lock
sti
jg
aas
push
adc
test
testb
bound
lea
jle
or
scas
pop
sub
add
bound
mov
add
sahf
aaa
outsl
or
test
adc
jg
jmp
mov
aas
xor
jl
sbb
xchg
xchg
mov
jb
or
adc
loopne
dec
jecxz
test
or
pop
mov
pushf
or
cmp
mov
gs
les
and
outsl
sub
and
xchg
adc
addr16
xchg
add
aaa
loope
fdivs
add
clc
subl
leave
iret
test
out
mov
and
sub
sub
sbb
jmp
clc
sbb
gs
pop
cmp
jmp
or
cmpsl
ss
inc
or
sbb
mov
jle
sarb
add
sbb
shlb
fnstcw
pop
pusha
in
aam
cmp
xor
cmp
cmp
fcomps
pop
enter
mov
rcl
outsb
outsb
dec
loope
ds
inc
cmpl
inc
sbb
cmp
dec
fs
movsb
push
cmc
ljmp
in
or
mov
cmp
hlt
add
jb
cli
ljmp
test
cmp
add
orl
test
testl
mov
cld
or
or
iret
mov
mov
inc
sub
add
dec
dec
repnz
and
flds
inc
dec
or
cmp
repz
sub
cmp
test
je
addr16
scas
pop
or
xchg
les
fstpt
pop
or
stos
fadds
jp
jl
push
imul
or
je
xchg
in
or
je
mov
sbb
roll
sub
cmp
sbb
testb
inc
cmpsb
cmpl
xor
sahf
push
inc
sub
mov
cmp
push
and
jno
sbb
xchg
adc
into
push
xchg
sbb
ljmp
add
bound
push
or
bound
or
sbb
cmp
inc
xor
lahf
call
adcl
shr
inc
sub
jne
push
sub
xlat
push
aaa
push
icebp
cmpsb
or
enter
or
mov
or
cmp
or
in
inc
mov
xlat
and
mov
mov
in
cld
mov
sbb
jno
je
pop
mov
adc
and
ret
push
and
rolb
movsl
or
lcall
loope
ja
push
ljmp
clc
fistpl
jp
or
jae
push
cmp
jl
cld
push
mov
insb
dec
adc
mov
push
xchg
movsb
dec
hlt
scas
std
call
orb
testb
jne
lods
push
mov
imul
into
push
ljmp
lods
jb
movsl
sub
add
out
inc
divb
push
ds
xor
stc
in
dec
or
or
sbb
leave
rclw
mov
mov
push
std
mov
sub
push
ljmp
shlb
dec
pop
sub
cmc
lods
mov
bound
movsl
xchg
lods
jne
jb
ss
xchg
xlat
jns
jne
mov
and
in
shrl
sbb
mov
arpl
pop
mov
js
dec
pop
mov
jmp
mov
dec
push
into
pop
jle
ret
push
push
or
adc
xor
inc
jp
test
rcll
push
adc
scas
pop
push
mov
sub
pop
mov
mov
inc
push
jle
add
mov
jbe,pt
jecxz
inc
lret
clc
dec
inc
add
test
adcl
sbb
mov
jo
jl
or
and
ret
or
insb
aam
lods
call
and
pusha
jbe
add
or
xor
sbb
les
insl
popf
xor
dec
jg
adc
orl
sbb
lret
pop
hlt
lea
xor
loopne
cmp
ja
adc
lock
inc
dec
nop
test
hlt
int
mov
addb
push
dec
std
pop
mov
pop
std
jb
and
mov
add
test
and
jp
adc
notl
repnz
pop
mov
push
scas
shll
lock
ss
jl
movsb
mov
push
sbb
clc
push
mov
mov
cmc
mov
jmp
imul
rcr
pusha
push
and
nop
incl
je
cmp
adc
cmp
jb
testb
aaa
pop
adc
inc
add
int3
pop
inc
hlt
or
sub
and
daa
fidivrl
jmp
inc
movb
les
pop
je
data16
out
divb
cmp
jbe
mov
push
or
lret
jnp
inc
or
push
call
call
mov
aas
mov
adc
cmpb
or
aam
imul
scas
mov
xor
jbe
data16
mov
fstpl
pop
test
test
push
jbe
xchg
jle
sub
pop
pop
pop
xorb
add
aaa
cli
ret
inc
lea
push
mov
in
sarl
addr16
fs
or
jg
push
pop
shl
add
dec
push
imul
add
rorb
mov
int3
pop
dec
pop
nop
cwtl
fs
movl
subb
or
and
xor
sbb
sbb
mov
ret
sub
imul
dec
xor
adc
andl
push
shrb
scas
leave
sbb
sbb
js
fcmovnb
pop
dec
sub
fadds
and
push
repnz
loopne
jne
xlat
push
shlb
xchg
or
cld
or
nop
push
inc
dec
stc
fs
insb
xchg
outsl
sbb
adc
xchg
fwait
int
cmp
xchg
sbb
pop
ds
fildl
icebp
jno
sti
rorb
jae
mov
add
fs
enter
xor
jnp
and
mov
cmp
cmp
dec
fsubrs
leave
adc
push
addr16
imul
sbb
or
fwait
cmpsl
mov
adc
mov
jbe
sbb
sub
mov
xor
xchg
fsubr
rcl
xchg
aam
pop
xchg
les
test
pop
adc
xchg
in
pop
sub
aam
and
in
setl
je
add
sbb
mov
fcoms
push
mov
fsubrl
dec
lret
xor
jb
xor
in
in
add
mov
aaa
pop
push
dec
pop
fwait
sub
pop
add
push
int3
js
in
mov
stos
jne
xlat
push
jb
arpl
sbb
pop
and
or
loopne
ret
popa
add
loope
fcoms
mov
add
xor
cwtl
push
xlat
xor
gs
cltd
mov
fcom
imul
inc
xor
adc
mov
dec
or
aaa
aam
cmp
test
jg
dec
push
fsub
dec
fcom
and
jno
jl
fdivl
loopne
jne
inc
inc
int3
stos
xor
cltd
mov
sbb
in
call
shlb
rclb
cmp
int3
jae
rolb
xor
jo
or
and
adc
and
and
dec
and
xor
dec
xor
cmp
dec
xor
inc
inc
dec
fs
int
and
jne
insb
add
fldenv
sbb
shr
inc
add
mov
fsubl
rol
jb
pop
repnz
int3
shrb
and
aam
and
hlt
and
scas
push
repnz
jb
hlt
je
lock
jp
add
popa
and
jbe
pop
insl
int3
jg
xchg
dec
jg
outsb
or
sbb
add
aad
pushf
fs
faddl
loopne
imul
inc
or
inc
fdivl
sub
int3
aad
or
pop
sarb
sub
lods
or
lcall
mov
cmp
ja
aam
inc
add
push
or
cmp
ja
xor
inc
or
sub
andb
test
movsb
ja
fists
jnp
cmc
fdivs
xor
push
or
jecxz
js
out
and
mov
and
in
in
test
lock
hlt
xchg
or
outsl
call
ret
aad
int3
aad
push
adc
in
jo
insl
roll
and
test
sub
in
adc
leave
mov
nop
outsl
in
in
and
mov
call
xor
adc
push
mov
stc
push
or
xchg
jnp
in
jns
rol
call
in
in
dec
test
dec
call
daa
jns
sub
jl
push
lds
jno
orl
ret
js
dec
push
mov
adc
jl
or
mov
and
popa
seto
jo
jg
push
cmp
mov
mov
xlat
addr16
xor
mov
subl
push
call
mov
push
lahf
int3
or
sahf
dec
adc
test
xchg
cli
add
test
jle
sti
xchg
xorb
fnstcw
or
std
inc
int3
out
movsb
popf
lahf
add
rorl
mov
out
leave
xor
sarb
fadds
leave
jae
aam
adc
jne
jg
and
or
test
mov
xchg
dec
dec
outsb
inc
test
lods
mov
dec
dec
dec
dec
mov
dec
dec
dec
enter
cmp
xor
mov
sbb
cs
filds
or
sbb
push
clc
es
add
movb
inc
orl
jo
lcall
addl
lea
adcb
add
inc
jnp
mov
lock
aas
lds
or
cmpsl
or
test
or
andb
fwait
mov
cmp
imul
jns
es
xor
ret
lds
xor
adc
or
adc
mov
cmpsb
outsl
les
mov
test
add
or
mov
push
hlt
mov
push
mov
adc
sti
imul
loopne
fldcw
inc
fldl
mov
adc
pop
and
xor
in
adc
adc
and
inc
push
faddl
cwtl
lea
popl
cmp
arpl
shl
scas
pusha
jno
jo
shll
hlt
in
fisttpll
mov
dec
jge
fiaddl
sub
adc
cltd
insl
xchg
lret
insl
pusha
inc
add
cmp
adc
js
cmc
subb
add
xchg
add
bound
xchg
mov
or
push
js
xchg
add
ret
mov
addb
mov
mov
fdivl
pop
lock
aad
adc
dec
arpl
sub
loopne
mov
xlat
mov
jecxz
add
dec
out
adc
cmp
lods
cmp
jle
nop
add
and
mov
movsl
orl
les
mov
loopne
push
hlt
nop
mov
fwait
les
call
loopne
lock
lds
aas
fistps
add
add
dec
add
fisubl
cmp
pop
jmp
jo
pop
mov
lcall
int3
sbb
insb
clc
cmpsl
pushf
ret
sub
adc
daa
add
push
push
jmp
xor
and
cmp
or
xchg
or
or
or
or
movsb
and
sub
sub
enter
or
call
and
mov
push
lods
leave
or
sub
test
pop
imul
or
gs
pop
inc
inc
out
dec
jmp
lods
adc
xchg
and
sub
cmc
dec
aam
push
xchg
popa
mov
inc
mov
lea
les
sub
daa
insb
fdivrl
movsl
dec
xlat
cmp
mov
or
int3
lea
jb
mov
mov
sbb
xchg
popa
mov
jge
nop
sti
movsb
mov
inc
mov
or
or
cmc
bound
in
jae
xchg
rol
out
in
lock
aam
adc
mov
add
adc
xchg
inc
xchg
mov
es
call
pop
enter
mov
mov
fcomip
gs
push
loopne
loopne
push
fdivl
in
mov
nop
adc
jo
pusha
jno
and
outsl
inc
push
popa
insb
fcoms
call
lock
mov
xor
sti
mov
mov
adc
jb
xchg
xchg
sub
or
lock
sbb
add
xchg
lods
daa
daa
daa
mov
bswap
enter
daa
daa
daa
mov
daa
daa
daa
xchg
cwtl
mov
sub
mov
rcl
sbb
cmpsl
push
mov
data16
cmp
push
insl
call
enter
das
mov
std
in
or
pusha
sti
fadd
lock
mov
outsb
shl
popa
mov
lods
xchg
movsb
and
lcall
inc
add
sarb
pop
aad
cmp
bound
push
inc
mov
add
pushf
cwtl
call
out
fists
fbld
push
add
mov
test
es
test
inc
movsb
and
aas
fdivl
inc
pop
and
pusha
ljmp
test
pop
test
xchg
add
push
xchg
mov
lea
aas
out
xor
add
xor
mov
nop
in
add
cwtl
popf
call
fs
mov
add
fwait
in
in
or
inc
pop
add
cwtl
in
xchg
ja
mov
fldl
popa
xchg
dec
je
push
push
jmp
test
sbb
lea
aas
andnps
inc
adc
call
mov
cwtl
mov
movd
pusha
or
mov
sbb
popf
add
cltd
std
fcompl
cmpsl
push
cwtl
pop
or
ljmp
js
mov
lcall
or
xchg
loop
mov
lock
in
xchg
lods
inc
test
dec
sbb
xor
ret
xor
fadd
and
std
int3
jae
inc
jb
aaa
in
movsl
or
cmp
push
dec
cmp
sbb
sbb
in
pusha
repnz
testb
jb
dec
sti
add
in
rclb
add
mov
ret
push
mov
sub
aas
jge
popf
dec
scas
cmp
cmp
pop
pop
or
xchg
aas
popa
lods
mov
mov
shll
subl
push
aas
int
scas
or
or
or
mov
int3
ret
mov
inc
push
jecxz
dec
xor
sahf
fwait
mov
adc
inc
xchg
xor
jmp
sahf
test
lods
or
pop
cmpsb
es
pop
call
mov
imul
adc
dec
pop
ljmp
adc
jno
mov
adc
pop
in
call
sti
sar
int3
sti
test
leave
or
lods
stc
in
push
arpl
mov
pop
and
bound
scas
inc
aas
dec
dec
adc
push
mov
inc
pop
add
mov
mov
cwtl
jl
mov
sbb
pushf
loopne
aaa
test
xor
popf
nop
fsub
jmp
push
xor
sti
push
lods
stos
call
push
mov
inc
lcall
shll
jmp
test
lahf
loopne
pop
repnz
mov
andl
out
rolb
pushf
add
adc
jmp
pop
jl
pop
mov
or
test
or
in
add
inc
and
mov
pop
xor
cmp
or
dec
xchg
movsb
mov
dec
pop
jo
jl
mov
movsb
push
adcl
sub
lcall
inc
dec
fwait
fs
jnp
pop
inc
pop
xor
daa
mov
addb
repnz
pop
cmpsb
sbb
je
mov
xlat
mov
or
cwtl
movsb
jb
and
cmc
pushf
mov
lcall
inc
mov
dec
inc
cmpsb
add
je
push
sub
ror
in
lock
mov
movsb
ss
add
adc
inc
cmpsl
xor
in
push
dec
enter
nop
cmpsl
inc
and
in
pop
pushf
inc
fcmove
movsl
clc
and
lods
cmpsl
mov
adcb
ret
ret
xor
add
cmp
mov
adc
mov
and
pushl
addb
jnp
xchg
pop
cmp
xchg
call
fs
int
inc
movsl
sbbb
fildll
test
adc
xchg
pop
jno
shrd
ret
sti
loopne
inc
mov
push
mov
call
add
jo
mov
mov
iret
mov
popa
lods
xchg
fcmovnbe
lahf
int3
pop
shlb
mov
leave
fsubrs
pop
mov
or
scas
cmp
inc
fdivrs
mov
adc
xchg
inc
out
or
or
pop
cwtl
rcr
lods
jbe
lods
mov
out
push
imul
inc
mov
jo
dec
fs
pop
insl
nop
out
adc
xchg
pusha
out
out
lods
and
sbbb
loopne
mov
xlat
dec
inc
xchg
push
in
shlb
mov
ficoml
pop
rorb
mov
stos
pop
mov
aaa
mov
or
push
les
das
mov
filds
pop
andl
and
inc
mov
leave
or
scas
push
insl
xor
push
lea
andl
xor
pop
int3
scas
cmp
mov
aas
dec
or
aas
sub
jb
mov
or
dec
mov
and
jg
adcb
push
test
jg
mov
jb
sar
icebp
shlb
lods
dec
repz
mov
xchg
sub
cmovb
mov
jnp
adc
or
ret
xchg
sbb
inc
adc
sbb
enter
xchg
in
mov
pushf
bound
or
fs
dec
aam
add
dec
pop
aad
add
jne
cltd
add
add
movsl
shrb
add
mov
xchg
jo
fidivl
decl
lds
cwtl
iret
push
or
iret
adc
lcall
imul
rcrl
xlat
dec
adc
mov
fsubr
les
or
or
mov
scas
les
adc
in
pop
jb
cwtl
je
insl
lcall
sub
lcall
insb
js
faddl
aaa
xchg
push
cltd
add
xor
fcomps
add
rorb
and
rorb
movsb
adc
nop
and
cs
fisttps
fwait
dec
shrb
push
fs
mov
shll
imul
push
cmova
add
test
mov
pop
std
enter
push
mov
enter
xlat
iret
or
cwtl
adc
push
mov
jl
xchg
and
insl
mov
add
add
sub
test
sbb
lahf
inc
mov
xchg
je
jbe
lods
les
adcb
jb
jne
out
and
out
fsubr
bound
inc
mov
out
rclb
add
xor
or
test
dec
xor
mov
sub
mulb
mov
sbb
jl
mov
add
mov
push
or
bound
sbb
sub
mov
mov
add
adcl
pop
and
push
rcrl
test
and
mov
mov
shll
adc
js
mov
xchg
cmp
and
xchg
dec
dec
mov
in
xchg
pop
cwtl
cmp
and
or
cltd
in
xchg
cmp
test
test
in
and
bsf
sub
push
ret
cltd
mov
jmp
sbb
sbb
or
mov
test
pop
repz
pop
lcall
in
or
or
cltd
nop
inc
notl
out
js
fs
and
int
repnz
sbbl
ret
testl
insl
add
jge
int3
push
pusha
xor
sub
test
inc
mov
std
xchg
lret
add
sti
add
dec
push
in
testl
das
or
adc
cmpb
popa
and
pusha
pop
leave
fbld
inc
enter
stos
mov
nop
or
xchg
add
scas
sbb
mov
sub
pop
push
fs
bound
fildl
cmp
adc
mov
or
imul
and
inc
mov
push
gs
je
and
das
sbb
sbb
cmp
popa
insl
push
cmpb
pop
mov
pop
aas
cmp
movsl
jmp
or
mov
push
cmp
cwtl
loopne
lea
jmp
add
dec
sbb
insb
add
das
pop
insb
add
adcl
push
cmp
fstl
cld
cltd
mov
inc
lret
lock
vmovntps
addr16
add
sbb
pop
rorb
movsb
repnz
loopne
mov
lahf
sbb
sbb
ret
in
dec
or
xchg
stc
aad
imul
sub
mov
lods
les
popf
jecxz
or
shrb
pmaddwd
xor
test
inc
xchg
rcl
inc
add
and
and
leave
and
or
ret
xor
sbb
add
aam
mov
insb
stos
dec
sub
pop
xchg
lcall
inc
mov
arpl
inc
pusha
jae
aam
or
and
mov
cs
or
in
in
sarb
inc
dec
sub
or
inc
loopne
cmpsb
or
leave
call
push
dec
sti
call
sub
xchg
mov
cwtl
adc
mov
es
sbbb
shrl
xor
pop
mov
mov
add
add
mov
lahf
mov
lods
xchg
fwait
mov
enter
leave
mov
adc
mov
xchg
insb
imul
pop
insl
pusha
xchg
dec
xor
push
pop
dec
inc
dec
pop
sbb
cltd
add
sub
lea
in
arpl
clc
fmuls
lods
fs
call
aaa
add
rol
jne
xchg
dec
xor
in
xchg
dec
sahf
leave
mov
nop
mov
popa
mov
insl
mov
dec
adc
cltd
fs
enter
inc
mov
push
adc
pop
adc
pop
insl
push
nop
pop
rcll
subb
or
adc
push
incl
sbb
pusha
lret
pushf
lcall
push
mov
mov
push
mov
das
mov
mov
push
int3
incl
arpl
push
dec
lods
test
sub
ror
shlb
inc
lea
cltd
mov
or
pop
mov
jb
daa
and
mov
adc
ror
fsubrl
lea
loopne
dec
adc
fmull
into
add
push
sub
mov
sub
xorb
xchg
add
aam
mov
mov
dec
sbb
mov
mov
add
iret
cltd
mov
mov
fucomi
pop
inc
leave
mov
lock
test
and
push
pop
in
mov
sub
outsl
lods
test
rolb
adc
jecxz
xchg
add
shlb
rorl
mov
enter
mov
shll
cli
xchg
ret
ret
lcall
lods
cmp
negl
push
inc
add
or
mov
cmpsl
scas
and
aam
pop
sbb
enter
loopne
add
insb
inc
clc
int3
andl
lock
fiaddl
scas
adc
xor
lods
js
xor
inc
mov
sbb
mov
push
mov
pusha
dec
mov
mov
lahf
adc
sub
pop
push
or
pop
and
rcrb
mov
push
sbb
push
add
fsubrl
aad
xor
jae
and
rcl
inc
mov
or
sbbb
xor
fwait
and
dec
jl
arpl
aam
mov
mov
adc
pop
or
adc
fcoms
inc
mov
lock
cltd
dec
es
in
cmp
es
fs
dec
push
dec
add
js
sub
mov
sub
push
fs
sti
dec
mov
add
clc
cli
insb
inc
add
mov
fisubrl
and
pop
in
add
leave
xor
cli
and
push
nop
pop
pop
pop
sbb
movsl
push
fwait
mov
inc
add
jb
loope
cli
call
and
stos
test
cmp
mov
in
xchg
fsubrl
test
int3
inc
add
jmp
lods
pop
cwtl
inc
lea
in
bound
test
nop
pop
mov
mov
rcrb
add
and
mov
add
lret
iret
call
add
or
push
enter
inc
pusha
movsl
or
sar
andb
pop
movsb
cmc
push
push
insl
push
sbb
inc
pop
cltd
add
nop
orps
aas
adc
dec
jnp
xor
fcompl
xor
mov
ret
xchg
dec
movsb
pop
mov
adc
cmpb
add
mov
rorl
add
push
imul
push
aas
fsubr
push
pop
inc
adc
popa
idivl
jle
adc
add
aaa
iret
scas
std
sbb
push
loope
push
xchg
mov
iret
push
push
sahf
outsb
dec
push
inc
adc
sub
jnp
andl
pop
and
test
and
push
lds
xor
in
stos
mov
hlt
xchg
and
sti
mov
sbb
inc
fimull
push
loop
lods
ret
sub
push
jno
repz
jmp
filds
sbb
jl,pt
into
xchg
ret
push
lods
sub
jmp
idivl
pop
xlat
mov
or
add
dec
add
mov
iret
add
sbb
xor
jbe
dec
rolb
mov
jns
lds
jo
push
xchg
test
divb
inc
cs
inc
sub
fwait
inc
push
jmp
mov
sub
pop
and
inc
add
mov
ljmp
and
incl
addr16
fistpl
or
jnp
mov
add
idiv
enter
rolb
das
mov
rcll
xchg
adc
cld
clc
push
or
cmp
rclb
cmpl
out
ds
xchg
stos
popa
lock
out
lds
cmp
dec
outsb
je
fdivr
in
pushl
outsl
arpl
fs
outsl
jo
sbb
push
dec
imul
sarl
jae
cmp
jb
gs
xor
cs
insb
mov
bound
and
pop
popa
je
outsl
outsb
push
cwtl
inc
inc
add
lret
push
cmp
lock
rdpmc
add
maskmovq
testl
cmpsb
mov
or
mov
inc
outsl
jb
js
je
jb
gs
cmp
std
insl
insl
add
arpl
outsl
add
add
add
add
push
add
push
mov
cmp
mov
nop
inc
jne
jb
stos
inc
imul
lods
fisttpll
dec
xor
xor
dec
dec
cmp
cmp
sahf
lahf
ja
add
dec
and
jns
sarl
das
das
adc
push
dec
push
inc
in
into
mov
inc
gs
insl
bound
daa
dec
outsl
jbe
pop
mul
jle
arpl
push
jo
sub
addr16
pusha
out
push
mov
insb
xchg
xchg
loopne
aas
inc
jo
imul
bound
testl
into
mov
pushf
cmpsl
xchg
popl
ret
jg
addr16
push
jne
xor
mov
daa
xor
lds
clc
sbb
dec
cmp
dec
andb
jne
xchg
xor
dec
inc
ds
popa
das
jo
dec
inc
mov
or
fcomip
mov
mov
dec
add
es
xor
jg
or
sub
sub
xor
xor
ss
cmp
cmp
cmp
ds
inc
xor
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
bound
mov
push
pop
pop
pop
pop
xor
fst
pusha
popa
bound
gs
imul
jno
fwait
outsb
xor
jbe
js
jnp
jge
jg
sub
outsl
inc
dec
imul
int
add
or
lock
adc
push
inc
insb
jae
sbb
push
and
push
jne
cmp
pop
inc
inc
jge
pop
outsl
mov
jo
insl
and
jb
in
inc
addr16
push
sbb
inc
sbb
fimuls
inc
and
add
xor
sbb
xor
insb
imul
and
mov
je,pn
mov
push
push
xor
inc
and
xorb
and
xchg
ret
out
imul
scas
mov
push
insb
cmpb
inc
popa
and
daa
mov
fmul
insb
jae
sbb
xor
and
insl
add
imull
insl
inc
cs
xor
and
jne
dec
mov
dec
rolb
in
rorl
sbb
add
cmp
xchg
and
lret
das
add
popa
add
or
ljmp
jb
bound
into
push
or
and
push
or
push
or
int3
mov
mov
and
mov
mov
es
rorb
and
das
arpl
cwtl
shlb
dec
popa
insb
gs
sub
mov
fidivrs
test
out
add
inc
xchg
sub
mull
mov
int3
gs
rcl
push
cmp
push
lcall
xchg
mov
pop
enter
jns
push
divl
push
fistps
push
adcb
aaa
xor
scas
or
fs
xor
rol
push
hlt
pop
dec
add
add
test
ja
outsl
and
and
outsl
ss
mov
lods
pop
xor
imul
ret
xchg
push
mov
xor
push
gs
das
sbb
mov
mov
pop
out
add
inc
jle
lret
mov
mov
arpl
lret
jp
jo
bound
push
pop
repnz
cmp
insl
in
sarb
shr
or
or
xchg
imul
pop
or
lods
cli
jno
rcl
push
leave
push
mov
insl
imul
cmp
orl
popa
in
xor
pusha
or
and
push
mov
pop
push
cmp
addr16
jae
xor
loopne
or
fsubl
out
mov
jo
sub
popa
adcb
jb
push
sub
imul
dec
stos
mov
dec
jmp
jo
and
imul
inc
adc
lods
mov
and
dec
cmp
mov
jg
lcall
loopne
cmpsl
lock
sarb
fadd
ljmp
lret
jno
icebp
pusha
inc
mov
clc
sub
ret
movsl
add
xorl
fdivs
push
loop
imul
pushf
push
push
push
xchg
add
fwait
test
jecxz
enter
popa
js
scas
sub
je
pop
dec
pop
and
jno
add
add
inc
jne
addr16
mov
adc
add
add
adc
add
add
add
icebp
lcall
add
and
push
pop
pop
or
aaa
mov
push
push
pop
hlt
and
or
pusha
add
popf
cltd
divl
pop
sub
add
fidivrs
addb
add
xchg
imul
ret
add
orb
dec
daa
push
cmpb
push
and
sub
mov
jnp
jb
int3
push
jo
add
push
inc
inc
push
mov
inc
inc
inc
mov
int3
js
jo
mov
jge
add
add
jns
mov
addl
cmp
cmp
xchg
dec
cs
nop
xchg
rorl
xchg
xchg
xor
mov
leave
pop
push
adc
adc
and
or
mov
pushf
jo
add
and
pushf
jo
or
pop
jo
or
data16
stos
xchg
inc
es
and
sub
xchg
scas
xchg
and
adc
and
adc
add
push
inc
stos
ljmp
and
add
cmpsb
sbb
add
push
mov
inc
ja
dec
pop
stos
pusha
incl
adc
fadd
sbb
add
andb
pop
shr
ja
test
addb
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
jmp
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
hlt
jmp
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
decl
adcl
push
xor
call
je
sarl
or
lods
sbb
pop
outsl
ja
cmp
sbb
push
jae
jb
bound
jmp
stos
inc
ss
popa
jbe
movsb
sbb
xorb
fistps
daa
pop
lea
dec
mov
outsl
js
mov
mov
push
push
dec
dec
and
cltd
sbb
mov
dec
mov
mov
in
dec
imul
sbb
inc
mov
imul
mov
jb
jns
daa
or
sub
nop
xchg
notb
mov
lods
sbb
lcall
int3
cmp
outsb
pushw
xchg
or
mov
jbe
inc
add
pop
pusha
inc
mov
push
push
push
lahf
dec
add
dec
fs
and
push
dec
clc
pop
shlb
adcb
loopne
push
sbb
xor
lods
dec
lahf
jecxz
push
dec
lock
xchg
pop
pop
push
push
jae
cmp
mov
aas
cmp
call
movsl
jae
addr16
subl
jp
mov
mov
xchg
sbb
add
xchg
inc
mov
aaa
push
push
push
push
dec
aaa
dec
push
jne
repnz
cmp
mov
jnp
filds
dec
jge
pop
jno
aas
jg
mov
shl
imul
bound
fistpll
ret
push
inc
outsl
jae
inc
imul
and
push
shlb
jbe
bound
jg
sub
push
or
scas
mov
mov
pop
loope
aaa
daa
xchg
mov
popw
out
dec
jnp
cmp
cmp
add
ds
push
das
push
sub
adc
movsb
out
jle
out
out
imul
sub
sub
seta
popa
push
cmp
call
test
cmp
cmp
pop
pop
cwtl
cltd
push
scas
push
jb
sbb
push
jb
imul
jo
ss
lret
jnp
js
lods
sbb
arpl
sbb
into
push
enter
sub
cmp
mov
daa
mov
inc
add
iret
repz
push
dec
inc
xor
ja
iret
sub
hlt
dec
xchg
jmp
fs
es
repz
and
sbb
jns
sbb
push
adc
or
in
sarl
add
out
lock
in
jle
les
xor
scas
flds
sbbb
push
inc
add
sahf
idivl
fadds
aam
xchg
out
jnp
rolb
pop
cmpsb
repz
repz
mov
iret
repz
test
mov
iret
repz
pop
push
cmp
jns
cmpsl
stc
cld
out
fdivrl
out
cmp
lock
aam
repz
sarb
repz
pusha
inc
and
in
iret
repz
pop
push
lods
andb
xchg
ds
push
test
cmpsl
pop
push
sub
or
ds
jns
xor
bound
outsb
push
xor
add
movsb
xchg
push
inc
ljmp
cmpsl
pop
push
push
lret
push
insb
fs
sbb
push
out
xchg
je
or
mov
movsl
fisubs
shrd
sub
add
sub
adc
sarb
inc
incl
dec
jae
mov
insb
inc
mov
scas
cld
sbb
dec
inc
dec
xor
inc
dec
dec
dec
gs
call
and
xor
push
dec
inc
dec
add
dec
dec
inc
add
fists
adc
sub
adc
mov
into
mov
mov
scas
xor
jnp
inc
loop
mov
ds
pop
adc
idiv
sbbl
lret
sbb
jb
xchg
jge
arpl
call
adc
pop
dec
scas
jp
adc
fsubp
pop
enter
push
mov
and
cmp
dec
imul
call
adc
inc
inc
mov
mov
sub
mov
xor
fwait
ss
sbb
pop
jns
ds
xor
fistpll
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
pop
add
call
cmc
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
and
incl
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
popa
push
or
pushl
sahf
mov
pop
leave
loop
mov
outsl
es
xchg
dec
aam
lods
mov
jb
push
iret
adc
or
icebp
pop
pop
repnz
and
es
push
aas
flds
sbb
ss
imul
pop
xchg
sub
pop
mov
call
out
leave
ljmp
lahf
dec
test
push
push
and
shrb
or
outsb
jbe
and
jmp
inc
push
adc
cs
sub
mov
incl
sub
inc
xor
and
push
push
sbb
daa
pop
cmp
cmp
inc
sub
daa
dec
inc
push
push
inc
inc
push
push
push
in
fistpl
add
push
xor
xor
dec
push
inc
and
fwait
jge
jbe
or
cmp
cmp
sub
adc
dec
sbb
sub
into
push
push
sub
out
in
sub
inc
dec
aas
or
xor
cmp
adc
fucomip
and
lods
and
sub
sbb
sbb
cmp
and
xorb
cld
and
adc
pop
cmp
or
sub
dec
add
pop
sti
jnp
ds
out
sub
and
and
std
sbb
dec
and
sub
aaa
aaa
inc
xor
adc
sub
inc
adc
adc
sbb
push
inc
addb
sbb
push
push
aam
pop
jnp
ja
mov
pop
aad
cmp
or
sbb
and
sub
adc
es
test
mov
lea
inc
cmp
or
sub
pop
inc
cmp
mov
popa
lret
aas
cmp
push
push
or
sbb
inc
mov
addr16
sbb
das
sbb
rcl
outsb
mov
push
or
dec
cmp
pop
pop
mov
inc
dec
int3
sub
sub
rcll
pop
or
cmpb
push
push
push
push
and
js
dec
inc
add
imul
pop
xchg
push
push
cwtl
rcr
xchg
ljmp
es
decl
gs
es
add
cmp
sub
push
sub
add
adc
sub
push
sub
adc
notb
ja
aas
cld
pop
sub
push
push
ds
movsl
push
inc
cld
fildl
push
inc
pop
adc
dec
nop
dec
cwtl
in
push
cmp
mov
adc
xor
adc
int
mov
xor
push
xor
ds
cmp
shl
add
pop
imull
adc
push
inc
pusha
cmpb
out
jo
xor
xor
je
shlb
imull
hlt
inc
sub
push
push
scas
cmp
dec
mov
sbb
sub
popa
push
add
mov
inc
mov
or
push
call
movsw
adc
xchg
add
imul
mov
dec
bound
xor
and
push
or
scas
loopne
repz
mov
and
push
mov
mov
scas
loopne
adc
inc
nop
daa
cmp
repz
fidivrs
push
rclb
inc
cs
jo
idivl
ds
rclb
pop
sub
lods
adc
cmp
push
inc
xor
pusha
or
sbb
jp
add
xlat
sub
inc
sbb
sub
sub
dec
js
mov
jbe
mov
add
mov
xchg
or
sub
ds
push
sbb
sahf
sub
sub
fstpt
push
aaa
cmpsb
inc
push
dec
push
adc
jl
mov
push
jmp
cmp
outsb
mov
add
dec
es
mov
int3
pop
sub
adc
inc
and
cmp
push
push
push
mov
in
lods
sub
pop
pusha
or
je
sub
aas
push
cmove
adc
jb
adc
and
sub
fistl
cmp
pop
out
xor
cmp
dec
out
or
pop
leave
ja
sub
testb
cmpsb
ret
cld
xor
out
jo
rorl
push
push
jecxz
push
add
lock
mov
scas
jge
sbb
int3
and
hlt
outsb
scas
or
adc
pop
adc
xorl
pop
mov
dec
daa
adc
test
ret
jl
push
fs
ret
cmp
cmp
push
scas
int
push
cs
and
push
cmpl
push
cmp
push
daa
dec
xchg
cmp
push
pop
cs
sahf
adc
inc
pop
inc
mov
cltd
and
into
fidivrl
sub
or
xchg
add
pop
xchg
jb
rorl
stos
pop
push
xor
rcrl
das
adc
push
dec
adc
push
mov
mov
pop
scas
inc
cld
inc
sbb
adc
outsl
add
add
xchg
loope
pop
cwtl
or
mov
cmp
sbb
add
fsubs
pop
or
sbb
and
xor
ja
and
in
pop
push
pusha
insl
int3
call
imul
xchg
call
jle
loop
popa
cmp
cltd
into
scas
daa
int
cmp
xor
in
cmp
push
mov
adc
push
jge
adcl
jmp
xor
xor
movsb
jl
push
fsts
push
mov
cmp
cmp
or
pop
push
xor
xor
cmpsl
pop
cli
push
push
sub
jne
push
or
add
cmp
dec
int
cwtl
outsl
add
aas
push
jg
insb
jne
dec
jle
mov
push
sub
xorl
sub
or
cmp
pop
add
gs
or
shll
xchg
cs
int
mov
sub
subl
inc
bound
popa
and
add
mov
add
sub
lea
mov
dec
inc
stos
sub
push
adc
adcb
push
add
dec
inc
or
imul
dec
jb
test
cmp
pop
and
into
pop
icebp
push
ja
adc
add
sub
ss
sub
sbb
and
aam
pop
imul
aaa
dec
js
fmuls
adcl
movntps
and
or
pop
sti
loope
sub
adc
daa
mov
cmp
cmpl
push
call
dec
push
or
lea
inc
push
push
xor
push
xchg
js
sub
cwtl
xor
ja,pt
and
xchg
mov
das
add
cmpsb
incl
inc
cmp
cmp
dec
mov
sbb
adc
sbb
mov
enter
sbb
aas
addl
dec
call
ret
push
push
ss
dec
push
scas
xlat
mov
int
cli
test
push
sub
cmp
dec
fs
pop
push
mov
mov
stos
push
push
push
inc
into
xchg
jmp
out
and
add
sbb
loop
mov
add
bt
inc
je
cmp
scas
or
adc
pop
mov
cmpsl
into
dec
push
daa
inc
jo
sub
mov
sub
std
lahf
je
es
outsl
jb
bound
or
pusha
pop
push
push
je
add
push
push
cmp
jb
mov
and
mov
and
and
jp
push
xor
jae
arpl
loope
push
jne
shlb
mov
sbb
and
pusha
roll
rolb
sub
shl
aas
push
cwtl
mov
mov
add
add
push
adc
adc
pop
sub
pop
dec
pop
add
das
sub
ficomps
pop
dec
push
rolb
dec
pop
and
das
cmpsb
adc
stos
mov
pushf
inc
nop
sub
xchg
rcll
pop
mov
or
jo
push
mov
dec
mov
or
jle
pop
cs
push
inc
and
xor
pop
ljmp
mov
sub
insl
fwait
shlb
adc
adc
add
pop
leave
push
or
test
fwait
add
cwtl
push
push
inc
cmp
fidivrl
insb
sbbb
outsl
cmp
cmpsb
les
push
adc
jnp
fidivrs
push
jbe
les
xor
out
push
test
cmp
push
push
fisubrs
add
xchg
and
mov
xor
cltd
xor
call
mov
pop
pop
xor
or
or
rol
outsb
adc
inc
push
dec
pop
dec
push
jle
pop
mov
cmpsl
pop
and
sbb
or
jl
daa
add
fyl2x
scas
lock
and
out
ja
inc
icebp
push
push
jo
ss
inc
iret
mov
imull
add
mov
std
daa
push
push
push
hlt
mov
mov
pop
daa
and
push
add
psrad
mov
push
jo
rorb
and
cli
jle
add
and
push
cmp
gs
mov
push
push
mov
inc
inc
out
xor
sbb
pop
enter
ret
xor
pop
lock
test
xchg
mov
mov
in
inc
mov
adc
js
lcall
add
lock
test
or
mov
imul
and
pusha
cmp
and
adc
paddq
mov
inc
es
push
inc
and
lock
ret
rorb
add
xor
xor
adc
pop
ret
xor
push
cmp
sahf
ficompl
bswap
mov
not
cmp
pop
psubq
daa
xchg
sets
or
ficompl
popf
xchg
dec
sub
xchg
cltd
inc
push
sbb
sub
mov
mov
and
push
rcll
sbb
les
sbb
sbb
pop
aaa
jmp
xor
xor
inc
cmp
cmp
sub
das
push
test
and
or
lods
andb
cmp
dec
mov
inc
push
scas
pushf
cmp
xchg
xchg
cmp
xor
xor
pop
ljmp
pop
push
sub
leave
inc
push
pop
sub
cmpsb
xchg
cld
add
cmp
add
inc
data16
js
mov
cmpsb
push
jns
xchg
lock
mov
ficoml
inc
scas
xor
and
dec
xor
and
or
or
inc
push
and
rolb
add
push
inc
dec
hlt
pop
sub
sbb
push
int3
or
cmp
and
or
push
pop
push
jo
adc
and
mov
ret
xor
popa
jo
mov
mov
push
lcall
xor
pop
out
mov
xor
paddusb
fists
jns
pop
fdivrs
cmp
notb
lods
and
sub
xor
mov
insl
pop
and
push
and
and
movsb
lret
inc
aas
xorl
fists
out
and
lds
push
imul
in
fidivs
mov
mov
xor
and
cmp
imul
dec
addl
add
ljmp
nopl
in
sbb
mov
das
sbb
jp
sbb
mov
sub
inc
je
xchg
shld
and
adc
fstpl
ja
jmp
adc
jne
not
inc
imul
xchg
push
fwait
jmp
dec
int
cmp
and
jecxz
aad
push
push
cmove
sub
fs
in
aas
and
adc
pusha
pop
adc
xor
xor
imul
xchg
adc
cmp
xchg
stc
jle
adc
sub
das
push
inc
movsb
jae
rolb
dec
lods
mov
pop
test
loop
std
lahf
lock
cmp
sbb
and
into
test
push
sbb
and
dec
jg
or
scas
in
aas
sub
pop
ja
add
push
pop
xor
push
movsb
rorl
mov
ret
push
or
fnsave
pop
ds
xchg
into
adc
xchg
test
cmp
add
cs
pop
pop
dec
adc
test
inc
sbb
rolb
mov
ljmp
sbb
das
icebp
add
push
mov
push
push
cmpsb
rorb
pop
pop
xor
imul
xchg
sub
sbb
add
addr16
ja
push
pop
adc
sbb
cmp
adc
insb
push
add
lcall
icebp
aaa
jo
insl
or
sub
clc
push
add
inc
add
inc
sub
sbb
ja
fs
int
fistps
gs
add
outsl
jb
jp
push
addl
add
pop
jns
loopne
andl
push
add
lods
sbb
push
inc
and
pop
inc
jb
jno
jecxz
outsb
or
cmp
repz
xchg
mov
push
adc
sbb
and
int
jns
andl
dec
int
stc
cmp
or
xchg
ss
add
add
push
sbb
adc
jnp
push
ficoms
jns
and
sub
xor
fldcw
inc
mov
mov
mov
mov
add
sbb
sub
das
or
insb
adc
pop
add
sub
adc
push
push
dec
fwait
int
mov
add
add
inc
mov
das
incl
andl
jb
push
xor
mov
fnstcw
and
rolb
shll
ds
insb
mov
int3
into
ss
rcl
push
fsubp
jns
nop
mov
lock
dec
es
jnp
data16
adc
inc
out
add
mov
and
push
dec
call
xor
insl
push
aaa
shlb
mov
mov
decl
push
and
mov
add
adc
call
cltd
lods
pop
dec
movsl
enter
push
push
mov
inc
push
insl
ss
adc
mov
pusha
or
mov
sub
sub
pop
repnz
mov
sbb
mov
ds
pop
sbb
lods
sub
jle
jo
rol
dec
fsubs
sbb
jbe
mov
pop
dec
xchg
pop
shl
dec
push
adc
pop
enter
pop
push
and
xor
aaa
cwtl
inc
push
dec
cmp
and
and
dec
cmp
call
add
push
sbb
cs
inc
jb
movl
dec
imul
pop
in
imul
dec
pop
mov
sub
jae
fcompl
xor
cmp
iret
leave
cmp
cmp
pushf
push
ds
lock
mov
insb
inc
js
cmp
pop
add
inc
xchg
jo
cs
pop
int3
rorb
adc
inc
call
dec
pushl
cmp
xor
sub
push
cld
add
sub
fdivs
xor
inc
push
xor
sub
jge
lcall
adc
push
outsb
add
shlb
rcrl
cmp
outsl
jge
movsl
das
js
cs
insb
inc
arpl
dec
pop
dec
xor
jbe
push
jb
cmp
bound
je
bound
imul
test
ds
or
roll
ret
sbb
mov
mov
mov
push
lahf
inc
mov
ret
pop
test
mov
das
xchg
insl
adc
xlat
das
stos
pop
icebp
mov
sub
out
ds
and
mov
loopne
in
sbb
sbb
dec
es
mov
jo
xlat
xor
dec
sbb
outsl
push
lret
sub
pop
and
cmp
out
adc
cmp
rorb
cmp
loope
sbb
mov
push
ljmp
push
dec
cmp
sbb
xor
or
xchg
cmp
push
sub
push
sbb
addl
adcb
mov
decl
imul
pop
cli
sbb
or
or
jmp
dec
leave
push
xor
mov
cmpsb
pop
pushf
arpl
add
pop
jecxz
stc
data16
scas
inc
es
loope
pop
bound
xor
inc
jns
sahf
div
stc
pop
int
inc
pop
js
insl
bound
xchg
sti
mov
pop
xchg
push
jle
and
in
push
push
push
pop
cmp
inc
sbb
stos
jbe
ja
sub
nop
mov
scas
fnstcw
xchg
push
push
es
les
scas
fsubs
push
aad
scas
jge
fildll
test
adc
out
testb
test
push
cld
mov
aaa
das
push
scas
dec
push
mov
cmp
cmp
cmpsl
fstpl
dec
dec
inc
push
aad
lahf
pop
push
mov
imul
cmpsb
test
into
std
mov
push
rclb
jo
cmp
out
mov
push
out
test
ret
sahf
cmpsl
stc
mov
mov
ds
cmpsl
pop
pop
outsl
inc
pop
pop
pop
out
sbb
sahf
push
adc
daa
dec
dec
mov
pop
in
pop
divb
jnp
dec
push
pop
lcall
cs
outsl
push
cmpsb
sbb
pop
rcrb
sarl
push
lock
add
inc
pop
lock
imul
sbb
sti
pop
rorb
xor
leave
xchg
adc
js
aaa
clc
pop
mull
xlat
and
jl
repz
out
mov
dec
mov
jge
repz
or
push
push
test
dec
sbb
or
jecxz
push
lret
in
iret
enter
push
add
push
inc
aad
idivl
xor
adc
push
push
xchg
iret
in
in
dec
repz
cmp
mov
fwait
jecxz
pop
clts
cld
dec
adc
dec
sti
cmp
mov
testl
adc
push
jg
sahf
out
cmp
lock
xor
sahf
out
js
enter
jns
cmpsl
fsts
cmp
jo
out
sahf
out
push
inc
pop
js
out
push
push
jle
lock
and
jg
dec
sbb
scas
sub
idivl
les
test
and
and
rcrb
in
test
ljmp
adc
push
mov
xor
adc
mov
mov
mov
jmp
mov
loopne
mov
mov
pop
int3
push
and
pop
sbb
pop
repnz
ds
adc
or
adc
iret
pusha
or
inc
push
in
add
add
pop
test
dec
loop
fldt
outsb
sub
pop
cmpsb
mov
sbb
push
or
and
fistpl
aam
fnstsw
lods
jo
sti
or
aaa
push
imul
fisubrl
aas
jae
test
xlat
push
add
adc
sbb
dec
cmp
cmpsl
sub
je
push
ljmp
cmpsb
dec
add
sbb
xorps
pop
scas
ja
pop
push
dec
pop
je
loope
pop
sti
jns
push
fisttps
mov
fs
push
rclb
subl
inc
lds
push
pop
retw
jmp
ret
inc
dec
or
dec
mov
filds
dec
pop
sub
cmp
repnz
das
fstps
pop
cmp
add
pop
cmp
sar
push
ds
ret
mov
es
mov
cmp
push
scas
repnz
jae
es
outsl
and
aas
out
insb
mov
cmpb
sub
and
mov
mov
mov
mov
xor
xor
xor
xor
cmp
cmp
test
xor
cmp
ss
or
push
xchg
fisttpll
or
xor
loop
scas
jge
adc
or
push
dec
push
xor
bound
iret
xor
jae
mov
or
push
jle
xlat
adc
inc
mov
test
cmp
ficomps
inc
or
xor
sbb
inc
sbb
das
mov
mov
outsl
daa
cli
push
or
bound
cmp
ds
imul
or
test
aad
ss
lret
add
adc
mov
ss
sub
jg
push
push
inc
stos
dec
or
sbb
inc
or
idivl
or
xor
ret
into
cs
imul
jbe
pushf
cmpsb
daa
ds
jae
xor
mov
inc
mov
adc
test
adc
xor
or
dec
jbe
xor
inc
sbb
xor
outsl
loopne
push
cs
js
mov
fidivl
pop
das
and
pop
pop
pop
mov
arpl
pop
push
and
cmpl
add
pop
negb
stc
xor
xor
sub
sub
jae
push
push
stos
aaa
add
ds
pop
sub
cmp
push
adc
daa
add
bound
idivb
push
pop
inc
xchg
aaa
lahf
lea
mov
xchg
ljmp
daa
and
mov
add
cs
adc
lods
inc
sub
testb
das
add
adc
aaa
iret
or
loop
fistpl
iret
stos
test
stos
aad
ret
adc
imul
sub
xchg
and
cmp
mov
nop
pop
adc
mov
cmp
pop
adc
int3
inc
cmp
fnstcw
adc
adc
add
scas
pop
lock
lock
daa
lahf
pop
shrl
push
xchg
outsb
popl
pusha
in
lods
dec
sbb
int
mov
push
andb
or
xor
push
sbb
jge
ja
mov
jo
sub
push
fildl
xchg
pop
and
xchg
cmp
in
mov
dec
mov
cmp
lea
ds
pusha
or
stos
inc
sub
arpl
les
and
xor
push
jb
sbb
js
xchg
xor
jl
jl
icebp
mov
dec
dec
mov
imul
bound
in
push
xchg
ja
sub
sub
and
add
int
xchg
dec
dec
js
xchg
insb
sbb
ja
mov
pop
push
sbb
mov
scas
and
outsb
add
mov
adc
cmpsl
stc
or
fsubrs
mov
or
pop
push
ret
xchg
mov
mov
push
das
das
or
or
xchg
daa
xor
or
add
jl
adc
aam
or
mov
aas
das
and
mov
cltd
jo
pop
or
dec
adc
push
or
push
popa
das
mov
or
or
dec
data16
adc
sahf
neg
or
loope
and
pop
mov
pop
mov
lds
bound
mov
test
push
inc
push
or
daa
dec
cmpl
repz
push
lods
rorb
add
pop
aas
leave
push
add
xchg
or
xor
xorl
and
adc
and
pop
and
es
movsb
iret
push
pop
sub
es
and
and
xchg
and
jo
into
clc
push
pop
enter
dec
sub
aaa
out
push
add
loopne
in
dec
jo
jecxz
cmp
aas
xorb
gs
mov
adc
mov
or
sahf
out
pop
push
adc
xchg
pop
or
ss
and
cmp
std
imul
inc
shlb
mov
and
push
cmp
ret
fidivrl
push
je
test
mov
insb
pop
rolb
and
cmp
ss
cmp
jnp
mov
int3
xor
cmp
mov
adc
or
xor
ss
mov
push
ljmp
push
or
inc
xor
dec
lds
shrl
dec
xlat
ret
shr
adc
adc
or
adc
or
data16
iret
mov
push
ss
lret
rolb
push
sbb
inc
inc
lret
add
ss
push
andl
js
in
movsl
add
es
das
push
inc
dec
fs
jmp
dec
pop
pop
add
adc
pop
jg
pop
rcrl
std
addr16
sub
dec
mov
inc
adc
inc
enter
dec
fucomi
pop
xor
pop
out
sub
test
pusha
pop
sub
sbb
leave
mov
sbb
xor
and
push
shll
in
push
xlat
dec
mov
push
push
loopne
jo
sbb
es
arpl
pop
pop
cs
xor
sub
xor
pop
inc
xor
sub
rolb
dec
lcall
push
jg
lods
das
xchg
jb
jo
and
aam
fdivrl
je
imul
loopne
mov
or
push
adc
fsub
sbb
or
and
cmp
aaa
dec
add
cmp
add
pop
sub
push
pop
add
cs
aas
add
das
clc
aaa
cld
adc
or
sbb
push
and
les
aaa
push
es
ljmp
push
and
xor
inc
sbb
push
inc
cs
cmp
aaa
and
inc
add
stos
decl
inc
pop
or
dec
add
pop
adc
in
push
pop
push
and
add
in
xchg
aaa
pop
inc
dec
and
push
push
and
or
add
inc
aaa
ja
cmp
or
cmp
add
pop
and
fs
inc
push
pushl
inc
es
inc
dec
add
xor
sbb
inc
push
add
dec
push
sub
cs
pop
add
inc
sub
mov
sub
push
and
and
inc
jns
loope
lock
cmp
xchg
xchg
jecxz
out
xor
rclb
cmpb
sbb
es
and
push
dec
lods
sbb
loop
arpl
cmp
jmp
inc
fiadds
or
pop
in
lock
inc
jo
adc
out
cmp
or
ffreep
dec
js
push
mov
lods
sbb
loop,pn
inc
or
cmpsb
nop
clc
push
outsl
inc
addb
mov
mov
icebp
mov
pop
xchg
inc
add
dec
insb
aam
lret
add
sbb
inc
pop
pusha
ds
int3
push
xlat
push
inc
jb,pt
popaw
cld
jmp
jns
daa
daa
adc
pop
std
dec
rolb
push
inc
push
ss
push
dec
fst
mov
outsl
pop
je
add
dec
ds
mov
xchg
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
jg
insb
std
sbb
cwtl
stos
pop
fdivs
and
jge
decl
mov
andb
fwait
rol
fwait
in
inc
mov
ud0
cmp
and
sub
sub
fsubrl
stc
jbe
call
cwtl
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
ja
decl
mov
cmp
sbb
cld
insl
sub
adc
or
or
leave
ret
incl
call
sbb
mov
call
cltd
test
pushl
push
push
shll
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
mov
push
arpl
test
add
mov
mov
jmp
js
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
lea
test
fwait
stos
flds
pop
lea
push
inc
rcll
cs
das
dec
dec
pop
ss
dec
sub
movsb
lcall
sub
push
cs
push
jo
xor
add
pop
sub
arpl
xor
outsb
dec
inc
jae
inc
push
pop
insb
xor
and
sub
push
ja
outsl
js
jne
sub
cli
mov
adc
daa
bound
jno
fs
dec
rcrb
mov
and
dec
cmp
test
mov
push
mov
xor
jg
call
pop
pop
pop
add
cmp
adc
dec
loope
mov
call
add
int3
ficoml
adcb
call
mulb
aaa
pop
pop
daa
pop
daa
lock
push
pop
cmp
and
daa
inc
cmp
sbb
sub
add
cld
cs
aaa
push
xor
cmpsl
jle
xor
xor
xlat
popf
in
pop
xor
xor
sbb
out
xor
and
aaa
inc
push
inc
cs
scas
fstps
ss
cmovb
pop
ss
or
cmc
lahf
ss
je
out
push
mov
mov
mov
or
and
aaa
jo
and
push
xor
sbb
test
mov
ss
jle
scas
bound
dec
ds
push
jle
std
ret
mov
pop
push
mov
int3
jns
mov
fs
pop
cmp
daa
rolb
cmpsb
loopne
mov
adc
js
mov
pop
pop
cmp
cmp
xor
sub
adc
push
push
loopne
int
roll
adc
and
xor
arpl
jb
addr16
push
outsl
mov
fisubrl
and
sub
cmpl
sbb
xchg
xor
mov
pop
jecxz
dec
fdivrs
loop
sub
push
mov
pushf
adc
shl
inc
sbb
mov
and
adc
sbb
pop
cmp
popa
mov
xor
pop
pop
lret
xor
out
jge
push
jmp
sbbb
or
and
jns
adc
addb
imul
sbbb
shlb
rcll
jbe
faddl
mov
pop
mov
mov
push
jle
inc
fldl
pop
fs
mov
adc
inc
push
aad
xor
icebp
adc
pop
out
cmp
outsl
add
and
dec
fs
pop
pushf
enter
add
mov
xchg
das
push
mov
or
sub
mov
adc
test
sbb
and
in
in
sub
outsb
je
xor
js
adc
int
xor
imul
cmp
cmp
ljmp
mov
dec
xor
out
add
aad
mov
test
idiv
xor
insl
loop
or
push
xor
mov
out
dec
ljmp
mov
push
cmpl
fs
sub
add
jge
adc
cmp
or
push
rcrb
push
and
das
or
mov
sbb
inc
scas
push
and
or
xadd
les
xor
test
adc
daa
int
pop
test
inc
or
xchg
icebp
adc
pop
fs
dec
cmp
push
ffreep
fiadds
fbld
and
push
dec
cmp
pusha
push
and
mov
xchg
push
scas
mov
addr16
push
fidivs
mov
add
fs
lret
pop
mov
cmc
add
mov
pop
dec
cmp
adc
mov
nop
daa
pop
add
loope
push
or
popl
pop
push
into
ja
jb
pop
jmp
jg
or
mov
mov
cs
xor
inc
cmp
xor
ja
mov
es
or
lods
test
test
mov
test
or
adc
adc
pop
adc
inc
xchg
mov
call
pop
push
hlt
aaa
loope
pop
fsubs
cli
jb
adc
mov
jo
out
or
and
stos
push
outsl
imul
ds
mov
mov
imul
dec
sub
jecxz
xchg
inc
inc
aas
in
inc
pop
sar
dec
and
pusha
das
scas
ds
arpl
aad
and
cmc
sub
cmp
inc
push
inc
push
xor
xchg
ret
dec
sbb
pusha
xchg
sub
push
push
mov
cmp
dec
mov
pop
pop
imul
aaa
outsl
enter
push
xlat
mov
fisubrl
push
xor
cmp
jno
movsb
sbb
es
mov
sbb
ljmp
dec
xor
iret
scas
pop
inc
sub
mov
and
js
into
lds
cmp
imulb
or
aas
xchg
sub
scas
push
xchg
mov
imul
gs
cmp
rolb
mov
pop
jnp
aas
or
orl
sbb
loopne
pop
sub
push
xor
dec
pop
pop
and
pop
dec
pop
movsl
xor
mov
dec
pop
repz
push
shrl
daa
fwait
adc
push
cmpsl
rcll
push
xlat
cmp
pop
pop
nop
or
sbb
pop
inc
adc
xchg
std
dec
push
rorb
adcl
and
mov
or
and
xlat
mov
mov
and
inc
add
or
popa
cwtl
mov
add
cmp
push
sbb
jne
outsl
jbe
test
push
aaa
jno
jne
or
or
outsl
xchg
push
shrb
fs
inc
notl
dec
jae
push
popa
insl
insl
outsl
dec
outsl
xchg
mov
sbb
popf
add
inc
cmpsb
punpckhwd
fsubr
sub
je
scas
mov
ret
ss
inc
push
push
inc
dec
push
inc
pop
cmp
cmpsb
push
dec
inc
dec
inc
push
pop
sbb
jb
gs
inc
das
add
fwait
pop
daa
jne
addl
mov
rcll
mov
popa
daa
nop
and
icebp
jb
fsubs
mov
push
add
lock
arpl
jle
jmp
pop
and
or
and
mov
add
push
aaa
add
mov
inc
cs
jb
fnstcw
daa
xchg
adc
push
les
pushf
jbe
test
add
dec
loop
fcompl
test
nopl
push
data16
push
aas
inc
adc
fidivs
cmp
adc
out
fisubs
add
lcall
fnsave
ja
sbbb
dec
clc
dec
insb
and
pop
outsb
mov
mov
clc
sbb
dec
or
or
push
adc
rcrb
pop
cmp
jns
dec
imul
pop
and
cmp
mov
cmc
cmp
add
aas
adc
daa
push
dec
mov
push
adc
sbb
push
push
or
adc
test
ds
and
adc
or
daa
and
out
jne
inc
push
lods
pop
rol
jno
inc
aam
jo
popf
or
push
inc
or
push
imul
and
das
pop
push
mov
inc
stos
arpl
mov
xor
cmp
adc
test
and
and
xor
adc
aad
mov
movb
shlb
outsl
jge
dec
add
mov
or
add
outsl
pop
mov
je
sub
mov
arpl
and
or
xor
cs
dec
and
or
adc
sbb
xor
sub
mov
sub
mov
outsw
insl
pop
xor
dec
and
imul
add
xor
push
mov
dec
dec
dec
inc
mov
popa
outsb
jae
outsb
stc
mov
arpl
gs
insb
mov
subb
in
push
out
or
inc
scas
push
hlt
pop
push
nop
jmp
dec
ret
inc
mul
push
out
mov
push
insb
pushf
ljmp
sub
xchg
dec
inc
btr
sbb
inc
mov
adc
mov
mov
mov
cmp
mov
mov
fisttpl
pop
pop
inc
inc
dec
mov
add
arpl
mov
add
pop
dec
add
and
jecxz
inc
shlb
outsb
add
lods
inc
inc
pop
cmp
jbe
les
ds
lcall
addr16
and
scas
pop
or
daa
add
adc
sub
stos
or
outsl
inc
fiaddl
iret
dec
inc
aaa
pop
lahf
cld
add
daa
nop
sbb
jns
mov
mov
xor
pusha
sbb
lods
inc
daa
dec
inc
leave
xchg
pop
leave
inc
cmp
leave
xchg
pop
xor
xchg
pop
leave
xchg
and
xor
sub
add
mov
inc
push
js
push
inc
cld
dec
jl
dec
mov
push
fmuls
adc
dec
jl
iret
rcll
loopne
call
ror
mov
push
js
cmp
jns
or
dec
dec
ds
push
mov
and
mov
movb
jns
out
pusha
test
dec
xor
imul
sbb
enter
push
es
jecxz
inc
xchg
in
out
in
ucomiss
rcrb
add
jns
inc
insb
mov
add
dec
fadds
in
sub
jg
ss
mov
out
or
inc
xchg
enter
mov
pop
inc
mov
xlat
mov
insl
sub
xorb
or
mov
add
lods
xchg
dec
mov
leave
mov
inc
mov
sbb
and
add
or
leave
mov
add
inc
pop
enter
inc
inc
dec
cltd
fs
push
dec
pop
dec
in
dec
repnz
cmp
pop
enter
outsl
cmp
dec
ss
sub
add
dec
dec
fmull
shll
add
push
adcb
adc
xor
ret
leave
xchg
fs
push
xor
aaa
xchg
pop
add
jns
cmp
mov
inc
shl
outsl
or
insb
out
xor
or
dec
dec
dec
sbb
fildll
nop
fldcw
xchg
and
sbb
xor
jbe
rolb
scas
push
repnz
sbb
test
push
test
add
insb
aaa
push
lahf
mov
add
pop
jg
sbb
stos
or
jg
sbb
add
scas
sub
out
das
leave
idivb
sbb
sub
and
ja
mov
outsl
and
mov
sbb
popa
and
and
xchg
test
add
rorl
outsl
sbb
nop
cmpsl
ret
das
sbb
add
or
nop
loopne
cmpsl
and
in
inc
xlat
push
aaa
push
lock
push
scas
xchg
sbb
xchg
testl
push
lods
daa
add
xchg
outsb
es
sub
inc
mov
mov
pop
call
push
push
push
test
jge
jl
in
jg
push
jo
push
mov
xor
inc
push
xchg
xchg
sarl
push
push
pop
sbb
out
dec
sub
add
jno
mov
pop
push
ja
jnp
ss
ja
sbb
add
push
outsl
sbb
stos
fstl
outsl
jg
mov
lods
pop
pusha
xchg
daa
in
clc
sahf
testl
movsb
push
cmpsl
mov
shll
sarl
push
dec
xor
xchg
or
pop
xchg
sarb
add
test
push
inc
nop
pusha
daa
sub
lahf
xlat
or
or
and
mov
scas
add
xlat
or
addr16
or
rclb
cmp
push
lahf
insb
and
push
pushf
and
in
push
pop
cld
push
mov
testl
and
add
push
aam
testl
scas
mov
cmp
les
mov
push
cmp
lods
aaa
lock
ja
lods
or
aaa
or
cmp
outsl
add
scas
shlb
jo
push
dec
xor
xchg
sub
add
pusha
jg
add
rcl
dec
mov
mov
mov
leave
add
aas
jg
addr16
inc
pop
adc
add
xchg
or
je
add
sub
das
and
and
push
jb
jge
mov
das
outsl
add
ss
xor
inc
aaa
push
insb
cmp
dec
pop
push
aaa
in
ret
push
pop
push
aaa
add
nop
xchg
sub
and
push
in
mov
mov
andl
xor
add
pusha
daa
and
insb
push
pop
leave
xchg
int3
daa
or
ja
adcl
cmp
push
movsb
adc
clc
pop
fcomi
cmp
fmull
in
movsl
cmp
or
mov
or
push
cmpsl
push
pushf
xchg
sub
or
or
xor
inc
pop
dec
xchg
add
or
jae
pop
movsb
mov
jne
add
outsl
dec
cmpsb
or
sbb
js
xor
inc
ret
push
xchg
sbb
pop
scas
add
jl
or
insb
out
adc
lahf
inc
xchg
add
and
insb
push
out
pop
leave
in
les
or
fwait
push
enter
je
movq
loopne
test
das
sub
add
xchg
pop
and
addr16
add
insb
insl
xlat
mov
ja
loope
scas
add
pop
iret
sbb
mov
mov
mov
jecxz
dec
pop
das
pop
ja
jbe
jo
inc
test
aaa
adc
jl
xchg
or
xchg
mov
add
push
bound
lods
push
das
sub
fsubs
pop
xor
cmp
aas
mov
addr16
sbb
push
pop
out
lahf
mov
nop
ja
dec
push
lods
pop
push
add
cmp
outsl
inc
dec
push
xchg
aam
rclb
add
ss
inc
test
inc
push
pop
or
jl
cmpsb
loope
push
aas
bound
iret
repz
mov
hlt
orps
out
cmp
add
jns
cmpsl
push
push
jb
or
cmp
out
push
cmpsb
icebp
inc
pop
push
iret
repz
repz
xchg
ret
stc
cmp
pop
pop
xor
ds
jns
out
pop
push
lods
pop
cmp
repz
pushf
jns
out
xlat
pop
pop
aaa
bound
fimull
pusha
dec
gs
ds
stos
fstpt
popa
jns
iret
sarl
fildll
bound
mov
out
xor
mov
out
fs
xchg
loop
gs
int
out
adc
lock
sarl
cmpsl
imul
stc
cmp
lods
int3
out
and
mov
cmp
and
addr16
out
ds
jno
pop
insl
cltd
sti
out
cmp
sub
enter
iret
sarl
roll
inc
loop
iret
repz
jno
jb
pop
jnp
lahf
cmpsl
stc
cmp
ja
stos
jecxz
je
out
xor
movsb
xor
mov
loope
jbe
test
xor
out
icebp
inc
ja
add
pushl
cmpsl
stc
cmp
ljmp
repz
jnp
sti
inc
jl
lcall
insl
mov
ds
scas
fs
sbb
push
ror
cmpsl
stc
cmp
sbb
lahf
out
cmp
cmpl
repz
pusha
mov
into
test
jl
out
fiadds
cmp
sarl
rclb
roll
dec
repz
mov
mov
jns
pop
mov
repz
jne
cmp
addr16
cmp
insb
lea
mov
js
ds
repz
jae
ficoml
iret
rorl
adc
out
or
xchg
jl
out
pushf
mov
idivb
iret
loopne
xchg
arpl
out
int
cltd
sbb
sub
insb
ds
add
out
out
mov
dec
mov
cltd
movsl
test
cwtl
cmpsb
lahf
cmpsl
stc
xor
cmpsl
add
repz
enter
cmp
out
test
std
xor
cmpsl
stc
inc
stos
or
lods
sub
lcall
pop
in
mov
mov
mov
adc
fwait
iret
ret
mov
lds
jecxz
jae
push
mov
rolb
add
out
aam
rcrb
clc
inc
aas
jnp
test
mov
adc
ss
inc
jb
sti
jae
mov
add
setl
aas
test
mov
aaa
scas
jbe
scas
testl
mov
pop
enter
enter
fnsave
push
ss
push
pop
or
loopne
pop
outsl
addr16
inc
mov
cmp
aas
int3
jg
jbe
jns
push
into
pop
aas
mov
in
adc
pop
pop
fmuls
bound
leave
rcrb
push
fbstp
lds
xchg
mov
aas
jbe
loopne
std
add
xor
mov
fstpt
movl
inc
jb
ja
mov
xor
insb
pop
push
push
aas
mov
movsb
nop
pop
pop
iret
filds
movsb
or
xor
aas
in
and
aas
inc
in
in
inc
add
in
mov
repnz
push
sbb
int3
in
je
pop
sbbb
xchg
inc
adc
push
sbb
adc
mov
pushf
xchg
jnp
sbb
jo
inc
shl
into
repz
push
push
add
dec
int
fidivrl
cmpsl
cmpsl
outsl
int3
inc
pop
mov
adc
data16
cmp
inc
push
daa
and
inc
repnz
jnp
scas
push
incb
pop
leave
leave
and
xchg
mov
in
xchg
cmp
scas
push
repnz
out
xor
inc
push
jb
leave
in
hlt
mov
xchg
mov
fwait
push
or
xchg
xchg
out
fisttpll
push
add
inc
repnz
js
jb
leave
cld
add
or
adc
pusha
mov
push
in
mov
imul
mov
xchg
pushf
push
js
dec
push
les
or
mov
mov
push
push
imul
add
pop
pushf
pop
add
scas
cwtl
dec
cs
xchg
pop
hlt
in
imul
dec
and
sub
jbe
test
inc
cmc
inc
outsl
add
fs
repnz
imul
insb
das
fs
sub
mov
mov
or
int3
jp
inc
add
popl
inc
xchg
inc
insb
push
outsl
in
xor
xchg
xchg
and
lret
push
push
loope
lcall
testl
out
or
cmp
mov
xchg
or
dec
std
inc
or
inc
in
dec
es
sbb
scas
enter
mov
cmp
pop
enter
add
add
and
add
loope
jmp
push
pop
hlt
push
loopne
push
cmp
push
or
and
in
xchg
pop
xor
pop
pop
xor
cmp
cmpsl
push
pop
cmpsl
jbe
pushf
pushf
pushf
jle
mov
sahf
movsb
rcrl
loope
and
pushf
jmp
fucomi
jecxz
unpcklps
pop
and
cwtl
cmp
xor
pop
mov
outsb
adc
shrl
pop
push
add
test
mov
add
mov
xor
int
aad
and
adc
lcall
pusha
rcll
sbb
inc
das
and
jo
jo
jo
sbb
pop
push
mov
bound
add
clc
jle
dec
jne
jns
jno
pop
pop
mov
dec
pop
fnstsw
cmp
dec
std
pop
pop
fisttps
add
xchg
add
imul
in
shr
sbb
pop
mov
jb
push
jl
push
lds
scas
cltd
pop
dec
repnz
sahf
test
shlb
or
nop
or
mov
jmp
pop
ficomps
adc
dec
or
pop
xchg
adc
loope
xchg
pop
sbb
iret
add
pop
nop
insb
push
jae
push
inc
and
test
cwtl
jae
jae
pop
pop
push
jo
js
sbbl
pop
pop
pop
cltd
pop
movsb
pop
scas
pop
mov
pop
lds
or
or
out
out
icebp
or
repz
out
pop
pop
push
adc
iret
repz
sbb
adc
repz
adc
repz
repz
stc
lock
sbbl
sbb
in
sbb
rclb
das
cltd
dec
ds
je
sbb
dec
dec
and
pop
inc
mov
jbe
add
adc
inc
scas
add
outsb
or
cmpsl
daa
test
ja
je
jo
push
mov
sarl
jbe
mov
push
add
add
sbb
jmp
lds
daa
xlat
pusha
shr
ret
push
daa
jo
inc
inc
jb
add
test
inc
xor
das
pop
push
aam
pop
adc
and
pop
pop
add
test
in
daa
jge
add
xchg
xor
aaa
jo
pop
leave
and
xor
andb
pusha
enter
sub
cld
pop
js
mov
ja
scas
std
push
sbb
xchg
fs
js
das
mov
mov
push
push
out
add
das
aas
loopne
add
or
popa
repnz
sbb
and
sub
repnz
xor
or
mov
sahf
add
pop
enter
popa
add
cld
movsl
xchg
jns
jns
mov
test
inc
testl
hlt
jns
jp
inc
jo
iret
jg
jg
xlat
iret
iret
leave
leave
xor
add
adc
xchg
xchg
jp
pop
bound
fldt
punpckldq
pop
pop
lcall
add
repnz
pop
mov
jp
cmp
jnp
push
jo
out
push
daa
push
inc
jb
imul
dec
mov
push
xchg
dec
cs
mov
and
pop
arpl
jl
es
pop
arpl
pusha
arpl
ret
and
iret
and
in
push
push
lods
jl
xorb
pop
into
mov
pcmpgtb
pop
and
add
xlat
and
sub
fistpll
pop
mov
mov
cs
addr16
iret
int3
xlat
lock
in
adc
jle
rcr
and
push
daa
inc
xchg
cmp
push
dec
and
xchg
xor
pop
gs
outsb
xchg
gs
add
in
mov
hlt
jle
sbb
xchg
xchg
cmp
inc
xor
jg
xchg
adc
inc
jg
data16
xchg
sbb
push
addr16
imul
addr16
pusha
iretw
in
in
push
data16
in
mov
cbtw
data16
in
data16
mov
in
in
data16
data16
pushf
pushf
je
call
or
or
or
pushf
pushf
pushf
pushf
or
push
add
add
add
stc
hlt
cwtl
pushf
add
and
jg
cmp
or
and
and
mov
addr16
push
popa
addr16
mov
xchg
mov
inc
ret
add
cmpsl
jmp
inc
in
push
push
inc
dec
and
push
sbb
push
push
pop
push
je
pushf
cmp
jbe
je
jo
stc
icebp
or
pushf
push
push
and
push
das
mov
adcl
ret
xchg
adc
imul
test
shll
cmp
cmp
dec
ja
add
push
push
maxps
cmp
mov
out
cmp
or
setg
jg
je
jnp
cmovle
adc
les
cmp
mov
add
pop
pop
test
or
and
daa
adc
jno
out
daa
inc
dec
ret
daa
aaa
das
lret
inc
jns
fnclex
add
dec
push
push
or
push
push
xchg
jl
or
mov
sbb
push
push
push
xchg
iret
insl
xchg
add
dec
dec
dec
test
cmp
out
add
add
cmp
iret
pop
loope
push
xchg
and
js
imul
and
in
enter
imul
imul
dec
cs
addr16
mov
dec
dec
xchg
sahf
test
dec
mov
aad
cmp
repz
or
or
jne
testb
insb
das
or
or
sbb
xchg
insb
imul
cs
fwait
call
sub
outsl
stc
insb
insl
in
in
and
push
add
sbb
repz
cmp
and
sub
or
xchg
fcmovne
cmp
dec
push
insl
daa
outsb
mov
xor
dec
lock
shrb
insl
leave
repz
inc
rcr
out
add
dec
pop
and
add
xchg
adc
and
push
outsb
pop
outsb
icebp
ss
pusha
outsb
push
outsb
in
inc
into
outsl
subb
call
mov
shrb
push
inc
jb
inc
lock
xor
adc
pusha
outsl
mov
and
outsl
jo
js
add
jb
cmp
mov
jbe
ja
test
inc
repnz
addr16
mov
inc
sub
jo
orb
jo
aam
ja
stos
xchg
hlt
out
outsb
mov
je
xor
imul
xchg
cmp
fnstsw
jo
jo
in
sbb
jo
int3
jo
jo
adc
jo
std
sbb
jb
or
jno
jno
jno
and
xor
aas
jno
jno
outsl
in
push
jno
jno
push
or
jbe
dec
sahf
xchg
jno
lock
jno
pushf
pushf
mov
pushf
pushf
rcr
out
xchg
cld
mov
push
js
push
jb
jb
addr16
jae
push
push
add
mov
dec
xchg
pop
dec
sahf
fucomi
sahf
ja
js
cmp
mov
xchg
jae
aaa
mov
aas
jae
pop
dec
cs
daa
iret
repz
add
inc
repnz
jo
jae
or
dec
adc
in
jae
lea
rorl
add
fiaddl
je
les
addr16
jmp
push
mov
mov
or
sbb
leave
add
mov
aad
fdivrs
ja
mov
cmp
in
sarb
loop
add
mov
movsb
fwait
verw
bnd
fwait
sbb
jne
or
or
adc
rorl
or
or
dec
push
pop
sahf
sub
nop
mov
cmp
cmp
add
outsb
popf
mov
jae
sub
xchg
mov
mov
push
leave
rcr
fstps
jbe
adc
sbb
jb
dec
fdivrs
addr16
mov
les
xchg
pushf
pushf
outsl
jp
ja
cmp
mov
add
add
loope
and
pop
addr16
repnz
pop
adc
sbb
and
divb
repnz
ja
ja
pop
dec
dec
cs
cld
outsl
pop
addr16
jbe
fisttpll
mov
cwtl
push
iret
leave
repz
pop
test
pop
dec
dec
es
xchg
ror
in
repnz
hlt
cld
xchg
add
inc
pop
js
daa
js
js
das
das
das
aaa
js
js
js
js
das
das
das
push
js
js
js
js
das
das
das
ja
jg
xchg
leave
leave
lods
fistpl
ud2
pop
or
leave
leave
leave
leave
or
push
add
add
add
xchg
cmp
repz
lahf
sbb
repz
sbb
jmp
mov
jns
out
xlat
fbld
and
out
es
idivl
adc
sbb
jns
popf
mov
xchg
addr16
divps
mov
lahf
push
add
xchg
dec
dec
dec
jns
pop
cmp
pop
xchg
xchg
xchg
xchg
cmpsl
mov
jns
loop
leave
out
jb
shlb
enter
jp
jp
jp
out
insl
sub
xor
jns
out
decl
push
inc
pop
dec
out
popf
out
push
daa
ds
jmp
pop
prefetch
fmul
orl
js
adc
inc
rolb
mov
ret
scas
jp
fdivrs
leave
inc
pop
loopne
cmp
cmpsb
jnp
sbb
jnp
jnp
daa
inc
mov
jnp
jnp
pop
jb
cmp
jnp
or
mov
insl
fisubrl
cltd
iret
mov
pop
cmp
daa
mov
aas
test
pop
xchg
sub
jns
pop
into
aas
sub
xchg
sbb
add
scas
call
and
shlb
xchg
setnp
sub
cs
addr16
pop
jl
add
pusha
xchg
imul
lock
dec
dec
mov
jns
ja
shlb
pop
mov
sub
inc
mov
jge
jge
jge
or
lret
les
and
out
mov
rclb
or
stc
and
cwtl
ja
or
cmp
sbbl
mov
das
fmull
fmul
pop
fmull
in
jns
aaa
fucomip
hlt
push
add
repnz
or
or
jbe
cmp
and
pop
xor
in
sahf
or
cmc
in
sahf
adc
pop
jle
sub
dec
mov
jle
mov
adc
pop
add
pushf
cmp
mov
jns
jnp
mov
lcall
rcrb
insl
call
iret
jg
leave
dec
xchg
aaa
or
add
adc
insl
and
dec
lcall
pop
and
iret
pop
daa
data16
lret
test
das
cwtl
push
add
jb
leave
mov
jnp
in
sub
push
adc
pop
fwait
xor
in
push
das
add
dec
add
push
mov
aas
punpckhdq
jne
or
scas
repz
push
add
cltd
loop
fcomps
mov
fwait
mov
mov
pop
push
lahf
ret
pop
lret
push
add
movsb
fwait
cmp
lar
fildl
cltd
into
fisubrs
sti
lsl
test
cmpl
fmulp
inc
orl
repnz
jae
add
add
outsb
sysret
jg
xor
pop
xchg
or
iret
cmpsl
or
and
movl
repnz
addb
xorb
sub
cmp
rcrl
addb
ja
loopne
iret
pop
es
iret
add
movsb
daa
or
mov
fcomip
or
addr16
test
push
out
sbb
in
xchg
xlat
fbld
cmc
in
repnz
and
cld
mov
add
in
sbbl
dec
inc
out
frstor
xchg
sub
jg
jns
pusha
add
orl
xchg
sbbl
scas
pop
mov
push
ja
xchg
dec
mov
daa
inc
add
in
lahf
mov
les
sbb
sbb
test
sbb
jns
pop
push
or
jns
or
out
dec
jb
enter
test
test
mov
daa
sub
lock
rorb
test
mov
xchg
adc
test
test
lds
addr16
test
inc
push
sbb
ljmp
or
and
jne
das
test
cmp
mov
cli
cmp
xchg
push
add
mov
xchg
xchg
xchg
pop
push
jecxz
rdmsr
or
pop
fs
lock
pop
mov
ja
decb
cmp
test
mov
mov
add
enter
in
jl
loope
or
aaa
push
daa
sbb
xchg
sbb
sbb
jb
push
xchg
xchg
daa
xchg
cmp
dec
ss
out
push
mov
sbb
les
call
mov
push
aas
push
out
clc
xchg
movsb
pop
mov
fisubrs
mov
push
aas
push
in
sbb
inc
mov
xchg
mov
jae
xchg
cmp
jnp
add
sahf
sahf
outsb
jb
mov
lsl
inc
repnz
cmpsl
push
cld
cmp
jbe
repnz
lar
xlat
sub
push
movsl
xlat
mov
cmp
xchg
cmp
fnsave
das
xchg
in
add
mov
mov
inc
mov
lock
pop
and
add
mov
mov
cmpsb
into
mov
pop
movq
in
idivb
jno
push
cwtl
jecxz
pop
and
pushf
jae
mov
mov
add
in
xlat
or
outsb
daa
out
maskmovq
mov
pop
mov
push
add
mov
mov
cmp
cmp
pop
insl
pop
in
xchg
push
in
iret
nop
cwtl
cmpxchg
jb
push
lock
inc
aam
xchg
out
jbe
xchg
add
pop
in
das
sbb
roll
pushl
cs
out
jns
add
mov
test
test
cmp
mov
lea
mov
lea
pop
adc
sbb
and
cmp
es
push
push
cmp
add
mov
aas
loop
inc
dec
lea
lea
iret
add
lea
pshufw
add
inc
out
mov
movsb
fisttpl
pop
ror
invlpg
outsl
sarb
fsubs
iret
cmp
loopne
cs
lock
aaa
jo
insl
dec
adc
push
adc
adc
adc
sbb
movaps
adc
inc
stos
push
jb
mov
stos
cld
stos
jmp
stos
mov
mov
stos
out
push
add
mov
add
fmulp
repz
add
jns
out
loopne
call
out
cmp
or
or
jns
push
push
adc
mov
dec
cmp
adc
adc
mov
adc
stos
addr16
mov
jae
inc
lods
nop
mov
rcrl
mov
inc
les
fimull
lods
lahf
and
sub
dec
nop
iret
push
nop
pop
nop
repz
insl
bound
bound
push
movsb
fwait
cmp
jb
jp
push
jl
aam
nop
aas
cmp
inc
nop
adcb
daa
iret
jae
adc
jae
mov
push
ret
iret
or
psrld
cmp
pop
cmc
aaa
std
pop
push
cmp
aam
and
sub
inc
mov
enter
xchg
push
pop
push
dec
pop
jns
out
push
or
insb
or
jns
out
or
js
fisttpll
or
adc
inc
cmpsl
scas
mov
leave
jae
mov
cwtl
mov
daa
ljmp
cmp
xchg
add
fimull
pop
sbb
jp
cmp
pop
lret
orl
scas
push
out
mov
daa
push
sahf
or
cmpsl
es
in
sub
inc
xchg
scas
inc
mov
xchg
pop
insl
test
push
pushl
cmp
daa
test
out
mov
mov
daa
sub
out
pop
sub
xchg
pushl
pop
inc
das
xor
pushf
pop
mov
pusha
push
vmread
iret
repz
mov
daa
iret
repz
mov
jae
sidtl
rcll
leave
jae
flds
loopne
loope
xchg
xchg
xchg
cld
add
jae
or
test
dec
push
add
jae
pushf
cmp
in
imul
add
cld
mov
mov
inc
js
inc
loopne
mov
fs
lds
xlat
das
sub
add
push
outsl
lea
repnz
push
add
jp
das
pop
dec
arpl
popf
pop
and
or
inc
repnz
rorb
pop
jecxz
sub
adc
xchg
mov
and
dec
cmpsb
cmp
adcb
sbb
mov
mov
out
dec
mov
sub
testb
minps
rcr
xchg
pop
rclb
mov
mov
stc
test
scas
stos
mov
cmpb
add
jns
xchg
xchg
xchg
xchg
xchg
push
add
xchg
cltd
dec
mov
jb
add
lret
pop
xchg
daa
daa
mov
pmaxub
add
xchg
and
bound
mov
leave
enter
inc
sbb
dec
jns
xchg
out
push
pop
push
push
popf
cmp
in
test
and
out
and
into
dec
fldenv
pop
in
daa
loopne
cltd
push
cmp
push
inc
push
mov
lcall
lcall
add
xchg
mov
jb
fstpl
inc
inc
push
dec
stc
lcall
inc
repnz
fwait
cmp
inc
fwait
push
fwait
pop
fwait
insb
fwait
xchg
jl
and
pop
inc
mov
jb
xor
shr
mov
mov
jg
push
sahf
out
sahf
pop
out
or
or
out
jl
or
push
pushf
push
push
or
out
sahf
push
add
push
cmovp
and
mov
pushf
jns
push
lahf
pop
push
add
repz
popa
add
add
movsbl
in
pushf
scas
pushf
mov
mov
in
pushf
rcrl
in
in
pushf
negl
in
in
popf
pop
popf
pop
popf
sub
xor
dec
popf
fsubp
in
push
popf
popa
popf
imul
and
sahf
out
lcall
sahf
lods
and
jns
out
enter
fcomi
je
out
jecxz
sub
addr16
jae
cs
sti
popf
xor
test
push
mov
sahf
iret
jae
insb
dec
pop
cmp
inc
sbb
jmp
sahf
push
sahf
enter
clc
mov
ss
lea
movsl
pop
repnz
dec
mov
fisubrs
or
shlb
loopne
lock
xchg
xchg
xchg
xchg
lahf
and
push
xchg
xchg
xchg
xchg
insl
xchg
xchg
vpmullw
mov
in
dec
adc
jb
bnd
syscall
mov
out
pop
das
jge
test
leave
leave
in
in
cwtl
push
test
popf
cmp
mov
mov
xchg
mov
fsubrp
sysret
mov
mov
push
sub
repnz
arpl
sbbl
mov
das
popf
cmp
leave
mov
mov
iret
mov
out
mov
addr16
shlb
xchg
and
mov
push
and
add
mov
nop
mov
stc
pushf
cmp
mov
adc
inc
mov
push
in
arpl
and
mov
ja
mov
aad
xchg
xchg
enter
outsl
pushf
pushf
cmp
lret
push
add
loope
inc
ds
repz
add
repz
pop
and
cs
out
mov
inc
repnz
mov
pop
pop
push
iret
jae
adc
jae
lahf
stos
push
mov
iret
jae
cmp
lret
lret
sbb
iret
jae
cmp
loope
sbb
daa
add
sbb
add
and
movsl
out
movsl
jp
stc
add
movsl
dec
movsl
pop
movsl
push
and
pop
ljmp
or
mov
mov
or
test
push
jle
push
add
add
outsl
mov
push
cs
mov
and
or
sahf
pop
mov
push
or
jns
xlat
dec
femms
ds
movmskps
mov
pusha
push
adc
dec
sahf
ja
push
adc
lar
pop
mov
mov
fiadds
dec
add
pop
mov
mov
int
enter
cmpsb
inc
inc
inc
inc
cmpsb
cmpsb
cmpsb
inc
js
mov
jecxz
pop
sub
call
and
push
cmpsl
cmpsb
cmpsl
push
add
iret
repz
adc
out
push
cmpsl
push
push
shll
imul
cmp
daa
mov
shrd
hlt
out
and
or
negl
decl
pop
test
out
or
push
fisubrs
leave
inc
ret
dec
xchg
mov
mov
jae
cmp
jne
jge
test
daa
pop
leave
loopne
mov
mov
rolb
xchg
xchg
jecxz
repz
push
mov
push
add
repz
cmp
ss
xor
dec
push
test
inc
jns
sbbl
inc
repnz
les
aam
xchg
cltd
cmp
stos
xchg
xor
stos
lods
xchg
jns
xchg
pop
inc
stos
dec
add
jae
cmp
pop
push
jb
scas
mov
subb
jg
fildll
mov
mov
mov
jbe
pop
fstp
in
in
stos
jnp
dec
repnz
stos
lds
stos
mull
sbb
and
outsl
cmp
in
pop
arpl
dec
dec
imul
daa
adc
xor
sahf
cmpsb
clflush
mov
mov
orb
pop
and
in
stc
ja
rcrb
nop
dec
mov
xor
dec
lods
out
lods
lods
mov
iret
sub
daa
mov
daa
out
lods
jg
pop
jo
cmp
mov
mov
movsb
loopnew
jl
xor
clc
lods
js
xchg
mov
lods
jbe
and
cmp
ja
xchg
xchg
mov
jmp
add
out
push
push
ret
lods
jns
jns
fsubrs
stc
lods
cmp
jns
scas
stmxcsr
scas
pop
and
pop
pop
xor
lret
lret
lret
lret
push
scas
pop
scas
scas
jb
lret
lret
lret
lret
jge
mov
lret
lret
lret
lret
test
scas
lret
cmp
mov
pop
nopl
sbb
jb
sbb
sbb
jae
jb
push
adc
cmp
loopne
jmp
testb
pop
or
dec
mov
xor
pop
and
push
cmp
cmp
cmp
repz
cmp
fs
repz
cmp
jp
test
repz
nop
aas
fwait
inc
out
fdivp
cmpsb
inc
fidivs
jns
inc
movl
pushf
cmp
repz
dec
sarl
dec
or
repz
cmp
sub
dec
cmp
repz
push
dec
push
push
cmp
mov
ja
je
out
lea
mulps
jb
mov
mov
pusha
push
popa
sub
pusha
enter
pop
fs
add
mov
out
dec
push
dec
pop
pop
jns
fcmovne
pop
push
add
xchg
out
ror
popf
cmp
sarb
mov
jo
mov
cwtl
adc
test
rclb
fcoms
or
mov
out
loopne
mov
fbstp
rolb
cmp
sub
add
je
lret
repz
jns
mov
xchg
sub
jp
int3
adc
inc
pop
enter
mov
mov
in
mov
mov
clts
rol
repnz
add
int
mov
pop
sbb
lds
mov
lock
mov
dec
ds
adc
ror
pop
mov
mov
pop
xchg
xor
dec
mov
mov
pop
mov
mov
andb
mov
lock
popf
fildl
mov
daa
fwait
in
in
in
stos
mov
mov
and
pop
push
into
fidivs
cmp
pop
pushl
or
jns
out
or
or
leave
leave
in
in
push
pop
bound
iret
leave
leave
js
mov
cltd
iret
cmp
cs
cmp
sbb
jns
out
sbb
sbb
sbb
daa
fucom
cld
nopl
pop
mov
in
inc
adc
sbb
mov
cmovns
dec
sahf
ja
push
daa
push
das
xorb
sub
cmp
xor
ljmp
stc
or
cmova
cmp
dec
xor
iret
inc
mov
mov
fldl
cmp
add
out
sahf
js
addl
pop
fisttpl
jns
syscall
or
outsb
movsb
mov
mov
mov
inc
lds
iret
repz
fistl
out
icebp
adc
enter
cld
mov
mov
bswap
repz
sbb
sbb
repz
push
push
out
mov
pop
and
mov
and
lret
pop
xchg
mov
mov
cmp
jnp
nopl
push
mov
mov
sub
add
imul
daa
sub
cmp
cs
rcl
sbb
lds
adc
pop
dec
dec
sahf
ja
push
add
push
popf
cmp
repz
pusha
pop
imul
adc
scas
or
pushf
movsb
push
push
scas
bswap
or
cmp
add
ss
sarb
daa
or
es
xor
dec
sahf
out
or
push
sysret
jae
or
out
xchg
mov
sbb
mov
mov
test
int
ud1
inc
cmpsb
xchg
int
adc
mov
inc
mov
cs
leave
repz
add
xor
jg
packssdw
daa
daa
push
nop
fwait
cmpsb
mov
fldt
mov
das
rorb
in
jnp
or
ds
aas
call
mov
or
daa
iret
leave
leave
or
adc
xor
inc
push
dec
pop
push
in
in
daa
popa
push
sbb
iret
repz
test
sbb
pushf
cmp
mov
mov
cmp
and
jecxz
bnd
sub
and
leave
jnp
aaa
adc
sub
das
jg
xor
das
and
aam
mov
xchg
mov
sahf
ja
jl
mov
mov
pop
into
or
pushf
pushf
fmull
out
imulb
sub
pushf
decb
dec
push
mov
fldt
push
pop
push
out
push
mov
es
pop
bswap
jae
mov
inc
sbb
outsb
repnz
push
nopl
iret
repz
outsb
push
and
jle
iret
leave
repz
leave
repz
sahf
cmpsb
scas
sub
mov
sahf
ja
into
push
sub
out
out
xor
dec
jnp
fimuls
push
mov
iret
repz
push
sub
cmp
pushf
fsubrl
cmovbe
dec
push
fcmovne
repz
mov
xor
test
or
fisttpl
stos
fadd
mov
pop
inc
call
lea
cmovp
add
mov
push
daa
pushf
jl
add
inc
inc
insb
loopne
adc
sbb
jg
or
mov
iret
and
push
nop
xchg
xchg
pop
inc
inc
inc
dec
fstps
add
inc
repnz
fsts
push
or
stos
xchg
gs
sub
xchg
xlat
inc
inc
sbb
inc
push
xor
push
and
sbb
aas
sub
inc
jbe
inc
xchg
mov
aaa
pcmpeqb
pop
aaa
adc
cmp
popf
cwtl
out
fcomps
push
loopne
repz
repz
ror
rcrb
mov
jns
out
test
jns
out
insb
push
jns
pop
push
dec
inc
cmp
repz
adc
add
cmpsl
stc
hlt
xlat
lock
loopne
jno
out
or
jo
out
sti
adc
add
add
add
out
or
or
or
xchg
fmull
aaa
or
in
jbe
scas
adc
adc
adc
in
shrb
and
mov
in
push
addr16
das
push
xorps
insb
das
insl
push
and
fmull
sbb
push
pop
andb
popf
fsubrl
cmpb
test
daa
iret
sub
xchg
fcmovnu
cmpsl
mov
into
aas
mov
loope
xlat
sbb
data16
test
mov
mov
or
sub
enter
inc
enter
fisttpl
inc
and
sbb
ljmp
inc
test
xchg
add
pop
push
enter
add
add
movsb
add
in
addr16
cmpsb
fisttps
mov
cld
mov
out
jb
jle
test
shll
fs
decb
inc
mov
nop
inc
mov
iret
mov
in
call
jle
jle
adc
push
ficompl
mov
xor
jle
rcr
fsubp
stc
jb
jle
in
leave
js
xchg
inc
ja
mov
inc
mov
add
cs
loope
or
mov
jle
es
mov
jmp
pop
punpckldq
add
ret
pop
das
aas
mov
push
pop
aas
lcall
out
mov
mov
inc
push
or
jns
out
or
repz
out
adc
adc
repz
sbb
shl
cmp
add
push
fcompl
mov
and
lret
sub
inc
mov
mov
jne
cmp
decl
cld
iret
imul
push
incl
and
call
rcrb
inc
pop
jbe
pop
push
js
mov
and
jbe
addb
push
jae
in
mov
icebp
addr16
push
push
mov
xchg
mov
jle
orb
or
fwait
mov
or
pop
scas
stos
xchg
sbb
pop
pop
mov
test
dec
cmp
xor
lods
mov
add
je
and
sgdtl
pop
xor
add
add
xchg
pop
push
inc
xchg
es
loopne
out
sahf
out
sbb
repz
mov
adc
cmp
jns
mov
push
test
mov
jnp
adc
jo
push
push
sahf
jnp
adc
insb
and
push
or
fdivp
sahf
out
jl
pop
pusha
sbb
je
mov
adc
push
sbb
repz
dec
push
inc
pop
cmp
cmp
repz
and
and
ljmp
sbb
inc
gs
jnp
jg
sbb
and
ljmp
cmpsb
push
jnp
cld
xorb
cmpsb
rclb
and
cmp
jg
cmp
pop
iret
repz
js
mov
repz
xor
add
dec
shll
pop
ja
mov
jnp
and
jae
das
push
dec
insb
mov
ljmp
jb
mov
add
and
inc
pushf
or
ret
mov
adc
pop
stc
and
mov
push
incb
leave
sbb
into
sbb
rorl
and
sahf
mov
sub
ljmp
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
call
popl
cmp
cmpsb
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
lcall
push
daa
cmp
mov
popf
sti
jmp
stos
push
inc
mov
jmp
int3
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
incl
int3
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
pushl
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
lcall
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
and
jne
int
add
sti
aas
jno
or
mov
mov
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
sbb
lds
mov
insb
scas
add
aas
xor
aad
mov
inc
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sar
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
ljmp
aas
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
jmp
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
pushl
adc
mov
sub
dec
in
ss
push
scas
into
imul
fdivrp
inc
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
outsb
daa
hlt
mov
ror
add
cmpsb
fmuls
incl
or
inc
cwtl
inc
test
hlt
xchg
xchg
push
push
fnstsw
jmp
xor
popa
decl
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
aad
mov
rclb
mov
sub
mov
sbb
dec
jno
mov
test
ficompl
jmp
mov
hlt
movl
imul
jmp
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
xor
leave
cli
dec
mov
insb
fdivs
jne
filds
or
shrl
out
push
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
incl
sub
mov
and
or
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
mov
js
push
test
xchg
sbb
ljmp
sub
insb
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
incl
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
loope
frstor
sub
rorl
popa
mov
into
pop
cmp
mov
xor
dec
adc
ret
movsb
sti
hlt
shrl
imul
ljmp
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
incl
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
jmp
push
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
or
inc
push
imul
xorb
sbb
push
imul
aam
loopne
call
mov
ficoml
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
lcall
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
ljmp
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
mov
lret
sbb
outsl
and
ja
int3
add
mov
decl
lock
es
lds
or
add
mov
cmpsl
call
ret
or
xor
shlb
scas
ficomps
ret
es
pushf
mov
decl
xchg
insl
add
ss
jmp
addr16
jb
push
add
adc
mov
jnp
cmp
mov
fwait
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
outsb
sbb
int
mov
mul
ja
outsl
ja
mov
out
cli
jo
comiss
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
push
js
jmp
decl
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
push
push
scas
fcompl
fldenv
filds
mov
pusha
mov
fidivrs
mov
jmp
int3
sbb
mov
lret
mov
cmpsb
mov
incl
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
sbbb
pushl
mov
or
sbb
add
sub
cwtl
ds
adc
inc
pop
cmpsb
mov
or
xchg
pop
mov
mov
lock
pop
test
iret
loopne
rorb
jns
js
in
aad
push
xlat
out
sahf
out
fcmovnu
xchg
out
sahf
fstp
loop
in
jns
out
call
out
sahf
in
in
repz
cmc
idivb
out
idiv
stc
cli
sti
std
ret
cld
pop
adc
aas
mov
inc
pop
movsb
adc
xchg
xchg
cs
xlat
or
ja
in
sub
jae
inc
push
pop
adc
jbe
cmp
fadds
mov
cltd
aam
mov
xchg
push
into
popa
je
push
fisttps
and
cmp
inc
jecxz
aas
lds
xor
pop
inc
cmp
pop
bound
xor
outsl
insl
sti
mov
arpl
cmp
arpl
or
xor
sti
xor
bound
popa
sbb
inc
jbe
pop
insb
imul
insb
imul
dec
negb
inc
or
push
inc
cli
or
dec
scas
xchg
daa
addb
je
movl
push
jbe
adc
aas
inc
inc
jb
xor
inc
inc
das
inc
push
js
add
lret
adcb
rcrb
xchg
insb
popa
jns
inc
lds
push
dec
insb
orb
cmp
lock
inc
inc
je
aaa
aas
add
cmc
inc
push
sarb
adc
popl
jae
add
int
pop
inc
out
xchg
push
fs
inc
xlat
inc
inc
movl
jbe
into
je
jo
inc
inc
add
in
adc
ds
mov
xchg
cmpsb
or
ror
dec
push
dec
cmp
inc
pusha
stos
or
cmp
xchg
mov
xchg
addl
mov
dec
jge
out
stos
pop
xor
xor
test
mov
or
add
fidivrl
push
clc
xchg
into
pop
jo
push
inc
cmp
in
inc
adc
jg
cli
adc
dec
push
mov
add
rorl
pop
outsl
push
adc
mov
sbb
sbb
lahf
cmp
mov
pop
addr16
mov
or
and
add
and
pop
loope
popa
jo
cmpsl
and
lahf
lahf
push
outsl
bound
sub
push
sti
xorb
sbb
mov
in
pop
es
or
in
nop
test
pop
cmp
xor
out
arpl
andl
mov
rcll
adc
jo
sub
inc
addr16
xchg
jl
outsl
insb
jns
das
pop
push
add
inc
jb
push
notl
gs
inc
outsl
arpl
xor
iret
mov
in
daa
inc
push
bound
ja
inc
jbe
push
xchg
loop
addr16
imul
ja
dec
xor
and
cmp
pop
in
sbb
das
xor
sti
push
inc
sbb
mov
push
sub
fisubl
movsb
push
jg
cwtl
rclb
sbb
pop
hlt
test
sbb
add
inc
sbb
and
sbb
sbb
and
lea
outsb
rclb
mov
push
inc
dec
pop
bound
outsb
arpl
mov
pop
mov
lcall
dec
push
pusha
aaa
push
dec
adc
dec
test
stos
adcb
xlat
out
jl
dec
push
daa
add
and
test
adc
inc
add
inc
push
movsl
andb
stos
lret
rorb
push
push
decl
xchg
jnp
add
mov
in
jns
mov
jae
call
xchg
xor
jecxz
cwtl
xor
nop
pop
int
loopne
sub
test
lcall
cmpsl
daa
aaa
aaa
pop
pop
mov
pop
aaa
cmp
pop
scas
dec
outsb
lahf
notb
incl
imul
shll
xor
data16
mov
js
or
jmp
mov
call
stos
mov
data16
movsl
addl
int3
lret
ret
test
sbb
push
pusha
in
sbb
js
and
lock
fsubp
test
bound
sub
xor
pushl
xchg
or
fadd
xchg
xor
inc
add
sbb
mov
xor
mov
dec
out
mov
call
aas
ja
adc
test
cmp
lret
jns
inc
cwtl
add
and
arpl
test
sbb
loope
lods
in
sbb
xchg
xchg
sar
call
sub
repnz
jl
jle
or
add
ljmp
call
leave
lret
cmp
jne
sub
cmp
sarb
outsb
pop
inc
mov
into
cmpsb
pushl
pop
shll
cmpb
push
je
movsb
lea
stc
dec
adc
lcall
imul
das
ficoms
movsl
dec
fsubl
xchg
test
imul
jmp
stos
stc
push
sub
popf
inc
adc
add
mov
dec
add
and
push
call
cli
adc
inc
les
mov
pushl
mov
mov
sub
aam
cmc
cmp
mov
or
fcoms
repnz
adc
pop
mov
mov
call
call
test
stos
push
dec
in
dec
aaa
stc
cwtl
shll
jg
mov
inc
cmp
cwtl
jmp
clc
adc
pop
mov
mov
stos
jb
stos
sub
xlat
mov
pushl
sahf
aas
test
aaa
std
aam
xor
aaa
mov
and
int
loop
or
lds
mov
lcall
popa
xchg
or
inc
es
movsb
loop
adc
and
mov
popa
lods
push
das
add
call
xor
int3
es
out
in
mov
push
gs
int
add
into
scas
rcrb
cli
outsl
out
jmp
jns
jmp
mov
xchg
test
jne
bound
movsb
add
add
mov
xor
ss
jg
jmp
popa
mov
jbe
stc
int
and
fsubl
cmpb
xor
and
icebp
push
enter
sbb
jmp
inc
pop
push
jle
lret
clc
in
mov
iret
xchg
mov
insl
pop
inc
adc
inc
inc
jl
push
in
mov
ljmp
loope
ss
and
adc
jle
outsb
push
movsl
cmp
sti
std
adc
adc
loope
adcb
jecxz
lret
ljmp
push
mov
push
inc
ud0
call
lret
or
inc
xchg
movsb
xchg
into
jge
mov
push
mov
cmp
lcall
and
push
jb
loop
pusha
out
fidivs
jbe
add
sub
xor
jo
dec
adc
jmp
jnp
or
cmp
add
test
inc
es
outsb
mov
ret
inc
pop
into
lcall
out
loopne
icebp
adc
ljmp
in
dec
jmp
clc
pushl
lret
jmp
add
pop
jo
xor
sub
mov
mov
xchg
out
cmp
and
call
pop
sbb
inc
addr16
leave
mov
push
inc
cmp
js
xchg
dec
pushl
or
stos
inc
adc
iret
lods
rcl
lods
dec
fdivrl
pop
and
fwait
iret
lahf
sbbl
lret
xchg
lahf
pop
push
xchg
xor
sub
shrb
sub
pop
adc
and
into
andb
pushl
mov
fwait
mov
cs
sbb
xchg
sbb
imul
dec
xor
mov
sahf
aam
xchg
mov
addl
xor
fcom
cmpsb
arpl
mov
mov
xor
inc
or
mov
sbb
addl
mov
fwait
shlb
inc
lds
decl
in
sbb
pushaw
mov
fildl
shlb
iret
mov
xchg
mov
mov
pushl
je
ss
andb
inc
cmp
js
pop
adc
fisttpll
pop
adc
les
xchg
jmp
test
scas
pop
adc
addr16
lahf
cs
repnz
imul
mov
push
adc
hlt
maxps
in
cmp
mov
and
inc
lcall
bound
jge
inc
adc
outsl
dec
popa
xor
push
cld
mov
xor
shlb
sahf
fdivs
ljmp
and
mov
mov
mov
cmp
daa
jle
xchg
pop
fisubrs
call
sub
jle
jp
nop
test
mov
rcll
pusha
jnp
mov
sarl
ljmp
std
fdivrp
inc
inc
add
pop
add
filds
push
into
call
ret
sti
in
popa
adcl
aaa
mov
das
pop
lcall
ljmp
mov
pusha
scas
add
and
or
sub
shrb
insb
cli
fistpll
lods
mov
stos
imul
pushf
jl
addr16
jl
jb
das
push
std
sbb
or
stc
jle
sbb
and
mov
je,pn
addl
stos
ret
ja
jmp
mov
out
lock
ljmp
fwait
js
cmp
mov
in
ss
and
sub
mov
in
lcall
sbb
sbb
lcall
jns
sub
dec
jbe
std
pop
xor
test
xchg
jbe
decl
clc
jno
loopne
mov
adc
add
push
cmp
mov
sub
inc
lcall
icebp
jae
sti
bound
call
mov
call
mov
lods
movsl
call
ja
mov
jle
imul
push
mov
mov
jecxz
sarl
xchg
xchg
imul
xchg
xchg
cmp
pop
jmp
xor
stc
out
pusha
dec
cmp
adc
or
adc
xchg
jae
pop
outsl
pop
pop
cmpsl
scas
push
pop
xchg
das
cli
dec
pop
dec
popa
push
ja
jmp
mov
xor
inc
outsb
fdivr
lcall
dec
sub
je
mov
xor
shl
adc
add
mov
fsubrp
leave
adc
bound
push
imul
inc
cmpsl
xchg
mov
cmc
pop
mov
mov
sbb
xlat
adc
jne
fcomps
dec
dec
out
jge
les
push
incl
mov
enter
in
repnz
pop
and
jno
push
shll
dec
arpl
xchg
jmp
into
push
or
ror
hlt
insl
pop
out
mov
and
pop
rorb
sti
stos
jbe
inc
dec
stos
jp
push
dec
xor
cld
popf
jge
test
decl
popa
jmp
inc
daa
sub
out
lock
dec
push
pop
xchg
aam
decl
insb
test
mov
in
xchg
mov
cli
xchg
in
int3
arpl
and
sarb
pop
dec
mov
sahf
adc
inc
mov
and
test
mov
subb
mov
inc
jg
lcall
ud1
loope
pop
mov
inc
adc
ss
mov
ljmp
cli
aaa
fisubrl
adc
arpl
insb
add
mov
jg
in
fcmovnb
xchg
enter
outsl
pop
inc
jg
or
add
loope
or
mov
mov
out
or
imul
in
call
cmc
xchg
pop
adcl
inc
pop
jbe
ja
push
cmp
jmp
fisubrl
push
or
jb
push
dec
shll
stos
aam
and
test
cmpsb
das
mull
leave
fisttpl
mov
sub
scas
cli
jmp
jno
inc
cmovne
sbb
fs
nop
or
decl
fcmove
push
into
inc
or
mov
inc
cmc
data16
lret
decl
sbb
xchg
stos
lret
mov
sub
ret
sub
clc
xor
fbstp
adc
movsb
lods
in
fs
and
rcl
ret
mov
dec
call
rcrb
sub
pop
into
jg
mov
push
lods
cmp
xchg
pop
and
fisttps
in
mov
sub
mov
push
sub
sbb
leave
pop
leave
fcomip
dec
popf
xchg
add
in
sahf
jge
jecxz
push
inc
pop
adc
out
dec
lret
fisttpl
lcall
sub
or
cmpsl
add
cld
inc
inc
pop
push
incl
adc
stos
and
and
movsl
jns
decl
rclb
in
fidivs
sbbl
push
mov
pop
fcom
sub
jg
xlat
int3
push
clc
test
dec
cmp
pop
aaa
cmpsb
jb
mov
es
mov
sbb
adc
jnp
adc
and
add
fs
pop
mov
dec
call
fwait
rolb
ret
cwtl
sub
imul
outsl
xchg
sub
lds
mov
cld
dec
sti
ret
jl
mov
mov
loop
inc
into
cs
seto
hlt
incl
idiv
dec
sti
addb
test
push
add
out
jbe
mov
jg
outsl
jae
pop
push
sub
mov
das
loopne
push
out
test
mov
inc
mov
lcall
pop
sbb
ffree
pop
inc
out
jp
lcall
and
mov
adc
in
inc
and
addl
pop
pop
mov
imul
test
imulb
lods
lcall
xchg
mov
dec
push
mov
out
jne
and
pop
fs
mov
inc
mov
out
icebp
pushl
xchg
clc
jp
xchg
pop
xlat
lds
mov
and
jp
add
fwait
pop
add
scas
inc
stos
bound
aam
cmp
decl
inc
xor
pop
mov
mov
insb
push
cmpb
popa
sub
and
push
or
mov
in
std
ja
fmuls
fisttpll
push
test
inc
push
mov
popf
inc
add
xor
sub
push
xchg
lods
les
adc
pop
mov
mov
push
and
fwait
mov
inc
and
or
sub
cmp
dec
mov
and
cmp
cmpsl
or
scas
lret
sbb
pop
icebp
jo
jmp
or
push
jmp
cmp
jle
push
cltd
jne
cmp
aad
fisubs
fs
pop
lcall
jp
inc
fwait
arpl
dec
sbb
mov
adc
xlat
setb
roll
jno
or
or
int3
push
cmpsb
hlt
je
sti
mov
ljmp
enter
cwtl
pop
or
sub
add
sbb
int3
frstor
mov
dec
sbb
ret
test
cld
cld
rorl
out
inc
pop
loopne
push
sub
jo
out
lret
dec
jae
dec
xor
ljmp
sbb
bnd
or
push
jge
sbb
xchg
mov
imul
push
fs
out
test
mov
mov
mov
or
mov
inc
sub
dec
jns
mov
inc
repnz
pusha
in
fsubrl
xor
cmpsl
pop
stc
xchg
cmpsl
jecxz
fdivl
das
xor
cli
gs
mov
add
nop
xchg
orl
outsl
pop
sbb
hlt
hlt
mov
jecxz
mov
pop
dec
pop
outsl
fwait
clc
cli
test
mov
xchg
push
incl
aad
xor
push
insl
mov
icebp
shlb
pop
pop
fstpt
out
ret
dec
incl
aam
inc
int3
cmpl
cmc
loopne
cltd
out
and
jno
cmp
mov
ficoms
call
lret
loopne
sub
and
call
dec
sbb
pop
fisttps
jns
pop
test
incl
cmp
jae
jns
adc
mov
pop
mov
lcall
loop
mov
mov
jbe
cld
retw
pushl
movsb
fdivl
repnz
cltd
sbb
jp
mov
jle
or
lods
jmp
and
test
lea
add
stos
sbb
sub
xchg
cmpsb
shrb
adcl
std
lods
jnp
nop
adc
ljmp
ficoml
mov
ljmp
addb
mov
test
sbb
or
out
stos
outsl
and
jle
in
popa
adc
test
sbb
mov
pushl
je
dec
aaa
xchg
mov
inc
add
cld
sub
jnp
sbb
or
cli
jmp
out
jb
push
lods
cmc
arpl
ss
hlt
cmp
mov
mov
incl
sahf
dec
rorb
mov
jbe
lea
int3
clc
incl
mov
insl
push
pop
mov
fsubrs
ja
sbb
mov
cmp
mov
or
into
push
or
clc
mov
fildll
mov
push
stc
fwait
jnp
popa
outsl
jmp
test
and
das
lcall
push
jnp
and
addr16
insl
iret
out
add
mov
push
xchg
lds
clc
fsts
mov
dec
jmp
sar
adc
xor
clc
push
and
pushl
push
or
sbb
mov
cltd
dec
and
je
or
loop
sub
icebp
call
lds
hlt
andw
sub
lcall
xlat
mov
sbb
xchg
mov
lods
and
stc
fwait
pusha
sbb
dec
jge
inc
adc
cmpsl
add
fstp
cmpsl
sbb
stos
fldenv
pop
pop
or
sub
stos
ss
add
pop
sbb
test
mov
jmp
ret
dec
in
ds
sti
push
mov
js
mov
dec
fistl
js
aad
mov
loopne
out
jnp
or
out
repnz
sub
out
out
mov
dec
not
pop
lret
enter
loopne
aaa
std
js,pn
sarb
out
jae
pop
mov
icebp
mov
gs
fnstsw
inc
fldcw
mov
nop
mov
jns
adc
lcall
gs
push
mov
sbb
mov
sbb
mov
imul
mov
mov
aam
fimuls
pop
pop
loopne
inc
jl
jmp
fs
scas
pushl
scas
add
sbb
shrb
xchg
lock
mov
xchg
pop
jne
subl
outsb
or
or
and
push
outsl
push
adc
cld
lret
push
cmp
ret
and
scas
scas
ljmp
rcll
push
and
jb
jg
out
adc
mov
pop
es
pop
in
mov
outsb
js
jge
or
and
pop
jns
out
scas
test
pop
mov
ror
decl
add
jl
cmc
add
jl
ret
decl
lahf
or
leave
rorb
mov
fnstcw
adc
leave
push
std
cmp
incl
mov
inc
xor
inc
push
or
add
out
clc
mov
sub
pop
cwtl
jle
xor
inc
pop
sahf
cmp
pop
cld
hlt
pop
jle
push
mov
mov
popa
fcompl
in
stos
sbb
inc
lret
cmp
jmp
aad
dec
and
mov
ss
and
or
add
lcall
rcll
cmpb
enter
sbb
in
push
xchg
insl
cltd
push
cmc
call
adc
leave
xchg
bound
ficompl
push
jb
xchg
lock
dec
sbb
incl
cvtps2pd
shrb
repnz
lret
fcom
lds
or
loop
das
shr
sti
pushf
mov
outsl
clc
jmp
int3
insl
lea
xor
rcll
push
iret
in
push
pop
in
mov
call
push
adc
push
inc
loope
jl
xchg
mov
fisubrs
sarl
clc
fwait
loope
mov
dec
cmp
decl
mov
orb
ljmp
data16
push
xchg
jecxz
hlt
pop
cmpsl
sbb
cwtl
rorl
sahf
jl
repnz
jmp
mov
ljmp
xchg
fisttpll
inc
pop
pop
andb
cli
inc
leave
scas
pop
adc
or
decl
dec
pop
push
jle
jmp
stos
aaa
out
xchg
and
jb
fucom
or
popa
push
dec
pop
loopne
cld
xor
imul
pop
mov
sbb
mov
xor
sbb
inc
addb
mov
call
repnz
add
cwtl
dec
cld
movsb
orb
sarb
mov
subb
test
pushl
pop
jmp
push
in
pop
pop
push
xor
enter
dec
fidivrs
out
mov
xchg
ljmp
movsb
repnz
scas
sbb
xchg
insl
sarb
jb
jb
or
sub
sub
xor
and
dec
outsb
jle
mov
mov
out
dec
inc
jo
andl
or
cli
jle
cmp
stos
es
sbb
ljmp
inc
adc
xchg
jnp
mov
lods
adc
push
movsl
arpl
jb
mov
ret
sub
sub
aam
sti
push
mov
movsl
setp
sub
add
loop
and
mov
or
call
jecxz
movsb
lahf
add
into
int3
pusha
jg
push
or
add
subb
push
std
and
mov
lret
lcall
sbb
pop
or
jg
dec
sub
fs
pop
js
lods
call
cmc
inc
and
and
mov
aad
mov
cmp
js
sbb
xchg
std
adc
sbb
add
test
decl
and
dec
pop
cmpsb
int3
idivb
movsb
hlt
adc
inc
push
lret
ret
pushf
test
incl
sub
ficomps
bound
mov
movsb
mov
add
xor
inc
pop
out
jo
jg
cmc
mov
idivl
dec
jne
out
push
fldl
xchg
hlt
pushf
cmp
push
pusha
or
ljmp
into
pushf
mov
out
call
jae
mov
das
or
mov
repnz
aad
mov
lcall
mov
inc
cmp
movsl
push
push
adc
aaa
pusha
push
loop
jp
dec
jne
insl
imul
imul
call
mov
cmpsb
mov
cmp
xchg
jle
lret
adc
js
movsb
imul
dec
js
jmp
lret
ds
xchg
jmp
mov
fistpll
mov
in
inc
sahf
adcl
pop
es
decl
mov
add
repz
gs
repnz
sub
push
xlat
mov
ds
rclb
roll
lcall
xor
mov
roll
loop
push
movsl
lahf
fs
cltd
std
outsb
cmpl
decl
insb
js
xorb
aam
cmpsb
pop
loop
push
or
rcl
pop
mov
fcomip
mov
sub
jg
adc
or
push
push
jmp
jne
clc
or
jae
cltd
lcall
push
std
cltd
adc
imul
in
xchg
iret
mov
inc
cmp
les
in
sub
imul
ljmp
cltd
aad
popf
mov
mov
mov
lcall
cmp
mov
call
pop
out
movsb
jno
fnstenv
add
fisubl
sbb
pop
push
jmp
push
rcrl
push
imul
mov
and
cld
cmp
cmp
jmp
sub
xor
repnz
xlat
subb
xchg
sbb
mov
nop
scas
cmpsb
and
add
out
jg
call
pop
mov
in
mov
pop
daa
xchg
movsl
es
push
outsl
xchg
mov
std
jmp
jmp
insl
or
stc
mov
push
mov
js
xorl
and
js
pushl
push
sbb
xor
inc
mov
shll
repz
in
fsub
push
sbb
test
xlat
dec
cmp
fstps
fstps
std
xchg
xchg
fs
jmp
dec
pop
in
xchg
sarb
fwait
mov
xchg
les
xor
and
sub
cmpsl
jo
push
incl
pop
inc
mov
jg
jns
lret
sahf
inc
incb
shrb
push
mov
cmpsl
adc
jg
incl
scas
and
jp
mov
mov
loop
xor
mov
lret
add
jg
loop
push
mov
stc
bound
xchg
cld
testb
aad
lahf
pop
push
decl
or
add
aam
ljmp
adc
mov
mov
adc
jmp
cld
in
add
rorb
sbb
es
lds
gs
lcall
popf
jle
cmpsl
mov
outsb
pop
xchg
cmp
ljmp
ds
lods
xchg
stc
pop
dec
enter
hlt
fldcw
cmpsl
xor
pop
xor
aas
dec
cmp
nop
shl
pop
pop
push
pushf
inc
and
or
xor
xor
in
pop
loope
stos
jge
adc
xchg
hlt
pushl
pop
xchg
shlb
mov
jg
adc
cmp
inc
push
jg
bound
jecxz
test
mov
lret
fs
sub
in
xor
lcall
xchg
icebp
xacquire
in
arpl
lds
daa
jle
idivb
mov
mov
jg
std
divl
bound
out
aaa
xor
sub
sbb
adc
pushf
add
call
xchg
sahf
movsl
nop
add
cmpsb
push
fimuls
mov
xchg
add
pushf
loop
cmp
in
fwait
std
lods
shll
mov
xchg
mov
cmc
cld
clc
xor
out
or
stos
mov
push
insl
movsb
inc
bound
ja
icebp
je
mov
rclb
jne
int
jmp
call
imul
dec
or
sahf
mov
mov
jge
or
inc
scas
inc
lods
fldenv
push
lds
pop
mov
je,pn
jb
and
pusha
inc
mov
xor
sub
shl
pop
xchg
mov
ja
movsb
dec
icebp
call
in
std
jbe,pt
repz
daa
jle
cmp
adc
and
ror
mov
repnz
or
jno
jle
pop
cmp
rolw
jno
xor
add
add
pop
shrl
mov
mov
scas
inc
stos
enter
fnsave
jmp
in
push
sub
adc
jo
xor
and
xchg
pop
xchg
imul
sub
popf
mov
mov
mov
int3
mov
push
sub
dec
inc
and
ret
and
test
stos
lret
mov
stos
fsubl
sbb
aas
outsl
xchg
movsb
call
int
lret
psllw
jl
js
jge
sti
call
sbb
mov
jns
pop
lret
xchg
xchg
popf
mov
cmp
cld
push
test
clc
jg
inc
addr16
gs
inc
inc
add
mov
dec
incl
cmp
mov
or
fmull
pop
jecxz
ret
jb
das
lea
and
sbb
cli
jg
pop
aam
je
mov
adc
lock
fwait
cs
inc
rcrl
pushf
fldl
lock
out
loopne
popl
xchg
pop
cltd
pop
in
mov
fsubr
jmp
add
push
mov
push
in
adc
sar
ja
pusha
enter
insl
popa
inc
divl
push
push
jg
call
aam
push
xchg
mov
xor
push
push
sub
mov
hlt
xor
ljmp
cmpsb
or
lcall
push
mov
fcomps
cmp
pop
xor
icebp
jmp
mov
xor
test
insb
xchg
adc
cs
leave
cmp
cmp
out
jae
loopne
subl
xchg
and
loopw
out
sub
int
mov
lcall
dec
lret
mov
mov
mov
sub
jl
jmp
mov
icebp
outsb
fstp
aam
jo
out
or
roll
jl
out
dec
imul
xchg
imul
push
lahf
mov
cmp
mov
cld
lcall
int3
loope
in
or
sar
idiv
decl
insl
enter
das
idivl
jae
lock
out
addr16
dec
aaa
fisubrl
pop
push
call
xchg
lds
icebp
dec
pop
js
mov
jmp
lods
mov
mov
cmp
fnstsw
push
fdivrs
cmpsb
mov
int3
andb
icebp
push
icebp
push
lahf
popf
inc
negl
jg
jmp
mov
mov
mov
dec
ret
popf
std
push
xor
jo
mov
mov
scas
int3
xchg
jle
push
ds
mov
test
xchg
xchg
ljmp
adc
mov
xchg
pop
lret
stc
xor
mov
sub
inc
cld
mov
flds
adc
out
fcmovnb
incl
push
sub
mov
pop
push
stc
mov
rolb
out
xor
decl
jo
sti
repnz
mov
add
imul
pop
sbb
sarl
dec
cmpsl
jmp
xchg
adc
fs
dec
fdivl
pop
mov
stc
cs
push
mov
dec
decl
sti
sbb
mov
xor
mov
lods
pop
data16
fdivrl
scas
push
pusha
incl
ret
lahf
xor
ds
add
imul
adc
ja
aad
jge
shll
push
add
lcall
mov
loop
add
outsl
clc
decl
stos
insl
xor
push
mov
jl
pop
daa
bound
or
xchg
dec
jmp
sbb
add
pop
cmp
xor
decl
xor
push
jp
cltd
cmc
mul
aam
jbe
les
add
out
add
sti
inc
lock
mov
aad
sub
cmp
jmp
push
ljmp
stc
cmp
sub
lods
mov
adc
xchg
jmp
xchg
sahf
cltd
enter
xchg
dec
mov
adc
rcll
push
add
rol
add
push
xor
decl
mov
push
adc
mov
pusha
subl
adc
fwait
sub
lods
aam
xchg
fwait
lock
ljmp
push
imul
mov
syscall
push
jmp
push
scas
fdivrp
lcall
test
xor
jge
push
outsb
pop
cmp
ret
cmpsb
push
lods
mov
sahf
xchg
sti
call
and
jmp
mov
mov
iret
inc
hlt
sbb
mov
icebp
mov
cltd
add
in
inc
jg
and
ljmp
mov
push
movsb
inc
dec
outsl
notl
ret
out
call
cld
cmpsb
pusha
mov
les
jbe
incb
and
or
sti
lock
test
ljmp
lcall
in
fists
cmp
fsubrs
dec
sbb
mov
xchg
adc
outsb
jnp
outsl
stos
pusha
push
sub
add
push
std
outsl
jmp
inc
or
lahf
scas
cmp
aad
fcompl
ljmp
call
jno
xlat
ja
xchg
cmp
add
jns
inc
ror
add
mov
dec
mov
inc
pop
cld
loope
push
insl
xor
push
shlb
lcall
orb
pop
subb
adc
add
mov
push
in
jge
out
mov
pop
pop
mov
dec
jge
scas
clc
movsb
xchg
sbb
lock
dec
mov
out
dec
dec
mov
push
call
lea
add
lcall
leave
push
dec
cs
jge
inc
sub
mov
jle
cmp
jg
leave
inc
jle
dec
cld
sarb
movsb
ljmp
jle
filds
out
cld
lods
pop
jecxz
pop
xor
fwait
add
fldcw
sbb
jns
clc
decl
add
and
xor
mov
xor
loop
popa
xorl
jl
push
movl
inc
or
or
pusha
push
pop
mov
insl
sub
jo
fists
call
pop
xorb
xchg
fcoms
adc
pop
mov
cmp
mov
cmc
xchg
test
xor
daa
outsl
xchg
ret
sbb
inc
or
inc
into
pop
mov
fcomip
lea
insb
jno
in
xor
jbe
ljmp
adc
pop
mov
sub
in
out
repz
lcall
and
mov
push
push
pop
icebp
insl
pusha
bswap
add
jmp
in
shlb
cwtl
sbb
dec
sub
setae
cmp
jnp
and
mov
jmp
iret
sbb
mov
push
popf
mov
cmp
icebp
addr16
ds
sbb
test
xor
clc
xlat
push
mov
or
xchg
push
sub
fnstsw
pop
stos
or
loopne
push
dec
cmp
lea
jns
jmp
lds
jmp
gs
rcrb
popa
rclb
incl
jmp
push
sbb
nop
leave
cmp
cmp
or
sbb
lcall
hlt
mov
push
fmulp
inc
xlat
add
cli
adc
fcmovbe
inc
ja
sub
jmp
fwait
inc
shrb
adc
cwtl
mov
jnp
cmp
xor
add
push
adc
pop
push
lcall
ds
lods
stos
in
out
lds
mov
add
jg
nop
xchg
mov
pusha
push
fucom
mul
sub
pop
jmp
scas
rol
xor
mov
mov
call
sti
push
daa
sub
mov
inc
xor
push
jb
mov
push
pop
addr16
decl
xchg
jmp
gs
and
js
mov
iret
aaa
cmpsb
adcb
add
out
loopne
decl
sti
xchg
pusha
in
sub
imul
scas
sarb
sar
ljmp
rorb
or
orb
rclb
stos
out
scas
mov
test
fsubrs
aad
adc
xchg
sbb
leave
stos
cmp
mov
push
jae
mov
mov
xchg
or
cmp
mov
cltd
fildll
bound
bound
add
incl
outsl
adc
mov
imul
push
flds
push
mov
gs
jnp
dec
in
and
in
fdivrs
mov
pop
xchg
add
jg
adc
shll
push
cmp
test
ja
lret
inc
adc
mov
mov
or
call
add
jnp
mov
daa
xchg
test
and
push
fstp
inc
repnz
jmp
jnp
dec
addr16
ds
sub
enter
pop
push
ret
inc
test
mov
mov
inc
stc
add
cmpl
push
getsec
pusha
jmp
lahf
push
int
lcall
push
inc
pop
xchg
cmp
lods
pop
mov
or
adc
call
adc
push
xor
or
adc
cmpsl
mov
dec
outsb
test
mov
shl
xor
jns
call
nop
lock
mov
xor
leave
and
sub
mov
mov
pushl
cmpsb
es
jmp
insl
fmull
mov
mov
pop
inc
fs
ja
cmp
mov
sarb
incl
inc
push
ljmp
or
stos
int
nop
jp
cvtps2pi
lret
xchg
jmp
enter
xor
lret
pop
mov
push
cmc
sbb
out
cli
add
das
mov
test
shrb
std
lods
lock
xchg
ljmp
sbb
mov
rol
stc
sti
xor
jo
mov
imul
add
call
filds
outsb
dec
sbb
pop
hlt
push
jne
movsb
enter
push
popa
mov
ljmp
or
mov
xor
sbb
mov
sub
fsubrp
mov
rcll
pop
jb
push
test
mov
lahf
hlt
test
mov
dec
stos
mov
aad
ret
out
hlt
repz
push
adc
lock
jg
adc
shlb
dec
insb
mov
push
push
cmp
and
inc
push
pop
xchg
stc
call
cld
test
jae
adc
adc
xchg
pushf
add
or
not
cmp
lcall
fisttps
xor
xchg
mov
pop
mov
adcb
pop
aad
cld
jg
and
mov
fs
cld
xor
aad
mov
jmp
dec
jmp
lods
pop
jnp
sub
cmp
mov
jne
mov
in
cmp
in
mov
dec
cmpsb
jns
lea
jl
xchg
dec
sahf
jns
sbb
pushl
decl
push
mov
test
stos
jnp
cld
nop
fstp
mov
xchg
mov
xchg
clc
scas
or
jecxz
pop
sub
or
hlt
and
js
or
adc
and
dec
and
cs
fbld
lock
leave
cmp
xchg
push
inc
testl
scas
imul
xlat
jmp
aaa
aas
outsl
push
xor
ljmp
loopne
repnz
pusha
inc
imul
subl
add
stos
mov
mov
dec
and
push
popf
loope
jns
push
stos
incl
dec
pop
test
pushf
push
dec
ret
fstl
daa
or
cmpsb
ljmp
pop
divb
jge
mov
adc
movsl
outsl
cmpsb
mov
leave
ds
fcomps
add
mov
mov
xor
sub
xor
jo
outsl
dec
lret
out
mov
stos
cmpsb
push
jmp
dec
pop
pop
push
adc
clc
adc
fisttpll
sbb
mov
aaa
sbb
outsb
mov
fisttps
int3
shlb
scas
jle
xchg
mov
sbb
mov
negb
pushl
fwait
sub
je
mov
add
sbb
hlt
movsb
rolb
mov
daa
ss
lcall
pushf
mov
mov
adc
stos
loope
push
leave
adc
in
sub
and
cld
ljmp
sub
xor
sbbb
jno
aam
pop
cmpsl
movsb
push
jbe
xchg
mov
push
call
rcrb
das
pop
lods
jnp
in
jp
jmp
inc
ljmp
xor
adc
sti
ss
mov
mov
int
push
jne
fadds
shll
ja
jmp
dec
xchg
sbb
clc
mov
jbe
xchg
aad
shll
pop
xacquire
lahf
jmp
hlt
push
pop
pop
in
sbb
repnz
pop
dec
shlb
add
mov
adc
decl
subl
mov
xor
popl
movsl
xchg
or
and
inc
add
or
lods
pop
add
icebp
loope
popf
or
imul
lcall
jg
lahf
in
lret
sbb
imul
dec
inc
push
xchg
loopne
out
xchg
cwtl
das
lcall
fistl
mov
adc
lret
cli
cmp
fnsave
in
and
idivl
mov
adc
jbe
psubq
iret
lahf
add
jns
mov
fmull
popf
and
adcb
inc
call
lahf
mov
in
fistl
loop
xchg
lods
xor
xchg
and
shrb
xchg
sbb
lods
mov
jo
lock
divb
adc
popf
nop
inc
or
pushl
incl
aaa
out
mov
mov
shll
fstpl
cmp
mov
call
cmp
imul
mov
es
xor
or
cmp
iret
mov
jmp
push
push
xchg
inc
sub
test
es
ja
xor
mov
leave
dec
popa
and
jnp
outsb
loop
aad
mov
inc
fcompl
in
divl
mov
cmp
sbb
mov
nop
aaa
push
and
das
dec
dec
cmpsb
mov
in
mov
ret
int3
dec
dec
loop
insb
out
cmc
xchg
xchg
cmpsb
mov
addr16
pop
or
cwtl
ljmp
clc
pushl
mov
cwtl
mov
push
popa
add
lcall
dec
mov
jmp
sbb
mov
movsl
enter
xor
mov
out
aam
jae
add
push
jg
xor
in
xchg
sub
mov
dec
pop
xor
ret
bound
lods
ret
pop
cmc
lcall
int
pushf
pop
and
pop
mov
cmp
xchg
xor
stc
ljmp
and
ja
xchg
outsl
push
mov
pushl
subb
inc
fcomip
lcall
mov
flds
pop
cmp
rcl
daa
into
jb
pop
mov
dec
xchg
push
out
push
out
jecxz
inc
mov
test
das
aam
cmc
sub
mov
call
ds
mov
adc
and
mov
call
lcall
icebp
gs
rolb
pusha
data16
mov
decl
adc
shl
sub
insb
imul
cltd
inc
jge
cli
xchg
cltd
rcl
xor
sub
ljmp
fwait
jl
inc
sti
stos
mov
inc
xchg
imul
xor
out
pop
js
lea
mov
stc
call
lock
xchg
mov
push
outsl
adc
pop
add
clc
ljmp
nop
fsub
stos
pushf
adc
les
cmp
inc
push
mov
insb
mov
xchg
lahf
inc
mov
rcrl
decl
out
jo
loope
adc
adc
fnsave
icebp
and
xor
dec
xchg
xchg
push
xchg
push
daa
jl
jmp
arpl
add
mov
lret
jl
fwait
lret
rolb
ficoms
jl
mov
and
call
lret
lcall
ja
dec
mov
outsb
dec
sbb
cmp
inc
inc
pop
scas
xchg
xchg
movb
push
out
ja
or
insl
jle
scas
mov
adc
xchg
cmp
lcall
imul
fwait
mov
jo
mov
inc
push
xor
aam
jnp
lds
pushl
mov
test
push
mov
sub
sbb
xchg
addr16
mov
dec
jae
decl
cli
sbb
pop
cltd
stc
push
sbb
subl
xchg
cmc
push
shll
iret
sar
push
leave
aam
lock
lret
push
aas
cmp
pop
nop
push
jg
sub
jbe
outsb
bound
insl
xor
dec
jno
ja
jg
cs
clc
call
mov
notl
fcos
call
mov
inc
mov
loop
fsubs
call
jge
repnz
and
pusha
stc
mov
cmpsl
popa
xchg
mov
xchg
mov
inc
stc
sub
nop
insb
push
or
movsb
and
bound
gs
lahf
push
test
fisubrl
incl
lods
sub
mov
imul
incl
in
cld
mov
add
cmpsb
pop
negb
lock
call
clc
fldl
or
lcall
pop
sbb
push
xchg
mov
test
lret
bound
aaa
fadds
repnz
add
jnp
mov
sbb
pop
popf
repz
ja
adc
push
xchg
cmc
cld
jmp
lahf
scas
loope
fdivrp
jl
jge
stos
idivl
clc
mov
pop
sub
ss
mov
jae
test
iret
sub
pushl
jb
xchg
adc
jp
xchg
mov
cs
or
loopne
pop
jmp
jg
sub
aam
mov
pop
ret
mov
mov
movswl
lahf
outsl
test
xchg
cmp
jl
lahf
and
test
and
or
ja
lret
jo
jbe
or
je
shrl
dec
add
cmp
cmp
sub
bound
jecxz
call
adc
test
cs
inc
inc
lahf
mov
sbb
iret
sub
out
insb
sbb
gs
dec
mov
cmp
or
cmp
mov
pop
xor
jmp
xor
cmp
lcall
sar
jg
insb
pop
and
cs
fucomip
mov
pop
addr16
mov
into
add
jmp
mov
in
call
stos
mov
lcall
cli
iret
mov
jmp
add
fimull
hlt
iret
hlt
push
int3
test
or
out
xor
into
mov
dec
cmc
std
lcall
pop
xor
mov
sub
mov
jnp
in
cs
and
cmpb
lea
pop
adc
sub
jae
and
mov
mov
lds
out
mov
scas
jne
xchg
pushl
add
aad
ret
push
leave
push
rcrl
push
and
test
and
mov
push
cld
mov
mov
pop
inc
mov
push
push
popa
hlt
mov
adc
sub
inc
push
fwait
xor
ljmp
inc
sub
or
sub
sbb
cmp
dec
add
adc
or
xor
fstpl
cltd
jle
jno
mov
xor
mov
jl
call
cmp
pushl
push
or
sub
mov
nop
mov
pushl
xor
mov
lret
or
xchg
pop
bswap
inc
stos
cmp
lret
icebp
and
inc
sub
call
sbb
sub
inc
or
clc
and
ror
xor
scas
inc
push
fbld
xchg
mov
sub
leave
push
out
xor
in
xor
js
xchg
xorl
xor
xor
xor
pop
jmp
icebp
inc
les
das
ljmp
jle
mov
fcompl
mov
push
mov
jge
adc
push
pushl
sete
popa
sub
push
jmp
dec
jmp
sarb
lcall
xchg
and
fstps
add
xchg
aad
pop
fisttpl
fs
shl
shlb
jae
hlt
inc
mov
loop
loop
cmp
push
sub
sbb
loopne
aas
dec
or
leave
mov
decl
mov
or
jmp
and
jge
inc
jle
lock
dec
fildl
ffree
adc
aad
pushl
int
pusha
test
mov
dec
mov
add
inc
ds
pushf
pop
pushf
jecxz
aaa
jmp
sbb
scas
jne
cmp
int3
pop
or
fbstp
or
dec
and
adc
push
or
pop
add
add
dec
aad
lcall
dec
lods
cltd
gs
pop
add
lcall
xor
pop
jo
push
adc
test
cwtl
add
pop
daa
shll
inc
inc
incl
push
cmp
pop
dec
mov
sti
adc
loop
mov
bound
dec
aad
fbstp
add
xor
movsl
jmp
mov
roll
ret
insl
ftst
pop
mov
lcall
inc
nop
add
and
shll
dec
sub
or
adc
scas
out
mov
bound
fnstenv
fildl
fwait
stos
jns
test
stos
push
cli
call
push
mov
jge
xor
push
mov
jb
mov
xchg
ljmp
cmpb
add
movsb
xor
or
cli
dec
xlat
mov
imul
ja
cmc
imul
rclb
mov
and
test
in
ljmp
add
mov
pop
pushf
call
cmpsl
rclb
adc
ljmp
and
and
ret
push
jge
aam
rclb
iret
arpl
cmp
jg
jmp
jmp
clc
inc
cmp
stc
cltd
in
add
jae
lret
hlt
ljmp
inc
fs
adc
mov
add
xchg
cltd
mov
push
nop
dec
insb
es
das
shlb
jmp
cmp
add
icebp
stc
xchg
cmp
lahf
xor
out
aam
ljmp
clc
decl
mov
push
dec
clc
lock
pop
adc
in
xor
add
sub
push
pop
hlt
jnp
div
add
sub
rcrl
jae
mov
decl
xor
pop
insb
mov
test
sub
mov
mov
in
mov
ljmp
iret
dec
ret
push
xor
dec
cmpsl
jbe
or
xor
shlb
and
mov
adc
mov
lcall
movsb
icebp
in
mov
fdivrl
jno
pop
nop
mov
pushf
sarb
jne
cmpsl
incl
jb
repnz
pop
bound
add
jl
sbb
fwait
mov
pop
decl
test
hlt
loope
popa
repnz
scas
mov
ljmp
insl
popa
daa
icebp
lds
call
xor
mov
sub
ja
fdivrl
push
xor
nop
mov
jl
fcomip
mov
jg
inc
inc
ja
pop
push
pop
jo
xchg
pop
sub
xchg
je
pop
jne
imul
inc
push
test
out
mov
and
gs
lcall
xor
adc
push
dec
shrl
push
lods
push
stos
ja
insl
pop
shrb
sahf
pushl
stc
push
jns
stos
xchg
pop
mov
scas
pop
subl
cmc
push
js
out
fmul
cmp
jmp
mov
test
cmpsb
dec
test
pop
mov
mov
and
fistps
mov
mov
enter
cmp
jne
icebp
mov
sub
fwait
inc
mov
pop
mov
int3
imul
jp
xor
inc
enter
sub
xchg
mov
call
repz
pop
ds
lods
aaa
sbb
sbb
testl
imulb
pop
mov
cmp
jbe,pt
or
into
cmp
js
outsb
cmpsl
jle
test
xor
call
ljmp
xlat
fwait
lahf
insb
mov
arpl
cmp
jo
adc
xlat
fdivrs
lcall
xor
lret
mov
cmpl
push
dec
adc
mov
pop
and
mov
es
ljmp
and
inc
std
gs
xchg
cmp
add
lret
fcoml
push
jmp
push
pop
jmp
pop
mov
mov
mov
dec
and
xchg
test
fdivs
out
stos
adc
cld
in
jmp
ficomps
xor
fiaddl
push
or
pop
fsubs
call
fsubp
cmc
push
ss
push
js
and
jns
fdivr
cld
sahf
sub
and
decl
fbstp
inc
push
inc
hlt
stos
lods
dec
in
addr16
ss
aaa
fists
in
xor
cld
add
lock
les
rolb
cmpsb
mov
inc
mov
test
lcall
data16
sarb
pop
in
pushl
and
inc
fdivrl
sbb
add
inc
mov
stos
andb
cltd
addr16
shl
stos
ret
ljmp
loop
push
lahf
fstl
dec
outsl
rcrl
notb
mov
fidivrl
lods
movsb
fbstp
repz
adc
xor
mov
nop
lods
clc
adc
mov
jae
imul
jecxz
xorb
mov
call
and
dec
outsb
iret
sub
cld
addr16
cltd
push
and
adc
enter
inc
sbb
dec
orb
add
data16
call
ljmp
cltd
cmp
sbb
xor
xor
add
cmp
fsqrt
lcall
dec
mov
insb
ljmp
mov
mov
ds
adc
cmpl
pushl
gs
call
xchg
sub
add
stos
pushf
sub
pop
out
rcll
jle
test
lret
xlat
shlb
nop
jge
dec
pop
pushf
popf
int3
pop
and
pop
mov
roll
decl
repnz
jp
or
fisubl
lods
cltd
scas
cmp
jg
xchg
dec
outsl
ret
push
lahf
mov
and
das
test
sub
loopne
in
push
mov
mov
call
inc
mov
xor
or
xchg
lock
sti
push
sarl
das
mov
sub
push
mov
call
and
out
xor
cli
push
adc
ljmp
jnp
jmp
mov
mov
adc
mov
js
sti
or
mov
xor
push
out
or
test
mov
mov
mov
add
ja
xlat
stc
lods
std
popf
dec
jg
mov
aaa
in
gs
iret
stos
cmp
js
dec
or
inc
rcrb
rcrl
pushl
and
shl
pusha
adc
inc
adc
jecxz
into
test
pop
and
adc
inc
iret
lcall
ror
aas
adc
outsl
loop
dec
push
cmp
cld
cmp
jae
mov
or
popa
lahf
pop
dec
pop
ja
pushl
cmp
inc
inc
xor
nop
lret
nop
and
inc
xor
fnstcw
test
push
jp
data16
push
scas
jmp
dec
mov
les
inc
leave
adc
incl
cltd
popf
inc
fstpl
lahf
sbb
sarl
jae
or
inc
rcr
mov
lcall
mov
dec
das
stc
jb
sarl
sarb
imul
cli
dec
lret
call
shrl
xchg
insl
and
xorb
mulb
out
xchg
xor
xchg
decl
iret
fs
sarb
out
insl
ljmp
inc
jno
jecxz
dec
hlt
mulb
push
in
push
pop
inc
fdivrp
cmp
int3
dec
orb
inc
std
mov
repz
std
sbb
loopne
int3
jb
cli
dec
adc
mov
insl
inc
mov
mov
outsb
cwtl
movsb
mov
incl
xchg
in
xor
mov
shll
adc
adc
adc
mov
inc
imul
push
cmp
mov
lock
xor
mov
sub
jb
push
es
call
xor
adc
leave
fcoms
mov
cltd
mov
dec
jmp
xchg
fstps
scas
adc
mov
movsb
lea
incl
aas
add
decl
mov
arpl
or
mov
fmul
jmp
xchg
in
sbb
push
push
pop
decb
fcmovnbe
jg
lods
ret
cli
iret
stos
mov
jae
adc
out
cmp
lds
out
clc
pushl
push
jmp
jg
jo
mov
cmp
jbe
stos
out
cmp
fsubrp
push
sbb
add
pop
inc
xchg
ss
xor
std
arpl
and
jl
lcall
mov
xchg
out
insb
push
loop
lcall
mov
mov
in
pop
jmp
fwait
mov
pop
shl
addl
mov
cld
outsl
sbb
ret
xor
in
cli
call
mov
scas
mov
push
inc
testb
push
lods
and
sbb
clc
jb
ljmp
outsl
cld
inc
les
jo
sbb
outsb
sahf
inc
bound
push
inc
pop
ds
mov
arpl
das
xor
or
cltd
mov
shlb
jg
rclb
sub
add
mov
out
cmpb
cld
cs
mov
bound
sbb
xlat
in
mov
std
sub
sbb
or
sahf
push
and
js
loop
movl
out
clc
neg
xor
stos
ret
sarb
jb,pt
pop
push
sbbb
outsb
sbb
out
xor
cld
lods
mov
scas
jge
imul
pop
stos
rcrb
ljmp
invd
and
pop
cltd
pop
adc
push
cmp
sahf
mov
add
jmp
jns
jecxz
lcall
fmuls
scas
sbb
adc
sbb
outsl
adc
pop
jl
add
sbb
ja
inc
incl
fnstenv
dec
fwait
push
jp
mov
xchg
cmc
cmp
add
jmp
stos
sbb
testl
test
std
add
xor
rorb
fisttpll
xor
ljmp
or
lods
xor
pusha
loopne
sbb
aam
add
movsl
xor
pop
inc
xchg
pop
sbb
adcw
inc
fstps
sbb
cmp
ret
adc
repz
sbb
xor
ja
filds
stos
test
sub
sub
xchg
jl
dec
mov
pushl
insl
loopne
test
orl
and
fdivl
adc
decl
fsubl
cmp
sub
clc
adc
out
lds
inc
push
ret
jg
dec
fstl
dec
out
jmp
movsb
fildll
sbb
test
jge
mov
mov
fs
push
mov
push
fldl
sbb
out
xchg
xchg
loop
adcl
dec
decb
pop
scas
pushf
cmc
add
imul
or
out
adcb
inc
mov
jge
into
hlt
fs
jnp
jmp
fs
xor
loope
dec
pop
sub
add
mov
les
call
iret
into
cmp
lcall
les
jae
test
decl
nop
push
jge
mov
sub
mov
pop
icebp
call
stc
cmp
hlt
dec
scas
out
movsl
xchg
mov
fbld
mov
add
jbe
mov
inc
ss
lcall
mov
xor
hlt
jno
daa
xchg
xor
sbb
faddp
outsb
std
imul
mov
mov
cmp
push
xchg
cwtl
xor
in
mov
inc
aaa
push
enter
mov
sti
out
jecxz
mov
ret
lcall
jge
or
std
shlb
lods
cwtl
jmp
pop
mov
inc
mov
pop
stos
dec
in
stc
jno
popa
testl
dec
iret
lret
fdivp
sbb
icebp
test
fistl
dec
daa
mov
mov
lods
mov
push
data16
sub
push
fisubrs
pop
sar
jmp
mov
inc
lret
shlb
call
out
call
outsb
test
iret
mov
fstpl
mov
rcll
ret
cmp
incl
cmp
out
push
dec
insl
mov
mov
xchg
aas
dec
popa
incb
inc
stos
lds
int3
sub
ds
jnp
loope
xorb
rol
dec
xlat
jo
pushl
jo
xchg
gs
shrb
ss
pusha
fcoms
adc
into
out
cmpsb
mov
xorb
call
bnd
xlat
inc
cwtl
or
lahf
mov
clc
into
flds
sub
out
jbe
mov
les
pushl
sahf
sbb
mov
loope
sbb
jno
sahf
int3
icebp
in
insl
arpl
xchg
imul
push
mov
decl
aam
sub
pop
sbb
dec
xor
dec
dec
call
pushl
dec
mov
xor
fwait
add
jno
fiaddl
jmp
jae
mov
and
dec
push
and
jmp
int3
xor
loop
pop
subb
cmp
incl
jo
push
and
dec
daa
xor
jb
mov
xchg
andb
decl
push
jl
pop
std
jno
xlat
mov
lods
jecxz
pop
jmp
mov
int
arpl
push
call
rolb
pop
scas
jl
mov
ja
sbb
adc
rcll
ret
call
push
je
sbb
fldl
call
sub
in
sbbb
rcr
dec
pop
mov
sub
mov
xchg
popa
push
inc
sbb
add
cmpsb
cli
jecxz
mov
xchg
test
jmp
decl
pop
cli
jge
mov
iret
shlb
aam
lcall
mov
ret
sbb
or
test
daa
pushf
ret
mov
out
jmp
in
mov
cltd
sub
jnp
ds
mov
cli
push
mov
lock
out
adc
and
cmp
dec
push
jno
push
pop
test
sub
nop
flds
xlat
in
clc
mov
push
or
ret
cltd
mov
cmp
lea
icebp
pop
jmp
roll
xor
decl
loop
outsl
mov
out
loop
sbb
jb
or
jmp
cli
cmp
in
lret
jp
jnp
push
cmp
push
aad
andb
xor
lock
out
daa
testb
ror
sub
cmp
cmp
sub
in
popa
dec
inc
ja
repz
je
jl
pop
int3
mov
icebp
call
adc
sbb
int3
decl
arpl
mov
and
shlb
sbb
cltd
insb
aad
ljmp
jl
xor
leave
sbbl
jno
test
ss
stos
inc
scas
sub
or
jo
sbb
das
or
roll
orb
in
jno
pop
xchg
ljmp
std
or
rcrb
inc
lret
mov
cmp
mov
test
add
add
ljmp
jge
add
and
sbb
sar
pushl
cld
aad
xchg
cs
outsl
scas
insb
inc
inc
sarl
pop
jmp
or
addb
lcall
jmp
jo
push
iret
out
push
adc
aas
pop
sbb
jl
mov
imul
incl
cmp
or
addl
mov
in
decl
xchg
pop
sti
inc
mov
mov
mov
jmp
xchg
orb
jbe
xor
cmpsl
scas
cmp
jnp
push
sbb
push
outsl
lcall
push
xchg
jle
jns
into
dec
movsl
lods
mov
jne
mov
aad
pushl
mov
lods
movsl
xor
or
in
pop
sub
stos
lea
or
xchg
gs
out
mov
repnz
hlt
sub
shlb
ljmp
pop
stos
mov
aas
cltd
or
dec
decl
cwtl
xchg
mov
stos
push
outsb
push
or
add
add
aad
or
mov
and
xchg
push
inc
dec
lcall
jge
hlt
mulb
leave
push
gs
mov
inc
pusha
adc
pop
sbbl
sbbb
sahf
dec
and
pop
inc
sbb
fnstsw
rcl
cwtl
loopne
jnp
pushl
cmp
out
mov
out
mov
out
dec
jb
fisttps
lods
bound
cmp
repnz
int
jo
lds
sub
add
je
addr16
adc
push
xchg
iret
outsl
clc
decl
inc
mov
fwait
out
adc
inc
push
xor
ja
mov
or
sti
out
dec
mov
sub
and
xor
and
fucomip
push
adc
jnp
hlt
sub
scas
clc
fcoml
or
pop
push
hlt
fst
cwtl
rorb
pop
cld
lea
fidivs
ljmp
fnsave
add
dec
mov
call
fcompl
jl
ljmp
sahf
aad
ror
stos
ret
and
jbe
std
cmpb
and
scas
out
fstp
dec
add
add
cmp
adc
adc
stos
sub
je
jns
pop
pushf
cmc
in
decl
xor
pop
mov
mov
adc
repz
cld
sti
jns
cld
pop
shl
add
call
fdivrs
jle
icebp
insb
shrl
pop
hlt
xchg
dec
fwait
mov
xchg
addl
aad
and
fstpt
call
popl
ret
inc
das
jge
dec
pusha
int3
mov
and
aas
test
push
loop
mov
fidivs
cld
call
out
cmp
xchg
scas
repz
ret
pop
mov
mov
push
data16
call
sub
mov
lahf
cltd
xor
aaa
test
mov
pop
jo,pt
lcall
fistl
sahf
sbb
sub
pop
ds
push
arpl
mov
dec
ljmp
add
imul
lock
pop
or
lcall
add
jno
mov
mov
sub
adc
lret
sbb
mov
add
pop
lock
incl
inc
cwtl
fsubrs
pusha
pop
dec
add
fisubl
sbbb
fildll
and
iret
or
mov
fsubl
movl
ljmp
stc
cmp
loop
sahf
call
and
subl
pushf
push
jp
call
push
mov
test
cli
and
jo
data16
mov
sti
cwtl
sub
std
jmp
jg
incl
jbe
sub
xchg
or
scas
xor
mov
pop
out
fadd
jp
cmc
inc
iret
test
sti
into
stc
scas
cmp
mov
sbb
ljmp
cld
pop
xchg
mov
and
or
orb
rcr
xchg
std
dec
js
jp
ljmp
cli
faddl
cmp
mov
stos
xor
inc
and
mov
rcll
iret
outsl
cmp
inc
rcrl
lcall
sub
xor
scas
insl
ret
mov
incl
je
mov
jmp
mov
sbb
mov
adc
ljmp
push
dec
stos
jo
xchg
je
outsl
in
pop
sub
xchg
in
aam
xchg
mov
lret
mov
imul
andl
pushl
mov
cmpsl
testb
mov
insb
or
xchg
pop
imul
pushl
jo
mov
dec
hlt
push
push
jmp
add
repnz
insl
or
jmp
pop
jno
sbb
loop
pop
cmp
inc
imul
push
test
dec
incl
daa
jne
pop
pop
ja
hlt
js
lods
dec
lret
inc
mov
bound
sbb
cmp
iret
ljmp
pand
push
popf
mov
sti
and
incl
rcll
ret
jo
fstps
jg
cmp
inc
mov
push
xchg
scas
mov
fs
call
outsl
test
arpl
subb
idivl
cli
pushl
pop
gs
stos
mov
mov
jmp
mov
inc
fwait
or
jl
add
jecxz
aaa
inc
scas
cmp
pop
in
sar
scas
xor
lcall
or
and
and
test
sub
lcall
sbb
push
rorl
mov
push
mov
out
inc
enter
cmc
aaa
lret
hlt
test
popa
addb
inc
xor
test
jmp
sbb
cmp
push
sub
fcompl
inc
add
fisttps
xchg
inc
xor
push
jg
sub
sti
push
jns
push
out
mov
popa
adc
lcall
ljmp
sbb
rorl
mov
mov
and
out
clc
jmp
pop
loop
cld
out
ljmp
repz
dec
push
ret
xchg
push
xor
popf
ljmp
adc
popa
or
dec
cmp
xchg
dec
mov
xchg
cltd
pop
pushf
lahf
sbb
fcomip
pop
fidivl
rclb
les
sbb
inc
jl
sarb
inc
cmpsb
insl
cltd
fs
aaa
xchg
xchg
sub
stc
mov
xchg
fstpt
test
xchg
dec
jg
hlt
mov
inc
push
loop
int
pop
insb
lods
cltd
jbe
or
push
mov
dec
leave
rcl
mov
sbb
or
jmp
rcrb
setle
adc
fs
sub
sbb
pop
lods
xchg
or
push
xlat
mov
mov
out
adc
jg
ss
pop
push
mov
ss
mov
stos
sub
xchg
inc
dec
pop
jecxz
fldl
inc
dec
icebp
dec
mov
mov
in
into
psubusb
stos
push
inc
push
movsl
insl
cmc
jmp
xor
repnz
cmp
dec
fnstenv
xchg
mov
movsb
into
xchg
in
jge
adc
pushl
mov
xchg
insl
mov
shrb
mov
xor
cmp
inc
pop
xlat
cmp
call
lret
sbb
dec
repz
jp
cmp
sbb
ljmp
and
jmp
xor
icebp
imul
fwait
sbbb
jmp
filds
es
stos
loopne
sbb
fldl
je
gs
or
or
jl
iret
add
add
sub
into
jge
lods
jg
lcall
mov
lock
mov
mov
xchg
mov
sub
hlt
aam
or
das
sar
fldt
loope
mov
add
out
jp
adc
std
mov
add
int3
outsl
jno
push
and
xor
std
jg
xor
add
mov
and
pop
pushl
add
dec
inc
mov
mov
mulb
mov
mov
cli
mov
lcall
out
popf
ss
pop
xor
pop
in
or
jo
pushf
dec
xchg
cmpsb
subl
dec
lcall
mov
mov
mov
dec
clc
jnp
jp
jne
fstl
nop
bound
inc
shrb
cmp
sub
call
push
cmp
in
cmp
adc
mov
jbe
inc
mov
clc
mov
enter
out
adc
push
xlat
ret
arpl
mov
movsb
cli
inc
jp
inc
pushf
sbb
scas
fisubl
mov
les
incl
aas
mov
or
jns
ret
push
or
inc
jno
test
and
jg
jae
shlb
jbe
adc
pop
das
outsl
cmpsl
sahf
fbstp
popl
pushl
xchg
bound
add
push
sahf
stc
and
fs
stos
xorb
mov
lock
sub
pop
dec
leave
xor
add
mov
lret
push
xchg
pushl
insb
test
xchg
pop
xlat
popf
jge
mov
jecxz
test
js
cmp
sub
cmp
lcall
mov
dec
sbb
push
pop
pop
xor
inc
icebp
mov
jl
aam
pop
xchg
sti
and
xchg
jmp
or
dec
imul
lcall
sbb
xlat
jns
jge
cmpsb
jmp
dec
loope
mov
ret
push
mull
orl
cmp
mov
sub
push
rorl
cld
lcall
adc
fnstenv
shlb
repnz
popf
dec
fstl
shlb
pop
dec
incl
fs
push
mov
inc
pop
xor
out
aam
imul
fidivs
cmpsb
pop
add
pop
fisubrl
aam
ret
call
int3
adc
inc
mov
mov
jmp
push
faddp
test
jmp
iret
dec
pop
jb
sbb
adc
mov
lock
mov
mov
fisttpl
cld
in
or
jg
xor
insb
into
xchg
jne
push
push
lret
cld
and
pop
xor
sbb
xchg
out
sub
insl
jge
gs
inc
sbb
cmp
addr16
xor
mov
stos
jb
pushl
ja
and
add
xor
sub
aas
outsl
data16
mov
push
lcall
sub
lea
sub
lods
dec
jbe
xchg
xchg
and
jmp
dec
and
sbbl
inc
or
stc
test
xchg
push
pop
std
pushl
sbb
fnsave
rorl
ds
repnz
mov
dec
inc
flds
pushl
push
adc
mov
data16
movsl
jb
subb
mov
pop
incl
aad
negb
pop
mov
jg
cmpsb
dec
nop
fcomp
ljmp
jnp
jecxz
mov
add
in
idivb
sub
mov
outsb
dec
xchg
push
dec
push
mov
sbb
incl
aam
jge
loopne
frstor
outsb
in
leave
lock
in
fstps
insb
mov
pushf
lea
lret
incl
push
popa
cmp
scas
add
sub
movsb
call
inc
push
mov
stos
mulb
jbe
mov
in
dec
push
mov
sbb
jne
into
dec
ficoms
call
cli
test
and
ret
js
and
test
lcall
pop
fisubl
push
xchg
and
push
and
sub
call
adc
xchg
dec
popa
andl
popf
xor
add
push
imul
btc
and
decl
call
subl
gs
shll
hlt
dec
scas
jo
add
mov
cmc
sbb
sbb
call
push
sub
lahf
pop
push
sub
cwtl
std
lcall
mov
and
pop
ljmp
sahf
inc
lea
lea
ljmp
or
pop
and
sar
pop
jo
mov
mov
popa
xchg
jnp
mov
incl
mov
inc
sbb
adc
sti
dec
xchg
scas
or
lods
repnz
and
shll
lods
aaa
fimuls
jmp
xchg
fs
inc
push
xor
mov
out
jecxz
pop
cmpsb
inc
dec
jno
cmp
push
inc
data16
out
imul
pushl
sbb
andl
hlt
jge
call
cmp
icebp
sub
inc
pop
mov
jmp
and
dec
in
mov
or
inc
sbb
jmp
jnp
lahf
aaa
cmp
jmp
or
imul
adc
iret
es
pop
xchg
sbb
mov
or
jmp
lret
incl
cs
add
cld
aam
inc
xor
pop
or
lret
pop
nop
pop
pop
inc
jmp
jbe
mov
or
mov
push
jno
gs
or
pop
out
lret
cmpb
inc
pushf
daa
or
push
mov
pushf
cltd
add
int3
or
mov
push
insl
lcall
pop
popa
and
inc
call
nop
loop
push
loope
cmp
jmp
pushf
add
loope
ds
data16
adc
lahf
pop
dec
aad
push
jne
jg
or
pop
xor
pusha
jecxz
cmp
fmull
popf
loopne
inc
call
xorb
loop
std
push
or
repnz
jge
lods
xor
hlt
cmp
repnz
pop
adc
or
test
xor
or
lcall
inc
dec
pop
sbb
mov
add
mov
hlt
sub
enter
lcall
adcb
and
add
out
insl
pop
sub
js
mov
dec
ljmp
rolb
adc
cmp
fildl
int3
and
xchg
mov
fcom
ja
lret
decb
dec
mov
shlb
mov
adc
movsb
push
decl
mov
mov
movb
mov
and
inc
jge
inc
push
hlt
fs
outsb
sbb
dec
outsl
cmp
jbe
xchg
sub
movsl
aad
cs
mov
jmp
idiv
sub
lds
xlat
std
mov
add
dec
ljmp
sti
dec
pop
shll
orb
sub
dec
leave
or
add
in
out
cs
mov
pushf
push
outsb
pop
adc
mov
cli
repnz
xchg
pop
arpl
das
sar
ss
pop
stos
pusha
or
sub
dec
jp
fnstsw
cmp
pop
pushf
ja
daa
adc
sbb
and
lods
mov
ret
frstor
ds
filds
dec
out
in
or
dec
sub
sub
decl
leave
popa
iret
adc
outsl
js
sub
lea
cmpsb
int3
cli
sbb
dec
lods
fcomip
incl
fiadds
jp
push
sarl
xor
test
push
and
and
jle
std
xor
dec
add
adc
fisttpl
lret
stc
mull
loop
test
stos
inc
cmpsb
dec
ds
mov
ljmp
data16
pop
aam
je
insb
mov
dec
jle
pop
je
clc
shrb
add
pusha
out
clc
jmp
loope
push
sahf
outsb
adc
cmpsb
ljmp
jmp
jns
push
jle,pn
mov
mov
hlt
idiv
aas
ret
jecxz
fisttps
jae
xor
out
test
and
pusha
and
pop
aam
cmp
adc
imul
mov
push
insb
faddl
xchg
or
sub
mov
scas
push
cmp
inc
pop
mov
push
push
and
incl
mov
sub
jb
dec
push
andl
pop
adc
mov
subps
mov
jne
popl
xchg
jo
jo
outsb
lret
mov
cwtl
loopne
mov
fwait
cmc
aas
aaa
shrb
xorb
ret
loope
call
addr16
mov
jge
xor
stos
jno
jp
adc
repnz
mov
jmp
dec
leave
out
cli
and
push
sbb
das
adc
xor
cmp
pusha
test
stos
loope
pop
xchg
lret
ficompl
cli
leave
das
and
xchg
stos
int
sbb
call
add
jnp
jbe
mov
jmp
or
pop
sti
lcall
add
lds
fiadds
dec
mov
call
and
mov
xchg
pushf
mov
imul
xor
mov
jecxz
jg
add
push
xchg
stc
lock
call
jge
lahf
je
les
repz
xlat
call
push
scas
xor
and
pop
imul
ret
push
out
xchg
fnstcw
out
or
push
or
or
stos
mov
sub
xor
jg
xchg
sbb
push
inc
adc
inc
and
addr16
jle
ss
adc
push
ds
sti
cmp
arpl
jmp
lods
mov
fwait
int3
dec
mov
push
sub
fisubl
mov
pushl
les
nop
xor
popl
lcall
js
mov
iret
mov
mov
jl
lret
shrl
das
push
push
jecxz
xchg
ficompl
shrl
mov
pushf
xchg
cmp
jno
add
mov
in
adc
mov
add
icebp
mov
fdivr
ss
repnz
ret
cli
cmp
lcall
popa
pop
loope
mov
jle
or
shr
pop
adc
daa
gs
cmc
out
call
push
shrb
les
mov
out
scas
inc
mov
pushf
fwait
and
sub
stos
decb
add
shrl
shrb
mov
or
mov
cmp
push
fxch
mov
mov
ljmp
push
aam
data16
cli
movsl
sbb
jle
inc
ljmp
enter
inc
fmuls
stos
into
pusha
out
push
and
call
mov
jg
jmp
clc
mov
or
dec
int3
pop
xor
push
pop
mov
cli
pop
mov
lods
enter
adc
fcmovu
xchg
cmp
add
mov
lods
popa
movsl
adc
es
dec
push
fisubs
push
mov
fcomip
mov
inc
mov
mov
or
pushl
fcmovnbe
std
icebp
mov
lret
aas
out
leave
popf
les
call
pop
adc
ja
loope
push
push
dec
inc
out
fstp
rclb
lea
mov
push
pushf
flds
xor
xchg
mov
shr
out
sub
mov
aaa
xor
or
dec
mov
or
jmp
insl
push
cmpsb
lock
adcb
insl
mov
lcall
and
in
sahf
cltd
enter
fnstsw
ljmp
inc
leave
hlt
imul
lahf
das
shl
nopl
fs
dec
push
jmp
xchg
les
mov
in
xor
xor
aam
cmpsl
lock
mov
das
jl
loope
std
ret
add
in
mov
pop
arpl
dec
es
mov
xor
pushl
sbb
or
pop
add
mov
in
xchg
clc
jl
push
aad
ljmp
decl
ss
mov
mov
dec
mov
cmp
imul
ja
mov
loop
mov
in
stos
lret
ljmp
push
movsl
cmc
lods
inc
call
test
mov
loopne
jle
popa
xchg
push
ret
out
shrl
lods
repz
mov
aam
xchg
pop
daa
aam
int
jb
mov
incl
mov
adc
lahf
in
hlt
mov
or
popf
add
sub
xor
fcomip
jmp
test
mov
rcrl
cmp
xor
adc
out
cli
incl
cmc
xor
sbb
lods
pop
aad
pop
and
jmp
add
and
adc
shlb
mov
jbe
les
loope
loopne
scas
cmpb
add
cmp
arpl
incl
cmpl
mov
pop
adc
test
inc
adc
mov
push
movsb
mov
test
push
add
add
xlat
sub
jmp
jle
lods
iret
movsl
lods
imull
xor
sub
xlat
enter
call
jns
push
xor
jle
sub
push
outsb
jo
mov
mov
adcb
sub
mov
data16
aas
lods
mov
fisubs
pop
or
mov
andl
icebp
xchg
aas
or
mov
mov
jo
pop
stc
pmullw
xchg
or
jmp
mov
xor
push
jb
call
ret
and
jno
leave
pop
call
inc
mov
das
pop
dec
cmpsb
fisttps
pop
pushf
jae
in
ficomps
mov
and
cmp
jecxz
push
lds
scas
cwtl
push
stc
push
mov
add
push
or
mov
sbb
ret
cmpsb
popf
aas
mov
icebp
sbb
mov
test
decl
out
outsb
or
scas
cli
stc
ja
push
pop
mov
and
xor
incl
pop
pop
mov
cs
add
mov
loope
xlat
sbb
fldt
jmp
jmp
scas
jne
and
rolb
imul
pop
fdivl
jne
and
xlat
jmp
push
jmp
mov
xchg
leave
fs
pop
aas
fiadds
fldenv
in
mov
aam
sbb
in
jmp
bound
rorb
sahf
lods
xchg
mov
push
xor
gs
add
xor
fldenv
pop
fidivl
repz
push
cmc
in
cli
rcrb
popf
es
xchg
adc
fstpt
lea
enter
dec
mov
mov
leave
enter
or
cbtw
shll
jmp
dec
pop
or
adcb
dec
jbe
mov
or
sub
and
call
test
inc
insl
daa
std
fists
loop
inc
xchg
cmp
jno
add
cld
cmpb
ret
jne
dec
cmp
lea
jno
out
xchg
cmpsl
movsl
xor
inc
int
iret
cld
xchg
fcmovnbe
mov
pushl
push
test
ret
pop
xchg
pop
cmp
call
dec
push
cmp
cmp
out
pop
push
les
shll
bound
jl
jmp
push
clc
push
adc
xchg
adcl
jnp
sahf
mov
rorl
jns
test
out
dec
sub
ljmp
xlat
ret
dec
and
ffreep
xchg
or
icebp
mov
push
std
ljmp
int
dec
sub
cmp
xchg
and
arpl
cmp
cmp
adc
sbb
cmp
sub
push
push
jg
jg
das
cs
loop
jns
sub
mov
loop
mov
pushl
dec
movb
paddsw
xor
idiv
ljmp
cmp
push
lret
xchg
out
pop
bound
sub
push
mov
dec
pop
xchg
popf
jge
lcall
shr
cli
mov
sbb
and
xchg
jecxz
ror
fcomip
popf
mov
dec
ss
push
cmpsl
mov
dec
cmp
inc
mov
jbe
data16
jno
ret
fs
mov
rclb
fcomip
mov
fmuls
sbbb
jo
adc
sbb
iret
pop
mov
mov
lea
scas
push
adc
jge
jno
faddl
xchg
adc
out
imul
cmpl
xchg
int
repnz
mov
imul
lcall
cmpb
cmp
cld
loop
and
fcos
pop
hlt
push
fsubs
push
nop
fwait
pop
sub
mov
in
and
and
or
ja
dec
ficoms
mov
cltd
addb
scas
or
xchg
mov
push
sti
shlb
or
xchg
faddl
inc
stc
pop
lock
fwait
cwtl
dec
adc
data16
and
and
into
imul
call
hlt
jae
test
pushf
clc
cmp
loopne
sub
push
es
mov
jg
jnp
data16
sar
add
pop
cltd
jno
les
in
iret
and
decl
aam
sti
notl
hlt
and
aaa
mov
inc
pop
loop
cmpsb
jp
mov
jmp
icebp
sbb
out
jno
fstps
pop
push
ss
cmp
jo
cmp
pushl
xchg
aaa
jecxz
popa
jne
mov
jnp
mov
inc
inc
pop
pop
lcall
loope
decb
jg
decl
cli
mov
out
add
sarb
pop
pop
mov
jmp
addr16
movsl
arpl
sub
push
lret
es
scas
mov
push
js
push
cmc
aam
sbb
mov
add
pop
pop
jp
out
pop
lds
sbb
push
cmpsb
cmp
bound
insb
incb
mov
out
aam
dec
mov
cmp
insl
aam
cmp
push
fidivs
cmp
adc
fcomps
clc
out
lods
aaa
dec
sbb
out
cli
fiaddl
and
mul
out
adc
push
data16
or
insl
adc
ljmp
iret
adc
xlat
jp
std
jo
lods
or
cmc
aas
jo
dec
jb
or
pushl
iret
mov
pushf
addr16
xor
push
les
insb
repnz
or
pop
mov
out
dec
lock
in
mov
lcall
iret
rcll
push
in
inc
inc
add
jmp
push
in
clc
ftst
xchg
cmc
test
clc
cmpsb
and
imul
dec
sbb
decl
and
mov
arpl
jg
push
add
in
je
jecxz
repnz
ss
cld
incl
dec
mov
enter
mov
imul
pop
jle
das
sar
les
pop
pusha
pop
cld
fiadds
enter
icebp
cwtl
cmc
call
pushl
xchg
cltd
mov
in
push
pop
bound
mov
ret
xchg
fldt
push
ret
dec
incl
notb
stos
icebp
cld
fisttps
jbe
dec
adc
das
and
jg
dec
mov
mov
push
test
sti
add
adc
sub
out
addb
dec
incl
gs
fisttpll
and
cmc
sub
popa
loope
leave
dec
arpl
push
in
lret
mov
decl
scas
add
mov
push
in
adc
mov
js
add
push
add
das
inc
incl
mov
push
rorl
adc
lock
jle
mov
pop
xlat
leave
pushf
xchg
xadd
jg
call
xor
mov
jg
mov
mov
and
enter
out
mov
dec
xor
scas
jecxz
lcall
in
andl
ret
jns
jae
hlt
push
xchg
pop
xchg
sbb
inc
and
in
adc
adc
push
mov
jmp
stos
cli
sub
mov
dec
in
inc
dec
xor
into
mov
lods
pop
mov
cmp
std
sbb
loope
sbb
cs
cs
gs
cmp
or
ljmp
push
fildl
inc
xor
sub
inc
into
js
dec
sbb
fbstp
insb
push
incl
ret
inc
pcmpgtd
inc
sub
call
jg
sub
xchg
inc
inc
mov
rcr
or
gs
adc
jmp
loope
mov
bound
or
pop
fisttps
jecxz
push
mov
dec
jb
jmp
lcall
mov
lahf
cmp
cmc
add
es
ret
add
daa
xchg
mov
pushl
aad
inc
lret
xor
cmp
mov
jbe
out
or
add
flds
inc
in
fwait
icebp
dec
lret
mov
dec
pop
into
cmp
push
sub
mov
sbb
push
sub
pop
ja
sbb
sub
orb
lods
bswap
icebp
lcall
mov
inc
ret
movsb
xor
pop
sub
shl
jno
dec
sbb
or
js
jmp
out
lcall
ja
test
add
fucomip
mov
cmp
movsl
jmp
mov
daa
les
mov
jge
mov
inc
fisubs
xchg
add
repz
sarb
adc
call
jmp
xor
sar
pop
push
push
jmp
pop
call
incl
pop
out
test
sti
sub
push
mov
hlt
dec
sti
xor
out
pop
stc
fwait
and
loopne
or
dec
in
xor
push
outsb
mov
clc
daa
popa
cwtl
dec
cmp
add
mov
mov
cmp
fwait
jae
mov
jmp
clc
dec
jp
clc
mov
imulb
fcmovne
cmp
fbstp
fldcw
sub
lock
incl
mov
add
and
rolb
gs
xor
mov
fwait
jge
cmp
xchg
jmp
fldt
leave
pop
add
xor
pop
shll
stos
dec
fwait
sbb
mov
imul
adc
lcall
cmp
daa
inc
add
imul
lahf
mov
popf
into
andb
xor
push
adcb
sub
cli
push
cwtl
and
sbb
inc
add
lahf
iret
jg
decl
jecxz
or
fsubrs
jae
sbb
mov
orb
mov
testl
jp
mov
xchg
shll
or
inc
roll
scas
dec
mov
pushl
xchg
ficoms
mov
jne
adc
cmp
lret
adc
jecxz
and
aas
push
fs
popf
popf
or
or
push
adc
test
mov
pushf
adc
fiadds
insl
lret
lret
pop
adc
into
pop
fs
mov
mov
into
add
push
pop
sbb
outsl
sub
jmp
or
mov
lods
ficomps
test
push
loopne
pop
cld
mov
fucomp
aas
call
sbb
movsl
mov
push
inc
cmp
lcall
inc
dec
push
inc
pop
movsb
inc
and
jb
mov
cltd
dec
ret
nop
stos
std
outsl
movsb
mov
jle
xor
dec
jle
mov
push
lcall
popa
sbb
mov
ja
sbb
jns
xchg
cmp
jae
pop
mov
ret
mov
out
inc
loop
add
cwtl
add
mov
push
xchg
decl
fdivl
pop
fs
cmpsb
mov
lods
ret
negl
push
or
xor
cmp
push
shll
sbb
or
cmc
leave
imull
jmp
mov
mov
popf
gs
sbb
pusha
dec
adc
scas
or
pop
cmp
popa
dec
lods
adc
ja
movsb
mov
mov
xchg
call
cli
sbb
cli
cli
mov
loope
cltd
push
sbb
adc
fisubrs
decl
adc
jmp
sub
sbb
mov
jb
sahf
mov
call
adc
jno
or
dec
mov
xor
pop
or
add
add
inc
int3
cmc
scas
sub
js
sbb
clc
popf
inc
mov
jmp
pop
xorl
negb
cwtl
cmp
nop
sahf
outsl
mov
push
inc
or
aad
mov
inc
mov
lcall
jbe
mov
pop
dec
icebp
mov
mov
mov
popl
push
push
adc
loop
incl
js
insb
stc
outsl
cmp
pop
int3
pop
sub
icebp
push
inc
jbe
addr16
ss
ds
xchg
int
fimull
pop
ja
xchg
push
cmp
adc
icebp
cmp
or
jo
cmp
pushf
and
in
pop
mov
xor
push
test
arpl
in
movsb
inc
hlt
shll
jae
enter
cmp
incl
mov
jne
ret
push
nop
sub
inc
mov
xchg
sub
mov
decl
ret
inc
cmpl
inc
les
or
xor
dec
xchg
add
and
adc
push
ljmp
sarb
xor
push
sub
mov
fistpl
call
sysenter
jb
es
icebp
lret
lds
inc
das
jne
int
mov
or
xchg
push
lcall
and
lds
call
dec
xchg
adc
adc
jo
xor
incl
aad
or
shlb
popa
shlb
mov
pushl
es
cmp
clc
lods
cmpsl
xor
mov
pop
addr16
mov
pop
lock
mov
lret
xchg
cs
xchg
dec
push
cld
mov
mov
cltd
leave
loopne
mov
incl
fsub
dec
scas
sbb
in
cltd
aad
shll
imul
lods
aam
outsb
xchg
stos
add
pop
dec
mov
push
hlt
ljmp
jp
fidivs
sti
mov
enter
jmp
dec
inc
sub
enter
and
push
mov
imul
add
push
imul
hlt
mov
mov
xchg
mov
dec
sub
pop
push
outsl
out
pop
adc
arpl
mov
lcall
insb
cmp
xor
nop
inc
loopne
or
rcll
push
inc
or
hlt
insl
mov
iret
hlt
js
lock
imul
aad
jge
cmp
jg
in
es
nop
aas
outsl
mov
push
mov
ljmp
test
xchg
ja
pop
dec
lea
or
push
movsb
loopne
fdivrp
add
mov
mov
cmp
inc
pop
jno
ficompl
mov
clc
sub
loopne
inc
cmp
addr16
or
jmp
mov
jp
out
and
jecxz
into
xor
imul
inc
sti
mov
enter
vandps
lahf
pop
insl
jmp
adc
sbb
jb
shl
jg
jg
sub
ja
xchg
push
popa
movsl
pop
mov
cmp
ss
arpl
adc
mov
fiaddl
scas
pop
pushf
bound
xor
cwtl
gs
sub
shrb
xchg
es
fiadds
jle
xchg
outsb
push
or
rcrl
sbbb
mov
pushf
daa
sub
outsb
mov
cmp
lods
xchg
imul
out
mov
subb
ljmp
roll
push
mov
sub
aaa
xlat
add
jg
mov
popa
ljmp
sbb
ljmp
mov
shll
sub
enter
mov
mov
and
inc
cmpsb
dec
add
loopne
iret
add
mov
rolb
add
cli
inc
or
or
xchg
xchg
out
sti
xchg
dec
inc
pop
mov
lods
ljmp
fnstenv
sbb
lock
jecxz
lods
aad
fadd
scas
or
incl
sub
les
sbb
mov
sbb
xor
fdivr
pushl
test
test
xchg
imul
fs
stos
rclb
dec
jmp
or
cmp
es
call
clc
dec
sahf
pushf
cld
test
cltd
out
rcrl
and
mov
movsb
sbb
fstp
test
adcl
call
add
xchg
inc
test
sbb
stos
data16
dec
xchg
dec
es
ljmp
mov
jecxz
les
mov
sti
pop
fs
ss
adc
outsl
push
mov
pushl
sbb
push
xor
xchg
stos
cmpsb
mov
push
or
xor
cmc
lea
xchg
lahf
iret
pusha
mov
out
lea
pop
test
lds
pushl
mov
xchg
sbb
xchg
cmpsb
leave
in
addb
std
out
icebp
fwait
push
mov
clc
jo
stos
jmp
lods
xchg
sti
addl
push
xchg
je
cmp
pop
push
sub
int3
fmull
decl
rcl
out
out
lret
mov
push
dec
sbb
stos
jo
in
mov
inc
jg
fstl
movsb
fdivr
push
fnstenv
fildll
mov
pop
sbb
jbe
ret
out
fidivrs
cld
cs
sbb
aad
movsl
jp
and
jp
or
dec
int
inc
int3
mov
sbb
imull
adcl
daa
movsb
clc
cmp
jmp
pop
mov
and
xor
sbb
fcoms
loope
mov
ljmp
loope
aam
sarl
fst
pop
xchg
pop
mov
ljmp
aad
jge
dec
ret
sub
sahf
bound
repz
inc
mov
adc
cltd
test
data16
arpl
pushf
push
call
lock
inc
fdivr
ljmp
or
cmpsl
cmp
jo
aaa
movl
arpl
leave
sub
cli
jmp
lret
xchg
sbb
sub
cltd
jne
mov
outsb
daa
icebp
lret
int
mov
cmpsl
mov
aaa
adc
lahf
add
rorb
adc
loop
icebp
jg
decl
sub
rcrb
jl
cmp
daa
outsl
mov
push
je
repz
jp
bound
call
popf
pop
mov
aam
dec
popf
mov
faddl
scas
or
loope
inc
sub
pushl
scas
and
xor
les
jns
sub
stc
mov
dec
dec
ss
pop
mov
or
pmulhw
cmp
lret
fst
movsl
daa
push
leave
pop
shrb
cli
outsl
out
shrl
bswap
lea
add
int3
lret
in
cmp
sti
insl
out
mov
add
jno
pop
shrl
cwtl
lea
test
std
dec
cmp
repnz
gs
mov
or
or
ljmp
sub
std
jg
jae
sub
cwtl
xchg
jbe
sub
pop
cld
mov
mov
call
sahf
mov
fisubrl
nop
push
in
mov
sbb
push
icebp
mov
xchg
sbb
int3
out
push
sti
fwait
incl
mov
movsb
inc
dec
jge
cltd
pop
lcall
ret
mov
mov
out
stos
out
call
stos
jg
dec
fldenv
jp
loopne
pop
repnz
mov
mov
and
dec
into
lcall
mov
stos
cmp
sbb
xchg
dec
lret
sbb
stc
call
dec
inc
inc
jnp
mov
adc
hlt
mov
lret
fsts
inc
in
stos
rolb
mov
shlb
in
cmp
sbbb
mov
pushl
add
lahf
mov
dec
movsb
sub
scas
lods
cmpsl
rcl
decl
xor
gs
push
pop
xchg
mov
push
enter
cmc
leave
xchg
or
mov
aam
dec
in
sub
cmp
lcall
push
inc
gs
dec
test
xchg
cmp
jmp
jmp
and
dec
jg
imul
and
aas
jne
xchg
decl
sti
add
ja
jns
icebp
mov
and
add
push
movsb
cmpsb
pop
shr
cmpsb
ret
pop
sbb
pop
stc
add
lcall
add
movsw
outsb
jb
add
pushf
aaa
mov
cltd
jg
pop
push
scas
push
ret
inc
jg
pop
out
mov
jecxz
xor
ljmp
sbb
incl
xchg
ljmp
out
adc
aad
sub
bound
jo
std
sar
mov
mov
or
cmp
mov
mov
xor
call
enter
sbb
jecxz
in
cld
cmp
loop
js
mov
xchg
jg
insl
mov
add
shlb
cs
push
clc
xchg
jmp
mov
adc
out
imul
lret
jg
or
xchg
aas
rcll
pusha
push
repnz
movsb
dec
scas
push
add
cmp
loopne
sti
ds
ffreep
cld
jb
decb
incl
and
fimuls
clc
pusha
pop
pushf
mov
sub
insb
mov
mov
out
mov
jmp
aam
notb
ljmp
clc
mov
shll
incl
push
in
sbb
push
xchg
test
into
or
mov
lcall
adc
xor
out
daa
cltd
push
mov
pop
sub
fildl
das
mov
mov
xchg
push
add
repz
mov
cmp
sbb
incl
mov
mov
cmp
repnz
ret
xor
lods
jo
add
mov
inc
sub
out
es
xchg
mov
dec
setb
incl
pop
push
ss
dec
sub
adc
sarl
mov
xchg
cmp
mov
mov
pushl
decb
or
insl
das
push
stc
lods
jae
shr
test
lahf
sub
ljmp
pop
repz
mov
jbe
xor
sbb
fcomip
inc
fldcw
wbinvd
shl
jbe
adc
sbb
imul
loope
sub
decl
mov
leave
dec
sahf
xchg
lcall
mov
int
xor
and
clc
pop
loopne
lods
dec
bound
adc
stos
jmp
push
ljmp
push
daa
mov
jmp
add
aad
mov
adc
int3
lret
mov
out
mov
sahf
xlat
movsl
inc
bound
jge
pushf
jbe
add
or
lret
incl
pop
mov
jp
sti
sbb
mov
dec
jge
xor
push
mov
mov
std
fldenv
call
cmp
jl
dec
aaa
bound
dec
mov
ljmp
fs
loope
push
iret
daa
or
mov
stc
les
pop
add
fimull
mov
repnz
incl
xor
stc
mov
pop
push
cmp
inc
cltd
jne
outsl
mov
sar
jg
call
mov
pop
sahf
filds
sarl
mov
lcall
xlat
outsb
mov
ljmp
out
xor
in
imul
stc
mov
ljmp
and
mov
jo
int3
shl
sahf
cmp
outsl
cmpsb
data16
xchg
ret
in
mov
ljmp
lock
inc
fninit
imul
and
mov
push
int3
fists
mov
decl
mov
pop
inc
int3
ffree
xor
mov
enter
mov
xchg
mov
pushl
mov
lret
scas
clc
sub
mov
fcomip
inc
inc
jg
sub
ja
test
out
and
mov
jns
fbld
aad
sbb
add
pop
jl
fimuls
mov
xchg
test
push
mov
pop
bound
nop
mov
imul
pop
addr16
incl
push
adc
add
fmuls
or
sti
xchg
pop
fcomps
je
xchg
jle
test
inc
cmp
or
lds
xchg
xchg
sbb
scas
out
popl
push
sbb
js
movsb
inc
mov
jp
cli
por
sbb
loope
negl
cmp
xchg
dec
andl
insb
daa
lea
aad
lahf
mov
jge
out
sahf
sbb
ljmp
lcall
ljmp
push
cmp
arpl
dec
ret
stc
mov
sti
in
ret
les
push
add
mov
mov
addr16
lock
hlt
fbstp
and
jo
xor
popf
je
cmp
insl
sbbl
mov
inc
sti
and
lods
sbb
das
subl
mov
xchg
fiaddl
lcall
sub
xchg
sub
and
popa
mov
xlat
imul
idiv
jmp
subb
call
mov
fidivrs
lcall
out
jecxz
sub
mov
fidivl
and
rcll
xchg
decl
mov
int
test
loop
jl
and
addr16
lret
mov
dec
and
pusha
sbb
lahf
popa
cld
std
mov
xchg
je
out
out
rcrb
js
sub
mov
jecxz
call
sub
mov
filds
dec
test
add
test
mov
sub
outsl
pop
decl
mov
mov
xchg
xlat
push
into
jno
mov
add
jae
adc
pop
mov
lret
incl
jns
inc
inc
xchg
mov
jbe
jno
out
mov
pop
iret
mov
movsb
stos
mov
adc
arpl
dec
xor
sub
add
lods
movsb
cmp
aaa
lret
cli
cmpsl
pusha
lcall
int
push
shll
sub
cmp
inc
insl
pusha
mov
push
jbe,pt
rclb
pop
jp
stc
out
xchg
dec
dec
aam
int
xor
inc
sub
subb
fcomip
sub
lock
dec
lods
incb
cld
cwtl
outsl
incl
addr16
mov
out
sbb
xor
cwtl
and
pop
lcall
ljmp
out
cmp
mov
mov
lods
outsb
je
dec
arpl
adc
adc
imul
or
stos
inc
jecxz
movsl
cwtl
mov
paddusw
repnz
xchg
push
push
xor
add
jns
mov
and
or
ss
movsb
lret
xor
cmp
add
cld
sub
popa
sub
pop
sub
push
adc
add
push
lret
imul
stos
xchg
shll
es
inc
sbb
and
mov
add
clc
xchg
outsl
pop
xchg
test
setp
or
jp
xchg
sub
pusha
push
fcompl
pusha
pop
cmp
ljmp
jns
das
cmpsl
hlt
dec
jecxz
sbb
pop
or
loope
xor
loope
and
incl
enter
scas
lea
stos
mov
ja
aam
imull
testb
dec
push
jmp
mov
mov
pop
jp
es
pop
mov
xor
stc
dec
aas
andl
add
inc
inc
aaa
lret
aad
test
adc
leave
int
mov
orb
inc
jg
cmp
je
adc
addr16
stos
pusha
add
dec
out
mov
aaa
jmp
or
xchg
lcall
ja
scas
xchg
leave
mov
call
aas
stos
inc
loop
or
jne
adc
lea
mov
mov
std
mov
call
out
xlat
pop
xor
jg
pusha
pushf
jmp
xchg
push
jnp
jmp
dec
add
pop
sbb
inc
addr16
pushl
push
mov
and
pop
mov
ss
lcall
into
js
ja
cli
push
iret
in
cltd
pop
jmp
or
push
inc
cli
cmp
decl
ss
mov
push
dec
mov
sti
xchg
jo
pusha
sub
mov
pusha
cmp
and
popf
mov
mov
cmpsl
movsb
mov
jmp
js
jae
orb
xchg
jo
outsl
fst
mov
pushf
add
cmpsb
and
in
popa
pushl
shr
out
rorb
mov
push
inc
push
cmpsb
xchg
fdivs
push
jne
addl
push
mov
push
das
push
mov
mov
lea
cmp
pop
cltd
cwtl
lret
pop
sub
decl
and
lods
fstl
mov
or
cmp
mov
inc
inc
mov
fwait
lret
es
pusha
xchg
stos
rolb
rcrl
push
das
mov
and
add
xor
mov
enter
inc
xchg
inc
les
pop
imul
cmpsb
loopne
call
mov
cmp
in
push
imul
jle
mov
dec
dec
loop
pushl
add
push
in
dec
inc
fdiv
cmpsl
mov
inc
in
rcll
push
popa
push
ss
int3
dec
inc
je
sarb
shl
shl
jmp
lods
aam
mov
stos
fisubl
gs
mov
test
stos
pop
sub
cmp
cmp
or
mov
mov
daa
jmp
mov
test
daa
pop
cltd
aas
loope
cmc
sub
int3
sbb
daa
stos
xchg
adc
cmp
push
cmp
and
sub
pop
gs
sbb
cwtl
cli
pop
cmp
sbb
cmp
fsubrp
pop
pop
inc
imul
sbb
jl
dec
inc
int3
push
cld
scas
loope
mov
test
jg
push
dec
jnp
jl
mov
mov
imul
incl
popf
mov
mov
pop
iret
jnp
sbb
mov
xlat
push
nop
mov
dec
dec
pushl
scas
sbb
jmp
jmp
incl
bound
jne
or
mov
enter
std
sbb
lock
call
cmpsl
lcall
inc
fs
iret
scas
imul
push
ret
jecxz
mov
adc
out
out
cwtl
cmp
js
jbe
or
out
cmpsl
cli
xchg
and
and
or
mov
cmpsb
push
mov
jl
int
lahf
mov
notb
pop
inc
adc
push
mov
cmp
mov
fistps
scas
jae
sbb
dec
sahf
cmp
call
je
or
mov
clc
decl
jmp
loopne
cmc
xlat
sbb
and
repnz
pushl
fidivrs
mov
push
pop
inc
stos
adc
mov
xor
dec
sub
lcall
decb
addr16
xor
inc
ficomps
shll
std
incl
add
add
jg
mov
xor
mov
call
sub
sbb
push
mov
cmpsb
cmpsb
inc
stos
cwtl
xchg
lods
mov
js
lret
lods
scas
mov
mov
xor
sub
insb
nop
mov
jmp
jg
cmpsb
iret
pop
push
je
mov
inc
jno
arpl
popf
popf
std
jae
sbb
adc
jecxz
call
out
or
movsb
aad
pop
popa
dec
cmpsl
pushf
inc
pusha
shll
movsl
push
lahf
lahf
lods
xchg
dec
shrb
xchg
mov
sub
fmuls
lcall
cs
adc
hlt
mov
call
out
insb
add
inc
loopne
fisubs
arpl
adc
in
iret
sti
aam
loope
mov
add
adc
mov
jb
mov
nop
dec
frstor
push
jo
pop
jo
sub
inc
jle
ljmp
and
jge
mov
sbbb
cmp
loop
mov
jg
arpl
push
push
call
aam
es
push
jo
sbb
ret
in
ret
sbb
xor
push
lret
push
cmp
xchg
mov
loope
fisubs
mov
or
mov
jbe
mov
jle
out
fs
repnz
mov
lcall
push
jmp
adc
pop
stos
cmp
jae
repnz
shlb
sub
es
test
pop
dec
ret
pop
mov
pop
push
dec
ficoml
mov
dec
outsb
sub
add
pop
and
call
aam
sbb
jge
mov
pop
mov
push
decl
popa
cli
inc
sub
jmp
or
data16
mov
loop
aas
cmpl
adc
enter
ljmp
sub
cld
repnz
bsf
pusha
jp
cmp
loope
add
inc
mov
xchg
inc
int3
xchg
std
adc
xor
fdivs
push
pushf
cmpsl
cs
ja
jmp
mov
jmp
mov
inc
sbb
daa
push
push
dec
pop
sbb
push
and
sbb
outsb
sbb
inc
aaa
cmpl
lcall
mov
xchg
fcmove
in
divb
or
ja
inc
push
cmp
pop
sbb
jecxz
ljmp
arpl
ds
es
popf
lret
mov
cmpsl
dec
mov
clc
adc
lret
xor
jg
jecxz
outsb
mov
push
daa
int3
leave
movsb
mov
ret
xor
repz
call
call
push
stos
stos
fildll
sub
pinsrw
and
stos
push
push
jns
cmp
aad
xor
ljmp
sub
inc
push
out
aas
xor
lock
xor
shrl
xchg
ljmp
xchg
or
fs
out
push
push
lcall
cmpsl
xor
sar
mov
or
lods
fcmovne
jmp
mov
cli
sub
and
cmp
xchg
int
sub
xor
push
stos
out
adcb
stos
jg
fdivp
mov
mov
push
into
and
pop
arpl
call
test
dec
and
scas
cld
fs
or
scas
test
pop
pop
scas
dec
lods
into
and
jg
out
xlat
nop
bound
fcmovb
rolb
sbb
mov
mov
jns
test
stos
and
sbb
das
sar
mov
in
xor
not
sub
push
mov
push
dec
call
xor
jmp
add
mov
vrsqrtps
lods
stos
sub
adc
jmp
in
scas
pop
mov
fcomps
sbb
and
push
popf
mov
add
push
int
call
cli
std
push
pop
sbb
mov
scas
shlb
dec
push
into
inc
xor
je
je
ljmp
or
cmp
mov
xor
fcmovnbe
cld
push
repnz
loopne
mov
sub
scas
stc
loopne
xchg
mov
mov
insl
ret
je
mov
pushl
ss
dec
xchg
lret
fsubrp
cli
sar
jmp
call
pop
sub
xchg
cmp
arpl
insb
dec
mov
mov
jmp
leave
cs
rorb
dec
lahf
inc
ret
dec
push
inc
addl
call
sbb
enter
incl
or
xchg
add
es
xchg
dec
loop
lret
cwtl
add
push
fs
xor
dec
dec
gs
mov
js
sahf
in
adc
es
xchg
ficoml
push
xchg
addl
stos
ds
inc
jle
push
lods
je
mov
add
cwtl
mov
push
aam
lcall
push
imul
jge
repnz
decl
and
rorb
jno
lods
icebp
fisubrs
in
call
lods
jb
ljmp
xchg
inc
sahf
mov
insl
cmp
scas
shrl
inc
jnp
adc
xor
push
jecxz
inc
or
xor
pop
hlt
xlat
push
inc
sub
and
sub
emms
xor
lock
mov
or
sbb
mov
add
add
dec
push
lock
sbb
add
cltd
ds
dec
stos
les
jg
sub
loopne
cmpsb
insb
lds
adc
leave
scas
arpl
pop
mov
lcall
sub
sbb
add
mov
jle
loopne
or
jmp
push
aas
test
dec
xchg
mov
jbe
popf
jnp
push
pop
inc
adc
lret
sahf
adc
jns
incl
mov
and
movsb
pop
mov
in
popl
mov
mov
gs
cmpsb
lods
dec
sbb
sbb
jno
jb
jo
ljmp
repnz
fisubrl
add
stc
das
stc
cmpl
push
call
mov
shl
pop
and
loop
jb
ja
pop
roll
out
sub
int3
rcrl
jge
mov
inc
sbb
mov
js
outsb
or
mov
out
icebp
jmp
test
movsl
test
repnz
fstpt
movsl
daa
test
xor
loopne
ljmp
push
stc
imul
push
adc
sub
dec
test
xchg
aam
adc
push
ror
call
enter
imulb
out
xor
ja
or
push
dec
sbb
and
ljmp
push
test
sub
pop
sahf
scas
stos
mov
loopne
test
inc
push
les
pop
ljmp
dec
aaa
mov
fldt
mov
ljmp
aad
and
popf
stos
and
lret
mov
rcrb
lcall
lret
dec
mov
and
mov
or
jecxz
in
lcall
decl
xchg
dec
nop
insb
ret
xor
scas
xchg
popa
fildl
jbe
test
shl
pushl
sbb
sahf
mov
add
xchg
cwtl
fsubs
jg
sub
inc
sti
rol
mov
push
hlt
or
pop
scas
pop
add
sbb
push
push
sarl
xchg
fwait
adc
mov
andb
hlt
outsl
cmpsb
mulb
pushf
mov
add
mov
mov
fbld
bound
test
out
jno
call
nop
mov
decl
fildl
mov
insb
aad
pop
dec
loope
jb
pop
mov
fwait
int3
movsb
jmp
mov
lds
test
or
jb
xor
lock
sub
mov
ljmp
js
mov
mov
outsl
inc
lcall
call
mov
outsb
outsb
adc
mov
shrb
add
sbb
add
roll
or
push
and
xchg
jne
hlt
mov
gs
mov
xchg
sbb
xor
ret
stos
negb
ds
imul
shr
data16
ret
lahf
into
cwtl
cltd
jp
lcall
outsb
ret
xor
mov
std
dec
mov
sbb
lcall
cmpsl
jg
or
mov
or
fwait
or
push
ja
lods
shll
insl
sar
fcomip
inc
insl
test
loop
pop
les
test
sub
cli
xchg
sbb
mov
enter
pop
mov
iret
in
repz
aaa
cld
scas
push
scas
sbb
int3
jae
sbb
test
sar
pushl
jne
fucom
cmp
data16
add
pusha
push
dec
adc
mov
out
cwtl
int
andl
jg
rcl
lea
call
inc
lret
push
cld
sbb
mov
test
in
push
xchg
xchg
or
inc
aaa
jo
repz
aaa
outsb
scas
xchg
arpl
jns
out
mov
sub
cli
adc
xor
jg
orb
lahf
push
add
xor
imul
dec
ret
mov
sbb
lcall
inc
sub
pop
sbb
fs
mov
ret
data16
push
sti
call
dec
insb
enter
xor
pop
sub
dec
xor
dec
mov
jg
mov
xchg
fdivr
cli
dec
pop
out
stc
int3
adc
cmp
sub
sbb
aad
loop
push
pop
xchg
lahf
lock
push
inc
in
stc
fcmove
sbbl
hlt
jp
aas
pop
subl
fwait
push
mov
sub
push
es
fptan
cmp
jno
gs
jno
mov
ljmp
cmc
mov
inc
aaa
subb
mov
incl
fldl
mov
mov
mov
add
movsl
mov
fdivrs
jbe
rcrb
call
mov
xchg
out
cmp
add
mov
int3
cld
and
jge
sub
dec
jle
mov
sbb
sub
out
sahf
push
adc
mov
or
incl
lcall
cmp
pop
roll
mov
out
das
dec
addr16
pushl
pop
adc
jo
mov
fbstp
lahf
fildl
adc
fldt
ljmp
push
fisubrs
out
inc
test
sti
mov
jle
sti
or
enter
cmp
push
inc
inc
xchg
leave
push
sbb
ja
add
cmp
and
lret
jle
es
nop
pop
and
incl
cmp
ror
fistpl
int
xor
aaa
pop
fwait
pop
sbb
sbb
jmp
lahf
or
cld
sbbb
sti
mov
sti
pop
sub
add
lcall
outsl
sbb
add
or
jbe
movsb
insb
js
xchg
mov
pop
adcb
xorb
inc
lcall
cli
adcl
mov
inc
add
inc
sub
fcomip
ljmp
cvtpi2ps
pop
adcb
mov
or
movsb
xor
xlat
mov
xchg
in
or
fimull
addb
xchg
scas
mulb
pop
and
sbbb
add
add
movl
mov
and
les
lcall
or
jbe
mov
mov
loop
pop
mov
std
pushl
les
mov
inc
jbe
jno
push
add
fcomi
fcom
incl
mov
mov
mov
jle
sub
pushl
push
add
enter
push
daa
cmp
add
add
push
sub
incl
dec
cmp
push
or
shlb
decl
push
popa
mov
pop
mov
or
jno
pop
ret
dec
sub
adc
lcall
bound
xor
jg
cld
or
push
std
mov
out
sub
inc
add
xchg
dec
std
out
decl
bound
loopne
dec
mov
inc
push
ret
ud0
lcall
xor
sbb
aaa
push
xor
popf
int
insl
inc
pop
fwait
in
jns
xor
decl
aad
lea
rorl
jg
push
add
sub
int
jo
repnz
decl
in
inc
jp
outsl
arpl
pop
out
or
dec
dec
mov
decl
fistl
icebp
cmp
mov
and
popf
imul
test
sti
pop
sub
movsl
ret
gs
repnz
popa
sbb
push
outsb
les
and
mov
loopne
movsb
rcrb
mov
adc
out
and
inc
loop
movw
ljmp
cli
cbtw
pop
sbb
test
cmp
rcrb
nop
mov
fcomp
insl
xchg
aad
xchg
sbb
ret
lcall
scas
insb
push
jnp
in
fs
cmp
daa
jne
sub
in
repz
dec
fs
adc
push
lcall
mov
sub
jo
outsl
sahf
call
lcall
mov
and
push
dec
fdiv
sbb
adc
add
cmp
mov
cmp
xor
mov
nop
cs
sti
jg
ljmp
xchg
cmp
test
xor
or
jecxz
sbb
jnp
hlt
rcll
xchg
lods
push
dec
mov
sub
mov
sarb
lock
add
imul
incl
call
out
cmp
cmp
or
insl
jge
and
es
jle
mov
xchg
inc
iret
adcl
leave
sub
sbb
popa
test
dec
cmpsl
es
movsl
movsl
push
data16
ljmp
lods
mov
imul
mov
leave
fmuls
test
stos
scas
iret
inc
adc
push
or
jbe
xor
clc
mov
mov
dec
cmp
jge
incl
jb
int
pop
fs
jno
leave
push
cmpsb
std
int3
jl
jg
add
mov
js
sub
pop
je
sar
call
adc
sbb
mov
ret
and
pop
ds
call
push
dec
ret
ljmp
xchg
call
insb
pop
hlt
in
hlt
mov
fsts
and
jmp
sub
mov
xor
pop
lahf
mov
daa
stos
aam
mov
inc
sub
mov
adc
add
pop
and
mov
dec
int
std
pop
sub
stos
or
loopne
mov
sub
jnp
or
push
adc
and
imul
pushf
add
orl
sub
bound
fsubp
inc
mov
loope
mov
cwtl
stos
push
int3
fsub
lahf
cmp
movsb
sub
jbe
mov
mov
cmp
iret
sbb
inc
push
test
mov
and
test
incb
jl
loopne
fwait
mov
push
decl
sbb
into
sbb
out
ficomps
mov
push
jne
lret
push
dec
pop
rolb
jns
pushl
scas
jo
dec
xor
loope
sub
fcoml
cli
imul
in
lds
in
cmp
cmp
into
mov
fnstenv
push
xchg
jg
jle
dec
push
fcompp
cmp
lcall
xor
mov
lcall
loopne
lret
inc
mov
sbb
and
fistpl
arpl
inc
add
daa
sbb
xor
icebp
cmp
call
mov
mov
or
push
and
xor
add
mov
mov
sbb
rcrb
call
loope
xchg
fiaddl
pusha
xchg
loop
sbb
adc
loop
pop
jbe
loop
incl
loopne
int3
sbb
rorb
in
and
in
movsb
sbb
aam
lea
ficomps
jg
ljmp
mov
int3
xor
xlat
fwait
jb
cmp
and
add
jmp
pop
cs
jmp
fidivs
sub
jecxz
jo
roll
outsl
cmp
clc
cs
push
ss
dec
xchg
lods
mov
decl
les
jo
lds
cmp
xchg
icebp
mov
testl
decl
cltd
push
lds
addr16
push
inc
adc
nop
fucomp
fiadds
ss
push
loop
fwait
pushl
std
lret
inc
mov
dec
addr16
inc
repz
or
loopne
jb
pop
stos
popa
inc
push
arpl
sub
or
mov
sar
lcall
push
lea
adc
push
add
ljmp
xchg
jne
in
fwait
dec
outsl
decl
sbb
cmp
in
pop
aas
xchg
mov
and
fcomip
add
js
cwtl
ror
adc
mov
xor
or
lcall
adc
adc
ja
inc
sub
sahf
xor
std
dec
adc
inc
pop
mov
pop
sub
fistl
in
xchg
dec
outsb
in
cltd
stos
mov
out
adc
add
or
ljmp
jle
xchg
into
cmpsl
xor
adc
repnz
call
lahf
mov
xchg
test
xchg
gs
dec
mov
mov
jg
sbb
dec
lea
lea
and
sahf
push
inc
loope
pop
notb
cld
pushl
popf
push
adc
fwait
sub
jg
fsubs
xor
fsubrs
pop
mov
or
enter
or
imul
ss
int3
aaa
incl
dec
mov
aad
pop
xchg
add
cmp
imul
sti
es
lcall
dec
mov
cli
jle
mov
mov
sti
fidivrl
inc
and
outsl
jmp
jo
nop
je
fldenv
mov
test
test
jge
and
lcall
mov
rorl
dec
mov
jle
fnstcw
mov
adc
incl
mov
sbb
inc
shl
sarb
jg
xchg
and
add
inc
cmp
mov
shr
movsb
and
fwait
add
pop
xor
dec
outsl
or
pop
in
inc
test
shl
data16
cmp
dec
incl
out
inc
and
and
push
adc
cmp
orb
idivb
or
inc
lahf
hlt
or
jge
outsl
jb
mov
adc
dec
mov
cmc
decl
or
jg
cmpsl
movsl
push
sub
mov
andl
sar
lcall
mov
xorb
repnz
rorb
jle
mov
incl
jnp
in
fldcw
stos
or
loope,pt
push
sbb
cmp
fcomip
divb
clc
sub
leave
jp
mov
mov
sub
roll
scas
push
dec
iret
mov
cli
cs
mov
jg
mov
mov
push
cmpl
in
or
jmp
ja
add
decl
cmpsl
inc
das
ja
stc
pop
add
popa
call
ficoml
xorb
jg
lret
xchg
leave
pop
ljmp
push
mov
fisttps
adc
adc
fiaddl
fiadds
fprem
mov
in
mov
aas
dec
xchg
pusha
dec
push
in
aam
loopne
mov
mov
sub
add
mov
aad
mov
push
lret
outsl
dec
dec
add
mov
cmp
imul
mov
mov
xor
outsb
aam
sbb
ret
fldt
in
dec
cld
sti
push
dec
fildl
out
cmpsb
cmp
and
mov
dec
jg
ret
lcall
add
mov
incl
enter
in
orl
in
pop
cmpb
cld
adc
call
idiv
xchg
jo
aaa
pop
mov
add
inc
inc
out
in
jnp
lea
cmp
decl
lock
jnp
sahf
rolb
out
and
adc
mov
cmp
mov
pushl
or
sbb
mov
cmp
sub
cmpsl
jl
jbe
pop
mov
jne
mov
insl
xor
jb
jp
sti
js
inc
loop
cmova
jmp
gs
jno
xchg
push
in
dec
add
aam
and
jg
pushl
out
sbb
iret
xchg
gs
mov
pushl
pop
incl
dec
xchg
ja
andb
repnz
push
jg
testb
cmp
neg
mov
xchg
je
cs
jae
ret
lret
cmp
push
mov
test
pop
cmpl
lods
clc
ja
pop
divb
jmp
into
cltd
mov
or
mov
sbb
ret
das
cmp
lock
arpl
push
cmp
inc
aad
xor
pop
mov
mov
ljmp
mov
push
sahf
fsin
xchg
rolb
fldt
jg
xchg
das
push
clc
cmp
pushf
fbld
lahf
jns
hlt
mov
shlb
mov
loopne
xor
andl
or
rol
and
cmc
cmp
ljmp
push
cwtl
popa
jp
cmp
daa
mov
shll
xor
mov
pop
xchg
test
jg
incb
addl
enter
or
jmp
push
jecxz
mov
xchg
test
xchg
scas
icebp
mov
adc
decl
mov
sub
fidivrl
xchg
or
sbb
test
test
pushl
into
imul
dec
ficompl
adc
and
sti
pop
jmp
sbb
cmpsl
mov
dec
pop
add
ja
xchg
js
pusha
push
bound
cmpsl
in
bound
repz
mov
jae
mov
je
arpl
inc
ljmp
sahf
mov
cli
les
cltd
push
add
enter
negl
jg
sub
push
sahf
insl
inc
nop
mov
xor
mov
mov
mov
icebp
popf
jecxz
sub
fstp
xchg
mov
lods
fs
lods
daa
jb
out
popf
sub
jmp
pop
jmp
mov
cmp
or
sbb
fbstp
fucomp
mov
pushl
mov
sbb
push
dec
adc
aas
mov
xchg
sahf
push
sbb
pushl
mov
or
pop
push
sub
out
mov
inc
jg
inc
std
decl
push
lcall
enter
jg
and
xor
adcl
mov
push
push
jnp
and
lcall
jmp
mov
aad
xchg
xor
fisubrl
pop
into
push
dec
add
incl
pop
sub
shrb
mov
jmp
or
push
pop
cmp
gs
test
fisubs
xchg
sub
aam
ss
je
scas
scas
bound
decl
sarb
jle
je
xchg
mov
cmc
xor
mov
fwait
xor
jg
int3
testl
push
out
hlt
in
ret
jle
mov
xor
stos
mov
loopne
add
std
cld
rolb
sub
lock
hlt
imul
jmp
xor
and
loope
lock
into
clc
xchg
out
clc
mov
lods
arpl
xor
outsb
stos
mov
sbb
fwait
cmp
jg
call
sub
sbb
out
loopne
loopne
in
or
outsl
push
mov
pop
jg
jmp
cmp
subb
jo,pn
smsw
jo
sbb
loop
cmp
xor
fistpll
enter
mov
mov
rcrl
fistpll
pop
pop
shrb
test
icebp
cmpsb
pop
fwait
mov
call
sbb
mov
xlat
mov
jb
lea
rorb
jno
fidivrs
or
nop
movsb
jg
scas
xor
sbb
cmp
test
scas
incl
test
and
mov
out
mov
mov
pushf
mov
mov
jne
xchg
in
push
push
dec
insb
and
insl
mov
loope
and
mov
ds
add
hlt
decl
xchg
or
mov
xchg
or
out
push
cld
sub
cmpl
lods
add
mov
pop
sahf
je
aas
adc
jl
push
sbb
xchg
adc
push
inc
imulb
lcall
ss
sbbl
push
xchg
scas
scas
lock
dec
jmp
call
pop
dec
clc
call
cli
dec
data16
jle
in
fisttpll
xchg
aaa
dec
add
xor
add
sub
das
cli
jmp
xor
bound
add
aad
leave
js
xchg
sbb
lods
cmp
xlat
inc
push
fcomip
xchg
call
aas
sahf
repz
xorl
stos
cmp
dec
xchg
adc
movsb
movsl
sub
aas
les
push
mov
push
cmp
dec
push
rcrb
dec
pushf
mov
mov
inc
adc
lods
lcall
out
pop
into
xor
fildll
inc
jb
fwait
movsb
loopne
push
scas
fimull
out
sti
fwait
scas
cltd
jae
fucomp
adc
lcall
mov
stos
lcall
mov
pushl
enter
add
aam
sub
ret
imul
xor
mov
lea
sbb
incl
sub
lcall
pop
add
das
rolb
inc
incl
push
arpl
cmp
adc
in
and
test
push
ret
lcall
std
jmp
out
aaa
fisttps
scas
push
xchg
hlt
adc
aas
add
outsb
imul
out
call
mov
test
sub
mov
jb
loop
fcomi
vshufps
cmp
call
sub
dec
dec
movsl
fisttps
jg
test
cwtl
jmp
or
dec
repz
std
pop
add
lret
into
mov
lods
test
rcl
sub
xchg
leave
decl
lock
add
imul
pop
sbb
sub
push
scas
ss
jmp
fildl
jecxz
iret
inc
adc
add
aam
add
pop
loopne
lcall
mov
pop
and
sub
jl
pusha
jbe
cli
into
icebp
call
push
mov
jo
sbb
pop
mov
and
stc
sbb
dec
or
pop
lcall
jbe
fadds
out
int3
idivl
shll
mov
les
lahf
dec
std
call
pop
or
push
mov
lcall
ret
dec
fimull
incl
mov
imul
pop
out
inc
push
frstor
dec
mov
sbbl
fisubrl
mov
loope
movsb
mov
add
mov
mov
iret
mov
sbb
jmp
fildll
pop
mov
dec
shrb
xor
daa
mov
fisttps
jmp
imul
in
jecxz
dec
addb
mov
mov
cmpl
xchg
lcall
cmp
sbb
repnz
sbb
out
fwait
mov
jecxz
popa
cmp
xchg
jmp
orl
sbb
inc
inc
or
test
cmp
mov
mov
mov
mov
test
jae
std
mov
sub
jmp
addr16
add
xchg
pop
iret
adc
mov
cmp
test
inc
adc
cmp
mov
aas
dec
data16
adc
test
mov
pop
ret
sub
mov
xor
lcall
js
sahf
lods
popa
mov
or
xor
mov
add
adc
cmpsb
js
mov
inc
adc
inc
out
divl
dec
xchg
outsl
movsl
repz
into
scas
fisttpll
test
incl
push
push
pop
imul
cli
add
subb
ja
xchg
cmp
fcomip
ljmp
fisubrs
sbb
xor
adc
stos
push
jl
mov
xchg
jle
add
inc
cmp
inc
add
push
inc
std
in
add
call
nop
push
push
inc
mov
inc
xlat
fisubrl
mov
cwtl
in
in
outsl
lods
xor
jnp
outsb
mov
lahf
inc
movsl
inc
and
inc
dec
xor
inc
dec
rorb
fldenv
cwtl
xchg
push
inc
sub
sub
in
or
mov
gs
mov
lcall
and
pop
adc
dec
adc
adc
dec
call
dec
nop
inc
cmp
cmp
pop
dec
mull
fistl
movsb
ja
jle
xchg
fmuls
loopne
lcall
mov
test
mov
inc
cmp
sub
lcall
lcall
sbb
inc
xor
mov
jl
call
int
and
fnsave
dec
sub
mov
jbe
mov
ljmp
fbld
fcos
jmp
cmc
push
hlt
nop
jb
fistpl
pop
and
cmpsl
pop
stos
xor
lods
inc
sbb
mov
dec
cld
sbb
cmp
jl
lret
or
fwait
icebp
push
xor
ds
rorb
leave
subl
mov
jns
add
push
push
std
pop
pop
dec
test
pop
jle
jp
xor
inc
fwait
add
hlt
sbb
lcall
cmp
adc
xchg
shrb
xchg
lods
cmpb
out
jmp
mov
xchg
cmpl
push
cmp
cmp
cmc
popa
dec
data16
jmp
aam
cmp
and
pop
in
aad
inc
cmp
jmp
lahf
divl
mov
pop
roll
xchg
mov
push
fadds
sbbl
pusha
pop
sahf
add
add
out
test
dec
sbb
xor
xchg
jl
call
add
movsb
pop
mov
jmp
arpl
decb
jno
xchg
aad
jl
jge
outsb
out
adc
ljmp
bound
fidivl
lock
push
mov
mov
outsb
mov
cmp
lcall
imul
xchg
imul
jl
testb
cmp
int
mov
int
mov
pop
lds
out
adc
mov
je
xchg
mov
dec
out
gs
stos
test
fdivrl
in
scas
out
insb
stc
hlt
push
ja
jns
out
out
dec
aad
mov
roll
adc
int
stos
or
fimuls
pop
hlt
int
es
ljmp
add
sarl
fisttps
mov
data16
mov
mov
int
jle
jbe
inc
lcall
rcrb
mov
jae
mov
jecxz
adc
mov
jbe
decl
inc
call
jle
mov
outsl
sub
stos
out
mov
aam
jae
aas
xor
pop
xchg
mov
in
iret
xchg
pushf
int3
in
addr16
or
addr16
pop
cmc
vmovntdq
nop
fwait
or
sar
mov
out
je
inc
and
into
rcll
ljmp
in
in
or
std
in
gs
faddp
addr16
adc
mov
sbb
data16
push
lret
decl
push
aam
stos
inc
int
aad
mov
push
fsubr
add
rclb
sub
addl
mov
scas
cmp
ljmp
mov
cmp
xchg
add
rorl
push
outsb
jno
pushl
add
rorb
orb
push
dec
jno
xor
ror
pop
add
cmp
xor
in
incl
xchg
mov
jns
mov
mov
loop
lcall
xchg
and
mov
dec
ja
cwtl
lds
push
stos
sub
incl
jge
xchg
dec
sbb
mov
daa
push
push
xchg
and
fistps
inc
out
es
gs
adc
cmpsb
fcompl
arpl
add
xor
cmp
jmp
ret
notb
dec
pusha
jae
dec
or
or
jbe
dec
clc
jnp
iret
fcmovnb
mov
fdivr
loopne
adc
das
dec
push
cwtl
insb
sbb
or
pusha
add
fcomi
add
add
add
add
or
pop
pop
push
or
or
or
or
or
push
adc
push
adc
adc
push
adc
pusha
mov
or
pop
sbb
adc
adc
adc
add
data16
or
adc
pop
adc
inc
add
add
add
add
adc
inc
inc
fwait
sahf
add
les
add
cs
addl
shlb
jg
imul
add
add
push
adc
pop
and
xor
inc
decl
and
rcll
cmpb
pop
xchg
out
add
mov
inc
pop
push
inc
popa
add
mov
adc
arpl
or
adc
cmp
ret
and
add
pushf
push
or
add
add
jo
add
pop
scas
cmp
outsl
decb
lods
adc
push
adc
pop
popa
jno
and
adc
xchg
jl
repz
mov
lock
loope
icebp
adc
sbb
mov
mov
xor
add
rcll
add
js
call
cmp
lret
rcr
push
ret
xchg
and
pushl
sub
std
cmpsb
xor
aas
imul
fdivrl
add
mov
mov
out
pop
les
fsts
add
mov
mov
cmp
ja
out
cmp
xor
and
shll
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
xchg
daa
and
xchg
pusha
add
std
or
mov
cld
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
hlt
ja
rolb
lahf
std
movsl
jecxz
adc
mov
stc
or
jmp
xchg
jg
or
insb
sub
addr16
out
or
push
push
xchg
add
shlb
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
dec
faddl
lcall
fs
scas
mov
pop
pop
mov
decl
in
rorb
sti
ret
scas
adc
mov
xor
lods
scas
xchg
incl
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
lcall
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
std
in
decl
arpl
push
out
or
push
mov
mov
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
decl
idiv
and
xchg
jmp
sbb
add
incl
mov
push
mov
sub
pop
mov
jl
rorl
shll
pop
jg
hlt
push
fcmovnu
add
stc
loope
mov
sar
andl
aas
icebp
testb
mov
inc
imul
scas
fadds
in
sub
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
decl
sbb
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
into
andl
aas
loopne
cli
adc
outsl
decb
xchg
in
add
inc
adc
loope
fisttpll
mov
fsubp
icebp
aas
std
cli
push
push
push
idivl
cmp
ljmp
jle
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
jmp
stc
mov
mov
inc
es
gs
jns
enter
or
idiv
decl
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
or
cmp
cmp
js
jmp
inc
push
sub
xchg
pop
clc
pop
hlt
sub
movsb
add
fildl
add
lea
jg
gs
std
xorb
jg
add
outsl
adc
ret
das
pop
pop
pop
shlb
out
sar
scas
cli
cmp
lock
or
sarb
std
pop
les
cli
mov
mov
mov
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
jmp
mov
push
mov
adc
and
sbb
xchg
jo
and
out
test
loopne
jl
imul
rcr
lock
sbb
cmpsl
sahf
fistps
fcmovnu
rorl
insb
stos
arpl
add
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
mov
lods
xor
jg,pn
cmpsl
scas
popa
in
pop
or
jg
xchg
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
pushl
adc
xchg
and
push
push
jo
pusha
imul
add
mov
lock
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
aad
sub
jae
shrb
shlb
out
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
jno
das
cli
adc
and
lahf
fmull
push
cltd
jge
push
lret
mov
pop
mov
sub
clc
mov
dec
incb
fisubrl
aas
mov
mov
cld
inc
or
pop
jg
add
iret
mov
jg
mov
aad
test
mov
xchg
movsb
mov
iret
push
jbe
jmp
sar
push
sbb
stos
icebp
pop
incb
jno
adc
push
inc
jecxz
std
outsl
sti
push
sbb
sarl
adc
loopne
sar
andl
lahf
xor
lock
or
add
mov
mov
imul
push
and
fwait
imul
add
push
sbb
in
or
mov
mov
lahf
or
push
rcrl
cld
outsl
mov
shl
jb
fistpl
adc
call
pop
in
xor
pop
pop
nop
mov
inc
sti
ljmp
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
push
lcall
dec
xor
fsubr
fistps
lds
fidivrl
jg
inc
stos
pop
add
dec
mov
sub
jge
xor
lahf
shrb
mov
push
cld
addl
pop
incl
mov
in
stc
mov
lahf
outsl
int3
push
sbb
jmp
pop
test
bound
pop
outsl
das
sar
xchg
inc
test
in
jge
popa
push
test
jbe
outsb
incl
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
sub
shl
cld
mov
cld
movsl
adc
stos
pop
jg
pop
shrb
rcl
jg
adc
xor
pushl
mov
gs
pushf
lea
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
imul
or
inc
pop
jg
pushl
daa
rorb
and
add
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
sti
dec
inc
mov
into
test
xchg
movsb
insb
or
and
xchg
ficoms
mov
jp
clc
insb
test
aas
repz
int
mov
sbb
outsl
lock
in
jmp
stc
out
mov
clc
push
std
mov
jl
icebp
or
loopne
iret
or
cmc
mov
push
mov
fsubrp
dec
sahf
enter
incl
pop
fcmovb
inc
adc
inc
loopne
test
out
rolb
pop
in
cmpsb
pop
fs
jne
pop
cld
or
dec
ss
in
inc
leave
inc
lods
movsb
or
repnz
pop
cmp
daa
pop
and
imul
cmpsl
lret
pop
in
cmp
lcall
mov
pop
lock
jmp
hlt
dec
mov
stos
mov
sbb
xlat
inc
aas
mov
jg
mov
das
rcrb
nop
sbb
cld
daa
jp
std
adc
fnstsw
loopne
cltd
or
mov
ret
nop
cmp
das
incb
inc
and
pop
pop
div
cld
idivl
jbe
inc
and
scas
stc
lahf
loope
jae
addb
jmp
jge
ljmp
mov
add
out
mov
jg
icebp
mov
loope
mov
cmpsl
popf
mov
clc
sti
mov
fbstp
push
cltd
outsl
das
jge
rorw
call
mov
sub
mov
aaa
pusha
xlat
xlat
mov
and
call
scas
and
aas
and
js
int
enter
add
push
pop
aaa
std
fildll
xchg
inc
sbb
xchg
hlt
andb
mov
aas
icebp
ret
ror
sbb
xor
or
aaa
inc
adc
lds
adc
aas
pop
clc
loope
push
inc
movsl
mov
and
leave
push
test
add
xlat
jmp
fildll
fimull
iret
fdivrl
xchg
lcall
xor
decb
push
xor
gs
inc
sub
sti
sarl
pop
out
jg
jno
ret
fs
dec
push
dec
cmp
inc
lcall
ficompl
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
ljmp
or
sbb
xchg
imul
jmp
outsl
jmp
push
cmp
std
mov
daa
jmp
faddl
mov
addb
outsl
mov
push
imul
pop
stc
push
dec
out
fstpt
adc
xchg
pop
pop
add
jg
and
out
daa
icebp
push
lahf
sti
inc
pop
imul
call
cmpsb
scas
les
pop
xor
mov
xchg
mov
fildll
fsubrl
dec
add
sub
inc
or
inc
inc
leave
add
sti
push
sti
pop
inc
and
push
mov
push
mov
pop
cmp
int3
pop
iret
and
and
dec
das
add
movl
jg
add
add
dec
jbe
enter
push
push
sbb
or
add
mov
dec
mov
push
stos
addb
jbe
xchg
jo
inc
jae
out
and
lret
out
mov
aaa
and
jne
jo
imul
mov
jp
ds
inc
lods
insl
xor
mov
cmp
xchg
icebp
gs
cld
test
andl
xchg
pop
adc
sub
lds
and
and
gs
gs
and
push
inc
adc
pop
mov
pop
push
outsl
outsl
fucomi
fcmovnu
insb
push
push
xchg
jo
push
and
test
push
aas
outsb
imul
inc
push
shlb
je
cs
inc
sub
adc
push
push
fcmovnu
adc
xor
dec
jne
js
stos
push
sub
inc
fists
frstor
push
push
inc
stc
outsb
jbe
lea
inc
jns
push
imul
popa
jb
inc
loope
fiaddl
dec
sbb
outsl
insl
pop
inc
test
inc
mov
push
or
cwtl
mov
add
dec
outsb
add
imul
cmpl
dec
xor
ret
push
inc
insb
sbb
inc
pop
sbb
inc
xchg
push
cmp
adc
sub
into
mov
outsl
jp
orl
push
pop
and
pop
js
mov
or
pop
sarl
outsl
ds
insb
jne
mov
jne
data16
push
xor
or
push
add
dec
call
insl
add
push
fildl
and
loopne
sbb
push
out
popa
test
js
arpl
sbb
popa
roll
nop
mov
gs
dec
mov
mov
loope
push
push
and
pop
mov
jle
jnp
push
sbb
cmp
es
shll
or
xor
fadds
inc
or
dec
bound
dec
push
pop
outsb
mov
jo
push
dec
inc
dec
push
lods
ret
sbb
cmp
insb
jae
arpl
adcb
stos
scas
arpl
pop
sbb
mov
and
sbb
jp
inc
in
pop
xchg
jecxz
push
xor
popa
inc
in
movsl
inc
dec
addr16
mov
sub
pop
cmp
popw
push
call
insl
lret
fdivp
jge
loopne
mov
cmp
push
jne
movl
fisubs
aaa
sbb
jbe
jns
inc
dec
jae
enter
jecxz
push
mov
adc
pushf
xchg
or
pop
inc
sub
pop
inc
fimull
mov
lret
ljmp
fs
xchg
lods
mov
test
pusha
aaa
sub
insl
pop
push
xor
rcll
sub
sub
or
int
and
xor
jo
mov
les
imul
inc
jae
or
mov
sbb
sub
sbb
pusha
push
sbb
lock
daa
mov
cld
xor
int3
outsl
jns
xor
sbb
pusha
stos
push
sti
sbb
and
mov
inc
adc
or
jne
mov
mov
xchg
inc
je
push
inc
inc
cmp
adcl
xchg
xchg
outsl
ret
mov
and
sbb
fs
adc
or
push
es
outsl
xchg
or
push
adc
adc
jo
lret
loope
xchg
test
xor
pusha
test
test
cmp
and
jne
pop
push
push
outsb
pop
mov
pop
mov
or
push
in
push
jne
xor
clc
inc
out
xlat
and
lcall
mov
jae
subb
xor
lods
fmull
sti
pop
cmp
jo
adc
sbb
and
test
mov
mov
sbb
sub
add
pushf
push
shl
push
int
inc
lods
repz
jbe
cli
mov
outsl
jae
out
outsl
lret
xchg
add
dec
sbb
lea
xchg
inc
inc
jbe
ret
push
test
dec
push
add
sbb
jmp
repnz
adc
lock
push
or
and
jmp
jp
mov
inc
cmc
dec
sarl
add
push
pop
movsb
gs
add
xor
shlb
xchg
ret
movsb
cli
testl
fs
cmpsl
adc
mov
jg
mov
out
and
mov
addr16
inc
sbb
subl
aaa
dec
adc
and
movsl
jns
mov
sbbl
mov
nop
jns
mov
fisttpl
sub
in
push
xor
jp
add
xchg
mov
or
popa
fbstp
jmp
roll
cs
fs
cmc
or
sub
je
and
test
out
push
outsl
push
inc
jb
and
or
inc
stos
push
jmp
push
into
jo
inc
inc
lds
mov
push
arpl
pop
pop
std
inc
imul
push
jecxz
popa
loop
fs
push
sbb
fmuls
loopne
insl
shr
inc
insb
jle
unpcklps
inc
dec
stos
sub
and
dec
jae
popf
dec
push
xor
lds
test
fcoms
xchg
jl
js
enter
jne
imul
dec
inc
cmp
adc
mov
jle
pop
mov
pop
scas
push
loopne
or
adc
jmp
and
inc
dec
push
push
pop
sbb
pop
lret
xor
shlb
add
mov
inc
push
inc
jo
mov
ja
mov
sub
pop
jnp
js
fbstp
dec
outsb
dec
in
shl
les
sub
ss
stc
clc
ret
add
add
mov
xor
adc
xchg
movsb
dec
adc
add
or
movlhps
mov
mov
push
xchg
mov
movsl
mov
adc
les
ret
pop
mov
and
sbb
cmpsl
mov
arpl
xor
inc
jo
filds
pushf
bound
xor
adc
push
sub
jmp
push
jb
inc
jae
jo
les
insl
mov
and
jb
and
test
push
xor
rorb
das
mov
add
push
lock
cwtl
lock
rclb
push
js
mov
adc
or
icebp
and
dec
cmp
or
test
pop
jbe
pop
push
aaa
adcb
pop
mov
cs
outsl
test
int
in
mov
push
adc
mov
mov
jp
mov
lret
nop
jge
ret
arpl
and
lods
aas
imul
lcall
mov
jb
xchg
pop
lcall
fldcw
fistl
ljmp
dec
jno
call
jb
xchg
jnp
sub
orl
imul
jns
insb
mov
ret
xchg
cld
popa
imul
add
nop
xchg
xor
push
hlt
and
sub
add
leave
add
insb
adc
jno
ret
in
sub
outsb
ja
push
test
sbb
popa
push
mov
daa
sar
xchg
js
inc
data16
mov
adc
ret
push
dec
mov
std
js
adc
push
inc
pop
adcl
cmp
test
inc
mov
sub
dec
pop
or
push
cmp
fcoms
lds
aas
sub
inc
xorl
fs
sub
cmp
jbe
mov
xor
push
iret
popf
mov
js
jo
outsb
fistl
and
xor
mov
xchg
ss
dec
popw
imul
inc
into
inc
xchg
xchg
or
sub
in
outsl
add
pop
jmp
pusha
aad
or
ret
inc
sbb
call
fs
inc
call
outsl
movsl
pop
sbb
imul
dec
dec
adc
adc
jle
xor
les
sarl
ja
jbe
call
xchg
out
or
imull
imul
es
pop
mov
rep
xchg
test
sub
sbb
sbb
pop
test
dec
mov
inc
inc
push
jne
rcrl
cld
data16
ffreep
out
mov
jo
add
pop
icebp
jae
mov
fs
dec
imul
gs
das
sub
int
xor
xor
sbb
test
add
fcomps
and
mov
fwait
or
mov
pop
sub
pop
push
add
rcl
fmulp
lcall
verw
push
outsb
fidivl
or
xchg
or
sarl
jl
push
add
push
pusha
pop
add
iret
push
imul
mov
dec
pop
push
cmpsb
fadds
femms
sahf
mov
xlat
add
loopne
cmc
pusha
and
jb,pn
popa
adc
and
fwait
mull
push
mov
out
inc
cs
mov
imul
ja
fcmovu
push
dec
rcrb
roll
pusha
dec
into
push
pop
lahf
clc
jo
push
mov
fcomp
jg
jb
xchg
and
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
pop
inc
add
add
