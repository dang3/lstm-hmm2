divl
in
mov
mov
mov
inc
add
add
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
mov
dec
adc
movb
lock
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
jg
lock
push
push
push
mov
push
into
pushf
add
jge
jmp
jmp
stos
adc
push
push
sahf
jp
push
testb
clc
test
ds
jmp
pushl
sar
dec
sub
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
ljmp
cmpsb
push
mov
andl
data16
mov
add
int3
aam
add
mov
add
punpckhwd
aaa
mov
push
mov
inc
in
iret
negl
push
in
loopne
movb
inc
xchg
mov
sti
outsb
ds
inc
add
add
call
mov
cmpl
jne
mov
jmp
ja
add
push
mov
sbb
out
std
jnp
add
jbe
sbb
pop
dec
push
push
ss
daa
in
in
in
loope
xlat
cs
loop
in
xor
roll
lea
xacquire
mov
mov
loop
push
mov
xor
push
cwtl
in
xchg
sbb
xor
fldenv
push
decl
add
mov
sarb
adc
mov
mov
push
push
push
lods
cmovl
loopne
outsl
add
fdiv
fistpl
fisttpl
ret
add
jae
or
test
je
pop
add
pop
mov
push
add
loopne
push
loopne
sbb
rolb
add
push
pop
sub
add
pop
inc
mov
push
dec
in
pusha
les
sub
dec
add
sub
imul
call
cmp
sahf
or
cmpsb
stc
call
in
aas
or
loopne
js
in
lahf
outsb
clc
push
push
mov
in
inc
inc
mov
fwait
add
les
push
mov
dec
cmp
jge
mov
jmp
mov
push
push
sub
inc
inc
dec
jb
mov
jno
and
and
jmp
push
in
jnp
cmp
adc
std
int3
clc
inc
shlb
push
pop
mov
aaa
jb
mov
lds
mov
xchg
hlt
sub
scas
out
int
push
and
inc
cmp
jae
sarb
adc
mov
add
mov
sbb
add
outsl
mov
sub
push
cmp
xor
lock
rcll
out
adc
add
sbb
jle
popf
ds
push
lcall
mov
test
mov
cmp
scas
jnp
lock
add
call
mov
clc
add
cld
jb
xor
popf
cmp
xchg
gs
jno
push
push
cmp
mov
lret
xor
pop
push
sub
sbbl
test
iret
sub
jo
push
rolb
loopne
in
add
push
or
push
push
sbb
pop
dec
xor
cmp
inc
push
xchg
rcrl
or
push
or
stos
and
fwait
insl
inc
pop
or
and
repz
or
cmp
push
fwait
je
bound
add
dec
xor
mov
in
push
push
daa
mov
aas
outsb
sub
int3
push
xchg
mov
or
inc
jmp
push
cmp
jo
jecxz
sbb
sub
sbb
scas
sbb
jnp
sub
loop
in
sbb
xor
shlb
adc
jo
in
es
sub
js
push
shrb
inc
inc
sub
cmp
sbb
movsl
add
adc
lds
fs
mov
in
shl
jmp
cld
push
enter
and
push
push
ds
push
mov
add
mov
adc
or
out
sbb
iret
seto
punpckhbw
or
in
xchg
sub
jnp
push
adc
pop
rcl
mov
cmp
jge
fstps
or
push
add
jmp
dec
and
js
sbb
push
or
outsl
push
lods
jae
push
mov
xor
cs
pop
pushf
outsb
lock
push
mov
out
mov
lds
push
sbb
test
mov
mov
pop
test
out
lea
lock
push
pop
push
push
adc
mov
ret
fiaddl
jl
or
data16
notl
mov
fsubl
jmp
pop
mulb
xor
insb
out
sti
or
mov
sub
ror
lcall
adc
mov
pop
pop
jle
movsl
cltd
mov
loop
and
push
mov
sbb
lret
inc
mov
jns
jbe
ss
rclb
mov
js
pop
xor
loope
testl
mov
hlt
je
sbb
mov
lea
mov
mov
aaa
je
nop
push
loop
jg
adc
cli
mov
popf
mov
js
jno
ficoml
imul
push
adc
sbb
mov
pop
pushf
js
mov
push
cmp
or
lret
push
mov
mov
jae
or
mov
mov
xor
push
xchg
and
adc
daa
and
out
addr16
pop
xchg
cmc
mov
das
push
stc
or
xchg
and
mov
xchg
iret
mov
out
dec
popa
push
hlt
bound
xor
or
jno
push
mov
sbb
shlb
pushf
ficoml
mov
insl
icebp
mov
push
rclb
stos
xor
cmp
inc
and
cmp
jne
pop
mov
loopne
xchg
sub
fs
mov
cmp
je
sub
dec
pushl
pop
in
adc
fmull
rclb
adc
dec
mov
xchg
rcrb
imulb
lahf
mov
lds
sbb
push
push
mov
cmp
pop
push
sub
sub
pop
mov
pop
ljmp
call
mov
test
jne
stc
sti
mov
inc
cmp
jl
jmp
pop
pop
push
mov
push
pop
push
push
pop
push
pop
sub
in
sahf
jmp
sub
outsl
mov
pushf
jl
pop
mov
ret
add
repnz
lock
xor
lea
jns
adc
loop
loopne
jne
sbb
bound
and
mov
dec
jl
out
mov
adc
stos
push
jmp
add
jns
add
add
push
dec
push
adcl
ret
and
scas
push
mov
xor
adc
or
lret
cmp
and
pusha
adc
adc
pop
ret
push
adc
pushf
in
sub
shr
jbe
xlat
jmp
and
push
dec
mov
pop
jmp
test
jne
pop
ja
mov
scas
and
pop
push
cs
out
dec
outsl
jg
fwait
inc
aam
push
mov
sub
pop
js
sub
pop
cmp
mov
inc
jg
cld
jge
jecxz
out
cwtl
cmp
je
outsb
shlb
add
sub
cmpl
pop
lea
push
mov
imul
divl
add
jmp
mov
addr16
fs
in
lods
loop
or
mov
push
inc
mov
loope
leave
ret
icebp
cmp
cmp
push
std
or
in
add
or
std
or
adc
adc
adcb
mov
or
stc
jne
mov
rorl
in
add
subl
mov
inc
das
pop
lock
repz
push
ja
lea
decb
pushl
cmp
or
fwait
xchg
pop
popaw
push
or
pusha
fsubl
pop
pop
arpl
adc
into
or
pop
xor
out
jo
pusha
xchg
add
nop
test
je
inc
pusha
or
pop
cwtl
rorb
mov
pop
push
loop
jne
push
movsb
mov
or
divb
push
push
dec
mov
mov
mov
mov
push
push
push
popl
adc
cmp
pop
xchg
mov
rcrl
je
test
ret
lea
icebp
inc
ret
mov
imul
mov
add
addl
sarl
adc
adc
cmp
sar
xchg
mov
fs
cmp
je
cmpl
push
mov
cmp
jne
push
push
imul
scas
popf
ret
jl
pop
jmp
fmuls
xor
cmp
jle
dec
cmp
leave
push
inc
sub
pop
mov
sub
or
jge
xlat
inc
aaa
fidivrl
inc
jno
pop
ret
clc
jg
inc
fimuls
movb
pop
stos
outsb
into
or
in
int3
mov
and
add
lods
adc
sub
or
inc
inc
or
shlb
adc
ret
pop
cmp
sbb
call
add
shr
jo
inc
pop
and
lock
xor
adc
xchg
cmpl
dec
cmpsb
mov
adc
test
or
jge
in
dec
push
push
call
outsl
sub
jbe
into
cs
xchg
sbb
dec
cli
pushf
mov
push
fdivrp
fsubs
and
mov
mov
mov
mov
cld
xor
out
lods
mov
push
dec
clc
mov
ret
inc
or
cmpsl
mov
pop
lret
loop
sub
aam
add
clc
cmp
sbb
inc
jmp
ret
sub
cmpl
jle
push
cmp
jmp
mov
cmp
jge
mov
ret
ret
shlb
jbe
push
push
out
cmp
fstl
loopne
cmp
push
sub
test
cmp
jo
outsb
adc
mov
loopne
jl
jbe
inc
add
or
fwait
pop
push
adc
adc
repnz
ljmp
pusha
fimuls
jge
mov
jle
hlt
mov
pop
push
or
mov
lock
push
ss
cltd
cmp
cmp
ret
out
pushf
pop
ficoml
jmp
out
xchg
sarb
cmp
shlb
dec
push
mov
xor
sbb
xchg
data16
lea
add
or
nop
stos
loopne
mov
add
fcomi
xchg
pop
cltd
jmp
loopne
scas
dec
mov
jbe
inc
aaa
fcoms
lea
push
mov
out
inc
mov
pop
pop
jmp
mov
pusha
orb
movl
adc
or
ficoms
sbb
loope
mov
pop
sbb
pop
stc
testb
je
or
fld
mov
js
mov
std
ljmp
inc
mov
enter
add
mov
or
sub
xor
insb
leave
dec
dec
mov
nop
cmp
aad
mov
add
scas
mov
inc
and
cli
add
or
sbb
and
arpl
or
shrl
ret
push
push
rclb
cs
inc
adc
mov
int3
lods
sbb
and
ja
jl
and
aas
sbb
das
sbb
test
jl
sbb
add
push
stc
fmuls
sub
into
adc
pop
cmp
and
dec
ss
jnp
cs
push
adc
dec
dec
lret
or
mov
adc
sub
mull
dec
or
jg
mov
xor
cmp
ja
cmp
test
adc
and
std
repz
je
cmp
popf
cmpl
push
cld
insl
mov
mov
push
cltd
pop
mull
fldt
jne
lock
mov
inc
cmp
push
mov
mov
jb
jmp
push
popa
dec
pop
pop
ds
pop
mov
dec
sbb
adc
clc
in
sub
add
push
push
jbe
call
cmp
enter
and
out
div
lret
and
jmp
sub
dec
je
and
jnp
push
adc
in
jge
adc
mov
ss
out
iret
icebp
adc
fs
or
dec
pushf
movsb
sbb
cltd
ret
rcr
mov
int
jp
jecxz
pop
jne
jp
jecxz
mov
rolb
pop
addb
xor
and
ljmp
push
add
mov
scas
adc
or
inc
movsb
sub
mov
push
mov
xchg
xchg
mov
loope
fidivrs
add
shlb
add
ud2
movsb
push
xor
push
push
sub
push
pop
pushl
js
inc
push
in
in
outsb
cmp
daa
adc
jge
popl
inc
sbb
adc
jmp
in
scas
sarl
jae
mov
shr
fs
sbb
dec
stos
xor
leave
adc
adc
sti
out
andl
or
cmp
jmp
mov
sbb
and
push
jmp
pop
fisubl
and
jge
or
sbb
mov
mov
repnz
and
repz
shrl
inc
pop
push
iret
mov
loop
mov
push
fs
pop
pop
cld
sbb
cld
cmpsb
pop
lock
cld
mov
fstl
lcall
adc
and
xchg
outsl
cmp
in
or
clc
movb
add
or
xchg
xchg
lret
adc
scas
add
cmp
fdivp
push
dec
mov
pop
push
lea
push
addl
cs
pop
inc
xor
xchg
xlat
dec
cmp
mov
cmp
inc
addr16
scas
pop
or
dec
push
inc
add
or
cld
xchg
mov
pop
cmp
sbb
push
call
ja
push
sbb
lea
adc
imul
cmpsb
jo
and
iret
in
jnp
push
call
add
add
clc
push
push
ja
mov
std
movl
lret
js
jbe
test
mov
sbb
pop
pop
push
and
push
dec
pop
ds
inc
jmp
adc
cmpl
aas
xor
adc
nop
sub
sahf
mov
xchg
jge
mov
adc
iret
arpl
jae
and
in
adc
pop
nop
out
pop
mov
js
adc
sbb
dec
je
adc
stos
jmp
jae
loop
adc
dec
dec
rclb
not
and
inc
pop
in
ds
mov
test
sub
xor
mov
sbb
jecxz
shl
jb
adc
xor
push
cmp
nop
popf
iret
xchg
jnp
push
push
push
mov
loope
pushf
cmpsl
out
lods
inc
jp
stc
push
push
push
adc
push
mov
dec
movsl
cmpsl
pop
xor
cwtl
imul
cld
lret
dec
push
pop
daa
lea
mov
pop
mov
jo
mov
xchg
pop
lea
and
cld
push
or
cmpl
inc
xor
adc
fmuls
push
push
cli
hlt
loopne
in
orb
mov
mov
lods
outsb
xor
xchg
push
ljmp
adc
je
adc
jne
push
jbe
fbld
inc
lock
mov
adc
dec
adc
mov
add
in
push
dec
lea
or
std
mov
negl
pop
cld
je
dec
call
cltd
sub
sar
add
dec
rcrl
in
dec
in
fnstenv
push
mov
add
mov
inc
adc
aam
fwait
cmpsb
dec
cmp
pop
leave
jae
add
jns
mov
push
jno
xchg
pushf
mov
mov
repz
mov
cmpsl
adc
inc
sub
sub
or
and
jmp
sbb
and
ja
or
inc
js
ljmp
outsl
dec
test
sbb
and
and
cs
adc
dec
divb
icebp
pop
pop
andl
xchg
ss
shll
jbe
add
inc
cmp
xchg
mov
push
rcll
push
insb
and
or
mov
loope
pop
mov
push
lea
dec
maskmovq
sbb
and
test
xor
roll
adcb
int3
pusha
nop
or
sub
mov
ss
ljmp
rcr
test
inc
xor
pop
adc
mov
sbb
jge
je
push
mov
fdivrl
jmp
pushl
and
cmp
sub
pop
loopne
incl
and
mov
daa
ds
mov
xchg
mov
cmpl
je
push
jge
xchg
jne
adc
dec
je
fsubrp
mov
scas
xchg
sbb
cwtl
pop
push
push
mov
into
jg
jmp
mov
lea
push
cmpl
pop
ror
rorb
sub
loopne
xchg
mov
push
andb
pop
jbe
pop
pop
icebp
mov
push
sahf
jp
aas
js
push
push
in
pop
out
sbb
push
jl
mov
in
cmp
hlt
movb
add
lock
sub
mul
fldz
bound
sbb
push
insb
movb
fstpt
ret
dec
aas
mov
test
mov
adcb
lea
xchg
movsl
add
rcrb
fs
mov
test
test
mov
pop
loopne
mov
and
popf
push
jmp
xor
dec
xor
pusha
out
into
testb
jle
imul
imul
sub
push
lea
cmp
pop
jle
std
ss
adc
cmp
mov
test
ret
mov
shlb
mov
jmp
push
sub
or
pop
daa
pusha
rclb
lock
shl
lret
jb
jl
add
adcl
lret
xor
nop
inc
enter
push
cs
push
push
loope
mov
push
adc
cmp
or
dec
loope
sbb
add
and
ficomps
sub
shll
inc
sahf
xchg
ja
addb
xor
mov
inc
cwtl
cmpl
pop
push
or
mov
out
lcall
aaa
or
sub
xor
pop
lcall
std
or
fldl
fmull
push
sahf
sbb
enter
add
add
ret
or
sbb
leave
lock
scas
cmpb
mov
inc
add
lods
mov
es
pop
or
mov
xor
cwtl
rcrl
cmp
ds
sbb
or
cmp
adc
jne
pushf
and
push
je
push
push
into
adc
cmc
cltd
mov
push
add
push
or
mov
sub
lret
cmp
xlat
sbb
stos
fcoms
jg
xchg
or
mov
es
cltd
and
loope
adc
inc
js
ret
cmp
in
push
cmpsb
fs
mov
inc
mov
sbb
in
inc
adc
and
xchg
test
adc
pop
mov
cmp
xchg
or
cld
je
cmpb
mov
popf
cmp
cli
je
cwtl
pop
roll
sub
xchg
xchg
push
stc
dec
xor
mov
sub
push
push
cmp
add
jmp
adc
pop
cmp
xchg
enter
jmp
nop
mov
and
bound
xchg
xlat
orb
cmp
shlb
mov
js
pop
mov
push
loopne
push
adc
push
in
adc
imul
xor
push
cmp
outsl
and
sbb
inc
fisttpll
cmp
inc
cmp
xchg
xchg
out
jo
stc
or
int
fsub
nop
pusha
in
mov
ljmp
inc
jbe
push
mov
orl
mov
cmp
fwait
jg
aas
mov
cltd
mov
add
sar
push
cmp
dec
or
adc
jl
dec
lret
sbb
mov
sbb
lock
fistps
mov
adc
mov
fidivrl
sti
push
pop
push
adc
dec
jmp
xor
idiv
jle
mov
fwait
aaa
xor
mov
add
jne
fstp
and
push
jbe
adc
jmp
mov
pop
insb
cmpsl
int
sub
pop
jmp
mov
sti
in
and
sbbl
mov
adc
or
out
and
push
add
or
pop
pusha
push
ljmp
movsb
sti
sub
clc
je
test
push
cli
or
cltd
idivl
mov
xchg
test
ljmp
rcr
mov
jl
icebp
pop
imull
fs
or
xchg
arpl
mov
idiv
sub
test
or
jbe
lahf
xor
stc
repnz
sub
sbb
mov
add
inc
jle
add
std
out
xor
xchg
imul
cmp
aas
mov
sub
jge
jmp
mov
mov
hlt
fildl
pusha
or
add
lock
fdivl
xor
mov
fdivrp
mov
dec
sub
mov
mov
cmpsb
fists
inc
fisubrs
xorl
out
add
inc
mov
mov
cmpb
or
clc
fidivl
push
mov
jmp
outsb
mov
mov
sahf
lods
jmp
loopne
jnp
jne
pop
add
jl
dec
jmp
dec
mov
aad
inc
mov
adc
test
sbb
or
je
sbb
push
adc
jo
sbb
mov
adc
je
mov
pop
push
mull
sbb
lret
je
jbe
imul
pop
and
jne
push
jmp
ljmp
lods
add
push
push
push
pop
sti
cmp
cmp
adc
pop
push
mov
sub
mov
add
out
clc
test
call
ficomps
in
sbbb
add
pop
mov
pop
xor
xchg
dec
push
jne
loopne
xchg
cmpxchg
xchg
mov
adc
mov
pushf
loopne
movb
scas
jmp
leave
push
rorb
clc
leave
xchg
pop
and
jmp
push
cmp
filds
xor
push
lea
add
mov
push
mov
inc
aas
test
pop
mov
push
jns
cmp
push
mov
sub
pop
sbb
add
push
cmp
or
cmp
loop
loope
mov
in
pop
adc
add
xor
push
jg
jg
mov
push
popa
push
nop
and
std
adc
sbb
cmp
push
sbb
add
or
mov
add
insb
adc
fs
int3
and
push
push
pop
cmovnp
jae
in
pop
pop
jecxz
push
pushf
sbb
movnti
sbb
mov
mov
repz
inc
adc
push
sbb
leave
fsubs
cmp
inc
and
add
or
and
andl
adc
and
push
loopne
xor
inc
ret
pop
pop
dec
ret
mov
mov
pop
cmp
lock
push
leave
clc
lods
sub
clc
setb
test
int3
lock
jne
mov
sarb
dec
sub
sar
xchg
jl
call
andl
lea
push
pop
fidivl
add
adc
mov
je
sub
mov
mov
lods
lods
clc
aas
fsts
mov
mov
nop
lock
hlt
mov
lods
adc
test
push
jecxz
lods
xchg
add
shrb
inc
sbb
sti
xor
and
cmp
into
dec
or
push
jge
and
hlt
scas
lea
sub
or
cmp
push
push
push
shlb
add
lret
mov
ret
dec
dec
daa
sub
push
in
mov
lods
adc
scas
xchg
cs
add
add
adc
fdivr
aad
ror
xor
clc
or
and
push
je
jnp
and
je
lahf
push
mov
shr
hlt
pop
or
pop
inc
pusha
pop
fistpll
sbbl
pop
or
shlb
xor
and
xchg
or
push
fs
addr16
movl
mov
xchg
sbb
f2xm1
loopne
adc
ret
fdivs
mov
mov
pop
cmp
jno
adc
add
aas
out
sahf
or
pop
aam
xor
in
mov
fs
test
je
icebp
ja
sub
fsubs
inc
jne
push
push
mov
lahf
jb
mov
jmp
sahf
pop
jns
push
xlat
enter
gs
mov
imul
xor
push
push
ja
xlat
pop
mov
inc
mov
subb
mov
packsswb
test
fdivs
or
and
enter
mov
ljmp
xor
lock
inc
or
repnz
sub
loopne
pop
cmp
fsubrl
pop
andb
dec
add
sub
imul
inc
mov
lret
loop
int
xor
mov
inc
jecxz
lds
call
dec
movsb
pop
jmp
push
mov
mov
mov
mov
call
mov
xor
jecxz
push
pop
xor
mov
jle
dec
xchg
shlb
push
push
std
sahf
scas
and
fcomps
jbe
or
mov
xor
imul
rclb
dec
test
repz
dec
and
js
xchg
add
or
mov
outsb
repz
adc
mov
xchg
lret
sub
push
mov
es
leave
xchg
lods
jl
push
or
pop
fnsave
xchg
add
cmp
stos
and
add
jle
inc
mov
pusha
xor
mov
jne
push
divl
pop
iret
orl
dec
mov
icebp
and
nop
popf
outsb
and
add
jle
fnstsw
cmpsb
cs
popf
inc
pusha
int3
push
aad
sbb
call
and
add
cmpsb
mov
push
sbb
movsb
sbb
nop
add
push
mov
subl
sbb
lea
xor
ret
or
roll
enter
sbbb
enter
jmp
mov
mov
mov
leave
lahf
scas
cmp
adc
adc
sub
or
push
and
shl
daa
add
pop
movsb
aaa
xor
cmp
xor
jo
fdivl
mov
sahf
push
es
adc
loope
in
pop
cmpl
cmp
dec
pop
push
rcrb
fsubrp
adc
sbb
push
in
fbstp
arpl
push
int3
mov
push
ud0
test
sbb
arpl
sbb
pop
das
aam
adc
scas
adc
fwait
sub
fdivl
adc
lock
mov
xchg
xchg
or
dec
xchg
scas
mov
stos
loopne
repnz
add
add
xchg
adc
imul
in
add
push
push
push
push
jnp
movl
movsl
jns
sub
aam
add
addl
xchg
or
xchg
insl
or
push
in
dec
neg
call
pop
bnd
xor
inc
and
scas
sar
aam
fidivs
inc
fdivs
add
out
mov
pop
fldt
push
fcoms
jbe
lods
lahf
push
repnz
add
jge
inc
jbe
in
lds
pop
add
mov
lods
jl
push
xchg
outsb
xor
mov
mov
sbb
mov
pop
xor
xchg
sub
jne
lahf
fs
add
sahf
jle
pop
add
pop
push
pop
mov
mov
sub
sbb
add
fsubr
movsb
pusha
shlb
sbb
sbb
mov
js
in
jle
mov
add
push
pusha
pop
push
inc
in
loopne
add
nop
pop
stc
sbb
cmp
sbb
mov
pop
loopne
xor
movsb
inc
adc
cmp
repnz
sbbl
stos
imulb
add
add
rcrb
push
sahf
addl
lcall
in
es
mov
adc
notl
sub
or
pop
lret
loope
push
and
popf
stos
cltd
imul
je
les
mov
add
sbbb
lea
push
rcrb
push
adc
rclb
push
mov
add
mov
adc
and
adc
mov
pxor
push
push
fs
pusha
rcrb
nop
mov
lods
pusha
push
imul
lds
sub
cmpb
mov
dec
shr
call
pop
sbb
add
mov
and
js
je
lods
lret
ja
mov
and
jo
adc
fnstcw
and
add
inc
and
xchg
idivb
test
sti
pop
call
pop
inc
push
cmp
add
inc
jle
nopl
sldt
lods
andl
adc
pop
jle
adc
push
sti
sub
imul
sbb
nop
sbb
xlat
jb
mov
daa
shrl
dec
mov
sbb
push
repnz
cld
pop
dec
cs
mov
cmp
adc
or
dec
ds
and
fcomps
add
js
scas
jno
add
push
push
loope
push
or
push
push
sub
outsl
jno
dec
xor
or
jbe
push
arpl
mov
jmp
mov
popf
jle
jle
pop
or
push
addl
adc
add
add
fcmovnbe
pusha
mov
mov
popf
and
adc
or
rolb
insl
insl
xchg
xchg
arpl
lcall
sub
push
mov
cmp
test
fnsetpm(287
dec
dec
mov
and
pop
inc
fdivrs
mov
jbe
cmc
inc
push
inc
test
xor
adc
mov
punpckhwd
pop
jl
cmp
or
push
aaa
jl
or
mov
push
fnstsw
pop
clc
xor
cmp
push
dec
cmpsb
mov
inc
and
idivb
jo
jo
dec
or
jp
ja
sarb
inc
sub
pop
mov
sahf
cmp
je
ja
adc
clc
rorb
add
mov
ret
mov
sub
xchg
iret
mov
daa
jg
jae
pusha
sbb
in
fs
jg
push
cmp
js
js
call
and
imul
cwtl
outsl
sbb
testb
pop
push
je
and
gs
sub
test
mov
nop
pop
outsl
lea
mov
stos
insl
in
test
nop
out
pop
or
dec
or
fdivrl
inc
pop
cmp
imul
inc
xor
add
test
testb
out
shrl
cmp
adc
test
lock
or
enter
or
push
fidivs
sti
pop
mov
lcall
pop
pop
daa
sub
jl
or
mov
jl
lock
pop
fcmovnb
or
pop
js
sub
test
enter
call
enter
adc
xor
test
rorl
nop
add
andl
fldl
sarb
imul
adc
xor
add
dec
fwait
bound
xchg
daa
xor
outsb
mov
inc
pop
sbb
inc
repnz
int
xchg
popa
or
cmp
ror
add
adc
cli
roll
test
cmpl
test
adc
loope
sahf
inc
adc
push
shll
push
adc
lods
jl
decb
push
iret
jae
add
add
add
add
add
sbb
mov
xchg
cmp
hlt
pushf
pushf
cmp
mov
lds
aad
jnp
dec
in
sti
imul
pop
pop
daa
and
add
cmp
dec
arpl
inc
cmp
mov
sbb
add
jb
push
adc
xchg
mov
push
mov
in
adc
int3
pop
adc
mov
xchg
fs
and
push
push
jle
push
push
pop
xlat
adc
or
daa
pop
cmpsl
add
sbb
pop
dec
cmpsl
xchg
mov
lock
jne
cmp
testl
jnp
div
pop
test
mov
push
andl
mov
or
lea
xor
jno
xor
movups
pop
xor
sbb
icebp
adc
mov
jge
push
movsb
mov
stos
jo
xchg
fs
lea
insw
cld
dec
push
add
mov
ds
andb
mov
xor
jne
fs
xchg
sub
in
inc
pusha
sub
rcr
cmp
sub
fstpl
or
push
jbe
fwait
icebp
cmc
jne
fs
or
or
or
mov
and
or
jecxz
lahf
dec
pop
fisubl
dec
test
sbb
lcall
add
int3
pop
or
and
out
adc
leave
int3
jbe
clc
sbb
sarb
insb
inc
inc
add
inc
aas
jl
movl
mov
in
cld
js
icebp
pop
movsb
call
orb
push
pusha
insb
icebp
mov
mov
test
loopne
mov
idivb
ficomps
pop
push
push
push
jb
pop
mov
jmp
pop
mov
mov
push
idivb
sub
xor
sbb
js
fidivl
pop
adc
dec
push
dec
gs
mov
dec
fwait
add
jo
daa
cmc
adc
movsl
icebp
mov
jae
dec
xor
ret
dec
ffreep
push
mov
fcmovnbe
adc
cmp
dec
ljmp
clc
xchg
push
ret
pusha
mov
addr16
xchg
cmp
inc
push
sub
fwait
mov
pop
sbb
jmp
cmp
mov
sbb
out
add
jns
mov
test
inc
inc
push
pop
out
add
imul
cmp
shlb
mov
out
mov
push
dec
stos
rolb
xchg
push
mov
stos
leave
js
aad
fiaddl
add
xorb
fs
and
sar
mov
fdivp
pop
add
pop
push
and
cmc
movsb
into
xor
in
aam
cmp
nop
and
xchg
and
and
push
mov
enter
data16
aad
inc
dec
lock
and
add
xchg
lea
notl
pop
dec
sub
or
into
add
sub
sub
pop
push
shll
ret
pushf
test
ss
fists
daa
push
sub
or
pop
repnz
iret
mov
loop
pusha
ret
xchg
push
xadd
adc
and
xor
xchg
pop
dec
pusha
hlt
sbb
cmp
sbb
inc
and
leave
mov
cmpsb
lods
xchg
push
repz
or
cmpsl
test
neg
rolb
push
xchg
imul
pop
fdivrl
dec
cmp
add
daa
pop
gs
fs
inc
dec
ret
push
repz
cmp
setne
fnstcw
loopne
pop
repz
sti
aas
push
push
incl
mov
lock
adc
hlt
jno
push
pushl
push
push
push
push
push
pop
shl
mov
inc
jno
outsb
add
adc
push
xchg
loopne
mov
or
dec
or
popa
xchg
pop
repnz
lock
xchg
test
nop
sub
adc
and
sub
jl
and
add
inc
add
aas
popf
outsb
add
sete
jne
push
push
test
sub
push
gs
jo
and
add
mov
add
xor
stos
adc
dec
movsl
test
push
mov
jo
sub
fwait
push
jl
subl
mov
imul
sub
mov
cmp
pushf
sbb
dec
dec
or
cmpsl
jnp
mov
push
push
je
xor
or
push
push
lcall
sub
cs
enter
add
out
or
xor
inc
and
fisubrl
push
push
roll
lret
sbb
add
pop
and
lret
test
scas
inc
adc
pop
loop
sbb
lds
xchg
adc
rolb
pop
dec
xor
nop
push
lcall
fsubl
xchg
jbe
push
inc
xchg
in
push
mov
mov
in
in
insb
repnz
or
scas
xchg
lods
popf
sbb
xor
add
push
sbb
dec
aas
sub
mov
sti
xor
or
into
negb
sub
push
push
mov
in
push
sahf
mov
mov
xor
add
and
xor
movzwl
lahf
mov
mov
pop
jl
add
data16
jg
mov
adc
push
scas
rol
pop
cmp
or
xchg
les
sub
jle
cmp
push
push
xor
jb
mov
ret
jge
fwait
pop
sub
cld
sbb
rcrb
test
sub
ds
sbb
nop
add
lds
mov
push
pop
lods
ja
scas
sub
clc
jb
xrelease
test
add
andb
dec
jge
mov
push
out
sub
xor
mov
push
aam
mov
cmp
cmp
jbe
stos
jle
movq
jno
mov
inc
add
push
inc
add
in
and
jo
mov
test
popf
hlt
mov
add
fisubrl
jne
ljmp
loopne
testl
xchg
std
adc
lods
xor
dec
aam
push
push
cmovbe
mov
push
lea
lret
cmp
mov
divl
jmp
enter
daa
mov
filds
xchg
inc
xor
lret
into
lock
addr16
adc
shll
sbb
or
lea
add
cmp
jae
push
pop
outsb
icebp
or
jns
fcomps
es
out
mov
shrl
fmull
add
add
ja
push
adc
mov
adc
dec
cmp
dec
ret
fisttps
mov
aad
ss
mov
outsb
movsb
push
xchg
inc
ljmp
jmp
ljmp
imul
shrl
test
jl
mov
cmp
dec
insl
mov
jg
loope
shl
jle
sbb
push
jmp
adc
adc
mov
hlt
mov
adc
and
inc
or
adc
pop
nop
pop
xor
popa
mov
xchg
fadd
push
pop
movsl
psubusw
push
test
pushl
push
add
add
pop
or
xchg
nop
mov
jae
mov
pop
add
scas
ljmp
or
jge
xorb
and
stos
out
sbb
adc
cmp
aam
out
iret
sbb
cltd
cmp
jmp
push
mov
clc
lods
sub
xchg
push
xlat
sbb
inc
xlat
int
push
cmpsb
cmp
ss
jge
or
mov
jo
cli
cmp
mov
ljmp
dec
lock
cltd
inc
js
add
sub
adc
jle
cmp
dec
aas
movhps
cmp
data16
sahf
push
sti
lret
sbb
fcom
push
xchg
sbb
push
or
mov
pop
push
ds
and
push
roll
std
or
push
or
and
pop
hlt
mov
pop
sbb
add
mov
mov
push
out
mov
cli
or
icebp
inc
xor
es
or
mov
add
movsb
jb
lea
jecxz
ljmp
movsb
pushf
jo
arpl
sub
test
fimuls
mov
jmp
and
sub
push
sbbl
stos
push
sbb
jne
leave
pcmpeqw
mov
arpl
add
mov
mov
and
lods
pop
lods
sbbb
pop
jo
push
rol
popa
pop
movsb
mov
outsb
or
pop
mov
add
mov
pop
adc
inc
jbe
test
push
xchg
jbe,pn
push
xchg
movsb
push
daa
sub
nop
cltd
icebp
mov
xchg
adc
pusha
inc
cwtl
test
push
jbe
divb
cmp
mov
or
ret
jg
test
popa
pop
rcrb
add
add
sbb
adcb
test
leave
es
mov
mov
sbb
dec
cmpsb
jb
sub
jne
jmp
mov
mov
push
push
xor
mov
shrb
push
push
lcall
adc
jbe
sbb
inc
repz
mov
inc
adc
push
inc
xor
mov
cli
insb
rorb
dec
xchg
sbb
fchs
and
popa
add
call
outsb
or
adc
xor
jmp
push
jl
adc
add
push
sti
adc
mov
sbb
std
jge
popa
test
sbb
dec
std
in
and
push
mov
xchg
push
pop
pop
or
je
iret
js
dec
and
add
out
pop
daa
dec
or
push
add
lods
inc
pushf
cmpsb
pop
leave
inc
pop
dec
adc
sbb
inc
pushf
subb
sbb
xor
add
push
or
ret
adc
or
fildl
and
xorb
push
loop
pop
lock
xchg
push
std
popa
cwtl
adc
pop
add
insl
push
insb
fidivs
cltd
aad
ret
dec
add
cmp
inc
pop
mov
mov
das
in
dec
scas
sbb
in
jne
popf
xor
push
sbb
gs
or
sbb
jnp
xor
sbb
adc
adc
imul
mov
es
xchg
adc
push
loopne
or
sbb
jb
add
inc
shrb
lods
or
adc
adc
loope
xor
pop
jno
jmp
pop
cmc
jmp
stc
mov
mov
add
loope
jbe
jne
xor
and
cmp
rsm
or
pushf
cmp
in
dec
or
sub
jne
mov
cmp
je
jg
enter
stos
pop
mov
push
outsb
mov
jmp
push
push
insl
subb
int3
pop
ja
sub
adc
push
aaa
sahf
sub
add
pop
adc
repnz
and
push
mov
or
xchg
xor
push
mov
sub
loopne
or
mov
test
add
stos
cltd
repz
pop
pop
rcr
pop
jle
xlat
cld
add
outsl
ds
call
jns
shlb
add
sbb
jecxz
mov
in
and
sbb
sbb
sbb
movsl
ret
mov
pop
jmp
xor
insb
and
jb
jo
push
jbe
and
pushf
cmp
popa
in
mov
loopne
movsb
loopne
xchg
pop
and
and
fchs
mov
inc
sub
popa
into
or
arpl
push
add
negl
xorl
pop
mov
outsl
lea
psrld
dec
mov
xor
leave
sbb
icebp
lcall
loopne
jae
mov
fiadds
andl
push
sbb
and
in
rcl
in
and
es
jmp
in
ljmp
shrb
loopne
adcl
neg
lods
shlb
mov
or
sub
fs
or
loopne
popa
adc
test
test
fmuls
mov
add
and
ljmp
mov
popa
sbbb
mov
fdiv
insb
aad
leave
or
loope
adc
subl
fwait
add
pop
sar
or
movsb
push
cmp
or
pop
sub
push
push
mov
cmp
lock
cmp
xor
xchg
psubsb
clc
mov
and
mov
push
cld
arpl
mov
int
outsl
jl
and
push
hlt
je
and
lea
shll
addl
cmp
or
stos
cmp
push
xor
sub
mov
sub
jne
xor
push
push
push
push
test
adc
push
lock
pop
inc
fiadds
addl
sar
mov
push
mov
push
test
push
xchg
fstpt
add
lea
push
lock
pop
xor
lret
cld
sub
mov
imul
jo
inc
in
cmpsl
fimuls
fcoml
xchg
adc
lock
call
fnsave
in
loop
pop
hlt
mov
jmp
rolb
sbb
outsl
pop
push
sub
sub
add
iret
push
push
add
push
xlat
mov
push
or
cmp
out
movb
jp
xchg
or
push
mov
mov
jle
addl
jo
enter
dec
add
dec
xor
es
push
dec
add
xchg
jle
push
mov
push
or
sub
or
inc
xchg
push
rclb
sbb
pop
not
in
mov
jmp
mov
push
test
rcll
xchg
scas
daa
mov
cmpsb
push
movsl
rclb
out
pusha
orb
outsl
imul
add
stos
mov
mov
push
call
xchg
lock
pop
push
mov
cmp
add
push
mov
ficomps
push
push
cmp
movzwl
aad
cmp
xchg
push
xor
into
pop
and
cmp
dec
mov
mov
loope
sub
sub
pop
fstpt
ljmp
test
dec
in
jl
repnz
add
xor
and
sub
inc
rclb
push
test
rorb
cs
inc
dec
or
inc
clc
ljmp
or
leave
mov
mov
cmp
je
push
lea
push
lahf
adc
add
arpl
int
insl
jbe
adc
clc
push
sbb
jnp
sbb
pop
or
mov
sub
sarb
in
popa
and
call
push
aas
push
adc
shrb
clc
out
rolb
and
inc
or
push
dec
bound
push
clc
add
hlt
push
in
inc
jbe
push
test
jbe
in
mov
daa
cmc
shr
neg
push
add
enter
or
push
loope
in
es
stos
jl
push
push
je
movsl
mov
dec
sub
fs
test
ja
jbe
lock
xor
push
push
cmp
je
or
push
push
xchg
je
or
rcr
inc
ss
fidivrl
xor
cmp
je
push
push
aas
dec
pop
dec
les
push
int3
sub
in
pusha
jns
cmp
dec
jb
dec
das
or
fiaddl
mov
inc
mov
enter
aad
testb
adc
shll
cli
or
outsb
mov
sete
into
gs
call
dec
sbb
push
ss
imul
addr16
dec
jne
lods
cmp
shlb
push
arpl
add
jne
mov
or
and
sub
sbb
inc
js
adc
andl
dec
cld
push
adc
add
jb
pop
xor
xchg
push
cmpsl
cmp
pop
pop
ss
jns
cli
jle
dec
pop
push
and
jb
ja
pusha
jo
int3
js
lea
in
cmp
ss
loope
je
cmp
je
cmp
jne
add
cmpsb
mov
rclb
pusha
test
push
cli
call
outsb
or
jle
pop
and
jmp
outsl
outsb
pop
mov
cmp
xchg
clc
or
ret
adc
mov
pop
clc
sarb
cmp
pusha
xor
or
test
mov
or
xor
sub
fildll
pusha
shll
xchg
push
add
sbb
mov
mov
dec
cmc
push
xchg
xchg
push
jns
jnp
aaa
pusha
xor
cmp
xor
push
jle
imul
ds
jge
and
and
adc
arpl
aam
leave
ret
add
xchg
pop
add
rcll
aaa
adc
icebp
cmpb
or
ja
xor
dec
mov
sbb
inc
aaa
popa
aam
pusha
repnz
ret
movsl
sub
je
add
push
sbb
add
add
sahf
imulb
pop
push
inc
adc
scas
add
cwtl
xchg
jmp
add
ret
jmp
jge
icebp
cmp
outsl
cmpsb
in
xor
filds
push
push
add
mov
cmp
gs
je
cmp
jne
mov
mov
or
push
dec
inc
lock
push
mov
dec
mov
dec
xor
push
movsb
jne
jmp
testb
addl
mov
aam
sbb
cli
cmp
jbe
mov
lea
mov
cmp
fs
dec
inc
jmp
inc
and
or
cwtl
jmp
mov
mov
sub
adc
cmp
enter
dec
cmp
cmp
je
mov
lea
adc
lock
hlt
and
pop
in
in
mov
insb
inc
cmpl
mov
addl
jne
notb
cmp
fsubrl
pop
adc
je
mov
mov
movb
cmp
or
ja
fiaddl
mov
inc
popa
cs
jecxz
sahf
cmp
push
cmp
clc
ljmp
sub
cmp
and
outsl
jecxz
inc
sub
push
pushf
fucomi
popa
loop
jne
mov
sarb
add
jmp
mov
xorw
push
mov
aaa
jb
call
xor
cmp
jecxz
add
jmp
mov
pushw
les
inc
in
aaa
mov
add
jns
test
jne
xor
mov
mov
push
test
sub
dec
or
add
test
pop
push
jae
mov
jmp
dec
shlb
insb
push
ret
dec
cld
jbe
test
sub
lea
sub
mov
outsb
dec
adc
sti
mov
xor
jg
or
add
jge
jo
or
jle
out
jae
es
sub
sub
and
pop
cmp
jl
or
mov
pop
jle
pusha
sbb
pusha
sub
and
or
jb
jbe
mov
sbb
test
fwait
and
or
je,pn
shl
out
inc
jne
je
outsb
and
orl
and
and
adc
movb
inc
mov
push
sub
push
adcb
sbb
mov
dec
mov
mov
lahf
push
push
mov
inc
and
je
mov
mov
imul
push
jae
add
inc
cmpb
mov
cmp
insb
and
ss
fwait
jp
insb
mov
cmc
push
add
push
movl
sub
mov
nop
and
and
fs
cmpsb
imul
or
icebp
xor
push
push
or
inc
cmp
cmp
mov
shl
js
jae
out
add
mov
cmpsl
sub
xchg
fidivs
insl
mov
push
sub
jnp
inc
mov
jmp
add
movb
push
inc
lea
sub
xor
mov
add
pop
jle
mov
in
pop
or
cmp
mov
in
dec
in
loopne
inc
das
mov
or
inc
testl
cmp
xor
xor
lahf
inc
mov
stos
dec
daa
mov
add
in
sbb
inc
arpl
dec
fcoms
je
inc
movb
jae
mov
inc
pop
movnti
sbb
cmp
movntq
out
or
xchg
adc
into
sub
jns
push
fchs
sub
adc
sti
mov
shl
jp
or
pop
mov
jmp
pop
daa
dec
add
xchg
pop
mov
arpl
or
add
ja
ds
punpcklbw
inc
mov
or
dec
aam
xor
pop
mov
push
sbb
add
inc
inc
pop
and
scas
aad
es
jl
add
cmp
add
mov
mov
cmp
mov
dec
movl
mov
inc
inc
sahf
cmp
fdiv
and
popa
fnsave
jg
sub
inc
xchg
xchg
adc
bound
loop
sbbb
push
push
mov
bound
xchg
xchg
lock
jb
xchg
dec
sbb
loopne
mov
mov
daa
add
inc
fisttpl
mov
xchg
xor
cmpb
mov
xchg
pusha
add
lods
dec
jle
add
mov
into
push
mov
jo
and
lret
sub
scas
mov
push
jmp
xchg
pushf
lods
sbb
jne
lahf
jne
addl
xchg
xchg
pop
das
mov
or
cmpb
push
leave
pusha
jb
add
cltd
rorl
or
nop
and
or
stos
test
xchg
lahf
mov
test
pop
and
adcl
rorb
xor
mov
mov
mov
add
andl
aam
push
outsl
sbb
cld
loope
mov
xor
imul
xor
loopne
or
es
push
stos
scas
add
shlb
pop
out
add
jmp
cmp
jne
adc
push
negl
cmpsb
jne
sbb
dec
shrd
jnp
das
movl
and
lds
pop
das
bound
into
cmpl
dec
adc
add
push
arpl
cmpl
and
fidivl
in
fcomp
sbb
cli
pop
ret
sbb
je
add
outsb
icebp
lods
cmp
inc
mov
inc
inc
inc
xchg
or
in
mov
jge
pop
and
aaa
sbb
das
mov
inc
jne
cwtl
decb
mov
pop
mov
lock
lcall
shr
insb
in
fsubr
cmp
in
test
push
push
xorl
shrl
call
sbb
xor
jbe
jp
and
aaa
subl
inc
pushl
jmp
pandn
lcall
cmp
je
lea
cmpb
cmp
jne
les
push
jne
push
loopne
pop
cmp
push
icebp
adc
push
inc
incl
fldcw
mov
jmp
mov
push
jmp
test
movsb
push
adc
shlb
add
push
scas
loope
jge
cmp
ja
dec
lret
je
jmp
add
andb
add
inc
andb
add
sbb
mov
push
push
ret
jns
jbe
das
ret
push
lahf
loop
or
dec
popa
in
jno
int3
mov
cmp
sbb
fs
push
loope
fnsave
fistpl
shrl
orl
mov
add
int
dec
push
mov
push
mov
jne
dec
repnz
iret
test
mov
leave
mov
mov
test
ljmp
mov
dec
xor
bound
mov
or
and
mov
rcr
dec
push
push
push
sbb
das
add
xor
push
push
adc
push
das
mov
mov
xor
jmp
rclb
cmp
pop
ja
cmp
jbe
fdiv
xor
cmp
and
push
fidivs
mov
xchg
push
sub
xor
pop
xor
cmp
xchg
lret
in
cmp
fbld
mov
adc
ret
xchg
mov
ds
jnp
push
dec
lea
test
in
add
in
inc
and
add
rolb
dec
and
hlt
shrb
xchg
adc
ds
sbb
add
inc
std
aam
mov
jge
js
mov
push
jb
jnp
mov
enter
push
mov
push
sub
push
gs
push
push
jo
aas
cmp
push
pop
mov
insl
pusha
insb
imul
mov
fisttpl
out
ljmp
or
sub
in
dec
or
adc
loopne
lods
aaa
outsl
sbb
mov
dec
movl
mov
push
push
ja
sub
loopne
mov
and
or
inc
cmp
push
jl
inc
repnz
hlt
sbb
cmp
faddp
fs
or
mov
add
lcall
jnp
cmc
addr16
rcll
xor
mov
push
push
loopne
in
jne
sub
dec
xor
pop
test
test
or
fdivs
jnp
add
add
push
lcall
hlt
cmp
loopne
jp
cmp
push
cmpl
or
inc
jge
pop
adc
fucomi
ud0
add
mov
sub
pop
jg
jo
mov
faddl
addr16
push
frstor
xor
orb
pop
push
pop
jmp
lea
and
mul
add
cmp
mov
setle
sbb
push
xchg
mov
pusha
enter
push
inc
inc
xor
xlat
fcmovu
in
in
lret
push
sub
jo
mov
into
sbb
push
out
sbb
out
xchg
mov
cmpsb
push
orb
jmp
paddq
push
xchg
lret
movsl
inc
mov
adc
or
adc
js
pop
sbb
clc
push
adcl
adc
pop
daa
in
xor
shlb
jae
cmp
or
bound
xchg
testb
or
cmp
push
or
inc
out
ret
movsl
pop
add
mov
pushf
or
lahf
addb
pushf
or
cmp
push
lods
add
dec
rorb
sub
addr16
imul
rcr
add
cmp
nop
lock
xchg
pop
outsl
test
mov
jl
xorl
outsb
push
jl
cld
or
or
in
out
cmp
cltd
inc
mov
popa
adc
lock
sahf
or
dec
scas
dec
cld
in
sbb
aaa
sub
into
add
sub
call
push
sub
pop
pop
sbb
sbb
fwait
je
pop
sbb
cmpl
jmp
dec
in
push
pop
mov
mov
movl
mov
mov
add
lods
mov
cmc
push
adc
dec
sbb
push
xor
cmp
cmpsl
aad
cmp
repnz
das
popf
add
cmp
or
mov
cmp
pop
adc
adc
sbb
xor
push
cld
nop
pusha
mov
add
hlt
stos
xchg
pushf
mov
push
xor
sbb
mov
sbb
add
xor
xor
mov
push
mov
add
or
cli
pushf
adc
mov
mov
pop
faddl
es
add
push
lea
lock
movsl
add
xchg
stos
pusha
inc
clc
xor
out
stc
cmp
pop
adc
int
or
or
les
xchg
in
leave
rcrl
push
lock
dec
cmp
jecxz
into
add
add
push
mov
hlt
int
into
mov
sarb
xor
std
mov
aaa
xor
dec
inc
pop
aaa
int3
out
or
pop
aad
lock
dec
push
mov
jle
or
test
add
pushf
mov
rolb
fnstcw
shll
leave
bound
cli
sub
push
add
gs
movsl
pop
andl
fs
xor
and
dec
sbb
cld
sub
pop
push
gs
adc
orl
lahf
xchg
inc
scas
mov
pop
cmp
clc
xchg
rcll
lret
scas
inc
cwtl
xchg
or
pop
pushl
dec
add
popl
lcall
pop
inc
enter
mov
int3
jecxz
lea
mov
xor
fcom
push
pop
cmp
adc
fmull
or
mov
enter
adc
je
cmp
push
jmp
pushf
hlt
and
inc
sbbl
inc
ds
adc
rorb
xchg
mov
inc
imull
inc
push
xor
jecxz
test
pop
jecxz
cmp
mov
das
popf
inc
xchg
push
adc
cmp
pop
pop
mov
daa
je
rorb
jne
ja
xor
fldt
in
and
add
out
mov
ljmp
jo
or
pop
cmp
inc
dec
test
stos
xchg
mov
outsl
clc
insb
ficompl
mov
inc
mov
loope
push
push
sub
cli
pop
filds
jnp
xchg
push
ds
push
adc
in
inc
sbbl
fiadds
pop
call
ss
negl
mov
push
or
sbb
push
and
mov
pop
neg
addr16
lcall
add
push
jg
lahf
push
pusha
test
lds
or
add
or
sub
stos
and
xchg
in
lds
nop
shl
mov
push
subl
jecxz
test
sahf
push
sub
mov
or
jmp
pop
testb
clc
repz
add
call
lea
push
pop
lock
int
cmp
clc
cmpsb
pop
inc
mov
push
jb
das
sub
add
pop
pushl
ret
xor
and
xor
jnp
enter
stos
xchg
jb
loope
out
add
shlb
adc
scas
pop
outsl
adc
inc
call
inc
mov
push
fnstenv
adc
loopne
and
fnsave
inc
pusha
mov
add
adc
ds
or
sti
add
nop
push
in
jno
rorb
clc
dec
test
call
jne
mov
leave
sub
adc
mov
sub
pop
dec
or
mov
adc
fidivrs
fnstsw
mov
rcll
dec
pop
push
mov
sbb
push
pop
add
push
and
insb
and
cwtl
movsb
adc
inc
xchg
or
shl
or
push
lods
lcall
outsl
loop
add
insb
and
enter
adc
sub
xor
and
sbb
popf
adc
cld
pop
repnz
sbb
ss
add
sub
add
xchg
jge
add
xchg
adc
xchg
addb
mov
sahf
rcrb
sbb
movb
jle
jmp
bound
cmp
push
frstor
mov
and
jo
inc
gs
movsb
cmpb
into
pop
lcall
pop
or
cs
mov
add
orl
jmp
pop
push
push
push
pop
xor
and
enter
xchg
inc
or
xor
push
xchg
and
sbb
loope
leave
add
dec
mov
inc
enter
enter
dec
push
or
push
dec
mov
add
cmp
rorb
cltd
out
orb
pop
push
and
stos
xor
outsb
pop
xor
inc
jo
out
ss
dec
iret
xor
sbb
sbb
adc
fs
subb
mov
mov
rolb
pop
and
test
dec
adc
daa
jne
sub
pushf
stos
loope
cmp
pop
int3
mov
psubd
ja
xchg
sub
mov
rclb
rcl
or
nop
push
lcall
add
mov
or
jne
addr16
shll
adc
push
jbe
xchg
incl
push
jmp
inc
or
add
ss
xor
mov
dec
xor
mov
or
jmp
stos
sub
mov
mov
fcomps
aas
pop
andl
sub
push
xor
loopne
pop
add
lods
in
test
jno
xor
sbb
inc
xor
adc
add
fldl
out
cmp
inc
sti
mov
xacquire
adc
je
imul
push
dec
aas
in
mov
pop
xchg
rcl
into
ljmp
clc
mov
shlb
loopne
or
push
js
inc
mov
lods
dec
dec
cmp
xor
int
sbb
xor
add
pusha
cmpsb
xlat
mov
and
add
xchg
cs
mov
add
xor
aad
gs
lock
mov
add
mov
jmp
iret
jno
stos
loopne
enter
pusha
sub
pusha
push
dec
test
push
add
lds
and
dec
xor
add
es
xlat
adc
inc
mov
xor
andl
rcll
sub
jb
scas
dec
aaa
cmp
dec
lahf
xchg
clc
sbb
cmp
sub
aas
push
ret
lcall
loop
push
imul
push
push
lcall
jo
fidivrl
push
cs
sbb
loopne
test
cmp
jne
push
mov
sbb
outsb
mov
pusha
mov
add
loope
jl
pusha
lods
addl
or
addr16
xor
cwtl
loope
dec
mov
test
sub
dec
mov
jl
pop
inc
sahf
into
cmp
adc
xchg
xchg
push
call
dec
cmpsl
dec
xor
or
adc
in
lds
outsb
jecxz
lret
push
mov
or
adc
mov
or
movsl
shlb
mov
in
jge
dec
movsl
fsts
repz
mov
aaa
fpatan
push
call
repnz
dec
add
or
jecxz
das
xchg
push
mov
dec
jae
push
sub
dec
daa
in
arpl
sbb
cmp
cmp
rclb
test
leave
push
push
mov
rorb
test
pop
lret
mov
lods
bound
mov
fxch
push
dec
or
sbb
js
xor
cs
or
int3
fcompl
pushf
pop
push
rolb
sub
lcall
loopne
adc
or
jno
sbb
jno
inc
jo
or
cmp
pop
mov
pop
adc
or
je
dec
repz
adc
or
pop
or
sbb
dec
xchg
adc
fmuls
or
mov
fcomp
scas
or
push
push
cmp
and
add
cmc
or
push
rorb
sbb
out
aam
dec
arpl
dec
add
add
or
loopne
and
imul
sahf
jne
enter
add
mov
mov
mov
dec
xor
stos
mov
jne
test
xor
leave
cmp
shrb
in
dec
inc
stos
fistpl
add
fadds
or
lods
lret
lret
mov
add
sub
aaa
mov
ja
and
lea
int
sbb
insl
and
rorb
cmp
icebp
pop
xchg
loopne
insl
sbb
shll
inc
add
lret
je
out
pusha
xor
pop
call
test
inc
gs
hlt
adc
mov
rorl
add
andl
jmp
cmp
test
or
sub
movl
xchg
sbb
dec
cmc
sbb
adc
fs
adcl
push
jle
fisttps
movsl
cmp
sahf
push
push
sbb
adc
push
aas
repz
add
loop
popf
push
add
push
mov
aaa
loope
push
jno
jmp
in
push
subl
ss
add
mov
add
add
mov
fidivs
clc
add
and
and
inc
add
pop
aam
dec
mov
jg
cli
push
add
mov
add
into
pushf
mov
inc
adc
aaa
cmpsb
pop
add
cmpl
inc
mov
adcl
pop
stos
push
mov
pop
sbb
repnz
enter
negb
add
js
rcrl
sub
dec
insl
arpl
mov
mov
xor
jne
mov
add
mov
lea
mov
out
add
lcall
cmp
jns
mov
jmp
push
mov
xor
mov
movsl
xchg
jne
ret
in
aaa
xchg
adc
xor
test
jg
aaa
outsb
mull
rorl
movsbl
inc
xor
inc
jnp
pusha
pushf
fisubs
sub
loopne
pop
xor
xchg
ficomps
or
pop
push
fwait
std
mov
and
jp
push
jmp
push
and
sub
mov
sbb
xorb
mov
movsb
call
sbb
icebp
sub
lea
push
lea
daa
subl
out
cmpl
sti
mov
lods
mov
or
pop
xor
xor
xchg
cmp
mov
dec
loope
pop
ret
xchg
xchg
ror
sarb
mov
fimull
or
pop
cmp
dec
pop
ret
or
add
movsb
sub
jmp
movl
cmp
push
mov
dec
dec
or
adc
push
push
punpckhdq
push
or
inc
in
inc
ret
jge
cmp
jne
push
inc
jecxz
pop
int
push
xchg
mov
movsb
xor
ja
mov
or
or
dec
je
cmpb
adc
cmp
mov
inc
mov
ds
lock
jl
lock
cmp
mov
movb
fidivrl
mov
push
push
and
lods
movsl
push
stos
pusha
mov
or
mov
cmp
shlb
mov
shlb
and
jge
adc
mov
insb
mov
jmp
mov
fadds
add
cmp
fildl
xchg
pop
adc
sub
add
mov
je
cs
sub
or
in
imul
xor
movsl
jge
movb
mov
ss
test
in
out
fwait
pop
xchg
outsl
rorb
add
enter
iret
jbe
mov
or
stos
mov
inc
mov
jecxz
adc
add
push
lahf
fstps
fstp
mov
mov
enter
pop
sbb
adc
add
inc
dec
xor
mov
push
inc
idivb
and
orl
push
es
shrl
mov
out
sahf
push
lahf
mov
rcr
cld
mov
rorl
lea
dec
jecxz
out
mov
sahf
adc
pop
call
push
add
push
mov
clc
jle
mov
xor
loopne
mov
popa
dec
mov
push
pop
mov
sbb
ss
push
dec
or
bound
xlat
and
or
je
push
xlat
test
loope
xor
mov
insl
add
stc
fdivrs
cmp
jnp
add
cmc
xchg
mov
mov
loop
inc
clc
sub
push
sbb
and
sbb
test
and
pushl
sar
and
leave
test
jb
ret
cwtl
sbb
and
push
cmp
xor
or
dec
ss
adc
cmpsl
ret
sub
inc
sarb
pop
cmpsl
in
insl
mov
cmp
lock
xor
pop
inc
movsl
push
out
data16
inc
cmp
addb
lock
pushl
fnstenv
pusha
lea
cmc
lret
dec
flds
movsl
push
add
jae
pop
or
cmp
xor
std
orl
fistpl
cmp
add
add
int3
rcrl
xchg
sbb
and
sub
test
mov
pop
fwait
or
addr16
sbbl
bound
xchg
cwtl
notb
imul
shrb
ficompl
jno
ficoms
sbb
sbbb
mov
lock
pop
mov
lahf
adc
out
jecxz
add
mov
push
cmpsl
cli
inc
loop
dec
cwtl
inc
lea
in
xor
icebp
lea
adc
or
cmp
and
push
lcall
or
inc
inc
adc
cmp
outsb
imul
sbb
lret
or
push
fisttps
or
cmp
ret
cmpsb
push
jb
loop
adc
aam
jl
inc
insb
pop
loopne
mov
push
out
ds
push
aam
cld
cmp
add
and
shr
shrb
out
xor
roll
scas
push
sbbl
loopne
rclb
or
lock
shlb
and
ret
jbe
test
aam
rcl
jmp
iret
mov
das
enter
push
iret
jo
or
mov
mov
cmp
xchg
pop
lea
jne
imul
and
sub
xor
arpl
pop
cmp
xorl
js
jb
test
jge
adc
dec
mov
aam
inc
mov
mov
jo
leave
and
out
cmp
and
mov
or
shlb
in
or
mov
lods
or
rcrb
ljmp
mov
xor
or
cmp
shlb
mov
pop
mov
add
mov
jmp
ljmp
aam
jns
es
faddl
pusha
and
xor
loopne
rorb
sbb
pusha
or
rclb
mov
out
insb
and
jmp
or
mov
mov
mov
inc
pushf
mov
data16
or
mov
xchg
ror
shlb
xchg
addr16
pop
loopne
icebp
add
cmpsl
inc
jmp
mov
push
dec
mov
push
mov
xchg
jg
cmp
fsubrp
jge
cmp
into
or
pop
add
fbld
clc
add
testb
push
adc
pop
xor
sub
jo
ds
push
ret
adc
add
cmp
bound
dec
add
loopne
mov
cld
cs
xor
ss
or
pop
into
jge
dec
add
jmp
pop
pop
mov
insl
sbb
mov
jmp
push
push
push
push
fiaddl
cmp
jge
lods
sbb
or
push
bound
lahf
test
and
into
push
inc
add
rclb
sysret
dec
or
test
divb
out
add
stc
mov
mov
adc
adc
clc
sub
cwtl
mov
mov
movsb
pop
push
push
or
xchg
or
and
lock
pop
inc
decb
ja
idiv
jg
push
aas
les
mov
sub
sbbb
mov
or
mov
pusha
ds
mov
pop
push
push
xor
mov
stos
mov
movl
in
push
mov
rcrb
ljmp
loope
push
mov
ret
fldenv
adc
clc
inc
pop
pop
imul
sub
loopne
testb
loop
push
inc
pop
pop
dec
fisttpll
xchg
cmp
and
xor
mov
incl
xchg
cmp
je
int
fisttps
jbe
push
xor
je
push
les
sti
mov
pop
test
pop
repnz
inc
cmp
jb
stos
mov
mov
movsb
mov
data16
xor
push
popa
pop
add
loop
rcll
xor
insb
rol
pop
sub
push
sub
dec
and
sbb
addr16
in
sbb
jne
js
dec
test
mov
inc
push
addl
pop
xor
sub
insl
push
dec
mov
adc
sub
test
inc
sbb
adc
icebp
aam
pop
movl
cwtl
cltd
shlb
lret
inc
nop
or
mov
inc
mov
jg
cmpsl
mov
mov
pop
or
adc
popa
test
popf
pop
shlb
cltd
testb
sub
jo
mov
cmovg
enter
inc
lock
mov
in
popa
xor
mov
sbb
lock
sub
mov
lods
sbb
aam
ret
das
add
arpl
test
in
js
sbb
xchg
inc
dec
push
push
mov
mov
ljmp
gs
or
jg
cmp
mov
int3
aad
mov
mov
or
inc
adc
notl
clc
mov
mov
lods
sti
mov
jae
jbe
int3
jns
sbb
pop
imull
xor
sbb
jmp
aaa
lret
mov
ret
shrl
lods
int3
pop
pop
add
adc
sub
push
push
add
or
add
mov
test
or
cli
hlt
cld
repz
push
movsb
hlt
and
je
inc
mov
push
fdivrs
int3
jmp
push
and
cmp
pop
fsubrs
cld
stc
nop
mov
sbb
ret
push
pop
mov
sbb
and
iret
js
call
les
xchg
mov
fistpll
int3
stos
imul
fwait
hlt
ret
xor
popl
pushl
ja
adc
ljmp
mov
xchg
rcr
fcomi
mov
inc
adc
xchg
push
or
mov
pushl
add
cmc
dec
cli
jmp
jae
ret
dec
cmpb
add
push
mov
aaa
int3
dec
lock
mov
add
sarl
mov
mul
std
xor
xor
inc
cmp
imul
cmp
mov
and
jge
lds
or
lds
cmp
cmp
fdivr
jne
mov
sbb
xchg
adc
xlat
xor
dec
xor
dec
xchg
mov
mov
adc
sub
mov
jmp
push
rorl
cmc
add
inc
pop
out
stos
cmp
movsb
rclb
data16
loopne
ss
aaa
pop
lods
pop
cmp
je
mov
push
push
mov
sub
xor
adcb
jl
out
dec
cmp
push
or
mov
jo
fstpt
or
jl
jmp
jmp
imul
dec
in
sbb
nop
sbb
sbb
mov
jne
add
pop
xor
sbb
test
push
mov
dec
mov
pop
or
js
inc
jg
jne
and
cmp
sub
test
xchg
fistps
loop
call
sub
int3
adc
sarb
jae
lea
callw
cld
jmp
cmpl
inc
cmp
jbe
call
in
or
dec
push
clc
andb
dec
mov
cwtl
jmp
sub
adc
xchg
xor
pushf
orb
mov
sbb
or
scas
xlat
or
sbb
xchg
lods
cld
xor
mov
mov
adc
call
xor
push
lea
jmp
rcrb
mov
jl
pop
ret
add
add
push
shll
popf
add
lret
inc
add
sub
pop
mov
icebp
pop
or
cmp
add
leave
enter
cwtl
pop
or
cmp
adc
or
push
les
fcomps
sbb
enter
in
lea
nop
test
inc
test
fcompl
xor
xlat
in
test
test
scas
xchg
xor
and
and
cmp
cltd
fsub
mov
pop
inc
hlt
or
call
dec
mov
test
ret
jle
ret
test
ja
pushf
rcrb
inc
and
dec
dec
loopne
cld
pop
and
cmp
je
mov
lea
test
xchg
imul
mov
sbb
loopne
jae
push
lea
mov
jbe
jbe
test
orb
les
shll
clc
ja
push
or
add
call
sub
fwait
fwait
or
and
jnp
push
cmp
out
in
in
orl
lods
cld
push
add
sub
addb
inc
mov
xchg
mov
add
imul
mov
push
mov
cmpb
sbb
sub
and
add
xor
or
movsb
nop
jno
dec
lret
add
addl
ljmp
ja
rclb
or
and
adc
lea
or
inc
clc
lea
mov
pop
rorb
sub
mov
push
xchg
push
jle
jg
cmp
es
mov
subb
rcr
xor
mov
movsb
mov
je
mov
dec
mov
cmp
push
fwait
movsl
loopne
cs
inc
jns
dec
outsl
testb
jne
mov
push
test
cmp
push
mov
aaa
sub
lea
pop
cmp
xor
shlb
es
pop
sub
add
push
xchg
sbb
xchg
mov
hlt
hlt
out
jb
jns
or
mov
loop
or
inc
pop
pop
mov
fiaddl
insb
add
add
or
fsts
jne
push
js
fistl
or
cld
loopne
fnstenv
mov
push
lods
push
mov
aaa
adc
in
xor
mov
add
lock
sub
xchg
cld
clc
pushl
dec
in
popa
movsb
cmp
add
cmp
insl
daa
jl
cltd
jb
popa
adc
orl
data16
or
paddsb
movl
cmp
push
mov
mov
inc
test
iret
je
jge
cmp
or
mov
push
mov
sub
lea
pop
mov
push
dec
mov
scas
nop
adc
inc
adc
loope
rcr
call
push
adc
or
xor
add
push
jae
in
fwait
push
jne
and
cmp
inc
test
ret
leave
add
mov
inc
mov
mov
cmpl
scas
dec
sti
or
jbe
push
cmp
adc
push
fsubrp
sahf
adc
jbe
push
stos
cmp
jmp
dec
xchg
cmpsb
jne
lea
mov
jae
lret
mov
aas
imul
popf
mov
roll
sub
das
push
jmp
pusha
ret
mov
add
fcmovb
loopne
push
xchg
xor
cs
jnp
mov
or
or
xor
loopne
add
xchg
in
lods
push
cmpsl
lahf
cmp
pop
pushf
mov
or
mov
push
add
xor
or
addr16
mov
adc
add
ljmp
lock
je
push
pop
add
or
dec
push
ret
in
fimuls
cli
dec
mov
or
jle
loope
mov
pop
push
push
inc
rsqrtps
mov
loope,pn
pop
mul
seto
je
or
dec
popf
test
inc
iret
into
ja
mov
adc
lret
jp
mov
pop
inc
mov
mov
insb
popa
pushf
mov
mov
sbb
xor
int3
adc
adc
push
call
fdivrl
lea
mov
mov
iret
cltd
dec
scas
dec
cli
in
call
add
ret
movsl
das
out
lret
in
push
mov
xchg
ja
push
or
mov
xor
cwtl
cli
jbe
mov
add
or
pop
cmp
jbe
xor
cmpsb
push
cwtl
mov
sbb
icebp
ret
sbb
call
xor
pop
xchg
mov
jbe
lcall
push
xor
mov
push
add
rolb
in
mov
pop
or
mov
jo
addl
out
mov
lds
outsb
movl
mov
mov
test
mov
lods
mov
adcl
add
inc
lods
mov
xchg
test
sarl
cmpb
mov
sbb
test
adc
cmpl
enter
outsl
es
jmp
mov
mov
mov
inc
mov
mov
or
add
mov
jnp
mov
sub
cmp
jbe
mov
pop
xor
add
movsl
push
mov
lods
add
inc
stos
je
lock
movsl
into
jmp
fldt
pop
xchg
shr
xchg
cld
xchg
stos
mov
xchg
push
sub
xchg
or
mov
sbbl
je
or
cmp
jnp
shll
pusha
push
psrlw
cmc
jb
push
arpl
and
jle,pn
mov
out
cmpb
fadd
jb
loop
xchg
inc
add
pop
add
imul
cmp
jl
lock
push
mov
sub
out
add
sbb
mov
stos
mov
mov
roll
movsl
les
cs
pop
aaa
push
or
lret
test
and
std
jb
fimull
lea
sahf
mov
push
inc
xor
mov
cmp
out
jl
movb
add
enter
mov
pop
rolb
scas
jne
sbb
mov
adc
inc
xor
lcall
cmc
ret
test
jmp
mov
mov
xchg
push
sahf
mov
daa
dec
pop
add
in
cmpsb
loopne
adc
sbb
mov
dec
push
mov
in
lcall
test
add
movsb
jecxz
adc
popa
dec
std
sbb
lea
jbe
adc
inc
xchg
call
xor
sbb
shll
xchg
xchg
adc
cmp
adc
lcall
in
jl
cmp
bound
push
jmp
clc
mov
inc
movsb
or
lock
cmp
cmp
enter
inc
jl
push
popa
or
xor
bound
or
mov
clc
pusha
adc
jbe
xor
jno
pusha
rorl
repnz
mov
add
sbb
icebp
or
pop
add
repz
sbb
or
lcall
je
sti
mov
data16
push
or
test
aaa
mov
cmp
orl
lea
iret
out
mov
movl
andl
loopne
pop
scas
adc
pcmpeqw
dec
fdivl
push
pushl
cmp
xchg
in
movsl
in
cmp
push
aaa
jo
daa
mov
sub
jb
test
mov
and
rorl
push
mov
or
or
cmp
insb
in
mov
test
adc
xor
test
out
scas
aam
popf
xor
push
or
adc
jmp
add
lds
testb
pop
out
lea
add
lret
jb
sbb
mov
roll
int
dec
fsub
arpl
rcr
mov
dec
jmp
icebp
in
fadds
mov
roll
add
andl
divb
mov
pop
ds
mov
inc
dec
adc
push
lods
outsb
std
addb
pop
lea
int
out
mov
les
jbe
mov
je
push
movswl
mov
sbb
cmpsb
and
loope
js
imul
enter
xchg
rclb
addr16
mov
pop
sbb
movb
cmp
jae
mov
jo
loopne
adc
pop
adc
adc
ljmp
ss
cmc
xchg
sarb
das
xor
mov
shll
add
cmpsl
shrl
cmp
add
push
mov
cmp
sti
sub
incb
mov
xor
sub
pop
mov
or
push
or
or
mov
jae
xor
clc
jg
push
add
xchg
rcll
idiv
jle
sub
gs
fwait
inc
cltd
push
insb
int3
mov
pop
cld
mov
add
add
cld
jb,pn
cmp
cwtl
es
adc
cld
pop
insl
enter
outsl
push
sub
or
add
pop
stos
jle
nop
add
add
dec
xor
and
sbb
lds
loopne
sbb
lea
lret
lds
subb
xchg
inc
mov
jo
bound
loop
push
test
cli
cmp
and
adc
outsl
sub
lods
sub
mov
or
andl
neg
data16
or
mov
pop
aad
or
mov
adc
jmp
leave
sbb
or
daa
dec
add
jbe
fimuls
inc
xchg
stos
ret
out
jmp
fwait
xchg
es
adc
pop
pushl
add
fimuls
jle
adc
dec
out
push
mov
adc
test
push
je
adc
or
cld
testb
push
out
push
push
mov
aas
bnd
mov
xchg
adc
fistpl
add
jb
push
jae
lea
push
sub
addb
add
inc
stos
cmp
stos
pop
xor
clc
fidivs
push
into
fwait
adc
or
adc
scas
pushf
adc
inc
inc
insb
jge
inc
sbb
mov
test
sub
mov
push
shlb
cmp
push
jne
cmp
jae
inc
jmp
push
or
mov
mov
and
ret
fisubl
movb
inc
or
mov
add
sub
mov
jbe
push
add
and
inc
js
into
or
adc
push
clc
and
lock
and
push
mov
in
jecxz
push
push
stos
cmp
or
xor
xor
sbb
cmp
inc
loopne
test
dec
jl
popf
jne
or
jmp
xchg
mov
adc
call
test
add
ror
fisubrl
pop
int
sbb
jecxz
or
adc
pop
mov
rorl
dec
pusha
or
or
xchg
ret
and
mov
arpl
jae
mov
ljmp
xchg
repnz
cmp
xchg
ret
imul
dec
dec
jo
inc
movsl
rclb
je
mov
hlt
aaa
cmp
or
add
cmpb
push
push
nop
add
lock
sbb
and
dec
xchg
push
inc
imul
push
mov
push
fadds
cli
pop
add
add
data16
cmp
sub
push
inc
or
add
mov
jbe
sbb
pop
add
mov
and
add
mov
jmp
mov
mov
adc
shlb
lea
cli
ja
cmpb
add
xor
outsb
push
xor
and
pop
pop
or
xchg
out
aaa
into
xchg
mulb
sbb
adc
or
mov
adc
ljmp
cs
xchg
push
or
mov
rolb
lods
imul
enter
nop
test
jecxz
imul
xchg
addb
cmp
jne
cmpsl
call
mov
adc
xor
xchg
mov
pop
adc
xchg
adcl
jno
mov
add
ljmp
mov
pop
sub
jmp
ja,pt
lea
xchg
sub
pop
shll
mov
and
rol
loop
dec
cmp
lea
jl
mov
mov
dec
cld
inc
loop
inc
sub
dec
jns
mov
mov
cmpsl
push
loop
in
jne
jmp
adcb
xor
push
fwait
cmp
mov
inc
pop
mov
out
pop
inc
or
sti
inc
adc
add
mov
push
lret
test
adc
xor
sub
sub
cmp
jbe
pop
and
add
loopne
push
or
push
inc
fstl
dec
push
sub
add
int
or
dec
sub
mov
sbb
pop
pushf
pusha
or
es
lds
mov
aas
movsl
loop
mov
sbb
cmc
ret
add
cld
push
mov
in
push
jns
push
mov
les
inc
pushf
jbe
enter
adc
rclb
or
test
pop
sahf
jne
or
jo
in
addb
jo
imul
mov
jp
fadds
adc
push
scas
jle
orb
hlt
movsb
xchg
inc
fwait
out
sub
test
out
pop
cmpsb
movl
aaa
je
lahf
test
mov
fs
adc
xor
xchg
sbb
push
xchg
repnz
mov
sbbb
loopne
jmp
rorb
jge
xor
push
jg
or
lea
mov
int3
dec
jb
hlt
adc
js
sbb
jne
and
dec
fwait
call
sub
aam
mov
inc
lret
push
push
mov
or
dec
push
dec
in
and
xchg
push
js
jle
arpl
adc
lret
loop
loopne
inc
cmp
and
fmuls
in
out
adc
popa
ret
pop
loopne
inc
das
ficoms
fadd
or
es
in
sub
roll
icebp
jmp
mov
xor
nop
pop
fsubrl
dec
mov
fwait
or
imul
rorb
ss
movsb
add
sub
cmp
mov
rcll
cmp
in
mov
xchg
jmpw
pop
lret
inc
adc
call
xchg
cmp
dec
xchg
aaa
in
lds
inc
adc
push
fs
or
add
push
enter
mov
pop
mov
xor
test
push
pop
mov
adc
nop
pop
jl
hlt
add
push
fnstsw
out
add
mov
pusha
sbb
mov
pop
xor
orb
mov
push
pusha
adc
in
rolb
dec
fwait
je
cmpsl
mov
xchg
inc
xchg
xchg
into
lcall
cld
push
ja
sub
mov
inc
fmuls
jmp
clc
stc
cmp
dec
cli
test
pushf
xor
push
xorl
test
push
outsl
cmpsl
mov
cli
stc
xor
xchg
sbb
mov
add
pop
mov
jg
mov
pop
mov
mov
stos
incb
mov
adc
sub
bound
cltd
daa
ret
cmp
push
int
add
popa
leave
add
pop
mov
jmp
push
mov
dec
out
pushl
rcrl
jmp
or
dec
xchg
sbb
dec
je
ret
jbe
pushf
adc
fs
push
inc
adc
pop
inc
mov
addr16
shrb
dec
mov
hlt
or
and
mov
lcall
sbb
call
repz
pop
fs
push
dec
gs
add
imul
je
lods
mov
dec
fdivs
adc
ret
push
arpl
shlb
ds
mov
mov
es
mov
cmp
push
es
les
lock
push
pop
add
shlb
in
or
add
mov
in
mov
cmp
es
sub
add
push
mov
icebp
adc
les
jo
lods
loopne
les
cmp
push
dec
or
and
and
in
push
in
adc
adc
dec
pusha
loopne
or
adc
or
dec
pop
mov
inc
push
rorl
test
inc
arpl
xchg
je
cmpl
or
sbb
xor
or
dec
scas
jbe
jae
add
cmp
and
jo
xchg
sbb
mov
in
push
bound
aas
sub
in
fwait
xchg
in
push
nop
xchg
insb
xchg
enter
xchg
mov
push
nop
mov
add
push
sub
es
in
std
push
loopne
dec
adc
daa
or
mov
rcrl
and
mov
pop
xor
jae
leave
sbb
mov
mov
movsb
or
or
addb
iret
adc
jge
and
pop
or
sbb
dec
and
repz
mov
test
xchg
loopne
mov
adc
loopne
sbb
movsb
gs
adc
jmp
push
and
mull
loope
std
jne
test
or
inc
movsb
sub
mov
push
test
sub
pop
mov
push
and
clc
mov
mov
push
mov
cmp
movsb
lret
shlb
lods
rol
lret
cmp
in
jns
sbb
loopne
push
xchg
add
adc
mov
nop
jbe
mov
add
movsb
addl
jb
push
jo
das
call
xor
rclb
cld
sub
decb
pop
sub
cs
shlb
sub
cmp
mov
pusha
mov
fldt
dec
dec
and
adc
addr16
cmp
je
add
and
mov
or
push
scas
add
xor
jo
push
xor
jae
mov
lea
sbb
mov
push
pop
xchg
ret
or
dec
clc
jecxz
cs
ret
push
cmp
pop
push
add
add
lods
inc
inc
pop
cwtl
dec
push
add
fwait
adc
mov
jle
dec
ret
cmp
cmp
sti
adc
and
outsb
sbb
not
inc
add
xor
inc
mov
outsb
rolb
lock
add
outsb
sti
cs
je
popa
test
out
mov
and
leave
es
icebp
stos
push
pusha
mov
or
cmp
je
adc
cmp
jl
xchg
mov
cmpsl
jp
sarb
fcoms
or
in
sub
es
add
pushf
sbb
inc
pop
inc
adc
loope
inc
sub
lock
cmpsb
iret
push
xchg
outsl
mov
daa
dec
dec
loop
xor
jbe
sub
jnp
mov
add
ret
mov
jno
testb
decb
loop
ret
inc
push
xchg
pop
pop
dec
in
cmpl
jp
pop
add
insl
inc
cmp
cmp
call
xor
or
hlt
insb
or
in
xchg
mov
call
lods
out
xchg
sbbl
cmp
add
or
push
push
or
jne
inc
addr16
lahf
fimull
pop
pop
ljmp
mov
stc
jb
or
xchg
jbe
scas
add
xchg
mov
aam
adc
les
pop
xchg
add
inc
jmp
add
sbb
or
mov
sub
out
inc
into
leave
add
dec
fs
pop
mov
movsl
in
mov
cld
sbb
lods
cmp
pushf
rclb
test
mov
xor
stos
cmpb
je
nop
cmpsl
jge
xchg
dec
and
jmp
call
push
and
dec
jo
and
jne
push
push
pop
mov
sub
test
jp
sbb
test
idivb
dec
mov
adc
and
and
dec
lods
inc
jmp
mov
fs
jne
inc
cmp
push
pop
xor
mov
jle
pop
add
loopne
add
push
cmp
jb
mov
jb
fadds
cli
dec
inc
dec
loopne
xchg
mov
lods
xchg
add
xor
xchg
cmp
dec
ds
js
push
push
xorl
dec
inc
add
rolb
stos
hlt
inc
add
ret
lea
movsl
pop
mov
mov
mov
daa
inc
aas
inc
adc
je
jmp
outsb
add
sbb
dec
add
add
ss
ret
inc
add
jmp
loope
cs
mov
dec
mov
out
nop
aaa
add
movsl
mov
aaa
imul
subb
add
mov
push
not
imul
movsb
adc
rcrl
call
inc
mov
sub
inc
dec
loop
sbb
test
mov
sbb
loope
test
out
sti
adc
or
sbb
add
push
mov
sbb
or
add
sbb
adc
das
test
pop
push
repz
mov
jne
dec
mov
arpl
mov
dec
xor
shll
loope
mov
pusha
dec
roll
outsb
push
aaa
or
sub
test
ficoms
loopne
or
mov
pop
mov
push
lcall
pusha
add
movsb
js
or
or
mov
sbb
arpl
shll
add
stos
add
hlt
xor
aas
mov
icebp
add
push
fimuls
faddl
mov
add
push
sub
mov
xchg
xor
and
sub
sbb
movsl
push
jns
sahf
xchg
push
push
jnp
cld
add
rorb
fdivs
fucomip
mov
orl
jb
push
xchg
or
ret
or
add
sbb
movsb
jecxz
adcl
xchg
push
and
rcrb
mov
xlat
mov
aas
icebp
je
dec
roll
cmp
arpl
shll
and
jne
jno
in
adc
scas
adc
inc
in
out
mov
mov
pop
dec
push
loopne
push
hlt
icebp
sub
cwtl
sti
cs
repnz
push
mov
push
sub
pop
xchg
dec
jl
lcall
jb
and
insl
arpl
popf
fisubrs
cltd
out
adc
sbb
es
dec
sbb
pop
xchg
sbb
dec
fnstsw
and
dec
and
out
hlt
mov
sub
push
dec
jecxz
in
push
mov
push
or
aad
adc
push
dec
sub
adc
sbb
cmp
push
dec
in
jb
pop
xor
daa
xchg
xchg
lret
cmp
cmp
push
dec
sub
inc
or
jb
cmp
hlt
dec
in
punpckhbw
inc
insb
push
je
xor
clc
pop
sub
adc
movsl
mov
mov
loope
popa
sub
int3
mov
inc
cs
jnp
adc
pop
push
or
sahf
fsubrs
dec
aam
push
movl
loop
inc
pusha
add
pop
mov
dec
movsb
shrb
mov
or
cmp
sbbl
push
sbb
cli
xor
in
cmp
decl
xor
add
dec
faddl
push
pop
sub
add
subb
inc
jae
jnp
fs
inc
push
dec
inc
inc
nop
inc
push
cmp
xor
push
cmp
xor
push
cmp
nop
and
adc
sbb
nop
inc
or
or
rolb
clc
add
jo
js
popl
shl
cld
incb
push
jl
shrl
xchg
sub
xchg
ret
orl
jge
out
xchg
mov
ss
add
add
iret
xchg
lds
sub
jmp
push
dec
stos
and
add
xchg
and
inc
push
mov
jnp
add
cld
pop
sub
add
int3
mov
add
call
pop
xor
dec
sub
shll
imul
clc
pop
push
push
je
add
adc
adc
insb
dec
xchg
imul
sbb
movsb
sbb
sbb
cmp
cmp
xor
mov
insb
adc
bound
push
push
out
jle
loop
dec
push
push
rclb
scas
inc
mov
push
mov
add
dec
and
inc
or
jmp
movsl
mov
dec
insl
adc
mov
pop
jo
add
and
add
pop
inc
stos
dec
pop
popf
mov
shll
loopne
mov
sti
shlb
in
cmpl
inc
pop
add
push
xchg
or
lods
xchg
jns
loopne
add
push
inc
das
ljmp
cwtl
enter
push
xchg
xchg
adc
movsb
push
repz
mov
inc
mov
adc
pushf
sub
push
int3
stos
ret
orb
dec
xchg
cwtl
fwait
and
pop
cmp
outsb
sbb
pop
shlb
xor
les
mov
jg
out
in
shlb
add
roll
test
mov
push
fmuls
fidivrl
mov
sub
divb
cmp
inc
add
adc
add
adc
int3
mov
mov
ja
mov
mov
add
and
icebp
adc
ret
inc
adc
aaa
pop
mov
pop
xor
push
stos
andl
loope
fcoml
xchg
add
or
sbb
lock
cltd
pop
cmp
mov
pop
sbb
xorl
or
popf
shlb
lahf
aad
arpl
and
fimull
and
sub
pop
xor
aas
and
sub
sti
mov
mov
aad
sti
add
xor
push
xorl
or
jl
xchg
mov
adc
sti
mov
and
clc
lods
cmp
mov
fistpll
jmp
test
or
jne
pop
or
sub
movb
ret
aam
lret
sub
cmp
jle
and
popf
xlat
pop
or
cld
mov
nop
adc
addr16
add
cld
je
jne
sbb
adc
cmp
jae
push
imul
jmp
mov
adc
and
leave
arpl
and
sbb
pop
inc
inc
std
fsubr
add
pushf
inc
test
add
ds
ret
in
int
sub
dec
sbb
xor
pop
mov
sub
pop
adcl
out
adc
add
ja
lock
add
add
inc
pop
pop
sbb
mov
inc
and
pop
movsl
mov
test
or
and
or
nop
outsl
xor
or
call
adc
inc
dec
inc
ret
fwait
lds
cli
xchg
enter
or
mov
in
and
imul
out
fmull
mov
fucomi
insb
and
xchg
and
inc
inc
pusha
mov
inc
bound
sub
pop
shrb
sahf
stc
add
cli
cmpsb
pop
rorb
or
sub
dec
sbb
into
repz
add
pop
ficoms
xchg
out
adc
shlb
add
lds
and
fcmovnb
or
jmp
adc
dec
add
sub
jmp
ret
inc
jmp
adc
or
sub
dec
aas
push
idiv
pushf
jb
gs
and
fmul
stos
cmpsb
push
ret
addl
hlt
xchg
mov
add
mov
push
sarl
add
rolb
addl
mov
pop
sbb
sbbl
push
pop
push
mov
mov
call
pop
xlat
movb
sub
out
cmp
xchg
and
je
inc
insl
bound
daa
pop
test
pop
adc
ss
repz
sbb
mov
adc
add
addb
xchg
xor
dec
cli
leave
or
push
xchg
or
aad
dec
cmpsb
ds
enter
adc
add
lea
dec
aas
cvtpi2ps
orl
ljmp
push
sarb
mov
fs
add
adc
das
and
jbe
mov
jmp
and
sti
add
cld
movsb
repz
mov
sbb
test
push
mov
mov
mov
mov
or
pusha
push
add
mull
imul
clc
xor
inc
mov
jb
ret
cwtl
sbb
ss
cmpsb
xchg
fmuls
inc
lock
sbb
out
pop
in
int
dec
lret
cld
push
fadd
les
rcrl
dec
leave
push
cld
push
push
mov
loope
cmp
js
mov
jp
mov
nop
cmp
push
nop
and
adc
movsb
cmc
mov
lret
and
or
sbb
test
jg
movsb
adc
lret
add
xor
int3
jle
add
mov
ss
xchg
nop
sub
scas
add
addl
xor
xor
cmp
push
jl
adcl
sub
cwtl
adc
fidivrs
push
sub
mov
cmp
pop
sbb
das
popl
add
leave
add
mov
fcomip
cmp
imul
xchg
lock
cmp
sbb
pop
aaa
mov
cmp
mov
add
testb
jo
clc
ds
repz
adc
inc
cmc
add
jmpw
mov
gs
xor
cmpsl
jg
push
push
push
fs
or
inc
cmp
or
movsl
loope
popa
mov
jns
sub
add
sub
lock
pop
hlt
std
orl
lret
mov
xor
or
mov
and
loopne
call
xchg
addr16
insb
xor
lea
mov
inc
nop
sub
pusha
add
loopne
js
lret
sub
mov
jnp
addb
add
iret
sub
rcl
mov
popa
and
add
jbe
inc
sub
stc
xorb
je
sbb
cmp
ja
call
enter
movsl
dec
in
dec
sbb
push
push
fwait
dec
lock
sub
movsb
movsb
or
in
sbb
push
adc
xor
sbb
ror
and
pop
add
out
cmpb
shl
and
in
call
sbb
lods
int3
popa
jmp
dec
repz
inc
or
icebp
fs
xor
nop
push
adc
test
inc
or
mov
add
mov
push
movsl
or
push
shl
add
hlt
test
mov
jnp
or
add
inc
xchg
cmp
test
xor
jmp
lcall
test
cmp
ret
mov
jnp
ja
push
dec
sub
dec
sub
sub
test
es
popa
pop
aam
popf
rcrl
cltd
mov
jae
sbb
jl
mov
cmpsl
sub
lea
int
and
sbb
mov
aad
add
mov
adc
mov
test
aas
bound
pop
nop
mov
daa
cmp
xor
hlt
out
mov
inc
cmp
jle
push
movsb
loopne
and
xor
cli
sbbb
jmp
jo
rolb
popa
inc
cmp
mov
push
xlat
sbb
out
push
imul
cltd
jmp
nop
push
mov
inc
iret
dec
mov
or
sbb
mov
sub
jle
cmp
xor
test
lock
cltd
mov
cwtl
jmp
in
push
loope
cmp
shlb
jmp
adc
shrb
xor
call
or
addr16
dec
sbb
mov
mov
add
or
mov
push
aas
sarl
mov
repz
adc
adc
mov
ret
dec
lock
pop
add
xor
dec
push
je
dec
jne
scas
sbb
bound
clc
adc
insb
xchg
xor
adc
inc
lahf
jb
sbb
add
adc
jmp
fcomi
inc
divl
and
pop
add
mov
shl
jmp
cmp
pop
out
cwtl
int
outsl
add
xor
xor
inc
daa
daa
sbb
dec
dec
pusha
or
mov
cmp
fstl
or
lock
or
stc
or
les
pushf
add
mov
push
sub
xchg
stos
and
and
sub
rorb
mov
jo
sbb
xchg
push
outsl
imul
mov
adc
sbb
or
push
cltd
outsb
sub
dec
shlb
adc
filds
inc
or
inc
mov
mov
adc
mov
mov
mov
lcall
inc
xchg
mov
les
xchg
xor
pusha
sub
cltd
sub
or
cld
xchg
js
adc
pop
add
xor
les
and
push
jb
sub
in
pop
into
stc
push
add
jecxz
xor
mov
jle
mov
adc
sub
adc
cmovs
sti
je
mov
inc
rcrl
iret
imul
pop
add
fstpt
pop
sub
sbb
jo
cltd
fwait
jne
and
add
adc
dec
and
sti
dec
sub
cs
push
inc
add
xor
imul
test
add
test
gs
pop
push
xor
leave
and
sub
js
popl
sbb
aam
sub
test
and
in
jbe
fwait
and
and
sub
call
add
movb
mov
or
xchg
mov
cwtl
and
aas
mov
dec
fs
shl
lea
mov
add
xor
or
sub
add
pop
sbbb
jecxz
push
pop
or
andl
dec
jns
sbb
cmpsb
jb
pusha
stc
bound
into
fistps
orb
pop
cmp
js
sbb
dec
ss
mov
push
adc
mov
mov
jbe
sbb
cmp
ds
and
adc
and
mov
pushf
sub
add
dec
jecxz
lock
pop
inc
dec
xor
xor
mov
adc
and
pop
jge
and
lods
call
lahf
ret
loop
gs
or
fisubl
fisttpl
hlt
stos
ja
jp
jg
inc
dec
jmp
inc
mov
insb
mov
rol
pop
inc
inc
mov
push
jle
outsb
loopne
rcrb
mov
rcr
jne
sub
fsubl
lcall
sbb
sbb
mov
cmp
mov
push
inc
add
int3
xchg
pop
lods
inc
imull
test
mov
or
repz
mov
call
aad
fwait
mov
shlb
add
jle
addb
sbb
cmpsl
fsqrt
rolb
pop
or
inc
add
push
out
add
push
inc
push
mov
inc
adc
lock
inc
mov
and
jecxz
adc
push
popa
pop
push
cmpb
addl
fldl
inc
js
out
cmp
dec
loopne
rorl
cwtl
gs
sbb
adcb
in
and
xorb
jne
int3
xchg
mov
scas
jge
stos
add
add
push
paddb
xchg
mov
stos
add
dec
add
add
lods
jmp
push
jmp
pushf
jno
int
iret
popf
dec
je
pop
test
int
je
jae
enter
jmp
inc
mov
dec
jl
xor
sbb
lret
add
cli
push
decl
xchg
xchg
enter
ficoml
or
ret
mov
or
mov
jecxz
add
push
rcll
pop
jl
add
lcall
rcrb
or
add
test
push
bound
mov
jae
inc
push
xchg
fldl
sub
mov
sbb
pop
dec
mov
ja
int3
add
mov
aas
lcall
push
pop
dec
or
adc
push
cld
adc
push
incl
pop
and
repnz
jl
dec
imul
inc
movsb
push
push
sbb
lea
and
rcr
movsb
test
stos
aam
pop
in
in
pop
shlb
repz
mov
in
mov
in
arpl
push
sbb
xchg
cwtl
pop
adc
test
out
test
jb
cmp
cmp
xor
inc
add
pushf
cmp
movsb
mov
xor
les
push
aam
lods
icebp
jbe
fmuls
addb
and
or
dec
rolb
push
movsl
loope
lods
test
sbb
popa
adc
or
xor
add
nop
push
mov
xorl
push
sbb
jl
or
popa
adc
sbb
test
mov
or
fsubr
repz
pop
clc
push
push
push
cltd
mov
iret
jecxz
sbb
mov
dec
es
xlat
fcoms
mov
jb
and
xchg
lods
and
dec
push
mov
movsl
and
xchg
and
lea
inc
mov
xor
mov
cmp
in
or
jmp
inc
push
inc
push
jo
add
dec
lea
push
mov
jns
push
push
inc
stc
jnp
andl
insb
dec
add
insl
sbb
ret
xor
sbb
sub
lods
ljmp
sub
lea
test
test
nop
inc
popa
xor
push
xor
or
test
ja
repnz
sub
mov
jbe
mov
push
and
inc
test
adc
lds
xchg
insl
dec
sbb
and
pop
inc
cli
aas
push
paddusb
mov
mov
mov
dec
push
push
cmovae
push
or
daa
dec
test
fldl
sub
sbb
cmp
out
and
mov
sbb
ret
add
les
ss
pop
mov
and
outsb
jp
lods
movsl
fisttps
jge
pop
or
mov
outsl
addr16
and
in
or
in
xor
mov
push
inc
or
leave
mov
aaa
push
add
fsubp
xchg
and
mov
xchg
rorl
xor
xor
mov
movsl
repnz
js
ret
or
mov
and
or
cmp
pop
arpl
ret
rorl
cmp
mov
inc
in
and
aam
sbb
push
rolb
sbb
xor
pop
lea
lock
movsb
jb
pop
in
and
ffree
xchg
and
cmp
nop
inc
mov
cmp
xchg
arpl
add
lret
push
add
jbe
lret
or
jb
lods
cmp
push
aaa
and
sbb
push
mov
or
cmp
jl
sbb
xchg
rorb
pusha
push
mov
or
in
mov
pop
sbb
lcall
sbb
pop
inc
sbb
rcrb
leave
out
pusha
sbb
add
stos
pusha
xor
cmp
lea
aad
rorl
push
sbb
pop
mov
add
inc
arpl
and
sub
scas
loopne
test
push
xor
aad
mov
pop
xor
and
mov
xlat
aas
sbb
mov
or
pop
cmc
sub
xchg
rolb
test
iret
lods
repz
mov
xchg
sbb
ja
xor
mov
add
in
cmp
adc
dec
add
sbb
lds
push
test
dec
jl
movsl
adc
jmp
outsb
loopne
andl
adcl
jl
pop
pop
jo
adc
add
fwait
xchg
and
or
jecxz
mull
sub
or
add
test
sbb
mov
xchg
out
mov
pop
push
clc
loope
ficomps
or
push
pop
test
xchg
mov
movsb
mov
or
cmp
dec
sbb
call
and
add
cmp
xor
sbb
movsl
mov
and
xor
test
mov
push
mov
stos
push
and
mov
hlt
imul
jl
xlat
movsb
mov
xchg
loopne
ss
fcmovnu
xor
mov
push
pop
push
pop
imul
dec
inc
cmp
dec
or
inc
mov
bndldx
cmpsl
add
addb
inc
loope
out
or
or
and
mov
mov
dec
cmp
or
dec
in
sbb
or
and
mov
test
xor
enter
icebp
mov
shll
dec
testl
fsubr
popf
push
jns
adc
int3
cltd
insl
repnz
jae
adc
adc
pusha
inc
lock
fstl
xlat
inc
loope
mov
adc
push
jns
rclb
insl
enter
repnz
mov
mov
dec
sbb
loopne
mov
jp
xor
js
xchg
aas
sbb
ds
mov
or
or
mov
sbb
fimuls
pushl
or
lods
repnz
out
add
cwtl
adc
subb
push
inc
or
pop
push
xchg
xor
or
pop
ret
test
fdivrs
pushf
sub
push
loop
fsubs
jbe
leave
test
xor
imul
ss
mov
mov
jo,pn
jge
es
sbb
les
dec
adcl
adc
and
ds
sbb
jne
arpl
add
pop
test
lods
mov
adc
inc
cmc
daa
daa
and
and
bound
sbb
add
or
adc
aas
dec
andl
pop
jmp
ds
mov
mov
subl
lea
enter
and
fildl
in
and
jbe
loopne
add
sbb
popa
and
or
call
mov
stc
es
je
shrb
cmp
dec
loopne
jno
cmp
nop
sbb
lock
push
mov
lea
rcll
and
mov
fcmovb
and
and
sti
pop
pusha
xchg
push
scas
jae
in
mov
shll
in
sbb
adc
inc
and
xor
add
les
dec
lcall
inc
pop
pop
sub
push
dec
sbb
loopne
mov
dec
pop
ds
sub
icebp
and
out
sub
stos
imul
dec
sahf
or
xor
imul
mov
into
add
sbb
add
inc
sub
pop
ja
and
xor
test
add
fs
dec
mov
dec
popf
xor
sbb
sub
lea
mov
loopne
jns
stos
sub
jbe
sub
sbb
pop
es
add
jp
sbb
jns
lock
cmp
aam
and
test
xor
dec
leave
push
and
adc
inc
enter
xor
popf
imul
add
test
jge
pusha
aaa
insb
leave
mov
andb
in
jl
shlb
pop
adc
jmp
or
dec
adc
sbb
pusha
fnstenv
push
sub
lahf
push
cmp
xor
mov
mov
cmpsb
in
add
sbb
pop
cmp
xor
fwait
cmp
sbb
sub
in
nop
cmp
and
das
loop
add
push
cs
test
xor
push
xor
inc
mov
sbb
pop
and
mov
inc
push
push
lock
repz
push
adc
inc
mov
push
cltd
lods
ds
push
xchg
jae
xor
fdivl
fsubs
addr16
cs
cmc
fwait
cmp
cmp
mov
mov
lahf
inc
dec
mov
or
rcll
or
mov
out
xchg
mov
jns
add
dec
stos
pop
dec
stc
sub
adc
stc
sub
ljmp
add
inc
addl
fwait
gs
insl
fstl
cmp
fbstp
sub
mov
pop
and
test
mov
inc
push
into
and
inc
sub
mov
ret
xor
jae
mov
jmp
adc
sub
repz
lds
dec
push
push
dec
inc
in
lcall
sbb
sub
nop
daa
mov
dec
in
test
push
adc
add
imul
test
sub
xor
mov
push
add
pop
lret
sub
pop
ret
jl
jmp
adc
and
les
sub
mov
mov
fs
pop
push
dec
dec
movsl
or
push
xor
mov
cs
outsb
and
mov
roll
cmp
test
jne
and
pop
aas
mov
sbb
fs
add
daa
pop
push
cmp
push
pushl
aaa
cwtl
nop
and
in
or
dec
cmp
mov
mov
mov
cmc
sub
mov
aam
jb
fst
sbb
aad
lods
push
ljmp
pop
push
nop
outsl
lods
arpl
adc
gs
dec
cmpsl
xor
add
adc
inc
outsb
dec
mov
and
popf
shlb
es
or
or
mov
adc
dec
or
sbb
loop
mov
and
cli
mov
cwtl
sbb
adc
and
push
xor
pop
add
mov
add
pop
mov
rol
dec
lret
ud0
add
push
pop
pushl
add
in
lock
pushl
loopne
adc
push
sbb
sbb
xor
outsl
add
dec
in
test
and
cwtl
xchg
pop
int
jp
sbb
jns
adc
movsl
adc
adc
pop
pop
xchg
loope
sbb
filds
dec
sub
xchg
push
or
xor
sub
mov
rorl
mov
inc
xlat
rclb
xchg
sub
pop
push
jns
lahf
sbb
loopne
sbb
or
push
nop
dec
call
xchg
sbb
sbb
insl
mov
subl
jb
jl
sbb
push
sbb
sub
pop
jns
movsb
mov
addl
js
cmp
pop
rclb
cmp
sub
movsb
test
mov
xchg
cwtl
movsl
jge
sub
imul
cmc
sub
es
je
pop
xor
mov
ja
push
lods
adc
dec
sti
cmp
in
pusha
jns
ljmp
rcll
shll
push
xor
sbb
mov
leave
gs
sti
mov
rcll
pop
pop
pop
xor
adc
cmp
xor
push
cmp
xor
xor
xor
mov
sub
mov
inc
add
in
add
xor
loopne
or
ss
xchg
xchg
jbe
pop
sub
aaa
lcall
std
cmp
inc
insl
loope
pop
call
sarl
sub
jo
mov
push
xor
pushf
adc
mov
mov
lock
push
aaa
sub
sbb
cmpsb
and
mov
sbb
rorl
sbb
cmpl
mov
cmp
dec
imul
negl
in
lock
sbb
and
andl
into
jno
jae
cs
dec
push
push
adc
rcrb
aam
adc
divl
push
ds
inc
xchg
xor
sbb
xor
or
hlt
pop
push
mov
inc
push
cmpl
repz
aam
cmpsb
sub
std
push
or
shll
cli
adc
xor
xor
xchg
movsb
and
and
dec
stos
xor
jl
xor
pop
sahf
pop
push
inc
pop
xchg
pop
cmpsb
sbb
sub
add
add
sub
gs
mov
mov
scas
sub
push
imul
sbb
or
add
mov
inc
pop
inc
mov
lods
push
dec
xor
mov
push
push
mov
xor
stc
and
andl
and
xor
mov
push
loop
and
adc
add
push
sub
nop
sub
inc
dec
sub
push
cmp
dec
mov
inc
xor
sahf
test
mov
sbb
loopne
xchg
sahf
dec
pop
mov
mov
test
push
mov
or
js
dec
and
cmp
repz
dec
push
das
jmp
sbb
or
add
push
or
mov
jnp
es
dec
sub
fs
push
rol
pop
push
mov
or
mov
push
mov
popf
ret
push
push
loope
leave
dec
lods
lcall
sahf
stos
testl
mov
out
je
jns
jle
add
das
aaa
ljmp
sti
push
int
and
es
in
push
push
dec
dec
sbb
mov
shlw
int
rorl
mov
add
xorl
mov
cld
rorl
xor
outsl
push
nop
in
jmp
dec
sbb
push
xchg
add
xor
leave
push
movsb
std
icebp
pop
mov
xor
stc
aad
jg
cwtl
fwait
or
test
lds
stos
ret
data16
aad
mov
imul
es
test
sub
in
sbb
enter
imul
push
pop
jp
aam
cmp
dec
or
cmpb
jle
dec
test
sbb
cmp
jae
sbb
rol
daa
and
mov
jge
cmpsb
das
mov
jmp
test
jl
cmp
and
and
mov
pop
dec
into
adc
sub
cmpsb
dec
push
lods
and
adc
dec
add
lea
sbb
push
scas
xor
test
popa
pusha
mov
push
pop
pop
xlat
sahf
jp
std
divl
aas
cmpl
call
movsb
mov
btsl
xor
add
or
daa
and
lret
pop
sbb
rcll
pop
push
push
inc
es
std
jg
jmp
adc
flds
in
je
jecxz
lock
addr16
dec
pusha
xor
jle
pusha
out
mov
push
push
call
dec
jo
pusha
pusha
xor
add
or
lea
xor
jmp
xchg
arpl
test
mov
add
mov
loope
je
and
mov
push
dec
push
push
mov
ss
and
js
pusha
sbb
sbb
dec
stc
fnsave
push
je
mov
xchg
or
add
sbbb
pop
add
into
lods
adc
inc
and
loope
sbb
and
shlb
cmp
mov
mov
push
scas
test
jne
jns
lock
sbb
add
sbb
add
inc
call
test
dec
stos
mov
dec
loopne
or
addr16
push
or
sarb
rol
or
and
inc
pop
xchg
jge
inc
pop
lods
sbb
adc
and
push
je
sub
mov
mov
inc
outsl
call
es
jo
or
cmpsl
cmp
stos
punpcklbw
adc
movsb
or
sbb
adc
push
repnz
mov
ret
sbb
movl
fwait
ss
pop
cmp
xchg
mov
add
ja
mov
sbb
lods
cmp
dec
inc
mov
xor
mov
cmp
and
jae
sbb
inc
test
fbld
pop
sub
insb
jo
pop
mov
outsl
add
sbb
fstps
mov
cmpsb
mov
add
add
and
and
mov
cmp
mov
movl
mov
test
push
incl
call
repnz
movsb
add
test
fs
dec
das
push
setns
jns
mov
lahf
pop
mov
fs
inc
insb
inc
cmp
testl
mov
push
ret
sbb
aaa
xor
dec
jecxz
inc
xor
pop
inc
push
enter
ja
pop
adc
push
divl
mov
dec
insb
sub
push
sbb
mull
dec
insb
jo
lea
insl
std
dec
push
sub
xor
pop
push
inc
dec
and
popa
pusha
xor
fs
sbb
loopne
pop
pop
add
and
shrl
shrl
movsl
rcll
adc
movsl
cwtl
pop
mov
xor
push
sbb
xchg
sbb
and
dec
aas
pop
orb
loopne
xor
ljmp
push
test
cmp
xor
jae
add
add
cmp
push
loope
stos
inc
push
mov
dec
mov
sbb
aas
add
hlt
add
test
sti
or
cwtl
imul
jns
test
mov
inc
pushl
mov
mov
in
subl
mov
xor
movsl
pop
xorb
and
out
add
addl
das
dec
add
mov
add
cmp
push
mov
push
lock
fildl
push
inc
inc
push
loope
mov
xchg
add
cmp
add
adc
mov
sbb
xchg
push
push
pop
subb
mov
inc
push
sub
cld
pop
cmp
in
push
ds
adc
or
jae
and
jl
orl
jne
ja
xlat
push
imul
and
sti
pushl
or
je
push
inc
cmp
mov
nop
or
mov
incl
inc
hlt
jne
push
fidivrs
ljmp
pop
call
je
and
andb
cmp
and
mov
lock
mov
xchg
mov
sbb
or
fdivr
ret
rclb
je
fcomps
pop
and
jns
loopne
push
int3
adc
ror
and
adc
leave
loopne,pn
pop
push
inc
add
xchg
lock
add
sub
push
icebp
sbb
jo
imul
inc
cmp
pushf
mov
in
sbb
jge
les
pop
add
test
push
and
jecxz
mov
and
or
add
push
dec
mov
dec
cmp
mov
fisubl
je
dec
or
xor
hlt
add
faddl
push
repnz
js
dec
cld
ror
pop
mov
pop
rorl
mov
imul
mov
nop
and
dec
adc
mov
inc
inc
xchg
repz
inc
push
stc
nop
clc
and
sub
adc
and
jns
add
or
leave
imul
sub
push
nop
sub
and
jnp
and
arpl
js
push
daa
or
add
and
jg
pushl
add
outsb
clc
mov
mov
addr16
rorb
dec
inc
or
int3
ret
loope
movsb
loopne
jb
mov
orb
and
sub
fmull
leave
inc
jb
sub
incb
iret
sbbl
xchg
test
scas
aas
mov
aad
jo,pt
or
pop
add
xor
add
test
insb
lods
sub
repnz
test
jne
dec
jp
dec
or
or
js
ret
push
cmp
fimull
inc
xchg
rorl
inc
xchg
aam
test
dec
inc
rorb
jl
aaa
mov
test
imull
inc
rolb
inc
or
and
mov
sub
adc
nop
mov
and
js
jp
sbb
jmp
pop
pop
xor
inc
cld
sub
call
je
inc
jbe
fcomps
and
adc
adc
loop
mov
stos
dec
mov
in
mov
mov
add
cmovp
shrb
inc
and
adc
adc
jbe
sbb
lcall
push
mov
repz
pop
stos
mov
mov
adc
inc
enter
xor
and
sub
sbb
adc
dec
jne
or
or
mov
and
cmp
insl
mov
sbb
add
adc
and
in
addl
push
sub
scas
mov
je
mov
mov
or
add
das
or
and
or
leave
addl
pusha
loopne
pcmpgtw
mov
add
loopne
add
movsl
out
jle
lea
push
jne
ret
xor
icebp
rcr
popf
cmovo
stos
jne
push
push
mov
inc
sub
std
and
clc
mov
sub
sub
xor
sbbl
test
sbb
sar
das
clc
push
add
xor
xchg
push
jo
and
mov
dec
inc
jmp
sbb
movsl
outsb
and
xchg
sbb
pop
aad
jne
dec
inc
add
cmp
insb
jmp
mov
jb
incb
adcb
sahf
mov
jne
pop
test
push
rcll
call
or
ret
mov
inc
movl
in
stos
or
pop
mov
or
out
and
xor
or
push
call
or
pushl
aam
or
movsl
mov
xchg
dec
mov
jne
adc
sbb
fimuls
sub
test
push
leave
pop
pushl
ss
cli
jmp
or
sub
or
sbb
add
ljmp
filds
inc
dec
add
inc
dec
adc
or
loop
push
lods
jbe
fucomi
icebp
aas
aad
adc
jno
and
out
test
decl
adc
mov
mov
lcall
pop
cmp
sti
scas
sti
jle
jb
adc
adc
jbe
sub
jnp
testb
je
pushf
jecxz
mov
push
mov
test
movsb
jecxz
clc
cmp
push
subb
addb
cmp
mov
cmpsl
jne
addr16
cld
in
mov
mov
lods
and
pop
push
add
or
adc
mov
and
and
push
push
adc
imul
in
or
adc
test
mov
outsl
sub
push
lea
adc
add
cmp
es
aaa
or
or
and
les
int3
sahf
dec
popa
adc
je
movb
mov
mov
push
adc
adc
mov
mov
dec
cli
cmp
outsl
inc
mov
cld
mov
sbb
and
and
adc
sub
mov
std
xchg
call
es
in
shrl
shlb
jmp
push
add
cmp
push
dec
and
leave
nop
lret
jge
imul
jg
sbb
adc
test
hlt
add
sub
mov
dec
cmp
aad
mov
add
cwtl
movsl
mov
and
inc
ljmp
and
or
decl
xchg
in
outsb
mov
push
push
inc
xor
sub
push
test
jo
fldcw
mov
sub
hlt
aas
jecxz
adc
test
cltd
and
and
nop
xor
or
mov
ljmpw
call
das
mov
pop
jno
js
mov
fcmovbe
add
call
ja
es
flds
add
enter
outsb
inc
lret
loopne
cmp
cmp
aas
mov
xchg
pop
dec
inc
dec
or
lock
and
push
int3
pop
and
mov
cwtl
fwait
jge
inc
dec
and
subb
add
add
rorb
xor
outsb
adc
add
clc
xor
test
mov
push
int3
ja
dec
xor
or
xchg
pop
push
push
xorl
dec
fmull
fidivl
push
hlt
jne
cmp
pushf
adc
adc
push
dec
inc
and
add
sbb
push
jo
xchg
fsin
sbb
mov
dec
xor
or
xor
xchg
xchg
ss
mov
xorb
cmp
sub
inc
push
or
mov
fstl
inc
nop
and
fstps
stos
fs
sub
and
pop
pop
mov
jns
push
pop
lret
lock
mov
jno
jbe
sbb
jnp
xor
mov
repz
loopne
in
add
loop
or
jl
loope
out
aad
add
lods
mov
jo
loopne
mov
dec
rcr
sub
sub
add
mov
mov
sub
push
xor
or
inc
push
adc
lock
inc
pop
xchg
mov
xchg
mov
push
je
test
push
push
and
repnz
or
adc
aas
push
stos
add
enter
mov
sbbl
es
dec
aam
nop
iret
dec
adc
adc
xchg
jno
andb
and
cmp
and
roll
icebp
test
xchg
mov
lods
testl
das
inc
nop
adc
repnz
xchg
xor
in
add
or
push
mov
dec
fcom
sbb
pcmpgtd
adc
dec
mov
lds
jo
in
divl
inc
pop
inc
rolb
add
fnstcw
inc
dec
daa
mov
mov
je
jne
push
pop
sub
add
jmp
add
mov
insb
pop
cmp
adc
add
dec
pop
je
enter
cmpsb
push
loope
or
jle
clc
adc
pop
imul
pop
movsl
xor
push
sbb
dec
scas
push
roll
cmp
pop
push
xorb
pop
inc
mov
es
lea
js
lss
or
stos
sub
cmp
jne
add
xchg
lods
dec
test
pop
dec
roll
rol
sahf
sbb
shr
dec
inc
repnz
xor
dec
int
outsb
loopne
dec
pop
add
test
maskmovq
testl
sbb
stos
push
inc
jg,pt
cmp
push
popf
pop
add
in
inc
ds
loope
daa
pop
cmpsl
in
dec
adc
inc
or
nop
mov
cwtl
jge
jge
mov
cmc
scas
pop
or
push
loopne
cmp
es
fldcw
mov
and
add
sub
subl
pushf
es
call
push
cmp
shrb
cld
sub
or
int3
loope
sbb
cld
push
outsl
or
in
adc
add
jmp
dec
sub
add
stos
idiv
cld
add
imul
xor
pusha
dec
dec
xor
sub
dec
pop
mov
enter
sbb
addb
add
movsb
push
or
and
mov
dec
imul
jl
push
mov
orb
pushf
pop
movsb
push
sbb
call
push
xor
push
add
outsb
push
push
lock
jo
adc
outsb
pop
xor
cmp
adc
pop
xor
or
dec
les
sbb
pop
cmp
mov
push
in
lea
shl
sahf
push
push
mov
fwait
jae
dec
pop
iret
xor
mov
arpl
sub
push
jnp
and
sub
pop
inc
jg
fwait
xor
pop
add
jmp
push
pop
pop
sbb
sub
test
nop
adc
test
and
sbbb
loop
ret
fs
fldenv
lea
adc
pop
pop
push
cmp
adc
ret
int
mov
in
mov
inc
jg
ret
inc
dec
push
dec
xor
or
adc
aam
testb
loopne
aam
mov
push
movb
xor
push
movb
pop
push
nop
fldcw
popf
adc
push
ret
scas
fmull
push
jle
daa
add
mov
pop
cli
js
loope
cmpl
xchg
xchg
push
mov
mov
pusha
xchg
cmpsb
fadd
call
mov
test
mov
or
fsubr
cmp
xchg
les
mov
sub
xchg
cld
xor
fadd
insl
cmc
rorl
push
xor
sbb
scas
add
inc
enter
test
xchg
and
rcrb
fimuls
jmp
dec
push
mov
and
pop
push
and
in
jp
xchg
es
inc
fistps
jo
mov
jle
lea
aaa
cmpb
inc
insb
faddp
jne
pop
push
cs
es
clc
movb
push
lret
adc
clc
sub
cmp
pop
jl
pop
je
sub
clc
add
ficoml
dec
push
loopne
xchg
dec
inc
fdivl
mov
ficoml
cmp
out
daa
sbb
mov
call
test
cmp
or
ret
adc
push
xchg
add
rol
imul
xor
jae
push
xor
loopne
stos
or
je
cmc
pop
mov
test
pop
or
fnstsw
and
enter
push
and
or
jmp
dec
adc
sarb
xor
push
fidivrs
push
pop
dec
adc
add
pop
test
das
mov
push
dec
add
pop
je
test
in
call
jmp
cmp
jne
xor
inc
and
xorl
inc
and
dec
mov
adcb
in
les
push
shll
dec
fmull
ja
inc
cmp
inc
and
jb
push
sub
xchg
xchg
xchg
mov
xor
lcall
je
divl
and
sbbb
lret
and
int3
lock
mov
shrl
jb
int3
dec
cld
push
sub
clc
and
cmpl
jne
and
shl
scas
in
test
jmp
test
ret
ss
leave
pop
inc
pop
fs
dec
sub
repnz
or
adc
mov
shll
mov
push
lods
testb
outsb
or
lcall
aaa
and
and
dec
mov
and
adc
or
in
mov
enter
sbb
and
insb
fildl
fadds
or
jle
inc
adc
or
sbb
mov
adc
jp
push
stos
std
negb
push
sbb
clc
adc
js
cmp
or
adcb
cmc
sub
bound
push
cld
call
fucomp
mov
xorb
adc
adc
pop
shrb
push
cld
push
add
push
sbb
jne
dec
dec
push
daa
or
ret
sahf
pop
ret
ret
pop
cmp
push
inc
mov
or
ret
test
add
push
shrb
jecxz
outsl
fdivr
dec
push
orl
pusha
jg
mov
jmp
mov
add
pushf
mov
jmp
je
mov
jmp
or
and
in
mov
lea
pop
push
ret
sub
or
and
and
dec
push
cmp
xorb
xchg
les
mov
or
or
xor
mov
sub
push
lcall
and
pop
push
sbb
xor
sub
or
inc
or
int3
not
mov
xchg
xchg
adc
cli
push
dec
rorl
or
xor
in
jl
adc
movsb
test
int3
and
je
add
xor
sbb
push
xchg
hlt
loop
movsl
jge
les
xchg
sbb
xlat
jne
jp
sbb
pop
stos
or
stos
mov
je
push
sub
xchg
mov
fists
fimuls
mov
insl
xor
fidivl
inc
movsb
cmp
in
cld
pop
lods
addw
ja
adc
test
je
test
cmp
mov
xchg
popf
or
enter
pop
sub
dec
mov
and
add
aas
adc
inc
lret
lcall
movsb
or
adc
out
jno
mov
cmp
mov
in
add
mov
mov
sbb
jb
mov
add
pop
aad
or
fs
daa
inc
aas
jp
ja
popa
mov
mov
sbb
sub
add
adc
dec
jl
js
mov
clc
xchg
adc
mulps
push
cli
xor
mov
sbb
and
pop
sbb
or
xchg
mov
sbb
jo
push
xor
lock
and
hlt
mov
jb
test
out
jo
pop
cmpsl
mov
adc
mov
scas
adc
out
lods
push
test
fimull
iret
addr16
pop
pop
jnp
cmp
je
jmp
mov
and
or
xchg
or
add
jle
call
mov
mov
je
lock
dec
and
adc
add
inc
fcmovnu
add
adc
push
sbb
dec
mov
mov
into
push
mov
push
sarb
jae
jb
mov
xor
repnz
adc
cli
popa
add
or
mov
pop
ja
or
and
es
js
pop
int
mov
inc
push
fsubr
add
add
or
in
loopne
sbb
test
popf
ljmp
mov
or
pop
das
add
sbbl
shrb
in
xchg
es
lock
push
aas
or
xor
xor
sbb
nop
pop
repz
test
pop
push
add
lock
subl
push
push
mov
dec
pop
pop
sub
mov
mov
icebp
jge
stos
push
loopne
or
mov
mov
adc
sti
jnp
sbb
adc
lret
std
dec
cmpsb
mov
subl
je
push
adc
pusha
lret
dec
cmp
dec
or
call
lea
repz
push
cwtl
call
xor
dec
jb
cltd
call
add
mov
sbb
xchg
push
hlt
cli
and
push
pop
mov
das
lock
nop
loop
inc
sbb
outsb
inc
das
cmpl
and
xlat
sbb
jae
in
add
das
xchg
lock
sub
push
mov
cmp
mov
dec
add
inc
or
mov
cwtl
xchg
cmpsb
pushf
das
lods
push
pop
sub
lahf
add
sarb
add
dec
pop
jns
sub
mov
pop
ss
pop
movsl
cmp
adc
add
mov
mov
rclb
inc
rcll
ja
push
adc
testb
pop
sahf
pop
pop
ret
rcl
sahf
mov
push
and
cmpsl
jge
int
fst
or
push
rorl
adc
inc
dec
rclb
push
jmp
cmp
dec
ret
push
push
fdivrs
mov
in
das
push
aam
jne
pop
and
pusha
bound
mov
pop
sub
notl
xor
sub
mov
cs
adc
add
mov
cmp
xchg
add
idivb
mov
push
rol
push
cmpsb
sub
lods
clc
sub
imul
inc
push
pop
push
mov
jmp
cmp
movsl
jno
mov
push
test
mov
xchg
inc
and
or
enter
jae
andl
jbe
and
loop
cld
and
pop
push
mov
xchg
adcl
push
imul
xchg
loopne
sbb
adc
jno
or
jle
jo
je
pop
inc
push
adc
jns
xor
cmp
or
adc
hlt
push
push
cmp
add
or
xchg
ret
in
sub
mov
mov
mov
adc
sbb
adc
pop
push
mov
add
shll
inc
push
xor
adcb
push
mov
adc
mov
mov
or
pop
and
lahf
ret
mov
cld
mov
dec
cmc
push
ret
dec
mov
lods
rcrb
cmp
je
jnp
jbe
or
add
mov
cmpsb
adc
inc
out
rclb
out
inc
adc
loope
and
push
lea
je
mov
add
adc
push
pop
cmp
xchg
pop
inc
adc
andb
or
xchg
in
inc
subl
push
sub
dec
dec
or
repnz
js
mov
js
sbb
xchg
nop
loopne
add
jnp
jne
jbe
inc
lret
mov
mov
mov
mov
fidivrl
lret
mov
iret
jb
loopne
xor
push
adc
jae
pop
mov
rorb
push
test
test
inc
loop
insb
mov
push
mov
inc
lahf
addb
push
mov
icebp
mov
das
jge
inc
rorl
mov
in
ja
sub
sbb
add
mov
into
pusha
cmp
cmp
repnz
inc
inc
loope
cli
mov
add
loope
mov
push
shr
mov
and
mov
or
adc
sbb
jmp
or
sbb
cmp
xchg
sbbl
and
icebp
js
add
push
in
int3
xchg
rclb
push
add
dec
push
push
jecxz
inc
popf
mov
jbe
push
adc
pop
add
insb
push
push
and
mov
adc
and
cli
mov
clc
call
xchg
pushf
jmp
adc
mov
mov
mov
mov
mov
xor
or
movsb
mov
jno
inc
repz
sub
mov
por
rolb
sbb
add
fst
addr16
sbb
in
push
nop
sbb
ficoml
aam
push
shl
mov
push
or
pop
push
lcall
mov
aam
push
dec
jo
sbb
enter
inc
or
jns
ret
add
push
jae
arpl
dec
push
repz
cmp
or
push
or
clc
in
lret
dec
insb
jne
or
cmp
push
xchg
jg
adc
sub
hlt
push
add
lea
or
add
mov
or
mov
pop
adc
bound
jo
mov
out
scas
or
or
out
push
or
pop
inc
dec
mov
mov
xchg
dec
dec
xor
rcrb
inc
nop
and
cmpsb
neg
movb
rcrb
xchg
and
pop
iret
dec
mov
call
cmp
jb
mov
xor
and
adc
je
sarl
push
or
pop
mov
push
sub
push
push
xor
mov
shlb
dec
sbb
mov
push
jae
cmp
call
add
mov
aad
xor
pop
and
popf
jle
les
push
or
lea
mov
push
in
pop
xor
loopne
pop
outsb
and
enter
mov
rorl
sti
mov
fwait
or
push
mov
mov
add
or
rolb
sbb
push
ficompl
or
sub
inc
ja
add
mov
push
imul
adc
inc
and
add
cmpsb
imul
imul
cs
or
or
call
and
andl
add
add
scas
sub
mov
cmp
xor
addr16
add
mov
scas
sub
and
xchg
imul
in
add
jecxz
adc
add
loopne
add
inc
mov
pushl
xchg
xchg
add
jbe
pop
push
fadds
sbb
push
fs
je
fs
push
fs
push
push
pusha
push
cmp
lcall
pop
ret
mov
adc
pop
xor
data16
jg
inc
xor
aas
xor
adcb
push
clc
adc
and
and
push
cmp
cmp
jne
pop
fbstp
jl
test
rorl
fldt
dec
pcmpeqw
or
or
inc
adc
jae
lods
sbb
add
adc
popa
add
in
dec
adc
fbstp
jmp
cmp
and
cltd
pop
sbb
dec
mov
sbb
shl
push
or
fscale
and
cli
push
ja
pop
arpl
xchg
add
jne
mov
or
inc
jo
movswl
loop
rcr
push
push
shr
mov
push
inc
dec
popf
loope
add
add
jo
subb
mov
insl
in
jne,pn
pop
daa
call
shl
mov
shlb
sbb
arpl
sbb
mov
inc
fidivs
cmp
pop
push
rol
ljmp
add
inc
mov
and
xchg
pop
jne
lea
add
or
adc
loopne
mov
pop
ljmp
xor
out
test
push
add
andl
rorb
jbe
mov
adc
mov
xlat
subb
pop
mov
rcll
insb
mov
sbb
das
add
dec
sar
iret
cmp
fnstcw
push
stc
lods
mov
insl
jmp
out
fnstcw
add
mov
stc
push
adc
clc
loopne
mov
stc
jo
adc
lock
push
xchg
loopne
sar
cs
jne
jl
cmpsl
lods
xor
ja
insb
cmovp
inc
sub
sub
sub
sbb
sub
push
add
push
aam
and
cmp
xchg
ljmp
ret
adc
ljmp
xchg
pusha
mov
sarl
test
lock
clc
mov
push
jmp
rorb
jg
loop
jmp
cmp
cld
scas
or
outsl
xchg
cwtl
cwtl
inc
jo
dec
xchg
dec
adc
arpl
sub
dec
or
add
cli
arpl
push
push
and
or
add
adc
inc
or
pop
or
adc
adc
sub
mov
icebp
mov
fiaddl
movb
xchg
mov
and
mov
test
cmpsb
fcom
mov
insb
xchg
xor
xchg
je
pusha
push
or
push
fmul
gs
xor
jnp
add
sbb
rorb
enter
test
dec
or
out
or
inc
inc
cwtl
notl
cmpl
xchg
and
sbb
or
or
mov
je
enter
pop
fs
pusha
mov
xor
push
loope
add
cltd
add
pushl
icebp
pop
testl
je
cmp
jg
divb
mov
in
mov
mov
and
loopne
pop
cmp
je
xor
insb
sbb
int3
push
push
lock
push
sub
dec
icebp
push
xchg
inc
pop
xchg
jmp
lea
pop
fdivrl
dec
leave
add
push
imul
jne
lock
dec
js,pn
into
adc
lock
dec
inc
cs
lock
pop
mov
jmp
jmp
xchg
push
jl
jbe
adc
mov
sub
push
out
jp
dec
ss
out
adc
mov
jbe
cld
cmp
roll
mov
das
cmpsb
mov
stc
lea
rorb
ret
pop
cs
pop
loope
cltd
popa
adc
push
xor
lcall
push
mov
cwtl
loopne
testb
and
jne
sahf
add
jb
xchg
adc
sbb
loope
xlat
test
je
test
ljmp
add
adc
and
and
inc
pop
adc
loopne
adc
push
sbb
jns
nop
push
adc
jo
and
xorl
or
inc
mov
or
ror
cs
add
popa
push
addr16
pop
or
jne
mov
push
xor
xchg
fsubs
jbe
lds
jne
xchg
stos
or
test
xchg
mov
cwtl
fidivrs
addb
inc
movsb
push
test
sub
or
jnp
pop
loopne
je
sbb
or
pusha
xchg
push
jbe
jle
and
dec
push
lea
push
sbbb
test
aam
scas
sbb
push
lret
push
or
xor
dec
lods
add
adc
pushf
outsl
rorb
insb
or
xchg
or
pop
inc
sbb
les
xor
and
pop
sub
in
mov
xor
adc
fs
sub
sub
inc
aam
loop
add
jns
adc
lea
pop
mov
push
pusha
xchg
ficomps
test
fmul
inc
jno
jmp
std
mov
mov
arpl
push
pop
cmp
loopne
push
aad
into
test
xchg
xor
pop
dec
cwtl
sbb
pop
loopne
inc
mov
iret
ja
cli
ficompl
mov
mov
mov
sbb
jg
adc
sahf
ljmp
fisubs
sbb
or
add
and
xchg
pop
aas
pop
xlat
jo
inc
ljmp
inc
andb
and
or
sub
push
and
fadds
cmp
fistl
into
and
fsub
adc
lds
in
cmp
ds
loope
jns
push
xchg
lret
jl
or
inc
verr
sbb
dec
push
adc
rcrl
mov
nop
jecxz
loope
mov
gs
push
cmp
mov
xchg
inc
fsubr
sahf
scas
add
arpl
mov
push
inc
xchg
ss
add
bswap
add
popa
mov
ja
cbtw
shrb
adc
retw
xchg
jp
xchg
sbb
icebp
popa
popa
call
xor
xor
stc
je
pop
sbb
shlb
xlat
aam
sbb
shlb
es
pop
push
js
out
jo
push
cli
or
mov
pop
xchg
sahf
cmp
push
xchg
popa
cwtl
add
push
lock
xchg
stos
scas
and
orl
cmp
test
lods
push
jo
mov
dec
jmp
rolb
and
mov
xchg
mov
test
cli
jmp
jg
inc
cmp
dec
negl
dec
xchg
movsb
mov
je
orl
push
mov
cmpsl
fstl
jnp
cmp
push
pop
lea
or
fs
mov
mov
leave
sub
ret
push
push
fwait
sub
fimull
sub
mov
rclb
dec
or
lock
jp
jp
push
push
sahf
fstpt
adc
fisttpll
and
lahf
sub
lods
sbb
add
aaa
mov
sbb
push
dec
dec
imulb
mov
std
and
aad
call
jge
orb
adc
ficoml
jmp
xchg
mov
pusha
sbb
fldt
cmc
cmp
movsl
add
sbb
xor
and
add
jp
add
cmp
data16
icebp
and
js
mov
sub
ret
mov
int
rcll
xor
pop
adc
lock
test
decl
xchg
out
ds
sbb
data16
sarb
push
loope
fldl
adc
rolb
jns
xor
call
or
adc
push
and
ljmp
scas
xchg
jns
push
test
icebp
xor
mov
xor
mov
or
jo
push
sub
adc
push
jo
pop
jmp
xchg
fimuls
add
push
lock
add
outsl
adc
insb
int
cwtl
mov
cwtl
fbld
roll
ret
insl
pop
enter
sbb
mov
sbb
push
cmp
ret
cmp
and
and
adc
sbb
cmovge
sbb
add
outsl
inc
sub
test
xor
or
cmc
push
xor
or
into
mov
daa
cwtl
test
addl
dec
push
loopne
xchg
xor
xor
inc
xchg
je
inc
add
adc
xor
xor
ror
push
sbb
inc
jo
fcmovbe
xor
mov
mov
push
pop
mov
pop
add
sbb
and
push
or
out
cmp
sarl
push
inc
das
rcr
sub
push
fsubl
push
or
mov
ret
pop
pop
pop
pop
jge
inc
push
jns
jb
or
pop
and
mov
jb
or
inc
andl
adc
push
sub
jl
mov
push
xor
inc
or
pop
cmpsb
pop
mov
cmp
movsl
pop
dec
xor
pop
cltd
sbb
sahf
push
xchg
mov
scas
test
rcll
arpl
mov
push
xor
es
push
ljmp
pop
in
mov
loop
jo
icebp
jb
inc
mov
fdivl
pop
mov
adc
test
push
addb
pusha
jno
pop
bnd
dec
cmp
mov
jl
inc
aaa
adc
or
mov
adc
add
pop
push
in
shr
pop
or
js
add
cmp
jbe
dec
adc
pop
jg
inc
adc
inc
test
rcr
add
rolb
into
xor
addl
in
sbb
pop
pop
jb
jmp
jecxz
test
xchg
mov
or
sub
call
add
pop
scas
mov
cmpb
mov
xor
add
xorl
testb
out
sub
mov
jg
mov
or
les
xor
add
and
xor
xchg
push
sbb
or
inc
adc
int3
ljmp
ja
push
mov
mov
xor
scas
push
imul
lahf
sbb
in
stc
pushf
mov
sbb
addl
xor
xchg
jp
add
and
cmp
add
lea
xchg
into
mov
aaa
add
and
add
ficomps
sub
mov
aas
push
push
test
rcrl
xchg
xchg
xor
ljmp
rol
filds
fldl
lods
cmp
jne
shr
dec
mov
mov
mov
pop
imul
sbb
pop
push
push
call
push
xchg
and
mov
or
xor
outsl
and
mov
nop
and
ret
lea
fmul
lods
ret
mov
ss
shlb
pushf
xchg
inc
xlat
cmpsl
jns
jnp
sahf
push
aam
mov
rcrl
jmp
pop
jo
adc
sbb
sub
pop
or
mov
sbb
shr
std
mov
pop
pop
subb
aas
js
mov
ret
jmp
fistl
dec
repnz
popf
dec
cmp
pop
rcrl
jmp
nop
push
or
out
fcoml
push
mov
xchg
rol
orb
negl
cwtl
xor
jp
inc
push
fsts
test
and
mov
mov
and
add
xor
push
lcall
pop
sub
or
fisubl
je,pn
pushf
xor
add
cmp
enter
mov
cmp
cwtl
cmp
add
push
or
inc
push
pop
enter
add
inc
mov
ja
je
push
std
gs
push
push
psrad
inc
cmpsb
daa
dec
pop
js
add
jo
add
mov
gs
dec
cmp
cli
andl
repz
add
test
popa
lea
dec
fidivrs
clc
sti
cmpsb
lods
and
pop
add
out
sbb
sahf
mov
aam
test
es
cli
pop
jbe
mov
push
mov
jp
dec
jo
pushf
ljmp
add
pop
and
fcompl
xor
cmp
xchg
sbb
add
ret
mov
mov
mov
mov
or
jae
push
adc
mov
lods
sbb
sub
test
imul
jbe
inc
ljmp
cmp
scas
shlb
rcrl
outsb
fstpl
dec
insb
add
or
add
mov
cmp
push
jbe
outsl
movsl
jge
mov
or
jge
adc
pop
dec
push
int
notl
or
adc
jne
and
pop
imul
mov
pop
mov
push
xchg
xchg
out
push
roll
mov
add
or
push
mov
pop
and
aas
or
lods
jbe
loop
int
testl
fiadds
push
cld
xor
push
jle
sar
inc
in
jge
movl
and
add
test
mov
adc
cmp
shlb
dec
sahf
loope
xchg
popf
sbb
stos
pusha
insb
std
mov
jg
stos
sbb
mov
aam
adc
mov
push
jbe
out
sbb
xor
sbb
push
and
scas
rcrl
push
push
push
shl
clc
and
dec
mov
je
push
lock
jle
cmpsl
jl
pop
adc
inc
hlt
push
dec
cmp
mov
rol
add
jns
mov
jecxz
shlb
push
fucom
mov
mul
je
lcall
mov
dec
sub
outsb
cmp
pushf
xor
dec
push
rolb
jb
sbb
imul
sbb
aaa
subb
and
mov
add
loope
adc
pop
cld
jecxz
adc
push
sbb
mov
dec
nop
out
movsl
addl
or
sub
push
xchg
mov
dec
cmpb
adc
loope
ja
mov
inc
adc
movb
cmp
xchg
mov
add
pop
cmp
pop
dec
add
mov
daa
ss
mov
push
xchg
punpcklbw
js
sub
mov
push
fiadds
jae
push
call
push
mov
cmpsb
sbb
lea
es
mov
mov
sub
xor
cmp
jbe
sbb
mov
dec
xchg
fldl
pop
sub
or
rclb
sub
add
xchg
sub
jg
mov
jge
xchg
adc
dec
in
shl
xor
mov
repz
push
add
addr16
out
rol
loope
adc
xlat
dec
dec
pusha
fadds
push
mov
adc
push
ss
adc
xchg
cli
data16
add
xchg
inc
loope
push
mov
jo
bound
sahf
xor
loope
jno
dec
loop
pop
inc
mov
pop
and
addr16
jbe
cmp
pop
sbb
orl
lea
cmpsb
add
lods
adc
les
in
push
mov
and
inc
mov
add
pop
add
inc
popf
pop
fs
mov
push
or
or
jbe
fists
lea
push
cmp
bound
mov
mov
mov
cmc
lea
dec
mov
pop
fs
xor
mov
pop
pop
testl
xor
aas
cmp
dec
jbe
repnz
call
jo
stos
inc
or
inc
ljmp
jb
pop
mov
xchg
loope
and
movsb
dec
pop
and
sbb
or
jmp
or
inc
loop
inc
mov
dec
sbb
push
jbe
into
xor
dec
jl
sbb
nop
push
pushf
sbb
pop
push
test
mov
leave
jno,pt
out
je
add
shl
cld
loopne
add
js
sbbb
nop
jle
xor
or
call
xor
xor
sbb
adc
mov
movsb
inc
mov
cmpsb
add
int
xchg
in
jbe
xchg
mov
filds
les
int3
pop
lret
cwtl
mov
jle
xor
fdivrl
sbbl
mov
insb
jmp
pop
pop
push
push
in
mov
add
xor
in
mov
imul
push
in
dec
sbb
or
mov
mov
gs
inc
stos
xor
adc
testl
arpl
ret
jae
cmpl
mov
push
rolb
adc
cmpb
xor
fwait
mov
pop
lods
push
pusha
lods
mov
add
movsb
lret
mov
add
mov
mov
aaa
adc
gs
dec
add
in
mov
sti
sub
xor
add
call
cmp
pop
pop
stos
push
pop
sub
sbb
cltd
xor
mov
inc
push
loope
pop
in
test
add
or
xchg
fdivr
push
xor
xchg
pop
loope
xor
push
mov
adc
pop
dec
cs
dec
imul
dec
les
add
je
cmp
test
inc
jns
loopne
xor
and
xor
ret
imulb
cmp
addb
pop
stos
test
pop
push
imul
jae
fisttps
mov
out
ret
xor
ret
mov
mov
mov
ja
je
or
je
or
sub
xchg
out
jbe
adc
xor
push
or
ret
cmpl
mov
movsb
js
sbb
jl
jne
lcall
sub
sti
sarb
sbb
adc
adc
push
xor
inc
pop
add
sub
xchg
lds
add
int
bound
push
pusha
xchg
cwtl
jbe
call
hlt
cmp
mov
loope
pop
cmp
mov
inc
in
cmp
pop
test
cmp
mov
adc
je
shlb
call
fs
xorl
adc
and
imul
loope
test
movsl
and
add
adc
mov
mov
ds
or
test
add
fwait
test
dec
je
sub
je
sub
add
push
dec
xor
add
adc
in
sub
or
or
lds
or
push
adc
inc
xchg
mov
pop
add
adc
fwait
lret
aas
cmp
dec
push
test
jmp
loop
cmp
lea
clc
cmpsl
dec
sbb
add
int3
sub
push
daa
ficoms
or
stos
or
xchg
push
dec
xchg
emms
pusha
pop
sbb
sbb
mov
push
push
add
imul
int
pop
das
jge
xor
adc
fdivrl
notl
popa
add
mov
divb
mov
in
and
push
and
mov
inc
push
inc
push
push
push
movsl
sbb
push
shlb
call
int3
mov
loopne
in
push
xor
loopne
popf
push
inc
cmp
fsub
aam
and
repnz
xor
pop
dec
push
ret
arpl
orl
pop
adc
sub
adc
cmp
jne
pop
in
add
xchg
mov
xchg
mov
and
mov
jecxz
scas
mov
or
popa
add
mov
fwait
out
call
les
push
cltd
mov
repnz
inc
mov
rcl
mov
ds
nop
dec
leave
push
ret
ret
cmp
dec
repz
fcomps
jl
pop
fdivrs
repz
sbb
jae
es
push
or
and
icebp
mov
out
jns
or
lock
xchg
movsl
mov
push
andl
ror
fidivs
sahf
cmp
test
add
dec
inc
push
nop
aam
aam
leave
add
lret
sub
loopne
movsl
or
inc
sahf
es
in
clc
mov
mov
loopne
mov
push
xlat
out
andl
mov
and
imul
sti
sar
inc
sub
mov
inc
into
jno
fcmovb
push
test
sub
cwtl
cli
in
movsb
cmc
push
adc
mov
jl
movsl
jb
push
ja
fistpl
sbb
mov
insb
xor
jb
lods
and
sti
fisubl
mov
sbb
sbb
arpl
inc
xchg
dec
inc
pop
add
pushf
popa
push
std
sarb
adc
pushf
adc
xchg
mov
ret
jbe
pop
shlb
sbb
jmp
jle
dec
ficoml
pop
or
leave
rcll
sub
inc
push
clc
push
sub
dec
push
pushf
out
add
adc
pop
jnp
cwtl
mov
xor
les
and
push
inc
push
mov
shrb
jmp
imul
movl
fsubp
int3
fisubs
add
sub
shll
push
lahf
dec
in
sub
imul
mov
push
and
shrw
mov
push
jno
jnp
push
jo
orl
sub
daa
subb
xchg
push
push
or
inc
enter
mov
pop
daa
inc
ret
ffreep
clc
xor
movl
add
or
xchg
cmp
mov
adc
lcall
ja
pop
out
adc
sbb
prefetch
shll
push
mov
test
fmul
mov
dec
gs
loope
add
push
lods
cs
insb
mov
push
aas
xor
push
push
imul
xchg
dec
in
inc
add
push
outsb
call
gs
pop
incl
add
jl
xchg
fdivr
or
dec
mov
mov
push
cmc
push
fdivs
nop
scas
push
add
dec
and
aam
push
lea
mov
pop
mov
and
mov
xlat
and
mov
ficomps
push
nop
std
pop
mov
sbb
loopne
adc
ja
neg
sbb
mov
push
and
jb
add
jo
nopl
add
sub
sbbb
push
jno
lahf
mov
fsubr
push
inc
dec
push
add
mov
xor
push
add
mov
in
mov
sbb
fsts
jl
cmpsb
in
mov
mov
shrl
jl
adc
jno
add
incb
jb
and
movsb
and
add
or
repz
call
sahf
ljmp
test
sar
je
mov
xor
cli
mov
and
adc
movsl
mov
cmp
sbb
inc
push
pop
pop
and
lock
lock
in
xchg
jbe
lods
movsb
dec
sbb
inc
es
mov
cmp
and
pop
pop
dec
mov
pop
cmp
adc
call
sub
fmulp
popa
orb
js
je
xor
jae
mov
cmp
add
jge
outsb
sarb
sbb
cmpsl
fstl
xchg
in
and
push
cltd
popa
xor
inc
mov
xchg
in
mov
mov
inc
out
add
pop
call
and
orb
push
pop
mov
jmp
sarb
in
stos
fnstcw
jnp
add
add
xor
and
adc
add
and
adc
pop
xchg
js
mov
push
mov
cmp
les
outsb
cwtl
push
sbb
movsl
insl
addr16
ss
push
aaa
sar
xchg
pop
sbb
push
movsb
icebp
cltd
inc
cmpl
mov
pop
pop
jno
fchs
movsl
sbb
roll
add
add
cli
adc
pushf
out
sti
stos
or
sbb
or
jne
pushf
cmpsl
loopne
shr
pop
test
js
sbb
rorl
jnp
dec
dec
aaa
in
aaa
stos
or
fdivs
add
or
xchg
mov
es
daa
bound
hlt
je
jo
xor
cmp
add
add
dec
imul
bound
xchg
push
adcb
xchg
fstps
mov
jnp
ss
lret
cmp
push
push
stos
outsl
push
inc
adc
push
adc
add
dec
fs
dec
add
fwait
add
testl
fnstcw
insl
add
mov
dec
dec
hlt
add
mov
je
or
push
cmp
cmc
ja
adc
clc
and
inc
or
mov
mov
and
cld
jge
and
test
pop
add
mov
jnp
sbb
inc
pop
icebp
mov
leave
incl
dec
adc
inc
test
fidivrs
dec
mov
mov
faddl
pop
and
lahf
xor
mov
fildll
add
jmp
push
inc
cltd
lock
cld
aas
lea
push
add
or
inc
xchg
jnp
add
rcr
or
mov
or
pop
add
pop
xchg
mov
cmp
xor
jns
sub
nop
add
add
daa
inc
add
icebp
xor
add
xor
rcr
push
fimull
sahf
je
adc
jg
adc
int
es
pop
lret
add
sbb
pusha
xor
inc
adc
loopne
inc
cmpsb
add
push
fprem1
xchg
xor
push
and
push
jl
add
xchg
sub
in
repnz
push
mov
inc
sub
jg
xchg
or
xchg
add
test
ljmp
or
push
in
jnp
sub
push
xor
xor
pop
push
push
testb
sahf
xchg
inc
scas
xor
push
mov
ret
inc
repnz
jns
push
rolb
add
cmp
or
pop
and
sahf
cmp
fwait
repnz
cmp
inc
xchg
or
aam
add
inc
dec
add
or
and
mov
fwait
sbb
sbb
lahf
xchg
addr16
push
ret
push
xor
jmp
push
or
nop
and
jl
bound
or
add
clc
daa
jl
daa
xor
add
push
cmp
orl
cmpsl
pop
stos
hlt
cmp
add
ret
push
sar
ja
sub
jne
push
push
and
inc
out
mov
outsb
je
scas
add
mov
xor
lea
aam
push
sub
pusha
add
push
rorb
push
and
test
or
es
adc
lea
xchg
test
lds
inc
mov
inc
lods
mov
xor
adc
mov
dec
cli
push
sarl
adc
cmp
add
push
dec
add
mov
fstps
pusha
jp
dec
aas
add
loope
imul
push
pop
sub
xchg
sarb
jge
jl
mov
and
sbb
and
jb
add
push
inc
or
inc
or
add
nop
imull
push
add
andb
lds
mov
push
jl
cmp
jae
jg
sbb
or
imull
shl
pop
cmp
jne
mov
adc
pop
dec
stos
and
adc
loopne
xchg
shr
jp
lret
pop
mov
lds
add
inc
jmp
andb
sbb
or
rorb
jne
cwtl
inc
cmp
pusha
cmp
call
js
mov
add
call
insl
add
xchg
popl
scas
xor
jge
push
add
pop
pop
pop
jmp
lea
add
rcrl
push
insl
sub
and
xchg
jne
sbb
hlt
sbb
cmp
push
test
xor
loope
jo
jle
jecxz
adc
test
pop
mov
mov
add
add
in
pop
mov
aaa
or
and
inc
sbb
or
loope,pn
mov
sub
xchg
pop
pop
fsubl
mov
lcall
es
decl
fstpt
popf
xor
jge
dec
ja
jp
out
rcll
dec
jne
push
les
jnp
dec
push
scas
xchg
cs
sahf
dec
xor
sti
xor
push
and
imul
call
outsb
shlb
js
lock
or
popa
jns
add
lock
cmp
mov
and
mov
loopne
push
test
mov
push
jle
je
cmp
jbe
shll
push
leave
push
xor
adc
aas
lret
or
or
adc
cmp
fldt
xchg
shrb
lock
inc
ret
inc
jge
dec
mov
pop
orb
xchg
add
xchg
mov
loope
sub
inc
sbb
dec
enter
lcall
or
or
push
dec
stc
add
test
push
jge
or
push
cmp
jo
add
mov
sbb
mov
or
lock
push
xchg
daa
jo
and
push
jg
mov
sbb
leave
inc
sbb
and
mov
jl
pusha
pop
sbb
xchg
xchg
push
push
lea
dec
lret
in
push
adcb
add
and
dec
pop
scas
in
jns
sbb
adc
dec
xchg
mov
addb
dec
dec
xor
xchg
and
adc
add
lea
inc
stc
cmp
insl
fdivrl
xchg
incb
hlt
out
or
cmp
push
loopne
pop
in
enter
inc
je
mov
pop
xor
loop
pushf
and
scas
push
stos
je
push
pop
mov
push
cmp
push
add
lret
jle
repnz
out
imul
outsb
adc
lret
push
jmp
sbb
outsb
test
sbbb
lods
jecxz
or
or
mov
push
add
fsubrs
mov
jne
andl
sti
es
ja
fiaddl
iret
or
lock
sbb
movsl
dec
gs
inc
mov
iret
sub
movsl
inc
cs
or
add
cltd
inc
pop
mov
pusha
add
push
pop
enter
jo
dec
lea
push
sbb
mov
mov
inc
adc
push
adc
push
mov
xchg
loope
dec
pop
or
mov
arpl
xor
add
ds
jno
ds
sub
mov
addr16
repz
or
adc
inc
clc
adc
rcll
dec
pop
ret
loopne
sysret
sbb
pop
ret
gs
imul
push
sbb
xchg
inc
dec
push
sbb
mov
jbe
lcall
dec
add
scas
test
mov
push
add
imul
in
fdivp
fcoml
fadd
push
mov
iret
adc
sub
mov
pop
xchg
push
mov
cmc
mov
and
fbld
lock
mov
js
shll
inc
and
rclb
pop
xchg
lcall
push
add
jo
push
mov
push
pop
ret
sub
sbb
inc
pop
andl
xchg
int
pop
sbbl
sbb
pusha
popf
test
sbb
lea
mov
mov
dec
adc
test
insl
mov
std
adc
lock
and
adc
xor
vpermi2d
loope
test
sub
mov
in
xchg
push
adc
add
call
push
aad
mov
xor
pop
sbb
mov
andps
sbb
ret
mov
cmp
dec
jl
inc
dec
sub
je
imul
mov
add
add
mov
dec
int3
and
jo
insb
std
ja
ds
push
clc
sarl
bound
ljmp
cld
lock
call
stos
cld
sub
mov
sub
repz
insl
adc
inc
and
sbb
sti
inc
ja
pop
add
push
push
cmpsl
push
cmp
enter
ljmp
mov
aaa
test
lea
cmp
push
xchg
scas
sbb
mov
add
cwtl
add
ret
data16
inc
xor
clc
pop
mov
imul
mov
clc
sbb
and
inc
je
xchg
pop
fisubl
jne
jmp
inc
mov
lods
negb
inc
pop
cmp
leave
addr16
mov
adc
xor
pop
inc
inc
movsl
cmp
push
pop
push
mov
inc
xchg
sti
jl
test
pop
icebp
int3
jg
cmp
adc
aas
sbb
inc
mov
sub
mov
jb
add
mov
ss
mov
push
mov
faddl
mov
shr
mov
rcrl
push
aas
push
sbb
xchg
ret
in
cmp
add
push
shll
add
fadds
pop
subb
test
inc
imul
cli
je
or
repnz
xor
xor
cmp
repnz
fmuls
dec
dec
sub
sbb
cld
and
imul
pop
movl
dec
pop
pop
sbb
add
jecxz
addr16
inc
movsl
sub
data16
ret
mov
push
dec
imul
andb
stos
or
inc
mov
push
lods
ficomps
ds
push
mov
pmuludq
or
mov
pop
cmc
shlb
xchg
into
jb
sbb
dec
sub
icebp
pop
or
lock
xchg
mov
adc
mov
add
add
inc
add
arpl
sbbb
jae
xor
mov
popa
sbb
inc
sbb
nop
pop
add
adc
mov
jmp
lret
jg
xor
shlb
out
test
sbbl
or
arpl
popa
cmp
jne
push
ret
je
ret
lock
je
pusha
or
jae
cmp
and
mov
or
adc
cmp
and
mov
dec
cltd
jp
adc
or
adc
shlb
out
gs
movsl
mov
push
mov
mov
sub
xchg
push
js
out
inc
dec
mov
faddp
data16
sti
rep
bound
fcmovne
rorl
adc
jmp
sub
jae
adc
fimuls
add
and
or
andl
add
jnp
and
jne
cltd
bound
and
jae
push
push
jle
cmpsb
inc
mov
and
push
mov
or
adc
push
loopne
adc
push
sub
fdivrs
pop
data16
inc
sub
sbb
pop
fildl
gs
aad
fimuls
xor
cmp
fsts
testb
jbe
btr
fiaddl
mov
xchg
or
cmp
fwait
mov
fidivs
mov
xor
test
and
call
andl
mov
inc
push
sub
mov
das
add
lret
and
cmp
mov
add
mov
and
pop
lret
insb
jge
or
and
add
cs
adc
or
ret
jl
inc
shl
sbb
sub
pop
xchg
or
lods
xchg
push
xor
xlat
repnz
inc
bound
mov
pop
fiadds
mov
or
xor
test
jge
into
pop
inc
inc
movl
add
jnp
add
das
mov
push
push
push
inc
inc
sub
xchg
notl
sbb
adc
mov
add
push
ret
inc
inc
xlat
push
call
add
cwtl
rclb
fisttpll
out
sub
ficoms
dec
push
sub
and
lret
xchg
leave
mov
xor
pop
in
and
incl
jecxz
or
repz
imul
rclb
cli
out
mov
inc
adc
arpl
jmp
sub
xchg
int3
xor
mov
inc
dec
fwait
cltd
or
js
dec
push
js
aad
sbb
and
sarb
dec
jne
and
in
sub
loopne
mov
lods
inc
sbb
and
add
sbb
sbb
incb
roll
or
push
and
jo
mov
lock
outsl
cmc
ret
pop
lea
out
popa
xor
rorb
adc
jge
je
iret
pop
adc
dec
rorb
pusha
mov
cltd
adc
mov
xor
push
xor
pop
lea
sub
jl
ret
inc
xchg
jb
push
sub
pop
js
dec
mov
mov
sbb
scas
add
dec
mov
sbbb
add
in
xchg
sub
sub
inc
sbb
dec
pop
mov
add
lods
or
aaa
inc
sbb
adc
dec
sbb
ljmp
insl
or
jge
shrb
nop
and
mov
test
cmp
das
mov
mov
add
testb
sbb
adc
jbe
rcpps
push
add
or
cmp
int3
pushf
sbb
clc
adc
popa
insb
idivb
stos
loope
insl
push
adc
inc
lea
mov
je
push
clc
inc
mov
ret
xor
dec
adc
sbb
add
sbb
mov
aas
outsb
cmp
je
and
outsl
out
adc
push
lret
sar
cmp
jbe
or
add
shlb
xor
pop
ret
inc
cli
pusha
in
mov
ret
pop
sub
jecxz
cmp
clc
faddl
mov
repz
mov
add
mov
dec
cmp
lea
stos
or
rolb
dec
js
fiadds
add
mov
fsubs
lock
lea
mov
fdivp
sub
pop
add
push
sbb
movsl
jbe
rcll
inc
cmp
adc
inc
jl
pop
in
stos
or
xlat
mov
and
lea
lea
sub
push
jns
aad
pop
testb
pushl
mov
aad
adc
inc
push
call
cmp
sub
mov
xor
push
pop
mov
add
mov
sbb
cmp
dec
or
or
sbb
call
mov
cmc
shlb
nop
aam
pop
cmc
jno
inc
adc
push
lds
jmp
mov
ss
arpl
dec
add
clc
test
in
cwtl
outsb
sar
mov
jp
cmp
push
mov
pop
add
cmp
jb
pushl
fdivrl
pop
or
jmp
xor
jae
push
stos
push
jl
dec
xor
and
lret
add
unpcklps
or
and
icebp
xchg
movsb
cmp
mov
incb
lods
sbb
aaa
sbb
popf
clc
gs
inc
mul
dec
mov
bound
and
mov
stc
xor
lods
add
adc
inc
and
shlb
dec
xchg
push
test
or
shlb
mov
mov
or
xor
in
push
enter
sbb
mov
insb
and
dec
push
jmp
adc
daa
or
lret
pop
dec
sub
inc
push
jmp
or
jbe
into
mov
adc
enter
adc
add
or
and
ja
adc
or
fisttpl
xchg
pop
fldt
inc
jo
xchg
dec
or
mov
mov
mov
mov
imul
adc
dec
add
addl
js
sub
addb
or
loope
or
jne
pop
xorl
jne
push
xor
sarb
ja
push
pusha
cwtl
pop
cmp
pushf
pop
daa
add
pop
inc
cmpsb
dec
lcall
add
push
outsl
lods
fs
xor
add
js
ss
shlb
push
xchg
push
jl
add
shlb
add
lret
sub
aas
and
jb
and
sbbb
jl
sbb
sbbb
mov
es
jb
sbb
sub
daa
push
sbb
and
sub
push
cmp
and
push
cmp
pushf
or
pop
in
iret
das
jmp
push
push
int3
xor
call
xor
or
xor
loopne
negb
or
xor
mov
mov
outsl
cmp
adc
dec
jbe
rcrl
and
mov
leave
cld
or
out
pusha
push
hlt
rol
mov
push
add
pop
fidivrs
push
adc
aaa
shr
repnz
add
sbb
pop
add
mov
lea
or
insb
mov
add
adc
inc
adc
gs
add
sbb
xchg
and
and
iret
jg
inc
pop
adc
lea
add
outsl
adc
test
jl
sub
mov
mov
pop
push
pop
inc
mov
jg
push
inc
in
sub
push
push
or
scas
cmp
xor
popa
dec
mov
jmp
or
pop
ret
int
jmp
cmpb
or
jge
or
adc
fmuls
add
bound
icebp
push
inc
fucom
fsts
cmp
or
sbb
mov
lea
andl
sbb
adc
push
js
inc
dec
pop
repnz
pop
icebp
mov
cwtl
jne
fidivs
repnz
stos
pushf
xor
loopne
icebp
push
and
and
clc
or
leave
xchg
cmovns
lock
or
or
add
fiaddl
and
subb
add
push
cltd
xor
push
jae
es
lret
clc
or
sub
rclb
and
testl
leave
es
and
mov
out
js
mov
xor
subl
inc
sbb
or
cmp
jne
and
andl
lret
add
pop
orb
sbb
jbe
mov
xor
dec
push
mov
pop
es
add
xor
mov
mov
rol
and
mov
pop
adc
iret
add
pop
daa
xor
mov
mov
fbld
add
pop
xchg
adc
movl
add
je
sbb
xlat
clc
pop
lock
inc
push
push
and
das
aad
cmp
jg
scas
lea
arpl
inc
adc
push
dec
test
mov
loop
lret
pop
pop
push
nop
pop
inc
xchg
xchg
pushw
jecxz
add
xor
cmpsb
sub
loope
cmp
mov
xchg
jp
sbb
inc
cmp
cmp
je
cmp
inc
adc
pop
popa
mov
fdivs
mov
or
out
outsb
push
fstpt
das
and
dec
cmp
jmp
add
add
cmpsb
push
lds
add
fadds
adc
filds
xchg
fsubrl
or
sbb
sub
js
insl
les
mov
jl
loopne
or
and
adc
add
pop
inc
mov
inc
loop
and
cmpsb
adc
mov
mov
cmpsb
je
mov
pop
cld
sbb
cmp
add
cld
adc
add
xor
push
sbb
xor
dec
lods
dec
scas
inc
stos
imulb
int
mov
frstor
lock
call
repz
std
adc
dec
popa
or
sub
or
in
push
mov
dec
andl
jge
adc
lret
cmpsl
ds
cmp
pop
mull
push
lock
jns
push
xor
sbb
mov
adc
mov
out
push
adc
shll
adc
call
cmp
jl
cmp
jle
cmp
add
mov
or
pop
xchg
cmp
push
in
ds
mov
xchg
adc
gs
cmp
mov
mov
pop
and
cmp
jl
push
filds
je,pn
cmp
je
jne
rcrl
lcall
iret
and
ss
pop
int3
add
or
sbb
loope
and
sub
add
and
jo
faddl
or
sbbl
mov
mov
cmp
jl
add
inc
adc
add
pop
push
jl
in
inc
or
dec
adc
add
test
mov
sbb
rcr
cmpsl
add
xor
or
lock
andb
sub
dec
and
sbb
mov
push
adc
les
es
movsl
sub
xchg
dec
mov
or
pop
pop
shrl
cmp
sbb
inc
out
or
cmp
mov
sub
mov
into
loopne
add
cld
pop
inc
popf
mov
in
clc
imul
xchg
outsb
inc
sub
nop
xor
cmp
push
push
jle
enter
test
adc
js
add
mov
in
aaa
push
or
or
dec
mov
mov
sbb
xchg
xor
dec
push
mov
mov
dec
or
pop
or
adc
cmc
inc
les
sbb
or
jb
xchg
pusha
jo
mov
pop
adc
sub
lea
sub
leave
pop
dec
fmuls
flds
out
sbb
scas
and
dec
and
sbb
add
add
add
pop
adc
add
repz
fs
addr16
sbb
push
js
and
cmp
cmpsl
es
mov
shl
ss
adc
and
sub
push
push
pop
pop
addb
add
push
sub
jne
test
insb
adc
push
rolb
es
push
fldcw
or
and
rorb
add
mov
xchg
out
fimull
xor
repz
sbb
test
inc
pop
jno
push
insl
shrl
ret
cmp
and
addl
xor
sbb
jne
cmp
ficoml
ret
sbbb
inc
dec
cmpsl
pop
fs
jle
and
addl
fs
inc
push
outsl
jecxz
fwait
shlb
sbb
shlb
les
rcr
add
xor
jecxz
mov
dec
sbb
push
rcrb
xchg
loope
add
jbe
jmp
outsl
nopl
pop
jmp
inc
and
xor
lret
test
or
jo
arpl
addl
xor
pop
fildll
stc
mov
loope
sbb
push
inc
jl
fucomi
xor
clc
clc
mov
arpl
xor
test
popf
mov
popa
and
pop
sub
les
or
mov
nop
adc
or
stos
xor
dec
and
aaa
sahf
mov
adc
inc
mov
push
fsubrl
jo
sbb
cmpsl
movsb
rorb
decb
push
sbb
imul
lcall
pop
test
pusha
add
add
sbb
sub
adc
mov
jbe
adc
sub
imul
sbb
out
xlat
test
push
mov
add
je
or
je
cmp
adc
adc
and
sub
push
push
xor
cs
incb
hlt
jo
and
inc
adc
push
mov
jne
xor
adc
mov
jle
je
dec
js
ficoml
jle
dec
add
and
arpl
jns
ffreep
dec
inc
and
loopne
and
jne
in
mov
mov
add
cmp
cmp
rcrl
jne
stc
js
pusha
or
and
nop
lret
or
push
lahf
pop
subl
inc
xor
pop
cmpsb
sbb
fimull
cmpsb
push
fstl
xor
pop
fstpt
rorl
mov
addb
pop
pop
or
cmp
jnp
les
pop
pop
ret
in
dec
jge
sub
in
fcomps
movsl
das
xchg
ror
mov
jge
ds
in
inc
popl
jp
add
inc
push
insl
add
sub
neg
jle
into
push
mov
ret
inc
out
clc
pusha
add
js
rcl
sbb
xchg
fildl
icebp
inc
mov
in
js
sti
push
sub
and
cmpsl
push
add
sub
inc
and
xchg
sbb
mov
or
hlt
jg
mov
sub
and
add
sub
pusha
or
outsb
push
xor
sbb
test
cmp
jns
push
dec
test
loope,pn
lods
pop
add
lret
sub
in
out
stc
sub
lea
add
xorb
addr16
or
cmp
push
adc
data16
sbb
icebp
pop
repz
jg
imul
rorb
inc
sti
outsl
aaa
or
mov
inc
adc
repnz
mov
add
push
or
adc
loopne
es
dec
add
insb
add
or
test
pop
data16
jl
sub
mov
pop
and
adc
dec
sbb
adc
mov
cmp
mov
in
add
add
test
or
movl
nop
cltd
and
lea
cmp
push
leave
cli
jmp
lea
cmpsl
mov
mov
cmp
or
add
push
adcb
adc
lret
mov
shr
or
sub
xchg
leave
repnz
lea
in
cmp
andl
js
push
xchg
movsb
xor
add
xchg
adc
fst
mov
jmp
pusha
nop
push
pop
cmp
jnp
and
sbb
jae
jae
sahf
out
pushf
movsl
and
call
push
inc
sbb
shr
mov
xchg
jno
popa
dec
jb
sub
lock
ret
es
inc
push
add
adc
pop
in
pop
dec
and
movl
mull
add
add
outsl
push
dec
adc
adc
dec
loopne
push
enter
fdivrs
stos
push
pop
je
fldl
aas
push
fnstsw
and
in
data16
fbstp
sub
aaa
adc
adc
jne
push
out
jns
divb
or
jne
or
jne
or
loopne
pop
sbb
fldz
lret
andl
mov
inc
jle
or
stos
dec
jmp
jge
dec
inc
mov
push
int3
inc
jp
cli
inc
loopne
out
mov
lock
mov
aam
testl
test
lea
fstl
jecxz
test
mov
mov
lret
sub
mov
jo
ret
cmp
rorb
xor
add
inc
jg
mov
jb
or
inc
add
movsl
cmpsl
push
mov
cwtl
call
cmp
imul
fistl
push
mov
fstl
jne
push
nopl
push
rcrb
adc
test
movsl
sti
jbe
mov
mov
movsl
pmaxub
pop
inc
decl
lcall
jl
sbb
sub
add
add
lcall
pusha
fsubl
aad
pop
inc
jb
push
addr16
enter
or
std
or
aam
jge
jbe
shll
ficoms
rclb
jns
cmp
mov
inc
cmp
mov
push
jo
movsl
movsl
daa
push
xchg
mov
mov
lea
xor
adc
xorl
and
cmc
ud2
fisubrl
sub
pop
popa
jns
push
mov
sbb
push
pop
pop
daa
push
enter
pop
pop
adc
push
or
lahf
add
xor
or
push
lods
outsb
xor
stos
push
add
fildll
je
addl
imul
es
mov
mov
push
adc
loopne
add
dec
es
imul
test
fadds
cmp
add
fmuls
lods
sub
jae
imul
push
and
mov
xor
add
insb
inc
shrb
push
mov
les
push
imul
addl
mov
or
int3
rorb
xor
jge
dec
enter
fmuls
push
lret
or
inc
jo
loopne
insb
mov
fisttpll
ss
call
mov
add
in
inc
pop
insl
stos
lret
push
test
and
int3
jmp
cltd
fs
imul
pusha
and
push
in
and
xor
or
xor
shll
cmpsl
fwait
es
xor
lret
sbb
or
into
and
push
dec
aam
stos
or
push
jne
add
jg
add
int3
cld
cld
mov
add
and
ret
cli
and
ss
or
mov
push
int
mov
lcall
sub
fcompl
or
add
out
clc
push
sub
sti
cmpsb
jmp
jg
pop
dec
mov
or
jge
repnz
add
add
xor
cmp
dec
je
in
loopne
roll
jecxz
es
dec
cmp
jl
cmp
pop
enter
xor
stos
inc
push
adc
test
ficoms
add
push
call
pop
test
mov
mov
add
or
or
and
pop
add
push
cli
or
pusha
test
pop
ret
inc
pusha
lret
mov
mov
push
xor
inc
sub
push
and
sub
add
inc
adcb
rclb
inc
mov
push
or
loop
imul
ret
cmp
pusha
add
insl
add
lcall
dec
or
inc
imul
ljmp
lea
movsb
in
cltd
xor
mov
dec
hlt
inc
ret
add
sbb
nop
outsb
mov
mov
popf
add
adc
fldcw
sbb
mov
mov
insb
aad
fdivs
stos
rclb
mov
and
cmp
dec
out
sbb
arpl
sbb
mov
jmp
arpl
loope
fs
mov
or
xorl
fdivrs
add
fs
cmp
cwtl
rcl
push
xchg
int3
add
push
or
push
pop
jle
push
adc
pop
and
or
cltd
clc
dec
inc
push
push
cmp
jg
in
sbb
sub
popf
pop
add
add
sbb
cmpsb
dec
les
clc
mov
add
inc
xlat
add
add
andl
mov
dec
scas
stos
add
mov
push
aas
dec
inc
mov
insl
inc
mov
loope
adc
fcoml
mov
lcall
jo
je
pop
adc
add
ret
mov
or
sbb
mov
shrb
lock
adcl
dec
add
shlb
push
push
pop
dec
dec
pop
ret
sbb
mov
outsb
aam
xor
pop
lea
sti
or
xor
push
lea
xor
dec
jnp
fwait
dec
mov
dec
pop
mov
test
sar
dec
int3
or
cmp
daa
ret
aam
jo
mov
fs
push
fcoms
sub
stos
loopne
pop
in
mov
enter
loop
sbb
sbb
fs
loop
pop
addl
push
sub
test
das
fadd
and
mov
fstl
push
aad
mov
daa
lcall
test
add
test
xor
lcall
shrl
test
push
movsl
call
inc
dec
movsl
stos
fisubrl
subl
cltd
scas
std
and
pop
insl
xchg
jecxz
adc
sub
orl
dec
and
adc
dec
mov
inc
pop
adc
mov
das
add
mov
movsb
addb
dec
xor
movsl
xlat
movsl
cmpl
cmpsb
push
fcoms
xor
and
push
sbbb
mov
pusha
xchg
punpckhbw
add
add
add
test
push
adc
and
mov
mov
test
pushf
xchg
loop
movsb
subl
cmp
adc
scas
lock
lock
and
dec
adc
lret
out
imul
add
adc
jae
sbbl
mov
pcmpeqw
enter
adc
aam
inc
arpl
int
jge
dec
ret
and
shrl
cmc
pop
gs
lcall
add
push
je
mov
pop
add
in
sbb
lret
int
int
cmp
mov
xor
adc
out
inc
add
bound
xchg
fadds
push
les
sub
inc
push
or
shlb
xor
mov
pop
mov
pop
test
popf
mov
lahf
bound
popf
xchg
lods
clc
test
lods
aad
cmp
aaa
cmpsl
adc
call
sbb
es
sub
stos
push
and
and
pop
testl
call
push
jge
push
jl
sub
xchg
cmc
mov
jo
add
filds
cld
imul
ret
dec
dec
daa
in
adc
add
jne
ljmp
gs
pop
mov
adc
and
fistpll
pop
push
loopne
cmp
and
fsubs
fdivl
pop
adc
mov
cmp
stos
in
and
or
sbb
nop
addr16
sbb
push
lcall
jo
add
orb
sahf
icebp
pop
push
icebp
call
and
insl
push
lret
inc
stos
xchg
andl
mov
mov
jp
dec
sub
add
push
or
lods
mov
and
xor
jecxz
in
das
ljmp
push
enter
stos
pop
inc
aaa
push
xor
mov
inc
mov
push
loopne
rorb
rcrb
jg
movsb
cmp
cld
mov
push
sahf
and
aad
test
pop
adc
xor
sarb
add
popa
sbb
adcl
scas
pop
mov
ljmp
adc
pusha
call
lock
or
clc
inc
loopne
fnstcw
lret
sbb
lahf
es
sbb
aas
inc
cwtl
add
lcall
and
add
ret
aas
js
jmp
sub
adc
or
and
and
mov
lock
idivl
clc
or
pushl
xchg
add
or
out
jmp
jo
or
add
pop
call
leave
add
dec
inc
add
push
repz
cmpb
mov
cmpsb
xor
add
out
dec
add
jp
xor
lret
or
add
sar
daa
pusha
inc
push
or
add
or
mov
les
mov
ret
test
cmp
imul
and
and
or
cmp
roll
and
push
pop
enter
cmp
jge
fwait
and
insl
or
xchg
sub
movsb
or
insl
jne
roll
or
adc
frstor
sub
inc
inc
push
leave
and
inc
inc
or
adc
mov
sbb
pop
sub
xor
xchg
mov
push
je
aam
mov
movl
sbb
ja
adc
inc
mov
and
pop
les
adc
loopne
dec
enter
mov
or
sub
mov
add
int3
sahf
or
push
pop
mov
and
add
cltd
xor
test
and
and
popa
and
add
je
cmc
cmp
add
test
sub
not
push
push
adc
iret
sbb
inc
push
xchg
movsb
xor
cwtl
and
cmp
lea
cmp
sbb
or
mov
xor
jns
and
and
pop
add
pop
inc
call
sbb
pop
scas
sbb
jo
mov
cli
imulb
push
es
imul
inc
cmc
xor
ret
scas
or
insb
imul
or
push
push
xchg
lds
jo
adc
rsqrtps
xor
adcb
sbb
add
pop
pop
mov
sbb
rcl
pop
cld
jne
fcoml
adcl
mov
xor
jge
pushf
push
and
testb
lea
inc
jg
inc
and
or
jecxz
and
sub
pop
popf
outsl
mov
push
cld
jnp
imul
pop
adcl
add
outsl
jge
pusha
add
adc
push
das
std
inc
adc
sahf
or
cmp
sub
popf
mov
adcb
in
out
loopne
sub
inc
mov
jo
jl
nop
mov
and
push
pop
adc
in
jbe
mov
fdivr
or
cmp
mov
add
or
or
popl
jo
jmp
and
and
loope
fcoml
adc
push
mov
in
xlat
popa
in
int3
and
push
inc
jne
scas
sub
leave
stc
test
pop
inc
dec
add
add
icebp
inc
cs
xor
xchg
mov
mov
mov
das
lock
add
pop
pop
jno
sub
adc
add
adc
mov
in
or
shrb
sub
test
jl
das
xor
hlt
clc
push
xchg
sbb
add
sub
repz
push
dec
or
cmp
cmp
ja
sub
push
xor
std
or
and
lock
xchg
out
inc
and
lock
sub
mov
xor
push
cli
fmull
adc
addr16
clc
pop
xor
jb
popf
jno
pop
outsb
add
or
lret
fmuls
add
and
test
repz
cmp
add
fs
xor
sbb
mov
jmp
jp
cmpsl
push
cmp
xor
inc
inc
xor
adc
icebp
jge
inc
adc
mov
push
push
in
dec
call
add
jmp
rcrl
push
and
notl
inc
add
push
mov
dec
sbb
dec
jno
push
mov
jp
lret
mov
mov
lret
popa
adc
inc
out
xchg
pop
mov
pop
inc
popa
sub
mov
sbb
push
insb
xor
loopne
insl
rcll
and
add
xor
adc
or
fwait
lea
notb
adc
pop
mov
out
adc
ja
mov
popa
cmp
fs
dec
pushf
pop
or
std
add
fisttps
sbb
fucom
sbb
push
sti
jmp
imul
hlt
mov
not
add
inc
mov
jp
fucomi
clc
icebp
push
mov
and
ret
lea
cmp
je
cmp
insl
loopne
loop
mov
fisubs
sbb
shl
mov
or
or
movsb
jle
adc
outsl
cltd
inc
jne
jmp
popa
outsl
lcall
add
loopne
les
xchg
in
inc
je
and
push
add
into
xchg
roll
xchg
mov
sbb
pop
sub
std
jge
sbb
fstpl
and
insl
clc
push
cmp
mov
enter
out
out
cmp
sar
mov
and
pop
fsub
pop
fsubrp
out
push
pop
pop
pop
cmp
rolb
inc
clc
adc
jg
gs
pop
add
and
xor
sub
movsl
push
shlb
add
or
int3
cmp
je
sub
lcall
adc
call
push
cmp
lret
sbb
ss
cmp
ljmp
push
cmp
movsl
add
sbb
cmp
mov
push
sub
dec
mov
gs
rep
out
mov
pop
mov
push
loopne
add
dec
sub
out
push
movsb
dec
jne
int3
or
lods
cs
in
and
xchg
ss
xor
push
mov
sbb
fwait
in
int3
lahf
in
sub
and
nop
fstpl
push
repnz
add
lea
ja
stc
sbb
inc
cmp
and
dec
mull
cmp
lock
push
ret
push
push
push
push
adc
repnz
and
push
push
sub
xorb
daa
lret
pushf
add
outsb
xchg
sub
adc
cltd
and
and
int
fwait
adcb
or
jl
insb
cs
mov
xor
pop
push
jecxz
sbb
mov
jnp
ret
jbe
mov
movsb
and
adc
cmpsb
pusha
or
stos
add
in
and
add
leave
sbb
and
femms
push
outsb
fisubrl
cld
adc
lret
inc
xchg
and
pop
ja
insb
fs
adc
jl
sbb
mov
mov
data16
arpl
or
sub
push
in
and
cmp
gs
cmp
push
xchg
in
adc
addl
insb
pop
aaa
push
cmp
and
inc
sbb
cltd
fs
inc
sahf
add
in
frstor
aaa
das
push
pushf
mov
daa
jl
sub
cwtl
aad
pushf
in
and
cmp
mov
loopne
test
jbe
mov
sbb
adc
sbb
cmp
roll
and
inc
push
gs
repz
jbe
cwtl
test
stc
cmp
adc
and
out
pop
imul
out
mov
repz
add
push
cmp
repz
jns
fwait
lods
into
and
lock
test
add
dec
pusha
incb
push
xor
insl
jmp
andb
xchg
adc
mov
jecxz
pop
adc
sub
xorl
mov
out
mov
or
aaa
add
test
or
add
sti
cld
mov
mov
add
inc
cs
mov
add
pop
jp
fisubl
mov
inc
loope
cwtl
pop
pop
or
bound
sbb
push
repnz
push
lods
enter
and
adc
push
push
mov
sbb
js
daa
jmp
cltd
adcl
repnz
inc
int
push
mov
cmp
scas
sbb
mov
add
das
add
rcll
cmpsl
and
and
adc
adc
bound
fdivrl
daa
jg
sbb
jecxz
dec
cwtl
lods
push
pop
xchg
mov
inc
push
lods
dec
addr16
mov
or
push
enter
shrl
sbb
and
fisttps
repnz
jb
or
lods
fbld
jo
out
add
jne
mov
pop
mov
add
inc
xor
jecxz
in
jle
push
out
push
xchg
testl
pop
jl
and
inc
add
add
add
aaa
adc
cmpb
mov
arpl
in
or
mov
pop
loopne
call
call
sub
dec
ja
lea
sbb
sbb
and
in
in
in
push
xor
test
add
push
push
push
add
int3
pop
nop
dec
dec
or
adc
nop
lock
xor
pop
add
adc
loop
pop
aam
sub
push
sbb
cltd
dec
mov
in
add
adc
and
sub
in
xchg
mov
nop
out
or
cmp
sbb
or
or
push
dec
add
rol
leave
add
sub
push
or
and
adc
sub
sbbb
shl
nop
out
xchg
pop
mov
mov
ds
int3
mov
cmp
sub
int
pop
push
xchg
aas
push
add
lahf
inc
sub
pop
sub
sub
jge
sub
mov
leave
in
roll
ret
leave
add
jmp
sub
fcmovb
push
push
sbb
add
mov
dec
movsb
xchg
add
or
nop
dec
xchg
mov
mov
stos
jo
xchg
adc
lea
mov
sahf
imul
movl
leave
lock
ret
mov
iret
xor
adc
call
mov
sub
sbb
cmp
pop
ret
adc
cmpsl
jo
and
sub
push
popa
push
les
add
and
push
add
adc
mov
mov
lods
stos
jo
lret
add
or
je
or
or
pop
ljmp
shl
or
add
or
or
popa
add
xchg
add
test
lods
sbb
fs
loopne
dec
movsl
xchg
xor
test
pushf
or
ret
add
cmp
inc
add
mov
adcb
xlat
inc
mov
sub
psubq
in
rcrb
add
push
add
repnz
enter
xchg
or
xor
pop
mov
mov
dec
push
nop
add
dec
push
mov
lret
add
ja
pop
pop
daa
std
pop
xor
adc
sub
xor
mov
xor
cmp
push
push
leave
or
sub
add
push
adcb
addb
jnp
push
adc
inc
mov
add
loopne
out
or
sbb
push
or
daa
pop
adc
add
je
adc
add
sbb
pop
enter
and
adc
or
xor
push
rorl
call
ret
and
cmp
xor
mov
mov
test
dec
cltd
push
mov
ret
movsb
sub
dec
es
add
inc
inc
in
adc
or
xor
push
bound
adc
lods
sub
push
and
push
inc
push
mov
scas
inc
jno
lods
icebp
adc
nop
mov
mov
outsl
inc
add
or
push
xor
pop
jne
mov
sub
xchg
adc
lods
and
fsubs
inc
jecxz
add
nop
mov
xchg
xchg
add
mov
or
mov
add
subb
sbb
test
imul
sbb
push
xchg
mov
push
jnp
mov
xchg
add
movsl
pop
push
add
mov
lods
ror
test
push
cmp
pop
sbb
add
mov
in
aam
add
test
cmp
ljmp
daa
inc
adc
xor
inc
and
sbb
jge
and
bound
test
dec
and
shr
xor
lcall
add
cmp
mov
or
mov
mov
test
or
pop
adc
sbb
sbb
stos
jo
sbb
and
push
cmp
stc
je
data16
dec
or
mov
dec
add
ljmp
jno
xchg
sbb
mov
add
insb
in
sbb
push
and
movsl
xor
xor
mov
in
pop
sub
inc
fisttpl
fldl
push
push
ds
ret
fdivl
or
xor
dec
data16
sbb
addb
or
sbb
or
sbb
lock
jp
add
out
adc
and
sbb
xchg
xor
pop
xchg
push
cltd
or
adc
lret
and
pop
psrld
add
sbb
adc
std
inc
jns
movl
xchg
xor
sub
fcomps
push
ret
jge
inc
pop
sbb
pop
jb
test
push
call
or
ret
leave
outsl
mov
sbb
and
add
inc
or
nop/reserved
leave
loope
pop
push
test
jno
loopne
or
mov
xor
mov
call
lods
aas
and
ljmp
jno
or
lahf
push
cmp
add
loopne
mov
sbb
rcl
jmp
loopne
sbb
mov
or
xchg
int
inc
dec
rcl
sub
push
sbb
or
and
adc
leave
xorb
stos
jecxz
inc
pop
inc
js
mov
pop
mov
scas
shrl
mov
dec
sub
adc
push
insl
mov
dec
push
or
inc
test
mov
mov
inc
shrb
adc
jle
in
ljmp
addb
or
adc
jl
xor
jmp
dec
mov
inc
jl
or
sbb
popa
jp
adc
xchg
xor
jle
cmp
je
mov
mov
push
add
inc
jmp
movb
mov
std
daa
or
fs
cltd
idiv
add
mov
in
ljmp
jno
aam
adc
pop
and
cmp
test
xlat
sbb
popa
cld
imul
sbb
mov
cmpsl
aam
push
orl
xor
sub
cmpsb
xorl
cmp
bound
dec
call
inc
dec
ds
lret
push
in
in
in
incb
dec
div
incb
add
or
repnz
jl
cld
mov
dec
out
lods
sub
cmp
dec
insb
adc
cmpsb
fsubrl
push
push
cmp
push
cmp
leave
stos
sbb
add
shl
mov
aas
out
addr16
in
hlt
lods
pop
push
sub
jne
test
adcb
xchg
shl
jge
mov
dec
mov
mov
or
mov
repz
ret
ret
mov
arpl
cmp
inc
je
jo
jo
cmp
xor
imul
adc
mov
test
push
and
mov
push
int
adc
stc
lock
pushf
sub
in
adc
int3
movsb
rcll
rorl
js
and
in
dec
pop
cmp
and
xchg
push
gs
pop
imul
gs
loop
idivl
or
push
push
fwait
sub
mov
dec
jnp
jbe
ret
jb
std
outsb
jns
push
pop
push
push
sbb
cltd
les
stc
sbb
clc
daa
cmp
mov
shll
sbb
out
out
cwtl
dec
enter
sbb
xor
push
fadds
cs
pop
fmuls
lcall
mov
out
in
or
sbb
mov
cmp
adc
pop
and
xor
inc
loopne
test
mov
fsubr
or
cmp
push
and
in
mov
dec
ja
sub
cld
mov
jns
in
mov
sub
or
icebp
cltd
in
pop
xor
inc
push
fs
add
nop
dec
dec
nop
pop
inc
add
inc
mov
xchg
sbbb
js
pop
xor
cmp
cmpsb
pop
adc
leave
lods
adc
dec
pushf
xchg
mov
shll
test
jl
or
push
adc
lock
imul
call
nop
sub
or
in
pop
sarb
ror
add
imul
add
and
pop
mov
pusha
cmp
cmpsb
xor
adc
push
fldt
xor
test
loope
bswap
jo
sbb
push
cwtl
mov
or
mov
mov
nop
or
mov
aam
jns
movsb
fcompl
movl
fmull
add
dec
sub
out
or
add
push
idivb
add
pop
mov
push
push
push
mov
push
pop
cmp
stc
rorb
negb
push
shlb
test
in
sub
jg
add
ja
or
pop
jb
xchg
iret
push
int3
xor
outsl
push
fst
sbb
cwtl
js
xor
bound
push
add
lds
dec
gs
orl
sbb
sbb
mov
inc
or
or
mov
mov
xorl
mov
mov
xor
xchg
incl
cmp
sub
sti
mov
lods
scas
mov
adc
or
shlb
daa
test
in
xor
addb
push
mov
std
mov
cmp
and
dec
das
into
imul
push
push
push
jo
sub
fsubl
and
addr16
pop
call
adc
popa
adc
xchg
add
das
inc
in
dec
mov
mov
or
inc
add
imul
ds
bound
out
ss
and
xlat
mov
pop
dec
push
ffreep
cmpsl
push
les
inc
cs
addl
jmp
cmp
mov
loope
movsl
inc
movsl
add
lea
mov
pop
lods
inc
mov
cli
push
push
xchg
mov
or
jmp
push
push
insb
add
test
xchg
scas
pop
adc
jg
or
jmp
test
popa
ss
push
movsl
mov
xchg
jge
dec
imul
lret
sub
ja
je
xor
and
cs
rcll
and
sbb
sub
popf
add
mov
and
out
xor
mov
daa
sub
pop
adc
popa
daa
dec
pop
daa
add
pop
je
data16
jae
jecxz
adc
cwtl
mov
inc
mov
fs
fsubrs
cmp
ja
pusha
or
push
pop
int
inc
stc
rcrb
add
mov
movsbl
and
fs
nop
shrl
js
add
mov
mov
hlt
dec
mov
add
out
mov
add
les
or
ret
sub
add
pop
hlt
push
add
aam
flds
mov
je
or
daa
mov
aam
lods
data16
xchg
cwtl
loopne
push
sub
jmp
push
outsb
push
pop
loop
test
jb
xor
pusha
xor
aaa
out
jmp
pop
stos
and
inc
adc
or
push
cmpl
inc
cmpsl
and
andb
jge
add
pop
sbb
sahf
cmp
jl
sub
loopne
push
test
int3
jl
cli
or
pop
imul
add
add
hlt
icebp
sub
jne
adc
mov
add
shlb
decb
test
push
mov
testb
dec
test
jecxz
or
sarb
out
xor
cwtl
xor
or
lea
push
or
mov
fwait
imul
pushf
push
jo
fdivrl
adc
int3
popa
adc
add
dec
cmc
fdivs
xchg
adc
aaa
add
adc
loopne
inc
or
and
sub
lock
or
or
pop
lds
fadd
cltd
dec
in
ds
lods
or
dec
fwait
xor
mov
push
mov
popa
add
and
push
inc
xchg
les
dec
push
es
inc
ds
in
ja
pusha
push
mov
leave
mov
xchg
stos
add
add
das
mov
xor
adc
ds
into
push
push
sbb
inc
jne
shll
add
and
rorb
pop
inc
adc
sub
pusha
cli
or
jmp
ss
adc
adcb
push
es
sub
pusha
xchg
push
mov
sub
xor
popf
or
inc
ret
test
and
mov
test
jne
ja
mov
sbb
addr16
daa
jge
jp
mov
xchg
cmp
repnz
lods
pop
mov
rorl
cmp
xchg
sub
pop
cmp
push
cmp
in
cmp
cmp
sub
pop
sub
cmc
pop
cmp
in
xchg
sti
adc
pop
and
int
xchg
cmp
lret
addb
das
adc
nop
pop
pop
sub
mov
jne
mov
add
or
pushf
add
add
or
inc
xor
dec
cmp
add
sbb
mov
jmp
in
repnz
cmp
inc
add
mov
into
repz
sub
cmc
sub
lock
inc
add
sahf
jl
cmp
jne
shrb
popf
jno
outsl
dec
cmp
and
shlb
xorb
sarb
in
jb
xor
mov
scas
add
mov
mov
push
mov
int3
mov
mov
mov
adc
add
in
pop
je
sarb
inc
add
jo
push
dec
mov
rorb
sub
mov
lods
jbe
push
inc
pop
es
test
or
or
mov
add
vmwrite
loope
add
push
test
sbb
mov
mov
or
push
sbb
shlb
call
into
fldenv
rorl
int
adc
push
subb
int
xchg
or
fdivrl
je
and
roll
cmpsb
imul
test
inc
shll
cmp
mov
inc
movsb
pop
js
es
pop
or
mov
inc
sbb
dec
mov
daa
mov
xchg
bswap
push
sbb
loope
mov
sarb
lods
sub
out
push
ret
stos
lods
sbb
add
leave
add
rclb
adc
cmp
mov
jo
or
adc
add
lahf
jp
ret
sbb
mov
xlat
mov
sbb
imul
rol
and
stc
xchg
mov
repz
push
lcall
jecxz
jge
jecxz
nop
mov
adc
push
addr16
push
push
or
xchg
movsl
inc
repz
or
inc
addb
xchg
mov
fs
mov
insb
mov
lods
loop
add
and
test
jne
or
or
shlb
add
push
jmp
add
or
sbbb
lock
mov
popa
subb
add
push
in
push
aam
into
mov
hlt
lret
hlt
and
lods
xor
jns
jmp
loope
rorb
push
push
idivb
daa
push
test
add
fstl
pushf
rcrl
or
in
sarl
jne
mov
je
mov
in
dec
stos
pusha
ljmp
nop
test
mov
in
ss
sub
cmp
add
jge
cmpxchg
pop
mov
add
push
cltd
jb
or
inc
das
add
insl
pop
push
push
pop
dec
sub
aas
adc
lahf
pusha
pop
mov
jge
dec
fdivrl
add
push
cmp
add
pop
popa
dec
or
addl
in
leave
movsb
cmc
dec
out
adc
cmp
mov
or
jmp
or
inc
push
pop
cmp
adc
jne
testb
jae
mov
ret
std
or
pop
mov
add
jmp
mov
std
dec
lds
push
sbb
fs
inc
and
jge
gs
push
fsubl
push
pop
out
cwtl
loope
pop
fs
jae
or
hlt
inc
xor
ss
add
xchg
xchg
les
xchg
pop
push
popf
mov
xchg
add
bound
and
or
pop
push
ror
fbstp
sub
ret
adc
call
pop
push
sbb
mov
loopne,pn
in
mov
jmp
mov
xor
shl
xor
push
xchg
dec
mov
pop
and
pop
arpl
lds
push
sbb
jge
add
add
mov
cmp
pop
aad
jo
repz
pushf
add
cmp
jne
shlb
adc
add
test
insb
xor
lods
or
mov
dec
add
dec
sub
clc
cmp
cmp
lods
loopne
cmp
in
call
les
pushf
scas
movsb
add
enter
mov
or
cmp
ds
xchg
or
xor
add
fs
push
push
inc
ja
adc
scas
adc
or
add
xor
std
mov
je
inc
jo
or
add
pusha
test
mov
ja
sbb
into
and
ds
and
orb
add
and
xor
or
dec
mov
les
lods
je
fnstsw
jg
pop
or
or
push
movsb
test
inc
pop
cmp
sub
xchg
dec
add
and
or
rolb
adc
fimuls
add
rcll
cmp
aam
push
stc
or
push
pusha
mov
add
sub
dec
sub
cmp
lods
push
jno
call
xchg
dec
mov
fs
addb
sbb
sub
ss
nop
jle
and
js
pusha
pop
add
loope
js
orl
outsl
lods
cmp
xchg
mov
jmp
mov
je
movsl
adc
in
js
mov
add
xor
cmp
mov
sub
fistpll
insl
loopne
mov
add
mov
lods
mov
pusha
xchg
mov
int3
nop
pop
sbb
xchg
adc
xchg
pop
cltd
inc
mov
xchg
ret
mov
and
mov
and
mov
insl
lret
in
and
jo
pop
dec
into
sub
or
xor
adc
or
subb
gs
insb
sbb
stos
cmpsl
leave
subb
dec
je
jg
sbb
pop
stos
xchg
insl
push
or
inc
jb
sub
sub
pop
stos
pop
pop
lods
cmp
cmpsb
jl
push
aad
outsb
xchg
pop
sbb
inc
sub
psubb
cmp
jmp
orl
mov
lret
inc
out
daa
jno
fs
cmp
mov
subl
push
sbb
movsl
cmp
cmp
mov
mov
push
dec
lods
sar
shr
push
adcb
ret
adc
adc
or
ret
sti
gs
pop
xlat
push
in
test
mov
fstl
xor
mov
adc
lods
les
pop
mov
jae
add
mov
arpl
sub
clc
punpckhbw
xchg
or
adc
jns
sbb
dec
sti
or
test
pop
je
outsb
mov
sbbl
dec
sub
sbb
es
add
inc
leave
dec
add
fwait
sub
sbb
cmp
dec
js
push
in
jne
push
and
push
pop
xchg
push
or
movb
mov
xchg
fdivs
jmp
lods
shll
adc
je
push
jo
or
mov
imul
mov
adc
flds
in
or
stos
lods
daa
mov
aad
push
fstps
inc
add
js
and
jmp
sub
adc
push
cmp
mov
mov
inc
pop
addr16
faddl
jns
cmp
inc
inc
inc
pop
sub
fs
add
cli
mov
or
rolb
adc
imul
insl
xor
mov
push
and
mov
and
and
inc
mov
xlat
push
xorl
push
dec
dec
or
cmp
pop
pop
fisttpll
jnp
jbe
aaa
sbb
fimull
stos
pop
and
and
adc
push
adc
data16
es
adc
pop
xchg
jg
rorb
push
dec
sub
in
jbe
jno
dec
adc
xor
pop
leave
scas
push
enter
lods
sbb
push
or
int
mov
xor
aas
jne
popf
les
test
adc
and
xchg
sub
and
rolb
mov
inc
xor
and
in
sub
or
add
lret
mov
xor
fs
pop
mov
push
sub
push
fwait
sub
popa
outsl
mov
mov
mov
outsl
add
pop
add
xchg
dec
test
push
xchg
mov
push
dec
loope
addr16
xor
push
repnz
mov
lret
loopne
jns
mov
loop
je,pt
incl
sub
add
cld
adc
andl
lods
sbb
cmp
sub
adc
movsb
cwtl
or
clc
push
shlb
jmp
xchg
ja
hlt
add
sahf
fwait
dec
loopne
cmp
enter
cli
or
in
dec
add
testb
pushf
stos
xor
add
push
orb
lods
sub
mov
inc
fcoms
js
and
pop
ret
sub
pop
and
dec
or
popf
add
ljmp
jne
dec
add
lcall
sbb
push
push
cld
add
pop
rolb
mov
lds
ljmp
scas
inc
pop
pushf
das
in
mov
adc
inc
rcrb
mov
jl
sbb
and
insb
push
test
cli
inc
jge
adc
pusha
sarl
mov
add
roll
xor
sbb
mov
xor
push
push
add
test
cs
out
inc
cmp
pop
dec
sbb
nop
andb
mov
rol
push
or
inc
shlb
pop
ret
add
push
aam
mov
mov
scas
cmp
sbb
ss
sub
dec
movsl
cltd
sub
cld
mov
sub
push
mov
sub
clc
mov
jp
loopne
inc
push
ja
or
sbb
loope
sub
jae
mov
outsl
jbe
dec
inc
fcoms
ror
into
jns
inc
and
push
imul
popl
mov
loope
dec
pop
psubw
or
ja
and
enter
sub
rolb
cmp
inc
sahf
inc
sbb
in
stos
pop
pop
xor
cwtl
js
push
inc
test
pop
cmpl
adc
mov
movd
dec
xchg
movsl
jno
xchg
into
icebp
mov
inc
cmp
jb
call
fdiv
cmpsl
xchg
cmp
add
fdivs
loopne
jno
sti
mov
adc
mov
inc
push
ljmp
and
sti
test
mov
mov
xchg
in
pmaddwd
push
xor
pop
sti
nop
mov
dec
stos
sub
adc
push
in
push
sbb
pusha
and
outsl
push
repz
pop
lea
add
jl
dec
push
mov
or
loopne
rolb
dec
inc
sahf
fldcw
test
xchg
js
sub
add
add
push
or
or
xchg
cs
pop
jb
and
add
mov
jo
sbb
or
mov
mov
adc
and
or
loopne
fdivr
lea
cs
cmp
pop
inc
unpckhps
ljmp
adc
push
cwtl
mov
or
pushf
pusha
test
inc
inc
xor
dec
xchg
lds
fcompl
pop
xchg
mov
jb
pop
sub
sti
ficoms
mov
shrb
push
cmp
cmp
test
xchg
push
and
xor
iret
push
cmp
push
loope
add
add
push
fs
pop
mov
icebp
fdivr
or
cmp
mov
cmp
mov
jmp
add
loope
loopne
xchg
jne
adc
in
cmc
or
shlb
faddl
lea
sbb
test
or
scas
push
lea
adc
add
gs
jnp
rclb
out
cld
pushf
insl
lret
test
mov
cmp
lea
adc
add
xlat
cmp
mov
in
bound
rcrl
or
xchg
imul
les
aaa
test
mov
sahf
cmp
repz
sahf
ret
sahf
xor
jmp
popa
fwait
xor
xchg
push
sti
inc
daa
or
lea
and
fnstsw
loop
inc
dec
jl
pop
pop
lea
adcl
push
add
andl
fildl
mov
lret
enter
or
push
jno
push
les
aam
addl
ss
cmc
incl
and
imul
push
pop
and
imul
jl
pop
lret
add
je
mov
leave
test
mov
or
lods
and
subl
ret
sahf
inc
pop
jp
popa
add
inc
adc
scas
mov
fwait
xor
sub
dec
vpsllw
mov
mov
pop
dec
lods
loop
pop
mov
fstl
nop
inc
es
lods
dec
cmp
gs
shl
imul
cmp
addb
sbb
outsb
sub
lods
dec
add
sub
leave
repz
call
ret
and
or
adcb
iret
mov
xor
jle
add
jo
xor
popf
cmp
jns
mov
adc
in
sbb
fwait
dec
adc
test
or
mov
xchg
mov
dec
jnp
adc
dec
popf
je
loopne
adc
pushf
and
jp
lock
arpl
cmp
cmp
adc
mov
push
sbb
fwait
xor
sub
mov
imul
mov
xor
adc
cmp
and
je
mov
daa
jne
movb
push
imul
aam
sti
add
insl
inc
or
adc
outsb
mov
push
push
out
push
push
inc
pop
fsts
pop
inc
mov
popf
shrb
rolb
add
lret
xor
popf
sbb
or
push
sbb
sbb
mov
sbb
int3
and
incl
sahf
add
fadds
pusha
push
enter
leave
dec
xchg
jbe
xor
xchg
test
nop
cmp
sub
xchg
adc
and
sub
xchg
add
jbe
scas
test
inc
jne
fcoml
cmpsb
xor
adc
adc
andb
mov
outsl
mov
pop
jge
cmpsl
xchg
push
push
sub
dec
movzbl
xchg
dec
in
out
in
in
jmp
pop
mov
mov
out
push
fcmove
das
pop
inc
mov
in
or
ret
and
sub
call
xchg
xor
mov
mov
xlat
push
sub
loop,pt
or
and
dec
jmp
and
ljmp
or
movsl
orl
pop
sub
pop
and
mull
inc
add
sub
enter
xor
mov
clc
jle
xor
cld
fs
push
ret
lock
and
add
push
or
mov
mov
and
cmpsb
imul
test
stos
cmp
scas
push
lret
leave
leave
leave
int3
add
add
inc
insl
add
add
sbb
and
push
jp
add
inc
sub
mov
and
dec
clc
notb
test
jne
testl
and
add
adcb
divb
cmc
nop
jne
xor
or
push
adc
lcall
dec
pop
push
xor
rolb
inc
mov
xchg
xchg
push
pop
add
or
inc
js
jecxz
ds
call
push
xor
mov
adc
sbb
pop
enter
xchg
mov
adc
or
or
mov
jge
mov
dec
idivl
out
enter
adc
ucomiss
ljmp
data16
dec
aam
mov
pushf
push
add
jno
ret
push
js
hlt
xor
fstpt
adc
shlb
into
popf
or
mov
xor
xor
bound
test
ljmp
cmpsl
add
xor
out
jmp
mov
inc
mov
push
or
sbb
xchg
push
and
xor
call
lcall
push
add
mov
cld
inc
dec
imul
std
ss
and
mov
jb
fmul
xor
sbb
push
xor
pop
movsb
scas
pushf
jne
pop
or
and
outsl
iret
lcall
aam
or
popf
call
adc
cli
mov
incb
lock
sub
shlb
mov
push
pop
repz
fmuls
sub
mov
add
test
cmpl
and
ja
les
cmpsb
mov
push
jns
jbe
clc
out
mov
adc
adc
jnp
lods
movsb
mov
js
jmp
or
or
sbb
pop
mov
popa
cli
jo
fucomip
adc
add
sub
arpl
jne
and
inc
add
mov
mov
add
loop
dec
dec
add
fldt
xchg
add
sbb
orl
sub
jmp
xorb
daa
or
lds
test
cmp
add
ljmp
adc
xchg
inc
push
mov
xor
add
add
mov
or
nop
js
pop
xlat
pushf
jnp
and
push
and
jl
xchg
add
sbb
test
clc
fs
popa
add
push
inc
call
or
sbb
mov
lock
mov
sarl
push
mov
jo
nopl
xor
sub
jae
scas
and
sbb
dec
insb
shrb
sub
pop
xor
jg
add
xor
add
lods
mov
pusha
and
mov
sbb
fadd
loope
push
shlb
sub
aas
adc
bound
jne
test
xchg
adc
push
xorl
sarl
mov
clc
outsl
cmpl
xor
js
xor
es
fcoms
shlb
rcrl
in
ds
mov
mov
out
enter
add
push
fisubrs
and
ljmp
data16
loop
subl
adc
aam
repz
xor
mov
mov
cld
and
divb
mov
adcl
adc
push
push
sub
repz
ret
mov
or
jbe
cmc
sub
lret
xchg
ret
sbb
cmp
sbb
in
push
xor
mov
jmp
push
ret
stc
in
mov
push
push
push
push
call
cmp
inc
push
push
dec
orl
mov
divb
push
xor
add
cmp
das
mov
dec
or
cmp
jae
add
add
shlb
icebp
or
cmp
ja
xor
push
mov
cmc
add
pop
hlt
push
shrl
adc
stc
or
mov
inc
or
lcall
je
sbb
mov
push
leave
cmp
push
cmp
xor
push
fcomps
push
mov
or
test
popf
gs
movsl
rcrl
aaa
stc
lock
loopne
add
or
sbb
cwtl
dec
fwait
in
and
mov
aas
push
mov
shrb
rolb
adc
ror
push
mov
call
adc
mov
in
mov
test
sub
mov
push
lret
sahf
mov
les
and
and
push
sbb
or
insl
shl
out
divl
aad
fmul
pop
sbb
sub
sub
mov
push
pand
or
mov
inc
mov
inc
cld
cmp
out
cmp
cmpsl
mov
mov
fidivrl
or
sub
mov
mov
cmc
xchg
mov
xor
stos
outsb
mov
xchg
fstpl
sub
or
xor
pop
mov
mov
xchg
pop
shlb
push
cmp
adc
adc
in
rcrb
add
xchg
nop
dec
es
dec
les
scas
inc
cmp
or
xor
xchg
push
loop
hlt
or
or
cmpb
mov
mov
mov
test
inc
cmp
and
int3
std
and
repnz
dec
outsl
cld
mov
cmp
push
inc
into
add
hlt
fwait
sbb
mov
movsl
movsw
push
loope
add
cld
movsb
mov
es
ror
or
mov
shr
sti
out
imul
inc
inc
cmp
jle
movb
add
push
lea
pop
dec
inc
xor
jg
push
popa
or
push
gs
sbb
cmp
sti
add
movsbl
xor
les
fwait
mov
test
in
mov
and
push
cld
je
xchg
adc
sahf
push
push
or
out
push
sarl
mulb
mov
cld
pop
sbb
scas
cmpsl
dec
outsl
lea
shlb
jle
inc
add
mov
or
mov
jl
stos
dec
or
jnp
xchg
cmc
fs
test
dec
cmp
mov
mov
jl
adc
sbb
xor
popf
fcoml
mov
into
or
inc
fcomps
inc
sbb
mov
idiv
cmc
ss
cmp
ss
push
push
daa
sbb
stos
in
andb
inc
test
mov
cld
pop
mov
xchg
and
icebp
add
ljmp
ss
rcrl
mov
jb
add
jb
or
or
jnp
mov
jmp
or
jno
jmp
push
jmp
mov
jmp
adc
pop
adc
pop
adc
push
mov
jmp
adc
dec
adc
aas
mov
jmp
sbb
xor
jmp
mov
jmp
sbb
and
pop
mov
jmp
and
or
jmp
add
orps
cs
mov
jl
test
cld
stc
xchg
push
add
iret
repz
sub
cmp
repz
inc
inc
dec
push
push
pop
cmp
repz
imul
js
addb
xchg
xchg
fwait
mov
repz
mov
mov
loopne
add
add
push
pop
or
and
or
or
push
movups
call
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
add
fwait
pushf
or
cmc
inc
dec
mov
jle
pushf
test
inc
imul
mov
es
sub
cmp
add
idivl
mov
jno
mov
sbb
mov
jmp
sbb
or
jae
mov
push
push
push
fbstp
sbb
pop
movsb
xchg
sarl
or
dec
sbb
inc
aas
dec
push
lock
sub
mov
aaa
adc
push
inc
cmp
jbe
call
push
sbb
inc
xchg
mov
jbe
lock
out
test
cmp
ljmp
push
call
or
push
dec
pop
pop
jecxz
and
mov
push
fbld
leave
mov
jp
and
fwait
xlat
dec
mov
add
sbb
adc
fmuls
adc
xchg
jbe
dec
nop
lock
and
push
stc
push
pop
clc
add
inc
cld
sub
adc
adc
push
pop
xchg
and
inc
repnz
test
xchg
icebp
add
dec
lods
xor
dec
and
inc
sub
or
or
mov
xor
out
out
fmul
mov
add
adc
add
sbb
rcll
xor
jbe
xchg
jns
fwait
or
and
sbb
jp
xchg
mov
mov
adc
inc
mov
hlt
sbb
lock
mov
add
and
call
add
push
xor
cwtl
push
and
and
movsl
push
xor
dec
insb
fisttpll
rolb
push
ss
mov
leave
mov
test
lcall
lcall
repnz
jne
dec
lahf
jmp
inc
pop
loopne
gs
inc
or
jnp
js
adc
push
popf
movsb
shrl
xchg
inc
call
pop
mov
jne
and
sahf
and
insl
sbb
aas
dec
jp
test
push
pop
xchg
movw
dec
cld
in
inc
mov
mov
fdivl
jecxz
fcompl
sbb
sbb
shll
and
mov
add
out
je
dec
sahf
movsl
inc
sub
pop
lahf
cld
push
clc
xor
nop
lock
je
xchg
clc
pop
cmp
cmp
push
xor
imul
push
fdivrl
dec
std
cmp
cmp
pop
xchg
cmpl
inc
or
sbb
imul
mov
adc
cmp
test
mov
add
dec
orl
jo
fsubl
mov
mov
push
jns
mov
rorl
push
inc
inc
adc
test
push
popl
xchg
dec
ds
in
sbb
sbb
shlb
xchg
and
sub
clc
imul
sub
je
pop
xor
andl
dec
mov
add
xor
pop
or
loop
sbb
adc
pop
or
rorb
fildl
rcrb
loope
in
add
cmp
lret
jl
xchg
lret
repz
sub
add
inc
adc
xchg
push
push
in
jp
push
sub
push
push
cwtl
or
jne
ds
dec
add
and
add
sub
add
or
push
mov
cmp
push
jmp
add
aam
test
jg
insb
add
in
pop
pop
adc
inc
enter
sub
mov
jg
shrl
dec
add
scas
rclb
addl
scas
mov
push
stos
push
push
pusha
adc
rcrl
subb
loop
stos
inc
dec
push
addr16
cmp
ja
or
adc
das
mov
push
insb
test
xlat
xchg
cli
dec
test
mov
pop
jg
pop
test
sbb
insl
pusha
xor
addr16
rcll
push
pusha
jo
and
daa
dec
add
cwtl
movsb
test
fildl
jecxz
pop
and
or
dec
cmpsl
or
xchg
call
ret
sub
inc
aaa
xor
mov
add
mov
sub
rcrb
ljmp
movsb
pop
dec
pop
push
ror
loopne
addl
add
push
or
and
pop
shrb
cmp
inc
pop
js
add
sbb
add
push
loopne
mov
xchg
insb
call
sbb
dec
ja
daa
or
dec
add
movaps
and
cmp
popl
pop
movsb
pop
addb
push
fldenv
clc
iret
or
addb
dec
cmc
add
push
jne
or
nop
push
imul
dec
dec
dec
add
mov
sub
jne
xor
mov
cmp
jp
adc
jmp
mov
arpl
stos
xchg
sbb
fidivs
ss
xorl
imul
and
fwait
dec
push
push
aad
pop
sub
in
lahf
inc
adc
adc
xor
shl
inc
add
fs
or
jo
je
inc
and
in
js
jl
mov
movsb
cmp
pop
test
es
pop
cwtl
xchg
inc
push
es
push
or
nop
add
je
repnz
lods
lahf
mov
and
inc
jbe
xor
mov
fnstsw
imul
fistps
loop
inc
mov
or
and
add
test
test
xchg
or
inc
cmp
aaa
add
cwtl
add
lea
add
jo
xlat
xor
mov
fstl
sub
sbb
repnz
and
and
push
cmp
jl
sub
jns
daa
les
inc
or
mov
add
push
or
mov
fisttpll
sbbl
shrb
mov
push
xchg
ud0
lock
sti
lods
sub
and
xor
lock
ret
pop
jl
jmp
out
push
lock
xor
xchg
sbb
ret
mov
pop
sti
cmp
je
xchg
popf
jge
push
and
and
xchg
enter
push
in
imul
add
sbb
shl
roll
int3
xchg
push
mov
pop
bound
push
sahf
das
sub
popl
ret
cmp
mov
dec
mov
sarl
jmp
cltd
dec
lds
rcr
xchg
xchg
das
or
call
int3
sub
sbb
pusha
or
sti
jge
pop
cmp
or
hlt
cmp
jl
cmp
jle
mov
sub
ret
and
xor
add
add
test
xor
sbb
fwait
xor
hlt
mov
inc
shr
ja
add
push
sub
ds
inc
popf
pop
push
sbbb
sub
addr16
adc
js
add
pop
notb
inc
pop
inc
xor
dec
inc
cmpsb
push
jbe
jbe
adc
rorl
mov
fsubs
add
in
ds
cmp
pop
mov
adc
cmp
mov
mov
test
sbb
nop
js
and
aas
or
jne
sbb
or
pop
jne
inc
and
cmp
xchg
or
push
test
iret
call
and
and
adcb
lods
addb
adc
add
les
and
push
xor
xchg
imul
fstpt
lods
lret
dec
scas
pop
js
je
loope
jge
lahf
inc
or
pop
loopne
pop
inc
jl
push
in
repnz
mov
jle
sbb
xor
pop
push
adc
jb
out
xor
clc
test
sub
push
lock
dec
sbb
sbb
adc
call
and
pop
or
mov
jbe
popf
lods
inc
sub
xor
fsts
jae
arpl
sub
pop
inc
aaa
jle
adc
sbb
push
inc
call
adc
jne
into
push
mov
adc
orl
jg
mov
xchg
xlat
or
lret
clc
push
jmp
sbb
push
loopne
in
adc
jmp
inc
lock
add
leave
test
mov
test
rolb
dec
adc
xor
pop
fdivl
jle
dec
add
dec
or
les
loop
arpl
test
jne
push
in
sbb
int3
loope
in
mov
xchg
scas
cltd
or
test
sbb
xor
jge
adc
movsb
ja
repz
loopne
sub
push
push
xorl
lea
outsl
xchg
xchg
les
add
push
add
dec
lret
add
loopne
ret
cmp
lods
inc
movb
jno
push
xchg
rorb
dec
outsl
popa
dec
test
fldenv
jb
inc
push
inc
les
adc
inc
jmp
mov
xor
mov
fwait
push
data16
decl
mov
add
lcall
push
xchg
leave
sub
add
js
test
lods
loopne
pop
cmp
lds
ja
xchg
add
aas
mov
das
loopne
inc
sub
mov
push
popa
cmc
into
cmp
jmp
jbe
or
add
mov
push
sub
add
into
add
insb
aam
jl
jbe
jmp
sub
add
jbe
push
sub
js
jb
lock
outsl
sub
sub
movsl
rcrb
ljmp
pop
imul
cmp
addb
jmp
xor
or
pop
push
jg
and
sub
and
jbe
shl
in
bound
pop
lea
and
dec
or
int
push
cmpl
popa
xchg
repnz
rcrb
mov
dec
ss
sub
loope
out
push
in
arpl
sub
pop
or
rcrl
ret
jmp
inc
ret
mov
outsb
sbb
jp
add
outsb
mov
cmp
or
inc
mov
dec
xchg
dec
adc
adc
xor
pop
sub
pop
xor
inc
push
leave
aaa
and
mov
xor
cmp
jnp
or
push
push
mov
adc
in
lods
nop
pop
mov
inc
pop
push
sub
add
lea
adc
jle
pop
imul
test
xor
and
mov
gs
push
popa
jle
dec
lock
mov
cs
pmaxsw
push
push
mov
test
lret
jmp
ficompl
sbbb
adcb
inc
inc
adc
push
and
sbb
int3
es
push
add
out
add
faddl
fstl
fldz
fcomp
fnstsw
push
loopne
add
pop
fsubr
adc
jmp
fstpl
ds
pop
mov
or
adc
sbb
xor
clc
or
push
push
mov
fadds
mov
pop
hlt
xlat
nop
xchg
or
pop
hlt
jl
cmp
mov
sub
lock
sbb
pop
mov
jmp
loop
jne
or
add
scas
mov
add
aas
sbb
mov
mov
xchg
jle
and
jbe
push
pop
movl
fldl
jnp
jge
jmp
fldl
cmp
xchg
xchg
dec
and
push
jg
add
push
jecxz
sarb
xorl
stos
pusha
pusha
and
test
inc
jecxz
test
and
or
pusha
imul
pop
fmull
and
push
xchg
inc
jmp
test
test
jp
mov
mov
dec
sub
int
mov
push
add
in
fimuls
enter
mov
dec
int3
loopne
shr
dec
loopne
cli
cmc
fcomps
aad
inc
pop
imul
mov
std
incl
incl
hlt
dec
dec
xchg
inc
pop
inc
push
sahf
add
pop
inc
bound
js
mov
push
inc
pop
fildl
pop
xlat
lods
sbb
sbb
adc
data16
sub
jae
imul
push
scas
and
aam
movsb
cmp
cmpb
push
loop
sub
mov
and
or
xchg
mov
fstpt
or
ss
cmc
sbb
inc
cwtl
push
jmp
loope
pop
or
and
or
push
inc
cmp
cmpl
or
test
push
mov
and
icebp
jecxz
mov
push
popf
mov
xchg
jno
jge
sti
orb
fs
pop
pop
popa
sub
add
mov
pop
cwtl
add
jb
or
aaa
add
dec
leave
lock
jl
push
jmp
cmp
dec
sub
push
sbb
fstl
push
or
push
imul
mov
rclb
add
xchg
pop
pop
xor
mov
lods
adc
mov
sub
push
stos
rcr
dec
loope
shlb
xchg
adcl
inc
inc
push
and
adc
pop
das
mov
fwait
pop
sub
iret
or
hlt
dec
jecxz
out
jae
mov
xchg
pop
pop
push
mov
add
jae
popa
and
xchg
in
xlat
cmpsl
sbb
jne
xchg
dec
or
inc
mov
add
sbb
mov
negb
mov
sbb
insl
adc
or
mov
repnz
add
jno
pop
push
pop
sbb
jne
mov
pop
psrld
cmpsl
in
jge
cmp
ret
and
or
mov
mov
rcrl
popa
or
lahf
add
dec
loope
xchg
adc
pop
orb
aam
inc
clc
push
icebp
push
pop
ja
jmp
cmp
je
xor
push
inc
jge
ret
aaa
ret
cmp
aas
les
pop
mov
push
enter
adc
cmp
cmpsb
orl
jecxz
xor
rcll
je
vmovsldup
fadds
ret
mov
pusha
pop
pop
movsl
into
sub
add
insl
scas
push
js
xor
add
jl
leave
adc
push
jg
jne
jbe
dec
cmp
jb
ret
jne
dec
pop
jg
and
dec
adc
mov
jbe
push
xor
adc
add
adc
and
add
cmpsl
push
xchg
push
aam
lods
int
mov
cmp
push
push
push
jp
popf
jne
rcll
push
mov
ret
dec
cld
inc
sub
mov
lods
dec
or
and
movsb
add
or
add
and
iret
mov
inc
xchg
sbb
sub
inc
add
fsubl
push
push
xor
inc
loop
pop
add
and
push
and
call
leave
or
sarl
mov
loop
jb
push
push
sub
push
lret
and
ret
arpl
call
hlt
cmp
mov
test
sub
punpcklwd
pop
cmp
shlb
jl
decl
cmpsb
sahf
pop
push
mov
das
test
ljmp
mov
inc
add
movmskps
shlb
call
test
sub
int
and
cltd
jns
adc
add
dec
cmpsb
push
mov
mov
adc
sbb
push
cmpsb
test
mov
jo
movsb
sar
xchg
sbb
ljmp
fstpt
add
stos
sbb
inc
xor
sub
enter
xor
sbb
js
mov
pop
push
fadd
enter
cmp
enter
mov
icebp
lds
mov
cltd
je
add
jle
int3
lea
and
mov
mov
sbb
ret
inc
inc
dec
cmp
jns
and
pop
mov
add
xchg
sub
fsub
movsb
lods
add
faddl
add
adc
cmpsb
in
or
dec
lea
aam
mov
dec
call
push
fs
sub
push
adc
daa
and
add
pop
xor
rolb
cmp
dec
incl
cmp
xor
push
jo
or
or
in
test
rcrl
cmp
inc
jbe
add
jae
mov
fisubrs
mov
das
inc
test
shld
sub
push
add
mov
in
cmpsb
dec
lock
jge
dec
push
shll
sub
add
movsb
pusha
inc
jmp
inc
aad
mov
out
xorl
xchg
mov
rorb
outsl
add
pop
test
xchg
push
dec
cmp
add
pop
inc
ret
push
push
addb
adc
push
or
je
push
sub
inc
sub
cmpsl
xchg
mov
mov
daa
sub
xor
xchg
sbb
xchg
adcl
rolb
sbb
xor
and
cmp
fneni(8087
push
imul
xchg
outsl
and
add
cs
sbb
mov
push
adc
jnp
orb
inc
add
push
stos
sbb
xchg
pushf
mov
mov
dec
mov
pusha
mov
xchg
adc
jns
ja
or
add
mov
mov
ficompl
lret
xchg
clc
mov
push
lock
xchg
add
arpl
mov
mov
js
xchg
sbbb
enter
js
xor
cmp
loopne
prefetchnta
loop
mov
movsb
pop
movb
add
jne
pop
imul
imul
out
sbb
inc
jmp
mov
aam
add
mov
push
fs
jg
add
fidivl
jae
nop
mov
addb
pop
stc
or
rcll
add
sub
push
jmp
cmp
add
in
pop
js
add
pop
aad
dec
or
faddl
push
shll
xor
ds
jge
mov
jle
xor
lods
loope
add
mov
lock
pop
xor
imul
cli
push
dec
pop
imul
testl
fsubrs
movsl
leave
test
test
xchg
ja
push
or
in
insb
jl
and
or
push
call
xchg
mov
cli
sub
add
aad
rcrb
add
cmp
popf
push
push
js
test
pushf
sub
aam
inc
int3
push
jo
sub
stc
xor
sub
mov
cmpb
inc
mov
push
orb
idiv
pop
add
or
push
adc
add
lret
and
loopne
dec
sub
dec
adcb
inc
or
imul
pop
or
aad
orl
push
bswap
int
xchg
push
inc
pop
sub
jle
cwtl
jno
pusha
xchg
push
loope
int
sbb
push
push
xor
inc
rorb
add
cmpsl
lea
add
mov
xchg
push
fsubl
xor
test
cmpsl
stos
test
xor
pop
mov
mov
cmpsl
mov
adc
jmp
or
mov
daa
sbb
fcompl
scas
xchg
pusha
or
jo
pop
add
adc
inc
iret
repz
sub
xor
int3
outsb
add
cmp
inc
jno
stos
and
ret
xchg
inc
enter
and
xchg
in
and
sbb
mov
jo
or
dec
pop
mov
cwtl
mov
dec
push
jae
add
js
andl
jl
adc
xor
loope
addb
and
int3
mov
push
mov
mov
in
jmp
cmp
sub
orb
rorb
push
dec
popa
xchg
popa
aad
xor
push
mov
pop
mov
shll
pushf
push
add
cmp
push
out
aam
cmpsb
add
sub
hlt
ficoms
jb
hlt
cmc
xchg
push
mov
scas
inc
loopne
and
cmp
mov
fmuls
enter
add
pop
jle
xchg
adc
xor
cmp
stc
or
call
or
call
push
adc
jne
push
fucomp
push
inc
adc
mov
mov
test
mov
push
xchg
xchg
pop
test
add
das
rcrl
xchg
cmp
aam
sub
adc
dec
dec
or
sub
fsubr
add
and
dec
shr
fs
push
push
ret
je
mov
inc
add
popa
loopne
loopne
ljmp
out
es
inc
lahf
call
push
insb
testb
mov
ret
and
adc
mov
or
addr16
mov
test
mov
popf
inc
in
and
push
dec
ret
add
jl
inc
nop
xchg
mov
or
dec
jmp
dec
and
adc
dec
sahf
hlt
outsl
movsl
test
lds
je
jle
add
push
mov
movzbl
aad
jo
jecxz
or
and
pop
add
incb
and
adc
jl
mov
lods
pop
test
mov
subb
sub
pop
aam
or
dec
xchg
aaa
sbb
roll
sbb
sbb
push
xor
out
add
or
add
movsb
push
dec
scas
insb
add
pop
xchg
cmp
dec
dec
ret
adc
jne
inc
or
sbb
sbb
mov
nop
int
sub
push
in
dec
movsb
outsl
add
or
test
decl
xchg
mov
ficomps
jl
push
dec
xlat
hlt
xor
orb
jge
mov
hlt
andl
aaa
out
sub
incb
test
mov
or
das
insb
fisttpll
or
and
jne
lock
mov
mov
jo
cmpsb
or
fimull
jle
mov
lea
adc
inc
jnp
push
test
inc
adc
adc
test
dec
or
test
fimull
mov
inc
fidivl
insb
out
push
pop
mov
loope
push
lock
mov
and
lea
sbb
mov
jl
ss
pop
jl
or
mov
call
pop
dec
outsl
adc
sub
pop
fisubrs
addb
sub
sbb
mov
jo
test
inc
pushf
nop
push
push
adc
sbb
iret
iret
in
lods
or
movl
or
adc
sbb
lea
stos
or
movsb
jo
rolb
cmpsl
add
mov
mov
cltd
lea
fs
pop
outsl
ficoml
mov
mov
xor
sbb
lea
push
test
mov
in
cld
xor
ds
cmpb
xor
dec
xor
sub
jo
enter
push
lret
and
loop
in
mov
ss
push
sub
les
jns
cmp
in
sub
add
jmp
loopne
test
cmp
xor
and
stos
in
adc
or
push
push
cmp
and
in
or
jne
rcrl
mull
fidivl
enter
inc
pop
or
push
xorb
sub
adc
push
cld
nop
fidivs
cld
clc
or
jno
lock
add
mov
cltd
dec
xor
ds
sarb
inc
movzbl
and
das
jl
or
lret
inc
mov
inc
and
fsubrs
lea
andb
test
je
subb
mov
call
mov
lea
daa
ret
into
or
push
mov
lea
add
mov
jbe
popa
pop
out
fimuls
cs
out
jns
jno
pop
inc
pop
cmp
rorb
in
cs
add
pop
cli
fs
sbb
push
cs
push
jmp
dec
xor
push
mov
or
dec
mov
pop
mov
adc
or
add
loope
mov
adc
int
mov
xchg
dec
jnp
nop
dec
and
adc
cmpsl
test
shl
mov
jbe
test
mov
and
cmp
pop
push
add
sub
jne
fsubl
insl
dec
cwtl
sbb
xchg
lret
or
push
sbb
cltd
push
iret
xchg
adc
adc
pop
add
xorb
push
push
or
and
sbb
xchg
xor
sub
xor
mov
adc
jns
sahf
out
ret
sbb
cmp
push
push
jl
or
nop
sbb
or
mov
subl
add
xchg
fisttpll
push
or
in
add
and
push
rclb
and
push
fadd
movsl
add
xor
add
aam
sahf
pop
sbb
push
shll
inc
sub
ret
push
mov
cmp
add
mov
test
loop
shll
popa
xchg
je
dec
mov
adc
mov
push
jae
loopne
call
insb
test
add
mov
pop
mov
add
clc
mov
adcb
inc
rcll
mov
mov
mov
mov
ret
sbb
xor
test
xchg
pop
dec
and
and
aad
mov
jo
mov
mov
inc
ret
mov
cmp
pop
add
push
lret
insl
or
ret
push
adcl
addr16
dec
leave
outsb
pusha
push
das
add
pop
sbb
inc
inc
je
repnz
jns
das
je
sub
adc
push
fcmovu
jl
or
sub
or
sbb
sbb
xchg
or
popa
pusha
xor
jo
xlat
dec
cmp
dec
mov
jne
mov
or
sbb
cmp
jmp
nop
lcall
inc
or
daa
pushf
imul
pushf
add
mov
xor
mov
jno
inc
pop
or
push
xchg
pop
sub
add
add
inc
orb
push
hlt
and
add
mov
dec
clc
jo
xchg
mov
lret
stc
add
test
lret
pop
fsubrs
je
iret
dec
into
sbb
lock
inc
incl
pushf
aad
ret
jg
mov
scas
xchg
push
or
push
add
out
je
in
xchg
lea
cmpsl
out
cmp
cmp
push
push
es
dec
xor
xchg
pop
sbb
xor
pushf
jge
test
jg
call
jb
sbb
adc
subb
mov
mov
ret
sub
mov
xor
sti
imul
pop
rorb
sub
shll
inc
inc
jmp
inc
fs
sub
and
and
cmp
and
icebp
add
sbb
mov
adc
lea
test
cmpsb
add
add
sub
or
sub
fimull
fcmove
stos
arpl
inc
mov
outsb
cmpsl
ss
imul
inc
aam
loop
jno
pop
xor
out
xchg
popf
push
or
mov
shll
inc
inc
push
add
cs
or
and
mov
cmpsl
sbb
xchg
push
je
movsb
dec
in
pop
cmpsl
aam
pop
cmp
adc
in
mov
push
cmpsl
ss
in
xchg
in
adc
movb
rorl
dec
insl
fcoms
nop
xchg
sub
dec
ljmp
sbb
mov
push
mov
jne
xchg
dec
pop
shl
lods
cwtl
xor
cltd
int3
shlb
addr16
addl
faddl
and
stc
fidivl
add
les
sbb
sub
push
enter
or
and
adc
dec
or
insb
and
imul
jo
pop
dec
pop
lds
mov
addb
push
push
dec
clc
or
sbb
int
xor
je
outsl
insb
sub
cmpsb
jle
sub
fisubrs
sbbb
sub
sbb
or
mov
fisttpl
fsub
push
jmp
push
mov
add
lahf
mov
aaa
xor
loopne
jge
sub
push
push
push
push
sub
xchg
xorb
mov
cmp
and
sbb
adc
cmp
addl
jge
nop
int
or
dec
cld
push
add
sub
add
mov
adc
pushl
xor
clc
lahf
cmpsb
pop
call
mov
mov
ljmp
inc
xor
test
scas
test
xchg
add
inc
dec
ret
nop
cmp
add
jne
les
push
mov
mov
int3
insb
icebp
push
stos
jo
mov
xlat
xor
dec
sbb
cmp
out
pushf
cltd
sub
hlt
ljmp
add
push
mov
push
dec
dec
mov
xchg
outsb
loope
jl
repz
lods
fsts
push
addr16
jne
jbe
lahf
inc
leave
inc
sahf
push
insb
inc
jle
dec
pushf
call
adcl
xlat
imul
mov
dec
fimuls
test
mov
cld
add
rorl
pop
sub
mov
jmp
and
loopne
pop
cmp
dec
add
push
punpcklbw
leave
xor
shr
xor
xchg
bound
jb
pushf
cmp
push
not
loop
dec
cmp
test
test
movl
decl
cmp
jbe
add
add
mov
sbb
movsl
xor
test
out
and
or
inc
push
shrb
rcrl
xor
add
xorb
push
dec
inc
cs
xor
add
inc
jp
inc
mov
jb
pop
sbb
adc
mov
sub
add
mov
mov
push
push
cs
aam
mov
test
and
sbb
or
cli
sar
inc
jmp
fmull
add
adc
clc
mov
and
cmp
add
push
jb
cwtl
sbb
add
xor
enter
dec
or
out
dec
dec
push
xchg
mov
inc
pop
push
sbb
inc
mov
fnstenv
xor
popf
pop
push
lahf
dec
pop
sbb
add
lcall
push
adc
ficoml
push
and
loop
add
adc
adc
pop
in
out
cmp
rorb
mov
sub
inc
adc
sarb
ja
sbb
and
lock
aaa
push
inc
and
ret
jp
pushl
icebp
dec
xchg
dec
cmp
pop
dec
dec
adc
cs
xor
add
sub
sahf
adc
rorb
cmpsl
inc
add
aas
mov
push
pop
cmp
rcrb
jle
sbb
lods
adc
daa
pop
fcomps
jmp
pop
or
pop
inc
mov
outsl
mov
push
add
push
or
and
inc
ret
insb
and
jmp
and
and
cmp
sub
and
add
mov
push
xor
and
dec
mov
xorb
sub
dec
or
jno
xor
je
sub
pushf
test
push
add
xchg
xchg
xor
fcoml
nop
and
or
push
mov
into
push
lock
push
fidivrs
test
jmp
push
and
aaa
or
lea
shll
sub
push
xchg
or
sbb
xchg
loopne
mov
cs
or
add
dec
ljmp
xor
pop
jne
jb
xchg
sub
dec
mov
repz
mov
cmp
dec
cmp
ret
push
add
cmp
aaa
mov
xchg
push
jp
loopne
ret
dec
and
push
loope
cmp
pop
xor
adc
cltd
mov
aas
clc
and
cltd
mov
adc
aaa
cmp
mov
sbbl
dec
sbb
push
lds
and
adc
js
sbb
arpl
les
imul
mov
cmp
or
mov
shll
pop
and
dec
sahf
and
push
or
nop
sbb
mov
ss
subb
add
pushf
sbbl
xchg
dec
andb
sti
lret
xchg
xor
sub
movl
jns
mov
insl
or
pusha
cmp
push
pop
sbb
and
lret
mov
push
fstps
sub
les
in
push
pushf
sub
popa
xchg
outsb
test
mov
jae
pop
sub
ja
mov
imul
sbb
aaa
shlb
inc
adc
fs
movb
dec
rclb
in
xchg
xor
call
xchg
push
ss
jae
pushf
mov
mov
ds
xchg
je
cli
push
scas
cmp
pop
adc
mov
push
fs
jbe
push
push
add
dec
and
jge
sbb
add
inc
adc
inc
fwait
enter
int
or
shlb
xor
mov
adc
mov
fiaddl
and
pop
mov
mov
in
ds
jbe
add
pusha
mov
sbb
mov
jae
sbb
mov
mov
movsb
imul
frstor
pop
call
dec
add
js
in
test
xchg
insl
push
fwait
push
cmp
inc
cwtl
outsl
pop
js
repz
inc
jo
sbb
sub
jbe
pop
mov
cmp
inc
mov
mov
sbb
iret
rorb
inc
push
xor
faddl
mov
mov
mov
jle
in
pop
dec
xchg
add
or
in
mov
arpl
sbb
inc
inc
loop
push
cltd
xchg
or
pop
in
dec
lahf
xchg
dec
test
sbb
jmp
fdivrs
loope
notl
push
pushl
push
and
adc
or
test
or
or
dec
hlt
and
xlat
jno
mov
dec
andl
cmp
pop
adc
fisubl
mov
ss
cwtl
inc
mov
fcoms
sbb
int
adc
dec
push
movsb
and
adc
xchg
and
cwtl
cmp
je
jp
add
cmp
adcb
cmp
je
jbe
inc
mov
notl
in
ja
dec
je
or
push
hlt
imul
sbb
movsl
push
lahf
lds
jmp
adcl
notl
sbb
out
mov
test
xchg
push
in
push
out
dec
jecxz
shr
enter
shll
sub
adc
dec
test
mov
jne
push
adc
movsl
xchg
mov
fiaddl
in
nop
pop
and
inc
int
mov
loope
popa
inc
call
dec
loope
and
shlb
mov
inc
add
or
and
add
fsubr
dec
push
mov
mov
pop
fcmove
lret
addr16
and
mov
call
adc
test
hlt
push
insl
cs
subb
mov
push
pop
xlat
push
or
push
xchg
sub
dec
fstpt
push
inc
in
xchg
inc
sub
mov
mov
mov
arpl
jp
in
add
adcl
sbb
int3
xchg
adc
roll
shrb
lock
hlt
imul
push
and
sub
push
sbb
ret
inc
popa
mov
outsl
int3
push
push
add
push
hlt
mov
fisttpll
mov
sbb
dec
les
pop
push
mov
mov
sarb
xchg
dec
xlat
sbb
or
mov
cld
lea
arpl
xor
gs
insb
mov
nop
shlb
or
and
out
decl
sub
dec
repz
or
and
movsb
dec
jmp
and
pop
pop
xor
inc
jmp
movsb
inc
add
lret
push
push
xor
push
push
adc
in
and
decl
inc
adc
push
push
sbb
mov
jl
push
mov
cmp
adc
adc
loop
pop
aam
inc
rcll
mov
mov
pop
or
push
pop
or
dec
cmc
je
dec
mov
push
cli
xchg
test
movsb
fsubs
sub
test
je
mov
and
push
jns
xor
fstl
outsl
fstpl
ret
xor
leave
pop
xchg
push
and
push
pop
in
fstps
and
lock
movsl
push
es
xchg
es
adc
cmpsb
test
mov
push
jo
or
shrb
push
movsb
mov
mov
dec
cmp
data16
and
roll
mov
sbb
xor
sub
cld
mov
xchg
or
or
push
fcmovnu
out
add
adc
test
sbb
cmp
cld
pop
adc
xchg
xor
xchg
mov
push
add
sub
out
add
movb
sub
daa
mov
mov
imul
popa
xor
addr16
inc
push
dec
jg
clc
and
insb
test
push
cli
push
and
adc
cmp
add
addr16
jp
push
hlt
cmpl
mov
sar
mov
xor
inc
add
or
or
dec
add
xor
mov
mov
xor
jecxz
push
pop
push
push
push
or
int
iret
out
jecxz
lret
loope
push
or
push
in
out
ja
xchg
pop
push
outsl
push
push
test
shll
test
aad
daa
movsl
aas
inc
in
cmp
aam
cmp
push
push
mov
jbe
push
test
mov
test
jmp
inc
testb
sbb
mov
out
subl
in
addl
xor
xor
movsb
or
xchg
mov
add
adc
and
push
push
inc
push
push
hlt
clc
inc
jmp
sub
push
or
adc
daa
cltd
jmp
push
lret
add
inc
fdivrl
daa
jo
push
nop
adc
or
adc
inc
out
inc
inc
add
icebp
test
mov
adc
or
bound
xor
in
sub
in
add
je
push
mov
or
hlt
adc
imul
inc
jg
popf
mov
shll
push
les
push
sarb
adc
add
inc
rcrl
jl
add
mov
inc
sub
in
add
adc
push
adc
xor
popa
int3
call
xchg
repnz
inc
push
pop
or
dec
pushf
add
out
loop
xchg
imul
jp
or
mov
mov
rcl
pop
dec
xor
and
adc
xor
nop
nop
xchg
fwait
jle
adc
iret
arpl
add
push
or
rorb
push
add
dec
pop
lds
sbb
lret
in
pusha
add
or
popa
lcall
shl
add
daa
inc
loopne
sbb
push
jg
sbb
xchg
loopne
jp
adc
cltd
push
xlat
imul
outsl
and
cs
int
in
pop
mov
and
adc
mov
pop
cmpsb
imul
lret
insb
mov
mov
repnz
push
hlt
dec
cmc
ret
mov
notb
jne
pop
push
inc
pop
mov
cltd
and
add
add
mov
or
aam
movsb
in
rcrl
loopne
jne
std
fdivrs
or
loopne
or
xor
insl
das
jbe
add
cmp
daa
inc
in
and
in
add
imul
adc
sbb
sbb
adc
and
pop
lea
lcall
pusha
xor
inc
push
mov
sar
mov
lret
pop
xor
shr
xor
sub
jnp
xor
shr
xor
add
pusha
incb
js
add
mov
lcall
iret
or
jae
or
and
not
and
xor
add
add
aam
sub
subb
or
out
xor
push
xor
into
ljmp
push
or
add
xor
and
and
xchg
push
aam
add
or
cmp
mov
xor
xchg
sub
repnz
sub
fmull
pop
sub
lea
or
xlat
ret
rcl
xor
add
add
push
nop
cmpsb
sub
call
orl
data16
or
sub
ljmp
rol
rol
out
add
jb
xor
push
xor
fdivl
xchg
cmpsb
loopne
sub
in
and
in
call
test
xchg
xchg
bound
cwtl
xchg
xchg
mov
rcll
les
mov
pop
sbb
add
cltd
call
xor
loopne
loopne
mov
in
in
loopne
add
and
xor
pop
cmp
aam
pop
cmp
xor
xor
lret
jo
int3
mov
inc
int
or
push
xor
and
and
out
cmp
out
into
add
and
int3
lcall
inc
adc
mov
cmp
jo
ret
push
jo
sbb
adc
cmp
shlb
xor
adc
push
loop
cld
rol
jne
mov
filds
cltd
xor
fadds
or
pop
jbe
call
idiv
push
or
clc
jp
push
and
shll
fdivrs
inc
imul
in
sarb
lret
inc
sub
mov
xchg
cmp
and
stos
sbb
aam
xor
shlb
cmp
sub
xor
inc
in
in
cltd
lods
mov
out
rolb
inc
jo
sbb
cli
xor
push
shrl
jge
shlb
shrb
movsb
test
inc
lcall
and
add
dec
add
add
inc
push
xor
inc
and
add
dec
push
dec
in
movsb
cltd
xor
dec
lcall
dec
dec
add
inc
cmp
adc
add
jae
pop
cmp
leave
and
push
pop
add
push
mov
sub
int
add
or
imul
sbb
pop
nop
data16
xchg
and
enter
xchg
movsl
mov
fcoms
stc
rorb
adc
sbb
roll
push
adc
cmpsb
jb
cmpsl
pop
fs
dec
dec
xor
push
imul
pusha
aam
mov
adc
ret
xchg
inc
dec
jb
lcall
adc
adc
push
cmpsb
imul
adc
push
push
push
in
add
and
push
pop
and
dec
lock
out
aas
pop
add
sub
mov
loopne
adc
xchg
incl
pop
call
jle
adc
add
insl
rolb
sub
xchg
mov
xor
and
mov
enter
add
mov
mov
add
sbbb
add
rorb
jbe
mov
pop
in
fiadds
cmpsb
mov
add
or
sub
xor
pusha
loopne
lea
jmp
mov
jl
sub
out
mov
add
jecxz
mov
or
mov
dec
jne
pop
inc
push
lret
lock
dec
sub
sub
mov
or
jbe
or
mov
push
adc
outsb
xchg
sub
jae
shl
or
xchg
sub
sub
stos
or
stos
fildll
insb
mov
or
mov
push
mov
outsl
pop
loopne
ror
mov
test
ljmp
mov
push
lods
xchg
inc
mov
sbb
xor
add
sbb
add
add
rcrl
xor
and
mov
inc
add
dec
lea
int3
aas
adc
cld
std
lea
mov
add
or
hlt
push
add
inc
movsl
add
je
and
push
inc
pusha
xchg
push
pop
ret
or
or
xor
test
cltd
sbb
cmpl
popl
test
test
adcb
dec
jnp
or
es
dec
mov
lea
adc
andl
adc
or
std
sbb
mov
addr16
add
dec
add
jo
inc
pusha
xor
inc
call
pusha
sub
loope
inc
test
sbb
rolb
sarb
scas
repz
ljmp
call
sub
xchg
sub
mov
mov
add
cmc
imul
pop
inc
mov
cmpsl
and
dec
call
mov
inc
sub
orb
out
popa
es
push
mov
jo
and
clc
mov
push
jp
in
mov
mov
pop
fisubs
rcll
push
xor
test
pop
cmp
aaa
in
xchg
nop
inc
cmp
sub
cmp
mov
sub
setg
mov
adc
and
add
mov
and
push
fiadds
xchg
loopne
out
jb
add
add
jle
inc
mov
jl
adc
mov
ret
push
mov
pusha
ds
sub
inc
pop
adc
fld
push
imul
or
mov
fwait
cld
dec
cmpl
or
hlt
push
xor
push
adc
inc
sub
std
inc
ljmp
inc
dec
mov
xchg
xor
mov
adc
and
push
add
add
fwait
sub
or
ret
push
cmp
adc
xor
popa
push
nop
jmp
mov
and
jnp
mov
and
fcomps
dec
jno
xor
mov
rcll
int3
fidivrs
add
cmpb
jae
fwait
push
popf
adc
pushf
and
test
dec
je
cmpsl
add
ret
add
pop
pop
jge
inc
in
adc
jmp
inc
xor
pop
rolb
sub
and
cmc
xlat
or
testb
pop
dec
mov
mov
and
insb
loopne
or
ja
sbb
pop
inc
mov
cmp
je
fldl
inc
jmp
call
addl
dec
sbb
fldl
pushl
add
cld
push
mov
jnp
pop
add
sub
mov
testb
clc
std
cmp
push
cmp
xchg
adc
push
adc
sbb
loope
inc
sbb
inc
push
push
xchg
movsb
inc
and
ret
push
cmp
and
cmpsl
ret
jbe
xchg
rclb
fildll
or
leave
and
rolb
les
add
jno
pop
cmp
decl
es
or
or
andl
xchg
or
pusha
ret
cmp
xchg
shlb
lret
jg
push
push
mov
pusha
movl
xlat
pop
push
ss
xchg
jbe
xorl
pop
hlt
pop
push
sbb
dec
fldt
pop
stc
push
or
movsb
cs
push
add
and
xchg
filds
push
sbb
push
jge
push
pop
mov
and
push
dec
aas
mov
xor
or
xchg
adc
or
cmp
mov
aam
mov
jne
or
or
sbb
leave
lds
out
or
mov
fistl
push
pcmpgtd
rcll
jmp
imul
adc
mov
jb
mov
insb
outsl
cmp
add
add
sbb
cmp
dec
das
or
lock
push
fsts
cli
mov
push
add
jmp
mov
dec
sub
and
push
jae
push
mov
push
mov
fidivrs
jb
jmp
push
and
std
les
push
je
pop
mov
adc
stos
loope
gs
pusha
popa
sub
sbb
pop
enter
mov
int
xor
mov
mov
mov
sbb
insb
cmp
add
mov
push
je
jmp
push
add
mov
int3
sahf
adc
ljmp
cmpsb
cmpsl
inc
or
popa
jno
clc
gs
icebp
xor
gs
orb
push
push
pop
inc
or
xchg
sbb
add
lock
sti
mov
jo
xchg
jmp
pop
repz
adc
or
sbb
adc
xor
mov
inc
mov
mov
jb
ss
sbb
hlt
sub
cmp
lret
jbe
hlt
xor
sub
add
mov
push
lcall
push
sub
mov
push
call
mov
dec
pop
jp
cmpsb
jb
sub
adc
stos
push
push
pop
or
lods
pop
cli
mov
mov
out
inc
push
mov
ret
cmp
inc
jno
xlat
xchg
dec
add
cmp
push
scas
xchg
test
lahf
jmp
pushl
push
rolb
mov
xor
lret
xor
sub
adc
movsl
sub
pop
lock
hlt
sub
clc
push
xor
and
lea
test
fwait
lcall
mov
or
pop
cli
mov
push
inc
inc
jbe
and
cmp
inc
add
xchg
xor
das
mov
push
enter
jbe
dec
xor
dec
pop
cmp
shrb
addl
jno
sti
mov
ret
insl
sub
and
inc
cld
loop
push
mov
push
dec
repnz
sbb
dec
jp
add
pop
scas
bound
dec
mov
dec
inc
adc
and
jecxz
inc
aaa
inc
test
xorb
lahf
bound
stc
ja
ja
roll
iret
jb
mov
push
mov
inc
addb
mov
subb
pop
inc
fcoml
inc
sahf
in
adc
in
lods
out
scas
in
pop
push
jmp
aam
les
sahf
add
aad
dec
push
sahf
loope
das
or
xchg
xor
cmp
add
lods
sub
ret
dec
movsl
mov
in
lahf
mov
or
inc
sub
pop
ret
ret
mov
pop
cs
dec
xor
das
xchg
ss
pop
ret
jmp
lods
mov
sub
mov
or
add
in
inc
add
xchg
inc
xor
xchg
cld
mov
pop
mov
mov
inc
cmp
push
pop
aam
cmp
mov
movb
out
lock
mov
push
pusha
nop
sub
mov
mov
adc
mov
pop
cwtl
xor
mov
jne
and
xchg
or
in
add
add
jg
cmpsl
jnp
or
rorl
out
frstor
and
pop
xor
cwtl
dec
repnz
push
dec
add
fsubrl
shrb
add
das
sub
fnstcw
jge
je
and
pop
jl
dec
icebp
push
or
pop
push
insb
fldl
inc
lea
and
mov
sub
xchg
mov
cmp
and
je
or
aam
adc
aaa
ret
push
xor
and
jns
fadds
and
adc
sbb
adc
mov
sbb
jle
aam
ds
or
shlb
cmc
xor
pop
ret
push
das
sub
or
adc
mov
push
jl
popa
sbb
out
ret
and
dec
mov
cmp
aaa
cs
daa
fdivl
lea
sbb
and
dec
adc
and
cmp
fsubs
push
inc
test
push
mov
push
lea
stos
jmp
les
in
sub
sysret
xor
mov
mov
dec
lods
sub
in
inc
cli
in
jbe
ds
in
pop
or
leavew
hlt
push
add
or
stos
mov
std
adc
and
add
mov
enter
shl
ljmp
loope
shl
xor
mov
mov
mov
fisubl
movsb
mov
inc
lock
add
jne
inc
mov
jge
lcall
push
fidivrs
roll
ja
add
shrl
and
and
and
pop
add
sub
mov
inc
jo
adc
or
and
rorb
push
test
jge
inc
jge
leave
orb
or
lock
jp
inc
mov
add
lods
lret
xchg
sahf
sub
mulb
add
nop
jo
pop
mov
push
mov
push
mov
std
and
jl
cmp
rcrl
pop
int
mov
sarb
icebp
or
adc
and
ret
jle
push
mov
ret
shrl
inc
adc
mov
and
movb
icebp
cmp
inc
rcll
aam
sbb
sub
sbb
adc
dec
mov
movsb
jge
jg
lods
or
add
or
rclb
push
xor
out
fistpl
add
xchg
mov
and
add
es
xchg
dec
cs
or
jge
mov
ficoms
shll
xor
xchg
jo
pop
adc
and
mov
dec
mov
xorb
das
xchg
rclb
pop
dec
inc
or
xor
or
sbb
sbb
xchg
das
shlb
xor
int
sti
mov
pop
popf
dec
sub
cltd
lock
mov
ss
lock
in
bound
enter
insl
lods
jl
push
fisubrs
or
jmp
push
js
sbb
insl
pushl
mov
jmp
das
in
shr
sbb
int
jbe
ss
loopne
leave
cmp
mov
cmp
std
add
add
adc
out
push
xchg
mov
add
cmp
aam
mov
mov
push
dec
lock
push
ret
adc
call
add
cmp
lcall
mov
and
jne
push
or
sbb
sarb
loope
repnz
fsubs
daa
lds
cmp
inc
jns
adc
cs
lret
movb
leave
pushf
testb
pushw
jno
ficompl
or
mull
ror
and
pop
pop
ret
or
push
fidivl
or
clc
orb
pop
jmp
rorb
add
jo
imul
inc
sbb
add
add
loopne
mov
dec
pop
jo
mov
movsb
test
jmp
inc
jne
in
push
data16
and
adc
or
mov
mov
jge
enter
dec
pop
or
or
pop
sub
sub
sbb
int
mov
gs
dec
mov
stos
movsb
je
inc
or
cs
mov
inc
mov
int
jmp
sub
inc
mov
aam
loopne
push
push
gs
adc
cmp
mov
out
aam
add
cmp
push
push
pop
mov
sti
sub
push
cmp
sbb
testl
push
mov
mov
cmp
inc
xor
push
inc
insb
shrb
cli
sbb
cmp
int3
clc
je
adc
shlb
fwait
sub
cltd
xor
dec
in
push
jp
xchg
je
adc
inc
loopne
xchg
pop
icebp
cmpl
or
ret
sbbb
add
pop
push
out
cmp
pop
mov
mov
ds
push
cltd
push
push
push
adc
add
into
pop
xor
cmc
cwtl
push
inc
xchg
pop
xor
pusha
jmp
sti
xor
pop
adc
xor
pop
sbb
add
testl
js
add
push
or
sub
adc
pop
mov
sbb
cmpsl
dec
scas
push
sbb
pop
inc
inc
roll
sbb
add
sub
pop
xchg
mov
sbb
mul
aaa
inc
packsswb
aas
xor
out
cmp
cmp
jecxz
jle
mov
into
jns
or
mov
inc
in
pop
fldl
cmp
in
mov
jo
push
sbb
cmpsl
sbb
int3
mov
push
add
pop
cs
add
cmp
or
jo
sti
movsb
rcrl
inc
sahf
stos
or
jo
xor
and
or
xchg
jne
repz
imul
dec
loopne
and
push
arpl
lods
dec
fldt
push
or
repnz
insb
inc
or
aam
inc
mov
jo
add
adc
dec
push
inc
out
add
or
or
call
outsb
movsb
push
sub
inc
jo
jne
addl
xor
je
nop
or
inc
add
pusha
lods
jmp
test
test
adc
pop
insl
lret
stos
mov
pop
adc
mov
jge
add
stos
lret
jne
and
add
or
ss
jge
inc
or
rorb
sub
inc
pop
incl
sbb
cmp
je
push
scas
mov
mov
cli
testb
je
cmp
mov
push
add
push
add
insl
data16
push
cmp
xchg
movsb
in
ret
sub
cmp
jne
push
adc
out
out
ds
add
add
mov
sub
in
sbb
pop
rol
inc
xor
cltd
lret
sbb
imul
js
aad
push
xor
loopne
rolb
subl
test
mov
sub
insb
pop
push
loop
shlb
and
addr16
pusha
xchg
int3
jmp
out
jge
or
cld
cmp
adcl
in
push
and
jne
jg
dec
or
push
add
dec
xchg
rcl
hlt
addb
sbb
sub
push
cmp
insl
dec
mov
push
jo
jo
and
push
add
repz
test
test
dec
imul
push
mov
sub
or
leave
or
add
lcall
mov
cmpb
loopne
or
cld
push
push
add
push
push
xor
push
mov
and
sub
jp
pop
orb
iret
push
push
inc
xlat
pop
mov
jbe
scas
rcrl
std
add
mov
int
mov
rorl
sbb
pusha
idivl
sbb
or
sbb
lahf
mov
add
cmp
mov
pop
jb
jmp
lea
push
sbb
insl
ljmp
cmpsl
and
inc
sqrtps
cld
xchg
leave
lret
into
jne
data16
jno
popa
sbbb
or
and
stc
jmp
mov
mov
jmp
push
dec
jb
cli
dec
pop
pop
xor
mov
mov
lds
jp
daa
xchg
loopne
rorl
cwtl
nop
inc
inc
mov
or
imul
fisubrs
fstpt
push
packsswb
pop
mov
jne
test
jmp
and
je
jne
push
xchg
rcrl
cltd
call
add
subb
push
insl
xchg
xor
adc
push
shl
adc
jae
pop
fwait
aaa
les
loopne
xchg
pop
xor
es
or
push
test
icebp
movsl
negl
xor
rolb
push
or
cs
js
in
adc
push
add
sbb
pop
stos
dec
aas
sbb
sub
cmp
inc
jge
push
mov
notl
and
sub
mov
push
sbb
ret
add
hlt
jo
mov
rcll
or
loope
jo
or
pop
push
or
adc
or
inc
mov
or
test
cs
adc
cmp
int
cld
lcall
xlat
adcl
cmp
mov
ret
int3
add
cmp
sub
add
shll
and
add
mov
mov
mov
add
sub
ret
insb
ficompl
test
inc
cld
scas
or
jle
xor
adc
mov
fimuls
je
jmp
ror
lcall
ret
std
cld
mov
gs
push
pop
lret
cmp
jl
jg
lods
add
stos
adc
cmp
cmp
outsl
add
lret
imul
out
or
jo
jle
push
add
aad
mov
and
mov
mov
inc
or
push
or
mov
stos
cld
pusha
dec
adc
push
out
clc
adc
jmp
pop
mull
add
add
sbb
push
loopne
cmp
insl
loopne
ljmp
or
xor
adc
push
sbb
adc
mov
data16
adcb
data16
fcmovu
or
push
aad
or
sub
arpl
adcl
fistl
das
lock
inc
test
icebp
jecxz
scas
mov
jo
movb
pop
add
fidivl
outsl
insl
mov
jbe
lods
jmp
jb
sub
pop
fcompl
push
mov
adc
subb
dec
push
dec
inc
enter
push
fsubrs
cmp
jmp
push
popa
jns,pt
xchg
xchg
cmpsb
mov
mov
add
push
mov
mov
inc
jle
or
pop
xchg
push
or
jne
push
pop
ficoml
xchg
or
jne
insb
ja
in
jmp
jecxz
cld
lcall
adc
je
sub
add
and
incb
push
ja
mov
ljmp
cmp
sbb
xor
xor
call
adc
push
test
xor
lret
sarb
fisubrs
fistps
out
add
ja
adc
dec
push
cmp
cmpl
or
cs
hlt
maxps
adc
scas
push
pop
loope
dec
popa
adc
inc
mov
sar
xor
hlt
sbb
pop
mov
push
pop
out
mov
xor
or
or
and
and
and
adc
pop
push
cltd
xor
jecxz
pop
pop
ret
fiaddl
jae
mov
vunpckhps
cs
push
cmp
xor
push
push
test
popf
icebp
xor
sub
mov
gs
sahf
mov
inc
push
out
jb
cmpsl
inc
rclb
sbb
rcll
push
push
xchg
lods
scas
pop
sbb
xchg
jne
and
pop
inc
pcmpeqb
mov
pop
add
jle
pop
shlb
and
mov
push
cmp
mov
jl
movsb
jbe
add
xor
jne
in
pop
dec
pop
nop
inc
pop
inc
inc
inc
jo
mov
jb
cmp
arpl
cmp
shll
lock
cmpsl
popa
fisttps
or
in
js
mov
pop
sbb
mov
bound
cmp
pop
and
push
sbb
pop
dec
daa
pop
xor
cmp
cmp
push
sarb
mov
push
push
mov
add
and
inc
mov
fisubrs
lret
ja
add
jne
sbb
jmp
push
dec
dec
adc
jo
push
dec
adc
sub
lods
xor
and
sbb
in
jne
je
jmp
or
push
jmp
sub
or
sbb
push
xor
mov
inc
sbb
out
nop
add
cmp
and
jmp
fs
rolb
mov
xor
icebp
fisubrs
icebp
and
in
inc
cmp
mov
loope
adc
insb
inc
mov
or
pushf
es
outsb
cmp
push
mov
dec
inc
pop
pop
push
add
and
adcb
sbb
and
lock
add
push
inc
mov
sbb
cmp
sub
pop
lods
sbb
in
or
ja
dec
push
loop
inc
in
dec
dec
push
cmpsl
sbb
add
jnp
and
xor
push
stos
sub
push
lahf
es
jb
push
pop
in
mov
mov
mov
bound
push
push
testl
pop
test
mov
xor
jle
adc
add
adc
xor
push
es
pusha
pushf
cmp
push
sbbb
test
cmp
and
scas
sub
mov
fcmovnbe
and
adc
push
pop
sub
adc
pusha
jne
js
sbb
sbb
mov
shll
pusha
mov
sub
jmp
int
test
je
movl
adc
push
bound
or
mov
cmpl
xchg
jle
rcrb
js
sbb
cmp
repz
add
shrb
popl
dec
cmp
js
mov
jmp
add
rolb
loope
mov
ja
outsl
dec
and
jne
fnstenv
and
mov
and
clc
jg
fs
test
sti
jmp
movq
movaps
push
clc
repz
outsb
jae
xor
jle
xor
cli
rolb
lret
je
mov
fnstcw
and
lret
or
jg
cld
in
lea
xchg
ret
adc
jnp
mov
push
sbb
adc
ret
cmp
ss
add
outsb
roll
repnz
roll
cmpsl
rcl
add
pusha
fsubrp
mov
enter
mov
adcb
dec
dec
sahf
repnz
sbb
dec
repnz
xor
sbb
jmp
push
imul
bound
dec
mov
int3
push
bound
lds
lret
test
mov
sub
sub
ret
pop
call
jle
test
push
push
mov
jge
mov
jge
jns
pushf
dec
jge
pop
push
xor
sahf
fldl
xor
push
push
ret
jbe
pop
add
shll
pop
add
fmul
icebp
xchg
pop
or
xor
fnstcw
lock
jg
or
rorl
jmp
cld
je
push
loopne
add
or
cmp
idiv
push
je
rep
mov
dec
ljmp
dec
aaa
jmp
push
ficoms
out
aaa
mov
add
adc
jb
movsb
inc
cmp
popa
mov
pusha
and
cmovs
scas
push
sbb
rcrb
mov
inc
adc
aas
xor
stc
or
rep
jmp
sub
cmp
jb
sbb
popf
insl
add
xor
xor
mov
fsubrp
dec
sbb
inc
push
push
cmpsb
push
pop
pop
inc
mov
or
scas
psubw
mov
sarb
add
movl
cmpsb
inc
add
add
fiadds
fadds
rorb
lahf
out
sahf
enter
test
inc
cmp
repz
mov
mov
call
cmp
repz
hlt
clc
inc
xchg
cmp
clc
cld
adc
lret
add
fldcw
jmp
jne
sbb
rcrl
pop
sti
sbb
insl
and
push
fcompl
jbe
push
lea
jl
cld
or
scas
loopne
or
nop
xor
adc
inc
xchg
daa
in
xchg
xchg
xchg
stc
sub
inc
cmp
push
enter
add
fstl
mov
add
test
out
push
add
nop
dec
dec
addr16
add
ljmp
mov
or
push
push
pop
fs
out
insb
je
xor
sbb
out
sahf
sbb
sbb
adc
out
adc
or
int
nop
out
add
mov
or
aaa
push
push
mov
pop
movlps
jp
dec
lods
mov
psubsw
sbb
les
pushf
or
cmp
mov
in
or
fucomip
add
and
negl
push
repnz
adc
mov
test
je
add
ret
push
and
pushf
or
mov
mov
inc
inc
add
in
pop
xor
mov
jmp
jp
je
mov
shr
rorl
sahf
mov
pop
movsb
sbb
mov
fstps
sbb
xor
and
arpl
orb
cmp
iret
ljmp
mov
adc
add
mov
pop
push
sbb
call
adcl
or
or
sub
hlt
sub
lock
pop
rcrb
int
fcomi
add
lock
rcrb
in
iret
jne
push
inc
dec
rclb
push
push
test
push
divb
push
pop
add
push
xchg
inc
sub
xchg
aas
mov
out
or
sub
mov
mov
or
or
cmp
jne
inc
cmp
push
xor
xchg
push
pop
in
jp
dec
adc
mov
inc
fadds
push
adc
dec
add
xchg
pop
and
mov
das
and
inc
sbb
popf
sbb
call
inc
inc
cmp
cmp
rcrl
adc
cltd
sahf
out
add
dec
adc
iret
fwait
dec
adc
cmp
lret
adc
imul
and
mov
or
or
and
mov
cs
daa
mov
mov
imul
popf
xchg
xor
daa
test
stos
add
enter
lock
sbb
ret
lea
shl
shlb
dec
leave
sbb
or
push
mov
pop
cmp
mov
mov
push
movsb
push
rol
inc
inc
cmp
aam
lret
jne
sbb
jg
loope
shl
jmp
jnp
nop
push
imul
push
mov
or
shlb
jl
add
jmp
dec
out
loop
scas
cmp
xchg
dec
aaa
xor
add
or
add
je
add
or
or
orl
sbb
into
push
inc
loope
movb
cmp
adc
add
aad
xchg
xchg
pop
sar
sub
mov
popf
add
sbb
cmpsb
jge
cmp
fdivrs
subl
push
mov
push
sub
test
mov
js
fnstcw
dec
pop
inc
and
shlb
incb
xor
and
movb
lea
neg
mov
sti
outsl
arpl
fmuls
or
add
jmp
or
mov
inc
ds
jbe
sub
loop
sarb
cld
jb
call
sub
add
jmp
mov
dec
mov
mov
dec
dec
mov
inc
cmp
jb
icebp
outsb
loope
lret
ret
adc
out
ror
jp
jne
pop
lret
add
sub
fcomp
xchg
push
cmp
not
pop
xor
sub
mov
negb
mov
lea
sti
add
jne
jnp
imul
mov
pushl
add
cmp
jne
mov
push
cmp
int
fdivr
jne
es
jne
pushl
int
adc
or
or
ret
adc
push
dec
stc
jns
fsubrp
inc
adc
jmp
std
std
jmp
addr16
cld
cld
ret
pmaxub
adc
adc
mov
jecxz
push
jb
push
push
movb
rorl
shr
repnz
hlt
or
and
inc
jle
popf
push
clc
add
popf
ror
or
add
sbb
loop
add
add
loopne
or
push
pop
cmp
addr16
adc
out
ljmp
mov
aad
lcall
or
pop
sbb
sub
push
dec
xor
pushf
or
add
sbb
jo
and
sub
pop
or
adc
jne
mov
lea
es
stos
add
add
js
subb
into
and
jp
mov
or
jg
add
mov
mov
dec
xor
loopne
jno
or
push
push
push
popa
jb
rclb
fldt
repz
stos
xchg
jmp
push
outsl
fildll
xchg
and
inc
pop
jle
push
push
pop
inc
inc
in
div
jb
sbb
subl
test
out
xor
subl
sub
pop
adc
push
ret
arpl
mov
jo
bound
int3
push
sub
jo
add
insb
gs
xlat
adc
dec
pop
adc
push
int
or
mov
lret
lret
out
loopne
cs
outsl
adc
aam
mov
clc
or
push
loope
add
jp
add
mov
xchg
andb
mov
lods
test
push
jp
fwait
jge
xor
leave
or
lods
push
mov
adc
jle
cmpl
ficomps
lret
and
roll
xchg
das
xor
xor
test
jmp
cmp
jne
orl
jmp
adc
jne
sub
icebp
dec
inc
nop
int3
dec
jbe
add
cltd
adc
xor
repz
cmp
push
adc
dec
or
xchg
out
outsb
xor
cmp
and
outsb
mov
adc
pop
jne
dec
add
add
add
sbb
cmpsb
loopne
adc
lret
or
test
aas
xchg
lock
cs
jmp
xchg
fidivs
xor
sub
cmp
ja,pn
xor
aaa
push
jle
cmp
jae
push
movsb
inc
ret
inc
and
xor
inc
ret
dec
test
push
push
and
lods
inc
lcall
and
add
inc
cmc
mov
ljmp
add
push
sbbl
jne
test
es
mulb
mov
and
push
or
add
into
mov
mov
in
rcr
xor
orl
inc
xor
xchg
mov
sbb
loop
add
pusha
leave
push
mov
sub
sbb
sub
and
xchg
inc
pushf
inc
or
and
cmc
or
roll
stos
mov
fs
sbb
shr
rcrb
aas
push
mov
pop
sub
test
jo
or
add
loop
add
xchg
dec
scas
jp
and
or
mov
xchg
xchg
sbb
test
sbb
or
push
adc
adc
xor
mov
mov
inc
inc
data16
test
sbb
mov
clc
dec
and
ret
shll
mov
cmp
in
mov
sub
add
jle
inc
mov
stos
roll
rorb
add
xchg
shlb
sbb
sbb
dec
push
bound
xlat
call
push
jmp
xor
ljmp
in
jne
repz
pop
stos
lock
lods
js
and
movsb
ret
push
inc
lea
int3
decb
mov
adc
adc
and
pusha
inc
nop
mov
cmp
movsl
xor
add
pusha
xor
fwait
jecxz
rcll
adc
mov
push
cltd
mov
sti
dec
adc
mov
adc
fidivs
sub
push
or
push
add
push
icebp
and
incl
pop
and
int
hlt
je
inc
cmp
jb
xor
ret
dec
in
push
adc
push
dec
imul
ss
add
dec
mov
pop
lahf
mov
push
mov
dec
add
and
sbb
fwait
lock
mov
in
mov
or
and
popa
mov
out
cmp
or
mov
insb
sbb
andl
cltd
inc
mov
pop
jmp
pop
xchg
mov
ret
pop
jno
enter
xchg
push
push
sub
push
rcrb
jns
rolb
inc
jne
add
dec
dec
or
jcxz
cltd
pop
jae
and
fwait
data16
mov
push
sbb
lret
sbbl
and
icebp
add
sbb
ss
ret
fimuls
rcl
daa
divb
call
jge
or
or
loope
dec
and
sub
adc
mov
movb
adc
stos
add
leave
sub
iret
mov
inc
mov
bound
pop
cmp
fistpl
or
test
adc
or
dec
sub
sti
pop
aaa
sbb
pop
lahf
sbb
and
or
pop
rclb
sub
ss
sub
cmc
outsb
ja
ficomps
xor
jg
pop
mov
add
movsl
shrb
jne
int3
movsb
les
sbb
into
and
push
and
jl
popf
aaa
jle
decl
int3
push
roll
ds
sbb
addb
ljmp
add
dec
mov
rorl
in
xlat
dec
ret
ds
repnz
jnp
ds
fcompl
repz
add
and
or
aaa
lock
push
mov
cmp
mov
shl
cmp
xor
jge
je
adc
nop
shlb
push
dec
nop
mov
or
int
ljmp
sbb
outsb
nop
mov
dec
loopne
mov
mov
popf
push
cmpsb
pop
xor
and
mov
sub
mov
fcompl
sub
jo
les
or
jbe
stos
cmpsb
mov
push
ss
insb
insl
aad
jp
and
xlat
test
cltd
xchg
mov
cmp
je
cmp
ret
popa
js
data16
push
pop
inc
ret
pop
push
js
mov
sub
scas
or
test
sbb
xlat
aas
shlb
push
sub
cltd
mov
sub
sbb
pop
add
sbb
mov
lods
or
sbb
fstps
and
stc
add
std
jle
pop
pop
mov
out
and
xor
fistpl
push
mov
pop
es
test
cmp
add
add
or
mov
adc
add
adc
cmp
inc
int
jp
adc
cmp
and
mov
mov
jne
hlt
outsb
dec
mov
shrl
add
xchg
mov
sahf
xchg
js
out
push
jns
mov
mov
loope
fstpt
mov
pop
daa
xor
inc
ds
pop
push
std
cmpsl
inc
cwtl
and
push
push
js
pop
push
dec
pop
mull
sbb
cmp
mull
mov
and
mov
mov
mov
cld
mov
adc
ljmp
subl
in
push
mov
mov
sarb
hlt
ret
jp
and
imul
inc
sbb
sbb
pop
jnp
push
lahf
call
imul
and
loopne
or
or
out
adc
pop
push
inc
add
loope
flds
rorl
mov
push
shlb
adc
scas
cmp
cmp
or
inc
xor
mov
xchg
push
push
jle
cltd
jno
loop
mov
bound
push
mov
add
xchg
dec
in
adc
dec
out
jmp
cmpsb
push
pop
jno
push
and
or
jmp
div
cmp
div
in
dec
dec
or
cmpsb
and
and
pop
iret
push
push
pop
jle
jo
orb
cmp
je
movzbl
add
sub
je
push
lock
pop
sbb
adc
imul
jo
pop
add
in
jns
add
daa
ret
add
adc
cmp
ret
inc
dec
add
iret
sti
inc
cmp
je
lcall
flds
add
sahf
xchg
mov
or
sbb
push
pop
jb
cmpb
or
or
pop
enter
or
sub
cmp
or
pop
xchg
inc
enter
loop
or
enter
or
or
in
jns
add
push
nop
addr16
push
ja
jae
inc
push
push
rsqrtps
jb
fimuls
pop
adc
fwait
sub
fdivs
adc
inc
or
mov
adc
add
lcall
adc
xchg
add
pop
adc
adc
xor
mov
push
iret
enter
push
push
pop
pop
movsl
mov
sbb
cmp
sbb
cmp
pop
enter
sbb
jb
jb
sbb
sbb
dec
in
mov
jb
sbb
or
jns
stos
jge
push
nop
out
sbb
addl
push
inc
push
pop
pop
inc
cld
mov
ret
sub
cmp
jle
or
push
jp
movl
decl
hlt
and
test
imul
repz
dec
mov
cmp
je
lcall
sahf
cmpsl
jns
rol
lea
aad
cmp
add
cmp
mov
xor
add
add
mov
je
call
out
mov
dec
cwtl
jmp
addr16
ljmp
jmp
jmp
incb
sbb
cmp
in
in
inc
in
sahf
xchg
add
sbb
out
jge
mov
pop
lock
or
lock
pop
enter
pslld
cmpb
std
repz
leave
std
hlt
hlt
jb
sahf
cmp
or
fwait
mov
cmc
cmc
inc
jg
popa
in
jns
pop
negl
idivl
std
clc
clc
lea
inc
clc
cltd
adc
sahf
lret
add
inc
stc
lock
cli
cli
cmp
cmp
sti
sbb
in
repnz
outsl
xor
and
addr16
fsubrp
cwtl
ss
xor
sbb
add
adc
dec
jne
ret
sub
add
lahf
mov
mov
ljmp
das
or
push
mov
add
sti
sub
mov
pop
inc
scas
mov
inc
mov
xor
xchg
sti
out
out
cmp
out
outsb
call
add
sub
mov
pop
jmp
add
movsb
jmp
cltd
mov
adc
in
add
leave
popf
cli
sbb
nop
cmpsb
out
out
out
cltd
push
xchg
inc
pop
and
add
cli
and
sbb
jmp
cltd
add
push
xlat
xchg
mov
cs
in
pop
stc
div
divl
fwait
xor
repnz
add
stc
out
clc
test
lret
enter
sti
sti
cltd
mov
cld
inc
cld
cmpl
cli
mov
sbb
inc
cmc
push
lret
cld
adc
test
sub
mov
mul
jns
cmp
pop
shl
scas
notl
sub
mov
out
pusha
adcl
out
bound
pop
inc
testl
negl
rclb
jno
les
mov
and
and
jae
insb
out
out
adc
jb
jno
negb
leave
mov
and
add
xchg
cmpsb
jb
sbb
scas
in
pop
jno
cmc
pop
xchg
pop
leave
and
adc
pop
dec
cmc
div
jae
mov
and
pop
add
clc
clc
loopne
jns
jecxz
stc
popa
dec
push
jns
cmp
xlat
jb
or
hlt
pop
leave
mov
adc
push
hlt
andb
sbb
jmp
sar
and
hlt
idivl
loopne
fxch
jo
sti
lahf
ret
das
xchg
pop
pusha
adc
ds
cmp
loope
loope
jns
jne
repz
scas
repz
and
test
in
imul
repz
repz
push
dec
push
cmp
bnd
sbb
mov
pop
repnz
jo
dec
jae
and
jb
sbb
and
pop
repnz
loope
jmp
mov
jns
je
divb
icebp
jns
jne
jb
test
push
push
xor
loop
shl
cmc
add
cs
xchg
jecxz
fisttpll
andb
pop
lcall
pop
daa
xchg
inc
jne
push
lock
xchg
pop
xor
sbb
push
lock
test
ss
fldl
adc
testb
ret
or
and
in
jge
cmovno
push
add
inc
push
nop
add
stos
add
jp
push
jnp
or
xchg
adc
inc
pop
rorl
push
push
sti
add
dec
add
sahf
and
das
mov
dec
add
push
and
incb
ljmp
inc
add
fwait
insl
mov
push
dec
pop
imul
mov
fisubl
sbb
fnstcw
mov
pop
mov
lahf
pop
call
sub
push
out
imul
popf
pop
add
in
jns
repz
push
out
jle
enter
push
inc
or
fsubl
test
jp
gs
push
rcrb
pop
sub
repz
pop
aam
lock
aam
scas
mov
push
or
stos
orl
pop
pop
aas
imul
enter
or
adc
inc
popf
mov
or
cli
push
adc
push
fdivs
fildll
mov
js
fcomps
bound
and
add
insb
pop
push
mov
sub
dec
lret
int
xor
sahf
popa
add
sub
and
cwtl
imul
pushf
push
shlb
jl
pop
and
jge
push
sub
push
into
out
addr16
xor
rclb
in
sub
in
inc
stc
push
pusha
jmp
loopne
in
dec
movsb
inc
stc
mov
and
pop
movsb
fdivrp
add
push
test
aam
lods
insl
test
adc
cmp
jb
pop
mov
and
nop
pop
inc
inc
inc
inc
pop
pop
adc
xorl
enter
fsubr
xor
adc
imul
fidivrs
xchg
arpl
iret
js
movsl
inc
inc
cwtl
in
popa
hlt
push
push
sbb
push
cmp
repnz
or
or
je
mulb
add
mov
inc
inc
pop
cmp
enter
shlb
jmp
push
cmp
popa
xchg
fcoml
jne
movsb
roll
cli
push
cmp
pop
inc
test
insl
xor
xor
repz
jmp
rclb
rcr
mov
add
add
mov
jne
jo
sub
or
int
pop
xorl
stos
fnstenv
mov
fs
out
aad
lret
lahf
xchg
mov
shrl
mov
or
mov
push
jmp
sbb
or
dec
outsb
out
jns
mov
xchg
bound
mov
decl
push
mov
pop
pop
push
mov
inc
loope
stos
add
mov
popa
mov
clc
mov
mov
adc
ss
sbb
bound
pop
idiv
inc
sahf
xchg
lods
add
test
fwait
arpl
cld
testl
add
testb
movb
outsb
push
sahf
lret
pop
repnz
inc
call
mov
test
push
leave
adc
test
out
dec
hlt
pop
jo
sub
or
aam
repnz
das
push
test
aam
repnz
mov
push
mov
mov
incl
inc
decl
jne,pn
loop
repnz
push
addl
ret
clc
incl
jbe
push
cltd
pop
idiv
rclb
pusha
or
rol
mov
pusha
add
push
ja
cs
dec
mov
mov
xor
jo
jmp
cmp
jae
xor
les
dec
or
pop
js
jno
jae
pop
jbe
mov
dec
pop
inc
jl
shr
add
sub
push
and
adc
cmc
sbb
xchg
shrb
fnstcw
jg
pop
pop
test
sbb
add
andb
std
mulb
je
or
dec
dec
je
ret
mov
lcall
scas
movb
insb
adc
xor
cltd
cmp
dec
pop
decb
push
xchg
xchg
out
test
mov
inc
pop
jmp
and
or
mov
into
xchg
icebp
filds
fs
push
idiv
mov
push
jo
jge
test
push
pop
add
pop
int3
orb
mov
test
sbb
sub
mov
add
mov
mov
dec
mov
inc
bnd
cmp
inc
enter
ja
insl
or
jl
aas
jge
lods
add
cltd
pop
idiv
loopne
ret
int
inc
xor
xchg
inc
out
cmp
insl
xchg
cmc
es
ja
jmp
or
mov
add
xor
fs
sbb
sub
insl
mov
fs
jbe
insl
movsl
lods
pop
sub
adc
imul
mov
pop
and
jecxz
repnz
sbb
adc
jae
mov
call
inc
mov
or
add
popa
out
outsl
adc
jg
pop
pop
das
mov
push
sti
sub
pop
adc
cmp
scas
adc
mov
inc
xor
adc
mov
movsb
loop
aas
add
je
pushf
push
mov
in
push
pop
xchg
push
cmp
loope
push
jmp
jge
pop
je
sbb
jno
out
cmp
jle
test
pop
hlt
jno
sub
mov
das
inc
ja
jo
mov
je
dec
inc
out
movsl
lods
inc
sahf
jne
mov
or
lods
mov
bound
lret
or
popa
test
adc
cmp
sub
insb
lahf
pop
popl
outsb
sub
or
and
icebp
jle
pop
push
test
xchg
sbb
aaa
add
inc
xlat
sub
pop
cmp
pop
stc
aad
mov
or
inc
lds
push
pushf
dec
adc
jp
and
mov
es
push
xchg
sub
push
je
mov
and
mov
push
movsb
xchg
fldl
ss
cli
sub
sub
add
push
jle
jecxz
push
hlt
mov
adc
mov
adc
loopne
adc
sahf
idivl
out
call
add
mov
scas
jae
pop
pushl
jbe
dec
ljmp
add
xchg
rorb
inc
cmp
lahf
jg
sarl
fadds
sbb
rolb
sbb
inc
push
js
ds
mov
aam
add
mov
push
inc
jg
mov
inc
gs
icebp
xor
push
xchg
or
fisubl
mov
inc
inc
cmp
je
xor
cmp
movsbl
cmp
cli
orb
sbb
adc
add
xchg
push
or
dec
popa
movl
dec
sbb
mov
pushf
xchg
test
xor
lds
incl
fdivr
hlt
push
adc
rcr
or
inc
sbb
icebp
or
pop
sub
mov
pop
fidivrs
lcall
xor
lret
mov
sbb
lret
mov
add
dec
push
push
dec
adc
and
add
sub
cld
mov
mov
addr16
test
ror
lret
test
incb
jg
sarl
pop
cmp
je
mov
lods
shll
and
mov
outsl
adcl
mov
rolb
jno
sub
mov
add
push
pop
inc
pusha
in
es
shll
pop
add
or
cli
frstor
fistpl
dec
movsb
jb
add
in
fldenv
inc
sbb
mov
adc
adc
xchg
ror
adc
and
add
shll
jo
dec
lea
bound
jne
jmp
dec
or
sub
push
jmp
das
cmp
push
dec
sbb
lods
into
xchg
cmpsl
test
or
fiaddl
pop
mov
and
dec
loope
cmpsb
push
stos
mov
lret
inc
clc
ret
dec
mov
repnz
adc
inc
gs
mov
xor
dec
adc
inc
xor
lock
aam
hlt
sbb
ret
push
xchg
cmp
push
jns
and
push
adc
mov
call
inc
sbb
mov
mov
mov
or
scas
add
gs
imul
cmp
mov
inc
or
inc
inc
pop
das
jecxz
sar
mov
outsl
inc
or
orl
jbe
subl
movsb
cltd
jne
or
pop
add
push
imull
mov
xor
clc
and
idivl
ja
inc
sbb
pusha
js
aas
pop
pop
ficoms
mov
inc
push
test
aas
mov
inc
mov
mov
jmp
cmp
push
add
cmp
push
dec
jne
push
jmp
xchg
fldz
mov
add
cmpb
push
jo
and
or
ret
mov
mov
or
pop
add
pop
adc
divb
or
add
mov
clc
add
and
imul
aaa
punpckhdq
outsb
mov
push
adc
out
cmp
insl
push
arpl
jmp
pop
arpl
xchg
jno
fs
outsb
aaa
jne
mov
or
add
mov
inc
lds
les
cmp
mov
jecxz
stos
or
adc
shrb
cli
and
jno
ret
xlat
loope
xor
insl
or
into
aad
add
popa
in
outsb
jbe
dec
mov
adc
and
adc
push
insb
and
xor
clc
adc
jbe,pt
mov
mov
shrb
les
push
insb
std
and
js
xor
shll
or
call
dec
in
and
pop
lods
xorl
clc
fisubs
fs
enter
dec
jnp
int3
or
rclb
push
push
aam
nop
imul
or
sub
or
mov
jmp
mov
test
adc
dec
lcall
std
data16
mov
lahf
add
sub
cmp
test
pop
sbb
adc
adc
add
js
add
xchg
rclb
mov
jae
jmp
xchg
pop
gs
sbb
sub
repz
cld
arpl
imul
cmp
mov
ja
lcall
icebp
fwait
js
inc
mov
sub
imul
leave
and
ret
andb
xchg
fwait
adc
cmp
inc
or
call
sbb
jge
add
loop
fiaddl
xor
ja
sub
loope
push
stos
iret
js
mov
test
xchg
outsb
pop
cmp
mov
lock
cmp
jbe
loopne
jle
repnz
inc
popf
movsl
aaa
dec
mov
sar
jne
pop
adc
jbe
xchg
push
xchg
cmp
jp
inc
movsl
test
add
inc
insl
ja
cmp
push
pop
xor
ror
jle
ret
cmp
cs
shl
hlt
fdivrs
fwait
push
fadds
in
pusha
xchg
sbb
enter
loope
jbe
push
inc
sti
or
cs
adc
fsub
and
fisttpll
push
incl
movsl
das
in
sub
mov
mov
sub
cmp
test
adc
gs
and
mov
pop
mov
add
sbb
ret
lds
hlt
xor
imul
adc
jecxz
imul
sbb
cmpl
or
rcrb
add
call
xchg
sbb
jg
or
cltd
aas
jae
inc
subl
rolb
fsubrl
je
add
iret
xor
push
stos
pop
cmp
mov
outsl
add
stos
sbb
stos
sub
push
mov
imul
sti
sbbb
int
mov
cld
dec
xchg
add
es
xchg
cld
dec
cmpsl
jl
jg
xor
fcomp
into
addb
pop
and
add
push
cmp
and
imul
stos
lock
cmp
push
enter
and
pusha
or
cwtl
fidivrl
movd
call
jecxz
sbb
jp
pop
or
inc
xor
int3
and
dec
sub
push
pop
test
or
push
daa
sbb
mov
fistl
les
push
sbb
adc
lret
test
sub
outsb
mov
or
xor
and
repnz
data16
sbb
stc
repz
popl
cld
xor
mov
mov
test
push
movl
cmp
xor
xchg
push
imul
or
and
inc
fbld
adc
cmpb
stos
pop
jo
sub
dec
push
loope
shl
call
rolb
push
or
lods
cld
sub
aas
and
in
mov
or
add
repnz
xor
adc
or
sbb
push
push
imul
adc
mov
push
lock
add
shl
push
inc
loopne
or
push
stos
add
mov
mov
push
add
testl
sahf
or
insl
rclb
jb
call
jbe
mov
mov
ret
mov
pusha
je
aas
or
mov
and
xchg
pop
icebp
mov
or
ja
sub
inc
ja
and
xchg
or
test
xor
popf
pop
inc
pop
xor
sbb
mov
push
repnz
push
sti
xor
sub
mov
cmp
add
cld
inc
xchg
das
imul
push
push
orb
mov
lods
jmp
and
je
and
ds
mov
adc
xchg
mov
jmp
mov
jnp
mov
sub
mov
ja
test
cmp
and
sbb
lret
push
roll
cmp
push
and
and
jmp
pop
inc
xchg
nop
pusha
inc
ret
popa
jb
pusha
cmp
push
clc
mov
jno
jbe
jg
or
ja
jo
sbb
adc
mov
out
push
imul
mov
or
aas
adc
or
lock
cmp
push
mov
cmp
mov
pop
xor
insb
push
hlt
ret
outsl
aas
jmp
rolb
jmp
sahf
cmp
ds
insl
lods
mov
mov
cmpsl
gs
push
cmpsb
push
sub
aam
jbe
or
std
jne
pop
cmpsb
jge
fsubr
fldt
stos
outsb
call
jmp
iret
or
dec
mov
xchg
push
push
dec
call
mov
inc
jnp
lods
cmp
stos
xor
nop
xchg
jle
es
shlb
lock
out
movsl
fldl
jo
push
jmp
fs
dec
mov
loope
add
fadd
add
and
inc
int3
jnp
dec
std
stos
inc
jae
cmp
jbe
decl
lea
mov
test
push
loopne
xchg
cmp
leave
inc
inc
rorb
leave
xor
cmp
push
push
mov
aaa
jmp
push
into
sub
cld
jmp
jl
jg
loopne
andb
cmp
pusha
and
inc
inc
and
pop
sub
jne
outsb
incl
lock
add
jb
mov
xor
inc
test
cmovno
push
sti
mov
lea
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
dec
pop
hlt
loopne
adc
outsl
idivb
add
sbb
stos
divb
ret
ss
jo
mov
adc
jne
js
cwtl
mov
push
or
hlt
push
es
add
jnp
test
mov
or
xor
es
pop
cmpsb
dec
push
or
sbb
call
addl
pop
fcoml
mov
mov
loop
push
and
mov
negl
xor
inc
sub
pop
sbb
popf
push
or
outsl
sti
add
cld
aas
mov
xchg
jbe
inc
cmpsb
popf
adc
push
adc
inc
add
cmp
sub
xlat
cli
jo
insb
ljmp
xor
das
mov
andb
mov
or
pusha
loop
pushf
insb
ret
or
dec
loopne
or
jnp
mov
call
or
mov
mov
add
mov
ss
push
out
arpl
subb
sbb
es
dec
or
sub
and
mov
mov
push
outsl
sub
leave
cmpl
push
and
pop
movl
and
leave
xor
out
mov
or
outsl
cmp
es
pop
mov
mov
lock
adc
decb
into
int3
dec
sbb
mov
movsb
rolb
sub
inc
xchg
int3
mov
fidivl
cwtl
sarb
aam
pop
cmp
adc
push
cwtl
mov
jne
cld
in
mov
aaa
out
jle
or
push
cmp
idiv
cmpl
add
fsubrs
mov
rolb
sub
lock
jne
popl
xor
and
dec
xchg
sub
mov
and
lea
inc
jp
in
or
cmpsb
or
ret
inc
push
pop
ret
jo
out
add
push
out
adc
xor
lock
sbb
clc
pop
push
xor
dec
xor
je
push
sbb
js
mov
stos
test
and
lahf
jne
pop
in
adc
leave
push
jbe
inc
loope,pt
cmp
mov
jle
sbb
add
pushf
sub
loopne
push
les
inc
aaa
es
jmp
orl
and
push
pop
mov
sbb
int3
inc
xchg
mov
jne
sbb
push
cmp
shl
xlat
ljmp
mov
add
jns,pn
hlt
aaa
and
dec
ljmp
fisubl
cmc
dec
mov
leave
mov
xchg
fisttpl
add
call
sub
mov
dec
inc
inc
mov
movsb
cmp
push
push
push
mov
or
aas
icebp
lock
cs
or
pop
jge
das
adc
aam
add
pop
cmp
xchg
xor
inc
add
inc
push
sbb
cwtl
and
sbb
sbb
jns
insb
push
cld
push
jo
mov
inc
or
inc
mov
sbb
mov
or
inc
cmp
xchg
js
imul
cmpsb
insb
in
cmp
and
mov
and
mov
jg
lret
fnstcw
inc
add
cmp
lock
dec
cmp
je
push
lods
push
clc
dec
jl
adcl
dec
add
scas
add
xchg
lds
mov
sbb
add
pop
orb
repnz
xor
mov
insl
sub
js
iret
adc
sbb
xchg
xchg
and
sahf
clc
jb
sub
xor
jb
pop
cmp
inc
mov
jb
dec
pop
cmp
xor
daa
jle
push
popa
lcall
jmp
pop
dec
jp
cli
mov
and
pop
cmp
cld
mov
shll
test
mov
mov
lea
jg
jge
mov
inc
inc
dec
daa
add
sbbl
mov
cwtl
test
popf
jnp
pushf
cmpl
pushf
cltd
pushf
adcl
pushf
cmpsb
and
daa
test
into
movsb
shll
xchg
mull
int3
dec
ja
mov
out
cmpl
mov
mov
sub
inc
mov
xchg
pushf
cwtl
mov
inc
loopne
aaa
push
mov
xchg
sbb
gs
xchg
mov
xor
mov
dec
and
das
ret
inc
sbb
mov
movsb
jp
inc
sub
andl
mov
lea
and
rcrl
das
fs
jno
test
outsl
xor
sub
loopne
fsubrl
popf
aam
sarb
data16
popf
enter
mov
mov
cmc
ss
jmp
mov
movsl
or
aaa
dec
cld
adc
push
xchg
sub
aam
push
nop
inc
cmp
push
stos
add
lea
jp
loope
mov
and
test
push
daa
das
pop
jno
scas
xor
loopne
jne
pop
adc
xor
adc
inc
mov
add
lds
jle
bts
jmp
cld
xchg
xor
add
or
mov
adc
js
lahf
xchg
adc
mov
mov
out
aas
push
fmuls
mov
adc
inc
pop
inc
popl
sahf
out
push
and
adc
add
adc
clc
mov
fsts
jmp
sbb
jl,pt
lahf
push
and
jns
nop
nop
nop
in
shl
push
pop
nop
hlt
movups
add
inc
lahf
loopne
out
mov
jns
nop
mov
or
jns
out
push
movsb
lods
mov
les
loopne
lock
nop
lahf
mov
fimuls
lock
push
or
loopne
lahf
add
jne
cmpsb
xchg
xlat
les
push
cs
push
pop
call
leave
xchg
cmp
mov
adc
push
dec
inc
mov
add
and
and
lcall
xorb
imul
scas
jns
push
rorl
jge
inc
mov
add
test
movsb
stos
test
mov
and
add
scas
adc
mov
xlat
xchg
adc
cld
pusha
sub
loopne
lds
inc
test
jnp
or
pop
xlat
fisttpl
idivl
dec
push
aas
dec
outsl
lret
or
inc
xor
fdiv
mov
cwtl
sbb
call
sbb
adc
addl
out
lahf
mov
testl
ret
insl
dec
dec
pop
fadd
fsts
cmpsl
push
leave
add
xorl
out
jl
or
push
push
pop
and
jge
sub
imul
sbb
xchg
je
mov
cmp
or
xchg
data16
dec
mov
mov
mov
pop
rol
and
add
pop
out
push
or
adc
js
les
cmp
adc
mov
adc
push
cmpsl
test
mov
sub
cmp
add
sbb
cwtl
outsl
push
loope
xchg
xchg
cmpsl
mov
outsb
push
sahf
add
jle
test
ja
dec
popa
xor
sub
popa
or
lock
movl
push
outsl
popa
lods
push
mov
mov
outsl
test
sbb
hlt
jecxz
and
mov
movsb
xor
andb
in
es
xor
push
and
add
push
ljmp
daa
ret
lock
adc
jno
pop
or
cmp
mov
imul
fwait
adc
xchg
pop
andb
push
pop
add
leave
jb
mov
in
daa
jecxz
nop
sbb
lea
inc
cmp
xor
push
rorl
push
cmc
int3
ficompl
pop
xchg
ret
es
shl
imul
inc
mov
fs
or
lock
xor
test
cli
or
incl
and
push
in
add
or
sub
dec
pop
push
mov
push
pusha
lar
or
test
adc
orl
movsb
lock
stos
dec
jecxz
mov
inc
pop
jp
push
test
adcb
sti
cs
jae
rolb
adc
jbe
xchg
sub
test
popa
sub
or
or
inc
cmp
mov
jmp
pop
divl
test
lock
mov
pusha
ds
mov
push
clc
dec
xchg
fcomps
popf
mov
push
jne
les
hlt
dec
ljmp
or
mov
push
sub
pop
pop
cmp
shl
add
mov
add
or
and
dec
xchg
xchg
xchg
add
ret
inc
mov
mov
cwtl
sbb
xchg
push
push
lock
push
mov
mov
dec
jmp
and
cmpl
mov
sti
lret
gs
or
mov
hlt
fadd
fsub
not
pop
cmp
xchg
cmp
push
pop
mov
jne
loop
mov
mov
cmpsl
xchg
repz
leave
test
lods
jl
loopne
or
movl
inc
adc
dec
cld
jle
inc
inc
mov
lea
or
ja
mov
movsbl
xchg
mov
loopne
mov
test
pop
sbb
pop
sar
xor
add
mov
cwtl
ret
mov
or
loopne
lea
loopne
cs
aam
clc
fcomps
pushf
lret
push
dec
or
je
or
add
je
sbb
cs
mov
push
pop
add
ret
out
pop
andl
nop
cli
sub
in
sub
or
aam
mov
or
mov
or
jl
mov
shlb
cwtl
and
or
ja
movsl
mov
repnz
cmpsb
mov
hlt
out
loopne
mov
aaa
mov
cmp
push
sbb
into
pusha
xor
mov
test
ret
insb
nop
xlat
mov
dec
pusha
sub
adc
pop
mov
pop
and
pop
or
fiadds
orb
jo
inc
xor
cwtl
add
fs
or
imul
pop
outsl
cmc
jne
and
dec
jmp
loope
xlat
jmp
movsb
mov
insl
js
mov
mov
xlat
mov
jge
rorb
push
sbb
fidivs
je
cmp
adc
or
pop
mov
add
mov
ret
add
hlt
fadd
dec
adc
cld
mov
and
je
repnz
inc
push
jae
pop
testl
mov
add
cwtl
das
mov
cmpl
push
add
dec
and
jne
in
or
xor
mov
pushf
in
rcl
in
sub
mov
or
ss
mov
ret
subl
shlb
push
xor
push
addl
negl
cmp
loopne
aad
movsb
dec
lret
add
adc
mov
sarb
add
mov
outsl
testl
test
inc
pushl
ja
push
insl
dec
loop
das
add
sarl
sub
cmp
mov
inc
xorl
pop
cmpsl
pusha
sbb
jmp
xor
jecxz
mov
dec
popa
je
xchg
xor
push
push
sbb
das
andl
cli
add
add
rcll
add
addr16
scas
push
je
cmp
je
test
mov
enter
mov
xor
cmp
sbb
mov
je
pop
pop
sub
sub
adc
xchg
subb
mov
sbb
or
adcb
jg
add
into
ret
aam
adc
std
imul
add
xor
pop
loopne
aaa
jo
xchg
push
xor
int
or
sbb
jl
call
pop
xchg
xor
adc
xor
cmc
mov
inc
rcl
sub
mov
mov
ljmp
stc
lcall
pop
xchg
cwtl
inc
call
sbb
dec
nop
aad
icebp
pop
cmpb
jne
and
ds
adcl
sbb
sbb
mov
cmpsl
dec
pop
out
addr16
decb
mov
std
inc
daa
add
pop
es
adc
dec
lahf
shl
push
pop
data16
push
sub
pop
test
push
lret
shlb
test
test
je
adc
push
ss
outsb
cmpsb
add
or
je
cltd
outsl
fsts
xor
dec
sub
or
sbb
jae
adc
lds
pop
fimull
xor
inc
mov
je
sbb
dec
test
daa
mov
or
jne
and
lea
cmp
das
sbb
jp
mov
mov
or
dec
ljmp
lock
xor
xchg
clc
out
adc
mov
push
dec
jmp
pop
xchg
sub
inc
sub
jo
cmp
mov
cmp
lods
pop
jl
shlb
xor
ss
or
mov
fdivr
ss
fadds
sub
mov
test
xor
icebp
sti
mov
loop
sbb
addl
jmp
orb
jmp
test
push
and
inc
scas
push
aam
cltd
sub
sub
movsl
call
shl
push
jp
leave
cmp
mov
fdivrl
add
cmp
lea
pop
stos
lcall
jbe
dec
push
cs
popa
sbbl
jne
push
pusha
dec
sub
aaa
cmp
add
add
fistps
rcll
xchg
add
lret
js
sub
xor
pop
jg
or
sbb
push
cmp
into
pop
icebp
jl
inc
or
daa
testl
pushf
cmc
xlat
adc
adc
movsl
adc
mov
or
in
ret
sub
movsb
cmp
sbb
add
mov
mov
add
or
bound
nop
mov
add
lcall
inc
cltd
ret
rorl
sbb
mov
cmp
add
dec
mov
ret
mov
adc
js
int3
pop
jge
idivb
movsl
push
cmp
insb
or
push
lea
push
inc
xchg
sbb
adc
push
fildll
fnsave
call
sarb
ret
andl
push
add
sbb
bound
daa
push
mov
mov
stos
add
and
push
adc
shlb
mov
inc
jl
push
pop
ret
xlat
stc
or
add
out
test
lds
ret
xor
mov
in
or
jo
or
ret
fbld
cmp
pop
jmp
push
adc
dec
jge
mov
daa
lock
mov
pushf
subb
inc
repz
test
lds
enter
adc
or
lea
add
sub
or
adc
lds
xchg
sahf
xchg
or
cld
out
mov
adc
enter
sub
ss
cmp
pop
fdivl
rclb
ret
jmp
test
push
adc
hlt
push
sub
inc
ljmp
and
shr
mov
imul
jne
add
dec
les
movsb
mov
xor
and
pushl
add
je
cli
add
cmp
jbe
loopne
and
push
pop
loopne
dec
or
pushl
and
mov
shr
lea
not
and
decb
mov
mov
dec
loopne
xchg
mov
push
pushf
mov
add
push
or
cltd
out
jns
add
pop
and
push
or
dec
add
push
sub
jmp
add
jecxz
push
push
data16
jnp
jne
and
sti
add
sahf
imul
fidivs
adc
das
jl
and
mov
add
jno
jno
mov
sti
loopne
out
sub
lock
and
jne
ja
std
push
sub
jmp
lea
das
mov
xor
push
jle
pop
dec
add
fs
cmpsb
push
mov
cmp
loopne
add
sbb
push
cmp
ret
mov
cmp
rorl
dec
or
adc
or
dec
pusha
mov
mov
push
mov
fadd
mov
mov
and
lods
push
out
add
pop
mov
jmp
dec
xchg
imul
push
mov
rorl
and
cld
loop
jge
stos
into
repz
shll
ret
stos
and
movsb
jo
push
adc
rcrl
sti
loope
add
scas
jp
push
call
aas
gs
ret
js
mov
push
or
cmp
flds
sub
dec
inc
adc
dec
adc
add
and
push
inc
pushl
push
push
push
xor
iret
mov
push
mov
int
mov
fildll
enter
and
jge
jl
lahf
outsb
call
push
jbe
insl
or
mov
sbb
sbb
mov
add
mov
xorb
imul
test
push
outsl
add
cmp
rorl
inc
or
adc
out
pop
push
pop
push
or
inc
adc
sub
xor
lret
jl
adc
push
jmp
orl
sbb
lds
and
push
mov
imulb
ljmp
rolb
mov
imul
mov
sarl
jae
add
or
hlt
or
cmpsl
bound
idivb
int
add
mov
xchg
ret
or
js
inc
sub
shr
inc
les
sub
clc
push
inc
unpcklps
pop
aam
or
adc
out
inc
cld
lock
push
cli
sub
sbb
test
stos
lret
je
clc
add
dec
mov
pop
into
sub
sub
fs
hlt
cmp
sahf
pop
mov
mov
decl
pop
lock
cmpsb
dec
inc
jne
or
lds
ljmp
stc
jo
adc
adc
mov
xlat
sub
pop
push
pusha
and
shr
jb
cld
mov
cmp
push
mov
and
pushf
jle
pop
shlb
fldz
popl
push
sarb
push
sbbb
push
pop
mov
pop
inc
stc
cs
clc
rolb
xorb
shl
int
pop
push
nop
dec
or
jge
or
into
add
sub
adc
lods
std
lret
adc
xor
decl
outsb
xchg
fstpl
lea
jbe
int3
lods
inc
sahf
jg
or
dec
shll
pop
push
lcall
lcall
add
adc
js
pop
outsl
adc
jmp
aaa
js
xor
test
iret
adc
push
adc
inc
insb
xor
and
int
rorb
pushf
nop
mov
push
or
das
outsb
in
cmp
inc
dec
insb
pop
xor
push
sar
add
jp
movsb
pop
pop
ret
add
cmp
xor
insb
sahf
loope
cmp
dec
je
xchg
jecxz
xor
push
mov
push
or
fcmovu
ja
push
push
dec
ficoms
add
pusha
pop
xor
adc
dec
outsb
dec
cmp
icebp
mov
bnd
inc
cmp
mov
mov
mov
cmp
lods
decb
lret
pop
into
mov
pop
sbb
xchg
push
addb
sarl
mov
push
add
cmp
cmp
pop
inc
add
push
push
push
jge
sub
out
cmp
push
jo
push
in
or
cmpb
and
test
out
fldcw
push
nop
cmp
and
or
js
decb
xlat
jo
adc
add
aas
pop
int3
mov
sbb
jne
leave
jae
cmpsb
jmp
jnp
add
xor
cmp
fimull
aaa
arpl
adc
mov
mov
and
lahf
ret
push
sub
pop
lcall
cmp
je
mov
dec
sbb
and
mov
mov
dec
pop
iret
jne
inc
ret
or
divl
mov
inc
or
jp
cwtl
fildl
out
repz
mov
and
jne
mov
push
pop
sbb
inc
test
inc
push
pushf
mov
mov
out
icebp
sbb
pop
lock
add
dec
add
xchg
sbb
or
ror
push
repnz
aaa
cmpl
and
mov
decb
jp
pop
jne
push
repnz
jmp
xchg
cmp
jp
mov
dec
pusha
dec
bound
dec
push
and
push
clc
into
xor
cs
sub
jp
fidivrs
mov
inc
mov
or
mov
or
je
mov
or
jge
push
or
dec
cld
or
pop
adc
inc
or
or
mov
push
aas
inc
imul
or
sub
mov
call
cmp
add
mov
push
iret
scas
and
lods
test
lea
and
daa
mov
sbb
jge
add
sbb
xlat
mov
inc
add
xchg
icebp
loopne
repnz
cmp
cmp
out
add
pop
jb
or
xorl
lret
rclb
xor
fiaddl
mov
or
add
inc
and
movl
push
lock
dec
add
jp
mov
sbb
jns
test
and
ficoms
and
stos
data16
cmpsl
and
add
movsl
shlb
xchg
pop
scas
and
inc
inc
cmp
cmp
popa
ret
sub
add
push
mov
adc
ret
push
test
inc
pop
sbb
or
cwtl
push
dec
mov
mov
inc
xchg
adc
push
dec
push
dec
js
xchg
inc
add
add
das
dec
adc
dec
pop
xchg
mov
sti
clc
outsb
sub
fsubr
xor
lahf
sub
adcl
icebp
rcll
je
out
sbbl
pop
jne
push
rcrb
pop
mov
std
mov
sbb
add
mov
ss
movsl
inc
and
push
or
pop
in
inc
fbld
cmpsl
pop
imul
xchg
sarb
jecxz
bound
nop
call
cltd
clc
mov
int3
push
mov
test
inc
or
je
mov
sbb
movups
cmp
inc
or
iret
and
cmpsb
mov
pop
cmpsl
adc
sbb
dec
ret
sbb
lcall
in
jg
sbb
cs
stos
inc
push
push
mov
pop
sbb
imul
add
xor
xor
shr
xor
jne
mov
cmpl
inc
aas
xor
sbb
ror
sbb
les
push
mov
pop
lret
and
sbb
arpl
lret
lods
aam
aam
xor
mov
push
test
and
in
test
and
mov
scas
mov
push
cmp
jge
jmp
jns
lcall
mov
into
je
cmp
mov
dec
dec
inc
rorl
cmc
cmp
mov
cwtl
mov
mov
mov
mov
inc
xor
pop
pop
ja
add
movsb
mov
sarb
xor
movb
mov
sarb
in
xlat
in
lods
or
andl
add
xchg
arpl
push
jl
gs
xchg
pushf
xchg
mov
rorb
ss
dec
leave
mov
dec
scas
and
hlt
fisubrs
jo
fbld
in
push
push
inc
pushf
xor
or
aas
insb
jne
fidivl
adc
mov
shr
mov
pop
sbb
jg
xor
sti
inc
sbb
or
xor
in
fadds
cmp
pushf
sbb
or
cmc
int
xor
jmp
int3
les
adc
and
int
push
stos
dec
xor
sahf
aaa
ret
in
shll
lea
mov
xchg
sbb
call
test
mov
ljmp
dec
mov
add
sbb
enter
push
mov
leave
enter
adc
test
lods
stos
dec
movsl
jb
lods
stos
neg
sub
enter
insl
and
push
cmp
inc
dec
outsl
xchg
sbb
inc
xor
lahf
inc
push
jns
and
add
mov
xchg
addr16
mov
stos
jbe
lock
adc
inc
xor
adc
mov
enter
mov
sahf
pop
in
test
push
hlt
xchg
inc
push
lods
test
shrb
xchg
test
or
call
in
inc
scas
in
add
mov
scas
inc
xchg
les
shlb
loop
in
pop
enter
in
and
les
test
popa
xchg
ret
fwait
mov
inc
test
movsb
add
mov
mov
sysret
mov
add
cmc
or
fiaddl
xor
mov
imul
sahf
stc
sbb
cmp
inc
mov
xchg
xchg
ss
adc
xor
repz
xchg
push
jne
cmp
cli
or
pop
push
pop
lea
sbb
cmc
push
test
lret
mov
push
pop
clc
mov
sub
pop
xor
mov
shr
loopne
xor
add
add
std
or
sub
sbb
jno
cmpsl
or
pop
or
push
outsl
sbb
xchg
mov
das
mov
or
cwtl
or
ficoms
add
into
and
mov
adc
add
add
shr
lds
aam
testb
mov
push
or
dec
fsubs
push
ds
int
adc
cmp
mov
pop
xchg
jle
mov
stc
orb
mov
aaa
inc
cld
push
cs
add
fdivs
nop
add
je
mov
cmp
add
or
int3
add
loopne
mull
xor
and
not
and
dec
or
cmp
outsl
cmp
sub
shlb
xor
jmp
push
clc
add
cli
sti
je
dec
sar
std
mov
loop
xor
xor
inc
and
pop
sbb
fcoml
cmpsb
xor
jg
lods
mov
add
xor
shrl
pop
sub
sbb
dec
mov
add
add
jno
adc
inc
push
or
and
loop
fmul
lret
or
mov
push
fldl
dec
xor
call
push
mov
gs
test
in
mov
pop
jmp
jo
push
fidivs
mov
pop
sub
cltd
push
xlat
das
sub
xchg
std
sbb
je
add
and
sbb
stos
int3
or
sti
fldenv
lcall
xchg
in
test
in
into
repz
cmp
adc
mov
flds
outsl
xchg
sub
mov
mov
sbb
fwait
add
adc
lea
inc
add
jno
mov
lret
xchg
adc
lock
jns,pn
pop
test
in
lock
in
lret
jmp
adc
faddl
push
fdiv
jle
ret
scas
fsubrl
fstl
push
shl
push
jl
inc
add
rorl
das
and
inc
lock
neg
ret
cmp
push
in
push
cmc
jnp
cmpsl
stc
pop
les
add
sub
xor
push
mov
adc
mov
sub
mov
je
dec
inc
sbb
pop
test
jg
add
xchg
dec
push
shl
fbld
fdivs
ds
xchg
ja
bound
and
clc
or
sbb
popf
testb
jmp
push
push
xchg
jmp
inc
faddl
xor
fstpl
imul
and
or
aas
test
fsubl
subb
mov
jp
xorl
negl
and
push
push
adcl
sbb
outsb
cmp
inc
sbb
jns
movsb
js
mov
cmp
or
add
cltd
push
or
mov
sbb
adc
mov
repz
sub
gs
push
js
or
pop
inc
cmp
adc
call
test
in
call
pop
pop
cmp
dec
mov
lock
ror
lret
scas
pop
mov
stos
mov
clc
rclb
call
incb
xor
or
pop
add
jne
push
mov
loopne
sar
test
ret
and
add
xchg
cmp
int
lahf
decl
loopne
jge
cs
rolb
pop
push
dec
push
inc
inc
pop
push
pusha
rep
dec
mov
ret
cmp
adc
mov
jb
adc
jne
std
lods
and
jo
popa
rorl
mov
in
pushf
add
jne
xchg
lock
push
inc
dec
inc
jno
dec
push
pop
xchg
dec
scas
or
add
adcl
xchg
sbb
jo
iret
in
mov
cld
cmp
hlt
es
or
add
sbb
lret
dec
mov
mov
lret
gs
mov
and
push
sub
cli
cmp
lahf
call
dec
cmp
inc
sub
adc
aad
pop
outsb
xchg
in
adc
jne
xchg
jne
inc
jne
xchg
lret
testl
xor
inc
add
rclb
fidivrs
push
int
lds
mov
cmp
cmpsl
lods
cmp
lds
iret
and
cmp
test
fisttpll
sbb
mov
mov
sub
push
xchg
in
push
lret
dec
sahf
iret
sbb
add
ret
pop
cmpsb
adc
push
or
js
mov
cmp
adcb
sti
push
inc
cmp
xchg
outsl
sub
mov
mov
scas
testl
rorb
mov
xor
xchg
xchg
mov
int3
push
adc
test
mov
push
lock
or
imul
fidivl
jns
daa
mov
sahf
mov
mov
sub
dec
jns
cmpl
hlt
std
add
leave
sub
rcrb
inc
pop
enter
mov
and
imul
mov
mov
pop
adc
inc
lods
divl
test
pop
insb
idivl
test
adc
sbb
std
mov
xchg
sti
jecxz
xor
xchg
loopne
sbb
jns
sbb
std
aaa
addr16
push
cmpsb
pop
xlat
das
lock
fdivr
sbb
in
fdivr
sar
repz
lret
and
shrl
mov
test
push
add
rcl
mov
adc
sbb
popf
mov
mov
std
call
sarl
mov
fadd
push
dec
mov
jbe
gs
push
mov
fdivrs
bound
xor
daa
fmull
push
xor
std
neg
ret
pop
lds
sub
and
push
fnstsw
lea
mov
mov
cmpb
lea
cmpl
push
push
mov
pop
mov
mov
xor
pop
stos
out
imul
sbb
sahf
aad
loop
ljmp
icebp
ret
xor
dec
xor
roll
cmp
xor
mov
mov
mov
and
in
xor
cmp
cmp
cmp
enter
call
std
fsubs
arpl
cmp
mov
jecxz
in
loopne
arpl
std
inc
repz
daa
push
mov
popa
out
lret
mov
push
fdivrp
or
fstpl
ds
data16
mov
sub
test
test
jmp
popa
dec
jmp
dec
pop
movsb
mov
cmc
ror
dec
gs
sar
lock
mov
adc
xor
push
sub
pop
mov
sbb
jmp
adc
and
fstpt
popf
loopne
sub
shlb
enter
mov
repnz
aam
jge
jae
ds
mov
pushf
inc
sub
js
fbstp
add
insl
mov
add
and
movsb
adc
fidivs
jmp
sub
sub
inc
cwtl
cmovge
or
mov
jne
fdivr
cwtl
adc
das
push
dec
pop
jno
and
xchg
and
and
nop
xchg
push
in
std
std
pusha
push
loopne
loope
xchg
mov
sub
jl
das
mov
xchg
mov
jnp
iret
sar
nop
insb
leave
inc
add
push
popf
sti
inc
enter
out
jns
ss
inc
ret
xor
mov
loope
pusha
test
rcll
adc
adc
push
enter
inc
lea
or
pop
pop
leave
dec
es
cmp
or
test
mov
int
sarb
xchg
add
mov
push
arpl
test
lret
adc
imul
cmp
ja
dec
mov
sbbb
or
and
pop
pop
repz
cmp
cmc
ds
imul
xchg
int3
lock
xlat
popa
push
or
cmc
adc
jns
dec
push
lock
xor
pop
add
stos
mov
pop
xor
scas
adc
test
jns
adc
or
fs
push
es
push
cmc
les
in
pop
leave
int
int
mov
adc
and
push
arpl
int
xor
repnz
int
aam
les
mov
lods
dec
lret
xor
stos
mov
bound
cltd
mov
dec
push
int
ljmp
sbbl
dec
or
in
push
cmpsb
pushf
inc
enter
leave
add
sub
xchg
dec
dec
aad
adcl
and
sub
test
pushf
sbbb
cmp
sti
lret
jle
test
jbe
pop
std
lret
jle
pushf
push
sub
loope
xor
repnz
fwait
mov
cmc
sbb
int3
in
cmpsl
and
int
add
mov
mov
lret
dec
and
pop
inc
lods
pop
xor
pushf
inc
xor
divl
xchg
pushf
xchg
imul
clc
mov
sbb
push
orb
stos
mov
ds
xchg
xchg
stos
icebp
mov
test
sub
jb
pop
dec
add
cmp
icebp
es
add
lds
bound
ret
or
adc
inc
push
xor
leave
xor
test
adc
pop
jb
nop
nop
push
orb
lods
and
and
lods
lods
mov
out
cmpb
test
dec
pop
je
data16
xchg
jmp
push
outsb
movsb
aaa
pop
xor
cmpsl
std
push
roll
cltd
cmc
inc
aam
fs
ss
lea
inc
dec
xor
fisubrl
pop
inc
stc
nop
sbb
movsl
sar
and
adc
and
inc
dec
add
xchg
push
pusha
jo
stos
add
lcall
lods
adc
cltd
out
out
adc
cli
sub
or
push
loop
pop
rolb
sub
jmp
int
js
sub
inc
add
aam
sbb
push
adc
iret
cmc
mov
xchg
dec
rep
ss
neg
pop
mov
cmc
lods
shlb
lock
push
dec
sbb
lods
cmp
dec
rcrl
sbb
xor
repz
inc
mov
int
outsl
push
push
dec
adc
push
and
jl
xor
dec
push
pop
ret
out
std
outsl
inc
or
jbe
jle
sbb
xchg
lret
ja
mov
jo
inc
and
sbb
add
xor
xchg
add
loopne
cltd
cmp
inc
ss
lods
lret
sbb
dec
pusha
jae
xor
into
and
call
mov
sub
push
push
rcll
pop
lret
sub
ja
add
xchg
lcall
fsubrs
fsts
clc
in
lock
fidivl
inc
rep
jge
jne
xor
xchg
in
fidivrs
aam
jp
mov
lock
pop
jae
daa
and
repz
cld
sub
sub
loopne
loopne
or
mov
inc
cltd
inc
movb
jne
mov
adc
or
roll
inc
add
pop
aam
fisubrl
sbb
loop
jne
xchg
pop
inc
prefetcht1
sarb
add
jnp
lds
dec
dec
jl
xchg
mov
mov
mov
cmpl
mov
jnp
inc
add
es
add
jb
cmp
adc
inc
lock
mov
into
ds
add
jl
dec
and
and
das
xchg
mov
cld
push
mov
pop
inc
cmp
jno
xlat
icebp
add
adc
loop
xorb
aaa
mov
sbb
adc
mov
in
sbb
jne
lea
popa
add
std
mov
add
les
mov
push
mov
sti
jae
jle
je
jmp
bound
or
and
fdiv
mov
sbb
les
inc
rorb
stos
scas
add
push
mov
sub
ljmp
das
das
mov
movl
les
xorb
and
lods
push
in
inc
push
fcmovu
adc
xor
jmp
pop
icebp
and
adc
loope
inc
pusha
cmpsb
jne
lahf
or
and
popf
xor
fists
inc
cld
sahf
ret
or
push
add
je
hlt
daa
clc
inc
push
test
gs
sbb
jae
testl
es
ss
movb
je
jno
les
pusha
pop
daa
test
cwtl
les
add
mov
sub
cmpsb
or
jmp
adc
or
gs
cmp
movsb
fistpl
setns
lcall
push
fidivs
jmp
rcr
or
jne
div
pop
dec
adc
inc
std
std
mov
jb
cmp
or
cmp
or
repz
adc
add
sbb
or
fcmovu
fcmovu
lret
jo
jle
iret
dec
add
inc
add
mov
maxps
loop
dec
pop
pop
jmp
incl
or
pop
clc
mov
movb
and
movb
jae
sbb
push
in
adc
cmp
es
lcall
ljmp
lea
arpl
hlt
ja
lsl
sbb
or
clc
out
sub
adc
mov
sbb
mov
clc
add
adc
roll
int
push
adc
dec
leave
roll
push
mov
push
cmp
cmpsb
sbb
inc
add
sub
adc
xor
dec
mov
fnstenv
pop
dec
dec
xchg
test
es
inc
cmp
push
pop
inc
lcall
jle
jne
lea
jb
cmp
mov
sbb
clc
aas
pop
inc
stos
push
nop
pop
push
lret
push
sub
dec
daa
aam
test
ret
cmc
jne
mov
daa
inc
out
jbe
lea
xchg
inc
xor
and
adc
les
jo
loop
addb
jno
sbb
rolb
inc
cld
mov
lcall
mov
xor
jl
sub
or
add
push
mov
cld
sbb
subb
mov
adc
and
pop
push
enter
sub
addb
add
mov
icebp
add
xchg
aaa
orb
mov
xor
add
jo
xor
xchg
xchg
xchg
cmp
add
mov
iret
add
add
inc
mov
add
pop
sbb
movsb
repnz
adc
push
mov
cmp
add
push
inc
xor
sub
add
jl
aam
or
push
dec
xchg
es
in
cmp
out
lahf
sar
imul
cmp
or
lods
inc
adc
add
dec
sbbl
xchg
add
dec
dec
loope
hlt
jo
cmp
test
add
push
jmp
xor
or
mov
shrl
fwait
sub
loopne
mov
xor
gs
push
pop
out
and
adc
enter
add
pop
sbb
ret
lahf
xor
es
inc
or
dec
test
pcmpeqb
xchg
add
cld
iret
aaa
ret
jle
sub
or
mov
jecxz
or
sbb
mov
mov
ret
icebp
incl
adc
iret
xor
jo
and
ljmp
add
jne
movb
or
inc
ret
push
adc
push
out
cmp
je
dec
sbb
and
fdivrl
cmp
xchg
pop
addr16
outsb
mov
cld
pop
push
loope
sbbb
or
and
mov
std
sbb
insb
add
cld
out
hlt
xchg
mov
dec
push
or
setl
dec
movsl
sub
dec
sub
test
push
add
testl
add
inc
bound
add
lret
push
mov
cmpl
or
adc
dec
sbb
mov
pop
jne
push
inc
rcll
fisubl
push
push
sub
ljmp
cltd
js
dec
or
or
sarl
inc
sub
or
clc
shr
icebp
pushf
lahf
push
push
popl
mov
pop
push
cmp
movsb
xorb
cmp
loope
insb
adc
mov
je
jo
sbb
mov
daa
push
xor
mov
add
sbb
pop
movsl
pop
dec
adc
xchg
cmp
sub
inc
add
dec
nop
jbe
adcl
cmpsl
andb
mov
mov
sbb
push
lret
add
es
shrb
push
or
and
fldl
lock
pusha
or
pop
add
push
inc
sbb
dec
add
pop
scas
jge
xchg
xor
fdiv
cmp
subb
cmpsb
pop
and
lahf
sbb
xchg
rorb
ds
add
rclb
nop
gs
aam
mov
cmp
push
rorl
push
and
leave
mov
xor
and
cmp
xor
scas
jl
sbb
xorl
sub
cmp
imul
cmp
scas
or
dec
cmp
mov
test
cmp
and
cmp
xchg
inc
arpl
pop
mov
lods
shll
jo
inc
lock
leave
push
sbb
rorb
sbb
dec
or
pop
sub
pop
jmp
push
push
xor
std
adc
gs
push
cmp
ret
xor
imul
and
call
in
hlt
add
add
pop
les
sbb
into
aam
cmpsb
ret
push
and
xchg
xor
or
lock
shll
fs
sbb
dec
movsb
fstps
fdivs
add
jmp
pop
and
xchg
mov
lods
pop
or
sbb
addb
fidivs
clc
pop
insb
scas
sub
sbb
dec
cmc
mov
jmp
int3
xchg
push
push
loope
sub
mov
mov
cmpsb
push
xchg
pop
fidivrl
mov
cmp
in
or
push
inc
pusha
insb
or
es
dec
add
or
je
adc
aam
inc
pusha
jne,pn
sbb
mov
mov
mov
adc
cmp
jge
mov
fistl
jle
mov
pop
mov
sbb
inc
loop
fildl
jnp
iret
mov
sbb
push
push
adc
sbb
insb
xchg
pop
adc
cmp
or
js
xor
push
adc
cmp
pop
add
sbb
lcall
add
xchg
insb
mov
das
xchg
add
addw
negb
mov
sbb
bound
jmp
cmpl
xchg
mov
and
and
add
jnp
inc
shl
jecxz
lret
inc
push
rclb
and
pop
aas
add
aaa
dec
jae
push
dec
sbb
neg
or
and
push
xchg
mov
test
or
adc
out
dec
and
pop
pop
loope
shrl
pop
inc
pop
cmc
ficoml
sbb
jmp
mov
and
mov
mov
cmp
mov
ljmp
jmp
add
sub
jnp
dec
adcl
popa
mov
mov
sbb
into
pop
push
cs
mov
addr16
repz
cmc
pop
sbb
mov
test
lock
in
daa
mov
xlat
push
sbb
pop
or
dec
add
sub
in
gs
stc
or
fsubl
push
mov
outsl
int
rolb
ret
push
rorl
adc
scas
stc
ss
mov
inc
and
cmp
pop
dec
or
mov
push
es
sbb
jl
mov
inc
mov
sub
inc
mov
or
les
push
adc
push
lods
and
jge
or
xchg
add
inc
jge
mov
ret
fsubrs
mov
repz
jmp
xor
sbb
test
inc
inc
adc
add
push
adc
in
add
inc
pop
je
pop
es
out
imul
je
jae
dec
jo
adc
or
inc
or
call
jmp
outsb
adc
add
push
icebp
xchg
xchg
inc
shll
or
cs
lock
adc
clc
cmp
push
mov
inc
mov
pusha
jp
into
inc
add
push
test
pop
loope
pop
add
popa
adc
scas
ljmp
cwtl
push
push
inc
dec
pop
daa
stc
push
pop
sarl
sbb
mov
mov
xchg
xor
sub
mov
outsl
or
mov
mov
loope
jecxz
mov
stos
or
aas
jae
mov
mov
dec
shl
add
clc
ss
or
pop
pop
movsl
lods
sbb
jne
pop
push
orl
or
mov
push
add
mov
jo
jle
pop
lea
jne
add
dec
icebp
pop
and
daa
add
and
jo
daa
lret
jl
and
ret
sub
in
mov
cmp
dec
call
inc
or
jne
repnz
sub
push
sar
pop
cmp
hlt
arpl
fbstp
mov
jae
sbb
dec
subb
jb
cld
imul
cmp
shlb
jbe
xor
ret
jmp
sbb
addb
lock
enter
or
push
or
pop
out
pop
stos
ja
int
pop
or
addb
ljmp
mov
xchg
xor
pop
push
push
dec
adc
pushf
xchg
scas
jg
inc
push
pop
push
dec
add
sub
add
call
or
or
jmp
add
imul
or
or
push
and
frstor
inc
mov
mov
test
int3
js
dec
cmp
push
mov
pop
mov
insl
sbb
sbbb
call
mov
orb
sub
pop
sbb
pop
cmpsb
and
dec
push
fsub
add
nop
and
clc
push
cld
adc
pusha
and
and
addb
into
mov
sar
sarb
jg
popf
clc
mov
ficoms
adc
add
pop
adc
push
mov
dec
xchg
stos
add
bound
es
mov
jmp
sar
and
shl
add
and
lods
test
inc
add
and
xchg
movsl
push
pop
sbb
sti
incl
hlt
inc
adcl
pop
xor
xor
jae
cmp
push
orb
mov
shr
xchg
andl
testb
add
shl
pop
mov
lea
aas
push
gs
aaa
xor
rorl
mov
add
or
sbb
mov
movl
add
or
jmp
scas
pop
push
push
dec
notb
pop
sub
ret
mov
aaa
add
dec
out
mov
dec
jp
or
mov
push
mov
sarb
ss
push
xchg
movsb
cmp
jns
loope
lock
cmp
xor
and
dec
daa
cli
test
mov
or
adc
lock
xor
push
rcrl
xchg
ret
add
enter
das
outsb
js
les
jb
rcrl
add
adc
rol
ret
sub
pusha
rcrl
mov
sub
ljmp
inc
das
in
mov
xor
popa
nop
bound
jle
mov
insb
cmc
mov
into
bound
push
mov
dec
pusha
dec
clc
orb
add
mov
cmp
fs
clc
add
ret
pushl
add
lcall
jae
and
and
lods
xlat
or
ds
mov
out
push
addb
inc
inc
adc
in
cmp
jl
orb
in
mov
inc
inc
dec
mov
nop
adc
cmp
cmp
daa
adc
js
je
push
cmp
fnclex
pop
cmpsb
xor
and
shll
outsb
sbb
push
jne
lcall
ficomps
xchg
or
or
add
sti
or
add
mov
and
xchg
and
dec
pusha
jb
push
aam
inc
dec
or
add
inc
add
loopne
pop
daa
insl
lods
cld
push
or
in
jmp
cmc
or
repnz
fsubrs
and
stc
push
mov
sbb
roll
call
out
decl
cwtl
mov
sub
push
push
xor
movsl
das
les
jo
js
push
and
inc
cwtl
cmp
cmp
xor
daa
mov
or
push
mov
pop
mov
dec
mov
cmp
inc
jo
popf
jg
add
or
mov
jmp
jb
fldl
xor
popa
loope
orb
jns
jb
sub
mov
mov
sbb
aam
sarb
fxch
flds
ret
xor
mov
mov
aam
fsubr
push
and
cmp
loope
aas
fwait
ret
aad
test
test
jmp
sbb
push
call
call
or
push
scas
int
sub
adc
outsl
jo
push
stc
mov
add
jae
adc
sbb
or
dec
xor
push
imul
popl
mov
aam
sbb
addl
test
mov
aaa
adc
sub
mov
jl
push
mov
mov
push
nop
fsubs
mov
mov
jp
xor
cmp
push
cmp
adc
out
scas
hlt
pop
cmp
jbe
jne
imul
enter
push
test
movsb
sbb
ss
popa
cmp
push
rcrl
and
sbbl
sbb
mov
jle
inc
push
mov
ds
sub
cmpsb
mov
adc
lcall
mov
cmp
std
mov
push
ja
cld
and
add
sbb
jno
push
mov
test
xchg
or
rolb
stc
pop
or
push
loop
push
or
movl
mov
or
pop
push
inc
ret
or
insb
jl
pop
pusha
jecxz
xchg
mov
cmp
add
je
testb
je
in
mov
adc
sbb
in
dec
stos
mov
ss
sub
dec
inc
loopne
aad
data16
stc
sub
xor
nop
and
and
jle
sbb
sbb
add
jg
rcll
xchg
xchg
jg
add
fildl
mov
or
hlt
inc
lahf
cmp
or
adc
inc
dec
ret
mov
mov
fs
sbb
ffree
adc
push
adc
push
pushl
dec
loopne
mov
pop
sbb
pushf
dec
cld
ret
out
in
and
or
adc
lret
fdiv
or
push
in
push
push
add
ret
sub
push
xor
das
adc
and
and
inc
pop
mov
inc
sbb
cmp
or
pusha
xchg
sbb
adc
rolb
adc
add
mov
add
xor
aaa
add
xor
lret
adc
lods
inc
xor
pop
xchg
adcl
lock
jle
sub
push
jl
push
jo
xor
dec
loopne
push
or
add
add
outsb
or
jg
sbb
sti
aas
add
dec
inc
dec
data16
sbb
mov
sbb
xor
and
bound
clc
nop
roll
push
adc
inc
out
lahf
cmp
pusha
mov
out
pop
jg
sub
or
dec
xchg
xor
cmp
jl
mov
sub
imul
xchg
or
nop
xchg
test
fisttpl
dec
loope
test
xor
mov
cwtl
adc
flds
dec
loope
push
gs
add
outsb
jbe
ret
ret
addr16
lret
insl
cltd
lcall
sub
loope
fdivs
shll
aaa
inc
inc
push
clc
sbb
sub
test
or
jp
into
jmp
inc
lock
sub
ficomps
cmpl
dec
or
ror
cmp
jae
adc
push
xor
inc
pushf
movsl
jp
pusha
jg
fs
shlb
push
out
inc
xchg
mov
cmpsl
je
lods
adc
sbb
repnz
xchg
loope
push
inc
cmpsl
and
shl
ljmp
out
pop
mov
rcl
in
into
cmp
jle
mov
rcrl
push
lret
cmpl
push
mov
ret
lods
add
pop
lock
or
mov
rcl
add
adcb
xor
test
push
or
insb
or
or
inc
mov
mov
mov
cld
or
cld
mov
sbb
icebp
cmp
mov
ja
add
add
wbinvd
pmaddwd
shll
mov
dec
shl
jge
mov
movsl
mov
add
repz
popa
pcmpeqd
stos
xor
in
sbb
test
aam
push
sti
add
inc
cli
cmpl
inc
jmp
inc
mov
jmp
cmp
fdivrl
je
xchg
je
mov
cs
mov
adc
sub
add
pop
add
inc
movb
cmp
andb
add
xlat
or
lock
add
xor
xchg
add
xchg
in
pop
adc
mov
loop
loope
leave
repz
or
xor
add
xorb
push
or
add
jmp
xor
add
push
cmp
add
pushf
sbb
add
adc
mov
and
push
jge
js
icebp
enter
ret
inc
andb
es
xor
cmp
popa
push
les
fimull
filds
pusha
aas
nop
flds
je
pop
cmc
and
rolb
cmp
sub
xor
add
adc
insb
mov
lcall
lea
aad
mov
mov
add
push
loope
xor
push
cmp
jl
mov
inc
adc
lock
dec
adc
in
repz
jns
mov
lea
testb
jne
clc
push
mov
jl
xor
adc
in
push
ljmp
xor
mov
movsb
sub
nop
roll
mov
jle
xchg
jp
in
dec
dec
adc
add
movsb
insb
aad
mov
mov
push
push
scas
mov
sbb
nop
pop
data16
push
sub
xor
js
or
add
test
imul
pop
cmp
jae
mov
gs
jne
shlb
xlat
jns
jne
out
loop
mov
or
lret
push
push
insb
push
arpl
dec
sbb
mov
add
xchg
lock
dec
sbb
push
xchg
pop
jle
xchg
xor
push
shr
pop
dec
or
sbb
xor
inc
jp
jecxz
nop
dec
inc
inc
filds
mov
adc
adc
dec
push
inc
in
pop
mov
push
jle
adc
jno
xchg
test
icebp
sbb
clc
dec
inc
push
lock
or
adcl
add
jg
and
rorl
div
outsb
mov
mov
inc
jle
aam
repnz
shrl
adc
in
pusha
jbe
add
loopne
fistl
jge
decl
xor
dec
jg
adc
cmpl
fs
call
lret
pop
hlt
cmp
sarl
fwait
loopne
jb
pop
rorb
jecxz
rolb
arpl
outsl
or
push
pop
scas
mov
and
sbbb
fistl
inc
pop
test
or
push
adc
cmp
hlt
cmp
xchg
push
ljmp
mov
push
es
das
mov
push
inc
scas
pop
xchg
enter
push
push
push
adc
clc
push
mov
ljmp
xor
aad
xchg
shrl
loope
inc
out
pusha
mov
mov
cmp
fcos
mov
xlat
je
cmp
push
adc
shll
testb
les
add
xchg
push
or
add
add
dec
dec
sarl
jmp
inc
ds
faddp
sbbl
adc
jb
cmp
add
or
push
or
push
push
jo
lret
int
icebp
push
inc
push
push
and
call
and
js
mov
adc
icebp
xorl
scas
or
out
push
pop
ja
pop
jge
insl
cld
jle
push
call
pop
mov
pop
add
mov
xchg
push
inc
pop
pop
or
loop
cltd
pusha
mov
add
sbb
mov
popf
cmp
in
or
or
mov
and
pop
sub
sbb
outsb
je
std
pop
sarb
cmp
jb
jbe
lea
lea
inc
push
in
add
int3
cmp
or
mov
mov
mov
mov
popl
push
loope
inc
xchg
mov
push
scas
jns
mov
sbb
pushf
test
icebp
cwtl
push
dec
adc
cmp
popf
popf
pop
sti
pop
inc
mov
out
mov
cmovl
sub
imul
cld
add
sbb
loop
mov
mov
shr
mov
rcrl
ljmp
jbe
cmp
xor
out
shrb
jne
ret
or
jnp
mov
fiaddl
sub
xor
cs
push
in
cltd
inc
popa
add
es
push
or
enter
adc
ss
and
and
sub
daa
daa
daa
daa
xor
cmp
insl
inc
or
inc
and
inc
dec
dec
dec
outsb
cmovs
xchg
xchg
or
add
xchg
xchg
fs
xchg
xchg
je
jl
dec
jnp
mov
adc
mov
and
dec
mov
xor
xor
movsb
test
sub
xchg
mov
add
mov
fwait
add
lock
stc
push
sub
hlt
and
jle
fwait
nop
data16
clc
adc
cld
lcall
sbb
nop
inc
sbb
and
or
and
or
ror
mov
pop
inc
or
adc
adc
popa
xor
xor
ret
cmp
add
pushf
sbb
mov
inc
dec
jne
dec
pop
add
out
jbe
enter
pusha
lret
sbb
mov
or
sub
mov
jne
sar
or
add
addr16
push
pop
dec
fwait
lcall
dec
ret
outsb
es
and
push
push
mov
or
out
int3
xor
mov
pop
push
push
sub
add
mov
or
nop
xor
add
repnz
pop
imul
fdivl
jmp
movsb
fisttps
pop
inc
call
xchg
js
add
jle
cmp
add
inc
push
stc
pusha
aaa
das
cmp
mov
je
ja
test
scas
rol
add
push
mov
hlt
test
cmp
fmuls
or
hlt
jle
push
push
mov
mov
int3
or
rcrl
inc
lock
lcall
adc
sbb
aam
aam
add
inc
or
pushf
insl
enter
in
sub
and
inc
push
xlat
test
and
mov
xor
mov
pop
stos
mov
add
gs
jne
lock
lahf
repz
mov
mov
fs
mov
inc
repnz
mov
add
stos
cmpsb
xor
push
cltd
xor
pop
fwait
test
enter
sbb
mov
ljmp
add
loope
aam
inc
and
jmp
xor
pop
or
fmuls
jo
dec
xor
cltd
jg
adc
outsl
dec
pop
mov
xor
mov
add
push
movsb
push
add
mov
ret
andb
fcoms
sbbb
into
decl
rol
and
outsb
test
loop
test
loopne
das
push
or
mov
adc
outsl
psraw
and
jb
push
or
fimull
or
movsl
add
pop
lea
daa
adc
xor
mov
addps
loope
xorl
pop
pop
push
js
mov
notb
mov
xchg
or
and
inc
fisubl
adc
fwait
loope
add
mov
insb
push
xchg
xchg
pop
mov
inc
fidivrs
or
in
add
mov
cmp
xor
pop
std
or
stos
jecxz
mov
add
or
lea
push
and
out
filds
add
pop
and
fcmovnbe
sti
mov
jle
popf
daa
or
sbb
test
divl
jne
aad
and
adc
rclb
or
inc
in
test
stc
popf
add
mov
jno
aam
inc
sbb
in
call
test
mov
push
inc
pushl
mov
mov
pusha
dec
sub
add
ret
rcll
orl
cmp
jns
pushf
pop
outsb
xchg
sbb
mov
sbb
inc
adc
mov
into
outsb
pop
jmp
cmp
in
lods
mov
xchg
mov
mov
mov
or
test
mov
sbb
jmp
push
cmc
mov
data16
outsb
cmp
add
js
in
fidivrl
enter
push
mov
cmpsb
ds
mov
pop
cmpsl
scas
inc
call
jmp
push
dec
jge
pushf
pop
inc
lea
push
mov
out
inc
add
mov
jnp
mov
dec
pop
pusha
fcoms
push
inc
dec
ljmp
sub
pop
jecxz
sub
sub
mov
mov
mov
jo
incl
cmpsb
int
pop
mov
push
or
cmp
add
cld
icebp
cmp
stc
cmp
ret
rcr
ss
jne
movzwl
push
cmp
and
lock
push
sbb
out
sub
int
push
jmp
addl
lock
push
les
pop
dec
je
fsubrs
aad
fcomps
cld
push
mov
sbb
daa
mov
sahf
adc
mov
mov
call
dec
add
sub
mov
lret
jbe
out
and
jmp
xchg
mov
andl
add
aaa
movsb
cli
pop
mul
push
cmp
mov
adc
cli
or
adc
lock
aas
movb
inc
mov
adc
dec
adc
loop
mov
mov
mov
sub
and
loopne
sahf
dec
sbb
inc
fidivs
repnz
adc
cmp
jmp
gs
in
add
xor
inc
cwtl
sub
cmp
in
out
pop
push
lods
push
orl
pop
mov
inc
inc
sbb
adc
mov
or
jb
movsb
repnz
mov
add
and
aas
push
sarl
and
stc
pop
xchg
cmp
pcmpeqd
mov
mov
add
xchg
push
xchg
inc
out
add
sub
addb
pop
inc
les
push
mov
and
jmp
xchg
rcrb
sub
out
adc
ss
std
jno
daa
sbb
test
fnstsw
ret
sub
test
push
xorl
lret
jmp
or
sub
repz
hlt
popa
aad
pop
or
push
fidivrs
lea
mov
pushl
xchg
xchg
sub
lcall
jne
pop
add
sub
push
cmp
adc
xor
jbe
ret
cmp
mov
lret
nop
add
sbb
inc
cmpb
mov
jg
shll
mov
cmp
pop
and
xchg
inc
add
jo
cltd
test
mov
pop
and
je
scas
or
aaa
push
xor
movb
add
pushf
cs
pop
sub
and
jl
popa
or
or
loop
cld
clc
mov
scas
inc
clc
mov
orl
sbb
push
jp
add
xor
popa
and
dec
adc
rorl
or
ret
aaa
and
sbb
or
int
add
mov
add
out
shrb
inc
xor
push
aad
rclb
dec
add
add
sub
cmp
xor
push
adcb
aaa
xor
int3
xchg
sarb
or
shll
ret
ss
stos
mov
ljmp
mov
out
pushf
cli
push
mov
ficompl
inc
mov
mov
add
mov
movsb
into
jo
aam
repz
push
inc
lret
sbb
sub
mov
nop
testb
xchg
into
sub
inc
fstl
inc
or
dec
push
sbb
or
scas
pop
notl
sub
dec
pop
imul
and
arpl
push
adc
repz
pop
cmp
mov
jg
rclb
xchg
fnstcw
dec
call
adc
jge
addr16
pop
pop
test
mov
dec
add
sub
adc
sbb
sbb
pop
rclb
in
add
lret
mov
push
mov
pop
adcb
xor
lods
pop
lods
les
jecxz
pop
mov
cmp
mov
xchg
or
cs
push
xor
add
lcall
lcall
lock
adc
push
js
inc
call
cmp
insl
sub
lds
fisubrl
push
push
and
push
enter
jl
xchg
ss
mov
js
pop
sbb
push
add
fstps
adcb
add
cld
dec
and
leave
test
enter
inc
ds
fistps
mov
lret
cmp
jmp
cmp
or
xchg
xchg
int
jae
dec
pop
test
test
shr
icebp
xor
jecxz
ja
je
int3
mov
loop
jle
sbb
mov
ss
add
xchg
ret
xor
cmp
jg
andb
pop
add
sbbb
push
lods
inc
inc
enter
adc
mov
sbb
inc
out
js
sub
rclb
xor
loope
push
cmp
mov
pop
shrb
std
push
loope
add
sub
sti
and
sub
xchg
or
push
push
add
cmpb
jo
sbb
xlat
das
mov
dec
mull
pop
mov
imul
mov
aam
inc
dec
cmp
dec
mov
xor
xor
cmc
pop
clc
mov
fs
add
mov
and
and
icebp
add
push
mul
test
lea
mov
cmp
mov
in
xchg
jo
insb
cld
cmp
dec
cmp
sub
adc
imul
out
pop
and
inc
sub
dec
and
dec
pop
into
jl
push
jle
cmp
adc
adc
sub
loopne
or
or
add
stc
mov
add
inc
xchg
pop
fsubrl
dec
mov
mov
add
popw
inc
test
shr
inc
movsb
dec
sub
in
sbb
fildl
in
jo
sub
sub
inc
stc
and
dec
or
ror
push
call
xor
rorl
add
in
test
or
sbb
xor
push
adc
xchg
rol
rolb
call
jg
push
pushf
pop
mov
xor
pop
sub
je
inc
test
push
popf
ds
cmp
testl
and
data16
call
add
push
mov
clc
outsb
inc
loope
sub
das
add
dec
push
push
xor
inc
aas
mov
add
push
or
inc
jmp
test
push
or
sbbb
inc
js
cmp
mov
xchg
in
rolb
dec
xchg
add
addr16
lret
xor
mov
adc
outsb
inc
pushf
nop
nop
and
shll
dec
and
adc
or
fcompl
in
shr
add
jmp
jno
xchg
add
sbb
sbb
pop
test
and
repnz
adc
test
dec
loop
hlt
add
mov
push
out
inc
lret
sbb
push
sbb
or
push
sbb
mov
and
outsl
pushl
clc
incb
jmp
sbb
lock
ja
frstor
cld
mov
and
aaa
in
data16
out
jmp
xchg
rorl
jns
ljmp
loopne
out
inc
std
shll
sub
jge
je
jecxz
or
flds
and
mov
mov
pusha
loope
pop
sbbb
sub
dec
and
sub
xchg
jecxz
pop
fstp
shll
pusha
pusha
adc
call
push
addr16
pop
arpl
adc
push
jns
outsl
es
adc
sti
add
add
out
test
fisttps
inc
sbb
loope
and
das
xchg
or
sub
shrb
sti
xor
sub
adc
testl
out
and
sub
xorb
pop
sbb
jmp
push
and
inc
add
outsb
testb
add
inc
mov
inc
jp
inc
push
fnstcw
or
pop
mov
sbb
push
addb
push
push
push
sbb
dec
mov
inc
cwtl
cmp
mov
mov
out
movsl
pop
sub
clc
fadds
adcb
sbb
arpl
push
xor
les
xchg
add
jp
mov
inc
aam
xor
xor
xchg
dec
rclb
fwait
sub
add
les
sub
pop
aaa
pop
sub
jmp
sub
sub
sbbl
lods
sbb
test
int3
inc
push
sbb
adc
hlt
add
repz
ret
fdiv
jnp
cmp
clc
inc
mov
fstpl
xor
pop
loopne
pop
imul
fmull
call
inc
xchg
jo
lcall
in
add
bnd
enter
mov
cld
mov
push
out
dec
into
pop
icebp
addr16
clc
not
insl
in
jo
orl
fs
shl
push
pushf
or
push
push
sahf
jmp
mov
loope
pop
movsb
lods
adc
or
adc
bound
xchg
and
mov
mov
out
inc
pop
and
aam
out
or
jbe
adc
jle
push
add
sub
add
and
pop
sub
pop
test
push
jmp
popa
icebp
add
jne
sahf
fs
xchg
fcom
out
mov
movb
add
mov
sbb
mov
je
push
and
xorb
push
xor
add
or
test
das
adc
jg
sub
adc
or
and
pop
sub
orb
pop
sbbb
andb
add
stos
sub
adc
add
mov
add
out
call
and
mulb
inc
or
pusha
cmp
xor
mov
loope
add
xchg
or
or
sbb
sarb
mov
pop
mov
fdivrl
mov
add
imul
stc
addb
insb
sbb
lea
push
or
int
sbb
sbb
and
sub
cmpb
inc
push
jno
rep
add
loopne
int3
pop
fisubs
adc
ja
jb
fnstsw
or
cmp
mov
pusha
add
jg
jae
pop
push
fsubs
jecxz
push
mov
int3
pop
cld
mov
push
cmp
mov
adc
add
pop
inc
jl
loope
ret
sahf
aad
test
push
sub
loope
lret
clc
lock
or
dec
inc
mulb
ljmp
and
enter
clc
cmpsl
pushf
je
sbb
sbb
sub
xchg
or
push
pop
fadds
into
fstpt
es
pop
mov
cwtl
sbb
test
jnp
imul
pop
or
xchg
rorl
mov
pop
sar
mov
push
or
lcall
push
or
push
jmp
push
mov
push
pop
imul
sub
sbb
xor
push
fidivl
jo
add
fsubs
cmp
sub
shr
loop
pop
int
jb
sub
dec
aad
sbb
adc
push
frstor
adc
pop
sbb
inc
push
add
sbb
xor
jnp
fldcw
push
push
mov
add
adc
fldt
fldl
clc
sahf
adc
sbb
adc
inc
adc
and
pop
test
mov
icebp
jb
mov
dec
out
xchg
jo
push
and
and
inc
je
lret
fstps
loopne
inc
xchg
scas
push
mov
and
mov
test
or
mov
inc
outsl
ljmp
jbe
xor
mov
out
add
pop
add
add
cmp
jbe
adc
mov
addl
std
sbb
pop
pusha
fidivrs
ret
shlb
mov
sub
adc
xor
and
insl
push
mov
sub
aas
dec
and
jns
jbe
ret
mov
iret
jl
pop
jnp
add
mov
lcall
adc
movsb
xchg
pusha
mov
test
adc
dec
enter
sub
mov
pop
test
xor
add
sti
jbe
xor
subl
jno
xchg
cmp
add
not
mov
or
or
dec
adc
add
loope
or
sarb
insl
add
adc
xchg
test
push
inc
cmp
je
mov
or
lcall
inc
mov
inc
inc
mov
push
je
dec
cmp
cmpsl
inc
pop
adc
xlat
aas
orb
mov
loopne
shlb
loopne
jle
es
and
aas
sub
add
mov
jg
test
push
daa
mov
pop
test
jne
ret
mov
hlt
mov
sub
stos
test
sub
andl
clc
sbbb
test
mov
cltd
and
add
add
pop
pop
add
pop
dec
jns
dec
xchg
loopne
lea
mov
pop
subb
inc
shl
pop
dec
or
mov
pop
scas
inc
and
in
pop
aam
loop
rolb
adcl
std
rorb
jmp
push
cltd
insb
pop
and
mov
shlb
testl
insb
sub
icebp
mov
dec
dec
jbe
dec
mov
add
mov
or
jb
cmp
cltd
js
sbb
dec
cmp
outsb
das
lods
add
bnd
incb
jae
mov
pop
lea
push
mov
sarb
push
es
add
and
or
lea
push
xor
add
hlt
ljmp
sti
cmp
dec
dec
stos
inc
and
daa
test
pushf
rsm
xchg
cmpsb
test
aam
xor
cmp
inc
inc
pop
rorl
cli
or
mov
out
and
ret
cli
sub
not
in
popf
je
inc
sub
iret
pop
ds
icebp
cmpsb
and
push
or
jne
shl
rorb
and
and
mov
jl
loope
mov
add
pop
sub
sarb
je
mov
movsb
data16
movsb
jge
jno
inc
mov
lahf
cltd
inc
dec
mov
hlt
test
jb
jno
xlat
push
inc
pusha
addb
sub
sbb
push
dec
add
cli
wrmsr
inc
sbb
adc
loop
fs
push
pop
xor
pop
lds
xor
inc
rcll
dec
lock
imul
inc
mov
insb
inc
inc
mov
nop
cmp
lock
adc
gs
dec
xor
dec
add
sbb
sbb
jl
ret
add
fcompl
andl
xchg
lret
out
outsb
clc
pop
hlt
mov
iret
and
mov
out
and
jle
xchg
add
nop
add
sub
jmp
shl
out
xor
and
std
adc
and
inc
add
repnz
inc
or
pop
push
outsl
add
stc
and
bound
pop
pop
and
aad
leave
or
aad
adc
pop
pop
or
adc
sub
xchg
pop
add
cmpb
or
out
cmpl
cld
xchg
sbb
aam
sbb
nop
add
adc
sbb
cwtl
aam
or
jmp
leave
push
adc
shll
add
movsb
mov
pop
int
xor
pop
imul
sub
scas
push
outsb
sbb
in
jne
inc
inc
clc
xor
jmp
xor
or
xchg
add
add
mov
inc
into
enter
cmp
ja
adc
test
push
dec
jmp
fs
fisubrl
in
mov
rolb
pop
jmp
jle
sub
mov
loop
ret
jp
adc
push
xchg
test
cwtl
sbb
pop
sar
mov
jmp
cmpsl
mov
mov
lods
mov
or
testb
das
mov
jle
adc
push
cld
or
xchg
xor
jmp
dec
push
xchg
jno
push
mov
aad
jbe
push
lods
mov
sub
sub
pop
push
jmp
mov
movsb
jno
mov
sbb
mov
ret
insb
ss
xchg
dec
sbb
loopne
insl
cmp
pop
jge
pop
outsb
idivl
mov
jbe
nop
add
jne
fisubs
and
dec
jae
imul
sbb
pop
or
and
add
mov
lock
adc
call
decb
faddp
out
push
sub
jle
pop
cmp
in
orl
cmp
lahf
push
and
addl
std
xorb
jmp
and
jle
xchg
scas
call
mov
shll
test
adc
mov
fsts
pop
cmp
rcrb
fisttpll
testl
and
rcr
hlt
pop
add
bound
call
jmp
cld
push
sbb
pop
fdivrs
cli
and
sub
stc
daa
js
dec
out
or
jecxz
inc
test
out
add
pushf
jmp
push
cwtl
pop
mov
xor
mov
dec
dec
les
lcall
inc
idivb
inc
mov
or
jge
neg
add
lcall
sbb
icebp
inc
jae
test
cmp
push
fildll
adc
mov
xorl
mov
mov
sub
xor
jne
inc
inc
imul
adc
inc
out
adc
scas
dec
test
into
lcall
and
popf
add
mov
test
and
push
mov
dec
mov
sub
mov
or
adc
pop
icebp
inc
mov
push
xor
and
and
and
jne
and
rcrb
andl
adc
sbb
aas
out
jle
std
mov
or
mov
mov
pop
mov
pop
mov
stos
movb
testl
scas
addb
adc
les
test
jmp
outsl
inc
into
jne
inc
or
cmp
imul
cmp
jne
hlt
int3
add
jne
inc
lock
xchg
test
rcrl
push
pop
les
lea
shlb
mov
push
push
scas
sbb
scas
dec
pusha
dec
cld
fdiv
dec
sub
lock
ja
es
and
push
js
subl
call
dec
cmp
mov
sub
xchg
add
push
push
and
js
sbb
shll
add
testb
shr
fidivs
rcll
idivl
or
bound
or
int
adc
adc
inc
mov
les
adc
notb
mov
mov
dec
fcom
insl
fadd
loopne
shr
or
popf
and
adc
sahf
dec
fwait
aam
sbb
jne
insb
mov
mov
push
push
ja
add
pop
and
push
int
or
cmp
shll
sbb
sar
pop
les
pop
jle
fiadds
dec
xor
or
scas
fisubl
mov
mov
and
push
fmull
mov
push
dec
add
cmp
shr
popf
stos
or
sub
sbb
lret
into
jmp
scas
rcrl
push
xchg
rolb
mov
sbb
movsb
int3
sbb
fcomps
test
int3
add
jne
push
lret
mov
jmp
sub
add
imulb
mov
movups
xor
push
stos
mov
bound
inc
sbb
xor
mov
add
mov
inc
add
cmp
pusha
xchg
fcoms
cmp
and
push
ficoms
test
inc
xchg
or
daa
add
test
jo
or
add
and
fadds
cmp
cli
adc
inc
scas
inc
mov
mov
fcoms
pop
mov
adc
mov
dec
pop
cmp
in
push
or
test
pop
sahf
mov
stos
push
xchg
xchg
adc
inc
cs
imul
or
ss
cmp
je
or
incl
pxor
xor
mov
push
mov
cmp
pop
jne
lahf
ljmp
inc
mov
out
add
or
sbb
packuswb
mov
lret
pop
jae
rcrb
fisttps
push
xor
imul
or
clc
add
add
mov
test
mov
jnp
add
push
adc
mov
and
andl
xor
sbb
addr16
mov
mov
and
cmc
jmp
mov
shlb
dec
subb
jle
lds
in
and
test
push
push
pop
mov
shll
je
setg
sub
cld
clc
add
mov
mov
loop
aas
sub
push
jne
movb
lea
sarb
shlb
ficoml
xorb
mov
es
sbb
loop
lock
incl
pop
add
jmp
sub
add
xchg
jne
add
cmp
push
pop
pop
xor
lds
push
test
out
adc
lds
imul
es
or
jl
ficomps
cld
or
scas
xor
push
or
add
testb
movb
add
in
lea
push
sbb
movsl
push
pop
dec
and
mov
mov
sub
mov
inc
sub
fcmovnbe
push
add
sbb
or
addr16
add
cmp
daa
inc
pop
push
ret
jbe
jle
ljmp
dec
enter
aam
sub
adc
mov
adc
xchg
xor
shlb
enter
xchg
addb
push
sbb
dec
adc
or
cmp
mov
ret
loop
inc
sbb
stc
sbb
xor
test
jbe
jle
es
mov
sbb
test
call
icebp
fs
jmp
js
fldl2t
call
pop
cmp
adc
arpl
rorb
fsubr
inc
and
lea
pop
adc
inc
add
mov
cmpl
addl
and
pusha
scas
push
mov
or
sar
out
push
ss
pop
pop
add
add
cltd
cmp
push
add
enter
es
add
push
or
lds
testb
lock
inc
enter
mov
sbb
loopne
js
dec
jecxz
push
push
mov
cmc
jg
dec
dec
inc
xor
leave
and
add
mov
and
adc
sti
or
je
cmp
fimuls
insl
dec
fwait
pusha
inc
neg
sbb
add
sub
loopne
lock
ret
daa
xor
or
and
shll
cmp
sahf
jnp
add
decb
insb
ficoms
scas
test
movb
cmp
ss
sbb
sub
jle
xlat
or
mov
adc
xor
sbb
sub
dec
xchg
fldenv
dec
insb
dec
adc
in
push
movswl
loopne
je
and
and
data16
mov
pop
shlb
cmp
add
mov
add
add
mov
shrd
push
jle
cmp
ss
imul
clc
mov
xlat
data16
or
cmp
xchg
stc
inc
ds
leave
add
jmp
xchg
clc
sub
mov
adc
add
push
insb
incb
push
push
and
pop
inc
rolb
push
add
mov
lcall
mov
out
and
pop
and
sub
or
mov
add
in
push
sub
or
inc
adc
neg
cmp
mov
lock
dec
jmp
shll
push
cmp
push
push
jns
add
jbe
test
inc
lock
mov
shrb
jg
lods
jb
ficompl
push
jo
dec
inc
dec
sbb
jae
pop
or
or
or
daa
xorl
or
adc
stc
push
adc
mov
add
sub
mov
shrb
and
jbe
push
sbb
pop
sub
jne
loop
nop
mov
cmp
add
and
add
and
fs
inc
cwtl
or
enter
push
lock
inc
inc
and
insb
sub
adc
es
jne
mov
sarb
mov
mov
add
mov
xor
or
ret
add
mov
and
adc
add
cmp
je
pop
lock
mov
repz
cmp
cmp
inc
lret
adcl
adc
inc
inc
push
cmp
adc
shlb
cmpb
push
push
insl
push
jmp
insl
cmp
aam
pusha
inc
cld
cld
jl
shlb
mov
cmp
pop
inc
or
mov
inc
rolb
loop
mov
sbb
ds
add
gs
loopne
mov
pop
data16
out
mov
inc
popa
je
jmp
fmul
inc
je
dec
cmp
xor
or
stc
add
and
pop
in
add
cmp
push
push
mov
or
and
cmp
nop
adc
adc
mov
mov
dec
adc
inc
call
dec
add
loop
xor
sbb
out
dec
testb
loope
xor
pop
repnz
loope
add
hlt
sbb
dec
shrb
add
adc
or
mov
xor
arpl
clc
decb
scas
inc
test
shrb
es
cli
pop
or
movsl
je
sbb
cmp
icebp
jp
dec
xor
sub
rcrl
and
add
hlt
and
dec
jmp
cmp
rcll
jo
push
jo
gs
cmp
lahf
xor
dec
jbe
cmp
sub
add
and
bnd
jecxz
je
popf
ret
add
cmp
or
xor
popf
cltd
movsl
add
mov
lock
push
int
out
fsubrl
push
cmp
sub
or
push
rorb
hlt
sub
mov
pop
inc
mov
loopne
iret
xor
dec
jmp
insl
loop
lret
xor
lock
mov
cmpl
cmp
or
push
dec
test
push
mov
push
mov
or
outsb
fstps
cmpsb
imul
pop
pop
call
rorb
sbb
sbb
lret
or
fisttpll
add
cmp
je
mov
fdivs
jge
imul
sbb
cmpsl
xchg
in
testb
mov
pop
pusha
push
je
and
fidivs
int
lock
lcall
or
mov
mov
sbb
mov
out
in
nop
add
adc
and
shlb
sbb
sbb
dec
xor
push
jmp
or
jmp
test
out
xor
xor
or
ljmp
adc
add
in
arpl
aad
jae
cmp
lea
test
arpl
adc
inc
xchg
add
enter
add
xor
adc
inc
adc
xor
sbb
jne
in
cmp
dec
mov
push
adc
mov
or
test
enter
push
or
mov
aad
cmp
cmp
push
stos
mov
dec
outsl
ret
pusha
push
dec
fs
xor
mov
or
jecxz
push
push
adc
imul
loope
and
test
mov
cwtl
fdivp
mov
push
xor
adc
add
or
and
push
sbb
mov
jae
dec
xor
orl
pusha
rolb
imul
lods
and
jge
push
or
notl
or
sbb
sbb
insb
insb
mov
lcall
mov
add
call
sub
stc
insl
xor
push
arpl
xor
cmp
sbb
enter
inc
jmp
das
add
pusha
add
dec
sbb
arpl
sti
and
stc
inc
inc
test
aaa
sbb
mov
mov
outsl
shrb
mov
mov
jmp
test
cld
xor
rol
jo
mov
ja
mov
or
inc
sbb
das
adc
cmp
idivb
inc
in
adc
repz
leave
mov
mov
repnz
adc
or
fdivrl
push
jp
mov
xchg
pop
imul
les
roll
aaa
adc
pop
mov
lods
inc
sbb
xor
movsb
cmp
inc
xchg
sbb
inc
rcrl
movb
adc
sub
dec
rorb
fldl
ljmp
ja
mov
loopne
mov
shll
jno
xchg
add
inc
ljmp
nop
adc
mov
adc
movsl
rclb
sbb
mov
inc
insl
test
cltd
push
pop
decl
loopne
jb
lea
out
sbb
ret
mov
cwtl
dec
sbb
add
lret
push
jb
leave
js
mov
inc
and
shll
mov
mov
mov
add
sub
jmp
mov
popa
mov
and
adc
push
loop
xchg
lds
push
or
mov
jne
jo
and
sbb
push
sub
xchg
test
into
add
adc
fnsave
lret
and
adc
es
or
lock
or
and
add
fcmovb
jmp
shr
or
mov
add
testb
or
bound
scas
push
or
mov
cmp
aam
test
shll
ret
outsb
add
dec
lret
fnstcw
inc
test
sub
ja
inc
jl
inc
dec
add
lea
push
mov
shr
cmp
mov
sub
mov
mov
adc
adc
inc
sub
mov
outsl
ret
adc
outsb
add
iret
adc
rorb
out
decb
dec
or
inc
jbe
rcrb
sbb
mov
sbb
jmp
cmp
fidivrs
cli
and
adc
iret
shl
inc
jl
xchg
mov
rol
and
jns
xor
add
incl
stos
imulb
loope
jo
or
test
test
ficoml
int
sbb
lret
je
dec
call
rolb
subl
sbb
cmpsl
cmp
xor
sub
movsb
rcl
xchg
xchg
push
je
pop
icebp
sub
mov
cmp
nop
sbb
push
add
mov
cmp
cmpsl
fwait
add
and
sub
jne
in
ds
sbb
jmp
pusha
push
ljmp
into
adc
push
and
or
jns
ljmp
test
push
fisttpll
fstp
popa
mov
jle
push
xor
ja
mov
fstps
inc
test
mov
cmp
test
sbb
inc
xor
ja
add
cmp
lock
jl
cmpb
jl
sbbl
incb
xor
andb
push
xlat
lds
push
shrl
push
adc
inc
push
push
mov
push
push
push
xlat
inc
cmpsl
and
loopne
iret
ds
inc
adc
ljmp
aam
add
inc
cmp
insl
or
jmp
inc
bound
mov
dec
add
call
fimull
fs
sub
ret
fbld
adc
enter
out
or
test
loope
into
adc
push
fcmovbe
mov
and
shll
ja
xchg
push
je
mov
or
or
cltd
mov
ds
or
pop
pop
cvtps2pd
lret
adc
movsb
test
movsw
xor
insl
and
scas
outsb
rorb
sbb
les
or
jmp
dec
or
scas
pop
inc
test
mov
ret
enter
rcrb
sub
inc
inc
div
fdiv
fiaddl
fidivrs
sbb
inc
sbb
loope
sbb
xchg
sbb
inc
or
adcl
push
push
inc
lcall
xchg
fcomi
inc
push
test
adc
fs
and
inc
or
test
add
popa
xchg
daa
pop
pop
pop
adc
sub
jae
or
jae
or
pop
sbb
ret
loope
shr
mov
push
test
stc
sub
js
push
idiv
and
inc
adc
ljmp
add
shlb
add
mov
add
mov
dec
movlps
mov
dec
pop
pop
add
jno
in
push
push
adc
es
xor
mov
xor
mov
or
int
and
mov
or
into
jbe
jns
aas
sahf
stos
ror
dec
adc
movsl
push
mov
ss
cmp
add
push
jp
sub
movsb
adc
das
bound
xchg
fstps
pusha
adc
setle
adc
test
pop
and
dec
es
ds
ret
andl
cmc
lods
insl
rorb
cs
jnp
pusha
cmp
push
cld
and
and
pushl
dec
fiadds
rolb
add
xor
inc
jge
insb
adc
sub
and
and
leave
jne
sub
testb
cmpsb
push
jmp
fists
mov
jle
or
je
xchg
mov
mov
mov
pushl
or
mov
je
mov
mov
push
cmp
ja
add
cmp
mov
ret
cmp
jne
shll
cli
shr
mov
adc
mov
dec
cmp
pop
testb
imul
fildll
push
mov
inc
inc
pop
sbb
rorb
jl
mov
adc
pop
xor
es
aam
cmp
scas
sbb
sbb
icebp
pop
or
jmp
neg
je
cmp
jl
iret
push
push
addr16
mov
scas
dec
dec
mov
and
mov
jp
pop
inc
or
sbb
lods
mov
clc
jne
ret
and
pushf
xor
or
cltd
out
cmc
mov
jmp
mov
push
in
mov
adc
push
pop
scas
or
cmpsb
inc
pop
xlat
enter
mov
movsb
rcrb
push
pop
sub
xor
push
movsb
daa
xchg
inc
pop
xchg
sub
pop
imul
outsb
push
push
adc
or
mov
sti
enter
cltd
push
arpl
sub
movsb
add
xor
adc
push
push
ficompl
mov
mov
push
sarl
out
rcl
aam
fdivrs
xlat
fcomp
fstpt
aas
adc
loop
addr16
movb
jmp
or
lods
adc
imul
cmp
lock
mov
ss
sbb
mov
mov
add
push
ret
inc
inc
push
add
dec
jmp
mov
push
outsb
or
imulb
adc
hlt
je
test
ret
fnstsw
adc
cmp
or
jne
or
push
inc
imul
adcl
adc
push
pop
push
popa
add
sbb
mov
imul
lret
jmp
sbb
sbb
lea
or
mov
inc
js
mov
ret
or
fcmovnbe
add
loop
mov
inc
push
out
loop
scas
rolb
adc
aaa
lock
call
push
mov
lcall
add
es
xorb
icebp
add
xchg
outsb
mov
adc
push
adc
decl
mov
add
add
imul
sub
ljmp
testl
into
and
lea
pop
adc
subl
jae
xchg
ja
add
sbbb
mov
pop
mov
aaa
repnz
in
ljmp
loopne
inc
or
hlt
push
xchg
mov
jne
mov
shl
outsb
popa
shll
push
mov
test
fsqrt
push
lea
dec
xchg
mov
or
or
push
mov
fcomps
sub
cmp
pop
shll
inc
repz
addl
xor
cmpsb
cwtl
mov
jge
jl
loope
imul
rol
add
stc
jle
jle
or
in
outsl
jne
enter
xchg
call
or
outsl
fcomps
loopne
cmp
rorb
cmpb
jg
or
cmp
movsl
add
inc
xchg
mov
or
pop
mov
shrl
jecxz
adc
in
out
xchg
mov
or
dec
sub
push
inc
inc
dec
add
or
test
test
div
cli
enter
cli
inc
cli
div
xchg
scas
or
popa
inc
sbb
loopne
mov
push
jnp
sbb
ret
fcoml
adc
push
inc
ret
mov
push
push
clc
add
and
rorl
mov
mov
rolb
dec
dec
cmp
push
xchg
cmpsl
mov
mov
lock
lods
cmp
mov
jp
insl
jno
repnz
pushw
sub
loop
out
rcl
out
jge
xchg
testb
push
inc
mov
or
in
adc
mov
pop
test
rcll
xor
into
lret
jae
rorl
sub
jne
fcomp
sub
ss
inc
test
dec
popa
cmp
mov
int
sub
fmull
xor
push
jno
ret
adc
push
lret
cs
cld
lea
fcmovu
data16
pop
insl
cmpsb
test
and
inc
add
and
inc
inc
and
repz
idiv
sbb
xchg
add
sbb
divb
jb
inc
sbb
sbb
mulb
mov
sbb
out
or
jge
mov
lock
sbb
leave
pop
add
jne
mov
fnsetpm(287
loopne
adc
into
sub
fwait
mov
pusha
mov
jge
add
sub
mov
mov
adc
inc
mov
and
add
inc
mov
push
add
push
nop
push
push
xor
mov
pop
jle
out
adc
out
decb
sub
fs
dec
pop
dec
pop
shr
pop
add
or
push
shll
test
jne
sbb
neg
and
pop
jle
inc
imul
or
loopne
loopnew
or
pop
xchg
fadds
lea
push
mov
mov
mov
push
into
je
push
adc
sub
out
clc
loope
push
push
sti
and
cmc
lahf
push
xchg
mov
repnz
mov
push
movsl
insb
push
add
sub
into
les
enter
sbb
ret
sbb
push
movsb
xabort
fcoml
rcll
add
enter
mov
push
shlb
add
idiv
add
daa
shr
mov
add
in
into
jbe
mov
inc
xchg
inc
lahf
jbe
mov
nop
dec
mov
stos
aas
std
add
xor
inc
cmpb
or
add
dec
cmp
and
mov
repnz
movsb
sbb
dec
add
add
fadds
lar
pop
add
repnz
mov
jp
jne
dec
mov
jb
lcall
adc
clc
push
ret
and
add
push
add
lds
adc
ds
mov
add
add
ret
xchg
add
add
test
popf
mov
mov
jl
mov
je
dec
add
inc
ljmp
movsl
or
add
mov
or
fs
push
add
or
addr16
add
adc
push
add
pop
pop
mov
push
xor
les
adc
or
jae
push
divb
aas
test
lret
orl
inc
and
cmp
xor
into
add
jnp
clc
scas
mov
and
pop
pop
repnz
add
xor
ret
jne
or
mov
mov
mov
cld
shll
pop
jae
dec
movsl
test
add
add
add
sub
mov
lahf
add
or
mov
push
je
dec
pop
or
mov
xlat
dec
pop
adc
sbb
ja
pop
cli
and
and
and
mov
test
ret
pop
sbb
cmp
xchg
add
adcl
out
fldcw
mov
cld
addb
je
ja
or
push
xor
add
dec
inc
jo
xchg
pushf
movsb
xor
ret
inc
cmpsb
dec
add
or
pop
mov
mov
add
inc
cmp
test
adc
sbb
add
add
xorl
into
out
stc
mov
mov
xor
repnz
push
inc
jg
into
into
adc
mov
and
mov
pop
sub
push
pop
nop
movsb
sarl
cwtl
pop
mov
cmpb
shlb
fisubrs
mov
jle
movzbl
hlt
dec
std
pop
rorl
add
leave
lahf
inc
fiadds
out
adc
add
in
jns
add
add
test
and
je
and
inc
shl
or
push
cs
sbb
lret
pushf
pushf
lret
push
xor
xchg
push
add
roll
sub
mov
pop
roll
pop
fs
lods
pop
fmul
cmp
cld
rol
cmp
add
xor
push
mov
and
cmp
mov
add
push
jmp
into
adc
sbb
and
daa
sbb
push
or
and
dec
sbb
loop
bound
loope
pop
ret
jl
or
mov
mov
mov
mov
pop
push
xor
jno
pop
imul
mov
sub
iret
cwtl
orb
sub
inc
jmp
adc
dec
sub
hlt
dec
xchg
adc
inc
insl
jmp
or
out
je
dec
adc
rorb
jb
mov
lret
inc
inc
int3
call
jle
popa
out
enter
lds
dec
add
jo
adc
int
jbe
push
js
jmp
or
xor
or
or
cmp
mov
mov
js
rolb
sub
cmp
test
stos
adc
and
fwait
rolb
mov
test
mov
adc
or
dec
test
pop
sbb
jnp
inc
pushl
leave
and
or
pop
test
ja
testb
xor
mov
hlt
jno
inc
aam
pop
popf
mov
fcoms
inc
movb
pop
mov
outsb
out
sub
enter
adc
test
and
insb
psubd
je
mov
or
mov
fcoml
and
pusha
xchg
lret
in
dec
inc
sbb
clc
dec
dec
pop
lods
lcall
pop
adcl
jge
lea
addr16
pusha
push
pop
push
or
enter
dec
xchg
jl
sub
xor
shlb
mov
lods
push
shrl
cmp
arpl
inc
lcall
inc
add
xchg
mov
xor
add
cs
pop
xlat
add
rolb
mov
js
daa
jmp
push
push
xlat
xchg
sub
pop
mov
xor
in
mov
mov
popa
sar
and
or
pop
repz
xor
mov
inc
mov
or
js
push
rolb
jne
push
inc
loope
cmp
das
lods
movsb
into
inc
push
nop
dec
jmp
addb
jmp
lock
fisubrl
lods
pop
rorb
icebp
or
xor
inc
imul
outsb
outsb
loope
adc
mov
and
push
sbb
pop
add
inc
adc
addr16
pop
add
clc
mov
pushf
test
jo
ljmp
enter
cmp
movsb
sbb
dec
roll
add
clc
push
fistl
add
lret
enter
je
mov
jg
xor
int3
ret
call
mov
test
pop
and
cwtl
das
mov
mov
loopne
lea
mov
inc
inc
mov
int3
popa
pop
bndstx
adc
mov
lock
dec
mulb
nop
push
sub
lock
and
outsb
scas
adc
xor
loopne
dec
dec
loop
aaa
inc
xchg
scas
xchg
fisttps
int
ss
xor
mov
push
js
mov
xchg
shll
mov
ret
shll
inc
xchg
outsb
stos
js
sbb
scas
mov
clc
push
rorb
fcompl
mov
shrl
sub
mov
rol
add
shlb
inc
shlb
ljmp
roll
and
push
adc
in
ret
xchg
loop
mov
sub
jl
adcb
push
mov
xchg
pop
testb
mov
testb
adc
mov
addb
push
xchg
pop
pusha
mov
shrb
and
adc
xor
mov
pop
sbb
ret
jo
nop
pop
xor
int
call
push
daa
data16
orb
mov
or
test
and
jg
data16
or
je
mov
sbb
pop
lea
addl
and
test
and
push
xchg
adc
or
and
push
mov
loope
cwtl
shlb
insl
clc
mov
in
adc
push
cvttsd2si
mov
push
add
pop
pop
inc
sbb
je
pop
inc
adc
push
cs
stos
xchg
fildll
sbb
fsubrp
test
jns
fstps
icebp
fcomps
mov
mov
les
jmp
cmp
lcall
adc
ret
jbe
adc
pop
sbb
sub
xchg
ja
and
push
dec
jge
int
popa
mov
add
stos
or
push
into
dec
mov
in
iret
mov
push
jo
gs
or
fs
arpl
add
fcoml
xchg
push
mov
insl
inc
push
enter
xabort
inc
loopne
mov
data16
jb
aad
inc
es
cmp
adc
les
xorb
jns
sub
mov
fcoms
fs
outsb
dec
add
in
cltd
bound
in
lock
cmp
inc
inc
nop
inc
mov
pop
das
sub
icebp
adc
mov
orl
add
cmp
push
inc
push
or
fs
arpl
sbb
mov
fmuls
adc
add
sub
push
test
fsubr
xor
outsl
sbb
push
mov
adc
sbb
jne
cmp
xor
mov
inc
adc
imul
jg
mov
out
std
sbb
mov
pop
push
inc
add
pop
push
jo
xor
bound
pop
mov
pop
pop
and
mov
inc
xor
and
mov
in
mov
in
test
add
jg
adcl
push
ret
movsb
jecxz
and
call
pop
xchg
les
test
push
adc
xchg
in
jge
jg
aam
and
in
setge
andps
movsl
fadds
sbb
imul
xorb
sub
fmull
and
lock
lcall
push
inc
je
fistps
add
cmpb
je
jns
andl
sbb
ds
std
or
mov
jbe
or
fstps
jne
or
orb
inc
jecxz
mov
loopne
cmpsb
dec
or
aaa
hlt
dec
add
push
orl
cmp
loopne
mov
cmp
xchg
fcompl
imul
aam
in
imul
cmpl
test
fwait
and
inc
shrb
ds
add
sbb
xchg
dec
adc
and
aad
sub
leave
xor
cmp
xor
and
inc
dec
int
and
fs
ds
insb
jecxz
add
dec
xchg
add
enter
add
push
enter
rcr
add
pusha
test
sbb
inc
pop
push
in
stos
aad
xchg
jo
cmpsb
fwait
aam
jns
test
adc
enter
cld
ja
or
nop
sub
in
hlt
or
fs
mov
jbe
and
lds
push
out
xchg
push
xchg
inc
push
insb
xchg
lds
or
daa
loop
mov
sldt
fwait
jmp
dec
add
mov
js
cmp
mov
orb
push
int3
aad
or
sbb
mov
fcmovnbe
pop
dec
fiadds
mov
insl
orb
pop
movsl
fmull
cmp
aam
test
call
jae
roll
or
fsts
orb
adc
adc
cltd
in
inc
loopne
scas
subb
xchg
mov
mov
mov
lock
mov
dec
rorb
mov
gs
loopne
jne
mov
fisttpll
inc
xchg
mov
or
dec
adc
in
dec
push
and
cmp
rorl
mov
xchg
test
fnstcw
imul
mov
les
add
nop
mov
mov
push
rclb
or
inc
xchg
mov
push
loopne
inc
pop
in
mov
mov
fcomps
or
mov
lret
lock
mov
test
in
in
lods
mov
mov
mov
ljmp
or
cmp
dec
movsb
jnp
loopne
sbb
mov
and
ret
sbb
push
rorl
inc
cwtl
adc
dec
pop
mov
adc
enter
popf
pop
or
lea
cmc
xor
pop
fmul
shlb
fucom
push
nop
push
mov
fmull
or
pushf
or
das
mov
nop
sbb
and
sub
mov
lcall
in
cltd
lock
testb
push
in
das
imul
adc
sbbl
nop
daa
ret
movsb
cmp
daa
test
cmp
xchg
cwtl
cmp
in
int3
xchg
pop
and
rclb
sub
lock
pop
or
popa
iret
lret
pushf
pushf
dec
lea
fstpl
cmp
mov
xchg
pusha
mov
xor
push
inc
dec
lods
xor
mov
push
testl
xchg
jl
pop
pusha
cltd
fs
cltd
test
imul
mov
test
cwtl
push
loope
cmpsl
mov
xchg
push
push
jb
ret
mov
mov
daa
cwtl
xor
dec
in
dec
xchg
inc
test
pop
sub
mov
jb
popa
dec
test
xchg
lret
cmp
pop
pop
pop
adc
dec
rorl
jo
in
psubsb
mov
xchg
cmc
lock
adc
jno
xchg
popf
pop
rorl
aam
mov
rorl
dec
hlt
stos
add
fisttpll
stos
or
jmp
lea
inc
stos
add
imul
outsl
add
cs
lock
fsubl
xchg
imul
sbb
xchg
mov
int
cltd
popa
sbb
pop
mov
or
jb
and
and
adc
nop
daa
enter
in
aaa
call
sbb
cmp
push
jp
les
or
jmp
xor
sbb
cmpl
push
shrb
pusha
or
xchg
xlat
jno
aam
sub
jns
ret
adc
inc
ret
test
test
fwait
jmp
mov
dec
lcall
daa
cmp
fst
cmp
cld
fwait
es
in
push
xchg
or
jge
pushf
stc
xchg
mov
incb
faddl
mov
xchg
nop
mov
cwtl
pushf
std
push
mov
mov
mov
pushf
loopne
lds
in
cmp
lret
push
add
int3
add
roll
dec
xchg
loopne
paddusb
in
in
add
pop
sbb
fildl
push
test
or
scas
test
push
adc
jnp
xchg
inc
add
cmpsb
dec
stos
inc
mull
dec
enter
lahf
lods
mov
cmp
mov
sarb
cmp
mov
cmp
cmp
cmpsb
bound
dec
outsl
or
shrb
adc
xchg
xchg
cmc
test
andb
or
mov
pop
xor
xor
add
sbb
mov
insl
sbb
in
ficomps
xchg
test
xor
leave
movsb
xchg
nop
mov
dec
mov
jnp
in
or
mov
lods
lods
mov
fnop
mov
add
mov
xor
rcr
jg
scas
sbb
and
jns
in
mov
sub
sti
clc
mov
xchg
jne
xor
das
dec
mov
push
dec
adcb
nop
mov
adc
xor
adc
pop
or
stos
inc
jno
dec
and
adc
je
fstpl
jbe
nop
in
pop
sbb
sub
sbb
adc
mov
mov
push
popa
mov
pop
and
mov
fwait
std
rorb
aas
cmovne
popa
add
rclb
push
mov
int3
jmp
and
fcoml
shrl
mov
nop
movsl
roll
test
push
je
call
mov
cmpb
cmpsb
pop
sbb
or
orb
test
pop
mov
inc
xchg
sbb
imul
into
xor
cs
inc
sub
dec
jnp
adc
test
mov
dec
fcmove
inc
aam
fsubrl
pusha
leave
jecxz
pop
mov
lea
sbb
int3
fistl
sub
mov
mov
aam
adc
test
mov
mov
push
dec
pop
inc
rclb
lds
xor
dec
and
test
sarb
or
mov
and
addb
xlat
pop
push
popa
fidivrl
adc
push
in
mov
test
lea
adc
and
xchg
mov
fildll
push
inc
sbb
loope
repnz
fs
jne
push
mov
sbb
and
ret
dec
pop
ret
mov
leave
inc
push
stos
mov
add
icebp
lds
mov
imul
cmp
stos
in
mov
jne
movsb
int
aaa
mov
sbb
and
in
adc
adc
pop
dec
stos
push
jb
jae
xlat
push
add
mov
popa
adc
inc
and
jecxz
stos
sbb
push
xchg
mov
rorb
and
in
loopne
fsubrl
jo
sbb
and
add
mov
mov
push
and
sbb
mov
dec
jnp
test
cmp
mov
popa
mov
cmp
insb
std
pushf
std
xchg
negb
add
pop
adc
test
cmp
inc
pop
xor
imul
movsb
test
loope
mov
leave
and
sbb
dec
and
mov
in
push
lds
inc
mov
mov
adc
dec
push
aad
add
pop
push
stos
jge
lods
outsb
loope
lds
mov
gs
and
and
adc
je
or
sbb
cmp
mov
push
mov
pop
sbb
jno
mov
sub
pop
fdivs
jecxz
aas
fdivs
cmp
int3
lea
cmp
lods
push
push
mov
movsl
push
test
dec
sub
and
outsl
xor
lock
imul
je
stos
xor
or
mov
enter
fcoms
push
mov
or
pop
mov
mov
cmp
sub
mov
xchg
and
enter
xchg
push
mov
push
lret
and
aam
call
insb
adc
adc
pusha
out
mov
bound
loope
loopne
int3
xchg
ret
xor
test
mov
mov
les
and
xor
cltd
cmpb
mov
test
fmull
mov
in
fwait
cmp
insl
xorps
mov
addb
add
popa
pop
and
push
paddusw
fdivl
xchg
rep
or
cmp
pop
test
add
cmp
fldt
addl
mov
shrl
mov
xor
adc
mov
fwait
add
dec
jae
mov
inc
ret
dec
lods
push
jae
sub
dec
dec
sbb
pop
pmulhuw
imul
loopne
and
or
stos
add
cmp
push
mov
test
rcll
mov
fdivrl
pushf
fdivl
enter
add
cmp
les
dec
jno
cmc
pop
jo
das
jo
pop
dec
jge
inc
les
xchg
pushf
adc
in
push
adc
or
add
jae
pop
imul
jb
lock
sub
adc
inc
lcall
out
out
dec
stc
jae
mov
sbb
lret
or
cmpsl
xor
cmpl
das
cmp
add
adc
sbb
xchg
lret
add
cmp
mov
test
add
mov
idivl
aaa
stos
xor
mov
and
sbb
and
cwtl
mov
add
cwtl
mov
mov
mov
out
xchg
mov
out
out
ss
in
xor
mov
sub
repz
stos
fs
stos
stos
in
dec
mov
aad
and
rcrb
xor
roll
inc
lds
add
outsb
and
xorl
rcrb
dec
aad
pop
inc
lock
xchg
and
inc
xor
adc
mov
rorl
inc
mov
lea
test
mov
dec
pop
pop
je
test
adc
es
xchg
jne
je
popa
inc
lods
fwait
stos
jo
fsubrl
push
xlat
js
outsb
pop
lds
add
mov
nop
and
xor
pusha
mov
xchg
pushf
push
popa
adc
and
enter
incb
ret
shrb
aas
les
popf
and
les
test
push
outsb
ret
add
icebp
mov
les
push
les
xchg
shr
clc
push
cmp
inc
xor
and
arpl
popf
sub
adc
lahf
push
sbb
ficoml
add
incb
sbb
popf
dec
pushl
fcmovb
inc
cmp
inc
xor
cmp
orb
jg
inc
xchg
cmp
pop
in
push
movb
pop
stos
imul
stc
xchg
fdivs
add
nop
or
fs
or
adc
popa
inc
push
cltd
and
adc
and
insl
mov
push
or
mov
push
ret
in
leave
xorb
add
or
orb
or
leave
xor
rorb
adc
shlb
cmp
add
fists
and
mov
cmpsl
in
aam
add
sub
jo
std
xlat
cmpsb
pop
mov
inc
stos
xor
sti
adc
push
popf
std
inc
enter
push
cmp
or
adcb
fwait
int3
mov
pop
insl
in
cltd
fs
xchg
fistl
adc
mov
les
mov
push
add
icebp
jno
mov
mov
out
xchg
push
mov
test
mov
call
sub
sbb
lds
mov
add
in
sub
int3
insl
ss
nop
lds
inc
mov
test
enter
mov
je
and
push
inc
adc
dec
mov
loopne
call
xor
adc
lods
test
sbb
mov
clc
dec
adc
call
cmpsl
mov
sti
mov
imul
call
jno
and
jp
dec
mov
push
shlb
or
sub
lret
in
mov
aam
in
xchg
inc
dec
xor
adc
or
cltd
and
or
mov
sbbl
pcmpeqd
push
sub
aad
sbb
mov
rolb
addr16
scas
es
ss
add
fsub
and
add
fdivr
adc
jo
sub
shlb
in
test
leave
insb
sbb
adc
xor
xchg
sbb
shlb
mov
outsl
jb
push
call
mov
int3
scas
cmp
test
mov
int
loope
mov
push
xor
xor
push
cltd
fisubl
adc
dec
es
fs
dec
es
jo
mov
add
insl
je
nop
push
subb
push
xor
dec
roll
rol
enter
inc
je
loopne
mov
jo
jne
and
push
add
stc
cmp
pusha
mov
adc
sbb
mov
cmp
je
add
push
xor
push
nop
jl
insb
cltd
add
push
insb
adc
mov
lds
enter
gs
pop
and
lea
inc
mov
cmpsb
sbb
add
aad
fsub
in
or
mov
xlat
fcmovnu
add
sti
fistpl
call
cmp
xchg
jge
test
adc
dec
loopne
mov
test
mov
lock
sub
and
dec
fcomps
xchg
push
push
sar
or
movsl
mov
adcb
xchg
cmp
int3
add
sbb
and
push
mov
in
adc
insb
rcr
cltd
shlb
insl
xorb
enter
pop
rcr
mov
push
adc
xchg
stos
push
test
sub
fisubl
cmp
push
mov
adc
mov
out
icebp
xchg
test
sbb
inc
mov
pop
mov
test
lods
or
push
cld
cltd
mov
sbb
and
sbb
lock
xor
inc
mov
outsl
push
cmp
lock
push
and
dec
jmp
mov
mov
fsubrl
mov
insl
inc
adc
pop
sub
xchg
lea
sbb
shrb
jns
cs
loopne
ja
xlat
push
mov
loopne
or
add
aaa
iret
dec
movb
aam
frstor
add
or
xor
sbb
mov
jne
sbb
test
enter
inc
push
call
mov
loope
cmp
mov
movsb
xor
and
add
adc
in
in
rorl
test
fildll
xchg
fmull
fisubl
push
push
fs
jo
or
sub
cwtl
stos
adc
push
or
dec
pop
pusha
dec
sbb
subb
cltd
mov
push
cmp
inc
insl
mov
adc
pusha
sbb
andl
enter
inc
inc
and
cmpl
or
mov
jo
sbb
dec
push
nop
mov
out
xorb
mov
shrb
cmp
push
dec
sarb
int3
push
fwait
ret
add
push
cmp
cmpsl
sti
adc
mov
nop
fistpl
aam
mov
fbstp
add
jl
push
sti
and
add
pop
push
cmp
pusha
or
fs
sarl
cli
push
sub
dec
push
jb
or
push
add
sub
pop
or
mov
or
pop
adc
sbb
mov
adc
daa
dec
xor
inc
push
and
and
leave
out
imul
aas
aam
iret
xchg
pop
adc
cmp
fs
lock
insb
addr16
or
loopne
out
andl
inc
inc
jmp
repz
rcll
sub
jns
out
fstps
xor
out
pop
sbb
jne
push
mov
mov
aas
fldenv
pop
addl
les
ds
and
out
inc
inc
xor
jo
push
or
inc
push
mov
pushl
or
cmp
dec
mov
fistpl
or
jnp
mov
add
in
repnz
and
shlb
leave
or
jg
rcll
mov
mov
jns
mov
jle
test
and
inc
push
inc
cmp
jns
out
sub
sbb
call
or
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
cmp
adc
pop
pop
lcall
bound
gs
imul
jo
jb
je
jbe
js
jp
xor
xor
decl
cmp
sub
daa
adc
mov
rcll
xchg
adc
push
or
or
outsl
cmp
adc
push
push
outsl
xor
out
push
mov
fstl
repz
popa
outsl
jb
outsb
je
jb
sti
insb
outsl
arpl
fs
out
sbb
push
dec
imul
fadds
jne
push
gs
xor
cs
xchg
bound
and
popa
je
outsl
outsb
push
popa
xchg
test
loope
pop
lock
cmpxchg
fnstenv
add
incl
sub
xor
clc
aaa
leave
loop
inc
outsl
jb
js
je
andl
insl
add
arpl
outsl
add
add
add
je
push
pop
pop
xor
popa
mov
popa
jb
mov
jbe
dec
push
outsb
dec
xor
xor
out
push
cmp
dec
xlat
mov
cmp
add
das
das
adc
cmpsl
jge
push
dec
push
inc
inc
gs
insl
and
dec
outsl
jbe
dec
arpl
push
ficomps
sub
addr16
dec
jne
xchg
xchg
push
mov
inc
jo
imul
rcll
inc
insb
into
cmp
out
adc
xchg
cmp
fdivl
outsb
jns
jg
addr16
ja
inc
push
jne
xor
pop
xor
and
daa
push
scas
clc
sbb
jne
dec
js
push
jne
out
jae
xchg
pop
dec
inc
ds
inc
imul
das
jo
or
in
xchg
fcomip
mov
push
adc
ud0
add
sbb
inc
pop
jo
les
mov
xchg
lahf
loop
mov
stos
jg
sub
sub
cmp
stos
rol
pop
pop
aam
mov
jg
cmp
jge
jg
cmp
inc
bound
jo
test
cs
and
push
mov
dec
movl
fcoms
insb
jae
cs
dec
mov
mov
inc
int
add
jo
in
pop
fwait
in
insl
and
jb
jbe
dec
push
push
sbb
or
dec
dec
inc
sbb
and
or
xor
xor
sbb
cltd
push
scas
push
jo
imul
insl
pop
mov
je,pn
jo
xchg
pop
fdiv
lret
je
sub
and
add
cmp
ds
scas
mov
je
or
xorb
inc
popa
cltd
insl
xlat
sahf
and
daa
mov
jne
pop
fidivs
insl
and
insl
push
xchg
inc
cs
xor
lock
or
dec
rolb
jnp
lcall
mov
add
xchg
and
movsl
mov
mov
sbb
jp
imul
or
fs
add
mov
je
cs
or
fldenv
dec
in
ds
xchg
xor
popf
jb
loopne
sbb
and
mov
adc
cmpb
sub
arpl
cmp
arpl
dec
popa
sub
mov
popf
mov
inc
xchg
insb
imul
out
xor
sbb
or
push
lcall
mov
sbb
pop
xor
loopne
dec
jno
jns
push
fistps
nop
andb
pop
mov
cmp
xor
lret
aas
xor
hlt
pop
xor
sbb
sahf
dec
mov
sbbb
and
outsl
outsl
adcl
xor
push
pop
shll
add
inc
xchg
ficoml
sarb
push
gs
pop
ljmp
mov
xor
inc
test
or
arpl
dec
outsl
mov
bound
push
cmp
cmp
mov
jecxz
in
ljmp
imul
stos
cs
shll
or
xorl
push
push
hlt
add
insl
imul
or
ja
in
and
roll
or
and
pop
push
cmp
jne
jae
pop
popf
mov
fsubl
add
pop
out
sub
ret
jb
or
fsubrs
push
sub
lret
inc
sub
pop
divb
jo
jmp
jo
mov
and
cmp
cwtl
ja
ds
mov
mov
inc
inc
and
dec
cmp
fs
and
jg
lcall
loopne
sahf
pop
fiaddl
cmpb
psubq
lret
jno
icebp
pusha
inc
or
iret
mov
clc
ret
movsl
add
xorl
jae
jae
push
loop
imul
sbb
push
cmpsb
gs
add
add
xor
jg
in
adc
inc
jae
je
and
iret
pop
dec
pop
add
add
xchg
icebp
jne
jne
sub
xor
lods
rcrb
add
adc
add
ljmp
testb
add
add
and
push
pop
pop
or
jo
add
ds
push
pop
hlt
and
or
pusha
data16
in
add
js
or
sub
add
jbe
xor
sbb
addb
add
fisubrs
adc
ret
add
orb
daa
push
cmpb
push
and
in
popf
fldcw
xor
int3
push
dec
cld
sbb
ja
mov
loop
test
and
push
stos
int3
js
jo
fdivrl
rorb
sbb
jb
lea
mov
and
xchg
adcb
clc
mov
in
inc
pop
push
adc
adc
and
or
mov
pushf
jo
add
and
pushf
jo
or
pop
jo
or
data16
and
and
push
jno
pusha
in
test
jl
mov
iret
push
cltd
nop
fwait
and
sub
cmp
dec
dec
add
test
cmp
xchg
dec
cs
adc
add
mov
addb
sbb
add
add
add
add
mov
inc
add
aaa
or
cmp
add
push
adc
out
and
pushl
addl
mov
xchg
xchg
xchg
call
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
pushl
mov
mov
enter
int3
int
iret
rcl
rcl
aam
call
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
inc
adc
idiv
stc
cli
sti
cld
std
inc
inc
movsb
adc
sub
call
pop
sbb
add
xchg
push
sbb
push
pop
jg
xor
ja
inc
cs
jae
jb
push
call
dec
stos
inc
sbb
ja
ss
popa
mov
bnd
mov
daa
pop
lea
dec
mov
popa
addr16
outsl
js
push
push
inc
push
mov
es
dec
and
insb
gs
mov
mov
jne
dec
mov
daa
add
insb
outsl
aas
lret
scas
in
dec
imul
mov
imul
ds
and
inc
jb
test
insb
jns
daa
pop
enter
mov
jo
mov
sbb
lcall
addr16
cmp
outsb
adcb
pushw
mov
inc
movsl
jns
imul
pusha
inc
jbe
push
rorb
jns
sbb
shlb
lret
push
clc
popl
test
clc
mov
pusha
gs
stos
loopne
and
or
test
mov
cwtl
xchg
pop
pop
pop
push
push
jae
insl
mov
jp
aas
cmp
mov
shrb
imul
xor
outsb
gs
mov
data16
xchg
xchg
les
push
push
push
dec
testl
aam
cwtl
repnz
mov
fcmovb
cmp
mov
arpl
xchg
mov
imul
mov
fistpll
xchg
inc
outsl
jae
pop
cmp
in
xchg
jg
addr16
shlb
adcl
push
pop
aaa
mov
pusha
push
or
aad
sbb
je
outsl
xchg
or
arpl
daa
xchg
mov
data16
jns
arpl
pop
cmp
cmp
add
idivl
xor
sub
fldcw
es
jle
sub
sub
dec
fstpt
sub
sub
push
jp
or
cmp
jmp
mov
repz
cmp
lret
roll
pop
pop
cwtl
into
xor
lods
jb
sbb
push
jb
imul
jo
ss
lret
add
xor
lods
sbb
push
xor
in
and
es
jo
jo
inc
out
mov
jl
pop
adc
in
lahf
sub
cld
push
hlt
push
call
les
out
cwtl
dec
add
sti
push
xchg
idivl
aam
cwtl
nop
inc
mov
cmp
imul
js
scas
stc
cmp
jo
pusha
adc
pop
pop
pop
push
fidivl
dec
dec
data16
notb
out
jns
pop
push
int3
push
fmuls
dec
dec
loope
lahf
out
inc
inc
enter
out
jns
je
cmp
out
sub
cmp
repz
sbb
adc
scas
jge
push
add
decl
repz
repz
fisubrs
or
incb
test
repz
repz
inc
xor
sub
jns
iret
sbb
std
in
loopne
lahf
out
sahf
mov
insb
inc
sbb
cld
cmp
repz
mov
pusha
xor
push
xchg
sbb
loop
or
shlb
xor
dec
jns
push
xor
test
cwtl
cmpsl
pop
push
outsl
pop
cmpsb
bound
fs
sahf
repz
mov
jb
xor
popf
addr16
es
xchg
lods
pcmpgtw
xor
add
jle
push
sub
incl
dec
jae
mov
inc
mov
sbb
push
inc
dec
xor
inc
dec
dec
dec
push
push
loop
and
xor
testl
dec
inc
add
decl
sub
adc
incl
popa
into
mov
repz
mov
xor
jnp
inc
loop
mov
ds
pop
jnp
rcrl
clc
lret
sbb
jb
pop
repnz
aas
xchg
jge
arpl
cmp
adc
dec
scas
jp
das
in
sti
adc
fisubrs
and
cmp
dec
repz
iret
lret
add
inc
mov
mov
int3
push
test
sub
fwait
ss
sbb
pop
ljmp
pop
jns
ds
xor
incb
int3
dec
dec
xor
dec
popf
pxor
lcall
outsl
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
ljmp
and
xchg
lret
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
decl
out
fcoml
cmpsl
xor
ds
dec
xchg
scas
lods
inc
clc
cmp
push
xor
fdivr
dec
mov
pop
and
es
mov
xor
mov
flds
sbb
add
stc
mov
or
push
dec
push
push
inc
inc
or
cs
jne
outsb
jbe
and
add
rorb
jo
inc
sbb
ficoms
insl
cmpsb
imul
and
push
jns
dec
push
sub
mov
inc
add
dec
cs
decl
add
pop
inc
pop
das
add
sub
clc
pushl
push
pop
movsb
sbb
inc
sub
sub
fidivl
pop
dec
add
xor
jb
mov
mov
dec
ss
aaa
sbb
dec
inc
sub
ja
pop
sbb
aas
pop
pop
dec
inc
push
add
add
fstpt
push
sub
aas
xor
sbb
push
sbb
sti
ja
and
lods
inc
sbb
adc
cmp
adc
loopne
jg
inc
dec
or
add
inc
cmp
cmp
pop
adc
cmp
sahf
pop
push
add
out
inc
and
push
push
or
pushl
pop
push
cmp
es
or
inc
pop
push
push
push
xor
es
push
es
inc
add
xor
add
js
pop
jge
inc
inc
add
xor
adc
mov
jl
fisttps
mov
pop
aad
dec
sbb
xchg
cmp
dec
push
dec
es
test
or
and
je
lea
sub
and
sub
dec
pop
cs
push
add
sub
imulb
inc
sub
and
ds
sbb
repnz
jge
xor
sub
das
sbb
pop
dec
sub
push
or
and
pop
je
push
dec
das
cs
int3
dec
sub
das
xor
dec
pop
popa
jle
xor
fiaddl
sbb
xchg
shlb
sub
fmuls
cmp
cmp
push
push
mov
scas
dec
test
jb
push
sbb
pop
push
gs
out
xor
xor
xor
or
mov
and
cmp
cmp
shrl
adc
pop
jo
jg
scas
testb
pop
pop
adc
mov
andl
movsl
adc
decl
push
adc
dec
cwtl
in
push
cmp
repz
xor
push
jne
jg
out
sahf
out
lea
push
lahf
daa
fsubp
jns
mov
in
outsl
stc
cmp
sti
jg
push
fsubr
cli
or
imul
daa
lock
sbb
and
and
inc
hlt
inc
adc
dec
inc
cwtl
push
mov
hlt
ds
inc
pop
jp
cmp
outsl
insl
mov
pop
and
fmuls
je
push
test
push
popa
je
xchg
inc
ret
call
inc
es
bound
xor
and
push
or
sarl
movaps
repz
inc
dec
ja
stc
cmp
repz
mov
out
sahf
cmpsl
aas
push
push
jno
sahf
cmpsl
stc
mov
inc
notb
jl
sub
sub
addl
pushf
push
or
data16
loop
sub
dec
aas
scas
mov
scas
dec
add
add
cmp
pop
pop
test
jnp
ss
inc
adc
js
push
xchg
mov
xor
cmp
dec
or
xchg
xor
stos
or
jmp
pop
fisttpll
sub
fsubrp
and
push
push
cmpsb
inc
inc
add
lcall
sub
fcomi
jecxz
add
sub
sbb
adc
popf
pusha
ss
insb
push
ds
xchg
arpl
and
pop
sub
or
das
pusha
sub
dec
pop
cmp
inc
add
jp
push
movsb
mov
add
shll
out
dec
xor
push
faddp
cmp
or
xor
test
jae
ss
ret
test
push
cld
xor
out
pop
ds
jo
adc
add
mov
xlat
push
push
xor
cmp
outsb
scas
inc
adc
add
pop
jo
sub
push
add
daa
daa
and
cwtl
adc
xchg
insl
push
xchg
adc
dec
sbb
ss
pop
nop
add
xor
divb
sub
push
cmp
jbe
or
cs
sbb
je
insb
push
inc
cld
jbe
pop
out
inc
cmp
inc
cltd
cmp
pusha
mov
pop
adc
push
xchg
sbb
fildl
fwait
inc
jle
sub
cs
nop
mov
pop
xor
xchg
lds
imul
sbb
cmp
mov
ret
fwait
dec
add
sbb
mov
inc
xchg
das
inc
shr
or
inc
dec
xor
sbb
ss
clc
push
adc
mov
and
add
insl
int3
jecxz
xor
icebp
in
xor
mov
aaa
outsl
jle
push
popa
cmp
and
aaa
daa
push
or
sbb
sub
into
imul
sbb
dec
loope
jb
dec
mov
adc
sbb
imul
sub
push
divl
inc
dec
pusha
fdivs
call
adc
adc
aam
xchg
xor
inc
lock
out
and
jle
adc
xlat
push
in
dec
cmpl
addl
ss
inc
jp
jbe
pop
dec
aaa
push
gs
clc
push
pop
sahf
push
xchg
mov
adc
cmpsb
adc
mov
cmp
xor
sub
inc
outsb
push
rorb
and
dec
movsb
popf
sarl
daa
mov
or
cs
sub
or
sub
sub
sub
pop
loopne
adc
filds
xchg
dec
enter
adc
fsts
sub
pop
add
push
daa
aas
pop
xchg
imul
adc
clc
aas
push
insb
pop
jg
inc
sbb
sbb
sbb
mov
push
push
pop
inc
mov
push
add
xor
adc
sbb
and
rorb
sbb
mov
stos
add
mov
and
pushf
js
jae
add
sub
into
and
addb
ja
and
int3
jg
jae
insl
popa
imul
cmp
push
pop
outsl
jo
or
sbb
push
ja
mov
xchg
adc
push
pop
repz
repz
inc
push
add
in
ds
dec
add
mov
mov
ja
xor
cmp
push
pop
js
and
jnp
popa
and
or
addr16
notl
je
in
push
lret
inc
sbb
sbb
cmp
inc
jmp
test
inc
mov
jmp
in
or
push
push
pop
and
sub
rcr
pop
mov
rcll
adc
sbb
std
pop
pushf
jns
inc
sbb
xor
fs
pop
packsswb
push
inc
movaps
sub
pop
and
sbb
pop
dec
fucomip
in
push
out
push
inc
sub
sbb
pop
mov
loope
xor
and
dec
mov
push
fbld
xchg
add
push
out
pop
int
popf
add
add
or
pop
sbb
mov
xor
sbb
or
add
cs
out
and
hlt
jno,pn
ds
add
jae
es
test
pop
sub
loop
mov
dec
push
push
push
das
xor
xor
adc
and
inc
jno
pop
sbb
inc
fisubrl
mov
add
addr16
inc
inc
or
dec
fisubrs
xor
je
inc
xchg
insl
dec
jae
push
test
jns
push
cltd
lea
test
jb
outsl
imul
mov
jle
jge
dec
lods
imul
push
mov
jmp
inc
add
mov
jo
mov
cmc
call
cmp
and
das
xor
pop
xor
outsl
adc
inc
adc
clc
das
jecxz
push
and
or
cs
ja
pop
and
xor
pop
sub
adc
jbe
add
aas
mov
clc
or
inc
cs
xor
inc
fwait
mov
sub
jle
or
jnp
sub
xor
aas
or
outsb
adc
sub
mov
clc
mov
xor
dec
mov
mov
mov
test
leave
sub
inc
enter
dec
jbe
cwtl
sub
clc
outsl
roll
dec
adc
xlat
cmp
or
xor
mov
sbb
aas
add
test
les
inc
xor
or
fs
mov
outsl
xor
fistps
mov
pop
push
inc
stos
scas
push
jmp
add
cmpsl
sub
dec
pop
bound
add
inc
outsl
push
insl
pop
lcall
insl
repz
sub
adc
or
dec
or
push
es
cmp
pop
rcll
sub
pop
aaa
mov
sbb
inc
push
dec
cmpsl
rclb
and
sub
cmpsl
repnz
loop
repnz
cmp
xchg
pushf
pop
dec
pop
push
fwait
outsl
or
sarl
iret
dec
frstor
repz
mov
fbstp
fbstp
shl
shl
add
in
iret
cmp
add
cmp
in
mov
clc
push
xchg
and
jo
and
in
push
jo
add
cmp
pop
jp
inc
mov
jl
add
and
loope
gs
inc
inc
push
stos
adc
jo
cmp
cld
pop
call
outsb
sbb
jno
jnp
pop
rolb
cmpsb
cmpsb
sub
dec
sub
xor
daa
idiv
mov
push
jg
push
adc
mov
mov
sbb
stc
jp
jno
sub
and
sbb
jno
adc
or
int
into
mov
push
adc
outsl
and
cmp
mov
adc
test
js
adc
stos
sbb
cmp
arpl
popf
mov
pop
adc
adc
inc
daa
mov
push
jecxz
cmp
push
push
arpl
pop
dec
sub
adc
inc
sbb
imul
in
adc
push
and
jmp
pop
pop
pop
add
call
pop
add
out
sbb
sbb
aam
add
movaps
push
push
mov
fmuls
dec
sub
imul
cli
sbbb
sbb
sbb
push
cmp
mov
enter
cmp
add
ds
mov
dec
lea
call
jge
lods
xchg
add
or
sbb
add
add
es
or
xor
pop
pop
inc
xor
add
add
push
inc
pop
cmp
sbb
cmp
push
sbb
push
dec
pop
push
pop
inc
int3
push
mov
add
push
push
dec
add
cmp
or
out
call
loope
cmc
ret
jl
sub
inc
lods
cmp
push
push
jg
cltd
mov
xor
sti
icebp
xchg
adc
push
dec
push
mov
lret
or
or
xor
adc
pop
js
mov
adc
pusha
popa
pop
adc
lods
leave
addl
out
scas
mov
lcall
in
hlt
sub
or
stos
das
adc
add
sub
mov
add
adc
xor
adc
pop
sbb
adc
add
adc
adc
jg
sub
and
jbe
popa
inc
mov
adc
insb
and
sbb
jnp
ss
add
jbe
xorb
enter
sbb
jmp
or
mov
lods
call
mov
sub
xor
or
out
scas
add
sub
pop
adc
loopne
dec
cmp
lods
cmp
cmp
and
gs
loop
aad
adc
inc
and
and
adc
dec
cltd
adc
pushf
dec
cmp
inc
add
or
icebp
js
add
fnsave
iret
sub
loope
sbb
lock
dec
and
mov
das
sbb
mov
adc
pop
in
inc
sub
lods
ljmp
push
testl
mov
ja
int3
and
sbb
inc
cmpsl
mov
dec
insb
cmp
cmpsl
xor
stos
jo
push
and
mov
jmp
mov
insl
cmp
mov
sbb
push
inc
cmpl
sub
nop
sub
adc
push
repz
cmp
in
add
pop
pop
es
push
cmp
push
or
es
push
aas
pop
or
dec
jg
jmp
scas
sbb
scas
aas
pop
xor
pop
and
sbb
jbe
adc
ficoml
or
sub
aas
je
daa
inc
sub
js
xchg
push
imul
pop
pop
sub
sbb
sub
daa
pop
dec
or
pop
and
int3
jo
arpl
jae
add
xor
inc
and
rcrb
shll
das
out
cmp
adc
clc
mov
je
and
out
push
sbb
ss
push
flds
aaa
xchg
jo
insl
jbe
xor
sub
ja
clc
add
ds
ficomps
cmc
call
sub
insb
gs
ja
dec
pop
mul
fs
imul
add
adc
movl
in
movsb
sub
and
push
jecxz
sbb
mov
add
in
push
inc
push
mov
fwait
push
inc
push
cmpsl
ret
lods
push
rcrl
mov
cmp
push
jo
jge
xor
out
cmc
or
fwait
int
divps
adc
dec
inc
addr16
inc
imul
pop
add
add
mov
push
dec
dec
jne
or
lds
shrb
iret
adc
jnp
sbb
ljmp
mov
ja
mov
lods
pop
out
decl
out
dec
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
jle
sub
mov
sbb
das
in
adc
pop
sbb
xor
addb
fsubs
sbb
ljmp
test
xor
dec
xchg
pop
shl
dec
push
nop
mov
adc
adc
int3
mov
aaa
xor
adc
add
pusha
dec
scas
pop
pushf
add
push
xchg
jb
jle
sub
outsl
push
dec
imul
jb
outsb
dec
mov
in
cmp
pop
sub
sahf
dec
cs
in
jns
sbb
or
daa
iret
dec
repz
and
dec
fdivrl
iret
and
orl
mov
mov
xor
pop
add
scas
dec
pop
aam
and
cwtl
pop
arpl
dec
popa
sub
fnstcw
cmp
xor
xor
sub
sub
xor
inc
xor
inc
inc
pop
xor
add
outsb
mov
cmp
insb
add
outsb
add
dec
sub
cmpsl
mov
js
ss
sbb
loopne
jne
cld
decl
lock
icebp
dec
jp
mov
into
ret
mov
mov
bound
je
bound
mov
xor
adc
out
and
sub
pop
and
mov
adc
aas
ja
adc
lods
adc
inc
das
pop
fistpl
adc
xlat
das
or
adc
xor
out
add
sahf
add
aaa
xorb
rcrb
lds
dec
xchg
daa
sbb
jo
outsb
sbb
inc
es
and
and
adc
out
pop
jg
add
shrb
ret
outsb
pusha
inc
adc
imul
and
inc
add
inc
add
ret
daa
stos
adc
lret
rclb
shlb
mov
rclb
nop
jno
inc
movsb
loopne
inc
das
dec
in
das
pop
das
jge
xchg
inc
xor
cmpsb
push
outsl
dec
in
sbb
fs
mov
scas
mov
mov
fildl
aaa
lods
jge
out
movsb
es
scas
pop
mov
in
jns
cmpsl
push
ret
aad
ds
push
rcl
pop
into
ds
jae
fldt
push
jecxz
jo
sbb
push
inc
fisttpl
out
fwait
mov
mov
pop
jnp
pop
jl
xchg
pop
gs
test
arpl
cmp
repz
inc
jmp
js
enter
shlb
lds
rol
pop
pop
lock
push
and
pop
pop
xor
pusha
pop
lods
popa
scas
cwtl
cmp
cmpsl
daa
jns
pusha
dec
int
jns
iret
xchg
push
movsl
outsl
rclb
cmp
ljmp
stos
cmpsb
loopne
mov
negl
in
cs
into
push
scas
push
out
xor
mov
sbb
sahf
dec
imul
ds
xchg
push
iret
repz
outsb
mov
jge
leave
int
popf
mov
ss
jecxz
call
out
ds
outsl
jl
out
lea
cs
pop
xchg
cltd
mov
lds
xlat
fucom
imul
add
out
mov
mov
sbb
fsubp
jae
xchg
enter
repz
fcomip
fwait
xlat
jl
aad
push
sub
adc
ja
lahf
out
imul
push
lcall
mov
cmp
cmpsl
es
and
out
or
mov
adc
imul
cmpsl
mov
in
mov
sahf
out
nop
scas
into
in
out
ds
mov
lea
cwtl
mov
sbb
repz
push
les
mov
sahf
out
ds
inc
test
out
xchg
xor
repz
xor
cmp
repz
pop
ja
stos
out
ds
lret
xchg
es
pop
test
cwtl
rorb
and
jg
test
incl
dec
sbb
scas
sub
adc
and
rcrb
push
push
mov
xor
adc
mov
pop
pop
mov
scas
in
bound
int
mov
leave
loop
and
push
pop
inc
std
mov
lahf
add
idivb
in
push
push
mov
sbb
pop
incl
mov
ds
adc
or
or
repz
adc
daa
or
jl
add
add
roll
sbb
push
adc
pop
inc
inc
stos
subl
jae
popa
push
aas
inc
push
stos
or
inc
sbb
loope
testl
push
pop
xchg
cmp
jae
cmc
pop
inc
jnp
xlat
push
loop
int
fiadds
es
dec
cmp
dec
cmpsl
fst
inc
je,pn
push
ljmp
cmpsb
dec
add
aad
or
push
insb
pop
imul
dec
pop
je
jns
rcr
cmp
jp
das
cmp
xchg
outsb
xor
adc
push
popa
mov
ret
loope
jne
dec
or
dec
mov
ja
out
inc
ss
lods
push
push
cwtl
push
jbe
les
push
add
add
cmp
ja
cwtl
fisttps
push
ds
repz
ret
adc
popa
insl
jo
sti
leave
mov
je
push
addr16
jo
jae
gs
jne
and
aas
subb
cmp
or
sahf
lcall
push
or
cmp
xor
xor
xor
fucomip
fldt
xor
xor
xor
cmp
push
add
inc
cltd
in
dec
lcall
out
insl
outsl
pop
and
cmp
sbb
sbb
adc
and
sub
pop
lret
sub
pop
bound
jo
sub
or
sbb
sub
push
lcall
es
les
daa
inc
sbb
aam
sub
add
cs
fmull
outsb
sub
pop
push
adc
pop
js
push
mov
test
aas
testl
xor
xchg
or
xor
sub
fidivrl
xor
push
dec
pop
or
orb
mov
add
test
mov
sbb
cmpsb
xor
daa
add
nop
or
add
pop
pop
shlb
sarl
or
cmp
sub
cwtl
mov
or
jbe
cmc
sub
pop
cltd
or
jg
rcll
add
out
sahf
sbb
out
push
and
jns
inc
push
andl
sarl
dec
cltd
or
xchg
data16
xor
or
insb
ss
or
or
adc
fwait
addr16
sbb
and
iret
xor
jnp
fstpt
inc
mov
mov
mov
fldcw
push
rorb
fwait
int
mov
test
sub
add
or
ss
pop
add
int
sub
adc
push
push
dec
int
mov
str
add
xor
xor
incl
pop
fisubrs
subl
and
scas
jne
adc
inc
sub
das
xor
repnz
orb
inc
sub
insb
sub
inc
push
cmpsl
xor
pop
inc
dec
daa
fnstenv
popa
addr16
mov
js
enter
sti
aaa
adc
cmp
aaa
sub
hlt
inc
add
mov
and
ss
insl
iret
inc
imul
xor
mov
inc
mov
lahf
sbb
pop
push
insl
xor
daa
and
mov
rcrb
das
stos
pop
push
pop
adc
mull
int3
ret
lods
daa
jge
push
les
das
das
rclb
shl
iret
lock
sub
mov
adc
mov
movsb
mov
sub
daa
add
lds
push
cmp
sub
das
dec
dec
rcrl
fisubl
pop
and
les
movl
pop
and
xor
or
aaa
adc
mov
or
aas
das
pop
mov
xorb
outsl
pop
cltd
daa
lahf
pop
mov
adc
aas
pop
int
stos
adc
addb
jg
je
movsl
jno
std
push
xchg
adc
fisttpl
pop
adc
mov
shll
aaa
sbb
xchg
lret
cld
add
push
inc
mov
inc
dec
fbld
adc
inc
sub
cmpsb
js
adc
inc
jmp
adc
and
aaa
pop
lds
jg
subb
mov
and
imul
sbb
dec
js
gs
cmp
sub
ja
cmpsl
imul
lods
adc
adcb
cmpl
add
stc
rol
sbb
add
insb
push
push
filds
sbb
js
test
adc
das
mov
jae
and
add
ret
aaa
xchg
lcall
mov
add
add
cmp
sbb
mov
and
xchg
data16
pop
dec
pop
test
es
hlt
fdivr
pop
cmp
adc
inc
sbb
push
jno
loopne
ret
lcall
sub
inc
testb
fwait
cmp
sub
or
dec
mov
and
push
stos
sbb
inc
das
mov
adc
and
mov
pop
clc
adc
clc
mov
mov
cmovg
or
inc
inc
in
test
xchg
enter
pop
or
push
in
test
lea
cmpsb
push
pop
add
shll
into
call
inc
out
dec
fmuls
inc
xorb
adc
shrl
aas
dec
jo
pop
jle
gs
or
dec
cmp
xchg
inc
and
mov
sub
sub
dec
test
push
cmpsl
push
cmc
les
push
adc
add
xor
push
movsb
lods
pushf
push
pop
mov
les
push
dec
add
fs
inc
cwtl
rol
cwtl
cmp
ficompl
xor
in
dec
add
jb
data16
roll
sbb
cltd
leave
mov
xor
lret
pusha
mov
mov
xor
inc
lods
xor
lcall
adc
or
sub
xor
or
aaa
stos
addr16
xchg
nop
pop
sbb
inc
inc
hlt
adc
dec
add
xor
jb
loop
ror
sarb
adc
or
and
rorb
call
push
xor
mov
push
inc
push
adc
mov
fisubrl
mov
pop
adc
inc
cwtl
or
icebp
mov
push
stc
sbb
or
into
bound
jns
pusha
adc
adc
pop
ja
xor
xor
mov
inc
lcall
jge
cmp
push
mov
pop
ljmp
pop
and
add
lea
xor
and
test
mov
jb
aaa
in
adc
mov
imul
das
pop
and
mov
imul
movsl
clc
push
or
out
mov
sub
adc
adc
cmp
inc
push
sub
test
mov
jge
push
jns
jns
je
jo
jmp
cmp
imul
xor
xor
add
pshufw
and
or
pop
and
adc
pop
outsl
dec
lock
sub
das
inc
push
add
mov
push
pop
xor
xor
jg
xor
dec
sub
inc
and
dec
ss
inc
ds
and
ss
aaa
inc
call
pop
pop
adc
pop
dec
add
ss
aaa
cmp
xor
dec
es
das
sub
xor
add
add
or
sub
and
lret
insb
push
pop
jno
push
or
sbb
inc
dec
push
push
sti
jg
sbb
xor
and
pop
dec
xchg
mov
lcall
add
pop
sbb
or
dec
test
xor
push
pop
dec
xor
add
call
cmp
sub
dec
inc
dec
xor
pop
ss
adc
and
pop
or
add
in
jne
loope
cmp
and
mov
pop
and
mov
ret
push
and
mov
push
jg
add
test
cmpsl
ds
and
jmp
dec
dec
movb
xchg
cmc
push
add
pop
adc
sbb
loopne
or
inc
ds
lock
xchg
pop
add
inc
xor
adc
aas
mov
stos
das
lea
pop
test
and
cwtl
lods
push
outsl
inc
dec
add
inc
fbstp
adcl
jp
les
inc
xor
fldt
incl
push
push
add
popf
leave
clc
pop
pop
push
mov
push
push
inc
push
dec
inc
dec
rcrb
and
push
dec
add
xor
add
xchg
out
inc
sub
mov
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
jmp
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
cmp
jmp
icebp
fwait
rol
fwait
in
inc
mov
bswap
mov
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
call
lret
sub
adc
or
cs
insl
sub
adc
or
or
ljmp
leave
ret
sub
xchg
mov
data16
mov
call
cltd
incl
mov
movsb
sbb
insb
aaa
push
dec
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
mov
pushf
pop
rep
cs
arpl
test
add
mov
mov
nop
jmp
push
movsb
mull
jno
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
call
push
sbbl
int
pop
outsl
and
cmp
jp
jge
daa
dec
sub
sub
cmp
jmp
aas
and
inc
das
dec
bound
inc
dec
pop
cmp
aaa
cmp
imul
pop
push
sbb
jns
jno
inc
sub
decl
insl
push
pop
xor
jae
insb
dec
popa
sub
pop
pop
arpl
and
push
inc
call
xor
pop
jb
jg
or
int
das
or
das
das
xor
inc
cli
and
xor
iret
jle
jg
sbb
xor
pop
add
cmp
pop
push
into
insb
cmpsb
ja
mov
aaa
pop
das
jne
addr16
daa
pop
daa
inc
xor
push
cmp
and
xchg
popa
pop
out
and
dec
aas
cmovno
xor
mov
sbb
xor
dec
shrl
mov
sub
push
xor
xlat
popf
mov
cmp
inc
pop
inc
inc
sbb
out
xor
and
aaa
inc
push
inc
cs
scas
fstps
inc
add
pop
lods
dec
test
and
mov
fiadds
out
ret
or
and
push
add
xor
cmp
mov
pop
iret
jle
scas
bound
aaa
fsub
inc
adc
push
mov
pusha
fsubrl
jl
mov
sti
outsb
enter
mov
push
shrb
scas
scas
push
sbb
dec
les
mov
jle
mov
push
adc
dec
or
int3
or
xor
mov
sub
or
push
cmp
cmp
adc
mov
sbb
adc
aaa
xor
jne
or
cmpsl
or
outsb
and
mov
lods
outsb
push
push
xlat
in
roll
inc
sbb
xchg
dec
mov
cmp
hlt
push
sbb
mov
fmuls
loop
sub
pop
lock
push
mov
pusha
lock
adcl
sbb
pop
cmp
test
jnp
push
cli
pop
scas
lret
inc
div
roll
jge
add
cmpb
int
and
mov
adc
cs
xorl
aaa
push
fsub
push
add
mov
lcall
popa
sub
cmp
xlat
or
pop
push
sbb
jmp
xor
testb
pop
out
inc
cmp
adc
adc
rcll
pop
xor
inc
pop
inc
cmp
or
enter
xchg
adc
push
addr16
dec
aad
inc
test
adc
push
push
add
bound
mov
pop
or
jbe
outsb
outsb
je
xor
js
xor
imul
cmp
xor
pushf
xor
fwait
mov
xchg
jmp
jae
xorl
dec
and
idiv
xor
scas
mov
insl
loop
xor
dec
out
popa
push
jecxz
es
or
insb
add
data16
popa
je
adcl
push
sbb
jge
fmulp
xchg
push
inc
add
sbb
pop
push
out
adc
fisttps
out
push
gs
pop
and
sub
imul
scas
es
or
or
mov
aaa
pop
pop
aam
mov
dec
aam
adc
pop
or
add
out
insb
pop
fdivrs
cmc
push
sub
cs
insl
subb
xor
jbe
xor
jnp
loope
pop
test
sbb
xor
ds
xorl
cmpsl
pop
into
int
rcrl
add
cmp
xor
mov
push
xchg
pop
jo
mov
pop
pop
pop
adcl
nop
pop
cmp
movb
mov
mov
push
mov
pop
push
les
call
jb
pop
and
lock
aad
pop
inc
jne
ds
xor
cwtl
or
into
insl
inc
fisttpl
inc
jecxz
dec
pop
pop
mov
xchg
or
test
sbb
shrl
sub
mov
pop
xor
sbb
sbb
add
xor
fsub
adc
call
insb
mov
std
aam
loope
hlt
mov
imul
inc
push
imul
pushf
push
test
in
sar
arpl
and
in
push
inc
imul
cmp
xchg
int3
pusha
pop
dec
pop
pop
aas
das
inc
addb
bound
mov
stos
ds
pop
pop
lea
inc
cmp
aas
push
xor
jle
dec
add
shr
cmp
xchg
jmp
sub
das
jae
aaa
push
nop
sub
rdmsr
push
ljmp
adc
cmp
movsb
push
in
sub
ds
std
inc
outsl
sbb
ljmp
dec
xor
xchg
scas
pop
ja
push
fisubrl
fstl
sqrtps
push
add
inc
rolb
outsl
pop
imul
insb
mov
push
lret
jle
pop
pop
jecxz
pop
pop
aas
xor
inc
bound
add
loopne
pop
pop
pop
ljmp
jle
pop
jbe
mov
dec
pop
movsl
ljmp
repz
cs
push
sub
cmovle
push
cmp
ret
xor
inc
xor
cmpsb
pop
mov
pop
inc
and
rcrb
dec
push
lods
push
push
jo
pop
add
sub
scas
dec
dec
cld
movsb
aas
add
sub
inc
dec
inc
or
inc
and
inc
dec
adc
out
or
add
cmp
add
fstl
dec
adc
gs
add
xchg
or
fists
mov
add
jb
sar
movsl
jbe
dec
and
addr16
popa
pop
pop
xor
shrb
outsl
sbb
stos
cmovp
sbb
punpckhwd
orb
je
scas
pop
adc
and
inc
insb
pop
fistpll
rcll
inc
dec
push
inc
pop
push
dec
inc
dec
inc
push
pop
adc
adc
gs
rolb
cmp
outsb
pop
lock
lock
pop
daa
dec
sbb
daa
cmp
dec
jb
bound
push
or
aas
dec
das
lds
andb
orb
push
adc
xchg
rsqrtps
orb
xor
test
scas
and
loopne
orb
inc
jno
add
xorl
and
jb
push
adc
in
adc
push
fyl2x
arpl
push
and
push
cmp
shl
push
add
call
add
or
push
pop
sbb
dec
mov
sub
aad
push
aad
cmp
push
lock
add
xor
push
or
cmp
push
jmp
add
and
dec
arpl
andl
or
push
mov
push
cmc
popf
or
aam
push
push
call
adc
xlat
mov
push
pop
add
maxps
mov
pop
in
test
in
add
insb
xor
dec
pop
nop
pusha
or
pop
mov
rcrb
xchg
xchg
loope
pop
adc
sbb
cmp
dec
aaa
adc
push
xlat
outsl
or
cli
mov
mov
push
imul
rolb
inc
fsubrs
push
jb
enter
inc
das
fmuls
dec
add
mov
inc
xadd
fwait
enter
xchg
inc
cmovo
jle
inc
adc
fdivr
cmpb
aas
mov
jo
maxps
inc
sti
pop
inc
dec
add
fwait
adc
loopne
sbb
das
test
mov
mov
sbb
jo
mov
push
dec
sti
jl
addr16
movsb
add
daa
outsb
jnp
mov
adc
and
cmp
inc
pop
mov
mov
xchg
outsl
ror
mov
lods
cmpsl
ja
lahf
add
out
mov
daa
mov
in
test
inc
daa
mov
mov
sahf
mov
hlt
cld
aas
int
arpl
nop
sbb
dec
data16
dec
inc
inc
dec
scas
in
cmp
dec
scas
in
sub
scas
in
scas
and
add
cmpsl
xchg
decl
push
xchg
out
ficoml
test
fcomps
mov
popf
xabort
sahf
gs
je
pop
ds
repz
xchg
inc
and
pop
out
out
sub
hlt
pop
xchg
test
repz
pop
pop
ds
pop
int
jns
push
test
clc
pop
fcompl
in
enter
lcall
sbb
repnz
push
es
js
adc
push
ds
dec
xchg
and
and
dec
int3
imul
pop
dec
add
repnz
inc
xor
mov
add
sub
fcomip
push
inc
mov
xchg
add
push
jg
jb
xorl
mov
xchg
ja
add
ret
mov
dec
mov
dec
outsl
add
inc
lock
inc
pop
clc
sbb
movsl
loopne
or
inc
push
dec
pop
dec
fmuls
outsl
add
inc
jb
and
notb
outsl
fistpll
cmp
repnz
jb
push
clc
mov
pop
dec
cmp
test
xchg
add
bound
rorl
lods
add
pop
xchg
xor
pop
or
hlt
ret
push
lock
adc
pop
scas
add
bound
fs
add
nop
pushf
pop
leave
xor
xor
enter
shrb
cltd
test
sarb
sub
lock
call
sub
sub
adc
fs
je
or
popa
sub
xor
pusha
fs
mov
add
mov
or
ja
adc
jg
mov
sub
test
pop
or
sti
es
push
js
fildll
pop
leave
mov
fbld
or
mov
cwtl
sbb
ret
fs
or
shll
scas
add
push
adcb
leave
mov
add
cmpsl
pop
out
mov
daa
mov
callw
cmpsl
and
push
add
addr16
mov
aaa
hlt
sbb
sub
incl
or
jns
jb
daa
add
mov
sub
dec
pop
int3
add
cmpsb
lahf
mov
iret
imul
inc
popa
jg
cmpsb
outsl
in
push
rclb
push
add
movsb
xchg
push
pusha
repnz
xchg
pop
sbb
imul
jbe
mov
jb
and
xor
mul
add
mov
sbb
lds
jo
push
push
outsl
rorb
inc
pop
cmp
xchg
daa
cmp
xor
out
nopl
and
gs
pusha
enter
cmpsl
cmp
nop
xchg
jo
rdtsc
xchg
and
or
enter
adc
pop
jl
xchg
rorl
lahf
xlat
or
test
and
call
or
jl
push
mov
adc
pushf
and
mov
arpl
pop
arpl
testl
and
add
aas
lock
and
mov
adc
cwtl
push
and
sub
cmp
mov
add
or
sbb
add
mov
or
addr16
and
fs
or
dec
mov
ficoml
jg
mov
push
mov
addr16
and
nop
pushf
pop
sbb
jg
addr16
add
pop
enter
fdivl
pusha
and
cs
dec
and
jmp
sti
pop
inc
push
dec
push
adc
outsl
push
repnz
in
shlb
mov
stos
pop
cmpsb
cwtl
popw
jl
pop
daa
test
fcoms
xchg
inc
push
es
add
fnstcw
addr16
addr16
mov
dec
xchg
add
iret
jbe
cmp
lahf
or
lods
in
scas
add
lahf
xchg
sbb
xchg
fcompl
or
sahf
imulb
add
imul
cmpsl
cmp
ror
js
xchg
in
movsl
or
movsb
pusha
inc
push
cmpsb
in
pushf
aas
or
jmp
movsb
push
ret
xchg
xchg
dec
and
pop
or
xchg
int3
inc
lods
ljmp
push
enter
add
mov
add
roll
imul
fsubs
roll
mov
nop
add
push
xor
inc
pop
or
addr16
mov
daa
add
ss
nop
add
movsb
loopne
in
and
outsb
lock
and
or
xlat
sbb
insb
insl
and
mov
int
insl
daa
xor
push
cmpsl
js
push
insb
xchg
enter
call
es
subb
ja
inc
lds
mov
outsl
stc
pop
jb
lods
pop
add
sbb
push
push
xor
xlat
push
mov
add
pop
in
mov
nop
fsubrs
repnz
aas
addr16
pusha
fdivs
addr16
pop
mov
pusha
out
pusha
jne
push
push
lock
fsts
insb
in
or
cmp
push
mov
out
repz
adc
jge
rcr
cmp
add
push
pop
test
mov
dec
dec
repz
fs
es
outsl
sahf
out
cmp
fldcw
jle
sarb
jl
jg
xchg
stc
add
fidivrs
out
fdivr
inc
cmp
repz
sbb
sahf
out
loopne
test
xchg
cmp
out
add
daa
push
xchg
out
ds
ret
xchg
iret
sarl
in
xchg
lods
sahf
cmpsl
stc
cmp
or
dec
repz
cmp
lahf
cmpsl
stc
jo
jmp
mov
lcall
dec
jg
xor
out
lds
mov
sarl
and
test
jns
out
nop
imul
loopne
xchg
data16
jbe
lock
jns
lods
xlat
cli
sub
cmpsl
stc
cmp
and
xchg
lcall
sbb
jns
lock
out
push
mov
jns
iret
sub
cmpsl
stc
cmp
jae
imulb
popf
cmpsb
mov
sbbb
jl
lahf
out
lods
pop
mov
jns
out
loop
mov
ds
lock
int
fucom
mov
rorb
cmpsb
dec
lahf
out
cmp
fstpl
cmpsl
push
or
lcall
and
out
pushf
fisubrl
stos
fs
jns
out
clc
arpl
ds
repz
lods
pop
cmpsb
push
lods
div
cmp
repz
sarl
inc
scas
je
adc
iret
stos
stc
dec
mov
cmpsl
stc
cmp
sub
sub
fidivrs
dec
xchg
adc
cmpsl
stc
mov
cwtl
mov
mov
push
out
jl
xchg
aad
mov
imul
sbb
repz
xor
insb
cmpsl
fidivrl
ret
mov
push
les
lahf
out
ds
lds
loopne
ds
repz
xchg
int3
out
inc
lret
lahf
testb
fsubrs
into
inc
sar
lahf
out
iret
outsl
aaa
shll
dec
mov
aam
addr16
pop
mov
add
add
xor
mov
sarb
cmp
pop
jno
pop
and
in
jbe
addr16
push
add
jp
or
addr16
out
pop
sub
xchg
mov
cmp
in
insl
jne
in
jne
sub
mov
sub
pop
xor
inc
aas
pop
enter
shrb
inc
int3
loope
or
mov
addr16
inc
jmp
cmp
sub
aaa
cmovl
popa
sbb
ja
push
je
ja
and
adc
cmp
aaa
mov
loop
pop
enter
jnp
test
push
xchg
into
rcll
dec
pusha
outsl
fs
or
add
cmp
jle
aas
lds
cmp
rorb
push
mov
in
mov
fldt
or
cltd
push
pop
mov
cmpsl
sarb
push
in
inc
in
mov
in
dec
sbb
ror
fs
fldt
dec
out
ss
aas
mov
mov
aas
mov
dec
and
nop
cld
iret
jne
loopne
cwtl
dec
or
dec
call
push
mov
mov
push
inc
lcall
pop
jmp
aaa
iret
jbe
mov
pop
push
daa
insb
in
and
mov
and
inc
push
dec
push
dec
mov
bound
add
and
sbb
sub
rcll
mov
pop
in
dec
in
mov
rcrb
shrl
andb
insl
dec
cs
jg,pn
push
dec
adc
push
out
push
push
mov
inc
pop
mov
mov
aas
bnd
inc
bound
push
sbb
test
pushf
sbb
xchg
lahf
mov
ja
inc
shrb
jns
add
das
repnz
outsl
imul
and
adc
scas
das
cltd
xchg
add
pop
dec
jns
adc
inc
jns
aas
adc
mov
add
cmp
cmpsb
push
inc
repnz
pop
scas
idivb
jns
jns
in
jnp
push
add
ds
idivl
add
jp
leave
jae
push
push
add
push
leave
and
and
jp
push
mov
scas
push
repnz
adc
add
and
in
dec
and
mov
jnp
repnz
cmp
roll
outsl
add
and
xlat
test
add
jnp
jnp
movsb
dec
and
repnz
dec
add
add
push
bound
jl
insl
scas
enter
pusha
add
jo
inc
repnz
or
mov
test
loop
jb
and
adc
jge
jge
push
xor
mov
leave
pop
js
jl
iret
sbb
jb
jl
jl
push
add
cmp
repz
in
add
cmpsl
stc
add
or
jns
out
mov
dec
push
leave
add
inc
xor
enter
and
inc
jle
jge
in
shll
jle
xchg
cmp
mov
mov
sbb
subl
into
xchg
mov
mov
sbb
ret
xchg
cld
add
fisttps
adc
and
int3
mov
jle
push
and
sbb
jb
jle
jle
pop
dec
cmp
gs
je
cmp
mov
dec
cmp
mov
enter
mov
jmp
repz
jnp
psubq
jg
pop
mov
cs
xlat
fidivrs
add
outsb
jg
fcmovne
or
add
dec
scas
lock
inc
repnz
inc
sub
test
jmp
cmp
andl
sahf
fistl
mov
inc
mov
aam
pop
out
leave
mov
xor
jne
popf
mov
popa
push
daa
imul
in
pushf
cmp
js
push
lea
mov
in
int
in
pop
or
inc
repz
in
movl
add
sbb
and
cmpl
and
andl
das
outsb
daa
daa
jne
xchg
les
pop
pushf
sbb
push
daa
sub
je
and
lds
xchg
inc
sbb
xchg
xchg
xchg
xchg
orl
subb
xchg
xchg
xchg
xorb
or
jns
out
or
insb
sahf
out
sahf
or
or
sahf
out
sets
mov
out
adc
jns
adc
adc
xchg
jns
sbb
or
fsubl
xchg
iret
sbb
add
stc
test
sbb
repnz
add
in
aaa
and
inc
add
js
addr16
test
xchg
inc
inc
inc
cmp
and
xchg
jo
mov
outsl
adc
dec
pop
xchg
addr16
call
faddl
mov
test
mov
nop
data16
mov
adc
fadds
inc
pop
jns
loopne
test
out
mov
daa
and
sarb
daa
add
leave
add
sahf
ja
push
jg
jp
add
outsl
decl
add
mov
inc
aas
add
mov
mov
inc
es
xchg
pop
mov
pop
and
push
push
or
xchg
jl
test
xchg
dec
jno,pn
mov
int
in
inc
mov
fisubl
jns
rdtsc
mov
mov
js
daa
pusha
mov
dec
jb
xchg
popf
je
jno
ja
in
cmp
mov
mov
iret
iret
addr16
outsb
pop
leave
push
repnz
std
sub
inc
ret
mov
sbb
leave
int3
mov
daa
cmp
adc
outsb
sub
mov
cmpsb
mov
xchg
add
mov
push
add
sub
pop
add
mov
shlb
out
adc
inc
lea
lea
pop
jb
push
ljmp
lret
lret
mov
loopne
lret
lret
lret
lret
call
mov
mov
lret
lret
lret
or
and
sub
inc
mov
lret
lret
lret
dec
mov
pop
mov
cmp
jmp
femms
or
or
or
cmp
cmp
or
push
add
add
add
in
xor
add
mov
mov
xchg
outsb
mov
add
jns
xchg
cmp
mov
mov
mov
mov
xchg
cmp
xchg
mov
add
insl
xchg
in
pop
ja
test
nop
push
xlat
ss
pop
aam
mov
jbe
cmp
mov
mov
aas
cld
psllw
dec
icebp
add
mov
or
xor
push
sbb
and
lahf
or
inc
mov
push
jb
fnstsw
lahf
ja
mov
iret
lcall
push
mov
or
loopne
call
ja
ss
str
or
lea
push
xor
leave
jae
sbb
lea
jns
ss
and
cmovle
add
cmp
sbbl
clc
in
js
mov
or
xchg
inc
aas
icebp
in
pop
or
adc
pop
ss
xchg
pop
xchg
arpl
daa
imul
push
xchg
dec
pop
orl
fcoml
xlat
ja,pn
cmp
add
add
jns
sahf
pop
testl
lock
daa
js
mov
inc
mov
lea
mov
jno
jl
mov
mov
and
add
das
add
pushf
pushf
pushf
pop
xlat
fucomip
cmc
jns
inc
sahf
add
push
out
sahf
out
pop
sub
aaa
sahf
out
sahf
or
dec
or
xchg
jns
or
and
xchg
iret
mov
popf
in
das
fidivrl
divb
jb
stc
pop
add
cmp
adc
push
sbb
or
rcr
sub
nop
pop
or
mov
leave
call
xorb
aam
out
movsb
mov
add
inc
enter
pushf
xchg
in
pushf
in
aam
hlt
sbbl
fadd
dec
xchg
sub
iret
out
and
pop
xchg
xlat
fbld
mov
stos
add
nop
push
cmp
pop
pop
ret
add
in
pop
xchg
fcoml
dec
sbb
and
adc
lds
fstl
daa
xor
inc
xchg
pop
pop
pop
pop
dec
xchg
push
xchg
pusha
xchg
outsl
xchg
fmull
xchg
dec
xchg
cwtl
xchg
mov
test
mov
sahf
out
enter
hlt
mov
push
xlat
sti
xchg
flds
push
xchg
out
mov
push
mov
inc
dec
lock
pop
xchg
xchg
xchg
outsb
leave
inc
repnz
sbb
pushf
cmpsl
ja
enterw
cs
add
mov
or
mov
xchg
aaa
xchg
inc
xchg
dec
xchg
mov
xchg
arpl
mov
cmp
fdivr
stos
mov
lret
pushf
pushf
pushf
pushf
loope
div
repnz
adc
dec
mov
cmp
xchg
push
xchg
pop
xchg
addr16
enter
jb
jge
mov
xchg
sahf
out
or
sub
add
mov
xchg
pop
adc
xchg
xchg
in
mov
push
dec
adc
rcr
add
jbe
inc
xchg
xchg
push
mov
iret
out
pop
mov
or
hlt
push
dec
mov
stos
movb
arpl
cmp
sbb
dec
mov
xchg
xchg
sbbb
jg
in
push
add
es
cmc
ltr
std
xchg
add
push
out
es
or
adc
or
xor
sahf
out
and
jbe
pop
add
jns
add
leave
leave
leave
pushf
movsb
lods
cwtl
sahf
fcmovne
inc
iret
xlat
filds
aam
cmp
dec
cli
add
fimull
sahf
ja
cwtl
cmp
in
daa
inc
xchg
push
add
dec
cs
inc
je
cwtl
jb
dec
cmpsb
lcall
cmp
jbe
bswap
push
add
push
ss
mov
fcomps
sbb
or
pop
adc
sub
xor
dec
cltd
jns
jns
push
cltd
pop
cltd
arpl
jbe
jae
jnp
ud2
pop
or
dec
dec
or
pop
push
dec
dec
dec
dec
add
out
dec
sbb
sahf
out
xchg
sbb
sbb
out
stos
pop
mov
cmp
daa
dec
and
cmp
repz
cltd
cmp
lahf
push
lcall
xchg
mov
xchg
out
cmovp
imul
leave
leave
xchg
push
jae
lcall
pop
orl
jns
add
xchg
add
into
shufps
leave
xor
icebp
stc
jg
jb
leave
stc
add
xchg
and
fisttpll
sbb
push
jb
mov
fwait
pushf
pushf
int3
mov
fbld
js
fcmovne
repz
clc
ss
mov
iret
xchg
xchg
fucomi
aad
aad
fucom
movsl
scas
push
pushf
in
filds
bound
mov
jmp
inc
mull
daa
mov
call
pushf
mov
dec
inc
pushf
dec
push
pop
push
add
loop
jns
arpl
imul
pop
mov
cmpsl
mov
add
xchg
out
jo
pop
mov
adc
mov
xchg
fsubrp
out
das
test
out
pushf
incl
mov
adc
cmp
dec
push
mov
popf
out
outsb
popf
jl
add
daa
iret
repz
pop
jo
rorl
les
repnz
sbb
repnz
sbb
jae
and
or
or
inc
pop
dec
or
dec
sahf
out
or
dec
sahf
out
adc
jb
sahf
cmpsl
xchg
iret
dec
scas
adc
movsb
popf
sahf
mov
sahf
out
mov
sahf
out
into
add
stos
jg
fiadds
scas
pop
jb
xor
clc
movsl
or
jb
add
lahf
push
lahf
push
pop
lds
out
add
push
scas
pushf
dec
dec
repnz
inc
cmpsb
push
lahf
cs
je
dec
cs
dec
cs
mov
mov
psllq
fstpl
aas
sahf
lahf
mov
nop
mov
inc
add
jo
and
xor
or
cmpsl
andb
mov
lahf
es
jnp
push
push
add
add
cmp
cmp
lar
outsl
ja
push
cmp
cwtl
or
mov
inc
or
daa
daa
iret
sbb
push
add
fninit
aaa
jns
add
repz
andb
pop
sti
add
in
cmpsl
adc
scas
sbb
in
insl
sub
xor
inc
mov
dec
mov
cmp
and
iret
repz
add
in
repnz
scas
pop
add
das
popf
xchg
mov
fcmovbe
jp
cmp
ja
pusha
std
mov
call
mov
mov
adc
daa
int
inc
outsl
nop
xchg
ja
lock
inc
xchg
out
dec
push
push
pop
push
fbld
fwait
dec
les
movl
pop
xchg
mov
cmpl
jl
inc
movsb
xchg
xchg
xchg
or
cmp
mov
incl
fsubrl
cmp
in
rorl
pop
mov
sbb
cmp
pop
mov
gs
out
out
iret
repz
push
or
iret
repz
or
iret
repz
dec
mov
jle
mov
popf
in
rorl
inc
lods
or
jo
pop
sbb
ja
movsb
das
cmp
enter
movsb
jp
andb
xchg
push
pop
lcall
out
inc
jae,pt
lock
mov
mov
dec
dec
and
daa
daa
daa
loope
imull
jnp,pn
incl
movsl
pop
push
pop
in
xchg
movsl
pop
movsl
pop
movsl
daa
setne
scas
aaa
movsl
shrd
adc
pop
movsl
aaa
bound
push
jb
jp
in
cmp
jg
mov
mov
sbb
jns
insb
aaa
mov
js
loopne
pop
rorb
movsl
push
leave
pop
test
add
push
sarl
mov
movsl
movsl
sti
pop
leave
pop
imull
aas
push
pop
add
loopne
push
cmpsb
mov
ss
push
aas
push
cmpsl
stc
pushf
mov
inc
pop
xor
in
and
jns
and
in
addl
lds
add
adcb
xchg
cltd
imul
mov
invd
fwait
dec
dec
rcll
das
sub
fnstsw
push
add
cmp
pop
leave
insb
jno
daa
cwtl
je
lods
sahf
xchg
xchg
xchg
cmovle
out
mov
jb
cmpsl
jmp
mulb
out
dec
or
notb
cmp
addr16
popf
xchg
pop
addr16
movq
push
call
pop
push
mov
pushf
pop
mov
lcall
stos
cmpsl
mov
xchg
add
and
in
or
leave
in
cmc
paddw
mov
or
add
dec
call
or
lret
andl
test
cmp
ja
mov
jb
jbe
sete
xor
rcrl
mov
cmc
std
dec
ret
imul
stos
push
mov
testl
inc
addr16
add
mov
sub
test
mov
out
in
mov
mov
popf
fcmovne
stos
iret
es
pop
inc
push
push
lock
call
outsl
in
outsl
sbb
fdivrl
lidtl
add
repz
pop
cmp
inc
or
xchg
outsb
repnz
sysret
repnz
lock
pop
stos
aas
vmread
dec
sti
mov
mov
mov
pop
jo
cltd
pop
inc
insb
ret
push
and
and
daa
imul
leave
leave
adc
idivl
in
leave
incl
lods
syscall
push
pop
stos
daa
dec
aaa
sysret
pop
daa
lods
fildll
and
das
lods
add
cmp
lods
push
jne
push
jmp
sahf
xchg
mov
sarl
outsb
add
insl
in
cmp
lods
pop
cmc
lods
lods
into
push
sub
or
xor
lods
das
cmovle
in
lods
pop
lods
popw
iretw
xchg
out
fiadds
xchg
rorl
lcall
xchg
xchg
scas
lahf
jbe
jle
sahf
lods
cmpsb
in
outsb
xchg
lods
scas
pop
mov
mov
adc
push
cltd
jmp
pmaxsw
inc
repnz
mov
or
xor
push
mov
jb
pushf
inc
sub
inc
xor
mov
movsb
addr16
fs
scas
xchg
shll
adc
scas
outsl
loopne
and
lcall
das
stos
scas
mov
pmaddwd
mov
pop
or
ret
js
testb
inc
pop
add
dec
aam
mov
sarb
xchg
or
mov
testl
adc
scas
dec
jb
enter
scas
sub
xor
xchg
insb
fildl
fdivl
fs
jns
mov
xchg
lahf
xcrypt-ctr
cmpsl
pop
rolb
sahf
out
add
leave
leave
jae
fsub
call
arpl
or
mov
and
aaa
inc
mov
outsb
mov
in
jns
xchg
add
iret
in
jp
fwait
add
repnz
into
mov
push
mov
ja
and
fisubrl
out
sbb
iret
adc
sbb
repnz
add
xorb
cmp
inc
mov
mov
addr16
outsl
leave
in
jbe
emms
iret
jg
xchg
ficoms
add
leave
ror
or
cmpsl
or
pop
sahf
pop
and
fldt
loop
iret
lret
push
sar
mov
mov
push
push
movsb
out
popf
or
adc
or
and
leave
sub
pop
mov
mov
pop
jmp
xchg
mov
xlat
mov
add
test
sarl
outsl
rorl
ret
dec
sahf
ja
push
or
push
mov
jmp
mov
enter
adc
sbb
and
leave
leave
leave
insl
sub
ss
leave
leave
leave
leave
pop
sbbb
leave
mov
in
in
in
in
mov
inc
pop
das
repz
leave
jge
adc
fcmovne
xchg
popf
btc
sbb
jmp
cwtl
js
stc
add
andl
mov
push
mov
xchg
mov
jae
cmp
push
divl
jge
out
mov
adc
xchg
ret
lret
fnstenv
ss
push
add
inc
pop
mov
pop
cs
mov
enter
mov
mov
mov
out
jb
mov
mov
mov
cltd
mov
aad
mov
incl
mov
incl
sbb
xor
cmp
sahf
divl
pop
push
push
push
or
sahf
out
or
jo
loop
in
out
mov
orb
mov
nop
mov
aaa
shrl
mov
mov
mov
pop
jo
pop
lret
rcrl
comiss
das
and
cli
mov
mov
das
das
sbb
xor
ds
push
mov
pop
mov
jbe
or
das
das
jle
mov
das
pop
lcall
mov
repz
int
aad
cmp
repz
and
and
repz
repz
and
mov
and
daa
and
cmp
repz
aaa
sub
jns
leave
aas
cvttps2pi
in
repnz
dec
push
mov
cmpsl
mov
test
lea
mov
push
fimull
cld
jmp
ret
iret
xor
test
sub
mov
rcrl
pop
leave
out
inc
or
sub
fsubrl
mov
lods
sahf
fcmovne
inc
jo
filds
call
lods
cltd
push
lock
jns
data16
out
push
mov
fmull
out
add
mov
or
or
or
jg
mov
cmp
xchg
adc
iret
adc
daa
iret
jae
push
in
sbb
push
dec
add
fsts
mov
xor
xchg
out
cmp
and
jns
cmp
mov
or
das
xor
mov
push
add
sbb
mov
sbb
mov
cmp
cmp
mov
mov
cmpps
iret
cmp
rorb
daa
and
pminsw
mov
cmp
bound
push
mov
pop
orb
into
and
sarl
hlt
adc
dec
sahf
and
sub
outsb
pcmpeqd
jle
jns
cmp
xchg
js
mov
mov
aas
iret
mov
xlat
pandn
add
push
jns
mov
das
mov
aas
lock
mov
shrb
jns
in
push
or
femms
ds
cmp
out
das
adc
aas
push
in
daa
iret
adc
push
adc
into
repz
lar
addr16
cmp
sbb
outsl
pushf
xor
scas
incl
inc
sbb
leave
push
xor
leave
outsl
mov
xchg
mov
mov
sbb
ret
cld
add
lret
leave
mov
fmull
in
xlat
cmc
daa
std
xchg
add
shll
push
hlt
in
repnz
roll
jnp
leave
in
push
xchg
pop
mov
xchg
xchg
fcmovne
inc
jnp
jnp
xchg
fwait
xchg
xchg
mov
into
rcrl
dec
outsb
fsubp
out
push
das
xchg
out
testb
sbb
pop
outsl
and
movaps
ja
lret
out
xor
ja
push
xchg
dec
sahf
add
fcmove
in
in
seta
in
ret
dec
push
mov
mov
pop
std
add
out
jns
adc
mov
xor
fucomi
xchg
push
push
xchg
jo
andb
xchg
mov
fnsave
xchg
mov
out
testb
out
incb
mov
leave
repz
cmp
inc
dec
add
push
pop
les
popa
les
stos
cmp
mov
setl
movsb
pop
lods
fbstp
mov
decb
aam
xchg
push
daa
or
test
incl
lds
fwait
in
lds
xor
lds
pop
jbe
xchg
pop
sarb
ror
lea
xchg
mov
jae
sbb
enter
xchg
rcr
ja
jo
xor
sti
add
add
adcb
pop
out
jns
pop
add
repnz
add
loopne
ror
orl
lods
mov
fsubl
lea
push
push
xorps
fists
es
mov
add
syscall
jns
movsb
out
push
outsb
dec
push
jns
jns
insl
js
add
jbe
jns
cltd
movsb
pop
scas
xchg
xchg
xchg
outsl
mov
fistl
out
icebp
cld
movl
enter
enter
xchg
xchg
xchg
xchg
enter
enter
jb
shrb
nopl
jb
jb
sbb
sbb
jae
jb
push
adc
cmp
push
jne
mov
repz
xchg
xor
iret
repz
repz
int
fdivs
jecxz
ds
repz
cmp
cmp
repz
cmp
sbb
repz
and
cmp
fildl
push
inc
pop
pop
cmp
out
addr16
jb
psllq
jae
inc
xchg
dec
sahf
jbe
cmp
dec
test
out
in
lret
jmp
rorl
push
testb
add
mul
in
or
and
dec
je
lret
sahf
call
inc
imul
jbe
or
mov
ficoms
in
lret
mov
and
into
lret
in
das
aas
jecxz
out
lret
filds
jb
inc
fistps
lret
es
xor
sahf
out
sbb
lret
inc
push
adc
out
pop
pop
push
sahf
out
jle
mov
sahf
out
sahf
xchg
sbb
sbb
out
mov
shlb
repz
cmp
push
and
and
xchg
xchg
daa
iret
and
add
or
sbb
sub
jbe,pn
cmp
sub
sub
dec
movntq
out
das
xor
in
sahf
xor
xchg
iret
pushf
xor
pop
cmp
iret
jae
cmp
sarl
cmp
iret
repz
jmp
repz
aas
decl
int
adc
and
sub
ss
js
sahf
inc
inc
dec
inc
ficoms
inc
sub
mov
rcrl
movsb
add
int
pxor
mov
mov
iret
leave
repz
pop
rorb
dec
dec
dec
cmpsb
xchg
repz
add
sbb
inc
mov
adc
mov
pop
and
pushl
mov
or
daa
and
popa
into
imul
adcl
rclb
mov
push
jo
lahf
jg
into
js
ja
xchg
pop
fsub
pop
fidivs
inc
in
pop
hlt
cld
lahf
add
cmp
fists
lahf
or
rcrl
rcl
push
xchg
and
daa
inc
iret
dec
iret
push
iret
xchg
cmp
xchg
pop
addr16
insb
outsb
mov
js
iret
aaa
mov
mov
mov
bswap
iret
repz
pop
xlat
or
or
sbb
cmp
clc
add
push
jae
jb
sbb
and
cmp
sub
push
pop
popf
cmp
repz
out
sahf
out
sbb
aaa
jns
popf
sbb
daa
iret
push
mov
and
fmull
ja
push
and
ljmp
add
outsl
or
daa
push
leave
mov
sub
jg
enter
xchg
push
insl
shll
add
add
stc
fmull
add
dec
in
sub
rcr
and
push
ror
sbb
and
sahf
out
push
push
das
pop
cmp
jbe
syscall
or
mov
pop
shlb
jno
repnz
scas
jl
xchg
repz
repnz
rcrb
jns
fcmovne
mov
pop
leave
sbb
xchg
je
out
fisttps
push
ljmp
cmc
movq
cmp
in
push
and
push
push
and
jns
out
sub
and
jns
out
dec
sub
add
dec
repnz
arpl
add
outsb
xor
pop
sub
push
inc
add
sub
out
cmp
sahf
faddl
sub
pusha
pushf
sub
mov
in
shll
add
jae
jns
jecxz
out
pop
stc
popa
and
cmp
add
inc
fistl
push
lahf
pusha
fdivl
jg
lret
ffreep
aas
aam
inc
aam
aam
mov
enter
jae
jle
repnz
xrelease
xchg
or
sysret
pop
stos
aam
out
repnz
rcl
aam
push
adc
adc
adc
jns
cmp
pop
aad
aad
cmp
lea
push
das
aaa
add
insl
mov
dec
aad
push
xsha256
cmpsb
xchg
iret
in
pop
aad
or
dec
dec
mov
cmp
mov
jae
dec
sahf
pop
mov
iret
leave
leave
ret
or
repz
call
daa
out
lea
or
adc
adc
sahf
out
outsb
das
and
sub
xor
lock
sbb
inc
scas
dec
xchg
xchg
push
pop
sbb
push
test
pop
mov
mov
iret
repz
mov
into
jbe
leave
repz
in
out
paddusw
out
cli
push
or
xlat
adc
sbb
cmp
mov
inc
jns
out
push
adc
adc
out
jae
sbb
jle
in
sahf
sbb
jae
mov
push
push
rol
repnz
and
and
bswap
xor
xlat
xlat
push
xlat
xor
add
fdivrs
repnz
iret
sub
sub
in
sahf
ja
cs
mov
out
gs
xor
inc
pop
jo
jnp
cmpsl
fimuls
out
aaa
mov
dec
es
sub
cmp
fildll
add
or
inc
inc
cwtl
sub
fs
cmpsl
test
insl
shr
mov
cmp
inc
and
pop
out
aas
inc
push
mov
xchg
push
push
pop
cmp
aas
stos
xor
sbb
pop
inc
sub
aaa
cmp
inc
popa
outsl
aaa
cmp
jns
daa
iret
push
add
sbb
jns
out
or
dec
dec
sahf
or
or
aaa
or
jbe
xchg
scas
or
daa
jbe
dec
ficoms
push
adc
and
in
inc
push
addr16
das
mov
xorps
insl
dec
sahf
out
push
and
jb
fsubrl
fcompl
orl
iret
mov
push
sub
adc
fbld
mov
into
aas
xlat
sbb
pop
xor
mov
add
jns
out
mov
xor
and
jns
out
sbb
or
call
lock
cmp
repz
enter
out
sahf
idivl
movsb
iret
cmp
cwtl
nop
mov
iret
repz
pop
push
inc
inc
clc
cmp
repz
sbb
or
nop
push
fildll
inc
mov
sbb
cmp
mov
adc
xchg
movsl
adc
popa
aam
adc
sbb
push
inc
std
mov
daa
push
pop
rclb
mov
pop
adc
movsb
add
jns
stc
enter
cmpsb
fisttps
mov
cld
mov
jle
test
shll
cltd
sbb
mov
in
ja
inc
mov
iret
mov
in
call
fildll
jle
adc
push
ficompl
mov
inc
mov
xchg
xor
fcomp
loopne
jb
jle
testb
push
inc
jg
and
or
sbbb
push
in
or
es
cmpsl
inc
and
push
clc
mov
cli
inc
aaa
push
adc
pop
xlat
incl
xchg
mov
fsubrs
pop
das
bound
add
cmpsb
add
add
mov
mov
or
stc
lock
adc
adc
jo
inc
sbb
sarl
sbb
in
sbb
je
dec
push
sub
sahf
out
pop
enter
and
cwtl
jmp
clc
ljmp
jns
jp
push
cmp
adc
lcall
mov
out
mov
out
dec
icebp
daa
jbe
out
push
add
pop
xor
lea
push
mov
pop
jg
std
mov
adcb
push
or
inc
cwtl
xchg
or
push
push
xorb
push
xor
addr16
push
push
mov
imul
cmp
lcall
stos
sbb
negl
negl
call
stc
mov
cmpsb
jg
out
cs
fidivs
sub
mov
out
add
xor
daa
jns
cltd
jmp
xchg
es
adc
repz
sbb
sbb
add
add
lock
sahf
mov
aas
ds
cs
cld
lock
repz
jnp
add
adc
fdivrl
repz
das
push
or
or
iret
repz
notl
in
enter
cmp
mov
out
pop
test
movsb
sahf
out
sahf
and
das
push
out
mov
into
test
aam
cmp
adc
xor
cld
xorb
inc
cmp
xorl
jg
cmp
jns
out
pop
js
mov
in
repz
repz
xor
add
imul
ja
or
lcall
push
stos
and
dec
insb
cmpsl
cmp
dec
inc
pop
enter
in
cli
or
or
inc
ds
ret
mov
adc
cld
xchg
mov
mov
sbb
into
lcall
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
std
call
sub
mov
popl
cmp
cmpsb
iret
decl
js
mov
loopne
jmp
xchg
test
mov
cmp
inc
mov
lcall
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
jmp
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
and
push
movsl
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
or
dec
fwait
xchg
and
and
jg
lahf
add
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
call
sub
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
incl
mov
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
or
inc
mov
aas
xchg
les
jne
int
mov
addr16
imulb
aas
and
loop
mov
jp
popa
push
pop
sarl
pushl
pop
aas
xlat
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
aas
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
inc
xor
lods
cmp
mov
cmp
cmp
mov
lcall
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
lcall
cmpsb
xchg
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
decl
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
adc
gs
std
orl
pop
ficomps
frstor
fsubl
pop
pop
inc
inc
je
xchg
insb
inc
inc
push
dec
jnp
mov
dec
andl
pop
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
jmp
aad
mov
rclb
mov
sub
mov
sbb
repnz
repz
test
ficompl
jmp
mov
hlt
movl
inc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
lcall
imul
addr16
add
aam
dec
std
test
movsl
cli
test
xor
insb
cwtl
mov
leave
mov
insb
fdivs
jne
filds
or
shrl
jmp
fldenv
push
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
decl
movsl
mov
sub
mov
and
or
adc
ljmp
cli
stos
sbb
data16
inc
fdivl
jno
add
ljmp
adc
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
call
adc
test
xchg
sbb
push
sub
insb
fs
incl
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
cmp
call
pmaddwd
fnstenv
adc
mov
mov
bound
ficoml
cli
incl
sti
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
jg
adc
ret
movsb
sti
hlt
shrl
imul
mov
sarb
pushl
add
in
add
pop
dec
or
cmp
add
daa
adc
or
jmp
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
call
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
cmp
ljmp
fildl
push
fdivl
or
test
fs
ds
or
decl
iret
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
push
test
ss
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
ljmp
mov
mov
mov
aad
mov
call
xchg
shll
push
repnz
pushl
icebp
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pushl
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
jg
and
ja
int3
add
mov
das
es
lds
or
ljmp
sarb
push
pop
cmpsl
call
ret
shlb
scas
fldcw
ret
es
pushf
mov
insl
add
ss
decl
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
call
in
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
fcomip
mov
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
mov
clc
sar
imul
push
js
or
push
addl
test
add
popa
cmpsl
notl
pusha
rorb
imul
jg
push
scas
fcompl
fldenv
filds
insl
jecxz
scas
aaa
pusha
mov
fidivrs
mov
jmp
inc
sbb
mov
lret
mov
cmpsb
mov
sarb
sub
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
xchg
out
add
popf
cmp
ss
xor
dec
inc
cmp
jns
aam
mov
out
cmp
push
xlat
fcomp
jns
out
fsubp
jns
dec
sahf
jecxz
in
jmp
ljmp
jns
hlt
cmc
div
clc
stc
rorl
cld
pop
adc
icebp
or
aas
pop
adc
adc
sbbl
push
sbb
jae
mov
push
dec
bound
cmp
aam
add
js
and
bound
inc
test
popa
je
push
mov
data16
fistpll
and
cmp
push
lods
dec
pop
inc
jno
xor
pop
inc
cmp
idiv
incl
xor
aaa
cmp
popa
arpl
cmp
arpl
or
aam
fildll
xor
bound
not
sahf
je
push
inc
jbe
pop
insb
imul
ss
imul
jecxz
xor
inc
mov
and
in
add
push
inc
jp
and
dec
or
popa
or
add
adc
push
je
dec
pop
or
jbe
add
jp
inc
aas
ss
imul
loop
je
inc
inc
xchg
lcall
add
aaa
cmp
aam
fidivl
insb
popa
xchg
push
dec
insb
sbb
sbb
popa
xchg
cmp
lods
addb
and
loope
inc
push
push
aas
pop
mov
add
aas
xor
and
or
int
pop
add
jbe
aas
sahf
inc
jbe
fs
inc
inc
imul
inc
pop
idiv
js
sahf
je
jo
inc
inc
add
mov
popa
mov
lret
mov
iret
int
push
dec
cmp
mov
andb
sbb
mov
pop
mov
outsb
jne
adcl
scas
push
pop
xor
xor
insl
fwait
cmp
add
int
mov
xchg
into
pop
jo
mov
pop
inc
cmp
mov
aas
test
cltd
dec
loope
lret
push
add
adc
popa
add
lods
pop
mov
lahf
cmp
mov
sbb
sub
xlat
mov
xchg
out
or
lock
jb
or
popa
dec
popa
jo
js
adc
outsl
sub
outsl
popa
mov
inc
adc
jno
push
xor
stos
loop
lds
pusha
jb
pusha
in
nop
test
pop
cmp
push
out
arpl
cmp
mov
jo
cmpsl
xchg
and
xchg
xchg
inc
xor
shrb
stos
dec
adc
push
mov
je
jae
inc
addr16
outsl
arpl
insb
adcb
or
iret
push
cmp
jle
push
bound
ja
inc
jbe
lods
cmpsb
outsl
bound
addr16
xchg
mov
xor
pop
das
and
cltd
xor
inc
repz
add
adc
xchg
adc
and
sbb
dec
sbbl
dec
add
movsb
sahf
dec
inc
addr16
adc
jle
or
sbb
sbb
stos
mov
inc
push
inc
dec
jmp
sbb
pop
bound
outsb
arpl
inc
je
cmp
pop
lods
testb
in
insl
adc
or
aaa
inc
jne
push
mov
inc
xchg
nop
sub
xlat
loop
inc
and
push
daa
adc
sub
inc
inc
add
test
rcrb
adc
lcall
add
and
cmpsl
js
fcmovu
or
fsts
notb
pushl
psrlq
mov
xor
incl
in
dec
fwait
rcll
push
outsl
mov
cmpsl
repnz
ret
arpl
push
ret
push
fsubs
ljmp
orl
xor
test
adc
in
fists
cwtl
out
push
repz
leave
sbb
hlt
ds
sub
call
pushl
call
dec
or
xchg
adc
push
push
cmp
mov
mov
call
lret
or
add
icebp
or
fbld
pop
mov
push
out
jecxz
mov
clc
jle
adc
xchg
fs
xchg
fdivr
adc
fadd
or
clc
call
stos
dec
imul
popf
aad
add
jmp
push
and
push
xorl
mov
into
cmp
xor
loopne
mov
or
mov
dec
mov
sub
jmp
mov
pop
aam
inc
sub
inc
lods
pop
cmp
sbb
jle
jne
fstps
mov
fwait
adcb
in
sub
sbb
mov
test
sbb
mov
pop
sbb
out
pop
out
cmc
stos
int3
in
dec
pop
pop
dec
mov
mov
pushl
adc
sub
shl
lahf
cli
iret
outsl
add
cwtl
or
push
test
push
jg
sub
pop
fwait
std
int3
dec
outsb
mov
mov
scas
loop
jmp
scas
nop
pop
sub
add
cld
or
out
pop
xor
mov
mov
loope
decl
and
adc
sub
mov
mov
mov
decl
fimuls
flds
cld
xchg
ja
inc
mov
dec
xchg
cmp
sbb
jmp
push
mov
and
icebp
addl
pop
mov
mov
and
rolb
push
imul
dec
mov
stos
xor
shlb
add
sbb
mov
mov
inc
lock
out
cmpsb
inc
add
mov
lahf
testb
es
lods
jno
inc
jae
mov
fcmovbe
test
out
sub
shll
aaa
xchg
sahf
push
pop
xchg
cmp
cmp
jg
mov
inc
pop
scas
or
sahf
movl
push
add
or
xchg
pop
xchg
jle
add
out
gs
outsl
clc
jp
cmp
fmulp
cmp
popf
ljmp
mov
lcall
mov
mov
mov
dec
test
lods
mov
adc
jl
inc
jp
sub
imul
and
test
lret
xchg
push
mov
mov
pop
icebp
and
inc
xor
icebp
sahf
sti
in
sbb
stos
xchg
dec
cmpsb
add
jge
enter
sahf
jg
adc
bnd
dec
add
cmp
mov
frstor
incl
shl
mov
mov
mov
aam
cmc
push
mov
dec
push
pushl
xchg
ja
insl
loopne
popa
push
mov
xor
ret
loope
jno
orl
push
and
lcall
imul
add
xchg
mov
aad
sbb
mov
fists
popf
inc
mov
cmp
decl
fwait
mov
out
bound
xchg
lret
mov
out
cmp
sarb
mov
out
adc
xor
fdiv
and
decl
dec
mov
stos
movsb
lahf
xchg
in
mov
cmp
std
add
push
dec
test
cld
ret
ljmp
pop
xor
pop
dec
push
cmp
sub
ss
in
andb
call
out
pop
and
adc
arpl
mov
cmp
icebp
push
in
jmp
and
mov
xchg
mov
dec
leave
stc
pushl
mov
rcll
mov
mov
stc
aas
rorl
stos
inc
sub
fadd
fmuls
sub
cltd
pop
outsl
enter
fdivrl
ds
cmp
inc
ficompl
xor
xorl
jg
mov
sub
test
or
subl
addb
pop
cmp
addr16
fcomip
jmp
cmp
sub
popa
adc
push
or
inc
lods
insb
ljmp
xlat
jmp
jmp
shll
aam
jae
mov
xchg
call
in
das
push
push
xchg
into
idivl
scas
jmp
sti
or
mov
std
rclb
in
clc
sahf
fwait
ss
decl
xchg
sub
pop
xor
rcll
mov
pusha
sbb
decl
loope
enter
loop
pop
push
leave
sub
fdivs
call
aas
xchg
clc
decl
lock
in
sbb
pop
mov
mov
ljmp
xchg
dec
mov
cmp
clc
lods
outsb
sarb
mov
fnstenv
scas
cli
sbb
xor
out
in
subb
mov
cmp
insl
incl
adc
cwtl
outsb
cwtl
or
mov
mov
incl
add
call
aad
mov
cli
fcoms
jnp
cmp
dec
incl
imul
ffreep
imul
xchg
fnstcw
lahf
daa
fisttps
xor
repz
fsubr
adc
push
mov
xor
jbe
jge
outsb
pop
aam
movsb
sti
add
fs
mov
lahf
stos
push
out
jbe
pop
lret
in
pusha
adc
mov
lock
incl
insb
scas
fnsave
ret
leave
xor
into
inc
jp
outsl
sbb
rcrl
xchg
aaa
pushl
dec
push
ss
fwait
test
mov
or
lret
es
adc
call
into
popf
xchg
mov
fistpll
cmp
add
rcrb
fistpll
mov
inc
dec
ficomps
enter
inc
sahf
mov
sahf
repnz
lds
std
jae
shll
ljmp
icebp
fldt
and
cmp
scas
lods
popa
and
push
mov
mov
mov
jmp
and
loop
fs
sub
loop
lock
ljmp
ret
test
arpl
call
mov
jb
xor
cmp
inc
incl
pushf
sahf
mov
rcll
jl
mov
std
movsl
cmp
aam
pop
pushl
pushf
test
sbb
cmpb
fnsave
out
dec
mov
push
aaa
cli
std
aaa
and
icebp
pop
push
cmp
jmp
cmpsb
jg
xchg
jnp
sub
sarl
pop
adc
mov
cli
stc
cmpsb
je
mov
sub
cmp
adc
dec
sbb
gs
std
pop
sbb
repz
mov
fbstp
pushl
aaa
fwait
in
add
repnz
inc
rcrb
push
mov
shlb
cmp
or
or
in
clc
inc
imul
mov
xchg
dec
mov
movsb
inc
lea
incl
lret
xchg
mov
es
fimuls
xor
xor
call
sti
sub
std
inc
mov
clc
addl
insl
lock
div
pop
out
out
iret
in
std
decl
xor
sub
iret
test
ficoms
jg
idivl
decl
xor
add
imul
mov
fists
xor
call
cs
or
nop
ljmp
jge
mov
pop
add
cld
mov
or
pop
mov
add
xor
sbb
iret
sbbl
mov
sets
and
pop
push
inc
bound
cmp
test
sub
push
fisttpl
lcall
and
xchg
maxps
and
test
rorb
add
out
testb
insb
jg
pop
jo
sbb
jne
sahf
out
push
decl
int
fldt
jl
push
mov
inc
ficompl
push
ficoms
lods
and
insl
mov
add
mov
rcrb
arpl
mov
mov
roll
in
jmp
ret
xchg
je
movsl
and
mov
cmp
inc
mov
fst
add
or
and
sub
cwtl
js
pop
mov
cmp
pushl
jno
inc
pop
pushf
repnz
ja
inc
pusha
enter
adcl
pushl
mov
daa
cwtl
and
and
lret
cli
js
push
cmc
jecxz
and
sbb
jmp
cmp
adc
test
pusha
lods
cmp
testl
out
mov
call
add
subl
and
adcb
sahf
xor
psrlq
mov
lcall
mov
dec
test
testb
xchg
push
mov
test
data16
jge
xor
and
out
jns
lods
xchg
mov
loope
sti
js
in
popf
pop
dec
push
inc
fildll
dec
mov
and
addr16
or
sti
inc
xchg
les
std
cmp
cmc
push
mull
dec
jl
je
sahf
or
shrl
sahf
pop
lods
mov
decl
pop
or
sbbb
mov
test
mov
fcomip
sbb
push
stos
stos
mov
jnp
sub
add
add
inc
aad
xor
push
rorb
cmp
sub
mov
aaa
adc
loopne
inc
push
faddl
inc
cwtl
push
mov
pop
shl
or
sub
lods
ja
aas
xor
call
std
xchg
mov
push
mov
andl
cli
jno
test
or
mov
incl
ss
pusha
outsb
mov
mov
stos
jge
inc
add
imul
dec
addr16
cmp
fcomip
ret
dec
pop
jae
jnp
lret
and
pop
add
mov
inc
incl
cltd
mov
jo
test
mov
repnz
mov
jo
xor
xchg
movsb
adc
shll
leave
cmpsb
push
fwait
test
cmp
incl
cwtl
add
repnz
pop
inc
jp
in
xchg
inc
lods
push
mov
xchg
pushl
sbb
in
lods
jno
adc
mov
lods
fldt
sbb
push
lock
ljmp
mov
or
testl
inc
and
add
mov
int3
mov
xlat
mov
dec
in
rorl
das
or
cmp
dec
add
test
cmp
ljmp
mov
mov
icebp
icebp
pop
decl
into
stos
mov
pop
lcall
sti
fwait
and
mov
fisubrs
sbb
jnp
adc
ljmp
scas
adc
fcoml
adc
push
inc
xor
hlt
or
sub
fucomip
add
mov
xchg
adc
adc
js
mov
mov
xor
push
std
incl
jne
or
push
pop
lcall
dec
decl
mov
jle
shll
mov
inc
pop
fdivs
imulb
mov
clc
ljmp
sbb
enter
je
in
pop
cmp
out
lahf
mov
sbb
add
jmp
push
int3
sbbl
and
xor
hlt
test
call
cmp
test
jp
and
dec
or
and
mov
cmc
add
sub
test
rcrl
lcall
jmp
fcompl
cmpsl
add
mov
roll
call
pop
fmul
mov
sbb
pop
mov
jle
clc
adc
push
test
movsb
pushl
lock
xor
sbb
addr16
cmp
imul
call
arpl
add
sbb
xchg
adcl
xchg
cli
mov
mov
fmul
mov
xchg
lock
jmp
ljmp
push
jnp
arpl
sahf
loope
dec
test
arpl
incb
andb
test
mov
lods
push
add
das
stos
inc
xchg
bound
arpl
sbb
push
inc
mov
xchg
jecxz
lcall
insb
sti
lea
push
cli
mov
div
jge
stc
insb
jp
mov
add
xlat
dec
loop
incl
adc
pop
pushf
mov
mov
aas
mov
imul
int
pushl
rorb
rorb
add
mov
or
mov
push
push
out
cmpsb
jo
in
ljmp
dec
decb
jae
lds
in
clc
push
sbb
sbbl
or
lcall
jp
aaa
or
add
jp
adc
push
mov
stos
icebp
ret
in
mov
clc
pop
cmp
shll
rolb
jmp
out
sbb
pop
mov
incl
in
cmpsb
xlat
icebp
cld
cltd
icebp
cmp
jge
jne
int
mov
mov
incl
mov
mov
jp
ficoml
int3
sub
sub
or
test
loop
sbb
sub
cmp
insl
lods
and
addr16
pop
popf
aaa
xchg
call
scas
out
and
or
inc
and
mov
add
es
mov
add
mov
hlt
inc
fcoms
jp
das
sub
stos
ss
ljmp
test
into
xchg
cld
rcll
adc
fistps
dec
xchg
xchg
movsb
fdivrl
enter
call
cmp
out
rclb
les
stos
outsb
and
jno
cld
mov
inc
adc
int3
jnp
jmp
xchg
push
leave
cmp
jo
outsb
push
std
push
dec
ss
pop
cmpsl
pop
ljmp
push
mov
imul
or
ret
loopne
ljmp
insb
dec
add
nop
fdivrs
push
adc
in
push
mov
sbb
gs
lds
jbe
fdivl
call
xor
dec
push
xor
ja
jb
cld
push
sub
jp
push
ret
and
and
inc
sub
sub
xor
cld
cld
je
push
outsb
xchg
pop
add
jo
xchg
nop
sbb
call
add
push
std
mov
pop
fs
mov
add
inc
in
test
outsb
insb
ror
outsl
ret
ror
hlt
movsb
ret
jns
call
fisttpl
dec
rcll
pop
dec
mov
insb
out
shlb
sbb
mov
decb
popf
lock
xor
pop
ljmp
fxam
inc
fsubrl
aas
pop
fstl
adc
dec
push
test
inc
xchg
incl
cwtl
jp
cmp
jae
sub
mov
cmc
jo
rorl
call
pop
lds
movsb
jb
or
fildll
xlat
test
addr16
jmp
popf
pusha
mov
inc
mov
jmp
add
mov
push
push
fwait
sub
test
mulb
xlat
rep
pusha
mov
incl
sub
fdivs
lods
stc
xchg
sub
hlt
sub
sub
lcall
fsubl
pop
mov
push
fisubrl
pop
sub
pop
cltd
pop
out
or
pop
jl
or
sub
movsl
push
or
gs
pushf
data16
jo
lcall
sub
fcoml
add
xchg
aaa
cmp
or
dec
inc
mov
sub
fcoms
inc
mov
rorl
fimull
lods
rcr
ret
and
pop
out
aaa
ret
fcomip
pushl
push
jmp
movsb
cmp
data16
sbbl
sbb
cmp
pop
iret
in
pop
gs
inc
ja
mov
lret
push
push
xlat
or
inc
cli
call
sub
ss
jg
loopne
scas
mov
push
fwait
subb
cmp
dec
inc
scas
pushf
and
mov
ljmp
mov
hlt
fsub
pushf
push
fcomip
call
pushf
mov
fnstenv
movsb
rcrl
out
loopne
arpl
jmp
cmpsb
clc
repz
xchg
xor
fdivp
mov
mov
inc
mov
sbb
ffreep
inc
fmuls
std
ljmp
xchg
push
loopne
cmc
or
xor
fisubs
and
and
outsb
pop
popa
sub
cmpsl
sbb
lahf
mov
push
and
flds
mov
mov
or
cmp
in
in
mov
sub
pop
bound
aam
jns
rcll
loop
mov
mov
ret
in
xchg
cli
ljmp
xor
push
shl
jl
mov
jle
aam
lcall
adc
mov
sar
dec
mov
and
push
or
mov
dec
pop
push
and
mov
sti
ficomps
mov
call
cmpsl
call
push
add
xor
push
int
lcall
mov
push
in
xor
loope
sub
jb
gs
stc
inc
sub
js
sbb
out
pop
push
cwtl
bound
or
jb
ljmp
and
imul
icebp
sub
jne
adc
sbb
subl
sub
incl
pop
inc
pop
data16
test
sub
mov
mov
mov
sbb
ja
xchg
xor
gs
push
xor
cs
sub
testl
ss
lret
pop
sbb
jmp
loop
testb
xlat
jne
jne
jmp
gs
cmc
fstpl
sbb
js
scas
xor
and
aad
cmp
jmp
test
out
inc
idivb
decl
ljmp
jl
jmp
dec
jo
pop
scas
lock
repz
pop
adc
pushl
mov
sbb
and
push
stos
addb
lods
je
push
or
shrl
pushl
or
mov
and
loop
daa
sti
cmp
inc
rclb
cmp
pushl
int3
mov
pop
push
add
adc
push
adc
jle
in
lods
shr
mov
lcall
dec
shrl
fwait
hlt
out
adc
int3
push
jno
jl
arpl
test
sub
mov
daa
dec
mov
dec
push
jmp
cmpsb
cmc
shlb
mov
out
sbb
mov
cmp
das
fs
cwtl
inc
shll
ljmp
call
inc
jp
push
xchg
outsl
cmc
bound
xlat
xchg
fisubl
jnp
jmp
roll
std
fsubrl
std
popa
xchg
sub
jl
pushf
mul
pop
push
dec
cmp
in
mov
pusha
and
jnp
mov
jns
mov
or
add
pushf
push
insl
jg
shl
lcall
sbb
mov
jp
fsts
xor
enter
mov
cmp
mov
xchg
push
xchg
incl
movsl
add
arpl
pushl
icebp
or
cmp
sbb
sub
int
movsl
add
jne
out
clc
stc
mov
dec
ljmp
repz
out
adc
dec
mov
mov
ret
repnz
lods
cli
jbe
push
cli
cwtl
dec
inc
pushf
sub
xchg
loope
dec
pop
popf
fdivrl
loop
sbb
clc
push
or
pop
adc
lcall
pushf
outsb
repz
xor
inc
and
push
cmpps
repnz
pushl
popa
cmpsl
sub
mov
push
push
jle
fiaddl
nop
jmp
negl
dec
cmp
mov
lcall
int
inc
call
mov
out
dec
jae
popf
shlb
pop
ljmp
xchg
push
jg
je
and
in
shlb
sub
xchg
int3
or
test
ds
jmp
stos
dec
aas
sbb
aam
stc
out
and
fcompl
xor
ljmp
pop
inc
mov
fdivrp
negb
xlat
mov
xor
ljmp
rcll
mov
outsl
loop
xchg
or
fsts
pop
scas
repz
or
add
lret
and
lret
idiv
daa
xor
pop
xlat
ljmp
and
and
push
mov
clc
fnstenv
push
bound
aas
insl
cmp
shrl
ffree
adc
add
push
repz
xchg
cltd
faddl
push
arpl
fsubrs
lods
rcrl
inc
mov
push
xor
mov
fsubr
or
int
ret
outsl
lret
incl
inc
inc
push
fdivrs
add
or
loope
xchg
mov
clc
mov
xor
cltd
sar
decl
pop
pop
mov
mov
imul
aas
mov
xchg
xchg
push
jnp
idiv
mov
jmp
cmp
fwait
test
repz
aad
and
roll
fistpll
add
mov
xchg
lahf
cmpsl
nop
mov
sbb
push
jp
pusha
jbe
ljmp
pop
sbb
lcall
sbb
int
ds
cli
and
sbb
sub
cld
jg
fwait
adc
sbb
pop
cmp
jge
mov
outsl
cmp
inc
test
out
jp
push
fdivrl
lcall
in
lock
jmp
cltd
decb
mov
pop
popa
push
repnz
sti
clc
lret
fnstsw
dec
adc
mov
jbe
inc
xor
pushf
adc
pushf
stos
adc
sahf
adcl
ret
jbe
adc
enter
push
aam
arpl
mov
aad
in
push
pop
insb
sahf
ss
sbb
jg
or
int
ljmp
sub
jno
test
loope
jmp
fsubrl
and
xchg
sbb
movsl
ret
mov
jnp
loopne
inc
jg
out
aam
popf
addr16
and
loope
pop
sbb
nop
mov
jne
sbb
push
pop
orl
mov
incl
add
mov
jae
adc
js
ss
inc
push
pushl
stos
xchg
jno
cmpsl
imulb
push
das
xorb
xor
dec
test
jmp
mov
cmp
fs
incl
mov
sub
neg
pop
push
push
cmc
cmc
je
nop
push
jmp
std
cmpsb
add
pushl
push
mov
adc
dec
icebp
scas
pop
outsl
mov
sub
js
sub
mov
jmp
dec
mov
inc
dec
outsl
std
rep
enter
hlt
incl
cltd
jo
pushl
mov
mov
imul
arpl
hlt
cmc
out
lahf
jmp
mov
push
clc
mov
movsb
rorb
outsl
mov
hlt
lcall
push
aas
push
inc
cwtl
nop
loopne
popa
lock
scas
in
jbe
inc
fcompl
inc
daa
fwait
jecxz
mov
inc
out
jbe
jge
mov
decl
cli
cmp
rcpps
jb
insb
adc
jo
adc
mov
mov
cmc
add
sub
and
pop
sbb
mov
mov
dec
mov
xchg
scas
outsl
pop
gs
pop
dec
adc
popa
cmp
ret
rep
jne
jge
decl
fsub
or
add
notb
pop
sbb
insb
aam
jnp
xchg
mov
mov
call
lret
sbb
outsb
aas
sub
and
jmp
out
test
bound
fs
push
fwait
add
inc
and
jmp
loopne
fwait
push
mov
hlt
pop
sub
pop
cmp
mov
sbb
jg
lcall
jmp
push
jb
sbb
and
mov
or
push
data16
decl
or
in
xor
xchg
jbe
xor
xchg
sbb
int3
push
pop
dec
jg
push
sbb
pop
add
mov
sbb
push
jns
jbe
sbbb
data16
push
sub
movsb
lret
cltd
adc
add
lret
into
jg
ljmp
lods
mov
dec
pop
nop
mov
mov
jge
add
repz
jp
in
repnz
mov
rcrb
gs
into
and
lcall
idivb
es
push
js
cltd
aas
sub
dec
jne
cmpsb
inc
ja
mov
cmc
das
cmp
jmp
xchg
pushf
push
test
sub
mov
mov
adc
fnsave
adc
lret
sbb
ljmp
sbb
or
rcrl
shl
adc
mov
xor
mov
add
and
mov
cld
jecxz
mov
hlt
adc
mov
hlt
scas
imul
adc
dec
mov
sarb
mov
fsub
leave
outsl
dec
add
xchg
mov
movsb
aaa
or
pushl
adc
xor
incl
sbb
and
cld
out
add
sbb
jne
inc
add
cmpsl
cltd
je
inc
xor
mov
mov
mov
sbb
cmpsl
jns,pt
jno
lea
testb
call
dec
add
jae
scas
adc
adcl
and
loop
cmpsb
test
push
call
or
lds
push
or
sub
mov
iret
dec
pop
lea
incl
std
dec
jl
xchg
push
xchg
sub
jg
push
dec
cmpsb
hlt
xlat
adc
lcall
push
lds
xchg
sbb
jle
imul
mov
xchg
cs
pop
xchg
inc
lea
xchg
push
daa
dec
xor
pop
jb
lcall
jl
aaa
and
mov
daa
fisubrl
adc
stc
insl
mov
jne
imul
es
fdivl
pop
push
jmp
cld
pop
sub
inc
and
lea
test
pusha
sub
xor
dec
inc
call
loope
mov
pop
pusha
inc
cmp
push
mov
add
pop
test
push
jecxz
cmp
mov
cmp
lea
adc
daa
cmpsl
add
pop
mov
xchg
roll
push
aas
pusha
xchg
vsubsd
mov
call
push
sub
cld
js
aam
mulb
push
loope
frstor
mov
pusha
sbb
sar
cmp
call
jp
mulb
push
jge
mov
push
stos
dec
stos
bound
mov
pop
andb
sub
shll
pushf
in
test
pushl
stc
frstor
fisttpl
les
adc
leave
stos
mov
mov
iret
pop
mov
incl
xlat
mov
dec
and
adc
push
or
ret
out
mov
sbb
orl
flds
in
subl
insb
cmpsb
mov
imul
mov
xchg
push
xor
pushf
sbb
mov
pop
xchg
and
arpl
icebp
out
jae
in
cwtl
flds
fdiv
sbb
out
and
xchg
out
adc
ljmp
call
fs
pop
pop
lock
sub
jb
push
or
mov
push
inc
dec
loop
adc
xor
aaa
scas
pop
idivl
incl
push
push
push
sbb
loop
jmp
scas
ljmp
int
int3
inc
adc
std
sbb
aas
add
cmpsb
jnp
mov
clc
adc
cli
cmp
xchg
int
hlt
add
in
push
gs
iret
jl
pop
icebp
or
aas
push
shrl
inc
mov
movsl
dec
mov
and
cmp
into
mov
hlt
jae
pop
xor
fstpt
xchg
inc
dec
imul
data16
jmp
lcall
xchg
iret
daa
mov
mov
fcmovne
push
les
aaa
out
stos
adc
xlat
jno
mov
add
popa
repnz
aaa
jg
pushl
std
shrb
out
divb
ror
push
xchg
aam
repnz
cli
shll
aaa
inc
add
std
sub
mov
fwait
or
in
inc
or
or
ljmp
decl
and
cwtl
sahf
lock
sbb
test
cld
inc
dec
cmc
pop
shll
out
lods
xchg
xor
das
popa
push
iret
dec
icebp
cmp
xor
stos
push
pushl
fistl
idivl
push
repz
popf
mov
inc
lcall
ffreep
mov
cmp
inc
lret
mov
loop
dec
mov
jmp
iret
dec
in
ret
or
sub
out
pop
loope
mov
mov
aad
repz
mov
lcall
sti
aam
dec
test
fbld
lret
popf
insl
imul
and
addl
mov
sarb
lcall
xor
and
mov
decl
rep
mov
ja
inc
push
push
enter
fmuls
mov
cmpsb
decl
lods
cmp
push
repz
mov
sarl
or
in
mov
or
das
fldt
test
pusha
in
sbb
jno
and
std
arpl
jge
mov
movsb
es
jmp
decl
mov
jo
jp
mov
jp
test
and
jecxz
insl
arpl
fwait
lret
loope
movsl
call
and
nop
cmpsb
dec
jbe
nop
cmpsl
inc
orb
dec
test
mov
adc
xchg
loop
aas
adcb
add
jb
sub
xchg
jns
jecxz,pt
jb
pop
pop
movsl
lahf
mov
push
lods
mov
adc
sbb
xchg
xor
das
fwait
movhps
decl
mov
rorb
test
fisttpl
add
repnz
imul
mulb
jmp
lods
sarb
mov
mov
bound
xor
mov
fistl
lea
loope
ljmp
jp
inc
sbb
cmpsb
ffreep
dec
scas
fxch
xchg
adc
icebp
mov
ret
jmp
fs
sahf
xchg
bound
leave
add
ror
test
inc
push
mov
loope
cmp
xchg
pop
in
dec
fsubs
aas
or
dec
or
jae
in
pushf
sahf
mov
push
cmp
ljmp
rclb
lds
mov
dec
sbbl
test
inc
push
std
sbb
and
pop
sbb
sahf
xchg
inc
mov
movsb
pusha
pushf
inc
mov
enter
mov
aad
ljmp
cli
cmpsl
popa
push
add
imul
jmp
dec
jmp
dec
addr16
out
popa
test
lods
outsb
subb
cmp
dec
dec
ffreep
int
dec
das
xor
mov
int
pop
cmp
pop
sub
cld
cmp
in
sub
xchg
jno
inc
mov
xchg
in
int
mov
mov
repnz
test
or
xor
iret
or
out
pop
xor
addr16
xchg
nop
adc
push
in
or
cmp
mov
sti
out
push
ret
pop
sarb
fdivrs
icebp
decb
call
das
fisttpll
xchg
cmp
sti
pop
sbb
leave
cmp
ljmp
xchg
sub
stos
adc
xor
or
pusha
xchg
lret
push
xor
js
daa
dec
out
cmc
dec
pushf
pop
mov
pop
cmpsb
insb
xor
das
inc
mov
call
sub
cmp
pop
sub
xchg
ror
jb
jne
sbb
cmp
lcall
pop
lcall
shl
xor
sbb
push
sbb
adc
inc
std
cli
or
ja
pushf
adc
outsl
pop
add
and
dec
clc
adc
cwtl
pop
jg
fisubs
addb
lahf
mov
sahf
jge
jg
xor
jmp
lock
in
dec
adc
fadd
data16
and
mov
mov
pop
fists
adc
jmp
shlb
push
sar
decl
adc
cli
fistpl
cmp
inc
cmc
loopne
push
push
flds
dec
jmp
cmp
out
cli
flds
cmp
dec
mov
pop
jns
mov
or
incl
mov
sub
sub
decb
dec
outsl
hlt
ss
ret
hlt
xchg
mov
jge
xor
stc
std
pop
rolb
lcall
into
cmpsb
mov
repnz
or
mov
pop
xlat
outsb
and
lcall
lret
jb
decl
arpl
mov
cwtl
inc
jnp
pop
loope
cld
mull
rorl
gs
mov
sti
push
pop
jmp
daa
enter
aas
or
scas
mov
mov
outsl
lcall
pop
mov
cmpsb
into
scas
jl
mov
pusha
xchg
into
cmp
push
or
pop
dec
loope
xchg
jge,pn
test
push
mov
aam
push
out
cmc
mov
ljmp
sar
push
and
mov
fwait
inc
fs
or
xorb
clc
lds
addr16
mov
lods
dec
cmp
test
mov
jmp
and
pop
sbb
mov
mov
cmpsl
ds
mov
pop
push
lods
push
aaa
add
lret
fdivr
lcall
cmpsl
xchg
add
test
fdivr
jl
into
mov
test
cmp
lcall
inc
aad
loopne
adc
xor
or
ds
mov
daa
push
pop
sub
dec
bnd
mov
aas
or
sub
daa
inc
jbe
les
mov
mov
cmc
das
cli
ljmp
pop
mov
sub
mov
cmp
test
repz
inc
and
sub
sbb
pop
ret
sar
aam
insl
xor
xchg
dec
sbb
js
cmp
fs
cmp
add
lock
add
idiv
xchg
inc
xor
add
out
cli
inc
cltd
loopne
in
sbb
jle
push
push
dec
mov
imul
xchg
fs
call
push
push
jle
push
ljmp
push
stos
pushl
mov
cmp
iret
xor
or
xor
push
push
mov
fnstsw
scas
pop
and
push
call
mov
xchg
ljmp
xchg
insl
cltd
call
ds
add
jge
les
lcall
xchg
adc
add
gs
push
pop
bnd
mov
cmp
jmp
xor
cmp
insb
or
ds
lret
jns
ret
std
stos
testb
cmpsl
iret
out
pop
cmp
adc
push
out
int
mov
xchg
mov
mov
lds
ja
stos
pop
inc
adc
cmpsb
xchg
ljmp
fildll
scas
fisttpl
mov
push
test
imul
adc
and
xor
rcl
pop
hlt
mov
dec
loope
add
mov
andb
clc
in
leave
mov
push
cltd
dec
adc
jmp
pop
rcr
and
xorl
inc
scas
push
fnstsw
pop
xor
bound
shlb
lcall
test
rolb
jmp
adc
pop
cld
imul
ss
aas
mov
out
clc
incl
mov
pop
lret
fs
push
jnp
sbb
or
lcall
push
lret
sub
push
dec
inc
mov
addr16
ja
add
rclb
or
pushl
sbb
inc
hlt
cltd
pop
out
or
dec
das
xchg
mov
in
mov
pop
out
jp
call
sub
or
mov
repz
fs
sbb
in
test
push
adc
dec
mov
adc
mov
imul
decl
jecxz
sub
mov
xor
lea
add
std
testl
loope
xchg
jg
mov
cmp
sahf
loope
or
pop
cli
call
mov
into
jge
xor
mov
xor
push
mov
add
push
in
call
jae
movsb
lods
mov
pusha
xor
leave
fildl
or
xchg
mull
cmp
mov
jg
std
fcompl
cld
out
and
mov
jecxz
sub
out
aam
pop
int
inc
data16
lcall
js
inc
test
cmpsl
repz
ror
enter
cmc
xor
mov
pop
repnz
xchg
icebp
jg
int
cltd
fwait
adc
jbe
dec
cmp
loop
gs
data16
mov
lcall
dec
pushf
mov
xchg
mov
subl
xor
outsl
loope
pop
xor
call
sahf
movsl
insl
pop
notl
loope
or
test
xchg
add
in
fiaddl
push
mov
sti
imull
call
dec
aas
into
sub
push
out
pop
jmp
pop
je
loopne
dec
sbb
scas
dec
jp
mov
int
call
je
mov
subl
cmp
ljmp
xchg
fdivl
ja
ret
cmp
cmp
dec
cli
je
mov
inc
cmp
jmp
pop
mov
pop
inc
adc
repnz
jle
xor
dec
aaa
dec
or
and
stc
loope
and
aaa
inc
sub
jmp
es
enter
lods
adc
cmpsl
cmpsb
jbe
push
xlat
or
test
ljmp
mov
call
bound
daa
jo
scas
and
sti
movsl
stc
push
addr16
in
insl
je
push
push
inc
sarb
adc
xor
dec
jae
insl
jbe
pop
jns
pop
shll
pop
add
incl
lcall
mov
inc
xchg
inc
mov
cld
test
jmp
and
mov
mov
lret
scas
retw
lods
sti
dec
xor
xchg
movsl
jg
mov
push
std
lcall
imul
inc
test
fadds
inc
stos
add
lahf
lret
pop
fcompl
pop
pop
insl
lret
xchg
and
pop
jne
imul
pop
jge
cmp
xor
clc
testl
test
lods
jecxz
fst
popa
out
pop
or
mov
pxor
cmc
push
into
dec
sub
sub
adcb
jmp
dec
mov
out
fidivrl
adcb
sub
aad
sub
ljmp
repz
sub
bound
xor
popa
imul
push
mov
inc
sub
jg
js
xchg
sub
mov
mov
loopne
leave
pusha
js
paddusw
pop
cmc
decl
mov
cmp
aaa
daa
pop
or
ret
mov
or
lcall
aad
cld
pop
xor
sbb
fnstsw
ss
cld
loope
dec
pop
fwait
pushf
xchg
push
fs
mov
and
shrb
shll
pop
fld
sar
inc
clc
addl
rorb
xor
mov
icebp
pop
push
xchg
cmc
xor
sub
cld
decl
lock
ds
gs
adcb
cmp
xchg
lcall
fmuls
imul
sbb
stc
jmp
pushl
fs
inc
fwait
push
push
imul
xor
dec
lock
dec
or
jle
jg
xor
pop
xchg
ret
push
pop
fs
pop
mov
cmc
cmp
popa
std
ljmp
mov
mov
in
in
pop
pop
xor
jecxz
in
mov
stos
push
js
ljmp
sub
nop
sub
xchg
cmp
repnz
in
push
lea
cld
jl
mov
push
dec
mov
jnp
daa
pushf
or
clc
adc
xor
push
cmp
xor
out
pop
fwait
pusha
leave
fstps
mov
scas
sub
xchg
sahf
jae
jmp
sbb
mov
movsl
push
adc
sbb
dec
xchg
negl
pop
in
lods
cmp
ret
sbb
xor
mov
sbb
mov
xor
mov
pop
inc
mov
imul
add
add
jno
jmp
loop
pcmpgtb
jp
mov
xchg
mov
adc
call
inc
jno
call
sbb
mov
gs
shl
lods
loope
fdivrp
incl
sti
fsts
lds
lds
and
sbb
iret
fs
add
lahf
arpl
ljmp
ret
lods
xorb
iret
xor
mov
pop
sub
add
ss
ja
jns
ret
cld
jo
popl
jnp
popf
and
sub
clc
in
mov
mov
mov
movsb
imulb
aad
sub
int
pop
scas
mov
and
call
lcall
sub
mov
pushf
and
jp
dec
and
je
outsb
or
stos
stos
mov
jmp
sbb
inc
out
jle
ja
add
les
ljmp
push
test
stos
test
cmpl
xor
inc
sbb
clc
sub
ljmp
mov
mov
call
jne
lods
call
test
mov
ljmp
cli
shll
loop
imul
xor
sub
adc
add
inc
mov
loope
clc
sub
test
into
pop
dec
mov
test
pop
and
pushl
xchg
data16
adcl
data16
in
lahf
pop
movsl
fdiv
lcall
decl
movsb
cmpsb
jp
pop
push
add
dec
mov
int3
ljmp
test
push
repz
jge
jns
push
cld
ljmp
imul
xchg
and
add
xchg
es
sbb
push
call
std
jg
imul
jle
movsl
test
inc
sub
xchg
inc
pop
sbb
mov
call
push
ljmp
mov
in
in
push
pushl
xor
ret
push
add
out
cs
iret
mov
xlat
out
daa
rcrb
fwait
xchg
jno
cmp
jo
test
dec
jle
add
pop
xor
or
int
movsb
cmp
mov
xchg
cwtl
mov
inc
push
js
inc
aas
insl
arpl
in
decb
dec
int
jle
add
jmp
mov
loope
rcll
test
ret
sbb
stos
fdivrp
call
push
mov
lods
jae
inc
movsl
pop
adc
out
into
aam
adc
sahf
dec
xchg
sbb
call
rcrl
shr
cmpsb
dec
lahf
sub
push
adc
inc
sbb
fs
pop
sub
ljmp
or
incl
adc
adc
mov
xchg
xchg
pop
push
jp
aam
daa
cmpsb
pop
inc
daa
int
call
and
ja
ds
sbb
aaa
inc
and
movsb
scas
cmp
ljmp
push
and
imul
cmp
xlat
out
inc
lds
push
jnp
mov
lcall
mov
mov
lods
jbe
or
pushf
test
jg
je
inc
int3
jecxz
cli
js
adc
jge
rorb
mov
outsl
test
incl
pusha
push
outsb
popa
test
xchg
in
jl
xor
imul
mov
outsl
pushl
push
stos
dec
pop
mov
cmpl
jae
jae
testb
gs
pop
dec
sub
inc
push
ror
push
and
mov
lock
mov
push
insb
pop
cmc
ljmp
jecxz
push
fwait
test
lods
add
add
cli
dec
sbb
call
arpl
notb
hlt
sub
push
and
xchg
addb
adc
fildl
xor
push
imul
xor
push
loopne
xchg
orb
jecxz
and
and
aad
jbe
call
adc
xchg
ficoms
adc
sarb
rcll
pop
cmc
testl
cmpsl
sbb
and
cmp
shr
or
ljmp
fcompl
test
jmp
push
sub
clc
pusha
xchg
psubd
sbb
and
jmp
sbb
test
lahf
mov
mov
xor
pop
adc
xor
leave
or
mov
into
sub
cs
in
leave
ljmp
les
div
gs
push
sti
das
dec
jbe
or
jl
xchg
adc
lcall
shlb
push
sub
jmp
sahf
ja
cmp
in
xor
pop
jmp
xor
repz
jb
lret
sub
inc
orl
decl
xor
xchg
jbe
into
adc
ljmp
mov
fstl
scas
lods
dec
mov
sahf
aad
aaa
gs
dec
ret
pushl
loope
jne
jbe
imul
clc
push
mov
loopne
in
outsb
jae
add
ljmp
mov
loope
jp
into
sbb
jg
dec
lcall
fs
ljmp
mov
outsb
movb
fcomi
outsb
jmp
jnp
test
sub
add
data16
call
popa
pop
mov
mov
jae
sub
idivb
aas
ds
push
popf
mov
inc
push
test
cmc
aas
add
xchg
or
cmpb
scas
jg
xchg
pop
sbb
xchg
outsb
mov
lcall
lcall
sub
lock
aam
jp
push
cmpsb
rcrl
pop
push
popf
jge
cmp
fsubr
ret
out
lcall
lcall
ds
fistps
shlb
xor
push
out
scas
sub
incl
pop
dec
gs
jns
mov
popl
jg
jmp
pop
imul
shr
or
or
and
movsb
xlat
and
leave
mov
mov
mov
rcl
sbb
jle
pop
mov
fs
outsl
dec
adc
outsb
adc
jmp
sbb
xchg
dec
push
mov
loope
pusha
dec
ljmp
mov
xchg
ret
add
xchg
push
or
sub
ss
cmpsb
pop
jnp
and
out
incl
cld
mov
in
adc
dec
cmc
push
xor
ret
lcall
xor
jmp
mov
inc
adc
add
int
pop
add
das
mov
xlat
dec
jmp
mov
out
cmp
test
mov
rcll
iret
stc
hlt
into
cmpsb
je
sti
jne
punpcklwd
pop
outsl
or
push
pop
arpl
mov
add
pop
stc
pop
jns
mov
addr16
fdivs
and
adc
mov
xor
data16
call
add
in
popa
shr
jge
test
add
adc
push
pushf
jnp
jno
inc
repz
push
cld
jmp
outsl
scas
nop
pop
in
in
xchg
repnz
bound
push
and
xlat
pop
lcall
inc
xor
inc
in
lret
pushl
lods
xchg
pop
clc
sbb
ljmp
fnstsw
dec
sub
mov
test
mov
jo
and
cld
cld
popf
and
outsl
or
ljmp
pop
cmp
push
cmpsl
ds
pushl
dec
xchg
mov
and
mov
jecxz
and
xor
cmp
dec
loop
incl
cmpsb
outsl
les
jns
mov
xchg
movsb
pushl
mov
insl
aaa
mov
and
xchg
mov
mov
or
fdivr
decl
pop
out
pop
fildll
int3
stos
pop
inc
pop
popa
and
rcr
adc
mov
or
jbe
mov
xor
push
push
jo
movl
shrl
push
mov
jg
jmp
scas
inc
push
imul
sbb
add
orb
dec
pop
out
call
fisttps
pop
mov
dec
in
xchg
nop
pop
pop
fidivrl
btr
lret
hlt
pushl
jb
add
jmp
lock
test
subb
int
sbb
fbld
push
pushf
lahf
ja
cmc
int3
adc
mov
xchg
call
dec
pop
pop
xor
cld
mov
xchg
cwtl
pop
rcrb
out
mov
xchg
clc
jg
sbb
popa
cmp
mov
push
nop
xor
mov
cld
adc
xchg
cmc
adc
decl
push
jns
or
sbb
dec
jecxz
icebp
dec
cmp
inc
enter
in
sub
sub
sub
inc
jmp
sub
test
push
clc
call
push
cmp
bound
jmp
adc
cmp
or
mov
xchg
push
push
sbb
push
leave
mov
adc
mov
jl
xchg
cmpb
push
push
xchg
lock
pop
in
mov
mov
ljmp
jnp
or
lret
add
mov
shl
shlb
mov
pushl
movsl
repnz
fimuls
inc
inc
cmp
cwtl
cmp
mov
cmp
decl
imul
cwtl
aad
jne
fwait
jo,pn
out
sub
test
and
icebp
xor
jmp
and
xor
mov
bound
lock
pop
out
mov
aaa
clc
fs
clc
ljmp
lods
mov
jb
sbb
mov
xchg
sti
push
ficompl
jp
xchg
stos
pop
pop
push
adc
cs
sbb
jg
add
sti
sub
xchg
pop
incl
test
jmp
out
jne
inc
test
fs
ret
imul
pushl
test
pop
mov
mov
outsb
loop
jg
xchg
sbb
imul
gs
decl
dec
cs
movsb
shlb
repnz
and
pop
lods
ret
addr16
inc
cmpsl
movsb
cmp
call
stos
outsl
mov
or
pop
sbb
in
sbb
call
sbb
cmp
mov
mov
cmp
dec
inc
sahf
mov
inc
mov
cmc
jecxz
icebp
aad
test
cmp
adcl
mov
or
addr16
lret
inc
aaa
xchg
adc
pop
ljmp
loope
ja
cmc
xor
add
push
out
push
jbe
pop
andb
mov
or
jnp
lea
pop
rorb
stos
divl
xchg
std
mov
inc
cli
ret
dec
adc
dec
lods
or
shll
sub
or
fs
dec
add
cmpsl
and
aas
mov
mov
std
decl
pop
popa
sbb
inc
and
push
leave
repz
outsb
call
je
cwtl
add
xor
loopne
inc
mov
push
sub
inc
or
ret
fistpl
mov
cwtl
call
sti
shlb
aas
shll
pop
push
and
testb
xchg
sbb
pop
pop
pop
xchg
inc
and
test
clc
xor
jge
lcall
inc
fs
lods
mov
pop
cwtl
and
aam
loop
lods
andb
push
lret
loop
pushl
into
out
repz
int3
repz
imul
adc
int
mov
popa
mov
mov
xlat
lds
fisttpll
inc
insb
jnp
mov
loopne
decl
xchg
mov
or
pop
int3
mov
pop
fs
call
repnz
mov
or
push
sbb
adc
xor
ljmp
and
sub
int3
cmpb
push
add
aaa
dec
and
add
fs
outsl
arpl
test
push
sbb
inc
pop
ror
ja
jmp
and
ror
xchg
mov
ret
lock
ljmp
push
pop
in
cli
mov
shlb
mov
icebp
push
push
xor
push
sbb
mov
sbb
int3
mov
mov
xchg
jmp
decl
push
inc
xchg
adc
adc
loop
dec
adc
sbb
cmp
fidivrl
dec
scas
je
sbb
pusha
mov
lahf
out
and
jne
dec
sbb
jbe
stc
mov
mov
dec
pop
fisttpll
ret
lahf
xchg
lea
subb
loope
scas
clc
mov
adc
das
mov
push
dec
inc
repz
fidivrs
add
jmp
sbb
int3
sahf
stos
jmp
adc
addb
pushf
xor
mov
jo
call
jmp
push
dec
xor
jg
dec
sub
enter
mov
mov
lcall
je
ljmp
aas
mov
jo
das
les
fstpl
lret
adc
sbb
and
jmp
fcomps
xor
decl
popf
sub
out
sti
xor
xchg
and
in
and
sub
nop
aas
push
arpl
fcomip
dec
xor
or
in
loope
jg
decl
rclb
sbb
jl,pt
lret
mov
or
mov
pushl
sbb
jp
ds
push
in
es
lods
mov
mov
ljmp
sbb
add
cmp
dec
imull
cmp
in
stos
pop
dec
rorl
add
orl
enter
fildll
sbb
test
or
repnz
stos
ret
daa
popa
pop
in
gs
lods
movsl
test
aam
xchg
outsl
ljmp
mov
out
or
sbb
xchg
sbbl
add
cwtl
sub
lcall
lar
iret
xchg
lret
mov
mov
in
cmpsl
sub
mov
jl
inc
cld
add
push
pusha
xchg
pop
in
push
call
cmp
hlt
xor
rorb
fcmovb
cmpsb
mov
sbb
clc
and
cmc
call
stc
push
push
enter
lds
bound
pushl
sbb
out
pop
cmp
mov
clc
decl
scas
negb
inc
and
pop
jae
xor
pushf
xor
push
sbb
inc
das
xor
iret
rorb
mov
mov
in
test
mov
mov
call
in
lock
push
jb
inc
dec
je
push
mov
push
sub
inc
decl
mov
enter
shrl
fistpl
xlat
pop
out
xchg
push
out
mov
mov
mov
jns
les
xor
cs
xor
inc
popf
push
mov
jmp
or
cmc
mov
xchg
enter
ret
mov
mov
jg
bnd
arpl
pop
mov
add
fcmovnb
cmp
inc
mov
lcall
cmp
pop
addr16
ds
cmc
int3
cmp
xchg
mov
push
fdivr
pop
lds
or
jne
mov
cmpsl
mov
push
sub
push
mov
adcb
or
call
mov
sahf
push
jo
fwait
sub
loope
add
xchg
cltd
mov
dec
cld
aaa
pushf
sbb
outsl
push
call
add
add
mov
cmpl
sub
mov
xchg
push
negl
outsl
hlt
mov
std
aam
dec
mov
lods
stc
outsl
xchg
xchg
std
fistpll
test
cmp
pusha
jl
fimull
jne
dec
mov
jns
ds
mov
shrl
dec
cld
popf
pushf
push
push
cmc
pop
pushl
aam
jp
mov
push
mov
div
add
add
adc
stos
adc
xchg
xchg
imul
jne
call
cmp
out
and
loop
scas
outsl
sar
jnp
jbe
inc
stos
cld
cmp
ret
ss
or
adcl
pop
cmp
cmp
add
ds
stos
pop
cmc
dec
or
stc
aaa
test
decb
hlt
jmp
aaa
mov
cmp
dec
add
xchg
out
aas
mov
outsl
mov
cmc
ljmp
shl
incb
outsl
jge
arpl
push
lock
call
pushf
lret
pusha
cmp
cwtl
ljmp
lcall
in
or
xor
lods
jmp
pop
mov
testb
repnz
decl
ja
or
cld
xor
int
dec
cmp
sahf
mov
pop
sub
ss
ljmp
fs
inc
mov
jp
jp
cmp
arpl
pop
outsb
or
repz
jg
maskmovq
ljmp
add
and
dec
mov
in
push
int
mov
pop
scas
outsb
pop
mov
add
lcall
push
aaa
pop
jl
popa
push
test
xor
mov
add
call
loopne
mov
add
pop
rclb
xor
jbe
sub
ljmp
ljmp
cwtl
xor
pop
or
pushf
push
scas
cld
push
jp
in
jl
in
dec
lock
cmp
add
addr16
inc
sarl
fistpll
xchg
prefetch
mov
lods
jg
sbb
xchg
mov
in
sub
std
test
and
jg
ja
mov
xorb
pop
cmp
sahf
mov
and
pop
adcb
cmp
xor
mov
ljmp
mov
lahf
cld
xchg
sahf
push
inc
out
shlb
or
jmp
test
call
outsl
arpl
pop
push
idiv
les
out
in
and
xchg
int3
xor
outsl
cli
pushl
ret
rclb
mov
xor
ss
xchg
je
fnsave
push
cmp
lcall
push
fisttps
test
sbb
loope
mov
les
ja
call
jp
push
imul
push
and
jnp
repz
sub
adc
cmpsl
insb
pushf
xlat
jg
or
add
inc
jmp
insb
xorl
inc
xor
lods
jg
std
ja
fstl
dec
adc
lcall
xchg
call
push
mov
xor
lds
sbb
fdiv
mov
sbb
and
cs
loop
ljmp
jb
adc
icebp
sub
movsl
test
xlat
ret
xchg
xchg
jg
fimuls
xchg
pop
mov
push
sub
test
sub
inc
scas
mov
cld
push
xor
mov
xor
popf
jp
push
push
and
imul
stos
pop
jecxz
sar
pushl
out
pusha
xor
ret
loopne
arpl
cltd
imul
fdivl
aam
add
jns
cmp
pop
mov
jl
imul
cld
mov
push
mov
mov
ljmp
mov
insl
xor
xor
xor
dec
mov
ret
movsb
adc
dec
and
sar
ljmp
sbb
lahf
ljmp
push
mov
pop
insl
inc
popl
xorb
jg
ss
das
inc
aaa
rcrl
aam
mov
stos
ret
lods
or
sub
imul
push
pop
lods
stos
pop
outsl
ret
or
push
stos
stc
aam
insb
lret
mov
or
dec
decl
jl
sub
mov
push
mov
and
pusha
mov
and
dec
fwait
mov
pop
loopne
jecxz
pop
icebp
shlb
sbb
jnp
add
xor
incl
repz
out
stc
cmp
stc
das
pop
shr
je
xor
sbb
cvtps2pi
jo
and
jmp
decl
cmc
pop
jl
sahf
push
mov
sbb
adc
test
push
incl
popa
push
daa
test
jne
jne
rol
adcb
mov
sub
ljmp
fmuls
aam
bound
mov
arpl
lcall
sub
mov
inc
aas
sbb
lods
pop
dec
adc
jg
sub
repz
sar
call
sbb
lret
movsl
loopne
pop
jo
ret
and
loope
loope
ljmp
mov
push
mov
lahf
das
shll
arpl
dec
je
std
fcomip
and
les
cmp
test
jg
cs
clc
pushf
in
into
rcrl
push
push
sbbl
mov
js
lcall
adc
pop
xchg
xchg
ficompl
dec
and
mov
jne
repnz
test
xchg
dec
das
pushl
ss
sbb
adc
pop
subb
sub
stc
icebp
insb
mov
std
call
xchg
xor
repnz
fdivrs
fmull
sub
pop
dec
and
fisubrs
incl
inc
adc
jle
loopne
inc
or
xor
dec
pushl
std
and
mov
mov
or
jge
mov
test
and
jmp
mov
xchg
mov
cmc
sbb
call
divb
stos
mov
jl
sbb
and
add
shlb
repnz
call
enter
je
xor
cmpsb
lds
pop
push
add
shrb
flds
pop
aas
out
push
adc
lods
or
mov
pop
hlt
sub
addr16
dec
sbb
pop
or
pusha
cld
push
pop
add
push
add
fstpl
dec
gs
and
jg
xor
and
dec
fdivp
ds
cmovl
jbe
dec
pop
ret
call
push
or
in
cmp
or
mov
or
call
and
enter
icebp
dec
add
sbb
mov
das
jge
lea
clc
je
lahf
and
cmp
cmc
jle
adc
mov
mov
out
and
and
mov
jl
movsb
push
sub
decl
lock
leave
push
ja
inc
mov
bound
pop
cmpsl
fwait
loope
jmp
jnp
fmuls
outsl
mov
repnz
cld
int3
loop
mov
repnz
outsl
adc
pop
std
call
sti
mov
cmpb
xor
pusha
xchg
or
jne
xor
mov
fcomip
call
js
dec
sbb
outsl
out
mov
pop
mov
pop
and
pushf
jg
inc
cmp
adc
arpl
add
jge
pop
push
in
mov
pushf
lods
movsl
fsubl
mov
mov
lret
outsl
and
sub
add
add
cmpsb
nop
add
mov
inc
push
xchg
icebp
jmp
bnd
inc
xor
push
out
push
xchg
xor
push
cltd
add
mov
in
pop
divl
cmpsb
cmc
pop
jno
and
into
pop
std
orl
call
sub
adc
rcrb
add
test
cmp
sub
mov
mov
jp
mov
pusha
divl
aad
daa
push
call
mov
pop
push
push
pop
mov
xor
inc
xchg
inc
dec
int3
lret
fiaddl
imul
in
ss
mov
mov
add
xor
jg
fmulp
push
push
sbb
sub
adc
jns
jne
xchg
mov
decl
arpl
mov
out
sbb
lahf
mov
xlat
test
sbb
pop
out
scas
ret
pusha
push
mov
add
jecxz
sub
and
sub
test
jnp
scas
mov
js
cld
pop
in
std
insl
jg
clc
or
jns
mov
or
mov
jno
das
out
sbb
push
incl
sub
push
jp
inc
dec
mov
int
xchg
enter
mov
flds
mov
mov
mov
das
outsl
ja
out
cltd
xor
incl
xchg
ss
dec
int
jle
rcrl
int3
sub
pushf
popf
cmp
incl
imul
test
dec
and
pusha
in
push
ret
pop
je
ss
out
jno
xchg
cltd
call
ja
push
xor
mov
mov
pushf
push
ljmp
fstl
dec
pop
out
ljmp
cltd
aaa
add
inc
push
clc
dec
mov
cmp
jnp
scas
xchg
mov
imull
in
test
pop
xchg
outsl
shrl
pushl
data16
popf
push
ret
rol
sub
dec
or
pop
aam
inc
and
shlb
cli
decl
cld
jbe
lock
and
int
or
mov
add
outsl
popa
gs
incl
shl
mov
das
mov
leave
aad
into
cwtl
lods
jne
cmpsb
insb
ljmp
stos
sub
pop
cmpsl
adc
into
xor
dec
mov
ret
decl
dec
adc
gs
pop
rcl
cmp
fs
es
xor
mov
dec
out
xchg
lock
push
mov
add
leave
test
or
mov
fwait
jno
sahf
call
push
or
mov
xor
fildl
xchg
call
inc
pushf
jae
and
lret
call
rclb
or
pop
jp
inc
mov
and
sarb
sarl
ja
lcall
mov
stos
shr
lock
shl
lret
js
mov
xchg
out
clc
pop
int
ret
mov
lods
mov
adc
mov
jnp
and
ret
jmp
pop
push
loop
jnp
adc
lock
adc
scas
aad
sbb
ljmp
xchg
mov
sub
aam
fdivr
cmp
in
push
cmp
mov
or
mov
inc
xor
cltd
jmp
lea
mov
jo
mov
scas
clc
push
push
push
or
out
cmp
jb
xchg
shr
aam
mov
enter
pushl
fsubr
sbb
sub
aad
xchg
sub
jns
dec
fcomip
call
mov
jo
lds
loopne
rcl
adc
sub
mov
push
dec
sahf
inc
loope
add
jg
lds
mov
push
icebp
in
add
loopne
dec
rcr
push
dec
stc
jne
imul
push
mov
mov
adc
mov
adc
dec
sbbl
jnp
or
adc
mov
pop
fistpll
dec
push
xchg
into
sub
push
cmpl
decl
mov
cmc
mov
dec
xlat
ret
mov
test
mov
add
decl
into
cmp
xchg
add
jne
xchg
fidivrs
outsb
xchg
je
test
add
fstps
cmp
cmc
ljmp
and
push
sti
fstpt
sub
pop
ja
movsb
jle
aas
sahf
sar
jp
mov
or
test
mov
stos
out
jp
pop
fstpt
aad
mov
test
cwtl
call
cmp
rclb
adc
ljmp
inc
push
outsb
mov
and
add
inc
loopne
mov
lcall
adc
ret
test
sbb
pop
aas
negb
lcall
rorb
mov
xchg
out
out
xchg
cmp
pop
ja
in
ficomps
lcall
std
pop
and
je
test
push
adc
lahf
jae
fwait
test
shrb
mov
popf
fstl
cwtl
fcmovnu
add
dec
stos
jnp
iret
out
fstpl
jmp
push
shlb
arpl
movsl
aaa
adc
cmp
bound
mov
and
ljmp
mov
xchg
xchg
lret
test
add
outsb
mov
incl
shlb
int3
or
push
push
mov
mov
arpl
push
pop
push
int
call
cmp
mov
scas
daa
jle
adc
sbb
fstps
pop
mov
test
scas
jmp
pop
jp
outsl
cld
cmp
rorb
mov
sbb
sti
cmpsb
dec
or
push
pop
lods
jbe
ss
sti
cmp
dec
shrb
gs
inc
jge
dec
push
stc
jl
or
idiv
pushl
jge
mov
sbb
movsb
insl
fsts
pushf
jb
loopne
and
jmp
mov
jmp
nop
in
add
fiadds
mov
out
clc
mov
mov
in
fcoml
mov
insb
mov
frstor
imul
fwait
shrl
pop
enter
sub
test
add
xor
call
les
push
out
mov
jge
sbb
lock
add
hlt
pop
lahf
dec
clc
out
sar
fcomip
ljmp
sbb
sub
fwait
or
xor
out
gs
test
mov
jne
shlb
fldcw
cli
ds
test
xchg
cmp
or
dec
dec
call
sbb
jecxz
push
in
mov
add
ja
rcrl
xchg
dec
rol
sbb
inc
mov
sbb
stc
in
incl
push
call
cmpsb
add
mov
or
inc
sub
xchg
inc
sbb
pop
sbb
sahf
jmp
repz
fcompl
dec
cs
inc
push
pop
je
push
clc
mov
stos
adc
sar
jmp
xor
lcall
xchg
out
scas
stc
test
adc
xchg
mov
pop
shrb
test
lcall
ret
inc
int3
shll
push
sub
cmp
out
jnp
ljmp
insb
ljmp
ja
inc
cmc
lods
add
pop
dec
mov
ret
pslld
jmp
in
scas
imull
mov
push
imul
leave
push
mov
pop
push
or
cli
jle
ljmp
or
xchg
ret
push
push
iret
xchg
or
decl
mov
in
cmp
test
std
pop
jecxz,pt
push
cld
mov
xchg
mov
pushl
hlt
stos
loopne
mov
int
bound
lret
mov
stos
or
pop
xor
lds
incl
cltd
jno
adc
xor
js
cmpb
mov
push
cld
lcall
stos
out
jne
insb
xor
bound
in
mov
pop
pop
add
lcall
fwait
repz
pop
scas
xchg
pop
ss
dec
pop
mov
add
rolb
adc
aas
psrad
addb
push
test
mov
jno
jl
jp
mov
pushl
jecxz
and
or
adc
or
shll
outsb
and
mov
outsl
lret
mov
cltd
sub
mov
push
add
add
pop
std
fwait
lods
ret
testl
les
mov
out
inc
lcall
cmp
push
cmp
mov
sub
imul
call
inc
adc
xchg
cmp
int
test
jne
inc
gs
pushl
jns
jp
cmp
push
pop
cmp
je
icebp
pop
push
mov
popf
xor
insb
loope
test
inc
enter
adc
nop
pop
in
cmp
decl
call
test
icebp
insb
loopne
out
cmc
fbld
ret
pop
inc
push
jge
aaa
cmp
add
ss
jmp
pop
inc
gs
pop
out
popa
mov
mov
ror
in
sub
loopne
test
std
call
and
inc
aam
scas
dec
xchg
jmp
and
xchg
call
add
jl
imul
mov
dec
bswap
push
pop
inc
push
mov
stos
gs
sahf
inc
mov
xrelease
add
mov
cmpsl
js
ja
es
ljmp
mov
test
cmp
cmp
sahf
loope
push
insb
andb
pushl
ss
mulb
mov
scas
rolb
repnz
int
jae
and
mov
mov
mov
in
jno
pushf
in
mov
push
jbe
fldl
sub
lcall
add
jae
push
scas
out
push
gs
mov
jp
add
jmp
iret
jmp
addr16
mov
mov
std
repnz
mulb
mov
loope
fwait
loopne
push
sub
push
fwait
imul
inc
jae
das
pop
pop
int
sub
jae
insl
sarl
jp
in
shlb
lock
addl
jl
imul
int
inc
inc
sarb
decl
int
orb
addl
lea
sbb
gs
fdivrp
jmp
and
cwtl
outsl
in
hlt
pop
inc
push
lcall
rclb
mov
sti
sbb
jnp
pop
leave
fsubrp
js
cmp
stos
lcall
adc
mov
mov
xchg
das
int3
adc
and
mov
mov
stc
add
jecxz
scas
ljmp
sarl
adc
adc
test
adc
lcall
pop
jge
mov
jbe
sahf
xor
pop
in
stos
insb
push
cmpsb
outsb
aaa
jno
adc
ljmp
jno
push
fs
jae
lcall
mov
aam
push
xchg
push
in
movsl
sub
call
mov
fwait
clc
dec
sbb
sti
loope
mov
xchg
jae
dec
adc
xchg
cmp
leave
icebp
jmp
shlb
pusha
pop
jb
jmp
push
inc
mov
shr
cmc
xchg
xchg
inc
mov
push
fwait
mov
lods
insl
and
add
mov
xchg
les
aad
add
pop
insl
test
cld
insl
sub
jb
sti
mov
faddp
sub
test
mov
test
lahf
or
mov
push
lock
and
and
fmull
push
mov
fisttpll
add
xor
push
ljmp
hlt
jge
pop
stc
or
js
lcall
inc
cmp
xor
inc
lods
lods
sbb
popf
arpl
pop
aas
xchg
sbb
je
incl
ret
mov
push
jns
cmpsb
pop
rorl
xchg
out
dec
mov
lcall
inc
or
into
sbb
jae
and
push
sti
dec
inc
lods
aad
orb
mov
pop
cmp
mov
ja
jb
push
dec
inc
in
dec
je
popa
clc
sub
outsl
inc
dec
clc
mov
dec
adc
mov
xorl
or
jl
jnp
cltd
mov
sti
fwait
pop
mov
pop
and
decl
test
movsl
mov
mov
out
jge
cwtl
shl
ljmp
fistpll
ja
cli
lds
lahf
in
dec
fcomps
popf
cltd
ret
jp
mov
lret
cld
in
test
ljmp
cli
jne
add
or
xchg
scas
pushf
test
bound
in
shll
pushl
test
xor
push
sbb
adc
test
out
jnp
decl
inc
adc
jp
sbb
dec
jns
or
sbb
add
test
adc
iret
push
arpl
cmp
fmull
cmc
icebp
incl
add
inc
sbb
les
int
bound
xchg
fdivl
ffreep
inc
mov
fwait
pop
les
fidivl
repz
xor
lahf
hlt
jns
cmpsb
cld
pop
sub
int3
ret
addr16
jl
sbb
ljmp
xorl
sbb
xor
pop
cltd
jmp
shll
adc
in
xchg
andb
xchg
insl
and
push
jmp
push
mov
push
sbb
pop
sub
test
or
xchg
xchg
dec
idivl
mov
aaa
flds
std
dec
sar
lahf
cmp
mov
or
xchg
icebp
mov
jp
pop
sarl
jns
ficompl
push
pushl
std
ljmp
xchg
fdivs
add
inc
mov
xchg
es
push
popa
mov
ljmp
ljmp
in
or
add
jb
decl
inc
fcompl
mov
pop
cmp
mov
call
mov
sbb
icebp
gs
pushl
sbb
mov
xchg
mov
stos
mov
nop
in
cmpsb
and
mov
lcall
je
loope
pinsrw
and
mov
out
das
sub
pop
stos
mov
mov
decl
xchg
in
cmp
jo
jmp
xorb
outsl
cs
rclb
mov
pushl
mov
test
cs
sar
mov
xchg
lea
inc
in
das
out
and
stc
push
test
incl
aam
xchg
fwait
sbb
enter
in
cmp
and
mov
push
dec
gs
xor
pushl
and
movsb
sbb
fnstcw
jne
cs
xor
rorb
nop
mov
jmp
add
add
cwtl
mov
rcll
data16
lds
xor
daa
mov
mov
call
aas
add
hlt
and
test
cmpsb
loopne
out
mov
movsb
das
out
mov
lcall
mov
lret
xchg
pop
lcall
mov
cmp
and
repz
dec
nop
lods
pushf
sbb
mov
mov
add
cli
fmuls
adc
js
add
cli
sub
jl
test
lock
leave
iret
int3
ja
and
adc
mov
mov
fbld
call
mov
pusha
inc
push
dec
mov
inc
jle
adc
jg
and
loop
lahf
jp
in
fsubrs
push
call
xor
adc
jb
dec
jo
jb
outsb
jae
xchg
mov
stos
mov
aas
sbb
clc
clc
sub
push
lret
jbe
outsl
stos
addl
movsb
jge
mov
incl
sub
pop
aas
cmc
fdivrl
and
xchg
orb
decb
in
sub
add
stos
gs
add
push
or
iret
aam
lds
ljmp
jmp
in
scas
sbb
and
mov
push
jne
sar
call
clc
jmp
mov
jb
xor
dec
jo
xor
push
ficoms
call
lcall
jae
je
leave
inc
and
sub
mov
cli
pushl
arpl
lods
dec
lret
and
ret
cmpsl
cmp
add
dec
jge
scas
jns
dec
test
dec
dec
call
jbe
xchg
sbb
sbb
push
pop
dec
out
push
bound
cmp
sbb
in
fwait
jp
subb
mov
loopne
adc
mov
dec
xchg
iret
pop
xor
sub
test
pop
hlt
jle
jne
inc
inc
fnstcw
jne
jbe
ret
adcl
adc
ljmp
pop
pop
cmpl
mov
fsubrs
sbb
pop
shll
popf
stos
mov
mov
xlat
test
mov
and
xor
pop
fcompl
test
std
dec
loop
je
fdivr
loopne
adc
dec
movsb
add
pusha
or
sar
add
add
or
insl
or
incl
pop
push
or
or
or
or
scas
adc
push
adc
mov
adc
adc
lock
pop
sbb
adc
ficompl
adc
adc
add
data16
or
pop
adc
inc
add
fsubr
aaa
add
add
add
add
adc
js
xchg
mov
and
das
xor
push
cmpsb
loopne
jb
imul
ds
incl
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
dec
push
in
bound
js
fs
push
fldenv
mov
ss
les
pusha
xchg
or
daa
xor
inc
test
and
pop
push
ret
stc
xchg
or
dec
jmp
xor
sbb
roll
inc
pusha
scas
pushf
into
add
adc
xorl
adc
push
adc
pop
popa
jno
jle
int
and
adc
xchg
mov
lock
das
stos
and
loope
icebp
mov
mov
mov
and
inc
mov
fiaddl
or
mov
dec
xor
sub
rcr
call
cli
or
xchg
jae
sub
std
cmpsb
xor
aas
imul
faddl
cmp
inc
or
pop
les
fsts
dec
add
push
adc
loope
mov
cmp
ja
out
cmp
xor
and
jmp
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
repnz
roll
incb
mov
add
call
add
lds
cld
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
jmp
mov
bound
pop
lahf
mov
movsl
jecxz
pop
mov
xchg
cwtl
jmp
clc
cmpl
jg
or
ljmp
addr16
out
or
push
push
xchg
add
repnz
inc
lock
scas
fcos
decl
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
mov
add
mov
popl
movb
xchg
sbb
inc
dec
adc
adc
mov
xor
lods
scas
xchg
test
aam
and
sbb
call
gs
roll
fwait
movsb
jmp
push
lret
push
out
in
and
jg
divb
aas
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
decl
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
push
pushl
or
push
sahf
pop
clc
sti
jg
jno
lock
push
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
jmp
sbb
shrl
mov
mov
out
pop
jb
mov
mov
mov
sub
pop
mov
jl
mov
dec
jp
push
gs
jg
sti
stos
hlt
push
add
stc
loope
mov
sar
andl
aas
icebp
testb
mov
inc
imul
pushl
pop
adc
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
jg
decl
cli
push
inc
sbb
paddb
inc
mov
dec
call
cld
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
sti
jae
cmp
test
loopne
cli
adc
aaa
xchg
in
add
in
testb
adc
loope
fisttpll
out
aas
std
cli
push
ljmp
int
push
idivl
cmp
sub
inc
scas
inc
mov
cmp
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
dec
fsubl
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
pop
xor
fidivrl
push
sub
xchg
pop
clc
pop
hlt
sub
movsb
add
add
lea
jg
gs
std
xorb
jg
jmp
js
ret
das
pop
pop
pop
shlb
call
mov
push
jno
outsb
lock
or
sarb
std
pop
les
cli
mov
movsb
dec
xchg
mov
inc
arpl
mov
jb
and
insl
incl
sbb
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
repnz
push
fcomps
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
push
call
cmpsl
sahf
imul
fcmovnu
rorl
insb
stos
arpl
decl
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
pop
cld
pushl
xchg
or
mov
stos
dec
lods
xor
jg,pn
jg
loopne
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
call
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
idiv
jmp
shrl
icebp
ja
xor
cmp
xchg
mov
cwtl
int
cmc
lcall
ftst
jbe
xchg
and
pushl
shrb
shlb
out
aas
stc
add
out
gs
jno
fidivrl
adc
adc
pop
cld
addl
adc
and
lock
cmp
fmull
enter
pop
jmp
xor
pop
mov
sub
mov
in
testb
mov
push
sbb
push
inc
or
pop
ret
cmpsb
push
pop
jg
add
jg
mov
cmp
sub
adc
mov
mov
iret
mov
mov
push
push
sbb
stos
icebp
pop
incb
idiv
rorl
adc
push
inc
jecxz
sbb
sarl
adc
inc
sar
adc
lahf
push
in
inc
cmp
push
or
test
loopne
add
mov
fsubrl
pop
pusha
inc
fcomi
push
and
clc
push
sbb
push
sbb
shlb
push
and
mov
adc
inc
aas
clc
call
jnp
rcrl
rolb
pop
inc
jb
fistpl
adc
call
mov
addr16
pop
nop
mov
inc
sti
arpl
loop
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
jg
pusha
cmp
fistps
mov
jg
jg
stos
pop
sahf
incl
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
sbb
jmp
inc
and
mov
in
stc
mov
lahf
outsl
int3
push
sbb
or
cmp
mov
sti
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
or
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
cwtl
dec
call
xchg
aad
loop
lahf
mov
or
out
lcall
pushl
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
mov
cld
or
xor
pop
rcr
dec
mov
gs
pushf
lea
mov
jnp
jecxz
adc
inc
lds
push
pop
adc
imul
fisttpll
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
push
mov
lock
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
pushl
es
xchg
fidivrs
clc
ljmp
push
aas
repz
outsl
lock
in
jmp
stc
sbb
mov
clc
push
std
mov
rcll
or
mov
xchg
jg
aad
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
dec
jg
mov
inc
out
pop
or
or
dec
ss
xchg
mov
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
outsl
das
or
lret
pop
in
cmp
or
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
adc
aas
mov
cmpb
lods
jg
mov
sub
addr16
sbb
cld
daa
adc
std
jp
std
adc
cltd
or
mov
ret
nop
dec
cld
stos
jle
icebp
das
incb
lock
pop
pop
div
cld
idivl
addl
scas
stc
lahf
loope
andb
shrl
je
push
xor
mov
add
fs
call
out
icebp
mov
loope
mov
cmpsl
popf
sbb
mov
mov
fbstp
push
daa
outsl
das
int
pop
mov
add
cmpsb
cmp
call
popf
js
data16
decb
adc
mov
add
mov
or
or
add
fs
inc
add
loop
out
or
aaa
std
fistpll
cmp
inc
sbb
xchg
mov
pop
cmp
mov
aas
icebp
ret
ror
sbb
mov
adc
sub
adc
aas
pop
clc
loope
loope
mov
or
jp
dec
add
xlat
jbe
scas
and
fbstp
xchg
flds
call
and
fdivrl
xchg
lcall
decb
js
pop
fbld
sarl
pop
out
jg
dec
sbb
jno
ret
fs
mov
inc
sbb
iret
call
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
jmp
outsl
jmp
std
mov
daa
jmp
fcoml
mov
push
jae
popa
lds
outsl
pop
hlt
dec
add
pop
stc
push
dec
out
fstpt
mov
enter
popf
xchg
pop
add
cmpsl
mov
daa
icebp
push
lahf
sti
inc
lcall
aaa
sbb
cmpsb
scas
les
pop
xor
mov
xchg
mov
fildll
fsubrl
add
xor
sub
inc
aas
add
cmp
add
sti
push
sti
pop
inc
xor
stos
inc
dec
push
mov
push
push
mov
int3
pop
iret
add
push
jbe
stc
push
or
orb
nop
add
add
inc
pop
test
mull
dec
andl
mov
push
push
scas
insb
push
inc
or
add
outsb
negl
bnd
lret
addb
inc
jle
sahf
pusha
add
bound
imul
pop
push
add
mov
add
push
insb
or
ds
add
jne
add
out
add
scas
sub
and
push
mov
inc
jb
adc
or
pusha
addr16
add
lds
dec
fs
mov
sub
fwait
insl
push
pop
push
dec
jo
daa
xchg
and
push
cmovs
mov
jne
add
push
lock
outsl
insb
push
outsb
popa
jo
push
mov
sbb
sub
mov
dec
dec
jne
js
xor
inc
scas
jp
add
add
adc
sbb
cmp
jns
push
inc
out
adc
popa
jb
add
push
adc
ljmp
add
mov
insl
insl
sbb
sub
xchg
cmpsl
xorb
xchg
jo
or
add
int3
int3
cmpsb
adc
loopne
sub
in
outsb
imul
insb
stos
sub
sub
inc
sub
add
divb
flds
sub
dec
inc
test
mov
mov
cli
arpl
mov
xchg
test
inc
cmp
push
fisubs
mov
pusha
sbb
loop
ds
insb
jne
addl
or
sti
adc
icebp
insl
clc
sub
dec
mov
ficoms
jo
inc
push
fildl
cmp
inc
push
pop
jbe
ret
mov
or
push
jne
addr16
push
pop
jb
push
inc
inc
subl
jns
fistpl
or
mov
inc
jae
adc
pop
mov
int3
mov
int
or
fs
inc
jecxz
xor
hlt
std
dec
cmp
cmp
jae
sub
xor
mov
pop
inc
flds
sub
mov
push
jo
packuswb
fidivl
mov
inc
dec
sbb
pop
pop
insl
adc
mov
adc
push
aas
sbb
jo
mov
and
in
imul
xor
and
mov
xor
jno
inc
roll
or
and
test
mov
pop
pop
and
popw
push
gs
mov
lret
divl
fs
push
inc
xchg
pusha
rol
pop
popa
and
das
mov
cmp
jae
pushf
inc
or
mov
dec
inc
dec
or
inc
mov
or
pop
mov
dec
jb
sub
push
xlat
fs
xchg
lods
xor
je
ja
mov
add
stos
pop
mov
cmp
dec
mov
mov
cmp
cmp
and
inc
popa
es
jp
jmp
test
push
fdivs
mov
adc
shrl
sub
orb
jbe
ret
mov
pop
test
mov
cwtl
cmpb
dec
push
pop
mov
jmp
or
jne
lods
pop
stos
aad
add
aaa
stos
jns
inc
je
push
and
xlat
fildl
out
sti
or
and
push
inc
sbb
into
mov
sub
jno
push
pop
ficompl
loope
pop
push
or
rcl
mov
add
shlb
outsl
lods
jb
xorl
sbb
mov
sbb
mov
push
xchg
or
add
out
ret
pop
aaa
adc
xlat
mov
dec
and
iret
push
pusha
push
stc
pushf
push
jne
sub
or
lea
push
pusha
or
pop
gs
jae
xor
xchg
and
loope
popa
add
test
xchg
jnp
xor
ficompl
dec
add
sti
inc
mov
imul
repnz
scas
pop
outsb
push
outsl
add
and
add
add
rclb
js
test
les
inc
rcl
cmp
mov
gs
jne
stos
int
inc
cmpsb
xchg
or
fdivl
arpl
sti
mov
popa
sub
fs
pop
adc
jo
adcl
mov
sbb
inc
out
loop
jmp
xlat
fiaddl
mov
or
and
jo
xchg
push
popa
sbb
xchg
outsb
adc
dec
shr
mov
mov
sbb
sub
push
fiadds
xchg
pop
and
inc
jns
cli
pop
cmp
idivl
xor
scas
mov
or
jb
and
test
inc
in
lods
lods
cmp
inc
and
arpl
sbb
pop
inc
imul
js
xor
fs
fidivl
mov
inc
insb
notl
jle
mov
ret
ljmp
push
mov
into
cmpsl
cmp
jae
xor
aad
test
nop
iret
mov
ja
jns
push
lds
inc
popa
add
mov
cwtl
add
scas
nop
sbb
mov
push
les
movsl
push
movsb
fincstp
and
push
push
xor
push
xchg
and
adc
or
inc
adcb
jnp
push
adc
inc
nop
ja
pop
fists
jnp
or
dec
pop
sub
outsb
dec
adc
adc
ss
sar
pop
imul
mov
mov
xor
xchg
movsb
dec
adc
lcall
push
xchg
cmpsb
cmp
push
addb
pop
loopne
sbb
inc
shl
sub
pushf
out
inc
jb
xor
cmp
and
dec
or
add
and
mov
and
push
or
out
stos
jg
addl
inc
jae
fcomp
fiaddl
inc
leave
inc
rcrl
cs
fisubl
imul
iret
push
repz
jo
sbb
and
test
insb
cmp
das
mov
dec
rclb
push
icebp
adc
ds
mov
mov
imul
mov
sbb
aad
add
push
mov
lret
push
mov
call
push
xor
mov
and
fcoml
adc
push
mov
adc
fstpl
adc
inc
or
hlt
or
or
mov
sub
cmovno
rorb
addb
jmp
fisubs
test
push
icebp
and
jb
lods
int3
and
cmpsb
fdivl
shll
adc
insb
jl
mov
push
push
pop
inc
mov
mov
xor
xlat
push
mov
mov
push
js
into
dec
mov
test
or
int3
adc
pop
sub
adc
ja
aaa
dec
sub
cwtl
mov
adc
or
add
sbb
outsb
push
push
fcompl
lret
mov
shrl
xor
data16
pop
in
mov
xchg
mov
roll
xchg
lods
pop
and
sub
jecxz
test
cwtl
add
mov
and
inc
xor
sbb
lds
movsb
xchg
inc
push
dec
aas
in
inc
rcll
cli
xor
or
push
push
test
movsl
outsb
out
mov
fs
or
movsl
push
pop
push
pusha
jno
pop
adc
sbb
sbb
cmp
mov
bound
xchg
scas
fxch
add
pop
inc
pop
lods
pop
push
iret
jns
add
or
kmovb
push
fs
pop
shll
outsl
and
cmpsb
pop
jnp
push
dec
and
sub
push
or
loope
arpl
cmp
xchg
sbb
mov
add
cmovno
push
sahf
pop
mov
mov
jmp
push
inc
out
adc
inc
mov
repz
sub
cmc
jb
pop
xchg
dec
push
dec
push
imul
add
rorb
jne
data16
shlb
xchg
add
pop
movsb
pop
add
jae
negl
loop
pop
bound
sbb
sbb
int
sub
call
inc
rorl
loopne
mov
add
ss
and
loopne
in
shrb
pop
lret
fwait
divb
add
push
cmp
cmp
push
xorb
mov
push
add
or
or
xor
fsubl
sbb
repz
push
mov
cmp
insl
dec
pop
add
jnp
lock
add
xlat
add
and
fsubrl
popa
adc
sbb
negl
fdivrp
adc
rclb
inc
cs
adc
int
cmpb
pmaxsw
rcrb
pusha
dec
mov
out
sbb
push
push
add
and
add
add
incl
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
insb
inc
add
add
