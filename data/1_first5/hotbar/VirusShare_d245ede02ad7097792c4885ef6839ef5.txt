fcomp
decl
dec
jns
add
mov
or
sbb
sub
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
std
mov
pcmpeqd
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
push
push
xor
push
mov
adc
cmc
adc
fisubrs
les
adc
incl
sbb
clc
imul
add
push
mov
push
push
push
xor
je
push
push
push
push
idiv
data16
in
sbb
clc
add
pop
sbb
inc
pop
shlb
nop
jne
pop
pop
pop
lcall
repnz
add
or
inc
or
jle
dec
push
xadd
dec
test
jg
mov
mov
push
mov
mov
call
ret
pop
add
fdivr
inc
push
push
mov
pop
mov
mov
les
insb
and
aaa
cld
ja
mov
push
push
fwait
and
or
dec
jno
outsb
push
mov
std
orl
dec
testb
out
sub
sbb
push
and
push
jno
into
notl
dec
je
sbb
add
pop
rclb
rclb
jmp
adc
dec
add
jnp
incl
cmpl
jne
push
mull
pop
mov
jmp
lahf
sarl
add
inc
shlb
add
sub
lods
mov
push
and
in
xchg
or
addl
xchg
push
push
adc
mov
adc
data16
mov
rcr
cmp
xor
lret
bound
test
push
add
loopne
ret
filds
dec
and
push
push
hlt
mov
pop
sbb
push
push
xchg
ds
loope
mov
loope
push
push
add
filds
mov
outsl
mov
jb
push
push
aam
ret
daa
push
or
mov
sete
into
xchg
push
push
into
nop
push
mov
test
mov
mov
aam
adc
cmp
out
fidivrs
les
add
push
push
inc
pop
inc
sbbl
rol
inc
pusha
dec
das
sbb
and
push
inc
add
loopne
pusha
inc
and
push
mov
roll
push
aam
xor
mov
push
daa
out
rcrb
lock
aam
xor
enter
push
push
dec
push
mov
lea
jle
pop
in
pop
mov
dec
jl
push
mov
bnd
add
sbb
in
inc
lret
add
nop
mov
inc
xor
not
sbb
adc
pop
sub
cld
clc
shr
push
mov
and
mov
cmpsl
dec
or
xor
lea
filds
jns
cmp
jge
mov
movsb
pop
pop
cmpsb
mov
pop
ret
xor
repz
push
dec
dec
push
sub
push
insb
insl
push
add
push
out
and
jl
movsb
movsl
inc
in
les
stos
jecxz
leave
lcall
add
mov
clc
mov
sub
push
mov
dec
lea
es
or
mov
jmp
add
addr16
add
call
and
push
push
sub
push
in
push
int
nop
jl
push
add
fstpl
push
pop
mov
dec
iret
je
sahf
outsb
les
sbb
loopne
dec
add
dec
in
dec
inc
pop
jle
and
push
call
inc
mov
jecxz
incl
cmp
or
jne
cmp
push
push
or
or
and
ds
inc
push
movsb
sbb
inc
hlt
nop
test
std
or
hlt
mov
or
dec
push
rorl
sbb
enter
insb
pop
inc
xor
loop
push
mov
pop
pop
je
or
sahf
cs
cmp
xor
xor
push
adc
idiv
or
or
stos
add
xor
jg
push
lea
push
sub
adc
roll
ds
xor
roll
ja
jge
subb
std
imul
or
test
push
adc
loopne
cmp
lock
pop
mov
popf
mov
pop
mov
jb
sub
pop
pop
pop
sbb
movsl
jb
sbb
addps
test
xchg
and
inc
js
mov
ret
daa
lea
jmp
add
xchg
push
mov
or
push
add
push
push
dec
push
fsubrs
loopne
or
imul
pop
push
pusha
sbb
xlat
fcmovnbe
sete
test
test
in
sbb
inc
xchg
inc
cmp
xchg
and
add
inc
xchg
iret
xor
aam
test
pop
push
fst
or
sbb
rclb
andl
movsb
or
pusha
lds
jmp
movsb
loopne
sub
test
adcl
js
jne
push
jle
adcl
je
adc
or
jecxz
sbb
pop
cld
push
push
or
push
xchg
adc
sub
sbb
sub
subb
pop
sub
push
fsubrs
push
dec
jge
mov
dec
push
push
es
or
add
push
or
scas
pop
movsl
push
xor
cmpsb
jo
push
ljmp
jnp
ret
mov
fs
scas
dec
push
cmp
inc
test
push
data16
rdmsr
and
enter
jmp
sub
push
inc
cmp
push
loopne
mov
jle
push
repnz
sbb
push
jle
cmpsb
mov
sbb
sti
mov
dec
dec
xor
push
xor
sbb
cmp
jp
inc
jle
xor
jno
push
push
pop
push
add
call
leave
mov
test
lahf
les
mov
add
push
mov
divps
ds
mov
xlat
push
add
out
xor
popf
jns
movsl
push
sub
mov
cmpsw
aas
xor
push
pop
cmp
mov
mov
xchg
lock
mov
push
push
cmp
or
bound
adc
mov
movlhps
mov
mov
clc
sbb
sbb
data16
or
sub
mov
js
or
rolb
test
xchg
jl
ljmp
push
mov
pop
rcrb
adc
push
je
aaa
ljmp
icebp
add
push
mov
cmp
outsb
sub
testl
mov
push
inc
mov
mov
xchg
sbb
adc
jo
aaa
mov
sbb
into
shll
adc
das
xchg
sarl
das
insb
or
insb
sti
clc
jae
mov
cmp
and
mov
mov
mov
leave
in
push
mov
xorb
adc
inc
movsb
ret
aaa
push
in
cs
jae
in
jecxz
mov
pop
pop
icebp
jns
mov
or
inc
lods
and
sbb
mov
mov
sub
and
xchg
jne
mov
dec
push
push
lods
mov
addl
jg
xchg
sbb
fmuls
outsl
mov
and
punpckldq
xlat
add
mov
orl
and
adc
sub
outsb
and
hlt
push
xor
pop
bound
mov
jae
in
les
dec
mov
js
add
inc
add
lock
cmp
jne
mov
push
mov
inc
mov
mov
inc
lods
ljmp
sbb
push
cmp
je
sub
aam
cli
cmp
je
ljmp
xorb
lret
or
fbld
rorl
mov
mov
add
or
adcl
inc
cltd
mov
mov
jg
cmp
push
movl
push
add
sbb
sub
add
ss
push
nop
add
imul
rcll
aad
cmp
jl
incl
xlat
ret
pop
push
push
jbe
jno
push
js
call
cmp
jbe
sbb
adc
test
xor
loope
sbb
enter
adc
movsl
push
dec
testb
push
add
inc
shlb
sarl
je
test
mov
jne
movzwl
in
add
je
push
xchg
into
dec
fsubr
and
jmp
fcomip
mov
lea
add
inc
test
jne
sub
push
push
inc
sbb
mov
aam
adcb
inc
sti
add
add
push
cwtl
icebp
stc
int3
push
rolb
aas
push
into
int3
push
fcoml
stc
sbb
shlb
sub
in
dec
out
lea
fbstp
iret
cmp
jg
add
add
idivb
xor
mov
cmp
jl
mov
loopne
jne
stc
pop
insb
pop
pop
ret
mov
ret
push
sbb
sub
cmp
adc
pop
adc
lock
push
or
pop
push
cmp
cmp
ss
movsl
aaa
push
subl
add
push
ds
mov
enter
mov
xchg
lea
adc
lea
lcall
cmp
fists
or
outsb
scas
out
inc
mov
std
sbb
jge
jle
pop
push
cld
add
sub
out
push
push
mov
mov
or
jle
mov
mov
cmp
pop
jno
push
cld
in
inc
clc
mov
pop
fdiv
cld
lea
push
or
cmp
ljmp
ja
add
jmp
insb
fcoml
push
mov
push
push
add
mov
xchg
loope
inc
jo
jg
mov
out
movb
pop
pop
pop
and
fwait
enter
mov
push
sub
or
lea
jbe
je
js
or
mov
push
sub
pop
sub
add
xchg
hlt
jnp
pop
or
xchg
mov
pop
ss
in
push
xor
mov
aas
mov
shr
cmpsb
cmpsb
bound
rorb
inc
jno
loop
jge
pop
movsb
push
and
mov
and
fwait
insb
pop
pop
push
push
data16
or
jne
fsub
shll
add
ficoml
push
push
cld
mov
or
lret
push
cmpb
adc
cmp
ja
add
push
sbb
sub
push
push
jmp
xchg
clc
push
gs
push
mulb
push
adc
lock
xchg
and
jns
push
gs
mov
rclb
dec
adc
and
shr
scas
adc
enter
in
shrb
push
push
push
ss
push
or
fnsave
ljmp
add
add
mov
rcrb
jl
dec
jbe
movsl
jmp
or
int
adcb
or
mov
shl
sbb
pop
repnz
int3
sbb
jcxz
dec
lds
pop
sbb
add
xlat
add
jmp
mov
mov
fimuls
push
je
add
or
std
pop
mov
out
adc
je
cmpl
lea
sbb
testb
mov
push
jne
push
or
cltd
xor
add
rorb
xorb
test
add
jmp
mov
clc
push
hlt
push
push
pop
daa
or
cmp
cmp
out
inc
inc
or
inc
or
in
pushf
loope
aaa
dec
loop
jne
ret
jno
mov
ret
xor
or
cmp
or
data16
dec
and
adc
dec
push
mov
hlt
ficoms
fndisi(8087
cmc
mov
or
cmp
mov
aaa
cltd
fdivs
mov
push
pop
mov
and
mov
into
fcmovne
pop
push
push
mov
in
int
prefetchnta
or
pop
mov
mov
fnstsw
pushf
push
rorb
inc
xor
xor
xchg
lock
xor
cmp
mov
xchg
jmp
inc
add
dec
adc
enter
adc
mov
lea
and
pop
scas
in
sub
add
loop
add
add
repnz
and
rcl
sti
add
or
mov
ret
pop
push
ds
add
shlb
jbe
mov
ret
pop
mov
push
mov
jne
dec
outsb
adc
push
dec
dec
add
outsl
jno
add
ret
mov
enter
add
rorl
add
inc
push
add
ret
push
add
push
std
shr
sub
cmp
jge
cmpsb
jle
push
popa
push
sub
loopne
sub
jmp
clc
jl
jbe
push
hlt
cmp
cli
lret
xchg
xor
rol
pmaxub
rorl
add
jl
cmp
rorl
and
ret
inc
mov
movsb
jb
xor
js
cmp
dec
mov
mov
inc
sub
xchg
mov
sbb
adc
sub
imul
lods
sbb
jbe
ret
and
push
mov
jle
int
xlat
mov
inc
pop
cmp
push
xchg
pop
repz
inc
jno
pop
sbb
or
mov
mov
addps
push
cmp
gs
pop
insb
push
adc
xor
mov
push
std
mov
pop
pop
fistps
sbb
movb
or
sbb
push
cwtl
rorl
adc
adc
adc
dec
cmp
xchg
cwtl
push
push
mov
fmull
mov
cmpl
push
rol
mov
cmpsl
imul
push
negb
je
push
cli
int3
jo
sbb
cmp
mov
sub
push
push
jns
aad
adc
pop
sbb
mov
mov
sarl
sbb
inc
pop
mov
sbbl
jmp
daa
sbb
adc
rclb
dec
pop
jbe
add
jl
xlat
push
lea
mov
clc
mov
inc
cmp
pop
inc
data16
hlt
repz
mov
push
xor
arpl
pop
mov
aas
mov
xchg
jl
scas
or
or
xor
add
jmp
pop
inc
push
push
daa
hlt
lea
add
push
mov
xor
jg
mov
sbb
pop
and
and
mov
pop
sbb
sbb
lods
loopne
incl
fistps
adc
sub
adc
loope
subl
mov
ret
decl
mov
add
push
sti
pop
sub
and
and
je
or
scas
cli
jle
aaa
or
jne
push
or
adc
rorb
mov
push
xchg
xor
mov
push
cmpsb
push
jl
repnz
or
adc
ret
cmpl
sti
jne
or
jle
lock
add
filds
imul
sar
mov
shr
add
js
mov
out
orl
adc
sbb
cmp
sbb
pop
movzbl
fsubs
cmpb
aas
pushf
shl
out
adc
inc
push
xorl
or
jne
cmp
mov
jecxz
xchg
jne
jle
out
dec
ds
mov
movsb
lock
divb
jno
add
or
sbb
or
iret
fwait
imul
adc
or
add
mov
push
icebp
repnz
dec
je
jmp
dec
and
xor
mov
rorb
imul
xchg
pop
pop
push
mov
lds
mov
or
pushf
push
fstps
leave
and
mov
pushf
cmpb
shrb
insl
in
outsb
test
pusha
rorb
jp
pushf
in
hlt
hlt
sets
mov
mov
and
adc
mov
push
lret
sbb
shl
stos
mov
mov
fwait
jns
lds
mov
fistl
sbb
xchg
fucomi
ljmp
jmp
fstpl
mov
stc
sbb
jnp
xchg
scas
sub
int3
xor
je
lock
sbb
jne
scas
dec
sbb
jns
data16
leave
ss
xor
aas
push
jne
jl
out
repnz
sahf
out
aaa
mov
addl
mov
mov
lahf
ret
add
movsb
fstl
loope
imul
sub
sahf
sarl
sahf
in
or
clc
adc
out
dec
cld
add
adc
dec
in
repnz
adc
push
mov
and
dec
push
dec
mov
aas
mov
lea
push
ficoml
add
push
lea
xchg
inc
xlat
dec
cmp
and
mov
dec
aam
adcb
pop
push
popa
and
and
test
add
jbe
cld
sbb
push
js
adc
push
cwtl
pop
stos
sbb
xor
shrb
mov
add
fiaddl
mov
xchg
std
and
xchg
aas
adc
test
nop
fildl
add
lock
push
addl
cwtl
movl
js
cmc
pushf
adcl
mov
test
jl
or
sbb
mov
sbb
inc
mov
inc
in
ret
jle
cmp
xchg
dec
or
push
mov
movsl
add
dec
sbb
add
rcrb
sbb
mov
lock
mov
fsubp
loop
out
sbb
xchg
dec
pop
and
mov
push
jb
and
pop
leave
inc
fwait
je
sbb
sub
adc
imul
add
push
pop
lock
inc
andl
add
or
push
and
jp
xor
push
mov
fldcw
in
pop
hlt
popl
add
test
add
cmp
je
lea
add
das
lahf
adc
add
pushf
loope
pushf
push
mov
mov
gs
jle
ss
jo
sahf
pop
mov
sub
ret
dec
cmp
ud0
stos
cmpl
xor
adc
pop
add
test
ret
or
add
add
mov
repnz
push
push
lea
test
addl
imul
pop
ss
data16
push
mov
mov
jbe
dec
mov
push
push
xor
mov
dec
clc
or
repz
inc
inc
and
inc
dec
sub
cltd
sub
sar
add
sbb
les
sub
jle
jmp
mov
add
sahf
inc
add
mov
scas
andb
mov
mov
mov
enter
push
push
inc
jbe
scas
adc
push
repz
idivl
sbb
push
adc
xor
repz
dec
inc
or
jle
xor
sub
imul
mov
fisttps
cmp
aaa
mov
inc
icebp
mov
mov
fistps
pushl
and
add
out
mov
sbb
or
outsb
addb
adc
imul
adc
push
xor
push
cwtl
mov
rcrb
push
js
sub
addb
mov
jns
les
in
repz
subl
cli
mov
lock
lret
out
adc
pushf
imul
mov
call
push
jl
lock
in
mov
inc
xchg
icebp
and
in
mov
adc
or
stos
je
call
movl
pusha
xor
jo
cmp
and
push
add
mov
jne
pop
xor
push
jo
lret
push
mov
sbb
cmp
mov
cmp
xlat
push
pop
or
pop
call
jg
jnp
ret
clc
add
pusha
jne
andl
aad
mov
shll
sbb
xor
aad
sahf
sbb
sbb
jmp
pop
in
aad
sbb
test
and
ljmp
xor
sbb
and
mov
test
push
mov
mov
sub
jb
dec
fildl
or
dec
mov
pop
flds
shlb
mov
mov
icebp
pop
scas
nop
push
mov
mov
jbe
lods
jno
add
push
xchg
ljmp
adc
push
jne
push
enter
mov
inc
and
push
pop
push
pop
add
sub
lea
push
jb
pop
jbe
icebp
or
pop
push
fstpl
icebp
mov
out
orb
push
fwait
imul
jge
inc
lods
filds
ja
ret
enter
sub
sub
xabort
jns
lods
and
xchg
ret
dec
hlt
sub
cmp
nop
cmpl
dec
push
cli
insb
xchg
push
dec
sbb
dec
ljmp
push
push
sub
andb
dec
inc
inc
lahf
push
add
sbb
rclb
push
pusha
push
imul
push
pop
mov
push
nop
cmp
sub
push
push
lea
aam
fcoms
fsubrl
jp
add
adc
xor
push
ret
add
cmp
nop
jmp
jmp
addl
or
push
and
inc
xchg
je
add
inc
pop
lcall
addl
sub
mov
dec
sbb
je
icebp
into
ret
add
push
sbb
pop
loop
add
in
dec
aad
push
push
push
and
jo
dec
repnz
sbb
cltd
loopne
mov
push
sbb
dec
mov
sbb
test
aaa
outsb
add
aas
inc
lcallw
cmp
lock
pop
fldl
fmull
add
xor
rorb
mov
out
inc
mov
sbb
push
push
lahf
xchg
out
nop
push
mov
adc
dec
shll
adc
sub
popa
shll
scas
add
add
pop
les
dec
ds
xor
cmp
dec
and
add
push
lds
mov
adc
jl
sbb
mov
jp
inc
daa
mov
or
dec
add
push
add
push
mov
scas
loopne
adc
out
inc
into
and
jp
loop
lock
xchg
sub
dec
or
or
shll
es
cmp
push
add
xorb
jno
xchg
adc
pusha
adc
nop
or
push
inc
adc
popa
ret
xorl
xchg
ret
xor
push
cmp
jne
xchg
push
push
lds
or
cmp
scas
pop
push
cld
cld
add
push
scas
pop
mov
cmp
jb
jge
xchg
or
call
push
stos
dec
cs
sub
sub
push
pop
inc
test
and
or
jmp
fsubp
sbb
lea
lds
stos
xchg
test
bound
add
iret
add
shlb
adc
mov
mov
fmull
sbb
jp
push
push
jo
ljmp
push
mov
shll
or
leave
add
fstpl
sub
inc
push
sbb
js
push
pop
push
call
pop
jno
dec
mov
dec
xor
add
and
test
leave
add
enter
jno
incl
leave
inc
xchg
clc
and
imul
xor
lock
jno
and
decb
lods
add
sarl
loop
add
ret
sar
push
enter
fstpl
daa
jl
dec
dec
gs
dec
add
xchg
int
adc
add
mov
out
add
rorl
adc
out
sar
mov
shr
add
mov
imul
js
repnz
push
lahf
jo
sbbl
in
jle
in
sti
testb
jmp
test
or
cmc
sub
mov
out
outsb
loope
stc
add
jo
push
push
push
enter
lea
je
decl
push
cmpl
mov
cmp
jne
push
adc
mov
nop
dec
xor
ficomps
loopne
sub
xor
clc
sti
lea
or
shl
mov
and
and
mov
lea
or
call
dec
les
push
inc
add
mov
sbb
inc
and
and
jge
push
jnp
or
out
data16
daa
pushf
or
lods
sub
mov
sbb
jmp
jg
adc
fstpt
cltd
idivl
je
add
aaa
ds
sbb
jl
jp
cmp
jbe
popf
jne
std
mov
jl
insl
arpl
mov
mov
adc
test
or
jbe
add
xchg
mov
mov
adc
sbb
mov
and
inc
mov
add
popf
imul
dec
sub
cmp
or
out
or
jmp
mov
lea
mov
add
xchg
mov
sbb
push
faddl
mov
or
rorb
stc
sti
and
mov
test
sbb
pop
std
push
jg
cmp
jns
inc
push
js
mov
fcoms
jmp
fistpll
pop
mov
jo
imul
or
adc
je
add
mov
mov
pop
push
repnz
in
mov
call
xchg
add
mov
leave
jge
nop
inc
stos
add
cli
mov
mov
pop
fimull
pop
pop
shll
push
add
fisttpl
and
cmp
inc
mov
call
adc
rcll
mov
je
sbb
test
cmp
push
pop
or
loopne
pop
xchg
xor
mov
outsb
ja
sti
push
dec
mov
adc
jno
or
xor
push
rorb
rclb
mov
inc
jmp
xchg
ds
add
nop
bound
or
push
add
sub
sub
mov
fildl
push
pop
lods
mov
mov
lahf
adc
loopne
mov
or
jecxz
and
push
add
pop
add
lock
sahf
or
jne
and
or
cwtl
iret
add
mov
into
lock
xor
scas
pop
clc
stc
adc
decb
dec
test
cmp
pop
rolb
or
add
push
add
mov
pop
andb
push
push
nop
notb
or
popa
inc
xchg
fisttps
fisttps
add
lock
jae
inc
sbb
or
shrl
xchg
fstpl
inc
mov
cmp
lods
dec
mov
inc
rclb
adc
adc
adc
cmpsl
adc
out
push
push
or
nop
push
popa
ds
cmp
jp
and
mov
pop
jle
clc
jbe
mov
cmp
repz
and
or
cmp
push
sbb
jb
mov
imul
rorb
push
dec
lds
mov
or
adc
mov
inc
leave
pop
jg
and
jl
sbb
push
sbb
movsl
and
and
lahf
or
or
push
or
sbb
cmpb
movsl
adc
or
add
and
push
dec
xor
push
sub
clc
setb
or
jecxz
decl
mov
sub
cmp
setae
lcall
fsubs
fists
mov
push
dec
xor
outsb
or
mov
cmpl
push
add
mov
push
mov
lea
push
je
enter
aad
push
and
push
es
pop
pop
mov
mov
mov
loopne
in
dec
jecxz
sbb
outsl
mov
push
pop
cmp
and
mov
pop
in
inc
shl
adc
nop
sbb
js
fldl
push
add
adc
ss
cmp
imul
dec
push
dec
push
cmpsl
pop
leave
test
std
sbbb
jmp
pop
ret
and
or
lods
adc
mov
test
filds
movzbl
mov
or
push
pop
les
jns
inc
mov
dec
xchg
xchg
jbe
fwait
add
add
adc
sub
pusha
mov
add
pop
dec
jo
adcb
adc
xor
inc
insb
mov
repnz
and
xchg
mov
cmp
adc
fstpl
add
cmovbe
cmpsb
int3
je
test
insl
add
add
xor
sub
add
adc
rolb
sbb
cltd
mov
cli
pop
dec
in
add
lea
mov
lret
jo
push
lret
sbb
shl
adc
push
and
jo
fcoml
push
decl
in
dec
cltd
adc
dec
push
cmp
ss
xchg
popa
and
call
sub
pop
lret
inc
mov
jo
mov
add
mov
int
push
push
xor
rorl
xchg
jne
xchg
xchg
sarb
push
push
add
dec
sbbb
or
jle
nop
mov
pop
inc
jl
enter
mov
sbb
cld
insl
push
dec
mov
cli
jo
or
and
lds
jmp
shl
je
popf
push
adc
subps
jns
inc
dec
push
pop
and
and
test
jne
pop
cmp
rorb
mov
or
add
adc
push
and
inc
imul
ret
aaa
repnz
lahf
pop
sub
or
xor
icebp
xchg
aaa
nop
and
leave
es
push
xor
xchg
shr
mov
je
sbb
xor
add
pushf
or
jne
push
push
push
loopne
dec
xchg
and
mov
push
jp
push
aam
sub
subb
cmpsb
std
in
rcr
pusha
out
ret
dec
and
lahf
out
pop
pop
xor
fimuls
jle
xchg
sub
in
push
or
or
dec
movsl
fidivs
jge
fsts
dec
pushf
shll
push
add
lods
pushf
aad
dec
dec
daa
jg
or
inc
dec
arpl
mov
and
or
sbb
sbb
push
pop
add
cmp
pop
dec
in
xor
add
pinsrw
pop
push
sbb
add
iret
rolb
push
push
clc
pop
sub
mov
and
cltd
insb
cld
insb
mov
push
or
insl
xchg
in
sbb
sahf
dec
push
add
or
sbb
add
add
add
fcmovnu
int
nop
xchg
pop
fsubrs
push
stc
mov
inc
add
push
pop
xlat
add
push
fldt
push
xor
cltd
sbb
adc
add
nop
in
adc
leave
and
xor
cmp
je
ja
and
inc
push
add
jne
adc
fstps
pop
mov
push
cmp
push
push
dec
cltd
mov
cwtl
pop
call
mov
sub
sbb
addl
jno
cmp
add
or
mov
roll
mov
loopne
lock
clc
cmpsb
ret
faddl
cmpb
jg
sbb
sbb
les
mov
inc
es
pop
movl
lcall
add
jne
pop
xchg
jo
push
nop
sub
xchg
divps
xor
add
push
mov
pop
sub
xchg
insb
pop
shlb
rclb
sbb
add
cmc
or
out
in
mov
mov
push
es
fisubl
xchg
push
jmp
mov
daa
and
das
mov
in
adc
or
jmp
sub
xor
xchg
cmc
mov
mov
cmp
sbb
cmp
rorb
push
or
ja
mov
jae
imul
ljmp
jecxz
jmpw
mov
rolb
mov
inc
inc
mov
sbb
insl
push
in
or
add
pop
xor
loope
adc
ss
sub
push
adc
jmp
pop
push
test
subl
adc
aad
shll
add
cmpl
lret
lods
mov
fsubs
sbb
in
pop
and
add
xchg
xor
sbb
aaa
je
adc
movsb
pop
shlb
mov
test
and
int3
add
xor
push
push
int3
adc
sub
or
pusha
push
jo
std
stc
lret
movsl
sub
cmp
mov
lods
and
or
or
sub
adc
bound
push
rorl
mov
and
or
jge
and
push
jne
popf
push
pop
sbb
jb
push
sbb
jne
dec
pop
cmpb
adc
sahf
sbb
iret
pop
mov
adc
add
sbb
test
sub
mov
movsl
add
jbe
repnz
mov
or
add
push
jb
rolb
push
inc
jae
pop
add
or
jne
ret
xchg
das
mov
into
das
cmp
stos
pop
push
pop
mov
dec
sub
dec
repnz
adc
pop
inc
ss
or
daa
fsubl
cmp
or
and
ror
das
enter
cltd
ss
lahf
push
fmull
push
mov
xor
push
hlt
pop
lahf
push
sbb
xchg
cmpsb
xchg
pushf
sbb
or
sub
adc
jnp
xchg
push
pop
mov
aam
adc
shlb
inc
in
sbb
xchg
mov
in
sti
xor
or
inc
sbb
cmpsl
add
rorl
and
push
xor
or
and
inc
dec
cmp
outsb
shlb
push
add
and
adc
cmc
enter
cmp
pop
dec
mov
clc
xor
mov
test
mov
mov
push
cmp
ficomps
xor
mov
cmp
jmp
sbb
jne
aaa
clc
ret
xchg
pushf
pop
in
and
jo
mov
pop
cmc
dec
adc
and
scas
rcll
stc
bound
or
cs
xor
and
and
xor
xor
jo
add
push
and
dec
and
lods
xcrypt-ofb
cmpsl
out
add
jmp
dec
rcl
lret
or
dec
test
int
stos
and
inc
dec
and
pop
insl
ljmp
xchg
mov
loope
jp
or
xchg
adc
add
mov
adc
push
pop
je
xor
cltd
fs
and
or
add
mov
fsts
push
push
out
and
cmc
add
stos
icebp
adc
clc
or
or
ret
push
cli
adc
jno
mov
cmpsb
aad
xchg
xor
fidivrl
pop
popf
mov
push
pop
rolb
jl
mov
sbb
lcall
cmc
add
rcrl
cmpsb
rcrb
push
jns
jo
push
pop
adc
mov
inc
loop
or
sbb
add
orl
cmp
ljmp
add
flds
add
xor
fisttpll
std
add
pop
jns
nop
xor
push
pop
stc
add
push
push
add
or
mov
jo
ljmp
test
pop
dec
and
add
sbb
adc
jl
clc
add
ss
push
xchg
sbb
push
jo
stc
mov
cld
push
sbb
sbb
mov
cmp
pushf
inc
push
inc
pop
aaa
push
or
mov
into
pop
sub
pop
jb
pusha
cmp
push
sub
push
mov
xor
xchg
test
xor
adc
in
add
xor
sub
xchg
xor
mov
je
jmp
xor
xor
mov
cmp
cmp
inc
adc
iret
inc
cmp
push
cmp
and
inc
or
pop
test
sub
and
hlt
fdivs
add
mov
or
insl
sub
pop
xor
into
in
sbb
xor
xor
mov
pushf
jmp
gs
mov
jge
push
or
or
movl
or
and
leave
and
xor
xchg
cmp
dec
sub
mov
pop
xchg
jo
cmpsl
cmp
imul
sarb
enter
mov
push
and
mov
pop
add
imul
pop
fiadds
popf
cmp
sub
pop
ljmp
and
mov
insb
push
jg
lea
sti
ds
movb
cs
cmp
fcmovnb
test
add
sti
xchg
push
lods
mov
cmp
fistl
loopne
in
mov
adc
add
movsb
sbb
lea
stos
and
pop
rorb
add
hlt
dec
xchg
push
add
mov
mov
push
adc
add
aad
mov
sub
mov
fcompl
les
outsl
add
mov
or
mov
xor
inc
inc
xchg
aam
lock
adc
mov
xor
inc
adc
adc
mov
movsb
and
fsubp
adc
add
mov
mov
sub
inc
fnstenv
pusha
out
sbb
mov
jecxz
ljmp
jecxz
into
lcall
jp
stc
imul
mov
dec
inc
cmp
sbb
mov
jmp
into
sub
daa
mov
push
inc
cmp
inc
sub
cs
and
cmp
jp
adc
or
push
pop
into
lahf
push
shrb
push
lea
sbb
or
movsl
fldl
sub
pop
xor
hlt
pop
push
push
imul
mov
lea
pop
push
push
popf
xchg
xchg
int3
popa
pop
or
shlb
add
and
testb
or
adc
pop
inc
jbe
daa
in
or
and
in
jl
adc
dec
push
xor
add
into
ja
mull
xchg
sub
lret
pop
aaa
cmpb
adc
mov
sbb
or
xlat
cmp
push
inc
scas
xchg
jmp
push
mov
rorl
cmpsb
mov
enter
rorl
xchg
and
or
sbb
iret
pop
sub
pop
pop
mov
add
je
dec
je
call
or
mov
push
cltd
andb
add
push
in
adc
cwtl
sub
or
and
inc
inc
sub
lock
or
adc
or
jno
cmp
xchg
jl
aaa
and
testl
adc
or
add
rcll
adc
add
adc
stc
and
jns
mov
xor
popa
aaa
sub
adc
and
stos
push
dec
pusha
or
ds
pushf
jl
cwtl
fists
dec
or
push
repz
inc
xor
add
adc
sbb
repnz
pop
enter
xor
adc
inc
and
loope
mov
pop
push
jecxz
adc
push
lock
js
adc
das
rcrl
adc
shrb
andb
adc
mov
xor
pusha
or
in
es
add
push
and
xor
add
jnp
sub
sarl
xor
and
mov
push
push
push
cs
jb
pop
add
sbb
fldl2t
mov
std
adc
jns
push
pop
in
or
adc
int3
xchg
popa
enter
pop
add
jno
cmpsb
xor
mov
es
adc
fcoml
popa
mov
into
je
hlt
dec
inc
sbb
test
test
dec
andl
inc
and
push
push
cltd
cwtl
or
adc
rcrb
popa
clc
adc
mov
mov
cs
mov
dec
loopne
cmp
xchg
leave
and
jno
insl
xchg
cmp
sbb
iret
sbb
in
mov
andl
and
clc
adc
loop
jmp
ja
je
jno
cmp
jno
add
jg
inc
pop
cs
inc
into
cmc
cmp
cmp
adc
es
lea
lret
sbb
repnz
xlat
push
leave
adc
xchg
and
adc
push
mov
sbb
out
mov
imul
and
cmp
sub
add
in
pop
or
outsl
mov
aam
push
add
addr16
pop
movsb
sub
or
adc
jmp
mov
push
adc
adc
and
popf
test
sbb
cmp
jae
jecxz
xchg
hlt
or
outsl
xchg
in
pop
inc
dec
sbb
xchg
push
jb
sub
into
and
imul
jmp
pop
pusha
stos
push
adc
out
ss
nop
dec
pop
pop
add
inc
ret
lret
xor
add
mov
and
xor
adc
insb
mov
push
push
dec
shrl
push
test
mov
add
and
fsts
pop
lcall
cwtl
adc
adc
push
add
jl
js
or
adcb
pushf
xchg
imul
je
push
adc
iret
enter
frstor
outsl
rclb
add
adc
add
out
adc
mov
adc
lea
adc
and
clc
aaa
aas
and
or
jge
fsubrs
adc
adc
lcall
sub
jmp
or
mov
ljmp
jg
loopne
ret
fwait
or
into
or
lds
ds
and
bound
int
push
sub
pop
jne
insb
lcall
or
pop
jns
movsb
stc
jl
shlb
int3
add
and
mov
or
mov
rcll
inc
fwait
mov
add
mov
mov
or
inc
or
or
pop
and
mov
jno
pop
test
mov
loop
or
inc
add
cmp
xlat
adc
add
addb
movsl
mov
push
push
cmp
fldcw
stc
in
mov
mov
sub
mov
jne
add
test
test
and
sbb
inc
xchg
xchg
or
not
jno
sbb
shlb
dec
je
jecxz
dec
sub
add
test
lods
xchg
subb
dec
xor
inc
inc
mov
ss
dec
jp
les
mov
xor
dec
pop
test
cmp
dec
ss
cmp
adc
add
add
loopne
xor
outsl
pusha
add
dec
and
jmp
test
lahf
xchg
cmp
cmc
dec
sbb
sbb
push
ds
jae
and
out
jno
inc
lcall
in
rcrb
loope
lcall
cld
mov
js
mov
pop
inc
pop
ret
push
test
jl
iret
mov
jo,pt
fwait
test
aam
push
xchg
xlat
shrl
jecxz,pn
xlat
loopne
jl
and
mov
sbb
incb
jle
mov
mov
xor
call
or
push
gs
cmpsb
or
inc
sbb
cmp
xchg
jno
add
jle
push
add
mov
sbb
jae
sub
push
ficomps
push
mov
push
sahf
push
cmc
mov
xchg
addl
loopne
stc
add
push
mov
xor
and
pop
pusha
addb
loop
sub
sbb
es
insb
jle
aas
js
mov
pusha
orl
ja
sub
mov
dec
jo
sbb
fimuls
sub
sbb
add
push
xor
add
cmp
loop
aas
aam
mov
aad
mov
sub
imul
xchg
dec
into
sbb
xchg
mov
add
out
sbb
pop
sbbl
pop
pop
or
jle
or
xchg
or
cwtl
sub
inc
or
xor
push
xor
mov
push
pusha
jne
pop
add
xor
femms
aad
pop
xor
cltd
aam
dec
subl
push
imul
push
jb
add
imul
xchg
mov
dec
out
xchg
sub
enter
mov
sbbl
movsl
adc
add
or
dec
xor
outsl
jmp
insb
push
jae
mov
inc
das
xchg
jmp
or
xor
dec
add
lret
cmp
push
fst
xchg
test
mov
sbb
sub
cli
inc
xchg
fisttps
cmp
insb
or
ret
je
push
sbb
adc
into
push
aas
push
push
shll
cs
push
cmp
call
loopne
push
push
jge
pop
push
jne
insl
shlb
inc
mov
push
cmp
cmp
mull
jbe
adc
push
push
push
adc
sub
jb
xor
sub
and
xchg
out
and
leave
mov
stos
xor
or
adcb
mov
je
and
mov
xchg
inc
add
mov
cmp
sete
aam
push
push
sbb
loopne
cs
sbb
cmp
dec
pop
adc
add
mov
ss
mov
dec
or
jle
or
push
sub
pusha
andb
popa
lock
mov
les
insb
andb
add
sbb
orl
dec
or
push
or
cmpb
push
ret
stos
in
ljmp
or
mov
jb
mov
test
filds
and
lock
mov
data16
ret
dec
pusha
xchg
fsubrl
mov
fwait
out
and
out
lcall
or
popa
xorl
mov
pop
push
xor
test
cmp
cmp
or
xchg
xor
push
adcb
xchg
rorl
mov
mov
xchg
adcl
setge
sub
push
mov
xor
push
mov
cmp
sbb
xchg
and
mov
xchg
inc
jle
jl
sub
dec
cwtl
xchg
fmuls
adc
fcoms
inc
ret
xchg
and
sbb
pinsrw
test
cmpsb
mov
daa
into
sub
lahf
mov
adc
test
and
lods
lods
pop
scas
test
ss
and
xchg
jno
sbb
sbb
pop
adc
add
test
fwait
and
shlb
sbbb
stos
lcall
jle,pt
and
dec
sbb
push
push
in
push
ds
sbb
add
aam
dec
or
and
add
and
inc
adc
mov
call
jo
cltd
or
iret
push
sbb
cwtl
jge
or
movl
or
loope
jns
lea
cmpsb
xor
mov
add
push
push
enter
icebp
fsubrl
and
mov
mov
xlat
dec
lahf
je
push
leave
xchg
inc
lock
mov
test
xor
inc
jle
ret
cs
adc
push
shl
call
adc
fidivrl
movb
xor
sbb
pop
sub
test
inc
dec
scas
bound
dec
or
lea
dec
out
psadbw
mov
mov
loope
fcoml
push
lcall
sub
xorb
loope
fnstsw
xor
cmp
je
ljmp
insl
jnp
sbb
sbb
mov
dec
movsl
mov
add
ret
xor
or
xor
jne
mov
jo
and
fisubrs
push
insb
movsb
ds
loope
adc
mov
test
decb
aas
pushf
mov
xor
xor
mov
ret
pushf
fs
adc
test
xchg
or
or
fisttpll
jp
cmp
xor
dec
xor
hlt
cmp
jne
sbb
inc
in
ret
mov
inc
jp
ja
loopne
clc
stc
bnd
fdivl
pop
adc
adc
xlat
push
add
aaa
int3
loope
aaa
testl
push
mov
cmpb
push
sar
adc
xchg
sub
jno
cwtl
sbb
jae
je
mov
mov
adc
mov
jg
add
or
lea
jge
push
push
add
imul
mov
inc
push
add
bound
push
lahf
pop
lods
push
inc
sub
cmp
sub
xchg
ficoms
push
xor
pushl
mov
xchg
inc
mov
out
sub
and
mov
and
je
jl
bsr
adc
dec
sbb
nop
or
out
push
add
xor
dec
push
leave
data16
or
xchg
push
sub
push
int3
sbb
imul
add
pusha
out
inc
aam
sar
jecxz
cs
ret
xor
aad
push
je
cmpb
pop
lahf
add
lea
add
cmp
push
lods
fisttpll
adc
add
sub
add
aaa
loop
adc
mov
mov
lret
lret
add
cmp
push
cmp
jo
popa
xchg
or
pop
popf
push
jae
mov
dec
hlt
jge
add
jp
add
adc
xchg
cli
xchg
fwait
popa
xor
xchg
pop
push
movl
and
push
es
xor
jno
enter
rorb
push
es
sbbb
lock
sahf
jl
mov
jl
cmpb
adc
rcll
sub
ret
das
push
inc
enter
jge
inc
push
bound
cld
sub
or
clc
shl
lea
mov
fucomp
adc
mov
lds
cs
out
jno
mov
hlt
sub
or
test
push
pop
and
adc
push
shlb
fisttpl
jo
dec
jo
xchg
lods
mov
adc
repnz
fst
mov
hlt
add
hlt
push
adc
xor
movsb
repz
adc
xor
pop
enter
cmp
inc
ja
sub
pusha
and
leave
outsl
lods
or
inc
mov
xchg
lds
stos
push
adc
stc
pushf
imul
ret
push
addr16
xor
sub
push
pop
pop
mov
ret
aas
pushf
or
lock
js
inc
add
js
rolb
sbb
jns
xor
insb
mov
and
add
repnz
mov
ret
lods
and
pop
test
repnz
dec
dec
shrb
fwait
xlat
arpl
dec
dec
adc
imulb
jo
popa
xchg
push
es
pop
sbb
cmp
arpl
add
adcb
rorb
loope
movsl
cmpsb
decl
notb
call
jl
mov
and
adc
jnp
mov
and
sub
movb
stos
add
sub
lock
loop
scas
xor
push
pop
sbb
or
cmp
rol
insl
lret
or
add
iret
push
subl
pop
push
rorl
cwtl
shlb
dec
scas
pop
addl
int
adc
das
push
push
mov
push
push
popf
icebp
xchg
std
jp
lods
dec
gs
outsb
push
add
and
xlat
or
add
ror
pop
and
repnz
hlt
xchg
adc
lea
lea
imul
mov
sbb
pop
data16
mov
pop
popa
loopne
roll
mov
pop
ljmp
inc
add
mov
aas
outsb
aas
mov
mov
adc
inc
or
push
xor
cltd
inc
or
push
lock
adc
inc
jae
in
mov
xlat
jg
and
ficomps
and
push
lcall
shlb
add
ret
xor
fs
stos
fs
pop
jmp
pop
or
jno
js
push
mov
lret
pop
jb
add
ret
and
ds
jbe
mov
mov
sbb
or
aas
iret
adcb
js
adc
fs
mov
xor
jns
arpl
dec
movsl
pusha
push
sahf
inc
pop
mov
pop
inc
mov
push
cmp
mov
test
lods
inc
xor
push
xor
and
or
add
pusha
sub
inc
xchg
shll
subb
mov
push
cmpsl
lret
movsl
xchg
add
xchg
int
popf
push
iret
xor
adc
or
pop
ret
imul
icebp
setge
add
jo
pop
sub
scas
xor
icebp
xorb
or
test
pop
adc
or
push
lret
xor
in
cmp
aad
add
mov
xor
mov
outsb
aas
sub
adc
add
jmp
loopne
push
js
lahf
mov
or
adc
mov
clc
or
cmp
sub
cmp
adc
arpl
inc
dec
test
push
push
xchg
mov
mov
mov
push
inc
mov
push
add
sub
setb
or
mov
xchg
int3
test
cmc
adc
or
imul
and
push
imul
movsl
xor
pusha
jecxz
mov
pop
sbb
jae
cmp
adc
push
jb
subl
xor
push
ret
leave
mov
or
adcb
fmul
lret
rcll
in
in
sbb
jl
addr16
inc
lahf
lock
push
ds
xchg
stos
xchg
adcb
dec
lgs
inc
sarl
sub
test
gs
mov
xor
test
mov
sti
je
jge
js
adc
es
aam
cli
sbb
mov
xchg
into
add
sbb
jmp
cmp
add
xor
inc
xchg
pusha
push
std
fimuls
cmp
push
push
das
push
cmp
sub
push
mov
jl
popf
int3
and
jmp
out
adc
bound
cwtl
sbb
mov
mov
rcr
pop
inc
pop
mov
push
out
sub
pop
es
pop
loopne
jne
cld
cmp
mov
xchg
mov
lds
mov
push
scas
mov
cmpb
and
in
ret
adc
pop
pusha
lods
loopne
and
cmpb
clc
cmp
inc
pop
ljmp
pop
pop
jecxz
mov
add
outsl
push
lahf
sahf
sub
jns
sub
sarb
cmp
xor
mov
push
cltd
int
cmp
push
add
xchg
shlb
or
repnz
or
adc
adc
pop
jecxz
arpl
pop
jle
sbb
jne
ret
nop
adc
jmp
in
sub
add
ret
add
mov
add
lds
or
mov
pop
or
dec
and
push
sub
sbb
sahf
js
loope
mov
aaa
sarb
mov
sbb
and
adc
xorb
adc
jb
adc
and
or
jno
out
mov
sub
and
shrb
adc
outsb
roll
decl
stos
push
adc
js
inc
sbb
and
mov
mov
and
pop
outsb
stos
jg
sbbl
stos
pop
adc
inc
mov
ss
push
lret
sbb
sbb
fiadds
in
fs
push
and
dec
xchg
and
add
xchg
std
scas
js
sub
je
xchg
push
cltd
dec
cmpsl
popa
imul
nop
mov
mov
add
xchg
sub
xchg
mov
jecxz
xchg
test
fisttps
xchg
push
adc
cmp
mov
movsl
add
cltd
add
pop
cs
or
das
daa
add
pop
xchg
and
adc
cwtl
nop
dec
dec
inc
movsl
and
ljmp
fsts
bound
mov
int
xorb
or
mov
cmpsl
icebp
movsl
add
inc
add
dec
cmp
loopne
push
pop
popa
xor
stos
mov
push
out
add
lea
mov
jl
lock
sarl
lcall
lcall
adc
insb
sub
insl
sti
mov
dec
add
and
adc
jbe
outsl
sbb
test
lahf
sub
pop
add
aad
inc
add
and
test
and
sti
dec
adc
add
jl
or
mov
xor
or
js
cmpsb
sahf
mov
mov
and
pop
xchg
clc
pop
test
add
fs
xlat
mov
ret
xlat
fstpl
ds
or
int
or
je
loop
addb
push
mov
inc
nop
cmpsl
cmp
mov
sub
and
and
jmp
mov
xlat
std
xor
sub
xor
and
dec
dec
and
test
or
es
and
scas
jo
popf
push
jb
adc
adc
sub
or
sub
ret
inc
push
inc
mov
adc
or
or
sbb
es
xor
dec
jg
inc
test
push
sbb
aam
out
fisttpl
sub
add
xor
ror
lods
fistps
clc
jb
pop
pop
js
nop
sbb
push
push
movsl
adc
std
lea
push
push
inc
sub
lods
add
push
sti
loopne
dec
and
jl
mov
or
or
sub
imul
add
in
decl
add
mov
sub
or
insl
xor
jge
lret
xor
add
jo
dec
add
fucomip
adc
push
scas
cmp
sahf
fists
add
or
hlt
xchg
shlb
loopne
imull
or
out
cmp
lea
add
pop
push
push
push
push
rcrb
xor
sahf
push
push
push
push
rolb
test
adc
sub
notl
add
add
rol
xor
mov
sub
pop
add
insb
call
add
iret
js,pn
ret
data16
sarb
mov
sbb
adc
add
push
ljmp
pop
jb
pop
cltd
js
sbbl
push
sbb
ljmp
push
popa
xchg
nop
push
pop
push
cld
scas
popa
add
or
hlt
jmp
mov
xchg
lcall
in
mov
pop
gs
jle
inc
data16
inc
push
push
stc
lds
sbb
or
jmp
mov
cmp
dec
sub
mov
adcb
or
jge
and
mov
jecxz
add
push
mov
inc
sbbb
jbe
scas
jl
fdivl
cmpsl
sub
loopne
xchg
or
adc
das
loope
push
stos
push
push
mov
pop
ljmp
popa
movl
jp
push
mov
push
in
jg
mov
or
add
add
icebp
or
pop
sbb
add
xchg
ret
add
cmp
push
call
pop
jle
sub
lock
pushf
movzwl
xchg
icebp
inc
lock
mov
xor
icebp
push
push
and
clc
push
push
ds
sbb
push
fisubrs
popa
movsl
es
push
test
adc
add
add
out
inc
in
sbb
xchg
ret
out
bound
mov
jge
sbb
or
dec
pop
das
xchg
push
or
pop
subb
sbb
addr16
pop
xor
cmp
clc
pmuludq
mov
cmp
je
push
sahf
mov
cmpb
pop
les
mov
inc
push
xor
sbb
mov
loop
jp
push
xlat
push
shrb
jmp
xlat
jge
add
cmp
sbb
rcll
imul
sub
push
push
mov
sbb
pop
repnz
or
pop
dec
pusha
fisttps
mov
xor
test
mov
add
sbb
popa
xor
inc
sbb
loope
mov
dec
pop
and
aaa
dec
jmp
xor
jp
add
add
lock
xor
sub
xor
loope
inc
push
and
fimull
mov
pop
shl
inc
mov
rclb
ret
pop
xchg
fisttps
mull
ja
push
xor
mov
stos
or
mov
neg
pop
add
fsub
lock
push
or
inc
add
lea
push
scas
add
pop
xor
hlt
es
adc
or
dec
cmp
pop
push
sbb
mov
addr16
repnz
push
les
lret
or
and
ret
lahf
sbb
cmpsb
imul
add
or
jo
fwait
adc
ljmp
push
pop
dec
les
scas
or
or
lahf
xor
xor
push
sbbb
pushl
gs
cwtl
cmp
push
sbb
mov
and
cld
sarb
push
add
ret
mov
testb
dec
lock
sbb
mov
sub
lods
lods
inc
xor
push
adc
xchg
push
cmc
jbe
stc
sti
push
movb
fstps
jle
je
je
jnp
cmp
jae
mov
or
je
ret
fistps
roll
fsubrl
lea
pop
rorl
add
jl
mov
cmp
and
inc
and
sub
sahf
push
into
sub
mov
or
or
sbb
xor
cmp
and
sub
push
and
add
sbb
jge
mov
mov
add
dec
jno
lock
inc
pop
and
cld
sub
cmpl
decl
xor
cmp
lea
inc
sub
sub
push
push
push
mov
into
adc
ss
push
lods
js
push
cmp
lret
xchg
push
sub
add
and
fsubrl
jae
movsb
cli
pop
or
dec
test
mov
xlat
shl
jo
add
pop
movl
sub
jb
das
dec
cmp
mov
add
pop
add
mov
add
sbbb
mov
popf
push
push
les
inc
or
adc
xor
hlt
xchg
out
jo
mov
movzbl
xchg
loopne
pop
ja
adc
inc
rcr
cmp
or
stc
and
or
add
or
ss
push
add
bound
fisttpll
add
add
daa
inc
and
fidivrl
add
mov
pop
clc
pop
ja
and
in
fneni(8087
mov
or
add
push
cmp
dec
mov
and
into
fcmovbe
into
test
dec
stos
cmp
cwtl
sbb
fistps
decb
and
lds
enter
mov
push
sub
in
cs
das
je
cmpsl
jnp
fimuls
pop
jne
je
sbb
jne,pn
mov
inc
je
mov
mov
clc
pop
lea
dec
cs
sahf
inc
insb
outsb
mov
decl
cmp
or
ret
sbb
in
jmp
cmpb
ret
mov
or
inc
cmp
jbe
lea
lea
sbb
inc
mov
sub
inc
jmp
inc
adc
mov
xor
mov
pop
mov
mov
pop
fnstsw
sbb
cmp
cvttps2pi
cmp
mov
sbb
not
out
icebp
adc
or
push
mov
mov
and
pop
adc
and
movsl
mov
and
aaa
stos
hlt
fdivrs
cmp
push
jne
cmp
sbb
inc
mov
jl
jb
dec
adc
je,pt
sub
movsb
cmp
pop
cltd
les
ja
inc
push
cli
inc
adc
sbb
cmp
jne
sub
inc
cld
push
push
add
ffreep
and
rcr
and
adc
push
pusha
fs
xchg
mov
cli
and
inc
sub
roll
dec
xchg
int3
push
mov
inc
jmp
push
cmp
ja
pushw
shlb
xor
sub
cmp
ja
sarw
shr
aaa
movzwl
jmp
cmp
xor
add
cmp
cmp
xchg
mov
sahf
add
lcall
test
sbb
shlb
sub
jae
mov
jmp
cwtl
aas
icebp
mov
and
lcall
mov
je
add
stos
jne
push
push
test
repz
push
or
scas
incl
jae
mov
jmp
outsb
or
push
pusha
aas
adc
jo
jne
lret
adc
adc
add
push
rcrb
outsl
mov
cld
or
add
into
xor
xchg
xchg
clc
nop
pop
lret
cmp
jbe
adc
fnstsw
subb
and
test
adc
je
ds
jne
into
sub
jb
bound
dec
cmp
cld
int
mov
adc
movb
inc
outsb
sub
inc
ss
notb
rcll
push
and
sub
movb
inc
mov
pop
mov
inc
and
inc
dec
outsb
and
and
mov
lods
shr
xor
dec
imul
adc
push
test
cmp
jae
add
jbe
xorb
sbb
mov
fnsave
jne
cmp
loop
js
push
aad
pop
mov
addr16
shrl
pushf
inc
mov
mov
aam
ret
ret
es
mov
inc
in
mov
out
hlt
push
jl
xor
cmp
lahf
sahf
add
cmpb
sbb
clc
rcrb
xchg
shrl
loopne
out
ljmp
pop
add
repz
mov
mov
adc
aam
push
jbe
mov
inc
cmpb
movsb
fildll
lcall
add
cmp
mov
pop
cmp
addr16
testb
fs
dec
out
add
jg
test
fcomps
xor
sub
testl
loop
push
imul
jnp
pop
vandnps
mov
sub
add
sub
js
loop
cmc
sub
js
out
cmp
je
cmp
je
xchg
jae
fnsave
pusha
jecxz
add
jae
xchg
adc
cmp
and
gs
inc
adc
xchg
and
jmp
pop
testb
xor
decl
jae
sbb
push
lahf
mov
sub
pop
add
adc
je
add
cmp
push
cmp
xchg
add
out
les
jae
mov
add
xor
subl
jmp
lret
push
mov
mov
daa
in
xchg
jmp
xchg
test
cmp
je
push
rcll
sahf
jo
stc
add
pusha
jp
push
add
or
adc
and
rcrb
cmp
inc
push
xor
xor
mov
mov
scas
sbb
pop
je
sbb
pusha
cmp
cli
clc
jb
mov
push
jb
pop
cmpb
or
pop
mov
clc
pushf
cmp
je
lea
mov
sti
stos
sbb
mov
dec
mov
ss
sbb
xchg
into
repnz
scas
jecxz
dec
cltd
clc
push
push
lahf
mov
ret
imul
push
arpl
jge
mov
jb
in
jge
mov
inc
int
mov
nop
mov
dec
inc
in
mov
lea
push
push
les
lods
inc
loope
les
js
lods
hlt
sbb
inc
or
mov
repnz
mov
push
push
lea
inc
xchg
mov
in
jnp
popf
pop
lahf
addl
addb
incl
and
mov
pusha
pop
xchg
mov
clc
push
push
mov
push
jb
stc
add
mov
xor
push
pop
or
scas
cmpb
out
inc
jg
and
or
test
add
movsb
add
pop
or
jnp
enter
cld
popa
xor
testl
xchg
inc
inc
leave
ljmp
and
jge
push
inc
aam
jbe
mov
dec
dec
repz
inc
dec
cld
sub
sub
imull
mov
xor
mov
mov
sarb
movsb
mov
cmp
xchg
jns
aas
cwtl
cmp
jne
pusha
loope
mov
in
jne
or
cmpsb
mov
add
inc
xor
cmp
jne
or
iretw
pushf
data16
adc
sub
mov
add
mov
xchg
cmp
add
add
mov
or
add
imul
outsb
add
xor
js
loopne
and
cmp
je
ficoml
insb
fcmovne
out
cmp
inc
mov
push
inc
inc
inc
jne
movsb
outsb
jmp
pop
movb
sbb
jne
outsl
insb
mov
inc
ljmp
pusha
or
jbe
roll
shll
xor
inc
xor
in
cs
out
ljmp
cltd
cld
leave
and
cmp
idivl
insb
out
jns
and
jle
push
ret
hlt
xchg
and
das
lcall
xchg
insb
push
xchg
inc
stos
push
xchg
push
jb
add
pop
mov
imul
lock
cmp
je
addl
or
jne
pusha
sbb
adc
gs
cmp
push
aaa
setle
inc
inc
inc
mov
push
or
mov
clc
pusha
lock
sub
addr16
test
mov
js
ret
xchg
pusha
push
das
lret
scas
call
loope
add
xchg
mov
cmpl
stos
out
mov
inc
sub
cmp
or
ja
frstor
lret
inc
mov
int
js
push
xorb
jbe
lock
loope
mov
inc
lret
icebp
cmp
and
in
cmp
xor
mov
jne
rcr
cli
and
in
lret
jl
mov
sbb
and
push
add
int3
insb
xchg
enter
je
or
je
push
pop
jne
push
insl
mov
shr
sbb
rorb
pop
not
adc
sub
xchg
movsb
mov
cmp
mov
mov
subb
mov
imul
or
xor
jae
pop
cmp
inc
mov
mov
mov
rorl
and
test
xchg
add
pop
push
sub
lea
rcrl
dec
testb
push
pop
mov
push
out
jp
stc
dec
cmp
mov
push
enter
xchg
and
mov
inc
pushf
mov
stos
mov
pop
xchg
sub
mov
lret
lds
mov
xor
cmp
in
cmp
hlt
cmp
divb
dec
adc
call
loop
xor
jmp
or
add
sub
xor
mov
test
mov
or
push
jge
sbbl
loopne
mov
push
in
mov
mov
and
cmp
into
dec
popf
push
cs
mov
mov
pop
push
popf
pop
push
push
ds
nop
je
push
fs
or
dec
repnz
and
fimuls
push
adc
push
fildl
int3
aaa
lahf
adc
cs
pop
add
mov
add
or
push
nop
or
push
adc
mov
or
cmp
dec
sub
ret
cltd
fmuls
or
pushf
inc
insb
cmp
mov
mov
sbb
sti
es
sub
sbb
push
mov
lock
sti
dec
mov
je
push
push
or
pop
cmpsl
loopne
mov
mov
mov
call
nop
out
or
or
pop
push
cmp
cmp
jle
scas
cs
inc
or
inc
orl
dec
xor
out
test
pop
sbb
mov
scas
lea
or
dec
add
add
enter
dec
call
cmpb
push
je
add
hlt
leave
cmpb
hlt
pushf
or
or
cmp
inc
dec
data16
add
pop
push
inc
jne
add
add
les
xor
adc
insl
addr16
cs
out
or
pop
push
fistps
add
inc
aas
sub
jle
or
leave
adc
push
pushf
push
mov
subl
ficomps
sahf
dec
mov
cmp
dec
cld
les
sub
sub
fcmovnb
xchg
dec
push
dec
inc
mov
icebp
push
jno
sub
mov
mov
in
push
sub
mov
jnp
or
adc
xor
lret
dec
push
into
mov
mov
sarl
inc
mov
outsb
sub
lods
in
js
and
loopne
push
cmpsl
rcrl
ljmp
loopne
jmp
ljmp
loopne
in
inc
or
push
and
fidivrs
adc
ficoms
sub
insb
into
xor
hlt
adc
jle
in
stos
sbb
lret
push
sbb
loopne
fidivl
in
adc
jmp
sub
loope
add
pop
and
out
or
and
jne
xor
sbb
adc
pusha
sbb
sbb
pop
es
adc
mov
xchg
iret
pop
sub
xor
int3
mov
or
imul
roll
or
jl
adc
pop
xor
rorl
ret
push
push
cmp
push
jns
push
inc
imul
insl
shlb
or
rcl
push
inc
imul
adc
shr
aam
or
jnp
mov
shll
pop
add
and
pop
fsubrl
and
push
or
cmp
ret
xor
ret
jg
add
and
xchg
out
daa
xor
mov
sub
outsl
sbb
adc
aad
adc
add
shlb
sub
lcall
jbe
cmp
adc
ljmp
push
sbb
xor
fwait
movl
or
adc
lods
push
fldcw
int3
jge
adc
fsubrl
adc
adc
pop
and
lret
add
lods
movsb
and
fwait
pop
push
push
test
push
cmp
loopne
sub
push
stc
mov
and
or
xor
mov
shl
faddp
cmpsl
andb
push
jnp
or
lods
adc
rcrb
sub
lods
int
pop
mov
icebp
xor
xor
inc
add
rcll
imul
jne
cmp
test
pusha
stos
rcl
or
jecxz
cs
sahf
pop
add
inc
inc
jnp
cs
adc
sbb
push
ss
bound
jg
pushf
aam
add
loope
and
lea
sub
jle
mov
lea
lods
push
insb
jg
inc
les
push
or
sbb
adc
sub
outsl
sub
sub
enter
shlb
mov
pop
pop
xchg
push
test
push
add
clc
shr
or
addr16
add
dec
imul
mov
add
fmull
xor
and
rolb
mov
mov
sbb
arpl
and
psrlw
mov
enter
imul
jg
pop
mov
mov
jmp
or
pop
xor
xlat
push
mov
and
adcl
mov
push
pop
fimuls
sbb
aam
inc
rcr
jecxz
movsl
mov
inc
lock
adc
aaa
test
sti
pop
mov
cmp
pop
add
cld
lods
out
nop
pusha
xchg
sub
sbb
xchg
add
nop
fildl
push
xor
pop
ja
add
cmp
js
pushf
aam
loopne
jl
cmp
icebp
dec
mov
inc
or
pop
xor
add
je
loope
mov
xor
js
adc
add
pusha
fcoml
es
push
out
mov
adc
movsb
adc
cmpsl
aam
xchg
dec
xchg
push
xchg
push
aas
imul
dec
aad
movl
inc
xchg
pushf
mov
arpl
push
dec
loop
or
mov
lea
push
and
jne
lahf
push
rolb
out
lods
jp
inc
mov
loopne
iret
insl
test
cmp
xor
repnz
and
test
add
lahf
add
addb
mov
test
out
adc
sbb
inc
xorl
jge
add
or
mov
mov
sub
notb
sbb
loop
pop
adc
mov
adc
fnstenv
sahf
sbb
popf
iret
fnstenv
add
push
iret
insb
jbe
cmp
test
xchg
in
dec
and
or
xor
push
add
or
mov
aam
push
addr16
dec
jno
sub
or
or
mov
xlat
adc
or
xchg
cmpsl
push
and
inc
or
clc
js,pn
mov
xor
pop
xor
push
add
xchg
xor
dec
push
sub
imul
inc
or
roll
std
call
pop
mov
inc
jbe
mov
cmc
push
jl
push
wbinvd
mov
fwait
paddusb
icebp
add
pop
sub
and
fcmovb
jp
in
into
mov
int3
ret
scas
xchg
push
ret
cwtl
xchg
push
fwait
xlat
adc
adc
jb
jnp
xor
mov
outsb
sub
testb
rcl
roll
ds
js
pop
int3
inc
lds
lea
enter
sbb
and
in
test
add
sub
jne
or
jnp
inc
and
inc
sahf
gs
xor
subl
xor
iret
call
sub
or
jo
push
into
push
cmpsl
push
dec
iret
dec
jecxz
adc
jge
xchg
dec
mov
xchg
pop
push
xor
stc
dec
xchg
push
sub
or
popf
pop
shrb
push
lahf
xor
sub
mov
sbb
inc
and
and
test
sub
enter
loopne
dec
ret
or
mov
pop
xchg
add
clc
add
add
inc
pop
or
adcl
sbb
sub
les
adc
cmp
xchg
in
sbb
push
mov
dec
gs
xchg
insl
push
or
xor
sbb
and
out
fcomps
out
daa
pop
adc
inc
and
sbb
adc
mov
ljmp
lcall
xchg
popa
push
sub
cmp
sub
dec
add
and
and
cmp
xchg
sbb
mov
push
and
push
xchg
and
push
sub
or
cld
pop
test
add
leave
hlt
add
mov
sub
jns
adc
pop
push
sbb
mov
das
xor
mov
sbb
adc
and
or
ja
in
add
fsubs
aaa
fldenv
xor
add
jne
jno
xchg
mov
adcb
add
nop
nop
or
popa
fisttps
cmp
mov
add
inc
or
or
icebp
test
mov
push
call
push
and
loopne
int3
push
jmp
in
push
dec
jo
int3
mov
xor
add
inc
pop
or
repz
in
pushf
xor
inc
insb
movsb
mov
rclb
sete
fnstsw
pop
ljmp
scas
push
xor
sub
and
adc
shl
inc
cs
adcl
add
mov
inc
jmp
and
sub
and
pop
push
xor
push
mov
daa
mov
ret
jb
cmc
and
sub
add
out
sub
jb
pop
lea
push
out
sub
and
insb
dec
xor
out
sub
push
pop
icebp
stc
out
sub
add
mov
mov
jno
mov
dec
jmp
mov
and
jo
mov
popa
add
shll
adc
and
das
mov
adc
jne
mov
dec
add
in
mov
push
test
lock
add
dec
push
movb
xchg
setl
xor
test
test
add
mov
jae
lds
mov
pop
jb
mov
xchg
xor
scas
push
push
bndstx
xchg
stos
imul
dec
add
add
faddl
and
shll
xor
xor
fisubs
dec
dec
add
add
sbb
fcmovnu
mov
mov
mov
aaa
xor
lcall
pop
push
and
sbb
cmp
sub
xor
mov
jl
inc
dec
mov
mov
pop
pop
dec
xor
pop
add
dec
cmp
nop
or
gs
mov
and
or
push
ss
mov
add
aaa
sbb
add
add
push
outsl
fnstenv
int3
idiv
imul
inc
fs
push
add
jno
and
inc
adc
lea
das
add
jne
pop
jg,pn
sbb
inc
mov
mov
shl
add
push
mov
andb
icebp
shl
or
adc
cmpsl
adc
dec
cmpl
mov
jle
outsb
or
imull
sbb
pop
cmp
jmp
push
jp
in
inc
adc
sbb
and
sbb
adc
xor
dec
nop
push
or
pop
adc
cmp
mov
pop
xor
daa
cmp
jmp
test
xchg
cmpsl
mov
or
or
inc
ds
test
ret
dec
adc
test
or
jmp
imul
aas
adc
and
insl
mov
mov
nop
dec
xor
inc
test
inc
dec
sbb
addr16
cmp
xor
test
mov
pop
mov
movsb
iret
mov
sarl
pusha
cmp
cltd
imul
addb
fwait
clc
ret
push
clc
xchg
cmp
adc
fstps
push
shlb
pop
push
adc
es
int
cmp
fsubrs
shll
ror
dec
adc
add
add
inc
adc
cmp
sbb
add
add
push
outsl
sbb
inc
popf
or
mov
inc
sub
inc
jmp
push
das
mov
aad
and
push
jg
arpl
xorl
adc
adc
in
sub
pop
movsl
jp
or
pop
xlat
push
xchg
inc
stc
cltd
or
sbb
inc
inc
or
mov
push
push
jo
adc
pop
mov
or
nop
sbb
pop
enter
and
add
shlb
decb
or
push
or
cmp
clc
jge
loopne
add
lock
mov
js,pn
bound
push
enter
pusha
jo
or
push
xchg
pusha
outsb
and
lds
pop
test
push
jmp
adc
imul
push
push
stc
stos
xchg
or
sub
sbb
mov
xchg
popf
ljmp
lds
push
andb
mov
daa
sbb
mov
pusha
and
je
push
je
je
mov
mov
insl
lret
and
xor
pop
dec
or
dec
or
fstl
ret
inc
pusha
push
inc
jbe
add
int
add
lds
punpcklwd
inc
roll
adc
pop
inc
arpl
pop
cltd
scas
dec
stc
mov
push
jns
pop
add
pop
and
pop
stos
jmp
mov
add
in
dec
add
push
adc
add
and
xchg
jp
ja
mov
cmp
fidivs
mov
cltd
rorl
arpl
in
inc
xor
pop
cltd
addl
and
or
lock
lahf
mov
xchg
cmp
adc
aaa
adc
or
or
xor
inc
sahf
pop
adc
add
mov
fs
scas
pop
pop
push
cltd
pop
xor
test
shll
push
sub
sbb
loopne
imul
mov
push
sub
aaa
clc
xchg
dec
pop
movsl
jl
xor
test
je
push
shl
daa
or
xor
mov
or
adc
out
xchg
mov
or
push
or
movsb
lds
xor
adc
add
stc
and
or
scas
mov
in
cs
pop
aad
ret
pop
and
pop
jo
or
cwtl
mov
lock
inc
clc
xchg
add
adc
int
mov
in
stos
and
adc
idivl
pop
mov
push
fcmovbe
or
sub
scas
sbb
jecxz
orl
pop
and
add
dec
pop
and
sub
jg
or
push
lea
ror
jge
and
cmpl
pop
xor
roll
jne
push
rcr
inc
mov
add
cltd
dec
lret
fistl
aad
jmp
lea
mov
shrb
mov
call
js
inc
rorb
cmp
sbb
cmp
or
out
add
adc
call
sbb
dec
add
adc
xor
jge
cmp
orb
push
sbb
xor
mov
pop
push
cwtl
or
mov
dec
push
dec
bound
lahf
les
ds
jl
xchg
cs
add
pop
jecxz
cmp
and
sbb
adc
or
lretw
hlt
push
je
sbb
push
orl
out
inc
sub
mov
sarb
add
les
pusha
pop
xor
xchg
std
push
mov
push
inc
xchg
mov
and
adc
sub
inc
adc
adc
jo
push
bound
push
sub
loope
gs
pop
and
outsl
and
cmp
mov
movsl
push
xor
mov
repnz
sbb
imul
and
add
movl
add
adc
aas
or
pop
test
popf
lahf
mov
nop
inc
pop
mov
pusha
mov
push
aad
mov
dec
push
jbe
in
sub
xor
cmp
aas
cmp
pop
mov
jb
adc
or
ja
je
push
push
div
mov
pusha
lea
or
mov
and
fsub
cmpsl
das
inc
and
fdiv
inc
jbe
hlt
adc
mov
mov
or
bound
pop
add
push
jno
inc
scas
add
mov
in
test
xor
iret
fisubl
add
add
subl
add
movb
jecxz
sahf
jmp
push
dec
lcall
push
sahf
cmpl
sub
mov
push
mov
es
ret
pop
lea
cmp
pop
movsb
push
enter
xchg
push
push
dec
test
pop
ret
mov
or
stos
iret
cmp
clc
out
bsf
shufps
pusha
xchg
lds
or
push
jb
pop
jp
inc
jg
enter
push
rorl
pushf
pop
and
and
or
or
push
add
jnp
or
xchg
pop
sbb
inc
lret
mov
dec
or
adc
mov
adc
push
push
cmpsl
or
mov
push
inc
arpl
push
lcall
cmp
add
jmp
daa
mov
push
mov
sbb
insl
add
xchg
jae
pop
push
lea
je
sarb
inc
out
mov
xor
cli
andl
add
xlat
les
fdivrl
cmpb
adc
adc
and
adc
ret
lock
adc
push
mov
je
pop
and
cmp
push
inc
pop
push
sub
fildl
adc
enter
dec
push
aas
icebp
or
mov
hlt
mov
dec
jmp
pushl
xchg
xor
xchg
pusha
push
lret
or
movsl
or
mov
mov
or
mov
data16
xchg
or
ficomps
mov
insl
mulb
pop
mov
or
push
mov
mov
test
rclb
pop
subl
mov
out
mov
add
shll
jbe
and
sbb
popa
mov
inc
std
mov
lret
push
stc
sub
inc
mov
outsl
mov
cmp
lret
or
xor
mov
pop
or
pop
les
or
dec
or
xchg
push
enter
push
pop
enter
sub
dec
sbb
enter
nop
loope
enter
or
pop
xor
out
xchg
fstpl
lea
in
push
pushf
lea
push
adc
cld
hlt
les
cmp
adc
int3
sub
add
cltd
sub
jle
addb
sbb
and
mov
xor
nop
into
es
mov
ss
sbb
push
mov
mov
dec
sbb
mov
hlt
adc
xchg
rorb
sub
pop
xlat
fsts
jp
out
jl
cmp
dec
xchg
mov
dec
shlb
and
cmp
sbb
push
lods
leave
push
cs
push
test
inc
stos
jne
adc
je
les
lock
mov
rclb
fdivp
or
inc
ljmp
es
push
lea
push
inc
push
arpl
nop
cmp
popa
lods
xorl
popa
stc
push
jg
lret
stc
cmp
jl
insl
mov
xchg
clc
inc
cmp
outsb
hlt
push
sbb
push
mov
mov
addb
push
dec
stos
push
pusha
mov
jbe
pop
test
jge
xchg
ror
and
xchg
mov
jle
adc
pop
cmp
jae
movd
in
xchg
add
xchg
mov
add
rorl
push
add
xor
pop
lods
jb
pop
fidivl
jbe
loop
pusha
add
dec
test
mov
jb
sbb
sbb
xchg
das
sbb
mov
mov
test
dec
fsubr
xchg
inc
sub
cmpb
rolb
mov
jmp
adc
jmp
decl
imul
push
pop
aad
cmpsl
pop
xor
add
and
sub
sti
mov
and
fistl
mov
imul
pop
add
inc
or
mov
or
and
and
jns
fcompl
dec
in
mov
pushf
jo
jbe
jge
add
mov
xor
mov
scas
jo
push
mov
lods
xor
inc
cmp
test
testl
mov
xchg
add
das
pop
pop
jo
and
testl
imul
xor
push
cmpsl
inc
sbb
je
data16
enter
xchg
add
add
xor
mov
jecxz
rclb
and
je
cs
adc
shrb
movb
ss
sbb
imul
mov
lea
push
or
rol
mov
and
and
roll
push
add
inc
xchg
add
dec
sub
mov
xor
xor
and
and
ds
je
adc
dec
push
mov
push
and
xor
flds
fmull
test
cmp
jne
clc
inc
mov
mov
push
daa
loope
or
cmp
jl
mov
sti
mov
sub
or
or
inc
loope
cmp
mov
call
dec
push
push
pop
xlat
add
fmuls
adc
addl
sbb
xor
lret
mov
movsb
and
adc
ss
fldcw
mov
add
into
push
fcomp
scas
mov
adc
dec
in
mov
add
inc
jbe
mov
or
add
add
dec
jge
add
shlb
cmp
sub
sti
cmp
pusha
js
cmp
call
xor
jo
rclb
jg
inc
adc
mov
mov
dec
lock
mov
cmp
mov
jmp
add
or
or
mov
stc
or
sbbb
inc
imul
mov
jne
mov
push
push
mov
aas
add
dec
push
adc
xor
jl
mov
pop
push
pusha
jle
mov
push
xchg
data16
jo
mov
dec
fidivs
lea
jl
cmp
jg
mov
xor
inc
adc
fsubl
mov
fcoms
lret
mov
fisttpll
call
jns
push
xchg
inc
cmp
mov
mov
or
add
adc
mov
xor
stos
out
jmp
mov
leave
cmp
xchg
int3
sqrtps
pop
push
mov
jmp
adc
test
mov
fwait
inc
xchg
decl
xchg
and
or
adc
xchg
inc
cmp
adc
and
add
std
vmulpd
cmp
addb
add
push
dec
in
push
mov
lock
or
adc
loopne
loope
int3
rolb
add
push
xor
push
and
shlb
cmpl
cmp
cmp
jo
pop
push
sbb
enter
mov
inc
or
decb
dec
and
rclb
imul
cs
scas
push
fsubp
jbe
repz
out
decb
cwtl
cmp
add
push
add
lahf
add
jl
cmc
imul
jne
jne
mov
aad
loop
push
je
cmp
add
pop
xor
inc
and
jle
scas
dec
dec
ds
in
push
push
and
xchg
ja
test
repz
fisubl
push
addr16
into
push
adc
jo
fidivrs
cmpl
xor
mov
sbb
fwait
pop
xor
jp
cltd
fstpl
call
xor
enter
adc
adc
es
cld
jo
ret
pop
movzwl
pop
inc
das
add
leave
rclb
dec
add
jmp
adc
and
test
ss
push
movsl
mov
nop
clc
dec
loope
push
mov
adc
or
xor
lock
gs
cld
adc
outsl
jmp
xor
ret
pop
psubq
add
sub
call
test
dec
fiadds
or
sub
insl
imul
sub
mov
and
jo
mov
sub
data16
adc
add
movsb
or
pop
pop
lcall
lea
pop
aaa
mov
push
push
aaa
pop
outsl
inc
iret
movsl
test
adc
sbb
push
pop
stos
dec
cli
dec
cmc
icebp
sarl
and
push
into
test
fbld
xchg
cmp
jbe
pusha
cmp
jp
bound
adc
adc
fidivrl
lcall
sahf
roll
inc
xchg
jle
cmp
jne
xchg
ljmp
fsubr
add
shld
mov
xchg
icebp
insb
inc
lds
and
dec
and
movsl
pusha
or
adc
sub
mov
or
jg
imul
pop
clc
addb
jge
je
xchg
or
aam
mov
mov
rolb
nop
out
adc
movl
mov
jl
mov
push
mov
adc
faddl
in
bound
or
add
loopne
je
or
mov
push
inc
jle
adc
sbb
inc
call
adc
pop
jnp
shll
iret
jmp
push
shll
inc
push
mov
out
push
sub
push
gs
add
mov
dec
add
or
fmull
fs
or
xor
adc
push
sbb
or
sbbl
mov
scas
cmp
bound
lods
mov
add
mov
cmpsb
pop
adc
clc
adc
add
test
je
pop
sbb
call
jg
cmp
mov
test
cmp
lods
jmp
sub
and
xor
adc
pop
push
or
test
je
inc
test
push
lock
or
loopne
xchg
push
jl
in
les
add
or
mov
cmp
das
push
test
inc
mov
fstl
sbb
push
mov
sahf
push
imul
add
mov
push
int
jg
pusha
jbe
jmp
push
test
imul
dec
cmp
mov
adc
pop
mov
mov
xor
pushf
sbb
cltd
test
mov
pcmpgtd
xor
scas
adc
push
insl
mov
dec
sbb
bound
adc
push
mov
or
in
jmp
enter
cmpsb
std
out
adc
ss
adc
sbb
fwait
push
imul
cmp
xor
and
enter
in
movsb
adc
ja
dec
in
pop
das
dec
xchg
sub
or
lahf
hlt
insb
push
fcoms
jg
pop
stos
test
test
in
je
dec
cmp
roll
inc
add
or
and
in
dec
sub
jmp
pop
mov
das
popa
andb
sub
mov
xchg
addb
jno
mov
push
hlt
mov
mov
push
outsb
pop
ret
and
jge
dec
in
icebp
xchg
mov
aam
fdivrs
enter
mov
ret
or
inc
lea
data16
ljmp
mov
push
loop
sub
mov
int3
xor
mov
loopne
cmp
insb
cmc
pusha
ss
testl
xchg
inc
jmp
or
sarb
movsb
ret
std
aam
push
call
push
andl
add
add
frstor
push
inc
clc
push
add
xor
and
outsb
ja
mov
fs
cmp
cmp
sbb
mov
jo
inc
addl
add
call
add
push
rclb
stos
push
mov
push
cmpsl
inc
xor
sbb
leave
pop
imul
mov
cltd
subb
mov
scas
and
add
loop
add
inc
add
add
push
ficoms
loope
jb
pop
shrb
or
fcomps
jo
push
mov
mov
sub
push
scas
popa
enter
push
mul
int3
dec
jl
seto
neg
or
push
adc
cmpl
pushf
xchg
sahf
jne
loope
pop
push
mov
aaa
mov
xorl
mov
push
fs
dec
outsl
out
pop
inc
push
and
cmp
ljmp
decl
clc
sub
inc
sbb
adc
mov
add
imul
shrl
add
xchg
sbb
aad
addr16
lahf
pop
ret
icebp
popa
and
decb
sahf
xor
shl
jbe
mov
rcll
test
pop
sarb
sub
mov
addl
or
cmp
cmpsl
or
push
pop
adc
fimuls
xchg
nop
inc
and
sbb
enter
flds
xchg
inc
loope
pop
sbbl
sub
fadds
or
jl
add
sub
movzwl
add
or
fldcw
xchg
fstp
jl
pop
jp
add
jecxz
push
add
adc
and
or
cmp
add
test
mov
bound
inc
je
mov
int3
stos
sub
mov
cmp
enter
pushf
sbb
pop
or
loopew
or
ret
adc
inc
je
inc
inc
nop
and
cmp
and
push
add
sbbl
fistps
cmp
or
inc
xacquire
shlb
cli
lcall
clc
push
dec
jl
jnp
sub
sahf
call
cli
mov
add
sti
jmp
inc
sahf
pop
ljmp
inc
add
rclb
sub
sbb
aas
pop
lea
out
sbb
pop
push
or
int3
fiadds
jo
add
mov
push
xor
and
mov
js
fidivl
adc
cmpsl
lock
adc
dec
andl
test
sub
cltd
fidivrl
inc
adc
repz
shr
inc
lahf
inc
pop
pop
filds
xchg
sub
test
dec
cmp
or
push
es
dec
movsl
pop
or
add
push
xor
pop
das
sbb
inc
adc
pop
xor
loope
xchg
and
mov
stc
xor
cwtl
add
lcall
add
leave
and
test
rcrb
cli
lcall
fwait
sbb
test
and
sbb
adc
lds
push
push
xchg
fs
jns
adc
call
andb
out
shll
adc
or
aas
les
inc
xchg
mov
mov
sbb
xchg
inc
xchg
lea
data16
cmpsl
lea
je
ljmp
in
outsl
movsb
outsl
jmp
lea
adc
fcmovnu
xor
pop
in
inc
hlt
push
push
rcrl
sub
subb
mov
rorl
rorb
loopne
nop
inc
hlt
pop
push
mov
lahf
outsl
add
cmpl
sti
ds
push
mov
popf
movsb
xor
push
cmp
outsl
cmp
adcb
xor
mov
mov
in
jmp
push
xchg
cld
adc
dec
push
movsb
ljmp
das
pop
dec
std
sbb
ret
adc
inc
xor
add
and
fnsave
cmpb
adc
push
pop
sbb
push
dec
pop
lcall
push
lea
sub
fbstp
xchg
xor
addl
pop
pop
push
dec
aaa
sub
pop
movsl
jbe
loopne
xchg
adc
mov
andb
dec
push
loop
nop
or
fiaddl
adc
cmp
mov
mov
cwtl
outsl
inc
sarb
fiaddl
fs
add
nop
dec
imulb
rcr
fldt
or
xor
stos
xchg
inc
adc
in
aam
in
div
mov
mov
push
mov
outsl
inc
or
inc
repz
test
fs
xchg
imul
lods
ss
clc
sub
shlb
jnp
xor
or
pushf
push
cli
inc
push
cmc
movsl
adc
cmp
jne
or
cmp
adc
and
cmp
je
inc
add
add
icebp
jne
mov
or
sbb
adc
xor
movsb
cltd
loope
sbb
push
and
fxch
leave
gs
sub
pop
dec
xor
ficoml
jbe
pop
and
or
in
xchg
xchg
vmovhps
imul
add
jae
xor
js
sahf
enter
cmp
jae
dec
sbb
mov
loop
sbb
pop
nop
lahf
popa
cmp
sub
les
add
push
adc
call
stc
lock
or
test
lock
or
xor
lds
cltd
mov
daa
xchg
sbb
jp
fisubl
and
mov
mov
daa
sbb
cmp
out
add
cmpl
ret
pop
push
sbb
fdivs
push
mov
in
mov
je
data16
and
push
out
sub
mov
std
mov
lea
lcall
les
xor
or
mov
out
inc
cmp
pop
and
add
jmp
push
xor
mov
lea
mov
pop
pop
mov
push
fadds
mov
in
push
dec
mov
enter
das
inc
add
ret
inc
adc
xor
scas
and
stos
xchg
mov
hlt
test
cmp
push
dec
rol
adc
push
and
mov
sub
mov
inc
loope
es
xchg
call
add
jo
arpl
pop
icebp
mov
int
and
xor
jbe
adc
add
add
or
xchg
mov
outsl
int
loope
pop
mov
jne
add
jecxz
mov
loopne
pop
ljmp
or
xchg
insl
in
mov
or
lea
adc
addl
cld
shr
jmp
lea
ds
and
mov
push
adc
repnz
mov
sbb
sub
xor
inc
imul
and
pop
in
stos
and
fs
adc
cmp
jg
lods
daa
clc
xor
ret
cmp
mov
inc
sahf
mov
add
and
xor
pop
call
adc
repz
add
inc
aam
mov
lock
pushf
push
les
testb
cmpsl
loope
or
and
ret
stos
repz
push
mov
outsb
addl
jecxz
sbb
jecxz
add
clc
lods
sarb
fcomip
insl
and
jecxz
icebp
add
add
nop
inc
xchg
ja
inc
dec
loop
or
and
sbb
shrl
cmpsl
pusha
or
jl
jl
jne
stos
mov
mov
lea
aad
cli
and
push
or
mov
inc
or
adc
and
xor
test
or
jns
add
pusha
rcl
loop
xchg
outsb
call
lcall
xor
stos
xchg
mov
inc
cmpb
add
or
mov
outsb
stc
adc
fisttpl
cs
dec
sbb
mov
loopne
push
adc
outsb
xor
ss
adc
push
sbb
dec
and
popf
test
sbb
inc
adc
test
inc
cmp
sbb
mov
jl
jmp
movb
dec
pop
movsl
imul
negb
andb
jmp
add
enter
push
mov
jb
mov
xor
add
ljmp
filds
dec
mov
mov
cmp
jae
lea
add
xor
cmp
ja
fistps
add
imull
repz
pop
sub
mov
popa
pop
cmpl
push
mov
jecxz
add
pop
push
fcmove
inc
and
sbb
pusha
xor
cmpsl
sahf
incl
mov
adc
push
xlat
fisubrl
add
push
add
int3
push
mov
pop
rolb
push
cmp
push
roll
pop
adc
and
add
js
xor
and
pusha
pop
mov
xchg
inc
adc
push
mov
cld
xor
jo
push
push
pop
push
fsubs
pop
adc
xchg
out
repz
push
test
fiadds
into
jbe
ficoml
outsl
rolb
inc
cmp
jae
lock
flds
push
je
mov
into
mov
and
ds
rorl
pop
addr16
inc
mov
xchg
loopne
clc
and
push
xor
cmpb
add
xchg
jb
sbb
or
sbb
mov
pop
movsb
pop
out
cmp
mov
mov
xchg
jmp
jmp
dec
or
add
push
adc
dec
inc
ljmp
mov
mov
cld
rol
adc
les
jmp
mov
ret
insb
rcl
add
ret
pop
add
pop
mov
test
push
sub
into
pop
lahf
sbb
popl
popf
aam
movb
jbe
adc
inc
mov
push
rclb
fmuls
clc
orl
iret
and
mov
sahf
sub
lea
jl
push
jecxz
stc
sbb
shrb
jmp
fiadds
js
in
xchg
ss
pop
fwait
or
inc
jae
xchg
in
cmpsl
mov
mov
lea
push
mov
leave
xchg
ffree
test
sbb
sarl
cmovle
out
or
daa
push
push
roll
sbb
inc
xor
cmp
or
fcoml
roll
fwait
mov
jle
xchg
add
rcrl
mov
xor
lea
movd
pusha
cmp
mov
fwait
xor
nop
dec
cmp
adc
js
push
push
push
call
add
add
sarl
loopne
scas
imul
jmp
adc
adc
sbb
jmp
loopne
sbb
add
out
mov
loope
lock
push
mov
xchg
dec
cmpsl
mov
mov
and
mov
mov
fistpll
in
mov
or
lds
pop
enter
pop
and
sub
sbb
mov
sbb
andl
enter
add
mov
aam
jmp
iret
mov
push
mov
in
scas
enter
inc
dec
repnz
push
push
call
lods
loopne
or
or
mov
adc
test
jns
imul
push
push
enter
jne
mov
mov
jae
adcb
in
push
jb
inc
test
add
sar
cmp
sub
inc
xor
test
movsb
push
subl
pop
std
and
cmp
sub
xor
mov
add
mov
inc
popa
xchg
xor
iret
fcoms
add
dec
inc
subb
lret
add
xchg
daa
xchg
mov
subb
sub
pusha
mov
push
add
insl
jmp
clc
mov
cmp
loope
mov
sub
je
push
sahf
ljmp
test
cmc
mov
mov
mov
cmpsl
mov
mov
inc
jle
lock
jge
test
sub
ja
mov
xlat
dec
xlat
add
inc
aas
dec
mov
pop
mov
adc
js
mov
push
fsubrs
sbb
add
test
adc
loope
pop
cmc
lods
sbb
int
adc
pop
mov
adc
or
xor
jge
push
push
jp
cmp
jb
aam
or
test
add
sub
xchg
test
adc
loop
pusha
rcll
cmp
add
roll
xchg
lds
push
pop
sub
flds
mov
aas
in
inc
cmp
je
pop
jns
pop
cmp
and
or
aas
lock
cmp
ss
addl
repnz
ficomps
push
push
and
and
mov
jmp
jae
stos
pusha
or
push
scas
add
mov
insb
push
cltd
enter
adc
sub
cmp
inc
add
add
cmpsl
cmp
adcb
or
pusha
cmp
cltd
pop
jae
call
dec
cmp
jecxz
add
or
mov
and
jmp
or
inc
bound
inc
mov
divl
mov
xor
ss
mov
add
inc
ds
flds
inc
mov
jmp
dec
clc
ret
or
clc
jae
lea
push
lcall
or
or
lds
sti
sarb
lock
ljmp
fcompp
decl
ficompl
rolb
dec
sbb
out
out
int
pushf
sbb
or
cmp
push
xchg
pop
cmp
or
das
cld
inc
add
push
add
lcall
in
out
in
js
out
and
push
test
pop
mov
loopne
xchg
imul
enter
push
push
shl
pusha
push
das
pop
and
test
shll
nop
shrl
movsl
jmp
mov
sbb
jno
push
push
mov
addr16
inc
mov
mov
pop
mov
mov
sub
decl
mull
cld
inc
adc
add
mov
push
cmp
push
loope
por
jo
mov
les
and
xchg
js
push
insb
and
and
jne
jmp
iret
dec
pop
push
mov
gs
adc
arpl
pop
xor
cmpw
mov
add
cmpsb
rorb
mov
mov
and
inc
jg
outsl
mov
or
mov
fwait
jle
test
push
pop
js
or
add
and
jno
jne
stos
jmp
mov
popw
inc
mov
lahf
or
mov
sub
pushl
cmp
sahf
xchg
xchg
jmp
pop
in
lock
cmp
js
divb
inc
jb
push
jae
jo
sub
je
sub
dec
call
add
or
test
mov
push
lea
sbb
bnd
rol
hlt
testb
in
mov
xchg
or
adc
dec
adc
sub
adc
lcall
add
fcmovne
lea
incb
cmp
add
pushf
sub
jmp
push
inc
sub
hlt
scas
popa
lods
call
mov
nop
sti
xor
push
jb
movb
push
mov
subb
fimuls
stc
lret
lea
pop
pop
lods
movsb
add
lods
ret
ljmp
push
mov
mov
and
lea
xor
js
jge
push
loop
sub
fidivrl
rcll
push
mov
ja
scas
xchg
jge
mov
push
orb
and
push
mov
imul
push
sbb
adc
xchg
push
out
pop
pop
enter
jmp
mov
pop
js
pop
adc
push
inc
jge
mov
push
pop
mov
inc
fmul
cmp
mov
cmc
sbb
jl
ja
dec
test
pusha
xor
mov
add
jno
lret
xchg
divb
xchg
lcall
cld
sbb
push
fdivs
jl
subl
and
fidivrs
pop
mov
into
adcb
in
xchg
adc
xor
or
enter
cltd
scas
and
outsl
mov
lods
xor
js
enter
dec
push
xor
push
or
or
mov
orps
xchg
inc
lcall
push
push
movsl
test
or
je
sbb
xlat
pop
fcomps
pop
xor
add
cmp
push
and
mov
je
sbb
push
ljmp
fists
cmp
jb
in
hlt
mov
in
mov
push
adc
cld
xchg
enter
adc
hlt
adc
cmp
push
xchg
dec
and
mov
inc
es
push
out
jbe
mov
xchg
outsb
dec
imul
lcall
push
fisttpl
mov
mov
ret
or
mov
cmp
lret
push
push
test
inc
sub
fsubrs
sbb
cmp
push
add
leave
jo
cmp
mov
sarb
and
outsl
loope
push
sbbl
add
xor
icebp
mov
sbb
jl
lea
cs
mov
lock
call
sbb
or
mov
add
test
inc
mov
aad
or
in
sub
scas
add
inc
mov
push
adc
jecxz
cmp
mov
push
or
cltd
mov
sbb
pop
xchg
aaa
aaa
rorb
shrb
add
or
xor
sbb
or
xchg
lods
and
fwait
mov
push
sub
icebp
mull
ret
push
adc
and
jne
pop
imul
enter
hlt
add
jbe
mov
rorb
mov
sbb
or
sub
mov
insl
xchg
lock
sub
push
sbb
pop
pop
sbb
sbb
aaa
mov
lahf
xchg
or
loope
cmpl
adc
mov
push
loope
gs
cs
add
push
movsb
lock
sub
xchg
lods
out
sub
cs
loop
mov
add
js
ficoms
mov
sbb
dec
shrb
jmp
rolb
out
xchg
aaa
jmp
adc
adc
fs
sub
cli
push
or
push
outsb
add
loopne
or
or
xchg
addb
pop
js
mov
mov
lcall
lds
mov
mov
inc
pop
lahf
mov
dec
sub
leave
cltd
inc
or
aaa
adc
jl
movb
add
and
add
push
xchg
dec
or
cmpsb
rcrb
mov
jae
and
shlb
test
mov
fs
xchg
pushf
sub
xor
or
repnz
dec
sbb
xchg
push
inc
out
cmp
mov
add
ds
dec
insl
jne
sub
jnp
sub
mov
js
arpl
das
cmp
add
gs
mov
sbb
adc
popf
and
or
or
inc
pop
add
arpl
mov
sub
add
dec
xor
push
mov
lea
sub
adc
xchg
icebp
push
loopne
push
or
push
test
mov
inc
mov
cmpsl
xor
mov
lea
mov
pop
rorb
push
hlt
inc
fdiv
fbstp
push
jg
cmpb
jne
inc
inc
xor
outsl
ss
dec
or
add
sub
inc
nop
aad
rclb
jg
sbb
sbb
mov
mov
add
or
daa
sub
jno
and
mov
push
orl
daa
adc
xchg
fs
jmp
push
outsb
test
mov
pop
sub
sbb
leave
out
sarl
aaa
es
sbb
mov
dec
cmc
xor
and
mov
movsl
cmp
add
lds
and
sarl
cmp
int
or
test
adc
leave
in
add
adc
sub
aam
pop
xor
stos
or
loope
add
jl
mov
fistps
add
mov
loope
push
lea
out
push
call
adc
inc
mov
pop
jmp
mov
mov
fiaddl
pop
in
adc
inc
rorb
sub
test
cmpl
dec
subb
fs
aad
pop
daa
lret
popf
subl
push
enter
incb
add
pop
push
sub
enter
mov
add
adc
mov
cmp
inc
ljmp
push
push
arpl
mov
cmp
lret
push
push
push
inc
mov
cmp
add
xor
fwait
les
add
xchg
stos
inc
add
mov
hlt
sub
xor
push
xchg
push
test
jb
and
sub
adcb
shlb
cltd
or
adc
push
or
incb
add
pop
push
addr16
and
imul
pop
add
push
ja
pop
adc
mov
xchg
sbb
sahf
icebp
test
in
into
inc
pusha
and
pusha
adc
fsubrs
xchg
jg
fmull
or
inc
iret
cmp
jne
orl
aas
add
xor
dec
rcr
shlb
jb
jmp
loopne
cmpsb
loope
or
jecxz
ljmp
pop
push
adc
stos
movsb
je
xchg
and
lods
push
les
shlb
mov
fmull
lret
add
mov
pop
inc
inc
pop
add
jmp
mov
lock
add
in
fisubrl
adc
cmpl
add
and
add
nop
lret
mov
adc
cmp
push
sbb
and
enter
arpl
and
adc
jmp
pop
hlt
push
jl
mov
jnp
xchg
pop
mov
mov
mov
or
xchg
pusha
pop
es
add
addb
xchg
decl
cli
xlat
xor
sbb
fsubr
pop
mov
sahf
daa
mov
or
stc
pusha
push
insb
sub
inc
outsb
jne
push
dec
jbe
sahf
sub
pop
js
nop
pop
rclb
mov
push
push
dec
pop
or
dec
pop
roll
decl
test
push
dec
or
inc
fildll
push
rcr
jns
es
inc
inc
adc
mov
adc
adc
lods
xor
and
sbb
sbb
cld
or
aaa
fistpll
call
adc
mov
add
sbb
loopne
and
sub
inc
adc
or
pop
cwtl
adc
adc
cmp
xlat
lock
push
adc
or
cli
and
or
add
fisubs
xchg
add
imul
jae
push
or
sbb
leave
and
into
sbb
add
sbb
sbb
xchg
cmpsl
add
xchg
movsb
mov
addl
incl
inc
faddl
mov
ljmp
inc
adc
pop
aad
pop
test
je
inc
adcb
je
adc
aas
sbb
arpl
rcrb
jne
xchg
dec
push
pushf
and
and
add
pop
test
and
pop
mov
inc
sbb
add
mov
ret
jne
imul
xchg
pop
js
pop
xchg
and
adc
repnz
add
std
cwtl
add
adc
and
mov
cmp
mov
cs
push
push
dec
data16
int
and
enter
and
and
dec
adc
add
adc
mov
cmpsb
sbb
mov
cmp
bound
mov
and
sbb
rcrb
push
jge
add
add
push
cmp
movsb
rcrl
mov
or
adcl
insl
jmp
out
data16
push
push
sub
xor
mov
movsb
xor
lods
test
sbb
adc
ret
xchg
sbb
add
cmp
mov
test
and
addl
and
or
cmp
inc
pusha
jecxz
and
daa
and
add
cmp
lods
push
push
fsubrs
lea
adc
clc
ds
xor
adc
lds
adc
leave
or
pop
jp
and
mov
lock
pop
jge
and
outsb
adc
sub
push
jl
adc
lea
cmpb
test
sub
fmuls
adc
outsl
fincstp
mov
pop
and
xchg
mov
jb
push
int
xlat
sbbb
cmpl
mov
clc
gs
push
xorb
sbb
push
or
dec
call
mov
lods
xchg
lcall
lock
aam
dec
mov
pop
test
adc
add
xor
dec
aam
int
inc
sub
hlt
inc
lock
pop
sub
cwtl
mov
push
shrl
dec
push
xchg
and
enter
pop
stos
sahf
in
test
push
loopne
jo
xor
xchg
hlt
aaa
pop
fs
loopne
sub
in
aam
or
sub
sub
cmpsb
pop
enter
sub
adc
add
lret
outsl
xlat
add
aam
push
subl
enter
push
pop
in
push
rclb
push
jo
mov
mov
int3
mov
inc
frstor
fldcw
cwtl
movsb
push
mov
adc
inc
subb
mov
push
insl
and
push
in
lsl
ret
pop
imul
and
lea
jno
jae
or
maskmovq
aad
or
and
andb
jae
adc
jp
inc
pop
cmp
push
adc
mov
cmp
loope
inc
mov
leave
and
push
repnz
and
sbb
xchg
nop
out
add
repz
cwtl
adc
xchg
lret
add
add
les
test
je
sub
sub
cmp
add
js
lods
test
add
loope
add
stos
lcall
sub
into
inc
or
jb
jne
cmp
aaa
cmpsb
jno
or
push
sbb
add
pusha
pop
push
decl
dec
cld
jp
xor
mov
inc
add
fcmovnbe
ret
push
push
scas
mov
xchg
dec
inc
sbb
mov
imul
fwait
or
movsb
int
arpl
sti
or
test
add
cwtl
push
mov
out
xchg
add
mov
xchg
fidivrs
xchg
pushf
sub
xchg
cmp
sbb
mov
hlt
push
sbbb
sbb
mov
ds
dec
orl
test
repnz
fwait
push
leave
dec
dec
sbb
sbb
add
or
inc
lods
and
add
out
or
mov
stc
lret
insb
inc
aad
insb
xrelease
arpl
setns
fists
imul
xchg
sub
mov
popl
je
push
das
cmp
das
jp
cmp
or
mov
inc
sub
pop
lcall
mov
js
jne
mov
fisttpll
adc
int3
xchg
or
and
pop
mov
sbb
adc
inc
mov
lea
add
mov
sub
dec
ret
jmp
aas
or
or
push
call
fisttpll
or
mov
add
sub
pop
dec
nop
out
or
xchg
push
in
push
in
shlb
in
lock
cld
ficoms
and
mov
lcall
in
xor
mov
xor
dec
mov
adc
add
sbb
and
pop
adc
mov
sbb
push
movsb
rcll
push
inc
sbbl
js
pop
add
addb
adcl
adc
jns
test
mov
push
cmp
lret
fs
divl
mov
mov
popa
and
pop
stos
or
sti
dec
sbb
and
sub
push
xchg
sub
aas
gs
xchg
and
xchg
and
roll
lret
aad
data16
mov
mov
push
add
and
or
sub
rorl
ss
push
mov
sub
adc
or
fwait
sub
inc
pop
inc
ja
shl
bound
adc
xchg
cmp
mov
adc
dec
cs
xchg
iret
cmp
xchg
jl
mov
xor
xor
xor
imul
sub
movsb
mov
mov
es
movsl
decb
fstpt
dec
lods
adc
mov
sbb
in
dec
and
add
movsb
mov
inc
cmpsb
pop
es
jne
cmp
jb
xchg
jns
fistpl
add
cmp
jae
call
mov
adc
jg
adc
stos
add
ja
push
push
push
sahf
inc
cmp
out
je
xchg
push
lock
jl
add
pop
js
cvttps2pi
dec
cmp
je
sub
outsb
add
das
inc
aas
rorb
add
cmp
rclb
pop
add
aad
incb
cs
mov
mov
lcall
xor
jle
bound
scas
cmp
test
jae
push
sub
nop
sub
mov
mov
mov
enter
ret
xor
mov
pop
rcll
loope
add
lods
cld
mov
mov
push
pop
xchg
add
test
ljmp
mov
mov
mov
mov
push
in
push
add
sbb
inc
je
dec
add
mov
and
leave
jo
lods
inc
sub
or
add
mov
inc
add
icebp
loop,pt
jno
js
pushf
cmp
inc
fstl
jle
adc
enter
nop
repnz
mov
add
sub
or
adcb
sti
and
mov
xor
and
sbb
inc
pop
insl
push
loope
insl
dec
or
adc
shrl
dec
or
mov
xor
pop
clc
mov
pop
popl
fwait
add
mov
push
pusha
mov
pop
or
xor
loopne
and
adc
mov
mov
repnz
stos
sbb
andps
add
xor
push
adc
pop
and
or
adc
pop
add
push
lcall
mov
in
test
push
loope
add
pop
add
pop
lahf
pop
shll
int3
dec
or
fistl
push
sbb
das
push
xchg
jae
jo
aas
mov
adc
or
mov
test
ljmp
jl
jge
pop
inc
mov
sub
inc
hlt
nop
push
shl
adc
frstor
out
sub
in
pop
sub
imul
xchg
xor
adcl
scas
fcompl
cmp
add
mov
xor
mov
int
jo
xor
jle
out
repz
inc
push
lret
sub
in
jecxz
movsl
pop
sbb
mov
inc
ret
sbb
xchg
jle
pop
mov
add
xor
aaa
inc
push
mov
add
and
push
mov
cmp
fcomps
fs
loop
xor
pusha
cmp
adc
iret
movsl
sub
inc
push
icebp
lret
adc
and
push
pop
push
loopne
dec
jns
xchg
out
xor
cmp
xor
sub
flds
cmpsb
int
outsb
jmp
inc
mov
push
js
popa
sbb
cli
fwait
sbb
and
mov
inc
sbb
enter
daa
ret
and
mov
adc
add
or
xchg
add
mov
cmp
and
and
stos
outsl
adc
add
add
xchg
xchg
adc
add
push
test
adcl
add
jmp
in
ret
cmp
fwait
aas
push
push
lods
dec
add
mov
cmp
pusha
push
and
or
lret
sbb
adc
adc
xchg
add
add
sub
dec
gs
xor
add
inc
xor
push
push
nop
lret
cmp
add
or
xchg
inc
push
dec
lar
add
or
mov
adc
mov
fidivrs
mov
add
cs
mov
and
xchg
xor
int3
enter
rcl
div
sbb
cwtl
pop
add
dec
mov
or
mov
and
fdivrs
push
movl
sbb
jmp
pop
mov
pop
arpl
call
jns
sub
or
and
movsl
addl
std
je
push
sbb
loope
das
stos
sbb
test
jge
mov
sbb
mov
rclb
dec
lcall
mov
inc
sub
xchg
ja
setne
cmovbe
xor
xchg
xor
or
xor
xchg
xor
dec
cmp
xor
inc
dec
xor
xor
sub
dec
xor
xchg
xor
add
xor
xchg
xor
dec
adc
or
add
add
pop
add
fcoml
sub
push
dec
push
mov
add
mov
cld
add
leave
and
add
add
cltd
xchg
dec
rorb
lahf
in
aaa
mov
add
add
sub
sub
lcall
and
pop
iret
lock
push
cwtl
mov
inc
jb
arpl
or
orl
or
add
sub
pop
and
dec
add
push
push
push
mov
int3
mov
sbb
stos
xorl
add
xchg
cmp
shrb
and
aas
cmp
sbb
sbb
xor
mov
fmull
int
push
inc
or
and
call
or
push
sub
mov
xor
sub
push
int3
dec
adc
push
dec
movsl
movsl
sub
xchg
sub
shlb
push
sbb
sbbl
add
cmp
dec
pop
mov
add
jl
inc
aam
sub
mov
pop
pop
ljmp
sub
mov
add
aaa
jo
mov
sbb
adc
std
hlt
aaa
add
inc
jbe
jmp
xor
xor
jl
jnp
mov
push
sub
jp
test
dec
sbb
sbb
popf
cmpsl
cmp
and
or
lock
pop
imul
int3
xor
repnz
sbb
ja
pop
and
push
mov
sbb
add
push
orb
es
or
sbb
or
mov
add
or
dec
fistps
test
or
inc
rolb
sub
push
jl
cmp
xor
mov
popa
cmp
mov
add
je
mov
test
sub
mov
add
and
mov
stc
orb
sub
adc
pusha
or
xor
fistps
jg
cmp
push
push
push
nop
push
loop
je
inc
add
or
xchg
push
lds
int3
fbstp
inc
mov
cmp
xor
push
ljmp
push
pop
add
sbb
adc
insb
imul
sbb
push
push
test
mov
movsb
dec
dec
xor
or
add
and
pop
popf
sarl
or
ret
call
shrl
push
and
fsubp
orb
dec
in
pop
or
xchg
lods
ret
add
adc
xchg
pop
or
adc
xchg
bound
mov
cmp
xlat
lods
call
hlt
mov
loopne
push
decl
loopne
push
push
mov
jo
daa
iret
dec
in
push
lahf
cs
adc
inc
in
js
loope
int3
xchg
cmpsl
and
es
dec
xchg
mov
jno
pop
jle
jne
add
jp
lods
dec
es
add
jmp
and
dec
add
add
pop
call
nop
fmul
add
push
mov
pop
adc
sahf
push
movaps
add
mov
mov
xchg
sbb
sti
adc
mov
or
and
jmp
ret
mov
cmpb
pusha
mov
in
movb
rclb
scas
sbb
or
lea
imul
jo
adc
mov
lea
movsl
inc
ss
orl
pop
leave
dec
adc
int
inc
movsb
inc
popl
push
sti
loop
mov
inc
push
push
sub
rolb
pushf
cld
cvttps2pi
dec
push
sbb
jge
jae
push
add
sti
jmp
mov
adc
es
mov
sbb
sbb
notb
fisubrl
scas
adc
jo
inc
add
mov
mov
xchg
add
in
dec
pop
dec
mov
push
je
hlt
pop
push
into
xor
add
stos
jno
imul
stc
add
es
fildl
fs
inc
dec
add
pop
and
pushf
jo
dec
and
and
push
and
push
and
cmpl
movsl
push
test
setbe
adc
sub
mov
shll
xchg
mov
adc
dec
dec
or
xchg
cmp
jne
inc
mov
ret
dec
cs
or
xchg
movsl
inc
in
xlat
or
nop
fildl
cmp
inc
dec
jb
pop
lods
test
jb
cltd
movsb
dec
inc
and
jb
xchg
pop
dec
andl
sub
mov
xchg
xchg
dec
adc
xchg
mov
xchg
sbb
adc
scas
xchg
and
inc
sub
and
aam
lcall
push
fs
cmp
lods
mov
je
adc
add
xchg
jp
and
sub
push
ja
ljmp
shrl
mov
xchg
inc
cmp
adc
jo
int3
fs
add
xor
cs
scas
in
insb
push
cld
jo
sub
test
add
xchg
sbb
sub
enter
fs
xor
mov
mov
and
fcmove
or
in
test
xor
lea
pop
sbb
test
insl
xchg
jle
cmp
mov
jmp
add
dec
mov
add
shlb
dec
sbb
mov
int
pop
leave
add
xor
pusha
inc
andl
cmp
jmp
xchg
mov
ljmp
ss
push
imul
jbe
movsb
pop
sbb
push
cmp
clc
push
insb
inc
inc
inc
fcmovnb
push
push
ret
push
or
nop
xchg
sub
imul
cmp
out
jnp
in
jne
sbb
sbb
shlb
das
jg
stc
in
out
std
push
inc
filds
pop
push
fs
shll
xchg
xchg
lret
out
push
dec
pop
sbb
pusha
add
sbb
nop
add
pusha
aad
xchg
sbb
add
push
mov
pop
aas
push
jb
mov
mov
xchg
mov
mov
ret
sbb
lret
jp
lds
xor
pop
lea
lret
adc
jo
dec
pop
cmp
arpl
aas
push
dec
insb
push
and
aaa
pusha
dec
jl
mov
push
dec
movsl
iret
test
cmp
orl
test
lods
jno
mov
outsl
xor
test
addb
dec
or
sahf
insl
int
push
scas
or
dec
adc
imul
repz
cmp
movl
push
stos
dec
orb
das
rcll
dec
cmp
mov
sub
sbb
inc
adc
mov
jp
enter
lock
aaa
inc
or
mov
dec
cmp
cmpsl
push
clc
jl
add
lret
mov
sub
xchg
mov
rorb
dec
popf
push
dec
xor
pop
xchg
roll
dec
aaa
repnz
jp
icebp
adc
or
sbb
outsb
adc
push
or
fisubs
push
dec
push
sbb
es
cltd
or
and
add
push
push
push
insb
lods
in
stos
mov
sub
push
push
test
xor
jge
add
filds
daa
jns
leave
js
out
inc
push
mov
call
jne
jmp
dec
mov
lock
xor
adc
test
jle
sbb
add
adc
cmp
add
mov
dec
jl
push
nop
ljmp
cmp
je
insl
add
or
adc
jns
adc
sbb
and
cmp
rolb
inc
xor
int
mov
in
and
mov
nop
cmp
add
xor
lcall
mov
jp
pop
push
mov
sub
adc
fldt
or
cmp
mov
lods
adc
cmpb
je
mov
ljmp
mov
push
aas
add
mov
or
cmp
or
lea
int
rolb
nop
add
fcmovnb
dec
xchg
aam
les
ja
sub
pushl
push
push
push
or
mov
add
cmpsl
xor
pop
test
push
sub
mov
dec
arpl
andl
pushf
or
add
nop
push
inc
ljmp
movsb
xchg
sub
mov
mov
gs
push
sarb
sbb
cmp
ret
push
sub
mov
js
rcll
js
test
daa
cmpsb
js
inc
icebp
adc
fimull
and
xchg
xchg
adc
mov
jno,pt
and
xchg
fisttps
lock
xor
pop
xchg
mov
adc
pop
cmp
and
sub
or
jno
out
push
adc
mov
jno
or
add
jne
or
pusha
add
xor
cwtl
jecxz
xor
icebp
inc
and
sahf
test
sbb
nop
xchg
mov
test
add
mov
push
mov
nop
leave
aam
sub
pop
sub
sbb
rclb
notl
sti
xchg
adc
jmp
add
jae
les
sub
cld
clc
adc
or
jecxz
add
popl
gs
into
loop
cmp
cwtl
fimuls
or
jp
pop
dec
adc
and
dec
mov
pushf
xchg
dec
push
je
push
push
adc
push
stos
adc
cli
divl
dec
mov
loopne
test
add
ljmp
mov
or
shlb
cmp
loope
int3
mov
scas
xorl
mov
stos
add
pop
roll
sub
leave
add
adc
pop
and
adc
adc
es
pushf
aas
scas
add
nop
xchg
pusha
cmp
adc
sub
sbb
js
incb
rdmsr
and
push
xchg
out
mov
dec
pop
fistpll
mov
dec
dec
ret
nop
lahf
push
inc
inc
adc
pop
and
add
push
adc
loopne
sidtl
inc
add
loopne
jnp
outsl
nop
xchg
out
imul
mov
sbb
cmp
sub
mov
shlb
inc
mov
and
sbb
test
sub
cmp
sbb
sbb
pop
dec
popf
je
and
in
jo
jle
pop
push
je
cmp
push
add
nop
sbb
add
imul
xchg
xlat
xchg
mov
cmp
repz
ret
movsb
pusha
outsb
xchg
sub
call
jnp
sbbl
or
in
xor
nop
xor
je
adc
xor
fistpll
mov
je
jl
mov
inc
xor
inc
lcall
pop
push
lret
mov
enter
mov
and
test
call
mov
pop
xchg
aas
jmp
mov
jno
add
psubd
jns
jmp
sarl
xlat
xor
sub
mov
mov
adc
mov
xor
sub
push
pop
aaa
stc
nop
sbb
add
inc
add
test
pop
aam
insb
sub
cmp
push
sbb
push
out
mov
lea
inc
sub
outsl
xor
push
mov
and
mov
mov
push
imul
les
sbb
mov
pop
hlt
mov
pop
negb
mov
or
incl
test
dec
pop
test
mov
xchg
popa
fildll
pop
es
dec
pop
fwait
test
or
ret
sbb
push
and
aas
fs
push
pop
mov
mov
fs
shll
sbb
mov
inc
aam
jg
rorl
inc
add
and
lret
xor
adc
je
xor
nop
sbb
ret
das
add
and
add
je
pop
ljmp
pop
mov
js
jo
fists
or
insb
mov
mov
adcl
sbb
mov
push
xor
addl
add
aad
rcrl
sti
lods
pop
add
addl
add
leave
mov
add
icebp
je
lods
mov
imulb
je
mull
mov
or
and
push
push
inc
push
dec
sbb
icebp
mov
mov
jo
inc
lock
mov
inc
aam
mov
sub
fs
jecxz
xchg
cltd
test
jns
add
mov
fisttpl
push
or
push
push
das
repz
fs
les
add
push
pop
dec
fs
add
mov
adc
dec
cmpb
ret
pushf
lods
dec
imul
cmp
cmp
das
inc
pop
push
fidivl
aas
xchg
fcmovnb
or
leave
and
jg
push
xchg
or
pop
mov
sbb
aaa
mov
fldt
inc
sub
xchg
sbb
xorl
adc
push
push
pusha
and
sub
cmpsb
mov
sub
adc
sub
int
or
cmp
add
sbbb
in
adc
fnsave
fstps
mov
aam
sbb
js
into
repz
and
les
inc
ss
lock
push
xchg
or
pop
mov
xchg
sbb
movzbl
sbb
jb
xchg
and
xor
sub
arpl
pop
add
pop
add
inc
xchg
shlb
nop
repnz
leave
bound
pusha
cmp
xor
xor
in
jbe
nop
iret
sub
sub
sbb
and
fisttpl
and
sbb
sub
mov
mov
sahf
lcall
in
jbe
push
loop
inc
loope
and
add
je
test
push
test
sub
sub
pusha
leave
inc
andl
xchg
add
mov
inc
push
es
cmpb
jno
and
pop
cmpb
dec
mov
pop
xor
mov
test
pop
xchg
idivl
or
pushf
push
cmp
and
shlb
mov
adc
ret
imul
sub
or
pop
push
pop
push
in
clc
dec
xor
add
and
add
testl
mov
fisubrs
mov
mov
sbb
fisubl
pusha
xor
add
adc
movsl
imul
or
push
in
mov
mov
mov
imul
cmp
jae
sub
loopne
out
nop
fstpl
out
sbb
jle
lock
inc
cmp
movsl
jne
ret
clc
push
jb
push
and
mov
push
cmp
xchg
dec
dec
mov
dec
dec
popf
test
insb
push
and
imull
add
push
lods
mov
mov
add
sbb
xor
add
inc
add
mov
inc
add
xchg
push
imul
pop
mov
orb
in
adc
fimuls
push
push
jb
mov
fwait
sbb
inc
imul
sub
test
adc
in
dec
lock
rclb
add
dec
cmp
xchg
add
cmpsb
xchg
or
pop
cmp
jne
cmp
adc
inc
inc
push
push
sbb
nop
xchg
inc
dec
pop
push
loope
inc
add
xchg
test
in
outsl
adc
paddb
adc
pop
and
leave
jp
dec
sbb
or
inc
sti
jle,pn
add
pusha
pushf
setge
stos
xor
or
push
ds
mov
in
shrb
pop
adc
enter
adc
jmp
cmp
jnp
test
lahf
dec
lods
mov
cmp
cmp
pop
lretw
and
inc
out
mov
sbb
dec
loop
xchg
inc
sbb
or
cwtl
inc
inc
adc
enter
jb
addb
mov
test
mov
dec
lea
fisttps
jne
xor
loopne
and
pushf
addr16
push
push
les
fsubrs
ljmp
jg
jo
out
xchg
fisubs
decb
fcoml
sbb
add
mov
sbbl
aaa
or
inc
jne
mov
xchg
push
shlb
pop
sbb
jo
xchg
sarl
push
push
pop
push
out
cmpsb
rorb
push
ret
xor
mov
adc
mov
mov
mov
and
xchg
dec
xchg
les
sahf
fwait
movb
adc
xor
pop
les
clc
mov
mov
inc
mov
fnstsw
push
jl
divl
xchg
push
je
xchg
sub
jmp
popl
sub
outsb
fcompl
cmp
lret
mov
stos
sub
movsb
adc
out
pop
add
fisttpl
push
cmp
jae
jp
adc
mov
sub
inc
cltd
inc
icebp
or
push
pop
adc
mov
xor
into
or
iret
or
or
xchg
jl
add
xchg
xchg
sub
cmp
pop
cmp
fstpl
cmc
and
ret
adc
sbb
insl
add
sbb
aaa
cltd
iret
clc
dec
add
pop
or
push
push
add
sbb
inc
jge
mov
mov
rclb
dec
sub
sbb
test
adc
or
add
nop
nop
fisubrl
ss
ss
pop
cwtl
rorb
jo
test
jp
cli
and
orl
fstl
pop
dec
add
nop
adc
aas
arpl
and
add
mov
sbb
outsb
jle
inc
or
fstpl
cmp
aaa
rclb
jne
push
cli
or
sub
dec
call
xorl
loopne
mov
dec
out
push
sub
aaa
xlat
test
inc
xor
cmp
je
daa
sarb
fimull
int
sbb
cmc
mov
shlb
stos
lret
cmp
xor
cmp
jbe
jecxz
pop
or
and
add
dec
ret
idivb
add
sub
clc
ret
push
xchg
shr
sbb
pop
ds
sarb
jbe
sub
dec
dec
rorl
xchg
fists
or
out
add
sub
notb
aas
push
xlat
stc
push
fistpl
mov
mov
mov
subb
add
add
xor
cmp
adc
in
adc
cmp
jle
push
push
inc
decb
stos
add
sbb
pop
repnz
mov
fcoms
imul
test
daa
imul
imul
aas
ja
sub
js
call
mov
ficompl
jae
adc
or
sbb
int
cmp
mov
movl
pop
inc
cmovs
mov
daa
sbbl
push
xchg
or
push
xchg
lea
adc
dec
and
test
sbb
sub
pop
or
mov
inc
lea
jno
add
jne
outsb
sub
pop
sub
adc
cmp
out
and
inc
xchg
lret
or
fldl
pop
xor
pop
push
jp
add
pusha
xchg
pop
cmp
jo
mov
xor
sub
mov
orb
add
xchg
aam
and
outsb
jno
adc
push
and
mov
add
sbb
rolb
scas
or
nop
sub
dec
xchg
ja
pop
es
in
xorb
dec
fwait
push
pop
inc
dec
pop
adc
adc
mov
and
dec
sbb
and
orb
fildl
ljmp
xchg
test
je
or
pop
insb
mov
movsb
add
mov
movsb
or
int3
pop
sbb
xchg
dec
push
or
or
add
push
and
add
mov
cwtl
mov
adc
push
or
push
sbb
es
pop
push
adc
mov
add
push
pop
insl
inc
adc
xchg
push
add
sub
imul
cmp
sub
mov
aas
sbbb
daa
adc
in
xor
adc
add
test
push
cmp
pusha
jne
cmp
inc
test
dec
nop
pop
xlat
cmpsb
dec
push
cmp
leave
scas
push
push
dec
pusha
mov
add
ret
or
xor
or
scas
add
movsb
imulb
and
sbb
lods
mov
inc
push
iret
int3
scas
fwait
sub
mov
adc
jbe
inc
inc
mov
xchg
lods
ljmp
xchg
mov
cld
cmp
popa
xor
dec
sub
add
mov
aaa
push
xchg
dec
sub
adc
lea
and
dec
js
into
aad
sbb
std
jb
jle
mov
sbb
ds
adc
std
xchg
cmp
sbb
jbe
sub
mov
sub
js
and
xor
loopne
les
cmp
popa
xchg
xchg
mov
jg
dec
pop
add
add
das
push
pop
cmp
loopne
inc
pop
jecxz
cmp
push
pushf
js
jle
push
xchg
cmp
movsl
mov
or
or
fdivrl
or
or
insb
lahf
push
les
rcll
xchg
imul
mov
and
fldl
adc
push
inc
add
adc
mov
adc
pusha
sub
mov
aad
xor
xor
jnp
fmull
adc
xchg
add
imul
push
inc
push
sub
adc
inc
inc
daa
and
lahf
fwait
or
jb
xor
sbb
imul
pop
xor
sbb
lods
popf
inc
sbb
popa
sub
mov
incl
movsl
mov
adc
cs
fiaddl
sub
nop
testb
cmp
mov
xchg
push
shrb
add
orb
push
sub
or
xchg
mov
mov
jo
repnz
lods
pop
adc
je
cmp
mov
in
imul
push
cmp
shrb
sub
je
and
sub
adcl
rcll
xlat
push
add
push
mov
jmp
inc
fs
movsb
cmc
or
mov
jg
mov
mov
loopne
nop
and
mov
pop
mov
test
pop
insb
cmpl
cmp
lock
pop
adc
dec
xlat
sub
lods
adc
pop
pop
ljmp
inc
add
and
mov
pop
pop
gs
push
mov
in
mov
pop
and
and
nop
sbb
lds
je
ja
insl
adc
sbb
and
sub
rolb
add
and
or
in
add
js
sub
movsl
aas
adc
jl
fcompl
inc
add
loop
adc
inc
sub
cmp
push
shrl
xor
repz
aaa
dec
shrl
xor
cwtl
or
lock
cmp
lret
stc
decl
and
push
sub
rorl
inc
mov
mov
and
sub
mov
rcrl
inc
outsl
sub
cmp
push
aaa
adc
push
cmp
popa
js
pop
js
adc
sbb
adc
sti
add
push
inc
sbb
jno
xchg
or
pop
sbb
mov
mov
test
arpl
adc
sbb
loope
add
jmp
sarb
ret
push
addl
push
sbb
jl
mov
jmp
add
dec
test
cld
pop
hlt
jo
test
add
aas
pusha
cwtl
push
shlb
adc
shrl
rclb
cmp
pop
sbb
je
imul
push
sbb
sub
imul
lret
int3
sahf
mov
and
ret
daa
sub
inc
nop
mov
push
push
lahf
shl
adcb
dec
adc
add
xor
and
jp
mov
mov
scas
inc
xor
loopne
sbb
pop
in
sbbl
pop
je
dec
shlb
xchg
fs
adc
push
sub
ret
inc
ja
punpckhbw
pop
dec
in
sbb
leave
add
xchg
pop
push
stc
lcall
jle
rcrl
shll
nop
pop
inc
mov
jns
xorl
dec
and
push
pop
xchg
lret
dec
pusha
and
arpl
enter
xchg
push
enter
pop
and
xor
and
and
ret
and
push
and
sbb
push
arpl
push
pop
inc
mov
ret
lock
sbb
adc
pop
and
mov
or
inc
inc
add
mov
push
cmpb
or
popf
mov
mov
sbb
mov
push
inc
mov
mov
lea
and
pop
sbb
daa
inc
lds
daa
pop
lods
sub
sbb
jb
stos
and
jge
cmpl
and
add
push
fcoml
inc
xchg
cmp
ret
and
outsl
mov
lock
pop
icebp
lds
xor
pop
inc
mov
pop
xchg
jmp
jl
fs
cmp
sub
movsl
imul
push
cmpsb
ds
sub
insb
loopne
add
fsubrs
int
inc
ret
add
mov
mov
sub
pop
cs
cmpsb
sub
popf
bnd
inc
jne
xchg
and
jo
sub
inc
cs
dec
push
cmp
cmp
push
sub
lahf
or
add
add
push
sub
lods
ret
insb
mov
sub
addl
sub
aam
sub
xor
enter
push
nop
add
add
inc
imul
pop
pop
stos
lcall
cmpb
or
and
mov
aam
in
ja
xchg
mov
lea
or
mov
inc
inc
cmp
sbb
add
bswap
inc
push
sbb
cmp
les
movsl
mov
out
adc
adc
lods
xor
and
movsl
mov
push
jb
adc
xor
sub
jo
sub
push
shlb
mov
cld
and
jae
add
xchg
jae
test
add
xchg
mov
sbb
jmp
or
call
pop
xor
push
pop
add
or
stos
or
lea
cmp
pop
leave
dec
add
sub
adc
add
jnp
aam
bound
adc
leave
fcoml
adc
inc
and
xchg
cmp
je
in
les
dec
push
mov
inc
adc
addb
lds
sbb
je
mov
inc
inc
lds
adc
inc
mov
mov
adc
aad
cmc
out
test
cmpsb
popa
or
mov
add
xchg
ficoms
or
pop
sbb
scas
nop
inc
adc
add
xchg
hlt
add
or
call
lds
jmp
push
pop
inc
push
and
push
pop
sbbb
jno
ljmp
je
cmp
adc
sub
add
dec
enter
push
add
sti
jno
mov
add
outsb
inc
mov
cmp
xchg
pop
jb
inc
fdivs
sub
test
mov
and
mov
push
fsubrs
sbb
sub
add
sbb
int3
cmp
out
mov
mov
and
scas
push
adc
mov
mov
and
jno
aad
and
cmpsl
and
push
sub
push
cltd
and
leave
pop
xchg
sbb
add
and
jge
andb
sub
cmp
or
pop
test
and
leave
movl
adcl
push
mov
das
mov
dec
out
or
sbb
mov
jne
shr
stos
xchg
test
cmpsl
lods
movsl
mov
xor
add
dec
dec
jbe
out
dec
sbb
test
sbb
inc
movb
sbb
in
nop
lods
xchg
sbb
push
inc
inc
les
repz
pushf
enter
push
sbb
sbb
xor
dec
push
jns
lds
push
push
push
adc
mov
and
popa
loopne
push
xor
fwait
push
inc
mov
inc
dec
add
aad
mov
mov
pop
push
cmp
mov
and
stos
or
mov
dec
xor
inc
and
and
pusha
add
fwait
sbb
sub
popf
and
int
outsl
sub
test
push
daa
and
and
push
cmpb
insb
cs
fadds
lret
pop
or
xchg
add
jae
push
mov
dec
pop
outsb
push
daa
jg
xchg
cmp
shll
and
xchg
push
aaa
and
xor
or
movsl
or
sbb
imul
xchg
pop
sub
adc
pop
push
leave
push
ds
ja
fwait
addl
dec
or
add
loope
adc
add
adc
mov
nop
jnp
xchg
fcmovb
fs
ds
jns
or
test
mov
mov
push
mov
inc
push
add
sub
shlb
xchg
cs
shll
pop
shlb
sbb
in
pop
cmp
pop
cmp
das
add
mov
jb
mov
add
push
add
push
inc
pop
push
pop
pop
orb
add
or
cli
mov
enter
add
and
adc
jne
lods
pop
dec
jl
shrb
hlt
iret
and
push
and
sbb
enter
jmp
adcb
sbb
gs
mov
dec
mov
sub
movsb
jmp
pusha
xchg
xchg
cmpsl
je
aam
test
adc
rorl
cmp
addb
jo
int
add
aad
xchg
jp
movsl
pop
cwtl
push
jecxz
xor
in
push
pop
add
adc
adc
push
sub
cmp
je
addr16
add
xor
mov
orb
xchg
or
incl
cmp
nop
pop
inc
or
adc
leave
das
test
jecxz
dec
adc
inc
sub
or
pop
push
sahf
testl
mov
sarl
test
idivb
test
push
mov
xchg
xchg
sub
push
xchg
push
mov
aam
jne
push
ds
loopne
push
sbb
in
cmp
lock
mov
or
movsl
dec
or
or
jae
cmp
or
xchg
push
add
enter
and
out
int3
adc
orb
adc
sub
or
inc
jl
jne
pusha
popa
rcll
nop
stos
test
pop
or
sub
cs
xor
mov
test
mov
mov
xchg
sub
adc
pusha
xchg
cmp
mov
jns
loope
in
loopne
enter
scas
movsb
sbb
pop
sbb
int3
call
sbb
idivb
xchg
fadds
in
rcrb
add
in
push
push
sbb
test
inc
push
pop
jns
push
in
scas
fs
push
push
add
fsubrs
pop
cmp
sub
xchg
and
jns
mov
in
add
pushf
sahf
or
les
jns
inc
es
add
cltd
daa
fsubrl
inc
sahf
or
add
sub
sub
mov
mov
daa
adc
sub
mov
mov
mov
mov
inc
es
mov
pop
adc
xorb
cwtl
imul
test
aam
rolb
pop
xor
adc
cwtl
insb
sbb
dec
cmp
add
push
jl
xchg
mov
add
xor
in
jmp
lods
ret
lock
loopne
mov
or
jl
or
pop
or
aam
sbb
pop
inc
sbb
sub
and
nop
in
adc
xchg
adc
mov
or
in
push
mov
pop
jo
pop
adc
sbb
int
lods
or
sub
ja
pop
add
lock
rcrb
push
es
add
sbb
add
sbb
or
mov
in
dec
sub
imul
enter
inc
cld
stos
mov
sbb
bound
hlt
or
inc
movsl
mov
pop
sbb
xor
cmp
inc
imul
inc
test
pop
jmp
mov
ret
jl
out
adc
and
ret
lock
mov
and
hlt
stos
adcb
sbb
aaa
add
pop
addl
inc
sahf
or
add
inc
mov
in
aas
lods
stos
or
dec
jns
xchg
out
dec
cmp
xchg
adc
sub
repnz
cwtl
xor
xor
cmp
mov
aad
mov
jb
sahf
inc
lea
add
xchg
push
lahf
xchg
cmpsb
xchg
mov
mov
jmp
or
or
mov
xor
nop
mov
jg
shrl
inc
pop
xor
stc
mov
push
mov
daa
pushw
push
pop
pop
mov
lret
andl
xchg
jne
add
fs
idivl
mov
add
and
jo
lock
xor
popa
mov
adcl
or
clc
and
jb
xor
xor
test
cmp
mov
rorl
mov
push
and
adc
mov
aas
sub
mov
imul
push
in
mov
fcomip
cmp
jecxz
loop
push
pop
jo
sti
push
pop
add
xchg
sbb
rcll
push
ljmp
mov
stc
int3
and
lock
adc
mov
test
mov
sub
std
ffreep
xor
loop
inc
lea
push
dec
and
dec
mov
dec
or
xchg
aad
pop
sbb
enter
push
and
rorb
pop
xor
cwtl
push
or
fmul
dec
in
xchg
push
jne
cmpb
add
push
xor
stos
inc
fs
inc
in
and
lock
lods
mov
cmp
sahf
xchg
xor
mov
dec
xor
out
inc
and
dec
sub
add
and
lods
nop
xchg
and
pop
test
add
pop
inc
cmp
inc
push
call
inc
mov
jo
xchg
inc
repz
xor
cwtl
jl
push
or
inc
inc
or
inc
jbe
mov
pop
jo
and
movsl
jo
dec
jno
lds
push
cli
sbb
adc
pop
mov
aaa
or
xchg
aas
movsb
pop
jp
sub
setns
in
dec
sub
push
sbb
sbb
add
mov
addr16
pop
or
push
mov
mov
cmp
mov
sbb
adc
test
push
imul
cmpl
insl
xor
leave
push
inc
les
and
cli
or
push
test
dec
shr
lea
daa
outsl
outsl
test
jle
in
lock
mov
xor
enter
lods
cmc
test
xor
imul
add
aam
mov
xor
inc
andb
sbb
cmp
inc
push
pop
mov
jb
orl
les
or
mov
popl
call
add
pop
cmp
and
xchg
int3
add
xor
sub
in
fs
mov
sbb
jo
push
ljmp
jne
rorl
cmp
push
xlat
sbb
dec
xchg
in
sub
xor
jo
and
or
ja
add
shrl
inc
pop
movsl
daa
in
push
and
cwtl
xor
inc
cmp
dec
sbb
aam
and
push
cmp
mov
imul
js
cmp
ret
pop
mov
and
pop
xorb
xor
pop
jns
pop
sarl
mov
pusha
push
and
xchg
or
sub
jl
dec
xor
mov
xor
xor
sub
add
pop
or
pop
repnz
mov
mov
xor
push
add
push
repnz
add
push
pop
je,pt
adc
dec
mov
rolb
push
xchg
jb
sub
cli
scas
push
pop
push
pusha
mov
shlb
in
sub
jb
push
int
adc
dec
fdivl
imul
lods
or
jle
or
jmp
fisubrl
mov
push
cmp
jae
call
test
cli
push
shl
out
jmp
mov
fbstp
sbb
out
add
push
pop
inc
jne
mov
sbb
adc
lods
add
aam
jmp
daa
inc
out
xchg
inc
pop
fs
sahf
lea
or
add
push
add
or
sahf
xlat
ja
add
add
inc
push
test
aas
add
add
or
jle
jmp
sbb
jg
cmp
loop
add
inc
jo
sbb
lea
lcall
or
lock
push
mov
sbb
add
mov
ret
or
sub
outsb
add
push
daa
cs
inc
ljmp
fmull
jecxz
loope
loope
push
add
pop
decl
fldenv
mov
pusha
sub
mov
push
and
repnz
pushf
jo
mov
loopne
imul
dec
xchg
push
mov
pop
fstpl
cmpsl
dec
jmp
pop
stos
inc
dec
mov
sbb
xchg
xor
xchg
and
jne
sbb
sbb
add
adc
pop
leave
jae
hlt
arpl
sbb
xor
mov
dec
cmp
mov
lret
add
lock
mov
inc
pop
mov
dec
ss
sbb
jmp
dec
sbb
pop
sbb
push
pop
push
mov
dec
xchg
xchg
dec
or
cmp
mov
dec
and
add
and
adc
push
sub
test
es
mov
divl
pop
sub
inc
sub
inc
sbb
vmwrite
xor
adc
test
cmpsb
and
notl
xor
mov
cmp
popf
aam
sbb
cltd
test
or
xor
cs
or
jns
insl
jp
fcoml
das
mov
and
repnz
or
push
test
rolb
push
pop
sub
lcall
xchg
lret
in
jge
or
or
sbb
cli
cltd
addr16
inc
and
test
or
jg
adcl
or
cmp
cmpsl
in
bound
add
or
pop
add
cmp
or
lods
fimull
xor
stos
imul
xchg
or
insl
jmp
addb
stos
add
xchg
adc
inc
adc
mov
mov
popa
mov
lods
fs
arpl
inc
ret
inc
fs
add
loope
pop
mov
mov
push
pop
mov
insb
push
ljmp
cmp
jae
mov
cmpsb
push
rol
or
inc
adc
inc
cmp
jl
aad
test
daa
sbbb
cld
std
jmp
xchg
mov
xor
mulb
stc
mov
cli
mov
pop
add
pusha
cmp
or
mov
mov
jbe
cltd
or
jns
or
loopne
ror
rclb
mov
inc
push
xchg
movsb
push
pop
inc
in
lods
cmp
loopne
sti
jmp
repz
pusha
jle
pop
inc
cmpsb
je
mov
dec
mov
sbb
mov
insl
push
sub
mov
iret
imul
nop
test
add
sub
add
and
push
sbb
add
add
rclb
adc
xor
dec
add
push
mov
pop
pop
push
pusha
dec
imul
push
in
jo
add
insb
xchg
rorb
sti
imul
sub
imul
push
sub
or
jnp
cmp
adc
and
xor
cmp
insb
mov
int3
cmp
or
shrb
jne
push
push
xor
jge
sub
xor
or
add
mov
in
push
jg
push
insb
inc
mov
test
cmp
push
loop
cmp
jmp
mov
cmp
stc
pop
push
insb
insb
mov
push
or
pop
add
pop
adc
jno
aad
and
or
push
jp,pn
inc
orb
push
and
inc
xchg
pop
add
rclb
call
or
or
filds
push
scas
inc
xchg
adc
mov
adc
xchg
add
sub
lea
inc
arpl
inc
push
mov
test
jle
arpl
dec
dec
out
fcoml
rorl
lea
or
jg
ljmp
test
push
popf
loop
sbb
pop
repz
sub
jmp
fcompl
adc
jmp
mov
test
or
lods
push
mov
or
aaa
pop
repz
mov
and
dec
push
daa
cmc
mov
jne
out
rcll
xchg
mov
popf
xchg
jne
push
daa
fdivrs
adc
mov
push
mov
cmp
in
xor
xchg
pop
inc
push
cwtl
push
daa
inc
and
sbb
flds
pop
xor
les
mov
add
mov
flds
and
in
cwtl
sbb
and
pop
dec
or
loope
pxor
arpl
das
test
sub
or
jb
out
movb
cmp
into
add
or
hlt
loopne
cmp
adc
aam
pop
cmp
iret
ret
push
mov
push
jl
sub
addb
ljmp
movsl
rcll
mov
in
into
sbb
xchg
jp
dec
lock
cmp
stc
testl
inc
jmp
push
adc
je
cmp
je
cmp
je
cmp
je
pop
mov
push
mov
adc
pop
xchg
adc
fwait
mov
std
mov
lahf
mov
stos
lock
imul
out
mov
jnp
or
mov
in
dec
inc
hlt
inc
and
xor
sub
lcall
xor
mov
xchg
cmpb
scas
mov
fimull
shrl
cmp
sbbb
and
lcall
adc
pop
jbe
rcrb
xor
cmp
inc
jle
adc
xor
out
adc
mov
add
scas
call
into
subb
and
and
pusha
loopne
mov
inc
movsb
test
mov
adc
sbb
inc
sub
push
stos
sbbb
sbb
subb
xlat
dec
lcall
loope
dec
push
add
mov
jecxz
sbb
cmpb
pop
or
push
mov
mov
test
and
test
jne
pusha
mov
lahf
and
inc
add
adc
and
xchg
and
push
les
mov
pop
je
or
icebp
mov
mov
mov
adc
cmpsb
mov
inc
nop
mov
xchg
mov
inc
ja
pop
testb
sub
sub
loopne
mov
cld
pop
sbb
sbb
sub
mov
or
inc
stos
inc
mov
jecxz
es
psubb
pop
cld
adc
cmp
js
xor
xorl
fmull
sbb
lock
test
jne
movsb
inc
add
sbb
xor
ret
xor
jl
enter
pop
repnz
cld
test
adc
xor
sbb
out
pop
pop
sub
repnz
push
mov
inc
sbb
pusha
enter
mov
mov
or
movsb
test
add
icebp
and
jne
and
add
add
cld
dec
or
shrl
outsb
nop
lock
aad
add
cmp
lock
adc
sbb
adc
mov
cli
push
ja
mov
jmp
dec
push
rorb
sahf
xor
mov
add
adc
rorl
inc
xchg
pop
add
loopne
shrl
ret
and
xchg
jp
sub
imul
inc
sbb
sarb
clc
dec
and
adc
test
inc
dec
pop
inc
mov
or
outsb
push
call
jb
ficoml
mov
or
mov
mov
cmp
movsl
mov
xor
cmp
mov
outsl
sub
jno
rolb
sub
inc
sub
dec
jo
sbb
dec
loop
sbb
js
add
into
ret
add
push
jns
inc
ss
pop
js
add
jns
dec
jge
inc
out
cli
mov
mov
push
sbb
and
rol
mov
inc
add
mov
int
add
adc
shr
nop
inc
push
in
call
mov
in
call
push
in
mov
sahf
hlt
xchg
jne
mov
add
cmc
adc
mov
xchg
lea
addr16
sbb
adc
pop
cs
outsl
cmpl
mov
push
pop
mov
mov
mov
adc
mov
cs
xchg
mov
sbb
aam
sub
aad
sbb
ss
dec
sbb
sahf
outsb
pusha
test
int
or
push
ljmp
dec
enter
jle
adc
jne
xor
mov
ret
lcall
scas
sbb
adc
fiaddl
push
ja
push
mov
cmc
dec
cmp
push
mov
and
pop
sub
push
mov
cmp
push
add
push
cmp
insl
or
inc
lods
mov
aad
xor
not
dec
and
mov
inc
inc
loop
sub
imul
ret
out
pop
dec
add
mov
add
xor
push
fs
pop
movl
add
daa
add
jg
xorb
inc
inc
jae
cwtl
adc
imul
add
test
xchg
pop
inc
xchg
test
xchg
cmp
pop
orl
and
xor
lret
fiadds
aas
jl
xchg
lock
shll
sub
cmp
sbb
add
lods
adc
je
add
add
int3
xor
ret
mov
add
or
lea
pop
lahf
insl
push
test
push
shrl
cmp
and
inc
loopne
data16
ret
sub
sub
push
ret
or
ret
sbb
sar
aas
sbb
fcoms
stc
push
outsb
insb
test
loopne
je
and
or
add
neg
or
xor
inc
sbb
clc
decl
and
cmp
jne
and
inc
push
sbb
mov
or
mov
inc
pop
mov
clc
mov
xor
cltd
cli
adcb
mov
add
jbe
or
aam
xchg
jo
cmp
pusha
adc
pusha
adc
inc
sub
mov
add
mov
pop
imul
jo
lods
jecxz
jmp
push
fs
loopne
mov
push
and
cs
cmpsb
ja
fwait
xchg
inc
test
push
push
shl
mov
or
inc
stos
mov
and
add
test
or
mov
push
sub
int
mov
nop
aaa
out
add
mov
adc
mov
inc
sbb
pushf
fwait
addb
pop
adc
push
sbb
or
pushf
es
adc
pop
sub
adc
pop
sub
and
bound
out
mov
stos
cli
or
mov
and
sub
add
push
into
insl
je
pop
add
pop
cmpl
mov
ss
cwtl
cld
fwait
mov
icebp
push
push
push
mov
in
sub
push
push
inc
add
mov
inc
adc
mov
and
shrb
xor
rolb
xchg
enter
push
test
shr
xlat
sbb
into
sbb
adc
adc
add
push
outsb
inc
add
inc
shrb
sbb
je
and
push
fbstp
xlat
rcrl
or
inc
dec
add
adc
sbb
mov
dec
rorb
cmp
push
xor
imul
pop
add
or
jg
mov
pop
mov
xchg
push
cmp
xchg
iret
sub
inc
stos
or
cmpsb
pop
ljmp
cs
inc
ret
pop
cmp
mov
cmp
or
iret
iret
es
testl
xchg
aam
jo
and
jnp
sbb
not
ret
fadds
add
jecxz
xorb
xor
xor
mov
punpckhwd
call
mov
into
popf
fadds
adc
push
icebp
mov
dec
adc
es
push
mov
roll
in
lret
and
fdivs
inc
inc
clc
xchg
inc
mov
aad
xchg
rcrb
mov
pop
cmp
push
idivb
inc
test
pop
ret
or
sub
pop
sub
das
adc
aam
jg
lcall
jl
mov
dec
in
or
jg
movl
adc
mov
lock
jne
loop
loope
push
das
jmp
hlt
lea
shrb
sbb
pop
add
sti
test
inc
addr16
dec
mov
sbb
dec
hlt
ja
cmp
xchg
mov
jecxz
cmp
adc
js
inc
jne
sbb
stos
add
ss
push
add
mov
mov
and
bound
fisttpll
pop
or
dec
jo
divl
add
out
inc
and
add
or
pop
sub
cmp
mov
pop
dec
cld
lock
mov
jl
cltd
push
add
mov
mov
ret
ds
xchg
dec
sub
sti
or
pop
mov
jmp
push
add
pop
js
jo
mov
cmpsl
loopne
mov
sub
dec
push
mov
mov
sbb
je
sub
jmp
xor
or
or
adc
inc
xchg
push
or
inc
xor
inc
or
and
ficomps
sbb
movsb
pop
push
pop
jb
add
xor
jl
out
adc
inc
jb
push
add
or
adc
nop
sahf
into
jle
popa
and
and
push
das
dec
sub
test
cmp
test
dec
sbb
pop
inc
outsl
test
neg
add
xchg
mov
push
xor
stos
dec
add
xor
push
mov
xor
sub
fimull
ds
fs
cmovnp
leave
sbb
es
in
cmp
mov
sbb
push
push
mov
dec
cs
adc
push
xor
jnp
and
bound
jo
and
or
notb
pop
or
xor
xor
leave
push
and
ret
push
leave
sbb
fcmovnb
icebp
or
sbb
in
sub
push
mov
or
add
js
sarb
xchg
clc
adc
cs
pop
inc
add
jecxz
xor
gs
and
adc
inc
and
or
cmpsl
sub
jecxz
add
mov
aaa
inc
mov
mov
add
inc
insb
aad
jmp
push
sub
sub
xor
push
and
ret
inc
push
lds
loop
outsl
cmp
jb
sub
jmp
push
dec
movzwl
dec
pop
cmpl
xchg
test
pushf
ret
lret
cs
push
jnp
jmp
push
push
push
or
cmpb
or
mov
hlt
dec
push
and
nop
les
ljmp
aam
add
mov
and
dec
in
add
shrl
dec
push
push
push
shll
cmp
lahf
jmp
push
sub
cmp
mov
pusha
push
jne
inc
sub
mov
cmp
in
jns,pt
push
iret
test
xchg
pop
cmp
enter
dec
add
leave
sub
test
adc
add
dec
push
dec
cmp
inc
inc
xchg
or
pop
enter
fmuls
adc
mov
sbb
cmp
fisttpl
pop
aas
loope
gs
push
push
push
mov
pop
push
dec
sub
jo
mov
xchg
movsb
sub
mov
adcb
scas
push
add
movl
sub
lcall
push
sub
cmp
loopne
imul
lds
fs
add
sbb
sub
in
inc
mov
ds
mov
lret
push
push
cmpsb
push
loopne
cmc
xor
add
cmp
mov
mov
jo
mov
adc
stos
mov
andb
sbb
pop
or
dec
and
pop
mov
ss
inc
dec
es
mov
adc
sbb
inc
cmpsl
test
add
lds
or
fistps
fnstcw
insl
pop
enter
dec
add
enter
mov
dec
popa
stos
add
push
pusha
sbb
stos
jge
mov
pop
or
repnz
sbb
and
faddl
push
dec
xor
or
push
jo
ja
ret
fcmovne
adc
popa
les
shrl
adc
add
icebp
mov
mov
jg
in
xchg
or
inc
xchg
add
arpl
sub
fs
sub
adc
mov
cwtl
sbb
sarb
loopne
sbb
sub
mov
imul
mov
adc
es
jbe
add
mov
and
loopne
dec
cwtl
xor
jle
add
push
add
lahf
or
rol
sbb
sbb
incl
jne
add
push
mov
cmp
testl
mov
sbb
aad
inc
jo
xor
jns
or
sahf
test
sub
add
mov
adc
cmp
or
jnp
call
push
dec
int
push
nop
and
or
sbb
sbb
lock
in
hlt
jo
lea
mov
or
repz
cmpb
jne
push
fstps
push
sarb
xor
inc
subl
xor
dec
nop
push
lcall
or
fs
push
es
pusha
stos
lds
add
xor
push
mov
mov
shlb
pushf
and
or
cmp
fisubs
sbb
pop
dec
mov
lahf
add
in
imul
dec
and
sbb
push
add
inc
inc
add
xor
test
xor
xchg
movsl
or
jl
dec
lret
mov
sbb
inc
and
test
rolb
inc
or
dec
dec
and
dec
call
sub
sbb
xor
cmp
jge
add
jbe
jl
leave
shll
xor
inc
dec
mov
push
sbbl
in
add
movsb
bound
inc
dec
or
daa
inc
or
sub
adc
inc
cmc
aam
or
scas
add
push
loopne
pop
movsl
dec
ret
jo
inc
rcrb
mov
pop
inc
sub
repnz
adc
adc
inc
and
adc
fs
cmp
imul
push
dec
pop
ret
push
scas
pop
pop
cmpsb
pop
push
decl
sahf
lea
loop
jne
and
scas
xchg
movsl
add
lock
in
les
jg
pop
fnstcw
das
shrb
fmuls
push
aas
push
imul
push
add
sbb
xor
sub
and
sahf
ficomps
mov
dec
and
or
add
mov
cmpb
add
in
add
pop
add
mov
push
addr16
in
dec
arpl
or
jne
and
leave
leave
push
jl
js
ret
fmuls
cli
sbb
add
or
test
popa
jmp
dec
sub
cmpsb
pop
mov
ret
stc
pop
test
adcl
add
pusha
sti
and
xchg
pop
xor
mov
jb
mov
sbb
je
jl
loope
or
and
push
push
or
cwtl
add
aam
xor
shrl
js
mov
push
dec
dec
lods
mov
xor
pop
sub
or
fiadds
aaa
or
cltd
inc
inc
or
test
dec
or
jecxz
xor
dec
mov
leave
pop
sub
dec
push
mov
cmp
dec
inc
inc
jns
mov
cmp
je
sbb
or
pop
xchg
inc
dec
dec
and
and
fsts
frstor
pop
paddw
mov
add
cmp
cmp
pop
sbbl
orl
jb
je
xchg
dec
stos
lret
inc
dec
adc
fisubrl
shrb
adc
add
push
cmpl
add
es
nop
adc
daa
dec
dec
test
sahf
shll
pop
xchg
push
adc
inc
sub
cmp
nop
and
push
dec
cmp
lock
ss
mov
xchg
mov
shrb
push
pop
xor
repnz
pop
pop
or
imul
jmp
xor
xor
sbb
push
sub
popa
das
inc
out
in
pusha
cmp
sbb
loope
nop
pusha
pusha
push
inc
sbbl
push
sub
mov
movb
cmp
jno
adc
jns
int3
xor
jmp
or
mov
and
icebp
addr16
xor
dec
daa
sub
adc
inc
adc
adc
or
loope
subl
ljmp
pusha
test
push
incl
movsl
into
jmp
add
dec
sbb
fsubrs
add
jne
rclb
dec
push
inc
mov
fcmovnb
nop
arpl
add
and
shrb
in
test
sub
lock
and
jno
dec
push
inc
pop
enter
loopne
outsl
mov
rorb
js
pop
add
roll
in
dec
inc
pusha
push
dec
sub
push
inc
fldl
sub
xor
inc
pop
das
addl
sub
lock
int
and
xchg
add
ret
pop
pop
adc
dec
pusha
or
add
cmpb
je
scas
mov
adc
leave
cmc
xor
xchg
jp
popa
push
or
add
loopne
xchg
xor
jmp
cmp
xor
dec
mov
inc
mov
cmpsl
sbb
incl
arpl
daa
dec
pop
test
hlt
aaa
jmp
jle
mov
add
jne
push
adc
je
cld
stc
add
mov
or
popa
add
jg
mov
xchg
add
add
pop
xchg
sub
adc
jl
lea
dec
inc
push
in
push
or
mov
lahf
lock
jmp
clc
xorb
cs
ljmp
add
outsb
sbbb
pop
fwait
mov
inc
push
push
stos
pop
push
dec
jno
xor
pop
fcomps
aam
push
jo
sub
js
in
pop
cmp
push
jle
push
dec
or
add
dec
pusha
and
mov
cwtl
or
mov
jb
fisttpl
push
mov
dec
jl
add
ret
pushf
imul
push
rcll
xchg
in
ja
add
div
sti
rcl
push
dec
xchg
pop
adc
pop
mov
sbb
dec
jo
aad
shr
and
jns
sub
test
cmp
or
cwtl
add
into
data16
and
leave
dec
pop
lret
sub
xchg
mov
or
lahf
enter
nop
jno
inc
ds
push
add
push
inc
push
mov
pushl
push
xchg
mov
sbb
jns
pop
shlb
adc
pop
jmp
lock
cmp
cmp
inc
push
and
dec
adc
daa
xchg
pop
clc
decl
mov
pop
xor
cmp
pop
inc
mov
inc
sub
test
jno
xchg
push
xchg
adc
dec
jp
jne
xchg
inc
or
mov
mov
mov
cltd
nop
inc
cs
push
inc
push
pop
mov
cmp
cld
mov
insb
cltd
or
lea
dec
or
imul
lcall
sub
xor
pop
inc
popa
jge
pop
pop
flds
in
sub
xchg
mov
xchg
fildl
push
rolb
lods
div
aas
fstps
flds
flds
cmp
movzwl
jne
mov
daa
fmulp
sub
mov
popa
das
or
jg
push
sbb
sub
fmuls
push
test
aad
dec
inc
sbb
lret
push
aaa
sub
add
pop
rolb
je
xor
cmp
rol
add
mov
dec
inc
stos
outsl
inc
or
repz
lret
adc
fs
dec
mov
fsub
push
add
push
or
push
xor
pusha
push
or
xchg
clc
inc
addl
jp
je
jp
cmp
cmp
push
jg
ficoml
push
jle
jp
fadd
inc
jecxz
sub
or
cld
add
adcb
push
cmp
pop
push
bound
add
mov
jmp
fdiv
ret
cmp
pusha
call
lock
add
mov
adc
cmp
adc
ja
gs
into
pop
and
call
adc
push
and
push
ds
push
or
pop
mov
adc
dec
adc
lods
inc
lret
xor
pop
andl
mov
add
outsb
mov
push
call
insb
xor
sbb
push
icebp
jo
in
xor
es
pop
adc
cmp
aaa
roll
xchg
mov
sub
mov
les
push
insb
mov
test
push
xchg
ret
xlat
lcall
jg
ficompl
cmp
mov
dec
inc
ret
push
punpckhdq
pop
int3
lods
xor
mov
decl
xchg
divb
xchg
and
sahf
sbb
pop
je
push
out
jmp
or
stos
push
sub
push
jl
loopne
mov
enter
pop
push
jne
push
push
cld
mov
cmp
je
mov
sbbl
clc
inc
mov
fistpll
push
aam
fdivrl
jg
adc
pop
sbb
clc
js
add
mov
pop
jmp
xor
je
daa
and
pop
jg
push
inc
call
mov
les
cli
and
mov
shll
adc
rorl
hlt
cmp
sbb
popf
add
push
cmp
dec
clc
cmp
xor
lods
pop
dec
jecxz
ret
inc
push
push
push
mov
test
loop
inc
cmpl
mov
push
and
pop
xchg
sbb
add
adc
inc
hlt
mov
loopne
or
or
lea
fimuls
sub
push
mov
or
sbb
add
sub
xor
scas
imul
js
sarb
or
inc
adc
dec
movsl
inc
push
lock
jbe
loopne
mov
add
inc
clc
inc
or
rcrb
clc
xor
in
push
mov
imul
mov
add
and
jmp
pop
pusha
pop
sbb
gs
add
loopne
lea
push
divb
icebp
icebp
push
adc
daa
mov
fists
data16
push
in
or
adc
adc
imul
adc
adc
sub
fisubl
sbb
inc
jb
push
leave
stos
jmp
leave
and
push
jecxz
sub
mov
lock
js
sub
mov
jmp
stc
pop
xchg
mov
inc
dec
jno
mov
add
jp,pt
push
push
cmpsb
mov
and
push
insb
in
fdivl
in
pusha
in
jnp
lea
movsb
sti
incl
je
jmp
js
push
sbb
xlat
sub
popa
add
push
add
jle
cs
add
aad
sub
cltd
dec
sahf
stos
jns
adc
adc
imul
mov
push
inc
push
flds
addr16
adcb
sub
loop
xor
push
mov
inc
push
jb
dec
inc
adc
or
or
rorl
or
jmp
addl
and
inc
add
fisubs
pop
rcrb
sub
daa
adc
sub
lret
and
nop
inc
pop
pusha
sbb
and
pop
mov
mov
cmp
xor
sti
add
stos
mov
das
sbbl
icebp
add
out
pop
in
filds
es
lock
leave
adcl
mov
testl
in
push
lock
push
mov
movsl
lods
push
inc
out
push
inc
mov
rcll
add
push
push
icebp
cli
add
call
aam
mov
mov
cmp
inc
or
inc
mov
jg
add
subl
je
mov
insl
movsb
lock
jb
add
or
dec
lcall
push
mov
sub
jne
xor
sub
ja
add
sbb
shr
leave
std
push
inc
sub
fs
loopne
pop
push
dec
jb
repnz
sbb
sub
or
movsl
inc
inc
or
gs
nop
dec
pusha
data16
xchg
mov
movsl
inc
fsubrs
mov
sub
decl
jge
out
or
dec
add
inc
or
mov
or
fisubrs
pushf
cmpsb
movsb
sub
and
pop
mov
dec
xchg
inc
cmpsl
and
insl
inc
mov
ss
pop
push
lret
mov
sub
sahf
dec
mov
push
testl
inc
rcll
ja
push
sti
mov
adc
xchg
ret
rorl
stos
nop
add
stos
mov
fxch
fst
or
push
or
andb
pusha
mov
or
inc
dec
shr
imul
je
cmp
push
dec
outsl
ja
into
jae
push
repnz
push
std
xor
pop
lret
inc
bound
mov
clc
sub
mull
imul
push
mov
dec
add
sbb
push
dec
or
add
pop
mov
es
xchg
and
out
push
idivb
orb
or
push
dec
mov
jne
sub
test
test
imul
push
xor
mov
jmp
cmp
pop
add
rcl
push
mov
jg
aam
inc
mov
mov
sub
ljmp
loopne
cmp
sbb
mul
xor
jp
adc
insb
repnz
je
xchg
shlb
push
test
lahf
push
or
lahf
test
fs
test
je
pop
inc
aas
jbe
xchg
rorl
jns
or
mov
jmp
adc
andl
and
mov
insb
push
cmpsb
mov
add
call
xchg
sub
insb
or
push
adc
adc
add
mov
add
iret
lcallw
adc
inc
push
xor
loop
inc
pop
stos
push
jl
sub
push
pushl
daa
mov
ret
cmp
xchg
push
dec
sbb
push
pusha
movsl
jp
sbb
pop
cmp
daa
bound
je
sbb
pop
jbe
mov
add
add
dec
inc
or
or
in
data16
andl
lea
aaa
dec
aam
push
mov
lret
test
jge
add
shll
cwtl
sbb
int
push
dec
sub
repz
inc
xchg
stos
imul
or
xor
insb
mov
xor
add
sbb
inc
shr
push
inc
pop
cmp
mov
mov
mov
mov
test
xchg
je
sbbb
iret
cmp
mov
loop
test
dec
xor
leave
lock
cmpsb
imul
mov
mov
inc
nop
loope
xchg
sub
pop
daa
lods
and
scas
scas
dec
cli
test
sbb
jo
adcb
fwait
pop
push
loopne
sahf
cmp
push
xorb
mov
das
mov
insl
push
jmp
cmp
adc
cmp
adc
hlt
clc
sub
mov
lods
rcrb
pop
sub
sub
ds
push
inc
jl
and
sub
add
popl
jl
in
sub
sbb
xor
mov
clc
sub
pop
in
js
insb
mov
pop
stos
int3
xchg
sbbl
call
sbb
in
rcrb
lock
mov
in
por
pop
add
out
adc
clc
aas
adc
fidivl
ss
jp
nop
sbb
jo
subb
js
and
rcrb
or
cmp
faddl
bound
jno
jg
movl
cmp
xor
xchg
mov
or
jae
inc
add
push
jae
arpl
push
cmp
je
inc
or
push
or
fdivrl
jle
cmp
push
push
jmp
add
jecxz
cmp
ret
jnp
daa
mov
fildll
mov
fbstp
pop
or
pop
mov
xchg
pop
or
or
fidivs
pop
sbb
fcoml
mov
xchg
je
push
cmova
cmc
sahf
jne
sub
push
pop
stos
and
push
adcl
sub
sbb
or
fists
xchg
push
loope
out
inc
cmp
jmp
push
inc
call
xchg
rorb
dec
addr16
dec
inc
pop
push
fcoms
sub
push
loopne
aaa
cmp
sbb
sti
clc
shlb
sub
xor
add
subb
mov
cmp
sbb
jnp
jae
sbb
xchg
ret
sbb
out
fwait
sbb
dec
loopne
adc
les
or
lea
cmpsl
cwtl
mov
mov
je
int3
mov
or
or
jo
xchg
adc
add
mov
add
add
push
push
cltd
shr
cli
add
cmp
push
stos
mov
fstpt
pop
fisubrs
fwait
jae
mov
xacquire
sub
mov
loopne
sub
or
movsb
pop
jle
sbb
or
add
cmp
dec
shll
pusha
fs
shll
js
pop
lcall
mov
cld
andl
add
xor
fimuls
mov
inc
int3
in
fcmove
inc
mov
scas
shlb
push
and
pop
les
out
xchg
xchg
add
xchg
int
adc
add
sbb
mov
imul
add
fadds
sbb
or
sbb
add
nop
je
insb
sbb
pusha
stos
sbb
inc
push
lcall
aad
add
xor
rol
adc
or
mov
cmp
jne
adc
and
call
stos
cmp
jne
mov
and
push
push
xor
pop
cli
bound
pcmpeqw
mul
adc
mov
and
movsb
or
bound
pop
mov
sub
popa
add
fbld
jmp
cmp
sbb
and
sub
sbb
rcl
mov
or
psubsw
cli
push
ja
and
aam
add
je
sbb
jo
dec
mov
sbb
xor
xor
or
jae
addb
test
adc
inc
das
cld
out
mov
loop
test
in
repnz
or
add
dec
add
add
and
dec
mov
ljmp
add
and
add
or
xchg
pop
jne
lea
add
lods
pop
jns
or
adc
xor
push
repz
notb
in
or
ret
inc
sbb
xlat
gs
cmp
mov
adc
or
lret
in
or
adc
or
sahf
xchg
stc
incb
repnz
lahf
dec
dec
mov
iret
cmp
or
out
out
cltd
mov
xchg
mov
inc
xchg
sub
fnop
add
ret
roll
mov
mov
sub
mov
cmovns
stc
lock
cmp
js
stc
je
rcll
lock
jne
xor
jb
inc
xchg
ja
fwait
xchg
cmp
sub
xchg
or
add
pop
dec
sub
pop
call
add
outsl
arpl
push
cmp
div
fisttps
je
ret
adc
mov
or
lea
mov
dec
mov
add
push
lret
clc
or
cmp
jg
push
in
sub
cmp
adc
jmp
jnp
dec
xchg
sbb
mov
inc
pop
sbb
jp
pop
fildll
push
push
cmp
sub
add
popl
push
cmp
sti
xchg
add
inc
cmp
adc
out
popf
xor
push
or
or
push
mov
icebp
sti
adc
push
test
enter
inc
mov
add
insb
rolb
sub
push
xchg
pop
push
pushf
dec
pusha
xor
xchg
je
and
sbbb
push
imul
dec
out
scas
jo
jbe
push
sar
mov
and
pop
loope
mov
adc
xor
fwait
add
and
test
pop
dec
add
or
and
and
aaa
sbb
lods
in
sub
jnp
mov
je
fs
pop
pop
fs
pusha
inc
push
sbb
insb
insb
push
inc
loope
flds
aaa
clc
insb
in
inc
icebp
mov
icebp
xchg
mov
xor
mull
add
cmp
divb
mov
mov
bound
roll
xchg
repnz
je
xor
adc
mov
lock
push
sub
inc
pop
mov
push
xchg
jmp
lea
sub
out
dec
and
enter
sub
push
imul
lock
cs
dec
cs
lock
jmp
push
cmpsl
jbe
test
addb
push
adc
test
adc
sbb
loope
pop
dec
ss
out
adc
mov
jbe
mov
mov
add
push
mov
fnstsw
sub
lea
mov
sub
cs
inc
shll
cltd
push
sbb
fs
or
rorb
cmpsl
mov
xor
pop
jl
testb
ljmp
add
adc
and
mov
test
ja
pop
js
inc
mov
sarb
xlat
add
scas
fcoml
out
dec
je
leave
jle
push
sub
adc
xchg
data16
push
jge
data16
jo
popa
enter
add
xor
mov
mov
je
popa
pop
std
push
ret
pop
sub
jne
ja
mov
outsb
or
insb
xchg
call
or
xor
roll
pop
pushf
cwtl
fidivrs
lea
sub
push
test
sub
pusha
loopne
xchg
mov
fs
iret
in
push
cwtl
inc
cmp
dec
push
lea
xchg
add
aam
add
lea
lcall
push
or
sbb
mov
add
lods
add
adc
test
test
fcoms
cli
les
out
bound
mov
xchg
and
pop
and
popa
lock
movsb
int
fs
adc
mov
sub
vmaxsd
push
and
or
imul
loopne
std
mov
test
std
mov
xchg
inc
push
inc
jo
jbe
mov
and
lock
push
xchg
mov
andl
test
mov
add
sub
and
es
jg
adc
test
push
addb
push
lods
ret
pop
cmp
mov
pusha
pop
jne
push
add
inc
ljmp
mov
adc
and
or
fcompl
cmp
orl
sbb
and
push
pop
in
fdivs
jecxz
lock
icebp
or
adc
xchg
cltd
icebp
adc
in
cmp
loope,pt
mov
xchg
pop
pop
or
lret
stc
popa
and
mov
out
pop
jg
inc
mov
inc
adc
loop
dec
cmp
adc
nop
jecxz
loope
lcall
cltd
add
jmp
divl
push
cs
sbb
add
por
xor
push
mov
and
add
fmulp
sub
mov
jo
lret
pop
movsl
pop
sbb
cmc
pop
aam
in
mov
int3
mov
xchg
push
push
dec
pop
mov
movsl
add
idivb
je
mov
bound
push
sbb
dec
adc
out
jo
jno
push
push
cli
or
mov
aas
lcall
xchg
dec
mov
shl
test
aad
fiadds
mov
loope
pop
xor
jne
rorb
push
test
jae
int3
add
lods
pop
aas
pop
xchg
lock
testb
rcll
or
test
inc
inc
lcall
add
dec
jae
dec
push
sbb
je
or
and
or
adc
cmp
push
inc
push
je
repnz
push
sbb
or
cs
mov
jecxz
mov
push
sub
inc
sbb
inc
imul
pushf
ja
int3
pop
sub
jne
xchg
or
mov
or
js
filds
inc
lock
dec
insl
aas
dec
sbb
push
in
addl
andl
push
insb
mov
cmpl
cmp
aaa
js
push
sub
pop
add
mov
and
sbbb
cmp
or
sahf
cmp
adcl
jmp
pop
fcomps
mov
aaa
jle
push
sbb
xor
push
cmp
movsb
adc
xor
cmp
roll
and
dec
addb
pop
sub
lods
xor
clc
and
mov
roll
rclb
clc
xchg
aam
cs
pop
add
xor
pop
sub
mov
adcb
addb
jecxz
fcomi
sahf
dec
push
addl
add
mov
sbb
mov
pushw
push
jo
bound
push
mov
pop
cmp
cmpsl
push
imul
xchg
push
push
xor
test
adc
or
or
xchg
fdivrs
pop
movsb
xchg
mov
sub
mov
or
add
outsl
adc
push
std
cwtl
mov
xchg
fbld
roll
shrb
push
inc
into
sub
mov
aam
repnz
and
dec
jle
xor
or
and
adc
jge
sub
adc
je
add
cmpl
insl
inc
insb
js
mull
jo
sub
push
les
dec
dec
testl
addl
cwtl
es
push
test
xor
inc
xchg
int3
sbbl
andl
pop
mov
or
push
jno
xlat
lret
inc
outsb
jl
aas
mov
clc
sbb
inc
jmp
pushl
popf
or
iret
call
inc
lea
adc
jo
ss
hlt
sbb
push
push
lahf
jo
test
shlb
dec
sub
or
shr
aaa
push
inc
idivb
push
push
push
sbb
push
or
add
mov
jl
andl
aam
sbb
adc
pop
movsb
shlb
dec
pop
into
sahf
insb
sbb
inc
ret
xor
loopne
jecxz
lret
std
fistpll
jl
flds
lds
push
dec
outsb
mov
sbb
or
sahf
int3
xor
add
aad
cmp
jmp
push
test
iret
in
loope
loop
xchg
inc
mov
fsub
inc
mov
mov
push
mov
xor
loope
lods
jl
dec
cmp
and
jl
rorl
inc
sub
cmp
push
not
pop
lock
jmp
add
arpl
in
clc
mov
inc
push
inc
andb
js
call
xor
jg
fdivs
divb
lods
mov
add
sub
shr
pop
fstl
mul
insb
xchg
jp
mov
push
movb
xor
bound
test
add
jne
push
lods
jnp
lock
xor
add
or
lock
testb
shll
mov
fwait
add
jno
mov
cmp
sbb
xor
and
xor
xchg
push
sbb
xorb
xor
addb
mov
adc
jb
movl
stc
push
imul
pushf
mov
add
movsb
xor
aas
fstpl
mov
xor
xchg
and
cmp
sbb
inc
add
xchg
into
mov
add
pusha
and
add
sbb
mov
mov
out
xor
cmp
mov
test
std
add
sar
je
insb
aad
push
cltd
scas
xchg
push
cmp
fistps
jbe
jbe
add
mov
pusha
inc
pop
sub
xor
or
adc
add
mov
movhps
inc
les
mov
cmpl
push
pushf
push
inc
loop
sbb
and
enter
mov
and
cmp
and
fsubrl
nop
bound
pushf
sahf
neg
xchg
inc
xlat
adc
aad
mov
imul
stos
fcmovnu
neg
or
mov
shrb
call
xor
nop
lea
out
pop
mov
adc
ret
push
jo
jmp
imul
pop
sbb
push
push
pop
adc
ds
orb
idiv
sub
or
insb
mov
cwtl
push
mov
inc
add
cmp
sbb
jne
cmpb
xor
inc
out
cmp
mov
mov
pop
test
pushf
mov
cmpsb
jnp
xor
mov
add
pop
mov
xchg
and
sub
cmpsb
test
push
addl
sub
inc
cmc
faddl
mov
je
push
movsb
sub
je
mov
xor
add
adc
fisttpll
andl
loope
xchg
adc
pushl
inc
imul
outsl
inc
add
add
jl
cmp
into
add
xchg
movsb
mov
call
movl
xor
or
sarb
sub
add
cmp
push
pop
mov
test
inc
push
out
or
inc
push
push
in
cld
sbb
pop
and
mov
cmpsb
fsubl
mov
ret
push
sbb
mov
aam
cmp
pop
jae
inc
pop
push
ret
movsb
jb
ja
push
aas
add
fsubrs
dec
stc
orl
insb
and
mov
ret
sub
imull
dec
push
push
mov
inc
test
dec
insb
add
inc
xor
cmp
mov
sahf
xor
or
cs
xchg
dec
jge
adc
sbb
and
pop
cmp
cmp
fistps
andb
mov
pop
mov
xor
cs
cld
cmp
test
xor
jnp
lea
loop
movl
mov
push
sbb
sbb
mov
jnp
and
aas
xchg
or
inc
int
jbe
xlat
popf
enter
bswap
jne
loope
js
xchg
inc
cli
push
cld
mov
add
bound
iret
pop
call
movl
shr
inc
inc
jecxz
mov
sbb
mov
repnz
adc
dec
jl
repnz
sub
iret
jo
stos
pusha
insb
std
mov
decb
dec
dec
int3
adc
fucom
or
or
lcall
jb
jge
pop
mov
cmp
or
loopne
push
cmpsl
bound
clc
sahf
mov
adc
pushf
repnz
mov
push
add
pop
adc
sub
rcr
sbb
jne
add
jns
jmp
ljmp
or
sbb
dec
insb
or
pushf
adc
mov
int
cmp
inc
xchg
dec
push
cmpl
orb
lds
mov
adc
xor
lcall
adc
jge
jmp
mov
testb
out
movsl
addl
cmp
push
insb
sbb
pop
dec
jge
fimull
cmpb
bsf
fdivs
test
add
inc
mov
test
mov
pop
add
add
pop
adc
mov
pop
dec
sub
rolb
or
inc
or
jo
stos
das
mov
push
lret
push
push
sub
push
pop
fdivs
loope
add
push
lea
sbb
mov
loopne
sbb
inc
aaa
jbe
sub
mov
dec
sub
sarl
dec
sub
add
push
loopne
adc
push
jg
pusha
addl
ss
in
fs
xchg
or
mov
hlt
in
bound
cmp
dec
inc
loope
mov
lcall
push
sbb
mov
es
pop
or
jae
push
orb
jmp
xor
jg
arpl
mov
andb
orb
loop
cmp
stos
imul
adc
and
dec
jp
lea
loope
or
push
push
test
inc
push
mov
cwtl
scas
xchg
push
push
and
jge
push
clc
lret
pop
in
dec
or
pop
movsl
loopne
inc
fs
fs
les
fnstcw
sub
or
xorl
pusha
adc
sub
pop
hlt
dec
cld
xor
inc
jnp
sbb
sub
pop
test
pop
pop
stos
sbb
mov
stos
or
loopne
pop
test
pusha
je
lret
mov
setle
or
xchg
aam
or
or
fadds
mov
imul
cmpsb
mov
or
jo
sbb
or
cmp
ds
adc
fsubrp
add
and
cmp
sysret
inc
push
lret
add
popf
mov
mov
hlt
xchg
cltd
fnsave
shll
cmp
les
mov
testl
xchg
pop
nop
jle
xor
sub
aaa
push
dec
adc
int3
aam
and
rorl
xlat
ror
adc
mov
add
cmp
add
loope
dec
insb
dec
imul
jo
mov
push
mov
or
jae
push
push
rcrl
into
std
xchg
int3
jl
movl
xchg
pop
push
push
fmull
aas
pop
adc
into
add
xor
mov
dec
in
test
lea
sbb
mov
in
dec
mov
lods
or
mov
push
gs
es
aad
sub
and
push
testl
mov
iret
jae
fcmove
xor
mov
push
rolb
and
arpl
add
pop
xor
add
inc
and
dec
pop
inc
mov
lods
push
push
mov
lods
xlat
add
movsl
mov
mov
inc
or
sub
pusha
loopne
pop
aaa
adc
push
fchs
or
mov
sti
jo
sbb
sub
xor
shll
push
cmp
xchg
ret
mov
add
or
push
arpl
add
testl
int
inc
lret
push
xor
jo
lcall
or
scas
inc
push
push
in
cld
lods
sub
in
pop
dec
xchg
sbb
jbe
push
push
mov
in
rclb
cmp
push
les
dec
add
ret
div
mov
cmp
xchg
mov
and
in
int3
adcb
adc
ja
adc
data16
adc
outsl
cmp
arpl
sbb
mov
sti
dec
ja
je
or
je
or
jle
sub
sub
xchg
scas
add
jno
sbb
cmp
or
add
sub
sbb
lcall
mov
mov
outsb
cmp
rclb
adc
adc
xchg
cmpsb
push
cmp
loopne
cmc
push
inc
add
cmpsl
pop
sbb
sti
scas
movzwl
or
jbe
enter
inc
jmp
sbb
mov
es
lahf
orb
mov
ss
gs
push
dec
sti
adc
je
shlb
add
or
add
sti
or
adc
leave
test
lock
loope
shrb
add
and
mov
adc
lea
push
mov
stos
dec
or
and
imull
mov
andl
push
xor
push
adc
add
jo
xor
lahf
ficoml
xor
test
xor
pop
daa
or
push
adc
sub
pop
sub
jno
outsb
pop
cwtl
insb
ds
in
xchg
mov
pop
arpl
add
ja
adc
xchg
push
jp
outsb
testl
and
push
cltd
or
or
cs
add
cld
pushf
aam
push
sets
pop
insb
loope
or
rcll
and
sub
sbb
and
pop
fcoml
bound
sbb
sti
je
sbb
dec
and
add
xchg
or
inc
popf
fisubs
jecxz
add
push
movb
inc
xchg
or
dec
sub
or
sbb
in
push
push
add
pop
leave
push
ret
fimuls
xor
sbb
xchg
pop
call
jecxz
push
mov
xchg
fdivrl
push
gs
and
pop
add
out
lds
push
dec
out
pop
pop
inc
notl
les
and
or
xchg
or
cltd
mov
inc
enter
fists
pushf
dec
mov
rcrb
icebp
dec
and
movsb
aam
push
lock
repz
push
xor
sbb
call
push
fsub
outsl
sub
cmp
pop
jge
scas
push
leave
dec
das
sbb
mov
adc
and
out
mov
fcoml
in
cmpsb
movsb
cmp
pop
and
in
movsb
imul
push
int3
aam
cmpsb
mov
aas
mov
sbb
sub
outsl
add
fisttpll
push
pop
mov
push
mov
inc
je
jl
push
out
leave
push
adc
jmp
sbb
ret
pop
test
rcll
push
xchg
aam
add
addr16
fisubl
mov
sbb
inc
dec
mov
scas
cs
add
mov
fidivrs
xchg
mov
adc
or
xor
sbb
jmp
xor
movsb
popf
das
xchg
or
jmp
jle
inc
inc
xchg
mov
or
loopne
sbb
sub
dec
pop
popa
push
sbb
push
xor
ret
sub
les
push
pop
mov
outsb
push
xor
xchg
and
push
mov
icebp
cs
mov
les
inc
mov
mov
adcl
or
cwtl
ficoml
jle
or
sbb
adcl
in
sbb
in
cmp
pop
inc
cmpsb
ror
nop
into
push
sub
add
out
mov
jecxz
rol
fcoms
push
push
mov
cwtl
ja
fsubs
leave
and
loopne
sub
es
inc
and
je
and
pop
or
imul
mov
xor
pop
add
sti
jns
fldl
add
or
mov
add
out
adc
mov
sbb
sbb
cmp
aaa
je
and
cmp
xchg
add
xor
or
push
push
xchg
mov
add
lret
imul
stos
inc
adcl
aad
dec
movsb
loope
add
add
sahf
ret
add
jg
cmp
fmull
int
call
xor
push
in
add
mov
mov
pushf
add
xor
dec
pop
incl
inc
popa
cld
add
mov
decl
loopne
xor
lcall
lock
dec
mov
das
out
xchg
jle
into
pop
jp
divb
xorb
xchg
push
rorb
hlt
or
lods
lea
shlb
xor
test
adc
dec
pushf
loopne
adc
mov
or
push
sahf
adc
js
push
pop
jl
add
or
adc
inc
adc
pop
cmpl
dec
xor
sub
cmp
adc
push
xchg
push
add
or
or
loopne
inc
movb
push
xor
jg
jae
mov
mov
cmp
filds
aas
mov
insl
cmp
pop
inc
addr16
mov
stc
or
sbb
or
jg
mov
cmp
or
mov
sti
adc
cmp
or
lret
test
add
in
or
or
insb
fildl
mov
mov
cs
sub
jp
mov
ja
jo
pop
ds
movsb
jns
es
or
dec
cmp
orb
lock
out
dec
or
clc
lock
sarb
sbb
pusha
mov
and
xchg
rcrl
push
inc
adc
rorb
add
add
in
add
pop
xor
out
jecxz
aad
pop
cmp
xchg
and
fsubs
mov
adc
pop
push
movsl
jle
or
pop
outsb
xor
sbbl
cmp
sbb
mov
aaa
rolb
inc
adc
aad
cwtl
sbb
sub
push
adc
into
add
xor
jle
jb
stos
hlt
mov
les
je
mov
mov
in
iret
mov
ss
push
jo
fcmovb
adc
pop
sbb
dec
mov
push
push
test
mov
rclb
mov
push
loope
sub
xor
push
sub
mov
idivb
or
or
and
sub
sbb
es
sbb
stc
icebp
cmp
fisubrs
push
test
xchg
outsb
mov
aaa
stos
arpl
ds
xor
mov
push
je
pop
les
pop
pusha
je
cli
mov
mov
mov
fadds
shrl
fsts
adc
pusha
fs
jnp
add
add
pop
mov
pop
sub
jns,pn
mov
cmpsl
push
fcoms
rolb
sbb
and
add
and
test
nop
pop
dec
dec
dec
cli
add
in
outsb
jg
pop
je
or
push
cmp
inc
test
and
push
or
movsb
and
sbb
cld
mov
bound
repnz
and
lcall
sub
inc
or
in
fs
pop
jmp
push
sub
adc
fiadds
mov
mov
cmp
es
inc
movsl
movsl
cmp
push
mov
sbb
mov
aas
lea
jmp
fisubrs
stc
sti
inc
imul
les
inc
imul
clc
push
cld
push
sbb
or
repz
addr16
call
in
adc
scas
add
adc
xchg
test
arpl
dec
push
pop
popa
xchg
test
sbb
cmp
and
mov
sbb
sbb
cwtl
mov
sahf
out
iret
mov
je
dec
out
add
push
add
and
sbb
mov
sahf
ffree
xor
pusha
sbb
sub
dec
and
mov
push
sbb
push
daa
jl
or
and
nop
jl
lahf
xchg
or
and
stc
enter
and
push
in
push
sub
mov
aaa
inc
pop
push
sub
clc
or
xor
cmc
ja
fdivrl
pop
add
or
push
leave
mov
in
adc
add
xor
pop
push
lods
iret
adc
cmp
sub
mov
adc
dec
cmp
cmp
mov
sub
push
loopne
cmp
or
nop
sub
cwtl
inc
fwait
in
jns
inc
xchg
or
mov
cwtl
inc
mov
sub
jo
mov
mov
add
and
dec
dec
ds
in
push
mov
ljmp
push
lock
sub
mov
pusha
jl
add
clc
rol
int
mov
mov
add
cmpsl
xchg
addl
adc
jae
stos
pop
test
repnz
mov
xchg
pop
or
test
loope
ret
dec
in
adc
outsl
shr
pcmpeqw
mov
dec
adc
push
test
add
add
int3
mov
xor
fistpl
sbb
shlb
pop
jmp
pushl
sub
push
mov
and
pop
arpl
js
dec
insb
pop
lret
dec
loopne
and
lock
xchg
push
js
mov
mov
clc
iret
push
sbb
pop
push
movsl
loopne
sub
sub
adc
push
stc
fdivr
sbb
add
push
sbb
testb
sub
cmp
fmuls
testl
mov
jae
loopne
gs
push
orl
rolb
je
out
jl
jecxz
imul
and
icebp
loopne
filds
in
push
in
jb
adc
in
push
mov
call
add
cmpsl
cltd
cmp
testb
cmpsb
add
cmp
ret
addb
jp
sub
leave
xchg
fdivp
or
arpl
push
xor
ret
xorl
add
xor
and
xor
call
mov
lock
add
insb
rorb
or
aad
daa
sub
mov
daa
sbb
push
pop
dec
inc
sahf
sbb
xor
jne
xchg
mov
sbb
loopne
dec
orb
lcall
int3
or
jne
pop
ja
mov
mov
roll
lock
mov
into
aam
and
cli
jecxz
test
sbb
sti
mov
cmpsl
push
jo
jbe
inc
mov
lret
in
push
insl
aam
dec
xor
rcrb
mov
sbbl
sbb
xor
fucomi
int
mov
or
xchg
mov
push
int3
mov
cmp
sbb
jge
or
in
inc
adc
stos
and
mov
xor
mov
cmpsb
xchg
add
pop
and
jb
adc
dec
jg
mov
push
add
jae
mov
and
jl
cmp
xchg
jnp
jae
repz
mov
xchg
xchg
and
out
cmp
jne
pop
adc
sub
je
hlt
pop
adc
scas
sub
mov
mov
xchg
hlt
ret
add
stos
inc
jmp
shll
imul
loopne
mov
push
or
or
add
hlt
loopne
jl
repnz
push
inc
xchg
mov
addl
lock
xchg
jg
ret
mov
sbb
fadds
sbb
sahf
or
movsb
xlat
add
mov
loope
or
sbb
aad
rolb
out
cwtl
and
xchg
cmp
movsl
fs
dec
or
add
dec
aas
subl
dec
repz
and
cld
loopne
orl
adc
lock
jb
sbb
fildl
movsl
int3
xchg
lahf
rcrb
lods
mov
loopne
fcompl
add
xchg
pop
sub
shrl
add
ljmp
inc
leave
test
sbb
pop
aas
inc
or
ja
pop
cmpsl
test
imul
data16
stos
movsl
sarb
lea
jle
xchg
xor
push
adc
sub
fs
dec
lcall
xor
mov
lea
or
or
cmpsl
pusha
lock
jns
add
push
xorb
cmp
cld
jecxz
add
scas
ret
push
or
mov
cltd
out
das
cmp
jbe
mov
mov
or
push
lds
minps
fwait
and
or
pop
iret
cmp
pusha
jb
push
popa
aam
sub
or
movsl
imul
inc
pop
mov
and
aaa
test
dec
xchg
sub
cmpsb
dec
cltd
mov
and
pop
dec
or
test
inc
xchg
inc
inc
pop
push
mov
enter
push
mov
dec
stc
add
test
dec
cli
idiv
cmp
pop
push
cmp
jo
add
mov
jae
sub
cmp
push
sbb
push
pop
js
shlb
mov
leave
inc
mov
or
and
or
lods
jge
inc
jns
dec
and
in
pop
mov
pop
shlb
iret
mov
or
mov
pusha
fwait
adc
push
cmp
pop
add
inc
cmp
add
or
adc
sbb
xor
xlat
push
push
push
add
adc
or
or
inc
push
cmp
jp
fidivl
cmp
cmp
fwait
sbb
sti
lret
xor
inc
jmp
xor
pop
aaa
push
sar
filds
das
push
push
push
fwait
loopne
shl
pop
mov
inc
adcb
into
mov
mov
add
fildll
add
loop
mov
sbb
and
cwtl
sub
dec
jle
clc
cmp
jle
push
jb
inc
adc
fsts
push
idivl
xor
mov
add
mov
mov
loopne
test
andb
inc
or
push
sub
cmp
inc
call
add
and
xchg
inc
jle
push
out
fs
add
cs
and
clc
inc
fistpl
or
mov
aas
mov
inc
cs
add
addb
cmp
or
push
jb
inc
outsb
test
lea
mov
push
pop
ror
in
test
push
adc
xor
sbb
mov
movl
mov
xor
add
xor
xor
jecxz
xchg
test
in
fs
mov
mov
cmovp
test
hlt
js
xchg
inc
adc
test
add
sysret
ja
call
ret
gs
imul
dec
push
dec
lods
sbb
sub
rorb
fnstsw
shrd
or
add
shlb
pop
lods
jnp
lret
mov
fisubrl
adc
pop
jbe
cmp
adc
mov
movsl
inc
jg
xor
push
mov
sbb
icebp
mov
sub
movsb
add
sub
mov
cmp
mov
dec
fdivr
pop
add
add
and
or
sub
push
imul
ret
or
lea
push
sub
add
rep
mov
push
xchg
test
scas
push
push
jo
into
xor
push
filds
lret
cld
aas
pop
and
mov
push
sbb
sbb
aad
test
mov
daa
jge
sub
inc
adc
adc
mov
das
popa
pushl
ret
jbe
ret
xor
ret
push
clc
jb
or
js
sub
sbb
xor
adc
jne
adc
or
scas
test
push
mov
enter
adc
xor
nop
test
lret
mov
sbb
sbb
lods
xchg
shlb
push
mov
dec
xor
push
push
and
pop
popf
mov
lock
loop
pop
or
adc
lods
lods
cmp
or
or
or
stos
jb
add
rcr
adc
mov
mov
pop
or
jl
push
clc
sti
add
and
push
std
ljmp
fisubrs
loop
call
clc
scas
pusha
fnstsw
insb
dec
inc
sbb
sbb
xchg
repz
inc
and
pusha
outsb
sub
lea
ret
fsubrs
push
jp
jmp
pop
sarb
cmp
aas
test
dec
ret
test
pop
aaa
fdiv
fstps
stos
cmpsb
imul
dec
or
imulb
lods
xchg
sarb
icebp
rorl
dec
or
push
clc
pop
loopne
add
cmp
push
dec
push
cld
push
xor
scas
xor
sub
sbb
inc
je
xchg
inc
test
mov
sbb
popf
xchg
mov
cltd
push
int
sbb
pushf
lock
shl
sbb
sbb
test
sbb
sub
rorl
cmp
stos
fsubrs
mov
test
push
xor
jg
push
cmp
ljmp
scas
mov
sub
mov
jb
push
lcall
jge
mov
dec
outsl
cwtl
jle
dec
add
jmp
sbb
push
popf
mov
sbbl
shll
cmp
outsb
gs
xor
jl
jb
mov
lcall
xchg
add
sub
mov
je
das
das
mov
sub
xor
xor
xchg
xchg
xchg
mov
test
les
loopne
int3
xchg
cld
dec
dec
sub
movl
jge
or
sbb
xor
jge
sbb
add
arpl
add
popf
loopne
lods
push
inc
movsl
sub
pop
sahf
mov
adc
and
dec
xchg
jno
ljmp
push
xchg
cmpb
lods
fimuls
cltd
add
adc
mov
and
outsl
add
adc
sub
push
rclb
inc
stc
popa
and
pop
jnp
mov
sub
icebp
pop
or
fisttpll
lds
adc
insl
inc
push
mov
xor
scas
inc
pop
js
pop
or
mov
cmpsl
or
or
xor
inc
sbb
inc
jno
insb
mov
push
inc
mov
inc
lea
arpl
xorl
and
inc
adcl
inc
icebp
ret
push
cmp
outsb
push
cmp
cmp
jae
cmp
adc
in
ja
pusha
in
lahf
adc
cmp
test
jno
dec
sub
dec
pop
adc
or
adc
sub
mov
jbe
enter
jne
pop
cmp
adc
mov
sub
inc
fisttpll
push
mov
pop
das
sti
rep
dec
jnp
fwait
bound
sub
dec
outsl
aaa
or
sbb
cmp
jae
shl
and
aam
roll
bound
arpl
lock
and
jne
push
push
push
cmpsb
xchg
and
cmpsb
xlat
ljmp
mul
dec
adc
pop
fistl
data16
inc
sub
dec
inc
sbb
int3
adc
sub
and
sub
in
xor
push
loopne
mov
xchg
mulb
xor
jbe
jle
mov
mov
push
daa
inc
clc
jnp
jle
rcr
jge
jne
sub
test
xor
xor
movsb
dec
push
push
ficoml
ret
add
jns
inc
sub
push
jp
hlt
push
clc
push
mov
add
pop
dec
add
sub
mov
adc
call
pop
cmpxchg
xor
xchg
or
push
mov
andb
sub
add
cli
and
and
sti
dec
mov
pop
mov
mov
rcrb
clc
pop
das
xor
add
sbb
add
jnp
dec
les
push
mov
addr16
dec
pop
lea
mov
push
sbb
mov
call
dec
inc
add
push
mov
orb
mov
pop
adc
mov
outsl
xchg
sti
inc
dec
bound
jno
incl
test
mov
sahf
mov
dec
rclb
or
cmp
adc
xlat
mov
adc
arpl
daa
jmp
push
and
add
or
bound
lods
mov
push
lock
stos
cmp
and
sarb
dec
jne
push
push
fmuls
loopne
mov
lods
wrmsr
sub
in
add
bnd
pusha
sub
add
push
mov
adc
rorb
xchg
jo
cli
sub
mov
push
push
aas
jl
fistpll
jge
adc
hlt
mov
dec
sbb
or
rcrl
adc
jl
subb
gs
or
out
into
lea
or
pop
xchg
pop
subb
sub
sbb
pop
sub
or
addl
sbb
les
notb
bound
or
push
mov
into
call
aad
out
scas
mov
adc
xchg
in
mov
pop
mov
imul
mov
push
loop
data16
adc
push
add
dec
xchg
jge
shrb
and
or
popf
jbe
xchg
jns
movb
imul
sub
mov
ljmp
lahf
sub
push
add
jb
pushf
stos
sbb
mov
add
jp
insl
insl
push
adc
push
dec
lds
rcrl
pop
hlt
inc
mov
xorl
and
adc
mov
xchg
or
pop
sbb
aas
outsb
cmp
je
push
shll
or
cli
faddp
pop
ljmp
rol
add
clc
jbe
or
add
pusha
xchg
lret
dec
dec
cmp
inc
mov
sbb
push
jle
in
and
faddl
rorb
or
cmp
movsb
sahf
add
sbb
pop
add
les
push
and
nop
push
fcomp
pop
insb
and
and
ja
lea
mov
xchg
subl
inc
jmp
inc
loope
cmp
jb
pop
pusha
movsl
loopne
into
shlb
jmp
aad
gs
jl
pop
test
mov
and
dec
xchg
aad
mov
imul
sbb
or
push
test
cmp
mov
sbb
inc
shll
mov
repz
sub
popf
or
inc
arpl
xchg
sbb
stos
add
adc
call
pop
fwait
mov
or
xor
mov
adc
mov
testb
pop
sbb
mov
shrl
arpl
dec
add
aas
aad
mov
cwtl
outsb
sar
lea
jp
nop
in
pop
cmp
dec
rol
push
cmp
jb
pushl
jo
dec
adc
js
clc
push
pop
jmp
xor
jae
cmp
add
xchg
and
bound
jecxz
lret
rol
adc
xor
inc
fwait
add
mov
enter
inc
std
icebp
or
sub
fwait
mov
shll
pop
inc
popa
rclb
addr16
xchg
dec
es
mov
jns
mov
dec
icebp
xchg
push
mov
mov
inc
dec
xchg
pop
add
dec
ljmp
add
and
mov
enter
stos
imul
sbb
mov
xchg
jg
jp
jae
pop
pop
pop
mov
sub
cmp
pop
ss
pop
out
add
dec
pop
jmp
mov
add
inc
xchg
and
out
or
imul
mov
test
mov
and
mov
cmp
sbb
daa
or
sbb
in
sub
and
push
cmp
daa
shlb
mov
cmp
in
fucomi
arpl
jb
mov
ja
adc
fistl
or
fistl
sbb
pop
dec
or
push
fsubl
fstp
sbb
jmp
adc
fsubs
xchg
and
adc
sub
inc
outsb
daa
pop
mov
icebp
movl
xor
sarb
int3
add
nop
mov
nop
cmp
prefetcht1
mov
shrb
pop
fs
xor
lea
lock
sub
ss
cmp
push
mov
fiadds
mov
aas
and
nop
inc
cmp
nop
inc
push
nop
push
and
inc
push
and
and
lods
es
inc
push
nop
mov
inc
push
daa
adc
sub
pop
enter
enter
jo
mov
das
jmp
push
jb
xor
mov
in
push
cld
js
std
insb
xor
or
xor
mov
mov
shrb
sbb
dec
arpl
push
or
fcmovnu
mov
cmp
or
cltd
and
out
pusha
push
fs
sub
add
adc
adc
adc
add
sbb
sbb
inc
sbb
adc
pop
dec
inc
pop
scas
fldt
cld
imul
add
popf
nop
mov
sbb
daa
or
push
push
lret
add
jo
xor
push
or
sahf
sub
add
adc
mov
fldz
push
test
mov
xor
sar
ja
ja
adc
xor
shll
loop
loop
lds
adc
xor
xorb
scas
test
mov
dec
push
add
shl
in
xor
or
or
mov
pop
mov
imul
daa
rorb
mov
push
sbb
stos
outsb
pusha
cwtl
adc
data16
sub
sbb
jb
cwtl
or
or
push
pop
adc
roll
fyl2x
or
insb
movaps
mov
std
lock
ltr
mov
or
pop
pop
mov
lock
add
push
jns
push
es
jae
lcall
push
lock
or
cmp
jle
es
das
out
je
xlat
stos
pop
sbb
or
xorl
sbb
cmp
dec
mov
or
mov
cmp
sbb
add
mov
iret
jae
call
movsl
sub
inc
fbstp
xor
call
and
test
cmp
dec
mov
insb
add
hlt
xchg
mov
adc
jge
push
call
jae
outsb
es
orl
scas
mov
or
add
cmp
lds
jmp
cmp
cmp
adc
jno
es
mov
lock
in
mov
jno
rolb
lock
shrb
adc
and
dec
cmp
jg
cmp
or
push
push
int
and
dec
cs
or
enter
dec
stos
icebp
test
dec
outsl
adc
sub
and
pop
in
call
and
loopne
rorl
mov
jno
and
sub
xor
jo
pop
jmp
cmp
lahf
test
inc
or
inc
push
push
and
or
push
outsl
sub
out
dec
mov
insb
jne
mov
mov
repz
sbb
pop
test
cli
test
xchg
xchg
lret
push
push
xor
jge
or
jp
or
or
in
sub
adc
or
xorl
lods
movsl
add
cld
sub
jmp
les
nop
mov
stc
data16
imul
loopne
popa
sub
fiadds
mov
pop
in
enter
andl
xor
dec
jmp
push
addr16
xor
xor
push
xchg
inc
hlt
inc
jmp
fidivrs
or
frstor
loopne
fdivrs
repnz
cmp
hlt
add
cld
cmp
cltd
stos
and
lock
pop
xchg
cmp
adcb
jmp
aaa
and
or
jmp
xor
sbb
aad
push
lock
or
adc
mov
loop
rcrl
faddp
repz
mov
jle
push
mov
cmp
jl
jae
std
cmp
jle
cmp
push
jp
or
pop
inc
cmp
aas
lods
jecxz
roll
inc
pop
cmp
test
jge
mov
pop
and
in
out
sbb
xor
je
cmp
je
push
inc
clc
js
pop
andb
lods
and
add
dec
iret
pop
dec
rorb
leave
cs
xor
fcomps
mov
ret
jl
nop
sub
add
and
sarb
adcl
ret
dec
lds
or
adc
jp
mov
dec
cltd
inc
mov
sbb
lret
push
mov
test
jmp
push
fs
mov
or
jge
xchg
pushl
mov
rorl
loop
movl
adc
mov
adc
pop
xor
imul
and
push
mov
inc
add
pop
jmp
sub
lock
orb
sub
into
sub
scas
mov
mov
dec
mov
or
rolb
inc
out
add
into
pop
xchg
cmp
loopne
mov
sub
mov
jne
jbe
jle
js
fldl
xor
dec
sbb
incl
mov
outsb
xor
sub
cmp
fwait
push
dec
js
fcomp
push
adc
sub
push
or
sub
mov
es
sbb
add
cltd
or
loopne
insl
call
jmp
pop
dec
pop
sbb
mov
aas
pop
insb
sbb
leave
fcomps
xchg
lea
mov
fisubrl
aas
js
sub
mov
popl
jnp
int3
push
inc
in
ja
addb
xchg
je
sub
mov
or
dec
or
mov
add
dec
inc
xor
mov
jnp
or
sbb
fcomps
cwtl
add
into
out
mov
push
or
push
pop
push
pop
js
pop
pusha
fs
or
sti
inc
add
sbb
push
mov
mov
sub
lea
sub
sub
adc
inc
in
decb
sbb
fs
jge
add
adc
out
dec
adc
dec
je
out
ror
adc
es
adc
jp
xor
or
outsb
sarb
and
cmp
and
inc
or
ret
add
pop
sahf
sub
lea
je
je
xor
aam
push
imul
popa
loop
rclb
ret
addb
xor
cmp
inc
pusha
jle
and
xorb
jno
xchg
add
or
fcmovnb
rcll
ret
xchg
push
add
lea
pusha
pop
cmp
sbb
adc
add
adcl
cld
dec
shl
jbe
jmp
push
lsl
lock
jmp
sub
push
mov
rcl
rcrb
add
lret
loopne
push
loope
mov
sub
cmp
dec
pop
fucomi
jae
and
cmp
push
push
test
jmp
mov
push
ss
inc
out
push
insb
mov
out
pop
fs
dec
or
jmp
out
mov
and
jmp
sub
hlt
push
xor
add
cs
sbb
test
and
jo
push
fisttpl
insl
or
mov
icebp
fwait
movb
shll
fsubrl
test
in
movb
cld
dec
testb
movsb
pop
outsl
cmp
jecxz
add
adc
scas
inc
or
mov
mov
test
je
push
aaa
mov
or
je
cmp
mov
lfs
and
pop
push
out
sahf
or
arpl
pop
jle
test
incb
xor
inc
mov
xchg
cmp
jne
xor
and
mov
fs
push
jle
test
pop
pop
dec
add
and
jne
leave
in
dec
lcall
movsb
or
push
push
outsb
sub
inc
repnz
mov
sub
add
mov
mull
adc
inc
es
or
shl
pusha
fs
inc
into
addb
lock
lahf
push
lods
add
pop
les
xchg
pushl
or
sbbb
jmp
and
repz
cltd
iret
cmc
imul
sbb
xor
sub
xor
cltd
add
cmp
shll
and
shl
scas
arpl
push
insb
jmp
aad
mov
or
ja
adcl
mov
ljmp
addl
adc
mov
divb
fsubl
cmp
cmpb
fildll
pop
or
pop
add
enter
sub
inc
jo
push
ds
or
add
push
lea
push
les
inc
loopne
sti
push
nop
clc
xchg
mov
inc
mov
test
repz
movsl
sbb
test
fbstp
push
ret
std
hlt
jg
mov
sub
iret
cs
rorl
pop
pusha
add
jmp
add
ret
push
ret
orps
jb
loope
sbb
in
in
xor
loopne
adc
xor
and
test
sbb
sub
lea
push
lret
and
pusha
pop
push
inc
mov
ret
push
sbb
mov
cmp
lods
cmp
push
push
ja
mov
pop
pop
lock
inc
inc
or
mov
imul
stos
pop
sbb
xchg
sub
or
jns
jb
loopne
sbb
outsl
jge
js
adc
dec
idivb
pop
add
add
or
mov
pop
xchg
mov
rol
rorb
jmp
jmp
adc
std
mov
pop
mov
jle
ja
mov
add
push
mov
push
xchg
adc
ret
arpl
jl
pop
and
adc
ret
jmp
sub
xchg
jae
dec
mul
les
jle
cmp
pop
mov
sub
mov
pushf
xchg
pop
jmp
add
dec
push
lea
call
pop
ret
test
mov
or
mov
sub
push
mov
ficoms
adc
loopne
fwait
shr
jmp
in
cmpsl
sub
pop
jb
inc
xor
or
repnz
xchg
js
dec
sbb
or
sbb
mov
test
je
pop
xchg
test
or
dec
and
sub
movsb
push
sar
and
pushf
dec
test
dec
pop
inc
pushf
pop
mov
add
and
cmp
add
sub
call
adc
fsubrs
mov
fldl
lock
out
rcll
fstpl
dec
in
ss
data16
insl
mov
inc
jne
adc
adc
jne
sahf
lahf
out
push
divb
or
jne
or
jns
cli
jne
or
scas
leave
std
shll
int3
push
fldz
into
fstpl
andl
inc
or
aam
fwait
inc
repnz
imul
fdivr
jge
faddl
cmp
or
clc
sbb
push
pop
and
mov
mov
test
lea
fstl
jecxz
aaa
jo
push
scas
mov
clc
xchg
adc
movsl
lea
movsl
push
out
cld
and
fsts
insb
jl
mov
inc
cmp
xchg
imulb
inc
jae
jnp
xchg
mov
out
ficomps
xchg
sub
adc
or
aam
lods
pusha
mov
test
adc
test
add
aam
cmp
pop
cmp
inc
in
out
fstl
or
fimuls
sti
movsl
jno
movsl
or
and
xor
nop
inc
sbb
jnp
sub
mov
and
pop
push
loopne
or
mov
pop
or
or
add
push
sbb
xchg
popf
movsb
xor
mov
fcmove
dec
and
add
and
push
mov
push
imul
sbbb
lock
stos
lcall
push
pop
push
dec
add
popf
js
jp
cmp
inc
and
aam
outsb
inc
jecxz
repz
jmp
or
or
test
mov
popa
in
pop
stc
add
loope
adc
inc
adc
fnstenv
test
adc
pop
in
add
xor
or
mov
xchg
call
dec
pop
or
jecxz
lods
addl
js
push
mov
push
hlt
jae
or
add
push
cmp
test
adc
popa
rorb
sub
mull
adc
imul
xchg
lods
push
jle
pop
add
pop
pusha
mov
add
nop
xchg
push
imul
jns
std
push
xor
cltd
cltd
bound
add
jns
ss
faddl
inc
shrb
push
mov
les
gs
pop
and
or
fisttpll
lcall
adc
jns
dec
enter
fmuls
adc
jns
or
pop
inc
jo
bound
xchg
loopne
sbb
rcr
imul
mov
adc
shrb
andl
cmp
cmp
sarb
mov
fcomps
cmp
adc
leave
mov
aas
mov
pop
mov
in
outsb
lcall
sub
sbb
popa
test
push
pop
cmpb
movsb
inc
test
lock
mov
inc
pop
orl
xor
jecxz
pusha
or
ret
fidivrs
push
ret
jle
sbb
lahf
ficoml
xlat
add
push
xchg
ss
add
fsubs
push
adc
jle
mov
add
call
cmp
mov
add
push
cs
data16
rolb
mov
jbe
leave
fistpl
shl
cmp
jl
ficomps
xor
jge
into
cmpsl
pop
sbb
inc
xchg
xor
sbb
lret
push
loope
rol
imul
cmp
daa
add
add
cmp
ud2
sarl
cmpsb
leave
xor
push
fstl
jp
mov
xor
call
or
movsb
inc
inc
aas
or
pop
in
push
push
repz
jecxz
in
adc
add
add
mov
push
cmc
push
les
test
push
rep
dec
jb
cmp
stos
call
dec
add
rcll
arpl
adcl
hlt
mov
or
ret
pop
outsl
cmp
push
aas
xor
mov
sahf
mov
xchg
inc
dec
inc
loopne
xchg
xchg
adc
xchg
adc
jne
xor
jnp
ret
xor
cmp
inc
notb
sbb
arpl
jl
mov
lahf
dec
movsb
mov
call
out
jno
xlat
rolb
imul
push
sub
sub
add
insb
sub
int3
es
loope
mov
add
pop
jle
pop
shr
push
popf
add
lcall
int3
inc
push
shll
cmpsl
mov
or
dec
inc
jmp
and
cltd
jne
test
mov
jno
dec
imul
adc
xchg
and
fs
das
and
push
inc
cs
mov
sbb
scas
out
jno
int3
adc
pop
sti
daa
scas
shlb
fsubs
dec
dec
cmc
popa
imul
mov
jecxz
push
movsl
or
inc
cvtps2pi
mov
fwait
jae
add
sbb
sub
sysret
imul
inc
or
xor
divl
jp
mov
jg
adc
enter
mov
lea
sub
lock
lcall
int3
mov
int3
cld
outsb
cmp
sbb
push
pop
iret
pop
xchg
rolb
loopne
test
pop
dec
clc
fldl
ja
outsb
dec
clc
inc
enter
inc
or
dec
rorb
loopne
inc
addb
mov
pushf
mov
jno
rclb
or
and
jmp
or
lods
outsl
dec
adc
add
adc
or
icebp
pop
mov
scas
push
jle
and
ret
inc
pop
push
cmpsl
xchg
jmp
rcr
mov
add
fsubs
mov
xchg
imul
or
push
or
pop
inc
add
add
push
push
stos
adc
jnp
jae
cmp
fisttpll
add
fwait
ret
lahf
cmp
lea
push
inc
pop
xchg
lods
leave
jne
cmp
push
inc
adc
pop
mov
ret
xchg
sub
imul
add
lahf
add
pop
inc
adc
xchg
sub
sub
mov
or
aad
pop
mov
inc
out
movsl
adcl
cmpsl
lahf
imul
xor
mov
test
into
fldt
mov
mov
je,pt
lock
out
mov
mov
mov
les
pop
push
xchg
jae
add
pop
add
arpl
mov
adc
adc
cmp
out
add
in
adc
add
pop
test
or
sbb
add
jp
xorb
mov
nop
lds
inc
inc
pop
cmp
push
int
cs
xchg
test
or
pop
or
mov
sbb
cmp
and
and
shrl
negb
sbb
popa
pop
aaa
jo
notb
inc
fisubs
add
or
mov
test
mov
mov
and
push
mov
insl
or
fcmovu
pop
fdivrs
sti
jl
jmp
aaa
or
add
movb
jbe
sbb
mov
mov
push
xchg
ret
lods
ja
cwtl
mov
test
adc
fsts
ljmp
xchg
push
inc
arpl
daa
mov
mov
mov
push
aaa
jl
xchg
xor
ja
push
mov
lock
and
cwtl
ret
sub
dec
push
or
fwait
xor
dec
fnstsw
pop
mov
adcb
jno
jo
les
adc
iret
push
sbb
add
inc
cmp
mov
je
aam
dec
add
inc
outsb
xchg
adc
mov
push
push
cmp
add
pop
or
xchg
and
mov
into
adc
add
cmpsl
addr16
jo
movsl
lock
sbb
out
dec
aam
fwait
les
jmp
les
or
xlat
inc
or
inc
lds
les
test
aam
or
dec
sub
jne
or
lahf
mov
outsl
sarl
shl
pop
sub
in
sarb
gs
xchg
jge
ljmp
aad
adc
mov
cs
pop
push
add
subl
fstpt
test
dec
sub
pop
inc
xchg
icebp
fmull
add
xor
sbb
sbb
pcmpeqw
xchg
fsubrs
fimull
and
jp
je
xor
fstl
dec
push
nop
aas
mov
sub
ja
add
rorb
and
push
rorl
pop
push
adc
out
pop
cmpsb
orl
cltd
push
pop
dec
jb
addb
mov
jno
and
lods
dec
mov
push
add
out
dec
jne
fdivl
lret
enter
add
add
das
jne
loope
into
mov
stos
inc
inc
mov
push
test
inc
and
push
pop
fdivl
jmp
sbb
jecxz
in
add
mov
clc
test
mov
pop
sub
pop
cmp
jae
pushl
sbb
jmp
jns
ret
filds
pusha
and
jne
push
jmp
sub
andl
or
fwait
add
je
mov
add
xchg
sbbl
push
dec
mov
subb
push
movsb
add
lock
je
movsl
add
outsl
outsb
cmp
mov
out
sbb
rolb
xchg
or
dec
push
stos
or
push
pushf
pop
xchg
lret
pop
xor
add
mov
or
pop
push
add
and
or
outsb
dec
add
sahf
xchg
lret
inc
movsb
or
add
popa
sbb
push
adc
sub
sub
sahf
repz
sbb
inc
inc
fs
dec
dec
dec
dec
push
xor
mov
and
xchg
adc
mov
stos
pusha
jno
mov
add
sub
ss
popf
jl
jbe
mov
faddl
rcrl
pop
or
inc
or
mov
inc
cmp
mov
xorl
orl
and
add
and
lea
scas
es
xor
pusha
mov
sub
outsb
and
pop
subl
lcall
sub
je
cmp
mov
pushf
and
and
scas
add
sbb
hlt
subb
jnp
and
xchg
movsb
push
cwtl
and
push
insb
cmp
cmp
mov
iret
dec
mov
and
xchg
push
and
push
xchg
mov
arpl
mov
lock
std
lret
cmp
cs
pushf
insl
and
pop
mov
stos
fsts
int
inc
popa
sbb
sbb
insb
pop
push
cwtl
mov
xor
fwait
rorb
jge
inc
test
push
mov
lret
mov
fimull
add
pop
iret
adc
add
xchg
jo
jb
cli
into
push
je
loop
popa
popa
movl
add
cs
add
add
in
sbbb
lea
inc
sub
addr16
test
cmpsb
js
sbb
adcl
jl
add
aam
clc
inc
call
pop
test
jno
push
mov
lock
ss
xor
inc
cmp
pop
loopne
cmpsb
add
dec
stc
pop
push
xor
cs
mov
je
dec
push
jmp
mov
iret
outsl
enter
xor
push
sbb
jns
int3
add
push
lods
inc
loopne
sub
xchg
adcl
je
inc
loopne
jge
int3
xlat
push
sbb
add
inc
adcb
in
xchg
mov
jne
xor
jnp
aam
pop
mov
clc
sub
in
and
lods
sbbb
das
aad
jnp
adc
cs
push
mov
insb
xor
adc
fists
lock
fstps
sbb
ret
aam
adc
adc
ret
adcb
sbb
cmp
and
add
sbb
sub
sub
dec
ds
xor
imul
and
cmpsb
xchg
and
enter
roll
dec
sbb
xchg
add
add
adc
cmp
jne
push
ja
ljmp
ret
or
sbb
mov
sti
and
and
out
mov
inc
xchg
call
pop
mov
xchg
jns
je,pt
add
or
jbe
push
sbb
mov
sti
mov
gs
mov
repnz
inc
cmp
jg
loope,pt
pop
pushl
aas
cmp
and
pop
push
fcompl
insb
push
push
jle,pt
xchg
mov
xor
sub
inc
sbb
sub
xor
ljmp
mov
or
ss
push
jb
leave
add
push
add
xor
rolb
test
jne
cli
dec
inc
test
xor
shll
dec
fadds
jne
fldl
mov
pusha
pusha
popa
add
rcll
std
inc
int3
cs
xor
pusha
popa
jge
and
setae
mov
ret
jns
es
filds
lret
cmp
add
xchg
jmp
cmpsb
imul
in
inc
testb
dec
push
test
xchg
outsl
xor
in
imul
mov
mov
je
adc
mov
adc
sbb
pop
and
leave
or
sbb
dec
or
std
xchg
jno
nop
pop
inc
mov
push
es
add
les
jo
cmp
fisttpll
sbb
es
iret
sarl
inc
dec
sbb
push
add
arpl
adc
inc
adcl
or
or
pop
data16
mulb
sub
sub
lcall
faddl
mov
jmp
imul
movsbl
add
inc
mov
loop
push
add
icebp
pushf
mov
xchg
sbb
adc
or
push
cmp
je
and
mov
cmp
and
cmp
dec
int
add
push
xchg
inc
or
cmp
jmp
push
lds
dec
subl
push
pop
mov
test
sub
mov
adc
adc
jmp
xchg
call
add
xchg
jecxz
cltd
ss
cmp
sub
int3
bound
movsl
sarl
pop
or
xor
mov
adc
mov
lret
je
xor
fs
xor
or
mov
icebp
lret
xchg
add
cwtl
test
jecxz
pop
xchg
int3
imul
or
jl
test
inc
xor
sub
mov
or
mov
ja
rolb
pop
dec
aaa
dec
mov
loop
in
jmp
push
lds
jns
ja
mov
inc
xchg
pop
jmp
addr16
in
inc
test
pop
enter
aad
out
icebp
pop
and
adc
pop
and
inc
push
mov
popf
ss
or
insb
in
mov
inc
sub
jbe
jg
push
or
sbb
loopne
adc
es
push
fildl
je
xchg
mov
fsubr
add
adc
cmp
insb
sbb
mov
inc
test
xchg
push
and
push
dec
adc
sbb
add
loopne
les
adc
dec
mov
clc
push
add
loopne
fdivr
shll
aam
sbb
add
add
arpl
dec
aas
pushf
std
cmp
test
div
fstpl
and
insl
clc
push
xorb
mov
insb
cmp
lods
cmp
cwtl
mov
fsub
pop
fsubrp
inc
jge
jmp
jns
test
and
push
cld
and
sbb
xor
add
insb
div
and
xor
push
rclb
scas
add
test
adc
lret
pop
cmpsl
shll
aaa
es
imul
out
jns
popa
jmp
sbb
ss
xchg
xor
sbb
sbb
loop
stc
sbb
push
movsb
inc
add
mov
popa
mov
aam
push
add
jl
jbe
aaa
js
or
push
push
or
sub
pop
jns
xorb
clc
fsubl
outsb
fnstsw
iret
movsl
fcompl
lods
sub
cmpsl
movsb
pop
mov
mov
sbb
xlat
mov
movsb
and
out
in
fidivrs
and
sbb
xor
adc
leave
sub
lea
ja
clc
and
inc
sub
in
adc
and
negb
aad
repnz
push
push
sub
sbb
push
movsb
adc
jle
sub
fwait
fs
mov
lret
dec
sbb
hlt
jmp
mov
dec
repnz
adc
and
jne
pop
fstps
or
int3
mov
subb
insb
and
add
pop
sarl
pop
pop
pusha
in
fldl
push
adc
cmpsb
mov
pop
shlb
lss
and
repnz
push
xor
push
dec
jmp
or
lret
add
lret
xchg
pop
and
or
dec
xchg
lret
xchg
lahf
insb
or
flds
and
dec
ret
outsb
nop
and
or
adc
jmp
adc
nop
frstor
add
aam
daa
xor
push
clc
in
fs
add
inc
pushf
sbb
adc
adc
and
jge
cmpsb
pusha
ja
and
sbb
and
je
insb
aaa
or
out
loopne
int3
adc
lods
and
add
test
pop
mov
or
or
push
iret
repz
sub
dec
pop
jo
cmp
repz
mov
sahf
out
out
adc
inc
push
out
sahf
out
je
xchg
cmpsl
lahf
out
sahf
mov
or
xor
das
inc
push
jae
xchg
cmpsb
mov
xchg
cmp
enter
cmp
push
add
sarb
outsl
and
loopne
or
rolb
add
aaa
xorl
rclb
mov
adcl
cli
adc
xchg
lock
mov
xchg
in
test
add
cmp
lcall
cmovge
pop
add
pop
adc
add
jo
imul
xor
push
push
or
push
jo
pop
push
jo
repz
popa
add
xor
pop
daa
adc
mov
inc
daa
mov
mov
push
mov
dec
sbb
sbb
xorl
arpl
mov
js
push
fwait
movsb
imul
inc
add
les
leave
lret
int
push
inc
rcll
pop
das
js
or
daa
push
mov
sub
add
adc
mov
out
push
or
rorl
out
sub
and
xchg
add
pushl
add
and
adc
xor
adc
aam
scas
mov
sub
add
nop
dec
or
sub
xchg
xchg
in
addr16
mov
popa
sbb
inc
mov
mov
fwait
enter
pmaddwd
iret
mov
jl
pop
sbb
add
dec
jle
jo
cmp
push
or
jns
ja
loopne
loope
mov
in
push
push
fs
jle
es
in
ja
and
xor
dec
fidivs
xchg
cwtl
sbb
adc
inc
stos
shlb
scas
lock
cmp
lods
repz
add
mov
xor
addr16
test
adc
xor
out
inc
sbb
add
mov
and
js
fwait
inc
cmpsb
add
add
pop
inc
movsb
inc
scas
jg
xor
add
cmpb
mov
repnz
add
push
sub
cmp
pusha
fcoms
sbb
or
adc
das
add
xor
pusha
and
jbe
inc
inc
mov
and
mov
daa
ss
dec
ret
sbb
mov
and
cmp
push
xchg
adc
movsl
sub
push
and
pusha
xchg
mov
xor
rcll
sub
leave
add
mov
mov
push
adc
add
jb
fisttps
aad
mov
test
add
jb
adc
sbb
adc
xchg
pop
or
sti
lock
movsb
sub
cmp
add
jns
mov
push
lock
push
lds
push
shrl
xor
add
adc
xchg
push
xchg
or
mov
cmp
dec
pop
mov
call
adc
xor
push
or
jo
popa
inc
sub
icebp
adc
shll
jns
lgdtl
add
add
cmp
xor
cmp
sbb
sbb
adc
add
pusha
and
outsb
stc
pop
sub
call
inc
mov
popf
and
add
or
es
lret
or
mov
sbb
pop
add
mov
and
sbb
adc
fiadds
shlb
adc
pop
push
and
mov
ljmp
add
jb
call
add
pop
pop
test
or
xchg
pop
adc
call
jo
sbb
aad
push
std
cmc
dec
fisttpll
xchg
jmp
jae
cli
mov
or
aad
ljmp
and
or
add
push
roll
sub
orl
or
inc
imul
sbb
jne
cltd
lahf
outsb
add
mov
enter
add
mov
popl
sbb
sbb
adc
xor
push
adc
fwait
xor
adc
pop
xchg
xor
mov
nop
shlb
cmp
xor
adc
and
aad
adc
adc
cmp
push
and
dec
es
add
or
rclb
adc
xor
and
sbb
mov
test
sbb
or
loop
push
cli
jmp
and
inc
or
pop
mov
push
cmp
aaa
dec
push
stos
dec
or
sub
sbb
or
jbe
add
or
mov
xor
and
bound
xchg
add
sbb
xor
add
add
xchg
pop
and
test
mov
or
add
js
jne
push
push
ss
mov
flds
adc
je
push
cmp
mov
dec
or
add
push
lret
push
push
inc
add
and
sahf
js
mov
mov
inc
lods
mov
repz
cmp
or
push
cmpb
je
dec
add
jnp
lods
in
dec
xor
adc
and
movsb
adc
add
pop
inc
mov
addr16
dec
cmc
cs
daa
jns
mov
push
gs
dec
push
dec
mov
lret
adc
ret
sub
pop
pop
push
test
ljmp
add
aam
sub
push
arpl
xorb
out
mov
push
jne
inc
jmp
sub
je
pop
ja
mov
mov
or
sbb
mov
insb
push
addr16
popf
or
push
inc
mov
imul
xor
add
push
int
push
nop
mov
or
push
push
sbb
fcmovnu
inc
xorb
or
lret
in
ret
mov
add
movsb
adc
sub
add
lret
out
ljmp
push
rclb
mov
rcrl
dec
nop
nop
cs
mov
lods
mov
loope
add
call
nop
outsb
rcr
gs
cmpl
push
mov
sbb
iret
mov
inc
or
fimull
push
inc
or
cltd
add
pop
push
in
lret
dec
xchg
pop
adc
mov
add
and
pop
add
adc
jns
iret
test
loopne
inc
inc
inc
sbb
jl
fcoml
or
pop
movl
push
pop
sub
dec
push
loopne
sub
rol
jbe
cmp
push
sbb
popf
cwtl
or
sub
mov
push
popa
mov
push
sub
faddl
mov
syscall
xchg
mov
mov
pop
paddq
icebp
push
dec
cmp
cwtl
push
cmp
int
call
sub
lret
pop
call
dec
adc
push
cmp
jl
adc
push
or
stc
mov
jmp
mov
outsb
mov
xor
sub
imul
jl
xor
jmp
cmp
jl
or
sbb
popa
sti
mov
adc
cmp
cmp
je
mov
mov
push
jg
loope
add
inc
jmp
movb
mov
push
cltd
pop
idivl
mov
mov
cmp
sbbl
push
dec
sbb
and
es
test
jecxz
cmp
xchg
in
arpl
xor
jl
fldl
inc
cld
fildl
movzwl
je
add
add
dec
dec
adc
cmpsl
jb
cwtl
dec
inc
push
lock
jmp
cld
incb
dec
enter
sub
scas
add
iret
cmp
sbb
mov
push
mull
cmp
incl
jo
push
ds
push
push
test
and
divl
into
roll
std
xchg
jecxz
pop
and
fyl2x
outsb
movsl
xor
jmp
orl
xchg
lret
int3
add
push
imul
or
dec
cwtl
sbb
add
or
loop
push
adc
xchg
cmp
jge
out
lret
rcll
mov
and
or
inc
hlt
fsubs
push
sub
and
xchg
paddd
movsl
jns
pushf
mov
push
fisubl
adc
ljmp
adc
or
adc
lock
mov
push
cmp
test
lock
inc
lods
fcoml
push
loope
pusha
xchg
dec
stos
in
mov
js
sbb
jbe
add
cmp
lret
xchg
bnd
jo
sbb
popf
lret
jnp
push
jns
push
pop
push
push
lret
mov
sbb
pop
nop
flds
push
mov
repnz
add
sbb
jae
nop
xchg
addr16
sbb
ljmp
movsb
lea
es
cltd
sbb
dec
inc
lcall
mov
ja
xor
out
fdivl
rcrb
fsubrs
jae
or
and
fnstcw
loopne
jbe
movsl
lods
mov
and
stos
fldenv
jno
scas
iret
in
xchg
mov
jno
scas
lea
dec
daa
jns
sbb
pop
pop
mov
or
movsb
pop
gs
xor
ficoms
jo
dec
cmp
mov
es
pusha
nop
dec
jb
cwtl
xchg
mov
subb
and
ss
shrd
mov
jl
cltd
test
inc
or
inc
push
adc
aaa
jns
ja
cwtl
test
push
movsl
fwait
call
daa
sbb
rcrb
mov
inc
push
jmp
adc
lret
mov
and
out
sbb
push
xor
xchg
icebp
jo
ret
xor
sub
in
fs
pusha
xor
dec
shl
rcll
mov
inc
push
mov
xor
movsb
fmull
stc
inc
movsb
fmull
inc
imull
and
pop
push
clc
xor
push
shlb
jl
sbb
call
inc
arpl
jecxz
mov
jb
dec
xlat
xchg
rolb
call
push
xchg
pushf
xchg
lret
push
fwait
mov
loopne
or
call
add
addb
inc
push
mov
scas
daa
add
jmp
shll
push
loopne
push
or
aam
fdiv
dec
sub
or
pusha
cmp
int
lods
add
sbb
dec
cs
ljmp
sub
add
sub
sbb
add
xor
push
push
push
repz
in
mov
mov
and
mov
inc
jb
into
adc
aam
inc
mov
mov
xor
inc
or
push
movsl
outsl
jmp
cwtl
sbb
and
mov
cmpb
push
cli
inc
outsl
pusha
outsb
movl
xchg
sbb
sbb
cmp
pop
call
mov
sbb
mov
test
mov
push
cmp
inc
push
ljmp
sub
loopne
add
xor
xchg
push
and
sbb
and
and
sbb
cwtl
mov
sbb
sbb
push
or
and
sub
mov
cmp
inc
jge
add
and
xor
inc
push
push
xchg
dec
mov
push
movsl
or
inc
lcall
mov
dec
enter
mov
and
stc
cmp
fwait
pop
fisubrs
push
adcl
or
sbb
and
xchg
jecxz
mov
imul
xor
sub
dec
xchg
pop
dec
pushf
xchg
xchg
mov
jo
js
adc
and
fiaddl
rorb
pextrw
or
add
cmp
sub
std
test
and
pop
adc
int3
xor
push
push
call
fisttps
loopne
cmp
adc
mov
mov
sbb
iret
lea
pop
and
aaa
les
adc
cmp
push
enter
cmc
pop
or
or
push
push
mov
sbb
movsbl
test
sbb
and
or
add
dec
les
push
aaa
jp
push
add
xor
stos
jb
lahf
shlb
push
xchg
int3
cmp
aam
xor
push
adc
pop
imul
or
faddl
arpl
pop
adc
mov
inc
loopne
adc
shrl
lcall
dec
lods
or
call
jno
adc
mov
cli
mov
push
adc
aaa
cmpsb
pusha
adc
push
push
add
cmp
inc
mov
jge
add
pminub
xorl
and
sub
cmpsl
test
cli
or
xlat
sbb
sbb
es
add
mov
push
or
push
test
add
jae
shll
orl
sbb
mov
iret
push
and
int3
shlb
aam
cs
or
test
mov
push
call
pop
dec
fwait
setae
jae
dec
pop
sub
aam
rcll
inc
sub
or
cmp
mov
push
scas
adc
pushf
pusha
scas
enter
jmp
sarl
shrl
aaa
adc
cmp
cltd
inc
in
xor
xchg
jne
shl
cmc
clc
lahf
jl
mov
dec
push
jne
push
push
incl
mov
dec
mov
jo
sbb
add
lret
cwtl
fcoms
adc
lcall
loope
and
iret
pop
ljmp
fcmovne
fmulp
add
mov
xor
out
leave
adcb
push
add
fwait
je
dec
inc
xchg
inc
je
dec
push
lret
repz
mov
daa
imul
cmp
ret
dec
cmp
inc
xchg
push
aaa
cltd
scas
and
rol
andb
mov
loopne
inc
cmp
sbb
shlb
nop
add
or
push
mov
or
adc
andb
push
rcl
push
in
mov
sub
mov
and
and
pop
sub
ja
add
or
xor
mov
jbe
push
sbb
daa
inc
jne
test
mov
pop
sub
fldl2t
pop
rol
cmp
sub
adc
in
or
cmp
jb
cmp
push
cmp
lret
push
dec
cmp
cmp
in
cmp
es
xchg
lahf
push
scas
sbb
adc
cmp
xchg
pop
sbb
popa
popa
pop
cmpsl
sbb
inc
push
jbe
and
inc
fwait
dec
xor
pop
xorb
pop
fstps
xor
mov
mov
es
sbb
push
jmp
pop
sbb
cmpsb
add
sub
push
or
mov
or
es
addb
cmp
or
cs
lret
add
ds
xchg
lock
or
mov
cld
aas
je
fst
push
lcall
push
dec
push
stos
std
push
lds
andb
jg
push
movsb
push
in
xchg
sbbl
add
pushf
pop
std
lds
xchg
cltd
lods
add
sub
sbb
push
add
pop
nop
xchg
push
adc
cmp
lods
ficompl
pop
adc
xchg
pop
ret
out
mov
and
outsb
test
push
add
adc
shrl
add
sbb
mov
adc
add
fstpt
sub
inc
int
mov
push
cmp
loopne
and
mov
xor
mov
test
mov
sub
test
scas
dec
ja
dec
sbb
or
push
adc
and
das
in
sbb
ficomps
or
cmpsl
mov
loope
cmp
xchg
jno
jle
xchg
dec
mov
inc
sbbl
and
dec
xchg
push
xorb
ds
scas
cmp
or
xchg
sub
jge
cmp
sub
sub
aad
std
add
jmp
sarb
ds
scas
push
cltd
pop
push
push
movsb
jl
adc
pop
rclb
adc
xchg
mov
aaa
adc
fsubr
addr16
in
mov
ret
push
adc
inc
mov
sbb
cmpsb
aam
mov
cmc
fsubs
lea
ds
loop
dec
jge
lcall
add
fwait
in
outsl
lods
xor
mov
and
cmp
sbb
adc
push
mov
mov
adc
adc
inc
adc
push
es
test
data16
cltd
cwtl
outsl
push
or
loop
or
and
in
movsb
add
add
mov
dec
pop
std
lods
ret
stos
xor
mov
lods
cmp
push
in
sub
es
ss
xchg
pop
dec
insb
daa
push
or
ror
or
mov
int
aaa
and
adc
sbb
lods
insb
mov
dec
push
and
sub
adc
sbb
push
dec
jbe
push
incb
stos
push
ret
shlb
push
mov
cmp
fs
in
lcall
mov
jbe
decb
add
push
cltd
jb
or
or
nop
je
push
js
cmp
andb
testl
xchg
adc
or
sub
adc
push
pop
or
imul
sbb
push
stos
push
dec
xor
or
push
pop
and
xor
jne
inc
cmp
jae
mov
push
gs
rcrl
inc
push
mov
jmp
aad
call
int3
add
aaa
lds
dec
imul
jne
fidivrs
push
mov
icebp
fimuls
lahf
mov
jne
push
or
pop
clc
hlt
adc
push
pop
pop
pop
test
jle
cltd
sbb
xor
test
xor
sub
fnstenv
testl
push
and
xor
and
sbb
sub
push
test
cmp
out
lahf
push
sbb
and
test
mov
ja
inc
idiv
pop
pop
push
test
pop
or
lods
shl
pop
add
cmc
arpl
sub
test
pop
fsts
or
leave
ljmp
dec
ret
sub
xchg
int3
and
andl
or
push
xchg
or
pusha
jbe
insl
lret
pop
push
inc
or
roll
in
add
adc
loope
cmp
push
dec
stos
adc
push
test
dec
fiaddl
mov
mov
jae
insl
test
add
add
push
das
ja
test
sub
or
and
xchg
sbbb
lret
cmovno
int3
mov
rcl
inc
and
mov
xchg
xor
adc
insb
insl
push
pop
cmpb
sbb
inc
lods
fadds
stos
sbb
pop
or
push
clc
inc
sub
push
cmp
cmp
mov
testl
or
xor
push
inc
cmp
xor
int
dec
add
and
mov
inc
push
mov
jp
inc
imul
fsubs
cmp
lahf
cltd
mov
or
pusha
push
inc
rolb
negl
cmpl
pop
cmp
pop
sub
push
and
dec
addl
xor
push
add
xlat
orl
mov
dec
mov
fwait
xor
pop
cmpb
push
pushf
and
movsb
push
or
rolb
out
mov
les
addb
mov
enter
jmp
xor
ret
ds
scas
fs
cmc
mov
iret
push
jne
mov
mov
movsbl
add
fldcw
fs
sbb
loop
dec
mov
cmp
xchg
xor
cmp
pop
dec
jmp
pop
lret
and
orl
ret
xor
je
in
or
testb
pop
icebp
xor
test
and
push
or
mov
and
inc
daa
lea
inc
enter
insb
dec
sub
dec
and
addb
push
repnz
and
xchg
xchg
add
and
xor
dec
insb
fwait
test
sub
lret
cmp
pop
cmp
xor
xor
pop
sbb
js
sbb
outsb
mov
setae
mov
xor
add
add
movsl
jp
and
adc
adc
cmp
les
movsb
jns
sbb
add
mov
insl
mov
in
or
cmp
cmp
inc
or
mov
fucomip
xchg
and
or
sbb
std
sub
jo
lret
lret
stos
loop
push
lcall
pop
or
adc
mov
mov
push
loope
add
in
jae
cmp
xchg
lret
mov
lret
sbb
dec
xchg
lret
andb
scas
inc
or
inc
sbb
or
shrb
ljmp
add
sbb
sub
pushf
scas
mov
mov
push
add
mov
sub
jno
cmp
shll
clc
inc
icebp
movsb
jbe
sbb
test
mov
mov
movsl
sarl
push
dec
push
push
ljmp
push
test
nop
lcall
lods
cmp
popf
daa
or
lods
inc
dec
mov
std
ja
and
cmp
and
jge
adc
cmp
xor
push
arpl
lock
cmpsb
cmpsl
dec
pushf
push
add
push
inc
popf
xchg
and
jp
dec
nop
mov
and
std
mov
sbb
fdivrl
lea
lock
and
cmpl
add
sub
sbb
xor
movsl
and
sub
orl
into
aaa
add
and
push
ljmp
popf
icebp
sub
insl
or
aaa
mov
add
adcb
shl
xor
insl
push
addr16
mov
hlt
add
add
loop
jo
addr16
sub
cmp
adc
sbb
nop
bts
pop
or
mov
adc
fwait
push
sub
add
adc
daa
out
notrack
mov
cmp
xchg
inc
jl
filds
lods
push
push
sub
push
sbbb
stos
mov
mov
pop
inc
aam
mov
xchg
and
push
sti
cmpl
addb
mov
or
mov
lods
pop
in
xor
push
loopne
out
jg
imul
xchg
notl
push
jnp
inc
nop
pusha
adc
inc
xor
adc
test
sbb
add
orb
in
add
pop
test
add
adcb
pop
aas
push
test
enter
mov
add
xchg
shlb
out
popa
adc
test
ds
jl
lret
adc
push
lret
cs
test
cmp
mov
mov
dec
cmpsl
xor
or
jo
xor
push
add
mov
dec
push
subl
dec
push
inc
cld
rclb
push
mov
add
or
push
scas
inc
dec
jo
dec
pop
xor
fs
loope
ds
test
cmp
into
dec
and
xor
xchg
xor
xor
pop
lods
cld
add
ret
xchg
sbbb
test
mov
xlat
or
shlb
lods
cld
incl
andb
ficoms
aas
mov
mov
mov
add
dec
push
and
bound
sub
insb
push
outsb
mov
sub
sahf
mov
mov
arpl
mov
incl
sbbb
lret
fstpl
add
or
jbe
test
sbb
gs
cmp
pop
xchg
daa
rcrl
or
jne
movsb
rol
push
or
or
or
andl
adc
xor
or
ds
cmp
xor
adc
mov
pusha
pop
out
pop
push
mov
clc
or
out
xchg
xchg
ja
pop
roll
or
dec
fcoml
inc
fsub
sbb
fs
inc
sahf
sbb
push
mov
add
fldl
mov
push
pop
push
lods
dec
pop
psubw
outsl
dec
pop
ja
push
sbb
add
sbbl
and
cld
mov
loope
in
stos
push
stos
js
push
pop
adc
cmp
leave
or
sbb
push
mov
fcomps
call
or
int
cmpsl
xchg
cmp
div
add
add
and
xor
dec
roll
jl
jne
mov
cmp
adc
cmp
mov
inc
inc
xchg
jae
shlb
loopne
sahf
add
mov
and
pop
push
test
test
pop
stos
push
dec
es
jp
pop
sbb
daa
xorb
aaa
sbb
or
adc
jo
mov
movsl
push
push
dec
mov
repnz
test
ss
sahf
xchg
insb
jae
push
sub
dec
sub
cs
add
andl
jl
loope
leave
mov
jo
jo
stc
sti
jl
mov
or
and
mov
xchg
into
pushf
adc
frstor
inc
add
fdivrp
sti
adc
loopne
dec
std
cs
sbb
pop
inc
pusha
test
or
ljmp
js
loopne
and
mov
push
jb
popf
mov
push
inc
add
call
and
sub
les
shl
dec
bound
push
sarb
cmp
pop
adc
iret
dec
xlat
sbb
push
dec
or
add
jnp
int3
and
hlt
inc
pop
xor
lea
push
rorb
sbb
dec
add
add
xchg
push
int3
xchg
pushw
sahf
loopne
inc
sub
or
jne
sub
dec
rorb
mov
add
test
data16
stos
sti
push
push
mov
lret
idiv
mov
enter
js
imul
mov
xchg
gs
pop
stos
mov
dec
mov
pop
outsb
pusha
or
push
enter
add
pop
rclb
add
jne
mov
xor
cmp
lea
mov
dec
stos
jmp
cmpsb
xor
sti
sbb
mov
in
shrl
fmull
jl
in
movsb
jmp
outsb
xchg
cmp
cwtl
rcrb
mov
arpl
rorb
mov
rolb
popa
fwait
ds
aam
xchg
xor
lock
inc
enter
pop
mov
les
inc
push
push
lahf
rcl
pop
dec
lea
xchg
inc
push
or
add
sbb
shll
mov
cmp
cmp
inc
imul
fmull
xchg
add
inc
jmp
pushl
nop
dec
rcrb
enter
sbb
sbb
fsubs
scas
pop
mov
aam
xor
fstpl
insb
enter
inc
clc
and
mov
movsb
mov
adc
add
cltd
rcr
fcoms
xchg
shrb
test
pop
mov
adc
lea
adc
inc
add
sbb
sbb
push
sub
add
aas
inc
ret
fnstenv
dec
xchg
jne
out
in
cmp
add
imul
mov
cwtl
push
arpl
popa
daa
fisubs
cwtl
mov
iret
mov
ljmp
sbb
fidivrl
sbb
loope
mov
leave
ljmp
lods
call
popa
mov
out
jnp
int3
cmpsb
xor
fsts
push
sub
popa
dec
adc
push
inc
push
stos
sub
outsb
pop
faddl
xor
jae
push
push
push
or
cld
cmc
ljmp
mov
pusha
pop
test
cmp
xor
adc
cs
sbb
push
adc
stc
xchg
mov
push
insb
enter
mov
jne
or
ljmp
inc
pop
add
dec
negl
daa
and
repz
test
push
mov
mov
cmc
inc
lock
sub
push
push
out
push
push
xorb
jo
mov
xchg
insl
pusha
pop
das
pop
jge
popf
pop
out
push
mov
push
filds
jae
push
xchg
sbb
or
mov
push
add
mov
xor
jns
push
loopne
adc
dec
jbe
ret
and
add
je
sbb
sub
inc
inc
pop
xor
lods
nop
loopne
push
or
inc
fwait
and
fisubrl
xchg
adc
or
or
adcb
ljmp
mov
xchg
mov
jg
loopne
outsl
pop
test
movsl
inc
sub
xor
cmp
dec
mov
push
or
in
test
jmp
jmp
mov
loopne
jecxz
fwait
mov
popf
cmp
pop
and
pxor
fbstp
outsl
add
sub
dec
and
ja
fildll
push
shrb
pop
addl
pop
shrb
jbe
lock
popa
xor
jb
pop
pop
ret
lret
shl
sbb
orl
push
jno
jb
adc
add
mov
and
arpl
push
mov
xchg
int3
adc
es
into
sarb
js
js
adc
and
std
cmp
loopne
lea
add
jo
gs
cmpsb
imul
int
adc
mov
inc
nop
shl
test
sbb
aam
and
sub
lock
sub
jne
dec
or
inc
pop
and
adcb
loopne
lods
gs
mov
mov
sbb
and
sub
aam
push
mov
push
dec
push
or
cmp
sbb
iret
adc
sbb
lret
ja
ss
push
or
orb
sbb
aad
inc
push
mov
daa
mov
adc
or
push
lret
test
stos
and
inc
call
icebp
adc
and
mov
or
call
xchg
jno
adc
je
cmpl
dec
sarb
dec
hlt
jne
mov
push
mov
lock
sub
and
dec
pop
cmp
addb
aaa
push
adc
sub
push
test
mov
jb
add
or
insl
sbb
sub
mov
lods
pop
clc
in
push
ds
mov
rclb
test
out
adc
loope
test
mov
add
fucomi
lea
xchg
mov
ss
pop
sub
pop
xchg
ret
jno
add
mov
or
enter
cmp
in
mov
mov
mov
nop
lret
aam
andl
mov
and
xor
and
inc
xchg
pop
loopne
mov
adc
sub
clc
test
rcr
fwait
dec
mov
cmpsl
push
adc
cmc
lods
aas
dec
sbb
insl
popa
mov
jge
inc
or
in
fsubrp
shlb
xor
bound
cmpsl
andl
cmp
sub
inc
imul
je
in
roll
stos
add
insl
sub
jmp
jne
adc
push
in
popl
or
sbb
rep
add
movsb
lahf
inc
je
dec
pushf
xchg
mov
ja
or
inc
test
adc
mov
loopne
xchg
movsb
push
jge
es
loop
mov
jmp
inc
add
movzwl
mov
dec
mov
in
jg
sbb
push
sbb
insb
adc
sbb
lret
cmp
nop
mov
push
rorb
xchg
push
xchg
push
bound
xor
xorl
pop
mov
mov
add
in
pushf
inc
mov
jne
and
scas
ljmp
shl
inc
lahf
mov
fcomps
rcrb
add
sub
fwait
mov
xor
dec
call
cld
jge
mov
int3
mov
mov
mov
popa
mov
rclb
inc
add
rcll
add
sbb
cmp
rorb
mov
fimuls
ss
in
and
adc
lea
aad
push
inc
sub
push
push
pushl
mov
std
outsb
inc
sub
or
mov
out
add
insb
cmc
xchg
bound
dec
js
cmp
xlat
mov
clc
nop
clc
sahf
clc
in
stos
jge
cmpl
sub
hlt
xor
jmp
dec
les
cli
push
sbb
push
fsubrs
adc
pop
and
push
testl
push
adc
pop
clc
jne
loopne
and
jns
pop
pop
sub
cmpl
pop
and
jge
push
jbe
dec
cs
mov
push
cmp
mov
xchg
clc
push
enter
push
and
xchg
push
and
inc
or
jnp
jecxz
xor
mov
sbb
mulb
fwait
pushf
rcr
lahf
xchg
push
push
push
dec
xor
push
sub
mov
inc
adc
js
sub
fsts
cld
push
xor
sarb
nop
cmp
jne
adc
xlat
push
mov
jmp
out
jmp
rol
mov
ret
cli
call
sbb
fidivrl
int3
add
dec
dec
out
add
shll
or
rorb
and
lods
and
nop
push
mov
addl
add
xor
push
popa
shll
add
sub
cmc
add
loop
loopne
add
pop
sub
pop
fucom
or
sbb
push
mov
cs
out
or
xor
cmp
mov
mov
daa
pusha
aam
add
aad
stos
cmpsl
insb
sbb
jns
ljmp
mov
aas
push
mov
aam
pop
outsl
cmp
xor
mov
or
inc
pop
add
std
pop
imul
cmp
jbe
jg
jmp
mov
call
adc
in
mov
jbe
test
mov
es
xorl
filds
loopne
and
imulb
shl
push
aad
fmul
xor
dec
rcll
subb
int
mov
adc
adc
xchg
insl
das
incb
jl
cmp
insb
cli
pop
xor
sarl
adc
faddl
mov
cli
jnp
mov
or
push
lods
sbb
dec
pop
mov
mov
mov
pusha
fdivl
sbb
cmp
fdivrl
xchg
dec
in
daa
in
add
add
mov
sub
push
scas
inc
xchg
mov
inc
cmp
data16
jo
outsb
test
push
loop
hlt
or
cmp
mov
clc
inc
xor
mov
mov
fidivs
sbb
int3
std
data16
jbe
or
cmp
das
in
and
sarl
mov
mov
rep
movsw
push
cld
xorb
movsb
mov
and
mov
adc
ljmp
out
rorb
test
movb
pop
push
lea
cmpb
mov
sti
push
push
mov
inc
jg
sti
push
fbld
pop
movsbl
xor
dec
int3
scas
xor
ss
push
cmp
jb
and
push
sahf
mov
adc
dec
shl
adc
sbb
cltd
sbb
xchg
inc
pusha
and
dec
cmp
jne
sbbl
mov
rolb
outsl
scas
mov
lcall
sbbl
jl
sub
cmp
inc
stos
jle
sub
push
imul
dec
xor
or
push
in
adc
sbb
jo
shr
or
lahf
xor
cmp
ficompl
inc
adc
and
inc
push
add
stos
in
cs
ss
add
cmp
push
add
or
or
dec
lock
or
sarb
mov
and
jae
inc
enter
or
xor
pushf
mov
push
pop
jo
push
add
pushf
pushf
pushf
pushf
add
push
pop
outsb
lahf
pushf
pushf
or
or
jnp
or
jbe
outsb
outsb
outsb
or
jno
jmp
push
jmp
por
outsb
outsb
outsb
adc
pop
adc
pop
adc
push
adc
dec
outsb
outsb
outsb
outsb
adc
dec
adc
aas
pop
jmp
outsb
outsb
outsb
outsb
sbb
xor
jmp
sbb
outsb
outsb
outsb
outsb
sbb
and
pop
pop
jmp
outsb
outsb
outsb
outsb
and
or
jmp
and
fistps
orps
or
mov
les
mov
jmp
cmpsl
cmp
inc
jg
dec
push
pop
jns
out
arpl
jnp
out
sahf
out
nop
xchg
lcall
test
jns
out
ret
rcl
out
sahf
out
loopne
ljmp
stc
incb
orb
fnstenv
cmp
add
mov
pop
or
and
decl
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
push
cmp
sbb
pushf
loop
call
and
addl
jno
push
pslld
bound
jg
pushf
xor
cmp
jle
mov
cmpsb
loope
pop
jmp
aam
std
mov
pop
mov
js
xor
mov
jae
sub
push
push
pop
sbb
pop
movsb
cwtl
clc
sar
xchg
roll
or
hlt
adc
sub
jle
mov
mov
inc
cmp
jbe
inc
cmp
xor
inc
popa
ficoml
mov
inc
inc
add
fs
invd
jge
cmp
rolb
rcrb
or
or
insl
jo
aaa
mov
pop
pop
mov
jg
aad
in
test
sub
lock
andb
ret
mov
push
in
or
aaa
sbb
xor
pushf
aad
or
mov
dec
mov
sub
sub
and
mov
test
dec
insl
adc
sarb
add
adc
movsl
jb
pop
push
and
add
lret
fs
add
push
enter
or
sub
sbb
or
inc
lock
and
add
inc
in
ds
xor
shlb
into
daa
push
cs
je
mov
addr16
repz
jb
out
out
mov
add
mov
mov
jmp
sbb
sub
adc
shlb
pop
pop
lea
mov
pop
cmpsl
xor
and
mov
test
xchg
sbb
cwtl
lock
dec
loop
mov
or
adc
push
xchg
mov
rorb
jg
movsb
clc
mov
repnz
lods
bndstx
pop
pop
test
push
aad
xor
xchg
push
je
notb
push
ss
movb
out
popf
mov
idivb
lcall
mov
mov
fwait
xor
inc
cli
add
pop
loopne
or
mov
orb
push
pop
and
xchg
pop
and
pop
scas
add
sbb
or
or
insb
jmp
inc
cmp
testb
push
roll
dec
imul
sbb
ret
add
inc
ss
dec
pop
fisttps
adc
sbb
movsb
es
xchg
insb
or
mov
cld
push
mov
or
clc
cld
je
je
xchg
sub
push
mov
lock
clc
adc
cmp
and
or
enter
mov
testb
sub
lea
addr16
adc
mov
mov
dec
mov
lret
add
inc
sbb
xchg
xchg
test
push
cs
aas
mov
cltd
dec
popf
scas
std
ds
ret
ret
adc
xchg
sbb
divb
mov
add
lock
pop
push
push
inc
pop
add
pop
push
add
xchg
add
sub
and
and
insb
enter
test
push
ss
shrb
inc
jo
xlat
mov
cmp
mov
mov
popf
xchg
and
outsl
and
pop
adc
jecxz
test
mov
xchg
xchg
gs
xorl
jmp
adc
add
es
stc
and
inc
add
mov
rcrb
leave
hlt
cwtl
sbb
fsubl
cmpsb
imul
bound
lcall
shll
push
lcall
and
push
sbb
lods
and
hlt
and
icebp
andl
fmull
adc
push
divl
jbe
push
cmpsl
push
sbb
xor
call
push
iret
cmp
jne
sub
push
sub
enter
inc
dec
add
insb
mov
dec
int3
mov
into
cmp
xchg
test
sub
inc
sub
int
loopne
and
insl
pop
jne
xor
jecxz
repnz
cmp
je
nop
push
sub
add
push
rorl
inc
cmp
adcb
sahf
rolb
nop
fs
rclb
iret
negb
lock
repnz
loopne
rclb
iret
shll
sbb
testl
enter
push
nop
or
vlddqu
and
testl
and
sbb
mov
jp
cmp
sub
xor
les
pop
push
inc
or
add
fwait
xchg
pop
push
cltd
addb
push
or
pop
push
push
rolb
xchg
dec
mov
inc
ljmp
shll
and
in
adc
adc
xor
stos
or
xchg
and
addb
pop
cmp
dec
add
inc
insb
and
pushf
push
scas
sbb
xchg
add
iret
outsb
and
mov
fwait
popa
or
adc
push
xchg
insb
mov
jnp
pop
jle
cmp
or
nop
jnp
dec
sub
in
mov
jnp
inc
sub
jo
adc
mov
inc
mov
rclb
add
or
cwtl
mov
stos
push
cwtl
fcoml
loope
or
push
xor
add
xor
pusha
jae
push
cld
or
dec
jge
fisttpll
xor
mov
sub
in
pushf
test
push
inc
sti
and
cmp
cmp
sbb
inc
adc
or
or
dec
cmp
or
dec
sub
sub
movsb
test
push
pop
xor
cmp
mov
push
pop
sub
xchg
shlb
dec
mov
out
call
scas
bound
sbb
outsl
xor
popl
jmp
fs
add
pop
cmp
add
movb
and
inc
int
lds
push
xchg
sarl
xor
push
mull
sub
push
sbb
xchg
repnz
xor
imul
adc
jle
sbb
jge
addr16
pop
jne
push
mov
das
cwtl
jmp
cmp
je
jb
cmp
inc
sub
fisubl
jp
insb
inc
jl
push
add
pop
sub
addb
xchg
cli
sbb
push
in
or
aam
sbb
lock
push
aam
xchg
pushf
sbb
lock
and
loop
in
ss
popf
inc
cmp
add
cltd
jne
xchg
cmc
push
cmp
pusha
sbb
and
das
test
and
and
push
int
andl
movsb
jp
fstpl
mov
jno
and
sbb
xchg
jo
lds
and
add
pop
and
fimull
or
and
and
leave
or
call
pop
xchg
sbb
into
push
and
adc
bound
pusha
aam
add
or
add
push
mov
adc
sbb
ss
xor
jne
notl
std
pusha
or
or
xor
test
xchg
sbb
mov
push
push
sbb
or
ror
xchg
xchg
xor
sbb
imul
push
push
in
sbb
or
adc
rcrb
aad
inc
loope
dec
adc
sbb
insl
rorl
push
push
popa
inc
popa
outsl
in
inc
frstor
ds
in
push
or
ds
sbb
push
inc
add
enter
inc
pop
inc
es
push
inc
cs
pop
jo
insb
inc
enter
je
jl
cmp
in
addb
mov
lahf
nop
in
frstor
pop
je
cwtl
cmp
xor
pushf
inc
movsb
es
mov
xchg
mov
or
pop
adc
inc
and
adc
jl
call
incl
add
add
lret
mov
push
test
ja
int3
sahf
imul
and
xchg
jb
fmul
je
jl
and
std
add
mov
push
cmp
jl
sub
cmp
inc
dec
lea
loopne
repnz
je
dec
js
jnp
dec
or
addl
and
cld
clc
shll
addb
xchg
cmp
repnz
lods
sub
pusha
xchg
movsb
cmove
cmp
mov
add
cmp
jl
jmp
out
roll
int3
mov
into
lock
sbb
cld
outsl
mov
mov
and
fsts
jge
inc
mov
dec
call
ss
jmp
rcrl
mov
mov
inc
rcll
int3
test
pop
mov
bswap
das
sub
popl
mov
dec
mov
loopne
int
sbb
push
fwait
push
xor
cwtl
imul
in
or
call
adc
fs
add
xor
mov
add
xlat
add
xor
int3
jmp
push
es
lea
mov
add
push
fistpl
sbb
mov
incb
inc
sahf
js
pop
outsl
dec
xor
mov
jle
mov
imul
cltd
pop
add
pop
pop
sub
lcall
pop
adc
adc
mov
cmp
je
cmp
jne
push
inc
pop
inc
push
repz
loop
xchg
push
xor
cli
pushf
push
adc
xlat
mov
mov
xor
adcb
jbe
out
mov
cli
push
clc
mov
ljmp
or
cmpsl
adc
in
mov
xchg
add
push
xchg
cmpsl
sub
add
or
sti
inc
pusha
or
sbb
adc
add
push
sti
lock
and
adc
adc
xchg
dec
adc
call
sbb
inc
add
rclb
stos
cmpb
mulb
mov
shr
cmp
jb
or
or
ljmp
js
mov
add
jbe
fwait
push
push
jnp
or
daa
dec
fadd
lods
in
jge
ss
mov
ret
jp
stc
call
out
out
addr16
pop
pop
fwait
and
sbb
sub
jne
push
xor
and
clc
adc
lods
imul
scas
std
mov
sbb
add
mov
aam
inc
sub
sbb
loopne
mov
in
or
sub
insl
push
push
push
imul
fstpt
jo
cmpsl
xorb
jne
pop
cmp
mov
ss
sbb
sbb
jmp
faddl
mov
sbb
in
push
jmp
or
or
jne
test
jnp
inc
cmpsb
mov
lods
jnp
rorl
loop
aaa
ret
or
or
pop
mov
or
and
into
xor
and
or
inc
sub
add
aaa
or
cs
in
xor
insl
pusha
mov
mov
imul
testl
imul
mov
inc
insb
pop
loope
add
scas
aad
sbb
pop
jo
mov
mov
hlt
pop
and
repnz
mov
pushl
fcompl
sbb
popa
and
popf
add
sub
loope
xor
or
cmp
loopne
mov
and
shld
pop
jo
pop
mov
jne
mov
dec
imul
movzbl
in
xchg
scas
jo
ror
push
dec
sbb
inc
arpl
outsl
lea
hlt
call
xchg
dec
dec
cmp
jmp
lods
cmp
jmp
mov
movsl
cwtl
and
mov
adc
push
dec
mov
fadds
clc
xchg
les
jmp
stos
test
rcll
push
lcall
fmulp
in
and
insl
scas
push
mov
xor
inc
jle
mov
push
mov
rorb
xchg
lock
sbbb
pop
test
sub
test
sub
sbb
jo
or
adc
fadds
cmp
sbb
jg
pop
fcomps
shll
sti
jne
insl
and
add
dec
ss
push
pop
xchg
mov
or
pop
sbb
mov
stos
push
cmc
mov
dec
sbb
inc
add
mov
dec
aas
inc
push
xlat
pop
dec
sub
pop
push
add
sbb
mov
lcall
sub
mov
xchg
sub
hlt
andb
ljmp
jmp
inc
mov
xor
sbb
dec
mov
lds
inc
or
adc
push
loope
or
xor
xchg
mov
repz
shll
sbb
out
adc
push
inc
leave
and
mov
and
sub
pop
inc
pop
lea
stos
push
cmpsl
add
sbb
inc
mov
pusha
notl
test
ds
ret
sahf
jnp
and
xchg
xchg
test
leave
pop
pop
sarb
fs
ds
jbe
xor
aas
push
mov
inc
arpl
xor
xchg
imul
int3
aam
ds
cmp
bound
add
ret
xlat
faddl
fstl
fldz
fcomp
fnstsw
loopne
loopne
test
pop
fsubr
pop
faddp
pop
inc
test
je
push
insb
xchg
add
inc
sub
inc
cmp
push
pusha
in
or
xchg
in
xor
and
xchg
out
push
movsl
and
lret
and
orb
ljmp
and
shll
movsl
mov
sbb
xor
in
inc
or
pop
inc
mov
sub
add
add
cmp
pop
inc
fdivs
fistpl
sbb
jbe
in
scas
lds
test
and
add
lret
cmp
test
add
gs
xchg
xchg
pop
call
shrl
nop
adc
sbbb
mov
fildll
imul
push
je
or
in
add
lea
and
push
sahf
out
pop
mov
shl
lahf
imulb
fimuls
enter
jns
cmpsl
mov
sarb
les
ret
add
lar
repnz
pop
fisubrs
dec
loope
push
inc
sbb
mov
jmp
out
pop
nop
mov
xchg
stos
push
xor
jbe
int
add
xchg
lret
cmpsl
je
add
pusha
movsb
popf
inc
ffree
adc
pushf
or
add
lret
adcb
dec
fistps
fcomps
adc
mov
push
mov
lret
dec
ja
jmp
push
mov
adc
cwtl
jmp
in
mov
and
or
xor
inc
xchg
cmpl
add
jns
xchg
add
ret
and
mov
push
fs
sti
and
sahf
push
ss
imul
sub
add
sub
dec
ficompl
mov
or
aaa
int
rcr
add
pop
sub
jmp
cmp
inc
pop
push
jns
test
fcompl
dec
cmp
jb
push
or
repnz
jb
adc
or
pop
adc
mov
xchg
or
inc
xchg
add
mov
cmc
mov
mov
add
pop
ret
mov
add
mov
inc
adc
mov
das
sbb
das
dec
xorb
add
test
mov
repz
je
xor
push
in
pop
mov
outsb
imul
push
inc
test
mov
popa
in
enter
in
jnp
add
jg
pop
inc
sbb
in
xorb
jl
pop
mov
xlat
push
loopne
or
popa
in
mov
rol
xor
pop
cs
sar
dec
pop
out
fiaddl
popa
imul
inc
pop
push
test
movups
shll
pop
jge
cmp
jne
js
loope
jmp
clc
add
dec
dec
lods
adc
push
sbb
push
jae
cmp
add
and
test
and
adc
pop
ret
shlb
cld
ja
adc
shlb
rclb
push
mov
je,pn
xor
push
jmp
add
mov
movsl
lock
insb
cmp
mov
shrl
add
arpl
rcr
xor
movsb
sbb
sub
movsl
jne
test
adc
pusha
or
xchg
orl
int
lret
cmpb
or
and
repz
or
or
xor
jb
lahf
jg
stos
in
jae
push
nop
inc
add
mov
inc
sub
dec
pop
out
imul
adc
inc
inc
jae
xor
pop
mov
inc
xchg
sti
mov
pop
iretw
cmp
push
push
mov
pop
ljmp
js
les
or
lea
rcrb
inc
cmp
sahf
in
cld
pop
jp
adc
add
ret
je
inc
enter
dec
push
cwtl
shrb
dec
cltd
push
pop
add
push
sbb
push
mov
rcrl
push
push
pop
dec
loop
mov
daa
mov
inc
sbb
rcrb
call
or
push
sbb
inc
sbb
xor
popa
and
push
xchg
dec
sbb
mov
jb
mov
adc
inc
divl
mov
jecxz
sqrtps
sbb
fldenv
jl
add
cmc
sarb
mov
push
sbb
in
inc
push
adc
xchg
fwait
hlt
sbb
push
call
lcall
or
lock
sbb
xchg
dec
mov
int
mov
push
outsl
mov
jne
mov
mov
sbb
enter
adc
flds
push
shrl
push
in
scas
add
jnp
out
or
int3
roll
rorl
out
ss
pop
dec
cmpb
ret
in
lods
or
stos
mov
dec
rolb
cmp
sub
add
lea
lock
jmp
xchg
imull
dec
cmp
clc
dec
xchg
inc
dec
push
xor
adc
and
rorb
enter
daa
mov
adc
mov
stos
cli
mov
add
sbb
aam
daa
insl
or
pop
dec
xchg
rorb
cmc
push
sub
or
fadds
loop
dec
adc
cmpl
xchg
inc
add
inc
das
or
cmp
xchg
jae
xlat
and
aaa
and
sub
pop
loopne
pop
mov
adcl
les
sbb
lret
or
push
sti
subb
test
sub
inc
cmp
cwtl
in
imul
mov
nop
push
add
sub
push
or
lock
jge
dec
xor
imul
jnp
and
sbb
push
aas
pop
cmpsl
std
jb
jg
push
cmpsb
adcb
mov
in
dec
fsts
add
daa
jge
dec
rol
decb
add
pop
inc
xor
daa
push
insl
rolb
adc
mov
mov
and
mov
imul
dec
ret
popa
mov
push
push
mov
jne
jge
shlb
sar
push
adc
mov
cmp
adcb
xchg
lahf
icebp
sbb
jo
incl
push
push
and
lcall
pop
add
push
mov
pop
and
inc
add
push
sbb
fildl
adc
push
push
addr16
pusha
rcll
push
push
push
or
nop
dec
lods
adc
or
out
lea
add
push
dec
adc
or
jae
call
fidivs
fisttpll
notb
xchg
mov
cmpb
loopne
dec
push
mov
cmp
bound
rclb
popf
dec
rcrl
lds
cmp
mov
mov
dec
mov
xor
hlt
das
jg
stc
inc
in
xchg
add
jae
pop
push
inc
push
xchg
mov
pop
loopne
in
push
jle
xchg
sub
cmp
push
cmpsl
add
in
push
add
pop
mov
pop
sub
rolb
fs
nop
fists
sbb
fnstcw
add
or
ds
dec
push
sbb
cmp
add
or
movsb
sbb
xor
imul
test
adc
jge
push
fcompl
cld
push
movsl
cmp
in
xchg
mov
faddl
popf
bound
popf
pop
adc
mov
xor
add
sarl
push
cmp
es
das
mov
inc
mov
pop
mov
push
sub
mov
push
mov
jle
fildl
add
js
mov
shr
or
lret
adc
add
into
je
or
or
leave
sbb
add
xlat
loop
mov
mov
push
and
cmp
aam
cmp
mov
jecxz
adc
dec
pop
and
sbb
jno
test
push
sti
rcrl
or
mov
xchg
test
fcoms
enter
test
push
xor
inc
fs
ret
into
pop
mov
mov
jmp
dec
xlat
pop
jnp
inc
or
mov
xchg
cmp
add
mov
inc
xor
pop
jo
test
movsl
sbb
scas
pop
int3
daa
add
or
mov
add
out
dec
jle
or
out
and
mov
adc
int3
jg
nop
jo
or
dec
pop
mov
daa
clc
rclb
pop
stos
pusha
js
pop
ss
or
pop
add
in
inc
dec
movsb
xor
movsb
adc
std
inc
aam
xor
jmp
cmp
and
or
sub
rclb
push
inc
movsl
mov
xchg
xor
xor
sbb
and
lcall
push
pop
js
loopne
ficomps
out
push
add
loope
xor
adc
aas
movl
adc
sub
stos
adc
push
sub
dec
mov
push
jecxz
hlt
pop
das
cwtl
icebp
std
add
movsb
mov
or
sbb
and
adc
mov
test
iret
xchg
dec
in
mov
les
push
jne
mov
pushl
hlt
rclb
inc
push
push
inc
sbb
out
daa
and
mov
test
scas
cmp
mov
sysexit
inc
andl
loopne
aas
cmp
lds
clc
sti
jb
or
push
movsb
aam
cs
bound
ret
dec
dec
push
push
rorb
je
outsb
or
xor
mov
inc
pop
adc
bound
lods
popa
push
psrlw
mov
andl
arpl
mov
mov
outsl
push
inc
loopne
js
pop
dec
jg
mov
add
stos
mov
mov
sub
fdivl
mov
jmp
or
cmp
and
sub
inc
insl
cmpb
xlat
mov
sub
jbe
add
sbb
push
fcomi
lods
xchg
xor
ret
hlt
or
int
loop
stos
rolb
cmpsl
push
in
je
or
or
movzbl
rclb
gs
pusha
sub
stos
mov
insb
cmp
sub
and
xchg
ret
or
sub
sub
add
and
add
jns
push
xchg
pop
rcrb
inc
pop
xlat
jp
fisttpl
pop
addr16
lock
mov
aas
or
scas
lret
loopne
dec
dec
shlb
adc
iret
inc
sub
out
or
adc
pushf
add
sub
add
test
lahf
mov
sub
push
sbb
test
jecxz
add
pop
xchg
cwtl
mov
or
push
arpl
popa
dec
test
dec
bound
dec
lret
adc
sbb
or
fwait
add
pop
out
hlt
rorb
lods
shr
push
aaa
enter
jne
notl
push
je
out
iret
mov
or
je
mov
sub
push
popw
mov
inc
inc
shrb
fs
add
mov
clc
xchg
rolb
xor
push
sbb
pushf
std
test
aad
and
pop
pop
js
mov
js
jo
lret
divb
insl
pop
mov
mov
loope
mov
adc
mov
outsl
sub
jecxz
pop
mov
popa
pushf
jl
pop
gs
inc
test
hlt
jp
ficoms
mov
pop
cmp
lock
push
sbb
and
pop
push
mov
nop
nop
popa
aas
jbe
orb
popf
mov
stc
push
mov
and
and
or
into
test
mov
mov
lea
or
mov
lcall
and
test
xchg
push
mov
insl
jmp
fwait
sti
lret
shl
cmp
or
jae
dec
mov
sti
jge
mov
test
in
or
js,pt
pop
cmpb
sub
es
test
jnp
rorl
adc
insb
push
push
xor
pushf
and
push
aam
inc
fiaddl
jl
jnp
add
xor
loope
popf
mov
mov
add
sub
sub
sbb
je
sub
cmpsl
iret
add
in
sub
adc
pushl
jl
jno
movsl
loopne
mov
pop
or
or
fs
mov
dec
jp
and
sbb
add
loope
sti
pop
cld
cld
or
rep
mov
imul
adc
mov
dec
jle
mov
loop
cld
jns
dec
or
push
add
into
fisubrs
stos
xchg
das
add
enter
test
je
xor
out
cmp
cmp
jbe
and
adc
push
mov
mov
cmp
sub
cs
mov
loopne
and
je
inc
pop
cmp
mov
jb
mov
pop
setg
sbb
sbb
rorl
push
or
adc
sub
cwtl
add
mov
xchg
xor
mov
sbb
adc
inc
sbb
jno
jl
stos
movsl
pop
pop
in
mov
jge
sahf
mov
and
mov
mov
ret
push
inc
in
pop
pop
mov
xlat
nop
mov
or
sub
mov
cmp
mov
inc
lret
rcll
and
test
in
jns
gs
lret
jae
xchg
sar
mov
cs
cmp
orb
ret
hlt
les
mov
or
push
mov
cwtl
out
orb
or
mov
clc
sbb
inc
xchg
jle
lds
pop
jae
and
fdivs
and
inc
add
jb
cs
lret
jp
mov
push
mov
gs
or
pop
daa
rcrb
xor
pop
out
rcll
push
lods
and
test
adcl
pop
or
jns
jo
or
repnz
lahf
scas
int
push
dec
js
mov
push
xchg
mov
loop
cli
or
jp
je
pushl
fdivr
mov
adc
xor
rcl
dec
test
sbb
add
dec
fmuls
fs
push
dec
sar
rolb
add
int3
adc
xchg
mov
or
pop
add
push
and
adc
or
and
xchg
mov
stc
sub
push
cmp
push
mov
or
dec
pop
xor
and
fmull
lret
jl
or
pop
cmp
nop
jne
sahf
aad
enter
or
mov
subl
mov
adc
push
aaa
xor
pop
inc
je
add
push
dec
or
in
lods
mov
or
pop
mov
jb
cs
cmp
mov
or
inc
inc
mov
or
je
data16
test
mov
jne
cmp
pushf
sub
inc
adc
lock
sbb
xor
pop
mov
or
lahf
movsb
mov
push
and
mov
adc
fcmovne
xor
add
int
out
movzbl
add
jle
aaa
sbb
lahf
int3
popl
cli
pop
lods
add
mov
mov
insl
dec
adc
mov
lret
xor
push
push
or
or
inc
dec
outsb
lock
loopne
inc
push
add
inc
adc
cmp
jg
mov
inc
xchg
push
or
push
add
out
je
sub
adc
pop
cmpsl
adc
cmp
push
and
adc
xor
std
mov
hlt
cmp
jge
jle
add
pop
jbe
push
jg
pop
sarb
addb
xor
pop
jmp
push
or
leave
std
push
arpl
sub
jne
inc
inc
jmp
inc
fs
dec
pop
cmp
sbb
xchg
push
add
add
cmpsb
ret
mov
xchg
sbb
test
inc
dec
adc
xchg
repnz
scas
test
sub
xorl
scas
dec
dec
sarl
stos
push
mov
push
call
js
or
lods
ret
repz
add
and
sub
dec
rclb
call
pop
and
push
bound
jae
ret
aam
pop
in
mov
test
sbb
in
pop
inc
outsb
push
and
mov
shr
or
xor
push
mov
xchg
push
or
inc
inc
stos
rcrl
xchg
inc
popa
mov
repnz
subb
push
inc
mov
mov
push
adc
jne
push
lods
sub
cmp
test
cmp
cmp
adcb
addb
push
pop
add
add
push
mov
fdivl
and
les
rolb
enter
mov
jnp
jnp
in
aam
nop
nop
mov
js
test
push
add
push
imul
mov
mov
clc
or
je
mov
jl
or
outsl
inc
jns
int
ljmp
arpl
pop
cs
ret
jp
mov
and
aad
mov
loope
mov
pop
mov
andb
or
mov
mov
and
rorb
scas
or
adc
adc
mov
adc
in
leave
out
mov
adcb
nop
hlt
leave
rolb
mov
xchg
iret
enter
push
xchg
add
mov
mov
push
xchg
or
in
and
test
call
ret
jne
lds
xor
adc
cmp
flds
mov
jne
loope
inc
mov
jbe
inc
or
xchg
in
dec
es
inc
xor
inc
daa
insl
add
and
bound
mov
into
push
stos
xorl
mov
mov
sbb
pop
mov
fisubrs
ret
push
cmc
repz
mov
pop
and
sbb
mov
ret
je
mov
outsb
inc
cmpsb
push
jne
push
out
insb
rorb
inc
dec
xor
std
mov
imul
cmp
movsl
mov
xchg
jl
repnz
dec
add
outsb
mov
sub
pop
cmp
sbb
pusha
int3
ret
in
inc
fxch
mov
or
mov
test
mov
adc
xorb
mov
push
and
rorb
popf
jbe
mov
cmpsl
pop
or
rcr
push
dec
and
jle
fadds
jo
adc
subb
and
jle
dec
cltd
lea
add
fxch
adc
lds
in
mov
mov
outsl
push
mov
mov
pop
in
cmp
cld
cmp
add
lret
dec
pop
push
das
clc
xor
mov
stc
and
mov
shr
xor
adc
loopne
in
mov
dec
inc
popa
scas
cld
lea
test
ret
movl
call
add
aaa
negb
jmp
add
mov
xchg
cmp
push
in
jg
pop
and
or
inc
push
or
test
and
mov
lock
mov
das
xor
dec
add
add
psrlw
push
shll
gs
adc
mov
or
dec
scas
mov
push
push
mov
adc
inc
dec
lret
adc
dec
dec
scas
sub
jne
ret
add
cmpsb
push
cmp
clc
ffreep
jne
inc
aaa
fiadds
or
jb
cmp
cli
lret
dec
mov
xor
scas
mov
cmpsl
mov
andl
dec
ljmp
pop
and
adc
xchg
jne
add
les
das
mov
cltd
pop
movsb
mov
outsb
in
cmp
sub
mov
sub
popf
mov
test
femms
jmp
int
add
inc
leave
mov
add
jmp
mov
xor
cmp
shrb
jno
ds
push
mov
inc
inc
cmp
sbb
je
or
lea
jg
inc
mov
pop
ljmp
add
pop
ret
and
mov
dec
sti
pop
mov
push
push
add
fs
mov
fcomps
push
popa
adc
lret
sbb
loope
adc
adc
adc
lods
push
or
and
xchg
mov
lahf
sbb
add
add
xor
ss
popf
mov
xor
and
mov
or
adc
es
mov
dec
or
repnz
inc
ljmp
subl
inc
daa
and
push
push
mov
mov
mov
and
or
das
adc
mov
or
mov
sub
jmp
loope
jl
mov
loope
xorb
das
xchg
ja
push
pop
rorb
xor
push
adc
inc
jp
xorl
xor
mov
cmp
or
mov
sub
fists
sbb
dec
jl
dec
mov
ss
loopne
movups
ret
popa
mov
or
xchg
fs
pop
jns
loopne
pop
dec
jb
and
cmp
push
rorl
mov
lahf
rcl
adc
and
pop
shl
pop
xor
or
jmp
xchg
leave
movsb
adc
sbb
test
dec
aad
xchg
dec
pop
sub
add
loopne
push
lods
sub
shrb
test
stos
add
adc
mov
jne
mov
mov
pop
fstps
sbb
sbb
sbb
mov
lds
test
push
test
cmp
cmp
add
add
in
mov
or
popa
orb
popf
mov
push
mov
xchg
add
xchg
pop
mov
js
lock
adc
mov
push
inc
push
pusha
ss
testl
and
loope
push
mov
or
test
fsts
sbb
push
mov
test
add
aad
mov
add
shrb
mov
clc
imul
sahf
int3
dec
mov
jle
shrd
mov
lods
xchg
add
mov
daa
push
sahf
xchg
fnstenv
stc
sub
call
mov
lret
insl
or
fs
nop
daa
xchg
and
push
cwtl
sub
push
sti
and
pop
lret
inc
inc
xor
sub
mov
lret
push
mov
pop
outsb
xchg
mov
rcrb
jmp
jbe
fwait
mov
add
push
mov
push
data16
xchg
or
xor
and
xor
gs
xor
int3
in
jge
add
and
mov
mov
mov
push
lea
lea
jl
pop
dec
inc
or
dec
movsb
loope
push
js
adc
lods
jbe
push
push
push
xchg
push
adc
test
nop
inc
dec
adc
mov
sub
sbb
xor
xor
rcrb
fildl
inc
pop
sbb
push
and
es
mov
push
or
pop
stos
push
pop
in
scas
fstl
aam
dec
add
scas
inc
les
pop
add
xor
adc
inc
push
movsl
lret
mov
cmpsb
clc
scas
add
adc
xchg
in
inc
dec
xchg
jo
cmp
rclb
stc
out
add
xor
push
mov
or
adc
lcall
cld
hlt
jbe
mov
sarl
je
adc
cmp
stos
popa
std
mov
cmp
dec
iret
je
popf
enter
cmp
pop
bound
stos
jmp
jmp
push
call
sub
and
inc
push
and
lock
mov
stos
xchg
adc
lcall
lcall
push
mov
mov
xchg
xlat
sub
mov
fsubrl
and
enter
icebp
push
inc
jnp
mov
xchg
pop
cld
adc
adc
adc
xchg
or
sbb
scas
mov
sub
or
add
mov
es
adc
das
adc
in
mov
add
xchg
inc
repnz
pop
pop
sbb
sub
adc
mov
aas
mov
fcoms
inc
sub
mov
cmc
js
mov
mov
mov
dec
je
or
and
cmp
xorl
adc
mov
gs
icebp
push
inc
jmp
inc
in
jp
and
inc
aam
jecxz
or
js
loope
sub
push
lcall
imul
push
cmpsb
rolb
adc
fsubs
xor
jp
inc
sbb
out
and
lret
jne
push
std
mov
cmp
movsl
push
lret
fstpl
xchg
test
xchg
inc
fstps
enter
call
sbbl
imul
je
movb
nop
inc
sub
sbb
or
rclb
cmpsl
push
lock
xchg
xor
movsl
dec
xlat
xor
std
add
sbb
sahf
movsl
mov
or
adc
orl
pop
and
test
mov
sub
dec
aas
or
sub
mov
sbbl
inc
rol
and
jne
lahf
nop
pop
sbb
sub
mov
test
xchg
add
mov
cmp
push
mov
inc
addr16
push
repnz
es
push
add
push
popf
push
nop
fdivrp
mov
lret
cmp
push
sub
push
add
inc
inc
jmp
add
push
cmp
mov
pusha
gs
xchg
xchg
ds
pop
or
das
mov
cmp
add
scas
xor
je
or
push
or
lods
mov
mov
add
gs
add
adc
in
pop
jne
mov
fxch
xor
inc
cmp
and
mov
dec
jno
jmp
roll
int3
mov
ds
mov
adc
lock
daa
decl
inc
adc
pop
sbb
fnstenv
inc
adc
stos
mov
adc
hlt
jl
pop
cmp
dec
xchg
lea
cmp
cmp
push
bound
rcr
nop
xor
mov
add
add
shl
mov
add
dec
stos
mov
add
ljmp
out
push
pop
push
jecxz
gs
fisubs
loopne
mov
push
adc
test
ljmp
ret
xchg
xor
mov
sub
and
push
mov
xchg
push
xor
pop
mov
out
add
nop
mov
push
inc
pop
mov
out
jbe
dec
test
and
aam
xchg
mov
add
scas
lock
mov
pop
mov
imul
inc
inc
jp
add
leave
cs
push
sbb
sub
add
jo
jo
repnz
pop
imul
add
push
and
xor
pop
push
movb
xor
sub
sbb
jo
xor
lods
into
pop
inc
mov
pushf
std
sbb
rol
mov
jge
and
hlt
xor
inc
xlat
pop
cmp
fwait
pop
mov
add
jo
hlt
jg
mov
xchg
mov
dec
mov
in
push
xor
adc
xchg
mov
or
cmc
sbb
add
pop
loop
inc
data16
pop
pusha
sub
ss
aaa
adc
sbb
pop
inc
push
bound
stc
outsl
fidivrs
lret
sarl
and
pop
ficompl
ja
xchg
ja
xchg
pop
push
outsl
push
or
dec
loop
mov
insb
xchg
aas
shll
rcll
pop
or
push
push
sbb
push
inc
nop
test
in
std
mov
test
aam
mov
inc
sub
push
mov
sub
xchg
jl
and
push
mov
in
sbbl
clc
or
mov
lcall
sbb
adc
mov
sti
je
push
stc
push
mov
push
jl
push
sbb
jbe
push
mov
xor
mov
xor
fcoml
daa
movsl
jo
addr16
push
sbb
daa
ss
push
push
and
leave
push
pop
pop
leave
shl
xor
insb
mov
mov
push
iret
cmp
xor
add
push
in
add
pop
pop
sub
push
push
stc
and
shll
pop
or
inc
adc
idiv
xchg
punpckhdq
je
xchg
call
cmp
adcl
add
push
push
xor
xor
psubsb
sub
lods
dec
add
add
add
adc
in
fcomps
int3
call
lret
push
dec
inc
push
ret
push
mov
xor
pusha
call
mov
pop
enter
lods
mov
xchg
dec
popf
or
mov
adc
mov
mov
jge
ret
mov
mov
lods
shrb
xchg
mov
inc
movsl
inc
int3
into
jp
sarb
push
lea
push
push
gs
push
dec
push
cltd
push
push
inc
pop
sbb
sbb
sub
aam
fsubrp
push
jns
je
xchg
cmpsl
subl
loopne
inc
push
in
sbb
push
iret
sbb
aas
aad
push
inc
int
in
pop
push
and
cmp
push
adc
mov
push
ljmp
inc
or
int
mov
mov
hlt
dec
cmc
ret
imull
jge
mov
test
mov
mov
test
adc
jl
aad
adc
mov
mov
das
rcl
push
jo
gs
loopne
loopne
cmc
add
or
or
or
cmp
insl
adc
sbb
xor
andl
inc
imul
icebp
jne
fcmovnbe
jo
pop
or
adc
loop
fucomip
xor
pusha
mov
rol
mov
ror
xor
shr
xor
fdivr
mov
mov
rol
xor
shr
xor
add
add
add
mov
jl
or
mov
fs
or
out
mov
or
and
xor
add
add
sbb
pop
aam
sub
jge
add
push
add
cwtl
repnz
lahf
scas
pop
cli
fisubrs
jge
xor
and
and
or
xchg
push
aam
sbb
xor
imul
sub
fdivr
outsb
movsb
push
or
push
or
xlat
ret
pop
inc
in
rcl
add
add
dec
subl
movsb
jb
rcl
call
call
dec
xor
sub
aaa
and
cli
mov
rol
rol
movsb
imul
mov
and
cmpsb
mov
call
in
shl
sub
dec
xor
lahf
push
cmp
cmp
mov
or
add
sahf
rorb
sbb
fadd
inc
push
lock
and
call
jb
xor
loopne
in
cmp
movsb
in
loopne
cmp
imul
rcr
jno
xchg
aam
pop
push
testb
sub
jo
int3
ds
jo
add
in
push
xor
mov
mov
and
and
or
stc
into
add
and
jbe
xor
push
test
add
cmp
rcrl
jo
ret
push
jo
fimuls
enter
mov
rorl
lcall
sahf
stc
inc
adc
push
loop
mov
lock
mov
filds
cltd
sub
fcoms
es
jbe
call
in
sti
rcr
lretw
push
clc
jp
push
and
mov
inc
cmpsb
imul
popl
nop
in
shlb
lret
ret
int3
inc
mov
rorl
lds
cli
stos
inc
sub
adcb
adc
cmp
sub
shll
in
in
fstps
shr
rolb
add
adcl
sub
jge
shlb
es
lcall
movsb
imul
call
add
nop
xchg
inc
push
jb
push
xorb
dec
cmp
out
in
push
dec
mov
or
inc
sub
xchg
pop
push
xor
pusha
add
orl
push
dec
xorb
pop
cmp
xor
pop
dec
pop
pusha
push
dec
xchg
mov
cmpsb
rcrb
push
add
or
push
or
mov
imul
inc
pusha
push
jb
add
pop
mov
mov
or
adc
add
fs
inc
mov
mov
xchg
or
and
xchg
cmpsb
dec
icebp
stc
stc
stc
add
cmp
pop
dec
mov
xchg
inc
mov
negb
dec
add
or
fcoml
cmpsb
imul
add
daa
rclb
and
sub
and
adc
adc
pop
es
fstpl
dec
jo
out
pop
add
sub
mov
mov
or
out
mov
add
lret
jb
pop
lea
mov
add
sub
lea
pop
xor
jg
push
int3
adc
sub
sahf
lods
jmp
and
dec
ret
out
rorb
or
or
mov
adc
fcmovb
aam
int
mov
inc
jae
mov
and
insl
sub
lret
loopne
lea
jmp
ljmp
sub
sub
pop
add
ret
dec
or
mov
dec
jne
pop
cld
adc
lock
aas
mov
sub
mov
push
aam
adc
or
fs
aam
mov
fcomp
jle
add
inc
add
jae
push
pop
fadds
rep
cmc
cmp
cmpsb
ljmp
scas
or
push
mov
outsl
mov
mov
ror
mov
notl
cmpsb
mov
adc
mov
mov
test
orb
cs
sarb
dec
sbb
dec
sbb
fdivl
inc
inc
add
dec
lea
mov
xor
test
movsl
mov
movsl
xor
xchg
outsl
fsubs
stc
sub
mov
push
cmp
adc
pop
pop
xchg
xor
and
pop
pop
lea
mov
add
cmp
xor
add
fistpl
lea
out
sbb
push
rorl
push
inc
inc
and
std
pop
stos
rclb
jb
outsl
lock
pusha
leave
or
mov
dec
ljmp
dec
mul
out
clc
add
jnp
mov
lahf
je
jb
addr16
add
dec
adc
jbe
add
insb
outsl
jne
pop
cltd
lds
outsb
enter
mov
mov
xor
in
adc
adc
or
cmp
add
mov
ficompl
or
ljmp
add
sub
cmpsl
mov
dec
inc
inc
lahf
sub
adc
cmpsl
inc
and
pop
ret
andb
adc
cmp
add
and
sub
mov
dec
divl
xlat
cmpsb
inc
jno
nop
xchg
add
cmp
data16
push
add
lcall
sub
sub
aad
add
loop
inc
cmp
in
sbbb
in
bnd
jl
sbb
test
sub
push
ret
xor
adc
mov
xchg
xchg
fisttpl
and
jle
es
addl
jbe
pop
push
in
add
inc
arpl
or
xor
ss
push
insb
and
and
movsb
andl
or
and
mov
jp
sub
inc
inc
ss
into
push
and
repnz
call
or
mov
xor
push
in
ret
ds
inc
icebp
dec
shrb
add
cs
repz
movsb
pop
push
sti
clc
lret
out
add
dec
xchg
xor
and
repnz
shll
loope
cld
and
and
enter
adc
dec
mov
sbb
jg
sub
cmp
hlt
push
and
repz
or
pop
inc
inc
test
xchg
xchg
rol
loopne
dec
adc
testb
mov
jo
mov
and
jne
pop
sbb
loopne
cli
inc
shrb
pop
cli
add
jae
stos
or
test
inc
jmp
lea
repnz
adc
shr
frstor
in
dec
js
lock
cmpl
arpl
dec
or
cld
lods
mov
push
add
mov
xor
push
cmp
clc
outsb
je
rclb
fstl
xor
sbb
jg
push
leave
loop
add
sub
sub
xor
sub
lret
sub
push
sar
lds
cmp
je
cmp
jbe
jns
popf
xor
jnp
jmp
jbe
mov
xor
xchg
sbb
ret
xor
or
inc
mov
and
xchg
xchg
out
and
push
testl
dec
popa
mov
clc
repz
in
inc
loope
or
mov
leave
sub
mov
mov
sbb
cmp
push
dec
or
jbe
push
les
cmp
mov
dec
add
push
add
sub
and
adc
push
je
fsubrl
in
adc
cmp
sbb
cmp
inc
xor
lea
or
pop
add
sbbl
push
or
outsb
add
pop
mov
inc
or
fucomip
mov
pop
or
andb
sbb
es
xchg
xor
in
mov
sbb
bound
dec
push
loope
fs
and
jb
jmp
push
repnz
mov
inc
pop
mov
nop
sub
and
xlat
push
lcall
sub
sub
mov
mov
mov
cmp
sub
call
hlt
or
ret
push
imulb
ljmp
aaa
testb
test
and
pop
fiaddl
cmpsl
jmp
and
ja
mov
jbe
adcb
pusha
dec
push
dec
fisttpll
mov
inc
and
or
aam
add
inc
or
mov
cmpsb
outsb
popf
xor
or
sbb
addr16
dec
fiadds
mov
mov
mov
xor
sarl
mov
nop
fiadds
roll
dec
imul
pop
mov
das
sahf
push
test
cs
sub
add
xlat
push
mov
fdiv
insl
add
push
adc
push
xor
jp
add
mov
push
inc
push
ret
push
adc
lahf
fs
lret
and
mov
pop
mov
dec
push
inc
mov
cmpl
push
rolb
sbb
loope
xchg
shrb
cmp
xchg
mov
je
sub
clc
daa
rclb
add
movsb
sub
lods
pop
jp
fs
push
xorb
pop
andb
testb
inc
add
or
add
inc
dec
adcb
adc
cmpsl
jne
mov
enter
hlt
fsubrl
fsubrl
pop
cmp
or
mov
cmc
sub
out
scas
je
cmp
es
in
lret
sub
lea
jg
or
jbe
jl
mov
cmp
add
dec
add
sub
shlb
loope
aam
cmp
xor
pop
push
icebp
scas
cld
inc
push
add
sub
push
jg
fisubrs
pop
inc
ss
cmp
popf
stc
data16
in
and
cmp
ja
dec
popa
cmp
jae
ss
jb
loopne
test
loope
out
pop
sti
add
mov
sub
into
mov
inc
mov
lods
pusha
hlt
pop
or
jmp
ja
or
jmp
aam
ret
mov
ret
pushf
cld
fsubr
data16
roll
mov
fisubs
jge
lret
xchg
dec
xchg
test
jbe
mov
sub
lahf
mov
js
mov
mov
test
insb
fistps
pop
inc
dec
xor
fadd
jmp
pushf
sbb
test
int3
in
sbb
movsl
enter
leave
mov
inc
or
add
add
pop
add
dec
jg
not
sub
push
push
sbb
fisttpll
mov
or
mov
fnstsw
inc
cmp
mov
scas
movsl
inc
mov
lock
mov
nop
nop
sub
mov
mov
adc
mov
pop
cwtl
xor
mov
jne
or
or
or
push
xlat
jl
idiv
addl
mov
repnz
adc
jae
mov
xor
push
dec
ret
int
iret
add
add
imul
sbb
fnstcw
jge
je
adc
jns
jge
pop
jl
pop
push
adc
shr
add
push
inc
cmp
jl
pop
and
sbb
lods
cmp
ja
ljmp
xchg
aam
xor
call
test
sbb
xor
mov
adc
out
or
jle
push
fcomps
sbb
cld
xor
jle
push
ret
push
das
add
mov
jl
xchg
jnp
in
shl
add
mov
mov
das
nop
dec
mov
aaa
pop
shlb
jno
lahf
pop
call
pushf
add
sbb
cs
in
movb
push
fdiv
cmp
cmp
sbb
insb
pop
mov
lea
stos
jae
les
testb
jbe
imulb
jne
push
jle
inc
aam
ss
mov
pop
enter
lock
xor
mov
hlt
or
mov
mov
shrb
int3
mov
ljmp
add
sarl
jmp
add
and
shl
js
incl
lret
mov
fidivrl
cmp
jl
ret
add
imul
dec
jmp
jge
push
and
cmp
mov
lea
add
dec
mov
pop
add
push
sub
in
or
pop
movsl
js
scas
add
jecxz
add
push
nop
or
adc
jne
insb
push
fnstsw
and
mov
pop
add
rorl
jmp
stos
call
push
sub
adc
lret
xor
add
and
pop
dec
loopne
jmp
sub
pop
cmpsl
call
adc
mov
je
rorb
and
or
mov
mov
sbb
sahf
push
mov
jle
push
xchg
shrl
out
roll
xlat
cs
cmp
mov
icebp
cmp
xchg
lea
daa
andb
or
lea
mov
cld
add
pop
mov
test
ja
jle
mov
or
add
dec
in
scas
or
pop
push
pop
add
fimull
arpl
xchg
cmpsb
adc
mov
pop
enter
or
dec
in
xor
dec
and
push
sub
xchg
jo
pusha
pop
adc
xchg
ds
mov
jns
in
es
mov
dec
addl
ret
xchg
fisttpl
pop
or
pop
add
into
push
test
xor
aaa
inc
adc
xchg
xorb
dec
sub
or
mov
stc
mov
adc
fmuls
xlat
push
add
jl
push
loop
jns
fdivs
ss
jmp
push
js
insl
incl
mov
xor
call
mov
loopne
and
mov
mov
and
adc
out
daa
xchg
xchg
jge
mov
dec
sub
movsl
sub
mov
push
dec
mov
push
ret
adc
mov
scas
jno
jecxz
pushf
jbe
mov
pusha
cmp
loopne
addl
stos
cmpsl
aad
push
push
jmp
sbb
sbb
jmp
pop
mov
lcall
loop
cmc
mov
insb
adc
inc
mov
fimuls
clc
xchg
xor
push
mulb
push
sbb
mov
popa
fmull
pop
and
adc
lods
pop
ret
mov
sbb
pop
jmp
rcl
pop
xor
lea
inc
pop
push
or
push
mov
mov
cmp
and
sub
outsl
or
push
mov
add
fwait
loop
lea
stc
jmp
imul
and
sub
pusha
shlb
sbb
adc
dec
je
cmp
or
jo
adc
or
enter
or
notb
sub
mov
cltd
pop
out
cmp
push
mov
mov
dec
mov
stos
push
cmp
sahf
adc
push
mov
inc
js
sbb
or
or
push
pop
cltd
fisubrs
sub
pop
inc
mov
test
aam
adc
ja
mov
push
gs
mov
lods
cmp
sbb
and
into
dec
jno
mov
and
and
clc
inc
xchg
xorb
mov
xor
push
fistpl
sbb
sbb
mov
outsl
or
mov
jo
inc
xor
jne
push
shll
scas
rcll
ret
mov
clc
je
adc
test
ss
scas
loope
test
pop
test
pop
andb
ret
cwtl
inc
loopne
or
pop
les
cmpl
jge
clc
sub
or
out
ficompl
icebp
shr
mov
pop
push
pop
push
push
push
sbb
mov
cwtl
push
mov
pop
push
adc
int
or
fcompl
int3
inc
push
shll
push
and
aam
pusha
ja
test
loopne
add
mov
lods
aas
adc
jne
movsb
mov
cmpsl
cmpb
mov
push
push
sbb
jno
cld
pop
push
inc
roll
sbb
and
mov
imul
or
adc
add
jo
out
cmp
jle
js
pusha
orl
stc
fimuls
mov
dec
cmpsb
icebp
movsb
mov
jne
enter
push
ret
cld
mov
shll
mov
or
sub
rorb
push
xchg
jo
push
lret
movsl
insl
pop
pop
push
cmpsl
add
mov
jmp
ret
xchg
jne
repz
add
pop
adc
pop
ret
arpl
imul
aam
dec
in
insb
xor
inc
push
or
or
fmull
gs
dec
pop
addr16
or
cmpsl
rcrb
sub
inc
jo
jne
addl
mov
fwait
pop
xlat
in
cmp
ret
xlat
jmp
push
pop
cli
out
sahf
dec
sub
outsb
or
insl
insb
cld
sub
out
testl
and
out
push
add
add
add
cmp
test
jo
push
cli
or
cmp
je
push
in
jg
push
sub
aaa
sbb
adc
jmp
pop
movsl
dec
repnz
cmp
xchg
jmp
sub
sub
push
adc
add
imull
add
mov
sub
push
es
rcr
popa
adc
or
or
dec
sti
insl
je
in
lock
cmp
push
cmp
out
aas
mov
push
pop
mov
push
add
add
loopne
xchg
cmp
jae
dec
and
icebp
jmp
jecxz
pop
add
xor
lock
ret
adcl
dec
pop
mov
push
add
xorl
dec
pusha
dec
inc
dec
hlt
sbb
add
mov
roll
fisubrs
xor
movsb
rcl
inc
and
push
pop
jne
push
pop
lcall
dec
sbb
xchg
hlt
push
push
mov
imul
sbb
or
inc
mov
orb
jo
sbb
movsl
test
ss
cmpsb
test
add
out
gs
mov
xor
xor
push
cltd
rorl
pop
mov
fistl
scas
rcrl
std
add
mov
aaa
xlat
ds
or
testb
or
fisttpll
add
repnz
or
inc
fiaddl
pop
cmpb
leave
sub
lea
push
sbb
xchg
test
xchg
sahf
orb
bswap
jno
add
jo
sub
lds
sbbb
shrb
and
clc
ds
add
sbb
jmp
test
dec
pop
pop
xor
push
mov
and
add
or
adc
jecxz
inc
bswap
out
std
cwtl
and
inc
mov
cltd
xor
rcr
fcompp
mov
xchg
sti
adc
push
pop
insb
jl
pop
sbb
jne
cmp
jne
push
ljmp
push
adc
add
sbb
and
mov
movsl
mov
iret
jne
dec
mov
sbbl
cmp
loopne
lock
jmp
sbb
xor
mov
sbb
jae
jl
cmpsb
push
and
xor
xor
sbb
and
mov
sti
dec
jmp
loopne
xchg
cmp
inc
in
notl
and
sub
xchg
test
pop
rcl
popa
mov
xchg
cmp
jo
mov
mov
cmp
and
mov
arpl
cwtl
or
in
pop
inc
or
inc
add
or
repz
add
pop
cmp
dec
sbb
cmp
out
out
lcall
cltd
jmp
sbb
outsb
dec
rol
lret
inc
or
lods
dec
pop
sbb
in
and
call
fistps
sub
push
xor
enter
and
movb
xchg
mov
mov
sub
into
and
add
cld
loope
lock
arpl
popf
xchg
xor
jo
sti
pusha
flds
pop
ja
pusha
dec
adc
adc
sub
or
adc
cs
shr
clc
mov
pop
push
outsl
sbb
cmpl
adcb
lcall
add
aas
scas
xchg
sbb
ret
test
xor
cmp
mulb
sbb
dec
mov
sbb
lock
jae
mov
dec
adc
fldt
sti
push
push
inc
test
add
cmpsl
xchg
xor
scas
jl
pop
insl
mov
mov
add
aad
pop
cmp
or
stos
scas
jbe
jns
push
ds
popa
test
add
push
subl
pop
xor
and
in
or
add
or
adc
sti
push
and
mov
and
mov
mov
pop
cmp
add
lods
pop
in
pop
test
dec
dec
pop
mov
push
cwtl
dec
in
punpcklbw
pop
ficompl
xchg
cmp
or
js
in
jmp
dec
xor
pop
mov
in
add
add
cld
inc
clc
dec
push
and
mov
mov
popa
inc
cmp
bound
and
sbb
xor
adc
popa
mov
mov
addb
fisubrs
fisttps
xor
cmp
add
jae
rolb
inc
add
pop
add
mov
add
mov
mov
stos
mov
lods
add
nop
cmpsl
cli
sub
xor
sti
pop
out
and
xor
repz
mov
or
cmpb
sar
jo
mov
jp
ret
ret
mov
sahf
jns
sahf
in
mov
pop
mov
ret
fisttpl
add
ficompl
add
xlat
add
out
fcmovnbe
or
mov
push
push
out
xor
aaa
jecxz
daa
hlt
rclb
mov
sub
loop
xor
out
jb
mov
loop
add
shl
jmp
mov
adc
pop
lods
scas
pop
inc
mov
mov
pop
sbb
fwait
add
insb
jbe
adc
mov
and
push
pop
push
lret
jo
push
lock
jp
add
dec
movsb
jbe
cld
pop
orb
mov
mov
jecxz
shrb
pop
inc
inc
inc
mov
pop
jb
cmp
das
sbb
lahf
imul
loope
fdivrl
outsb
xchg
sbbb
cmpl
loopne
pop
adc
jp
adc
out
jge
dec
insb
dec
add
daa
push
imul
push
cld
cmp
push
push
push
or
das
cmp
cmp
je
inc
xchg
je
mov
jne
fisubrs
aad
lock
mov
popa
in
push
xor
ret
ljmp
sub
iret
pusha
addb
dec
adc
andl
jmp
fistps
jne
je
jmp
or
push
xchg
and
push
cmp
out
jl
or
ret
inc
sbb
xchg
sbb
push
adc
jmp
inc
cwtl
mov
rorl
sbb
or
xor
icebp
jnp
neg
mov
bound
dec
mov
int3
or
sub
pusha
aaa
and
pushf
es
push
loop
jo
mov
dec
inc
pop
pop
and
pop
mov
rorb
add
arpl
popa
and
setg
jo
sbb
or
mov
jmp
daa
shll
dec
mov
shl
or
pop
inc
inc
mov
dec
sbb
insb
add
sbb
push
in
mov
fdivrl
adc
add
jmp
sub
add
stos
jle
push
aad
fnsave
jb
pop
push
pop
in
xchg
js
lahf
pushf
push
jge
cmp
lret
fs
push
push
push
js
push
push
jmp
fs
lds
sbb
sub
in
jne
pop
sbb
cmp
add
gs
push
arpl
jg
rcl
lds
cmp
jne
push
jno
sarb
xor
rcrl
orl
aas
loop
push
add
bound
jne
inc
xor
stos
adc
pop
dec
sbb
adc
shll
sbb
mov
les
ljmp
mov
push
add
adc
mov
mov
pusha
push
lock
rcrb
xchg
cmp
cmp
repz
xorb
push
push
push
jne
cld
js
cmp
mov
sti
xor
inc
out
rorb
arpl
cltd
sub
stmxcsr
jg
or
cs
or
pop
mov
andl
or
scas
dec
outsl
lock
filds
movq
movaps
lret
insl
mov
shlb
jle
xor
push
jge
int
rcl
lret
je
mov
lret
and
lret
or
jg
testb
ret
adc
jnp
mov
xor
cmp
out
fistpll
add
adc
push
add
adc
add
pop
outsb
fisubrs
repnz
roll
js
sarl
pop
jo
fst
addsd
int
add
sbb
push
fiadds
dec
sbb
push
inc
fisttps
setge
push
outsl
mov
and
ja
scas
rorb
mov
leave
xor
cmp
pop
incl
xchg
adc
dec
fmuls
adc
aam
lret
nop
pop
xor
ss
icebp
iret
or
ret
jge
mov
add
sbbl
xchg
setle
jmp
cmp
cvtps2pd
inc
jbe
sarb
outsb
das
or
sbb
pop
sub
or
sbb
fisttps
rorl
enter
mov
mov
mov
mulb
and
and
andb
hlt
cs
cmpb
push
inc
inc
sub
mov
cmp
cld
sbbb
xchg
fs
mov
mov
cmp
jne
push
or
mov
lea
pop
mov
mov
sub
cltd
dec
or
cwtl
push
out
add
adc
and
pop
lock
fmuls
push
sbb
pop
ret
arpl
or
popf
mov
addb
hlt
mov
dec
lock
push
cmp
hlt
mov
mov
lock
sub
sbb
das
stc
add
jge
xchg
jmp
push
mov
xor
xor
add
push
xchg
inc
imul
sbb
mov
outsb
mov
out
adc
adc
jne
inc
push
stos
pop
int
sbb
dec
xor
lcall
add
add
sub
adc
push
pop
mov
push
adc
pop
test
inc
pusha
and
sbb
cmovb
xchg
mov
pusha
imul
inc
inc
cmp
cmp
mov
outsb
or
rolb
xchg
xchg
cmp
arpl
dec
adc
rcrb
push
add
push
push
lret
in
loope
arpl
es
or
add
loopne
or
or
add
add
roll
stos
mov
xorl
imul
adc
xor
cmp
mov
scas
fadds
dec
push
rcrb
enter
sbb
sub
add
ret
xchg
shl
shlb
dec
fcmovnu
sti
dec
leave
sbb
or
or
inc
pop
cmp
xlat
in
mov
mov
dec
jg
rol
inc
inc
cmp
aam
lret
jne
pop
jmp
push
sbb
push
or
jmp
jnp
xchg
ret
dec
push
out
mov
mov
add
mov
ss
add
jbe
jne
jmp
dec
jae
jno
iret
seta
xor
add
jne
or
sbbl
cmp
fnstsw
loopne
sbb
or
push
jo
lods
hlt
cmc
and
push
and
jns
rcrl
and
adc
jne
nop
in
adc
lcall
sub
les
lea
adc
jmp
insb
ja
mov
mov
push
mov
pop
incb
dec
pop
jno
jmp
call
incb
push
into
add
shufps
and
xchg
icebp
or
fmuls
fdivs
add
add
xor
je
ret
js
jbe
jb
sti
outsl
sbb
loop
sub
add
jmp
mov
dec
mov
mov
dec
mov
mov
inc
or
lret
mov
jo
or
adc
ja
dec
push
mov
jmp
push
aam
push
cmp
sbb
enter
push
cmp
push
imul
ss
add
adc
inc
jp
push
xchg
push
cmp
jb
lea
sub
mov
add
mov
imul
cld
jne
mov
push
cmp
jne
data16
out
es
jne
call
in
push
lcall
lahf
divl
adc
push
dec
jmp
adc
jmp
jns
sahf
cmp
std
jmp
cld
cld
loopne
cltd
ret
pmaxub
xchg
ret
adc
cmp
in
push
pusha
or
cmc
push
movb
mov
ret
hlt
or
inc
mov
jle
repz
ret
jb
xchg
enter
je
adcb
xorb
mov
or
sahf
cmp
mov
and
inc
fiadds
aad
pop
mov
push
lahf
std
or
adc
or
pop
push
adc
cltd
dec
push
push
cmpsb
add
and
cmp
scas
loopne
or
outsl
loop
push
std
mov
sbb
stos
add
adc
push
and
into
adc
push
adc
fs
xor
add
add
in
dec
sbb
adc
cmpsb
loope
mov
add
and
sub
dec
cmc
jae
inc
fcoml
and
dec
pop
jle
push
push
pop
div
sub
sub
jb
push
test
cmpl
roll
clc
loopne
sbb
mov
jmp
clc
pop
adc
lock
mov
xchg
fcomps
std
dec
jns
pop
ret
cmp
loopne
add
push
push
fcoms
adc
adc
stc
adcb
add
and
sub
nop
xlat
loope
cmpsb
mov
push
or
icebp
dec
pop
add
ret
je
dec
push
sub
in
roll
imul
add
sbb
lret
sub
mov
pusha
lret
cmpsl
leave
dec
inc
mov
adc
or
push
ljmp
jg
lods
push
mov
inc
lea
lea
pop
pop
inc
push
adc
dec
cmpsl
int3
je
fstl
call
inc
jmp
cmp
jne
orl
jmp
and
jne
sub
shlb
xchg
adc
cmp
xor
dec
or
repnz
add
and
adc
neg
sub
insb
adc
pop
jne
dec
add
loopne
push
fldl
lds
ficoms
sub
lret
or
test
sti
push
sbb
lret
sub
jmp
test
mov
sub
cmp
sbb
in
ja
xor
add
cmp
jae
push
mov
jb
movsb
cmp
sbb
rcl
push
daa
and
dec
test
push
and
clc
aaa
mov
pop
fcomps
imul
add
jg
or
mov
sbb
add
push
xorl
or
or
sub
push
inc
mulb
mov
cmp
lds
and
push
hlt
add
into
mov
lcall
shlb
imul
xor
ss
aaa
push
push
adc
cmp
icebp
push
cmp
jmp
push
mov
das
mov
push
add
mov
daa
push
push
inc
push
push
pusha
inc
or
cmp
les
loopne
data16
jge
stos
mov
pop
add
mov
xchg
hlt
and
sub
test
jno
jbe
outsl
rorl
push
faddp
mov
push
pop
or
iret
data16
jne
idivb
rclb
cs
jns
jmp
lods
lods
sub
or
sub
adcl
sub
cmp
pop
mov
sbb
in
dec
cmp
out
popf
dec
push
arpl
je
hlt
xor
popf
test
cli
mov
or
call
testb
inc
mov
aad
and
rcrb
dec
mov
mov
jmp
sub
sbbb
inc
ja
xor
push
mov
addr16
push
repnz
push
jmp
xchg
sbb
add
dec
mov
jo
mov
repnz
push
push
jno
lock
in
cmpsb
int3
mov
rorl
ja
inc
bound
les
adc
and
test
adc
loop
xor
jmp
and
cld
mov
ret
pop
add
cmp
mov
push
pop
out
push
add
shrb
sub
push
jae
fwait
or
and
sbb
test
inc
mov
add
sub
or
pop
adc
fidivs
sub
fcoml
cmp
cmpps
incl
fucom
and
int
shlb
stc
sub
sti
in
lea
push
adc
push
pop
dec
ss
add
jle
cmp
lahf
mov
mov
sub
mov
jle
and
sbb
xchg
add
incb
mov
pop
mov
pand
fs
shll
push
inc
mov
cmp
cmp
push
insb
sbb
adc
add
add
pop
jmp
mov
adc
pop
inc
pop
sbb
cmp
imul
push
push
mov
mov
add
jecxz
lcall
xchg
call
push
fwait
data16
pminsw
push
jo
lret
popa
sbbl
xchg
and
mov
add
push
and
xchg
add
rcl
sbb
call
and
aam
or
dec
and
mov
loop
mov
inc
incb
sub
adc
lods
leave
sub
std
add
mov
pusha
dec
bound
rorl
imul
push
je
adc
xlat
shll
pop
loope
ss
sbb
adc
loopne
and
and
movsl
and
ss
mov
cmp
push
ja
ficomps
rol
movsl
int
xchg
inc
mov
xor
insl
push
dec
sub
pop
movsb
jmp
popf
sbbl
or
mov
dec
mov
add
fisttpll
pop
add
cmp
mov
ret
in
rorl
in
xor
repnz
sbb
mov
cld
pop
or
dec
pusha
out
mov
push
or
and
inc
push
add
jge
mov
inc
mull
popa
pop
je
push
imul
push
adc
scas
test
fisubs
test
cmp
popf
mov
rcrl
fisubs
popf
sub
add
pop
push
add
mov
fmuls
jnp
call
sub
push
cmp
addr16
neg
jb
xor
in
sbb
ss
jp
lods
stos
and
xlat
test
sbb
stos
add
push
cmpsb
fcompl
ret
enter
lock
push
pop
pop
push
mov
adc
mov
movsl
mov
test
xlat
movsl
shlb
cmp
in
jecxz
imul
jmp
push
pop
sbb
sub
jbe
gs
loop
int
insb
add
mov
mov
leave
mov
xor
std
adc
out
and
fistpl
loope
cmp
and
sub
push
icebp
fcomps
and
enter
cld
es
cmpsb
cwtl
add
lcall
or
pop
sti
test
add
cmp
xorl
mov
sbb
hlt
je
push
jbe
test
aam
xchg
add
xchg
ss
mov
sbbl
sbb
dec
sub
fistl
stc
sub
inc
shrl
ret
jge
pop
inc
pop
ds
andl
repnz
or
into
pop
add
inc
cs
and
sbb
fsubrs
pop
push
inc
int
test
sbb
pusha
adc
mov
push
push
pop
iret
xor
cmpsl
outsb
in
cmpb
fildl
add
mov
push
adc
jmp
cmc
add
loope
or
leave
mov
loop
bound
gs
jmp
pushf
adc
xorl
and
pop
jmp
out
jno
enter
and
in
dec
sbb
sbb
int
dec
mov
lret
push
pop
jle
stos
mov
cmp
je
movzbl
addl
xor
sub
xchg
sub
xor
add
adc
imul
jo
pop
add
jb
cmp
add
daa
pusha
and
xor
add
and
dec
add
iret
sti
and
je
lcall
flds
add
sahf
xchg
mov
or
sbb
push
pop
jb
cmpb
or
or
pop
enter
or
sub
cmp
or
pop
xchg
inc
enter
loop
or
enter
or
or
in
jns
add
push
nop
addr16
push
ja
jae
inc
push
push
rsqrtps
jb
fimuls
pop
adc
fwait
sub
fdivs
adc
inc
or
mov
adc
add
lcall
adc
xchg
add
pop
adc
adc
xor
mov
push
iret
enter
push
push
pop
pop
movsl
mov
sbb
cmp
sbb
cmp
pop
enter
sbb
jb
jb
sbb
sbb
dec
in
mov
jb
sbb
add
jns
dec
jge
push
nop
out
sbb
addl
push
inc
push
pop
pop
mov
mov
ret
sub
cmp
jae
test
cmp
xchg
lcall
add
push
and
std
dec
inc
add
in
push
in
jno
in
imul
repnz
lea
repnz
cmpsl
repnz
cmp
xor
out
test
iret
out
push
fcoml
and
add
call
in
call
and
enter
inc
jmp
cmpb
jmp
in
jb
jmp
in
in
psubusb
in
cltd
mov
add
inc
in
sahf
out
out
sbb
sbb
jge
sbb
nop
out
test
lock
xchg
add
icebp
icebp
in
cmp
repnz
sahf
lret
add
std
repz
test
hlt
hlt
rorl
sahf
xchg
add
pusha
hlt
fwait
mov
jb
inc
jg
mulb
mov
pop
idivl
or
std
clc
clc
clc
and
sbbb
repnz
push
lock
cli
cli
inc
enter
sti
sbb
stos
jns
aaa
xchg
cld
cld
cld
je
cld
push
bsr
std
out
cmpsb
in
std
sbb
push
xchg
xor
cmp
pusha
ficompl
roll
fidivrl
shll
or
cmp
add
jecxz
jb
mov
inc
in
inc
scas
mov
icebp
inc
mov
stc
daa
xchg
sti
out
pusha
adcl
out
outsb
xchg
cmp
sbb
add
or
sub
sub
sbb
mov
in
xlat
in
cli
in
add
mov
cmpsb
jb
cli
out
out
out
cltd
inc
pop
and
push
lock
andb
sbb
jmp
pop
push
mov
cltd
sar
push
xchg
mov
dec
in
xlat
fstpl
div
jb
mov
xor
jns
xor
sbb
pop
repnz
clc
cmp
movsb
test
cmp
enter
cld
andl
inc
pusha
cli
mov
mov
dec
xchg
add
stc
and
hlt
cld
pusha
sub
sub
sbb
testl
mov
scas
idivl
testl
sbb
out
in
xlat
enter
inc
testl
cmpsb
jb
imul
ljmp
negb
xchg
pop
leave
mov
xchg
negb
insb
out
out
mov
inc
negb
pop
and
and
add
xor
inc
add
repnz
mov
mov
xchg
cmc
jae
sub
cmc
testb
jne
div
jns
cltd
sbb
add
clc
scas
lret
add
clc
jecxz
stc
popa
lcall
cli
cli
xchg
inc
pop
pop
jno
hlt
pop
and
mov
hlt
cmp
add
sbb
or
push
data16
hlt
idivl
int3
jbe
push
jo
sti
lahf
jle
aam
pusha
adc
xor
loope
loope
jmp
scas
lret
add
loop
ret
xchg
pop
leave
scas
repz
test
imul
and
repz
repz
push
lcall
jmp
pop
cmc
mov
xchg
pop
pop
daa
xchg
repnz
lret
adc
sbb
inc
fcompl
and
xchg
pop
pop
daa
add
and
inc
in
rcrl
movsb
sbb
divb
scas
adc
xchg
icebp
jb
test
popa
leave
push
icebp
cmp
xchg
cmpsb
cmc
cmc
cmc
popa
leave
mov
add
jecxz
adc
jne
ret
rclb
lock
stc
cmp
lock
lock
lock
push
lock
test
ss
cmpsb
xchg
push
nop
mov
push
nop
out
push
sub
out
inc
test
in
jmp
in
cmovno
push
add
jb
cmp
add
stos
les
add
push
inc
and
and
adc
or
adc
or
xchg
daa
cmp
dec
add
sahf
and
add
push
dec
and
movsl
and
xchg
sahf
aas
inc
add
mov
stc
cmp
add
inc
insb
ds
jge
lahf
dec
add
inc
out
inc
jl
out
cmp
int
mov
in
les
inc
icebp
dec
push
mov
repz
inc
cmp
cmpsb
push
xor
repz
test
cmpsl
lock
add
and
mov
dec
dec
and
add
movups
jle
rolb
bound
ret
bound
adcl
cld
jb
test
mov
and
or
je
int
test
or
lret
es
adc
in
inc
std
cld
or
enter
push
imul
add
push
sar
dec
dec
imul
pop
movsl
inc
sbb
sbb
jg
mov
cli
cs
jge
push
imul
dec
cmp
je
push
bound
rcr
inc
nop
in
adc
or
push
pusha
xor
mov
inc
stos
mov
pusha
cmp
inc
fdecstp
jbe
fmuls
and
dec
inc
xor
repz
sub
jo
adc
push
sbb
fisubrl
gs
div
add
or
push
bound
lea
popf
xchg
rcll
or
or
add
cld
lret
cmp
push
scas
jb
cmpl
push
sarb
ds
nop
pusha
mov
sbb
inc
addb
fnstcw
rorl
mov
sbb
adc
and
ficomps
rep
mov
dec
ljmp
sub
je
xchg
jo
sbb
in
arpl
adc
repnz
nop
in
jmp
movl
pushf
out
loopne
in
es
and
scas
nop
imul
cmp
inc
call
pop
insl
out
out
xorb
cmp
jb
adc
mov
shlb
sub
mov
pop
inc
inc
inc
inc
adc
add
sub
cmp
insl
or
jb
popf
int
lea
imul
mov
gs
test
loope
inc
adc
or
dec
shll
or
shrb
pop
sub
pop
roll
sub
pusha
rcrl
inc
pop
cmp
enter
adc
orps
aas
fildl
orl
lock
pop
sub
push
syscall
adc
sar
sbb
mov
jmp
mov
sahf
add
nop
cltd
mov
jne
jo
sub
dec
or
das
shll
and
fldt
inc
loopne
clc
adc
add
pop
xor
sub
imul
shrl
loopne
mov
ss
mov
or
cmp
notb
jmp
sbb
outsb
test
add
bound
fcmovb
enter
lcall
inc
jo
pop
inc
cwtl
ja
and
add
inc
ja
cltd
add
add
mov
cmovb
add
sub
jmp
dec
loopne
inc
add
mov
jmp
lret
clc
cmpl
jl
dec
loope
mov
cmpsl
lock
jmp
stos
add
testb
out
shrb
sbb
repz
repnz
cmpsl
inc
mov
es
fimuls
lods
test
adc
dec
sub
adc
add
add
or
inc
jno
imul
xchg
jmp
notb
mov
inc
roll
dec
pop
loopne
rolb
adc
push
pop
and
psubb
popa
mov
pop
pop
mov
test
arpl
or
sub
movsl
mov
push
ret
xorb
push
jb
fwait
mov
enter
push
lea
or
frstor
aad
lods
pop
mov
int
or
scas
adc
stc
rcrb
lea
dec
add
in
dec
movl
mov
add
repz
push
push
push
dec
inc
cmp
sub
inc
mov
mov
call
out
in
lock
hlt
xchg
je
out
clc
cld
ss
insb
aas
inc
lea
add
fldenv
sbb
out
jmp
and
push
lods
sbb
inc
pop
sti
xchg
xor
and
sbb
vpunpcklwd
je
into
jl
cld
or
stc
or
std
cld
out
adc
fsts
rclb
out
in
xchg
xchg
sub
pop
nop
and
dec
push
jo
xor
fiaddl
jl
mov
fstl
sahf
inc
xchg
push
ficoms
push
add
imul
pop
add
pop
cmp
ljmp
xor
push
int3
push
aam
in
pop
lahf
out
hlt
pop
pop
aaa
sbb
jns
out
sbb
adc
adc
jns
out
or
or
aaa
inc
inc
sahf
add
inc
and
adc
push
cmp
push
add
xor
pop
shufps
cmp
cmp
jbe
push
sti
pop
fmull
mov
mov
incl
inc
decl
jne,pn
pop
pop
mov
repnz
jg
cltd
cmp
jbe
push
cltd
pop
idiv
lea
outsb
iret
pushf
push
pusha
or
pop
sub
dec
ja
jb
std
or
mov
xor
inc
ret
push
jmp
cmp
jae
dec
lea
imul
jbe
lcall
dec
sbb
jo
loope
mov
pop
sub
adc
hlt
or
jne
or
clc
pop
addb
mov
filds
mov
gs
add
test
lcall
sbb
dec
dec
je
push
push
cwtl
adc
xchg
mov
lret
mov
add
dec
inc
mov
mov
mov
decb
push
movsb
stc
xor
push
enter
cmp
das
sbb
inc
pop
addb
cmpsb
add
jb
xor
pop
mov
add
cltd
push
sub
inc
rol
xor
add
pop
out
mov
push
test
push
adc
fcmovb
dec
jmp
cmc
pop
nop
mov
stos
push
ja
adc
sbb
in
add
jmp
cmp
pop
sbb
ja
ffreep
aaa
mov
jge
push
clc
add
pop
idiv
cs
or
mov
inc
xor
xchg
inc
out
fdivl
pop
fistpll
es
in
jmp
aam
ret
add
pop
mov
sahf
jle
pop
imul
inc
fxch
and
adc
fs
jmp
jl
mov
sub
adc
sub
push
or
je
insb
sub
dec
ret
pop
jecxz
repnz
in
js
scas
jae
or
mov
int3
sbb
pop
incb
inc
jns
adc
cmp
inc
pop
ffreep
add
sti
cmp
pop
sub
loopne
mov
inc
xor
dec
in
mov
push
icebp
sbb
cmp
pusha
data16
adc
xchg
push
sbb
xor
mov
jecxz
pop
je
sbb
add
add
data16
xchg
dec
fbstp
mov
mov
push
enter
in
fcoms
adc
je
pop
sbb
sti
pop
pop
jne
mov
mov
fidivl
mov
inc
mov
lret
push
mov
adc
jl
pop
xchg
mov
or
call
push
xchg
push
or
inc
mov
fnstenv
subl
inc
dec
cmp
loopne
mov
stc
pop
push
adc
push
adc
xchg
inc
jmp
push
pushf
pop
pop
jl
xchg
adc
adc
sbb
out
mov
inc
sbb
sub
dec
lock
push
je
mov
push
movsb
xchg
pusha
out
dec
and
mov
push
xchg
adc
jge
loop
fisubl
or
push
cld
mov
xchg
add
out
add
outsb
push
loopne
adc
adc
pusha
iret
repz
call
xor
xchg
push
aas
out
rcrb
mov
fisubl
std
add
dec
ljmp
xchg
rolb
scas
jg
mov
clc
push
pop
xchg
add
push
push
mov
pop
add
orb
mov
movsb
add
icebp
imul
mov
mov
add
mov
jg
or
gs
sub
inc
mov
in
pop
mov
mov
fisubl
mov
inc
inc
mov
clc
inc
cmp
je
xchg
sar
fs
orb
adc
mov
xchg
add
fidivrl
jp
test
dec
je
popa
out
mov
cmp
push
dec
sbb
push
and
loopne
mov
incl
lods
pop
lea
push
mov
push
inc
sbb
loope
or
loopne
cmpsb
sub
inc
dec
inc
ret
pop
sbb
fs
lods
mov
push
sbb
outsl
shll
mov
sbb
or
xchg
add
das
dec
push
sub
sbb
sti
jecxz
push
or
movl
or
mov
addr16
outsb
arpl
xor
ret
mov
lea
pop
test
cmpl
cmp
mov
rol
mov
adc
shll
mov
add
adc
push
pop
inc
int
or
jb
fs
add
je
pop
add
dec
add
frstor
test
cmovs
push
xchg
xchg
addr16
sbb
mov
add
xchg
dec
mov
addr16
iret
add
shll
lea
popa
bound
jl
and
jmp
dec
or
fadds
push
jmp
das
dec
jmp
popf
push
nop
push
dec
sbb
into
xor
dec
adc
or
mov
bound
in
sbb
push
in
dec
ret
pop
xchg
rol
in
scas
test
push
out
mov
or
gs
mov
repz
ret
dec
sbb
sub
aam
xor
inc
mov
movsb
clc
jne,pn
outsb
xchg
cmp
je
mov
pop
push
loopne
jne
scas
cmp
inc
add
cmp
cmp
cmpsb
push
rorb
mov
sbb
sbb
mov
cmp
ja
mov
addb
and
inc
inc
dec
xor
pop
mov
xor
or
movsl
shll
movsb
cltd
pop
add
jne
ficoms
clc
xor
sbb
testl
pusha
js
imul
es
inc
jmp
aas
xchg
xchg
pop
cmpsb
jno
adcl
lahf
jmp
or
sbbl
jne
add
mov
add
add
aam
pop
and
xchg
cmp
lahf
pusha
jmp
xchg
imulb
push
add
sub
dec
and
mov
mov
cmp
mulb
pop
mov
ret
hlt
sbb
sbb
inc
cltd
add
inc
test
loopne
inc
loopne
outsb
jecxz
jecxz
stc
push
dec
xor
jle
mov
add
xchg
jmp
pop
arpl
xchg
push
jno
rolb
rorb
loope
inc
mov
push
arpl
fstps
inc
add
xorl
mov
loopne
in
movsl
lods
or
add
mov
sbb
xor
into
sub
in
fsubrs
inc
inc
add
fisttps
outsb
jbe
js
adc
test
and
jge
and
aas
movsb
add
mov
mov
aas
add
push
push
inc
andl
and
into
fmull
bound
jmp
push
xor
mov
lcall
adc
and
lock
bound
sbbb
es
add
lret
lock
stos
sub
or
jne
add
add
sbbb
int3
out
push
mov
pushf
enter
sbb
pop
sub
jmp
nop
mov
xchg
add
or
pop
and
data16
clc
sub
cld
ss
and
insb
jmp
push
popa
stc
cmp
sbb
adc
add
xchg
gs
xchg
inc
cmp
adc
push
mov
push
outsl
sbb
cld
arpl
imul
pop
sub
fidivrl
dec
dec
ja
mov
jmp
inc
mov
gs
sbb
fldl
push
imul
repz
sbb
cmp
fiadds
rorb
pop
lret
fmull
sbb
ja
fldt
orl
js
mov
jo
xchg
fildl
push
sbb
outsl
add
jbe
dec
xchg
fildl
repnz
inc
mov
ficomps
in
pop
xlat
in
jne
pop
dec
sbb
push
cmp
xchg
mov
push
cmp
fstp
out
push
pop
xor
rorb
test
call
shl
hlt
fadds
or
gs
push
clc
int3
sbb
cmpsb
pusha
sbb
aas
movsl
push
sti
jmp
sub
mov
incl
fs
gs
sub
sub
call
test
inc
mov
imul
dec
push
inc
in
frstor
push
inc
pusha
dec
mov
inc
push
push
ret
push
add
xchg
les
inc
sbb
mov
pop
push
mov
push
lea
loopne
dec
inc
and
lds
notb
fildl
dec
jnp
repnz
sub
lahf
daa
mov
shlb
xor
adc
push
sbb
jnp
movsl
push
std
je
add
iret
xor
push
dec
or
mov
int
pop
jo
inc
mov
je
sbb
mov
loope
mov
sti
sbbb
mov
push
lea
dec
xchg
adc
test
mov
add
add
inc
pop
fadds
into
stc
and
dec
adc
sbbl
out
add
movsb
leave
ret
jne
cld
or
sub
and
repz
inc
dec
cmp
push
and
mov
in
or
pop
or
int
add
push
sbb
or
pushf
pusha
orb
mov
dec
inc
pop
xor
push
fcoml
lods
icebp
lds
pop
je
sub
xchg
push
push
push
jbe
adc
sub
jg
mov
sbb
jg
pop
and
popl
es
lods
cmp
add
inc
add
mov
mov
push
movl
cmp
es
shrb
sub
adc
xchg
shl
out
fucomp
sti
mov
adc
dec
sbb
mov
add
shrl
and
lock
cmp
inc
mov
or
rorl
push
pushaw
cld
sub
push
xchg
xchg
je
or
inc
adc
mov
adc
or
dec
jmp
push
sbb
sbb
and
add
bound
xor
or
loope
or
sbb
add
pop
sbb
pop
sub
mov
inc
dec
jne
lea
cld
mov
nop
pop
push
mov
cltd
push
push
pop
inc
subb
ret
outsl
int3
sti
mov
add
mov
out
push
movb
mov
add
cmp
pop
sub
fcoms
or
mov
int
orl
aam
cmp
push
repnz
push
aaa
mov
mov
cs
xchg
sarb
push
cmp
xor
nop
fildl
inc
imull
fimull
pop
int
aas
add
mov
sbb
mov
movsb
lods
jmp
and
je
and
mov
out
adc
aad
jmp
mov
rcrb
sahf
mov
ja
sub
mov
cmp
mov
and
sbb
lret
orb
jmp
cmp
push
and
and
inc
add
sub
add
and
mov
inc
in
push
nop
je
clc
mov
mov
insb
mov
inc
or
ja
and
loopne
xor
dec
push
pop
inc
push
cmp
outsb
cwtl
lret
clc
mov
jno
ret
dec
mov
cmp
insb
push
cld
lar
mov
decb
rcrl
cmp
dec
add
cli
mov
cmpsb
push
mov
cmp
pop
sbb
inc
std
jne
loopne
js
imul
fldt
stos
enter
sarl
jmp
mov
sub
ret
xor
sub
sbb
sub
sbb
iret
add
rorb
lcall
popa
jp
adc
shrl
pop
lret
orb
xchg
sbb
cmp
or
sbbb
push
jmp
lret
bound
xor
loope
add
ljmp
dec
lea
push
and
cmc
mov
cmp
jbe
and
in
lea
mov
faddp
pop
inc
inc
ret
pop
andl
lea
nop
jle
leave
xor
push
shr
mov
sti
sti
inc
xchg
adcb
cmp
loope
inc
out
mov
inc
mov
jne
outsb
incl
and
fidivrs
add
jb
mov
jne
arpl
inc
pop
jg
or
inc
or
adc
mov
call
mov
inc
inc
inc
dec
jne
mov
inc
icebp
ds
push
hlt
outsb
mov
adc
jbe
mov
jo
test
inc
pop
jo
mov
outsl
rorl
inc
dec
jne
add
movsb
mov
div
scas
dec
addb
xor
psrlq
imul
fwait
ds
dec
loopne
adc
add
sub
mov
test
mov
dec
push
and
mov
mov
sub
add
arpl
dec
jns
out
add
clc
mov
push
xlat
jne
pop
push
push
xchg
cmp
cwtl
add
int3
cmp
sub
add
dec
test
test
xor
fldl
or
xchg
std
and
fs
push
or
mov
test
add
loopne
idivl
sub
jmp
xor
stos
xorb
jge
mov
add
repz
ret
ss
push
out
or
adc
mov
fwait
ljmp
xchg
faddl
inc
data16
and
popa
ljmp
xlat
lret
cmp
std
test
sub
and
pop
movl
mov
xorl
sbb
push
iret
dec
imul
adc
pushl
into
int3
sub
lahf
movsb
jnp
das
adc
data16
mov
sbb
sub
ret
ss
es
sub
and
imul
shlb
push
lahf
mov
pusha
mov
mov
sub
inc
push
sbb
in
inc
pushl
out
jle
or
into
cmpl
fs
mov
js
pop
cmp
xchg
inc
add
loopne
or
decl
jne
arpl
push
push
sbb
pop
enter
mov
fucomp
push
sbb
mov
lea
test
sub
aaa
cmpl
lea
ret
shld
repz
movsl
sub
or
cmp
loopne
dec
insl
xor
xor
pop
ret
je
push
adc
bndldx
sbb
sbb
mov
pop
sbb
repnz
fiaddl
jbe
xchg
rclb
ret
xor
lods
or
sbb
jo
loope
xor
add
mov
jl
jmp
push
sub
jno
pop
sbb
aam
sbb
and
push
push
pop
loopne
cmp
rol
sbb
mov
ret
mov
arpl
sbb
pop
add
pop
ljmp
out
stos
fs
pop
cmc
cld
scas
add
ror
sarb
cmp
shl
ret
push
sbb
cwtl
cmp
sbb
js
inc
nop
loope
test
in
adc
out
fucomp
or
inc
aas
push
decb
sbbl
in
or
mov
mov
pusha
adc
scas
sub
int3
jl
and
sbb
xchg
mov
insb
push
cld
push
jo
setbe
xchg
inc
or
inc
pop
pop
push
push
mov
and
movsb
xchg
push
adc
add
insb
cld
mov
jecxz
mov
fstps
shlb
outsl
mov
dec
pop
insb
inc
cmp
inc
sub
pop
mov
ret
dec
push
cmpsl
mov
cmp
xchg
lds
dec
inc
push
pop
jns
pop
pop
orl
inc
xchg
cmp
or
xor
xchg
rol
jns
movsb
pop
pop
loop
dec
outsl
push
xor
adc
push
test
clc
imul
sbb
cmp
add
nop
inc
inc
dec
sub
and
rorl
sbb
decl
repnz
push
dec
push
imul
cmc
and
pop
cmp
je
jle
cmp
mov
mov
jg
lds
cmpl
pushf
push
scas
and
lea
fucom
mov
test
mov
out
in
jb
xchg
pushf
cmpl
jbe
mov
sub
or
lahf
aad
mov
fiadds
ja
dec
ja
shll
fmull
jecxz
mov
jecxz
xor
inc
xor
fisubl
ljmp
cmp
mov
push
mov
push
xchg
stos
push
dec
mov
xor
sbb
fldl
adc
xchg
pop
inc
sbb
mov
movsl
dec
inc
lock
mov
jecxz
push
sbbl
mov
call
sub
pop
pop
imul
fcomps
pop
mov
mov
clc
or
jns
popf
enter
shrb
pushf
popl
ljmp
enter
imul
pop
test
or
pop
xchg
mov
push
add
mov
jno
mov
push
test
mov
ret
pop
popa
dec
ret
stos
daa
in
add
js
jmp
jge
insb
adc
push
or
icebp
mov
and
add
insb
or
inc
adc
out
inc
es
mov
test
loop
jb
or
jg
out
in
jle
jg
jle
or
and
push
cwtl
jle
and
mov
repnz
xchg
jns
iret
jnp
or
add
jle
call
loopne
jle
jns
adc
fsts
jmp
adc
pop
rolb
add
and
cmp
pop
nop
aam
push
and
inc
rolb
adc
test
repz
mov
mov
inc
pop
inc
shlb
and
out
or
push
call
xor
or
adc
dec
dec
mov
sbb
les
cmp
cs
push
or
add
cmp
sar
lds
jne
movl
jle
cld
pop
adc
mov
lret
jne
and
add
mov
cmp
jge
inc
mov
mov
test
adc
popa
test
cwtl
push
pop
mov
push
inc
loopne
and
cmp
jno
and
adc
movb
mov
inc
or
and
cld
jnp
jge
jle
pop
idivl
aas
add
and
fisttpll
imul
and
cltd
shlb
inc
adc
cmp
orb
in
sub
inc
or
je
lods
xchg
sub
testl
or
xchg
lods
add
jle
cmp
cmp
jl
or
pusha
mov
xor
add
gs
jmp
addl
mov
and
mov
popw
xchg
pusha
jnp
jne
or
push
adc
mov
and
add
mov
cmp
push
sub
lahf
add
cmp
sub
sbb
adc
push
rol
xor
ret
xchg
out
outsb
cmp
add
adc
outsl
push
mov
and
aam
and
dec
mov
push
sub
loope
testb
cmp
sub
je
adc
loope
movl
jae
das
push
mov
in
lds
xchg
sbb
hlt
jecxz
adc
dec
add
and
push
mov
push
inc
and
mov
push
pop
adc
push
pusha
sbb
push
and
pop
add
sbb
push
push
daa
xchg
adc
clc
daa
inc
clc
jno
or
inc
sbb
loopne
imul
mov
jno
popa
jne
test
lret
add
xchg
cmpsb
lods
lea
inc
sub
das
add
jns
inc
cmp
add
cli
sub
cwtl
ficompl
pop
loope
push
or
mov
push
xor
loopne
and
push
js
in
es
or
rorb
ss
repnz
incl
and
xchg
insb
mov
dec
in
fsubr
cmp
push
mov
dec
ret
inc
or
mov
mov
pop
test
inc
sbb
add
or
dec
push
clc
xchg
rorb
ja
rclb
or
jecxz
push
push
dec
ss
push
and
loopne
pop
xchg
mov
push
mov
adc
jbe
push
inc
jne
lea
loopne
lahf
sub
in
loopne
test
fucom
xor
inc
out
push
or
jno
jns
cmp
xor
divl
in
push
jno
loope
adc
push
mov
into
sbb
clc
dec
xchg
mov
out
rcrl
push
dec
loopne
sub
dec
ljmp
jns
xchg
and
sub
push
sub
fildll
push
pop
push
cli
add
add
inc
pusha
sub
in
adc
sbb
and
dec
dec
scas
ret
les
ret
and
lcall
add
add
sbb
jmp
push
xor
push
push
push
sbb
fsub
adc
inc
mov
rcrb
add
orl
mov
pop
sub
nop
xchg
dec
mov
mov
lcall
push
jg
adcb
sbb
dec
mov
jecxz
stc
xor
lods
in
scas
sub
or
xchg
lret
in
aam
fadd
fcomps
cmp
cmp
jo
dec
mov
mov
mov
mov
sbb
push
subl
leave
movzwl
pushf
xchg
out
shrb
xchg
call
out
xlat
pop
or
adc
sti
inc
adc
mov
cld
jbe
icebp
lea
ficompl
jl
dec
icebp
fstp
es
test
push
sbb
pop
sar
pop
mov
mov
xchg
pop
dec
aas
xchg
inc
jnp
jo
rorb
or
xchg
lret
movsl
aam
clc
fsubrs
adc
sub
dec
or
nop
out
adc
ljmp
pop
addr16
scas
pushf
pop
or
add
pop
cs
add
out
loope
int
nop
cli
sub
notb
pop
cmp
mov
adc
xchg
add
mov
add
sub
push
imul
adc
lret
or
ja
movsl
xor
rcrl
mov
mov
hlt
and
dec
jns
or
movsl
hlt
cwtl
je
or
xor
insb
je
lock
mov
outsb
loope
insb
pop
icebp
cmpsb
jo
pusha
sub
and
in
in
ss
or
xor
mov
sub
and
xor
movsl
jg
jbe
enter
jb
or
sbb
fwait
imul
lcall
pop
xlat
cmc
test
mov
add
push
jno
lock
rcrl
shll
fisubl
sbb
sbb
je
cmp
adc
or
xlat
inc
clc
add
mov
ret
add
hlt
mov
test
fdivr
scas
inc
jmp
test
test
mov
je
push
jae
mov
test
imul
stos
out
jbe
jl
aaa
jne
das
mov
adcl
xchg
add
dec
and
and
or
lock
es
mov
adc
sti
xchg
pop
push
mov
add
push
insl
xor
stos
cmp
inc
xor
xor
negl
pop
fdiv
push
aam
add
adc
cmp
mov
xor
mov
jbe
mov
push
mov
decl
pop
test
pop
aas
push
mulb
es
add
bswap
fimuls
mov
inc
dec
pop
sub
mov
or
sbb
xor
xor
add
adc
je
loop
ret
out
pop
jns
push
sbb
push
pop
pop
adc
shrl
cli
add
add
rclb
addr16
mov
pop
sbb
cmp
je
test
or
sbb
push
mov
popa
aas
add
xor
rorl
fisttps
xor
adcb
mov
push
pusha
pop
add
mov
adc
push
jb
xorb
pop
jo
adcb
jmp
pusha
pop
fstl
into
ret
orb
adc
testl
mov
jmp
cmp
jle
sahf
jecxz
popf
insl
cmpl
dec
or
mov
scas
cwtl
mov
adc
push
mov
movsb
mov
xchg
xor
adc
imul
add
mov
xchg
sbb
xchg
lea
stc
mov
push
pop
test
roll
sbb
dec
out
aas
nop
addb
add
popa
stos
inc
adcl
push
push
push
enter
mov
lret
out
addr16
decb
mov
test
pop
je
in
jecxz
movsl
loope
js
pop
data16
push
subl
lret
stos
into
ja
push
jne
push
nop
popa
jbe
sbb
inc
push
jbe
insl
push
add
or
lcall
nop
rorb
add
sbb
sbb
jl
inc
dec
push
rolb
jno
inc
in
pop
fimull
push
or
jecxz
popf
jmp
lret
mov
mov
or
jne
and
lea
jbe
sbb
xchg
cli
loope
adc
inc
je
mov
cltd
push
adc
insb
add
cmp
push
nop
xchg
clc
cmp
jg
sahf
add
mov
dec
jmp
pop
xchg
sub
mov
faddl
aas
adc
xorb
aaa
into
cmp
lods
push
nop
dec
shlb
xor
ss
or
inc
cmpsl
loope
or
pop
push
inc
inc
cwtl
std
push
inc
sub
sub
icebp
xchg
dec
mov
test
pop
mov
cmp
adc
int3
clc
push
jmp
sub
sub
push
test
inc
xchg
mov
cmpsb
and
pop
lds
jb
cltd
sub
sub
pop
and
cs
shl
push
jp
jb
cmp
ja
dec
fdivrl
mov
ret
lea
stos
pushw
add
adc
push
dec
push
pop
jbe
dec
sbbl
pop
pop
xchg
test
jno
aaa
add
mov
call
pushf
push
rcll
pop
popa
jle
sbb
popa
lret
insl
add
jg
push
push
dec
les
ret
sbb
push
and
jo
icebp
jl
testl
push
xchg
sarb
loop
dec
jo
outsl
movsl
daa
pop
mov
dec
cmp
insl
mov
mov
test
sbb
add
fbld
adc
inc
mov
pop
data16
enter
mov
sbb
ja
rclb
mov
ss
sbb
push
xchg
rcrb
add
adc
or
enter
test
pop
sub
idivb
jle
cmp
pop
sbb
pop
xchg
aam
push
cmp
xchg
dec
pop
and
inc
sbb
int
or
out
dec
or
rolb
and
lcall
mov
dec
xor
daa
jbe
popf
adc
xchg
adc
push
dec
popa
xchg
push
push
outsl
pop
inc
inc
enter
jl
push
mov
jg
jne
push
fmuls
aas
out
xchg
test
xor
and
popa
cmpsb
inc
stc
cwtl
ret
movsb
jge
loop
xor
jle
add
clc
mov
mov
cmp
test
outsb
push
or
mov
pop
jne
call
jmp
push
cmp
inc
inc
jo
inc
sbb
xor
push
adc
ljmp
shrb
test
sub
add
xchg
or
jo
lods
lea
test
cmp
add
jnp
daa
ss
rclb
mov
push
or
adc
enter
cmp
xchg
add
mov
and
pop
fdivl
rclb
or
add
xchg
stos
push
ljmp
loopne
sub
cld
shr
mov
imul
fwait
mov
inc
int3
push
inc
pop
sub
push
dec
or
jbe
jmp
mov
xor
sbb
mov
mov
mov
adc
mov
ljmp
divb
sar
dec
cmp
jbe
push
pop
in
sbb
or
subb
sub
pushl
mov
shr
lea
not
and
decb
jne
scas
cli
xchg
and
adc
mov
pusha
cmp
pop
add
imul
pop
add
add
pop
and
adc
lahf
or
ret
jmp
popf
push
jecxz
pusha
mov
shlb
and
sti
add
dec
add
nop
cs
pop
cmp
std
sti
mov
fimuls
and
cmp
je
gs
lock
jno
jno
mov
sti
pop
mov
shr
not
and
add
push
je
sub
mov
xor
cmp
das
mov
xor
jae
rcrl
add
xchg
xor
outsl
dec
push
jecxz
ficomps
mov
int3
inc
or
jnp
adc
dec
or
adc
out
aas
insb
pusha
mov
mov
inc
mov
mov
xchg
cmp
push
or
pop
mov
inc
dec
or
jmp
dec
adc
push
mov
or
popf
push
xor
adc
nop
aam
repz
mov
and
add
sbb
std
addr16
mov
dec
or
jp
outsl
das
sti
push
push
call
aas
gs
push
or
inc
cmp
insl
cld
in
popa
sub
dec
inc
adc
inc
pop
test
add
pushl
push
push
cmp
dec
call
inc
inc
add
repnz
mov
adc
xor
lods
dec
adc
insl
lods
je
adc
sub
cmp
dec
aaa
jp
or
mov
shr
das
mov
fildl
pop
adc
sub
lock
rclb
push
ret
cwtl
outsl
push
pop
test
and
imul
test
lea
pop
push
lcall
stos
xchg
push
clc
push
stos
xor
iret
test
adc
adc
fucomi
fwait
orl
ret
in
or
or
and
ret
insl
pop
mov
je
icebp
mov
and
rolb
mov
dec
stc
ljmp
incb
pop
mov
pop
stos
add
or
cmpsl
mov
mov
pop
push
idivb
sbb
mov
xor
and
cmp
ja
cld
sbb
jl
iret
shr
push
incl
inc
movhlps
or
adc
ja
loope
out
xchg
inc
cld
lock
call
xlat
sbb
je
clc
add
movsb
or
or
sbbb
cmp
inc
fs
inc
bsf
pop
mov
mov
lock
cld
ljmp
add
js
lds
not
and
jo
les
adc
jne
int
clc
add
sub
pop
shr
test
push
pusha
jb
cld
push
dec
or
mov
and
pushf
aaa
jno
out
jle
int3
inc
xchg
sarb
cmp
scas
add
jbe
add
mov
int3
add
pop
xor
mov
xor
stc
sbb
clc
push
cs
pop
add
push
xorb
or
mov
add
push
jns
nop
jge
mov
into
add
repnz
lret
lods
or
incl
jns
add
fstpl
lea
aad
pop
xchg
add
adc
jle
shll
pop
pop
push
cmpsb
imul
lcall
sub
xchg
adc
js
pop
shl
ss
and
js
test
inc
jne
imul
dec
xor
out
add
add
sti
cmpsb
sub
sub
jl
adc
inc
repnz
xchg
mov
dec
insb
xor
jle
pop
xor
push
sar
dec
jp
ss
movsb
pop
in
in
enter
cld
or
test
cmp
dec
mov
repz
je
fisttps
mov
dec
push
inc
jmp
push
fbstp
ja
dec
push
mov
jo
adc
fimull
loope
dec
lea
mov
sahf
and
shll
mov
cmp
push
cmp
lods
cs
lret
lret
mov
push
rdmsr
cmp
inc
dec
mov
loop
sbbb
imul
insb
mov
and
pop
and
inc
cmp
clc
rcll
push
push
push
jge
in
xchg
adc
in
adc
lret
dec
subb
rorb
fldl
fstpt
and
and
or
jne
add
pop
cmp
jb
push
jne
mov
imul
fnstenv
jmp
jnp
add
xor
jmp
arpl
adc
outsb
fsubs
sbbl
ficompl
xor
jbe
cmp
cmp
je
mov
in
xlat
mov
in
cli
and
fdiv
subl
dec
pop
iret
jne
or
jno
mov
add
push
dec
xchg
scas
test
pop
nop
and
out
jnp
pop
push
repz
mov
and
jne
mov
outsl
shrb
and
leave
inc
test
inc
cmp
jno
push
pushf
mov
sub
icebp
sbb
fdivrl
test
add
shrl
ror
push
outsb
adc
and
stos
xchg
mov
mov
jne
dec
das
sbb
jmp
jp
xor
int3
dec
mov
ja
dec
bound
dec
push
and
push
clc
xor
shll
xor
dec
jp
cli
adc
out
inc
mov
or
pop
sbb
cmp
jge
fadds
ret
jl
aas
push
or
dec
cld
or
push
hlt
pop
push
in
in
or
mov
inc
push
pushf
mov
adc
cmpl
mov
push
iret
scas
and
lods
test
lea
and
daa
mov
sbb
jge
add
and
mov
loopne
pop
leave
xchg
repnz
xchg
icebp
divb
add
nop
in
jb
or
ret
ret
sahf
add
add
pop
mov
and
add
inc
mov
push
push
and
jmp
lock
add
test
inc
sbb
and
adc
loopne
and
popf
mov
pop
push
aas
adc
xor
mov
add
xchg
js
and
cmp
jbe
iret
sbb
push
mov
mov
sub
insb
test
and
adc
or
inc
push
out
rcrl
movsb
inc
add
mov
gs
add
add
insb
std
jmp
push
push
and
jb
adc
sub
adc
sarl
mov
std
lahf
pushl
adcl
mov
lahf
pop
ret
je
out
pop
jne
push
inc
rcll
pop
mov
add
insl
sbb
test
arpl
xchg
fsts
mov
xlat
dec
jl
shrb
push
inc
js
push
or
pop
shlb
cwtl
or
inc
mov
jnp
pop
jl
mov
out
adc
sbb
insl
lds
sbb
aaa
xor
lock
inc
jne
je
cmpl
femms
out
xor
mov
insb
addb
inc
dec
jne
daa
lods
push
sub
xor
pop
cmp
lods
xor
or
jae
xor
inc
dec
dec
lods
dec
jo
and
xchg
mov
call
xchg
sahf
mov
inc
cwtl
jns
xor
jecxz
shrb
mov
js
pop
inc
adc
jge
jmp
mov
int
in
int3
jns
xor
movsb
in
je
push
pop
add
push
mov
nop
cmpsl
dec
inc
rorl
subb
xchg
imul
test
enter
sub
pop
pop
lcall
mov
sub
roll
cld
movl
out
dec
xor
adc
adc
adc
popa
mov
or
shll
ret
pop
add
sbb
ret
sbb
xchg
arpl
test
sub
xor
rorb
ss
sub
add
or
sbb
and
stc
mov
and
xor
mov
aas
insb
jne
jp
xor
adc
mov
shr
mov
mov
or
xchg
fmull
adc
push
xchg
xchg
xor
cmpsl
push
repnz
cmp
fs
inc
dec
push
jmp
out
sbb
int3
les
inc
or
pop
std
pushf
xor
ret
cmovo
shll
lea
in
xchg
lret
cltd
dec
push
add
adcb
lock
aaa
push
cmp
xlat
dec
xchg
add
mov
xchg
push
cs
enter
or
pushf
nop
call
pushf
mov
pushf
mov
fmulp
movsb
repnz
rolb
outsl
xchg
addr16
pusha
xchg
add
fs
add
add
mov
mov
popf
and
fwait
push
stc
pop
mov
push
test
xchg
xchg
lret
movsb
shr
cs
sub
mov
mov
data16
pop
xchg
push
or
xchg
ret
repnz
cltd
shrb
cmp
add
call
xchg
pop
mov
dec
jb
pop
rolb
xchg
in
cwtl
add
push
nop
in
push
cmp
inc
test
test
mov
fwait
clc
mov
leave
mov
xchg
jle
cld
enter
cmp
or
int
mov
data16
add
data16
cli
push
cmpsb
cmpsl
stc
cmp
movsb
push
jle
and
jecxz
ja
ss
ss
data16
cmp
push
xor
pop
pop
dec
lea
dec
cmp
mov
mov
orb
push
add
clc
xchg
xchg
lock
xor
xchg
lods
dec
ret
jne
movsb
je
adc
add
and
in
xor
andb
cwtl
or
mov
pop
or
and
adc
push
call
mov
outsl
lahf
das
mov
or
or
mov
xchg
cwtl
dec
inc
add
xor
adc
test
mov
not
popf
shr
lds
sub
inc
test
aaa
cmp
add
add
push
cmp
and
or
je
mov
daa
ss
sub
add
push
in
dec
out
ret
jne
and
nop
sbb
shl
sbb
ret
xchg
fadds
neg
xor
mov
out
add
cs
xchg
push
xchg
add
xor
sahf
lret
into
mov
dec
add
mov
cmp
add
testb
ret
and
mov
iret
or
or
mov
push
adc
pusha
int
add
test
and
jne
dec
add
mov
or
out
aaa
inc
cld
push
ds
inc
push
add
hlt
add
adc
rclb
dec
test
sub
sbb
fmul
int3
pop
and
pop
icebp
mov
or
shll
enter
pop
mov
xor
sarl
sub
add
dec
pop
inc
xor
stos
mov
cli
sti
adc
dec
sar
std
dec
inc
dec
pop
pusha
loop
xor
adc
aam
gs
or
jg
mov
pop
sbb
add
mov
mov
shll
int
mov
ljmp
movsl
xchg
je
push
or
addb
inc
fmul
sbb
fstl
divb
pop
fcomp
pop
loopne
fldl
or
fldl
or
mov
cmp
sub
aad
test
inc
lcall
push
leave
pop
jmp
fldcw
in
cmp
rorl
mov
xor
cmp
das
cmp
xchg
dec
je
add
int3
sbb
and
sbb
sti
fnstenv
std
mov
stos
lcall
jmp
in
into
inc
mov
lahf
jp
add
add
and
pop
std
sub
mov
mov
sbb
stc
fwait
add
adc
jmp
in
mov
or
add
jns
pop
test
lock
in
jmp
adc
pop
push
call
inc
fdivrl
fstl
push
rcll
mov
xchg
aaa
adc
jo
jne
das
and
inc
lock
pop
inc
cmp
push
push
pop
iret
sarl
outsl
cli
mov
in
mov
out
jns
xchg
jmp
jle
std
add
and
sbb
fnstcw
sub
push
or
or
and
lock
mov
xchg
xor
aaa
mov
jne
ds
xchg
jle
sbb
jle
stos
and
aas
inc
out
pop
push
inc
or
jge
mov
jmp
inc
faddl
or
jo
fstl
std
cmp
popa
push
jmp
test
fadds
mov
bound
orl
test
jne
push
push
adcl
out
jle
testb
push
in
add
adc
adc
add
push
mov
sbb
and
mov
xchg
adc
movsl
hlt
adc
cmc
push
cltd
push
xor
mov
mov
outsl
ss
xchg
sub
mov
mov
xor
js
or
dec
jecxz
xchg
mov
cwtl
test
in
mov
int3
call
rol
shlb
mov
lods
std
cld
push
testb
pop
pop
pop
mov
pop
mov
aaa
xor
cmp
pop
add
incb
inc
add
mov
repnz
sbb
fnsave
dec
sbb
pop
sar
aad
jle
lea
testb
mov
or
mov
cmp
xchg
mov
mov
or
mov
mov
pop
lock
in
push
adc
popf
jl
add
or
inc
jno
ja
stos
imul
push
ss
jae
pop
cs
xchg
std
lods
push
ret
mov
test
mov
int3
popa
mov
and
in
outsb
mov
movsbl
push
and
or
add
xchg
xor
add
cld
adc
mov
cmp
mov
stc
or
xor
sahf
xor
xor
in
and
mov
fldt
dec
je
imul
inc
movsb
cmp
lods
sbbl
push
cmp
sub
pop
aad
shll
adc
and
ss
cmpb
out
mov
push
filds
cmp
inc
xor
cmpsb
inc
scas
aad
push
imul
rclb
mov
das
xor
lods
cmp
push
mov
out
ret
mov
fwait
ds
pop
sub
mov
mov
jg
xchg
or
arpl
fs
push
or
iret
outsl
or
add
lock
rcrl
es
push
xor
xchg
scas
inc
or
popf
adcb
xchg
cmp
jns
setge
std
mov
xchg
dec
inc
shrd
sets
dec
stos
mov
cmp
xchg
shll
mov
into
jno
adc
mov
sbb
jmp
mov
mov
mov
push
pop
mov
add
jns
xlat
loopne
dec
daa
mov
sahf
add
inc
loopne
rolb
loop
das
in
hlt
std
sub
loope
xlat
pop
enter
dec
shr
mov
sub
add
sub
test
movsb
and
pop
mov
cmp
je
divl
and
dec
add
sbb
cmp
std
mov
sahf
pushf
push
sub
jecxz
xor
subb
dec
mov
dec
inc
sbb
std
aaa
pop
cltd
push
subl
fwait
cmp
std
adc
mov
insb
mov
and
roll
push
rol
dec
pusha
add
pop
mov
inc
mov
sbb
mov
bnd
sub
call
xchg
test
add
dec
sahf
mov
jbe
gs
push
mov
fdivrs
push
sbb
mulb
xchg
push
xor
std
neg
ret
pop
lds
sub
mov
lock
out
lods
xchg
test
push
sbb
andb
lods
lea
cmpl
cmp
xor
lods
pusha
xchg
movb
sbb
mov
mov
lret
dec
sbb
pop
imul
pop
mov
icebp
xor
pushf
pop
test
adc
dec
dec
jp
dec
xor
lret
xchg
xor
push
lcall
addr16
mov
lock
cmp
fs
and
inc
icebp
call
std
and
inc
xor
shrl
test
mov
jmp
and
mov
jne
ss
dec
daa
in
mov
jbe
jp
popa
dec
push
fdivrp
xor
jp
dec
ds
cs
and
das
in
push
test
sub
jmp
and
test
cmc
push
sub
std
pop
lock
lods
cmpsl
mov
sub
cmc
dec
sbb
jmp
jo
sbb
fsubrp
mov
jge
int3
cmp
cmc
loope
or
pop
cmpsl
test
daa
dec
add
rolb
repnz
mov
ds
jns
lock
dec
inc
cwtl
dec
dec
cmpl
push
jecxz
fbstp
bound
cmp
sbb
adc
inc
jmp
inc
push
inc
xor
sub
sub
sbb
mov
jp
jne
fdivr
push
loop
sbb
push
dec
pop
jno
and
xor
je
sbb
push
fs
std
std
aam
pushf
mov
xchg
adc
mov
das
andb
xchg
and
nop
and
push
push
mov
mov
mov
and
push
cs
movsb
pushf
sbb
or
mov
cmpb
aaa
push
inc
mov
xor
pop
adc
adc
jmp
ja
inc
sub
sub
jp
add
leave
or
js
mov
int
lock
add
xchg
popa
enter
lock
or
push
jno
add
push
sbb
push
pop
pop
xor
pop
xor
add
sbbb
push
test
jno
jns
adc
push
jecxz
inc
call
and
aam
pop
mov
pop
bound
add
adc
and
jno
jno
xor
repnz
les
imulb
or
mov
push
arpl
pushf
lret
mov
mov
in
fs
sbbl
lods
outsl
popa
dec
pop
dec
gs
inc
mov
sbb
push
lods
test
cltd
movsb
repnz
cmp
sbb
pushf
mov
or
out
jb
sbb
arpl
movsl
cmc
loope
xor
inc
sub
insl
and
mov
pop
sbb
mov
dec
jb
cld
mov
mov
mov
adc
test
leave
push
ret
rcr
pushf
xor
pop
repz
mov
nop
add
xchg
pushf
and
pop
mov
push
roll
and
aaa
movsb
push
cmp
mov
movsb
daa
xchg
lret
movsb
mov
daa
dec
pop
push
lea
dec
push
mov
sub
add
inc
xor
adc
sub
push
pop
test
test
and
pop
test
daa
push
sbbl
and
add
jno
sbb
lods
lods
or
dec
mov
push
les
mov
int
push
mov
je
jecxz
pop
xchg
stc
cli
scas
or
xor
mov
add
ret
push
add
pop
add
jns
test
lea
cmp
xchg
movsl
iret
mov
pop
sub
or
mov
mov
inc
in
gs
mov
mov
mov
sbb
pusha
mov
add
push
inc
dec
dec
pop
sbb
push
sbb
inc
aaa
sbb
shll
jecxz
jmp
decb
inc
pop
adc
sub
jne
push
lds
cmp
cmpsl
xor
mov
xchg
jb
lods
js
pushf
sbb
adc
jmp
pop
and
cmp
cwtl
cltd
fimuls
jl
dec
movb
xchg
jb
fbld
mov
and
xchg
mov
mov
cmc
jne
rolb
mov
mov
mov
pop
cmpsl
mov
sbb
pop
sub
mov
jne
lea
ljmp
pop
sub
mov
sub
sbb
je
jmp
bound
ret
jb
adc
sub
mov
jno
les
rcl
adc
cld
lods
or
out
outsb
and
jg
or
add
repnz
xor
adc
lock
push
gs
les
xor
and
addr16
dec
add
dec
iret
adc
imul
xchg
test
repnz
sub
insb
adc
or
xchg
mul
and
add
je
hlt
daa
clc
inc
push
popa
lcall
inc
testl
cmpsb
jmp
cmp
pop
test
test
cmc
les
xlat
inc
ljmp
mov
dec
in
pop
shlb
jae
stos
test
add
adc
add
lock
fs
and
inc
push
pop
push
push
jnp
cmp
jmp
rcr
or
jne
div
pop
dec
adc
mov
mul
pop
jb
cmp
or
cmp
or
rclb
adc
inc
inc
adc
neg
dec
fcmovu
lret
scas
mov
fxch
lea
loop
jge
and
add
ja
or
dec
into
xchg
sbb
loop
jmp
dec
adc
jl
sub
lock
or
nop
pop
mov
movb
inc
addr16
daa
push
sub
adc
les
dec
adc
push
and
xchg
push
mov
rclb
sub
push
jecxz
or
push
sbb
and
inc
or
add
add
add
pop
sarl
push
pop
mov
pop
mov
add
xchg
push
lock
sbb
loop
adc
cmp
dec
js
and
imul
dec
sbb
xchg
dec
add
popf
dec
jl
daa
ficoms
mov
jle
jne
lea
jb
loope
jo
push
nop
mov
mov
aas
inc
les
add
push
sub
test
fcomps
jne
in
jg
push
add
lea
xchg
fldcw
fs
adc
addl
loope
les
sub
iret
push
pop
mov
or
jno
stos
add
jl
and
or
fdivrs
add
pop
mov
cld
sbb
orb
jl
sub
add
adc
cmp
mov
je
fdivrs
sar
add
ss
xor
xchg
mov
sbb
sub
inc
inc
xor
pop
mov
sub
sub
enter
add
pop
sbb
adc
fcmovnbe
fwait
daa
stos
add
push
aam
push
pop
xor
mov
imul
lea
rcrl
out
add
jp
inc
or
mov
or
adc
lock
push
adc
xchg
cmp
mov
nop
int3
test
cmp
push
dec
jmp
xor
or
fcoml
sbb
call
stc
movsl
jne
hlt
lea
pop
out
out
testl
bound
inc
add
in
inc
lds
bound
outsb
dec
test
clc
inc
test
call
or
sahf
adc
cld
iret
mov
jge
adc
cmp
or
push
ret
shl
push
inc
pop
push
mov
loopne,pn
sub
stc
xor
or
xor
ss
dec
xor
adcb
in
and
sub
and
int3
inc
lock
cmp
jecxz
daa
sahf
and
adc
jns
aam
xchg
pop
addr16
outsb
sbb
jns
std
cld
pop
popa
adc
inc
ret
repnz
and
pop
out
pop
insb
jp
out
std
sbb
sub
je
inc
add
xor
and
push
mov
insb
clc
or
or
setl
loope
mov
dec
les
jbe
popf
or
mov
sbb
data16
cmp
jb
inc
fisttps
ret
loop
xchg
pop
push
roll
mov
insl
sub
aad
jne
mov
lods
jg
bound
sub
lods
inc
xor
push
lods
mov
jno
push
mov
sub
add
mov
or
jb
inc
fcmovnu
xchg
loopne
cmp
or
popf
lahf
or
dec
inc
loopne
mov
xchg
or
cs
cs
daa
push
xor
cmp
pop
mov
xchg
or
pop
leave
adc
push
insl
pop
jbe
xor
and
xchg
jmp
push
lret
xlat
lret
mov
fisttpl
or
fimull
ret
test
or
xor
inc
fstp
or
mov
jo
inc
lret
adc
loopne
outsb
pusha
loope
xorb
add
push
shrb
add
add
adc
fwait
xor
mov
cmp
sub
or
and
sub
and
cmp
sti
subl
xor
and
sarl
call
mov
jle
cmp
jle
int3
inc
sbbl
pop
orl
xchg
test
cmp
inc
scas
cs
pop
push
mov
xchg
pop
mov
sbb
inc
or
or
leave
push
sbb
sub
orb
mov
fwait
dec
mov
les
push
inc
xlat
out
xor
cmpsl
out
push
cmp
div
imul
or
sbb
pop
lds
hlt
add
pop
and
cmp
or
cmp
jbe
shld
cltd
push
sti
or
adc
aad
dec
repnz
and
out
push
or
fnstenv
leave
js
leave
jne
int
scas
shll
inc
mov
ja
mov
insb
pop
andb
xabort
pop
xchg
cld
mov
adc
je
or
je
dec
je
jmp
jmp
mov
mov
dec
pop
dec
or
dec
sbb
push
xchg
aad
sahf
pop
fdivrl
xchg
xor
add
push
rolb
mov
add
xchg
mov
faddl
mov
jge
pop
push
aam
inc
pusha
jne,pn
cmp
rol
inc
mov
packssdw
fcoml
mov
cmp
jge
addl
push
stos
and
or
adc
mov
mov
ja
lock
dec
or
sbb
push
push
dec
jmp
loope
popa
pop
shrb
pop
stc
and
mov
and
sub
lret
push
fs
lods
jecxz
and
pusha
dec
arpl
movb
mov
pop
subl
pop
mov
sbb
addl
push
popa
mov
push
je
sbbb
mov
cmpl
out
jbe
adc
xchg
sbb
and
mov
push
pop
cmp
inc
mov
fldl
xchg
and
xor
xor
mov
movsb
mov
mov
and
rol
ja
ret
cwtl
shl
and
and
or
ret
inc
frstor
dec
ret
rcll
jmp
insl
xor
call
and
mov
lahf
outsl
iret
sbb
inc
pop
test
push
xchg
test
push
in
cmp
xchg
mov
in
mov
fxch
adcl
popa
xchg
es
stos
sbb
push
inc
jecxz
addr16
push
xor
and
imul
cs
dec
mov
jecxz
aaa
and
mov
mov
or
sub
mov
dec
add
lcall
rcl
fcomp
xchg
out
mov
jb
add
add
cwtl
or
in
repz
aad
fdivs
or
mov
or
jmp
call
daa
inc
pop
or
jb
push
scas
sbb
mov
enter
movb
mov
and
or
test
mov
or
add
inc
fmuls
loop
sbb
jl
push
add
repz
jmp
xor
les
pop
inc
rolb
incl
mov
outsb
add
inc
cltd
aam
jo
je
pop
mov
fcmove
je
out
and
dec
pop
dec
push
or
orl
inc
test
add
adc
subl
xchg
xchg
cwtl
roll
or
lods
and
mov
movsb
or
mov
pop
and
inc
mov
mov
mov
xor
inc
pop
rolb
pop
mov
arpl
xchg
mov
aad
adc
cwtl
xor
cmp
mov
sbb
lea
mov
mov
jbe
xchg
sub
sub
sbb
jge
iret
xchg
mov
aaa
inc
stos
inc
test
clc
mov
sub
mov
and
shl
ud1
mov
into
ss
sub
les
xchg
push
push
orl
clc
or
sbb
sub
xor
fs
outsl
adc
push
test
loopne
inc
inc
jnp
sbb
adc
jo
andl
pop
out
sbbl
mov
cmp
dec
inc
inc
or
jne
mov
fcmovb
cmp
push
sar
sub
sbb
xchg
adc
mov
je
mov
cmp
addr16
and
lea
rorb
inc
xor
scas
push
dec
cmpsb
push
add
addb
and
pop
jb
nop
shll
pop
sti
or
sub
out
int
pop
add
dec
mov
pusha
ret
dec
rcl
pop
xchg
pusha
fldt
xor
loope
push
mov
push
push
pop
push
dec
aas
adc
push
xchg
sub
or
lea
pop
jmp
add
or
or
or
js
and
push
and
xor
mov
inc
xchg
inc
mov
in
xor
xchg
js
into
mov
imul
fs
mov
push
jl
roll
adcl
pop
pop
sbb
sub
rcrb
xchg
pop
aaa
and
lea
add
and
and
fildl
js
add
adc
inc
cmp
jg
popf
dec
adc
cli
insl
adc
dec
or
sbb
cmp
push
push
mov
push
cs
cmp
sar
and
shl
clc
imul
and
mov
pusha
inc
add
and
imul
fmul
pusha
mov
or
inc
adcl
cmpsb
push
add
loop
mov
or
orb
aam
add
xchg
xorl
ret
dec
into
lds
adc
sub
add
push
ss
jge
aaa
xor
ds
add
sbb
inc
clc
stos
add
shrl
aaa
and
movl
mov
mov
scas
pusha
aad
xchg
sahf
notb
in
adc
sub
bound
loopne
sbb
out
mov
fwait
hlt
or
mov
aam
adc
xlat
cs
push
xor
lock
shrb
push
sahf
lods
loope
lock
lahf
add
and
popa
jg
jmp
test
adc
loopne
or
xor
and
push
roll
incl
enter
mov
and
jb
hlt
mov
movsb
rcrl
add
ret
sub
aad
jmp
or
mov
inc
mov
shlb
jg
jg
adc
and
xchg
dec
xor
pusha
jo
adc
inc
sbb
xchg
or
inc
js
cmc
cltd
or
sub
lds
add
or
inc
add
and
push
cmp
je
sub
mov
loop
add
sub
inc
sub
jmp
hlt
rep
ss
neg
add
lock
movsl
lock
push
rep
and
xchg
or
sbb
jne
push
enter
ret
adc
push
in
mov
sub
dec
sar
stos
aaa
or
ljmp
add
lock
jae
pop
sahf
lcall
test
dec
cmp
decb
add
jmp
pushl
jae
sub
add
mov
or
xchg
out
leave
and
pop
lds
notl
xor
movl
inc
adc
xor
repnz
xor
js
cmp
jns
cmpsl
jl
adcb
test
ret
and
movsb
xor
push
mov
sub
push
je
pop
cmp
pop
jno
fnclex
mov
call
adc
outsl
push
push
dec
adc
push
and
jne
push
lahf
iret
notl
outsl
inc
or
jbe
jle
test
outsl
ja
sbb
mov
loopne
pop
sbb
hlt
mov
adc
mov
inc
lret
or
loope
push
dec
test
out
in
and
call
ljmp
dec
sub
pusha
pop
and
sahf
mov
shrl
shrl
in
fld
lock
lock
rep
add
ss
push
adc
adc
ss
and
or
inc
dec
and
push
ret
xchg
add
mov
jmp
pop
testl
jle
add
aam
hlt
push
xchg
jl
jecxz
loopne
pop
mov
test
hlt
adc
pop
jno
mov
lock
sti
or
lock
pop
inc
sbb
fisubl
and
xor
cwtl
fsubl
push
jb
in
dec
enter
push
add
push
iret
add
mov
loope
cmp
cmpsb
fldpi
or
stos
cltd
xor
jns
xchg
xchg
lret
fdivs
cs
sub
or
ss
insb
inc
test
xchg
pushf
or
push
add
sub
nop
jl
js
xor
mov
adc
push
push
clc
mov
test
and
push
add
mov
and
push
fnstenv
mov
pushl
popa
fwait
and
jmp
or
test
inc
and
in
es
mov
loop
sub
mov
imul
testb
mov
sub
cmp
ret
inc
sbb
mov
sub
mov
fisubl
out
push
sarb
fildll
ds
int3
loope
xlat
and
cmp
data16
jmp
adc
outsl
jo
divb
adc
push
sub
inc
add
or
mov
add
imul
fdivrl
push
dec
mov
cmpsl
dec
sbb
jae
fisttpl
xor
inc
test
aaa
popf
enter
mov
push
mov
or
icebp
pop
imul
sub
mov
movsb
adc
jg
jl
cmp
jg
inc
jmp
xor
mov
jbe
jne
imul
fimuls
sub
cmc
aas
sbb
xor
jb
cmp
add
repnz
fsubs
add
inc
sbb
inc
pop
cmp
add
push
mov
push
fidivl
adc
mov
adc
and
jmp
mov
cmp
movsb
lds
ja
ja
jnp
cld
and
add
jo
sti
mov
mov
leave
mov
leave
inc
or
inc
loopne
sbb
nop
jg
arpl
add
push
sbb
das
outsb
sbb
add
adc
repz
or
push
nop
or
orl
dec
lea
ja
cmp
and
push
add
pop
or
or
pop
mov
fcmovu
or
test
or
fiadds
inc
cmp
pop
sub
sub
jmp
cmp
fwait
sarb
xor
mov
sbb
test
sub
mov
ds
mov
push
add
call
not
or
jne
mov
inc
jle
cmp
jl
push
insb
add
mov
fs
nop
jb
xor
adc
pushl
add
pop
ret
in
mov
mov
mov
xchg
mov
jmp
sahf
sub
in
ret
pushl
test
cmp
xchg
cmp
add
push
and
and
test
jne
inc
sbb
lods
xor
mov
mov
or
dec
push
or
mov
test
imul
sbb
and
jg
outsl
add
pop
push
push
stos
xor
mov
inc
or
xor
sub
lret
pop
loope
xor
and
les
cmp
push
rclb
hlt
push
sbb
pop
push
or
add
add
ret
jg
scas
sub
int
add
mov
adc
xchg
jnp
add
cs
jo
jle
jp
orl
and
insb
sbb
xor
push
adc
push
fildll
adc
sub
out
jmp
rcrb
fsubr
add
shlb
cmp
jl
mov
sub
dec
cmp
jbe
xchg
call
fstl
push
mov
call
cmp
inc
lods
ret
sub
adc
xor
jl
ljmp
fimull
jbe
loopne
js
dec
repnz
pop
fdivs
sub
mov
aaa
inc
addr16
in
mov
adc
ss
sub
inc
push
clc
je
and
jmp
lods
stc
xchg
push
push
jp
outsl
mov
cmp
fdivrl
cmpsb
pop
mov
pop
cmp
inc
ss
or
add
cmp
jae
mov
je
push
inc
cld
es
lock
mov
xchg
dec
or
fisttps
pusha
adc
sub
cmp
add
add
jcxz
push
and
ret
xchg
jl
and
sbb
jo
or
aam
rolb
add
cmp
inc
push
pop
sub
movsl
and
push
lea
sbb
sbb
cmc
ljmp
mov
ds
loopne
jo
aaa
xor
scas
push
lea
sub
adc
or
add
cmp
inc
clc
xor
or
loop
mov
rclb
sub
loope
push
xor
out
and
pop
sbb
stos
adc
loope
sub
je
in
sbb
jnp
test
test
je
into
nop
cltd
aam
push
dec
add
adc
add
adc
sbb
fst
cs
loopne
push
sbb
je
add
je
mov
sbb
cltd
neg
push
mov
lea
xor
pop
add
sub
and
inc
xchg
hlt
test
xor
push
jg
adc
mov
cmp
rorb
xor
mov
int3
aam
jg
pop
adc
adc
mov
jecxz
push
andl
sbb
jae
jno
and
rclb
sbb
mov
jo
cmp
push
shrl
adc
out
push
fsubrl
and
jne
push
loope
push
add
xchg
mov
aaa
mov
shll
xchg
enter
cmpsl
sub
inc
mov
arpl
mov
cmp
cs
add
js
jns
pop
lahf
clc
push
je
or
jb
mov
cmpb
in
xor
sub
mov
xchg
test
gs
rorb
lcall
sub
xorb
cld
ret
mov
jb
push
in
mov
jg
inc
cmp
jae
push
cmp
jl
mov
inc
fadds
adc
pop
xorb
xor
jle
testb
jne
mov
sub
popa
out
push
ljmp
jb
pop
add
mov
and
inc
add
mov
pop
stos
repnz
pop
nop
inc
jbe
enter
mov
mov
icebp
cmp
scas
mov
sub
mov
sbb
or
xor
jmp
test
lods
mov
xor
dec
push
mov
rcll
mov
or
inc
andb
jns
cmc
jle
hlt
jne
jmp
frstpm(287
or
rcll
jl
cmp
ds
lods
inc
mov
loope
fmuls
ds
add
sbb
mov
add
in
xor
inc
cmp
jecxz
dec
jl
mov
subl
pop
xor
pop
xchg
stc
fcompp
push
mov
sbb
sbb
push
jle
add
add
jno
jbe
xchg
lea
dec
gs
push
lock
sbb
adc
sub
jo
jl
adc
mov
pusha
add
aam
les
in
pusha
jbe
add
add
loopne
mov
ret
cli
sbb
dec
in
mov
dec
jg
adc
xor
jecxz
mov
call
lret
pop
hlt
jno
mov
in
mov
xor
or
fadds
jmp
sahf
xor
mov
pop
push
addr16
and
sbbb
loop
mov
test
or
cmp
notl
bnd
pop
jp
and
push
push
aaa
fadds
mov
adc
es
sbb
adc
stos
push
mov
ljmp
add
test
pop
inc
mov
mov
mov
addr16
xlat
je
cmp
icebp
call
mov
and
cmp
jb
testb
and
testb
sub
rolb
jge
in
test
push
jmp
inc
loope
adc
sbbl
jecxz
js
cmpl
sub
pop
adc
daa
mov
add
or
add
push
pop
push
mov
push
or
das
aaa
out
pop
shlb
out
cmp
add
imul
push
inc
lock
insl
cld
mov
mov
ja
test
es
jmp
add
add
loopne
call
pop
pop
scas
sub
nop
jno
aaa
push
push
push
xchg
inc
insb
loope
jl
pop
orl
push
aas
cmpsl
lock
and
sub
sbb
or
or
fwait
mov
je
xchg
cli
adc
push
xor
lea
or
clc
add
mov
pushf
repz
jmp
sbb
out
popl
dec
pop
das
testb
imul
mov
je
inc
add
pop
pusha
rcrl
sub
loope
pusha
in
jmp
adc
mov
int3
js
mov
dec
dec
and
sbb
pop
roll
sub
xorl
ljmp
and
filds
addb
jle
sbb
xor
out
int3
push
lods
mov
jnp
sbb
xor
push
jb
shll
or
daa
or
es
pushf
pushf
or
adc
jb
mov
sub
jb
sub
xor
cmpsb
movsb
jo
cmp
inc
in
jbe
and
inc
cmovs
in
push
push
pop
add
cmp
push
cmp
js
mov
add
sbb
xor
and
mov
xchg
cwtl
pushf
es
dec
xor
sbb
imulb
cmpsb
push
add
push
xorl
test
imul
or
call
adc
in
adc
adc
dec
xor
hlt
sbb
clc
xor
int
and
and
daa
and
add
insb
pop
dec
or
xor
repnz
popa
push
jo
gs
leave
enter
inc
ret
add
rclb
pop
ret
add
dec
jne
out
dec
xchg
lret
add
jmp
or
push
cli
or
add
orb
popa
cmp
xor
jb
sbb
jne
push
jp
push
push
imul
arpl
test
bound
repnz
mov
inc
movsb
incl
mov
jmp
mov
add
mov
or
and
inc
adc
mov
mov
hlt
adcb
xchg
out
out
inc
ja
scas
xchg
pushf
pop
cmp
jnp
xchg
xchg
ss
je
sub
test
dec
faddl
push
sahf
ret
aad
xor
mov
out
mov
inc
push
add
fmuls
in
pop
sub
push
popf
fprem
cwtl
aam
mov
lock
scas
or
jp
sarb
pop
cmp
outsb
push
jae
orb
arpl
add
je
push
pushf
or
xor
and
dec
jnp
push
dec
and
loopne
test
and
mov
cmp
or
call
ret
gs
and
ret
test
cmp
jmp
pop
mov
add
push
push
dec
cmpsb
inc
sbb
outsl
sbb
fidivrl
pop
in
xchg
mov
inc
lahf
push
mov
pop
popa
fs
sbb
and
jl
dec
adc
and
adc
pop
clc
cwtl
jmp
orb
xor
push
adc
adc
xchg
sbb
sub
mov
adc
add
sub
dec
lahf
mov
add
and
pop
jo
std
loopne
into
push
push
dec
mov
loop
sub
xchg
and
add
lods
sarb
pop
adc
adc
cmp
jb
push
mov
push
dec
add
jp
and
adc
lods
lea
xor
rorb
mov
loope
shlb
mov
xchg
into
xor
jnp
mov
mov
repz
mov
out
mov
sbb
mov
sti
cwtl
je
gs
pop
mov
rclb
xchg
jnp
xor
xchg
dec
cmp
add
loop
pop
and
xchg
or
cmp
xor
es
inc
into
daa
jecxz
adc
mov
sub
mov
push
lea
iret
icebp
push
and
out
jle
mov
add
sar
mov
or
popa
inc
cli
pusha
xchg
sub
jne
sbb
xor
popa
push
mov
and
insl
test
std
jns
popf
add
sbb
inc
int3
mov
inc
sbb
mov
lods
mov
in
ljmp
call
popf
mov
lea
sbb
inc
jns
jp
aam
dec
sub
rcrl
inc
mov
pop
addl
pop
mov
inc
stos
sbb
mov
inc
sbb
addr16
mov
je
into
outsb
pop
cmp
in
lods
mov
ret
sbbb
push
hlt
mov
rorb
into
sbb
lcall
sbb
outsb
cmp
add
jecxz
out
fidivrl
enter
push
lret
push
push
lahf
ficoml
gs
sub
loopne
call
jmp
push
dec
inc
test
dec
lea
push
pop
fcoml
inc
loop
add
cmp
fmull
sub
cmp
fsubs
push
inc
mov
mov
dec
sub
adc
xor
sarl
cmp
test
cmpl
mov
int
push
test
cmp
add
add
rcrl
mov
mov
sbbb
cmp
test
popa
xchg
mov
aam
shl
rolb
add
inc
popf
ficomps
int
push
jmp
inc
xchg
loop
or
mov
scas
pusha
push
je
xor
sub
add
jae
lcall
mov
fisttps
cmp
test
les
mov
sysenter
sbb
dec
add
xchg
sbbb
cwtl
das
adc
icebp
cmp
jmp
xchg
lods
fucomp
mov
andl
fidivrs
sahf
push
cmp
mov
divps
mov
inc
cmp
cmpsb
aas
movb
inc
ret
popf
mov
adc
cmpl
fmuls
pop
lds
push
and
inc
mov
inc
add
adc
daa
jmp
or
pushl
lock
stos
in
nop
lret
cmpb
inc
cmp
mov
inc
cmp
jae
inc
inc
lods
push
orl
shll
movsl
std
pop
mov
inc
inc
sbb
or
sahf
add
jb
dec
bound
pop
add
inc
es
mov
aad
xchg
dec
dec
stc
pop
xchg
shr
movsb
cmp
add
enter
push
xchg
sub
adc
cmp
add
test
mov
enter
pop
lock
imul
sub
cmp
std
jno
adcb
sbb
fstpl
mov
test
add
push
jo
lret
jmp
or
ret
stos
adc
mov
jmp
sbb
sbb
inc
pushl
lods
adc
cltd
sub
mov
fdivrs
jne
ljmp
loopne
inc
jne
fsts
adc
xor
jnp
mov
pop
cmp
mov
inc
add
adcl
sbb
ret
xchg
and
sbb
icebp
pop
or
xor
loope
aas
and
add
int3
test
add
sbb
cmp
mov
je
aaa
inc
adc
and
add
sub
and
mov
mov
mov
lret
mov
imul
sbb
fmull
pop
adc
inc
dec
int3
jmp
test
xchg
sbb
addl
pop
sbb
mov
pusha
adc
sub
mov
mov
and
push
push
pop
cltd
jne
in
stos
add
jge
mov
xor
push
in
push
sbb
out
testb
push
mov
cmpsb
adc
fdivrs
or
shll
ret
insb
add
mov
pop
and
out
xor
ret
rcll
push
mov
or
mov
sbb
call
cmpb
aaa
xor
xor
pusha
push
sub
cmp
inc
push
push
sbb
into
sub
pop
jne
popa
pop
pop
orl
movsb
or
fcompl
notl
adc
dec
pop
movsb
gs
jne
out
push
gs
pop
dec
sbb
in
pop
cmp
divl
lock
sub
data16
dec
hlt
adc
in
pusha
sti
stos
jge
addr16
pop
fs
push
or
mov
mov
sub
pusha
adc
test
sbb
mov
adcb
pop
mov
cld
pop
xchg
xor
inc
and
jg
mov
call
mov
clc
je
add
test
hlt
fmull
cltd
into
push
and
lock
outsb
push
dec
xchg
and
int3
sbb
cwtl
clc
mov
mov
cli
outsb
je
mov
jmp
push
and
mov
xor
je
inc
cmp
shlb
mov
pop
xchg
test
add
js
pop
sbb
dec
loop
xor
add
or
dec
popa
inc
aad
jecxz
and
add
add
mov
xor
sub
std
dec
mov
cmp
lcall
and
cmp
adc
stos
rcrl
dec
or
dec
test
inc
jmp
icebp
xor
dec
iret
les
jge
mov
lcall
and
rol
into
xchg
ret
movsb
addr16
push
adc
cmp
pop
movsl
cmp
push
sub
jb
cmp
cli
sbbb
data16
push
sbb
and
movsb
push
jnp
lock
sbbl
bound
into
rclb
jp
inc
push
push
cmp
mov
sbb
jbe
xchg
aaa
mov
push
das
test
cmp
ljmp
nop
pop
and
pop
sub
adc
in
stos
add
dec
data16
das
mov
sti
xchg
lret
push
dec
pop
mov
mov
iret
cmp
mov
dec
cmp
and
jns
inc
mov
pop
sub
sbb
sbb
sbb
push
adcb
test
adc
inc
jne
adcl
jmp
scas
xor
mov
int3
cld
test
mov
cmpsl
mov
inc
das
xchg
movsb
aaa
xchg
leave
inc
outsl
and
mov
jl
shlb
sbb
adc
sub
dec
mov
sub
pop
xorl
pop
icebp
add
inc
je
cmp
sub
jae
lcall
aam
adc
data16
rolb
rorb
jmp
jno
xchg
dec
imul
push
repz
pop
or
jne
and
cmp
orl
push
dec
or
ror
rorb
adc
leave
push
insb
or
arpl
movsb
add
int
adc
add
adc
les
rolb
inc
push
dec
hlt
xor
pop
cld
pushf
pop
mov
xor
pop
sub
je
push
popf
ds
or
call
cmpb
and
data16
pop
mul
ret
mov
push
mov
add
push
inc
cmp
mov
jo
js
dec
divb
or
or
iret
inc
dec
push
xor
dec
fiadds
and
and
in
rolb
dec
xchg
add
addr16
lret
xor
mov
adc
outsb
inc
pushf
nop
pushf
and
shll
dec
and
adc
or
fcompl
in
shr
add
jmp
jo
xchg
add
or
push
add
add
push
in
push
or
add
cwtl
xor
inc
mov
xor
je
or
sbb
or
push
les
subl
inc
jmp
push
xchg
mov
clc
testb
adc
std
or
jmp
inc
and
mov
and
sbb
popf
and
jecxz
jge
xor
add
or
inc
hlt
jnp
sbb
and
cltd
or
or
add
sbb
sbb
loope
fnstcw
mov
adc
pusha
mov
pusha
loope
pop
sub
pusha
and
dec
and
ficoml
fstp
ds
jne
fldl
insl
sti
fld
add
sbb
mov
push
or
lret
mov
es
adc
sti
add
jg
sahf
testl
fisttps
js,pn
mov
mov
xor
dec
je
add
dec
jne
orl
push
sbb
mov
in
push
jmp
testl
fcmovbe
shll
pop
xorb
divb
sub
and
inc
add
adc
add
inc
flds
fsts
mov
shlb
call
sbb
xchg
std
mov
pop
sbb
sbb
inc
ss
inc
dec
movsb
cmp
xorl
imul
adcb
sbb
sti
jp
xchg
stc
cmp
dec
outsl
es
in
inc
inc
inc
xchg
aaa
sbb
xor
jp
ficoms
xor
and
les
add
jmp
sub
sub
jmp
sub
cmp
nop
jns
push
sbb
test
push
adc
sti
hlt
add
pop
pop
pop
or
add
mov
fdivr
sbb
inc
mov
pop
in
adc
jle
das
outsb
mov
jge
ffree
repz
mov
inc
leave
ljmp
add
js
bnd
jge
aas
xchg
pushf
repnz
xchg
les
cmpsl
ss
insl
in
sbb
jp
dec
in
xor
jo
lock
pop
push
jno
mov
sahf
jmp
loope
inc
test
or
add
repnz
rcll
or
jmp
add
and
rcrb
sbbb
push
add
mov
sbb
mov
sbb
pop
push
jp
addb
jmp
or
mov
mov
fwait
inc
cltd
mov
add
shrl
dec
sbb
dec
mov
sbb
sbb
js
mov
mov
adc
testb
insb
fistps
hlt
adc
lods
andb
xor
mov
sahf
add
or
push
ret
les
xor
jae
push
ret
add
fsubrp
fwait
jno
imul
mov
daa
jnp
mov
or
xor
xor
xchg
adc
andl
dec
or
imulb
scas
adc
mov
das
mov
fsub
in
push
imul
lret
sar
add
jae
lea
push
or
mov
xchg
cmp
lods
sbb
jbe
sub
outsl
andl
pushl
xchg
into
popa
or
adc
jnp
adc
inc
or
mov
jbe
mov
jno
jae
mov
or
leave
xchg
adcb
cld
adc
clc
pop
data16
xlat
daa
xor
cs
subl
and
sahf
push
gs
push
rolb
jne
xor
jo
mov
fs
and
xchg
mov
popa
mov
mov
and
and
sbb
inc
aas
into
sahf
push
repnz
pop
fadds
jbe
adc
es
push
sbb
pop
cwtl
or
es
ret
lcall
dec
pop
or
mov
aad
icebp
sbb
sti
cwtl
mov
gs
or
imul
add
or
push
sarb
inc
mov
sbb
jne
pop
rcrb
sbb
xor
add
or
jl
out
shrl
shr
loop
pop
or
xchg
ljmp
mov
mov
adc
fnop
add
adc
and
pusha
cs
and
xor
push
or
insl
or
push
mov
loopne
hlt
or
sub
fwait
cs
das
sahf
adc
xchg
sub
sbb
les
or
sub
fdivp
jb
mov
fldpi
xor
push
or
fistpl
inc
je
sbb
and
ldmxcsr
xchg
jo
inc
xchg
and
pop
jle
mov
popf
test
dec
lods
test
mov
call
add
adc
sbb
aam
jecxz
sbb
push
call
pop
lahf
sub
data16
call
movsb
shlb
mov
pusha
sbbb
nop
popf
test
push
dec
insl
push
adc
cmpsb
stos
mov
sub
das
ja
inc
jmp
push
mov
jnp
add
repnz
and
js
push
push
dec
adc
sub
xchg
cmp
cmp
jo
mov
pop
push
jp
enter
mov
ss
fldl
sti
jbe
add
sbb
inc
out
notl
adc
enter
or
add
loope
sub
adc
dec
sub
mov
add
xlat
adc
push
ret
mov
push
pusha
jne
das
lods
std
pop
xchg
dec
data16
and
inc
les
test
repz
dec
jl
pop
adc
pop
and
scas
add
dec
or
jo
inc
loopne
add
cli
dec
push
or
sbb
push
outsl
test
and
aas
sub
push
inc
dec
jb
push
loopne
add
push
daa
mov
pop
in
mov
test
jne
or
jl
mov
orb
stos
pop
pop
or
hlt
mov
xor
call
orb
rcrl
xchg
cmp
lock
loopne
dec
jns
dec
xchg
loopne
mov
cltd
out
mov
pop
pusha
sub
inc
shl
adc
dec
mov
outsb
inc
inc
aam
loop
rolb
adcl
pop
dec
sub
repz
push
cltd
insb
pop
cmpl
and
into
loopne
insb
mov
imul
lea
xor
int
cmp
jb
int
shll
cmp
sbb
cmp
adc
mov
je
repnz
add
insb
das
adc
dec
mov
adc
mov
roll
aaa
pop
test
pop
and
or
test
sbb
add
in
push
or
sti
cmp
dec
dec
stos
inc
adc
jo
cmpb
or
dec
xor
cmp
inc
inc
pop
rorl
cli
and
or
mov
out
and
sar
sub
not
les
xor
push
sahf
inc
pop
ds
push
or
icebp
cmpsb
andb
mov
and
loope
inc
loope
out
mov
jl
data16
adc
xchg
aam
inc
mov
out
pop
cltd
inc
jno
in
mov
jno
add
addb
push
mov
inc
pusha
lcall
sub
cmp
comiss
push
fs
push
movsb
xor
pop
xor
pop
add
dec
lds
dec
jns
inc
lock
rol
mov
popa
inc
or
aas
popf
inc
fidivl
cmp
sti
cmpl
pushf
mov
clc
dec
xor
paddusb
pop
andl
add
xchg
out
xor
lea
and
mov
and
jb
scas
cld
sbb
and
rorb
add
pop
scas
shl
rolb
loop
ljmp
js
add
stc
inc
sbb
nop
add
xchg
adc
loop
cmpsb
stc
and
inc
sbb
xchg
inc
pop
adc
sbb
mov
or
nop
sbb
and
add
and
add
add
pop
stc
test
sbb
xchg
mov
clc
or
or
pop
inc
jl
push
xchg
and
add
or
lcall
aam
loop
add
mov
lock
sti
adc
leave
push
adc
imul
mov
pushf
out
xchg
inc
int3
nop
jbe
jne
mov
adc
push
nop
and
or
cmp
inc
sti
push
or
or
jmp
xor
cs
mov
xchg
add
je
pop
ja
mov
sub
cmp
ja
push
dec
jmp
mov
and
mov
imul
jmp
enter
clc
call
or
mov
jmp
cwtl
dec
inc
push
testb
jmp
andl
jmp
cmpsl
pop
sub
test
add
and
adc
push
add
cmp
jle
jbe
inc
jle
cmp
push
xor
popl
push
jmp
dec
push
mov
gs
mov
lods
int
add
mov
jmp
add
push
jmp
fmull
sub
adc
mov
ret
fisttpl
fwait
or
pop
jge
out
cmp
inc
pop
cmp
test
daa
mov
mov
add
jne
stos
and
je
jmp
mov
or
jge
jmp
and
out
add
fisubrl
call
mov
out
push
sub
mov
or
cmp
dec
cwtl
pop
pop
das
push
jl
inc
jnp
scas
mov
xor
mov
stos
sub
mov
je,pn
scas
call
arpl
jge
mov
mov
fwait
sub
flds
cld
mov
jbe
cmpb
jl
incb
dec
mov
inc
addl
pop
push
les
dec
loop
addl
jmp
cld
mov
jge
in
cli
and
sub
outsl
mov
adc
or
push
popa
mov
jecxz
add
pushf
jmp
push
cwtl
pop
adc
icebp
xor
or
adc
cmpsl
push
adc
lcall
rolb
push
push
cwtl
jge
neg
shll
mov
dec
adc
mov
lcall
test
cmp
cli
sahf
mov
sbb
lods
test
cmp
mov
jge
mov
popf
fnstsw
lock
xor
jne
add
xchg
jg
lods
inc
xabort
jo
out
dec
test
add
xchg
pop
push
inc
mov
loop
loopne
sbbl
enter
jb
mov
loopne
and
mov
or
dec
or
sbb
push
jno
xor
mov
push
xor
and
and
and
mov
into
nop
fs
mov
inc
lcall
pop
stc
jns
mov
ja
ja
int
popa
shlb
cld
pop
es
dec
jl
pop
add
inc
int3
jne
loopne
add
les
test
fwait
pop
incl
jne
inc
or
cmp
pop
jnp
and
xor
hlt
int3
add
jne
or
xor
aaa
hlt
shrb
test
rcrb
and
popf
mov
mov
les
movsb
push
add
sub
jns
hlt
dec
mov
test
fcmovbe
in
aaa
js
subl
lcall
inc
lock
data16
stc
jg
add
and
mov
clc
popf
push
test
js
mov
aam
gs
ja
add
lods
add
or
shr
lock
sub
push
out
mov
bound
or
adc
adc
les
mov
xor
mov
aas
xchg
rclb
repnz
insl
fadd
loopne
shr
or
add
jge
shl
call
adc
jo
jne
insb
mov
push
das
int3
mov
mov
rolb
and
or
sub
sahf
jge
lcall
add
ficompl
mov
in
cmp
sti
pop
lods
es
orl
fiadds
push
call
mov
mov
pop
rol
jb
adc
fdivl
adc
mov
add
ja
orb
push
sbb
cmp
sub
add
lret
into
xor
lods
scas
imul
and
fcomp
xchg
cmp
adc
shlb
add
clc
jmp
sub
jnp
into
xchg
add
negb
mov
adc
les
bound
mov
stos
add
and
xchg
add
loop
mov
lcall
and
ucomiss
jns
push
sbb
imul
inc
push
repz
gs
rorb
lods
arpl
pop
jne
cmp
add
push
inc
movsb
inc
scas
inc
mov
mov
insb
bound
pusha
mov
rorl
sahf
pop
cmp
mov
sub
dec
movsb
or
or
stos
push
xchg
xchg
adc
inc
cs
or
ss
gs
adc
aas
lods
or
out
mov
dec
cmpb
je
mov
sti
decl
jne
dec
mov
inc
inc
mov
out
pavgb
adc
fldz
call
mov
inc
jp
lock
lret
jae
sbb
push
or
clc
cmp
rorb
or
shrb
mov
inc
loope
mov
std
cmc
adc
and
movsb
push
xchg
push
xchg
pop
ficompl
pop
jno
and
jmp
and
dec
fadds
add
dec
testb
sub
jo
fimull
mov
jge
add
and
cld
jbe
or
add
xchg
mov
je
cmp
pop
loope
dec
or
lahf
push
cmpl
add
addr16
clc
add
mov
and
or
mov
jne
movb
and
add
mov
add
add
push
fisubl
xorb
mov
es
sahf
scas
test
pop
add
add
pushl
mov
jmp
sub
add
adc
or
pop
aam
imul
add
sbbl
pop
dec
sub
inc
out
cs
dec
jns
les
sub
lcall
cld
jo
jns
xor
push
or
add
dec
pop
sub
add
or
adc
sub
push
push
xchg
ret
addr16
mov
add
mov
sub
adc
xor
add
aas
adc
clc
pusha
pop
and
fsubrs
cmp
or
push
ja
push
ret
jbe
push
clc
dec
adc
pusha
cmp
aam
sub
adc
lods
dec
rcrb
lods
aaa
sbb
imulb
add
enter
pop
xchg
and
push
cmp
mov
jp
lret
in
add
and
push
mov
fidivl
out
and
cli
insb
mov
xor
sbb
xor
test
push
call
loopne
sbb
imul
pop
xchg
jae
cld
pop
fldl2t
call
push
ret
adc
and
and
rorb
fcoml
adc
movaps
adc
xchg
or
add
push
and
mov
mov
nop
adcl
add
add
adc
mov
or
jmp
xchg
into
mov
sub
xchg
sbb
push
pop
push
into
inc
lds
pop
inc
add
in
push
pop
push
xor
push
rclb
jo
add
add
icebp
dec
test
mov
dec
inc
xor
leave
and
addr16
loopne
shll
inc
and
mov
je
dec
mov
dec
fwait
adc
pop
aas
mov
neg
sbb
jecxz
mov
jg
ret
and
out
daa
xor
or
jne
pop
cmp
sahf
mov
js
add
out
icebp
out
scas
test
movb
and
loop
push
and
push
add
or
xor
inc
ret
sub
push
cltd
cmp
adc
out
popa
xchg
mov
movswl
les
mov
cld
add
mov
ret
mov
add
mov
shrd
push
jle
pushf
int3
sub
enter
out
jge
sbb
clc
mov
insl
outsb
mov
xchg
stc
inc
cltd
pop
sarb
add
dec
jmp
xchg
clc
adc
mov
rorl
sub
push
jo
movsl
js
inc
call
inc
or
xor
pop
cmp
xchg
add
lock
sti
xchg
inc
out
ja
mov
shrl
add
sbb
clc
add
js
jg
jb
push
sub
or
lock
mov
inc
adc
neg
cmp
mov
lock
add
sub
in
shll
pop
shlb
xor
mov
lock
shll
or
jg
lods
jb
in
shll
and
pop
or
or
sbb
add
daa
mov
subl
jae
inc
add
dec
xorb
push
es
xchg
inc
fsubrs
push
je
int
stos
sub
adc
push
scas
pop
mov
call
filds
adc
and
in
subb
add
or
andb
subl
mov
sarb
mov
push
add
shll
jl
outsb
and
popa
push
mov
pop
inc
sbb
pop
xor
or
cltd
out
into
mov
and
adc
xor
or
into
sub
je
roll
fs
push
shl
jne
subb
sbb
ficoms
dec
xchg
lea
add
popa
push
dec
adc
push
sub
or
jmp
insl
cmp
cs
xchg
cld
cld
jl
xorb
fisubrs
mov
mov
inc
test
jle
mov
pop
incb
inc
xor
in
loop
mov
xorl
sarl
clc
gs
or
pop
or
jne
xchg
xlat
out
sub
inc
popa
je
inc
je
fadds
sbb
jmp
xor
mov
inc
pop
leave
jmp
dec
xchg
and
or
sub
or
or
frstor
jp
cmp
lea
test
lcall
sbb
lods
std
pop
call
jne
fmull
insl
push
pop
clc
fstps
or
filds
mov
lahf
push
loope
rcll
rol
and
mov
ret
xor
inc
loop
es
arpl
fmull
arpl
pop
loop
jb
xor
ds
sub
inc
push
inc
mov
cmp
ret
inc
sahf
jmp
xor
push
cmpb
jne
push
add
jp
lds
cmpsb
sahf
or
mov
add
hlt
xchg
movsb
xchg
cltd
jno
push
jp
cmp
add
fcoms
les
jo
scas
lds
dec
push
je
lahf
xor
jbe
cmp
sub
leave
cld
fs
out
add
test
ret
add
cmpsl
push
sub
enter
mov
mov
mov
or
outsb
xchg
ss
push
cmp
sub
leave
es
sub
xchg
pop
lcall
add
xor
fsubr
mov
pop
iret
push
or
sub
jns
pop
lret
fimuls
push
or
push
pop
inc
pop
jo
dec
push
mov
les
adc
pop
inc
rcrb
imul
movsl
pop
call
test
insl
mov
popa
jle
ds
lret
pop
adc
dec
imul
int3
mov
pop
or
push
fdivs
jge
pusha
cmp
adc
mov
fidivrl
aas
adc
jl
inc
add
sbb
and
je
adc
sub
mov
xchg
xchg
cmp
or
mov
mov
icebp
dec
and
pop
mov
sahf
inc
fsubl
add
xor
loopne
and
dec
dec
int
ffreep
dec
jne
push
push
jmp
or
jmp
testb
je
push
ljmp
inc
mov
adc
shl
sbb
ficompl
int
jae
or
xchg
cmp
jne
dec
arpl
xchg
sbb
add
movsb
hlt
pusha
popf
mov
sbb
les
push
jnp
shll
loopne
scas
push
sbb
jne
in
inc
subl
push
adc
cmpsl
mov
and
jns
es
push
into
push
int
pop
sub
aad
add
cmp
jae
in
cld
mov
dec
dec
and
or
add
mov
jecxz
push
push
jbe
mov
addr16
jns
jne
arpl
mov
cwtl
push
jp
cmpsl
and
push
fwait
add
mov
mov
adc
and
jae
faddl
movl
orb
popa
and
xlat
sub
or
lods
mov
cmp
push
cmp
adc
mov
jb
cmovbe
add
mov
std
fidivl
adc
sub
push
cmp
outsl
arpl
and
xor
adc
add
daa
sbb
inc
jmp
xchg
inc
push
and
add
jbe
sarb
jbe
xor
stc
inc
inc
test
data16
sub
push
sbb
inc
je
push
push
cmp
rolb
sbb
rorb
mov
inc
jg
test
jns
mov
jo
push
xor
lret
cld
jo
add
inc
js
xchg
xchg
xor
inc
arpl
test
xor
cmp
outsl
fstpt
inc
in
adc
repz
sbb
xchg
and
xor
sub
adc
js
xchg
movsl
jo
mov
test
jge
cmp
into
jge
inc
and
pop
mov
push
xchg
lods
cld
sub
es
xchg
mov
dec
movsb
cmp
je
loope
sub
jmp
cltd
jp
repnz
leave
ret
rorb
mov
ljmp
ret
cwtl
loopne
mov
or
rorb
arpl
xor
dec
fimuls
nop
adc
movzwl
nop
sub
add
jo
sbb
std
or
es
pop
mov
lea
sub
sbb
xchg
push
sbb
or
cmovl
addl
lret
push
leave
js
or
jecxz
jb
jo
mov
adc
push
lock
xchg
adc
adc
jmp
pushf
ja
push
leave
xor
adc
push
loop,pn
xchg
lods
push
insl
sbb
mov
jne
push
mov
sub
nop
push
push
divb
ja
dec
lock
push
mov
cmp
and
int
fisttpl
mov
cmp
lea
or
xor
shr
add
or
and
movsl
mov
fildll
and
out
pop
or
mov
add
add
or
bound
scas
push
xor
cmpsl
sti
in
stos
mov
cmp
sbbb
sbb
mov
fildl
push
add
push
pusha
mov
push
jle
and
cmp
fnstcw
inc
cmp
test
inc
pusha
lock
dec
add
lea
mov
shr
sub
mov
adc
mov
cs
sub
mov
mov
repnz
sbb
rorb
cmp
adc
out
decb
testl
sbb
and
push
pop
shl
jmp
cmp
rolb
ficoms
jl
xchg
shl
andl
inc
lcall
test
sarb
clc
stos
loope
jo
imulb
or
test
push
ror
loop
lret
test
je
dec
rolb
sbb
pushw
or
cmp
mov
sub
cmp
call
movsb
ficoml
fadds
sbb
popa
hlt
cmp
into
sub
push
add
test
xchg
cmpsl
cmp
cmpsl
jb
inc
fs
cld
sub
jne
imul
push
lods
pusha
push
ljmp
into
adc
or
inc
push
fiadds
mov
push
xchg
std
or
cmp
rcr
jmp
push
jle
inc
push
loopne
cld
inc
mov
xchg
sbb
or
loopne
mov
out
mov
cmp
lret
mov
leave
inc
fistpl
dec
cmp
lock
sti
mov
cmpb
jl
xor
xorb
decb
je
sub
mov
xchg
adc
dec
add
push
roll
sub
cmp
pop
dec
inc
push
push
mov
push
push
and
pop
nop
iret
ds
push
imul
inc
adc
test
sahf
ss
jne
aam
pop
or
stos
adc
sub
push
adc
rclb
in
mov
jo
jbe
dec
add
pop
insl
fs
and
enter
cld
push
rorl
loope
into
jne
call
flds
and
rcrl
gs
add
je
movsl
inc
add
mov
pop
mov
orl
or
pushf
sub
js
test
rclb
jne
popa
sub
movsw
add
mov
inc
outsb
push
sbb
push
xchg
or
inc
push
sub
xchg
outsb
push
pop
xchg
push
ret
lcall
cmp
or
inc
inc
fidivrs
fdiv
fiaddl
sbb
sbb
cltd
in
adc
sbb
or
int
jne
or
adc
sbb
ss
and
fldcw
fcomi
sbb
enter
adc
sbb
and
or
gs
dec
jns
popa
xchg
jnp
jne
in
pop
and
pop
pop
pop
and
or
pop
push
icebp
mov
shr
push
ret
loope
shr
aam
cwtl
inc
test
stc
shl
mov
notl
cld
lock
je
divb
lock
pop
shlb
add
and
cwtl
push
xor
imul
fiaddl
pop
pop
nop
adc
jno
inc
dec
dec
scas
inc
adc
lahf
push
aaa
hlt
es
xchg
ds
mov
gs
int
les
negb
or
into
jbe
jns
aas
push
adc
adc
aam
aam
pop
push
cs
test
out
add
push
or
adc
pop
pop
in
das
push
in
es
sbb
pusha
adc
lret
adc
cmp
test
and
js
jp
das
gs
add
or
sahf
mov
cs
int3
xor
sbb
and
mov
pushl
dec
fidivs
push
ds
inc
jge
movsl
rol
cmp
movsb
popf
lret
adcb
leave
jne
shlb
dec
sub
testb
ret
adc
push
sub
leave
je
nop
lock
rclb
mov
mov
mov
shll
loope
into
es
mov
je
movsb
and
pushl
mov
push
cmp
ja
add
cmp
adc
cmp
jne
mulb
xor
adc
mov
xor
idivl
pop
jo
test
add
aam
and
push
add
mov
or
ja
inc
jnp
sbb
mov
dec
aaa
push
jbe
and
pop
mov
scas
incb
or
jmp
imulb
je
iret
push
push
pop
pop
mov
mov
movsb
into
sarb
xchg
sbbl
mov
iret
pop
lcall
cmpsl
dec
cmp
testl
cltd
rcrl
mov
add
mov
sub
push
pop
pop
shl
pop
aad
dec
daa
pop
add
test
call
inc
pop
in
scas
pop
and
xchg
or
xchg
dec
jae
push
pop
inc
test
outsb
pop
push
sub
pop
mov
xchg
xchg
cmp
xchg
xor
sub
xor
ljmp
or
push
imul
add
bound
adc
addps
xor
or
adc
orl
jle
dec
mov
movb
push
rcl
rcl
lahf
out
sahf
aad
xlat
fcomp
add
mov
pop
nop
data16
inc
add
fwait
js
and
adc
sub
push
imul
enter
pusha
mov
or
mov
test
push
inc
push
add
fisttpl
aas
insl
sbb
dec
mov
loope
push
divb
xor
maskmovq
in
jo
loope
push
call
cmp
push
push
sbb
push
push
subb
push
jns
mov
or
sub
push
jno
adc
lcall
mov
imul
mov
sbb
dec
lea
add
mov
inc
js
mov
and
or
fucomi
add
pop
addr16
out
loop
stc
outsb
inc
xor
pushf
sub
jo
add
sub
mov
cmpsl
or
xchg
lock
fisubs
addr16
inc
or
pushf
push
jp
mov
add
jb
inc
adc
decl
cmpsb
and
push
or
movb
adc
add
icebp
testl
xchg
lea
pop
sbb
les
andl
decb
xchg
sti
xchg
loope
add
inc
dec
mov
mull
in
insb
cmpsb
jnp
ljmp
adc
xchg
mov
call
and
inc
inc
jnp
fnstsw
dec
test
rolb
push
mov
in
mov
inc
jl
loopne
dec
xchg
mov
or
or
dec
push
dec
enter
mov
add
ret
movsb
sub
faddp
mov
push
addl
mov
cwtl
push
jl
and
ffreep
dec
shll
rol
add
loopne
jle
jle
jne
add
adc
enter
sbb
rolb
sar
loopne
sub
incb
ret
pop
or
or
call
clc
je
sub
cmpl
xchg
popa
xor
ss
or
dec
inc
xchg
lret
dec
add
lock
mov
repnz
dec
div
cli
cli
inc
add
repnz
mov
movsb
add
lcall
mov
es
sub
mov
sbb
adc
mov
inc
and
xchg
mov
sarl
fidivl
fnstenv
xchg
push
dec
sarl
mov
lock
ret
lods
mov
dec
or
push
not
repnz
pushw
sub
loop
cs
jge
xchg
notb
bound
mov
xor
mov
das
and
mov
or
dec
xor
call
pop
je
or
jne
fdivs
mov
cmp
ss
inc
test
dec
cwtl
mov
inc
ss
mov
repz
sub
jl
mov
push
pop
or
call
adc
lret
push
cmp
cld
lea
fcmovu
cltd
mov
mov
ljmp
lods
mov
inc
inc
and
cmp
sbb
clc
sbb
xchg
add
sbb
testb
imulb
lock
push
sbb
jge
cs
and
lock
adc
cmp
jne
jne
call
fnsetpm(287
loopne
pusha
push
mov
lods
into
mov
adc
out
dec
push
in
cwtl
sub
insb
sbb
adc
inc
add
inc
inc
insb
jnp
inc
add
add
push
nop
cmp
cmp
dec
stos
lds
push
pop
jle
out
cmp
pusha
hlt
adc
sub
xchg
popa
pop
push
pop
shr
ljmp
jb
push
shll
test
jne
sbb
neg
jbe
or
inc
imul
and
insl
call
dec
mov
loopne
fsubs
cmp
outsl
lret
push
and
sbb
fstl
ret
push
adc
push
add
sub
out
pop
xor
and
xchg
mov
ss
dec
repnz
mov
add
sub
lock
push
into
out
enter
add
push
test
movsb
push
js
add
enter
mov
push
shlb
sub
int3
negl
notl
jl
sahf
jne
cmp
cld
adc
add
in
into
or
mov
inc
ljmp
jmp
aas
push
adc
nop
dec
mov
dec
cmp
jge
push
adc
cmp
into
dec
sub
movb
dec
cmp
dec
cmp
add
dec
add
add
fadds
fwait
mov
mov
mov
add
sub
jb
int
pushf
adc
xor
ret
and
add
push
dec
mov
add
sti
or
inc
or
push
imul
add
es
adc
vorps
ret
and
push
adc
fisttps
jmp
cli
inc
out
mov
or
xchg
icebp
jns
add
or
popf
jmp
add
cmp
inc
xchg
sbb
loopne
imul
xchg
ret
outsb
insl
xchg
dec
lret
xchg
adc
or
jae
orl
pop
mov
out
addb
iret
xor
andb
xchg
into
pusha
inc
inc
xor
jmp
mov
rcrl
cmpsb
mov
pop
cmpps
or
mov
push
mov
xor
inc
push
pop
jae
imul
or
add
xchg
add
cmpsl
inc
inc
or
jl
or
mov
rol
push
je
dec
pop
mov
adc
xlat
dec
xchg
jp
pop
lahf
push
add
and
and
cmp
xor
mov
mov
inc
jge
push
movb
mov
pop
cmc
inc
into
add
cmp
and
cld
cld
cltd
pusha
inc
mov
adc
out
sbb
inc
stos
jg
adc
and
xchg
or
cwtl
into
xchg
sub
aam
out
loop
nop
mov
mov
cmp
pop
test
divb
into
or
add
or
sbb
sbb
add
push
loopne
mov
mov
pmaxub
xor
inc
jg
into
cmc
test
pushf
into
into
mov
lcall
jg
or
lock
nop
pop
cwtl
pop
ja
sub
cmpb
icebp
and
or
pop
add
cltd
push
and
cmp
pop
lcall
push
nop
add
shl
inc
fiadds
or
pusha
in
add
add
mov
or
je
or
sub
or
sub
jmp
mov
lret
push
pushf
lret
xor
subl
and
scas
sbb
push
dec
xchg
add
inc
loop
shll
dec
jae
rolb
pushf
pop
fmul
cmp
rclb
mov
adc
push
xchg
jno
sbb
dec
pushf
outsb
sub
pop
and
xorb
pop
icebp
cmp
fwait
adc
sbb
xlat
jle
and
daa
popa
rorb
loop
lcall
loop
push
fimull
jl
fwait
jb
ljmp
xor
jl
inc
and
or
dec
rorl
push
ret
movsb
lock
sbb
xor
mov
jg
fwait
cmp
xchg
jae
and
insl
add
inc
push
add
inc
adcl
dec
sub
mov
loopne
ds
add
jo
je
pop
fisttps
enter
cmp
lret
inc
sub
call
jle
sbb
sahf
or
inc
lds
mov
mov
jo
imul
xchg
loop
test
jmp
pop
inc
cmpl
movl
fisttps
mov
sbb
mov
repz
xchg
ret
dec
mov
sarb
loopne
sub
pop
sub
lods
test
and
add
inc
push
pusha
xchg
mov
iret
mov
pusha
add
jns
andb
jb
jnp
inc
pushl
nop
cmp
pop
cmpsl
test
je
test
je
insl
mov
mov
aam
pop
addr16
lret
mov
push
loopne
fs
cwtl
pop
mov
xchg
scas
jge
mov
sbbl
push
pusha
push
sbb
ss
shlb
rclb
fcoml
add
sahf
fldcw
stos
fisttpl
inc
sbb
dec
pop
xchg
dec
clc
jmp
add
in
mov
add
or
or
pop
push
imul
adc
imul
adc
and
xor
add
sub
xchg
cmp
push
and
push
and
xor
sbb
popa
add
bound
das
fistpll
call
cs
add
add
jae
icebp
ds
mov
jmp
push
push
xlat
adc
add
shrb
pop
pushf
sbb
into
lods
flds
sub
test
rolb
pop
sbb
test
ret
rcl
dec
inc
add
js
push
insl
pushf
inc
push
jne
push
inc
add
add
lods
popa
ljmp
or
xchg
pop
mov
adc
pop
fisubrl
pop
rorb
or
imul
fsubrl
inc
adc
outsb
add
add
outsb
mov
mov
jno
push
inc
rolb
insb
inc
popa
xchg
xor
repz
mov
test
add
push
in
std
or
and
pusha
jns
cmp
dec
sbb
dec
rorl
add
fdivr
xchg
test
pop
addb
sahf
enter
xor
add
sub
mov
insb
cld
lea
mov
aam
mov
jbe
or
pop
bndstx
adc
popa
js
push
jb
sbb
lock
dec
mov
cmc
pop
divb
fsubs
movsb
lahf
xchg
lock
loopne
jmp
dec
loop
mov
fisttps
imul
ss
push
cmpsb
adc
js
mov
xor
pop
or
or
mov
mov
cld
sbb
inc
js
add
push
push
sbb
jae
adc
fsubrl
das
push
jle
shrl
sub
add
inc
mov
adc
shlb
es
fwait
push
lods
add
push
adc
ds
mov
jb
fcoms
sub
xor
loopne
sub
xchg
incb
testb
loopne
or
ds
push
pop
add
cmpl
push
xchg
mov
add
xor
roll
add
rolb
leave
or
push
or
loop
xlat
pop
or
jns
sbb
in
pop
js
daa
push
pop
adc
cmp
test
adc
pop
jle
xor
adc
test
jne
ljmp
idivl
xorb
mov
imul
and
ret
and
mov
and
push
xchg
sub
sbbb
pop
sahf
nop
loopne
sub
loope
and
mov
mov
loopne
clc
out
cvttps2pi
aam
test
ja
ljmp
mov
lods
rcll
cs
fnstenv
sub
mov
jbe
fidivrl
sub
jg
and
jmp
fstps
rolb
inc
lea
fs
adc
fcomp
pop
mov
test
mov
pop
sbb
pop
xchg
push
or
popf
inc
dec
pop
in
mov
andb
sar
jnp
adc
cltd
js
mov
mov
jmp
cmp
inc
mov
or
and
mov
ret
faddl
add
mov
sbb
in
jb
inc
xchg
in
call
cmpsb
insl
lods
int
loopne
fadd
clc
mov
in
mov
mov
ret
nop
aam
sbb
bound
lds
sarb
add
nop
addl
ret
test
fdivrl
loopne
imul
dec
lea
or
ror
inc
mov
test
in
test
ss
jns
jne
jge
and
push
inc
or
mov
orb
jbe
aam
adc
call
rcrl
inc
jl
cwtl
add
or
in
lock
xchg
push
ret
repz
or
aas
lcall
add
and
repnz
push
imul
test
cmpl
add
shl
sbb
inc
jg
xchg
jl
adc
es
add
inc
inc
out
mov
push
dec
pop
or
lret
pop
cld
push
in
mov
lods
or
mov
pop
xor
xor
cmp
cmp
dec
fdivl
leave
adc
lock
shlb
shll
mov
fwait
dec
xor
pop
or
addr16
fnstenv
in
sub
mov
adcl
popf
call
xor
xor
les
in
insl
fildll
xchg
in
push
xlat
test
jg
and
mov
or
in
movups
cmpsb
cmpsb
in
popf
dec
loope
inc
mov
mov
cmpb
mov
pop
stos
add
xor
in
ss
pusha
and
fucomip
lcall
stos
imul
movsl
fs
and
lock
mov
filds
outsl
inc
mov
dec
cs
test
inc
mov
int3
cmp
push
imul
lods
test
push
pop
outsl
mov
pop
dec
or
aaa
add
xchg
in
shll
mov
rcrb
fsubl
loopne
daa
shll
cltd
aam
fs
cmpsb
sub
inc
or
hlt
test
dec
xchg
cmpsl
in
sbb
sub
adc
add
leave
and
push
pop
adc
dec
xor
and
sub
xor
xor
and
cmp
xor
and
inc
dec
fs
jne
insb
add
lahf
pop
adc
fistpl
inc
add
mov
add
pushf
pusha
add
add
nop
enter
leave
add
aam
add
sub
hlt
xchg
dec
aad
cmp
sub
movsb
xchg
in
add
mov
mov
jg
les
shrb
fimuls
mov
es
xchg
call
movb
or
or
in
dec
filds
jnp
je
mov
and
xor
jl
pop
push
and
fldl
xor
ret
fsubl
outsb
cmp
addl
add
push
call
mov
xchg
das
mov
and
es
jg
mov
jns
inc
cwtl
sbb
sbb
push
sub
out
loopne
outsb
in
ret
mov
mov
mov
nop
mov
mov
test
add
inc
decl
pop
sub
ss
sub
in
mov
xor
lock
push
push
xchg
xor
and
stc
aam
mov
and
in
mov
sub
and
in
sub
fcomp
push
cmp
dec
push
sub
mov
add
add
lock
mov
add
ret
mov
inc
xchg
xchg
fneni(8087
push
in
clc
enter
in
sub
xorb
mov
dec
push
daa
outsl
xchg
cli
pusha
jnp
xor
fwait
mov
nop
sub
fwait
or
fsubr
cmc
lods
int3
out
sub
out
xor
adc
pop
cld
in
adcl
ret
jmp
fs
out
adc
or
jnp
jge
adc
fcomp
aam
sub
and
sub
jecxz
nop
and
test
lock
cmp
nop
xlat
test
lods
jb
jb
mov
mov
jb
enter
jne
rcl
add
xchg
popa
cmp
or
inc
lods
pop
or
jbe
xchg
test
sbb
add
xchg
shlb
xlat
dec
add
mov
xchg
mov
out
fmul
adc
or
dec
lods
sbb
rcll
in
aas
pop
push
mov
push
push
add
xchg
fisubrs
jecxz
xchg
inc
ss
xor
scas
sub
int3
xor
adc
sbb
adc
pop
adc
fsubrs
or
and
shlb
sub
xchg
es
call
es
mov
movnti
std
inc
outsb
xorb
or
sti
test
cs
pusha
xchg
xchg
outsb
xchg
mov
push
mov
adc
popa
je
leave
lahf
jne
test
insl
subb
negl
xchg
inc
sub
test
xchg
pop
inc
mov
pop
in
clc
roll
jo
add
fs
mov
shr
scas
add
add
add
cmpsb
jbe
outsb
jo
pop
ret
out
shrb
dec
adc
in
loop
sub
outsl
jmp
pop
cltd
ss
in
pusha
inc
add
sbb
es
js
xchg
subb
push
sbb
je
lds
mov
mov
push
mov
adc
lods
adc
and
sbb
lods
in
in
lock
scas
inc
test
shl
xchg
dec
add
or
mov
cmp
pop
test
cltd
adc
aaa
sub
adc
pushf
dec
xor
js
bound
adc
dec
mov
aad
scas
inc
test
lcall
in
cwtl
sub
sahf
hlt
sbb
dec
or
hlt
push
insb
cmp
loopne
int3
ret
cmp
fidivrl
inc
xor
aas
push
fwait
xor
push
sub
adc
sbb
xchg
push
stos
pop
in
pop
aas
call
in
data16
stc
jl
loopne
fdivr
and
rcr
aad
sub
ss
pop
adc
sub
push
into
jne
sub
and
sbb
adc
sbb
or
jnp
pushf
sub
sbb
enter
or
and
and
or
pop
adc
rcll
xor
call
adc
sahf
adc
in
mov
loope
pop
mov
inc
or
add
mov
stc
sahf
cmp
shlb
and
dec
sha1msg1
pop
cltd
and
sbb
xchg
xchg
popf
and
scas
inc
xchg
lock
lahf
xchg
ss
xchg
sub
stos
inc
dec
adc
lahf
jecxz
movsl
loop
les
sbb
fmull
lods
jl
sub
add
test
inc
mov
adc
cmc
add
adc
shlb
push
jp
stos
movsb
xchg
insb
addb
xor
inc
sub
movsb
or
cmp
pop
rclb
lock
je
dec
lahf
nop
mov
cmp
mov
adcl
inc
xchg
or
xchg
pop
dec
out
mov
cmp
adc
mov
adc
popa
add
push
lea
dec
imul
inc
xchg
mov
or
inc
jbe
or
popf
mov
mov
pop
mov
int3
cmp
cmp
enter
cmp
cmp
mov
cmp
cmp
lds
movsb
sub
lcall
xchg
adcb
inc
movsb
xchg
or
add
xchg
ret
push
aaa
mov
ret
mov
or
rorb
and
std
rcl
push
mov
lods
xchg
test
push
xchg
nop
pop
xor
jg
or
fsubl
xor
jb
int3
leave
mov
mov
enter
jae
test
stos
adc
hlt
lods
mov
mov
push
dec
pop
cmp
jne
add
cmpsl
jo
push
fmull
xor
sbb
or
or
inc
dec
es
cmc
adc
lods
ja
data16
xor
js
pusha
fistpll
test
imull
inc
or
sub
add
push
push
call
pop
and
inc
xor
aam
je
sub
insb
movsb
jnp
sub
mov
and
push
in
call
lock
test
mov
insb
je
add
rclb
cmpsb
push
imul
rorb
cli
sbb
aas
setge
adc
xlat
mov
cmovg
xchg
cltd
addb
cmpsb
nop
fdivl
mov
cmp
pop
push
es
xor
fsubrs
sbb
xchg
adc
push
in
xor
xor
loopne
nop
popa
adc
nop
inc
adc
stos
or
fs
fsubs
jae
aaa
ret
xor
std
int3
or
add
sti
push
xchg
sbb
movsl
or
inc
movsb
pusha
test
clc
sub
or
inc
pop
push
mov
adc
push
shrl
adc
and
insb
mov
or
int3
aam
and
leave
enter
pop
loope
shll
lods
inc
mov
or
sbb
sub
aas
fdivrs
rorl
scas
xor
or
mov
mov
pushf
cmp
scas
dec
add
push
adc
fwait
jmp
mov
dec
pop
mov
dec
sbb
jmp
lods
arpl
fcomp
sbb
jmp
push
adc
pusha
leave
das
sbb
fisttpl
fdivs
pop
arpl
xor
mov
xchg
sti
nop
iret
fistps
sti
jl
shlb
les
add
sub
in
push
sbb
mov
xor
sbb
mov
test
in
movsb
mov
pusha
lret
cwtl
jne
adc
add
insb
aaa
test
adc
push
fdivrs
push
in
pop
sub
les
mov
test
cmp
xor
mov
mov
xchg
add
pop
xor
push
jle
lods
test
adc
call
cmpb
aas
loopne
adc
insb
mov
adcb
outsl
nop
pusha
mov
push
adc
sbb
inc
mov
outsb
or
lods
jg
gs
mov
add
inc
sub
sbb
clc
jnp
sbb
push
psubsb
mov
jns
rclb
std
pushf
std
movsb
test
jl
add
cltd
cwtl
push
jns
adcb
and
mov
jb
and
mov
enter
adc
out
cld
push
jb
or
lock
mov
fiaddl
cmpsl
in
test
leave
xchg
inc
jae
fdivrl
xor
lock
sbb
xchg
in
jo
insl
push
gs
xorb
mov
and
bound
xchg
adc
or
mov
mov
xor
mov
in
cmp
les
or
or
jnp
nop
inc
movsb
arpl
dec
or
mov
xor
sbb
mov
lods
mov
push
loopne
dec
ret
xchg
or
push
add
enter
jo
dec
test
cmpb
imul
adc
and
add
or
rorl
mov
cwtl
mov
movsl
lock
lea
mov
push
pop
dec
or
xor
xchg
or
mov
test
jle
aad
jne
aam
int3
and
add
imul
gs
pop
inc
dec
jmp
call
test
lahf
xchg
mov
sahf
test
lods
dec
adc
out
inc
fs
lea
in
daa
mov
xchg
push
in
pusha
out
out
mov
jg
leave
rolb
add
push
lcall
stos
xor
sub
nop
mov
mov
lods
pusha
mov
ss
push
mov
pop
adc
enter
aam
popa
mov
inc
or
rol
adc
les
stos
mov
sub
mov
mov
mov
fwait
jl
aas
sbb
test
ret
test
cld
mov
pop
movlps
sub
ret
fsubrs
xchg
xor
jne
sbb
xor
cmp
int3
push
mov
inc
cmpsb
sub
das
enter
cmp
les
mov
les
ret
and
jne
aad
insb
xchg
sub
add
lea
or
cltd
fdivrl
sbb
lds
les
test
sar
and
inc
dec
ret
loope
jl
add
shll
pop
sbb
lods
adc
mov
aas
adc
jnp
jne
je
mov
scas
or
shrl
adc
inc
in
dec
rol
mov
ffree
sub
ss
push
pop
lar
inc
or
js
mov
mov
mov
jne
dec
loop
pusha
das
lock
mov
mov
mov
lea
ljmp
das
push
stos
push
fildl
jmp
movl
outsl
test
ficoml
orl
and
js
mov
add
mov
xor
nop
popa
dec
and
inc
movsb
sbb
pushf
or
cltd
nop
not
adc
fs
lcall
pusha
sub
xor
imul
xchg
push
cmp
scas
pop
iret
inc
add
jb
adc
add
out
movsb
mov
mov
insl
pop
xor
nop
fisttps
outsb
inc
sub
negl
xchg
adc
dec
jb
mov
insb
shll
cmp
mov
cmp
and
push
mov
jg
leave
ljmp
dec
xor
aas
in
pop
leave
pop
hlt
loop
fwait
mov
xlat
inc
push
cmpsl
push
fsubr
loope
out
in
dec
pop
enter
out
movsb
mov
cld
pop
pop
xor
loop
fs
push
or
or
dec
push
or
or
in
inc
loop
mov
fs
je
mov
lock
add
lret
and
lds
xorl
pop
sarl
insb
pop
jg
jnp
ret
les
jne
add
jb
mov
fwait
movsb
fcomi
mov
in
xor
nop
inc
pusha
mov
and
cltd
xchg
push
pop
jne
fists
dec
and
shr
nop
cmp
shr
mov
fcmovne
bsf
addr16
hlt
stos
ror
and
xchg
loopne
inc
cmpsb
sbb
loopne
dec
test
nop
popa
inc
adc
sub
sub
jno
pop
in
mov
or
in
outsl
xor
std
add
cltd
nop
inc
sti
or
or
fs
adc
es
nop
and
mov
outsl
jb
mov
inc
mov
or
xor
jo
xor
jge
cltd
pop
xchg
loop
cmp
mov
xchg
add
ret
push
fidivl
std
push
in
push
in
add
fs
xchg
push
add
ja
sub
push
mov
call
rcll
or
out
inc
in
movsb
xor
pop
andl
jns
faddl
dec
push
in
lret
cmpb
leave
aaa
xchg
add
xchg
xlat
push
fdivrl
std
xchg
cmovnp
das
fisttpl
sti
or
push
pop
sub
iret
dec
xchg
adc
sbb
sahf
jo
adc
movsb
mov
or
jg
adc
push
sbb
pushf
mov
pop
sub
mov
hlt
push
xor
or
push
mov
lock
inc
shrl
push
fadds
call
dec
sbb
xorb
cltd
mov
inc
inc
or
push
xor
sub
mov
jbe
xchg
in
sub
ja
xor
adc
cmp
sbb
sar
mov
popa
xchg
push
test
sti
in
dec
add
mov
mov
xchg
subl
fwait
or
test
push
add
and
xor
pop
sbb
xchg
das
xchg
push
pop
insl
mov
inc
aam
movsb
sbb
xchg
and
or
inc
loopne
or
aad
cmp
inc
in
adcb
cltd
int3
pop
sbb
ja
mov
dec
jne
nop
fistl
push
mov
call
push
xlat
lds
xchg
mov
inc
sub
inc
dec
test
das
or
push
fcoms
xor
lds
inc
mov
rcrb
adc
push
xor
mov
fldenv
loopne
sub
xchg
test
clc
mov
and
stos
dec
insl
push
cmpsl
pop
push
call
mov
shlb
and
imul
sub
pop
mov
gs
fistl
push
pop
mov
fdivl
mov
test
jl
sar
xor
adc
fwait
fs
insl
pop
insb
dec
xor
and
pop
push
xor
and
js
dec
add
dec
inc
jo
dec
lcall
pusha
fs
mov
repz
rorb
iret
in
xor
les
cmp
mov
in
mov
and
cmovl
fiaddl
js
dec
je
xchg
dec
es
aam
add
cltd
enter
cmpsb
sbb
push
nop
mov
pop
sbb
jo
jno
mov
aam
inc
jecxz
mov
jo
xor
push
push
repz
das
nop
lret
test
dec
data16
leave
insl
add
xchg
sub
push
add
push
and
mov
lods
test
add
jl
adc
js
fistps
aam
sub
push
adc
cmp
aam
inc
loopne
ret
push
mov
xor
cmpsb
pusha
mov
mov
das
inc
adc
leave
daa
and
push
cmp
filds
dec
push
adc
inc
ljmp
fcomps
mov
mov
jmp
in
adc
je
mov
adc
orb
xchg
enter
xor
clc
fistl
mov
sub
mov
lock
or
add
dec
or
les
adc
mov
repz
lods
test
add
sbb
mov
or
imul
dec
adc
inc
mov
scas
push
inc
lock
es
popa
adc
mov
xor
cmc
ret
sbb
ret
test
mov
adc
cmp
cmpb
sbb
dec
shrl
dec
nop
xor
mov
bound
sbb
stc
lock
sbbb
cld
inc
fildl
sbbb
mov
lock
or
test
je
mov
adc
pop
ffree
pusha
sub
sub
adc
mov
and
xlat
pop
aaa
hlt
lock
mov
mov
add
sbb
jbe
adc
filds
and
decl
xchg
out
and
cmpb
jl
aam
aam
lcall
add
dec
mov
fdivrp
dec
cmpsb
lea
adc
xchg
or
sbb
cli
arpl
jns
mov
scas
es
fs
fs
cmp
dec
push
nop
dec
dec
cmp
add
hlt
add
adc
fisubl
mov
sub
cmp
add
and
cmp
and
xchg
push
sbb
mov
insl
or
cs
roll
cld
mov
in
cli
call
movmskps
adc
mov
adc
leave
sbb
push
push
fs
es
cmp
inc
pop
pusha
sub
sbb
leave
adc
or
sbb
jo
mov
mov
nop
cltd
push
add
icebp
push
pop
adc
pop
sub
cmpsb
loopne
adc
addb
adcb
inc
faddl
dec
jmp
subl
test
pop
xor
push
sbb
cmpsb
inc
sahf
push
add
or
in
xchg
push
adc
pusha
fnstenv
adcb
imul
les
mov
dec
cmp
adc
sbb
iret
mov
mov
sarb
adcb
jle
xchg
jb
push
pop
inc
in
mov
pop
adc
add
aaa
jbe
cmc
sbb
push
mov
sub
and
out
cli
mov
sub
imul
dec
mov
push
fnop
loop
xor
andl
ret
sub
lret
sbb
inc
and
push
pop
and
orl
dec
sbb
jg
sbb
push
lds
or
aaa
dec
vpandn
hlt
sti
mov
sbb
clc
div
gs
push
scas
or
cmp
imul
cli
mov
mov
push
in
xor
add
repz
inc
push
push
out
lcall
xor
insb
pusha
add
pop
cmpsl
jge
out
push
fdivrs
adc
insl
mov
loopne
push
out
xchg
sbb
lock
push
cwtl
push
inc
jmp
or
cmp
dec
mov
fistpl
or
jnp
mov
and
mov
or
and
pop
ljmp
lahf
and
jnp
or
adc
out
leave
ljmp
mov
fisttps
mov
iret
repz
js
pusha
pop
adc
incl
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
call
push
push
pop
pop
popa
bound
gs
jmp
imul
jo
jb
je
jbe
js
jp
xor
xor
sub
dec
incl
daa
adc
mov
rcll
xchg
adc
push
or
cmp
xchg
stc
cmp
adc
add
stc
mov
inc
std
push
mov
mov
fisttpl
je
jb
outsl
arpl
fs
pop
cmp
out
sbb
push
dec
imul
pushl
fdivs
cmp
jb
gs
xor
cs
adc
test
pop
bound
and
popa
je
outsl
outsb
push
test
fldenv
iret
sbb
lock
rdpmc
add
push
mov
jnp
add
pop
sub
mov
sahf
std
and
rolb
inc
outsl
jb
js
je
jb
gs
or
mov
or
outsl
add
add
add
pop
cld
in
add
push
gs
push
je
mov
jbe
lock
jb
mov
outsb
pop
mov
dec
xor
xor
cmp
jne
iret
mov
sub
dec
and
jns
xor
das
das
adc
dec
push
inc
out
or
ds
gs
insl
bound
daa
dec
outsl
jbe
pmaxsw
pop
dec
arpl
push
jo
sub
out
lock
jne
jne
dec
jne
xchg
mov
inc
jo
imul
bound
dec
nop
or
into
mov
scas
cmpsl
xchg
popl
cmp
xchg
addr16
push
jne
lcall
mov
mov
push
fsubl
push
scas
clc
sbb
dec
jae
std
adc
and
jbe
out
pop
dec
inc
ds
popa
das
jo
xor
pop
insl
or
fbstp
mov
mov
sahf
xchg
inc
add
pop
rorb
sbb
es
sub
sub
sub
cs
dec
push
std
shll
ds
inc
das
pop
pop
push
push
add
jnp
xchg
insl
cli
jl
jle
add
arpl
test
icebp
adc
subl
pop
or
out
ffree
inc
adc
push
sbb
insb
jae
cs
fs
cmp
xor
inc
mov
outsl
mov
out
jo
insl
and
addr16
jbe
dec
push
push
sbb
insl
in
dec
dec
inc
sbb
and
jp
data16
add
xor
sbb
push
jo
imul
push
pop
mov
je,pn
push
push
xor
jo
xchg
idivb
mov
sub
and
fs
adc
out
scas
mov
push
imulb
and
and
fmul
insb
mov
sbb
xor
and
imull
xchg
add
and
jne
sub
mov
rolb
les
shrl
mov
fldl
and
or
das
add
popa
add
or
ljmp
jb
bound
lods
mov
je
and
push
or
push
or
int3
fidivl
popf
jb
loopne
outsl
mov
faddl
fcmovu
push
daa
sub
dec
addb
das
arpl
cwtl
shlb
dec
popa
in
gs
sub
mov
fidivrs
test
out
add
inc
xchg
insb
imul
out
xor
int3
gs
rcl
push
cmp
push
lcall
mov
and
xor
gs
push
divl
push
fistps
push
adcb
aaa
xor
scas
or
fs
xor
rol
push
hlt
pop
dec
add
add
test
ja
outsl
and
and
outsl
ss
mov
lods
pop
xor
imul
ret
xchg
push
mov
xor
push
gs
or
lds
dec
add
inc
jle
lret
mov
mov
arpl
lret
jp
jo
bound
push
pop
repnz
cmp
insl
in
sarb
shr
or
or
xchg
imul
pop
or
lods
cli
jno
add
push
push
leave
push
mov
insl
imul
cmp
orl
popa
in
xor
pusha
or
and
push
mov
pop
push
cmp
addr16
jae
xor
loopne
or
fsubl
out
mov
jo
sub
popa
adcb
jb
push
sub
imul
dec
stos
mov
dec
jmp
jo
and
imul
inc
adc
lods
mov
and
dec
cmp
call
es
jg
lcall
loopne
cmpsl
popf
lock
sarb
fadd
ljmp
lret
jno
icebp
pusha
inc
mov
clc
sub
ret
movsl
add
xorl
fdivs
push
loop
imul
sbbb
gs
popa
dec
fwait
test
jecxz
enter
popa
js
scas
sub
je
pop
dec
pop
and
jno
add
add
xchg
testb
imul
xchg
adc
xchg
push
add
adc
add
add
add
add
xor
subl
inc
pop
pop
or
aaa
ds
push
pop
hlt
and
repz
push
js
or
sub
sti
mov
xor
xor
sbb
addb
in
add
xchg
test
add
imul
pop
daa
push
cmpb
push
out
int3
sahf
and
sub
jb
int3
push
int3
mov
into
jo
add
jo
inc
add
rorb
push
stos
int3
js
jo
imulb
pop
dec
rorb
sbb
add
lea
cs
nop
xchg
mov
xchg
lock
sub
push
es
sub
lock
dec
dec
pop
pop
ret
pushf
add
and
daa
pushf
jo
cmp
daa
pushf
jo
pop
data16
mov
loop
nop
out
push
sti
lock
sbb
addl
xor
xor
aaa
and
sub
jb
jl
dec
add
test
push
adc
adcb
mov
enter
add
add
push
add
add
or
add
pop
adc
mov
roll
adc
and
add
lods
and
out
and
ljmp
add
test
mov
xchg
xchg
xchg
xchg
call
fwait
pushf
popf
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
pushl
mov
rol
ret
enter
int3
int
iret
rcl
rcl
aam
call
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
test
sar
div
clc
stc
cli
sti
cld
std
inc
orb
add
ljmp
push
add
aas
decl
int
mov
mov
movsb
inc
cs
jae
jb
je
sub
bound
dec
stos
inc
xor
ss
popa
mov
repnz
sub
mov
pop
lea
dec
mov
std
popa
addr16
outsl
js
push
push
inc
push
mov
es
dec
and
insb
gs
mov
mov
jne
dec
mov
daa
add
insb
outsl
aas
lret
scas
in
dec
imul
mov
imul
ds
and
inc
jb
test
insb
jns
daa
pop
enter
mov
jo
mov
sbb
lcall
addr16
cmp
outsb
adcb
pushw
mov
inc
movsl
jns
imul
pusha
inc
jbe
push
rorb
jns
sbb
shlb
lret
push
clc
popl
test
clc
mov
pusha
gs
stos
loopne
and
or
test
mov
cwtl
xchg
pop
pop
pop
push
push
jae
insl
mov
jp
aas
cmp
mov
shrb
imul
xor
outsb
gs
mov
data16
xchg
xchg
les
push
push
push
dec
testl
aam
cwtl
repnz
mov
fcmovb
cmp
mov
arpl
xchg
mov
imul
mov
fistpll
xchg
inc
outsl
jae
pop
cmp
in
xchg
jg
addr16
shlb
adcl
push
pop
aaa
mov
pusha
push
or
aad
sbb
je
outsl
xchg
or
arpl
daa
xchg
mov
data16
jns
arpl
pop
cmp
cmp
add
idivl
xor
sub
fldcw
es
jle
sub
sub
dec
fstpt
sub
sub
push
jp
or
cmp
jmp
mov
repz
cmp
lret
roll
pop
pop
cwtl
into
xor
lods
jb
sbb
push
jb
imul
jo
ss
lret
add
xor
lods
sbb
push
xor
in
and
es
jo
jo
inc
out
mov
jl
sarl
lahf
sub
or
inc
add
clc
add
iret
repz
loopne
enter
sahf
fdivrl
mov
sti
push
in
cmpsl
jge
jns
mov
inc
push
xchg
iret
repz
nop
add
cmpsl
stc
cmp
push
or
sub
cmpsl
jne
imul
push
repnz
decl
pop
jbe
push
cmpsl
stc
sahf
orl
add
out
sahf
inc
inc
cmp
xor
xor
jns
cmpsl
push
sub
adc
sahf
jg
or
hlt
incl
mov
pushf
jl
cmp
jns
out
clc
incb
mov
jns
out
inc
cmp
add
repz
cld
std
lock
movsb
jl
iret
repz
sub
in
shlb
jns
jo
sub
aam
lcallw
shlb
jns
push
xor
mov
lcall
xor
sub
pop
sub
jae
fs
sbb
jae
jb
xor
lahf
push
out
test
gs
pop
fisubrl
xor
add
jle
push
insb
andb
dec
jae
xchg
fxch
push
insb
inc
mov
sbb
push
inc
dec
xor
inc
dec
dec
dec
push
push
ret
xor
push
dec
inc
dec
add
dec
dec
inc
add
inc
clc
ljmp
adc
sub
adc
incl
popa
movsb
std
outsl
dec
mov
mov
adc
outsb
mov
ds
in
stc
pop
jnp
adc
clc
lret
sbb
jb
pop
enter
jge
arpl
cmp
adc
dec
scas
jp
adc
in
sbb
xchg
fisubrs
and
cmp
dec
jmp
iret
imul
lret
add
inc
mov
mov
notb
lret
sub
fwait
ss
sbb
pop
mov
ds
xor
incb
int3
dec
dec
xor
dec
popf
pxor
xor
decl
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
mov
adc
xchg
icebp
mov
cld
or
loopne
cmp
inc
mov
popa
sar
xchg
push
pop
popa
push
or
scas
int
mov
pop
leave
loop
mov
mov
dec
xchg
scas
lods
negb
ret
push
xor
out
mov
pop
or
and
pop
repnz
push
hlt
mov
and
es
sbb
xchg
iret
or
push
dec
jl
fcmovne
push
push
inc
inc
or
outsb
jbe
and
addb
shrb
inc
or
or
jge
push
gs
outsb
push
xor
imul
out
hlt
inc
dec
push
dec
push
rcrb
ljmp
push
into
mov
aaa
pop
push
ds
inc
add
pop
sub
pop
inc
adc
idivl
jbe
or
push
xor
or
sbb
es
pop
or
pop
sti
mov
incb
sbb
inc
pop
xor
dec
pop
inc
push
xor
sbb
adc
pop
pop
jbe
xor
ss
and
add
inc
aaa
add
sbb
pop
inc
ds
pop
inc
inc
pop
xor
mov
inc
push
or
es
sub
or
dec
add
jnp
sbb
ret
adc
xor
in
jg
inc
sbb
cmp
inc
xor
add
aaa
push
cmp
sub
add
sahf
pop
or
out
adc
push
xor
pop
and
pushl
add
sub
pop
or
xor
or
xor
js
and
inc
mov
sbb
dec
push
xor
es
jl
gs
aad
sub
daa
sub
push
sbb
sbb
dec
fisttpl
pop
cmp
add
pop
adc
mov
jns
fistpll
pop
dec
xor
inc
xor
xor
sbb
xchg
imul
sub
dec
xor
xor
pop
pop
ror
mov
inc
xor
aas
cmp
mov
dec
add
pop
fimull
sti
outsl
add
mov
push
inc
pop
and
pop
sub
adc
js
sub
lret
push
cmp
push
push
mov
and
out
mov
and
gs
jg
inc
inc
xchg
sbb
and
pop
inc
dec
add
push
dec
inc
aas
add
mov
mov
push
push
dec
dec
inc
sbb
mov
jl
sub
push
push
push
das
jo
fbld
ja
inc
cmp
or
push
inc
pop
push
movsl
push
sub
sar
inc
pop
adc
dec
nop
dec
cwtl
in
push
cmp
pusha
xor
mov
push
nop
mov
out
mov
xor
loopne
xor
mov
and
pop
push
inc
outsl
jg
out
scas
inc
push
push
push
jo
mov
ljmp
xor
mov
sbb
divl
hlt
es
xor
jo
cmp
dec
xor
stos
iret
lock
cmp
outsl
insl
mov
lret
jae
popa
outsb
insb
cld
or
push
popa
and
adc
imul
or
and
push
scas
add
and
adc
push
orb
cmp
fwait
loopne
push
scas
xor
pusha
nop
loopne
sahf
out
lock
push
push
pusha
mov
adc
nop
es
repz
push
xchg
xor
shll
pushf
movb
les
inc
or
pusha
xor
scas
cs
xlat
inc
add
cmp
sbb
adc
adc
js
inc
into
aad
push
sbb
or
pop
or
pop
push
cmp
sbb
inc
and
xor
xor
jmp
sti
jp
inc
fisttpll
sub
sbb
push
or
sub
push
jmp
jb
pop
arpl
add
fisttpl
jb
dec
and
pop
push
pop
mov
dec
inc
and
pusha
cmp
push
xor
fildll
sub
pusha
sub
pop
inc
add
es
push
jbe
mov
pop
in
out
cmp
ds
cmp
fimuls
aas
out
xor
leave
ja
test
ss
jo
mov
xor
push
out
pop
ds
push
mov
push
pop
add
ss
fs
cmp
push
push
hlt
outsb
scas
adc
or
mov
sbb
pusha
dec
cwtl
sub
fs
daa
mov
xor
inc
pop
rolb
out
pop
popa
jl
push
cmp
movsl
add
pusha
sub
sbb
and
xor
inc
sub
pop
shll
cmp
inc
xchg
loopne
daa
xor
into
sbbl
lock
sub
int3
mov
testb
and
and
add
sbb
push
inc
and
adc
inc
dec
sbb
loope
push
mov
cld
sbb
movsb
call
outsl
andb
loope
adc
mov
or
push
popa
cmp
and
mov
mov
ds
dec
pop
xchg
or
pop
adc
adc
mov
and
pop
fadds
add
outsl
je
push
sub
xor
cmpsb
arpl
cmp
pusha
push
pop
sahf
inc
add
out
iret
daa
in
sbb
scas
stos
enter
push
lods
push
push
rorl
lods
sbb
sbb
fstpt
xchg
jnp
mov
dec
ret
push
out
inc
push
les
sub
cmp
xor
pop
lcall
sbb
ss
xchg
sub
push
cmp
xor
jne
xor
scas
adc
and
sahf
sbb
pop
push
scas
sbb
sbbl
push
cmp
testb
xor
ficompl
push
add
dec
mov
add
push
xchg
fdivr
mov
push
mov
rclb
mov
push
cmpsb
push
js
adc
xchg
inc
push
sbb
xor
add
sbb
sub
push
mov
inc
mov
cmp
daa
sbb
or
loopne
add
sahf
imul
stc
add
mov
into
dec
icebp
push
ja
mov
imul
mov
inc
addr16
or
adc
or
pop
das
adc
and
cmc
ret
sti
and
and
sub
sbb
push
sub
add
or
loopne
cmp
or
sbb
or
lret
std
pop
xorb
jns
popa
jne
push
fidivs
sub
add
mov
popf
dec
out
jae
insl
popa
imul
dec
mov
jo
pop
outsl
jo
scas
loop
iret
fisubs
push
ja
or
in
cmpsb
cld
adc
push
hlt
push
out
sahf
out
in
add
in
jnp
lahf
add
add
adc
js
outsb
fwait
aam
add
pop
cmp
and
add
ja
dec
mov
jbe
inc
sahf
or
lahf
mov
fs
pop
je
sub
dec
or
inc
xor
dec
ss
sub
mov
test
popa
clc
and
pop
and
sub
cmp
aaa
pop
push
add
fistpl
push
mov
das
cli
das
add
adc
sbb
dec
jbe
mov
and
sub
clc
pop
jl
xchg
pop
fwait
cmp
xor
xchg
stos
fcoms
push
push
insb
sub
pop
sub
add
into
ds
jbe
das
cltd
push
dec
pop
push
push
unpcklps
imul
outsb
add
cmp
jp
lcall
pop
loopne
pop
fnsave
inc
lret
outsb
aaa
or
add
adc
push
or
js
push
cmpsl
jl
and
pop
add
js
sub
out
pop
sub
ret
out
pop
cmp
pop
sti
outsb
insb
outsl
jb
bound
jnp
xor
addr16
add
push
and
jae
popa
arpl
pop
ficomps
je
aas
notb
sbb
fisubs
push
and
ljmp
and
xor
js
into
adc
dec
jg
push
mov
test
imul
xor
aaa
js
and
xchg
aaa
and
inc
inc
jl
push
push
das
xor
xor
dec
andb
adc
fiadds
pop
fidivrl
sub
addb
inc
sub
faddl
inc
addr16
aas
jne
loop
and
dec
test
jbe
dec
mov
push
mov
jl
dec
sbb
addr16
jb
or
xchg
fmulp
xchg
jb
outsl
imul
flds
mov
add
das
adc
xor
nop
fldenv
pop
jo
push
jmp
mov
cmp
sbb
jg
dec
inc
sbb
pop
adc
sbb
dec
aaa
push
push
shll
sbb
das
cmp
add
sahf
cmpsl
push
repz
sbb
add
das
push
adc
in
inc
push
inc
mov
mov
mov
mov
lcall
push
xor
xor
pop
aam
jle
add
add
pusha
outsl
pop
pop
inc
pop
xor
mov
mov
sub
mov
sbb
xor
add
adc
push
jbe
leave
ljmp
popa
aaa
mov
lcall
inc
xor
test
push
inc
ds
push
pop
dec
fs
fadds
push
inc
xor
daa
sahf
outsb
dec
mov
ret
sti
sub
lcall
xlat
dec
dec
pop
pop
ret
xor
test
push
pushf
push
xlat
inc
test
sbb
jbe
push
and
add
inc
mov
add
jo
insb
and
in
or
xchg
sbb
sbb
push
ds
pop
dec
es
push
pop
cmp
pop
and
and
jo
daa
pop
icebp
pop
or
in
ds
sbb
xor
inc
ss
or
dec
xor
jb
ja
in
xchg
xor
test
test
fisubs
into
adc
add
xor
xor
sbb
dec
sbb
movsl
aas
add
xchg
loop
or
cli
lock
push
push
cmp
inc
mov
adc
repz
ds
push
push
xor
in
sarl
pop
shlb
mov
add
dec
daa
imul
xor
je
pop
push
jo
jo
repz
mov
iret
cmp
clc
add
cld
or
call
inc
xor
movsl
jge
xchg
inc
inc
sbb
das
inc
loopne
add
sbb
sbb
insl
jno
ret
inc
call
cmpsb
sbb
sub
dec
sub
sbb
daa
xor
js
sbb
and
sub
addl
add
pop
jnp
jno
pop
add
adc
lods
sbb
test
inc
push
xchg
mov
sarl
add
sub
adc
pop
clc
ficomps
cmpsl
clc
xor
adc
not
sub
nopl
xor
pop
adc
xchg
test
inc
daa
xchg
les
adc
push
and
fsubrp
adc
dec
sub
adc
inc
xor
outsl
jno
adc
icebp
mov
push
and
cmp
push
and
mov
fidivl
cmp
push
or
out
pop
call
comiss
sbb
aas
xor
addb
dec
add
xchg
ds
gs
push
dec
fmull
or
loopne
jmp
adc
mov
xor
sbb
sub
adc
add
cld
jne,pt
xor
or
addb
add
xchg
addl
sub
push
jb
in
fildll
push
jge
dec
sub
pop
add
and
pop
dec
adc
out
cmp
xor
pop
xor
mov
xor
xor
xor
add
dec
inc
push
cs
xor
mov
ret
dec
loope
cmp
add
pushf
pop
test
mov
mov
pop
daa
scas
loop
orb
push
ficoms
jg
push
jo
cli
scas
push
push
dec
cmp
jbe
out
inc
cmp
and
fsts
push
sbb
xor
and
xor
add
cmp
and
push
adc
adc
push
dec
cmp
inc
push
imul
popf
xchg
cltd
or
in
shrb
test
insl
inc
xlat
or
pop
shl
ljmp
nopl
in
jge
and
outsl
fldt
sbb
jp
sbb
mov
sub
and
rorl
mov
popf
sbb
fs
out
adc
push
mov
jno
and
mov
sbb
cmpsb
pop
movsl
out
cmp
and
icebp
push
xchg
inc
push
fwait
mov
inc
arpl
ss
cmp
and
std
pop
adc
ss
push
shll
je
pop
inc
mov
add
xor
xor
pusha
mov
xor
mov
xor
xchg
mov
push
xor
inc
cmp
xchg
outsl
iret
fiaddl
dec
lods
pop
out
adc
inc
push
cmc
aas
ret
and
ss
les
cmp
xor
testl
xor
mov
das
pop
addl
cmpps
inc
rorl
pop
push
loop
and
mov
mov
testl
ret
cld
jl
mov
test
cs
call
inc
and
push
loope
and
sbb
pusha
jecxz
out
fisttpl
daa
inc
inc
adc
pop
cmp
bound
xchg
pcmpgtb
xor
cmc
adc
mov
data16
cmp
setbe
pop
push
call
sub
adc
jnp
sbb
pop
push
dec
das
sbb
dec
xlat
mov
push
push
aam
sbb
pop
or
testl
xor
aaa
mov
xchg
add
lods
cmp
sub
imulb
iret
jg
decl
insb
gs
ja
fs
gs
loope
stos
pop
jmp
mov
das
push
mov
inc
cwtl
aad
inc
jb
arpl
adc
xor
mov
push
xchg
es
push
push
push
inc
add
sub
jo
push
inc
sub
inc
das
data16
adc
ss
out
fwait
int
cmp
cmp
ds
es
jnp
out
push
jo
mov
mov
jno
fistl
pusha
inc
and
mov
inc
out
add
loop
test
push
dec
dec
sub
add
aaa
shlb
mov
mov
lcall
push
and
mov
add
adc
mov
mov
lods
pop
out
decl
out
dec
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
jle
sub
mov
sbb
mov
ds
pop
sbb
es
ss
jo
fsubs
das
addb
xor
dec
xchg
in
inc
loopne
shl
dec
push
adc
adc
pop
push
and
xor
mov
imul
stos
fimull
popa
test
scas
test
in
add
push
insl
pop
sbb
add
jb
imul
dec
cmp
cmp
pop
pop
sub
pushf
dec
sub
sub
iret
and
or
imul
out
inc
fmuls
sahf
xchg
out
dec
test
mov
fld
pop
je
inc
js
cmp
mov
pop
add
dec
pop
int3
fimull
adc
dec
call
ret
push
dec
mov
jnp
cmp
xor
sub
sub
xor
inc
xor
xchg
jo
inc
inc
push
xor
add
aad
test
idivb
adc
adc
cmc
outsb
add
gs
sbb
dec
das
js
jb
add
nop
sub
push
and
ficoms
jo
inc
jb
jo
movl
insb
popa
outsb
mov
sbb
xor
push
add
jo
add
push
jg
mov
xor
xchg
sahf
pop
pop
push
ja
les
sbb
loop
mov
test
xlat
das
xchg
insl
aaa
and
add
icebp
mov
inc
lock
lahf
in
pop
and
push
sbb
js
loopne
mov
pop
or
daa
push
testb
xor
shrb
popf
out
and
aaa
xchg
js
sarb
dec
inc
dec
push
add
cmp
pop
orb
aam
xchg
xor
aam
xchg
jbe
inc
sub
mov
inc
pop
xor
pop
jns
mov
push
sbb
sub
dec
adc
loop
sub
nop
sbb
push
push
ds
in
das
xor
shrb
sbb
mov
dec
mov
mov
cs
outsb
push
int
scas
rolb
push
sahf
movsb
sarl
xchg
pop
mov
xchg
mov
lcall
inc
outsl
nop
sub
mov
and
ficompl
xchg
mov
sahf
sbb
iret
push
lret
cmpsb
jge
iret
pop
jl
pop
fmul
pop
outsb
fisttpl
cmp
cmpsl
mov
repz
mov
mov
out
shrl
out
mov
sarw
mov
ja
pop
push
minps
add
mov
pop
lods
popa
scas
rcrl
es
mov
pusha
sub
sahf
mov
adc
mov
into
jle
fwait
in
jnp
es
out
cmpsb
loopne
mov
js
jns
cmp
sub
adc
bnd
idivb
mov
bound
shll
outsb
lods
mov
lds
int3
inc
ror
aam
mov
sahf
aaa
sti
mov
push
sbb
push
push
mov
mov
push
enter
out
aad
mov
sub
ficomps
aad
cmp
pop
pop
push
insb
push
jle
lahf
out
lods
mov
adc
das
push
and
dec
push
nop
idivb
cmp
aaa
outsl
mov
repz
fistps
lods
jb
add
xor
jnp
cs
outsl
mov
fisubs
push
pop
mov
fidivrs
mov
inc
inc
xchg
es
addr16
call
mov
mov
mov
out
push
mov
sarl
int3
movd
ja
iret
repz
mov
push
jg
mov
sarl
js
jg
out
repz
sahf
push
cwtl
mov
mov
mov
jns
ja
sti
sub
lods
repz
out
hlt
sbb
inc
insb
out
lcall
in
iret
repz
add
jbe
cmp
repz
sar
xchg
push
lock
les
addr16
jg
dec
sbb
scas
sub
pop
push
cs
adc
stc
add
adc
rcrb
push
push
mov
nop
adc
pop
jnp
add
mov
test
jg
loopne
mov
je
mov
sti
cmpsb
and
pop
sbb
enter
adc
inc
repnz
iret
pusha
or
mov
add
and
dec
add
int3
je
outsl
pop
inc
cmpsb
addr16
push
jae
popa
adc
insl
mov
ljmp
inc
sbb
idivb
or
aaa
push
adc
push
imul
jae
rcr
and
xlat
push
jb
ja
cmp
dec
cmp
mov
jae
dec
je,pn
push
mov
insl
pop
cmpsb
dec
jbe
in
loope
imul
push
out
jb
insb
pop
push
dec
pop
je
jp
jns
push
fisttps
jp
or
push
rclb
push
outsb
push
inc
imul
push
sub
jnp
ficomps
sbb
jae
dec
mov
ja
push
adc
lods
push
scas
cwtl
push
repnz
das
xchg
test
dec
push
add
cmp
cltd
fists
inc
push
ds
leave
mov
es
mov
cmp
push
mov
popa
jo
jae
es
outsl
and
arpl
outsb
aas
adc
mov
push
cmpsb
mov
mov
clc
fbstp
xor
xor
xor
sahf
cmp
out
sti
jbe
xor
push
xor
xor
cmp
push
add
dec
dec
xor
cmp
sbb
mov
push
or
or
or
imul
dec
or
mov
adc
inc
mov
push
xlat
cmovl
jle
and
test
sbb
ds
push
or
rorl
xor
and
inc
jge
push
push
ds
inc
shlb
test
pop
pop
push
mov
fimuls
and
aas
pop
dec
mov
sub
add
ret
xor
inc
sub
push
adc
add
arpl
cmpsl
sub
sub
sub
xchg
test
inc
aas
sbb
inc
insb
sub
sbb
xor
call
bnd
cmpsl
sub
int3
pop
xor
daa
pop
pop
inc
test
call
mov
sarb
pop
or
popa
lahf
test
and
dec
and
arpl
loopne
cs
cmp
push
pop
push
insl
push
sub
repz
inc
push
cmpl
repz
cltd
ss
dec
repz
xchg
add
pop
push
add
or
jnp
int
adc
adc
sbb
and
sub
xor
fldcw
inc
mov
mov
mov
js
lret
rorb
int
sbb
sub
add
or
fldcw
adc
pop
fldcw
add
add
fwait
int
mov
lret
str
add
insb
and
das
incl
cmpsl
push
shrb
sbb
test
and
out
add
das
pop
add
imul
insb
test
dec
xor
push
xorl
or
sahf
sub
daa
test
insb
fcom
or
and
add
dec
jae
aaa
pop
ds
push
adc
bound
pop
jo
sbb
push
and
test
and
xor
aaa
mov
push
lahf
jbe
push
mov
and
das
stos
jne
movl
shrl
daa
lods
daa
jge
sub
sub
das
mov
lods
testb
add
lret
push
jo
or
push
pop
inc
push
test
cmp
sbb
insb
push
insb
andl
xchg
das
dec
mov
dec
push
mov
pop
inc
pop
cmp
pop
aas
push
push
add
dec
xchg
ja
dec
or
add
or
sub
outsl
push
das
mov
lock
add
mov
pop
xchg
outsb
lods
dec
shrl
pop
push
pop
push
andb
pop
addr16
pop
sbb
test
fstpl
enter
imull
stos
xchg
pop
sbb
push
pop
mov
cmp
xor
or
add
outsl
lret
adc
pusha
sub
pop
int3
push
inc
or
mov
dec
sbb
jae
js
jl
cmp
cmpsb
dec
jl
dec
inc
add
mov
gs
test
shlb
fbld
sbb
inc
and
mov
js
xchg
add
ja
mov
sub
clc
pop
mov
lock
dec
add
adc
and
test
pop
cmp
mov
adc
and
sub
sbb
scas
mov
fs
cmp
pop
pop
shrb
es
test
or
loope
or
pusha
js
cmp
mov
adc
int
mov
push
pop
jnp
add
and
inc
hlt
idivl
adc
adc
addb
cmp
inc
sbb
push
es
xor
mov
pop
sub
push
popa
lret
sub
mov
pop
sbb
fadds
push
jl
subl
pop
push
mov
cmp
and
fistl
jbe
xchg
adc
dec
movsb
jle
adc
ret
sbb
push
fcomip
and
mov
mov
repnz
icebp
or
add
pushf
daa
xor
push
xor
dec
dec
dec
sub
ss
xor
cmp
call
and
cmp
outsb
rcrb
adc
loopne
or
aas
imul
add
and
fiaddl
xchg
arpl
push
clc
push
fisttpl
sbb
push
ja
sub
push
cli
or
push
scas
or
enter
cmp
lods
pushf
push
lods
mov
icebp
ds
ds
or
cwtl
cmp
repnz
imul
aad
pop
popa
mov
cli
fcompl
jb
mov
cmp
cltd
pushf
cmp
es
push
shlb
mov
pop
xor
ret
ficoml
xchg
fstpt
clc
es
shrb
subb
inc
mov
mov
fldt
or
inc
inc
hlt
adc
gs
xor
push
xor
jno
loopne
jb
shll
xchg
push
push
add
sub
cwtl
cltd
sub
push
and
data16
lcall
sbb
js
inc
dec
addr16
test
jb
movl
mov
inc
sub
cmp
aam
or
mov
iret
cmp
or
add
mov
ljmp
pusha
xchg
cwtl
jecxz
daa
pop
add
mov
es
pop
and
sbb
inc
xlat
jno
lods
inc
xor
dec
in
push
movl
mov
aas
xlat
arpl
jne
pop
cs
dec
dec
cmp
sub
aas
dec
pusha
sub
adc
cmp
pop
inc
push
xor
mov
dec
jb
jo
dec
pop
lods
je
jo
mov
jbe
xorb
xor
fsubl
push
add
repz
adc
or
sbb
adc
adc
push
lods
xor
fistpl
add
dec
cli
push
pop
sbb
jg
decl
sbb
adc
dec
sub
inc
and
or
dec
sbb
lcall
push
sbb
es
es
push
das
inc
push
inc
inc
pop
dec
dec
push
or
push
pop
pop
pop
inc
sub
lcall
xor
cmp
sub
sub
dec
sbb
sbb
add
lret
out
or
jg
incl
cmp
inc
pop
xor
and
push
push
adc
add
xor
add
lcall
push
mov
pop
dec
and
add
sub
sbb
dec
adc
cmp
sbb
pop
dec
pop
and
inc
pop
es
sub
inc
adc
push
dec
add
or
push
push
sbb
push
pop
mov
call
mov
add
mov
sub
push
push
mov
ret
jnp
push
fdivrs
pop
push
roll
cmc
push
cmpsl
dec
mov
push
and
add
push
movhps
add
sti
and
cmc
push
push
stos
push
sbb
push
call
add
es
or
sbb
loopne
out
push
pop
push
adc
sbb
mov
xor
pop
push
subb
les
xchg
push
push
dec
or
orb
dec
jecxz
adc
mov
sub
xchg
pinsrw
es
lret
add
sbb
addr16
cs
dec
or
mov
jns
xchg
dec
loope
push
sbb
inc
or
negl
inc
dec
push
dec
add
xor
outsl
sar
divl
pop
cwtl
das
mov
inc
aaa
jno
sti
shlb
jmp
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fdivr
incl
push
adc
jge
push
je
mov
andb
fwait
ja
clc
inc
shrl
xchg
out
popf
rorl
and
sub
pop
std
jmp
dec
fsubrl
stc
jbe
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
cs
insl
sub
adc
decl
or
or
cs
ret
sub
xchg
mov
data16
mov
push
insb
sbb
xchg
shll
cltd
test
push
push
shll
decl
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
rep
cs
mov
adc
enter
mov
mov
movsb
mull
jno
addr16
pushl
std
ljmp
scas
addr16
cmp
dec
movsl
jg
push
mov
fwait
stos
flds
call
loopne
and
push
dec
arpl
and
inc
sub
ljmp
nop
cmp
pop
inc
jp
and
sub
dec
pop
jnp
jno
ljmp
pop
sub
sub
imul
es
daa
or
dec
sub
inc
insb
ljmp
dec
and
push
bnd
pop
dec
jbe
add
push
and
pushl
popa
decb
imul
push
ja
dec
add
sbb
adc
sti
and
pop
push
daa
inc
jbe
inc
jg
scas
inc
pop
and
add
mov
inc
out
ja
sub
jne
dec
lahf
aaa
pop
add
pop
popa
jne
addr16
aaa
adc
push
dec
push
dec
and
pop
cmp
add
getsec
dec
pop
inc
mov
and
aaa
push
xor
inc
add
fmull
xor
xor
push
inc
add
inc
add
inc
xor
and
fstps
jbe
aaa
inc
push
inc
jle,pn
cmc
mov
scas
ss
cmovb
pop
ss
cmpsl
ss
push
test
xchg
aaa
daa
or
test
mov
adc
orb
retw
mov
push
and
test
cs
js
cmp
pop
sub
push
popa
sub
or
bound
or
inc
dec
pop
dec
push
lock
inc
andb
popl
inc
mov
out
inc
mov
cltd
xchg
pop
ds
inc
lahf
movsb
repnz
setb
mov
jle
sbb
dec
shll
inc
js
mov
popa
jbe
mov
sub
sub
pop
adc
pop
push
loopne
int
or
adc
dec
xor
jb
ja
cmpsl
and
in
and
mov
xchg
push
ret
adc
sub
out
insb
and
sbb
movb
mov
xor
int
push
sub
mov
adc
inc
cmp
nop
sbb
sbb
pop
cmp
adc
push
push
push
mov
call
lret
sti
in
push
mov
pop
jmp
addb
and
inc
mov
xchg
mov
and
push
popf
add
push
xor
pop
mov
lods
mov
push
cld
mov
xor
cmp
jno
ds
inc
in
mov
iret
pop
inc
mov
jmp
sbb
dec
sbb
inc
loope
pop
popa
in
push
adc
dec
xor
cmp
outsl
iret
sahf
xor
xchg
inc
outsl
fmul
enter
sub
iret
dec
xchg
push
popf
sub
adc
test
les
cmp
or
in
in
dec
movd
rdmsr
imul
jo
inc
mov
jae
popa
insl
gs
cmp
ret
adc
pusha
pop
jbe
out
add
aad
xchg
mov
sbb
je
loop
xor
inc
out
push
and
testb
int
stos
inc
outsl
insb
dec
push
popa
je
push
pushl
fiadds
xchg
insl
and
add
mov
aaa
add
and
push
sbb
frstor
xchg
pop
pop
sub
and
fimull
push
pop
or
pop
adc
inc
mov
push
add
lret
cwtl
push
mov
movsb
push
adc
mov
iret
jg
arpl
pop
fbld
mov
add
insl
test
lahf
cmp
fmull
push
xor
add
movsl
jno
mov
sahf
and
addr16
push
sahf
lds
sbb
and
dec
loopne
out
and
js
push
mov
aas
push
push
das
lea
das
sub
add
test
pop
push
mov
popa
jb
mov
shlb
repz
mov
loopne
inc
jne
rolb
sub
dec
push
push
enter
fstpt
fs
daa
push
dec
jo
adc
arpl
shl
push
mov
push
and
test
jge
and
ss
sbb
sbbl
les
cli
aam
sub
jbe
jo
xchg
dec
xchg
or
sub
push
outsl
imul
ss
pop
xchg
add
mov
or
lgs
pop
and
movsl
dec
das
aas
pushf
decb
divb
push
das
push
lea
scas
pop
add
dec
popa
sbbl
inc
xor
mov
dec
aas
dec
shrl
cmp
mov
shlb
push
sarb
dec
or
cli
and
push
iret
cld
push
and
push
dec
mov
dec
xchg
dec
push
std
cmpsl
rcrb
outsb
ja
dec
inc
aam
xlat
xchg
pop
test
inc
test
cmpsl
mov
xor
dec
inc
and
cmp
insb
fstl
dec
jmp
outsl
xor
sbb
and
pop
testl
test
gs
es
test
push
movsb
xlat
aas
xor
and
test
pop
pop
pop
inc
inc
or
adc
ds
movsl
or
dec
pop
dec
insl
xchg
enter
xor
sbb
out
cs
movsl
mov
in
add
xor
aad
fisttpl
lods
mov
rcll
pusha
mov
or
insl
dec
mov
icebp
cmpb
das
pop
and
mov
test
sub
inc
xchg
shl
sbbb
or
testb
dec
cmp
add
and
cmpsb
das
push
aaa
sub
gs
subl
pop
lods
mov
insb
fs
call
dec
and
addr16
popa
lods
lods
cwtl
cltd
cli
outsl
dec
or
test
mov
or
mov
inc
push
punpckhwd
rolb
dec
outsb
push
je
scas
pop
or
push
pop
insb
lods
out
sbb
push
push
inc
dec
push
inc
pop
push
dec
inc
dec
inc
push
pop
shlb
xlat
jb
gs
testl
adcb
loopne
cmp
dec
jb
inc
inc
xorl
idivl
mov
inc
add
add
test
xchg
xor
je
add
sub
inc
js
scas
inc
insb
push
and
rolb
add
mov
or
xorl
or
pop
ret
jb
push
adc
sahf
loope
add
dec
or
add
inc
or
pop
aas
test
insl
in
std
inc
es
pop
sbb
loopne
jnp
pop
or
mov
daa
adc
test
add
inc
rclb
pop
sub
xor
and
add
and
lock
pushf
adc
ja
or
and
xor
cmp
add
dec
shl
pop
sbb
pop
pop
lret
sbb
push
pop
dec
xchg
push
roll
stos
fsubrl
ds
xor
inc
add
sub
outsl
mov
xlat
sub
adc
adc
icebp
stos
loop
mov
sbb
sub
bound
mov
outsl
or
dec
dec
xor
add
xlat
sarb
mov
push
mov
jle
pop
icebp
enter
inc
das
mov
dec
in
ret
dec
sub
orb
xchg
dec
inc
nop
xchg
rorl
mov
inc
fdivp
sub
pop
lock
adc
cmpb
aas
push
insl
fcmovnb
mov
jo
maxps
dec
add
dec
roll
inc
loopne
out
push
xchg
add
adcb
push
inc
pop
xor
push
aam
aas
add
push
into
incl
adc
movsb
add
daa
sbb
and
cmp
inc
add
outsl
ror
cmpsl
not
sbb
lahf
add
pop
sarb
test
cwtl
test
nop
xchg
cmp
test
cwtl
cs
xchg
mov
in
hlt
lods
add
jns
aas
jg
xor
outsl
mov
sub
xchg
sub
mov
sub
mov
daa
pop
test
jbe
push
fcomps
lahf
out
push
mov
sarl
into
gs
je
pop
mov
stc
cmp
xchg
inc
and
pop
sub
sahf
ja
adc
pop
xchg
test
pop
sahf
jns
jns
pop
pop
ds
pop
push
test
xor
out
adc
pop
fadd
icebp
jns
out
pop
enter
pop
enter
push
push
inc
adc
add
cs
jecxz
or
out
dec
inc
cltd
call
mov
mov
xchg
xor
or
imul
dec
sahf
out
pop
cld
add
and
add
jnp
jnp
add
push
push
arpl
cmp
mov
pusha
ffreep
push
jg
jg
jne
scas
test
xor
add
dec
mov
outsl
enter
add
inc
lock
add
inc
xor
inc
leave
mov
jl
dec
pop
dec
outsl
add
xchg
or
filds
sub
inc
cs
mov
xchg
mov
outsb
push
jb
sub
cmp
dec
sahf
imulb
ss
add
sub
fiadds
push
test
pop
inc
mov
popa
scas
add
js
out
daa
push
xor
xor
xor
movsb
jns
xor
jl
inc
cs
add
dec
push
adc
pop
leave
mov
pop
scas
add
mov
mov
push
xor
pushl
enter
daa
xor
and
testb
sub
xor
test
fs
lcall
test
cmc
dec
sahf
sub
pop
ss
pop
fdivl
mov
pusha
lods
fs
or
cmp
mov
adc
sbb
out
push
xor
ja
add
scas
sub
push
sub
mov
pop
insb
push
js
insb
and
add
inc
outsb
push
xor
outsl
and
or
and
nop
sub
and
or
sbb
pop
or
xor
push
sbb
xor
out
jbe
jo
mov
pop
mov
xlat
call
xor
push
aaa
pop
insl
andl
popaw
fildl
sub
and
pusha
fisubs
add
mov
ja
ss
shrb
mov
mov
or
push
jl
xchg
or
pop
mulb
in
push
rclb
cs
movsb
xchg
push
pushaw
sub
xchg
clc
pop
enter
sbb
call
mov
xor
testl
sub
insb
inc
jo
push
push
lods
sbb
stos
outsl
jg
cs
add
xchg
daa
idivl
shlb
push
add
cmp
gs
pusha
enter
cmpsl
cmp
nop
xchg
push
imul
cmpsb
push
or
pop
jl
xchg
rorl
lahf
xlat
or
test
xor
push
call
or
jl
push
mov
adc
xchg
xor
mov
arpl
pop
arpl
testl
and
add
add
fs
push
scas
adc
cwtl
push
and
lods
fs
aaa
mov
adc
insb
pusha
pop
leave
add
mov
xchg
and
add
xor
dec
jo
shlb
in
and
out
outsl
xchg
pusha
mov
and
jg
scas
in
pop
add
aam
mov
add
jg
addr16
nop
or
add
aam
dec
cs
add
sub
idivl
dec
push
adc
in
leave
mov
add
push
lods
pop
pop
cmpsb
cwtl
inc
ds
adc
test
fadds
clc
push
mov
adc
addr16
jb
mov
cmpsl
add
sbb
iret
cmp
xlat
add
sbb
xchg
sahf
iret
jbe
or
daa
dec
out
int3
lahf
leave
xchg
pop
in
or
add
repz
fcompl
iret
sarl
in
or
add
imul
out
lcall
xchg
push
or
push
pop
or
xor
or
dec
enter
movsb
push
ret
xchg
outsl
add
or
mov
and
cmpsb
nop
fwait
xchg
xchg
add
leave
adc
popl
out
or
pop
add
and
shrb
fsubrl
xchg
stos
loopne
nop
add
adc
addr16
mov
or
cltd
nop
push
int3
addr16
mov
daa
add
mov
or
push
and
mov
outsb
lock
xor
or
xlat
sbb
jl
push
repnz
mov
sar
daa
sub
push
cmpsl
js
push
insb
xchg
enter
lds
aaa
ss
test
and
imul
pop
lods
pop
mov
outsl
movsb
nop
iret
and
sbb
test
xor
xlat
popa
xor
add
iret
lds
nop
cwtl
subl
ss
or
pop
lock
inc
gs
pushw
shrb
cmpsl
stc
int
cld
int3
ds
scas
jecxz
iret
sarl
dec
jbe
lods
jns
iret
repz
xor
sarl
mov
repz
insl
sub
repz
push
jns
shl
adc
xor
iret
repz
mov
es
cmp
out
out
jno
nop
jns
iret
repz
out
jb
push
sarl
jge
enter
shrl
jne
std
je
jne
mov
mov
push
subb
repz
enter
mov
cmp
out
adc
cltd
enter
iret
cld
sub
pusha
mov
lahf
cld
pop
jp
push
cwtl
ret
out
stc
cmp
repz
jnp
push
sub
cmpsl
popa
mov
imul
jle
mov
adc
push
jl
ja
lods
sub
enter
cmpsl
fsts
addl
test
jns
jns
xchg
mov
add
cmp
out
or
jl
out
xchg
lcall
push
shl
mov
dec
repz
and
lahf
cmpsl
stc
sbb
stos
out
adc
rep
test
adc
testb
out
sarl
mov
nop
data16
repz
aad
xchg
mov
sarl
push
in
adc
jl
jl
ss
pop
int3
push
iret
repz
xchg
add
out
ds
sub
lcall
lcall
fcomps
popf
jo
clc
xor
xchg
add
sarl
insb
iret
add
jns
scas
in
xor
repz
sub
sbb
repz
rcrb
movsl
push
jae
out
lcall
jo
out
cmp
xor
test
js
popa
stos
lods
rcrb
aas
push
out
jl
lods
pusha
test
jecxz
scas
xor
ja
lds
es
fsubs
mov
addr16
cmpsl
stc
adc
fnsave
mov
in
mov
sahf
data16
dec
mov
lcall
out
xor
jns
add
cmp
cmpsl
stc
push
rcrl
cmp
jns
iret
shrl
mov
xor
out
lcall
nop
lds
enter
lret
frstor
lret
push
push
rcrl
cmc
iret
mov
sub
rcrb
push
aam
iret
ror
add
inc
push
jo
cmp
push
add
je
das
fmulp
jno
addr16
cmp
xchg
add
add
xchg
mov
cmpsl
sub
mov
push
repnz
jle
clts
imul
imul
iret
insl
in
imul
les
pop
and
cmpsl
aam
lds
pminsw
mov
adc
fwait
adc
iret
ss
aas
in
jb
call
cs
loop
repnz
in
inc
add
xor
loope
lock
cmpsl
mov
out
lcall
aaa
pop
enter
rolb
pushf
xor
mov
ss
inc
add
jmp
adc
mov
scas
rorl
mov
jbe
mov
mov
scas
fmuls
in
es
jp
push
filds
fdiv
push
xchg
cmp
aas
dec
adc
cmpsb
lea
out
cmp
aas
std
into
mov
adc
lahf
fxch
shr
cltd
fdivs
outsl
fnsave
xchg
aas
mov
in
in
mov
push
enter
iret
jnp
daa
xchg
in
xchg
lock
push
popa
push
stos
xlat
push
mov
ds
cs
push
inc
negl
mov
comiss
in
inc
xchg
jbe
inc
rorl
ja
mov
pop
repz
repnz
xchg
aaa
test
inc
cmc
inc
add
fnstsw
loope
sbb
aad
out
lahf
mov
shlb
xor
xchg
sbb
cli
pop
sbb
or
mov
hlt
adc
adc
fiaddl
aas
fs
dec
addl
jle
leave
and
pop
dec
iret
adc
adc
aas
subb
shr
sbb
add
and
adc
mov
pop
nop
sub
iret
cmp
jbe
inc
inc
addr16
and
add
sub
das
outsl
xor
inc
shll
pushf
jns
jns
push
scas
xor
jp,pn
xchg
hlt
in
jp
stos
cwtl
inc
in
cs
dec
push
push
out
and
inc
dec
inc
dec
repnz
jp
jp
jo
adc
scas
movsl
mov
in
mov
jp
sahf
aaa
lds
insb
sbb
add
inc
jnp
insl
pop
sub
jnp
leave
leave
leave
leave
dec
push
pop
fs
fildl
inc
xchg
mov
mov
dec
cs
xor
call
sbb
sbb
daa
sub
daa
xchg
dec
leave
cli
or
sbb
pop
and
daa
xchg
mov
add
insl
inc
iret
sbb
mov
outsl
add
jge
pop
sub
repnz
inc
jge
jno
sub
pop
popa
xchg
mov
add
insl
cmp
sub
fdivrl
pop
fisttpll
push
sbb
push
daa
sub
inc
xor
jb
leave
jo
and
sub
or
mov
fmuls
and
jg
jg
mov
outsb
popa
outsb
insb
repz
repz
add
addb
push
cwtl
pop
mov
cmp
out
push
inc
daa
arpl
jg
jb
and
jg
jg
in
cmp
or
xorb
pushf
inc
mov
outsl
adc
push
mov
jbe
cmp
cmp
shlb
inc
dec
icebp
imul
add
leave
inc
repnz
movsl
lods
out
fmulp
mov
cmpsb
add
add
and
xchg
rolb
xor
pushf
incb
jo
jo
inc
xor
xchg
jo
jo
jb
jb
inc
jo
jo
pop
xchg
pop
jb
popa
imul
mov
loope
mov
mov
mov
dec
push
sub
fbstp
es
push
mov
nopl
in
enter
jno
jno
add
and
jno
sbbl
push
inc
out
cmp
sub
daa
sub
dec
mov
fs
test
xchg
fbstp
dec
fiadds
pop
xor
pop
add
fadds
jb
test
add
xchg
and
inc
bound
ret
ja
sub
inc
inc
test
cmp
mov
pop
and
dec
jb
cwtl
in
or
push
cld
test
mov
or
add
daa
push
xchg
cmp
xchg
xchg
jecxz
repz
sti
jb
xchg
xchg
sbb
jae
test
jae
xchg
and
cmp
jae
xchg
or
or
sub
jb
add
nop
jae
xchg
loope
adc
shlb
jae
das
das
das
shll
jae
jae
jae
das
das
das
pushl
je
je
repz
repz
or
or
or
repz
inc
or
or
repz
adc
cmp
repz
repz
pushf
adc
adc
repz
pop
rcrl
loope
cltd
loopne
sbb
je
sbb
push
and
xchg
jb
inc
inc
enter
leave
xor
add
jns
mov
pop
and
in
aaa
add
jbe
in
mov
jbe
ja
fcmovne
inc
dec
inc
addr16
dec
push
aam
mov
fistl
lock
in
je
adc
dec
cmpsb
pop
dec
mov
leave
add
mov
and
push
add
in
cltd
pop
and
sub
ja
pushf
jmp
ja
dec
ja
ja
rcrl
adc
adcb
pop
mov
inc
xlat
and
xchg
aaa
inc
cmpsl
test
mov
js
add
xchg
cmp
mov
ja
pushf
sbb
aaa
aaa
shlb
dec
es
mov
clc
js
adc
or
andb
stos
out
adc
add
repnz
mov
push
sbb
pop
jb
add
pop
leave
mov
push
rol
pop
leave
and
mov
sbb
leave
inc
inc
jo
inc
jb
mov
arpl
sarl
inc
mov
xchg
hlt
cld
nop
inc
repnz
test
dec
icebp
sub
jp
sub
push
js
nop
ja
lods
mov
into
lock
aas
mov
pop
mov
addr16
iret
xchg
adc
push
mov
cmpb
seto
jne
mov
mov
test
leave
and
jnp
mov
jnp
jnp
jnp
xchg
xchg
mov
jae
or
xchg
hlt
adc
xchg
and
xor
aaa
add
add
mov
and
int3
push
pop
inc
mov
push
jb
nop
nop
nop
and
js
sarl
mov
in
addr16
jl
mov
jl
jge
jge
jge
mov
and
sub
xor
mov
jge
jge
jge
jge
mov
fs
jge
jge
xchg
outsb
mov
push
xchg
xchg
xchg
xchg
or
xchg
xchg
xchg
or
pop
push
xchg
xchg
xchg
xchg
add
push
xchg
xchg
add
xchg
in
jbe
dec
lahf
stos
xchg
fcmovnb
rclb
in
fwait
cmc
push
add
jmp
xor
sbb
dec
jle
fsubrl
xor
pop
ja
mov
sbbl
vmovd
xchg
xor
aad
fnstsw
in
in
pop
iret
leave
repz
push
cmc
std
or
xchg
jg
jg
or
xchg
dec
sahf
pop
and
mov
fnstsw
das
pusha
jg
push
orl
scas
cmpl
sahf
fisttpl
in
in
mov
lods
mov
xchg
out
ja
push
aad
mov
or
pmulhw
lds
rcpps
jns,pn
int
pop
mov
xor
shlb
inc
cmp
pusha
aas
das
mov
pop
pop
in
js
xchg
xchg
inc
pop
or
out
mov
daa
inc
push
xor
xor
xchg
and
andb
add
repnz
jae
add
stc
add
orb
adc
test
lea
popf
movsl
xchg
add
pop
shr
icebp
stc
fcmovnu
pop
outsl
pop
add
adc
xor
pop
and
jbe
push
push
add
pop
leave
and
sbb
jb
sbbl
into
subl
in
mov
cmp
and
and
mov
cmpb
dec
adcb
xchg
sbbb
push
jne
iret
repz
orb
or
cmp
repz
or
iret
or
xchg
xchg
popl
adcl
xor
cmc
rclb
mov
mov
ud1
cmp
iret
jae
push
leave
rorl
loopne
jbe
fabs
psubsw
rorb
and
cwtl
push
pusha
enter
mov
pop
nop
test
leave
pop
jmp
inc
hlt
cwtl
or
cld
push
add
cwtl
add
push
repnz
cmp
inc
dec
cltd
inc
cmp
push
jo
int3
scas
pop
rol
xchg
rcrb
daa
clc
in
jns
xlat
outsl
xor
add
repnz
add
cltd
lock
push
sub
test
test
fldt
pop
dec
test
enter
movaps
enter
sub
cmpsl
in
adc
add
nop
enter
test
vmwrite
mov
mov
fwait
ss
outsl
dec
push
in
xchg
or
ss
xchg
pop
xchg
shrl
pusha
xchg
jo
or
leave
and
in
insb
daa
pop
rcr
addr16
mov
jmp
xchg
repnz
xchg
leave
leave
inc
pusha
imul
mov
mov
fbld
pop
leave
jae
cld
andl
mov
mov
mov
mov
pop
mov
mov
or
and
xchg
pushf
jne
incl
xchg
xchg
mov
xchg
xchg
mov
int
jl
sahf
and
or
or
popf
mov
xchg
adc
enter
xor
xchg
jb
push
mov
imul
sahf
pop
popf
mov
dec
mov
xchg
mov
mov
repnz
mov
cmovl
add
fwait
pushf
inc
add
test
xchg
scas
mov
jns
in
xor
add
cmp
xchg
out
xlat
fisttps
jp
es
mov
jb
pop
sub
push
mov
rorl
mov
aam
mov
mov
pop
mov
nop
cmpsb
mov
mov
iret
mov
xor
push
mov
push
ja
popf
push
fsubs
push
jmp
push
add
add
in
xor
push
jb
jp
xchg
out
das
sbbb
mov
or
or
mov
das
cmpsl
nop/reserved
loopne
mov
mov
mov
dec
xchg
sbb
repnz
xor
cmp
sbb
popf
dec
mov
ja
addr16
mov
in
mov
xchg
popf
dec
fisubl
cmp
dec
data16
add
enter
add
or
out
mov
aas
das
push
add
pop
push
add
mov
jno
dec
push
fwait
sub
leave
js
inc
mov
iret
jae
mov
jb
repnz
ret
lret
ror
lret
pop
jp
mov
mov
mov
sti
mov
or
or
cmp
or
cmp
cmp
pop
push
add
cmp
add
adc
sbb
and
jns
out
sbb
pushf
cmp
in
mov
push
cmp
repz
pop
and
and
repz
sub
mov
into
inc
repnz
rorb
fimull
jg
nop
arpl
ss
add
ja
adc
in
in
sahf
add
add
cmovs
cmpsl
push
mov
cmp
mov
jae
fsubrl
pop
mov
mov
pop
iret
lods
rorb
or
rclb
fdivrs
or
or
or
fnsave
lock
pop
cmpxchg
invd
adc
sbb
aaa
adc
cmpsb
xchg
sahf
pop
in
push
xchg
ja
int3
cmp
mov
xchg
add
xchg
adc
sahf
xchg
test
repz
lret
cmpsb
xchg
push
jle
cmpsl
lock
das
mov
xchg
iret
adc
add
sbb
and
xor
push
xchg
or
fstps
cmpsl
or
cmpsl
popf
fucomi
add
pop
jmp
jae
add
push
add
hlt
sbb
das
xchg
mov
xchg
sbb
pop
push
pusha
mov
enter
xor
jmp
mov
inc
inc
push
enter
ljmp
in
mov
inc
sbb
and
leave
in
and
pop
arpl
sub
test
inc
cmp
cmpsb
mov
push
ret
daa
iret
mov
in
and
pop
xchg
push
fists
mov
xchg
comiss
shlb
add
pushf
pushf
cmp
pusha
push
repz
orb
nop
or
or
out
test
adc
adc
jbe
xchg
call
xchg
xchg
out
xchg
xchg
add
jb,pn
out
xchg
push
mov
ret
int
ja
fstl
pop
stos
inc
xchg
mov
out
stos
inc
fs
lret
xchg
aaa
jns
pop
pop
add
cmp
pop
mov
xchg
cmp
xchg
push
fists
fisttpl
lret
das
xchg
and
add
sbb
rclb
lods
adc
xchg
jg
in
in
cmp
mov
add
xchg
mov
bound
mov
or
and
cmp
imul
sbb
push
dec
aas
test
sub
hlt
cld
and
dec
xchg
xchg
out
pop
lar
xchg
out
jns
sbb
and
mov
jl
push
mov
dec
xchg
or
cmp
add
mov
daa
dec
aaa
jns
sysret
test
out
sbb
pop
mov
ds
leave
repz
or
sbb
aad
xchg
xchg
clc
xchg
in
mov
ja
jo
sbb
xor
cmp
inc
cwtl
dec
cwtl
fwait
push
gs
pop
cwtl
ljmp
inc
jg
pop
push
in
mov
stos
iret
mov
and
add
int
adc
aad
fstpl
or
out
inc
pop
sbb
lock
sub
lret
lret
or
pusha
scas
dec
sahf
pop
and
movsb
lock
mov
sub
fists
cwtl
sub
clc
adc
xchg
push
mov
sarb
daa
lret
fisubrs
add
out
cltd
outsl
negb
nop
cltd
inc
mov
nop
inc
repnz
jmp
les
inc
mov
lcall
xchg
and
test
add
iret
push
lcall
lret
lret
mov
mov
push
or
cmp
repz
jb
aad
push
std
lcall
sbb
add
dec
sahf
add
inc
xlat
jns
jns
jbe
fwait
mov
fwait
out
sahf
pop
push
add
les
cmpsl
cs
lcall
mov
xor
js
pushf
and
xor
inc
insl
in
xchg
pushf
dec
pushf
push
pushf
pop
pop
and
mov
push
jb
mov
sbbb
int3
testl
in
movsb
pushf
pushf
pushf
pushf
leave
add
pushf
inc
push
pop
and
xlat
pop
dec
mov
mov
popf
movups
pushl
cmp
popf
dec
popf
push
jl
popf
popf
popf
scas
inc
push
leave
pop
jne
inc
dec
mov
dec
cmpsl
mov
pshufw
popf
popf
pop
push
fldl
test
iret
nop
cmp
fisubl
cmpsl
rcr
cmp
cmp
loopne
loopne
mov
cmp
iret
add
stc
sarb
jg
sahf
pop
adc
imulb
sahf
xchg
mov
jmp
outsl
lsl
in
in
jg
push
test
rsm
mov
and
loopne
fwait
jecxz
call
clc
xchg
mov
lahf
cmp
sti
pop
push
add
add
das
pop
xor
jg
cmp
push
pop
mov
xchg
cmp
sbb
lahf
pop
or
jb
out
add
pop
in
das
or
lds
in
outsl
sbb
aaa
jae
rcrl
and
fcompl
xchg
mov
mov
outsb
mov
xchg
xchg
lahf
xcrypt-ctr
cmpsl
pop
scas
dec
sahf
out
add
xchg
ja
lar
test
sarb
dec
ljmp
insl
mov
out
scas
add
mov
punpcklwd
movsb
repnz
xchg
xchg
pop
leave
jae
xchg
add
lret
ja
addr16
aam
and
xchg
sbb
shl
adc
cmp
xchg
daa
fnstsw
xchg
int
ja
mov
push
mov
into
insl
in
mov
outsb
repnz
push
stc
lsl
into
pop
adc
mov
dec
lock
sbb
and
aas
movaps
stc
or
sbb
mov
jo
sahf
out
ds
add
in
in
nop
pop
sgdtl
dec
dec
sbb
mov
repz
push
mov
pop
mov
aas
enter
adc
cmp
in
fdivrs
push
loopne
leave
repz
call
cmp
imul
or
das
push
test
leave
push
inc
dec
mov
sub
xchg
mov
dec
jb
movsb
adc
xchg
and
push
inc
mov
xor
dec
push
jg
mov
scas
mov
insb
mov
movsb
shlb
movsb
movsl
xlat
iret
cmp
or
add
sbb
add
es
sub
movsl
dec
sahf
or
cmp
daa
iret
mov
add
bound
outsb
xchg
xchg
movsl
movsl
xchg
mov
loopne
call
in
movsl
or
out
jns
push
into
sub
mov
jb
xor
cmpsb
xchg
lcall
scas
mov
pop
dec
mov
je
push
add
enter
mov
shlb
sahf
fnclex
pop
ljmp
out
add
adc
int3
hlt
jbe
mov
fistps
cmp
sbb
cmp
xor
mov
fmull
cmpsl
push
pop
insl
mov
ja
addr16
fmulp
sub
cmpsl
mov
out
lods
add
add
cmp
int
out
sahf
out
or
or
pusha
rorb
or
xchg
pop
leave
roll
rclb
push
je
enter
test
test
fs
pushf
dec
mov
xchg
pop
test
repnz
pop
gs
das
inc
fidivs
or
jge
test
test
pop
out
jge
adc
add
or
inc
xchg
or
or
xchg
or
fs
pop
jo
sub
test
out
daa
fnstsw
cltd
loopne
ja
add
nop
cmp
xchg
xchg
xchg
xchg
test
inc
das
pop
xchg
daa
pshufw
and
mov
test
mov
dec
test
pop
sbb
push
mov
mov
jle
stos
lahf
jmp
stos
xor
outsl
smsw
in
cmp
repnz
lock
stos
adc
jns
xchg
mov
jl
pop
jo
xchg
add
into
inc
ret
stos
nop
push
adc
mov
repz
jmp
or
mov
adc
mov
mov
add
dec
and
mov
stos
push
xlat
push
repnz
add
inc
mov
ret
stos
lret
stos
shrl
fnstsw
jecxz
jmp
xrelease
in
daa
push
pop
add
lods
jns
movsb
push
lods
add
push
iret
repz
add
arpl
cmp
es
add
xchg
dec
mov
imul
scas
mov
cmp
in
shr
enter
outsl
pop
psubusb
loopne
pop
call
insl
lock
pop
popa
dec
loope
and
repz
das
aas
lahf
adc
outsb
xchg
mov
lods
add
xchg
jl
movb
in
cwtl
xchg
add
repnz
rorb
sbb
push
xor
pop
xor
inc
mov
arpl
leave
repz
pop
push
xchg
inc
push
or
or
or
adc
jns
push
mov
loopne
dec
adc
leave
leave
leave
leave
loopne
lock
cmp
leave
in
add
cmp
fwait
pushf
inc
add
dec
pop
leave
leave
leave
in
push
divps
in
leave
leave
movsb
ret
loop
mov
in
or
dec
jo
out
in
mov
and
jp
mov
loopne
out
sahf
add
pop
sub
xor
in
and
inc
push
and
sub
fs
outsl
mov
push
test
dec
es
iret
add
rcrb
das
xchg
push
repz
sti
mov
jb
and
lcall
dec
jmp
enter
mov
insl
mov
inc
mov
xchg
mov
in
jns
or
ret
in
lret
out
push
mov
in
or
mov
inc
mov
mov
mov
pop
mov
mov
mov
mov
jle
xchg
or
iret
xchg
and
shrb
mov
jo
jmp
pop
loope
mov
pop
icebp
pop
stc
pop
aam
dec
add
ucomiss
xchg
xchg
xchg
xchg
mov
mov
mov
mov
xchg
xchg
xchg
xchg
mov
mov
mov
mov
xchg
xchg
xchg
xchg
mov
mov
mov
mov
jl
xchg
xchg
mov
mov
mov
test
mov
push
sbb
cmp
repz
ficompl
sbb
ljmp
in
and
and
sbb
jns
out
and
and
ss
daa
dec
sub
out
push
or
addr16
dec
aaa
cvttps2pi
cs
jl
pop
dec
jg
xor
lret
movsl
cmpsb
jbe
movsl
pop
shrd
mov
push
fimull
cld
das
int
aad
loopne
iret
in
jp
clc
add
pusha
mov
push
add
mov
dec
aaa
sgdtl
test
and
xor
loop
push
add
es
mov
cmp
mov
sti
pushf
pushf
mov
mov
inc
dec
pushf
pushf
pushf
pushf
test
cmp
repz
movsl
lods
cmp
xchg
out
adc
jbe
outsb
repnz
por
repz
jp
repnz
push
mov
pop
das
push
iret
repz
andb
and
add
sarl
outsb
daa
daa
daa
mov
mov
movntq
out
idivl
push
adc
sahf
out
push
cmp
popa
jg
in
in
xor
xor
lahf
cmpsl
aaa
scas
icebp
in
mov
movswl
cmp
iret
mov
pop
cmp
mov
and
jl
add
iret
mov
sub
iret
js
in
jmp
mov
xchg
mov
hlt
enter
addr16
mov
cmp
sahf
ja
jo
push
add
dec
pushf
add
add
dec
mov
out
mov
jmp
xchg
hlt
decl
mov
cmp
and
adc
out
jns
inc
adc
pop
push
cmp
xchg
gs
jnp
cmp
out
xchg
xchg
pushf
jns
xchg
out
cmpsl
mov
mov
enter
add
mov
mov
or
es
iret
sub
jae
test
dec
test
jg
jb
sub
mov
fidivs
push
add
sahf
rolb
sahf
sarb
mov
pop
movsb
sahf
mov
repnz
clc
mov
adc
leave
repz
and
adc
repz
aaa
lar
pop
cmp
sbb
mov
mov
sbb
sahf
cmova
fsubs
shrb
mov
mov
jae
mov
xchg
mov
sbb
mov
outsb
daa
iret
add
mov
fwait
dec
test
mov
jb
dec
mov
fisubl
sub
pushf
fmull
subps
dec
and
xchg
add
xchg
mov
test
repnz
daa
mov
push
daa
pop
leave
jae
push
ljmp
ja
mov
out
repnz
add
jns
add
pop
repnz
in
pusha
punpckhbw
xor
xchg
xchg
fildl
fwait
mov
push
mov
pop
into
ficomps
out
sahf
xchg
out
out
testb
mov
adc
push
sarl
jb
enter
xlat
xor
cmp
inc
shl
sbb
dec
rcll
and
xchg
xchg
xchg
mov
jb
cmp
mov
out
jbe
xchg
mov
and
add
lahf
out
add
ret
jp
cmp
adc
sbb
loop
out
xor
or
jg
jns
insl
push
jg
push
add
fbstp
pop
jge
test
fists
pop
popf
decb
movsl
or
movsb
pop
and
enter
fucomi
fcomps
loopne
call
sbb
xchg
or
adc
sbb
jne
and
ret
sub
inc
fnstenv
ret
divps
outsb
cmpsl
jbe
jb
inc
repnz
out
test
fs
fmul
add
out
sbb
addr16
jb
push
sbb
aas
and
sub
jns
sahf
out
add
inc
add
dec
push
les
or
andb
in
cmp
mov
scas
rol
and
sub
fildl
add
or
adc
fs
mov
pushw
add
jmp
syscall
xchg
fldenv
popf
lds
jns
lds
lds
vmaxss
xchg
xchg
xchg
xchg
or
push
and
sub
xchg
xchg
xchg
aaa
movb
pop
xchg
xchg
xchg
xchg
arpl
outsb
jns
test
xchg
xchg
pop
lcall
rorb
sbb
in
in
sbb
pop
push
sahf
out
in
adc
mov
jns
out
mov
xchg
daa
iret
cmp
push
xor
mov
mov
xor
outsb
aas
mov
cmp
cmp
or
push
adc
push
cmp
jns
out
aas
aas
inc
dec
inc
sahf
out
sahf
push
inc
pusha
inc
imul
repz
cmpl
dec
fnstcw
jns
xlat
cmovnp
in
out
cli
vmwrite
dec
adc
cmp
out
es
xor
jae
jb
inc
push
pop
push
pop
jae
pop
jle
in
in
xchg
lahf
stos
fists
enter
fistpl
xchg
cmpsb
enter
add
out
pop
pop
or
adc
push
add
cmp
and
sub
or
mov
cmp
test
pop
mov
sahf
ja
cmp
push
cmp
repz
dec
adc
pop
jns
leave
repz
push
adc
cmp
pop
sbbb
in
daa
iret
sbb
xor
cmp
fmuls
sbb
xchg
int
call
lret
aaa
cmp
out
lret
cmp
add
add
dec
push
lret
lret
punpckhbw
jns
inc
mov
loopne
daa
or
add
mov
dec
sahf
outsb
mov
clts
rcr
or
and
lret
sbb
outsl
lock
lret
lret
or
dec
sub
xchg
loopne
jmp
push
pop
push
add
jns
sahf
pop
add
jae
add
movsb
mov
in
loope
mov
lret
xchg
xchg
xchg
cmp
lret
lret
and
xchg
lret
mov
aam
cmp
loopne
jg
add
bswap
outsl
and
sbb
and
jns
or
cmp
inc
int3
push
int3
leave
leave
in
jbe
packuswb
jb
cmp
leave
leave
mov
cmp
cs
cmp
aad
push
sbb
aam
out
sbb
jg
out
in
mov
push
cmp
xchg
pop
and
sub
daa
iret
and
mulps
out
outsl
outsl
push
daa
jp
das
nop
push
enter
jg
xor
enter
fmul
mov
ror
int
into
out
jns
ds
pop
sbb
jecxz
push
into
in
xchg
and
dec
into
jb
repz
sahf
addr16
mov
cmp
sahf
pop
test
sub
mov
into
mov
and
lret
into
loopne
das
das
pop
loopne
mov
into
test
iret
jns
testl
pop
push
iret
leave
in
in
sub
mov
sbb
push
outsb
repnz
outsl
pxor
jns
and
test
popf
cmp
cmpsb
push
es
jnp
and
fidivrs
push
iret
repz
shrb
fisubrl
add
add
cmp
incl
inc
add
imul
fs
in
sarb
ja
cmp
shlb
pop
inc
add
in
add
bound
insl
pop
enter
js
into
rcrb
nop
push
or
test
jg
in
pop
nop
dec
dec
call
repz
push
rcll
sarl
sub
pop
xor
cmp
jae
movsb
pop
push
ror
pop
sarl
fcmovne
shrw
jbe
iret
adc
mov
xchg
shll
mov
iret
sbb
sub
rcl
mov
outsl
sbb
and
add
daa
iret
repz
push
inc
loopne
inc
cmovnp
jmp
cmp
cltd
push
jo
xchg
add
xchg
sarb
mov
add
mov
and
sbb
sarb
cmp
sarl
adc
out
in
and
ss
out
in
sahf
push
dec
pop
push
bound
sbb
mov
aas
xchg
out
sahf
xchg
sbb
out
sahf
mov
shlb
and
cmp
in
out
push
and
cli
es
push
cmp
sub
aas
leave
xor
xchg
aam
aam
loopne,pn
pop
ja
sbbb
push
repnz
mov
repnz
ret
aam
aam
bswap
sub
stc
aam
repnz
add
femms
or
iret
leave
leave
in
xor
cmp
adc
repz
adc
adc
fwait
cmovle
aad
in
jbe
xchg
das
sahf
dec
aad
test
cmp
mov
mov
jns
mov
jmp
inc
pop
cmp
cs
add
or
repnz
pop
pop
sub
sub
sub
inc
cs
leave
repz
sahf
sub
outsl
jbe
jns
test
xor
dec
sahf
out
jp
ss
fimuls
rcl
out
cmp
add
test
dec
inc
push
and
and
adc
lea
cmp
sbb
cmp
insb
push
add
aas
inc
push
cmp
cmp
rol
dec
or
movsl
dec
and
mov
dec
repnz
push
push
add
out
add
add
add
out
or
or
outsb
leave
in
in
or
or
or
daa
adc
adc
daa
and
mov
push
das
push
xorps
pop
imull
push
and
in
in
sbb
push
pop
andb
in
jbe
jb
and
repnz
mov
out
fbld
sbb
pop
data16
out
and
sub
add
out
mov
cmp
jns
out
xor
sub
sbb
xor
out
add
call
cmp
in
aam
jns
repz
enter
mov
mov
mov
repz
mov
cmp
repz
dec
inc
sub
xchg
add
pusha
adc
inc
adc
mov
mov
sbb
pop
adc
and
and
or
sub
push
pop
std
dec
sbb
pop
test
or
pusha
ljmp
movsb
add
in
lods
pusha
cmpb
cmpsb
fisttps
mov
sbbl
mov
xchg
inc
mov
popf
pop
rcrb
mov
sbb
out
ja
stc
in
call
adc
push
cmpsl
in
pop
fidivrl
xor
fcomp
loopne
jb
icebp
dec
les
inc
xchg
dec
adc
filds
pop
add
aam
scas
fcompl
xor
scas
pop
push
mov
inc
daa
pop
jle
mov
out
pop
pmovmskb
add
mov
das
test
aas
pop
test
pop
cmp
out
outsl
out
sahf
out
or
repz
aam
adc
repz
sbb
hlt
in
jns
out
sbb
sahf
out
push
cmp
push
stc
repnz
fsubr
mov
or
jae
sarl
jns
jp
push
jnp
or
push
xlat
mov
into
les
sub
test
pop
icebp
sahf
icebp
aas
add
inc
pop
mov
dec
jecxz
or
add
nop
add
cwtl
push
push
xorb
adc
icebp
addr16
push
push
pop
out
imul
cmp
lcall
stos
sbb
xlat
pop
mov
test
cs
cmp
repnz
arpl
push
inc
sub
mov
shrb
out
adc
mov
pop
aaa
lret
pop
push
inc
icebp
xor
repz
sbb
mov
add
pop
push
imull
movsb
and
inc
xor
or
sahf
sub
or
ds
push
call
in
push
and
jnp
jae
push
or
add
push
cld
adc
pop
loopne
push
hlt
sbb
sahf
out
ficoms
push
rcrb
enter
sahf
out
pop
mov
jns
out
and
and
sahf
es
pop
es
cmp
mov
push
dec
ret
movups
xor
pop
dec
jmp
and
inc
pop
inc
cmp
xorl
jg
jns
aaa
xlat
push
pop
js
dec
repz
mov
repz
xor
inc
sarl
insl
add
pushaw
movsb
imul
iret
jae
das
push
dec
insb
push
loopne
sub
das
mov
xchg
pop
enter
inc
pushf
or
pop
repnz
mov
adc
enter
xchg
cwtl
push
and
sbb
push
mov
ret
inc
and
sahf
mov
sub
inc
rcrb
and
decl
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
aad
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
pushl
jl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
decl
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
decl
pop
cmpsb
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
jmp
mov
subb
fwait
xchg
and
and
jne
int3
add
sti
aas
jno
or
mov
pop
jmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
jmp
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
incl
aas
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
fwait
gs
cmp
push
mov
xchg
aas
push
loop
std
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
mov
mov
cmp
sub
jge
mov
mov
arpl
int3
and
call
cmp
jp
and
cmp
mov
call
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
ljmp
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lcall
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
pop
push
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
shrl
or
pop
enter
pop
inc
inc
je
inc
inc
push
dec
dec
in
je
jnp
cmpsl
add
xor
popa
push
out
mov
les
hlt
push
pushl
xchg
fs
xor
fdivrl
jmp
rclb
mov
incl
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
call
aam
movl
imul
std
in
leave
mov
add
insb
push
arpl
jmp
psubd
or
outsb
cmp
imul
addr16
add
aam
dec
jg
std
test
movsl
cli
test
xor
leave
mov
insb
fdivs
jne
mov
inc
iret
or
shrl
push
ficoms
push
xlat
enter
mov
mov
mov
and
mov
cltd
xchg
mov
mov
or
or
and
or
xchg
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
adc
test
push
movsl
in
lahf
xor
jbe
adc
js
stc
adc
xchg
sbb
decl
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
call
add
shl
adcb
cmc
fnstenv
adc
mov
mov
lcall
ficoml
gs
aam
pop
popa
mov
into
pop
cmp
mov
loop
mov
dec
adc
ret
movsb
sti
hlt
shrl
imul
fldcw
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
incl
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
dec
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
pushl
mov
lcall
ljmp
fildl
push
fdivl
or
test
cmp
push
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
sar
jmp
add
inc
push
imul
xorb
sbb
push
imul
aam
loopne
ljmp
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
ljmp
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
mov
lret
sbb
outsl
and
ja
int3
add
mov
add
es
lds
or
add
mov
cmpsl
call
incl
shlb
scas
ficomps
ret
es
pushf
mov
pushl
xchg
insl
add
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
cmp
ljmp
sbb
int
mov
mul
ja
outsl
ja
mov
out
cli
jo
pop
std
decl
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
push
js
jmp
or
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
stos
dec
push
scas
fcompl
fldenv
filds
fists
or
pusha
mov
fidivrs
mov
jmp
insb
sbb
mov
lret
mov
cmpsb
mov
jmp
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
test
ljmp
aaa
mov
or
sbb
add
sub
inc
push
pop
push
xor
pop
mov
cmp
push
scas
or
xchg
dec
add
inc
push
xlat
cmp
repz
fcmovnu
repnz
repz
loop
in
iret
repz
in
jmp
iret
repz
in
repz
cmc
iret
repz
div
clc
stc
cli
sti
push
cwtl
outsb
cmp
daa
adc
hlt
add
cmpsl
adc
mov
and
mov
in
sbb
jnp
inc
push
pop
add
sub
add
dec
mov
adc
dec
stos
dec
shlb
xchg
inc
xor
popa
je
mov
lds
dec
in
cltd
out
and
inc
mov
inc
jns
fistpll
xor
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
fistl
xor
xor
bound
ficoml
inc
popa
push
inc
jbe
pop
insb
imul
fs
orb
shrb
push
dec
inc
dec
mov
inc
or
sub
sbbb
mov
fs
imul
imul
subl
outsb
inc
aas
mov
adc
gs
and
push
sub
lcall
push
add
cmp
xor
insb
popa
jns
addr16
xchg
addb
popa
xchg
cmp
je
loope
subb
push
popl
in
pusha
and
or
cltd
and
jae
out
inc
daa
int
mov
or
inc
aas
pop
inc
add
pop
inc
aaa
sbb
fs
sbb
pop
mov
je
jo
jbe
out
inc
inc
inc
add
ds
mov
scas
add
cli
rcl
push
iret
int
push
dec
or
xor
dec
xchg
pusha
stos
sbb
cmp
ja
outsb
jne
aad
movsb
xchg
mov
dec
jge
addr16
mov
xor
xor
or
mov
test
add
addr16
clc
xchg
cmp
fidivrl
or
sahf
inc
dec
inc
cmp
adcb
cli
adc
or
push
mov
rorl
pop
mov
push
adc
lahf
adc
mov
mov
ficompl
xlat
and
mov
xor
inc
jb
pop
mov
frstor
push
nop
and
popa
jo
lahf
sub
outsl
outsl
test
or
sbb
sti
adc
jno
sub
inc
adc
push
dec
mov
es
nop
test
push
cmp
and
push
dec
arpl
cmp
mov
push
jo
push
or
xchg
insb
jns
add
inc
mov
push
mov
push
push
xchg
addr16
outsl
arpl
insb
paddsw
sub
xlat
inc
push
bound
ja
xchg
mov
pop
inc
jbe
xor
shrb
ja
cmp
leave
push
dec
xor
pop
shll
and
das
xor
pusha
add
add
and
inc
add
push
iret
xor
sbbl
lret
xor
pop
inc
dec
pop
and
adc
pop
push
loope
sbb
sbb
push
shl
pop
mov
inc
push
inc
dec
popl
jle
pop
bound
outsb
arpl
je
xor
pop
pusha
in
shrb
insl
aaa
test
jne
push
pop
push
fisubrl
xchg
fcmovne
fildl
mov
push
daa
or
and
nop
push
or
adc
and
orb
xchg
adc
loopne
adc
ficompl
orb
neg
popf
add
add
jg
add
or
pop
pop
push
or
or
or
or
or
adc
outsl
push
outsl
adc
push
adc
push
add
pop
sbb
adc
adc
adc
add
data16
or
aas
mov
inc
add
ss
int
jo
add
and
add
sahf
add
les
fiadds
add
add
xchg
fnsave
mov
dec
rcrl
jb
imul
add
call
ljmp
adc
pop
and
xor
inc
mov
adc
xor
addb
and
js
inc
add
fbstp
dec
push
inc
add
push
dec
shlb
test
push
adc
or
inc
and
add
cmp
dec
inc
or
pop
push
and
out
add
into
add
adc
incl
inc
adc
push
adc
pop
popa
jno
and
adc
xchg
mov
lock
mov
and
roll
test
sub
scas
fiaddl
or
js
inc
adc
lret
rcr
push
ret
cli
or
xchg
jae
sub
std
cmpsb
xor
aas
imul
fdivrl
add
pop
hlt
incl
mov
mov
loopne
mov
fsts
dec
add
loope
mov
cmp
ja
out
cmp
xor
and
pushl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
leave
push
add
xchg
sti
pop
inc
std
or
lcall
adc
sbb
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
outsb
cli
pushl
lahf
mov
movsl
jecxz
pop
mov
lcall
clc
cmpl
jg
or
insb
sub
push
addr16
out
or
push
push
xchg
add
repnz
inc
lock
scas
jle
pushl
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
fs
push
cmpsb
add
mov
popl
movb
xchg
sbb
call
adc
mov
xor
lods
scas
xchg
test
aam
and
sbb
sar
mov
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
ss
in
fcomi
ret
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
decl
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
push
out
testb
push
sahf
pop
clc
sti
jg
jno
lock
jg
sti
fildl
xchg
std
sarl
xor
hlt
and
xchg
jmp
sbb
test
ds
mov
jg
out
pop
jb
mov
mov
mov
sub
pop
mov
jl
shll
jp
push
gs
jg
hlt
in
in
outsl
call
paddsb
pop
stc
loope
mov
sar
andl
aas
icebp
testb
decl
imul
scas
fadds
in
sub
jbe
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
incl
inc
mov
dec
adc
push
lock
lods
jp
testb
sbb
in
dec
fcomps
sbb
sbbl
into
andl
aas
loopne
cli
adc
sti
decb
xchg
in
add
inc
adc
loope
fisttpll
inc
aaa
dec
outsl
out
aas
std
cli
push
push
push
idivl
cmp
pushl
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
call
les
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
pop
add
push
scas
cmpsb
orb
mov
sti
notb
cmp
js
jmp
xchg
pop
clc
pop
hlt
sub
in
stos
imul
add
lea
jg
gs
lcall
xor
imul
outsl
adc
ret
das
pop
pop
pop
sar
incl
cld
mov
insl
pusha
fucom
out
sarb
sbbl
jno
or
sarb
call
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
and
ljmp
sbb
scas
sbb
push
scas
loop
jge
push
shrl
mov
push
mov
adc
ljmp
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
lcall
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
cld
call
mov
outsl
inc
shrb
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
push
movsl
add
ret
fcmovu
ds
cmpsl
scas
popa
in
pushl
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
call
mov
adc
adc
push
jo
pusha
imul
add
mov
das
adc
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
insb
push
out
jae
shrb
shlb
lcall
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
cli
adc
and
lahf
aas
lahf
fnstenv
lret
mov
pop
pop
cld
aas
clc
mov
sub
mov
dec
incb
fisubrl
aas
mov
testb
mov
or
cld
inc
or
pop
jg
add
fildll
mov
jg
mov
aad
test
mov
mov
adc
or
iret
push
jbe
push
sbb
stos
decl
push
std
icebp
pop
incb
jno
adc
push
inc
jecxz
sbb
shl
mov
sbb
mov
lods
loopne
sar
sbbl
rorl
and
cmp
pop
jg
push
push
in
aas
mov
fsubrl
fisubl
cmp
lock
and
add
push
clc
xchg
pushf
mov
das
clc
jmp
repnz
and
mov
adc
inc
aas
push
ret
mov
pop
pop
inc
jb
fistpl
adc
call
mov
pop
nop
mov
inc
sti
arpl
daa
std
loope
jmp
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
insb
icebp
decl
fsubr
fistps
lds
fidivrl
jg
stos
cld
lcall
pop
add
dec
mov
sub
jge
xor
lahf
les
paddsw
jl
xor
inc
and
mov
icebp
call
in
stc
mov
lahf
outsl
int3
push
sbb
in
decl
pop
test
bound
pop
outsl
xchg
incl
cld
cmovbe
popa
push
test
jbe
outsb
hlt
sti
fdivr
ljmp
daa
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
inc
cmp
shl
cld
mov
adc
stos
inc
mov
loopne
shrb
rcl
jg
adc
xor
pop
rcrb
dec
mov
gs
pushf
lea
jp
jnp
jecxz
adc
incl
inc
lds
push
pop
adc
imul
or
inc
pop
xor
rorb
mov
lcall
and
add
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
loope
mov
into
test
xchg
movsb
insb
or
and
xchg
fidivrs
push
jnp
add
insb
test
aas
repz
outsl
lock
in
jmp
stc
out
mov
clc
push
std
mov
jl
icebp
or
or
mov
pmullw
dec
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
shrb
fisttpl
out
pop
or
or
dec
ss
shrb
pslld
pushf
imul
cli
daa
pop
and
imul
or
or
pop
in
cmp
int
pop
mov
fidivs
clc
adc
jmp
hlt
dec
mov
dec
mov
sbb
xlat
inc
call
loopne
aas
mov
jg
mov
sub
addr16
sbb
test
outsb
cld
daa
jp
std
adc
cltd
or
mov
ret
adc
stos
pop
nop
cmp
das
incb
lock
pop
pop
div
cld
idivl
adc
sbb
stc
lahf
loope
pusha
push
jmp
dec
shll
fbstp
out
xchg
add
lock
mov
out
icebp
mov
loope
mov
cmpsl
popf
and
cld
and
mov
fbstp
test
das
mov
inc
sub
cmp
mov
popf
js
data16
decb
adc
sbb
scas
mov
and
call
pop
inc
cltd
add
push
sbb
mov
inc
add
pop
out
or
aaa
std
lock
cltd
dec
dec
inc
sbb
xchg
jmp
mov
aas
icebp
ret
ror
sbb
inc
adc
mov
mov
sub
mov
pop
clc
loope
dec
scas
xorb
mov
lahf
jp
dec
stos
or
cmp
jmp
mov
xchg
fbstp
xchg
fldenv
iret
fdivrl
xchg
mov
mov
push
cmp
repz
shlb
jo
push
cld
imull
out
jg
jno
ret
cwtl
scas
xchg
xchg
arpl
aas
mov
inc
sbb
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
pushl
mov
jne
in
sbb
xchg
imul
jmp
outsl
test
ljmp
into
daa
jmp
faddl
mov
add
jae
jg
push
pop
pop
add
pop
bound
std
stc
push
dec
out
fstpt
mov
enter
or
ljmp
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
or
and
xchg
xchg
mov
fildll
fsubrl
dec
add
inc
inc
inc
or
add
push
sti
pop
inc
dec
push
jbe
int3
les
bsf
aas
pop
mov
add
imul
pushl
jae
mov
enter
data16
je
outsb
ret
jno
mov
test
ja
imulb
nop
jp
loop
dec
fwait
daa
cld
sub
cmp
add
outsb
jmp
sub
addl
pushl
loop
inc
jl
mov
mov
movsl
mov
pop
xor
mov
testb
pop
pop
xchg
cmp
xor
or
mov
or
inc
and
push
ds
cmp
lcall
dec
insb
jmp
imul
xor
lods
push
int
xorl
ret
lds
push
mov
mov
inc
lahf
xlat
pop
pop
mov
fimull
jl
mov
call
leave
hlt
outsb
roll
add
mov
nop
xchg
movsl
adc
lret
lods
pushl
scas
adcl
push
push
jbe
fisubs
or
popf
fmulp
jle
sbbl
dec
jmp
andb
in
jns
or
cmpsl
or
fistpll
pop
pop
cs
mov
xchg
jg
push
dec
into
lcall
xchg
pmuludq
ret
lret
cli
ja
inc
jnp
aad
hlt
dec
aad
cld
call
scas
or
out
inc
outsl
int3
imul
mov
dec
add
arpl
shll
das
mov
xor
inc
pop
jbe
das
in
stc
test
xchg
dec
mov
incl
lea
movsb
scas
ror
mov
jne
mov
inc
or
inc
pop
fwait
sbb
mov
call
cs
in
xor
mov
push
mov
add
mov
rolb
call
jns
cmpsb
or
jo
lock
loopne
mulb
cmp
pop
sti
pusha
jnp
adc
jnp
pop
sub
ds
fmuls
and
lock
mov
cs
ljmp
out
popa
cld
mov
dec
movsb
mov
sarb
iret
ds
sbbb
into
jns
add
gs
stos
call
ds
mov
sarb
bound
sbb
ljmp
jecxz
dec
sbb
icebp
cs
push
out
std
stos
aam
outsl
or
push
jp
scas
stos
jnp
aaa
test
fs
lcall
sub
cwtl
fwait
pusha
fcmovnb
stos
pop
push
sub
jecxz
addr16
incl
stos
sbb
in
mov
scas
popl
insl
push
add
aad
add
jmp
sahf
lea
dec
jbe
adcb
pop
andb
mov
push
adc
decl
lahf
outsb
and
std
jecxz
daa
call
mov
push
ret
sub
sbb
and
inc
xchg
dec
mov
dec
cli
mov
cmp
cmp
hlt
aas
cmc
jmp
adc
sbb
push
dec
scas
aas
jg
inc
cmp
inc
int3
sbb
add
lock
dec
out
xor
pop
push
mov
pop
mov
and
test
cld
pushf
decl
xor
loopne
sub
cmpsb
adc
aam
mov
and
jmp
ljmp
sar
sub
repz
rcll
xchg
call
sar
jmp
nop
insl
add
popf
insb
cmp
stc
ret
xor
push
push
out
pop
or
sbb
jg
incl
mov
out
add
shrb
test
loopne
out
incl
adc
mov
add
push
rcr
or
repnz
pushl
sub
mov
dec
stos
dec
mov
orb
es
fcmovu
test
out
movsl
fs
pushl
test
sti
and
mov
fs
dec
pop
repz
fsubrs
fsts
jle
cmp
sbbl
cmp
pop
sti
insl
push
nop
push
addr16
test
jmp
pop
jle
aam
cmpsb
daa
dec
and
or
cli
sub
and
outsl
sbb
cmc
lahf
sbb
jmp
jb
pop
test
xor
fnstcw
mov
pushf
movsl
insb
icebp
sub
and
push
sub
xchg
push
sti
incl
or
inc
push
test
jg
ds
dec
lcall
cltd
jno
mov
mov
aad
mov
jb
hlt
mov
movsb
movsb
ret
mov
xor
sahf
lods
insb
ljmp
ljmp
orb
xchg
icebp
xlat
fsubr
dec
ljmp
jns
mov
call
les
pusha
mov
fcmove
pusha
jne
imul
sbb
loope
sbb
cmpsl
je
or
mov
les
daa
adc
inc
xchg
mov
jp
lret
xor
loop
fsts
arpl
mov
jg
ljmp
jge
xchg
jbe
ljmp
insl
repz
insl
inc
add
jne
dec
incl
fstps
adc
sub
mov
js
orb
mov
sub
sbb
cmp
lahf
push
loop
enter
testl
cmc
dec
pop
push
inc
stos
imul
movsb
outsl
cwtl
xor
push
cmp
mov
jmp
fcomip
xor
cltd
inc
pop
jge
aad
cmp
push
xchg
xor
mov
mov
out
icebp
jmp
std
adc
push
rclb
leave
aad
dec
pop
cmp
int
xchg
add
lea
icebp
decl
push
jnp
sub
pop
mov
or
clc
cltd
sub
inc
icebp
js
or
cmp
popa
dec
cmp
add
inc
pop
sub
ja
les
insb
cwtl
and
xlat
daa
jl
jg
scas
or
jno
mov
xchg
aad
dec
aas
push
or
jmp
faddl
pop
cmp
subl
incl
push
popa
lods
jnp
cmpsl
addb
jb
xchg
inc
call
sbb
aas
inc
call
jns
testb
imul
nop
sub
lcall
andb
out
add
pushl
loopne
lret
adc
fimuls
xchg
jl
add
sub
add
scas
cmpsl
das
cmp
push
sub
fbld
cmp
xchg
insl
mov
outsb
or
imul
mov
push
push
cmpb
or
cmpsl
xchg
cmp
jg
popa
test
sbb
jl
adc
incl
or
pop
sub
sbb
mov
push
add
add
ljmp
lock
aad
in
xchg
inc
push
je
insl
xlat
inc
mov
mov
int
dec
aam
aam
dec
and
mov
add
pop
outsl
fs
push
xor
and
add
js
call
or
sub
cmp
pop
in
ficoml
shll
push
cli
mov
decl
add
adc
pop
sub
mov
cwtl
fs
jmp
je
fwait
or
sti
xor
mov
cmp
loopne
fmull
ljmp
xor
sbb
push
adc
das
aas
cwtl
ret
and
sub
or
rcl
stos
lea
ffreep
pop
shll
jp
adc
out
lahf
aad
jecxz
repnz
lods
sarl
or
dec
and
xor
enter
gs
jg
jbe
mov
sarl
add
pop
jbe
int
xchg
inc
inc
xor
roll
cld
fisubl
or
inc
ja
or
dec
mov
inc
loopne
xchg
fbld
sub
scas
mov
loopne
aas
rcrb
std
and
movsl
xlat
int
fimuls
adc
filds
sub
jbe
incb
mul
out
fisubl
adc
incl
aad
pushl
dec
in
lds
cmp
xchg
or
jmp
ljmp
and
test
push
std
cmp
adc
fidivrl
sbb
pop
xchg
test
clc
xchg
repz
add
and
mov
add
lcall
push
stc
imul
push
inc
aaa
and
pop
xchg
dec
aas
iret
add
push
nop
push
decl
sbbb
xchg
test
jecxz
jno
adc
inc
fdivs
fdivl
jnp
mov
mov
xchg
mov
fs
cli
lods
stos
test
and
xchg
inc
leave
mov
call
in
cmp
test
pushl
jp
or
aas
mov
call
or
into
lods
cli
push
das
cli
or
in
sbbb
jbe
pusha
xor
push
cmpsb
mov
push
mov
out
cli
out
call
pop
mov
push
jne
inc
dec
inc
add
sub
incl
push
imul
xor
fbstp
push
out
and
pop
inc
test
pop
cltd
cmpsb
sub
out
xchg
iret
rol
in
aas
pop
xchg
push
imul
inc
sbb
dec
sahf
fwait
mov
pop
cmp
cmpsb
inc
addb
cmp
jg
push
popa
add
xchg
sub
outsb
stc
xorl
jg
push
jle
iret
and
and
lretw
nop
push
xlat
mov
sbb
incl
xchg
xlat
aam
loopne
sti
fistpl
dec
inc
icebp
push
in
dec
inc
push
sub
fwait
decl
cmpsl
xchg
and
dec
ja
xor
and
es
fisttps
push
jp
jmp
or
iret
pop
scas
mov
add
fsubrl
jno
jae
in
mov
cmp
in
loope
push
negl
mov
in
push
sub
addr16
adc
arpl
add
and
punpcklbw
aaa
xchg
sbb
scas
incl
cld
lahf
imul
cmp
pop
fcoml
in
in
push
xchg
add
es
mov
popf
pop
lahf
popf
sti
cmpsl
dec
icebp
push
push
jle,pt
mov
mov
ljmp
mov
pop
out
jne
addb
jns
lret
stos
jmp
dec
mov
dec
lods
pop
xchg
dec
std
loope
aas
or
fists
andnps
test
push
add
xor
push
jae
pop
dec
decl
rol
lret
adc
scas
push
adcl
enter
gs
mov
xor
outsl
aad
adc
mov
xchg
pushl
inc
jmp
ljmp
aas
push
hlt
test
loop
cli
mov
cmp
add
jg
pusha
test
sub
sbb
imul
lret
loop
aas
sub
ret
and
pop
decl
popa
push
pop
imul
mov
leave
fmulp
ficomps
mov
popf
cld
arpl
xor
mov
and
leave
out
jo
nop
cld
adc
pop
cmp
mov
fisubs
cmp
sbb
mov
push
enter
xchg
sbb
fiadds
push
aam
push
mov
rclb
imul
sub
enter
out
incl
pop
or
mov
aam
fs
rcrb
jmp
iret
and
leave
movsl
int
push
push
push
in
cltd
adc
aaa
xchg
or
lcall
sarl
cmp
testb
sbb
dec
fildll
fcmovbe
call
fdivr
adc
xorb
in
fcompl
imul
jle
xor
adc
cs
add
decl
stc
imul
xchg
mov
test
fildll
decl
mov
gs
outsl
add
icebp
mov
cld
jbe
push
cmp
dec
icebp
out
in
incl
mov
cmp
cmc
je
outsb
xchg
jno
mov
shlb
sbb
call
xchg
cmp
cmpsl
std
test
jb
and
subb
insb
fs
mov
fcmove
mov
sub
ret
cmp
in
mov
mov
jecxz
lret
nop
shrb
fcomip
rclb
sahf
mov
jmp
jmp
frstor
jge
das
neg
sub
clc
lods
and
sahf
inc
push
out
sbb
icebp
call
inc
hlt
mov
cltd
xchg
and
xlat
mov
decl
hlt
sub
test
add
movsl
push
nop
mov
mov
mov
fdiv
cmp
fadds
sarl
adc
rep
test
loop
dec
jmp
mov
and
fcmovne
sahf
push
add
pop
inc
jecxz
jg
pop
mov
mov
mov
cmp
orb
ret
jae
inc
cmpsl
pop
sub
idiv
pushl
push
sub
adc
mov
mov
out
xor
ljmp
lcall
dec
inc
pop
je
xor
push
and
fisttps
hlt
mov
xor
jnp
call
outsl
out
adc
gs
push
pop
in
push
das
enter
out
hlt
mov
mov
xlat
movsl
lds
fidivs
fldl
mov
xor
xchg
test
xor
fcomip
call
xchg
rcl
dec
pop
je
arpl
sub
orl
sarb
lcall
lahf
jo
push
fistl
and
lea
inc
cmp
jmp
test
jmp
cli
sub
xchg
sub
idivb
cmpsb
adc
xor
clc
int
mov
mov
pop
repnz
gs
mov
call
xchg
out
push
loop
int
cmpl
cmp
mov
aad
and
xor
mov
and
sbb
push
push
or
mov
push
push
cmp
gs
add
mov
loopne
stos
mov
fisttpll
test
jecxz
or
jp
xor
jp
sti
xor
jae
sahf
sbb
mov
pavgb
dec
loopne
pop
movsb
sub
call
fs
adc
sbb
cltd
adc
orl
jo
sbb
lcall
lock
xchg
les
std
xchg
cmp
pushf
sahf
push
in
jge
mov
jmp
in
inc
fwait
adc
mov
lret
xor
into
xchg
cmp
loope
cmp
and
scas
lcall
hlt
jb
dec
ret
or
and
jae
test
fwait
inc
jecxz
and
scas
mov
mov
js
daa
mov
jb
cs
cli
xchg
andl
call
xchg
mov
icebp
lods
movsl
pop
lretw
pop
outsl
push
out
repz
repz
dec
push
dec
mov
push
mov
jl
movsb
andb
jle
adcb
or
xor
daa
rcll
je
insl
jp
shr
out
push
orb
pop
adc
mov
fs
jb
jge
out
mov
pop
cs
scas
cs
ljmp
add
mov
xor
adc
xchg
rcll
popf
mov
add
cli
mov
test
push
dec
sub
inc
inc
int
xchg
mov
movsl
aaa
lods
decl
insl
loope
decb
test
mov
pushl
cwtl
xchg
es
cmpsb
cmp
loope
mov
daa
in
mov
cmp
popa
lcall
mov
and
test
xlat
inc
sub
daa
xor
and
sarb
jge
hlt
push
decl
xor
xchg
pop
xorb
icebp
mov
cmp
incl
mov
mov
push
sub
mov
xor
mov
cmp
repnz
sub
ljmp
ds
inc
adcb
andl
enter
nop
push
add
or
hlt
lcall
inc
in
inc
scas
push
inc
add
xor
add
jle
stc
jmp
cmp
popf
cmp
push
dec
xchg
jno
sarl
in
push
xor
mov
cmc
int3
sar
mov
cli
lcall
mov
sub
fildl
data16
xor
pop
inc
mov
pop
pop
test
data16
xlat
pop
icebp
call
insl
in
jp
aam
das
xchg
invd
hlt
jnp
sarb
pop
dec
cmp
test
cmp
push
insb
aas
out
in
add
imul
dec
xlat
sub
inc
je
mov
es
leave
lcall
push
loopne
sbb
cmp
mov
outsb
sbb
loope
das
xchg
outsb
test
cwtl
mov
sbb
in
incl
in
push
std
ret
mov
out
filds
aaa
lea
out
lock
decl
mov
inc
sbb
iret
xor
popa
cmp
push
jb
or
shl
sub
aam
jmp
pop
jbe
push
shrb
test
jle
pop
jno
aam
fcomps
mov
sbb
jmp
scas
test
rolb
data16
jge
adc
clc
cmp
addl
mov
adc
call
mov
leave
dec
or
jmp
cmp
add
sbbb
push
int
cmp
jmp
iret
mov
aam
inc
popa
out
pusha
adc
movsl
fdiv
mov
in
push
imul
lcall
jmp
pop
push
inc
lcall
xchg
sbb
data16
lock
jmp
pop
inc
lea
pop
and
push
jnp
jnp
jp
sub
xchg
mov
std
ja
cmp
mov
add
cmovb
xor
test
xor
test
inc
fs
sar
mov
inc
inc
lock
inc
sbb
mov
jbe
fwait
movsb
shll
filds
xchg
xor
cmp
mov
test
pop
dec
or
or
ljmp
push
lahf
icebp
stos
pop
inc
out
test
lahf
sti
jmp
bound
xchg
aas
ror
roll
pop
cmp
cmpsb
mov
jg
inc
pop
std
jg
pop
push
push
mov
add
jae
xchg
iret
mov
sbb
call
cltd
stos
sbb
divb
out
mov
movsb
outsb
sbb
sbbb
lcall
arpl
jp
push
jmp
test
inc
subl
out
clc
call
jb
mov
fnstenv
inc
sub
iret
adc
ret
inc
cs
sar
jmp
jmp
scas
dec
jmp
jecxz
jle
pop
xlat
inc
test
jge
xor
cld
jg
es
or
mov
cltd
push
and
rcrl
out
inc
inc
xchg
lcall
mov
cmpl
push
fidivrs
aas
push
ljmp
jnp
dec
add
xchg
inc
testl
jl
movsl
mov
aam
fiaddl
pop
sbb
icebp
add
push
pop
fdivrl
cltd
sbb
ljmp
mov
loop
addr16
push
filds
sub
or
jb
pushw
pop
add
push
out
std
mov
rcl
jns
push
sub
loopne
xchg
fdivr
jns
lcall
scas
call
xor
dec
dec
sub
cmpsl
aaa
cs
dec
xadd
adc
enter
cld
ljmp
sbb
pop
mov
test
das
cmp
bound
roll
lret
inc
call
xor
je
jo
sbb
jbe
rorb
push
cltd
mov
shr
out
jg
mov
and
loop
xor
stc
roll
lcall
xlat
pushw
fstpt
xchg
sti
imull
stos
arpl
pop
xchg
dec
popa
mov
enter
lcall
call
push
enter
jp
jp
sbb
movsl
jae
inc
sub
inc
fs
js
outsb
push
and
adc
fldcw
sbb
lods
push
xchg
xchg
imul
test
mov
mov
inc
or
ljmp
xor
dec
and
je,pt
rclb
imul
xor
int
movsb
xchg
mov
ljmp
adc
push
enter
sub
sub
add
lea
sub
mov
push
lcall
xchg
jmp
lahf
mov
ljmp
or
gs
push
and
jae
pop
movsl
inc
sub
add
lea
decl
xchg
pop
push
add
mov
or
and
cld
ret
out
movsb
push
insl
lret
push
cmp
test
jmp
push
cmc
xor
insb
or
in
test
dec
arpl
fwait
mov
out
xchg
pop
or
dec
or
and
in
mov
xchg
decl
shl
testl
push
jne
sub
xor
pop
stos
outsl
pop
inc
call
call
add
push
push
mov
call
loop
out
lods
fists
scas
cli
mov
sub
notb
xor
pop
xchg
test
cmc
or
or
cmc
call
dec
pop
imul
adc
pop
xor
mov
mov
insl
fwait
les
and
das
pop
lods
and
jecxz
mov
bound
cli
mov
stos
incl
mov
iret
and
xchg
sarb
in
bound
loope,pn
adc
pusha
push
jg
dec
cld
dec
mov
adc
into
jns
call
inc
sub
repz
and
lcall
imull
or
add
out
dec
call
test
in
fmuls
or
sbb
dec
aas
jne
fsubl
jno
ljmp
outsl
xchg
movsb
lcall
stc
sbb
loopne
and
cmp
int3
notl
sbb
jmp
dec
fidivrs
es
es
jp
xchg
inc
adc
sub
lock
aad
xchg
lar
and
cmp
repnz
sub
popa
xor
incl
mov
call
adc
scas
popf
push
xlat
lahf
test
sub
cmp
repz
pushf
and
cmpsb
or
and
jle
shlb
mov
inc
xchg
jno
xchg
out
cli
xor
enter
cwtl
mov
pop
jg
mov
mov
decl
lock
xchg
jbe
test
push
sub
sbb
sub
in
push
pop
lcall
lcall
inc
hlt
rclb
sahf
scas
mov
inc
jo
lcall
pop
fcompl
insb
lahf
inc
dec
aam
xor
cld
daa
pop
add
js
adcl
pop
popf
stos
mov
arpl
mov
aas
mov
mov
shlb
sbb
mov
mov
fists
jmp
and
pop
fists
pop
aaa
dec
mov
gs
mov
cs
or
mov
jmp
mov
hlt
jmp
loope
addr16
lret
movsl
pop
xor
vpandn
inc
popa
fs
int
repnz
inc
lahf
push
xor
dec
cmp
notb
pop
shlb
outsb
jge
push
inc
or
cld
jmp
fwait
insb
or
inc
imul
loope
loopne
push
outsb
fdivl
incl
push
in
pop
pop
jecxz
loope
es
mov
jns
iret
pop
insb
pop
add
cwtl
stc
mulb
out
jno
ljmp
rorb
into
xchg
adc
in
and
dec
jb
decl
jbe
pop
or
aas
cmp
out
gs
add
out
pushf
jg
iret
sbb
movsb
std
fwait
or
and
daa
or
push
jno
fcmove
outsb
inc
nop
jg
fldenv
mov
mov
aaa
xchg
pop
jle
in
xchg
and
xchg
mov
ljmp
mov
outsl
addr16
sub
lock
call
in
fstpl
pop
mov
lcall
cmp
jge
scas
xor
sbb
jnp
scas
hlt
xchg
cwtl
pop
out
push
mov
testl
mov
sub
add
negb
cmp
and
ljmp
push
aas
imul
clc
test
inc
mov
insl
mov
cmp
cltd
arpl
mov
push
xchg
pushl
mov
dec
cmp
xchg
push
leave
dec
jmp
fwait
push
dec
lods
inc
loopne
mov
jp
jbe
stos
data16
aad
xchg
jecxz
in
scas
lret
loope
outsl
dec
add
faddl
and
push
push
mov
pusha
scas
or
ret
test
jg
iret
jae
nop
call
std
xchg
fldcw
rcl
bound
rcrb
xor
dec
mov
xor
lcall
xlat
pusha
gs
add
lods
add
push
loop
pop
test
dec
jmp
sub
mov
sub
pushl
into
adc
push
or
data16
pop
dec
xor
fsubrs
pop
jecxz
das
cmpl
call
cmp
loop
dec
mov
je
pop
adcl
pop
cwtl
call
stos
or
pop
adc
pop
pusha
sub
lds
pushf
popa
lds
mov
iret
adc
jmp
scas
movsl
outsl
xor
lahf
clc
dec
pop
jne
cmp
stc
xchg
xlat
das
mov
es
sub
pushf
lcall
mov
aam
and
add
cmc
in
pop
loope
xor
lcall
int
rorl
lock
pushl
and
sub
jge
rep
cmpsl
dec
sbb
pop
mov
fnsave
push
dec
push
mov
out
mov
adc
lcall
jnp
icebp
pand
cwtl
xchg
je
xchg
sbbl
and
sbb
sbb
mov
fimuls
std
dec
fucom
out
xor
imul
adc
arpl
jmp
sbb
cltd
pop
xchg
xor
fstpt
popf
ret
and
xchg
out
pop
or
ljmp
insb
xchg
push
lds
fwait
adc
dec
mov
or
lahf
in
outsl
adc
outsl
sub
les
dec
nop
pop
mov
mov
cmc
push
jl
mov
das
xor
es
ljmp
adc
push
stc
xchg
jle
loopne
mov
mov
push
jle
add
filds
mov
mov
call
cmc
push
add
sub
repz
jo
push
popa
fldcw
addr16
pop
add
inc
push
int3
xchg
cmp
incl
xchg
and
mov
daa
ror
pushf
push
in
js
sahf
sub
and
ret
test
imul
out
scas
and
dec
adc
sub
ljmp
adc
addr16
out
push
gs
hlt
in
and
or
cmc
pop
jno
push
add
sub
call
in
lock
or
insb
cmpsl
sbb
jb
jp
movsl
rorb
sbbl
sub
imull
out
sarb
out
cmp
adc
mov
psllq
jno
mov
std
je
adc
jmp
jle
mov
lea
dec
aaa
jge
or
int
lods
dec
cwtl
cltd
cmpb
call
sahf
in
ja
pop
in
out
std
repz
lods
daa
or
mov
mov
shrl
pop
mov
decl
cmp
test
dec
rcrl
jnp
rcr
mov
icebp
dec
aas
cmp
ljmp
jle
loope
push
cs
cs
jl
mov
inc
jmp
push
xor
push
pop
dec
sarl
imul
dec
jb
mov
icebp
add
jg
ret
xchg
fisubs
mov
and
rcl
mov
inc
pusha
aam
and
add
dec
adc
pop
outsl
adc
stos
loope
mov
push
lds
jg
mov
hlt
pop
fsubr
jno
in
lret
push
dec
xor
and
insl
xchg
or
std
lcall
sbb
outsl
in
pop
out
cmp
sub
dec
das
out
data16
call
jmp
inc
cmc
cwtl
mov
xchg
hlt
mov
cli
push
xor
loope
dec
ds
xor
adc
sub
jbe
rol
inc
pushf
dec
arpl
incl
pop
popa
cmp
sbb
ds
and
or
lods
xor
mov
into
adc
mov
cltd
sbbl
call
aas
pusha
jmp
jbe
ljmp
add
mov
xor
and
dec
pop
xor
fnstsw
cmp
in
subl
ret
es
mov
xchg
xor
jmp
lods
aaa
scas
sbb
clc
cs
movsb
daa
push
movsb
xchg
pop
cmp
or
mov
mov
xchg
adc
and
push
pop
idiv
decl
xlat
loop
mov
push
das
fcomip
pop
pop
daa
sub
jbe
enter
mov
adcb
orl
aam
xchg
ds
pop
jns
and
pushl
lods
lret
sbb
pop
mov
test
jmp
mov
ficoml
mov
loop
test
cmp
jmp
decl
add
ljmp
ret
push
mov
scas
inc
mov
hlt
cmpsb
in
xor
in
outsl
cli
cli
inc
sldt
decl
into
mov
mov
xchg
incl
dec
cld
shr
ret
incl
push
jo
sub
sarb
lods
in
jmp
rorb
or
hlt
je
gs
push
popf
popf
jno
clc
dec
ljmp
jl
add
adc
leave
pop
or
pop
leave
or
or
adc
dec
cmp
inc
fwait
lret
fs
std
ljmp
fidivrl
xchg
and
xchg
nop
ss
lcall
xchg
pop
cmp
in
pop
pop
scas
mov
mov
out
ljmp
pushl
mov
pop
sbb
and
gs
mov
pop
xor
nop
orb
test
icebp
aas
push
and
sbb
sbb
and
add
pop
sub
test
sub
lahf
insl
dec
sahf
shll
xlat
sbb
lea
daa
xor
jne
insl
pop
jnp
scas
imul
add
push
mov
call
mov
mov
push
hlt
shlb
mov
arpl
insl
les
insl
fildll
mov
or
test
or
ret
repz
in
pop
and
test
jb
jl
pop
cltd
leave
dec
lods
lcall
push
sbb
in
out
mov
add
and
aas
test
adc
sar
cmp
jo
mov
inc
lods
jne
cbtw
push
adc
xlat
frstor
test
xor
pop
cmp
stos
ljmp
xor
sar
jg
mov
and
adc
mov
and
out
push
add
push
cmp
sub
mov
fs
insb
mov
and
test
mov
bound
push
add
inc
decl
pop
repnz
in
add
stos
sbb
push
mov
cs
mov
cmp
push
xchg
lods
mov
adc
xchg
add
sahf
punpcklwd
aaa
aad
lcall
cwtl
leave
outsl
mov
fdivr
movsl
push
call
mov
inc
cmp
ror
int3
nop
das
sbb
push
aaa
incl
push
sbb
xchg
lds
arpl
sub
call
pop
ja
rcl
mov
mov
je
js
push
mov
js
and
rol
add
cmp
std
outsb
mov
aas
pop
mov
cmpsb
xor
in
and
stos
jbe
mov
cmp
call
or
outsl
sbb
test
rorb
call
clc
mov
call
fbstp
adc
enter
movsb
inc
arpl
jge
jle
lods
xor
bound
call
mov
sub
cmp
dec
adc
sub
push
ja
rcrb
dec
pop
mov
mov
les
orb
pop
or
dec
mov
decl
adc
aam
les
xor
aas
cmpsb
loope
pop
hlt
or
pushl
xchg
pushl
add
adc
mov
jb
ds
les
inc
adc
lret
or
push
lds
push
cmp
push
xchg
jno
and
xchg
pushl
push
sub
ret
movsl
pop
cmp
fs
loopne
jp
lods
lcall
mov
sti
insl
mov
nop
testl
cmc
push
push
or
aad
adc
mov
test
outsb
stc
decl
xor
mov
pop
fdivrl
xor
pop
mov
iret
add
scas
jg
sub
cmp
lcall
in
lret
clc
xor
or
call
hlt
dec
adc
pop
sbb
push
cmp
ret
call
push
int
adc
jp
std
pop
les
xlat
jo
fimull
xchg
push
sbb
sahf
aam
aaa
repnz
cs
enter
mov
or
ret
mov
cmpsl
clc
ja
and
call
pop
jge
or
mov
mov
sbb
cmc
cmpsb
daa
xor
ja
push
nop
cmc
cmp
insb
mov
insb
cld
ret
icebp
ja
aaa
loope
mov
call
add
push
mov
or
or
or
inc
popa
xorb
out
mov
pushl
pusha
cmpsb
jne
ja
dec
push
and
or
sbb
add
ljmp
jecxz
test
push
xor
pop
xchg
jl
sub
xchg
insb
sbb
movsb
imul
sub
es
xchg
mov
mov
xchg
sub
sub
xor
jmp
loope
cs
mov
decl
ljmp
inc
scas
je
xor
jg
scas
test
popf
pop
add
mov
mov
aad
sbb
xchg
sbb
and
add
adc
mov
jg
scas
jle
pusha
ja
mov
mov
mov
gs
mov
imul
incl
mov
cmp
pop
shl
cmc
sbb
cli
insl
mov
xor
call
or
and
loope
and
iret
lret
js
test
pushl
out
shll
mov
ja
out
xor
mov
aad
add
je
ja
lcall
xchg
orl
daa
mov
xor
jp
adc
test
sbb
push
fs
incl
push
les
pop
push
dec
inc
sub
mov
inc
mov
sar
pop
and
or
incl
jbe
mov
fbstp
lcall
pop
clc
call
adc
inc
es
cmp
cld
imul
cs
push
jb
cmp
popa
mov
ret
lret
inc
and
or
dec
out
sbb
xchg
es
pushf
in
mov
stos
mov
xor
inc
lods
les
jge
mov
cmpsb
jp
pop
push
scas
mov
mov
inc
mov
in
nop
ja
mov
enter
push
cli
jmp
mov
pusha
jb
mov
decl
xor
xchg
mov
add
ficompl
cmp
dec
cltd
int3
mov
fimull
and
add
les
add
pusha
std
aam
ljmp
push
adc
cmp
ret
mov
pop
ljmp
in
xor
decl
ret
test
add
cs
lret
adc
push
and
hlt
lcall
push
rolb
or
mov
mov
in
mov
inc
leave
and
adc
inc
je
fsubs
mov
repz
pop
xor
aas
les
add
sub
das
dec
jmp
push
adc
xchg
aas
dec
push
test
std
push
pop
jge
test
push
inc
cmc
inc
mov
repnz
sbb
pop
cmpsb
mov
xchg
cltd
lret
imul
leave
sbb
cmpsb
mov
cmp
dec
cmp
push
jl
xor
mov
or
decl
popa
sbb
mov
scas
lcall
int3
lahf
mov
sbb
lods
incl
fadds
add
jp
test
xor
aaa
test
arpl
cmp
jae
push
jg
incl
mov
fwait
mov
pop
jne
mov
xchg
in
xchg
cmp
inc
aas
cmp
mov
jne
xchg
and
adc
mov
addr16
xorb
ljmp
enter
jmp
data16
bound
jns
jmp
push
outsb
push
fistpll
pop
loope
call
lods
lock
sub
pop
cmp
xor
cmp
add
in
pop
mov
jge
jecxz
ljmp
sub
and
icebp
mov
jo
int3
or
pop
cld
pop
sti
and
dec
ret
out
decl
mov
add
sti
jl
shr
scas
sbb
dec
and
jp
mov
stc
bound
xchg
dec
out
aaa
je
sbb
mov
mov
fwait
pushl
test
stos
xor
sbb
jmp
mov
int
dec
loop
xor
out
push
xchg
fcmovu
daa
inc
mov
lcall
sub
es
sbbb
and
mov
pushl
iret
and
and
or
cmp
fistpll
jns
dec
jg
ljmp
push
loopne
mov
adc
not
pop
mov
ljmp
lods
icebp
in
mov
lahf
fisubrl
movsb
stc
xor
popa
push
sbb
mov
dec
dec
cmp
and
mov
ja
incl
fwait
sarb
std
sahf
adc
js
push
sub
fcomip
dec
sbb
or
or
mov
add
testl
mov
repnz
test
pop
jl
mov
cmc
fdivrs
mov
int3
push
dec
xor
push
fiaddl
mov
jmp
push
repz
jno
aam
push
push
and
in
std
test
dec
decl
sub
jno
scas
pusha
outsb
jne
stos
dec
push
jge
mov
mov
xchg
jmp
lock
cmp
inc
pop
imul
test
adc
push
adc
push
addr16
call
mov
inc
es
lds
push
add
ja
lock
mov
push
mov
js
adcb
xchg
popa
push
xor
mov
test
decl
ljmp
inc
cld
inc
add
out
out
push
adc
push
cltd
sar
ljmp
repz
out
sti
out
push
mov
pop
test
cmpsb
add
flds
xlat
call
mov
mov
xor
into
push
out
cmp
incl
push
mov
sahf
lahf
jg
pop
adc
outsl
sbb
add
jge
fimuls
mov
lock
loop
pop
pop
or
cmc
dec
mov
jge
int
aam
imul
lods
xchg
cmp
adc
adc
in
cmp
pop
daa
shll
pop
pusha
mov
mov
mov
mov
inc
outsb
scas
and
xor
aaa
aaa
mov
clc
cmpsl
sub
adc
pop
ret
push
mov
jg
lods
je
mov
mov
fistpl
mov
pop
mov
push
sar
sub
jns
repnz
mov
lods
repz
test
ljmp
insb
ds
ds
mov
loopne
push
xchg
mov
jmp
jge
lds
call
pop
inc
push
or
out
push
xor
pop
cld
ljmp
scas
dec
pop
pop
add
mov
popf
adc
jno
movsl
lcall
call
pusha
rol
enter
rorb
cvtpi2ps
or
cmc
mov
adc
call
push
clc
push
mov
shlb
ljmp
mov
adc
jo
in
mov
mov
lret
lcall
ja
mov
pushl
ja
push
nop
cmp
testb
std
dec
sti
movsb
fsub
pop
mov
test
sti
mov
std
icebp
pop
repz
xchg
push
ja
std
lcall
push
call
pusha
mov
dec
and
xor
rcrl
jmp
subb
dec
xchg
pop
lcall
pop
cmp
out
mov
xor
jp
mov
pop
pop
xlat
add
fisttps
ss
shl
ljmp
pop
cmp
adc
cmp
mov
and
and
mov
cwtl
loop
xchg
sbb
jmp
sbb
mov
scas
mov
mov
fdivr
pushl
adc
mov
pushf
dec
mov
out
roll
sbb
lds
fneni(8087
mov
pushl
jge
ja
lods
fs
and
xor
fadd
adc
cmp
call
push
cmpsb
cs
push
xchg
add
jb
sub
mov
aas
fldt
xchg
jnp
ljmp
jg
movsl
push
xor
shl
jg
dec
and
cli
cld
pop
sbbl
sub
push
inc
test
sar
pop
aad
cmp
jno
icebp
loop
notb
std
cmc
hlt
jle
and
ljmp
testb
imul
xor
adc
addl
xchg
lahf
xchg
mov
mov
mov
mov
or
scas
mov
pop
ljmp
addr16
sahf
push
or
add
mov
push
push
arpl
xor
js
int
out
xor
pop
mov
or
rorb
aam
stos
insb
jnp
mov
decl
xor
call
sub
sbb
push
and
sbb
pop
out
mov
jecxz
sbb
in
stos
mov
pop
out
mov
sarb
add
test
jbe
mov
ds
fdivl
or
out
cmpb
mov
jno
jecxz
subb
pusha
shl
ss
loope
sub
cmp
hlt
jecxz
push
loop
icebp
ljmp
loopne
jg
or
add
jo
pop
and
add
sbb
pop
sahf
popa
dec
dec
push
mov
test
push
sbb
add
std
adc
jne
in
inc
into
pop
xor
fmull
loopne
mov
lea
lahf
sbb
or
mov
sete
sub
xchg
iret
dec
cmp
mov
and
call
xor
sahf
loopne
scas
pop
loopne
rorl
push
mov
insb
outsb
xchg
leave
sbb
ss
ljmp
cmpsb
mov
sbb
cmp
icebp
dec
push
add
inc
orb
lods
scas
clc
imulb
xor
and
icebp
outsl
ljmp
mov
mov
adc
mov
rcrl
rcl
and
loop
sar
decl
repz
jno
jb
out
xchg
mov
repz
test
jg
ljmp
out
aas
daa
fldcw
movsl
cmp
in
cmp
add
jge
mov
cli
dec
push
scas
daa
mov
das
inc
addl
enter
adc
arpl
rorl
lcall
fwait
sahf
mov
and
xor
xor
mov
or
pop
icebp
incl
add
pop
shll
in
hlt
icebp
cmpb
pushf
ffreep
push
or
incl
iret
inc
out
repnz
mov
jl
decl
shll
pop
js
repnz
ljmp
push
mov
shll
fisubrl
inc
ss
je
daa
out
adc
and
test
mov
add
adc
jne
and
incl
pop
addr16
xor
enter
and
lock
fdivs
stos
sub
jmp
jne
mov
xchg
push
push
pop
test
mov
iret
sub
or
inc
mov
pushf
mov
add
ljmp
in
loop
mov
out
cli
out
cmp
push
fstpl
cmp
or
mov
sbb
stos
popf
mov
fdivr
call
or
lock
mov
mov
adc
stos
imul
stc
add
ljmp
sbb
sub
lea
out
daa
sbb
fs
cmp
out
xchg
nop
sar
cmp
mov
xor
aad
lret
fisubrs
cmpsb
mov
mov
shlb
ljmp
call
outsb
push
xor
imul
push
scas
cmp
jmp
dec
jmp
xchg
or
scas
push
mov
xlat
jle
mov
sub
mov
xor
call
mov
ret
not
into
jbe
xchg
inc
xchg
push
xchg
jae
adc
sub
adc
push
dec
or
repnz
cltd
pop
call
mov
adc
adc
or
enter
ret
repnz
xchg
lcall
fprem
testb
fstps
pushf
in
popf
xchg
dec
cwtl
push
out
je
ljmp
xchg
pop
or
dec
xchg
clc
add
push
jnp
xchg
out
mov
aad
lcall
pop
mov
pop
int
mov
sub
ja
add
in
and
inc
pop
adc
jle
sub
ljmp
cmpsb
xchg
movsb
lcall
bswap
std
xchg
adc
nop
fsubs
lcall
pusha
adc
in
je
cld
inc
mov
pop
push
push
data16
sbb
jns
hlt
dec
stc
mov
cmp
mov
dec
decl
push
sbb
ss
out
fisttps
fucomi
mov
xor
and
jmp
popa
lods
insl
jl
into
daa
xchg
hlt
xchg
push
push
sbb
adc
scas
add
daa
loopne
shrl
mov
add
inc
xchg
stos
dec
dec
test
mov
push
mov
mov
cld
test
int
cmp
pop
outsl
ret
pop
ljmp
rol
enter
leave
and
dec
fsub
addb
iret
cli
mov
ljmp
add
clc
repz
jnp
std
in
mov
pop
sbb
icebp
pop
mov
call
push
icebp
fmuls
sbb
pop
aaa
pop
in
ljmp
aas
out
ss
sbb
xlat
sbb
mov
jo
jo
icebp
int
jmp
ljmp
in
sub
fsubrp
xchg
dec
stos
frstor
jns
mov
out
icebp
mov
js
mov
mov
add
or
fisubl
dec
loop
jmp
clc
stos
mov
ret
lods
subl
decl
mov
mov
pop
mov
andb
xor
or
call
push
in
arpl
inc
stc
hlt
fcmovnbe
mov
aaa
movsl
out
jo
sbb
int3
scas
inc
shl
inc
dec
rcrb
call
popl
jnp
pusha
jo
push
nopl
lods
mov
push
pop
in
test
int
mov
add
jae
loopne
aas
cmp
lds
mov
sbb
xor
call
sbb
imul
pop
mov
or
lea
mov
pop
jl
xor
cmpsl
jno
pop
dec
mov
dec
in
jno
xchg
andl
lcall
sbb
adc
pop
cltd
xor
cmp
push
loopne
sarl
call
ljmp
cmp
adc
cs
jmp
faddp
jns
or
xchg
mov
push
adc
add
jo
mov
decl
push
adc
or
ss
test
xchg
fwait
incl
lods
addl
or
in
decl
lock
data16
test
in
arpl
dec
add
leave
sbb
adc
jmp
imul
and
mov
inc
iret
cs
clc
test
inc
and
mov
decl
push
jbe
inc
xchg
jecxz
lds
push
insl
mov
add
iret
stos
inc
test
mov
mov
test
out
inc
and
mov
mov
decl
sub
int3
mov
cmpsl
mov
rolb
cmp
adc
fsubrs
xchg
cmp
mov
insl
jb
popf
mov
loop
cmp
leave
fbld
pop
xchg
xchg
xchg
adc
lcall
call
xor
lahf
nop
out
adc
adc
adc
test
insl
mov
mov
jg
ljmp
int
push
fxtract
xchg
pop
je
sbb
outsb
adc
jo
call
jg
daa
mov
int3
pop
dec
ljmp
fs
pop
ss
les
call
dec
cs
mov
and
xchg
cltd
sub
mov
insb
insb
fdivrp
xor
lock
sub
or
mov
dec
add
lods
inc
jmp
dec
cmp
inc
shl
sbb
icebp
or
inc
push
sub
aad
in
into
pop
jmp
cli
arpl
pushl
adc
sub
scas
sbb
aam
cmpb
cmpsb
pop
dec
jle
idivl
cmp
mov
adc
or
mov
shlb
lds
mov
std
decl
divl
fcmove
xor
jecxz
cmp
rcr
add
decl
pop
mov
repnz
xchg
les
push
adc
cmp
xlat
aaa
mov
xchg
sar
pop
mov
pop
sbb
enter
scas
mov
and
lcall
leave
sbb
loopne
popa
loopne
inc
pop
xor
std
xlat
xlat
sbb
fistpll
dec
dec
negb
mov
mov
jl
int
or
arpl
lcall
lods
in
pop
dec
addb
inc
xchg
fisttpll
pop
jnp
xchg
push
dec
push
fisubrs
pushf
rcl
or
jp
in
into
xor
cmp
lahf
ljmp
inc
sar
push
incl
gs
adc
or
lret
sarb
mov
mov
add
xchg
add
jmp
call
popa
xor
dec
inc
lahf
adc
out
prefetch
add
sub
mov
iret
cmpsb
pop
lret
cmc
bound
ljmp
pop
jbe
inc
fdivrs
pop
fdivl
incl
push
add
dec
dec
ljmp
jb
fs
mov
sbb
call
fmuls
push
leave
nop
arpl
cmc
pop
pusha
mov
mov
dec
cmc
mov
call
mov
insb
int3
push
rclb
inc
xor
dec
add
sbb
xchg
mull
mov
pushl
mov
jge
push
mov
repz
inc
jl
inc
iret
xor
arpl
pop
addr16
xlat
jmp
insl
xlat
inc
jnp
dec
loopne
bound
pop
xor
xchg
sbb
push
pushl
sub
xor
xchg
jg
test
rolb
xor
enter
xchg
or
hlt
cmpsb
call
mov
adc
pop
sahf
jnp
cmp
data16
or
ljmp
xor
ljmp
lock
mov
in
sub
jmp
std
decl
fisttpl
clc
fbstp
xor
jb
xlat
cmp
sub
nop
inc
fcoms
jg
imul
into
sub
mov
popa
mov
mov
jge
mov
cmc
fs
test
pop
daa
adc
push
sbb
fmuls
jmp
aas
pop
sub
mov
aad
mov
ror
mov
mov
sarl
lds
in
rorl
xor
push
mov
arpl
pop
hlt
pushl
scas
add
mov
and
cmp
fsts
lcall
fistps
add
cmp
icebp
lahf
insl
add
std
push
inc
lret
pop
xor
jge
xchg
mov
add
cmp
hlt
mov
or
lods
notb
jbe
in
addr16
cwtl
mov
lds
fdivl
negb
ret
aad
arpl
bnd
ljmp
cmp
lret
push
mov
push
push
and
pop
dec
adc
jmp
xor
insl
es
pop
jp
mov
push
hlt
cmpl
jg
ds
xchg
aad
lds
mov
pop
std
pop
ljmp
sbb
gs
dec
fcmovnu
mov
xchg
out
inc
inc
fisubrs
dec
lods
add
inc
daa
das
adc
and
mov
sub
jbe
hlt
adc
roll
add
or
jmp
mov
sub
jb
sub
mov
push
aad
or
dec
loope
daa
xor
jmp
daa
cmc
stos
cmp
xchg
das
push
ret
sqrtps
call
push
sub
dec
jg
cmp
or
out
popa
decl
scas
rorb
addr16
negl
rolb
imul
test
and
sub
ljmp
fstpl
mov
pop
popf
test
fwait
int
dec
mov
jmp
adc
lds
mov
lods
clc
inc
push
pop
sbb
ds
shll
dec
gs
or
incl
xor
rcl
mov
lret
push
pop
inc
jle
mov
fsts
test
push
iret
aas
repnz
mov
stos
call
cwtl
jne
cmp
jecxz
add
in
adc
pop
stc
or
pushl
xchg
jbe
std
add
mov
enter
pusha
sbb
mov
jg
leave
xor
inc
inc
shlb
push
test
hlt
fisubs
lcall
push
mov
subl
decl
lock
aas
inc
movsb
ja
push
jbe
aas
cmp
pushw
setno
add
pushl
jmp
mov
mov
stos
js
int3
cs
fcomip
mov
dec
pushf
mov
add
rorb
call
incl
and
out
sbb
inc
cmp
js
sub
loope
sub
incl
xor
pop
xchg
cld
inc
ds
lods
in
shrb
enter
cmpsb
scas
insb
clc
push
pop
js
es
dec
adcl
xchg
aaa
inc
jmp
cli
push
mov
lods
fadds
jns
cmp
negb
sub
push
repz
xor
push
inc
ja
ljmp
nop
sbb
jno
jbe
or
shll
ljmp
cmp
incl
and
addr16
pop
mov
orb
and
jecxz
cmp
mov
bound
cs
clc
adc
ds
xchg
xor
xchg
ljmp
or
jae
sbb
sbb
and
loop
cs
sub
jae
dec
pushl
xchg
lea
dec
dec
jmp
sbb
pop
adc
jmp
adc
out
cmp
jecxz
fistl
imul
fsubl
jno
lods
cli
jmp
rcrl
pusha
dec
jmp
inc
incb
in
mull
out
cmc
sbb
das
pushf
ljmp
outsb
dec
cmp
push
or
jbe
call
scas
pop
les
inc
adc
insl
push
test
sbb
ljmp
mov
inc
movsl
addr16
sbb
shlb
insb
std
int
jno
lcall
cmp
fisubrl
mov
xchg
in
jnp
or
add
or
mov
pop
lock
pop
repz
xchg
pop
js
out
mov
mov
ljmp
jle
fbstp
push
dec
outsb
je
sbb
mov
mov
popf
cwtl
ficomps
cmpsb
dec
shl
pushaw
movl
and
mov
jg
daa
mov
dec
sbb
aaa
add
nop
aad
or
mov
lods
push
aam
lret
or
andb
dec
fmull
out
xchg
inc
rcll
in
stos
push
test
jmp
lcall
loopne
movsb
cwtl
sbb
pushf
cmpsb
and
test
jp
xchg
sarl
enter
ljmp
inc
into
cwtl
rorl
push
adc
mov
jecxz
out
push
jbe
jns
cld
call
mov
pop
enter
shr
jmp
cmp
adc
dec
out
jg
pop
in
mov
or
jae
out
ret
dec
adc
ljmp
je
mov
or
adc
movsb
das
ds
dec
daa
jg
sbb
dec
cmpb
mov
mov
lods
cmp
les
lret
decl
in
cld
es
test
pop
out
test
cli
inc
add
mov
push
pop
call
adc
in
xor
cmp
mov
cwtl
test
dec
sahf
outsb
and
shl
mov
jmp
add
xor
mov
mov
push
mov
add
daa
aam
arpl
test
idiv
ljmp
mov
scas
daa
gs
out
mov
cmc
movl
lock
ljmp
add
mov
jl
adc
and
stos
vpsubsb
cmp
pop
test
scas
out
dec
xlat
ja
push
in
sbb
out
iret
pop
cli
pop
or
inc
lcall
loop
pushl
sbb
mov
popa
loope
ret
in
dec
decb
scas
sub
mov
sbb
add
daa
ds
mov
cmc
dec
stc
adc
dec
mov
push
fists
ljmp
sbb
ret
enter
dec
pop
ljmp
sar
cmpsb
ret
ret
mov
test
bound
sub
xchg
pusha
lret
lcall
and
lcall
repnz
pop
call
cld
cli
jecxz
jmp
fs
push
add
dec
push
arpl
inc
aas
std
fistps
inc
adc
shlb
cmp
jns
dec
mov
es
aas
mov
stos
out
shrl
adc
dec
popf
xchg
clc
adc
bound
lcall
xlat
add
pop
in
mov
pusha
jae
shll
es
sub
inc
mov
jnp
mov
cmp
fs
mov
xchg
cs
jp
pop
xorl
outsb
decl
addl
mov
push
icebp
dec
mov
mov
lods
fcomip
lcall
loope
lods
mulb
pop
pop
stc
int3
movsl
sub
jbe
dec
ljmp
cmpsb
inc
cmp
sbb
add
pop
xchg
arpl
into
jnp
dec
xchg
xor
push
stc
or
lcall
jge
sub
movsb
mov
gs
cwtl
inc
pop
gs
dec
or
add
lcall
sub
dec
stc
test
loope
xchg
mov
stos
push
dec
lea
dec
mov
jne
jp
xlat
mov
aam
rolb
mov
and
and
les
out
adc
ljmp
mov
sbb
xchg
pop
lods
jnp,pn
jle
pop
adc
lcall
pusha
call
sub
sub
ljmp
push
xchg
mov
sbb
xchg
imul
adc
insb
xor
cmpsb
sub
repz
and
shrb
xchg
pop
aad
xchg
cmpsl
lds
push
xchg
cmp
or
sub
sub
adc
inc
cmp
dec
xchg
mov
outsb
clc
cmpsl
inc
xor
loopne
loope
daa
jecxz
push
adc
mov
mov
cmp
jns
fimull
dec
pusha
mov
jp
inc
daa
fnstcw
push
push
ss
push
bound
lcall
lock
ret
sub
gs
pop
sbb
ljmp
inc
pop
xchg
mov
dec
xor
mov
outsb
add
or
dec
dec
repz
jmp
jno
iret
push
into
push
push
rcrl
aam
pop
jecxz
adc
mov
jmp
dec
jmp
jmp
dec
xor
ds
mov
nop
dec
sub
decl
jne
push
dec
scas
test
jle
mov
mov
jge
mov
inc
incl
xchg
dec
aaa
insl
inc
stos
outsl
popa
rclb
mov
cmp
incl
push
push
or
loopne
scas
test
movsl
sub
aam
pop
push
mov
lods
stos
inc
cld
dec
push
cmp
pop
dec
loopne
in
test
lods
xlat
add
enter
data16
call
jp
data16
push
lock
ds
xchg
lds
xor
daa
jg
xchg
sbb
mov
es
pop
ljmp
xor
imul
cmp
fmuls
les
movsb
mov
cmp
push
in
pop
mov
leave
incb
push
lahf
sub
sub
and
push
ficoml
pushl
fwait
mov
cmp
fisubrs
mov
adc
mov
or
es
mov
incl
mov
and
jnp
lods
pop
dec
mov
test
test
sub
pop
and
outsl
aas
add
add
jmp
sub
inc
lock
lahf
insb
test
cltd
pop
mov
out
cmp
aad
jmp
mov
jmp
aad
insl
hlt
loop
xlat
dec
jle
outsl
inc
hlt
xchg
add
jg
fstl
cmp
push
mov
mov
rorb
mov
mov
fwait
jge
xchg
adc
lcall
ret
xor
mov
es
pop
cmc
pop
mov
xchg
xchg
add
orb
addr16
cli
mov
sbb
ror
sbb
sti
sub
mov
aad
push
imul
add
mov
sub
pop
rcrl
stc
divb
and
fists
cli
cmp
movsb
cwtl
mov
sbb
mov
mov
int3
test
pushl
pop
in
leave
clc
push
xor
cmpsb
test
cmc
fnsave
lea
push
ds
push
aas
pushl
dec
or
lods
push
and
jae
mov
hlt
mov
emms
cmp
jae
test
jg
mov
push
jg
lock
arpl
and
cmp
add
aaa
mov
sarb
in
push
xchg
lods
pop
mov
cmp
ljmp
fucomi
test
filds
idiv
push
lods
or
inc
jg
xor
mov
sub
cmc
ja
xlat
pop
xchg
inc
xchg
xchg
push
sahf
adc
jmp
jmp
mov
sub
clc
incl
pop
out
mov
stc
aad
cmp
sbb
test
mov
aas
adc
add
jmp
leave
xchg
loope
incl
jo
jb
jae
inc
loopne
daa
xor
push
mov
mov
ljmp
lods
outsb
mov
lea
mov
test
sbb
and
push
mov
call
addr16
leave
sbb
test
mov
mov
or
cld
lcall
dec
pop
shr
mov
test
sub
jg
lret
jp
int
xor
rol
sub
mov
push
ret
lcall
dec
pop
enter
testl
sbb
dec
sbb
sahf
cs
sar
pushl
fnstenv
xchg
sbb
scas
xchg
rcll
lods
lods
xchg
in
decl
jmp
lcall
pop
and
fstpt
xchg
aam
lock
and
inc
jae
sar
mov
push
daa
ret
push
fisubl
xor
push
push
xchg
adc
es
jg
jne
adc
add
sub
mov
loop
xchg
ljmp
dec
xchg
mov
aam
pop
pop
leave
ljmp
incb
fisttpl
adc
cmc
or
dec
cwtl
and
jecxz
sub
dec
fnsave
sbb
mov
adc
push
in
imul
mov
ss
xchg
sahf
shl
inc
xor
pop
jle
sahf
gs
loop
add
call
xor
lods
jne
add
jno
inc
iret
mov
insb
mov
cmpsl
rorb
or
mov
mov
add
add
iret
test
jl
pop
into
pusha
mov
std
loope
mov
and
insb
cmp
inc
in
mov
jecxz
push
push
dec
mov
sbb
aaa
in
adc
nop
add
sub
subb
pop
cmc
hlt
mov
das
in
ret
push
mov
inc
das
fdivrl
push
pushf
or
decl
stos
gs
mov
cli
lret
cmp
and
outsl
repz
mov
ljmp
cltd
stos
mov
mov
mov
xchg
daa
incl
mov
std
jnp
pop
bound
dec
or
push
xlat
mov
cmpsl
add
dec
call
ljmp
andb
es
arpl
jle
in
jg
ds
call
lahf
lods
add
xchg
add
int
cmp
push
adc
sub
cmpsb
loop
mov
mov
pop
push
or
imul
jbe
ds
lcall
je
and
pop
xor
pusha
loopne
insb
jns
pop
fistpl
mov
pop
popa
clc
incl
push
out
jo
fsubl
push
leave
xor
cs
jmp
xchg
pop
push
mov
jnp
sbb
xor
sub
adc
cli
mov
icebp
xchg
and
jmp
mov
out
adcb
xor
cwtl
hlt
xor
sti
sbb
insl
lock
aas
mov
lret
aaa
hlt
rorb
sub
inc
movsl
push
movsb
mov
xchg
hlt
jg
data16
repnz
sbb
sbb
lcall
outsb
imul
mov
scas
jbe
pushf
add
addr16
and
das
push
push
test
xchg
dec
lea
xlat
pop
pop
push
mov
subb
mov
pop
int
fs
imul
or
add
xchg
jmp
add
dec
hlt
push
adcl
inc
inc
cmp
jmp
fcomp
js
stos
lcall
ss
ja
shl
jmp
out
xlat
xchg
out
mov
cs
jbe
cmc
fs
jo
fidivl
or
out
bound
incl
cmp
or
jns
imul
sbb
gs
cmp
jp
cld
sbb
daa
call
lods
push
stos
mov
in
and
and
int
ljmp
lea
pop
sub
sti
imul
fistps
or
movl
arpl
movsl
jg
pop
lahf
sbb
scas
jnp
sbb
hlt
incl
sub
loopne
jae
dec
pop
fwait
add
xor
xor
in
scas
es
jmp
dec
mov
sbb
mov
mov
cmp
jnp
cmp
jbe
jl
cmp
in
dec
dec
jp,pt
push
fmul
sbb
dec
mov
cmpsl
scas
incl
xor
rcll
inc
fnstcw
and
int3
in
push
ret
and
arpl
mov
pushf
inc
aas
jnp
nop
jmp
and
jecxz
test
scas
packsswb
adc
test
call
incl
fmul
xor
xchg
xor
inc
mov
cwtl
sbbl
inc
push
mov
decl
fbstp
in
and
mov
pushl
ljmp
aad
ja
cld
imul
scas
or
sbb
pop
hlt
ljmp
mov
fsubs
adc
decb
movsl
pusha
and
jae
test
jge
aam
outsl
dec
cltd
rcrl
je
inc
mov
pop
xchg
cmp
shll
push
cmp
incl
lock
dec
xor
loopne
loopne
jb
mov
xor
sub
gs
mov
mov
mov
pop
pop
stos
cmp
call
xchg
shl
sbb
negl
rorl
sahf
xchg
cs
push
aad
ret
sbb
hlt
lcall
adc
cmp
inc
xchg
leave
mov
sbb
or
sub
or
lcall
sub
inc
or
jmp
and
sub
jb
sbb
test
call
sub
aaa
sahf
cmpsl
shrb
icebp
dec
aad
dec
in
lret
push
icebp
xchg
jmp
jg
test
mov
not
hlt
mov
jmp
call
mov
inc
xchg
test
mov
popf
dec
mov
rcl
mov
lcall
mov
mov
xchg
pusha
and
add
rorb
dec
sub
shrb
mov
fldenv
aaa
push
ss
push
dec
jp
scas
es
xchg
pop
push
xchg
mov
xchg
mov
mov
call
std
add
popf
rcll
and
mov
add
dec
shll
call
push
and
mov
inc
pop
or
mov
xchg
or
lahf
sbb
mov
mov
sub
std
pushl
insl
jbe
inc
ret
jne
mov
and
aad
xor
movsb
pushl
dec
neg
jb
lcall
out
icebp
xchg
cltd
daa
pop
and
sbb
in
popa
popl
lcall
cltd
jle
shll
mov
test
lods
std
int
out
sub
dec
add
pop
push
sub
pop
xchg
add
pushl
std
or
mov
addl
lea
xchg
rolb
in
cmpsb
insb
imul
cmp
ljmp
add
fiaddl
les
inc
je
dec
rcll
orl
xor
cli
iret
mov
inc
inc
pushf
test
repz
pop
stos
into
xlat
clc
rcl
test
xor
call
lock
push
adc
pusha
xorb
fsubl
incl
jg
scas
mov
push
dec
lods
jp
les
enter
xchg
test
jmp
and
xchg
xor
fcoml
shrl
rorb
cmp
add
das
repnz
pushl
cmp
mov
test
xchg
dec
vpsubusw
push
psrld
mov
pop
cmc
call
scas
jecxz
dec
sbb
fdivl
jp
cmpsb
jbe
ljmp
dec
or
fs
mov
and
movsl
int
jb
frstor
lods
movsb
daa
sub
mov
or
dec
adc
dec
mov
test
es
inc
out
cmpb
jmp
hlt
jecxz
or
call
mov
test
mov
cmp
pop
push
mov
xchg
mov
xor
push
in
sarl
adc
or
pop
shll
sub
xchg
ffree
mov
xor
sbb
ljmp
data16
push
mov
and
in
add
xor
repnz
xchg
push
xchg
pushl
ficoms
lret
pusha
je
mov
dec
xchg
dec
mov
mov
cli
pushl
jmp
jbe
dec
xchg
mov
add
sub
leave
xchg
inc
ljmp
loop
sub
jg
mov
and
push
xor
lcall
jmp
xlat
mov
xchg
xchg
jg
dec
fidivl
int3
arpl
pop
or
mov
stc
movsl
or
bound
inc
jmp
leave
int
and
in
ljmp
rclb
je
lret
or
cltd
das
jae
inc
mov
xchg
lcall
fldcw
enter
lds
pop
aad
in
call
or
mov
cwtl
push
test
ds
stos
fucomi
jno
pop
hlt
loopne
cmp
and
xor
ljmp
repz
jnp
pop
pop
jmp
dec
arpl
cmp
dec
dec
gs
pushf
pop
cmp
es
lock
xlat
cli
lret
loop
dec
fstpt
decl
push
xchg
jmp
push
rcll
jne
push
sub
mov
xor
in
xchg
jg
xor
pop
enter
jae
mov
scas
ret
ror
jnp
pop
jl
jecxz
adc
ljmp
or
or
and
shl
aad
cmp
and
decl
jp
and
jae
push
mov
lods
jmp
sub
pop
inc
jg
and
addl
imul
lods
cmp
insl
dec
es
xor
into
or
lcall
mov
fucomip
or
clc
rorb
push
out
sti
push
adcl
jne
js
dec
gs
jnp
arpl
hlt
mov
add
mov
call
sbb
pusha
sete
mov
xlat
jns
imul
cli
push
xchg
sti
incl
loopne
gs
or
shll
push
sub
mov
leave
lret
clc
xchg
push
push
jbe
nop
mov
addr16
push
pop
sbbb
fimull
pop
out
lods
pop
call
lcall
std
mov
decl
ret
push
and
push
xchg
sbb
std
out
dec
or
rorb
movq
std
xchg
dec
or
fnstcw
add
popf
incl
mov
loope
cs
xchg
stos
aad
in
aad
cmp
call
pop
jns
sub
mov
movsb
add
out
das
jmp
mov
aad
sar
pushl
ds
add
je
nop
dec
iret
push
sti
cmc
loope
pop
jae
cli
xor
fimuls
ljmp
or
mov
std
inc
outsb
or
lahf
insb
ds
and
cltd
lret
cmp
mov
xchg
mov
mov
out
xchg
into
or
in
mov
daa
jg
popa
std
movsb
push
rcl
sarb
cmp
imul
cld
adc
es
outsl
cmp
or
jne
subb
xor
out
push
into
add
pushl
fimull
inc
and
popa
cmp
fs
sbb
lahf
cltd
hlt
push
sub
adc
cmp
sbb
fmuls
movsl
xchg
in
in
pop
push
cmp
jmp
ljmp
xor
xor
scas
fwait
repnz
push
les
int3
sar
lcall
fcoml
mov
adc
push
pop
cmp
mov
out
adc
pop
cmp
test
sub
repnz
popf
aaa
inc
jge
fisubrl
xchg
jmp
push
in
mov
pop
aas
cmpsb
shr
xor
inc
cmpsl
mov
int
test
sbb
ljmp
hlt
mov
aaa
adcb
lods
or
pop
rclb
out
dec
sub
cld
call
pop
mov
outsl
repz
xchg
repz
into
pop
cld
mov
inc
adcb
incl
and
add
fdivrs
lock
rdmsr
rcrb
int
je
add
icebp
push
fs
mov
dec
fstpt
jo
into
xchg
mov
xchg
iret
push
mov
sar
cmpsl
les
mov
neg
add
call
outsl
mov
outsl
loope
dec
pop
add
into
test
pop
sbb
jmp
pushf
fwait
or
dec
test
jle
lods
mov
aad
xor
jge
mov
and
push
push
sub
pop
or
jmp
int
iret
jmp
push
call
jle
add
mov
pop
xor
stos
fwait
push
clc
pusha
fdiv
call
inc
mov
popf
push
mov
push
mov
push
bound
dec
inc
popf
cmp
loopw
jmp
dec
pop
push
xchg
mov
mov
jb
xchg
out
xchg
jl
bound
mov
jns
insl
test
call
scas
pop
lods
iret
add
mov
leave
xchg
and
cmpsl
sub
sub
jne
daa
call
mov
xor
pop
dec
xor
push
shlb
popa
mov
adc
mov
add
mov
std
dec
or
sahf
shll
sti
leave
xchg
adc
pop
cs
scas
in
cmp
testl
sub
sub
dec
push
jb
xor
pop
cmp
pushl
popa
sub
sub
int3
jae
push
repnz
cmpsb
or
icebp
cmp
je
je
xor
incl
jae
lods
in
or
repnz
pushl
test
test
ss
out
vmread
fs
pop
and
loopne
ljmp
scas
dec
mov
out
ljmp
lahf
test
sahf
fimull
aas
push
in
push
sti
pop
mov
call
test
lcall
cmp
pop
psubb
scas
ljmp
or
push
negl
out
pop
loopne
into
jnp
mov
dec
das
out
jbe
lret
incb
fcoml
xchg
mov
incl
mov
sti
stos
sub
jns
dec
or
inc
jge
adcb
dec
cmp
ss
iret
push
pop
call
cs
dec
das
pop
test
mov
fldenv
inc
rolb
clc
call
xlat
mov
insb
jns
mov
outsl
js
xchg
cmp
inc
xor
jle
ljmp
jmp
sub
mov
adc
stos
stos
sbb
sti
pop
fcoms
fcmovbe
divps
mov
rolb
xchg
jge
sarl
fstl
xor
and
push
adc
jmp
scas
add
adc
cmp
pop
cmp
jb
mov
fs
dec
movsb
xchg
data16
in
mov
daa
xchg
and
dec
pop
or
and
jl
push
inc
stos
push
xchg
pop
cld
xor
jmp
negb
mov
fcomip
and
xchg
sbb
add
mov
xchg
sbb
decl
iret
aas
aas
mov
push
sub
fbstp
xor
xchg
xchg
xor
js
pop
aad
xor
out
fisubrl
ss
add
mov
inc
add
push
sbb
or
dec
fnstsw
clc
or
loopne
out
pop
test
icebp
scas
es
rcll
call
ljmp
ret
insb
stos
sarb
shlb
xlat
aaa
lock
and
mov
cld
movsl
ficoml
out
out
dec
hlt
cmpsb
add
push
iret
ljmp
mov
push
aaa
xchg
xor
pop
adc
lret
lods
pop
imulb
xor
loopne
std
sti
add
mov
jnp
pushf
or
cmp
test
adc
pushl
lcall
outsb
inc
pushf
push
mov
cs
fistpl
jo
fbstp
movsb
sbb
ret
pop
stos
das
mov
cld
roll
loope
inc
in
jg
lock
jecxz
mov
hlt
leave
rclb
mov
adc
push
sbb
cmp
data16
jno
das
sar
mov
fwait
insl
pop
cmp
pop
mov
inc
nop
pop
stos
xor
mov
js
push
push
iret
adc
jle
pop
dec
mov
push
test
movsl
and
and
faddl
and
jae
fstpt
lock
lahf
out
inc
lods
mov
pop
push
nop
pushl
jo
js
daa
rcr
mov
loopne
int
inc
xor
dec
ss
lods
sbb
pushl
daa
gs
ljmp
dec
sbb
call
sahf
je
in
mov
adc
call
das
lock
add
mov
into
xchg
add
nop
std
jg
xor
out
notl
mov
call
in
add
push
pushf
sbb
aad
sub
insb
fsubs
push
xchg
not
cmp
cmpsl
in
pop
daa
sbb
arpl
jg
sub
loopne
cmp
loope
xor
and
add
sub
jmp
jmp
mov
stos
add
cmc
ja
outsb
jg
incl
ffreep
mov
inc
outsl
test
call
pop
mov
xchg
test
cmp
nop
inc
loop
test
jbe
dec
fisttpl
test
sbb
clc
adc
mov
xchg
popa
ljmp
sub
sub
insb
adc
mov
test
jge
jb
xor
mov
xchg
lock
push
mov
sbb
clc
or
fnsave
pusha
shlb
inc
dec
and
loope
scas
call
outsb
mov
pop
pop
cmp
into
xchg
sub
jne
jmp
sti
mov
mov
rcl
loop
repz
or
dec
ds
mov
dec
and
sbbl
pop
add
jecxz
aam
sub
outsb
mov
jb
adc
lock
decl
mov
adc
aas
ret
in
add
lahf
xchg
mul
int3
pusha
jnp
push
aas
mov
sub
hlt
stos
inc
cmp
jge
xor
mov
xor
mov
call
xchg
jo
or
push
lock
test
jecxz
push
xchg
dec
mov
push
add
call
push
loope,pt
xlat
daa
lds
decb
negl
pop
inc
insb
lods
sub
fdivl
fcmovbe
call
test
mov
mov
xor
call
jg
jmp
mov
sahf
pop
cmp
out
cmpsb
and
or
das
ljmp
pop
data16
movsl
dec
das
insl
pop
dec
mov
adc
jno
cli
sub
push
orb
scas
sub
mov
popa
sub
cmc
lret
jbe
leave
fcomip
jmp
in
mov
fisttps
shrl
lcall
les
adc
fdivr
incl
cld
shlb
mov
push
jecxz
xchg
xchg
lods
xchg
jecxz
inc
pop
and
pushl
push
push
scas
and
dec
and
jnp
jp
or
gs
movsb
mov
ss
and
int
mov
inc
adc
fs
jl
sub
xchg
lcall
mov
sbb
pop
push
cld
pop
daa
cmpsb
cwtl
aam
ds
jg
inc
adc
and
les
repz
dec
fmuls
or
jnp
sbb
lea
sub
dec
xchg
xor
les
jno
mov
mov
enter
lcall
pop
add
or
xchg
jmp
sbb
push
test
cmpb
nop
dec
pop
mov
scas
fdivr
out
mov
or
call
and
jns
gs
int
pop
push
rcr
push
fcomps
pop
dec
lea
jbe
mov
incl
add
hlt
daa
jg
xor
inc
pop
sub
mov
add
and
mov
xor
xchg
fisubl
rorb
lods
negb
xor
frstor
fsubl
mov
out
insl
inc
in
scas
mov
mov
in
stos
shlb
mov
add
jmp
pusha
mov
inc
dec
cwtl
jecxz
scas
repnz
les
mov
sub
lcall
xchg
pop
sbb
mov
rcr
dec
int3
jl
dec
push
int3
call
inc
dec
aam
sub
xchg
loopne
push
xor
mov
shll
pop
xchg
jl
out
clc
decl
scas
inc
push
pop
fistps
or
sub
or
lret
cld
jns
mov
lret
cmp
cmp
jg
test
subl
cmp
adc
push
cmpsl
sub
fildl
jp
sub
pushf
push
or
pop
xor
mov
xor
dec
das
pop
stos
imul
es
aas
mov
adc
push
mov
push
adc
sbb
sbb
mov
stos
repnz
adc
dec
lcall
and
dec
inc
jo
pop
pushf
iret
cmp
cmp
mov
ljmp
or
push
fs
test
cmpl
jmp
loop
dec
lret
aas
cli
or
sbb
hlt
cmp
in
mov
add
lods
outsb
mov
das
mov
and
shr
jge
jmp
xorb
divb
fs
popa
insl
clc
pop
xor
sub
gs
int
jmp
not
push
push
mov
rcrb
cmpsl
pop
inc
jnp
out
jo
jne
xor
decl
pop
fsubl
jle
loope
sub
imul
xchg
sahf
daa
test
mov
mov
aaa
xchg
adc
int3
and
addr16
popl
adc
enter
cli
pushl
lcall
pop
cmp
divl
inc
es
call
ljmp
stos
jg
movsb
cmp
imulb
decl
arpl
or
jmp
in
ljmp
rcrb
jmp
arpl
lahf
test
testb
add
inc
scas
pushl
insb
add
cmp
fnstcw
jne
sub
mov
and
pop
mov
int
arpl
cmp
hlt
inc
sbb
jbe,pt
xor
jnp
lahf
mov
sar
ds
xchg
xchg
call
and
xchg
loope
mov
iret
sub
mov
ss
rcrb
jmp
dec
fs
jnp
test
mov
mov
shl
jle
nop
mov
stos
mov
lcall
movsl
mov
sub
out
mov
adc
sub
lahf
mov
inc
clc
enter
clc
jmp
cld
add
jne
pushl
std
call
add
push
sbb
clc
sti
jp
cs
mov
sbb
popa
jp
xor
ljmp
pop
xchg
xor
clc
sahf
aaa
cld
decl
pop
insb
mov
add
cs
dec
lock
mov
mov
xor
sub
inc
mov
xor
loopne
push
cs
inc
or
test
jp
sahf
call
jp
mov
pop
pop
add
dec
and
cmp
mov
les
jmp
inc
mov
std
mov
push
into
cmp
int
daa
mov
enter
lcall
imul
adcl
or
cmp
fs
cmp
lret
sbb
dec
mov
lcall
dec
cmp
enter
arpl
mov
dec
adc
repnz
in
adc
mov
call
cwtl
push
mov
and
inc
or
push
icebp
push
mov
enter
mov
add
sahf
and
lods
push
and
idivl
jge
pop
sbb
jmp
push
scas
jb
std
mov
movsl
fsubp
dec
das
roll
insb
outsl
push
xchg
stc
pop
or
and
lahf
gs
es
xlat
mov
pop
push
aad
outsb
pusha
add
btc
and
or
incl
pmaxub
pop
cmpsl
pop
xor
mov
cmp
jg
clc
dec
pop
loop
xor
das
loope
sar
dec
imul
clc
push
fmull
es
mov
in
xchg
lret
les
aam
dec
mov
rclb
pushl
ljmp
xchg
jle
adc
outsb
mov
std
pusha
adc
inc
jmp
jmp
xchg
adc
inc
push
ret
bswap
stos
loope
and
lcall
add
mov
hlt
pop
shlb
sub
shll
decl
arpl
ret
xchg
arpl
jecxz
cli
pop
lods
xor
leave
pop
push
cmp
flds
mov
push
xlat
int
push
mov
ljmp
xor
pop
xor
adc
cmp
push
dec
ss
out
push
out
mov
incl
int
push
mov
xchg
pop
xor
pop
push
fnstcw
push
test
test
in
and
or
andb
scas
into
sbb
cmp
incl
add
pop
ja
test
jb
ljmp
lcall
inc
sub
and
sbb
popa
xchg
push
dec
mov
inc
and
mov
call
dec
repz
push
movsl
decb
xchg
inc
xchg
mull
jnp
ljmp
lcall
cmp
aad
outsb
js
mov
cli
mov
push
ror
ja
cmpsb
cmp
dec
or
sahf
int3
int3
scas
xchg
sub
inc
movups
sub
mov
ljmp
out
std
je
hlt
rclb
lret
out
pop
xchg
add
mov
arpl
jg
insb
std
xchg
bound
inc
mov
arpl
ljmp
enter
lret
sti
out
out
sbb
mov
and
popa
loop
mov
mov
jmp
fstpl
decl
jmp
cmp
out
pop
xchg
clc
lods
mov
or
sub
push
stos
into
sub
ds
sar
call
push
subb
jns
ficoml
jns
lock
fdivl
push
enter
jg
adc
mov
jecxz
daa
pusha
outsb
scas
fldenv
pcmpgtw
roll
mov
rclb
mov
lock
xor
out
pop
add
mov
outsb
add
lahf
pop
dec
xchg
out
xchg
je
js
and
inc
push
clc
popa
and
jb,pn
jp
jmp
xlat
cmp
push
add
mov
mov
js
sbb
jmp
jp
push
psllq
dec
push
out
mov
pop
push
xor
push
jp
sub
shrl
sub
movsb
es
inc
scas
mov
xlat
ret
xor
jg
adc
stc
mov
xor
cmp
pushl
ret
out
xchg
mov
daa
movsl
loopne
xor
nop
sbb
mov
pop
in
ljmp
cli
mov
mov
cmp
incl
pusha
add
ss
fdivrs
mov
and
jmp
cmp
add
clc
int3
mov
mov
sbbl
in
adc
inc
xor
jmp
dec
add
sub
mov
sbb
xor
test
movaps
out
cmp
sbb
jo
sbb
cmp
bound
pop
add
sti
mov
push
je
or
mov
and
stc
adc
hlt
jp
icebp
lret
cwtl
dec
jo
push
sbb
lcall
aam
and
push
leave
jp
out
lods
ffreep
xchg
sbb
xchg
jne
jns
popf
and
fcomip
xor
pushf
pop
mov
mov
or
call
ja
decl
cmpsb
pop
sbb
icebp
cmp
jno
xchg
les
add
das
adc
cmp
add
mov
mov
inc
sbb
ret
test
lcall
push
jae
fcmovnb
sub
mov
es
sbb
idiv
jb
aaa
sbb
jo
cld
call
iret
xchg
inc
xor
sbb
es
jle
mov
pop
xchg
push
add
call
jb
jge
mov
fnstenv
jne
xchg
and
sbb
adc
popa
xor
je
push
daa
jp
cli
mov
arpl
xchg
cmp
jg
or
cmp
hlt
sahf
les
call
outsl
hlt
xor
sbb
cmc
lods
pop
lahf
test
xor
fbld
loopne
push
xchg
and
sbb
data16
daa
aas
aam
mov
rcrl
add
jge
xchg
rorl
es
shr
fcos
ljmp
cmpsb
adc
mov
sahf
sub
ss
dec
dec
enter
decl
decl
loop
mov
pop
and
add
neg
shlb
lock
xchg
int3
fdivrl
cmpsl
insl
nopl
and
inc
fdivl
pop
aam
movsl
jge
aaa
cmp
insb
andb
xlat
lcall
jecxz
cmp
adc
cmp
dec
lret
fbstp
cmp
jg
adc
mov
mov
add
loope
std
mov
dec
inc
lcall
xor
jg
or
add
sbb
gs
mov
adcb
or
pushl
in
push
aad
or
sub
gs
jmp
lcall
incl
sarb
xchg
push
into
cmpsb
clc
mov
xchg
sbb
aad
es
aad
and
jns
push
lock
mov
test
xchg
add
jns
popf
and
lahf
repz
pop
xchg
outsl
push
pusha
fistps
pop
push
mov
aad
xor
sub
or
incl
cwtl
dec
in
inc
dec
pop
sub
xlat
jb
and
incl
pop
aaa
sub
push
lcall
adc
push
dec
es
xchg
cmp
call
add
popa
lret
sbb
jp
push
es
sbb
mov
stos
jne
hlt
iret
out
sbb
pop
adcb
and
dec
inc
lods
aas
push
repnz
ds
lds
sub
mov
cmpsl
loopne
sub
mov
enter
pop
xchg
cs
xchg
cli
decl
pop
adc
mov
mov
fildll
outsb
jb
push
and
repz
pop
adc
notl
mov
outsl
mov
inc
dec
mov
data16
xor
ljmp
into
add
pop
test
js
adc
sti
shl
sub
adc
sahf
addr16
cld
dec
imul
xchg
mov
into
and
lock
shll
jg
fstpt
shrb
cli
cwtl
push
test
sbb
pusha
cmp
mov
ficompl
rcrb
mov
sub
inc
cmovge
adc
fnsave
cmp
xor
jmp
aas
push
in
mov
arpl
shll
cmpsl
pop
lret
out
jecxz
jecxz
out
test
xchg
ficompl
loope
call
xor
jle
hlt
adc
adc
mov
jl
ret
call
ficompl
pop
call
mov
xchg
sti
imul
mov
incl
inc
ss
inc
add
cmp
test
ds
pusha
jl
pushl
xlat
popa
inc
mov
test
test
sub
dec
aam
cmp
lret
pop
lret
pushl
add
adc
xlat
movl
xor
das
testb
out
mov
cmp
or
cmc
sti
outsl
fs
cwtl
jge
mov
cmp
xchg
aas
je
and
cmpl
xchg
pop
dec
add
ljmp
inc
and
lahf
insb
dec
sbb
cmpsl
rorl
clc
aas
dec
jo
cwtl
jmp
repz
ss
cmpsb
jne
xor
test
cmp
ljmp
mov
rcll
xor
in
arpl
idivl
lock
inc
pop
lret
les
jmp
ljmp
insl
repz
jbe
add
fcomip
call
xor
add
inc
sbb
inc
xor
cmp
in
call
scas
cli
dec
xchg
jb
das
pop
adc
mulw
jmp
mov
stos
pushl
stos
repnz
out
or
mov
cmp
xchg
xchg
out
gs
out
cs
adc
mov
aad
xchg
call
dec
into
mov
push
cmc
addb
jae
outsb
mov
jp
pop
fcomip
cmp
std
addr16
stos
je
inc
divl
movsl
push
stc
stos
or
push
xchg
fildll
xor
outsb
pop
loopne
in
inc
xor
pusha
push
jg
imul
jecxz
sar
call
add
pop
cmp
leave
mov
out
imul
jg
jb
into
mov
cmpsl
mov
mov
ja
adc
mov
lret
jne
jp
push
inc
mov
sub
pop
sub
dec
icebp
sbb
sahf
fs
insb
xor
sti
sub
fwait
jmp
int
ficoms
mov
dec
fisttps
call
or
data16
add
js
add
test
in
ud1
int
psubq
mov
nop
mov
push
ljmp
clc
incb
leave
jo
push
xchg
mov
add
mov
nop
inc
cmp
scas
pushl
shr
mov
fs
repz
rcrb
and
decl
inc
test
pop
insb
sbb
int3
mov
lcall
and
scas
add
ja
popf
and
test
cmp
push
and
aaa
std
decl
leave
sub
pop
pop
sbb
adc
mov
insl
push
jg
and
clc
sbb
xchg
xchg
out
sub
inc
hlt
call
or
and
das
ffreep
jg
cmpsl
or
jmp
mov
call
pop
sub
test
into
mov
cmc
jns
xor
ret
cmp
incl
dec
movsb
or
adc
inc
adc
dec
pushf
jo
and
stos
fcmovb
mov
std
incl
sbb
mov
test
leave
testl
dec
roll
idiv
call
ret
cs
pop
xor
mov
inc
push
out
lcall
add
ret
push
ja
push
gs
jg
lcall
stos
clc
pop
mov
lods
adc
mov
movsb
jmp
xchg
fcomps
fcomip
inc
incl
xlat
test
adc
dec
out
add
hlt
add
decl
lods
lret
inc
push
inc
pop
pop
xchg
aad
ljmp
jg
mov
imul
dec
ljmp
lea
mov
pop
lcall
xlat
mov
fcomip
ja
pop
cmp
std
lock
lahf
lea
mov
divb
inc
fadd
inc
popf
dec
hlt
sbb
xchg
pop
adc
ds
out
daa
mov
test
mov
jg
jmp
mov
xchg
ja
and
scas
sub
mov
leave
out
sbbl
xlat
mov
ja
mov
dec
icebp
inc
lods
xchg
cli
mov
xorb
shrl
and
dec
sahf
and
sbb
mov
cmp
mov
sahf
daa
add
push
sbb
xor
push
call
xchg
pop
addr16
aad
or
mov
xchg
add
loopne
mov
and
sub
push
mov
cmpsl
lds
stc
dec
sub
and
or
orl
loopne
int
ljmp
loope
cltd
lods
sbb
sti
sbb
push
les
jne
psubsb
add
xor
fcom
xor
loop
jmp
push
or
mov
mov
outsb
lcall
jno
repnz
call
inc
pop
repnz
insb
sbb
add
sbb
into
xorl
xchg
stc
data16
jmp
dec
scas
movsl
pop
lcall
mov
int
jle
addr16
dec
mov
xlat
jmp
jg
mov
fldenv
bound
lret
ss
in
xor
xchg
scas
dec
fadds
cltd
dec
ret
or
push
addr16
jno
les
fistpll
out
clc
sub
push
mov
mov
add
jne
adc
cmp
je
int
inc
mov
xor
pushl
addr16
and
popa
int3
sub
or
movsb
mov
xchg
hlt
sbb
inc
inc
xchg
outsb
push
push
and
dec
rcll
inc
or
pop
sbb
call
or
xchg
or
jge
rcrb
and
jl
nop
xchg
lods
fmulp
inc
jge
push
mov
idivb
inc
scas
fsub
ds
test
dec
das
aam
dec
inc
dec
xor
ljmp
adc
or
lea
xchg
out
fisubs
pop
jns
lret
mov
icebp
sbb
lcall
mov
adc
mov
pop
stc
lods
push
int3
push
divl
cmpsl
arpl
sub
fnstsw
incl
and
sti
inc
cmpsb
cmp
sbb
data16
pushf
add
shrb
sub
mov
js
xchg
and
add
mov
stos
mov
mov
cwtl
cmp
xchg
sub
das
add
clc
jne
mov
jle
js
outsb
hlt
jnp
popf
std
idiv
push
dec
movsl
jmp
arpl
bound
sahf
in
mov
aaa
mov
pushl
ja
or
adc
cld
popl
loope
adc
adc
rolb
or
out
in
mov
shrl
shrb
jl
loopne
xchg
mov
pop
stc
out
out
sbb
push
clc
cmpl
in
cmp
les
pop
or
jno
hlt
fisubs
ficomps
xchg
sub
mov
repz
xchg
or
pop
aaa
xchg
xor
sbb
add
cmpsb
adc
xchg
bound
clc
ljmp
ss
cmp
push
push
pusha
adc
rclb
cwtl
xor
ljmp
jl
xor
jo
cmpxchg
hlt
int3
aaa
pop
pop
rorb
adc
test
ljmp
sbb
fimuls
lods
push
mov
outsb
neg
out
dec
xchg
xchg
xchg
sub
jmp
jg
ret
mov
iret
dec
xor
jg
jnp
out
sbb
pop
js
fisttpl
or
ljmp
scas
pop
add
xchg
addb
fsubrl
sbb
mov
call
loope
pop
lret
cld
cli
add
mov
scas
ljmp
cli
imul
xor
mov
fnstcw
es
dec
insb
test
flds
cmpsb
movsl
xchg
mov
je
fadds
hlt
shll
mov
js
call
fwait
xor
fcoms
cltd
roll
add
lods
movsb
outsb
popf
test
adc
incb
push
pop
xor
push
and
sub
pop
daa
gs
add
xor
sbb
push
jb
ret
cmp
jmp
adc
sub
lcall
negb
scas
cmpsl
push
jmp
cli
cmp
std
ljmp
dec
cmp
adc
and
and
push
xor
push
sub
or
out
mov
mov
lcall
push
imul
sbb
sub
jp
shlb
cld
xchg
jbe
mov
mov
outsl
mul
int3
pop
pop
test
pop
inc
xlat
addr16
cmpsl
jmp
jae
mov
out
push
adcb
cmp
lcall
inc
loope
lahf
out
das
xchg
incl
mull
pop
fmul
cmpsb
iret
lods
es
shrb
jle
jnp
mov
sub
push
mov
jmp
aas
push
push
dec
inc
inc
inc
pop
movsl
pop
aas
std
and
es
clc
decl
sub
shr
pop
cmp
out
cli
out
in
add
push
shrb
add
jl
aas
andb
mov
pop
sbb
add
andb
aam
dec
or
add
or
xchg
mov
push
and
push
das
insb
push
inc
or
mov
add
bound
fsubr
pop
jno
lret
addb
inc
lret
scas
fstl
ja
imul
popf
push
add
imul
imul
add
add
add
add
inc
lock
stos
xor
add
push
add
in
xlat
hlt
fwait
mov
sub
mov
cmpsb
cmpsb
and
dec
jo
daa
sbb
add
adc
dec
gs
pop
push
outsl
outsl
insb
push
gs
jo
push
outsb
popa
jo
push
and
test
rcll
sbb
pop
jnp
movsl
and
aaa
insl
sbb
aaa
cmp
or
insb
push
add
pop
es
dec
jne
js
arpl
cltd
shlb
xor
cmp
push
popa
shrb
in
fnstsw
outsb
aaa
fmul
push
inc
jns
push
imul
xor
sbb
inc
cmp
dec
ljmp
dec
jecxz
push
xchg
andl
imul
dec
xchg
jo
or
popa
mov
push
int3
int3
insb
inc
jl
loopne
sub
dec
mov
dec
imul
dec
xor
add
sub
iret
or
or
mov
aas
jo
pop
push
outsb
flds
sub
out
pusha
pop
dec
inc
sbb
insb
mov
adc
out
or
inc
insb
or
or
fisubs
mov
rcrb
push
pop
js
outsl
ds
insb
jne
addl
data16
mulb
xchg
mov
fcomi
fisttpl
inc
sbb
test
lods
xorb
push
fildl
jbe
inc
push
pop
in
addb
andl
jne
addr16
or
push
pop
jb
test
das
push
jns
mov
sbb
xchg
adc
sahf
mov
andl
fs
inc
jecxz
add
or
lods
loope
push
or
aad
adc
popa
pop
rcll
or
pop
or
dec
packuswb
mov
mov
pop
pop
mov
test
sbbl
dec
pop
mov
dec
adc
leave
stos
jle
jo
xor
arpl
fistpll
arpl
shrl
xchg
test
inc
inc
inc
dec
stc
js
inc
or
call
adc
add
imulb
sub
push
pop
cs
and
popw
push
gs
test
mov
out
imul
mov
inc
xchg
shll
das
ljmp
jae
pushf
inc
or
inc
aas
js
pop
dec
inc
dec
or
inc
cmovno
cmp
or
pop
mov
mov
pop
push
push
cmp
in
jecxz
scas
fs
xchg
lods
xor
push
push
je
ja
mov
pop
xchg
jg
pop
inc
dec
movsb
jo
sbb
xchg
pusha
inc
mov
cmp
out
jo
and
inc
popa
es
jp
and
rcll
sbb
push
jg
sbb
push
enter
pop
addl
sbb
push
aam
or
in
loop
popa
pop
test
mov
adc
orb
mov
or
enter
xchg
and
or
pop
imul
pop
stos
aad
or
push
jns
inc
je
push
dec
mov
mov
inc
out
sti
adc
mov
sbb
enter
mov
pop
mov
mov
sbb
ret
loope
or
push
es
push
subb
push
pop
and
outsl
pop
in
or
add
dec
cmp
cltd
loope
add
shrl
push
xchg
or
add
out
ret
pop
aaa
adc
xlat
mov
mov
pusha
push
stc
pushf
push
jne
sub
or
lea
push
pusha
or
pop
gs
jae
xor
xchg
sub
mov
inc
inc
add
test
xchg
jnp
xor
sbb
outsl
int
jmp
inc
mov
imul
repnz
scas
pop
outsb
push
outsl
adc
push
add
add
sbb
adc
inc
arpl
arpl
and
cmp
and
jns
jne
jmp
push
orl
sub
lds
movsb
jp
ds
cs
dec
pop
adc
jge
add
pop
jg
add
fdivrl
cmp
sbb
adc
test
repnz
and
dec
jnp
and
pop
mov
aad
popa
sbb
sbb
xchg
adc
mov
out
xchg
xorb
scas
add
push
pop
inc
mov
mov
dec
xchg
js
out
jne
loopne
jae
outsl
push
popa
mov
and
lahf
or
dec
nop
nop
inc
cs
pop
jae
mov
das
inc
inc
gs
arpl
pop
sbb
mov
xchg
leave
mov
insl
lahf
jecxz
pop
mov
js
fistpl
inc
insb
jle
wrmsr
jecxz
aad
pop
inc
xorb
sub
je
lahf
cmpsb
push
inc
jae
jno
aad
push
pop
movb
dec
push
xchg
pop
js
inc
or
xor
sbb
sbb
xchg
out
push
pusha
int3
mov
add
in
xchg
filds
movsb
xor
not
xor
pop
xor
shlb
and
or
loop
adc
mov
adc
or
mov
pop
cmp
je
loopne
jg
insl
dec
outsb
dec
push
scas
ds
ss
shrb
mov
dec
add
mov
mov
adc
xchg
movsb
dec
adc
cmpsb
imul
imul
push
add
add
cmpsb
pop
adc
in
dec
shrl
push
js
fidivs
inc
jb
and
push
or
or
popa
or
bound
dec
or
popw
movsb
bound
inc
incl
add
out
inc
jb
push
jb
inc
jae
mov
push
fiadds
mov
shll
js
aad
or
repz
jo
dec
scas
push
jo
or
arpl
lea
push
jns
push
bound
mov
xchg
mov
and
imul
cmpsl
addb
lea
idiv
pop
push
lret
orb
pop
pop
scas
ret
ficoml
cmpsl
push
and
lock
mov
inc
cmp
mov
das
adc
pop
mulps
hlt
adc
fildll
sbb
rolb
cli
shlb
imulb
cmp
inc
sub
mov
or
movl
addr16
jmp
and
jmp
mov
loopne
pusha
aas
gs
xchg
mov
push
repz
add
popa
xor
and
jae
lock
xor
push
andb
or
add
in
sub
sti
enter
adc
xor
out
dec
sub
xchg
ja
push
cmp
push
push
inc
sbb
cmp
sahf
out
push
push
jo
gs
adc
fisubs
ret
test
sbb
repnz
pextrw
dec
insl
add
out
dec
pmovmskb
nop
loop
xchg
arpl
loope
jo
inc
and
loopne
xchg
popf
cmp
mov
lods
lods
lds
mov
mov
ljmp
xor
outsb
shll
add
mov
jbe
adc
mov
cmp
sbb
popf
adc
ljmp
insb
insb
adc
lea
addr16
roll
lods
addr16
mov
push
cmp
clc
add
pop
lea
mov
cmp
pop
psrlq
mov
stos
jns
fs
js
outsb
cmp
sbbl
into
ja
fldl
fisubrs
push
fildl
lahf
enter
xchg
sbb
arpl
adc
js
and
push
sahf
pop
pusha
push
mov
cmp
popa
test
push
push
inc
out
sub
adc
ljmp
mov
das
movsl
lea
xchg
dec
push
adc
jae
sub
les
inc
push
mov
jl
xchg
es
jo
inc
mov
jmp
sti
negl
and
adc
jp
inc
cwtl
cmpb
mov
ret
sub
pop
jge
mov
dec
test
int3
movsb
add
ss
adc
jmp
add
verr
or
jbe
or
int
adcb
adc
je
push
add
jo
add
insl
mov
push
pusha
push
mov
dec
push
mov
mov
mul
loopne
lret
xlat
add
and
mov
dec
popa
adc
add
sub
shlb
loopne
ss
adcl
dec
sub
clc
push
out
sahf
jae
arpl
mov
or
lahf
xchg
icebp
jg
jo
and
mov
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
and
inc
add
insb
inc
add
add
