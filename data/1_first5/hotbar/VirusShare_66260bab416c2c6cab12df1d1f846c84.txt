divl
in
mov
mov
mov
inc
add
add
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
mov
dec
adc
movb
lock
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
jg
lock
push
push
push
mov
push
into
pushf
add
jge
jmp
jmp
stos
adc
push
push
sahf
jp
push
testb
clc
test
ds
jmp
pushl
sar
dec
sub
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
ljmp
cmpsb
push
mov
andl
push
pop
add
xor
int3
aam
cmpl
dec
call
add
mov
mov
in
or
push
push
outsb
iret
negl
inc
cld
add
aam
ds
incl
sti
inc
add
add
call
jle
add
mov
mov
jmp
mov
lock
add
sti
adc
pushl
sbb
pop
dec
push
stos
add
in
in
xlat
subb
cs
loop
inc
adc
popa
mov
mul
or
dec
sbb
int3
or
lods
std
push
push
mov
cwtl
in
push
lock
in
fldenv
add
ss
aaa
mov
cmp
push
in
ja
mov
push
push
push
lods
pcmpgtd
add
fdiv
fistpl
adc
or
ret
add
push
clc
test
je
pop
add
pop
mov
push
pop
repnz
or
movl
sbb
push
jno
add
adc
aad
add
sbb
pusha
les
xchg
dec
sarl
mov
add
sub
in
mull
pop
pop
sub
xorl
pop
sahf
or
jg
mov
lcall
call
clc
push
push
cli
mov
add
in
inc
inc
mov
jmp
scas
adc
push
mov
pop
jge
mov
jns
fwait
mov
push
or
cmp
inc
inc
scas
push
fs
dec
push
and
cmp
jmp
sahf
cmp
fisttpl
mov
adc
hlt
int3
push
pop
mov
jecxz
inc
sub
jb
mov
int
testb
adc
adc
rolb
and
inc
cmp
ljmp
pop
and
cmp
pop
adc
push
mov
add
and
sbb
add
jae
sub
add
mov
fidivs
xorl
push
adc
add
sbb
popa
icebp
sbb
jle
push
fmuls
das
push
sub
xchg
je
push
rorl
push
sbb
dec
lock
add
pmaxsw
call
cmp
jb
idiv
jmp
push
popf
sbb
pop
int3
fistpll
fdivl
push
push
add
push
or
mov
sub
push
jnp
sub
jo
push
rolb
push
stc
stc
fidivl
mov
and
sub
add
mov
pop
xchg
xor
lahf
out
pusha
or
push
or
cmp
and
or
and
fisubrl
repz
push
jecxz
fsubl
je
movsl
aaa
lret
lods
punpckhdq
fildl
out
mov
push
daa
mov
int3
lahf
fldpi
push
xchg
mov
or
mov
mov
pusha
out
add
cmp
sbb
cmp
xchg
sbb
scas
sbb
outsl
and
mov
std
sub
rolb
shll
adc
cmp
or
es
outsb
push
shlb
adc
addr16
sbb
xor
push
test
adc
push
andl
pmulhw
adc
sub
push
enter
and
sub
push
and
adc
cmp
subb
sbb
lock
pop
push
outsb
sub
or
push
xlat
out
inc
sbb
push
push
sbb
or
jne
sarl
add
sub
xor
jg
jmp
pusha
sbb
mov
mov
leave
repz
jg
jae
push
mov
or
mov
pop
pushf
xchg
lods
lock
test
out
or
lahf
lds
push
loope
test
mov
mov
xchg
mov
test
push
push
xchg
push
pop
push
push
adc
repz
lock
fiaddl
jl
or
mov
notl
mov
pushf
or
sti
pop
push
xchg
or
int3
insb
out
sti
cmp
sub
mov
xor
push
mov
in
or
cltd
mov
push
mov
and
sbb
mov
inc
mov
ss
shlb
rclb
mov
sahf
push
sub
aas
notl
dec
mov
hlt
je
cmpl
or
push
jg
lret
mov
fdivs
je
nop
sub
cmp
loop
add
insl
imul
popf
lea
jno
adc
ficoml
bound
aas
xchg
push
mov
in
js
jp
mov
inc
or
mov
add
dec
je
inc
or
push
fwait
and
insl
mov
mov
xchg
xchg
lock
and
push
aam
lret
out
push
addr16
xchg
cmc
push
pop
mov
stc
or
pop
xchg
and
mov
push
and
iret
mov
sbb
out
dec
popa
bound
xor
or
ret
push
mov
orl
fisubrl
jp
lods
push
dec
insl
icebp
sbb
cmp
fs
jge
aas
add
inc
cmp
lock
jne
call
mov
sub
fs
push
js
or
cmp
je
sub
or
je
lea
or
push
push
add
xor
adc
adc
cli
xchg
mov
mov
mov
xchg
sbb
push
push
mov
cmp
mov
pop
sub
enter
push
push
jg
xlat
mov
test
jne
fs
inc
cmp
jl
jmp
pop
and
jne
xchg
aas
pop
push
push
pusha
divl
jmp
sub
push
sbb
sub
add
mov
stos
loope
icebp
mov
push
inc
sbb
loop
sbb
ffreep
mov
bound
and
mov
mov
clc
lock
jmp
push
jns
mov
or
jmp
sub
dec
push
andl
sbb
jge
xchg
mov
cmp
jl
std
and
push
mov
cmp
pusha
adc
dec
lock
adc
pop
ret
push
data16
scas
and
jmp
and
fldln2
push
push
push
dec
mov
scas
stc
test
stos
pop
ja
dec
pop
push
cs
aaa
add
dec
inc
aam
push
mov
ficompl
sub
pop
js
sub
pop
cmp
mov
jge
fchs
mov
jecxz
out
cwtl
cmp
je
movb
jle
mov
mov
adc
incl
jg
push
pop
lea
push
mov
imul
add
jmp
in
cmpb
addr16
and
or
sbb
inc
adc
inc
leave
ret
fldt
ret
icebp
cmp
cmp
push
add
or
sbb
push
clc
std
or
adc
adc
es
pop
adcb
subl
pop
stc
jne
mov
jmp
outsl
add
out
data16
push
pop
push
repnz
inc
repz
push
ja
mov
loopne
or
decb
pushl
cmp
jmp
xchg
rclb
ss
popaw
fcoml
cmp
cld
gs
pop
pop
arpl
adc
shlb
out
adc
loopne
add
nop
test
je
add
inc
test
pop
cwtl
rcl
mov
mov
push
movsb
cmc
lds
ljmp
divb
sbb
push
push
dec
mov
cmpsl
mov
outsb
pop
or
pop
ss
push
push
fcmovnb
enter
adc
inc
cli
mov
pop
pop
xchg
mov
loopne
je
test
adc
or
mov
orl
sbb
inc
sub
add
inc
add
icebp
out
mov
sub
push
ds
std
mov
cmp
rorb
das
fs
cmp
je
cmpl
pop
mov
cmp
jne
push
push
jnp
inc
jnp
pop
into
jo
ret
jl
sbb
js
pop
jmp
fmuls
mov
rol
pop
cmp
push
jl
cmp
leave
push
inc
sub
inc
or
add
adc
or
fcoms
fidivrl
inc
clc
jg
inc
jae
xor
fimuls
movb
or
in
lret
jne
mov
and
jae
lods
adc
cmp
xchg
jg
inc
or
shlb
adc
ret
outsl
xchg
sti
rolb
or
cmp
add
inc
sub
xchg
outsb
pop
and
sbb
outsl
xchg
adc
xchg
cmpl
mov
jne
test
or
dec
push
mov
ret
call
outsl
sub
int
push
cs
pop
gs
xor
sbb
pop
fcompl
clc
mov
mov
ret
push
sbb
mov
mov
push
adc
lods
clc
mov
jge
inc
or
push
or
ds
lret
loop
add
xor
mov
addb
cli
loop
cmp
repnz
pop
outsb
icebp
add
push
cmp
jmp
mov
mov
aam
add
ret
ret
shlb
push
pop
pop
jecxz
out
cmp
inc
cmp
sub
mov
push
mov
mov
inc
mov
jbe
mov
add
or
adc
push
mov
xlat
pop
push
jl
xchg
pop
ljmp
pusha
fimuls
jge
bound
pop
ret
adc
pop
push
or
lret
xor
pop
cmp
mov
mov
cmp
ret
push
orl
jmp
jge
sarb
iret
rcl
sarb
xlat
xlat
sahf
mov
dec
push
les
xor
or
shll
jb
lea
daa
push
shrl
push
mov
and
push
call
add
pop
cltd
jmp
jmp
pushf
dec
jge
mov
sar
inc
fcoms
fisttps
add
adc
mov
pop
pop
jmp
sbb
mov
or
cld
shl
push
movl
jnp
insl
dec
dec
adc
sbb
adc
fsin
jp
ret
pop
stc
test
je
or
gs
mov
mov
jmp
and
push
xor
inc
mov
enter
add
mov
pop
mov
pop
and
sbb
pop
repnz
sbb
dec
add
add
cmp
add
scas
mov
mov
mov
add
xlat
out
lods
or
sbb
das
or
shrl
ret
push
push
stos
js
adc
mov
dec
cs
adc
pop
cmp
mov
push
and
mov
outsb
xchg
arpl
sbb
das
sbb
sbb
test
pop
sbb
add
fmuls
sub
into
adc
pop
cmp
and
xorl
cmpsb
ret
push
dec
fimull
and
lret
or
mov
pop
adc
pop
sub
push
hlt
dec
or
enter
cmp
ja
jo
test
adc
jg
mov
cmp
popf
cmpl
mov
cmp
mov
push
cltd
pop
insb
jp
testl
rorl
push
sbb
push
sbb
adcb
mov
mov
mov
andb
popa
add
sub
add
push
push
jbe
cmp
clc
push
xchg
push
div
jge
sahf
lods
lret
and
jmp
sub
xor
jmp
adc
in
jge
adc
and
mov
dec
es
icebp
adc
dec
mov
lcall
sahf
test
movsb
push
fnstenv
adc
int
jp
jecxz
pop
jecxz
mov
lock
jg
xchg
or
loope
pop
and
add
inc
add
add
mov
scas
adc
mov
lea
out
xchg
pop
testl
xchg
mov
add
clc
lahf
cld
sbb
mov
mov
lock
movswl
loopne
push
or
push
push
inc
sub
jo
js
pop
outsb
cmp
cld
push
in
in
daa
adc
popl
mov
adc
jmp
cmp
je
cmp
and
xor
out
jmp
inc
sbb
leave
adc
adc
sti
sub
xor
dec
fstpl
imul
mov
je
scas
push
and
and
and
sbb
je
cwtl
jmp
data16
or
mov
mov
or
out
mov
push
cmp
cmpl
jns
lret
hlt
std
cltd
pop
inc
lahf
out
scas
push
push
fs
inc
lret
xor
ljmp
adc
push
cs
push
pusha
aaa
outsl
dec
adc
aaa
sbb
sub
in
or
int3
rcrb
add
lret
in
push
or
adc
xchg
scas
mov
gs
outsl
cli
push
dec
push
dec
mov
xchg
or
push
pop
push
lea
push
adcl
mov
jle
add
dec
cmp
inc
repnz
mov
or
inc
les
scas
sub
xorb
mov
inc
dec
daa
jge
mov
pop
cmp
cmc
imull
mov
sbb
ja
push
sbb
xchg
or
dec
xor
mov
ja
out
adc
jo
cmp
imul
sbb
push
cmpsl
lods
mov
mov
movl
mov
mov
test
addl
xor
add
pop
leave
sbb
int
jge
adc
orl
mov
add
pop
sub
mov
adc
iret
arpl
xchg
sbb
imul
mov
adc
inc
mov
js
cmp
adc
movsb
inc
push
lock
stos
popf
aad
test
aam
mov
ret
xor
and
dec
sub
pop
jo
jmp
mov
and
inc
xor
in
xor
or
in
iret
xchg
adc
push
push
push
mov
loope
or
mov
das
push
add
hlt
push
push
xchg
push
in
xor
mov
lods
and
inc
test
cs
xor
adc
lock
je
mov
mov
mov
jo
mov
fbld
stc
in
and
cmpl
inc
adc
sbb
cs
push
cli
hlt
test
adc
movsb
adc
sub
int
sbb
clc
push
xor
mov
lock
mov
adc
dec
adc
fcmovu
imul
dec
or
insl
mov
cmp
je
dec
call
cltd
lcall
clc
add
bound
in
dec
in
fldt
in
jmp
mov
add
mov
inc
xorl
cmp
cmp
pop
leave
push
dec
repnz
pop
mov
push
ud2
subb
addl
repz
dec
and
insb
mov
sub
push
add
push
and
xchg
rcrl
inc
sub
push
test
out
mov
cmp
adc
xor
faddl
dec
test
mov
mov
sbb
and
and
bound
cmp
stos
out
sbbl
and
inc
cmpsb
imul
jno
outsb
fwait
cmp
dec
or
jns
dec
ret
push
insb
mov
xchg
or
push
cs
jo
lea
sbb
and
test
mov
aas
mov
xor
adc
mov
dec
xchg
js
call
ljmp
in
test
add
shl
inc
repz
add
mov
je
push
outsb
fbld
lock
pushl
and
adc
js
repnz
jo
inc
adc
pop
and
and
sbb
aaa
pop
cmp
pop
mov
cmp
addl
add
jge
lods
jne
adc
dec
int
sbb
adc
xchg
sbb
cwtl
rorl
sbb
jmp
mov
fsubrl
push
xorl
or
push
sbb
or
cmp
mov
push
lods
popa
pop
adc
push
sahf
jno
aas
js
sahf
gs
push
push
sbb
push
jmp
dec
sub
cmp
add
pop
hlt
movb
jge
dec
clc
or
fldz
dec
adc
rorl
pop
test
scas
loope
lret
test
ret
dec
aas
mov
xor
mov
dec
popf
adc
lea
push
and
xchg
pop
fs
ss
pop
xchg
incl
test
test
mov
pop
loopne
mov
and
popf
push
daa
mov
pop
adc
xor
addr16
out
mov
test
popf
mov
popf
and
and
pop
lea
mov
dec
push
push
outsb
add
fildl
push
sub
cmp
or
cli
mov
cmp
or
mov
jmp
and
push
sub
shll
or
nop
or
movl
jns
lret
jb
add
pop
insb
je
xor
nop
add
daa
push
cs
lret
cmp
sub
pushf
xor
ds
je
cmp
or
dec
add
mov
pop
sbb
loope
and
sub
rcrl
daa
addb
xor
cmpl
pop
push
and
inc
mov
data16
lock
sbb
test
icebp
sub
repnz
sub
inc
xor
cmp
ret
dec
fldl
fmull
push
lock
loopne
mov
add
and
pop
push
cmp
ret
rcrl
stos
loopne
or
xchg
adc
or
pop
in
or
or
into
sarl
xor
popa
rorb
mov
daa
push
mov
shll
pushf
pop
loope
js
fidivs
test
adcb
arpl
or
out
or
fimuls
dec
push
add
push
addl
gs
dec
sub
jecxz
pop
cmp
xlat
stos
fmuls
imul
or
sbb
or
add
out
roll
orb
inc
fadd
cmp
in
imul
adc
xor
sbb
int
inc
mov
sbb
test
daa
or
push
adc
pop
scas
push
sub
ficomps
cld
je
cmpb
out
sbb
mov
je
cwtl
pop
roll
aam
or
xchg
incl
push
stc
dec
cs
sub
push
in
add
push
cmp
cmp
lods
inc
jbe
pop
cmp
and
push
dec
jmp
nop
push
pusha
icebp
inc
test
shlb
xchg
scas
add
pop
mov
push
sbb
decl
loopne
push
js
int3
or
mov
rcll
xor
push
xchg
or
and
sbb
cmp
or
sub
adc
jo
out
jo
dec
jne
or
fsub
nop
cltd
jno
rcr
sbb
push
jnp
in
aam
js
push
pop
mov
mov
nop
fwait
sbb
cmp
and
cltd
mov
add
cld
ret
or
js
or
nop
popa
mov
adc
jl
dec
inc
sbb
mov
mov
adc
and
mov
fcomip
sti
push
pop
push
out
dec
subb
dec
jmp
xor
idiv
stc
int
jle
mov
fwait
aaa
jp
mov
add
bound
jne
loopne
jbe
aad
mov
jp
dec
les
jo
insb
cmpsl
int
jp
jne
add
in
mov
mov
idivb
sbbl
push
adc
add
mov
or
out
push
or
pop
pusha
rcrb
movsb
sti
sub
mov
je
test
pop
lea
cltd
idivl
mov
inc
mov
xor
das
push
mull
pusha
jl
cmpl
jnp
sti
push
mov
sbb
mov
cmp
mov
jbe
lahf
xor
xchg
fs
repz
sbb
and
lea
clc
add
pop
inc
pop
jg
sti
fists
mov
dec
sub
jge
jmp
cmpsl
clc
mov
mov
pop
hlt
fildl
pusha
or
fists
test
jge
faddl
and
sub
xor
mov
and
or
stc
mov
mov
dec
mov
sbb
mov
inc
fiadds
out
scas
adc
or
xchg
pop
jl
jmp
rol
cmp
inc
mov
xchg
mov
and
clc
fidivl
jmp
outsb
mov
xchg
movsl
push
testb
testl
jne
pop
add
jl
iret
sub
dec
lcall
lds
fdivrl
fmull
outsb
sbb
lea
cmp
cmpsl
push
or
lock
pop
xor
stos
push
adc
and
sbb
mov
or
mov
pop
push
lahf
je
je
int
dec
lret
je
or
jb
in
inc
pop
and
rcll
sbb
cld
sub
cmpsl
jle
add
js
inc
sti
adc
out
xor
xchg
mov
add
arpl
clc
test
call
push
std
pushf
sbbb
adc
gs
mov
xorb
pop
mov
mov
xchg
pop
jne
rcll
shrb
pushf
loopne
jmp
icebp
std
lea
leave
push
leave
xchg
pop
pop
push
jo
pop
and
xor
ret
std
mov
xor
push
mov
push
push
xor
sub
adc
adcb
jns
pop
dec
mov
sub
dec
push
dec
add
adc
out
push
push
or
cltd
sbb
or
loop
pop
jnp
sbb
andl
pusha
lock
or
jp
push
sbb
sbb
nop
nop
push
xor
loope,pn
xchg
adc
push
shlb
jmp
xor
pop
add
mov
pop
sub
mov
ret
mov
xchg
pop
pop
fmull
inc
adc
inc
pop
push
xor
xchg
jne
stc
mov
or
and
adc
nop
sub
and
inc
loopne
mov
dec
mov
push
xor
adc
jo
lea
mov
pop
add
or
inc
and
add
out
cwtl
xchg
clc
jbe
cmp
setb
test
jne
mov
fmulp
or
lcall
mov
dec
dec
adc
lds
clc
lea
push
rcll
shll
jle
je
sub
pop
test
lahf
pop
xchg
jmp
mov
mov
push
or
push
nop
lock
hlt
mov
and
add
call
arpl
xor
adc
shrl
add
pop
lcall
out
jge
fs
into
loopne
sbb
xchg
mov
push
push
or
adc
movsb
add
mov
push
icebp
inc
daa
popa
adc
pop
insl
fdivrs
scas
call
in
cs
add
mov
jge
sbb
push
ret
pop
ror
outsb
outsb
outsb
cli
sub
clc
or
and
push
je
and
je
mov
mov
shr
hlt
pop
and
ret
sahf
pop
subl
andl
rolb
shlb
xchg
addl
jo
movl
data16
les
push
movl
mov
and
stc
insl
lock
bound
push
ja
fadds
mov
ja
pop
aam
mov
arpl
and
xor
add
sub
or
ret
and
push
add
pop
inc
lretw
in
push
nop
dec
clc
setne
rorb
test
sub
int
mov
mov
movsl
mov
fimuls
ret
jne
push
push
sub
add
mov
jmp
divb
jmp
jmp
xor
or
or
mov
mov
mov
or
cmp
dec
and
icebp
scas
inc
xchg
hlt
loopne
rorb
movb
test
mov
icebp
xchg
or
pop
xor
fs
cmp
fadds
jecxz
push
popf
in
inc
or
repnz
add
add
cwtl
addr16
push
dec
add
sub
les
shlb
inc
lock
int
xor
mov
inc
insl
push
mov
out
lcall
push
mov
decl
repz
mov
mov
call
arpl
enter
rcll
int3
shrl
adc
sbb
enter
push
jp
jle
add
inc
fmuls
push
push
loopne
sbb
add
pop
rorb
push
stos
inc
repz
ja
movsl
and
xchg
pop
jg
mov
je
cmpb
repz
jbe
les
jne
adc
mov
roll
dec
and
cmp
add
stos
cmp
mov
roll
pop
fistpl
adcl
stos
or
xchg
mov
add
imul
stos
and
add
or
jecxz
add
lea
push
jnp
lret
out
or
orl
pop
insl
push
icebp
sub
add
cmp
dec
cwtl
movsl
mov
cmpsb
cmp
popf
inc
pusha
mov
rorl
call
clc
and
repz
stos
cmp
add
sub
push
sub
cmp
lods
inc
pop
and
fadd
sahf
pop
call
rorl
jb
add
inc
or
or
int3
ret
jp
mov
outsl
repz
leave
mov
das
xchg
mov
mov
or
shrd
push
cmpsl
add
shl
inc
sahf
adc
sbb
aaa
iret
fisttpl
psubd
fdivl
cmpsl
add
shl
clc
and
es
adc
addl
dec
rorl
in
adc
sbb
jl
fsubrs
in
mov
mov
lock
int3
mov
test
sbb
arpl
popa
cmp
into
mov
push
push
aam
xchg
imul
push
scas
adc
fdivrl
loopne
adc
test
inc
xchg
outsb
adc
inc
addr16
or
scas
sbb
je
andb
repnz
push
fcomps
and
imul
daa
les
pop
push
mov
out
call
sub
aam
lea
push
inc
js
add
shrl
clc
or
or
inc
insb
in
sbb
push
neg
sbb
bnd
repnz
xor
inc
and
popf
fsubrp
jo
dec
push
mov
insb
sub
in
mov
push
inc
cmp
shll
lahf
shrb
add
pop
mov
in
stos
cmp
enter
pop
push
mov
rclb
outsb
xor
mov
dec
pusha
sbb
mov
xchg
xchg
xchg
or
mov
ja
xor
add
iret
jbe
ljmp
pop
push
adc
ja
or
mov
fsubr
adc
mov
jecxz
lods
mov
jmp
ja
shlb
sbb
sub
dec
lret
rorb
sbb
stc
sbb
xor
pushf
inc
push
lcall
loope
decl
pushf
sbb
das
movsb
inc
shll
adc
cmp
repnz
sub
add
pop
xor
dec
or
push
cwtl
xchg
rcrb
push
lcall
push
loope
mov
xchg
out
cltd
lgs
adc
pop
test
mov
mov
add
push
iret
scas
shrb
sbb
mov
js
push
cwtl
mov
xchg
lret
adc
loopne
sbb
shrb
push
mov
and
or
cmp
xor
and
push
stos
sub
or
push
push
dec
les
and
cmp
push
pusha
jg
push
push
mov
pop
inc
shr
call
pop
sbb
add
mov
and
pop
outsl
jo
lods
lret
ja
and
pop
or
push
lods
xchg
mov
inc
and
sahf
or
in
cmp
add
and
repz
inc
das
jle
or
mov
lcall
daa
sub
aas
sldt
cld
pop
push
cs
or
push
xchg
add
bound
enter
inc
xlat
jb
dec
xor
rorb
dec
adc
mov
mov
add
sub
or
stos
jle
pop
cld
inc
mov
jne,pt
in
jle
ds
push
push
sbb
and
sbb
lods
rorb
pop
push
or
mov
sub
xor
push
or
adc
popf
pop
or
sub
ds
addl
pushl
add
add
push
test
adc
pop
push
sub
push
insl
leave
xor
jg
dec
dec
outsl
adc
in
insb
push
sbb
sbb
clc
mov
mov
push
outsl
adc
xor
js
jo
cwtl
hlt
fdivrp
inc
pop
faddl
xor
adc
xchg
push
lcall
imul
mov
or
push
and
mov
push
fnsave
jle
jl
lret
push
cmp
push
dec
lea
decl
cmp
jle
sub
out
dec
cli
dec
pop
mov
sahf
cmp
je
ja
jecxz
clc
fstl
dec
jmp
mov
mov
mov
lret
add
pop
mov
sub
ljmp
adc
pop
in
enter
or
and
sbb
lds
jne
orl
inc
js
test
jno
push
sub
outsl
outsl
testb
and
mov
gs
stos
aam
add
mov
lods
mov
mov
in
in
test
adc
or
dec
or
rcrb
pop
or
inc
pop
dec
data16
inc
mov
mov
xor
cli
inc
xor
xchg
stos
add
cli
add
repz
adc
cmp
mov
dec
xor
test
or
or
sbb
in
jae
add
dec
js
lock
mov
xlat
leave
shll
fildll
or
cli
ja
pop
ret
sub
rorl
imull
fistl
jb
call
call
dec
in
adc
out
and
xchg
or
adc
xchg
data16
inc
or
push
push
and
shl
mov
inc
addl
mov
daa
fcompl
adc
mov
enter
push
cmp
sbb
add
shl
push
outsb
mov
jnp
or
pop
sbb
int
or
inc
add
cs
int3
add
or
andl
xorb
inc
push
stos
test
mov
out
cmpl
fsts
fldl
sahf
adc
push
pop
or
bnd
inc
fsts
jb
adc
dec
push
push
flds
enter
add
add
xchg
lret
std
or
test
push
je
mov
or
mov
sub
cmp
jge
inc
dec
insl
push
mov
pop
push
rclb
inc
icebp
adc
adc
adc
sbb
pop
fwait
and
gs
push
les
aaa
mov
add
sbb
sbb
add
bound
and
adc
jns
pop
adc
in
faddl
aad
fstps
scas
lea
cmp
mov
pop
test
cmp
popf
inc
shrb
sbb
jnp
icebp
cmp
testl
movsl
cmp
negb
out
xor
ljmp
cli
push
mov
loopne
xor
xor
sbb
aaa
rorl
adc
lret
adc
out
ret
icebp
jge
outsb
fwait
movsb
in
daa
fstl
test
fs
lea
pop
adc
pop
mov
dec
out
mov
or
pop
xlat
mov
sub
int
push
sbb
sub
adc
cld
xchg
bound
insl
inc
jge
jbe
jne
sbbl
imul
sahf
xchg
sbb
sbb
xchg
and
mov
les
push
jle
fists
sbb
cmp
jne
imul
lret
sahf
inc
mov
leave
int3
cmp
test
jge
push
adc
xchg
nop
stos
aas
jl
movl
ja
jl
push
imul
push
orb
pusha
add
cmp
mov
test
xor
mov
or
cmc
push
push
jbe
xor
mov
setl
fadds
lcall
push
jns
js
pop
adc
adc
dec
mov
dec
mov
lds
mov
mov
inc
jge
and
and
xor
rcll
cmp
jns
sbb
mov
sub
sub
cmp
inc
pop
add
inc
push
rolb
inc
jb
sbb
mov
mov
fs
add
fstpt
mov
xor
test
pop
out
add
xchg
xor
jne
sbb
jmp
dec
fisttpll
add
add
add
mov
xchg
push
or
icebp
sbbb
aad
add
add
mov
push
fisubl
pop
data16
mov
pop
jmp
pop
push
and
jno
pushf
jp
xlat
xchg
xor
cmp
roll
jge
dec
add
ror
pop
and
jecxz
mov
movl
push
pop
sub
bound
insl
test
loope
notl
and
xchg
add
cltd
push
sub
and
pusha
pop
jae
inc
sahf
push
and
test
push
test
cmp
or
push
sub
xor
adcl
sbb
mov
lahf
and
imul
pop
xor
jg
adc
mov
mov
add
cmp
add
mov
orl
pop
mov
mov
and
lds
shll
rclb
fs
in
inc
push
repz
mul
cmp
setne
je
loopne
pop
repz
sti
aas
push
push
push
rolb
and
adc
hlt
jne
push
push
push
jo
js
pop
push
pop
shl
cmp
dec
xor
inc
jno
outsb
add
adc
push
outsb
pop
rol
lods
inc
inc
adc
or
push
adc
push
cmc
pop
in
lods
mov
daa
xor
pop
insb
and
push
and
sub
adc
and
outsb
inc
imul
add
jg
fldl
and
xchg
jb
jne
push
sbb
stc
daa
push
or
lret
loope
and
add
mov
push
push
push
pop
add
push
sub
add
dec
xchg
push
jo
int3
fwait
push
sbb
jl
orl
cmp
sbb
add
loope
push
out
push
add
lods
cmc
pop
dec
or
lods
daa
and
stos
fsubs
je
xor
or
push
push
iret
scas
cmp
pop
inc
fsubp
sub
adc
push
add
jne
push
fwait
inc
ror
push
dec
pop
sub
popa
pop
mov
lret
sbb
adc
mov
and
lret
stc
add
inc
dec
and
pop
inc
enter
xor
adcl
add
jne
adc
loopne
sbb
push
mov
dec
fs
jo
bound
pop
jmp
push
test
ljmp
ffree
cmp
or
scas
xchg
xor
add
mov
stos
inc
test
xchg
adc
and
mov
out
mov
out
xlat
push
mov
fsts
scas
pop
push
push
mov
xchg
imul
loope
inc
inc
jle
xor
lret
je
xor
or
int3
push
adc
mov
fiadds
in
lahf
mov
mov
pop
dec
fldt
stos
dec
test
fisttpll
push
pop
shlb
push
cmp
or
push
push
cmc
add
fsubrp
push
cmp
leave
jb
mov
ret
ljmp
pop
insb
and
std
inc
std
ss
test
clc
xchg
lock
inc
iret
sbb
sbbb
cwtl
add
sbb
sub
cld
jo
pushw
pop
lods
ja
shlb
insl
push
clc
jb
xrelease
jl,pn
push
push
push
sbb
repz
xor
mov
ljmp
scas
daa
lahf
lcall
add
push
cmp
pop
fmuls
bound
notl
jbe
stos
icebp
sub
call
add
lea
jmp
lods
js
push
inc
add
in
rolb
out
test
mov
movsb
mov
adc
sub
sub
add
fbstp
negl
daa
xchg
into
mov
adc
lods
push
aam
jmp
mov
add
mov
dec
leave
ret
push
jmp
push
dec
movsb
xchg
mov
vandps
stc
dec
test
cmc
daa
cmp
pop
xchg
push
lods
int
mov
pop
inc
xor
into
lock
cmpsb
imul
cmp
je
cmp
je
lcall
lea
add
cmp
jae
push
sub
mov
fcomps
shl
and
daa
sub
mov
sub
lcall
add
ja
push
adc
mov
jmp
cmp
dec
ret
fisttps
mov
mov
mov
outsb
movsb
push
xchg
inc
ljmp
jmp
ljmp
imul
shrl
test
jl
mov
cmp
dec
insl
mov
jg
loope
shl
mov
test
push
jmp
loop
adc
mov
hlt
mov
adc
and
adc
adc
pop
nop
pop
xor
inc
hlt
sub
stos
xchg
fadd
push
pop
movsl
psubusw
cld
jg
pushl
jae
add
pop
or
xchg
nop
mov
jae
mov
pop
add
scas
jbe
imul
jge
xorb
and
jns
push
sbb
adc
cmp
aam
out
iret
xor
cltd
cmp
mov
jne
pop
push
mov
clc
inc
sub
movsl
push
xlat
sbb
inc
xlat
int
push
cmpsb
cmp
add
xchg
jge
or
mov
jo
cli
cmp
mov
icebp
dec
das
push
mov
xor
addl
fsubrs
and
xchg
mov
hlt
jo
dec
or
rol
jne
sahf
push
sti
lret
ljmp
push
mov
rclb
jge
popf
pop
push
ds
or
inc
and
ficoms
inc
push
push
pop
popa
sub
mov
sti
mov
imul
jg
lds
xor
push
mov
cmp
test
cltd
andl
lea
stos
flds
pusha
lock
add
movsb
jb
lea
mov
in
mov
movsb
or
subb
jp
pop
js
aam
or
movsb
cmp
sub
in
pop
push
es
push
cli
sub
imul
jne
leave
pcmpeqw
stos
add
mov
push
ret
add
repnz
enter
push
and
inc
xchg
les
jno
es
push
cmp
outsb
push
pop
sbb
add
int3
outsb
or
or
mov
add
mov
jle
mov
pop
adc
inc
push
push
jne
jbe
push
xchg
dec
dec
jne
fs
cltd
cli
adc
lahf
mov
xchg
adc
ret
test
imul
addr16
cmp
mov
push
rolb
pop
jg
test
icebp
lds
pop
je
fldenv
mov
test
push
pusha
arpl
enter
or
arpl
dec
rolb
sub
cmp
inc
fstpl
pop
mov
push
push
popf
push
lcall
in
addl
sub
cld
xchg
adc
or
stc
inc
in
inc
add
popf
inc
repz
lret
inc
adc
incb
push
xchg
mov
fcompl
or
clc
adc
xlat
adc
xchg
in
adc
adc
jne
mov
pop
scas
test
add
push
sti
mov
test
adc
std
jbe
or
mov
daa
jmp
and
cli
dec
pop
ljmp
dec
push
or
bnd
xchg
add
push
push
adc
flds
cmpsb
pop
pop
push
add
leave
cmp
adc
cmp
cmpsb
pusha
lock
push
or
sub
ret
adc
jmp
pop
mov
add
jbe
adc
push
inc
hlt
lock
jg
xchg
inc
cwtl
adc
dec
movsb
sbb
ja
mov
jne
cltd
aad
iret
jo
fwait
ret
dec
add
mov
add
les
cmp
daa
dec
dec
lcall
stos
stos
jne
sbb
jge
pop
out
call
or
cmp
sub
jmp
cmp
add
cltd
mov
shlb
push
es
in
aas
hlt
xchg
jo
setle
push
add
sbb
scas
xor
inc
ret
inc
mov
push
push
lods
or
mov
loope
inc
imul
in
sbb
sbb
jmp
aas
push
jl
fistpl
push
push
leave
repnz
jl
adc
push
and
in
dec
or
imul
addb
icebp
cld
leave
push
scas
daa
stos
pop
mov
xchg
testb
mov
cmp
push
in
sbb
sub
push
push
push
gs
add
pop
dec
pop
cmp
adc
pushf
or
adc
sub
sbb
mov
inc
test
cmp
test
stos
pop
fldcw
jne
je
movb
mov
cmpsb
shll
pop
jle
xlat
mov
ds
call
fisubrs
shlb
add
pop
int
mov
jne
xchg
cmc
xlat
test
in
iret
add
sbb
jae
xchg
jmp
mov
cld
jne
cmp
push
inc
js
add
pop
outsl
cmpsl
dec
push
mov
and
pushf
pop
mov
popa
in
mov
xor
push
dec
adc
add
or
or
mov
push
xor
mov
popa
arpl
loopne
lock
push
pop
pop
inc
mov
dec
push
je
or
in
mov
push
jp
xchg
or
push
cld
cld
xchg
push
cmp
pop
xlat
test
insb
add
icebp
push
pop
cmc
jae
mov
mov
inc
cmp
pushf
imul
or
xor
in
mov
sbb
lods
in
je
fwait
mov
loopne
add
adc
push
loopne
sbb
nop
loope
jns
mov
jecxz
fidivs
fwait
add
or
fmuls
movsb
xor
or
and
out
pop
pop
sbbb
dec
mov
sub
ljmp
adc
push
adc
pop
hlt
or
in
addb
pop
cmp
outsb
dec
leave
pop
jmp
pop
sar
or
or
pusha
or
mov
std
jo
push
mov
mov
pop
addr16
push
push
xor
add
or
pop
aaa
jb
bound
cs
leave
mov
outsb
fists
insl
add
gs
cmpsl
ret
or
sub
push
mov
sbbb
nop
or
or
cmp
push
xor
sbb
add
jne
xor
push
push
movsl
inc
adc
cld
cld
adc
jge
push
lock
pop
inc
fiadds
addl
sar
mov
push
mov
push
jbe
push
xchg
fldt
add
lea
push
lock
pop
xor
lret
cld
sub
mov
imul
jo
inc
in
cmpsl
fimuls
fcoml
xchg
adc
lock
call
fnsave
in
loop
pop
hlt
mov
jmp
rolb
sbb
outsl
pop
push
sub
sub
add
iret
push
push
add
push
xlat
mov
push
or
cmp
out
movb
jp
xchg
or
push
mov
cmpsl
shrl
pusha
rorb
cmp
jb
push
call
pop
pop
dec
shlb
or
arpl
jae
push
aad
add
inc
or
and
add
lock
notb
jge
add
arpl
test
test
rcll
xchg
scas
daa
mov
cmpsb
push
movsl
rclb
out
pusha
orb
pop
imul
cwtl
xchg
add
mov
mov
push
lcall
arpl
lock
push
mov
cmp
add
push
mov
ficomps
push
push
cmp
movzwl
aad
cmp
xchg
push
xor
into
pop
and
cmp
dec
mov
mov
loope
sub
sub
pop
fstpt
ljmp
test
dec
in
jl
repnz
add
enter
jecxz
int
shrb
mov
push
mov
xchg
inc
lret
ljmp
or
leave
mov
mov
cmp
je
push
lea
push
lahf
adc
add
cmp
jbe
adc
clc
push
sbb
cmpb
push
sub
pop
or
mov
sub
sarb
in
popa
and
call
push
aas
push
adc
shrb
clc
jle
rolb
and
push
dec
xchg
bound
push
clc
add
hlt
push
in
inc
jbe
push
test
jbe
in
mov
and
ficoml
ret
lea
mov
pop
in
es
scas
jl
push
push
je
movsl
mov
dec
sub
fs
test
ja
jbe
lock
xor
push
push
cmp
je
or
push
push
xchg
je
or
rcr
inc
ss
and
cmp
je
push
push
aas
dec
pop
dec
les
push
int3
sub
insl
pusha
pop
shlb
dec
jb
dec
das
sbb
fiaddl
mov
inc
mov
enter
aad
testb
adc
shll
cli
or
outsb
mov
sete
into
gs
call
dec
sbb
push
ss
imul
dec
mov
dec
jne
lods
cmp
shlb
push
arpl
add
jne
mov
or
and
sub
sbb
inc
js
adc
andl
dec
cld
push
adc
add
jb
pop
cmp
xchg
push
cmpsl
cmp
pop
pop
ss
jns
cli
jle
dec
lahf
push
and
jb
ja
pusha
jo
int3
js
lea
in
cmp
ss
loope
je
cmp
je
cmp
jne
add
cmpsb
mov
rclb
pusha
test
push
enter
or
jle
pop
and
jmp
outsl
outsb
pop
mov
cmp
xchg
clc
or
ret
adc
mov
pop
clc
sarb
shlb
pusha
xor
or
pop
add
or
xor
sub
fildll
pusha
shll
xchg
push
add
sbb
mov
mov
dec
cmc
push
xchg
xchg
push
jns
jnp
aaa
pusha
xor
cmp
xor
push
jle
imul
sub
sub
jge
and
and
adc
movsb
dec
arpl
aam
leave
ret
add
cs
add
cld
rcll
aaa
je
icebp
cmpb
or
ja
xor
dec
mov
sbb
inc
aaa
popa
lcall
mov
call
les
push
add
push
sbb
or
mov
mov
add
pop
push
inc
adc
sub
roll
sbb
ret
adc
je
cmpl
in
xor
filds
cli
push
add
mov
cmp
gs
je
cmp
jne
cmc
push
cmp
sbb
add
push
dec
inc
lea
inc
mov
pop
dec
xor
push
movsb
jne
jmp
or
adc
lcall
or
inc
sbb
cli
cmp
jbe
outsl
dec
test
add
dec
dec
inc
jmp
and
fisttpl
inc
and
or
dec
scas
outsb
xor
pop
mov
or
sbb
xchg
clc
lahf
loope
push
lock
ss
cmp
je
mov
lea
or
jmp
lock
and
pop
out
knotw
inc
xor
inc
cmpl
insb
sahf
jne
cmp
notb
cmp
jbe
push
pop
adc
lods
loop
je
sub
jb
push
rolb
shrb
enter
scas
hlt
aam
in
cmp
jne
cmp
push
ja
pop
xor
adc
jl
shll
or
outsl
lret
mov
jmp
loop
jne
mov
cmp
test
mov
insl
rorb
mov
xchg
fldcw
push
mov
aaa
jb
cmpsb
mov
rcrb
cmp
inc
sti
add
fsubr
adc
aas
les
mov
orl
fidivs
test
jne
pusha
movsl
push
popa
xor
mov
dec
push
mov
or
sub
aas
push
add
pop
jae
mov
jmp
dec
shlb
sbb
pop
cld
jbe
test
sub
dec
popa
pop
bound
ljmp
outsb
xor
push
outsl
gs
cmc
ror
cmp
fistl
sbb
and
cmp
or
or
jle
fwait
fwait
fwait
sub
jle
sub
sub
and
pop
cmp
jl
push
jle
pusha
mov
test
roll
or
jb
jbe
mov
fsub
add
test
fwait
and
or
ds
aas
mov
inc
jne
je
outsb
and
push
insb
addb
je
je
xor
and
adc
movb
inc
mov
push
test
cmp
sub
push
sbb
lds
add
mov
inc
push
push
mov
inc
and
je
cmp
inc
outsl
push
mov
push
loop
mov
or
jae
add
inc
push
hlt
jp
inc
es
and
jp
cmp
pop
push
movl
sub
mov
nop
fs
and
and
imul
mov
xor
push
data16
mov
xor
int3
mov
icebp
js
or
in
jb
mov
cmpsl
or
mov
xchg
sbb
insl
mov
cmpsb
push
sub
mov
cmpsl
mov
movb
push
inc
daa
outsb
jo
lea
mov
push
mov
add
pop
jb
sbbl
rcrl
cmp
mov
in
dec
in
loopne
inc
das
mov
or
inc
testl
cmp
xor
ss
pop
lock
pop
jle
stos
dec
daa
mov
add
xchg
iret
outsb
mov
arpl
dec
fadds
dec
shrl
inc
and
jae
mov
insl
and
cmp
dec
cmp
out
je
test
cmp
adc
mov
mov
pop
fbstp
or
mov
subb
push
jle
jbe
push
and
inc
ss
or
lret
or
movb
and
int
mov
subb
scas
test
clc
add
inc
inc
hlt
sbb
scas
jl
add
cmp
xchg
add
mov
roll
push
mov
or
inc
inc
sahf
in
cmpsb
xor
fdiv
and
popa
jne
xor
pop
pop
add
inc
xchg
xchg
inc
sub
adc
xchg
cmp
sarl
call
and
push
lds
nop
cmpsb
xor
sub
mov
pusha
jb
cs
add
cwtl
and
add
aas
ss
dec
adc
mov
xchg
push
inc
push
cmpsb
pop
xor
sbb
pushl
gs
insl
mov
lods
dec
mov
dec
jg
into
push
mov
add
mov
xchg
jb
sub
push
xor
xchg
jne
lahf
jne
and
addl
sbb
push
xchg
xchg
mov
imul
or
jne
inc
sbb
iret
push
leave
mov
cmp
or
in
or
inc
repnz
mov
and
cli
in
mov
test
mov
cs
cltd
ret
loopne
add
mov
rorb
aam
sbb
pusha
push
push
inc
lea
loope
mov
xor
loop
rcrl
push
in
mov
es
push
rol
mov
pop
out
and
jne
sbb
inc
adc
roll
mov
cmpsb
jne
sbb
aas
push
icebp
pop
mov
inc
fdivrl
sbb
das
bound
jns
mov
xor
add
mov
lcall
mov
jb
fcoms
inc
lods
pop
cld
nop
jle
sbb
je
mov
cli
lds
sti
sarl
inc
inc
xchg
in
loope
jge
pop
or
ret
jne
sbb
push
daa
xchg
sbb
xor
outsl
lret
mov
das
adc
iret
adc
fisubrl
aam
fsubr
cmp
in
cmpsl
test
jo
push
push
xchg
pop
push
and
sbb
inc
push
call
xor
push
xchg
ss
sub
jge
pop
cmp
push
incb
shrl
jae
jmp
pop
inc
cmp
je
lea
pop
mov
mov
adc
je
or
jne
mov
jmp
cmp
mov
cmpsb
loop
or
sbb
fiadds
jge
dec
data16
mov
loop
test
movsb
push
adc
cltd
test
jge
cmp
jg
xor
add
clc
je
jmp
add
andl
mov
or
add
enter
sbb
add
lahf
jbe
das
lds
or
cwtl
imul
adc
pop
sbb
mov
jecxz
dec
ret
ffree
jecxz
aad
insb
cmp
push
int
mov
jmp
add
int
or
test
mov
lds
sbb
jne
iret
cmpsl
sbbb
xchg
dec
imul
leave
test
pop
xor
cmp
mov
loop
mov
or
cld
add
pop
lret
push
push
push
or
xorb
loopne
push
add
pusha
subb
push
movsb
sub
xor
push
jbe
fiaddl
mov
cmp
mov
xor
push
dec
lret
mov
push
sub
sub
xor
lret
in
xor
cmp
addr16
sub
cmp
cmc
jnp
sbb
imul
inc
shlb
call
dec
inc
test
out
int
int3
mov
adc
cmp
push
xchg
push
test
push
mov
test
cli
or
js
sbb
imul
enter
pop
sub
push
push
lret
cmpsb
mull
mov
movsb
push
push
out
lcall
mov
pusha
mov
test
or
push
xor
or
sub
sub
adc
in
dec
loopne
cmp
mov
and
pop
inc
add
pop
outsl
dec
movl
loopne
jbe
fs
push
loopne
inc
add
push
mov
xor
inc
repnz
jo
cs
test
leave
xor
cltd
push
test
jns
mov
or
add
pop
lcall
and
or
inc
jmp
dec
xor
or
loopne
sbb
or
out
jne
cld
aam
in
adcl
repnz
fwait
outsl
mov
fadds
add
push
jne
imul
push
push
cmp
and
sbb
cmpl
adc
inc
jl
adc
fucomi
ud0
push
std
adc
jge
mov
lea
lret
mov
jnp
ret
faddl
pop
xchg
shlb
shll
in
mov
dec
bound
or
cmp
lea
and
or
sarl
dec
add
nop
sbb
daa
push
xchg
rclb
imul
pusha
jo
in
in
jo
xchg
mov
out
mov
xor
sbb
out
xchg
mov
ds
orb
jle
sub
lret
push
jne
xchg
sbb
mov
xor
ficompl
push
adc
mov
data16
idiv
push
adc
addb
test
shlb
or
in
out
jbe
sub
ja
mov
push
and
or
jns
inc
out
push
and
dec
mov
or
cmp
sbb
adc
cmp
in
cmpsl
jg
add
cmp
xchg
adcb
mov
into
imul
pop
fimull
add
xor
jo
loopne
fisubl
pmaxub
and
imul
push
loope
or
cmp
in
cltd
inc
cmp
jae
mov
popa
adc
pop
jno
loope
or
scas
dec
cld
pushf
fidivl
js
inc
notb
aaa
sub
lods
in
pushf
or
sub
sarb
pop
pop
sbb
mov
xor
pop
loop
xorb
out
sbb
and
mov
pop
mov
mov
sub
aad
inc
jmp
jbe
int3
mov
add
push
adc
pop
imul
dec
sbb
push
xor
cmp
adc
and
and
nop
add
cmc
pop
ja
inc
clc
mov
mov
cmp
jmp
sbb
xor
testb
pop
cli
arpl
sbb
sub
dec
scas
pop
leave
and
loop
andl
adc
hlt
add
mov
mov
inc
sub
pushl
es
jecxz
push
jae
mov
push
movl
or
cli
popf
mov
push
test
faddl
and
imul
lock
movsl
out
stos
roll
call
inc
pop
push
pop
xchg
stc
cmp
pop
or
cmp
inc
inc
or
pop
andl
dec
sbb
jecxz
mov
cmp
jecxz
add
shrl
sub
js
sub
jecxz
into
outsl
cmpsb
nop
mov
jge
sti
mov
xchg
pop
mov
out
enter
or
pop
aad
fmuls
push
adc
push
mov
mov
test
add
rol
push
lea
imul
insl
sub
sub
test
fisubs
push
andl
push
jg
jmp
pop
sbb
mov
pop
test
mov
pop
out
test
scas
push
repz
lahf
xchg
dec
scas
mov
or
cmp
push
pop
xchg
hlt
xchg
push
lret
jnp
jg
scas
inc
cwtl
push
push
and
out
push
rclb
add
inc
and
push
jecxz
mov
mov
divb
cmp
aad
mov
inc
add
jo
add
mov
cmp
mov
dec
inc
adc
add
insb
dec
push
and
test
dec
mov
insl
inc
pop
repz
out
and
or
mov
or
push
jecxz
push
xlat
clc
push
pop
cmp
push
xor
inc
xchg
push
sub
daa
hlt
mov
jne
mov
testb
sub
or
push
or
sub
je
js
mov
cmpb
pop
cmp
inc
mov
and
insb
pop
mov
sahf
leave
call
std
jecxz
outsl
inc
imul
jo
movsl
mov
and
cmp
out
aaa
dec
dec
pand
in
ret
addr16
ds
notb
test
ja
jae
fiadds
mov
jmp
in
adc
pop
mull
jl
push
and
sub
cld
add
or
rcrb
adc
pusha
mov
jae
lahf
and
or
mov
or
xchg
das
int
ret
sub
sub
lea
test
stos
shrl
repz
lahf
ret
cmc
push
mov
inc
outsb
fisttps
jmp
cs
add
or
fisubs
mov
cmpsl
movsb
pop
cmp
pop
push
js
cmp
pop
pop
inc
and
inc
das
nop
mov
jp
xor
pushl
cli
pusha
test
stos
inc
sbb
and
mov
pop
rsm
xchg
push
repnz
shlb
pop
adc
pop
outsl
adc
sub
mov
mov
aam
xchg
mov
pop
jmp
push
add
cmc
add
scas
pop
loopne
movsl
adc
ds
add
nop
push
in
adc
add
subl
call
icebp
cmp
jne
fcmovnb
xchg
sub
div
cwtl
inc
sub
pop
dec
or
jb
adc
jnp
adc
sbb
jbe
or
push
mov
mov
pop
loope
dec
pop
pop
add
adc
inc
and
pop
js
cltd
mov
xchg
xchg
inc
call
push
lods
jno
sbb
mov
xchg
divl
jns
add
adc
sub
xor
push
mov
fcomps
pushf
je
loopne
mov
mov
add
sub
push
push
or
adc
sbb
ss
jge
or
add
outsb
push
cmc
pop
jns
pop
add
movb
adc
add
dec
push
jecxz
mov
stos
sub
sbb
pop
sbb
and
ljmp
pop
lcall
xor
inc
push
pop
pop
add
sbb
movb
pop
dec
enter
push
and
xchg
adc
sbb
cwtl
nop
and
sbb
loope
leave
dec
pusha
jno
lock
idivl
cs
andl
not
and
lret
lea
or
pop
push
pop
xor
and
push
dec
ret
sub
jbe
inc
jo
iret
xor
outsb
xor
push
out
sbb
mov
xor
fs
rorb
xorb
sub
and
mov
daa
jne
enter
mov
leave
pop
mov
cli
xor
xchg
sub
mov
and
add
rcl
es
call
movsl
push
out
mov
sub
daa
jne
push
scas
add
sub
cs
int
cmp
pusha
or
sbb
mov
and
xchg
sub
and
cltd
lods
push
test
add
sub
inc
push
or
sub
cmp
aas
sbb
or
jecxz
xor
stos
pop
add
lods
in
loopne
xchg
xor
sub
or
cmpsl
inc
xor
adc
add
aad
add
cmp
add
xor
inc
and
xchg
dec
sti
data16
add
sub
je
mov
push
pushf
imul
mov
pop
rcl
into
push
xchg
push
add
clc
mov
xor
movsb
and
out
push
sub
or
push
mov
lods
mov
sbb
cmp
xor
lcall
xor
add
add
inc
xlat
and
add
fs
xchg
sbb
xchg
push
mov
fs
out
ret
aad
or
addr16
out
mov
cmp
jne
jge
stos
lock
jmp
loop
enter
add
xor
push
movsl
lcall
daa
nop
cmp
xchg
dec
xor
push
and
mov
enter
push
sub
xchg
xchg
sub
xchg
and
jp
roll
aaa
out
jmp
sub
nop
out
test
addr16
push
pop
xchg
test
mov
pop
cld
les
insl
sub
push
push
clc
adc
push
push
jbe
mov
out
movsb
inc
pusha
aam
sbb
pop
imul
push
clc
scas
xor
mov
in
mov
add
mov
jl
or
sbb
pusha
push
dec
ret
cmp
mov
outsb
pop
mov
das
pop
mov
sahf
lds
lahf
push
imul
inc
por
popf
loop
and
movsb
push
xor
test
xchg
sahf
fstps
fwait
or
icebp
push
mov
add
cmp
fcoms
popa
or
popf
in
cs
or
inc
inc
movsb
shl
call
jne
fcomi
push
call
or
add
int
orb
repz
xchg
mov
mov
dec
jns
pop
jmp
sbb
sbb
and
adcb
jbe
rclb
stos
jo
loopne
inc
jno
mulb
push
push
mov
rorb
lret
aas
scas
and
sbb
or
int3
push
leave
pop
pop
pop
dec
or
mov
xchg
mov
or
fcoml
cmp
pop
inc
add
fcos
pop
inc
cmp
ret
cmovbe
add
sbb
shlb
sbb
loopne
cmp
pop
mov
push
or
je
adc
xchg
out
or
jne
loop
mov
sbb
xlat
push
mov
jne
pop
je
push
push
fwait
sbb
fimull
or
mov
xchg
outsb
and
xchg
push
divl
jp
or
sbb
add
push
cmp
imul
or
or
dec
add
ja
outsb
loopne
iret
jge
aam
push
nop
loopne
icebp
inc
mov
lret
xchg
mov
scas
dec
xor
xor
sbb
outsb
pop
inc
stos
cmp
in
adcb
add
ljmp
adc
inc
and
andb
adc
xchg
js
xchg
or
xor
jg
or
int
adc
dec
add
in
dec
icebp
pop
xchg
rol
cmp
stos
sub
inc
sub
mov
inc
out
adc
call
jno
dec
adc
inc
aas
push
mov
call
push
sub
push
inc
in
sti
aaa
cwtl
fisubs
aas
lds
int
mov
and
sub
lods
jge
hlt
cmpb
cltd
insb
and
cmc
sbb
adc
xchg
fdivs
push
ficompl
out
inc
push
jle
fisttps
or
pop
les
subl
aas
mov
jmp
and
jns
adcb
shlb
jecxz
clc
loope
push
jae
jmp
inc
xchg
das
mov
pushl
negl
add
mov
ret
mov
jg
mov
add
das
test
xchg
and
and
inc
mov
adc
add
mov
into
push
imul
adc
dec
shlb
sbb
pop
add
cmpl
cmc
sub
sub
rclb
push
call
ljmp
dec
das
or
sbb
cmp
cmpsl
add
dec
sbb
push
outsl
cmp
push
fisttpll
je
aam
push
push
mov
cmp
inc
sbb
shlb
inc
lahf
xchg
rorb
outsb
xchg
inc
push
fnsave
inc
and
out
push
insl
inc
xchg
outsl
xchg
cltd
lret
orl
add
push
jmp
cli
push
push
mov
cwtl
jne
ret
xchg
xchg
fistps
jge
movzbl
push
xor
ja
push
sub
addl
push
xor
mov
inc
rclb
popa
bound
lahf
pop
xor
dec
jp
fnstenv
je
sub
push
fwait
in
mov
xor
push
jmp
push
and
sub
xor
ret
fsubrl
lock
movsb
jnp
inc
mov
sub
lea
push
lea
push
inc
push
loope
loopne
jg
lock
or
sub
imul
iret
rorl
xor
mov
arpl
pop
ret
lock
xor
addr16
mov
xor
imul
sbb
jo
ja
and
pop
cmp
lea
movb
push
imul
or
add
cmp
push
mov
inc
jne
jns
mov
add
jge
jb
addr16
cmp
inc
in
mov
ljmp
jge
cmp
jne
push
sarb
pusha
int
push
gs
or
xor
or
sarl
cmpb
adc
cmp
and
dec
ret
int3
lock
pop
and
cmp
je
xor
inc
cmp
or
adc
jmp
mov
ret
push
sbb
fdivrs
mov
pop
xor
and
jge
add
xchg
mov
sbb
jnp
sbb
in
mov
mulb
push
pop
jns
add
aas
mov
addl
int
xchg
and
pop
scas
fs
sbb
or
into
xlat
insb
or
in
imul
sbb
imul
stos
call
incl
jns
out
fwait
pop
xchg
lcall
je
mov
add
enter
iret
jbe
mov
sub
lret
inc
mov
mov
ret
rcll
mov
sbb
fxch
push
sbb
adc
add
inc
dec
xor
sub
add
clc
ds
push
push
and
and
pop
enter
stc
mov
jle
mov
adc
call
cmc
xchg
pop
mov
orl
lea
lea
add
jl
mov
sub
and
cmp
sbb
push
gs
sbb
add
dec
xchg
push
loopne
shrl
push
inc
sbb
cmp
pop
pop
jno
aaa
je
test
je
push
xlat
push
enter
sahf
leave
iret
adc
adc
sbb
or
daa
and
stc
fcomps
cmp
mov
pop
cmp
daa
mov
loop
sbb
jl
adc
push
sbb
adc
jecxz
and
and
add
repz
jo
and
mov
mov
ret
cwtl
sbb
and
push
cmp
out
cmp
mov
and
jl
incb
aas
cmp
or
sahf
mov
ficompl
adc
sub
mov
stos
mov
sbb
cmpsl
add
jb
pushl
lea
movsl
add
cmc
iret
mov
fistpll
flds
push
daa
fstps
imul
dec
sbb
sbb
cmp
push
adc
sub
mov
lret
cmpsb
xor
and
or
arpl
fwait
into
insb
jnp
pop
sbbl
lret
fwait
mov
daa
repnz
sbb
add
or
dec
rcrl
xor
sahf
inc
mov
sub
dec
lock
ret
cmpsb
jns
enter
push
lock
adc
mov
push
aad
adc
adc
inc
lea
pop
mov
lds
sub
mov
mov
inc
xor
adc
lret
mov
ljmp
sarl
or
or
mov
pop
fdivrl
mov
test
cmpsb
push
es
les
and
or
mov
push
fwait
test
add
cld
cmp
add
inc
je
call
inc
mull
sbb
sbb
std
and
xchg
movsl
and
mov
dec
popa
add
int
jp
imul
movsl
jmp
in
ret
jo
push
add
cmpl
sbb
pop
cmp
aam
sub
jne
pop
rorl
call
mov
cld
and
test
add
sbb
fs
lods
shlb
pop
hlt
inc
cmp
js
movsb
xor
mov
ret
xchg
fcomps
push
iret
cld
or
mov
add
or
mov
lods
pop
rcrb
stos
push
fmull
shlb
xchg
or
cmp
shl
mov
pop
mov
add
mov
jmp
ljmp
aam
jns
es
faddl
pusha
and
xor
loopne
rcrb
pusha
or
rclb
mov
out
insb
and
jmp
or
andb
mov
mov
orl
pushf
and
mov
fs
nop
sbb
cmpsl
add
push
push
mov
or
cli
cmpsl
mov
stos
mov
notl
jg
jg
cmp
cmp
into
or
mov
add
ja
testb
mov
push
sbb
fwait
mov
pop
hlt
call
add
or
cmpsb
add
adc
mov
dec
mov
cli
jle
js
out
mov
cmpb
dec
xor
jne
dec
add
mov
test
xor
ds
jmp
or
nop
test
jl
lods
push
inc
cmp
jge
dec
lahf
cmpsl
mov
test
sub
cmp
pop
adc
sbb
test
loop
pop
push
jge
cmc
xlat
rcl
xchg
pop
add
loope
mov
mov
scas
mov
adc
int3
push
mov
push
xchg
aaa
test
mov
xchg
push
cwtl
pop
and
push
push
or
inc
xchg
or
mov
dec
push
lock
mov
pop
push
jle
add
push
ja
idivb
les
mov
sub
cmp
pushf
add
push
sbbb
mov
pusha
mov
pop
push
mov
push
lea
xor
xchg
pop
mov
movl
mov
pop
inc
add
pop
sbb
push
push
mov
pop
loope
push
and
mov
fldcw
adc
xchg
dec
cs
sub
testb
stos
pop
pop
dec
fisttpll
xor
mov
rol
add
cld
insl
push
incl
shrb
je
cmp
jbe
add
ficompl
xor
dec
mov
je
aam
jnp
pop
adc
and
rorb
sub
int3
pop
sahf
jmp
adc
cmp
jae
cmpl
jo
mov
or
mov
cmp
jle
xchg
inc
sub
pop
imul
jne
cmp
insl
loope
add
lea
mov
js
sbb
sub
pop
and
lods
clc
mov
and
push
mov
xchg
les
aam
xor
push
fcomip
xchg
mov
movsb
push
addb
or
mov
add
insl
and
or
mov
pop
or
aam
adc
mov
sbb
pop
inc
sub
mov
in
add
push
scas
in
xadd
shlb
or
in
xor
pop
dec
adc
add
push
enter
mov
and
aaa
fdivr
bound
int3
aad
bound
dec
jno
nop
inc
cmpsl
cmp
notl
add
lods
sti
daa
mov
ret
cmp
in
mov
sub
mov
jmp
aaa
lret
scas
adc
leave
lods
sbb
ret
pop
add
dec
cmp
movsb
ljmp
lea
ja
adc
je
pop
add
mov
test
mov
jp
sub
adc
xlat
je
xchg
cld
inc
hlt
push
call
inc
cld
push
shlb
test
xchg
xor
cmp
jmp
popa
mov
stos
ret
push
enter
outsl
in
ret
lock
out
arpl
loopne
lds
sarl
mov
loop
repz
mov
sbb
lea
insl
xor
jmp
pop
lea
rcrb
sbb
aad
mov
mov
mov
mov
or
in
inc
or
or
mov
pop
xorb
inc
push
shr
mov
adc
xchg
cmp
jmp
push
adc
dec
lock
cmp
cmp
mov
rorb
or
jle
xor
lock
mov
testb
dec
inc
cmp
sub
jnp
mov
and
cmp
lds
jnp
movsl
daa
ljmp
fmuls
ss
jne
mov
test
std
aam
arpl
pop
scas
xlat
dec
xor
mov
dec
mov
ja
push
sbb
inc
dec
pop
cmc
sti
aaa
or
and
add
inc
sub
jmp
rcl
inc
stos
mov
shrl
popf
inc
mov
or
cmp
je
mov
push
push
mov
mov
lahf
lret
cmp
jne
sbbb
fnstenv
or
repz
bnd
sbb
pusha
sub
mov
pop
cmp
out
inc
xor
fimuls
insl
jne
add
in
hlt
sbb
inc
cmpsl
sbb
repnz
call
cmp
mov
pop
or
adc
xorl
inc
scas
sub
pop
lcall
sub
cmp
mov
mov
mov
and
adc
shr
fwait
std
cmp
jae
lea
jmp
cmpl
inc
cmp
jbe
hlt
pusha
mov
and
add
pop
adc
scas
mov
sbb
shrb
xor
inc
xchg
sub
dec
roll
mov
or
test
jo
pop
fs
jmp
cmc
or
add
fidivrl
or
call
orb
out
push
inc
adc
sbb
push
add
add
pusha
cmp
add
add
in
inc
xchg
xor
pusha
sub
mov
out
push
les
mov
mov
push
sub
lock
cmp
cli
dec
cs
sbb
sbb
push
pop
rcrb
fcomps
cmp
fcoms
add
jne
leave
xchg
mov
repnz
fiaddl
push
inc
fcompl
xor
jle
dec
pop
cmp
mov
xchg
jge
add
cmp
xchg
js
push
xchg
fimuls
sub
roll
dec
arpl
or
add
xor
ja
pushf
rcrb
movsb
jo
push
and
movl
gs
push
je
xor
pop
lock
xchg
loopne
test
mov
fisubl
pop
jmp
xor
sbb
loopne
jae
push
xchg
je
jbe
std
mov
xchg
call
add
mov
mov
cmp
outsb
imul
fwait
mov
or
xlat
movsb
push
cmp
and
cmp
ret
in
orl
lods
cld
or
sbb
adc
adc
xorl
xchg
mov
and
lock
xchg
sbb
add
adc
cmp
cmpb
cmp
inc
mov
mov
adc
push
push
call
adc
jne
sub
adc
dec
xor
sbb
sbb
adc
addl
or
inc
andl
adc
ret
pusha
inc
clc
lea
sbb
and
mov
xchg
mov
add
bound
dec
mov
xlat
hlt
xor
xor
test
loope
inc
adc
sti
lret
or
mov
mov
cmp
aam
ljmp
or
pop
clc
jbe
lcall
jns
dec
dec
clc
jne
mov
push
ficoml
cmp
dec
or
sub
lea
addl
and
stos
test
dec
and
sbb
xchg
or
leave
and
jns
mov
jnp
or
test
adc
pop
mov
push
pusha
andb
cmp
jae
mov
and
call
hlt
jne
push
js
mov
adc
loopne
fnstenv
out
pusha
and
mov
xor
sbb
push
or
add
or
bound
xor
lock
push
push
jp
cld
clc
pushl
cmp
lods
inc
out
lea
mov
mov
or
ret
out
data16
pop
or
xor
sar
sar
rol
fiadds
add
cmp
push
mov
jmp
hlt
lock
je
adcl
scas
mov
push
or
pop
push
pop
and
or
and
movsb
int
cs
and
add
adc
loope
inc
adc
jnp
test
xchg
loop
pop
xor
in
fwait
inc
lea
cmc
lods
jne
arpl
loopne
xor
cmpsb
adc
es
add
outsl
jmp
sub
negb
jp
and
ret
push
cmp
adc
fstpt
cmpsl
jbe
push
mov
cmp
inc
or
or
hlt
sbb
jp
adc
jmp
mov
mov
dec
aas
insl
cmp
imul
inc
jne
sub
das
or
jmp
cmpsl
mov
test
push
hlt
nop
pop
mov
inc
sub
cmp
sub
dec
jnp
ret
gs
adc
outsb
add
adcb
gs
lods
push
cmpsl
xchg
xor
pushf
mov
sbbb
bound
push
dec
or
mov
adc
dec
push
dec
leave
flds
bsf
aam
leave
lds
or
je
test
and
mov
dec
ret
or
mov
dec
mov
loope
mov
jle
mov
push
inc
rsqrtps
mov
xor
mul
seto
inc
dec
lea
sbb
push
mov
jmp
adc
xor
lret
rol
or
jp
loopne
sbb
icebp
fisubrs
push
cmp
data16
adc
movsl
mov
push
jb
pop
and
call
add
mov
mov
stos
shlb
test
cli
in
pushl
dec
rolb
lret
in
sub
mov
jmp
push
xor
and
inc
rorl
je
repnz
pop
jg
push
sarb
add
pop
and
dec
or
cmp
adc
and
test
shrl
cmpb
jl
cmp
aaa
mov
adcb
addb
mov
mov
mov
push
add
sbb
jo
sub
jge
aad
mov
cmpsl
and
test
sub
add
adc
add
push
fsub
es
gs
xor
lock
xchg
xchg
inc
outsl
pop
into
jmp
mov
push
lret
xchg
and
inc
rolb
out
sub
jne
inc
cmp
jne
add
jae
cmp
lret
pop
add
cmp
and
or
pusha
push
xor
arpl
xlat
clc
and
cmpsb
scas
jb
jle
mov
or
inc
aaa
jle
jb
les
cmpsl
addr16
xchg
push
sbb
inc
data16
add
push
mov
cld
xlat
mov
lock
pop
aam
cli
jmp
push
push
mov
mov
sub
frstor
push
fs
and
cmc
mov
mov
or
jmp
cmp
imul
cmp
pop
pop
nop
fwait
adc
movb
add
aaa
adc
and
jg
pop
add
push
clc
out
add
in
mov
add
call
inc
sbb
push
sub
ret
jmp
xchg
xor
jp
push
cld
enter
sbb
add
sub
dec
dec
or
sbbb
mov
adcl
push
mov
movsb
add
test
ret
jbe
aaa
mov
jo
inc
rcl
test
and
xor
sub
mov
jp
adc
call
in
iret
mov
iret
jl
cmp
jmp
clc
mov
sbb
and
je
mov
xchg
mov
popa
xchg
bound
push
out
out
popl
or
addl
jmp
clc
jno
pop
rcll
push
and
sub
icebp
or
out
add
div
jne
sbb
sub
dec
sahf
or
add
sub
je
sti
mov
add
inc
and
add
icebp
cmp
fisttpl
std
cmpb
test
xor
push
fadds
and
jb
pop
xchg
test
jne
dec
fdivrl
push
pushl
xchg
xchg
in
xchg
and
cltd
or
lret
or
inc
loopne
jo
pop
xor
loope
mov
insb
test
pop
push
and
shl
and
jmp
shrb
jbe
aaa
cmp
cmp
int3
mov
test
test
imul
in
push
sahf
mov
push
xorb
add
lds
xchg
pop
out
adc
mov
cmp
jb
sbb
mov
push
xchg
mov
roll
int
push
arpl
dec
add
rorb
fsubrs
mov
in
fsubrs
enter
mov
rcr
jge
add
add
movsl
or
push
lahf
fdivs
imulb
mov
mov
add
xor
adc
push
addb
ret
lods
outsb
pop
lea
repnz
push
lea
push
ret
je
push
out
add
icebp
mov
push
sub
inc
cmpsb
in
aas
mov
push
lcall
loope
in
rclb
addr16
aas
cmp
jmp
movb
mov
ret
jae
sub
loopne
pop
adc
int3
adc
ljmp
dec
mov
cmc
sub
das
test
mov
cmc
push
inc
mov
nop
add
inc
test
mov
dec
dec
sbb
pop
push
inc
loope
xor
add
ss
or
sti
je
mov
sbb
nop
jae
dec
xor
xor
fsubp
xchg
cmp
lea
sub
dec
inc
int
cltd
fidivl
mov
add
lods
push
test
ja
or
cld
or
inc
pop
pop
insl
enter
cli
sub
and
lea
rcl
fildl
cmp
add
jmp
incb
add
xor
and
sbb
or
test
sbb
lea
mov
xchg
inc
cmpsl
je
mov
fistpll
xchg
inc
mov
insl
add
adc
push
addr16
cmpl
adc
outsl
jmp
call
xor
je
lea
cmp
xchg
or
pop
xor
add
push
jmp
das
cwtl
mov
mov
cmc
in
sub
stos
cltd
adc
ret
add
jbe
push
pop
pushl
jmp
add
xchg
sbb
xor
add
xchg
push
push
mov
mov
adc
fidivl
cmp
jge
ud2
testb
sbb
xchg
clc
push
push
mov
mov
sti
inc
cld
push
dec
adc
cmpb
inc
cmp
jb
push
xor
lea
push
sub
sbb
shlb
add
popa
stos
adc
ja
push
out
in
sbb
or
or
ret
repnz
daa
movsl
cmc
inc
sbb
or
test
push
test
push
shrb
cmp
pop
aad
add
add
hlt
push
or
popa
loop
clc
mov
stos
and
ret
pop
movsb
pusha
test
inc
xchg
add
mov
sub
add
fisttpll
add
add
ret
ror
int
mov
outsl
mov
add
mov
pop
test
and
push
jmp
sub
jne
xor
mov
test
call
lahf
xorl
and
pop
mov
scas
jmp
xchg
das
popa
sbb
push
test
add
lods
sub
mov
call
pop
mov
xor
adc
pop
mov
fldl
or
pushf
and
mov
arpl
jae
fwait
daa
cmp
or
or
or
enter
pop
jbe
pushl
aad
aaa
les
cld
je
push
sub
jb
adc
and
cmp
ja
cmpb
push
push
or
or
and
insl
lock
sbb
cmp
or
add
lret
adc
sbb
inc
sbb
ds
sbbl
add
pop
adc
aaa
pop
div
sub
push
inc
or
add
notb
inc
inc
es
ljmp
mov
outsl
pop
into
and
add
mov
jmp
mov
adc
imul
in
shlb
lea
cli
ja
cmpb
out
xchg
inc
adc
push
xor
dec
or
inc
pop
packssdw
movsb
mov
iret
ret
mov
jle
adc
lds
mov
or
push
add
pop
cmpsl
xchg
push
addr16
cmpsb
imul
inc
xor
xor
or
push
dec
nop
test
loopne
les
in
push
xchg
pushf
test
and
xor
dec
cwtl
push
je
fwait
add
xchg
xchg
mov
ljmp
repz
xor
orb
ljmp
xchg
subl
inc
or
sub
pushf
mov
test
fstl
adc
pop
inc
pop
dec
movsl
ret
add
sub
fxch
cld
push
mov
fidivrl
cmp
les
pop
cmp
dec
enter
add
cmp
adc
push
push
mov
sbb
xor
mov
lret
xchg
jnp
dec
mov
dec
daa
movb
aam
mov
or
sub
push
or
aas
sbb
jge
cmc
inc
lock
xor
insl
test
test
xlat
loope
or
or
lahf
sbb
add
fstps
pop
lods
adc
shrb
add
xchg
andb
fisttpll
jmp
hlt
jge,pn
xor
aaa
test
fstl
jg
or
xor
add
or
dec
jb
jmp
lea
cld
js
jne
push
jmp
mov
push
lcall
inc
js
adc
dec
xorb
sbb
mov
cld
js
jle
arpl
jp
inc
fadds
lock
cmpb
inc
aam
in
jo
and
push
and
jmp
fisubs
sbb
aad
sbb
mov
push
xor
sbb
in
nop
sub
add
jl
inc
addl
dec
dec
sub
fldenv
push
repnz
cmp
outsl
into
outsl
mov
mov
mov
and
rolb
add
aaa
leave
dec
test
imul
cmp
mov
pop
push
push
mov
sub
add
cmp
add
sbb
int3
pop
or
mov
xchg
test
es
inc
test
inc
pop
test
xor
jl
push
nop
ja
adc
push
inc
ficompl
cmp
fdivrl
push
fisttps
push
int
mov
clc
add
mov
sbb
lds
nop
cmc
hlt
sub
cwtl
in
or
inc
pop
add
imul
icebp
push
sbb
ja
int
in
adc
jmp
rcrb
loop
and
loop
cli
test
pushf
xor
dec
jmp
jmp
jmp
xor
pop
mov
sbb
ret
sbb
je
jle
fdivrs
or
and
insb
cltd
clc
andl
fldl
cwtl
mov
ds
dec
push
bound
inc
sbbl
cmp
jecxz
aad
mov
jmp
xor
enter
jns
adc
mov
sbb
cmpsl
rorb
arpl
jmp
or
fimuls
rorl
cmp
push
xlat
pop
add
push
inc
adc
xor
push
mov
aas
subl
imull
rorl
hlt
call
mov
push
lahf
push
adc
push
pop
call
dec
pop
scas
test
dec
jo
adc
hlt
adcb
inc
add
inc
jb
and
shlb
loop
gs
add
shl
adc
mov
add
xchg
or
aad
add
enter
sub
sti
sbb
push
mov
jp
popa
push
pusha
aam
mov
inc
les
jne
es
stc
loop
int3
inc
push
add
cmp
int3
iret
add
fwait
lods
loopne
les
cmp
push
and
mov
mov
imul
adc
iret
lock
sub
movsb
mov
or
mov
adc
cmp
hlt
add
inc
lahf
rorl
mov
cwtl
je
cmpl
adc
cli
test
and
cmp
jecxz
adc
push
push
pop
in
inc
push
adc
insl
and
out
les
insb
xchg
adc
push
popa
jecxz
cltd
adc
sbb
int
rcl
movsl
in
inc
lock
adc
mov
fists
add
and
mov
push
imul
addb
mov
xor
lock
lock
popf
pop
mov
movsb
adc
lea
sub
sbb
das
adc
cs
mov
adc
sbb
jmp
clc
push
mov
jg
xchg
cmc
mov
cmpsl
loop
adc
inc
pop
out
jae
or
mov
cmp
imull
outsl
or
jge
push
std
dec
and
or
pop
mov
mov
push
adc
xor
xor
pop
lock
or
es
or
add
push
js
mov
imul
ror
movsb
cmp
dec
lods
lret
vmread
mov
mov
push
lods
sbb
push
xchg
inc
sub
xchg
adc
je
test
inc
jb
xor
mov
xchg
js
mov
adc
sub
stos
enter
shrb
leave
lock
ds
stc
add
cs
insl
cmp
ret
sub
rorl
jg
and
mov
cmp
xor
imul
or
js
add
imul
cmp
dec
push
scas
xor
add
xor
push
jae
insl
push
sbb
add
push
sbb
dec
fucom
add
mov
add
push
imul
fldcw
fwait
mov
push
aas
push
push
inc
push
push
dec
sub
cwtl
dec
push
loope
in
push
inc
cmc
movsb
jno
mov
jle
inc
jbe
jo
xchg
call
add
or
jecxz
add
mov
mov
or
jne
push
addb
ret
adc
call
out
push
dec
outsl
mov
mov
push
leave
es
and
push
sbb
pop
call
cmpb
icebp
ss
jl
and
cmp
mov
jmp
popl
add
add
inc
cmpsl
jo
and
and
dec
test
ljmp
xlat
ja
mov
inc
sbb
jne
xor
in
sbb
jle
cmpsl
fmuls
or
push
daa
mov
sti
pop
fiaddl
add
ret
inc
push
xchg
sti
and
or
add
and
adc
jae
inc
sub
xor
mov
cmp
call
je
or
mov
push
xchg
call
adc
popl
nop
push
insb
pop
add
or
into
testb
rol
cmp
xchg
or
jmp
inc
jne
xor
pushf
lcall
cmp
xchg
mov
cmp
ficoms
adc
dec
iret
lds
adc
or
jne
mov
mov
add
inc
sbb
fmulp
mov
into
stos
xchg
leave
add
dec
fs
dec
shrb
movsl
shl
sbb
mov
pop
loope
pop
lock
cmp
in
fsubs
pop
sbb
cmp
lock
je
nop
and
sarl
push
and
mov
outsl
jne
push
mov
dec
jp
popa
or
loopne
jmp
mov
mov
das
aad
and
out
adc
aam
js
dec
scas
adc
sub
jb
aaa
in
mov
mov
test
push
popl
xlat
mov
mov
popa
mov
or
enter
addb
cmp
jb
mov
cmp
sbb
jb
and
and
xor
mov
inc
popf
outsb
add
ja
adc
add
adc
push
mov
push
add
rolb
sub
pop
add
daa
or
mov
pop
mov
mov
push
sub
test
fwait
or
cmp
je
mov
cmc
add
sbb
dec
add
mov
mov
inc
add
add
jmp
shlb
mov
pop
ret
das
jge
inc
shrl
lods
mov
jl
jg
adc
sbb
push
pop
aad
les
add
test
mov
ds
adc
mov
pop
mov
inc
outsb
mov
and
lods
fldenv
and
test
sbb
lret
fidivrs
sarb
test
hlt
cmpb
mov
mov
push
fdivrs
cltd
fsubrs
ja
or
add
jecxz
aad
xor
pusha
mov
ja,pt
dec
out
push
out
mov
stc
mov
movsl
fsub
sahf
int
push
out
mov
nop
sub
mov
and
pop
inc
aaa
or
fldl
test
pop
push
pop
les
addr16
fstpl
add
push
push
fcomps
adc
jae
and
test
or
rol
aaa
popf
push
push
ja
mov
mov
js
or
in
jns
add
hlt
incb
ret
mov
cmp
das
mov
xchg
adcb
subl
cmp
push
mov
repnz
sub
mov
cmp
add
aam
addb
cmp
jecxz
push
insl
mov
fld
push
ljmp
jnp
mov
sbb
sbb
jp
jecxz
pusha
sub
xchg
push
cmp
ret
es
mov
xor
xlat
or
shll
icebp
push
mov
jmp
add
inc
xor
push
int
fsub
int3
push
lock
aas
leave
sbb
push
popf
js
mov
repnz
jne
and
jle
bound
or
mov
pop
mov
mov
push
sbb
loopne
dec
enter
test
sub
xor
jb
fsubl
test
mov
cmp
insb
mov
fcompl
out
fdivl
sub
jbe
and
fisubrs
cs
stc
mov
xor
in
test
imul
pusha
sub
mov
loope
cmp
dec
loope
dec
enter
add
sbb
ljmp
sub
push
movsb
repnz
popa
or
fstps
adc
xchg
lret
adc
sbb
sub
xchg
and
test
or
cmp
cmp
xchg
lret
inc
or
or
dec
push
fs
adc
push
pop
xchg
out
adc
divb
cltd
pop
adc
mov
mov
pop
mov
add
add
xor
and
jbe
aas
and
or
sahf
fsubrs
movsl
mov
lcall
pop
sar
fidivrs
movb
sbb
sahf
loopne
popa
add
adc
pop
lcall
popa
add
leave
cmp
mov
mov
or
xchg
int3
dec
dec
push
fs
adc
pop
push
xchg
enter
pusha
and
adc
andb
sti
jnp
jo
mov
jg
xchg
enter
cmp
jb
and
xor
jb
and
and
insb
sbbl
or
adc
mov
clc
add
aam
into
add
mov
sbb
xor
sub
xchg
fldl
loope
xchg
ret
test
dec
push
sbbb
scas
lock
push
adc
or
xor
add
sbb
mov
push
mov
cmp
mov
mov
data16
push
rolb
pop
sub
addb
add
out
nop
push
fmuls
xor
sbb
push
imul
inc
push
push
into
jo
mov
cmp
mov
shlb
nop
adc
or
jb
pop
lea
pop
sbb
push
sbb
jo
push
clc
cmp
ja
or
mov
ret
sub
or
out
scas
inc
sbb
push
push
push
ret
scas
inc
pop
push
sbb
cwtl
jge
add
dec
and
inc
or
push
jmp
lea
jno
scas
jno
loope
push
push
push
pop
jo
sti
mov
add
add
sub
cmp
shll
roll
adcb
push
cltd
nop
pmulhw
add
xchg
inc
push
dec
add
push
or
add
mov
push
inc
xchg
pop
mov
or
sets
inc
pusha
and
cmp
outsl
hlt
movsb
dec
repz
mov
inc
add
xor
mov
and
xor
mov
and
add
push
mov
cmpsl
inc
xor
adcb
push
jb
pop
or
push
jmp
sbb
scas
test
xchg
push
test
sub
shlb
add
mov
push
add
mov
fcmove
ss
add
loop
add
mov
mov
pop
push
inc
mov
adc
mov
je
fwait
mov
mov
fwait
out
icebp
loope
or
pop
sub
add
movsl
cmc
pop
add
xor
cmc
cld
xor
fcoml
xchg
inc
mov
add
xor
mov
pop
sbb
xorb
xchg
xchg
jbe
jmp
inc
aam
ss
push
xor
sahf
sub
je
sub
sahf
xor
push
shrl
nop
js
and
cmp
js
stc
test
mov
dec
xor
popf
or
insb
leave
outsb
or
xchg
jo
mov
adc
pusha
pop
pusha
icebp
lods
mov
and
ret
jmp
aam
outsb
push
clc
inc
mov
or
jmp
ret
sbb
adc
cmpsl
inc
orl
push
sub
adc
pop
dec
cmpb
scas
mov
adc
addr16
mov
popa
jne
cmp
jae
push
imul
bound
xor
jmp
mov
test
stos
mov
dec
jle
sbb
add
mov
adc
sarb
or
pop
xor
sarl
push
js
sbb
sbb
push
mov
loopne
add
dec
mov
inc
dec
mov
arpl
jl
inc
ret
inc
loop
lock
pop
pop
or
sub
and
int3
xor
mov
sbb
mov
or
or
fs
and
mov
mov
mov
test
lock
push
outsl
cmp
xor
pop
mov
ret
mov
fcmovne
push
mov
lea
pop
mov
sbb
mov
loope
push
pop
shrb
pop
and
lods
clc
jns
push
add
or
sub
mov
icebp
lea
ja
repz
mov
dec
add
xchg
out
adc
or
clc
xor
out
xor
and
cmp
sub
cltd
xor
push
or
push
or
mov
mov
jl
cmpsb
jl
push
add
sub
xor
sub
sub
hlt
pop
inc
adc
jne
ja
iret
sub
inc
sub
call
int
js
sbb
mov
push
mov
nop
push
stc
push
lods
or
mov
leave
xorl
dec
js
mov
and
sbb
call
icebp
jne
jnp
push
stos
xor
mov
mov
sub
aaa
mov
inc
sbb
inc
add
les
mov
cmp
add
mov
out
std
test
xchg
cmpb
test
push
xor
popa
or
hlt
jne
push
xchg
nop
or
and
mov
xchg
push
es
xchg
add
sbb
cs
add
cmp
jae
pop
call
stos
push
not
cmp
sar
adc
fstl
adc
das
mov
inc
mov
and
rorl
sti
adc
add
popa
add
test
hlt
cmovae
mov
mov
pop
js
mov
mov
push
pop
testl
push
and
push
scas
hlt
mulb
xchg
add
sbb
add
sbb
setae
outsl
fmuls
pop
cmp
pop
dec
lret
inc
jo
xor
cltd
int
push
push
sbb
pop
orl
mov
and
cmp
js
push
push
and
add
or
xchg
ljmp
nop
loopne
mov
sub
dec
inc
jecxz
mov
or
dec
outsb
in
leave
jg
lret
push
gs
cmc
adcl
test
mov
mov
ss
pop
dec
repz
cmpl
mov
add
scas
pop
push
cmp
test
and
inc
xor
les
addr16
nop
mov
fisubrs
out
jp
add
mov
push
mov
icebp
das
mov
leave
add
mov
stc
xchg
cli
fildl
out
adc
and
inc
mov
cmpxchg
loope
movsl
aaa
mov
jno
mov
add
cmp
add
out
repz
test
mov
cld
shrb
nop
jno
rorl
xchg
rcl
inc
xor
fnsave
enter
cmp
push
mov
ja
out
mov
or
xorl
push
jge
notl
push
imul
push
sub
pop
lock
pop
hlt
std
orl
in
test
out
xor
adc
das
or
pop
mov
movsl
add
test
insb
xor
xchg
leave
sti
sbb
std
push
xor
cmp
enter
inc
or
add
mov
or
pop
and
add
iret
cmp
aaa
insb
push
lods
add
jbe
les
xor
cmp
mov
or
in
adc
icebp
lret
sbb
pop
adc
fldt
dec
dec
lods
inc
dec
add
in
jne
or
or
or
inc
push
adc
mov
pop
enter
repnz
loopne
pop
jl
roll
mov
fsubrs
add
in
call
daa
movzbl
jmp
inc
out
cmp
mov
repnz
mov
fs
push
leave
adc
inc
mov
mov
or
in
negb
add
mov
mov
add
push
hlt
mov
into
jnp
push
test
jae
jne
mov
add
jbe
idivb
sarb
jecxz
test
cmp
fmull
test
decl
sub
les
push
push
mov
or
cmp
popf
fstpt
popf
sbb
inc
enter
pusha
bound
shr
fcmovnb
lea
push
mov
sbb
inc
bound
aad
add
mov
inc
dec
loop
nop
mov
aaa
nop
movsb
addr16
mov
jmp
pop
xchg
lock
mov
cmp
jle
push
pcmpgtd
push
mov
sahf
arpl
rcr
sub
push
inc
sbb
push
jo
rolb
popa
loop
testb
jl
mov
add
jnp
mov
cltd
push
dec
inc
push
mov
das
in
ds
add
sub
call
push
xchg
mov
mov
push
outsl
mov
pop
jmp
push
in
in
in
loope
adc
mov
push
loop
out
adc
inc
shl
lret
mov
push
add
scas
mov
sub
dec
lea
pop
sbb
or
fisubrl
xor
mov
adc
mov
test
inc
adc
or
adcl
mov
add
incl
mov
and
dec
push
je
inc
sbb
loope
jne
rorl
push
xor
jae
xor
adc
adc
and
inc
lahf
adc
push
dec
xchg
mov
inc
repnz
std
lock
dec
push
roll
sub
shlb
pop
add
push
jmp
cmp
pop
fiadds
xor
xor
lcall
sbb
jecxz
dec
dec
mov
roll
mov
mov
jp
mov
xor
xchg
test
add
iret
stos
aas
push
sub
inc
push
pop
mov
inc
mov
sub
stos
xorb
xchg
dec
push
sbb
add
lock
mov
xor
pop
and
push
mov
sub
xor
ffree
and
data16
inc
or
inc
mov
push
or
stos
out
or
sub
cmp
pop
dec
es
test
dec
mov
or
dec
ds
sub
mov
add
or
adc
sbb
xlat
pop
jmp
xor
adc
cs
xchg
push
jp
pop
into
xor
in
and
mov
nop
inc
mov
andl
inc
add
inc
jmp
add
iret
mov
or
pop
and
js
fcomp
or
xchg
jo
adc
shrl
and
subl
dec
and
fs
cmp
dec
sub
imul
imul
pop
lret
xchg
add
repnz
jnp
pop
pop
push
xor
sub
js
imul
adc
xchg
test
pop
fs
and
shrb
and
sbb
push
sub
sbb
movb
mov
sub
xchg
dec
mov
push
xchg
add
dec
test
adc
fs
mov
jae
stos
fmull
add
xor
or
sub
sbb
add
pop
aad
clc
cmp
inc
loope
jle
xor
das
filds
andl
dec
jns
rorl
cmpsb
bound
into
xchg
cmpb
nop
arpl
js
lds
loop
push
or
ljmp
dec
sti
and
sbb
jb
mov
pop
and
adc
ret
movups
jne
lahf
mov
dec
add
lcall
pop
dec
sbb
inc
push
xor
xchg
or
mov
push
pusha
adc
pop
xor
xlat
and
mov
mov
pop
lahf
fnsave
sub
outsl
or
out
stos
mov
jno
jno
ret
mov
jmp
add
cmp
lcall
add
pop
es
jge
leave
ret
subb
lea
push
mov
test
sar
jne
pop
ss
mov
faddl
fcmovne
sub
dec
shrb
rolb
mov
and
inc
push
push
add
int3
scas
xchg
pop
lods
imull
test
mov
xchg
mov
jnp
inc
xor
inc
mov
loopne
xor
inc
hlt
dec
fwait
xor
add
xor
adc
fcmovb
pop
or
push
pop
or
loopne
sub
lcall
sub
jb
push
add
lock
fimuls
inc
add
jg
cmc
cmpb
fcoml
ret
dec
sbb
mov
jbe
jmp
push
cwtl
imul
add
adc
fadd
xor
jl
pop
jp
js
jne
mov
scas
jge
push
shlb
or
pop
add
jecxz
add
sbbl
jmp
xor
push
call
xor
mov
shlb
lea
inc
mov
xor
cwtl
pop
jl
cmp
sti
sbb
rclb
push
sbb
push
sub
jbe
add
pop
sarb
mov
out
sar
mov
dec
mov
adc
xlat
push
lds
bound
jle
push
test
adc
subb
pop
jne
adc
push
xor
cmp
decb
push
loopne
inc
test
push
pushl
sub
push
lods
mov
fsts
and
jae
les
mov
and
dec
adc
in
xchg
mov
aas
lcall
push
pop
dec
or
incb
rcll
loop
incl
pop
and
out
int3
adc
jl
push
inc
stos
or
movsb
push
push
sbb
lea
lock
inc
xorb
test
xor
pop
sbb
fisttpll
div
imul
leave
in
in
push
cwtl
pop
adc
mov
pop
add
cmp
push
add
adc
test
inc
inc
add
pushf
cmp
aas
and
adc
clc
imul
fmuls
addb
pusha
test
lret
loopne
and
lock
and
cmp
mov
int
insl
adc
or
push
into
or
jne
add
out
jo
pop
sbb
sbb
cmp
xchg
inc
mov
push
xchg
inc
push
sbb
sbb
xlat
shrb
sahf
out
and
lock
xchg
push
push
push
sub
sbb
push
cmp
mov
xchg
in
ja
mov
jb
and
push
or
mov
mov
and
fldenv
and
rcrb
add
sub
aad
mov
cmp
icebp
dec
ficomps
insb
cmp
sub
je
push
pop
inc
test
scas
enter
insb
sbb
jae
stc
sbb
jnp
mov
andl
add
rorl
cmp
inc
sub
sbb
push
movsl
pusha
test
sub
clc
cmpsl
cld
pop
lea
test
insb
pushf
push
pushf
xor
pusha
adc
pusha
and
cmp
lret
adc
fdivr
mov
cmpl
jbe
mov
push
movzbl
leave
sbb
jl
insl
fldenv
cmp
insl
popf
ss
getsec
out
rcrl
and
aam
sub
or
add
xor
xchg
fidivl
xchg
fmuls
jg
lock
bnd
cmpb
les
cmp
ds
push
shll
sub
jb
add
or
andb
enter
ret
dec
push
cltd
ja
or
js
add
jne
add
or
leave
xor
pop
mov
push
inc
add
fists
aaa
inc
nop
mov
lcall
xchg
lret
scas
popa
das
mov
daa
sub
sbb
stos
lret
cld
push
movl
cmp
cmp
mov
loope
loop
dec
push
adc
sbb
cmp
call
jp
sub
xor
adc
in
adc
adc
dec
jl
xor
sbb
push
and
cmp
dec
adcb
adc
mov
aad
push
xchg
push
dec
adcb
pop
pop
pushf
pop
and
pop
push
loop
enter
mov
cwtl
mov
testb
hlt
imul
cmp
mov
cmp
popl
pop
pop
adc
cmp
jle
popa
sbb
mov
mov
xor
pusha
sbb
mov
or
xlat
pop
scas
or
sbb
cwtl
push
push
nop
movsb
xchg
fsubs
push
mov
push
and
sahf
and
xlat
lret
add
xchg
mov
dec
sbb
xor
imul
xlat
fisubrl
and
pusha
jg
test
xchg
sub
xor
and
push
and
call
repz
jne
mov
xchg
dec
or
pop
out
xchg
xor
loopne
adc
sbb
cmpsl
ret
cmpsl
repz
mov
leave
or
rcrl
dec
mov
mov
out
xchg
rolb
movsl
inc
call
ret
push
ja
aam
orb
shr
hlt
out
jge
aaa
lock
js
ss
sub
mov
je
lds
add
fwait
xchg
adc
inc
cmc
jb
sub
test
nop
add
add
mov
fyl2x
xor
fisttps
ficomps
xchg
test
push
add
scas
ret
movsb
mov
test
cmp
or
push
inc
mov
xchg
lock
add
cmp
adc
lds
cmpsb
ds
out
mov
push
and
xor
cmpsl
dec
out
movsl
mov
pop
js
lret
or
dec
fsubrl
add
xchg
or
jl
jp
inc
mov
fiadds
fmull
ss
fldcw
sbb
mov
cmp
aas
push
adc
fistps
dec
or
inc
mov
inc
test
pusha
mov
or
push
or
xchg
push
push
push
nop
sub
sbb
cmpsl
shrb
rorb
mov
pop
xor
push
iret
pop
sahf
enter
push
shl
je
inc
jbe
rclb
imul
xchg
cmp
ficomps
enter
adc
pusha
inc
dec
dec
jmp
inc
xor
jae
loope
mov
movsb
xor
push
enter
cwtl
insl
enter
mov
mov
mov
sbb
inc
aam
repz
fcompl
in
sbb
aas
sbb
mov
adc
xchg
or
sbb
jo
pushl
or
pop
adc
lods
add
and
cwtl
xor
and
adc
fisubrs
cld
shl
addl
imul
dec
sbbb
pushf
sub
rol
mull
je
fidivl
das
je
lods
dec
jnp
es
sbb
test
xlat
push
pusha
pop
push
jbe
jge
push
in
add
scas
sbb
cmp
stos
mov
nop
and
adc
sub
pop
dec
pop
xor
je
or
lods
test
mov
daa
cmc
bound
pop
push
sbb
insl
mov
dec
shrl
aas
outsl
pop
jmp
loop
rorl
push
adc
xchg
xchg
inc
cs
inc
cmp
xchg
xor
inc
andl
sub
and
jbe
mov
sbb
push
rcl
jg
sti
ret
popa
and
dec
sbbl
lds
cmp
es
or
sbb
jne
iret
push
or
aam
js
inc
enter
push
inc
sub
or
popf
mov
imul
mov
ror
cmp
adc
movsb
xchg
and
aaa
xchg
loopne
add
dec
andl
adcl
xchg
add
dec
pusha
xchg
loope
in
jne
gs
inc
push
sbb
xor
imul
cmp
sub
bound
add
sub
mov
push
ret
fisubrs
sbb
adc
and
ds
inc
or
pop
mov
push
repnz
imul
inc
add
lret
test
call
mov
mov
pop
xor
rcrb
push
daa
popf
mov
pop
dec
xor
bound
cli
jno
repz
and
xchg
push
lret
pop
imul
inc
repz
jbe
sub
sbb
test
dec
std
pop
push
push
cmc
les
dec
test
lock
xor
jb
je
xchg
push
xor
gs
push
or
dec
mov
or
and
in
xor
mov
mov
dec
push
mov
push
inc
add
mov
int
icebp
dec
out
cmp
ss
pop
leave
enter
adc
cmp
push
jmp
and
popf
inc
addr16
pusha
sbb
jg
lahf
outsb
lret
orl
sub
mov
and
mov
test
add
shll
and
pop
push
mov
mov
dec
push
and
ds
inc
jns,pn
xor
mov
and
cmp
mov
mov
xchg
pop
and
and
push
lock
add
stos
sub
mov
shlb
cmp
cmpb
lods
add
out
and
fsubs
inc
xlat
inc
and
add
mov
push
inc
pop
mov
fdivl
dec
mov
push
clc
or
inc
fs
cmpb
xchg
mov
jns
xor
pop
jb
sub
sub
shll
stc
sub
inc
movsb
mov
add
movsb
jno
ljmp
ljmp
daa
test
jecxz
int
pop
sub
mov
mov
lds
inc
lea
xor
mov
mov
cwtl
mov
inc
sub
and
push
dec
js
sub
out
and
aam
xchg
in
das
fadds
imul
push
push
pushf
cmp
mov
sub
adc
mov
cltd
mov
xchg
pop
nop
add
test
pusha
mov
push
popf
inc
push
dec
insl
add
mov
and
mov
jmp
or
sbb
jp
cwtl
mov
mov
mov
xlat
pushl
pop
push
adc
xor
test
sub
mov
xor
adc
mov
and
cmp
jle
ja
ret
jne
and
inc
jae
js
push
aas
aaa
add
cmp
movsb
jb
jb
clc
pop
push
add
push
pushl
aaa
pushl
call
in
sub
sbb
mov
lods
cs
jl
aam
outsl
cmp
cmc
sub
fst
and
aam
sbb
roll
lods
push
ret
add
inc
cmp
nop
adc
movsl
pop
add
gs
aam
mov
inc
lret
cmp
and
outsb
dec
and
add
pop
adc
addr16
dec
or
or
in
and
sbb
movsl
sbb
mov
or
das
sarb
ja
adc
inc
in
or
jge
les
leave
ud0
add
push
pop
pushl
xor
push
lahf
xchg
pushl
mov
clc
shll
adc
pop
inc
ffreep
pop
pop
rolb
mov
test
or
pop
int
dec
push
cmpsb
lods
jp
adc
movsl
cmp
sbb
adc
xor
sbb
lcall
into
sbb
mov
shlb
push
xlat
xor
inc
sub
mov
rorl
lea
inc
xlat
rclb
pop
xchg
push
mov
sbb
pop
sbb
loopne
mov
dec
push
sbb
sbbb
fsubrl
jg
and
mov
test
push
sbb
sbb
inc
cs
sbbl
cmpsb
outsl
push
mov
repnz
ret
push
mov
rcrb
sbb
mov
jmp
xchg
push
inc
push
call
or
pop
ret
xchg
mov
or
sbb
jo
cmc
sub
and
adc
push
sub
sub
dec
adc
mov
in
jmp
xor
mov
cmp
ret
pop
cs
or
movsl
ja
stos
jmp
das
repnz
ret
and
mov
sub
icebp
ret
inc
mov
inc
imul
leave
insb
rcll
cmp
xor
les
fidivl
inc
and
adc
ffree
xor
add
mov
cmp
jns
xchg
addr16
add
addl
vcvtsd2ss
aaa
mov
add
insl
adc
pop
push
inc
cmpsb
shr
cmp
sbb
cmp
push
pushf
mov
cmp
dec
adc
les
loopne
xchg
cs
loopne
and
sbb
faddp
jle
cmp
les
mov
sbb
mov
mov
sbb
sarb
xor
cmp
cmp
push
push
xchg
and
lods
cmp
lods
sti
jo
and
push
or
mov
mov
mov
inc
dec
push
push
in
push
rorl
or
ficoml
add
mov
dec
adc
daa
xchg
dec
rolb
ja
xor
or
jnp,pn
dec
sbb
mov
xor
mov
push
push
and
lods
imul
sub
mov
repz
pusha
mov
std
dec
popa
rclb
aaa
rcr
or
ss
bound
adc
addl
mov
dec
pop
push
and
sub
daa
xor
pop
std
mov
pop
scas
jne
xor
and
gs
scas
sub
or
icebp
shll
pop
xor
adc
mov
lods
xor
mov
cmp
push
push
inc
xor
jb
and
movsl
and
loop
mov
cmp
xor
push
cmp
cmp
sub
mov
das
lret
faddl
sub
mov
mov
mov
jmp
fidivrl
addr16
loopne
sahf
dec
pop
mov
jno
mov
mov
lret
dec
out
dec
iret
js
sbb
addr16
cmp
push
mov
daa
sbb
jmp
add
push
add
sub
fs
es
nop
dec
sub
push
rol
or
pop
push
mov
mov
and
xor
push
mov
dec
pop
fwait
mov
sub
movsl
bswap
divl
jecxz
je
jns
cmpsl
push
xchg
adc
push
jns
jno
mov
push
cltd
sub
push
cmpsl
jbe
hlt
mov
in
popa
test
push
shll
mov
outsb
rorl
in
movsl
rclb
add
xorl
pop
add
rorl
sbb
mov
push
nop
jb
je
mov
sbb
dec
add
xor
in
push
std
icebp
pop
arpl
cwtl
lea
stc
aad
pop
int3
int
jg
in
test
and
jo
push
pop
inc
int3
sbb
into
xor
xchg
je
push
icebp
dec
test
adc
scas
loope
push
jbe
push
adc
jns
inc
stos
lods
jp
aam
push
sub
jnp
sarb
cld
rol
mov
push
cmp
jae
loop
mov
loope
lods
insb
mov
push
adc
push
mov
or
pop
test
jl
inc
lahf
or
cmp
and
pop
add
mov
pop
dec
jp
cmpsb
dec
fld1
dec
loope
lods
inc
adc
inc
jp
cmp
int3
push
cs
pop
rorl
mov
arpl
sbb
xchg
inc
sub
pop
push
xchg
in
sbb
push
in
test
and
movsb
inc
pop
xor
out
iret
adcl
or
shlb
lock
add
and
pusha
fdivrs
adc
push
cmp
adc
add
mov
in
je
fmull
addr16
cmp
mov
pushf
jp
mov
jle
pusha
mov
jp
lods
add
pop
dec
fcompl
cmp
or
xchg
pop
icebp
add
call
test
mov
push
call
mov
and
pop
pop
sbb
dec
je
mov
mov
in
mov
lahf
out
push
mov
aam
xor
test
out
push
and
cmp
sbb
js
inc
insl
or
sub
dec
mov
push
lods
loope
push
shrl
inc
sbb
movsb
in
sbb
test
jecxz
aad
and
sarb
lock
repnz
lea
aad
xor
lea
inc
call
add
rolb
js
pop
jo
loope
dec
or
sarb
and
mov
sub
roll
lds
dec
ret
cli
push
je
je
xor
dec
aaa
ss
or
mov
jo
or
je
aaa
jecxz
mov
mov
xor
jmp
movsb
cmp
sbb
lods
push
lcall
mov
loop
xor
and
jecxz
mov
and
jle
cwtl
cmp
xchg
mov
add
fidivrl
loopne
call
and
mov
dec
movb
lcall
push
pop
test
leave
pop
or
lods
sub
insb
jo
pop
imul
decl
fstps
mov
inc
add
test
imul
or
add
sub
lock
or
or
movsb
idivb
add
mov
out
psrld
test
fs
jp
jp
xchg
xor
push
fistps
xor
pop
aas
adc
inc
insb
inc
cmp
movsb
repnz
push
orl
mov
mov
xor
and
jbe
sbb
movl
or
push
pop
sti
add
xor
insb
sub
push
jge
shlb
jo
lea
je
and
add
dec
pop
or
xor
dec
scas
andb
dec
lea
cltd
mov
dec
rcrw
dec
and
add
add
mov
imul
push
andl
imul
xchg
sbb
and
xchg
mov
in
or
imul
push
call
jp
cmp
push
sbb
inc
inc
cmp
pushf
cmp
push
mov
adc
les
jge
or
test
fisttpl
lcall
jns
mov
push
mov
mov
insl
mov
or
stos
hlt
inc
inc
cld
push
test
dec
dec
mov
adc
std
sbb
pop
add
adc
or
rcr
cmpsb
push
mov
sbbb
sbb
xor
pop
ljmp
jp
adc
mov
fildl
adc
xchg
or
lds
push
shlb
jb
push
mov
xor
test
movsl
adc
xchg
clc
pop
sbb
or
or
mov
mov
cmp
je
iret
sti
pushl
or
je
push
inc
cmp
xor
nop
or
sub
mov
inc
hlt
jne
push
fiadds
dec
dec
call
fs
icebp
pop
pop
nop
cltd
mov
xchg
je
daa
cmp
push
and
sbb
lock
repz
mov
or
mov
xchg
mov
add
faddl
loopne
stc
adc
push
add
xchg
test
mov
daa
pop
call
sub
hlt
adc
lret
fisubrl
adc
sub
add
lea
lods
sbb
inc
movsl
push
add
mov
and
movsb
or
aam
add
rcl
pushf
mov
dec
inc
sbb
jge
mov
inc
in
pop
xor
and
cli
or
and
jecxz
fiaddl
outsb
jecxz
mov
mov
push
data16
push
mov
mov
mov
hlt
incb
cmp
push
push
and
sbb
xor
mov
leave
push
js
mov
repnz
rcrb
lret
pop
mov
loopne
dec
mov
xchg
mov
adc
mov
pause
clc
and
inc
in
ret
and
sbb
adc
fistl
sub
add
arpl
lock
and
and
ds
test
hlt
repz
insl
sub
pushf
add
aam
sub
pushl
bound
mov
loope
rcll
mov
push
loopne
xor
subl
int3
xchg
or
or
jbe
dec
xchg
xchg
or
sub
cmp
sub
hlt
sbb
bound
shll
or
xchg
fldcw
mov
inc
add
lea
inc
add
xorb
inc
inc
pop
jb
add
popa
jns
lods
das
inc
sbb
cmp
jne
adc
inc
scas
or
daa
imul
xrelease
fcompl
push
loopne
cmovno
popf
aas
mov
add
orb
xchg
push
push
imull
add
add
ds
dec
mov
rcrl
sub
mov
dec
in
sbb
stos
mov
ret
jg
push
xchg
push
lea
xor
cld
pop
push
dec
enter
xor
and
ret
inc
bound
xor
inc
adc
xor
imul
inc
adc
mov
mov
add
pop
xchg
inc
les
jo
es
and
sbb
jbe
sbb
cmc
xor
out
push
adc
es
push
push
out
aam
xchg
test
pushf
cmp
adc
adcl
dec
dec
test
mov
adc
xchg
sub
jne
or
adc
push
imul
inc
pop
push
les
and
in
xchg
inc
sub
add
adc
popf
adc
adc
adc
mov
or
and
cmpsb
cmp
prefetchwt1
cmpsb
mov
loope
notl
fildl
and
pop
xor
in
adc
mov
lea
movsl
add
adc
pushf
loopne
dec
popa
shrb
loop
pusha
pop
inc
pusha
xchg
dec
push
push
mov
movb
pop
cmpl
push
notb
sub
sub
test
mov
stc
inc
dec
cmc
mov
jo
cmp
js
and
jmp
sbb
inc
jb
mov
jb
pop
fldenv
test
xchg
jb
test
sub
add
cmp
jne
add
psubsw
ret
ret
add
fsts
call
mov
shlb
inc
pushf
xchg
cld
add
ljmp
fisubl
or
imul
push
orb
cli
or
pushl
jge
cwtl
pop
aam
movsl
sub
mov
push
sbb
mov
lea
fimuls
mov
mov
pushl
mov
inc
ret
add
push
das
inc
sbb
sbb
pop
dec
push
movb
loop
pusha
sbbb
mov
inc
enter
add
popa
push
push
dec
jl
jbe
sbb
movsb
jo
fldl
adc
jno
and
je
or
mov
repz
jge
mov
jb
cmp
ja
divl
cmp
inc
mov
inc
fnstenv
pop
adc
or
jnp
mov
inc
sub
pushf
jecxz
and
les
push
xchg
inc
test
out
cli
sub
jecxz
andb
mov
andb
sbb
in
jne
xchg
mov
mov
pushf
sub
sbb
dec
cmp
pop
xchg
mov
cmc
and
test
mov
push
push
imul
dec
cmp
xlat
or
cmp
dec
jmp
push
lea
adc
adc
es
or
ret
loop
add
sbb
les
mov
jbe
roll
lcall
ret
out
mov
jge
inc
nop
cmp
mov
rclb
lahf
inc
mov
sub
dec
cli
cmp
and
je
js
add
lea
in
and
leave
add
and
andl
scas
nop
jle
xchg
call
es
loopne
aam
xor
push
jmp
push
add
popa
test
xor
push
push
mov
pop
leave
icebp
adc
rep
sbb
popa
dec
loopne
mov
add
cmp
or
jle
mov
mov
xchg
dec
mov
dec
jl
jg
sbb
mov
dec
dec
movl
dec
js
ror
push
nop
lea
fisttpl
push
push
loopne
test
inc
xor
gs
push
imul
sbb
rcrb
aas
push
in
push
popa
out
into
test
nop
pusha
xchg
jo
subb
mov
lcall
stc
rorb
imul
mov
cmp
cwtl
xlat
bound
mov
fisttpll
test
mov
stos
xchg
iret
sbbb
push
inc
add
enter
pop
lods
pavgb
cmp
push
mov
loopne
pop
or
lock
sub
call
pop
mov
pop
sbbl
pop
and
and
xorb
movsl
iret
aas
or
jo
or
ret
sub
add
shll
cmp
add
jg
enter
or
test
adc
push
cmp
loop
push
sub
test
sbb
adc
pushf
and
add
sbb
add
repz
fs
or
add
mov
les
cmp
orl
mov
xchg
sahf
mov
daa
cmp
mov
push
or
adc
push
or
jne
ret
loope
inc
pushf
out
cmp
cs
cmpsb
mov
jl
sub
xchg
loop
insb
add
loop
mov
jns
and
es
and
jno
adc
pop
dec
jbe
mov
mov
dec
jnp
ret
ret
and
fiaddl
rcrb
jl
add
jbe
jo
or
ret
or
int
inc
ds
out
in
mov
jge
add
cmp
cmp
insb
xchg
lea
sub
aad
pop
mov
mov
xor
mov
xlat
iret
rclb
sbb
lods
push
adc
lock
sbb
repnz
ret
xlat
or
xchg
jne
sbb
mov
or
add
sbb
int3
sbb
sbb
push
and
or
nop
orl
movsl
xchg
addb
bound
sbb
pop
cmp
aad
cmp
or
and
cmp
mov
aam
into
insl
into
or
push
icebp
jnp
xchg
cmp
nop
adc
lds
int3
lock
dec
add
sbb
int3
pop
xor
test
sbb
pop
test
je
push
stc
bound
faddl
push
sahf
inc
xor
andl
adc
cmp
lods
jecxz
insl
dec
jmp
push
pop
jmp
bound
jbe
and
bnd
adc
dec
pop
je
cmpsb
push
mov
or
stc
push
sbb
lods
push
hlt
adc
cmpsl
shl
sub
mov
or
loopne
xor
adc
push
add
or
jo
cs
lea
mov
inc
lret
fsubrl
cmp
jne
stos
shll
stos
lods
into
add
and
adc
shlb
sbb
cmpsb
sub
sub
push
shlb
push
and
adc
mov
jg
test
xchg
or
sbb
es
ja
cmp
adc
or
in
inc
adc
in
in
dec
insb
sub
enter
cwtl
xlat
inc
pop
mov
aad
pop
shl
mov
or
aam
mov
aam
jb
fldl
test
movsl
es
add
sub
push
adc
flds
call
call
or
or
push
out
data16
sub
jne
fdivr
ja
mov
dec
imull
cld
mov
xor
sti
lock
jmp
dec
sub
fisubrl
stos
idiv
cld
mov
xlat
fidivs
xor
pusha
and
fwait
dec
lea
inc
sbb
movsb
nop
daa
aas
gs
add
inc
mov
inc
inc
push
sbbb
addb
inc
mov
push
daa
lods
pop
subl
sub
fisttps
push
xor
push
pop
loope
les
push
cmp
loopne
mov
enter
pop
cmp
adc
sbb
push
sub
sbb
push
xor
push
in
lock
mov
sahf
dec
repz
mov
fwait
dec
push
jns
imul
and
pop
fdivrp
es
sub
pusha
sub
push
pop
sbb
addr16
sahf
xor
sub
jno
lahf
fadd
mov
mov
inc
dec
ja
xor
aad
sub
dec
jle
pop
jo
and
adc
test
mov
and
cmpsl
sarb
les
popl
lcall
push
sub
and
and
aaa
test
pop
aam
jne
pop
dec
inc
xor
push
in
movb
fsubrp
lea
push
mov
insb
daa
pop
push
xor
arpl
pop
inc
sub
test
inc
stos
cmp
push
cmpl
xchg
xchg
dec
jecxz
stos
in
pop
mov
es
scas
pop
cld
xchg
and
adc
lret
push
cmp
jmp
add
xchg
dec
fidivrs
test
sub
xor
rorl
add
cmpb
mov
jne
and
and
aad
cmc
loopne
push
bound
dec
mov
jmp
pusha
jne
dec
push
out
sub
repnz
in
add
add
and
and
sub
jle
lea
cmpb
inc
jmp
jmp
add
mov
add
movb
adc
cmp
pop
jl
pop
je
les
adc
push
std
adc
add
xor
test
cmp
sbb
mov
xorl
fwait
jb
push
push
mov
ret
xchg
lea
test
ret
jae
sub
add
jae
push
pop
aas
test
cs
clc
jp
push
sarb
mov
popa
movsl
mov
test
hlt
xchg
push
or
add
mov
dec
or
cmp
xchg
adc
or
jmp
dec
xchg
les
add
popf
jb
jg
cli
push
je
mov
cs
or
jno
loop
clc
jl
push
xor
and
test
mov
sti
mov
test
out
dec
inc
cmp
jb
pop
pop
add
mov
xor
pusha
and
xor
push
lcall
pop
in
decl
add
xor
and
jmp
cmp
jne
xor
xorl
xor
add
adc
sahf
jmp
fldcw
inc
cld
add
adc
dec
test
mov
ret
and
sub
xchg
push
imul
iret
shl
push
test
and
jg
xor
cmp
popl
das
mov
test
adc
mov
shl
lea
sbb
in
inc
add
aam
push
sub
push
or
push
and
dec
jns
mov
notb
ljmp
leave
dec
inc
dec
or
pop
pop
mov
enter
clc
inc
mov
inc
mov
les
data16
adc
xor
sub
inc
sbb
sub
outsb
stc
xor
sbb
jecxz
mov
pushf
shr
test
adc
dec
inc
fmuls
add
lock
add
xchg
inc
in
into
mov
sub
insb
fildl
sar
fadds
or
flds
fdivrs
loop
pop
shrl
jp
sbb
sbb
clc
adc
lods
data16
js
push
notb
mov
sbb
sub
imul
jo
sbb
cmpl
dec
fnsave
xor
cmp
mov
inc
roll
cld
push
add
push
or
inc
xor
outsl
aam
or
dec
jo
popf
pusha
add
mov
rclb
cmp
es
lods
movsl
mov
inc
xchg
add
pop
mov
int3
mov
cli
mov
fcompl
cli
dec
sbb
add
fcompl
aam
mov
jmp
inc
mov
std
cwtl
cmp
fwait
cltd
jecxz
push
lea
iret
mov
add
and
test
loopne
test
pop
xchg
mov
push
adc
shrb
into
cltd
xchg
jne
add
lcall
jb
pop
push
mov
push
sbb
cli
cmp
or
sahf
dec
das
or
jecxz
jmp
or
int
xchg
sahf
inc
dec
sbb
or
les
xchg
in
mov
xchg
mov
int3
add
gs
jae
ss
push
dec
cmp
cmovp
test
or
push
mov
hlt
loop
aaa
xchg
and
push
dec
sbb
jne
cmp
call
or
stos
push
sub
das
mov
or
pusha
sti
fists
pushf
out
mov
pusha
inc
enter
and
cmp
lock
pop
in
sbbw
mov
add
dec
adc
cmp
mov
mov
mov
mov
and
push
pop
mov
daa
adc
jmp
lcall
sbb
imul
jecxz
in
loopne
movsl
lock
ss
lods
or
fstps
pop
cmp
dec
clc
mov
mov
and
mov
push
aad
or
fsts
push
rolb
ja
popa
mov
test
push
shlb
and
push
insb
or
xor
adc
movl
sub
fisubl
sbb
nop
pop
in
or
pop
xor
push
jecxz
mov
sub
mov
je
mov
loopne
or
jb
in
dec
imul
push
pop
inc
push
gs
call
push
fnstcw
cli
mov
in
pusha
xor
push
pop
push
fstpl
cmp
je
jmp
icebp
outsb
sbb
sub
popa
outsb
mov
add
jle
mov
cmp
flds
mov
mov
shlb
xchg
sbb
inc
push
or
add
push
into
jge
dec
mov
push
add
test
mov
adcl
xor
clc
and
repnz
adc
jmp
xchg
or
or
mov
imul
mov
ret
flds
sub
cli
call
or
add
mov
in
loopne
sbb
adc
in
test
xchg
mov
stos
push
or
xor
lret
inc
pop
das
add
shlb
jb
in
call
pop
in
xchg
jne
push
dec
jo
push
das
xor
xchg
add
sysenter
mov
mov
gs
push
stc
lock
jmp
scas
int3
orl
sub
push
add
movsb
ja
add
push
push
icebp
mulb
stos
push
loopne
push
mov
mov
mov
sbb
or
jbe
inc
mov
daa
push
mov
jl
subl
je
inc
pop
or
pop
insb
inc
adc
int
aam
cmp
dec
push
or
mov
cwtl
call
xor
call
mov
sbb
jmp
daa
stos
push
hlt
mov
fists
fsubl
hlt
add
loop
inc
inc
cmc
mov
push
mov
inc
push
adc
and
xchg
inc
xor
sti
or
test
jmp
sub
push
mov
dec
add
inc
test
dec
sti
or
mov
cwtl
xchg
cmpsb
pushf
stc
ret
push
cwtl
adc
in
leave
lock
push
aam
sbb
pop
mov
mov
aad
pop
sub
xchg
in
mov
adc
mov
xchg
mov
ror
imul
xor
ret
sarl
and
jne
fldcw
fsubrl
fst
or
add
sarl
nop
cmp
dec
add
jo
shr
stos
sarl
insl
lock
push
push
fsubr
in
in
push
jae
popa
dec
das
push
and
add
aam
jne
bound
add
das
inc
xor
divl
inc
xlat
inc
loope
mov
dec
mov
popa
orl
add
faddl
add
xchg
out
push
idivb
mov
orb
push
cmpsb
sub
dec
icebp
add
test
pop
inc
push
mov
adc
jmp
cmp
rorl
jecxz
pop
push
push
pushf
cmpsb
and
or
sbb
enter
sbb
sub
mov
fcompl
loop
cld
loope
sbb
mov
setb
jecxz
sub
rcll
ret
push
test
sbb
adc
in
inc
mov
je
pop
inc
push
and
dec
add
jns
or
inc
test
or
test
add
add
ljmp
jl
or
mov
loopne
stos
mov
xchg
dec
scas
faddl
inc
and
ss
lret
push
add
frstor
setl
loopne
mov
xor
xor
push
mov
xchg
stos
rorl
ds
xor
ret
pushf
lock
mov
xchg
mov
dec
loopne
rorl
push
sbb
push
dec
add
jo
js
outsb
mov
fwait
adc
aas
cmpsb
push
jl
cmp
aaa
addr16
mov
adc
out
push
ja
mov
push
lea
aaa
dec
adc
push
movsl
shl
sbb
add
adc
sub
adc
cmp
dec
dec
or
push
repnz
sbb
sub
imul
ljmp
nop
loopne
addr16
sub
test
fucom
cmpsl
xchg
xor
lods
pop
in
sarl
dec
sub
and
outsl
test
cmp
jb
lea
ret
ror
sbb
push
lret
xor
loopne
inc
loop
insb
or
mov
xor
lret
stc
mov
inc
cld
clc
inc
push
mov
outsl
jge
or
mov
sbb
ja
push
popa
add
nop
or
mov
dec
xchg
sar
mov
into
pusha
cmp
cmp
je
fadds
or
nop
xchg
mov
jmp
inc
mov
add
loope
scas
movsl
push
shr
shl
inc
loopne
cmp
xchg
or
pop
ret
jp
lcall
jmp
inc
pop
jb
mov
sbb
jo
aad
add
mov
inc
test
mov
push
daa
stos
push
in
out
push
cmp
or
inc
movsb
sbbb
popf
mov
xor
jle
stos
pop
add
insb
lock
mov
sub
inc
sbb
xchg
xchg
icebp
fldenv
ds
xchg
call
bound
xchg
int
and
gs
push
pusha
push
sbb
inc
pop
mov
adc
test
add
sub
xor
jns
fildl
xor
pand
sbb
inc
push
mov
cmp
lock
popf
jmp
add
fnsave
pop
cwtl
in
hlt
push
jg
aad
or
fidivrl
outsb
je
push
or
fidivl
add
mov
adc
mov
dec
pop
movb
not
xchg
push
mov
daa
mov
enter
inc
or
jae
mov
push
push
jae
arpl
iret
repz
push
je
in
xlat
sahf
inc
or
push
or
cld
imulb
or
cmp
push
inc
or
and
sbb
inc
sbb
xor
add
push
daa
jb
and
mov
das
xchg
jnp
mov
cmp
pop
mov
rcrb
cmp
fs
sar
cmp
je
pop
out
push
or
shl
mov
cwtl
fnsetpm(287
adc
fwait
movsl
cmp
mov
xchg
sub
add
sub
fsub
negb
insb
movb
xor
xchg
jmp
push
pop
sbb
jge
dec
mov
mov
jnp
mov
subb
pop
xor
jp
xor
xchg
aaa
mov
dec
xchg
out
jge
mov
sub
outsb
jo
pop
add
and
icebp
and
adc
aaa
xchg
jb
jb
loopne
mov
shlb
dec
sbb
js
or
call
and
sbb
dec
pop
shll
test
subb
dec
loopne
adc
cmp
mov
inc
out
mov
mov
mov
outsb
or
jl
rclb
rorl
mov
mov
fwait
or
filds
and
add
aas
in
ss
outsl
pusha
mov
out
xorl
add
or
cmp
pusha
sub
test
push
nop
lcall
inc
and
add
cmp
imul
test
mov
mov
fsubr
mov
and
sti
or
inc
cmp
mov
test
inc
mov
scas
cmpsb
mov
inc
and
pop
cmp
jge
mov
imul
add
adc
and
add
push
sbb
sbb
pushl
cwtl
loope
sub
push
fadds
sbb
or
sbb
add
nop
je
insb
sbb
pusha
stos
sbb
add
lcall
sub
daa
sbb
cwtl
icebp
cltd
xchg
aas
mov
sbb
adc
inc
call
ficoms
clc
adc
and
mov
cmp
jne
pop
push
xor
jle
ss
test
shrl
pcmpeqw
or
adc
jne
or
add
or
mov
adc
add
sub
inc
loopne
inc
popa
add
jbe
std
xchg
fildll
jmp
cmp
sbb
mov
jne
cs
sub
xchg
lret
or
cs
add
mov
ja
rcrl
inc
mov
jb
mov
or
outsb
shr
add
jnp
leave
lea
inc
dec
test
emms
inc
or
lock
test
dec
jne
fidivl
jmp
mov
dec
fmul
xorl
insb
sbb
jo
mov
inc
jg
sbb
rol
ljmp
shl
ret
mov
sbb
test
xchg
mul
push
lea
add
ret
mov
adc
scas
dec
push
imul
insl
lds
clc
out
test
icebp
andl
fildll
cmp
fnstcw
sub
mov
xchg
pop
mov
jns
pusha
sub
es
push
out
add
iret
pop
cmpsl
loopne
cmp
pop
in
pop
dec
pop
loope
push
mov
mov
iret
out
inc
xchg
out
ja
sbb
add
mov
stc
push
adc
jl
dec
mov
stc
mov
cli
clc
push
dec
lock
stc
je
icebp
jne
ds
rcll
xorl
mov
movsl
dec
fwait
inc
lahf
aad
xchg
cmp
jne
aad
lea
pop
sub
push
add
push
ljmp
insl
addr16
xchg
mov
daa
ret
adc
jne
stc
int3
shrb
mov
mov
inc
test
clc
add
clc
mov
stos
cmc
dec
rorb
jg
loop
jmp
cmp
push
scas
or
insb
cmc
int3
or
xchg
cmpsl
pop
invd
xchg
jnp
inc
pusha
mov
bound
dec
or
add
push
push
les
addl
add
ret
sarb
cmp
arpl
icebp
mov
dec
lea
mov
fiaddl
add
ret
or
push
idiv
xchg
sbb
add
sub
push
cld
mov
push
mov
ds
cmc
or
scas
jo
neg
cmp
and
mov
adc
rorb
loop
test
sbb
testl
mov
rorl
test
sbb
lods
outsl
sub
jnp
mov
je
fs
pop
pop
fs
pusha
inc
push
sbb
insb
insb
push
inc
loope
add
dec
insb
mull
sbb
lds
pop
testl
je
cmp
je
mulb
repnz
roll
mov
and
iret
je
xor
ss
push
lock
push
sub
cmpsl
js
xchg
inc
pop
xchg
jmp
lea
pop
fdivl
outsl
or
sub
push
add
lock
dec
js,pn
into
adc
lock
dec
inc
cs
lock
jl
add
push
jl
jbe
adc
mov
sub
push
out
jp
dec
ss
out
adc
mov
jbe
cld
cmp
and
add
push
mov
das
cmpsb
mov
pop
lea
rorb
ret
pop
cs
pop
loope
cltd
pop
ja
inc
xchg
lock
xor
mov
into
rorl
mov
loopne
testb
and
jne
sahf
add
jb
xchg
adc
inc
orl
test
je
test
ljmp
add
adc
and
and
inc
pop
adc
ret
mov
xchg
addr16
sbb
jns
nop
push
adc
pop
cmp
push
push
jge
jne
aam
rcl
xchg
xchg
pushw
mov
mov
and
popa
push
lods
fildll
addr16
push
aas
jne
sbb
push
xor
xchg
fsubrs
inc
es
jb
xchg
stos
or
mov
mov
xchg
mov
cwtl
fidivrs
sub
lods
sub
push
test
sub
fimuls
mov
je
sbb
pop
fisubs
add
pusha
xchg
xor
push
push
and
dec
push
lea
mov
cwtl
push
adc
sub
aam
xchg
push
int3
push
lret
push
or
imul
mov
test
xchg
jbe
stos
or
loopne
or
and
adc
call
sbb
lock
sbb
adc
fs
adc
imul
loopne
and
pop
arpl
mov
mov
aad
sarl
sbb
int3
push
mov
out
lea
adc
ja
fmul
inc
cmp
inc
loopne
sub
xor
mov
adc
add
or
test
and
push
dec
mov
cmp
je
push
mov
aaa
xor
cli
aas
mov
mov
mov
mov
jg
adc
test
insl
cmpb
dec
sbb
add
inc
sub
add
pop
xor
push
scas
loope
or
push
mov
adc
and
add
or
lods
push
sbb
mov
cmp
mov
jo
push
pop
into
jecxz
dec
enter
jecxz
xor
in
cmp
inc
and
ja
sbb
lret
push
clc
mov
inc
verr
xchg
xchg
ss
inc
adc
adcl
iret
jecxz
dec
push
or
sahf
xchg
popa
sbb
cmp
movsb
fsubr
mov
mov
cmpl
adc
push
gs
push
or
lods
mov
jo
outsb
xchg
sub
mov
jo
lret
fs
push
push
test
mov
pop
pop
into
test
mov
xchg
mov
test
add
add
xlat
aam
sbb
push
sbb
jae
cmp
es
out
jo
ds
leave
mov
mov
sahf
cmp
push
xchg
popa
cwtl
add
xor
or
cmp
and
cmp
jmp
inc
cmp
mov
mov
js
aaa
sar
mov
cmp
and
aas
mov
test
mov
sbb
jne
inc
lcall
dec
cs
dec
jae
push
push
push
je
add
imul
out
mov
or
adc
push
pop
lea
sub
hlt
repnz
push
pop
push
adc
or
daa
mov
and
ret
push
push
add
and
lods
mov
mov
call
inc
dec
or
cld
test
jp
jp
push
push
cmp
aaa
aas
adc
mov
sub
imul
add
push
imul
cmp
aad
nop
inc
in
imul
std
and
stos
out
shll
cmp
orb
daa
mov
xchg
mov
adcb
in
pusha
shll
stc
push
dec
add
sbb
xor
sub
hlt
rorb
mov
xor
arpl
mov
inc
in
push
pop
sub
test
mov
inc
rcll
xor
inc
js
xchg
loope
decl
xchg
fidivrs
push
xor
bswap
int
repz
mov
cmc
sub
mov
inc
mov
mov
repnz
add
jp
rorl
adc
push
and
aam
test
cwtl
mov
pop
sub
push
je
or
xor
sub
pusha
mov
push
xor
imulb
push
push
or
jo
push
push
mov
dec
xchg
fimuls
add
push
or
jb
pop
add
lret
mov
add
push
xor
pushf
and
fbld
mov
sub
sub
mov
in
nop
cld
jle
neg
sbb
push
cmp
ret
js
enter
inc
repz
je
jae
push
lcall
add
and
jp
outsl
inc
push
sub
dec
xor
push
test
or
xor
and
mov
daa
mov
sbb
lcall
insb
xor
sahf
pop
inc
sbb
dec
jp
andl
jne
pop
mov
rclb
inc
js
inc
jo
or
lea
outsb
in
cmpsb
int
push
pop
lods
jle
inc
pushf
cwtl
loop
lea
and
ret
out
into
inc
mov
ss
push
inc
das
shll
imul
add
sbb
pop
pop
pop
pop
jge
sbb
ret
roll
jns
jb
outsb
or
and
add
mov
in
adc
jl
andl
adc
sbb
and
push
dec
dec
xlat
pop
add
or
mov
fistpll
mov
dec
xor
pop
or
mov
dec
outsb
mov
add
adc
push
xor
add
movsb
shll
pusha
adc
aad
icebp
push
icebp
dec
dec
fldt
loop
dec
push
mov
add
pop
subb
and
jl
sbb
push
inc
dec
cmp
mov
loope
jl
or
movsb
push
je
mov
adc
push
mov
xor
shr
pop
add
icebp
jno
jecxz
adc
pop
inc
push
inc
repnz
call
sbb
fadd
inc
pop
mov
jmp
addl
pop
dec
push
sahf
pop
pop
fbstp
divb
pop
xchg
jecxz
push
es
or
or
or
xor
sub
mov
add
add
add
cmc
jp
cmp
add
pop
js
sbb
testb
jl
fiadds
or
mov
jl
mov
call
dec
jl
loope
xor
pop
pop
add
xchg
xor
jl
inc
sbb
int3
xor
sub
inc
mov
push
mov
push
mov
inc
jnp
dec
lret
mov
lahf
sbb
dec
ds
addl
aas
fcomp
dec
mov
mov
rorb
jge
push
fadds
and
popf
jb
mov
lret
add
push
jb
add
jmp
lea
inc
mov
push
push
test
dec
pop
xor
je
xor
push
cmc
mov
subl
das
icebp
fisttpl
push
jne
pop
imul
pop
mov
sahf
adc
imul
movb
push
push
push
test
mov
sbb
sbb
fs
loope
adc
add
inc
xchg
xchg
mov
sbb
lods
ret
or
pushw
pushf
xchg
inc
xlat
adc
push
aam
mov
mov
cmpb
movsb
adc
pop
push
outsb
adc
mov
pop
and
or
cmp
jle
xchg
push
pop
andb
ret
mov
jmp
sbb
int3
popf
fistpl
outsb
movsb
sbb
nop
push
push
jmp
lea
subb
pop
mov
mov
fisubrl
mov
insb
das
out
dec
clc
loop
je
mov
jmp
push
ret
add
addb
pop
mov
xchg
add
or
in
adc
mov
addr16
mov
dec
add
sub
push
xchg
sub
cmp
mov
out
and
sub
inc
enter
inc
imul
lret
test
add
je
push
std
gs
mov
jns
movsb
adc
sbb
inc
imul
daa
add
or
adc
mov
lods
les
or
mov
ss
jmp
inc
add
xchg
push
lret
and
clc
dec
and
sbb
pushf
mov
outsl
jne
or
jmp
mov
aam
lods
shlb
scas
sub
jbe
data16
decb
inc
adc
mov
in
pushf
pushf
add
inc
je
fbstp
es
and
pop
clc
xor
add
cli
xchg
sub
sbb
ret
mov
mov
mov
pop
mov
or
jae
lods
mov
jo
out
or
dec
add
add
sbb
sub
dec
cld
test
das
jbe
and
mov
decl
lcall
into
scas
rcrl
dec
insb
add
adc
pop
add
mov
mov
cmp
dec
iret
mov
jge
adc
sbb
xchg
mov
cmp
cmp
and
rcrb
sub
test
pop
int3
and
ds
push
in
shlb
mov
sbb
jbe
add
dec
dec
jnp
and
aas
or
scas
dec
dec
cmp
pop
xor
cmpl
cli
ret
jle
js
cld
push
movb
test
in
jge
movl
or
out
cmpsb
outsb
fs
les
mov
cmp
cmp
push
loopne
inc
dec
js
popf
sbb
mov
insb
std
stos
sbb
mov
aam
fimull
adc
xlat
out
lcall
sbb
jb
jge
leave
sub
push
dec
or
imul
in
clc
in
daa
inc
adc
je
push
lock
mov
pop
adc
es
das
sub
lret
xchg
jecxz
add
and
jno
pusha
dec
mov
mov
pop
pop
push
mul
je
lds
mov
lcall
mov
dec
dec
sub
adc
sbb
and
rolb
add
add
or
cmp
xor
and
fisubrl
xor
add
loope
sarb
pop
cld
jecxz
outsb
cmpsl
std
cmp
pop
jmp
sbb
add
jbe
movsl
add
insb
insb
sbb
test
mov
into
or
xor
ud0
mov
xor
testb
movb
iret
enter
popa
push
cmp
sbb
ds
sub
ss
fadds
adc
add
adc
pop
sub
cmp
mov
mov
mov
lea
add
shll
mov
sub
xor
jns
jbe
cmp
js
lods
es
dec
and
or
andb
sub
pop
jg
xchg
push
lret
sti
adcb
ss
in
or
xor
jbe
call
jo
adc
jle
into
sbb
lcall
pusha
fadds
sbb
xlat
adc
push
ss
adc
or
hlt
enterw
sar
push
sbb
loope
sbb
mov
mov
pop
clc
xor
js
xchg
cmp
sub
pushf
xchg
and
push
jmp
inc
les
or
lea
mov
dec
mov
lret
das
push
push
popa
push
roll
cli
push
push
adc
nop
in
sub
inc
jae
popf
pop
or
fs
std
jle
xorb
jno
or
ret
push
mov
lea
push
cmp
aas
push
test
mov
mov
mov
cld
lea
aam
out
loop
sbb
pop
push
pop
scas
js
dec
dec
mov
xchg
scas
sub
loopne
pop
testl
push
test
in
cmp
and
adc
aam
or
or
cmpb
inc
lcall
fsubl
gs
inc
cltd
sbb
mov
and
sub
push
inc
xchg
ficompl
add
jne
push
out
in
nop
push
pushf
lahf
add
into
cmp
mov
leave
xorl
xchg
shl
inc
int3
xor
jbe
testl
adcl
fbld
aaa
push
pop
add
xor
cs
jg
lcall
and
andb
insl
jne
ds
es
xchg
mov
stc
push
sub
scas
jae
push
push
cwtl
sbbb
cmp
dec
jl
movl
cltd
push
push
push
cld
or
add
cmp
xor
or
and
jne
sub
xchg
push
insl
or
sbb
gs
dec
lods
aas
inc
push
and
inc
testl
adcl
mov
pop
roll
push
sarb
adc
scas
add
xor
pop
push
imul
push
mov
out
mov
mov
cmp
push
dec
shrb
les
das
xchg
aaa
adc
inc
testb
lds
lock
xor
aaa
aad
inc
test
in
pop
bound
sub
xor
fs
or
add
cmp
sbb
pop
in
mov
inc
add
fsubrl
cs
push
xor
xchg
jbe
lret
mov
pop
inc
push
push
divb
pop
pop
dec
out
cmpsb
jp
sbbl
push
push
dec
les
add
je
cmp
orl
xchg
shl
xor
and
xor
ret
imulb
cmp
addb
pop
stos
test
pop
push
imul
jae
fisttps
mov
andl
daa
jmp
dec
ret
repz
mov
mov
ja
je
or
je
or
sub
xchg
out
jbe
adc
adc
inc
lock
popf
push
or
ret
cmpl
mov
movsb
js
sbb
jl
jne
lcall
sub
sti
sarb
sbb
adc
adc
push
xor
inc
push
flds
sub
xchg
lds
imul
mov
jbe
call
hlt
cmp
mov
loope
pop
cmp
mov
inc
in
cmpb
test
cmp
mov
adc
je
shlb
call
fs
xorl
and
xchg
nop
stos
jl
rclb
loope
test
movsl
and
add
adc
mov
stc
inc
cmp
xor
pop
xor
xor
fwait
test
dec
je
sub
je
sub
add
push
dec
xor
add
adc
in
sub
or
or
lds
or
push
adc
inc
xchg
add
inc
lcall
lcall
pop
push
dec
push
test
jmp
fmuls
cmp
lea
clc
cmpsl
dec
sbb
add
int3
sub
push
daa
fiadds
or
stos
or
nop
push
dec
lods
pcmpeqd
pop
sbb
sbb
push
add
cmp
pop
das
jge
xor
adc
fdivrl
notl
popa
add
mov
divb
mov
in
and
push
and
mov
inc
push
inc
push
push
push
movsl
sbb
push
shlb
call
int3
mov
loopne
in
push
xor
loopne
popf
push
inc
cmp
fsub
aam
and
repnz
xor
cmp
ret
arpl
orl
or
idivb
sub
adc
cmp
jne
pop
in
add
xchg
mov
xchg
sbb
repnz
pushf
sahf
and
add
jmp
mov
or
out
add
mov
fwait
out
call
les
cltd
mov
repnz
inc
mov
sub
lret
mov
ds
nop
dec
leave
push
ret
ret
cmp
dec
repz
cmp
jl
pop
fdivrs
repz
sbb
jae
es
push
or
and
icebp
mov
out
jns
les
and
and
jecxz
pop
jge
push
xchg
push
loopne
out
ja
shlb
ljmp
cmc
xchg
xchg
add
aam
jb
push
cmp
sbb
cmp
push
movsl
rcll
in
clc
mov
fidivrs
and
push
xlat
imul
popa
push
ret
lods
repnz
cmp
mov
push
cmp
pusha
sti
sar
inc
or
add
or
in
mov
es
sub
fisubrl
cwtl
ds
push
mov
jl
test
hlt
leave
mov
sbb
mov
jg
dec
pop
push
jb
sub
mov
sbb
sbb
pop
adc
dec
adc
popa
push
je
inc
movsb
std
mov
adc
cmpsl
add
and
mov
ret
popf
das
xchg
xor
sbb
jmp
push
xchg
mov
jle
sbb
push
push
ret
leave
rcl
sbb
clc
inc
push
ds
dec
test
dec
push
daa
out
add
mov
and
pop
pop
xor
scas
mov
mov
push
roll
hlt
cs
mov
les
call
mov
or
push
xor
inc
enter
mov
in
inc
mov
add
or
insl
sub
fmull
jbe
addr16
lahf
dec
in
sub
jp
sbb
mov
dec
sub
mov
aam
mov
imul
push
jo
loopne
mov
sub
daa
adcb
in
outsl
and
loopne
push
and
xor
in
push
or
daa
inc
ret
ja
ds
sbb
insb
inc
add
or
or
mov
add
adc
lcall
sbb
adc
sbb
inc
add
xor
mov
push
mov
mov
inc
mov
nop
mov
loopne
pusha
lock
add
push
add
dec
jae
mov
xor
xor
or
mov
xor
cld
dec
cmpl
fs
pop
incl
addl
leave
pop
push
cltd
mov
or
mov
xor
cmp
push
xchg
pushf
adc
ret
sub
mov
dec
and
sbb
into
pop
lds
movsb
xchg
or
movsl
pop
loopne
cmp
pop
and
push
fmuls
aaa
xchg
or
sbb
or
neg
sbb
mov
add
adc
ret
loop
add
cmp
bndldx
ret
sbb
dec
add
jle
mov
rcl
push
addr16
iret
faddl
std
add
push
xor
xchg
add
push
jns
dec
jb
or
dec
push
cmp
pop
inc
adc
sbb
aam
aaa
jl
sbb
in
cwtl
movsb
mov
into
inc
cmpb
in
jl
sub
stos
mov
icebp
xor
ret
or
nop
mov
lret
push
add
push
add
add
dec
shl
pop
jg
sti
je
adc
stos
add
and
add
cli
mov
jno
jnp
mov
je
push
sbb
inc
and
lock
test
lods
jge
clc
xchg
movsb
dec
sbb
inc
adc
out
add
bound
les
xor
call
dec
cld
sub
shrb
sbb
call
mov
pop
out
add
enter
sub
mov
fmulp
les
xor
loopne
mov
lea
sbb
xchg
jo
jbe
or
push
inc
push
fs
mov
dec
movsl
sbb
mov
mov
pop
push
cmp
cwtl
and
into
sbb
push
pop
adc
pop
movsb
and
arpl
mov
stos
cmpsl
flds
jnp
enter
sahf
cmpsb
jnp
xor
or
mov
outsb
or
push
adc
dec
sub
sbb
xor
pop
dec
or
mov
mov
les
or
rcrb
add
ss
pop
xchg
aam
mov
add
push
movsb
mov
adc
mov
fs
sbbb
pop
loopne
pop
les
mov
movsl
cmp
out
mov
pop
cli
adc
or
ljmp
aas
arpl
and
sbb
pop
in
icebp
jecxz
sahf
sub
fidivs
fisttpll
sbb
rorl
jnp
aaa
stos
and
enter
arpl
jge
or
jnp
push
je
into
hlt
je
and
cmp
adc
call
add
bound
lods
aad
in
push
adcb
mov
cmp
mov
push
jo
stc
fdiv
data16
jbe
je
cmp
push
pop
test
push
mov
push
pop
or
adc
in
dec
fs
adc
dec
add
fnsave
sar
and
add
mov
enter
inc
dec
dec
dec
hlt
add
out
imul
pop
je
or
push
cmp
jle
jg
dec
rorb
lret
test
or
lods
dec
aaa
sub
and
cld
add
mov
xor
lods
mov
dec
sbb
ret
lret
incl
dec
adc
inc
add
sub
cmp
mov
add
jl
sbb
cmp
and
mov
hlt
inc
push
add
cmp
add
mov
cli
adc
and
cltd
lock
loop
adc
lea
push
add
or
xor
popa
inc
or
add
fisttps
gs
fucomi
mov
push
nop
dec
mov
cmp
mov
je
addr16
dec
fiadds
add
pop
jb
icebp
jns
xor
add
add
ficoml
out
dec
or
je
adc
outsb
imul
and
mov
sbb
push
or
xor
nop
sub
sbb
nop
and
daa
push
push
iret
sub
or
sub
sbb
sbb
jl
sbb
adc
add
sub
lea
pushl
sbb
xchg
mov
mov
cmp
mov
dec
xor
loopne
push
push
sub
leave
xchg
cmp
xchg
adc
xor
add
push
xor
enter
cmp
in
lret
push
cmp
sbb
push
and
inc
ret
leave
repz
xchg
fmuls
push
add
inc
fwait
inc
xchg
in
and
push
or
mov
add
adc
sub
mov
xor
sub
xchg
std
dec
out
add
mov
dec
xchg
repz
or
push
stc
lock
dec
jmp
push
sub
enter
nop
and
clc
and
popa
ds
imul
or
jecxz
mov
cmp
dec
sub
jbe
or
jmp
pushf
cmpsl
push
pushf
enter
inc
mov
add
dec
sub
jne
push
adc
shll
add
push
out
mov
adc
mov
rcl
or
cwtl
sub
dec
lret
push
rorb
and
movsl
test
adc
adc
inc
loopne
arpl
inc
and
movsl
inc
mov
push
mov
cwtl
lods
ret
int
lods
add
mov
push
shlb
imul
cmp
fcomip
add
sub
daa
in
add
inc
int3
jp
ret
movb
jl
jp
sti
dec
jo
lahf
dec
mov
push
sarb
jge
adc
mov
xchg
add
inc
and
pop
add
push
inc
out
fisubrs
cmp
jb
shlb
push
or
loopne
lods
and
lds
les
and
cmp
jae
jo
lcall
dec
mov
push
shl
pop
cmp
jne
jg
shrw
pop
dec
dec
pop
inc
inc
dec
mov
add
ret
push
pop
sbb
add
inc
jmp
push
nop
dec
push
push
sti
mov
push
mov
sbb
daa
sbb
sub
jle
sahf
shll
enter
pop
rorl
or
pop
jge
add
sbb
rclb
adc
jecxz
sub
jnp
xchg
insl
mov
and
popf
jno
adc
hlt
mov
into
clc
subb
or
cmp
adc
jle
jecxz
mov
lret
cmp
dec
pop
mov
mov
mov
dec
push
mov
and
sbb
ret
rcrl
or
add
test
mov
sub
and
fsubl
dec
push
leave
fcompl
mov
dec
enter
push
push
jne
or
add
decl
hlt
mov
insl
mov
push
cs
jg
sub
imul
push
insb
call
imul
sub
inc
add
test
and
add
lret
xor
inc
cmp
adc
mov
inc
inc
dec
and
push
sar
fadds
cli
add
shll
sar
inc
push
leave
push
xor
sbb
pop
lret
push
adc
xor
xor
push
fldt
and
cmp
xchg
sub
ret
inc
shrb
lock
mov
inc
add
add
sub
sub
leave
cld
jg
push
adc
orb
nop
and
cmp
subl
mov
in
add
mov
stc
add
test
push
cli
idiv
cmp
push
push
cmp
jo
add
mov
jae
sub
or
lock
push
push
sahf
shlb
enter
xor
inc
sbb
xchg
hlt
into
aaa
jbe
mov
push
xchg
mov
push
lea
adc
sub
in
push
adcb
outsb
cltd
out
xchg
push
scas
nop
and
push
sbb
push
sbb
xchg
or
lods
sbb
add
xor
or
add
scas
adcl
push
mov
fmul
inc
add
inc
test
mov
incl
aas
ja
push
test
pop
in
inc
inc
es
add
or
and
inc
loopne
mov
add
jmp
or
bound
inc
push
cmp
dec
adc
or
jle
das
xchg
pop
mov
bound
cmpsb
lret
inc
rorb
push
jmp
sbb
xor
xchg
gs
aas
xchg
cmc
xchg
add
fdivs
andl
mov
xorl
push
and
cs
add
or
sbb
cmp
jle
ret
sub
movsl
or
or
add
pop
add
cmp
dec
push
jge
jo
mov
lea
mov
mov
inc
add
or
and
imul
adc
pop
adc
mov
mov
add
ds
loop
mov
das
lods
add
sbb
ds
mov
enter
adc
inc
adc
add
pop
adc
sysret
out
pop
ret
mov
in
imul
enter
imul
sbb
aam
movsl
and
and
or
push
pop
push
cmp
sub
add
data16
push
movsl
rcrl
fcoml
in
xchg
push
sub
rorb
in
ja
iret
and
cmp
clc
mov
jmp
and
lahf
and
faddl
sarb
pushf
or
inc
xor
add
push
fcomps
insl
xorb
xorl
adc
cmpb
mov
xchg
add
or
add
roll
and
jbe
pop
mov
add
pop
dec
leave
add
int
jns
sbb
and
les
pop
jmp
cmpl
mov
dec
and
popa
sub
dec
adc
mov
adc
push
std
rorl
or
push
in
xor
adc
or
les
pop
or
gs
sub
push
in
rol
add
lea
movsl
sub
inc
dec
lcall
lret
jg
push
add
mov
mov
sbb
andps
sbb
scas
cld
lcall
clc
lock
je
lret
subb
sub
stos
xchg
mov
mov
add
add
fmuls
and
mov
loopne
ja
outsb
push
clc
testb
out
sarl
bound
mov
lock
call
fnstcw
fisttps
cmp
inc
xchg
repz
and
cwtl
push
jbe
sub
lea
std
loopne
add
sub
push
cmp
cld
or
mov
dec
and
les
dec
inc
rcrl
out
sbb
dec
sub
lock
push
and
jecxz
inc
test
fmuls
push
xchg
mov
mov
xchg
push
cld
xchg
push
cld
push
sub
mov
xor
jb
je
jbe
jge
jg
jne
jmp
mov
mov
sbbb
rcrl
leave
leave
rorl
sbb
je
add
imul
cli
dec
inc
call
lret
inc
push
pop
insb
adc
jl
test
xor
jb
adc
mov
mov
sub
mov
and
jge
orl
mov
push
clc
mov
jle
dec
add
jmp
aam
mov
pop
aas
push
sbb
out
divb
pop
add
push
shll
push
jecxz
adcb
testb
add
scas
fimull
sahf
sub
sub
in
pushf
or
xor
repnz
pushf
cmp
test
pop
stc
dec
or
dec
pop
cld
enter
and
mov
cmpb
shl
add
jge
sbb
add
cmp
pop
aaa
jecxz
inc
loope
mov
sub
dec
data16
inc
pop
mov
adcl
add
mov
or
dec
inc
mov
lods
fiadds
mov
pminsw
or
lcall
mov
not
xor
xchg
jno
mov
mov
adc
add
cmovae
mov
subl
push
add
jl
andb
mov
add
inc
sbb
nop
ja
adc
test
hlt
add
or
mov
mov
push
stos
sub
test
xor
call
shll
daa
mov
scas
push
mov
push
ret
fidivl
mov
pusha
or
sub
mov
cmp
adc
dec
pusha
adc
imul
inc
xchg
push
xor
push
sub
mov
ja
cmp
sub
ret
out
inc
outsl
imul
fsubr
sti
rep
bound
sub
mov
sbb
cmp
jae
xchg
add
sbb
inc
or
sbb
andl
cs
jnp
and
jne
pop
rcr
adc
and
jae
push
push
ret
mov
jae
xlat
push
and
push
mov
loopew
or
push
loopne
adc
push
pop
mov
inc
inc
sub
mov
int
mov
mov
rcrl
inc
mov
xchg
testb
out
nop
cli
popa
neg
inc
xchg
pop
mov
loope
or
cmp
adc
fidivs
mov
xor
test
and
add
andl
aaa
jno
sub
sbb
loope
inc
leave
mov
mov
cmc
movsl
xor
push
add
jl
and
cs
lret
subl
and
cmc
lds
jmp
outsl
roll
popa
inc
fdivrs
add
shlb
cld
sub
or
xor
cmc
leave
ror
stc
repnz
test
mov
pop
fiadds
mov
pop
js
push
movb
push
in
push
add
jnp
jge
decl
cld
push
inc
ret
or
xchg
dec
ljmp
mov
pop
pop
push
inc
ret
call
out
insl
imul
dec
fisttpll
push
or
ficoms
dec
xchg
push
sub
leave
xor
ret
fsubrl
adc
jno
incl
and
mov
cs
dec
rclb
add
and
adc
xlat
mov
adc
arpl
or
mov
xchg
int3
add
or
inc
add
inc
aad
fwait
cltd
add
cmp
sub
xor
cmp
sbb
and
in
loopne
mov
lods
loopne,pt
sbb
add
incb
inc
sbb
sbb
inc
sbb
or
int3
push
inc
es
push
pop
cmc
ret
pop
add
and
je
sbb
je
adc
xchg
ds
adc
shlb
pop
cltd
in
or
or
outsb
addr16
push
les
xor
sub
or
mov
jl
ret
push
adc
sub
mov
and
sbb
xorb
pop
add
mov
push
add
mov
sub
ret
adc
addr16
pop
mov
jle
insb
insl
sub
xchg
lcall
int3
movb
les
xlat
add
pop
nop
and
jge
shrb
es
in
mov
iret
pop
es
push
adc
rclb
add
push
jne
jbe
mov
ds
shlb
push
or
orb
pushf
test
popa
insb
loope
fsubr
or
push
adc
fimull
push
pop
cmp
popa
loopne
xor
dec
adc
or
or
hlt
add
push
sbb
dec
or
or
sbb
subb
es
adc
push
pop
jg
sar
cmp
jbe
or
add
adcl
ret
push
ret
loopne
inc
pop
pusha
in
inc
ret
pop
mov
add
jecxz
pop
jb
adc
inc
xchg
push
and
sbb
jb
mov
add
or
pop
and
js
pop
lea
inc
and
imul
fiadds
add
lock
rcrb
lea
mov
fdivp
lods
mov
add
dec
sbb
movsl
jbe
push
inc
mov
cmp
pop
lahf
inc
jl
pop
in
mov
and
lea
cmp
mov
aam
add
or
inc
mov
sbb
inc
mov
xor
test
imul
mov
jne
mov
xchg
sbb
stos
add
mov
pusha
pusha
loopne
inc
or
movsb
fs
loopne
pop
dec
dec
xor
mov
roll
pop
adc
xchg
or
push
ret
jmp
imulb
pop
dec
ss
arpl
dec
add
sub
jne
sub
adcb
cmp
dec
shl
add
cmp
jb
pushl
jo
dec
adc
push
clc
add
jmp
xor
jae
inc
test
aam
adcb
and
mov
add
addb
mov
test
sbb
inc
mul
xchg
daa
mov
mov
sub
insb
lods
movsl
out
xor
adc
sbb
inc
and
inc
xchg
jmp
pop
sbb
xor
add
sub
mov
daa
xchg
and
xor
cmp
and
rcrl
cld
dec
scas
sbb
insb
and
es
movsl
sti
lock
daa
or
jmp
dec
sub
push
cmp
add
fsubrs
fistl
daa
lds
fwait
or
dec
or
add
sbb
adc
or
outsb
sub
fldt
sbb
and
or
mov
fisttpl
jmp
push
lods
sbb
adc
add
xor
das
addb
or
test
or
xchg
adc
sbb
vmread
push
xor
add
dec
fidivs
cwtl
pop
in
and
daa
add
add
and
sbb
mov
rcll
pop
inc
js
shll
out
iret
jl
push
cltd
pop
pop
stos
push
out
push
and
inc
push
fs
add
in
jo
cmp
add
mov
add
in
and
in
fsubrl
sbb
cmpb
daa
xor
sbb
subb
jb
sbb
sub
sbb
or
jmp
and
fsubrs
cmp
pop
push
sbb
inc
push
dec
pop
and
sbb
xor
or
xor
xor
sub
mov
mov
lret
or
lea
dec
xchg
fistpll
loope
cmp
push
or
pusha
push
inc
call
add
repnz
mov
adc
or
xchg
outsb
movsb
roll
sbb
pop
adc
mov
pop
mov
add
sbb
mov
aam
fwait
pop
or
adc
inc
adc
lret
xor
lcall
push
inc
push
or
pop
sahf
call
pop
adc
lea
add
gs
or
adc
push
lock
mov
or
sarb
inc
mov
jg
push
sbb
and
push
or
cmp
add
je
pop
sbb
lcall
adc
jmp
cmpb
or
jge
adc
jb
popa
cmp
popw
and
and
jo
movsl
inc
fildl
push
pcmpeqb
adc
jl
add
adc
andl
add
fcmovbe
cmpl
fimuls
fsubl
sbb
fsubrl
aas
adcl
and
test
aas
js
mov
gs
pop
add
jo
rorl
adc
add
push
inc
int
loope
jae
es
pusha
add
push
inc
jp
xchg
lea
mov
in
cmpsb
jl
js
mulb
xor
and
xor
mov
inc
sbb
movzbl
push
ret
stc
mov
cmp
jne
and
push
lock
add
xor
mov
sbb
sbb
pop
cmp
push
je
sbb
mov
mov
add
adc
dec
xor
dec
xor
and
mov
jg
das
or
adc
add
movsb
shrb
inc
push
add
fmuls
movsb
dec
jmp
cmp
xchg
movl
adc
or
add
mov
sbb
orl
ljmp
push
into
ret
dec
cmp
jg
pop
not
dec
pop
scas
lds
add
xor
adc
push
adc
push
add
bound
mov
adcl
xchg
cmp
arpl
push
lock
or
es
cmp
fiaddl
xor
xchg
push
or
dec
sub
out
int3
ljmp
jmp
mov
or
repz
xlat
xor
and
add
sub
aaa
jl
mov
or
call
push
mov
add
rorb
or
iret
fnsave
mov
fsubrl
or
and
lret
pop
or
mov
inc
add
push
mov
testl
inc
sti
call
xor
push
dec
add
xchg
lret
and
pop
or
pop
cmp
cld
adc
and
pop
mov
push
xchg
and
xchg
test
xor
inc
ja
xchg
pop
stos
testb
loope
lock
pop
xchg
lret
std
add
repz
fmull
pop
std
and
lahf
cmp
popl
in
dec
inc
loope
mov
rcll
and
lds
sub
or
and
fsubr
mov
lock
sbb
mov
adc
xor
int3
add
and
and
test
mov
lock
incl
cmp
jl
cmp
jle
cmp
push
jp
or
pop
pop
push
mov
ds
mov
add
mov
into
mov
jge
mov
pop
and
cmp
jl
aam
nop
ljmp
je
cmp
je
jne
mov
rolb
mov
iret
and
cs
xor
jmp
cwtl
or
sub
add
flds
ds
fnstenv
test
mov
aam
inc
into
mov
or
jl
xorb
sbb
mov
add
pop
push
jl
in
inc
or
mov
inc
adc
add
mov
popa
xchg
inc
mov
adc
inc
sub
adc
movups
lea
rorb
mov
inc
gs
mov
push
incb
ficomps
hlt
pusha
ljmp
mov
popa
ud2
xor
lret
mov
xchg
or
cmp
mov
gs
insl
in
or
xorb
js
test
stos
test
ss
clc
imul
sbb
add
add
cmp
pop
cmc
push
ret
push
or
aaa
push
sbb
inc
or
add
cs
xchg
shlb
pop
xor
loope
jg
xor
dec
push
mov
mov
lea
push
inc
push
add
outsb
sbb
cmp
mov
cs
pop
repnz
adc
sbb
and
out
out
pusha
jo
sub
mov
sbb
mov
sub
mov
scas
push
adcl
dec
inc
xor
inc
xchg
cmp
add
ret
das
or
sti
bound
pop
adc
add
out
push
pop
pop
pusha
fs
iret
lods
sbb
push
js
and
cmp
dec
dec
cmpl
cmpsl
hlt
sub
lea
sub
in
pop
in
sbb
add
test
add
sub
sbb
popf
pop
lods
rolb
ljmp
and
and
pop
lods
icebp
xchg
xor
push
adc
push
lahf
scas
jmp
mov
sub
xor
xchg
lods
and
push
push
inc
mov
jne
xchg
add
jno
push
inc
pop
cmpb
rcll
mov
movsb
addb
mov
or
nop
pop
rclb
ret
pop
fs
sbbb
inc
jle
and
dec
inc
aam
fs
rclb
sbb
outsl
push
outsl
adc
dec
test
rol
xor
sbb
mov
flds
popa
mov
add
xor
sub
xor
add
and
mov
jbe
jmp
outsl
por
mov
and
add
pusha
or
lahf
lahf
push
out
popa
add
fwait
adc
ret
pop
push
stc
mov
jmp
inc
pop
pop
cmp
jne
jmp
gs
add
shll
scas
xor
std
fstl
pop
pop
test
inc
inc
popa
push
jo
push
or
les
in
dec
sub
dec
and
adc
pop
sbb
inc
sub
push
adc
sbb
adc
or
jmp
jmp
mov
fcompl
testb
push
cmpsl
add
adc
and
cmp
sbb
mov
shrl
pop
fadd
sbb
cmc
or
push
jbe
sti
leave
or
mov
clc
and
add
out
je
cmp
xchg
jl
and
pop
push
stos
add
push
push
pop
push
incb
add
lahf
push
pop
mov
adc
mov
jbe
ja
jne
xor
jle
pop
jnp
pusha
je
push
jle
dec
mov
xor
je
push
push
shll
dec
addr16
insb
mov
adc
cmpsb
pusha
jne
push
repnz
jmp
inc
fsubrs
sub
jne
dec
movsl
or
push
sbb
sbb
jo
push
or
insb
xor
loop
addr16
xlat
mov
inc
lret
jnp
add
adc
js
jmp
push
sbb
push
cmp
iret
push
dec
sbb
pop
fldenv
rorl
mov
addb
inc
inc
or
cmp
loopne
push
pop
add
pusha
pop
jb
sub
xchg
dec
popf
or
mov
in
fcomps
fwait
repz
rclb
xchg
fdivrs
jnp,pt
in
mov
inc
popl
pop
dec
xorb
arpl
sub
idiv
jle
into
push
mov
ret
inc
out
clc
loopne
pop
js
rcl
sbb
xchg
rolb
out
cmpsl
test
push
insb
sub
push
inc
pop
test
push
add
sub
push
and
or
mov
xchg
sbb
jecxz
sti
mov
dec
push
hlt
jg
mov
sub
lods
jae
or
sub
pusha
pop
loope
ret
jmp
cwtl
push
jo
movl
jo
subb
loop
mov
fmul
sub
cmp
cmp
int
stc
sub
lea
add
mov
sub
daa
mov
adc
sub
dec
adc
or
pop
mov
pop
and
rorb
push
push
adc
call
mov
mov
loopne
push
or
adc
add
dec
dec
add
or
insb
add
or
add
xchg
and
push
sti
add
lcall
push
adc
mov
push
ja
mov
pop
add
and
sarb
push
add
sbb
repz
and
push
add
pop
nop
mov
fsubrs
mov
lds
adc
daa
pop
sub
inc
add
push
cmpb
add
outsb
lret
xor
or
out
jmp
dec
out
push
lea
pop
add
push
bound
shrb
push
push
mov
push
adc
push
mov
cmc
adcb
out
jmp
addb
pop
cmpb
adcb
sbb
jae
jae
jns
lret
jae
and
call
push
inc
sbb
shlb
je
pop
xchg
nop
daa
sub
shlb
pop
es
inc
cmp
dec
xchg
push
jo
mov
in
fisubrs
movl
mull
add
add
outsl
sub
push
add
inc
adc
dec
loopne
push
xchg
or
adc
pop
je
fldl
pop
push
fstpl
dec
add
cli
push
iretw
repz
adc
adc
jne
push
idiv
cmp
iret
jne
or
jne
or
jne
add
adc
jmp
lret
andl
aam
jo
in
cmp
call
mov
dec
je
and
push
and
jp
out
mov
mov
enter
aam
arpl
adc
adc
jecxz
jmp
mov
outsb
mov
mov
orl
cld
lock
lea
std
xchg
idivb
xchg
sbb
inc
jg
jb
test
push
push
pop
lds
cwtl
add
dec
add
or
push
sbb
add
ret
fsubl
mov
aam
jp
js
rcrb
mov
mov
les
loopne
sti
movsl
pmaxub
add
ja
push
pop
jl
push
insb
add
jecxz
imul
jecxz
outsb
ljmp
mov
std
fmull
push
push
push
jbe
mov
jne
sbb
sbb
fcomps
jbe
jo
xor
dec
adc
ficoms
push
or
mov
adc
add
pop
lock
mov
sub
pop
jbe
mov
loop
mov
pop
push
push
cmp
notl
push
popa
sub
sub
add
jnp
push
rorl
popa
imul
push
xor
adc
xor
pop
leave
sub
add
jae
push
mov
or
adc
adc
rolb
inc
fstpl
or
mov
leave
sub
lds
push
stc
loopne
push
sub
ja
ss
lods
inc
sbb
imul
es
arpl
mov
arpl
inc
and
sbbl
xchg
mov
sarl
push
lea
in
inc
shrl
fs
or
jno
add
mov
inc
pop
add
cltd
dec
shrb
xor
jmp
imul
enter
push
test
cmpl
push
or
mov
sbb
fmuls
es
sbb
or
bnd
loopne
xchg
xor
paddusw
mov
enter
adc
adc
or
xchg
inc
arpl
rclb
add
rclb
mov
mov
int
and
add
es
ss
cmp
inc
xor
xor
or
mov
pop
dec
inc
pop
push
lock
rorl
pop
mov
mov
test
loope
add
xor
push
jecxz
pop
push
out
ret
decb
push
jle
icebp
mov
cmp
fwait
lcall
mov
loopne
jae
dec
sbb
icebp
add
xchg
lock
cmp
jmp
mov
adc
push
lahf
repnz
loopne
add
add
in
imul
sbb
dec
xchg
loopne
fiaddl
mov
inc
int3
push
inc
cmp
add
lods
mov
or
cmc
mov
pop
rcll
shlb
in
add
and
adc
cmp
jns
aad
push
push
rorb
xchg
cli
and
pop
cmp
mov
and
push
pop
gs
sub
dec
les
sub
mov
popf
jae
lea
lock
and
jmp
or
push
rcrl
das
imul
test
xchg
pop
fcompl
add
adcl
aam
fstpt
arpl
les
pop
jbe
xchg
and
mov
mov
adc
orb
jne
adc
pop
jge
fldl
sbb
stos
std
gs
jne
xor
pop
xchg
insb
scas
shlb
xchg
push
pop
ljmp
arpl
ss
clc
jmp
xchg
and
jne
dec
lods
add
test
sbb
inc
add
inc
imul
pop
fdivrl
or
sub
enter
cwtl
test
xchg
mov
or
xor
roll
sbb
popf
clc
stos
pop
mov
roll
fidivrl
daa
push
dec
xchg
sarl
in
mov
sub
dec
inc
add
mov
lret
dec
clc
inc
xchg
push
adc
roll
push
cmc
subl
mov
or
scas
push
xchg
ljmp
push
insl
fisubrs
scas
loop
in
sub
mov
je,pn
fbstp
lcall
xor
mov
jae
loopne
les
psadbw
adc
and
or
mov
and
dec
cmp
or
mov
ljmp
xchg
outsb
sarb
pop
lea
fsubl
rol
or
loope
pop
xor
aad
cmp
aaa
xchg
jb
clc
pop
inc
adc
or
dec
insb
mov
inc
add
cmp
je
mov
pushf
lds
imul
push
fdivr
hlt
mov
pop
push
mov
adc
sbb
in
loopne
xlat
sbbl
or
adc
or
repnz
or
inc
hlt
dec
xchg
das
push
mov
xchg
mov
fs
mov
or
shlb
test
push
jle
mov
push
jne
dec
ss
xchg
int
pop
or
sub
rolb
scas
test
popf
push
adc
inc
sub
xchg
and
fwait
add
inc
aad
inc
or
inc
rclb
sti
or
add
mov
jne
movsl
pop
adc
popf
inc
fcoml
inc
negl
sbb
add
insl
push
adc
movsb
inc
cmpl
xor
jne
movsl
adc
enter
mov
jg
xor
mov
mov
inc
xchg
mov
jno
sub
popf
cmp
add
das
adc
and
push
cmp
xchg
or
pop
pop
subl
loop
adc
or
arpl
lock
mov
imul
push
sbb
ss
inc
mov
add
icebp
mov
mov
imul
clc
adc
mov
cli
inc
subl
add
sub
out
push
daa
out
mov
fsubrs
and
shrl
iret
cs
imul
mov
add
or
call
in
push
punpcklwd
pop
arpl
jns
stos
shrl
fdivs
mov
les
imul
add
or
in
lods
inc
push
xor
xor
or
dec
mov
xchg
lret
loope
add
daa
or
jecxz
adc
xor
shll
sub
test
add
shll
fwait
push
jp
shlb
add
pushl
cmpsl
add
dec
mov
call
add
out
sbb
mov
mov
mov
push
jle
into
push
and
xchg
sub
lds
cli
ficompl
xorl
add
xchg
filds
mov
jecxz
mov
sbb
add
ret
dec
dec
xchg
jbe
stos
jle
sbb
cmc
xchg
nop
add
push
xlat
xor
sub
push
or
fistpll
sbbl
sbb
cmpsb
lret
mov
faddl
into
pop
xchg
fwait
pop
fwait
dec
test
popf
inc
push
mov
imul
popa
inc
xchg
add
or
push
pusha
rcpps
cmc
adc
je
movsb
nop
add
inc
hlt
jp
add
push
icebp
call
sbb
add
mov
xchg
movsl
bound
cltd
mov
mov
jmp
inc
dec
sub
fdivrl
fwait
scas
xor
mov
xchg
pusha
out
aas
div
push
loope
add
ljmp
lret
and
jne
adc
sbb
xor
mov
push
sub
cmp
scas
pop
aam
jg
imul
clc
cld
push
and
adc
add
pushf
sub
and
mov
dec
sbb
inc
adc
pop
add
rol
add
popa
add
pop
sti
cmp
inc
pop
scas
push
or
addps
adc
add
and
sahf
and
inc
subb
orb
inc
fidivs
mov
aas
add
bound
cmp
cmp
mov
inc
push
sbb
popa
dec
pop
stc
and
push
push
fistps
push
stc
sub
xchg
leave
jmp
sbb
ret
pop
dec
lods
dec
aam
movsl
arpl
pop
in
push
lock
or
add
clc
or
pushl
inc
mov
cltd
in
bound
cltd
jo
jno
sub
outsl
inc
cmp
pop
or
push
add
push
add
dec
testl
push
mov
push
cmp
add
repz
dec
rcll
mov
outsl
mov
enter
pusha
inc
addr16
or
imul
shl
add
push
inc
mov
dec
mov
dec
sahf
nop
push
xchg
pop
jb
jae
pushf
pop
pop
xor
shlb
rolb
fadds
testl
push
mov
adc
jb
mov
insl
or
movsb
inc
movsb
or
jo
rcll
mov
push
push
imul
sub
cmp
daa
and
xchg
loopne
xor
jnp
mov
iret
or
push
sub
xor
pop
sub
cmp
or
movl
mov
cmp
adc
inc
sbb
and
fwait
pop
dec
sbb
cmc
sbb
jg
pop
ljmp
adc
push
add
sbb
pop
mov
mov
pop
gs
inc
call
incl
call
and
ret
and
arpl
sbbl
insl
jmp
xor
sub
and
and
lcall
adc
xchg
cltd
stos
inc
add
cmpl
imul
cmp
iret
dec
and
es
xchg
push
daa
and
and
sbb
xchg
inc
adc
adc
pop
add
mov
cli
cli
sub
les
ljmp
adc
ljmp
mov
lret
sbb
insb
imul
xor
cmp
adcb
adc
lods
mov
cmp
fimull
jp
fsubl
sbb
fdivrl
sbb
ret
sub
inc
imul
dec
dec
mov
nop
pop
or
inc
push
jge
popf
push
mov
mov
inc
xor
loopne
movsl
add
es
push
push
jp
arpl
test
in
pusha
and
sub
cmpl
imul
movsl
loope
test
push
lods
add
inc
inc
inc
inc
clc
adc
cmpsl
xchg
shlb
sub
sub
and
sti
outsl
add
pop
pusha
mov
mov
pusha
test
xchg
cmp
mov
push
add
lret
add
or
pop
std
and
jmp
loopne
jge
dec
int3
and
push
packuswb
add
popa
in
jb
xchg
jno
jne
push
and
aam
cmc
stc
inc
loop
xchg
jecxz
mov
or
or
push
insl
inc
dec
add
mov
add
jnp
adcb
sarb
mov
dec
rclb
sub
push
jne
sub
xchg
and
cmp
push
hlt
fs
xchg
sbb
test
mov
mov
mov
push
inc
js
xchg
ret
xor
pop
jae
or
mov
int3
cld
std
push
push
sbb
push
xor
outsl
bound
pop
rolb
xor
cld
cmp
rclb
pop
cwtl
push
rclb
xchg
or
sbb
jb
inc
das
outsb
inc
pop
add
or
xor
fsincos
in
test
in
mov
xchg
repz
cmp
jae
mov
into
inc
cwtl
jb
inc
sub
pop
jp
and
sbb
ret
fldenv
gs
add
in
add
adc
xor
aad
insb
sub
mov
mov
jnp
or
loopne
pop
add
cmp
loopne
jmp
lea
adc
and
sub
nop
fisttpl
data16
dec
test
push
sub
add
sbb
jo
add
fnstenv
xchg
xor
adc
jbe
jp
insl
xlat
inc
cmp
js
inc
ja
or
sbb
xor
nop
inc
cli
std
adc
cltd
sbb
pop
rep
xor
mov
shlb
or
pop
test
push
rolb
ret
pop
push
icebp
push
pop
jle
pop
mov
and
js
mov
je
cmp
push
mov
or
and
adc
add
gs
adc
test
pop
fs
jne
jmp
inc
out
jnp
adc
add
cwtl
add
mov
mov
into
jmp
pop
shll
lcall
cmp
addr16
std
push
pop
mov
cmp
mov
and
or
xor
cmp
je
imul
loope
enter
nop
lret
lcall
stos
pop
in
inc
int3
dec
cld
push
xor
je
jle
mov
cmp
outsl
cmp
leave
clc
std
repnz
cmovge
sahf
sub
pop
push
add
xchg
mov
les
or
xchg
movsl
pushf
xor
jo
mov
sbb
in
lock
push
sub
mov
xor
dec
lock
dec
subb
adc
fstpl
fldl
loopne
les
hlt
and
je
and
push
add
push
sbb
xchg
or
notb
or
and
push
aas
and
mov
in
out
fisttpl
sbb
fsubrl
push
xor
or
xor
into
neg
out
out
cmp
out
cmpb
pop
fsub
pop
fsubrp
pop
inc
pop
repz
inc
push
stc
into
mov
je
clc
cmc
jg
out
xor
icebp
and
push
mov
pop
xor
push
shlb
add
sub
in
fildll
dec
je
add
es
mov
push
cld
pushf
pop
movsl
adc
inc
push
ss
mov
push
or
jmp
aam
leave
and
imul
cmpl
insb
dec
ss
int
push
pop
sbb
add
sub
sbb
sub
cltd
push
mov
push
lods
aas
inc
ds
push
push
inc
ljmp
and
push
cmp
in
clc
sbb
inc
xor
jg
push
es
ja
pop
mov
ja
push
xchg
popa
das
or
das
pop
and
lret
mov
divl
push
adc
mov
and
and
lds
loopne
push
repnz
push
notl
lret
ret
lret
and
lcall
repnz
sub
push
repnz
push
push
or
xor
ss
pop
push
loopne
mov
dec
push
mov
pusha
lods
les
or
lods
lock
orl
or
xchg
jns
in
jb
sub
push
push
xchg
popa
inc
pop
xchg
xor
mull
insl
and
adc
and
orl
sti
cltd
enter
xchg
sub
shlb
orb
mov
gs
hlt
in
in
scas
or
add
push
xchg
add
inc
sub
push
nop
or
adc
nop
push
sbb
test
lds
lret
nopl
sbb
mov
jne
cmpl
addr16
rcrl
push
je
cltd
and
sarb
mov
sub
out
mov
arpl
or
repz
cmpsl
mov
repz
cld
or
sahf
out
inc
js
xchg
sahf
out
sahf
test
lret
std
cmp
sarl
pop
xor
repz
sti
arpl
sbb
sbb
iret
repz
sbb
sbb
sbb
into
and
push
inc
and
cmpsb
cmp
pusha
mov
dec
lds
xor
fildl
adc
ds
div
mov
inc
lods
jnp
movsb
pop
popa
xchg
pop
xchg
pusha
xor
test
mov
loope
mov
mov
loopne
jno
xchg
gs
add
jno
add
and
cli
and
int
pop
push
sbb
jne
aam
or
loopew
jp
jne
lds
pop
add
and
call
xor
mov
inc
xor
cmpsl
xor
jge
and
add
movsl
movlhps
jecxz
nop
adc
push
add
and
js
xor
pop
xchg
in
push
dec
pop
and
pop
cltd
inc
mov
hlt
add
or
dec
push
xor
sbb
sbb
sbb
leave
adc
iret
shlb
sub
sar
or
cmp
sub
sbb
dec
push
inc
xchg
lods
push
mov
jbe
decl
lods
sbb
in
addr16
inc
mov
inc
imul
add
sbb
pop
inc
test
stc
push
jb
add
mov
xor
mov
jle
push
adc
popf
sbb
mov
test
enter
mov
out
mov
adc
dec
add
and
dec
inc
jle
jnp
adcl
aaa
cmp
sbb
subb
xchg
in
pop
loopne
push
sbb
cmpsl
and
leave
mov
ret
adc
leave
fimull
ret
lea
mov
icebp
in
in
xchg
sbb
jns
dec
ret
loope
stos
cmpl
test
push
int
or
add
jb
cmp
repnz
out
lock
jae
daa
sbb
ret
adc
adc
aad
mov
sahf
xlat
and
adc
enter
or
push
add
sbb
and
xor
push
and
pop
or
das
out
shlb
mov
pop
jb
sub
jo
add
inc
pop
push
shlb
push
and
loopne
sub
mov
loopne
xchg
movsb
pop
int
mov
repnz
add
push
subb
sub
test
lock
fs
push
icebp
popa
and
leave
add
call
repnz
push
add
test
cmp
ret
leave
adc
popa
out
pop
mov
add
andb
or
and
or
les
movsb
sbb
int
lds
cmpsl
pop
mov
aam
sahf
jns
stc
xorb
push
leave
lock
fst
stos
or
scas
cmpsb
pop
insb
push
mov
sahf
inc
add
xchg
dec
xchg
mov
adc
dec
out
pop
push
test
ret
xchg
adc
cwtl
adc
cmpsl
jo
icebp
or
push
and
push
les
jb
sbb
adc
cmp
rolb
adc
adc
into
mov
sbb
push
adc
mov
je
or
mov
or
push
mov
data16
or
or
jl
or
push
enter
add
pop
mov
push
ret
lods
inc
adc
lods
sbb
or
push
dec
add
ret
movsb
or
add
adc
mov
jo
nop
pushf
add
das
add
cwtl
je
psubq
add
mov
repnz
cwtl
stc
pop
and
add
nop
xor
mov
add
xchg
iret
add
ljmp
mov
insb
movsl
sbb
add
daa
push
or
inc
mov
mov
sub
and
or
pop
fs
dec
cmpsb
lea
sub
sbb
mov
scas
inc
pop
adc
in
subb
clc
lods
test
jge
pop
enter
inc
sbb
loope
sub
enter
cmp
inc
mov
or
add
sub
in
and
fldt
lea
push
sub
lea
mov
lea
mov
pop
add
insb
test
xchg
pop
push
xor
loope
inc
shll
dec
ret
cmpsb
shrl
sub
and
adc
inc
push
in
mov
and
mov
push
push
jg
subb
push
lcall
inc
sub
outsl
jo
dec
add
mov
dec
mov
jno
cmove
cmpsl
mov
lods
test
xor
flds
mov
push
jecxz
add
in
sub
and
ljmp
inc
push
mov
add
add
push
nop
or
sbb
outsl
lock
lock
sbb
adc
mov
enter
push
jmp
xor
dec
push
push
mov
mov
jge
pop
or
jo
pop
push
popl
mov
dec
cmp
jbe
add
test
dec
shll
arpl
inc
mov
aad
test
pop
jbe
mov
jge
sbb
sbb
into
in
cmp
add
xor
out
cmp
or
or
dec
nop
call
pop
adc
and
ja
in
sbb
cwtl
rorb
adc
sbb
sbb
or
addl
mov
or
cmp
pop
mov
cmp
je
data16
ljmp
aam
add
fs
xchg
adc
add
scas
mov
add
add
mov
sarl
jl
cmp
imul
popf
sub
jle
push
sub
dec
fcompl
test
push
push
ret
inc
push
inc
fsubrl
or
push
fldenv
pop
shl
ja
sbb
pop
cmp
cmp
mov
or
and
jp
add
inc
add
sahf
dec
orl
jb
and
xchg
mov
pop
inc
push
ret
in
push
insb
cmp
sbbl
push
push
mulb
gs
loope
lea
inc
cmp
jmp
sbb
adc
dec
ret
push
mov
dec
sti
xchg
cmp
stos
add
pop
mov
sbb
cmp
jne
test
mov
jp
mov
data16
and
sbb
or
adc
arpl
push
pop
and
add
mov
fisubrs
xchg
add
lea
sbb
test
ss
jecxz
xchg
movsb
je
rorb
jae
pop
xlat
sub
cmp
sub
push
fisttpl
sub
pop
sbbb
inc
xor
xor
add
push
dec
mov
int
sbb
adc
popa
pop
iret
mov
inc
loope
sub
je
addb
inc
icebp
insb
jns
pop
xor
mov
icebp
add
ljmp
add
lcall
pop
mov
inc
push
push
mov
mov
or
dec
fmull
add
ret
or
adc
jl
xor
jmp
int
jbe
cmp
jl
or
sbb
popa
jp
adc
mov
push
cmp
je
mov
mov
push
add
inc
jmp
movb
mov
cli
adc
push
pop
cltd
idiv
or
lea
icebp
mov
in
ljmp
jno
hlt
aas
cmpsl
xor
pop
inc
xchg
ret
sbb
outsl
mov
jmp
addb
rcrl
dec
jp
dec
mov
cld
or
push
push
or
lcall
mov
orl
push
imul
inc
repnz
incb
push
call
in
push
jo
lret
cmp
mov
xchg
xchg
add
dec
and
daa
cmp
call
fcompl
sbb
loopne,pn
test
call
shll
sahf
imul
jns
and
mov
lahf
sbbl
and
test
add
pop
mov
sub
ror
aam
xchg
inc
mov
stc
adc
ljmp
lcall
or
mov
loope
sarb
cmp
enter
mov
cmp
popf
xor
dec
lea
jl
sbb
rorb
jb
stos
jb
in
and
lcall
fcoms
adc
lock
je
sub
movsb
rcll
dec
das
loopne
inc
and
in
push
aam
push
and
gs
mov
mov
or
pop
adc
jp
adc
jo
jns
and
push
imul
jle
lods
or
jns
repz
pop
push
push
or
jg
push
in
cltd
les
adc
loopne
add
sbb
rorb
out
dec
enter
out
sbb
xor
push
fsubrs
fs
jnp
xor
fmuls
movsb
mov
push
rcr
push
out
and
xchg
xchg
out
pusha
shlb
in
push
and
add
pop
xor
test
adc
data16
scas
add
jno
and
xchg
add
mov
es
movsl
sub
jb
fisttps
rclb
sub
mov
adc
jo
jmp
jb
test
and
xor
mov
sbb
dec
nop
pop
sbb
add
mov
sbbb
xor
sbb
pushf
add
cmp
and
cs
lods
adc
leave
pushf
xchg
mov
jl
js
aam
enter
sbb
push
inc
pop
enter
fsubr
call
or
jl
jmp
in
sub
int3
int3
imul
lret
xor
aaa
xlat
cmp
adc
mov
push
outsb
lcall
xor
or
das
xor
dec
mov
cltd
xchg
jge
push
mov
mov
imul
rcll
mov
and
mov
sbb
xor
fcompl
adc
inc
movsb
fmull
add
xor
adc
inc
or
ror
out
mov
rolb
test
mov
cmp
ds
mov
pusha
add
popa
adc
vpmacsww
pop
js
lods
add
push
and
and
movsb
pop
lcall
pop
int3
cmc
and
inc
dec
jge
pop
jmp
cwtl
cmp
xor
arpl
in
push
aaa
or
mov
push
mov
push
lcall
or
imul
lods
mov
mov
out
cmp
jle
xor
movsb
mov
sub
shlb
sub
jp
test
sti
mov
mov
adc
push
test
shl
sarb
pushf
jne
in
es
xchg
or
push
and
or
outsl
sarb
xchg
sub
shrb
sub
lods
pusha
add
add
add
push
adc
jmp
into
adc
lds
add
rclb
movsb
fstl
sahf
inc
daa
cmc
ss
out
neg
sub
loopne
dec
cmp
xor
mov
cs
and
pusha
fldenv
popa
mov
imul
pop
sub
mov
add
out
mov
dec
mov
mov
adc
push
pop
xor
push
scas
push
push
and
push
mov
jg
push
jmp
push
sub
jne
or
pop
xor
push
nop
push
push
xor
add
mov
aam
hlt
dec
jae
sbb
push
pop
es
jle
jmp
mov
mov
fldenv
mov
and
in
and
add
ja
inc
cmp
and
sub
pop
adc
add
pop
pop
sub
sub
add
pop
mov
lods
inc
push
mov
jge
push
js
fsubrs
cmp
ja
bound
mov
adc
add
inc
pop
popa
mov
adc
inc
jae
in
movsbl
and
add
mov
jg
inc
sub
hlt
jmp
push
adc
aam
int3
jae
add
xchg
mov
pop
rolb
add
and
fucomi
add
cli
invd
shrb
sbb
xchg
dec
jle
and
insb
sbb
inc
add
mov
mov
mov
cmpsl
adc
loop
fs
push
lahf
mov
rorb
add
jmp
aad
int3
or
jo
push
jmp
jnp
push
shrl
movsl
and
xorb
sbb
jge
add
femms
jne
in
mov
mov
sub
loopne
xor
cmpsb
rcrb
sbb
jl
cli
pop
imul
out
es
add
xchg
xchg
adc
mov
jne
mov
push
rcll
or
xchg
add
dec
sub
dec
inc
fdivrl
int3
push
jecxz
sub
loope
mov
loopne
xchg
mov
bnd
pop
add
push
or
rcrb
es
sub
fwait
pop
lidtl
push
fsubrl
fcoms
dec
popa
adc
les
shl
ja
and
push
int3
adc
scas
pop
or
mov
je
push
imul
cmp
sub
fadd
cltd
lods
and
not
xor
sbb
fistl
dec
inc
xor
rorb
inc
sub
aad
sarb
sub
xor
mov
fcoml
rcrl
mov
sbb
aas
xchg
movsb
push
mov
jp
dec
sahf
add
and
js
mov
adc
sbb
xchg
movsb
pop
or
push
lcall
and
fstpt
cmpsl
push
fldt
xor
filds
lock
pop
mov
lds
add
in
das
shll
add
push
push
lock
mov
adc
rcrb
sbb
inc
inc
inc
lahf
stos
and
movsl
aad
push
push
xchg
sub
and
ja
mov
jmp
daa
mov
cmp
cmp
push
mov
lods
jp
rcll
jae
shrb
gs
in
cmp
push
cmp
sub
pop
inc
cmp
xor
ljmp
in
es
sbb
mov
or
movsl
mov
test
fwait
sub
inc
or
adc
sbb
jne
lock
in
add
inc
nop
loopne
xlat
add
and
enter
cltd
jb
add
adc
roll
lcall
ficoms
adc
into
cmc
inc
mov
jle
inc
adc
sub
mov
add
mov
in
cmp
jne
add
ret
lods
xchg
add
dec
add
xlat
pop
mov
and
mov
sbb
or
sub
shlb
cmp
xor
and
or
mov
and
mov
and
insb
pop
mov
es
ror
pop
add
sbb
aaa
sbb
add
out
jo
pop
mov
fcmovb
dec
daa
inc
in
in
mov
mov
inc
sbb
inc
sbb
mov
loopne
jnp
or
pop
mov
push
jg
xchg
pop
xchg
and
and
or
ljmp
pop
xor
call
add
cmpsl
in
addl
sbb
and
add
in
adc
xor
sub
pop
dec
out
mov
pop
arpl
shrb
cmp
imul
aam
inc
jp
js
orl
dec
out
pop
or
sub
add
hlt
xorb
dec
sbb
bswap
sub
dec
stc
aas
cmp
ss
xor
mov
push
xchg
pop
jl
rcll
ja
mov
dec
xchg
adc
and
je
adc
lea
mov
sbb
and
adc
cmp
lcall
mov
shll
loopne
inc
repnz
pop
and
test
ds
das
mov
add
pop
jnp
mov
lods
loope
or
and
outsl
add
cs
pop
push
pop
cmp
arpl
add
and
xor
or
popa
lea
aam
mov
sub
rcl
sbb
pop
arpl
xchg
test
notb
or
loop
add
cmp
mov
jne
popf
or
or
add
cmp
into
push
mov
adc
cmp
xchg
clc
or
adc
aam
enter
add
test
das
xor
push
shlb
std
mov
bound
xchg
adc
xor
imull
pop
enter
in
push
push
test
dec
xor
daa
push
popa
sub
mov
push
out
add
mov
outsl
sub
divl
xor
sbb
mov
and
add
repz
mov
in
add
push
or
mov
loope
mov
cmp
fnstsw
push
add
push
cltd
jb
or
sbb
dec
imul
sarb
inc
inc
bound
cmp
xchg
mov
rcrb
jg
pop
or
addl
sbbb
dec
loopne
jge
ret
dec
enter
inc
fs
fdivl
mov
dec
sub
xor
mov
testb
jae
mov
xor
xor
roll
rclb
mov
jmp
out
imul
std
dec
mov
inc
inc
out
mull
clc
fldenv
cli
mov
fsubl
loope
mov
or
push
fs
cmp
mov
jnp
adcl
xchg
gs
cltd
addr16
aaa
orb
add
sub
rorl
cwtl
pusha
mov
es
mov
push
mov
leave
push
fld
xchg
sbb
dec
or
pusha
push
or
sbb
arpl
loopne
out
xor
orb
in
popf
shl
enter
jno
push
adc
enter
in
sub
xchg
mov
loopne
jnp
and
ljmp
or
dec
sbb
stos
cltd
push
out
pop
xchg
cmpsb
push
aas
sub
add
add
push
mov
lcall
push
jnp
imul
roll
or
cmp
in
dec
add
orl
test
enter
dec
jge
rcll
inc
or
cmp
ds
xchg
or
xor
push
fs
lods
adc
mov
add
xor
std
mov
je
inc
jo
or
add
pusha
imul
test
or
and
and
orb
add
and
adc
or
dec
xlat
pop
mov
sbb
lods
je
fnstsw
jg
pop
or
lock
push
movsb
test
push
add
mov
xor
nop
push
cmp
pusha
or
push
push
pop
mov
mov
adc
pop
inc
roll
or
cmpb
push
or
mov
add
adc
loopne
sub
xchg
mov
mov
insl
movl
or
pusha
and
je
rorb
int
insb
loopne
pusha
pop
add
test
loop
orl
lods
negl
mov
pop
cltd
add
sub
cs
adc
pusha
out
bound
xchg
dec
xchg
mov
movsb
or
xchg
ds
sbb
aad
aaa
or
enter
es
sbb
movsb
fildll
out
pop
pop
cmp
pop
adc
mov
jmp
loop
jp
mov
int3
push
push
sub
xor
inc
mov
xchg
add
and
mov
ficoml
loopne
sahf
push
nop
and
or
cli
inc
arpl
je
inc
push
and
mov
push
lods
leave
add
mov
addb
lahf
xchg
rclb
xchg
mov
mov
dec
and
pushf
push
mov
pop
cmc
jne
sbb
or
and
inc
sub
and
icebp
pop
mov
les
dec
adc
into
je
in
inc
push
out
fmull
cltd
cmp
mov
bound
out
rcll
loopne
pop
movsl
cmp
addr16
cmc
sbb
stos
adc
and
sar
jmp
mov
int3
sub
imul
inc
push
gs
nop
or
repz
ja
outsb
in
jne
divl
jb
subl
arpl
jns
clc
mov
push
call
and
inc
xor
mov
iret
arpl
or
sbb
jmp
xchg
js
ss
push
xor
jo
adc
dec
cs
cmp
push
inc
xchg
mov
loop
pop
sub
adc
je
enter
inc
and
sbb
adc
mov
xor
daa
mov
popf
pop
out
out
nop
sub
and
adc
daa
pop
dec
je
sbb
jg
inc
inc
or
cmp
cmc
fsubr
dec
add
xchg
flds
mov
test
push
imul
sbb
or
jmp
sub
sub
push
cmp
sbb
push
mov
adc
addr16
mov
cmp
xor
inc
sub
fmuls
rolb
mov
and
or
rorb
fimuls
push
rolb
push
xchg
mov
xor
push
xor
sahf
inc
mov
insb
and
push
addl
dec
or
ds
push
push
cmp
mov
mov
and
ljmpw
and
rcr
dec
pop
and
jbe
imul
data16
cmp
mov
add
add
push
fwait
push
imul
stos
pop
push
jb
repnz
leave
cmp
fstps
add
push
adc
ficomps
push
jne
push
inc
or
xchg
sub
leave
mov
push
in
nop
dec
mov
push
add
adc
roll
push
test
xor
xor
data16
testl
pop
popf
sub
pop
adc
push
es
ret
pop
sti
mov
mov
push
mov
add
mov
pop
fs
cltd
mov
inc
loopne
es
cmp
adc
sub
push
push
in
fs
cmp
mov
rcl
adc
cmp
inc
je
add
pop
add
pop
sub
adc
push
loopne
jg
adcl
xor
lds
loopne
or
add
ljmp
je
add
mov
mov
out
dec
loopne
add
stos
jb
cmp
roll
mov
xchg
in
cli
or
inc
fldl
dec
orb
adc
fisttpll
adc
lcall
xchg
mov
cltd
daa
stc
and
mov
dec
pop
jne
aas
push
lock
sub
jne
mov
xor
push
inc
jp
fwait
loopne
mov
addr16
mov
push
pop
test
lds
enter
mov
adc
adc
sbb
fmull
or
adc
loope
add
sub
add
adcb
cmc
xlat
and
insb
push
sbb
dec
mov
ret
rclb
mov
rorb
mov
push
add
sbb
mov
and
and
inc
inc
push
out
outsl
jnp
sbb
gs
cmp
pop
push
pmaxsw
xchg
fsin
andb
data16
push
or
mov
or
mov
push
mov
scas
sbb
cwtl
or
ds
dec
push
mov
mov
pop
inc
xor
sbb
lock
push
jp
jb
or
inc
dec
mov
ret
dec
mov
shll
lea
into
into
jo
push
mov
sub
and
add
loopne
loope
mov
jnp
or
ja
pop
movsl
and
repnz
dec
cmc
aaa
pushf
dec
rolb
add
pushf
in
in
jb
sub
jo
push
pop
cmpl
xor
adcb
scas
push
rorb
pushf
in
inc
fdiv
icebp
mov
icebp
jb
jmp
push
mov
cmpsl
cmpb
xor
cmp
lahf
notb
push
ljmp
sub
or
and
jns
dec
cmpb
mov
dec
scas
xor
pop
sti
mov
mov
dec
int
add
jnp
in
pusha
and
dec
rorb
std
ret
lea
add
mov
pop
jl
or
out
pop
shl
push
int3
jle
pop
das
dec
test
xchg
js
mov
bnd
pusha
add
cmp
or
ja
push
into
or
sub
mov
lds
sarl
dec
fmuls
out
sbb
and
leave
pop
dec
pop
pushf
adc
or
lahf
mov
fdivr
lea
cs
mov
outsl
inc
or
mov
loopne
mov
xchg
aad
xchg
cwtl
fisttpl
arpl
cld
adc
inc
jecxz
mov
xor
bound
sarb
or
xor
push
mov
and
pop
call
cmp
mull
rcrl
test
and
fdivrs
inc
or
mov
cmp
add
xor
xor
mov
psubusb
insb
lret
push
jle
roll
icebp
in
sar
add
xchg
dec
dec
loope
loopne
xchg
mov
and
jbe
mov
movsb
adc
cmpl
test
sbb
push
inc
xchg
ss
jne
mov
add
pop
shlb
mov
loopne
lahf
lahf
lret
test
mov
cmp
lea
call
cmp
jp
push
xchg
xchg
xor
or
bound
stos
jo
mov
setb
fisttps
pop
into
les
mov
add
mov
and
scas
cmpl
popa
sti
adc
adc
frstor
fstl
cmpsb
fwait
push
push
lea
call
adc
dec
lock
cmp
mov
and
add
popf
mov
or
xchg
inc
mov
add
popa
push
add
insl
clc
imul
dec
add
arpl
add
rclb
push
add
sbb
dec
aam
jl
and
cmp
and
cltd
nop
aam
mov
inc
mov
fcomps
sahf
inc
add
jp
mov
dec
adc
loop
push
sbb
imul
test
cmp
loopne
push
push
sbb
mov
out
addb
es
imul
imul
imul
dec
ret
dec
mov
mov
dec
lods
dec
repz
cmpl
or
mov
and
adc
or
jne
stos
inc
aad
xor
ret
sub
push
aaa
and
push
leave
dec
cmp
xor
sub
dec
adc
xchg
adc
push
cmpsb
cmp
mov
push
lds
adc
pop
dec
popf
mov
add
jno
xchg
mov
sbb
or
adc
lock
push
adc
push
imul
idivl
pushl
pop
fildl
inc
inc
stos
and
mov
cmpsl
xchg
lcall
rcrb
test
xchg
sub
mov
push
out
push
push
inc
or
or
test
pop
jbe
popf
das
mov
imul
sbb
or
cmp
jmp
andl
fs
or
dec
rorb
cmp
push
push
mov
fisubl
inc
not
shll
lods
jo
inc
mov
fisubrl
inc
dec
mov
add
arpl
cltd
cwtl
lret
adc
jl
orb
cli
xor
outsl
mov
gs
pop
clc
imul
adcb
or
jl
out
in
in
jmp
cmpsb
push
test
dec
out
scas
push
faddl
and
imul
inc
stos
dec
fstps
inc
cmp
mov
cltd
push
push
push
fidivrs
push
fidivl
mov
add
pop
jp
add
adcb
sub
mov
adcb
or
inc
ret
insb
cli
jbe
cmpl
and
pop
push
jne
cmp
jbe
add
sub
mov
pop
pusha
fsubrl
cmp
pop
sbb
test
dec
shr
or
imul
sub
js
jbe
rcl
aaa
push
sbb
mov
mov
adc
notb
mov
loopne
nop
mov
cmpl
pusha
mov
aaa
fadds
int3
mov
inc
outsb
sbb
les
add
add
jns
push
or
dec
loope
add
lea
inc
mov
rcrl
mov
mov
add
or
sub
xor
xlat
cmp
dec
fimuls
inc
xlat
push
int3
add
pop
dec
dec
rolb
and
push
and
push
cli
inc
sbb
and
push
lahf
jne,pn
mov
addr16
loope
push
push
and
sub
dec
jmp
jne
cmp
push
and
adc
and
and
lods
adc
divb
xor
xor
xchg
or
adc
addb
dec
push
inc
mov
test
pop
xchg
cwtl
popa
xor
adc
xchg
adc
sbb
inc
cmp
or
mov
adc
pop
push
aaa
cld
sbb
adc
sbb
pop
enter
mov
or
or
mov
aas
jge,pt
mov
dec
idivl
out
enter
adc
inc
push
add
inc
and
dec
aam
lods
cmp
add
inc
movsb
sbb
popf
push
ret
add
ss
test
jbe
xor
inc
fadds
cmp
adc
sub
pop
call
and
subl
pop
jne
fldpi
pop
push
push
out
dec
mov
mov
add
inc
and
push
or
pop
lahf
shrb
inc
inc
or
ss
add
jns
loop
sbb
pop
ss
pop
int3
push
pop
fs
cmp
rep
popa
dec
rorb
std
ss
and
fmull
pop
add
int3
xor
sub
and
and
aad
int
out
movb
xchg
test
cmpl
lea
push
ret
idivb
adc
sbb
and
or
jmp
dec
xor
jp
and
dec
call
jge
sti
dec
lea
lea
pop
adc
mov
ja
fiaddl
inc
jl
pop
fcomps
or
shr
jnp
pop
dec
ja
je
popa
jnp
sub
js
jmp
or
lcall
andl
pushf
test
jne
loop
mov
test
sbb
and
mov
repz
mov
scas
movsb
orb
clc
add
inc
jmp
mov
outsb
scas
std
dec
add
sbb
aas
dec
orl
sub
and
or
or
jnp
test
fldz
andl
shrl
add
pushf
adc
add
enter
push
add
mov
shlb
push
call
cmp
aam
cmpsl
adc
or
and
inc
roll
neg
pop
sbb
nop
inc
stos
or
movl
xor
push
push
test
xchg
inc
ret
mov
movsb
jne
or
movsl
pop
jmp
lcall
mov
mov
arpl
loope
adc
ljmp
xchg
push
dec
inc
mov
mov
addl
or
mov
cmp
inc
in
adc
call
mov
pop
flds
xchg
cmp
das
clc
jne
mov
sub
xor
test
xchg
aas
js
sbb
in
sub
loopne
sbb
mov
mov
outsl
cmpl
xor
jp
pop
xchg
mov
xor
jmp
add
jo
dec
dec
stos
push
sbb
adc
cmp
push
sub
loop
out
es
orl
popf
inc
adc
fimuls
lcall
subl
adc
outsb
movsb
xor
and
add
push
mov
scas
cld
faddp
dec
inc
and
push
adc
cmp
ret
xchg
pop
insb
pop
pop
fcomp
inc
mov
ret
scas
add
scas
or
das
stos
pop
out
xor
xchg
ret
adcl
push
cmp
and
fistpll
push
cmp
push
or
sbb
sub
push
push
push
push
push
call
cmp
inc
push
mov
adc
jbe
sub
popa
sub
cmpsb
test
loopne
mov
pop
push
mov
loop
es
mov
or
mov
jae
loop
or
adc
stos
lods
jbe
or
inc
call
outsl
out
pop
inc
lar
inc
push
adc
sbb
pop
add
sahf
pop
and
lods
inc
mov
aas
loopne
mov
dec
pop
inc
cltd
push
jne
xor
adc
mov
cmp
fcoml
and
push
pop
outsl
cmp
mov
stos
adc
nop
pop
mov
lock
add
cwtl
fcompl
data16
sbb
cwtl
dec
mov
xchg
push
push
xchg
push
repnz
or
push
insb
xchg
lock
cmc
int3
mov
push
and
xchg
push
test
lret
sub
mov
mov
or
push
js
xchg
enter
push
and
in
fistpll
leave
cli
insl
shl
push
aad
out
stc
fimull
fmul
pop
dec
loopne
pop
imul
out
cli
mov
adc
adc
lret
es
out
cmp
mov
imul
dec
outsb
cmp
mov
call
push
mov
jmp
sahf
xchg
and
mov
add
fidivrl
out
cld
les
mov
sbb
cmp
adc
cmpsl
repnz
adc
loopne
and
hlt
add
pop
addr16
inc
cmp
rcr
arpl
repnz
loop
hlt
or
sbb
cmp
mov
mov
arpl
jbe
mov
jl
mov
stc
sbb
inc
xchg
addb
cmp
xchg
fdivrp
mov
gs
pushf
add
push
push
push
pop
mov
cmp
out
cld
sti
rep
movsw
push
cld
mov
loope
movsb
mov
dec
lcall
adc
ljmp
or
das
out
mov
cmp
jle
movb
cmpb
adc
lods
and
outsl
sbb
inc
jg
push
and
lds
inc
cmp
movsbl
xor
out
ss
push
push
add
jb
and
daa
push
cld
je
push
push
scas
lret
mov
pop
mov
adc
les
xchg
and
mov
ror
es
mov
fadds
stos
cmp
cmp
sub
adc
mov
pop
cmpsb
subl
jle
mov
vmovq
dec
cmp
jl
xlat
inc
xchg
pop
adc
sbb
sub
rclb
inc
lahf
xor
cmp
add
inc
xor
faddl
cmc
ss
push
shll
pop
mov
fstpt
loope
shrb
adc
ficompl
pop
adc
or
mov
jne
inc
call
or
adc
cmpl
fwait
mov
push
add
cmp
cmp
add
push
pop
fdivrl
cmp
or
or
jnp
or
jbe
fmull
jno
jmp
push
jmp
por
fcoml
jmp
adc
pop
adc
push
adc
dec
adc
dec
adc
aas
pop
jmp
sbb
xor
jmp
sbb
es
sbb
and
pop
pop
jmp
and
or
jmp
and
fbstp
adcl
push
sbbl
mov
rolb
mov
jnp
lock
push
clc
add
sahf
out
and
xor
sahf
out
sahf
cmp
push
jns
out
pop
pusha
gs
out
sahf
out
jns
orl
xchg
xchg
pushf
mov
jns
mov
mov
or
add
and
or
or
push
movups
adc
adc
push
pop
dec
mov
sbb
sbb
push
pop
and
and
aas
or
cld
repz
sarb
jle
sahf
test
movsb
adcl
insb
mov
add
idivl
fcomi
jo
mov
xchg
arpl
jb
push
xlat
lahf
sub
jae
cmp
push
jg
ja
outsb
sbb
pop
movsb
xchg
xor
mov
xor
mov
sub
sub
mov
cld
push
push
inc
cmp
jbe
adc
inc
shlb
mov
inc
dec
scas
mov
mov
mov
mov
cmpsb
push
rclb
leave
cli
jmp
inc
push
push
xchg
pop
pop
adc
imul
pop
mov
fsubl
int3
adc
movsl
push
push
arpl
pop
int3
dec
add
add
aam
push
sahf
aam
dec
in
inc
cltd
add
daa
test
and
sub
setno
add
inc
jl
inc
fmuls
lret
inc
divl
push
cs
sti
sub
jns
jb
sub
push
fdivrp
je
push
mov
imul
or
cmc
sub
mov
xchg
mov
mov
add
add
add
inc
xor
faddp
mov
movsl
cmp
mov
cwtl
pop
pop
lods
xlat
xchg
or
cmpsb
cmp
jno
sub
leave
fwait
adc
mov
inc
popa
outsb
in
and
inc
mov
test
add
adc
push
imul
xchg
loop
cmp
or
sbb
push
pushl
lea
pop
pop
pop
push
cmp
fnsave
imul
call
pop
test
xlat
and
mov
mov
add
test
push
jne
mov
hlt
mov
or
jno
mov
je
js
outsb
adc
std
fistl
pusha
pushf
mov
mulb
testl
inc
jne
push
dec
adc
jno
aas
jo
es
jecxz
jbe
daa
sub
movl
in
insb
mov
adc
push
mov
pop
test
jno
loopne
dec
jmp
adc
testl
je
dec
jg
lahf
enter
cld
push
clc
lock
sbb
xchg
clc
sbb
sbbl
xor
mov
or
adc
cmp
cmp
pop
sub
cmp
int3
add
or
add
out
xchg
fmuls
push
and
push
or
pop
pop
dec
sbb
mov
push
adc
sbb
sbb
test
jmp
inc
adc
roll
xchg
xor
or
xor
clc
mov
mov
mov
popa
pop
mov
clc
xchg
jne
arpl
lock
bound
lods
push
dec
mov
loopne
push
push
mov
pop
jecxz
leave
adc
pop
and
lods
inc
test
or
add
push
xchg
pop
or
inc
xchg
xor
test
cltd
pop
sub
inc
out
rcl
and
push
in
jp
add
cwtl
or
push
nop
pop
jge
aam
add
stc
push
sbb
nop
add
fldl
xor
pusha
push
mov
dec
push
jmp
add
sbb
jne
imul
pushf
add
xchg
mov
inc
enter
lret
mov
test
add
scas
loop
jo
rclb
sub
push
stos
push
push
loop
push
out
lods
rcrl
lock
sub
adc
into
or
cmp
lret
xor
mov
push
popa
or
mov
or
xchg
fimuls
pop
or
mov
mov
or
je
cmp
mov
dec
sbb
push
mov
pop
shlb
daa
push
mov
xchg
mov
add
pop
mov
dec
adc
jmp
call
js
roll
mov
aaa
sbb
pop
fcomps
sub
add
imul
faddl
daa
xor
xchg
repz
xor
push
incl
mov
push
ret
lds
fsub
adc
xchg
xchg
imul
xchg
pop
movsb
inc
dec
sbb
push
aas
xor
outsl
loopne
mov
mov
fistl
mov
andb
jo
xor
rorb
std
jp
cmp
mov
cld
or
push
push
popl
ja
mov
shlb
or
add
cmpsl
jp
or
nop
push
popl
xorl
movsl
fcoml
and
sbb
add
add
sahf
jl
inc
mov
in
cmp
xchg
add
adc
sub
in
xor
lds
outsb
mov
outsb
lret
sub
insb
divl
push
or
ds
inc
add
sbb
inc
inc
insb
inc
sahf
enter
jo
je
js
in
es
addb
xchg
in
xchg
dec
cwtl
or
pushf
or
mov
and
cmpl
dec
in
fnsave
pusha
dec
aaa
dec
aaa
mov
les
movsb
xor
int3
rcl
add
dec
fdivr
add
push
push
test
test
test
nop
cmc
or
inc
jl
aaa
add
cwtl
add
lea
add
jge
loope
mov
and
sub
sbb
repnz
and
and
push
cmp
jl
sub
jns
sub
add
or
mov
add
push
or
mov
fisttpll
sbbl
shrb
mov
push
mov
or
lock
sti
lods
sub
and
pop
jne
lock
adc
push
rol
outsl
pop
jl
jmp
out
push
loop
ret
xor
xchg
sbb
push
outsl
sub
mov
cmp
addr16
mov
jge
and
add
stc
jle
cmp
add
sbb
in
rcrl
int3
xchg
dec
mov
out
jmp
pop
das
sub
mov
js
push
lock
jmp
test
int3
imul
sub
or
push
pushf
pop
pop
call
cmp
adc
cmp
add
ljmp
hlt
cmp
jl
stos
sub
jle
ret
push
roll
push
loopne
pop
adc
pop
stos
mov
lea
dec
and
and
sahf
sbb
decb
outsb
mov
xchg
pop
add
push
sub
ds
ljmp
dec
loope
adc
cmpb
jne
sub
loope
fidivrs
add
pop
pusha
adc
pop
cmp
pop
inc
cmpsb
push
jbe
pusha
loope
cmpsb
jbe
or
sarb
mov
cmp
inc
add
in
jge
imul
lret
sahf
aad
lcall
xchg
sub
movsb
pop
dec
clc
push
add
lock
push
inc
daa
add
dec
fcomp
out
lret
adc
in
push
cmp
pop
xchg
cwtl
mov
dec
inc
cld
call
and
push
incl
mov
xlat
shr
and
leave
dec
repnz
push
xor
xchg
bound
cmp
jns
xor
push
cmp
loope
jge
lahf
add
jns
and
jo
test
gs
out
pop
push
shll
sub
jo
icebp
or
jne
push
pop
nop
loopne
xchg
inc
clc
adc
jmp
adc
in
xchg
push
inc
std
mov
jle
fwait
ret
popf
lods
inc
or
loopne
cltd
add
dec
popa
mov
mov
aaa
sub
adc
or
stos
xor
jno
adc
mov
adc
les
shlb
adc
shll
shld
mov
xchg
into
or
push
jmp
sbb
push
sub
testb
adc
jne
xlat
jmp
inc
js
jmp
xor
test
push
add
sbb
loopne
dec
aad
cmpsl
or
or
imul
test
or
mov
or
loop
scas
mov
xor
loope
pop
xchg
dec
shrb
xor
pop
sub
int3
loope
jbe
jb
scas
cltd
or
test
mov
xchg
push
jge
or
ja
cmp
jo
push
aas
push
push
inc
cwtl
arpl
adcl
ret
add
and
loopne
mov
dec
mov
jo
fs
lea
pushl
xchg
and
xor
dec
pusha
push
imul
mov
push
mov
rorb
push
mov
ret
xchg
and
clc
aaa
pop
pop
data16
decl
mov
push
es
sub
add
cmp
or
shr
lds
pop
ret
in
add
xor
push
add
sbb
pop
lret
lds
ja
xchg
lahf
jmp
mov
arpl
daa
pop
loopne
and
popa
ret
add
cmc
into
cmp
push
popa
pop
fwait
jmp
jbe
add
mov
sti
stc
sub
add
jne
mov
into
popf
arpl
jmp
pop
jbe
inc
mov
inc
sub
or
add
movaps
and
stc
or
aam
sahf
add
pop
cltd
stc
popf
or
subb
popa
add
arpl
push
and
orb
shr
xor
pop
xchg
pop
ss
push
jg
dec
adc
xchg
loope
mov
adc
movsl
xor
jo
lea
scas
or
nop
jns
push
mov
mov
stos
xor
rorb
ljmp
push
xchg
out
push
aam
lods
call
lahf
add
inc
mov
inc
call
push
test
ret
inc
data16
ret
mov
pusha
jo
imul
xchg
test
fdivs
inc
loope
pop
cmp
xchg
mov
or
pop
adc
popl
lret
xor
inc
or
xchg
xor
push
enter
push
mov
or
mov
add
dec
ficomps
add
mov
or
lea
mov
fs
mov
in
inc
inc
xorl
lcall
cmp
xor
and
mov
int3
pop
gs
loope
test
dec
lock
and
mov
fstl
mov
cs
xchg
mov
cmp
and
xchg
mov
push
inc
pusha
mov
aaa
inc
movsb
lock
sub
inc
es
filds
mov
add
add
mov
fstl
fldz
fcomp
fnstsw
mov
mov
scas
sarb
faddp
cmp
push
adc
and
xchg
mov
movsl
addr16
push
clc
or
push
stc
xchg
inc
push
icebp
fadds
mov
das
adc
pop
hlt
xlat
hlt
pop
hlt
jl
cmp
enter
lea
jge
xchg
insl
jmp
loop
jne
add
insl
adc
sbb
sub
mov
push
das
mov
loope
icebp
fistps
or
fdivrs
movl
mov
mov
jae
mov
add
cmp
popa
push
xchg
dec
mov
pop
mov
lea
jne
movsb
stos
or
cmp
xchg
movsb
ret
dec
jbe
sbb
add
inc
sbb
push
int
mov
inc
mov
inc
div
add
add
adc
adc
pop
ja
push
inc
das
jmp
or
dec
push
sbb
das
jp
mov
mov
js
mov
or
mov
clc
imul
outsb
sub
int3
loopne
shr
dec
mov
inc
or
add
in
out
inc
imul
call
decl
mov
push
cmp
in
inc
push
andl
push
sbb
mov
test
push
xorl
inc
inc
adc
data16
cwtl
scas
movsb
popf
xlat
push
ljmp
jb
mov
push
jnp
incb
aam
jmp
or
mov
out
and
jne
xchg
shl
nop
test
mov
out
xor
pop
cmpsb
mov
mov
add
push
push
xor
and
push
mov
inc
inc
cmp
loop
insl
rolb
and
xchg
movsb
mov
push
mov
pop
cld
js
popf
mov
jge
daa
push
jbe
sti
push
pusha
and
add
fwait
jb
dec
mov
sbbb
mov
out
add
aaa
add
popa
push
push
jmp
or
fcoms
pop
push
jns
mov
cmp
jb
push
or
repnz
jb
adc
or
cmp
notl
mov
lods
adc
push
je
mulb
dec
push
xchg
loope
add
add
xchg
dec
xchg
stc
imul
arpl
and
adc
adc
push
push
jecxz
testl
pop
popf
jne
popa
jecxz
out
popf
pop
movsb
dec
mov
pop
pop
push
mov
add
jae
gs
xchg
sbb
cmpsl
sbb
cmc
sub
popl
sub
mov
cli
sub
fsubrl
rcrl
sub
xchg
cmp
mov
loop
pop
adc
add
inc
sbb
push
pop
data16
pop
movhps
mov
pop
mov
xchg
jo
je
mov
add
ret
andb
addb
pop
int
lcall
sub
dec
pusha
and
dec
pop
jge
daa
add
mov
cmp
aam
call
pop
lock
ficompl
cmp
je
xor
push
jmp
add
movsb
push
jl
lock
add
out
lock
add
push
mov
fwait
mov
cmp
lret
dec
jmp
mov
lret
add
pop
mov
lods
or
pusha
ss
lds
inc
pusha
mov
xlat
scas
add
dec
fwait
scas
and
add
leave
cltd
push
or
mov
out
add
pop
js
jb
mov
and
scas
cmp
add
jbe
push
divl
xchg
push
adc
add
pop
ret
push
in
cmpsl
add
idivl
mov
pop
jne
push
push
xchg
aam
aaa
push
dec
sti
sbb
pop
ret
dec
dec
test
jmp
les
inc
sbb
adc
and
cmp
stc
mov
inc
mov
jo
shll
inc
ret
mov
jbe
adc
jle
loop
pusha
push
add
pop
and
xchg
cmp
call
pop
or
push
sbb
lret
mov
and
add
pop
xacquire
inc
sbb
or
ljmp
out
test
mov
test
sub
jno
fcmovnbe
and
push
cmpsb
sahf
pop
push
mov
pop
test
ljmp
mov
inc
add
movmskps
shlb
call
test
sub
int
and
cltd
jns
aas
adc
or
push
int
stos
ficomps
rclb
arpl
sbb
push
cmpsb
test
mov
jo
push
mov
movsl
mov
pop
pop
fstpt
ljmp
adc
and
rdtsc
pop
dec
or
sbb
js
mov
pop
push
rcll
sbb
bound
xchg
push
mov
inc
pop
sbb
gs
push
mov
test
imul
int3
fadds
lea
rcr
inc
sub
movswl
lcall
test
adc
fs
push
fldl
add
loope
push
xchg
sub
lods
add
faddl
add
adc
shr
or
pusha
mov
movsl
shlb
aam
mov
push
das
jns
call
pop
inc
sub
repnz
repnz
adc
iret
pop
add
sbb
pop
nop
jbe
sub
addl
in
cmp
fnstenv
or
addl
aam
jbe
push
add
decb
fiadds
rolb
mov
sahf
pop
and
cmovnp
add
movsb
cmp
dec
dec
xor
or
icebp
inc
or
cltd
mov
jge
push
test
push
inc
sub
xchg
lock
jo
mov
xchg
mov
mov
jmp
outsl
add
adc
dec
rol
fidivrs
add
inc
cmpsb
mov
xchg
stos
inc
pop
push
mov
jo
adc
add
inc
xchg
fucomi
or
mov
xorb
mov
daa
sub
cwtl
xor
mov
sbb
cmc
xchg
or
dec
or
movsb
cmp
aaa
lods
lds
cmp
loopne
imul
iret
sbb
add
and
jo
test
jecxz
push
insb
push
adc
inc
gs
add
or
dec
bound
add
es
xchg
pushf
mov
and
push
test
push
sub
xchg
ja
or
xchg
andb
or
loopne
rcll
pop
and
test
jecxz
jle
jl
push
xchg
mov
mov
js
cltd
shrb
setbe
add
xlat
arpl
paddsw
push
push
adc
jne
sub
shrl
roll
dec
mov
cmp
jb
xlat
mov
push
mov
add
inc
nop
inc
mov
sbb
mov
lcall
or
dec
je
in
push
incl
shlb
in
movsl
je
adcb
test
mov
jo
fnsave
jge
mov
loop
incb
inc
cmp
push
jecxz
mov
loope
add
lahf
mov
xor
mov
mov
les
sbb
pop
imul
testl
fsubrs
sbb
mov
inc
push
or
ret
call
ds
or
out
sbb
add
add
ljmp
add
call
movsl
popf
push
push
js
add
cmpsl
sub
inc
inc
movsl
loopne
xchg
test
sbb
mov
sub
xor
mov
cs
in
stc
mov
in
or
es
push
adc
add
dec
sarb
outsl
dec
sub
pop
inc
or
shll
out
imul
cwtl
or
add
repz
jne
xchg
push
rorb
jno
sub
pusha
xchg
and
xor
dec
int
adcb
pop
inc
rorb
add
or
add
cmpsl
adc
mov
xchg
push
add
cmpsl
adc
xor
xor
inc
out
mov
test
shr
adc
adc
sub
je
repnz
sbb
mov
outsl
jns
nop
or
and
pop
add
out
xchg
pop
inc
inc
outsl
and
sub
or
sub
xor
cmp
pop
inc
cmp
or
add
mov
fcompl
push
in
and
lock
dec
and
into
insl
lods
fmull
inc
push
imul
bound
jmpw
xor
popf
lods
out
add
pop
dec
cmpsl
xor
cltd
dec
ret
mov
sarb
mov
mov
icebp
jmp
cmp
sub
fidivrs
loopne
sub
sbbl
adc
subb
jmp
mov
jno
lret
in
mov
adc
push
addl
push
dec
fidivs
push
or
out
rol
push
adc
cmc
cmpsb
add
sub
jb
mov
adc
xor
test
mov
add
cmpsb
mov
enter
dec
enter
xor
adc
mov
fdivrl
cmovo
std
jge
mov
pop
sub
inc
imul
cli
es
cmp
jne
hlt
push
idivl
call
push
andb
stos
addr16
orl
in
inc
pusha
add
xchg
cmp
lret
xor
orl
push
shll
cmp
jge
nop
repz
sahf
mov
push
push
dec
lahf
push
je
xor
sbb
push
loopne
dec
jmp
rolb
sub
call
leave
xchg
push
inc
movlps
lret
movsb
sahf
sar
inc
sub
scas
push
stos
add
cli
push
xor
or
inc
pop
loopne
cmpsl
cmp
xchg
sbb
inc
in
test
pop
and
sub
psubusw
sub
and
test
adc
xchg
dec
sahf
or
lea
push
jmp
cmc
mov
mov
sbb
movzbl
shrb
pop
das
sbb
mov
cmp
jge
dec
inc
and
clc
sub
push
jl
mov
lods
popa
jns
sbbb
sub
inc
lods
or
dec
xchg
popa
pop
js
addb
rcrl
pop
popf
out
les
aam
dec
mov
dec
aad
insb
add
push
mov
push
dec
adc
cmpsl
cmp
rol
push
cmp
shr
push
dec
xor
adc
cwtl
pop
add
add
imul
sub
icebp
xor
adc
ret
xor
dec
xlat
hlt
or
sub
iret
cmpsb
lods
clc
cli
or
pop
gs
hlt
dec
mov
iret
lret
incb
test
cmp
xchg
or
je
insb
mov
cmpl
mov
loope
and
add
jo
cmpsb
ss
adcl
lea
xchg
ret
push
test
out
sub
pushf
data16
shll
or
fcmovu
jmp
mov
jmp
or
xchg
or
ret
and
rol
fwait
sti
mov
enter
jl
mov
pop
js
loop
cs
das
jl
or
dec
push
add
lds
sbb
test
vcvttss2si
pop
inc
les
sub
push
aaa
sbb
push
mov
inc
pushf
nop
sub
push
and
cmpb
lods
or
lock
movl
push
mov
mov
aaa
sub
push
out
lea
stos
mov
push
ret
test
sbb
mov
les
int
test
or
inc
je
popf
add
lds
mov
add
fdivrp
mov
incl
sub
pushl
cmpb
or
mov
es
dec
jnp
imul
jo
jb
in
dec
enter
and
insb
out
insl
int3
loop
ss
lock
cwtl
std
dec
imul
bound
xor
fimuls
mov
cmp
jae
mov
mov
stos
in
mov
xchg
popf
adc
push
push
cmp
ret
or
jne
sarl
movsl
std
sbb
jne
enter
cmp
out
sarb
shlb
mov
or
inc
das
push
pop
push
stc
sbb
cld
clc
or
inc
bswap
pop
cmp
std
mov
mov
push
std
or
and
inc
movzbl
and
add
dec
or
push
add
inc
imul
mov
out
sahf
pop
jnp
adc
aaa
call
push
mov
adc
in
int3
pop
sti
push
mov
lea
cmp
mov
jbe
mov
push
fimuls
loop
out
push
jns
jno
pop
inc
pop
cmp
rorb
mov
pop
add
dec
mov
pop
sbb
ret
push
jmp
mov
pusha
mov
mov
xor
notl
lock
pop
adc
pop
fsubs
sbb
push
fisttpll
mov
and
test
dec
and
shlb
inc
sbb
jbe
pop
add
test
mov
and
es
push
and
jne
cwtl
xchg
sbb
sub
jno
mov
push
add
ret
push
add
jle
fsubs
repnz
mov
sbb
mov
arpl
faddl
bound
fsubrs
cld
xchg
jae
jo
jns
pusha
les
xchg
sahf
out
mov
gs
push
push
stos
inc
in
mov
pop
test
hlt
mov
cmp
insl
sub
inc
xchg
seta
in
and
lods
push
add
sub
lret
shlb
rclb
adc
fdivl
jg
aam
and
lods
in
push
je
and
dec
rorb
sub
nop
or
pop
fdiv
les
test
loop
pop
cli
fwait
rcrl
dec
jne
and
pop
dec
adc
sub
subb
mov
loopne
xor
xchg
mov
fcomps
into
add
push
rorb
sbb
mov
pop
dec
jb
cmp
mov
mov
xor
leave
psraw
dec
out
xchg
addr16
push
ret
pop
mov
les
pop
xor
and
and
xorb
pop
push
dec
cmp
mov
dec
pop
neg
daa
xchg
lret
ret
sbb
push
sub
push
pop
mov
pop
sub
je
mov
insb
jmp
sub
jb
addr16
or
adc
mov
xchg
or
sbb
sbb
popf
adc
popa
pusha
xor
jo
push
dec
jb
dec
movaps
or
mov
dec
add
lock
sbb
xor
mov
or
jns
test
push
inc
icebp
adc
add
mov
xor
adc
fadds
xorl
push
int
adc
pop
scas
sub
add
and
xchg
icebp
adc
subb
add
ds
clc
jo
mov
popf
mov
or
inc
cmp
sub
or
je
iret
into
cmp
test
fcoms
std
cmp
ret
jg
mov
fidivl
imul
or
sub
popf
mov
sahf
lea
mov
mov
shl
mov
mov
jge
test
mov
sbb
jb
and
adc
xor
mov
adc
out
dec
stos
ret
cmp
leave
sti
imul
inc
stos
data16
bound
shll
inc
inc
jmp
inc
fs
movsl
mov
or
lea
and
icebp
add
das
xchg
mov
sbb
mov
js
and
test
adc
sub
repnz
or
sub
mov
mov
add
arpl
dec
mov
dec
inc
cltd
add
ret
jns,pt
sbbl
push
je
mov
sub
push
pop
mov
adc
ss
test
mov
jecxz
movsb
rorl
lcall
pop
scas
aam
pop
es
push
clc
in
mov
lret
sbb
in
dec
xchg
or
fwait
sub
shrb
shlb
ror
dec
cmpsl
jmp
jne
xchg
mov
movsb
movsl
mov
pop
mov
cmp
call
mov
movsb
push
lock
jne
out
lods
and
dec
inc
test
xor
adc
adc
push
inc
fadd
mov
and
xchg
mov
test
sbb
enter
add
mov
bound
ret
outsb
and
adc
shl
add
das
insb
and
push
push
sbb
and
jo
je
shl
add
pop
mov
mov
es
dec
clc
or
add
jne
je
ret
xor
add
outsl
jle
popa
addr16
push
sub
repz
enter
and
adcb
mov
loop
cltd
push
dec
dec
les
rclb
out
jle
xor
sub
cmpb
push
push
mov
adc
mov
pop
add
mov
arpl
add
jl
mov
sbb
in
bound
call
fimuls
push
or
hlt
clc
mov
sub
push
cmpsb
leave
cmp
clc
lahf
je
sbbb
sub
in
adc
das
sti
jne
repnz
inc
mov
je
cltd
test
gs
pop
cmp
jno
sbb
nop
xchg
les
push
dec
addl
mov
xor
je
push
xchg
cmp
dec
lods
ret
or
and
xorl
dec
rcrb
sub
jnp
adc
push
push
cmp
cltd
test
repnz
jmp
sub
in
iret
lcall
jbe
inc
icebp
imul
jle
les
jae
sub
jle
mov
fcoml
push
movsl
dec
sbb
add
add
pop
arpl
push
adc
add
test
mov
ret
rcr
cmpl
mov
comiss
addl
rorb
cmp
test
shr
xor
fidivrs
fbld
push
not
loop
test
movsb
les
imul
movl
call
loopne
loopne
add
loopne
xor
idivl
or
pusha
sar
xchg
pusha
add
inc
push
inc
push
std
shlb
aas
pop
nop
sbbl
add
out
dec
sbb
adc
pop
arpl
out
sahf
andb
shll
adc
or
push
or
sub
fsubr
mov
sub
nop
loope
inc
push
jl
push
pop
sbb
pop
mov
jge
adc
jp
xchg
and
iret
jne
push
or
jb
xchg
or
dec
mov
push
shlb
sbb
add
xor
jb
ret
xchg
ja
inc
inc
push
inc
add
test
sub
and
out
and
sub
mov
decl
push
cs
push
or
add
int3
mulps
call
test
inc
add
xchg
sahf
adc
pop
inc
mov
and
dec
mov
ja
sbb
and
inc
dec
loope
dec
and
call
mov
dec
cmp
and
in
mov
in
add
pop
insb
shrl
jp
or
and
or
mov
push
nop
add
shl
fidivs
jno
addb
jmp
jne
repnz
mov
out
xchg
adcb
push
push
add
scas
cld
push
and
ret
nop
push
push
clts
jmp
and
adc
push
or
push
push
nop
ja
cmpsb
mov
pop
push
aad
mov
push
adc
inc
call
int
xor
or
test
cmp
adc
add
inc
xchg
push
or
add
add
mov
mov
call
in
inc
enter
jmp
push
and
aaa
add
or
lea
push
xchg
sub
push
xchg
or
adcl
add
add
imul
fmuls
or
pop
and
xor
sub
xor
mov
or
and
xor
or
out
xchg
ret
jmp
or
mov
xchg
inc
adc
lock
mov
nop
popa
stos
sbb
cmp
or
jbe
xlat
push
ds
jns
bound
and
pop
call
adc
fisttps
imul
jp
mov
add
fwait
add
mov
inc
sub
cmp
js
sbb
push
sbb
cmc
add
xor
sbb
stc
es
push
clc
insb
mov
dec
bnd
add
xchg
sbb
pop
and
jb
dec
push
movsb
sbb
outsl
pop
je
sub
sub
and
in
xchg
shlb
xlat
fldenv
or
pop
andb
push
add
push
int
and
mov
ja
test
inc
mov
inc
jne
pusha
cmp
jmp
imul
jo
adc
push
cwtl
sub
push
fcompp
or
or
xor
mov
cs
cs
movsb
test
sbb
daa
lods
dec
mov
rcl
mov
ljmp
xchg
and
pop
sub
jbe
mov
test
fsubrl
add
push
pop
ficomps
push
xchg
les
andb
int3
call
cmpsb
test
lock
pop
dec
sbb
pop
test
ds
mov
dec
repnz
xchg
cmpsb
leave
mov
in
jbe
push
repnz
cmpb
unpcklps
bound
pop
call
lods
aam
inc
ret
mov
pop
and
sub
ja
in
mov
mov
call
inc
or
int
mov
and
add
in
xchg
aam
jbe
mov
pop
enter
loopne
and
push
ficompl
push
push
xor
test
add
add
or
popf
mov
gs
insl
arpl
std
add
sub
leave
xor
fisubl
mov
push
fwait
push
pop
xchg
sbb
lret
sub
mov
sub
orb
jo
les
sub
mov
cmp
inc
mov
and
xchg
fwait
xor
cli
adc
lods
xlat
lcall
pop
push
push
jmp
mov
test
sbb
jle
mov
je
jmp
add
inc
roll
and
mov
shrb
jae
insl
in
test
and
orb
xor
dec
mov
ds
pushl
xchg
loope
sub
mov
mov
outsl
or
lods
add
cld
sub
mov
cvttps2pi
mov
adc
or
dec
push
scas
jnp
jp
xchg
negb
sti
sbb
adc
inc
inc
jnp
add
in
inc
sub
push
pop
xchg
adc
cwtl
pusha
xchg
mov
push
sub
or
add
sbb
js
mov
pop
ja
hlt
notl
dec
je
or
and
movsl
push
popa
mov
lds
out
scas
fsubr
jb
repz
adc
std
nop
shrb
bound
mov
mov
nop
push
in
jecxz
lahf
push
cmc
dec
lods
dec
std
iret
shlb
notl
sbb
call
cwtl
jne
push
ret
adc
push
fstpl
clc
or
loopne
xor
push
or
xorl
inc
inc
lock
or
or
bound
xchg
fldl
xchg
or
dec
jg
cltd
je
or
loopne
add
add
lret
mov
fimull
icebp
mov
popa
adc
hlt
push
insl
cmp
or
xor
sub
in
mov
loope
add
sub
pop
test
in
dec
or
push
mov
adc
jg
lds
shrd
xchg
inc
inc
dec
mov
loop
lcall
sbb
and
hlt
or
sub
push
mov
adc
shrb
lret
inc
lods
and
dec
clc
push
push
add
push
sub
push
mov
xor
jnp
js
add
xchg
adcb
pop
pop
adc
subl
inc
xchg
lods
mov
lea
xchg
inc
mov
mov
pop
test
pop
popa
cmp
pushl
cs
cmp
fsts
sarl
imul
xchg
or
lds
std
pop
and
stc
ljmp
enter
sub
add
dec
jl
adc
or
cs
mov
push
dec
movl
ss
pop
daa
je
fiaddl
pop
add
arpl
or
push
add
shll
push
inc
or
pop
sub
push
dec
pop
les
sub
dec
and
mov
dec
sbb
mov
add
js
or
jle
inc
sbb
adc
dec
ljmp
xor
dec
sub
and
mov
xor
mov
pop
mov
mov
in
or
add
test
pop
dec
nop
mov
mov
pusha
in
ljmp
jmp
or
jno
mov
pop
sub
cld
sub
inc
bound
movsl
jnp
test
jge
paddusb
dec
adc
dec
or
push
adc
test
add
pop
dec
or
and
push
add
hlt
sub
push
movb
xor
adc
jns
or
and
mov
push
dec
sub
loopne
addb
imul
mov
pop
stos
push
and
pop
cmp
add
cmpsb
pop
add
mov
adc
nop
jg
jl
fcompl
cs
add
push
dec
sub
adc
inc
dec
or
push
popa
push
and
aad
icebp
sbb
test
push
pop
push
or
jecxz
lret
mov
int
loope
push
ja
addl
outsl
shll
dec
inc
push
mov
movsl
test
adc
aas
jg
dec
aad
repnz
imul
cmp
cmp
adc
adc
cmp
inc
dec
mov
lea
or
ret
inc
mov
vhaddpd
dec
mov
subl
movsb
or
dec
dec
rorb
shlb
add
xchg
je
push
and
rcll
push
int3
add
mov
mov
daa
sti
add
cltd
jmp
push
fwait
in
jmp
inc
into
les
inc
fcoml
daa
jo
dec
loope
and
inc
rolb
or
mov
jno
loope
shrb
add
mov
sbb
iret
cmp
mov
xlat
in
add
xchg
outsl
or
dec
push
push
stc
pusha
pop
inc
sahf
or
or
into
shrl
pop
adc
dec
mov
xorb
push
shlb
les
jae
push
jne
xorb
call
movsl
mov
mov
xchg
mov
rolb
aaa
shr
mov
mov
xor
popa
int3
call
cld
push
dec
inc
push
lock
push
stos
nop
cmp
enter
inc
xchg
xchg
xchg
mov
inc
mov
add
mov
mov
push
clc
jge
push
aaa
sbb
adc
push
movb
lret
aad
sbb
adc
iret
mov
xchg
sub
mov
fcom
pop
dec
xchg
loope
jo
shlb
or
rclb
cmp
or
xchg
add
ret
or
and
clc
push
sbb
and
pop
and
loopne
xchg
push
jno
sbb
adc
sbb
in
pop
mov
pop
arpl
ljmp
stos
add
mov
ss
lods
sbb
rolb
dec
cmc
ret
stos
imul
mov
xchg
fwait
sub
mov
mov
push
enter
stos
mov
mov
pop
add
aam
mov
add
inc
mov
cmp
or
in
dec
js
cmp
fdivs
adc
and
in
inc
add
inc
inc
leave
mov
arpl
or
jge
jbe
bound
push
in
xor
in
dec
pusha
mov
rol
mov
ror
xor
ljmp
xor
es
mov
rol
xor
shr
xor
add
add
dec
orb
add
mov
sarb
fs
or
jae
or
clc
push
shll
pop
call
add
aam
sub
or
add
stos
mov
ror
mov
fisubrs
sbb
xor
and
and
xchg
push
aam
push
repnz
inc
xor
xor
imul
sbb
fmull
pop
push
or
and
not
ret
rcl
add
add
cmp
add
add
call
fsubr
rcl
adc
call
repz
rorl
cli
mov
rol
out
dec
shr
add
push
xor
add
fsub
in
cmpsb
imul
in
cmp
aam
in
rclb
lahf
push
cmp
and
or
bound
push
daa
xor
punpckldq
pop
mov
push
add
xor
fadd
cs
cltd
call
push
shl
cwtl
loopne
in
sbb
loopne
or
dec
cmp
pop
cmp
movsb
imul
push
jbe
xor
or
lcall
add
in
in
mov
push
xor
and
and
out
iret
or
jbe
into
add
and
test
push
test
inc
and
in
mov
lock
inc
jo
ret
push
jo
ficoms
cmp
add
mov
je
lcall
ds
adc
push
loop
mov
aas
clc
mov
cltd
dec
inc
fadds
pop
jbe
adc
es
call
loope
in
sti
lretw
push
clc
jp
push
and
add
add
push
stc
gs
fdivrs
inc
adc
xor
fs
call
enter
inc
mov
aam
mov
xchg
loopne
pop
mov
stos
subb
test
cmp
data16
in
imul
pop
jae
shr
rolb
inc
addb
sub
push
sbb
aaa
rorb
add
inc
sub
dec
loopne
jb
xor
call
or
inc
or
add
push
xor
inc
pop
dec
xor
rcrb
xor
lret
adc
pusha
push
xorb
nop
add
push
out
fs
fs
push
inc
lcall
xchg
inc
xchg
lcall
add
push
ficoms
rol
push
or
adc
inc
pop
insb
dec
jae
xor
inc
and
add
pusha
jo
and
cs
xchg
repnz
or
mov
or
repnz
adc
dec
or
xor
dec
and
je
xor
in
dec
dec
dec
icebp
movsb
stc
stc
stc
mov
adc
pop
dec
mov
test
jb
shll
adc
adc
mov
loopne
or
and
add
loope
mov
pop
add
push
dec
sbb
out
pop
add
sub
mov
lret
inc
sbb
mov
jg
cld
push
lea
xor
pop
aaa
fildl
pop
xor
shlb
pop
fs
enter
mov
pop
jmp
pop
inc
scas
mov
and
or
aaa
or
fistpl
in
and
cmpsb
mov
sub
add
mov
js
movsb
loopne
lea
jmp
jns
jg
lea
push
sub
pop
add
ret
dec
or
mov
dec
jne
pop
add
mov
push
loope
lock
ficomps
sub
mov
cmp
jbe
test
cmp
fs
sbb
in
aaa
add
sub
jae
push
pop
fadds
sub
enter
or
mov
notb
cmpsb
ljmp
inc
fs
adc
loopne
ror
mov
notl
pusha
scas
mov
and
sbb
xchg
nop
nop
inc
adc
rcrb
push
aam
and
aam
or
sub
sbb
jbe
imul
inc
add
pusha
adc
add
cli
lea
test
or
or
or
sahf
add
pop
push
xchg
add
xchg
loopne
test
dec
or
jne
and
inc
or
sub
jg
test
adc
add
adc
arpl
stos
adc
xchg
rcrl
loop
jge
xchg
dec
jae
and
pusha
mov
andl
daa
dec
cmp
std
pop
xchg
sarb
addr16
add
dec
add
loope
add
xor
stos
call
pop
jo
cwtl
loope
popa
addb
icebp
add
adc
into
adc
pop
outsb
adc
mov
xchg
jle
jmp
ficomps
ljmp
add
shll
pop
xorb
jmp
ds
inc
cmp
mov
ret
push
stos
popa
lods
dec
outsb
or
cmp
and
sub
orb
mov
and
fildll
mov
popl
or
push
sbb
mov
inc
std
jno
push
mov
add
jnp
adc
xor
stos
in
pop
cmp
inc
cmp
or
cmpsb
or
cmp
punpcklbw
sub
negb
hlt
adc
and
add
jno
add
pop
push
fiadds
or
dec
add
jl
loopne
add
jle
es
sub
add
pop
push
lods
add
lds
push
enter
sub
ret
push
and
movl
or
xor
pop
out
dec
stos
cmpl
hlt
orl
test
and
inc
ljmp
mov
jns
dec
fndisi(8087
xchg
jmp
gs
xor
ret
jecxz
push
add
ret
xor
push
and
aaa
test
xchg
loopne
jl
push
pop
pop
gs
mov
mov
mov
fisttpl
cmp
fcomps
and
pop
add
mov
mov
jge
outsb
jnp
addb
add
mov
jae
push
pushf
and
push
test
add
jle
nop
xorb
pop
int3
jge
in
pop
inc
add
rolb
pop
outsb
mov
cli
imul
inc
mov
pop
movsl
inc
dec
mov
and
insb
loopne
or
cmp
popf
lods
add
xor
jb
adcl
outsl
hlt
or
test
push
ja
sub
sbb
dec
fdivs
add
inc
add
mov
nop
jnp
pop
add
sub
mov
popa
gs
push
mov
hlt
out
fistps
cmp
push
inc
pop
jns
push
lds
and
fldt
push
push
push
and
xor
mov
iret
xchg
add
mov
ret
cmpsb
push
xor
jbe
adc
sub
inc
sar
cltd
scas
or
pop
cmp
inc
push
nop
or
jmp
and
ret
mov
xor
or
push
push
sbb
shrb
and
push
mov
movsl
sub
mov
or
dec
push
dec
out
jge
int
gs
xor
and
repnz
out
cs
add
sbb
add
xchg
filds
xor
push
in
adc
sub
aas
or
add
jb
pop
mov
push
mov
js
cmp
mov
pop
mov
push
sbb
xor
nop
out
fistl
pop
data16
sub
mov
mov
ret
or
cmp
cmpsl
je
icebp
inc
add
mov
lock
cwtl
lock
push
mov
idiv
push
adc
test
jbe
push
push
negb
mov
adc
shrb
jae
loope
bound
xchg
sub
mov
jmp
into
les
xor
sub
mov
cmp
mov
insl
repnz
sub
ret
gs
outsl
mov
rorl
daa
mov
dec
cs
add
push
mov
imul
push
inc
or
icebp
pop
sti
xchg
mov
inc
sti
cmpl
mulb
shlb
add
mov
int3
sahf
mov
sbb
cmp
add
xchg
inc
xchg
jno
or
mov
inc
pop
push
inc
jl
sbb
cltd
xchg
mov
inc
and
jne
pop
push
add
sub
lea
pop
dec
ret
jle
adc
or
sbb
adc
add
push
cmp
inc
mov
aas
imul
sar
pop
push
jbe
sub
add
and
out
movsb
push
xor
xor
mov
push
call
fldl
test
aam
cmpsb
repnz
adc
or
jb
pop
lock
sub
mov
mov
sti
inc
push
pop
test
sahf
mov
cmp
add
sub
cmp
push
ja
ret
iret
hlt
pop
pushl
daa
pushf
inc
push
shrl
inc
fwait
ret
or
dec
sbb
pop
sahf
lret
lret
cmc
into
mov
das
xchg
mov
mov
in
jbe
cmpsb
push
xor
and
lret
insb
je
insl
add
cmpb
repz
adc
pop
ret
inc
inc
imul
outsl
jbe
adc
inc
add
das
mov
dec
mov
loopne
in
push
and
in
dec
loopne
loope
pop
cmp
dec
jns
mov
decb
push
popf
xchg
fimull
sub
sbb
and
and
push
mov
sub
dec
and
lea
out
adc
test
pop
scas
bound
add
dec
xchg
xor
les
dec
inc
or
pop
inc
aaa
inc
sti
iret
push
aam
bound
stc
ja
aas
rol
ja
ss
cmp
jb
mov
lds
clc
mov
rclb
inc
add
adc
sahf
andb
pop
inc
push
in
ja
les
or
leave
cltd
sub
jmp
mov
decb
pop
adc
daa
test
leave
dec
ret
movsb
test
fcompl
nop
in
mov
sti
sub
ret
dec
xlat
fcoms
inc
xor
or
dec
adc
mov
scas
sbb
xorb
vmovaps
mov
dec
xor
xchg
dec
sbb
pop
ret
int3
jmp
lods
mov
in
shl
leave
mov
sbb
add
sub
repnz
jnp
stos
lret
push
pushf
push
cmp
sbb
inc
ret
shrb
stc
sub
cld
mov
mov
inc
cmp
mov
fnstsw
inc
cmp
mov
dec
mov
lock
les
rclb
nop
in
or
sbb
pop
cwtl
xor
mov
fistl
ret
fstl
dec
add
add
cmpl
mov
out
xchg
xchg
xchg
xchg
or
sahf
and
pop
nop
dec
add
jl
add
imul
sbb
pop
adc
mov
cmp
je
inc
mov
decl
push
or
pop
push
fdivrs
xor
and
cmp
jl
adc
decl
ja
into
jle
inc
test
ret
push
xor
pusha
xor
clc
jns
sbb
adc
pop
push
ss
clc
pop
xor
sbb
jle
or
add
xor
ret
loop
inc
mov
pop
xor
fwait
push
push
jl
cltd
adc
jo
ja
or
mov
idivl
les
xor
jbe
mov
lea
in
pop
loope
mov
or
rcrb
push
fsubs
cmp
or
shr
sbb
cmovbe
pand
xor
xorl
cmp
comiss
pop
push
mov
in
inc
pusha
jbe
dec
inc
xor
mov
mov
hlt
push
add
or
sbb
fcoml
call
decb
push
shl
and
add
mov
enter
shl
aaa
rol
push
add
loope
shl
xor
mov
mov
sub
mov
push
adc
movsb
mov
ret
add
jne
mov
jge
dec
inc
mov
push
fidivrs
pusha
add
imul
push
xchg
add
sub
pop
loope
lahf
mov
and
xor
sub
sub
push
pop
mov
aad
push
adc
add
sub
dec
cld
lock
mov
inc
mov
sbbb
inc
add
test
jno
loopne
dec
sarl
push
mov
push
dec
je
js
stc
jl
mov
das
mov
inc
adc
or
add
mov
icebp
or
sahf
sbb
xor
inc
push
xchg
shrl
add
sub
cs
cmp
mov
icebp
cmp
xchg
mov
xor
sbb
loope
pushf
notl
mov
cmp
adc
sti
lcall
or
dec
lret
add
push
outsl
push
insb
mov
daa
andl
sbb
pusha
lods
or
or
ja
and
adc
cmp
ficoms
gs
out
or
mov
inc
mov
mov
fsts
push
inc
xchg
cmpsb
mov
jae
or
mov
add
xor
push
mov
dec
push
mov
inc
loop
insb
aaa
inc
adc
adc
dec
push
or
ret
es
sbb
int
and
enter
pop
push
popf
mov
or
jmp
push
js
push
mov
jmp
das
cmp
sub
cld
and
jno
cli
ret
cmp
das
add
xchg
add
add
adc
out
dec
inc
lret
pop
dec
cmp
add
cmp
mov
xchg
lret
push
ret
adc
mov
pop
in
add
sub
cltd
jbe
mov
inc
dec
adc
cmc
push
inc
jmp
sbb
and
sbb
push
test
xchg
fisttps
push
jae
loope
add
pop
and
lds
xor
inc
add
inc
mov
mov
faddp
xchg
xor
test
sti
sarl
ficoms
pushw
sbb
mov
popa
sbb
dec
and
adc
pop
mov
xchg
popa
or
pop
jmp
inc
sbb
rorb
lea
mov
mov
sub
cmpps
orb
movsb
jecxz
sub
bound
daa
pop
fsubrl
cmpsb
inc
xlat
or
inc
and
mov
addl
or
xchg
fimuls
push
cmp
fmuls
sahf
inc
ficomps
or
in
outsb
in
or
pop
es
jmp
dec
sbb
int
and
imul
mov
stos
mov
movsl
fwait
xor
sahf
aaa
popl
inc
or
sbb
add
push
and
rolb
mov
cmpsl
mov
mov
gs
adc
add
jnp
je
addl
ret
push
cmp
and
xor
call
xor
jp
sbb
insb
add
fistpl
sbb
sbb
mov
dec
or
mov
adc
inc
xor
mov
hlt
sbb
or
shl
clc
andl
xchg
imul
lcall
sub
mov
pop
hlt
lret
inc
loopne
xchg
fnsave
outsb
mov
cmpl
aaa
js
inc
faddl
sti
pop
push
cmp
outsb
add
outsl
jl
cmp
mov
pop
push
xchg
xor
adc
dec
jmp
or
gs
jbe
pop
adc
add
pop
adc
mov
add
mov
adc
and
or
daa
mov
cmp
adc
sbb
sbb
mov
repz
push
ss
add
add
dec
cmp
packsswb
mov
andl
inc
aas
jo
out
cmp
jle
rcrb
repnz
mov
mov
inc
lock
jne
inc
cmp
in
fmuls
or
imul
cmp
pushf
push
inc
sub
pop
sub
insb
movsl
rorb
or
inc
pop
push
inc
mov
cmp
xchg
jne
repz
jp
jbe
imul
loopne
arpl
lret
aam
dec
fisttpl
sub
insb
inc
or
or
nop
or
jo
out
lods
add
and
cmp
clc
dec
push
inc
inc
aas
or
je
call
sub
inc
jo
jne
addl
jmp
xor
into
or
inc
add
test
lods
out
insb
inc
add
cwtl
ja
js
mov
or
outsb
or
jge
add
insb
sbb
mov
loope
xor
push
xor
or
mov
fdivs
and
imul
cmp
je
push
mov
add
adc
testb
je
cmp
mov
push
add
push
add
cmp
out
test
sub
cmp
jne
push
adc
frstor
add
mov
cltd
sbb
adc
or
or
mov
ret
in
push
cltd
inc
sti
nopl
push
sbb
xor
inc
dec
or
into
jbe
loop
jae
dec
and
xchg
rcrb
mov
fcompl
outsb
clc
jno
ret
adcl
in
push
nop
jne
jg
cwtl
sbb
push
add
nop
or
adc
hlt
adc
hlt
xor
inc
arpl
sbb
push
in
cmp
insl
bound
mov
and
push
pop
add
or
test
inc
hlt
push
push
mov
jo
test
sbb
or
inc
add
push
mov
subb
push
jno
outsb
out
inc
adc
add
push
push
pusha
ds
sbb
mov
xorb
xchg
push
mov
pop
call
and
scas
rcrl
std
add
jg
or
ds
or
testb
fdivrs
mov
cmp
sbb
cmpsl
loop
mov
roll
add
sbb
pop
leave
jmp
lea
push
jl
mov
dec
loopne
dec
adc
or
inc
add
mov
leave
lret
into
jne
pop
jl
push
cmp
pop
or
sbb
stc
jmp
testb
xor
lret
jmp
push
pushf
mov
dec
pop
pop
xor
xchg
sub
notl
mov
pop
push
adc
pop
add
pusha
jb
sub
aas
pop
cmc
cmpl
inc
push
xchg
aaa
pop
and
jns
adc
sbb
lcall
add
out
push
es
aaa
les
jae
scas
and
xchg
pop
in
lods
sub
loop
scas
and
push
push
lret
pop
add
sbb
in
cmp
ja
sbb
cmpsl
sub
insl
add
sti
jnp
lahf
rorb
cmp
ja
inc
xor
sub
push
mov
mov
sahf
aad
aaa
mov
push
sub
adcl
es
jge
or
adc
pop
fwait
add
mov
and
js
add
lcall
roll
mov
inc
adc
jne
imul
push
jmp
loop
dec
push
dec
and
ret
int3
add
or
je
mov
add
mov
and
add
and
add
cld
jle
rolb
add
insb
add
ss
cld
jb
test
mov
xor
scas
or
adc
je
jmp
rolb
mov
lret
in
inc
lcall
adc
ret
pop
push
fimull
dec
add
inc
pop
and
jne
test
in
push
cmp
push
lds
jg
add
or
or
sahf
iret
push
push
add
jno
xor
jo
in
scas
and
inc
testl
aam
pop
push
shlb
pusha
dec
adc
lret
inc
add
inc
adc
in
add
ds
int3
xchg
mov
push
lcall
arpl
loopne
ljmp
or
sub
fldl
adc
or
lret
inc
sub
cld
add
push
andb
es
mov
fisttpl
sub
cmpsl
movsl
cltd
mov
and
mov
mov
cmc
and
test
daa
push
mov
xchg
jbe
out
adc
and
repz
int3
adc
movsl
cs
inc
cltd
subl
jbe
dec
les
pop
testl
rorb
loopne
jnp
outsb
add
push
adc
push
aam
data16
enter
xchg
cmp
repz
lcall
cmp
aas
pop
add
bound
sub
in
jle
jo
test
lcall
cwtl
inc
and
push
adc
pop
fcmovb
inc
enter
xchg
xchg
ja
in
lods
ret
jmp
pop
ds
xchg
sub
repz
inc
test
lods
add
mov
clc
decb
pop
jnp
push
out
push
lods
cs
shlb
xor
xchg
sbb
cmp
xor
into
fdivrs
xor
stos
or
fsubl
dec
addb
dec
aaa
mov
out
add
ja
adc
dec
repz
jae
dec
adc
lods
addb
add
jp
xlat
scas
popa
pop
repnz
icebp
sub
push
sar
xor
filds
pop
mov
push
jo
inc
dec
xor
xor
mov
ret
push
nop
or
xchg
adc
out
cmp
pop
int3
sbb
fistps
pop
pop
ret
pop
or
add
roll
es
rol
sbb
sbb
add
adc
push
cmp
xchg
fwait
xor
adc
loop
push
push
or
icebp
out
jb
xor
jmp
in
ss
je
mov
lods
scas
or
mov
mov
adc
fists
push
roll
sbb
jbe
int3
push
rcrl
push
mov
and
mov
sub
sbb
dec
mov
test
ficomps
dec
movsb
jbe
loopne
bswap
cmc
cmp
js
je
and
pop
inc
inc
inc
adc
cmp
in
pop
clc
scas
pusha
popf
adc
lock
cmp
out
shll
inc
jl
std
push
jle
arpl
js
lahf
jae
and
je
mov
push
adc
cmpl
mov
roll
lcall
cld
cmp
push
std
xchg
pop
mov
mov
add
and
aam
add
sub
dec
nop
dec
inc
out
in
push
rcl
js
ret
jmp
push
es
push
inc
xor
push
dec
adc
add
or
xlat
and
mov
or
pop
je
jmp
or
push
push
movl
andb
jns
add
mov
inc
sbb
push
lock
mov
sub
shlb
dec
cmpsb
xchg
jl
adc
mov
cmp
xor
mov
jnp
xor
inc
sub
out
cmp
mov
fs
push
aaa
and
pushf
es
ret
roll
push
mov
dec
inc
and
vmulpd
and
jno
sbb
inc
mov
or
jae
nop
shll
push
scas
fiaddl
ds
xor
sbb
cpuid
lock
or
and
sub
mov
jb
in
jo
and
inc
jmp
lods
lcall
jnp
jmp
adc
adc
inc
insb
push
jb
loop
dec
aad
pop
in
pushf
push
and
mov
dec
push
push
push
or
push
loope
mov
add
shrb
dec
int3
cltd
adc
sbb
push
jne
imul
push
xchg
sub
and
push
sub
mov
sbb
daa
cmp
mov
lahf
sub
mov
jno
insb
mov
in
je
mov
je
push
rol
mov
jno
add
fcomps
xor
dec
shr
or
jbe
inc
xor
popa
shll
iret
push
ror
xchg
pop
out
je
movl
ret
and
adc
xchg
sbb
mov
sub
or
sbb
and
push
fcompl
js,pt
xor
inc
ret
dec
add
shrb
mov
push
and
aad
shll
jle
add
and
sub
scas
adc
lcall
sti
ja
jne
fnstcw
mov
and
clc
jg
fs
cld
sti
mov
test
jmp
movq
movaps
fldt
enter
shlb
jle
xor
push
lahf
jo
cli
rcl
lret
je
mov
fnstcw
and
lret
or
jg
in
cmp
xchg
ret
adc
and
cld
jnp
mov
mov
out
mov
add
adc
push
add
adc
add
js
add
xor
fcmovbe
mov
mov
pusha
sti
fst
addsd
int
add
sbb
push
fiadds
dec
sbb
push
inc
fistpl
setge
push
imul
stos
rorb
mov
lds
cmp
pop
incl
xchg
adc
dec
fmuls
adc
aam
lret
nop
pop
xor
mov
icebp
iret
sbb
mov
jge
das
nop
push
mov
pop
sbb
sub
es
mov
dec
pop
rolb
addl
lret
jb
pop
add
fdivl
loope,pn
add
cmp
jb
neg
push
mov
or
rorl
jmp
lahf
out
add
rorl
int3
fimuls
stos
mov
dec
ljmp
fsts
nop
xor
or
pop
adc
sub
adc
outsb
or
push
lods
add
imul
stc
lds
cmp
dec
inc
mov
roll
movb
clc
jb
repz
enter
and
cmovs
pop
mov
test
jecxz
enter
or
rep
jmp
xlat
aad
nop
int3
mov
cltd
fildl
mov
enter
xor
cmp
adc
cwtl
xor
or
push
sub
ds
dec
pop
dec
mov
ja
mov
or
scas
adc
jl
int3
lea
dec
add
pop
pusha
push
movl
dec
cmp
cmp
jnp
sti
out
push
loopne
fcom
enter
repz
inc
in
out
sahf
out
in
in
lock
out
sahf
hlt
hlt
clc
clc
cld
fdivr
mov
add
add
fnstenv
mov
sub
inc
pop
xor
inc
pop
andl
sti
and
mov
ret
push
sbb
lea
jl
cld
or
adc
std
cld
out
mov
xchg
dec
adc
push
xchg
daa
fnsave
movsb
xor
int3
shr
mov
add
fiaddl
jl
mov
mov
mov
add
popa
inc
push
out
push
add
nop
dec
dec
addr16
mov
add
ljmp
mov
or
push
fs
jns
jns
je
test
jns
out
sbb
adc
sahf
out
sahf
adc
or
or
xor
jns
add
mov
mov
jnp
mov
aaa
adc
dec
push
push
add
pop
shufps
dec
daa
ja
rclb
pop
out
out
jp
and
xor
les
pop
xbegin
mov
mov
adcb
fbld
int3
fcmovb
push
jecxz
cmp
jnp
test
mov
test
je
pusha
and
add
lahf
push
adc
loopne
inc
mov
repnz
mov
inc
inc
push
subb
jle
mov
jmp
jp
je
mov
mov
lcall
jne
mov
jmp
aad
mov
lcall
lods
and
add
and
push
adc
xor
cmp
call
sbb
je,pn
lret
lock
ret
pop
es
mov
cli
lock
call
lar
jne
popf
rol
inc
push
xorl
and
lock
subb
mov
or
adc
and
adc
divb
xchg
jmp
push
push
xorl
and
mov
push
pop
add
push
loope
sbb
mov
pop
sbb
insb
pop
push
call
adc
jg
inc
cmp
jne
inc
cmp
ds
test
xorb
ljmp
dec
adc
or
inc
cs
adc
lret
adc
mov
out
and
add
das
and
fildl
inc
aas
mov
enter
inc
cmp
test
lods
orl
xchg
and
test
dec
jns
dec
repnz
push
add
push
push
xchg
push
aam
sub
pop
or
stos
add
sub
inc
pop
push
jns
ret
int
or
sbb
and
into
or
scas
inc
hlt
cmp
pushf
inc
movsl
or
push
add
enter
sub
sarl
sub
add
ret
mov
adc
loope
shlb
dec
leave
sbb
jb
mov
or
or
inc
pop
cmp
mov
mov
push
inc
push
rol
inc
jno
std
inc
inc
cmp
aam
lret
jne
sbb
jmp
lock
xchg
mov
or
jnp
rolb
push
lods
lods
insb
aaa
pop
imull
add
jmp
xchg
aaa
mov
mov
bound
inc
or
or
out
testb
dec
add
orl
or
stc
push
add
xor
insb
sub
mov
push
hlt
xchg
mov
or
fs
inc
and
jne
lods
pusha
mov
sbb
cmp
leave
lds
mov
inc
sub
adc
sbb
push
les
lret
inc
cmp
jecxz
jmp
cmc
inc
std
mov
ja
push
into
int
icebp
das
rorb
push
sub
pop
lret
clc
neg
mov
xor
cli
or
add
jl
in
fucomi
add
xor
hlt
jbe
sub
fisttps
cmp
jb
mov
mov
data16
add
jmp
mov
dec
mov
mov
dec
dec
mov
ja
daa
cli
inc
cmp
jb
lret
ret
adc
inc
mov
mov
subb
nop
jo
jmp
movsl
out
ss
or
enter
push
clc
mov
ret
sub
dec
cmp
push
cld
lcall
in
jg
popf
push
cmp
jb
lea
and
outsb
mov
shlb
test
je
cmp
jne
mov
aaa
dec
jae
push
cmp
jne
es
jne
and
repz
adc
or
jp
mov
inc
lcall
dec
jmp
adc
jmp
std
std
jmp
out
sahf
xor
cld
ret
pmaxub
mov
js
adc
adc
jnp
push
stos
scas
jb
push
push
movb
adc
sub
jmp
stc
hlt
or
adc
shlb
jle
jns
arpl
popf
rcrl
enter
and
sbbb
cmp
jo
dec
je
fists
mov
sahf
dec
pop
inc
push
add
sub
and
or
sub
outsl
add
mov
add
and
aaa
nop
adc
or
inc
popl
sbb
enter
les
popf
stos
add
jo
shlb
add
add
ret
and
xlat
jg
push
or
jg
add
mov
mov
arpl
sahf
clc
dec
cs
jno
lock
push
popa
mov
and
xchg
dec
mov
mov
mov
xchg
and
push
pop
jle
push
inc
les
push
pop
div
jb
inc
xor
adc
nop
add
push
mov
xorl
cmp
lods
pop
sub
pop
adc
cmpsb
push
arpl
mov
es
mov
sub
sub
pop
and
jmp
sahf
gs
sbb
mov
jg
sub
xlat
and
mov
scas
leave
pop
sub
add
outsl
adc
aam
adc
pusha
repz
lods
cwtl
cmc
orl
sub
add
mov
and
and
leave
xor
adc
or
jl
or
hlt
adc
push
mov
mov
jle
cmpl
pop
pop
ljmp
inc
ffree
jns
gs
xor
pop
rorb
cmp
jne
orl
jmp
adc
jne
js
loopne
sub
testb
arpl
jnp
adc
cmp
inc
sbb
or
aaa
mov
or
and
mov
insb
adc
pop
jne
dec
add
sbb
add
lds
lock
or
test
dec
clc
or
mov
jmp
cmpb
fidivs
lret
sub
cmp
ja,pn
xor
pop
mov
dec
adc
sbb
loope
sbb
push
and
and
dec
test
adcb
cltd
push
je
lock
xor
imul
add
call
sbb
nop
test
jne
test
jmp
pusha
les
push
xorl
or
or
jne
jbe
add
push
jnp
mulb
test
shll
sub
push
fwait
add
into
mov
fcoml
comiss
test
sbb
sbb
mov
pop
pop
aaa
mov
xchg
cmp
push
dec
dec
loop
add
dec
or
mov
push
sub
mov
inc
or
pop
nop
xor
jmp
cmpb
stos
mov
shr
mov
push
mov
jbe
femms
pop
call
adc
stos
push
jno
jbe
push
sbb
lret
push
cmp
data16
jne
negb
dec
cltd
jp
xchg
mov
adc
or
mov
push
adc
adc
sbb
shlb
rclb
xor
mov
inc
inc
data16
popa
rorb
and
sub
and
shll
rorl
cmp
mov
clc
add
testb
inc
mov
aad
inc
push
mov
or
rolb
sbb
jle
sbb
push
inc
sub
ds
push
mov
imul
pop
push
jmp
xor
jne
scas
andl
inc
fnstenv
cmp
xorl
sbb
mov
out
push
dec
push
movsb
sbb
arpl
inc
lea
int3
decb
sub
dec
loope
adc
or
inc
or
add
add
inc
dec
rolb
ret
pop
frstor
xor
test
inc
mov
enter
sbb
jno
pusha
leave
or
add
test
into
and
add
xlat
sti
sbb
call
jae
sub
add
push
mov
fists
and
sbb
incl
pop
push
add
loopne
je
inc
cmp
jb
lea
push
adc
xchg
dec
ss
outsl
dec
in
adc
jbe
cmp
movsb
mov
addr16
lahf
and
js
stos
mov
jbe
movsb
es
xchg
adc
dec
xor
nop
pop
clc
adc
cmp
add
pop
add
xor
insb
sbb
push
mov
mov
orl
daa
popa
adc
sbb
nop
adcl
adc
outsb
inc
mov
xchg
xor
xor
jb
loopne
iret
movb
xchg
pop
ss
call
push
xor
in
pop
mov
shlb
shl
add
mov
stc
xor
inc
lods
mov
mov
push
ss
jge
or
loopne
mov
and
push
mov
mov
loop
mov
inc
incb
insl
pusha
adc
leave
sub
clc
lahf
jne
std
add
xchg
push
clc
push
push
push
insb
dec
pop
cwtl
jge
and
pop
pop
push
imul
push
push
adc
mov
je
inc
stc
icebp
push
or
xlat
rorl
dec
xchg
lahf
sbb
jecxz
lds
loopne
xor
xor
or
jg
add
scas
add
ficomps
add
inc
mov
xor
xor
sarb
push
mov
jnp
jne
xchg
aad
push
popf
aaa
mov
test
loope
or
push
pop
or
es
push
ffreep
adc
cmp
outsb
imul
jb
pop
add
prefetchw
dec
in
mov
popa
repnz
rorl
in
xor
repnz
xor
mov
in
sbb
imul
and
shlb
mov
cmp
add
notl
ljmp
xchg
aaa
jecxz
cmp
pop
shll
shr
je
push
es
mov
push
shll
dec
xor
push
or
mov
adc
in
sbb
mov
push
mov
mov
cmpsb
test
icebp
popf
pop
xlat
ret
pop
cld
fmuls
imul
mov
sub
push
fwait
and
or
fisubrs
pushl
push
jp
and
mov
mov
xlat
test
out
xchg
push
add
push
cmpsb
fadd
fwait
sub
jle
fsubrp
lahf
push
xchg
mov
call
xor
xor
shl
mov
movsl
in
mov
testb
xlat
and
pandn
imul
test
pop
rolb
add
and
pushf
sbb
mov
in
or
sub
mov
sbb
sub
push
out
dec
out
and
fcmovnb
mov
push
cmp
jg
mov
ret
mov
pop
xchg
incb
cmp
jne
or
mov
adc
or
cmp
adc
add
addl
xor
pop
and
shrl
rcrl
add
xchg
iret
dec
mov
add
fstpl
add
jo
in
test
jmp
mov
in
ret
dec
test
pop
lods
repz
pop
push
mov
movaps
dec
pop
mov
and
cwtl
add
sti
jne
mov
push
push
pop
lods
mov
daa
mov
sbb
mov
sbb
push
jbe
out
call
cmp
cs
cli
add
mov
xchg
mov
in
hlt
test
ret
jp
and
lcall
in
xor
jle
mov
mov
mov
jecxz
mov
rorb
jb
and
loopne
or
testb
push
inc
fucomip
test
adc
push
bound
ss
push
push
or
aaa
add
testb
pop
jne
cmp
or
addb
xor
enter
fldt
call
fistl
loope
adc
cmpsb
push
jle
push
fsubl
push
and
cmp
ss
xor
inc
inc
fimull
int
dec
mov
xor
push
push
pop
jle
mov
cmp
je
add
lock
movzbl
add
sub
je
ficoml
jle
lahf
ret
lea
repz
imul
jo
pop
add
inc
push
nop
add
daa
add
in
add
test
add
mov
add
jle
add
cmp
in
add
add
sbb
push
xchg
sub
pop
jb
or
enter
or
dec
jb
cmp
or
sub
pop
enter
pop
or
test
loop
or
cmpb
add
nop
ja
inc
or
add
ja
xor
and
push
rsqrtps
adc
pop
in
lods
pop
adc
fwait
sub
popa
in
cmp
sahf
lret
add
ds
add
adc
add
sbb
inc
ficoms
adc
adc
enter
push
push
repnz
push
pop
pop
pop
lcall
mov
sbb
sbb
enter
call
pop
and
sbb
sbb
fstl
add
je
pop
sbb
xorl
cmp
sbb
cmp
inc
inc
push
pop
pop
push
decl
jne
add
add
sub
cmp
in
pop
lret
lods
add
add
cmp
xchg
lock
test
sbb
rep
std
stos
inc
cmpsb
in
push
in
jno
repnz
out
out
sub
rol
lea
aad
add
jnp
cmp
mov
repnz
out
or
xchg
inc
outsb
or
call
adc
dec
dec
cwtl
jmp
xchg
add
sbb
or
sbb
insb
nop
cmpsb
repnz
in
in
in
cltd
add
pop
mov
push
nop
addr16
out
out
jge
inc
push
inc
out
sbb
pop
add
dec
jae
lock
iret
enter
pmulhw
repnz
repnz
std
push
push
and
repz
std
hlt
add
aam
rorl
pusha
hlt
fwait
cmp
enter
inc
jg
add
sbb
negb
nop
xchg
cmp
cmp
clc
jb
push
imul
seto
stc
inc
stc
lock
cli
pusha
in
jns
iret
sti
fwait
lret
sbb
stos
cld
cld
cld
je
xchg
mov
movaps
add
ss
xor
or
jns
sbb
adc
cmp
insl
loop
or
dec
or
mov
lahf
cmpsb
rorl
ss
in
sbb
aam
or
push
mov
jecxz
or
imul
enter
in
in
adc
inc
mov
stc
daa
xchg
sti
out
orb
outsb
inc
repnz
add
xor
sub
sbb
out
jmp
cltd
fists
in
add
das
popf
cli
sbb
js
out
out
out
cltd
push
jno
sbb
lock
cli
or
sbb
jmp
in
jns
cltd
sar
push
dec
xchg
xchg
inc
pop
fstpl
div
enter
negl
fwait
xor
add
stc
jb
popa
leave
out
clc
cmp
nop
cmpsb
sti
sti
sti
cltd
mov
cld
inc
cld
orl
and
sbb
inc
add
and
cmp
adc
mov
push
pusha
loop
testl
shl
cmp
mov
scas
idivl
testl
repnz
out
inc
testl
or
cmp
imul
ljmp
negb
leave
mov
mov
xchg
imulb
out
out
pop
lret
and
jno
negb
das
xchg
inc
and
add
lcall
repnz
inc
pop
pop
jno
cmc
pop
and
mov
cmc
xchg
inc
pop
dec
pop
dec
cmc
testb
mov
fwait
int3
push
mov
inc
clc
xlat
in
repnz
jecxz
stc
popa
dec
in
cmpl
and
sub
xchg
hlt
das
xchg
inc
pop
pop
jne
push
hlt
sahf
and
or
or
les
shrl
push
jo
loopne
fstps
sti
lahf
pusha
ret
scas
add
dec
test
jp
dec
loope
loope
jns
jne
repz
scas
repz
and
test
in
imul
repz
repz
push
dec
push
cmp
bnd
sbb
mov
pop
repnz
jo
dec
jae
and
jb
sbb
and
pop
repnz
loope
jmp
mov
jns
je
divb
icebp
jns
jne
jb
test
push
push
xor
loop
shl
cmc
add
cs
xchg
jecxz
fisttpll
andb
pop
lcall
pop
daa
xchg
inc
jne
push
lock
xchg
pop
xor
sbb
push
lock
test
ss
fldl
adc
add
sub
jne
or
in
in
jge
cmovno
push
add
inc
push
nop
add
stos
add
jp
push
jnp
or
xchg
adc
inc
pop
rorl
push
push
sti
add
dec
add
sahf
and
jo
out
dec
add
or
out
mov
pop
and
pop
push
inc
add
pop
pop
jns
fstl
fldcw
pop
leave
pop
ljmp
cmp
pop
mov
iret
repz
pop
lret
pop
das
bndstx
fldcw
push
adcb
lods
pop
lcall
std
push
push
mov
out
into
repz
mov
inc
dec
stos
sbb
xchg
mov
push
rorb
or
idiv
loope
inc
mov
mov
lock
test
in
cld
pushf
jge
push
xor
loopne
dec
in
sbb
fistps
pop
mov
enter
or
adc
inc
cwtl
sbb
or
add
push
lea
fdivs
fistps
cmp
push
fmuls
and
add
push
sub
sahf
add
xchg
xor
mov
inc
cli
dec
add
push
mov
sub
xchg
mov
push
xor
inc
jl
sub
sahf
jge
test
and
xchg
jo
xor
add
in
inc
cltd
orb
push
jo
loopne
test
cltd
enter
mov
nop
ficomps
add
xchg
xor
insl
xchg
daa
inc
mov
cmp
inc
jb
pop
and
and
das
movsb
mov
inc
inc
add
mov
data16
ja
push
fistpll
pop
movups
imul
inc
in
add
gs
pop
js
in
popa
test
inc
sub
push
cmp
dec
outsl
cmpsb
or
and
jge
loopne
repnz
je
pop
roll
addl
pop
cmp
sub
inc
rolb
xor
orps
test
aaa
lock
mov
adc
subb
lret
mov
loop
or
leave
or
clc
xchg
hlt
dec
fcomps
jmp
mov
add
and
jnp
mov
jo
sub
lcall
pusha
or
int
adc
mov
mov
adc
adc
filds
lret
and
add
dec
scas
pushl
jne
mov
mov
inc
inc
cmp
cmp
or
dec
popa
out
loopne
outsb
out
jns
mov
dec
mov
in
aas
cmpb
mov
pop
pop
push
mov
mov
or
stos
push
loop
inc
adc
ret
clc
add
add
out
add
add
add
mov
lods
add
cmp
or
sahf
or
jge
fwait
add
jmp
stos
add
testb
pusha
xchg
fistpl
push
sahf
mov
lret
mov
dec
test
and
mov
or
or
mov
push
popf
push
clc
jp
adc
and
stc
repnz
hlt
pop
jo
je
add
pusha
addr16
pop
add
or
sub
mov
mov
adc
mov
mov
decl
inc
decl
jne,pn
loop
dec
xor
rol
cmp
mov
pop
pop
xor
aaa
jbe
push
cltd
pop
idiv
rclb
add
sub
adc
xchg
push
out
aaa
mov
mov
xor
adc
jmp
orl
xor
dec
pop
aaa
sbb
xchg
pop
jae
pop
jbe
mov
add
bnd
inc
ret
inc
adc
cmc
shll
or
pop
lods
or
push
push
jg
xchg
ja
imul
add
call
lcall
je
or
dec
dec
mov
and
push
sub
lret
and
jecxz
movb
xchg
out
pop
push
negl
or
divl
jno
push
mov
inc
pop
stc
sbb
imul
sbb
test
cmpsb
and
fiadds
xchg
pop
add
add
nop
add
push
and
negl
xor
inc
inc
sub
add
popa
pop
out
data16
xor
adc
fcmovb
dec
jmp
sub
mov
stos
add
mov
rclb
pop
cmp
or
sub
sarl
sub
insl
or
aas
jge
das
mov
pop
cltd
pop
idiv
pushw
cmp
ret
push
leave
cli
ds
xchg
inc
out
cmp
pop
xchg
push
ljmp
cmp
xor
fsubs
popf
or
imul
fs
or
lret
imul
cs
jl
mov
sbb
call
mov
mov
pop
insb
sub
sbb
mov
mov
add
sbb
imul
add
mov
and
adc
jg
jae
incl
pop
push
sti
in
mov
jno
cmpsb
pop
sub
cmp
hlt
inc
daa
xor
xor
dec
icebp
xor
insb
pushf
push
ror
sub
push
out
js
cmpb
loope
push
jmp
jge
pop
pop
mov
je
sbb
jl
sub
mov
fs
das
xor
jbe
lcall
jno
mov
mov
mov
in
jle
push
pop
je
dec
inc
divb
mov
in
cmp
jmp
inc
mov
data16
adc
ret
insb
lahf
pop
popl
xchg
mov
lods
imul
bound
pop
push
mov
xchg
add
aaa
orl
outsb
cmp
pop
std
loopne
ds
pop
push
adc
lcall
push
push
pushf
sbb
or
lea
adcl
jl
subb
push
je
mov
adc
pop
push
push
movsb
xchg
lret
cmpl
cli
xchg
clc
xchg
push
and
jge
add
mov
push
hlt
mov
adc
pop
inc
or
push
loopne
adc
jnp
inc
adc
or
out
call
add
test
xlat
jae
cmpsl
pushl
jbe
dec
ljmp
push
ret
xchg
rorb
and
pusha
jl
js
pop
sbb
andb
adc
push
and
sbb
sub
ds
mov
mov
add
push
inc
jg
les
mov
gs
sbb
pop
scas
shll
incl
clc
mov
inc
inc
cmp
pop
lcall
mov
cli
orb
insb
in
sbb
adc
add
dec
xor
xchg
jle
dec
je
popa
jecxz
mov
aas
ficoms
push
ficoml
mov
mov
pushf
les
sbb
cmc
mov
cmp
mov
incl
pop
clc
gs
in
data16
push
mov
push
inc
sbb
mov
inc
pop
cmp
mov
ss
push
pop
pop
sbb
lods
mov
popa
dec
gs
inc
mov
or
fmuls
sbb
or
xchg
dec
loope
and
push
dec
mov
test
movl
sub
nop
hlt
mov
loopne
xor
addr16
test
adc
in
pusha
jle
test
cmp
insb
adc
adc
sarl
adc
shll
loopne
or
sbb
push
pop
lds
adc
inc
int
fs
or
shl
pop
add
sbb
dec
mov
lods
sbb
dec
movsb
jb
push
hlt
repnz
jb
cmp
inc
sbb
pop
mov
fsub
adc
cmp
fiaddl
or
adc
fcom
iret
add
pop
addr16
rcrl
mov
mov
and
jmp
cmpl
or
pop
test
fsubr
cs
dec
jmp
dec
sbb
jp
sbb
mov
orb
lret
pop
pop
and
jo
mov
push
test
cltd
clc
or
pop
stc
xor
in
pop
call
sbb
xchg
sbb
xchg
cmpsb
or
in
or
dec
clc
sub
push
or
ret
sbb
push
jns
and
or
dec
lcall
mov
cmp
inc
sbb
sbb
sub
mov
mov
les
xlat
xchg
and
inc
push
jmp
cmp
mov
xor
ja
or
scas
xchg
jno
inc
inc
ss
push
push
xor
outsl
inc
mov
hlt
cmp
jbe
subl
movsb
xor
inc
add
pop
add
dec
jmp
mov
clc
xor
jnp
xchg
sti
clc
and
jmp
ja
xor
aas
pop
test
mov
in
push
pop
outsl
popa
pop
sbb
dec
test
mov
add
jmp
jne
add
xor
sbb
and
dec
sahf
jmp
ds
dec
jnp
add
push
data16
mov
sub
push
mov
fsubs
movsl
sbbl
pop
fdiv
mov
je
add
or
clc
xchg
pop
sbb
loopne
sbb
jl
pop
iret
fsubrl
outsb
mov
add
lea
gs
push
arpl
jmp
pop
arpl
lret
pop
pop
xchg
push
jno
adc
push
fs
jp
adc
iret
or
add
loop
shrb
fsts
push
mov
fwait
rol
inc
add
lds
fs
std
add
ja
movsb
cld
adc
pop
sbb
jae
addr16
xor
cmp
pusha
into
ds
daa
sbb
xlat
add
push
jbe
filds
js
adc
cmc
mov
or
mov
movb
shrb
lcall
jle
sbb
js,pn
xor
pop
dec
jne
pop
sbb
or
sbb
cmpsb
imul
fmuls
cs
mov
pop
xor
inc
add
andb
or
shlb
xchg
xor
int3
xor
sbb
cmp
enter
enter
push
fucomi
in
mov
jmp
mov
dec
shll
push
test
ret
cmp
std
data16
mov
add
push
inc
and
sub
les
lret
mov
sbb
gs
imul
mov
and
push
add
cmp
or
push
pushf
stc
dec
inc
sbb
cld
arpl
imul
adc
mov
adc
lcall
mov
rclb
imul
fsubl
pop
cli
adc
add
adc
ret
xor
dec
sbb
adc
jge
fiaddl
xor
outsl
imul
ja
jbe
adcl
add
lock
mov
fistl
pop
sbb
or
cmp
jo
push
mov
repnz
rcrb
cmpsl
popa
inc
mov
into
push
jg
adc
mov
cmp
mov
lcall
xchg
cmp
test
mov
push
jmp
shlb
arpl
sbb
mov
fcomp
rcrb
fadds
in
jo
adc
dec
scas
lock
enter
sbb
sahf
inc
pop
inc
sti
sbb
sub
mov
or
incl
ret
cmp
fs
push
mov
mov
jmp
lret
test
test
dec
test
xchg
add
ret
inc
or
or
xchg
xorl
packsswb
out
les
mov
sbb
push
shlb
jecxz
insb
push
push
fdivs
lea
loopne
out
into
add
sbb
and
call
adc
inc
jg
adc
stos
xchg
pop
jae
xor
or
push
and
jnp
je
add
movsl
push
std
add
xor
push
dec
or
pop
push
mov
data16
mov
xchg
mov
sti
sbbb
pop
inc
dec
lea
dec
xchg
lock
xchg
pop
es
clc
stos
sahf
push
cwtl
xlat
mov
pop
push
psubb
jl
jg
pop
fadds
mov
pushf
pop
or
push
or
mov
cmp
sub
arpl
and
repz
inc
and
outsb
mov
call
rorl
sbb
or
push
and
js
orb
movsb
pop
test
or
add
and
inc
insb
jno
mov
loop
mov
lret
test
clc
sar
sub
sub
mov
adc
sub
mov
data16
sbb
das
add
adc
popl
dec
push
lods
cmp
add
inc
fisubrl
pop
test
push
movl
cmp
imul
enter
outsl
hlt
jge
lcall
adc
add
imul
xor
mov
push
sub
inc
out
inc
xchg
loopne
inc
push
sub
pop
cld
sub
xor
mov
pop
or
xor
dec
pop
add
adc
or
push
sbb
adc
gs
andb
add
or
shl
or
xor
add
sub
ljmp
mov
inc
dec
jne
lea
adc
sub
cs
ret
es
call
or
outsb
test
sti
mov
idiv
fldenv
hlt
mov
and
aas
or
clc
lea
jns
outsb
mov
ret
ja
sub
add
or
je
and
orl
mov
fnstsw
int
cmp
cld
ficoml
ret
cmp
fsubs
xor
push
push
push
pop
inc
inc
cld
push
dec
and
add
fs
int
popf
jecxz
mov
orb
mov
je
cmpsl
in
push
sub
nop
mov
testl
aad
jmp
mov
sarb
sbb
ja
mov
or
rorb
std
lahf
jbe
ja
lret
add
jmp
cmp
push
or
and
jmp
add
test
mov
ficoml
sarb
in
clc
ja
mov
sti
inc
jo
jg
or
sbb
jecxz
ja
pushf
pop
and
fmuls
jno
xorb
add
xor
adc
sbb
lock
and
jno
xchg
xor
jnp
mov
insb
push
hlt
add
aas
mov
or
add
cmp
mov
cmpsb
add
mov
cmpsb
push
sub
sbb
dec
cmp
jb
sti
or
in
cmp
std
jne
fsubr
fldt
sub
xchg
pusha
fst
jmp
iret
rclb
and
and
dec
mov
rclb
fwait
push
mov
mov
cmp
mov
or
add
xor
or
dec
mov
fs
pop
dec
mov
push
add
jbe
and
xor
push
mov
rolb
push
pop
inc
mov
cmp
jbe
xchg
mov
lea
mov
test
shrl
inc
pop
lods
ror
push
lea
imul
push
mov
aaa
mov
test
sub
into
sub
rorb
jmp
loopne
andb
cmp
lcall
push
push
rolb
jne
outsb
cld
std
dec
rolb
add
jb
mov
push
xchg
push
xor
inc
inc
inc
jg
or
mov
clc
inc
adc
mov
call
mov
inc
inc
inc
dec
jne
mov
inc
insl
and
jo
mov
add
jle
insl
mov
andl
push
mov
inc
dec
jne
add
sahf
or
test
addb
fdivp
sbb
scas
dec
push
jnp
test
xor
jge
shrb
test
jl
je
mov
dec
loopne
adc
mov
add
push
jp
mov
push
mov
adc
mov
jo
xchg
inc
outsb
test
mov
sub
jge
mov
arpl
jbe
inc
aam
and
shrl
inc
push
cmp
sub
xlat
mov
mov
cli
jo
insb
ljmp
popf
or
std
and
xchg
fs
or
insb
push
xor
adc
test
or
dec
loopne
or
pop
sub
jmp
cmp
add
mov
mov
pop
pop
push
inc
add
ret
adc
ss
push
out
arpl
pop
rcl
xchg
jno
es
push
jne
xlat
fwait
jae
jmp
xchg
in
push
cltd
insb
pop
inc
and
or
sbb
xchg
and
mov
cmpsl
push
and
pop
movl
bound
and
and
in
or
push
mov
pop
loopne
sbb
pop
adc
out
mov
inc
mov
addr16
pop
sbb
cmp
cltd
rolb
cmp
inc
xchg
int3
mov
sub
and
jecxz
mov
mov
aam
inc
or
inc
pop
cmp
mov
xor
test
paddb
pushl
out
jle
jnp
in
pop
or
push
cmpl
add
lock
pushf
or
cmp
rclb
adc
inc
add
sbb
dec
or
and
es
xor
sbb
push
sbb
orb
mov
in
xchg
and
lea
jnp
mov
aaa
or
adc
or
sarl
add
dec
xor
ficoml
cwtl
xorl
inc
sbb
clc
or
sbb
in
xor
xor
push
je
push
mov
mov
mov
jne
jns,pt
sub
pop
in
or
pop
daa
mov
jbe
inc
mov
enter
ret
es
dec
jle
sbb
jo
mov
xor
loope
movb
fidivrs
lcall
sub
jmp
inc
push
loopne
push
ficomps
jno
push
pop
mov
lods
out
add
xchg
mov
sub
push
cmp
rcl
adcb
daa
mov
jns
incb
and
xor
outsl
mov
push
xchg
ficoms
inc
mov
xlat
add
push
je
enter
cmp
out
call
lea
and
cmp
lea
push
push
push
mov
or
aas
push
incb
ds
sahf
lcall
icebp
lea
repnz
adc
xchg
cwtl
pop
sbb
enter
dec
outsl
lods
add
push
cld
sub
jo
roll
ficoml
gs
inc
mov
mov
orl
les
in
dec
sbb
popf
mov
jg
xor
in
fcmovnu
cmp
fimuls
inc
sub
dec
push
xchg
add
inc
sub
sbb
orl
dec
add
sub
add
push
push
movsb
push
lret
bound
xchg
pop
sbb
std
xchg
orl
jns
inc
xchg
shlb
sub
loop
dec
adc
push
xor
es
lret
adc
clc
jne
cmp
nop
add
nop
cmp
inc
cwtl
lds
cmp
cmp
mov
pop
sbb
xor
ud0
push
xchg
adc
xchg
sti
push
jg
fidivs
and
pop
cmp
add
jle
je
jle
or
sbb
jno
insl
mov
add
addb
and
pushf
ror
movsb
ljmp
outsl
jle
mov
into
mov
mov
into
dec
xchg
es
adc
lods
cmpsb
and
daa
test
mov
jno
xchg
fdivs
mov
xchg
lahf
xorl
sub
mov
xchg
out
mov
gs
cwtl
mov
xor
fnstcw
mov
jb
push
xchg
mov
rorl
xor
mov
pop
das
rorb
jne
cld
shll
jp
inc
sub
andl
jbe
lea
mov
roll
test
mov
sti
cmp
or
fdivl
fcomps
int3
repnz
data16
popf
enter
clc
rep
shrb
aam
inc
cmp
xchg
add
rcl
jbe
ss
dec
cld
adc
cmp
ljmp
inc
inc
or
xchg
mov
cmp
fcomps
xor
test
test
pop
xchg
jno
ret
nop
movsb
js
jmp
jge
or
jl
mov
adc
adc
pop
dec
lds
bts
jmp
repz
js
push
es
movb
cmp
inc
cmpb
and
push
shl
iret
aas
push
call
push
enter
addb
mov
popl
jns
cmp
xor
and
adc
cmp
or
push
jmp
lds
loopne
lahf
lock
jb
nop
mov
loopne
cmp
add
sub
push
nop
mov
lock
lock
mov
movsb
or
push
mov
cmp
repz
nop
xchg
add
outsl
jno
xchg
fiadds
sbb
push
and
sbb
pop
pop
pusha
sub
pop
clc
lcall
and
call
cltd
push
mov
jecxz
add
inc
jmp
sub
sbb
push
and
adc
jle
adc
inc
xor
dec
movb
jne
dec
xor
rorl
jge
inc
mov
pop
push
test
movsb
stos
test
pop
es
inc
and
xor
adc
aam
dec
loop
es
adc
pop
or
cmp
add
add
and
ret
leave
and
jno
mov
jb
aas
dec
insl
cmp
mov
inc
hlt
fdiv
mov
inc
mov
addl
daa
and
adc
inc
orb
std
push
inc
ss
or
inc
or
pop
pop
fdiv
je
pop
dec
das
sbb
pop
dec
adc
and
jno
sbb
jl
or
lret
movsb
push
push
push
jge
add
sbb
jmp
pop
andb
jne
jo
mov
or
push
adc
and
add
das
add
push
jmp
add
adc
loop
pop
js
aam
cmp
add
xchg
or
push
mov
inc
test
cmp
or
dec
pop
dec
add
push
mov
loopne
or
adc
xchg
cmpsl
mov
outsb
push
sahf
add
jle
test
ja
dec
popa
xor
sub
popa
or
lock
movl
push
outsl
popa
lcall
mov
jecxz
and
mov
mov
ljmp
pusha
in
es
xor
and
add
push
ljmp
daa
ret
lock
adc
jno
and
adc
pusha
xor
or
adc
clc
add
cmpl
xor
dec
xchg
add
cmp
por
inc
inc
nop
sbb
mov
jg
lea
inc
cmp
dec
subb
push
pop
push
push
add
das
ss
jecxz
jmp
inc
add
push
loopne
jecxz
test
cmp
xor
dec
push
add
ret
mov
incl
and
pusha
mov
add
shrb
inc
jecxz
insb
inc
mov
jge
dec
ret
push
lock
inc
or
test
jl
and
or
dec
or
xor
lcall
jecxz
or
ss
push
ret
lea
adc
fimuls
mov
xor
lcall
enter
inc
test
pop
adc
jbe
in
or
inc
jge
outsb
inc
mov
or
pop
cmp
push
sti
adc
pop
divl
in
sub
ds
or
or
mov
in
int
les
push
push
jne
imul
dec
ljmp
jns
adc
push
scas
adc
jp
add
or
push
add
mov
movsb
es
and
ret
loope
xchg
add
add
loop
mov
xchg
push
add
rorb
fucomp
or
dec
jmp
lea
ret
insl
mov
mov
push
fbstp
pop
test
mov
inc
mov
clc
adc
dec
sbb
pop
rcll
sub
mov
or
adcb
out
cs
mov
or
out
xchg
scas
imul
sti
in
mov
rorb
popf
in
mov
lret
aam
fadd
fdivs
sti
call
jne
in
insl
sbb
iret
push
or
mov
mov
mov
pop
dec
leave
movzwl
test
push
mov
mov
xor
out
xlat
adc
loop
inc
cmp
pop
mov
sub
cs
jbe
icebp
lea
ficompl
jl
cmp
fldl
punpckldq
test
pop
pusha
cmp
sar
pop
mov
inc
adc
outsl
mov
xor
or
aam
clc
fdivs
add
sub
dec
or
je
or
sub
je
sbb
jnp
popf
cld
scas
pushf
pop
or
add
push
dec
sbb
or
adc
ficoml
pusha
mov
adc
arpl
push
jo
aas
mov
add
sub
push
imul
dec
lock
lret
or
ja
movsl
leave
test
add
cmp
out
sbb
shl
cwtl
je
or
inc
pushf
shll
je
lock
cmc
and
test
popa
lds
adc
addr16
outsb
xlat
scas
sbb
pop
and
sbb
jle
xor
mov
scas
mov
jg
lcall
jb
or
imul
outsl
cmc
jne
inc
lcall
aam
dec
ret
je
mov
add
mov
rcrl
add
imul
push
sbb
fidivs
je
cmp
adc
or
pop
mov
add
mov
ret
add
hlt
fadd
push
adc
cld
push
mov
and
je
repnz
inc
push
jae
mov
loope
rol
std
xchg
mov
aaa
jne
das
mov
adcl
jne
pop
push
pop
sbb
dec
and
mov
in
or
loopne
ret
imulb
es
or
mov
nop
jmp
movsl
nop
pop
push
mov
jnp
cmpb
inc
push
insl
cmp
ret
subl
je
int3
rolb
xor
sub
test
notb
loopne
aad
lret
add
add
adc
xor
test
sti
mov
sbb
outsl
push
mov
pushl
push
aas
push
or
add
loope
jge
lcall
mov
inc
mov
dec
mov
pop
inc
mov
pop
repz
mov
lea
movsl
inc
dec
push
cmp
movsl
xor
pop
outsb
test
sbb
outsb
jo
add
add
add
into
add
addr16
push
or
je
cmp
je
xchg
jo
test
insl
out
mov
add
mov
test
xor
add
cmp
movsb
mov
call
adc
xchg
out
add
or
subb
push
add
scas
aaa
or
nop
cmp
mov
jne
mov
ja
fbld
jmp
cmp
jle
insl
cmpl
incl
cmp
adc
mov
xor
mov
adc
adc
out
call
xchg
mov
sti
mov
in
mov
adc
dec
sub
lea
bound
push
mov
subb
sbb
movsl
push
dec
sub
pop
xchg
cwtl
inc
call
sbb
dec
nop
test
ds
inc
orl
lea
cmp
mov
out
addr16
jp
adc
decb
jae
test
shlb
adc
push
pop
data16
jmp
push
sub
lret
or
adc
ljmp
sbb
inc
ss
pop
sbb
mov
popa
mov
jmp
aaa
int3
je
cltd
mov
dec
sub
xchg
and
pop
jl
je
add
inc
fcmovbe
pop
mov
jecxz
nop
pop
fimull
int
cmp
rcrb
pop
lods
cmp
lahf
mov
or
jne
and
lea
outsl
jbe
sbb
es
pop
or
loope
dec
and
push
xchg
pop
sarl
xor
xchg
clc
sahf
mov
lret
mov
dec
jmp
pop
xchg
sub
inc
cmpsb
js
sub
je
clc
shlb
into
cmp
mov
test
and
xor
ss
aaa
dec
pop
mov
loope
leave
es
jmp
dec
and
inc
inc
in
sub
cmp
push
je
gs
inc
shrl
sub
add
sub
sub
push
test
mov
and
loop
mov
fisubrs
popf
fcoml
or
nop
cmp
shl
push
jp
imull
fdivrl
xor
fmull
jns
lods
push
add
adc
push
jbe
mov
sbbl
jne
xorb
cmp
inc
call
add
pushf
push
rcll
jl
jle
sbb
in
popf
add
jg
mov
lea
cs
addl
pop
and
add
icebp
jl
testl
push
xchg
jne
out
xchg
loopne
outsl
movsl
daa
pop
mov
sahf
js
insl
mov
mov
sub
dec
xor
movsb
cmp
add
lock
xchg
daa
sub
push
js
pop
iret
sarl
mov
ss
hlt
cltd
push
dec
cmpsl
hlt
push
out
imul
fidivs
dec
rolb
xchg
push
js
xchg
pop
mov
fsub
sbb
sbb
xor
mov
das
cmp
insb
or
lea
push
push
cmp
pmuludq
sub
ret
cmp
xlat
adc
out
and
rolb
add
lcall
push
push
cli
push
mov
inc
inc
push
mov
inc
dec
popa
xchg
push
xchg
aaa
subb
cmp
fcoml
movsl
test
scas
or
add
out
packsswb
aad
xor
pop
test
or
test
clc
or
aam
push
addr16
in
loopne
adc
xor
mov
push
or
jmp
push
and
por
push
push
cmp
lods
add
insb
push
rcrl
adc
test
or
add
mov
or
orl
lods
lea
or
xchg
je
pop
cwtl
adc
adc
ss
and
pop
jnp
or
mov
adc
imul
add
jmp
add
push
or
mov
jb
rclb
jns
and
and
push
popf
sub
in
push
into
cld
shr
mov
test
xor
mov
mov
inc
and
arpl
cld
jbe
sbb
into
push
xor
call
push
cld
add
push
pusha
adc
or
jne
sar
dec
cmpl
jbe
push
pop
or
dec
or
jg
push
subb
jae
mov
shr
lea
not
and
sar
mov
ret
adc
mov
xor
hlt
leave
pop
pop
add
push
or
cld
add
pop
and
push
or
sub
sub
jmp
jmp
clc
and
push
popl
jne
and
sti
add
mov
push
scas
ljmp
mov
mov
xchg
imul
fwait
andb
pop
xorb
cmp
sti
fnsave
xor
out
not
and
jne
clc
jle
and
xor
sbb
pop
xor
push
jle
pop
dec
add
xor
or
xor
jmp
pop
or
fisubrs
lea
popf
loopne
rorl
dec
or
insb
or
or
dec
pusha
mov
mov
and
out
inc
mov
mov
adc
testl
or
jmp
dec
lret
mov
ret
adc
shl
ljmp
xchg
rorb
sarb
add
and
stos
and
cmp
sti
cmp
dec
or
jp
push
call
aas
gs
popa
mov
or
xor
andl
inc
adc
dec
adc
pusha
add
and
jmp
gs
push
mov
mov
popf
lea
xor
add
mov
mov
dec
adc
adc
sbb
jl
push
cmp
push
jbe
insl
or
mov
out
or
inc
cltd
test
mov
xor
sub
imul
mov
cwtl
outsl
push
mov
cmp
mov
js
add
testb
inc
xchg
mov
inc
adc
stos
xchg
push
js
and
test
adc
adc
fucomi
fwait
orl
insl
and
add
and
xchg
jae
mov
jno
es
fnstsw
add
inc
ljmp
test
cmp
clc
pop
out
loopne
xchg
add
or
hlt
or
push
mov
pop
or
add
popa
lcall
mov
pusha
inc
sub
iret
shr
lcall
test
xchg
mov
fistpll
ljmp
push
add
sub
aad
ja
sbb
je
dec
and
ret
movsb
adc
shrb
adc
fwait
subb
sahf
bsf
pop
mov
mov
lock
clc
aad
jg
dec
inc
jne
or
lds
not
and
les
jl
adc
nop
out
fcompl
sub
pop
shr
or
mov
dec
cld
adc
cmp
add
fwait
cmp
ja
mov
test
inc
pusha
faddl
xchg
fstps
xchg
add
mov
stc
int3
add
push
pop
dec
pop
mov
pop
inc
stc
sbb
clc
inc
sub
es
orl
rcr
loopne
nop
test
lcall
add
mov
add
repnz
gs
add
pushf
sar
dec
inc
jp
mov
cs
fstpl
and
loopne
sbb
jbe
lcall
jle
mov
jns
cmpsb
imul
xor
push
pop
lcall
iret
mov
pop
add
and
and
cmp
test
or
sbb
adc
cwtl
stos
insb
xor
mov
mov
sub
cmp
clc
jl
inc
inc
or
mov
ds
pop
sub
pop
xor
add
pop
push
sar
dec
jp
movsb
loope
or
sarb
xor
jo
inc
cmp
dec
mov
sbb
je
fisttps
mov
dec
push
pop
mov
call
adc
mov
sbb
adc
mov
mov
icebp
mov
and
negl
sbb
cmp
lods
push
mov
mov
dec
in
rdmsr
cmp
mov
sbb
imul
pop
rcrb
mov
push
loope
pop
ret
lods
pop
and
inc
and
dec
push
push
push
jge
sbb
cmp
mov
in
or
stos
call
or
adc
sub
and
or
mov
ret
adc
or
fisubrs
add
push
jne
mov
rcrl
jmp
jnp
add
pushf
outsb
in
in
or
arpl
inc
adc
cwtl
or
mov
xor
cltd
pusha
pop
lcall
cmp
je
mov
dec
sbb
and
mov
mov
dec
pop
iret
jne
mov
jno
mov
xchg
push
xchg
push
mov
jmp
mov
mov
and
jne
mov
push
pop
or
leave
inc
test
inc
push
pushf
mov
les
sub
icebp
sbb
sub
and
add
dec
add
xchg
sbb
ror
push
sahf
cmp
stos
inc
cmp
pop
and
mov
mov
jne
repnz
jmp
lret
cmp
mov
es
dec
bound
dec
push
and
push
clc
into
xor
pop
and
cmp
inc
xor
push
or
and
roll
sub
les
jge
inc
or
push
or
dec
cld
or
das
or
inc
or
mov
mov
stos
pop
and
out
or
sub
mov
rcrb
fimull
xor
adc
sbb
sbb
cmc
adc
ds
imul
lret
lock
repnz
js
jnp
cmp
sbb
pop
jb
or
xorl
jmp
loopne
lock
xor
insl
and
mov
adc
fs
cmp
movb
push
lock
ret
sbb
jbe
or
or
dec
mov
or
outsb
add
xchg
in
fstl
movb
imul
es
add
bndldx
or
sbbb
cmp
cmp
sub
add
push
les
in
mov
add
push
xchg
shlb
adc
pop
or
call
push
and
js
push
push
dec
push
push
push
or
jmp
push
or
mov
cmp
inc
push
mov
or
pushl
sbb
push
push
mov
push
divl
pop
and
in
shl
or
adc
mov
outsb
add
movsl
popa
mov
les
hlt
imul
enter
adc
js
push
or
add
fcompl
hlt
add
mov
test
xchg
mov
sub
lahf
dec
dec
jl
insb
int3
push
mov
imul
xor
dec
mov
jl
cmp
mov
mov
insb
jl
jge
jle
inc
inc
dec
jne
daa
pop
mov
inc
aas
xor
pop
je
shrb
jae
addr16
imul
mov
dec
sub
popf
call
and
mov
mov
jns
xor
inc
jne
ret
adc
adc
insb
mov
adc
jge
jmp
jb
mov
jl
or
int3
repnz
test
in
je
mov
push
mov
nop
pop
in
rorl
sbbb
aam
shr
xor
test
pop
lcall
xor
enter
ffree
mov
movsb
add
and
shll
std
cmp
dec
xor
adc
pop
pop
mov
lods
or
fwait
add
imul
sbb
xchg
arpl
push
adc
stc
fsubrl
mov
pop
rol
lea
in
dec
jb
pop
leave
scas
pop
dec
push
in
scas
and
mov
hlt
addr16
add
mov
inc
sahf
push
inc
pushf
fistps
xor
adc
sbb
pop
and
popf
mov
or
adc
and
sbb
or
cmp
lcall
xor
and
loope
adc
and
les
std
xchg
push
lcall
aaa
int
ret
test
shll
enter
stos
or
cmpsl
cli
xchg
sbb
inc
call
xor
test
sub
dec
sbb
nop
sub
lahf
call
enter
inc
leave
adc
mov
enter
shr
mov
lods
mov
enter
lret
and
add
sub
pusha
push
xchg
call
xchg
inc
push
jns
mov
xor
xchg
addr16
add
mov
mov
stos
xchg
popa
adc
adc
inc
xor
icebp
test
mov
leave
dec
in
shr
and
mov
pop
in
inc
test
push
hlt
xchg
xchg
push
dec
leave
test
in
sbb
push
test
orb
sub
inc
leave
push
and
scas
in
and
ret
inc
xchg
les
mov
sarb
loop
in
enter
xchg
les
inc
and
in
sub
pushf
sbb
test
in
push
dec
popa
mov
xchg
test
ret
adc
data16
adc
pop
mov
dec
add
mov
or
xor
dec
popa
xor
test
repz
scas
or
test
outsl
or
repz
jne
cmp
sub
jbe
push
pop
lea
sub
inc
js
push
mov
lock
and
cltd
sbbb
adc
mov
jbe
lods
inc
or
fwait
repnz
xor
xchg
and
dec
rorb
sar
or
test
fldenv
adc
nop
adc
jmp
lods
inc
mov
das
mov
or
mov
imul
jnp
adc
je
inc
fs
mov
lock
or
or
ffree
repz
adc
insb
xlat
and
adc
jecxz
aam
insl
in
xor
jle
out
je
cmpsl
mov
stc
mov
aaa
push
pop
call
push
cs
add
dec
mov
cmp
adc
ret
pop
popa
movsl
push
add
enter
add
out
push
or
mov
shll
enter
sub
or
hlt
jno
cmp
sub
rorb
sub
xor
dec
shll
cld
std
and
inc
sar
mov
aad
xor
mov
push
push
and
adc
cmpsb
rcr
cli
xchg
xor
jg
add
add
push
pop
sub
fistl
sbb
dec
mov
test
xchg
je
push
or
pop
inc
fmul
rorb
lret
pop
mov
jg
in
loopne
fldl
or
fldl
or
outsb
loop
inc
sbb
lds
sti
xchg
loopne
jne
xor
outsl
fcmovnbe
into
add
push
leave
pop
in
mov
fsubrp
cltd
jo
push
dec
push
mov
jge
mov
sub
das
fidivrl
xchg
sub
xchg
dec
je
add
lods
adc
and
sbb
sti
fldenv
test
lret
adc
xchg
movzbl
push
test
cmp
and
shr
add
movsl
dec
js
xor
rcrl
cmp
add
add
jno
mov
lret
xchg
adc
lock
xchg
mov
in
lock
push
in
in
in
inc
adc
faddl
push
fdiv
aas
movsb
popa
push
fsubrl
fstl
push
shl
push
mov
aaa
jne
xchg
pusha
xchg
das
and
inc
lock
dec
ljmp
les
pop
push
mov
add
repz
das
cmp
inc
xor
mov
adc
mov
fisubrl
jge
adc
sbb
and
out
and
mov
xor
repz
push
or
jne
ds
xchg
adc
lea
loope
call
inc
clc
add
hlt
out
mov
popa
mov
push
xchg
jmp
inc
push
add
jl
adc
or
push
jmp
test
add
fmull
in
jp
andl
test
jne
push
push
andl
sbb
cmp
inc
and
dec
or
jns
mov
js
mov
adc
mov
cmp
or
xlat
lock
push
loopne
or
adc
xchg
ret
mov
stos
add
jmp
add
pop
mov
mov
cld
adc
adc
or
faddl
jne
jb
rol
cmp
enter
mov
lods
std
mov
pop
testb
pop
scas
pop
lret
mov
sbb
rorb
mov
or
movsl
jnp
lods
pop
add
jne
dec
sbb
sub
dec
adc
pop
sar
lea
or
ret
and
in
std
or
cmp
decl
sub
loope
loopne
inc
test
out
xchg
out
test
inc
pop
inc
inc
ljmp
std
fadds
ss
push
or
mov
shll
dec
shlb
leave
xchg
std
lods
jno
sbb
cmova
mov
or
int3
shl
popa
pop
xchg
daa
pop
into
cmp
lds
push
pop
or
notb
add
xorl
add
ror
jg
cmp
ds
hlt
es
or
add
pop
push
mov
adc
lods
es
mov
call
mov
push
or
inc
cmp
int
cli
cmp
lahf
test
mov
insb
jne
inc
sub
scas
pop
rorl
jecxz
fstps
ss
fsubrs
bound
dec
mov
inc
xor
cld
inc
add
sub
in
fidivrs
push
int
lds
dec
push
imul
cmp
push
lods
movsb
lock
mov
push
leave
shll
and
pop
in
in
nop
mov
cmpsl
xor
jne
push
in
sbb
mov
push
loope
stc
lods
pop
call
pushf
gs
add
cmp
add
mov
bound
into
nop
sti
push
inc
cmp
arpl
gs
in
mov
repnz
inc
gs
iret
cli
inc
gs
add
cltd
and
mov
cmp
xchg
jno
data16
mov
cmp
adc
testl
add
or
mov
mov
pop
cmp
mov
sbbb
stos
lds
cld
xchg
xchg
cmp
mov
pop
daa
in
and
shr
xchg
neg
adc
loopne
sbb
or
mov
pop
jp
pop
or
je
testl
inc
insl
mov
adc
push
test
jecxz
mov
mov
or
lock
mov
das
pusha
outsl
repnz
fdivr
adc
fidivl
ret
add
arpl
mov
test
ja
mov
shlb
cmp
andl
popf
mov
call
call
push
in
fadd
push
mov
es
jo
push
mov
push
cmp
fcomp
jge
mulb
stos
lcall
mov
loope
jnp
jne
std
lds
jmp
out
or
lea
push
mov
out
imul
push
fildl
or
pop
sub
mov
cmp
jl
jmp
push
mov
sbb
jno
mov
push
jecxz
cld
mov
mov
leave
std
out
imul
dec
xor
cs
sahf
aad
test
outsb
aas
dec
arpl
test
mov
sbb
inc
mov
inc
inc
adc
pop
mov
inc
cmp
cmp
inc
xchg
mov
ret
inc
call
cmp
adc
imul
test
leave
loopne
mov
xor
inc
repz
cmc
ljmp
fmull
mov
fisubl
popa
mulb
lods
cmp
test
sub
mov
pop
dec
repnz
jmp
shll
jno
lods
lock
xor
push
sub
fwait
pop
mov
adc
arpl
ror
popf
sbb
ret
mov
mov
addl
mov
aam
arpl
rorl
xorb
dec
cmpl
push
sbb
je
les
sbb
cmp
push
movsb
adc
add
mov
imul
push
inc
lret
jne
cmp
pushf
addb
xchg
sbb
bound
stos
jne
fdivrs
das
push
dec
pop
sub
and
and
sbb
std
rorb
and
loope
pop
shrl
or
xchg
aaa
fsubrl
push
dec
mov
xchg
and
nop
jl
inc
sahf
movl
ds
push
bound
loope
pop
xor
js
mov
iret
shll
adc
or
adc
lock
sbb
aas
xor
adc
mov
mov
andl
xchg
cmpl
nop
sarb
xor
push
loopne
aad
lret
push
add
pushl
xlat
adc
sub
cmp
ja
add
xchg
mov
stc
and
icebp
or
and
sub
or
mov
and
ds
jns
xchg
sbb
lock
sbb
cmc
dec
dec
mov
popa
xchg
push
lock
repz
mov
arpl
mov
and
test
out
test
int
in
out
scas
movsl
call
dec
es
push
xchg
sbb
cmc
int
adc
enter
xor
adc
and
iret
mov
push
int
int
aam
and
and
les
out
xor
xchg
movsb
cmp
enter
sbb
nop
push
cmpsb
mov
dec
in
ja
subl
sub
sti
pushf
sbb
pop
dec
inc
enter
and
pop
xchg
lods
test
sbb
aad
lcall
xchg
jno
adc
or
pop
movsl
jb
sbb
lret
mov
iret
enter
mov
insl
and
into
inc
sub
inc
leave
push
sbb
int3
std
cmpsl
add
mov
mov
test
lret
pop
xchg
adc
inc
lods
or
stc
pushf
pop
in
push
jecxz
divl
add
xabort
xchg
and
dec
stc
mov
and
adc
sbb
xchg
lret
enter
test
cmp
lret
fs
or
bound
dec
push
inc
xor
enter
incl
push
test
sbbl
adc
push
pushf
lods
movb
enter
loopne
shrb
rorb
pop
je
jmp
dec
ret
in
push
arpl
pop
js
inc
add
push
test
add
shll
and
ss
jb
imul
out
xor
xlat
jle
cltd
nop
sbb
jg
adc
test
xor
pusha
sbbb
jo
stos
dec
iret
sub
inc
mov
outsb
pushf
adc
cltd
xor
sub
or
gs
and
mov
lret
add
test
lret
stos
js
cwtl
xchg
lahf
sub
test
add
adc
adc
xchg
dec
repz
jnp
mov
neg
pop
mov
sub
xchg
lock
push
lods
iret
inc
lret
dec
xchg
into
test
push
lcall
xchg
and
xlat
or
popa
pushf
adc
fwait
int
repz
xchg
push
dec
adc
push
and
out
cmpsl
push
mov
outsl
inc
or
push
ds
push
jbe
jle
sbb
or
push
test
cmpsl
mov
out
sbb
inc
push
jo
call
push
cmp
lods
lret
daa
mov
fmuls
and
mov
fwait
sbb
and
call
jecxz
sub
hlt
lret
mov
fsubrs
ja
aam
sub
cs
sub
mov
add
sub
push
pop
rcr
adc
in
lock
rep
jge
les
jl
xor
lcall
ss
cmp
or
and
adc
les
iret
pop
jmp
mov
mov
pop
jae
mov
loopne
dec
pop
add
jo
vcvtps2pd
sub
loopne
imul
loopne
pop
fsubs
bound
pop
arpl
jae
push
or
or
adc
inc
cld
dec
add
divl
add
add
ja
js
ja
lea
pop
or
sub
jge
leave
js
gs
mov
scas
ret
xor
cmp
sub
push
push
and
push
push
push
sarb
fsubrs
dec
repz
nop
xor
add
nop
stos
adc
jmp
cmp
into
jg,pt
mov
mov
xchg
xchg
or
mov
lahf
cld
push
mov
cmpb
inc
or
outsl
mov
test
je
idivl
sar
xor
loop
ret
aaa
mov
push
push
mov
sbb
push
iret
add
ret
and
and
push
and
add
les
mov
push
mov
add
jmp
bound
adc
and
flds
mov
out
or
insl
mov
pop
inc
cs
add
sbb
sub
das
jge
sub
push
mov
mov
jo
mov
mov
mov
inc
push
in
inc
dec
pop
cmp
pushl
fisttpl
mov
inc
fs
loope
or
xor
mov
or
jb
filds
inc
or
leave
jnp
xchg
push
add
je
hlt
daa
clc
inc
push
xor
scas
or
sbb
jae
testl
es
ss
repz
sub
les
jmp
jne
jp
adc
nop
add
mov
lds
lret
mov
adc
or
sub
and
mov
orb
pop
mov
mov
push
pop
push
push
jnp
cmp
jmp
rcr
or
jne
div
pop
dec
adc
mov
mul
pop
jb
cmp
or
cmp
or
fwait
xchg
mov
cwtl
adc
inc
inc
and
neg
fcmovu
fmul
sub
scas
nop
jle
iret
mov
inc
in
sub
add
movntps
dec
jle
pop
inc
and
pop
jmp
pop
clc
mov
inc
inc
repz
movb
inc
clc
movb
dec
adc
and
arpl
push
lahf
lret
lods
iret
add
mov
adc
cmp
and
sub
cmp
rcrl
or
clc
out
sub
nop
xor
pop
pusha
loopne
adc
jecxz
cltd
les
mov
mov
and
dec
leave
mov
jne
mov
jp
pop
mov
and
or
es
movl
stos
fwait
cmpsb
xchg
test
cmova
dec
sub
sbb
and
sbb
shll
test
add
lea
or
adc
jb
jns
lret
pop
outsb
clc
aas
pop
push
lods
add
imul
jae
test
mov
ret
ja
mov
add
dec
inc
sahf
testb
and
xchg
popf
out
adc
dec
mov
and
push
addb
or
daa
dec
or
loop
lods
mov
cmp
jb
pusha
xor
jl
mov
inc
mov
cld
sbb
in
les
mov
lret
aam
loop
sub
xor
cmp
adc
jo
push
stc
jo
mov
mov
mov
add
push
lret
jo
push
push
xchg
out
inc
xor
mov
iret
int
xchg
xchg
add
add
add
pop
push
sahf
inc
sub
and
or
fwait
daa
xchg
stos
add
push
lds
loopne
jb
out
sbbb
sbb
imul
add
in
ret
aas
sar
sub
jnp
cmp
or
inc
add
lcall
sbb
adc
pop
andl
sbb
xor
daa
les
add
pop
push
ja
mov
cltd
loope
insl
pop
mov
lods
fidivl
fwait
sub
mov
jo
loopne
and
pop
and
gs
and
stc
add
out
les
push
xchg
arpl
add
jmp
xor
sub
pcmpeqb
iret
pop
lahf
push
fwait
jle
sub
or
inc
jecxz
inc
mov
adc
pop
popa
outsb
loopne
xor
ret
mov
incl
and
mov
and
push
inc
inc
jo
and
jbe
jne
int3
cs
lret
inc
mov
push
and
pop
clc
out
cmp
je
ss
mov
out
and
faddl
aam
xchg
pop
xchg
xchg
ja
addr16
outsb
or
cld
sbb
nop
adc
cmp
ret
repnz
and
add
sbb
add
movsb
ficoms
inc
cld
dec
push
mov
loope
hlt
or
add
stos
or
pushf
jmp
lods
hlt
icebp
repnz
push
dec
add
dec
push
popf
or
in
jo
std
jbe
cmp
cmp
jb
inc
fistps
sub
aaa
mov
cmp
roll
and
xor
daa
mov
in
clc
dec
sbb
xchg
lock
jg
roll
adc
fisubl
data16
push
jne
ljmp
cltd
clc
and
or
movsb
or
jb
inc
sub
clc
shr
dec
or
pushf
lahf
push
push
in
mov
push
mov
pop
cmp
lock
pop
rol
adc
jo
push
aam
lods
cmp
sub
pop
test
cli
lock
pop
sbb
imul
les
adc
dec
cmp
test
xchg
test
fwait
dec
adc
jbe
andl
or
push
pop
mov
adc
add
imul
xchg
xchg
rorl
out
or
push
push
add
push
inc
movsb
inc
and
jne
rcr
add
inc
push
subb
push
outsb
and
sti
dec
pusha
int3
add
sub
and
js
test
jmp
lock
sbb
or
and
leave
push
mov
inc
cmp
xor
inc
test
mov
fildl
jle
cmp
std
mov
cmp
cmp
and
sub
sbbb
lods
cmpsl
jb
xchg
cmp
jne
xor
lock
pusha
jmp
leave
push
sbb
ficoms
sbb
je
arpl
sub
dec
or
dec
lods
push
xor
movsb
clc
or
icebp
imul
xor
popa
mov
ret
sbb
add
pop
add
xlat
push
and
inc
ljmp
std
inc
cli
push
sub
dec
divl
loope
lock
push
and
insb
sahf
or
fnstcw
mov
pop
jne
fists
sbb
or
pusha
push
and
daa
sub
mov
jbe
pop
xchg
adc
push
sarl
cmp
inc
or
je
cmp
scas
xchg
out
dec
cmpsl
int3
xchg
push
push
mov
xor
jo
mov
scas
outsb
add
xchg
fcmovb
jle
mov
push
add
in
add
andb
aad
push
or
or
out
je
add
in
sti
aam
inc
pusha
jne,pn
sbb
inc
mov
cs
sub
adc
out
sbb
jge
mov
mov
pop
mov
and
or
sarb
mov
dec
pop
mov
push
dec
jmp
or
rclb
mov
aaa
xor
sub
mov
inc
rcll
imul
sbb
sbb
add
push
in
pop
xchg
insb
in
das
add
ljmp
push
push
jp
dec
pop
movsb
das
arpl
sbb
hlt
pop
ss
add
jne
cmpl
inc
mov
and
cmp
bound
ret
cmp
and
cmp
jbe
dec
hlt
test
popf
out
inc
jno
cmp
and
sbbb
add
movsb
xchg
filds
or
mov
sub
inc
test
rolb
imul
jae
daa
jge
outsb
loope
rcll
sub
adcb
cmc
sbb
or
mov
inc
dec
pop
inc
and
mov
cmp
jbe
jb
push
inc
xor
scas
jge
push
jmp
adc
sub
subl
xchg
cmp
mov
out
or
xor
pop
push
dec
cmp
or
dec
mov
mov
xlat
jp
enter
lds
clc
in
daa
mov
in
imul
pop
or
dec
add
sub
mov
mov
stc
cmp
push
out
mov
mov
into
movl
push
mov
jl
xor
adc
lcall
incl
dec
or
mov
push
push
or
adc
popa
xchg
sbb
sub
inc
mov
push
xchg
les
add
test
push
or
popa
adc
xchg
add
inc
jge
mov
ja
cmp
stc
pop
popa
jle
repz
jmp
xor
mov
pop
push
inc
inc
adc
add
or
mov
add
inc
xor
stc
pop
es
jb
or
mov
je
movsl
and
es
jbe
mov
and
jmp
push
pop
cld
pop
push
lds
popf
push
pusha
inc
clc
cmp
cmp
leave
mov
add
mov
sub
into
inc
add
xor
cmp
inc
inc
pop
icebp
pop
add
push
inc
xlat
popa
adc
mov
cmp
cwtl
push
daa
cmp
mov
mov
sub
jnp
jmp
dec
mov
mov
xchg
xor
aaa
add
add
or
pop
push
mov
loope
inc
aaa
movsb
icebp
stos
hlt
aas
jae
mov
push
inc
dec
shl
mov
add
cmovl
push
push
mov
add
pop
xchg
jge
lods
mov
xor
dec
mov
mov
push
add
rolb
daa
mov
lret
pop
pop
loope
clc
movb
cs
and
inc
or
or
xor
xchg
gs
jne
enter
in
mov
cmp
dec
inc
inc
or
jne
loopne
je
repnz
clc
rorb
add
dec
inc
hlt
sbb
pushf
dec
arpl
pop
dec
cmp
add
and
sbb
lea
dec
jb
cld
test
cmp
sbb
xor
ret
jmp
sbb
dec
cmp
addb
lods
cmpsl
ficompl
jnp
push
add
and
or
cmp
nop
hlt
out
int
add
mov
push
shl
fcmovnb
xchg
pusha
mov
push
push
mov
push
push
pop
push
dec
aas
adc
add
mov
int
or
dec
lea
insl
cmpsl
add
orb
or
or
mov
and
push
and
xor
ret
xchg
inc
mov
in
pop
pop
inc
test
mov
and
cmp
loop
es
mov
jl
sbb
arpl
adc
mov
sbb
outsb
lock
scas
rcrb
and
mov
dec
andb
lock
push
cmp
daa
adc
in
mov
push
or
inc
cmp
loopne
sub
adc
lret
push
jle
test
jle
outsl
lcall
mov
dec
sub
xor
push
jg
jp
push
mov
or
sar
xchg
incl
out
add
lock
out
inc
add
sub
jno
sti
jle
jns
inc
or
inc
adcl
jge
sub
loope
xorl
subb
jb
xchg
add
clc
imulb
lahf
shl
push
inc
mov
adcb
mov
rorl
add
mul
push
lock
add
or
je
xor
fldenv
mov
movl
adc
mov
lcall
cmp
loope
pop
notb
dec
adc
imul
lea
push
cltd
aad
subl
mov
out
mov
sub
sahf
or
mov
mov
out
push
xlat
cs
mov
push
xchg
push
xor
lret
xor
push
xchg
movsb
loope
lock
xor
and
in
out
sbbl
repz
loopne
add
lock
not
push
rcll
add
mov
sub
outsb
add
sarb
sbb
ret
xor
enter
pop
xchg
dec
add
ret
sub
popf
sbb
pop
pop
or
cmpl
dec
lahf
or
sbb
das
in
mov
xchg
dec
rcl
or
data16
popa
and
stos
xlat
push
mov
mov
lods
clc
jae
fwait
pusha
dec
clc
dec
jecxz
mov
mov
cmp
fs
clc
add
ret
pushl
add
lcall
jae
and
xchg
lea
add
ds
mov
out
push
addb
inc
inc
adc
in
cmp
jl
sbbb
in
mov
inc
push
dec
mov
nop
adc
cmp
cmp
daa
adc
js
je
push
cmp
fnclex
pop
cmpsb
xor
jl
shll
dec
sbb
push
jne
lcall
ficomps
xchg
or
or
add
sti
or
add
mov
and
xchg
and
dec
pusha
jb
push
aam
inc
dec
or
add
ret
loopne
pop
jnp
mov
popa
in
jmp
cmc
or
repnz
fsubrs
and
stc
push
mov
sub
roll
call
out
decl
cwtl
mov
sub
push
push
xor
movsl
das
les
jo
js
push
and
inc
cwtl
cmp
cmp
xor
and
push
push
mov
pop
mov
dec
mov
cmp
inc
jo
popf
jg
add
or
mov
jmp
repnz
xorb
dec
fs
orb
jns
into
or
sarb
push
mov
sbb
adc
mov
ret
xor
mov
mov
aam
fsubr
push
and
sbb
push
rol
std
xor
ds
jmp
sbb
mov
xlat
call
or
push
scas
int
sub
adc
outsl
jo
push
stc
mov
fdivs
adc
sbb
or
dec
iret
pop
jmp
imul
popl
pop
jmp
ficompl
push
addl
test
mov
aaa
adc
sub
mov
jl
adc
push
nop
add
sub
sub
jl
cmp
jg
push
cmp
adc
out
scas
hlt
pop
cmp
jbe
jne
imul
enter
push
test
movsb
sbb
ss
popa
cmp
push
shrl
popa
pop
addl
push
mov
jle
inc
push
mov
ds
sub
mov
xor
fsubrl
cmpsb
dec
mov
cmp
std
mov
push
ja
cld
and
add
sbb
orl
or
cs
xchg
or
rolb
stc
pop
or
push
repnz
sbb
xchg
mov
pop
push
inc
ret
inc
push
jo
aas
and
jae
jecxz
xchg
mov
cmp
add
je
testb
je
in
mov
adc
sbb
in
dec
stos
mov
mov
clc
sub
dec
inc
loopne
aad
outsb
dec
stc
sub
mov
mov
inc
and
jle
sbb
sbb
cmp
jbe
add
jg
rcrl
or
fildl
mov
mov
inc
lahf
cmp
mov
jle
cmp
jl
dec
fiaddl
mov
mov
enter
loopne
sbb
fucom
adc
push
adc
push
pushl
add
sbb
and
out
loop
push
in
and
inc
call
lock
jmp
sahf
sub
xor
cmp
mov
test
or
jne
inc
sbb
sbbb
cmp
or
push
mov
cmpl
xor
xor
xor
sub
mov
sbb
xor
and
jg
mov
fisttpl
cmp
nop
sar
mov
lret
or
add
add
push
lock
jl
push
les
pop
push
or
add
add
outsb
or
jg
pop
push
and
arpl
bound
test
mov
push
fstpt
test
ss
add
bound
push
push
les
inc
out
scas
loopne
add
pop
jg
cmp
jg
lods
jmp
pop
jl
mov
sub
dec
xor
popf
rorl
xchg
or
mov
adc
fneni(8087
adc
test
movsb
jno
and
or
fldenv
adc
push
gs
add
mov
sahf
push
adc
outsb
lret
aam
mov
mov
rcr
dec
stc
aaa
mov
aaa
or
mov
inc
inc
push
clc
rolb
pop
test
push
shrb
jp
outsl
mov
dec
pop
sub
cmp
pop
cmp
aaa
in
or
push
add
inc
or
sbb
push
fwait
sub
jg
sub
dec
shlb
mov
pop
mov
cmp
lods
bswap
or
repnz
mov
and
and
or
fstpl
sub
pop
mov
rcl
and
ja
cmpl
cmp
inc
push
out
into
cmp
movsl
and
jge
push
ja
lods
push
mov
fpatan
popa
or
lock
sub
pusha
shr
add
in
dec
mov
fidivrl
or
dec
add
test
xor
andb
mov
add
or
cld
and
and
les
mov
mov
adc
cmp
cmp
repnz
loope
push
dec
imul
fcoms
lock
hlt
mov
imul
pop
je
adc
out
adc
or
jg
add
scas
filds
jmp
cmp
or
neg
arpl
popa
xchg
je
mov
rcrl
mov
jmp
outsl
sub
inc
xor
sbb
rolb
xchg
icebp
testb
pop
inc
sbb
nop
jmp
jno
add
inc
add
mov
mov
call
sbb
mov
adc
adcl
add
fxch
repz
xorb
adc
ja
fadds
mov
jmp
xor
add
cmp
push
mov
fcmovu
sub
sbb
add
and
jp
fcoml
push
icebp
imul
icebp
enter
outsl
sbb
or
icebp
mov
sub
jns
inc
mov
test
ja
mov
mov
mov
andb
stc
cs
sbb
flds
je
pop
cmc
and
mov
ret
ss
imul
mov
add
pop
sbb
fs
bound
inc
mov
jb
addr16
xchg
xor
push
cmp
and
ret
mov
inc
cmp
and
loopne
adc
jbe
dec
pop
jns
jle
pop
lock
jne
inc
ja
and
push
mov
or
cmc
insb
push
ljmp
jb
mov
gs
movsb
sub
dec
inc
orl
inc
add
mov
mov
dec
dec
xor
and
movsb
adc
sub
stos
insl
leave
mov
icebp
cmp
scas
mov
lret
repz
add
bound
rcll
or
add
adc
push
or
xchg
mov
or
push
insb
xchg
jle
sbb
jns
jne
jmp
fcomp
vpand
or
push
mov
jl
sbb
dec
out
mov
lock
scas
add
pop
jle
mov
mov
jmp
inc
mov
pushf
adc
jecxz
adc
and
lret
xchg
adc
adc
pop
push
xchg
push
jle
add
and
jp
mov
andb
dec
push
aam
xor
mov
adcl
sbb
stos
jo
jl
cmp
sbbl
mov
popf
jle
aam
sub
dec
repnz
in
pusha
jbe
adc
sbb
sbb
sub
xor
dec
jg
adc
cmp
fsubrp
push
mov
and
pop
hlt
int
aad
cmp
sbb
xlat
or
rolb
sub
iret
or
push
pop
scas
testl
sbbb
sub
inc
sub
test
popa
shll
cmp
pop
daa
lds
notl
repnz
and
push
add
inc
ficoml
lock
jbe
enter
int
jbe
inc
lret
lock
mov
cmc
ljmp
xor
and
out
int3
push
sub
mov
lock
cmp
mov
xlat
je
cmp
pop
repnz
shll
testb
sar
mov
push
or
sbb
sub
jge
push
jmp
inc
addr16
fidivrl
sbbl
je
cmpsb
xor
cmp
pusha
inc
xchg
dec
xor
push
or
lret
inc
and
inc
push
movsb
gs
lods
shr
jmp
das
xor
or
mov
test
adc
jle
jbe
jecxz
push
les
push
pop
or
stos
iret
mov
cld
jle
xor
in
mov
fstl
cmp
mov
push
sbb
insl
cld
inc
pop
pop
cltd
pusha
and
xchg
subb
mov
push
cmp
inc
mov
add
lahf
dec
js
mov
pop
sub
aaa
add
outsb
incl
fsubrs
cmp
jb
jbe
lea
lea
sub
and
add
loop
mov
mov
cmp
jmp
popl
sub
xor
push
cld
push
sub
mov
packsswb
icebp
cwtl
push
dec
adc
sbbb
cmpsl
push
jbe
pop
inc
mov
push
mov
sub
dec
xor
sbb
push
lahf
rolb
ljmp
rclb
pop
cmpsb
dec
inc
cmp
jbe
xor
jg
leave
xor
out
shlb
or
jnp
lcall
push
outsb
adc
xchg
inc
dec
or
in
repz
imul
cmp
adc
ss
and
and
sub
in
in
xor
cmp
inc
and
leave
leave
leave
in
inc
cmovs
jb
leave
push
pop
add
jb
fs
jb
je
jl
imul
test
mov
es
pushf
mov
movsb
test
sub
shrb
ss
popa
dec
mov
add
or
lock
filds
xor
imul
or
clc
adc
cld
jae
fwait
or
or
dec
add
or
mov
nop
add
adc
ror
mov
pop
inc
or
adc
and
lods
xor
fs
dec
inc
ret
sbb
sbb
mov
adc
jne
out
jbe
movsb
xchg
inc
or
sbb
ss
add
dec
mov
push
adc
cli
and
icebp
sub
xchg
pop
or
adc
xor
push
dec
cmp
dec
sbb
push
movsb
addl
inc
add
es
rcll
lret
test
add
push
out
or
aam
pop
fiaddl
jne
std
and
pop
mov
xchg
pop
pop
inc
movsb
fisttps
fcmovu
pop
adc
jle
cmp
add
ss
and
add
push
push
je
ja
lock
pop
push
push
icebp
add
mov
outsl
iret
sbb
lret
je
lea
push
jle
mov
push
popf
das
loope
test
pop
int3
sbb
fiadds
cmp
jmp
popa
add
sbb
lcall
mov
cmp
pushf
insl
pop
lea
inc
push
dec
and
cmp
test
add
xchg
test
or
sbb
add
adc
gs
dec
adc
pop
lahf
repz
add
test
add
jns
push
in
add
movb
aad
push
and
cmpsb
jno
dec
outsl
pop
xor
cmp
add
nop
int3
mov
mov
push
adc
inc
inc
xlat
xor
jg
cs
dec
imul
jmp
jbe
cmp
push
dec
xor
cmp
adc
popa
adc
xor
and
and
mov
mov
movb
sub
fcoms
pop
rclb
into
lcall
or
jae
outsb
or
push
push
pop
inc
loop
add
mov
adc
sti
in
and
and
jb
push
mov
push
addb
popa
mov
lea
xor
mov
psubb
mov
add
loope
addl
or
add
stos
es
xchg
and
cmp
push
mov
sub
fwait
mov
cmp
mulb
pop
xchg
xchg
mov
popf
sbbb
mov
sub
leave
mov
xchg
in
jle
mov
shlb
cmp
xor
add
stos
pop
std
or
sub
adc
jecxz
test
inc
pavgb
push
lea
shl
dec
adc
and
out
cmpsl
std
or
add
sar
mov
or
sti
add
pop
fadd
and
adc
insb
jne
aad
mov
cmpsb
push
adc
and
push
adc
shll
popf
add
mov
inc
sbb
xchg
inc
insb
push
sub
test
cs
mov
pop
mov
jns
cmpsl
or
cmp
les
inc
cmp
loope
cmp
pop
addl
pop
outsb
xchg
xchg
pop
int
sbb
mov
lock
adc
mov
pop
sbb
or
lods
mov
sub
outsl
imul
dec
cmc
add
andb
stos
jmp
cmp
cmp
fisttpl
lret
add
cmp
fsubs
adcl
pushf
lcall
jmp
add
adc
sbb
inc
daa
hlt
and
add
push
es
ds
lea
mov
pop
fmuls
loope
dec
pop
pusha
fcoms
sbb
lea
test
dec
sub
cmpsl
loopne
mov
xor
sarl
cmp
xor
mov
or
add
in
fiaddl
test
rolb
jno
add
cmp
mov
sbb
scas
jg
icebp
sub
or
cmp
jne
movzwl
rol
inc
mov
cmpsl
jecxz
sbbb
add
inc
ds
push
jmp
sub
adc
add
sbb
clc
pop
push
je
push
add
fcomps
or
push
adc
fisttps
sbbb
inc
jbe
adc
sysenter
sbb
dec
dec
sub
repnz
pop
xorb
and
jecxz
out
xor
push
pop
mov
sub
sub
mov
push
cmp
mov
cmp
jne
adc
cli
or
js
lds
adc
lods
adc
fmuls
sub
and
jmp
cmp
mov
mov
daa
jmp
add
mov
dec
decl
push
cltd
xor
xchg
add
loopne
movsl
dec
add
iret
or
inc
cmp
rclb
inc
lods
push
subl
mov
mov
inc
inc
sbb
or
and
mov
xchg
pushf
add
pop
add
orb
mov
jo
xchg
dec
dec
stc
fldl
cmp
add
roll
sub
sbb
nop
or
mov
adcl
jbe
push
pop
lock
scas
sub
cltd
int
xor
mov
std
push
test
jno
lods
loopne
dec
fisttpll
outsb
addl
jns
je
or
or
mov
jo
lret
jmp
or
adcb
xchg
mull
jge
or
lea
fsubr
or
lods
adc
cltd
sub
mov
fdivrs
jne
ljmp
push
cmp
adc
lret
divl
fidivrs
sbbl
xor
es
mov
jg
or
push
jo
orb
xor
clc
mov
pop
popa
dec
out
in
ja
sbb
cs
mov
pop
leave
leave
je
aaa
mov
xor
mov
push
pop
scas
add
sub
pop
pop
add
sbb
incl
xchg
ret
scas
inc
fistl
push
or
xchg
fisubrs
adc
add
mov
dec
adc
dec
cwtl
out
jmp
lgs
aaa
mov
sbb
or
jne
add
sbb
aam
jno
mov
sbb
inc
add
inc
xor
mov
adc
jne
mov
mov
inc
add
fdivrl
and
dec
push
and
mov
stos
and
sbb
fstl
mov
fwait
dec
push
lock
ret
pminsw
daa
jle
pop
inc
inc
push
mov
out
lods
mov
pop
inc
fimuls
lods
add
add
fnstcw
or
push
cmp
inc
add
mov
pushl
push
inc
sub
mov
nop
divb
into
sub
ja
inc
nop
bound
orl
fisubrs
add
ret
or
adc
sbb
sub
pop
xchg
lods
mov
out
push
gs
les
arpl
push
pop
add
sbb
sarb
xchg
pop
jl
fmull
mov
or
adc
jge
addr16
mov
inc
subb
or
adc
dec
xchg
test
pop
xchg
sub
rclb
cmp
mov
inc
bound
pop
adcb
jge
mov
pop
sarl
pop
mov
cmp
mov
jns
ret
mov
or
push
jl
add
pop
mov
lcall
cmpsb
test
data16
sub
rclb
mov
mov
push
enter
add
push
and
mov
enter
jl
data16
jge
nop
test
add
js
pop
sbb
xor
insl
push
push
add
xor
dec
cmpsb
jo
nop
pusha
test
jecxz
and
add
add
mov
inc
push
cmp
cmpb
je
cmp
jmp
pop
nop
test
lret
test
lret
jae
dec
add
cmpsl
movsb
push
dec
aam
sub
xor
movsb
arpl
jecxz
int3
mov
dec
mov
jle
mov
insl
sahf
cmpsb
xchg
ret
mov
push
mov
add
cmp
sub
jb
cmp
out
sbbb
adc
push
push
sbb
pop
adc
jnp
aas
rcrl
push
cmp
mov
cmp
fucomi
loope
inc
push
cmp
mov
inc
shrl
loope
lea
xchg
cmp
nop
or
pop
mov
and
psubw
sub
adc
push
cmp
jo
mov
dec
enter
inc
dec
pop
cwtl
mov
sbb
sub
mov
testl
in
aad
shrl
pop
clc
mov
mov
mov
xor
and
push
mov
or
add
mulb
and
in
flds
shlb
jbe
mov
sub
and
test
cmp
dec
cmp
dec
jnp
push
aam
repnz
dec
outsl
or
das
adc
inc
cli
jb
or
rorl
jl
mov
push
jle
hlt
adc
out
and
or
and
mov
or
dec
in
inc
imul
mov
and
jne
or
inc
adc
inc
les
cli
sbb
das
jmp
inc
and
popa
or
ficoml
cmp
in
hlt
pushf
add
inc
xor
add
inc
dec
or
inc
stc
out
icebp
insl
mov
dec
or
ror
mov
mov
xor
jmp
sub
xchg
lret
xlat
call
push
es
mov
adc
inc
add
hlt
push
mov
pushf
pop
mov
xor
pop
sub
je
push
popf
ds
cmp
call
or
data16
pop
divl
inc
sbbl
je
xchg
mov
shlb
loope
js
dec
repnz
add
rorb
adc
push
in
add
cmp
or
or
shll
or
repnz
dec
mov
popa
lahf
notl
mov
xchg
test
and
or
je
xchg
add
or
or
nop
addr16
sbb
not
xor
loope
xor
and
add
and
shr
add
and
pop
shr
and
inc
fsubl
lret
and
inc
cmp
cmp
test
adc
cmp
adc
test
xor
xchg
cmp
out
mov
mov
inc
lret
sbb
push
inc
push
sahf
or
sub
inc
jmp
pop
clc
incb
dec
mov
fucomi
adc
lock
and
mov
sbb
popf
mov
jl
and
jecxz
dec
jae
cltd
jge
add
or
je
jns
test
mov
cli
or
or
ret
push
jge
je
sbb
loope
sarl
dec
add
pusha
mov
pusha
loope
pop
sub
movsl
pusha
xchg
ret
inc
jecxz
pop
inc
ficoml
pusha
cmp
frstor
imul
jnp
push
rcr
add
lret
std
inc
testb
push
es
adc
mov
add
add
test
ret
clc
fisttps
push
jg
mov
adc
or
sub
push
es
mov
or
push
mov
cmp
and
sbbb
xorb
sbb
jmp
push
and
inc
add
adc
pop
xchg
movb
push
fld
add
or
pop
push
adc
mov
mov
adc
inc
sub
std
adc
jbe
in
dec
or
sbb
and
adcb
adc
mov
sti
lret
sub
mov
inc
xchg
sahf
inc
aam
xchg
push
xchg
cmc
mov
fsubs
adc
std
testb
add
sub
sub
and
pop
jbe
xor
jp
push
shrb
jae
mov
dec
repz
inc
test
int3
adc
rcll
div
add
es
sub
mov
jp
clc
lea
fstpl
loop
add
xor
imul
or
or
jbe
push
mov
inc
xchg
inc
movsb
add
lods
shrl
div
icebp
das
pop
cmp
enter
add
fs
movsl
mov
push
jle
enter
shrl
insl
inc
cld
ret
orl
jnp
adc
jp
js
addr16
push
sahf
jmp
pop
movsb
add
pop
and
inc
std
adc
and
pusha
sub
push
and
add
sbbb
mov
add
sbb
js
int
sbb
pop
inc
js
xchg
test
push
jmp
or
pop
pop
pop
out
ds
xchg
les
ss
movzbl
add
fwait
test
jae
mov
test
cmp
je
je
jl
adcb
or
adc
scas
sbbb
push
rorl
push
pusha
add
push
lock
pop
sbb
sbb
pop
push
out
pop
or
jecxz
repz
adc
add
mov
fsubrp
fwait
jno
mov
xlat
inc
and
cmp
dec
negb
or
or
add
pusha
mov
pusha
xchg
pusha
and
int3
or
dec
sbb
or
cmp
mov
fdivl
in
add
imul
add
add
in
xorb
mov
sbb
or
jno
pop
jbe
sub
and
pop
or
popa
sbb
out
dec
or
jb
fnstsw
adc
jns
add
in
rorb
dec
xor
sbb
jecxz
int3
mov
cld
or
and
push
popa
jge
sub
mov
add
loope
or
rcrl
add
lock
or
in
ret
movsl
pop
gs
mov
xchg
mov
inc
xchg
sub
sbb
out
cmp
xchg
push
pop
fadds
into
fsubrs
dec
adc
mov
test
pop
cwtl
sbb
xchg
push
xor
test
cvtpi2ps
or
mov
mov
icebp
sbb
shll
inc
push
das
mov
inc
add
fidivs
push
out
mov
bsf
jne
mov
loopne
push
in
sbb
xor
push
add
addr16
sbb
sub
shr
ror
fsubl
loop
pop
sub
dec
sub
fwait
popa
aad
push
fstsw
mov
loop
add
and
cwtl
add
mov
xor
notb
fldcw
push
push
mov
clc
adc
fldt
lock
fwait
int3
and
fwait
sbb
aam
daa
js
and
jle
call
fsubrl
mov
mov
or
adc
cwtl
pop
shll
push
mov
loopne
inc
xchg
xchg
cmc
ldmxcsr
xchg
loope
adc
pop
jb
mov
sub
aam
dec
adc
ret
repz
sbb
cmp
jbe
out
add
idivb
cmp
dec
std
add
jbe
insl
test
popl
ret
xor
adc
sahf
lods
inc
shlb
shrl
mov
pusha
xchg
pop
and
dec
js
xor
inc
and
mov
jle
das
jbe
rorl
lahf
stc
enter
mov
xchg
sub
xor
dec
adc
add
fsubrl
jo
push
add
push
dec
push
mov
je
mov
push
stos
xchg
mov
mov
psubq
xchg
test
or
mov
fucomi
mov
loop
movups
enter
insl
or
lods
add
push
add
insl
xor
add
mov
xor
dec
adc
dec
inc
dec
call
jle
mov
dec
cmpw
int
push
adc
mov
inc
rol
dec
cmp
cmpsl
int
mov
push
mov
orb
mov
loopne
subb
push
dec
push
or
add
ljmp
out
sub
add
adc
mov
dec
push
add
daa
mov
pop
test
jne
xchg
jno
or
jl
mov
pop
mov
push
stos
stos
test
js
ljmp
push
xor
incb
pusha
mov
cltd
and
add
cmp
das
mov
jns
dec
xchg
loopne
lea
and
subb
inc
shl
mov
adc
test
add
fstpt
aam
loop
rolb
adcl
cli
orl
cltd
insb
pop
and
mov
mov
scas
mov
inc
insb
sub
loop
xor
mov
add
je
fs
test
jb
cmp
pop
xor
cli
sbb
dec
cmp
dec
fcompl
or
jb
incb
jae
pusha
jnp
jmp
adc
jns
push
sbb
pop
mov
and
or
sbb
test
test
push
out
push
add
hlt
ljmp
sti
cmp
dec
dec
stos
inc
and
dec
or
stos
or
sbb
aam
xor
cmp
rorl
hlt
sbb
rorl
mov
lock
and
and
cmc
push
cld
not
in
popf
je
test
fidivl
iret
pop
ds
loop
dec
sbb
or
jne
shl
mov
mov
jl
ret
test
out
mov
or
adc
xchg
lds
int
jmp
loop
mov
add
xor
test
in
loop
add
test
add
mov
aaa
push
pop
lea
dec
add
cli
punpcklwd
bound
push
lds
pop
push
pop
xor
pop
mov
dec
popa
add
jns
inc
andl
xchg
lock
adc
jg
flds
cmp
lock
and
inc
xor
and
dec
add
cmp
rorl
sbb
jl
pop
xchg
push
mov
mov
test
lock
mov
iret
and
mov
js
or
or
loop
lods
cld
sbb
jge
and
rcl
sub
cmovbe
shl
out
pusha
rcrb
add
cli
sub
or
mov
or
fildl
test
adc
pop
in
loop
movsb
fiadds
stc
and
bound
pop
pop
inc
pop
adc
xchg
in
xchg
pop
repnz
adc
in
mov
adc
adcb
or
adc
test
sub
cmp
add
adc
or
sbb
add
and
add
add
adc
sbb
mov
daa
test
out
add
stos
divb
leave
push
adc
shll
add
movsb
mov
pushf
mov
insl
ljmp
cmp
sbb
add
xor
push
in
jne
inc
jmp
mov
sub
cs
pop
inc
clc
or
xchg
add
incl
repnz
cmp
ja
push
dec
jmp
outsb
pop
sub
and
mov
push
cmp
rolb
and
jp
call
adc
mov
test
jp
jmp
ljmp
jmp
sar
data16
jmp
cmpsl
mov
mov
lods
mov
or
testb
das
mov
jle
adc
push
cld
or
xchg
xor
jmp
dec
push
xchg
jno
push
mov
in
jbe
push
lods
adc
pushf
push
cmp
fs
pop
push
jmp
mov
movsb
jno
out
sbb
mov
ret
insb
ss
xchg
dec
sbb
loopne
insl
cmp
pop
jge
pop
outsb
idivl
mov
jbe
nop
add
jne
fisubs
and
dec
jae
imul
sbb
pop
or
and
add
and
lock
adc
call
decb
faddp
out
push
sub
jle
pop
cmp
in
orl
cmp
scas
push
and
addl
std
xorb
jmp
and
jle
xchg
scas
call
mov
shll
test
adc
mov
fsts
pop
cmp
rcrb
sbb
add
inc
testl
mov
hlt
pop
add
bound
call
jmp
cld
push
sbb
pop
fdivrs
cli
and
sub
stc
std
add
rclb
ss
jecxz
add
mov
push
out
pushf
jmp
push
cwtl
pop
mov
xor
add
push
push
push
imul
inc
dec
clc
add
cwtl
jge
mov
pop
movb
adc
xor
sbb
test
cli
sahf
mov
cmp
adc
mov
sbb
ret
push
or
mov
jnp
mov
xor
jne
mov
jo
add
inc
out
dec
test
clc
add
cli
push
jmp
add
mov
sbbl
rorl
push
mov
add
or
mov
pop
call
dec
or
mov
xor
mov
mov
push
xor
and
and
and
adc
adc
shl
shll
adc
sbb
pop
stc
jns
ja
ja
mov
pop
int
push
mov
pop
movb
daa
dec
jl
testl
mul
jbe
jne
or
jne
test
into
jne
subb
and
pop
cmp
xlat
movsl
pop
jnp
xor
hlt
int3
add
jne
shrb
orb
aaa
hlt
rcrl
pop
lea
lea
lea
mov
add
les
scas
sbb
cld
jns
hlt
dec
or
dec
lock
inc
loope
dec
ja
shr
aaa
xchg
push
js
subl
lcall
data16
mov
stc
jg
cmp
lock
aaa
inc
call
js
add
push
gs
lock
hlt
lods
add
or
shr
inc
lock
sub
out
clc
lret
mov
into
or
adc
inc
mov
xor
movsb
les
not
fwait
mov
adc
mov
mov
dec
ss
fcom
insl
fadd
loopne
shr
or
mov
sbb
add
sahf
dec
fwait
aam
shrl
cltd
les
push
nop
dec
icebp
mov
mov
adc
or
adc
add
jge,pt
cmp
mov
pop
add
ficompl
shlb
sbb
aad
jg
fiadds
push
call
bound
mov
and
arpl
cs
orb
popa
push
shl
dec
add
mov
stos
or
sub
test
push
into
jmp
dec
arpl
mov
push
xchg
sarb
scas
sti
inc
dec
and
les
jecxz
cmp
lcall
jne
push
lret
jbe
sbb
das
sub
add
repnz
shl
mov
or
scas
movups
les
bound
inc
rol
sub
sbb
sahf
cmpsl
std
mov
sbb
jo
call
and
imul
xorb
testb
xchg
rclb
xlat
jmp
inc
jne
lahf
push
add
sti
test
pop
jne
cmp
mov
xchg
push
add
scas
inc
insb
mov
mov
add
dec
mov
rorl
test
cmp
in
mov
push
or
push
test
xchg
adc
inc
das
shrb
xchg
or
ss
cmp
je
incl
xor
mov
dec
cmpb
je
mov
jg
mov
cmp
pop
jne
dec
mov
inc
inc
mov
out
add
mov
mov
addr16
add
negl
loope,pn
jae
outsb
arpl
inc
insl
fisttps
les
sbb
pop
adc
or
jbe
lods
dec
xor
xor
shrl
jl
cmc
xor
dec
xchg
rolb
xchg
hlt
test
mov
push
repnz
adc
jbe
and
pusha
xor
xchg
movsl
add
inc
pop
xor
daa
inc
jne
ret
pop
xchg
mov
cli
jne
dec
and
sub
popf
fdivs
or
add
inc
ret
mov
movsb
daa
mov
jmp
dec
setg
sub
out
clc
add
mov
mov
pushl
cmpl
mov
jne
movb
lea
sarb
push
xor
js
cmp
icebp
mov
ficoml
xor
mov
mov
imul
pushf
sbb
loop
lock
sbbb
lcall
jmp
sub
add
mov
mov
test
sub
fcmovnb
xor
mov
mov
cs
mov
adc
jns
les
sub
cmp
ficomps
daa
xchg
xlat
movsb
cld
xor
push
or
add
xchg
aam
sub
add
push
jbe
inc
add
pop
dec
lahf
pop
sub
xor
adc
nop
sub
adc
adc
xor
cmp
xor
aam
imul
sbbb
cwtl
sbb
shlb
ja
adc
jbe
jle
xchg
adc
jge
mov
push
add
lahf
adc
in
cmp
or
data16
mov
push
sbb
or
rclb
fcoml
and
inc
sub
inc
jno
das
or
xor
push
in
ret
mov
xor
sbb
or
popa
imul
jge
adc
sbb
xchg
out
jmp
daa
xchg
fldl2t
call
in
cmp
popa
mov
cmp
xchg
je
adc
pop
add
js
adc
lret
lret
sub
push
out
rorb
inc
xor
fadd
add
jmp
adc
add
enter
xchg
bound
push
jecxz
rcrb
cmp
sbb
pop
push
xor
push
mov
add
add
xor
and
call
into
mov
dec
inc
xor
leave
and
add
mov
jo
xchg
and
mov
je
cmp
lds
rolb
dec
fwait
mov
pop
aas
mov
neg
sbb
jecxz
mov
jg
ret
inc
jo
mov
xor
shll
cmp
vmovlps
add
mov
test
movb
loope
ss
add
mov
and
or
or
adc
adc
mov
ja
sub
lret
cld
push
sub
adc
or
jo
cmp
push
movswl
les
xor
pop
dec
int3
data16
loopne
sahf
inc
mov
ret
mov
insl
cld
add
dec
shrd
push
jle
fs
add
cmp
xor
enter
jl
cmpsl
clc
mov
rcl
mov
or
cmp
xchg
in
imul
add
dec
jmp
xchg
dec
and
sub
test
cmp
or
subl
insb
incb
push
adc
mov
and
add
or
mov
adc
test
jo
inc
out
sarb
and
sub
pop
sbb
js
jg
jb
push
sub
jg
cmp
fidivrl
rorl
enter
xchg
inc
shll
inc
movsb
adc
jns
add
push
and
lock
xlat
inc
add
or
push
jg
lods
lods
cmp
nop
dec
in
jb
dec
inc
dec
pop
or
or
sbb
cmpsb
add
jne
add
shlb
adc
dec
add
or
push
pusha
aad
scas
or
push
popa
cmp
lods
xchg
aam
sbb
jne
loop
mov
jb
pop
jl
dec
push
mov
and
sub
jbe
imul
add
or
add
adc
sub
sarb
mov
cmp
call
daa
xchg
popa
push
mov
add
add
add
loope
ficompl
push
xor
mov
loopne,pt
add
nop
test
stc
cmp
movsb
mov
pop
dec
xor
je
push
shl
jne
loop
xchg
cmp
or
jbe
adc
mov
rolb
add
and
sarl
insl
push
push
xor
jmp
insl
cmp
movb
sub
hlt
outsb
mov
mov
inc
or
mov
mov
shr
loop
pop
ret
mov
jns
inc
pop
scas
jge,pt
fstp
jle
clc
gs
or
pop
data16
push
pop
aaa
lock
out
cmp
jae
je
inc
je
dec
cmp
mov
pop
mov
xor
xor
pop
push
adc
mov
cmp
push
or
or
adc
mov
sbb
add
add
xor
mov
or
fldl
fdivl
fmull
mov
push
pop
clc
fstps
or
fs
push
lods
mov
add
lahf
mov
cmp
bound
xchg
pop
sahf
xchg
sti
add
push
adc
xor
adc
decb
dec
inc
pop
add
inc
push
inc
ja
add
jmp
lds
movsl
je
sbb
cmp
scas
adc
dec
inc
iret
push
xchg
pop
lds
push
xchg
sub
rorb
loop
jmp
adc
xchg
cmp
insb
sub
dec
jo
add
add
cmp
lahf
xor
lea
aad
cld
lahf
dec
push
sub
popa
inc
insl
push
and
repnz
inc
cmpsl
push
sub
popf
ret
adcb
mov
dec
dec
aaa
cltd
pop
cli
shrb
mov
iret
shrb
push
sub
outsb
xchg
add
push
cmp
movsl
mov
fsubrl
mov
push
xor
lahf
sub
mov
pop
inc
mov
push
imulb
adc
insl
sahf
movsl
int3
add
xor
jg
pusha
mov
cmpl
shll
sbb
cmp
mov
dec
push
mov
mov
jle
pop
out
mov
imul
pop
pop
call
cli
rorb
add
xchg
push
lret
or
mov
dec
mov
adc
sub
xor
cld
pusha
mov
jp
adc
cmp
testb
or
or
jecxz
daa
aas
int
lock
sub
pop
add
cmp
xor
test
sbb
mov
dec
add
nop
adc
sub
add
xor
sbb
dec
jae
xchg
sub
push
jmp
or
jmp
cmp
dec
push
testb
sub
xchg
adc
adc
rorb
mov
imull
int
adcb
jae
cmp
jne
test
mov
rcll
xor
xor
enter
add
test
adc
add
xor
sbb
lcall
arpl
in
insl
cmp
and
aad
cmpsl
mov
or
sbb
mov
push
test
aad
lea
jbe
fsubl
push
cld
cwtl
adc
ss
fs
xor
mov
sbb
lahf
add
adc
xchg
push
dec
sub
push
sbb
and
test
mov
add
hlt
fstps
xor
or
rorb
push
cmpsl
icebp
add
dec
movnti
movsl
roll
es
push
jecxz
call
xor
xlat
cmc
add
pop
xor
jge
and
cltd
aam
dec
mov
cmp
push
lcall
paddusw
das
ret
sti
mov
add
call
sub
std
cltd
filds
arpl
incb
sbb
inc
jmp
xchg
addl
add
mov
or
dec
xor
mov
ret
inc
inc
test
js
mov
push
sub
push
jbe
cwtl
fidivrl
push
outsl
or
outsb
lods
dec
push
mov
subps
aaa
mov
test
cld
jo
adc
or
pop
push
ljmp
sub
or
adc
cmp
pop
testl
mov
repnz
adc
js
push
xchg
movsl
mov
cmp
test
xchg
adc
and
jge
inc
pop
mov
lods
sbb
cld
sub
mov
jecxz
mov
cmp
xor
sub
jmp
jl
cli
cwtl
sbb
adc
enter
sysexit
fstpl
js
xor
ljmp
jge
pop
test
adc
cmpsl
inc
add
inc
cli
fisubrs
nop
adc
mov
ret
adc
movsl
or
mov
test
lcall
add
xor
xchg
xchg
or
inc
push
sub
les
insb
sub
xchg
mov
push
jo
ss
leave
pop
loope
push
lock
adc
pop
xor
jmp
pushf
sarl
cmpsl
sub
sti
and
or
or
or
ljmp
loop
sarb
in
adc
cmp
and
loopne
loop
push
add
insl
fnstsw
push
ljmp
inc
or
mov
decl
aas
dec
cmp
lea
or
es
add
or
mov
and
dec
negl
out
push
xchg
fcmovb
jmp
shr
or
mov
add
add
pop
xor
fimull
xlat
bound
scas
push
bound
mov
in
stos
mov
cmp
sub
mov
fildl
sub
and
sub
bound
jne
add
push
adc
fnstcw
inc
xchg
dec
pusha
xor
addr16
les
add
lea
mov
shr
xchg
or
inc
cmp
mov
adc
subb
push
pop
mov
adc
repnz
lock
or
cmp
adc
pop
add
movsb
out
decb
jo
cmp
sub
imul
adc
or
notb
or
shl
addl
push
mov
fs
mov
xor
call
fsubs
clc
stos
imulb
or
sub
push
push
test
test
adc
test
je
dec
call
or
rclb
cmp
or
inc
rcr
add
cmpsb
inc
out
fdivp
sub
mov
mov
and
jne
ret
leave
cmpl
call
xor
sub
jne
imul
call
ss
mov
inc
add
dec
xchg
dec
adc
mov
mov
and
or
dec
xchg
push
ffree
adc
popa
mov
jle
dec
adc
push
ja
and
or
test
mov
cmp
inc
fcomp
popa
cmp
leave
inc
xor
jg
adc
jmp
adc
xor
mov
cmp
push
push
push
inc
xchg
adc
scas
push
xlat
push
push
dec
test
shrl
add
dec
inc
push
push
mov
push
push
jne,pn
je
and
pop
roll
fnstcw
and
adc
push
dec
pop
or
or
shrb
jmp
daa
and
rolb
clc
mov
call
add
stc
and
shl
or
or
push
dec
call
push
fcmovu
sbb
or
mov
je
jns
test
je
mov
xchg
jo
or
cwtl
test
sub
cmpl
fwait
pop
pop
cmp
sahf
jne
outsl
imul
movsl
xor
jge
xor
ljmp
jp
push
popa
hlt
aam
xchg
bound
push
or
jmp
movsb
or
sub
pop
mov
ret
enter
cld
pop
std
jge
inc
inc
div
fdiv
fiaddl
fsubp
fisttpll
inc
ss
test
sahf
sbb
xchg
sbb
xchg
adc
jae
stos
mov
fcoms
inc
and
fsts
nop
dec
sbb
adc
adc
in
sbb
and
sub
pop
fwait
sub
push
jbe
jne
pop
pop
pop
adc
inc
fildl
int3
jae
or
jae
lods
test
ljmp
shr
test
test
xor
stc
outsb
mov
idiv
and
cld
je
jge
mov
divb
or
dec
loopne
ljmp
or
mov
loope
bound
jp
stos
pop
pop
add
mov
adc
and
adc
ljmp
or
push
or
into
jbe
jns
aas
ljmp
sub
pop
ljmp
add
adc
adc
das
bound
cmp
mov
and
add
sbb
mov
aam
or
lea
ds
gs
insl
cmp
mov
or
fiaddl
popf
cs
mov
push
cld
and
cmp
cltd
dec
pushl
dec
fidivs
pop
mov
pop
jg
push
inc
jge
dec
loopne
add
and
arpl
jne
sub
testb
aam
jmp
sbb
push
jg
or
dec
adc
test
sbb
mov
out
es
mov
je
fisttps
and
push
cmp
ja
add
cmp
pop
cmpsb
jns
ret
cmp
jne
sarl
je
xor
adc
mov
movsb
push
ss
cmp
pop
ss
shlb
inc
mov
aam
or
orl
ret
ja
push
mov
or
pop
sbb
fstpl
push
sbb
xchg
ret
jmp
neg
je
test
test
pop
or
cmp
mov
aam
adc
push
pop
popf
or
and
outsl
mov
push
cmp
jne
sub
add
std
and
fisubrs
xor
adc
out
out
stos
out
in
jmp
mov
aam
pop
mov
adc
insl
scas
lods
fwait
or
test
mov
dec
jae
femms
push
pop
mov
xchg
sahf
test
xor
sub
addl
adc
or
add
in
or
cltd
push
jae
fwait
pop
and
orb
rcrb
add
or
jle
mov
pop
jle
dec
mov
jns
out
push
rcl
rcl
aad
jns
out
xlat
fcomp
inc
adc
fstpt
mov
std
nop
data16
movb
jmp
or
cmpsl
mov
push
into
pop
adc
mov
jne
cmp
test
shlb
or
add
mov
mov
add
push
inc
inc
loope
bound
fistpl
aas
popa
mov
mov
push
add
push
divb
push
adc
pusha
call
loope
icebp
adc
cmp
das
or
pop
xor
push
push
adc
bound
push
mov
or
add
push
movsb
jno
adc
das
fs
imul
or
jmp
lea
imul
lea
sar
inc
or
sbb
movswl
data16
neg
lfs
out
loop
push
jmp
mov
pushf
or
adc
sub
add
adc
mov
or
sti
add
and
sub
jp
mov
add
jb
inc
dec
adc
dec
mov
cmpsb
and
inc
add
hlt
xor
xchg
add
imul
and
lea
pop
sbb
subl
movsb
mov
xchg
ja
xor
jnp
add
lea
leave
mov
add
pmulhuw
ljmp
loopne
inc
or
and
push
xchg
ljmp
and
mov
pop
repz
test
rolb
push
mov
lods
out
push
sbb
lea
dec
xchg
pop
sbbl
or
cwtl
add
test
dec
push
rcrb
add
movsb
sub
cmp
push
mov
sub
movsb
sub
div
push
addl
mov
jge
jl
mov
inc
mov
rol
call
outsb
mov
cmp
ret
outsl
jne
aaa
mov
enter
add
xchg
loopne
cmp
sub
hlt
rorb
push
push
push
lret
pop
or
hlt
mov
aam
je
sub
inc
lods
ss
shrl
cmpl
bound
ficoms
jmp
dec
addr16
lret
inc
lods
lock
push
mov
testb
nop
idiv
cli
inc
cli
notb
mov
push
lcall
movsb
add
ljmp
adc
push
jnp
insl
gs
sbb
adc
cmp
lret
test
rolb
dec
push
clc
dec
xchg
xchg
or
mov
leave
inc
fnstenv
jecxz
and
lcall
iret
dec
rolb
scas
sbb
lock
mov
add
not
fidivl
or
pushw
sub
sbb
clc
out
jge
bound
push
xchg
mulb
adc
arpl
adc
sbb
xor
mov
jge
into
or
jne
andb
ss
inc
arpl
fldl
aam
adc
dec
cwtl
mov
pop
dec
mov
adc
or
call
out
xor
push
cmp
cld
lea
fisubl
mov
bound
pop
insl
dec
inc
sub
lods
rolb
cmp
daa
loop
add
scas
xor
sbb
movb
and
sbb
sbb
orl
push
in
sub
or
jge
or
cwtl
mov
lock
jmp
add
nop
lret
jne
sbb
in
jp
cmp
inc
mov
into
mov
adc
je
cwtl
cmp
sub
push
and
mov
inc
add
inc
mov
mov
xor
push
add
push
nop
cmp
cmp
xchg
dec
push
daa
or
sbb
adc
sub
popa
add
mov
test
shr
pop
add
or
jp
test
push
shll
test
jne
sbb
neg
and
pop
jle
inc
imul
nop
call
loopne
addr16
xchg
fadds
lea
push
jnp
test
and
divb
mov
les
into
pusha
loopne
push
sti
and
test
ds
repnz
mov
push
lret
add
sub
into
les
add
or
and
xchg
inc
sbb
jbe
xabort
and
insl
movsl
mov
aam
mov
cmp
push
shlb
add
str
negl
sahf
add
pop
xorb
sbb
testb
mov
or
mov
inc
xchg
imul
dec
scas
cli
sar
nop
dec
mov
dec
cmp
jge
sub
cmpb
or
add
jbe
dec
cmp
add
dec
lret
dec
add
add
fadds
pop
jb
pop
add
repnz
or
jp
jne
dec
mov
jb
pop
and
int
pushf
adc
movsl
inc
ret
and
add
push
add
inc
jbe
ret
adc
or
or
dec
push
imul
ret
lcall
add
push
mov
ret
and
je
ljmp
adc
cltd
mov
jmp
mov
out
je
push
add
or
stos
xor
dec
adc
push
add
pop
pop
mov
xor
xor
les
shlb
add
pusha
cmovae
test
mov
mov
iret
xor
mov
pusha
inc
pop
cmp
rcrl
inc
das
cmpb
pop
shll
or
mov
sbb
imul
inc
push
pop
jae
lcall
add
add
fsubl
push
or
add
jl
or
sub
push
je
dec
pop
jne
sbb
adc
xlat
dec
pop
andl
mov
xor
and
enter
or
jp
vmptrst
icebp
add
or
dec
cmp
pop
mov
xor
cld
cld
inc
es
nop
xorb
or
add
stos
jg
add
testl
add
ljmp
rclb
scas
pop
mov
jo
xchg
cmp
test
lcall
or
adc
pop
addr16
add
cmp
mov
mov
daa
iret
xor
sbb
inc
jg
into
into
push
cmp
pop
and
pop
sub
push
pop
sbb
pop
mov
cmpb
rolb
lods
dec
pop
add
xor
mov
enter
ret
pop
lcall
pop
mov
shl
adc
inc
sahf
xchg
addr16
add
add
lds
add
test
and
imul
scas
push
sub
orb
sub
jmp
jmp
lret
ret
cwtl
ret
lods
xor
xchg
and
sbb
push
scas
sbb
flds
push
sbb
loope
loopne
shll
nop
mov
pop
test
lret
mov
ljmp
cmp
push
or
dec
and
cmp
jmp
jle
xchg
andb
ret
ficomps
inc
xor
sbb
push
add
push
daa
or
and
inc
mov
jge
bound
xor
ljmp
xor
addr16
icebp
adc
push
mov
inc
push
nop
dec
sbb
jbe
adc
xlat
mov
xchg
addb
orb
jmp
adc
fs
cli
jb
mov
sub
ds
je
jmp
push
aam
call
lahf
mov
push
cmp
jbe
inc
inc
int3
call
mov
pop
sbb
jo
and
sbb
lds
push
fdivrs
or
xchg
test
sarb
jmp
or
xlat
push
or
clc
push
inc
call
add
sbb
test
inc
jns
dec
mov
mov
add
xchg
ret
add
mov
pop
cmpsl
mov
add
pop
inc
push
mov
jnp
pusha
test
xchg
mov
sbb
push
pusha
cmpb
pushl
xchg
fbld
push
pop
insl
mov
push
xor
mov
out
je
and
push
inc
pop
popf
push
fcoms
je
lret
pop
mov
lret
cmpl
push
mov
push
shl
push
test
cli
shlb
jo
dec
xchg
test
push
hlt
inc
or
int3
out
dec
pusha
xchg
dec
inc
sbb
je
stos
dec
clc
lcall
adc
hlt
add
xchg
pop
jge
lea
jae
lret
inc
push
imul
push
imul
rorb
enter
int
jl
and
xor
adc
lods
push
inc
and
arpl
dec
add
mov
push
add
bound
aas
pop
aas
inc
arpl
sub
or
add
lds
jmp
push
push
xlat
mov
inc
sub
inc
lock
mov
rcrb
mov
add
loopne
adc
pop
jmp
xor
push
dec
xor
mov
inc
pop
stos
mov
inc
push
mov
mov
inc
das
lods
mov
jo
movsb
nop
push
out
dec
jmp
xchg
push
enter
pop
inc
add
sub
inc
mov
fmull
or
call
cs
mov
test
xchg
mov
jle
arpl
mov
clc
mov
test
jo
cli
mov
cmp
mov
sbb
dec
fiaddl
imul
push
clc
and
or
and
in
or
sbb
data16
sahf
xor
adc
sub
inc
cmp
test
pop
jl
cmpsb
mov
lea
test
int3
jns
cld
mov
adc
gs
pop
fisttpl
dec
mov
sti
shrb
mov
outsb
scas
loopne
jmp
dec
adc
loop
xchg
xlat
sbb
jp
lea
ss
push
push
sub
js
adc
adc
jl
call
cld
sbb
cmp
inc
test
and
inc
movsb
jge
push
sar
fcompl
mov
sbb
shll
sbb
sub
add
les
pop
xchg
sbb
imul
jb
loope
mov
fwait
sub
xor
adc
ret
rcl
out
inc
hlt
sbbb
xor
subl
int
adc
add
add
push
mov
lods
pop
testb
fisubs
and
inc
inc
ds
push
inc
and
or
add
sbb
xchg
cwtl
or
clc
cs
cmp
inc
pusha
push
dec
divb
add
cltd
and
or
loope
jp
pop
addb
jo
int
and
or
cmp
out
push
daa
data16
test
adc
loopne
adc
adc
sbb
addb
ljmp
push
adc
xchg
ret
lea
pop
or
jne
mov
cld
add
and
pop
and
dec
loop
loope
and
es
pop
dec
sub
mov
cvttsd2si
test
aad
and
aaa
xchg
dec
or
adc
rcll
fldcw
adc
fists
fildll
sbb
fsubrp
test
jns
fstps
icebp
adc
push
jno
or
add
jmp
cmp
pop
mov
adc
test
adc
pop
sbb
push
or
pop
push
jge
sub
pop
cwtl
loope
push
add
stos
scas
movsb
jno
or
cmp
dec
in
xchg
test
adc
mov
adc
push
gs
push
mov
add
sbb
fadd
fcoml
in
mov
imul
in
mov
ds
loopne
mov
data16
lods
mov
nop
jb
aad
rcll
cmp
mov
xor
leave
xor
fmuls
and
add
imul
lock
in
adc
xor
mov
pop
inc
or
adc
inc
mov
sub
and
mov
and
and
xor
push
cmp
ret
dec
add
repz
push
jb
add
adc
and
adc
cmpsb
test
cmp
push
fdivrl
stc
enter
adc
mov
clc
xor
repnz
jmp
jo
dec
inc
jne
dec
in
std
pop
insb
mov
mov
test
enter
xor
fsubl
add
ficoml
mov
shll
jns
fldt
sub
mov
add
sarb
dec
pop
call
or
bound
mov
sbb
mov
clc
dec
inc
mov
call
aam
js
adc
xchg
sbb
test
aam
xchg
in
dec
push
aad
xor
jg
in
ss
in
movups
mov
cmpsl
mov
fadds
cmpsb
jo
in
lret
and
sub
cld
push
sbb
mov
add
imul
pop
leave
lock
push
rcrl
add
or
push
xor
and
lock
andl
addr16
lea
xchg
jecxz
orl
fcmove
aas
or
dec
scas
inc
cmp
add
inc
xor
inc
and
andb
arpl
enter
rorl
lock
hlt
cmpsl
or
call
jns
or
sarb
pop
sub
pop
cli
fadd
leave
mov
jecxz
jne
cltd
aam
jb
mov
mov
call
and
test
inc
shrb
mov
push
dec
xor
and
adc
xchg
fldl2e
lcall
xor
es
fs
cmp
inc
dec
fs
dec
fs
iret
insb
loope
add
movsb
ret
add
pusha
add
pop
sbbl
in
push
int3
rcr
add
sbb
xchg
pusha
test
cmpl
aad
xchg
push
sub
in
in
fwait
nop
scas
and
adc
xchg
or
mov
in
mov
adc
xchg
and
mov
sub
adc
adc
inc
adc
inc
xchg
xchg
dec
xorl
cmp
and
aaa
subb
ret
push
adcl
cmpsb
dec
in
mov
adc
mov
mov
xorb
dec
push
cmp
aaa
int3
aad
or
inc
rcrb
out
adcb
sub
cwtl
rolb
sbb
bound
or
jb
in
mov
mov
or
in
xchg
insb
or
lock
or
adc
in
cmp
jo
push
inc
insl
adc
xchg
mov
jo
out
lock
mov
daa
rorb
jg
gs
loopne
mov
test
and
xchg
push
fs
fidivl
xchg
and
cli
cwtl
mov
lock
das
xadd
mov
out
popf
call
int3
out
sub
dec
lcall
in
cmc
xor
mov
mov
and
clc
out
mov
push
jnp
sbb
mov
aas
mov
adc
push
cwtl
cmp
fcom
insl
mov
mov
mov
cmpsl
or
dec
lea
mov
adc
leave
leave
in
call
mov
leave
leave
leave
mov
mov
leave
enter
stos
push
aad
adc
adc
jns,pn
movsb
sbb
add
or
cwtl
push
cwtl
xor
bound
popl
nop
or
push
mov
push
xor
cmp
int
test
inc
sbbb
mov
in
jge
push
in
bound
daa
fmull
or
jno
dec
insl
das
mov
nop
jb
push
mov
xchg
push
mov
pop
imul
add
dec
repnz
dec
cmp
cmpsb
int3
das
mov
aas
inc
adc
sbb
mov
das
outsl
fmuls
jns
dec
dec
mov
xchg
xchg
push
sbb
dec
push
and
aam
fadds
loopne
push
sub
mov
in
push
pop
add
inc
xchg
insl
inc
insb
dec
cld
movsl
and
mov
movb
dec
aad
pop
test
test
xor
xchg
mov
add
adc
rolb
sbb
mov
adc
fwait
in
pusha
cltd
fs
cltd
lahf
outsb
dec
fwait
in
js
jl
jne
add
addb
mov
xchg
sbb
mov
mov
push
das
dec
cmp
test
in
push
xchg
jp
inc
inc
dec
test
jnp
imul
pop
popa
dec
sarb
push
adc
call
xor
xchg
insl
mov
mov
call
pop
and
mov
jnp
xchg
and
lea
add
xchg
jg
dec
stos
shlb
movsb
add
inc
push
xchg
push
sbb
bound
jbe
mov
dec
or
int3
inc
stos
add
aad
cwtl
std
rorb
and
jns
faddl
lcall
adc
movsl
mov
fs
xchg
mov
sub
stc
jge
popa
push
mov
or
in
inc
or
or
nop
inc
push
or
or
xor
inc
in
aaa
call
mov
pushf
xor
cmp
or
xchg
test
add
sub
pusha
jb
xlat
jo
adc
cwtl
or
inc
ret
test
adc
fwait
pop
bound
dec
xor
sub
inc
jbe
and
dec
mov
mov
stos
in
orb
xor
cld
mov
clc
add
addl
mov
movsb
adc
jae
nop
decb
xchg
test
and
das
add
pop
jnp
test
pop
aam
shlb
push
fcomps
jns
adc
and
mov
inc
inc
or
or
xchg
adc
adc
loopne
xor
jne
jnp
faddl
fcompl
add
sahf
jno
scas
sbb
mov
lahf
sahf
mov
jnp
xchg
inc
add
cmpsb
dec
stos
inc
in
pop
enter
dec
add
cmp
sarb
cmp
mov
cmp
cmp
cmpsb
bound
dec
outsl
or
shrb
adc
xchg
mov
test
inc
xor
add
pushf
mov
inc
xor
sub
rorb
and
mov
mov
scas
xchg
test
imul
nop
pop
push
sub
dec
mov
jnp
fmull
lods
lods
adc
add
or
add
fmull
and
push
inc
daa
sbb
mov
sub
in
lock
and
push
inc
mov
xorb
lahf
jp
jnp
loopne
or
xor
mov
aaa
pop
xor
add
xchg
jno
in
push
sti
inc
adc
inc
imul
pusha
add
sbb
cwtl
in
xchg
cs
inc
inc
je
movsb
sub
roll
outsb
adc
les
rorb
dec
and
popa
dec
mov
rorb
inc
out
cs
lea
cs
jb
rcr
inc
pop
sbb
loopne
sub
sarl
adc
xchg
and
or
ret
cmpsb
mov
mov
and
lret
inc
dec
sbb
sbb
movsb
sub
enter
sub
sahf
mov
dec
adc
test
pop
xchg
negb
inc
aam
repnz
pop
mov
pop
pop
mov
inc
ror
lods
arpl
aam
push
mov
rorb
mov
dec
sbb
adc
rorb
fcoms
cmp
push
xor
sarb
test
lds
dec
mov
jg
add
dec
xor
imul
push
xlat
jo
adc
fwait
in
mov
test
push
rolb
sub
xchg
jnp
push
cmp
stos
fildll
in
sbb
add
dec
pop
stos
lea
shrl
pop
mov
ret
push
mov
out
sbb
or
inc
pop
rclb
pop
ret
aam
leave
inc
mov
jno
push
test
add
out
xor
insl
push
lds
shrl
addl
aaa
jne
movsb
lret
xor
lea
fsub
ret
sub
pop
dec
out
shrb
dec
call
and
aad
test
lods
mov
and
je
sub
sub
test
rcrb
das
mov
sbb
or
mov
jne
test
add
sbb
xor
adc
imul
or
push
adc
scas
inc
mov
inc
jo
inc
mov
inc
popa
xorl
or
and
adc
mov
outsl
cwtl
in
add
xchg
test
sbb
push
fstps
leave
and
ret
add
mov
in
push
xor
push
test
in
mov
adc
xchg
inc
jne
add
push
aad
jge
lods
cmpb
xor
inc
mov
mov
and
data16
and
mov
push
dec
push
mov
test
mov
mov
push
pop
shlb
sub
movl
mov
shrl
push
leave
out
mov
pop
lahf
loopne
dec
fisubs
mov
inc
mov
enter
xchg
loope
sbb
or
xor
add
push
dec
shlb
mov
bound
pop
fmuls
push
mov
adc
leave
mov
or
push
shlb
andl
repz
fs
sbb
xchg
pushf
or
inc
in
pusha
out
xchg
lock
mov
loopne
int3
inc
out
cwtl
or
lods
data16
xchg
push
mov
shrl
push
inc
bound
adc
mov
or
js
xor
adc
jne
pop
mov
xor
and
pushf
enter
inc
or
jne
fiaddl
fsub
xchg
or
jle
dec
fsubrl
popa
mov
int
mov
mov
lods
lods
insl
in
mov
bswap
les
inc
dec
fwait
shl
lock
mov
ret
shll
cmp
frstor
push
push
and
add
sub
mov
mov
loope
cmp
mov
inc
dec
ret
dec
lods
push
jae
sub
dec
dec
sbb
pop
pmulhuw
imul
loopne
and
add
stos
add
cmp
push
add
or
leave
in
test
lds
inc
enter
add
cmp
les
dec
addr16
cmc
shll
mov
mov
pop
jb
pop
pop
inc
pop
jb
adc
in
push
and
or
add
pop
movsb
cmp
xor
add
enter
lock
dec
sbb
sub
lahf
dec
jae
mov
and
filds
repnz
mov
sbb
cltd
add
xor
pmullw
and
add
sub
jb
adc
std
add
sbb
inc
je
sub
loopne
dec
gs
mov
push
push
jbe
cmp
xor
fs
sub
or
js
mov
popa
in
les
lock
pop
mov
repz
xchg
pop
jb
or
xchg
mov
add
xchg
pop
push
xor
test
cwtl
in
movsb
pop
jno
jae
aad
xchg
addr16
add
and
add
nop
xor
cmp
sbb
pop
shll
lock
or
xchg
adc
and
call
jmp
mov
adcl
push
test
pop
scas
xor
and
pop
je
test
or
xchg
push
xchg
jne
mov
fwait
stos
jo
outsb
push
dec
push
xlat
js
mov
push
addb
inc
pop
fs
and
cltd
in
mov
dec
dec
push
mov
stos
test
enter
incb
ret
shrb
aas
adc
les
push
pop
loopne
sub
aaa
popa
loope
adcb
repz
sub
cltd
les
in
clc
xchg
sub
inc
xor
and
sub
adc
lahf
push
sbb
movsl
jae
adc
sbb
mov
rorl
insl
pusha
inc
cmp
and
sub
cmp
inc
xchg
sbb
sbb
push
in
or
add
xor
enter
add
add
xor
xchg
or
adc
test
out
and
insb
enter
jae
add
nop
inc
mov
push
in
jge
add
adc
mov
and
nop
cmp
std
nop
and
nop
add
or
daa
aam
mov
adc
jbe
gs
shlb
cmp
and
pusha
dec
xchg
inc
pop
enter
mov
in
sbb
add
mov
xchg
in
adc
invd
xlat
add
dec
xor
enter
enter
and
adc
push
or
int3
dec
adc
bound
stos
inc
stos
scas
cltd
fs
add
mov
les
add
dec
mov
leave
jno
mov
mov
roll
test
mov
call
sub
sbb
lds
mov
add
jmp
inc
or
pop
pop
push
jns
and
push
xchg
mov
mov
sub
rcll
mov
sub
jo
pop
adc
loopne
adc
xor
jno
mov
loopne
pusha
into
stos
nop
and
push
imul
clc
call
sbb
sub
push
sbb
xor
mov
inc
jb
jno
shlb
cs
and
pand
add
inc
les
xor
in
in
xchg
dec
push
cmp
or
shll
cltd
fs
enter
and
and
paddb
fidivl
insl
or
and
scas
inc
addr16
scas
add
fiaddl
fsub
adc
adc
fdivr
sub
push
xor
add
xor
mov
icebp
jb
imul
xor
adc
shlb
add
psubusb
push
mov
cmp
jl
mov
jbe
fcmove
scas
cmp
int
adc
cmp
rorb
xor
add
add
cltd
fs
imul
fs
dec
es
mov
enter
outsl
or
xchg
dec
mov
leave
je
lods
rol
add
inc
pop
enter
roll
loopne
mov
aad
ret
push
aad
or
out
add
jo
and
je
push
movsb
mov
mov
je
jo
inc
push
fcoms
cmpl
xor
cltd
insb
adc
subb
push
inc
icebp
pop
and
das
nop
pop
and
mov
xor
pop
mov
jbe
or
pop
nop
lds
push
fwait
lock
adc
clc
movsl
xor
push
dec
xchg
xlat
fcmovnb
mov
cmp
lods
cmp
mov
rcrb
jge
je
push
add
inc
es
mov
or
lock
dec
fadds
mov
lods
stos
std
out
movsb
add
test
movsl
mov
and
sarb
les
jmp
int3
add
add
rolb
enter
add
fcomps
test
enter
jae
aam
nop
or
push
push
fcomps
push
test
add
lea
bts
adc
dec
dec
out
dec
loop
mov
sbb
repnz
cltd
mov
iret
test
add
and
and
cmpsl
and
sbb
inc
add
sbb
and
les
pushf
fisubrs
inc
mov
fcom
cmp
lock
xchg
cmp
jns
xchg
xlat
inc
lds
inc
shll
cld
pop
insl
push
dec
mov
inc
adc
xchg
pop
mov
xchg
clc
pop
sbb
add
sub
in
add
ja
scas
mov
jno
adc
test
mov
stc
int3
mov
das
xchg
or
in
clc
fisttpll
ss
movsl
jne
xor
test
outsb
mov
stc
int3
sar
sub
ret
mov
movsb
xchg
add
cwtl
and
imul
enter
sti
test
fistps
and
rorb
dec
adc
mov
lcall
orb
jo
mov
push
sbb
pop
pop
adc
mov
sbb
pop
pusha
dec
pusha
xlat
cltd
subb
sbbb
fs
imul
nop
imul
or
jl
inc
jb
dec
inc
fdivrl
add
inc
fmull
loope
sbb
jo
or
ret
cmp
loop
fnstcw
sbb
mov
xor
jb
adc
mov
cld
outsb
cld
push
push
test
add
push
cmp
mov
push
add
cmp
leave
and
jp
xchg
aam
mov
mov
push
add
jl
loopne
add
mov
loopne
scas
gs
mov
pusha
or
test
cmc
push
pop
repnz
sbb
or
xor
sub
mov
or
ficoml
push
xchg
pop
or
out
jmp
or
loop
stos
leave
fmull
xor
and
lods
or
pop
lret
cmp
cmp
jae
and
mov
repz
lea
call
into
call
ja
lcall
lods
out
adc
jnp
outsl
add
cmp
sti
pop
sti
flds
fiaddl
cmp
sahf
cmpsl
stc
sbb
sub
add
lds
jns
test
mov
ret
cltd
and
je
push
mov
addr16
out
inc
push
mov
inc
sbbb
push
inc
xor
pushl
cmp
dec
mov
fistpl
or
jnp
mov
add
mov
add
and
jnp
leave
or
adc
out
leave
ljmp
cmpb
sahf
xlat
add
mov
inc
push
inc
cmp
sahf
out
cmp
sbb
incl
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
dec
inc
lds
sbb
lcall
pop
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
xor
out
cmp
xor
ss
cmp
sub
daa
adc
mov
rcll
xchg
adc
in
cld
clc
push
or
cmp
rclb
cmpl
int
jns
push
xchg
fmuls
repz
pop
push
dec
outsb
je
mov
insb
outsl
arpl
fs
out
sbb
push
dec
imul
shll
jae
cmp
jb
gs
xor
std
repz
loope
fs
adc
popa
and
popa
je
outsl
outsb
fsubs
push
mov
paddsb
pop
jbe
add
incl
sub
xor
or
push
inc
outsl
jb
js
out
outsl
fucomi
je
jb
gs
cmp
or
outsl
add
add
pop
lock
add
add
je
push
je
fidivl
jne
jb
mov
outsb
push
xor
xor
aas
out
decb
insl
insl
cmp
dec
and
mov
adc
add
das
das
adc
push
dec
popf
popa
shll
insl
bound
daa
dec
in
sar
outsl
jbe
dec
arpl
push
jo
sub
ficomps
jne
dec
jne
xchg
xchg
jg
xchg
insb
dec
popa
jb
push
shll
inc
insb
adc
out
scas
cmpsl
xchg
popl
fdivrl
jg
addr16
push
xor
ja
jb
xor
mulb
pop
jae
push
scas
clc
sbb
into
mov
bound
and
jbe
jae
pop
dec
inc
ds
popa
das
jo
inc
inc
imul
pop
fists
in
xchg
mov
xchg
mov
pop
nop
aad
add
sbb
es
inc
mov
mov
xchg
and
sub
sub
cs
sub
cmp
mov
mov
cmp
dec
jg
jl
jle
add
arpl
test
bound
jo
cs
and
push
pop
or
mov
dec
xor
mov
insb
jae
cs
cmpsl
dec
mov
pop
inc
inc
mov
int
add
xor
insl
and
in
pop
fwait
add
jbe
dec
push
push
sbb
fucomp
dec
dec
inc
sbb
and
stos
ss
sub
add
inc
outsb
push
jo
cmpsb
aas
aad
imul
insl
pop
mov
cs
mov
and
mov
mov
and
fs
push
and
scas
mov
mov
insb
xorb
inc
popa
and
data16
jne
pop
xor
ja
loopne
and
insl
push
xchg
sbb
aas
xor
rcll
dec
rolb
dec
int
insl
les
out
mov
push
dec
mov
and
or
push
sbb
jp
push
pop
addr16
sbb
and
push
testb
mov
je
and
addb
int
or
jb
loopne
outsl
shl
mov
mov
aaa
test
addb
das
add
inc
lock
cmp
arpl
shll
mov
jge
fiadds
inc
xchg
insb
imul
out
xor
int3
or
push
pop
xchg
lock
inc
push
xor
gs
push
fistps
push
push
jbe
lock
xor
push
es
dec
out
nop
or
sub
mov
ja
outsl
stc
or
je
hlt
pusha
in
xor
imul
jne
inc
xchg
push
xorl
push
gs
loopne
ljmp
xor
js
cmp
inc
jle
xor
push
or
arpl
push
rcrl
jo
bound
mov
inc
aaa
insl
ret
or
in
ljmp
xor
mov
popa
pop
or
jae
inc
jno
rclb
leave
sbb
insl
imul
cmp
mov
stos
sbb
pop
fmuls
jns
xor
and
test
and
pop
push
cmp
push
pusha
sub
push
jae
xor
push
addr16
push
pusha
jo
sbbb
out
sub
pushf
jo
jb
push
ret
movzbl
push
imul
dec
lods
jge
add
dec
or
jo
and
outsb
in
push
mov
inc
imul
or
lds
and
dec
cmp
ss
fisttpll
pop
loopne
in
test
xchg
add
shl
ret
ds
lret
jno
icebp
pusha
inc
mov
decl
pop
outsb
movsl
add
xorl
jae
jae
push
loop
imul
add
cmpsb
gs
popa
inc
test
out
add
xor
jg
insl
stc
frstor
inc
jae
je
pop
dec
rorl
js
add
xchg
jb
sbb
xor
mov
push
add
adc
add
add
add
icebp
lcall
add
and
push
pop
pop
or
aaa
mov
push
push
pop
hlt
and
or
pusha
add
popf
cltd
divl
pop
sub
add
fidivrs
addb
add
xchg
imul
ret
add
orb
dec
daa
push
cmpb
push
and
sub
mov
jnp
jb
int3
push
jo
add
adc
pusha
mov
out
xlat
push
xor
dec
stos
int3
js
jo
lcall
or
sbb
cmp
lea
mov
nop
xchg
xchg
mov
loopne
es
inc
pop
dec
sub
sub
dec
jo
adc
pop
add
or
pushf
adc
or
pushf
jo
dec
pop
daa
pushf
jo
data16
nop
or
cmpsb
pop
arpl
cs
mov
mov
scas
inc
es
and
sub
xchg
scas
xchg
and
adc
and
adc
add
and
and
add
rcl
add
add
xor
loopne
add
add
mov
push
add
aaa
inc
sbb
push
add
pop
mov
add
shr
and
aas
sub
addb
mov
nop
xchg
xchg
call
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
pushl
mov
mov
ret
enter
int3
int
iret
rcl
sar
call
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
inc
cli
push
hlt
cmc
div
clc
stc
cli
sti
cld
std
inc
adc
movsb
add
incl
inc
adc
mov
jmp
fists
pop
int3
ficompl
movsb
inc
cs
jae
sbb
bound
dec
stos
inc
inc
popf
ss
popa
mov
repnz
outsl
mov
jne
daa
pop
lea
dec
mov
outsl
jmp
outsl
js
push
push
inc
push
mov
dec
sbb
sahf
insb
gs
aam
outsl
popf
mov
dec
mov
daa
add
insb
fcmovne
mov
in
dec
imul
mov
into
push
push
imul
inc
jb
rclb
fildl
daa
daa
pop
enter
inc
and
mov
pop
push
cmp
test
arpl
push
or
cmp
outsb
mov
push
mov
test
push
jbe
pop
pop
pusha
inc
jbe
push
jo
push
jnp
lahf
fs
push
mov
or
mov
clc
popl
and
jle
cmp
push
sub
and
andl
dec
lahf
and
stos
mov
outsb
xchg
jae
pop
in
push
jp
aas
cmp
lods
and
insb
call
push
push
mov
outsb
gs
mov
mov
pusha
movsl
xchg
mov
push
push
push
push
dec
testl
xor
mov
divb
cmp
bound
pop
or
jg
movsb
loope
mov
imul
bound
mov
fs
push
sbb
xor
jg
popa
jl
pusha
lds
lds
jns
pusha
push
or
jne
inc
pop
das
je
outsl
data16
cmc
fadds
daa
jg
negb
pop
pop
cmp
cmp
add
ds
sub
imul
es
jle
sub
sub
shll
ds
sub
sub
push
cs
cmp
jmp
cmp
jb
ja
inc
dec
pop
pop
cwtl
xor
sbb
push
jb
imul
jo
ss
lret
test
sbb
int3
or
and
es
jo
test
mov
jl
push
add
cmp
push
hlt
push
sahf
out
sahf
call
mov
jns
cwtl
dec
add
sti
out
cmp
mov
nop
mov
xchg
jns
divl
jl
je
jge
out
fs
adc
push
pop
xchg
negb
dec
data16
notb
jl
ja
push
fsubrl
inc
push
call
out
dec
inc
inc
ds
xor
xor
out
sahf
out
sahf
sub
sbb
adc
mov
push
push
add
decl
out
sahf
int3
shrb
jnp
inc
or
incb
test
out
sahf
mov
xor
sub
repz
hlt
std
in
loopne
repz
repz
insb
inc
sbb
jns
out
cld
aam
mov
ljmp
aam
pop
pushf
mov
lcallw
jo
push
dec
jns
push
xor
aad
ljmp
jge
js
outsl
pop
cmpsb
bound
fs
sub
jno
je
test
push
lahf
push
lods
pcmpgtw
xor
add
jle
movsl
ret
push
insb
cmp
inc
inc
dec
jae
xchg
fxch
push
insb
inc
mov
sbb
push
inc
dec
xor
inc
dec
dec
dec
push
push
loop
inc
xor
push
dec
inc
dec
add
dec
dec
inc
add
inc
clc
ljmp
adc
sub
adc
incl
popa
movsb
std
outsl
dec
mov
mov
adc
outsb
mov
ds
iret
aas
cwtl
arpl
pop
clc
lret
sbb
jb
jmp
xchg
jge
arpl
cmp
adc
dec
scas
jp
cld
insl
pushl
in
fstl
mov
and
pop
jns
xchg
cmp
dec
imul
lret
add
inc
mov
dec
mov
popf
mov
sub
fwait
ss
sbb
pop
dec
sti
add
ds
xor
incb
int3
dec
dec
xor
dec
popf
lock
decl
out
dec
pushf
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
incl
and
xchg
lret
sahf
icebp
mov
cld
or
loopne
cmp
mov
cld
incl
mov
out
fcoml
cmpsl
xor
ds
dec
xchg
scas
or
test
mov
iret
adc
into
mov
pop
and
es
mov
inc
inc
roll
flds
sbb
add
mov
push
dec
push
push
inc
inc
rolb
outsb
jbe
and
and
cmp
jo
inc
sbb
ficoms
insl
cmpsb
imul
and
aas
iret
repz
dec
push
sub
mov
cmp
daa
jg
pushl
ds
adc
push
push
xor
push
pop
pop
push
daa
sbb
xor
fcomi
sti
inc
ds
sub
pop
pop
sbb
or
inc
and
adc
fistpl
dec
or
inc
jno
jb
jbe
inc
sub
fidivrl
xor
inc
sbb
pop
or
neg
in
sbb
pop
sub
adc
sub
xor
insl
out
inc
sbb
sbb
sub
adc
add
and
lods
pop
and
in
fists
sub
push
das
sub
adc
pop
mov
lods
pop
mulb
cld
pop
sub
sbb
push
cmp
sub
pop
and
sti
jnp
push
pop
xor
add
push
dec
sbb
jnp
mov
and
cmp
cmp
or
dec
or
cmp
xor
sub
sub
mov
sub
cmp
sub
push
jge
inc
inc
mov
or
inc
push
sbb
out
or
xor
cld
dec
das
sub
inc
xor
xchg
adc
dec
lea
or
sbb
pop
pop
xor
add
xchg
ja
push
inc
and
or
sbb
insb
jns
mov
inc
adc
das
sbb
andl
inc
push
push
cmp
btrl
dec
pop
pop
adc
sub
sub
movsl
lods
mov
jle
xor
push
and
into
or
sub
push
imul
out
push
push
mov
jb
scas
mov
add
ja
icebp
push
gs
out
and
sbb
sub
sbb
sbb
and
pop
and
mov
inc
push
adc
dec
and
roll
sub
inc
push
inc
or
sub
and
sub
inc
inc
mov
aas
mov
inc
sbb
inc
movsl
inc
pop
jnp
cld
fildl
pop
adc
dec
nop
dec
cwtl
in
push
cmp
out
scas
jmp
daa
xor
push
jne
jg
fdivp
cmp
inc
lea
lahf
push
mov
ret
shr
outsl
jg
imul
pop
sub
mov
or
es
add
or
and
scas
sub
pop
scas
xor
sub
pop
adc
and
sub
cmp
outsl
insl
mov
aad
and
insb
sbb
popa
ret
xchg
pop
popl
call
jnp
fistpll
cvttps2pi
repz
in
cmp
sub
fwait
loopne
cmp
xchg
xchg
ds
mov
push
idivl
aas
aas
push
push
push
jl
out
jno
lods
fisubs
mov
notb
xchg
jecxz
js
push
sbb
inc
daa
pushf
fwait
push
pop
sub
ds
pop
sbb
push
pusha
inc
adc
xor
xlat
fistps
jo
sub
pop
sbb
push
sbb
adc
js
inc
jbe
fistpll
and
sub
and
iret
stos
mov
dec
inc
and
sub
and
sub
jmp
pop
fisttpll
aas
and
push
xor
push
jnp
cmpsb
sbb
fcoms
icebp
jecxz
lcall
cmp
and
xor
sub
push
adc
and
or
inc
sbb
fildll
sub
pusha
sub
add
nopl
mov
sbb
sub
mov
pop
pop
in
out
js
sub
xor
imul
inc
ja
ja
mov
jl
sub
or
inc
inc
sub
pop
xor
xchg
xchg
scas
jge
push
rcr
fs
cmp
outsb
scas
push
dec
add
adc
cmp
popa
push
xor
ret
sahf
push
and
adc
xor
pop
pusha
sub
cs
adc
cs
out
add
ss
das
push
cmp
and
lds
cs
pop
insb
inc
clc
pushf
add
inc
adc
or
popa
jmp
pop
cltd
jne
push
loope
cmpsl
sbb
and
sub
ficomps
jle
sbb
aaa
lods
pop
ds
movsb
clc
sbb
fwait
pop
pop
cs
push
cmp
cmp
pop
xchg
and
daa
push
mov
popa
mov
dec
pop
push
in
in
sbb
push
pop
pop
or
pop
push
adc
dec
xor
xor
insl
and
or
pop
or
lock
add
mov
adc
or
xchg
aam
sbb
into
aaa
adc
pop
xor
adc
dec
addr16
push
sub
into
push
push
or
aaa
mov
daa
and
dec
sub
daa
cmp
xor
mov
into
xor
jbe
out
push
push
divl
pop
adc
or
fs
js
sbb
adc
inc
inc
fbld
cmp
aas
add
and
bound
pop
inc
jle
in
dec
pop
jo
ret
cmp
fwait
inc
shr
je
xchg
inc
ss
inc
push
pop
dec
out
jmp
pusha
push
sahf
or
jbe
int
mov
sub
subl
aas
cmp
jae
adc
xorl
bound
inc
daa
dec
pusha
sbbl
adc
and
push
inc
adc
loopne
cmp
fisttps
push
sub
das
push
repz
adc
adc
jbe
sub
lods
cmp
xor
cmpsb
mov
imul
shlb
dec
adcl
push
aas
mov
xor
pop
adc
inc
sbb
inc
add
loop
fstp
inc
dec
add
or
loopne
sbb
lods
lcall
sbb
and
lock
sub
scas
adc
pop
adc
into
and
ja
push
sub
push
xor
xor
popa
imul
in
sbb
push
pop
outsl
jo
sub
sahf
data16
push
ja
pop
repz
adc
push
pop
iret
repz
push
inc
push
add
dec
mov
add
insb
xlat
pop
cmp
das
pop
cmp
cmp
iret
and
add
xchg
subl
mov
sub
mov
out
dec
push
cmp
pop
lods
ret
mov
mov
adc
adc
adc
and
sub
icebp
scas
cmp
inc
pop
adc
push
sbb
pop
cmp
and
out
in
cmp
inc
push
fs
testl
inc
pop
cmp
iret
call
pop
sub
xchg
stos
rcrb
push
out
push
and
xor
cmp
orb
shl
inc
or
inc
push
popa
xchg
add
push
fbld
or
cs
les
ja
aaa
dec
push
popf
add
or
call
mov
pop
sbb
sbb
sub
mov
cs
pop
bound
xchg
out
inc
scas
rol
sub
bound
icebp
outsl
jae
gs
inc
pop
imul
sub
jnp
and
and
push
push
das
xor
xor
adc
and
pop
jbe
pop
sbb
mov
out
sub
push
sub
adc
push
iret
and
dec
cmp
icebp
mov
xor
jae
push
ret
and
jns
push
mov
ror
insb
test
jb
outsl
imul
mov
ljmp
lods
pop
sub
imul
xchg
dec
xchg
movl
inc
add
cmp
xor
inc
pop
outsl
call
pop
jmp
and
pop
push
dec
sub
inc
adc
cmp
and
mov
das
mov
pop
dec
inc
and
pop
pop
pop
sbb
push
push
add
ja
or
inc
sub
hlt
inc
inc
aas
mov
inc
add
or
adc
push
or
adc
inc
jle
sbb
stos
aaa
fmuls
push
xor
cmovb
mov
push
repnz
add
mov
or
and
and
adc
cwtl
sbb
pop
mov
dec
dec
adc
dec
pop
jbe
xlat
into
inc
push
sbb
adc
push
popa
cmpsb
xor
sbb
dec
push
xor
push
or
mov
push
daa
push
hlt
aaa
sbb
fildll
orb
and
xlat
test
add
frstor
inc
adc
or
or
dec
lods
dec
loopne
sub
mov
mov
jns
arpl
sbb
push
push
pop
push
push
xor
adc
adc
dec
adc
mov
sbb
pop
sub
and
push
sub
lock
xchg
adc
loop
repnz
pop
cmp
inc
cmp
pop
ds
xor
sbb
idivl
or
jnp
sub
out
push
shr
fisubs
pushf
jge
loop
mov
mov
or
or
and
lods
shr
sub
in
push
jo
cmpl
add
xchg
test
or
sub
xchg
add
pop
inc
inc
gs
and
adc
pushf
adcl
es
scas
test
rcll
daa
jnp
sub
orb
sbb
fs
pop
dec
sub
pop
and
cmp
idivb
comiss
xor
jno
mov
adc
adc
jp
sub
ds
adc
adc
jno
inc
mov
cmp
mov
inc
outsl
int
into
sub
xor
xor
and
push
cmp
mov
test
pop
test
adc
popf
mov
push
cmp
mov
arpl
xor
add
jecxz
push
mov
das
push
cmp
add
push
push
pop
dec
sub
ss
inc
and
jno
imul
and
sbb
adc
jmp
sbb
or
xlat
cs
sbb
jbe
mov
out
inc
sbbl
aam
add
add
enter
mov
xor
imul
cli
vpmulhw
out
cmp
fldcw
add
and
and
add
lea
or
lods
mov
dec
add
sbb
push
lea
jecxz
add
incl
jo
inc
dec
daa
daa
xchg
ss
or
sub
cld
ljmp
cmp
and
dec
ss
and
cmp
mov
pop
push
lods
adc
dec
dec
push
dec
cmp
cs
dec
daa
cmp
or
imul
ret
add
lods
vcmppd
sbb
incb
push
or
push
jg
push
cltd
mov
and
icebp
xchg
adc
inc
add
sub
repz
mov
lret
or
inc
adc
push
pop
rcrl
js
add
inc
cmp
adc
sbb
lods
pop
scas
leave
orl
mov
inc
lcall
cmp
sarl
fwait
cmp
mov
adc
aad
lods
jbe
mov
sub
mov
sbb
push
pop
or
jbe
pop
adc
adc
dec
pop
sub
repz
in
cmpl
xchg
push
mov
sub
dec
call
dec
cltd
pop
adcl
fwait
or
jbe
cmpb
out
adc
in
test
xchg
xchg
mov
xchg
rclb
sbb
sub
or
cmp
addb
sbbl
inc
cmp
imulb
and
xor
add
insl
pop
and
and
inc
icebp
mov
dec
xchg
fincstp
cltd
adc
pop
pop
xchg
popf
add
push
add
add
insl
js
push
xchg
fnsave
pop
sub
jnp
cmp
fistl
xor
test
pop
sub
inc
sub
push
andl
frstor
inc
mov
ja
int3
push
mov
mov
imul
cmp
sbb
mov
lea
push
dec
sub
scas
cmp
clc
ret
pop
popa
push
and
xorl
iret
adc
adc
dec
xchg
and
addb
inc
repz
add
pop
dec
push
ss
cmp
pop
pop
push
das
mov
cmp
sub
sub
adc
addr16
push
or
sub
pushl
push
or
push
pop
lret
mov
inc
repnz
push
mov
inc
jmp
xor
cli
mov
cs
fsubp
std
sbb
dec
and
jb
sbb
aad
inc
inc
pop
daa
push
data16
sbb
movsb
jnp
das
add
xor
sub
lcall
fisubrs
xor
and
and
decl
adc
and
popa
adc
and
push
inc
mov
push
insb
and
mov
aaa
jbe
pop
jge
sub
mov
mov
popa
pushl
imulb
je
jo
insb
gs
test
push
ja
fs
imul
cmp
jno
xor
movsl
cmp
inc
jb
test
inc
ds
stc
sub
inc
inc
add
ss
dec
xchg
or
push
or
adcb
insb
ss
in
push
adc
push
inc
pop
jns
out
push
mov
loop
insb
mov
cvttps2dq
imul
outsb
xor
xchg
mov
movb
enter
das
dec
push
dec
dec
xchg
or
das
es
shlb
mov
mov
lcall
push
and
mov
add
adc
mov
mov
lods
pop
out
decl
out
dec
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
jle
sub
mov
sbb
das
in
adc
pop
sbb
xor
addb
fsubs
sbb
ljmp
test
xor
dec
xchg
pop
shl
dec
push
nop
mov
adc
adc
int3
mov
aaa
xor
cmp
and
and
test
lods
add
push
xchg
jb
jle
sub
outsl
push
dec
imul
jb
outsb
dec
pushf
mov
jl
in
jns
insb
sub
sahf
dec
cs
in
jns
sub
sbb
dec
rcll
pop
in
loopne
jns
pop
fmull
inc
mov
jl
mov
mov
xor
pop
add
push
dec
pop
aam
notb
mov
mov
push
push
dec
stc
jnp
cmp
cmp
xor
sub
sub
xor
inc
xor
inc
and
and
pop
xor
add
pop
mov
ss
cmp
insb
push
outsb
add
add
ds
sarb
add
and
add
adc
je
out
dec
jp
scas
push
jb
sub
xchg
jo
aaa
bound
je
loope
sti
cmp
popa
outsb
mov
and
inc
pop
adc
and
or
mov
dec
and
or
xlat
or
addl
mov
push
bound
mov
xlat
das
mov
pop
or
pop
mov
pop
add
sbb
xor
and
aaa
or
addr16
repnz
jnp
daa
sbb
inc
fwait
and
nop
cmp
or
dec
adc
pop
inc
xor
aaa
jg
add
or
adc
mov
and
mov
sub
sbb
adc
inc
or
sbb
mov
lret
pop
adc
fimull
inc
ljmp
adcb
mov
xchg
and
pop
test
xor
pop
inc
mov
inc
xor
sbb
mov
je
mov
push
mov
jbe
mov
mov
pop
cltd
test
adc
lcall
ds
and
sahf
out
jns
xor
mov
mov
jge
xchg
shlb
movsl
fsubrs
mov
je
fwait
mov
pop
aad
mov
pop
idivb
mov
data16
push
cmpsl
dec
leave
es
jl
aam
inc
mov
out
insb
filds
pop
cs
ret
ret
push
dec
clc
fmull
jbe
lret
test
or
aas
pop
lods
popa
scas
icebp
nop
imul
ret
cmpsl
mov
pusha
dec
xor
inc
testb
ror
fnstcw
rorb
or
cmp
js
leave
mov
inc
int3
dec
repz
xor
adc
and
mov
jg,pt
scas
lret
call
mov
pop
lods
ds
cld
xchg
outsl
imulb
xchg
xchg
push
shlb
xchg
daa
movsb
dec
fistpll
sub
xchg
aaa
inc
push
dec
iret
jnp
repz
push
leave
roll
fdivrp
popf
jge
daa
add
nop
notl
out
fdivp
push
cmp
xchg
fs
repz
sahf
ja
push
ljmp
sarl
aad
aam
aaa
sub
int
icebp
dec
notl
xlat
jl
aaa
frstor
push
jne
jge
lcall
dec
sub
jle
repnz
out
push
push
push
push
and
iret
repz
lahf
es
test
outsl
jns
mov
cvttps2pi
out
ds
jno
pop
or
jns
fdiv
adc
in
push
adc
mov
pushf
test
cli
fistps
fisubs
rolb
and
lds
lea
cmpsb
jns
out
out
mov
dec
outsl
fnstcw
xchg
mov
xchg
out
sahf
cmpsl
outsb
xchg
mov
xor
stc
or
sub
outsb
mov
ret
repz
cli
and
pop
jmp
aad
pop
dec
sbb
scas
sub
out
incl
lahf
and
and
rcrb
push
outsl
adc
push
mov
xor
adc
mov
pop
mov
or
scas
int
mov
fadd
cs
outsb
and
push
pop
mov
add
idivb
adc
cmpsb
lds
and
pop
sbb
enter
das
in
sub
xchg
inc
repnz
iret
pusha
or
daa
or
les
push
add
adcb
xchg
outsl
es
adc
pop
inc
data16
subl
jae
popa
push
aas
inc
push
lret
mov
sbb
or
aaa
push
pop
xchg
cmp
jae
cmc
inc
inc
jnp
xlat
push
fisubrl
dec
hlt
fiadds
inc
jae
dec
cmp
dec
cmpsl
fst
inc
je,pn
push
ljmp
cmpsb
dec
add
aad
or
push
insb
pop
imul
dec
pop
je
jns
rcr
cmp
jp
das
cmp
xchg
outsb
xor
adc
push
popa
mov
ret
loope
jne
dec
or
dec
mov
ja
out
inc
ss
lods
push
push
cwtl
push
jbe
les
push
add
add
cmp
ja
cwtl
fisttps
push
ds
repz
ret
xor
popa
insl
jo
sti
leave
mov
je
push
addr16
jo
jae
mov
jno
outsl
and
cmpb
ja
fsts
sub
and
cmpsb
mov
or
xor
xor
xor
xor
pop
repz
cmp
cmp
and
xor
xor
xor
cmp
push
add
push
pop
and
fildl
push
pop
out
or
or
pop
and
std
push
and
sub
xchg
daa
lock
dec
push
loopne,pn
rolb
dec
sbb
mov
push
pop
daa
or
xchg
cmp
xor
dec
mov
ret
outsl
es
inc
xor
push
fisttps
xor
xor
test
in
lea
or
xchg
mov
push
in
test
bound
daa
dec
jbe
pop
daa
xor
outsl
push
push
inc
xor
int
sti
add
jp
cwtl
xchg
jg
pop
imul
in
cvtdq2ps
push
xor
or
sub
inc
add
js
mov
mov
lods
repnz
lcall
sbb
dec
push
or
loope
enter
lahf
mov
jnp
popa
mov
sti
ret
push
sbb
orb
push
ret
rol
int
sbb
push
fnsave
jo
cs
lods
push
inc
and
adc
pop
inc
lret
das
pop
pop
jbe
bound
mov
sbb
pop
sub
and
xorl
sub
daa
into
push
pop
mov
mov
and
or
ds
push
insb
daa
jno
jecxz
daa
and
add
jo
iret
sbb
lods
aaa
xchg
xor
cmc
aaa
add
push
insl
xor
sbb
sbb
mov
stos
pop
pop
jno
push
sbb
daa
ret
push
lods
daa
jge
les
pushf
cmpsl
das
push
sbb
push
divl
and
sub
iret
or
pop
ret
mov
adc
movaps
das
popa
lds
ss
pop
xchg
sub
adcb
push
fisubl
into
adc
test
cmp
rcrl
dec
or
pop
push
push
sbb
ja
icebp
mov
adc
or
mov
aaa
xor
mov
add
pop
cltd
daa
lahf
sbbb
outsl
pop
xchg
outsb
adc
pop
xor
int
add
sbb
stos
pop
jg
mov
cmp
packsswb
adc
frstor
mov
xor
pop
xor
mov
lret
data16
xor
jl
ds
pop
inc
inc
and
out
or
js
jl
jl
ud2
sarl
ss
imul
and
and
insl
and
adc
negl
mov
cmp
js
adc
or
jl
call
inc
push
xchg
lea
addr16
dec
sbb
mov
inc
or
in
daa
cmp
test
imul
mov
cs
cmp
pushf
daa
or
push
stc
pop
sub
adc
ret
pop
inc
lock
lock
dec
lcall
fimuls
outsb
mov
lret
pop
hlt
out
xor
or
and
inc
pop
adc
add
pop
push
lock
les
test
mulb
insb
imulb
das
pop
sbb
adc
or
adc
mov
xchg
inc
pop
or
insb
adc
das
sub
sbb
loopne
cmp
or
add
mov
fcomps
sbb
cmp
ljmp
cltd
test
push
push
loop
jg
mov
adc
push
and
fisttps
cmp
nop
pushf
daa
xor
shr
out
sub
dec
adc
test
stos
lock
rcrl
les
test
dec
jbe
gs
sub
rorb
sub
sub
bnd
mov
test
push
sbb
jp
mov
push
cmp
pop
push
adc
pushf
push
adc
pop
mov
add
fs
cwtl
cmp
repnz
cmovs
test
aad
or
dec
shll
or
pop
jb
or
sbb
xchg
fs
lcall
mov
test
xchg
inc
inc
subl
pop
sete
das
loope
mov
inc
push
or
dec
jmp
lods
cmp
data16
pop
inc
hlt
popa
sub
cmp
sub
inc
fdivrs
sysenter
rcrb
mov
and
shll
push
add
int3
int3
sub
push
inc
push
adc
inc
sbb
push
push
getsec
adc
pop
xor
loop,pt
out
ds
and
push
jno
shll
ja
sub
pop
inc
sub
push
adc
add
inc
aas
stos
test
lods
jno
jbe
or
ljmp
jo
mov
sub
sub
mov
sbb
fs
sahf
pop
and
xchg
mov
dec
in
inc
dec
mov
repz
adc
push
adc
pop
iret
repz
sbb
push
ds
repz
andl
out
dec
cltd
or
xchg
insb
pop
add
add
insl
ss
int
or
adc
sbb
and
sub
xor
inc
mov
sti
out
mov
mov
mov
ss
int
popa
xchg
sbb
sub
add
fldcw
xchg
pop
adc
insb
ss
and
add
add
push
dec
str
fldcw
add
inc
stc
das
incl
mov
adc
scas
arpl
sub
movhps
pop
and
fidivrs
mov
pop
add
mov
test
sub
mov
lea
pop
dec
test
ret
or
movsb
push
xor
xor
xor
add
add
adc
ss
or
cmp
pop
adc
cmc
in
or
add
add
pop
push
push
and
into
mov
cli
decl
xor
push
adc
sbb
aas
sbb
and
xor
out
clc
and
sub
dec
sbb
cs
daa
pop
sub
dec
dec
add
ds
or
decl
pop
inc
sub
pop
inc
pop
dec
aas
sbb
or
jb
sub
adc
or
lret
std
sbb
sbb
pop
pop
jbe
and
push
inc
xchg
mov
pop
pop
and
jg
xchg
mov
inc
sbb
and
dec
adc
push
sub
dec
mov
push
xor
aas
pop
or
inc
add
pop
dec
add
pop
cmp
cmp
dec
cmp
xchg
and
roll
sbb
xchg
cmp
ret
imul
mov
and
or
pop
push
popf
xor
adc
push
dec
push
pop
sbb
push
pop
push
inc
dec
es
xor
loopne
xor
dec
mov
mov
in
rolb
test
cmp
out
push
push
inc
push
xor
fcomps
imul
pop
push
push
dec
fstl
dec
add
movzwl
das
adcl
inc
adc
pop
mov
mov
es
lret
add
sbb
cmc
addb
jb
sub
push
push
cld
loope
pop
inc
mov
data16
push
dec
inc
dec
push
dec
aas
add
outsl
and
fistpll
cmpsb
inc
sub
mov
inc
aaa
jno
sti
shlb
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
andb
fwait
rol
fwait
in
inc
mov
bswap
jmp
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
enter
jg
mov
inc
xchg
cmpsl
aad
arpl
push
addr16
adc
or
daa
cmp
sbb
cld
insl
sub
adc
or
or
cs
ret
sub
xchg
mov
jmp
jo
dec
ret
insb
sbb
xchg
shll
cltd
test
push
push
shll
insb
aaa
push
dec
ja
daa
mov
mov
movsb
sbb
dec
stos
fmuls
lret
lcall
pop
rep
cs
arpl
test
add
mov
mov
call
mull
jno
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
cmp
add
pop
sbb
loopne
js
pop
cmp
pop
xor
dec
push
imul
xor
pop
fdiv
inc
addr16
push
cmp
jnp
dec
outsb
ja
es
inc
and
inc
aad
data16
cmp
dec
mov
lcall
pushl
jbe
or
and
imul
cmp
cmp
daa
and
dec
push
aas
sub
jg
cld
xor
sub
dec
daa
sbb
pop
pop
and
dec
dec
pop
pop
push
xor
cmp
pop
dec
call
pop
and
xor
mov
dec
int
cltd
ja
mov
outsb
in
nop
xchg
pop
pop
daa
lods
out
imul
pop
daa
cmp
push
adc
and
out
dec
pop
add
pop
dec
testl
push
aaa
push
dec
shrl
mov
sub
push
xor
xlat
popf
mov
cmp
inc
pop
inc
inc
inc
jbe
out
xor
and
aaa
inc
push
inc
cs
scas
fsts
ss
cmovb
pop
ss
lods
es
cmpsl
ss
and
or
enter
dec
das
lcall
ja
and
push
add
xorl
sbb
test
aas
inc
cs
adc
hlt
scas
iret
jle
scas
bound
dec
push
inc
jno
sub
push
mov
in
xchg
fistpl
dec
pop
jae
or
xchg
rcrl
les
lcall
and
push
sysexit
test
mov
sarl
or
popa
ss
adc
push
stos
xchg
xor
dec
sub
xor
sbb
orb
loopne
aad
or
adc
into
mov
addr16
cmpsl
mov
mov
xchg
outsb
push
xlat
pop
adc
or
sbb
jp
out
insb
and
sbb
movb
stos
fmul
xor
xor
mov
pusha
roll
add
mov
cs
add
pop
cld
sbb
pop
cmp
lret
push
inc
xor
outsb
lret
sti
in
pop
mov
or
jge
or
addb
and
mov
sbb
xchg
mov
andb
add
shll
shlb
xor
add
fcompl
rorl
inc
ret
cmp
scas
adc
js
xor
xor
in
sub
push
scas
inc
jbe
push
scas
shl
sbb
subl
mov
sahf
inc
int3
mov
enter
xchg
adc
sub
mov
or
and
add
ljmp
je
and
rdmsr
imul
jo
jbe
cmp
repnz
cmp
xor
ret
and
xchg
ficomps
add
mov
jo
push
inc
aad
mov
sub
xor
insl
loop
inc
inc
sbb
aad
adc
mov
lods
dec
or
insb
dec
push
popa
je
jecxz
andb
popf
insl
mov
and
push
push
cmp
adc
negb
add
or
sbb
gs
pop
add
fcmovnu
imul
cs
movsb
dec
or
jbe
pop
sub
xchg
jne
push
pop
lret
xchg
pop
adc
cltd
int
pop
push
rorb
inc
ds
insb
sti
mov
cmpsb
ret
fs
push
jae
rorl
cmp
xor
dec
lcall
push
cmp
stos
adc
mov
jae
adc
gs
mov
cmpsl
inc
test
sbb
pop
pop
sbb
and
pop
mov
outsl
js
sbb
and
push
or
nop
pop
adc
fadds
mov
pop
xchg
mov
jb
pop
repz
adc
pop
inc
jne
or
xor
movsl
cmp
pop
inc
jno
pop
pop
adc
or
test
call
push
test
cmc
outsl
add
jnp
push
inc
or
adc
dec
dec
push
sub
loope
xor
call
sbb
aaa
daa
aam
popa
inc
ljmp
fs
jo
mov
test
outsl
lods
push
lods
xchg
push
push
push
iret
sar
arpl
cmovp
movsb
mov
cmp
pop
outsb
mov
mov
jmp
cmp
into
adc
cmp
das
scas
push
pop
arpl
push
stos
sbb
xor
pop
sub
adc
shll
xor
mov
push
jnp
sbb
sub
pop
inc
add
xchg
cmp
mov
insb
inc
cmp
inc
adc
xchg
dec
movsl
lods
aas
int
cli
mov
adc
add
test
test
ja
xchg
sub
or
xchg
scas
pop
sub
mov
cmp
pop
inc
andps
outsl
pop
imul
mov
xlat
push
pop
jle
pop
jnp
fwait
pop
pop
pop
pop
aas
inc
sbb
pop
mov
pop
pop
mov
sub
stos
xor
ljmp
fdecstp
mov
dec
pop
movsl
test
pop
repz
sbb
mov
insb
arpl
cmp
movb
ljmp
dec
mov
xlat
maxps
mov
push
jge
push
push
inc
push
or
sub
outsl
dec
cmp
and
and
push
or
inc
and
inc
nop
mov
pop
dec
shlb
cmpsl
add
call
or
add
inc
aaa
insl
fstps
gs
push
sbb
filds
sub
push
add
xor
fstpl
dec
jae
push
popa
mov
cmp
and
fwait
sbb
inc
call
punpckhwd
dec
outsb
push
je
mov
popf
add
push
push
pop
xor
inc
pop
push
dec
inc
dec
inc
push
pop
test
xlat
mov
mov
jb
gs
and
inc
outsb
fwait
pop
addb
dec
jb
shll
mov
popa
mov
xchg
mov
inc
adc
push
add
push
aam
add
mov
out
ret
adc
pop
pop
sub
add
add
jo
dec
dec
imull
loop
leave
xorl
jns
jb
cmp
push
push
adc
inc
pop
test
xlat
icebp
inc
add
dec
dec
or
pusha
add
cli
call
xor
add
xor
or
push
mov
adcb
dec
aad
shlb
push
add
pop
mov
push
xchg
push
or
cmpsb
add
pop
and
or
pop
add
and
adc
push
loope
mov
or
mov
aam
push
push
cmc
sbb
popf
or
push
or
mov
xchg
cmp
sbb
push
mov
mov
push
ret
adc
cmpsl
test
push
sub
outsl
or
pop
lods
cltd
pop
mov
ja
sahf
fadds
mov
mov
int
test
dec
and
mov
outsl
pop
stos
adc
or
clc
popf
les
mov
push
imul
inc
add
inc
jle
xlat
nop
addr16
push
mov
enter
inc
dec
sub
das
mov
dec
add
ret
adc
inc
xadd
flds
inc
jg
inc
xchg
inc
cmovo
or
fdivp
adc
cmpb
aas
mov
jo
cmovo
fisubrl
pop
inc
dec
add
pushf
fadds
sbb
das
test
das
xchg
mov
mov
push
aam
xor
insl
daa
aas
add
test
out
mov
add
daa
fcmovnu
sbb
ss
and
cmp
inc
pop
lods
pop
lods
add
lods
lods
jne
cmpsl
ja
lahf
add
daa
mov
jns
test
inc
push
outsl
mov
out
pop
hlt
cld
aas
repz
fsubrs
jg
dec
outsl
nop
sbb
pop
push
daa
dec
inc
xchg
sub
mov
sub
sub
sbb
sub
xchg
jns
notb
test
fcomps
mov
cmpsl
icebp
clc
fs
ss
je
repz
int3
pop
mov
inc
and
jns
jns
pop
sub
hlt
pop
xchg
test
pop
pop
sahf
pop
pop
ds
pop
repz
ja
test
clc
pop
out
ds
fadd
in
enter
adc
nop
je
push
jo
and
les
push
fdivrs
push
adc
xchg
adc
out
xchg
xchg
dec
xchg
and
insb
das
mov
imul
push
rolb
test
sbb
xchg
cmp
xchg
inc
xor
jns
into
add
add
sub
fdivp
cmp
mov
cmp
mov
and
xchg
pop
in
pusha
ja
test
jmp
xchg
ja
add
lods
xchg
dec
mov
dec
outsl
add
inc
mov
sbb
sub
add
inc
push
dec
pop
dec
sbb
filds
enter
sbb
mov
mov
stos
fbld
test
outsl
cmp
ss
add
pop
dec
cmp
test
popa
dec
push
pop
scas
add
js
out
add
sbb
xor
and
push
xchg
xor
pop
inc
cs
mov
hlt
mov
jl
add
dec
push
adc
pop
scas
fsubs
outsl
adc
sbb
daa
push
xor
shlb
xchg
cmp
xor
rorb
or
xor
fs
outsl
sub
fs
pop
adc
dec
sahf
out
test
add
faddp
cmc
fs
je
or
or
dec
mov
pusha
fs
mov
add
mov
addb
add
or
jg
sub
add
jns
and
pop
ret
sarb
pop
fildll
push
xor
and
pusha
repz
outsb
outsl
and
pop
cwtl
sbb
nop
and
push
lock
jbe
or
scas
add
xor
or
xor
shlb
cmpsl
add
mov
cmp
rcl
and
add
xchg
lcall
sbb
push
fdivs
or
mov
add
jecxz
mov
subb
lahf
mov
out
dec
mov
mov
or
dec
shll
push
mov
scas
pop
movsb
xchg
push
pusha
jns
ret
nop
pop
sbb
xor
or
sbb
jbe
fimull
cmp
divl
jns
ja
sbb
bound
jo
push
push
outsl
pusha
lds
jg
dec
mov
xchg
daa
sahf
negb
sbb
push
add
popf
xchg
sbb
scas
pusha
enter
popf
cmpsl
push
lods
nop
xchg
jo
sets
mov
and
or
in
shrl
bound
pusha
daa
mov
xlat
or
pop
or
and
scas
add
xlat
or
ds
push
mov
or
cmpsl
in
lahf
pushf
and
rorb
daa
dec
arpl
pop
arpl
testl
and
add
add
scas
and
fiadds
push
cwtl
push
and
xchg
or
sbb
mov
adc
cmpsb
aaa
push
ja
or
aaa
mov
add
outsl
addr16
dec
enter
cmpsl
shlb
add
mov
in
adc
xchg
and
jg
fstl
mov
mov
ja
add
jg
addr16
add
cs
aam
sbb
pop
and
jmp
jge
and
dec
push
adc
outsl
sub
jb
shlb
lds
or
pop
cmpsb
cwtl
popw
mov
data16
dec
and
adc
add
insb
pop
add
hlt
xchg
inc
xchg
cmpsl
add
and
xlat
add
iret
mov
push
out
int3
lahf
or
push
jb
push
add
iret
ret
add
pop
push
or
dec
sti
mov
push
add
imul
rcrl
pop
xchg
jb
rorb
mov
push
mov
push
push
jb
pushf
aas
or
je
pop
xchg
push
mov
popa
inc
outsl
add
nop
fwait
pop
or
dec
data16
in
movsl
testl
lock
shrb
add
shl
scas
push
mov
mov
loopne
int3
fsubrl
pop
add
add
subl
sbb
pop
addr16
pop
or
test
xchg
pop
insl
cmp
fwait
push
enter
aam
vmwrite
dec
in
and
outsb
lock
and
or
xlat
sbb
mov
xchg
out
add
mov
out
ss
daa
xor
push
cmpsl
js
push
insb
xchg
enter
je
insb
inc
or
test
rcl
sbb
mov
fstp
add
outsl
jl
mov
dec
sbb
mov
fiadds
stos
push
ucomiss
add
negb
pop
add
insb
xor
addr16
xor
aas
fildl
jo
sbb
push
add
int
aaa
cld
or
dec
dec
ret
jns
and
sahf
out
push
lea
jns
adc
push
outsl
xchg
mov
jns
or
je
repz
repz
sbb
push
push
jg
lahf
out
ds
pop
stos
std
and
iret
repz
mov
jns
out
cmp
stos
shl
cmp
out
sbb
jns
iret
out
cmp
repz
push
test
cmp
loopne
out
ds
aaa
addr16
iret
sarl
and
sahf
out
cmc
adc
cmp
out
sbb
jns
out
mov
cmpsl
shl
imul
add
jl
mov
xchg
mov
out
cmp
jnp
cmpsl
stc
cmp
je
lcall
cmp
leave
icebp
inc
xchg
stos
cmp
out
int
inc
xchg
jl
cmp
cmpsl
stc
dec
xchg
ljmp
out
idivl
xchg
cmpb
xor
dec
outsb
xchg
sahf
out
cmp
out
sub
sarl
sti
aaa
lcall
cmp
and
idivl
push
popf
push
mov
cmp
ds
sahf
out
inc
lahf
sahf
push
mov
mov
bnd
cmpsl
stc
adc
add
sbb
daa
push
mov
repz
dec
movsl
scas
push
loopne
cmpsb
pop
cltd
int
stc
cmp
sub
sahf
out
cmp
shlb
dec
repz
or
jl
cmpsl
stc
sub
lods
xor
iret
shrl
lods
push
scas
and
iret
repz
xchg
cs
popa
sahf
out
out
add
out
iret
sarl
pop
mov
cmpsl
fnstcw
sbb
iret
sarl
mov
out
mov
out
insb
outsl
mov
mov
in
mov
rcrb
shll
ret
repz
jl
sbb
dec
cmp
out
cwtl
rcll
les
jl
cmpsl
stc
das
lds
call
iret
shll
fdivr
push
lret
dec
repz
ds
cmp
push
shrl
fwait
dec
repz
pop
aam
icebp
imul
out
lahf
stos
cmp
mov
or
add
mov
pushf
sbb
pop
jno
pop
add
fsubrl
ficoms
mov
in
adc
sbb
addr16
out
into
cmp
cmp
jge
fistps
inc
pop
sub
pop
inc
jnp
rorb
aam
repz
inc
aas
repnz
es
and
insl
and
fisubs
lret
and
xchg
add
and
es
inc
dec
mov
std
aaa
cmovl
mov
cs
insl
in
and
pop
das
cmp
aaa
pop
jb
pop
data16
pop
enter
cltd
nop
dec
mov
adc
jns
pop
pop
jo
lds
loopne
fs
push
jg
mov
leave
jg,pn
orl
dec
rorb
dec
loop
dec
pop
xchg
mov
test
movsl
fsubrs
inc
add
aas
mov
dec
mov
mov
aas
cmc
loopne
enter
jnp
jmp
shlb
pop
out
ss
aas
or
es
div
idivb
adc
inc
es
cld
test
std
sbb
dec
jmp
push
jp
out
or
inc
ljmp
in
aaa
mov
jbe
pop
push
daa
add
pop
cmpsl
insb
mov
adc
inc
pop
jecxz
push
push
pop
push
dec
adc
mov
lret
into
push
aad
in
arpl
lahf
sbb
sahf
xchg
xchg
sbb
ja
or
or
setp
adc
sarb
outsl
je
pop
jae
fsts
push
cmp
push
adc
in
pushl
mov
lret
sbb
iret
xchg
pusha
ja
aas
les
inc
add
adc
nop
dec
fadds
jnp
test
pushf
sbb
dec
pop
inc
into
repz
rolb
fdiv
inc
adc
das
outsl
lret
jne
mov
hlt
js
jns
push
inc
in
addr16
mov
out
and
fs
inc
jl
jns
mov
idivl
or
jns
pop
scas
push
jnp
jns
sahf
xchg
out
sub
ja
add
iret
lods
roll
xchg
jp
push
push
push
mov
mov
lods
cmp
jo
je
leave
sub
jp
push
mov
in
scas
js
inc
jnp
jb
and
jnp
jnp
leave
xchg
cmp
roll
mov
adc
jl
add
sub
inc
outsl
repnz
add
and
jns
jl
push
iret
insl
sub
imul
lods
xchg
xchg
jl
scas
jns
mov
aam
inc
mov
or
enter
mov
and
xchg
xor
jl
jl
out
fmulp
push
add
add
add
in
push
testl
into
rorl
or
dec
push
mov
shlb
dec
repnz
jge
jge
push
leave
adc
enter
and
inc
jle
jge
lds
jl
and
xor
jge
in
jns
xchg
fidivrs
in
out
mulb
in
add
jle
hlt
enter
das
jle
jle
jle
xor
inc
jle
jle
dec
jg
cmp
cmp
cmp
fnstsw
cmpsl
aad
jbe
fstpl
fisttpll
in
in
pop
cmc
mov
pop
and
pop
lock
add
addr16
dec
orb
loopne
out
pop
jg
pusha
jg
mov
in
xchg
add
mov
leave
les
cmp
inc
add
push
or
pop
jecxz
add
es
andb
sub
pop
pop
out
inc
jb
xor
mov
pushf
andl
aam
jb
loopne
push
push
add
jne
jg
daa
xchg
rcl
subl
inc
dec
jb
js
push
push
lock
icebp
fiaddl
push
in
addb
inc
dec
adc
fisttpll
xor
inc
mov
xchg
cmpl
jb
inc
decl
push
addl
andb
xorl
jb
cltd
sbb
cmp
test
orl
or
adc
xor
cmp
sbbb
repz
imul
or
repz
or
or
repz
stos
movzbl
iret
repz
rcll
adc
adc
iret
repz
adc
adc
out
push
push
pop
sbb
and
mov
sbbl
test
xchg
iret
insl
push
push
add
ja
jle
add
test
andl
in
in
pushf
mov
leave
shr
lea
je
scas
push
repnz
iret
mov
lods
int3
push
sub
addb
fisubl
addb
fidivrs
test
das
sbb
ror
test
pop
mov
sti
rorb
loop
das
push
cmpl
lret
inc
int
add
inc
add
adc
add
fdivl
lahf
daa
and
and
shll
add
leave
add
mov
and
hlt
push
mov
pop
pop
pop
adc
add
decl
pop
jb
inc
lret
jns
pop
fwait
cli
push
push
sbb
es
test
cs
xchg
adc
xchg
shrl
cltd
push
dec
pop
jo
ja
mov
jo
pusha
push
mov
adc
add
mov
mov
decl
frstor
xchg
dec
mov
iret
fistps
add
addb
mov
jb
push
int3
mov
jb
pop
mov
in
sub
sahf
mov
frstpm(287
test
inc
popf
cmp
push
mov
push
mov
xchg
pushf
xchg
push
mov
push
fmuls
filds
cmp
push
add
and
add
and
gs
xor
pop
adc
xchg
sbb
decl
stos
xchg
xchg
cmp
lea
mov
pop
jle
std
mov
mov
pop
pop
sbb
mov
pop
cmp
mov
pop
pop
pop
pop
pop
mov
insl
mov
leave
dec
mov
jge
femms
leave
leave
leave
leave
or
leave
leave
leave
or
pop
push
leave
leave
leave
leave
add
xchg
leave
add
xchg
jbe
pop
and
stos
xchg
in
xchg
add
mov
mov
inc
xor
sbb
mov
mov
add
ds
mov
nop
imul
dec
mov
cmp
jmp
xchg
and
stc
mov
mov
push
add
ja
adc
push
push
and
sbb
iret
repz
or
or
mov
or
fiaddl
push
jl
test
fsubrl
orb
shrb
fcmove
loop
psadbw
jbe
ljmp
dec
xor
push
and
pop
pop
fisubrs
rdmsr
das
adc
xcrypt-ecb
cmpsl
dec
pop
repnz
sbb
aaa
pushf
mov
inc
ljmp
icebp
movsb
pop
paddsb
aas
and
inc
pop
pop
dec
cmp
sarb
or
sbb
es
adc
daa
pusha
daa
push
cld
test
lea
lea
lea
xchg
mov
rcrl
cs
in
sahf
add
add
inc
repnz
cmp
or
mov
push
jecxz
mov
xchg
sbb
jb
mov
aaa
mov
dec
mov
enter
mov
arpl
dec
sahf
pop
nop
xchg
sahf
cmovne
pop
jo
das
add
leave
leave
leave
leave
leave
rcr
out
ljmp
aas
adc
iret
repz
pop
push
or
or
iret
repz
aas
or
mov
or
xchg
in
mov
xchg
push
sbb
rorl
jecxz
js
mov
psubq
nop
in
data16
or
in
loopne
and
sub
jo
mov
cmpsl
xlat
fstpl
je
daa
xchg
xchg
push
test
sbb
movl
jae
int3
cld
mov
test
repnz
add
push
insb
xchg
pop
push
xor
in
or
jl
fidivs
xchg
mov
aam
in
das
or
mov
xchg
xchg
sbb
sub
pushf
pushf
fsubl
bound
out
popf
adc
add
out
lcall
mov
push
and
pop
call
in
mov
xchg
and
cmp
xchg
cmp
mov
xchg
mov
jno
add
xchg
cmp
movsb
scas
fisttps
xchg
out
movsb
aad
mov
notb
and
xchg
pop
xchg
and
sub
xchg
lahf
into
push
and
imul
xchg
mov
xchg
mov
sahf
adcl
or
cmp
xchg
jns
jns
movups
xchg
jns
jns
cmp
inc
xchg
push
xchg
pop
xchg
sbb
xchg
loopne
xchg
lds
xchg
lcall
pop
mov
jae
fnstsw
add
xchg
adc
add
lock
inc
es
inc
divl
xchg
mov
in
add
mov
xchg
pop
xchg
outsb
dec
mov
inc
fsubs
pop
rclb
call
dec
pop
arpl
add
push
sbb
jmp
repz
mov
add
jnp
inc
xchg
iret
xchg
fucom
jns
xlat
das
fistps
or
ud2
loope
repz
or
call
outsl
pusha
pushf
sub
cmp
xchg
inc
xchg
cld
ja
in
mov
popf
orb
daa
inc
mov
nop
ja
sahf
fcmovne
filds
int3
es
mov
cwtl
dec
es
leave
repz
push
xchg
popa
scas
mov
pop
mov
test
arpl
cwtl
aaa
jns
insl
psubusb
add
push
insl
in
pop
scas
call
fbstp
pop
and
cltd
push
repnz
cmp
inc
cltd
dec
cltd
push
cltd
pop
cltd
repnz
jnp
fdivrl
mov
ud2
pop
or
pop
push
pushf
pushf
pushf
pushf
add
iret
repz
sbb
cmp
repz
outsb
repnz
push
mov
dec
dec
sahf
and
rcr
and
js
out
and
cltd
jb
stc
mov
sub
daa
cmp
lcall
daa
fisttpll
pop
jae
jnp
add
sbbl
jns
pop
xchg
or
repnz
mov
in
in
fimuls
into
cmpsl
push
sub
and
xchg
mov
jg
sbb
jb
fwait
adc
enter
push
fwait
out
xchg
pushf
andb
mov
jb
mov
xchg
out
xchg
sahf
iret
or
insl
fidivl
les
daa
daa
mov
in
in
in
cmc
std
jmp
daa
clc
inc
mov
or
inc
jecxz
aaa
inc
push
daa
mov
push
or
xchg
mov
arpl
pop
jae
into
jnp
add
adcb
jle
sahf
pushf
cmpsb
pushf
mov
jl
adc
inc
int
movsb
test
push
mov
ror
out
out
idiv
ja
xchg
mov
leave
loopne
popf
xchg
popf
dec
and
fnstenv
pop
enter
gs
out
jle
xchg
out
fimuls
cs
rorl
add
in
jns
cli
add
or
adc
sbb
dec
sahf
add
sub
cmp
out
or
dec
push
cmp
repz
pop
or
or
repz
jb
adc
jmp
mov
push
bnd
repz
or
ficomps
cmp
add
mov
xchg
pop
lock
inc
jb
jecxz
mov
out
cmpsb
scas
push
lahf
iret
jae
cmp
lahf
es
add
daa
stc
loop
push
scas
ds
cmp
jmp
push
inc
jb
inc
test
roll
mov
xlat
mov
loop
in
mov
clc
lsl
sbb
or
adc
add
pushf
nop
add
push
or
add
mov
cmpsl
js
mov
push
pop
push
lahf
addr16
add
mov
ja
add
leave
repz
push
jg,pn
mov
outsb
xchg
iret
test
out
mov
test
mov
mov
pop
sti
jns
in
push
add
or
iret
cmp
push
or
and
or
jns
out
or
or
testb
dec
mov
mov
adc
jle
iret
rep
and
cmpsl
add
jns
pop
push
scas
mov
add
out
cld
loop
stc
cmp
ja
push
incl
pop
test
or
mov
xor
mov
out
xor
inc
pop
dec
ja
mov
out
clc
jb
fs
arpl
inc
jbe
pause
js
mov
repnz
add
cmp
and
stos
stos
inc
pushf
stos
in
fs
aad
xchg
out
loopne
addr16
mov
aam
cmp
xchg
mov
sub
cmp
mov
mov
mov
pop
jns
out
push
add
add
sahf
out
pop
mov
xchg
mov
or
mov
out
and
mov
jb
enter
jecxz
out
mov
mov
stos
dec
pop
movsb
enter
cmp
push
dec
push
addr16
xchg
and
das
jp
andb
xchg
movsb
lcall
inc
push
stos
movsb
inc
xor
repnz
jecxz
or
cmp
lods
int
cmp
cmp
pop
movsl
cmpsl
fildl
shld
pop
invd
sahf
out
sahf
pop
or
or
or
jmp
or
add
xchg
and
aaa
jb
jp
andb
movsl
das
pop
mov
add
int3
daa
adc
in
xchg
outsl
mov
add
fsubl
xlat
movsl
bswap
pop
sar
adcb
psubusb
enter
nop
pop
or
sahf
xor
leave
mov
popf
fwait
mov
add
push
mov
and
pop
adc
outsb
mov
xchg
cmpsl
inc
inc
inc
iret
leave
repz
dec
mov
push
pop
sub
dec
es
scas
jns
mov
fmull
xchg
mov
int
lsl
out
cmpsl
sahf
pushf
jl
or
and
das
and
icebp
add
push
cmpsl
pop
pop
xchg
mov
scas
shlb
add
mov
cmpsl
fisubl
jo
enter
cmpsl
push
test
test
inc
repnz
pop
or
xchg
iret
insl
dec
add
mov
fdivrs
ja
ja
movq
inc
mov
pop
push
mov
jae
shll
in
popf
fsubl
mov
in
cmc
std
jmp
test
daa
fstl
sbb
and
mov
test
sbb
jb
test
add
pop
leave
test
in
in
cmpsb
scas
cmpxchg8b
iret
cmp
addr16
pop
pushf
sub
hlt
ja
mov
sub
xor
stos
dec
ficoml
xchg
jbe
stos
pop
mov
sbb
pushl
mov
into
popf
xchg
mov
repnz
bswap
inc
test
fisubrs
out
push
xchg
push
and
jmp
and
stos
mov
stos
outsb
mov
lahf
popw
psllq
mov
pop
add
outsb
or
jle
pop
dec
mov
stos
mov
int
cwtl
mov
stc
and
inc
mov
pop
jo
repnz
mov
aam
dec
push
in
iret
mov
xchg
out
mov
notl
jg
lods
xlat
sahf
ja
mov
pop
push
add
dec
sysret
das
aaa
lods
lcall
clc
mov
inc
repnz
mov
movsb
mov
test
pcmpeqw
scas
xchg
mov
in
out
inc
addr16
or
repnz
into
sbb
leave
call
pop
lods
sahf
out
mov
add
jbe
out
dec
jbe
xchg
push
pop
sahf
or
clts
das
pop
sbb
lods
mov
scas
lods
lods
mov
leave
repz
adc
fcmovne
repz
out
out
testb
in
sar
lods
pop
sbb
aaa
leave
and
or
mov
jmp
daa
idivl
mov
pop
cmp
outsl
pushf
jae
mov
addr16
outsl
jmp
ja
fildll
leave
fdivrs
scas
jbe
push
adc
mov
out
pop
mov
lret
rolb
jnp
jp
scas
cmpsl
mov
inc
pop
lret
push
add
cmpb
dec
xor
or
fwait
or
mov
sub
scas
and
test
icebp
movsb
mov
pop
scas
decl
dec
xor
scas
pop
jns
mov
test
rorb
out
add
leave
leave
jae
vpmullw
decl
mov
inc
fwait
hlt
push
xor
pop
fidivs
xchg
iret
in
sub
outsl
leave
repz
xchg
and
add
mov
mov
ss
sbb
mov
xchg
cmp
ficoms
in
add
sbb
cmpsl
mov
add
scas
inc
mov
pop
push
iret
popf
pop
and
jg
in
jbe
ja
iret
lahf
dec
aaa
jns
cmpsl
push
push
scas
iret
leave
ror
or
mov
mov
sahf
pop
and
in
sub
repnz
add
iret
or
push
adc
sbb
cmp
and
mov
bound
cmp
cs
cmp
cs
les
cwtl
mov
leave
repz
fptan
mov
psubsw
or
jb
pop
outsb
push
mov
mov
and
sub
dec
outsb
and
mov
cmovbe
dec
dec
dec
outsl
ja
dec
dec
dec
dec
test
and
cld
adc
dec
outsb
daa
outsl
das
lea
out
push
movsl
lods
bswap
cmp
repz
jmp
jo
rcrl
or
out
jmp
cwtl
mov
xchg
mov
push
push
jb
pop
leave
call
mov
jae
cmp
adc
xchg
xchg
xchg
mov
rcr
test
mov
divl
les
mov
mov
xchg
and
ds
mov
mov
fs
pop
mov
mov
xchg
pop
mov
mov
mov
leave
andl
fdivl
pop
movzwl
sub
xchg
mov
mov
mov
mov
jns
xchg
xchg
mov
mov
mov
or
jns
out
or
orb
dec
out
iret
nop
push
into
stos
mov
mov
das
xchg
xchg
or
fcmovne
add
pop
fninit
pop
repnz
jb
or
repnz
cmp
inc
mov
pop
mov
mov
jbe
jle
lock
movsb
mov
imul
repz
repnz
push
push
fstpl
iret
repz
in
lock
and
and
and
push
repz
repz
iret
repz
xor
cmp
inc
sub
cvttps2pi
and
sahf
pop
cs
addr16
mov
setne
aaa
jns
pop
popf
pop
movsl
add
dec
pushl
ret
loopne
stos
iret
loopne
stc
iret
mov
je
add
pop
sbb
push
or
cmp
out
mov
ja
lods
repnz
sbbb
leave
inc
mov
or
mov
fisttps
add
and
repz
sub
aaa
add
fisttpl
pop
arpl
outsb
repnz
aaa
ud2
jns
test
pop
lcall
dec
mov
jns
sahf
adc
jmp
lahf
out
sbb
mov
stc
dec
adc
sbb
daa
inc
pop
dec
push
cwtl
mov
insl
mov
repnz
lds
push
add
xlat
test
sbb
cmp
inc
paddd
mov
pushf
dec
bound
pushf
pushf
pushf
pushf
pushf
mov
iret
repz
adc
loop
mov
out
adc
repnz
sbb
ss
jb
in
push
mov
mov
leave
leave
leave
leave
xchg
lcall
fsubp
and
and
and
xor
push
jbe
cmp
outsb
sub
setle
in
xchg
mov
sahf
mov
lahf
das
enter
insl
cmp
mov
xlat
dec
sahf
ja
push
add
clts
ja
xchg
arpl
rcrb
rcrb
daa
push
or
jns
xlat
dec
femms
ds
repnz
dec
push
adc
dec
sahf
ja
push
adc
lar
pop
ja
sbb
sub
pop
ss
xchg
out
sbb
sbb
jmp
into
sarb
pushl
lock
aas
rol
fisubl
mov
das
xor
rorb
rol
push
add
cmpsb
sahf
cmp
and
sub
jb
mov
push
in
lret
setnp
stos
xchg
xchg
or
cs
cmp
daa
mov
out
idiv
push
mov
sbb
push
ret
ds
enter
ja
inc
lret
jae
cltd
dec
pop
xchg
daa
iret
add
in
in
jb
lahf
xcrypt-ofb
cmpsl
scas
xchg
push
jo
psrld
sahf
out
jb
ljmp
or
add
dec
or
jg
and
arpl
decl
int3
xor
addr16
jno
daa
pop
push
sahf
fwait
xchg
mov
xchg
mov
cmp
mov
ds
xchg
mov
add
jb
cltd
dec
out
testb
shlb
push
int
cltd
cmp
jg
das
inc
out
dec
lahf
push
pop
pop
add
popa
imul
daa
push
leave
cwtl
xchg
pushf
movsb
jbe
lods
fbstp
xlat
rcr
int3
pop
fadd
in
inc
xor
in
into
pop
loope
in
lds
pop
pop
lds
lds
mov
dec
push
cmp
cmp
push
jbe
mov
popf
xchg
iret
leave
in
in
lods
cmpsl
mov
sbb
dec
es
iret
fsub
add
inc
bnd
fidivl
pop
movsb
ja
dec
dec
cs
pop
dec
cmp
leave
repz
add
sahf
outsb
inc
and
xchg
fistl
shlb
pushf
dec
mov
mov
movb
jp
iret
mov
repnz
and
add
syscall
push
push
in
gs
outsb
pop
addr16
jb
in
in
jge
mov
xchg
sahf
ds
in
mov
mov
pop
pop
pop
pop
aad
loopne
jmp
test
pop
pop
pop
add
or
pop
enter
pop
pop
pop
sub
enter
pop
pop
pop
pop
enter
pop
bswap
leave
leave
dec
sbb
leave
leave
leave
sbb
pop
push
cmp
leave
leave
adc
jae
jb
test
cmp
xor
cmp
repz
shlb
repz
cmp
scas
leave
push
cmp
out
sahf
out
pop
cmp
cmp
in
in
sahf
sub
ds
push
das
repz
cmp
popa
inc
insb
insb
inc
mov
inc
orb
out
mov
cmp
mov
fcmove
jae
jb
lock
push
push
in
stc
xchg
lret
adc
out
in
xor
loopne
lahf
pop
call
cmp
lret
inc
push
jne
pushf
pop
fisubs
enter
lret
ror
mov
jb
lret
hlt
lret
jp
sbb
lret
fists
xchg
and
fildll
lret
ss
inc
lret
repz
in
lret
push
push
adc
cmp
insl
pop
js
sbbl
iret
repz
sbb
iret
repz
sbb
cmp
lds
shlb
fistpl
push
and
and
and
pushf
mov
adc
mov
sub
sub
pop
punpckhdq
repz
jne
xorb
daa
iret
repz
xchg
mov
in
xor
pop
out
jns
fdivrs
jecxz
cmp
sahf
out
cmp
repnz
xor
aas
sbb
pop
xor
xor
out
jns
push
pop
inc
fisubs
int
fcom
mov
and
push
add
into
in
in
enter
in
je
int
loopne
dec
mov
xchg
es
into
cmp
iret
mov
add
sbb
daa
iret
repz
dec
ss
scas
or
xchg
inc
sub
sbb
daa
dec
xchg
dec
cmp
jno
jns
dec
dec
orl
pop
clts
mov
dec
mov
ror
shll
jg
into
js
fnstsw
sbb
pop
in
hlt
pop
cld
cmp
in
pop
add
or
add
sbb
or
add
lahf
rcr
inc
jb
fadds
cmovg
mov
iret
pop
outsl
inc
repnz
mov
insb
mov
iret
aaa
mov
mov
jbe
mov
rorl
faddl
cmp
repz
or
or
in
fs
or
rclb
push
pop
iret
leave
leave
leave
sub
dec
adc
cltd
mov
push
punpcklbw
ja
cmp
adc
push
sahf
out
sahf
sbb
daa
fucom
jns
mov
repz
cmp
into
and
jns
jns
in
and
cli
syscall
sarl
out
adc
sbb
es
js
xor
cmp
jg
enter
cmp
add
add
in
in
push
add
dec
dec
dec
cmpsb
xchg
loope
adc
pop
dec
adc
inc
ror
repz
in
shlb
push
aas
pop
fmuls
leave
dec
syscall
or
scas
push
shlb
imul
push
shrl
sbbl
out
pop
pop
xchg
shlb
jae
jns
mov
fldcw
cmp
sbb
sbb
cvtdq2ps
out
xchg
push
cli
push
push
add
faddp
jg
and
es
out
daa
iret
and
cmp
and
sahf
es
adc
push
sub
jae
add
jle
scas
or
pushl
dec
inc
add
sahf
pop
dec
lcall
mov
xor
daa
sub
repnz
mov
sarl
add
repz
roll
xchg
push
das
or
adc
add
pusha
faddl
cld
or
push
push
aam
aam
mov
aam
pop
mov
leave
repz
setns
dec
mov
aam
lret
lret
lret
aam
aam
aam
push
add
cld
aam
fdivl
and
aad
orl
hlt
push
cltd
inc
iret
aad
pop
aad
cltd
mov
outsl
aad
or
push
xchg
lcall
jns
mov
mov
ret
lret
cmp
jns
or
cmp
sahf
out
in
push
clc
add
sahf
xchg
testl
jns
sub
xor
cmp
iret
repz
inc
sbb
xor
pusha
pop
sbb
xchg
ficomps
xchg
or
frstor
xcrypt-cbc
cmpsl
lcall
push
add
add
out
roll
fimuls
jmp
hlt
das
decl
or
jmp
jbe
mov
sub
ss
in
inc
dec
push
bound
insl
adc
sahf
xlat
dec
nop/reserved
mov
cltd
outsb
mov
out
movsb
scas
dec
mov
leave
repz
push
rcl
and
xor
mov
sbb
xlat
enter
pop
fcoms
push
in
dec
fisubs
push
sbb
dec
sahf
out
sub
cs
pop
cs
push
xor
sahf
fcomps
xor
fsubrl
mov
mov
aaa
xor
fcmovne
int
pavgw
cmp
leave
in
fbld
push
jne
adc
mov
add
movsl
aas
cmpsl
jmp
xor
cmp
outsl
dec
out
add
aas
inc
push
ds
cmp
rorb
push
aas
into
pop
rorb
inc
mov
aaa
pusha
or
popf
cmp
cmp
push
add
out
sahf
out
add
cmp
pop
or
or
aaa
fldt
or
aaa
jns
adc
adc
adc
and
pop
inc
inc
push
addr16
jbe
push
xorps
jns
out
insl
push
and
jb
pop
jo
push
pop
andb
cmpb
out
jbe
addl
sbb
mov
mov
dec
mov
into
aas
xlat
sbb
les
mov
push
loop
add
jmp
mov
xor
out
sahf
out
and
adc
iret
repz
cld
call
aam
iret
repz
int3
enter
jns
repz
lods
out
in
sahf
movsb
cwtl
nop
mov
repz
fs
push
inc
repz
repz
cmp
sbb
inc
ds
loope
add
push
push
inc
sbb
and
adc
and
add
mov
sbb
std
add
dec
jno
adc
pop
adc
cmp
dec
adc
inc
ss
addr16
jg
pusha
cmpb
push
fisttps
mov
and
jle
test
shll
mov
decb
inc
add
mov
iret
mov
in
sbb
in
call
adc
jle
mov
fidivrl
xor
fcomp
loopne
mov
xor
notb
mov
jg
or
sub
add
popf
imulb
push
in
or
and
jp
adc
inc
aaa
push
jle
pmovmskb
add
mov
lcall
or
mov
cltd
cwtl
add
loopne
mov
or
or
out
adc
jns
out
adc
sahf
out
sbb
in
iret
repz
sbb
iret
repz
sub
enter
lcall
jmp
clc
ljmp
jns
jp
dec
mov
dec
ds
jns
mov
cmpsb
aas
outsb
in
pop
clc
rorb
push
add
ret
les
inc
xor
mov
or
and
fstl
add
push
inc
xchg
es
out
push
xorb
push
adc
icebp
decl
mov
jle
lods
jmp
push
push
xchg
loopne
adcl
pop
daa
mov
stos
negl
imulb
jge
jg
scas
cmp
pop
jg
sti
xchg
dec
stos
out
loopnew,pn
inc
nop/reserved
roll
sub
daa
dec
inc
inc
sub
pop
or
adc
xor
cmp
xchg
push
js
sbb
sbb
loopne
add
lock
and
push
lret
jns
and
out
lret
cld
lock
add
cmp
cmp
fsubl
das
push
or
pop
fs
icebp
or
in
lock
sbb
cmp
sbb
adc
rcrb
push
mov
test
sahf
out
and
sahf
out
and
xchg
das
push
pop
clc
cmp
mov
adc
aam
out
xor
dec
and
je
cld
jg
dec
movsb
aaa
repnz
xorl
jg
cmp
pop
lahf
out
sahf
js
mov
repz
xor
repz
dec
insl
add
lcall
xchg
mov
testl
push
dec
insb
scas
stos
and
add
and
cmp
enter
ds
or
or
ret
pslld
and
adc
mov
xchg
sbb
leave
sbb
into
sbb
rorl
and
sahf
pushl
lds
std
and
sbb
addl
xlat
xchg
inc
push
add
mov
stc
mov
adc
mov
decl
js
inc
outsl
loopne
jmp
or
mov
test
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
out
jecxz
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
call
xchg
push
cmpsb
scas
mov
or
addl
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
lcall
subb
fwait
xchg
and
and
mov
sti
aas
jno
or
mov
pop
fs
dec
lea
call
xor
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
ljmp
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
in
ljmp
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
pushl
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
push
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
call
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
call
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
lcall
and
xor
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
call
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
frstor
bound
sysret
pop
xchg
pop
inc
inc
je
inc
inc
push
dec
pushl
andl
pop
ja
popa
push
out
mov
les
hlt
push
xor
jmp
mov
push
movsb
mov
aad
mov
rclb
mov
sub
call
adc
push
jno
repz
test
ficompl
jmp
mov
hlt
inc
test
adcl
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
push
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
ljmp
or
insb
cwtl
mov
leave
mov
insb
fdivs
jne
filds
mov
fcompl
shrl
push
ficoms
push
xlat
enter
mov
jmp
les
iret
shld
sub
mov
and
or
call
dec
push
sarl
fdivl
jno
add
aad
mov
lcall
mov
push
movsl
in
lahf
xor
mov
js
stc
call
add
or
mov
cmp
fs
add
hlt
push
imul
jmp
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
call
mov
ljmp
cld
fistps
ficoml
gs
aam
pop
popa
mov
jmp
incl
add
inc
movsl
fisttps
fadd
jg
shll
jmp
outsb
xor
mov
sarb
add
in
add
lcall
or
cmp
add
daa
adc
or
and
test
decl
aam
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
call
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
jmp
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
gs
pushl
insb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
incl
mov
aad
mov
call
xchg
shll
push
repnz
addr16
shll
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
sar
fists
addr16
mov
jns
imul
andl
shrb
ss
jg
xchg
ja
int3
add
mov
das
es
lds
or
das
mov
cmpsl
call
ret
shlb
scas
ficomps
ret
es
pushf
mov
insl
add
ss
jmp
addr16
jb
push
pop
or
incl
add
adc
sub
pushl
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
ficompl
int
mov
mul
ja
outsl
ja
mov
out
cli
jo
ud0
mov
push
pop
or
adc
sahf
gs
clc
sar
imul
push
js
or
out
rorb
dec
ret
cmp
cmpsl
notl
pusha
rorb
imul
ljmp
fldenv
filds
ljmp
mov
fidivrs
mov
jmp
pop
sbb
mov
lret
mov
cmpsb
mov
call
mov
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
filds
sub
xchg
jo
push
sbb
aam
push
push
fstpl
aad
push
xlat
fcomp
jns
out
fcmovu
ficomps
jecxz
in
jns
out
jmp
out
sahf
out
hlt
cmc
div
out
sahf
clc
stc
cli
sti
cld
mov
adc
aas
adc
cmpl
or
add
jmp
xchg
mov
bound
cmp
mov
dec
inc
add
bound
fwait
inc
xor
je
push
test
aas
and
cmp
dec
aam
pop
inc
jno
idiv
push
xor
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
xor
xor
bound
xlat
sahf
adc
inc
jbe
pop
insb
imul
ss
gs
jecxz
pop
imul
dec
inc
and
in
cmp
inc
and
inc
das
mov
jno
dec
shll
mov
or
push
pop
or
ss
jbe
add
dec
jp
scas
imul
fmuls
loop
je
inc
lcall
js
sub
or
xor
fidivl
xor
jns
push
pop
imul
dec
insb
or
addb
insb
aaa
and
loope
aas
inc
push
mov
add
push
aas
add
inc
mov
pop
cltd
and
jae
or
int
dec
mov
pop
inc
aas
jbe
add
xlat
inc
inc
jnp
adc
sbb
inc
pop
js
imul
testl
mov
scas
add
mov
iret
int
push
dec
cmp
andb
inc
mov
adc
mov
mov
mov
ja
outsb
jne
pop
insl
inc
push
popa
mov
xchg
jge
xor
cmp
adc
arpl
add
mov
addr16
clc
xchg
into
mov
jo
popf
rorw
jg
pop
subl
lret
dec
cld
push
adc
outsl
add
lods
dec
pop
mov
mov
lcall
cmp
sbb
pop
movsb
sub
push
xlat
mov
arpl
add
mov
inc
jb
andb
dec
popa
jo
sbb
add
mov
outsl
test
inc
sub
push
jno
xor
stos
loop
in
jb
pusha
rcrb
in
nop
pusha
lds
inc
push
cmpb
arpl
or
mov
popa
add
out
mov
je
addr16
xchg
shlb
dec
adc
jb
push
jae
inc
stos
mov
je
inc
outsl
arpl
insl
dec
popa
mov
sarl
iret
inc
push
bound
ja
inc
jbe
cmpsb
outsl
push
bound
addr16
mov
push
dec
xor
bound
xor
sub
add
repz
insl
adc
or
and
xor
dec
adcl
pop
inc
inc
xchg
movsb
sbb
sahf
dec
xor
or
addr16
sbb
sbb
add
mov
push
push
sbb
jg
inc
push
inc
dec
pop
bound
inc
je
jmp
arpl
je
testb
pusha
in
insl
or
xchg
sub
push
pop
inc
sub
fcmovne
push
inc
and
mov
dec
addb
adc
add
dec
adc
push
nop
and
dec
and
ds
lcall
jecxz
arpl
and
cmp
and
jle
mov
lcall
call
stos
in
jb
sahf
push
enter
push
mov
fdivrs
movsl
mov
jb
fbld
je
in
fadds
addr16
pop
jo
sub
decl
pop
shll
mov
jae
stos
mov
jne
add
add
bound
incl
femms
stc
mov
push
lods
sbb
xchg
mov
sbbl
mov
outsl
mov
jmp
xchg
fbstp
adc
lcall
rorl
addr16
cbtw
mov
inc
outsb
lcall
decl
aad
push
pop
mov
fisttps
imul
iret
pop
adc
negb
decl
push
jnp
out
and
xchg
inc
std
ja
mov
xchg
adc
mov
fdivrl
jmp
pushf
mov
or
imul
int3
jo
cltd
mov
xor
cmp
jmp
inc
nop
cld
pop
push
push
rorb
repz
stos
sbb
pop
or
int
fmuls
int3
mov
push
add
mov
sahf
xor
mulb
and
push
inc
mov
mov
lcall
xor
mov
fiadds
iret
sarl
pop
push
stos
div
fwait
arpl
lcall
sbb
sbb
aad
add
fcoms
orb
test
adc
mov
call
fcomip
adc
cmp
jge
dec
xor
or
adc
sub
insb
adc
add
xchg
decl
cmp
in
dec
inc
or
imul
imul
sahf
lods
out
popf
sub
decl
dec
mov
jb
mov
in
adc
repz
and
jbe
testl
dec
adc
movsb
xor
lods
popa
lods
sub
incl
cmp
sbb
sub
mov
push
mov
adc
jmp
cmp
mov
out
insb
xchg
sub
sub
arpl
imul
ljmp
jbe
ljmp
rorb
and
je
nop
lcall
out
fcoms
decl
mov
loop
inc
xlat
or
rcrb
mov
decl
adc
cmpsl
adc
cltd
rcrl
dec
movsl
mov
daa
in
lcall
mov
hlt
xorb
test
sub
sub
push
and
cmp
pushl
mov
mov
sbb
mov
fcomps
xor
push
cmp
incl
fwait
cwtl
push
dec
out
xor
add
mov
fbstp
lahf
fisttpl
imul
call
in
mov
lret
cli
shrb
mov
insl
push
add
pop
xchg
pop
int
dec
sbb
adc
inc
mov
and
pushf
xlat
shll
in
ficompl
inc
lods
int
and
call
xchg
lods
pop
inc
fwait
sub
and
int
pushf
xacquire
mov
repz
ljmp
mov
shrl
je
inc
sbb
and
in
pop
sbb
decl
arpl
and
aam
mov
add
jne
dec
orl
test
mov
iret
or
or
mov
fcmovnbe
sub
mov
pushl
das
and
cmp
imul
jno
pop
sub
ficompl
xlat
ljmp
cli
jmp
xor
fwait
or
jno
pop
jae
dec
cmp
cmp
cld
sbb
pushl
sub
xor
xor
subl
mov
sbb
mov
jno
cmp
lret
ficomps
out
call
cmp
adc
jmp
ljmp
inc
xor
adc
xchg
divl
xor
jg
loop
cmp
adcb
mov
cltd
andb
dec
jmp
xlat
sub
int
jecxz
std
leave
aad
adc
pop
adc
xchg
and
push
lcall
sub
inc
push
cmp
jl
arpl
lods
adc
xchg
ljmp
imul
and
pop
stos
adc
cmp
clc
pushf
imul
fcoms
jb
test
mov
aaa
cmpsb
push
xlat
sbb
push
fidivs
sbb
mov
inc
mov
addr16
adc
out
push
xor
jnp
mov
sbb
das
xchg
movsb
pop
faddl
or
test
and
adc
and
movsl
out
loop
pop
popf
pusha
mov
das
sti
mov
es
aad
mov
loope
adc
pushl
xchg
mov
or
mov
mov
scas
out
sbb
adc
add
cmpsl
xchg
call
xor
lcall
gs
cwtl
shl
inc
xchg
pop
pop
xor
repnz
sbb
cmpsl
adc
call
mov
pop
addr16
test
fisttpl
mov
add
movsl
jne
jmp
pusha
pop
fwait
and
scas
dec
mov
aas
aas
dec
push
dec
pusha
jns
add
mov
fcompl
pop
decl
in
das
mov
xor
ss
jne
xchg
add
push
clc
pop
daa
inc
adc
icebp
jmp
mul
sti
insl
jle
cmpsl
clc
fs
movsb
ljmp
jno
cmp
sub
dec
push
jns
sarb
or
loopne
xchg
xchg
mov
pushl
pop
aas
pop
mov
or
nop
mov
sar
mov
push
ja
fwait
xor
jmp
and
xlat
movsb
stos
sub
test
pop
popa
xor
cmc
mov
cmpsl
fnstenv
xor
jmp
push
lret
xchg
aas
insl
test
add
addr16
sub
push
jne
shrl
cmp
jg
dec
and
xor
mov
push
sub
cmpsl
fs
add
fwait
push
sub
adc
addb
push
sti
sbb
cmp
inc
fsubrl
sti
scas
pushl
jno
inc
jo
je
stc
dec
jnp
enter
stos
sub
mov
push
or
ljmp
in
push
loope
inc
cmp
add
xor
cmpsl
add
popf
xchg
fwait
jmp
push
push
and
out
clc
pop
lret
movsb
es
sub
lcall
and
mov
mov
xor
push
rcll
jle
add
cltd
jmp
rcrl
xorl
pop
push
inc
cmp
add
inc
in
repz
or
pop
dec
cmp
sbb
push
addb
shr
xor
out
dec
push
faddl
iret
loopne
out
in
rcrl
push
pop
pop
xchg
inc
and
xor
cwtl
xor
fdivrp
pushl
mov
dec
xchg
out
push
xchg
movsb
rorl
push
pop
outsl
lock
cmp
mov
addr16
sub
jl
je
push
add
inc
push
adc
js
lcall
mov
daa
dec
stos
fs
or
push
fcmovnb
cmpsl
sbb
cltd
decl
push
stos
or
lret
aad
sahf
dec
andl
arpl
dec
jg
jecxz
loop
pop
push
mov
sar
pushl
aas
orl
inc
jnp
lds
add
ljmp
push
sub
decl
aam
stos
imul
xlat
cld
mov
pop
dec
mov
jno
in
aas
pushl
push
fcmovne
pop
loope
dec
popa
mov
mov
lock
mov
push
jg
ljmp
xchg
clc
sbb
jge
jge
in
loop
enter
cmp
cmpb
out
incl
xorl
mov
inc
xor
lock
clc
jg
decl
scas
ds
mov
mov
lods
mov
ja
test
dec
pop
decl
mov
mov
mov
arpl
dec
ss
cs
mov
pop
lock
mov
mov
jg
clc
jl
movb
inc
int3
sbb
cmp
loop
add
mov
mov
sub
insb
dec
insl
lcall
nop
sbb
inc
fcompl
xchg
les
xchg
push
dec
icebp
cmp
ret
adc
call
popf
pop
addr16
roll
jl
or
data16
fwait
ss
pop
cltd
mov
das
sar
inc
pop
insb
divl
mov
cmp
xchg
or
ss
popa
loope
pushl
mov
shr
sub
jecxz
mov
or
cmp
fstp
or
or
sub
mov
incl
mov
pushf
xor
dec
push
pop
mov
pop
xchg
pop
ss
scas
push
xor
add
inc
add
or
jbe
inc
testb
lcall
cmpsb
bound
fs
scas
out
outsl
sahf
shrl
iret
lock
int3
mov
scas
cli
lcall
xor
mov
sbb
mov
add
push
pop
jge
das
stc
or
ljmp
cmp
hlt
in
icebp
arpl
jl
stos
mov
dec
sub
mov
lcall
cmp
out
in
or
cmpsl
addr16
iret
and
test
mov
scas
cli
dec
mov
pop
movsl
jae,pt
into
mov
xchg
iret
outsb
add
cmp
ljmp
int
sub
sbb
movsb
inc
je
fisubl
clc
jl
cmp
cmpsb
idiv
inc
xchg
andb
ror
mov
mov
mov
ljmp
adc
ljmp
ficoms
or
mov
fcmovne
sti
or
fidivrl
lods
imul
sub
js
xor
jge,pn
insb
leave
test
lcall
pop
clc
xchg
addl
mov
mov
push
push
jb
in
adc
inc
xchg
cld
ljmp
aaa
stc
insb
pop
mov
mov
pop
mov
xchg
cmc
sarl
les
lock
jbe
popf
arpl
mov
sbb
incl
sbb
add
mov
fcoms
stos
sub
jno
fs
xchg
pop
pushl
sbbb
pop
push
push
repz
xorb
addr16
decl
dec
sbb
mov
xlat
pop
enter
xor
fcomip
jb
es
push
imul
incl
cmpl
lock
cmpl
lock
or
jl
lods
xchg
aam
add
or
and
pushl
arpl
pop
push
imul
mov
pop
lcall
mov
mov
jno
ljmp
xor
std
xchg
mov
subb
sub
loop
jp
adcb
fimuls
in
call
sub
fs
scas
lcall
jl
jo
mov
repnz
add
fnstcw
shll
icebp
ss
sub
iret
aam
xchg
dec
inc
cmpsb
jnp
out
rclb
pusha
shlb
lock
jnp
mov
popl
fcoml
xchg
lcall
and
out
pop
insb
into
dec
loopne
mov
cs
call
aam
or
inc
sarb
rclb
jo
sbbl
incl
scas
cmc
gs
and
pop
mov
push
push
in
mov
movsl
pop
jns
push
in
sub
clc
aas
cmpsb
pushf
xor
js
testb
scas
xor
pop
movsb
jmp
mov
decl
jg
jnp
add
mov
inc
mov
fidivs
mov
mov
mov
cmp
insb
data16
cmp
fwait
xchg
mov
addb
cmp
cwtl
jle
mov
push
or
mov
jg
mov
and
scas
jns
lret
lret
cmpsb
jecxz
lcall
push
mov
push
cmpsb
popa
mov
adc
pop
push
cmp
movsb
lds
imul
std
sub
xor
pop
adc
in
jmp
xor
mov
and
and
rcll
ja
out
testl
mov
jmp
testl
xor
popf
push
sbb
sbb
dec
cmp
aaa
std
lcall
ljmp
mov
in
mov
scas
xor
ljmp
loopne
jp
xlat
fistl
inc
fwait
and
and
jns
lcall
sbb
addb
sub
pop
mov
and
clc
decl
cli
cmp
sbb
push
cmp
sub
clc
loope
paddq
mov
fildll
xor
dec
mov
sub
test
test
xchg
mov
ret
mov
mov
xlat
pushf
adc
ljmp
pop
mov
popa
adc
inc
add
aad
addb
xchg
xchg
cld
call
insl
dec
incb
and
lcall
xor
loop
pop
dec
lcall
jns
lods
add
xlat
mov
insb
jecxz
aaa
sahf
test
rcll
sub
ljmp
addb
push
bound
dec
dec
jmp
shlb
cli
jb
pushf
xor
sbb
jp
mov
mov
loop
jbe
aas
adc
sbb
cmp
stos
mov
mov
jmp
cmp
sbb
imul
xchg
fmull
dec
pop
outsb
out
ja
out
adc
inc
popa
mov
dec
lcall
test
je
jp
les
mov
inc
cmpsl
pop
dec
cli
push
and
js
xor
loope
icebp
mov
in
or
sub
adc
mov
iret
test
xchg
andb
ljmp
ror
movsb
mov
mov
pushf
js
fildl
aaa
jno
das
lods
test
outsl
lcall
cli
in
fucomip
dec
loopne
loope
repz
fdivrp
mov
mov
dec
pop
xor
lcall
cwtl
xchg
mov
push
xchg
inc
mov
stos
lods
mov
fistl
je
pop
jg
dec
fstl
push
enter
and
lret
push
jg
push
fcoml
fstpt
mov
jmp
lahf
frstor
cs
stos
xchg
ja
repz
stc
add
pop
ds
in
lcall
inc
jne
cmovae
mov
mov
arpl
loop
call
sbb
mov
fcomi
mov
cmp
call
fildll
nop
jo
jg
fisttpl
dec
jge
fsubrl
and
icebp
mov
call
std
dec
popf
xor
mov
sbb
dec
hlt
push
loope
cmp
adc
aaa
aaa
mov
incl
mov
hlt
out
xchg
jge
and
out
iret
bound
out
dec
lahf
or
or
fnstenv
cltd
pushf
lods
test
jg
insb
jo
add
jno
sbb
cmpsl
ljmp
pop
cli
dec
hlt
add
fndisi(8087
pop
dec
adc
test
inc
adc
xchg
mov
arpl
mov
sub
lcall
into
mov
cmp
in
xor
cmpsb
add
mov
cmpsb
fcmovb
int
push
loope
outsl
inc
movb
mov
push
fs
rcl
mov
iret
sbb
mov
aad
mov
loopne
mov
test
enter
fdivrl
stos
insl
or
stos
ljmp
lods
cmpsb
pop
scas
mov
cs
cs
push
lcall
sarl
cmpsb
xchg
test
xchg
hlt
xchg
loope
icebp
mov
movsb
jne
cli
je
mov
test
jp
mov
decl
sbb
xor
jno
movsl
jp
lock
out
push
jne
hlt
mov
cmp
mov
ja
xchg
xor
cmpsb
test
push
mov
inc
int
mov
stc
in
push
cwtl
pop
std
mov
adc
inc
mov
mov
decl
jb
inc
ljmp
mov
ds
push
je
in
in
mov
lcall
repnz
push
jle
pushf
aaa
sbb
cmc
adc
movsl
aas
lcall
ljmp
incl
or
mov
and
lds
std
lcall
decl
rcll
mov
and
test
add
xor
stc
bound
mov
mov
insb
ljmp
je
jae
xchg
fimull
in
ss
adc
out
pop
cmp
xlat
pop
loop
cmp
sbb
pop
dec
sbb
pop
pusha
aas
xchg
loope
dec
xor
pop
xchg
inc
pop
ret
bound
pop
dec
popa
inc
jo
mov
stos
jbe
pop
jne
call
sbb
push
in
mov
mov
ret
lret
loope
iret
xchg
push
add
sub
fcmovbe
filds
and
dec
insl
mov
or
imul
ljmp
xchg
ljmp
mov
mov
inc
mov
fistps
sbbl
and
jmp
and
imul
gs
xor
test
lods
popf
jne
mov
lock
cmpsb
or
std
dec
add
imul
xorb
in
lcall
push
adc
jmp
pop
cmp
or
repnz
push
adc
push
mov
mov
mov
ljmp
inc
xor
pusha
ja
jle
xchg
pop
faddl
daa
push
push
or
lret
outsl
mov
cmp
jne
rol
adc
stos
loopne
lods
and
lret
cld
sub
sub
mov
mov
decl
bound
push
cmp
and
int3
and
clc
jmp
shlb
xchg
mov
in
imul
ss
dec
push
imul
clc
jb
scas
xchg
sbb
adc
inc
mov
decl
mov
andb
xor
mov
mov
icebp
lods
jle
xor
add
inc
jmp
inc
jmp
shr
or
adc
dec
fstpl
rclb
mov
inc
sub
ljmp
fs
enter
dec
dec
aam
xchg
add
fwait
rclb
xor
mull
adc
push
adc
jmp
outsl
push
cmc
pop
cwtl
jb
push
push
stos
push
mov
push
push
cld
ljmp
sbb
xor
imul
loop
outsl
mov
ljmp
cmp
ss
addr16
push
shrb
pop
mov
or
mov
ljmp
out
mov
inc
pop
stos
or
jp
push
cmpsb
and
roll
xor
cmp
sti
cltd
mov
inc
adc
jno
mov
sbb
xchg
adc
fcoms
scas
jne
and
in
js
clc
mov
mov
jg
fbstp
and
adc
into
in
loopne
bound
scas
xchg
pop
adc
or
pop
jge
and
lcall
popa
push
jnp
lcall
addr16
or
loop
dec
inc
mov
ror
dec
clc
push
sbb
stos
fsts
loope
xor
sahf
lahf
call
cmc
push
mov
dec
fcomip
fisubrs
xor
lret
stos
cmp
push
fbld
adc
push
loope
cmpsl
outsb
dec
push
out
in
incl
test
push
add
inc
iret
mov
sub
nop
and
in
popf
add
rorl
pushl
xor
dec
cmpsb
out
push
js
push
xor
adc
scas
int3
inc
lods
push
leave
addl
icebp
cmc
jmp
ljmp
rcrb
call
cmp
jmp
sahf
xchg
sarb
lods
gs
mov
cmp
es
inc
call
cld
jmp
pop
jg
push
scas
jo
push
lcall
inc
xchg
ret
xor
cmp
decl
aas
mov
mov
or
aaa
pop
xchg
push
fildl
test
jl
push
jmp
jmp
pushf
mov
mov
xchg
mov
mov
fadds
aam
sbb
ljmp
cmpsb
test
rorb
push
sbb
rorl
shll
jb
xchg
add
js
nop
cli
jmp
dec
dec
rcrb
jmp
insl
inc
mov
push
outsl
jmp
outsb
outsb
mov
cli
fcomip
das
in
test
pusha
pop
shlb
ljmp
call
push
setnp
cld
test
repz
lret
aad
mov
mov
cmp
sub
jmp
ljmp
cli
sbb
cmc
out
dec
stc
out
xchg
fwait
mov
jmp
adc
pop
xor
fildl
aam
mov
subb
ret
dec
ds
pop
mov
cmp
sbb
decl
in
push
loope
iret
or
test
cwtl
ja
add
testl
inc
cmp
hlt
inc
and
pushl
dec
add
sbb
jbe
addr16
sti
fsubs
xor
call
lcall
add
addr16
pop
xchg
in
cmp
fwait
std
sub
jmp
stc
xchg
int3
cltd
or
cvtps2pd
aad
lds
inc
int3
fmul
push
xchg
and
sar
jmp
dec
fsubl
xlat
jle
incb
and
xor
lds
in
cmc
jp
lds
dec
cmp
incl
js
xor
push
mov
inc
fistps
add
sub
jge
jnp
ljmp
movsb
loope
decb
mov
jb
loope
sbb
adc
sti
mov
xchg
pop
sbb
jmp
andb
lods
into
dec
add
mov
into
dec
in
cli
mov
mov
cli
call
sti
sarl
out
mov
outsl
cwtl
mov
push
adc
out
pop
jae
shrl
cli
dec
je
nop
mov
cld
and
mov
add
or
incl
cld
adc
mov
arpl
pop
stos
ja
jl
mov
outsb
decl
jecxz
and
xchg
and
xorl
jge
xchg
cmp
mov
jmp
adc
cwtl
repnz
fstl
aas
pshufw
out
iret
jl
scas
jnp
popf
add
sbb
pushl
scas
xchg
icebp
bound
add
cmpsl
imul
or
xchg
int3
push
aam
xor
incl
pop
mov
jp
push
pop
andl
or
push
mov
aam
decl
jnp
push
cmp
push
fistpl
xchg
ja
pop
jecxz
push
mov
lea
jne
cmpsb
push
stos
jnp
divb
add
in
adc
and
bound
jmp
push
dec
or
mov
int3
aam
repz
insb
dec
loopne
or
inc
push
mov
add
incb
xchg
sarl
roll
dec
scas
in
dec
mov
mov
dec
addl
jbe
insl
es
sub
mov
mov
sub
jg,pn
jmp
dec
out
or
ret
inc
jecxz
jno
shlb
xor
vpaddd
mov
sbb
or
inc
loopne
and
cli
ljmp
mov
xchg
stc
jg
mov
and
aad
pushl
inc
icebp
shrl
pop
iret
mov
enter
xchg
stc
or
push
pop
pop
dec
and
jge
inc
push
dec
fsts
cmpsl
adc
adc
loope
dec
jb
mov
inc
mov
sbb
jne
jnp
pop
jno
pop
mov
jne
and
int3
push
jp
in
out
xlat
cltd
push
mov
and
lock
rcl
mov
outsl
sbb
scas
into
push
mov
pop
sub
dec
es
sub
loop
into
aad
push
mov
and
add
fwait
xor
call
pop
xor
push
ss
fs
dec
ds
sub
add
pop
pop
mov
enter
les
add
mov
out
lret
leave
inc
cltd
sbb
decl
and
xor
jle
sub
sbb
pop
or
pushl
xor
je
test
arpl
ss
jae
xchg
outsl
clc
call
outsb
cmp
pop
and
add
or
and
or
hlt
sub
mov
decl
rcr
sahf
lock
in
push
lods
insb
fcompl
mov
decl
js
adc
rorb
dec
scas
xchg
ds
pop
dec
mov
jb
arpl
fcomip
inc
push
jae
sahf
fs
push
xchg
push
fbstp
xor
jnp
or
inc
call
adc
cmp
aas
xor
bound
clc
lock
cli
call
xor
add
pop
cli
cmc
cmpsb
rclb
test
icebp
aaa
and
or
popa
call
std
scas
test
add
js
dec
outsb
cmp
and
pop
xchg
cs
and
pushl
lea
mov
xor
rcpps
pop
push
push
cmp
decl
sbb
das
jae
int3
movsl
lea
test
scas
adc
dec
not
out
push
fidivrl
fiadds
and
jg
push
mov
mov
xchg
mov
cld
in
ret
call
cmp
cmp
js
mov
sub
mov
mov
stc
pushl
dec
pop
adc
push
jne
push
add
movsl
sbb
out
es
sbb
lcall
mov
dec
insl
or
cld
inc
das
sub
sbb
rcl
insb
aam
mov
inc
out
and
sub
das
clc
incl
lret
xor
sub
nop
sub
fnstcw
lcall
int3
jnp
add
pushf
mov
push
movsb
mov
in
ljmp
lahf
cmpsb
or
fbstp
jbe
sub
sub
dec
cwtl
push
xlat
mov
ljmp
sysenter
push
lcall
push
mov
orl
data16
lret
faddl
sbb
jmp
pop
icebp
js
daa
das
mov
inc
jp
mov
fs
bound
mov
fists
sar
mov
mov
loopne
jg
fwait
mov
insl
ds
sbb
push
sbb
and
xor
scas
inc
mov
or
and
jbe
movsl
cltd
in
cmp
mov
movsl
popf
adc
pusha
pushf
movsb
and
mov
fisttpl
pop
xorb
rclb
out
or
xor
cmpsl
dec
fstpt
sbb
dec
fwait
pop
ljmp
loope
dec
into
mov
xor
push
incl
ret
sub
in
pop
push
mov
loop
out
xor
ss
sbb
mov
or
pop
cmp
repz
cld
sub
daa
ret
sub
cmp
jp
jge
inc
sub
and
push
sub
neg
jne
and
dec
and
mov
pop
aaa
mov
xchg
inc
lahf
or
add
mov
jo
clc
imul
mov
push
test
or
and
pop
lods
mov
aaa
push
cmp
adc
mov
cmp
scas
push
test
jns
push
mov
lds
jg
decl
cmpsb
mov
fwait
dec
adc
or
add
push
outsl
mov
call
mov
mov
mov
jl
xchg
ret
mov
and
xor
adc
xchg
jmp
jno
mov
cmp
test
fstps
cmp
into
or
sub
fisubs
jo
mov
icebp
fdivrp
std
pop
out
fs
fidivs
scas
ret
fbld
or
mov
mov
dec
aaa
outsl
sahf
mov
jl
mov
xchg
jecxz
js
leave
pushl
subl
int3
nop
cmp
or
sbb
add
add
inc
lcall
rolb
push
sub
ret
jmp
pop
add
cmp
rcl
mov
pop
into
add
ja
pop
push
lret
or
cmpb
jnp
call
cld
fcomip
mov
lcall
and
mov
clc
jae
mov
dec
outsl
inc
insb
icebp
mov
push
fs
pop
movsl
mov
sbb
cmp
fldenv
adc
mov
sar
lcall
data16
pop
inc
cmp
cli
lret
push
repz
orb
add
decl
mov
push
out
xor
or
sbb
das
mov
push
nop
sub
cli
stc
icebp
mov
mov
sub
lods
push
pop
jge
or
cmp
aaa
dec
mov
inc
mov
lret
mov
cmp
ficompl
and
icebp
push
xor
rol
sub
and
inc
sub
roll
pop
pop
xlat
mov
rclb
loop
addb
pop
scas
negl
cwtl
jg
adc
dec
leave
push
jae
push
or
xor
pop
dec
push
je
lock
push
call
mov
or
fiadds
sub
addb
jmp
test
lcall
add
insl
bound
loop
insl
jns
push
xchg
inc
arpl
sar
ljmp
and
testb
lods
iret
fs
test
pop
bound
and
mov
je
mov
pushl
outsb
xor
ret
jae
fsubrs
pop
rcll
sbb
ja
mov
mull
inc
lock
dec
lret
pop
mov
ror
add
leave
out
and
std
jae
cltd
and
inc
jecxz
mov
call
cmp
push
gs
in
push
xchg
mov
imul
push
xchg
dec
mov
push
enter
jle
mov
call
andl
dec
outsb
shrb
aaa
fists
xor
repz
or
cmp
or
mov
decl
sub
push
fcmovb
dec
pop
repz
adc
inc
push
stos
inc
sbb
lret
jbe
call
imul
scas
push
xlat
mov
arpl
test
xchg
enter
add
inc
in
inc
sbb
lcall
fldl
popa
test
inc
lretw
ret
xlat
int3
cmp
call
pop
add
out
pop
pop
adc
or
mov
push
jne
inc
jmp
cmc
cld
inc
pop
andb
add
loopne
cmp
pushw
push
jmp
pop
adc
sar
test
dec
cmp
incl
jb
sbb
ret
aaa
ja
or
push
dec
xor
icebp
push
mov
popf
out
iret
cmpsl
push
cs
adc
inc
pop
scas
or
pop
cmp
mov
nop
lcall
repz
mov
shrb
add
scas
push
fwait
sub
push
lahf
loopne
iret
cld
das
cli
dec
sub
cld
xchg
or
jmp
clc
dec
stc
and
ja
fsubl
or
sub
push
in
iret
jno
sub
inc
aas
dec
add
nop
jmp
ret
or
jp
cmp
xchg
mov
hlt
xchg
push
push
int3
lea
mov
mov
mov
sub
sarl
hlt
adc
and
xchg
aas
ja
or
adc
xchg
rcrl
dec
mov
xor
add
stos
int3
cmp
jb
pop
pop
fmul
aad
stc
xchg
jbe
and
lods
dec
cmc
jg
ds
cmp
in
push
sarl
jg
push
fidivs
gs
dec
xor
fstl
cwtl
loopne
and
dec
jno
ja
jg
push
pop
dec
mov
outsl
pop
jl
ret
pop
sahf
jmp
or
push
cmc
sar
or
mov
repnz
adc
aad
scas
mov
aas
add
sbb
mov
int3
sub
lcall
in
ret
sub
dec
sbb
adc
lahf
adc
push
out
inc
and
mov
jb
xchg
add
outsb
jmp
cmp
rorb
jle
add
std
dec
fdivp
dec
sar
call
cmp
nop
mov
lret
or
jmp
mov
call
movsb
mov
pop
add
imul
pop
jbe
inc
call
ret
loop
enter
aad
xlat
xchg
jno
data16
dec
das
scas
or
incl
push
jl
lods
into
xchg
je
cmp
aas
sbb
out
adc
adc
sbbb
imul
ljmp
or
mov
dec
sub
adc
mov
sbbb
jg
or
pop
jae
add
orb
lcall
adc
xchg
ljmp
xchg
and
jno
xchg
divl
in
imul
bound
jp
fnstsw
lea
mov
imul
ljmp
in
mov
adc
ret
pushl
fcoml
dec
push
cs
in
and
dec
or
adc
fwait
pop
pop
decl
cmpsl
jns
popa
push
inc
imull
xchg
add
js
sar
incl
jle
fstpl
idivb
dec
ja
repnz
and
push
mov
test
decl
in
sbb
cs
lds
stos
or
popa
aas
adcl
mov
call
loopne
mov
push
jae
adc
into
inc
cmp
incl
sub
dec
imul
pop
jge
ds
incl
jns
xchg
addr16
pushl
cmpsl
pop
xor
rclb
cltd
sub
fdivrs
jb
filds
mov
cmp
sbbb
cs
xor
xchg
mov
jmp
mov
push
inc
es
add
mov
cmp
xor
incl
lods
pop
jae
dec
je
lahf
sti
push
sbb
hlt
outsl
or
jle
adc
inc
loop
incl
fidivrs
mov
adc
xor
inc
cmp
inc
sbb
lahf
shlb
jmp
xchg
push
enter
xchg
jge
shl
mov
jo
in
andl
xchg
call
repz
mov
mov
cwtl
rolb
ljmp
or
dec
jno
hlt
or
insb
sahf
repnz
jl
pop
cmp
in
mov
mov
hlt
xor
outsb
and
inc
mov
lret
jl
sbb
call
inc
hlt
sbb
push
stos
cmp
pop
adc
inc
inc
xchg
call
aas
in
push
fsub
addr16
dec
test
mov
mov
mov
gs
pop
push
sub
xor
adc
jge
lahf
lret
mov
add
adcb
leave
or
add
ljmp
push
mov
push
cmpl
pushf
mov
pop
sbb
cmp
pop
inc
negb
cmovbe
dec
sbb
negl
sysret
mov
jg
xor
xor
mov
fldenv
inc
xchg
cld
scas
frstor
xor
loope
inc
xchg
mov
movsb
out
jb
mov
pop
imul
ljmp
stos
push
push
mov
jle
xor
int3
movsb
dec
out
cmpsl
imul
fsubr
add
popf
or
push
cwtl
or
dec
idiv
popa
cmpsb
jb
fnsave
pop
frstor
addr16
cmp
mov
add
mov
pushf
mov
test
xchg
jae
pop
sub
decl
imul
inc
push
xor
in
jecxz
mulb
repnz
les
mov
scas
incl
in
loopne
cltd
xchg
notl
xchg
mov
or
push
xor
inc
incl
mov
pop
out
sub
popa
pop
rcll
cwtl
pop
fisubrs
jns
sahf
sbb
std
dec
fidivs
sbbl
cld
call
pop
push
xchg
mov
xor
xchg
arpl
xor
xor
ds
call
xchg
jno
inc
mov
sbb
icebp
jle
jae
cmp
push
or
pop
jmp
cmp
sbb
je
sub
es
pop
mov
dec
mov
imul
dec
mov
decl
inc
outsl
popf
ljmp
fdivrs
lods
adc
push
mov
ljmp
shlb
in
je
cmp
jns
mov
scas
pop
adcl
pop
xchg
mov
ljmp
stc
adc
out
jo
or
outsb
shlb
int3
or
and
loop
mov
clc
cmpb
aaa
jl
sbbl
in
incl
xchg
stos
jg
or
sbb
enter
ret
lods
jmp
test
xchg
xor
and
pop
hlt
ljmp
mov
das
inc
add
jns
or
cs
dec
or
inc
movsl
ss
std
incl
add
dec
add
adc
pop
mov
lods
out
cld
or
add
mov
and
cwtl
or
imul
add
jle
out
and
xlat
incl
cld
xor
dec
inc
outsb
dec
cltd
lcall
sub
xor
dec
and
jmp
or
lds
mov
lahf
push
sub
fwait
decb
adc
mov
idivb
leave
pushl
cmp
fiadds
inc
jns
cmpb
push
adc
subb
mov
add
push
fldln2
fdivl
ret
imul
pop
adc
js
decl
mov
mov
mov
insb
mov
popa
out
sti
xchg
push
fildl
repnz
mov
shll
daa
nop
lcall
inc
push
dec
and
push
loope
adc
xor
sub
jb
scas
add
shll
sbb
jp
sarb
test
add
jne
pop
cmp
out
mov
mov
jmp
cmp
add
and
outsb
jae
dec
and
mov
xchg
lods
xor
iret
test
nop
testb
pop
jmp
dec
sub
out
adc
ljmp
lret
pushf
es
jle
dec
shll
add
pop
clc
cmp
lret
adc
dec
ficompl
in
cltd
sub
icebp
inc
push
sahf
jge
shlb
bound
rcr
cmpl
in
dec
xbegin
ljmp
cmpsl
mov
mov
or
push
inc
incb
add
sbb
lcall
ljmp
popw
fidivrl
inc
fadds
lods
xor
lods
cmp
call
cli
or
pop
push
mov
movsl
in
out
sub
add
loopne
in
cmp
inc
push
mov
incl
cmpxchg
or
add
testb
dec
jbe
stc
dec
push
aaa
xchg
decl
fimull
cmpb
decl
lret
xchg
int3
mov
xchg
xor
jmp
or
test
inc
sub
mov
push
inc
jns
fs
mov
ret
test
push
jmp
fistpl
xor
into
mov
push
mov
shl
sub
mov
cmp
pop
rcrb
cli
push
pop
sub
xor
int
mov
lods
out
or
add
mov
or
ljmp
clc
test
pop
mov
in
jl
mov
add
xor
sti
cltd
inc
sub
cmp
sub
shlb
sbb
mov
lahf
xchg
es
cmp
iret
mov
inc
mov
or
cmp
call
incl
cld
xchg
lret
or
and
inc
cmp
cmp
dec
out
push
dec
into
adc
fcompl
sub
js
lea
insb
jle
hlt
es
imulb
push
jmp
and
mov
push
push
lods
add
cmpsb
sbb
fldenv
scas
in
popf
aad
loopne
cld
jo
dec
mov
call
push
push
std
push
xor
cld
pushl
mov
xchg
sub
jecxz
sahf
cmpsl
movsb
push
mov
lea
pushl
movsb
xor
xor
sub
add
push
lods
lock
add
cmpsb
mov
lcall
push
pushl
sti
push
push
inc
cmc
jae
mov
xor
sbb
mov
int
dec
hlt
lcall
mov
xchg
sbb
in
lcall
pop
scas
mov
push
lock
loope
or
sub
nop
hlt
pop
xchg
jmp
movsl
icebp
sub
inc
dec
pop
and
int3
jmp
pop
cs
jne
jnp
bound
inc
sbb
shld
decl
adc
lret
or
xlat
in
loopne
shrl
jae
aam
cltd
inc
sbb
or
mov
fwait
ljmp
xchg
add
loop
mov
jno
inc
cmp
in
mov
fsubr
jl
std
ss
sub
ljmp
shr
aad
inc
loop
negl
int3
fwait
push
test
imul
loop
jmp
mov
adc
cwtl
in
negb
cmp
xor
sahf
ret
fistps
clc
mov
jno
cmpsl
sub
pop
cmc
std
or
loop
push
hlt
jg
push
mov
inc
sub
push
xchg
xlat
pop
popf
xchg
lods
popf
lds
pop
dec
xlat
outsl
sub
pop
push
xchg
bndldx
dec
decb
lret
fsubrp
mov
in
decl
mov
js
faddl
sti
loopne
or
mov
movsb
adc
jo
and
cmp
lret
gs
and
dec
mov
push
nop
jl
jae
sub
in
cmp
and
outsl
je
sbb
or
clc
ja
cld
and
mov
fcomip
js
mov
xchg
ja
xchg
lcall
dec
pop
add
movsb
push
lret
fwait
push
orl
mov
iret
mov
mov
mov
addr16
sbb
push
daa
fisttpl
lock
adc
jnp
add
lcall
arpl
bound
jo
subl
pushf
enter
in
mov
push
call
incl
jle
push
pop
mov
xlat
jp
push
lahf
ljmp
push
test
inc
add
or
pop
cli
in
pop
push
enter
fisubl
adc
mov
stc
ficompl
cld
xor
pop
es
mov
or
cmp
nop
popf
test
ljmp
sbb
outsl
fadds
enter
repnz
ljmp
push
push
out
fbstp
pop
mov
jns
lods
push
pushf
mov
sarb
sbb
mov
pop
sbb
xchg
pop
fidivl
mov
incl
inc
js
fildll
cwtl
or
add
jno
mov
shrl
ljmp
adc
jo
enter
push
pusha
adc
fwait
xlat
lea
insl
pop
out
js
add
sub
dec
cmp
sub
add
popf
loopne
repnz
pop
leave
pop
test
mov
aam
ljmp
dec
cmp
les
bound
inc
mov
mov
rclb
push
aam
ljmp
xchg
mov
xlat
mov
jle
push
mov
aaa
push
rcr
pop
xchg
lock
mov
xchg
inc
push
cmpb
arpl
add
cld
push
out
jns
clc
pop
scas
repnz
jecxz
push
push
cli
call
psubsw
mov
pushl
adc
js
mov
push
sti
pop
insl
mov
cmp
ds
cmpsl
adc
jg
sbb
testb
xchg
mov
pop
push
xor
pop
pop
cmc
out
cmpsb
mov
cld
call
outsb
adc
pop
pop
push
scas
mov
test
int
cltd
fmull
jmp
loopne
pop
mov
adc
sub
fnstenv
mov
mov
repnz
jmp
js
pop
dec
inc
les
nop
movsl
xor
push
jg
ljmp
int3
ja
inc
fnstsw
cmp
mov
out
lods
mov
cli
fcomip
std
rcrl
jl
sub
mov
and
pop
insl
sbb
aas
out
lret
pop
pop
cmpb
imul
jp
clc
jmp
mov
sbb
je
sar
aas
pop
dec
mov
mov
aam
popa
sub
cmp
jg
aas
repz
sbb
dec
jmp
adc
push
and
push
dec
sbb
xchg
inc
pop
inc
repnz
cwtl
mov
dec
es
mov
incl
cmp
cmp
sti
mov
sub
jae
jg
add
cld
sbb
nop
push
sub
lcall
pushl
jmp
out
ret
fwait
in
dec
jnp
xor
dec
xchg
pop
fs
pop
xor
sub
jecxz
into
cmp
xor
cltd
inc
pusha
adc
mov
aam
out
sub
fwait
cwtl
stos
lcall
arpl
aad
mov
jnp
stos
aaa
push
outsb
nop
xor
sbb
push
movsl
add
stos
ret
push
dec
push
pop
clc
filds
xchg
scas
scas
ljmp
mov
adc
mov
pop
pop
cld
mov
sub
mov
scas
push
or
push
cs
jl
xor
mov
fcos
incl
addr16
cltd
pop
jg
mov
ret
mov
mov
fstpl
cmp
or
cmp
sbb
ljmp
pop
or
test
int
jnp
xor
test
cmp
cld
push
dec
mov
sbb
or
dec
fstps
ljmp
je
jg
xchg
dec
and
sarb
fdivrl
movsl
pushl
call
jne
into
scas
xor
push
bound
adc
outsl
dec
inc
sahf
adc
fsubp
aad
decl
lock
les
scas
mov
adc
lea
das
sub
mov
shrb
cli
jecxz
sahf
inc
sbb
sbb
add
shrl
push
xlat
adc
subl
sub
mov
sbb
sub
sub
sbb
ret
inc
jne
cmpsl
mov
mov
add
dec
aas
pop
mov
call
dec
into
mov
and
decl
and
mov
sub
adc
mov
cs
pushl
mov
sub
cmc
push
in
mov
mov
cmp
or
xchg
jnp
out
addr16
lcall
push
xchg
sub
pop
dec
inc
or
jo
test
aam
pop
shlb
push
incl
lahf
lcall
xchg
aad
ret
stos
lahf
xor
sbb
cmp
enter
out
push
jmp
ds
shrl
std
xor
push
mov
rorb
inc
in
shrb
insl
sub
imul
push
lcall
xor
xor
jl
sbb
cmc
jecxz
pop
and
scas
popa
iret
incl
cwtl
dec
xor
xchg
fsubl
emms
mov
mov
fisttps
fs
pushl
sahf
cmpl
in
cmp
push
movsl
cmp
nop
mov
cmp
fisttps
mov
imul
cmp
mov
add
movsl
cmp
inc
pop
mov
pop
adcl
test
inc
enter
xchg
push
add
pushl
dec
dec
and
cld
pop
xchg
adc
fcompl
daa
test
ret
fstl
pop
or
nop
aaa
out
clc
lcall
nop
lret
and
add
and
lahf
sub
jb
scas
icebp
push
js
decl
test
sub
fists
in
mov
call
ja
decl
inc
xor
adc
int
mov
lret
repz
jmp
jl
push
inc
mov
cmp
adc
in
clc
dec
ficoms
sbb
stc
aam
hlt
mov
in
mov
es
outsl
fmull
mov
xchg
sub
mov
clc
jecxz
scas
and
hlt
ja
mov
outsb
addr16
jecxz
fiaddl
jg
fmul
stos
pop
test
push
add
push
adc
loope
cld
dec
jmp
xlat
shlb
daa
in
aas
fdivl
xchg
sahf
pusha
sub
jecxz
pop
fisubrl
clc
imul
stos
dec
mov
dec
add
pop
lcall
hlt
inc
int3
mov
dec
cmc
into
imul
jmp
dec
or
xchg
aam
or
add
mov
mov
xchg
rorb
cmpsl
dec
xchg
sbb
ljmp
pop
test
test
leave
enter
jo
lret
push
sub
lcall
icebp
pop
or
cmp
hlt
push
enter
add
lcall
mov
mov
inc
cmp
iret
ret
inc
shrl
dec
sbb
popa
cld
push
jae
adc
ss
jne
fucomi
xor
jg
push
dec
mov
in
or
inc
sbb
jne
xchg
cmp
mov
cld
incl
mov
inc
fs
jg
sbb
idivl
scas
dec
imul
dec
push
jl
jns
jg
sub
ss
scas
int
sub
pop
mov
pop
scas
dec
ljmp
shr
push
fwait
shlb
in
cmpsl
movsb
mov
leave
lock
cs
incl
and
scas
mov
fistl
addl
sub
jge
cmc
add
sbb
mov
xchg
stc
mov
lret
decl
fistpl
test
fsubrs
clc
loopne
shrb
jmp
jl
pop
icebp
imul
and
jg
sub
lret
and
mov
incb
ret
je
adc
fistpl
lcall
enter
mov
aaa
lret
test
inc
in
xor
sbb
testb
hlt
adc
cmpsb
jle
or
push
fisubs
inc
stos
loope
dec
xor
das
cld
or
lret
clc
fistpl
pushl
loop
fsubl
loope
test
jno
out
fstl
test
out
lcall
dec
xlat
xchg
std
shll
xor
vmovhps
scas
or
loope
stc
in
outsb
enter
ljmp
cmp
and
clc
push
mov
imulb
imul
and
push
xor
xor
cmp
or
and
scas
dec
mov
pop
or
decl
bound
or
mov
popa
imul
mov
pusha
fildl
lods
xchg
aaa
cld
ljmp
into
adc
loopne,pn
cmp
sarl
mov
add
ljmp
pushf
sub
pop
rcl
cmp
cwtl
insl
or
pop
dec
popf
push
mov
rclb
push
mov
lcall
test
push
dec
jle
adc
adcl
adcb
ja
adcb
inc
cs
sbb
mov
mov
mov
aad
xchg
or
ss
jge
std
xor
adc
bound
int
bound
or
xchg
inc
pushl
adc
out
faddl
icebp
fdivs
test
imul
adc
in
test
gs
lcall
xchg
add
mov
fnsave
push
mov
enter
cmp
pushl
pop
cmp
mov
imul
cltd
push
xchg
mov
mov
xorb
pop
call
aas
pop
arpl
mov
das
add
pop
icebp
mov
int3
sbb
nop
ds
fwait
sbb
and
dec
out
das
push
cs
add
hlt
testb
into
sbb
sbb
xor
mov
sar
mov
mov
fneni(8087
cltd
lods
dec
fnsave
xor
mov
cmc
scas
inc
nop
negb
mov
pop
mov
stc
outsl
mov
test
mov
in
inc
rorl
xor
xlat
dec
jns
jecxz
ss
or
pminub
dec
pop
jg
decl
test
lcall
insl
jge
add
adc
ds
popa
lcall
cmp
sahf
fcoms
addr16
out
in
inc
cmp
cmp
push
sbb
inc
sahf
dec
in
push
leave
xor
inc
pop
xchg
aad
je
cmp
jg
xor
adc
movsl
inc
sbb
jo
mov
out
mov
std
outsb
ljmp
or
int
mov
pop
std
incl
mov
sub
dec
stc
cltd
pusha
test
adc
loop
dec
in
jg
jmp
mov
gs
ss
imul
js
xor
pop
out
call
push
incb
sub
mov
addr16
xor
xor
adc
aad
dec
jg
clc
decl
push
inc
inc
fdivr
loopne
adc
dec
cmp
add
xchg
and
add
fcmovne
mov
out
add
add
or
pop
pop
push
or
or
or
or
or
adc
adc
push
adc
scas
jne
xor
sbb
mov
push
adc
mov
cmpsb
fldl
add
or
adc
pop
push
std
out
mov
inc
add
or
pop
add
and
add
out
outsl
or
push
add
push
test
mov
jg
imul
add
add
push
adc
pop
and
xor
std
decl
and
rcll
bound
js
scas
inc
pop
aas
in
bound
push
sbbb
mov
mov
leave
mov
lods
mov
xchg
xorl
jecxz
ja
or
imul
and
scas
adc
add
pop
scas
cmp
adc
mov
adc
pop
popa
jno
and
adc
xchg
mov
pusha
lock
stos
and
loope
icebp
mov
dec
inc
jo
mov
mov
rorl
mov
fiaddl
or
adc
stos
js
mov
call
cli
sub
rcr
push
ret
xchg
and
lods
out
ljmp
std
cmpsb
xor
aas
imul
fdivrl
mov
mov
mov
add
mov
dec
pop
cmpb
mov
cmp
pop
lcall
push
in
and
fildl
sar
lcall
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
push
repnz
xchg
pusha
add
std
or
add
call
lds
cld
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
push
mov
lahf
std
movsl
jecxz
pop
mov
jmp
jmp
clc
cmpl
jg
or
insb
sub
addr16
out
data16
decl
sbb
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
mov
in
mov
orb
int3
lcall
fs
mov
pop
pop
mov
popl
movb
xchg
sbb
scas
adc
lcall
xchg
mov
xor
lods
scas
xchg
test
aam
and
sbb
sarl
and
fcom
inc
push
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
jg
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
std
ljmp
sahf
loope
rorl
mov
int
arpl
push
out
or
lods
cmpl
pop
clc
sti
jg
jno
lock
mov
call
sarl
xor
hlt
and
xchg
jmp
sbb
xchg
outsl
xchg
add
pop
jb
mov
cld
push
std
mov
mov
sub
dec
jl
rorl
adc
push
gs
jg
hlt
push
add
mov
loope
mov
sar
andl
aas
icebp
testb
mov
push
push
pop
xor
jns
mov
in
repnz
jno
jecxz
decl
jg
scas
cld
or
push
inc
sbb
paddb
mov
sbb
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
std
decl
sbb
sbbl
into
andl
aas
loopne
cli
adc
aaa
xchg
sti
idivb
in
add
inc
adc
loope
fisttpll
out
mov
out
aas
std
cli
push
push
push
idivl
cmp
sub
jle
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
xchg
inc
inc
es
gs
jns
enter
or
pusha
mov
icebp
jae
inc
cmp
sti
punpckhbw
cmpsb
orb
mov
mov
js,pn
jmp
xor
pop
clc
pop
hlt
sub
movsb
add
mov
pop
jg
gs
std
xorb
jg
aad
cmp
outsl
adc
ret
das
pop
pop
pop
shlb
out
sarb
sbbl
mov
or
sarb
std
pop
les
cli
mov
mov
incl
add
pop
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
in
call
imul
pusha
adc
and
sbb
xchg
jo
and
out
test
jae
push
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
clc
push
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
jg,pn
pushl
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
ljmp
sbb
jg
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
in
ljmp
test
mov
mov
cmp
xchg
mov
cwtl
pop
cmp
call
xchg
and
jae
incl
jle
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
mov
adc
pop
cld
addl
adc
and
loopne
push
cmp
fmull
enter
jecxz
scas
incl
jmp
sub
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
shr
mov
or
cld
inc
or
sti
lds
pop
jg
add
jg
mov
mov
test
mov
mov
iret
call
mov
push
push
sbb
stos
icebp
pop
incb
jg
out
dec
jno
adc
push
inc
jecxz
sbb
sarl
jbe
adc
loopne
sar
adc
lahf
push
sti
rorb
xor
imul
dec
loope
clc
sti
push
in
aas
mov
fsubrl
pop
fcom
ss
and
pop
inc
call
xchg
pushf
mov
repnz
and
mov
push
jle
icebp
adc
inc
aas
push
rcrl
negb
call
pop
pop
inc
jb
fistpl
adc
call
jno
pop
aaa
ljmp
repz
inc
sti
arpl
daa
std
or
sbb
mov
ud0
incb
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
fistps
mov
idiv
lds
fidivrl
jg
stos
pop
out
incl
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
jg
mov
push
cld
addl
sbb
mov
lahf
outsl
int3
push
sbb
mov
push
mov
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
ret
call
loopne
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
sar
jg
adc
lahf
mov
or
out
lcall
in
pop
shl
cld
mov
adc
stos
pop
jg
pop
shrb
sar
ljmp
sarb
adc
xor
pop
rcr
dec
mov
gs
pushf
lea
ds
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
dec
imul
or
inc
pop
xor
rorb
and
add
cmpsl
push
lcall
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
cwtl
xor
and
xchg
fidivrs
clc
fldt
lcall
fistps
outsl
lock
in
jmp
cs
out
stc
out
mov
clc
push
std
mov
lock
dec
or
mov
fists
dec
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
rcr
push
loop
lcall
jne
pop
cld
or
dec
div
and
mov
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
or
or
pop
in
cmp
int
pop
mov
fidivs
clc
adc
jmp
hlt
dec
mov
dec
mov
sbb
xlat
inc
call
loopne
aas
mov
jg
mov
sub
addr16
sbb
aaa
add
cld
daa
jp
std
adc
leave
mov
mov
ja
nop
cmp
das
incb
lock
pop
pop
div
cld
idivl
fs
sbb
stc
lahf
loope
jae
jmp
sub
je
jge
paddsw
mov
add
out
icebp
mov
loope
mov
mov
popf
sti
mov
fbstp
push
xor
es
push
or
jge
out
adc
insb
cmpsb
cmp
call
xor
decb
mov
das
push
adc
mov
and
call
mov
iret
nop
inc
xchg
mov
cmp
int
add
push
pop
aaa
std
mov
dec
dec
inc
sbb
mov
mov
aas
icebp
ret
sbb
push
jnp
int
jmp
sbb
adc
shrb
mov
stos
mov
loope
loope
mov
lahf
jp
in
inc
sti
dec
add
xlat
jmp
outsl
adc
fldenv
iret
fdivrl
xchg
lcall
lock
repz
sub
jo
jo
and
outsl
pop
out
jg
jno
ret
or
inc
arpl
decl
in
inc
sbb
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
mov
jne
in
sbb
xchg
imul
jmp
outsl
jmp
sub
lcall
std
mov
daa
jmp
faddl
mov
inc
add
fisttps
div
pop
stc
push
dec
out
fstpt
cmp
mov
mov
enter
or
loopne
xchg
jg
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
xchg
jmp
mov
fildll
fsubrl
dec
add
leave
inc
adc
add
mov
hlt
inc
sti
push
sti
pop
inc
dec
push
mov
pop
and
mov
or
mov
pop
iret
and
pop
and
add
shufps
jg
add
sar
inc
push
cmp
and
push
jnp
inc
or
mov
push
xor
stos
ja
add
add
jp
or
imul
imul
mov
jne
jo
imul
xor
ss
add
adc
push
inc
inc
sub
jecxz
pusha
nop
shl
dec
push
jle
loope
jb
in
dec
xor
into
insb
push
aas
add
xor
adc
ds
jecxz
mov
sub
add
dec
pop
push
dec
jo
daa
sbb
xlat
push
inc
adc
gs
or
add
insb
push
loopne
sub
popa
jo
push
outsb
fistl
mov
sub
push
or
sub
jbe
dec
dec
jne
js
or
xor
ret
push
sbb
adc
sbb
cmp
inc
orl
ja
jecxz
incb
popa
jb
or
or
push
es
ljmp
dec
add
outsl
insl
insl
bound
add
xchg
cmpsl
and
dec
daa
inc
jo
xchg
jo
or
fsts
inc
add
inc
jl
cmp
cltd
and
and
dec
outsb
imul
insb
stos
fisttpll
data16
sub
xchg
adc
ret
flds
sub
fimuls
mov
jo
xor
inc
inc
shlb
cmp
loopne
fisubs
mov
fwait
push
xchg
push
pop
ds
insb
jne
xorb
addl
xchg
dec
push
mov
add
push
fldt
mov
xorb
push
fiaddl
insl
mov
push
pop
push
mov
sarl
pop
pop
sub
push
jne
subl
pop
ss
pop
jb
and
sub
mov
mov
jae
adc
and
push
push
hlt
fs
xor
jecxz
sbb
dec
lock
dec
cmp
xor
or
or
add
rclb
jno
inc
or
dec
push
imul
pop
fsubs
stos
inc
dec
sbb
mov
sbbl
adc
mov
xchg
sbb
leave
mov
inc
adc
jns
imul
cmp
inc
mov
mov
lcall
inc
adc
test
sub
pop
push
cmpsl
mov
and
popw
push
shlb
lret
mov
mov
push
push
inc
xchg
popa
and
das
ljmp
jae
pushf
inc
or
pop
ret
mov
hlt
dec
inc
dec
or
inc
mov
push
into
mov
push
lcall
push
gs
or
fs
cmp
ds
xchg
lods
xor
je
aaa
mov
inc
inc
or
push
je
stos
pop
push
push
je
add
ja
inc
jnp
or
cmp
and
inc
xchg
or
jp
mov
push
jg
sbb
xchg
bound
fcoms
mov
roll
daa
fsubrs
jle
outsl
jns
int
push
xor
sbb
gs
and
mov
stos
data16
scas
aad
jns
jp
inc
lock
je
push
inc
inc
pop
test
out
sti
xlat
lods
add
cs
inc
sbb
mov
mov
mov
inc
imul
loopne
and
jne
or
push
es
mov
cwtl
insb
and
add
and
addl
mov
xor
daa
cmp
cmp
in
xchg
or
add
jnp
pop
aaa
cmp
pop
or
xlat
test
or
push
and
sbb
push
jne
inc
fmuls
lods
and
adc
fbld
jecxz
add
or
dec
xor
cmp
mov
adc
and
aad
mov
sbb
ret
inc
addr16
outsl
cmp
push
sbb
mov
mov
adc
dec
xorb
imul
scas
les
rclb
push
outsl
add
push
shrb
cmp
dec
inc
adc
push
shl
sahf
cwtl
rcl
and
jns
jne
je
fildll
rcll
arpl
dec
mov
sti
mov
push
loop
rorb
and
jg
pop
pushf
mov
inc
push
jmp
aaa
cmp
push
clc
pop
xchg
add
or
rcrb
mov
jge
inc
or
push
push
popa
sbb
sbbb
outsb
adc
pusha
add
cmp
dec
push
sub
pusha
fiadds
xchg
pop
dec
pop
ja
cmp
pop
push
je
pop
addl
xor
jb
icebp
adc
jl
stos
push
adc
inc
in
lods
jo
inc
mov
push
arpl
insl
sbb
imul
push
mov
pop
fisttpl
pop
mov
inc
insb
jle
cmovnp
inc
call
movlps
and
jae
sub
stc
xor
jno
aad
iret
ljmp
jns
push
insb
add
aas
lds
inc
sahf
push
shlb
inc
nop
sbb
xchg
sarb
xor
sbb
movsb
push
xchg
cmp
push
push
xor
push
pop
xor
inc
lock
shlb
mov
cmp
imulb
push
push
adc
push
lock
cmp
mov
xchg
jnp
cmp
clc
mov
insl
dec
outsb
dec
adc
ret
scas
jnp
cld
insl
repz
pop
add
add
mov
imul
xchg
movsb
xor
rcrl
or
pminub
rcll
adc
mov
mov
addb
pop
adc
in
setl
inc
rcrl
inc
jb
and
lods
add
out
dec
and
jl
outsl
bound
adc
push
inc
and
roll
out
inc
jb
inc
cmc
das
inc
push
jb
inc
jae
inc
leave
push
sbb
inc
shll
fidivl
ret
add
push
repz
pop
cmp
sbb
mov
xchg
cmpsl
loopne
rclb
pop
or
icebp
push
mov
loopne
imul
nop
xor
mov
shlb
dec
pop
push
add
lret
xor
sbb
popa
pop
push
movl
pop
sbb
test
aad
enter
sbb
movsl
mov
ret
or
inc
dec
test
fildll
mov
sub
inc
pop
fsts
popa
movsb
dec
mov
sub
jmp
iret
loopne
sbb
jb
mov
fmull
rorl
pusha
jp
adc
insb
jl
add
mov
loope
pop
dec
xlat
push
mov
orl
into
dec
cwtl
inc
out
cmpl
int3
adc
flds
insb
adc
or
loope
sub
cwtl
dec
push
loope
sbb
lods
sbb
or
roll
int3
outsb
push
push
rolb
or
or
sbb
push
fs
adc
mov
das
mov
inc
stos
pop
sub
pop
and
dec
insl
jecxz
test
imulb
or
mov
and
xor
pop
sub
and
inc
and
test
push
aas
pop
sub
movsb
in
inc
rcl
sbb
or
test
push
push
lds
movsl
outsb
out
push
xor
ss
jbe
pusha
jno
icebp
add
icebp
add
das
sbb
xor
sub
inc
or
or
int3
add
pop
stos
push
gs
inc
iret
jns
pop
add
sbb
int
nop
inc
mov
cmp
pop
cmp
mov
sbb
popa
adc
je
push
xor
pop
mov
add
test
cmc
test
and
in
add
push
mov
dec
addr16
or
push
push
fs
mov
repz
sub
cmpsl
or
fs
dec
push
sbb
ret
jae
int3
ret
adc
int3
add
or
mov
xchg
jo
add
jmp
jg
and
and
adc
jp
cwtl
adc
popf
movsl
inc
cs
sub
dec
add
imul
mov
mov
jp
add
insl
cld
adc
dec
add
stc
mov
lcall
sub
push
push
scas
add
bound
mov
add
or
sub
outsl
jae
loope
pusha
pop
in
adc
xchg
push
mov
fadds
imul
pop
add
xchg
xor
add
es
and
add
and
jb
es
ret
negl
push
rclb
mov
cs
adc
push
out
add
in
repz
fdivl
push
xlat
pusha
dec
jo
push
lahf
or
sbb
push
push
add
dec
xchg
and
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
insb
inc
add
add
