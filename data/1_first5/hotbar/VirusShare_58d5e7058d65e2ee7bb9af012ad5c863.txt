divb
in
mov
mov
mov
inc
add
add
ror
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
inc
cld
add
jmp
test
jne
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
inc
push
adc
add
inc
pop
push
fcmovnb
les
mov
push
mov
xor
pop
mov
mov
mov
call
pushl
fwait
mov
enter
push
or
data16
sbbl
sarl
push
lahf
add
xchg
notl
andl
mov
push
sub
mov
hlt
cs
addl
add
sbb
lock
fcomi
sub
dec
shlb
in
or
xlat
mov
xor
hlt
or
pop
cmpsl
push
repnz
in
cmpsb
cmp
lea
fwait
popa
xor
push
call
sub
add
out
push
sbb
push
insl
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
call
and
cmp
ret
test
push
xchg
mov
call
addb
das
or
push
dec
and
add
xchg
es
pop
xlat
push
sbb
scas
imul
add
xchg
or
ljmp
es
out
push
out
jmp
mov
mov
pop
pop
fs
pop
lods
mov
aad
add
mov
push
sub
mov
pop
push
insl
sbb
add
shl
push
push
push
iret
bound
pop
sub
inc
pop
pop
ljmp
ss
xor
push
mov
cmp
or
jge
dec
add
gs
sti
mov
mov
xor
mov
xchg
jmp
arpl
rcrl
js
push
pop
imul
sar
sub
inc
sub
inc
clc
sub
enter
xorl
ss
shll
inc
jmp
fs
pop
push
ja
xor
movsl
push
xorl
sbb
idiv
add
mov
cmp
jg
mov
adc
or
ds
ret
pop
dec
sbb
push
mov
cs
add
adc
movsl
jmp
enter
push
push
jmp
sub
push
mov
sar
imul
push
cmp
ja
adc
pop
dec
clc
add
push
fiaddl
ret
pop
in
inc
andl
sahf
leave
les
int3
stc
test
clc
lds
jle
mov
cmpl
or
push
fucomp
sub
cmp
jge
dec
cmp
subl
adc
jmp
cltd
sub
shr
enter
mov
test
mov
ret
cwtl
and
push
test
cmp
jl
cmp
jne
mov
incb
add
xor
jbe
mov
call
xchg
rol
inc
add
inc
add
dec
sar
lea
push
add
push
push
lea
sbb
psadbw
xor
dec
int3
pop
hlt
into
mov
aam
sbb
adcl
cmp
cmpsl
xlat
ja
stc
mov
cld
fsubrs
fisubrs
stos
mov
jmp
imul
enter
test
jle
cmp
mov
inc
sbb
sahf
mov
pop
loope
add
and
sbbl
push
push
xchg
cmp
aas
adc
mov
loope
mov
inc
push
push
test
pop
sub
xchg
or
cli
insb
adc
jb
es
and
adcb
and
xchg
jbe
dec
and
and
cmp
mov
rorl
pop
loope
lcall
push
hlt
inc
push
or
sti
shl
hlt
cmp
jle
mov
icebp
aas
push
pop
out
add
push
inc
stos
xchg
or
pop
or
and
cmp
sub
sbb
xchg
pop
lret
or
addr16
add
jb,pt
pop
add
jg
in
in
pop
leave
ret
lea
fidivs
ljmp
add
cmp
clc
push
push
push
aas
lods
sbb
rcrb
ja
jmp
xchg
push
push
insb
or
cmpsb
imul
cld
pop
cmpsb
out
cmp
jo
inc
mov
sub
aad
aaa
out
or
sarl
in
sub
pop
or
cmp
push
mov
outsl
idiv
push
lea
cmp
jne
push
push
push
push
sarb
js
push
mov
mov
or
add
sahf
pusha
pop
pop
push
jnp
insb
dec
xor
mov
jne
cmp
jbe
xlat
or
xchg
and
add
or
into
dec
jne
jl
add
add
mov
out
out
xchg
fstpt
cmp
ficompl
enter
push
mov
mov
fdivr
push
or
cwtl
push
mov
data16
in
jb
or
nop
add
out
push
js
outsl
loope
out
stos
or
push
pop
push
and
ds
movl
or
cmp
mov
rcll
mov
xchg
dec
ss
cmpsl
pop
push
out
ja
push
mov
sbb
add
pop
mov
mov
pop
lea
add
sbb
dec
xchg
push
aas
in
popf
cmp
std
testl
or
mov
jo
lock
mov
push
mov
fisttpll
push
scas
push
bound
flds
sbb
test
push
cmc
jo
lahf
cmp
push
pusha
cmp
je
rcr
dec
mov
adc
in
jne
imul
arpl
cwtl
cmpsb
mov
pop
mov
cltd
mov
insl
push
jb
cmp
or
push
repnz
pop
mov
cmp
out
aam
cwtl
inc
imul
dec
or
movsl
mov
mov
mov
or
adc
in
jle
jge
cs
jno
add
or
inc
cmp
jbe
out
or
movsbl
leave
out
sub
add
or
pop
ret
mov
stos
in
mov
insb
shrl
push
adc
or
push
or
jle
mov
mov
push
xor
or
inc
and
out
mov
mov
or
push
xchg
sbb
mov
mov
out
push
int3
loop
mov
push
ficomps
loopne
adc
sub
or
mov
inc
sbb
js
pop
inc
lods
mov
lahf
add
sbb
je
dec
je
push
adc
cmp
pop
jmp
push
adc
inc
shll
mov
lret
or
nop
cs
dec
adc
push
arpl
sbb
pop
ljmp
push
push
mov
mov
cmp
mov
xor
fsubrs
xor
jge
and
mov
aam
and
data16
jb
pusha
pushf
pop
cmc
andl
sbb
push
xchg
add
pusha
xchg
mov
test
mov
aad
cld
out
test
mov
mov
js
sbb
inc
xchg
xlat
ljmp
add
mov
lret
ljmp
in
pop
pop
movsl
or
or
pop
fcmovnu
dec
sub
js
and
adc
popa
lcall
push
in
dec
call
ds
je
and
sbb
inc
jo
mov
mov
aad
pop
decb
add
test
lea
jge
push
negl
xlat
xchg
pop
movsl
push
pop
sti
sbb
sub
adcl
push
loope
sub
adc
test
jp
notl
adc
test
or
sbb
cmp
sbb
adc
sbb
fists
aaa
pop
sbb
and
mov
mov
jp
push
add
jl
ret
pop
adcb
jb
and
test
mov
mov
scas
repnz
cmp
jle
or
jne
fisttpll
mov
push
pop
test
roll
fs
nop
xchg
lret
and
into
push
andl
or
mov
je
inc
mov
into
scas
mov
or
push
xor
aam
pop
mov
jnp
pushf
sub
aas
loopne
push
fs
mov
jmp
jo
fdivrs
adc
leave
adc
out
mov
pop
repnz
je
scas
fisubrs
lahf
xor
mov
mov
insl
fsubrp
std
mov
mov
xor
dec
sub
mov
inc
subl
or
push
xchg
xor
xor
xchg
adc
jne
xchg
sar
push
pusha
pop
sbb
cmpsl
lret
and
mov
out
scas
mov
ljmp
mov
mov
xor
mov
inc
call
push
push
cmp
aaa
and
inc
pop
or
or
outsl
lea
stos
mov
jnp
add
cwtl
fidivs
addl
pop
imul
pop
repnz
je
test
sub
in
rolb
clc
or
and
orb
xchg
xor
add
mov
push
sbb
cmp
jns
inc
pop
cmp
ja
lahf
in
lock
ret
push
xor
mov
lods
aas
aam
jge
decl
inc
enter
xchg
mov
add
xchg
inc
pop
loopne
movl
jae
mov
add
popf
mov
jp
mov
and
sbb
inc
xor
sbb
xchg
in
push
and
push
pushl
and
add
add
fcmovnu
test
loopne
add
testb
int3
in
loopne
cmp
xor
test
add
jnp
mov
loope
or
push
push
jmp
jp
cmc
dec
test
mov
push
and
push
in
fistpl
fistpl
jae
ret
je
push
sarb
mov
out
fcmovnb
mov
dec
sahf
or
jb
or
cwtl
mov
cltd
xchg
mov
pop
dec
and
nop
xchg
pop
sub
add
inc
add
adc
lods
inc
cmpsb
in
or
cmp
add
mov
jns
sub
cmp
jge
pop
adc
adc
adc
outsl
mov
in
das
loopne
push
mov
negb
push
xor
sbb
sub
mov
test
fcoml
dec
jo
xchg
mul
mov
shlb
lock
jo
cmp
movsb
sarb
js
mov
adc
pop
adc
push
mov
xorl
cmp
cmp
rclb
xchg
rcl
ret
aam
in
inc
push
push
pushf
pushf
iret
and
test
mov
hlt
xchg
in
inc
push
sbb
hlt
inc
int3
sbb
nop
lret
int3
or
inc
mov
enter
repnz
pop
rol
rol
nop
lret
and
mov
fs
les
dec
mov
mov
mov
subl
test
push
test
push
hlt
xchg
test
jle
pop
xor
int
pusha
and
ja
inc
and
dec
pop
add
xor
aas
testl
arpl
inc
cmp
mov
pop
iret
and
xchg
aad
cmpl
mov
push
add
jmp
jo
push
add
mov
stos
add
push
loop
push
jmp
and
fnsave
and
inc
push
inc
adc
nop
mov
stos
or
in
adc
loopne
add
or
jle
in
inc
mov
in
xorb
and
inc
jl
lods
outsb
and
push
xorl
movsb
punpckhwd
frstor
push
aaa
adc
dec
je
sti
dec
or
test
pop
push
mov
test
dec
sub
jae
lea
add
sarl
sbb
insl
or
and
xor
add
test
xchg
xchg
or
rorb
rcrl
adc
ds
loope
frstor
add
jae
jae
cmp
or
data16
xorb
xchg
push
out
jne
fildl
in
scas
push
pop
fcompl
ss
push
jmp
push
xor
push
mov
xor
mov
mov
pop
or
add
adc
xor
mov
inc
mov
or
sbb
mov
outsb
into
push
sbb
fdivrs
lea
sub
sbbb
mov
sub
pminsw
pusha
mov
outsl
bsr
push
inc
test
stos
adc
leave
test
loop
jl
jno
ljmp
sbb
jne
cmp
into
adc
cmovno
xor
cmp
in
add
cmc
gs
add
push
mov
je
lret
xchg
add
sbb
push
and
iret
sbb
out
jmp
cmpsl
test
fdiv
fistpl
jne
test
jno
nop
xchg
xchg
test
inc
push
pop
push
hlt
push
push
out
cwtl
ret
clc
popf
cmpsl
mov
loopne
cmp
pop
add
push
shlb
sahf
les
loopne
pushf
pop
nopl
xchg
ja
in
loopne
mov
maskmovq
imull
sbb
and
clc
ljmp
or
je
xor
push
push
or
push
mov
adc
xchg
mov
pushw
mov
xchg
add
and
test
je
cmc
jecxz
daa
add
aaa
ret
or
enter
add
lods
mov
sahf
cwtl
cmp
adc
cmp
flds
fldt
sbb
pop
rclb
out
hlt
je
push
push
pop
ljmp
test
pop
or
xchg
pop
inc
xor
and
cld
clc
adc
and
shrl
pop
mov
jne
pop
push
xor
push
sahf
sub
mov
popl
xchg
and
push
xchg
stos
jmp
and
push
and
dec
mov
xlat
and
inc
jg
mov
xor
and
xchg
movsb
std
daa
call
and
cwtl
and
je
aas
incb
and
cmp
daa
cmc
sub
or
js
push
push
fistpl
aam
stc
push
add
scas
sub
pop
sub
pop
nop
mov
push
ljmp
sub
push
xchg
test
mov
jno
ss
ret
jne
jmp
test
lret
jge
sbb
xor
mov
inc
mov
stos
add
adc
in
inc
pop
xor
jae
insb
stos
xor
shll
sahf
mov
adc
push
lods
mov
mov
sub
pop
stos
jo
fsubs
jne
jo
out
pop
and
pop
xor
xchg
lahf
mov
inc
sbb
arpl
dec
adc
inc
ret
jecxz
lret
push
push
or
sub
pop
adcb
push
add
test
test
adc
out
inc
in
push
dec
or
dec
push
push
mov
add
lahf
mov
and
ret
pop
cmp
insb
rolb
push
loopne
sahf
dec
orb
popf
cmp
jl
mov
mov
pushf
dec
test
sub
lret
ret
shlb
cvttps2pi
inc
mov
add
enter
int3
ds
lds
lea
pop
xchg
add
ds
pusha
pop
sub
xor
xor
jns
cmp
xchg
dec
xlat
movsl
xchg
and
xor
xchg
inc
test
gs
fdivs
push
pop
xor
xor
fistl
fisubrs
bound
and
adcb
mulb
add
mov
push
sbbl
pop
in
or
xor
push
and
xchg
out
cmp
aam
adc
and
inc
jb
cmp
jne
mov
jns
and
cmp
mov
pop
push
and
xor
and
or
shl
inc
jge
push
mov
popa
adc
bound
inc
add
mov
mov
mov
notl
xchg
nop
les
push
ret
jmp
inc
mov
cmc
add
xchg
pushl
aad
pop
or
mov
loop
cmp
in
and
mov
inc
stc
adc
dec
add
push
je
nop
lret
sbb
adc
mov
icebp
ficomps
pop
dec
cmpl
shl
xor
push
jp
and
repnz
adc
fiadds
push
pop
mov
je
adc
sub
sub
ds
jne
push
sub
call
adc
das
mov
jo
lret
jne
inc
in
fdivrp
and
dec
sub
jmp
cmp
pop
sbb
xor
and
ja
pusha
cmp
add
jge
jmp
mov
inc
lock
lock
mov
rcrb
push
loopne
or
ret
rorl
cwtl
adcb
push
xchg
or
inc
repz
out
jge
orb
xchg
inc
loopne
fadds
les
or
mov
roll
cmp
mov
test
or
sub
jge
cmp
or
call
loope
add
and
daa
sbb
pusha
nop
andb
mov
mov
and
loopne
sbb
loope
lods
add
push
mov
out
or
sub
mov
add
jecxz
add
icebp
jg
fldt
adc
pop
out
jne
or
je
sub
das
pop
push
cld
sti
loopne
jg
and
das
mov
cs
xor
and
cwtl
add
cmp
clc
je
push
pop
pop
test
pop
mov
lods
outsl
jae
loope
fsubrp
out
jne
or
mov
emms
xchg
cmp
mov
loop
test
xlat
cs
lock
not
add
xchg
mov
sar
lahf
je
popa
repnz
das
mov
xchg
inc
in
sbb
push
loop
out
inc
out
test
inc
push
add
sbb
or
lock
lds
popa
inc
movsb
jno
test
or
mov
mov
mov
push
mov
push
pop
mov
or
enter
inc
push
rorb
pop
int3
add
mov
or
jle
add
mov
fdivr
or
sbb
push
in
cmpsb
lahf
sub
shrb
mov
jnp
adc
push
lock
add
dec
dec
je
sub
jmp
ljmp
cmpl
je
dec
push
outsl
mov
xor
jmp
loopne
fldenv
test
sbb
ror
sti
mov
jne
xchg
ja
add
or
push
sbb
xchg
jmp
xor
xor
jecxz
inc
inc
mov
sbb
mov
or
cmpl
clc
mov
hlt
xor
inc
mov
movl
bound
cmp
xchg
or
aaa
sbb
xor
and
pop
xchg
mov
push
pop
sbb
push
push
mov
das
fdivs
mov
pop
sub
or
add
icebp
pop
pop
jle
lods
or
pop
lock
jmp
mov
shrb
add
and
imul
gs
xchg
mov
stos
jae
aas
add
sbb
jnp
push
or
scas
mov
lea
adc
cmp
in
jecxz
xchg
rcr
daa
in
fs
jge
push
add
pop
cmp
out
js
insb
dec
aaa
or
mov
arpl
mov
fwait
in
jmp
dec
in
mov
cmp
outsl
loopne
daa
pusha
movsb
xchg
outsb
loopne
lret
or
ja
outsb
dec
ret
insb
mov
jmp
add
pop
insb
push
scas
dec
mov
lods
sahf
stc
push
add
flds
push
add
or
inc
cmp
push
add
in
std
xor
cwtl
movsb
ljmp
lret
jge
add
es
dec
sub
fstl
mov
out
pop
xchg
daa
pop
fmull
adc
fdiv
push
xor
test
add
and
mov
in
loopne
pop
cld
loopne
and
jecxz
xchg
push
add
testl
movsl
call
test
push
loope
push
ds
loopne
push
or
or
push
add
stc
adc
mov
pusha
inc
clc
mov
inc
add
movsb
sbb
add
ljmp
jo
adc
aam
dec
pop
repz
leave
push
in
sbb
lods
mov
scas
sbb
xchg
xorb
add
filds
nop
sub
shll
sahf
pop
cmp
xor
mov
push
call
push
push
and
call
and
pop
out
mov
mov
cmpb
push
fs
add
inc
dec
sahf
mov
sbb
adc
pop
call
push
inc
cli
or
cwtl
cmc
mov
jbe
mov
or
xor
mov
add
xchg
shll
pop
loopne
adc
cmp
mov
adc
or
inc
sahf
mov
and
sub
loopne
push
shll
popf
js
and
shlb
push
sub
sub
mov
xor
mov
adc
xchg
in
insb
out
adc
rclb
sbb
mov
mov
fsubrl
sbb
xor
in
pop
dec
inc
mov
call
mov
and
shr
movzbl
push
adc
jecxz
pusha
push
push
ret
push
enter
sbbb
data16
mov
out
xchg
xlat
mov
xchg
cmpsl
jle
jnp
mov
cmp
or
or
xchg
adc
jno
and
xchg
push
jo
add
aad
insb
pop
xor
sbb
sbbb
jg
push
xor
out
pop
or
add
sbb
pop
jb
or
cmp
insb
adc
cmp
add
sti
jle
push
add
inc
push
push
icebp
int
lahf
mov
cmp
jg
mov
mov
jmp
mov
daa
enter
pop
mov
rcrl
daa
jns
test
adc
scas
lcall
fstpt
or
cmpsb
push
mov
lea
bndldx
out
adc
notb
insb
add
sbb
pop
jo
add
pop
out
lods
mov
pop
jmp
mov
push
aas
add
popa
xor
inc
pop
mov
push
or
push
stos
mov
jmp
shrb
cld
jne
test
jp
dec
inc
adc
insb
gs
push
lock
sbb
xor
inc
cmp
jae
clc
mov
or
xor
ja
dec
test
mov
je
push
mov
loopne
mov
push
sub
fadds
add
mov
scas
pop
hlt
add
jl
in
push
inc
lock
jg
push
push
jne
js
mov
roll
icebp
cmp
xbegin
add
xlat
into
popa
nop
add
mov
sub
call
rcll
add
lea
ljmp
cld
add
or
push
test
adc
sbb
xchg
add
mov
leave
add
mov
mov
mov
jb
push
sub
mov
dec
lahf
inc
or
cli
push
js
jb
insl
fdivrl
pop
pop
inc
xchg
push
inc
fwait
je
test
js
cmp
fimull
sbb
or
push
je
sub
pop
movb
imul
sti
ds
add
inc
jecxz
cmp
inc
push
push
data16
mov
inc
in
pop
xor
fmuls
xchg
fnstcw
inc
imul
pusha
lock
cmp
jl
outsl
dec
push
js
fldpi
push
or
sub
or
in
xor
pop
mov
ret
or
mov
jae
add
cmp
fs
or
xchg
add
or
popf
into
shrb
jne
pop
mov
unpcklps
push
mov
adc
push
stc
push
je
jbe
scas
push
aaa
mov
ret
je
mov
sbb
mov
aam
mov
xorb
mov
pusha
ds
push
mov
sbb
sbb
fisubl
or
cmp
pop
mov
or
movb
mov
and
add
jne
and
xor
jecxz
sbb
add
adc
adc
out
dec
mov
fadd
je
pop
test
movb
xor
jmp
xor
nop
fldl
call
jb
out
mov
push
enter
sbb
add
jmp
adcb
adc
inc
jl
jb
pop
icebp
scas
mov
fs
jne
cmp
je
jbe
movb
std
or
or
and
sbb
addb
mov
test
adc
testl
out
out
add
mov
pop
mov
shll
mov
and
mov
cmp
xchg
or
psllq
insb
loopne
mov
in
lods
orl
push
and
test
js,pt
jo
jg
jo
and
ss
dec
push
and
dec
or
push
sti
shll
int3
pop
test
bound
push
adc
pop
push
inc
xor
jp
pop
pop
mov
js
push
leave
xchg
adc
inc
lret
or
inc
addb
mov
fbstp
mov
cltd
nop
dec
push
mov
sbb
test
add
es
jno
fiaddl
ficoms
push
push
and
push
cwtl
out
clc
lret
je
sbb
movsl
add
xor
inc
lahf
enter
ret
aas
xor
arpl
sbb
std
add
hlt
sub
out
mov
repz
cmp
or
mov
adc
enter
jl
add
insb
adc
std
xchg
cld
cmp
lea
jbe
mov
fidivl
pop
push
push
and
push
push
enter
cmp
lock
add
push
js
call
movl
xchg
xor
popf
dec
add
adc
movsb
std
push
add
stos
cmp
pop
sahf
fsubs
je
icebp
or
addr16
fcompl
adc
in
cmp
mov
sahf
iret
mov
iret
ret
in
add
fdivrs
mov
or
mov
push
das
push
loope
or
adc
or
lods
jo
or
mov
adc
lods
jno
dec
pop
dec
movsl
and
xchg
orb
cmp
or
ds
insb
fdivs
push
cmp
rcr
pop
fldt
push
sub
lahf
xor
push
nop
jecxz
jae
cwtl
pushf
dec
push
inc
aad
jno
andb
imul
jl
dec
mov
inc
sbb
or
xchg
in
cmp
loope
jmp
fadds
stc
cltd
in
cmp
or
test
test
mov
and
xchg
dec
fnstcw
mov
push
jb
nop
cmp
mov
pop
and
ficompl
xchg
mov
push
mov
add
pop
test
jbe
sbb
faddl
or
push
mov
cmp
jne
push
enter
and
dec
jne
add
sbb
xor
or
and
and
xorl
les
inc
pop
fdivs
and
pop
mov
xor
push
sbb
push
adc
pop
xchg
shll
sbb
inc
jbe
pop
pop
xor
out
mov
daa
or
add
enter
dec
mov
jno
jns
jg
add
out
push
push
loopne
imul
mov
add
and
fstpt
sub
loope
lret
xor
iret
cmp
or
pop
mov
adc
loopne
pusha
scas
gs
and
leave
and
clc
cmp
inc
enter
dec
or
enter
dec
adc
fbstp
push
lea
mov
daa
loope
imul
pop
sbb
xor
mov
sbb
mov
jbe
pop
mov
loop
inc
and
mov
xor
inc
out
mov
and
or
dec
or
mov
cmp
dec
push
ss
jge
in
jg
dec
adc
leave
xchg
sbb
xorb
inc
sbb
ret
push
and
inc
scas
cmp
sbb
sbb
ret
jne
sub
sbb
cmpsb
push
add
push
sbb
aam
mov
xchg
mov
test
mov
and
or
ja
in
dec
sti
jo
movups
and
stc
adc
repz
popf
cmpl
cmp
or
in
in
jg
jo
pop
cltd
pop
negl
mov
add
cmp
cmp
or
push
xchg
jmp
and
or
push
cmp
js
dec
mov
arpl
pop
adc
add
mov
loopne
aaa
jmp
cmp
out
notb
out
cmp
leave
jmp
sub
cmp
loope
je
mov
je
sub
test
cwtl
inc
out
ss
mov
dec
mov
mov
mov
and
es
and
adc
pop
jne
pop
in
or
jmp
push
add
push
mov
xor
push
les
movsb
orb
cmp
loopne
mov
xchg
xchg
or
pop
push
mov
pushf
fisttpll
mov
in
std
mov
in
sahf
mov
clc
xchg
and
push
or
lret
divl
xchg
pop
pushl
js
aaa
mov
mov
enter
pop
nop
out
int3
sub
mov
cld
fisttpl
shr
jmp
cmp
je
cmp
sbb
imul
jmp
inc
sbb
lahf
mov
sbb
mov
sbb
fstpl
lock
jmp
sbb
movsl
inc
xchg
push
and
jmp
and
icebp
rcrb
outsl
jmp
xchg
sbb
loope
add
adc
ficompl
inc
push
push
iret
repz
push
arpl
jl
iret
clc
cmp
imul
push
mov
out
adc
pop
and
push
fildl
pushw
and
sub
adc
fstl
lea
jl
fdivl
lahf
or
and
movb
lock
mov
xchg
xchg
pop
jge
icebp
sub
lahf
aaa
and
push
dec
push
mov
pop
push
lea
push
pop
and
mov
shll
lea
sbb
xchg
sub
add
push
xchg
ja
dec
mov
adc
lahf
push
or
jno
sub
ja
lea
lea
movl
add
and
movsb
xlat
sub
xor
lds
call
fwait
mov
mov
mov
sbb
dec
jae
int3
push
aam
push
xor
add
jl
inc
xor
add
and
adc
popa
push
cmp
arpl
pusha
mov
add
xchg
call
ffree
jge
das
or
cltd
mov
mov
mov
aam
push
push
xchg
sub
or
jle
sbbb
or
jmp
shlb
adc
fdivl
insb
adc
ja
adc
sti
xor
mov
movsl
dec
jne
push
sbb
and
adc
or
jae
enter
adc
inc
mov
rep
rolb
pop
adc
dec
and
mov
in
pop
xor
out
ret
je
xchg
jl
in
pop
cmp
and
sub
xor
push
add
divb
xor
ficoms
fcoms
dec
int
test
je
xor
jo
push
push
cmp
sbb
mov
pushf
jl
jnp
xchg
xchg
sbb
add
or
sti
fiadds
push
jg
popa
adc
or
sub
andb
outsl
push
loopne
xchg
pop
mov
pop
mov
das
in
sbb
pop
jne
nop
jecxz
ds
push
roll
lret
xchg
out
fcoml
les
dec
fildl
cmp
ret
loope
jbe
inc
add
jnp
test
test
fcoml
sub
pop
movsb
jmp
je
xchg
mov
pop
inc
scas
xor
adc
int3
cmp
jne
push
sub
xor
adc
clc
js
nop
xor
stos
adc
iret
je
lea
push
loopne
add
popf
js
or
jo
inc
enter
add
push
sbb
cmp
jne
call
ror
and
push
or
adc
xor
mov
rol
dec
rep
or
sub
les
loopne
adc
pop
push
dec
lock
push
adc
dec
lea
dec
push
push
test
sbb
int3
faddp
sub
sub
or
in
dec
jmp
sub
add
sub
in
mov
out
cmp
push
mov
add
mov
inc
adc
dec
inc
shll
cmp
verw
daa
mov
push
test
push
in
imul
push
or
loope
js
sub
loopw
fstp
pop
push
in
dec
push
sbb
neg
sbb
xor
or
jg
out
mov
mov
popa
adc
les
mov
lret
xor
xor
in
and
dec
dec
sub
inc
sarl
or
push
push
int
negb
lcall
push
push
fimull
or
fstps
leave
and
push
push
out
cmp
mov
adc
cmp
push
cmpsb
out
mov
call
dec
mov
adc
adc
push
dec
sub
inc
jl
je
push
sbb
or
pushl
and
aas
xor
idivb
xchg
jo
loopne
les
gs
popf
push
mov
shl
mov
and
idivl
sub
les
fdivrs
cmpl
jne
pushl
pop
mov
sbb
dec
cmpsl
jbe
push
adc
fstps
outsl
cld
adc
scas
push
sbb
int
fmuls
dec
jmp
cmpsb
cltd
jge
stc
add
add
pop
jg
cmp
cmp
sti
je
cmp
xchg
mov
or
push
sahf
add
pop
repz
lock
cmp
aad
xchg
mov
and
lret
ja
loope
add
popa
in
pop
jno
nop
call
mov
xor
clc
xor
sbb
push
jne
movb
xor
out
jmp
or
pop
repz
popf
movsl
pushf
inc
cwtl
icebp
fldz
xor
push
clc
dec
enter
adcb
dec
addr16
dec
aas
mov
jp
hlt
mov
add
lea
faddl
cltd
test
sbb
push
shlb
lock
test
and
and
jbe
test
fimull
popf
sub
fisubl
daa
mov
mov
dec
or
adc
jne
push
sbb
es
add
leave
push
push
pop
cmc
adc
fcoml
push
nop
pop
cmp
dec
clc
notb
iret
push
adc
enter
gs
movsl
mov
pushf
aad
pop
jmp
pop
inc
test
or
add
add
dec
or
adc
or
pop
xchg
js
movsl
mov
or
adc
mov
test
pop
push
xchg
sbb
shll
dec
jl
xchg
andb
cmp
push
jbe
xor
test
js
xchg
mov
cmpb
inc
rcrb
test
aaa
mov
mov
add
pop
dec
xor
inc
fldl
fmull
sub
add
push
cmp
push
push
push
aaa
sarb
sbb
stos
jl
into
push
sub
mov
fiadds
out
andl
lcall
ret
fdiv
xchg
pop
xchg
out
into
popa
in
ds
aam
out
sbb
adc
mov
cli
dec
adc
inc
jo
popf
fmuls
call
loopne
repz
or
or
test
jo
cmc
jmp
mov
adc
roll
xchg
xchg
push
fcom
push
adc
pop
or
loopne
cmpb
xor
insl
and
clc
je
push
pop
cmp
push
enter
jb
jmp
jne
in
scas
das
cs
sub
push
push
mov
adc
mov
cmp
push
insb
repz
push
cmp
fisubrs
add
xchg
sbb
popa
pop
cli
or
push
icebp
push
rcll
or
push
cmp
sub
call
jmp
pop
sub
cltd
sub
push
jecxz
and
push
shll
daa
push
add
pusha
add
movsb
pop
outsl
sbb
mov
repnz
and
sarb
add
sarl
sarb
cltd
mov
lea
push
pop
mov
dec
adc
sbb
and
jnp
pushf
add
cmp
jge
mov
xor
outsb
mov
idiv
push
mov
mov
lea
inc
mov
ret
xor
idiv
mov
mov
repz
jg
test
out
add
push
add
jnp
push
xor
mov
popf
mov
xchg
popa
inc
inc
dec
sub
jmp
cltd
jns
jge
add
movsl
inc
repnz
lock
inc
cld
in
or
out
dec
fstpl
lock
xchg
insb
xor
sti
sub
sbb
xor
sbb
jbe
std
lea
cltd
idivl
add
pop
and
inc
inc
popa
popf
movsl
daa
add
fsubl
mov
ds
jg
out
sbb
dec
fs
or
xchg
arpl
mov
loope,pt
test
jle
cmp
xor
addr16
negl
pushf
movb
cli
in
cmp
lea
jae,pt
xor
mov
sub
cmp
mov
dec
nop
or
out
insb
mov
pop
sub
hlt
mov
test
jns
cld
mov
inc
add
xor
xor
mov
fdivrp
movsl
mov
sub
mov
jmp
sbb
pop
add
les
cmp
add
push
lods
mov
cmpb
cld
mov
je
into
clc
fidivl
jmp
push
xchg
cmp
rolb
fstp
cmc
push
pop
mov
pop
jne
pop
pop
movb
clc
mov
push
dec
outsb
mov
mov
xor
push
cmp
and
add
imul
lret
rorb
cld
inc
hlt
adc
lea
adc
adc
sub
in
jne
push
gs
bound
out
sub
xor
in
inc
pop
and
aad
inc
jmp
out
xchg
cs
cmc
bound
out
push
pop
pop
push
sub
and
push
add
push
cmp
push
stos
sub
ret
push
mov
add
call
push
and
cltd
add
int3
pushf
push
push
test
or
push
and
mov
fxch
adc
int
sbb
loope
rcrl
or
iret
addr16
dec
jns
and
cmp
clc
loope
mov
inc
jne
sti
sub
lds
adc
mov
push
jg
jmp
punpckhdq
leave
adc
jno
test
add
add
add
xchg
push
popf
int
mov
lea
push
mov
push
loope
mov
daa
add
lods
pop
pop
or
mov
negl
mov
lea
push
push
cmp
movsb
adc
jnp
lahf
icebp
inc
dec
inc
sub
movsl
mov
adc
sub
lods
push
addl
popa
scas
jle
orb
outsl
pop
test
ja
inc
bound
pop
mov
jmp
push
dec
xchg
add
cltd
fs
scas
sbb
cmc
in
cmp
mov
sub
push
and
push
setns
pop
push
pop
in
xchg
popf
dec
adc
nopl
ret
mov
jl
mov
pop
dec
dec
or
or
fisttps
inc
push
cmp
daa
cmp
dec
das
sbb
mov
nop
out
fisubl
mov
pusha
bound
stc
xchg
sbb
outsb
pop
dec
cmp
pushfw
aas
inc
loopne
push
pop
icebp
inc
dec
pop
xor
push
add
push
mov
pop
sub
clc
setb
lock
loopne
test
rorb
xor
lods
jge
je
xor
dec
adc
data16
sarb
lods
aaa
addb
adc
sbb
push
fstps
idivl
gs
add
lods
add
cltd
es
mov
je
dec
mov
je
adc
adc
jne
outsb
xor
scas
sbb
xchg
popf
sbb
rcl
push
inc
or
mov
in
xlat
das
push
mov
mov
int
fwait
mov
sub
inc
push
ss
xchg
js
xor
sbb
xchg
xor
or
test
out
imul
ficompl
add
adc
loopne
push
push
rcl
iret
jnp
push
aas
jmp
test
nop
adc
jl
test
adc
inc
movl
aas
xchg
add
pop
js
and
mov
out
or
add
adc
sbb
testb
pop
das
inc
xor
jno
js
sbb
xchg
pop
add
add
jmp
or
inc
in
pop
dec
std
mov
js
add
enter
js
push
jno
push
push
and
or
inc
aaa
and
and
xchg
call
push
cmc
in
adc
push
out
add
xor
in
sbb
mov
clc
pop
push
push
mov
enter
repnz
or
dec
mov
xor
adc
aam
hlt
mull
enter
dec
pop
rorb
stos
int3
add
pushf
sub
jne
add
pop
rclb
rcrl
sbb
les
push
stos
lcall
add
cmp
call
call
mov
in
push
sbb
lret
mov
fisubs
addr16
push
sbb
stos
mov
adc
xchg
pusha
das
jmp
pushf
jno
cmp
sbb
bound
inc
push
mov
or
add
push
mov
push
outsl
sub
mov
push
add
insl
es
pop
lds
push
mov
sbb
pop
fs
fcoms
dec
cmpsl
adc
jae
add
mov
or
xchg
mov
add
nop
jnp
jge
out
sbb
xchg
xchg
or
mov
adc
fisubs
pop
jne
mov
aaa
popa
je
icebp
or
lock
inc
sbb
xchg
icebp
insl
and
pushl
push
lret
pop
shrb
scas
mov
xchg
out
mov
add
decl
fs
aas
and
test
je
jne
pushf
sbb
or
loop
dec
mov
cmc
jge
imul
xor
and
sub
and
mov
stos
pushf
jge
add
add
inc
pusha
inc
xor
mov
cmpsl
xchg
sub
outsl
push
ss
sub
leave
js
cmp
jge
mov
mov
lock
sti
mov
cmp
sbbb
cmp
jle
in
add
call
xor
pop
push
dec
ud0
fimull
std
fdiv
cmp
cmp
sbb
popf
in
sbb
inc
push
cs
mov
xchg
mov
and
mov
sbb
aam
inc
xor
push
add
dec
mov
cmp
in
mov
add
jo
sub
inc
sete
insb
dec
ficoml
sbb
loope
and
je
sbb
or
push
and
push
or
test
les
inc
loopne
mov
mov
mov
adcl
pop
enter
cmpsb
mov
and
ret
orb
test
movsl
cmp
add
sbb
arpl
pop
lahf
int3
jnp
icebp
add
dec
pop
push
push
pop
push
sarb
loop
pop
pop
je
fwait
adcb
push
dec
lock
out
ret
ja
pop
add
xor
dec
cmp
mov
fucom
push
jae
or
push
mov
stos
mov
mov
fsubrs
push
jge
push
pop
mov
push
iret
ss
in
std
fadd
or
inc
out
sub
cmp
push
lds
or
cmp
sti
add
adc
sbb
mov
nop
das
mov
iret
sub
mov
jne
nop
lret
lds
adc
push
cmp
adc
data16
rolb
cs
adc
xchg
je
mov
ret
xor
popa
lock
in
repz
in
aaa
daa
in
call
xor
lock
and
fdivs
xor
push
xorl
pop
pop
arpl
add
mov
and
nop
dec
adc
add
jno
daa
xor
fdiv
dec
enter
or
jle
test
sbb
mov
mov
xor
dec
push
and
or
orl
or
je
jb
cmp
pop
aam
or
aaa
jbe
ret
inc
bound
adc
cmp
test
lea
dec
and
clc
sub
dec
and
xchg
lret
xchg
mov
mov
hlt
add
sbb
dec
or
lock
dec
clc
jmp
xchg
shlb
xor
lea
xchg
das
mov
add
in
dec
call
cld
sub
lock
lahf
sub
jg
and
clc
fcompl
pop
jl
in
jmp
aaa
hlt
mov
push
scas
jge
out
or
jbe
into
sbb
add
push
outsl
or
and
or
out
mov
mov
adc
sub
outsb
mov
or
insl
inc
aas
add
ds
in
jb
add
aaa
cmpsl
sbb
sub
jg
mov
xchg
fdivl
mov
in
mov
jecxz
dec
pop
push
or
xor
push
movsb
clc
aaa
mov
sub
mov
jno
inc
fildl
scas
sbb
pop
imul
mov
addb
xor
xor
push
mov
js
mov
mov
xor
mov
push
sub
je
cmp
je
dec
std
push
lea
push
test
push
mov
push
in
push
rcll
jbe
push
or
jbe
pop
push
or
push
cmpsb
sub
sbb
jo
mov
sbb
ja
pop
mov
imul
fs
or
inc
jge
push
push
fisttps
sbb
cltd
in
sbb
psubsw
notb
loop
int
and
and
mov
nop
xchg
inc
callw
mull
test
mov
testb
push
add
xor
inc
xlat
ficompl
inc
push
idivl
cld
mov
les
jbe
push
sub
add
dec
adc
cli
call
mov
sub
ret
xchg
push
bound
rclb
aad
icebp
loope
mov
add
cmpsb
add
movb
mov
mov
pop
out
jle
sbb
or
pop
pop
pop
cmpl
add
add
sbb
out
loope
xchg
jno
inc
stc
xchg
dec
sub
adc
inc
shlb
add
iret
xor
test
push
xchg
arpl
dec
push
mov
in
add
mov
insl
pop
push
push
inc
adc
movsb
nop
jb
sbb
in
pusha
test
jb
inc
std
or
push
mov
sar
dec
mov
pop
sbb
sbb
ret
cmp
dec
sti
inc
add
add
push
sahf
or
jg
jmp
mov
jp
or
add
cmp
fildl
cmpsl
push
sbb
mov
fnstcw
icebp
mov
ljmp
inc
sbb
sub
adc
popf
add
aam
mov
iret
pop
add
push
pusha
pusha
jns
dec
leave
or
sbb
inc
pop
jns
ljmp
repz
ret
rclb
ljmp
jns
pushf
es
ret
jg
mov
adc
call
dec
jmp
push
adc
push
pop
mov
mov
lock
push
cmp
lret
push
scas
mov
jl
jmp
lock
add
xor
push
jg
cmp
and
push
call
xchg
add
nop
add
add
lock
adcb
lea
jge
ss
and
or
sub
adc
stos
imul
fsts
pop
shll
inc
cmp
cwtl
movl
push
and
mov
xchg
sbb
adc
int
inc
jnp
aam
adc
dec
jl
pop
rcl
xchg
dec
stc
jnp
lea
inc
jns
or
push
cli
mov
or
add
mov
insl
lea
mull
xchg
shrb
movl
fstps
push
add
rclb
add
outsl
sbb
inc
or
lcall
or
dec
pop
jae
sub
add
cmp
adc
les
inc
mov
addb
lea
test
loope
test
inc
cwtl
adc
adc
and
movsb
cltd
lea
xchg
adc
lcall
jmp
enter
cld
and
sbb
addr16
mov
xchg
test
and
lcall
addb
lret
ljmpw
push
jle
ficomps
lahf
cmp
mov
jl
xchg
dec
loopne
jecxz
xor
add
xchg
adc
xchg
loop
sbb
loopne
leave
lea
xor
adcb
mov
mov
push
inc
subb
xchg
push
push
cmpsb
nop
push
mov
xchg
jo
fistps
xor
je
push
push
or
xor
xadd
sbb
cli
bound
add
push
stos
or
push
std
xor
shlb
mov
xor
rorb
dec
cmpl
add
in
dec
repz
rcll
das
adc
mov
repz
push
jmp
jnp
stos
loope
movsb
push
lret
fwait
das
pop
shrb
push
sahf
call
cmpb
imull
xor
nop
icebp
cmp
pusha
pop
inc
lods
lods
xchg
xchg
xchg
cmpsb
mov
imul
cmp
out
mov
and
mov
loopne
add
pop
or
mov
push
hlt
pop
in
lea
loope
addr16
outsb
jecxz
mov
lret
aam
or
jecxz,pt
mov
pop
mov
cmp
sahf
push
mov
push
and
pusha
inc
nop
xchg
pop
fs
and
mov
pop
pushl
popf
in
lods
pop
mov
lahf
cmp
orb
sarl
les
mov
jne
call
add
push
and
add
add
push
xchg
ret
jmp
or
mov
shll
or
or
add
inc
and
movsl
and
aas
mov
call
insb
divl
jo
push
fwait
es
add
or
push
mov
xchg
fisttpl
xlat
mov
xor
add
dec
int3
mov
cmp
lods
js
adc
movzwl
insb
mov
pop
pop
mov
and
ja
cmp
mov
out
inc
fwait
int3
lods
xor
dec
in
adc
mov
mov
test
jle
pop
inc
adcb
leave
sahf
xchg
rorl
sub
inc
or
mov
push
pop
pop
test
mov
loopne
mov
pop
test
fbstp
sbb
test
test
scas
push
arpl
pop
callw
faddp
xchg
fs
lock
pop
dec
jae
lock
add
add
mov
xorb
fbstp
add
adcb
xor
test
adc
xchg
loopne
mov
cli
inc
insl
jo
scas
in
movsl
jbe
and
push
in
jl
mov
jae
adc
xor
pushf
mov
lea
inc
push
fisubs
test
mov
aam
push
insb
in
push
add
pop
cmp
pushl
add
mov
pop
mov
mov
pop
ljmp
js
mov
inc
mov
popf
orl
fdivr
adc
inc
mov
pop
adc
add
shr
jp
adc
fnsave
fs
test
rolb
or
lods
aaa
jp
push
lcall
mov
or
loope
aas
aad
inc
inc
add
inc
out
xchg
call
dec
sbb
pop
fwait
pushf
cltd
dec
pop
push
add
jno
jmp
ss
dec
loopne
mov
repnz
mov
push
inc
or
pusha
push
mov
lock
lock
arpl
push
cmp
mov
enter
fcmovnu
lret
test
mov
cs
nop
mov
or
adc
xchg
shrb
scas
mov
loop
andl
adc
jge
das
add
sbb
cmp
bswap
push
rcll
jnp
pushf
push
arpl
fildll
push
lods
cmp
push
pusha
imul
jns
sbb
or
xor
outsl
mov
add
xchg
pushf
fimuls
movsb
les
int3
mov
or
add
sarb
repz
or
ja
push
sahf
int3
dec
hlt
es
cmp
add
sbb
adc
push
test
lock
xchg
xor
push
js
mov
mov
movsl
or
repnz
adc
add
cmp
scas
mov
push
nop
shll
mov
fcomps
into
fistl
std
xor
js
jg
pusha
pop
imul
sbbl
cmp
xchg
jge
outsb
loopne
mov
mov
loopne
pop
xor
xchg
and
movl
xchg
push
fdivs
pop
loope
cmp
popf
stos
loopne
xchg
adc
inc
and
dec
fcomps
mov
xor
jno
or
leave
cmp
push
orps
test
imul
cmp
jo
shrb
pop
push
cmp
push
push
mulb
and
cld
jmp
push
inc
sbb
xor
push
cmpsl
addl
inc
or
sbb
popa
sbb
sbb
je
xor
or
shlb
insb
sbb
jno
aas
hlt
cli
cmpl
push
push
pop
cmp
je
stos
fstl
push
or
jle
sub
xchg
movsb
cmp
cmpsl
mov
call
inc
repz
xor
adc
dec
or
jns
push
and
inc
and
pop
dec
test
stc
icebp
and
xor
aam
jge
rorl
add
rol
rolb
or
sub
pop
dec
push
xchg
mov
es
adc
rol
rorb
push
lahf
add
fsubrl
mov
daa
int3
sub
jl
popa
adc
nop
xchg
jo
push
mov
xchg
push
insl
test
enter
loopne
jbe
int3
popf
sub
aas
pop
add
aam
sbb
das
ret
rcrb
xor
and
jns
jbe
or
insl
sub
xor
sub
insl
into
int3
xor
je
push
rorb
sub
bound
paddusb
lret
pop
mov
jge
sub
adc
add
dec
and
and
fsubrl
enter
sbbl
ret
in
mov
pop
jmp
mov
mov
add
sahf
nop
lock
mov
lock
sub
ret
add
sbbb
add
fldl
add
lods
adc
or
and
mov
add
inc
clc
test
push
sbb
sti
insb
add
mov
cmp
shlb
mov
push
lods
adc
or
inc
sbb
loop
inc
fcompl
cmp
sbb
mov
js
fsubr
mov
les
push
cmp
lock
or
cmpsl
jmp
add
les
sub
or
leave
mov
mov
jecxz
mov
push
ss
movsb
dec
pop
or
insl
add
xchg
dec
pop
fsubs
aam
add
fsubrp
test
dec
test
sbb
lock
dec
xorl
inc
or
and
bound
mov
jae
xchg
popf
cli
fisttpl
jge
into
add
insb
cmpsb
scas
int3
stos
test
pusha
pop
jg
ret
xchg
push
ret
push
sub
xchg
int3
push
push
cs
push
ss
cld
je
aaa
insl
test
xchg
mov
sub
mov
rorl
adc
test
jp
inc
xor
sbb
in
jne
sahf
xchg
test
adc
sti
pusha
cmpb
pop
push
mov
mov
outsb
pushf
mov
push
bound
add
sub
add
push
sti
jae
and
aam
mov
enter
loopne
push
pop
lock
mov
sub
mov
subl
bound
ljmp
lock
out
cld
rolb
cwtl
lahf
xchg
add
xor
idivl
dec
hlt
sub
push
arpl
pushf
iret
inc
sarl
outsl
push
mov
inc
or
fadds
xchg
scas
mov
ret
popa
push
jmp
mov
fadds
cwtl
sbb
inc
pop
push
cs
clc
cli
xchg
inc
mov
fnstenv
add
adc
adc
add
add
nop
add
xor
js
dec
scas
cmp
pop
sub
xchg
clc
add
or
xor
insl
xor
or
pop
cmp
xchg
dec
outsb
or
pop
or
push
jns
pusha
pop
popf
ret
movzwl
mov
adc
mov
sbbb
push
int3
sub
cmp
push
inc
inc
ret
mov
cmp
loope
and
enter
rclb
sbb
call
movsb
out
mov
add
add
inc
lock
rcrl
test
pop
push
lock
push
sbb
mov
or
dec
inc
sub
dec
push
xchg
add
aaa
loopne
xchg
jb
mov
add
push
aam
pop
push
add
xorb
stos
lcall
or
sbb
adc
sahf
or
std
arpl
pusha
adc
scas
fsubrs
add
cmp
cmp
out
mov
push
mov
xchg
js
push
mov
nop
loope
pop
insl
cld
ss
je
sub
clc
xchg
decl
mov
sub
lea
push
lea
push
inc
push
sbb
push
setns
xlat
popa
push
leave
sub
arpl
inc
cltd
sahf
fcmovnu
outsl
xchg
lret
cmp
jl
mov
scas
int3
cmp
cmp
jle
pop
sub
lcall
push
sbb
icebp
jne
xor
addr16
mov
add
enter
je
cmp
shll
cmp
out
adc
mov
cmp
je
sub
loope
stos
push
pushw
push
stc
push
jns
in
cmp
fcmovnu
js
add
push
loope
fstps
sti
add
xor
or
xacquire
jmp
sub
popa
fidivl
or
repnz
cmp
in
sub
lea
out
push
dec
or
and
movsl
in
out
xorl
mov
mov
dec
xchg
ret
call
scas
pop
and
cmp
mov
ja
andl
xchg
adc
push
add
mov
pop
cli
mov
call
out
lock
je
push
pop
push
or
cwtl
dec
jo
cmp
sub
sbb
jbe
ljmp
or
or
lds
jne
xchg
fwait
xorl
loopne
mov
and
cmp
je
clc
add
aas
sbb
jbe
push
mov
fildll
mov
pop
push
sti
mov
xchg
repz
repnz
in
add
push
adc
cmp
jb
pop
pushl
rcrb
xor
mov
jbe
jl
pop
test
lret
inc
or
test
push
sub
dec
and
cmpl
xchg
push
or
cmpsb
dec
or
or
rorb
and
bound
mov
inc
shrl
popa
add
cmovle
mov
cmp
adc
push
lahf
add
stos
test
pusha
arpl
popa
adc
ss
inc
sub
sahf
and
jmp
cmpsl
enter
xchg
xchg
fwait
cltd
outsb
jnp
dec
incl
pop
adc
leave
cmp
or
mul
seto
xor
enter
pop
fwait
cmpsl
inc
dec
push
jmp
mov
add
mov
or
sbbl
aas
iret
shl
or
add
xor
or
fildl
cli
add
fadds
adc
loop
mov
jo
adc
mov
cmp
pop
adc
mov
cld
je
aaa
adc
ret
ret
lahf
addr16
add
pop
sub
jle
jecxz
mov
inc
adc
bound
inc
sbb
adc
add
xchg
and
popa
push
andl
sbb
cmp
xor
js
sub
shlb
inc
orl
xlat
inc
inc
clc
jbe
cmp
jp
pop
mov
fwait
ljmp
and
leave
add
inc
inc
scas
sbb
mov
callw
mov
cmpsl
mov
cmp
push
loope
scas
adc
push
je
adc
adc
inc
cld
or
push
cmp
je
inc
or
movsb
jbe
add
ds
inc
mov
mov
jbe
push
scas
xchg
mov
aas
testb
adc
jb
push
xor
out
fbstp
rolb
sub
faddp
jmp
jl
ret
mov
aaa
cld
out
push
test
je
cli
jmp
mov
aam
or
negb
inc
cmp
jae
add
pusha
les
and
les
pop
or
mov
sub
jne
and
sbb
lcall
rolb
pop
adc
int
jmp
in
add
or
cwtl
cmp
fbld
mov
mov
mov
rcl
dec
pop
or
pop
push
jo
adcl
lret
je
pop
aas
movsl
or
mov
or
jo,pn
or
imul
and
pop
fucomip
or
mov
addb
mov
icebp
int
ja
lea
dec
std
cmp
xor
rorb
mov
hlt
jmp
push
jle
test
dec
jns
mov
out
ja
cli
sbbb
dec
movsl
nopl
out
push
pusha
and
cld
lahf
jae
mov
popa
cli
and
or
pusha
lahf
outsb
fcomip
or
push
or
mov
push
mov
xchg
inc
xchg
xchg
dec
rcrl
jbe
jg
push
shlb
daa
icebp
adc
sub
inc
and
or
aad
loop
add
pop
or
or
or
dec
adc
inc
pop
add
or
or
xor
fwait
loop
or
mov
push
das
or
loop
add
push
mov
jl
jg
mov
xchg
test
shl
push
lahf
mov
xchg
push
push
sarb
pop
add
ret
and
adc
dec
pusha
sub
pop
lcall
push
jl
mov
xchg
xchg
or
cmp
test
mov
jns
jmp
clc
and
cmc
push
adc
push
shl
mov
xor
test
pop
ret
add
add
or
xor
jnp
lret
jmp
bound
push
in
inc
in
mov
in
jnp
mov
mov
neg
push
xor
mov
add
mov
cli
jp
or
out
jne
fimull
push
test
mov
imul
inc
jmp
js
or
int
cmp
xlat
add
mov
sub
push
or
mov
jecxz
scas
inc
fwait
aad
stc
dec
or
add
mov
or
movsb
ja
insb
xchg
or
and
aad
ds
ret
xchg
icebp
xchg
popf
popf
pop
lods
cmc
inc
arpl
and
in
adcb
mov
cltd
jbe
mov
jnp
jno
mov
pop
sti
mov
pop
shll
adc
dec
fisubrl
cmpsl
adc
push
popa
mov
lock
mov
cmp
movl
dec
cmp
jae
push
or
push
jle
add
testb
in
inc
rcrb
jae
mov
pop
jnp
dec
sbb
pop
add
or
jmp
ss
jae
insb
adc
push
rcrl
jo
je
iret
inc
stos
lcall
mov
jnp
repz
add
mov
lcall
push
add
mov
mov
inc
pop
outsl
mov
push
orl
movl
add
pop
or
mov
push
adc
stos
pop
xchg
pop
sub
fisubl
jo
sbb
pop
popf
outsb
pop
fs
cmp
sub
dec
sbb
ret
mov
in
popf
inc
push
or
insb
or
test
mov
repz
mov
or
inc
test
dec
ffree
add
outsb
inc
js
test
add
or
lahf
cmc
daa
mov
adc
sbb
fisttpll
pushf
test
dec
add
mov
push
jmp
je
mov
je
aad
dec
jo
das
jo
jg
pop
ja
popa
daa
mov
pop
inc
test
in
mov
pop
add
adc
dec
add
pop
cmp
mov
popf
dec
mov
rclb
and
sub
orl
shrb
js
ret
inc
push
nop
xor
fistpl
or
mov
mov
or
lods
out
outsb
lahf
cld
lea
add
rcl
and
push
or
pop
inc
adc
js
sub
dec
dec
cmp
sbb
mov
cs
loop
sub
xor
add
and
cmp
mov
xchg
into
dec
xor
inc
push
sbb
mov
pop
sbb
js
xlat
rolb
pop
loopne
lods
cs
popf
jg
rolb
scas
shl
push
iret
mov
add
cwtl
xor
sarl
sbb
arpl
out
cmc
loop
mov
jns
push
cltd
sbb
or
push
mov
pop
imul
loop
xchg
add
sub
push
cltd
fsubs
scas
mov
push
daa
pop
leave
lea
out
xchg
mov
in
ss
hlt
enter
clc
adc
aad
push
iret
fmuls
outsb
push
les
sub
int3
fadds
push
cmp
cmp
jp
sbb
adc
and
jae
mov
push
push
pop
inc
out
dec
divl
hlt
outsb
adc
pop
sub
int
sbb
mov
jmp
mov
jecxz
aaa
push
sahf
js
push
faddp
xchg
dec
push
sub
ret
loopne
mov
mov
in
or
popf
add
mov
sub
lods
push
addb
sbb
daa
aaa
push
inc
mov
jb
mov
loop
mov
bound
xor
cmpl
and
inc
or
aad
pop
mov
loopne
xchg
fnsave
sub
pop
and
adc
bound
add
inc
sub
xchg
push
sbb
jg
push
ljmp
pop
pop
push
movsb
loopne
cmp
idivl
and
jbe
or
add
out
stos
arpl
addr16
sbb
ljmp
clc
sbb
sti
faddp
filds
mov
pop
pusha
orl
push
sub
adc
lret
inc
add
lcall
xchg
pop
inc
outsl
shlb
dec
pop
sub
and
adc
pusha
jb
sbb
inc
pop
es
mov
std
lods
add
test
and
iret
xor
dec
adc
push
and
cmpsb
test
test
inc
jg
sub
mov
push
testl
pop
and
das
pushl
mov
fiadds
repz
push
cmp
jae
push
cwtl
adc
sbb
dec
adc
pusha
test
fsubr
ret
rcrb
andb
cmpsl
test
fs
popa
inc
jp
icebp
cmp
jl
test
and
shrb
or
fwait
sub
and
lahf
cmpsl
sbb
adc
ja
xchg
fiaddl
popa
stc
test
rcl
push
loop
in
push
push
mov
in
test
push
fcoml
xchg
lock
fimuls
push
icebp
divb
adc
dec
sar
js
adc
mov
mov
hlt
movb
test
loope
sbb
js
mov
cmp
pop
mov
jne
mov
or
adc
pop
push
and
std
dec
hlt
add
push
imul
fiadds
sub
lcall
pop
or
adc
add
add
ja
stos
mov
mov
mulb
mov
popa
inc
dec
jmp
dec
or
stos
xor
mov
sub
fucomi
movsl
cs
cmp
mov
insb
pop
jns
mov
loopne
bts
xchg
jno
shlb
lcall
mov
popa
insl
inc
clc
xor
push
adc
sub
push
mov
dec
pop
aas
test
pop
ret
mov
cmc
in
xchg
sbb
adc
test
sub
fs
or
sbb
cltd
or
notl
inc
or
xlat
push
test
push
lods
pop
and
jne
and
xchg
ds
test
add
xchg
pop
pop
lcall
mov
cmpsl
iret
rclb
push
es
ss
or
lea
sarb
fmuls
jnp
cmp
cmp
rorb
pop
jmp
mov
and
ret
pop
mov
imul
mov
orl
adc
out
inc
xchg
pop
aad
in
mov
cltd
movsb
mov
or
inc
rcrb
or
adc
add
xor
jecxz
cmpsl
out
sbb
inc
push
inc
insl
imul
insl
pop
pop
in
orl
xor
or
in
add
jp
stos
fcmovbe
loopne
xchg
imul
cmpsb
xchg
in
add
add
xchg
movl
dec
fstp
movsl
adc
jmp
or
lock
cwtl
dec
repnz
cwtl
xor
sar
add
lea
mov
dec
mov
push
mov
push
or
mov
add
add
shlb
lea
adcl
sbb
jecxz
insl
xchg
xlat
push
adc
loopne
push
mov
adc
nop
rol
push
push
adc
test
lods
mov
pop
pop
clc
aas
dec
rcrl
sub
xor
xchg
hlt
loope
push
test
dec
fdivs
sub
addl
cmp
push
jmp
js
add
aas
shr
jge
add
jle
outsl
es
or
sar
cmpsb
xchg
jnp
orl
push
push
js
fcomps
bound
je
sbb
test
lea
pop
pusha
cmp
stos
test
jne
inc
mov
push
pushf
inc
push
cmp
jbe
shlb
dec
mov
bound
dec
jo
xchg
push
aas
test
add
pop
pop
lods
jne
cmp
push
adc
adc
popf
icebp
add
pop
dec
jbe
mov
andl
pop
push
inc
xchg
loop
lds
pop
das
lods
js
movsl
test
cmp
sbb
out
adc
mov
fsubrs
mov
cmp
pushf
adc
jle
cmp
push
rcll
jae
and
sbbb
fsubr
aam
out
rcrb
adc
push
movsl
push
sbb
enter
std
push
or
cmp
dec
ds
aas
cld
mov
insb
out
add
test
xor
fdivrl
aas
dec
dec
sti
nop
cmpsb
cmp
dec
rclb
dec
cmp
cld
insb
push
push
push
cmc
inc
sahf
dec
pop
xchg
sbb
push
pcmpgtb
js
jno
cmpsb
arpl
push
das
xchg
sbb
sbb
lahf
mov
fwait
shl
out
cmp
xor
push
inc
das
movsl
jge
aam
cmp
xor
dec
pop
push
rcrl
adc
cwtl
xor
or
popf
ret
and
dec
jmp
push
scas
xchg
lods
enter
or
or
pushw
mov
cld
sahf
dec
pop
inc
ljmp
fs
inc
mov
adc
adc
mov
dec
enter
and
cmc
bound
mov
fcomps
mov
mov
test
lea
xor
add
sbb
fsubrl
pushf
adcb
dec
cmp
sbb
ljmp
add
loopne
add
loopne
les
push
sub
sbb
fistps
fcompl
mov
test
sbb
fsubr
ret
sbb
push
faddl
and
pusha
sub
push
jo
sbb
std
jmp
in
jp
push
dec
pusha
lahf
test
pop
and
orl
js
mov
in
dec
add
fimull
lret
inc
add
push
out
das
sbb
sub
pop
rol
or
inc
add
jb
js
int
scas
pop
je
incb
dec
in
jno
lea
lea
sbb
jb
mov
and
or
xor
pop
imul
int3
les
jl
xchg
test
mov
add
test
int3
mov
xchg
cld
mov
test
inc
and
cmp
and
xor
pop
sbb
loope
sti
sbb
jo
push
rcll
or
mov
call
fs
lods
sbb
scas
and
mov
scas
mov
xor
incb
push
add
add
pop
popf
mov
mov
xchg
js
repz
cmp
fimull
call
or
push
inc
add
mov
stc
popa
or
xor
add
mov
sub
mov
sub
or
daa
add
popa
add
out
aas
je
dec
mov
xor
inc
xchg
lds
aas
pushf
jge
xor
pop
imul
aam
push
imul
mov
dec
cmp
dec
xlat
scas
sub
popf
icebp
lock
jb
adc
ja
sub
or
popa
add
push
movl
stc
ds
inc
adc
pushf
cwtl
rcrb
xor
aaa
in
add
ljmp
add
adc
jge
lds
jns
and
add
pusha
pop
ret
scas
mov
fiadds
add
ss
sbb
aad
aaa
xor
out
pop
shl
or
inc
adc
mov
add
mov
out
xor
add
aam
je
dec
jne
pusha
mov
cmc
lcall
or
bound
shr
and
jmp
dec
dec
sub
dec
cmp
sarl
aam
sub
ret
int3
pop
fadd
cmp
xor
repz
mov
in
mov
js
push
add
lods
and
sub
andl
cld
loopne
in
and
movl
xchg
daa
xor
divb
enter
push
lea
cli
jb
cltd
test
jae
pusha
inc
outsb
cmp
lods
or
jmp
or
cmp
repnz
sbb
shll
push
jns
mov
xlat
je
jp
push
mov
push
pop
and
mov
lcall
ret
test
shrb
pop
cmp
xor
jns
loope
aam
repnz
into
adc
pop
fs
push
jae
push
xchg
inc
bound
adc
or
mov
lock
add
cmp
testb
lock
fmul
data16
hlt
push
movsl
dec
ds
je
pop
rorb
cwtl
ret
xor
inc
sbb
roll
sbb
inc
push
xor
push
mov
outsl
int3
or
call
jmp
inc
and
and
lea
push
cmp
in
mov
jne
cltd
adc
mov
push
dec
jl
pop
dec
push
lods
ret
xchg
adc
xchg
aaa
push
or
int3
rorb
cld
lods
mov
inc
fcmovnbe
jmp
cmp
je
aaa
pop
add
cmpsl
js
shll
adc
cmpl
add
adc
add
adc
pop
mov
jnp
add
push
fldl
add
dec
xchg
fnsave
lfs
fs
popa
add
rcrb
sub
inc
push
pusha
incl
inc
cmpb
inc
lea
fnstcw
mov
test
jmp
lods
and
jne
pushf
lods
outsl
bound
push
test
xchg
cmp
notb
or
xchg
sbb
cmp
ds
movsl
adc
lcall
nop
or
or
sub
add
push
imul
jbe
fcoml
jnp
jae
ret
xchg
arpl
adc
jbe
dec
movl
andl
adc
push
xor
sub
cld
inc
xchg
mov
lret
ja
mov
adc
pop
xor
pop
enter
mov
cmpsb
add
push
mov
pop
test
ret
mov
jo
popa
mov
sub
or
and
loope
fdivrs
ja
jge
mov
mov
or
jno
inc
cmp
jl
leave
cs
add
dec
repz
adc
sbb
dec
and
add
lods
cmp
mov
clc
inc
cwtl
mov
insb
dec
mov
inc
decl
jmp
js
jo
enter
insb
mov
scas
cltd
les
mov
or
dec
mov
shll
in
mov
add
imul
or
push
dec
andb
sbb
cmp
in
mov
jae
inc
ja
daa
fistpll
popf
inc
jae
icebp
add
pop
jnp
ret
add
incl
aam
push
je
ret
mov
xchg
rorl
add
mov
lea
xor
andl
sbb
and
push
sub
dec
push
fisubrl
lods
or
fdivrl
inc
lods
loope
insb
xchg
addl
cli
inc
inc
push
cltd
pop
or
sub
and
or
mov
inc
std
gs
imul
mov
popf
mov
pop
mov
xor
cmpl
test
and
mov
sti
sub
pushl
dec
aas
dec
jno
adcb
loope
daa
pusha
or
inc
jmp
push
jl
push
loopne
mov
dec
add
adcl
aam
jbe
mov
inc
dec
aaa
lods
stos
test
push
mov
das
jl
sub
xor
push
and
inc
sub
pushf
in
fiadds
or
mov
loopne
cmpsb
mov
call
subl
shll
imul
sbb
inc
pop
adc
out
adc
pop
lock
aam
push
je
incl
inc
sub
jns
mov
push
minps
push
lods
inc
dec
xor
aam
dec
sbb
lods
and
dec
inc
or
pop
pushw
sbb
sbb
pop
mov
test
cld
cmp
lea
push
and
pop
xor
or
sub
lea
sti
pop
jb
cli
sbb
sub
sbb
in
pushl
cld
pop
adc
sub
xor
addl
mov
ja
dec
in
xlat
dec
pop
mov
inc
and
jmp
mov
adc
push
mov
adcl
mov
test
nop
pusha
adc
or
cltd
mov
addl
popa
inc
sub
push
cmp
shl
or
pusha
imul
stos
ds
jno
adc
push
push
xchg
icebp
pop
or
inc
add
cmc
jns
mov
xchg
hlt
adc
dec
cs
insb
filds
push
movsl
lods
xchg
aas
cli
insb
cmp
loope
ss
mov
or
testl
push
sbb
xor
mov
jl
stos
sti
xchg
stos
push
out
cmp
jge
xchg
push
cmp
imul
xchg
cmp
stc
adc
add
dec
and
jmp
sbb
cmp
and
outsl
push
in
sbb
xchg
xchg
outsl
lds
sbb
add
mov
fsts
sbb
inc
into
cmp
sbb
push
pop
lds
add
xor
sbb
adc
add
sbb
jns
cltd
addl
add
dec
movsb
and
mov
push
xor
or
shr
sbb
mov
int
push
sub
sub
js
xor
inc
sub
push
adc
xor
or
test
pop
add
in
dec
push
sti
pop
add
shll
pop
std
aas
movl
test
out
das
add
push
sti
push
push
or
out
andl
xor
in
pop
jb
push
imul
ss
pop
push
sub
fidivl
aad
and
aam
movsb
sub
stos
lret
xor
mov
pushl
push
repnz
insb
xchg
fistpl
dec
or
js
pop
sub
dec
cmp
xor
sbb
pop
push
or
aaa
sub
rolb
or
fnop
or
push
xchg
repnz
sarb
and
dec
aad
inc
and
cwtl
pop
mov
subl
mov
out
loopne
sbb
out
mov
push
bound
cltd
out
das
adc
adc
and
mov
outsb
and
je
mov
and
lea
fs
add
rolb
xor
and
fwait
cmpl
adcl
pop
pop
test
jo
ss
inc
aaa
sub
or
orl
cltd
fs
jae
mov
int
adc
jno
inc
cmc
cmc
mov
stos
das
in
lret
out
je
bound
dec
loopne
xor
sub
xor
pop
loop
cwtl
movsb
sbb
inc
pusha
outsl
jne
lea
push
pop
pop
orb
push
les
pop
xor
or
jmp
inc
imul
lret
mov
cmpsb
icebp
adc
sarb
outsl
mov
fldl
sub
andb
push
cmp
aaa
icebp
sub
and
pop
repz
push
sub
outsb
adc
movsl
dec
shrb
mov
sub
popf
arpl
add
jnp
in
push
adc
cmp
or
jmp
mov
inc
push
and
mov
mov
adc
jge
pop
xor
sbb
leave
pop
and
sbb
mov
jbe
mov
mov
mov
push
pop
cli
push
sub
lahf
cmp
or
pusha
mov
sbb
lahf
or
add
cmpsl
inc
fldl
inc
pop
mov
in
mov
out
jno
mov
mov
insl
ret
mov
nop
aaa
sub
call
mov
leave
in
lea
movsl
testb
rep
or
adc
xlat
test
pop
mov
mov
negb
and
xor
sbb
pop
lahf
or
pop
xlat
divb
popf
inc
jge
cmp
daa
jmp
mov
dec
fstps
mov
and
or
jg
push
cmc
je
and
jle
fisttpll
jne
aad
mov
pop
stos
ret
push
xor
sbb
mov
xlat
aaa
sbb
iret
mov
dec
and
iret
movsl
push
das
mov
jg
xchg
fcmovb
sbb
into
or
sub
pop
addb
lret
in
fadds
imul
jge
adc
repz
scas
push
jbe
in
divb
mov
xor
rorl
jmp
mov
lcall
cmp
pop
xorl
testl
xor
pop
push
out
inc
push
cmpsb
or
cmpsl
dec
add
pusha
ss
adc
mov
jae
mov
iret
add
loope,pn
mov
dec
lret
loope
jno
and
push
dec
enter
xor
ljmp
sarl
sub
push
cmp
adc
mov
sbb
and
push
test
push
xchg
and
xor
lds
cmpsl
jno
and
arpl
arpl
or
or
popa
pop
inc
out
lea
push
mov
test
pop
enter
xor
xor
nop
or
and
sbb
pop
and
and
repnz
pop
inc
xor
inc
jb
and
pusha
xchg
push
mov
dec
push
in
and
sbb
and
daa
inc
mov
cmp
and
mov
je
rcll
xchg
call
xchg
sub
push
lds
pop
cmpsb
popa
pop
pop
and
and
in
cmp
enter
cmp
sub
or
out
xor
in
adc
push
aaa
outsl
shll
pop
pop
mov
push
push
sbb
imul
pop
enter
pop
das
hlt
push
mov
xor
push
addl
loopne
pop
and
outsl
mov
jo
dec
dec
xor
cmovns
insl
xchg
ja
or
or
sbb
or
cmp
pusha
lea
fisubrs
fwait
nop
out
push
adc
and
adc
dec
add
add
and
adc
movb
add
popa
push
push
xchg
sub
jb
cmp
add
inc
pop
or
test
xlat
sbb
xchg
in
hlt
in
pop
fcmovnu
and
inc
sub
push
data16
xchg
rolb
inc
repz
nop
fiadds
aaa
daa
icebp
inc
fisubl
push
mov
sbb
lock
pop
sbb
or
add
pop
xchg
icebp
rclb
xchg
lock
cs
cmpsl
add
fidivrl
pop
insb
dec
mov
sbb
in
clc
loopne
add
inc
in
sub
push
into
fmull
adc
aam
add
jl
lcall
fsts
pop
adc
push
and
adc
bound
popa
jbe
insb
pop
stos
jo
push
add
in
sbbl
fdivs
cwtl
rcrl
dec
xchg
icebp
push
add
rorb
icebp
cmp
pop
push
xor
pop
push
andb
dec
adc
mov
adc
xor
icebp
sub
pop
aam
fists
jle
fwait
les
lar
imul
push
push
push
icebp
or
jl
mov
jbe
testl
sbb
dec
mov
or
mov
cmp
je
inc
xlat
adc
test
nop
ret
rolb
sub
and
jecxz
add
cwtl
cmp
icebp
mov
shrl
pop
int3
lcall
cmpl
dec
cmpsb
filds
mov
inc
mov
dec
and
inc
jecxz
pushf
adc
xor
fsubrl
push
mov
jnp
cmp
push
cmpsb
xchg
add
inc
fcomp
push
faddl
xchg
imul
les
daa
mov
add
inc
enter
push
les
xor
jns
inc
lahf
shll
mov
xor
lock
pop
mov
pop
orl
int
loope
push
sti
dec
xor
ja
and
ja
cmpb
sbb
int3
cli
ret
push
cld
push
xor
cmp
ljmp
push
mov
nop
mov
clts
repnz
or
xchg
mov
inc
push
xchg
jge
push
push
icebp
jne
inc
jne
push
loopne
or
mov
jge
mov
ja
mov
jne
test
add
add
aaa
adc
dec
add
cltd
clc
popa
inc
push
push
rcrb
arpl
popa
and
and
in
pusha
stos
mov
sbb
je
cmp
addr16
and
sbb
shrb
pop
dec
lea
movsb
mov
aad
adc
xchg
push
jmp
inc
popf
inc
stos
es
adc
xchg
lcall
mov
fldcw
add
cmpsl
inc
mov
lret
gs
adc
cmp
jle
xchg
cs
sbb
adc
js
lea
hlt
inc
pop
mov
sbb
aas
cld
add
xor
sub
fcompl
lods
in
sub
mov
cli
and
sbb
outsb
dec
inc
inc
in
fcomps
rorl
mov
loope
push
inc
dec
push
inc
jmp
mov
roll
sub
sub
pop
aaa
xor
adc
cmp
mov
pop
fistl
sbbl
jmp
sub
xchg
push
cmp
or
leave
push
sbb
loop
dec
sbb
or
add
xchg
nop
stos
add
dec
inc
stos
mov
pop
inc
enter
int3
std
mov
mov
dec
jae
and
loop
dec
mov
sbb
sbb
insb
mov
aam
pusha
es
fs
xchg
cmc
nop
aam
push
popa
pop
out
add
and
xorl
test
inc
pop
push
test
lret
mov
xorb
add
cmp
dec
jle
ss
add
stos
mov
test
xchg
shlb
or
loope
sub
rol
cmp
out
inc
inc
or
or
loop
enter
jae
inc
add
outsb
mov
push
scas
orl
jno
add
cmp
mov
cmp
jo
mov
sbb
enter
gs
xchg
add
xor
flds
mov
mov
lret
jp
sbb
jmp
xor
lock
add
or
cmp
sub
stc
in
fistpl
adcb
addr16
inc
ds
inc
push
inc
dec
sub
sbbl
inc
push
les
lea
push
push
addr16
push
int3
add
cmp
pop
mov
xchg
lret
stc
add
sub
push
and
mov
loope
mov
add
add
leave
xor
mov
jecxz
movsl
push
sub
test
hlt
ja
jp
mov
test
add
and
cmp
dec
and
daa
daa
mov
pop
or
cmp
das
pop
jp
mov
sub
adc
lret
sti
or
jmp
pop
mov
and
xor
movsb
movsb
dec
adc
dec
shrb
movl
cld
mov
dec
andl
dec
imul
mov
cmp
filds
cmpsl
mov
dec
cmp
xlat
sub
lea
ljmp
stc
or
sbb
add
fwait
adc
cs
add
add
loopne
dec
aaa
adc
clc
inc
sbb
xchg
in
sbb
cltd
jne
mov
dec
cmpsb
xor
xchg
and
sub
popl
sub
add
daa
sub
daa
jecxz
fdivrs
movsb
sbb
out
xor
and
adc
xchg
inc
inc
mov
xor
and
adc
push
mov
adc
jmp
lea
jae
dec
pop
bound
or
adc
push
sub
call
adc
add
mov
mov
pop
push
xchg
adc
rcrb
push
rcrb
pusha
add
pusha
inc
xchg
xchg
adcb
xchg
sbb
sbb
xchg
std
and
mov
cltd
mov
mov
stos
test
mov
dec
aaa
scas
cmp
pop
and
push
enter
cmp
mov
push
lea
pop
push
push
xor
dec
mov
mov
push
daa
mov
sbb
sub
call
pop
je
sahf
incl
sbb
sub
jo
sbb
iret
leave
push
fsubrl
nopl
call
xchg
ret
sbb
rorl
dec
cmp
pop
cmp
shrb
loope
movsl
xchg
push
adc
je
sub
or
or
imul
mov
lahf
push
fistps
rclb
pop
adc
test
adc
inc
add
cmp
inc
aam
inc
add
mov
icebp
mov
fldenv
mov
add
xor
adc
dec
in
pop
and
xchg
sub
aam
dec
adc
add
enter
std
lods
xor
data16
sarb
dec
or
test
insl
mov
add
mov
test
pusha
out
mov
js
and
lahf
add
cmp
jge
mov
je
pop
sub
into
inc
adc
adc
sub
pop
push
jp
and
or
incb
inc
cmp
insl
and
daa
imul
insb
xorb
clc
fists
inc
js
fimull
cmp
adc
push
adc
cmpsb
rcr
sbb
add
or
es
or
push
es
fdivrs
push
xchg
orl
fs
dec
lods
add
adc
sub
dec
and
cli
pop
aaa
cs
xor
jmp
inc
adc
mov
cmp
rcrb
sbb
sub
dec
je
cli
push
enter
ja
add
push
sub
cmpb
add
movl
push
fwait
pop
nop
xchg
sbb
cmp
das
lret
push
jp
insl
inc
inc
push
mov
in
inc
roll
cmp
push
sbb
push
add
or
fs
bound
lods
popa
ds
add
and
add
aaa
push
ja
push
push
jo
ficompl
dec
add
xchg
push
xchg
and
ss
add
lcall
mov
out
popa
stc
or
test
movl
xchg
lods
sbb
icebp
jbe
dec
mov
cmp
lahf
and
out
js
fadds
movsl
push
push
sbb
xorl
subb
mov
push
sbb
arpl
sbb
jo
push
jo
addl
or
adc
ljmp
movl
imul
xor
mov
cmp
xlat
mov
lcall
push
sbb
cltd
ret
mov
sarb
push
and
and
outsl
jle
jecxz
int
je
adc
jbe
test
dec
dec
testl
dec
add
xchg
xchg
inc
add
push
xor
inc
push
repz
xchg
repnz
push
lea
stc
mov
add
repnz
sbb
lods
lds
out
out
sbb
xchg
aam
clc
adc
sub
rcrb
mov
add
cmp
inc
sbb
je
in
add
jge
add
jae
lea
fs
imul
popa
inc
inc
add
push
je
push
mov
mov
in
push
test
mov
add
add
push
enter
in
jnp
or
push
bound
imul
sbb
test
iret
aas
loope
pusha
bswap
nop
mov
movl
xor
or
call
inc
or
mov
or
adc
test
dec
arpl
xchg
subl
sbb
arpl
mov
inc
int3
or
cli
or
mov
push
testl
mov
les
sbb
or
mov
mov
or
cmp
movsb
repz
pushl
push
mov
movsb
push
inc
jno
wrmsr
rol
and
cs
scas
orl
dec
cmp
xor
ret
fisubl
sub
fstpl
jmp
or
ret
push
cmp
jmp
and
or
cli
or
adc
nop
lds
shlb
push
inc
and
mov
cwtl
mov
adc
mov
inc
add
aam
push
pop
repnz
dec
mov
adc
decl
fs
loopne
adc
arpl
fisttps
jne
movsbw
mov
outsb
push
sbb
cmp
jne
and
or
test
je
or
inc
js
rorb
adc
pushf
add
inc
hlt
mov
in
jne
insl
hlt
push
inc
std
js
push
jle
rolb
pop
dec
cmp
or
inc
je
push
lods
testb
sbb
aad
push
mov
adc
movl
shll
andl
xor
xchg
xchg
xor
push
jg
lea
fucomi
add
cmpsl
push
inc
dec
sahf
das
fwait
dec
lods
repnz
ret
mov
xor
sbb
and
cmp
pop
mov
mov
imul
inc
xchg
dec
cmp
adc
cmpsb
inc
gs
scas
je
pop
je
push
sub
mov
dec
sbb
pop
and
lock
movsl
xor
cvtps2pi
inc
or
int3
dec
xchg
neg
hlt
and
lods
cs
test
daa
add
neg
out
mov
dec
mov
aad
in
ret
imul
ja
pop
xchg
pushl
push
push
cmp
int
mov
movsb
sbb
aad
sbb
movsl
adc
inc
lock
mov
shrl
ret
inc
push
sbb
mov
incl
xor
ret
push
std
jne
sbb
andb
or
and
xor
adc
aam
add
iret
js
xchg
pop
mov
mov
imul
outsl
xor
dec
jg
and
mov
inc
test
add
xchg
xchg
xor
aam
enter
aam
xchg
sbb
xor
std
adc
lcall
loop
mov
mov
insl
popa
cmp
xor
mov
hlt
jo
push
test
and
dec
adc
sbb
jns
clc
cmp
adc
cld
push
push
js
inc
push
dec
mov
push
lock
jae
out
in
movsl
cmp
cmp
dec
fs
in
repnz
mov
push
in
test
and
add
mov
sub
mov
jle
mov
or
mov
add
movl
push
test
mov
xor
cmp
insb
addb
inc
mov
ret
out
or
mov
sbb
adcb
stc
push
jp
push
pop
dec
cld
sub
mov
pop
fcomps
adc
sub
sti
cs
push
sub
mov
jno
adc
test
dec
ret
inc
xor
rclb
sti
popl
mov
movl
stc
xor
mov
inc
rolb
je
sbb
into
int3
mov
add
sub
pushf
sarb
add
pop
xor
stos
inc
ds
sahf
pop
inc
sbb
or
ficomps
movl
cmp
and
sub
ret
loope
mulb
loopne
add
lret
dec
mov
add
roll
or
test
sub
xchg
mov
jns
pusha
or
mov
orps
push
test
sub
add
in
cmp
sub
enter
or
push
clc
sub
dec
stc
and
jg
out
push
add
push
push
push
push
leave
push
or
push
pop
xor
mov
mov
stos
ret
or
icebp
push
jne
mov
push
lock
addl
dec
fadds
adc
adc
cs
stos
aas
dec
adc
pushf
push
movsb
cmp
xor
js
mov
fsubs
adc
andl
ljmp
adc
repnz
xchg
nop
loopnew
mov
mov
repz
leave
mov
mov
cs
or
xchg
cld
jmp
push
rorl
ret
js
or
inc
cmpb
xchg
data16
inc
cwtl
lcall
orl
hlt
adc
aas
pushf
lea
incb
cli
mov
pop
add
fs
mov
lods
fnstsw
mov
pop
cmp
cmp
jle
cmp
jnp
imul
out
add
xor
loope
jp
xchg
xchg
jbe
loop
popa
outsb
or
enter
adc
rolb
sbb
jnp
cmpsl
and
insl
mov
add
pop
sbb
adc
cmp
movsl
mov
cmp
push
test
les
ret
add
test
sub
pop
das
inc
sbb
xor
lock
in
cltd
xor
pop
add
add
mov
stos
arpl
add
add
data16
xor
xor
outsl
xchg
enter
adc
mov
inc
cmc
and
scas
xchg
xlat
test
push
push
xlat
inc
cmp
mov
pop
pop
jbe
fadds
push
pop
push
xchg
addr16
pop
push
sbb
shll
fildll
movsl
cmp
add
add
push
notl
cmp
inc
jne
cmpl
jb
or
add
mov
mov
adc
sbb
mov
mov
mov
sbb
out
rcll
pop
in
lea
push
sbb
aaa
add
add
imul
icebp
or
add
push
pop
xchg
or
and
mov
xor
jne
cld
or
jl
jb
jl
ja
mov
inc
adc
adc
or
or
loopne
shlb
sub
pop
shrl
notb
movq
dec
les
insb
pop
dec
scas
in
sub
enter
insl
jne
imul
mov
dec
shrl
stos
je
jge
mov
sahf
ret
int3
call
dec
ljmp
push
cmp
mov
push
pop
roll
xor
es
jp
dec
pop
cmp
icebp
inc
hlt
jmp
cmp
ljmp
inc
mov
or
pop
int3
je
loop
arpl
add
pop
push
rol
ja
notl
lods
mov
cmpsb
loope
or
je
push
sbb
or
adc
je
add
lds
insb
mov
daa
std
mov
cmp
dec
jge
add
or
dec
pop
and
cmp
gs
test
mov
imul
push
pop
add
pop
pusha
icebp
and
andl
inc
loop
push
inc
add
mov
jge
xchg
mov
bound
lret
cmp
cmp
adc
test
inc
sbb
push
cwtl
fmuls
repnz
mov
add
rcll
mov
sbb
xor
sub
push
ror
inc
cli
cmc
push
inc
cmp
fchs
jmp
test
insb
andb
push
loopne
or
mov
push
mov
test
sarl
push
ret
inc
ret
adc
mov
cmpsb
jnp
pop
sub
mov
sbb
sbb
out
mov
mov
mov
push
adc
stc
jle
add
cmpw
sbb
cmpb
pusha
sub
push
push
ja
cmp
stos
ss
push
pop
mov
decl
add
stc
jb
push
je
add
dec
inc
mov
jl
jns
adc
pop
jns
mov
adc
addr16
pop
pop
jmp
lea
add
mov
jbe
sbb
mov
cld
shlb
dec
push
xor
sti
and
sbb
shr
cmpsl
outsl
cld
lcall
dec
outsl
out
jg
movzwl
cmpl
push
adc
rorl
jns
inc
or
rclb
add
sbb
cmp
jl
sub
sahf
sub
fimull
test
cmp
push
shrb
xor
or
enter
jg
rcrl
mov
push
add
jae
bswap
push
cmp
sahf
ss
mov
pop
and
pop
and
enter
cmpsl
bound
hlt
jne
jb
xchg
add
inc
xlat
cmovg
pop
dec
pop
push
pop
push
fmuls
jo
pop
andl
and
lea
adc
xor
or
insl
add
faddp
pop
adc
sbb
mov
je
mov
movsl
adc
push
imul
and
push
push
icebp
or
and
sbb
mov
pop
sbb
cmpsb
and
outsl
fisttpll
pusha
and
mov
mov
data16
adcb
sbb
fadds
stc
filds
mov
ret
jb
inc
pop
mov
xor
xor
lock
cmp
mov
fists
pop
dec
ss
push
inc
test
mov
push
ss
add
dec
adc
iret
mov
ss
cmpsb
addl
dec
das
in
shr
add
ret
push
cld
test
lock
jmp
sub
sub
mov
and
or
mov
xchg
shll
lods
popa
adc
stos
mov
jbe
addr16
adc
and
sbb
cmpb
sbb
push
add
xlat
add
inc
pusha
xor
and
rorb
or
dec
push
pop
dec
daa
rcrb
add
cmp
cmpl
pop
je
or
in
aaa
lods
adc
call
xor
xor
lods
mov
cmp
mov
test
jecxz
sbb
mov
or
sbb
jl
jne
dec
sub
inc
hlt
ret
call
lea
cmpsb
mov
ret
pop
add
les
imul
dec
movsl
lret
jmp
mov
rorb
das
andb
push
and
and
xchg
cmp
rcll
sbb
icebp
and
sub
movsl
aad
lods
adc
call
push
or
scas
xor
xchg
sbb
cmc
lcall
testl
inc
icebp
hlt
movsb
je
in
mov
loopne
cs
dec
imul
scas
add
inc
or
cmp
data16
pop
sbb
psubw
es
mov
xchg
js
dec
push
incl
jbe
cs
flds
dec
lods
adc
xlat
xor
in
inc
ficomps
adc
add
pop
pop
inc
mov
mov
movl
adc
adc
sub
mov
rolb
test
ret
shlb
sub
push
xor
push
inc
test
daa
aaa
mov
cmpsb
std
cmovo
xor
jmp
push
push
das
xorb
push
sbb
enter
or
sub
sbb
test
in
fbstp
mov
pop
es
mov
in
inc
into
push
dec
mov
lock
sub
pop
shrl
adcl
cmp
pusha
add
inc
dec
xor
inc
sbb
lea
idivb
cs
pop
mov
add
push
sbb
mov
or
mov
repnz
mov
dec
lahf
stos
pop
aaa
adc
inc
jno
lods
inc
mov
push
sbb
test
push
add
push
dec
sub
stos
in
push
or
jmp
inc
sahf
addr16
shlb
sub
mov
out
popf
outsl
push
add
mov
popa
iret
cmpb
inc
inc
dec
push
jle
and
scas
nop
mov
repz
shlb
clc
mov
xlat
sbb
nop
mov
jne
sub
xorl
push
sbb
test
outsb
mov
sub
fdivs
push
xor
clc
pop
fwait
ljmp
inc
test
push
dec
push
adc
lea
pushl
sbbb
fidivrs
xor
sbb
mov
andl
xor
loopne
andps
cmp
sub
jecxz
jle
aaa
add
pop
xchg
je
enter
rorb
orb
mov
mov
mov
pop
mov
mov
push
or
add
push
sbb
repz
cmpl
cmp
test
movsl
inc
mov
call
repz
push
sub
pop
adc
and
addr16
lret
xchg
enter
push
lea
dec
es
adc
jmp
aam
data16
mov
and
adc
jo
inc
fisubs
inc
mov
rcr
pop
adc
adc
hlt
jbe
dec
push
push
sub
xchg
mov
sbb
mov
xor
movsb
leave
std
fsts
inc
jle
inc
cld
out
fucomp
jmp
add
dec
psrad
std
lea
xor
imul
pop
pop
mov
xchg
lea
push
mov
lock
add
jae
push
out
test
je
mov
outsb
fadd
fstpl
and
clc
push
xor
jbe
push
xchg
cmpsb
cmp
hlt
mov
test
lods
sub
or
xor
rclb
mov
insb
jno
mov
aam
dec
mov
push
push
push
pop
repz
mov
pop
and
adc
or
pop
cmp
cmp
sbb
push
inc
or
and
xchg
loop
adc
cmp
jmp
push
jg
mov
clc
repz
cmp
out
pop
push
sbb
or
jmp
push
xchg
sbb
and
dec
xchg
aaa
add
pop
andb
inc
or
or
and
cli
repz
mov
add
leave
cmpsb
or
or
cld
stc
or
adc
dec
or
pusha
ljmp
and
and
in
pop
inc
sbb
test
stc
adc
sbb
aas
sbb
repz
xchg
xor
jne
xor
or
outsb
or
pushf
and
cmc
test
arpl
unpckhps
and
ja
xchg
add
mov
dec
push
in
pushf
inc
add
es
nop
adc
lea
or
inc
or
mov
cmc
dec
or
dec
and
cmp
xchg
nop
xlat
lahf
adc
repz
inc
sbb
sub
mov
cs
inc
jo
jmp
test
dec
sub
subl
ret
stc
addr16
loop
aam
or
add
adc
or
cwtl
outsl
hlt
scas
rol
xor
pop
mov
push
fdivs
test
stos
jmp
sub
into
fadds
push
or
pop
addl
and
daa
out
pop
jb
sub
or
mov
and
mov
and
aad
sub
and
dec
mov
iret
or
push
xchg
and
add
jne
push
shrb
lret
lea
js
or
xchg
jle
ret
inc
add
lea
nop
subl
jb
cmpsb
popa
inc
aaa
sub
and
popa
mulb
insb
es
mov
push
or
and
xor
popa
add
push
push
and
mov
cld
cltd
pop
stos
out
lea
push
mov
ret
rorb
push
or
sbb
xor
or
adc
popf
add
inc
pop
lods
add
data16
hlt
clc
nop
mov
cwtl
mov
insl
or
mov
or
cs
cmpb
push
push
push
inc
in
xor
lea
pop
adc
or
mov
push
adc
pushf
roll
add
loope
gs
aaa
push
mov
adc
or
sbb
or
movsb
movsb
loop
inc
in
lock
sbb
sbb
jmp
xchg
dec
push
push
add
adc
nop
cmp
ss
addr16
mov
push
adc
jmp
sti
nop
xor
or
and
mov
xor
mov
and
pop
xor
pop
pop
mov
jno
leave
push
xor
lods
and
pop
adc
inc
int
mov
mov
popa
xchg
ds
lock
cmp
lods
roll
adc
push
mov
loopne
add
inc
xor
mov
sub
sub
movsb
sbb
lcall
sbb
aaa
sbb
sbb
pop
stos
mov
cmp
push
pop
outsl
push
aam
pop
lea
out
push
fmul
cmp
aad
sbb
push
push
imul
add
inc
dec
std
lahf
or
xchg
adc
cltd
rolb
adc
pop
add
sub
andl
lea
mov
stos
or
fwait
subb
push
mov
cli
cltd
loopne
or
lock
cmp
rol
and
push
fldcw
sub
and
pop
add
inc
je
ljmp
cltd
jns
pop
push
aad
sbb
add
xchg
out
imul
icebp
mov
sub
add
mul
and
stos
in
push
or
cli
sub
sub
int
cltd
sub
mov
lahf
push
add
test
add
dec
insb
data16
repnz
loopne
xor
leave
rorb
shll
nop
pop
sub
jae
jmp
incb
andl
hlt
cmp
icebp
jb
test
xchg
xor
or
inc
les
sar
adc
jl
mov
mov
xchg
nop
and
dec
call
cmp
sbb
inc
mov
and
or
xchg
push
push
xchg
call
mov
lea
and
fs
jb
lea
push
adc
xchg
adc
push
jns
dec
pop
push
popa
adc
sub
mov
inc
add
push
xlat
push
in
or
mov
mov
aam
movsl
push
outsb
repnz
rclb
pop
and
xchg
lods
out
inc
sahf
adc
jo
mov
or
test
in
popa
ret
sbb
cmp
add
push
push
jns
inc
cmp
push
imul
pop
bound
push
jmp
dec
test
sbb
mov
push
push
pop
dec
stc
daa
cmp
movsb
adc
mov
mov
add
cmp
add
and
push
xor
sbb
sahf
sub
fcoml
pop
ficoms
ret
jecxz
and
pop
sbb
imul
push
push
sub
inc
inc
js
nop
xchg
push
or
jno
push
add
cltd
push
xor
jb
inc
add
or
stos
enter
add
push
test
leave
push
pop
dec
scas
xchg
fimuls
lods
sub
sbb
or
adc
xor
mov
ds
stos
add
adc
shrl
cld
out
test
loope
add
movzwl
add
add
pop
sbb
push
inc
jp
mov
sbb
pop
inc
sbb
dec
mov
lret
pushl
sbb
xchg
shlb
xchg
add
push
test
in
fstl
jns
sub
daa
sbb
add
jne
call
stos
adc
push
mov
jb
inc
jo
sub
push
jo
cmp
sub
mov
xor
pop
inc
cs
jge
sub
mov
loop
cmp
mov
dec
loopne
mov
es
xor
jmp
call
or
mov
pusha
sub
movsl
xchg
rorl
out
cmpsl
xor
dec
push
scas
push
xor
fcoml
rcrl
or
xor
and
outsb
dec
add
adc
cli
adc
in
dec
orb
cmpsb
jle
into
out
inc
xor
jle
ds
pop
add
adcb
pop
pop
pop
mov
fs
or
nop
mov
or
or
arpl
imul
jno
jecxz
push
push
mov
sti
mov
mov
adc
scas
xor
cld
mov
je
movsb
pop
orl
add
sub
sbb
jecxz
push
xlat
or
adc
ret
ljmp
xor
pop
xorb
mov
mov
jae
enter
adc
insl
and
xor
mov
adc
add
repnz
nop
fwait
add
sbb
inc
jg
fistl
add
xchg
push
lds
adc
adc
jmp
xchg
inc
jno
add
test
adc
xchg
inc
adc
cmp
adcl
es
mov
mov
enter
inc
das
icebp
push
rcrl
xchg
sbb
popa
iret
sub
shll
daa
push
push
inc
sub
jl
popa
fmull
xchg
xor
mov
lods
loop
jmp
stc
sbb
push
ds
mov
stos
inc
es
and
push
lret
ss
mov
test
or
adc
adc
adc
adc
add
jmp
mov
mov
jns
addl
adc
mov
sbb
pop
rolb
sbb
cmp
push
dec
lock
push
ja
loope
out
xadd
sbb
mov
stos
and
dec
loope
sbb
int3
jle
sub
and
and
or
ret
adcb
repnz
adc
or
xchg
gs
inc
sbb
xchg
push
mov
add
pop
push
or
push
mov
loopne
inc
loope
push
pop
mov
push
xorb
or
sbb
sub
inc
cs
fnstsw
push
push
mov
and
movsb
xor
dec
out
add
cwtl
outsb
fstpl
jmp
ja
lds
je
sar
outsb
in
and
sbb
sbb
fwait
add
or
dec
movsl
je
sbb
imul
cmc
add
jbe
xor
sbb
ss
stos
lds
mov
inc
call
adc
xor
das
sbb
and
or
leave
jae
push
lods
dec
sar
add
ret
xchg
add
sbb
and
test
or
sub
js
jno
test
jo
mov
rorl
adc
mov
cmc
push
and
or
jne
pop
lods
push
sbb
imul
mov
push
pop
or
adc
fwait
adc
shll
adc
adc
popa
mov
cld
lret
push
xchg
in
adc
je
sbb
adc
push
add
jbe
sarl
cmpsb
jbe
push
adc
lea
popa
or
cmp
add
jb
ret
lea
xor
adc
cwtl
inc
out
push
popa
adc
cmpsb
or
mov
aaa
mov
mov
loope
movsb
movsl
pusha
sbb
add
mov
mov
inc
into
xor
pop
push
fimuls
sti
insb
xor
jl
sub
packssdw
cmp
fisttpl
xor
xchg
fstps
adc
movsb
add
or
mov
lods
add
xchg
push
add
mov
mov
dec
sub
popa
push
sub
mov
add
or
sub
stc
or
mov
dec
mov
sub
into
push
xchg
sub
mov
add
adc
cmp
push
int
add
adc
sub
xor
jle
add
push
cs
jo
stc
jne
das
mov
jns
leave
rolb
ret
inc
sbb
add
jg
push
push
dec
mov
mov
int3
pop
pop
or
inc
and
dec
neg
sbb
sbb
in
int
add
cmp
cmp
mov
ret
push
pop
mov
fadds
add
add
lods
pop
sbb
mov
movsb
faddl
mov
pop
push
imul
jne
mov
dec
loope
mov
je
xchg
or
cmc
insb
loopne
add
add
sub
push
aas
push
pop
push
push
sbbl
lret
or
sbb
lods
iret
and
push
push
push
jo
mov
pop
dec
jnp
mov
fst
mov
xchg
dec
les
sbb
shl
lretw
mov
nop
shl
push
addr16
jo
add
pop
cmp
push
or
fldcw
mov
or
or
xchg
test
mov
cmp
inc
lcall
push
add
xchg
xchg
sbbl
in
mov
add
pop
into
cmp
call
inc
mov
xchg
insl
roll
movsl
xor
popf
jmp
dec
push
cmp
mov
js
inc
sbb
sub
push
sub
lea
push
pop
sbb
add
add
inc
mov
adc
cmp
leave
cs
push
ss
hlt
add
push
and
mov
sbb
adc
test
jl
dec
add
mov
ret
sub
int
inc
dec
mov
mov
cmpsb
fwait
loopne
fcoml
dec
aam
adc
inc
push
lock
xchg
mov
mov
test
push
add
adc
push
lods
fisubs
sbb
test
lret
and
std
and
sbb
push
adc
push
mov
add
push
imul
fnsave
push
mov
test
dec
and
testl
add
xchg
mov
inc
jmp
and
mov
pop
arpl
scas
push
lods
test
popf
in
cmpsl
adc
jecxz
xor
sub
adc
or
test
popf
mov
pop
in
adc
xchg
lock
lret
mov
fsts
in
clc
inc
sahf
lret
dec
or
mov
leave
mov
sub
or
inc
xchg
push
call
mov
and
sub
bound
inc
adc
pop
push
adc
cmp
sub
ja
inc
movl
or
adc
inc
adc
pop
rcr
fldz
and
add
and
cmp
and
and
sub
cmp
fildl
push
je
cmp
sub
mov
sbb
mov
jp
mov
xor
ja
add
adc
enter
sub
mov
mov
rcrb
das
imul
fmuls
mov
inc
push
cmp
add
add
lea
fsubs
mov
mov
add
in
sbb
call
lea
xor
mov
mov
es
addr16
rcrl
mov
jle
push
pop
pop
popa
cmpsb
test
sub
mov
cmp
jl
push
cmp
push
cmp
dec
cld
cld
repz
cmp
jp
push
cmp
cmp
cmp
add
sti
add
add
inc
jmp
mov
data16
popa
xchg
icebp
movl
repnz
sahf
aas
and
or
fs
dec
pop
cmp
pop
idiv
call
cmpb
les
pop
ror
aad
inc
mov
inc
movsb
cmpsb
or
mov
test
jnp
add
jns
adc
push
cmp
das
xor
add
cmp
add
sbb
push
hlt
adc
mov
mov
dec
mov
ret
and
sub
inc
xor
in
jg
adc
bound
sbb
dec
movsl
or
jns
and
adc
or
adcl
mov
pushf
lods
mov
int
lret
rclb
cmp
push
movl
sbb
mov
test
xor
sti
mov
sub
pop
insl
pop
leave
and
iret
orb
fsubl
add
shll
dec
mov
pop
pop
pop
pop
pop
push
ds
les
cs
xor
insl
or
cltd
inc
ror
iret
enter
aam
in
or
and
jo
sbb
addl
push
inc
insl
add
pop
popf
jbe
mov
clc
add
sarl
xor
pop
mov
adc
mov
dec
xor
pushf
xchg
bound
sbb
arpl
data16
inc
nop
mov
push
sub
movsb
or
inc
call
mov
inc
cmp
sbb
cmp
jb
pusha
push
imul
dec
and
dec
adc
sbbl
stos
inc
adc
popa
pop
or
nop
fnop
sub
and
dec
pop
push
xor
in
lcall
sbb
mov
pop
and
sbb
fdivrs
and
sbb
sub
sub
sbbl
test
cmp
mov
mov
jb
in
and
add
pushf
or
adc
outsb
sub
jnp
pop
mov
xchg
sub
fstl
or
pushl
stos
int
test
int3
inc
adc
adc
push
sbb
jle
addl
bound
mov
andb
add
add
sbb
and
popf
adc
shlb
sbb
aaa
or
sub
leave
nop
pop
dec
es
adc
add
rcll
aas
add
add
hlt
inc
add
add
or
sub
push
xchg
and
inc
loopne
frstor
in
push
and
sar
les
mov
mov
mov
ret
or
adc
sbb
stos
loope
or
fwait
loope
add
add
dec
loopne
int3
out
rol
xor
andb
rorl
rclb
or
nop
jne
mov
adc
fcoml
or
xchg
pop
or
add
inc
xchg
inc
icebp
pop
jne
lea
add
xor
xchg
popf
xor
push
out
jmp
pop
cmpsb
mov
dec
test
lock
fsubrs
sbb
xor
add
cmpsl
in
pop
jp
inc
inc
outsl
inc
push
jl
orl
cli
inc
push
mov
mov
pop
pusha
mov
dec
aaa
lock
fadd
mov
push
xchg
fistl
adc
or
leave
adc
adc
icebp
cld
jne
dec
pop
aad
call
xor
pminsw
jbe
pop
sbb
clc
xchg
int
cs
jp
sbb
insb
pusha
add
or
mov
jecxz
pop
test
hlt
inc
ja
push
xor
and
and
dec
push
or
std
lods
ja
inc
mov
loopne
stos
sbb
aam
sbb
fldt
lock
clc
lret
and
push
adc
pop
ret
orb
jbe
sbb
push
popa
cmp
ds
stos
cmp
jne
add
mov
mov
rol
popa
xchg
add
lcall
fstps
or
pop
push
add
xlat
cmp
dec
lock
fildl
fildl
dec
push
xor
fs
lds
addl
rcl
mov
mov
mov
pusha
js
and
cmp
add
and
xlat
add
pushf
adc
adc
pop
pop
xor
dec
pop
mov
cmp
fwait
push
shll
pop
lods
add
or
or
push
imul
mov
or
mov
xchg
add
call
lea
add
xor
push
xchg
clc
lea
ret
push
ret
iret
adc
and
xor
int3
cli
shl
add
roll
adc
adc
loopne
jmp
inc
adc
add
lods
jle
mov
sub
mov
add
mov
pop
mov
sbb
xor
in
orb
or
out
mov
mov
inc
jno
dec
nop
adc
loop
pop
lcall
call
iret
dec
pushl
add
data16
sbb
loopne
les
nop
add
jae
push
push
and
lock
out
push
fldl
push
sbb
dec
arpl
xchg
clc
sti
fstpl
and
mov
ffree
inc
std
lods
push
hlt
decb
mov
mov
pop
or
adc
add
and
loope
fsubrp
pop
stc
push
fadds
or
flds
mov
push
repnz
icebp
fdivl
leave
jmp
ret
xchg
pushf
sub
scas
rolb
in
cmp
mov
jp
mov
inc
cmpsl
dec
pop
negb
xchg
clc
and
push
mov
inc
adc
ss
mov
and
inc
insl
scas
sub
add
mov
dec
or
shrl
ljmp
roll
out
mov
fidivs
lock
add
pop
add
inc
pop
xor
insl
ret
les
xor
jecxz
dec
enter
push
dec
pop
add
jnp
ja
loopne
repnz
and
mov
mov
and
xchg
test
enter
and
aaa
cmp
push
mov
mov
andl
push
sub
mov
jnp
ficomps
add
add
dec
xchg
mov
clc
xchg
orb
push
sarb
movsb
mov
sbb
leave
shld
add
jg
je
sbb
lea
push
push
sbb
add
push
je
inc
adc
cli
idiv
mov
or
push
mov
push
adc
push
push
push
add
rorb
lahf
xor
sbb
or
cmp
push
jne
push
pushf
add
pop
pop
ror
or
and
or
test
int
xor
xor
dec
push
mov
push
mov
shlb
push
das
inc
fsubs
pop
push
and
ja
jno
fiaddl
adc
sub
mov
xor
xchg
lcall
test
cmpw
jne
jp
cmp
inc
cld
cmp
cmp
aaa
jmp
push
push
jl
mov
push
fldt
add
sti
jg
stc
std
loopne
sbb
ja
sbb
lock
shr
data16
push
push
push
cmp
push
push
push
pop
in
loope
sub
hlt
ret
and
xchg
xchg
mov
stc
leave
js
mov
or
pop
outsb
adc
add
adc
xor
mov
adc
inc
adc
sub
adc
mov
adc
add
arpl
pop
sub
lock
add
push
ret
cli
push
mov
jnp
push
iret
push
jg
push
mov
mov
in
das
push
mov
dec
jns
push
sub
push
add
ljmp
enter
sti
push
sub
sbb
mov
lea
or
jg
push
lret
adc
sbb
xlat
add
pushf
rcr
sub
fmuls
jae
movsb
std
lret
nop
loope
fdivs
repz
in
xor
cmp
js
jb
pusha
sub
pushf
cmp
push
pop
xchg
gs
int
sub
sbbl
sub
push
jl
lds
jnp
fs
lret
leave
push
orb
add
mov
pop
xlat
or
jmp
stos
sti
dec
push
rorl
cmp
add
mov
cwtl
push
xchg
dec
pop
sbb
pop
je
arpl
lds
ds
fwait
pop
ret
pop
add
leave
adc
cmpb
dec
sub
mov
push
inc
fildl
sbb
pop
or
add
xor
rorb
fwait
mov
insb
cmp
out
sub
mov
inc
imul
or
and
add
mov
pushf
or
push
adc
bound
outsb
pop
and
add
insl
cmp
xchg
xor
add
add
mov
jmp
into
push
int
cmp
pop
mov
rolb
push
add
jl
jge
mov
scas
insl
adc
mov
fbld
pop
adc
adc
pop
mov
or
mov
loopne
mov
shll
movsb
ret
gs
stc
es
rclb
ja
xchg
pusha
cmpsb
mov
jbe
ret
insl
xchg
or
sbb
movsl
mov
mov
dec
jge
ljmp
icebp
and
xor
fisttpll
add
mov
fs
and
outsl
lcall
ss
je
add
sbb
dec
jne
push
and
or
sbb
adc
xchg
or
add
sub
push
push
sarl
or
mov
push
scas
push
sub
loopne
lea
fldt
adc
mov
inc
mov
and
in
xor
push
push
push
jb
jo
mov
and
jl
push
cmp
nop
inc
jl
loopne
enter
jge
sub
int
push
pop
push
pop
out
inc
in
arpl
push
push
and
cmp
or
and
xchg
cmp
addb
loopne
jb
mov
jg
adc
and
nop
xchg
fsubr
add
cmp
push
in
cwtl
enter
mov
push
mov
cmp
loope
xlat
fs
loope
jmp
jmp
jns
out
adc
jns
cmp
pop
orl
mov
jns
out
rcr
out
iret
repz
sti
add
sub
aaa
inc
dec
push
pop
repnz
repz
loope
xchg
xchg
sbb
xor
lods
push
mov
add
cmc
int
fsubr
push
mov
mov
inc
arpl
push
mov
test
fcompl
adc
test
xchg
je
jge
add
and
cmp
bound
andb
sti
test
movsb
mov
xchg
fwait
jmp
jl
mov
sub
add
mov
inc
mov
push
std
aam
es
push
add
out
fcompl
cmp
cmp
pop
xchg
cmp
fmull
mov
jmp
mov
faddl
xor
adc
push
xchg
push
sbb
int3
loope
sbb
jl
imull
dec
mov
popa
movsl
adc
dec
cmp
add
inc
sbb
xor
adc
dec
mov
xor
push
and
sahf
cmpb
jge
idivb
es
push
cmp
push
and
lock
add
pusha
movsl
idivl
cmpsl
scas
sahf
fbld
imul
rcll
cmpsl
jg
inc
xchg
inc
mov
enter
nop
rcr
xchg
mov
ret
cmpxchg
jns
or
push
push
mov
or
xchg
test
loope
sbb
orb
pop
test
sub
adc
shrb
pop
xchg
ret
and
sar
or
sub
xchg
dec
call
sub
rcll
add
adc
or
push
sbb
mov
push
movb
scas
xchg
mov
mov
test
int3
cmpsb
sti
xor
or
add
fidivrs
or
xchg
jae
insb
sub
pop
movsl
mov
add
arpl
push
inc
mov
dec
adc
sbb
ja
push
or
lea
or
mov
sbb
loop
cli
or
test
ret
mov
movsb
lea
sbb
mov
mov
int3
sub
pop
lods
movsb
js
dec
add
les
adc
loop
mov
mov
xor
push
mov
mov
jb
push
push
outsl
or
sub
add
dec
sti
popa
ljmp
push
rcl
mov
and
mov
jle
sbb
cs
push
cwtl
nop
scas
sub
adc
fwait
nop
pushaw
jp
mov
xor
mov
inc
xor
mov
push
jle
sbb
xor
pop
mov
sbb
pop
rcrb
xor
das
pop
rcrb
jo,pn
lcall
sbb
sub
movsb
call
push
subb
mov
mov
cmp
test
jl
mov
add
adc
xchg
lret
cmp
push
insb
xlat
movsb
inc
loop
aas
mov
mov
jl
jne
cmp
xchg
adc
lds
dec
and
ret
mov
in
jbe
int
sahf
sbb
ljmp
cmp
mov
imul
mov
sub
lods
jl
gs
add
int3
pop
inc
es
sbb
sbb
xchg
push
mov
xorl
dec
pop
dec
inc
xchg
jns
dec
mov
xor
add
sub
sbb
and
fistpl
dec
adc
lahf
sub
repnz
xor
mov
or
or
bound
mov
pop
pop
movb
mov
mov
call
adc
in
gs
cmp
insb
push
xchg
or
pop
sub
enter
xchg
cmp
sbb
mov
cld
test
cmp
inc
push
push
rorl
pop
push
hlt
or
int3
cmp
add
int3
cmp
jmp
rcl
or
sahf
nop
scas
mov
push
mov
dec
sbb
cmpsl
or
stos
fwait
sub
and
or
add
mov
cmp
and
or
inc
push
adc
daa
cmp
xchg
push
jmp
in
push
inc
cmp
mov
inc
push
push
xor
negl
inc
sub
addl
lahf
fiaddl
dec
imul
jno
lcall
shlb
adc
pop
mov
and
inc
push
cld
mov
adc
sti
xlat
test
jmp
push
sub
loop
or
je
stos
stc
nop
cwtl
mov
loop
sbb
xchg
popf
pop
dec
cs
shrb
pop
adc
add
cs
or
jne
in
and
push
daa
lock
or
jle
push
mov
subl
ret
fiaddl
jl
jmp
ret
movsl
lahf
in
add
test
sub
test
mov
and
pmuludq
add
dec
roll
inc
jmp
or
mov
cmc
jnp
lock
pop
sbb
mov
or
in
jge
cmp
xchg
ficompl
jae
fidivl
mov
push
and
xor
in
les
push
stc
inc
call
cmpsb
fldenv
xor
mov
add
pop
jmp
push
xchg
insb
sbb
push
in
push
sub
jbe
and
mov
outsb
iret
mov
cmp
mov
daa
call
jo
rorl
fmulp
or
arpl
pop
pop
sub
in
in
pop
nop
push
call
mov
movsb
mov
adc
adc
xor
test
xor
lock
add
or
adc
push
push
cltd
adc
inc
push
push
or
loopne
rol
pop
mov
insb
dec
int3
imul
ds
int
not
dec
enter
fsubrs
sbb
pop
lods
sbb
test
enter
or
enter
sbb
jae
mov
shlb
pop
jl
lahf
mov
or
mov
xor
xor
inc
and
adc
mov
xchg
es
mov
and
in
inc
sbb
mov
cltd
or
sbb
push
or
xchg
inc
sbb
nop
pop
push
mov
mov
les
mov
jae
mov
orl
add
pushf
xchg
mov
test
ficoml
loope
and
dec
dec
jae
je
insb
int
xor
or
in
andb
fwait
call
andb
inc
add
das
mov
push
inc
popl
mov
xor
sbb
or
clc
cmpb
inc
xor
add
push
sub
mov
js
add
loop
cltd
jecxz
cmove
inc
jecxz
push
jb
icebp
js
add
jo
out
xchg
push
jle
mov
dec
in
sarl
loope
dec
add
nop
pop
xlat
adc
ret
dec
mov
mov
mov
test
lods
add
jecxz
rcl
mov
mov
fsub
or
xchg
je
out
fcom
or
jo,pt
loope
inc
adc
je,pn
or
xor
push
xor
lcall
in
orb
mov
or
and
test
dec
js
or
icebp
push
xchg
push
mov
jne
jnp
sbb
test
pusha
lods
sub
push
pushf
in
xorb
sbb
fdivrl
xchg
add
xor
jbe
inc
push
outsl
fwait
and
cltd
mov
sbb
adc
mov
jmp
push
pushf
inc
pop
sub
cmp
pop
inc
jmp
sub
dec
or
iret
movsb
or
sub
sbb
xchg
fiadds
pusha
sbb
pushl
clc
push
add
push
sbb
mov
xchg
cltd
es
and
mov
ret
cwtl
nop
imul
nop
pop
mov
sub
and
mov
mov
and
ret
and
orl
and
push
ficoml
and
jl
imul
cmp
idiv
ficompl
push
pop
popa
leave
movsl
mov
mov
push
in
sub
mov
subl
or
pop
lods
pop
lcall
inc
sub
test
fcomps
insl
sub
rorl
lea
mov
fcoms
dec
xlat
andb
test
rorb
add
dec
flds
insb
mov
lock
push
shrb
cs
out
push
fdiv
xor
dec
or
pop
popf
das
not
fwait
nop
out
icebp
inc
movsb
sub
dec
dec
sub
sub
int
xor
sub
push
sub
fs
and
adc
jl
pop
dec
xor
int
je
test
adc
dec
and
int
push
nop
sbb
mov
adcb
js
and
les
aam
inc
lcall
adcb
scas
and
movsl
lock
add
shlb
call
push
jp
dec
pop
les
jns
fs
pop
sbb
popa
add
sahf
cs
sub
and
sub
push
xor
fdivrs
push
ljmp
push
enter
fistpll
sbb
xchg
out
xchg
dec
push
push
out
pusha
ret
pop
jecxz
shrb
repnz
pop
sub
adc
aam
pop
add
shrb
mov
jge
in
mov
adc
imul
and
lods
or
push
lahf
jne
enter
in
mov
cs
testb
jmp
adc
stc
pusha
dec
sub
fsubrs
ss
pop
xchg
mov
xchg
add
pop
sub
movsb
cmp
outsl
add
or
ljmp
push
mov
ss
or
mov
daa
lea
cmp
cs
adc
and
mov
cmp
inc
add
add
add
pusha
enter
rclb
popf
add
mov
sahf
sbb
or
scas
cltd
jo
lods
mov
lods
shr
dec
imul
pop
mov
outsb
xlat
mov
pop
jg
pop
cmp
jbe
mov
mov
sub
pop
adc
jmp
jmp
in
add
mov
aam
outsb
add
pop
sub
scas
add
jmp
dec
ds
inc
adc
leave
scas
ss
inc
xor
repnz
sbb
cmp
adc
sbb
cmp
cmp
adc
add
pusha
ljmp
hlt
loope
push
jbe
or
flds
jb
mov
jg
dec
lret
lahf
sub
add
test
mov
sub
pop
add
leave
jo
mov
pop
out
movsb
bound
jle
ficoms
cmp
shlb
jbe
mov
xchg
cmp
jne
inc
adc
jb
jl
and
inc
cld
lods
ret
mov
test
push
or
iret
jne
mov
mov
add
cmp
bound
fcmovnbe
jae
inc
adc
lods
inc
push
and
je
mov
dec
rcl
adc
xorb
jmp
mov
fwait
mov
inc
mov
xchg
add
sub
fnstsw
mov
sbb
mov
mov
inc
clc
inc
call
jnp
addl
push
mov
cmc
in
addb
loope
xchg
pushf
xlat
aad
dec
or
dec
or
leave
imul
mov
push
sbb
fwait
roll
ljmp
mov
pop
mov
push
cmpsl
jne
ds
xchg
inc
jmp
icebp
or
inc
sbb
sbb
push
sbb
sbb
sbb
add
inc
popf
imul
adc
lea
sbb
cmpsb
sbb
and
and
fwait
or
outsb
loope
pop
xchg
mov
xor
adc
add
test
shrb
add
cmp
jmp
cmp
jl
or
je
cmp
icebp
decl
movzbl
movb
movsbl
shr
mov
mov
and
mov
nop
inc
mov
leave
jne
jae
mov
pop
mulb
lret
push
scas
xor
test
pop
sbb
int3
aam
bound
mov
orl
mov
outsl
sub
fxtract
fidivs
sbb
inc
ja
mov
mov
cmp
adc
push
and
lods
rorl
cltd
push
test
add
test
and
push
xor
add
push
arpl
lcall
imul
jo
xchg
incb
xchg
and
cmp
es
dec
and
lods
dec
ret
jg
add
in
push
mov
nop
xchg
ret
inc
cmc
shrb
pop
popl
into
lret
nop
xor
aad
call
test
xchg
test
notl
pop
test
aaa
daa
cwtl
sub
pusha
push
std
push
push
push
mov
and
into
dec
jl
jp
fisubs
lock
mov
pop
add
add
jp
stos
xchg
add
and
stos
pop
sbb
and
aam
popa
pop
iret
inc
pushl
push
data16
cmpsb
push
ja
xchg
ficomps
testb
mov
notl
push
add
out
and
dec
pushf
push
fwait
sbb
adc
add
jecxz
in
xchg
add
ljmp
dec
sub
xchg
add
mov
or
push
leave
and
aad
jl
popf
mov
inc
pusha
enter
add
mov
add
sub
push
jle
imul
add
into
mov
ret
pop
sbb
cli
popf
lock
pop
pusha
in
out
or
and
loopne
mov
or
movsb
push
dec
lret
ret
es
idivl
pop
mov
mov
mov
leave
and
jmp
cmp
cmp
add
or
push
call
and
dec
push
inc
adc
loop
aas
pop
leave
push
adc
lea
pusha
add
cmp
mov
dec
jae
andb
add
xchg
rorb
sub
and
andl
xchg
push
test
push
fimuls
and
leave
bound
sub
adc
or
outsl
xchg
mov
cmp
sbb
stos
mov
push
dec
or
push
pop
testb
dec
or
mov
dec
dec
jl
cmp
test
mov
add
mov
lods
lock
pause
sbb
ret
push
mov
xlat
push
fs
push
fwait
mov
add
ficomps
mov
fnsave
add
daa
or
subl
mov
dec
or
mov
lret
cmp
mov
repnz
xchg
gs
call
out
rcl
inc
clc
ds
fistps
aaa
jb
sbb
inc
jle
jle
mov
jne
inc
adc
sub
outsb
lods
add
cltd
mov
jl
or
cs
addb
add
loopne
gs
lods
dec
faddl
push
and
sbb
adc
mov
sub
or
mov
lods
hlt
push
inc
sbb
pop
ret
adc
mov
faddl
pusha
and
add
push
adc
jno
movsl
jnp
pusha
sub
js
loopne
insb
enter
cmp
ficompl
lea
cmpsb
icebp
adc
imul
xchg
cmp
xchg
outsb
add
or
push
or
or
sub
or
ret
sub
xor
adc
sti
sbb
test
and
push
add
fisubrs
or
add
dec
hlt
cmp
jmp
or
sbb
and
jne
pusha
mov
jmp
push
or
adc
add
xchg
fwait
sarb
mov
xor
cmpsl
je
stos
mov
mov
movsb
outsl
test
lock
adc
dec
pop
cmp
notl
dec
fadds
lea
xor
xor
nop
inc
push
cmp
je
push
les
shr
les
roll
dec
sbb
xor
mov
xlat
fsubs
mov
inc
xor
cmpsl
movsb
inc
in
sbb
xchg
mov
jae
imul
xchg
inc
or
push
xchg
xor
pushf
out
test
add
je
in
cmpsl
in
inc
aad
adc
lret
pop
or
jl
ljmp
push
xor
jne
je
inc
push
add
aam
sarb
cld
imul
add
test
mov
fmul
testl
inc
add
shll
push
pop
or
mov
cmpsb
negb
mov
sub
and
inc
lods
push
enter
and
divb
mov
sub
ds
shrb
aam
lea
push
cmp
inc
jne
dec
jns
mov
in
pop
pop
or
pop
imull
add
adc
xor
mov
mov
imul
or
les
addr16
mov
push
mov
xchg
dec
xor
divl
aas
sbb
mov
xor
lods
cmp
in
addb
addb
scas
gs
jge
lea
arpl
jns
dec
enter
outsl
das
mov
push
sahf
fcoml
es
sbb
dec
dec
sahf
in
cmp
test
jne
es
loopne
mov
jne
jno
mov
mov
inc
sbb
and
clc
mov
add
add
dec
fisttpl
inc
rcrb
and
mov
and
idivl
push
in
sub
push
push
call
sbb
sbb
jge
sub
sbb
or
mov
insb
inc
ss
sbb
or
push
sbb
push
dec
ret
or
cli
outsb
mov
js
push
cmp
dec
sbb
cmp
jle
test
inc
add
mov
mov
cmpsb
push
icebp
pop
adc
inc
or
movsl
push
lds
notb
movsb
jecxz
ljmp
add
inc
mov
ret
out
jl
pop
out
and
inc
pop
inc
pop
ret
xchg
push
test
pop
xchg
xchg
xor
enter
xor
cmp
add
xchg
mov
and
inc
cmp
stc
insl
fcomi
inc
data16
cmp
adc
jne
jns
daa
bnd
adc
hlt
jne
or
out
divb
or
push
mov
mov
pusha
sub
js
pop
insb
in
dec
jb
push
aad
clc
push
add
inc
sbb
add
jp
out
addr16
dec
dec
in
outsb
sbb
scas
xchg
lods
les
add
push
jl
mov
lea
lea
lea
cmc
lea
lcall
imul
lds
fcoml
dec
or
add
mov
cmp
sub
mov
push
sbb
ds
dec
pop
mov
jmp
aad
int3
sub
lea
sarb
fdivrl
fdivrs
adc
adc
push
sub
mov
xor
sub
fcom
loopne
rol
adc
lret
adc
adc
mov
add
jns
gs
cmp
jmp
cmp
or
shll
cmpl
movsl
ficoms
inc
loopne
or
xchg
sbbl
push
xchg
insl
mov
ss
cld
call
and
orl
in
sbb
pusha
pusha
daa
int
sub
xchg
test
xchg
pushw
inc
xchg
fs
nop
xchg
fs
push
jne
pop
enter
into
xor
xor
test
fiaddl
ret
xlat
jge
cmp
mov
fidivs
mov
xchg
push
xchg
loope
or
sub
insl
push
call
out
mov
stos
mov
mov
jbe
call
je
add
rorb
int3
or
es
daa
test
inc
subl
mull
test
les
fbld
xchg
dec
push
add
cmp
fildl
ja
dec
and
sub
add
enter
push
or
mov
pop
xor
mov
push
mov
jmp
fstp
xor
cmpsb
hlt
pop
mov
in
xchg
pop
fwait
or
and
loopne
gs
xchg
xchg
push
add
push
scas
mov
ret
rcrl
xchg
loopne
mov
push
cs
jnp
insl
dec
test
push
insb
xor
push
mov
popa
mov
dec
fwait
push
sub
scas
mov
or
push
pop
jle
add
mov
pop
pop
mov
pop
push
xchg
pusha
sbb
jle
or
call
sbbl
push
mov
out
pop
adc
xor
pop
test
out
cs
hlt
mov
sti
push
xor
cmp
inc
adc
sbb
cmp
and
and
push
adc
cmp
adcl
inc
enter
adc
arpl
xor
sub
pop
xor
xor
dec
adc
lcall
and
pop
daa
xor
sbb
inc
cmp
push
or
test
bound
out
sahf
inc
and
sti
jg
dec
pop
movb
xor
pop
rolb
jne
add
repz
pop
inc
sub
xor
lcall
pop
dec
pop
and
test
in
dec
popl
cmp
sub
mov
inc
mov
andl
pusha
jno
aaa
push
xor
push
je
xor
add
xor
imull
xchg
mov
cmp
xchg
xchg
ljmp
sti
aam
mov
push
inc
mov
pop
xor
adc
mov
js
dec
mov
jg
ljmp
push
xchg
pop
lea
push
aam
xor
xor
sbb
fsubrl
rcr
shlb
ss
fsubl
lock
test
dec
imul
jne
movsb
test
outsb
jbe
in
test
leave
mov
add
push
lods
movsl
inc
inc
sub
ret
lret
loopne
or
xchg
insb
loopw
hlt
hlt
rclb
popf
cmp
pop
test
les
shrb
stos
jnp
mov
ret
xor
je
popf
add
or
in
call
cwtl
add
xorl
sub
sbb
pop
mov
mov
addl
enter
shl
test
jge
pop
jae
lea
jge
jecxz
mov
pop
inc
inc
pop
pop
push
lock
data16
sub
dec
pop
inc
std
xor
pop
sbb
imul
popa
sbb
mov
notl
xchg
mov
sub
dec
cmp
fmull
call
mov
sub
mov
and
pcmpeqd
sub
xlat
jnp
push
mov
sub
xorl
imul
loop
leave
fadd
add
in
sub
or
dec
aaa
push
mov
jnp
fs
add
or
mov
je
cs
push
push
add
inc
icebp
aas
inc
cmpsl
or
push
jne
pop
stos
mov
cmp
out
or
es
jne
mov
imul
push
ljmp
xor
adc
adc
out
and
inc
and
subl
adc
xor
push
insb
rcll
and
xchg
jnp
adc
adc
lret
ret
cmp
cltd
bound
fdiv
mov
xor
or
in
orb
aad
loopne
sbb
sbb
stos
clc
inc
add
inc
pop
dec
sarb
cld
pop
push
stos
jge
dec
and
and
data16
jle
rcrb
pop
add
mov
mov
cmc
xorl
adc
andb
inc
pop
shrb
or
popf
add
inc
jecxz
adc
mov
into
and
sbb
push
lds
pop
xchg
pop
call
push
das
mov
je
sub
dec
xchg
inc
call
add
xor
lcall
adc
jb
js
outsl
jne
repz
cmpsb
cmp
add
jmp
mov
in
sahf
repz
push
fisttps
sbb
repz
je
nopl
shrl
mov
and
push
stc
pop
cmpsb
movsl
addb
mov
lahf
pop
sbb
push
mov
lea
mov
push
shll
rcrb
sbb
addr16
adc
shlb
mov
push
dec
gs
mov
daa
inc
inc
xchg
mov
in
aad
inc
xchg
adc
xchg
popa
shrb
flds
test
scas
add
add
mov
roll
stos
sub
or
or
xor
hlt
aas
mul
pop
jb
ljmp
test
pop
lock
dec
push
add
or
jb
adc
and
jl
insl
adcb
mov
je
movsl
nop
fs
cmpsb
ja
or
pop
test
cmp
xor
cmp
je
pop
idivb
dec
or
jb
rolb
sbb
dec
clc
inc
outsb
sete
sahf
push
clc
clc
sar
jb
stos
push
cmpb
mov
lret
adc
add
or
hlt
jae
movsbl
sbb
inc
mov
jmp
sbb
or
mov
cmp
mov
enter
xor
lea
and
dec
inc
jmp
ljmp
mov
dec
jmp
shl
or
add
inc
cmp
jl
cmpl
dec
arpl
pop
add
cltd
and
add
shrl
dec
call
jo
xlat
sub
clc
xor
mov
shlb
jecxz
sbb
inc
jne
stos
aas
loope
enter
adc
or
mov
sbb
pop
pop
sahf
cvtps2pd
pop
cltd
pushf
mov
pop
push
mov
sub
mov
cmp
sub
ret
or
orb
rolb
roll
scas
adcb
push
outsb
dec
lods
pop
and
and
pminsw
or
jle
insb
aas
lods
test
mov
ss
xchg
fistpll
push
xchg
cli
js
inc
mov
andl
cli
movb
jne
and
inc
arpl
inc
or
shl
sbb
jge
out
add
or
invlpg
adc
icebp
cs
int3
mov
and
adc
or
sub
inc
ficompl
dec
inc
push
pop
inc
fidivl
xor
in
push
xor
cmpsb
notb
mov
iret
or
jne
sbb
nop
aaa
and
add
testl
sbb
sub
and
mov
or
add
nop
je
add
test
and
jecxz
ja
pop
popf
pop
push
stos
lock
loopne
sahf
xchg
add
ljmp
ss
cmp
out
fsubrs
addr16
outsb
pop
mov
stc
jle
daa
lock
push
dec
dec
push
add
push
push
push
test
pop
jnp
dec
add
push
inc
cmp
dec
mov
sbb
shlb
lods
cmpsl
cs
pop
pop
jle
js
bound
dec
add
adc
jne
push
push
int3
pop
mov
pop
mov
lret
push
insb
add
add
lret
clc
lea
stos
int3
xor
or
cmpl
push
sbb
cmp
xor
imul
add
or
ret
or
stos
je
push
pushl
inc
iret
push
lahf
popf
fdivrl
push
cmp
lea
dec
pop
mov
mov
fsubs
jge
orb
shrl
repnz
cmp
daa
or
add
dec
cli
mov
rorl
dec
or
test
das
push
jmp
and
dec
and
dec
cmp
orl
cmp
jecxz
movsl
cmpsl
jbe
jl
add
mov
jmp
fwait
pushf
cwtl
push
cmpsb
jmp
jp
out
add
mov
and
lock
and
mov
shr
cmp
mov
insb
adc
mov
sbb
xchg
imul
jno
subl
pop
aam
cmp
sbb
mov
mov
xorb
push
lds
xor
or
mov
jle
aaa
mov
aaa
je
adc
push
xor
cmp
test
cmp
mov
add
lret
in
sbb
add
mov
sbb
mov
cmp
lcall
adc
mov
mov
fisttps
and
repz
je
dec
fdivr
jp
cmp
adc
add
out
das
add
mov
pusha
imul
sti
sub
or
cmpsl
les
push
fidivl
xchg
mov
or
inc
add
push
mov
mov
jecxz
outsl
xchg
xor
aam
add
jmp
out
mov
pop
enter
fcoms
test
push
or
aam
xchg
and
mov
mov
push
lods
mov
fdivrl
pop
jge
sub
cmp
and
push
sbb
sbb
movsbl
fwait
rorb
add
add
sub
ss
decl
ret
jmp
mov
out
test
pop
cli
dec
push
mov
leave
sbb
and
push
lret
movb
outsb
cmpl
jbe
or
add
add
shrb
and
mov
cmp
adc
sbb
dec
rcr
imul
fstl
push
roll
outsb
mov
or
mov
popf
shlb
loope
setg
clc
mov
pop
sub
jne
scas
xchg
psubb
inc
xor
lock
sbb
iret
nop
pop
insl
jge
xorl
cltd
pusha
sbb
add
add
add
sub
in
adc
mov
inc
add
mov
rcrl
sbb
lock
je
bound
sbb
cmp
mov
mov
jle
xchg
mov
mov
clc
pop
mov
jl
ljmp
push
add
das
xchg
inc
dec
pop
nop
jno
or
lods
pop
lret
inc
cmp
add
mov
pop
push
dec
mov
stos
es
fmull
xor
jecxz
testb
mov
mov
inc
mov
mov
cmp
jl
lahf
sub
addl
pop
adc
not
clc
jle
sub
push
icebp
or
orb
imul
fisttps
mov
pop
or
mov
fisubl
add
and
icebp
mov
cld
push
leave
push
xor
mov
inc
ds
fs
adc
pop
out
mov
fwait
jb
xchg
mov
in
sbbb
sub
mov
insb
into
push
dec
aas
enter
add
sbb
mov
xor
push
mov
cmp
sbb
leave
movsl
pusha
in
in
pushf
nop
dec
in
mov
xor
lret
and
lret
sub
sub
adcb
and
inc
sahf
mov
cmp
inc
pop
sti
inc
push
enter
adc
mov
ja
movsl
jne
lahf
lret
xor
ds
scas
and
lods
xlat
adc
xchg
popa
leave
inc
pop
lods
imul
js
add
push
jo
xor
cmp
or
mov
nop
mov
and
adc
add
lock
or
and
fadds
mov
push
mov
adc
dec
pop
clc
jp
in
mov
push
mov
mov
sub
add
or
ror
je
dec
mov
mov
lahf
shrb
sub
ss
lea
cmp
jbe
cmp
jbe
stos
dec
mov
cmp
jbe
in
mov
mov
imul
adc
insl
cmp
ret
in
pop
das
push
fstps
dec
add
mov
cmp
inc
dec
xor
stos
pop
sub
push
loopne
adc
adc
push
push
cmpl
popa
imul
daa
push
fnstcw
jmp
addr16
rcll
push
cmp
cmpsb
or
cmpxchg
and
mov
sbb
add
push
mov
hlt
jmp
pop
ret
and
mov
sub
and
fsts
jne
fstps
mov
or
xchg
mov
popf
outsl
or
push
fldt
mov
call
jns
sti
lea
mov
lcall
or
sub
pushf
pusha
adc
push
cltd
add
or
jbe
mov
mov
mov
or
add
push
in
mov
sbb
in
into
push
jnp
sbb
imul
push
jne
loope
mov
sti
fcomps
cmpsl
lock
test
mov
dec
das
push
add
or
lods
push
xchg
fcomps
pop
sti
mov
mov
xchg
data16
or
cmp
sbb
and
jp
insb
pop
loope
add
add
and
or
sub
mov
jecxz
mov
and
jecxz
dec
mov
xlat
loopne
out
test
xchg
xchg
insl
push
inc
enter
iret
sbbb
mov
je
or
jle
insb
and
xor
inc
movsl
adc
add
adc
in
out
sub
mov
push
adcl
cmp
sbb
mov
adc
cltd
repnz
push
loopne
mov
xchg
sti
push
push
js
sti
dec
cmpl
lods
ret
roll
test
test
push
jo
call
pop
adc
fwait
adc
aam
jne
xchg
shrb
xchg
sbbb
jmp
shlb
in
or
add
mov
sbb
push
je
mov
cmovae
mov
mov
cmp
ret
cmp
sub
mov
jbe
cld
sbb
lret
maxps
repz
mov
mov
out
sbbb
mov
cld
adc
dec
fwait
movl
and
in
aas
push
push
and
cmp
xchg
mov
cli
add
jne
sbb
jmp
mov
cmp
std
xchg
jmp
sub
adc
cmpsl
int3
shrb
xor
pusha
ja
or
push
pop
je
cmpb
pop
test
mov
dec
in
nop
dec
mov
movsl
aam
push
pop
cmp
or
outsb
dec
dec
xor
or
pop
pop
add
flds
add
dec
lea
pop
push
or
divl
out
int3
or
add
lret
pop
dec
adc
xchg
xlat
gs
scas
pop
mov
cld
inc
incl
fistl
je
mov
incb
cmp
call
ret
stos
int3
shl
push
jmp
push
adc
test
add
call
iret
xor
xor
push
push
or
mov
pop
mov
push
lods
sbb
lahf
imul
jle
into
mov
push
pushl
rclb
xor
jne
cmp
jbe
add
mov
jmp
push
pop
push
sbb
jmp
fldcw
idivl
mov
in
call
es
cmpsl
or
push
out
xchg
xor
clc
test
in
jne
mov
jp
loopne
shrb
gs
inc
negb
fcomps
inc
pop
leave
xchg
or
movsl
out
mov
mov
int
rclb
mov
push
xor
cmp
xchg
push
scas
lea
push
cmp
sbb
lods
pop
ss
adc
push
call
cmp
sbb
fs
adcb
xchg
pop
in
add
mov
xchg
ret
jmp
xor
or
pop
sbb
and
fwait
xchg
inc
sub
testl
sbbb
or
stos
cmp
mov
xor
aad
aas
xor
add
mov
xchg
loope
add
mov
test
ret
fisttpl
dec
loop
repz
in
jmp
dec
cmp
push
fs
sarl
dec
and
cmp
mov
dec
pusha
test
xchg
lock
jl
sti
fwait
repnz
xor
dec
sub
add
add
js
push
add
loope
daa
mov
shlb
add
xchg
stc
loopne
jge
lret
ret
shlb
test
pop
popa
cmp
jmp
cmp
cmp
into
adc
xor
sub
mov
orb
push
and
push
mov
dec
push
xor
test
mov
inc
lcall
mov
sbb
ds
aas
lods
das
sub
xchg
jae
test
rcll
lea
pusha
and
push
xchg
or
nop
or
inc
mov
inc
adc
jle
or
andl
ret
loopne
movsl
jae
shrl
sbb
in
add
enter
sub
or
or
popa
and
lods
les
cltd
loope
sbbb
xchg
cmp
inc
ja
add
mov
add
repnz
mov
push
mov
negb
dec
cmp
push
and
inc
nop
popf
jg
cld
jg
push
xor
push
push
test
inc
push
stos
inc
imul
iret
mov
mov
mov
pop
sbb
aam
adc
add
add
and
stc
pop
adc
adc
cwtl
adc
cwtl
loopne
les
lds
pop
xchg
sub
sbb
adc
push
sbb
add
sbb
jnp
mov
daa
icebp
lods
icebp
test
pop
or
or
jmp
cmp
push
dec
jnp
and
xchg
mov
test
mov
icebp
inc
js
xchg
sbb
jecxz
pop
inc
movsb
jge
in
ret
fidivs
cwtl
push
xor
mov
inc
pop
cs
ret
mov
cmpsl
mov
ja
scas
xchg
in
cwtl
iret
adc
push
sub
adc
lret
jge
mov
and
in
rorb
inc
mov
lock
or
pop
cmp
inc
andl
pop
popa
adc
xorl
sarl
adc
stc
pushl
jo
pop
popa
jg
push
ret
or
push
mov
jecxz
cli
popa
lahf
xchg
ret
fsubrl
and
fcompl
xor
xchg
add
mov
lods
movsb
sub
or
pusha
jno
jmp
add
lock
fldcw
push
ret
mov
cwtl
xchg
outsb
xlat
pop
adc
outsb
mov
lea
stos
pop
xor
iret
movsb
dec
outsb
lock
jmp
pop
cmp
xchg
mov
push
stos
or
jo
movsl
sbbl
iret
inc
push
push
fbstp
jb
cmp
adc
sbb
inc
aaa
popa
xor
ret
lods
push
xorl
pop
push
sbb
shlb
mov
aad
mov
push
inc
adc
add
mov
inc
push
inc
mov
je
push
cld
jp
lea
mov
mov
mov
in
push
push
filds
or
mov
cmp
addr16
je
cmp
test
mov
sbb
add
pop
out
aaa
xchg
mov
push
inc
mov
pop
dec
xor
fdivrs
cmp
sub
inc
adc
je
testl
jbe
sbb
cld
add
lea
shlb
loopne
pop
add
inc
cmp
je
sub
inc
jmp
inc
and
and
xor
shrb
push
outsl
cwtl
lcall
clc
mov
xchg
jo
cmp
jp
sbb
pop
lods
push
adc
into
jo
xchg
loopne
mov
test
add
in
inc
jl
punpcklbw
xor
cld
inc
pop
push
jl
mov
push
jne
push
sti
cmp
outsb
hlt
cmp
mov
cmp
bound
pop
les
lods
dec
or
rcr
arpl
mov
ja
in
sub
nop
stos
sub
mov
gs
jge
mov
add
inc
cld
shlb
sbb
pop
xchg
sbb
dec
pop
mov
fdivrl
jmp
loopne
jne
mov
inc
insl
dec
je
roll
sub
mov
mov
roll
pop
clc
inc
add
jae
movl
mov
shrb
shl
add
jmp
movsl
addr16
pushf
aas
insb
sti
and
cmpsb
and
adc
xchg
xchg
cmp
js
loopne
or
fs
jne
xor
lock
dec
push
mov
or
sub
aas
push
push
mov
jmp
dec
shlb
fildll
xor
sub
push
cmpsl
shll
adc
mov
push
add
or
int3
xor
in
stos
push
push
ror
inc
jg
or
mov
cmp
sub
mov
sub
jle
sub
and
pop
or
jl
ret
mov
pusha
bound
ljmp
aam
cmp
jbe
add
clc
mov
test
xchg
and
add
add
out
adc
je
test
jne
pop
inc
les
cld
jb
clc
test
cmp
add
push
xor
outsb
adc
xor
adc
movb
inc
test
mov
push
sub
ds
xchg
or
push
jns
inc
push
pop
data16
mov
inc
and
xchg
or
xchg
adc
mov
inc
loop
mov
mov
call
add
sbb
rol
lret
js
inc
push
lcall
jbe
clc
push
rolb
mov
fcomps
insl
out
cmp
mov
fwait
test
mov
adc
ja
mov
push
fcom
cwtl
pop
jge
ror
inc
add
dec
jmp
insl
loop
adc
ret
add
jmp
lret
jne
mov
imul
loopne
out
push
inc
sahf
mov
imul
ret
ret
cli
test
push
jo
inc
xchg
add
jg,pn
pop
push
clc
mov
in
cmp
aad
jbe
push
push
xchg
dec
xorb
popa
int
cli
jecxz
and
add
sbb
cmp
mov
sahf
inc
sbb
xchg
out
and
sbb
push
popf
test
mov
inc
and
mov
mov
imul
aas
cmp
loopne
repz
jne
push
xchg
xchg
cmp
or
mov
andl
addl
outsl
pop
ret
nop
out
cltd
aaa
jp
inc
popa
jb
imul
ficompl
cmp
xor
iret
ret
cmp
mov
inc
push
pop
push
mov
xchg
jl
push
adc
cli
lods
pop
mov
xor
push
lahf
mov
pop
push
add
or
ja
xor
push
mov
mov
jne
adc
sysret
cmp
add
sbb
xchg
ss
push
mov
push
pop
xchg
push
shrl
popf
int
add
xchg
jo
sbb
cmp
cmp
mov
cmp
outsb
or
out
push
fsubr
jae
pop
push
shl
aaa
xchg
cmpl
sub
cmp
pop
pop
subl
push
dec
lea
or
adc
sub
imul
inc
pop
mov
pop
xor
and
fisubrs
lcall
idiv
into
push
gs
add
inc
inc
rolb
add
pop
mov
cmp
getsec
mov
cmp
es
rclb
or
pop
mov
mov
push
movsl
push
das
fisubl
dec
add
mov
sbb
clc
pop
ficomps
or
je
test
dec
push
inc
inc
adcb
jmp
xor
push
fs
inc
xor
dec
adc
rcrb
shl
push
jmp
enter
mov
sbb
lods
inc
js
cld
pop
pop
or
adc
icebp
in
clc
mov
lods
mov
add
add
pusha
ret
shl
addl
inc
push
rorl
in
mov
iret
loopne
push
loop
inc
and
je
out
rorl
push
aaa
les
add
push
ficoms
add
pop
xchg
test
mov
repz
xor
mov
push
outsl
mov
mov
dec
fisttps
ret
or
sti
mov
sbb
pusha
jb
loopne
decl
cmp
adc
roll
ds
mov
jbe
push
adcl
inc
movb
lcall
jp
mov
xchg
jno
das
push
and
gs
and
call
jo
push
ljmp
or
mov
mov
xor
jno
sti
sub
and
fndisi(8087
mov
inc
inc
push
push
popf
test
xchg
jb
dec
pop
addl
add
jmp
xchg
add
scas
std
xor
mov
ret
push
roll
push
fstpl
es
insb
pop
frstor
pop
cmpsb
or
xchg
pop
mov
cmp
andb
xor
push
es
mov
sbbb
loop
out
and
cmp
push
cmp
lea
cmp
movsl
or
int3
push
orl
addr16
sub
ficomps
adc
movsl
clc
add
out
popf
and
testl
xor
ret
jne
xchg
cmpl
jne
cmp
lods
jo
pop
int3
push
push
lret
dec
aam
and
jne
sar
pusha
sub
ret
popa
xor
insl
jnp
das
xlat
shlb
add
das
js
js
cmpl
outsb
jae
cmp
in
andl
aas
mov
cmpsl
xor
sub
xchg
pop
or
xchg
add
adcb
jmp
bound
and
push
cmp
pop
jge
mov
sbb
inc
mov
add
xor
popf
jne
push
cmp
call
lock
rolb
subb
ficomps
lods
jno
mov
push
adcl
std
test
dec
fcmovb
pop
or
fcoml
loope
adc
sub
push
add
nop
inc
movsl
es
lea
mov
mov
xchg
pusha
cmp
mov
dec
mov
icebp
cmpsl
push
lods
fstsw
movsl
insl
cwtl
jl
fsubs
pusha
cmp
push
aas
je
push
sbb
cmp
push
pop
jne
aam
inc
cmp
shlb
or
mov
inc
pop
jne
pop
call
jl
incl
or
scas
insl
in
cs
xorl
and
push
xchg
cmp
sub
xor
test
mov
hlt
add
jmp
out
fldl
mov
sbb
cmp
and
in
pop
in
subl
mov
or
je
sti
lds
fs
jmp
pusha
mov
mov
sub
sarl
sbb
pop
daa
decl
cltd
or
xchg
mov
sub
xor
outsb
decb
adc
cmpl
pop
and
pop
sarb
mov
mov
pop
lock
sbb
pop
cs
pop
pop
fs
push
scas
or
inc
decb
add
subb
ret
ret
push
add
mov
ret
lahf
les
fadds
cmp
filds
or
or
push
mov
testb
adc
test
rclb
add
inc
push
mov
sbb
mov
pop
xchg
add
or
sbb
push
jno
xchg
imul
mov
pop
pop
pusha
pusha
jbe
fdivl
or
or
adc
js
adc
xchg
sub
addb
push
mov
data16
js
cld
outsb
xchg
and
mov
push
icebp
jge
shrb
adc
add
push
aas
jmp
push
rorl
lret
mov
mov
add
sbb
sub
movl
pop
insl
int3
adc
lea
int
sbb
sarb
movsb
ds
in
fdivr
push
push
mov
jbe
or
add
daa
mov
push
and
imul
inc
es
fistpl
push
fiaddl
ljmp
xchg
mov
sbb
loop
sub
inc
outsb
pop
cli
jp
push
pop
jmp
lea
stos
mov
adc
adc
or
popa
mov
mov
in
inc
sub
test
subl
pop
daa
nop
sbbb
push
and
mov
cld
mov
mov
lock
mov
pop
push
xor
sti
es
sti
paddusb
add
addr16
pop
push
mov
in
inc
jae
sub
jnp
sub
fcomp
rolb
test
cmpsl
xchg
inc
cmp
cmp
mov
rcl
cmp
fisttpl
daa
ljmp
cmp
adc
fwait
add
dec
add
dec
add
adc
dec
in
xor
pushl
inc
jbe
add
adc
adc
lret
mov
ret
jae
nop
mov
cltd
sbb
and
pop
sbb
pop
xchg
add
pop
mov
add
sbb
pop
add
xor
std
sbb
add
push
sub
into
mov
sbb
push
adc
ds
mov
das
or
bound
in
call
or
push
xor
shr
insl
jne
or
addl
jbe
jo
daa
inc
sub
adc
cs
mov
test
jl
push
sbb
ret
add
es
lcall
cmp
sub
or
or
andl
xlat
stos
loop
or
incl
cmp
roll
inc
adc
adc
sub
mov
ret
inc
sarb
or
mov
clc
jne
in
subb
es
xor
inc
pop
dec
adc
hlt
cmpsl
aaa
cltd
jecxz
ja
mov
pusha
je
divb
push
aam
adc
leave
repz
arpl
push
inc
adc
loopne
mov
push
add
jge
jb
xor
ret
jmp
cmp
lea
adc
inc
hlt
add
lods
mov
sbb
cli
hlt
xor
test
je
mov
mov
or
push
mov
add
mov
je
jg
hlt
cmp
ljmp
pop
mov
enter
pop
sub
xchg
lcall
and
inc
sbb
mov
iret
mov
ret
mov
jg
popa
or
mov
and
cmp
adc
int3
push
xorb
push
sar
push
popa
xchg
or
xlat
lea
add
pop
mov
or
inc
cmpsl
jnp
pop
xchg
xchg
mov
jne
addr16
mov
cmpsb
pop
push
rclb
hlt
test
addb
jno
je
add
nop
inc
ret
jle
out
adc
mov
add
pusha
scas
xchg
push
add
cld
jns
add
push
xchg
aaa
mov
lock
and
mov
sbb
fsubl
fsubl
and
test
add
or
sbb
adc
shl
cmp
lcall
adc
pop
pusha
imul
mov
ret
test
pusha
add
mov
je
adc
leave
and
bound
adc
add
xor
adc
clc
jmp
sub
iret
xchg
cli
push
push
push
popa
cmp
in
inc
ret
or
xchg
add
imul
mov
adc
and
adc
ret
scas
add
push
jmp
mov
xchg
add
and
xchg
adc
mov
mov
orb
gs
xor
xor
stos
pop
pop
sbb
dec
dec
dec
jne
loopne
and
jns
sbb
in
nop
jp
jmp
in
sbb
adc
lds
mov
shr
mov
flds
xchg
cmp
cmpl
push
adc
es
ficoms
int3
jl
out
stc
lcall
imul
fmuls
fcompl
add
and
loopne
inc
loop
push
shlb
ficomps
xor
mov
push
pop
js
aas
push
jnp
dec
imul
mov
nop
nop
rcll
xor
pushf
movb
xlat
push
fldt
ljmp
adc
fs
js
je
fdivs
daa
inc
mov
jmp
cmp
jl
jmp
pop
addb
inc
es
sbb
add
sbb
sub
stos
jo
sub
mov
push
cmp
fldcw
mov
mov
push
andl
xor
sbbl
mov
pop
insb
xor
lea
mov
pop
in
push
push
push
sub
jge
and
dec
cmp
in
ret
out
rep
ret
xor
xor
lock
xchg
add
jmp
clc
xchg
rclb
add
not
mov
xor
adc
jns
and
shll
jl
je
test
push
push
xor
ret
popf
mov
jmp
push
adc
test
jl
lods
push
push
or
add
dec
in
add
outsl
pop
int3
or
aas
ret
add
push
or
dec
xor
loope
aas
sbb
mov
js
inc
ljmp
cmp
sub
mov
sub
in
xor
lods
dec
sbb
jge
sbb
imul
inc
lahf
add
inc
push
or
inc
ds
add
es
adc
add
inc
decl
fsubp
xchg
subb
cs
push
jmp
sbb
sbb
popa
pop
jg
inc
cmpsb
leave
sub
pop
mov
cmp
das
loope
dec
mov
or
icebp
neg
ja
add
add
imulb
adc
jmp
push
js
sbb
loopne
aad
lahf
rcrb
fmul
shll
adc
inc
mov
adc
jge
or
push
push
cwtl
jle
jne
adc
cs
dec
nop
push
add
js
pop
pusha
push
push
push
mov
jo
pusha
mov
fisubrl
add
test
ret
pushl
push
iret
add
push
mov
pop
ja
cmpsl
inc
out
xor
movb
cltd
jo
push
pop
sbb
jno
jo
repnz
xchg
orb
cmp
push
jge
or
loopne
push
rcrb
xor
pop
jnp
push
andl
push
pop
mov
mov
mov
mov
dec
jae
sbb
pop
movsl
mov
mov
mov
dec
loopne
test
inc
bound
je
imul
inc
mov
add
adc
sub
outsb
push
mov
push
or
clc
and
pusha
push
adc
push
leave
add
inc
cmp
or
in
xor
scas
sub
inc
mov
sub
arpl
shrb
cmp
imul
cld
sbb
or
js
int3
and
mov
stos
push
cmpsl
inc
jno
sub
dec
subl
jbe
add
lret
lods
jb
loopne
and
adc
sub
push
lds
or
data16
push
repnz
push
leave
cld
adc
fldenv
sub
push
outsl
adcb
iret
or
dec
xchg
adc
pop
and
sub
cmp
negl
popa
adc
pop
addl
mov
push
incl
fists
aaa
jbe
push
mov
aad
and
xlat
mov
push
pop
sbb
adc
or
inc
sub
adc
rcr
pop
mov
aas
sbb
inc
sub
and
inc
adc
or
add
xchg
bound
add
or
iret
push
adc
enter
mov
xor
cmp
and
adc
das
pop
xchg
pushf
and
pop
mov
add
push
mov
mov
mov
push
arpl
add
cmp
inc
xor
add
movsl
cmp
inc
add
mov
dec
push
cltd
lea
jbe
fsubl
or
xchg
adc
adc
insl
or
insb
mov
mov
mov
test
jns
cmp
popf
or
loope
push
add
lods
or
iret
add
pop
or
add
inc
xor
cmp
lret
les
fbld
scas
test
nopl
xor
fdivrl
jb
sbb
xor
jne
xchg
cmpsl
mov
adc
orl
out
test
hlt
lret
jge
fcmovb
or
jge
add
xchg
mov
pop
leave
mov
inc
jne
sar
or
rorb
pop
cmp
push
lds
and
mov
movsb
mov
adc
inc
dec
inc
and
dec
mov
cli
push
cmp
pop
push
dec
and
inc
sbb
mov
cld
push
je
jbe
pop
inc
movsl
mulb
fisubs
sarl
and
add
int
inc
and
push
inc
mov
jp
ret
xchg
mov
mov
or
mov
sbb
adc
push
and
xchg
or
sub
cmp
shl
cs
cli
popf
sbb
jo
mov
mov
lock
inc
jp
sbb
jnp
inc
or
add
pop
mov
xorb
and
dec
jbe
sahf
push
cmp
jbe
push
push
enter
in
push
sub
dec
aam
int
ja
mov
and
push
and
sbb
jp
aaa
xor
xchg
je
aas
jae
scas
push
push
rclb
mov
sbb
adc
mov
dec
jmp
outsb
insb
pushf
gs
lret
fistpll
ja
inc
sbb
sbb
mov
subl
adc
push
push
jecxz
push
jge
adc
rcrb
ret
roll
xchg
xchg
jne
mov
mov
jne
cmpsl
movsl
repz
insb
insb
xchg
fs
fwait
xlat
lea
mov
loopne
mov
test
dec
xchg
add
lea
adc
add
fiaddl
pop
xchg
adc
or
push
les
mov
call
inc
adc
in
mov
mov
adc
and
iret
imulb
and
mov
and
sbb
pop
ss
flds
inc
pushf
pusha
fs
or
mov
inc
lods
add
dec
lods
pop
mov
inc
push
cmc
inc
shlb
faddl
push
sbb
push
mov
push
stc
bswap
enter
cmp
inc
mov
dec
dec
cltd
jmp
sbb
test
push
push
movsl
push
fsubr
push
mov
sub
loopne
outsl
add
daa
out
push
cli
adc
or
push
fildl
jg
jmp
adc
push
xchg
add
jl
pusha
xchg
mov
lods
scas
jge
aam
addr16
xchg
mov
fisttps
and
cmp
xchg
adc
add
sbb
or
inc
shl
inc
jbe
xor
pop
adc
lods
jmp
andb
jle
jle
pop
add
sbbl
sub
push
sahf
inc
loopne
push
mov
rcrb
bound
xor
fistpll
sub
pop
sahf
pop
jbe,pn
ret
sti
fdivl
ret
mov
xor
mov
subb
jp
xchg
mov
shll
push
adc
loop
push
dec
adc
insl
jno
mov
enter
mov
mov
adc
cmp
sub
push
push
fsubr
adc
ret
add
adc
js
xchg
or
inc
movsb
mov
xor
imul
inc
pop
mov
adc
hlt
inc
sbb
les
add
and
xchg
incb
mov
inc
ltr
cmp
loope
mov
rorl
cmp
pop
clc
leave
addb
divb
ficoml
jmp
mov
mov
clc
push
hlt
adc
or
cltd
or
enter
cltd
xor
dec
push
adc
xor
lahf
sbb
insl
jmp
enter
sub
mov
push
or
scas
mov
sub
cmp
call
or
sbb
pusha
in
stos
push
mov
sub
out
or
mov
pop
fisubl
loop
fs
test
cmp
sbb
ss
cmp
xchg
jmp
out
into
mov
test
inc
and
jne
jge
popf
xchg
mov
or
test
push
testb
xchg
jle
and
add
sbb
lock
out
push
mov
or
loopne
xor
stos
fldt
adc
sub
cmp
rcrb
dec
add
jbe
sub
add
jnp
das
movsb
push
pop
or
add
mov
push
mov
xor
inc
push
shlb
cmc
cmp
jb
mov
mov
jae
mov
adc
arpl
xchg
cwtl
mov
cmp
dec
adcl
cmp
inc
push
add
mov
pop
das
jae
mov
pop
inc
xchg
hlt
sub
cmp
out
xor
enter
cmpb
rolb
in
pop
lretw
cltd
jp
sbb
lods
sbb
cmp
mov
bound
jp
xor
inc
rorl
push
cmc
adc
mov
subb
push
push
cld
jne
ret
sbbb
mov
enter
ret
sbb
adc
xchg
adc
in
add
and
pop
xchg
ss
inc
shrb
test
or
adc
adc
cmp
mov
adc
and
notb
xchg
adcl
nop
xchg
test
cmpsl
lret
lods
cld
out
cmp
ss
ds
dec
outsl
cs
jb
je
dec
cmp
jnp
mov
sti
enter
mov
fcos
xor
mov
ret
and
out
adc
jns
adc
hlt
adc
xchg
or
inc
adc
adc
and
inc
cs
adc
adc
adc
push
enter
fildl
jbe
sub
shll
mov
mov
mov
jno
mov
cmpw
mov
rolb
je
cmp
adc
subb
int3
add
enter
or
xor
xor
jmp
insl
sbb
mov
pusha
lods
mov
test
add
lret
les
pop
pop
ret
inc
scas
mov
xlat
es
popf
mov
ds
mov
and
jl
inc
and
das
loopne
mov
jmp
cmp
shrb
cmp
testl
and
notl
sbb
xor
imul
lea
in
mov
lea
daa
stc
rcrb
xchg
jnp
dec
cmpsl
dec
mov
push
adc
mov
sub
add
xchg
inc
mov
and
mov
addr16
sbb
imul
jne
sarl
dec
popf
push
sbb
push
notl
mov
mov
sbb
and
jb
and
dec
or
sbbl
arpl
adc
or
divl
push
pop
add
inc
dec
shlb
ds
mov
shrl
push
jle
add
adc
adc
pop
cmp
cmc
imul
into
aam
mov
push
mov
inc
or
popa
stos
mov
push
in
fidivrs
jmp
xor
dec
cmp
test
dec
mov
pusha
movsb
shll
mov
mov
outsl
test
jnp
adc
cmp
xor
inc
sub
ss
cmp
orl
aaa
mov
std
mov
sub
mov
std
insl
movsl
jae
movsb
ret
inc
test
push
cmp
adcl
jmp
mov
imul
insb
std
xor
cmp
xor
shrb
testl
ja
icebp
pop
xchg
repnz
pop
or
sub
icebp
add
mov
dec
push
inc
xchg
adc
dec
dec
push
inc
add
xchg
test
sbb
add
loope
sbb
push
push
cmp
pop
and
mov
sbb
or
pop
push
fimull
test
pop
test
xor
add
shll
mov
neg
nop
mov
inc
sbb
dec
mov
mov
stos
test
push
mov
aam
rorb
jo
insl
out
and
add
add
mov
sbb
mov
sub
mov
mov
in
mov
jmp
push
mov
lea
adc
add
imul
leave
test
push
sub
jge
mov
cwtl
rcpps
call
int
xor
adc
repnz
cmp
mov
jmp
cmp
pop
xor
or
inc
test
mov
into
mov
add
ret
jg
adc
inc
dec
adc
roll
push
push
mov
cld
cmpsl
jmp
cmpl
push
mov
jno
cmp
movsl
adc
or
xchg
cmp
jl
xchg
add
jae
dec
notb
sub
outsl
pop
stos
xor
mov
adcb
jg
clc
adc
pop
decb
cwtl
stos
or
xor
scas
jp
push
and
push
fs
mov
jle
out
es
sub
psubw
gs
bswap
popa
inc
sub
test
pop
add
adc
shrb
fwait
cli
inc
scas
nop
lock
outsb
jl
adc
push
scas
push
in
inc
push
xor
pushf
cmp
out
xchg
ret
jb
pop
push
int
jbe
ror
ret
sbb
xor
cmpsl
mov
pop
roll
pop
pop
repnz
add
pop
mov
dec
sahf
xor
inc
bound
jno
enter
xor
mov
inc
pop
mov
dec
imul
mov
cmp
dec
sub
shufps
scas
repnz
jge
mov
push
fcmovu
mov
adc
sub
lret
faddl
xor
mov
pop
dec
adc
cmp
ss
adc
xchg
fstpl
mov
call
mov
ret
push
mov
pop
xor
push
push
popf
push
mov
mov
in
inc
es
inc
pushf
adcb
test
call
cmp
adc
pop
out
nop
push
and
xchg
bound
xor
push
movaps
enter
mov
jl
dec
xor
mov
mov
xor
adc
adc
insb
stos
mov
sti
sub
in
insb
and
mov
pop
outsl
or
ljmp
add
mov
add
pop
and
push
jecxz
add
xchg
xlat
mov
mov
data16
or
xor
push
add
sbb
push
imul
rclb
clc
or
push
aas
xor
fs
jmp
das
test
or
andl
and
add
imul
shll
sub
mov
mov
or
xor
loopne
inc
fidivs
enter
inc
orl
mov
sub
flds
cltd
inc
push
imul
add
in
jae
lret
clc
lea
jmp
cmpl
sub
shll
or
aam
push
je
mov
xchg
jp
clc
scas
pop
in
fmull
lret
js
shrb
sbb
dec
mov
add
imul
dec
sbb
or
pop
lds
fs
movsl
jge
clc
xchg
cmc
in
push
fbstp
out
sbb
xorl
push
addr16
lret
sbbb
mov
aam
pusha
add
notb
add
sub
xchg
xor
xchg
xorb
push
arpl
mov
fiadds
pop
or
or
xor
orb
xor
mov
cmp
adc
pusha
lods
or
or
sub
add
subl
mov
mov
xchg
inc
idivl
sahf
pop
test
mov
mov
lret
out
das
adc
cmp
mov
test
and
or
roll
inc
cmp
mov
adc
xchg
mov
mov
mov
insb
cltd
jecxz
inc
push
sub
inc
aas
pop
gs
stc
addb
pop
fidivl
xchg
out
adc
cmp
sbb
jmp
mov
jbe
xchg
fcomip
js
add
stc
xchg
lds
enter
outsb
or
mov
loopne
scas
pushl
xchg
adc
or
add
enter
mov
dec
test
xchg
cwtl
outsb
push
lock
mov
pop
dec
jb
outsb
jge
mov
add
cmp
je
cmp
or
or
xchg
sbb
or
nop
popa
and
cmpb
mov
xor
push
add
inc
and
cmc
std
jb
jl
cmp
pop
adc
add
nop
dec
dec
enter
adc
dec
je
add
sub
push
or
imul
or
xchg
push
pushf
test
jae
push
xchg
mov
outsl
adc
jl
scas
and
jmp
adc
mov
fsubrs
pushf
mov
sbb
push
shrl
jb
test
or
testb
adc
bound
adc
sbb
ja
pop
or
jb
je
imul
loope
sub
lret
fmull
or
cmp
push
jbe
or
je
test
cltd
jbe
xor
lock
jne
mov
shll
and
add
aaa
sub
lock
enter
xor
add
in
stos
es
enter
dec
lcall
jbe
and
js
and
jb
lds
mov
mov
inc
mov
add
and
cmp
jae
mov
sub
sbb
js
lock
fistl
cld
loopne
fnstenv
loopne
push
push
mov
testb
push
stc
repz
test
pop
mov
fmul
dec
inc
in
or
out
testl
inc
push
cmp
add
inc
sbb
icebp
dec
ljmp
lea
lock
pop
inc
mov
pop
pop
sub
lret
pusha
push
and
sub
aam
xor
mov
neg
sbb
and
bnd
sarb
test
mov
push
sub
push
adc
push
les
daa
stc
lods
les
sbb
jge
andb
cmpsl
xor
xor
mov
fistpl
add
mov
in
outsl
jmp
sub
mov
push
jb
sbb
mov
jg
add
out
cmpl
jne
cmp
jbe
or
jne
push
jnp
mov
add
hlt
fisttpl
std
mov
loopne
xor
push
xchg
popa
xor
ja
inc
cmc
jmp
sbb
orb
addl
nop
aam
mov
or
mov
loop
xchg
mov
mov
ja
cwtl
sbb
pop
movsl
lea
lods
push
cmp
jne
loope
imul
popf
inc
pop
lea
push
mov
ja
xchg
jne
movsb
inc
jg
or
cmp
js
xchg
or
xchg
or
nop
pusha
xor
sbb
mov
call
push
rep
addl
add
cmp
mov
jnp
adc
movsl
cs
sbb
add
add
fldenv
or
add
inc
adc
inc
push
js
call
sbb
jg
rolb
adc
andl
leave
ret
ss
nop
push
sub
movsl
clc
addl
cltd
pop
or
lods
xchg
cmp
add
add
daa
inc
test
xchg
push
jne
aas
arpl
or
sbb
cmp
stos
call
dec
ljmp
gs
jg
xor
or
cmpl
cmc
jl
jmp
call
shlb
ljmp
rcrl
push
fldl
mov
push
push
arpl
xor
int
sbb
push
loopne
xlat
sub
push
repz
ret
pop
mov
lock
ret
mov
jb
sub
or
cmp
fcoms
push
sbb
fiaddl
arpl
inc
cmp
jp
add
jae
cmp
dec
cmp
leave
sahf
ds
xor
push
rcrl
add
xlat
sbb
loopne
and
or
es
cmp
sub
jb
push
jae
and
sub
mov
data16
add
jne
pop
shlb
dec
pusha
testb
cmp
decb
cmp
daa
lock
jp
ljmp
push
dec
jno
orl
inc
inc
fcoml
cmp
es
xchg
lods
push
fwait
add
xor
fmuls
add
cltd
mov
push
out
mov
das
jecxz
popf
ljmp
xor
xor
mov
int3
ds
mov
jbe
mov
sbb
sbb
or
dec
add
call
dec
mov
nop
mov
push
test
cmp
sbb
arpl
sbb
or
outsl
jle
or
das
loopne
mov
movsl
fsubl
jno
mov
xchg
jge
cmpsl
shll
outsl
sbb
cmpsb
cmp
packsswb
cs
mov
je
or
roll
xor
inc
scas
xor
and
sbb
faddl
pop
push
repz
loopne
add
cmp
pop
mov
lock
push
and
rcr
pop
xchg
mov
xchg
or
xor
add
lea
pop
nop
adc
and
inc
sub
mov
pop
pop
in
add
push
notl
mov
mov
fsin
mov
xor
je
mov
stos
mov
and
clc
les
test
xor
in
enter
dec
or
out
sub
loop
push
aam
mov
fcomps
add
and
adc
fcoml
push
jle
cltd
mov
xchg
sarb
xorl
and
subb
rclb
or
xor
in
adc
lea
jae
and
pushf
fucom
dec
fdivrs
cmp
push
popf
push
test
lret
mov
dec
pop
xchg
pop
add
in
rorb
std
mov
sub
sahf
roll
add
pop
mov
or
movd
sbb
mov
xchg
rcrl
mov
in
into
sbb
mov
mov
sub
inc
inc
sbb
push
in
mov
add
lea
fistps
or
test
test
aaa
mov
add
popf
pushf
xor
xor
xor
sub
cmp
xchg
out
in
xor
and
pop
je
mov
js
adc
push
jae
ss
rorb
aas
or
or
aaa
mov
out
mov
lea
sub
push
sbb
cmp
mov
push
push
daa
add
or
aad
sarb
lea
jae
jge
sbb
push
dec
or
testl
je
iret
xchg
inc
clc
iret
lea
loopne
call
scas
xor
stos
sbb
jmp
push
inc
sub
dec
insb
icebp
sub
and
sar
push
movsb
and
test
sbb
push
adc
xchg
pop
lsl
mov
or
adc
dec
imul
add
or
cmpsb
pop
push
sbb
adc
out
mov
adcl
xor
xor
popa
mov
sbb
adc
or
adc
ja
adc
inc
mov
add
das
dec
and
sub
adc
mov
loope
adc
push
in
jne
push
subl
pop
lea
cmp
jle
movsl
sub
imul
inc
fisubl
hlt
ja
pop
adc
in
jmp
mov
nop
cmpsb
adc
imul
orb
mov
add
fisttpll
xor
push
lds
or
jle
sbb
adc
mov
mov
mov
pop
clc
add
mov
incl
int
or
dec
sti
jge
imul
sub
lock
out
pop
movsl
movsl
pop
imul
shll
and
push
and
or
jbe
push
push
or
aam
inc
adc
or
or
je
adc
sbb
inc
clc
jmp
push
je
dec
add
inc
sub
fs
les
scas
inc
inc
outsb
orl
adc
std
lcall
scas
jbe
pop
int3
or
adc
add
add
arpl
xor
and
outsl
lahf
in
lea
ss
lret
shl
orb
xor
mov
loop
loope
lret
xchg
daa
bnd
fisttpll
push
mov
mov
push
cmpb
outsb
mov
dec
ret
push
jae
lea
push
sub
push
out
shlb
ret
push
out
push
inc
lcall
shl
inc
dec
pop
ret
mov
fmuls
ret
int3
loope
pop
sub
cmc
loopne
jge
mov
sarl
sti
or
cmp
cmpb
xor
fnstenv
inc
jmp
push
or
mov
sti
sub
jmp
in
lea
les
shll
movb
inc
inc
or
cmp
push
xchg
fdivs
sub
sub
out
push
xchg
add
jmp
loope
out
insb
mulb
or
daa
mov
div
fstpl
add
cmc
dec
in
jne
cmc
rorl
or
ds
loopne
mov
mov
push
mov
jo
mov
bound
pop
mov
jb
add
test
or
jns
lock
lea
jbe
fwait
xchg
push
inc
cmp
pushf
mov
fnstenv
data16
push
scas
mov
push
ds
enter
xor
mov
sub
outsb
pushf
cmp
add
mov
or
sti
sub
int
or
xchg
xchg
je
xor
fdivl
cmp
lds
and
mov
cmp
jb
inc
daa
mov
mov
cmpb
push
movb
adc
orl
pop
div
fimull
push
bound
inc
or
add
stos
adc
es
xlat
nop
add
xor
adc
sbb
lods
push
inc
shrb
call
sahf
jmp
out
std
cmc
imul
sbb
mov
dec
add
mov
xchg
jnp
jmp
addr16
cmpsb
imul
les
xor
imul
filds
mov
or
lods
pop
in
push
js
repnz
lea
mov
jbe
sbb
pop
mov
in
out
std
push
xchg
lods
and
mov
xchg
xor
mov
push
inc
inc
mov
lods
push
and
inc
rcrb
aad
jo
push
cmp
cmp
jmp
xlat
and
pusha
cmp
lock
movl
pop
cmp
wbinvd
fcoml
nop
fimull
adcb
in
mov
sbb
out
pop
in
stc
mov
add
iret
push
ret
rclb
adc
out
lods
out
not
jbe
cmp
pop
adc
ret
dec
testb
js
pop
je
sbb
pushl
or
scas
inc
fucomi
and
push
lret
pusha
jo
inc
sbb
sub
pop
imul
xchg
ss
inc
es
sbb
pop
adc
add
adc
cmp
inc
stos
pop
mov
xor
mov
adc
dec
xchg
icebp
andb
gs
mov
mov
adc
inc
pop
cmpsl
pop
imul
rep
cli
adc
dec
inc
mov
add
pop
fildl
adc
or
mov
dec
sub
mov
adc
sbb
push
ljmp
sbb
ja
lea
rorb
xor
repnz
mov
pop
sbb
pop
sbb
cmp
sub
push
sbb
mov
mov
int
and
push
pop
xchg
mov
mov
add
adc
ficompl
cltd
ret
sbb
movsb
push
dec
sub
push
jae
test
sub
mov
push
push
addr16
in
fs
xchg
cmpsb
addl
pop
mov
mov
add
jge
jg
adc
jne
or
inc
xchg
jae
jne
dec
sub
out
adc
jle
popa
inc
and
ror
dec
sti
lock
add
mov
or
test
pop
or
sti
dec
push
lahf
mov
rcrb
es
iret
jmp
and
pop
cld
lcall
adc
or
mov
pop
stos
adc
adc
push
out
mov
push
or
add
cmp
or
sbb
bound
sarl
xchg
pop
push
xor
pop
inc
inc
cmp
ret
push
iret
cmp
fldt
ud2
int3
sti
or
imul
into
movsl
ds
popa
jge
rcll
pop
mov
push
mov
iret
icebp
fimuls
adc
cltd
and
cs
shrl
sub
subl
inc
adc
pop
fwait
ret
mov
fcoms
ret
pop
rclb
out
inc
xorl
xchg
jle
js
push
push
or
pop
sub
pop
and
push
inc
movzwl
test
je
test
ret
or
push
or
jo
push
xchg
dec
shll
push
mov
pop
mov
xchg
add
push
cmpl
rcll
or
std
mov
push
sarb
das
jmp
cmp
inc
arpl
mov
push
clc
push
push
push
js
fcmovne
fsubrs
sub
push
dec
push
adc
xchg
rol
mov
fisubrs
cmp
pop
mov
adc
loopne
lods
pop
sbb
and
and
stc
push
mov
sbb
dec
clc
loope
cmp
js
fildl
or
lods
add
js
sbb
aam
clc
lret
adc
addb
fdivrl
in
pusha
pop
push
in
je
aam
mov
jle
push
lods
movsb
inc
sub
gs
les
pop
jle
mov
mov
add
icebp
push
imul
add
arpl
out
push
imul
dec
pop
push
dec
add
or
je
scas
ljmp
mov
mov
or
movl
or
mov
std
xchg
jno
xor
daa
sarl
adc
repnz
cli
push
cmp
push
ret
xchg
add
cwtl
cmp
imul
dec
cli
sbb
repz
cmp
push
adc
cld
jnp
jmp
js
mov
xchg
dec
ss
add
sti
dec
jb
add
clc
xor
add
lods
mov
aam
xchg
mov
jne
mov
add
outsb
pop
sbb
jne
mov
jnp
pop
pop
fs
push
push
sbb
mov
mov
popa
or
js
enter
mov
outsl
jle
jl
adc
cs
cmp
xor
jge
adc
or
sarl
pop
dec
cmp
adc
mov
gs
out
shll
jecxz
pop
jl
subl
add
cmp
xchg
add
gs
push
lea
stos
push
cwtl
sub
and
ds
and
imul
movsl
xchg
mov
cmp
inc
push
sub
push
sub
push
repnz
sarb
inc
or
mov
enter
frstor
inc
js
rcll
sbbb
sbb
rorb
sahf
jecxz
and
inc
clc
scas
xor
mov
inc
cmpsb
cmpsb
push
push
dec
push
cmp
adc
inc
ss
sub
cmp
push
fwait
sbb
mov
mov
adc
pop
or
outsb
adc
push
popf
loop
out
ffree
in
mov
jmp
into
out
push
adc
shrb
roll
dec
xor
xor
popf
divl
push
cmp
xor
push
pop
mov
outsl
push
add
inc
xor
sub
jne
fistpl
inc
popf
adc
lock
xchg
jl
mov
leave
add
mov
mov
cli
xchg
and
lea
push
ss
xor
shrb
mul
jge
call
jns
adc
lret
push
pop
js
iret
push
shrb
fcmovnbe
push
pop
repz
imul
inc
add
or
pop
jmp
aam
xorl
int3
add
lret
mov
sbb
mov
fadd
push
ja
sub
mov
inc
mov
jg
sub
and
xor
adc
xchg
fimull
add
lds
loop
inc
xchg
xchg
adc
sub
sub
je
xchg
xchg
js
outsl
adc
cmp
in
loopne
or
inc
mov
adc
add
push
push
and
sub
out
adc
insb
jmp
pop
and
outsb
out
in
sbb
inc
and
add
pop
loopne
push
jno
add
es
cmc
and
enter
sbb
je
cli
mov
daa
cmp
mov
pushl
lock
in
sahf
pop
mov
ret
sbb
or
xchg
rcrl
or
loopne
push
cmp
pusha
pop
xchg
loop
inc
in
mov
jnp
mov
imul
jmp
mov
and
cmp
xor
dec
enter
icebp
pop
xchg
add
push
mov
xchg
push
cld
sub
pop
mulb
femms
lods
pop
adc
pop
loop
and
aam
mov
andl
les
adc
jge
movb
cmc
int3
rcll
or
adc
call
add
mov
or
and
jl
fwait
xor
jno
and
jne
sub
pop
xchg
or
pop
mov
push
or
jne
sub
add
in
adc
daa
add
sbb
insb
xor
add
loop
dec
push
js
popf
fists
lahf
cmp
ja
lock
sbb
lea
es
lret
push
into
add
clc
iret
xchg
xchg
fcoms
emms
insl
repnz
cld
push
dec
jnp
notb
popa
inc
add
mov
dec
add
stos
pop
fcmovb
xchg
rorb
push
add
loope
fists
movsb
inc
mov
std
sbb
or
push
jnp
aad
in
xor
cmp
sub
mov
or
adc
out
push
push
cmp
fiaddl
mov
mov
jp
lods
adc
add
out
push
fdivl
enter
pop
mov
cmp
push
dec
scas
lcall
inc
fbstp
aam
pop
mov
jg
daa
cmp
and
pushf
pop
sbb
xor
mov
pop
mov
bound
jo
movsb
cmp
push
jmp
imul
sub
insl
roll
loope
cmp
push
jnp
sarl
les
icebp
repnz
xchg
mov
push
out
dec
aam
and
add
jle
dec
andb
and
and
sar
mov
sbb
jne
aaa
push
add
jne
sub
sub
jae
sbb
jne
add
push
sahf
inc
push
push
je
xor
outsl
ret
cmp
sbb
dec
insb
jne
data16
aaa
adc
jne
scas
aaa
ret
sbbb
mov
cmp
and
cwtl
ds
sbb
or
in
push
pushf
js
rorb
fadds
dec
aam
mov
inc
insl
fadds
add
mull
lock
adc
xchg
cmp
jne
xchg
or
jnp
ret
cmp
pop
push
push
pop
inc
sti
pavgw
cmp
jl
mov
outsl
or
cmpsb
push
cmp
fidivs
fidivrs
pop
sbb
in
push
adc
xor
cmc
push
sub
adc
xor
rorl
outsb
rcr
push
test
outsl
add
inc
push
sbb
test
stc
mov
and
adc
movhps
lea
jno
mov
mov
mov
mov
in
push
test
adc
inc
pop
adc
cmp
movb
or
or
shl
mov
aas
and
add
shl
leave
mov
add
and
add
push
xor
jp
xchg
lea
das
inc
inc
dec
rorl
xchg
sbb
or
pop
add
sub
js
dec
aaa
push
data16
and
lea
andb
xchg
subb
add
sbb
adc
cmp
push
pusha
imul
rol
cmpsb
js
mov
push
and
movsl
or
call
test
cwtl
test
enter
dec
int3
int
or
and
mov
cmpsl
xor
addr16
scas
sub
es
dec
add
ficompl
pop
lret
push
inc
sti
and
pop
movb
sbb
jbe
push
lret
pushl
sbb
xchg
mov
rcl
jae
fadds
sbb
and
xor
jo
xor
add
and
xor
pusha
push
push
je
xor
mov
std
add
or
hlt
pusha
rclb
sbb
dec
rcrb
add
out
ja
add
pop
sbb
push
adc
push
mov
mov
shlb
les
mov
sub
sub
xor
pop
adc
add
loope
pop
fs
add
das
cld
adcl
mov
jne
mov
xor
incl
and
notb
dec
cli
sub
ret
or
cmp
jne
sbb
dec
xor
ret
inc
sbb
clc
push
ret
lcall
daa
push
jle
out
jle
mov
xor
or
sahf
sti
and
test
in
push
pop
add
fistps
mov
sub
ret
testb
shl
ret
in
push
pop
and
xcrypt-ecb
cmpsl
dec
xchg
and
pusha
adc
xor
fimuls
cs
xor
das
xorl
outsl
mov
inc
adc
jne
orl
and
daa
inc
dec
adc
imul
inc
pop
dec
test
mov
xchg
add
add
sub
stc
fldl
je
mov
das
add
lods
cmp
mov
xor
mov
nop
fcmovnbe
cmp
mov
fisttps
scas
add
xchg
xchg
mulb
stc
push
jne
mov
pop
sub
and
mov
and
pushf
mov
data16
cmp
adc
lea
subl
inc
xchg
ja
fwait
in
lcall
mov
outsb
push
dec
pop
movsb
lock
mov
adc
into
js
pop
adc
mov
or
xchg
sbb
outsl
andl
and
dec
aad
adc
dec
stos
adc
shlb
xchg
jp
jno
lock
mov
xor
cli
pop
sbb
cmp
sahf
jge
addr16
out
pop
mov
sub
sbb
pusha
dec
and
dec
mov
add
dec
lods
dec
push
adc
or
lods
jns
or
popa
and
mov
push
xchg
fcompl
in
sti
insl
adc
mov
inc
fs
aad
stos
mov
mov
sub
jp
inc
fcmove
call
sub
repnz
mov
mov
adc
jb
sbb
lea
add
sbb
loopne
or
bound
pushl
mull
push
and
mov
adc
lods
ja
dec
xor
int3
lock
arpl
ffree
fwait
inc
adc
lock
call
and
loope
add
or
pushf
add
mov
je
fs
or
fs
inc
inc
push
sbb
insb
and
adcl
sbb
push
mov
cmp
push
icebp
mov
push
xchg
and
je
popf
add
sbb
push
lds
push
lods
cmpb
or
cmp
lea
mov
hlt
sti
push
sub
and
sub
inc
and
shlb
andl
adc
push
movsb
push
outsb
dec
adc
in
orb
lock
lock
cmpsl
adc
cmpsl
dec
jmp
stos
or
lret
xchg
pop
adc
jo
cmp
sub
jg,pn
xor
movsl
movswl
in
push
mov
mov
add
push
and
ret
add
mov
inc
sub
sub
cmp
cmpsl
xor
cmp
xor
popl
push
flds
pop
add
pop
pop
or
mov
adc
add
test
or
xchg
scas
xor
add
lods
insl
aaa
leave
adcl
add
ret
jle
jnp
inc
das
xchg
jno
and
sub
jo
jne
adcb
repnz
cmpsb
sbbl
adc
icebp
rclb
sub
std
insl
ljmp
popa
mov
inc
clc
dec
add
mov
sub
cs
add
out
pop
es
jne
outsb
fcompl
add
shlb
shr
cmp
pusha
cmp
pusha
xlat
stos
or
inc
or
in
ds
cwtl
fidivrs
adc
sub
mov
andl
das
cmp
test
jae
cmp
rorb
fmulp
cwtl
dec
push
lea
inc
mov
push
out
adc
add
lea
dec
pusha
ss
or
sbb
cmp
adc
lock
mull
in
xor
fcoms
jecxz
mov
inc
orl
lret
add
sub
mov
pop
arpl
bound
fs
imul
sub
test
fidivl
je
inc
fdiv
or
mov
loopne
or
cmp
movsb
pop
add
sbb
sub
sbb
lret
dec
stos
cmp
enter
fdivs
pop
or
ljmp
jge
fdivrl
jg
sbb
mov
mov
rolb
sbb
or
or
inc
xchg
ds
adc
or
pop
add
test
cmp
fmuls
cmp
inc
popa
rcr
out
jno
mov
pop
ret
mov
in
adc
push
pop
cmp
push
add
or
pushf
push
pop
data16
sub
push
adc
and
xchg
xor
adc
dec
es
and
push
lea
and
push
push
cli
sub
xchg
aam
push
sub
dec
inc
in
sub
adc
xchg
cltd
mov
push
push
push
ja
adc
push
adc
fiadds
mov
sub
xorl
pop
mov
mov
movsb
inc
pop
push
cli
adc
push
dec
pop
mov
sbb
pushf
push
jmp
rolb
je
push
push
add
testl
pop
shlb
lret
rolb
push
pop
jae
cmp
inc
push
dec
xor
xor
xchg
loope
dec
pusha
xor
pop
mov
movsl
add
pusha
inc
in
jl
mov
mov
icebp
xchg
cmp
sbb
and
push
push
jo
rclb
sbb
mov
cmp
cmpsb
add
xor
push
xor
sbb
insl
pop
out
or
jmp
xor
rcrb
loope
lods
pop
enter
push
add
test
pop
jl
stos
sbb
cmp
repnz
push
stos
fldenv
hlt
sub
mov
aaa
jne
jae
ja
movsl
sub
movsb
jns
pop
inc
and
push
insl
or
movsl
dec
repz
adc
shl
sbb
lea
cmp
push
and
imul
add
inc
dec
cwtl
push
aam
sub
push
adc
fsubl
jb
cwtl
push
mov
inc
jnp
les
inc
push
or
pop
fstpt
cmpps
adc
fsubl
sub
adc
xchg
sub
add
popa
mov
add
inc
jg
je
jg
lea
mov
push
inc
add
mov
cmp
sbb
je
sbb
sbb
or
jnp
xor
mov
out
inc
mov
xchg
add
jp
push
add
push
cs
or
mov
fwait
cmc
pop
push
and
push
mov
xor
push
xchg
dec
push
adc
pop
cmp
sbb
cmp
push
imul
push
inc
and
and
loope
pop
dec
xor
call
or
mov
mov
int
daa
loopne
movsl
push
xor
loope
inc
enter
scas
lea
and
xor
cs
or
or
mov
loopne
push
jbe
pop
ljmp
mov
pushf
adc
push
cltd
xchg
add
push
sbb
add
push
or
fldt
pop
add
sbb
xchg
push
nop
ss
sub
add
dec
and
push
push
ss
jnp
inc
push
inc
xor
push
xor
andb
out
adc
lock
jg
add
fwait
pop
clc
es
cmp
nop
lock
ss
mov
dec
adc
inc
sbb
js
pop
push
test
push
push
int
mov
xor
inc
push
sbb
iret
fucom
std
push
nop
sbb
cmpb
leave
push
mov
or
or
mov
or
dec
pop
movsb
add
jnp
inc
or
inc
inc
ret
in
jmp
jmp
xor
mov
lods
stc
inc
cmc
js
add
cmp
sbb
jmp
pushl
jne
push
pop
mov
pop
add
push
sahf
ds
cmpsl
orb
jnp
idivl
mov
inc
xor
push
nop
rcll
push
mov
int3
pop
into
add
or
mov
mov
sub
mov
in
adc
jl
andl
adc
js
push
mov
js
sub
fs
jne
insb
sub
outsb
inc
jae
xchg
dec
pop
adc
mov
pop
jo
push
dec
jo
sbb
adc
mov
outsl
mov
push
stos
xchg
movsl
icebp
add
cmp
xor
scas
test
push
lds
adc
mul
xchg
dec
adc
shl
sbb
out
ret
jl
cmp
mov
jl
or
jp
inc
push
icebp
jne
mov
sub
sub
sub
xor
pop
push
sbb
jmp
and
pop
js
ljmp
mov
push
and
sbb
or
xor
cmp
xchg
into
push
mov
movsl
add
pop
pop
jb
jmp
xor
push
stos
and
push
pop
lock
loopne
sub
ss
and
mov
decb
add
cmp
mov
or
cmp
add
sbb
push
ret
inc
sbb
icebp
mov
les
or
cmpxchg
fwait
cmp
jl
loope
xor
push
in
scas
mov
fistl
adcb
and
fadd
fidivrl
iret
rolb
fisttps
faddl
test
fidivs
xchg
mov
mov
mov
fstl
lods
cmpsl
sub
add
adc
dec
inc
mov
aas
mov
cmpsl
loope
jl
add
inc
push
in
push
add
cmp
cmpsl
aaa
add
xchg
pop
addl
jle
xchg
iret
ja
push
push
addr16
arpl
repnz
or
inc
or
lock
adc
push
xchg
nop
enter
fstpl
stc
or
or
cli
and
ret
mov
inc
cmp
mov
mov
data16
mov
mov
mov
xchg
inc
pop
repz
inc
mov
mov
call
dec
cmpsb
neg
adc
sub
and
mov
ret
stos
or
mov
inc
pushf
jmp
es
mov
add
push
jg
mov
pop
cwtl
imul
cld
or
cltd
idivl
push
or
dec
inc
inc
mov
add
add
fucomip
or
mov
mov
pop
push
dec
enter
mov
or
mov
inc
ret
iret
pop
pop
test
xor
push
push
adcl
cmp
aad
leave
scas
add
movsl
add
dec
push
and
push
mov
push
xor
cmp
rolb
push
xchg
fcoms
adc
fistl
mov
xchg
aas
or
inc
cmpsl
inc
sub
daa
js
imul
or
ds
push
cmp
sub
in
xchg
pop
mov
add
adc
add
push
stos
mov
outsb
movsl
or
jg
mov
sub
mov
je
in
clc
push
jns
mov
push
cmp
test
cmp
pop
cmp
jp
fsubl
cli
dec
and
and
mov
sbb
mov
dec
mov
outsl
push
or
jae
push
mov
add
js
flds
inc
ret
jae
orl
adc
and
cwtl
dec
pusha
lcall
data16
mull
mov
je
xor
add
je
lds
scas
add
pop
add
pushf
inc
xchg
mov
enter
movsl
std
mov
adc
sbb
lea
orb
jle
pop
mov
mov
scas
jne
pop
add
push
add
cmpsb
fcoms
ss
mov
add
add
and
add
xor
and
aas
pop
xchg
sub
es
jbe
or
cmpl
cli
push
lea
test
dec
movb
push
mov
sbb
iret
pop
dec
push
xor
shr
inc
add
gs
pusha
pop
call
loopne
adc
cmp
pop
out
add
cmc
xor
mov
insb
std
popl
or
pop
decb
sub
pop
adc
add
and
jno
pop
aam
mov
stc
outsl
insl
out
in
mov
jae
movsl
mov
movsl
dec
mov
es
sbb
jne
pop
jnp
popa
sbb
push
arpl
jecxz
jne
pop
adc
inc
lock
shl
push
xchg
adc
pop
jns
add
inc
and
push
ja
testb
sbb
xor
sbb
clc
ficoml
mov
or
ljmp
int3
xchg
cmp
or
xor
sub
in
xor
bound
xor
loopne
fists
test
orl
jmp
arpl
insb
leave
adc
out
mov
adc
int
insb
or
mov
int
adc
xchg
pop
imul
loopne
add
inc
scas
fadds
out
or
xor
sbb
jle
out
mov
je
cmp
add
imul
push
jne
ss
call
add
cmpb
jl
push
loopne
fucomip
push
push
jnp
add
mov
outsl
push
out
lds
xor
pop
cld
arpl
jle
add
inc
xor
addr16
ret
xchg
xchg
adc
and
dec
rorl
push
mov
repz
push
jne
repz
add
in
mov
sbb
xor
dec
or
fcmovu
movsl
ds
inc
jo
into
sub
lock
sub
int
inc
orb
mov
arpl
push
test
test
sbb
mov
psrlw
ret
inc
push
mov
cmp
inc
or
xchg
cmp
inc
pop
jp
jl
aaa
cmp
ss
pop
sahf
notb
inc
in
sub
mov
int3
dec
add
ret
or
sub
adc
push
push
jae
nop
and
rorb
inc
push
addr16
adc
test
decl
call
sub
setp
ja
xchg
imull
insl
jnp
mov
xor
pop
xor
adc
mov
repnz
dec
or
pop
testl
ret
loope
mov
es
inc
sahf
orl
hlt
ror
mov
push
ja
dec
or
add
push
leave
pop
xchg
adc
test
inc
cmc
aaa
sbb
push
adc
ud2
out
mov
jmp
or
bound
sbb
mov
call
lret
add
dec
nop
push
pushf
fnsave
sti
je
dec
pop
cwtl
sub
fsubrs
jge
lods
testl
push
mov
adc
shlb
or
ret
cmp
dec
adc
inc
xchg
out
adc
mov
cmpsb
add
mov
dec
jne
imul
invlpg
xchg
pop
sub
orl
push
push
sbb
cmp
in
fsubrl
js
movl
fs
push
push
dec
or
adc
dec
pusha
xor
test
add
in
je
add
push
je
mov
cmp
cmp
sbb
mov
imul
aas
pushf
add
sahf
ljmp
cmp
pop
loopne
mov
pop
push
rolb
or
xorl
sub
and
aas
or
pop
sub
daa
inc
insl
adc
xchg
add
cmpsl
adc
cmp
push
add
divb
lret
mov
roll
rcl
adc
or
push
jnp
mov
mov
xchg
or
sti
push
addb
lock
arpl
sbbl
in
daa
or
lock
push
add
cmp
adc
xor
rcr
incl
xchg
or
outsl
ss
mov
push
push
cmp
jecxz
pop
xchg
mov
js
rolb
cld
push
adc
std
xchg
mov
add
shl
aas
test
inc
mov
cltd
adc
jmp
bound
or
nop
fs
push
xchg
push
aam
sub
nop
fs
movsl
push
enter
jne
ret
outsl
mov
xor
cmp
sti
dec
ja
je
xchg
inc
jae
or
je
or
sub
push
sub
adc
mov
stos
jns
dec
push
adc
xchg
or
add
or
jne
sahf
popa
or
xchg
jnp
xor
jmp
rcrl
jecxz
cmp
adc
movsl
test
xor
insb
pop
or
adc
push
add
test
int3
lds
sub
ja
mov
testb
push
lcall
cmp
xor
push
adcl
test
xchg
mov
inc
mov
sahf
sub
lcall
inc
mov
fs
sar
sbb
push
sub
adc
in
xchg
xchg
lods
insl
mov
or
xchg
and
leave
inc
gs
imul
add
or
call
fmuls
push
div
xchg
sbb
dec
je
sub
adc
rorl
xor
sbb
pop
add
cld
inc
outsb
fcmovnbe
pop
inc
or
in
mov
call
daa
or
xchg
fisttpll
ret
push
adc
inc
push
js
nop
cs
cltd
add
insl
cmp
xor
fscale
dec
jmp
dec
pusha
xorb
cmp
divl
mov
adc
mov
and
push
pop
and
sbb
lods
loopne
or
xchg
jmp
jne
push
leave
jle
dec
or
add
mov
lds
cmpsl
insl
mov
or
adc
cmp
mov
icebp
or
ret
out
je
push
sub
inc
das
xchg
nop
fildl
add
and
mov
sbb
sbb
and
push
pop
loope
adc
xlat
loopne
push
mov
push
or
push
test
je
push
sbb
das
push
jo
push
or
shll
pop
lcall
out
push
inc
inc
add
inc
shrl
ljmp
push
xchg
add
sbb
dec
push
dec
movsl
or
push
das
cmpl
icebp
jae
inc
and
test
xor
mov
adc
in
push
xchg
pop
shlb
pop
push
adc
in
lcall
mov
in
iret
xlat
adc
inc
jge
mov
jecxz
sub
inc
sbb
push
jne
aam
mov
and
ret
push
sub
in
dec
sbb
nop
push
xor
int
testl
pop
cmc
dec
lcall
dec
sbb
pop
sub
out
shlb
icebp
xchg
push
inc
or
xchg
aas
or
mov
adc
jl
mov
adc
mov
aas
and
mov
pushf
rorl
inc
jne
dec
aam
js
xchg
cmp
mov
lcall
imul
adc
add
sub
add
lods
or
sbb
add
rolb
pop
arpl
stos
std
decl
or
jns
in
adc
push
cmp
movsb
sbb
lahf
adcb
fidivl
push
loopne
inc
ljmp
dec
sbb
sahf
and
or
dec
faddl
pop
mov
sbb
mov
inc
or
cltd
mov
and
mov
push
daa
mov
jne
and
dec
js
xor
enter
ja
imul
mov
call
testb
or
jne
in
and
nop
rorw
pop
mov
rorl
jb
push
repnz
leave
and
loopne
outsl
cltd
popa
sbb
daa
insl
mov
xchg
dec
dec
mov
cltd
or
pop
sbb
movl
lret
scas
cld
js
or
or
sbb
lea
dec
jmp
sbb
sbb
and
sub
add
hlt
add
repz
pushf
inc
xchg
xor
inc
inc
inc
mov
or
adc
loopne
adc
imul
das
mov
xchg
push
loop
ds
and
pop
dec
jno
xchg
in
dec
jo
int3
cmpsl
call
add
inc
jp
push
or
mov
mov
pop
push
inc
leave
cmpsb
repnz
pop
rcl
add
call
adc
out
push
cmp
movsb
add
push
icebp
add
jge
push
sub
dec
sahf
imulb
pop
movsl
cltd
insl
repz
inc
xor
xor
xchg
loope
aaa
divps
in
mov
xor
dec
xchg
inc
movsb
push
sbb
pop
and
mov
dec
sbb
and
mov
imulb
nop
cmp
sbb
sbb
cmp
mov
out
xchg
dec
or
mov
or
aam
je
jg
add
add
call
mov
mov
adcl
lods
cmp
mov
dec
dec
cmp
cmp
adc
xchg
dec
mov
push
cwtl
jae
and
sub
xchg
popa
cmp
mov
cmpsl
jns
xchg
nop
jp
xchg
mov
add
add
cmp
in
or
enter
sbb
and
movsl
cmp
or
popa
sub
jp
or
les
xor
insb
cmp
sti
and
or
sub
add
movsl
lock
cmp
mov
sbb
insb
enter
jne
xor
adc
cmp
cmp
push
shll
mov
in
jg
cmovnp
mov
or
cmp
pop
cmp
mov
xchg
pop
cmpb
lock
mov
sti
or
jl
sbb
xchg
call
or
das
push
sbb
jmp
or
pop
pushf
std
and
adc
les
mov
dec
adc
and
hlt
sbb
xor
cmp
push
rcrb
add
sbb
dec
xor
pop
add
jb
add
xor
sahf
in
xor
divb
inc
and
xchg
dec
fs
popa
and
div
add
ja
jno
sub
clc
sbb
into
jle
imul
jbe
mov
or
or
or
mov
sbb
mov
cli
es
inc
test
cmp
in
add
adc
sub
fwait
popa
sub
add
pop
adc
das
mov
xlat
push
mov
ljmp
mov
add
dec
add
out
insl
xchg
sub
and
pushf
leave
nop
rol
jns
andl
sub
mov
in
pop
mov
sub
dec
pop
xor
dec
jbe
sbb
cmp
lods
ret
dec
lods
repz
xor
inc
lock
loope
sbb
jecxz
mov
inc
cmp
pop
mov
icebp
inc
sbb
push
or
int3
nop
add
pop
ss
cmp
lock
add
outsb
dec
out
test
test
and
or
les
push
mov
or
inc
sbb
daa
subb
mov
inc
mov
adc
push
mov
je
loopne
push
mov
popf
cmp
push
pop
addr16
dec
xchg
loopne
inc
mov
xor
dec
adc
push
or
sti
push
cli
xor
mov
dec
xchg
movsl
outsb
push
repnz
pop
je
xor
je
cmp
push
add
cmp
mov
dec
loopne
adc
fsubs
test
lods
cld
jae
xchg
xor
push
rorl
andb
sbb
call
leave
dec
add
adc
sbb
movsb
push
mov
dec
outsb
sti
mov
sub
cmc
cmpb
je
imulb
mov
shlb
xchg
movb
mov
popa
adc
dec
jp
sbb
inc
adc
and
jo
test
mov
cld
rolb
out
std
fwait
jl
adc
adc
stos
cltd
pop
jb
in
das
pop
addl
pop
and
xor
andl
xor
sbb
sub
mov
dec
or
pop
fisttpl
je
adc
mov
inc
ss
sbb
lahf
leave
inc
sarb
or
rorb
sbb
fwait
and
data16
and
sub
and
xlat
xchg
and
lea
frndint
inc
outsb
xchg
insb
and
push
push
and
xor
push
adc
sub
jae
das
jge
and
pop
xor
xorl
sarb
pop
xor
jge
nop
int
arpl
xor
mov
inc
jne
dec
cltd
repnz
add
jbe
inc
add
xor
fs
jg
adc
insl
push
std
jg
es
or
push
jg
dec
or
push
sub
lea
stc
mov
jle
push
rorl
cmp
dec
inc
push
addb
cli
xor
add
cmpl
fisttps
call
loopne
test
dec
je
and
call
mov
js
mov
push
sbb
addr16
rorb
pop
cmp
push
push
pop
pop
test
loope
push
sub
xor
push
lret
or
mov
push
adc
lods
ret
fsubl
mov
push
mov
sbb
mov
inc
sbb
lea
cmp
test
adc
sub
jo
jmp
and
es
sbb
adc
fmull
jle
fwait
mov
inc
sbb
dec
je
cltd
fdivl
inc
in
clc
inc
xor
loop
mov
jp
in
aam
mov
mov
movsl
sbb
stos
in
and
fldl
aas
int
push
testb
or
jmp
call
xchg
popf
nop
out
mov
push
sbb
jnp
dec
loopne
loopne
add
rol
xor
sbb
cmp
and
add
and
cmp
add
pop
imul
enter
xchg
mov
mov
sbb
or
pop
xchg
mov
xlat
adc
fadds
imul
push
int3
pop
sbb
sets
or
imul
inc
xlat
sbb
or
add
lretw
loopne
and
dec
and
scas
pop
in
pusha
sub
sbbb
clc
mov
add
mov
cli
call
cmp
add
mov
test
addl
or
test
rolb
out
dec
std
or
mov
dec
add
movsb
loopne
aaa
frstor
dec
je
fmuls
xchg
add
add
leave
arpl
push
cmp
push
add
mov
clc
scas
adc
loop
and
jl
lcall
dec
or
incb
sub
add
clc
jne
xor
mov
add
add
jne
clc
or
push
scas
mov
add
movsb
pop
dec
jmp
mov
aaa
push
push
xlat
push
push
cmc
pusha
pusha
pop
add
push
andl
pop
push
jns
lahf
ja
pop
shlb
call
mov
sub
push
and
or
and
xor
fsubr
mov
or
enter
aad
or
sbb
imul
shr
hlt
push
imul
adc
cmpb
sbb
rcrb
jb
push
shrb
mov
or
xchg
sar
andb
mov
sub
jge
adc
jo
and
xchg
adcl
sbb
and
sub
shll
mov
inc
or
sbb
ret
fadds
loop
cmpl
mov
pop
and
pop
or
mov
add
rcll
cs
call
arpl
xor
imul
push
sub
insb
pusha
and
sub
in
sub
adc
pop
jge
push
xor
ss
xor
cmp
mov
push
jns
or
in
mov
xchg
jle
je
cmp
jbe
shll
push
leave
push
xor
xor
add
aas
imul
cmp
jno
lds
jno
xor
inc
or
inc
xor
mov
add
leave
dec
sbb
leave
mov
cld
out
push
xor
cmp
nop
and
adc
lock
mov
add
xor
adc
stc
add
inc
mov
cmp
sub
lea
add
mov
cmp
int
or
lock
pop
pop
push
and
insl
pop
adc
or
ret
mov
test
mov
js
xchg
or
popa
cltd
shlb
sub
push
add
jo
ja
push
mov
test
pusha
adc
nop
push
inc
nop
pop
in
ret
mov
add
and
sub
add
mov
data16
lock
add
sbb
in
std
aaa
aas
ja
push
aas
add
mov
cmc
and
inc
xor
icebp
inc
nop
inc
aad
xor
add
mov
jne
andl
rolb
mov
xlat
rcrb
add
mov
fnstsw
mov
push
xchg
ror
ret
sahf
orl
aad
jnp
cld
je
push
adc
and
pop
sbb
jmp
mov
and
xchg
sbb
and
cwtl
push
mov
push
push
rol
and
jle
jbe
xlat
rorb
mov
mov
push
jo
ret
and
cmp
inc
push
lret
pusha
and
xor
in
jle
mov
rol
and
and
movsb
mov
inc
bts
push
sub
push
xor
jo
sub
push
lea
mov
push
movsl
mov
rol
pop
arpl
sub
add
sbb
adc
mov
push
add
push
jns
or
xchg
mov
jmp
sbb
inc
add
sbb
sub
xor
out
or
or
rorb
mov
leave
jae
push
inc
lds
stos
mov
or
stos
push
dec
dec
adc
sbb
mov
jge
test
and
or
popa
scas
rorb
dec
add
stos
fstl
cmpsl
gs
lods
xor
fisubs
lods
mov
das
push
cmp
shlb
dec
fmull
inc
adc
add
push
push
pop
jge
mov
mov
sbb
or
sub
mov
jnp
add
cld
mov
pop
inc
mov
imul
push
adc
add
mov
pop
mov
cmp
decl
fadds
push
dec
pop
ret
pop
push
pop
ss
aaa
mov
and
ja
sbb
add
jg
or
push
sbb
lock
mov
xor
sahf
ret
je
pushl
daa
add
das
add
fcoml
xchg
fisttpl
cmp
test
push
hlt
mov
inc
lods
xor
mov
les
add
and
hlt
jns
jo
je
inc
adc
inc
add
lea
mov
adc
or
mov
insb
daa
pusha
push
mov
push
push
adc
inc
or
push
lsl
test
lcall
add
lock
jmp
sbb
xor
or
inc
mov
sbb
cli
mov
dec
xor
mov
outsb
push
clc
rolb
and
xlat
jnp
pop
nop
data16
cld
adc
pop
cld
jmp
data16
sub
pop
js
mov
jg
stos
inc
pop
add
stos
inc
and
fisttpl
jbe
sub
lea
sarl
xor
push
cmp
pop
pusha
jb
cmp
test
and
mov
jne
jne
je
test
sbb
sub
inc
clc
cmp
cli
mov
sbb
loope
pop
inc
jg
sbb
xchg
add
or
inc
xor
mov
xchg
xor
inc
push
inc
imul
push
dec
sti
jl
test
jg
cmp
add
rorb
or
xor
cltd
pop
mov
fwait
js
and
push
dec
cld
fists
xor
mov
shr
not
in
sbb
dec
xor
scas
mov
test
out
adc
or
int3
push
es
xor
push
or
testl
xchg
dec
dec
sbb
cli
imul
loop
in
or
sub
xor
mov
or
dec
pop
push
data16
dec
lods
je
sub
push
add
push
xchg
add
hlt
cmc
pop
or
jg
or
inc
add
adc
shlb
imul
mov
inc
mov
add
dec
mov
jno
js
add
or
or
push
dec
outsl
adc
push
js
mov
xor
push
mov
xchg
andb
pop
aas
xor
inc
popf
mov
in
rol
sub
mov
adc
sub
jnp
inc
push
pop
jns
in
addl
iret
inc
adc
jge
jle
insl
bound
push
ss
clc
or
sub
fwait
rclb
cmp
or
iret
or
sub
dec
in
roll
int
rclb
arpl
dec
inc
arpl
push
cmpb
push
xor
inc
mov
push
out
cmpsb
leave
cli
add
jae
push
cli
daa
loop
mov
mov
xchg
add
jo
in
and
cmp
dec
and
xorb
jle
dec
sub
dec
or
shll
xor
lods
adc
xor
je
pop
cmp
pop
fisttpll
cmp
rcrb
inc
cld
inc
dec
sti
rep
cli
inc
xor
dec
pop
adc
sub
or
sbb
pop
inc
outsl
sub
jae
and
scas
psrad
ret
inc
sbb
fisttpl
andl
sub
jne
push
push
push
mov
inc
push
push
mov
fistps
and
push
mov
scas
xor
loopne
adc
xchg
mov
inc
mov
push
mov
adc
mov
imul
adc
xorl
ret
imulb
xor
mov
adc
cmpsb
jl
mov
cmp
and
ret
jno
xchg
push
lock
inc
repnz
or
mov
inc
scas
push
iret
test
mov
mov
int3
repnz
shlb
and
push
cmp
push
push
jnp
or
arpl
mov
cmpb
in
sub
call
test
xchg
dec
roll
push
insb
add
lock
mov
mov
push
dec
inc
out
dec
push
push
pop
sub
dec
sbb
mov
cmp
jo
out
adc
call
in
popa
or
push
jl
ret
dec
xchg
push
in
mov
and
mov
adc
adc
arpl
adc
cmp
test
js
or
inc
mov
sbb
insl
roll
sbb
and
sarb
dec
jne
xchg
jge
sbb
cmp
bound
adc
push
pop
es
jnp
inc
sbb
aaa
pop
add
adc
iret
nop
push
add
pusha
cmp
dec
ss
adc
push
sbb
adcb
adc
clc
mov
add
scas
sub
add
scas
rolb
clc
adc
ret
arpl
adc
add
and
into
cmp
and
fwait
mov
nop
popl
add
or
inc
out
testb
and
test
fidivrl
jnp
sub
mov
pop
data16
xchg
ret
push
sbb
push
lea
aas
adc
pop
or
cmp
and
sub
idivw
inc
cmp
xorb
test
imul
loopne
aam
mov
mov
cmp
sar
xchg
add
add
inc
or
mov
jmp
lock
dec
mov
mov
lcall
sub
xor
xchg
inc
jecxz
in
add
push
cmp
sbb
in
popf
add
push
or
outsl
ficomps
xor
cmpsl
ret
sub
mov
cmp
pusha
sub
int3
mov
mov
ja
inc
jmp
es
sbbb
jp
shrl
dec
sbb
leave
test
incb
lock
popl
and
rorb
or
add
and
cmp
rcll
or
mov
mov
aam
ja
mov
push
push
lods
or
lcall
pop
lcall
or
lcall
push
mov
sbb
mov
push
sbb
adc
adc
sub
daa
inc
jecxz
test
sahf
dec
jl
sbb
cmp
and
lret
or
push
outsl
push
pop
imul
inc
pop
enter
sbb
inc
xchg
adc
pusha
sbb
and
jmp
push
shrl
mov
loopne
ret
jne
sub
outsb
sar
mov
jp
cmp
addb
fnstcw
jae
jb
jae
cmpl
push
rcrb
dec
hlt
jae
add
rolb
jae
jg
pop
push
cmp
dec
push
stc
adc
icebp
xchg
inc
aam
mov
and
push
mov
aad
inc
icebp
or
test
icebp
mov
inc
sub
jb
nop
dec
mov
adc
inc
cmpsb
int
dec
pop
pop
push
popf
inc
pop
in
mov
sbb
push
push
sub
add
inc
rcrb
sbb
pop
dec
sti
xchg
xor
inc
ljmp
add
cs
adc
fwait
cmp
cmpb
aaa
adcb
sbb
sub
and
jle
insb
adc
and
sbb
daa
or
cmp
in
in
add
mov
dec
rorl
movsb
or
and
mov
and
pop
mov
es
dec
and
adc
es
push
or
pop
insb
cmpsl
lods
mov
xchg
add
fstl
cmp
mov
scas
jae
jmp
mov
nop
fnstcw
adc
loopne
test
movsl
xchg
popf
sub
push
in
cmpsb
aam
stc
or
or
rorl
popf
and
mov
or
sub
inc
xor
jp
cmp
and
jne
mov
sbb
jbe
and
inc
cmp
xor
ss
test
inc
loop
push
xor
xor
dec
adc
push
dec
cwtl
and
or
jmp
jl
inc
aas
sbb
xor
rcrb
aam
lock
cmp
adc
and
inc
mov
sub
push
cmp
jo
inc
push
cmp
pushf
sub
cmp
hlt
cs
popf
lret
les
or
mov
mov
xor
in
or
xor
pop
mov
lret
and
xorb
mov
jne
cmp
pop
mov
mov
sub
sbb
mov
cmp
sbb
or
pusha
adc
xchg
into
pop
add
lret
ja
shll
or
sbb
adc
fsubl
push
sbb
daa
sbb
js
es
mov
je
pop
push
mov
sub
scas
dec
pop
mov
cwtl
adc
mov
adc
mov
shrl
xor
jne
xchg
mov
or
mov
add
in
inc
sbb
mov
addl
insb
jge
ljmp
mov
sub
lock
jnp
test
cmp
fidivl
jns
cmpsl
jns
out
in
loop
jle
cmpsl
fimuls
enter
out
sahf
es
in
jo
or
mov
push
push
dec
or
shll
xor
js
insl
pop
dec
jne
orl
mov
mov
mov
ja
into
test
inc
add
sub
andl
imull
inc
sub
xchg
cmp
nop
lcall
push
mov
pop
add
add
fs
or
jmp
jns
mov
mov
lock
push
pop
inc
dec
sti
js
mov
outsl
jne
test
jne
pop
xor
mov
loopne
and
mov
xchg
js
or
inc
push
icebp
lock
popl
cmp
cmp
clc
outsb
mov
test
sub
jge
data16
push
or
call
fnstenv
push
insl
xor
or
cmpsl
or
add
and
adc
push
orl
mov
push
jne
push
cmp
rorb
sbb
cmp
sbb
test
cmp
cltd
out
xor
insb
dec
sub
pop
jb
scas
cmp
dec
xchg
adc
push
lock
mov
adc
xchg
sbb
sbb
pop
sub
cmc
adc
and
pop
pop
push
dec
mov
js
or
insb
pop
inc
adc
sub
fwait
add
or
scas
inc
sbb
rorb
add
sti
bound
je
clc
adc
ljmp
adc
int
jo
ret
dec
xchg
cld
xchg
orb
add
or
push
inc
or
lock
sbb
inc
jl
test
mov
adc
cmpsb
addl
push
or
push
push
lcall
add
push
pop
mov
pop
sarb
xor
stos
popf
add
in
push
shlb
out
call
jns
repz
cmp
fsts
lcall
je
call
push
mov
call
pop
jbe
arpl
cmp
xor
and
sbb
in
adcb
movsl
dec
lret
fldl
pop
ret
xchg
jnp
dec
push
dec
mov
aam
pop
inc
dec
add
mov
mov
mov
fdivr
aam
add
lods
adc
fcomps
lahf
je
or
and
ja
jp
push
mov
push
sub
adc
mov
jmp
inc
sub
xchg
push
fcompl
or
and
std
or
pop
clc
jl
mov
and
or
aas
pop
and
jbe
jmp
outsb
push
js
lahf
stc
outsl
addb
adc
add
inc
add
dec
popa
add
and
jae
and
pop
test
scas
jne
add
out
or
jo
sub
cmp
popf
and
loopne
and
or
ret
sub
mov
add
fisttpl
lock
xchg
insb
jecxz
inc
popf
sbb
pusha
inc
pcmpgtd
rorb
push
xchg
inc
pop
xchg
fcoml
jnp
and
adc
stc
add
mov
pop
push
push
cld
fcoms
jmp
or
je
inc
dec
stos
mov
dec
loopne
ss
inc
or
dec
push
and
adc
icebp
divl
sbb
push
push
add
inc
pusha
aas
push
inc
adc
push
movsl
push
sbb
insl
push
dec
call
cmp
mov
fs
inc
mov
sub
xchg
clc
push
xor
subl
add
jbe
xchg
loopne
mov
mov
xor
stos
aam
imul
add
lcall
and
push
mov
sahf
push
test
xchg
pop
pop
pushl
jo
mov
xor
fs
or
push
jmp
mov
push
loopne
sbb
add
push
pop
dec
addl
shll
inc
push
shll
xor
mov
fs
dec
dec
ret
jmp
jmp
xor
cmp
in
dec
movsl
aam
test
lcall
shlb
mov
xchg
test
push
push
lea
push
mov
inc
ret
sbb
lea
jl
test
movsb
mov
push
xchg
imul
sti
fxch
sub
and
mov
ljmp
adc
cmc
cmpsb
out
mov
aam
es
test
and
and
or
pusha
sub
or
sbb
enter
mov
arpl
out
mov
test
loope
add
dec
dec
sbb
pop
outsb
inc
jno
test
test
addr16
push
pop
mov
xor
js
and
rorl
out
mov
loopne
cmp
jbe
ljmp
push
mov
or
push
pop
add
inc
mov
xor
arpl
rorl
adc
mov
xchg
jo
outsl
pusha
xor
jp
das
and
movsb
adc
mov
push
cmpsl
add
xchg
jmp
add
dec
sub
jp
inc
cmp
rolb
das
or
sbb
push
jnp
or
lahf
pop
xor
scas
adc
lds
fbld
les
int3
popf
push
push
or
test
or
xchg
rorb
push
sbb
adc
dec
movsb
out
rol
sbb
inc
mov
sbb
mov
test
es
sbb
out
scas
loopne
dec
lods
jae
adc
fs
inc
cmpsl
aam
pusha
test
les
repz
pop
test
adc
jnp
xchg
mov
mov
push
sub
test
je
push
sarb
movsb
adc
xchg
pop
mov
aam
data16
cmpsb
add
xchg
scas
fwait
add
xchg
adc
cmpl
ljmp
xchg
or
mov
push
add
loopne
mov
push
cltd
inc
add
dec
mov
fwait
mov
mov
dec
leave
in
sbb
mov
add
je
ss
push
clc
stos
push
add
push
cli
adc
rcrl
arpl
pop
call
mov
or
and
inc
push
jbe
push
mov
xor
sahf
fistl
jne
pop
imul
xchg
iret
add
es
and
sub
adc
fcoms
in
cmp
and
xor
lods
cmp
adc
incb
pop
xor
xchg
lcall
ret
sbb
lea
push
sub
mov
mov
jp
data16
pushf
stos
sub
testb
push
push
fdivs
dec
pop
cmp
jo
dec
int3
mov
jo
rcrb
in
jo
mov
ljmp
push
aaa
pop
rol
in
xchg
movsb
fcompl
pop
lock
ds
sbb
push
adc
pop
adc
pop
sarb
cmp
iret
popa
addr16
fcoms
xor
inc
pop
fldl
hlt
inc
or
dec
push
sahf
push
or
lods
ret
xchg
or
add
shlb
sbb
shr
or
cmp
pop
add
add
cltd
add
inc
pop
adc
fiadds
or
pop
sbb
mov
sub
lcall
sub
mov
je
sub
cmp
cs
sub
inc
push
mov
test
jno
pop
xchg
cwtl
pushf
test
mov
pushf
mulb
mov
jne
push
sub
push
stos
mov
pushl
dec
inc
or
pushf
and
pop
adc
pop
mov
xor
sbbb
dec
mov
rcrb
outsb
sbb
mov
les
or
lods
jmp
sbb
add
cmp
adc
in
scas
icebp
fidivl
and
or
aaa
in
jno
add
loope
pop
in
mov
xchg
je
aaa
mov
mov
jne
mov
add
mov
push
mov
popf
jg
dec
mov
mov
mov
lea
ljmp
scas
outsl
push
pop
jnp
and
mov
xchg
mov
dec
movsl
jmp
push
not
andl
mov
push
mov
add
and
mov
insl
in
xchg
mov
lods
fucomip
sbb
incl
out
out
adc
shl
lahf
sbb
mov
xlat
and
add
push
mov
cltd
aaa
cmc
pop
lock
in
cmp
inc
test
jnp
sub
or
add
inc
addr16
or
testl
dec
push
mov
jne
stos
lds
mov
loop
add
mov
push
push
push
jns
in
mov
push
push
repz
and
test
hlt
mov
je
roll
add
jo
push
movsl
sbb
inc
testb
mov
les
pop
mov
sub
inc
and
and
icebp
cmp
ret
push
sbb
xlat
push
add
fwait
jo
stos
add
mov
add
imul
sti
dec
pop
test
incb
cmpsl
cmp
fldcw
mov
ljmp
cmc
inc
xchg
in
daa
mov
aam
shlb
mov
mov
and
fnsave
jge
xchg
pop
rolb
push
shlb
into
and
hlt
lea
inc
or
decl
sbb
nop
dec
test
in
lret
pop
pop
inc
inc
inc
inc
push
jl
andl
push
test
sbb
imul
add
mov
lock
mov
mov
idivb
dec
sub
pop
add
repz
loop
rolb
or
xchg
push
add
out
and
push
mov
pop
rcrw
mov
mov
push
and
mov
or
pop
sbb
pushf
sti
mulb
inc
dec
add
into
xor
mov
sub
ret
jle
push
pop
faddl
bound
pop
hlt
add
cmpsl
hlt
lock
imul
xor
insb
imul
hlt
cmpb
clc
dec
lods
aam
mov
jg
mov
stc
or
cmpl
nop
dec
jl
mov
jo
js
cld
sbb
shl
sub
push
or
sti
lea
add
pushf
lcall
fadd
dec
dec
adc
pop
mov
add
inc
sbb
xchg
mov
jb
adc
ret
imul
sub
mov
or
pop
pop
sub
movsb
dec
push
xchg
call
das
and
lea
jae
out
push
lds
rolb
cltd
lret
sbb
push
in
int3
dec
inc
rolb
adc
outsb
dec
cmp
js
dec
push
repnz
fsubrs
push
xor
add
mov
push
call
xor
loopne
imul
push
pop
jne
rorl
fsub
fs
ja
icebp
jne
dec
lods
adc
jns
push
fwait
stos
loopne
adc
push
add
pop
shlb
out
cmp
cltd
pusha
add
push
rolb
push
mov
pop
pop
sbb
and
cmpsl
mov
lcall
sarb
push
mov
scas
popf
mov
mov
dec
mov
or
inc
or
add
loopne
sarb
sbb
mov
xorl
cmp
das
push
int
add
adc
lock
mov
adc
outsl
mov
jne
movsb
sbb
std
xor
push
inc
in
fists
cmp
cmp
cli
sarb
decb
cmpsl
add
inc
mov
aaa
add
imul
inc
bnd
cmp
cmp
or
roll
sub
bound
js
insl
xchg
push
push
add
lahf
cmp
clc
xchg
movsb
push
add
hlt
mov
sub
les
push
pop
inc
ja
cmpsl
imul
int
std
xor
jp
je
insb
ljmp
je
data16
sub
ljmp
jo
stos
inc
je
lcall
outsb
adc
insl
add
jbe
or
imull
add
push
jge
push
jle
pushf
repnz
in
push
filds
dec
cmp
lock
dec
inc
jo
lock
fstl
lods
sbb
inc
inc
loop
inc
xor
or
or
jge
cmpsb
dec
cmp
leave
popf
cmpsl
mov
mov
shlb
pop
orl
or
xor
fidivrs
and
fs
inc
jmp
inc
jo
add
inc
sahf
cli
addr16
and
add
or
jne
cld
lock
addl
add
and
movsl
push
or
inc
fsubr
or
push
sbb
mov
adc
xchg
icebp
ds
lret
jmp
pop
cmpsb
sbb
or
roll
push
inc
mov
adc
cmp
mov
sbb
aam
cmpsl
mov
cmp
into
sub
rolb
test
xchg
rclb
add
add
cli
sarb
pop
adc
push
mov
scas
add
xlat
xor
dec
pusha
out
fwait
pushf
mov
jge
add
fdivl
lret
dec
gs
xchg
les
aam
push
add
fldcw
or
cmpsl
mov
mov
push
or
adc
movsb
adc
push
imul
or
sub
fstps
shl
out
jns
ror
lcall
add
mov
add
and
and
fidivrs
inc
ret
mov
repz
mov
jnp
andl
in
test
push
and
or
popa
shl
cmp
xchg
movsl
shrl
push
sahf
mov
dec
ss
rorb
data16
push
divl
jo
dec
loopne
mov
arpl
add
into
es
movsb
and
dec
je
das
lea
lahf
or
arpl
sub
in
ret
push
pusha
nop
cltd
xchg
pop
mov
pop
in
push
lea
test
adc
sar
movl
in
inc
inc
lcall
and
pop
outsl
sub
fwait
lds
jmp
ljmp
adc
fwait
mov
insl
leave
jo
push
pusha
and
adc
lods
test
sub
loopne
jp
scas
xor
mov
cmp
adc
hlt
int
push
and
sbb
sub
cmp
movsb
xchg
add
fwait
mov
adcb
rcrb
enter
add
mov
cmp
ds
mov
test
dec
pusha
movsb
loopne
ja
and
mov
mov
or
sbbb
hlt
push
into
dec
cmc
dec
test
inc
arpl
pop
xor
imul
or
call
inc
ss
fcompl
jmp
incl
adc
je
cltd
sti
gs
test
gs
pop
cmp
or
sbb
fwait
cwtl
shrb
xchg
inc
fsubs
jge
repz
bound
lret
jae,pn
mov
add
cmp
mov
mov
inc
sbb
adc
push
pusha
push
push
push
jp
jo
sub
es
push
xlat
push
frstor
mov
test
sub
pop
or
imul
cmpsb
mov
loopne
cs
cmp
pop
and
cmp
cmp
sbb
or
add
mov
es
addb
mov
mov
lea
sarb
mov
xor
loop
and
sbb
add
shr
add
fcom
push
pop
cmp
adc
mov
pop
sub
mov
in
test
outsb
dec
jmp
jg
cmp
call
add
aaa
jmp
add
outsb
dec
loopne
and
ret
and
add
jns
dec
loopne
inc
inc
enter
sub
jl
sbb
pop
ret
adc
or
movsb
pop
or
mov
mov
lahf
sbb
scas
adc
mov
lcall
fldt
mov
mov
mov
nop
inc
adc
xchg
test
and
fsubp
lds
gs
inc
imul
rcrb
sub
cmpsl
add
push
insl
aad
dec
sbb
sub
scas
mov
add
dec
jl
mov
sbb
adc
mov
add
cmp
adc
in
sub
ret
enter
jo
sub
push
jge
insb
xchg
pop
jo
mov
pop
mov
xchg
jb
xor
mov
xor
add
xor
loope
sarb
cmp
or
and
dec
mov
jge
mov
xor
xchg
adc
adc
cmp
into
add
das
sbb
popf
sbb
mov
xlat
add
xchg
stos
inc
outsl
push
inc
ds
hlt
dec
int
add
mov
pop
sbb
mov
cmpsl
and
cld
mov
clc
xchg
inc
sub
add
sahf
jp
in
mov
cmp
push
add
push
aam
stc
rorb
dec
mov
adc
dec
push
scas
sub
in
jle
xor
push
pop
js
sbb
cmp
and
pop
aaa
xor
mov
or
pusha
xor
or
add
pop
sbb
lods
sbb
mov
xchg
iret
dec
loopne
in
push
add
or
push
into
fnsave
push
orl
imul
insl
add
adc
jne
push
leave
add
adc
inc
stos
or
inc
repnz
sarb
pushf
int3
aam
pop
imul
fs
jecxz
es
sub
mov
dec
int3
incb
xor
mov
dec
enter
push
or
push
pop
mov
popa
sbb
in
jge
add
adc
loopne
adc
fwait
pop
inc
ret
jo
dec
aam
inc
cmpsl
ret
jb
adc
pop
xor
adc
mov
push
repz
outsl
int
push
pop
fcoms
lcall
or
add
std
sub
in
inc
nop
push
push
in
ds
mov
and
insb
pop
push
nop
outsl
fnsave
mov
push
test
xorb
dec
xchg
adc
sub
dec
xlat
inc
fsubrs
gs
ret
in
mov
pop
jmp
aaa
js
sbb
pop
and
hlt
movsb
roll
add
cltd
lods
adc
push
ja
cmp
daa
push
adc
or
mov
ret
jecxz
sub
or
andl
push
push
xor
sbb
test
xchg
loope
push
push
pop
int
out
imul
incl
pop
or
loop
cld
lock
mov
es
popf
add
cmpsb
lods
mov
mov
mov
in
mov
outsb
sbb
orb
add
cld
push
jae
sub
mov
aaa
push
aam
xchg
data16
or
ret
test
jp
pop
sbb
lods
daa
mov
mov
and
push
sub
mov
ljmp
push
adc
addl
arpl
mov
idivb
ss
mov
ds
pop
sub
cmp
jbe
ret
pop
lods
add
sti
dec
push
add
add
sbb
xor
sub
popa
dec
push
jne
inc
or
pop
js
sub
fists
scas
ret
lret
push
add
add
rcrl
dec
add
add
inc
jle
jae
cli
cmpsb
mov
mov
testl
or
lock
lret
lock
dec
mov
adc
test
cld
add
das
cmpsl
push
mov
test
add
push
mov
add
mov
or
insl
add
add
push
cmp
insl
popf
insl
pop
or
outsb
add
adc
repnz
dec
mov
or
mov
mov
dec
adc
cmc
fwait
inc
xchg
js,pt
mov
jo
stc
push
adc
mov
flds
xor
insl
xchg
jb
test
arpl
call
add
adcb
or
or
sarb
js
and
pop
rorl
es
jno
scas
or
mov
push
cmp
xor
fiadds
add
cmp
sbb
or
mov
scas
sti
mov
clc
push
cmpb
jp
inc
es
xor
pop
loope
pop
cmp
push
bound
ret
and
xor
mov
adc
mov
loop
pop
or
pop
lea
xchg
cmp
xchg
inc
add
add
xchg
shlb
inc
out
add
loopne
fmull
mov
add
or
mov
sbb
jne
les
arpl
mov
mov
pop
loopne
push
mov
push
pop
shl
mov
mov
or
inc
or
mov
sahf
xchg
pop
mov
movsl
mov
dec
push
inc
pop
mov
sbbb
push
cmp
push
fists
call
dec
or
addr16
sub
inc
push
jl
push
xchg
mov
mov
or
adc
bound
push
aaa
loopne
mov
das
pop
mov
jns
jno
jle
push
sti
mov
dec
pop
inc
aaa
ret
leave
mov
push
jne
push
cmp
clc
mov
dec
jbe
push
mov
xchg
and
jbe
imulb
cmp
shrb
lods
ret
mov
pop
pusha
leave
lret
add
push
mov
and
cmp
aaa
xor
loopne
ds
push
repnz
cs
mov
xchg
cmpsb
push
les
mov
push
xchg
nop
mov
arpl
push
loopne
and
push
and
mov
jae
call
cmp
pop
and
push
aaa
dec
in
dec
pop
adcb
jbe
xor
mov
inc
addb
arpl
rolb
add
mov
or
inc
or
cwtl
cmp
addb
or
lcall
out
imull
test
pop
mov
or
mov
lret
pop
inc
test
and
sbbl
int3
fwait
test
mov
xor
icebp
scas
jl
mov
insb
xchg
nop
fs
push
dec
nop
mov
mov
or
movsb
lods
mov
mov
add
rcrb
jne
pop
pop
int3
dec
shlb
data16
push
scas
cmp
cmp
mov
jne
test
insl
sbb
outsl
sbb
jns
dec
insb
jne
addb
mulb
sub
mov
inc
sti
jge
add
lea
push
ficoml
pop
sbb
addb
aas
adc
mov
mov
shrb
xor
shlb
mov
mov
xchg
xchg
or
in
adcl
jo
enter
add
add
dec
js
sub
xor
fistps
mov
and
jmp
add
push
sbb
add
sbb
test
andl
cmpsl
loope
jle
fcomps
adc
pop
mov
ret
add
inc
mov
and
jge
je
sbb
jg
and
and
push
mov
addb
in
mov
les
or
mov
jmp
outsb
ss
or
add
sub
andl
orb
lea
jo
jmp
xor
adc
xor
add
dec
xchg
imul
push
xor
push
mov
mov
aaa
cmp
dec
adc
gs
adc
cwtl
aam
inc
mov
mov
fwait
lcall
ja
jo
xchg
xor
out
mov
out
lea
ret
sub
int3
push
push
cmpsl
push
sbb
xorb
and
in
add
aaa
xor
or
lret
sbb
sbb
push
mov
imul
je
rsqrtps
out
sub
and
jl
imul
mov
mov
decb
sbbl
xor
mov
gs
in
rorl
cmpsl
in
mov
push
jmp
inc
inc
xor
xor
loopne
test
sbb
jb
jmp
cwtl
rcl
push
inc
in
fistpl
out
xchg
push
mov
das
subl
fidivrl
push
pop
sub
lahf
in
test
cmp
push
pop
sub
movsl
dec
pushf
xchg
cwtl
or
inc
sbb
mov
adc
dec
mov
push
jl
std
mov
add
mov
gs
cs
aad
insl
lock
sbb
and
jo
push
dec
lret
cmp
loopne
dec
iret
xchg
push
dec
jb
icebp
push
or
movsl
jo
push
inc
cs
lods
ret
push
scas
call
pop
in
in
and
lock
xchg
jmp
pop
cmp
inc
jg
push
push
fwait
cmpsl
or
or
shrl
je
cltd
pop
leave
flds
cmp
pusha
or
mov
sti
in
or
daa
iret
repz
dec
stos
stos
push
and
push
movb
xor
or
xor
imul
mov
or
jecxz
pusha
ss
ds
pop
mov
les
roll
sbb
add
mov
or
arpl
cli
rclb
scas
std
packsswb
or
jno
pop
adc
pop
xchg
mov
test
push
push
cmp
cmp
inc
add
repz
lods
xor
sahf
sbb
xchg
sbb
add
lods
add
mov
or
jno
jmp
add
aaa
test
mov
jne
and
jl
adc
sbb
icebp
lock
jg
faddl
sub
cld
add
push
push
movsl
lods
jg
add
faddl
fstl
aaa
add
xor
loopne
pop
or
jp
fstp
fsubr
pop
faddp
adc
pop
fildl
arpl
lock
pop
ret
sbb
mov
imul
and
xlat
mov
fistl
lods
aam
mov
cmp
xchg
xor
scas
pusha
jo
cmp
mov
xor
test
pusha
jge
adc
and
jle
sub
aam
imul
inc
add
mov
or
fstpt
lea
push
or
sbbl
mov
into
push
frstor
mov
jecxz
lret
adc
stc
mov
rorb
aaa
cmp
call
jmp
or
dec
mov
int3
dec
sbb
xchg
jae
push
sub
sub
mov
jne
pop
in
ja
mov
mov
push
mov
push
jl
test
jns
call
mov
clc
cmp
jge
and
aaa
inc
push
add
dec
xchg
inc
sbb
push
xchg
mov
push
loope
cmpsb
mov
bound
jmp
rorb
adc
cwtl
aad
sbb
jns
aad
aaa
cwtl
loope
test
filds
pop
add
cmp
xor
xor
movsb
inc
pop
lock
or
mov
or
imul
inc
add
xchg
aas
or
dec
jns
mov
mov
push
cmp
fsts
or
movsl
pop
test
mov
mov
inc
shlb
inc
lods
mov
mov
mov
bound
push
rorb
jmp
lret
test
js
push
inc
dec
sub
push
ja
mov
insl
ret
add
aas
push
dec
mov
or
ret
leave
jp
imul
repz
pop
jp
pusha
or
dec
or
jne
pop
arpl
add
cmc
lock
pop
sub
loope
bound
clc
mov
push
fcmovnb
movl
in
call
mov
in
or
mov
scas
or
add
sbb
mov
jle
or
dec
scas
adc
push
pop
in
pop
mov
sub
add
test
aaa
jecxz
or
nop
xor
dec
adc
xchg
adc
lret
imul
and
pop
stos
xor
and
xor
fcoms
inc
xor
mov
rorb
int
loop
or
bound
mov
cmpb
xor
xchg
jnp
adc
and
mov
daa
gs
sub
fildl
dec
dec
or
or
adc
bound
pusha
mov
xor
adcb
ret
mov
mov
lock
or
orb
adc
or
pushf
and
arpl
add
jmp
add
push
push
add
inc
jecxz
lods
push
push
sub
loop
pop
xor
mov
scas
push
lret
pusha
mov
lret
pushf
popa
mov
inc
rclb
push
pop
adc
clc
or
hlt
and
pop
repz
pop
and
lock
clc
mov
repz
push
sub
add
or
stos
cmp
cmc
jns
icebp
fwait
sbb
test
stos
mov
push
data16
mov
mov
mov
out
enter
lret
mov
in
out
mov
adcl
ficoml
jl
in
cmp
sbb
xor
bound
mov
jl
jnp
adc
jno
mov
lret
pop
call
pop
push
cltd
fmul
mov
xchg
mov
lret
sub
in
pop
push
mov
push
and
push
mov
push
sub
add
lods
jmp
addr16
ret
mov
add
jns
pop
or
add
xchg
jns
fs
clc
xor
mov
inc
pop
int3
and
add
push
or
push
jecxz
outsl
add
pop
jo
sub
scas
leave
jmp
imul
dec
xchg
adc
rorb
lods
xor
mov
sbb
inc
dec
mov
xor
sub
mov
scas
aad
das
jns
cmp
cmp
sbb
adc
hlt
dec
pop
dec
push
mov
lods
int3
test
mov
dec
fstl
xor
addr16
jle
cmpsb
dec
cmp
sub
pop
xchg
in
aam
lock
dec
stos
xor
or
cli
loope
popf
mov
pop
lods
jl
les
ret
sbb
jp
or
call
mov
pusha
insl
fsubs
std
movb
and
ss
xor
pop
adc
add
adc
cmpsb
inc
add
test
subb
mov
pop
adc
pop
push
jg
jge
mov
or
pop
in
sbb
pop
or
jmp
xor
xchg
mov
mov
push
push
add
sbb
push
xlat
mov
adc
or
cld
dec
test
test
push
jbe
jl
xchg
and
ret
adc
sub
xchg
inc
je
adc
rorb
mov
cmp
test
or
ljmp
push
aaa
call
imull
test
xor
xor
sahf
dec
mov
mov
xor
ds
jl
cmp
mov
push
das
insb
or
mov
or
in
popa
or
movsl
aas
mov
imul
push
in
lock
sbb
push
cmp
xor
jne
lock
lock
push
xor
clc
xchg
adc
jmp
out
ret
cmp
dec
adc
pop
and
pushf
inc
dec
lea
and
cmp
add
inc
test
push
mov
add
leave
lock
stc
mov
repz
call
push
mov
data16
xchg
lock
pop
into
jno
and
and
sub
dec
in
xchg
add
fdiv
aam
popf
xchg
mov
add
les
adc
push
loope
or
out
sbb
aad
mov
or
cs
push
sbb
jbe
sbb
cmpb
sbb
cmp
sub
cmp
jne
lcall
addl
ret
sar
and
daa
js
enter
mov
pop
popa
add
mov
repnz
xchg
or
add
dec
inc
mov
cmp
push
pop
push
sub
call
xchg
adc
insb
insb
jb
daa
jl
clc
jl
xor
push
sbb
dec
sahf
dec
lcall
movsl
jns
loopne
rolb
ret
leave
loopne
dec
ds
inc
push
fwait
nop
out
nop
sbb
add
and
in
mov
push
sbb
adcl
cmp
std
lcall
aam
lock
jl
inc
mov
or
mov
ljmp
jp
aad
stc
inc
pop
push
and
xor
cli
fisttpl
push
stos
push
cmp
cmc
dec
inc
mov
test
cmp
cli
dec
ficomps
out
push
adc
xchg
sub
testb
push
in
mov
pop
cltd
jg
push
jmp
daa
inc
leave
lahf
jp
push
jo
xchg
movsl
jo
fmuls
ret
sub
add
push
hlt
jge
shrb
or
imul
pop
lods
or
dec
pop
call
stc
pop
or
ret
push
or
fsubr
sbb
xlat
adc
or
hlt
sub
add
xor
mov
faddl
adc
dec
repz
loopne
jo
int
or
push
popa
scas
movsl
in
cmp
ret
mov
inc
add
out
adc
push
pop
repz
jmp
inc
xchg
xchg
xor
insb
or
rcrb
in
scas
jecxz
add
out
call
dec
add
ret
fcom
lret
in
leave
push
int3
sub
jg
sbb
xchg
mov
cmpsl
push
clc
imul
dec
bound
lret
inc
jmp
push
mov
pop
testb
es
push
cmpsl
cmp
sub
lahf
or
cli
pop
nop
lock
mov
inc
sub
or
push
cmp
mov
ss
cmp
dec
push
int
cs
inc
fdivs
ret
hlt
and
push
dec
adc
into
rolb
add
mov
cltd
les
fld
adc
or
ret
rorb
sub
xchg
pop
push
test
imul
lea
xchg
mov
and
dec
sub
dec
outsb
fistpll
insl
or
dec
sbb
sbbb
mov
cmp
or
data16
mov
inc
cmp
sbb
imul
imulb
dec
popf
into
lret
mov
arpl
mov
cmc
xchg
and
inc
sbb
fnstenv
mov
loop
data16
cmp
out
out
add
and
cmp
rol
cs
enter
push
add
push
inc
jl
lahf
dec
lahf
lret
sub
push
xor
add
adc
cmp
add
push
nop
ret
ret
push
shlb
sahf
inc
inc
dec
push
xchg
inc
mov
adc
pop
pop
push
and
ds
sbb
jbe
clc
insb
sbb
inc
andl
dec
xchg
dec
xchg
nop
test
addb
pop
lea
ret
push
fimuls
mov
clc
lods
popa
loopne
in
or
addl
mov
and
js
inc
mov
int
jo
loope
pop
int3
cmp
lods
xorb
mov
pop
pop
add
rclb
or
aas
orb
add
out
adc
pop
and
adc
fisubs
mov
cmc
cmp
pop
aaa
adc
push
adc
arpl
push
enter
xor
in
cli
std
pop
cmpl
pop
dec
sub
cmp
jl
xor
push
sbb
jmp
sahf
adc
enter
or
enter
sub
and
mov
or
mov
add
iret
and
movsb
and
sbb
jecxz
adc
fisttpl
adc
inc
add
je
mov
sbb
xlat
pop
jno
push
ret
mov
or
inc
or
test
imul
and
or
lock
or
mov
icebp
inc
dec
aaa
sar
add
add
cmp
pop
pop
pop
adc
ljmp
adcb
fwait
enter
sbb
dec
cmp
add
in
push
push
inc
mov
insl
nop
dec
jge
xlat
mov
add
fisttps
mov
inc
mov
mov
cmc
pusha
pop
inc
pop
pop
movsl
ret
pop
pushf
xor
aaa
push
adc
push
mov
sbb
push
roll
push
pop
mov
sbb
mov
pusha
lea
mov
pop
pop
cmp
mov
cltd
cmp
inc
sub
in
je
orl
les
cmp
jl
xor
or
into
mov
in
fdivrs
add
add
pop
pop
sub
neg
xor
cmpb
es
into
jl
shrl
pop
enterw
xor
or
rorl
std
dec
mov
push
insb
pop
ficomps
sub
mov
cmp
ds
inc
inc
pop
jbe
fidivrs
jl
jmp
or
xor
ds
dec
fwait
push
loopne
mov
into
outsb
out
dec
inc
and
pop
jne
jns
pop
mov
clc
sti
push
jmp
push
add
add
sbb
fcomp
mov
dec
int
stos
xor
push
pop
mov
outsl
lock
jne
jns
push
mov
push
fwait
rcl
dec
push
jge
lret
push
sbb
pop
xor
push
lea
xchg
flds
shl
cs
dec
add
sub
stos
xchg
sahf
cwtl
xchg
js
aaa
popa
push
mov
mov
fadd
sbb
pop
subb
xor
or
stc
test
lods
fcmovb
pop
orl
adc
sar
pusha
fistpll
add
ss
dec
push
add
push
push
add
dec
rcrb
sub
sbb
push
mov
cmp
call
stos
or
push
clc
mov
and
and
fcmovbe
pop
and
mov
dec
shll
cmpsl
cmp
addb
sub
shrb
addr16
imul
das
add
mov
jle
loopne
add
or
shll
xchg
mov
ficoml
lock
aam
popf
stc
xor
xchg
mov
aam
mov
pop
pop
jg
cmp
mov
rcrb
mov
push
scas
xor
sub
cmp
pusha
test
out
popa
out
subl
insb
dec
in
jge
dec
inc
adc
push
in
test
sub
mov
xchg
adc
or
push
xor
push
cmp
aam
gs
callw
jne
xchg
test
sbb
add
mov
pusha
divl
movsl
push
inc
mov
mov
pop
push
or
cmpsl
sub
mov
push
push
roll
inc
or
aaa
add
andl
fiadds
imul
xor
rcrl
mov
ret
add
in
aam
loope
push
add
sub
ss
adc
inc
cmp
jne
push
jmp
cmp
ljmp
jmp
test
inc
add
adc
pop
sub
rcrb
fisttpll
in
cmp
cld
mov
inc
push
mov
xor
aam
or
mov
mov
push
rcrb
pusha
xchg
stos
mov
adc
lods
mov
cmpsb
ds
mov
out
jl
out
xchg
mov
pop
pop
mov
popf
call
bound
inc
outsl
call
add
sbb
or
jno
pushf
pusha
orb
or
dec
cmp
shlb
fidivrl
test
movsl
mov
adc
mov
je
mov
push
and
jnp
jne
mov
shlb
jne
and
mov
push
sub
mov
push
pop
lea
out
pop
push
mov
adc
jp
scas
jnp
push
popa
test
push
cmpsb
jo
mov
mov
sub
fs
xor
mov
push
and
mov
inc
insl
add
movsl
and
shlb
pop
xchg
aad
ljmp
ss
jne
aad
fsubs
and
add
std
subl
stos
nop
hlt
jo
and
pop
rcrb
mov
bound
psubsw
ss
or
les
add
sub
fldl2e
dec
push
dec
mov
insl
lods
ja
inc
adc
insl
imul
adc
push
dec
dec
in
xchg
clc
push
adc
iret
sbb
add
add
push
jnp
rcrl
and
ret
stos
vmovlpd
adc
and
pop
push
mov
mov
add
dec
cmp
xchg
and
rcll
fisubl
jmp
add
push
xchg
push
ja
add
push
or
and
pop
ret
test
add
popf
xchg
lock
outsb
jl
mov
adc
or
inc
test
jbe
xor
mov
popa
sub
lea
in
or
lock
test
mov
lret
inc
dec
jae
inc
scas
add
popa
jle
call
add
lock
and
popa
adc
popa
insl
sub
sub
sbb
rcrb
testl
jns
push
dec
adc
adc
pop
sub
xor
or
jg
push
mov
setge
outsb
loope
addr16
mov
cmpsl
and
push
ja
pop
add
jl
daa
dec
and
movl
inc
popa
ret
inc
lret
cmpl
lahf
sub
pusha
repz
add
and
xchg
xor
in
adc
icebp
adc
xchg
nop
sub
xor
fucomip
push
lods
jmp
inc
lahf
mov
movsb
adc
add
jg
adc
dec
hlt
jl
push
push
push
push
pusha
sub
arpl
push
push
or
jle
lcall
daa
jo
pop
cmp
hlt
stos
cli
lea
ret
iret
js
adcb
and
and
mov
ret
in
add
mov
mov
rol
and
in
in
hlt
cmp
push
push
sub
jo
mov
mov
cmp
orl
fs
or
das
add
call
xchg
aam
jae
test
mov
inc
aad
sbb
inc
xchg
jne
mov
mov
xchg
imul
or
repz
push
int3
pop
jl
push
pop
orb
xchg
cwtl
mov
insl
dec
xchg
sbb
imul
lret
call
popa
xor
mov
cmp
dec
mov
cmc
inc
or
test
jg
and
sbb
shll
iret
clc
xlat
out
movsb
xor
repz
xor
push
and
mov
int3
filds
jne
movsl
orb
fadd
std
mov
mov
mov
xor
cmpsl
mov
add
scas
roll
enter
loopne
inc
lahf
cmc
bnd
xchg
cmp
cmp
jl
insb
in
lea
jmp
push
enter
icebp
lahf
fistl
out
imull
push
les
cmp
add
imul
add
mov
cltd
in
sahf
sub
sarb
xchg
pop
dec
push
adc
dec
fsubs
pop
xchg
pop
mov
test
arpl
lds
push
cmp
andb
or
sti
add
mov
aas
pusha
loopne
jae
push
push
xor
or
add
add
jb
adc
mov
call
pop
enter
or
or
mov
or
mov
push
scas
xor
dec
or
loopne
or
js,pt
and
push
pop
push
push
lods
dec
push
cli
ss
adc
into
orl
in
xchg
inc
arpl
xor
rorb
roll
or
inc
mov
or
push
jo
pop
push
mov
mov
cmc
sub
push
mov
jae
add
mov
fadds
dec
shl
fucom
dec
add
xor
ds
or
and
imul
adc
adc
popf
sub
xchg
rorl
sub
inc
or
inc
xchg
adc
sbbb
movb
adc
and
push
orl
mov
addb
inc
sbb
sarl
and
mov
popl
sub
add
out
mov
or
sbb
mov
jge
bound
mov
sbb
scas
adc
push
cmp
adc
in
jo
and
iret
dec
std
insb
sbb
leave
in
push
mov
or
sub
dec
call
movsl
fwait
loopne
subb
test
add
mov
rorb
dec
pop
inc
in
call
add
test
and
jbe
insb
add
hlt
jmp
in
insl
and
push
lea
dec
enter
in
inc
andb
mov
shl
push
jmp
sbb
pushf
cmp
mov
jne
pusha
fmul
sbb
fsubrs
mov
pop
add
sub
adc
call
mov
ret
add
fstpt
cmp
mov
fdivrs
mov
xor
inc
int
data16
testb
imul
add
rclb
mov
jb
outsb
mov
ret
out
xchg
out
imul
push
sub
sub
jno,pn
test
lods
loopne
cmp
mov
xor
mov
pushf
mov
mov
adc
mov
xlat
xor
cmpsb
jb
or
or
std
mov
cmp
jecxz
cmp
dec
rcrb
pushf
jo
out
jl
xlat
add
out
add
sbb
das
shll
sub
xor
jno
xor
test
sub
stos
ja
inc
mov
mov
xlat
das
push
push
xor
or
aam
scas
lret
mov
pop
push
sarl
sub
cli
pop
mov
rcrb
add
ret
shrb
into
mov
or
rorb
mov
add
ret
sbb
and
cld
fisubrs
and
push
mov
jnp
jnp
push
adc
es
shll
add
rcr
push
shrb
lret
mov
gs
xchg
ss
sub
popa
filds
stos
ljmp
lods
cmpsb
mov
lock
movb
dec
or
pop
out
sub
or
mov
pop
in
mov
in
mov
enter
pop
push
push
sahf
mov
add
into
repnz
add
into
inc
xor
addr16
mov
test
icebp
nop
dec
stos
push
mov
sarb
mov
sbb
jo
mov
or
sub
call
and
push
or
push
shl
push
mov
mov
icebp
in
mov
or
mov
stc
dec
mov
pusha
xchg
out
jmp
cmp
mov
jo
add
iret
repnz
push
mov
jle
dec
loopne
xor
aam
cmpsl
frstor
and
fmull
sahf
lret
in
js
dec
sbb
add
mov
push
sbb
les
or
cmc
sub
in
xchg
xor
addr16
idivl
cmpb
shlb
add
enter
xor
add
sbb
and
test
and
add
cwtl
mov
inc
iret
mov
pop
or
push
ss
clc
sbb
sbb
movsb
mov
or
sarb
jo
lods
adc
mov
mov
fs
jmp
cmpb
and
add
lds
mov
mov
push
popa
mov
orb
popa
neg
int3
jne
movsbl
jg
movsb
mov
pop
jecxz
clc
adc
xor
and
paddb
push
addl
mov
adc
daa
loopne
rcrb
xor
hlt
push
mov
outsb
rclb
xorl
xchg
xchg
loope
inc
and
lods
sbbb
fcmovnb
les
test
add
jle
fimuls
cmpl
idivl
cltd
mov
mov
jl
adc
sub
xchg
imulb
mov
test
sub
or
jae
mov
cmp
out
cmp
push
add
imul
hlt
push
push
xor
pusha
sbb
shl
push
orl
dec
ja
xchg
sbbb
ret
scas
addb
sub
std
clc
daa
in
xor
add
daa
daa
daa
daa
add
push
pop
daa
daa
or
or
jnp
or
fwait
fwait
fwait
fwait
jbe
jmp
or
por
fwait
bound
jmp
adc
pop
adc
push
adc
fwait
fwait
fwait
fwait
dec
adc
dec
adc
aas
pop
jmp
fwait
fwait
fwait
cmp
jmp
sbb
xor
jmp
sbb
fwait
fwait
fwait
fwait
es
and
pop
pop
jmp
dec
fwait
fwait
adc
jmp
and
int3
and
and
test
push
orb
mov
mov
adc
adc
aas
mov
fucom
fidivrs
out
cmc
std
add
jns
out
sbb
out
sahf
out
cmp
dec
sahf
out
sahf
dec
push
pop
pop
arpl
sahf
out
insl
jb
jl
out
sahf
out
mov
push
push
pop
into
add
add
push
pop
or
and
or
push
decl
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
nop
int
push
push
movb
movsl
push
cmp
jae
test
jno
leave
mov
mov
ss
mov
sub
mov
or
mov
cmp
pop
fiaddl
call
les
cmpsl
lret
jp
pop
aam
andl
add
out
mov
mov
je
popf
add
or
fsubl
xor
adc
fst
mov
jb
inc
fs
cmp
outsb
test
xor
addr16
and
mov
push
push
aad
pusha
adc
jno
inc
mov
lock
or
cltd
cli
jmp
loope
movsl
mov
ds
xchg
jb
setnp
cltd
xchg
shll
sti
adc
outsb
xor
inc
jmp
xchg
addb
xor
sub
and
loopne
adc
faddl
lcall
enter
pop
mov
in
test
mov
rcrb
clc
adc
sbb
ljmp
and
gs
push
pop
inc
in
adc
jmp
dec
outsl
push
xor
add
pop
rcrb
clc
cmp
jge
and
or
sbbl
or
stos
cmp
pop
cwtl
or
or
cwtl
sbb
mov
mov
xor
shll
dec
fdivrs
adc
ja
mov
add
inc
loopne
ss
push
fidivs
inc
pusha
xor
ret
imul
xchg
xor
jo
pop
add
push
xor
in
dec
loop
push
xor
incl
mov
ror
xor
shr
xor
incl
mov
rol
xor
shr
xor
add
add
pop
popa
add
inc
pop
jg
popf
addr16
or
insl
push
or
and
fistl
add
add
push
add
in
fsubr
add
or
mov
ror
mov
fisubl
or
add
xor
and
and
mov
push
rcr
or
adc
test
xor
fs
sub
repnz
repnz
dec
imul
sub
fmull
pop
add
ja
push
or
xlat
and
sbb
jbe
ror
add
add
add
add
xor
cs
xchg
lret
call
adcl
inc
push
xor
ljmp
imul
xor
add
push
push
cs
cmpsb
xor
fsub
lcall
in
xchg
add
cmp
and
in
fwait
push
cmp
repnz
adc
add
repnz
add
pusha
push
and
pop
cmp
aaa
fadd
xor
cmpsb
ss
loopne
in
and
dec
inc
jo
loopne
cmp
pop
pusha
and
aam
jns
xchg
xor
mov
adc
icebp
or
cmp
cmp
add
cli
andb
xor
lock
hlt
call
or
push
and
xor
add
or
addl
aas
mov
jge
push
call
push
jo
ficoms
dec
add
cmp
into
aam
or
filds
inc
fbld
je
loop
mov
pop
inc
sbb
mov
fadds
pop
fs
js
std
push
and
fisubrl
add
shl
push
clc
jl
push
and
add
and
rol
push
cmp
xor
fs
call
sarl
jle
aam
xchg
ficompl
add
cli
mov
push
adcl
aam
cmp
inc
lcall
nop
cmpsb
in
in
and
shl
rolb
dec
sbb
scas
add
cli
ss
lret
js
xor
inc
rcrb
inc
sub
dec
xchg
sub
or
shrb
xor
inc
in
inc
add
leave
or
and
adc
dec
xorl
pushf
and
xor
add
push
out
fs
int3
push
push
inc
lcall
xchg
inc
mov
pop
test
lods
or
scas
push
mov
ljmp
loopne
scas
and
scas
inc
pop
and
dec
xorb
fs
in
add
pusha
fsubs
test
pushf
mov
sarl
push
test
fstps
lret
push
sahf
adc
imul
enter
fxch
pop
testb
lods
push
mov
xchg
mov
loop
addb
xor
or
fcoml
adc
pop
add
or
and
mov
push
mov
adc
nop
mov
dec
sbb
sbb
shrl
mov
mov
add
cmp
jb
dec
std
or
sub
add
ss
pop
cld
sub
pop
xor
jmp
aad
cmp
sbb
decl
aaa
sbb
sub
lret
mov
out
in
loop
incl
rol
and
lods
subl
dec
jnp
jo
inc
jae
stos
or
sub
movsb
sub
loopne
ljmp
call
add
lea
push
mov
pop
rolb
sar
mov
fimull
pop
jne
pop
push
adc
pop
shl
add
inc
mov
in
xchg
sub
push
enter
clc
aaa
jbe
or
add
mov
fs
outsl
or
or
sub
jae
push
add
fisttpl
pop
rolb
rep
or
add
neg
in
mov
or
mov
push
loope
jg
pop
fdivp
ror
mov
hlt
push
shr
jmp
mov
test
pop
jge
lock
inc
pushf
sub
xor
call
pop
xchg
and
sbb
movb
inc
adc
mov
push
popa
enter
cli
faddl
cmpsb
cmp
jbe
adc
jnp
mov
add
insb
add
lock
mov
or
add
or
xchg
fdivr
mov
daa
lea
imul
cmp
ja
and
les
cmp
mov
sbb
pop
xchg
or
lock
inc
pusha
dec
add
or
inc
adc
or
adcb
inc
cmp
sbb
sbb
add
lods
xor
jbe
push
test
xchg
es
mov
inc
lock
add
mov
push
fmuls
test
pop
pop
adc
sarl
push
mov
mov
inc
fcmovnb
sbb
je
rcr
inc
pop
sbb
mov
stos
xchg
icebp
subl
sbb
sbb
cmp
pop
lock
push
inc
cmp
inc
mov
in
xchg
adc
test
pop
push
add
in
push
inc
pop
mov
pusha
adc
xchg
xchg
sub
imul
and
cmp
hlt
lret
out
fists
lret
lea
adc
ret
mov
sarb
jbe
cmp
sbb
inc
xorb
je
es
shll
cvtpi2ps
mov
movsb
pop
ljmp
mov
and
and
jo
and
xchg
mov
inc
enter
jnp
cmp
and
adc
or
enter
adc
mov
inc
cmp
jl
arpl
adc
ret
fdivrs
nop
or
mov
jle
in
cmp
add
or
fbstp
cli
es
lea
cmp
push
jg
and
or
js
xor
add
or
sbb
jge
mov
inc
push
aad
or
xor
cmpb
idivl
cwtl
imul
icebp
jl
dec
idivb
cmp
push
js
test
jae
rclb
ds
nop
pusha
and
movsl
mov
adc
mov
sub
mov
or
shll
testl
cmpb
pusha
add
jmp
push
aam
or
or
pop
push
inc
in
xorb
or
jl
jmp
aas
ret
mov
and
cwtl
add
or
and
lea
sub
push
xchg
mov
cltd
ja
inc
in
inc
xor
sub
dec
aam
mov
loope
push
push
shll
ret
and
mov
or
popf
test
or
dec
cmpsb
imul
push
adc
and
js
sbb
add
pop
xor
jne
test
xorb
dec
pop
mov
and
push
push
sbb
jl
outsb
push
pop
push
sub
pop
test
dec
sti
cmp
push
bound
push
add
insb
jmp
cmp
sbb
and
clc
mov
stos
cmp
inc
xchg
add
add
mov
mov
inc
xor
add
and
push
sarl
loope
and
cmp
add
sbb
or
ret
and
rolb
mov
or
les
sub
inc
mov
add
mov
in
insl
les
sbb
cmc
dec
and
fwait
outsb
xchg
jno
and
lret
test
or
mov
iret
add
ja
pop
xor
push
ljmp
push
jmp
mov
aas
push
push
add
push
rcrb
push
dec
pop
pop
inc
arpl
jb
dec
push
shrb
mov
and
clc
je
orl
mov
pop
testl
or
rcll
sbb
arpl
mov
jne
push
sbb
stos
inc
mov
pop
pop
and
mov
or
mov
mov
mov
bound
jle
repnz
push
sub
or
dec
pop
lods
pop
inc
push
push
fbstp
loopne
adc
push
aam
mov
or
sub
fnsetpm(287
push
les
daa
outsb
push
add
xor
aaa
int
int3
adc
lea
lock
push
ret
mov
dec
adc
push
inc
pop
aad
push
repz
sbb
adc
ja
leave
popa
dec
mov
xor
inc
push
jg
adc
or
addl
out
and
ret
mov
rcl
mov
add
mov
addr16
iret
inc
and
jnp
pop
in
add
scas
pop
jmp
xchg
and
ss
add
adc
mov
xchg
clc
stc
and
or
cmp
popa
in
mov
mov
adc
jg
cmp
and
xchg
clc
cmpsb
mov
add
es
cmc
mov
and
add
adc
mov
add
call
ret
or
push
add
movsb
sub
fiaddl
shll
cmp
inc
popa
shlb
rorl
jl
pushf
scas
int
sub
stc
push
sbb
ret
xor
insl
adc
rorl
divl
test
fnstenv
pop
bound
das
out
out
mov
mov
sub
dec
xor
push
fnsave
shll
inc
or
cs
cltd
jae
jo
xchg
add
cld
cmpl
push
adc
mov
push
or
dec
dec
mov
dec
sub
inc
dec
dec
mov
adc
and
in
pop
push
xchg
icebp
dec
clc
jo
sbb
push
mov
and
xor
data16
sbb
and
ret
ret
mov
int
push
lock
popa
add
push
inc
xor
push
cmpsl
push
hlt
ss
push
xor
fcmovnb
push
pop
adc
xor
xchg
jmp
push
pop
sub
ret
clc
and
mov
ret
mov
adc
mov
adc
and
ja
xchg
popa
rorb
scas
mov
cld
jae
add
xor
dec
mov
jmp
and
mov
jnp
sub
pop
inc
scas
xchg
adc
inc
push
mov
pop
cmp
popf
int3
mov
cmpb
and
call
inc
cs
addl
js
jmp
mov
jecxz
fstps
stc
aas
rclb
and
adc
cmpsb
pusha
and
ds
lds
shlb
mov
xor
fwait
and
or
mov
mov
mov
adc
xchg
pop
div
mov
cvtpi2ps
xor
vmovaps
mov
dec
dec
imul
inc
push
sti
sub
and
imul
sbb
scas
bound
push
nop
xor
inc
adc
jl
pop
and
mov
and
jbe
mov
or
push
or
inc
mov
sub
clc
and
xor
psubusw
cmp
and
imul
cmp
push
mov
test
scas
jb
test
push
sysenter
test
or
je
push
out
xchg
nop
enter
adc
xor
or
iret
inc
and
and
cmp
or
sub
dec
sbb
outsb
lcall
and
andl
lahf
xchg
cli
sbb
cmp
aad
push
in
cld
in
repz
pop
add
pop
sub
cmpsb
cmp
leave
leave
sbb
pop
movsl
xor
movb
xchg
dec
sbb
xchg
jne
push
cltd
or
or
testl
out
sbb
jle
push
je
js
jle
jecxz
lea
fstps
icebp
mov
movq
lahf
lea
push
arpl
in
mov
pop
mov
push
xchg
push
pop
leave
add
movsb
add
daa
inc
xchg
inc
repz
adc
fildl
daa
xchg
fstl
inc
pop
sbb
inc
or
loope
arpl
sbb
int
cmp
fisubs
cmpb
sbb
add
sahf
jmp
mov
xor
pop
cmp
je
and
xor
or
xor
pusha
xchg
cmp
mov
fdivrl
dec
jbe
andb
aas
xchg
ss
adc
mov
mov
aas
adc
sub
andb
cmpb
xchg
or
add
nop
adc
or
mov
inc
fstpl
and
push
jns
xor
cmp
sub
mov
inc
fidivrs
stos
rcrb
stc
inc
jo
pusha
shrb
mov
enter
adc
pop
mov
push
stos
ss
repnz
sub
lcall
adc
rorb
push
adc
mov
mov
sbb
mov
or
test
dec
pop
repnz
push
inc
pusha
cmp
pop
cmp
dec
inc
or
xchg
jbe
mov
les
push
aad
adc
mov
lea
dec
inc
inc
cs
add
adc
cld
das
adc
xlat
jge
mov
decl
add
lea
fstpt
jecxz
push
test
mov
add
mov
in
cmp
das
or
lock
clc
clc
cld
push
clc
or
add
movl
dec
cs
add
add
add
cmpsb
test
and
jle
inc
or
add
dec
je
add
add
jg
dec
jne
mov
and
dec
or
mov
shr
sbb
or
lret
ljmp
xor
sub
icebp
data16
shrl
or
mov
cli
and
and
mov
sub
or
or
jnp
je
push
add
out
loop
push
jb
jmp
adc
add
lret
ljmp
in
add
push
add
inc
jnp
lds
sbb
adc
mov
push
cmp
cmp
sub
add
xor
add
lcall
ret
cwtl
sbb
clc
das
xchg
jmp
ret
cltd
idiv
inc
inc
imul
add
push
cmp
add
les
scas
cld
mov
fdivrl
inc
insl
push
pop
xchg
mov
loopne
mov
add
or
cmp
outsl
push
rcll
mov
cmp
or
loopne
xor
push
push
lock
jge
cmp
je
cmpsl
into
pop
jbe
push
fidivrl
jmp
daa
pop
icebp
hlt
loope
cmp
sarb
in
clc
jae
mov
mov
pop
outsb
gs
int
or
jae
pop
lods
jmp
sbb
add
dec
mov
sub
repz
cld
jbe
cmp
je
cmp
push
cmp
jne
inc
jne
xor
and
sbb
adc
pop
inc
bound
or
es
shlb
mov
ret
pop
je
ret
sub
jne
rorl
sub
and
push
add
js
outsl
mov
decb
inc
sbb
sub
cmp
nop
add
addr16
add
or
inc
mov
std
adc
jl
or
jg
mov
jmp
push
repz
movsl
and
push
jmp
inc
push
sub
aaa
and
mov
jp
add
shl
dec
mov
sahf
dec
fcmove
sub
mov
mov
and
scas
xchg
mov
outsl
adc
test
or
pop
mov
jp
add
das
xchg
rcrl
and
pop
and
sbb
mov
out
sbb
shlb
scas
and
aaa
add
push
pushl
xor
push
inc
cmp
pusha
mov
std
mov
call
imul
mov
addb
roll
aad
inc
lods
aaa
lcall
xor
dec
sub
pop
loopne
inc
pop
inc
xor
gs
jge
inc
imul
adcl
movsb
xor
xor
xor
and
cmp
sbb
adc
vmovhps
orb
movsb
idivb
call
out
jmp
xor
sub
pop
xor
xor
sbb
test
addr16
in
ja
mov
pop
ucomiss
or
fadds
push
cmp
mov
and
out
mov
enter
popa
cmp
test
arpl
and
cmpsb
pcmpeqb
clc
inc
or
pop
xchg
mov
in
push
clc
mov
int
xor
clc
arpl
or
ja
add
jne
mov
mov
sti
or
cmc
cld
imul
sbb
mov
faddl
jle
in
imul
sub
je
xor
leave
or
in
fcoml
rcll
sbb
test
add
add
or
mov
test
sub
push
mov
fdivs
sbb
les
or
adc
jmp
dec
cwtl
adc
inc
inc
pop
mov
je
jbe
or
mov
push
lock
push
pop
push
fildll
cmp
jne
int
je
add
and
hlt
loopne
or
pop
push
add
cmp
imul
or
and
inc
inc
push
sbb
rorb
sub
cmp
popf
popf
adc
shrb
add
cwtl
adc
leave
rolb
lret
outsl
xchg
xchg
inc
jp
adc
xor
xor
icebp
jmp
push
shl
xchg
js
push
mov
mov
mov
ss
add
xchg
rcll
xchg
addb
imul
and
mov
jl
in
xchg
xor
pop
push
sbb
mov
test
rorb
int
inc
mov
jne
push
movb
jo
es
mov
add
rorl
decl
rclb
xor
push
dec
and
sarl
xchg
add
imul
je
sti
out
test
ficompl
cmp
xchg
pop
rcr
nop
mov
xor
cmp
icebp
xor
push
outsb
mov
push
shrb
movl
or
lcall
mov
and
jl
dec
pop
jb
outsl
pushf
sub
dec
inc
mov
or
adc
inc
cwtl
jmp
jmp
enter
push
jmp
and
fadds
or
jno
pop
push
cmpb
jne
mov
and
out
xchg
es
ret
sbb
add
adc
push
add
and
dec
ret
sbb
sbb
inc
mov
xor
movsb
xor
mov
adc
mov
mov
ss
add
dec
pop
push
stos
cmp
and
xchg
push
mov
push
jb
lods
push
xor
add
es
mov
rolb
cmp
outsl
test
lock
mov
arpl
add
add
jo
jp
mov
les
mov
mov
push
addb
adc
call
jnp
in
jne
pop
inc
mov
adc
xchg
dec
dec
and
mov
xchg
xchg
clc
jge
movsl
dec
mov
inc
test
sub
mov
pop
add
and
adc
or
cmp
jns
insb
je,pt
inc
add
mov
pop
scas
lea
mov
data16
out
pop
dec
push
arpl
cmp
es
and
mov
lcall
fisubs
dec
jbe
mov
addl
push
clc
push
arpl
mov
adc
cmp
inc
jo
sahf
popa
sbb
sti
fistpl
orl
push
jo
push
jnp
je
push
das
shl
insb
push
shl
jmp
xchg
pop
xor
mov
cmp
mov
nop
insl
or
xchg
cmpsb
cli
xchg
into
sub
jae
aas
pop
call
inc
dec
xchg
loop
xchg
sub
addr16
cs
mov
mov
mov
or
pop
mov
xchg
dec
adc
sbb
inc
arpl
jge
push
xchg
aam
test
leave
add
es
pop
lret
shlb
mov
or
push
jae
add
movsl
or
lret
sbb
in
lcall
inc
xor
cmp
jb
jne
aas
scas
or
push
dec
call
push
in
jo
xor
ret
sub
imul
push
mov
or
mov
pop
xchg
hlt
xchg
movl
add
adc
stos
or
sahf
adc
mov
mov
push
mov
cld
dec
jne
inc
push
sbb
add
and
aad
xchg
xor
adc
xor
mov
arpl
sub
dec
cld
minps
popf
pusha
or
cmp
or
jb
inc
push
scas
pop
inc
adc
push
inc
adcl
jg
sbb
mov
mov
xchg
dec
sbb
shl
js
jmp
fmuls
pusha
mov
add
inc
shll
push
jecxz
mov
daa
inc
insl
insb
por
filds
fsubrs
or
add
mov
push
sub
or
dec
movsl
rorb
lds
in
pop
and
add
add
pop
pushf
and
incb
out
add
xorl
or
movl
mov
mov
inc
fsts
xchg
pop
xchg
sub
sbb
jmp
cmp
jne
sbbb
add
add
push
pop
data16
bound
pop
jle
push
cltd
js
xor
jno
clc
adc
dec
sbb
data16
iret
dec
xchg
mov
leave
mov
into
je
mov
add
fwait
ja
ds
enter
pop
ret
enter
cld
sbb
sbb
aam
add
pop
push
test
nop
jnp
icebp
mov
pop
sub
sub
call
fwait
es
mov
xchg
nop
push
fcompl
jmp
push
dec
dec
inc
vcomisd
mov
out
mov
and
ret
addr16
stos
lock
adcl
dec
inc
or
cmpsb
stos
arpl
cmc
in
sbb
cmc
pop
xor
jno
or
add
jbe
mov
imul
or
lods
inc
add
addl
inc
call
jns
and
and
in
dec
movb
dec
mov
nop
int
jb
mov
lcall
pop
sub
fisttpl
pop
ret
cmp
push
or
mov
dec
xor
pop
pop
daa
scas
lea
addl
mov
xor
pop
or
and
lock
imul
fucomip
bound
mov
sub
mov
movsl
sarl
shrl
dec
cmp
xchg
pop
adc
addb
push
pop
xor
cltd
loopne
adc
or
aaa
fs
insb
repz
ss
aaa
movsb
xchg
movsb
push
sub
mov
pop
call
and
addb
mov
mov
cmp
sbb
pusha
cmp
test
push
call
add
push
pusha
addl
or
lcall
sbb
jl
add
push
or
addl
adc
xchg
orl
xchg
adc
sub
fwait
sub
orb
stos
and
mov
mov
pop
pop
pop
jno
pusha
xor
xchg
fdivrl
and
jle
fmuls
gs
outsb
fiaddl
adc
push
jo
sub
aam
loopne
and
mov
stc
push
push
popa
jns
mov
inc
or
add
aad
sub
mov
leave
call
sub
fadds
pop
cmpsb
mov
pop
js
nop
xchg
cli
sbb
cmpsl
arpl
out
mov
add
cltd
inc
mov
in
outsl
out
and
mov
jmp
rolb
iret
icebp
xchg
sahf
movsb
push
xor
imul
inc
imulb
pop
pop
ds
cs
iret
pop
cmc
ss
loopne
inc
das
mov
xor
jg
or
sub
and
jg
jb
pusha
and
into
xor
jmp
test
test
mov
fisubrs
dec
mov
pusha
mov
inc
call
into
mov
rcll
mov
or
jo
adc
push
inc
and
and
rorb
mov
xchg
cmp
pop
push
ret
outsl
mov
pop
aas
push
jno
adc
adc
pusha
cmp
adc
push
mov
imul
jae
and
or
pusha
or
shl
adc
lods
test
sub
cwtl
lcall
jno
adc
mov
add
clc
add
pop
jmp
rorb
inc
imul
popf
movsb
add
dec
xchg
adc
dec
pusha
daa
addr16
insl
jecxz
movsb
push
push
pop
push
push
add
ss
shlb
adc
fsts
jecxz
inc
jle
cmp
inc
or
jo
in
jnp
or
sti
movl
bound
aam
sub
sub
add
int
lahf
dec
mov
cmp
adc
es
cmc
nop
jns
test
test
int3
popl
iret
stos
loope
mov
dec
sub
pop
push
cli
or
lock
adc
push
and
mov
adc
dec
adc
ret
js
xlat
add
addr16
mov
jg
jo
mov
std
cmp
rcll
xchg
hlt
xchg
fs
je
xor
lcall
ficomps
js
mov
and
fisubs
jne
cld
mov
mov
jne
pusha
sub
fsub
loopne
inc
jne
pop
push
jae
gs
lods
mov
cwtl
shrb
push
jne
call
add
or
lock
mov
xor
jl
flds
rcr
dec
or
jmp
lea
fdivrp
dec
daa
or
xor
stos
shr
test
dec
cmp
test
add
adc
sbb
pop
dec
push
hlt
adc
sub
pusha
xchg
and
or
test
adc
mov
inc
jbe
aam
push
in
xor
ret
push
cmp
cmp
jge
aas
inc
loopne
loopne
mov
js
je
mov
sub
loopne
jno
sub
call
arpl
loope
lea
jecxz
pop
mov
mov
push
loopne
jp
pop
jmp
sarb
cwtl
jne
repz
addl
push
inc
inc
push
ds
adc
pop
lret
add
jl
outsl
mov
imulb
cmp
pop
mov
bnd
pop
daa
jecxz
xchg
or
push
push
int
or
inc
sub
insb
aaa
mov
cmp
dec
shlb
aaa
mov
push
loop
or
shr
rep
adc
mov
inc
test
adc
and
dec
sbb
push
xor
test
daa
push
jmp
pop
and
mov
mov
fisubrl
sub
mov
sub
push
imul
sbb
cmp
sti
loopne
outsl
xor
jae
out
pop
adc
cwtl
daa
push
or
js
jmp
xchg
xchg
inc
je
lea
adc
pop
jne
aaa
es
and
sub
shrl
pop
syscall
divl
add
xchg
insl
inc
daa
stc
out
jbe
mov
fwait
jne
xor
and
je
ret
in
jle
add
mov
push
cltd
sub
sub
mov
pop
pop
cmp
sahf
adc
and
lea
sub
and
outsl
push
add
or
cmpl
mov
xorb
or
mov
xchg
push
mov
pop
add
lcall
in
cmpsb
adc
sub
fildl
push
sbb
sub
aad
sub
mov
ja
inc
jg
inc
or
sub
adc
and
add
in
and
inc
xor
pop
cwtl
pop
pop
pop
pusha
rcll
xchg
call
inc
mov
bound
xorb
dec
sbb
inc
adc
xchg
cmc
mov
adc
sbb
in
out
aas
xor
loopne
inc
dec
ss
sub
jo
mov
inc
ret
or
mov
adc
and
lcall
cmp
push
jmp
and
mov
lds
call
sub
dec
ja
pushf
ja
inc
jmp
mov
push
xchg
dec
mov
fs
push
clc
imull
stos
loope
add
cs
test
lea
adc
xor
push
dec
xor
pop
je
or
and
scas
sub
sbb
cmp
sub
push
or
jne
lods
aad
flds
inc
push
push
jae
or
adc
cwtl
add
les
cmp
or
pmulhuw
sub
je
push
mov
mov
xor
in
add
stc
in
cmp
cmpsl
or
push
push
mov
nop
or
int
adc
and
ds
ljmp
sbb
clc
je
mov
jb
loopne
stos
lret
inc
and
aas
inc
inc
ds
jnp
cmp
movsb
mov
inc
loopne
out
inc
and
orl
popa
dec
fs
shlb
leave
pop
or
pushf
inc
mov
mov
or
sub
inc
fldt
das
or
nop
or
xor
cmpsb
add
loopne
inc
add
and
push
test
pushl
loopne
lret
push
popf
fadds
push
pushf
stc
jmp
das
icebp
subb
push
lret
movl
lods
pop
hlt
test
ret
add
test
dec
and
or
popa
push
inc
inc
or
sarb
push
arpl
daa
or
add
sbb
and
inc
call
in
push
lock
xor
arpl
cmp
or
mov
aas
inc
push
cmp
or
dec
jo
xor
hlt
add
cwtl
or
movsb
popf
dec
aas
scas
stos
jecxz
lds
jo
ljmp
cwtl
sub
jp
push
jo
and
lea
cmp
pop
mov
sub
add
stc
pusha
adc
mov
inc
adc
outsb
pushw
ret
mov
test
pop
cli
sub
stos
fcomps
fldenv
pop
ja
shll
add
fstps
cmp
jne
push
dec
cmp
mov
movsb
cmc
jp
fwait
mov
cwtl
js
jne
clc
in
xchg
mov
addr16
mov
insl
xchg
jae
jmp
pusha
jle
inc
cli
stos
push
xor
pop
div
hlt
add
lea
movsb
fs
jno
mov
lock
xor
or
push
cmp
adc
jp
xor
mov
jne
or
sub
sbb
mov
gs
push
and
adc
push
stos
sub
add
jno
push
cmp
mov
xorb
push
inc
fisttpl
and
inc
shr
popf
testl
lock
pop
add
or
es
pushf
mov
je
in
jle
push
das
cmp
push
rolb
jmp
adc
sub
sub
jne
bound
les
out
adc
addl
jae
dec
lret
lret
jo
jp
clc
int3
add
xor
inc
push
in
subb
or
clc
pinsrw
test
jg
jo
mov
cmp
jb
idiv
testb
sub
mov
mov
jne
aas
fstpl
add
or
cltd
mov
push
rep
mov
dec
ljmp
ret
or
push
pop
cmovp
call
push
xchg
cmp
push
movsb
mov
adc
jae
mov
fidivrl
add
or
loop
adc
xchg
xor
xchg
in
sbb
mov
sub
pusha
insl
mov
jle
or
add
dec
shll
lods
jb
cwtl
scas
pop
push
mov
and
sbbb
psubusw
adc
and
clc
jg
fs
dec
jno
add
movd
movaps
out
xlat
adc
push
clc
jae
xor
jle
aaa
das
mov
xor
cli
rcl
lret
sub
cmp
and
lret
or
ret
inc
mov
jg
ljmp
jp
cli
jnp
mov
and
adcl
adc
push
hlt
adc
outsb
shll
and
cmpsl
jge
repz
roll
jbe
and
dec
xorl
enter
add
xchg
idivl
mov
cmp
dec
sbb
inc
pop
pop
pop
test
sub
and
shr
and
dec
jle
jne
orb
incb
xor
xor
pop
add
add
xorl
cwtl
std
jb
test
mov
lret
or
or
push
int3
jmp
mov
lret
sub
ret
adc
std
cld
push
push
xor
inc
hlt
cmpsb
aam
jg
mov
fdivr
movsl
ljmp
inc
mov
arpl
or
scas
push
inc
dec
pusha
xor
mov
inc
loop
sub
mov
test
ds
push
pop
incb
ss
mov
push
sub
add
loop
inc
sub
clc
ja
mov
jbe
ljmp
ljmp
jne
inc
cmpb
xchg
jo
repnz
addb
add
pop
push
repnz
inc
inc
and
adc
jbe
add
or
or
mov
push
dec
ret
daa
jb
mov
dec
xchg
pop
push
push
daa
int3
sbb
jmp
mov
sub
mov
xchg
xor
push
xor
xor
or
mov
or
pcmpgtb
xor
mov
dec
push
lds
insl
sub
adc
mov
test
pusha
adc
jne
ret
out
xchg
push
lods
and
cs
mov
xor
mov
inc
and
sub
addr16
icebp
mov
fsubs
xor
push
movb
xor
pop
addr16
jg
sbb
sbb
fdivl
popa
and
and
xor
adc
es
shlb
xor
push
and
jp
mov
cmp
imul
leave
ret
jno
data16
movl
xchg
imul
movsl
call
and
inc
fwait
pop
cmp
mov
imul
fnstenv
add
jae
jmp
ja
bound
testb
or
xor
inc
mov
jle
fidivrs
adc
test
push
lock
nop
sub
dec
push
push
fdivr
push
cltd
hlt
push
jle
icebp
and
int3
stos
mov
adc
scas
mov
inc
cmp
adc
cwtl
cs
movsl
lea
inc
adc
jecxz
push
int3
jno
sbb
push
mov
mov
je
mov
movmskps
mov
fcoml
out
sub
xchg
dec
mov
mov
sbb
or
int
rcll
movsb
fidivs
pop
sub
jp
add
aas
data16
mov
xor
out
movsl
add
mov
push
push
ret
add
je
jae
rcrb
enter
mov
adc
pop
fwait
push
add
xchg
add
jne
add
ret
adc
or
inc
lock
pop
shr
arpl
pop
jb
and
sub
mov
sarb
add
je
test
cs
mov
daa
jle
adc
push
stos
repz
xor
imul
outsl
jl
movsb
pop
inc
inc
push
and
push
mov
inc
roll
and
pop
cld
add
xlat
test
hlt
icebp
outsb
loop
out
cmp
gs
adc
out
add
testb
je
inc
mov
cmp
or
jbe
mov
es
loope
or
cmp
jne
or
dec
jmp
shl
jl
jne
xchg
mov
jne
inc
aaa
push
lds
sbb
push
loope
xor
mov
adc
jmp
and
test
xchg
fcomps
dec
push
rolb
jo
and
std
int3
mov
mov
jge
sbb
not
add
cmp
dec
ret
xorb
stc
repz
pop
and
int
sbb
dec
pop
pop
jne
rcll
aas
push
fdivs
sbb
decl
cmp
jb
rep
jmp
push
push
outsb
mov
xor
add
cs
fs
loopne
fisubrs
hlt
and
inc
push
and
pop
inc
xor
push
sub
inc
add
xor
lods
adc
xchg
stc
rcrb
lea
dec
add
dec
cmpsb
nop
inc
xor
mov
add
repz
push
lods
push
movsb
pushf
xchg
mov
inc
mov
mov
call
out
in
lock
hlt
ss
out
clc
cld
xchg
xchg
sub
lea
lock
sbb
cmp
jns
jmp
and
mov
into
nop
inc
pop
xchg
mov
sti
and
outsb
or
push
lea
jl
cld
push
jo
sub
and
std
cld
out
mov
fcmovne
insb
addr16
adc
sbb
daa
outsb
pop
sbb
stc
sub
pop
xor
movsb
push
int3
fiaddl
jl
sub
out
add
dec
inc
fcomps
add
nop
dec
dec
addr16
xorl
mov
cmp
dec
int3
mov
or
push
xor
das
ds
repz
dec
push
arpl
sbb
sahf
out
sbb
sbb
adc
jns
out
adc
or
or
sahf
out
add
inc
test
or
icebp
xchg
xor
push
add
pop
andl
inc
ja
dec
mov
jbe
fimull
sub
or
inc
imul
and
cmp
repnz
mov
inc
arpl
outsb
stos
clc
xchg
adc
fidivs
sub
inc
fisubrl
push
xchg
shlb
and
sub
pop
xor
sbb
sbb
add
adc
or
mov
push
and
mov
loopne
fdiv
inc
mov
inc
and
loop
popf
pop
outsl
push
xchg
daa
fstpt
ret
pop
outsb
aad
mov
sbb
adc
pop
cmp
xor
movsl
sub
push
pop
xchg
push
inc
test
mov
sbb
ret
pop
sbb
mov
cmp
pop
cmp
leave
xor
or
ficoms
packssdw
xchg
inc
and
test
dec
mov
sbb
pop
and
or
mov
dec
fistpll
mov
adc
pop
pop
sbb
cmp
fs
adc
js
loope
pop
push
jle
inc
sbb
xchg
arpl
popa
mov
sbb
dec
push
jbe
sub
pop
mov
xchg
cmp
pushf
mov
cmp
pop
push
push
cmp
add
jmp
in
mov
cmp
jne
push
adc
or
add
mov
adc
sbb
fcompl
add
push
mov
cmp
clc
inc
jne
imul
imul
push
push
add
mov
es
and
ljmp
push
push
jne
xchg
clc
adc
dec
pop
and
sbb
xor
mov
int
or
mov
mov
fadds
jbe
test
mov
adc
movsb
aad
fs
dec
in
sbb
and
pop
dec
pop
and
enter
inc
fistpll
fcmovu
mov
ja
pop
fnstsw
outsl
das
mov
loop
nop
lret
pop
stc
ds
fidivs
or
faddl
sub
xchg
xchg
adc
cmpl
mov
adcb
add
or
mov
inc
inc
xor
sub
sbb
jne
and
test
ljmp
xchg
rcl
mov
dec
imul
mov
fiaddl
adc
xor
dec
pop
test
pop
xchg
add
add
adc
lret
sbb
sbbb
pop
js
or
sbbb
ret
inc
shrl
pushf
std
jne
scas
adc
or
jl
and
loopne
sarb
loopne
push
push
lods
lods
js
push
ljmp
adc
add
add
push
push
sub
mov
sub
in
into
js
push
or
int
je
or
jmp
sbb
sub
mov
xor
je
pop
pop
gs
pop
fisubl
pop
pop
sbb
xor
adc
into
pop
fdivrs
lock
jg
sub
clc
ja
leave
fldt
pop
jbe
lea
adc
sbb
jp
daa
in
add
out
xor
inc
leave
push
sbb
test
jb
push
clc
jbe
cwtl
push
ljmp
jl
out
dec
cmp
pop
jmp
add
addb
mov
cmp
jmp
pop
hlt
xchg
mov
test
cmp
addl
mov
cld
jbe
divb
clc
cmc
je
mov
mov
pop
adc
pop
or
xorl
ret
negl
cld
out
nop
fildl
pop
out
inc
xor
loopne
test
add
adc
xchg
rol
in
adc
sub
test
sbb
dec
out
adc
mov
push
andb
mov
and
pusha
aas
pop
dec
shr
js
cltd
sub
outsl
push
add
insl
test
lods
xchg
roll
push
add
or
jp
or
stc
shrb
inc
dec
push
rolb
push
test
inc
push
rol
stos
inc
icebp
adc
fsubl
sbb
mov
mov
dec
inc
out
sub
jmp
pop
pop
push
sarl
rclb
pop
rclb
push
testb
push
xor
frstor
popa
xchg
rcl
sbb
dec
loop
mov
daa
repnz
add
push
xor
dec
loop
cs
dec
jne
jmp
xchg
repnz
push
int
loope
cmp
dec
jne
mov
or
addr16
test
lcall
lcall
mov
mov
mov
movsl
stos
or
jno
add
jle
bound
sar
jae
add
into
pop
mov
rcl
sahf
imul
cld
jne
mov
push
cmp
jne
data16
out
es
jne
call
aam
lahf
mov
mov
push
stc
jns
insl
inc
incl
dec
mov
jmp
sti
jns
out
push
xor
cld
cld
jmp
iret
lcall
adc
adc
inc
inc
inc
jecxz
lea
pop
push
pop
repnz
adc
add
jge
add
shlb
dec
imul
in
orb
push
subb
ret
dec
and
push
mov
push
sbbb
loope
loopne
bound
or
mov
add
add
add
adc
xlat
outsb
and
lahf
test
inc
or
movsb
xchg
xchg
or
arpl
test
pop
pop
pop
cwtl
pop
orl
adc
and
or
mov
xchg
dec
jmp
pop
add
xlat
push
mov
test
in
iret
jne
fmuls
add
outsl
xor
add
mov
or
mov
popl
jo
sub
or
arpl
push
push
push
push
or
cmpsb
and
test
adc
mov
test
mov
divb
out
test
or
adc
aas
add
add
lea
mov
aam
push
fisttps
mov
jmp
addb
or
push
pop
arpl
pop
nop
sbb
sbb
pop
or
push
and
adc
xchg
cmp
call
adc
pushf
and
push
lds
push
xchg
mov
pushf
add
mov
inc
adc
push
rclb
call
es
loop
and
test
dec
mov
in
dec
adc
es
ret
loop
ljmp
or
adc
or
adc
fadd
sub
daa
fdivs
mov
jg
jecxz
lea
add
not
and
sub
and
add
lock
lods
xchg
outsl
inc
arpl
push
sub
push
or
lock
push
pop
adc
push
or
adc
sub
sub
fs
aam
jne
pop
mov
sbb
push
lcall
sti
mov
cmp
ja
mov
inc
je
mov
inc
push
sub
fmuls
or
add
jmp
nop
shll
inc
inc
push
pop
insb
sahf
out
loop
or
push
scas
mov
pop
cmp
mov
inc
cmp
jb
jno
jo,pn
jae
or
cld
data16
mov
pop
pop
ret
and
mov
scas
adc
or
ret
loop
xchg
adc
add
add
pop
pop
sbb
jne
or
movsb
lods
xor
adc
mov
mov
pop
and
xor
dec
stc
addl
mov
movsb
iret
xor
jo
and
sbb
jbe
je
add
out
add
and
push
js
pop
inc
cld
and
loopne
xorl
je
repnz
test
cs
fcompl
fmul
push
aam
xchg
pop
addr16
pop
sub
popf
mov
sbb
or
push
add
jno
and
xor
or
or
lock
in
xor
push
sub
jns
aas
aaa
or
jl
and
lret
push
add
mov
cmpl
pop
ss
xor
sbb
repz
xor
lods
icebp
mov
pop
mov
inc
jmp
cmp
sbb
data16
add
add
sub
pop
or
pusha
decb
cmp
adc
cmp
mov
ss
mov
je
cmp
and
or
adc
pop
mov
dec
add
mov
pop
push
ret
loopne
lods
adc
mov
mov
bound
mov
and
je
sub
dec
pusha
jno
ss
lea
sbb
popa
add
test
and
fwait
add
ret
inc
test
or
lods
push
jecxz
sub
add
pop
adc
mov
dec
push
rcrb
scas
movsb
and
movsb
jecxz
push
mov
push
adc
shl
cld
xor
cltd
sbb
adc
sbb
test
inc
xor
or
rorb
popl
idivl
add
inc
movsb
jbe
add
aaa
push
test
jp
pop
sub
or
sub
loop
sbb
adc
push
or
mov
mov
mull
mov
mov
inc
mov
dec
jne
adc
add
adc
add
add
sbb
pop
insb
xor
cmp
sarb
xor
jo
xlat
inc
jmp
push
cltd
nop
add
mov
inc
adc
addl
push
adc
sbb
adc
dec
or
push
mov
in
mov
pop
insb
sbb
push
inc
push
xor
push
ljmp
jne
rclb
cwtl
or
jp
adc
mov
jno
fisubs
nop
mov
cmp
adc
jb
lea
push
adc
fldl
dec
ss
adc
push
ret
inc
clc
icebp
xchg
mov
gs
push
clc
mov
pop
cmp
or
mov
mov
adcl
xchg
xchg
lret
daa
jne
or
push
push
call
inc
shr
or
es
insl
and
or
push
imul
inc
dec
sub
mov
inc
pop
and
in
push
movsb
xor
test
or
cld
or
push
mov
jmp
outsl
addl
mov
loope
mov
mov
sub
mov
cmpl
or
cmpsl
ds
fistpl
add
mov
das
adc
insl
xor
inc
jecxz
and
inc
sub
add
jmp
es
fdiv
or
push
add
in
sub
mov
mov
inc
shlb
add
pop
fisubs
fcomps
ret
push
or
sti
or
lcall
rcrb
cmp
push
or
adc
sbb
push
or
push
jp
push
jmp
xor
adc
loop
or
mov
jle
mov
rcrb
mov
jne
ja
btr
pop
cmpl
push
stos
das
dec
int
mov
push
jge
or
or
arpl
jbe
inc
enter
movl
outsl
pop
adc
lods
sarb
push
push
push
aaa
mov
mov
push
out
pop
addl
jnp
add
out
fisubrs
sub
jbe
mov
lea
sbb
dec
test
xor
add
xchg
pop
mov
pop
sub
push
cmc
stos
scas
popa
push
mov
pusha
adc
rcrb
add
imul
dec
fisubl
push
dec
loopne
dec
in
dec
frstor
mov
pop
test
sub
pop
aam
mov
test
and
mov
dec
adc
in
dec
mov
enter
pop
pusha
sub
mov
in
sbb
out
jns
jle
adc
or
repnz
fcomp
repz
add
or
imul
imulb
jmp
cmp
pushl
inc
and
test
push
cmp
js
jmp
inc
push
stos
popf
fcoms
clc
jnp
push
push
in
orb
mov
adc
xchg
lods
add
addl
push
cli
sbb
push
cmp
inc
pop
bound
adc
xchg
adc
mov
faddl
sub
push
mov
push
jo
icebp
clc
fs
cmc
movsl
mov
daa
adc
jge
cli
push
popa
dec
cmp
or
call
in
push
or
aam
jmp
dec
je
add
leave
add
mov
push
pop
fidivrs
pop
scas
fsubs
outsl
jno
push
sbb
repnz
inc
add
sub
push
push
stos
and
pop
add
sti
or
adc
cmp
push
push
dec
sub
jo
lea
test
rcrl
push
add
adc
popw
add
xchg
lcall
roll
push
jne
mov
addr16
add
dec
or
xchg
dec
jo
inc
jne
jb
push
dec
repz
repnz
xchg
and
je
cmp
and
lods
adc
dec
xchg
xlat
pop
sbb
int
xor
mov
pusha
mov
mov
cmpsl
xor
push
rcl
add
push
iret
mov
lock
jmp
xchg
jbe
leave
add
scas
cmp
shll
jmp
rorb
add
std
lret
orl
test
push
jmp
sub
aas
lcall
dec
push
pop
test
inc
arpl
or
push
fadds
cltd
and
addb
sub
js
add
jno
jae
popa
add
or
lock
jmp
cmp
jae
mov
stos
arpl
mov
push
mov
inc
push
mov
or
xlat
sub
add
lcall
mul
mov
add
add
jmp
sub
push
sbb
inc
push
push
sub
adc
mov
xor
test
sub
movsl
loope
fsubrl
or
jl
sub
je
or
dec
and
sbb
shl
std
jns
push
das
or
mov
pop
jle
rcll
jbe
aaa
push
pusha
ss
xchg
xchg
imul
or
lea
jb
mov
add
xor
jo
in
int
addr16
mov
and
jns
lods
pop
push
decl
das
pushl
loopne
push
sub
push
pop
sub
mov
dec
lcall
dec
push
pop
sub
add
cmp
add
xlat
dec
mov
mov
outsl
rcrb
shlb
imul
cmp
lret
push
push
add
imul
jmp
inc
lods
push
test
pushf
movsl
stos
sbb
xorb
or
cmp
jecxz
sti
ret
adc
loopne
add
push
loope
cmovbe
data16
push
push
jge
inc
cmp
je
fsts
stc
xchg
clc
push
mov
push
xchg
mov
pop
xor
fs
pop
mov
notb
imul
add
xchg
dec
push
mov
jmp
loopne
inc
sub
notb
mov
adc
inc
dec
or
xchg
mov
cs
add
rcll
sbb
cmp
inc
mov
add
and
movsb
cmp
stos
cltd
pop
inc
mov
inc
add
push
ja
jno
daa
mov
rolb
pop
and
aas
lods
in
jb
add
repnz
push
or
cmp
push
push
push
int
push
mov
in
js
in
push
add
jecxz
js
aam
rcrl
flds
js
imul
mov
lret
inc
dec
inc
and
add
test
pushf
out
lds
inc
leave
shlb
hlt
jmp
mov
arpl
orb
pushl
lea
and
jb
adc
or
or
push
dec
mov
push
mov
xor
ret
add
popa
mov
push
test
and
mov
bound
cltd
ss
mov
xchg
shll
imul
or
jl
fs
test
jge
cli
jno
test
pop
movsb
cmpsl
stc
cmpsb
jmp
pop
lret
inc
sbb
movsb
sbb
mov
insb
jne
fmul
outsl
jne
jecxz
cmp
and
sub
ret
dec
test
cmp
and
push
and
rcr
in
dec
pop
jns
test
pusha
or
es
or
lahf
adc
cmc
shlb
test
negb
sbb
inc
adc
jge
or
or
dec
cld
jmp
add
dec
adcb
subb
inc
push
fnsave
lock
test
push
rolb
mov
rorb
sub
in
outsb
negl
sub
adc
popa
insl
rorl
xchg
rcl
dec
inc
pop
xchg
dec
movsl
in
rclb
cmp
rorb
popf
jmp
pop
and
dec
push
sub
or
int
sub
cmp
xlat
xorb
loopne
push
jle
jmp
lock
fsubrl
and
clc
ja
rorl
rcrb
adc
ljmp
adc
pop
fnstenv
jne
mov
jnp
popa
xor
inc
sahf
jp
jnp
add
ss
add
xchg
xchg
inc
inc
bnd
jp
add
jnp
aad
leave
enter
lret
mov
int
mov
xchg
add
push
aad
mov
int3
and
push
adc
pop
mov
leave
add
cmp
mov
add
push
mov
mov
icebp
mov
je
mov
ljmp
jno
mov
incl
inc
or
push
sub
sbb
orb
call
shlb
push
push
jno
lahf
je
mov
cmp
lock
nop
add
and
dec
pop
inc
pop
mov
mov
jns
imull
mov
mov
out
shl
pushl
or
push
adc
orb
xchg
inc
inc
ret
push
xchg
test
pop
mov
pop
cmp
test
sub
aas
sub
dec
push
or
je
movsb
mov
mov
out
jmp
movsb
fnstsw
xchg
testb
jne
pop
lock
sbbl
adc
sbb
rol
cli
add
pop
rolb
jbe
cli
or
mov
mov
sub
scas
int3
testb
jne
push
sbb
stc
cmp
loopne
adc
xchg
xchg
lea
and
popa
and
add
out
dec
adc
dec
cmp
dec
cmp
mov
mov
push
push
xor
push
repz
or
push
adcl
or
mov
loop
push
mov
idiv
mov
pop
sbb
repz
lods
cld
in
push
mov
aad
fstl
sub
xchg
push
or
xor
data16
or
cmpb
lock
fsubs
sbb
mov
insl
mov
dec
dec
dec
test
add
pop
enter
adc
pop
cmpb
aam
push
roll
mov
push
adc
xchg
cwtl
cld
add
mov
push
or
sub
outsb
pop
jae
rcrl
int
pop
sbb
and
sbb
add
mov
push
lock
dec
cmp
add
lock
add
hlt
cmp
add
mov
mov
adc
cld
inc
push
mov
movb
jmp
loope
fucompp
insl
xor
sub
std
add
jo
add
sbb
add
or
adc
mov
xchg
push
and
clc
mov
sbb
sub
or
repnz
or
jo
repnz
and
ret
mov
rolb
in
cli
mov
add
pushf
or
aas
sub
xor
mov
das
das
das
das
sbb
subb
pushf
popl
mov
jno
mov
testl
mov
ja
sbb
cwtl
cltd
sub
aad
jge
inc
ret
add
fcoml
popa
and
xor
call
push
lcall
push
int3
adc
popa
or
push
xor
push
in
or
add
rol
add
xchg
ss
mov
mov
lcall
xchg
dec
ljmp
ret
sub
xchg
iret
xchg
rorb
fcoml
fcomps
int3
mov
xchg
clc
or
test
mov
mov
mov
cmp
mov
add
hlt
fistpll
insl
xlat
sbb
aam
aaa
dec
cld
xor
loopne
rclb
ror
pop
in
xchg
int3
jno
insl
push
jne
push
and
test
jecxz
in
mov
xchg
add
add
jbe
test
sub
pushl
pop
cli
add
mov
mov
inc
push
leave
sbb
adc
add
add
and
push
push
or
das
lock
dec
or
xchg
xchg
push
mov
and
shrb
lahf
jge
pop
imul
hlt
push
mov
adc
jbe
push
lock
stos
rolb
push
jne
imul
or
or
clc
or
sbb
push
scas
movsb
jbe
add
push
adc
or
jg
push
inc
js
ds
mov
xchg
insl
test
dec
push
nop
aaa
loopne
jbe
push
push
jne
xchg
pop
call
dec
ljmp
sbb
mov
shl
add
pop
mov
mov
addb
outsb
mov
stos
push
push
pop
stos
and
cmp
sbb
add
and
cld
data16
push
push
frstor
or
cmp
adc
mov
mov
test
push
or
pop
push
in
dec
aaa
mov
or
in
mov
mov
aam
es
mov
cmp
and
or
test
ror
xchg
sbb
sarb
leave
xchg
call
addr16
xchg
loopne
cmp
out
or
sbb
lahf
mov
mov
cmp
sar
lahf
lea
pusha
and
pop
ja
or
mov
xchg
xorb
push
sarb
add
sar
pop
lods
movsb
add
jbe
xchg
push
sub
jo
mov
or
lret
movsl
mov
loopne
sbb
pusha
xchg
mov
lcall
or
sbb
into
dec
pushf
mov
or
add
setg
jb
sbb
or
dec
add
xor
sti
mov
adc
push
mov
mov
clc
adc
push
imul
cs
dec
lock
ja
movsl
mov
mov
leave
test
pop
orb
jbe
movsl
hlt
hlt
stc
rcr
push
add
push
sbb
push
lock
insl
and
jo
test
mov
fsubrl
jbe
sbb
adc
and
in
ss
js
add
movb
inc
xor
movsl
jecxz
xchg
shl
incl
jae
fisubl
imul
sub
js
xchg
es
out
adc
mov
js
mov
dec
sbb
btc
das
add
sbb
sbb
out
inc
mov
inc
je
mov
push
or
add
nop
push
repz
adc
push
adc
icebp
mov
adc
inc
iret
rcr
and
arpl
inc
inc
xorl
or
mov
xchg
lahf
aad
gs
testb
in
sbb
or
lock
es
add
fdivl
add
xchg
or
addr16
in
imul
insl
cmp
or
mov
nop
jmp
into
cmp
sub
mov
mov
mov
mov
clc
cmp
mov
adc
movsb
jo
mov
push
pop
enter
mov
jecxz
ret
mov
sub
lds
imul
pop
mov
inc
lods
xlat
sbb
pop
lret
mov
dec
mov
mov
xor
jp,pt
mov
je
pop
cmp
pop
cmp
pop
ret
out
push
sbb
lcall
jo
add
pop
gs
mov
adc
jmp
mov
outsb
je
arpl
pop
lock
fsubrs
je
test
sbb
into
lds
and
scas
test
rorl
mov
gs
xchg
xchg
dec
xchg
push
or
adc
xchg
mov
cwtl
lds
les
test
or
add
push
add
xlat
sbb
shlb
movsb
addr16
mov
xlat
out
xchg
hlt
jmp
cmp
jle
popa
mov
jl
and
pop
push
sub
mov
bound
and
add
dec
nop
std
shr
push
push
insb
push
dec
or
mov
or
fiaddl
adc
ja
sbb
xchg
sub
pop
insb
test
sbb
mov
loopne
mov
and
jne
mov
dec
mov
scas
data16
data16
adc
sbb
inc
push
sbb
aas
sub
inc
mov
lea
cmpsb
push
add
mov
sbb
dec
lret
cld
pusha
cld
or
adc
mov
push
inc
daa
add
jno
sbbb
arpl
xorb
and
dec
or
push
push
into
fisubrl
mov
bound
in
in
adc
dec
adc
loope
inc
inc
ss
cmp
push
cltd
ret
add
outsb
dec
sbb
or
mov
pop
jl
jae
add
fwait
push
mov
neg
mov
dec
or
shll
jnp
or
sbb
hlt
les
mov
mov
or
dec
push
lea
sbb
cmp
push
inc
stc
cltd
push
test
add
call
mov
clc
repnz
sahf
add
in
adc
mov
mov
inc
mov
mov
imul
into
orb
or
dec
shlb
xor
jmp
movsb
mov
movl
or
andb
std
jo
push
repnz
sar
ret
iret
imul
std
mov
sub
shrl
movsb
inc
push
sub
add
and
mov
mov
and
pusha
or
or
add
ret
sti
in
jle
cmp
js
dec
sub
pop
rol
add
xchg
mov
lret
adc
test
imul
into
pop
push
dec
test
dec
cs
xor
push
mov
roll
jo
sub
cmp
jle
aam
sub
rcll
dec
ljmp
jle
cmpsl
das
lret
pushf
sub
lret
daa
rorb
in
jg
jmp
sub
loopne
js
xchg
aas
jmp
pop
int
fldcw
daa
cmpsb
mov
mov
adc
xor
add
in
inc
movsb
les
in
movsl
call
mov
mov
push
fcmovb
xor
and
movsb
adc
adc
xchg
mov
jge
or
leave
rolb
mov
lcall
push
shll
cltd
jge
les
cmpb
xchg
mov
xor
in
mov
dec
inc
mov
or
add
sbb
sbb
mov
pop
popa
xchg
addr16
add
int3
int3
jnp
mov
mov
adc
xchg
negb
xlat
sar
les
test
mov
or
add
dec
clc
mov
mov
addb
into
xchg
dec
dec
scas
mov
sbb
scas
in
fwait
cmp
jl
fisubl
push
je
cmp
and
clc
adc
js
movsb
xchg
jmp
push
cs
out
addr16
fmuls
push
push
adc
rcrb
cmp
and
icebp
into
mov
adc
adc
jae
add
cwtl
pop
sub
pop
mov
add
pop
dec
test
vpmuludq
pusha
jbe
les
dec
mov
call
mov
call
sbb
cmp
out
rclb
cmp
sbb
mov
out
push
imul
out
or
pushl
insl
and
mov
call
lahf
xchg
test
jp
add
loop
fdivs
mov
inc
add
cld
push
cmpl
xchg
or
adc
adc
add
out
loopne
push
loopne
pop
lods
gs
loopne
add
es
sub
ljmp
imul
or
in
nop
outsb
pop
mov
and
sub
sbb
pop
inc
outsl
dec
pop
sbb
xor
mov
mov
inc
dec
pop
adc
inc
mov
jno
jb
mov
add
nop
inc
ret
cld
add
sbb
jbe
les
add
call
dec
insb
add
add
jmp
xor
and
mov
ficoms
loopne
std
pop
cmp
xchg
push
fmuls
jmp
mov
push
in
add
and
mov
mov
mov
cmp
push
subl
addr16
cmp
roll
cmp
sub
lea
sub
aad
mov
enter
sar
add
mov
ljmp
fldenv
es
adc
mov
pop
addl
mov
movsl
into
in
push
ds
daa
xchg
push
jo
sbb
sub
push
add
cmp
mov
jb
lock
xchg
mov
je
xor
inc
mov
mov
inc
inc
sbb
out
jb
cmp
mov
rol
loop
test
in
mov
std
shlb
add
ret
and
cmc
jo
shl
sbb
pop
lods
inc
jb
mov
roll
mov
sub
jne
push
and
dec
imul
inc
adc
or
fxch
mov
js
push
icebp
adc
js
sahf
pop
push
ret
xor
cmp
jne
ss
ds
xchg
xchg
adc
hlt
sub
mov
int3
push
out
jb
xor
test
cmp
mov
and
add
jle
mov
or
push
mov
call
push
push
gs
nop
jg
push
or
outsb
adc
inc
stos
push
xor
or
ret
popa
imulb
ret
or
add
xor
aas
sbb
pop
fimuls
movsb
push
xor
mov
adc
mov
stos
les
add
sti
sbbb
cld
dec
dec
sub
xchg
lods
push
add
push
or
icebp
out
call
sub
icebp
dec
mov
and
xor
and
add
jb
hlt
add
jo
jmp
and
das
xor
js
mov
and
out
add
sbb
sub
push
dec
inc
pop
out
subb
xchg
inc
and
fcomps
cli
lock
rcrb
xchg
sub
and
aaa
out
dec
inc
loopne
lock
test
jae
mov
pusha
cmp
dec
adc
icebp
test
mov
xor
into
lahf
xchg
xor
sbb
add
enter
push
sub
push
pop
arpl
or
outsb
test
cld
mov
ja
push
jmp
sub
mov
dec
mov
lock
mov
and
lcall
fnstcw
daa
inc
cmpl
jne
push
cmp
je
mov
fmulp
das
nop
xlat
inc
sbbb
jnp
and
pop
and
jnp
mov
shlb
mov
test
hlt
int
lods
dec
movsl
fdivl
xor
xchg
rolb
cmpsl
xchg
mov
iret
ret
fistpll
les
sbb
enter
pop
add
pop
bound
cmp
icebp
out
xorb
pop
ja
test
push
test
call
jmp
rcrb
test
mov
imul
mov
or
adc
dec
leave
fistpll
ja
mov
nop
dec
push
jmp
iret
mov
add
sahf
dec
xor
aam
je
and
adc
mov
or
pop
lret
mov
add
sbb
mov
inc
les
mov
and
cltd
pusha
lret
sub
jecxz
inc
cmpsb
jge
scas
and
jmp
xchg
mov
loopne
icebp
xchg
push
inc
js
nop
inc
rcr
cmp
pop
ret
mov
adc
and
jnp
add
outsb
mov
inc
cmp
xor
fcmovb
lods
jg
jb
daa
daa
daa
daa
inc
cmp
xor
daa
sbb
daa
adc
xchg
orb
xor
xchg
pushf
push
rcrl
movb
lea
mov
leave
add
loopne
ljmp
xchg
jb
xlat
lods
jge
clc
movsb
xor
push
adc
mov
cmpsl
repnz
xchg
ret
mov
dec
pop
push
test
jg
call
int3
mov
int
or
xchg
int3
mov
out
and
call
fsubs
outsb
and
sub
enter
std
add
mov
iret
insl
and
xchg
add
in
ja
inc
scas
pop
idivb
sbb
push
repnz
xchg
in
cmpsb
fistl
cli
mov
mov
mov
adc
loopne
out
shrl
in
xchg
adc
nop
mov
cmp
xchg
mov
mov
xor
pushf
mov
lods
in
pop
out
ja
lret
cltd
mov
enter
nop
lods
lret
mov
pop
call
push
fcompl
lods
pop
dec
daa
adc
nop
fmuls
dec
mov
xor
je
test
enter
fs
cwtl
ljmp
pop
decl
xor
jne
fmul
adc
movsl
xchg
in
xor
fmul
adc
aam
jmp
nop
in
jne
dec
xor
aam
in
aad
xchg
push
jbe
lock
daa
pop
movsb
mov
dec
lods
dec
call
add
sahf
pushf
mov
or
cmc
xchg
outsb
lea
pop
in
lcall
add
lods
push
and
mov
adc
add
pop
xchg
cmp
dec
cmp
fs
lea
jae
mov
ror
mov
movsb
xchg
sbb
cltd
clc
xchg
ret
sbb
jne
leave
add
rcr
adc
xor
adc
inc
and
jmp
pop
sti
push
ret
inc
cli
xor
dec
adc
and
mov
add
rolb
dec
add
or
hlt
and
adc
aad
out
cltd
cmc
test
lds
pop
add
dec
negb
add
add
or
cmp
and
ljmp
pop
nop
int3
adc
sbb
mov
jne
push
inc
fisubrs
push
nop
sbb
rol
add
jl
mov
xchg
sbb
push
fisubrl
add
add
jp
dec
into
mov
dec
xchg
mov
movsb
je
jle
lock
or
mov
or
push
or
adc
test
rorl
xchg
xor
jb
stos
ljmp
sbb
mov
iret
add
mov
or
or
add
shr
jle
sub
mov
mov
inc
in
fbstp
add
or
out
nop
ret
sbb
xchg
add
cmp
outsl
add
mov
jmp
xor
test
cli
mov
or
or
mov
add
ja
add
push
cli
bound
inc
add
xchg
adc
and
out
mov
loopne
ficoms
push
out
movsb
cmpsl
in
adc
in
add
ja
sub
cmp
push
push
imul
inc
mov
mov
int
out
lcall
mov
orb
mov
lahf
shrb
dec
cld
and
xor
popa
push
push
pop
mov
jo
jmp
lret
jle
test
pop
mov
mov
rorb
sbb
mov
es
fidivl
es
sbb
and
fadds
add
pop
jb
lods
dec
addl
sub
mov
inc
fsubs
outsb
jg
cli
mov
xchg
loope
sbb
jnp
cltd
inc
pusha
xchg
gs
mov
add
sbb
jecxz
adc
jnp
hlt
or
xchg
mov
dec
out
insb
push
subb
push
pop
cmpsl
shll
push
mov
cltd
mov
jb
cmp
jne
movl
inc
mov
cmp
std
jne
jmp
sub
cmp
add
xchg
pusha
fst
jmp
ja
xor
add
inc
test
jo
fisubrl
xor
push
push
or
xor
out
test
mov
xor
pusha
xor
jp
loopne
add
cmp
into
jb
or
les
aam
cwtl
mov
cltd
stos
mov
insl
push
or
and
aaa
outsb
push
mov
pop
icebp
stos
push
aas
rolb
jnp
dec
sbb
jae
cmp
jbe
jp
shl
jne
jl
shll
push
sbbb
leave
inc
imul
imul
and
in
jo
sub
sub
pop
cmp
loopne
cmpb
inc
lods
or
cmp
ljmp
add
jg
sbb
loopne
xorb
sbb
inc
movsb
xchg
xchg
and
lock
mov
andb
and
out
in
cmpsl
pop
out
dec
jne
mov
xchg
stos
lods
sbb
pop
xor
sbb
jle
in
jno
or
inc
jbe
mov
add
jne
adc
stos
mov
jmp
mov
push
jnp
cmpsl
cmp
into
clc
push
enter
or
push
inc
sbb
daa
mov
addl
xchg
pop
mov
in
testl
cmp
sbb
nop
pusha
sub
jp
xchg
test
movsl
pusha
pop
jno
pop
mov
dec
pop
jo
dec
sbb
cmp
push
sbb
pop
push
std
dec
cmp
xlat
testb
insb
ljmp
add
sbb
pusha
push
or
dec
les
or
dec
or
push
cmp
frstor
clc
clc
add
in
fmuls
sti
sub
jmp
xor
dec
sbb
mov
mov
jne
movsb
jmp
aad
out
cmp
ja
pop
sbb
es
push
pop
ljmp
mov
jmp
sbb
cmp
dec
mov
pusha
loopne
pop
add
mov
cmpl
lods
bound
and
xor
xorl
in
rol
inc
jp
xchg
pop
push
or
xorb
rclb
lea
or
push
jg
cmpl
cwtl
popa
mov
cmpl
ret
sahf
xchg
jo
adc
adcb
mov
sub
je
lea
mov
add
xor
and
sub
xchg
add
scas
repnz
and
je
sarb
push
lds
rcrb
pop
adc
pushl
das
inc
mov
cltd
cmp
das
testb
inc
sbb
lret
les
shlb
mov
push
inc
fcmovu
rcrb
cwtl
rclb
add
pop
mov
cmp
ljmp
jle
jg
cmp
dec
faddl
or
imul
mov
lods
and
pop
aad
jg
add
add
test
xor
adc
push
mov
fisttpll
ficompl
addr16
cmpsb
pop
push
or
push
mov
push
clc
movsb
sbbl
jb
lock
into
stos
push
js
push
sbb
jo
adc
sarb
insb
leave
mov
pop
add
mov
xchg
dec
or
dec
jb
ret
or
cmpsb
cmp
test
sub
adc
and
fsubrs
mov
fsubrl
ret
sbb
popa
dec
jnp
push
push
push
pusha
cmpsb
or
mov
jo
rol
cs
mov
mov
sub
pop
data16
push
jo
xor
inc
or
add
push
cs
fwait
mov
inc
xchg
inc
mov
push
push
bound
cs
mov
repnz
push
xor
xor
imul
ret
cmp
into
xchg
mov
or
cmp
clc
xor
xchg
push
dec
sbb
push
pop
push
mov
adc
pusha
dec
iret
jnp
mov
or
xor
shl
pop
icebp
mov
sti
iret
inc
push
outsb
rorb
adc
mov
fs
and
jns
push
es
push
sbbl
enter
inc
inc
dec
adc
sub
pop
cmp
les
sbb
cmpsl
bound
jmp
push
dec
mov
mov
es
jbe
daa
add
and
pop
cmp
pop
adc
xchg
scas
popf
fisubs
nop
mov
jg
jge
or
push
fxch
inc
adc
or
push
in
push
mov
jo
les
fmul
gs
data16
in
sub
gs
jae
adc
aas
push
and
mov
mov
loope
jbe
rol
sub
ja
mov
stos
and
cli
fwait
or
into
xorb
jb
enter
inc
pop
fcmovnu
adcb
pop
mov
or
xchg
arpl
lds
push
inc
ffreep
jne
cmp
enter
xlat
xchg
sbb
mov
mov
pop
pop
mov
push
or
pushf
xchg
adc
mov
add
sub
sub
jg
mov
bswap
sub
xchg
js
cmp
pop
adc
mov
dec
jecxz
or
and
movsl
test
pop
cmp
lahf
add
sub
lsl
sbb
or
and
add
out
sub
pxor
push
push
add
rcl
or
gs
jle,pn
jg
call
push
sub
mov
jg
push
inc
adc
and
inc
inc
mov
jo
mov
dec
or
mov
jne
shlb
outsb
lods
mov
lea
or
xor
mov
je
add
fdivs
fldt
mov
sub
jne
ss
sbb
cli
pop
pop
ret
outsb
adc
and
adc
ljmp
shll
add
cli
shr
add
dec
push
lcall
roll
test
ret
clc
dec
sarl
or
sub
or
pop
testb
cmpsb
outsb
adc
adc
add
xor
loopne
test
inc
mov
push
bound
jg
mov
shll
enter
adc
or
icebp
or
fistpl
xchg
add
pusha
rol
movsb
push
comiss
loopne
in
inc
dec
mov
sbb
cmp
adc
loope
mov
sbb
push
add
and
sub
mov
fcoml
add
adc
xorl
dec
bound
xorb
push
xlat
fmull
scas
add
inc
or
orb
int
push
fldl
or
lahf
push
je
adc
jns
in
sub
add
and
mov
arpl
jno
xchg
out
js
cmpl
repnz
sbb
mov
leave
lods
into
das
and
pop
stc
outsb
dec
sub
dec
add
and
sbb
rorb
adc
pop
andl
push
push
push
adcl
cmp
xor
inc
std
mov
flds
sbb
xchg
cld
and
push
jmp
cmpsl
xor
das
sbb
xlat
ror
imul
mov
jmp
mov
cs
push
in
fmul
or
pop
adc
aam
js
and
fmull
fstl
mov
push
adcb
insb
jno
xor
mov
sbb
push
cmp
jns
iret
dec
ror
pop
mov
push
gs
out
outsb
push
ja
mov
mov
pusha
add
andb
cmp
dec
jbe
mov
lock
inc
push
or
xor
push
push
icebp
nop
clc
inc
push
mov
add
dec
xchg
sbb
and
bound
mov
pop
push
ja
std
bound
cltd
jmp
inc
faddl
or
or
jmp
test
and
inc
in
pop
fucompp
and
sti
iret
mov
xchg
and
ret
and
push
push
test
mov
pusha
add
mov
push
xor
fst
scas
fsubrl
jno
test
fdiv
xor
xchg
xchg
and
pop
pushf
mov
sbb
jl
add
jg
xor
jle
mov
sbb
sub
mov
sbb
shlb
je
jmp
bound
add
loopne
ret
nop
popl
js
cmp
adc
adc
into
insl
pop
mov
inc
or
xchg
lret
lret
test
js
pop
sarb
mov
std
leave
fdivrl
test
dec
lock
movsl
pop
mov
mov
push
adc
inc
test
incb
mov
add
hlt
lods
fwait
cmpsb
stc
psubsw
or
dec
ret
clc
pop
push
outsb
jno
idivb
mov
mov
or
mov
xchg
out
push
cmp
add
daa
fs
les
dec
xchg
daa
call
je
out
das
daa
mov
test
fnstenv
pop
sbb
mov
lret
int3
shl
jl
dec
sarb
pushf
jno
dec
scas
push
inc
jne
or
add
sub
dec
add
imul
pop
and
adc
mov
dec
neg
add
lea
mov
subb
popa
mov
lret
inc
xor
xor
adc
call
clc
pop
shl
call
mov
or
or
cmp
lds
push
dec
aas
insb
jne
inc
sub
pop
daa
bound
adc
pop
add
ss
cmpb
lahf
mov
ja
or
idivl
inc
xor
pop
inc
loop
rclb
mov
imul
xor
cmpsb
jne
js
pop
push
ds
andl
inc
js
punpckhbw
test
cmp
in
pop
xor
subb
lea
lret
or
cs
scas
sub
pop
arpl
fs
or
ret
pop
mov
or
out
jle
push
or
movb
mov
mov
aad
mov
ret
ret
dec
push
mov
cmc
int
lds
sub
in
inc
icebp
cwtl
add
pop
cmp
inc
es
cwtl
xchg
stc
add
jo
dec
sbb
test
imul
or
xor
mov
push
jns
daa
mov
add
add
xor
mov
cld
movsb
roll
int
icebp
push
push
push
push
imul
mov
mov
lea
aaa
jno
dec
aaa
dec
sub
testb
sub
cmpl
das
pop
loopne
or
push
or
inc
mov
adc
mov
mov
cmp
xorb
add
mov
into
nop
cmp
lcall
std
and
or
cs
mov
into
cmp
icebp
push
jnp
cmpb
jno
leave
addb
xor
xor
rcll
shlb
push
jne
subb
popf
fldl
jp
mov
jno
mov
mov
movsl
inc
xlat
add
mov
inc
dec
shlb
pop
sub
popf
mov
or
ret
repnz
mov
mov
mov
fs
adc
xchg
lea
mov
sbb
sub
sbb
cmpb
xor
add
cmp
sbb
xchg
add
dec
sub
mov
push
in
xchg
mov
fnstcw
daa
push
add
dec
push
dec
sbb
xor
or
aas
shl
mov
pop
popf
push
ret
sbb
adc
lcall
fwait
push
mov
push
xchg
adc
inc
outsb
adc
sarb
daa
adc
lock
xchg
and
lcall
hlt
mov
enter
xchg
adc
adc
inc
repz
js
add
bound
mov
mov
out
jns
xchg
aas
dec
lea
dec
and
mov
xor
lahf
inc
jl
pop
dec
xchg
add
pop
inc
push
shll
sbb
notb
lcall
sbb
inc
pop
sub
or
jnp
movl
or
xor
ds
cmpsl
and
mov
dec
mov
lcall
fisttps
push
lods
mov
loope
daa
call
sub
add
lds
jne
jmp
fwait
mov
mov
dec
lahf
fstpt
sbb
jl
or
mov
je
push
push
mov
sbbb
push
rorb
push
aam
int3
nop
popa
or
mov
ret
push
sub
enter
jge
aas
jp
jmp
int
adc
iret
inc
mov
inc
pop
imul
and
pop
and
dec
or
daa
pop
mov
or
fcoml
mov
mov
in
add
mov
js
mov
sub
push
pop
sub
xor
das
sub
roll
fmul
push
or
push
enter
roll
cmp
testb
push
rcr
jns
dec
lcall
add
or
jecxz
push
clc
mov
pop
adc
and
in
dec
lock
les
sub
int
lcall
out
adc
out
popa
mov
or
mov
aam
or
mov
push
leave
inc
xor
and
mov
outsb
sub
shrb
pop
xor
sbb
and
loopne
xor
jecxz
rcrb
aam
or
out
int3
dec
jb
xchg
xor
xchg
int3
mov
dec
jne
push
add
stos
leave
xor
xor
jbe
addr16
jno
push
mov
pop
add
rorl
ljmp
aad
and
pusha
aad
movsl
insl
jne
repz
xlat
scas
outsb
insb
out
mov
xlat
jb
jecxz
xor
jecxz
dec
xlat
sbb
mov
xlat
adc
and
inc
xlat
inc
inc
mov
in
pusha
inc
inc
inc
aad
lds
ret
inc
aaa
add
mov
cmpsb
nop
sub
jbe
push
fldl2e
fs
lret
repz
mull
mov
inc
push
jb
jns
iret
int3
call
xor
fildl
test
es
cmpsl
inc
push
dec
movsb
aam
pop
stos
movsl
and
cmp
outsb
fcmovnbe
pop
pop
push
lods
outsb
cwtl
daa
xchg
dec
in
fsubrs
xchg
xchg
fstl
aad
adc
inc
mov
stc
aaa
add
mov
mov
shll
or
pop
lods
mov
pop
and
mov
sbb
movsl
dec
rorb
enter
xchg
mov
mov
cmp
sarl
push
add
push
enter
movsl
inc
jb
arpl
dec
pusha
fdivr
cwtl
xchg
leave
jne
iret
jecxz
fcompl
dec
iret
push
sbb
xor
movsb
test
push
jb
test
pop
enter
lods
minps
sbbl
rorb
sbb
hlt
adc
out
pop
lcall
add
push
jns
and
sub
jae
ss
push
or
or
push
mov
or
add
pop
sbb
addb
adc
pop
sbb
push
and
pop
mov
mov
sbb
xor
dec
sub
mov
or
pop
pop
push
jo
or
lods
lret
movb
in
scas
aaa
call
xor
jl
scas
sti
pop
push
or
hlt
sbb
movsl
add
ds
push
jmp
ljmp
out
add
stc
cwtl
add
sub
mov
mov
dec
xlat
and
cmc
push
aam
insl
test
mov
add
movsb
movsl
xchg
jge
xor
add
sar
test
push
inc
cltd
pop
jne
or
enter
mov
jno
cld
or
or
mov
stos
sbb
dec
call
inc
inc
inc
push
ficompl
sub
add
adc
or
cmp
or
fmuls
inc
dec
inc
fdiv
enter
ja
add
shr
je
cld
fwait
clc
jl
dec
std
outsl
push
push
dec
adc
push
and
jns
cmpsb
dec
and
dec
push
pop
test
out
outsl
inc
or
jbe
jle
repz
stos
dec
outsl
ja
jo
mov
loop
les
pop
dec
sahf
sub
in
adc
and
jbe
lea
inc
out
mov
shll
mov
xor
dec
cli
add
test
inc
inc
push
negl
ret
mov
adc
shrb
lret
ret
mov
shr
addl
add
or
xor
pop
push
clc
push
add
jae
push
inc
xor
mov
push
add
or
fistl
xchg
add
add
sub
add
dec
or
sarl
adc
push
push
add
sub
inc
into
mov
xchg
mov
add
jmp
sbb
xchg
xor
daa
adc
xor
pop
insb
insl
adc
les
cmp
inc
jne
pushl
cld
sub
cmp
cmp
je
cmp
and
or
sub
cmp
pop
xchg
add
ljmp
loope
and
dec
pop
subb
cmp
lret
fwait
mov
mov
icebp
clc
mov
jae
xor
mov
test
mov
cli
mov
and
and
pop
les
clc
rorb
mov
adc
test
xchg
ret
andl
or
stc
mov
fldl
sub
adc
or
stc
fadds
cmpl
pop
subl
inc
test
xchg
test
push
push
mov
ds
lret
cmp
mov
cmpsl
imul
test
test
shll
shlb
pop
rcll
sub
sahf
pop
loop
jno
jl
mov
mov
jo
adc
sbb
mov
sbb
mov
adc
mov
rcll
or
inc
mov
mov
fsub
push
movl
or
insb
cmp
movsl
xchg
cwtl
lods
cmp
and
out
mov
clc
sub
fsubr
inc
pop
dec
adc
js
gs
test
pusha
fldpi
xor
js
dec
pop
mov
shlb
add
ss
inc
pop
mov
jne
mov
add
incl
inc
and
jo
or
pop
jmp
bound
dec
out
dec
adc
or
add
adc
imul
in
adc
xchg
shl
stos
ret
xor
xor
inc
push
or
jns
and
insl
rcrl
add
lock
gs
lock
cld
enter
or
jne
dec
movsb
testb
cltd
dec
sub
jle
neg
movsl
das
addr16
add
add
call
adc
es
jp
add
inc
cs
je
lcall
imul
or
mov
and
and
lods
or
cld
push
ljmp
pop
sub
inc
jle
in
jae
push
cld
add
sbb
push
adc
or
andl
mov
jno
adc
push
cli
push
loopne
and
ds
inc
jge
fisubl
pminsw
sbb
xor
icebp
mov
idivb
mov
pusha
xor
clc
add
pop
sub
dec
jbe
pop
clc
int3
mov
inc
popa
push
xchg
xchg
add
jb
push
scas
add
jae
lea
add
add
adc
lods
inc
xchg
sub
sub
daa
orl
jmp
enter
shlb
inc
lods
add
xor
mov
dec
or
out
mov
fsubp
into
js
push
outsl
sbb
cltd
dec
clc
push
scas
mov
lea
push
fldenv
or
jbe
mov
loop
sbb
loope
pop
and
cmp
sub
inc
push
pop
push
int
sar
jg
mov
nop
pop
mov
loope
daa
test
mov
dec
mov
movw
mov
adc
movb
push
mov
xchg
pop
dec
inc
or
add
int
push
push
add
cmp
jl
pop
sub
add
push
add
js
add
add
mov
pusha
jo
outsb
cmp
movsb
or
icebp
out
mov
addl
ja
mov
faddl
add
pusha
pop
orb
add
cmp
or
nopl
into
sub
shll
cmp
lds
adc
push
jg
fstpt
insb
call
pop
push
orb
push
pop
test
fmuls
xchg
mov
or
pop
ret
cmp
clc
add
xor
jmp
mov
or
sbb
jbe
push
test
inc
jo
sbb
dec
sub
adc
mov
xchg
out
jmp
xor
push
orb
jmp
movb
rorb
pop
jmp
lea
push
adc
cmc
push
jnp
jmp
sub
push
insl
dec
add
xor
mov
js
ret
inc
jmp
aam
adc
in
insb
lock
je
push
mov
movl
xchg
xchg
add
add
enter
push
add
jne
js
pop
idivb
mov
add
dec
and
outsb
aam
cwtl
cwtl
or
lret
pop
inc
imul
ss
out
mov
orps
loopne
adc
adc
sti
or
shlb
push
jns
cmpsb
sub
xor
inc
and
mov
paddusb
repnz
lock
aad
adc
sbb
cmp
es
pop
mov
jne
out
repz
mov
or
and
push
lret
pusha
dec
imul
test
jb
jae
mov
pop
ret
mov
dec
lahf
mov
in
pusha
push
jnp
lods
int3
sbb
pop
push
nop
popa
out
sub
push
lock
jecxz
or
sub
lea
daa
pop
inc
sbb
movsl
xchg
enter
in
sub
push
inc
rorb
xlat
xchg
test
fisubl
push
and
in
jb
pop
sbb
addr16
lret
add
push
add
jnp
fs
enter
cmp
cmpsb
push
cmp
adc
add
stos
or
lock
or
add
inc
xor
push
xor
idivb
inc
adc
jge
iret
in
cmp
inc
dec
jns,pt
pop
inc
dec
inc
js
dec
push
push
adc
cmp
push
xchg
or
inc
adc
pop
fnclex
sub
dec
mov
add
in
icebp
movsb
add
xor
push
ja
sub
inc
adc
rol
js
xchg
xor
xchg
shlb
pop
jne
pop
add
adc
xchg
mov
jns
call
mov
mov
nop
roll
mov
mov
push
jmp
jmp
fstl
cmpsb
stc
movb
cmpsb
ljmp
movlps
cmpsl
aad
or
push
pop
lea
fwait
xchg
sbb
stc
mov
sbb
pushf
add
enter
mov
insb
or
dec
adc
loope
sarl
out
pusha
add
push
adc
ss
in
mov
sbb
dec
hlt
jge
inc
push
sbb
clc
outsb
sbb
or
inc
dec
imul
int
xchg
data16
sub
sbb
cmp
mov
add
insb
data16
push
cmp
std
inc
scas
adc
xchg
mov
and
add
inc
adc
loope
lods
sbb
in
jecxz
out
jo
inc
fcmovnbe
loopne
pusha
popa
pop
xchg
xor
and
mov
sbbb
cmc
add
xor
mov
jno
jno
mov
sub
xchg
mov
mov
inc
or
or
sub
sub
sbb
sahf
testb
clc
lock
or
lret
loop
pusha
lods
and
insb
mov
insb
or
push
mov
push
mov
cmpsl
out
push
pop
rolb
mov
gs
and
sub
xchg
lock
je
mov
sbb
add
enter
es
mov
and
jb
add
fwait
lock
pop
xchg
fadds
ret
sub
cmc
add
jmp
add
jle
rcl
push
or
jmp
or
adc
push
lock
jnp
out
ret
mull
lsl
jmp
push
pop
push
push
mov
jg
inc
shr
rcr
shr
rcr
or
mov
repz
lahf
sub
jno
fs
out
jg
outsb
pop
jb
cmp
or
cmp
or
xor
and
cmp
add
fiaddl
lret
cs
fxch
pop
ret
adc
sbb
xor
inc
sbb
pcmpeqd
lea
imul
xor
lea
sti
mov
jne
in
xorb
imul
sub
out
jecxz
into
or
xchg
or
addb
inc
lock
add
out
cmp
cmp
add
mov
stos
cmp
dec
scas
ja
mov
dec
js
testb
or
and
inc
xlat
pop
les
and
xlat
mov
jmp
add
into
mov
mov
push
shlb
add
rolb
or
js
jmp
insl
out
leave
loopne
push
xor
sbb
or
in
mov
loop
jmp
dec
and
insl
pop
lret
xor
push
ret
mov
rcll
add
or
jmp
sub
je
pop
push
aad
dec
inc
aaa
push
pop
lret
sub
js
jo
add
cmp
ret
mov
adc
add
mov
jne
sbb
bound
xchg
add
mov
jmp
inc
cmp
pop
pop
xor
pusha
addb
add
mov
rcrl
lock
fiaddl
mov
roll
pop
dec
and
inc
cmp
shrl
push
mov
adc
or
pop
and
and
or
lret
fdivrl
nop
adc
ret
faddp
xchg
fidivl
add
loopne
pop
add
sbb
in
jmp
dec
cmp
test
and
mov
cs
adc
lock
sub
sub
sub
mov
movsb
add
cwtl
push
fcom
cli
push
inc
cmpsb
push
movb
jne
inc
je
add
xor
les
push
push
adc
push
xor
sub
pop
lcall
push
mov
cmp
push
mov
inc
jb
add
out
in
add
stos
or
and
or
cmpsl
adc
mov
fimuls
or
or
sarb
add
inc
cmp
mov
sub
cmp
ret
push
je
mov
sub
aam
add
cmp
jmp
fucomi
or
fdiv
push
lahf
push
inc
add
push
or
data16
shlb
mov
jmp
adc
sbb
outsl
push
mov
adc
adc
and
sub
cmp
adc
push
rorb
jmp
fcompl
dec
mov
aam
loopne
push
test
and
fidivl
jnp
dec
xor
push
mov
movb
lock
inc
sub
nop
out
out
cmpb
push
or
adc
sub
xor
cmp
inc
jmp
or
in
mov
lds
jbe
jne
imul
add
push
xorb
push
mov
adc
cmp
sbb
xchg
add
js
sarb
fcomps
je
dec
mov
dec
je
mov
mov
inc
lock
pop
fadds
xor
shll
jne
push
pop
xor
xor
jne
push
adc
and
or
incl
mov
dec
jo
stos
into
mov
pop
mov
adc
adc
gs
cmp
jge
addr16
inc
mov
jae
add
and
jae
push
and
mov
xor
jl
pop
addl
add
and
mov
sub
stc
xor
pop
inc
rorb
jp
hlt
add
psubd
push
sbb
pushf
or
les
and
and
iret
idivb
and
hlt
sbb
xchg
addr16
loop
push
gs
and
sub
xchg
sbb
adc
orl
test
or
or
nop
dec
mov
insb
pop
lock
push
pop
enter
lret
ds
mov
arpl
add
cmp
addl
or
sub
rclb
lock
ja
sub
stc
loopne
addr16
pop
inc
and
lods
imul
or
mov
addl
mov
loop
push
add
nop
add
mov
mov
cmp
or
sbb
mov
jo
cmp
add
fistpl
subb
xor
lea
or
movsl
mov
cmp
int3
ds
sti
ret
out
subl
mov
mov
popl
xorb
inc
ret
inc
add
pop
das
ljmp
js
xor
shrb
rcrl
inc
adc
sahf
push
and
pop
inc
mov
notl
sub
jno
add
popa
mov
jno
push
or
pop
pop
loop
mov
push
push
mov
sub
mov
shrl
cmp
decb
in
ds
sub
push
push
cmp
sub
pusha
ss
rolb
insb
enter
pusha
movsb
adc
xor
push
mov
jl
lcall
movsl
add
cmp
or
aaa
je
xchg
cmp
cmp
inc
mov
sub
sub
pusha
mov
add
push
pop
popl
je
push
movsb
aas
scas
ds
mov
daa
addb
loope
mov
mov
pop
cmp
lret
fstl
add
mov
scas
jmp
out
andl
mulb
in
pop
pop
pop
and
push
sbb
pop
pop
xor
jo
add
andb
aaa
pusha
pop
test
or
cmp
push
dec
add
ds
xor
push
insb
mov
movd
and
mov
jmp
dec
incl
rcrl
pop
jo
jl
mov
dec
shl
loopne
and
clc
das
xor
or
mov
gs
orl
addb
add
dec
fcoms
mov
and
or
lods
insl
loopne
je
in
cmp
lea
add
adc
xchg
xchg
adc
adc
mov
push
and
push
xchg
int3
out
push
inc
mov
test
das
adc
lret
sbb
xchg
pop
mov
add
sbb
adc
testb
xor
faddl
ljmp
mov
popf
pushl
leave
lcall
hlt
lahf
cmp
cmpsb
lock
sub
push
outsl
cltd
daa
add
sub
xor
mov
cmc
lret
xchg
inc
mov
push
push
or
or
dec
mov
cwtl
cmpsb
imul
orb
fwait
mov
cmp
jecxz
mov
adcb
add
or
or
pop
xor
push
mov
cs
push
or
xchg
push
dec
cmp
or
lea
and
cwtl
inc
mov
dec
shlb
adc
add
add
out
or
sub
or
cmpsl
jl
into
incb
mov
movsb
andl
mov
fwait
mov
stos
popf
adc
mov
enter
push
sub
mov
inc
jle
jle
sub
cmp
xor
or
sbb
or
cmp
jbe
cmp
sub
out
add
pop
lock
test
pop
push
inc
sbb
sbb
mov
sub
fildl
insl
xchg
inc
jmp
adc
jae
add
mov
jnp
mov
nop
add
jne
nop
lret
sti
lods
out
dec
jae
imul
sbb
push
pop
cmp
and
pop
sub
xchg
dec
lea
sbb
aaa
push
bound
lahf
mov
adc
dec
cwtl
fidivl
cs
and
adc
addb
sub
cmp
mov
push
movsl
jbe
sub
mov
jne
stos
loopne
je
mov
jno
mov
data16
in
mov
dec
adc
xchg
lea
testl
testl
fnstsw
mov
inc
jmp
sahf
dec
dec
or
iret
xor
cmovl
and
and
lea
es
dec
xor
cmp
or
jecxz
jl
inc
insb
push
push
inc
jmp
cmp
inc
data16
pop
pop
xor
push
div
dec
mov
dec
push
or
pop
shl
jne
push
popa
jmp
loop
dec
popa
aad
push
fsubrs
cwtl
jge
es
repnz
mov
icebp
inc
jae
sub
cmp
cmp
fbstp
or
mov
add
jp
pop
call
idivb
mov
xor
jne
push
fiaddl
test
add
int
call
add
mov
call
pushf
imul
mov
mov
push
sarb
add
push
or
enter
inc
mov
shrb
orl
mov
iret
mov
out
mov
dec
pop
and
shll
cmp
pop
xchg
pop
inc
idivl
push
or
mov
pop
push
fnsave
mov
out
xchg
or
call
int3
out
insb
adc
mov
int
push
cs
xlat
dec
into
jle
fsubrl
ljmp
pop
cmp
xchg
push
adc
push
pop
iret
int3
xchg
dec
xchg
pop
dec
xchg
lods
push
and
nop
jbe
pop
sub
cwtl
xchg
test
push
pushf
insl
mov
mov
push
lea
lcall
or
push
loopne
cld
sub
add
repnz
adc
jb
push
add
inc
ja
shlb
mov
cmpl
insl
mov
pop
and
jg
or
jle
data16
sbb
sti
jg
add
xor
loop
and
sub
aaa
sbb
gs
call
lock
add
shrl
sahf
mov
jae
pop
mov
dec
sub
add
mov
pusha
aad
or
je
sub
sbb
jl
insb
imul
shrl
shl
shr
or
mov
sahf
dec
mov
adc
outsb
mov
mov
adc
mov
adc
and
inc
cmp
mov
sub
icebp
out
sub
rcr
fiaddl
mov
rolb
fsubrs
or
or
fisubrl
bound
sbb
mov
mov
mov
mov
loope
jl
dec
call
int3
jmp
xchg
or
jp
call
movb
and
ficomps
dec
into
jmp
lods
xchg
jmp
rol
rolb
pop
or
int3
and
and
sbb
sub
pop
jne
push
lret
das
sub
test
sbb
in
sbb
movups
inc
lods
fs
jo
mov
inc
mov
inc
mov
or
mov
or
inc
add
loop
push
pop
jl
out
nop
movsb
std
call
into
rcrl
mov
ret
jo
sub
push
mov
or
add
testb
adc
sbb
mov
dec
jecxz
stos
push
push
idiv
add
pop
int3
sbb
jne
xchg
push
popa
add
pop
cmp
outsb
je
push
int
lcall
and
int3
test
xor
rorb
lahf
cmp
pop
in
or
pop
mov
mov
mov
jne
stos
mov
adc
cld
add
push
sub
jo
push
sbb
dec
in
sbb
ret
add
sbbl
push
cs
or
mov
sub
or
xchg
pop
imulb
es
insl
imul
sbb
lcall
jecxz
cld
in
adc
mov
pop
lea
add
fadds
pushl
mov
sbb
add
lret
and
mov
mov
pop
jl
call
add
xorl
inc
popa
ret
mov
testb
call
pop
or
xlat
jmp
rorl
sub
fists
pop
jno
and
push
iret
jmp
xor
rcll
andb
pop
mov
leave
mov
cwtl
xchg
lods
movsb
ret
adc
jb
das
ss
test
push
add
rorl
xor
xchg
lret
lock
loope
or
push
sbb
push
outsl
add
std
test
push
and
dec
in
loopne
sbb
jmp
cmpsl
dec
decb
adc
in
mov
mov
push
stc
push
movsb
mov
dec
cmp
xor
sbb
or
pop
ljmp
cmp
inc
das
lahf
hlt
sbb
push
lea
add
cmp
leave
sar
mov
aas
or
cmpsb
pusha
add
or
addl
sbb
mov
mov
cmp
push
arpl
pop
dec
movd
cmpl
cltd
xor
cmpsb
push
lods
loop
pop
ret
mov
pushf
mov
jo
push
pop
pusha
dec
pusha
and
cmp
inc
pushl
mov
js
xor
fimull
pop
pusha
cmp
or
inc
push
push
ds
rorl
loope
popf
and
adc
orl
mov
mov
imul
mov
pop
mov
fsubl
mov
add
adc
lcall
adc
push
hlt
mov
andl
sbb
test
pop
xor
pop
add
or
cmp
fsubs
add
sbb
sbb
sbb
js,pt
inc
call
jmp
push
pop
cmp
lret
dec
inc
outsb
cmp
adc
hlt
in
inc
xor
or
inc
pusha
jns
cmp
pusha
enter
inc
mov
lea
rcll
add
je
dec
or
or
mov
pop
add
lea
mov
and
fstps
jl
mov
int
lods
pop
sbb
test
loopne
out
sbb
mov
inc
mov
out
add
fcoml
xchg
mov
rol
cs
enter
add
int
imul
pop
mov
pusha
and
mov
dec
je
rcl
or
sbb
add
fcompl
xor
loope
mov
jb
fldcw
cwtl
mov
inc
mov
sbb
inc
dec
xor
imul
mov
mov
shll
dec
std
xchg
lret
ss
loope
enter
xor
jae
subb
mov
cmp
jne
bts
adc
add
mov
push
adcl
adc
aad
gs
xchg
and
pop
lahf
dec
add
loopne
imull
ret
sub
sub
add
add
add
dec
dec
dec
int
andl
jbe
fs
jl
or
pop
jns
adc
fiadds
into
sub
adc
sbb
mov
pop
pushfw
std
aam
jle
add
test
sub
and
pushf
xchg
inc
and
popa
add
mov
push
mov
push
lea
or
inc
push
add
shlb
test
stos
in
and
mov
push
or
add
lods
arpl
inc
xchg
and
push
inc
xchg
adcl
push
stos
mov
es
call
mov
add
jmp
pop
pop
mov
pop
mov
movl
stos
and
xchg
aas
push
jae
adc
movsb
mov
adc
ja
xchg
add
lcall
jne
adc
sub
pop
adc
mov
fimuls
shrl
cmp
cmp
je
xor
dec
inc
and
sbb
js
in
cmpsb
or
jmp
and
push
and
push
mov
push
loopne
fdivr
xchg
cmp
pop
adcl
push
mov
add
cmp
mov
ret
call
or
orl
sbb
dec
jecxz
add
xor
add
out
or
cli
adc
add
or
mov
adc
mov
xchg
or
pushw
ss
int3
add
mov
push
inc
mull
add
mov
bound
cltd
push
mov
inc
pop
mov
pop
pushf
push
xchg
and
out
pop
fcompl
pop
mov
loopne
mov
and
cmp
xchg
dec
jae
fstpt
add
inc
andb
loop
sub
test
lea
jmp
xor
roll
sbb
dec
jle
mov
mov
mov
inc
mov
jmp
lahf
push
test
sub
cmp
jg
insb
pop
jl
jmp
addl
js
pop
fs
add
sbb
or
stos
popa
add
push
push
adc
push
jo
add
add
adc
xchg
aam
sub
mov
pop
adc
inc
or
mov
sub
jl
pop
adc
push
lds
leave
cwtl
pusha
cmp
jno
xlat
and
pushf
push
dec
add
sbb
push
dec
test
lock
lret
xor
outsl
stos
popa
jge
mov
add
add
inc
xor
loopne
push
stos
adc
movsb
push
pop
pop
pop
icebp
fisttps
inc
adc
gs
cmp
push
pushf
imul
sub
mov
push
or
add
sarl
sub
push
bound
add
data16
inc
cltd
jmp
push
or
or
adc
idivb
pop
les
and
pop
mov
adc
adc
sbb
or
and
rcrl
jo
cmpsl
testl
jle
fwait
dec
fucomi
in
push
mov
or
scas
cmpl
gs
or
or
or
cwtl
movsl
cwtl
data16
push
jne
push
aas
out
mov
pushl
leave
inc
push
or
enter
or
dec
arpl
inc
mov
xchg
jno
shlb
sub
jmp
push
std
js
ss
jne
push
push
clc
mov
dec
jnp
jne
pop
push
xchg
add
popa
pcmpeqw
loope
loopne
movsb
mov
or
rolb
pop
mov
in
arpl
jo
and
lea
mov
std
lods
pop
adc
lcall
movsl
stos
mov
mov
or
movsb
cmp
cmp
cmpb
or
outsb
outsl
mov
add
jb
imul
dec
or
fcoml
and
cmp
imul
js
mov
imul
outsb
movsl
fadd
or
cmpb
pop
sub
cmp
ror
or
jne
mov
clc
push
or
scas
rcll
or
or
push
xor
push
mov
outsb
dec
xchg
jbe
into
jmp
nop
or
or
je
out
pop
cmpl
dec
je
jae
mov
push
mov
mov
mov
ret
or
and
or
loopne
mov
sbb
pop
lds
in
xchg
mov
cwtl
jo
adc
sbb
das
or
mov
push
inc
pusha
jne,pn
sbb
rol
inc
mov
xor
jo
adc
add
cmp
mov
mov
pop
popf
lcall
ja
jle
push
icebp
or
int3
cmp
pop
jmp
cwtl
les
test
dec
sub
test
aaa
sub
ljmp
cmp
add
orl
loope
jg
loopne
dec
adc
dec
adc
add
cmpl
cs
shlb
dec
sbb
andw
jecxz
ja
bound
inc
loop
jno
push
push
sub
pop
push
out
mov
dec
mov
jb
sbb
sub
ljmp
adc
sbb
add
mov
test
lahf
push
push
push
movups
xor
add
or
add
xor
mov
dec
adc
in
mov
or
daa
push
push
ljmp
mov
add
inc
and
imul
cmpsl
mov
jmp
adcl
mov
stos
popa
ljmp
clc
shlb
ret
neg
push
add
lret
out
cmp
mov
clc
call
or
xor
add
push
push
iret
out
mov
push
cmpb
mov
rclb
out
xor
mov
sbbl
mov
notl
push
and
gs
or
stos
inc
cmp
or
xor
sub
clc
or
sub
and
stos
cmpsl
push
fsubrs
mov
jno
push
mov
lock
imulb
or
mov
mov
inc
andb
mov
rorb
in
ja
mov
aaa
and
fcompl
xchg
jp
jle
mov
out
sbb
jo
addl
dec
jl
out
rcr
or
in
add
inc
cwtl
pop
popf
add
call
or
adc
xchg
ljmp
and
arpl
stos
or
rcrb
sbb
test
adc
inc
mov
cmp
inc
dec
pop
dec
or
xor
or
mov
loop
push
push
addr16
mov
adc
enter
jns
daa
xor
jae
dec
in
and
mov
cmp
add
sub
add
fists
xchg
sbb
push
or
push
xchg
xchg
xchg
xchg
or
adc
outsb
mov
sbb
sbb
dec
dec
dec
dec
sub
xor
pop
add
cmp
inc
and
inc
cmovs
pushf
pushf
push
push
pop
add
daa
pusha
fs
daa
jo
js
idivb
and
sbb
cltd
fs
test
xchg
dec
xchg
cwtl
pushf
fs
dec
mov
and
mov
xchg
dec
enter
xor
sarb
leave
and
loopne
call
in
aam
and
dec
xor
clc
cld
add
cmp
add
add
add
shll
adc
leave
sbb
and
xor
and
sub
xor
and
xor
cmp
leave
adc
inc
gs
dec
fs
imul
xchg
dec
es
pop
pop
pusha
lods
add
je
rcrb
adc
push
adc
cmpsb
dec
mov
and
test
xor
mov
xor
imul
movsb
mov
and
xor
sbb
sbb
and
and
cmp
cmp
mov
xor
inc
rorb
dec
enter
mov
mov
pop
mov
sbb
xchg
adc
xorl
bound
rolb
or
pop
adc
push
mov
xor
lahf
push
or
nop
aam
or
pop
push
outsl
enter
pop
add
fcoms
fsubrp
xorl
lret
and
xchg
add
or
or
and
pop
out
jb
aas
mov
shll
dec
xor
adc
or
inc
outsb
and
shr
add
es
and
cmc
xorl
test
js
or
mov
in
test
adc
push
jae
bound
jo
fcmovbe
aam
insl
insl
loop
mulb
shll
and
or
sub
adc
clc
incb
bound
or
jmp
inc
cmp
outsb
and
mov
and
aaa
out
jae
jecxz
sbb
add
or
cwtl
or
or
or
and
or
fnstsw
aaa
jge
je
cmp
ja
outsl
xchg
ljmp
aas
pusha
mov
pusha
loope
adc
pop
sub
xor
inc
and
adc
fisttpll
filds
fldl
cmp
mov
outsl
mov
clc
rcll
testb
push
jns
and
adc
sti
jge
sahf
lret
add
test
fildll
and
sub
loopne
sub
mov
sbb
das
or
cld
push
inc
or
sub
push
and
lcall
or
pop
xchg
pop
testl
pop
add
pop
rorl
es
push
and
or
push
or
jmp
inc
flds
fstps
jmp
fisttpll
cmp
adc
fisttpl
xor
push
hlt
sbb
test
adc
jbe
in
pop
orl
push
xchg
popa
mov
imul
add
sti
fisubs
cmp
add
inc
test
xchg
loope
call
dec
mov
fldz
cmp
movsl
cli
mov
rolb
dec
jmp
sub
sub
jmp
sub
nop
xchg
add
push
or
push
fldcw
movsb
jns
add
adc
add
jge
xor
scas
cld
add
mov
jnp
rolb
or
shrb
mov
mov
aaa
test
xchg
add
or
jge
ffree
repz
pop
xor
in
or
pop
inc
fdivl
ss
xlat
inc
bnd
je
cld
push
mov
mov
pop
test
stos
xchg
dec
cld
cli
shrl
call
push
shrl
nop
loopne
stos
cmp
pop
or
push
rolb
adc
adcl
lcall
cmpsb
mov
aaa
rol
or
push
pop
cwtl
sbbb
and
mov
jle
push
add
sbb
testl
test
pop
lret
add
xor
and
test
add
aaa
mov
add
aam
pop
push
add
push
je
mov
aaa
push
pop
sbb
pop
imul
add
or
pop
or
sbb
sbb
hlt
mov
cltd
and
cmp
dec
sub
sub
loopne
sarl
and
pop
mov
sbb
mul
aad
pop
sarb
pop
fstpl
pop
das
in
adc
gs
adc
in
leave
dec
inc
and
push
fcomps
lock
add
or
push
test
enter
dec
cwtl
push
add
mov
jo
data16
jo
sub
pop
lods
addr16
popa
xor
xchg
lock
mov
push
inc
or
ret
add
and
fcomps
or
sbb
loopne
ja
and
push
das
ss
lods
dec
rolb
cltd
xlat
sbb
pop
pushf
arpl
sbb
jne
nop
add
out
fnstsw
jl
inc
and
push
jnp
pop
xchg
cmp
hlt
addl
mov
and
push
inc
add
sbb
outsb
adc
jmp
or
xor
add
mov
shufps
push
push
dec
cmp
enter
arpl
jg
or
sbb
pushl
and
decb
mov
xchg
fsubs
into
pop
adc
push
mov
shll
ret
xchg
insb
test
fbld
aam
enter
fld
fucomp
mov
add
fldcw
pop
out
in
pop
add
mov
xor
test
stos
cmpsb
repnz
mov
xchg
das
pop
sbb
gs
or
imul
add
or
push
push
inc
mov
pop
and
pop
xlat
mov
les
or
push
and
xchg
push
push
nop
cld
es
sub
mov
push
push
movsb
jl
sub
ljmp
adc
fnstsw
lgs
or
mov
loop
aas
sub
mov
fyl2x
and
xchg
xor
fdivrl
mov
xchg
push
push
mov
les
sub
lock
fsubs
mov
mov
inc
adc
dec
lock
pop
repnz
sbb
lea
movsb
fldpi
xor
mov
or
sbb
adc
cmp
mov
je
sbb
xorb
push
cmp
xsaveopt
pop
insl
test
mov
mov
cmp
test
or
mov
xchg
out
jmp
and
loopne,pn
insl
mov
push
jg
xchg
or
and
mov
test
mov
dec
lds
jle
jg
pop
jo
cmovae
jne
cmpsb
loopne
mov
mov
inc
cmp
push
mov
sbb
sahf
adc
push
ja
inc
mov
test
sbbl
push
pushf
add
lcall
lds
add
rolb
jo
rol
mov
sbbb
nop
lret
je
test
sub
mov
cmpsl
xor
push
inc
mov
repz
jbe
test
sub
xchg
inc
out
daa
xor
jb
or
or
sub
add
loope
push
or
mov
adc
xor
cmp
jmp
or
push
mov
cltd
mov
xchg
dec
imul
dec
push
or
jle
pop
inc
outsb
add
aas
xor
push
xchg
inc
push
and
cmp
idivb
loopne
icebp
loopne
test
add
adc
out
xchg
lock
stos
jp
pop
pop
mov
push
call
das
inc
fdivrl
inc
adc
and
pop
add
rcr
bound
adc
scas
ret
dec
js
mov
or
inc
lea
pop
mov
lret
jge
mov
push
pop
mov
lret
loop
rolb
cmpl
xchg
or
pop
repz
out
imull
or
pop
pop
and
mov
out
sub
outsl
mov
inc
adc
iret
sbb
jbe
dec
mov
add
lods
dec
or
or
cmp
sbb
sub
adc
loopne
mov
mov
jae
pop
inc
shlb
mov
sahf
jns
adc
lock
or
mov
mov
inc
or
or
pop
xor
add
xor
aaa
je
push
pop
or
mov
es
or
pop
mov
adc
xchg
xor
cmp
mov
mov
cmpl
das
clc
pop
aam
jb
loopne
mov
shl
loope
ljmp
subb
aam
pop
popf
jb
mov
and
es
sahf
or
out
push
or
and
aam
out
inc
xor
adc
xor
mov
int3
pop
in
sub
push
out
xor
je
lahf
lds
mov
or
dec
jns
mov
mov
push
rclb
inc
lods
lds
movsb
out
sbb
test
jmp
push
mov
out
int3
loopne
dec
or
inc
rcrl
dec
xor
push
cli
cmp
cmp
sub
push
jb
pop
pop
push
push
jb
or
pop
add
add
xchg
mov
xor
cmp
and
shl
hlt
push
aas
lea
cmp
lea
shll
push
xor
push
and
adc
cmp
xor
or
add
roll
loopne
arpl
mov
inc
dec
add
out
add
andl
xor
into
out
mov
lea
ror
pusha
mov
sub
mov
in
xchg
jge
sbb
cmovb
lods
shl
test
pop
aas
or
inc
or
adc
adc
adc
fdivp
xchg
stos
jb
lret
jne
and
sbbl
mov
jae
and
push
adc
push
nop
inc
xor
dec
push
sub
push
push
popf
or
push
pop
adc
pop
mov
add
dec
je
pop
add
mov
xchg
pop
adc
adc
addr16
lret
add
xor
adc
mov
jne
and
cmp
add
fmuls
mov
mov
test
push
mov
rorl
or
sub
repz
adc
push
xchg
mov
or
pop
cmp
xchg
xchg
adc
inc
cs
pop
scas
or
ss
cmp
je
or
out
mov
dec
std
decl
incb
mov
cmp
pop
jne
dec
mov
inc
inc
mov
mov
jae
xor
data16
and
fcompl
fistpll
shrb
inc
cltd
arpl
sub
xor
inc
jmp
or
dec
sub
add
adc
or
wrmsr
push
add
cs
adc
mov
dec
popf
push
add
adc
jno
fcoms
gs
ss
add
sbb
fadds
loopne
jne
xlat
imul
je
stc
fdivs
or
add
aad
stos
gs
in
inc
pop
ret
push
fstl
je
cwtl
rorb
cmp
adc
sub
js
add
mov
popf
push
clc
dec
inc
adc
aas
sub
push
cmp
sub
jle
lds
xchg
adc
add
sbb
mov
movb
add
lods
sar
dec
inc
mov
fiadds
ljmp
pop
push
adc
xor
je
dec
lea
sbb
das
mov
or
movb
fs
cltd
push
inc
add
xchg
subb
imul
add
add
inc
sbb
push
insb
sbb
jb
ret
cs
cmp
push
push
imul
jns
inc
subps
inc
xchg
push
shlb
and
pop
and
int3
push
sbb
pusha
inc
lahf
dec
cmp
add
imul
jmp
xchg
jmp
jns
cwtl
xchg
jge
xchg
outsb
or
mov
rcll
pop
lods
movsb
loope
and
push
adc
mov
xor
arpl
lret
cmp
or
sbb
and
jmp
addl
xor
add
data16
push
fadd
xchg
mov
sbb
out
mov
xor
push
xchg
test
jge
adc
and
jb
cmp
mov
xchg
xor
mov
fcomps
or
adc
or
and
xor
xchg
sahf
sbb
mov
or
or
pushf
add
call
mov
adc
pop
incb
pop
jo
cmp
jle
xor
ret
cmc
pop
adc
xchg
daa
xor
pop
and
in
cmpb
jbe
sub
add
clc
pop
test
enter
js
subb
sarl
js
in
cli
pop
mov
and
add
insb
movb
mov
push
xchg
scas
and
mov
addb
dec
ja
neg
sbb
mov
pop
loopne
jecxz
adc
jg
ret
add
call
jne
bound
xor
sahf
cmpb
xor
subb
pop
adc
mov
pop
inc
xor
mov
mov
xor
mov
or
mov
or
arpl
mov
or
mov
hlt
test
or
adc
fldl
dec
scas
and
xor
rclb
mov
bound
inc
sbb
xor
mov
jg
das
in
fs
cld
add
hlt
shrd
dec
inc
ret
adc
inc
push
dec
pop
pushf
cmp
jge
sbb
in
mov
add
fstpt
inc
into
fs
and
xor
out
and
sub
cmp
cmp
adc
inc
mov
inc
test
xor
sbb
fisubl
loop
or
sbb
adc
ja
imul
push
and
in
sbb
icebp
fisubrl
loope
movq
or
jmp
adc
mov
mov
cmp
sarl
insl
loope
test
push
sbb
hlt
xchg
inc
cmp
mov
push
lock
sarl
push
jg
mov
fs
xor
inc
and
xchg
imul
jb
or
dec
and
add
imul
loopne
or
jnp
stos
inc
inc
and
ja
js
movsb
test
or
cmp
mov
adc
add
mov
movl
loopne
sbb
jo
sbb
push
sbb
sbb
push
jmp
lock
movsb
adcl
mov
notl
xchg
inc
or
js
sahf
jl
cli
ret
aaa
push
pop
or
rolb
lea
and
pop
xor
pop
push
add
add
je
das
push
repnz
je
add
and
jbe
rolb
jl
into
shll
inc
popa
or
pop
xor
push
sbb
mov
add
and
adcl
sbbb
jp
xor
jne
push
cmp
nop
aaa
fs
out
push
mov
mov
stc
push
mov
sub
sbb
pop
shrl
push
push
push
push
out
dec
out
les
orl
adc
sub
adc
or
xorl
push
add
pusha
aaa
jae
jmp
xor
ds
in
pop
or
fstps
or
dec
int
pop
data16
daa
out
mov
inc
popa
je
pusha
mov
sbb
ss
xor
inc
sbb
aas
xor
pop
pop
dec
adc
bound
cmp
je
xor
je
rorb
clc
push
mull
or
push
add
pop
shll
mov
inc
mov
adc
and
arpl
imul
repnz
sahf
mov
pop
movsb
inc
xchg
roll
sub
test
and
out
and
push
adc
push
fbld
cmp
cmp
and
jnp
js
jb
jp
sarl
push
arpl
hlt
jbe
or
add
xchg
inc
popf
ret
loopne
cmp
cli
jge
mov
adc
sbb
xor
inc
mov
add
int3
arpl
cmp
or
add
aam
popa
fdivrl
lea
loope
inc
cmc
cmp
and
fwait
push
icebp
les
inc
add
push
aam
pop
pushl
inc
inc
insl
dec
xor
mov
xor
push
leave
rorl
push
xchg
cltd
and
ret
pop
lods
les
adc
movsb
xchg
cmp
push
pop
data16
mov
rcll
jae
fmuls
cmp
mov
sub
mov
mov
mov
inc
mov
or
jbe
adc
mov
jp
xchg
sub
adc
clc
cmpl
aaa
pop
mov
sbb
dec
push
mov
adc
add
mov
push
and
push
mov
pop
cmp
adc
incl
inc
lods
lret
jl
cmp
enter
and
jo
icebp
jb
jge
or
mov
inc
push
in
negb
pop
cmp
adc
or
push
push
jmp
or
jmp
cmpb
mov
or
lcall
adc
sub
sbb
repz
add
dec
minps
rcl
popa
test
xor
call
data16
int3
or
push
xor
sbb
lret
xor
gs
sbb
and
jo
jne
adc
jp
push
aas
cmp
cmp
je
mov
test
mov
push
int3
or
sbb
mov
or
pop
mov
pop
adc
jnp
xchg
es
cmp
xchg
and
into
xchg
sub
xor
xor
sub
or
popf
arpl
or
sub
sbb
mov
cmp
sub
pop
ret
pushf
and
xor
dec
add
pusha
das
inc
jns
inc
add
mov
call
cmpsl
mov
rorl
push
adc
lret
scas
mov
test
push
clc
shr
add
or
dec
cld
aaa
add
add
shr
or
mov
push
and
dec
call
and
add
mov
insb
xchg
push
movsl
notb
lock
stc
xchg
mov
mov
xchg
jp
fcmovu
fimull
cmp
leave
inc
jbe
add
lock
mov
sbb
cmp
or
xor
pop
fimuls
rorb
int3
cs
sbb
mov
and
xchg
jp
sarb
adc
adc
fcoml
bound
xor
push
fidivs
clc
xorb
pop
push
mov
lea
inc
inc
and
and
int3
out
stos
lods
mov
lcall
inc
movsl
dec
rorb
ja
pusha
cmpsb
and
xchg
add
es
dec
dec
fiaddl
push
mov
sbb
rcll
xor
push
lea
mov
icebp
loop
sub
insb
fldcw
cli
jne
mov
sbb
not
test
add
cmp
or
mov
pop
or
data16
popf
sub
fnstenv
jbe
les
pop
mov
mov
and
xor
inc
insb
add
xor
imul
push
sbb
and
dec
adc
call
xor
aaa
ret
ljmp
ret
orl
enter
lret
setbe
fnstenv
decl
aas
adcl
adc
ror
dec
sub
or
sbb
cmp
add
inc
mov
insl
cmp
ret
and
seto
and
sbb
fs
loope
add
inc
test
adc
ret
adc
mov
or
ror
push
pop
xor
pop
divb
mov
mov
das
add
outsl
inc
mov
xchg
mov
les
inc
lcall
clc
and
xor
lret
mov
sbb
sbb
mov
adc
xchg
fistpll
mov
repnz
stos
and
add
aam
sbb
add
pop
je
add
xchg
and
pop
int3
lock
xor
push
sub
sbb
hlt
mov
mov
hlt
sub
mov
sub
push
inc
aaa
mov
sarl
call
and
jmp
xlat
out
cmpl
call
cmp
xor
repnz
and
add
sbb
cmp
popf
mov
cmp
xchg
call
pop
in
mov
cmp
jle
sbb
and
rclb
lea
push
jp
adc
mov
test
ds
leave
inc
xor
sbb
cmpsl
sub
jmp
mov
cmpb
jl
xor
incb
xor
inc
aam
add
rclb
push
fstl
inc
mov
shrb
cmp
add
cmp
imul
insl
xor
mov
ds
mov
mov
cmpsb
roll
and
loopne
cmp
ret
ret
sub
jmp
adc
rcrb
jne
cmp
jne
imul
inc
dec
add
jmp
jbe
adc
adc
push
imul
or
fprem
sbb
add
roll
leave
add
clc
js
je
mov
iret
adc
xor
or
jne
dec
dec
dec
pop
pop
or
rclb
je
jecxz
pop
adc
xchg
adc
or
and
movsl
dec
push
add
push
or
push
mov
lret
aas
inc
push
sbb
adc
inc
adc
and
es
or
or
add
push
mov
xor
adc
fdiv
fiaddl
or
sbb
inc
sbb
add
and
sbb
sbb
inc
push
sbb
fcoms
adc
and
inc
and
fnstenv
movsl
icebp
sbb
adc
movsl
in
adc
sbb
sbb
or
jns
mov
dec
jne
pop
pop
pop
aam
shll
adc
xchg
test
lods
rcl
ljmp
shr
sub
cmp
adc
pop
shr
pop
push
idiv
and
maskmovq
cld
lock
je
pop
loopne
or
rolb
gs
mov
sbb
dec
or
dec
into
add
jo
lods
jae
adc
cmc
movsb
int
inc
xchg
cmpsl
enter
sarb
or
aad
push
or
inc
sarl
jbe
xchg
mov
hlt
adc
jne
ret
movsb
and
into
adc
or
push
jecxz
lock
test
jae
adc
outsb
add
add
cmp
nop
es
mov
inc
lcall
mov
mov
lret
gs
fidivrl
mov
popa
decl
add
mov
pop
push
push
ljmp
cld
inc
ss
adc
sub
pop
rclb
cmpsb
jnp
push
inc
jns
add
pop
xor
out
cld
jbe
jmp
leave
jne
mov
add
pop
cmp
ljmp
pop
mov
popf
push
loop
push
mov
adc
fldcw
inc
insl
ret
pop
push
lcall
dec
xor
add
mov
mov
cwtl
inc
jecxz
cs
mov
je
adc
lahf
idiv
and
jb
cmp
ja
add
cmp
adc
cmp
jne
push
shll
leave
adc
jo
push
inc
mov
jl
pop
pop
and
je
insl
orb
iret
and
and
jge
sbb
or
pop
sub
rclb
mov
mov
pushf
movl
aas
cs
push
mov
inc
add
mov
push
xchg
sub
mov
cmp
mov
mov
add
ret
pusha
movw
adc
add
jb
add
sbb
pop
xchg
xor
mov
fisubs
pop
mov
subl
mov
push
or
jbe
cwtl
call
or
sub
cmp
push
andb
sbb
dec
push
data16
push
add
sarb
push
add
cmp
mov
mov
adc
pushl
ret
cli
shr
rcll
imul
lea
push
loope
sar
dec
jmp
popf
dec
movswl
xchg
fstpt
es
dec
out
jge
fsubrp
dec
stos
cmp
mov
pop
lock
cwtl
inc
xorl
xchg
dec
mov
push
ss
add
dec
imul
dec
rorl
mov
push
dec
js
push
jb
jl
push
or
dec
jle
repnz
loope
adc
jno
loopne
adc
mov
mov
mov
and
and
lea
stos
pushf
imul
adc
cmpsl
add
aad
adc
sahf
cmpb
dec
and
adc
ja
lods
bsr
dec
icebp
enter
mov
inc
call
loop
ljmp
dec
mov
inc
jnp
jbe
mov
lea
rolb
cs
mov
or
les
dec
or
xor
fcmovnb
dec
or
push
adc
test
sub
xchg
cmpsl
inc
lods
shll
shrl
data16
pop
shrl
sub
insb
jl
in
test
and
rclb
jae
loope
mov
clc
mov
shll
mov
add
shr
or
and
rorb
dec
jmp
dec
sbb
push
lret
test
inc
mov
test
add
inc
mov
jle
int3
shrl
negb
shr
or
mov
dec
mov
out
push
pop
jp
lods
out
inc
jp
lock
dec
and
jnp
repnz
add
cli
pop
nop
xchg
out
repnz
jbe
test
cmp
loopne
mov
xor
leave
test
mov
sahf
or
cli
adc
mov
lret
pop
fisubrl
mov
dec
idiv
dec
xchg
mov
and
jb
sbb
and
or
mov
enter
xor
xor
mov
sbb
sbb
add
dec
scas
inc
repnz
pushw
cmp
loop
out
jge
xchg
pop
xchg
enter
subb
leave
inc
scas
fwait
dec
xchg
xchg
daa
adc
sub
or
dec
mov
fdivp
faddl
jne
fdivrs
aam
inc
jbe
add
jbe
dec
sub
push
popa
mov
sbb
shlb
dec
notb
or
xor
test
xor
adc
or
jns
sahf
add
flds
subb
vfrczps
insl
test
cli
mov
int3
jg
add
xchg
add
idiv
adc
xchg
je
notl
adc
jg
or
adc
or
jb
lock
push
sbb
jge
das
nop
or
lock
and
mov
cmp
add
jne
enter
fnsetpm(287
loopne
rorb
ss
sbb
lret
mov
jbe
stos
aaa
pusha
add
sbb
sub
pop
ds
mov
mulb
cmp
inc
sbb
movb
lea
adc
pop
outsb
call
adc
incb
and
or
cmp
adcb
in
pop
sub
sbb
pop
inc
rcrl
lcall
frstor
jecxz
and
imul
call
imul
call
push
loopnew
fsubs
pop
inc
push
js
add
and
mov
push
in
cmpb
pop
stos
popf
addr16
add
aaa
push
sar
sub
xchg
sbb
into
or
in
mov
imul
xabort
mov
sbb
in
inc
dec
enter
sahf
push
mov
lods
mov
and
dec
int3
addl
aas
call
jge
xor
add
add
into
or
mov
adc
addb
xor
js
xchg
jmp
dec
cmpsl
mov
sub
cmp
jge
sbb
pop
cmc
jmp
cmpb
or
add
dec
cmp
jecxz
in
inc
dec
add
add
fadds
mov
add
call
ret
jp
jne
dec
xchg
lock
mov
jb
int
inc
test
add
es
mov
lret
or
subb
adc
test
mov
imul
add
add
fisubrs
in
dec
add
test
mov
mov
stc
lret
mull
sbb
add
push
outsb
or
adc
push
das
add
repz
dec
imul
pop
or
jne
or
push
test
scas
je,pt
push
xor
dec
push
ret
sbb
adc
mov
je
mov
xchg
or
adc
or
fsubrs
add
test
inc
pop
mov
mov
sub
sarl
xor
into
pusha
inc
add
and
sub
and
insb
popa
ljmp
nopl
add
or
cmpl
inc
adc
push
loopne
or
mov
test
jne
or
or
add
add
roll
mov
mov
xor
mov
adc
xlat
pop
ja
into
push
pop
sub
pop
neg
cmp
adc
jne
and
mov
add
test
mov
jo
add
shlb
ret
cwtl
aam
cmp
ret
and
push
lds
add
nop
clc
mov
xor
adcb
sub
add
push
push
scas
addl
or
sub
sbb
sbb
add
pushf
or
add
add
mov
lock
adc
repnz
test
and
into
or
add
or
mov
add
jp
mov
mov
sbb
daa
iret
xor
sbb
inc
jg
into
into
sbb
or
sub
inc
pop
sub
push
pop
xor
adcl
mov
movsl
cmp
pop
xchg
shlb
or
sbb
stos
xchg
mov
jmp
push
push
mov
mov
pushf
hlt
jecxz
push
lahf
pop
xchg
out
cmp
out
cltd
adc
add
clc
cmp
and
xchg
mov
mov
ret
cltd
and
push
cmp
roll
mov
mov
xchg
lret
lret
mov
xor
pusha
out
pop
mov
inc
mov
les
mov
lahf
xchg
xchg
adc
xchg
mov
int
jbe
mov
enter
in
sub
xchg
sbb
test
lock
scas
cmpl
jnp
mov
jge
flds
cmc
sub
in
mov
nop
je
ret
add
dec
add
fdiv
jle
sbb
pop
inc
sub
dec
loop
sub
je
mov
push
dec
sub
loope
inc
and
fmuls
inc
mov
aad
mov
cmp
jb
cmp
jbe
dec
nop
out
loopne
sub
jmp
push
xchg
fs
xchg
loopne
les
imul
loopne
or
push
hlt
push
test
mov
jecxz
inc
mov
add
and
sbbl
push
adc
ret
mov
in
cmp
adc
sub
cmp
or
fidivrl
xor
mov
call
and
pop
mov
push
fsub
fsubrs
inc
add
adc
push
shr
xor
sub
adcb
lods
push
lret
xor
jns
pop
pushf
push
xor
dec
or
or
or
xchg
sbb
ljmp
and
aas
push
cs
push
inc
push
aaa
sbb
cmpsl
mov
inc
mov
inc
loope
or
loopne
mov
cmp
add
daa
fnstenv
add
xchg
mov
jmp
mov
fiadds
sub
rorb
cmp
push
bound
movsl
lock
inc
sub
inc
or
cmpl
sub
lahf
pop
xchg
mov
loope
aaa
dec
mov
nop
cmc
xchg
mov
pop
test
shll
mov
add
push
ret
das
test
mov
iret
call
dec
adc
push
push
cmp
pop
outsb
push
test
cmp
adc
adc
icebp
mov
mov
pusha
gs
sbb
mov
je
in
or
cli
std
mulb
sbb
mov
xor
xchg
jg
xor
push
push
sti
jo
push
scas
sub
add
pop
call
out
lods
dec
lea
enter
mov
mov
popf
cmp
js
pop
out
sbb
mov
dec
mov
mov
mov
fidivrs
clc
sub
dec
dec
and
sarb
sub
ss
jnp
outsl
jae
ja
enter
adc
inc
or
mov
orl
insl
out
dec
sbb
test
push
xchg
push
or
pushf
iret
mov
or
pushf
mov
push
cmp
mov
sub
add
cmpsl
mov
pop
sub
es
dec
hlt
pushl
push
pcmpeqb
jg
push
lds
scas
sbb
mov
sbb
sbb
out
aas
cmp
cmp
jbe
jg
pop
push
push
push
adc
test
iret
imul
or
push
dec
mov
xor
test
adc
xchg
cmp
repnz
mov
in
cmp
jo
lea
add
jb
sti
pusha
mov
notl
fcomps
jmp
cmpsb
or
inc
and
loopne
and
add
jnp
jge
fcompl
push
cmpsb
xchg
loope,pt
sub
push
or
mov
pop
dec
mov
rcll
push
xchg
xchg
andb
mov
jmp
movsb
test
adcb
scas
shll
clc
outsb
dec
add
dec
daa
movsl
dec
in
and
test
mov
cmp
dec
dec
nop
test
loopne
mov
loop
add
mov
push
xor
mov
add
cltd
mov
push
push
push
mov
es
xchg
popa
dec
push
push
add
vpsubb
push
push
sbb
lds
push
and
push
test
clc
xchg
in
inc
cwtl
pop
sub
sbb
pop
rol
sbb
mov
sarl
or
and
ret
cmpsl
mov
mov
mov
cltd
sbbb
mov
jecxz
inc
inc
cmpsl
and
inc
andl
or
shlb
or
add
inc
rcrl
adc
inc
push
lods
push
mov
sbb
push
inc
push
int
stos
push
add
sbb
pop
test
jmp
mov
add
xor
out
mov
sbb
and
insl
cld
mov
jnp
push
loopne
pop
pop
xchg
cmp
loopne
fs
xor
cmp
xchg
and
jo
jo
lahf
clc
adcb
mov
mov
sarl
add
sbb
xchg
lret
or
cld
iret
cld
adc
dec
test
mov
mov
roll
jmp
aaa
adc
or
adc
mov
sub
cltd
enter
jbe
mov
inc
or
cmp
pop
sbb
mov
loope
jo
scas
addb
add
bound
xchg
mov
or
sahf
push
xor
jmp
stos
rolb
and
call
dec
cltd
push
mov
mov
aas
sbb
lock
popf
xchg
xchg
xchg
jne
rcrb
jp
push
pop
addb
mov
push
aam
loopne
xor
enter
mov
popa
sub
mov
imul
adcb
push
push
dec
or
out
btc
xor
inc
and
and
xchg
nop
insb
jmp
push
gs
mov
adc
aam
and
and
das
rcrl
aad
stos
pusha
jne
sbbl
cmp
pop
xchg
in
popa
xor
push
jmp
imul
fcmovu
dec
pop
sub
push
jo
cmp
sub
fnstenv
inc
imul
add
jb,pn
dec
xchg
jge
cmp
sub
jg
sub
jp
inc
mov
dec
inc
clc
push
sbb
cmp
ja
pusha
or
mov
test
push
aaa
pop
inc
in
xlat
cwtl
pushf
xchg
pop
das
xchg
add
mov
lret
push
inc
cwtl
cmp
jmp
sub
repnz
fidivrs
test
jg
adc
lock
scas
inc
or
lcall
push
add
jmp
icebp
cmp
push
pop
adc
xlat
pop
shlb
or
mov
into
lock
fadds
add
mov
mov
cwtl
add
add
sar
push
pop
jno
int
pop
cwtl
adc
dec
push
xchg
cmp
add
xchg
or
cwtl
jmp
lea
or
lcall
or
cmp
dec
and
push
and
pop
fs
outsb
daa
inc
sub
test
outsb
inc
in
sub
pushl
inc
inc
loopne
pop
cmp
cmp
cmp
mov
popa
cmp
mov
jle
sbb
mov
dec
push
or
adc
jg
lea
add
jg
jae
mov
dec
bound
ljmp
inc
cmp
bound
je
mov
cmp
ja
mov
rcrl
pop
sar
jl
sub
addb
out
int
repnz
sbb
and
cmp
test
jmp
pop
gs
mov
sub
test
and
ret
arpl
stos
or
xor
adc
and
test
mov
and
inc
sbb
push
icebp
and
or
std
xchg
xor
call
sub
jno
inc
push
sbb
test
stos
cwtl
aam
jle
mov
pop
jae
pop
pusha
ret
pusha
inc
mov
cmpsl
and
mov
add
dec
jl
loopne
in
sbb
or
add
add
push
pop
mov
aas
loopne
js
nop
loop
xchg
add
sbb
call
xor
jmp
addb
mov
push
add
fistl
jle
push
push
or
insb
pop
dec
cli
pop
jg
xlat
add
fs
enter
cmp
jl
testb
ret
out
xchg
rcrb
lods
push
or
adc
cs
mov
inc
addl
adcb
lock
addb
test
stos
or
pop
mov
les
sub
mov
in
sbb
into
outsb
loope
fdivs
pop
gs
pop
inc
out
and
sahf
je
ds
lods
sysret
sahf
jb
jmp
and
jbe
mov
or
mov
dec
cmpsb
pop
adc
sbbb
jae
inc
mov
inc
cld
push
mov
jle
cmp
jg
jbe
rol
sbb
out
mov
inc
sub
xchg
cmp
std
adc
add
mov
orl
nop
pop
mov
roll
pop
outsb
pop
mov
sub
rcl
stos
and
idivb
jle
cld
setb
call
movsl
and
mov
adc
lods
inc
fisttpl
sub
add
shlb
or
in
rol
fldpi
mov
cmp
adc
or
lods
addl
cmp
jge
sbb
and
sub
ds
mov
jb
sbb
add
mov
push
call
dec
adc
push
inc
data16
push
adc
pop
cmpb
pop
je
int
nop
pop
stos
cltd
aam
sbbl
adc
add
imul
sbb
mov
pop
or
je
xchg
je
mov
xchg
sbb
jmp
mov
cmpsb
outsl
sub
scas
and
imul
push
sub
pop
jb
cmp
push
add
inc
sbb
repnz
add
cli
cmp
pusha
xor
cmp
and
push
cmp
pusha
cmp
xchg
jbe
jne
push
fildl
pop
mov
or
add
jmp
xor
add
pop
je
mov
push
mov
fadd
xor
mov
or
push
sub
inc
aas
mov
mov
aaa
lds
leave
mov
insl
pusha
out
cli
inc
cs
arpl
mov
loopne
inc
dec
and
xchg
jns
mov
inc
stos
add
ja
loope
inc
sbb
daa
xor
ret
and
mov
imul
adc
sbb
mov
daa
mov
cmp
push
jb
bound
sub
pop
cli
jae
cmpsl
clc
push
lea
movsb
or
jl
push
inc
mov
icebp
insl
push
add
mulb
push
cmpb
sub
add
and
dec
and
jge
imul
and
fcmovb
mov
lret
insb
imul
pop
sbb
add
mov
adc
dec
or
push
aad
sarb
out
or
push
mov
lret
mov
mov
imul
xor
pop
out
cmp
or
add
cmp
add
push
ror
rolb
xlat
add
jecxz
rorl
stc
xchg
sbb
mov
add
hlt
jne
adc
fistpl
or
push
mov
insl
push
add
jb
add
call
pop
sbb
pop
jle
mov
mov
out
cmpsl
les
xor
inc
add
or
sub
adc
dec
test
sub
xchg
or
mov
jo
mov
pop
jg
jg
add
fwait
addb
jbe
fsub
pop
scas
and
stc
test
adc
adc
cs
mov
inc
lock
cmp
or
hlt
adc
jnp
pop
lods
loopne
insb
jle
out
nop
lea
add
in
enter
mov
and
orb
cmp
xchg
add
dec
jg
adc
orl
jg
jmp
adc
cwtl
add
arpl
and
xor
and
or
adc
add
ljmp
popf
mov
mov
out
je
call
daa
adc
gs
xlat
push
aaa
pop
pushf
and
adc
jae
loope
loop
scas
or
test
pusha
pop
and
jns
add
xchg
inc
bound
xor
scas
ret
cmpsl
adc
fwait
or
jnp
es
lret
or
test
rolb
insb
and
push
pop
dec
mov
test
rcr
jns
or
pop
mov
or
cmp
je
cmp
std
call
mov
and
cmp
jb
testb
out
adc
lock
js
add
xor
inc
or
aas
mov
fidivs
sbbl
push
xor
xor
cmp
jbe
xor
pop
clc
push
push
or
cmp
or
outsb
in
push
rcll
mov
inc
shr
jmp
mov
xor
insb
test
or
and
mov
add
push
mov
and
dec
mov
js
shlb
daa
mov
pop
jmp
lods
pop
pop
xchg
pop
inc
es
lret
push
out
std
sarl
sub
mov
mov
cmp
mov
jmp
gs
xor
sub
lods
ss
fnstsw
sbb
and
dec
cmc
add
xor
pop
dec
jns
push
test
aas
sub
stc
add
and
test
aas
jo
jne
and
enter
fisubrl
push
inc
add
and
aas
xor
pop
enter
cmp
out
aaa
pusha
xor
adc
lock
push
push
sbb
test
add
jo
fwait
dec
sub
aam
clc
mov
add
nop
aam
cwtl
lcall
stos
movsb
pop
lahf
je
pop
and
fld
fld1
fbstp
lods
sub
push
fildll
hlt
xor
jmp
lcall
and
icebp
push
cwtl
js
cmp
add
xor
sahf
jmp
cmp
fcomp
jnp
cmp
int
fldenv
cmpsb
pop
inc
jb
add
pop
pop
jno
xor
gs
push
add
and
test
shr
or
or
lea
mov
loope
xchg
adc
mov
leave
xor
enter
push
and
cld
or
or
daa
add
lock
cmp
pusha
sbb
cs
add
adc
mov
and
nop
lock
pop
lock
les
or
insl
xchg
nop
sub
jo
enter
add
cwtl
adc
xor
sbb
pusha
in
add
add
rcr
mov
mov
inc
es
lock
push
mov
lock
xor
mov
cld
sub
jne
add
fimull
ss
mov
mov
push
cmp
sbb
and
jnp
mov
pop
setne
pop
test
adc
dec
dec
roll
enter
int
pushf
nop
test
enter
inc
mov
push
nop
sbbl
add
fdivs
adc
in
jae
in
fiadds
nop
xchg
pushf
cmp
push
filds
or
lock
es
ret
jnp
or
add
inc
jo
aaa
inc
adc
or
scas
sbb
mov
dec
shlb
fistpll
in
inc
leave
mov
insl
in
inc
adc
ss
mov
inc
roll
pop
add
adc
push
dec
popa
mov
js
push
enter
lods
pop
and
push
shll
dec
ret
lock
sbb
or
stc
jno
adc
fs
mov
inc
icebp
mov
sbb
fs
mov
mov
cmpb
dec
jb
js
fdivrl
dec
cs
pop
add
jb
enter
xor
call
xor
mov
imul
mov
rclb
xchg
pop
adc
in
push
dec
outsb
unpcklps
cmc
or
fbld
mov
jb
std
push
jno
pusha
leave
and
dec
fs
xor
js
and
enter
sbb
add
fsubr
adc
inc
xor
test
lea
cmova
hlt
lret
out
out
mov
or
dec
mov
sbb
mov
mov
sbb
mov
in
sti
and
hlt
or
push
icebp
js
rclb
jmp
stos
xchg
lea
xor
iret
mov
adc
cmp
sub
dec
mov
movsl
adc
les
jbe
adc
mov
pop
dec
pop
les
mov
stos
in
ss
outsb
stc
popa
js
lods
add
ja
cmp
mov
loope
mov
mov
adc
mov
in
inc
sbb
adc
mov
or
sbb
dec
sub
and
fs
hlt
enter
nop
lods
pop
jb
sbb
or
popa
push
repnz
cmp
push
in
ret
bound
cltd
ret
push
insb
popf
mov
lock
test
push
xor
shl
rclb
arpl
enter
pop
add
push
loopne
in
sbb
in
or
inc
mov
xchg
dec
fwait
or
dec
or
cmp
lock
fs
and
pop
sbb
repnz
or
xchg
cmpb
or
jbe
add
loopne
in
jne
jne
stos
cmp
lock
and
sub
in
and
sbb
add
mov
xor
fnstenv
and
in
xchg
in
ja
sti
or
sbb
outsb
or
leave
mov
nop
add
adc
aas
call
je
xor
loopne
and
cmp
mov
push
cmp
adc
xor
or
arpl
and
dec
insl
int
out
add
test
pop
test
adc
rcrb
inc
add
ret
add
add
cmpsl
add
call
or
fs
pop
cwtl
mov
insl
and
dec
cmp
and
gs
lock
mov
stos
adc
repz
es
fiadds
adc
gs
dec
fs
loopne
cmpsb
add
or
cwtl
adc
pop
pop
inc
or
mov
mov
ret
int3
and
inc
or
and
popf
aam
cmp
ficompl
push
and
push
xchg
push
pop
imul
add
jae
add
in
xchg
or
add
push
aam
pushf
pop
shrl
sbb
inc
ja
or
lcall
dec
fiadds
pop
jo
sub
pop
dec
xchg
lock
lds
xchg
bound
loope
in
ss
test
mov
ja
fisubrs
xchg
adc
add
je
sahf
dec
mov
fsubl
jne
in
or
xchg
or
jne
push
xor
pusha
repnz
and
xlat
push
sub
and
push
sbb
sbb
and
clc
test
mov
nop
sbb
add
and
mov
push
lcall
in
subb
or
or
or
xchg
add
sub
aam
cmp
and
and
xchg
loopne
fdivs
cmp
pop
xchg
test
sbb
or
or
call
xor
jae
fdivs
orb
jecxz
inc
mov
outsl
in
aad
adc
adc
jo
or
add
je
mov
fsincos
daa
and
fs
cmp
ret
mov
lcall
lock
movsl
leave
cmp
sub
sub
arpl
xor
and
sub
jb
test
or
enter
or
or
xchg
pop
jb
or
in
pop
leave
or
jg
sub
loope
enter
fadd
fadds
fsubl
movsb
mov
rclb
test
out
sbb
call
or
orl
es
aad
and
add
inc
imul
mov
int3
mov
popf
movsl
frstor
push
and
adc
add
sub
inc
sub
push
mov
sbb
ss
dec
cmp
or
rol
mov
pop
loope
add
and
sub
adc
add
fwait
adc
adc
dec
adc
mov
or
mov
pop
push
shl
lea
or
lret
and
or
sbb
outsb
xlat
cld
and
push
loopne
pop
popf
jnp
mov
lods
call
xchg
ret
je
dec
aam
insb
sub
sub
fiaddl
xchg
ret
adc
sub
scas
aam
jge
shll
inc
cmpsb
sub
and
fistps
call
psubsb
and
jno
mov
sub
push
fsubrs
sub
subb
sub
loope
adcb
inc
dec
pop
push
push
dec
cs
fcoms
call
ss
popf
mov
rorb
mov
daa
hlt
cs
sbb
loopne
js
subb
cmp
push
xlat
and
inc
mov
push
jl
mov
leave
ds
sbb
push
movsl
sub
dec
mov
subb
xlat
or
hlt
sbb
sbb
xor
or
mov
jne
or
sub
adc
subl
xchg
mov
roll
lods
mov
xor
outsb
sbb
xor
and
jne
movl
add
cs
add
jae
cmp
jb
mov
repnz
and
mov
xor
stos
nop
pushf
mov
xor
push
int
lcall
fldcw
sub
jl
rclb
pop
and
sbb
jecxz
sbb
cmp
xor
fnstenv
aad
jne
pop
xchg
andb
mov
or
sbb
add
es
sub
push
mov
test
push
xchg
pop
xor
insb
xor
mov
pushf
stc
fldl
cwtl
and
insb
xor
xchg
stc
aas
or
lock
gs
stos
add
adc
sbb
ss
xchg
test
lea
xorb
sbb
and
test
or
ficoml
shl
adc
dec
fwait
add
stos
rorb
dec
fsubl
enter
mov
mov
mov
mov
mov
mov
andl
pop
movsb
add
jo
stos
inc
add
shll
add
dec
repnz
imul
jmp
aad
xlat
dec
cmp
dec
and
mov
arpl
rcr
sbb
in
pop
fsub
aam
call
inc
cmovge
ljmp
pop
and
add
cmp
jle
ret
jne
fidivs
cmp
das
pop
cs
unpcklps
aam
mov
aad
adc
cmpsl
mov
jbe
or
cmc
pusha
mov
aam
negb
fimuls
cmc
fidivl
divb
fwait
mov
inc
es
fs
nop
pushf
and
enter
out
mov
int3
test
add
scas
mov
imul
jns
or
xor
xchg
xchg
xchg
ja
xchg
fisttpl
sbb
insl
mov
mov
aaa
inc
ficoml
imul
imul
pop
test
mov
push
mov
xchg
push
xchg
and
movsb
fdivr
enter
adc
mov
sub
fnstcw
mov
sbb
enter
inc
mov
jb
call
sub
inc
orb
xor
stos
xor
cmpsb
test
fcoml
arpl
push
js
aam
ja
aas
xchg
prefetcht0
inc
daa
cmpsl
jl
xor
shlb
arpl
dec
adc
fwait
lret
testl
adc
insb
sub
xor
lods
pop
mov
test
inc
sbb
pop
dec
dec
jge
pop
lret
in
loop
lahf
out
cmp
pop
ljmp
inc
lds
dec
inc
add
push
push
jge
inc
popf
jmp
aam
lea
cmpsl
fdivr
inc
push
ret
test
adc
rorb
xor
das
adc
enter
js
mov
cmp
mov
pop
jns
cmp
imul
dec
imul
and
sbb
xor
or
gs
jp
stos
xor
lock
repz
sub
or
sbbl
sub
shlb
adc
cmp
xor
std
int3
ss
add
jae
sbb
or
lods
inc
and
inc
sub
inc
arpl
les
loopne
cmp
jno
dec
xchg
imul
jp
xchg
faddl
or
pop
mov
cmpsl
bound
mov
push
addb
sbb
mov
inc
nop
idiv
and
inc
sbb
inc
adc
cmpsl
dec
inc
dec
sbbb
enter
jl
and
insb
test
push
and
les
pop
test
jne
lods
rol
mov
dec
adc
and
push
pop
rclb
xchg
add
mov
imulb
imul
aam
mov
orb
leave
jb
jno
jnp
dec
in
rcll
adc
push
test
pop
dec
fs
popa
and
rcl
sahf
xor
mov
push
add
dec
push
imul
or
push
inc
dec
xchg
lret
loopne
inc
lea
loope
sar
inc
mov
adc
ficoml
shlb
roll
test
rclb
pop
adc
leave
cmp
imul
aam
xchg
data16
rcrb
pop
inc
mov
addb
aam
cwtl
test
pop
sub
or
nop
test
mov
in
cmp
sbb
sbb
push
in
les
push
popa
shrl
stos
jno
pop
pop
fcompl
dec
push
fadds
xchg
test
jne
mov
fsubr
push
mov
fistpl
sti
dec
dec
popa
push
sbb
push
sbb
push
xchg
mov
xchg
insb
lret
or
pusha
rcl
push
mov
adc
pop
test
inc
push
xor
insb
mov
mov
xor
aam
or
push
cmp
xchg
fs
pop
jo
xorb
test
rcl
das
dec
orl
cmp
mov
xchg
js
xor
jmp
in
in
add
mov
out
dec
jae
lods
lods
test
sarb
call
sbb
push
ret
push
inc
add
mov
push
scas
jge
add
push
insb
and
leave
and
pop
mov
adc
mov
sbb
and
mov
lods
sbb
sub
inc
pop
mov
arpl
adc
inc
push
fwait
sbb
pop
in
push
add
mov
rsqrtps
leave
adc
pop
stos
inc
add
dec
add
pop
xchg
scas
and
cwtl
jmp
xchg
inc
adc
int
mov
mov
xlat
xchg
inc
xchg
adc
inc
insb
push
test
js
push
sbb
add
push
mov
adc
mov
or
fisubl
test
and
pop
push
fcoml
cmp
or
and
dec
in
cltd
test
jmp
nop
mov
add
and
adcb
enter
das
inc
mov
sub
fsubl
pop
leave
loope
test
or
mov
les
in
jl
aam
gs
fadds
rcl
xorb
xchg
in
lods
push
movsb
mov
or
jecxz
jbe
sub
fcoms
test
adcb
lds
lea
inc
jge
mov
inc
rcll
mov
rorl
sbb
push
push
stos
inc
push
out
fs
es
loope
sbb
orb
adc
push
or
es
pop
inc
cmpsb
sbb
adc
or
push
jo
das
xor
fdiv
call
add
lock
push
imul
negl
jbe
sub
jbe
xor
cmpsl
dec
adc
loopne
subb
clc
aaa
clc
pop
rolb
cwtl
dec
dec
and
jno
pop
xchg
push
test
enter
add
mov
lea
shlb
and
and
push
push
insl
sbb
sti
push
pusha
fs
dec
cmpsb
adc
dec
es
and
sbb
es
sbb
inc
es
fs
cmp
sub
add
xor
add
push
mov
adc
scas
xor
cmc
inc
aad
es
or
jne
add
adc
icebp
icebp
adc
mov
andl
movsb
xor
inc
or
sbb
pusha
roll
xchg
push
push
add
aam
or
and
and
pop
insl
inc
xchg
sbbb
addl
call
jo
movl
pop
xor
jne
xor
dec
jno
xchg
xor
pop
sbb
or
cmp
test
and
push
inc
dec
pop
lret
push
cltd
nop
outsl
test
insl
dec
lock
outsb
pushf
push
pop
add
es
ret
xchg
rolb
outsl
adc
lahf
mov
movsl
sbb
in
push
sub
cmp
add
cmp
mov
pop
inc
daa
lock
lock
cltd
fdivrl
int3
fildl
or
inc
les
cmp
push
xchg
xlat
sbb
aam
daa
mov
imul
stos
pop
mov
adc
xchg
dec
cmp
adc
adc
fs
inc
incl
outsl
insl
sbb
xor
cmp
pop
xor
lods
aas
out
mov
sbb
sbb
mov
fmull
bound
mov
jns
bound
mov
popf
je
aad
and
bound
ret
jne
lods
mov
adc
aaa
cmpsl
xchg
arpl
out
cmp
and
or
adc
xor
xor
arpl
and
add
es
insb
xchg
fnsave
aam
or
or
xchg
mov
adc
test
test
je
add
movsb
and
and
in
inc
push
dec
and
or
xor
mov
sbb
mov
cmp
inc
or
mov
or
mov
mov
push
push
popw
add
mov
mov
jae
pop
cs
xor
std
push
sbb
dec
aam
sti
sti
movsb
add
lcall
adc
loopne
in
and
sbb
sbb
lret
cwtl
and
xchg
inc
aaa
xor
push
sbb
daa
lods
int
leave
fsubl
lock
push
mov
add
sub
enter
pop
adc
or
xchg
mov
sub
mov
insb
fadds
incl
add
imul
mov
jmpw
in
adc
sbb
mov
jns
add
push
and
out
push
loopne
movsb
push
sahf
dec
cmp
call
ret
loopne
hlt
stos
and
imul
int
jecxz
test
inc
ja
test
add
test
pop
cmpsl
cmpsb
inc
push
bswap
imul
stos
fisttpll
push
fisubrl
addl
imul
mov
pop
pop
jno
insb
sub
sub
loopne
subb
add
pop
les
out
mov
std
push
insl
push
adc
ja
stos
sbb
pop
or
cs
or
leave
mov
aam
loopne
fsubr
fcomps
shlb
mov
jg
mov
lea
movb
jg
dec
or
enter
cmp
nop
aaa
arpl
add
les
or
dec
dec
mov
in
bound
fcoml
dec
lock
push
repnz
adc
cwtl
jo
fadd
fadd
inc
addr16
add
jmp
add
test
sbb
mov
sub
push
mov
daa
jns
mov
push
dec
adc
adc
movnti
or
and
movsl
adc
add
push
outsl
xor
les
sbb
aam
les
push
fs
mov
dec
sbb
sbb
test
sbb
add
nop
jl
test
nop
add
mov
nop
add
pushf
dec
movsb
lods
add
push
dec
dec
inc
xchg
dec
fwait
mov
adc
leave
and
lods
push
xor
and
mov
and
dec
push
jl
and
dec
xor
xchg
dec
xor
cwtl
nop
mov
xor
and
aam
popa
and
dec
popf
cld
ss
cltd
decb
insl
mov
jmp
rol
shl
ficoml
jns
fcoms
mov
enter
nop
mov
in
clc
jae
pop
cltd
unpckhps
xor
or
dec
xor
push
or
fmuls
das
sbb
adc
cmp
nop
mov
inc
lods
mov
in
nop
inc
push
int3
aam
xchg
imul
cwtl
js
sbb
and
push
test
adcb
xchg
in
cmpb
xor
outsb
outsb
jb
jo
fcoms
cwtl
pop
leave
leave
leave
insl
aam
int3
les
lods
movsb
pushf
push
xchg
fcmovne
xchg
mov
test
xchg
dec
outsb
adc
cs
pop
mov
mov
test
inc
push
adc
inc
jbe
lcall
nop
mov
mov
push
pop
xchg
pop
int
enter
aam
dec
popf
lods
int
mov
xchg
or
in
sub
imul
dec
ja
aam
bound
aam
xor
stos
adc
sub
test
xorb
add
mov
pop
jo
daa
nop
mov
inc
popf
mov
sbb
sub
mov
xchg
ja
mov
rcrb
test
and
jnp
pusha
mov
adc
mov
xchg
shrd
in
sub
and
rolb
mov
inc
mov
pop
lret
xor
and
movsl
dec
repnz
idivl
fs
push
movsb
dec
adc
sbb
adc
cmpsb
or
rorl
push
fs
mov
or
sahf
push
mov
dec
es
cmpsb
notb
ret
dec
aaa
fcomp
adc
shll
sub
adc
flds
mov
and
adc
push
insl
dec
add
xor
mov
cmpl
push
adc
pop
shlb
push
adc
sub
mov
sbb
xchg
femms
and
xchg
fidivrl
outsl
fmuls
push
imul
dec
cmp
inc
pshufw
mov
dec
ret
sub
or
rclb
xor
push
lods
popf
rcrb
inc
adc
popa
inc
and
or
fidivl
out
adc
add
mov
sbb
data16
insl
xor
sbb
add
fsubrs
xchg
sbb
xor
fs
fisubrl
fsts
cltd
rclb
rclb
fmul
stc
rclb
sub
les
mov
and
sub
mov
movsb
xchg
enter
jo
cmpsb
or
or
fs
mov
xchg
movsb
pusha
insl
xor
dec
inc
jno
xor
ror
aas
inc
dec
push
jbe
xor
jb
int3
pushf
push
xchg
sub
shrl
or
leave
bound
push
jle
sub
sbb
movsb
adc
mov
sbb
sbb
add
jns
cmpsl
adc
repz
cltd
jbe
or
insb
push
inc
xor
dec
repnz
insb
mov
das
add
nop
xchg
sbb
dec
xor
mov
add
mov
fildll
push
push
nop
orb
push
mov
std
push
das
inc
sarl
je
jo
sub
enter
and
je
sarb
or
inc
test
mov
add
insl
push
lcall
insl
xor
in
adc
imul
and
adc
insl
hlt
cltd
inc
out
add
repz
insl
xchg
sbb
xor
in
sti
leave
and
add
fists
adc
add
leave
and
sub
mov
push
mov
movsb
les
bound
pop
clc
mov
jbe
scas
cltd
push
fwait
jo
add
icebp
sar
xor
or
or
lds
clc
icebp
call
adc
jp
in
int3
sbbl
adcl
xchg
enter
xor
mov
in
adcl
rcr
push
test
xchg
repnz
and
add
cmp
iret
fstps
xchg
cmpsb
int3
pop
cltd
movsb
call
sub
push
jno
lods
sub
jmp
mov
lcall
adc
pusha
cltd
aas
out
outsb
mov
jmp
mov
faddl
or
jns
xchg
xchg
sahf
and
pop
adc
mov
test
mov
cmpl
shlb
adc
js
rorb
adc
fstl
shrb
mov
and
insb
orl
in
push
movsb
or
test
sbbb
test
adc
int
or
adc
adc
xchg
in
mov
mov
lcall
inc
push
adc
in
mov
andb
mov
call
mov
pop
dec
cmp
xor
adc
and
adc
ss
notl
pop
rorl
adc
aam
insl
test
insl
adc
add
lods
inc
adc
add
dec
shlb
test
cld
add
push
pusha
and
cmp
test
dec
inc
xor
adc
sbb
fildl
add
nop
ret
gs
mov
test
mov
mov
adc
jge
adc
or
ret
xor
xor
mov
std
xorl
add
and
mov
inc
arpl
sub
xchg
pop
sub
dec
push
push
and
add
call
inc
mov
xchg
lcall
dec
add
inc
lods
bound
dec
out
jbe
adc
sbb
inc
cmpsb
adc
rclb
pop
dec
rclb
mov
sahf
daa
sbbl
lods
cmp
fcomps
test
mov
cmp
sbb
icebp
ret
inc
add
dec
lcall
pop
add
xor
push
inc
sub
leave
je
pusha
cmp
xchg
dec
or
and
mov
nop
cmp
leave
clc
mov
and
mov
adc
dec
stos
sbb
mov
int
cmp
mov
mov
cmp
addb
or
pop
sub
inc
lds
imul
int
imul
stc
bound
sbb
sbb
pop
pop
imul
je
mov
xor
cmp
adc
nop
test
or
inc
add
pop
roll
sbbl
and
dec
xor
sbbb
adc
les
adc
fwait
fs
dec
cwtl
mov
icebp
inc
jno
dec
movsb
mov
or
pop
pop
lea
leave
sub
or
lock
les
pop
push
mov
pusha
inc
adc
subl
mov
sub
dec
popl
mov
dec
call
movsb
int3
push
sub
imul
adc
out
or
hlt
gs
aad
or
pop
bound
cli
mov
insl
mov
lock
push
push
cld
inc
enter
lret
clc
sti
push
jns
xor
fs
cld
in
and
dec
adc
mov
mul
jo
lret
stc
or
or
cmp
cmp
cmp
push
shrb
cmp
and
jle
sti
movl
movb
mov
ljmp
dec
repnz
push
aas
subb
mov
or
dec
pop
inc
push
and
and
jl
mov
icebp
mov
add
or
lock
and
jg
xor
dec
push
repz
jbe
or
xchg
test
rcll
nop
das
dec
out
cld
nop
imul
add
hlt
sub
or
out
and
push
xchg
push
jge
push
bound
pop
push
mov
loop
inc
jmp
cmp
es
xchg
es
or
fldcw
or
int
mov
jl
std
mov
pinsrw
adc
inc
std
add
inc
xor
test
add
push
test
out
push
out
or
sahf
out
jl
cltd
scas
rcrb
add
push
aaa
push
jae
jg
jns
add
push
inc
add
push
mov
aas
jbe
fprem1
int3
push
ljmp
inc
aas
dec
pop
inc
add
mov
and
push
sar
incl
orb
jnp
mov
add
adc
mov
rcll
xchg
mov
or
outsl
cmp
adc
jp
lret
pop
mov
incl
nop
add
into
pop
adc
test
dec
testb
push
mov
mov
dec
cld
sahf
or
mov
or
enter
push
jnp
popa
pop
lock
rdpmc
add
invlpg
mov
incl
sub
pusha
mov
pushl
popa
and
insb
outsl
arpl
imul
mov
xorb
sub
popa
arpl
jne
jb
outsb
sti
fisubrl
je
add
das
ss
insl
adc
jnp
subb
inc
outsl
jb
js
je
mov
mov
jae
or
outsl
add
add
add
jge
add
jne
les
inc
cs
mov
jb
and
add
pusha
pusha
daa
add
aaa
or
jl
dec
add
xor
fdivr
mov
inc
push
add
aas
push
add
pop
dec
add
sub
mov
insl
xchg
je
je
and
idivl
dec
fisttpl
out
loopne
mov
insl
push
push
shr
loopne
or
bound
repz
sbb
popa
idivb
xor
insb
jp
fndisi(8087
fisttpll
or
mov
frstpm(287
arpl
lret
aas
rcrb
fisubs
out
outsl
jmp
jo
mov
pop
xor
stos
insl
sub
adc
push
imul
push
cmp
jne
inc
push
data16
xchg
mov
ds
jp
sub
sub
jnp
popa
pusha
sbb
daa
lahf
popa
into
jecxz
adcb
arpl
pop
jnp
inc
or
daa
dec
enter
jbe
fbstp
jge
ja
bound
jnp
ficomps
ficompl
ret
arpl
mov
or
push
xor
sub
mov
xlat
xor
filds
push
jo
scas
das
jb
ret
fiaddl
cs
movaps
pop
or
add
fs
mov
imul
jg
popa
sub
cmp
or
outsl
xchg
pop
push
sbb
lahf
aaa
jg
rclb
pop
dec
iret
push
fists
in
xor
loopne
divl
jb
jne
and
jg
out
sub
xor
stos
bnd
icebp
jbe
push
das
rcrl
jae
shrl
mov
cmp
push
cmp
fistps
outsl
aas
or
arpl
sbb
push
mov
inc
jb
push
xlat
aaa
jge
shrb
jecxz
stos
fs
fidivl
imul
shll
sbb
rdtsc
cmpsl
outsl
loopne
sbbb
sub
pop
xchg
sbb
mov
pop
add
pop
out
jnp
in
pop
insl
lret
je
mov
cmp
addr16
mov
loop
subb
ja
jecxz
push
push
sub
lock
cmp
xor
mov
fldenv
pop
add
mov
or
push
inc
imul
insb
jecxz
push
inc
inc
mov
sahf
adc
das
sbb
testl
fcomps
int
jns
mov
sbb
test
sbb
cmp
das
push
pop
sahf
push
sbb
sbb
repz
cmp
jns
jp
push
cld
js
sahf
out
outsb
incl
clc
mov
addr16
jp
ja
pop
sub
sub
push
push
push
out
mov
fucom
xchg
add
pop
mov
jl
insl
out
xchg
push
or
pop
mov
pop
pop
sti
mov
and
jge
fdivrl
push
xor
mov
and
jns
in
repnz
add
das
das
and
ret
pop
mov
out
dec
ljmp
loope
and
decb
cmc
pop
ret
ret
dec
repnz
jnp
jns
aas
dec
inc
out
pusha
xor
mov
mov
sbb
ds
daa
outsl
jo
mov
dec
and
add
inc
inc
das
pop
mov
ss
imul
iret
jns
rcr
mov
out
and
outsb
sti
adcb
inc
pop
xlat
mov
inc
jae
push
imulb
dec
and
sub
pop
jbe
scas
push
dec
fbld
ds
insl
arpl
mov
mov
xor
es
cmp
cmp
ficompl
sub
fs
dec
and
popf
scas
imul
dec
testb
arpl
bound
dec
outsl
jbe
popa
or
arpl
inc
jo
sub
jne
jne
xor
insb
xchg
outsb
xchg
call
jo
imul
fnstsw
adc
into
mov
jae
xchg
popl
jge
into
jg
addr16
popa
je
jb
xor
mov
jae
push
gs
sbb
idivb
push
jne
dec
outsl
outsb
and
jbe
ja
pop
dec
inc
aas
add
imul
out
dec
or
adc
fistpll
dec
add
insb
jae
push
dec
mov
push
popa
insb
jne
inc
add
mov
add
mov
jmp
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
adc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
and
jl
test
xchg
pop
pop
pop
pop
pop
or
lcall
arpl
addr16
insl
outsb
outsl
jo
add
jbe
js
jp
jl
jle
dec
adc
fs
lcall
loopne
pop
ret
mov
orb
sar
lret
repz
repnz
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
pop
loope
lds
shrb
outsl
fs
xor
imul
aas
daa
mov
gs
xor
cmp
outsb
bound
add
negl
dec
pop
sbb
icebp
cmp
ret
sub
int3
adc
adc
test
add
add
add
add
or
push
cld
and
push
pop
push
add
xor
jg
rol
pop
hlt
and
add
pusha
push
out
xor
inc
add
or
xor
mov
mov
addl
outsl
sahf
mov
test
add
orb
fwait
daa
push
cmpb
push
and
sub
insb
imul
jb
int3
push
jo
add
in
rol
mov
push
outsb
imul
sub
push
imul
icebp
or
ret
xchg
les
rolb
add
add
repnz
jb
lea
mov
and
xchg
xchg
xchg
pop
jb
xchg
mov
movsl
enter
add
adcl
push
cmpsl
shr
lret
hlt
add
push
pop
pop
lods
mov
mov
in
add
pop
jns
pop
sbb
cmp
sbb
arpl
inc
sub
idivb
xor
dec
jmp
dec
inc
adc
lret
mov
xchg
pop
loopne
xor
push
jae
dec
bound
jge
outsl
xchg
je
outsb
data16
push
jbe
dec
dec
add
inc
xor
push
xchg
push
xchg
mov
mov
mov
js
push
xchg
cs
dec
popf
insl
jmp
inc
outsl
insl
jo
jo
and
and
loopne
imul
aaa
insb
les
dec
imul
or
inc
mov
ds
xchg
fdiv
cmp
dec
inc
jb
jns
daa
pop
bound
fwait
and
gs
push
jg
pusha
je
and
arpl
je
lods
add
and
cmp
outsb
fwait
outsb
rolb
jle
jbe
mov
jo
mov
outsl
jnp
outsb
pop
jb
and
xor
outsl
inc
jbe
push
push
lahf
xorl
jns
insl
and
out
cwtl
add
jp
pusha
xchg
pushw
andb
popl
inc
imul
pusha
gs
inc
jo
lds
rclb
shll
dec
test
lock
ret
fcoms
outsb
mov
mov
dec
mov
jae
or
cmp
insb
call
mov
subl
gs
adc
jbe
mov
mov
or
or
out
push
push
dec
testl
dec
lods
jbe
lcall
fmull
dec
mov
ds
ret
pop
sbbb
imul
inc
sub
push
call
adc
and
inc
in
das
pop
shll
das
gs
mov
rcll
push
inc
jg
bound
sub
xor
pop
das
scas
imulb
xchg
daa
xchg
mov
mov
pop
pop
cmp
in
repz
or
ds
and
ja
idivl
sub
es
cmpsb
or
cmp
jle
jle
out
mov
add
add
sub
pop
or
sbb
das
push
xor
ret
aaa
aaa
and
mov
out
outsb
cmp
xchg
cmp
jg
pop
pop
jne
stos
xor
sbb
add
mov
xor
gs
imul
mov
dec
sbb
jae
jo
sahf
inc
pop
sub
xor
pop
fs
jo
sub
xchg
jl
out
sub
pop
cs
add
repz
dec
cmp
and
adc
cmpsl
stc
cmp
cld
sub
call
loopne
push
push
aam
repz
ror
enter
mov
cmp
push
lods
test
outsb
sahf
out
sahf
mov
mov
mov
jns
jns
mov
test
push
js
jo
push
fs
pop
pop
push
iret
repz
push
dec
inc
xor
and
cld
sub
enter
out
mov
and
repz
repz
les
iret
insb
fs
xor
sbb
cmpsl
stc
cmp
lock
test
ja
out
pop
sub
in
sub
push
jnp
jl
pushf
jo
sub
push
and
test
iret
adc
sub
inc
test
add
and
ret
push
jb
sub
dec
mov
add
addl
xlat
push
addb
pop
push
sbb
jbe
xchg
sub
addl
add
add
nop
imul
push
adc
add
adc
and
add
jnp
and
push
jnp
pop
fistps
mov
add
cmp
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
mov
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
push
test
std
cli
sti
cld
std
jmp
add
xor
sub
test
adc
and
cmc
lods
call
outsb
gs
popa
data16
pop
out
add
shlb
jne
sub
jb
add
add
daa
fidivs
push
arpl
stos
jecxz
sti
inc
insb
fs
sbb
mov
xor
pushf
jp
push
setl
sub
loopne
add
add
inc
adc
push
test
mov
xor
push
dec
inc
dec
cmovns
cmove
push
adc
sub
cld
adc
adc
clc
filds
mov
mov
jnp
inc
pop
in
xchg
mul
outsb
mov
ds
pop
adc
clc
lret
call
jb
jge
arpl
cmp
in
dec
scas
jp
jno
in
fstl
mov
and
iret
mov
xor
iret
imul
adc
inc
inc
mov
mov
sub
fwait
jns
pusha
pop
ss
sbb
pop
jns
ds
xor
incb
mov
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
push
int
das
xchg
pop
and
xchg
lret
sahf
icebp
mov
call
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
pop
stc
jmp
insb
mov
out
leave
ljmp
orb
popa
push
or
shll
mov
leave
hlt
mov
aas
sahf
xchg
dec
add
scas
lods
dec
lock
xor
pop
mov
nop
adc
pop
pop
repnz
loope
fistpl
lret
es
sbb
add
leave
aam
outsl
outsl
and
addb
je
or
shlb
or
or
sub
xor
sub
mov
mov
ds
mov
das
outsl
jns
aaa
movsl
pusha
fadds
dec
xchg
jmp
and
test
jle
imul
jae
sbb
push
jae
movsl
mov
and
data16
scas
sub
inc
cmpsl
mov
sub
ret
bound
jg
subb
jne
fs
pcmpeqw
ss
sti
or
ja
popa
daa
sti
call
daa
je
push
lods
push
fucomip
jae
or
test
je
mov
dec
loopne
mov
loop
enter
addr16
imulb
jb
add
mull
pop
and
nop
nop
push
aaa
cmpsb
outsl
push
push
loope
mov
jae
push
lret
idivl
jae
insl
jle
push
lods
cmp
cmpsl
mov
inc
sub
loope
mov
or
loopne
adc
lods
mov
pop
out
push
sbb
inc
shll
push
mov
pop
jg
fildl
mov
mov
rcll
cmpsl
cmp
or
push
add
add
push
xor
adc
jg
out
adc
push
bound
sbb
jns
outsb
xlat
cs
cmp
fs
mov
cmpsl
negl
mov
je
xchg
js
sub
mov
aas
cmpsl
cs
push
out
add
xchg
jo
orl
add
test
jo
jne
adc
dec
xlat
je
sbb
push
jo
imul
call
es
and
cmp
xorb
daa
adc
outsb
pop
mov
cmpsl
sbb
bound
dec
sarl
js
mov
fstpt
xchg
gs
dec
jp
pop
loopne
loope
pop
ja
pop
rorl
dec
jecxz
fwait
insb
mov
sub
ljmp
test
pop
mov
shll
inc
xlat
and
je
and
outsb
ficompl
daa
pop
xchg
jo
arpl
add
gs
loope
jp
jne
xor
and
dec
ljmp
pusha
push
and
pop
in
jo
pop
inc
mov
add
fdivs
fldt
dec
mov
roll
and
arpl
mov
lret
sub
stos
mov
inc
sub
inc
into
ret
push
and
into
js
jno
or
jo
add
test
push
into
pop
aaa
sbb
mov
je
mov
push
add
adc
arpl
mov
inc
cmp
arpl
cmovnp
dec
loope
hlt
andb
data16
pop
sub
or
add
cmp
je
jae
sub
xchg
outsb
out
out
jnp
hlt
addl
pop
dec
aaa
sub
add
or
fwait
test
mov
pop
push
and
ljmp
sub
and
bound
cmp
dec
aas
loope
push
push
jae
pop
push
out
cmp
daa
jne
add
dec
pop
outsl
dec
mov
push
sbb
inc
das
push
hlt
mov
push
adc
push
clc
ret
js
mull
dec
xchg
jne
pusha
testl
add
sub
ret
outsb
sub
outsb
outsb
sub
and
into
out
jmp
push
fiaddl
bound
jae
imul
push
push
pop
mov
addr16
sti
push
rdmsr
scas
xchg
jecxz
push
bound
sub
push
out
arpl
pop
mov
adc
outsl
jmp
add
mov
in
dec
outsl
insl
cli
mov
cs
mov
add
es
or
out
jecxz
je
inc
push
inc
scas
imul
mov
arpl
dec
insb
xchg
xor
inc
inc
dec
add
dec
out
test
out
adc
mov
add
ss
mov
iret
mov
pop
cs
xchg
dec
por
adc
pop
shrl
scas
inc
bound
outsl
or
ja
sbb
inc
out
jmp
pop
push
aas
ds
testl
or
mov
add
inc
inc
jl
jl
and
jl
mov
mov
imul
mov
and
addr16
mov
stos
das
mov
push
xchg
ret
das
add
mov
adc
bnd
push
mov
pop
lods
fnstsw
adc
rcr
scas
jl
pop
jnp
cmp
pop
imul
jmp
adc
insl
ja
add
mov
lea
pop
bound
outsb
cs
and
mov
mov
mov
out
sarb
outsl
jo
js
lret
jl
jo
loopne
and
jns
mov
mov
fstpl
ret
loopne
pop
fisubrs
fs
mov
dec
lock
loope
adc
jl
ret
sbb
push
repnz
dec
repnz
lods
js
mov
es
add
jbe,pt
push
imul
inc
pop
and
sbb
add
push
test
push
sahf
xchg
sbb
sub
mov
mov
divl
sbb
push
jecxz
daa
inc
div
push
imul
jb
sahf
inc
jns
jae
jae
mov
sbb
pop
andb
inc
fisttps
xor
pop
jg
pop
cli
js
cli
add
mov
clc
das
aaa
pop
pop
push
mov
jb
rcrb
pop
pop
inc
aaa
inc
mov
insb
roll
push
mov
aas
adc
popl
mov
aaa
es
loope
inc
outsl
das
addr16
ffreep
push
mov
fcoms
scas
push
add
add
sahf
out
mov
inc
dec
push
dec
cmp
cmp
sti
push
lock
dec
push
fisttpll
xchg
push
cs
pop
inc
cmpsb
aam
addb
ss
mov
or
xchg
cmp
push
xchg
cs
mov
mov
ds
pop
push
push
lret
pop
push
mov
lret
add
jl
sti
push
addr16
inc
fnstcw
push
xlat
push
es
movsl
pop
sarl
repz
inc
pop
shrb
pop
cltd
adc
add
aas
pop
clc
mov
pop
out
push
jnp
pop
iret
jnp
sub
mov
push
mov
out
cmp
in
or
sbb
repz
jg
push
and
cmp
cmp
pop
push
cs
lock
dec
das
adc
adc
testl
push
scas
pop
aam
pop
jae
outsl
and
ja
and
daa
xor
mov
pop
sbb
cmpsb
push
inc
sbb
cmpsb
push
add
dec
add
addl
sti
aas
pop
jp
popa
push
jae
sbb
xchg
xchg
popa
outsb
arpl
push
gs
std
loopne
jne
pusha
push
popa
jne
or
fadds
push
dec
bound
xor
imul
pop
shrb
sub
aas
push
pop
push
lahf
out
sahf
pusha
xchg
mov
ficomps
sahf
jne
mov
fwait
push
mov
mov
mov
jecxz
sbb
bound
dec
fs
mov
jp
mov
push
and
gs
int3
ret
je
cmp
ds
mov
cmpsb
es
jo
jb
out
jb
into
pop
sti
push
mov
and
jae
sbb
aas
fcom
xor
and
and
and
arpl
xor
mov
arpl
cmp
fs
adc
push
add
inc
add
mulb
and
jne
je
ss
cmp
pop
inc
cwtl
or
imul
frstor
sub
ja
adc
and
sbb
jo
movsl
xchg
aas
pusha
cs
push
mov
popf
sub
inc
pop
pop
jne
imul
cmpsl
xchg
adc
pop
push
scas
ja
jge
fsubl
inc
push
ja
push
inc
sub
push
add
hlt
xchg
scas
mov
cmpl
rol
stos
pop
pop
je
mov
iret
inc
movsb
dec
push
and
mov
aaa
cs
adc
cmpsl
js
out
sbb
ds
dec
cmp
pop
testl
pop
sub
push
test
mov
sub
faddl
jbe
iret
outsb
sub
push
or
les
and
cmpsl
lods
pop
xor
mov
mov
mov
inc
and
arpl
adc
aas
and
and
and
fcoml
cltd
int3
sub
pusha
sbb
sub
or
scas
add
pop
mov
sbb
mov
dec
and
pusha
inc
pushl
shrl
int
mov
dec
sti
pop
push
lods
push
push
adc
pop
mov
pop
arpl
push
call
dec
mov
mov
push
mov
gs
repz
iret
ret
fs
and
cmpsl
mov
xor
and
es
rcrb
inc
lahf
mov
adc
add
and
add
inc
xchg
movsl
mov
push
repz
cmp
lods
dec
xor
or
adc
sub
dec
sub
xor
imul
sbb
jp
out
jb
inc
jp
arpl
popa
fildl
or
mov
bound
pop
push
icebp
adc
arpl
inc
jl
adc
dec
movsb
cmp
xchg
push
jb
es
sbb
inc
jbe
jae
or
sahf
iret
mov
cmp
fwait
add
push
pop
sbb
cmp
xor
mov
sarl
dec
push
cltd
stos
mov
xor
call
pop
push
stos
mov
pop
mov
add
mov
adcb
jns
and
sub
data16
inc
iret
xor
inc
mov
mov
fnstsw
mov
mov
popa
xchg
add
shrb
ret
sub
shrb
lahf
data16
xchg
pop
adc
pop
add
sub
sbb
fwait
int
dec
str
icebp
xor
and
das
incl
pusha
into
int
inc
and
jle
ret
pop
stos
xor
stos
ss
in
inc
iret
es
inc
addr16
fidivl
add
mov
mov
roll
mov
outsl
loope
pusha
icebp
aas
das
das
push
stos
lock
vorps
out
ret
push
pop
or
and
mov
mov
sti
inc
and
add
xor
out
ret
dec
inc
cmpsl
pop
or
push
inc
jo
pop
push
outsl
inc
push
and
aas
sbb
movsb
dec
imul
lea
fnsave
jg
xlat
and
push
out
jb
mov
jns
mov
je
sub
fwait
pop
mov
push
inc
ljmp
push
sbb
and
lods
out
push
push
jp
add
out
jecxz
aas
jbe
in
xchg
mov
pop
clc
fimull
xchg
sbb
sbb
push
cli
jb
adc
iret
dec
xor
stos
sub
insb
push
and
xlat
das
and
lock
cs
cmpsl
push
cs
mov
stos
ret
cmpsl
cmpsb
mov
scas
inc
xchg
aaa
fst
mov
sub
fneni(8087
pop
sbb
inc
imul
outsb
jae
sbb
push
loopne
scas
inc
or
inc
repz
inc
pusha
push
xchg
inc
sets
stos
imul
inc
push
imul
subl
mov
jae
mov
aaa
sbb
mov
mov
ret
lcall
pop
add
jo
dec
adc
push
test
pop
mov
mov
loop
cmp
xchg
cmp
push
cmp
jmp
sub
insb
adc
rol
dec
jecxz
jo
addb
popa
xchg
sbb
lahf
arpl
dec
fildl
scas
jp
roll
xchg
xchg
sbb
lods
xlat
mov
mov
pop
dec
sub
outsb
cmp
lds
ret
ficomps
xchg
xchg
adc
cli
sub
insb
mov
shrl
mov
pop
shll
pop
subb
mov
inc
push
sub
add
pop
xchg
stos
mov
push
jb
xlat
or
cmpsb
jp
push
ficoms
divl
cmpsb
fstpt
scas
ss
xor
sub
mov
inc
lods
and
addr16
aas
je
or
setg
xor
pusha
mov
notb
pop
pop
out
shrb
adc
cmc
cs
outsl
daa
sub
outsl
rcll
push
pop
mov
or
mov
xlat
and
sbb
imul
jmp
jmp
movb
shll
mov
fbld
sub
push
fildl
cmp
scas
mov
or
adc
je
fs
inc
and
call
imul
es
rorb
push
add
push
out
loopne
jmp
add
add
xor
pusha
fistps
sub
aaa
xor
pop
lds
das
outsl
es
push
inc
dec
push
add
mov
xchg
cmp
ss
add
cmp
loop,pn
imul
lods
mov
cmp
ret
push
scas
or
outsl
mov
out
lahf
pop
pop
adc
shlb
xor
sub
dec
dec
das
fwait
adc
inc
adc
insl
lret
icebp
xchg
inc
mov
adc
lds
xchg
incl
mov
add
push
push
jmp
test
xchg
pop
rol
orl
inc
inc
stos
out
cmpsl
add
adc
adc
cmp
nop
push
cmp
stos
scas
dec
mov
aas
ja
add
test
decl
pop
mov
jae
arpl
pop
and
out
pop
movsb
dec
adc
addr16
rclb
int3
in
or
ja
adc
adc
loopne
mov
push
mov
mov
in
imul
inc
cvtpi2ps
das
jb
loop
lock
fisubrl
or
mov
pop
popl
push
andl
sbbl
pusha
les
pop
xlat
mov
push
mov
bound
mov
outsl
push
mull
loope
sub
mov
xor
testl
in
mov
add
xor
jae
xor
xchg
lea
add
pop
push
and
jbe
push
fistpll
cmp
fistps
inc
pop
sub
ja
inc
push
shrl
push
das
rcrb
inc
add
xor
iret
push
sub
xchg
sbb
fwait
iret
dec
clc
sti
inc
adc
jae
lcall
lds
pop
outsb
ds
repz
sbb
movsl
sbb
sbb
sbb
pop
inc
dec
or
mov
adc
and
ja
mov
cs
push
out
outsb
bound
mov
loop
popa
pushl
iret
push
jp
push
inc
das
dec
sbb
in
rol
imul
arpl
mov
aas
lret
mov
push
jnp
aas
les
sbb
out
pop
add
or
push
out
jae
push
or
dec
pop
jge
stos
aam
lahf
roll
sub
les
xchg
outsl
add
sbb
or
add
pop
dec
or
push
pop
add
arpl
cmp
mov
lods
or
inc
insb
xor
lsl
sub
jmp
push
jo
fs
insl
movsl
adc
xchg
mov
data16
or
das
sbb
out
mov
lahf
adc
mov
cmpsl
scas
jno
mov
fstpt
mov
or
orb
adc
or
fistl
movntps
das
pop
adc
imul
iret
stos
hlt
push
rolb
inc
add
sbb
mov
aaa
jbe
lods
lods
pop
lahf
bound
push
sbb
adc
mov
add
pop
sbb
andb
shl
jnp
jge
mov
out
push
push
inc
push
and
fs
push
faddl
add
add
outsb
xor
jo
inc
dec
xchg
arpl
add
insl
pop
cvtps2pd
sub
orl
cs
adc
add
loop
sbb
cmpsl
push
loopne
aam
push
insl
arpl
bound
mov
les
pusha
mov
in
dec
mov
push
test
jl
push
fs
jge
or
adc
int3
jecxz
jl
scas
xchg
stos
sub
loop
jb
dec
mov
xchg
test
dec
xor
movsb
and
add
cltd
dec
pop
lods
fistps
stos
in
mov
pop
and
stos
sub
xchg
dec
and
test
aam
mov
xor
fcmove
push
xor
xchg
push
in
xchg
push
repnz
and
lock
in
cltd
dec
mov
stos
add
dec
pusha
or
xchg
test
adc
xchg
mov
xchg
push
leave
push
adc
shrl
mov
push
leave
push
repnz
cltd
dec
pop
and
stos
in
cmp
rorb
mov
sbb
icebp
and
jmp
cmp
out
pop
add
push
sub
push
popl
mov
push
xor
pop
inc
popf
je
lea
dec
mov
fadd
inc
inc
mov
shlb
adc
inc
or
xchg
jo
jmp
out
mov
inc
add
mov
iret
dec
movsl
inc
adc
pop
das
inc
xlat
push
or
inc
xor
imul
push
push
dec
pop
cwtl
test
push
sbb
shrl
dec
mov
jae
imul
pop
sbb
sbb
repz
dec
test
push
pop
inc
xchg
adcl
inc
push
aaa
xor
inc
mov
push
mov
sqrtps
orl
test
inc
sub
je
fcmovbe
push
out
or
xor
xchg
sbb
outsl
inc
mov
dec
xchg
aaa
jb
sbb
or
push
scas
addr16
aad
fs
sub
xchg
fmuls
inc
addl
lahf
inc
loopne
jmp
add
pop
adc
aaa
dec
push
xor
push
cmp
jb
jp
test
loop
sbb
aaa
push
lcall
mov
subb
aaa
sub
inc
iret
sbb
mov
scas
orb
push
mov
push
outsl
mov
cwtl
ss
rcrl
or
add
lods
pop
gs
sub
dec
jmp
mov
pushl
mov
jg
aaa
addb
out
inc
test
pop
mov
imul
push
iret
inc
daa
push
sbb
daa
fs
and
cmp
sub
inc
call
sar
jg
jbe
inc
xor
mov
inc
pop
jg
jae
and
jae
and
add
fisttpl
divb
pop
and
ds
add
inc
pop
sbb
sub
cmc
mov
or
xor
sub
adc
xor
jb
inc
es
dec
orb
inc
xchg
fstpt
xor
sti
cmp
addr16
bound
es
or
push
loop
insl
je
fnstcw
shrb
fs
sub
dec
mov
sbb
mov
pop
jno
mov
test
es
jae
adc
dec
adc
adc
sarl
loopne
inc
divl
imul
dec
mov
imul
push
jbe
xor
xor
dec
lock
daa
outsb
xor
xor
cmp
jg,pt
add
adc
sbb
imul
data16
jbe
dec
js
fs
pop
daa
sbb
imul
or
test
jmp
push
ret
ret
sub
adc
and
push
cmpsl
inc
or
or
or
test
mov
in
popa
inc
inc
idivl
add
push
les
repz
pop
scas
push
aam
xor
imul
arpl
iret
repz
or
push
cmp
addr16
std
or
inc
cwtl
fildll
pop
dec
pushf
sbbl
inc
mov
mov
push
and
bound
pop
jb
stos
add
mov
push
inc
ret
jbe
add
imul
push
add
sub
inc
mov
lahf
mov
inc
jmp
xchg
pop
lds
adc
push
fistps
dec
cmpsl
jo
ja
lods
lea
pop
push
sub
cs
imul
sub
daa
xor
pop
and
orl
testl
fisttps
inc
push
or
pop
cmp
dec
cmp
cmpsb
adc
out
arpl
pop
test
push
outsl
and
or
cmpb
fiadds
inc
pop
rorb
insb
add
cmpsl
and
lret
test
push
mov
les
lea
ja
es
xchg
sbb
lods
sbb
adc
mov
in
mov
mov
pop
das
lods
jno
mov
push
dec
es
outsb
sub
push
cs
cmp
mov
xor
mov
and
out
es
add
sub
add
imul
and
inc
imul
jnp
cmp
inc
pop
ret
mov
push
dec
sub
into
xor
pop
jecxz
pop
pop
dec
sub
aaa
or
inc
or
add
pop
jle
js
xor
out
es
inc
cmp
xchg
neg
adc
jbe
dec
or
inc
push
scas
fnstsw
and
ss
push
dec
mov
bound
xor
xor
out
jne
add
cs
push
cs
jne
outsb
jb
loop
sarl
pushf
push
cmpsb
xchg
ja
retw
jmp
lret
inc
pushw
dec
jmp
lret
das
loop
not
arpl
sub
arpl
fs
sarl
mov
cmp
xchg
dec
dec
daa
out
imul
data16
push
mov
cs
jnp
adc
bound
imul
pop
fnstsw
loopne
mov
push
es
ss
outsb
ffreep
test
daa
dec
jb
das
inc
lods
loope
cvtdq2ps
dec
das
add
out
cmp
and
or
mov
iret
jns
dec
cs
sahf
push
cmp
push
push
in
jecxz
insl
sub
push
insl
imul
testl
mov
jnp
fidivrs
jp
ds
clc
fidivs
fiaddl
jg
dec
das
xor
fisttps
jp
pop
out
loopne
outsl
pop
outsl
dec
xor
or
pop
into
xor
pop
enter
imul
inc
jb
push
inc
jg
pop
sbb
loop
ja
rorb
pop
dec
push
testl
outsl
lahf
bts
shlb
test
jnp
xchg
jo
jnp
add
jbe
fidivrs
add
add
fistpl
pop
add
and
jae
add
ja
andl
lcall
pop
scas
sahf
add
mov
push
or
mov
cmp
jae
popl
cmp
movsl
mov
xor
lea
push
add
das
arpl
add
mov
mov
stos
scas
or
or
dec
test
in
or
push
cmp
add
dec
daa
mov
sti
lahf
sub
mov
lret
jmp
sub
or
lahf
lods
int
mov
dec
outsb
mov
jno
or
shl
inc
dec
stos
bound
ja
push
xlat
or
or
sti
cwtl
rclb
push
dec
inc
add
mov
fs
outsl
mov
test
aas
pop
lock
lea
pop
sub
aas
sbb
sbb
mov
addr16
inc
test
div
repz
push
scas
js
mov
outsb
test
mov
rcrb
bound
das
jge
scas
addr16
sbb
mov
arpl
mov
mov
mov
jg
dec
mov
pop
push
mov
jno
push
xor
dec
loopne
in
and
iret
imul
cs
repz
jl
push
jo
mov
add
pop
dec
ja
aaa
outsl
imul
jo
add
repnz
xor
add
pop
ja
xor
xor
push
test
push
or
inc
push
int3
or
adc
push
and
mov
mov
cmp
jae
arpl
xor
mov
or
or
or
sub
lahf
jecxz
push
add
push
sub
and
lods
mov
outsl
aas
nop
dec
jmp
scas
mov
xor
sub
aam
les
scas
xlat
add
adc
xchg
das
adc
orl
fisubl
imul
stos
and
pop
fimuls
mov
stos
das
mov
aad
das
and
stos
arpl
iret
inc
pop
adc
fldt
add
fwait
repz
adc
push
repz
add
imul
in
inc
push
xor
mov
pop
dec
test
scas
orl
cmpsl
inc
daa
jns
mov
aaa
iret
and
xchg
outsb
jo
sub
movsb
rcr
jae
daa
jbe
dec
mov
dec
scas
mov
push
test
ljmp
outsl
shrl
es
xlat
aaa
cltd
lea
outsb
sub
push
fs
ljmp
insl
pop
adc
ljmp
and
dec
jo
or
jle
pop
pop
or
mov
jle
aam
add
das
mov
push
fdivl
push
jno
xchg
mull
or
aaa
xor
fwait
lahf
sub
and
sub
mov
xchg
iret
in
out
push
hlt
xor
cli
push
out
mov
push
sti
sub
inc
das
insb
call
imul
lods
inc
pop
add
lds
es
nop
and
mov
out
sub
adc
and
mov
add
adc
filds
xchg
mov
mov
lods
pop
dec
movsl
enter
push
push
mov
inc
push
insl
ss
adc
xor
pusha
or
mov
sub
sub
nop
mov
xchg
mov
mov
ds
pop
sbb
aas
fstpt
and
jle
jo
fsubs
jmp
lds
sbb
mov
pop
dec
xchg
or
cli
jecxz
dec
push
pop
adc
cs
pop
adc
xacquire
outsb
xor
push
in
or
mov
insl
fs
push
add
jo
lods
daa
data16
mov
sub
and
xchg
xchg
push
add
pop
dec
sahf
xchg
out
sub
add
fimull
fwait
das
push
in
daa
iret
in
xor
aam
les
leave
jae
pushf
mov
movsb
dec
iret
leave
jae
xchg
test
inc
jne
push
or
rcrb
mov
push
sub
pop
ss
push
inc
decl
xlat
add
inc
push
dec
mov
dec
cmp
imul
rcrb
push
cmpsb
or
adc
cmp
ss
cmp
sub
pop
xor
inc
adc
inc
push
addb
sbb
inc
addr16
pop
out
jno
addl
jp
mov
adc
subb
add
and
daa
das
int3
add
dec
cmpsl
push
xchg
sar
dec
imul
cmp
popa
outsb
imul
rorb
add
pop
sbb
add
daa
pop
or
test
push
inc
ret
iret
cmp
jbe
or
jae
xlat
test
test
imul
xchg
xlat
pop
sub
push
mov
inc
andl
push
push
scas
pop
jmp
or
fisttpl
lods
aaa
daa
bswap
mov
push
pop
inc
xor
outsb
aas
addr16
les
inc
dec
sbb
mov
test
aas
jge
add
call
add
rolb
inc
sahf
push
popa
or
mov
nop
inc
stos
test
fmuls
loopne
add
push
pop
out
in
test
scas
dec
repz
ret
cmp
jne
movsb
dec
pop
cmpsl
mov
ljmp
jo
iret
je
adc
jbe
mov
inc
aaa
outsl
dec
xchg
aam
and
push
mov
cs
aaa
dec
inc
arpl
roll
cli
mov
push
xchg
inc
ds
pop
fsubs
mov
insl
notb
push
int
insl
inc
mov
inc
fisubrl
pop
xor
mov
pop
push
jns
ret
xor
stc
sahf
aaa
push
negl
out
or
clc
stos
pop
push
jle
fwait
insl
aaa
pop
adc
adc
js
mov
lahf
push
fs
es
xchg
xchg
inc
out
add
data16
cs
test
test
or
pop
enter
outsb
in
jns
arpl
push
pop
cmp
fbld
sub
sbb
nop
adc
dec
fstpl
and
xchg
cmpsb
shl
outsw
sti
jo
inc
fdivl
data16
lahf
neg
pop
orl
push
jo
inc
mov
sahf
out
jp
stos
leave
call
daa
inc
pop
dec
pop
push
adc
or
lea
cmpsb
sbb
es
repz
fcoms
sbb
push
fs
movsl
lods
push
fnstcw
daa
iret
mov
pop
out
push
repz
push
and
clc
clc
mov
lcall
sti
cmp
jge
ss
and
mov
or
fbstp
pop
pop
push
filds
jnp
or
in
push
cmp
cs
loop
pop
push
push
add
idivb
pop
adcl
in
add
cmp
mov
pop
dec
es
and
sahf
pop
pop
push
idivl
fs
dec
lahf
out
lahf
les
cld
adc
xor
dec
jo
ret
hlt
jns
sti
pop
dec
push
or
lret
jge
out
pop
test
mov
pop
xor
lahf
cmpsl
push
ja
pop
dec
shr
out
sahf
out
dec
inc
mov
jl
iret
icebp
sbb
outsb
cwtl
sahf
cmpsl
stc
cmp
pop
push
dec
jae
jl
out
sahf
mov
repz
shll
pop
jns
mov
jmp
jg
scas
and
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
mulb
or
adc
mov
mov
pop
push
movsl
test
mov
loopne
mov
jg
dec
mov
and
pop
sbb
enter
jg
cmp
adc
or
adc
cld
pusha
or
add
inc
sub
inc
add
insb
pop
dec
orl
dec
inc
add
adcb
cmp
fists
add
xlat
mov
adc
and
addb
add
adc
test
ja
outsb
outsb
jp
xor
ret
out
js
xor
imul
pop
insl
gs
cmp
sarb
xor
sbb
jp
nop
sub
lret
mov
dec
imul
aad
dec
jo
dec
add
out
sub
dec
pop
inc
outsl
adc
dec
add
push
popa
je
insb
mov
push
xchg
cmp
cmpsl
inc
mov
out
fucomp
sbb
pop
push
ficoml
cs
xchg
jbe
pop
mov
jmp
jb
push
inc
ljmp
or
stos
movsl
inc
inc
inc
ljmp
lahf
dec
pop
in
pop
sub
push
in
and
pop
addr16
test
lahf
arpl
push
rcrl
jno
pop
adc
or
inc
or
xlat
jmp
xchg
xchg
jo
push
int
jecxz
jo
inc
outsl
dec
jno
add
daa
mov
dec
inc
jecxz
sbb
or
outsb
insl
xchg
mov
in
fisttps
mov
les
sub
mov
cmpsl
fs
pop
jb
imul
add
push
add
ret
dec
adc
xlat
shll
jae
ret
outsl
andnps
mov
lds
or
fildl
movsb
and
andb
xchg
inc
in
jp
jae
aaa
fnstcw
jb
rolb
cmovp
sysexit
jge
xchg
shl
insl
mov
inc
outsl
fsubs
insb
std
lahf
icebp
dec
fs
jo
xor
sub
inc
pop
dec
imul
outsl
imul
jnp
repz
cs
dec
add
pop
xchg
jg
or
mov
jb
add
inc
xlat
addr16
add
imul
sbb
cmpsl
arpl
mov
test
jbe
sub
mov
sbb
bound
inc
pop
pop
jo
lods
pop
mull
add
dec
mov
jmp
push
aaa
sbb
mov
test
pop
movsl
mov
sahf
out
inc
dec
pop
dec
add
push
pop
mov
out
inc
popl
subl
add
jae
fsubs
cmp
ss
addr16
psubq
push
sub
ja
jo
sbb
pop
add
das
xchg
jne
out
adc
das
lret
sbb
cs
mov
mov
into
pop
pop
loopne
sbb
push
or
cs
data16
cs
outsl
aaa
imul
shrl
xchg
add
aaa
xchg
das
testl
add
xchg
pusha
mov
mov
pop
sub
add
pop
insb
sbb
daa
xchg
bound
adc
popl
orb
jge
pusha
daa
shl
ljmp
inc
into
inc
and
mov
adc
mov
imul
testl
push
jmp
inc
pop
adcl
xchg
push
sbb
das
filds
sahf
mov
inc
cmp
roll
aas
mov
sbb
xlat
and
dec
sbb
jmp
jno
fwait
ja
add
and
loopne
xchg
push
ficoml
inc
mov
sahf
aad
inc
daa
sbb
mov
or
popl
pop
and
pop
or
arpl
rclb
inc
dec
lock
rorl
cmpxchg
fcoms
mov
adc
xlat
sbb
pop
xlat
inc
ss
lahf
inc
sub
dec
mov
push
mov
add
cmpsl
push
sub
stos
call
jg
in
and
pop
and
testl
pop
pop
inc
inc
or
jns
push
inc
cwtl
pcmpeqb
outsb
out
xchg
test
xor
movsb
sub
and
adc
je
mov
insl
jo
xchg
dec
movsb
fisttpl
insb
je
pop
pop
xlat
fnstsw
outsl
jae
daa
pop
jno
outsl
xor
push
inc
lea
out
cmp
pop
and
bound
pop
out
jns
je
jne
or
rorl
dec
or
iret
scas
xchg
rcrb
fildll
jae
decb
cmp
dec
iret
inc
dec
add
adc
mov
add
imul
push
dec
rcrb
inc
stos
xor
inc
inc
dec
daa
test
xchg
psrld
or
fisubl
sbb
out
pop
or
outsl
popa
adcb
sbb
mov
jg
subb
push
movsl
inc
push
mov
adc
pop
push
mov
sbb
push
xchg
push
xchg
pop
lock
jmp
xchg
lods
and
push
mov
leave
pop
pop
jmp
fwait
xchg
inc
insb
lds
adc
pmuludq
inc
fsubl
aam
jns
jb
shlb
jo
mov
push
ret
mov
and
or
xlat
insb
sti
mov
out
inc
outsl
outsb
or
aaa
push
dec
sub
inc
insb
pusha
sysret
sub
or
daa
out
sbb
jo
les
out
jb
mov
mov
out
ds
mov
push
pop
add
push
jmp
pop
incl
dec
inc
dec
push
xchg
add
mov
xchg
xor
pop
jnp
ds
das
fiadds
jg
ret
push
add
pop
push
jb
add
addr16
add
mov
lahf
incl
dec
add
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
incl
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
andb
fcompl
shrl
xchg
out
popf
rorl
mov
jmp
dec
fdivr
ljmp
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
jmp
push
sub
adc
or
cs
insl
sub
adc
or
or
cs
dec
ret
sub
xchg
mov
data16
mov
call
cltd
test
pushl
push
push
shll
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
dec
pushf
pop
rep
cs
outsl
arpl
test
add
mov
mov
movsb
idiv
jmp
jno
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
lahf
jo
flds
pop
and
es
js
pop
mov
imul
xor
das
ds
das
sbb
or
std
lcall
sub
jnp
filds
pop
inc
inc
inc
push
inc
pop
and
or
aas
js
mov
cwtl
xchg
sbb
sub
mov
outsb
add
or
pop
pop
test
sub
insb
pop
gs
rol
daa
pop
aas
ds
loopne
xor
popw
push
test
aaa
push
cld
xor
inc
add
daa
push
mov
loope
pop
mov
sub
sub
lods
mov
and
pop
push
stc
mov
jns
pop
mov
mov
cwtl
cmp
int
fistps
xlat
outsb
lds
adc
sahf
data16
push
jbe
scas
sar
mov
push
push
inc
cmpsl
jge
inc
lahf
inc
cmpsb
cs
mov
test
mov
es
mov
cmp
icebp
mov
or
lahf
dec
push
adc
cmp
testl
insl
dec
dec
scas
push
inc
into
mov
dec
imul
xor
inc
popf
out
push
and
xor
dec
js
add
ja
out
push
imul
inc
enter
mov
xchg
push
addr16
and
bound
sbb
loop
cwtl
es
insb
jns
shll
aam
xchg
and
popa
stos
fisubl
pop
mov
inc
cs
decb
sbb
sub
sub
push
cld
or
sub
js
ret
dec
inc
lahf
cltd
cltd
inc
mov
adc
jo
shlb
add
outsl
mov
icebp
gs
jo
jns
iret
inc
mov
sbb
pop
insb
adc
pop
mov
int
outsl
insl
jne
cwtl
lds
add
xchg
or
addr16
cmp
and
push
inc
je
bound
pushf
fisubl
aaa
inc
insb
dec
jbe
cmova
fiadds
inc
popa
imul
inc
jle
fsubrs
aaa
xor
jnp
fcomps
in
sahf
dec
sub
adc
pop
ret
orb
inc
or
fucomip
xchg
dec
inc
xadd
sbb
inc
cmovo
addb
adc
cmpb
aas
outsb
mov
arpl
pop
pop
pavgb
jne
enter
test
xor
cmpb
mov
push
and
loopne
cmp
sbb
scas
sbb
es
cmp
ret
daa
ds
iret
push
sbb
addr16
dec
and
daa
fcmovnu
cmp
push
inc
push
pop
das
inc
pop
lods
pop
lods
add
lods
lods
jne
cmpsl
ja
lahf
add
daa
les
enter
mov
stos
daa
outsl
inc
xchg
mov
mov
mov
sub
fs
push
mov
mov
dec
fsubl
fisttps
or
mov
inc
test
add
jl
and
leave
mov
pop
jle
mov
mov
mov
xchg
pop
clc
mov
lret
pop
xor
adc
outsl
add
lret
fcomps
add
ss
daa
iret
nop
cwtl
fadd
out
jno
pop
and
enter
sti
cmp
adc
inc
inc
add
mov
dec
adc
inc
cmpsb
jge
and
xor
xchg
dec
and
mov
outsl
xchg
js
add
jl
pop
repnz
enter
mov
enter
and
addr16
in
mov
daa
clc
outsl
inc
ss
add
inc
int3
push
push
pop
pop
add
das
inc
daa
outsb
outsb
leave
xor
insl
adc
aas
daa
addr16
pusha
daa
push
aam
mov
push
aam
fwait
cwtl
ds
mov
int
xor
push
outsb
jnp
inc
push
nop
enter
enter
ja
aam
add
repnz
cmp
aas
fadds
adc
int
pop
mov
in
inc
scas
ror
ja
bound
sub
insl
shrl
push
inc
daa
lock
imul
dec
inc
enter
test
pop
outsl
out
push
loopne
nop
das
sbb
imull
mov
sub
push
out
aaa
je
mov
push
push
sub
push
dec
sahf
or
push
mov
jo
sub
daa
add
mov
jo
mov
daa
aam
fs
and
add
aam
mov
leave
xor
enter
inc
push
test
push
xchg
cld
mov
mov
insb
sar
jl
scas
cltd
fsubrs
jo
repnz
in
mov
int3
jns,pt
jbe
divl
add
add
roll
dec
push
sbb
in
dec
add
and
dec
rcrl
or
shrb
movsb
stc
lods
ja
add
pushf
lods
add
jns
dec
lahf
cs
nop
pushf
xor
cld
pop
enter
shlb
es
and
rorb
negb
pop
lahf
pusha
ja
and
mov
mov
lods
mov
fsubr
cld
enter
mov
pop
loopne
rcrl
bound
lock
push
shl
fcoml
outsl
insl
push
fistpll
or
subb
and
pop
enter
cmpsl
cmpb
cmp
clc
scas
cmpsl
pop
jb
pop
cmp
pusha
jge
inc
ds
cmp
dec
push
dec
fisubrs
pusha
jg
pop
enter
jl
mov
in
mov
cmp
mov
loopne
or
nop
fbstp
in
and
xor
dec
in
jnp
dec
push
xor
cmpsl
in
and
outsl
insl
jg
and
js
and
jae
pushf
fcoms
pop
jb
cmpsl
js
int3
inc
ds
test
lock
mov
int3
js
jnp
repnz
xor
inc
push
and
cmpsl
outsl
insl
orl
sahf
mov
sahf
xchg
test
dec
add
iret
enter
pop
jb
pop
enter
outsl
inc
ds
and
xor
lahf
mov
ja
and
and
test
je
pop
jb
outsb
dec
lahf
fs
and
test
aam
enter
mov
stos
outsl
mov
adc
sub
packssdw
jg
or
cmpsl
test
push
dec
dec
addr16
pop
sahf
or
loopne
mov
jns
loopne
es
adc
add
adc
pop
push
push
and
addr16
cmpsl
or
mov
daa
cmpsb
push
orb
fs
addr16
cmpsl
sub
insb
test
insl
leave
xlat
addr16
add
test
clc
rcll
movsb
inc
repnz
loopne
fidivl
jo
aas
cmpsl
imul
iret
mov
mov
fidivrl
push
iret
test
cmpsl
mov
js
add
ds
out
fcomps
hlt
nop
xchg
jl
lds
aas
pop
sahf
push
fmuls
ja
nop
out
sahf
rcrb
mov
dec
enter
or
pop
adc
and
xchg
pop
jmp
rcr
push
sbbl
clc
dec
in
jbe
dec
mov
inc
mov
push
mov
pop
push
cltd
pusha
insl
adc
rcl
in
lock
js
stc
pop
enter
xor
mov
mov
push
movsb
inc
rep
sub
int3
loopne
fstp
test
addr16
lahf
int3
out
fiaddl
sub
mov
fstl
mov
aam
popf
nop
int
shrl
fidivrs
ficomps
dec
inc
ja
jge
sub
sar
ficomps
pushf
fiadds
and
jne
push
call
jb
mov
jo
int3
fsub
and
lahf
jo
int3
filds
sub
inc
fisttps
andb
fsts
jg
int3
rcr
or
inc
inc
or
ja
rolb
fsubrl
out
in
iret
push
cmpxchg
xor
inc
lcall
push
addl
lahf
pusha
fs
push
mov
fdivs
pusha
jg
and
addl
enter
or
dec
enter
loope
push
sub
mov
cmp
iret
mov
iret
mov
in
pop
daa
insb
imul
stos
lahf
in
inc
ja
and
pop
inc
adc
lods
mov
shl
outsl
push
jmp
jae
add
xchg
fimull
dec
inc
in
lods
lods
ja
fs
nop
or
pusha
jo
nop
out
cs
mov
mov
mov
or
es
adc
mov
lock
jecxz
pop
enter
in
int
insl
ja
adc
nop
mov
enter
dec
lahf
and
test
inc
loopne
cltd
pop
ja
pop
in
inc
push
cs
je
in
push
lds
inc
xchg
inc
mov
aas
js
cwtl
xor
scas
in
push
mov
enter
imul
fdivr
cmp
lock
or
testb
or
outsl
xor
lahf
mov
pop
and
iret
pusha
enter
js
pop
aas
mov
sbb
xchg
shrl
jl
ror
jns
enter
fxam
insl
add
mov
call
outsl
inc
or
daa
es
sarb
data16
pop
fidivs
adc
daa
pushf
fcoml
dec
xor
call
fsubrs
jo
scas
xlat
ds
ss
call
fildl
or
push
or
push
add
fstpt
addb
aas
call
mov
pusha
out
jo
ja
lods
pop
mov
mov
outsl
sahf
imul
mov
add
dec
aam
jns
dec
jg
in
push
mov
outsl
xor
out
dec
cmp
mov
mov
dec
push
push
daa
aas
movl
ss
out
in
cs
pop
lahf
ja
daa
pop
leave
enter
test
dec
inc
xchg
pop
leave
xchg
inc
cmp
xchg
pop
leave
xor
sub
leave
xchg
pop
sub
jbe
xchg
out
add
mov
push
dec
mov
mov
icebp
mov
enter
jnp
clc
add
es
push
and
lock
out
mov
out
mov
ja
iret
push
dec
xor
repz
jns
in
push
push
repz
movsb
mov
jmp
lock
pop
cmp
add
scas
cs
mov
ljmp
es
setl
addr16
inc
and
mov
aas
dec
inc
scas
movsb
stc
push
ss
fildl
adc
lcall
jmp
ret
xchg
jns
nop
mov
fistpll
or
mov
out
cld
mov
mov
inc
jmp
ja
aam
leave
add
in
push
xor
ja
add
sbb
cltd
in
outsl
xchg
sti
inc
and
faddl
mov
jl
add
rcr
in
dec
outsl
xchg
or
leave
add
inc
loop
leave
pushf
inc
in
enter
lcall
dec
in
fistps
fistpll
loope
and
test
cmp
mov
pop
stos
xchg
pop
pop
scas
or
add
outsl
leave
push
lock
out
mov
xor
fstp
xor
and
add
call
push
movsb
out
bound
fsubs
ljmp
add
lods
xor
xor
out
out
and
outsl
add
sub
loop
sub
sub
or
js
dec
sahf
out
aaa
js
cwtl
add
dec
sahf
out
mov
repz
movl
sub
xchg
xor
mov
pop
dec
jg
push
mov
sub
adc
jg
daa
push
xor
sub
sub
lock
fimuls
icebp
mov
popa
dec
outsl
add
ror
sbb
fisubs
loopne
mov
mov
fdivrp
and
mov
and
jbe
xchg
scas
add
bound
rorl
scas
add
cmpsl
or
fs
daa
add
xlat
imul
push
and
stc
out
add
lods
jb
fisubrs
mull
xchg
xchg
push
pushf
daa
add
mov
lods
jbe
aaa
jmp
call
loopne
or
pop
lcall
or
xchg
push
cwtl
or
jl
repz
push
pusha
repz
les
inc
loopne
xor
and
push
pushf
aaa
inc
repz
xchg
testb
sbb
jecxz
add
jl
rcl
filds
repz
mov
jbe
lock
outsl
push
push
scas
sbb
stos
outsl
jg
loop
mov
movsl
hlt
daa
testl
push
xor
scas
push
movsb
jbe
clc
mov
push
mov
hlt
scas
pop
testb
data16
cmp
xchg
clc
loope
lods
ret
mov
xchg
mov
jb
jmp
or
add
adcb
cmc
push
xlat
xor
xchg
dec
outsb
mov
lds
js
add
xlat
shl
cmp
clc
mov
cmc
dec
inc
cmp
notb
in
push
pushf
and
fdiv
pop
in
cmc
mov
testl
and
add
testb
imulb
fs
shlb
xor
xor
or
divl
or
cmp
outsl
add
scas
js
cmpsl
pusha
divl
imull
fstp
add
xchg
mov
pop
mov
in
mov
hlt
ja
loop
leave
mov
aas
jg
addr16
iret
test
push
fs
add
and
dec
mov
sub
mov
push
faddl
mov
dec
mov
aaa
lds
pop
pop
in
sub
pop
mov
stc
ss
push
and
adc
add
testl
push
aam
or
mov
dec
xchg
add
iret
cltd
mov
out
pop
cli
daa
or
mov
cmp
aaa
insb
push
in
cwtl
out
mov
push
call
ja
sahf
pop
or
outsl
mov
or
aas
add
push
mov
cmpsl
aaa
or
adc
push
and
jg
adc
inc
sti
mov
popa
jmp
cmpsb
nop
fwait
pop
or
fistps
pop
enter
push
push
enter
add
cmpsb
mov
xchg
mov
fs
push
cld
pop
scas
add
insb
outsl
or
dec
xchg
add
xchg
lcall
addr16
loopne
push
cli
out
dec
outsb
ja
mov
or
mov
out
fiadds
std
addr16
jl
aas
mov
push
andl
daa
lods
int
movsb
in
mov
aam
addr16
hlt
or
push
dec
mull
xor
jp
mov
push
inc
xchg
inc
orl
decl
out
push
nop
jbe
nop
or
or
rol
loopne
or
inc
rol
adc
mov
push
xor
lods
sub
ja
shrb
clc
out
push
or
negl
jl
les
clc
ja
pop
test
outsl
call
mov
mov
aad
addr16
test
dec
out
outsl
mov
jno
jb
test
stos
ror
repz
jmp
xchg
mov
add
cmp
out
shl
mov
imul
cli
adc
sahf
out
xchg
icebp
or
mov
arpl
out
xchg
shl
mov
pop
pushf
out
mov
cmp
add
cmpsl
xchg
in
or
ds
out
nop
aas
int
jns
xchg
mov
cmc
sbb
cmp
mov
sbb
jns
mov
stc
cmp
shll
mov
jl
cmpsl
cs
ljmp
iret
jne
push
cmp
iret
repz
icebp
adc
aas
lea
out
ds
fwait
in
cltd
push
jge
ja
xlat
and
or
out
push
into
hlt
xchg
pushf
mov
add
inc
ds
repz
mov
xor
addr16
iret
or
repz
int3
sbb
mov
daa
mov
sahf
out
sub
iret
sarl
inc
jle
add
and
test
iret
repz
leave
repz
repz
in
stc
xor
out
stos
dec
es
lcall
cmp
lods
push
mov
loope
scas
lahf
jb
push
mov
out
xor
leave
push
mov
xchg
cmp
out
fdivr
es
test
sahf
cmpsl
stc
sbb
inc
pop
mov
stc
cmp
repz
sarl
fs
xlat
outsb
mov
out
ds
mov
xor
cmp
daa
mov
stc
out
ds
mov
xchg
out
repz
ss
mov
repz
mov
int
hlt
aaa
mov
dec
adc
cmp
fdiv
jns
out
shll
inc
ret
lcall
dec
les
das
lds
lea
scas
repz
jge
ds
popf
clc
xor
imull
dec
xchg
lret
lahf
out
push
jl
loopne
int3
xchg
out
fldenv
int
subb
into
inc
mov
out
iret
arpl
jns
iret
pop
rcl
notb
cmp
ds
fstpl
shll
sahf
cmpsl
stc
sbb
pop
cwtl
out
adc
out
ds
rcll
jbe
xor
jns
xlat
mov
sahf
cmpsl
stc
cmp
and
pop
mov
lcall
stos
sub
out
fdivr
jp
popf
shlb
lahf
cmpsl
stc
sbb
arpl
lahf
out
insb
and
sbb
repz
aam
lock
int
insb
lahf
outsb
outsl
hlt
dec
push
cmc
testl
cli
xor
stc
mov
dec
inc
pushl
fsubrl
add
add
lahf
int3
nopl
push
inc
cmpsb
push
inc
aas
aam
jns
mov
push
scas
pusha
jmp
or
scas
sbb
xor
mov
cmpsl
or
loopne
loopne
popf
pop
aaa
lahf
out
pop
mov
insb
mov
leave
or
pop
xchg
aas
das
fs
dec
cmp
push
xor
fdivrs
mov
cmp
aas
or
bound
ficoml
mov
int3
or
das
cmp
mov
frstor
pop
testb
leave
and
filds
decb
lcall
mov
xor
vcvtpd2dqy
jecxz
push
inc
outsl
pop
push
inc
das
inc
ds
ds
inc
imul
out
push
aas
mov
mov
daa
pushf
int3
dec
mov
jg
dec
aas
in
scas
jmp
xchg
mov
ss
outsl
jmp
ss
inc
daa
movq
or
ja
and
daa
in
or
rclb
pop
push
fdivr
sub
mov
adc
inc
ffreep
adc
push
cmp
iret
shlb
add
push
mov
lahf
push
dec
enter
ja
or
enter
or
filds
add
movl
push
jb
mov
jnp
push
das
je
stc
add
or
cs
jg
lock
add
jno
and
xlat
iret
fiadds
pop
inc
leave
or
mov
rclb
dec
divl
push
dec
movb
mov
add
fistpll
inc
pop
xor
fsubr
outsb
and
daa
inc
scas
push
xchg
fldl
push
push
dec
sbb
ja
leave
mov
in
js
ja
in
mov
fbstp
leave
leave
jne
call
cmpsb
scas
and
jb
mov
pop
push
mull
js
pop
test
ss
push
pop
xor
int
push
xchg
push
xchg
mov
push
jb
adc
in
mov
negb
push
dec
scas
dec
je
lret
push
cwtl
adc
push
xchg
adc
sbb
sbb
pop
inc
aaa
xchg
inc
cmpsl
mov
and
daa
inc
enter
xchg
pop
mov
dec
jb
outsl
mov
jl
notl
push
fisttps
sbb
scas
dec
outsl
lds
iret
push
cmp
das
inc
dec
add
or
add
sbb
mov
mov
lock
mov
pop
and
dec
mov
lea
les
test
xchg
xor
or
out
fs
cmp
fs
sbb
jae
pop
push
pop
cmp
adc
add
push
loopne
loop
out
push
xchg
inc
jg
cmpsl
inc
mov
adc
mov
mov
push
cmp
pop
pop
push
xchg
pop
lods
jo
jle
xchg
add
rcr
mov
add
add
ja
fmull
mov
and
iret
pop
lahf
shlb
shll
push
xchg
sub
addr16
mov
jns
fsubrl
jl
test
push
testl
and
dec
hlt
iret
mov
mov
mov
mov
jb
adc
mov
pop
and
mov
mov
cmpsl
pop
pop
gs
cmpsl
jne
or
loopne
jge
pop
pop
fcoml
mov
xchg
xchg
mov
filds
scas
cmp
push
ljmp
cmp
addr16
or
or
or
stos
lock
or
xor
insb
cmp
sahf
fwait
movd
jns
pop
outsb
dec
fists
mov
push
inc
push
inc
xlat
pop
xor
adc
inc
mov
xchg
push
inc
push
fs
dec
leave
orl
pushf
mov
pop
jg
mov
mov
mov
jb
enter
mov
mov
mov
mov
mov
iret
or
mov
mov
enter
xchg
fildll
push
lea
das
cli
and
jmp
pop
mov
adc
xchg
inc
repnz
sbb
jno
cmp
sbb
lahf
push
inc
aas
popa
popl
push
das
jns
addr16
pushf
out
add
mov
jnp
scas
mov
popl
xchg
bound
sahf
xchg
or
or
clc
inc
fcomip
mov
cmpsl
nop
inc
addr16
addr16
nop
add
xchg
dec
dec
ss
pop
nop
in
movsl
add
mov
in
lock
in
repnz
nop
mov
cmp
test
dec
sbb
stos
dec
out
mov
xchg
scas
popa
and
pop
scas
movsb
sbb
ljmp
notl
xchg
out
dec
and
or
add
adc
pop
pushf
inc
jbe
xchg
xchg
sbb
leave
push
lock
iret
daa
mov
mov
cltd
push
mov
out
test
mov
pushf
fcoml
pop
je
mov
sbb
jmp
and
mov
push
xchg
add
outsb
mov
inc
inc
push
daa
dec
pop
push
subps
add
dec
outsl
xchg
addr16
mov
xor
lcall
daa
mov
aas
lcall
xchg
xchg
cmp
sbb
dec
pop
add
test
mov
cwtl
scas
mov
lret
xchg
push
lock
adc
or
push
sbb
dec
push
addr16
jmp
cmp
inc
push
aas
xchg
rcll
xchg
incl
mov
add
scas
hlt
push
jg
mov
es
in
jmp
iret
enter
add
xchg
iret
enter
pop
pop
xchg
pop
leave
mov
and
sub
fsubrl
xchg
or
mov
inc
push
dec
sbb
outsb
add
and
ja
pop
push
add
popf
movsl
aaa
push
add
iret
push
movb
loop
and
xchg
out
dec
or
popf
mov
push
cmpsl
in
add
xchg
lock
dec
and
adc
xchg
outsl
add
cltd
dec
sub
nop
popf
jns
fcmovnb
jg
inc
mov
iret
into
mov
out
and
sti
pop
emms
fldcw
push
adc
pop
push
cmpsl
add
iret
push
fcompl
nop
sub
sub
and
mov
push
in
add
repnz
dec
mov
aaa
add
adc
pop
dec
push
pop
jmp
inc
jge
test
xchg
test
push
icebp
and
cwtl
xlat
es
push
aaa
add
push
sub
xor
jns
jg
xchg
mov
mov
ret
outsb
rorl
xchg
push
leave
xor
daa
sbb
add
pop
insl
xchg
pop
dec
cltd
cld
push
xchg
xchg
mov
and
xor
push
and
pop
mov
scas
inc
popl
pop
ja
cmpsb
pop
andb
test
dec
lcall
jge
cmpsl
cmp
push
cmpsl
push
mov
es
in
movsl
pop
js
pop
test
push
test
orb
fmul
in
in
loopne
inc
fwait
decl
jmp
insb
addr16
leave
repz
jg
fwait
push
add
add
cmp
mov
pop
add
xchg
or
jmp
mov
inc
loop
leave
add
adc
out
loopne
cmp
popl
int3
and
sbb
aas
sub
pushf
daa
data16
jo
aaa
jmp
mov
push
scas
push
push
lahf
pusha
push
inc
ds
push
insl
pop
push
jp
test
sub
sub
push
aas
loope
and
daa
in
pop
testl
mov
mov
dec
dec
sub
add
out
cmp
inc
mov
push
fildll
popf
xor
out
push
lahf
dec
popf
outsl
jo
mov
cmpb
ja
pop
leave
jae
mov
movzwl
leave
lods
call
fisttpl
jecxz
in
iret
in
in
push
add
lock
cltd
pop
and
sahf
pop
and
leave
insl
and
push
sub
outsl
push
loope
jb
xchg
sahf
jmp
inc
shrl
lret
psrlq
call
sub
cltd
in
sbb
out
add
pop
lahf
in
xchg
mov
fisubl
fsubrl
ljmp
daa
xchg
push
daa
or
aas
xchg
xor
cmp
inc
sub
mov
call
psrlw
addr16
jo
aaa
bnd
add
lock
or
add
adc
in
aas
mov
aaa
or
fmulp
pop
pop
js
add
xchg
cmp
dec
sub
dec
dec
inc
dec
pop
mov
fcmovne
repz
in
lock
bndldx
fists
push
or
int
daa
push
or
cmp
jns
push
adc
and
sahf
imul
test
aad
fwait
dec
test
mov
pop
jbe
dec
dec
insb
cs
in
inc
dec
xor
mov
nopl
sahf
fmull
pop
pop
mov
in
mov
scas
arpl
mov
imul
jnp
add
orl
pop
and
dec
sbb
push
mov
push
fldcw
in
pop
imul
ja
iret
xchg
dec
sahf
pop
add
movsb
in
daa
xchg
xlat
cs
push
sbb
push
or
jo
js
addb
mov
add
movsb
out
push
lea
adc
mov
or
cld
out
mov
shlb
popl
sbb
mov
add
testl
and
addr16
xor
orl
and
movsb
xor
cmp
movsl
das
dec
dec
jb
outsb
movsl
jbe
fdivl
popf
fsubrl
cwtl
cltd
lahf
mov
mov
out
add
aad
push
and
or
xor
movsl
and
fimull
adc
mov
mov
dec
cmpsb
in
frstor
push
imul
repz
jnp
add
add
ljmp
ss
mov
inc
mov
mov
jmp
or
xor
sahf
xchg
push
add
sahf
push
add
pusha
add
outsb
push
into
jl
cs
xor
pop
xor
push
rcrl
fninit
mov
xchg
cs
test
push
enter
scas
and
scas
xor
jb
inc
test
test
test
andb
in
into
mov
jmp
test
into
insl
and
sub
add
daa
cli
ja
xor
daa
sub
pushf
dec
test
test
filds
call
scas
inc
jmp
insl
ja
ss
xchg
xchg
fcmovnbe
ja
in
shll
cmp
or
jbe
sub
xor
mov
fisubs
les
ja
pop
jle
add
jmp
xchg
push
daa
iret
jae
sahf
cmpsb
or
cmp
mov
iret
repz
push
fsubp
iret
jae
cmp
out
notb
mov
push
stos
unpckhps
push
cltd
loopne
repz
push
push
stos
xlat
sbb
inc
push
add
out
inc
into
das
test
add
and
xchg
outsb
push
aam
ret
popf
pushf
in
psubd
les
cmp
sub
jb
xchg
arpl
jae
pop
mov
sbb
lods
das
aam
scas
sub
lods
mov
push
adc
dec
call
push
add
xor
dec
jns
jns
dec
or
push
or
fnstsw
or
das
insl
adc
cmovle
jg
fsubs
sbb
outsl
es
xlat
mov
jp
rclb
pop
pop
or
jns
push
push
daa
or
push
clc
es
or
adc
adc
push
vpmacssdqh
pop
pushf
and
cwtl
cmp
in
and
xchg
xchg
push
pop
mov
sbb
out
out
and
sbb
add
enter
and
lahf
out
or
adc
pop
pop
sub
xor
sub
push
call
pop
pop
cmp
ja
add
jle
push
mov
int3
sarl
pushl
std
inc
notrack
cmp
loopne
add
cmp
aad
jnp
mov
add
jmp
cmp
sbb
mov
repz
or
pop
or
scas
or
cmp
and
js
scas
push
scas
mov
enter
loop
repz
in
mov
push
or
or
hlt
cmp
das
or
or
inc
mov
subb
cmp
mov
sub
push
mov
mov
xchg
lret
movl
insb
push
daa
movsb
fistps
inc
scas
mov
test
add
popf
mov
leave
fcoml
in
mov
push
xchg
idiv
arpl
les
mov
jns
add
mov
scas
out
incl
call
sahf
cmovns
daa
daa
daa
cmp
sub
inc
ret
int3
ds
xor
je
mov
leave
in
mov
shlb
into
enter
aad
nop
cmp
aas
repz
xlat
loopne
das
ficoml
mov
push
push
xchg
mov
inc
mov
inc
mov
daa
push
push
outsl
pop
pop
cmpsb
push
outsl
aaa
inc
cmpsl
in
cmp
xchg
popf
mov
push
inc
in
orb
je
in
call
add
and
push
dec
sti
mov
mov
jns
dec
mov
inc
or
mov
cmp
daa
or
mov
sbb
in
mov
ds
add
ret
xchg
inc
xor
ret
mov
pop
idivl
pop
jo
fsubrl
mov
inc
jb
ffreep
inc
movsl
push
push
fmull
out
mov
outsb
inc
leave
clc
inc
out
out
push
out
popf
bound
add
mov
sub
leave
cmp
push
pop
pushf
inc
jl
popf
sub
mov
dec
das
mov
mov
cmp
fwait
cmpsl
push
enter
jbe
ror
lahf
sbb
ja
and
or
xchg
xchg
mov
inc
fdivrl
push
jg
xchg
add
xchg
add
xchg
sbb
add
mov
stos
mov
inc
ja
dec
dec
es
add
in
sbb
cmp
mov
and
mov
push
mov
shrl
fists
pop
jb
pop
fmul
add
enter
adc
cs
cli
mov
in
dec
sub
sahf
xchg
fucomi
dec
orps
cmp
add
stos
das
jg
inc
mov
mov
femms
add
pop
pop
mov
cmpsl
sbb
scas
test
daa
fstl
dec
push
pusha
mov
incl
xchg
pop
stos
xchg
popl
into
add
popl
mov
pop
sldt
cs
iret
sbb
and
push
or
jmp
das
femms
dec
repz
cvtps2pd
out
adc
add
sets
mov
pop
daa
push
das
push
add
rorb
cmpsb
mov
das
psubusb
and
sbb
sub
adc
mov
daa
cmovl
flds
xchg
add
gs
cmpl
add
jns
out
movzwl
pop
rorl
iret
leave
inc
aaa
push
aad
xor
pop
and
mov
cmp
push
add
addr16
push
ret
outsl
push
xchg
mov
xchg
mov
mov
les
iret
push
add
sbb
std
or
adc
dec
sub
mov
dec
ja
xor
push
xchg
setns
outsb
mov
mov
ud1
iret
in
adcb
or
adc
mov
pop
mov
mov
push
aas
push
iret
aaa
mov
cmpsl
push
call
push
add
cmpsl
push
pusha
mov
aaa
fcmovne
leave
sub
xchg
nop
xchg
mov
dec
push
add
sahf
out
daa
adc
sbb
and
dec
icebp
in
add
inc
mov
mov
xchg
out
pushf
outsb
jbe
add
lcall
test
mov
mov
pop
aam
paddsb
lcall
mov
cmpsl
nopl
push
xchg
mov
jb
cltd
push
pop
punpckldq
and
xchg
mov
movsl
mov
xchg
out
cmp
mov
lock
and
fisubrl
sub
addr16
and
sub
shl
in
jb
xchg
pcmpgtd
inc
jb
outsb
xchg
cltd
mov
cmp
cmpsl
ja
cltd
dec
pop
and
mul
and
xchg
iret
ja
shll
enter
sub
rorl
add
cmp
repz
dec
clts
push
pop
ficomps
fidivrl
or
fmull
sete
push
fsubrl
dec
push
jg
fimull
loop
test
incl
mov
nop
in
leave
leave
sub
cmp
cmpsl
push
mov
sahf
pop
and
retw
mov
mov
cmp
cmp
in
sarl
icebp
mov
iret
repz
add
pop
ret
and
dec
icebp
adc
aas
sbb
enter
push
inc
xlat
push
ret
insl
ret
insl
in
insl
jne
jge
xlat
test
lea
in
jne
xchg
mov
lods
mov
push
and
in
lret
or
jb
dec
lock
add
iret
jae
push
sbb
sub
outsl
jbe
les
xor
outsl
cmp
or
inc
les
cmp
ss
gs
iret
jo
jnp
add
xchg
jbe
out
mov
sahf
adcl
ds
dec
xadd
xchg
xchg
dec
insl
cwtl
mov
push
pop
cvtps2pd
add
jge
test
xchg
mov
js
jo
mov
xchg
push
add
rol
clts
sarb
pop
jo
push
or
jns
xchg
out
call
or
mov
repnz
sub
push
out
movb
dec
sub
iret
push
in
loop
dec
ja
add
xchg
negl
add
lea
pop
aam
push
adc
int
mov
push
popf
xor
add
ljmp
mov
das
push
xlat
femms
fists
je
in
iret
pop
xor
adc
dec
dec
inc
movsb
push
xlat
shl
movl
mov
pop
lea
mov
daa
push
dec
dec
dec
outsb
mov
pop
cmp
dec
maskmovq
loopne
or
psubsb
call
push
aaa
repnz
push
pushf
pop
mov
xlat
add
mov
pushf
push
daa
pop
pop
movq
lcall
das
cmp
xor
sahf
pushf
dec
and
out
cli
enter
sbb
leave
repnz
pop
adc
es
xor
repnz
inc
leave
push
leave
pop
leave
or
repnz
fwait
outsb
fnstsw
stos
das
stos
xchg
in
and
into
addr16
jne
in
fimuls
out
idivb
add
pop
paddd
leave
push
lret
xor
pop
outsl
and
push
xor
aas
xchg
cmp
test
iret
popf
add
lahf
lods
pop
in
orb
nop
jb
pop
nop
inc
xor
xor
stos
shr
out
sbb
daa
inc
call
push
dec
repnz
lret
mov
imul
pop
loope
dec
push
pop
or
adc
or
sub
ss
jns
out
add
repz
bound
or
js
iret
leave
repz
or
repz
push
scas
btr
iret
repz
adc
adc
repz
fistl
out
icebp
adc
cld
push
pop
int3
pop
adc
cmp
jnp
push
sbb
dec
mov
pop
push
dec
dec
dec
dec
adc
dec
dec
dec
adc
femms
jae
dec
dec
or
add
pop
data16
xlat
int3
mov
jbe
add
jle
dec
xor
out
xchg
out
nop
ja
xlat
jl
dec
push
push
push
jmp
mov
inc
ja
mov
leave
aaa
enter
psrlw
pop
xchg
addr16
dec
adc
sbb
mov
out
hlt
int3
and
inc
mov
int
push
add
cwtl
dec
sahf
lret
int
pop
int
mov
jo
cmpsb
add
push
aas
enter
leave
add
leave
inc
jb
fildll
out
int
push
pop
ss
add
into
mov
leave
inc
xor
into
xor
push
daa
addr16
and
jbe
enter
pop
add
stos
mov
into
into
lods
xor
ja
xchg
adc
iret
adc
daa
push
outsl
dec
ret
pop
sub
out
mov
push
mov
mov
add
jle
out
mov
xchg
xchg
leave
inc
repnz
mov
jecxz
iret
pand
jmp
mov
adc
pop
mov
and
or
pop
dec
rclb
push
rcrb
arpl
outsb
daa
mov
imul
rcr
jnp
pop
xor
out
fcompl
out
push
or
mov
mov
fmull
push
mov
adc
cmp
addr16
in
in
out
testb
cmpsb
pop
pusha
sbb
xchg
jmp
repz
das
push
add
popl
jl
lods
ret
push
rorl
add
xlat
lods
sub
daa
lock
lahf
subl
mov
mov
bts
mov
push
fbld
sahf
fstpt
lret
rorl
and
pop
pop
mov
add
je
mov
daa
jmp
iret
das
shrb
jne
push
push
and
xchg
sub
xor
in
dec
cmp
and
dec
insb
dec
sahf
fcmovne
ja
ja
insb
jae
cmp
int
repnz
test
in
jecxz
sar
clc
shlb
xchg
xchg
or
cmp
shrl
dec
mov
js
jo
rcrl
xchg
setns
incl
out
mov
daa
pop
clc
adc
aam
fcmovne
mov
dec
andnps
sub
subb
xchg
push
cmp
decl
in
xchg
adc
aam
dec
adc
and
jo
fcoms
nop
cs
adc
stos
pop
lahf
or
fs
push
add
out
in
xor
sub
cmpsl
cld
ljmp
and
or
gs
out
jbe
sub
lahf
push
add
dec
push
add
lcall
mov
data16
pop
add
jae
pushf
or
or
cmp
cmpsb
sub
mov
insl
and
mov
js
mov
jbe
adc
mov
es
iret
in
leave
xchg
add
lods
fisttpl
addr16
addr16
inc
xor
xchg
pop
movsb
xchg
inc
iret
leave
inc
pop
add
push
jb
data16
mov
lahf
pxor
push
xchg
push
add
cmp
in
clts
sahf
pushf
pushf
pushf
in
hlt
incb
xlat
daa
daa
mov
aas
push
nop/reserved
sub
or
sbb
sub
xlat
iret
ja
pop
and
add
add
mov
fistl
sbbl
popf
enter
rcl
fwait
jl
mov
pop
syscall
cs
sahf
outsb
invd
decl
fcomps
adc
sub
inc
mov
add
mov
xlat
push
jo
fmuls
cltd
add
xchg
adc
sub
fiadds
loopne
add
leave
jnp
push
iret
fdivr
dec
das
in
packsswb
xchg
adc
aas
test
iret
dec
cmp
daa
mov
push
cmp
enter
rcl
push
xlat
xchg
mov
fmuls
fsts
push
xor
adc
pop
jbe
cmovl
iret
in
push
cmpsl
push
je
fldcw
xchg
fstps
enter
shll
pxor
jbe
jns
imul
addr16
daa
pop
leave
xor
inc
push
dec
daa
pop
leave
and
jne
jns
add
loopne
xchg
sbb
pop
test
aaa
add
aad
fidivrl
ja
push
xchg
in
push
add
out
std
add
pushf
pushf
add
or
fucom
mov
push
push
push
adc
cmp
adc
enter
adc
dec
fisttpl
in
fistpl
ljmp
mov
ja
iret
sbb
pushf
pop
xorps
add
scas
fwait
cmp
clts
scas
bsf
int3
or
jns
aam
or
insb
cmp
je
sbb
fidivs
cmpsl
pop
and
outsl
pop
xor
sahf
fldt
das
mov
into
int
jns
pop
dec
pop
mov
iret
stos
dec
inc
cmovp
or
jnp
xchg
push
push
pop
pop
punpckldq
sahf
out
sahf
adc
jb
jp
jb
dec
movups
mov
cmp
mov
shl
jne
out
fimull
sbb
sahf
out
pop
repnz
ds
leave
cli
add
push
and
fstl
fnstsw
sbb
and
sub
cmp
repz
sub
xor
cmp
repz
sub
dec
sub
cmp
pop
das
bound
repz
outsl
mov
and
mov
mov
pop
movsl
inc
fcoml
xchg
pushl
popf
and
pop
push
aas
push
ja
and
mov
fstl
addr16
fsubp
popf
xchg
jmp
xlat
sti
xchg
daa
adc
sub
aaa
aas
cmovns
dec
dec
push
pop
ficoms
in
and
fists
sahf
add
pop
out
mov
not
pop
sysret
fmulp
fimuls
or
clc
das
add
dec
push
enter
nopl
in
mov
inc
push
adc
rorl
adc
iret
repz
push
cmpsl
pop
mov
cmp
repz
repz
fstps
out
repz
push
mov
loopne
push
iret
repz
and
cmp
repz
dec
and
and
data16
or
cmp
sub
cmp
repz
mov
shrl
fldt
call
xor
add
aas
or
pop
push
mov
mov
loope
and
lahf
sub
mov
sahf
out
mov
decl
daa
pop
arpl
out
and
out
sahf
out
and
jns
and
jns
out
sbb
out
sahf
out
sbb
sbb
dec
repz
pop
std
adc
loop
adc
out
dec
push
push
dec
sub
jns
out
dec
inc
dec
dec
pop
aaa
jns
sqrtps
pop
push
jle
in
dec
pop
dec
cmovp
jns
out
jno
jle
das
repz
jbe
dec
mov
jp
cmp
mov
ret
inc
leave
out
call
lret
test
das
iret
repz
add
add
add
cmp
dec
pop
push
or
cmp
repz
jle
repz
or
out
fsubp
mov
adc
adc
adc
adc
out
ficoms
adc
out
cld
pop
jle
in
jns
out
push
sbb
jns
out
sbb
sbb
sahf
push
push
pop
pop
and
in
and
das
mov
nop
outsl
fwait
mov
out
jns
pop
jo
shufps
push
pop
out
sahf
out
push
in
in
xchg
jns
adc
adc
adc
out
fmulp
add
or
adc
sahf
out
sahf
sbb
and
sub
jns
out
xor
cmp
inc
and
sahf
out
push
or
in
in
cmp
jnp
popf
cmp
cmovo
test
sbb
je
aad
outsl
outsb
in
push
repz
mov
in
aad
add
fucom
aas
in
pop
in
les
mov
push
iret
mov
nopl
iret
repz
and
in
outsb
adc
dec
pop
cmp
leave
leave
push
pop
imul
sahf
jns
out
sbb
jbe
repnz
pop
lahf
out
ja
jbe
ffree
push
add
push
daa
shl
mov
push
add
sti
push
add
add
or
adc
das
in
in
and
xor
jns
out
inc
dec
orps
popf
cmp
in
insb
push
adc
jb
cmp
lcall
mov
ret
jb
lret
pop
in
jae
cmp
lock
and
push
leave
addr16
call
in
mov
add
cmp
leave
in
inc
pop
dec
push
add
pushf
popa
pop
imul
mov
ret
lcall
popf
cmp
in
xchg
push
push
fwait
mov
dec
stos
push
adc
lahf
or
scas
push
loopne
cmp
push
jmp
mov
add
repz
rorb
push
push
aas
pop
repz
leave
dec
push
or
cmp
leave
imul
jbe
push
jle
jmp
jns
cltd
adc
pushf
fmull
adc
out
icebp
cld
cltd
sbb
pop
ljmp
xchg
out
sub
sbb
cmp
push
pop
and
jne
and
jns
mov
daa
mov
lods
mov
ret
repz
daa
jecxz
cs
xor
xchg
iret
das
add
por
scas
mov
inc
pop
add
add
inc
push
inc
push
jmp
add
mov
jmp
add
iret
push
addb
or
mov
sahf
or
mov
or
ret
jb
jb
ljmp
cli
add
xchg
out
jge
or
pop
adc
sbb
out
bndldx
and
sub
sbb
in
fisttpll
lahf
and
pop
pop
emms
daa
daa
daa
daa
jg
xchg
cltd
jb
daa
daa
mov
in
pop
jo
cmp
setae
pslld
insb
pop
or
adc
mov
cmp
filds
jns
in
or
push
in
push
or
jne
out
jp
or
fucomi
xchg
pop
popf
jg
lahf
mov
mov
bswap
push
adc
adc
out
in
testl
jns
fstps
out
repz
aaa
test
push
push
sbb
and
daa
xor
pop
cmp
out
jg
out
lahf
push
out
mov
es
daa
out
decl
sub
mov
jg
sub
push
sub
sahf
push
imul
out
jg
mov
xchg
daa
iret
mov
pop
into
xor
mov
sahf
out
sahf
ss
aaa
into
cmp
push
cmp
jns
mov
cmp
cmp
daa
iret
rep
aas
mov
sahf
fcmovne
psubusw
inc
enter
out
inc
cld
inc
or
jns
in
in
push
lock
and
dec
sub
adc
scas
cs
out
inc
pop
adc
pop
add
fs
jg
and
mov
rolb
lock
mov
outsl
fisttps
add
out
sahf
out
scas
push
mov
xchg
iret
push
or
or
push
cmp
daa
hlt
decl
lret
or
sbb
xsave
icebp
in
sahf
pop
push
adc
adc
repz
pop
push
adc
adc
leave
jns
pop
sbb
in
movsl
pop
mov
sbb
dec
xlat
psrad
and
xlat
xchg
xchg
mov
lsl
push
sbb
pop
sbb
in
fdivrs
out
pop
pop
bnd
mov
add
dec
outsb
ja
lahf
push
add
mov
shlb
mov
pop
or
in
jnp
daa
iret
or
add
or
iret
or
dec
xor
iret
rep
and
cmovbe
adc
cmp
fwait
cmp
unpckhps
addr16
repnz
repz
jge
mov
jns
ja
sbb
cmp
mov
sbb
hlt
repz
testl
sub
add
iret
repz
out
daa
pop
sub
and
sub
cmp
dec
push
sub
fnstcw
fbstp
push
sub
out
dec
out
lahf
push
add
jg
add
jns
out
aas
idivb
movl
adc
popl
xor
in
leave
repz
add
dec
cmc
iret
push
cmc
out
ja
jns
pop
push
push
push
cpuid
push
fucom
jns
or
fmulp
repz
or
jns
out
in
out
adc
adc
enter
notb
negb
mov
jge
push
sbb
lea
aas
sbb
in
idivb
out
sahf
out
sbb
pop
sbb
arpl
outsb
pop
jnp
jns
xchg
mov
out
sahf
test
loop
outsb
mov
xlat
iret
loop
clc
pop
int3
inc
dec
maskmovq
divl
pop
inc
xor
adc
jg
iret
clc
inc
pop
ss
test
orl
mov
lahf
testl
fisttps
add
cmp
leave
leave
push
addb
repz
repz
mov
iret
mov
jle
negl
or
aad
testl
in
testl
sbb
leave
repz
es
adc
iret
repz
sbb
push
inc
outsl
daa
jne
cmp
push
inc
push
hlt
cmpsb
xchg
test
cmp
xchg
aas
test
clc
ds
jns
pop
cld
wbinvd
add
outsl
in
inc
or
ds
sbb
or
and
sub
aas
out
in
mov
cmovp
adc
push
adc
leave
repz
adc
out
rolb
sbb
out
cwtl
sbb
outsb
cmp
pop
ret
and
sahf
out
lret
and
stc
and
popf
dec
ds
xchg
stc
mov
or
cli
pop
sbb
cvtpi2ps
cmp
repz
dec
pop
push
popa
cmp
out
or
xor
xchg
out
lea
push
cwtl
iret
repz
bt
scas
adc
les
iret
fisubrl
dec
dec
mov
femms
enter
jg
cli
sti
cli
or
iret
sbb
ficoms
push
sbb
push
pop
xor
jo
daa
aas
sti
jg
sti
iret
repz
dec
and
imul
orl
cwtl
xchg
cmc
andb
sbb
enter
inc
add
sub
jbe
orb
pop
in
pop
cmc
sti
jbe
enter
sti
push
cld
das
cld
das
stos
sbb
pop
cmpsl
pop
cmp
mov
cld
jbe
push
cmpsl
fildl
mov
cld
mov
syscall
repz
xchg
xchg
mov
cmp
es
or
syscall
or
frstor
pop
ds
pmulhuw
out
out
sbb
std
sbb
push
daa
adc
jae
xor
cmp
repz
jns
iret
jae
sbb
xlat
cs
dec
sahf
out
sbb
cmp
jbe
sbb
cmp
das
pop
push
and
leave
repz
je
jg
es
repz
daa
mov
movsb
fwait
pop
das
sub
sahf
ja
cmp
ror
das
xlat
daa
fucom
jns
loop
pop
xor
xchg
out
cs
xor
add
call
push
lcall
sbb
cmp
outsb
aaa
pop
push
ds
std
pop
lahf
imul
repz
cmp
xchg
dec
and
rorb
into
pop
pushl
in
xchg
pop
outsl
jg
das
jbe
jns
mov
push
mov
jp
sahf
out
or
testb
femms
das
sbb
and
jns
out
adc
adc
inc
dec
minps
push
push
pop
jle
mov
leave
in
jbe
pop
pop
lods
mov
les
iret
fimull
in
or
out
lock
popf
mov
cs
sahf
out
punpcklbw
imul
out
xchg
out
and
xor
out
cs
add
adc
cmp
iret
sbb
xor
xor
popf
mov
outsb
xor
jb
mov
iret
sub
ja
fimull
outsl
stc
hlt
cmp
punpcklbw
lock
pop
add
lret
push
add
jns
in
ficompl
push
pop
sahf
cmpsb
sahf
cmpsl
xor
mov
push
mov
cmpps
add
cwtl
arpl
add
popl
add
cli
xchg
inc
mov
pop
repnz
or
es
pop
in
push
fcompl
cmp
jo
bound
jnp
jno
mov
mov
cmpsl
mov
or
cwtl
mov
test
mov
pop
sbb
aaa
pop
and
mov
inc
incl
or
test
push
push
jg
inc
enter
xchg
add
cmp
pop
ss
add
add
aas
inc
push
and
mov
or
stos
insl
cmova
and
inc
cs
adc
dec
aaa
mov
sub
sub
cs
xchg
add
jns
out
add
cmp
pop
or
or
aaa
fldt
or
inc
adc
das
daa
daa
mov
and
jbe
push
das
push
xorps
into
in
insb
das
insl
out
shr
cmp
jb
pop
andb
in
jbe
jb
daa
daa
iret
jae
sub
dec
outsb
fbld
xlat
les
data16
or
xor
add
adc
and
and
or
adc
pusha
les
add
nop
sbb
arpl
testb
pushf
cmp
movsb
add
pusha
cmpb
cmpsb
fisttps
mov
popl
jle
test
shll
mov
inc
jg
pop
mov
pop
inc
mov
iret
mov
inc
sbb
in
call
adc
push
aas
and
ficompl
pop
fisubrl
xor
fcomp
loopne
or
jle
jns
aaa
or
pushf
and
xchg
out
sahf
out
mov
jns
je
pusha
push
dec
inc
jns
out
cmp
xor
sub
jns
out
and
sbb
dec
repz
adc
or
and
in
cmp
jnp
and
push
faddl
aam
shl
iret
repz
movsb
mov
iret
xorb
ja
fildll
push
pop
push
repz
out
dec
mov
cmp
sbb
out
iret
or
and
aam
mov
mov
mov
sahf
out
cmpb
push
cmp
cmp
and
cmp
repz
or
and
fadd
mov
and
je
pusha
and
js
pop
icebp
rcrb
mov
pop
scas
andb
into
lds
lock
js
clc
ss
mov
add
xor
addr16
adc
es
or
add
mov
cwtl
xchg
in
add
jae
xorb
icebp
call
push
mov
push
inc
jg
mov
mov
pop
cmp
mov
add
je
leave
adc
mov
mov
add
and
sti
add
data16
pop
add
iret
mov
or
flds
mov
pop
das
outsl
adc
cwtl
iret
add
cmpb
pop
push
test
js,pn
stc
pop
movsb
fdivs
jg
jl
add
pop
jne
add
out
repnz
push
in
mov
out
xchg
es
fidivl
xchg
xchg
sbb
repz
and
and
jns
cmpsl
stc
push
pop
mov
sbb
hlt
and
adc
push
dec
push
cs
addr16
popf
fmuls
and
jnp
out
or
or
adc
iret
inc
sbb
fcompl
cmp
repz
repz
xor
sub
and
repz
mov
cmp
repz
and
and
loopne
clc
aaa
inc
out
insb
xor
and
shr
pop
sbb
sbb
imul
daa
xor
adcl
xchg
incl
jo
jp
xorl
fistl
cmp
pop
iret
repz
js
mov
repz
mov
jnp
xor
dec
insl
add
push
pop
js
out
ja
mov
repnz
xor
das
push
dec
insb
dec
mov
or
pop
pop
enter
mov
cli
or
jl
pushf
or
ret
mov
adc
pop
mov
mov
leave
sbb
into
sbb
call
dec
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
idiv
decl
add
inc
stc
mov
adc
mov
decl
js
incl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
sar
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
xor
cmpsl
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
gs
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
pop
hlt
lcall
cmpsb
lock
mov
popa
sar
mov
sbbb
std
ljmp
mov
subb
fwait
xchg
and
xor
int3
add
aas
jno
or
mov
out
or
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
jmp
test
inc
lods
lds
mov
insb
scas
add
aas
xor
aad
mov
jmp
aas
ret
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
dec
adc
lcall
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
jg
lcall
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
std
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
jg
inc
inc
test
pop
mov
jne
fldt
cmp
jno
sar
jmp
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
jmp
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
cld
outsl
call
and
dec
dec
gs
std
orl
pop
ficomps
frstor
sbb
into
or
or
addb
outsl
inc
mov
pop
add
in
push
inc
inc
je
inc
inc
push
dec
mov
mull
addr16
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
insl
cmpsl
lods
das
jg
mov
ja
popa
mov
call
mov
outsb
call
dec
inc
jo
inc
popa
push
outsb
jbe
imul
lods
pusha
sub
outsl
sahf
pop
insb
mov
aas
dec
insb
imul
push
add
cmp
iret
xor
pop
ficoml
int3
add
aas
push
inc
dec
push
and
pusha
testb
jb
push
mov
inc
inc
test
imul
inc
gs
gs
fmuls
adc
xchg
inc
ds
arpl
or
lea
adc
bound
outsl
push
dec
pop
mov
push
push
xchg
xchg
inc
xor
pop
out
xorb
push
sub
push
inc
pusha
mov
mov
orb
add
aas
xor
add
dec
arpl
andl
daa
daa
adc
sti
jbe
jae
imul
xor
inc
jg
testb
inc
jns
dec
lahf
int
sbb
push
push
les
push
cmp
cmc
jbe
insl
data16
jns
andb
mov
data16
in
inc
xchg
jb
dec
push
mov
mov
dec
dec
lds
jae
jbe
adc
lods
push
dec
test
push
mov
and
xor
int
cmpsb
dec
and
dec
jg
fisttpl
outsb
arpl
inc
or
push
sbb
rol
push
jmp
pop
mov
add
add
stos
sbb
push
lock
idivl
cli
dec
sub
mov
jo
mov
sbb
push
pop
addr16
push
push
test
push
mull
rol
inc
push
push
imul
add
outsl
lds
ret
push
jb
lds
sbb
ret
xlat
push
push
jp
lock
push
xor
jg
push
adc
push
xacquire
or
aad
lods
ficoms
arpl
push
push
mov
push
sub
popa
fimuls
pop
jg
sub
sbb
bound
inc
mov
pop
js
xor
xchg
lods
adc
jp
mov
data16
test
push
push
cmpsl
outsl
fs
mov
ja
adc
pop
ja
shll
lret
fs
test
adc
mov
nop
fcomps
push
mov
andb
lahf
insb
aam
psllw
push
push
push
mov
lret
scas
pop
push
push
xlat
dec
lahf
subb
inc
dec
add
push
mov
and
dec
pop
add
mov
push
jg
cmp
sbbb
jo
pop
push
iret
aas
call
into
add
lahf
add
push
mov
sbb
cmp
out
popa
jmp
dec
dec
fbld
dec
in
addl
push
mov
movsl
insl
les
dec
outsl
add
imul
mov
jo
gs
cmp
js
loopne
push
dec
add
dec
outsl
shll
cmpsb
iret
dec
push
and
pop
push
lock
les
push
mov
dec
das
xlat
push
fwait
sub
out
jg
sahf
out
test
cmpsb
push
test
lahf
out
xor
call
iret
repz
or
les
inc
inc
je
dec
sahf
out
add
cmpb
add
out
and
lahf
lcall
pushl
xchg
xor
ja
popa
push
out
mov
les
incl
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
decl
mov
sub
mov
sbb
dec
jno
repz
test
lcall
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
call
insb
push
arpl
psubd
or
outsb
cmp
imul
addr16
add
cmp
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivr
ja
shlb
ror
fcompl
shrl
jmp
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
pusha
or
sub
mov
or
mov
jl
ljmp
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
pushl
mov
push
movsl
in
lahf
xor
mov
js
stc
lcall
test
xchg
sbb
push
sub
insb
fs
add
hlt
push
imul
ljmp
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
pushl
mov
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
mov
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
call
push
imul
mov
sarb
add
in
add
pop
dec
or
fnstsw
add
daa
adc
or
and
test
or
mov
popa
dec
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
shlb
mov
lcall
mov
cmp
ljmp
fildl
push
fdivr
pushl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
xorb
sbb
push
imul
decl
sbb
loopne
rorl
int3
dec
frstor
fistpll
mov
pushl
pusha
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
pushl
dec
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
ljmp
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
mov
incl
and
es
lds
or
sub
mov
cmpsl
call
ret
shlb
fldcw
ret
es
pushf
mov
insl
add
ss
jmp
addr16
fcomip
pop
jb
push
hlt
orb
adc
mov
jnp
sbb
xchg
or
mov
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
clc
jmp
mov
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
pop
hlt
lcall
clc
sar
imul
push
js
or
push
addl
decl
mov
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
incl
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
lret
mov
call
mov
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
lcall
sub
aaa
mov
or
sbb
add
add
jp
dec
xor
add
xchg
inc
cmp
je
mov
imul
dec
je
push
insb
imul
push
pop
filds
sti
call
pop
inc
jbe
push
jns
arpl
arpl
pusha
cmpsl
lods
sbb
mov
shll
pop
inc
jne
outsl
insl
fadds
xchg
int3
inc
imul
popf
and
adc
and
aam
cmp
adc
pop
dec
dec
inc
js
add
inc
cmp
bound
ret
mov
inc
popa
or
lahf
push
dec
sbbl
mov
inc
jno
xor
pop
inc
insl
ljmp
inc
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
or
or
xor
bound
scas
cmp
inc
jbe
pop
sbb
inc
add
cmpsb
fs
icebp
xor
fistl
rolb
add
mov
sbb
ror
inc
rcl
xchg
test
mov
xor
lcall
popa
stos
pop
or
push
jbe
arpl
popl
rcpps
xchg
mov
bound
push
dec
push
rcl
js
sbb
aaa
push
jne
sbbl
xor
push
dec
insb
nop
pusha
add
popa
xchg
cmp
cmp
push
push
je
aaa
aas
inc
push
add
xchg
pusha
lds
add
and
dec
mov
jae
dec
popf
int
pop
ret
ljmp
sahf
bound
aaa
inc
jnp
adc
sbb
inc
pop
adc
and
or
inc
inc
add
ds
mov
int
and
aas
int
push
dec
dec
lea
add
fists
inc
mov
mov
xchg
mov
insl
adc
fidivrl
pop
aad
xor
xor
or
aad
arpl
add
addr16
pusha
repz
push
push
jns
ds
or
imull
aaa
or
dec
out
imul
add
mov
or
pop
sbb
adc
mov
xor
jo
and
mov
jmp
pop
addr16
push
scas
xlat
mov
adc
movb
and
cmp
inc
jb
addr16
loope
popa
adc
jo
or
and
js
outsl
outsl
test
dec
sbbl
add
mov
in
pop
xchg
add
sub
test
pop
cmp
jecxz
add
adc
push
adc
push
cmp
mov
or
push
stos
shlb
jns
aad
inc
xor
inc
pusha
push
push
xchg
rcl
popa
jb
stos
cmp
adc
mov
syscall
loopne
sub
inc
push
bound
cmp
xor
mov
and
shll
jae
adc
popf
xor
aam
adc
add
fadds
push
sub
adc
push
and
pop
push
pop
xor
es
inc
orb
js
add
testb
ret
pop
and
mov
xchg
sahf
test
push
in
add
aaa
xor
aaa
mov
jbe
in
push
loop
je
pop
cs
push
outsb
inc
aaa
jno
cwtl
mov
adc
daa
aas
pop
inc
mov
push
add
add
mov
add
fs
push
fwait
jnp
add
pop
adc
pusha
faddl
pop
nop
and
push
sbb
sub
pop
mov
fwait
and
add
and
rorb
add
clc
and
outsl
je
jb
sub
das
add
inc
dec
push
and
std
outsl
pop
push
cs
cmpsb
dec
shrd
popa
incl
lea
jg
sbb
lret
mov
out
jecxz
out
ud0
jmp
repnz
in
push
pusha
ljmp
das
insl
stc
in
lret
cli
push
cld
push
imul
inc
fidivrl
enter
add
dec
loopne
add
or
or
jne
cmp
daa
aam
cmp
add
arpl
repz
add
std
loope
mov
add
sbb
add
dec
or
push
test
mov
dec
and
mov
js
push
loop
pop
test
add
push
enter
add
and
hlt
dec
lea
jl
in
and
lods
add
jb,pn
xorb
filds
movsl
fs
jbe,pn
sub
dec
mov
cmpl
sahf
jae
arpl
xlat
fisubrl
push
and
add
jb
test
push
dec
addb
repnz
push
inc
sbb
adc
cmp
add
les
nop
add
xchg
push
jmp
add
das
ds
mov
lea
mov
mov
or
or
call
in
dec
jne
jno
popa
jecxz
ret
js
pop
pop
xchg
out
andb
or
mov
jbe
cs
cmp
inc
push
ds
dec
adc
ds
dec
fucomi
gs
add
cmp
ja
jne
jmp
mov
lahf
mov
inc
bound
pop
call
shlb
inc
sub
jbe
push
int3
loope
and
je
mov
rorl
adc
and
mov
ja
adc
pop
hlt
jl
rol
imul
shrb
sub
movsb
or
xor
mov
loopne
add
imul
xchg
inc
mov
rcll
mov
out
sbb
push
movzbl
or
rcll
mov
call
push
les
add
lcall
ret
in
cmp
jbe
mov
add
sub
xchg
jp
pop
add
sarb
xor
outsl
add
sub
push
mov
mov
mov
adcb
add
push
inc
mov
inc
call
inc
loopew
and
sbbb
aam
mov
pop
outsb
shlb
dec
js
sahf
mov
clc
pushf
and
cmp
or
xor
sarl
out
outsl
push
inc
imul
add
adc
fldl
gs
push
mov
push
sti
subb
add
dec
pop
and
jbe
cmp
jne
in
xchg
add
push
fs
push
sarb
sub
int
sbb
or
adc
rolb
fidivrl
insb
loop
hlt
cld
add
inc
les
sti
push
xor
imul
or
mov
adc
push
push
push
mov
sub
push
or
pushf
out
mov
mov
leave
push
fcoml
mov
and
int3
pop
add
fimull
adc
push
push
test
mov
cmp
sub
test
sbb
mov
loopne
movsb
je
pop
push
ret
dec
sub
pop
pop
pop
xchg
push
nop
sbb
fcompl
sub
popa
pop
mov
and
sbb
push
aam
es
push
dec
push
test
andb
cmp
mov
push
aam
in
jecxz
call
add
movb
dec
adc
insl
mov
add
push
mov
aam
lea
dec
ret
out
or
lds
sbb
gs
in
popa
inc
arpl
in
rol
xor
in
bound
cmp
adc
roll
add
shrl
and
or
js,pn
and
adc
add
je
rolb
movsl
mov
hlt
or
mov
movsl
aam
jp
mulb
mov
mov
xchg
mov
xor
push
jmp
jae
aas
adc
xchg
mov
mov
shl
fcoml
and
sub
ljmp
imul
pop
je
call
pushf
mov
inc
push
push
insb
fdiv
sub
add
mov
adc
lahf
push
mov
adc
cltd
aam
and
movl
push
inc
jno
xor
cmp
pushf
out
ficoml
adc
adc
arpl
push
andl
jp
pop
setge
push
lea
jne
pusha
jae
mov
jp
push
dec
jl
pusha
or
inc
or
xchg
sbbl
insl
icebp
fstps
sbb
test
ja
cmp
push
pop
rolb
std
pop
and
call
sbb
push
jnp
int
cmpl
test
popa
jl
mov
xchg
subl
mov
call
and
dec
mov
add
and
add
in
add
mov
adc
test
popf
fldenv
add
scas
add
or
rorl
pop
lret
adc
leave
pop
pop
sbb
ja
call
mov
mov
mov
push
jge
loopne
call
call
aam
or
call
insb
in
push
pop
jne
xchg
lea
xor
mov
lret
rclb
or
inc
daa
nop
ss
hlt
fcompl
add
push
out
mov
lock
add
pop
pop
movsl
enter
dec
adc
inc
das
xor
shrb
add
or
jns
add
ja
pop
mov
xchg
jge
add
ret
mov
daa
ja
sbb
enter
js
in
dec
push
inc
mov
je
or
push
lcall
insl
movsb
mov
mov
cs
sbb
sub
and
mov
push
or
in
shl
or
hlt
push
xchg
icebp
hlt
fisubrl
push
inc
push
xor
dec
adc
clc
sbb
push
push
aas
push
out
testl
or
mov
mov
lods
filds
mov
mov
notl
pusha
xor
mov
insl
pop
lods
nop
mov
aas
adc
imul
sub
lds
and
push
pop
add
bound
lret
test
movsb
add
bound
lock
adc
or
imul
push
push
and
mov
sub
sub
mov
xor
nop
jo
inc
bound
dec
sti
jne
push
pop
mov
shll
sbb
lret
pop
comiss
push
xor
sub
inc
adc
xor
cmp
and
jne
ds
sbb
pop
scas
loope
push
sbb
sbb
sbb
push
jmp
fdivr
jno
inc
xlat
xchg
mov
mov
mov
pop
push
push
push
dec
fdiv
adc
or
cmp
pop
pop
pusha
push
fiaddl
int3
call
push
and
sbb
shlb
popa
mov
cmp
cmc
push
fcmovnbe
inc
addr16
push
mov
jb
add
xchg
int3
and
cmp
stc
loopne
test
and
out
cmp
add
fcompl
jb
call
adc
xchg
xor
test
fsubr
lahf
adc
je
cmp
cmp
xchg
test
in
push
add
push
adc
outsb
mov
gs
jbe
dec
enter
add
inc
inc
addr16
ret
or
push
mov
fisubs
shlb
fildl
or
cmpsb
imul
fiadds
out
inc
shrl
repnz
sbb
push
mov
out
ds
hlt
fdivrp
xor
fdivr
andb
loop
ret
mov
xor
aaa
insl
sar
mov
jecxz
pop
mov
add
push
sub
jb
out
ds
ss
aas
xor
mov
xor
call
mov
mov
idivl
or
mov
adc
sub
add
mov
push
jle
xchg
les
adc
pop
mov
pop
jb
mov
lea
push
pop
enter
mov
mov
rep
cltd
push
or
icebp
inc
sbb
std
adc
movsb
push
leave
cmp
mov
xlat
sti
das
stos
fstpt
jle
rcll
fisubs
nop
bound
adc
inc
in
shlb
test
push
add
pop
shl
inc
insl
sub
inc
and
xor
bound
mov
pop
push
sbb
sbb
std
jo
shlb
push
mov
rolb
sbb
mov
pusha
xchg
sbb
cmp
pop
outsl
push
jb
je
ljmp
ljmp
pop
pop
stos
je
and
les
andl
je
cmpb
adc
cmp
scas
sbb
adc
call
pop
inc
pop
pop
insb
or
adc
add
repnz
pushf
ljmp
xchg
push
push
cmc
pop
pushf
data16
cmpsb
test
sbb
and
into
imul
lcall
mov
addr16
lret
push
loopne
sbb
adc
pop
push
pop
xchg
and
enter
aas
js
mov
jae
lret
mov
std
jnp
mul
sub
adc
or
gs
push
add
or
and
scas
dec
adc
sub
pop
push
push
push
ss
push
add
or
and
cmp
xor
dec
jle
jmp
ljmp
pushl
or
mov
sbb
mov
dec
in
in
pop
cmp
add
and
jb
and
jmp
inc
and
and
ficomps
mov
loopne
or
rcrl
cmp
fdivl
or
nop
dec
in
or
in
les
pop
xchg
in
enter
adc
pop
jno
or
cmpsl
bound
jbe
insb
jo
rorl
leave
mov
ds
or
cmp
or
test
test
in
mov
add
sbb
lahf
bound
roll
inc
cltd
stos
repnz
cmp
sbb
cltd
je
inc
mov
or
mov
sub
in
mov
inc
jle
shl
aam
fsub
insl
sbb
cmp
mov
sarl
xchg
mov
lcall
mov
adc
adc
imul
mov
xor
push
jnp
notb
adc
push
filds
inc
xor
movsb
push
ljmp
pop
mov
aaa
inc
sbb
jne
lods
nop
mov
cmp
pushf
arpl
jbe
orl
xor
or
add
stc
dec
mov
xor
push
aaa
jae
xor
jmp
add
push
mov
out
fcomp
inc
test
jmp
enter
push
inc
in
push
adc
mov
mov
fistpl
pushf
adc
mov
fldl
lods
lods
dec
xlat
push
push
mov
call
loop
lea
mov
push
jg
call
push
call
aad
xchg
cwtl
add
mov
in
in
dec
adc
or
and
mov
int3
add
dec
or
mov
add
jne
jl
jl
dec
fsubrl
call
pop
test
cld
jb
push
nop
fadd
add
or
or
in
and
cmp
lock
or
or
sub
scas
jns
sub
or
push
icebp
or
imul
pusha
ljmp
push
add
add
out
enter
daa
xorb
cld
mov
adcl
into
sub
arpl
call
inc
inc
and
pop
cmp
cwtl
mov
inc
dec
pop
and
je
or
or
je
mov
pop
push
jmp
clc
dec
or
loopne
outsb
ret
mov
or
adc
add
xchg
sbb
xor
bound
jmp
mov
fs
loopne
mov
adc
xor
jp
pop
out
jge
imul
lcall
hlt
jl
out
add
cltd
insb
cld
adc
pop
jp
int
nop
add
or
mov
add
xor
sbb
mov
or
sub
xor
lods
jns
sub
jbe
repz
xor
or
sbb
nop
push
dec
inc
jnp
add
ljmp
test
and
mov
cmp
daa
cmp
adc
inc
or
mov
mov
sti
push
xchg
push
inc
rorb
hlt
repnz
ja
inc
xor
adc
shll
aam
inc
inc
xor
sub
or
or
shr
decl
jl
or
jnp
loope
sbb
call
mov
xor
xchg
nop
cld
cmp
mov
rcrl
inc
mov
dec
cmp
xchg
mov
mov
adc
loopne
or
push
push
dec
xor
inc
adc
test
sub
mov
jo
cld
sbb
pop
cmovo
dec
adc
std
adc
jmp
push
ds
arpl
cmp
das
add
clc
ljmp
jne
xchg
out
add
mov
sahf
pop
add
mov
and
and
pop
sub
jl
mov
rolb
fisubrs
jne
sbb
popf
into
cmc
sub
subl
push
pop
jle
addb
int
mov
add
sub
pop
mov
in
ret
dec
cmp
ds
xlat
les
xor
mov
mov
add
ficoms
inc
int3
lods
or
inc
daa
subl
or
push
push
adc
xor
pop
xchg
adc
jmp
pop
pop
cmp
push
xchg
inc
popf
mov
mov
mov
fistps
jmp
inc
jecxz
push
mov
outsw
mov
push
call
pop
jmp
lea
sub
inc
xor
xchg
lea
decb
sbb
sbb
xchg
sarb
push
cld
clc
push
or
cmpsl
enter
outsl
jne
mov
outsb
in
std
jmp
fwait
insl
mov
and
xor
add
jo
jmp
in
js
lcall
js
xor
fidivrl
loopnew
fdivr
sarb
add
jle
lods
es
mov
cmp
shl
sbb
push
ret
xchg
fnstenv
push
movsb
xor
icebp
rcrb
test
dec
rorb
hlt
and
push
adc
in
test
dec
adc
enter
xor
or
call
xchg
cmpsl
sbb
repnz
out
cmp
jl
pop
jne
mov
jmp
or
pop
shll
fmuls
or
or
pop
imul
or
rcrb
aas
add
aas
or
mov
or
push
lods
enter
adcl
cmp
cmp
lcall
call
push
pop
loope
ljmp
ljmp
sbb
push
call
fcom
pop
pushf
mov
push
push
loopne
ss
mov
test
inc
cltd
cmp
fiaddl
mov
push
mov
mov
popa
cmp
aam
push
mov
dec
jmp
lea
sbb
adc
sub
stos
push
fucomip
cmp
je
add
les
cmp
inc
jnp
subl
and
std
pop
jbe
inc
pop
dec
xchg
mov
inc
push
in
pop
pop
ret
dec
xchg
or
or
adc
inc
and
shlb
jae
adc
loop
test
push
getsec
cmp
shr
je
cs
sbb
push
jae
stos
fwait
add
xchg
cmpsb
shll
test
cmp
sub
mov
and
mov
mov
mov
adc
mov
mov
and
aaa
push
mov
inc
das
in
fsubr
jo
push
sbb
sub
sub
and
pop
mov
into
call
mov
or
pop
inc
adc
pop
aad
pop
push
stos
loopne
mov
sti
push
je
adc
nop
fwait
lea
dec
jle
push
or
data16
data16
andb
loopne
xchg
push
stc
movl
sub
pop
push
imul
and
clc
jno
je
jl
enter
and
aam
xor
cmp
push
push
cmpsb
aam
in
icebp
lds
into
inc
cmp
cwtl
popa
fsubrl
ss
clc
cli
call
pop
or
loopne
je
int
lea
cltd
push
push
loope
sbb
push
scas
dec
je
jae
mov
push
push
and
loope
dec
fisttpl
or
or
inc
push
sub
and
repnz
adc
aam
in
mov
jmp
mov
or
xchg
popf
imul
notl
and
add
lock
rcll
cli
mov
in
jmp
add
loope
movsb
das
mov
push
sub
sub
lock
dec
push
mov
add
hlt
ljmp
pop
add
mov
ss
clc
push
and
and
cmp
mov
mov
je
std
mov
jmp
adc
and
and
add
sub
pop
sub
cmp
push
or
lock
add
ret
xor
push
sbb
add
xchg
out
add
iret
call
movsb
push
ja
lea
mov
pop
insb
and
outsb
jne
addr16
insl
arpl
push
idivl
dec
cld
jne
into
cmp
addr16
ss
pop
mov
add
push
adc
xlat
pop
and
or
je
int3
jecxz
adc
or
jns
inc
sub
jmp
test
nop
xor
or
pop
ret
lds
jmp
icebp
call
adc
call
inc
shlb
mov
pop
cld
test
jmp
dec
setb
cmp
clc
cmp
and
add
movsb
sbb
call
outsl
cmp
cmp
aad
and
jl
js
cmpsb
pop
adc
fst
js
xor
dec
xor
arpl
mov
fxtract
jmp
pop
cmpsl
jae
pop
xorb
movsb
inc
or
mov
cmp
push
add
ret
push
adc
add
out
es
jp
lret
and
out
pop
out
add
add
call
in
jnp
in
movsb
jmp
js
popf
sub
aad
test
or
mov
adc
mov
sbbl
cltd
scas
add
cmp
rcrb
mov
cmp
rorb
and
or
loopne
outsb
je
push
stc
sub
fcompl
out
ret
xor
pusha
inc
sarb
add
mov
or
jae
xor
pushf
add
clc
or
cmp
test
mov
stos
push
imul
inc
inc
loopne
fs
inc
in
xchg
inc
mov
mov
inc
mov
orb
jg
js
test
lea
add
call
push
jbe
xor
dec
mov
mov
and
mov
jg
push
bound
or
mov
cmp
fadds
dec
jne
movzbl
add
je
aam
xor
movsb
nop
pop
mov
loop
pop
loopne
add
pusha
rorb
xchg
lea
incl
nop
sbb
or
sub
add
jmp
insb
jmp
adc
mov
push
cli
sub
aaa
push
test
xor
or
std
dec
add
mov
shlb
mov
jmp
xchg
mov
push
inc
ss
inc
dec
fdivrs
xor
push
pop
mov
dec
ljmp
adc
icebp
dec
xchg
xchg
sbb
jg
xchg
push
push
call
test
add
and
jb
das
dec
aam
je
add
mov
mov
stos
inc
je
daa
push
lea
cmp
mov
and
ss
mov
jge
dec
mov
mov
inc
mov
ds
lods
push
test
xchg
aas
mov
pop
adc
mov
xchg
adc
pop
inc
push
add
xchg
sub
add
add
mov
add
push
xchg
out
sub
adc
xor
mov
xchg
and
add
cmp
cmp
mov
ss
mov
mov
push
adc
rolb
pop
push
xchg
lds
mov
pop
subl
add
stos
add
mov
and
and
sub
xchg
xchg
jmp
adc
rcrb
mov
cli
inc
icebp
or
pop
popa
pusha
inc
nop
and
and
inc
addr16
push
pusha
xchg
std
pop
js
cli
or
or
jp
jle
sti
push
dec
add
pop
lahf
mov
cmp
xorl
jmp
cmp
mov
aam
inc
adc
call
iret
call
inc
pop
mov
pop
int3
pop
cli
mov
push
xchg
inc
xchg
jbe
movsb
dec
pop
leave
jnp
or
out
pop
cmp
or
fildll
add
psubsb
add
jge
call
jmp
das
arpl
mov
pushl
cmp
jmp
inc
cmpsl
cli
xchg
dec
pop
xchg
sbb
sub
pusha
xor
sbb
movb
addr16
push
cmpsl
enter
pop
push
into
cmp
cmp
push
sub
fimull
jmp
dec
jge
sbb
lds
rolb
jle
shlb
shll
mov
push
scas
ret
sahf
and
sbb
xlat
or
scas
es
insb
or
adc
shl
ret
mov
dec
mov
cmpsl
pusha
lock
pop
out
sub
push
and
push
daa
lods
mov
and
arpl
incb
es
ret
sub
ljmp
mov
cmpsb
cld
aad
es
fbstp
shll
arpl
or
xor
es
add
dec
dec
iret
pop
inc
and
movb
subl
outsb
iret
dec
loop
xorb
push
or
in
mov
xchg
pop
xor
rclb
nop
inc
push
mov
xor
jb
das
js
xor
rcrl
inc
ror
dec
imull
push
test
enter
movsb
addl
jp
inc
js
mov
adc
shr
adc
jle
xacquire
pop
aaa
adc
pop
inc
enter
jmp
sub
inc
pop
and
cmpsl
in
and
cmpsl
pop
test
popf
inc
cmpsl
push
inc
push
cwtl
rcrb
cmpsl
xchg
or
adc
adc
call
xor
fisttpll
mov
push
les
pop
dec
adc
cmpsl
das
rcll
cmpsl
xor
or
xor
xor
sbb
cmpsl
xor
pop
dec
adc
fs
lods
andb
jmp
and
shlb
lods
push
mov
inc
dec
mov
outsb
sbb
inc
cs
dec
inc
lea
sbb
movsb
repz
les
leave
add
enter
dec
ficomps
inc
or
push
sub
sahf
out
and
adc
add
adc
daa
cmp
roll
je
test
and
daa
jbe
rcl
mov
daa
cs
inc
cmp
in
cs
pop
nop
add
and
dec
je
outsb
sbb
inc
mov
push
insl
adc
and
mov
iret
repz
mov
into
repz
jge
or
daa
inc
cld
or
add
daa
inc
mov
pop
les
call
or
mov
jge
dec
and
dec
leave
mov
loop
or
insb
and
aam
ja
adc
dec
pushf
push
pop
jmp
xor
xor
xor
xor
sub
add
pmulhw
or
lahf
ret
lea
out
xor
sub
add
pop
add
or
add
pop
repnz
add
add
and
sub
jo,pt
cmp
je
xchg
add
enter
mov
mov
push
push
push
gs
lcall
or
in
or
xchg
push
repnz
cld
add
or
enter
or
imul
or
sbb
or
or
push
or
addr16
push
movzwl
pop
xor
adc
pop
fidivl
jb
adc
scas
in
mov
int
inc
push
inc
adc
adc
test
adc
in
in
adc
sub
push
push
inc
jae
inc
sahf
pop
pop
and
aad
mov
sbb
mov
cmp
sbb
sbb
enter
mov
pop
enter
sbb
je
bound
jns
sbb
jo
push
repnz
pop
push
in
push
repnz
inc
negb
pop
popa
dec
incl
jne
add
add
sub
sti
or
pop
clc
add
movl
add
cltd
inc
xchg
and
lods
pop
lods
stc
cmp
push
in
push
in
imul
fistl
sub
rcl
ret
out
xchg
mul
xor
mov
xchg
out
out
in
pop
mov
sub
call
and
adcb
pop
leave
jnp
popa
mov
cmp
cmp
ljmp
pop
add
lcall
movsb
sub
or
in
in
xchg
sub
push
aad
in
cmp
in
sahf
xchg
mov
out
xchg
xchg
or
pusha
out
or
je
in
xorl
xchg
dec
jb,pn
outsl
icebp
cmp
das
jnp
inc
scas
xor
adc
repz
cmpsb
repnz
std
hlt
hlt
imul
std
cmc
repnz
cmp
mov
mov
sbb
or
push
pop
gs
clc
clc
clc
leave
xor
or
repnz
cli
add
cmp
sti
sti
fdivrp
push
ss
cld
cld
je
cld
push
push
aaa
and
jne
mov
xor
sbb
insl
fs
sahf
xor
add
jmp
pop
hlt
push
xchg
sub
jb
lahf
shll
add
sub
or
or
fwait
or
jecxz
jecxz
push
shll
xchg
xor
sub
in
addl
sbbb
adc
inc
or
out
jb
inc
out
scas
call
cltd
sti
adc
inc
mov
cltd
or
out
jmp
xchg
daa
dec
pop
push
in
cltd
or
daa
or
cli
aad
imul
in
aad
mov
andb
cli
or
aas
repz
add
mov
leave
and
stc
xchg
cmpsb
jb
imul
mov
xchg
clc
in
repnz
cmp
mov
xor
sti
inc
scas
ss
sti
sti
xchg
or
scas
xchg
push
repnz
jmp
mov
cmp
scas
mov
mov
jl
daa
add
sub
aad
imul
shl
add
loope
clc
andb
and
imul
out
pop
push
xchg
push
fdiv
out
mov
negl
lret
imul
ljmp
push
jmp
pop
repnz
notl
mull
hlt
imul
out
push
inc
test
repnz
notb
mov
insl
repnz
repnz
inc
repz
pop
push
loope
testb
sub
test
mov
out
imul
iret
in
mov
dec
loope
cmp
jb
cmp
rcrl
jb
or
and
sbb
cli
hlt
subb
or
xchg
test
add
push
stos
into
jo
adc
push
ret
clc
sti
mov
loope
loope
scas
xchg
stos
jp
movnti
cmp
mov
in
pop
lret
or
pop
repz
setb
aam
mov
lcall
jmp
pop
mov
pop
pop
dec
repz
in
xchg
adc
pop
mov
pop
pop
repnz
repnz
add
or
jb
scas
dec
icebp
icebp
das
xchg
pop
inc
jb
sub
ds
mov
pop
repnz
dec
push
cmc
cmc
mov
icebp
mov
andb
icebp
or
jne
stc
push
and
test
dec
icebp
xor
andb
or
out
lock
mov
xor
ret
add
jmp
repnz
ret
fwait
push
sub
ffreep
push
inc
fcmovbe
dec
push
insb
loope
inc
cmp
cmp
ret
mov
adc
mov
test
inc
add
jne
stc
mov
fld
xor
jmp
xchg
pop
ljmp
push
xchg
je
fbstp
jmp
dec
or
push
nop
push
jns
xor
cmpsl
xor
or
push
add
dec
adcl
mov
jl
push
jecxz
repz
mov
sahf
jae
insb
sbb
push
push
aad
jns
imul
dec
xchg
gs
dec
outsb
and
mov
jno
inc
cltd
andl
jl
mov
sbb
mov
jns
mov
cmp
and
dec
dec
or
test
mov
rorl
fadd
xor
or
xchg
in
xchg
push
popf
or
arpl
adcb
fsubrs
scas
pop
or
rclb
fs
push
adc
sub
cmp
lea
sbb
mov
push
js
xlat
pop
mov
mov
test
jl
inc
xchg
push
push
adc
adc
hlt
ret
xor
aam
in
jmp
sbb
pop
pop
and
enter
push
and
pop
leave
inc
ds
jmp
jmp
ret
cmp
sub
inc
xor
adc
bound
xor
arpl
mov
jb
lds
movsl
mov
and
cli
adc
jmp
cwtl
bound
pop
xor
stos
sub
loop
adc
or
adc
hlt
psubsw
xor
push
sub
push
bound
jmp
and
and
add
jns
xor
jg
call
mov
or
sbb
enter
add
cwtl
test
xchg
adc
push
pop
test
sub
or
loopne
icebp
data16
add
icebp
push
xorb
dec
xor
ret
icebp
or
mov
fstl
mov
aaa
xchg
and
inc
adc
pop
inc
and
rorl
pusha
push
dec
nop
in
or
mov
sbb
int3
ret
icebp
rolb
orb
sbb
jns
outsb
sbb
pop
inc
inc
jg
nop
lret
je
sbbb
add
dec
test
add
or
sub
ret
imul
sbb
push
mov
outsb
sarl
push
jg
daa
sarb
add
push
jo
cmc
xlat
loop
xchg
cmc
sub
sti
xchg
and
nop
pushf
les
stc
push
add
orb
aaa
leave
fs
mov
sbb
lds
xchg
and
xchg
push
cmc
mov
adc
repnz
cmpsb
int
pop
add
mov
sbb
pop
add
test
fwait
lcall
jmp
nop
outsb
dec
pop
and
inc
xor
adc
sarb
mov
dec
jo
cmc
out
es
aam
nop
out
inc
lds
fwait
xchg
cmc
test
inc
cmp
mov
jmp
cs
imul
inc
leave
leave
dec
xchg
hlt
cmp
sub
leave
leave
and
sysenter
and
mov
push
dec
push
xchg
cmc
repz
and
adc
and
or
adc
adc
scas
or
cmc
fcomip
add
and
or
dec
nop
push
dec
cmc
loope
cmp
jmp
mov
test
insb
pop
fs
sub
xor
add
sub
hlt
push
stc
in
imul
and
jmp
inc
jp
sub
icebp
mov
cmc
xor
mov
cmp
mov
cmp
subl
cmc
std
inc
xchg
and
bound
mov
insb
mov
adc
pop
outsb
cmc
add
xchg
or
popf
dec
inc
push
add
dec
push
ret
jo
mov
and
push
insb
inc
jo
repz
scas
mov
and
and
jne
repz
and
xchg
repz
frstor
repnz
lock
adc
xorb
test
nop
sbb
shl
xor
popf
orb
cmc
data16
shlb
fndisi(8087
negb
je
repz
repz
or
iret
rcll
pusha
push
bound
xchg
in
scas
stc
cmp
aaa
popa
aas
ss
xor
fs
sub
and
je
jns
xchg
jns
loopne
dec
inc
dec
jns
loopne
sti
fs
jns
adc
popa
xor
sbb
cmp
int3
or
push
xchg
jns
into
dec
test
vorps
nop
outsb
mov
and
jns
pop
jmp
scas
jb
imul
repz
out
adcb
adcb
dec
and
int
xor
lods
inc
ret
or
xchg
repz
inc
sbb
repz
mov
fnsave
loope
xchg
loopne
fwait
xchg
rcrb
mov
mov
dec
inc
xchg
mov
test
sbb
dec
push
fmull
jne
mov
rorl
fnstenv
cmp
pop
cmp
clc
mov
xchg
cmpsb
mov
pop
mov
test
pop
cmp
inc
dec
jno
enter
dec
je
sbb
mov
imul
loope
mov
fwait
xchg
fnsave
xor
mov
push
cmp
sub
nop
jae
jne
mov
pop
loop
mov
fwait
xchg
push
rcl
pop
mov
adc
mov
mov
hlt
xor
mov
imul
popf
mov
loopne
push
jno
mov
nop
jns
enter
push
mov
cmp
imul
mov
nop
call
xlat
ss
mov
adc
outsb
sbb
inc
mov
rcl
lods
cld
adc
shrb
imul
mov
shlb
mov
adc
pop
inc
jnp
rcl
dec
je
mov
xor
imul
filds
mov
xor
cmp
jecxz
and
jo
or
or
out
mov
aaa
or
sub
fwait
xchg
add
ja
cmpl
in
scas
mov
fwait
jno
movsl
fwait
xchg
sbb
mov
movsl
pop
movsl
test
fwait
movsl
fwait
xchg
jb
cmp
push
pop
xchg
pop
das
outsb
andl
rolb
sub
adc
fwait
adcl
sub
sbb
addl
or
sbb
pop
mov
addl
add
or
mov
ljmp
popa
popa
dec
add
lods
into
mov
adc
sub
mov
das
mov
adc
outsb
sbb
imul
andl
rcrb
fldt
es
loop
cmpl
orl
aam
cmp
mov
or
dec
fnsave
imul
sbb
xor
aad
mov
adc
lahf
lock
andl
or
test
inc
dec
mov
add
int3
sbb
lock
rorl
add
insb
cmp
adc
int
jl
push
in
push
cmp
shlb
add
cmp
mov
fisttpll
orl
fimuls
cmpsl
or
addl
outsb
sbb
lods
mov
ss
or
jp
nop
addb
rcrb
pop
imul
imul
xorl
andl
data16
sti
lret
sahf
out
cmpsb
mov
imul
jo
add
pop
sbb
sub
cmp
pop
and
pop
push
mov
int
inc
cmpl
arpl
fsub
cmpsb
xor
jp
out
xchg
hlt
lock
inc
push
inc
inc
pop
push
add
je
lds
subl
cmpl
clc
imul
rcl
adcl
rorb
rcrb
mov
push
mov
mov
rcr
aad
andl
xor
xchg
xor
cmp
xor
xor
push
cmp
xor
pop
dec
dec
pop
cmp
dec
and
fwait
xchg
cltd
call
adc
push
mov
jo
xor
cli
cmp
cmp
rclb
mov
or
jno
ds
aas
xchg
icebp
leave
jmp
xor
mov
les
mov
xor
xor
repz
mov
in
pop
xchg
sbb
xlat
or
orb
out
push
cwtl
rolb
dec
pop
ret
sub
jbe
inc
push
mov
inc
push
pushf
loopne
inc
cmp
jbe
nop
push
addr16
mov
fcomps
or
pop
dec
pop
jl
jge
popf
test
jbe
out
rolb
xorl
mov
sbb
pop
int3
add
pop
push
into
sub
inc
jb
enter
pop
adc
push
push
pop
movsb
mov
hlt
out
push
pop
nop
ret
xor
xchg
add
lahf
es
xlat
jae
mov
and
xor
or
adc
out
lock
push
mov
mov
dec
mov
lret
push
pushf
or
sbb
lret
cmp
scas
mov
pop
add
lret
and
push
xchg
scas
mov
imull
dec
out
mov
pop
dec
mov
addr16
int3
xor
sbb
push
mov
mov
sbb
fmull
push
stos
xlat
jb
jae
popf
push
rcll
xchg
inc
cmp
add
push
mov
movsb
xor
ljmp
dec
mov
shr
push
adc
add
sub
aam
in
cli
mov
mov
fsubl
jg
and
mov
inc
push
dec
jo
outsb
xchg
and
fs
ja
and
movsb
adc
mov
loopne
mov
add
fiaddl
add
xchg
arpl
dec
hlt
out
or
loope
dec
adc
push
clc
add
and
mov
inc
lcall
cltd
int
sbb
or
dec
cmp
das
jmp
push
ret
adc
xchg
test
sub
fiadds
dec
push
fisttps
call
sti
into
jmp
and
inc
mov
addb
push
cwtl
testl
mov
dec
sub
ret
push
inc
xchg
ret
aam
into
add
mov
pop
push
dec
or
add
add
adc
fcmovnbe
pop
add
inc
sub
pop
xor
aaa
xor
push
jnp
add
aam
dec
and
sbb
jmp
cld
push
sbb
xor
loopne
movsb
sbb
jmp
add
sbb
leave
pusha
jmp
mov
imul
mov
jecxz
nop
clc
cs
call
inc
xchg
arpl
dec
arpl
pushf
dec
call
sub
rolb
mov
test
xchg
push
int3
dec
inc
jne
and
xlat
dec
inc
jne
xorl
pusha
rorb
mov
jne
xchg
nop
sbb
frstor
inc
fnsave
daa
insb
jo
inc
call
sti
es
and
push
jne
lea
jb
jne
jne
shlb
nop
fs
enter
jmp
jne
push
enter
adcl
sub
sbb
jne
call
daa
cmp
dec
jne
les
cmpsl
push
test
aam
loopne
mov
sbb
and
mov
cwtl
mov
inc
add
mov
add
fwait
stc
dec
daa
jb
cli
xchg
movsb
add
incl
jl
je
leave
cmp
sahf
xchg
sbb
xchg
andl
sarb
mov
adc
jp
push
sub
dec
pop
loopne
mov
cmp
dec
call
jmp
pusha
addl
pop
or
pop
push
jns
push
cmp
rolb
inc
sub
repz
or
sub
push
or
push
arpl
add
dec
jo
nop
pop
adc
jp
out
push
inc
xchg
mov
add
ljmp
clc
add
pop
adc
push
fwait
stos
repnz
cs
mov
into
push
hlt
xlat
nop
inc
and
cmp
pop
xor
add
jb
xor
sbb
jge
push
inc
call
mov
insl
sbb
lods
ss
pushl
or
faddl
or
mov
es
cmp
or
jne
ljmp
dec
pop
xor
cmp
add
ret
outsl
cmp
inc
jmp
dec
jmp
xor
andb
lock
inc
inc
adc
pop
inc
mov
inc
jmp
inc
inc
inc
pop
dec
adc
es
in
roll
adc
sbb
in
clts
addl
jmp
fs
stc
add
mov
xchg
xorb
push
push
inc
or
je
lahf
loope
cmp
and
cmp
leave
pusha
or
ss
fcmovnu
mov
repz
mov
add
xor
inc
jmp
inc
popf
inc
add
adc
push
popf
or
pop
pop
jnp
sub
repz
sbb
pop
cld
xor
mov
and
inc
mov
psubb
mov
xor
mov
rclb
mov
fnstcw
call
xlat
push
cmp
mov
inc
inc
shl
cmove
je
pop
jb
cmp
repz
nop
fisubrs
jge
push
push
or
jge
mov
out
shl
jne
and
je
push
jne
cmp
ja
cmp
xor
clc
in
push
add
and
push
add
ret
push
sar
inc
rol
add
hlt
call
loope
xchg
pop
xchg
cmp
mov
xchg
xchg
mov
sub
hlt
dec
movsb
or
mov
mov
fcomip
inc
adc
sub
fcom
jbe
or
rorl
mov
and
push
mov
fstl
push
scas
sbb
sbb
and
push
mov
xor
pop
and
and
test
sbb
shrl
shrl
shll
ud2
xchg
mov
inc
add
push
dec
pop
push
push
in
mov
adcl
es
out
mov
push
out
sub
xor
orl
cmpsl
dec
lock
dec
enter
and
ret
sub
cmp
movsb
lahf
xchg
arpl
les
xor
mov
adc
sti
xchg
xchg
jne
loopne
push
stc
movsb
and
xor
aad
pop
and
leave
dec
add
adc
cmp
cmc
fists
sbb
fs
in
sbb
les
xor
lock
sbb
mov
xor
aaa
ljmp
add
cmp
daa
dec
adc
mov
pop
xchg
push
arpl
sbb
data16
ljmp
cltd
loop
movsb
divl
enter
pop
add
pop
add
push
insb
cmp
and
cmp
jmp
testl
adcb
inc
cmp
call
cmp
push
mov
rorl
lcall
xorb
sbb
imul
dec
dec
inc
out
pop
and
inc
dec
inc
ja
pop
sbb
and
jno
pop
cli
sahf
sbb
stc
add
repnz
ror
xchg
xorb
cmovb
aad
push
push
je
divl
sbb
xlat
push
leave
nop
mov
movsb
sbb
add
or
inc
jp
testl
or
dec
cs
add
or
dec
lds
imull
or
push
inc
imul
arpl
inc
adc
neg
mov
roll
fbld
ljmp
sub
and
jo
pop
test
add
into
dec
rorl
and
les
dec
data16
add
test
add
inc
cmp
testl
nop
push
inc
mov
mov
adc
dec
adc
add
adc
or
nop
pop
fwait
mov
divl
jb
pop
idivl
dec
push
or
cmpsb
shl
xlat
sahf
xchg
cmc
imul
aam
push
cmc
cmp
jmp
nop
and
push
push
mov
dec
sub
jne
cmp
test
call
imul
adc
dec
call
rolb
outsb
add
test
push
inc
mov
xor
nop
xchg
sahf
mov
stc
xchg
mov
mov
adc
je
mov
mov
outsl
mov
adc
adc
daa
lea
push
daa
add
xchg
or
daa
and
shl
mov
je
push
cltd
daa
adc
es
pop
or
pop
cmp
nop
add
loope
sub
call
push
cltd
daa
mov
mov
mov
or
sub
add
rorb
push
lea
sub
es
xor
lods
mov
addr16
adc
mov
mov
std
mov
movsl
sub
scas
push
mov
push
mov
sub
cs
es
adc
xchg
xchg
mov
push
push
mov
out
sub
push
lods
std
dec
xor
mov
addr16
and
fstps
test
andb
fldl
xchg
xor
dec
fnstcw
cmpsl
fs
addr16
and
sub
push
push
jbe
add
push
xor
xchg
dec
pop
inc
inc
sbb
adc
addr16
jnp
jmp
xchg
loopne
add
aam
add
add
sbb
aam
pop
call
test
push
mov
xchg
and
cmp
xchg
and
cmp
mov
and
movsl
out
xchg
test
sbb
pop
xchg
nop
xchg
mov
cmpsl
sub
pop
cmp
push
int3
cmp
cmp
sub
idivb
dec
mov
cs
roll
and
aad
xor
lret
xchg
ud1
cmp
dec
push
call
adc
xor
cmp
adc
rclb
jp
mov
int
lods
or
or
push
xchg
shlb
cmp
or
xchg
lds
mov
inc
inc
or
dec
cmp
adc
aaa
call
jo
int
shlb
ss
mov
xchg
and
jecxz
mov
int3
cmp
sbb
mov
sbb
cmp
pop
push
ds
cmp
xor
pushf
pop
dec
call
ds
jbe
sub
hlt
dec
sbb
dec
cmp
sub
jp
mov
dec
call
sbb
ret
shlb
movsb
xor
mov
sub
xchg
jnp
and
jbe
mov
xchg
and
mov
aam
or
test
add
adcb
inc
cmp
xchg
cmp
adc
cmp
xor
inc
xchg
and
xor
test
mov
and
inc
inc
cmp
cmp
cmp
adc
push
ffreep
mov
adc
dec
and
repnz
jg
push
dec
inc
cmpsl
cmpsl
cmp
xchg
sbb
add
xchg
test
sbb
imul
or
ja
push
sbb
xor
mov
sub
test
sub
lds
mov
aam
sbb
test
push
pop
and
and
out
iret
lds
xlat
cmp
into
add
or
ficomps
mov
push
xchg
cmp
movsb
mov
pusha
rcll
cmp
sub
inc
sbb
xor
dec
lret
cmp
cmp
cwtl
mov
mov
shrb
sbb
sbb
nop
push
insl
pop
mov
add
sbb
xchg
xor
dec
sub
scas
sbb
sbb
out
dec
sbb
dec
sbb
xchg
cmp
or
js
jo
sbb
pop
and
cmp
jp
sub
inc
mov
sbb
or
sub
mov
push
xchg
clc
cmp
shl
mov
call
cwtl
cmp
push
sub
sub
mov
sbb
pop
lret
repz
sbb
or
into
in
jge
xchg
inc
or
mov
or
dec
sub
cmp
or
sub
inc
call
ret
mov
out
mov
mov
dec
cs
aas
pop
aaa
xor
out
xchg
push
push
dec
jns
test
dec
mov
jns
pop
out
mov
jb
and
add
hlt
add
inc
push
out
pop
adc
or
mov
or
imul
sti
sbb
jns
xchg
nop
out
inc
mov
call
or
jle
bound
mov
and
or
adc
out
pop
inc
mov
pop
int3
and
or
cmp
and
cmp
inc
int3
and
fucomi
aad
nop
call
jle
xor
shll
jae
lret
stos
movsl
xor
add
sbb
fistpl
adc
mov
xlat
adc
add
sbb
and
nop
add
pop
ss
xchg
mov
cs
sahf
and
adc
ret
dec
pop
fistl
jo
rclb
mov
fistpl
xlat
lret
xchg
fisttpl
adc
lds
fucomi
mov
fildl
or
jge
aam
fldt
or
pop
push
and
sbb
push
dec
adc
xor
or
in
loope
loopne
pop
loop
pop
in
nop
jns
movsbl
xor
xchg
or
adc
mov
dec
enter
pop
inc
arpl
je
pop
stos
xor
lret
push
pop
cltd
nop
jnp
loopne
mov
push
pop
cmpsb
sarb
js
pop
pusha
cmp
lods
sub
pop
aas
add
pop
mov
and
dec
xchg
les
mov
jl
and
mov
in
push
es
outsl
nop
pop
dec
xchg
or
sub
sbb
pop
push
mov
inc
pop
pop
adc
push
xchg
or
psubsb
inc
push
aad
je
fsts
inc
push
jo
cmp
fdivrl
xchg
stos
dec
call
pop
test
pop
hlt
sub
mov
rorb
call
mov
or
call
sbb
adc
das
lahf
ljmp
call
mov
repnz
call
sub
add
call
pop
scas
xor
lock
call
fwait
nop
test
call
mov
stc
sti
inc
call
mov
stc
repnz
movsb
lods
andps
movsl
pop
call
xchg
das
pop
mov
call
insb
stc
repnz
call
je
gs
pop
or
jl
call
shr
inc
sbb
cmp
test
mov
nop
sbb
adc
sub
cli
lret
movsb
dec
dec
in
in
fxch
movsl
repnz
les
lods
int3
mov
pop
shlb
xchg
mov
xchg
lret
fdivl
lret
test
test
in
inc
aam
xchg
lret
lock
es
jns
pop
sub
cld
adc
add
add
leave
or
je
out
or
or
loope
adc
mov
mov
mov
stos
and
dec
in
lahf
sub
xor
jae
xchg
dec
in
push
xor
push
push
inc
gs
dec
out
rorb
cs
adc
and
or
pop
add
add
or
jo
pop
and
enter
mov
and
int
jo
xor
sahf
mov
jg
push
call
mov
je
data16
js
movsb
sbb
push
adc
inc
lcall
sbb
cmp
dec
push
and
sbb
cli
cmp
xchg
xchg
mov
sbb
imul
pusha
in
lods
mov
cli
mov
xchg
out
mov
push
and
movsb
and
mov
or
push
inc
adc
popf
push
and
loopne
add
shlb
xchg
je
aam
inc
add
push
or
push
add
inc
mov
sub
mov
dec
inc
pop
pop
mov
lods
mov
rorl
sbb
and
jp
xchg
pop
mov
loop
shlb
add
or
mov
mov
dec
xor
rcrb
sbb
lock
and
mov
fisttpll
aam
push
inc
fnsave
push
jbe
sti
cmp
cli
cs
ljmp
add
adc
xchg
dec
mov
call
jo
sti
stos
mov
and
scas
jae
sbb
xchg
inc
push
in
das
inc
sbb
push
jp
movsb
inc
shlb
push
rorb
call
mov
xchg
jp
mov
dec
cli
ret
push
mov
jge
gs
dec
sbb
add
mov
mov
or
adc
or
push
rcll
rclb
cmp
inc
mov
or
pop
push
xchg
push
mov
stc
inc
into
frstor
jge
in
push
add
or
cmp
xchg
adc
jno
nop
sub
xor
push
xchg
add
sbb
dec
push
xchg
mov
sbb
sub
sbb
xchg
repz
jp
and
stos
xchg
fbld
outsl
adc
pusha
jmp
fs
ret
subl
pop
jne
xchg
test
dec
push
ljmp
sub
test
sub
mov
adc
inc
mov
jnp
sub
sbb
sbb
ja
xchg
adc
cmp
ss
cmp
push
sub
pop
lea
and
push
in
push
pop
mov
dec
mov
adc
cmp
mov
pop
cmp
jmp
mov
pop
or
adc
pop
lods
inc
push
hlt
rclb
sub
push
cs
jo
dec
jmp
add
movsl
sbb
dec
jmp
add
inc
xorb
xchg
ds
rorl
cmp
cltd
out
addr16
add
sub
jmp
cmp
xchg
push
or
xor
mov
or
cs
adc
sarb
sbb
loopne
add
repnz
cmp
jns
push
cmp
pop
push
jmp
inc
pop
cmp
pop
jo
add
cwtl
mov
imul
push
lcall
call
and
inc
and
jbe
es
add
adc
mov
out
rorl
mov
rolb
adc
inc
inc
mov
sti
call
ror
sti
xchg
adc
inc
cmpsl
rcrb
jmp
adc
sti
lods
test
mov
xor
orb
and
push
sbb
and
and
pop
xchg
jmp
mov
lods
in
push
pop
rolb
clc
shll
push
ret
pop
push
pop
int
nop
je
adc
pop
xchg
push
pop
add
xchg
push
xor
ja
call
sahf
adc
sub
sub
movsl
add
pop
cwtl
jmp
adc
dec
adc
sub
inc
pop
or
es
xor
push
aas
push
test
aas
pop
xlat
insl
dec
xchg
outsb
dec
cmp
nop
adc
adc
shrb
mov
adc
push
pop
mov
push
and
adcl
repz
nop
in
adc
pop
inc
adc
sbb
mov
roll
dec
ja
push
ret
mov
jmp
adc
lods
mov
negl
call
in
bound
mov
lea
lcall
mov
jmp
cmp
and
sub
mov
xor
not
push
mov
not
push
je
add
imul
xchg
nop
cmpsb
sub
test
idivl
adc
pop
popa
pop
mov
xchg
pop
inc
cmp
testl
push
fs
mov
pop
nop
dec
aad
imul
push
shrb
xor
enter
mov
sbb
test
xchg
addb
div
jmp
arpl
xlat
push
xor
inc
retw
push
stc
push
cld
add
aaa
and
jl
negb
fwait
bound
insb
mov
jge
shr
jmp
adc
push
dec
push
mov
mov
dec
mov
push
orl
xchg
and
and
adc
pop
daa
scas
inc
popf
pop
pop
or
add
call
daa
icebp
sbb
dec
push
lods
xor
or
push
pop
shll
addb
inc
daa
sub
add
push
cmp
mov
into
mov
inc
jle
push
push
stc
mov
fcompl
je
push
ds
fwait
daa
adc
outsl
xchg
or
and
dec
xor
das
xor
daa
or
lods
or
or
movsl
enter
adc
cmp
and
push
out
pop
scas
push
int
je
addb
push
fucomi
add
pop
cmp
stos
flds
xor
sbb
fcompl
xchg
adc
sub
xchg
adc
xor
nop
popa
mov
pop
rcll
xor
jo
sbb
int3
push
je
fistpl
pushf
xchg
mov
mov
pop
cli
push
push
jns
sub
in
popf
inc
cwtl
xchg
mov
mov
jecxz
mov
mov
push
out
cmp
scas
bound
adc
add
frndint
sahf
call
adc
fldenv
add
decb
sbb
test
movsb
xchg
mov
sbb
fstl
pop
mov
scas
movsl
mov
dec
xor
dec
addl
xor
pop
mov
lods
mov
jo
cwtl
mov
mov
or
pop
xor
fwait
mov
xchg
mov
fs
mov
push
adc
mov
roll
push
rclb
add
xchg
pop
call
xor
push
xchg
xorb
add
into
adc
test
test
and
adc
or
mov
mov
mov
inc
inc
out
sub
int3
dec
mov
repz
or
arpl
leave
push
popf
lods
or
je
push
call
dec
leave
or
mov
fdivrs
testl
stos
xor
lock
inc
loope
stos
mov
andb
xor
xchg
hlt
cld
sbb
sub
cmp
ja
cmpsl
jne
fistpl
adc
add
imul
inc
dec
test
add
or
or
and
inc
adc
stos
add
mov
ljmp
adc
fistpl
ret
repnz
xlat
fwait
scas
pop
inc
les
sbb
imul
mov
out
jb
and
jl
call
int
es
call
fimull
adc
and
mov
nop
sbb
push
cmp
dec
cmp
mov
sbb
es
cmp
lcall
adc
xlat
ret
lods
add
pop
and
in
sub
dec
inc
or
inc
mov
js
and
adc
repz
popw
mov
dec
inc
add
sub
inc
push
xorb
inc
daa
pop
pusha
pop
adc
mov
int
pop
enter
cltd
test
dec
mov
dec
addl
push
and
sbb
cmp
push
jo
xorb
inc
or
cmp
push
inc
cmpsl
dec
xor
stos
jmp
and
xchg
rorb
popa
ja
cmp
jmp
and
adc
cmp
add
and
or
sbb
sahf
out
sahf
ret
mov
jns
out
push
ds
or
cmp
repz
sbb
aam
push
mov
xlat
jbe
pushf
pop
push
lods
push
mov
mov
push
push
sub
push
repz
jnp
movsb
push
push
xchg
jl
mov
inc
cmpb
push
push
pop
dec
cmp
sbb
jns
iret
push
repnz
fmulp
mov
test
mov
ret
into
sbb
repz
repnz
loop
out
sahf
out
sbb
dec
repz
sahf
mov
sbb
cmp
repz
scas
lret
jns
cmpsl
stc
or
and
pop
out
sahf
out
jb
nop
sahf
sahf
out
sahf
lods
mov
fsubrp
jecxz
fidivrs
ss
inc
push
shl
sbb
outsb
jle
sahf
idivl
rol
loop
clc
adc
out
int3
mov
aaa
je
fs
push
notl
sahf
cmp
adc
daa
pop
mov
push
xchg
jbe
add
popa
outsl
mov
push
cwtl
cmpsl
insl
mov
iret
dec
sbb
lods
test
add
add
jbe
push
scas
test
test
pop
das
dec
adc
imulb
add
and
pop
dec
cltd
cwtl
inc
pop
jle
or
push
divl
gs
dec
push
shr
mov
subb
push
sub
ja
and
lahf
mov
dec
and
or
lahf
es
scas
shlb
sbb
push
xor
sbb
jae
outsl
rorl
push
push
pop
or
cmpsl
add
bound
mov
add
movsb
or
out
xor
inc
or
outsl
mov
fisubrs
dec
cmp
or
das
int
pop
sub
xchg
xor
ret
subl
aaa
dec
dec
inc
push
dec
pop
add
cwtl
adc
push
pcmpeqd
and
mov
imul
mov
sub
mov
stos
outsl
mov
pop
data16
add
xchg
cmp
sbb
jnp
das
jg
ret
and
subb
je
incl
or
arpl
push
dec
inc
push
push
inc
push
jns
pop
cli
inc
pop
inc
outsl
outsl
rorb
xchg
xchg
jb
inc
gs
incb
xor
xor
mov
lods
pop
dec
imul
jb
jae
pop
dec
jae
inc
jne
sti
mov
je
jae
inc
js
mov
mov
les
jnp
inc
jg
push
xor
sub
sub
sub
inc
inc
xor
xor
aaa
xor
xor
jge
xor
xor
inc
xor
outsl
in
pushl
ss
xor
cmp
fdivl
cmp
xor
clc
inc
inc
xor
xor
jb
aam
xchg
test
jnp
andb
jne
test
movb
mov
inc
cltd
orb
mov
movsb
ss
xor
or
cmp
sti
fistps
and
inc
aaa
adc
xor
inc
pop
dec
and
xor
jl
ss
pop
push
mov
sahf
inc
push
inc
push
dec
and
sti
or
sub
pushf
xor
adc
and
dec
dec
outsl
mov
xor
jne
dec
loopne
push
xchg
mov
in
scas
ss
xchg
push
push
dec
hlt
imul
ficoml
pop
push
call
push
jns
iret
sti
inc
out
adc
push
sub
out
cmp
in
mov
lods
sahf
int
lret
mov
lods
and
rol
jns
hlt
iret
sbb
inc
pop
dec
xor
adc
xchg
add
jg
jbe
adc
insb
outsl
xor
push
dec
mov
les
je
push
push
lods
lea
jns
push
inc
cmp
cmp
sbb
sbbb
or
loope
dec
popf
mov
fldt
inc
xchg
push
inc
or
sub
or
dec
insb
insb
mov
mov
testl
outsb
ret
es
cmpsb
mov
out
es
push
add
dec
inc
xor
sbb
pop
insb
add
or
cmp
in
mov
lods
loopne
sbb
fs
and
mov
ss
out
push
and
push
scas
jae
and
and
imul
jmp
jne
xchg
loopne
pusha
add
js
daa
scas
scas
je
mov
in
hlt
dec
fs
imul
push
dec
mov
fdivs
repz
adc
cwtl
push
push
xor
pop
or
movsb
jmp
mov
push
pop
arpl
inc
cs
push
push
push
push
or
ja
jnp
and
outsb
outsl
loop
mov
push
popa
imul
inc
popf
insb
cmc
data16
sbb
fdivl
sub
add
test
and
add
mov
add
or
push
test
inc
rolb
mov
adc
inc
add
aas
aaa
popa
mov
xchg
pushf
add
sbb
push
rorb
jg
adc
dec
and
test
ret
xor
cmpltps
out
sahf
mov
orb
fdiv
xor
or
add
mov
das
pop
and
das
xchg
adc
imul
sbb
enter
xor
out
sbb
std
sbb
mov
das
push
pop
nop
cld
and
push
and
jns
jns
out
stc
jp
push
cld
fdivr
shrl
mov
push
sbb
mov
out
les
ret
jl
mov
and
xor
stos
outsl
push
data16
add
popa
and
pushf
out
push
ds
cmp
xchg
popa
xchg
or
add
popl
sahf
out
stos
adc
push
cld
or
in
sahf
out
fmul
les
movsb
xor
stc
call
mov
jl
insb
push
cmp
pop
mov
jns
out
dec
inc
inc
cmp
iret
repz
xor
sub
and
cmp
repz
adc
out
cmp
or
add
cld
or
hlt
call
sahf
out
mov
nop
jo
repz
out
adc
pop
int3
mov
repz
mov
sbb
cmpsl
stc
cmp
cld
push
fcom
les
out
mov
js
sub
cmp
out
aam
mov
ds
inc
sbb
add
call
sahf
out
mov
ret
inc
pop
xor
cltd
les
daa
fstl
dec
repz
xchg
mov
cmp
in
mov
dec
adc
lret
sub
adc
push
xor
pop
push
inc
dec
cmp
fiadds
mov
notb
mov
mov
sub
or
add
mov
push
jecxz
inc
adcl
jo
sbb
mov
bound
cli
out
xchg
dec
adc
pop
sub
mov
pop
sbb
dec
add
and
mov
jno
daa
push
and
xor
dec
movsb
jmp
fidivrl
add
mov
push
mov
push
icebp
or
adc
jnp
push
js
shrb
mov
pushf
andb
les
dec
ret
jns
xor
push
push
out
jg
int
push
add
movl
xorb
mov
cmp
pop
jne
lret
push
add
pop
stc
sbb
or
push
je
cmp
imul
jbe
movsl
dec
fidivs
arpl
imul
pop
jb
pop
push
or
loope
xor
jo,pn
bound
pusha
cmp
xor
jo
jnp
filds
push
insb
das
inc
xlat
lods
and
outsl
jl
lods
pop
mov
ja
lahf
pop
lods
or
mov
loopne
leave
jae
add
mov
mov
nop
or
and
and
int3
dec
enter
inc
sub
enter
aas
jg
fmuls
in
push
cmp
insb
xchg
aas
sete
adc
test
jae
ljmp
ds
mov
and
xlat
jns
mov
rcr
sub
insb
cmp
cltd
ss
lcall
shl
jns
lret
les
mov
in
sub
jl
inc
or
pop
in
push
aas
sbb
mov
cmp
or
mov
mov
cmp
dec
aam
aas
vmptrst
dec
je
sbb
aas
mov
rcll
outsl
pinsrw
daa
xchg
adc
shlb
pushf
jbe
in
jp
insb
push
aam
insb
adc
repnz
xchg
dec
mov
out
imul
imul
lock
enter
jo
cmp
loope
sub
push
fistpl
xor
dec
imul
pop
add
inc
je
inc
sbbb
dec
imul
mov
or
add
lahf
stos
push
jb
push
lcall
ret
sbb
lods
mov
push
dec
dec
add
push
push
add
push
outsl
ja
xor
mov
add
popa
mov
add
cs
fs
daa
movsb
shufps
and
sbb
out
mov
lods
popa
mov
ljmp
mov
mov
fs
andb
jb
push
shll
add
sbb
jo
dec
pop
outsb
push
add
push
imul
add
push
mov
in
popa
jae
push
jae
push
or
adc
adc
jae
sub
sub
or
inc
mov
add
mov
cmp
dec
leave
dec
lock
inc
sbb
addb
add
and
add
or
dec
inc
push
lods
loope
mov
push
mov
dec
or
cmp
push
jo
or
ret
mov
imul
mov
popa
divb
push
lods
cmpsl
xlat
lock
shll
add
sbb
imulb
jo
mov
push
aaa
out
or
notb
inc
popa
jge
and
das
mov
inc
pusha
inc
and
pop
inc
cmpsl
and
test
pop
xchg
inc
imul
lret
cmp
jecxz
popa
mov
pop
add
cmp
add
push
fbld
jne
fdivrs
lods
gs
or
cmp
push
sub
fstpt
push
pop
add
xor
xchg
pop
push
sbb
pop
outsb
scas
xchg
and
and
push
xor
xchg
push
nop
pop
ds
dec
test
push
fs
lahf
xor
push
dec
xor
dec
push
and
inc
icebp
fdivrl
xor
inc
cs
ret
ret
jge
adc
jle
xchg
imul
call
xchg
loopne
rcrl
cltd
xor
ret
pop
shrl
dec
add
cmp
lret
das
pop
outsl
or
mov
shrb
inc
add
stc
add
push
lcall
orb
pop
mov
cmp
xor
dec
in
inc
jmp
dec
pop
addr16
inc
jns
lea
pop
arpl
lds
xor
mov
mov
adc
outsl
inc
push
outsl
cmp
das
arpl
xchg
dec
and
mov
add
push
ret
add
sbb
nop
bound
cmp
jle
sbb
lock
xchg
and
mov
rolb
or
jbe
insl
imul
mov
add
cmp
ds
jp
mov
inc
mov
das
enter
inc
arpl
lret
js
aaa
dec
inc
dec
pop
or
inc
pop
outsb
dec
aas
inc
cmc
lods
mov
ret
or
out
jnp
mov
outsb
push
stos
enter
jmp
jge
sub
jp
mov
imul
sub
jo
add
add
add
xor
adc
sbb
pop
mov
fs
push
movsb
jo
sub
jmp
data16
xchg
fimull
push
jo
jno
mov
pusha
repz
add
sub
add
add
xchg
ljmp
dec
imul
adc
push
xor
add
iret
pop
add
lret
add
xchg
into
out
pop
imulb
outsl
inc
cmpsl
add
push
mov
cs
dec
mov
push
mov
add
jns
insb
or
aas
mov
cmpsl
add
push
push
je
ja
clc
cmp
popa
add
xor
and
add
xor
and
lods
pop
cmp
cmp
into
cltd
or
ret
insb
sbb
add
inc
jae
das
sub
mov
xor
mov
and
fbld
scas
aaa
rclb
ficomps
mov
push
popa
subl
scas
std
fwait
xchg
and
or
and
inc
insl
loop
xlat
cwtl
aam
push
jecxz
jo
pop
cmp
push
pop
in
pop
add
add
sbb
push
or
repz
push
insb
push
add
push
call
punpcklbw
iret
jnp
sbbb
pop
and
out
jp
add
adc
xchg
mov
adc
sub
jo
mov
inc
or
add
daa
fiaddl
inc
cmp
push
mov
inc
xor
sti
fsubrl
sub
aad
cwtl
pop
addr16
pusha
jmp
pop
repz
mov
mov
inc
adc
inc
sub
pop
daa
inc
push
push
xor
dec
mov
add
and
lcall
cmp
repz
or
sahf
out
add
out
lock
out
enter
cmp
jns
mov
test
pop
mov
repz
xchg
nop
mov
jo
pusha
push
pop
sahf
out
sahf
push
inc
cmp
and
cmp
out
sbb
cld
in
lock
push
loopne
fdivrs
out
ror
sarb
cwtl
mov
sahf
out
sahf
cmp
sub
sbb
cmp
out
or
cld
in
hlt
in
repz
repz
int3
mov
in
mov
mov
js
push
jns
idivl
sub
and
or
mov
xor
test
mov
add
stos
push
push
cmp
mov
push
mov
fistl
lcall
add
out
imull
mov
shl
scas
push
nop
lods
in
add
daa
add
test
loopne
push
aaa
maskmovq
divl
shrl
pop
mov
add
filds
add
mov
mov
pop
jg
fs
inc
dec
pop
xor
add
cmpsl
mov
and
add
pop
mov
daa
adc
mov
scas
mov
dec
les
xchg
icebp
and
andb
insl
repz
pop
jo
add
in
push
andb
cmp
loope
or
push
movsb
and
outsb
push
cmp
sbb
cmp
sbb
sub
mov
lcall
xor
and
add
cmpsl
lahf
xor
xor
ds
icebp
and
cmp
sbb
xor
jae
outsb
lret
add
adc
imul
sbb
cmp
inc
loopne
and
and
adc
add
pop
or
pop
or
adc
jne
shll
in
xorl
popa
insb
into
lds
stc
das
sti
or
or
push
sbb
fstpl
sbb
inc
adc
inc
pop
pop
adc
ljmp
fcmovbe
add
les
xor
sbb
bound
loopne
sbb
das
xor
xorb
jmp
xor
xor
xor
xor
movsb
xor
xor
xor
xor
xor
xor
mov
xor
xor
xor
dec
xor
xchg
shll
cld
incl
ss
es
dec
aaa
push
aaa
mov
iret
aaa
call
aaa
adc
fisttps
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cld
outsl
clc
cmp
cmp
cmp
cmp
sub
ret
add
push
lock
idivl
decl
push
add
adc
and
dec
xor
cmp
pop
xor
outsb
xor
popf
xor
xor
xor
xor
xor
pushl
xor
mov
xor
xor
xor
xor
out
pop
pop
pushl
xorl
xor
jge
mov
xor
xor
fidivl
scas
gs
pushl
shlb
jecxz
call
xor
mov
ss
ss
ss
ss
aaa
sbb
jno
mov
aaa
loopne
push
add
or
cmpsb
cmp
ljmp
loopne
jmp
cmp
cmp
cmp
cmp
push
cmp
jl
cmpl
xchg
mov
mov
cmp
push
adc
cmp
cmp
cmp
cmp
cmp
cmp
jae
mov
pushf
cmp
out
pop
test
jo
test
mov
aas
adc
xor
inc
aas
popa
aas
cmpl
aas
xor
pushl
aas
out
jmp
repz
cmp
pop
xor
xorb
xor
fdivs
fnsave
ljmp
xor
dec
xor
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
pushl
cld
add
daa
xor
xor
xor
pop
xor
jo
xchg
xor
xor
mov
xor
xor
xor
xor
xor
jmp
sbb
xor
push
aaa
push
sub
ss
clc
loop
cmp
cmp
cmp
jge
mov
mov
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cli
push
xchg
aas
inc
aas
pop
aas
ja
pusha
lds
or
cmp
lcall
cld
lcall
arpl
push
xor
xor
xor
xor
xor
xor
cmp
shll
ret
xor
xor
lcall
out
xor
xor
xor
xor
test
mov
mov
nop
xor
paddd
lock
clc
xor
cmp
jg
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
call
pop
cld
cmp
cmp
cmp
jp
cmp
cmp
std
cmp
cmp
adc
xchg
adc
sbb
or
das
cmp
ds
fidivrl
jmp
mov
and
cmp
ss
ss
xchg
cmp
lcall
test
lods
cmp
cmp
mov
cmp
cmp
mov
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
aas
push
mov
cmpb
aas
sarl
aas
in
out
jg
imul
loop
xor
mov
add
jmp
mov
scas
xor
xor
xor
incl
and
xor
xor
mov
xor
xor
call
xor
cmpsb
data16
ss
add
or
adc
pop
aaa
and
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
imul
outsl
aaa
jl
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
xchg
outsl
cmp
cmp
pusha
cmp
mov
cmp
cmp
sbb
push
cmp
inc
fistpll
inc
cmp
dec
cmp
popa
cmp
cmpb
cmp
inc
cmp
cmp
or
cmp
cmp
cmp
pop
gs
hlt
cmp
cmp
bnd
adc
sub
mov
adc
inc
cmp
push
cmp
pop
cmp
jb
js
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
pop
dec
cmp
inc
cmp
pop
cmp
mov
lea
scas
cmp
jg
cwtl
ds
ds
jecxz,pt
out
ds
aas
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
pop
fistpll
rclb
xor
lcall
sahf
xchg
les
fidivl
in
cmpsl
ljmp
cli
or
adc
and
sub
cmp
jb
mov
xor
xor
mov
je
lcall
xor
xor
mov
jl
cmpsl
xor
or
xor
lcall
jmp
fcomip
xor
xor
xor
mov
ret
aaa
xchg
aaa
fwait
mov
cmpsb
mov
bound
scas
cmp
cmpsb
into
scas
jp
cmp
fdivrl
aaa
cmp
dec
mov
mov
outsl
call
nop
cmp
cmp
cmp
mov
add
or
call
xor
cmp
bound
data16
push
outsb
aaa
jb
jbe
xchg
lcall
ja
js
jge
cmp
cmp
cmp
cmp
cmp
cmp
or
ret
cmp
mov
jne,pt
ret
ja,pt
lahf
xor
xchg
aas
push
mov
jg
inc
xor
mov
xor
xor
cld
inc
jnp
xor
jl
fiadds
aaa
ret
clc
push
jmp
repnz
or
cmp
pop
decl
cmp
jge
mov
cmp
cmp
jbe
xchg
cmp
cmp
ljmp
jp
cmp
cmp
cmp
fdivrs
mov
out
push
aas
jne
mov
or
cli
jg
mov
fwait
xor
xor
dec
or
xchg
sub
sub
aas
xor
divl
pop
xor
mov
loop
ss
dec
ss
outsb
notb
jmp
fidivl
in
and
cmp
cmp
cmp
pop
adc
mov
sbb
incl
sarb
inc
pop
push
imul
cmp
test
mov
scas
cli
add
cmp
dec
cmp
cmp
decl
data16
aam
fnstsw
jecxz
imul
mov
cmp
cmp
scas
rcrb
sarb
inc
cmp
orb
jmp
ds
cmpb
cmpsl
ds
ds
ret
idivl
add
sbb
addr16
loope
rol
outsl
xor
push
xor
aad
out
incl
cmp
or
xor
xor
xor
xor
xor
mov
call
pushl
push
lcall
ds
dec
aaa
pop
aaa
js
mov
inc
aaa
stos
cli
fidivl
out
in
aaa
cli
aaa
mov
es
jg
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
push
clc
outsl
sarb
cmp
cmp
adc
jbe
cmpl
jg
cmp
cmp
cmp
adc
and
pusha
aas
cmpb
aas
fdivrl
loop
out
les
rclb
sub
jne
mov
xor
loop
xor
xor
jg
xchg
xor
xor
xor
cmp
xor
xor
ljmp
jbe
loopne
adc
pushl
adc
sbb
sbb
sub
sub
nop
cmp
mov
cmp
cmp
cmp
cmp
repz
ljmp
adc
aaa
into
cmp
and
pushl
inc
xor
xor
lcall
decb
lods
xor
int3
add
jmp
mov
xor
xor
add
pop
or
int3
xor
cmp
sub
sub
xor
test
inc
cmp
cmp
cmp
xor
mov
fidivs
cmp
cmp
inc
push
mov
push
mov
enter
add
fdivrs
fdivl
pop
pop
jge
lock
dec
cld
push
add
or
adc
decb
cmp
cmp
sub
sub
jecxz
aas
shlb
cmp
inc
xchg
dec
cmp
clc
clc
lcall
push
cmp
rolb
test
mov
nop
xchg
cwtl
aaa
loope
mov
mov
aas
inc
mov
push
mov
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
shrb
aas
fdivrs
loopne
shr
inc
xchg
jbe
push
or
xor
ljmp
cld
xchg
xor
xor
xor
inc
xor
xor
call
xor
enter
cs
aaa
loope
cmp
mov
fwait
sar
or
pusha
xor
std
es
or
or
or
ss
push
aas
sahf
int3
shlb
aam
fdivs
fdivl
loopne
in
call
ss
cld
stos
pusha
jecxz
cld
ss
or
or
adc
adc
sar
add
aaa
sbb
and
and
sub
sub
xor
cmp
cmp
inc
inc
jg
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
jl
clc
and
aaa
xorb
aaa
mov
nop
aaa
xchg
aaa
cwtl
into
mov
aaa
movsb
aaa
test
mov
mov
mov
xor
icebp
pushl
enter
shlb
aam
fdivs
fcompl
in
or
loop
out
aaa
hlt
xor
aaa
hlt
add
mov
pop
mov
adc
adc
sbb
cmp
into
ret
fdivrl
call
pop
loope
mov
cmp
cmp
cmp
cmp
lock
dec
sub
cmp
cmp
cmp
cmp
push
cmp
cmp
mov
mov
cmp
lods
cmp
mov
cmp
adc
adc
shlb
and
incb
incl
in
add
or
sub
stc
repnz
xchg
push
push
push
push
add
push
inc
mov
jg
dec
cld
cltd
push
inc
push
or
aas
movsl
xchg
push
inc
xchg
pop
sarb
in
mov
fistpll
imul
loope
sbb
int
inc
add
mov
repz
ljmp
sbb
pop
cmp
fisubrs
lret
lods
mov
and
inc
add
addb
mov
js
push
xchg
sub
sub
and
and
dec
mov
inc
repnz
cwtl
xor
shlb
adc
add
sbb
adc
sub
mov
add
aas
test
xchg
sub
std
inc
add
mov
pop
daa
cmp
xchg
lock
in
leave
gs
inc
or
sbb
or
es
andb
dec
pop
sub
add
pop
push
fidivrl
dec
imul
jne
jns
xchg
push
sbb
call
or
mov
inc
xchg
or
jbe
cmp
imul
lods
and
pop
sub
pop
jle
cld
add
jl
bound
testl
test
push
or
add
sub
int
dec
mov
fdivrl
inc
or
xchg
or
adc
fs
fnstenv
add
rol
sub
adc
rcrb
pop
lods
ja
and
mov
stos
jg
cmp
or
add
xchg
xor
jp
mov
xchg
sbb
imul
jmp
pop
or
adc
ss
movsb
outsl
push
mov
pop
pop
pop
and
push
pop
mov
es
and
jbe
andl
clc
sbb
cmp
push
add
dec
js
pop
mov
in
cmp
adc
ret
xchg
leave
add
pop
std
lcall
das
mov
js
cmc
mov
cmp
insl
dec
arpl
xor
inc
cmp
jne
test
and
and
pop
pop
jmp
push
cmp
call
add
cs
and
nop
ljmp
mov
or
dec
xor
inc
imul
inc
rcrb
sub
push
add
dec
add
addb
pusha
insl
adcl
nop
gs
dec
inc
inc
and
loop
sbb
or
imul
xchg
jbe,pn
dec
cmp
dec
les
sub
push
xor
loope
push
push
push
mov
xchg
into
fistpl
aas
fcoms
sbb
clc
pop
jl
cmp
mov
cmp
push
aaa
sbb
or
leave
shlb
mov
mov
loope
ret
xchg
mov
ljmp
sub
inc
or
popa
lock
dec
js
out
adc
stos
fistl
shrl
stc
lea
push
push
adc
fisubs
jo
clc
js
jecxz
pop
add
inc
add
mov
push
shrl
xor
sub
into
hlt
loopne
push
jecxz
pushl
sub
sbb
fwait
dec
mov
cmp
add
push
xchg
aad
add
add
dec
cmp
dec
or
js
outsl
sub
stos
rclb
pop
std
mov
cmp
push
lods
std
sub
push
xor
lods
std
es
sarb
push
std
sbb
mov
ss
and
std
sbb
push
lods
in
cmp
std
mov
int3
std
inc
jmp
lock
adcl
leave
inc
jo
mov
xor
adc
std
xor
adcl
lds
adc
cmp
or
fucomi
inc
popa
leave
inc
call
mov
or
jl
adc
add
inc
pusha
cltd
frstor
lods
push
dec
mov
adc
int
cmpsb
sub
adc
dec
repnz
or
movb
loope
testl
je
pushf
cmp
test
cmp
sbb
jp
inc
lahf
jmp
addl
inc
fldt
daa
add
adc
fstpt
lods
push
lret
fstpt
jne
mov
xchg
fisttpl
adc
mov
xchg
push
imul
test
jmp
lods
add
jmp
inc
jmp
sbb
jmp
add
aas
or
nop
xor
mov
and
pop
mov
pop
xor
stos
adc
xlat
sub
mov
mov
ds
adc
cmp
out
cmp
adc
mov
push
in
leave
cmp
sbb
inc
pusha
xchg
sub
dec
sub
scas
mov
jbe
xchg
xor
fcomp
pop
cli
sbb
xchg
sub
dec
sbb
std
pop
push
ds
xor
push
jl
jl
dec
mov
adc
adc
mov
fcoms
mov
adc
or
es
cmp
sahf
jbe
xchg
fs
outsl
mov
and
lods
xchg
xchg
pop
cmp
popa
or
cwtl
and
cwtl
ds
and
cmp
jne
test
sbb
jne
je
call
es
add
cmp
mov
adc
pop
ss
xor
push
add
je
xchg
ja
and
fsubs
and
cmp
js
push
add
push
fwait
stc
or
inc
sbb
sbb
add
cwtl
insl
add
test
gs
bound
and
sub
fistps
adc
add
gs
outsb
cmpsl
add
cmp
or
lods
sbb
and
in
add
inc
sbb
in
sbb
sbb
sub
dec
or
cmp
add
mov
iret
ljmp
mov
cmp
es
inc
jnp
add
add
push
adc
fldt
sbbb
and
pop
mov
push
adc
inc
fcmovnu
push
sub
inc
pusha
and
jl
pop
leave
mov
mov
cmp
mov
pop
test
sbb
nop
shlb
sbb
sub
fstpt
fisubl
jae
mov
pop
nop
and
cmp
jg
and
cmp
mov
nop
push
and
es
add
aaa
sbbb
dec
pop
cmpsl
dec
outsb
and
push
jg
xchg
jns
testl
push
les
imul
add
jmp
xor
mov
cmpsl
add
popf
sub
lret
sub
jg
and
out
fstp
xor
pop
nop
inc
push
fs
mov
push
push
jg
mov
push
pop
and
cmpsl
mov
repz
push
lock
cmp
out
push
or
and
add
cmpsl
inc
cmp
gs
testl
jmp
in
mov
xlat
mov
cltd
jle
pop
test
in
stc
xor
andb
cltd
push
inc
push
pop
fs
and
daa
and
mov
add
or
inc
fs
ds
xchg
push
stc
adc
mov
jnp
mov
aad
out
mov
repz
inc
shl
stos
cwtl
push
push
cmpsl
ret
int3
lods
add
push
pusha
adc
cmpsl
incl
test
imul
in
movsb
daa
daa
xor
andl
dec
shll
daa
daa
daa
daa
cmpsb
xor
daa
daa
daa
push
and
daa
daa
daa
sub
inc
sub
sub
repz
sub
or
or
sub
imul
inc
lcall
xor
sub
sub
sub
adc
jmp
stos
in
testb
cmp
adc
sbb
cmpsb
and
mov
ret
sub
xchg
adcb
cltd
push
pop
push
out
xor
subl
ss
mov
pop
push
jnp
jae
push
lock
jp
mov
es
or
clc
fs
dec
sbb
cltd
lret
pop
sub
mov
psubsb
cwtl
addr16
andl
inc
push
xchg
sbb
push
loopne
jg
and
mov
or
add
cwtl
mov
syscall
addr16
pop
or
adc
sub
add
addr16
jle
jno
push
or
pop
xchg
rorb
push
test
push
addr16
pop
pop
push
mov
rcll
test
sub
mov
and
cmc
ficomps
orb
adc
adc
test
or
mov
inc
loopne
addr16
and
jmp
pop
jb
addr16
adc
nop
out
nop
dec
out
adcl
add
cltd
mov
or
jp
repnz
mov
testl
inc
pop
mov
cld
add
sub
sbb
inc
loop
nop
cltd
inc
mov
and
aad
xchg
mov
cltd
jb
icebp
xchg
push
cwtl
jge
jno
lret
rol
arpl
jno
inc
mov
fs
outsl
insl
subb
mov
xor
fdivl
nop
cmp
sbb
pop
pop
adc
cltd
pop
sbbb
sbb
pop
ficomps
push
push
adc
sbb
test
adc
fadd
inc
loop
jmp
adcb
pop
ljmp
mov
popa
rolb
sub
and
push
jp
mov
and
mov
mov
pop
or
push
rorl
push
pop
aam
roll
test
jl
jmp
outsb
sbb
dec
adc
mov
rorl
inc
fisubrs
in
insb
cmp
xlat
push
roll
ficompl
add
mov
mov
lret
inc
lods
dec
lods
inc
push
repnz
mov
rol
enter
push
mov
push
mov
rcrl
fisubl
mov
imul
shll
rcrb
jo
xchg
pusha
test
nop
and
jne
push
shll
insl
push
ja
rorl
rcll
in
inc
push
mov
dec
pop
addr16
in
mov
lret
loopne
inc
mov
pop
add
sub
push
fstpl
cmp
add
inc
call
mov
push
test
stos
lea
aam
jne
rcll
mov
inc
push
test
pop
aad
movsl
adc
shrl
rorl
fisubl
sub
cmpsl
cmp
shrl
push
xchg
movb
roll
mov
mov
xchg
outsb
or
popf
mov
lods
popf
and
cmp
sub
pop
adc
icebp
mov
pop
rol
and
mov
pop
adc
jbe
movsb
pop
fcoms
push
inc
jb
or
pop
test
adc
xor
sub
nop
hlt
xor
and
or
mov
enter
and
pop
mov
xchg
inc
pop
inc
or
push
inc
mov
inc
jmp
mov
dec
arpl
push
les
or
sbb
dec
loop
pop
push
popa
mov
das
and
movl
out
pop
push
ds
push
inc
pop
pop
mov
idivl
loopne
xor
rorb
sub
popf
mov
mov
je
pop
ja
xor
stos
sbbb
sbb
sbb
sbb
sbb
sbb
pop
inc
sbb
sbb
dec
dec
inc
pop
cmp
dec
and
pop
jmp
or
add
push
call
and
jo
test
pop
dec
adc
cmp
jne
adc
fdivs
lds
pop
stos
filds
sarb
cmp
xor
pop
call
push
dec
jmp
xorl
mov
addb
sbb
rorb
inc
addb
inc
jb
sub
dec
into
add
roll
xorl
jno
cmp
ja
mov
sbb
dec
call
in
jb
enter
inc
pop
fcmovnu
adcb
pop
call
xchg
push
sbbb
in
jmp
fwait
orl
sbbl
je
subl
add
inc
adc
push
cwtl
aas
lcall
xor
cmpsb
pop
pop
fisttpll
int3
cmpsb
pop
dec
fstpl
loop
dec
push
enter
int3
fdivrl
jns
jo
mov
push
call
into
cmpsb
pop
das
inc
jns
cmpsb
pop
fs
fsts
pop
cmp
ss
pop
inc
fcoml
xchg
in
fcompl
ss
pop
lods
sbb
cmpsb
out
lret
call
push
pop
or
xor
popa
shll
cs
mov
adc
mov
adc
push
mov
nop
xor
dec
lock
cmpsl
add
mov
adc
fcmovne
rcl
jp
faddl
push
pop
ret
pop
add
in
sbb
sbb
bound
movb
sbb
enter
sbb
push
or
push
adc
dec
clc
pushf
dec
sbb
jecxz
loopne
loopne
dec
test
nop
loopne
dec
push
repnz
loopne
in
scas
mov
push
inc
daa
in
fdivl
or
add
sub
mov
adc
shr
in
xchg
sbbb
xchg
xorb
jnp
inc
cs
sub
fwait
roll
fmul
sbb
push
inc
arpl
cltd
loopne
cwtl
and
cltd
and
jecxz
sub
push
inc
cltd
push
mov
push
cmp
push
adc
fcoml
and
xorl
lea
push
stc
cltd
sbb
xchg
xor
lods
push
xor
jmp
jo
mov
cmp
adc
cltd
adc
popf
frstor
leave
sub
cmp
test
popa
mov
dec
mov
daa
and
mov
sbb
fimuls
mov
nop
daa
scas
out
cld
loope
lret
mov
repz
shll
stos
jmp
xchg
jl
arpl
add
adcl
push
ds
xchg
add
sub
iret
je
sbb
adc
loopne
jo
cmpsl
add
dec
inc
add
sub
and
mov
mov
outsl
adc
jp
sub
inc
adc
call
or
popa
adc
pop
xor
xor
dec
pop
sbb
jl
inc
ret
add
pop
and
stos
fcomi
jmp
add
push
adc
sti
ret
call
imul
xchg
gs
jge
sbb
pop
push
inc
xchg
subl
or
mov
mov
mov
sbb
and
xchg
inc
push
mov
repnz
inc
inc
icebp
lret
push
inc
mov
push
inc
adc
and
mov
jl
gs
dec
jl
mov
add
inc
jno
xchg
sbb
add
in
sti
pop
lret
pop
pushf
inc
pop
adcb
adc
or
adc
add
or
outsl
adc
mov
sbb
add
ss
flds
mov
movsl
pop
filds
xchg
inc
sbb
add
sub
aam
addl
fiaddl
jno
jecxz
xchg
pop
fwait
cmp
push
fmuls
push
xor
es
mov
lahf
jmp
xor
adcl
hlt
xchg
pushf
mov
movsb
adc
adc
imul
xchg
push
mov
test
orb
test
sbb
sub
sahf
dec
cmp
test
into
nop
daa
aam
fnstcw
inc
repnz
cmp
cmp
fldcw
mov
sbb
lea
sub
test
or
mov
sbb
mov
fadd
push
add
es
push
add
push
add
ss
adc
push
sub
pop
inc
sbb
inc
nop
mov
movsl
xchg
dec
cmovle
mov
roll
das
je
xchg
movsl
sbb
push
inc
xchg
fidivrl
rcrb
xor
xor
xchg
imul
add
ljmp
mov
xchg
mov
aaa
xor
xchg
movsl
fwait
es
mov
xchg
dec
punpcklbw
clc
mov
es
or
jmp
icebp
push
xchg
call
mov
xlat
fs
data16
push
shlb
frstor
cmp
add
sbb
cltd
xchg
test
dec
xor
movsb
icebp
jnp
in
xchg
test
or
adc
aam
and
pop
cmpsb
test
test
inc
push
cmpsl
lret
int
enter
adc
inc
lea
adc
int
sbb
mov
aaa
mov
loope
push
adc
sbbb
repnz
leave
call
adc
push
int
add
xorb
cltd
mov
in
mov
xchg
int3
pop
insb
push
stos
adc
xor
int
mov
rcr
out
pushf
inc
mov
push
inc
pop
dec
pop
dec
cmp
outsb
dec
pop
inc
cmp
jb
jb
inc
fldl
push
rcr
aas
push
and
fistl
insb
push
lcall
pop
dec
fistl
inc
popf
in
inc
mov
aam
loopne
inc
sbb
inc
xchg
mov
or
and
imulb
call
and
cmp
inc
enter
push
and
outsb
inc
pop
ss
fnsetpm(287
cmp
loop
nop
fistl
and
jns
xorb
inc
insl
xor
and
inc
adc
push
dec
push
bound
xchg
or
sbbb
dec
fistpl
ret
or
fildl
shll
orl
fstpt
pop
fidivrl
inc
fstl
sub
mov
mov
fninit
cli
ficompl
jns
stos
cmp
scas
adc
daa
lods
stos
adc
ljmp
inc
and
enter
jp
xchg
jecxz
inc
sub
push
fistl
inc
fs
inc
fnsave
movsl
add
out
cmpsb
jno
push
or
push
and
inc
mov
jo
adc
dec
arpl
adc
shll
or
filds
pop
add
mov
sub
fucomip
in
inc
inc
inc
sub
lock
xchg
jno
iret
loope
les
int3
jns
adcb
repnz
mov
mov
and
or
add
in
mov
in
fdivrl
push
repnz
test
pop
mov
mov
pop
pop
cmpl
pop
pop
popa
mov
dec
mov
inc
mov
and
cmp
and
nop
sbbl
mov
enter
loope
mov
pop
cmp
mov
jb
sbbl
xchg
mov
dec
push
jle
jo
gs
pop
mov
push
jb
cmpl
cs
enter
or
sbb
and
mov
push
jb
mov
and
cmp
mov
mov
pushf
mov
enter
jnp
jo
gs
pop
mov
jb
sbbl
cs
dec
push
sbb
in
pop
hlt
mov
daa
test
fcmovne
or
mov
add
inc
dec
lcall
sub
mov
or
mov
or
inc
adc
adc
lcall
movsb
sbb
imul
xchg
out
cli
mov
inc
dec
lcall
movsb
sbb
les
mov
xchg
xchg
inc
inc
mov
inc
dec
mov
dec
jl
xchg
cmp
cs
dec
push
pop
dec
movsl
adc
and
pop
add
addb
push
test
add
add
add
inc
in
xor
loopne
sub
orl
adc
push
and
add
inc
inc
mov
mov
stc
dec
leave
and
sub
jb
dec
repnz
dec
push
mov
or
test
stos
ret
adc
les
mov
hlt
imul
testl
pop
icebp
xor
sub
out
sub
mov
dec
mov
inc
inc
add
enter
mov
out
test
add
push
mov
sbbl
scas
push
mov
adc
scas
movsl
inc
or
lds
pop
xor
bound
push
xor
movsl
gs
hlt
jp
es
scas
shrl
mov
scas
lret
adc
xchg
adc
pop
xchg
in
adc
mov
xchg
ficomps
sbb
mov
scas
bound
mov
and
xor
scas
xchg
push
ret
fimuls
mov
pop
sarl
mov
inc
sub
push
sbb
rorb
lret
rcrb
scas
adc
pop
xchg
fcoml
mov
scas
scas
repz
scas
pop
xchg
push
inc
xor
mov
imul
ja
mov
mov
pusha
jmp
sub
mov
aas
add
js
sbb
sub
and
adc
add
cwtl
dec
push
mov
int3
sbbb
dec
test
cmp
scas
test
inc
fdivl
jno
sbb
test
dec
movsb
lcall
test
xchg
and
pusha
xchg
movsl
test
mov
pop
mov
fistl
adc
sarb
push
or
call
adc
sbb
push
shrl
dec
jbe
cmp
scas
add
cmp
test
lcall
pop
test
in
test
shlb
test
pop
out
adc
adc
test
testl
xor
aaa
pop
cld
jge
and
shrl
dec
shrb
lock
subl
push
lcall
mov
jbe
lret
sarb
test
aam
je
test
mov
fisttpll
test
pop
lods
test
push
or
or
jmp
lods
pop
and
lcall
out
mov
les
pop
push
call
test
xor
rcrb
test
fsubrl
dec
add
test
xor
shl
add
int3
mov
pusha
test
mov
test
insb
movsl
and
lret
xor
mov
mov
rorb
xchg
fidivrs
leave
mov
repz
xorl
nop
jbe
loopne
xchg
test
lahf
gs
mov
sub
sahf
popa
outsl
sub
sub
out
mov
xor
xchg
add
aad
adc
sahf
shrb
cmp
jp
lock
cwtl
gs
pop
mov
lock
xchg
sahf
jg
adc
je
xor
hlt
cmp
into
adc
adc
test
mov
test
mov
test
cmc
or
test
rorb
pop
shlb
data16
stos
dec
gs
enter
cwtl
test
sub
popa
sub
xor
rcl
test
mov
xchg
sbb
jmp
stc
ret
cwtl
gs
xlat
sub
aas
add
add
mov
call
push
test
and
xor
sahf
je
xchg
movsl
test
xchg
stc
pop
or
xor
aaa
dec
xor
test
andb
and
sub
insl
mov
add
sub
cwtl
gs
shrb
ret
sub
cmpsb
stc
xor
mov
test
movsl
sbb
in
or
push
sbb
test
xchg
outsb
test
je
test
pop
test
loopne
dec
sub
ja
shrb
dec
jb
je
test
int3
mov
in
mov
test
mov
test
mov
test
xor
mov
jmp
and
gs
movsl
cmpsl
sub
stos
add
scas
shlb
jne
sub
adc
adc
aaa
dec
cmpsb
fiaddl
jmp
adc
call
sub
mov
inc
dec
xchg
rclb
mov
jmp
xchg
xchg
jmp
cs
cld
mov
popf
in
xor
xchg
rolb
adc
ljmp
scas
sbb
arpl
or
inc
repnz
gs
adc
outsb
jmp
inc
push
mov
cmpsb
ljmp
add
test
loopne
push
testb
push
sahf
out
sahf
sub
mov
jns
add
sbb
ss
repz
push
pop
outsb
or
cmp
xchg
test
enter
cmp
jl
or
push
ds
pop
iret
repz
jb
mov
cmp
clc
push
stos
adc
jns
out
cmp
jbe
jns
out
test
into
call
add
push
sbb
xor
fnstsw
out
pop
insb
addb
jns
ret
push
cmpsb
add
jb
push
dec
pop
xchg
jo
add
push
mov
push
lea
dec
fs
mov
test
sbb
scas
mov
push
push
mov
iret
repz
cmc
add
push
clc
mov
out
xor
iret
lcall
add
out
repz
clc
mov
mov
out
or
add
test
adc
das
push
adc
xchg
sbb
iret
repz
call
stc
sahf
out
or
mov
repz
test
push
and
cmp
repz
cmpb
sbb
jns
iret
jp
cmp
or
leave
or
mov
and
mov
sbb
outsl
pop
adc
push
test
inc
add
jns
out
push
cmp
adc
repz
out
clc
xchg
in
loopne
iret
repz
fcom
int3
enter
iret
repz
mov
cmp
repz
iret
repz
mov
cmp
repz
jo
push
repz
pop
pop
push
push
iret
repz
dec
dec
inc
inc
cmp
cmp
repz
xor
adc
lcall
fmul
out
sahf
out
mov
sub
repz
add
pop
movsb
jl
cmp
repz
dec
inc
xor
jns
out
or
mov
shlb
mov
or
loope
cmp
int3
test
push
xor
cltd
ja
fwait
jg
push
add
lock
mov
push
mov
das
nop
inc
adc
pop
fs
mov
xchg
sub
add
cmp
lahf
test
aaa
xor
push
push
add
inc
fcomps
xor
pushw
mov
es
mov
outsb
jbe
xchg
or
iret
push
lea
xchg
fdivrs
idivb
daa
or
push
and
aas
mov
and
sahf
mov
mov
mov
inc
add
shll
outsl
sarb
inc
aaa
mov
frndint
push
pop
cmpb
inc
pop
in
xor
int
shll
jbe
add
in
jecxz
mov
push
and
fimull
xchg
aas
andb
shrl
jae
or
aaa
inc
pop
rorl
mov
xchg
push
pop
and
sbb
inc
enter
mov
inc
lahf
ret
out
mov
jle
pop
nop
adc
inc
xor
aas
sti
push
enter
push
push
andb
fsubl
push
clc
push
dec
int3
jbe
rol
adc
les
fbld
mov
add
movnti
fiadds
inc
mov
sub
sub
sbb
push
jo
movsb
aas
pushf
add
push
mov
enter
push
inc
insb
pop
in
adc
jbe
outsb
cs
lahf
dec
outsl
ds
cmp
fsts
pop
movsl
add
inc
cmpsb
clc
test
mov
aaa
rclb
sahf
lds
cmpsl
mov
xor
mov
xor
scas
and
sbb
inc
iret
fbstp
outsb
adc
outsl
jne
notb
xchg
jl
arpl
add
pop
inc
cmp
outsl
and
jb
pusha
sub
or
pop
mov
add
inc
xchg
mov
push
xchg
mov
xor
sbb
xor
aas
xor
lret
fwait
pushf
xor
les
mov
lret
jmp
dec
add
sbbb
fldt
dec
pop
inc
and
sbb
popa
sub
or
mov
mov
ljmp
addb
or
xlat
gs
sbb
mov
sbb
dec
sbb
xchg
add
and
add
push
mov
pop
and
orb
arpl
loopne
xchg
sti
mov
sub
mov
arpl
or
xchg
sbb
and
or
xor
rcrl
ret
push
mov
xor
add
cmp
mov
pop
push
add
push
lds
sbb
test
sub
or
dec
das
ficompl
pop
inc
out
test
xchg
movsb
xchg
jle
pushf
sahf
out
sahf
cwtl
xchg
nop
mov
je
pop
push
pop
dec
iret
repz
inc
inc
cmp
xor
cmp
repz
sub
sbb
ds
repz
add
xchg
hlt
xchg
repz
in
push
in
enter
iret
mov
mov
jecxz
jl
je
cmp
jnp
insb
push
fs
push
dec
mov
iret
repz
inc
push
and
add
in
xchg
iret
repz
push
enter
test
iret
repz
cwtl
nop
mov
js
jo
pop
inc
iret
repz
sahf
cmp
push
adc
lock
out
lcall
fs
out
xchg
insb
pop
adc
mov
fsubr
pop
jmp
add
clc
into
retw
test
inc
xor
mov
sub
xor
mov
adcb
repnz
add
pop
add
pop
js
mov
pop
clc
mov
ds
pop
jg
cld
pop
enter
push
adc
es
mov
outsb
stos
lcall
jb
movl
test
aas
or
mov
test
xchg
mov
mov
sbb
adc
mov
sbb
push
fnstenv
sti
inc
dec
jl
mov
xor
lcall
cmp
ss
ss
outsl
xor
nop
ss
sub
ss
push
insl
dec
sub
xorl
aaa
or
cmp
cmp
aas
cmp
fstpt
push
cmp
xchg
test
push
stos
fwait
es
dec
cld
pop
xchg
lret
cmp
cmp
cmp
cmp
jg
mov
inc
jnp
cmpl
adc
xor
cmp
outsl
test
ds
ds
ds
ds
jg
mov
add
ds
ds
ds
ds
aas
pop
aas
and
adc
aas
sub
xor
aaa
into
push
fs
fbld
jbe
jnp
cmpl
movsb
aas
mov
sarl
testb
add
jl
xchg
cmpsb
add
xor
sbb
inc
sub
xor
mov
sbb
push
inc
xor
jl
mov
xor
xor
inc
add
sarl
les
enter
push
inc
rolb
int
mov
sub
xor
pushl
mov
pushf
xor
xor
xor
xor
xor
xor
xor
xor
dec
enter
mov
ss
mov
ss
add
ja
pushl
sbb
add
push
add
sub
das
cmp
add
pop
cmp
ljmp
icebp
pop
add
cmp
xor
xor
cmp
mov
cmp
cmp
pop
cmp
mov
addb
cmp
mov
xor
inc
js
outsb
jo
cli
outsb
cmp
idivb
mov
cmp
cmp
cmp
cld
push
shrl
push
outsb
ja
jle
test
mov
or
mov
iret
cmp
cld
cmp
mov
inc
ds
ds
ds
incl
inc
push
cwtl
xchg
xor
pushl
push
xor
xor
xor
xor
push
xor
mov
fwait
pusha
xor
xor
xor
xor
xor
jg
inc
lds
xor
xor
outsb
xor
loopne
repnz
push
pushl
dec
ss
bound
xorl
ss
ss
pop
add
push
or
ss
clc
ss
ss
mov
or
push
push
xor
aaa
xorb
stos
mov
shrb
dec
cmp
jecxz
sbb
sbb
pop
es
or
cmp
dec
ljmp
push
in
jmp
repz
cmp
sbb
add
and
es
xor
jle
cmp
cmp
pop
push
cmp
or
cmp
jle
xchg
mov
xchg
dec
lahf
cmp
fnsave
fcmovb
cmp
jmp
cmp
cmp
cmp
cmp
cmp
cmp
push
sbb
fnsave
push
fs
cltd
push
jecxz
xor
insl
pop
rcrl
sarl
adc
xor
and
aas
mov
dec
icebp
mov
fdivrl
xor
into
xor
push
jg
push
pushl
xchg
xor
xor
xor
xor
xor
xor
jo
in
pop
xor
xor
push
or
cmp
insb
dec
lds
and
xor
xor
adc
push
ss
ss
arpl
stos
add
pop
enter
out
ss
xor
aaa
jne
mov
decb
sbb
sub
xor
cmp
cmp
sbb
cmp
cmp
cmp
aaa
or
cmp
cmp
or
sub
cmp
arpl
outsb
lret
sbb
ret
cmp
cmp
mov
in
inc
out
ds
or
push
jo
mov
pop
lret
mov
and
push
fbstp
divb
data16
jg
xchg
cs
xor
xor
xor
xor
fnsave
mov
mov
xor
xor
xor
xor
xor
xor
xor
xlat
xor
ja
mov
inc
xor
mov
sbb
sub
mov
xor
aaa
jb
call
int
inc
cmp
push
cmp
mov
ljmp
std
cmp
inc
ds
imul
sbb
out
ds
aas
lods
sbb
andl
sbb
mov
mov
sbb
push
cld
xor
out
sub
lret
jo
cmp
dec
cmp
xchg
mov
stos
cmp
sbb
ljmp
and
xor
xor
js
cmpsb
ss
cli
ljmp
daa
jp
aaa
ss
aaa
dec
aaa
adc
jecxz
aaa
divb
scas
pop
popa
icebp
pop
pusha
out
xor
xor
and
push
je
js
orb
call
test
pop
jp
cmp
ret
push
dec
sbb
adc
mov
mov
mov
call
cmp
xor
rolb
bound
lds
insb
xchg
rorl
jecxz
je
jl
or
sub
ret
sub
xor
loopne
call
xor
popa
cld
mov
or
adc
adc
sbb
sbb
and
dec
sbb
sub
sub
inc
xor
push
xchg
pop
xor
pusha
xor
xor
decl
sbb
xor
xor
pop
xor
xchg
xor
add
cmp
repnz
mov
sar
cmp
fadds
js
dec
sbb
mov
xor
jp
cmp
std
push
cmp
push
xor
outsb
jo
mov
mov
mov
cmp
dec
shl
loopne
mov
mov
fmull
sbbl
cwtl
out
shl
das
mov
xor
xor
xor
xor
push
insb
xor
xor
or
cwtl
xor
xor
add
lahf
mov
xor
pop
xor
xorb
cmpsb
sbb
or
adc
jb
xor
shrl
fcompl
pop
cld
jg
in
call
xor
xor
inc
add
aas
pop
add
push
sbb
xor
incl
cmp
inc
xor
xor
xor
xor
xor
aas
cmp
mov
xor
xor
xor
xor
das
cli
loopne
mov
xchg
scas
pushf
xor
bound
xor
push
pop
pop
cld
xor
xor
xor
into
shlb
int3
addb
inc
mov
xor
or
test
lods
sub
inc
aaa
mov
jecxz
aaa
mov
xor
sbbb
cmp
cmp
fdivr
dec
adc
cmpl
pusha
cwtl
iret
pop
add
add
add
mov
add
or
pop
pop
push
or
or
or
or
or
xchg
mov
adc
adc
push
adc
in
jbe
filds
or
pop
sbb
adc
adc
adc
add
data16
jl
imul
adc
pop
adc
inc
add
pusha
add
mov
add
sahf
add
add
ljmp
inc
mov
jb
xchg
je
shrb
ds
decl
add
push
adc
pop
and
xor
inc
mov
adc
xchg
std
lock
bound
js
sbb
xchg
and
and
mov
inc
sub
xchg
and
fwait
add
test
ret
inc
or
adc
jns
rcrb
xorl
push
scas
pushf
push
or
add
add
jo
add
pop
scas
cmp
outsb
decb
lods
adc
push
adc
pop
popa
jno
and
adc
and
or
push
lock
xor
and
loope
icebp
mov
mov
add
xorb
scas
fiaddl
or
js
stos
or
dec
jo
or
outsl
clc
mov
sbb
cli
and
mov
inc
jnp
test
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
cli
pop
mov
pop
and
push
stc
or
xchg
jg
or
ljmp
insb
sub
addr16
out
or
push
push
xchg
add
repnz
inc
lock
ljmp
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
cmp
mov
push
pop
mov
pop
pop
mov
popl
movb
xchg
lcall
scas
adc
mov
xor
lods
scas
xchg
test
aam
and
dec
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
mov
aas
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
incl
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
pop
dec
std
rolb
out
or
cld
push
in
ljmp
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
cmp
mov
jmp
sbb
add
mov
dec
out
pop
jb
mov
or
push
mov
xor
dec
sub
pop
mov
jl
rorl
adc
in
call
stos
hlt
push
add
stc
loope
mov
sar
andl
mov
icebp
testb
mov
incl
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
ud0
mov
mov
dec
adc
push
lock
lods
jp
mov
aad
aaa
sbb
into
fcomps
sbb
sbbl
into
cmp
mov
loopne
cli
adc
aaa
xchg
in
add
inc
adc
out
dec
jbe
dec
fisttpll
out
aas
std
cli
push
push
pushl
inc
cmp
sub
inc
scas
inc
mov
jg
je,pn
decl
pop
imul
mov
mov
inc
es
gs
jns
enter
or
push
pusha
lcall
jae
inc
cmp
sti
punpckhbw
cmpsb
orb
mov
mov
js,pn
jmp
xor
pop
clc
pop
hlt
lret
movsb
add
mov
pop
jg
gs
std
xorb
jg
aad
cmp
outsl
adc
ret
das
pop
pop
pop
shlb
out
sarb
sbbl
mov
or
sarb
std
pop
les
cli
mov
mov
incl
add
pop
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
in
call
imul
pusha
adc
and
sbb
xchg
jo
and
out
test
jae
push
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
clc
push
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
jg,pn
pushl
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
ljmp
sbb
jg
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
in
ljmp
test
mov
mov
cmp
xchg
mov
cwtl
pop
call
xchg
and
add
jae
shrb
shlb
out
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
loopne
idiv
adc
and
lahf
fmull
jmp
xor
enter
jecxz
scas
sub
in
pop
mov
sub
testb
incb
fisubrl
aas
mov
or
jle
in
push
inc
or
pop
jg
add
sti
mov
jg
mov
aad
test
mov
mov
in
in
aas
iret
push
jbe
push
sbb
stos
icebp
pop
incb
mov
sub
push
inc
jecxz
sbb
sarl
mov
lods
loopne
and
clc
xorl
mov
imul
push
jle
dec
push
in
aas
mov
fsubrl
mov
js
lock
and
add
push
clc
xchg
pushf
mov
xchg
push
or
and
mov
adc
inc
aas
push
xchg
jg
rcrl
rolb
pop
inc
jb
fistpl
adc
call
jg
jge
pop
pop
nop
mov
inc
sti
arpl
daa
std
or
dec
ds
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
fsub
pushl
fsubr
fistps
lds
fidivrl
jg
stos
clc
mov
cmp
out
fidivrl
xor
lahf
les
pop
stc
sbb
sbb
cld
addl
sbb
loop
in
stc
mov
lahf
outsl
int3
push
sbb
pop
lods
pop
test
bound
pop
outsl
xchg
incl
loop
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
loopne
fcomip
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
mov
pop
shl
cld
mov
adc
stos
inc
mov
loopne
shrb
rcl
jg
adc
xor
pop
rcrb
dec
mov
gs
pushf
lea
jp
jnp
jecxz
adc
incl
inc
lds
push
pop
adc
imul
or
inc
pop
xor
rorb
mov
lcall
and
add
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
loope
mov
into
test
xchg
movsb
insb
or
and
xchg
fidivrs
push
jnp
add
insb
test
aas
repz
mov
outsl
lock
in
jmp
out
sbb
aaa
clc
push
std
mov
jl
icebp
or
out
jne
or
cmc
mov
push
mov
fsubrp
xchg
clc
decl
enter
fcmovb
inc
adc
inc
loopne
test
out
rolb
mov
hlt
mov
or
or
dec
ss
mov
movsb
or
repnz
mov
loopne
xchg
imul
cmpsl
lret
pop
in
cmp
jmp
adc
clc
adc
jmp
hlt
dec
mov
jmp
sbb
xlat
inc
aas
mov
jg
mov
incl
addr16
sbb
cld
daa
jp
std
adc
ljmp
mov
ret
nop
cmp
das
incb
add
les
div
cld
idivl
fisubrl
scas
stc
lahf
loope
jae
jmp
shrl
je
jge
paddsw
fbstp
out
xchg
add
out
icebp
mov
fndisi(8087
fisttps
sti
mov
fists
enter
push
and
das
jge
fisubrs
out
cmp
call
mov
das
js
iret
decb
adc
mov
and
xchg
adc
call
enter
popf
dec
or
add
cmp
int
add
push
enter
pop
aaa
std
fisttps
testb
cld
jg
xchg
fimull
cmp
aas
icebp
ret
ror
sbb
aaa
pushf
jecxz
and
adc
mov
mov
cld
push
sub
mov
pop
clc
loope
loope
mov
lahf
pusha
push
dec
add
xlat
shrl
fimull
xchg
fldenv
iret
fdivrl
dec
fists
cmp
repz
loopne
pop
gs
sub
sti
push
sarl
pop
out
jg
jno
ret
dec
push
dec
inc
cmp
incl
pop
inc
sbb
inc
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
sbb
mov
ds
inc
mov
in
sbb
xchg
imul
mov
outsl
jmp
std
mov
addb
faddl
mov
sbb
outsl
pushl
inc
pop
add
pop
stc
push
dec
out
fstpt
mov
add
popf
pop
push
add
fsts
dec
or
pop
inc
leave
add
sti
push
sti
pop
inc
and
xchg
lcall
mov
mov
iret
and
ljmp
cmp
ss
scas
jb
fs
daa
mov
lcall
daa
je
pushf
dec
push
loopne
add
pop
repz
out
data16
mov
loope
adc
jo
mov
iret
push
cwtl
mov
je
inc
mov
orb
mov
xor
lret
and
rorb
mov
or
push
les
push
xchg
in
test
mov
fs
fs
or
dec
adc
sahf
andl
inc
popf
jmp
push
mov
jns
xchg
das
int
adc
test
bt
fdivs
fstp
out
xchg
aam
jmp
mov
shr
lret
out
rolb
sti
loop
das
jo
popa
pop
test
adc
stc
lock
incl
sbb
cwtl
ja
add
sbb
cmp
cmpsl
sarl
in
loope
leave
cli
incl
push
sub
adc
pop
adc
loop
call
fdivs
mov
xchg
data16
data16
pop
pop
pop
or
or
xor
mov
mov
or
scas
std
pop
loopne
sti
and
subb
lock
pushl
push
leave
add
out
in
movsl
fbstp
dec
aam
or
dec
gs
dec
xor
fldt
push
les
negb
test
inc
adc
stos
movsb
mov
decl
sub
nop
clc
outsl
movsb
fisttpl
xchg
fiadds
mov
scas
adcb
cmp
call
pop
testb
cmp
add
jo
loop
lock
ja
dec
mov
push
roll
decl
mov
loopne
xor
cmc
insl
test
aam
lods
les
mov
decl
or
loop
icebp
dec
sarb
movsl
insl
shl
mov
shll
lcall
mov
jmp
fldcw
lret
push
subl
pushl
mov
lahf
adc
xchg
cmpsb
ljmp
clc
out
loope
popa
test
mov
push
mov
jmp
mov
in
lods
test
and
adc
cmpsl
cmp
std
mov
imul
mov
icebp
xor
pusha
daa
xchg
out
and
arpl
mov
adc
cltd
push
frstor
or
adc
add
pop
sub
ljmp
out
cs
lds
pushl
scas
ficompl
movsl
icebp
pushf
loopne
inc
adc
jge
xor
or
inc
hlt
and
mov
lcall
xchg
cmp
cmp
punpckhbw
jp
lcall
cli
pop
sub
cmp
into
sub
rcll
push
lock
test
movsb
jmp
cli
lea
imul
je
imul
jbe
mov
cltd
push
pop
lods
mov
and
in
out
jmp
jne
cld
inc
pop
and
cld
in
jno
mov
mov
xchg
clc
fdivl
call
jp
and
sbb
xor
int
push
test
inc
fs
ret
cmc
call
rclb
fsubs
outsl
cmp
loop
mov
and
repnz
xorb
shrl
lods
mov
incl
xchg
inc
jg
xor
and
lods
push
in
lret
jb
das
xor
fwait
push
inc
clc
ljmp
inc
imul
test
mov
pushf
bound
lock
dec
cs
call
mov
data16
push
out
and
push
mov
jmp
ss
adc
lods
pop
std
fdivl
lods
pushf
pop
pcmpgtb
push
mov
iret
push
jmp
insb
inc
clc
call
jmp
popa
iret
mov
xchg
int3
cwtl
insl
pusha
and
push
lret
mov
pop
enter
es
jae
in
xchg
mov
inc
addr16
pop
int
mov
push
push
push
data16
lahf
icebp
sbbb
adc
movsl
push
out
push
or
lods
fucomp
cmp
out
add
lcall
xor
push
leave
push
xor
xlat
lcall
jnp
ret
add
sar
ljmp
int3
add
out
xor
nop
aam
cmp
aam
clc
fisubl
inc
scas
xor
negb
fcompl
sub
and
sbb
lods
adc
cmp
pop
std
jmp
dec
mov
scas
icebp
clc
ljmp
xlat
xlat
mov
repz
test
es
or
pushf
or
lods
mov
pop
gs
mov
sub
dec
mov
hlt
pop
jo
sub
decl
sbb
enter
push
xchg
pop
lds
test
cmp
rorb
mov
lret
das
push
out
push
addb
outsb
out
mov
loope
into
dec
or
hlt
jo
in
call
mov
and
jg
sbb
inc
outsl
jb
cmp
imull
and
imul
dec
jnp
mov
filds
sbb
lret
cmpsl
movsl
add
adc
inc
addr16
ret
push
jns
lock
inc
mov
iret
stos
xor
inc
arpl
xchg
inc
push
mov
jo
pop
fcomps
fisttps
mov
sbb
sar
cmp
pop
fisttps
push
stc
mov
cli
incl
sbb
stos
ss
or
lcall
jmp
rol
aad
test
in
out
outsl
in
xchg
repnz
jo
aad
jb
jne
js
icebp
lcall
in
dec
sbbb
and
dec
sub
or
dec
ja
popa
mov
scas
subl
xchg
fistps
daa
pop
xchg
sbb
pop
pop
stos
ljmp
fisttpl
jo
jl
repnz
rol
lods
push
test
mov
mov
inc
lcall
stos
pushl
push
pmuludq
push
xchg
movsl
jns
inc
cli
subl
out
sar
jns
seto
inc
pop
mov
aad
and
mov
xor
sbb
sbb
mov
imul
dec
inc
js
fwait
mov
lahf
fs
adc
insb
pop
add
mov
mov
sbb
stos
pop
cmpsb
push
aam
push
imulb
mov
out
cs
xchg
lea
and
int
and
push
and
or
ljmp
push
push
in
mov
mov
jmp
sti
xchg
shl
loopne
jne
jns
mov
jg
cld
pop
adc
cs
mov
dec
icebp
pushl
or
bnd
pop
call
lds
xchg
inc
push
rclb
or
gs
fwait
ljmp
mov
or
add
jge
pop
and
sub
add
test
sub
fldl
jecxz
rcr
mov
ffreep
xchg
sarb
das
rcrb
fcmove
pop
pop
jl
lock
orb
push
mov
in
incl
cmp
or
push
sub
push
andl
cmc
push
mov
jmp
jle
lds
imul
and
jns
mov
aad
data16
stc
fisttpll
jl
xchg
decl
dec
adc
xor
xchg
std
in
mov
out
jns
pop
test
jmp
decl
adc
sbb
mov
add
scas
pop
les
and
mov
loop
ds
in
daa
push
sub
into
add
add
adc
sbb
mov
out
dec
push
sub
adc
aaa
and
cmpsl
and
jne
dec
mov
mov
add
out
jmp
pop
push
pop
mov
out
fadd
jp
pop
xchg
inc
mov
shlb
pop
jns
lcall
and
ljmp
adcl
sbb
shrl
and
lcall
xchg
data16
and
mov
mov
aas
push
pop
das
adc
or
add
push
sbb
jmp
ss
dec
dec
pop
and
shrl
fdivl
in
pop
scas
jo
xor
lahf
inc
ljmp
and
or
dec
pusha
dec
jae
push
daa
dec
clc
xchg
lret
mov
mov
mov
adcb
insb
mov
fstps
sar
push
pusha
add
es
pop
cmpsb
or
mov
insb
push
ljmp
mul
push
fisttpll
das
imul
inc
sbb
pushl
or
mov
pop
rol
imul
sbb
xchg
pushl
cmp
jmp
clc
addr16
imul
popa
movups
and
sbb
xor
cmp
movsb
nop
dec
jp
dec
xor
fldt
outsb
mov
jmp
out
xor
or
imul
adc
or
lea
add
decl
adc
mov
jmp
addb
jmp
in
xchg
and
jbe
std
or
adc
imul
negl
inc
scas
mov
fistl
and
dec
sub
xor
fdivs
add
pop
and
call
lcall
test
push
jle
mov
or
popf
sub
je
adcb
aam
or
in
fucomi
push
repz
mov
in
je
pushl
jo
cmpsl
push
mov
xor
push
jne
out
cmp
lcall
call
idiv
xchg
mov
sub
mov
lcall
movsb
insb
out
xchg
pusha
or
push
cld
out
jbe
jnp
sbb
jge
movsl
jmp
jmp
aas
sub
push
lock
leave
ljmp
and
hlt
hlt
scas
and
movsb
adc
rcrl
ljmp
enter
pop
sub
pushf
sbb
lahf
inc
nopl
bswap
dec
call
lea
jbe
in
and
bnd
cmpb
out
ret
xchg
xchg
sub
pushl
mov
les
mov
mov
mov
push
push
orb
in
in
stc
sub
xor
cmp
mov
dec
dec
add
call
test
cmpl
ljmp
shl
adc
inc
shlb
mov
icebp
xor
cmp
xchg
incl
shlb
sti
andnps
sub
inc
pop
or
xor
stc
and
jmp
cmc
out
cld
call
push
pop
clc
add
call
xor
or
mov
aaa
mov
dec
inc
cmp
mov
mov
gs
incl
popf
scas
fwait
xchg
push
pop
mov
push
cld
incl
mov
les
xchg
ja
or
mov
inc
sti
sbb
lcall
mov
jb
mov
cmpsb
xor
mov
push
pushf
cmpb
jb
ljmp
xlat
jo
sbb
mov
jnp
sub
mov
mov
cmp
mov
lcall
cmp
hlt
and
cmp
les
es
push
pop
inc
insb
and
mov
pushl
stc
xchg
push
mov
or
xchg
loope
jae
mov
mov
push
lahf
or
ret
call
mov
lret
fiaddl
cs
js
xchg
daa
add
xor
dec
enter
mov
sti
sahf
pop
adc
outsb
daa
pop
sub
pop
je
pop
inc
fwait
jg
std
cli
insl
dec
push
cld
mov
filds
add
hlt
xchg
or
pop
mov
add
pop
pop
push
cmp
sbb
jns
sbb
push
hlt
push
mov
daa
sbb
and
pop
mov
pop
cli
decl
sahf
cmpsl
stos
push
in
mov
xchg
cltd
fidivs
jle
outsl
sahf
mov
ljmp
in
and
or
fs
xchg
jmp
pop
loope
mull
push
sub
clc
ret
and
addr16
test
pushf
std
in
gs
lds
mov
sub
jmp
sub
dec
sahf
fsubrs
scas
inc
outsl
fwait
mov
roll
int3
dec
adc
cmp
lret
and
in
in
imul
adc
ss
pop
inc
dec
test
or
inc
loop
mov
mov
idivb
repnz
ljmp
lcall
pop
les
lods
fwait
bound
xor
mov
mov
in
mov
sahf
xchg
hlt
nop
ret
dec
dec
int3
lock
fisubl
push
xor
in
outsb
std
push
insb
cmp
loopne
cmp
xchg
pop
or
loopne
mov
jae
cmpsb
mov
test
popf
add
push
ljmp
gs
lods
dec
mov
sbb
push
push
xor
dec
xor
jp
mov
in
pop
jg
shlb
mov
cmp
jmp
pushw
into
out
adc
push
xor
das
cli
push
dec
lea
sub
mov
in
mov
int
or
call
movntps
in
sbb
xabort
sbbb
mov
fiaddl
jo
xor
lcall
std
xchg
push
xor
mov
xchg
fcomi
sub
inc
sti
mov
sahf
gs
lcall
ljmp
mov
xor
cmc
xor
cmp
cmpsb
sbb
ljmp
xchg
push
and
fcoml
aas
std
xchg
adc
js
inc
and
ljmp
daa
in
stos
popa
out
pop
cmp
sub
jae
fwait
cld
movsb
sbb
jno
add
jmp
and
jmp
repz
mov
rcrb
jmp
xchg
daa
xor
je
mov
cwtl
xor
test
mov
mov
push
fwait
sbb
or
xor
mov
in
sti
or
xchg
popa
push
shll
lods
shl
pusha
fnstcw
inc
mov
lcall
lcall
loop
stos
mov
sub
repnz
cli
in
mov
fmull
stos
lea
and
ret
sti
fnstsw
fprem1
pop
or
clc
std
out
cs
inc
or
in
dec
and
mov
and
jno
rorl
stc
cld
pushl
imul
adc
mov
pop
in
imul
cltd
push
jns
cmp
fdivrp
outsl
mov
push
push
cwtl
xchg
add
test
leave
dec
pop
or
fisubrs
xchg
mov
pusha
ds
stc
dec
mov
call
cmp
rcl
mov
repnz
insl
fldl
nop
xor
rorb
jmp
dec
adc
mov
add
mulb
push
sub
fnsave
add
stc
aaa
pop
fisubl
sub
incl
into
xor
or
mov
pop
dec
ret
jg
aas
loopne
xlat
mov
lcall
aas
dec
inc
push
add
xlat
mov
inc
aaa
in
and
aas
data16
mov
fldt
test
add
jmp
jbe
aam
cmp
call
pop
sub
ret
lods
sbb
and
cmp
popf
mov
popf
lcall
mov
cli
or
jne
pop
add
mov
mov
pop
sbb
jp
or
fs
sbb
jge
rcrl
push
inc
daa
xor
jo
cld
cmp
clc
call
pop
out
pop
pop
add
and
in
xchg
lcall
insl
loopne
mov
repz
rolb
mov
mov
pop
or
and
fnstsw
pop
jecxz
outsl
popa
sbb
insb
cmp
into
shll
lods
push
stos
sar
mov
in
cmpsb
ljmp
xchg
lock
cmp
inc
je
dec
stos
cld
ljmp
jb
mov
pushf
or
pushl
fucom
js
lods
imul
push
mov
fs
out
jae
hlt
lret
mov
andb
cltd
mov
loop
mov
mov
fsubs
jle
aas
or
lock
outsw
xor
or
out
clc
pushl
call
inc
jb
es
rcrl
cltd
add
dec
add
cmpsb
lcall
mov
addr16
mov
sahf
leave
pushl
in
testl
insb
out
popf
inc
or
lea
sbb
scas
movsl
cmovne
fbstp
stos
or
add
mov
pop
mov
pusha
dec
add
stos
dec
adc
jg
test
mov
cmpsb
pop
arpl
lahf
mov
test
mov
out
jnp
inc
mov
decl
mov
jne
pop
stc
cmc
mov
lods
in
test
aad
push
enter
je
insb
incl
ror
push
mov
jno
gs
imul
into
insb
addr16
dec
scas
sub
pushl
jg
jb
cmpsl
in
fldt
xchg
sub
test
push
jb
dec
mov
and
add
mov
xlat
dec
jge
jo
cwtl
cwtl
lea
ss
mov
xchg
int3
out
jnp
ret
arpl
xchg
jg
stos
insb
cmc
sbb
clc
popf
cmp
addr16
sbb
push
add
lret
jmp
aas
outsl
cmp
inc
mov
pop
test
push
outsb
and
rorb
dec
inc
adc
ljmp
js
push
jns
xchg
test
popa
cmp
in
lods
loopne
mov
mov
decl
and
mov
jno
mov
jnp
mov
xchg
mov
call
movsb
pop
add
orl
scas
jp
dec
popf
mov
fs
xor
int3
and
lods
mov
jg
sahf
and
leave
loopne
hlt
xlat
mov
stc
dec
hlt
lock
addr16
xor
decl
cmc
push
in
fwait
sub
dec
sub
rep
xchg
cld
lods
cmp
jl
and
cmpsl
imul
add
stos
inc
test
popf
dec
push
aas
xchg
or
imul
xchg
cmpl
push
rcrb
inc
ljmp
dec
mov
mov
xor
lret
mov
insb
adc
mov
orb
sbb
decl
push
out
mov
lods
arpl
and
add
pushl
test
fadds
sbb
mov
scas
inc
cmpsl
out
pop
dec
jmp
incl
or
andb
pop
popa
ret
push
ds
out
or
sub
sub
jle
xchg
pop
into
push
xor
stc
jae
movsb
inc
adc
or
cmpl
call
mov
pop
adc
test
outsl
mov
xchg
aaa
outsb
ljmp
fwait
cmpsb
push
scas
rcrl
lcall
loope
js
dec
and
push
mov
pop
out
add
test
push
call
stc
icebp
mov
pusha
fdiv
stos
cmpsl
clc
out
loop
push
iret
jne
nop
jnp
or
mov
mov
call
adcb
jnp
push
test
popf
pop
pop
lods
pop
leave
push
xchg
jb
sub
inc
shrl
push
test
inc
jae
xor
push
push
in
mov
movsb
xchg
jb
jne
decl
pusha
xor
sbb
scas
pop
test
push
add
gs
cmpl
decl
imul
xor
mov
lahf
pop
push
mov
into
sbb
dec
sbb
stos
jg
add
mov
push
jp
mov
inc
xor
inc
inc
in
or
pop
mov
push
sub
lahf
push
xor
fcoms
xchg
addr16
xor
jmp
dec
sub
psllq
das
pop
mov
int3
das
xchg
inc
push
in
pop
cmp
inc
mov
ljmp
enter
pop
loop
lahf
mov
sti
mov
into
mull
mov
xor
shr
ljmp
daa
mov
jge
iret
sbb
ja
pop
aas
jp
nop
push
pop
pop
add
mov
incl
js
xchg
loop
adc
sarb
pop
jae
lret
imul
aaa
cld
add
or
pop
lcall
out
ljmp
std
popf
insl
push
dec
fwait
movsb
sbb
lock
addr16
popa
cld
add
ljmp
jns
cs
lcall
test
lock
mov
sarb
xchg
ror
fisttps
adc
iret
cmp
insb
mov
mov
in
inc
cli
fcomip
lcall
mov
jmp
out
inc
mov
aad
cmp
dec
mov
jmp
mov
adc
cld
mov
daa
loopne
cmp
jno
pushl
sub
int3
jne
cmp
stos
or
out
repz
mov
pop
inc
mov
data16
fs
pushl
popf
dec
inc
rcll
pop
mov
mov
or
pop
je
shrb
cli
ljmp
jo
cmpsl
sahf
icebp
and
movsb
nop
cwtl
std
out
push
jnp
aas
xchg
xchg
push
dec
repnz
push
cli
rolb
ror
out
stos
jmp
scas
loop
mov
push
mov
ljmp
jbe
inc
lds
lods
cmp
or
pop
lock
inc
add
add
mov
fwait
mov
ja
je
cmp
inc
mov
xchg
adc
idivb
inc
push
push
xor
push
es
aam
int3
sub
cmp
jp
sub
ds
decl
sbb
repnz
leave
push
movb
cmpsl
lret
xchg
adc
decl
pop
inc
lahf
mov
or
push
vpminub
js
mov
out
sub
dec
add
negl
bound
int3
dec
dec
mov
and
js
push
or
pop
mov
xchg
inc
dec
stos
in
adcb
dec
adcl
imul
decl
pop
iret
pop
movsb
inc
push
adc
dec
sahf
xlat
lds
cli
adc
and
into
ja
test
push
hlt
in
adc
mov
mov
push
enter
jl
jecxz
mov
adc
cmp
dec
nop
adc
decl
out
stos
xor
xchg
push
mov
push
repz
scas
inc
sub
sub
adc
in
inc
mov
jg
or
dec
les
xorl
mov
incl
test
mov
ret
scas
cmp
xor
xor
pusha
xchg
movsb
inc
cld
decl
fstpl
xchg
mov
push
in
fldenv
push
jnp
das
addr16
xor
lcall
mov
xchg
roll
mov
in
xchg
out
xor
jmp
cmp
dec
aad
ja
xlat
push
test
lcall
push
lret
lock
push
push
mov
pushl
add
ss
sahf
ret
movsl
repz
leave
xor
ljmp
cmp
mov
fisubrl
xchg
ffreep
mov
pop
rcrb
xchg
icebp
pushl
stc
cmpsl
repnz
imull
push
adc
stos
fucom
mov
fistps
mov
sub
imul
in
cmp
pop
aam
decl
pop
push
mov
pusha
xchg
lea
test
push
push
mov
xchg
scas
clc
lcall
cli
fildll
cmp
pushf
adc
mov
nop
mov
sub
inc
addr16
lcall
outsl
repnz
ficompl
in
fdivrl
add
jne
push
sbb
call
enter
adc
addr16
pop
fbld
mov
push
das
aas
pusha
inc
lcall
ljmp
dec
shl
mov
dec
in
fisttpl
add
mov
repz
push
std
decl
repnz
sub
into
lahf
xor
mov
add
lea
inc
adc
mov
icebp
imul
repnz
lock
cmp
cmpb
hlt
pop
test
je
dec
mov
jge
xor
pop
or
inc
xchg
das
sub
inc
out
loopne
xchg
cmp
xor
clc
mulb
push
mov
call
scas
mov
cmp
cmc
pop
in
pop
jns
cs
cmp
push
rcrb
jmp
pushl
ficoml
add
xchg
lods
add
jmp
add
xchg
scas
jmp
inc
add
lahf
sbb
movsl
lahf
std
dec
sbb
mov
arpl
out
and
mov
or
fnsave
lret
add
mov
push
cmp
mov
call
fsubr
test
iret
sub
cmpsb
mov
sbb
jg
xlat
sub
or
and
jp
jno
sti
pop
cli
decl
outsl
xchg
mov
loopne
xor
mov
test
ljmp
out
mov
mov
or
mov
test
and
xchg
lcall
pop
aaa
call
and
mov
popa
sahf
mov
shlb
and
add
pushl
aad
inc
loope
imul
cmp
outsb
out
jecxz
fsubl
lret
add
sbb
jo
dec
call
mov
lret
decl
rorb
jb
stos
and
bound
and
mov
sbbb
pop
push
in
inc
aas
ror
mov
sbb
int
in
fldl
inc
imul
nop
loope
inc
add
adc
sbb
or
repnz
stc
data16
dec
pop
cs
cmpb
xchg
xor
std
cltd
mov
ljmp
cmc
jnp
xor
add
fsubl
mov
ljmp
ljmp
outsb
repnz
ss
or
pop
into
mov
and
incl
xchg
addl
dec
mov
daa
adc
into
dec
mov
es
fwait
pushl
call
jp
scas
add
pop
or
xor
shrb
mov
mov
cmp
bound
xchg
cwtl
ret
xor
jmp
insb
jbe
imul
adc
and
fcoml
and
test
icebp
repz
jmp
mov
lock
vmovupd
lahf
andb
adc
scas
sub
jmp
mov
rcl
dec
jg
aaa
mov
and
xor
sbb
lcall
dec
cmp
and
rorb
cltd
xchg
rorb
xchg
sub
mov
clc
out
cli
lcall
rcll
xchg
jnp
jo
or
xor
push
lock
pop
icebp
fcomps
enter
aas
mov
xor
dec
dec
addps
lcall
adc
sub
sub
mov
dec
repnz
cmp
scas
mov
icebp
movsb
or
loop
ljmp
in
cmp
into
incl
or
adc
jmp
jne
add
lcall
jmp
mov
xchg
sti
fwait
jbe
push
mov
out
mov
add
pop
mov
jae
hlt
cmc
insb
stc
jno
jo
adc
push
push
dec
mov
dec
dec
dec
mov
lcall
mov
mov
jne
int3
stos
jb
xlat
sub
cmpsl
sub
sub
fcmovnbe
outsb
fsubs
popa
jecxz
cmp
call
lret
xchg
mov
lahf
cmp
jmp
int3
dec
cs
int
or
and
lock
push
inc
add
rcr
mov
sub
pushf
and
dec
sbb
incl
rorb
xor
ret
sub
mov
jne
and
mov
and
push
cmp
pop
inc
jle
sbb
movsl
sbb
clc
inc
gs
add
xchg
mov
mov
std
sub
jmp
in
decl
repnz
andps
pop
or
inc
dec
test
xor
mov
jmp
push
cltd
jle
pop
sbb
icebp
mov
sti
sub
movsb
and
fcompl
or
ljmp
jbe
int3
xchg
faddl
mov
imul
leave
call
sub
clc
imul
fwait
mov
jmp
sbb
call
stos
stos
popa
std
mov
movsl
loopne
cmp
mov
pushf
bound
lods
mov
pushl
fwait
sbb
int
mov
xor
push
daa
je
stc
add
cs
sbb
and
movsb
mov
pop
cmp
pop
cltd
and
push
dec
or
sub
sbb
mov
sbbl
clc
pushf
push
gs
lcall
mov
sub
jg
popf
lock
jb
rcl
shll
aaa
xor
mov
rcrb
or
dec
inc
aam
pop
mov
mov
mov
mov
cmp
add
fsqrt
into
dec
std
icebp
jecxz
lcall
incl
shrb
mov
in
push
sbb
sahf
cmp
imul
mov
lcall
mov
xor
jb
jg
add
adc
gs
add
out
out
cli
pop
std
inc
andl
out
sub
xchg
push
mov
jbe
mov
idiv
fldpi
cs
out
xor
xor
in
dec
repz
cwtl
sub
aad
mov
mov
shrl
xor
std
sarl
in
lock
cmp
pop
call
scas
push
pusha
out
pop
push
ret
pusha
jae
iret
sbb
lods
and
imul
cmp
jecxz
xchg
sub
es
ret
sbb
mov
lds
sbb
sbb
lcall
mov
dec
test
pop
lcall
mov
lcall
push
dec
lods
scas
call
cmpsl
sbb
call
ret
pushf
dec
jl
dec
pop
pop
mov
and
sub
out
cli
jp
cli
inc
xchg
nop
and
test
dec
je
in
jnp
int3
mov
cmc
decl
add
and
call
jnp
int3
xlat
arpl
out
fbstp
jae
fucomi
into
or
or
lds
push
es
mov
scas
sub
adc
mov
jmp
cmc
jmp
pop
dec
pop
test
pop
out
push
or
pop
fistpll
movsb
loop
cmp
scas
dec
call
shll
jns
mov
jle
int3
jo
imul
sbb
or
mov
cmp
insl
ljmp
xchg
push
adc
incb
mov
fisttps
inc
or
hlt
aaa
loope
jb
ljmp
pop
std
rolb
cwtl
insb
les
outsb
js
push
mov
pusha
andb
and
push
mov
pop
dec
pushl
jne
add
xorb
inc
js
dec
fcmovnu
push
sbb
movsb
sub
push
jle
add
popa
sub
cmpsl
gs
incl
xchg
adc
daa
ret
in
out
or
cmpsl
mov
push
push
lcall
test
jbe
pop
std
cld
inc
mov
fbstp
fs
sub
adc
incl
pop
mov
xor
stos
lea
decl
push
pop
clc
xchg
add
std
dec
mov
test
push
push
scas
cltd
out
das
daa
inc
test
call
loopne
adcl
jl
ljmp
mov
and
dec
sub
stos
mov
jb
cmpsl
insb
mov
lock
fcomp
jl
je
pop
arpl
jmp
mov
and
mov
outsl
insl
pop
ja
int
insl
and
dec
testl
cbtw
roll
jmp
stos
cmpsl
cmpsb
add
fwait
push
xor
xor
aas
popa
fnstsw
mov
mov
lcall
mov
sub
iret
incl
dec
in
sbb
push
sahf
jmp
decb
mov
fwait
xor
pushl
push
inc
rcrb
stos
ret
xchg
int3
inc
xorb
out
mov
lds
adc
std
pushl
fists
rcrl
les
add
jo
xor
lcall
or
add
fwait
dec
and
push
aaa
mov
ret
jne
ds
loop
ss
out
movsb
imul
pushl
fisttps
sbb
addr16
imul
and
inc
clc
inc
pop
ss
decl
jecxz
push
mov
mov
jbe
jp
out
aad
cs
out
call
lock
push
xor
xor
inc
inc
push
loopne
xchg
in
and
cmp
lahf
ror
mov
lock
cmc
stos
mov
jmp
sbb
movsb
ja
and
je
std
ljmp
test
xchg
roll
pop
cmp
push
adc
in
xchg
mov
jg
notl
pop
icebp
inc
sbb
aaa
sub
jecxz
idivb
push
mov
iret
ljmp
in
fldl
adc
mov
lret
xchg
fisubrl
jns
mov
jg
mov
inc
out
mov
cmp
pushf
push
popa
and
incl
and
aas
sbb
push
lret
fildl
repnz
lea
fs
clc
push
mov
ret
testb
xlat
mov
add
mov
add
jmp
and
rcrl
aaa
pushf
mov
stos
ss
outsl
call
mov
sub
enter
fwait
aaa
pop
or
insl
xchg
sti
push
xor
inc
mov
or
in
push
movsb
xor
daa
pop
pop
push
sbb
icebp
mov
push
std
jmp
push
mov
imul
xchg
pusha
divl
incl
adc
scas
ds
xchg
pushf
sub
dec
xchg
in
push
push
test
dec
cmc
cs
mov
adc
std
fldcw
sbb
enter
cmp
jl
loope
cld
lcall
divl
test
fstpl
imulb
out
inc
imul
mov
push
lahf
popa
icebp
pop
adc
cmpsl
jo
mov
and
inc
cltd
cwtl
notb
pushl
fs
das
jge
xor
push
lods
shl
je
fbld
jno
mov
push
mov
sub
jne
push
pop
inc
fadds
idivb
cmpsb
sbb
mov
mov
decl
fcmovb
outsb
pop
je
cltd
cli
mov
or
lds
rcrb
and
mov
ljmp
int3
lds
into
cli
or
movsb
insb
sub
or
xchg
test
mov
mov
ljmp
mov
and
adc
adc
mov
mov
gs
lcall
mov
daa
ljmp
enter
xor
or
cmp
mov
lcall
out
scas
pop
nop
daa
adc
mov
in
jp
pop
test
stos
sbb
cmp
or
std
pushl
lods
jp
test
fs
inc
int3
pop
mov
jmp
cmove
add
decl
xor
mov
or
xor
ja
lds
clc
ljmp
ficompl
pop
subl
test
std
shrb
cmp
pop
ljmp
dec
mov
imul
push
fldt
fidivs
pop
mov
jg
mov
mov
in
jns
pop
jb
sbb
ss
push
adc
ljmp
push
xchg
mov
mov
pop
push
xor
jmp
add
call
std
pushl
cmp
out
push
fs
jmp
imul
test
imull
clc
jmp
and
in
push
pop
popa
adc
sub
mov
push
mov
out
sbb
rcrl
clc
mov
push
sbb
aaa
sub
sahf
or
pushl
ret
inc
out
ret
xchg
sbb
inc
data16
lcall
dec
jo
add
and
inc
pop
idiv
add
dec
orl
mov
jae
push
fucom
sti
mov
dec
jbe
cs
xchg
xor
je
lds
pop
pop
push
aas
pop
pop
mov
loop
and
ljmp
mov
stos
je
mov
fdivs
test
cltd
lods
pop
aas
pop
xor
cmc
decl
in
in
rorb
and
sbb
lretw
sbb
and
clc
cmp
jg
je
jge
mov
jmp
mov
cmp
xchg
ret
or
inc
inc
fisubrs
add
xchg
pop
ret
xchg
movsb
mov
xor
aam
mov
and
rorl
fisubrl
cmpsb
mov
rolb
insl
pop
popf
xlat
xchg
jo
incl
cmp
push
mov
les
jmp
insl
imul
in
sbb
add
adc
jb
divl
std
mov
dec
jge
lahf
sbb
push
or
cs
decl
cwtl
pop
cmpsb
add
mov
push
dec
mov
xor
add
jno
sub
inc
xchg
sahf
mov
pushl
pop
pushl
mov
popa
sub
lret
xor
sub
sub
sahf
jmp
ljmp
push
xchg
data16
test
dec
pop
pop
movsb
cld
cmc
lcall
push
dec
sub
mov
sbb
mov
push
inc
mov
mov
jmp
jge
fs
add
scas
or
jge
js
mov
cmpb
push
rcl
and
ljmp
aam
sti
cmpsb
and
inc
out
daa
int
out
movsb
lods
jge
movsl
jp
and
imul
mov
sti
das
and
dec
call
jmp
lcall
sbb
sbb
and
ljmp
or
add
adc
xchg
xchg
unpcklps
mov
mov
rorb
addr16
sub
ljmp
mov
jle
pop
push
push
and
popf
popa
pusha
outsl
in
sub
push
sahf
ja
sahf
or
incl
loop
push
subb
sbb
std
and
mov
xchg
and
ret
adc
call
adc
sbb
sti
lret
adc
cmc
or
mov
mov
or
ljmp
popf
insb
imul
inc
push
xchg
inc
and
ljmp
decl
adc
push
sbb
pusha
jl
adc
mov
or
cld
jne
jecxz
and
ljmp
stc
rclb
cmpsb
or
cs
pop
shl
sahf
mov
aas
mov
and
js
jmp
xorl
push
mov
sar
mov
mov
iret
jne
imul
incl
std
fiaddl
outsb
add
call
inc
push
int
out
jo
jno
addl
fidivs
andb
mov
cld
idiv
das
adc
jg
call
jge
pop
or
inc
test
insb
out
jo
movsb
jmp
ljmp
lods
xor
popa
out
xor
int
sub
sub
aas
stos
xchg
jmp
bound
mov
ret
out
mov
xor
lret
and
xlat
clc
lret
dec
sbb
call
aad
dec
test
xchg
cltd
jecxz
ljmp
mov
cmp
jnp
lods
aas
lcall
push
out
call
jge
xorb
dec
lods
dec
je
or
andl
in
push
ja
imul
call
rorw
push
sarl
sub
cwtl
cmp
cmpsb
out
lret
cli
fsubrs
jmp
mov
out
outsl
jns
movsl
inc
stos
jmp
cmp
cmpsl
mov
loopne
fildl
fsubl
decl
push
mov
cmp
aaa
jp
mov
add
out
jecxz
movq
in
pop
cmp
xor
hlt
arpl
fsubrl
cmp
add
add
push
jecxz
mov
add
lcall
stos
sub
xchg
decb
mov
sti
sub
xor
psubusw
push
inc
incl
lcall
lods
lea
sbb
xchg
div
stos
mov
xchg
aaa
cld
pushl
push
lea
cmp
push
lcall
mov
cmpsb
decl
pop
outsb
lea
and
pop
sahf
int3
notb
popa
repz
pop
imulb
fistl
push
stc
mov
lods
push
faddp
or
call
pop
push
imul
jmp
ljmp
cli
sub
int3
scas
push
in
rol
ss
mov
pop
jae
cmp
lcall
pop
enter
xchg
jnp
rcrb
xor
cwtl
cltd
xor
lcall
jnp
add
jle
adc
repnz
xchg
jl
push
xchg
shl
mov
add
cmp
cmp
ds
mov
push
loop
clc
mov
sub
lock
mov
xchg
shlb
fnstsw
mov
or
xor
dec
pop
decl
mov
adc
adc
inc
mov
inc
jle
dec
movsl
mov
push
ret
inc
test
push
repz
inc
pop
repz
stc
cmp
push
mov
ljmp
mov
xor
cmp
rorl
ljmp
jae
in
inc
pop
jmp
out
jp
movsb
scas
dec
fdivrs
fidivs
pop
js
push
shrl
lcall
dec
pushf
pop
jbe
xchg
xchg
out
mov
pop
and
call
mov
xchg
dec
addr16
out
mov
aad
inc
mulb
addr16
or
mov
inc
lea
mov
add
add
add
incl
punpckhbw
mov
pop
stos
in
fsubl
rcrb
jp
add
cmp
xchg
fidivrl
mov
call
cmp
mov
or
lods
adc
dec
pop
mov
das
xor
ds
lods
cmp
cmp
ljmp
inc
cmovbe
inc
fwait
lahf
nop
jmp
jge
scas
sbb
test
push
and
sub
xchg
outsb
mov
jns
push
mov
jnp
hlt
movsl
imul
mov
cmc
and
mov
sar
out
push
pop
push
or
mov
jnp
sbb
cmp
or
js
fsubr
loope
jecxz
push
lcall
cld
rcl
xor
fadd
add
and
rclb
inc
lcall
ja
out
push
aas
inc
sbb
dec
fldcw
stos
sahf
pusha
inc
sbb
out
gs
ljmp
jbe
flds
pop
jo
sbb
inc
mov
xor
ret
dec
push
pop
jp
adc
ljmp
mov
xor
push
adc
pop
dec
push
decl
pop
stos
test
out
shufps
cmp
lcall
jecxz,pn
jmp
jg
test
cmpb
or
mov
pop
xchg
mov
mov
mov
call
jp
loop
mov
leave
inc
loopne
inc
adc
sbb
ljmp
mov
fs
int3
mov
lret
test
mov
insl
insb
pop
gs
out
xor
jae
pop
enter
dec
mov
decl
cli
out
sbb
test
nop
cmp
cmc
stos
out
add
jbe,pt
sbb
push
ret
push
xchg
sar
stos
popf
mov
sahf
mov
and
adcb
cmp
jg
das
xor
jge
es
lcall
add
cwtl
gs
stc
pop
add
incl
insl
jecxz
aaa
inc
mov
or
stos
add
icebp
jle
xor
mov
jae
jmp
pop
xchg
lret
mov
push
cmp
mov
sbb
les
xchg
pushl
aam
push
adc
cmc
mov
dec
adc
sub
inc
repz
ljmp
lods
push
lret
and
cmc
push
outsl
mov
push
push
mov
cmpsb
xchg
cmp
or
in
adc
jecxz
popa
xchg
pop
dec
cmp
or
and
inc
dec
cmpsb
cmp
push
dec
cmp
add
lcall
inc
test
and
incl
cmpsl
xchg
adc
jmp
stos
push
pop
sti
mov
or
sar
pushl
daa
arpl
fcomp
jecxz
inc
jecxz
and
mov
pop
push
aam
ret
jbe
xor
dec
mov
adc
stos
out
cmp
and
cmpsb
add
lock
jp
rcr
mov
push
aam
mov
and
jg
sub
and
push
and
jo
mov
pop
xchg
es
jo
js
sub
ljmp
adc
lods
cmp
fwait
xchg
hlt
mov
mov
pop
sbb
lods
sub
ljmp
xchg
mov
test
bound
in
adc
shl
jg
lods
add
call
add
mov
shlb
xor
add
pop
loope
insb
sbb
add
inc
jns
das
cli
incl
shrb
inc
jg
inc
cmp
mov
ljmp
sub
lea
gs
cmp
cmp
inc
ds
jg
pushl
test
pop
clc
sbb
mov
fnsave
aam
hlt
lret
add
std
ljmp
daa
sbb
sahf
and
sbb
xchg
pushf
xchg
and
pusha
test
call
test
es
jl
push
inc
jae
sub
cmp
repnz
push
pop
push
push
inc
inc
clc
decl
lds
test
adc
or
enter
mov
ljmp
bound
jbe
ret
push
aad
shr
jns
xor
out
xlat
xchg
fldenv
inc
scas
test
out
mov
mov
sar
jg
movsb
aaa
dec
fldenv
aad
mov
adc
xchg
mov
pusha
xor
mov
push
cwtl
adc
add
and
jg
out
setg
lret
ss
push
sbb
hlt
push
repz
xor
inc
out
pop
xchg
and
mov
dec
xchg
pushl
or
fbld
jo
jnp
jb
pusha
roll
pop
stc
pusha
repz
inc
xor
clc
dec
insb
mov
test
je
sahf
dec
adcl
sub
incl
jl
mov
mov
iret
adc
inc
lods
dec
test
stos
jg
dec
ja
adc
hlt
scas
sbb
cmp
vpsrlq
ljmp
push
pop
xchg
lahf
jo
loope
faddl
pop
pop
push
push
fbstp
cs
out
rcrb
shll
add
sub
mov
lods
stos
xor
lcall
and
adcl
lea
insb
mov
dec
jl
add
inc
jmp
or
mov
xor
adc
inc
lcall
frstor
popa
inc
push
ret
test
or
and
push
js
push
mov
sbb
in
leave
pushf
ja
lock
out
or
leave
sub
inc
sub
push
push
das
inc
mov
lcall
out
xchg
and
add
aas
cmpsl
fbld
das
jmp
inc
dec
cli
jge
les
sub
push
js
clc
mov
and
rcll
jns
lock
pop
stos
pop
lret
cli
ja
lcall
data16
or
push
es
ficomps
pop
mov
jmp
jb
mov
push
xchg
or
pop
lock
test
pop
and
mov
insb
mov
dec
sbb
insl
adc
ds
xor
or
cli
dec
pushf
or
or
xchg
fsub
ret
fwait
clc
stc
push
inc
push
dec
pop
movsl
jns
xor
inc
stos
push
shl
call
add
mov
addl
add
movsb
mov
sub
pushl
test
jle
sbb
pop
pop
popa
mov
aas
add
mov
jl
sbb
scas
cli
mov
push
xchg
loopne
jge,pt
mov
inc
popa
pop
add
arpl
pushl
push
lcall
mov
xlat
jl
adc
adc
jmp
xchg
xchg
and
outsb
rol
mov
test
addr16
jb
lods
mull
out
cmpsb
jg
incl
pusha
sub
sti
pop
out
loope
icebp
shlb
or
xchg
mov
and
popa
sub
jecxz
incl
sbb
push
imul
int3
data16
in
jle
das
js
pop
mov
jo
test
into
mov
sbbl
pop
cli
call
cmpsl
inc
mov
out
ljmp
int3
rcll
sti
test
out
not
les
por
test
loopne
mov
mulb
outsb
and
test
lret
inc
sub
call
jg
ljmp
push
aaa
jns
and
cmc
adc
daa
or
mov
lods
call
adc
mov
notb
hlt
int3
xchg
ljmp
ss
gs
jge
pop
or
xchg
pop
lret
test
out
les
jmp
stc
jne
icebp
arpl
adc
adc
scas
pop
push
mov
xor
das
cli
push
dec
sub
stc
ror
cmp
mov
mov
push
sub
call
fwait
cmp
and
pop
inc
outsb
fdivl
mov
ss
stos
cwtl
decl
roll
push
ret
shll
mov
jge
push
testl
lds
sarb
shl
test
and
movsl
repz
cmpsl
into
rorl
cs
lcall
push
out
nop
sar
xchg
push
or
push
jg
xlat
mov
xchg
mov
out
fs
mov
ja
lds
stos
jmp
xchg
sub
push
jmp
xchg
sub
jns
fcomip
incl
shrl
test
xchg
cwtl
cld
adcb
stc
jmp
dec
inc
pushl
pusha
pop
push
mov
mov
lret
xor
call
cmc
fstl
mov
sbb
cmc
push
js
es
sti
fdivrp
xchg
mov
aam
dec
insl
push
ror
cs
and
dec
adc
fists
test
xor
je
inc
mov
loop
cmp
mov
sbb
popf
pushl
push
inc
call
or
sbb
dec
mov
sbb
inc
xchg
push
jno
mov
pop
cmp
dec
push
ret
sub
push
dec
mov
clc
gs
jg
adc
pushl
aas
cmp
out
push
mov
lods
and
sarl
jp
mov
or
imul
inc
xchg
dec
push
lret
lods
or
mov
sub
or
mov
mov
addr16
pop
mov
or
scas
psrad
decl
lock
in
fwait
loopne
sbb
icebp
cmc
pop
ret
dec
pop
adc
lret
incl
lahf
add
je
push
popa
lret
out
inc
scas
leave
mov
shll
ljmp
sub
pop
inc
rcrl
jle
cmp
xchg
mov
cmp
test
ljmp
hlt
add
js
xlat
and
inc
add
sub
add
repz
add
push
pop
sub
cmp
push
push
push
mov
jl
cmc
push
xchg
cwtl
xchg
imul
je
das
subb
mov
ljmp
xchg
in
rorl
push
and
jo
sbb
in
add
mov
push
pop
fildl
pop
pause
fiaddl
cmp
dec
sbb
xlat
outsb
dec
out
jno
add
mov
dec
hlt
or
std
pop
lcall
call
or
add
or
test
xor
pop
inc
jecxz
mov
ljmp
add
sub
stc
xchg
loopne
xlat
jg
call
mov
cmp
adc
jge
in
pop
mov
dec
enter
incl
add
loope
xlat
cltd
push
outsb
push
xchg
adc
adcb
pop
push
test
push
daa
decl
stc
je
ljmp
dec
mov
cld
adc
jmp
icebp
mov
test
dec
inc
mov
inc
xorb
out
in
jp
cld
fbld
jnp
dec
jge
mov
push
orl
xchg
add
or
fdivrl
sbb
sar
cli
lcall
jp
insl
adc
mov
dec
inc
adc
mov
imul
call
xor
out
mov
bnd
add
jge
pop
jae
les
pop
int3
and
hlt
das
pop
pop
out
ljmp
fdiv
sub
or
pop
sarb
pop
inc
mov
add
and
test
lock
mov
lods
out
and
ljmp
xchg
decl
and
push
cmpb
arpl
popf
mov
sub
pop
or
pusha
cmc
jmp
xchg
or
mov
test
inc
mov
es
xor
stc
test
push
or
xor
cli
out
dec
sub
dec
incl
in
clc
cmp
leave
push
cmc
push
aam
or
pop
sub
lcall
adc
mov
lods
jg
xor
add
xor
pop
insl
scas
cltd
mov
daa
or
decl
dec
lret
fiadds
push
ljmp
xchg
out
jne
dec
add
pushl
std
call
sub
mov
lods
dec
jnp
adcb
sbb
dec
lcall
jle
lcall
xor
clc
enter
imul
mov
cmp
repz
pop
jg
add
test
shll
outsl
push
lcall
icebp
test
imul
pop
iret
cmp
add
jnp
xchg
mov
decl
adc
adc
lock
or
les
sbb
fnstsw
scas
clc
jmp
out
out
or
stos
and
inc
inc
cmc
call
ret
test
jmp
lods
test
mov
sub
jns
stc
push
in
xchg
ljmp
es
insb
mov
dec
fistpl
lock
testl
or
lcall
inc
inc
and
lock
dec
sub
loop
push
or
dec
dec
pushf
leave
cmp
jg
mov
lret
int3
push
adc
mov
ljmp
ljmp
lret
icebp
arpl
dec
xchg
clc
inc
push
add
rclb
loop
ficomps
mov
aaa
jg
incl
fsubrl
inc
xchg
inc
pushf
daa
pop
xor
outsb
cli
dec
mov
into
ljmp
incl
mov
xchg
adc
push
ud1
idivb
mov
out
loope
push
xor
add
push
and
inc
lret
into
push
xchg
test
lcall
outsb
inc
outsb
les
push
repz
xor
icebp
mov
pop
shll
xchg
decl
repz
dec
addl
inc
cmp
imul
and
icebp
xchg
xchg
aaa
inc
mov
loope
incl
rol
jb
mov
daa
cltd
call
push
pop
ljmp
cli
jg
jmp
aam
push
insb
sub
lods
push
jmp
dec
add
push
dec
xchg
in
xchg
mov
ljmp
ret
test
and
jno
push
aas
out
inc
sbb
out
mov
and
divb
rolb
mov
inc
ljmp
xor
pop
mov
or
adc
push
cmpsl
or
dec
jbe
mov
jg
inc
xchg
idiv
lcall
mov
or
xor
push
jge
adc
dec
mov
xor
addr16
pushl
cmp
js
in
ret
xor
mov
cmp
mov
scas
iret
mov
ret
out
insl
push
cld
mov
fidivs
sbb
call
or
lcall
or
jl
push
mov
push
clc
clc
das
rcr
fnsave
jmp
shrb
fcomip
incl
imull
or
shll
jge
into
scas
mov
dec
out
jno
fisubl
call
push
xchg
xchg
ret
push
sbb
int
cs
rcrb
sbb
cmp
lcall
test
xor
stos
jae
subb
or
int
outsl
pushl
sbb
movsb
mov
mov
ret
cmpsb
fnstcw
cmp
test
xchg
stos
incl
dec
pop
add
pushf
pop
jmp
cmp
incl
and
pop
add
mov
push
cmpsb
and
mov
dec
jle
popa
sti
fbld
aas
adc
push
adc
decl
test
push
pop
add
decb
pop
jp
mov
xor
mov
test
mov
sbb
xor
jne
jb
lret
push
movsl
sub
lds
in
mov
clc
into
adc
lock
mov
xor
daa
popa
incl
popa
test
mov
and
or
add
pop
ret
mov
loope
sbb
inc
daa
pusha
icebp
lcall
dec
insl
mov
add
add
nop
and
pop
xchg
jp
dec
data16
adc
xlat
aas
fnstenv
in
dec
xor
addb
arpl
clc
xor
fistpll
nop
insb
jo
loop
outsl
sub
mov
jno
shr
loope
movb
mov
or
pop
mov
xor
shr
mov
mov
ljmp
and
call
das
sub
push
push
adc
test
pusha
and
aam
and
jg
cmc
idivb
mov
hlt
mov
incl
inc
push
daa
sub
loopne
mov
sub
arpl
das
xlat
int3
push
jg
pushl
push
shll
adc
xor
push
cmpsl
outsb
incl
arpl
fwait
call
mov
xor
les
fnstsw
cmp
fcomip
pushl
cmp
pop
adc
ss
mov
xchg
stc
shll
inc
sti
stos
push
pusha
add
inc
bound
xchg
xchg
mov
inc
lea
int3
int3
ljmp
push
es
jmp
xor
lock
aad
inc
push
ljmp
fst
push
lcall
bound
add
adc
rclb
cmp
cltd
mov
jmp
push
fsubrs
push
icebp
xor
adc
adc
lcall
into
or
mov
xor
dec
sub
push
jno
and
decl
mov
test
imul
inc
sbb
rorb
xlat
mov
pop
sub
add
xbegin
mov
outsl
jg
push
or
cli
jecxz
jns
int
add
stos
sub
add
in
or
ljmp
mov
jne
filds
adc
cmp
pop
push
push
jns
incl
das
insb
jge
loopne
jno
frstpm(287
and
or
lea
cmpsl
add
lret
decl
and
sub
inc
lahf
aam
sbb
or
cmp
hlt
cld
fdivrp
out
push
sar
decl
add
and
cmp
in
sarb
scas
repnz
shrb
adc
pushl
pop
cld
iret
jmp
inc
enter
xadd
xlat
aaa
xchg
movsl
or
hlt
mov
xor
dec
nop
jne
andb
ja
cs
adc
jg
out
add
xlat
xchg
out
jbe
or
mov
and
jge
out
mov
mov
cmp
mov
js
and
adc
jp
stc
xchg
inc
sbb
lock
fdivrp
lcall
stos
or
pandn
push
mov
or
scas
mov
dec
pop
sbb
repz
cld
pushl
icebp
cltd
cmp
in
jg
dec
ret
outsb
push
pop
std
dec
lahf
ret
dec
or
mov
cld
pop
cmc
push
xchg
into
incb
inc
loope
pop
sarb
xor
push
shll
addb
lods
xlat
out
mov
hlt
cmp
sub
add
lcall
int
shrb
pop
les
divps
daa
shr
lock
movsl
or
shlb
lock
lods
xchg
loopne
lock
fs
pop
jo
adc
jmp
lock
mov
push
push
inc
jp
add
sub
hlt
xor
int3
sti
dec
mov
xor
call
xchg
push
cmpsb
xchg
cmp
cmp
dec
iret
dec
daa
inc
add
cmp
aas
subb
call
push
je
shrb
mov
jbe
int3
in
inc
outsb
pop
in
jmp
movsl
pop
lahf
or
fcmovb
lahf
sub
lahf
jbe
inc
pusha
stos
ss
xchg
int
jge
lcall
test
imul
push
inc
sti
add
mov
pusha
pushf
dec
push
lcall
repnz
js
notl
stc
lds
out
xchg
movsb
addr16
addr16
mov
lcall
sbb
ds
dec
sarb
inc
mov
push
dec
rorb
in
test
and
call
int
jge
cmpsb
out
mov
movsl
jg
fdiv
jae
push
or
aaa
inc
icebp
mov
xchg
pop
sarb
dec
shlw
mov
pop
jle
in
mov
icebp
rclb
in
imul
inc
push
cmc
popa
iret
ljmp
adc
push
or
outsl
loop
or
inc
test
inc
and
push
xchg
into
out
cli
ljmp
loop
add
pusha
jp
nop
and
das
sbb
adcb
pushf
jne
push
pop
out
inc
cmpb
mov
jmp
scas
xor
aad
push
lock
mov
lret
push
loop
inc
xchg
jge
mov
ds
push
dec
xorb
aad
cmp
jbe
add
fbld
insb
pop
push
fisubl
repnz
jb
push
mov
mov
inc
enter
add
cmp
test
pop
out
mov
jg
mov
adc
les
and
xchg
inc
out
cmc
decl
pop
jg
dec
outsb
cmc
push
push
fmul
or
repz
stc
inc
cld
filds
xlat
push
sbb
cmp
mov
jp
cltd
test
mov
inc
sub
xchg
or
jmp
aaa
mov
jmp
dec
add
stos
cmp
out
sahf
stos
pop
xor
fnsave
push
ljmp
jmp
mov
add
lea
jo
adc
lds
loopne
incl
or
lods
leave
mov
mov
call
cmp
mov
test
jo
dec
ldmxcsr
lret
lahf
cmp
call
stos
das
inc
jle
cmpsl
bnd
stos
out
imul
in
ja
fisttps
out
int
push
xchg
bound
f2xm1
packuswb
lret
call
aad
lcall
cmp
sarb
add
cs
xchg
jp
aam
ja
pop
adc
push
fdivrs
addb
cmp
adc
lret
loop
gs
pop
sub
jb
shlb
and
fmul
icebp
lods
pop
repnz
lcall
or
sbb
mov
jecxz
push
jp
pop
cmp
cmp
mov
and
xchg
cmp
je
or
cmp
arpl
subb
cmp
faddl
and
inc
pop
jns
jns
lea
fsub
sar
ljmp
repz
aaa
adc
nop
arpl
sahf
test
lea
mov
outsl
cmp
repnz
dec
pop
mov
cmp
mov
inc
rorb
adc
dec
out
and
and
sbb
dec
test
xchg
lods
adc
adc
jl
pop
sbbb
pop
dec
mov
mov
pop
std
fiadds
pusha
mov
gs
xchg
les
gs
jns
adc
iret
hlt
cmp
cmp
jmp
leave
sub
divb
psubd
mov
mov
mov
ret
mov
fstpt
fdivr
into
pop
scas
cmp
inc
rcr
pop
jle
push
cli
push
ljmp
inc
incl
cld
call
cmp
mov
add
incl
mov
jle
ret
mov
xchg
rorl
pop
xchg
and
loopne
hlt
and
pushl
cld
cmp
andl
aas
bound
sbb
call
ret
or
aam
imul
mov
rclb
es
call
movsb
stos
add
sarl
push
mov
pop
hlt
lcall
sub
mov
add
dec
xor
in
dec
es
incl
mov
icebp
inc
imul
add
xchg
testl
jno
jp
insb
mov
sbb
jnp
aam
push
cmc
dec
lods
insb
jo
mov
movsl
sbb
mov
leave
daa
sub
lcall
inc
aam
push
lods
outsb
or
cmpsb
mov
sub
mov
mov
sti
data16
jg
mov
push
mov
mov
fsubs
xchg
int
lcall
mov
cwtl
and
sbb
xchg
fbstp
adc
pop
lods
cld
iret
xchg
mov
or
inc
and
jmp
icebp
pop
push
jne
negb
push
cmp
fcmovnu
mov
lods
lahf
and
inc
mov
mov
or
adc
or
mov
or
push
pop
push
fsubs
leave
jae
das
cli
scas
xchg
sbb
lds
mov
mov
enter
and
ret
bound
sti
lcall
test
and
adc
mov
cmp
stos
jbe
mov
rcll
mov
jmp
mov
inc
mov
popf
inc
cmc
test
jbe
incl
cmc
lahf
aad
pop
jns
fimull
fadds
mov
and
fcomip
ljmp
inc
sar
xlat
mov
mov
cs
out
lea
or
decl
and
int3
rcrl
and
push
sbb
push
rcl
cmpsl
test
out
pop
shlb
call
push
cwtl
shll
pop
and
mov
into
or
ss
and
test
sub
lcall
and
outsl
inc
jbe
jb
or
sbb
or
incl
dec
bound
rorb
lods
and
jle
push
daa
mov
jg
add
rcrb
push
fldenv
lods
scas
push
nop
pop
sub
fcomip
mov
mov
mov
js
insl
loop
int
jae
aam
in
rorb
jmp
ss
rcl
pop
dec
aas
xor
iret
scas
mov
dec
cmp
pop
lret
inc
mov
and
or
and
push
jae
scas
push
push
inc
mov
inc
lods
leave
gs
sbb
ja
lret
fs
iret
adc
push
test
and
lods
or
inc
stc
adc
push
xchg
clc
sub
int
out
xchg
fsubr
ss
jbe
dec
mov
mov
or
ljmp
add
rorl
repz
sbb
aad
sbb
fbstp
xor
mov
enter
inc
arpl
cmpb
sahf
inc
decl
fisubs
call
cmpsb
xor
jb
adc
test
sbb
sbb
and
and
xor
dec
scas
sub
rcr
mov
fldl
adcl
mov
mov
out
mov
into
and
sub
jo
jmp
jg
pushl
mov
push
lret
outsb
call
lret
pop
xor
hlt
mov
into
cs
mov
aas
mov
sbb
ja
xor
imul
sarl
sahf
stos
and
adc
add
incl
cmpsl
add
push
ror
sbb
pop
sbb
push
inc
inc
movsl
cmp
cmc
into
into
arpl
lcall
js
xor
dec
add
nop
fcompl
mov
jne
pop
dec
push
je
pushl
std
incl
mov
je
or
int
push
pop
inc
mov
decl
xchg
jns
add
out
jns
dec
sub
scas
and
stc
mov
pop
cltd
dec
sbb
add
push
cld
decl
fildll
jecxz
xorl
jg
outsb
dec
pop
inc
lock
cmc
imull
push
clc
xor
jp
xor
mov
lret
insb
mov
push
out
mov
dec
pushf
ss
xchg
mov
fcmovne
mov
addr16
js
inc
push
lahf
push
arpl
stc
push
jmp
popa
aad
inc
lret
out
pop
in
mov
push
jbe
mov
decl
pop
mov
nop
iret
bsr
rcr
xchg
mov
das
sbb
in
data16
incl
repz
mov
mov
rorb
shl
es
mov
pop
mov
movsl
repnz
mov
fmul
dec
push
enter
push
loopne
jmp
pushl
cld
ljmp
shl
xor
xchg
mov
adc
or
in
iret
sahf
insb
xor
adc
cmp
rol
mov
pushf
sbb
enter
pushl
push
push
push
scas
in
jge
lock
int
dec
xchg
xchg
cli
mov
dec
fsts
call
sub
inc
cld
mov
ret
adc
inc
sub
mov
dec
outsb
lcall
sub
ds
jp
cmp
dec
ret
cmp
cmp
out
pop
sbb
ljmp
ljmp
aam
je
jp
dec
cmp
imul
and
inc
out
clc
lcall
mov
ss
test
sub
inc
test
pusha
and
test
add
sbb
subb
cld
sbb
mov
push
cmp
pusha
mov
js
or
mov
cmp
mov
stos
leave
inc
pushl
pop
in
sbb
mov
xor
outsb
push
or
mov
add
adc
in
pop
sbb
jmp
push
test
je
roll
jbe
jb
aaa
dec
sub
std
pushl
test
jae
mov
sub
mov
adc
inc
dec
mov
fcoml
aaa
test
rcll
lahf
jecxz
adc
addr16
push
dec
xlat
call
leave
movsb
sub
xchg
pop
pop
pop
repz
cs
lock
mov
jg
lcall
fdivrl
mov
popa
xor
mov
adcb
bound
lods
xor
jns
fsubr
sub
xor
repz
sub
mov
jmp
in
test
push
pop
stc
push
nop
test
in
add
inc
int
std
incl
xchg
or
stc
mov
sbb
sub
or
cltd
pushf
mov
lods
repnz
call
stos
push
repnz
stc
fbstp
test
mov
outsl
mov
dec
cmc
insl
lock
aad
push
cmp
mov
les
call
and
mov
ljmp
cmp
out
xchg
jle
mov
or
imul
jb
mov
lcall
movsl
cmpsl
fucomp
addl
mov
idivl
dec
fdivl
js
cli
mov
insb
sbb
daa
push
xchg
adc
ja
cmp
arpl
cmp
stos
roll
les
cmp
mov
outsl
xor
cmp
outsb
mov
pushl
std
pop
mov
inc
movsl
shrb
lret
bnd
xchg
sub
and
ljmp
push
add
loop
inc
test
sahf
cmp
mov
xchg
and
in
adc
popf
lcall
mov
loope
fnstcw
sub
icebp
jno
fiadds
lret
dec
dec
dec
mov
ljmp
xor
xor
cmpl
or
cs
push
scas
into
insl
cmp
push
mov
mov
int
jecxz
sub
lea
xor
pop
inc
clc
aad
inc
adc
sar
cmp
insl
repz
dec
dec
or
lock
xchg
mov
in
add
fucomi
call
std
test
pop
lret
stc
add
pop
or
dec
inc
sub
dec
mov
in
jg
jmp
pop
xor
pop
fs
jnp
decb
rolb
dec
adc
das
pop
mov
idivb
cmp
and
inc
leave
push
xor
add
pushl
push
dec
push
push
mov
mov
cmpsb
push
mov
add
sbb
dec
test
mov
lods
push
xchg
test
push
subl
dec
adc
jo
xchg
sar
fstp
ljmp
jge
out
sbb
xchg
add
xchg
ja
mov
jmp
in
and
insl
jae
jmp
cli
xchg
repnz
sahf
cmp
adc
enter
mov
sub
int
insl
mov
mov
sbb
sbbl
push
jecxz
jno
sbb
mov
incl
push
sub
or
in
addr16
loopne
repz
cmpsb
arpl
fdivrp
decl
mov
movsb
or
iret
jmp
jns
nop
inc
gs
fcompl
cli
ret
mov
cmp
sub
int3
lret
xchg
inc
inc
addr16
scas
pop
in
jmp
push
jg
dec
sbb
jmp
decl
mov
dec
push
scas
or
lcall
cmp
mov
push
orl
jae
loopne
cmpsb
mul
or
test
je
jns
xor
xchg
out
imul
aaa
pop
mov
adc
addr16
dec
or
das
scas
clc
jmp
mov
adc
push
test
out
dec
outsb
inc
push
xor
movsb
pop
pop
push
lea
ljmp
out
decl
movl
arpl
aas
or
sbb
mov
clc
scas
xor
ja
cli
incl
hlt
xchg
jl
jns
movsb
aad
sar
decl
fcomps
sub
xchg
cltd
pop
hlt
scas
pop
leave
jle
xchg
and
xor
mov
xor
movsb
mov
or
fs
mov
ljmp
and
jmp
adc
xor
add
mov
sbb
add
call
push
jne
jb
dec
js
nop
jno
fstpt
sbb
xchg
nop
cwtl
lcall
decl
loope
sbb
jmp
fcmove
pop
pop
dec
add
in
mov
jg
inc
pop
and
push
call
jmp
push
cmp
das
cmpsl
ror
shr
es
inc
incl
mov
out
pop
fldenv
mov
xor
sbb
stos
fwait
mov
jns
ljmp
loope
test
rolb
lahf
cmp
shl
lret
mov
cmp
ficompl
push
push
fwait
and
or
push
pop
sub
dec
dec
rcll
adc
dec
push
jg
outsb
ds
sub
mov
test
mov
call
test
repnz
sbb
xor
sbb
xchg
fmuls
out
out
push
out
ffreep
mov
or
jp
insl
xchg
xor
pop
xchg
cmp
sti
jle
ja
pushl
cmpsb
mov
xor
mov
jbe
xchg
fdivrl
lret
mov
enter
push
xchg
orb
push
notl
pusha
incl
ljmp
adc
xchg
dec
add
push
push
inc
ljmp
jle
loope
mov
pop
or
xor
push
mov
incl
inc
xchg
lock
mov
fldenv
shll
pushf
aad
insb
mov
jmp
in
sub
mov
ljmp
pop
mov
push
test
sbb
or
ljmp
out
sub
nop
lret
pop
cmc
push
arpl
push
inc
dec
fisttps
inc
mov
jmp
jmp
jg
cmp
xchg
xor
sub
lods
inc
adc
aad
mov
js
adc
pushl
shr
mov
sub
lret
xchg
cmpb
cld
push
adc
or
push
sub
repz
in
mov
inc
outsb
inc
leave
rorl
jb
mov
mov
pop
iret
les
movsb
arpl
jb
jbe
lcall
cmp
fsubr
rcrl
mov
mov
ja
or
sub
and
jg
in
jge
mov
xor
pop
rcll
xor
pusha
std
xchg
js
mov
or
push
orl
rolb
mov
lahf
shl
incl
xchg
out
jge
int3
and
in
mov
lcall
xchg
mov
into
stc
cli
bnd
lea
cmp
xor
and
ljmp
cli
fimull
xchg
and
jle
or
add
inc
mov
pushl
popa
mov
inc
mov
mov
mov
cmp
mov
cld
fdivl
cmp
xchg
and
sub
sti
xor
outsl
cmp
enter
pusha
lcall
clc
adc
ret
out
bound
test
jmp
shll
xor
cli
lcall
pop
mov
push
jge
jge
jmp
jp
sub
loopne
mov
mov
or
xor
sbb
das
std
or
movsb
dec
sahf
cli
incl
fildl
cwtl
movsb
test
or
dec
ret
in
mov
push
ljmp
cmpsl
sub
in
adc
cmp
push
inc
fcmove
ds
ss
in
and
xchg
sbb
and
not
jno
mov
decl
outsl
add
dec
les
pop
lahf
stos
xlat
xor
mov
or
xchg
lcall
and
sub
jo
aad
lock
jae
testb
dec
hlt
push
jno
inc
pop
mov
xlat
ljmp
into
dec
or
in
mov
mov
adc
repnz
sub
jno
xchg
outsb
mov
add
out
xor
dec
sbb
in
gs
shll
or
sbb
pushl
xchg
ja
xor
push
mov
sbb
std
popa
out
mov
push
jo
sbb
into
pop
xchg
pop
mov
stos
xor
imul
nop
out
test
std
lcall
in
call
mov
sahf
shl
shl
xchg
aas
cmp
add
dec
jae
fsts
lret
enter
push
push
addr16
das
cltd
mov
jno
mov
inc
into
add
push
call
int3
xor
cmp
out
cmc
or
mov
sbb
icebp
adc
es
dec
dec
or
sub
xor
cli
fisttpl
or
adc
shlb
test
lahf
and
jne
daa
mov
call
mov
push
xor
mov
or
dec
xor
sar
lcall
dec
sbbl
addr16
jne
mov
call
sbb
pop
add
and
aaa
dec
xor
fwait
jl
dec
scas
mov
pop
mov
out
loopne
adc
pop
ret
cli
decl
testb
orl
mov
popf
sbbl
notb
rcrb
mov
sub
add
push
cli
cltd
bound
fwait
cmc
mov
push
test
and
repz
xchg
scas
pop
dec
cltd
repz
lret
lcall
xchg
mov
jns
pop
inc
pop
jno
sar
xor
push
sarb
mov
les
test
lcall
lcall
dec
mov
add
mov
gs
jle
in
push
or
out
aam
aad
clc
clc
stos
push
fists
or
shr
aad
mov
notl
out
xlat
mov
pushf
call
scas
decl
test
or
pop
xchg
inc
sub
rol
jne
in
sub
lcall
mov
hlt
loope
jo
rcll
jnp
lods
imul
dec
stos
mov
ret
mov
push
aad
mov
dec
pop
push
xor
cs
dec
sar
ficoml
shlw
fcomi
adc
stos
sbbl
adc
sub
repnz
pop
fsubrl
sub
push
out
dec
fneni(8087
push
or
mov
xchg
bound
jp
and
sub
cmpsl
and
jp
loop
ljmp
mov
sbb
or
adcl
into
jecxz
movsl
jg
sbb
pop
clc
imul
or
or
stos
call
sub
call
mov
adc
pop
sub
mov
inc
ror
and
jae
pushl
xchg
lock
cmp
xchg
pop
jns
pop
push
dec
sub
xchg
pop
cmp
mov
xor
stos
mov
cld
call
cmpsb
in
push
xchg
xchg
xchg
mov
das
jb
dec
ud0
out
test
clc
lret
jle
vpaddb
ljmp
stc
xor
call
popa
sub
dec
push
and
ret
out
inc
inc
repnz
mov
aaa
or
fistps
push
mov
movsb
flds
add
or
cmpsl
lcall
pop
decl
pop
in
mov
popf
ljmp
inc
je
test
mov
adc
rorl
insl
ljmp
mov
xchg
shll
in
test
lcall
xor
fsubp
pop
clc
addr16
mov
sbb
and
bound
sbb
daa
das
cmp
insl
in
fisubs
and
sub
adc
mov
ss
cmp
sbb
mov
sub
je
ret
insb
xor
dec
test
push
cvtdq2ps
mov
inc
js
daa
stc
movsl
stc
or
adc
push
mov
xchg
jbe
test
pop
push
pop
inc
ret
and
jg
jne
jbe
inc
inc
dec
adc
fwait
inc
testb
jle
xor
pop
or
decl
sub
loopne
sbb
rcr
xchg
dec
adc
mov
decl
repnz
lahf
mov
das
fdivs
mov
subl
aad
add
jo
decl
and
dec
jnp,pn
fwait
xor
push
mov
mov
pop
push
popa
nop
into
sbb
aaa
std
mov
pop
sub
ret
fildll
int
daa
or
mov
test
sbb
pop
fs
jl
popa
jle
das
imulb
jg
push
push
cmp
xor
or
loopne
std
mov
jns
sbbl
push
sub
mov
pushf
or
push
neg
in
popf
pop
sub
lock
pushl
ja
jae
mov
xchg
push
fidivrl
sti
leave
xchg
dec
scas
pop
sub
lcall
adc
or
push
add
cmp
out
movsl
std
push
inc
mov
mov
push
inc
sub
jb
jbe
loop
in
mov
fmull
inc
sbbb
incl
mov
xor
mov
mov
in
mov
and
mov
data16
cmp
fldenv
pop
repnz
fidivl
mov
jle
xorb
adc
nop
mov
lcall
push
cs
push
sub
xchg
addb
sbb
and
adc
lahf
and
ljmp
in
test
lret
push
fbld
xchg
mov
xor
in
incl
xchg
jnp
mov
scas
jmp
shlb
push
or
xchg
jnp
outsb
mov
lcall
es
cmp
call
outsb
jns
mov
xchg
add
icebp
stos
lock
sbb
mov
jp
outsb
sbbl
test
stos
lds
fistpll
jnp
nop
push
jmp
jo
adc
iret
push
out
ret
push
repz
test
popf
clc
push
push
pusha
mov
inc
mov
xchg
mov
lret
bound
outsb
loope
sub
jb
mov
decl
or
daa
jge
sbb
adc
mov
sbb
test
xchg
jae
fbld
incl
out
call
test
loopne
push
loopne
push
xchg
outsb
pusha
xor
inc
adcb
jne
pushl
pushf
add
jle
pushw
jg
sub
enter
sti
ss
push
mov
jbe
cmc
pop
push
and
mov
out
out
jp
jno
clc
or
jae
jmp
cmc
adc
inc
sbb
mov
lret
and
xchg
sbb
inc
popa
xchg
ljmp
lock
pop
cltd
jmp
xchg
rolb
xor
aad
sbb
jne
sub
out
cmp
lods
push
jg
xor
shl
mov
subl
ja
pushl
dec
es
dec
cmc
insl
ret
xchg
add
or
mov
pushf
data16
jmp
jg
xlat
aad
xor
cmp
xor
outsl
jecxz
and
dec
lret
inc
mov
outsb
add
out
mov
data16
pop
or
aam
xchg
ficoms
decl
and
pushf
pop
inc
xchg
lcall
mov
pop
dec
les
pop
je
sub
pushl
mov
push
scas
lods
in
loopne
cmp
mov
mov
andnps
bound
inc
xor
sub
call
insb
mov
push
test
sbb
call
sub
jns
outsl
ret
cmc
in
xchg
out
mov
imul
and
lock
decl
rclb
xchg
imul
xchg
cmpsb
inc
lods
fiaddl
mov
push
xchg
pop
iret
add
sbb
and
stos
lods
jecxz
push
lret
push
mov
decl
cmp
push
imul
fidivrs
lds
mov
popf
lock
fimull
mov
cmpsb
in
sub
aad
fsubr
frstor
test
in
inc
add
adc
sti
popf
cmp
dec
lea
and
push
sub
mov
andb
sbb
add
dec
adc
sbb
arpl
sub
xor
cwtl
lcall
xor
adc
jl
aam
incl
popa
pop
lret
fildl
std
sbbl
xchg
push
pop
xor
scas
lcall
jno
out
cmpsb
sub
inc
loopne
cli
mov
xadd
dec
cmpsb
hlt
xchg
ds
leave
loopne
push
icebp
add
mov
push
out
pop
inc
add
add
inc
shll
and
test
mov
adc
iret
dec
cltd
adc
aam
dec
or
xchg
fnstenvs
div
jg
inc
pop
mov
call
cmp
push
jle
lcall
aaa
sarl
or
or
hlt
ficompl
incb
std
jg
pushf
pop
aas
add
jnp
or
lret
cs
push
lds
inc
mov
xorl
dec
push
mov
stc
jbe
mov
stos
fcomip
das
rcrb
add
cmpsl
xchg
mov
add
mov
sbb
mov
ret
ljmp
xor
dec
jae
bound
fwait
xchg
xor
jae
cmp
adc
and
mov
stos
sbb
stc
ja
fisubl
mov
arpl
into
or
outsb
insl
sbb
pushl
insl
and
mov
sub
push
add
mov
ds
std
xor
push
mov
add
ja
or
pop
jb
lods
xor
cli
decl
xor
shrl
jae
movsl
icebp
inc
pop
mov
ljmp
in
mov
or
out
in
pusha
mov
mov
jo
xchg
std
inc
cmp
lcall
xor
mov
pop
lea
loop
cs
adc
xor
les
icebp
xlat
loop
push
ja
sub
addr16
popf
jge
push
loopne
aas
int
dec
fildl
stos
mov
aaa
cmp
mov
mov
aad
mov
dec
adc
ret
and
shlb
or
jmp
jbe
jecxz
pop
movsb
push
xor
and
and
les
push
arpl
lods
mov
enter
call
or
push
inc
push
or
xchg
call
add
cmp
or
jecxz
adc
push
out
test
cmp
cmp
cs
loopne
test
push
push
and
mov
cmp
jg
jne
and
and
inc
fimull
inc
test
orb
ret
push
add
ljmp
leave
dec
loop
test
jg
enter
mov
push
les
mov
arpl
pop
dec
adc
gs
cmpsl
add
incl
add
xchg
add
xchg
cmp
cmc
adc
pushf
out
clc
inc
pop
sbb
pop
add
leave
push
subb
cli
into
mov
iret
pop
pushl
imul
fldenv
iret
mov
xchg
or
xor
in
aam
cmc
cld
or
fwait
andl
ficoml
aaa
imull
js
scas
push
lcall
cmp
jo
mov
push
aaa
or
xchg
xchg
push
lock
jg
push
or
test
cmp
call
fmul
imul
xor
xchg
cmp
jp
popa
jb
xchg
push
lcall
pop
enter
adc
iret
mov
sbb
movsl
mov
in
and
pushl
or
sub
or
jle
sbb
pop
out
in
fstps
push
mov
inc
mov
add
adc
cmp
aad
stos
push
test
xor
cli
pop
cmc
call
imul
movsb
push
fidivl
scas
mov
push
jnp
out
fistpl
jns
pushl
mov
mov
and
aad
add
test
lret
insl
pop
xor
cmp
jg
in
ret
push
adc
mov
outsb
push
cs
and
mov
fcomps
pushl
mov
xor
mov
aad
and
jb
bound
out
cli
call
or
fsubs
lret
and
in
lods
sbb
jno
andb
sti
icebp
ljmp
and
add
add
cmp
jnp
int3
fisubl
fisttpl
lods
jg
icebp
call
cmp
lret
ret
fcomip
jg
adc
push
loopne
pop
js
sbb
icebp
ljmp
sub
jg
std
sbb
push
fsubrl
cwtl
ret
cwtl
pop
call
incl
mov
in
mov
pop
jnp
push
int3
cmp
inc
test
ljmp
xor
sub
ret
add
dec
idiv
jbe
jb
xor
in
out
lods
push
or
jg
pushl
icebp
imul
mov
out
or
sub
daa
push
mov
sub
adc
je
mov
mov
inc
jmp
add
scas
mov
ret
or
inc
cld
mov
subb
jb
outsl
sarl
call
cmp
jmp
test
xor
sbb
call
and
jecxz
push
mov
ret
ja
popa
jecxz
jns
fldl
mov
add
into
sbb
pop
pop
cwtl
adc
sub
arpl
cltd
jnp
jb
insl
cmc
insb
lahf
ss
ret
cmp
jmp
pop
out
test
or
jge
pop
sub
mov
fdivrp
ljmp
aaa
sbb
das
dec
stos
into
xor
pushf
push
xor
cld
mov
sub
xor
cli
loopne
subb
mov
inc
ja
mov
sti
in
adc
test
inc
sub
mov
cmp
in
add
sub
addr16
jg
std
adc
cmpsb
mov
scas
and
shl
pop
fcoms
sub
pushf
xchg
adc
sbb
pushl
imul
adc
out
jnp
fwait
dec
cltd
dec
mov
pop
dec
or
call
stos
mov
sar
cmp
push
in
add
push
mov
incl
aaa
daa
fistl
dec
cmp
cmpsl
loope
or
mov
mov
jne
ror
and
incl
insl
adc
jae
cmpsl
ja
push
fidivrs
mov
or
xchg
inc
dec
enter
adc
ret
stos
mov
pop
jl
loope
mov
and
pop
rcrb
or
add
jg
aaa
push
adc
jnp
or
aaa
js
pop
outsl
jmp
adc
call
outsl
dec
dec
outsb
sub
sbb
mov
sbb
ljmp
jl
movsl
mov
mov
jnp
sub
sbb
ljmp
pop
fdivrp
pop
addr16
dec
adc
int3
and
cmp
sbb
inc
or
lret
clc
call
dec
dec
jmp
lods
loopne
xor
or
add
bound
push
or
ljmp
and
scas
scas
arpl
mov
sti
shrl
jbe
hlt
out
icebp
cmpsb
adc
cmp
pop
mov
or
imulb
lock
inc
arpl
rcr
mov
pop
dec
mov
leave
loope
pushf
pop
in
dec
or
outsl
push
iret
imul
jmp
mov
sub
mov
pop
jo
jne
arpl
cmp
clc
sbb
cli
cmp
or
sbb
xchg
sbb
addl
xchg
mov
push
sti
testl
and
xor
jae
cmp
ljmp
jns
xor
xor
mov
lea
js
sub
decl
in
hlt
into
adc
fstpl
push
push
pushl
orb
mov
sbb
adc
lcall
outsb
sbb
std
repz
mov
mov
or
bound
fwait
call
jecxz
mov
inc
cltd
lods
pop
add
fsts
stos
iret
fucomp
mov
idiv
call
cld
add
fsts
mov
out
dec
push
in
mov
rcr
adc
dec
mov
mov
call
mov
or
fsubrl
inc
xchg
hlt
pop
push
js
push
shll
and
incl
pop
pop
loope
in
inc
mov
pop
stos
fstl
cmpsl
xor
mov
iret
add
pushl
mov
sub
movsl
inc
aad
movsl
mov
xchg
xchg
xchg
cld
adc
inc
pushf
lret
cmpsl
pushf
rcll
stc
xor
dec
in
mov
mov
lods
fs
ljmp
fstpl
push
add
movsb
sub
pushf
jno
adc
sub
fwait
push
add
std
jl
fisttpl
or
cmp
push
inc
je
inc
rol
inc
jnp
ljmp
or
cmp
mov
incl
push
sar
mov
push
adc
cmp
jb
decl
mov
int
adc
std
jle
xor
shlb
mov
adc
decl
lock
or
inc
push
pop
into
in
shlb
rol
adc
inc
push
sub
repnz
mov
decl
pop
repnz
in
sub
out
pusha
imull
adc
andl
decl
inc
inc
xor
jecxz
jns
daa
jecxz
lock
nop
popf
ror
or
lcall
inc
cmp
inc
ret
sbb
pop
jnp
pusha
bound
and
jmp
add
call
mov
jae
loope
dec
divb
cmpb
lcall
jbe
call
and
and
jns
pop
jbe
ret
xor
or
pop
mov
in
xor
xor
jmp
xchg
fiaddl
scas
pushf
imull
call
and
adc
subb
aas
xor
mov
add
xchg
bnd
into
in
rclb
push
sbb
dec
jge
fildll
lret
jno
mov
scas
xor
sub
jge
inc
jnp
dec
cmpb
ljmp
cli
loope
imull
mov
stos
mov
push
jl
push
jge
sbb
jge
sti
mov
and
paddsb
movb
enter
test
mov
add
mov
sub
adc
in
xor
addr16
sbb
div
aaa
add
incl
pop
repz
in
pop
mov
lods
mov
jg
pop
jne
outsl
lea
dec
lods
push
xchg
and
and
lock
mov
pop
cmc
lcall
jg
or
pop
faddp
jnp
jns
sahf
das
arpl
ds
decl
cmp
daa
and
out
enter
jbe
dec
and
jg
int3
or
add
int
or
lods
js
lret
lods
dec
xor
adcl
popf
push
decl
fsubrl
insl
loop
addl
ja
adc
xlat
dec
inc
jle
adc
pop
pop
jmp
call
and
leave
and
dec
sbb
lds
or
pop
adc
seto
stc
test
fiadds
push
mov
call
or
mov
cli
decl
rcl
mov
push
cmp
mov
scas
sub
daa
cmp
sarb
cmp
jmp
jne
adc
insb
imul
das
ret
jbe
cwtl
stc
lea
in
inc
cltd
inc
in
ret
popf
xlat
rcrl
inc
and
cmp
jge
add
sub
mov
xor
fnstcw
sahf
scas
movsb
xor
out
xchg
xchg
rclb
xchg
mov
loope
aad
les
mov
sbb
rcrl
js
add
mov
dec
or
mov
into
jae
and
enter
decl
pop
es
or
jb
rorb
jb
loop
and
cli
test
sti
add
loope
adc
push
dec
pop
fdivrs
ljmp
shlb
jb
repnz
insl
mov
sbb
test
mov
mov
dec
add
pop
mov
in
cli
mov
push
jnp
dec
jno
pushl
call
fsubl
mov
cmp
pop
inc
subl
mov
lahf
cwtl
mov
int3
xor
xor
adc
jge
sahf
or
inc
push
stc
lods
mov
fs
test
mov
inc
xchg
push
into
sub
sahf
sbb
fsub
inc
movsl
or
sahf
mov
fs
cmp
sbb
inc
inc
sti
xlat
pusha
mov
movsl
add
ljmp
ja
pop
push
in
mov
call
adc
xchg
mov
mov
lcall
sbb
outsl
push
inc
inc
dec
lcall
and
push
or
adc
lods
xchg
mov
loop
outsl
clc
call
int3
mov
cmp
sub
lea
cwtl
dec
adc
cmp
push
adc
lock
jmp
sti
das
cmpsb
add
sub
sub
push
jg
cmp
mov
mov
sub
mov
outsl
xchg
xchg
aaa
ret
jmp
mov
add
or
lods
inc
das
inc
aam
cmpl
bound
pop
loop
inc
call
into
aas
subl
dec
push
mov
mov
hlt
push
mov
and
sbb
cli
int
gs
xlat
aam
xor
repnz
lcall
mov
mov
push
pushf
in
out
xchg
inc
jl
push
push
icebp
fwait
push
clc
pushl
cmc
jb
dec
add
hlt
leave
dec
xchg
jo
push
ds
in
ret
and
fwait
mov
aas
pop
stos
jbe
lahf
and
sub
mov
xchg
paddd
pop
lahf
adcl
ss
in
push
jno
inc
sbb
iret
mov
lock
cmpsb
lock
ficomps
xor
ljmp
call
int3
push
cli
xor
sbb
ss
inc
js
pop
rep
enter
divl
mov
ret
imul
daa
jg
add
decl
shlb
into
or
subb
mov
and
out
sub
movsb
ljmp
sbb
dec
xor
add
xchg
cmp
jmp
add
int
inc
jl
mov
lcall
mov
lahf
cmpsb
jecxz
fildll
js
sbb
int3
push
sub
xchg
sarb
ljmp
subl
adc
aad
jnp
fsts
dec
adc
js
pop
cmc
cmp
sub
mov
mov
jnp
mov
inc
sub
ljmp
aaa
int
lea
repnz
cwtl
sub
pusha
stos
fisttpl
jo
test
mov
add
sbb
xchg
cmpsl
jmp
hlt
jmp
push
jle
and
mov
cmp
dec
adc
insb
xor
cli
push
out
xor
cli
jbe
sbb
dec
ret
lcall
push
mov
add
aad
add
adc
mov
inc
setg
ret
xchg
cmp
cmpl
push
xor
or
cltd
push
pop
jecxz
lods
fwait
cmpsl
pop
xor
ljmp
jmp
mov
cmpsl
enter
aad
cmp
push
mov
cmp
adc
ds
lcall
fsubl
js
fidivrs
ljmp
imul
loope
lcall
scas
sub
mov
rcrl
shl
cmc
test
je
lret
inc
in
out
clc
jmp
icebp
push
fsts
xchg
push
les
mov
enter
mov
sar
decl
aas
sahf
in
fs
mov
inc
test
adc
sbb
pop
inc
aaa
les
push
dec
jns,pn
pop
cld
ljmp
int3
pop
test
pop
lods
enter
or
testb
out
cli
cmpsb
sbb
mov
lahf
call
rcll
jmp
pop
xchg
inc
mov
dec
mov
aaa
gs
test
mov
pop
add
mov
aam
movd
lret
xor
out
fistpll
push
inc
daa
mov
adc
mov
push
in
fistps
test
cmp
daa
into
mov
dec
and
mov
pushl
push
lock
add
das
lods
xchg
sbb
lds
andl
pop
inc
mov
loope
xchg
jp
bound
pop
xlat
sub
mov
cld
push
lcall
stc
sub
push
int
stos
jo
faddl
daa
jmp
fldenv
repz
xchg
lcall
test
lcall
cmp
dec
dec
inc
shl
mov
cmpps
pop
and
inc
push
ljmp
sbb
sbb
andl
std
cs
xor
add
ljmp
fstl
test
push
adc
jnp
out
add
lcall
cmp
enter
stos
sbb
ret
jo
inc
fistpl
out
sbb
jmp
js
enter
dec
lret
xchg
lock
push
mov
frstor
neg
xor
pushl
std
jp
mov
jb
ss
sbb
mov
mov
cmp
mov
aad
stos
insb
cmp
les
loop
outsb
mov
lahf
cmp
lcall
enter
xchg
push
scas
orb
lahf
inc
jl
test
addr16
test
jmp
mov
imul
hlt
out
or
add
fists
scas
ljmp
lods
sub
aam
sub
loope
add
mov
xor
sbb
mul
lahf
dec
add
shl
loop
jno
ljmp
dec
jno
push
scas
and
dec
sar
fdivl
cs
lcall
adc
add
decl
insl
pop
aas
test
out
sub
inc
fs
cld
push
lret
sub
and
ss
dec
add
mov
popa
stc
shrb
out
call
fisttps
mov
add
and
jecxz
stos
stos
addl
dec
pop
sbb
ljmp
sahf
ret
cmp
mov
addr16
test
xchg
mov
push
add
std
adc
sub
add
leave
add
pop
das
in
popf
call
clc
cmpsb
decl
bound
inc
inc
jns
mov
cmp
and
pop
ss
add
lret
push
fdivs
ljmp
loope
xor
or
push
jge
jno
data16
out
adc
mov
pop
es
ljmp
stos
or
dec
mov
xor
int3
es
repnz
jmp
loope
sbb
and
sub
add
movsl
or
fdivr
xlat
je
bound
leave
call
ljmp
bound
rorl
js
adc
sub
clc
pushl
jo
ret
fs
dec
xchg
andl
test
rcrb
addr16
aad
push
lcall
cmpsb
pushf
repnz
popa
repz
repz
inc
mov
rorl
rcr
repnz
loope
inc
jmp
or
decl
fwait
in
icebp
and
adc
frstor
dec
fistpl
and
jg
stos
xlat
dec
fcomps
cmovne
sub
outsl
mov
stc
sub
fs
icebp
push
into
rcll
pushl
std
data16
repz
push
add
test
out
clc
dec
sar
sbb
push
jecxz
jbe
adc
mov
cmc
mov
jg
sub
repz
loopne
pop
rorl
mov
sbb
dec
and
lcall
insb
pop
push
iret
fcompl
xor
jg
jbe
mov
call
test
into
sbb
adc
shll
or
jo
push
daa
xor
pop
mov
fucomi
mov
call
in
js
inc
adcb
jp
repz
mov
push
subb
mov
imul
sub
movsb
xor
dec
aas
fsubrs
lcall
mov
sub
into
push
mov
call
ret
or
incl
pop
or
cmc
adc
pop
jecxz
sbb
lock
mov
pop
cmp
pop
xchg
push
xchg
cmp
repz
ja
cs
xchg
adc
dec
arpl
imul
data16
or
xor
cmp
cmp
cs
outsl
icebp
lcall
or
orl
push
sbb
pop
insb
add
aaa
pop
stos
or
scas
clc
sbb
sub
push
and
mov
mov
test
pop
mov
incl
or
mov
addr16
or
insl
pop
mov
test
jg
push
data16
ficomps
dec
xor
and
divps
mov
imul
jbe
adc
sub
dec
repnz
mov
inc
pop
mov
add
sti
stos
in
pushl
dec
or
xor
cmp
sbb
inc
adc
push
mov
mov
pop
cmp
mov
xchg
push
jbe
fldcw
ficoms
js
mov
jmp
mov
pop
or
lcall
xchg
xchg
push
rcrb
or
cli
outsb
loope
xor
jmp
fsts
mov
mov
and
dec
push
decl
cmp
or
out
insb
loop
mov
lahf
icebp
loopne
loop
mov
jb
xchg
stos
and
xor
aad
xchg
xchg
cmpsl
jb
call
dec
in
adc
scas
icebp
pop
mov
mov
imul
and
hlt
cwtl
aaa
data16
decl
sbb
jg
xorl
mov
jmp
push
adc
and
out
repnz
icebp
xchg
pop
stc
xchg
testb
es
das
sar
pushl
push
mov
decb
arpl
sub
call
mov
mov
notb
mov
std
mov
aam
mov
jb
and
xchg
push
loope
aam
ds
xchg
fidivrs
cmp
pop
in
push
test
mov
dec
adc
aaa
lea
sbbl
adcb
incl
cmpsb
adc
out
stos
sbb
xchg
jl
gs
sti
fcmovbe
stos
sub
popa
xlat
test
add
jg
cltd
sub
mov
fistpl
inc
insl
out
pop
lods
ds
mov
or
jg
call
std
lock
sbb
das
std
int
ljmp
pusha
lret
ret
push
ljmp
or
pushf
rorl
dec
jg
xor
jmp
cmp
jns
imul
sbbb
jno
stos
sbb
adc
pop
push
mov
lods
incl
insl
mov
xchg
sti
sub
fwait
shlb
lods
push
rcll
pop
pushl
add
pop
xlat
sub
flds
cs
xchg
push
mov
sbb
in
cwtl
fwait
pop
jae
inc
sub
inc
pushf
inc
xchg
ljmp
mov
dec
fadd
cmp
ss
nop
mov
mov
xchg
mov
cmpsb
add
push
mov
adc
sub
inc
mov
jecxz
cmp
int3
push
mov
pushl
mov
ss
cmp
jne
lret
push
insl
shll
daa
mov
mov
loope
ljmp
xor
and
pop
aaa
lds
pushf
sub
or
decl
cld
cmp
fnstenv
movsb
fwait
cmp
mov
int3
push
mov
in
mov
pushl
dec
ss
xchg
or
jns
movsl
mov
out
mov
jns
decl
addr16
pop
jb
rcrb
or
aam
dec
dec
pop
in
adc
xchg
inc
inc
mov
call
jbe
dec
xchg
cmc
mov
dec
and
xchg
rclb
cmp
push
dec
jo
xchg
jg
fmuls
das
mov
data16
jnp
adc
sar
add
xor
add
pushl
pop
add
jbe
xor
mov
ret
clc
jmp
pop
inc
sar
adc
add
js
cmc
cs
sbb
fidivs
sub
push
in
adc
loopne
inc
popf
xor
mov
aam
out
mov
jmp
mov
mov
cs
jg
clc
pop
sahf
and
mov
mov
rcl
jae
xor
mov
test
pop
hlt
decl
ds
jp
adc
cmp
xor
js
sub
addl
aam
jnp
mov
sahf
add
jg
and
cmc
out
sarb
ljmp
xor
out
cmp
sti
mov
push
inc
std
test
jg
or
out
jae
push
mov
jmp
rol
jmp
jnp
sti
or
dec
xchg
mov
decl
mov
mov
sub
xchg
xor
jle
sub
jb
out
insb
in
aaa
lcall
fbstp
shrb
in
and
jecxz
sub
sti
sti
lds
call
test
xor
clc
cmpsl
enter
gs
imul
mov
into
nop
jg
int3
xor
dec
test
inc
jns
in
and
sub
imul
lret
jge
mov
and
jmp
les
fdivrl
aad
ss
xor
je
or
out
sbb
in
jmp
jle
jecxz
sahf
call
push
cmp
push
xlat
sub
outsl
inc
adc
ret
inc
jg
cmpsl
push
adcb
sarb
pop
jmp
sbb
leave
in
js
pop
mov
add
incl
inc
pop
js
mov
inc
shll
push
cld
adc
insl
shll
in
pop
icebp
jg
stc
lds
push
add
cld
pop
shlb
ds
inc
mov
mov
jmp
sbb
ja
mov
cmpsl
fisubs
sub
insb
adc
inc
insl
mov
decl
or
jnp
test
inc
rol
push
outsl
aad
mov
daa
aaa
pop
jl
scas
cli
decl
pop
icebp
push
lea
mov
mov
mov
clc
jnp
sbb
xchg
repnz
jne
cmp
pop
movsl
mov
movsb
sbb
cmp
pushl
jno
leave
dec
cmp
imulb
imul
pop
aaa
les
pop
call
std
stos
stos
es
push
add
fwait
out
mov
mov
out
icebp
decl
jp
mov
clc
pop
shll
std
adc
mov
fisttps
sub
ss
movl
mov
xor
test
imul
jmp
dec
lahf
add
sbb
scas
jmp
shrb
cmc
jno
not
push
scas
mov
mov
js
jbe
push
dec
jmp
in
push
cwtl
mov
mov
inc
cld
adcl
sub
jns
loope
sbb
mov
call
mov
cwtl
add
test
fbstp
push
lret
mov
jmp
mov
jne
pop
and
fimull
hlt
add
or
mov
shr
sbb
es
repnz
leave
call
and
ss
jne
or
lcall
imul
jno
dec
call
fwait
mov
and
clc
inc
imul
ret
or
std
sti
pushf
push
ret
sti
in
int
sbb
test
stos
fucomp
andb
or
jg
stc
pop
out
xor
mov
and
in
gs
movsb
mov
in
xchg
cmpsl
fwait
add
pushl
addr16
xor
rol
movsb
data16
mov
imul
decl
hlt
or
mov
jbe
cwtl
or
jg
out
pop
in
mov
movsb
mov
sarb
mov
jl
shll
sbb
leave
xor
cmp
dec
cltd
out
shrl
ss
sbbb
sbb
lods
xchg
ror
fnstenv
pop
xchg
mov
xor
fistps
lret
jge
add
adc
mov
cld
adc
cmpsb
sbb
or
adc
lcall
pop
push
fs
repnz
repnz
cmp
ret
test
fs
es
mov
cld
push
cld
and
push
push
cmp
jg
and
xchg
fsubrs
xchg
out
bound
arpl
in
mov
test
mov
jmp
pop
shll
insb
dec
push
loope
xchg
cmc
inc
jae
xchg
fs
xchg
pushl
rolb
jle
fbstp
cld
xchg
push
and
je
dec
lcall
loop
daa
mov
lea
jns
sahf
dec
inc
pop
pop
add
push
jge
pop
mov
inc
pop
outsl
repnz
ret
xchg
fwait
jmp
mov
cmp
popa
enter
iret
push
pop
mov
mov
inc
mov
icebp
stc
int
insb
sbb
jle
adc
dec
aas
clc
data16
in
mov
loope
push
push
aaa
cmp
push
out
fst
mov
les
or
xchg
incl
fmull
or
sbb
fstl
aaa
xor
into
mov
cltd
aad
in
mov
ljmp
sbb
fdivl
repz
ret
out
push
hlt
push
loope
jp
enterw
sbb
cmp
fsubl
movsl
aas
jp
sub
sub
jne
inc
mov
out
adc
je
and
clc
fs
jo
jle
insb
movsb
mov
lods
cmpsb
dec
xor
repz
ljmp
decb
in
dec
jno
jns
cli
sbb
pop
mov
and
mov
nop
cmp
arpl
cmp
jmp
cs
cmp
xor
js
mov
addr16
push
dec
pop
ficompl
pushl
std
xchg
pop
imul
scas
scas
mov
push
cmp
pop
pushf
jmp
int3
loop
test
mov
mov
inc
je
ljmp
sub
mov
xchg
sub
mov
jmp
dec
ss
ds
call
push
lahf
enter
fld
lahf
pop
adc
scas
add
shll
shll
ljmp
movsb
inc
jg
decl
fs
xchg
xchg
int3
hlt
xchg
inc
jne
xor
es
shlb
inc
xchg
cld
testl
loopne
sbb
mov
loopne
jb
bound
sub
out
lcall
and
and
push
aaa
test
sbb
mov
es
lcall
jo
mov
xor
mov
sahf
in
adc
or
in
mov
in
jmp
out
or
mov
mov
add
lret
lret
sbb
xchg
ljmp
sbb
inc
mov
sub
inc
push
dec
gs
cmpl
inc
rorl
xchg
es
dec
loope
fwait
mov
jl
iret
pop
insb
jg
pushl
into
and
push
add
loopne
add
jne
jno
ljmp
sbb
rcrb
cmp
lcall
movsb
or
mov
rorl
ret
sbb
popa
add
outsl
hlt
hlt
push
pop
pusha
inc
pop
mov
roll
mov
inc
lock
pop
mov
push
clc
mov
cmp
cs
jg
ljmp
enter
add
aam
ficoml
aam
add
push
xchg
mov
clc
inc
xchg
aam
mov
leave
std
xchg
mov
xchg
push
adc
sar
das
repnz
cltd
xor
out
mov
and
add
mov
roll
mov
ret
hlt
inc
adc
out
stos
inc
xchg
inc
or
lcall
sub
cmp
xlat
adc
inc
ret
pushf
std
aad
inc
cmp
adc
aam
jb
sbb
call
jp
aas
pop
cltd
cmc
mov
fmuls
fisttps
cmp
aam
or
lcall
sub
xchg
or
aaa
jb
adc
jae
hlt
push
into
cld
dec
mov
rclb
sbb
aam
icebp
jmp
shl
fcmovnbe
arpl
int
xchg
out
or
pop
sahf
roll
mov
lcall
xchg
and
rep
adc
loope
das
inc
cmpsl
push
test
in
ljmp
inc
test
cld
xorb
and
subl
push
test
adcb
decl
cmp
fsub
adc
mov
fcoml
push
mov
decl
and
lods
aam
scas
mov
xlat
add
jmp
mov
pushf
dec
std
push
out
cmp
mov
test
jmp
xchg
lcall
loopne
mov
inc
test
pushl
shrl
inc
stos
mov
cmpsl
loop
aad
bound
cs
dec
scas
mov
and
rcr
cmp
out
inc
mov
jae
pusha
sub
shll
xchg
inc
lcall
mov
fucomp
in
mov
jns
mov
fwait
add
pusha
stc
pushf
fisttps
adc
dec
adc
lods
sbb
sbb
push
jne
pop
mov
outsl
mov
pop
outsb
jbe
mov
push
ret
sub
into
sub
fwait
cmp
lea
bnd
inc
fstpl
mov
mov
sbb
xchg
in
dec
addr16
pushf
mov
sub
cmpsl
cmp
xor
aaa
cld
ljmp
pusha
mov
out
xchg
repnz
lcall
call
xchg
inc
push
pop
out
pop
mov
xchg
jnp
pop
movsl
dec
pop
sub
xchg
cli
es
cmp
xlat
cs
cmp
insl
cwtl
xorb
xchg
mov
daa
or
xor
decl
ss
or
and
push
fisubl
sub
popf
and
mov
fldenv
xchg
jnp
cmp
cld
jmp
popf
outsl
pop
sbb
sahf
ret
inc
xchg
scas
cli
ret
mov
pop
test
jmp
push
add
mov
movsb
push
mov
and
insb
stos
out
sarb
and
mov
inc
shll
data16
sbb
mov
jnp
ret
loope
jecxz
call
hlt
adc
sub
imul
out
jg
add
stc
and
decl
and
dec
pop
xchg
jmp
dec
pop
xor
out
cli
mov
dec
xchg
iret
enter
adc
pop
inc
mov
lock
shl
push
sbb
cs
pop
data16
sub
shrb
push
xor
jo
adc
stos
sbb
movsb
dec
inc
out
cld
lahf
gs
call
jl
jae
outsl
push
mov
push
sub
inc
pop
pop
in
das
clc
lods
jno
push
out
dec
pop
fistpll
lds
mov
push
inc
popf
je
xchg
sub
cmp
jmp
dec
aad
stos
push
stos
repnz
arpl
les
or
movsb
jo
ljmp
mov
xchg
out
or
insb
inc
mov
sbb
push
mov
adc
lea
xchg
bnd
fcomip
fmull
xor
adc
xchg
jb
sbb
add
sub
out
inc
jb
jmp
push
adc
inc
adc
into
push
sahf
loop
cmp
ljmp
pop
sbb
pop
dec
mov
mov
rorb
gs
cltd
outsb
addr16
lahf
dec
hlt
pop
call
xchg
push
inc
mov
cltd
fnstsw
mov
push
fwait
out
insl
dec
cmp
arpl
decl
lock
insb
and
jo
imul
aad
shlb
push
in
push
pop
fwait
test
icebp
inc
not
sti
mov
cmp
dec
mov
xchg
jmp
out
fstpl
loop
and
arpl
push
hlt
das
movsl
mov
pop
out
jb
lret
in
decl
pop
dec
jmp
lea
pop
sub
push
push
fidivrl
sub
cli
les
push
mov
sbb
inc
stos
pusha
add
xlat
and
or
incl
fisttpll
outsb
cltd
lret
push
fidivrl
add
jbe
out
and
mov
inc
mov
or
insb
xor
ds
popa
or
jg
bound
push
jns
adc
jnp
arpl
arpl
loope
mov
jno
mov
stos
incl
inc
scas
pop
or
add
push
jge
pop
inc
sub
jns
fwait
call
stc
mov
xchg
frstor
fdivrp
xchg
fnsave
rolb
imul
cmp
sub
jecxz
call
mov
sahf
or
cmc
pusha
leave
dec
out
or
stos
ds
fisubs
decl
repz
adc
pusha
outsl
test
and
out
test
inc
jge
jp
incl
out
jl
add
or
pop
push
insl
xor
push
ljmp
jmp
sub
push
jo
lods
call
and
out
shrl
jg
cmc
icebp
mov
je
cmp
mov
sarb
pushl
or
rclb
loop
daa
inc
xor
insl
ljmp
imul
ljmp
ror
sub
cltd
add
lods
xchg
bswap
fs
sbb
cmp
lods
outsl
lods
and
ret
ljmp
and
jle
test
dec
pop
inc
xor
push
aaa
loopne
xchg
add
jle
xor
dec
pop
inc
cwtl
out
inc
loope
mov
push
out
mov
in
add
lea
pop
in
mov
jmp
sub
and
sub
aad
test
adc
ss
std
dec
arpl
movsb
push
test
xchg
lods
sub
fmull
sbb
xor
dec
jnp
shll
repnz
push
mov
icebp
xor
cld
incl
push
std
xchg
pop
sub
pop
sub
addl
subl
adc
inc
popf
sub
lcall
mov
roll
ja
cmp
cmc
es
and
and
xchg
in
lahf
mov
bound
hlt
ds
mov
pop
out
clc
out
into
arpl
sahf
call
stc
cmp
fwait
das
mov
pushl
sahf
js
sub
idivl
and
roll
mov
in
xchg
mov
mov
mov
jg
add
pop
inc
outsl
xchg
imul
mov
lock
xchg
loope
or
cwtl
pop
mov
push
rorb
inc
jns
lcall
mov
sbb
std
aad
and
pushl
mov
xchg
sub
dec
jmp
xor
out
hlt
sbb
lcall
inc
in
add
clc
test
hlt
or
jl
in
inc
dec
jg
pushl
pop
jno
pop
icebp
push
push
jl
pop
ja
and
popl
jle
popf
or
jmp
jne
cli
sti
jbe
adc
pusha
xchg
mov
jae
mov
call
jmp
mov
mov
cs
fstp
stos
mov
ss
jnp
mov
jge
xchg
std
lcall
push
push
xor
push
movsb
insl
lock
mov
jbe
mov
or
adc
mov
add
push
pop
cmpsl
aad
call
call
sbb
xchg
xlat
sub
mov
push
sub
out
adc
roll
bound
call
push
test
popw
push
je
adc
mov
movsl
enter
cmp
pop
lcall
add
sbb
les
cmp
fdivs
ljmp
mov
sti
fistpl
int3
sub
lahf
daa
js
ljmp
lcall
daa
jl
xchg
rcll
push
sub
scas
lods
scas
int3
jl
cmpsl
inc
mov
lcall
repz
xor
mov
test
xchg
nop
les
punpcklwd
lcall
ficoms
xchg
jecxz
setg
inc
lock
dec
and
adc
in
out
loop
imul
repz
sbb
repnz
or
dec
push
arpl
mov
push
jns
mov
sbb
cmc
cli
sbb
or
ljmp
sub
mov
loope
call
lds
dec
jl
test
sub
out
ret
rolb
cmp
lcall
call
add
cmpsb
scas
or
xlat
add
push
push
sbb
or
jmp
xchg
mov
sti
inc
ljmp
cs
dec
lods
mov
jne
xchg
insl
jmp
std
xlat
or
jmp
jne
push
ret
xor
mov
leave
mov
pushl
inc
fwait
in
out
xor
and
xor
rcll
sbb
cld
and
lcall
ljmp
lahf
mov
and
pop
push
adc
cld
cmpsl
ret
stos
pop
push
ljmp
sti
mov
test
pop
mull
add
add
cltd
test
call
test
xor
or
add
ret
test
call
in
cli
sbb
cmpl
add
pusha
cmpsl
imul
xchg
inc
push
dec
add
incl
dec
aaa
and
ljmp
rorl
cmp
adc
adc
in
stc
inc
jmp
call
out
gs
sub
movsl
outsl
leave
inc
loop
leave
inc
sub
loopne
enter
sbb
outsb
mov
ljmp
sbb
mov
xchg
mov
cmp
mov
nop
mov
cmpsb
mov
jo
mov
mov
cs
fdivs
mov
cmp
insb
std
cld
xor
jne
pop
push
idiv
sbb
mov
jp
mov
xchg
or
sub
cltd
add
add
decl
and
cmp
int3
jmp
dec
inc
mov
mov
sarl
nop
fiadds
call
mov
cmp
sbb
loope
movsb
jg
decb
jl
or
je
cltd
cli
lea
mov
add
jmp
sub
xchg
sbb
cmp
mov
xchg
ret
jge
fsubrs
enter
xor
idiv
mov
mov
push
shll
nop
andb
addb
hlt
cmpl
call
pop
inc
push
ds
ja
adc
xchg
xor
mov
pop
adc
mov
mov
inc
pop
call
and
xor
cmp
out
jnp
jae
in
sbb
push
in
pop
outsb
jle
test
mov
jp
pushf
loop
fldenv
or
pop
stos
adc
aam
sbb
movsl
stc
adc
ljmp
or
jno
sbb
aad
pop
scas
or
push
icebp
adc
mov
fs
mov
rcrl
add
inc
addr16
aad
mov
inc
jns
cmp
sub
dec
push
dec
mov
cmp
icebp
rol
mov
ljmp
loopne
into
and
ret
lds
add
negl
add
imul
ljmp
ljmp
xor
xlat
cli
push
cwtl
push
inc
or
pushl
dec
pop
std
xor
mov
pushl
dec
sbb
cmpsl
ja
aas
shrl
notb
test
pop
cmp
and
push
jns
test
rcrl
stc
push
jae
mov
std
ljmp
sahf
xchg
cmp
imul
scas
leave
arpl
rorb
jmp
nop
iret
jl
cmpsb
rclb
mov
push
aas
pop
lea
data16
call
jnp
mov
bound
lret
sbb
shrl
xchg
in
cmpsb
inc
or
xor
mov
decl
enter
test
or
dec
add
ljmp
iret
fs
les
sub
dec
add
es
push
pop
roll
sbb
icebp
jmp
sub
cmpsb
dec
xchg
pop
je
fistps
push
dec
cs
mov
ss
mov
ja
je
jnp
shlb
sub
and
je
lahf
pushf
enter
jmp
jb
and
sub
pop
js
scas
pop
jg
push
add
aas
jl
xchg
lods
pop
cli
aam
mov
push
inc
pusha
or
push
ja
inc
cmp
aas
lds
popf
cmpsb
xor
lret
dec
jle
cmp
cli
faddl
imul
adc
cmp
dec
add
sar
aaa
out
shrb
inc
outsb
mov
pop
in
jge
add
out
adc
jg
ret
cmp
std
data16
xor
cmp
fcomip
cmp
aad
push
lret
cmpsb
jecxz
mov
imul
xor
xchg
int3
jo
mov
inc
enter
fidivrl
je
push
push
push
ljmp
lods
aas
and
inc
fadds
lock
xlat
add
mov
pushl
or
jmp
push
cmpb
pop
ret
outsl
call
cld
sbb
xchg
push
mov
xor
es
or
adc
fcomip
incl
movq
cmp
rol
jle
popl
dec
aam
xchg
loop
jg
mov
inc
pop
push
xor
cmp
sub
sbb
int3
insb
xchg
pushf
jmp
adc
imul
adc
lret
cmp
mov
mov
fisttps
push
sbb
das
loope
adc
pop
push
xor
sarl
je
ljmp
push
aaa
mov
jge
mov
in
fdivrs
push
inc
mov
push
xchg
roll
push
push
test
sbb
lcall
shrl
bound
scas
lods
or
filds
sbb
ror
jo
int
incb
imul
ret
daa
stos
pop
les
call
cwtl
pop
out
cmp
fwait
cltd
movsl
cmpb
mov
mov
addr16
xchg
fiadds
adc
cwtl
call
inc
and
in
pop
xlat
ds
push
cmp
in
add
lcall
or
and
jmp
outsb
shrb
in
loop
cmpsl
dec
or
jl
xchg
mov
in
or
sbb
push
test
ja
inc
push
out
jno
cmp
dec
inc
aam
andl
ss
test
sbb
mov
push
pushl
sbb
insb
jmp
lret
push
push
aaa
mov
cmpsl
push
xor
cmp
decl
cmp
xchg
push
bound
xchg
mov
jmp
lret
bound
loope
inc
xor
fstl
lret
loope
push
movl
out
out
mov
push
fidivs
xchg
jns
mov
or
frstor
repnz
dec
jbe
mov
repz
cmp
decl
lds
cmpsb
and
ret
fs
lcall
ret
adc
movsb
mov
imul
decl
and
rcrl
icebp
cli
or
sub
adc
mov
repz
push
inc
jae
xchg
out
insb
nop
mov
dec
push
cld
icebp
cs
dec
pop
push
inc
or
mov
int
incl
xchg
push
and
lea
and
filds
test
and
test
sub
inc
jl
sbb
fnsetpm(287
ss
xor
in
dec
popa
pusha
cmpb
xor
adc
mov
popf
lret
mov
ljmp
inc
jb
mov
test
sbb
inc
xor
jb
mov
xchg
xchg
rol
jg
ds
rorb
outsb
push
sub
int3
aam
or
outsl
es
in
and
fs
jne
testl
jnp
mov
mov
call
cs
roll
pop
mov
dec
mov
lock
incl
sbb
mov
mov
add
cld
notb
xor
outsb
mov
pop
scas
mov
outsl
xor
xchg
js
inc
dec
jle
sarl
add
sar
decl
mov
xor
xor
incl
mov
push
xchg
jle
lods
js
nop
mov
add
mov
jo
mov
decl
xor
dec
pop
dec
loopne
les
test
push
xor
int3
out
sbb
mov
insl
sti
data16
mov
adc
mov
stos
in
addr16
sbb
incl
mov
icebp
sub
jae
jg
fildll
pop
adc
or
sub
mov
inc
insb
dec
push
or
imul
mov
or
mov
pop
aam
jle
or
dec
cld
xchg
call
leave
add
fisubrl
xorl
jmp
in
add
sub
sbb
xor
hlt
mov
cmpsb
sbb
mov
and
pushl
add
jno
jo
pop
imul
mov
push
in
rcll
dec
cli
in
mov
inc
lods
sar
cld
movsl
insb
shlb
pop
sarb
or
aas
data16
lock
pop
adc
addr16
lcall
enter
push
jnp
and
ljmp
cmp
xchg
loop
mov
scas
ds
lcall
xor
xor
or
pop
loope
sti
outsb
sbb
xchg
mov
clc
lcall
and
rorl
cmc
cld
imul
cmp
scas
lcall
xchg
clc
jg
je
adc
out
dec
pop
push
leave
xor
pusha
cmpsl
ja
xor
popa
call
cli
subb
jg
or
test
ds
add
push
pop
xchg
incl
sub
mov
sub
js
pop
pop
xor
divl
or
incl
repz
and
arpl
pop
mov
xchg
lods
mov
ljmp
xlat
add
mov
mov
sbb
push
stc
movsl
add
sub
pop
push
vprotw
daa
sbb
jg
dec
cli
mov
incl
dec
je
adc
push
subb
stc
into
ds
and
adc
sbb
clc
cmp
dec
lahf
jns
inc
cmpsb
cmp
cli
ror
stos
cmp
call
jno
push
add
fldl
imul
dec
mov
mov
mov
ja
adc
nop
pop
je
xchg
stos
mov
lret
jmp
xchg
sbb
out
les
out
inc
outsl
test
pop
ret
loop
push
aaa
xchg
inc
dec
sarl
dec
fdivr
cmpsb
call
div
jae
jg
lret
jg
mov
xchg
jne
ret
adc
xchg
popa
push
xor
inc
push
xchg
xchg
xchg
ret
aas
pop
cmp
adc
add
aam
cld
push
add
lcall
sub
mov
rcll
mov
push
jg
arpl
adc
pop
rclb
incl
aam
insb
sbb
lds
mov
jmp
jno
mov
shll
push
sub
push
sahf
adc
xchg
fists
out
sub
or
jbe
iret
add
mov
mov
setg
hlt
test
pop
mov
cltd
dec
add
pop
jb
xor
ljmp
pushf
mov
nop
and
fcmovnu
push
mov
xchg
cwtl
push
sbb
add
mov
clc
cmpsb
imul
data16
repz
mov
adc
pop
or
fsts
insb
mov
cli
lret
outsb
pop
and
mov
test
pop
inc
sub
aas
mov
or
cwtl
lods
cmpsl
fs
cld
cmp
decl
lods
mov
mov
jecxz
dec
ret
ror
cmp
or
pop
xchg
rolb
mov
aam
or
mov
hlt
inc
xor
add
sbb
cmp
data16
inc
pusha
push
js
push
or
jg
cli
push
imul
inc
jmp
adc
out
mov
cmp
mov
jb
scas
xchg
in
sbb
ljmp
pop
aam
cmp
push
ss
dec
cli
stos
test
lahf
xor
adc
cld
out
jp
sub
ror
xchg
loop
push
lahf
mov
es
push
stc
pushl
jmp
push
inc
sub
mov
lret
addr16
add
jne
int
fmull
pop
or
lcall
ffreep
xchg
out
push
push
jge
push
test
mov
mov
fwait
or
stc
mov
pop
mov
push
bound
out
repz
ds
pop
ja
out
inc
push
pushf
int3
jle
pop
jns
jmp
repnz
mov
nop
aas
jge
out
iret
sub
stos
std
jg
lret
imulb
push
or
idiv
mov
loope
sub
pop
cmp
sub
add
push
jb
or
jmp
out
xchg
addr16
push
out
loope
sbb
stos
adcb
add
mov
ljmp
sub
js
push
enter
mov
inc
cmp
sub
js
out
sub
sti
inc
sbb
pop
pushf
pop
jo
out
ja
daa
addr16
std
arpl
sub
jmp
call
mov
mov
aas
movsl
testl
or
mov
add
adc
stc
add
jbe
aad
movsb
mov
sub
lret
decl
cmp
add
enter
cs
hlt
imul
into
jo
movsb
or
sub
mov
xor
fwait
out
jg
ret
mov
lcall
and
fcmovbe
fs
jnp
inc
pusha
ret
add
movsb
sbbl
movsb
or
pusha
aad
cmc
movsb
inc
xchg
jg
add
xchg
mov
ljmp
pop
xchg
ds
push
mull
outsb
xor
mov
jecxz
pushf
cmp
fcompl
xor
call
add
adc
mov
std
xor
movsb
pop
decl
xor
jo
jnp
inc
dec
jl
ret
pusha
fimuls
jns
clc
adcb
dec
jmp
fstp
sbb
adc
lcall
int
shl
pop
jns
aad
cmp
and
inc
xlat
adc
sti
int3
lcall
aas
out
inc
mov
sub
fcmovnbe
pop
rclb
push
shlb
push
aad
dec
test
sbb
call
decl
mov
pop
adc
loope
cwtl
xor
cld
inc
jns
movsb
cli
cli
cmpl
shll
outsl
pop
insl
pop
push
and
sbb
and
out
int
ljmp
and
sub
cmpsb
mov
mov
jo
xor
mov
pushf
decl
pushf
cmp
psubusw
pop
daa
cwtl
pop
gs
adc
rcrl
outsb
fdivrp
cli
mov
jle
lods
adc
mov
push
cmc
adc
xor
pop
mov
adc
incl
push
push
mov
and
lods
cmc
inc
lods
add
pop
mov
movsl
iret
imul
mov
jle
js
mov
js
rcl
loope
insb
ror
sar
jle
int3
mov
lds
xchg
lds
filds
leave
leave
scas
or
mov
dec
stos
dec
lret
sub
cwtl
stc
cmp
adc
lcall
mov
push
pop
out
and
repz
sbb
subb
jmp
adc
lods
idiv
incl
loope
cmp
js
icebp
inc
cmpsb
loop
add
sbbb
mov
cmpl
lea
or
mov
rorl
cmp
movsb
jnp
jmp
mov
push
and
xchg
insl
popa
jns
cmp
or
mov
mov
ljmp
outsl
jno
sbb
mov
cmpsl
das
mov
or
lcall
add
push
pop
in
ret
xchg
ret
scas
push
lcall
faddl
lods
jb
pushl
repnz
push
subb
mov
test
cmp
mov
incl
aad
pop
int
xchg
or
cmp
cmp
mov
aam
aaa
pop
mov
pushf
movl
inc
scas
ret
pop
and
cmpsb
lcall
xor
ucomiss
mov
cmp
add
cli
aaa
pop
cmc
jb
loope
push
mov
sbb
sub
daa
cmc
ljmp
ss
mov
int
aam
ljmp
incl
sub
sbb
out
andb
popa
add
fwait
push
mov
pop
mov
dec
and
ret
repz
mov
cs
mov
jne
push
les
xor
sbb
mov
mov
es
dec
cld
mov
jl
int3
fnclex
call
jae
dec
pop
frstor
ret
xchg
cltd
pop
lds
clc
cmp
loopne
push
sbb
pop
movsb
push
lret
pop
and
add
fcoms
dec
pop
xor
xchg
stc
pop
pop
js
inc
push
out
ljmp
call
sub
push
dec
xchg
and
sahf
test
mov
add
pop
incl
ja
pop
test
loopne
mov
aam
cmc
jne
mov
pop
testl
mov
lcall
mov
jbe
js
dec
push
pop
seta
pop
imul
lahf
std
or
cltd
fistps
enter
sub
popa
xchg
imul
cmpsl
jp
mov
xchg
loopne
cltd
mov
inc
jo
push
adc
dec
aaa
aad
jne
adc
cmp
or
out
xchg
dec
test
or
ljmp
inc
xchg
iret
lock
leave
loope
sub
mov
mov
and
mov
mov
icebp
nop
mov
fdivl
or
and
decb
jne
xchg
mov
lcall
push
adc
gs
popf
xor
leave
sbb
add
add
sub
imul
adc
ljmp
xchg
lods
popf
push
pop
outsl
ss
std
mov
leave
in
aaa
ljmp
add
jmp
imul
jle
mov
xchg
xchg
pop
mov
mov
int3
jmp
incl
fistps
idivb
adc
and
jno
xchg
je
out
inc
call
lods
or
add
inc
repz
clc
dec
pop
dec
sub
xchg
fistpl
inc
into
jb
jns
fs
mov
push
mov
mov
dec
lahf
ljmp
mov
sub
jmp
xchg
adc
push
jne
and
pop
aad
lcall
mov
and
xor
pop
and
ds
mov
jmp
push
in
lcall
loope
pop
push
pop
push
mov
divl
incl
jb
fmull
inc
frstor
jne
in
sub
faddl
and
cmp
outsl
ljmp
sahf
lret
sbb
mov
and
push
pop
jno
dec
mov
ja
jmp
or
fnstenv
xchg
nop
mov
imul
icebp
mov
call
and
lds
ret
cmpl
mov
popa
dec
je
ds
ss
push
add
aam
test
jecxz
cld
pop
cltd
fs
mov
sbb
jge
mov
and
jmp
jle
add
cwtl
xor
and
imul
push
pop
mov
and
scas
cli
ljmp
fdivrl
dec
movl
sarb
insl
pop
insl
lds
mov
and
lods
data16
daa
pop
inc
inc
xor
dec
inc
jl
loop
mov
push
xchg
aas
sbb
xchg
lock
lahf
stc
or
and
jae
lock
jg
dec
js
test
mov
daa
xchg
insb
and
push
dec
or
decl
or
jae
cli
fidivl
xor
mov
xchg
je
mov
call
mov
inc
sub
mov
mov
sbb
subb
dec
pushl
or
ret
sbb
data16
cli
dec
push
push
aam
stos
dec
call
sti
sbb
mov
incl
cmpb
stos
call
clc
and
and
sahf
xorb
hlt
movb
jmp
pop
sub
xor
and
and
clc
push
and
sub
decl
movsb
adcb
sub
push
stos
lock
repnz
stc
stc
loope
stc
dec
sbb
pop
shrb
inc
pushf
std
push
lahf
adc
inc
or
inc
lret
es
sti
dec
mov
mov
aam
lock
out
bound
cltd
inc
popf
outsl
decl
test
int
jge
jne
and
jmp
pop
sub
loopne
cmp
sbb
int
jmp
mov
sahf
add
mov
jl
test
and
fidivrl
pop
mov
decl
rcr
out
sub
adc
inc
es
dec
xchg
pop
cwtl
out
pushl
cld
adc
outsb
lcall
or
cmpsl
xchg
mov
mov
lcall
ss
clc
pop
divb
addr16
call
mov
dec
int3
lret
mov
lds
lock
je
outsb
arpl
adc
jae
loop
js
inc
lcall
add
ds
subl
daa
cmp
sbb
decl
adc
dec
inc
sbb
hlt
add
inc
sbb
cld
inc
movsl
or
push
lods
incl
shlb
dec
shlb
and
mov
je
out
lret
sbb
movsb
and
decl
pusha
xor
sbb
js
fldt
adc
adc
insb
je
stos
cli
sbb
int3
outsl
jmp
cmpsb
mov
pop
jb
arpl
int3
mov
mov
lret
or
jb
dec
stos
mov
ljmp
cli
nop
inc
dec
mov
sub
sti
adc
xor
sbb
mov
mov
jg
mov
push
outsb
lcall
sti
in
rcrl
mov
iret
dec
dec
aas
sbb
ljmp
arpl
mov
das
pop
dec
sub
addr16
ror
js
ret
loope
hlt
lcall
jne
es
js
push
lock
mov
mov
fdiv
fs
xchg
pop
mov
pop
shld
inc
jl
jmp
xlat
jmp
xchg
pop
cmp
jg
pop
mov
add
into
repz
mov
jg
add
inc
push
push
scas
addl
pop
jnp
xor
add
mov
jne
pop
scas
clc
lcall
push
pop
and
nop
fcmovbe
inc
push
aad
mov
aad
pop
or
cmp
mov
inc
out
pushf
out
mov
sti
int
mov
cmp
test
cmp
fwait
ja
mov
stos
cmp
sub
jl
mov
and
incl
xchg
fisubl
fisubl
jp
sbb
stos
inc
shrl
or
stc
cmp
scas
enter
jo
dec
cli
lcall
add
pushf
fs
ja
dec
test
push
xlat
lret
jnp
es
mov
incl
sbb
jmp
ret
or
sahf
out
adc
jge
pop
dec
int
and
clc
jl
lahf
mov
sbb
cmp
in
or
push
sbb
sbb
sti
push
add
adc
lods
icebp
mov
inc
and
mov
icebp
scas
mov
push
push
lods
stos
imul
std
testb
in
icebp
loope
xor
mov
mov
mov
das
xor
hlt
cmp
or
aaa
popf
fistpl
and
aas
ljmp
jae
mov
ret
lret
mov
mov
mov
and
pop
xchg
push
sbb
aaa
fimull
pop
lods
mov
fsts
pushl
sub
roll
push
adc
push
xlat
mov
xchg
stos
sub
std
ljmp
fs
push
inc
sbb
ret
and
xor
jle
mov
clc
divps
pop
jmp
add
xor
mov
mov
int3
xor
pushl
loopne
outsb
inc
sbb
shll
add
cli
jbe
cmp
jmp
es
fdivrl
xor
leave
jae
sahf
push
jecxz
leave
mov
movsb
xchg
mov
cli
ljmp
stos
gs
fdivrp
and
dec
inc
inc
mov
rclb
push
lret
shll
call
jbe
fsts
push
lds
lret
inc
xchg
sub
inc
and
iret
pop
jg
jecxz
mov
sub
mov
loopne
mov
movsl
sbb
cmpsb
pop
cmp
stos
and
sbb
addr16
xchg
pusha
cmpsb
inc
out
into
mov
ljmp
outsl
xchg
scas
test
nop
arpl
in
mov
sub
xacquire
lcall
push
add
mov
loope,pn
emms
and
cmp
rcrl
pop
aad
and
jp
call
mov
dec
dec
or
push
mov
mov
mov
lods
jmp
iret
scas
fmull
in
in
mov
add
dec
dec
pop
icebp
jmp
jmp
sahf
mov
mov
aad
jo
mov
hlt
and
xchg
cmp
ljmp
lahf
aad
inc
insl
jp
inc
cmp
insl
sub
jne
mov
enter
sbb
lds
cli
out
ficomps
xchg
mov
lock
in
pusha
sahf
dec
shr
repnz
xchg
int3
and
xchg
push
sbb
adc
xor
repnz
add
push
ljmp
mov
cltd
jbe
mov
or
mov
loope
movsb
iret
mov
ljmp
das
cmp
dec
push
adc
insl
fwait
xchg
adc
psllw
mov
mov
bswap
shrb
pusha
sti
sub
mov
decb
jge
mov
loop
jg
dec
push
aas
lahf
scas
mov
sub
ret
js
call
ds
inc
test
in
xchg
lahf
mov
sti
push
pop
imul
ret
lods
inc
jns
add
mov
out
push
sahf
cwtl
add
jmp
int
addr16
sbb
fst
pop
rcrl
cmovl
xchg
dec
loop
fs
add
jnp
cmp
ja
rorl
sbbl
push
int
pop
or
jmp
out
clc
decl
lcall
mov
add
mov
adc
sbb
push
cld
jmp
daa
fidivrs
cmpsb
cld
mov
cwtl
pop
push
cmp
clc
jne
ror
and
adc
push
les
mov
and
or
lcall
cli
add
add
lahf
add
push
xchg
sub
out
sub
aaa
xchg
dec
jo
ljmp
mul
ret
sbb
sub
push
fidivrs
test
incl
xchg
ss
push
fs
pop
outsl
mov
sub
sbb
fnstenv
out
push
movsl
bswap
xor
jmp
incl
sbb
aas
mov
inc
pop
pop
mov
out
ja
mov
jno
mov
jl
mov
and
test
and
repnz
in
or
leave
std
aas
dec
pushf
adc
pop
insb
jp
jle
std
mov
mov
sti
in
pop
mov
jae
popa
jae
mov
rorl
jge
ljmp
loope
and
cmp
cltd
xchg
adcb
pushf
jb
stos
xchg
rclw
bound
mov
add
mov
adc
les
bound
sub
xlat
ret
imul
mov
sub
push
cmp
cld
cmp
mov
mov
sbb
dec
mull
add
and
lret
xlat
lods
pop
notb
call
les
fdivrl
sarl
lea
mull
xchg
dec
or
fistps
scas
inc
out
lahf
clc
add
and
inc
call
lret
mov
add
cmp
inc
push
ja
xlat
test
pop
dec
fwait
push
in
rcr
cmp
add
mov
aad
mov
aam
pushl
jle
popa
push
mov
mov
rcr
sbb
aad
cmp
inc
aas
popa
orb
inc
inc
adc
add
imul
push
adc
or
push
out
mov
loopne
xchg
ljmp
clc
call
sub
out
call
fs
fcomps
in
js
push
aaa
ljmp
fisttpll
push
test
in
pop
test
lcall
and
outsb
or
xchg
xchg
movsl
xor
lods
xchg
pushf
ud0
lcall
mov
mov
sbb
cmp
sti
jae
jns
lods
jg
lock
xchg
and
imul
cmp
xor
ljmp
mov
outsb
cmp
fisttpl
sarl
cwtl
psrlq
call
std
jne
out
jno
sbb
call
push
jle
out
push
push
cmp
pop
fdivr
xchg
pop
nop
lock
dec
test
mov
add
jmp
inc
sti
sbb
add
fwait
jno
cs
ljmp
pop
aaa
cmp
movsl
sub
mov
mov
movsb
adc
sbb
cmpsb
cmp
mov
fsubs
sarb
lcall
push
repz
sbb
mov
inc
bound
shr
push
add
lcall
or
daa
jne
test
das
cld
adc
lcall
push
mov
aaa
jg
mov
mov
jl
popa
mov
fdivr
incl
scas
lods
adc
adc
leave
inc
jno
pop
add
inc
hlt
sbb
push
dec
nop
pop
sub
stos
jp
dec
pop
adc
sbb
loope
mov
es
movb
stos
and
stc
and
pop
ret
mov
fs
mov
inc
cltd
test
lahf
sarb
es
inc
aad
fidivs
mov
mov
pop
push
xlat
jg
or
mov
outsl
add
mov
dec
sub
pop
push
adc
sub
cmc
ret
test
cmp
pushf
lahf
xor
cmpsb
pop
rcrl
out
fdivrp
pop
mov
popw
subb
pusha
pop
cs
push
inc
push
jecxz
bound
cmp
sub
jo
daa
cmp
in
mov
jecxz
cmp
lret
call
lret
jnp
scas
scas
aaa
data16
rorl
jl
mov
sub
mov
aad
mov
shr
movsb
icebp
sbb
jecxz
mov
jg
adc
mov
ss
xor
sub
mov
cli
pushl
lods
xchg
fisubl
imul
stos
jle
sahf
cmp
cmp
sbb
sub
mov
push
mov
mov
dec
call
ss
js
xchg
xor
rol
test
jne
test
outsl
and
stos
pushl
sbb
jmp
loop
xchg
rorl
sbb
fadd
mov
rolb
jmp
sub
imul
mov
movsl
and
mov
jl
sub
mov
push
cmp
pop
aas
loop
inc
xchg
xor
jnp
test
lcall
out
cwtl
sub
jnp
push
and
sbb
xchg
pop
ja
ljmp
jecxz
lcall
into
add
push
add
cli
xor
sar
call
inc
mov
in
jb
sub
add
push
add
dec
xor
mov
lea
lcall
inc
pop
orb
or
sub
adc
mov
jg
hlt
pop
xchg
inc
lret
sbb
sbb
mov
mov
cld
ja
inc
rolb
pop
mov
jb
sub
add
mov
mov
pushf
xor
inc
and
pop
dec
ljmp
mov
lea
cwtl
pop
and
pop
aad
int3
mov
dec
ret
das
jnp
cmp
push
out
test
out
pop
mov
mov
jns
jp
repnz
ds
sub
in
jmp
fildl
shlb
out
out
loop
int3
xchg
sbb
shll
adc
push
mov
xor
mov
mov
loopne
and
push
dec
je
jne
xor
mov
xor
and
mov
inc
cmp
cmp
push
mov
decl
lcall
and
fbstp
xor
cld
test
ja
lcall
inc
and
popf
mov
imul
sti
nop
loopne
and
lahf
cltd
xor
pushl
sbb
mov
jmp
adc
inc
ds
sub
sbb
fldt
mov
pop
dec
lret
pop
pop
loopne
loopne
sub
ror
pop
lods
js
adc
dec
dec
inc
pop
out
sti
lcall
add
xchg
aad
sub
or
inc
movsb
jg
inc
jno
jmp
icebp
sbb
dec
sub
mov
insl
lcall
mov
jbe
mov
ret
addr16
addr16
dec
adc
icebp
pop
inc
add
sub
repz
jg
loope
pusha
js
test
xchg
cli
cmp
daa
out
lret
dec
cmp
pop
imul
jmp
scas
lods
jb
xor
sbb
push
scas
and
incl
cmp
outsb
jnp
sub
shrb
sbb
stos
insb
dec
stc
jns
cmp
call
cmc
cltd
mov
mov
jno
popf
cmp
mov
mov
ljmp
inc
aas
pop
or
pop
mov
ja
ds
pusha
push
lods
loope
mov
pushl
cld
out
std
cs
and
cmp
lret
jne
iret
pop
xor
pushl
cld
test
push
push
and
mov
mov
fidivs
popf
mov
mov
clc
jmp
xor
test
cmp
mov
and
lock
push
imul
mov
dec
fsubl
add
xor
in
rcll
popf
or
pushf
cmpsb
sub
int3
out
or
out
adcl
adc
mov
fistpl
call
push
and
xchg
pushf
jmp
adc
int3
push
test
push
pop
inc
push
jecxz
and
jg
out
pop
test
and
stc
pop
or
bound
mov
int
jo
pushl
je
iret
add
int
jb
sub
fs
loopne
jae
fdivrl
mov
js
xchg
mov
sbb
aas
cmp
push
xor
repnz
test
dec
mov
dec
cmp
lcall
insb
jecxz
cltd
dec
jg
sar
jnp,pt
addb
pop
cs
fidivs
fcos
pushl
push
push
pop
and
addr16
mull
scas
mov
cld
nop
xchg
sub
sbb
ss
jo
lods
cmp
dec
add
adc
or
mov
mov
jl
inc
dec
in
lock
fstpl
mov
add
sbb
nop
or
ljmp
and
mov
decl
xchg
adc
push
push
mov
mov
xchg
mov
in
lret
addr16
cmp
cmp
jmp
push
jbe
sub
and
dec
xor
inc
inc
mov
cmc
pop
sub
mov
call
and
shlb
adc
loopne
xor
scas
jmp
movsb
jno
jmp
ljmp
mov
outsl
and
push
ds
sbb
pop
sub
in
fldcw
mov
pop
rcr
mov
push
and
pop
in
sti
cld
sbb
adc
lcall
decb
pop
cmp
insb
leave
xchg
mov
or
call
mov
mov
incl
insb
mov
add
mov
popa
lret
inc
ret
xchg
dec
pushl
fbld
mov
lds
les
or
pop
and
sub
ljmp
mov
out
jno
fistl
pop
test
cltd
leave
outsb
cmpsb
lods
mov
outsb
pop
ljmp
push
lcall
ret
dec
mov
pushl
and
mov
and
push
out
or
dec
pushf
sbb
jnp
jg
test
insl
xchg
cmpsl
jae
lock
push
subb
mov
push
sbb
std
cmpsl
bound
lret
dec
xorb
sahf
leave
call
cli
rclb
fwait
inc
dec
aam
jb
scas
pushl
fsts
aaa
lods
dec
mov
xor
dec
je
pop
cltd
nop
inc
push
imul
pop
shlb
bound
nop
mov
xlat
cmp
pop
ja
dec
xchg
jns
mov
ja
jmp
icebp
pop
in
inc
in
lcall
inc
sbb
rorl
xchg
jae
stos
add
inc
push
inc
mov
lcall
leave
mov
jmp
jmp
jle
loop
mov
dec
mov
jl
dec
mov
mov
dec
jb
and
dec
pusha
add
mov
mov
and
stc
lret
jmp
in
mov
mov
and
mov
outsb
fidivs
aaa
std
call
es
inc
scas
iret
out
dec
sub
push
cs
loop
mov
lret
icebp
lods
xchg
aad
ljmp
sub
jle
xor
rcrl
hlt
shrl
inc
ljmp
imul
pushl
mov
sbb
std
xchg
fldenv
sub
insl
mov
jo
add
adc
adc
jae
out
fcomip
jge
jl
jno
jno
aaa
inc
scas
mov
mov
fistps
jl
push
pop
push
pop
mov
mov
mov
out
sub
test
fs
cs
push
xchg
xor
movsl
xchg
sbb
movsl
jnp
lods
or
repnz
sahf
scas
inc
cmpsb
or
and
or
scas
and
rcrb
pop
sub
xlat
jmp
jbe
mov
adc
stos
push
pop
repz
xor
je
inc
xorb
sub
call
aad
rcrl
icebp
jno
and
das
push
mov
cmp
call
and
dec
adc
cmp
mov
loop
sahf
mov
or
bound
push
hlt
sbb
testb
js
sbb
lahf
xchg
les
fwait
ret
fistl
fadd
out
in
std
jae
test
call
lods
mov
mov
mov
nop
fmull
sub
out
out
insb
scas
mov
dec
call
pop
jne
pop
xor
lods
int3
je
inc
and
pop
lcall
je
sub
mov
repz
ficoml
aad
xchg
test
enter
sarl
das
clc
fadds
stc
test
ret
jle
aas
xor
xor
push
adc
mov
call
jns
adc
pushf
in
mov
insb
scas
roll
pusha
and
add
insb
aaa
ja
mov
mov
leave
sbb
lock
mov
fidivl
jmp
gs
xor
cltd
and
fnstcw
cmp
fwait
stos
mov
inc
lock
jl
cmp
add
and
movsl
out
cmp
into
adc
ret
mov
mov
inc
cwtl
jl
in
rcrb
rorb
or
cli
or
testb
lods
loopne
push
cmc
in
out
jmp
les
pop
addr16
add
fisttpll
add
xchg
sahf
pop
orl
push
test
in
sub
cmpsb
clc
test
orb
stos
pop
mov
or
inc
iret
sbb
jo
ljmp
lahf
push
out
inc
push
inc
cmp
enter
decl
mov
xchg
inc
adc
testb
push
adc
call
sub
lret
mov
xchg
sub
sub
aaa
imul
add
ja
sub
jg
mov
nop
xchg
dec
add
push
add
jo
cmp
adc
xchg
fisttps
or
push
adc
decl
movsl
xchg
mov
jmp
enter
jmp
mov
loop
sar
jge
mov
xchg
pop
sbb
call
fbstp
cmp
sub
out
rolb
xor
adc
pop
ret
in
decl
jg
inc
add
xor
and
out
rolb
push
fwait
mov
dec
in
pop
decl
sti
ret
xchg
mov
inc
stos
or
out
pop
ret
sti
push
xchg
fcompl
std
mov
cmp
jge
xor
jmp
sub
cmp
adc
rcll
icebp
fldt
jg
movsb
fwait
or
fs
push
cli
cltd
sti
movsb
or
fisttpl
cld
jg
out
and
ds
mov
dec
iret
andl
push
adc
decl
cmp
or
scas
je
shll
add
fldcw
cld
cmp
push
mov
cmp
add
cmpsb
inc
lcall
adc
divb
inc
filds
push
cmp
inc
fcoml
testb
jecxz
std
inc
pop
mov
mov
xchg
xchg
adc
lcall
xchg
in
scas
inc
jmp
and
cmp
mov
call
pop
stc
daa
add
repz
icebp
mov
icebp
cld
imull
add
jg
sub
popa
das
sbb
mov
xchg
jmp
push
adc
adc
xchg
outsl
or
aad
aaa
jl
decl
out
xor
inc
xor
mov
jmp
ret
push
and
add
mov
mov
xchg
call
out
imul
aam
xor
repz
pusha
fwait
cli
sub
cld
cli
lret
push
push
imul
mov
dec
sbb
inc
inc
pushf
call
cmpsb
out
mov
push
dec
icebp
inc
mov
outsb
and
cmc
sbb
dec
movsl
xor
cld
movsb
in
call
icebp
sub
inc
mov
ljmp
clc
mov
das
rclb
and
lret
dec
icebp
int3
sub
aad
lret
or
cmp
cmp
adc
mov
mov
or
insl
arpl
icebp
aam
and
xor
ljmp
loop
ret
xor
push
push
mov
cmp
jbe
pop
ja
push
jp
push
mov
mov
mov
mov
xchg
scas
mov
inc
fbld
push
xchg
imul
test
enter
ret
jns
xchg
data16
push
mov
repnz
ljmp
add
mov
loope
dec
outsl
mov
cmc
subb
outsl
and
sbb
insl
lret
lods
test
inc
mov
xor
xlat
pushl
inc
test
dec
movsl
or
js
ret
ljmp
ss
and
jg
dec
clc
sub
cmp
daa
mov
dec
xchg
sbb
rcll
ret
inc
push
fcomip
inc
inc
push
or
test
inc
roll
jle
jno
shll
jae
decl
test
test
xor
icebp
cmp
test
and
call
adc
xor
inc
leave
sub
fsub
jno
fdivl
cwtl
cld
call
out
sub
xchg
bswap
ftst
sub
fsubr
jbe
stos
in
mov
je
aam
xlat
jmp
into
dec
lret
scas
xchg
mov
sbb
aad
push
int
out
mov
shl
stc
inc
lcall
fnstsw
repnz
push
mov
adc
cmp
scas
mov
call
dec
ud2
outsb
cmp
outsl
lds
push
pusha
fcmovbe
jae
pop
cwtl
in
decl
or
sub
popa
leave
push
movsl
jnp
imul
lahf
push
pushf
jns
jmp
js
mov
hlt
and
rcrl
add
push
and
iret
out
mov
fs
mov
lds
enter
loopne
dec
sbb
leave
clc
sub
push
imul
pop
pusha
mov
repnz
addr16
clc
jg
push
imul
ret
hlt
mov
push
mov
jmp
out
inc
add
pushl
xchg
pop
in
add
push
sahf
shll
adc
xlat
addr16
jae
push
xchg
sbb
push
sub
insb
mov
xchg
fsts
jo
mov
in
lods
aam
data16
inc
enter
dec
jb
outsl
pushl
out
fstpl
cli
mov
bound
push
fs
clc
aaa
sti
ss
ds
sbb
jmp
push
cltd
mov
mov
add
dec
adcb
push
ljmp
mov
icebp
ds
shrb
repz
sbb
xchg
adcb
decl
arpl
sub
adc
fbstp
in
gs
jo
push
and
incl
jecxz
push
imul
stos
add
sahf
lea
push
mov
popf
jg
add
jns
std
pusha
xchg
in
mov
jmp
jb
int
add
jbe
lahf
imul
test
incl
into
rcrb
ret
cwtl
jne
push
cmpsl
jg
jg
jg
pop
jp
xor
mov
jmp
sbb
adc
xchg
test
je
push
dec
int
adc
hlt
mov
incl
popl
or
sbb
xor
das
in
stc
aaa
xchg
orl
push
and
mov
mov
sub
mov
sbb
shll
ret
cli
jg
call
push
pop
inc
icebp
jle
push
sbb
xor
sbb
sub
and
cmp
addr16
in
xchg
xchg
push
movsl
and
dec
hlt
sbb
inc
rcll
dec
std
or
dec
mov
push
sti
mov
std
addb
sbb
dec
add
or
cli
cmpb
mov
scas
ds
inc
pop
js
in
repz
insl
repz
rol
mov
xor
adcb
jg
sbb
jae
xor
in
cmp
or
pushl
scas
test
add
pop
or
jb
adc
imul
hlt
daa
pop
repnz
adc
clc
pushl
xchg
shlb
scas
dec
xor
xchg
inc
jo
inc
ljmp
shrl
aad
clc
leave
inc
mov
cmp
mov
ljmp
loopne
jae
push
lds
dec
xchg
inc
movsb
mov
call
push
ret
mov
dec
inc
jp
stc
jae
fildl
fdivrl
jg
incl
shrb
xor
test
mov
xchg
pop
lcall
jmp
pop
push
testb
loopne
sub
mov
push
pop
cmc
cmp
mov
fwait
sub
iret
aas
pop
call
repz
push
xor
aas
lret
sbb
sahf
arpl
shrl
divb
pop
add
aam
jg
jmp
pushl
hlt
test
jo
ljmp
mov
test
jmp
pusha
jmp
rcr
cmpsl
pop
aam
outsb
sarb
addb
scas
jae
insl
cld
push
loop
jae
in
pop
inc
idiv
rorl
fistpll
ljmp
and
ljmp
ss
sub
sub
adc
out
xchg
sbb
adc
aas
cmpsl
out
out
jg
decl
mov
int
cmp
jnp
add
inc
shr
icebp
dec
inc
js
cmp
xchg
cmp
jp
aaa
outsb
stc
sub
mov
add
data16
jmp
pop
cli
pop
sbb
loope
or
jns
clc
insl
push
dec
aas
mov
adc
fsts
in
lock
decl
and
sahf
movsb
dec
fdivrs
adcb
rorl
fidivrs
and
lcall
jmp
fisttpll
cmp
pop
mov
or
pop
adc
ficoml
lods
rcr
enter
pushl
add
aas
jmp
push
leave
and
addr16
mov
lahf
pop
into
xlat
jne
dec
leave
mov
push
pop
ret
fdivrl
mov
cmp
push
fistps
fcomps
mov
jp
pop
mov
xchg
out
imul
lcall
lods
push
nop
xchg
push
addps
adc
fsubr
sub
adc
or
and
lcall
bnd
push
cmp
in
and
popa
mov
and
outsb
lds
mov
clc
cmc
push
xor
dec
jo
sbb
xor
cwtl
pop
add
dec
pop
lock
pushl
loope
fs
adc
mov
push
lods
rclb
fdivs
decl
mov
sub
popf
or
jne
jo
sub
pop
cmp
int3
loopne
scas
sbbl
fbld
xchg
sub
adc
jmp
mov
sub
pushl
test
aam
mov
sub
add
cmp
ljmp
lea
mov
pop
cmpsb
sub
adc
push
nop
xchg
clc
scas
dec
adc
das
inc
dec
insb
mov
cmpl
adc
xchg
cmp
mov
gs
jg
decl
in
cs
push
or
xor
push
ljmp
sar
out
lcall
sbb
xchg
jl
ja
xchg
movb
xchg
movsl
xchg
and
and
mov
mov
shrb
jno
adc
jmp
or
cmp
sbb
incl
xor
fwait
pop
fistpll
or
jbe
rclb
jp
ljmp
and
inc
leave
loopne
push
mov
fdivl
das
sbb
and
xor
mov
lea
jp
mov
fimull
and
je
add
xchg
std
ja
imul
setno
ss
fwait
mov
dec
or
mov
pop
lcall
add
ss
push
push
loop
dec
fldenv
or
mov
decb
call
mov
pop
xchg
movd
cld
test
push
jl
sbb
loope
dec
incl
iret
cmpsl
pushf
add
jle
cmp
cwtl
cmpsl
mov
xorb
insb
ss
pushf
jno
aaa
hlt
cltd
mov
or
jnp
cmc
inc
stos
mov
das
test
mov
push
mov
xor
mov
movsl
mov
xchg
stos
pusha
add
xor
adc
cmp
jg
xchg
cmpsl
fstl
mov
inc
dec
mov
mov
sub
jbe
lahf
pop
lods
dec
xchg
jns
mov
incl
dec
loope
repz
pop
dec
push
lods
shlb
push
dec
movsl
mov
sbb
fnstsw
cmpsb
push
add
lcall
and
and
not
pushf
pop
es
mov
mov
imul
cmp
mov
push
dec
movsb
lahf
push
push
fildll
sbb
fdivrp
pop
cld
jmp
mov
hlt
int
cmp
mov
fdivrs
loopne
into
sahf
scas
push
adc
adc
inc
or
xor
fmull
push
cmp
adc
ljmp
shrl
and
inc
cmpsb
cmp
mov
jnp
pop
adc
add
scas
dec
sub
call
jnp
hlt
jnp
mov
incl
push
fbstp
imul
int3
pop
mov
dec
adc
inc
pushl
test
mov
adc
lret
frstor
out
push
pop
stos
movb
mov
fldl
out
inc
add
lcall
lcall
daa
es
loop
sahf
ljmp
aad
cld
ljmp
fcom
push
and
popf
inc
stc
fildll
adc
adc
fnsave
pushl
cmp
lock
aam
sbb
mov
dec
sahf
pop
mull
push
or
icebp
rcll
test
je
enter
popf
pop
out
mov
jg
sbb
sbb
jo
add
ret
mov
int
aaa
aad
sub
call
mov
ds
scas
fmuls
push
mov
bound
fstpt
jnp
fcos
aaa
ljmp
decl
cmp
and
add
push
sbb
data16
call
fadds
adc
addr16
shlb
push
jbe,pn
out
and
icebp
fcmovne
scas
in
pop
or
mov
xor
dec
sahf
outsb
pushf
push
pop
scas
in
inc
int3
sbb
aad
push
insb
or
xor
ljmp
sub
push
out
stos
push
sbb
cmpsb
adc
arpl
mov
insb
sub
cld
stos
je
clc
scas
and
clc
inc
iret
mov
pop
jbe
xor
pop
pop
xchg
repz
ljmp
xchg
ja
dec
and
cmp
or
pushl
bound
and
cs
imul
or
and
sti
xchg
dec
icebp
outsl
popf
scas
pop
rorb
xchg
lcall
repnz
jmp
movsb
cmc
mov
mov
jmp
pushl
mov
pop
sub
sub
push
cmp
loope
int
fdivs
jg
sbb
in
inc
push
mov
adc
cld
mov
call
je
test
push
in
popa
scas
xor
test
jae
cld
incl
and
adc
sbb
ficomps
mov
in
jnp
jmp
jbe
dec
sub
fisubl
cmpsb
les
out
icebp
jb
aaa
aam
dec
das
cmpsl
js
in
pop
sub
jmp
popf
lea
scas
test
sub
cmp
movsb
das
in
mov
cwtl
js
in
mov
mov
out
rclb
call
outsb
stos
dec
in
jg
sbb
and
je
incl
jl
mov
add
lret
push
nop
and
or
fdivp
icebp
pop
mov
jbe
sbb
pushf
or
lea
aad
movsl
inc
jl
xchg
hlt
or
and
ss
mov
lods
push
mov
bound
lret
decl
rcrb
cmpsb
gs
loope
pop
ss
inc
mov
negb
das
js
jecxz
cmp
dec
cmc
pop
mov
cwtl
push
lret
inc
mov
incl
jo
aas
and
clc
in
mov
fisubl
scas
or
lods
pop
cmpl
sbb
jmp
push
sub
jle
xchg
jb
mov
mov
vcvtss2usi
in
rcrl
push
dec
and
cmp
hlt
scas
rcrl
mov
fistl
xchg
adc
stos
push
mov
pop
loopne
sar
inc
inc
dec
jnp
imul
or
shll
xor
lahf
mulb
aad
clc
scas
rolb
movsb
pushl
and
sub
addr16
fdivrs
enter
ja
movsb
inc
sub
sbb
cltd
push
mov
mov
ret
hlt
out
arpl
movsl
loopne
fucomi
xor
push
cmpsl
jno
pop
xchg
ret
lcall
lea
jge
bswap
call
or
imul
lods
call
adc
arpl
mov
add
add
pop
lcall
in
jmp
cmp
add
int3
shll
insb
xchg
sub
dec
push
stos
push
sti
jnp
incl
mov
pinsrw
pop
cmp
clc
fistpll
movsl
sub
xchg
dec
inc
loopne
sar
ljmp
cltd
movsl
lret
popf
jl
add
pop
mov
adc
and
cld
sub
lahf
ret
cmp
mov
mov
xor
cmp
or
stos
cmp
sar
jle
dec
pop
jp
mov
and
push
mov
outsb
in
and
jnp
mov
mov
jl
mov
push
call
enter
cmp
adc
push
jge,pn
lcall
out
dec
mov
push
and
iret
cmp
call
jp
dec
mov
xlat
stc
out
cmp
jg
mov
mov
sub
sub
mov
mov
jns
testb
outsb
jge
jge
jb
decl
dec
mov
xor
negb
roll
add
jae
je
cli
popa
lea
xchg
jmp
ljmp
ljmp
push
test
fs
leave
inc
pushf
mov
orl
mov
mov
xor
js
mov
mov
int3
shrl
xor
xor
sub
adc
insl
mov
sbb
mov
or
add
pop
add
lahf
lcall
cmpsl
popa
pop
daa
dec
aaa
inc
mov
or
gs
dec
sahf
les
add
mov
clc
decl
popf
xor
mov
jb
test
aad
pop
dec
test
aas
shrl
das
cli
jmp
sbbl
and
dec
call
pop
shrb
test
loope
mov
incl
add
mov
negl
jmp
inc
jg
mov
mov
mov
lods
ja
jmp
adcb
jb
lds
adc
andb
ret
fsubrs
insl
lret
cmp
push
idivb
ja
aam
fldenv
rclb
pop
sahf
push
pop
cltd
outsl
call
in
ljmp
inc
or
cs
out
adc
dec
jmp
das
cmp
mov
psllw
stos
jle
test
push
cs
sbb
stos
cvtdq2ps
call
outsb
cld
loopne
test
mov
mov
popf
jg
fstpl
ret
lcall
jno
rolb
jecxz
ret
pop
jae
cmp
inc
mov
cmpsb
leave
jbe
xlat
pop
sub
mov
cmp
dec
xor
xchg
inc
or
mov
cmp
pop
add
ja
fwait
jp
xorb
frstor
push
jp
and
ret
mov
daa
test
call
loop
test
mov
mov
lret
nop
les
jecxz
stos
jle
in
ret
pop
jne
inc
ljmp
fwait
test
lahf
pushf
mov
xchg
das
nop
int3
xlat
dec
dec
xor
out
mov
xor
les
addr16
movsb
pop
push
mov
cli
call
lods
jae
loope
fisttps
mov
or
xchg
cmp
stos
xchg
cli
jne
incl
mov
adc
gs
dec
mov
pop
pop
xchg
mov
nop
cmp
aad
dec
imul
shrl
loopne
aas
mov
and
lcall
pop
jno
ss
sti
or
mov
cld
sar
xor
test
jg
cmpsl
xchg
pop
push
imul
xchg
sbb
or
add
xchg
pusha
cmp
mov
decl
dec
or
leave
pusha
push
mov
sbb
lret
dec
jmp
rcll
push
rcr
or
imul
sbb
sub
imul
jg
stc
shrl
fimull
ljmp
mov
std
ljmp
jnp
pop
aaa
cmc
add
mov
cmc
inc
aaa
mov
repz
rcrb
pop
imul
ljmp
andb
pushl
mov
add
fstpt
jnp
sbb
mov
adc
dec
das
in
mov
loope
lcall
addr16
daa
push
sub
into
pop
in
sbb
mov
cmpsl
dec
adc
jg
subb
cld
cwtl
jae
sahf
out
mov
inc
xor
mov
stos
jg
repnz
jl
and
je
sub
dec
push
call
rcrb
insl
inc
das
sbb
icebp
push
je
dec
call
xlat
adc
cmp
insl
xor
mov
xchg
data16
mov
cmp
lods
movsl
pop
ljmp
nop
cwtl
rolb
adc
lret
xlat
pop
hlt
gs
and
mov
nop
inc
out
insb
dec
sahf
test
xor
push
inc
push
cmp
sti
push
in
scas
flds
pop
jo
cli
mov
scas
sub
jecxz
insb
test
mov
jg
mov
jbe
bound
mov
fwait
ljmp
lea
mov
sub
stos
fnstsw
pushf
push
in
push
dec
lret
lret
out
xor
bound
hlt
jno
sub
repnz
adc
pop
loopne
fldt
push
pop
repz
in
push
test
ret
sbb
adc
or
jns
inc
jecxz
movsl
fstl
sbb
mov
in
push
push
or
add
sub
mov
push
adc
jo
inc
test
xchg
rcll
test
mov
pop
ljmp
rcr
inc
adc
mov
inc
in
adc
stos
aas
mov
fildl
stc
xchg
adc
cli
xor
pusha
lds
xor
pusha
movnti
imul
es
inc
fcomip
call
imull
pop
enter
aam
or
mov
mov
mov
lcall
icebp
repnz
push
clc
push
or
fwait
test
out
jg
mov
jge
call
or
dec
enter
xchg
daa
sbb
repnz
ds
mov
sub
mov
scas
fucom
incl
addl
inc
mov
sbb
lret
in
and
call
sub
or
rcll
addl
nop
js
jle
or
mov
xor
push
mov
mov
pusha
lcall
or
mov
mov
lcall
lcall
hlt
stos
imul
mulb
and
push
or
mov
rol
jmp
and
jno
add
loopne
xchg
rclb
sahf
js
jnp
daa
cmpl
lcall
outsb
idivb
idiv
dec
data16
nop
stc
mov
out
in
dec
aaa
mov
xor
ljmp
insb
es
xchg
mov
repnz
imul
in
xchg
adc
xchg
sar
jmp
cmp
jecxz
pop
sti
cmp
movsl
ljmp
cmp
call
test
lock
and
mov
xor
add
dec
mov
pop
pop
sti
sbb
adc
pop
sahf
fildll
ss
or
arpl
into
fsubrp
ficompl
lcall
pop
aad
mov
aaa
loope
mulb
dec
inc
imul
addr16
fisttps
icebp
fucomi
lea
xchg
or
inc
sbb
mov
xchg
call
repz
jns
jg
or
int3
js
and
stc
cmp
inc
push
jmp
stc
sbb
loop
xchg
loope
hlt
xorb
push
jnp
inc
mov
xchg
fimull
xorl
std
lods
xchg
enter
pop
mov
dec
xor
adc
cmpsb
adc
push
ss
test
sub
ret
ljmp
jns
inc
lret
inc
loope
std
pop
repz
jmp
inc
mov
pushl
mov
out
dec
lahf
sub
push
xor
sbb
ljmp
push
push
xbegin
pop
jmp
pop
add
aad
inc
lods
sub
ljmp
jnp
call
mov
pop
cltd
push
adc
bound
loop
xor
fdivr
aam
insl
xchg
aad
sub
pop
mov
sbb
mov
incl
add
pusha
sbb
xlat
and
int
mov
mov
mov
mov
repnz
incl
push
jne
lret
shl
fnsave
dec
loopne
inc
jnp
xor
pop
dec
test
lcall
sar
mov
push
mov
ret
mov
int3
mulb
das
xor
call
aas
jno
pop
addl
scas
gs
into
ud1
or
data16
aad
jmp
and
andl
lret
add
push
mov
test
xor
out
clc
xchg
movsl
in
mov
outsl
xor
mov
mov
insb
iret
pop
adc
fdivr
mov
mov
stos
or
adc
mov
cmp
int
xor
sti
push
adc
addr16
pushf
cmp
mov
mov
cwtl
jb
ret
pop
fldl
inc
mov
inc
or
sbb
lock
mov
pushf
inc
fsts
cld
int
gs
sahf
push
sbb
cmp
fwait
sub
pop
and
pushl
adc
ljmp
jmp
cld
es
add
test
insb
add
pop
adc
dec
stos
test
mov
mov
fdivrl
popf
rcll
outsl
jp
fildll
ljmp
sbb
arpl
sbb
hlt
jae
mov
push
insl
nop
icebp
dec
outsl
push
cmp
decl
or
mov
fwait
xor
insl
mov
adc
ds
jbe
mov
call
or
aas
test
inc
into
fidivl
pop
call
mov
nop
std
aad
lcall
ljmp
and
pop
jo
jge
test
iret
and
inc
gs
xchg
jmp
jg
sub
aas
xlat
call
sbb
pop
sub
cmc
or
push
loope
add
push
mov
clc
sbb
mov
call
jg
add
jg
jno
and
icebp
pop
push
fdivl
jne
or
ljmp
mov
and
jmp
js
fisubl
repnz
mov
mov
sbb
adc
sbb
jp
push
xchg
cmp
sbb
ret
mov
cmp
cmp
shrb
inc
cmp
insb
mov
sahf
dec
push
add
lock
cmp
int
aas
cmp
imul
pop
nop
leave
lcall
call
out
pushf
adc
out
xchg
cli
cmp
pop
jmp
xor
pop
out
xchg
push
mov
bound
mov
out
mov
es
sub
mov
adc
cmpsb
inc
movsb
cli
inc
jbe
add
push
and
add
lret
xor
jo
lea
out
dec
outsb
cmp
jno
pop
out
hlt
and
lcall
adc
mov
inc
dec
push
out
add
and
testl
jecxz
clc
decl
cmpsl
outsl
push
jmp
pop
jo
adc
xchg
cli
scas
jle
add
addr16
mov
aas
mov
xlat
mov
ret
sbb
movsl
aam
inc
mov
push
in
fbld
sbb
incl
aas
mov
jae
jle
daa
jae
inc
iret
movsl
pop
inc
ja
iret
sub
incl
jo
outsl
mov
roll
xchg
adc
mov
in
stc
jmp
cmpl
inc
shl
xchg
cmpsl
mov
inc
xchg
fs
movsb
shlb
inc
out
fldl
xor
fidivs
jmp
repnz
jnp
xor
jne
hlt
xlat
xchg
lret
xchg
jb
dec
lcall
push
push
movsb
clc
mov
inc
xchg
xchg
scas
dec
push
in
mov
push
and
pop
hlt
decl
add
insb
mov
mov
add
mov
sub
push
mov
fcomip
sbb
das
xor
jns
dec
dec
push
popf
jge
sub
pushf
add
mov
shl
pop
push
lock
aam
int
jmp
pop
inc
pop
addl
sti
lcall
push
out
enter
out
dec
adc
or
cmpsl
and
mov
and
jecxz
mov
pop
jl
mov
incl
inc
addl
dec
aad
push
mov
mov
shll
addb
jmp
jge
sbb
jp
adc
incb
call
sbb
push
pop
jp
push
jmp
sti
lcall
rolb
shlb
mov
sub
lfs
pop
test
sbb
jmp
lcall
pop
stos
sub
or
popf
mov
pop
mov
cmp
lcall
adc
popa
icebp
add
aaa
shl
or
data16
sub
das
cltd
and
imul
mov
andl
pop
jmp
cmp
in
cmp
lods
cwtl
iret
es
arpl
xor
repz
ljmp
leave
shrl
test
xor
hlt
fildl
dec
push
jge
inc
out
cmp
lcall
xor
fmuls
mov
stc
mov
incl
insl
sbb
in
int3
cmp
ret
enter
stc
sbb
decl
add
jp
decl
lret
ds
fidivrs
cwtl
pop
leave
inc
xor
repnz
adc
popa
lods
fwait
inc
dec
test
push
mov
sbb
cmpsb
das
pop
jg
and
push
stc
xor
daa
cmc
sbb
gs
jge
sub
shll
mov
push
fsubp
pushf
ljmp
popf
out
fxam
jecxz
ret
rcll
cld
fwait
xchg
int3
inc
out
aas
repz
out
or
incl
adc
clc
cltd
adc
stc
jnp
mov
jg
jbe
dec
andl
decl
jb
mov
jae
fisubl
push
xchg
movsl
adc
pop
repz
push
fdiv
cltd
shl
decl
ss
or
ret
dec
imul
cs
aas
mov
push
insb
mov
clc
ret
pop
lods
and
std
dec
dec
cmpsb
mov
jo,pt
jg
xor
pop
orb
and
lahf
mov
je
sbb
or
mov
and
call
ret
popf
and
xchg
loop
xor
loop
call
mov
dec
dec
dec
push
sub
in
lcall
in
mov
decl
sarl
pop
ljmp
push
stos
sbb
gs
push
lea
jle
and
mov
scas
fistpl
idiv
cmp
clc
lods
mov
cmp
in
push
push
ret
arpl
addr16
cmp
mov
fcmovu
pusha
aam
mov
sub
xchg
mov
push
xor
cld
test
and
sbb
arpl
aas
subb
sbb
jg
out
bound
fcoms
rclb
lods
mov
inc
dec
lock
movsb
cmp
mov
incl
cmpl
xchg
or
mov
mov
xlat
jecxz
jl
mov
add
mov
adc
and
lret
cmp
in
and
rcrb
pop
cmc
mov
adcl
dec
fiadds
lock
decl
fs
dec
pop
and
clc
inc
push
dec
ret
lods
test
sbb
pause
pop
decl
out
pop
add
enter
xchg
mov
adc
or
mov
ds
jg
jns
or
mov
std
rol
push
ja
jno
incl
jns
jnp
cwtl
xor
pop
movsl
lods
mov
stc
aad
jg
aad
jbe
out
clc
decl
je
inc
xor
xor
push
aad
pop
gs
out
mov
push
pop
lcall
incl
inc
nop
jne
data16
sbb
outsl
ds
push
pop
mov
lock
test
inc
ja
jne
arpl
xor
push
dec
mov
nop
push
dec
add
cmp
out
dec
into
push
push
shll
xchg
in
repnz
push
stos
or
testb
lock
ljmp
adc
jp
jns
rcrl
adc
jns
imul
push
mov
call
jl
repnz
je
out
pop
es
push
add
cmpsb
mov
sbb
out
or
xchg
xor
imul
mov
stos
pusha
rcrb
lods
xchg
inc
arpl
cmpsb
mov
push
mov
fdivs
arpl
push
and
mov
scas
adc
call
cmp
pop
pop
mov
mov
lock
andb
mov
cld
adc
dec
push
mov
loopne,pt
and
inc
xor
push
jl
mov
lcall
push
push
jl
mov
dec
sbb
push
mov
stos
inc
dec
ffreep
movsb
mov
test
fadd
mov
stos
push
mov
mov
mov
orl
orb
xchg
xor
jnp
or
mov
ds
or
jmp
mov
movsl
enter
stc
pop
aad
icebp
sbb
pop
ret
jae
ljmp
scas
adc
cmpb
sub
call
out
xor
jl
sub
mov
inc
sub
sbb
and
dec
test
add
push
push
cwtl
sbb
daa
push
pop
jg
sbb
mov
sub
jmp
ds
test
pop
add
or
movsl
ljmp
clc
push
add
xor
add
mov
gs
out
jns
mov
filds
dec
aaa
jae
pushl
jne
cli
jg
and
or
and
push
jp
push
mov
jl
jb,pt
mov
call
cmpsb
frstpm(287
les
stc
xlat
ja
mov
cli
lock
jl
dec
icebp
and
out
push
and
mov
popf
std
lret
or
loope
lods
roll
xchg
jle
inc
lods
out
lcall
repz
mov
or
xchg
fs
sahf
lahf
lahf
rep
loope
or
mov
into
push
ljmp
jg
into
test
rolb
jo
mov
mov
mov
js
push
lods
jl
inc
fimull
aam
sbb
mov
lret
cmpsl
and
or
add
mov
call
sub
rorl
and
in
add
imul
incl
into
sbb
out
fwait
pop
xor
push
push
leave
int3
xlat
sahf
xchg
dec
push
cmpl
incl
je
jb
mov
test
or
les
sahf
ss
jg
clc
jg
ljmp
push
push
add
or
or
fsubrl
ja
mov
sbb
dec
cmpsl
jecxz
mov
sbb
ljmp
les
adc
and
lahf
scas
ljmp
or
insb
ror
jmp
fcmovne
inc
sbb
adcl
stos
xchg
test
cwtl
jnp
jbe
sahf
push
xchg
sbb
sub
xchg
xchg
fdivrs
adc
in
movsb
ficoms
pop
lods
cli
stos
push
outsb
in
push
js
pop
add
inc
cltd
daa
pop
aam
dec
xchg
push
and
pop
aaa
pop
mov
test
repnz
mov
fs
fdivrl
ret
cmp
std
jl
call
loope
sub
jmp
cs
xor
movsb
decb
or
xor
imull
pushf
jg
jmp
mov
lods
sar
bound
push
adc
popf
or
call
pushl
out
push
jl
jnp
sub
add
or
sub
mov
xchg
test
enter
xor
and
js
inc
or
decl
lock
in
add
pop
inc
or
jnp
shr
push
and
into
fnstenv
out
mov
insl
sub
jge
insl
js
push
andb
pop
lods
hlt
cmp
decl
add
add
mov
leave
pop
mov
fnstenv
lock
pushl
std
xor
jnp
in
mov
push
pushf
lcall
adc
push
decl
lret
mov
nop
and
mov
pop
sbb
ljmp
pop
fcoms
mov
pop
stc
int
adc
test
cmp
mov
dec
lds
pop
aaa
ja
pushl
xlat
mov
inc
push
lea
push
xor
jns
jge
incb
lcall
mov
xchg
movswl
mov
sub
in
or
pushf
xchg
push
jo
es
movsb
out
nop
incl
incb
push
jg
or
mov
shrl
dec
shl
xchg
add
popa
in
or
data16
scas
pusha
inc
push
scas
mov
iret
lods
or
dec
jg
call
fistpl
lock
pop
ljmp
push
imul
push
je
js
adc
xchg
pushl
lahf
in
movsb
hlt
call
loope
je
sti
sub
shlb
iret
int
cmp
fwait
add
inc
out
fildll
test
inc
xor
pop
xor
xchg
xor
sarb
sahf
loop
movsb
incl
inc
xlat
or
nop
xor
nop
mov
and
mov
aam
mov
movsl
jae
imul
add
cs
inc
sarb
inc
fs
insl
pusha
xlat
leave
lcall
fdivp
shrb
xor
mov
enter
xchg
sub
mov
jnp
fisubrs
ss
scas
stc
sub
cmc
pushl
push
lcall
add
clc
pop
mov
ret
ljmp
mov
sbb
dec
dec
mov
sbb
jbe
ja
adc
fsubrs
xor
and
adc
and
insl
sbb
fsubs
fsts
rol
mov
mov
push
sbb
call
push
add
push
test
pop
shlb
shlb
aad
and
icebp
jo
xor
aas
imul
pop
adc
jg
pop
pop
mov
xor
jecxz
jl
dec
xchg
cmpsb
cli
jmp
aam
ljmp
jns
cmpsb
aad
xchg
cmc
cmp
fsubrl
xchg
jbe
cmp
xchg
mov
call
into
push
out
xchg
roll
iret
pop
sbb
mov
movsb
mov
pop
shll
loope
jg
xchg
mov
aam
adc
cmc
xor
push
and
fildll
mov
adc
lahf
test
sub
mov
and
lcall
dec
insl
hlt
gs
call
ss
sub
jae
inc
ljmp
inc
fidivrl
cmpsb
mov
lods
dec
sub
or
ljmp
jmp
sbb
or
mov
mov
aad
pop
jbe
pushl
mov
inc
xchg
push
mov
loopne
rclb
mov
dec
repnz
ljmp
sbb
lds
pop
pop
dec
hlt
xchg
dec
loope
pop
push
bound
jno
shrl
or
cli
ret
jns
nop
loopne
scas
scas
pop
ror
adc
add
loop
sar
decl
shrb
or
cwtl
jl
aad
and
and
fcomi
dec
and
jns
jnp
js
mov
call
lock
xor
push
pushf
movsl
pop
jecxz
pop
fsub
outsb
push
les
sarl
movsl
or
mov
pop
push
inc
jbe
jbe
cli
jg
pop
mov
int
rclb
js
fwait
dec
rorb
pop
cmp
lods
add
aam
ja
mov
push
add
or
jmp
shrb
sti
adc
add
sub
aam
arpl
hlt
mov
repnz
add
push
movsl
ds
cmp
xor
sbb
cmp
pop
xchg
lock
cmpsl
pop
fidivrl
int
adc
call
imul
xchg
cmp
ror
mov
pop
stos
sub
lds
and
push
jns
pushl
push
and
stos
les
xchg
dec
popf
pop
ljmp
ljmp
test
icebp
pop
inc
mov
xor
ret
idivl
jg
loope
in
lcall
jg
mov
fldt
mov
shll
mov
inc
int3
sub
pop
out
daa
sub
push
mov
lds
jle
aaa
jo
jae
test
ja
ljmp
outsl
sub
inc
pop
sarl
stos
sub
sub
or
jmp
test
aas
add
jg
aas
sbb
pop
pop
fildl
jnp
xchg
jle
outsb
subb
ljmp
jnp
popf
cmp
dec
pop
mov
xchg
int
std
popa
add
ljmp
arpl
stc
fs
mov
std
lds
pushl
fldenv
mov
arpl
or
bound
or
dec
or
jge
mov
and
jl
mov
sarl
or
inc
mov
in
fcomip
fidivrl
add
jg
stos
xor
mov
je
aaa
sub
incl
iret
mov
jle
lret
mov
inc
jae
lods
call
movsb
sbb
ljmp
insl
xor
rcrl
fidivl
data16
repnz
or
xchg
jg
inc
or
pop
push
and
lahf
in
call
insb
mov
ljmp
in
add
pop
stc
cmp
outsl
cld
push
es
cmp
push
xchg
cmp
jmp
mov
mov
lret
jp
mov
cmpl
xor
adc
fistps
adc
mov
gs
or
mov
cmpl
fidivs
push
ljmp
clc
lea
ss
pop
mov
mov
lds
movsl
arpl
xchg
sbb
adc
cwtl
pop
and
call
daa
lcall
cmp
imul
pop
lret
mov
and
pop
roll
push
mov
shlb
mov
aaa
fldenv
adc
pop
adc
pop
xchg
xor
adc
dec
lds
pop
jle
mov
gs
push
in
test
xchg
cmc
jp
and
sub
dec
inc
or
pusha
jecxz
sub
in
icebp
fdivrl
pminsw
lock
das
jmp
lcall
not
hlt
jg
out
lods
aad
imul
pushl
mov
imul
jns
fnstenv
xchg
mov
push
push
sti
cmp
dec
call
stos
fadds
push
jg
and
mov
mov
cmpsl
jp
adc
int
mov
and
cmp
add
jmp
pushl
add
jmp
popf
mov
call
jmp
mov
cmp
push
adc
das
and
call
push
cmpsb
dec
xchg
arpl
outsl
clc
lret
gs
fwait
mov
cmp
insl
sub
decl
and
fisubrs
int3
rorl
pop
shl
dec
lret
jbe
and
cmpsb
mov
dec
xlat
loopne
adcb
dec
mov
test
fisubl
idivb
mov
jmp
out
pop
inc
subb
inc
insb
mov
fisubrs
xor
out
cs
inc
into
jge
notb
adc
gs
call
sub
test
mov
mov
mov
out
dec
shlb
ljmp
pop
and
jmp
jns
fcomps
mov
push
mov
inc
stc
pop
decb
stos
jmp
sub
adc
pop
cmp
das
fstl
dec
jl
imul
jg
inc
pop
in
and
push
call
xchg
imul
call
lcall
and
jne
pop
inc
mov
imul
push
std
add
ljmp
dec
jle
jmp
fsubrs
sub
ss
je
loope
sbb
bound
scas
mov
jmp
xchg
fisubs
sbb
mov
push
iret
mov
out
rorb
fadds
jb
push
popf
mov
mov
call
adc
mov
sbb
sbb
aas
xor
jmp
aad
add
mov
mov
out
vmovapd
ret
jge
pop
adcl
jg
mov
pop
add
xor
and
mov
in
mov
jg
jp
decl
xor
sub
int3
call
ds
adc
or
inc
out
hlt
sbb
stc
test
mov
xchg
in
push
dec
push
xlat
ja
inc
fidivrl
push
ja
sub
push
call
adc
into
inc
rorl
fucomp
jmp
mov
xchg
push
fs
sahf
adc
mov
jne
pop
mov
gs
andb
mov
xlat
repnz
incl
sub
lcall
testl
xchg
aad
lods
lods
xlat
add
sbb
lret
ret
int3
sti
insl
cld
das
clc
test
movsb
mov
dec
and
movsl
mov
mov
rcrb
push
dec
ret
into
pop
cmp
js
outsl
xor
jbe
scas
loopne
inc
push
jp
push
out
jbe
mov
jmp
jl
int3
jmp
lahf
xchg
call
mov
out
cmc
das
mov
ljmp
adc
mov
shll
pop
insb
or
push
rol
test
mov
pop
mov
test
mov
push
pop
xchg
or
outsb
iret
cmp
or
jg
inc
jp
jl
aad
imul
cmp
cli
jmp
mov
jmp
cwtl
cmp
inc
sbb
mov
pop
aad
inc
xchg
notb
lock
mov
xchg
addb
pop
test
lcall
and
jbe
repz
in
or
cmpsb
rol
pop
int3
data16
mov
jl
fstp
xchg
xchg
rcl
inc
or
shl
xchg
add
bound
test
xchg
in
mov
sbb
xlat
xchg
adc
cld
dec
sbb
jb
mov
cs
test
call
roll
shl
test
push
xchg
xchg
loop
pop
xor
das
inc
aaa
dec
decl
and
add
mov
jg
fsub
pop
pop
cltd
and
cmc
jo
cmp
cmpsl
jns
stos
cmp
repz
add
adc
sbb
into
in
insl
fistl
jne
inc
dec
xor
pop
jle
fsubrp
and
das
cmpsb
scas
call
addr16
dec
cli
push
mov
mov
decl
and
fisttps
pop
fnstsw
inc
push
fisubl
sbb
lcall
rorl
scas
outsl
lods
sub
fptan
mov
xchg
mov
imul
decl
jo
scas
scas
es
fdivrs
inc
dec
and
lods
fs
mov
dec
pop
push
xor
dec
dec
ljmp
push
faddl
mov
mov
std
sarb
mov
popa
pop
xchg
pop
mov
or
jbe
rcrb
and
dec
cmp
bound
mov
sbb
push
enter
stc
std
sub
call
das
icebp
loopne
sbb
fwait
movsl
mov
outsl
int3
fcoms
notl
fisubrs
fldcw
jae
pop
loopne
and
rcrl
xchg
dec
mov
cmp
xchg
imul
jmp
enter
insb
add
movsl
std
mov
pop
clc
jecxz
cmc
dec
mov
or
decl
push
andl
loopne
lds
adc
scas
cmp
jg
ror
lds
std
sbb
jnp
mov
mov
rorb
pushl
mov
and
outsl
out
mov
int
mov
jg
push
mov
addb
cmpsb
pop
jnp
mov
lahf
jmp
in
int
ss
shll
decl
inc
push
pop
jge
jl
xchg
or
xlat
in
lret
fs
and
stc
shlb
adc
push
incl
push
xchg
aad
mov
mov
les
or
xchg
roll
clc
incl
inc
popa
jg
and
cmpsl
pop
pop
iret
clc
mov
subl
into
mov
pushl
lcall
out
mov
dec
mov
jae
add
jmp
dec
pushf
push
cmp
cmp
mov
or
xchg
filds
cmpsb
das
outsb
sahf
jae
ret
incb
ljmp
jns
fistpll
outsb
scas
sbb
enter
cld
jae
sub
ds
xor
out
bswap
dec
sbb
sbb
cmpsl
jle
sbb
mov
cli
xorl
adc
mov
int
adc
std
lds
or
push
in
rolb
adc
lcall
cld
push
adc
add
mov
adc
imul
jno
insb
mov
xchg
outsb
aam
mov
mov
mov
pop
adc
shlb
cmpb
jp
fdivl
icebp
gs
sbb
and
decl
cmp
sbb
int
xor
dec
test
pop
loop
cmpl
or
lcall
mov
outsb
jbe
dec
rclb
xchg
es
out
push
push
nop
mov
incl
xchg
lret
std
mov
adc
shrb
push
mov
inc
arpl
jns
cltd
jmp
mov
pushl
and
xor
push
inc
stos
insl
aas
push
dec
xor
push
push
ds
es
ljmp
pop
lea
fcoml
pop
loop
add
jne
sub
lcall
fdivp
xor
and
cmc
sub
jno
cmp
test
out
xchg
dec
rcll
std
push
movsl
outsb
ss
cs
pop
stos
aam
imul
jmp
cmp
stc
and
movsl
loopne
cmp
push
sti
popf
cmpsb
xorl
ljmp
add
aad
push
sar
mov
call
lcall
or
into
and
stc
mov
scas
icebp
mov
scas
fisttps
sub
lods
pop
out
hlt
xchg
stos
push
int3
pop
cmp
outsb
cs
dec
call
test
mov
data16
lret
sub
jmp
mov
repz
insb
imul
jp
mov
ds
cmp
negb
dec
clc
insl
in
xchg
pop
imul
mov
aas
adc
push
stc
pop
push
jecxz
aad
arpl
outsl
inc
pop
std
lea
push
sbb
jle
mov
or
and
dec
xorb
sbb
mov
add
jbe
lret
push
mov
dec
mov
pop
xchg
xor
je
ljmp
pop
int
pushf
dec
mov
xor
mov
and
idiv
decl
and
adc
dec
cwtl
dec
inc
mov
call
rclb
add
pop
sub
mov
push
bound
add
jge
ds
jg
cmpl
jmp
test
outsl
push
mov
and
loopne
cli
in
push
adc
mov
xor
fildll
in
mov
decl
add
inc
push
test
push
mov
lods
add
mov
idivb
icebp
sub
insb
nop
xchg
cmp
fistpl
mov
dec
es
ljmp
jmp
shr
inc
xor
sbb
sub
cmp
loop
dec
and
lds
mov
daa
pop
jg
decb
inc
enter
cmp
xchg
incb
xchg
outsl
mov
cs
call
data16
push
pop
rcrl
std
inc
stc
dec
mov
fildl
lods
or
mov
pop
jg
outsl
xchg
js
ljmp
sub
movsb
mov
dec
rcll
dec
aad
pop
and
cwtl
jne
adc
add
mov
jg
hlt
dec
add
andb
sbb
pop
lea
push
hlt
fsubr
ret
xchg
jnp
cmp
call
add
xchg
mov
and
fdiv
sub
inc
int3
xor
pushl
sub
sub
addr16
and
sar
sub
testl
decl
adc
jmp
movsl
cmpsb
cwtl
jp
adc
or
adc
test
lods
sub
cmp
subb
jp
xchg
hlt
xor
test
mov
jmp
ljmp
int
mov
fldenv
mov
lahf
mov
dec
loope
inc
sbb
imul
push
xchg
ret
jge
mov
sub
icebp
adc
std
decl
mov
lods
xor
dec
and
hlt
inc
jnp
xor
arpl
xchg
xor
mov
addl
sarb
daa
adc
cmpsl
xchg
popa
mov
insl
movsb
cld
sbb
pop
sbb
pushl
and
mov
jb
xchg
ljmp
shrb
jmp
jl
xor
mov
jne
jmp
scas
inc
jg
andb
sbb
stos
jl
fadds
call
cld
adc
lcall
push
xchg
clc
popa
lret
loope
popf
inc
mov
sahf
cmp
cwtl
pop
cmp
dec
dec
loop
insb
inc
icebp
dec
dec
frstor
incl
lcall
cld
mov
xchg
lcall
fiaddl
sbb
lds
mov
outsb
push
sub
pop
inc
adc
sub
push
sbb
dec
adc
or
aaa
jmp
xchg
je
decl
pop
mov
gs
jp
call
inc
daa
cltd
loop
imul
gs
push
sbb
xchg
jae
in
or
xor
hlt
jmp
jle
xchg
mov
and
pop
lcall
push
gs
cmpsl
mov
xchg
mov
cmp
cmp
sub
out
mov
idivl
fdivs
lods
lcall
cmp
lret
ss
call
cs
lcall
pop
lahf
mov
inc
or
les
incl
in
pusha
xchg
lods
or
xchg
push
or
rcr
icebp
incl
adc
mov
jecxz
cmp
xor
mov
adc
pushl
hlt
push
add
nop
ljmp
or
sbb
pop
pop
call
dec
pop
jmp
xorl
inc
inc
xrelease
push
pop
push
es
sub
decl
lret
mov
xchg
mov
pcmpgtd
aaa
lds
jp
addl
insb
stc
mov
jo
les
push
imull
xor
insb
jbe
pop
mov
xchg
push
jb
sub
mov
jb
js
cmp
push
test
icebp
and
pushf
mov
fisttps
ljmp
call
push
adc
test
or
mov
mov
shll
ss
and
pop
dec
das
lret
lock
jmp
in
shrb
jbe
fmul
sbb
mov
fiaddl
add
bound
cltd
adc
adc
push
nop
out
hlt
pop
ret
daa
dec
fsubl
xchg
push
sbb
pushl
sbb
cmpb
loop
push
out
push
jmp
int3
adc
jmp
jg
sbb
hlt
cmc
lods
mov
cmp
jno
cltd
fcomps
stc
frstor
and
pushl
xor
sbb
push
push
fnstsw
jge
xor
movsb
adc
lret
fisubrl
mov
mov
and
dec
repnz
daa
packuswb
movsb
fs
mov
mov
stos
cmp
jmp
roll
push
jns
pop
mov
mov
fwait
xchg
mov
lods
out
loop
into
in
sbb
mov
clc
sub
test
or
push
lcall
xchg
jmp
stos
add
adc
mov
ja
repz
arpl
sub
sti
pop
std
sub
mov
xor
jno
out
inc
mov
cld
xchg
js
push
and
in
pop
rol
pop
test
cmp
inc
cmp
xor
push
add
rcll
loopne
jnp
sbb
fisubrl
pop
and
setnp
mov
push
cld
mov
cli
lcall
popa
stos
xchg
and
and
andb
loopne
ja
mov
andb
jecxz
decl
cltd
popf
xchg
std
and
jecxz
lods
mov
orb
shrb
adc
idivb
jns
jg
incb
xchg
test
push
inc
adc
rclb
repz
add
cli
pushl
push
lret
push
pop
cmp
inc
cmp
inc
mov
fcmovbe
jg
sti
es
loope
testb
lea
mov
rcrb
mov
imul
add
add
lods
sahf
mov
push
cmp
clc
adc
xchg
movsb
inc
dec
add
icebp
shl
push
rcrb
aam
or
cs
inc
ljmp
cli
in
aas
jb
andb
into
pop
imul
in
int3
pop
push
sub
jg
jl
dec
lret
push
fldcw
mov
pop
ficoml
decl
mov
into
mov
rcrl
sbb
inc
push
jle
fs
pop
jg
ficomps
pop
mov
popf
and
cmp
clc
dec
pop
orb
outsl
sbb
lss
push
mov
ja
out
divl
mov
jg
dec
sbb
jg
std
fsubrs
mov
fidivrs
cmp
lods
xor
imul
jg
sbb
push
add
cltd
pusha
add
mov
clc
push
and
sahf
loope
sub
stos
inc
pop
scas
idivl
lcall
jmp
adc
fistl
bsr
popf
inc
scas
dec
imul
cmp
sbb
in
decl
addl
fbld
fincstp
jg
push
cltd
shlb
push
repz
js
xchg
mov
mov
popa
repz
xchg
mov
fnstenv
xor
fwait
test
push
dec
xchg
pop
lods
sub
or
dec
out
cli
pushl
jmp
fwait
fwait
mov
mov
jmp
xor
incl
or
mov
add
jge
mov
mov
mov
jb
push
decl
sub
call
movsb
cmp
dec
ja
mov
loopne
rclb
xchg
mov
icebp
decl
in
imulb
data16
push
ljmp
fsubrl
add
pop
xchg
mov
jge
movsl
adcl
and
mov
in
scas
adc
popf
stc
sbb
adc
popa
and
decl
mov
aad
mov
push
mov
aaa
outsl
sub
jg
test
mov
test
shll
in
dec
mov
fsubp
fwait
cmp
jge
idiv
ljmp
cmc
out
xor
dec
ret
xchg
sti
sub
xor
imul
das
dec
in
btr
dec
dec
jl
movsb
mov
lods
mov
pusha
test
mov
jecxz
mov
pop
idivl
sbb
fistps
or
and
or
inc
mov
mov
pop
jnp
push
mov
stos
scas
sbb
sub
adc
push
cmp
push
sar
mov
test
mov
jb
cli
idiv
pushl
std
dec
es
adc
push
xchg
mov
xchg
xor
or
in
pop
lea
jmp
adc
pop
aad
inc
xor
idivl
and
jle
mov
and
test
ss
mov
sbb
push
std
mov
xorl
jb
add
push
call
loopne
mov
xchg
cmp
jb
push
pop
jge
scas
cmp
mov
ret
mov
std
sub
daa
xor
decl
movsl
outsl
xchg
dec
mov
inc
mov
mov
pop
sbb
std
sti
push
pop
leave
and
rcll
xchg
jmp
testl
dec
lret
jmp
cmp
jae
inc
sbb
cmp
push
out
and
mov
add
mov
ljmp
sahf
pop
and
fists
or
out
mov
inc
pushl
nop
adc
push
dec
nop
mov
jge
fcomps
rclb
pop
mov
adc
aaa
cld
jmp
in
mov
and
fldl
movsl
xor
ftst
push
jl
ret
leave
fidivl
jecxz
mov
pop
fwait
rcll
sub
push
arpl
incl
call
xor
pushf
cvtps2pd
andl
sub
cltd
sbb
mov
fldcw
jecxz
scas
cmp
mov
das
sbb
lcall
sahf
fldcw
lock
inc
mov
das
mov
fistpl
data16
mov
pushl
sbb
lcall
inc
xor
mov
pop
stc
mov
call
pop
sbbl
push
scas
pusha
cmp
fstps
sbb
lcall
pop
jno
ret
pop
add
das
sub
imul
and
dec
sub
frstor
xchg
aaa
std
pusha
incb
cs
sbb
xor
fmul
cld
mov
outsb
inc
add
lcall
mov
sti
incl
mov
leave
mov
jg
dec
or
xor
inc
xchg
mov
inc
ret
mov
in
sahf
cmpsb
xlat
pop
mov
lods
xchg
add
sub
mov
push
cmp
push
xor
inc
sbb
and
xor
stos
outsl
fdivrs
psubusb
pop
mov
and
imul
decl
lods
loopne
ljmp
xchg
cwtl
loop
mov
stc
xchg
call
mov
in
incb
aad
stos
jg
sbb
mov
iret
call
cmpsb
xor
fldl
cld
scas
push
xchg
insb
pushf
sarl
jo
aad
inc
lea
loope
jmp
dec
leave
nopl
add
jne
out
js
xlat
incl
loopne
cmp
sub
cmp
pop
cmp
mov
and
ljmp
sub
mov
fnsave
adc
cmc
mov
or
loopne
push
pop
lret
jno
push
jno
push
orl
test
ljmp
ds
sbb
popf
xor
dec
into
jbe
jae
filds
xor
adc
jmp
pusha
xlat
inc
out
clc
add
shl
fidivrs
iret
add
jl
or
pop
pushl
popf
sbb
mov
call
imull
ffree
fnstenv
xor
push
push
pop
push
test
inc
xchg
aaa
gs
fstpt
arpl
push
and
mov
jle
dec
adc
lods
add
sub
xchg
xchg
sub
xchg
adc
or
insl
sar
pop
cmp
arpl
int3
pushf
dec
pop
pusha
sub
push
fadd
push
in
fidivl
jmp
xlat
popa
aas
in
xchg
push
cmpb
idiv
repnz
in
es
outsl
jns
mov
pushf
lahf
sbb
inc
xor
decl
cmp
push
movsl
scas
mov
stos
inc
stos
push
call
cmp
in
stos
adc
push
loop
lods
pop
cmpsl
pop
jns
jbe
xchg
mov
mov
leave
lret
lock
aam
subl
je
imul
inc
xchg
std
jecxz
jmp
mov
aad
jo
and
or
pushf
push
shrb
add
dec
call
clc
add
lds
cmp
mov
sbb
das
push
loope
mov
mov
ficomps
je
jnp
cmp
xor
mov
jge
jg
std
mov
and
lock
pushl
incb
sbb
inc
mov
shll
pop
sub
mov
adc
out
mov
aam
cltd
jns
pop
adc
xor
ret
xchg
pop
push
int
jg
mov
dec
out
out
popa
jge
test
pop
aam
lods
leave
movsb
neg
mov
lcall
and
inc
test
xor
and
or
jp
jl
lret
add
dec
and
in
cwtl
arpl
jle
pusha
cmpsl
imul
pusha
ret
cwtl
movsl
in
mov
stc
arpl
out
pop
mov
inc
mov
pop
les
xchg
sti
pop
icebp
inc
mov
push
sbb
decl
xchg
dec
jle
sbbl
push
add
mov
lahf
ja
xchg
stos
sti
das
jle
incl
push
shll
lods
mov
push
addb
and
jno
push
cld
push
cmp
into
push
add
pop
scas
xor
int
cmp
pop
insl
pop
pop
xchg
jns
or
fstpt
cmp
xchg
jg
cmp
sub
xor
add
out
pushl
roll
xor
pop
mov
test
int3
jg
in
mov
mov
add
lcall
pop
outsl
push
jo
movb
mov
inc
jp
mov
mov
adc
jmp
cmc
out
out
in
cmp
xor
shl
adc
lahf
out
cli
daa
xor
addl
sub
imul
pushl
mov
aad
or
pop
xchg
ds
mov
repz
inc
jns
seto
loope
xchg
jp
cs
stos
ret
arpl
add
add
or
test
incl
leave
das
and
in
cmc
mov
xchg
jg
xor
stc
adc
dec
cli
call
push
adc
pop
mull
gs
js
pusha
nop
fidivrl
cmp
pop
push
sbb
pop
pusha
rcrl
notb
jle
jmp
ljmp
call
jo
test
stos
dec
pop
jns
and
push
push
imul
decl
jmp
cmp
inc
addr16
xor
mov
and
xchg
mov
and
shrb
adc
add
dec
lfs
dec
or
sbb
incl
mov
xlat
dec
ds
lds
scas
sbb
xor
or
repnz
add
decl
test
orb
mov
mov
cwtl
jb
in
jo
or
cwtl
fisubs
aam
je
cli
leave
mov
push
hlt
xor
in
sub
sbb
inc
mov
cmp
mov
das
add
or
pop
into
mov
insl
xchg
mov
ret
test
adc
push
repnz
cs
js
or
ljmp
add
mov
push
mov
gs
bound
lds
add
orb
push
ljmp
scas
jge
stos
mov
mov
cmp
pushl
mov
dec
jnp
xchg
mov
mov
int
pop
xchg
sarl
addr16
and
incl
ret
outsl
stc
add
clc
mov
loop
frstor
jmp
cmp
leave
popf
hlt
pop
push
js
jle
bound
int3
scas
or
dec
mov
pop
sub
sub
jbe
jae
mov
dec
mov
pushf
pushf
or
pop
sub
pop
ds
mov
outsl
sub
mov
incl
testl
outsl
pusha
push
mov
xchg
aaa
outsb
mov
mov
mov
push
xorb
subb
cltd
mov
adc
cmp
out
pushf
test
jg
sub
scas
imull
xchg
out
jmp
lahf
jns
dec
ljmp
test
jg
lcall
clc
jno
adc
sti
in
push
pop
push
jnp
arpl
sahf
aaa
popa
xchg
sbb
call
add
arpl
mov
jle
dec
xchg
adc
push
mov
mov
clc
xor
dec
push
sbb
add
decl
mov
dec
imul
jb
in
and
inc
jl
mov
fistl
call
sbb
xchg
insl
out
aad
add
insb
lock
jg
fstpt
and
mov
aas
pushf
sbb
ljmp
add
xchg
fs
cmp
mov
lcall
arpl
lcall
lsl
movsb
sub
xchg
pushl
rclb
je
shlb
add
aaa
xchg
add
and
jno
das
or
call
outsb
mov
nop
test
js
incl
push
jmp
adc
cltd
adc
test
or
xchg
sahf
cmc
fs
std
mov
push
test
mov
and
je
das
lods
cli
nop
jmp
sahf
xorb
sub
fdivr
jmp
scas
mov
shrb
add
dec
adcb
cmp
sti
adc
push
inc
cmp
jg
cmp
lcall
nop
insl
inc
sti
mov
pop
pop
push
aas
lods
icebp
mov
out
or
mov
cs
push
mov
into
bound
add
ffree
pop
jmp
push
stc
xchg
lds
nop
pop
insl
and
cmpl
std
jns
adc
bnd
cmp
sbb
mov
or
dec
sub
movsb
mov
clc
dec
mov
fnstsw
sbb
fdivrs
ss
adc
hlt
push
and
aaa
cld
mov
push
in
mov
sahf
mov
lcall
lret
pop
es
pusha
jmp
fwait
jl
or
mov
inc
add
xchg
and
lcall
push
xor
and
insl
rcrb
cmp
mov
addr16
mov
aaa
xor
push
inc
aaa
xlat
push
cmp
add
pop
cli
push
xchg
outsl
dec
mov
jae
adc
pop
sahf
clc
stc
stos
add
mov
stos
andl
inc
outsl
fdivrl
setl
mov
sti
dec
mov
popl
je
pushf
fs
mov
or
in
out
xchg
sbb
repnz
and
and
mov
push
nop
insb
incl
mov
stos
push
push
sbb
subb
fsubl
mov
mov
cld
dec
push
jge
jecxz
stos
jae
ret
cltd
and
enter
jb
sbb
arpl
ficoml
mov
xchg
imull
out
mov
inc
lds
call
mov
out
int
mov
popf
aaa
add
mov
mov
lcall
mov
mov
sub
pusha
jbe
push
push
popf
mov
jmp
ljmp
scas
sub
pushf
incl
sbb
xchg
push
loopne
les
mov
xchg
test
jmp
pop
les
hlt
mulb
stos
test
addr16
push
popa
sub
mov
loopne
push
xor
mov
inc
cwtl
aam
bound
push
iret
inc
adc
fists
sub
pop
dec
lret
popf
lcall
int3
xor
cld
jae
dec
mov
scas
xchg
ret
mov
sub
fadds
popl
push
test
cwtl
gs
mov
xor
xchg
cmp
mov
inc
ss
dec
out
int
jl
stc
and
mov
push
add
insb
clc
call
jmp
sub
inc
dec
push
xor
lret
out
or
out
cmp
mov
jnp
mov
sbb
scas
ror
in
pop
push
jbe
pop
push
jno
aas
xor
test
out
and
push
in
aad
dec
pop
pop
jge
sbb
push
mov
sbb
jge
outsl
mov
xlat
lcall
popa
rclb
stos
inc
xor
push
in
sub
push
loop
rolb
sbb
jmp
and
stos
jg
pusha
movsb
adc
call
incl
imul
sbb
push
into
pop
loope
jnp
or
lcall
sahf
or
mov
out
cli
movsl
out
inc
popa
xchg
mov
mov
cmp
sbb
jle
popa
mov
inc
popf
push
push
sub
ds
and
frstor
hlt
ret
pop
call
dec
jmp
test
aad
mov
add
adc
jnp
es
jbe
cmp
push
lock
arpl
sbb
mov
mov
cmp
add
xor
imul
cmp
pop
xchg
cltd
enter
dec
ret
gs
stos
mov
int
sbb
int
loop
aaa
or
in
sti
outsb
cwtl
push
in
xor
hlt
pushl
and
adc
xor
outsb
add
test
pop
sbb
icebp
fimull
lret
loope
sbb
lcall
inc
xor
add
mov
das
in
mov
add
mov
jge
add
outsl
aam
mov
xchg
aad
cmp
icebp
jb
testl
out
add
out
sbb
inc
clc
repnz
lret
jg
pushl
or
imul
ds
sub
mov
jp
sar
pushl
test
jge
add
int3
cld
imul
and
adc
ss
pushl
les
push
jne
pushf
push
fs
sarl
in
add
decl
or
jp
and
lods
add
daa
mov
mov
add
mov
push
insb
mov
out
jbe
sub
fisubrs
cmp
and
push
cmp
rcr
ret
movsb
int
ss
lcall
imul
test
xor
jne
insl
mov
popf
push
sbb
mov
incl
cltd
pusha
dec
mov
jno
xchg
mov
add
xchg
cld
addb
cld
or
lret
sahf
xor
std
sub
dec
daa
fwait
push
xchg
lods
enter
ret
mov
xchg
pushl
mov
dec
int
cmpsb
mov
lods
jno
and
cld
xchg
fisubs
mov
stos
lods
dec
loopne
mov
ror
ret
loopne
outsb
lds
bound
mov
lds
jne
push
add
lcall
or
outsb
jne
stc
popf
mov
push
sahf
jae
dec
push
sarl
ljmp
add
mov
inc
mov
dec
sbb
lret
lea
sub
subb
scas
clc
jg
sub
mov
and
mov
xchg
jmp
sub
mov
xchg
pushf
xor
cltd
push
mov
dec
pop
xlat
mov
inc
enter
stos
stos
add
mov
clc
ljmp
aam
arpl
inc
les
lods
mov
push
inc
sub
cwtl
pop
mov
data16
ljmp
inc
sub
mov
test
js
icebp
push
lea
push
adc
fsubr
roll
lock
jmp
in
or
lock
push
jns
push
lret
stos
mov
test
mov
inc
xchg
shlb
pusha
out
das
sbb
sti
fninit
call
loopne
sbb
ljmp
loop
xor
jbe
cld
pushl
das
xchg
divl
mov
in
adc
test
add
jo
mov
pop
pop
aaa
lcall
lret
mov
enter
add
mov
mov
call
push
addr16
aad
movsb
movsb
push
shrl
out
push
push
rorl
dec
xlat
xchg
pop
fistpll
inc
aaa
inc
loop
xchg
xor
jmp
mov
mov
pop
dec
out
add
test
clc
cmpb
test
lahf
outsb
ret
jmp
call
adc
inc
sbb
dec
cmp
inc
daa
mov
and
pop
jnp
testb
lcall
pusha
rorl
loop
fwait
pop
and
sbb
lods
cwtl
xor
add
test
xor
lcall
mov
out
lcall
jl
add
sub
xchg
and
lcall
or
int
jg
addr16
stc
mov
movsb
mov
lock
push
mov
pushf
mov
fbstp
es
lcall
mov
push
push
fdivrp
call
loope
je
inc
mov
push
jbe
push
mov
sub
stc
mov
pop
repz
pop
xor
repz
iret
je
leave
stos
cmp
fmull
pop
xchg
pop
mov
jb
incl
fsubs
xchg
pop
cs
sbb
f2xm1
add
jae
push
push
nop
scas
cli
sub
mov
arpl
inc
dec
dec
push
daa
sarb
dec
ficoml
dec
dec
fs
add
jle
adc
decl
push
in
pop
mov
or
and
xor
stos
in
sahf
jns
ljmp
add
ljmp
xchg
sbb
sub
addb
sub
loopne
dec
out
ret
inc
cltd
pop
ss
xchg
jno
mov
inc
jnp
je
jge
cmp
scas
ljmp
test
shlb
cli
daa
insb
cld
sub
mov
add
xor
aad
imul
test
clc
xor
jns
sahf
fwait
test
sbb
xchg
mov
adc
jg
jmp
jbe
in
mov
lea
clc
std
into
or
mov
lods
push
mov
cltd
sbb
pop
xchg
js
push
pushf
stc
loop
dec
fcmovb
or
push
jne
push
pop
or
mov
adc
call
call
pop
cmp
lret
icebp
pushl
sti
scas
lock
push
mov
mov
xor
cmpsl
push
inc
cmpsl
inc
sar
pushl
cmpsb
notl
push
push
mov
lds
mov
in
sub
cld
adcl
fucomi
decl
mov
xorl
cld
pop
cmp
sbb
fdivrl
jns
ret
pushl
mov
insl
fmull
mov
imull
inc
sub
imulb
stos
sub
or
lcall
imul
adc
mov
nop
std
je
es
jmp
in
ss
sti
jno
jnp
pop
fmuls
imul
or
mov
and
pushl
outsl
sahf
das
insl
int
mov
inc
sub
dec
mov
cld
xor
es
movsb
push
test
movsl
xor
decl
inc
jne
jb
subl
pop
mov
in
imul
shll
and
das
stc
test
fdivs
jbe
jo
fnstenv
adcb
adc
jl
lock
imulb
jg
mov
fldt
mov
test
push
pop
int3
sub
testl
aam
scas
js
push
inc
gs
push
mov
decl
mov
or
add
mov
add
pop
mov
fmull
push
ljmp
cmp
in
and
add
int
sbb
cmp
mov
push
or
add
xor
daa
ficomps
xchg
insb
lods
or
decl
pop
mov
mov
cmpl
jmp
push
das
popf
mov
adc
lods
call
bound
hlt
outsb
ja
sbb
xchg
push
inc
mov
mov
inc
fnstcw
decb
leave
sbb
mov
aam
pop
adc
stos
fildll
in
shl
fldt
jmp
pop
outsb
pushf
ds
or
pop
imul
ds
int
call
push
inc
int3
push
add
sub
cmp
sub
push
dec
incl
xor
test
pop
std
idiv
shlb
push
imul
aam
call
cmc
rcl
shrb
iret
mov
xchg
pusha
jle
sbb
jno
dec
cmp
mov
inc
jns
push
sbb
loopne
jecxz
mov
ret
loopne
outsb
xchg
xor
xchg
test
push
dec
jo
scas
push
push
add
xor
adc
fcoml
xchg
pusha
ljmp
call
ja
testl
jae
ds
xchg
and
mov
fdivr
incl
push
cld
push
mov
pop
and
lds
in
fucomip
jg
mov
lcall
lcall
in
daa
lcall
push
fs
cmpsl
xor
int3
push
ret
cli
push
aas
test
cmpsl
jle
cwtl
fcoml
xchg
mov
xchg
in
mov
or
jmp
jo
jg
and
mov
lahf
adc
mov
into
test
push
pushl
mov
lret
lea
mov
fcmovne
jge
xchg
in
shll
mov
add
dec
xchg
test
mov
std
push
mov
jle
aad
aaa
xor
lcall
jmp
sub
clc
in
jo
fucom
fsubrp
cmpsb
xor
cmc
das
ss
pop
cs
dec
mov
shll
jle
mov
mov
daa
sub
cmp
mov
sub
inc
push
cltd
mov
pop
xorl
or
or
lret
add
xchg
xchg
sub
inc
sub
dec
adc
shlb
dec
push
cltd
cmp
mov
or
out
add
push
in
incl
mov
ds
stc
xor
es
ljmp
pusha
mov
mov
aad
mov
sbb
sub
and
push
pushl
call
push
inc
popa
xchg
pop
mov
dec
sub
aaa
sar
jne
push
mov
filds
incl
mov
mov
enterw
mov
mov
mov
fildll
adc
call
xor
mov
js
mov
mov
pushl
inc
jle
mov
mov
faddl
mov
rclb
cmpsl
dec
in
dec
and
sub
jno
jle
and
ja
call
ss
mov
faddl
fistps
add
mov
ret
movl
rclb
les
incl
jne
push
repnz
ja
enter
jo
aad
decl
xor
mov
movsb
cmp
out
rorl
inc
dec
cmp
out
bound
lock
fxch
jg
mov
xor
push
dec
sub
movsb
mov
jl
ljmp
fnstsw
and
lret
popf
ret
push
rol
or
mov
aaa
in
inc
and
jg
incl
mov
in
out
iret
sbb
push
xchg
js
cmc
xor
jl
incl
test
or
adc
xchg
out
mov
sahf
jne
mov
mov
fnstenv
mov
rcl
adc
mov
jg
and
repz
dec
cmc
or
idiv
jo
outsl
repz
cmp
lds
mov
das
std
pushl
jno
add
adc
and
push
xchg
lret
cmpsb
jbe
inc
lock
mov
mov
popa
dec
ret
scas
aas
mov
cmpsb
mov
out
into
cmp
pop
icebp
inc
and
aaa
sub
add
xchg
cmp
lcall
and
adc
or
cltd
aad
adc
mov
jecxz
inc
add
inc
add
adc
push
xor
ret
mov
fwait
out
loope
pop
cli
mov
icebp
pop
aaa
leave
and
sar
push
shlb
cmp
call
mov
jns
bound
fsts
dec
ret
pusha
mov
out
mov
dec
je
cli
es
mov
cld
in
push
adc
inc
xchg
stc
stos
xchg
mov
and
inc
mov
push
idiv
mov
ljmp
ljmp
outsl
arpl
xchg
or
fwait
sub
push
int3
push
xor
fisubl
daa
push
rcrl
lods
incl
or
rorb
iret
xchg
xchg
cli
aam
mov
xchg
cmpsl
push
jmp
call
aaa
lret
mov
jg
das
sahf
mov
addr16
aaa
inc
mov
push
out
outsb
inc
inc
outsl
jge
movsb
rcll
bound
mov
sbb
xlat
adc
decl
subl
or
ljmp
ret
addr16
lret
mov
inc
sub
into
xor
mov
jmp
ret
ljmp
test
cmc
pusha
repnz
ljmp
push
sub
lods
push
jecxz
pushf
jl
pop
xchg
out
mov
pop
sbb
cmpsl
mov
aam
addb
mov
arpl
lret
or
adc
pushl
mul
sti
push
sub
dec
adc
lods
or
clc
inc
xchg
or
jmp
xchg
mov
test
jbe
or
fsub
imul
sbb
ljmp
inc
outsl
add
js
stc
add
outsb
popf
lcall
and
incl
push
sbb
xchg
jae
or
add
pop
and
pop
hlt
mov
decl
flds
outsl
mov
jle
cmp
pop
repz
lcall
cld
repz
fldl
shr
lret
fbld
stos
ljmp
cmp
or
sbb
decl
or
jae
cmp
xchg
das
sub
in
mov
mov
push
mov
incl
stos
fprem1
in
es
and
jns
das
sub
aas
mov
movsl
inc
mov
push
in
mov
jae
jle
add
mov
jno
into
sbb
mov
cli
leave
jl
add
cmp
and
sbb
mov
pushf
xor
xor
jg
or
fistpll
add
xrelease
aaa
or
std
incl
xchg
out
or
out
fimull
cmp
xchg
stos
lret
dec
push
fists
fcomip
xor
push
movsb
movsb
mov
mov
jbe
clc
ret
mov
sub
xor
add
loopne
mov
shrl
cmp
incl
xchg
sub
ja
jbe
jne
loope
cwtl
cmp
add
jecxz
int3
loopne
or
pushl
leave
shlb
inc
inc
lcall
mov
mov
mov
mov
std
jbe
popa
push
sub
icebp
call
add
sar
mov
les
push
mov
in
jg
inc
aam
jbe
cmp
inc
xchg
mov
int
fnsave
mov
decl
fists
out
cs
andb
cmpsb
clc
repnz
pushf
xor
lds
in
pushl
cld
in
inc
fistpll
xchg
fdiv
enter
mov
int
dec
sarl
insl
outsb
in
cmp
in
pop
movsl
imul
xchg
or
fwait
rorl
dec
lock
popa
fidivrl
cwtl
movb
decl
mov
pop
mov
add
xor
and
inc
rolb
lcall
mov
xor
inc
mov
pop
adc
mov
shll
movsb
insb
push
loope
dec
mov
in
or
call
lcall
das
jecxz
inc
aam
xchg
mov
push
test
and
fwait
loopne
push
xchg
addr16
in
dec
stos
dec
popf
pop
test
and
lds
jle
icebp
inc
cmp
ljmp
cltd
dec
iret
dec
fs
mov
jmp
adcl
rolb
data16
add
ret
jle
lea
out
inc
clc
jp
mov
int
add
pop
mov
xchg
xor
out
cli
pop
inc
push
sub
add
lds
push
aas
decl
loop
aaa
and
das
dec
repnz
dec
inc
or
add
jbe
lcall
mov
shr
loope
cmp
adc
xchg
mov
jp
iret
ret
push
es
dec
stos
xchg
ret
mov
xor
mov
ljmp
sub
pop
repz
pushl
je
test
bound
cwtl
dec
cltd
testb
je
xchg
je
xchg
test
inc
fwait
inc
sub
std
mov
icebp
popf
inc
loop
aaa
and
in
push
sub
stos
push
adc
cmp
pusha
jmp
ret
das
test
ja
test
sar
ljmp
enter
lret
sti
dec
in
dec
add
mov
add
pushl
jg
repnz
fcmovbe
adc
test
das
adc
and
pop
aam
mov
jmp
mov
in
lret
sub
cli
outsl
test
lcall
lods
pop
ljmp
pop
dec
xchg
cmp
mov
mov
int3
push
aam
cmc
ljmp
dec
mov
data16
sub
mov
mov
adc
lcall
mov
mov
sub
mov
movsb
jno
popf
aaa
or
test
ljmp
mov
mov
loopne
cmp
loop
push
pop
in
sbb
shlb
pushl
push
aas
xchg
push
mov
mov
and
mov
int3
jg
cmp
cmp
push
pop
xor
pop
lahf
push
lds
jae
gs
mov
mov
je
and
and
pushl
sbb
pop
repnz
out
fnstenv
cmpl
testb
pop
lock
decl
add
pop
jecxz
push
pushf
dec
push
lods
sbb
push
push
pushl
dec
push
sub
repz
push
pop
pop
pop
cltd
es
pop
dec
sbb
push
add
test
lcall
jmp
cmp
lea
repnz
out
outsb
leave
adc
xchg
push
adc
decl
fdivrl
cs
aad
and
cs
lock
jmp
std
dec
xchg
inc
ljmp
stos
cmp
or
cmpsl
inc
dec
iret
and
gs
dec
mov
ret
push
cmp
pop
or
mov
xchg
xor
test
jecxz
fsubr
inc
mov
stc
int3
je
jl
sbb
insl
sub
fwait
push
cmc
loop
hlt
jnp
and
lods
stos
adc
ret
jmp
dec
jne
in
xchg
sahf
jle
xchg
push
xchg
pop
jns
std
push
mov
dec
inc
mov
or
push
lret
jb
and
in
scas
shll
or
movsb
cmp
frstor
mov
fistpl
push
ljmp
jns
add
inc
sub
inc
out
dec
dec
pop
stc
cmp
test
dec
jmp
shrb
mov
test
in
fwait
dec
lods
sub
lods
mov
mov
pop
xorb
or
xor
call
ljmp
cli
xchg
fldcw
ljmp
fadds
push
adc
xor
push
inc
rorb
sub
xchg
inc
jecxz
mov
xchg
mov
cmp
fsubl
or
mov
mov
dec
insb
sbb
cmp
add
jnp
mov
shlb
jecxz
lock
lds
cmp
mov
sar
pop
fldl
jno
in
test
pop
mov
dec
xchg
sbb
cmp
fnstcw
push
cmp
fndisi(8087
daa
movsb
mov
aaa
jmp
cmc
jo
or
pop
orl
ss
pop
loope
jo
mov
stc
sbb
int
mov
mov
repnz
pop
jo
inc
mov
hlt
fimuls
lret
testb
clc
xchg
jmp
rcll
stos
outsb
cld
addb
mov
repnz
loopne
push
dec
push
int
fwait
pop
cmp
push
scas
push
imul
mov
add
aad
jnp
jbe
negb
cmp
lods
cli
mov
dec
ds
loope
and
pushl
aam
out
mov
lea
insb
sbb
ja
in
inc
or
mov
fcomip
lcall
sub
xor
divl
hlt
pop
mov
mov
jmp
jle
xor
andb
loope
lcall
jne
adc
movb
pushl
push
mov
sub
in
call
movsl
cmp
jno
sahf
xchg
sub
ret
ljmp
ljmp
imul
faddp
and
bndldx
lcall
mov
ss
fldt
cmp
sarb
sub
inc
mov
jmp
mov
add
mov
iret
repz
ljmp
push
call
decl
sub
push
inc
mov
cmp
pop
xchg
imul
push
lock
and
cld
jns
sbb
dec
and
jg
lock
lods
jl
insb
sub
push
test
jno
inc
pop
lcall
fcomip
sub
mov
dec
inc
dec
lret
push
int
lret
jne
pop
jl
pop
mov
jge
xchg
leave
mov
nop
cltd
cmp
popf
repnz
int3
mov
sbb
or
mov
mov
call
mov
loope
icebp
mov
mov
mov
sti
xorl
sub
xlat
in
xchg
outsl
aas
inc
mov
in
or
ret
mov
dec
pop
sub
sbb
adc
call
insb
xchg
add
cli
loop
sub
mov
mov
mov
fsubrl
push
mov
push
xchg
dec
pop
decl
xchg
cli
sbb
dec
in
xchg
sarb
icebp
decl
in
cltd
repnz
cld
xchg
dec
call
pop
arpl
shll
dec
pop
mov
lcall
mov
or
in
cmp
int
std
jno
decl
movsl
mov
leave
jb
mov
jno
rorb
hlt
lcall
popf
jnp
loopne
fstpt
xorb
xchg
adc
movsl
fistps
jmp
or
or
mov
rcll
aas
out
icebp
lcall
addps
adcb
shll
lods
repz
jno
mov
fiadds
jmp
mov
shrl
pusha
ljmp
test
sub
or
and
jae
incl
pushf
cmp
mov
push
loope
dec
pop
jmp
jmp
push
int3
pop
es
rcl
mov
call
gs
gs
sub
sub
cltd
push
das
jle
cmp
fs
loop
dec
fsub
xor
cmp
xor
inc
mov
mov
fwait
mov
ds
push
sub
push
sbb
into
mov
mov
cmp
jb
loop
je
orb
loopne
incl
hlt
pushf
jmp
outsb
pop
aaa
mov
fadds
clc
call
sub
jge
in
popa
aad
push
fldenv
pushf
jl
shll
ja
lret
pop
cmp
pop
pop
fisttpl
fs
xchg
pusha
cld
mov
mov
outsb
fs
popf
push
sbb
inc
jnp
jge
fsubp
inc
testl
or
insb
jecxz
outsb
and
adc
pop
insl
loope
xor
nop
sbb
mov
dec
or
pop
mov
es
mov
test
mov
bswap
mov
cmp
add
mov
divb
aas
loopne
or
daa
or
jb
mov
ja
mov
incl
xor
pop
icebp
shll
cmpsb
jle
push
out
fwait
add
push
adc
xor
dec
int
mov
mov
ss
cmpsb
sbb
sahf
fadds
jge
mov
pcmpeqb
imulb
arpl
mov
pop
shll
add
hlt
ret
push
std
mov
adc
inc
sub
js
sbb
das
out
imull
int
mov
out
push
js
or
sbb
cwtl
sbbb
sub
sbb
fcomip
sbb
pop
rcr
inc
enter
jnp
inc
lea
je
jns
jg
out
lds
decl
add
add
rolb
inc
mov
inc
inc
xchg
repnz
repnz
std
mov
inc
push
aad
aam
dec
cld
jo
imul
add
push
ljmp
in
adc
lcall
aas
cmpsl
pushf
enter
daa
inc
xchg
fwait
sahf
adc
lock
push
in
imulb
push
negl
ljmp
test
jbe
shll
daa
cmp
int
fisubrl
ds
mov
decl
push
arpl
fs
je
int
xchg
movsl
lret
sub
sub
shrl
push
jmp
test
lcall
pop
iret
mov
pop
jae
lock
xchg
cmp
push
push
pop
daa
mov
lcall
mov
lods
cmpsl
mov
insb
push
dec
xchg
push
jmp
push
sub
pusha
xor
movsb
jmp
ljmp
fsub
xchg
mov
mov
scas
sub
ficoms
push
mov
inc
mov
jnp
mov
mov
lods
ja
ret
mov
sbb
scas
mov
repz
inc
push
mov
in
sarl
ret
dec
fucomip
sub
sbb
jge
push
mov
push
scas
sbb
mov
mov
clc
addl
lcall
out
xor
push
addr16
pushf
adc
movsl
sbb
shl
mov
shlb
push
cld
mov
cmp
xor
adc
dec
adcl
mov
pop
hlt
cmpsl
mov
ds
mov
inc
mov
push
push
pop
push
xchg
or
in
add
dec
pop
hlt
xor
sbb
stc
sahf
pop
cmp
leave
es
adc
mov
pop
mov
mov
outsl
cli
jp
das
int
and
stos
jecxz
incl
mov
xchg
jnp
push
pusha
test
decl
jmp
daa
aas
imul
cmp
jns
lcall
mov
push
inc
dec
pushl
std
jp
out
and
dec
jns
cmp
daa
pop
cmp
jo
imul
pushf
lcall
das
sub
incl
jmp
mov
cmc
jmp
xchg
mov
jmp
push
jae
and
lods
jg
mov
ss
orl
xchg
inc
push
sub
pushl
into
std
cmp
test
dec
ffreep
xor
push
lea
dec
sarl
jbe
dec
adc
pop
scas
inc
movl
push
add
jp
xchg
and
jg
js
mov
repz
lea
jns
aas
fcomi
ret
out
loop
out
in
xor
lcall
pop
fimuls
inc
inc
aas
jle
or
mov
frstor
addr16
adc
rcrl
lcall
out
mov
loope
mov
pop
xchg
ret
hlt
mov
call
dec
adc
iret
dec
inc
cmp
mov
ret
add
iret
repz
outsb
jo
lret
cld
pushl
std
decl
arpl
adc
int3
adc
push
pop
xchg
loope
push
ss
in
mov
push
mov
insb
outsl
mov
mov
scas
xchg
lret
dec
mov
push
ficoml
decl
dec
cld
lahf
mov
jb
push
cwtl
inc
mov
mov
adc
inc
mov
decl
inc
mov
push
int
pop
xor
jl
dec
test
jo
aas
jmp
mov
loopne
jmp
ret
xchg
arpl
jmp
or
or
xchg
xchg
jnp
add
leave
xchg
sti
add
daa
xchg
jmp
push
add
ret
push
push
add
dec
push
and
jg
and
mov
lcall
xchg
add
das
sub
outsb
push
js
nop
mov
into
sub
inc
out
cmc
sbb
mov
xor
inc
mov
ljmp
mov
and
lods
pushf
push
jo
decl
mov
xlat
pop
mov
insl
mov
addr16
mov
cmp
mov
in
and
add
pop
lret
xor
adc
mov
mov
cmp
jle
xor
fwait
jl
arpl
sub
cmp
xor
das
clc
decl
iret
sbb
add
sub
nop
dec
pop
leave
xchg
mov
ljmp
or
int3
xor
ret
bound
loop
cmp
fidivl
pop
sub
movsl
loopne
cmc
pushl
aaa
lcall
mov
adc
cmp
in
js,pn
ja
outsb
jb
or
std
filds
pop
cmpsb
xor
daa
icebp
pop
bnd
mov
mov
movsb
gs
incl
bound
add
ficoml
repnz
jg
rolb
sub
jecxz
fcoml
and
rolb
jmp
jg
mov
xor
sbb
loop
inc
in
sub
mov
mov
dec
icebp
push
dec
xchg
add
or
movb
roll
hlt
cmp
adcb
loopne
loope
and
dec
cmp
push
adc
mov
cmpsb
adc
xchg
arpl
mov
add
lds
xor
aas
sub
fsubrl
psubw
enter
jg
cmp
insl
add
mov
pop
push
or
dec
nop
loope
xchg
sbb
dec
mov
or
push
push
decl
xlat
arpl
loop
xchg
in
or
cmpsb
insb
enter
sti
pusha
fwait
jo
xchg
test
cmc
call
mov
lcall
out
test
jg
int3
scas
xor
lods
push
int3
fucomi
jnp
loop
cmc
lock
xchg
ljmp
pop
mov
mov
xchg
inc
and
xchg
cmpb
loopne
cmp
push
rclb
test
xacquire
es
insb
mov
mov
incl
clc
gs
and
xor
adcl
xor
cmpsl
rcrb
sahf
in
shlb
mov
loop
shll
pop
fcmovne
bound
adc
xchg
popa
out
decb
cs
add
xor
shrl
js
test
aaa
sub
jns
outsl
into
test
test
clc
inc
fs
sbb
sahf
dec
sub
out
stc
stc
pop
call
adc
xchg
scas
test
fmuls
in
je
pop
test
add
add
xor
sub
bound
rol
or
sub
pop
into
sbb
jo
call
inc
sub
mov
ss
or
je
sti
mov
jge
loope
xor
stos
jmp
cmp
add
andl
cmp
and
sbb
push
sbb
fists
lock
inc
shlb
jmp
nop
mov
movsl
adc
flds
dec
pop
mov
mov
stc
lcall
inc
xor
pop
cmp
cli
pop
out
cmp
stos
pop
mov
mov
jl
jno
bound
or
cmp
fnstsw
call
roll
or
stc
jp
lock
repz
les
mov
xor
jnp
das
clc
mov
dec
stos
sbb
jg
push
rep
mov
ds
lret
sub
push
movsb
ficomps
stos
mov
jno
cli
cmp
insl
mov
xor
in
leave
jne
lcall
cwtl
mov
mov
mov
mov
int
push
test
cs
ljmp
test
sub
bnd
adc
push
jne
inc
gs
rorb
test
mov
jg
incl
outsl
jbe
ret
neg
and
cltd
fstpt
sbb
and
je
out
ljmp
aam
stos
mov
pop
cld
jl
cmp
andb
arpl
into
mov
ror
nop
mov
jge
inc
pop
in
or
outsl
dec
adc
imul
hlt
adc
scas
inc
in
xor
test
shll
out
stos
ss
idiv
jmp
and
popa
and
icebp
fs
or
jge
adc
jp
pop
punpckhbw
pop
in
call
int
ja
ds
pop
sub
aaa
shl
pop
sbb
subl
xchg
rclb
std
decl
lahf
ds
out
iret
je
inc
cmpsb
mov
decl
fcomp
int3
repnz
call
pop
sub
repz
adc
jns
loopne
icebp
mov
out
xchg
mov
push
xor
sub
decl
sub
mov
gs
test
xchg
jb
iret
inc
inc
inc
in
xchg
and
mov
fisttps
lcall
adcl
push
imul
das
inc
movl
and
ds
xchg
push
jmp
call
in
xlat
mov
jg
movsl
push
mov
sub
testb
imul
call
stos
mov
in
push
fldt
arpl
ficomps
enter
jmp
popa
jno
or
lea
or
pushf
lcall
lcall
int
popf
xor
cld
mov
jns
mov
hlt
pop
mov
pause
add
add
jne
sahf
inc
push
dec
push
pop
cmp
adc
add
fs
cmp
ret
jmp
enter
sbb
sarb
rol
hlt
mov
jg
and
xor
xchg
fld1
repz
sbb
mov
repnz
ljmp
push
mov
sub
cmpb
mov
and
jmp
gs
xor
or
out
adc
jecxz
mov
pop
fcomip
mov
sub
xchg
jb
lret
shrb
dec
sti
pop
lcall
imul
cmpsb
lock
adc
loop
test
push
icebp
mov
or
cmp
movsb
filds
lcall
pop
dec
ficomps
dec
and
mov
jb
push
inc
add
jg
pushl
adc
inc
les
fimuls
mov
mov
arpl
decl
dec
cmp
ret
sub
inc
jno
movsl
pusha
cli
bswap
mov
call
pushl
push
xor
ret
or
aaa
outsb
je
mov
dec
push
xchg
pop
out
in
in
and
push
jno
fldt
daa
cs
das
stos
push
imul
mov
mov
ds
cmpsb
orb
fld
mov
movl
cmpsb
mov
push
imull
xor
shll
fistpl
in
push
xchg
sbb
inc
adc
icebp
popf
test
jb
mov
or
adc
xorb
decl
mov
mov
pop
lret
aam
xchg
mov
cmp
push
out
xchg
decl
dec
shlb
cmpsb
inc
mov
inc
xchg
bound
push
jp
mov
mov
and
sbb
mov
xchg
repnz
ljmp
int
dec
sbb
xor
sub
fimull
mov
mov
movl
jmp
rorb
insl
inc
hlt
mov
add
gs
pop
or
jo
mov
shlb
xchg
push
stc
cmp
scas
lock
clc
cli
mov
sahf
sbb
jg
cmc
ljmp
mov
mov
xchg
dec
jg
xchg
jg
clc
mov
fdivr
decl
ds
ret
test
hlt
mov
dec
sub
or
cmp
pushf
inc
xor
cmp
ljmp
and
jbe
outsl
jne
cmc
ja
andl
call
out
mov
shlb
and
enter
mov
xlat
sbb
inc
jge
sahf
dec
nop
cli
call
xor
enter
mov
repnz
ds
data16
jg
adc
adc
sub
push
rorb
insl
idiv
jg
rolb
pop
push
fmul
es
sbbl
mov
call
push
movsl
xchg
movsb
fwait
push
aas
in
and
into
mov
push
rcll
dec
pop
pushl
push
into
xor
xor
cmp
sti
decl
pop
push
jb
add
xor
pop
inc
sarb
jmp
scas
clc
sbb
pusha
mov
inc
unpckhps
cmp
out
lods
mov
mov
popf
mov
mov
sub
mov
ljmp
ds
pusha
in
fiaddl
cli
mov
push
out
out
jns
ljmp
xor
jnp
add
inc
sub
std
cwtl
call
xchg
or
mov
sahf
cli
call
out
dec
ss
jmp
pushl
icebp
pushl
or
shll
jne
or
js
in
imul
in
pushl
jecxz
dec
jb
xor
lcall
shl
jae
mov
aam
cwtl
mov
imul
decl
pop
int
pop
adc
sbb
pop
cmp
cld
or
decl
add
and
adc
in
ret
cmp
or
jg
and
inc
xchg
add
and
xchg
test
lcall
push
pusha
cmp
std
aad
jae
loop
ja
movsl
imul
jmp
push
cmp
sbb
add
cmpl
xchg
decl
arpl
xor
push
pop
mull
sub
jne
mov
inc
ja
sbb
xchg
lods
jmp
push
mov
shrl
adc
ds
fiadds
xchg
imul
movsl
jmp
scas
jnp
in
cld
out
addb
jp
mov
ret
or
mov
ficoms
push
lret
pop
cld
cmpsl
and
jmp
int
xorb
xlat
and
inc
js
das
scas
jmp
add
lods
adc
xor
pushl
and
sar
sub
xchg
push
test
jmp
jbe
dec
out
sub
push
and
cmpsb
mov
and
cmp
xchg
out
cmpsb
test
push
and
jns
adc
mov
push
jae
dec
lcall
dec
fisttpll
sbb
arpl
lcall
iret
sub
mov
pop
icebp
call
sbb
test
mov
lahf
adc
and
ss
hlt
lret
filds
dec
jge
jns
iret
cmpb
pop
cli
call
xchg
pop
outsl
scas
xor
mov
lods
gs
retw
test
int3
sbb
out
call
in
lods
xchg
int
cs
mov
aas
xor
scas
sbb
ret
data16
fwait
adc
es
shlb
push
aas
and
push
cltd
push
add
jno
scas
sti
repnz
int3
repnz
adc
mov
imulb
test
adcb
mov
ds
incl
hlt
cmp
shl
mov
xlat
xchg
test
jns
mov
or
and
add
sti
cld
enter
mov
mov
ret
jg
pop
jne
push
mov
in
in
and
mov
and
jg
jge
gs
loope
xor
clc
add
dec
mov
lcall
adc
lcall
xchg
daa
push
xor
loopne
into
movsb
mov
leave
add
rcrl
mov
out
inc
mov
inc
cs
jno
inc
pop
mov
sub
xchg
xchg
nop
sub
fisubl
out
mov
in
test
pop
ror
sub
jle
out
pushl
dec
rolb
jl
sbb
cmpsl
sub
mov
je
cmpxchg
pushf
or
stos
jl
lock
fimuls
outsb
mov
add
dec
dec
popf
sarl
lods
rorb
adc
lods
das
mov
xor
dec
ljmp
inc
add
insb
ss
lods
pop
mov
rolb
imul
idiv
mov
sub
icebp
imul
div
jbe
jae
adc
xchg
test
incl
mov
lods
fs
jmp
daa
stc
outsl
push
push
ret
cmp
mov
stos
mov
icebp
call
mov
stc
call
dec
lret
mov
jb
or
jge
leave
jmp
xor
cld
fildll
ljmpw
inc
xchg
icebp
ss
insl
sbb
lds
aas
jne
push
rcr
mov
xchg
std
cltd
mov
cld
add
outsl
pop
mov
fisubrl
xchg
mov
jno
mov
lock
sbb
out
cmpsl
dec
idivl
pop
inc
scas
cmp
test
sbb
test
and
xlat
push
xchg
shrl
mov
pushl
pop
popa
call
mov
stos
filds
negl
lcall
fs
jle
lahf
push
mov
jle
xor
xor
sbb
shlb
xchg
sbb
imul
lods
and
data16
pushl
into
mov
adc
sub
or
mov
sbb
dec
mov
in
aam
aaa
push
push
mov
cltd
pushf
outsl
jne
fadd
lods
ljmp
in
shll
dec
fisttpll
ja
fsub
mov
push
in
and
lcall
popf
ljmp
sarb
ficomps
dec
movsb
icebp
pop
push
cmp
addr16
sbb
pop
loop
pop
add
lcall
sub
mov
mov
cmp
dec
mov
repnz
add
push
pop
cmc
sbb
hlt
stos
or
mov
xchg
int3
and
call
and
rclb
mov
mov
notb
cwtl
out
mov
cmp
jp
and
xchg
push
pop
std
cmp
inc
sbb
or
jl
push
call
aaa
fdivrs
int
or
ds
lcall
add
cmp
mov
mov
xchg
sti
pop
pop
enter
pop
cmp
clc
push
jg
jmp
xchg
sar
pushl
or
das
dec
in
ss
pop
pop
push
xlat
aad
inc
sarb
aam
cmp
mov
call
aas
mov
xchg
arpl
lods
shll
cs
call
addb
or
pop
inc
int3
fadd
or
pushf
inc
bound
sbb
ljmp
adc
gs
filds
js
dec
sbb
mov
and
or
mov
out
push
mov
or
repz
mov
cmp
sub
sbb
dec
lock
fwait
cmpsb
ret
mov
mov
pusha
jl
idivb
mov
push
add
decl
scas
dec
mov
clc
inc
mov
xlat
pusha
and
xchg
cmp
and
icebp
xor
push
or
jmp
ret
pop
aaa
xor
clts
stos
jnp
sbb
cmp
pop
mov
mov
pop
int
and
out
xor
mov
mov
jmp
idivl
push
addr16
loope
outsl
xorb
cmp
or
adc
fnstenv
adc
mov
and
fmuls
rclb
pop
mov
fdivrl
inc
fwait
mov
outsl
jmp
ja
leave
xor
and
pop
cmc
les
dec
mov
mov
fucomi
aaa
push
jb
pop
lds
loopne
rclb
jo
mov
or
addb
decl
xchg
out
adc
fsubr
pusha
xor
mov
outsb
outsb
mov
out
cli
incl
add
out
stos
sbb
fmuls
test
cli
pusha
jmp
inc
hlt
dec
mov
lahf
push
jg
inc
pop
iret
dec
xchg
mov
push
sbb
int3
pop
lcall
mov
popf
ljmp
aad
add
and
lret
arpl
jno
out
or
enter
stc
das
outsl
cwtl
fisubrl
adc
movb
push
push
decl
xor
sbbb
fcompl
inc
push
pop
aaa
imul
aas
adc
mov
ljmp
mov
out
jg
push
repnz
adc
inc
popa
pop
pushf
fiadds
xchg
mov
fwait
or
cmc
jmp
mov
xor
inc
dec
xchg
sbb
pop
mov
jg
dec
sysret
popf
in
mov
aam
xchg
mov
xchg
dec
jl
pop
lcall
push
push
dec
lds
loopne
or
jmp
test
adc
mov
fsts
jl
xchg
nop
addl
aad
test
ds
ljmp
pop
xor
and
and
ds
jo
mov
push
jmp
idivl
hlt
push
sub
pop
sbb
or
xor
mov
stos
jmp
and
inc
push
adc
shlb
or
jns
mov
ljmp
daa
inc
cltd
rorl
or
inc
sbb
scas
fsubl
or
test
xchg
fucomi
repz
stos
pop
cmp
xchg
aas
lcall
mov
add
loop
jp
push
std
test
fs
cmp
aam
call
out
loop
inc
mov
add
mov
std
into
call
mov
pop
dec
mov
decl
push
pop
sbb
adc
jmp
xor
sahf
xor
xor
dec
popa
dec
leave
daa
pop
inc
add
ljmp
incl
mov
aas
pop
lcall
gs
cli
ret
fildll
ljmp
push
imul
mov
dec
in
test
xchg
dec
xchg
notl
std
fs
cld
mov
adc
mov
in
out
or
call
bound
xor
insb
xor
adc
rolb
iret
jp
in
pusha
cmp
adc
fnop
hlt
pop
shlb
call
xchg
aaa
test
pop
popa
pushf
mov
xor
popf
jne
mov
lock
std
mov
mov
xchg
or
rorb
mov
fs
out
cmp
andb
shrl
push
pushl
cli
pop
or
sub
loop
fldt
inc
dec
in
pop
sub
movsl
insb
jns
sbb
push
decl
dec
aaa
jle
cld
push
jns
push
push
or
cld
push
cltd
xchg
aam
mov
dec
or
outsb
sar
decl
xor
cmp
clc
mov
insl
addl
cwtl
insl
add
fistpl
sti
push
stos
adc
jge
paddq
jecxz
and
stc
rcll
cmp
or
pop
lcall
push
gs
jae
xlat
mov
push
adc
jp
mov
adc
mov
and
jg,pt
ljmp
lea
pop
ret
cmpb
sbb
mov
push
jno
inc
ret
decl
xlat
mov
push
cld
iret
movb
shrl
push
xchg
xor
xor
fists
push
je
jae
into
or
cltd
mov
int3
inc
xlat
mov
hlt
jnp
pop
popa
push
mov
pop
push
xor
xor
mov
scas
add
xor
loope
movsl
lcall
mov
frstor
cmc
cmp
inc
loope
leave
dec
enter
orl
arpl
ljmp
dec
sti
lea
sarb
cmc
sub
jge
addb
inc
or
test
sti
ljmp
dec
mov
dec
mov
cmpsl
push
in
mov
hlt
add
repz
or
mov
add
cmp
jno
testl
decl
sub
aas
inc
xchg
pop
and
lea
movsb
and
push
add
sbb
cs
sti
clc
enter
add
xchg
adc
shlb
push
cmp
aas
pop
cmp
mov
scas
incl
push
pop
sbb
inc
dec
std
sti
daa
lret
jmp
or
sarl
gs
xor
decl
lock
cs
xchg
js
jmp
mov
push
jl
sub
aad
sahf
mov
dec
cmc
cmp
icebp
xchg
pusha
mov
test
loope
cmp
mov
jns
outsb
add
out
lahf
push
stc
nop
cmp
dec
imul
jmp
pop
inc
dec
jns
and
xchg
ss
jnp
popf
cmc
jns
jbe
or
repz
mov
inc
mov
xchg
movsb
mov
test
jge
inc
push
jecxz
xchg
lcall
pop
adc
jno
arpl
loop
sbb
out
jge
mov
lahf
loop
repz
xchg
incl
call
ror
push
les
loope
fisubl
lcall
lcall
loopne
clc
loop
inc
xor
adc
lds
jmp
repz
std
push
dec
incb
dec
popa
icebp
in
fisubrs
fucomp
mov
jmp
pop
mov
pop
add
xor
jo
sbb
cmp
cmpl
ljmp
test
ljmp
scas
xlat
shr
add
jmp
adc
inc
adc
pushl
in
cld
push
xchg
and
rol
loopne
incl
loopne
xchg
or
push
repz
lds
sahf
lret
cmc
call
add
fcmovne
out
dec
mov
in
filds
mov
sub
and
dec
sbb
and
xchg
outsl
mov
popa
hlt
call
jge
sbb
cmpsl
leave
and
sbb
mov
dec
cmpsl
pushl
std
out
adcl
jecxz
in
das
je
lock
pop
sbb
loop
sub
xor
mov
xchg
adc
jne
dec
and
fwait
xchg
inc
mov
decl
addr16
ret
push
xchg
imul
and
nop
stos
mov
xor
jo
out
cmp
incl
and
and
add
sbbl
les
sar
mov
cs
loope
add
das
pushf
pop
movsb
fdecstp
add
ljmp
cld
cmp
jno
mov
xlat
in
and
mov
jp
mov
mov
aaa
lcall
fsubr
shl
insl
push
shlb
imul
adc
imul
es
arpl
loope
test
in
mov
stos
das
lods
jp
mov
inc
cld
push
cmp
lret
or
ss
mov
incl
and
dec
arpl
jns
std
mov
add
xor
mov
cmp
xchg
dec
push
sbb
lcall
lcall
sub
add
xlat
idivl
pop
clc
in
inc
je
mov
mov
xchg
test
cmp
lret
outsb
adc
push
sti
jecxz
mov
sub
sti
out
jecxz
inc
adc
mov
fcomip
jecxz
out
insb
mov
mov
or
imul
lahf
popa
and
adc
jns
sub
xor
add
ja
int3
xchg
mov
mov
loopne
call
sub
lret
lods
in
lret
fsts
mov
or
ss
cmp
loope
jb
and
pop
loopne
aaa
adc
push
jp
mov
subb
clc
sbb
pushl
jmp
dec
xor
adc
aas
mov
dec
mov
jle
jne
imul
clc
test
xor
mov
scas
iret
jo
jmp
pushf
sbb
dec
outsb
jnp
decl
xchg
and
lcall
das
mov
mov
jb
sbb
mov
stos
and
call
inc
adc
add
outsb
fwait
dec
testl
xchg
nop
xchg
jg
inc
sub
fistps
mov
ja
repnz
sub
clc
mov
mov
loop
xor
mov
sahf
loopne
ds
fwait
jp
dec
dec
mov
imul
mov
dec
cmp
test
cmp
das
jo
pop
dec
xor
ljmp
lods
adc
out
and
andl
dec
iret
or
jecxz
jae
insl
sar
add
jnp
xchg
movsb
cmp
nop
sbb
mov
jg
loop
mov
jns
add
jnp
jo
mov
pushl
call
mov
jmp
je
fucom
xor
repnz
loop
data16
sbb
call
push
sbb
mov
xchg
test
lds
outsl
fistpll
enter
and
pushl
ljmp
push
sar
and
push
bound
mov
sub
loope
ljmp
cmpsb
xchg
dec
cmp
and
jno
pop
cmp
sar
out
insb
add
addl
lahf
sbb
dec
loop
outsl
dec
in
push
negl
incl
lods
stos
adc
call
inc
and
das
jle
insb
mov
pop
sbbl
cmovge
stos
popa
sub
lock
ljmp
or
inc
bound
push
push
inc
add
mov
iret
mov
clc
inc
add
movsb
cmp
inc
pop
cmc
xchg
aam
rcr
mov
add
testb
pushl
jne
mov
inc
insl
in
imul
xchg
gs
shll
jmp
rolb
adc
call
sbb
lods
cmpsl
lds
or
orl
int
ljmp
mov
es
add
jmp
mov
or
imul
cltd
mov
incl
shl
mov
repz
mov
call
push
leave
fdivr
decl
lcall
adc
xchg
arpl
daa
test
lcall
mov
leave
mov
mov
pop
mov
faddl
cmc
sti
xor
push
arpl
andb
lcall
pop
lock
xchg
dec
cld
mov
inc
fisttps
xchg
popa
ljmp
lds
adc
push
aaa
cld
pop
std
aas
aam
mov
nop
mov
shrb
stc
scas
mov
loop
js
fs
incl
jl
mov
sbb
mov
inc
rcrl
repnz
xor
jg
adc
cld
test
inc
push
hlt
mov
scas
test
sbb
out
push
pop
xlat
in
push
mov
test
arpl
sub
cmpsl
mov
fs
outsl
vmovd
adc
mov
or
adc
mov
ss
add
in
mov
pushf
icebp
cwtl
gs
enter
dec
dec
xchg
inc
ljmp
test
xor
repnz
repnz
sbb
repz
xlat
push
adc
cmp
mov
out
call
jg
jle
hlt
into
xchg
adc
cltd
imul
in
sbb
adc
xchg
pop
inc
or
scas
aam
stos
std
out
outsb
rcrb
mov
pop
cli
cmp
sbb
add
add
cmp
aaa
xor
mov
fstl
jns
mov
in
jo
fistpl
jp
xlat
std
addr16
gs
dec
inc
push
je
ljmp
lock
jmp
xchg
ljmp
pop
pop
mov
cmp
add
sub
inc
pop
lcall
loop
jmp
fiaddl
cwtl
pop
hlt
sbb
aam
and
xor
movl
call
sarb
je
rorl
out
push
aad
dec
cmp
mov
mov
xor
hlt
and
adc
ljmp
inc
call
xor
addl
dec
cmp
jo
negb
test
cmp
jns
aam
outsb
enter
out
push
mov
movsb
dec
cs
mov
mov
inc
inc
cmp
pop
sbbl
dec
push
gs
call
mov
or
incl
insb
dec
inc
cmp
cmp
push
xchg
repz
jecxz,pt
ss
sbb
push
fs
pushl
mov
cld
sbb
fdivs
xor
fidivrs
inc
lods
inc
inc
xor
sub
adc
scas
das
clc
enter
ds
je
or
mov
cmp
call
in
or
insl
out
xor
cmp
incb
mov
add
and
mov
pop
jg
jmp
out
jg
movsb
fildll
lods
aas
push
sahf
in
cmp
xchg
pop
pop
repnz
push
mov
mov
xchg
lret
lea
pop
dec
jo
mov
out
sahf
push
call
sbb
mov
mov
inc
jl
shrb
outsb
inc
mov
outsb
pop
cli
jmp
lds
cltd
sbb
xor
xchg
add
outsb
das
cmp
push
dec
lods
or
dec
jge
xchg
incl
mov
cli
leave
in
add
ss
decl
xor
out
in
lods
adc
stos
cltd
mov
sbb
in
sar
add
jle
and
xor
xlat
jne
mov
std
shll
aad
ss
lcall
jo
mov
xchg
call
sbb
fucomi
lods
rcll
std
js
pop
and
mov
pop
aam
aad
fldcw
sahf
inc
dec
insb
mov
xchg
lcall
push
xor
xor
or
es
imul
cs
mov
pop
neg
decl
das
xchg
movl
mov
fistl
lods
jg
stos
lcall
jle
cmp
cmp
pop
cmp
aam
int
ljmp
sbb
xchg
add
call
mov
inc
sbb
incl
pop
push
push
and
ds
fdiv
mov
in
sarl
lods
movsb
sahf
xor
and
shl
out
mov
cmc
popf
in
cmp
addb
sbb
cmp
pop
pop
jle
lods
ljmp
into
pop
mov
push
hlt
push
mov
push
lea
mov
pop
xchg
icebp
cmp
or
clc
add
inc
pushl
stos
mov
and
enter
or
xor
sbb
jp
cmpsb
clc
scas
mov
jmp
cltd
push
addb
repnz
jb
test
push
lahf
or
cmc
mov
xchg
ljmp
xor
fisttpl
cmc
jg
inc
mov
mov
jl
lock
push
sti
mov
mov
ljmp
fdivl
scas
dec
stos
aad
pop
mov
jl
pop
dec
sbb
inc
movsb
imulb
mov
sub
push
pop
inc
xchg
fxtract
mov
pop
cmp
fistps
jmp
mov
imul
sub
andb
fst
push
or
jg
incl
loopne
mov
inc
xchg
out
arpl
xlat
and
mov
orb
faddp
int3
outsl
aaa
jg
cmp
sbb
ret
sbb
pop
std
jne
cmp
pushl
sub
pop
enter
pop
mov
leave
mov
jecxz
arpl
outsl
out
mov
inc
mov
cmp
and
repz
adc
les
dec
push
fistpll
into
ss
pushl
inc
aaa
jmp
inc
aas
pop
lret
movsl
cmp
sub
loop
pop
add
dec
cmpsb
push
decl
addr16
mov
nop
decb
inc
stc
clc
xchg
in
iret
movsb
dec
aas
loop
aaa
sub
jmp
bound
add
and
enter
and
xchg
outsb
sub
stos
mov
addr16
ljmp
in
idivl
cmp
adc
add
and
push
push
xorl
rcl
dec
or
mov
pop
dec
es
jmp
ljmp
lahf
stos
pop
data16
test
ds
push
adc
dec
fcomip
out
dec
cld
in
pop
lods
sahf
jae
xchg
mov
mov
xchg
add
ljmp
mov
cs
xchg
mov
jg
add
fisubrl
lock
mov
jnp
and
addl
out
jnp
orl
dec
mov
add
lock
push
out
add
fistpl
push
mov
sub
push
dec
mov
testl
frstor
push
mov
cmc
pushl
jge
fs
int
aaa
pop
inc
pop
mov
jo
cld
fwait
jb
jmp
out
sbb
sbb
std
dec
cwtl
mov
jae
ljmp
dec
xchg
adc
mov
jle
frstor
std
mov
out
mov
cld
clc
stc
jne
xchg
sbb
js
xor
enter
cld
cltd
mov
jo
aam
push
sbb
fnstenv
jne
and
jecxz
repz
in
aaa
mov
call
vmovupd
pushl
pop
or
adc
psubsb
mov
push
into
test
dec
or
inc
sub
inc
xor
cmp
shrl
adc
add
aaa
ljmp
cmp
and
mov
repnz
inc
aas
mov
jno
out
decl
mov
xchg
xchg
or
and
sarl
pusha
std
xor
cmpsl
icebp
push
clc
add
jmp
or
inc
daa
cmpsl
imul
addps
mov
add
push
jne
xlat
jno
or
pop
mov
mov
jle
pop
fwait
push
mov
mov
cltd
je
inc
and
jmp
mov
shll
xor
cmp
iret
lds
adc
mov
jecxz
cmp
xchg
jbe
notl
push
or
sub
ljmp
movsb
mov
jb
dec
push
push
int3
mov
aad
insb
lods
jecxz
xchg
and
jl
lcall
dec
push
outsb
push
fistpl
test
jmp
jmp
push
or
loope
and
ja
mov
mov
push
aam
mov
jp
subl
mov
call
jo
xor
pop
xor
aaa
sub
push
sub
aad
sbb
arpl
idiv
jg
mov
or
loope
inc
aaa
mov
into
std
fistpll
lret
xor
aas
and
pushl
and
xchg
std
shrl
pop
adc
fwait
inc
xchg
pop
imul
call
icebp
aaa
adc
test
pop
pusha
push
cmc
dec
mov
mov
loopne
mov
pushl
hlt
sub
dec
push
repz
mov
inc
inc
ffreep
dec
aad
adc
dec
test
icebp
jg
std
mov
cmpsl
outsl
and
pusha
and
jo
call
jge
mov
mov
and
das
mov
mov
in
pop
das
out
cli
lcall
xchg
dec
stos
lret
or
inc
inc
push
xor
sbb
fwait
incl
pushf
cmc
out
or
sub
mov
popa
cltd
xor
jmp
dec
jecxz
xchg
mov
mov
pop
mov
in
dec
repnz
fildl
cmc
aam
add
loope
incl
lock
push
xchg
shlb
aas
sbb
cmpsb
adc
pushl
mov
cmpsl
mov
cmp
cmp
popf
ds
jnp
add
enter
jle
dec
pusha
inc
aaa
push
push
arpl
inc
aam
movsw
in
nop
fs
xchg
outsl
and
adcb
sub
mov
jo
sbb
xor
xor
cmpl
dec
sub
incl
inc
and
andb
dec
pusha
push
ds
xchg
jmp
sub
inc
mov
xchg
xchg
dec
leave
lds
dec
imul
add
fdivrs
mov
outsl
jae
cmp
jne
lcall
out
add
mov
les
mov
jmp
push
movsb
xor
incl
repz
mov
fcomps
adc
and
mov
fadd
fwait
in
mov
lds
xchg
js
data16
dec
inc
jo
mov
fstpt
jno
and
jnp,pn
js
inc
mov
sbb
lods
mov
dec
jg
mov
sub
mov
push
or
iret
pushl
cmp
mov
push
adc
insl
in
int
push
mov
adc
mov
decl
cmc
fcompl
add
insl
add
mov
flds
add
ljmp
jle
shrb
addl
jns
mov
test
fadd
mov
fst
test
lcall
jecxz
lret
loope
pop
js
mov
mov
outsl
adc
cmp
aaa
pushl
sbb
push
ja
or
stos
inc
add
outsb
sbb
call
xchg
mov
in
xchg
jp
decl
cltd
loopne
push
cmp
or
sub
test
cmp
icebp
add
sub
jg
imulb
and
sbb
mov
imul
jbe
pop
mov
in
sub
incl
xchg
pushf
sti
imul
sbb
dec
mov
mov
leave
lods
popf
movsb
enter
dec
arpl
mov
popa
mov
sbb
mov
arpl
jbe
out
mov
imull
jne
and
lcall
add
int3
mov
fs
adc
sar
adc
cmp
jns
pop
sub
outsb
es
jmp
jl
mov
and
sti
cld
adc
sub
leave
decl
enter
daa
mov
sub
ljmp
clc
incl
jl
in
shll
xchg
pop
dec
arpl
pop
rorl
pop
lcall
mov
in
mov
repz
adcl
or
test
decl
inc
mov
cmpb
xchg
mov
aaa
inc
out
add
mov
sub
outsb
jnp
xor
fbld
jle
jb
cmp
sub
sarl
xchg
stc
jnp
pop
in
jmp
add
mov
mov
sti
in
mov
xor
jo
xor
fstl
mov
fstps
dec
xorb
neg
sub
mov
dec
call
adc
in
neg
imull
fisttpll
ds
das
js
sti
ljmp
jp
les
js
and
repz
arpl
ljmp
aam
sbb
mov
lret
sbb
popf
out
push
and
pop
into
fwait
mov
add
ljmp
xchg
push
enter
and
sbbl
mov
pop
enter
pop
ds
loop
stos
add
inc
add
inc
andl
cmp
aas
jae
push
add
mov
aas
or
xlat
stos
fisttps
push
enter
sub
jmp
hlt
sub
adc
ss
stc
xor
sub
jns
dec
pushf
addl
ficoms
std
pushl
imul
mov
cmp
icebp
mov
pop
test
lcall
rclb
pop
jo
in
scas
insl
jne
scas
xchg
xchg
aad
test
call
enter
push
adc
mov
mov
sub
int
or
fimuls
ja
fdiv
push
mov
clc
xchg
lcall
rcr
dec
rol
aad
add
inc
xor
testl
jge
sahf
push
push
je
xchg
repz
lahf
in
and
lcall
sbb
or
ljmp
jo
and
int3
lahf
or
jp
shl
sbb
jle
pushf
push
mov
jns
mov
sahf
fldcw
inc
repz
sbb
nop
ljmp
fiaddl
mov
std
jge
push
mov
push
fsts
mov
and
jo
je
cmp
sub
aad
in
test
out
inc
push
inc
andl
cltd
mov
jle
movsl
mov
pop
ds
mov
push
mov
jne
xor
iret
shl
push
popa
jmp
mov
jl
cmp
lcall
sbb
sub
ljmp
jl
xor
push
call
ja
std
clc
adc
mov
sbb
call
or
call
or
gs
jge
mov
jne
ret
clc
cmp
iret
ljmp
pop
je
lods
cmp
pop
xchg
push
std
imull
test
dec
mov
dec
mov
mov
cmp
incl
int
stc
imul
outsl
xor
mov
ret
out
lods
test
sbb
jmp
sti
cmp
dec
ds
xchg
neg
hlt
adc
into
shlb
or
lcall
adc
adc
pop
and
sub
adc
lds
or
xchg
in
dec
sub
ljmp
cli
push
sbbb
sbb
out
iret
dec
fcomip
mov
repz
dec
cmp
ljmp
mov
shrl
jl
insl
iret
imul
out
cmp
enter
adc
call
mov
in
in
pop
jae
stc
mov
dec
sub
rol
decl
jmp
sub
xchg
popa
and
inc
jecxz
pop
jb
or
jl
xlat
jnp
ljmp
sub
or
pop
mulb
mov
inc
push
in
adc
pop
jo
add
pushl
or
or
sbb
adc
les
lds
inc
and
add
xchg
mov
adc
xlat
dec
aas
addb
pop
lcall
add
jae
leave
push
push
dec
add
pusha
pop
ret
out
cmpsl
popw
je
add
mov
clc
push
mov
push
jb
test
in
push
push
insb
daa
add
cmc
xchg
push
bound
outsl
js
jecxz
pop
mov
les
int3
and
lcall
and
ficompl
and
sbb
jge
push
out
ret
test
test
pop
lcall
push
in
cli
mov
mov
dec
inc
xchg
mov
mov
pusha
jle
ror
int3
xchg
push
jnp
movsl
ljmp
clc
or
xchg
add
insl
hlt
movsl
or
pop
mov
adc
mov
cli
incl
xlat
push
test
push
pop
sub
push
popa
ja
mov
dec
ljmp
out
mov
in
xchg
add
xchg
mov
mov
mov
push
dec
es
clc
std
jne
enter
xlat
sbb
dec
mov
sti
ljmp
shll
gs
test
or
bound
push
std
fildll
cmp
sbb
movzwl
inc
leave
jae
mov
or
gs
out
pop
mul
sbb
fsubs
sub
mov
inc
adc
cs
jne
fdivl
and
inc
xchg
mov
cmp
sbb
xchg
je
and
adc
jno
aas
scas
or
movsb
shlb
pop
decl
xchg
pop
pop
adc
dec
xor
hlt
cmp
fwait
nop
push
rclb
aas
jnp
nop
pop
mov
in
insl
lcall
aam
cmpsl
cmc
popf
fninit
dec
test
xchg
pop
xor
lds
dec
mov
in
jne
fcomp
addr16
inc
fmuls
mov
add
cmp
nop
das
cmpl
mov
movsl
jb
add
xor
decl
xchg
fstp
or
fstl
insb
ret
sbb
ret
iret
leave
cli
cs
cld
ret
pushl
lods
in
lahf
sbbb
shr
push
xchg
xchg
add
xchg
loope
popl
hlt
cmp
fs
aas
xor
idivb
stc
call
cld
jg
testb
add
dec
jmp
push
cwtl
and
loopne
sbb
into
jg
adcl
and
cmp
mov
in
incb
xor
dec
movsl
jmp
xchg
jl
or
pop
and
and
ds
adc
jle
sbb
sbb
add
mov
mov
je
ljmp
stc
mov
int3
std
cwtl
shll
test
subb
jp
sbb
lret
and
cli
dec
repnz
call
pop
out
dec
jle
fsubs
mov
fbld
ljmp
mov
inc
mov
movb
iret
and
subl
lcall
mov
out
dec
pop
pop
mov
cltd
jl
sahf
mov
xchg
mov
lea
inc
std
out
mov
xor
mov
dec
int3
cmp
mov
aas
rolb
cmc
sub
mov
mov
ljmp
cld
push
subb
inc
nop
sbb
imull
dec
mov
push
sub
jmp
stos
lahf
fwait
sbb
stos
enter
lods
sub
loope
popa
cli
dec
data16
loope
mov
inc
mov
adc
rcl
fcmovnu
cmpsb
into
loop
insl
lods
scas
call
cli
jo
cwtl
or
stos
sub
call
ljmp
jae
addr16
push
sub
cmpsb
add
fcoml
clc
xchg
or
cmp
aas
sub
ljmp
incb
cmp
fsubrs
call
shrl
insb
stos
mov
mov
jle
xchg
adc
or
inc
enter
mov
jge
cli
and
repnz
xor
xor
fistpl
xor
decl
or
cmpsb
incb
push
dec
lock
test
xor
in
sbb
js
inc
xor
lcall
test
int3
aaa
fs
sub
cli
stos
out
fisubl
sbb
and
adc
xor
xor
mov
push
xchg
mov
loopne
ja
fcomip
sahf
popf
mulb
xchg
xor
fs
in
and
popa
jmp
add
push
int3
cltd
jle
pop
mov
push
sbb
mov
pop
addr16
dec
inc
jg
push
sub
push
jmp
add
out
icebp
mov
xor
sub
sbb
add
movsb
loop
mov
imul
lcall
jmp
pop
das
inc
pusha
xchg
pusha
xchg
stos
adc
sahf
sub
scas
mov
shl
lcall
daa
mov
lret
test
add
sbbl
and
call
and
imul
or
mov
pusha
aam
sub
cmp
push
mov
sar
push
lods
leave
in
outsl
or
lahf
fistl
adc
lcall
mov
cmpsl
or
call
aam
xor
sbb
out
enter
mov
push
pop
mov
call
pop
and
or
ds
cwtl
mov
movsb
scas
mov
and
jg
out
popa
lahf
jge
jle
pop
mov
inc
mov
adc
ljmp
std
xor
mov
mov
push
cmp
cmp
ljmp
dec
enter
shrb
push
jecxz
push
mov
mov
je
mov
inc
hlt
hlt
sbbb
decl
sbb
and
aaa
mov
mov
adc
push
cli
insl
mov
xor
add
adcb
pop
jp
mov
dec
enter
push
in
decl
cmp
mov
mov
out
in
ret
decl
jle
or
sahf
xor
xor
fwait
loopne
xchg
mov
push
add
jmp
mov
pushf
pop
push
fcmovnb
mov
inc
pop
push
imulb
call
stos
xchg
int
ret
push
push
pop
mov
decl
daa
inc
jns
fidivl
cmp
cwtl
sub
push
pop
jno
fildll
or
push
adc
mov
mov
xchg
push
loopne
pop
mov
dec
xchg
sbb
jg
cmp
sbb
arpl
incl
dec
mov
and
dec
jmp
rorb
sub
test
in
mov
testl
dec
sub
jns
jle
pop
scas
cmp
xor
cld
fucom
mov
outsl
lea
and
push
jno
pop
lcall
adc
jle
dec
mov
ret
mov
pop
or
dec
jmp
mov
pushl
cmp
test
mov
lret
loope
mov
mov
mov
or
outsl
cli
jg
ret
insb
stc
sub
rorb
mov
mov
pushf
pop
decl
cltd
sub
jle
je
xchg
mov
cmp
ret
das
imull
mov
pop
mov
call
ljmp
popa
or
mov
outsb
sbb
outsl
ret
sub
pushl
dec
imull
out
push
rep
dec
iret
das
push
jmp
insb
push
lret
xor
dec
cmp
pop
pop
cmp
cmp
iret
push
notl
pushl
call
lcall
sub
outsl
out
loope
das
addl
ds
adc
cli
outsb
mov
mov
add
inc
add
jmp
mov
call
sub
push
mov
leave
adc
sbb
ds
pop
jo
mov
xchg
and
inc
push
jmp
add
mov
sub
mov
xor
dec
pop
mov
incl
mov
cmp
xchg
jbe
xchg
stc
test
and
and
lret
fcomip
jp
mov
mov
in
cmpb
sbb
xchg
cmp
mov
incl
push
imulb
lcall
jno
lret
das
es
aad
jne
pop
pop
sbb
sub
or
fcomp
push
mov
dec
lcall
and
je
xchg
ja
mov
inc
mov
add
ljmp
sub
int
jo
adc
xchg
sbb
out
idiv
mov
loop
shl
pusha
shrl
mov
adc
push
push
test
push
cltd
xchg
iret
mov
inc
andb
and
mov
sub
es
mov
jae
testb
sarb
incl
fisubl
and
ja
insl
sbb
adc
mov
jg
add
add
pop
jg
fcoms
pop
and
add
dec
orb
xor
lahf
pop
mov
fsubp
test
and
jle
push
mov
jno
jg
sub
sahf
imul
sbb
dec
xor
mov
insl
jno
mov
int3
xor
jnp
xchg
movsl
push
daa
inc
negb
push
xchg
dec
and
cmpsl
push
and
cs
rcl
negl
inc
scas
push
push
push
and
stos
push
and
push
test
and
mov
imul
push
inc
pop
pop
add
repz
incl
mov
pop
sbb
add
mov
push
add
push
ds
les
push
adc
fs
mov
add
imul
push
leave
imul
fnstcw
sub
lret
mov
jbe
mov
or
jae
mov
adc
cmpsl
fldcw
insl
fucomip
xor
jb
ss
add
jo
mov
push
shll
add
outsl
adc
shll
fidivrl
iret
outsb
or
push
push
ja
ret
je
fidivrs
out
jge
mov
cs
fisttps
add
fwait
inc
ds
in
movsb
push
fistpl
mov
jae
shlb
cmpb
arpl
push
push
push
aaa
fcmovnbe
mov
push
jne
push
aam
push
ret
add
lahf
jbe
push
mov
push
pop
dec
jbe
cmpsl
mov
push
data16
sarl
pop
aaa
add
push
xor
shlb
lret
stos
mov
add
ja
push
push
xlat
jne
add
push
jbe
fdivs
push
aad
push
xlat
ja
fwait
testb
fidivrl
push
jp
jp
mov
mov
inc
push
fidivrl
sarl
ja
lods
pop
mov
fldl
ret
jmp
ja
mov
ljmp
xchg
in
xchg
sub
je
cs
xchg
xor
xchg
push
setbe
xor
ss
aaa
addr16
fildl
lcall
push
cmp
pushf
cmp
ds
push
out
popf
xchg
popf
aas
push
sahf
inc
push
lahf
inc
mov
mov
mov
push
jmp
std
outsl
imulb
movl
out
push
iret
repz
hlt
clc
stc
cli
sti
cld
or
repz
incb
jecxz
arpl
xor
add
jo
imul
pushw
add
pop
add
pop
add
adc
xchg
adc
mov
mov
mov
add
jg
add
add
or
add
add
in
add
or
test
ja
add
test
or
push
sbb
or
pop
pop
adc
xor
add
pop
add
push
lods
lods
pop
fidivl
mov
add
scas
insl
or
scas
lods
pop
pop
adc
and
fiaddl
lods
adc
sbb
jns
scas
sbb
scas
scas
scas
scas
sbb
inc
ficomps
mov
mov
and
inc
mov
push
mov
add
add
push
push
mov
lock
and
mov
mov
pop
and
pop
mov
and
add
mov
mov
subb
pop
sub
mov
xchg
pop
pop
sub
lret
daa
mov
and
mov
movsb
jns
aas
cmp
mov
fsubs
add
pop
aaa
cmpsb
push
jmp
roll
mov
adc
data16
push
pop
pop
or
or
add
out
addr16
insl
pop
pop
xor
mov
pop
das
push
cs
xor
in
std
mov
add
xor
das
pop
push
push
xor
adc
pop
push
cs
incl
inc
das
inc
inc
xor
adc
push
xor
push
push
popa
jbe
cmp
jl
jge
jno
dec
inc
adc
pushw
decl
cmpb
jo
mov
inc
xorl
mov
xchg
xchg
xchg
popf
pushf
fwait
cld
jg
lcall
mov
mov
inc
xchg
push
dec
in
fisttps
jle
je
push
bound
js
lock
cmp
je
pop
inc
mov
jg
fmuls
cmp
addb
int3
and
rcr
add
scas
dec
sub
aas
outsl
out
sti
mov
jb
mulps
add
push
mov
movsb
dec
and
cmpsb
push
mov
xor
xor
ja
or
ja
jb
cs
xor
mov
pop
scas
pop
jbe
popf
mov
jle
and
push
mov
xchg
jge
dec
pop
jo
push
inc
mov
cmp
inc
xchg
xchg
jae
lahf
xor
xchg
jp
inc
dec
popf
mov
aaa
jle
out
add
add
xchg
jb
push
bound
out
cmp
mov
mov
inc
push
sahf
aas
mov
insb
add
outsb
add
xchg
xchg
pop
push
data16
cmpsl
mov
cmpsb
dec
push
dec
push
movsb
jae
add
jb
das
pop
mov
shll
outsl
pop
xlat
pushf
push
rorb
add
lcall
outsb
mov
dec
fdivrs
sti
push
add
ja
sahf
jbe
fistpl
imul
notb
outsb
ds
push
add
and
es
js
outsb
testb
mov
shrl
insb
mov
outsb
push
outsl
ror
push
ds
cld
lret
add
push
jg
fiadds
fcmovnu
mov
call
mulb
mov
in
mov
add
bound
out
arpl
push
loopne
dec
mov
push
iret
sahf
mov
jb
mov
xchg
in
push
jle
or
jecxz
or
fiadds
fnstcw
aad
push
divb
fildl
adc
faddl
pop
subb
testl
faddl
sbb
test
in
mov
push
xchg
nop
and
fwait
add
in
xchg
lock
sub
sub
pop
sbbb
scas
outsb
out
xchg
das
push
xchg
mov
outsb
repnz
xor
cwtl
push
cmc
sahf
xor
lcall
fwait
cmpsb
pop
cmp
sub
aam
jle
push
cmpsb
mov
jo
test
sahf
ljmp
shrb
mov
pop
lock
lgs
int
mov
mov
sarb
push
rcr
rcl
mov
rorb
mov
data16
add
addr16
pushf
sahf
cs
dec
out
je
cmp
add
inc
push
or
add
mov
femms
or
div
pop
enter
sbb
or
es
push
adc
mov
add
push
add
add
ds
add
scas
mov
mov
xor
ds
xchg
push
mov
mov
mov
testb
mov
mov
mov
mov
and
fildll
ds
mov
aas
and
imul
in
lods
es
aas
aas
cmp
cmp
aaa
add
ss
add
incl
imul
jle
cmp
repz
ds
jle
mov
mov
aas
adc
ds
xor
dec
sti
data16
out
inc
test
mov
ds
add
mov
pushl
lds
ds
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
mov
mov
mov
ds
xor
sub
sub
add
fisubrl
sub
sub
ljmp
mov
sub
dec
and
inc
mov
push
push
push
push
push
imul
imul
push
push
push
imul
fildl
pop
imul
nop
cltd
mov
mov
decl
xchg
pop
cmp
insl
popf
mov
jge
jns
jns
jle
subl
cmpb
jb
ja
jno
outsl
outsb
pushf
sti
jne
mov
addb
aaa
inc
add
push
push
pop
out
push
add
mov
insb
enter
add
dec
xor
mov
aas
add
xchg
pop
cmp
test
add
mov
add
mov
loop
push
mov
fnstsw
repnz
pushl
inc
add
gs
pushf
add
mov
push
jns
imul
bound
push
arpl
mov
or
or
push
push
dec
lret
js
into
xchg
mov
add
mov
mov
test
scas
xchg
js
in
and
cmp
dec
nop
sub
sub
mov
push
xchg
push
sub
nop
sub
xchg
mov
ficoms
es
mov
jle
jbe
negl
fcmove
fst
test
lret
loopne
push
std
push
adc
divl
fwait
lods
adc
xchg
add
test
jg
jle
jo
insb
add
leave
inc
add
add
jmp
cmovnp
dec
dec
dec
add
pop
sti
pop
in
add
push
dec
or
adc
cmp
adc
dec
or
add
dec
push
adc
add
or
pop
pop
lods
stc
cmpb
inc
push
dec
sbb
jbe
sarl
adc
inc
inc
adc
sbb
dec
add
push
jg
adc
inc
ds
cmp
cmp
cmp
daa
and
sbb
sbb
loop
lcall
and
add
dec
ss
xor
sub
sub
stos
sbb
lods
mov
addb
mov
xor
mov
mov
mov
inc
push
jbe
add
add
shr
push
outsl
add
addb
pushf
andl
pop
sbb
add
and
jbe
sarl
orb
jmp
lock
xlat
sbb
incl
pusha
mov
adc
sysret
or
cmpb
pusha
movsl
ds
xor
in
pop
inc
jb
lock
hlt
and
or
xorps
push
and
inc
jg
ja
add
outsl
int3
inc
andb
sbb
ret
pop
lahf
and
addb
jg
xor
sar
mov
cli
fisttps
arpl
sbbb
or
cmpl
push
push
xchg
jg
roll
mov
and
pop
das
sti
mov
les
inc
int3
mov
or
jg
popa
mov
cmp
adc
or
pop
ja
es
idivb
shrl
push
cld
jg
adc
add
xor
pop
jle
cmpsb
add
mov
std
jg
or
je
dec
ret
pop
jg
push
dec
bound
incb
lret
data16
or
or
inc
addl
xor
addr16
or
cwtl
sub
incb
sbb
sbb
ficomps
jg
mov
mov
add
addb
jg,pt
jo
lea
push
jbe
les
fldt
pop
add
adc
lea
and
adcl
flds
add
sbb
lods
jle
lret
les
mov
addr16
add
jle
mov
mov
xorl
add
inc
xor
or
data16
inc
loopne
push
jg
adcb
addb
incl
inc
pusha
addb
and
inc
ss
pop
xchg
or
inc
dec
jg
or
mov
mov
mov
ljmp
fisubrs
imul
daa
aas
aaa
pop
pop
outsb
mov
add
pop
jle
js
shll
add
orb
mov
jle
sbb
add
test
jle
push
dec
xchg
popf
xlat
dec
testl
mov
push
comiss
daa
push
arpl
inc
insb
pop
push
mov
arpl
out
decl
xor
dec
inc
iret
xor
lcall
push
or
ljmp
dec
mov
adc
jle,pt
jle
xor
push
fnsave
aam
push
fnstenv
add
enter
push
jne
pop
push
jbe
push
movsb
insl
inc
out
push
jnp
push
jp
fildl
js
dec
jbe
pop
pop
xlat
fadds
pop
mov
mov
test
es
push
outsb
inc
popf
push
daa
ljmp
incl
shlb
jle
dec
ljmp
outsb
ss
out
test
xchg
dec
ja
inc
cmpsl
xchg
call
test
jns
fiadds
inc
outsb
lahf
mov
push
mov
fisubs
sahf
inc
out
or
sbb
insb
fwait
int
cs
aas
popf
inc
push
pushf
cmp
mov
jb
cwtd
mov
push
xchg
xor
xchg
xor
sub
fidivl
nop
daa
ss
cs
in
ss
or
outsb
test
push
call
lcall
mov
jg
test
ja
xor
lcall
sahf
pusha
enterw
es
or
insl
xchg
cs
add
pop
ja
dec
push
int3
rclb
xchg
movb
movsb
call
imulb
mov
add
add
les
mov
testl
or
mov
add
movb
outsl
pop
add
xchg
mov
adc
adc
aas
push
adc
iret
repz
mov
lea
jg
push
popf
push
imul
mov
sbb
test
push
mov
dec
repz
cmp
cmp
jmp
in
icebp
imul
add
sub
ljmp
mov
dec
out
imul
mov
pop
mov
mov
fisttpl
sbb
xor
dec
cli
or
sti
xchg
fidivs
xchg
std
into
jmp
syscall
mov
sub
xchg
fcmovb
add
pop
xchg
sbb
inc
pop
lcall
or
mov
sub
or
addr16
daa
cld
pop
das
or
mov
cld
call
incl
sub
std
out
mov
popl
lcall
or
mov
mov
push
fdivr
ds
lods
xor
xchg
incl
fadds
incl
fmuls
out
ljmp
sub
decb
push
xor
adc
incl
sbb
sub
xor
cmpsb
scas
ljmp
xchg
cmp
decb
mov
jno
add
fmull
xor
incl
mov
sysenter
xor
push
incb
pop
sbbl
inc
orb
jae
sub
iret
call
incl
or
xlat
cltd
inc
sbb
decl
sub
pop
lcall
mov
aaa
sti
push
std
pushl
dec
fildl
out
adc
push
pusha
add
mov
addb
push
xor
add
call
jg
and
dec
out
cli
pop
rorb
idiv
loop
sbb
dec
arpl
sub
incl
decl
jmp
fwait
cld
or
incl
fcmovbe
pop
divb
xorps
push
test
mov
out
push
shll
sarl
add
ret
jmp
push
adc
mov
ljmp
lahf
inc
inc
push
inc
imul
popf
inc
pop
inc
pop
mov
arpl
sahf
movsb
dec
push
stos
push
and
sahf
int
inc
cmpsb
dec
dec
inc
popf
mov
dec
mov
and
adc
dec
push
out
push
shrb
repz
outsb
shll
dec
lret
xchg
push
push
jb
dec
xchg
das
xor
das
push
iret
insl
fs
outsl
pop
imul
push
push
push
xchg
stos
and
ljmp
jmp
lcall
sbb
pop
add
repnz
push
jmp
mov
movsb
outsl
pushf
cmp
aas
decb
cwtl
xor
int
pop
lahf
push
inc
push
xchg
mov
sahf
dec
push
push
aaa
push
lcall
cltd
movsb
xchg
push
xchg
es
xchg
xchg
xchg
notb
sub
dec
push
xchg
pushl
xor
data16
fimuls
sbb
add
or
pop
and
test
inc
fstpt
push
jnp
sarl
mov
or
push
jl
or
ss
jbe
jl
push
jge
jg
es
outsl
data16
jle
repnz
push
dec
push
dec
repnz
rep
div
repnz
jae
pop
fidivrl
push
mov
jnp
sbb
push
jge
jl
cli
int3
outsb
push
inc
xchg
pop
nop
negl
adc
xorb
outsl
aad
and
mov
adc
jns
lods
or
imul
cmp
jnp
lahf
dec
es
addl
decl
push
orb
jg
and
xchg
out
push
sub
mov
out
mov
cli
ljmp
in
mov
idiv
or
jb
sub
jg
mov
icebp
dec
mov
dec
mov
or
jle
inc
sub
jg
mov
icebp
cld
inc
daa
jg
mov
nop
inc
push
nop
ja
loope
xchg
enter
cld
jp
es
xchg
pop
dec
shll
and
jmp
mov
enter
dec
in
sarb
mov
pop
ja
dec
test
jg
jge
idiv
movsb
sub
fsubrl
movsb
or
push
inc
adc
int3
decl
inc
jp
mov
fidivrl
arpl
clc
jbe
jmp
decl
pop
push
pop
push
imul
ljmp
mov
std
mov
jp
int
push
jns
mov
sub
mov
jmp
xchg
jmp
mov
push
mov
cltd
int
sbb
jmp
adcb
xchg
jmp
cs
sbb
loope
and
lret
in
insl
or
push
leave
add
mov
ljmp
stc
inc
or
dec
xlat
push
cmovno
imul
sbb
outsb
imul
push
pop
add
add
and
out
lretw
mov
add
add
shld
and
cmp
call
pop
mov
sbb
xchg
push
jbe
jp
jp
test
pop
push
sbb
fstp
add
push
sbb
push
or
and
add
mov
sbb
outsb
or
test
dec
andb
add
push
inc
add
and
lock
push
adc
dec
and
jecxz
mov
add
add
gs
inc
push
gs
jo
loop
or
cwtl
test
add
xor
std
and
cwtl
imul
jo
and
jae
sahf
and
push
aaa
xchg
and
cltd
mov
test
add
lock
inc
jmp
lahf
jo
das
insb
pushf
xor
sbb
add
imul
fidivrl
push
adc
add
add
mov
and
adc
push
aad
mov
add
xor
les
xchg
inc
movsb
in
rcrb
movsl
adc
dec
les
lods
add
aam
test
mov
jo
adc
faddl
insl
jnp
rcll
popa
bound
inc
xchg
and
into
mov
jb
sub
and
rol
add
mov
sbb
add
or
add
inc
sub
adc
das
dec
inc
imul
clc
pop
pop
adc
xor
pop
insl
pop
add
loopne
mov
add
xchg
cmp
pushf
xchg
cmp
pop
mov
lcall
lahf
push
ss
inc
mov
add
xchg
push
scas
jo
xor
dec
push
outsl
loop
cmpsb
or
push
pop
xchg
mov
sub
mov
pusha
sbb
bound
testb
incl
sub
adc
movb
loop
adc
add
insb
jne
addr16
and
les
xchg
cmp
or
or
popa
push
add
pop
sbb
lea
dec
sbb
cmp
fistl
arpl
sbb
xchg
pop
jno
movb
add
fiaddl
add
pop
push
jne
cmp
popa
xchg
aad
pop
pop
cmpb
inc
je
les
adc
adc
push
push
ret
add
sbb
negb
cmp
jo
je
dec
shr
push
dec
in
xchg
pop
and
sbb
insb
xor
mov
xor
popa
jno
sub
xor
adc
dec
outsl
and
adc
jecxz
sbb
js
adc
pop
xorl
mov
push
mov
adc
push
push
jb
dec
inc
mov
pusha
cwtl
jmp
sub
cmp
lock
shl
inc
je
arpl
xchg
bound
iret
push
adc
fisubs
fcomps
cltd
xchg
lods
shll
xchg
mov
icebp
popa
and
pop
test
push
add
ss
add
and
sbb
add
add
push
inc
sbb
xor
inc
fsub
sub
hlt
inc
cwtl
xor
fbstp
cltd
loopne
push
jae
xor
sbb
inc
push
pop
push
pop
mov
sbb
das
xchg
insl
insb
outsb
mov
imul
cmpsl
ja
sbb
rcr
pop
test
ss
and
mov
scas
and
mov
ds
je
jne
inc
mov
and
gs
outsl
jae
sbb
repnz
push
outsl
mov
xchg
mov
icebp
pop
sub
mov
movsl
pop
movsl
insl
and
fisubs
mov
inc
arpl
mov
jge
sar
das
sub
aas
sub
xchg
pop
sub
dec
pop
or
mov
lods
out
mov
fcoms
lea
jnp
push
inc
mov
inc
xchg
aaa
push
pop
imul
insl
sbb
arpl
or
add
mov
mov
insl
sbb
mov
movb
and
outsl
test
inc
and
lds
sub
jne
push
pop
push
mov
inc
insb
push
popa
or
and
push
jb
int3
js
dec
inc
inc
xchg
cmp
push
rorl
fs
out
imul
mov
insl
ja
insb
push
xor
push
and
adc
sbb
sub
fs
mov
neg
fwait
push
mov
test
enter
loop
ss
cmpsl
stos
dec
inc
add
xchg
add
and
leave
fsubrl
push
jg
jns
and
je
lock
push
jo
and
lret
push
les
std
addr16
inc
movsb
add
inc
xor
addb
js
pop
mov
adc
mov
outsb
inc
sbb
inc
pop
data16
pop
inc
je
fsubl
decb
lea
hlt
inc
inc
and
es
xor
sub
push
push
js
add
pop
jnp
lcall
dec
add
sbb
mov
lcall
add
or
imul
imul
in
lcall
pop
pop
add
nop
inc
add
sbb
or
or
mov
sbb
xchg
mov
pop
mov
mov
jo
sbb
out
test
ret
popf
stos
dec
test
subb
popf
cmpsl
and
cwtl
data16
xchg
mov
mov
inc
insb
scas
push
and
push
fadds
xchg
enter
sbb
push
xor
mov
out
xchg
enter
les
inc
sbb
stos
es
add
sarb
mov
mov
ja
mov
call
jne
nop
push
cmp
lods
dec
in
addb
in
subps
push
jge
iret
xor
pushf
xor
adc
add
xor
and
xor
imul
inc
sbb
inc
insb
sub
pusha
push
mov
jbe
xor
ja
dec
pop
lret
inc
xor
outsb
sub
mov
xchg
mov
out
or
popw
xlat
adc
or
mov
sbb
dec
add
insl
lret
mov
pop
sbb
inc
xor
push
fs
enter
pop
lret
mov
out
inc
aaa
outsl
fadd
shl
and
mov
jecxz
inc
ret
lods
outsb
jbe
pop
xor
cmp
into
mov
andl
mov
push
mov
cmp
push
rorl
dec
inc
push
movsl
and
sub
inc
jns
rcll
inc
daa
dec
cld
addr16
adc
arpl
ficoml
test
pop
xor
adc
arpl
sbb
mov
inc
xor
sbb
adc
mov
nop
fs
mov
cmp
jns
cwtl
sbb
scas
sbb
pop
in
inc
cmp
push
mov
jg
out
pop
sub
inc
xchg
cmp
sarb
dec
test
xchg
cli
shll
push
jne
ret
sbb
xchg
add
sub
lods
mov
xchg
jbe
enter
adc
inc
cmc
push
mov
icebp
inc
push
inc
inc
lret
pop
cmp
xor
sub
push
addr16
push
or
arpl
dec
cmp
mov
mov
cltd
mov
outsb
inc
test
cmp
xchg
jae
xor
shrb
and
out
addb
sub
inc
push
jp
push
cmp
testl
daa
pop
movsb
ja
scas
fbstp
test
add
sbb
mull
lea
ja
insb
add
add
jo
add
jg
jbe
pop
or
sub
enter
push
ret
fadds
mov
push
lock
add
inc
dec
adc
imul
in
mov
jl
inc
ja
fwait
add
pushf
mov
jnp
cld
push
sarb
scas
ja
or
enter
push
mov
outsb
jo
out
push
rorb
push
pop
imul
imul
shll
mov
adc
add
push
xchg
incl
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
