mov
xchg
mov
in
inc
inc
test
sub
cmp
mov
pusha
out
dec
ficoms
adc
mov
pop
cmp
call
into
lret
dec
cld
mov
stc
jmp
out
pop
lcall
out
ljmp
mov
pop
mov
imull
insb
cld
push
pusha
fsubs
mov
and
jg
sbb
push
xor
repnz
mov
imull
push
outsb
mov
dec
inc
leave
fs
mov
dec
adc
mov
inc
jae
cmpsb
and
lea
cmpsl
mov
xchg
cmp
pop
cmp
pushf
in
mov
vsqrtps
leave
out
cwtl
adc
imul
fldl
sbb
icebp
dec
fbld
and
mov
loopne
or
or
jle
out
leave
jbe
add
add
lcall
test
inc
cmc
aad
jmp
mov
test
mov
push
mov
push
push
pusha
inc
scas
push
sub
incb
push
test
mov
push
mov
test
jne
lret
je
push
push
cmp
mov
push
hlt
xchg
out
mov
fisubrs
mov
push
jne
sarb
fistpll
pop
imul
ljmp
sbb
mov
lods
sbb
adc
das
loop
pop
cs
pop
insb
fildll
mov
dec
add
add
cmp
jnp
cmpsb
dec
sbb
inc
addr16
jl
xor
xchg
cs
pop
xchg
xor
leave
fst
xor
aam
loope
ret
dec
lcall
sahf
inc
dec
sbb
call
lret
dec
or
daa
sub
repz
mov
sub
sbb
std
sbb
into
mov
lret
out
sub
pop
xor
inc
pusha
movswl
aam
in
adc
mov
shlb
cmp
mov
popa
std
inc
xchg
cmp
push
out
add
or
mov
fwait
ljmp
mov
pop
lock
xor
nop
jno
fs
adc
decl
cmpsl
andb
xchg
jecxz
ret
and
jno
pop
xor
outsl
sub
scas
mov
fwait
sbb
int3
hlt
or
popa
repnz
aas
add
push
fdivrs
xchg
jle
mov
mov
and
scas
in
in
xchg
push
xchg
cmpsb
or
and
loope
aad
js
jns
xchg
movd
idiv
or
jp
loope
mov
clc
cmc
outsl
xor
dec
cwtl
pop
lods
cmpsl
das
jmp
sub
sbb
ds
jb
xchg
jp
jns
dec
jle
pop
adc
mov
inc
inc
xor
add
mov
sbb
arpl
dec
mov
faddp
pop
pop
fs
xchg
jge
sub
sbb
aad
lods
ss
shrb
sbb
inc
jns
mov
popa
push
in
sub
pop
insb
imul
push
popa
sbb
xor
xchg
out
xor
dec
xor
mov
cmp
lret
xchg
ds
sbb
insl
mov
adc
loope
and
add
push
fsubrp
mov
shr
iret
outsl
mov
and
iret
rclb
lods
add
cld
or
mov
jne
movsl
cltd
add
leave
pop
ljmp
fdivl
or
rolb
gs
fs
jns
xchg
insb
test
insl
jns
xchg
call
push
dec
fcmove
add
repnz
fdivs
lea
pop
cmp
xchg
mov
and
mov
xor
lcall
ja
mov
mov
cmc
imulb
mov
cmpsb
fwait
in
negb
leave
push
push
lods
xchg
mov
mov
movsb
xchg
or
add
std
mulb
jnp
or
out
rcr
std
lret
leave
jno
pop
adc
decb
mov
shrl
popa
add
jmp
mov
inc
jl
ret
pop
lock
jno
and
in
jae
xchg
inc
push
cli
sub
add
pop
bound
neg
push
xor
mov
data16
insl
rcll
jle
cmpsl
fisttps
mov
xor
jmp
repnz
std
lds
das
jb
js
mov
push
jecxz
cmp
ss
cmp
int3
bound
cltd
call
dec
fcomp
mov
cld
sbbb
dec
rcrl
in
int3
leave
je
mov
push
push
out
sbb
and
pushf
xor
icebp
inc
push
test
pop
testb
shll
pusha
mov
cmp
jecxz
pushl
jecxz
lods
fnsave
sbb
sub
das
mov
sbb
loopne
xlat
push
das
pop
xlat
ret
lods
ljmp
test
pop
stos
add
jb
jecxz
mov
jle
adc
adc
js
dec
and
sbb
xor
mov
mov
das
clc
outsl
mov
fs
pop
fisttps
ljmp
adc
sbb
orl
inc
mov
addb
movups
jp
cs
dec
xchg
lods
add
iret
lock
addr16
bswap
sahf
mov
adc
test
mov
push
stos
pop
jge
arpl
aad
adc
mov
dec
in
in
sbb
cltd
adc
and
xor
repnz
dec
sbb
mov
cli
jne
inc
sysenter
dec
mov
data16
fildll
pop
lcall
pop
cmp
pushf
xchg
int3
aas
clc
push
adc
mov
cmp
cmc
hlt
stos
das
ret
inc
imul
nop
dec
pusha
sbb
cmpsl
stos
clc
xchg
pop
mov
inc
mov
in
insl
mov
inc
popa
enter
push
ja
jge
xlat
pushf
sbb
xor
lea
jp
and
outsl
mov
fistpl
fnsave
inc
pop
pop
cwtl
push
lahf
xlat
cld
pop
sub
or
fstps
xchg
mov
ja
xor
pop
shlb
jo
stos
dec
ljmp
fisttpll
push
test
mov
pop
xor
jnp
inc
jbe
and
in
jge
cmc
pop
in
push
fimuls
cmp
or
mov
lret
es
clc
cltd
in
mov
fdivs
movsl
inc
jmp
mov
jns
int3
inc
ds
shll
ljmp
addr16
pop
sub
mov
xor
outsl
sbb
jno
mov
ja
jmp
pusha
mov
mov
push
jp
xchg
dec
ja
fmulp
xchg
push
adc
je
mov
sub
adc
mov
enter
cmp
or
dec
xchg
cmc
push
std
mov
js
mov
or
mov
dec
movsl
jp
xor
lcall
dec
and
daa
mov
pop
int
push
xor
dec
push
rcrl
inc
xor
sbb
aaa
pop
or
shll
xor
mov
mov
in
imul
sti
mov
sbb
xor
sbb
cmpsl
ret
shlb
cmp
arpl
inc
sbb
inc
outsl
scas
out
jle
je
testl
sbb
inc
xor
xor
adc
adc
dec
js
popa
pop
inc
mov
xchg
mov
out
addr16
pop
js
add
dec
or
lret
inc
sub
cmp
xchg
mov
gs
scas
adc
mov
jmp
jb
jbe
jecxz
dec
xchg
leave
pop
mov
es
push
out
mov
fcomps
pop
loopne
jge
cmp
sti
or
mov
repz
mov
sbb
push
nop
push
or
in
or
add
push
xor
out
das
push
jae
jne
adc
add
sub
cmpl
mov
jmp
movsb
mov
popa
xchg
mov
iret
pop
cmpsl
idiv
dec
out
xchg
xlat
lds
lahf
ret
daa
iret
nop
xchg
js
push
les
cmp
test
out
cmp
arpl
mov
xchg
sahf
adc
out
ljmp
test
fcmovnu
popa
scas
imul
jns
fucomi
fcmove
mov
pop
xor
cwtl
mov
add
cmp
push
sbb
add
rolb
add
xor
insb
and
loopne
inc
xchg
cmp
xchg
cmpsl
mov
test
jnp
daa
outsl
sub
sub
sub
xlat
das
aam
adc
dec
inc
arpl
push
jb
mov
add
mov
dec
jne
fwait
pop
add
rorl
pop
lcall
lock
mov
inc
pop
adc
test
mov
sub
aad
daa
push
jmp
xor
call
rep
scas
aad
xchg
mov
cmp
push
aam
add
scas
or
xor
mov
iret
icebp
repz
xor
push
adc
dec
push
inc
mov
and
aam
lret
mov
rcrl
popa
call
pop
dec
loopne
jp
add
mov
test
mov
in
cmp
inc
mov
xor
pop
in
push
jp
xchg
lahf
jecxz
cmp
inc
sbb
outsl
ja
outsb
xor
push
dec
stos
add
push
dec
jge
fcompl
cmc
xor
mov
add
pushl
kmovb
int
sub
adc
jp
lock
fldt
hlt
ljmp
mov
sbb
or
push
mov
adc
stc
jo
sarb
push
or
inc
lcall
into
push
inc
in
movb
sub
adc
mov
xchg
xchg
jmp
sbb
push
or
fsubl
mov
and
and
aaa
cwtl
test
xchg
mov
mov
shll
fcomps
cmpsl
inc
fs
sub
das
push
icebp
push
cmpsl
outsl
sub
jle
or
lret
pop
jae
push
gs
mov
mov
xchg
movsl
push
jp
and
loopne
sbb
sbb
enter
cmp
pop
in
aam
addr16
sub
dec
xor
ret
cmpl
xlat
data16
sbb
sbb
pop
push
ljmp
sbb
mov
or
lods
xchg
and
lods
mov
pop
mov
xchg
xor
dec
out
push
mov
in
ja
add
add
icebp
les
shlb
fisubs
push
xor
jnp
push
and
xor
mov
cs
mov
out
mov
mov
popf
sbb
mov
mov
scas
or
cli
mov
jecxz
fsubl
test
ss
mov
pop
pop
icebp
xchg
cmp
xchg
incl
lods
ljmp
pop
pop
divb
dec
daa
fs
pop
inc
fldenv
sub
mov
ljmp
outsb
scas
mov
repnz
imul
xchg
jl
stos
inc
pop
rorb
roll
pop
aaa
mov
es
iret
loope
inc
outsl
pop
adc
or
int
aad
dec
cltd
iret
incb
or
faddl
fstpl
stos
and
jbe
jns
push
and
inc
outsb
lods
icebp
mov
das
pop
fimull
xorb
add
xchg
xchg
xor
xor
xchg
xchg
pop
xor
jbe
xor
cltd
stos
cmp
jle
loopne
push
adc
out
xor
inc
mov
call
je
ja
push
rcrl
xor
dec
xchg
pop
mov
xchg
mov
jno
data16
jle
push
xchg
mov
xor
scas
jne
mov
mov
pop
sub
jae
js
ljmp
dec
repnz
inc
enter
ljmp
pop
decl
in
sbb
push
xor
leave
mov
outsl
sub
xchg
insl
sub
lock
xor
xchg
es
cmc
cmp
push
cmp
jbe
inc
mov
hlt
mov
push
movsl
cmp
jne
mov
mov
jb
inc
popa
das
xor
xchg
scas
mulb
dec
adc
dec
int3
iret
in
and
add
xchg
cmp
cmp
je
lods
mov
into
scas
adc
cmpsb
sub
popa
fstps
aaa
ja
test
jmp
xchg
mov
xor
loop
jns
out
lea
or
xor
insl
mov
insb
cmp
add
aad
fimuls
rcl
nop
pop
rclb
add
inc
sbb
fcomip
out
mov
lret
shll
pop
out
jl
xor
mov
fdivr
jbe
aaa
mov
int
jge
push
ffreep
ret
xor
dec
mov
and
outsb
dec
mov
ret
rcr
insl
hlt
xor
sub
dec
dec
movsl
negb
push
movsb
push
test
push
push
and
fildll
push
adc
mov
aam
lret
es
fs
dec
fldcw
mov
dec
fiadds
lret
cld
and
pop
xchg
add
movsb
jmp
xchg
mov
in
adc
cmpsl
in
jnp
push
adc
lahf
sub
fistpll
xor
mov
add
and
inc
mov
or
in
jge
lret
push
inc
mov
pop
mov
out
imul
pop
dec
scas
inc
sub
into
cld
mov
cmp
xchg
push
out
arpl
ret
ret
fidivl
lahf
test
xchg
jne
popa
in
faddl
pop
aaa
push
cmp
pop
mov
or
jle
mov
push
sbb
sahf
fs
mov
outsb
xor
push
inc
popa
jle
sbb
add
aad
fwait
and
inc
or
adc
add
repnz
bound
nop
mov
aaa
mov
pop
push
or
push
repz
push
xor
into
add
addr16
adcb
mov
aas
movsl
dec
xor
enter
lods
testb
adc
push
loope
loopne
pushf
and
dec
in
lcall
xchg
adc
xor
fisttps
or
mov
flds
cmp
cli
ficoml
out
or
xor
in
push
loopne
push
jg
cmp
dec
hlt
xchg
or
pop
inc
xchg
inc
fwait
imul
fwait
pop
inc
shrl
jmp
test
dec
xchg
cmpsb
rcr
int3
test
sub
add
dec
mov
into
jg
js
decl
hlt
sarl
stc
aas
int
movsl
xorb
stos
jp
jecxz
inc
dec
cli
inc
out
ficoml
inc
xchg
andl
ljmp
mov
insl
dec
and
popf
fsubr
sub
pop
bound
cmc
jnp
fs
cmp
xor
sub
add
mov
test
enter
push
and
ja
push
xchg
xorl
pushf
pop
jl
inc
popf
xor
dec
pop
jno
push
hlt
adc
xor
push
xchg
pop
inc
xor
xchg
xchg
and
jns
fisubs
cmc
loope
mov
inc
lret
dec
cltd
cltd
xchg
stos
jp
add
cwtl
les
lret
cmp
pop
andl
insb
sahf
jp
sti
popa
inc
push
insl
fstpl
mov
xchg
sub
hlt
bound
cmpl
shlb
xor
jecxz
push
rorb
out
xor
mov
leave
in
mov
aas
data16
inc
adc
push
subb
in
daa
mulb
pop
sub
std
cltd
jg
ret
loope
xor
xchg
inc
pop
jmp
mov
popf
mov
lcall
sbb
or
pop
and
pop
cwtl
popa
ficompl
ss
ret
jmp
fimull
pop
and
and
jb
sahf
fsubl
inc
mov
mov
adc
push
sub
jnp
sbb
mov
inc
push
and
daa
inc
in
into
mov
push
nop
lea
test
pop
mov
jo
cld
jecxz
sahf
aam
cltd
ds
popa
xchg
fisubl
int3
push
or
mov
fs
out
dec
cmp
fistps
adc
jo
xlat
push
ja
jae
es
int
jge
pop
stos
sub
pusha
mov
test
lcall
or
stos
pop
loopne
cli
adc
cmp
dec
push
int3
jo
push
xchg
clc
push
ljmp
push
mov
arpl
adc
aaa
icebp
pop
test
decl
lods
lret
jl
xor
js
outsb
mov
jno
adc
and
xorl
addr16
nop
iret
xchg
and
jmp
in
jns
jb
lock
xchg
mov
rcr
nop
sbb
popa
outsl
dec
mov
jge
out
push
push
testb
mov
inc
rclb
pusha
jo
sti
adc
lcall
xor
repz
push
add
sub
and
cmp
jg
cmp
clc
pop
sar
adc
es
xchg
mov
std
lahf
fstpl
rolb
inc
push
cmpsb
data16
xchg
lods
mov
nop
and
cli
adc
das
bound
loop
dec
cmpsb
push
jle
dec
pop
stc
pop
mov
pushf
insb
mov
push
repz
scas
push
stos
pop
or
std
add
pop
lods
clc
leave
mov
pop
lds
push
fnstenv
ljmp
ret
mov
fstl
sahf
incb
mov
mov
inc
and
ds
sub
mov
sbb
paddd
aam
jae
sub
push
mov
xchg
push
out
mov
xor
andl
nop
mov
aas
and
test
scas
push
dec
sub
jo
shrl
mov
add
adc
aas
mov
repz
mov
push
data16
sbb
in
add
sub
scas
inc
add
insb
and
pop
xor
add
inc
daa
outsb
insb
mul
jae
jmp
inc
icebp
les
loopne
sbb
add
je
inc
sbb
popf
and
in
pushf
ret
movsb
sbb
aaa
jp
pop
jne
fisttpl
into
stc
cmp
fnstsw
sti
insl
pop
mov
mov
insl
loopne
les
jmp
mov
push
ljmp
arpl
cmpsb
and
or
shrb
popl
fstp
ja,pn
push
dec
aaa
add
xchg
ret
or
mov
cltd
cltd
inc
mov
cld
inc
and
sbb
rcrb
dec
xlat
pop
rcrb
in
inc
je
jge
jns
test
and
and
inc
pop
cmp
push
popf
mov
or
xchg
push
aad
out
ficomps
push
or
repz
xchg
xchg
lods
cmp
lds
push
jecxz
fwait
pop
mov
loop
sub
fimuls
adc
mov
shll
pop
mov
call
mov
mov
int
xor
push
jge
inc
in
dec
mov
pop
and
imul
xchg
in
mov
jle
sbbb
pop
add
jmp
ret
fbld
shll
lods
shl
call
adc
clc
enter
xor
addr16
push
jl
mov
push
faddl
mov
mov
xchg
je
jnp
rcrl
inc
mov
push
cmpsl
jge
outsl
imul
out
pop
sti
push
fcoml
adc
shrb
loop
pop
js
insl
imull
popa
cmc
jnp
mov
scas
push
mov
es
stc
sub
inc
arpl
filds
xchg
insl
mov
inc
test
adc
pop
sbb
xor
and
fcmove
inc
sub
push
sbb
pop
in
or
or
push
mov
and
imul
inc
ja
test
dec
in
push
and
lret
adc
jp
xchg
das
call
add
and
outsb
mov
cltd
mov
ss
loopne
sbb
jp
pushf
dec
std
and
ja
mov
insl
mov
xor
rorb
mov
pop
mov
mov
sub
mov
push
xchg
pop
bnd
xorl
or
add
mov
dec
xor
sarb
push
loope
imul
sbb
mov
in
xchg
int
dec
das
ret
mov
fwait
jle
icebp
xchg
outsb
lods
jecxz
pop
out
lahf
fildl
xchg
add
jb
sbb
cmp
data16
jp
es
in
mov
sub
sub
pop
mov
mov
sbb
dec
pop
nop
pop
add
jle
fstps
inc
in
adc
loope
mov
popa
sahf
sahf
push
icebp
lods
sub
fmull
adc
icebp
addr16
and
xchg
rcrl
ljmp
scas
enter
jo
mov
push
xchg
mov
push
notl
fiaddl
out
mov
idiv
mov
cmp
xchg
aad
clc
add
dec
lret
aad
stc
cmpsl
fsubrl
mov
push
js
jecxz
outsl
mov
sarb
repz
push
sbb
test
cmp
sbb
adc
aas
dec
mov
outsb
fs
movsl
out
insb
dec
mov
imul
or
xchg
mov
sbb
sub
sbb
int
adc
mov
push
arpl
sbb
xorl
loopne
jecxz
les
or
fbld
daa
jnp
int3
pop
push
nop
sbb
mov
mov
outsb
mov
dec
mov
mov
into
cmp
test
fnsave
in
cwtd
fisubl
fbstp
sbb
lock
idivb
xchg
add
pop
mov
test
insl
rolb
in
lcall
ss
xchg
icebp
fldt
movsl
lret
sti
jb,pn
adc
pop
cmp
and
xor
int
sarb
insb
xorl
and
add
mov
mov
cwtl
movsl
xorl
dec
mov
stos
fs
or
or
loope
nop
out
inc
jne
mov
lods
cmp
enter
pop
push
ljmp
mov
out
dec
jno
cs
mov
lahf
sub
jno
orl
jl
pop
lret
in
add
xor
subl
jmp
jb
call
call
insl
mov
int
jno
dec
das
cmp
mov
es
cmp
pop
pop
push
lea
dec
popa
pop
scas
xor
dec
call
mov
pop
ja
add
in
movsb
scas
and
cmpsb
mov
stc
testb
loope
cmp
push
xor
push
push
sbb
mov
jo
nop
mov
cs
in
xchg
js
outsl
xor
xchg
in
lds
shll
ss
rolb
xchg
dec
mov
dec
mov
fistl
pop
sahf
ret
hlt
push
mov
sbb
and
lahf
jle
test
fwait
sbb
daa
xchg
adc
xor
ret
out
and
out
jae
add
in
addr16
sub
push
cmc
xor
test
inc
mov
and
mov
push
lods
dec
adc
push
clc
nop
out
rorb
push
mov
jge
inc
mov
leave
inc
pop
push
cmpsb
scas
in
int
xchg
mov
mov
xor
fwait
mov
out
dec
cmp
pop
xor
lret
rorl
inc
adc
mov
in
and
sbb
shl
mov
adc
fcoml
sub
lds
out
add
fmull
js
pop
loope
push
lds
pop
scas
cmc
inc
rcrb
or
fs
jae
dec
mov
and
adc
shl
sbb
sbb
mov
mov
pop
mov
popa
lret
push
or
lahf
loope
cmp
cmp
sub
loope
jg
rcrb
insl
cmp
icebp
fdivrs
je
leave
lret
inc
jbe
jle
or
inc
insb
inc
pop
and
jno
or
xchg
add
cwtl
out
daa
fidivrs
cmp
decb
mov
xor
sub
mov
sbbb
dec
lahf
loopne
inc
pop
je
adc
enter
sbb
dec
and
cmc
je
jmp
int3
sub
int3
sbb
nop
xor
ret
mov
jne
movsb
dec
push
dec
cltd
xchg
mov
sbb
pop
fwait
ja
loop
adc
cwtl
in
dec
arpl
add
or
in
in
dec
pop
mov
mov
inc
enter
cmp
add
cmpsb
mov
inc
adc
fisttpll
fnstenv
xor
fwait
cmpsb
out
out
cld
adc
iret
add
hlt
mov
xchg
lret
je
cmp
xchg
mov
hlt
mov
nop
xor
insb
inc
xchg
pop
jb
jmp
mov
faddl
test
jge
jge
int
pop
xor
mov
mov
int3
add
and
cmp
ds
sahf
imul
es
mov
jle
pop
je
sbb
es
mov
stos
icebp
mov
push
jg
mov
mov
popa
mov
sti
push
iret
loopne
rcll
xchg
aas
mov
sbb
cmp
mov
nop
movsl
cmp
stc
mov
dec
sbb
sbb
js
mov
lods
or
loop
aaa
add
adc
push
dec
icebp
stos
pop
int
dec
rorl
orl
bound
lahf
jecxz
in
movb
test
pusha
mov
pop
inc
mov
sahf
into
ss
sbb
in
xor
xchg
mov
fwait
add
xchg
adc
xor
imul
pop
aaa
jle
pusha
out
sbb
push
or
or
jecxz
pop
fs
clc
pop
cs
addr16
int3
test
mulb
pushf
lret
add
xor
or
lds
aas
test
daa
push
inc
jo
sbb
push
shrb
in
sbb
cld
xchg
cmp
sbb
inc
inc
adc
out
cmpsl
insb
incb
lds
fldl
inc
push
addr16
lcall
ret
lock
push
pop
sub
ja
sbb
push
push
xor
jo
cld
mov
scas
aas
lods
sar
add
mov
mov
inc
mov
gs
pop
ja
adc
std
movsl
inc
pushf
sbb
sbb
fistpl
arpl
mov
and
ljmp
or
out
push
adcb
inc
ss
sahf
cmp
pop
mov
rorb
xchg
out
ljmp
xchg
lds
test
out
and
mov
pop
lea
sub
insb
sub
roll
leave
lret
stos
xchg
mov
je
in
dec
xchg
adc
mov
lock
shrl
in
xchg
insb
push
fisubl
push
fcompl
and
hlt
cmp
dec
mov
rorl
mov
dec
add
mov
push
jp
in
incl
adc
push
sbb
lea
jno
push
jae
add
adc
popa
adc
iret
sub
bound
pop
or
test
shlb
test
imul
or
notb
add
inc
xor
pop
jge
sub
add
pop
mov
mov
sub
sbb
jge
and
and
insb
push
and
cmp
push
dec
subl
jp
fidivl
mov
cmpsb
ret
inc
test
sbb
leave
jl
out
mov
dec
jne
stos
xchg
test
or
mov
jb
pop
ret
pop
jb,pt
jo
pop
fdivr
lea
push
adc
or
mov
push
mov
dec
loop
outsl
mov
sub
stos
xor
into
std
jl
dec
jbe
xor
cltd
in
mov
xor
jle
cltd
repz
jnp
cwtl
sbb
mov
xor
mov
inc
hlt
testl
fistpl
mov
pusha
pop
cmpsb
leave
dec
push
mov
scas
push
adc
cli
jecxz
sarl
data16
mov
rol
mov
decb
shlb
dec
iret
and
dec
fcoml
lods
xchg
cmpsb
add
movsb
aam
push
mov
mov
and
dec
cmp
sub
cmp
mov
or
andl
mov
stos
pop
loop
mov
cwtl
and
fwait
sub
rcr
js
jne
sub
and
loope
loope
sbb
or
inc
inc
mov
nop
lock
icebp
mov
std
mov
loopne
cltd
loope
xchg
mov
push
data16
repnz
stos
pushl
es
fcomip
mov
sub
das
outsl
jp
xor
repnz
add
enter
fsubrs
call
scas
int
leave
call
add
mov
cmp
inc
inc
in
mov
mov
faddl
pop
xor
mov
hlt
and
leave
xorb
add
adc
or
icebp
ja
push
push
clc
ja
xlat
pop
xchg
sahf
lock
sbbb
push
and
and
pusha
push
in
add
loop
std
adc
sbb
dec
rcrb
mov
dec
pop
roll
aaa
leave
jle
shlb
add
mov
jmp
mov
jae
daa
sbb
insb
fbld
cs
xor
mov
xorb
sarl
add
add
adc
push
gs
sbb
push
xchg
sbb
jns
jecxz
mov
xor
fnsave
je
add
dec
loopne
cwtl
aaa
adc
jg
pop
jmp
pop
jp
inc
sbb
sub
jbe
lcall
xchg
mov
inc
sti
out
rep
push
push
push
and
sbb
dec
inc
sub
frstor
lods
ffreep
mov
pop
xchg
enter
sbb
loop
jno
shlb
jg
inc
push
dec
repnz
xor
loope
pcmpeqd
cmp
mov
add
adc
xor
add
aad
mov
leave
and
je
mov
shll
push
inc
mov
mov
or
xor
pop
xchg
das
add
daa
fidivs
fistpl
out
mov
lret
xchg
pop
pusha
mov
push
daa
push
dec
and
mov
in
sub
push
push
idivb
jg
in
xor
sbb
pop
push
mov
jns
adc
or
pop
enter
mov
mov
ret
lock
xchg
lds
sahf
add
decl
xor
mov
sub
stc
mov
xchg
inc
inc
sub
cltd
pminsw
sbb
adc
xor
lret
in
js
sbb
mov
mov
mov
inc
rcr
ret
mov
xchg
mov
nop
adc
sub
and
loopne
xchg
xchg
xchg
ret
cwtl
push
bound
push
cmp
out
fnstsw
dec
mov
in
adc
out
cmpsl
jb
pop
sub
rcrl
repz
sbb
jle
sub
adc
inc
out
mov
pop
xor
mov
sahf
clc
pop
and
jmp
loope
adc
push
ret
out
adc
add
fs
test
adc
inc
test
lds
mov
dec
shlb
pop
mov
jns
les
and
push
fdivrl
popf
fcmovu
sbb
mov
outsb
mov
mov
aam
jb
adc
sti
pop
popf
push
cli
xchg
push
outsl
int3
icebp
iretw
ret
dec
adc
push
mov
stc
inc
mov
pop
cmpl
push
mov
xor
leave
jl
cmp
xor
inc
popf
mov
in
out
pop
int
je
bound
addb
lret
sub
pop
push
ljmp
lods
bound
call
lods
push
cmp
cltd
mov
test
dec
filds
lds
push
jno
loop
or
jle
push
lock
sbb
pop
add
adcl
cwtl
js
pusha
shll
out
jp
rclw
dec
movsl
dec
or
cltd
sbb
pop
in
test
gs
xchg
out
popa
hlt
insb
jl
gs
add
sbb
pop
xorb
dec
push
pop
dec
cli
and
repz
adc
dec
stos
cs
sub
inc
aam
xchg
cmp
loope
inc
sbb
pop
in
adc
int
inc
add
pusha
aas
out
out
sub
pop
js
cld
and
clc
pop
adc
and
icebp
mov
cmpsl
jb
jnp
icebp
jmp
sub
cmpsb
fdivrl
mov
ds
pusha
sbb
ss
mov
xor
pop
mov
and
adcl
lock
jmp
dec
lods
jnp
mov
mov
pop
mov
repz
cmc
and
loope
in
xor
dec
pop
outsl
mov
scas
lret
sarb
imul
cltd
jp
clc
jns
add
jg
xor
and
subb
xchg
imul
into
add
ficoms
outsb
cmp
and
imul
sub
hlt
pop
cltd
and
and
lods
or
mov
dec
xchg
cmc
sub
sbb
imulb
jmp
jno
xchg
adc
cmp
mov
sub
lods
lcall
sub
mov
sbb
pop
jne
test
loopne
aas
mov
mov
loop
pushf
enter
addr16
fs
add
incl
pop
lahf
ficoml
lea
je
mov
and
popa
iret
jecxz
rorb
div
pushf
movsl
sbb
gs
stc
and
daa
outsl
lret
je
pop
in
enter
lret
inc
mov
xor
jb
push
or
lods
xor
std
sahf
lea
hlt
lds
cld
mov
cs
push
repnz
jl
fbstp
mov
sbb
in
xchg
cmp
repnz
and
or
dec
outsb
xlat
push
jmp
les
loopne
movsl
lret
aas
xchg
mov
sbb
lods
xchg
loopne
and
aaa
lock
sbb
cmp
xchg
ficomps
mov
push
and
mov
mov
pop
xchg
or
nop
jae
ss
jnp
fidivrs
push
stos
pop
xchg
into
int3
xchg
sbb
call
xchg
scas
add
outsb
lds
add
inc
cmp
xorl
stos
cmp
mov
push
sbb
adc
dec
stc
cmp
sub
stc
ret
daa
mov
dec
lock
fsub
mov
fwait
mov
lods
mov
xlat
mov
or
push
mov
rcrb
aad
push
cmp
jb
popf
lahf
ljmp
sbb
aad
pop
ret
cwtl
in
mov
outsl
jmp
aas
inc
lock
jno
mov
adc
push
pop
dec
repz
add
inc
sub
ror
popa
add
mov
pop
add
sbb
sahf
sbb
mov
push
js
scas
std
clc
cwtl
mov
dec
mov
mov
adc
dec
lcall
pop
movsl
jb
dec
rcrb
cwtl
emms
mov
push
out
xlat
and
sub
lds
outsl
pop
jg
xchg
cwtl
add
iret
mov
jle
push
adc
nop
mov
nop
or
std
sbb
add
mov
xor
int
xchg
push
ret
stos
aam
fsubl
sbb
push
enter
addr16
sbb
mov
cmpsb
or
add
out
mov
mov
addl
mov
or
das
mov
jge
mov
mov
mov
scas
movsb
adc
fcmovu
sbb
imul
icebp
test
movsb
loopne
lock
jg
jmp
sti
jl
div
and
dec
inc
insl
fidivs
jo
clc
sub
inc
sbb
in
lret
popa
sbbl
and
je
arpl
movsb
fwait
popa
out
notl
movsl
shll
jmp
out
pop
mov
movsl
and
addb
xor
fmul
and
lret
fstl
fcmovne
push
or
movsl
pop
xor
and
mov
in
cld
in
loopne
subl
in
cmpsb
enter
jg
cltd
sbb
lcall
cmp
das
enter
mov
pop
jecxz
add
cwtl
test
jp
mov
ljmp
jle
loop
cltd
arpl
pop
pop
fadd
xor
movsl
jbe
js
punpckhwd
push
in
outsb
xchg
push
add
cmp
mov
dec
xchg
sub
fs
imul
pop
repnz
enter
mov
ja
outsl
ds
lock
shlb
dec
shl
pop
push
mov
mov
ret
mov
xor
push
mov
cmp
and
add
xor
roll
aad
call
ljmp
add
ja
cmpsl
mov
dec
dec
push
fcmovu
jmp
pop
loop
mov
jne
jbe
pop
les
stos
rolb
lods
inc
jo
inc
dec
jne
push
push
sbb
pop
stc
addl
mov
mov
add
aam
push
lods
xor
or
lret
xchg
xchg
std
orb
jae
jns
sub
ret
call
insb
test
sub
cli
cmp
cmp
pop
aad
dec
test
mov
insl
repnz
mov
sub
ror
sub
or
mov
inc
pop
push
adc
orb
dec
mov
aas
stos
fstpl
xor
je
shrl
push
xor
mov
mov
sti
cmp
jno
sub
fisttps
in
xor
mov
fsubrl
aam
mov
movsb
inc
nop
stos
add
add
pop
mov
in
repz
ja
sub
mov
and
out
add
mov
mov
sub
mov
sbb
shrl
stc
xchg
data16
mov
ficoml
idiv
into
mov
push
test
aad
test
adc
push
in
lods
aam
add
insb
cmp
shll
push
xchg
jl
push
xchg
sbb
or
hlt
mov
mov
mov
aas
mov
dec
xchg
mov
cmp
add
and
pop
iret
adc
mov
mov
pushf
pop
daa
mov
jne
and
mov
jle
mov
adc
sub
xor
mov
jp
fwait
mov
cmp
mov
clc
ljmp
es
or
fldl
jmp
xchg
jno
mov
pushf
cmp
xlat
xchg
int
addr16
cmc
pushf
xchg
nop
fnsetpm(287
dec
data16
or
ds
ljmp
push
mov
and
cmp
xchg
cmp
xor
adc
mov
cli
mov
mov
pop
dec
repz
sbbl
add
jne
das
and
cli
fadds
sar
ret
or
fdivrs
pop
stos
xor
mov
mov
fisubrl
sub
jbe
lods
dec
jmp
icebp
in
stos
mov
mov
clc
clc
cmp
xchg
cmp
sbb
nop
dec
mov
xchg
ja
enter
pop
mov
pop
insl
push
aas
adc
ret
pop
mov
inc
sahf
cmpsl
xchg
xchg
test
dec
movsl
mov
cmpsb
xchg
ja
insl
mov
rcll
push
lret
dec
add
testl
dec
mov
jns
shlb
jo
xchg
cmp
pop
out
outsl
mov
lcall
pop
and
sub
xchg
icebp
jge
call
lock
xlat
decb
and
pop
aad
push
fldt
push
dec
inc
lock
xor
push
enter
mov
lea
lret
jecxz
shlb
cmc
out
pop
testl
hlt
test
jns
pop
std
pmullw
dec
dec
movsl
mov
ret
mov
inc
out
xchg
or
iret
sub
orl
loope
sarb
in
mov
dec
push
lea
mov
and
mov
mov
sub
mov
pop
xlat
sub
jmp
sub
dec
inc
dec
pop
add
mov
xor
xor
pop
inc
inc
scas
into
mov
cmpsb
or
mov
cltd
jb
jl
out
jg
jns
ja
scas
xchg
fs
minps
mov
jmp
xor
call
std
adc
push
fs
aam
push
xor
cmp
lds
push
es
dec
mov
cli
mov
dec
push
adc
xchg
or
inc
and
out
jns
int3
scas
mov
xchg
adc
and
shll
xor
mov
in
cltd
out
es
or
inc
jo
jge
pop
cmpsb
mov
gs
stos
push
and
push
shll
mov
scas
repnz
test
sbb
lds
hlt
push
inc
inc
sbb
int3
cmp
xlat
add
out
aad
cld
or
clc
iret
mov
rcrb
inc
adc
push
in
cs
adc
mov
cmp
dec
mov
or
test
enter
sbb
pop
xor
pop
cwtl
negl
and
xchg
out
aam
jecxz
mov
mov
jmp
sub
nop
addr16
cmp
out
cmp
jg
fsubr
xchg
mov
lds
push
enter
pop
addb
clc
adc
mov
inc
fmul
add
jne
push
jae
js
cmpsl
mov
or
call
xor
mov
jl
xor
inc
stos
pusha
sbb
js
or
push
and
cli
test
jecxz
sbb
add
aad
sbbl
push
adc
sti
and
cmc
jle
cmp
hlt
loope
pop
jno
sbb
xchg
and
enter
adc
dec
lgdtl
adc
movsb
dec
stos
sub
push
add
inc
ljmp
xchg
lock
jbe
rolb
enter
popa
jno
and
jl
mov
push
sarl
mov
imul
and
inc
mov
cli
xor
std
sbb
fnstsw
mov
xor
jbe
jne
lret
clc
hlt
sbb
mov
jns
insl
insb
stos
add
mov
sbb
inc
imull
fiaddl
and
pop
mov
in
push
loop
cmp
mov
imul
sub
xchg
popa
out
push
mov
lcall
bound
jp
loopne
mov
jno
adcl
stc
and
pop
stc
out
cld
flds
xchg
push
cwtl
ret
test
sbb
mov
push
and
lret
lods
in
add
jne
sti
out
xor
xor
pop
push
sub
or
je
movsb
cmpsb
sub
enter
shrb
lret
pushf
push
pop
adc
and
xchg
sub
lds
adc
sbb
popf
mov
gs
inc
cmp
and
push
jae
sbb
push
mov
lahf
inc
sarl
leave
loope
das
cmp
test
add
push
dec
jae
jle
dec
dec
cwtl
mov
in
add
frstor
in
test
jecxz
jp
das
shll
jmp
or
or
aas
lock
push
xchg
mov
sbb
es
js
pop
mov
cmpsl
mov
cmp
mov
imul
adc
mov
push
stos
leave
mov
inc
sbb
mov
pop
ss
mov
cs
les
sbb
bound
gs
mov
push
xor
jmp
xchg
incl
cmc
mov
jle
push
aas
mov
shr
mov
dec
andl
inc
push
or
pop
rcrb
cmp
and
push
push
fs
pop
inc
and
push
in
popf
popa
sub
cmp
mov
mov
aam
aad
dec
xchg
adc
shll
test
sub
fnsave
adc
sub
mov
imul
mov
sub
push
cmpsb
inc
sti
add
or
shl
jns
fmuls
shr
mov
enter
mov
jle
out
sub
shrb
jl
test
dec
sarb
or
jne
popa
lea
mov
xlat
sub
shll
or
sub
pop
cmpsl
ljmp
push
sub
sbb
sbb
cmp
add
mov
movd
mov
xlat
hlt
xchg
rorb
enter
fistpl
mov
fsubs
lds
mov
adc
push
xchg
sub
sub
sbb
inc
mov
mov
into
pop
dec
int3
cmp
movsl
test
push
orb
push
and
xchg
jb
xchg
ffreep
mov
pop
adc
lods
leave
cs
jmp
sbb
mov
jbe
mov
das
push
jbe
mov
scas
dec
pop
repz
add
adc
sub
addr16
inc
jo
mov
mov
hlt
test
and
xor
sbb
pop
or
fsubrs
test
jp
xchg
fs
jb
xor
nop
pop
fwait
pop
arpl
push
in
push
stos
inc
jne
sub
sbb
cwtl
or
jle
jnp
cmc
insl
ffreep
inc
mov
sbb
sbb
mov
push
jae
sti
dec
scas
sbb
arpl
adc
pop
add
xor
mov
jbe
cli
or
sub
pop
pop
mov
inc
xchg
iret
and
fdivs
imul
hlt
and
negl
popf
mov
int
popa
mov
xor
inc
jecxz
jb
sbb
popf
lahf
pop
dec
out
ja
add
mov
ja
jo
push
sub
xchg
and
sbb
ds
xchg
insl
fildl
lock
std
repnz
jae
leave
movsl
add
jb
rolb
or
loopne
or
imul
jb
jg
add
lock
cli
lret
jno
outsb
xchg
fisubs
dec
cmpb
or
aad
enter
adc
lds
sbb
jecxz
inc
cmp
repz
jmp
mov
sbb
inc
nop
push
cmc
shl
pop
jb
cmp
nop
cmp
jl
loope
xchg
out
and
adc
adc
jg
pop
rolb
xchg
mov
jbe
xlat
inc
ds
mov
cmpsl
mov
push
es
loopne
mov
push
sub
mov
mov
mov
push
lds
lcall
fdivs
inc
fwait
and
xor
jg
out
pushf
std
inc
ret
loope
lods
xor
mov
push
inc
sbb
pop
xor
or
bound
test
mov
fwait
add
push
pop
ss
push
mov
or
push
add
pop
movsl
push
into
xlat
mov
xchg
rorb
icebp
or
lret
pusha
icebp
rclb
popf
mov
orl
scas
icebp
jno
cmp
mov
inc
inc
mov
mov
cld
hlt
shlb
cmpsl
xchg
or
jmp
cli
ljmp
fistpl
cmp
sbb
push
xchg
les
adc
jbe
out
leave
jmp
iret
cmpsb
nop
imul
cmpsl
mov
push
jbe
xchg
arpl
add
mov
jae
shlb
push
incl
test
lods
bound
add
inc
inc
bound
fs
push
scas
stos
mov
repnz
mov
loop
ss
pop
xchg
iret
test
xor
push
cmp
jnp
jg
cltd
jne
imul
jbe
test
sub
pop
mov
or
fsub
jecxz
mov
notb
jle
cmp
scas
lret
lret
xlat
gs
iret
push
test
pop
dec
sti
sub
push
inc
rclb
ret
sbb
sbb
cmp
push
jmp
mov
cs
pop
pop
push
scas
ret
sbb
mov
repz
adcl
inc
dec
inc
test
xor
fstpt
lods
pop
inc
adc
jecxz
mov
pop
testb
lcall
inc
ret
repz
mov
mov
push
and
or
sbb
push
stos
or
jmp
dec
out
cwtl
xor
loopne
xchg
out
ret
scas
push
dec
mov
and
inc
pop
scas
xor
icebp
jp
lret
pop
add
cmp
inc
mov
jne
xor
adc
aad
pusha
push
sbb
outsl
pop
movsl
jnp
test
xorb
stos
fisttpl
mov
and
cmp
testb
shlb
pop
sub
xor
imul
stos
fcomip
lds
sbb
mov
or
xor
cmpsl
jb
jle
xchg
mov
push
xor
outsb
insl
mov
addr16
or
cmp
test
mov
outsb
xlat
dec
cmp
bound
xlat
jg
es
inc
fstpt
fsubr
mov
mov
xchg
push
iret
jno
xchg
loop
ds
in
xchg
jge
push
jbe
aas
add
jnp
push
enter
je
sbb
sahf
loopne
movsb
and
sbb
cmp
push
clc
fistps
int3
cmp
pop
lds
test
dec
jmp
cmp
jge
jle
jo
push
pop
jge
iret
bound
imul
mov
adc
jp
mov
or
lahf
fcoms
das
xor
or
jmp
jbe
stos
mov
xor
hlt
push
jne
adc
jb
xchg
lds
aaa
sbb
dec
jae
stos
test
dec
iret
lahf
xlat
pusha
cld
pop
pop
mov
mov
push
imul
fwait
repz
sub
adc
out
mov
stos
movsb
jge
stos
mov
or
cltd
mov
out
pusha
cwtl
xchg
sbb
clc
lret
jp
mov
mov
dec
sub
jo
xor
adc
mov
mov
mov
and
jg
mov
imul
call
arpl
push
out
jge
xor
jecxz
and
insl
lret
jp
and
push
dec
call
out
cwtl
scas
sub
push
or
push
xor
mov
mov
orl
frstor
add
divl
ss
sar
sub
subb
lds
mov
xor
push
lcall
mov
and
dec
loopne
je
add
or
inc
pop
push
inc
pop
xor
lods
add
cmpsb
push
xchg
pop
enter
push
scas
cmp
push
faddl
and
outsl
xchg
push
dec
mov
jge
dec
and
imul
lret
adc
out
or
and
pop
sub
ret
pop
fcomps
fisttps
lret
test
xchg
add
mov
lock
sti
jecxz
in
cs
mov
add
sbb
adc
ficomps
sub
cld
cmc
pop
jg
lods
insl
loope
cmc
sub
jbe
pop
into
and
and
sarl
lods
or
test
inc
push
sbb
out
jo
sarb
flds
mulb
xchg
inc
lods
loope
ret
aas
cmp
pop
sub
fcomps
popa
xchg
in
int
mov
or
pop
out
imul
lods
pop
leave
cmp
rorb
or
jecxz
mov
test
mov
lods
arpl
mov
and
and
outsb
and
out
into
push
es
scas
jecxz
cld
lods
mov
mov
outsb
andl
int3
or
inc
js
xor
cmpsb
sbb
stos
neg
cwtl
repz
or
outsl
dec
pop
push
dec
das
lods
out
enter
movsl
mov
loope
inc
cmp
movsl
lds
lock
daa
stos
mov
dec
pushf
and
adc
test
jne
popa
push
mov
test
into
cmp
push
push
int
dec
sub
nop
repnz
rcl
dec
sub
es
and
std
in
adc
jp
xlat
xor
mov
aaa
or
ss
jnp
add
es
push
mov
lahf
nop
xor
mov
mov
out
imul
hlt
dec
hlt
cmc
add
fst
jnp
dec
push
cmp
rcrb
hlt
mov
nop
xchg
ficoms
outsl
icebp
mov
cmp
inc
cli
pop
xchg
testl
ret
push
sti
es
inc
clc
je
inc
or
mov
mov
mov
insl
lret
inc
fmuls
inc
adc
jno
and
ret
fmull
mov
outsb
lret
mov
popa
fdivs
sbb
sbb
lahf
and
lods
pop
out
dec
add
int3
lods
push
lock
lods
xor
loop
data16
int3
push
push
xchg
loopne
sub
cli
mov
ficoms
repz
jae
in
data16
movsb
repnz
cli
int3
jl
sti
jo
jle
mov
shr
andl
in
mov
ret
push
pop
push
or
sbb
lret
rorl
push
or
adcb
dec
push
and
stos
ljmp
jle
es
rorl
cli
push
mov
fdivl
mov
mov
push
movsl
and
push
cmp
daa
mov
fnstenv
in
pushf
inc
rclb
xor
sub
inc
mov
stc
into
mov
in
pop
pop
add
sarl
lcall
push
cmpsb
jo
xchg
and
add
dec
std
cmpsb
sbb
icebp
dec
ljmp
mov
loopne
orb
dec
call
aas
and
sub
jnp
mov
and
or
xlat
mov
lods
rorb
and
cld
and
aad
arpl
push
cmc
insb
ret
jb
jp
and
push
out
and
mov
std
in
inc
push
inc
xor
mov
pop
ret
push
fidivrl
cmp
adc
mov
pop
jae
lret
sub
lods
lret
mov
pop
pop
test
in
xor
dec
out
mov
cmp
cmc
loope
imul
jmp
cmp
test
lahf
sbb
xor
inc
fbstp
daa
adc
fdivrs
cld
js
outsl
jno
js
add
sub
cmp
sbb
rorb
pop
xchg
scas
dec
scas
test
testl
pop
loopne
cmc
push
jo
mov
dec
add
movsl
jmp
inc
pop
inc
bound
arpl
js
lret
sub
dec
jbe
dec
hlt
jecxz
cmp
mov
jge
mov
jl
loope
jns
mov
lods
inc
xchg
and
cmp
sub
mov
aaa
jb
addr16
jg
pop
xchg
cli
pop
push
popf
repz
stos
dec
push
sub
sbb
dec
pop
push
mov
test
or
add
push
mov
jmp
out
dec
movsl
mov
push
movsl
and
cmp
add
or
jl
call
pop
adc
aaa
sbb
pop
fwait
imul
xorl
sbb
popf
mov
in
js
sub
stos
sbb
jge
pop
sbb
push
repnz
outsl
dec
xor
out
pop
jp
mov
insb
mov
and
mov
movsb
sub
mov
jge
faddl
add
popl
pop
sarl
sbb
push
xchg
pushf
fcmovnb
push
fsubr
or
or
shl
sub
pop
in
pop
sub
sub
mov
jne
stos
push
cmpsb
lds
fcmovb
shll
sbb
mov
test
mov
jmp
mov
fdiv
sbbl
or
cmpsl
cmp
scas
mov
fwait
std
call
pop
pop
imul
push
push
in
mov
push
sub
mov
fisttpl
mov
cmc
outsl
ret
xchg
adc
dec
lahf
sub
repz
jecxz
or
pusha
push
ret
addr16
push
sub
jb
jge
lods
fucomp
enter
cmp
mov
std
jae
cs
daa
mov
lea
fs
rclb
sbb
dec
shll
fwait
out
lea
mov
lods
hlt
mov
data16
jmp
jb
pop
fildl
jg
imul
addr16
sbb
shll
and
pop
inc
pop
test
and
cs
js
call
push
daa
sbb
inc
jnp
mov
add
mov
mov
std
push
hlt
popa
cwtl
addb
push
sub
sbb
cmpsb
dec
cmp
jb
or
adc
in
or
jp
sarb
add
push
and
xor
lahf
insl
dec
push
out
push
inc
cmp
rcrb
jle
neg
or
push
cmp
cli
shrb
xor
out
cmc
loopne
jge
fwait
inc
pop
mov
mov
jnp
pop
decl
dec
adc
xchg
loope
cs
movsl
jmp
cmp
loope
or
lds
or
stc
pop
push
rcrb
inc
mov
dec
das
mov
inc
rorl
jmp
mov
or
sbb
cmp
add
scas
sbb
sahf
pop
dec
test
addr16
xchg
lds
mov
cli
scas
sbb
fidivrl
pushf
rorb
dec
sbb
dec
mov
lret
jmp
ret
out
mov
lret
jb
jb
xchg
mov
push
push
push
inc
jnp
ljmp
sub
movsl
inc
pusha
inc
adc
dec
insl
cmp
xchg
js
xchg
push
in
ror
mov
aaa
and
mov
xchg
aad
push
sbb
xor
fs
dec
aaa
ljmp
ds
xchg
test
pushf
adc
adc
xor
jnp
jb
imul
out
push
in
jne
dec
cli
mulb
and
pushf
push
cmp
xlat
mov
inc
nop
add
cli
mov
lret
mov
pop
scas
out
call
push
and
test
inc
sti
jns
popa
lcall
mov
fsubp
xor
adc
mov
out
or
bnd
insl
push
aaa
and
rcll
mov
hlt
pop
out
ret
sub
sub
fisubrl
jmp
lcall
inc
jle
pop
xor
cmp
test
pop
ss
iret
cli
into
jmp
adc
pop
lods
jmp
in
jmp
add
loopne
gs
cld
cs
shlb
adc
into
mov
adc
call
and
and
clc
adcb
or
jmp
shlb
pop
sti
into
add
jbe
loopne
mov
out
fimuls
iret
xchg
leave
pushf
add
fmuls
add
and
imul
rol
sub
out
jbe
inc
pop
mov
jb
xchg
cld
and
xor
imul
jns
cmp
outsb
xchg
jecxz
push
lcall
rol
dec
mov
push
inc
inc
aad
jo
daa
sbb
jb
insb
shl
and
and
push
or
mov
lds
sub
fwait
and
std
lret
adc
in
rcrl
sub
jle
cli
out
sub
xchg
div
pop
pop
sti
cld
andl
out
mov
pop
es
push
sub
sbb
movsb
movsb
inc
pop
and
and
test
das
in
arpl
sbb
cmp
pop
jb
in
or
stos
xor
cltd
pushf
pop
mov
jp
cltd
imul
mov
dec
xor
mov
xchg
cld
loop
jle
jno
add
or
push
lret
push
outsb
mov
cli
scas
into
or
xchg
clc
push
xor
vmwrite
sahf
or
out
enter
cmpsb
scas
call
mov
mov
js
adc
int
sbb
inc
cmc
xchg
loopne
fists
cmpsb
mov
mov
or
int
into
jne
mov
jo
adc
pop
ljmp
push
xchg
dec
imul
inc
push
sbb
cld
cmp
push
je
sbb
mov
iret
jne
ds
ret
fs
sbb
arpl
ret
cld
jb
push
cmp
xchg
sub
dec
pushf
popa
jne
xchg
lds
pop
and
enter
cld
lcall
rorb
lods
mov
mov
pushf
js
rcr
inc
jae
pop
dec
cld
std
fdivl
fstpt
ret
xchg
push
pop
xor
jl
push
push
mov
xor
or
mov
stc
dec
das
notl
xor
pop
adc
pop
test
rol
int
test
jl
push
add
popa
pop
xchg
sbb
filds
mov
out
std
jnp
out
xor
mov
addr16
jns
jo
pop
jmp
pop
jo
adc
pop
mov
pop
popf
mov
jbe
and
add
rolb
push
aam
ret
lret
cmp
leave
sbb
mov
xchg
sub
add
cli
sti
and
js
arpl
sbb
sub
lods
sbb
loop
enter
or
shlb
xlat
push
cmpsl
into
jbe
inc
pop
test
jno
filds
xlat
xor
cmp
xor
aad
push
out
sbb
ds
push
and
mov
add
inc
in
popa
popf
xchg
mov
sbb
cwtl
add
mov
xchg
data16
fildll
repz
xor
push
lds
jmp
cmpsl
aad
cs
mov
gs
mov
mov
in
sahf
inc
pop
aad
cmp
sub
je
xchg
adc
int3
cwtl
cmp
mov
insl
les
sbb
sub
inc
jno
movb
mov
xor
xchg
sbb
cmpsb
out
sbbb
or
mov
pop
xchg
cmp
repz
nop
lret
lds
inc
loope
xchg
loope
pop
fwait
repnz
adc
and
pop
pop
inc
mov
inc
fwait
or
cmpb
sbb
fcmovb
fld
movsb
into
popa
and
cmp
jnp
xor
xchg
jmp
rdpmc
jne
mov
rclb
or
data16
lret
scas
push
repz
pop
scas
mov
jle
mov
jbe
fisubrl
sub
jmp
pop
pop
dec
scas
les
push
arpl
xor
push
mov
ficompl
sub
nop
mov
inc
outsb
rorb
push
and
aas
xchg
xor
adc
int
cwtl
sub
enter
mov
xchg
mov
loope
sarl
cmp
and
mov
dec
movsb
inc
in
imul
sahf
adc
jnp
or
mov
or
sbb
inc
cmpb
stos
lret
imul
idivb
lods
push
lcall
jb
out
add
out
xchg
aad
mov
sub
cld
andb
cltd
fisubrs
mov
jb
or
lds
data16
and
cmp
aad
jnp
js
ret
adc
push
push
cmp
inc
out
sub
js
test
add
cmp
adc
into
mov
mov
mov
jle
add
pop
stos
cmp
xchg
push
insl
pop
xor
dec
js
stc
aam
clc
cmpb
insl
pop
and
push
pop
dec
mull
xor
or
adc
or
mov
pop
xor
pop
aas
push
insb
pop
or
or
xchg
add
mov
scas
jno
or
movsb
xor
jg
pop
orl
test
notl
lret
rcrb
pop
cmpb
lcall
ds
inc
or
sub
jbe
xchg
arpl
enter
mov
stc
and
enter
mov
cmp
mov
sbb
push
js
mov
outsl
xor
ret
mov
int
enter
and
leave
xor
mov
adc
out
pop
lods
jg
add
dec
faddp
icebp
mov
xor
call
inc
push
and
push
popa
bound
pop
les
repz
pushl
sti
shrb
hlt
iret
fcompl
dec
sub
and
ret
pop
outsb
gs
rcl
out
adc
cwtl
testb
pop
jmp
mov
xchg
xor
push
push
mov
cmpb
push
movsb
outsl
sahf
mov
fisubrs
xorb
push
and
pop
insb
rcl
loopne
in
pop
subb
mov
mov
and
popa
mov
sub
cltd
push
xchg
jbe
inc
sahf
push
ret
rcr
push
inc
mov
mov
adc
and
cmp
mov
push
sbb
test
mov
jae
and
out
testl
mov
popf
pop
mov
clc
jnp
leave
add
pop
movsb
cwtl
cmp
mov
sti
pop
mov
xchg
push
jge
hlt
lret
inc
cmpsb
arpl
xchg
cltd
add
repz
mov
mov
pop
mov
mov
dec
test
ljmp
in
lahf
pop
xchg
and
cmc
sbb
pop
inc
nop
inc
js
jbe
je
push
and
outsl
or
or
mov
neg
leave
cmpsl
inc
dec
lcall
sbb
mov
rcrl
outsb
cmc
adc
insb
mov
dec
aaa
imul
loope
dec
sarl
mov
inc
loopne
das
loope
mov
repnz
pop
aam
in
in
mov
or
jl
sbbb
cmp
lcall
dec
jns
jmp
push
pop
movsb
fs
jbe
or
push
add
inc
xchg
sub
pop
add
popf
mov
mov
push
dec
mov
sub
sbb
leave
iret
xchg
ljmp
cmc
test
sbb
gs
jecxz
cmp
ret
in
les
mov
pop
mov
cmp
xchg
xorl
push
xchg
repz
es
mov
int3
jge
xor
fsub
inc
aad
stos
outsb
orl
and
enter
lcall
aaa
xor
mov
sub
ret
in
mov
stc
in
adc
mov
dec
mov
fisttpll
xchg
orl
shr
sbb
inc
mov
push
inc
cmc
or
sbb
rclb
fmul
popf
jne
push
dec
or
ja
push
insl
in
inc
push
repz
rcl
js
dec
mov
insl
inc
sbb
mov
cmpb
mov
dec
movsl
ret
stos
dec
enter
and
ja
cmpsb
cltd
jmp
mov
cmpsb
repnz
out
outsl
inc
fsubrl
lock
add
outsb
mov
ret
rcl
jmp
addr16
call
pop
aas
lahf
inc
std
or
pushf
mov
xchg
xchg
add
bound
jnp
lock
int3
ss
sbb
mov
jp
cmpsb
ficoms
mov
aaa
je
movl
out
sub
imul
mov
hlt
mov
int3
ficoms
xor
pop
std
loop
cmpsb
lea
outsb
xchg
add
and
adc
sbb
icebp
jg
outsl
xchg
xor
pop
xchg
test
mov
aam
xor
pop
in
push
rcrb
lds
xor
dec
lret
leave
cmpsb
jecxz
in
push
mov
cmp
stos
jmp
int
outsl
test
sbb
in
push
jbe
shrl
outsl
andl
or
andl
mov
xchg
pop
iret
adc
add
aaa
cmpsb
xchg
mov
inc
jae
adc
jo
sub
push
sub
test
js
sbb
pop
divb
adc
rep
sbb
xchg
xchg
cltd
sbb
repz
hlt
dec
or
mov
jg
aaa
and
or
test
sbb
aas
push
mov
bound
xchg
shrl
test
orb
enter
pop
and
sarb
cli
outsb
inc
pop
mov
pop
inc
outsb
in
dec
cltd
jno
jns
mov
stc
bound
outsb
out
pop
pop
jbe
call
inc
loopne
xchg
mov
jle
outsl
add
jne
fdivp
and
xchg
sub
shll
mov
mov
pop
int
popf
sarl
add
das
xchg
or
and
jp
cmpsb
mov
test
bound
mov
sahf
adc
daa
test
aaa
jl
mov
jnp
loop
and
sahf
cld
je
sarb
stos
shll
xchg
dec
sbb
sub
push
pop
adc
lahf
push
cmp
adc
and
mov
mov
dec
outsl
popl
and
lock
inc
push
aad
cmp
stos
mov
inc
cwtl
imul
dec
js
in
stos
mov
ja
dec
loopw
sub
jne
inc
push
sub
lea
push
mov
mov
jno
push
jo
sbb
cmp
cmp
jge
jecxz,pt
lcall
jmp
sbb
cmpsb
addr16
loopne
in
ds
hlt
sbbl
jnp
daa
insb
aam
ret
adc
inc
int3
scas
sub
ss
pop
in
cmp
lahf
xchg
std
fsubs
aam
inc
dec
bound
pusha
mov
jno
push
mov
fdiv
stos
xchg
push
outsb
pushf
xchg
sbb
int
bound
cld
sarb
add
jne
call
cs
fisubrl
and
or
ret
lret
xchg
fwait
push
mov
rcll
movsb
sbb
leave
pop
adc
sub
sbb
pop
movsb
mov
out
into
pop
mov
push
mov
bound
jnp
pop
das
arpl
xor
lods
cmpsb
mov
dec
rorl
mov
es
jp
xchg
pop
adc
jecxz
in
jbe
nop
mov
mov
pushf
sti
aas
jle
adc
movsb
addl
leave
mov
pop
movsb
lret
stc
cmp
sub
and
adc
push
xor
add
out
inc
cmpsl
mov
cmp
mov
push
nop
and
or
mov
sar
stos
or
cmpsb
out
mov
fwait
xor
jnp
inc
or
out
call
out
or
rcrl
insb
dec
inc
mov
jb
sub
dec
xchg
and
jne
into
pop
xchg
mov
lret
jne
shrl
pop
insl
iret
lcall
mov
xchg
filds
sub
xchg
add
stc
roll
call
jmp
or
xchg
pop
dec
arpl
stos
cmp
jmp
and
cmc
repnz
dec
add
mov
sub
pop
pop
cwtl
jae
scas
addr16
push
test
out
mov
cmp
test
loopnew
jnp
or
lahf
push
inc
icebp
inc
inc
fisubl
aad
out
xor
adc
jae
je
add
mov
xchg
mov
pop
out
or
dec
jns
pop
mov
xchg
sarb
jns
mov
jnp
jnp
lea
mov
imul
pusha
jl
pop
mov
icebp
push
mov
rcrb
mov
inc
push
imul
sub
imul
fildll
pusha
mov
hlt
push
add
stos
sub
cmpsb
mov
or
cmpsb
jnp
out
mov
stos
mov
jl
idiv
cmp
test
xlat
adc
ja
inc
xor
dec
sbb
pcmpgtw
bound
or
cmpsl
jnp
outsl
jecxz
lods
push
inc
imul
sub
sbb
push
sub
hlt
fs
or
mov
dec
and
xchg
leave
xor
imul
sahf
lock
xor
outsb
aam
jno
sub
xor
aas
pop
lcall
sbb
in
scas
sub
dec
je
movsl
fs
roll
xor
rorb
loopne
out
ja
insb
xchg
sub
cmp
vmovaps
push
push
fsts
push
lea
shll
xchg
daa
cli
or
xor
add
cltd
scas
out
mov
loopne
add
leave
mov
es
jb
fldl
lret
enter
jne
cmc
add
inc
movsl
loope
sbb
icebp
pop
jo
call
int
jmp
dec
nop
shr
inc
push
pop
jns
call
das
je
xchg
out
repnz
pusha
mov
addl
aad
jmp
mov
xor
cwtl
mov
pop
hlt
lret
arpl
xorb
int3
xchg
mov
sbb
bound
add
sub
test
adc
mov
push
or
xchg
or
idivl
mov
adc
test
imul
xor
push
test
in
aaa
daa
or
push
or
loope
push
jns
out
xor
or
rcrl
lock
pop
cmp
stc
imull
jbe
mov
nop
jecxz
in
seta
cmp
test
andb
sub
dec
bound
pop
push
xchg
scas
loop
lds
sti
adc
sbb
movsl
jp
adc
cmp
mov
mov
lods
pop
mov
test
enter
fisttpl
xchg
jle
sarl
inc
mov
int3
fwait
or
addr16
add
pushf
scas
adc
lret
push
push
inc
cmp
out
xchg
cmp
mov
pushf
push
inc
pop
mov
xor
xor
scas
inc
aaa
lds
inc
mov
dec
xlat
std
cmp
pop
jo
std
movsb
or
dec
loop
fadds
in
cmp
cmc
jns
pushf
ja
xor
fdivs
jle
mov
push
aam
loop
pop
lock
cmpsb
xor
mov
movsl
in
fwait
mov
push
addb
fisttps
mov
inc
ja
gs
shll
push
xchg
push
dec
pop
arpl
xlat
sbb
pop
mov
mov
test
jbe
xchg
fmuls
mov
cltd
es
mov
std
xchg
and
lret
test
shrl
outsl
fwait
jbe
cwtl
pop
cld
sub
sub
cwtl
dec
cld
repz
pop
test
fwait
dec
jle
iret
cmpsb
jl
and
or
int
jge
popa
xor
insb
mov
or
xchg
cwtl
inc
insb
imul
jmp
add
stos
mov
fwait
cmp
dec
stos
add
aad
or
nop
dec
jb
lock
xor
sahf
addr16
jp
stos
inc
pusha
les
push
lret
cmp
jmp
inc
fstl
dec
pop
jl
pop
mov
xchg
add
add
sbb
lret
xchg
rorb
sarl
scas
lods
mov
jge
jge
dec
push
jmp
push
adc
sbb
or
fisubl
sub
notl
loopne
out
sub
xchg
inc
cmp
cmpsb
bound
pop
into
dec
mov
lret
call
and
int3
mov
and
mov
lods
sbb
push
sub
mov
data16
sbb
sub
pop
sbb
and
je
paddsb
add
jecxz
shlb
orb
cmp
loope
movsl
sub
rcrb
or
sbb
lea
pop
int3
inc
jne
jns
pop
inc
cmp
push
jo
lret
jg
pushf
in
out
test
incl
mov
add
fwait
mov
mov
in
clc
push
inc
jns
fnstsw
cmpb
lret
jo
add
fsubs
xchg
adc
div
xor
aad
mov
repnz
lock
fs
lods
insl
jmp
mov
xor
pop
dec
push
dec
push
shll
dec
cld
movsl
cmp
cmp
fistpll
mov
repnz
pop
mov
mov
movsl
iret
popa
or
into
dec
pop
mov
shl
sbb
outsb
jmp
xor
sbb
jecxz
lahf
lret
in
pop
jns
push
test
ss
cltd
popa
jb
repz
push
ljmp
cmp
adc
sti
cld
push
clc
arpl
jo
mov
pop
and
cli
cltd
jp
pop
scas
clc
jge
push
add
xchg
daa
inc
cs
cmp
lahf
xchg
jle
fsubs
ficoms
insl
iret
push
dec
insl
bound
in
sahf
mov
subb
mov
clc
ljmp
sbb
push
jmp
inc
mov
pusha
out
or
push
hlt
movsb
xor
jg
and
jmp
dec
sub
and
subl
test
out
xor
fistpll
sub
and
sub
es
adc
cmpsb
dec
cmp
lahf
pusha
jg
inc
pop
sub
add
push
push
pop
mov
imul
test
scas
cmpsl
cli
mov
scas
fnstsw
xchg
dec
out
enter
add
mov
imul
mov
mov
xchg
sbb
ljmp
dec
dec
bound
ret
mov
sub
fsubs
lods
and
dec
cmp
mov
fisubs
addl
subb
ja
in
lret
addr16
sub
movsl
sti
out
int
jecxz
push
xor
mov
sbb
adc
inc
or
and
repz
daa
inc
cmpsb
jp
shlb
idivb
cs
popf
add
mov
pop
xchg
std
jae
mov
cwtl
popa
mov
mov
daa
insb
test
stos
jb
loope
pop
xchg
inc
sub
scas
xchg
inc
push
mov
push
jle
inc
sub
and
cmp
mov
or
arpl
notb
mov
mov
or
inc
cmpb
stc
pop
mov
sbb
imul
push
nop
mov
dec
leave
sub
aaa
dec
rcrl
lahf
cmp
push
lods
cmpsl
or
fisttps
sbb
leave
dec
cmp
gs
dec
cmp
mov
popl
subb
add
xchg
xchg
pop
push
pop
mov
sub
repnz
push
imul
into
lret
pop
lods
mov
sub
daa
fcmovne
push
out
and
push
lds
insl
fcmovbe
mov
and
cltd
pop
lcall
leave
xchg
je
call
rclb
scas
notb
add
dec
adc
mov
mov
cmp
fistl
fidivs
dec
add
insb
out
ss
adc
ret
jl
push
idivl
fdiv
adc
pop
cmp
or
arpl
xchg
mov
xchg
push
sbb
mov
push
scas
push
and
dec
cmp
shlb
mov
mov
lods
push
and
and
jg
mov
jp
add
pop
xchg
iret
xchg
xor
in
xchg
xlat
push
mov
aad
sub
push
out
lret
add
imul
js
pop
ret
scas
push
nop
mov
enter
xor
and
add
inc
inc
iret
fsubrs
push
popf
insl
push
push
mov
push
adc
mov
cmp
lret
add
adc
pop
add
insl
or
and
lds
std
pop
stos
push
lods
jo
add
add
popf
mov
imul
out
fisttpll
js
jno
sbb
in
inc
jns
lods
xchg
jmp
jae
fistl
leave
fnclex
adcl
fists
mov
dec
fsubr
mov
out
std
lret
cmp
ret
in
in
mov
out
or
inc
fwait
adc
insl
jmp
imul
inc
aad
pop
add
fcomps
inc
pop
sbb
cmpsl
sub
clc
cltd
insb
pop
add
mov
inc
inc
or
mov
mov
sub
jmp
inc
mov
xor
mov
das
mov
cmc
xor
dec
ret
addl
icebp
in
call
push
sub
nop
mov
or
or
mov
push
loope
dec
dec
shll
sbb
fbld
outsb
inc
insl
push
dec
stos
mov
stos
sbb
mov
push
dec
fldt
jnp
push
cmpsl
test
mov
push
pop
lods
mov
fdivs
mov
insb
pop
cmpsl
mov
xor
add
ds
mov
jmp
dec
sbb
popf
pop
jl
clc
push
dec
jns
cmp
das
sub
in
add
shlb
push
sub
insb
jmp
pop
sbb
lock
mov
mov
sub
and
in
fwait
in
scas
pushf
imul
dec
outsl
je
jb
test
call
adc
movsl
fmull
jg
out
movsb
test
lcall
lods
lods
arpl
pushf
movsl
dec
testb
sub
fstpt
or
adc
repnz
xchg
fsubs
xor
xor
mov
clc
enter
mov
arpl
mov
jp
lahf
movsl
pop
push
insl
inc
in
inc
jb
loop
pop
insl
fwait
mov
loopne
adc
lea
repz
popa
xor
mov
mov
addr16
das
xor
int3
in
aaa
lahf
out
and
stc
into
sub
popf
push
enter
and
addb
shl
adc
inc
jmp
fcoms
fs
push
cmc
mov
inc
aad
ds
sub
movb
inc
mov
adc
dec
adc
in
ljmp
out
fistpl
push
sbb
add
inc
andb
pushf
ret
mov
arpl
sub
xor
out
sub
push
jb
in
mov
aad
notb
and
xor
test
repnz
daa
push
in
pop
xchg
leave
sbb
or
mov
jp
push
sbb
fsubs
fcomps
cmp
xchg
xor
jmp
sbb
testb
fs
rol
sti
stc
jg
outsb
adc
xchg
add
daa
jae
jne
xor
inc
sub
xor
packsswb
cmp
out
rclb
pop
cltd
lds
jle
cltd
sbb
jne
adc
int
cmp
dec
mov
xchg
inc
add
ds
les
mov
jecxz
jge
idivl
outsl
repz
cli
std
xchg
cmp
mov
xchg
dec
es
rcll
adc
or
mov
mov
js
inc
subl
inc
jne
mov
inc
aam
mov
into
je,pn
sbb
dec
hlt
int
adc
push
and
in
dec
repnz
lods
inc
test
cmp
push
push
fsubs
pop
pusha
fdivl
cmpsb
and
lods
mov
neg
cmp
sahf
add
push
adc
data16
les
mov
jnp
mov
dec
inc
movl
es
mov
mov
cmp
adc
sbb
push
ja
or
xchg
test
lock
pushf
dec
fcoml
cmc
movsb
daa
test
mov
push
stc
push
xor
insl
add
mov
pushf
jmp
pusha
cli
inc
push
mov
jmp
sbb
pop
inc
mov
push
or
scas
mov
pop
xor
icebp
pop
scas
and
jbe
out
repz
jecxz
sbb
cli
outsb
mov
mov
fwait
test
mov
ljmp
daa
xor
sbb
stc
cmpb
sbb
push
or
out
mov
ss
pop
dec
outsl
icebp
sub
cmp
sbb
fidivrl
lahf
fistps
adcb
push
add
fmull
outsl
and
data16
addr16
stc
aam
sbb
mov
add
jle
ret
fidivrl
and
movsb
sub
neg
cmp
lret
gs
xchg
pop
sbb
pop
outsb
lahf
sub
lcall
faddl
push
test
stos
fucomi
js
popf
push
inc
leave
enter
aas
mov
das
mov
inc
cmp
jmp
call
pop
aam
or
sarl
test
dec
sub
shrl
into
mov
jns
shll
adc
pop
dec
cmpsb
out
scas
xchg
xchg
inc
loopne
mov
add
fucom
ror
xchg
addr16
sbb
fucomi
inc
add
aad
shrb
in
lea
insb
jo
and
adc
mov
stc
add
pop
sbb
mov
sub
adc
xor
xor
inc
cmpsb
xor
lods
rcrb
out
and
cmpsb
jbe
pop
fnstenv
add
cmpl
fsub
xlat
sbb
xor
fnstsw
rcrl
aad
adc
iret
cmpb
das
push
outsb
mov
roll
or
dec
scas
dec
sbb
cld
add
add
sub
sbb
pop
push
mov
and
cmp
imul
cmp
adc
mov
fstpl
cwtl
lcall
jecxz
or
sbb
push
test
or
cmpsb
jne
mov
cmpsb
aam
sub
out
or
insl
mov
adc
int
push
xchg
cmp
fldt
fsubrl
jmp
adc
insb
outsl
fadd
ja
repz
cmp
insl
jl
xor
mov
jle
push
rclb
xor
sub
push
rcl
out
int
xchg
int3
inc
loope
cwtl
pop
in
das
push
loop
jle
aaa
xor
repz
adc
push
cmp
out
push
jb
outsl
jp
cltd
dec
pop
xlat
cltd
xchg
movsb
jl
jl
mov
xorb
cmpb
and
int3
mov
ret
mov
jbe
lods
lea
cwtl
jae
fidivrs
pop
or
pop
insl
inc
mov
dec
and
imul
cmc
lods
jnp
cli
fstl
xlat
jecxz
jne
repnz
cld
shrl
cli
rclb
xchg
inc
ret
shr
cmp
jnp
mov
sub
xorl
mov
xchg
test
xor
xlat
push
into
dec
psllq
sbb
mov
out
and
push
lcall
iret
fwait
jg
icebp
and
aaa
stos
xchg
jns
sbb
xor
cwtl
dec
mov
cmc
cld
addr16
inc
mov
repnz
fcoml
adc
insb
fmul
or
cmp
xchg
lret
sub
jl
xchg
rcpps
jbe
cmpsl
repz
les
movsb
add
mov
mov
pop
and
shr
lahf
jo
jg
out
lods
mov
les
inc
adc
inc
int
sbb
iret
sti
and
inc
cmpl
xor
sub
or
and
lahf
or
enter
lods
or
outsb
cmpsl
ja
shrl
pop
stos
stos
sbb
sbb
in
push
test
sbb
dec
stc
out
pop
dec
lds
ss
xor
test
lods
stos
lahf
sub
xor
cmpsb
daa
jecxz
mov
xchg
ja
cs
cwtl
and
lds
xlat
out
lea
popa
aam
movsl
add
data16
iret
leave
stos
repz
out
jle
sub
mov
data16
mov
inc
inc
sub
add
xor
lcall
pop
and
push
sbbl
sahf
test
rclb
mov
xor
in
popa
pop
in
lds
js
in
xor
sub
cmp
xor
cmp
cmp
push
ror
jp
xchg
mov
push
or
jns
mov
cmc
popf
imul
mov
push
aam
or
jg
lcall
fcomps
mov
int3
pop
inc
xor
sub
nop
cmp
cmp
out
adc
in
stos
iret
shl
sbb
xor
jmp
shll
movsb
repz
push
lea
cmp
adc
in
hlt
and
and
lcall
lock
jge
ss
jo
cli
xchg
movsl
mov
mov
int
jbe
sbb
push
inc
cmp
and
scas
jno
imul
testl
mov
push
adcl
sti
add
dec
sbb
and
lret
sbb
adc
xchg
mov
lret
ffree
cmc
xor
mov
sub
das
jecxz
imul
aaa
imul
and
mov
icebp
fimull
dec
jbe
sub
sahf
sar
int
mov
call
jne
or
and
fcmovnu
les
pcmpeqb
negb
iret
dec
push
icebp
stos
adc
sbb
ljmp
pop
inc
pop
and
dec
push
lahf
push
enter
jl
xchg
ret
stos
inc
es
mov
aad
cmp
mov
push
icebp
mov
icebp
lods
enter
into
pop
scas
dec
fwait
mov
or
iret
cmp
fnsave
outsb
or
es
sub
mov
sub
sbb
iret
pop
das
xchg
xchg
lcall
add
out
push
std
fidivrl
push
add
or
js
jl
xor
out
cmpsl
and
pop
push
dec
dec
sbb
imul
out
mov
cmp
cmp
pusha
sbb
insl
push
aam
in
add
repnz
jo
js
and
mov
aam
in
inc
popf
dec
mov
inc
jmp
decb
lods
sbb
and
js
add
mov
push
lcall
repz
xor
xchg
xor
scas
push
add
and
test
mov
pop
addr16
mov
add
mov
hlt
pushf
arpl
sub
fcoml
push
jp
push
inc
mov
aam
xchg
lea
inc
push
jno
add
movl
jecxz,pt
mov
movsb
sarl
fisubrs
stos
jnp
ret
sub
xchg
sub
sbb
mov
movsl
int
movsb
adc
insl
fwait
xchg
mov
ss
out
shr
lods
xchg
mov
mov
add
popa
xor
inc
in
mov
inc
sub
xchg
mov
insl
add
icebp
and
cmpsb
cmp
adc
adc
dec
lret
and
and
push
bound
les
icebp
in
jns
cmp
loopne
sub
dec
xchg
pop
mov
or
mov
ds
ja
push
push
jns
or
ss
sti
push
add
lock
adc
jp
xchg
cli
scas
sbb
jge
js
bound
push
and
jnp
test
pop
mov
mov
xor
inc
pop
pop
inc
lcall
push
sarb
mov
imull
pop
add
lcall
pop
sarl
sub
and
add
mov
idivb
movsl
dec
test
ret
fstpt
pop
inc
push
sahf
pop
dec
jg
addr16
mov
xchg
pop
mov
xor
shll
shll
ror
les
mov
shr
mov
xchg
lea
jae
mov
sarb
shrb
cwtl
jo
cs
jmp
dec
pop
add
xlat
inc
push
inc
dec
sbb
out
hlt
out
fldt
fldt
in
inc
mov
lcall
bound
add
daa
inc
adc
mov
scas
mov
repnz
rclb
sbb
push
push
fdivrs
or
mov
adc
data16
sbb
loopne
dec
aas
movsb
loopne
jo
std
loop
inc
dec
imul
push
js
cmp
sub
subl
inc
mov
fistpl
mov
movsb
ret
fcoml
ljmp
dec
sub
mov
arpl
push
jmp
xor
adc
orl
fisubrs
insl
sub
loope
test
or
lret
xor
insb
mov
andl
in
pop
pop
cmp
dec
push
sahf
push
imul
sub
sbb
inc
inc
fneni(8087
push
lods
out
decl
dec
push
xchg
testb
in
add
test
cmp
es
leave
sub
fstpt
mov
stos
xchg
sbb
mov
lret
in
cmc
jnp
cmp
adc
adc
popa
imul
or
lock
adc
inc
xchg
sti
sbb
add
js
out
push
jbe
inc
dec
mov
mov
loopne
xor
mov
jbe
xchg
fcomip
lret
and
lret
jns
pusha
cmp
lock
mov
mov
mov
int3
xchg
fs
push
aam
insl
cmpsl
mov
inc
repnz
insb
divl
mov
sbb
icebp
mov
addr16
xchg
pop
mov
cmc
inc
iret
mov
jae
cmc
cltd
xchg
jne
xor
shll
shrl
fcmove
mov
adc
fwait
pop
push
inc
dec
mov
xor
test
in
call
testb
and
xor
cmpsl
mov
sbbb
orb
pushf
mov
dec
and
jae
je
sub
lods
sbb
adc
push
mov
xor
mov
scas
aas
les
push
sbb
mov
lock
ffree
xchg
outsb
xor
nop
jmp
daa
dec
lahf
xor
sbb
nop
cmp
stc
xchg
adc
int3
mov
sar
pusha
adc
jne
testl
cmpsl
hlt
stos
imul
cmp
fldcw
push
pop
incl
xchg
decb
popa
jbe
ljmp
mov
cltd
mov
pop
inc
cltd
hlt
mov
std
sbb
cmp
fwait
stc
adc
sub
scas
jmp
ret
lods
xor
outsb
int
or
pop
sub
rcll
mov
dec
push
sahf
aam
scas
xchg
je
jecxz
cmpsl
xchg
test
lods
cmp
sub
loope
dec
and
adc
xchg
addl
ret
sbb
lods
adc
inc
pop
xchg
in
sahf
pop
push
xor
int3
fs
imul
xchg
xchg
xor
push
push
jmp
sub
jnp
xchg
testb
lea
ficoml
in
es
jg
mov
outsl
or
test
aas
lret
sbb
inc
add
por
push
add
call
or
xchg
mov
xchg
sub
shrb
orb
mov
add
and
andl
mov
cltd
xchg
lcall
mov
test
repz
and
icebp
push
mov
xor
cld
xor
ds
mov
sbb
xchg
in
out
stc
addl
test
and
adc
enter
push
or
xchg
stos
cmp
gs
adc
adc
enter
aad
fildll
cwtl
aam
or
mov
adc
push
pop
into
dec
outsb
dec
cmc
mov
sub
lahf
jecxz
sbb
adc
scas
ret
xchg
xchg
shrl
sub
rolb
pop
pop
add
xor
cmp
mov
into
cmp
out
out
mov
pop
and
mov
pop
ds
push
stc
enter
lock
pushf
int
stos
cmp
mov
inc
roll
cltd
pop
sub
jb
sbb
adc
aas
repz
addb
xor
mov
ret
mov
lea
repnz
mov
stc
loopne
sub
nop
mov
inc
ffree
out
cwtl
aad
add
xor
jmp
clc
xchg
xchg
pop
pusha
mov
mov
xchg
gs
pop
xor
cmpsl
inc
sub
outsb
push
data16
sbb
lret
stos
test
insb
fidivl
jnp
mov
jmp
dec
push
push
jb,pn
lock
in
out
cmp
ja
inc
cmc
mov
jp
add
and
push
sbb
push
sbbl
mov
lock
pop
add
cli
adc
shlb
inc
scas
or
nop
or
call
jbe
cmp
cld
mov
stc
mov
xchg
aas
pop
jns
mov
test
rclb
fdivr
imul
sub
lods
dec
inc
call
push
jp
cmpsl
clc
shlb
pop
aam
xor
add
js
push
xchg
adc
cmp
adc
lcall
cmp
adc
jne
xchg
push
mov
mov
adc
jbe
mov
insb
pop
repnz
nop
xor
or
pslld
cmp
stos
ds
and
add
mov
faddl
mov
cli
shrb
xchg
lock
cmp
mov
sbb
test
push
xchg
push
jns
push
inc
ss
clc
push
fmull
xlat
sahf
jae
sbb
pop
mov
sub
lret
imul
aam
push
sbb
or
dec
and
in
mov
xchg
sbb
push
jbe
adc
adc
adc
jo
cmp
sub
mov
cmpsl
repnz
push
inc
jbe
ret
add
fists
pop
add
add
xor
insl
clc
add
nop
mov
mov
nop
lahf
cmp
leave
push
push
and
pop
cmp
pop
push
xor
in
iret
in
mov
pop
ljmp
call
icebp
mov
lret
popa
adc
pop
rclb
rcll
sub
mov
dec
mov
mov
xor
xlat
dec
dec
std
faddl
cwtl
or
add
in
jl
mov
sbb
xchg
cli
sti
xchg
xchg
cld
shll
out
jne
in
jmp
mov
cli
mov
cmp
mov
imull
push
jne
sarb
sarl
lcall
dec
mov
xor
enter
loope
rcrb
dec
imul
xchg
in
add
inc
or
popa
mov
insl
je
lock
lcall
in
cmp
or
out
sub
inc
aas
cmc
lret
mov
test
pop
dec
fnstsw
push
jne
test
cmpsl
mov
popa
repnz
idiv
mov
xchg
push
mov
jns
fwait
push
and
mov
out
iret
insl
dec
fisubrs
inc
add
fldenv
cmp
imul
lcall
stos
mov
stos
test
mov
in
adc
xor
les
pop
aam
cmp
push
aaa
stc
fs
ljmp
hlt
insb
or
pop
data16
cld
pop
ljmp
xor
mov
mov
mov
mov
xchg
push
sbb
pop
push
outsl
sub
cmp
rcl
out
jmp
or
test
sbb
sub
in
xchg
sbb
fidivs
andl
fldcw
sbb
mov
cmp
je
scas
cli
movsl
les
shr
push
in
data16
loop
aam
push
xchg
es
dec
loop
dec
out
push
cltd
dec
push
dec
mov
shlb
gs
jle
lea
mov
lahf
pop
cmp
jg
and
jne
sbb
mov
clc
movswl
xor
mov
loop
mov
fcmovnbe
mov
jecxz
hlt
fmull
xorl
jp
cli
xchg
jg
scas
and
inc
xchg
repz
push
pop
hlt
mov
cs
dec
jne
in
add
mov
jbe
lea
in
sub
or
rcll
int3
adcb
cld
or
add
pop
lds
xor
fmull
imul
test
fidivl
in
sahf
mov
dec
sbbl
xor
pop
lock
adc
mov
dec
into
jg
int3
jbe
lods
test
ljmp
and
cmc
mov
push
adc
mov
dec
xchg
sbb
xchg
mov
lock
int
adc
lock
sub
es
clc
std
sub
cmp
adc
call
mov
lock
inc
rorb
and
fnstenv
fistl
popa
mov
movsl
dec
inc
fldenv
xor
gs
rolb
push
sbb
fs
insl
pop
nop
daa
jl
stos
mov
adc
or
or
mov
nop
stc
mov
data16
cmp
jmp
xor
pop
icebp
arpl
mov
dec
pop
and
hlt
push
cmp
push
daa
cmp
push
les
rcl
fcompl
pushf
mov
fs
sti
jae
in
popf
lods
inc
jne
nopl
out
outsl
int
enter
pop
dec
and
out
aam
add
lcall
lret
out
xchg
test
dec
cmp
arpl
in
sub
fisubl
dec
inc
cs
mov
repnz
sub
mov
enter
rcrb
xchg
and
push
push
idivb
and
mov
sysexit
add
adc
add
dec
push
push
push
popf
cmc
sub
sbb
int3
repnz
aaa
sbb
or
jae
push
jno
sub
je
adc
xor
jmp
xchg
bswap
mov
fmull
xchg
mov
outsb
dec
cmp
or
in
sub
and
sti
pop
pop
movsl
pop
jae
add
mov
or
popf
mov
mov
fldt
mulb
repz
sbb
mov
push
mov
jbe
andb
xor
mov
xchg
stos
dec
pop
icebp
add
cs
mov
xor
xlat
loop
cmp
xchg
ds
mov
movsl
sub
lods
ja
jecxz
and
cmp
out
fidivrl
sbb
push
jae
mov
push
lret
lcall
outsb
xchg
pop
mov
push
sub
jo
lock
andnps
push
lds
and
int3
xchg
inc
pushf
jae
inc
mov
test
or
aas
and
lods
out
push
notb
cld
stos
pop
aaa
dec
test
mov
pushf
sub
jne
sub
addr16
imul
and
add
testb
push
push
pop
and
aaa
mov
push
leave
sahf
jecxz
xchg
add
aas
in
xchg
push
ds
fimuls
or
ret
adc
adc
or
inc
and
cmp
inc
jl
dec
inc
pop
lcall
cs
aaa
daa
icebp
dec
mov
sbb
out
push
mov
cmp
jae
lahf
inc
jae
sub
jecxz
repz
xor
pop
outsl
roll
leave
ljmp
jne
sbb
inc
into
pop
push
jbe
lahf
pop
lsl
push
mov
andl
enter
or
mov
adc
pop
jle
dec
push
rcll
pop
jo
inc
mov
xor
xchg
testb
or
loope
scas
add
clc
lahf
lahf
push
scas
pop
push
push
sbb
mov
xor
xor
mov
popf
es
mov
pop
leave
push
test
or
outsl
in
mov
test
mov
sarb
push
loop
mov
pop
push
xchg
mov
addb
rdpmc
das
movsb
ljmp
in
in
cmp
aaa
dec
dec
jno
in
sub
repnz
dec
xor
sbb
inc
cmc
jl
mov
xlat
mov
mov
test
inc
lahf
dec
sbb
mov
sti
fisttps
jo
mov
dec
ret
xchg
pushl
mov
out
loope
push
sub
jne
xor
pop
lcall
mov
cmp
push
scas
sbb
ja
inc
nop
cmp
call
rorb
enter
imul
mov
popf
and
lcall
lret
dec
mov
jo
inc
call
fisttps
insl
jmp
pushf
jnp
das
leave
nop
pop
push
and
sub
or
and
es
jnp
xchg
js
sti
shlb
cmp
and
push
in
cmp
aam
loopne
xchg
xor
fistpll
pop
test
iret
xorb
shrl
xchg
xchg
xchg
js
push
mov
mov
jbe
jp
mov
call
fcoms
ds
gs
pop
ror
pop
shll
jbe
jbe
shrl
fildll
int3
and
adc
mov
test
test
orl
xor
lock
fsts
repz
aad
subl
xchg
mov
or
movsb
rorb
into
add
outsl
outsb
mov
mov
add
imul
sub
jae
sbb
dec
fcoms
jge
out
insb
test
sub
or
add
mov
jno
aas
sub
sbb
jmp
push
mov
aaa
sub
fcmove
les
pushf
repz
or
sbb
in
nop
xchg
orl
sbb
sub
cmp
add
dec
add
addb
mov
in
adc
xchg
xchg
adc
inc
into
xor
loop
sub
cmp
out
nop
enter
cmp
cmp
out
and
and
xchg
rcrb
add
jbe
mov
lods
arpl
dec
sbb
and
push
and
mov
stc
xchg
fwait
sbb
cmp
dec
insb
pusha
fcmovbe
sbb
xor
inc
add
out
lcall
inc
lock
outsl
jl
and
sub
mov
lcall
imul
ds
xor
outsl
adc
cld
loopne
mov
repnz
sbb
je
sbb
sti
mov
xor
sub
test
mov
mov
inc
adc
dec
mov
xchg
movsb
add
sbb
sbb
inc
cli
nop
or
rcl
sub
mov
adc
adc
dec
pop
or
fbstp
or
inc
lds
xor
fisttps
sub
mov
jecxz
sub
lods
push
ret
lret
aam
decl
xchg
lret
call
mov
xor
sub
imul
xor
fiaddl
test
xchg
outsl
clc
out
xchg
out
cmp
push
inc
mov
pop
shlb
xchg
inc
aam
xorl
mov
push
mov
mov
push
mov
mov
cmpsb
aad
xchg
lds
and
rol
sbb
aaa
iret
sub
pop
std
cmp
out
ds
fdivrl
adc
fwait
ss
cmp
cltd
cmp
push
sti
xchg
fisttpll
pusha
sub
std
sbb
imul
jo
imul
cltd
inc
scas
adc
cmp
addr16
or
pusha
mov
mov
scas
cmp
test
rcl
sub
jns
mov
push
jp
push
into
pusha
mov
stos
xlat
mov
dec
cwtl
jmp
adc
pop
lcall
mov
xchg
or
or
int
testb
int3
addl
jb
jge
inc
pop
mov
or
fdivr
pop
arpl
scas
popf
mov
dec
test
sbb
pop
xor
imul
insb
cmp
cmp
cmpsl
adc
lret
addl
mov
mov
scas
mov
jecxz
sub
xor
cmp
ss
sub
cmp
and
lock
xchg
add
mov
adc
imul
jae
cmp
pop
xchg
sbb
push
jo
aas
cmp
push
xor
out
push
test
nop
scas
fldt
pop
gs
jmp
add
jns
add
lea
cld
mov
test
adc
scas
insl
ficomps
loopne
scas
xor
mov
lcall
pop
add
out
jmp
addr16
cld
leave
mov
jmp
sar
ljmp
call
xchg
xchg
xor
xor
scas
pop
out
sbbb
mov
sub
mov
data16
push
ret
mov
je
loope
pop
ss
mov
sub
shrl
add
mov
xor
aas
les
cmp
adc
insw
xor
pop
and
dec
das
mov
dec
jp
adc
pushf
clc
or
sub
jmp
sub
adc
mov
jmp
cmp
mov
xor
xchg
add
outsb
enter
jo
lret
mov
inc
mov
inc
es
sbb
push
pop
pshufw
jl
cmpsb
ret
stos
mov
iret
sti
adc
pop
push
push
fldt
lock
jecxz
scas
orl
pop
dec
iret
in
and
ret
fdivl
cmpsb
push
jne
inc
jo
mov
inc
mov
lahf
hlt
popf
aas
in
hlt
add
and
stc
cs
sahf
repz
lods
mov
inc
add
xchg
push
and
lea
mov
es
int3
ficoms
sbb
lods
jne
repnz
lea
dec
imul
jne
bound
insl
add
cmpsb
sbb
iret
outsb
xchg
xorl
sub
inc
lds
stos
xchg
lahf
sub
sbb
shll
loopne
mov
and
mov
xchg
fstps
jnp
lds
jnp
ljmp
cmpsl
sub
rclb
aas
movsb
icebp
hlt
dec
aam
or
ficoml
lock
push
xchg
adcl
pop
fildl
adcb
xor
push
test
xchg
pop
xor
fisubrs
dec
adc
dec
aad
call
inc
in
adc
and
test
mov
push
mov
pop
or
daa
sbb
push
and
loopne
test
out
ds
fs
or
xchg
jns
push
hlt
push
scas
adc
daa
add
mov
jg
je
aas
push
mov
je
push
or
pushf
pop
sarb
or
jbe
pop
adc
scas
in
mov
xchg
sbb
imul
pop
dec
jne
adc
jne
arpl
adc
bound
xchg
or
inc
orl
mov
inc
pushf
jl
xorl
addl
xor
lahf
mov
div
sbb
insb
xor
inc
mov
mov
sbb
mov
aaa
push
pop
fldl
aad
inc
jl
scas
dec
or
addr16
lea
aad
jmp
popf
scas
mov
push
dec
cwtl
xor
sbb
inc
pop
sahf
xor
popa
loop
jns
cmp
sub
mov
pop
lahf
pop
sbb
int3
lret
scas
pop
popf
out
and
dec
rol
pop
lds
add
lods
fadds
and
push
xchg
cli
mov
inc
sti
inc
add
fbstp
sub
adc
in
int
cltd
nop
nop
lods
xchg
mov
mov
adc
or
gs
mov
mov
mov
int3
cmpsl
dec
clc
cmp
adc
rcrl
jle
mov
clc
mov
cltd
popf
pop
sub
pop
mov
pop
fldenv
rcll
call
xor
call
fdivs
andl
mov
inc
cmc
mov
scas
cmp
or
ss
outsb
mov
loope
mov
incl
ja
out
iret
scas
mov
bound
push
addr16
push
sbb
cmpsl
push
testl
xchg
loop
sbb
roll
jle
and
pop
pop
add
pop
hlt
adcb
dec
jmp
jl
imul
jl
popa
push
mov
pop
fistpll
xor
out
mov
in
jns
adc
pop
sub
imul
adc
and
or
mov
ja
iret
mov
xchg
loope
mov
adc
adc
jne
popf
pop
mov
sub
jo
mov
mov
es
test
mov
sub
out
inc
cmc
cmp
cld
test
sub
shlb
or
mov
push
dec
push
int
xchg
mov
adcb
inc
mov
push
cmp
test
out
and
push
loop
orb
dec
cmp
in
fildll
xchg
divl
mov
or
sub
or
aad
aad
mov
jae
push
std
fiaddl
dec
fiadds
adcl
xchg
aaa
aas
out
xchg
lods
fnstsw
jg
loope
pushf
pop
test
dec
dec
aaa
push
int
and
or
push
push
pop
push
cmp
inc
inc
loop
test
pop
add
xchg
int3
push
loopne
or
and
ret
aas
lock
jne
js
hlt
mov
xor
popl
pop
test
out
popa
int3
into
bound
aam
leave
xchg
add
mov
loopne
push
std
popa
push
dec
cmpsb
jae
scas
repz
pop
arpl
push
andl
fistpll
cmpsl
lea
add
cs
jno
dec
daa
xchg
ds
cwtl
enter
mov
xor
lods
arpl
scas
inc
popa
pop
mov
mov
mov
out
lret
adc
lods
fimull
hlt
and
jg
mov
in
ljmp
adc
mov
or
push
ja
pop
data16
stos
popf
mov
cmp
sub
mov
aam
ja
xchg
test
scas
test
gs
jp
movsb
test
mov
push
cltd
push
mov
dec
jl
insb
mov
mov
inc
adcl
popf
mov
lock
add
orl
test
lcall
xchg
or
jno
clc
outsb
fs
mov
decb
sbb
xchg
mov
sti
xchg
cmp
pushf
shlb
and
pop
cmp
xlat
lret
mov
add
ficoms
mov
dec
stos
jb
xor
xor
fcomp
popaw
clc
push
push
pusha
stos
sbb
inc
sbb
jl
mov
xor
jmp
into
push
xchg
and
clc
sub
iret
es
pop
cwtl
lock
xlat
inc
and
inc
shrb
sbb
rcll
adc
aam
sub
mov
insb
lods
loop
jbe,pn
clc
test
cli
fcoms
xor
in
xlat
inc
popa
test
cmp
mov
mov
inc
jne
jp
je
or
or
or
xor
jg
roll
xchg
scas
aas
cmp
mov
mov
insl
in
add
xor
fiadds
and
cmp
pushf
adc
pop
int
fstps
ret
cld
mov
imul
cmpsl
ss
stos
pop
jmp
test
imul
pop
jmp
loopne
push
mov
repz
pop
lcall
cmpl
push
mov
pop
aaa
sar
es
int3
add
fisubrs
arpl
mov
mov
mov
ljmp
jg
repz
cmp
rcr
mov
loop
lods
or
xor
pop
cmp
push
pop
into
cs
pop
jecxz
mov
jne
lea
jae
adc
imul
gs
dec
jecxz
popf
sti
sbb
inc
adc
in
js
dec
xlat
call
rclb
call
mov
adc
test
js
cmc
stc
dec
xchg
pop
jns
das
aad
push
shrl
test
sub
mov
rorl
mov
and
outsl
inc
cld
inc
cmp
sub
es
enter
adc
imul
sbb
daa
jb
sbb
xchg
addb
lock
mov
lcall
xchg
xor
js
cmp
imul
jmp
std
pop
sub
add
or
data16
and
jge
stos
movsb
pop
push
shrb
movd
sbb
int
sub
inc
fwait
repnz
in
push
mov
stos
test
push
out
std
bnd
push
jge
andl
scas
loope
cmp
push
sarl
cmc
sub
ja
push
push
sub
or
popf
or
inc
xchg
push
clc
sbb
outsb
add
inc
icebp
jp
cmp
and
sbb
ds
mov
fbld
or
mov
cmpsb
or
jp
sbb
dec
add
outsb
mov
push
cmp
lock
pop
and
stc
or
insb
pop
mov
icebp
push
adc
mov
in
lea
push
rolb
mov
jecxz
pop
andl
insb
cmp
mov
dec
jg
and
icebp
dec
cmpsl
sub
int3
mov
pop
or
mov
lods
push
cmp
sbb
pop
in
sbb
sbb
cmc
push
push
xchg
or
stos
add
imul
jb
mov
mov
inc
lods
mov
pop
in
js
sub
push
cwtl
pushf
inc
mov
lods
out
adcb
shlb
jae
lds
add
les
dec
or
sbb
xchg
mov
add
in
int
or
ret
push
fmulp
xor
stos
lret
sbb
rorb
int
pop
ss
call
pop
icebp
jg
dec
bound
fcmovnu
sbbl
xlat
inc
inc
mov
cmpsb
cmpsl
aaa
jne
stos
sbb
jb
ret
push
sub
and
and
xor
xchg
data16
movsl
repz
push
addr16
pushf
adc
ja
fbstp
and
push
push
pusha
je
fadds
ds
das
ret
les
adc
pop
mov
mov
xor
repz
ret
sbb
into
arpl
cltd
or
test
cli
dec
in
sahf
loop
ljmp
dec
dec
fmull
shlb
addr16
push
bound
mov
mov
mov
stc
insl
in
inc
xor
mov
adc
pushf
mov
xchg
xchg
inc
mov
stos
stc
push
leave
std
ds
add
or
pusha
scas
repnz
adc
jmp
mov
mov
lahf
int
sub
xorl
mov
or
test
and
orb
xor
cld
bound
dec
cwtl
ds
and
imul
mov
xchg
jno
iret
push
dec
jl
sahf
mov
es
int
pop
or
pop
xchg
adc
sbb
movsb
xor
sbb
inc
xchg
push
push
dec
mov
xchg
mov
movsb
outsb
fisttpl
sub
add
inc
cmp
insl
aam
inc
mov
jle
cli
push
fisttpl
rorb
aas
xchg
js
pop
cmpsb
sub
hlt
cmp
pop
sub
and
int3
pop
xor
ror
icebp
or
movsl
sbb
mov
das
addr16
stos
jg
daa
lds
inc
pop
add
jp
fisubrs
rclb
repz
iret
fdivr
jge
jns
fs
repnz
adc
mov
cli
outsb
mov
cwtl
fsts
test
sub
cwtl
push
out
jmp
filds
popa
or
shlb
mov
lcall
mov
or
xor
aas
jnp
imulb
test
jbe
icebp
fwait
jp
inc
fabs
push
push
jno
adc
jae
out
lods
jp
js
mov
mov
jmp
shll
movsl
mov
mov
js
popf
push
pop
mov
xor
adcl
pop
and
mov
adc
out
rcr
mov
lock
xlat
sub
xchg
dec
lret
or
or
je
sbb
lock
sub
push
sub
inc
push
inc
aam
cwtl
cmovb
stos
movsb
stc
inc
or
mov
xchg
daa
scas
sub
mov
vpmaxub
xor
xchg
sahf
jge
mov
stos
inc
and
add
out
and
fldl
pop
leave
popa
and
mov
jno
testb
dec
inc
jp
mov
mov
mov
cmp
add
or
dec
in
adc
lret
xchg
rcrb
cmpsb
repz
movsb
popf
fimull
mov
sbb
dec
sbb
push
push
push
xchg
adc
call
test
cmp
push
mov
add
mov
push
les
pop
sbb
inc
out
subl
sub
xor
sbb
cli
clc
sar
and
imull
push
push
xchg
pop
pop
test
ds
sahf
lret
jecxz
xor
mov
loopne
xchg
popf
sbb
mov
mov
movsl
out
add
fadds
sbb
pop
jns
mov
xchg
nop
cmp
and
add
xchg
test
in
mov
mov
out
rorl
lahf
das
mov
cmpsl
jmp
rol
pusha
loope
pop
inc
xlat
adc
lds
in
xchg
and
frstor
out
jne
pop
cli
insb
punpckldq
mul
ljmp
push
mov
mov
stos
push
pusha
test
push
or
mov
enter
add
pop
imull
negl
dec
xor
test
mov
jge
pusha
push
sahf
push
repz
scas
pop
outsl
addr16
hlt
and
fsubp
cs
jge
pop
lret
inc
mov
push
out
decb
mov
or
xchg
jns
int
stos
test
out
std
dec
or
cmpsb
fwait
xchg
cmpsl
loopne
into
mov
pop
pop
dec
mov
inc
and
lock
sbb
ret
mov
jbe
mov
movsb
push
mov
xchg
ficompl
out
pop
je
inc
cmp
out
xchg
adc
nop
pusha
mov
mov
mov
subb
add
mov
movsb
dec
loope
mov
cwtl
mov
dec
cld
lock
sbb
jbe
mov
push
push
add
xchg
sub
hlt
jp
push
sbb
inc
push
lcall
scas
mov
mov
jecxz
cli
jno
in
push
jle
mov
test
cmc
xor
sub
and
vshufpd
lock
jno
mov
dec
loopne
inc
inc
adc
je
enter
je
jbe
test
cmpsb
push
or
mov
out
mov
adc
jmp
adc
aaa
stc
adc
insb
inc
cmp
dec
push
jecxz
insl
sub
mov
dec
sub
out
ja
nop
ret
mov
sbb
cs
or
push
ret
xchg
xchg
adc
mov
mov
cwtl
mov
lret
inc
daa
ljmp
mov
cmpl
or
mov
fnstenv
adc
popf
loopne
in
xor
pop
add
addr16
bound
hlt
jp
pusha
cmp
and
pop
subb
je
cs
shlb
je
pop
int
or
cmp
push
dec
mov
pop
das
sbb
roll
call
arpl
outsb
xchg
or
mov
xchg
pop
sbb
std
repnz
scas
mov
push
popa
arpl
filds
into
and
sub
test
add
push
pusha
add
push
xchg
mov
aaa
scas
and
call
das
mov
push
idivl
dec
push
cld
mov
ret
lods
lods
test
cmp
push
ljmp
xlat
lods
xor
xor
pushf
lock
sar
pop
jg
es
xchg
xor
mov
flds
hlt
jl
add
and
push
adc
jge
add
jmp
mov
mov
popa
pop
cltd
mov
mov
call
mov
jge
push
mov
les
lds
add
mov
jle
clc
jne
cltd
inc
jge
add
test
or
or
pop
jno
stos
dec
sbb
ficomps
xor
test
inc
dec
movsl
fcomps
and
xor
hlt
sahf
inc
inc
xchg
mov
test
rcr
sbb
sbb
inc
cmp
arpl
sbb
adc
loop
adc
mov
dec
ss
out
dec
fwait
mov
es
subl
test
sub
jecxz
and
mov
mov
and
push
xor
hlt
test
test
xchg
aam
addr16
in
sti
xlat
lods
aam
mov
sbb
int3
pop
push
mov
stc
out
arpl
pop
mov
in
lret
xchg
xor
add
sbb
sbb
cmpsl
mov
cld
data16
xorl
and
fbstp
fwait
ljmp
mov
push
fisttps
inc
clc
mov
std
mov
xor
or
push
xchg
das
int
cld
dec
aas
pop
add
jo
aad
mov
xor
jae
loope
mov
and
sub
push
divb
adc
das
int
mov
call
clc
cmp
cltd
sbb
or
jno
mov
mov
sub
je
xchg
inc
movsl
pop
add
mov
mov
pop
pop
push
out
rcrb
pushf
xchg
dec
ret
add
movsl
mov
lock
inc
loope
pop
outsl
pop
push
shll
outsl
clc
outsl
lods
fimull
jle
jp
jecxz
fidivrl
fcoml
and
arpl
adc
or
out
jge
dec
sub
push
rcll
lods
sbb
xchg
xchg
jp
daa
cmpsb
bound
popa
sub
cmpsl
xchg
movsl
subl
mov
adc
rcrl
ss
sbb
test
popa
mov
rol
push
repnz
or
mov
adc
jne
xor
sub
data16
or
insl
test
daa
out
add
and
ret
pop
icebp
lret
int3
in
lds
data16
popa
in
fsubl
sub
adc
ss
testl
mov
daa
aaa
sbb
jle
ljmp
mulb
jno
lods
loop
subl
sub
lahf
pop
jae
cmp
sti
mov
lea
lods
shlb
push
push
mov
cmpsl
mov
jp
cmpsb
or
lret
inc
cmpb
xchg
inc
fidivl
mov
cmc
push
ficoms
mov
mov
or
jno
fsub
lea
stos
mov
sub
add
in
cwtl
stos
pop
fdivrp
push
inc
and
sbb
inc
jge
sbb
mov
mov
sahf
or
rclb
in
cmc
cmc
faddl
xchg
xlat
int3
xor
lahf
and
fwait
divb
lahf
repz
lods
xor
push
repnz
cmc
jle
cmpl
loopne
cmp
fisubrs
inc
sub
pop
sub
push
add
dec
and
mov
xchg
ss
call
pop
jo
sbb
dec
push
mov
dec
fcoml
and
fidivl
adc
nop
inc
mov
mov
xlat
dec
ljmp
jns
ljmp
xchg
test
pop
testb
mov
test
in
inc
aaa
jae
and
or
jmp
cli
xor
pop
mov
sub
mov
fs
imul
data16
pusha
sbb
cmpsl
sbb
imul
push
mov
fnstenv
into
or
sub
lock
xchg
xor
inc
int
outsw
in
cmc
xchg
jge
cmpsl
xchg
divl
adc
jb
test
mov
mov
mov
sub
insb
popf
outsl
bound
ret
out
cli
lahf
shl
jge
pop
lcall
loopne
sahf
dec
imul
clc
lret
data16
or
xor
subl
fcoms
jnp
push
and
push
outsb
aas
inc
div
jp
sbb
dec
ja
out
xchg
xchg
std
adc
lret
push
das
jns
and
lea
mov
pop
and
jo
jns
and
xchg
sbb
subb
xchg
mov
sub
ficoms
sub
or
inc
int
adcb
lret
leave
mov
xlat
xlat
andb
sub
lock
xor
pop
xor
insl
mov
lret
out
or
inc
adc
incb
xlat
dec
addb
pop
je
sub
aad
mov
pop
pop
out
push
xchg
outsb
insl
push
cmp
or
insl
scas
mov
arpl
jle
mov
sub
jns
add
fbld
js
inc
cmp
inc
leave
shr
mov
ficoms
dec
stc
jno
aam
int
ficoms
push
mov
xchg
sahf
imul
jl
insl
fisubl
in
or
icebp
lock
jne
mov
xchg
fcoms
mov
jmp
out
mov
xchg
clc
out
loopne
xchg
pop
out
xor
add
pushf
fnstenv
test
cs
lea
xchg
inc
mov
dec
cli
xor
and
mov
push
outsb
xor
rorl
jbe
mov
test
dec
hlt
sub
push
cltd
push
lret
and
icebp
xor
test
lret
outsl
pop
pusha
lret
pop
int
mov
fstl
lods
stos
sbb
inc
pop
les
fwait
xchg
lea
xor
addr16
in
in
and
sub
mov
xchg
mov
xlat
mov
push
int3
mov
push
dec
dec
push
lods
or
outsb
jae
cld
mov
dec
cwtl
push
adc
aas
mov
inc
shrb
push
adc
mov
mov
aaa
std
addr16
mov
pusha
add
mov
aad
in
test
xor
mov
and
shlb
and
jno
rorb
sbb
pop
popa
testl
ficomps
hlt
mov
inc
mov
xor
jns
xchg
movlps
jg
sbb
and
test
iret
pushf
fucomip
loope
stos
leave
popf
sub
rcll
inc
out
daa
adc
push
enter
push
cmpsb
lods
imul
negl
and
aam
push
sub
fstp
mov
lret
mov
cmovp
xchg
in
jo
pop
dec
into
inc
jg
nop
das
push
stc
jns
jg
or
mov
mov
stos
sub
les
addr16
mov
cmc
daa
pop
clc
push
adc
mov
rorl
movsl
iret
and
adcb
lods
outsl
dec
sub
leave
int
push
pop
test
sbbl
xchg
mov
mov
add
mov
jg
lock
fldt
mov
popf
ja
dec
int
iret
popf
inc
das
loopne
cwtl
rcrl
push
icebp
sti
sub
pop
mov
aas
ds
aam
sub
movsl
stc
xor
out
mov
test
std
sbb
outsl
fidivrs
ss
add
sbb
cmc
ret
jg
jo
loop
and
insb
adc
lds
jbe
test
mov
jbe
pop
inc
xlat
stc
mov
push
mov
mov
lods
pushf
rol
dec
test
sbb
xchg
std
fwait
xchg
cwtl
mov
and
frstor
repz
mov
fsubrl
dec
jns
jae
push
pop
inc
cmp
test
cmp
popa
cld
or
inc
sbb
sbb
stos
loope
pop
mov
sbb
jne
in
sub
imul
lods
dec
cld
push
dec
dec
test
je
mov
sbb
sbb
jp
imul
push
dec
bound
dec
jmp
insl
mov
aaa
xchg
jmp
testl
dec
lods
push
flds
pop
jmp
lcall
jb
mov
dec
mov
and
or
shrb
ret
cmpl
inc
cmp
aad
cmp
dec
shlb
sbb
xor
xchg
xor
push
arpl
sub
cmp
sub
sti
in
decb
lods
enter
bound
lret
push
in
insb
das
loope
mov
sub
or
xchg
mov
and
imul
inc
mov
xchg
int3
mov
mov
inc
stc
mov
and
jl
lret
stos
pop
and
cmp
movsb
adc
mov
cmp
xchg
xchg
inc
pop
push
pusha
xchg
mov
xchg
je
mov
shll
shrb
push
call
pop
pop
aad
rcrb
in
mov
imulb
arpl
repnz
repz
adc
mov
aas
enter
ud2
mov
inc
into
stc
int3
push
sub
and
clc
idivl
stos
jle
jg
lods
int3
dec
mov
fwait
ja
fistpl
movsb
add
push
jbe
cmp
into
xchg
add
xor
sbb
shll
sub
in
sti
rorl
in
jecxz
mulb
jae
pop
mov
test
pushf
pop
mov
xchg
outsb
pop
lret
xor
dec
pop
inc
mov
push
cmp
add
pop
jb
mov
push
mov
xorl
call
cld
xchg
jp
push
shrb
addr16
aas
fucom
std
test
adc
fstpl
hlt
and
sub
jne
lock
jb
cltd
mov
mov
lret
fsubrs
xchg
or
in
scas
xor
push
stc
jle
lock
jmp
test
test
call
cmp
mov
repz
mov
inc
lcall
inc
sub
adc
jns
sub
andl
pusha
xchg
filds
lods
movsb
xor
adcl
pop
mov
test
and
out
stos
enter
cmpsl
inc
cld
daa
jmp
pop
nop
ds
and
lcall
inc
test
daa
mov
es
pop
mov
inc
add
in
pusha
adc
jmp
andl
je
mov
enter
in
fnstcw
inc
jp
cs
dec
repz
xlat
stos
icebp
addb
fucom
push
imul
mov
and
or
or
outsl
and
cmp
mov
sub
jle
adc
inc
cmpsl
out
lods
xchg
mov
movsb
push
mov
mov
jns
push
repz
and
in
lahf
and
jle
mov
or
lods
sub
or
or
add
sub
add
inc
lods
push
sub
push
mov
xchg
arpl
repz
sub
das
mov
pop
push
int3
xchg
cmp
push
push
and
inc
stc
and
jmp
lret
or
push
loop
mov
lock
call
sub
mov
scas
adc
push
sub
xor
jg
jl
xor
call
mov
adc
cmp
jp
in
add
insw
and
insb
push
jmp
jge
lods
add
ret
push
push
testl
mov
hlt
lret
adcl
insb
fs
push
and
add
insb
sub
and
nop
jecxz
mov
sub
pop
aaa
add
stc
push
ror
pusha
mov
xchg
xor
out
ror
inc
jno
nop
cld
push
cmp
push
dec
mov
gs
mov
frstor
mov
jg
scas
or
lock
jl
add
xchg
xchg
push
das
dec
popf
outsb
fimull
inc
lock
mov
sub
xchg
xor
add
scas
cmp
add
mov
cmp
enter
mov
jb
pop
xchg
out
dec
mov
out
pop
inc
mov
xchg
hlt
cmp
pop
daa
and
outsl
add
pop
adc
mov
sarb
jmp
inc
mov
daa
push
shll
or
pushf
xchg
push
rcll
push
jb
sub
imull
imulb
xor
dec
cmp
mov
sub
and
mov
out
js
sub
hlt
or
imul
mov
lea
scas
orl
out
mov
aam
or
mov
popf
sub
push
cltd
sbb
cmp
lock
adc
decl
repnz
inc
sarl
jno
sub
lock
mov
sbb
adc
add
xchg
nop
in
addr16
ds
pop
and
pop
decl
orb
xor
jns
mov
push
jns
mov
pop
pop
lcall
shl
ss
xor
adc
and
orl
std
pcmpgtd
fs
cli
and
clc
jl
scas
fadds
sub
jl
push
and
in
add
dec
shlb
xor
sbb
push
dec
mov
or
mov
mov
xchg
dec
shlb
cwtl
and
rcr
cmp
data16
push
xor
insb
sub
xor
push
icebp
lock
test
addb
mov
and
xor
pop
jmp
sti
in
out
dec
insb
aad
in
in
mov
daa
mov
push
cli
inc
lods
or
rorb
aad
cltd
out
hlt
cld
fildll
push
test
fistl
loopne
xchg
push
popf
mov
mov
in
stos
jle
dec
mov
out
shll
ds
ja
xor
ss
or
into
xchg
sub
inc
pop
push
cld
out
push
in
xchg
xor
lea
es
adcl
ja
cmpb
xchg
mov
and
pop
icebp
add
inc
test
repz
cmpsl
cli
push
lods
aas
jecxz
aas
or
mov
in
les
sti
sbb
push
push
pushf
mov
mov
icebp
sbb
dec
stos
cmp
jb
les
dec
and
sahf
mov
sub
pop
sahf
mov
xchg
cmp
das
push
cmp
sti
jmp
push
outsl
popf
lret
fmulp
or
daa
and
in
fwait
pop
lcall
mov
std
cs
cmpsl
push
sbb
cli
jnp
lret
dec
xchg
dec
ds
sbb
movsb
popf
sbbb
and
xchg
adc
bound
outsb
scas
rcr
movsl
enter
dec
mov
xlat
fwait
sub
mov
dec
aad
iret
mov
lahf
sub
push
pop
fdivl
or
jle
std
in
pusha
loop
push
mov
push
xor
fbld
mov
sub
test
inc
cmp
jns
push
or
in
mov
jne
lods
mov
icebp
sbb
icebp
push
out
fidivl
pop
je
movsb
sub
loope
add
lcall
pop
movsl
aas
arpl
add
lret
xchg
mov
or
jnp
mov
dec
imul
lret
add
int
pop
xchg
fidivrl
xorb
iret
sbb
and
iret
jne
adc
shrb
xor
ss
das
xor
mov
cltd
hlt
push
leave
xor
divb
pop
cmp
pop
test
dec
sbb
outsb
test
ror
dec
in
mov
lret
inc
sbb
cld
ss
pop
mov
xchg
sbb
lods
dec
loopne
dec
cs
test
push
out
inc
gs
xchg
addr16
adc
mov
setae
sti
imul
test
inc
pusha
sahf
xor
mov
loop
mov
xor
popa
mov
xchg
sbb
ret
mov
fldcw
jno
push
ljmp
push
fmuls
or
push
xchg
jb
movsb
add
lret
fcoms
xlat
cld
jnp
jb
jmp
jle
jo
daa
mov
add
stc
test
out
decl
sbb
stc
xor
jbe
inc
clc
loop,pt
mov
sub
adc
add
push
lods
mov
sbb
fisttps
iret
cmp
push
sub
adc
jnp
loope
jbe
cwtl
pop
je
dec
jne
jo
mov
or
lods
push
clc
jbe
and
daa
sti
jle
mov
xor
mov
aam
add
mov
push
sub
pop
stc
bound
dec
or
sub
dec
repz
jo
xchg
jp
push
push
sub
inc
and
popa
call
idivl
stos
movsb
jnp
fucomp
jns
fimull
mov
outsb
lret
imul
hlt
xor
in
push
xchg
in
iret
out
out
mov
jle
in
add
and
leave
hlt
mov
fstp
mov
insl
movsl
test
mov
out
in
sbb
mov
outsb
cld
gs
aaa
mov
fnstsw
cmp
repz
mov
das
xchg
jbe
jnp
jge
push
mov
inc
mov
sbb
js
xchg
xchg
xchg
adc
jb
push
andl
sbb
inc
add
fldcw
mov
fcoml
cwtl
mov
mov
push
or
sahf
mov
push
loopne
lods
sti
lods
lea
adc
or
cmpsl
leave
pop
adc
xchg
cmp
test
mov
or
adc
fisttpll
leave
out
mov
sbb
pop
sbb
push
mov
cmp
idivb
jno
inc
sub
aas
emms
rorb
mov
sub
pop
inc
jns
xchg
sub
lahf
in
cli
cs
mov
mov
jb
test
mov
jmp
in
xchg
mov
add
pop
scas
jp
dec
in
or
loop
xchg
dec
push
push
iret
faddl
aam
imul
adc
loope
jp
cmp
lcall
or
push
mov
in
shlb
mov
ds
mov
mov
loope
mov
or
std
xchg
and
out
sub
sub
jns
ret
pop
mov
xchg
adc
shlb
mov
iret
test
popa
loop
push
imul
fisubrs
enter
ljmp
fcoms
push
lret
iret
inc
and
xor
xorl
and
repz
mov
sub
jl
xlat
aad
mov
xchg
dec
cmpsl
jmp
mov
or
mov
push
aas
loope
adc
xchg
push
push
dec
jb
lods
lea
insb
int3
sti
out
adc
push
clc
pop
dec
addr16
cli
pop
jne
loop
cmp
sahf
push
fistps
imul
lea
push
lahf
add
je
pop
mov
fidivrl
or
jl
xor
scas
inc
jge
mov
inc
jns
jge
xorb
add
aaa
test
sub
push
call
jecxz
dec
dec
sbb
stc
fwait
pop
loop
icebp
loope
dec
out
sbb
rcll
lret
cmp
jp
lahf
addr16
xor
pop
in
sub
rcrl
sub
jbe
cmp
cmp
ret
loop
push
add
adc
test
fstpl
fisubrl
xchg
out
imul
mov
sbb
shl
sub
mov
dec
xor
mov
cld
nop
lcall
dec
clc
mov
addl
push
rorl
mov
add
in
loop
sbb
mov
aam
scas
out
xor
out
in
int
das
scas
jnp
sub
enter
add
popf
xchg
enter
push
xchg
repz
ja
mov
sub
or
add
adc
jmp
cmp
mov
std
adc
pop
popf
cmp
push
dec
in
imul
scas
cli
popa
cmp
mov
jno
lods
sti
mov
jg
jge
ret
mov
sub
lds
sahf
out
mov
stos
xlat
jle
hlt
xchg
aaa
push
ss
int
jle
push
xorb
loope
push
je
rcll
and
in
mov
loope
mov
sbb
ss
lds
cli
js
or
inc
lret
mov
test
rcll
jmp
or
jl
pushf
aaa
ret
xor
fisubl
arpl
mov
pop
lahf
inc
sub
sti
fisttpll
cmpsl
or
xchg
xor
cltd
cmp
rclb
dec
loopne
sti
xor
dec
std
js
add
sarb
mov
mov
mov
fdivrs
xchg
inc
jp
fwait
out
divb
ljmp
or
out
inc
mov
mov
xchg
cmp
test
test
dec
add
xor
lods
stc
push
mov
add
jmp
out
test
sub
cmc
mov
pop
daa
or
scas
movsl
dec
faddp
push
sub
or
fsqrt
pmaxsw
and
out
sub
lret
out
jl
stos
push
int3
sub
dec
push
or
pop
aas
test
jo
jns
lcall
mov
push
pushf
jle
in
sbb
data16
insl
in
xor
mov
inc
dec
mov
mov
push
mov
cli
pushf
cltd
fstpl
mov
inc
add
into
into
inc
sbb
inc
movsb
mov
xor
cmpsl
add
aas
call
sbb
xor
divb
lds
dec
add
cmp
sahf
insl
sbb
add
jns
rcrl
and
adc
mov
mov
pop
push
stos
inc
jne
imul
ret
add
inc
push
mov
mov
stos
test
adc
sub
xchg
popa
push
sub
push
fistpl
mov
jle
mov
cmp
pop
mov
popa
jp
imul
out
out
dec
dec
mov
addr16
int
popa
sub
rcll
in
or
out
cld
movsl
push
sahf
stos
jo
lret
jle
into
fsubrs
inc
test
push
lcall
shl
ja
or
ud0
arpl
jb
or
sbb
jne
fmul
jo
mov
inc
pop
mov
and
rep
das
psraw
cmp
flds
or
aad
and
sub
mov
repz
push
insl
adc
jge
push
fcomps
or
cmp
jl
push
ficompl
dec
cmp
cmp
inc
int
sub
orl
mov
call
or
add
add
subb
inc
jp
cmp
shll
xchg
call
adcb
and
jmp
xlat
lods
sbb
in
dec
andb
les
xor
inc
icebp
ret
pop
add
push
jne
inc
xor
out
push
xor
fs
xor
mov
in
jecxz
push
pop
sbb
and
push
aam
xchg
or
nop
push
and
fldt
or
lret
sbb
adc
aas
mov
mov
outsb
pop
inc
mov
cmp
arpl
loop
adc
data16
out
inc
jmp
xor
loopne
sbb
or
daa
ret
xor
mov
hlt
mov
subb
mov
lods
dec
sub
iret
das
pusha
gs
cmpsl
sub
cmp
jnp
ja
adc
add
cmp
or
xchg
scas
in
inc
ss
inc
jle
dec
movsl
ljmp
popf
mov
jge
std
loop
adc
ror
testl
xchg
aas
add
mov
xchg
push
out
stos
gs
inc
mov
push
xorl
sbb
pusha
jae
inc
push
je
jne
je
push
ret
in
add
pusha
adc
jnp
inc
jae
jl
xchg
cmpsb
hlt
xor
xchg
les
lea
inc
add
in
ret
xor
or
je
insl
or
jne
mov
or
and
xchg
sbb
mov
pusha
push
push
jle
adc
loopne
loope
sub
pushf
inc
loope
das
inc
fbstp
dec
out
arpl
out
mov
xchg
jno
outsl
inc
test
xchg
imul
sahf
adcl
mov
sub
pop
insl
aad
jo
jg
dec
mov
push
mov
and
mov
lcall
popf
or
popf
cmpsl
imul
mov
mov
or
pop
push
sbb
in
xchg
int
dec
jbe
jmp
xchg
imul
repnz
xchg
jl
pop
std
test
pusha
inc
jb
in
sbb
xor
clc
lock
jns
loope
test
push
cld
cld
mov
mov
dec
mov
mov
sbb
jnp
cwtl
add
in
int
fbstp
lods
push
adc
in
push
jb
push
mov
ljmp
out
leave
nop
lea
xorl
aaa
pop
int3
pop
adcb
aam
pop
repz
inc
lret
scas
and
and
pop
xchg
or
rcrb
and
push
push
inc
sub
sub
sub
test
adc
insl
add
xchg
dec
mov
mov
sbb
inc
shll
mov
sti
in
negl
mov
addl
push
cmp
add
jae
cmp
test
inc
push
cs
and
out
push
sbb
insl
out
outsl
mov
adc
jl
clc
xchg
push
mov
dec
movsb
in
es
divb
xchg
cmp
fstpt
dec
fwait
mov
lods
mov
int
lret
in
mov
lret
fidivrl
and
stos
dec
and
iret
cli
cmovs
adc
and
push
push
out
movsb
loop
inc
ss
incb
inc
fildll
cmp
nop
std
xor
enter
pop
fcmove
repnz
add
movsb
jl
mov
scas
in
std
xchg
pop
aad
pop
mov
dec
fcmovnu
push
or
ss
hlt
push
mov
daa
in
mov
rclb
inc
test
ret
inc
fsubl
xchg
xchg
aam
insb
leave
cltd
add
fildll
cmp
fistl
xchg
mov
xchg
out
sbb
movsl
sub
fst
outsb
adc
jae
int
fsubs
cmpsb
bound
and
shr
jns
or
imul
jp
dec
prefetchwt1
sub
shrl
xchg
sub
test
mov
decb
mov
mov
clc
xorb
stc
stc
cmp
int
mov
mov
mov
push
or
aad
cmp
inc
and
adc
ss
xlat
pop
xor
repnz
imul
mov
xchg
inc
pop
xor
scas
inc
sub
jns
adc
es
jbe
mov
cli
inc
ss
and
or
mov
inc
mov
and
or
loop
sub
push
push
repnz
adc
in
inc
pop
mov
popw
cld
or
ljmp
jnp
pop
sub
roll
pop
cmpl
add
adc
adc
std
push
arpl
push
pop
fsubr
pop
jl
in
nop
xchg
push
ja
mov
stos
pop
inc
cmpsl
bound
icebp
cs
aaa
cmp
aad
fimuls
or
out
xchg
xchg
fs
dec
pop
or
and
mov
sub
mull
cwtl
adc
push
pusha
jg
push
jns
in
test
fisubl
xlat
xor
xor
jecxz
adc
sbb
fmull
call
arpl
push
pop
je
out
or
aad
push
imul
push
inc
test
int3
add
mov
lea
xor
dec
outsb
incl
call
and
sbb
idivl
aad
dec
xlat
and
ja
into
out
inc
mov
adc
adc
jne
cli
cmp
mov
ja
ret
imul
cmp
fstpl
and
dec
xor
inc
mov
out
xor
jnp
push
out
test
adc
xor
sub
mov
mov
stc
jmp
in
lock
pop
frstor
jp
loopne
mov
xorl
ss
pop
dec
clc
xchg
pusha
sahf
rclb
nop
inc
movsb
mov
lret
dec
and
cmc
out
insl
jns
dec
mov
and
notb
lea
mov
cmpsb
dec
in
out
leave
push
dec
pop
cmp
adc
add
jns
lret
fcom
fisubrl
fstps
mov
push
repz
out
cmpsb
xchg
icebp
xchg
jmp
dec
xor
test
jno
cld
xor
fstpt
pop
mov
frstor
lods
jp
js
push
inc
push
stc
sub
clc
ja
adc
nop
mov
decb
call
lcall
push
into
push
pop
mov
test
mov
jp
or
pop
jp
movsl
movsb
jg
mov
xor
xchg
mov
push
cmp
sub
rcl
push
aaa
stos
lret
add
or
orl
dec
sub
int
pusha
sbb
sahf
mov
mov
pushf
call
or
std
push
xchg
jecxz
cmp
imul
subl
sbb
cmp
mov
add
jne
add
push
or
xor
test
fbld
insb
jmp
and
test
inc
ret
fisubrl
movsl
sbb
sub
stos
pop
repnz
orb
cltd
imul
adc
mov
sbb
xor
aaa
ja
outsl
mov
sub
outsb
test
inc
hlt
cmpsb
negl
mov
fnstsw
mov
mov
mov
push
push
mov
stos
xchg
lods
ss
arpl
xor
fsubr
adc
call
shlb
fcmovb
xchg
mov
and
cmp
cld
out
stos
rorl
push
mov
pop
add
mov
inc
jmp
lods
movsl
xchg
cltd
test
nop
sti
les
inc
add
and
or
out
fs
mov
mov
sti
dec
jmp
jmp
mov
add
mov
mov
jp
mov
inc
js
sub
test
fdivrl
push
jecxz
mov
push
syscall
mov
xor
inc
xchg
scas
inc
push
loop
xchg
mov
loope
loop
push
es
push
sub
xchg
mov
push
xlat
rcrb
mov
icebp
test
mov
cltd
cmp
xchg
test
cmp
jo
mov
jo
sahf
les
adc
mov
dec
dec
jmp
push
lock
adc
notb
mov
cmp
fisttpll
fdivp
rolb
or
test
inc
adc
mov
imulb
adc
insb
or
jbe
aam
mov
push
cmpb
dec
inc
cmp
in
lods
in
add
mov
in
jp
adc
push
adc
mov
adc
and
sbb
sub
or
or
cld
shrl
xchg
movsl
mov
jp
inc
mov
jecxz
cmp
fucomp
xor
repz
shl
divl
lret
in
push
mov
mov
bound
add
sbb
mov
add
fcomps
les
addb
and
loope
shrl
pop
ss
in
loope
xor
test
cwtl
je
aam
popa
sbb
adc
sbb
sub
popa
mov
out
xchg
mov
rorb
or
fbstp
std
fs
cmp
lret
push
testb
jle
xchg
inc
push
and
and
mov
push
in
pop
subl
sbb
imulb
rorb
insb
subl
lret
arpl
std
popa
dec
xchg
shll
push
mov
adc
and
push
jl
fwait
adc
jmp
xor
data16
shrl
inc
mov
dec
aam
pop
mov
sub
mov
iret
ret
lcall
mov
cmp
sarb
insb
ja
push
std
lahf
add
ss
push
rsm
das
push
aad
std
loope
cmp
loop
push
gs
repnz
lret
xchg
paddsw
lret
pop
inc
jns
test
fwait
sbb
inc
js
sbb
xor
and
js
cld
sub
movsl
fs
pusha
mov
add
call
dec
lods
xchg
xchg
jnp
or
or
inc
stc
or
sarb
pusha
mov
sti
pop
faddl
mov
xchg
add
adc
sbb
or
mov
adc
popa
cmp
ljmp
dec
stos
loopne
aaa
cmp
push
xchg
pop
mov
pop
int3
sahf
push
das
out
out
std
ss
les
mov
nop
in
cmp
fcomps
int3
push
popa
xlat
shl
adc
xchg
mov
clc
mov
loopne
jno
movsl
adc
popf
lea
enter
push
or
adc
clc
inc
or
mov
in
dec
mov
dec
mov
fs
in
mov
mov
insb
adc
jecxz
jbe
fildll
rcl
inc
rcrl
rcrl
add
jne
fdivr
adc
dec
xchg
jbe
in
sbb
rclb
repz
lock
mov
dec
add
or
cld
push
es
mov
xor
jecxz
jae
lret
test
push
dec
je
cmp
mov
inc
adc
cmpsl
fiaddl
mov
sub
fwait
add
vmovntps
sahf
adc
iret
mov
xor
mov
jmp
out
pusha
testl
out
outsl
and
and
aaa
rcrl
rcrl
inc
jl
or
cwtl
push
and
cs
lock
xlat
fnstcw
inc
or
mov
xor
or
push
sbb
clc
hlt
pop
adc
inc
add
pop
xchg
sub
fimull
xor
cmp
lret
push
xchg
jbe
stc
xorl
out
push
or
addr16
pushf
pop
hlt
jo
sub
js
repz
xor
mov
and
adc
push
lcall
mov
sub
jecxz
ljmp
outsb
jae
gs
and
lds
addr16
jns
pop
adc
push
ret
addr16
scas
mov
icebp
subb
push
fisubs
bound
lret
jne
pop
xor
and
call
mov
mov
arpl
adc
je
jle
pop
ss
test
inc
push
ret
inc
adc
dec
insl
enter
ret
fst
imul
xor
notl
shlb
pop
movsl
dec
jbe
ja
mov
cmpsl
inc
inc
xor
data16
sub
xor
push
jmp
sub
and
cs
lock
sub
cmp
mov
dec
das
adc
mov
fistpl
pop
mov
and
push
xor
out
jecxz
cltd
xchg
mov
cmp
cmp
pop
mov
push
lods
leave
mov
ret
mov
popf
jp
data16
cmp
mov
mov
outsl
sub
ja
jne
cmc
mov
ret
mov
xchg
lret
pusha
test
push
adc
fdivl
add
pop
rcll
fiadds
ss
push
out
std
jg
bound
jb
pop
test
cmp
pop
sub
push
out
lods
inc
aaa
jno
daa
jno
pusha
and
pop
loop
aam
dec
incl
ljmp
cmp
inc
nop
lea
sahf
inc
push
jbe
and
cltd
repz
int3
lret
and
inc
adc
dec
mov
mov
inc
leave
jecxz
mov
add
leave
inc
ficomps
outsb
and
xlat
inc
popa
pop
stc
push
repnz
lods
loopne
in
es
aam
insb
loop
jge
xor
dec
ss
pop
push
adc
test
mov
sbb
xchg
movsb
sti
dec
or
jg
xor
cs
mov
out
add
cmp
add
loop
inc
shl
cltd
and
and
lcall
test
aad
addr16
sub
js
int3
cs
shll
into
fs
pop
inc
imulb
jmp
pushf
into
or
fadd
push
sbbl
push
add
jge
cmp
mov
mov
xchg
lods
and
push
jle
stos
pusha
cmp
sbb
or
insl
outsb
cltd
mov
cli
mov
fwait
add
jmp
jns
jo
mov
aas
cld
jge
into
mov
mov
icebp
fadds
sbb
cltd
das
mov
les
pop
lahf
sub
xchg
aad
cld
push
xor
adc
adc
lret
dec
dec
dec
add
push
or
in
out
jnp
in
std
or
jnp
ss
cmp
loop
decl
jno
xor
xchg
enter
push
push
aaa
test
or
ja
insb
rorb
in
jecxz
notl
sbb
inc
adc
test
xchg
cli
mov
loopne
or
dec
aaa
inc
popa
out
sbb
out
mov
fwait
mov
sbb
cmpsl
in
aaa
pop
mov
ret
mov
xor
pop
xor
mov
jge
push
rorl
pop
test
cmp
xchg
push
pop
cwtl
ret
cmp
or
or
cs
fists
imul
sub
xchg
imull
jbe
mov
es
mov
sahf
sbb
pop
inc
mov
xlat
js
push
or
add
sbb
mov
mov
adc
and
mov
into
in
cli
sub
mov
ret
cli
dec
pusha
stos
dec
xchg
dec
mov
pop
fistpll
mov
sarl
mov
fistl
sbb
imul
pop
je
dec
mov
mov
pop
call
or
icebp
pop
push
and
lods
enter
mov
aaa
mov
mov
push
test
sbb
xchg
mov
shl
lret
xchg
sysexit
sahf
add
lret
sub
mov
cmp
or
div
enter
fisttps
aaa
fidivl
jl
adc
dec
cmp
mov
xchg
mov
outsl
sbb
test
aaa
notb
cwtl
pop
mov
je
cwtl
aad
fnstenv
outsl
pop
add
aam
add
iret
push
fdivs
push
ljmp
xorb
psrlw
aaa
adc
mov
in
jae
in
push
test
sti
stos
mov
jnp
jecxz
adc
inc
jge
test
scas
xor
cmpsb
add
jne
in
sub
leave
add
pushf
enter
mov
add
xlat
cmp
push
pop
cmp
into
in
pop
ds
dec
push
fbstp
in
inc
fdivl
repz
je
out
fstpt
int
mov
pop
xor
testl
jae
arpl
and
or
aam
rorb
lret
dec
ror
and
sub
loope
shl
cmp
aam
in
sbb
xchg
jp
sbb
sub
cmp
or
loope
mov
jmp
push
call
mov
pop
mov
push
xchg
push
mov
push
mov
xchg
insb
mov
fld
pop
test
orb
inc
notl
shll
push
inc
pop
loope
xchg
lea
insb
dec
xor
andb
jo
cmp
adc
sub
pop
push
pop
pusha
rorl
xor
mov
stos
push
jle
cld
out
shll
jecxz
pop
stc
mov
sub
pop
pop
out
pop
xchg
push
push
and
call
jnp
xlat
or
mov
inc
push
movsb
repnz
pop
jg
fiadds
xchg
aas
jl
xor
call
dec
das
andl
pop
pusha
fdivl
pushl
mov
mov
pop
lock
dec
int
mov
mov
inc
out
out
xlat
jbe
test
mov
into
cltd
adc
push
repnz
push
mov
dec
lock
aam
ljmp
jp
leave
call
scas
rcll
adc
sbb
stos
inc
scas
mov
xor
lea
enter
or
pushf
fdivr
jge
popf
mov
cmpsl
std
icebp
jae
in
es
xor
mov
es
inc
aam
dec
push
sbb
cmp
push
mov
rorb
popf
pop
scas
jecxz
xchg
jb
dec
lods
jmp
push
inc
cmpsb
xor
adc
cli
cmpsl
iret
bound
mov
mov
push
je
gs
adc
push
stc
adc
and
stc
in
insl
in
cmc
iret
sbb
mov
sahf
mov
jmp
imul
inc
inc
outsl
psrlq
adc
insl
xchg
cld
sbb
lret
dec
insl
jmp
in
insb
call
adc
add
push
shll
test
mov
dec
movsl
and
int
fadds
popf
sbb
clc
aam
cmpsb
and
rorl
popf
rcll
dec
sbb
aam
cmpl
shl
fldt
or
es
addr16
cld
scas
mov
mov
xchg
inc
mulb
jbe
adc
std
aad
incl
jne
in
bound
mov
or
sub
sti
mov
and
out
push
mov
int
cmpsl
dec
push
adc
add
std
mov
sarb
aam
into
adc
test
scas
add
push
pop
int
cltd
mov
lret
cmp
enter
cmpsl
dec
sti
in
add
fistps
test
lods
lods
clc
jo
fwait
or
cmpb
je
jae
and
dec
hlt
jbe
mov
out
fisttpll
cmpsb
out
test
or
or
sarb
jns
xor
xor
adc
inc
in
stos
cmp
icebp
fsts
incb
movl
bound
jns
xchg
loope,pt
ljmp
sbb
xchg
jl
loope
into
jbe
push
aas
daa
or
fnstenv
and
in
mov
jno
stos
mov
bound
push
cli
jge
cmpsl
adc
movq
cmp
paddb
lock
loopne
xchg
pushf
test
jne
xor
in
shrl
lret
pop
hlt
mov
pop
xor
pop
xor
fists
pop
cmp
cmp
sbb
push
fisubrl
xor
pop
in
out
add
jecxz
clc
data16
xchg
cmp
dec
sbb
lods
pop
xor
repz
xchg
jcxz
in
in
push
mov
rcr
push
push
out
xchg
lea
sarb
push
push
sub
hlt
cmpsb
and
jnp
xchg
scas
mov
jp
inc
or
jns
and
mov
sbb
sub
int
icebp
inc
stos
jno
mov
aaa
adc
into
and
pop
loopne
or
shlb
pop
movb
in
insb
cmp
test
and
mov
cmc
je
nop
insl
lret
xchg
inc
jmp
xchg
jmp
in
inc
imul
jmp
aam
dec
mov
xchg
js
mov
mov
pop
popf
jg
aaa
cld
aas
arpl
lods
data16
fstp
stos
dec
cmp
ret
into
mov
lods
jmp
pop
sbb
or
gs
jne
sbb
jns
pushl
fnsave
mov
ds
sub
add
pop
inc
sahf
jecxz
mov
jbe
pop
xchg
xchg
cmp
test
mov
sub
subl
and
sbb
and
mov
int
sahf
push
aam
sbb
jb
sub
scas
cmp
dec
or
xor
fistpl
jg
pop
les
test
xor
cmp
sub
shll
cmp
dec
push
addr16
cwtl
ljmp
inc
inc
pushf
pop
lds
pushf
add
js
mov
pop
pushf
cmp
xchg
sbb
or
mov
jg
popa
and
push
or
fnstsw
pusha
sub
xor
enter
xorl
lcall
mov
pop
inc
test
push
neg
lret
test
sbb
inc
push
lahf
mov
sahf
jp
stos
add
mov
popa
gs
fs
cli
sbb
pushf
jne
push
out
jbe
ja
lds
aam
inc
jnp
arpl
push
pop
das
xchg
add
xchg
mov
sub
lds
sbb
cmp
out
adc
dec
jp
loopne
or
xchg
mov
sub
arpl
fwait
icebp
rcll
fcoms
cwtl
scas
lret
popf
andl
std
mov
push
xchg
mov
push
outsb
repz
and
mov
inc
xchg
add
negw
das
inc
imul
dec
mov
fldenv
pop
outsl
in
mov
sbbb
inc
push
mov
sarb
lods
sub
mov
or
mov
sbb
mov
daa
test
mov
jle
xchg
xchg
cvtps2pd
ss
pop
repz
bound
adc
repnz
mov
sbb
push
push
je
mov
cmpsb
outsb
xchg
push
lock
into
mov
test
int
xor
pop
int
lahf
pop
test
loop
test
icebp
push
adc
cs
add
mov
ficompl
lods
inc
shr
dec
or
lods
enter
scas
fsts
and
cmp
xor
pop
ds
xchg
lds
test
or
cmp
dec
jo
pop
lods
and
adc
xor
adc
das
pop
inc
lahf
push
xchg
stos
adc
adc
fcmovbe
jae
lods
mov
aam
adc
or
ret
cmpsb
lods
paddb
pushf
std
inc
sbb
and
sbb
scas
mov
lcall
movsb
inc
scas
adc
stos
mov
leave
icebp
outsb
push
test
push
aam
lods
stos
or
cmc
xchg
xchg
mov
popf
and
dec
addr16
ja
dec
insb
ljmp
fisubs
rclb
fildl
mov
ljmp
inc
mov
or
mov
mov
es
adc
fmull
clc
push
adc
pushf
fadd
dec
es
add
into
sti
sahf
inc
es
in
hlt
mov
xchg
pop
scas
icebp
popf
mov
push
xlat
cmc
je
insl
mov
lea
inc
repz
and
xchg
fnsave
aas
or
adc
dec
sub
repz
jne
mov
iret
roll
add
je
dec
adc
cmpb
push
pop
popf
fnsave
jl
pop
test
cmpsb
push
and
or
shr
sub
inc
clc
adc
push
push
daa
cmp
cmp
or
mov
pop
push
and
jp
psrlq
push
xor
pop
adc
xchg
add
mov
push
cmpsb
rcrl
clc
shll
dec
xor
cmp
add
call
fdivrl
xor
xchg
movsl
or
ja
gs
in
outsb
xor
ror
subb
iret
jae
dec
pop
xlat
sbb
mov
mov
sbb
xor
clc
out
inc
pop
push
cmpsl
or
push
ds
add
ja
je
sbb
in
popa
and
push
mov
lahf
ret
fstps
ljmp
jge
push
stos
pop
push
ds
stos
cmp
jg
xchg
fwait
arpl
xor
cli
sub
pusha
fs
jnp
es
adc
in
push
shll
outsb
push
daa
mov
call
out
fwait
push
xchg
mov
es
push
push
or
aad
xor
and
sub
add
repnz
test
cltd
xchg
cwtl
mov
aam
mov
mov
jg
aaa
fidivs
xor
cli
call
add
hlt
lret
negb
pop
mov
rorl
mov
int3
ror
cmp
mov
inc
pusha
mov
in
ljmp
lods
aam
lods
in
lret
in
fistps
call
cld
mov
imul
fldcw
sbb
imul
mov
mov
int3
jmp
bound
xchg
scas
out
adc
xchg
push
jnp
cmp
push
jns
xchg
rorb
data16
jo
fcmovnbe
or
bound
int
orl
out
push
cwtl
mov
shll
es
inc
jmp
add
adc
adc
arpl
and
xchg
xchg
scas
sub
push
enter
adc
je
and
pop
mov
popf
addb
push
fucomi
jb
rorl
test
filds
int
into
mov
int
sub
sub
sbb
cmp
cmc
add
cli
mov
sbb
adc
popa
popa
int3
and
movsb
push
adc
mov
xor
push
mov
add
cmpsl
js
or
dec
cmpsb
mov
xor
fisttps
dec
add
mov
jp
lret
add
jecxz
mov
xor
in
xor
fucomp
ljmp
loope
in
pop
cmpsb
adc
or
aaa
movsb
adc
sub
xor
add
jb
mov
pushf
inc
enter
and
cltd
adc
xchg
inc
stos
lret
bound
xchg
push
repnz
test
add
roll
inc
mov
outsl
bound
loop
jp
cli
clc
popf
jb
inc
cmp
pop
pop
dec
test
jbe
add
in
fistps
pushf
xor
mov
ja
push
fstpt
jg
stos
out
fsubp
call
xchg
inc
fldcw
popa
and
pop
out
pop
push
sahf
fbld
push
and
fs
loop
xchg
cs
cmp
lret
cs
sbb
rorb
mov
mov
mov
pop
std
fdivp
fistpl
hlt
sbbb
jl
enter
popf
pop
in
inc
jb
sub
cmp
das
lods
mov
mov
fwait
sti
pop
out
lock
add
inc
cmp
xorb
mov
or
inc
icebp
or
pop
push
add
rorb
sbb
loope
cld
mov
cmp
adc
repnz
cmp
pop
ss
mov
mov
and
pop
rcl
lcall
add
adc
cmp
jae
xor
jge
das
sub
rcrb
repnz
push
popf
popa
mov
cld
fldenv
les
mov
icebp
pinsrw
enter
xor
push
sub
push
mov
sbb
fdivp
jae
xor
xor
loop
repz
pop
inc
xchg
call
pop
jns
iret
xchg
and
andl
push
pop
in
ja
inc
movsl
mov
cmp
xor
xlat
cmp
add
cmp
stos
jo
push
icebp
mov
arpl
jmp
pop
je
sub
aas
in
outsb
mov
repz
cwtl
xor
lret
gs
mov
or
in
jl
sbb
jmp
fnsave
test
dec
dec
lahf
adc
cwtl
mov
xchg
inc
cld
hlt
mov
mov
xchg
xor
jmp
into
das
lret
ss
push
ficompl
inc
jge
stos
dec
xor
sbb
push
and
xchg
mov
mov
sub
cmp
out
pop
pushf
sub
js
std
push
mov
clc
dec
fstpl
flds
shrb
pop
out
orb
cli
or
push
push
mov
and
ret
jge
jbe
mov
cld
adc
pop
lods
mov
cmp
mov
lea
cli
mov
sbb
xchg
testb
popf
lods
and
ficoms
push
xor
jmp
sbb
das
lret
stc
jmp
or
ss
lds
lods
push
pushl
idivl
cmp
mov
mov
insb
icebp
call
cld
mov
jle
or
out
lret
push
or
push
xor
lret
jmp
loopne
add
std
xchg
push
out
cmp
and
push
icebp
test
int3
fisttpl
lock
xchg
xchg
cmp
cmc
lock
js
movsl
outsl
fldcw
inc
insl
icebp
jo
pop
xchg
mov
jmp
push
addr16
mov
sbb
stos
pop
fimull
jno
in
push
mov
xor
push
out
mov
std
xchg
sub
pop
inc
mov
cmp
jae
andb
fbld
sbb
in
mov
icebp
ret
inc
ss
pop
shl
mov
jmp
push
xor
hlt
lods
loope
cmp
lods
mov
loop
fs
sbb
inc
mov
cmp
insl
push
pusha
ds
push
mov
xchg
jnp
add
sti
imul
ds
mov
stos
movsb
push
or
lret
mov
mov
loopne
adc
or
mov
dec
repz
jb
jecxz
add
jbe
leave
mov
dec
testb
mov
jbe
pop
sti
fdivrs
jo
loope
jae
push
dec
and
mov
inc
repnz
jp
in
jb
jge
or
fidivrs
sub
sub
fimull
mov
int3
dec
inc
rorb
jns
mov
inc
pop
mov
pushf
lea
xor
movsb
mov
cmp
cmp
cmp
add
sbb
sub
mov
pop
xchg
mov
pop
adc
jbe
stos
outsb
in
rclb
push
andl
loope
mov
mov
andl
mov
lods
inc
cmp
lods
imul
sub
fcoml
push
neg
and
jle
and
insl
cmp
mov
mov
xchg
insl
fdiv
or
repnz
in
cmpsb
fwait
cld
daa
adc
sti
jbe
cmp
xchg
pop
sbb
cmpsb
push
in
dec
lcall
lods
push
cld
ja
into
add
sarb
mov
jl
int3
lock
mov
inc
sbb
or
add
push
xor
lock
pusha
add
jg
push
sbb
pop
imul
jl
push
bound
jb
cmp
stc
mov
or
pop
mov
js
jl
mov
fnstcw
pop
xor
not
jg
dec
orl
mov
or
jmp
es
jnp
inc
add
add
mov
jne
jbe
fldcw
push
adc
sbb
pop
out
and
xchg
push
scas
mov
xor
push
cwtl
aam
out
insb
xor
and
add
sbb
mov
pusha
dec
fdivs
jb
fistpll
lcall
insb
mov
lret
xchg
cmp
sbb
mov
add
clc
mov
mov
mov
and
lcall
and
or
rcr
bound
mov
xchg
xchg
iret
aaa
out
icebp
movb
push
sub
cmp
mov
out
cmovbe
lret
dec
ds
addr16
mov
das
int3
test
jb
or
ret
std
mov
mov
scas
dec
sbb
popa
out
out
std
inc
loop
inc
mov
gs
fdivrl
ja
xor
cs
test
or
cwtl
add
scas
jge
mov
adc
bound
cmp
lahf
out
stc
mov
cmp
inc
addr16
faddl
cmp
sbb
add
movsl
sub
cmpsb
cmp
incb
push
mov
push
test
inc
jge
test
sub
jne
sbb
mov
inc
jecxz
and
sahf
lea
xchg
push
movsb
int
je
jl
inc
xchg
in
sbb
jb
xor
loope
cmp
add
mov
movsb
dec
aas
adc
pop
sbb
push
adc
call
test
push
adc
enter
fwait
sbb
rcrl
xor
cli
and
cltd
fsts
shr
mov
jl
jbe
mov
xchg
push
jbe
outsl
stos
pop
popf
mov
sub
xor
outsb
and
push
jnp
mov
mov
btc
gs
add
push
int
out
ffreep
push
sarl
pop
hlt
popf
mov
aaa
aaa
jns
mov
cli
push
cmp
sbb
lock
jae
in
pop
movsl
push
cmp
xchg
fsubl
movsl
sub
test
ljmp
movsb
mov
adc
shll
dec
cmp
xor
aaa
hlt
jo
jns
cmp
inc
or
imul
ja
int
and
xchg
sub
lods
sub
insb
dec
sbb
push
jl,pn
mov
or
sbb
jmp
ds
in
sub
repnz
adc
xchg
lcall
jno
rorb
cmp
call
and
sub
add
call
fsubp
fwait
xchg
mov
icebp
mov
mov
dec
mov
push
pop
or
mov
ret
sub
outsb
jl
lahf
sub
ljmp
sbb
lea
xor
dec
int
or
or
enter
or
mov
xor
rclb
and
pop
pop
xor
pushf
mov
mov
ret
sti
inc
dec
cmpsl
and
mov
jmp
ret
movsl
xor
insb
ret
repnz
dec
mov
jae
outsl
cwtl
cmp
movsb
mov
or
sbb
and
push
mov
imul
sbb
adc
sub
arpl
shll
iret
cwtl
xchg
movsb
dec
mov
insb
adc
icebp
ljmp
mov
test
mov
aam
and
jle
cmpsl
popa
fs
push
loopne
addl
jae
sbb
pop
icebp
push
sahf
mov
aaa
dec
mov
mov
stos
das
jmp
add
pop
imul
insb
aaa
fidivrl
icebp
inc
ret
sbb
or
sub
scas
sub
pop
xlat
cli
push
adc
push
and
jo
loope
add
shll
mov
insl
add
dec
and
cmc
cli
pusha
pop
shlb
and
sbb
jne
loop
fisubrs
sub
or
movsl
jg
sub
mov
scas
fdivr
add
dec
dec
mov
xor
sbb
sbb
pop
mov
out
mov
imul
inc
aad
pop
out
insl
xor
jnp
or
push
test
dec
jge
aam
adc
cmp
push
das
pop
sub
ror
xor
stos
pop
scas
dec
xchg
sbb
push
imul
add
sahf
test
xchg
out
adc
dec
mov
push
xorl
movsl
movsb
cmp
addb
adc
jle
orb
addr16
outsb
inc
in
leave
mov
repnz
popf
popa
pop
gs
push
nop
pop
xchg
mov
movsl
ret
cmp
add
xchg
add
add
stos
fbld
notl
inc
icebp
jne
jmp
cli
icebp
in
repz
and
push
lock
mov
and
push
inc
popa
dec
sub
push
pusha
xchg
adc
and
sub
mov
inc
into
and
lea
mov
pop
push
fwait
add
jbe
dec
xchg
ss
dec
inc
xorb
add
aad
jo
hlt
sahf
or
loope
cmpsb
mov
push
dec
push
fiadds
iret
and
jo
repnz
aas
jnp
mov
mov
or
imul
cmp
cli
cld
cltd
lods
and
and
pop
faddl
in
int
ljmp
gs
push
jge
mov
iret
ja
ret
cltd
sub
add
out
mov
push
stos
scas
mov
insl
cmp
pushl
sub
gs
dec
mov
test
xlat
cmp
adc
mov
scas
sub
xchg
out
loope
xor
fdivr
mov
xchg
dec
enter
insl
stc
and
jae
jg
adc
mov
out
sarb
in
stos
jl
jg
push
dec
lret
inc
dec
cmp
push
bsf
mov
push
mov
jmp
jne
test
adc
add
loopne
imul
lcall
arpl
push
mov
lea
cmp
ret
push
je
out
sti
adc
out
dec
inc
fdivl
mov
push
adc
orl
inc
aas
cmp
insl
decl
sub
jb
push
jns
and
pushl
into
fucom
dec
fwait
sti
sub
jmp
xchg
pop
aaa
and
sub
lret
subb
mov
add
aas
mov
sbb
push
jecxz
cld
imul
jo
sbb
xlat
xchg
jo
jnp
rorb
jge
sbb
roll
jle
sub
lret
loope
push
js,pt
mov
or
mul
sub
test
loope
pop
inc
mov
fstpl
cmpsl
push
je
cmp
icebp
xchg
test
and
in
pop
call
inc
fwait
push
inc
mov
std
push
ds
nop
pop
cmp
push
mov
and
cmp
lcall
stc
sti
sbb
push
mov
pop
or
enter
jnp
jae
pop
xchg
inc
sub
dec
repnz
mov
push
in
sarb
es
lret
mull
ret
and
or
and
jb
pushf
xor
xlat
jbe
mov
sbb
and
popa
mov
mov
mov
and
std
testl
cmpb
call
or
xchg
adc
push
lahf
ficompl
sbb
pop
jl
subb
mov
hlt
pop
arpl
push
xor
lea
out
adc
adc
aaa
xor
pop
ds
add
pop
repnz
sub
add
sahf
mov
mov
lods
iret
xchg
or
pop
dec
push
mov
mov
cmp
mov
mov
out
lahf
scas
jns
cltd
dec
and
mov
stc
xlat
scas
pop
pop
adc
sub
xor
mov
dec
or
mov
dec
shrl
bnd
shrb
pop
sbb
iret
adc
inc
scas
shufps
inc
cmp
dec
mov
pop
jns
cmp
dec
sbb
lcall
fists
in
push
mov
cmp
fsub
loop
pop
and
in
hlt
arpl
jg
add
popa
sbb
cmp
fdivs
shrb
fnstenv
dec
int3
aaa
inc
dec
or
push
sbb
fsts
xor
lret
dec
sbb
out
xchg
sub
aas
imul
mov
imul
enter
rorl
movsb
stos
test
sbb
xchg
into
push
jl
fists
xchg
mov
in
mov
mov
loopne
inc
repz
cmp
bound
iret
xchg
jns
clc
inc
mov
outsb
popa
inc
sbb
rcl
inc
push
cmp
ss
inc
lock
fmull
stc
loope
adcb
jle
arpl
fldenv
movsl
inc
mov
mov
insb
pop
or
nop
pop
popf
push
popa
mov
inc
test
mov
sub
repz
call
xchg
jge
mov
cmp
jmp
inc
stos
loop
ss
test
pop
sub
std
push
cmp
jo
xchg
mov
roll
or
and
movsb
dec
ds
or
pop
push
sbb
out
imul
inc
inc
lds
pop
push
popa
dec
add
sahf
int
daa
roll
test
push
out
jns
sbb
ret
lcall
lock
decl
jle
xchg
jge
dec
inc
cmp
jle
lods
out
scas
cmpsb
aam
stos
sub
adc
sub
sbb
in
mov
aad
xor
fimull
js
add
arpl
mov
ds
and
movsb
jmp
loopne
mov
lret
bound
pop
cmp
fistps
and
mov
lcall
sub
xor
sbb
jecxz
xchg
test
fimuls
xchg
or
cmc
aaa
mov
les
cmp
sub
ljmp
mov
das
xor
jp
cli
push
int
es
jecxz
jb
mov
fs
hlt
popa
cmp
pop
gs
xor
push
xchg
cmp
aas
jbe
idivb
and
fists
push
jb
loop
je
lea
push
push
xor
in
dec
ds
pop
jns
push
or
jmp
or
mov
ja
push
hlt
rol
mov
xchg
incl
int
cmpsb
add
lea
and
loop
add
ret
sub
adc
ja
rcr
pop
in
push
dec
mov
adc
xchg
fistps
mov
aaa
push
cwtl
jo
fs
dec
adc
mov
std
rcrl
sarl
jbe
add
imul
cmpsl
int
pop
js
push
mov
or
scas
sub
mov
dec
insl
shl
cli
nop
cmpsb
movsl
adc
test
sub
push
inc
out
inc
add
mov
sar
pushf
cmpb
xchg
out
pusha
int3
sub
xchg
mov
rcrb
mulb
cmpsb
incl
repnz
mov
pop
into
mov
std
or
in
xchg
in
add
push
inc
mov
add
ss
repnz
stc
add
pop
pop
push
loope
mov
repnz
ret
test
xor
dec
loope
pop
insl
sbb
sbb
sub
pop
mov
scas
add
outsl
mov
or
popf
repnz
mov
push
xor
xor
loope
lret
cmp
xchg
inc
cmp
sbbl
out
push
or
lret
dec
jmp
in
pusha
push
mull
mov
rclb
sbb
mov
lods
enter
in
in
adcl
adc
ret
repz
pop
cmpsl
xchg
pop
cmp
adc
movsb
push
xchg
jne
outsb
fdivrs
xor
or
add
or
cmp
cmc
insb
outsl
and
push
dec
rcrb
push
loop
lret
shll
in
or
mov
push
or
mov
xorl
shll
mov
cmp
lods
popa
sbb
rclb
in
inc
or
xchg
adc
xchg
movsb
lretw
push
je
pop
jbe
inc
mov
or
cmpsb
pop
fs
cmc
leave
roll
mov
imul
shlb
std
jecxz
pop
jg
jb
nop
test
xlat
dec
push
inc
es
sbb
add
cli
xor
repz
out
or
fwait
sub
cmp
sub
ret
inc
insl
jns
push
sarl
push
fnstsw
dec
xchg
add
pop
lret
stc
iret
movsb
mov
scas
xor
lea
mov
fidivrl
fdivl
fwait
pop
jb,pt
pushf
mul
xchg
inc
add
push
cltd
cld
mov
mov
pop
out
ss
xor
dec
shrb
add
xchg
jg
dec
inc
sub
daa
data16
adc
out
imul
pushf
mov
sub
jge
shr
jl
and
dec
sbbl
mov
and
jl
addl
cltd
stos
cld
inc
sub
movsb
ljmp
into
outsl
pop
xchg
ja
shrl
or
cmpb
inc
int
inc
xchg
add
stos
jecxz
jle
cmp
inc
xor
mov
or
int3
dec
cmp
out
or
add
cli
jno
jg
divl
fnstsw
fadd
int3
int
inc
int3
scas
xlat
popa
xchg
xchg
insl
jmp
mov
adc
jnp
int
lods
dec
clc
mov
incb
lods
xlat
or
mov
sub
mov
or
mov
add
call
outsb
mov
sar
mov
clc
cmp
mull
loopne
shrl
jo
je
cli
cmp
mov
or
inc
es
movsl
mov
cmp
fsubs
outsl
mov
nop
in
repz
cmp
jb
cmc
filds
mov
cmp
push
inc
jno,pn
into
addr16
mov
data16
cmp
imul
sar
or
fs
sub
loope
jg
icebp
inc
scas
push
pop
mov
dec
mov
fwait
add
clc
into
pop
dec
in
xchg
cmp
add
lock
inc
mov
addr16
arpl
pop
or
lock
xchg
lahf
in
and
rcrb
inc
fimull
jb
movsl
ss
int3
xor
rcll
pop
or
push
xor
test
adc
xor
int3
stc
mov
shll
ret
call
ja
std
jb
push
cmpsb
mov
xor
jecxz
pop
and
imul
push
loopne
xchg
sti
mov
call
ret
push
nop
mov
and
push
pusha
ss
sbb
dec
xchg
push
add
or
inc
adc
xor
or
push
arpl
lcall
xchg
or
stos
imul
lcall
ret
add
lods
or
xor
inc
pop
jo
fdivs
dec
pop
int
sbb
repnz
cwtl
push
out
mov
cmp
in
iret
iret
mov
call
ret
inc
jns
jp
pop
mov
popa
push
mov
mov
ljmp
jo
ficomps
pop
lods
jae
and
mov
addr16
push
enter
movb
sahf
jle
insb
pop
xchg
pop
ljmp
bound
and
icebp
ja
es
pop
dec
incb
repz
outsb
xchg
push
movb
or
jg
movsb
cmpl
xchg
pop
ficompl
negl
sub
and
int3
xchg
mov
mov
ds
mov
addr16
or
mov
dec
negb
push
enter
into
iret
shlb
jbe
jno
int
sbb
mov
dec
or
xor
push
or
sbb
xor
xor
call
pop
dec
xor
lods
cmp
sub
jmp
and
mov
aaa
jno
jb
push
ss
loopne
enter
into
mov
enter
or
test
pop
stc
sbb
mov
sub
add
xchg
xchg
les
cltd
and
cld
out
sub
push
scas
sbb
mov
mov
test
aam
adc
cmc
lret
jmp
in
fists
mov
fs
aas
and
imul
adc
jmp
cmp
jmp
mov
sub
and
int3
loop
cmp
and
fucomp
shlb
pop
and
pop
iret
mov
shr
les
sub
mov
movsb
adc
lock
adc
movsb
jne
push
or
push
add
cmp
jno
add
sarb
lret
mov
insl
aad
xor
pop
icebp
push
out
aas
cs
and
negl
mov
stos
dec
notl
and
sub
aaa
cmc
push
mov
add
pop
shlb
cmc
mov
jl
cwtl
outsb
divl
or
sbb
mov
cwtl
hlt
cmc
int3
push
std
es
xchg
cmc
ja
mov
mov
popf
mov
add
cmp
mov
pop
adcl
pop
pop
flds
or
scas
in
jno
push
mov
xlat
and
lock
cmpsb
mov
in
testb
mov
or
sarb
cs
mov
or
arpl
xchg
test
xlat
mov
movsl
loop
jnp
jne
jge
mov
mov
int
fdiv
lds
mov
add
sahf
out
cmpsb
repz
pop
cmp
sub
sbb
mov
xor
mov
jb
xor
add
mov
jecxz
jg
cmpb
in
lods
pop
and
add
mov
push
subl
or
sub
int3
mov
or
jno
xchg
mov
jo
adc
std
data16
daa
cli
pop
data16
daa
mov
repnz
mov
mov
mov
pop
pop
xor
push
xchg
outsb
xor
das
mov
fildll
mov
sub
fadd
pushf
aam
enter
icebp
lcall
fsubs
mov
dec
mov
pushf
test
into
jg
test
test
mov
sti
dec
dec
mov
mov
xchg
adc
adc
sbb
or
adc
cs
ret
or
jl
dec
and
dec
sti
inc
test
mov
in
inc
and
test
push
add
adc
xorl
push
cmp
jb
cs
call
jae
cmc
inc
aas
xchg
push
fs
push
jnp
ret
jle
addr16
fwait
push
mov
int
push
arpl
popf
icebp
xor
pop
cli
es
jns
inc
or
lock
loope
aam
pusha
cmc
push
mov
cmpsl
lret
gs
sbb
lods
loope
js
jmp
mov
lds
sub
sub
mov
int
jg
add
lock
ret
test
add
push
test
sub
in
stos
iret
sub
jns
xor
movsl
js
cmc
cmp
add
add
repz
or
js
and
test
mov
mov
push
fcomps
mov
mov
ljmp
scas
cmp
xchg
fcmovnbe
ret
xchg
scas
xor
dec
push
adc
ljmp
xorb
aaa
add
or
push
in
ds
repnz
lea
sarb
je
in
ret
sti
lfs
in
cmp
fwait
dec
test
dec
xchg
daa
mov
testl
sub
fs
adc
push
or
cmp
aam
xor
mov
mov
sbb
add
les
mov
test
dec
ss
dec
jo
mov
adc
xchg
xor
pop
xchg
pop
pop
aad
lods
pop
subb
mov
inc
std
daa
push
mov
out
push
int3
jnp
mov
scas
adc
psubw
in
jmp
xchg
cmp
call
dec
sub
out
mov
pop
scas
xor
arpl
decb
aad
outsl
test
out
mov
ja
inc
inc
cmp
fcmovnu
dec
lock
xchg
cmpl
shl
xor
call
sub
les
adc
cli
xor
dec
in
xchg
cs
xor
fbld
lock
clc
pop
fcompl
clc
shrl
in
xchg
leave
xchg
dec
inc
adc
leave
pusha
dec
adc
sub
add
scas
push
xor
stos
and
hlt
aaa
call
and
pop
arpl
addb
jnp
in
add
xor
movsl
fisttps
mov
or
xchg
insl
jmp
adc
push
mov
stc
push
test
lret
push
sarl
rclb
loop
xor
sbb
mov
add
adc
icebp
arpl
mov
ret
and
push
imul
pop
pop
fistpl
and
test
pop
aad
lods
out
jp
loopne
push
dec
mov
ljmp
and
gs
mov
in
jp
mov
cmp
fbld
sub
test
or
loopne
aaa
pushf
frstor
ret
mov
in
and
gs
mov
jb
lock
sub
jmp
jnp
sbb
jne
dec
xchg
ficoms
dec
sub
inc
sub
jecxz
std
gs
and
mov
bound
dec
lods
mov
inc
mov
clc
outsl
or
jno
push
jb
cmpb
aam
jmp
push
scas
stc
add
in
fidivrs
and
dec
andb
sbb
fcomip
mov
jo
rcl
rorl
cltd
fnsave
imul
jle
cmpsl
xchg
push
xchg
out
pop
jg
sub
iret
les
and
loop
fsts
or
pop
jg
sub
adc
ja
fwait
mov
dec
scas
into
jmp
rcr
mov
repnz
insb
xchg
fs
xchg
jle
sbb
push
adc
icebp
and
cli
mov
mov
and
imul
or
pop
popa
aad
jo
fidivl
pop
je,pn
int
mov
xchg
dec
subl
inc
pop
xchg
loopne
hlt
repnz
in
test
or
and
je
sbb
mov
jmp
xorb
adc
xchg
xchg
jae
and
pop
cmpsl
test
scas
aad
aam
jb
shrb
jnp
mov
movsb
dec
scas
js
jno
repz
and
jno
push
aam
test
adc
sub
pop
icebp
sub
das
les
leave
or
cltd
inc
inc
push
cmpsl
out
std
int3
aas
jno
mov
push
add
aam
fs
or
sub
mov
cli
shll
sub
mov
sub
scas
andl
pop
loopne
jl
dec
cmc
subb
or
adc
std
call
xchg
inc
pavgw
int3
outsl
adc
dec
jne
testl
xor
in
dec
call
leave
pop
mov
push
ret
pop
add
sbb
popf
sti
test
xchg
cld
adc
repnz
les
fimuls
mov
mov
xor
pop
add
xor
adc
std
leave
inc
sub
cwtl
mov
arpl
or
mov
mov
iret
push
or
push
mov
mov
add
xlat
inc
jae
ret
sbb
sub
frstor
sub
arpl
cmp
repz
cld
cld
sbb
mov
push
and
test
idiv
stos
stc
mov
push
js
shll
add
xlat
fiaddl
cmp
call
pop
push
popa
clc
es
push
xchg
ret
outsb
jb
cli
jo
sub
movsb
fsqrt
adc
sub
scas
inc
mov
adc
adc
aam
push
out
call
sub
inc
dec
mov
out
jmp
mov
mov
test
mov
dec
rorl
idivl
jmp
icebp
enter
je
sub
insl
test
in
jle
dec
out
sti
cmp
stc
dec
repz
inc
dec
mov
push
lea
inc
xchg
xor
jl
xchg
ja
insl
jle
pmuludq
xchg
mov
adc
mov
scas
popa
mov
inc
pushf
mov
jecxz
fs
push
sbbl
es
mov
mov
cltd
push
repz
leave
insl
pop
iret
fldcw
sbb
in
sbb
ds
push
pusha
push
je
daa
sub
scas
movsb
cmp
and
mov
and
inc
push
lret
mov
jns
loopne
sbb
lret
mov
sarl
push
pop
mov
call
test
adc
aaa
lock
sbb
dec
jp
mov
or
scas
xchg
push
clc
jno
cmp
cmp
jp
sarl
sbb
popf
cmp
xchg
dec
into
push
adc
add
ja
shll
adc
scas
lret
xchg
xchg
jp
push
xchg
xchg
lds
or
cwtl
stos
add
cmpsb
push
dec
cld
cmc
in
mov
mov
ljmp
imul
pop
and
negb
cmpsl
outsb
cmp
mov
mov
lcall
and
mov
les
cmp
pop
push
in
adc
lcall
mov
push
and
push
xor
pop
push
outsl
add
les
jbe
psubd
lret
fcoml
xchg
push
stc
mov
add
or
mov
mov
mov
popa
insb
mov
mov
mov
jge
out
mov
dec
shll
push
jp
xor
pusha
je
dec
pop
lahf
add
mov
xchg
je
scas
mov
fwait
inc
pop
mov
lods
push
call
jmp
clc
icebp
sub
or
fbstp
dec
cmp
clc
int
pop
and
and
jl
pop
sbb
fcomps
cli
out
out
repz
push
fwait
sbb
mov
cs
test
ss
xchg
sti
pop
ljmp
mov
xchg
ror
into
mov
into
ss
scas
jmp
jp
scas
sub
inc
cld
sub
lods
xchg
pushf
dec
insb
lret
inc
aad
scas
mull
js
push
hlt
push
mov
sahf
aaa
mov
jle
dec
mov
int3
les
sbb
push
cmpl
shlb
gs
sub
sub
or
dec
jb
arpl
push
mov
or
mov
leave
sub
hlt
push
xlat
lock
adc
in
and
outsl
popf
in
add
sahf
mov
repz
inc
clc
push
cmp
js
out
cmpsb
popa
leave
and
lcall
bound
ja
xchg
push
sub
subb
subl
xchg
stos
inc
add
cmp
in
xchg
movsb
out
add
inc
jp
ret
loop
pop
push
push
mov
pop
pop
sub
lahf
jp
jge
js
ret
ficompl
out
push
or
inc
push
add
jne
push
nop
dec
pop
scas
inc
xchg
add
fcoms
jne
jecxz
mov
pop
cmpb
sbb
je
add
popf
int
mov
xlat
sti
mov
repz
mov
imul
mov
es
push
lods
sbb
dec
nop
dec
jmp
mov
xor
ret
aas
jnp
jecxz
add
frstor
jno
pop
mov
xchg
jecxz
and
sub
add
fs
sti
dec
or
insb
jp
or
or
aad
jmp
cmp
in
sbb
aam
inc
in
or
and
flds
mov
mov
pop
ret
mov
jl
push
dec
mov
aad
xor
fs
jmp
mov
jbe
insl
xlat
repz
outsl
inc
adc
sar
jno
adc
and
arpl
mov
fimuls
daa
cli
jae
mov
and
jae
add
adc
xchg
inc
ljmp
aad
mov
addr16
inc
in
cmpsl
mov
cli
add
cmc
pop
rcrb
gs
mov
and
cld
push
pop
es
add
add
mov
jge
pop
xlat
pop
mov
cli
loopne
dec
into
dec
rcrb
mov
mov
mulb
mov
jno
gs
and
push
jecxz
sub
pop
pop
fnstenv
mov
lret
or
push
data16
repnz
push
cmp
and
shl
or
loopne
ja
mov
shl
repnz
in
dec
fwait
cmc
xor
lock
in
sbb
dec
xlat
and
sbb
loop
pop
adc
lret
idivl
mov
and
test
or
rcr
repnz
add
push
aam
mov
push
mov
cmp
test
out
mov
adc
stos
dec
fs
dec
jl
mov
shl
stc
stos
inc
lcall
mov
add
mov
and
mov
jb
lret
mov
aad
cltd
jae
call
pusha
cmp
mov
aas
es
inc
mov
imul
flds
inc
movsb
out
std
pop
pop
aam
pusha
mov
insl
fists
and
sbb
mov
test
xchg
xor
mov
cwtl
mov
and
mov
nop
and
push
mov
push
andb
jecxz
jno
add
mov
push
ret
push
add
mov
into
dec
out
cmp
xchg
inc
popa
leave
push
inc
adc
xchg
fdivrl
pusha
mov
iret
rcrb
test
sbb
stc
fdivl
and
rcll
adc
cmp
mov
loopne
subb
fsts
push
push
jae
push
cmp
orl
out
or
jg
fsubs
xchg
pop
jmp
out
mov
add
adc
jle
jno
cmp
mov
add
sahf
sahf
sub
scas
std
ret
inc
out
xor
sahf
cli
xchg
sub
cmpsl
ja
sbb
out
idiv
jmp
insl
sahf
xor
or
out
cmp
jne
sbb
loop,pn
adc
mov
xor
and
sbb
into
outsl
or
call
pop
jno
mov
jne
fiadds
and
fwait
rclb
xchg
fidivrs
add
mov
rcrw
cmp
mov
pushf
lret
jmp
rol
outsl
imul
fstpt
loope
fadd
dec
mov
inc
push
insb
xchg
xor
imul
lret
jo
xor
mov
sub
and
mov
outsl
fildll
mov
xchg
les
mov
add
aam
inc
adcl
and
insl
pop
jb
adc
add
cs
xor
jne
jmp
jne
mov
test
call
inc
cmp
popa
dec
jmp
push
pop
lock
pop
add
lds
inc
ss
jb
popa
push
xor
cltd
mov
sub
adc
lea
dec
outsl
and
aad
cli
mov
jecxz
cltd
je
pusha
sub
xchg
test
adc
push
cmpsl
pop
mov
add
dec
addb
xor
jae
ret
mov
jge
xor
xor
lcall
xchg
mov
movsl
inc
pop
flds
cmc
fsubrs
negl
int3
adc
sbb
arpl
lret
out
fnsave
mov
push
jo
xor
adc
dec
xchg
roll
je
mov
rorl
mov
imul
repnz
sbb
mov
or
pop
mov
pop
inc
fxch
jnp
shll
pop
pop
inc
or
in
fwait
pop
push
popf
aam
stc
cmp
mov
push
inc
cmpsl
pusha
dec
inc
stc
cmp
push
icebp
insl
idivl
inc
jo
std
negl
xor
sbb
jg
adc
nop
ss
shll
mov
fildl
in
mov
add
xchg
and
sub
jbe
fsubs
aaa
and
popa
push
push
in
in
negb
repnz
sbbl
add
jbe
mov
jne
in
sub
pop
cs
enter
andl
loopne
lret
sub
pop
adc
push
js
repz
ret
xor
loope
add
std
push
and
sub
stc
leave
mov
rcll
xor
enter
js
jl
fsts
cwtl
les
add
ds
outsl
aaa
sub
and
fidivl
arpl
hlt
inc
pop
add
add
xchg
jg
mov
push
add
and
and
fdivr
mov
jns
ljmp
addr16
mov
js
push
repnz
pop
enter
hlt
cmp
nopl
xor
xor
xor
jnp
adc
mov
or
pop
sti
mov
and
hlt
cmc
pusha
sub
dec
mov
cmpsb
iret
push
sahf
add
sub
pop
lods
xor
cld
andb
std
sub
jno
cmp
push
add
push
and
es
add
pop
pop
in
lods
lds
adcb
shl
pop
sbb
jne
dec
add
loop
cmp
out
popf
mov
or
inc
sbb
mov
jecxz
pushl
adc
psrlw
int3
jle
sarl
xchg
jmp
lods
shll
enter
cwtl
adc
mov
cli
inc
ljmp
jns
jnp
jge
jmp
xor
add
outsl
pusha
repnz
test
movsl
stos
ss
pop
adcb
aaa
dec
dec
faddp
mov
insb
movsl
pop
lds
inc
nop
loop
mov
cld
imulb
pop
jl
jg
addr16
xchg
jae
std
adc
add
xor
notb
and
add
lcall
push
xor
push
sub
stos
dec
pop
je
mov
jae
std
push
aad
mov
jg
fwait
xor
cli
sbb
xlat
jno
test
inc
cmp
jb
xchg
xor
mov
sub
mov
xchg
mov
xchg
ljmp
push
pop
mov
sbb
shll
mov
test
mov
cld
stos
jno
std
add
xor
push
adc
xor
sbb
mul
mov
push
xchg
or
les
fs
sahf
jbe
xor
sbb
loopne
mov
adc
imul
aam
aaa
push
rcrb
test
mov
sub
iret
xchg
and
jnp
les
mov
pop
fcompl
insl
clc
mov
fwait
enter
nop
and
nop
sbb
pop
andb
mov
int3
loope
inc
or
or
sub
push
or
or
adc
fwait
outsl
fisubrl
push
dec
and
sarl
dec
ret
loopne
lret
mov
adc
push
adc
push
add
fbstp
lods
inc
pop
ret
aaa
adc
cmp
imul
das
mov
sub
xchg
push
xchg
dec
push
inc
ffreep
fldt
lret
test
mov
mov
jl
cmc
ja
movsl
mov
and
and
insl
iret
dec
fdivs
test
jp
lods
adc
scas
jne
pushf
sbb
dec
xor
or
outsb
mov
add
push
xor
mov
les
pop
or
ficoml
lret
sbb
xchg
jo
pushf
add
jmp
loopne
test
out
sub
enter
loopne
xchg
push
mul
test
xor
imul
adc
scas
sti
cmp
repz
aam
arpl
pop
xor
repnz
jg
pop
cmp
mov
in
stos
dec
outsl
or
rorb
sub
pop
test
outsb
lret
mov
and
fcmovnb
in
outsb
push
sub
mov
fwait
jg
lock
or
aaa
mov
push
cmp
mov
ja
addr16
in
call
xchg
or
inc
mov
ret
pop
xor
aas
in
call
sbbb
addr16
icebp
inc
ja
xor
leave
adc
jecxz
xor
pusha
or
pop
lds
in
inc
mov
xchg
mov
pop
pop
jl
bound
pop
ss
add
mov
rolb
jge
inc
int
xor
aaa
out
lahf
inc
cs
clc
push
movsb
mov
sub
jg
addr16
adc
jo
adc
out
loope
and
dec
call
aas
loop
inc
repz
inc
fcmovu
push
add
rorb
adc
addr16
sub
cwtl
imul
addl
mov
dec
jg
push
jb
popa
fstpl
add
push
enter
ljmp
xchg
adc
and
fnsave
xchg
xchg
jl
adcb
mov
add
rcll
sti
push
push
test
cmpsb
mov
xchg
cmp
mov
mov
sbb
jle
mov
adc
xor
mov
addr16
or
mov
cltd
cmpsb
outsl
jns
dec
sbb
es
stc
jb
mov
popa
and
jecxz
jnp
sbb
fsub
mov
fldl
pop
scas
test
lock
jmp
dec
push
mov
jge
inc
cwtl
aad
xchg
leave
xchg
xor
sub
sbb
push
or
pop
outsb
rcrb
test
stos
push
add
mov
test
stc
call
push
loopne
call
das
xor
push
fimuls
test
cmp
or
sub
add
jno
or
dec
enter
in
xor
add
pop
sti
or
rcrl
jae
pop
inc
cmc
ret
mov
push
aaa
lcall
adc
scas
xor
sub
sbb
insl
mov
outsb
xchg
aad
outsl
sub
out
cmpsb
test
add
pushf
lods
add
insb
push
das
jb
dec
into
pusha
gs
or
lock
dec
mov
data16
sbb
call
push
ss
in
test
mul
jecxz
outsb
sbb
clc
pop
and
or
pop
adc
lahf
mov
mov
and
das
jne
add
pop
cmp
push
push
inc
sbbb
xlat
push
jae
and
out
cmpsb
ret
xlat
mov
cwtl
sub
add
mov
or
imul
pop
push
push
in
scas
in
arpl
mov
jl
scas
cli
cmp
sbbl
sbb
mov
mov
clc
or
inc
xchg
lods
insb
mov
ret
scas
mov
push
int
pusha
rolb
xchg
pushf
insl
dec
fists
ret
outsl
sbb
cmpb
xchg
daa
push
test
fisttps
imulb
jecxz
icebp
cmp
sbb
xchg
jb
inc
fidivl
dec
jle
sbb
jle
pop
jmp
add
jmp
inc
les
lea
movsb
bnd
mov
enter
daa
pop
fstpl
inc
push
mov
push
out
add
cmp
mov
call
push
sahf
cld
cmpsl
pop
div
dec
test
into
xchg
xchg
and
daa
pop
pop
pop
out
jecxz
fistl
imul
mov
sahf
or
pop
xor
rcll
sub
cld
xlat
jecxz
push
stos
dec
or
push
mov
mov
daa
lds
out
sub
pop
bnd
xchg
add
sahf
orb
push
lock
js
push
xor
xlat
mov
fs
popf
push
or
dec
fisttpl
rol
int
inc
test
push
in
pop
test
pop
adc
test
lds
or
mov
movsl
jl
cltd
push
sub
push
pushl
idiv
rorl
and
mov
aam
add
mov
fs
test
mov
mov
adc
mov
out
and
sahf
xchg
mov
jo
jle
outsb
loope
cltd
xor
dec
sbb
pop
enter
clc
dec
inc
jl
rolb
adc
dec
bound
out
mov
jge
adc
clc
mov
sbb
push
dec
xor
jg
lea
pop
test
xchg
sbb
stos
inc
lea
jge
enter
and
movhps
sbb
and
stos
or
inc
sub
sub
sub
call
adc
hlt
hlt
and
sbb
stos
or
test
xlat
add
pop
xchg
clc
cmovns
aad
dec
pop
sbb
sahf
jecxz
xor
fisttpl
or
loop
dec
jb
rcr
bound
mov
in
out
imul
hlt
outsb
sarb
bound
jae
aam
movsl
pop
sbb
dec
mov
sbb
mov
dec
pusha
bound
and
ljmp
inc
mov
test
mov
cwtl
je
scas
mov
hlt
sbb
out
das
jp
movsl
mov
stc
clc
push
sub
cmp
or
pop
cltd
xchg
out
ljmp
repnz
cmp
xchg
leave
fsub
flds
imul
push
icebp
mov
and
int
cmp
shlb
pop
rorb
dec
loop
push
jle
aad
inc
inc
push
jnp
lods
push
sub
sahf
loope
push
and
insb
pop
cli
or
outsb
and
inc
stos
sub
sbb
fstpt
jle
gs
imul
shr
lds
dec
out
stc
cmc
mov
dec
push
sti
mov
ret
ret
arpl
sbb
lahf
clc
dec
add
cmpsb
jno
or
ja
pop
sub
inc
add
mov
dec
lock
mov
or
or
jl
sub
or
mov
or
clc
test
lods
insl
nop
cmp
mov
cmp
or
sbb
std
dec
xor
or
cmp
sub
ret
mov
sahf
pop
idivb
dec
dec
xchg
mov
int3
push
cli
movsb
mov
adc
xchg
popa
ss
in
test
gs
cmpl
popf
sti
ret
dec
cmp
or
jnp
jne
sub
sub
test
aam
cmp
jg
inc
xchg
imul
jnp
cli
mov
out
jno
cmpsl
push
sub
shlb
mov
stos
or
mov
push
sub
sub
and
mov
test
mov
xchg
push
inc
sub
and
pop
es
fnstenv
call
cmp
cs
sbb
jnp
adc
sti
mov
fwait
jns
test
vpor
or
shll
mov
popa
xchg
cwtl
mov
ffree
jl
lock
mov
add
iret
imul
addl
test
and
js
test
xchg
dec
iret
rcrb
movsl
or
or
mov
pop
imul
fisubs
bound
dec
cwtl
out
mov
enter
push
inc
xor
stos
push
out
inc
inc
cmp
ljmp
jle
insl
jecxz
pop
jo
pop
jbe
lret
fdivl
add
out
dec
push
mov
imul
les
inc
dec
in
sub
pop
pop
pop
out
add
aam
dec
lret
jle
pop
mov
sub
and
aad
inc
add
lods
sbb
sub
stos
jns
xchg
incl
cwtl
push
fldt
in
xchg
dec
add
xchg
dec
inc
dec
leave
lods
and
or
mov
push
mov
dec
ret
insl
adc
lds
mov
xor
loope
and
sub
stos
loope
jno
loop
aaa
js
lret
ds
je
sbb
fs
xlat
arpl
mov
shrl
test
jns
push
mov
or
fistl
xorl
decl
mov
mov
push
push
jne
das
insb
xor
sbb
arpl
divb
cmpsb
sub
inc
ss
les
sbb
and
xor
js
mov
int3
icebp
dec
out
mull
movsl
bound
xchg
fisubs
hlt
bswap
pop
pushf
xchg
test
xchg
inc
test
js
mov
out
or
dec
cmp
adc
pusha
jp
ds
or
lods
jl
pushl
pop
mov
fisubl
sahf
xor
adc
dec
inc
mov
popf
out
or
jp
pop
adc
fildll
inc
push
xor
and
mov
aad
sub
mov
outsl
divb
pop
cld
das
sbb
cmc
add
mov
or
mov
pop
sahf
cmp
pop
cmc
jg
and
out
movsl
rorb
pop
push
test
jmp
xor
xchg
pop
jnp
cmpsl
mov
and
cltd
jge
loopne
or
lahf
sti
lret
cmp
jg
out
push
inc
mov
rorl
push
mov
inc
sub
fstpt
sarb
or
lahf
mov
sub
push
out
add
pop
jmp
roll
xchg
stc
into
cmpsl
dec
or
or
jecxz
jl
xchg
jp
ror
stos
or
mov
dec
mov
pop
movsl
jnp
pop
arpl
repz
mov
nop
out
ja
stos
insb
inc
pop
cltd
loopne
cwtl
mov
dec
ror
inc
mov
stos
loope
jge
je
int
shll
rorl
je
dec
rorb
cmp
fstl
inc
fdivrl
cld
pushf
scas
sub
mov
cs
xor
in
dec
pushf
mov
inc
and
pushf
rcll
lret
pop
sbb
mov
fldcw
push
push
movsl
jmp
lods
add
push
daa
mov
sbb
or
sahf
push
cs
or
cmc
push
lods
pop
adc
js
shll
cmpsb
nop
cmp
jo
jns
pop
push
out
xchg
or
bound
xor
or
addl
in
out
or
sub
fwait
dec
mov
cmp
jl
mov
xor
into
adc
cmp
xchg
mov
xchg
lahf
adc
ret
jp
test
leave
pop
jo
jnp
orb
sub
sub
jns
ret
mov
dec
push
divl
add
mov
lcall
inc
cmp
jp
lret
cwtl
sbb
out
les
sub
inc
rorl
or
push
or
loop
mov
adc
in
orl
lods
je
cltd
fcmovnb
cld
cmp
inc
iret
popa
cmc
inc
dec
lldt
dec
mov
aas
gs
out
daa
mov
xchg
lret
scas
xor
repz
popa
in
add
lahf
and
dec
lea
mov
pop
jb
sbb
adc
sub
xor
aas
sub
cld
and
jmp
test
cmp
pushf
aaa
inc
xor
pop
mov
jmp
jl
inc
pushf
aas
mov
jne
ret
xlat
cmpsl
cs
hlt
les
cmc
out
mov
scas
jns
call
mul
mov
push
icebp
jbe
add
scas
loop
int
imul
lods
mov
or
and
js
jne
sti
jbe
sbb
test
adc
inc
xchg
scas
jp
jno
sahf
jns
shrb
adcl
xchg
sub
and
pushf
dec
jmp
sbb
sub
ud2
loopne
mov
pop
ret
add
push
jns
fdivrl
les
ficompl
bound
aad
lods
mov
cmpsl
lods
sub
or
xchg
cmp
and
sar
rol
xchg
and
push
repnz
fs
sbb
sub
cmp
rcrl
cwtl
sub
fstpl
sti
in
inc
jnp
dec
sbb
push
test
sbb
push
jp
mov
lea
cmpsb
push
call
cmp
xchg
cmp
cmp
mov
push
and
push
lods
nop
pop
push
decb
or
pop
rorl
or
cmp
js
mov
in
jle
fwait
sbb
pop
loop
mov
pop
or
or
push
xor
pop
test
mov
stos
xor
and
test
std
inc
mov
iret
xchg
clc
daa
sarl
add
rclb
sbbl
jo
inc
dec
clc
push
imul
hlt
dec
jp
and
push
outsb
xchg
add
cmpsb
leave
and
jnp
lahf
cmp
mov
xchg
jno
mov
dec
pop
dec
mov
and
ds
mov
xor
mov
jecxz
fsubrs
ljmp
inc
shll
dec
push
mov
in
jge
pop
jle
inc
mov
stos
dec
leave
cmp
jb
daa
orl
adc
loopne
iret
pop
loopne
xchg
pop
or
add
sub
lahf
and
jp
shlb
scas
nop
mov
mov
lahf
fisubs
sbb
adc
jbe
pop
inc
insb
ret
fnstenv
loop
int3
das
push
cli
les
xor
cmp
sbbb
gs
shll
xchg
nop
adc
dec
lock
inc
test
cmp
pop
or
or
sbb
es
lods
es
adc
pushf
daa
inc
mov
mov
aam
gs
dec
dec
push
loop
pop
sbb
dec
sbb
xchg
xorb
mov
mov
ret
pop
ret
sbb
or
mov
int
frstor
aaa
addl
inc
or
adc
jl
shlb
xchg
pop
iret
lcall
ficoms
movsl
inc
das
jp
shl
mov
es
scas
divl
inc
sub
jl
aam
int3
mov
push
ror
hlt
jmp
jae
out
jp
xchg
gs
pop
and
das
push
les
mov
pop
xchg
repnz
mov
aam
stc
jns
jge
aam
leave
jno
inc
jecxz
mov
cmc
insl
fisttpll
int
push
stc
mov
js
cmpsb
iret
cmp
adc
inc
push
sbb
lret
mov
push
mov
sbb
lds
outsb
push
xchg
mov
fldcw
and
inc
dec
out
pop
dec
push
mov
ficomps
sub
shll
ret
xlat
shrl
mov
push
hlt
out
pop
pop
pop
mov
cmp
movsl
mov
or
sub
jle
repz
xchg
push
ret
dec
pop
jnp
add
push
ljmp
xchg
adc
and
popf
jbe
rsqrtps
mov
push
shlb
mov
leave
push
mov
movsb
lods
clc
pop
mov
lret
or
sub
je
sbb
dec
fistps
pop
cmp
movsl
or
int
and
dec
aad
inc
xchg
push
xor
cmp
mov
stos
adc
test
sub
pushf
xor
jmp
roll
and
mov
pop
fwait
out
adc
ret
adc
int3
mov
mov
outsl
test
iret
jmp
dec
cld
in
addr16
inc
mov
fwait
cmp
and
jge
xchg
jecxz
ss
sub
mov
dec
ljmp
push
inc
sbb
mov
aaa
mov
mov
popa
rcrb
ljmp
push
mov
cmpsb
fiadds
popa
mov
imul
int
add
out
sarb
mov
add
lea
mov
push
sub
rcl
fmuls
jne
mov
dec
adc
push
sub
inc
imul
mov
inc
dec
popa
addb
aas
sbb
fwait
scas
sbb
cmpsl
cmp
pushf
sbb
je
push
sub
mov
mov
popa
mov
mov
rcrl
pusha
add
inc
iret
pop
jae
pop
cmpsl
xchg
leave
imull
pop
leave
lahf
inc
xchg
stos
push
pop
stc
in
xor
xchg
pop
push
push
js
jmp
dec
clc
nop
jge
aam
mov
rclb
xlat
and
push
cmp
and
andb
arpl
dec
add
and
or
jge
in
mov
push
icebp
add
xor
dec
adc
mov
dec
rorb
shll
cmpsl
or
lret
cmp
ret
jp
rorl
test
sub
and
jg
push
add
xor
stos
xchg
mov
jp
rcll
ret
lea
in
lods
cmp
jbe
cmp
rorl
and
sub
mov
stos
stos
fnstenv
and
jp
pop
addl
imul
pop
sub
fnstsw
in
lahf
fwait
dec
jle
pop
lcall
xor
mov
iret
mov
fildll
fldt
sahf
pop
loope
outsl
iret
scas
xor
stos
lods
subl
scas
adc
pop
add
loopne
xchg
dec
cmpsb
xor
dec
orps
insl
jmp
mov
lock
cmpsb
xor
mov
push
dec
sbb
inc
outsl
pop
sbb
jg
mov
and
popa
adc
adc
jno
sbb
mov
ja
push
clc
sub
xor
jae
inc
jo
hlt
push
pop
jbe
test
xor
lds
push
adc
in
push
dec
int
sub
or
in
xor
add
jae
dec
push
or
jae
cmpsb
jo
popf
xorb
in
fldl
in
fdivrs
outsl
ds
cmp
insl
push
rorl
popf
sbb
repz
mov
shrb
mov
add
ljmp
cmpsl
call
or
sub
sbb
cmc
push
xchg
cwtl
jl
mov
lods
mov
cwtl
add
cmp
int
and
aaa
clc
jo
sub
jmp
fs
iret
sahf
fisttpll
loopne
xchg
dec
jle
add
inc
fwait
leave
test
aad
fwait
mov
and
inc
call
ljmp
outsb
jmp
pop
lret
adc
loop
loopne
cmp
test
or
mov
inc
mov
insl
adc
cmpsl
dec
mov
out
test
fisttps
adc
xor
fisttpl
add
stos
test
adc
adc
negl
mov
pop
mov
xchg
pushl
xchg
lret
inc
push
icebp
or
in
push
cmc
add
lahf
mov
adc
out
and
ret
fadds
cmp
lret
and
fstps
pop
outsl
sbb
xor
xchg
imul
jns
push
xchg
xorl
rorl
add
cmpsb
add
jne
adc
xor
lods
sbb
mov
stos
fnsave
inc
icebp
inc
pop
shlb
pop
dec
or
call
ret
cmp
ret
xor
add
xchg
nop
fcomi
sub
pop
or
mov
mov
popa
iret
sbb
scas
loope
mov
push
mov
ljmp
mov
sarb
subb
add
dec
dec
and
jns
jge
mov
test
arpl
xchg
adc
or
imul
fisubs
mov
out
test
push
and
out
stc
jae
fistps
or
xchg
jg
add
lret
push
pop
mov
adc
jne
inc
adc
aaa
lret
xchg
pop
adc
add
fcompl
call
mov
dec
stos
pop
pop
cs
popf
in
les
cli
lcall
rorb
pop
daa
or
push
jl
xlat
popf
push
pop
mov
pop
rolb
push
mov
and
xor
xor
lcall
clc
dec
lahf
jno
mov
js
enter
fwait
mov
popa
pusha
dec
and
push
jl
cmp
inc
outsb
sti
out
inc
inc
pop
or
pop
jne
shrl
sub
mov
rclb
aaa
adc
sbb
xlat
incb
pop
push
mov
lock
xor
into
adc
adc
add
aam
xor
cmpsl
fst
xor
nop
mov
xor
jmp
or
call
cmp
or
repnz
jno
mov
sub
mov
jge
xchg
and
loope
stc
andl
jge
addr16
mov
out
fisubs
es
cwtl
arpl
adc
fsubs
sbb
sub
movl
and
mulb
sbb
inc
mov
mov
xchg
cmpb
imul
mov
jmp
movl
add
jbe
test
in
cmp
cmp
sar
cmp
hlt
addr16
and
rep
jb
jno
and
sbb
test
pop
pop
movsl
push
dec
enter
bound
lret
inc
popa
aam
out
mov
fcoml
and
mov
mov
cmpsb
push
orb
xlat
nop
repz
sahf
int3
aad
xor
pop
mov
insl
mov
movsl
pusha
filds
inc
aaa
xchg
scas
aad
lds
fwait
add
out
jmp
jge
test
adc
into
cmp
jg
rcrb
or
pop
and
hlt
dec
data16
inc
jp
pop
repnz
mov
sbb
jecxz
push
or
inc
jnp
jmp
cld
out
cld
push
jbe
xor
mov
aam
mov
push
cs
das
pop
test
std
dec
add
test
adc
into
jo
std
add
ljmp
xchg
push
xchg
sub
or
sahf
cmp
aad
sub
add
mov
in
es
push
lods
pop
inc
mov
mov
xorb
ja
ret
push
lods
hlt
xchg
pop
hlt
sbb
fcoms
lods
xchg
addb
adc
add
cltd
iret
cmpsl
sahf
dec
adc
je
test
jmp
adc
ljmp
sbb
mov
and
popf
xor
jmp
xlat
fsubrs
iret
cmpsl
clc
cs
add
xchg
cmp
cmp
xor
sbb
push
cs
push
imul
test
repz
aam
dec
mov
cmp
iret
pop
dec
jmp
mov
dec
popa
int3
fcomip
cmpsl
jp
imul
cmp
popa
push
into
fldl
or
and
adc
stos
ret
pop
loope
outsb
sbb
xchg
cmp
je
shrb
jge
lahf
in
xchg
in
dec
ss
lock
loope
pop
add
scas
pop
lods
sbb
hlt
sub
cmp
dec
push
test
pop
or
cmp
push
jmp
cmp
nop
mov
cmp
jg
sub
cwtl
xchg
jl
sbb
out
dec
out
imul
cltd
xor
mov
shl
hlt
cmp
add
or
jae
imul
mov
cmpsb
xor
fmul
fldenv
mov
and
jo
dec
xchg
or
ret
mov
sbb
sub
sub
gs
cwtl
fs
test
in
mov
and
cmpb
faddl
jmp
inc
mov
jp
jae
lret
test
data16
cmc
ret
or
push
inc
cmp
mov
shlb
repnz
and
push
jo
lods
insb
push
cltd
mov
dec
ds
xor
xchg
rorb
test
out
lods
adc
lea
dec
dec
add
fsub
dec
rcrl
lcall
push
dec
nop
cli
dec
inc
fwait
stc
outsb
mov
pop
in
leave
mov
cld
jae
cmp
push
mov
cmpsb
pop
mov
and
repz
xchg
mov
push
jl
mov
jecxz
dec
in
fiadds
xor
dec
mov
xor
jb
arpl
fwait
xchg
adc
cmc
rorl
adc
popa
loopne
mov
xor
lods
out
adcl
dec
lret
jmp
sarb
pop
cmp
cwtl
pusha
cmpsb
inc
xor
inc
cmp
icebp
hlt
sbb
push
cmpsl
pop
lods
ret
pushf
std
negl
sarl
aad
sbb
pop
stc
cwtl
lods
or
in
fsubl
lret
dec
cltd
dec
lods
les
insl
aad
popf
icebp
adcb
adc
sar
xchg
cmpb
aaa
sbb
std
fildl
dec
daa
stc
lcall
insl
scas
stos
ja
dec
pop
int
popa
dec
aam
and
xchg
cmp
mov
push
dec
pop
mov
sub
mov
mov
xor
xchg
out
jp
cmp
leave
mov
les
cs
lahf
insl
in
fwait
aam
mov
stos
or
push
mov
pop
js
or
fsubs
lcall
xor
aas
mov
push
lods
shrb
pushf
xor
cmp
repnz
dec
mov
mov
pop
push
aam
add
mov
outsl
mov
out
clc
and
insl
xor
clc
mov
lods
dec
inc
insb
std
js
mov
out
inc
xchg
idivb
mov
mov
popf
pop
pushf
call
cmp
push
test
roll
pusha
inc
fbld
inc
into
jne
add
cltd
mov
test
pop
test
and
push
sub
mov
push
rclb
scas
jae
call
mov
jbe
add
inc
aad
sub
cmpsb
mov
mov
orl
mov
adc
pop
cmpsb
rcl
xor
call
fistpll
mov
stc
fwait
fwait
and
push
popa
dec
cltd
xor
movsl
daa
push
fiaddl
stos
dec
jo
mov
jp
arpl
dec
in
mov
pusha
mov
ds
loop,pt
inc
pop
mov
out
cmp
or
fwait
sub
dec
sbb
scas
mov
addb
pop
adc
jnp
rcll
ja
loopne
add
lahf
movb
mov
outsl
sub
inc
push
jl
add
bound
jp
ret
lds
cmp
and
push
cmp
es
pop
outsb
cltd
sbb
pop
daa
jnp,pn
mov
xchg
jle
iret
mov
add
inc
cmp
and
inc
pushf
fistpll
xor
cmp
and
outsb
adc
jmp
js
outsl
cmp
rolb
in
lds
xchg
ja
lret
js
dec
test
mov
or
mov
fisubrs
push
xchg
cmp
adc
testl
mov
outsl
addr16
xor
push
cmc
jmp
stos
mov
mov
pusha
cltd
mov
xor
std
sub
lods
sti
dec
cmpsb
add
push
cmp
idiv
cmp
push
jae
add
scas
jae
decl
push
push
dec
jo
mov
mov
mov
sbb
mov
mov
push
add
jl
mov
popa
xchg
sti
in
push
jns
mov
cmp
jmp
ljmp
push
mov
and
stos
push
cs
enter
mov
push
mov
mov
xchg
or
fnsave
push
lods
lret
ret
out
cmp
jne
and
popf
pushf
mov
lods
add
popf
cmp
test
out
out
cwtl
mov
add
test
mov
jl
fldenv
mov
aad
mov
xor
jo
push
and
scas
inc
xchg
sbb
or
or
adc
insl
lret
out
pop
mov
lea
xor
test
xchg
test
flds
jb
call
jp
stos
ja
pop
insl
mov
add
mov
cmp
mov
add
mov
in
adc
pop
jmp
cmc
dec
sbb
xor
cmpsb
mov
mov
enter
push
jle
mov
xchg
xchg
aad
lods
push
adc
push
fadd
and
cmp
divb
jae
xlat
mov
mov
call
fsubrl
dec
je
jno
pushfw
dec
push
xor
sti
sahf
and
das
pop
jo
stos
daa
or
js
insl
mov
ficompl
adc
xchg
inc
dec
or
jns
push
pop
add
cmc
pop
imul
mov
push
lods
mov
or
mov
aad
std
incl
cmp
xchg
xchg
add
xor
lds
shlb
ss
fcmovu
test
imul
fiaddl
inc
scas
std
mov
fucom
loope
imul
or
stos
cmpb
cmp
push
popf
or
pop
mov
or
cs
inc
bound
jg
cmp
pop
into
sub
pop
mov
dec
clc
in
sbb
das
or
pusha
fwait
pop
jp
movsl
xchg
sub
push
jbe
cmp
dec
dec
pop
icebp
dec
and
jbe
push
jge
mov
add
cmp
lods
push
rcrl
repnz
fstpl
shll
es
jb
lods
mov
xchg
xor
jae
sarb
push
dec
or
push
and
cmp
imul
cld
push
dec
lds
bound
out
xor
or
outsl
ret
mov
xchg
dec
xchg
in
or
adc
mov
push
mov
jns
and
sti
add
lahf
mov
ljmp
test
lahf
stos
mov
inc
sub
notl
ret
or
aad
dec
xor
mov
jecxz
jne
aam
jmp
ss
mov
test
dec
test
adc
jne
stos
popf
lret
stc
bound
cwtl
imul
mov
adc
and
rolb
pop
stos
subl
fxch
xchg
and
hlt
int3
test
in
popa
pop
into
mov
out
lods
jbe
mov
mov
stos
xchg
cld
insb
lret
xchg
scas
pop
add
inc
jb
into
dec
pop
test
ficoms
pop
lcall
call
push
insl
push
loopne
ss
movsl
xor
loop
or
dec
xor
hlt
arpl
mov
cmp
xchg
in
jno
mov
pusha
aaa
cmpsb
inc
dec
mov
pop
adc
mov
test
das
fs
mov
leave
les
lret
xor
das
push
or
mov
in
push
pop
jmp
in
cmc
mov
popf
fnstenv
pop
sub
dec
dec
pop
jg
xchg
inc
mov
gs
cltd
jmp
mov
inc
leave
mov
leave
shlb
in
pop
lret
mov
and
ja
je
cld
mov
adc
mov
jl
stc
movsl
jmp
ljmp
repnz
inc
xchg
lahf
lods
mov
jns
lret
mov
scas
ljmp
test
pop
push
orl
gs
xchg
lods
mov
gs
pop
xlat
adc
cmp
dec
mull
pop
fldl
call
movsl
and
sbbb
pop
lds
xor
mov
fcmovu
call
lods
fisubrl
ja
ret
xchg
adc
in
enter
orb
ret
push
push
sbb
sub
sub
fcomp
ljmp
or
jle
push
lret
xchg
gs
outsl
mov
mov
rolb
loope
scas
clc
sti
leave
mov
aam
inc
aam
push
out
jl
push
dec
push
mov
adc
into
testl
es
or
arpl
arpl
or
xchg
cmp
mov
daa
nop
push
sbb
xchg
sub
jae
popf
int
adc
pop
arpl
dec
add
mov
push
lret
pushf
mov
cmp
sub
mov
es
pop
push
push
jnp
jle
push
fs
sarb
jmp
pusha
out
iret
loopne
pop
incl
mov
test
imul
inc
pop
sub
mov
push
cmp
orb
fwait
pop
sub
outsb
scas
pop
xorl
pop
ljmp
mov
mov
test
leave
inc
mov
lret
pop
mov
sbb
xor
mov
pop
cmp
add
pop
mov
daa
push
call
lods
les
not
push
pusha
movsb
dec
movsb
xchg
dec
in
mov
cltd
mov
sbbb
out
mov
inc
in
ja
fsts
mov
pop
sbb
xor
push
pop
pop
lock
sub
imul
cs
add
lds
pop
je
idivl
aam
or
dec
jo
mov
or
jmp
jl
movsl
mov
push
aad
or
shl
das
dec
add
add
insl
pop
xchg
lods
js
push
fistl
or
sahf
xor
iret
call
xor
push
mov
icebp
cmpb
inc
mov
inc
mov
adc
pop
movsb
inc
dec
imul
sbb
fnstcw
pop
scas
stc
sub
movsl
push
sbb
adc
or
ret
fstp
pop
hlt
stos
fcoms
xchg
mov
testl
add
insb
in
dec
jge
pop
mov
sub
push
sysexit
test
dec
inc
add
ret
pop
pop
loopne
mov
pop
dec
pop
or
ds
jle
aaa
sub
add
or
jns
mov
add
in
push
pusha
pop
mov
in
cli
adc
adc
jb
ljmp
pop
inc
ds
fstpt
xchg
jmp
out
pop
jo
outsb
inc
cmpsb
mov
xor
in
popl
subb
lea
add
add
mov
pushf
inc
jp
push
inc
mov
mov
cmp
push
fwait
xor
mov
rorb
test
loopne
insb
fbld
mov
insb
ror
enter
mov
insl
mov
into
add
rcll
lds
sub
sub
mov
jmp
add
jns
jnp
push
sbb
sbb
sbb
cld
es
dec
sbb
or
xorl
je
adc
ret
dec
or
or
mov
arpl
sahf
loop
shl
or
mov
mov
mov
jbe
scas
sub
pop
xchg
inc
cli
cltd
dec
cmp
loope
repz
xor
aad
repnz
mov
sti
jb
mov
enter
pop
scas
stos
mov
fwait
adc
mov
sbb
call
pushf
or
mov
push
popa
iret
lods
push
jb
mov
bound
rclb
arpl
mov
std
mov
loope
add
mov
mov
test
sub
adc
sub
xor
iret
and
cs
mov
jmp
js
pop
aaa
xchg
andl
cmp
fsts
cli
jns
xchg
xchg
cmc
cmc
cmpb
lods
js
mov
xchg
cld
iret
inc
loopne
push
lret
fimuls
mov
dec
lods
std
xor
mov
or
loop
leave
jmp
jns
clc
mov
lock
int3
dec
stos
mov
mov
pusha
sub
lahf
arpl
sbb
ret
mov
mull
lods
or
xorl
sarb
xor
mov
out
repz
add
outsb
inc
inc
orl
cmp
nop
push
test
into
inc
lret
push
mov
leave
inc
fstl
add
sub
sbb
add
aam
int
out
xor
js
cmp
out
es
cmp
inc
pop
push
and
fidivl
mov
jbe
inc
lret
mov
outsl
call
outsb
push
test
pushf
or
data16
mov
test
push
sbb
lcall
int3
out
rclb
lds
stos
repz
int3
repz
mov
adc
test
shll
inc
cmp
ds
mov
mov
adc
pop
xchg
push
push
stos
shll
shll
xchg
xchg
outsb
ss
cmp
xbegin
sub
sahf
ret
cmp
jmp
ret
xor
incl
les
loope
jns
xor
shlb
and
xchg
cmp
xlat
add
jmp
add
cmp
xor
mov
out
add
jmp
or
rorb
adc
mov
add
repnz
pxor
fimuls
sbb
xor
cmc
pop
xor
stos
lahf
push
outsl
dec
fidivl
push
call
out
sbb
mov
xchg
and
sub
sahf
inc
lcall
arpl
sbb
mov
cmp
mov
lahf
cmpsl
xlat
repnz
jbe
push
xchg
dec
test
push
shlb
xchg
mov
sbb
sarl
and
sub
push
and
shll
addr16
push
xchg
xchg
mov
jl
xor
inc
test
xchg
sub
inc
mov
or
jbe
int3
mov
call
pop
jns
dec
into
call
ret
pop
and
push
jb
cmp
shrb
or
mov
leave
insb
cmpsb
xor
mov
push
divb
outsl
xchg
stos
dec
pop
mov
into
in
loope
jp
xchg
jmp
cmp
dec
mov
enter
das
or
or
and
sub
call
pop
adc
imul
jo
jle
cmp
sbb
and
jecxz
stos
xchg
xchg
dec
or
xchg
sbb
lret
and
mov
aaa
push
out
pusha
mov
lock
or
mov
sub
and
clc
jl
cmp
aaa
fnsave
xchg
add
icebp
inc
outsl
insl
aaa
xchg
jb
or
jp
addr16
add
js
mov
inc
mov
push
aas
stos
mov
ror
mov
pop
scas
and
popf
test
xor
aas
push
stos
les
and
mov
sbb
leave
push
stos
push
and
mov
cmp
and
out
in
nop
mov
es
xor
ret
mov
fadds
cli
subb
and
xor
inc
into
scas
xor
imul
mov
shll
adc
inc
xor
mov
test
ss
fists
pop
dec
insl
pop
mov
ja
mov
xor
push
push
pusha
popa
xchg
mov
jns
xchg
rcrb
sbb
test
sbb
add
movsl
add
insb
pop
cmp
push
mov
lds
sbb
adc
ljmp
mov
shll
cmp
ljmp
mov
inc
lods
pop
push
xor
inc
and
jns
hlt
cmp
mov
mov
rcll
push
pop
mov
and
push
or
mov
mov
es
int
sbb
lahf
or
dec
jge
mov
add
cmpsb
pop
cli
mov
sbb
test
mov
pop
mov
cmp
out
jecxz
popf
insl
cmp
das
inc
pusha
dec
mov
scas
int
jno
nop
dec
mov
std
in
mov
lea
jnp
idivb
pop
mov
pop
test
add
mov
idivl
subb
pop
add
decl
mov
loopne
inc
mov
xchg
and
cli
mov
jl
into
xchg
fs
jnp
xchg
lret
mov
bndstx
pop
add
ror
mov
mov
or
lahf
sub
mov
jmp
pop
mov
xchg
pop
inc
stos
arpl
sbb
inc
adc
push
call
sub
add
dec
inc
add
ficompl
add
push
movsl
lret
pop
add
lret
mov
int
dec
out
idivb
lock
ret
mov
xchg
cli
fdiv
lret
cltd
outsb
lods
add
aad
stos
or
and
outsb
mov
fwait
lret
pushf
mov
arpl
je
cmp
xchg
fsubrp
pop
xlat
mov
cmp
insb
mov
nop
test
jmp
or
gs
push
nop
push
xchg
mov
int
push
add
and
jle
mov
mov
cmpsl
in
xor
add
imul
pop
mov
scas
pop
icebp
mulb
hlt
mov
push
xor
nop
test
jns
lcall
xor
mov
enter
shll
jg
inc
test
clc
add
lahf
xor
pop
adc
pop
cmp
out
xchg
or
sub
dec
cmp
sub
je
lret
in
cmp
jecxz
je
push
jns
inc
or
pop
daa
bound
pushf
sub
xchg
cmp
xlat
adc
cli
pop
mov
fsubrp
dec
jmp
mov
lea
mov
pop
mov
subl
xchg
jp
cltd
pop
mov
xorb
ja
and
aas
and
cmpl
xchg
push
das
sbb
aaa
int3
jl
outsb
mov
add
fcoml
xchg
or
jmp
mov
and
push
fstl
rorb
das
push
ret
sti
xchg
xor
hlt
dec
sahf
mov
lcall
pop
xor
fldcw
popf
rcl
scas
arpl
repz
adc
xor
repz
jo
mov
ss
rorl
orb
xchg
fisttpl
adc
in
cmp
aad
js
adc
pop
lods
cmp
pop
or
dec
es
js
mov
mov
cmp
add
test
mov
push
lcall
push
cs
sbb
stos
cmp
negb
jg
push
mov
fildll
mov
test
cli
in
cltd
sbb
scas
mov
dec
call
loopne
popa
cmp
xor
jmp
cld
out
cwtl
sub
or
cmp
sub
pop
in
dec
int3
xchg
inc
jle
mov
push
orl
jbe
mov
and
add
ja
fsts
stos
push
adc
dec
inc
mov
lret
or
or
mov
push
dec
sbbl
mov
aad
mov
sbb
xor
sar
out
fcomp
inc
adc
ja
cmp
stos
mov
aas
lcall
push
jbe
cmpsl
pop
out
mov
and
xor
inc
dec
push
adc
add
aaa
cltd
sbb
sbb
lock
arpl
call
sub
xor
mov
pop
movsl
jg
stos
ret
loop
mov
push
aam
in
stc
add
lret
push
pop
arpl
popa
negb
push
and
fcomps
imul
clc
movsl
dec
sub
fldl
rcl
js
xchg
xchg
daa
cmp
addr16
test
test
cmp
and
mov
sub
dec
pop
inc
mov
xorl
mov
sbb
lret
sbb
pop
out
fwait
lret
xlat
inc
scas
and
push
inc
mov
jmp
push
scas
mov
push
lret
repnz
jnp
adcb
pop
mov
pop
sbb
les
ljmp
repz
cwtl
pop
jne
cmpsl
jl
adc
fildl
xor
in
add
dec
sub
and
push
add
xor
or
or
push
loope
stc
std
xor
out
add
mov
inc
push
mov
sbb
ss
subb
jns
loop
mov
loop
in
rorb
out
jmp
ret
push
xchg
std
xchg
repz
mov
sub
in
sarl
xchg
shrl
pop
in
outsb
dec
adc
pop
and
leave
sahf
and
push
ds
ss
test
daa
inc
ljmp
sub
push
xchg
sbb
xor
pop
mov
fucomi
mov
add
test
lret
imul
movsl
in
sti
and
sbb
fcoms
repz
out
stos
f2xm1
sbb
lods
ljmp
rcr
mov
pop
insb
into
roll
stos
mov
mov
popl
push
mov
stos
fdivr
mov
arpl
xchg
mov
scas
dec
adc
ret
dec
mov
push
mov
ficoml
into
xchg
cmp
imul
or
dec
xchg
mov
movsb
roll
sbb
fwait
jbe
adc
xchg
xchg
mov
jnp
mov
fiadds
adc
cmpsb
fisttpl
push
dec
mov
xor
cmc
sbb
imul
dec
add
cmpsl
lea
and
sarb
insb
cmc
xchg
sti
out
sahf
dec
xor
addb
mov
mov
int
inc
repz
mov
flds
fbld
cmp
mov
daa
push
and
int
std
rolb
sbb
arpl
fildll
fcmovne
lods
lret
jno
dec
or
pop
outsl
adc
mov
clc
mov
and
ds
ds
dec
popa
jl
xchg
and
push
cmp
or
push
xchg
mov
sti
dec
add
push
test
shl
ds
repnz
jg
andl
dec
xor
imul
fwait
jp
jns
xchg
aam
rclb
pop
fcomp
sub
lcall
lea
mov
pop
enter
jg
sub
add
add
js
push
lods
pusha
mov
andb
push
scas
sti
test
push
or
or
mov
out
xchg
dec
push
dec
cld
mov
push
or
cmp
add
je
out
mov
mov
push
sbb
pop
dec
in
pop
fiaddl
scas
cld
movsl
xchg
pusha
xchg
xor
ds
xchg
hlt
dec
dec
pop
or
pop
pusha
cmp
lcall
imul
idivl
add
cmp
pop
inc
push
sub
out
fidivrl
mov
testl
test
les
ret
fildl
movsb
push
push
dec
sub
push
mov
adc
adc
jge
add
adcl
jmp
mov
fmull
decb
add
jmp
and
lods
jo
pop
and
cltd
pop
subb
add
insl
cmp
cmpsl
loop
mov
mov
jmp
nop
fisttpl
stos
into
notb
les
dec
test
frstor
xor
mull
clc
pop
push
loope
std
fsubrs
xor
xchg
lahf
add
or
cld
imul
jmp
js
or
lods
testl
sbb
mov
insl
lods
iret
inc
sbb
push
sbb
mov
and
xor
push
jbe
pop
sahf
cmpsl
lods
or
rolb
rorl
mov
sbb
popa
mov
sbb
adc
mov
xchg
test
jb
loop
repz
xor
and
fistl
inc
loop
inc
test
dec
mov
fsub
dec
rcll
xchg
cmp
add
pop
xchg
mov
stc
incl
in
das
shlb
hlt
pop
pop
faddp
aam
inc
ljmp
pusha
jo
xchg
add
mov
mov
sub
ljmp
ds
mov
ret
cmp
ja
iret
mov
scas
scas
inc
shll
ror
pop
icebp
push
add
lock
lahf
in
push
mov
adc
sub
test
cmp
pusha
mov
loop
js
mul
dec
out
and
cmpsl
lahf
mov
push
xchg
push
push
pop
stc
cmpsb
fcoml
mov
push
rcrl
xchg
jge
in
pop
shlb
mov
inc
jg
xlat
int
jl
mov
leave
jle
insl
pop
mov
cld
ret
ljmp
cwtl
scas
dec
fwait
insb
pop
or
sub
jg
jmp
je
add
dec
jg
mov
hlt
push
daa
xchg
mov
addb
stos
dec
jne
outsb
mov
ja
hlt
pushf
push
lret
outsb
dec
ret
xlat
adc
ds
lcall
dec
cmp
mov
insl
movsl
mov
dec
lcall
mov
adc
dec
out
shll
xor
cmpsl
loopne
dec
pop
xorb
sub
lret
inc
add
fwait
and
adc
fdivl
out
std
jne
hlt
add
mov
repnz
adc
and
mov
lahf
in
ret
sbb
popa
jmp
pushf
cwtl
mov
cltd
mov
leave
inc
lret
lahf
out
sti
sbb
pop
xchg
cmp
add
xor
roll
imul
ljmp
imulb
adc
adcl
jbe
popa
iret
enter
xor
xlat
in
mov
insb
jecxz
sbb
mov
das
mov
ds
dec
pop
dec
jecxz
pop
pop
push
ljmp
into
add
or
sub
sbb
test
pop
push
add
fistpl
jnp
test
fstpl
jmp
in
mov
pusha
popa
in
sarl
repnz
imul
lahf
push
hlt
jne
jp
mov
stc
push
dec
icebp
push
mov
mov
xor
cmp
push
jnp
pop
outsl
pop
aaa
jne
movsl
sbb
scas
ss
cmp
sahf
xorb
pushf
fmuls
or
shlb
addr16
mov
lods
rcll
jge
cltd
je
mov
rcr
es
bt
cmp
jbe
mov
ret
dec
push
shll
fadd
dec
xchg
lock
sahf
in
xchg
call
imul
ror
outsb
es
std
push
lret
sub
test
mov
cltd
fdivrs
pop
inc
leave
imul
sbb
int
fucomp
stos
push
out
out
or
out
jmp
enter
addb
lock
mov
cmp
pop
mov
inc
mov
sub
lret
mov
xor
shrl
jp
sbb
inc
dec
repnz
sub
and
fidivs
push
dec
lcall
and
leave
adc
mov
mov
mov
popl
inc
inc
mov
dec
inc
call
sbb
xor
xchg
push
ja
push
jg
mov
fmul
pushf
fstpt
jmp
cmpsl
pop
jmp
cmpsl
inc
push
pop
les
into
push
psllq
les
and
mov
sar
das
rcrl
sbb
dec
jnp
sbb
je
inc
rol
mov
xchg
cld
imul
cmp
stos
hlt
int
cmpsl
ret
mov
cmp
shrb
out
inc
ss
addr16
rcr
rclb
cmpsl
out
lret
mov
pop
cli
ds
cli
push
out
lds
sub
or
jge
popf
cmp
outsb
mov
ljmp
stos
xor
dec
inc
xorl
lret
mov
cmp
jmp
jnp
inc
jno
cmpsb
lahf
xor
mov
icebp
mov
mov
jmp
ficoms
std
xchg
inc
mov
aaa
shll
push
popf
cmpsl
js
js
mov
repz
inc
jg
fimull
adc
mov
call
cmp
pop
push
fadd
jnp
push
inc
push
and
nop
das
jmp
push
es
aad
stc
fimull
inc
repnz
icebp
push
ret
mov
daa
xchg
pop
push
push
sbb
clc
xor
inc
movsl
or
adc
push
aas
imul
int3
arpl
mov
cmc
cltd
xchg
adc
cltd
lret
fs
mov
jl
dec
adc
jnp
add
push
dec
xchg
mov
lea
dec
scas
push
pop
stc
push
adc
jne
stos
roll
jnp
out
xor
cltd
shrl
jmp
jl
sarl
out
imul
ret
inc
jo
inc
adc
pop
add
xor
push
and
test
xor
and
xor
push
int
dec
push
fwait
sub
shrb
popf
loope
sub
cltd
push
leave
jp
or
and
out
cmp
in
jne
inc
sub
xchg
mov
ss
and
add
out
add
inc
test
aaa
and
or
adc
jecxz
mov
mov
loop
ss
ret
hlt
call
xchg
xchg
fists
aad
pop
mov
sub
sti
mov
push
or
and
into
cwtl
mov
xchg
jp
or
pop
imul
mov
mov
out
jbe
and
outsl
in
je
or
sbb
or
int3
outsl
sub
mov
cmpsl
adc
pop
test
ljmp
pop
cmp
jne
lret
cmpsl
stos
push
and
divb
lods
sbb
mov
pop
mov
pop
adc
insl
data16
les
push
in
cmp
test
outsl
cmp
xor
test
mov
jge
in
push
mov
add
pop
aaa
aaa
mov
xorb
adc
mov
mov
addr16
loop
jne
pop
sbb
mov
imul
jle
loopew
mov
arpl
arpl
stos
xchg
in
rcrb
insb
jecxz
adc
fs
jo
xchg
repnz
fistpl
adc
in
sbb
push
jns
mov
jns
mov
mov
push
fdivl
fwait
sbb
cmovne
sahf
test
outsb
shrl
jns
pop
pushf
mov
adc
in
xchg
jl
clc
outsl
cmp
push
out
mov
pop
outsb
add
lods
push
or
pop
les
push
lret
pop
sub
push
js
inc
jecxz
cmpb
cmpsb
mov
mov
add
sbbb
test
inc
cmpsb
push
jbe
inc
ret
fwait
mov
cmp
int3
jecxz
cli
lods
cltd
aaa
rorl
mov
pushf
cmc
mov
pop
fcmovnbe
jb
fnstcw
test
mov
ret
clc
and
jnp
pop
iret
adc
and
outsl
jmp
fwait
push
sub
shrl
xchg
ds
or
outsl
movsl
inc
repz
stos
xchg
pop
ljmp
adc
test
mov
stc
cmpsl
addb
jnp
inc
ret
jne
jg
lds
pop
pop
mov
gs
aad
add
fld
imul
and
loop
mov
push
or
inc
sub
xor
fidivrs
cltd
cmp
add
pop
rorl
add
das
mov
in
add
cmc
daa
cltd
xchg
aas
push
push
cmpsb
jmp
jb
fsubrs
adc
das
adc
test
sub
mov
leave
mov
jb
xor
mov
dec
push
lock
int3
ds
xchg
push
sahf
scas
xchg
call
dec
jbe
and
cmp
in
and
in
ret
sbb
sbb
les
int3
dec
gs
out
jno
fwait
or
xor
vcvtss2sd
dec
dec
stc
or
dec
jl
rcr
lods
shrl
sbb
into
mov
cld
cmpsb
leave
repz
push
dec
pop
ret
sub
sahf
fldt
sbb
call
adc
pop
daa
fistpll
inc
dec
out
xchg
test
dec
add
cmpsb
push
stos
dec
aam
mov
ret
imul
aas
loop
mov
cmp
movsb
mov
dec
cwtl
or
mov
gs
shlb
loope
lods
mov
jp
testb
cmpsl
mov
mov
shr
test
inc
rcrb
subb
call
ficompl
outsl
fisttps
mov
into
jbe
int3
cmp
push
bound
adcl
mov
and
jbe
xor
jg
jo
adc
movsl
add
or
mov
sbb
outsl
adc
testl
faddl
cld
or
or
lods
stc
sbbl
add
cmp
or
nop
xorb
mov
jle
in
sbb
cmp
cs
shrl
adc
data16
sub
mov
and
push
lds
dec
fwait
nop
xchg
leave
and
push
mov
xchg
fists
pop
fsubs
ret
or
push
fisubrl
test
xor
xor
xchg
lods
sub
xor
jb
leave
fwait
lret
sub
sbb
sub
mov
jns
inc
or
popa
mov
push
imul
mov
or
mov
pop
pop
mov
or
lcall
mov
les
cwtl
loope
test
xor
inc
mov
pushf
jge,pn
lock
cmc
dec
and
fmull
mov
daa
mov
inc
jb
insb
mov
jb
push
lds
and
mov
jmp
scas
rorl
sahf
ret
mov
pop
jmp
push
sbb
pop
sub
jge
sbb
push
stos
orb
test
aam
insb
jmp
hlt
cmp
sbb
ljmp
bound
lret
in
pop
add
pop
es
cmpl
std
sub
test
xchg
xchg
ficomps
xchg
fildl
scas
mov
repnz
lea
loope
mov
ljmp
adc
lret
data16
scas
mov
repz
cmc
cmovb
sub
pop
mov
mov
popf
sub
and
imul
xchg
loopne
jae
sub
pop
cli
mov
add
into
repnz
rcrb
ret
add
repz
repnz
and
fdivrp
insb
xchg
pop
outsb
mov
cmp
movsl
cmp
mov
jae
in
icebp
mov
enter
mov
adc
test
addr16
sub
inc
cs
outsl
and
mov
push
mov
icebp
or
inc
ret
or
pusha
cmpsl
jecxz
sti
mov
lock
jecxz
fcmovne
and
loopne
mov
testl
daa
and
out
cmpsl
add
jbe
iret
push
sbb
mov
mov
aad
cwtl
push
pop
push
cmp
mov
or
pop
xchg
js
mov
fistpl
jo
push
fnstenv
stos
xchg
into
xor
insl
dec
mov
aam
in
lret
cmp
add
pop
aam
mov
popf
jle
cmp
ret
mov
dec
push
adc
inc
mov
lcall
or
aad
arpl
pop
fiaddl
rorl
call
pop
adc
aas
xchg
push
inc
outsl
insl
loop
dec
in
add
push
or
pop
and
mov
mov
jp
rcrl
add
add
pusha
mov
dec
ljmp
mov
mov
sub
add
fnstcw
xchg
cli
lds
aaa
adc
dec
lods
push
aam
jle
push
adc
incl
clc
clc
sub
mov
push
mov
das
cmp
bound
jle
push
dec
mov
shl
lods
mov
aas
cmc
insl
out
adc
push
push
pop
dec
cs
jbe
inc
xchg
jb
ds
pop
dec
test
mov
lret
xchg
sub
xor
stc
cs
daa
fidivs
loope
dec
orl
adc
movsl
inc
cmp
add
inc
pop
test
xor
iret
xchg
arpl
cmc
xorps
push
adc
jns
sub
mov
cmp
in
loop
jl
mov
daa
inc
dec
sub
pop
push
xor
movsb
scas
scas
xchg
jb
test
les
ret
cmp
cmp
dec
imul
bound
pop
insb
sub
or
into
dec
adc
fldenv
leave
dec
mov
xchg
inc
sub
stos
xchg
mov
xor
pop
jl
cmc
les
ss
jb
xchg
jno
fwait
out
repz
loopne
ja
testl
mov
lea
add
cmpsb
add
xchg
pop
or
xor
shll
fdivrs
push
dec
jbe
mov
or
rcrb
test
jp
lcall
jbe
or
jb
mov
lret
loope
and
ficompl
cli
push
mov
dec
dec
adc
jl
movsb
lds
scas
sbb
mov
std
push
fsubrl
pop
adc
sbb
xchg
lds
in
arpl
pop
sub
mov
mov
test
xor
or
out
test
pop
loope
shrl
daa
icebp
pop
adc
xchg
sub
int
xchg
movsbl
fwait
push
mov
mov
adc
push
jl
sub
dec
pop
cmpsb
cmpsl
and
pop
movsb
leave
shl
enter
daa
pop
and
sahf
xchg
test
into
sub
pushf
loop
add
jo
fldt
pop
std
in
pop
fbstp
inc
lock
test
mov
jb
nopl
xchg
cmc
xor
pusha
inc
pop
xchg
das
in
push
mov
mov
fcmovnb
inc
test
pop
adc
xor
xchg
push
sub
jge
push
ret
bound
enter
imul
adc
and
pusha
cli
pop
mov
cli
cmp
in
mov
loope
add
sbb
and
mov
adc
je
pop
pop
les
lret
adc
xor
xor
leave
shlb
mov
shr
sub
mov
jle
push
das
inc
mov
add
push
cltd
jmp
and
lock
lret
mov
push
xchg
inc
lahf
lahf
jp
push
cs
outsl
mov
mov
repnz
sbb
cmp
in
push
adc
push
mov
out
fcompl
pushf
mov
mov
fsubrl
out
push
ss
jg
push
js
cmp
push
test
fisttpl
or
add
adc
cwtl
add
test
shlb
jae
arpl
and
xchg
pop
add
xchg
gs
pop
mov
aam
push
shlb
stos
push
mov
int
pop
fs
scas
enter
cmp
xor
aaa
repz
cmp
mov
xchg
enter
fsub
insb
sbb
leave
push
lods
sahf
jecxz
nop
sbb
fldl
leave
call
sub
or
mov
hlt
push
dec
jl
mov
adc
mov
ret
ja
and
cmp
pushf
ds
orl
fcoml
xlat
adc
jnp
or
adc
or
add
jmp
adc
xor
jecxz
dec
jb
jp
push
bound
mov
imul
fs
pusha
xchg
sub
push
dec
push
inc
ficoms
sarl
lods
stos
and
iret
lahf
add
sbb
cmp
int3
jmp
shl
test
pop
xor
int3
stos
ljmp
mov
and
mov
dec
or
cmp
cli
addr16
cs
mov
ljmp
jle
jnp
cmp
cli
lahf
in
mov
push
xchg
adc
xchg
fdivrp
cli
movb
stos
push
dec
xchg
sub
lods
aas
adc
sub
pop
cmp
loopne
cmp
lea
fisubrl
movsb
dec
out
xchg
iret
push
sub
sbb
scas
push
cmpsb
lods
jo
cmc
pop
pop
sub
cmp
or
mov
jg
pushf
je
xor
stos
out
push
sbb
ret
movsl
dec
dec
mov
sbb
xorb
addl
cwtl
inc
sti
in
loop
xchg
add
dec
ljmp
data16
add
mov
xor
add
dec
mov
cld
xchg
push
push
mov
mov
mov
lea
adc
add
cmp
incl
shl
sub
lret
les
inc
push
lock
mov
sbb
imul
insb
mov
mov
jmp
imul
gs
data16
out
or
mov
fbstp
adc
xchg
icebp
fdivs
add
dec
cmp
test
clc
iret
aas
cmc
shl
shll
jb
push
sub
inc
push
sub
addb
and
es
lret
aad
add
mov
inc
in
add
mov
jg
cmp
scas
pop
insl
mov
jmp
rcrb
cmpb
enter
inc
arpl
sbb
adc
and
jns
add
das
mov
sarb
dec
andb
sti
mov
cwtl
push
fisubrl
rclb
push
bound
sub
jle
in
cmp
xor
xchg
mov
hlt
lret
sbb
dec
daa
sbb
pop
leave
clc
adc
cltd
xchg
std
inc
inc
sbb
out
pushf
inc
lock
stos
stos
fldenv
aaa
sub
jg
sub
xchg
jg
xchg
inc
push
dec
inc
clc
aaa
icebp
pop
jmp
xor
lock
or
sbb
mov
jbe
aas
fwait
and
cmp
stos
int3
cmpsb
adc
movsl
leave
rcrb
jecxz
mov
mov
and
pop
sbb
and
cmp
pop
add
cmp
cmpsl
lret
jns
das
ret
cltd
cmp
adc
scas
xchg
mov
dec
jne
push
inc
xchg
pop
cld
jbe
out
je
push
dec
add
test
mov
push
add
mulb
push
sub
loop
sub
loopne
fildll
rclb
aad
mov
fs
pop
push
adc
or
cmp
inc
andb
enter
push
mov
outsl
xchg
mov
fdivrs
xchg
mulb
popa
out
push
stc
sub
test
fisubrl
xor
bound
mov
inc
xchg
mov
icebp
icebp
shlb
lea
xor
pop
or
cmpsb
test
pop
clc
ss
xchg
bound
bound
dec
ljmp
insb
pop
push
lret
iret
push
xor
sahf
dec
shll
daa
xchg
push
jmp
rorl
cmc
pop
addr16
xchg
mov
ja
icebp
insb
adc
pop
bound
lock
daa
adc
cld
pop
sbb
dec
aaa
lret
ja
out
or
shrb
inc
repnz
into
cmp
idivl
dec
adc
push
sbb
and
xor
xor
sti
and
mov
pop
mov
pop
cmpw
jns
pop
lret
out
or
dec
loopne
ret
push
lods
inc
pop
dec
mov
scas
inc
addb
andb
lret
cmp
and
xchg
in
cmp
clc
inc
add
push
mov
sub
push
seto
pop
adc
cmp
mov
movsb
shll
sbb
fldenv
setg
addb
add
sbb
inc
mov
ret
sbb
data16
mul
sbb
cmpsb
add
push
pop
push
or
enter
pusha
pop
sbb
push
push
movsl
adc
lods
mov
js
add
sub
push
inc
mov
es
and
or
cmp
js
call
stos
in
mov
mov
mov
stc
sub
cmpsb
test
mov
out
xchg
sarl
or
adc
mov
xor
sarl
mov
adc
xchg
mov
xchg
stos
mov
adc
add
add
lds
in
ds
mov
pop
seto
out
cwtl
jmp
ret
out
mov
xchg
xor
mov
aad
mov
jecxz
sub
pusha
in
mov
lcall
fnstcw
jmp
stc
or
ds
inc
call
dec
jecxz
ss
push
inc
dec
jbe
mov
cmp
mov
aas
push
adc
popa
aam
dec
jae
sbb
xchg
roll
cs
or
popf
sahf
cltd
and
rclb
sub
je
add
nop
add
popf
jl
lcall
repnz
aaa
clc
pop
subl
mov
mov
sub
sub
xchg
xchg
xchg
xchg
dec
lea
inc
inc
or
or
jl
jg
pop
or
imul
mov
lcall
inc
clc
or
adcl
dec
movsb
out
mov
aas
xchg
jle
clc
stos
mov
pop
xchg
cmp
xor
sbb
dec
test
add
xchg
pop
and
cltd
push
cmp
imul
pop
js
int
mov
insb
dec
shlb
pop
jne
pop
into
pop
psubq
aaa
sbb
and
in
mov
cmp
jno
out
enter
loopne,pn
cli
loope
add
jecxz
sub
hlt
stos
mov
xor
push
mov
imul
stc
in
dec
je
mov
addb
cmp
sahf
fmuls
fsubrs
mov
cmp
int
add
xor
mov
ss
xchg
adc
push
mov
mov
push
dec
sbb
push
xchg
pusha
fsts
rcl
pushf
xchg
adc
jne
loope
pop
into
xor
test
and
int3
push
aad
add
xchg
hlt
leave
adc
xorl
in
in
orl
cmp
shlb
mov
lods
inc
std
mov
sbb
xchg
fbstp
cmc
sbb
aam
loope
add
cld
mov
or
popa
pop
inc
aam
out
int
dec
bts
or
or
aas
dec
loope
push
and
mov
mov
je
xchg
adc
lock
inc
adc
cmovae
mov
sub
jo
dec
mov
aad
add
pop
pushf
fistpll
or
sbb
xchg
sbbb
lret
sbb
xor
mov
push
ret
pop
int3
int3
mov
mov
mov
xor
fs
js
cmp
mov
ljmp
sbb
aaa
cmp
sub
jg
rorl
ret
xor
lods
fcmovne
pushf
pop
pop
inc
lret
dec
cs
sub
sbb
mov
jecxz
rorl
lea
pop
test
add
mov
xor
fidivrs
scas
jns
or
cwtl
ficompl
les
cmpsl
lea
cmp
adc
jle
jle
stos
cmpsb
loop
ficompl
icebp
fbstp
jae
cmpb
pavgb
in
sbb
mov
mov
arpl
mov
jb
inc
jmp
ror
jp
xchg
mov
inc
lret
int
and
fbstp
fadds
in
inc
cmp
dec
add
mov
ja
sbbb
icebp
icebp
xchg
push
and
sub
or
shr
les
adc
fstps
push
sbb
and
in
mov
sub
mov
pusha
jle
call
lods
jb
dec
mov
and
mov
shrb
adc
out
xchg
js
inc
or
sbb
xchg
sti
std
jae
leave
shr
cmpsb
xlat
mov
aad
pop
fildll
fdivrs
stos
std
lahf
fwait
lcall
or
idivb
mov
jb
into
cli
and
jecxz
loopne
movsl
mov
sub
stc
divb
test
jo
setp
aas
icebp
gs
shlb
scas
push
mov
loopne
push
stos
mov
add
or
sub
push
and
test
test
mov
sbb
push
popa
ret
dec
call
push
in
xchg
test
jne
out
jns
fst
xchg
loopne
sbb
push
jns
fsubrp
xlat
sub
mov
lock
push
jnp
jmp
fists
push
pop
pop
jbe
outsb
and
imul
xchg
imul
loopne
sbb
aam
adc
shr
ret
movsb
adc
add
cltd
mov
sbb
cmp
loop
test
push
bnd
test
test
lahf
cli
or
test
bound
int3
es
mov
mov
jg
or
mov
loopne
idivb
mov
mov
stc
aaa
aad
rcrl
imul
leave
push
mov
mov
stc
inc
xchg
fwait
dec
jae
iret
jne
cs
mov
push
inc
pushf
adc
mov
mov
xchg
lods
or
mov
leave
or
lret
aaa
cli
test
add
pushf
in
pop
les
sub
inc
lcall
jbe
ficompl
fisubs
cmpb
jo
sub
test
dec
scas
mov
inc
jbe
movsl
mov
outsb
and
int
lods
lcall
push
cmp
incl
jbe
xor
lods
hlt
xchg
adc
and
andb
and
cmp
les
sysexit
wbinvd
jmp
mov
sbbl
out
mov
cmp
mov
mov
xrelease
insb
out
sbb
idivb
jns
iret
stc
sub
pushf
jne
or
shll
inc
xlat
sahf
and
and
sbb
pushf
dec
repnz
mov
inc
cmp
cmpsl
mov
sbb
jecxz
hlt
add
inc
cmp
data16
inc
xor
pusha
arpl
bound
mov
aad
lds
add
ret
pop
stos
sbb
xchg
repnz
xchg
mov
pop
sub
fldcw
sbb
repnz
push
xor
push
adc
or
fstl
jns
fwait
ss
jle
out
cwtl
inc
xor
inc
push
ljmp
stos
stc
fs
sub
imul
ds
mov
inc
or
cld
in
jae
jmp
pusha
dec
dec
mov
outsl
pushf
or
loope
jmp
aad
xor
adc
adc
pop
shll
sarb
mov
pusha
into
mov
js
imul
test
xchg
pop
mov
cwtl
mov
scas
xchg
dec
sub
cmp
fidivl
insb
push
rclb
inc
inc
fdiv
adc
jns
sbbb
mov
outsl
std
adc
insl
les
jns
and
loope
jnp
cmpsl
test
cmp
popa
jg
imul
cs
xchg
ficoml
dec
add
sub
repz
ljmp
jmp
adc
insl
fisubrl
or
in
in
sbb
mov
jo
or
jge
inc
jmp
int3
cmc
push
fsubr
xor
jno
or
imul
jmp
inc
push
ss
jno
sahf
ror
shll
push
or
pushf
shll
adcl
lea
mov
lods
sub
lret
outsb
and
mov
adc
in
jae
inc
dec
scas
dec
xor
inc
and
iret
into
cmpsl
xor
arpl
mov
sahf
mov
jno
pop
inc
pop
xor
mov
lods
jne
rclb
mov
jp
xor
xor
dec
andl
icebp
das
push
movsb
test
ret
hlt
ret
imul
addl
out
pop
stc
sbb
cld
pop
popf
pop
movsb
add
sbb
or
adcl
pop
sub
add
lock
lock
cmc
xchg
int
jo
push
rclb
fistpl
jle
rol
inc
xor
add
push
lcall
fdivr
push
mov
cmc
rcrl
mov
clc
mov
pop
lahf
mov
adc
ja
jge
enter
je
jp,pn
movsl
or
push
add
incl
mov
mov
pop
jmp
inc
push
pop
lcall
hlt
add
push
mov
int
inc
std
call
adc
adc
pop
out
das
push
js
aaa
sbbb
in
cmp
adc
pop
xor
cmp
ret
sti
mov
mov
sahf
insl
pop
stos
mov
ja
push
dec
inc
outsl
mov
push
mov
add
jl
mov
sub
repnz
mov
addr16
mov
sbbl
fcompl
jecxz
lds
enter
pop
dec
mov
or
into
cmp
pop
test
nop
call
jno
jns
fsubs
pop
fiadds
pop
es
sub
xorl
sbb
sti
sub
cli
ret
pop
adc
fs
xlat
push
nop
lret
pop
enter
mov
outsb
pop
movsl
in
adc
fisttps
clc
icebp
cltd
jae
mov
test
jp
inc
mov
dec
in
mov
out
sbb
push
or
cmp
and
mov
int
stos
pop
cwtl
pushf
sub
mov
cld
inc
fdivr
xlat
in
jbe
mov
ljmp
dec
pusha
fwait
scas
jge
movsb
dec
dec
cmp
shll
mov
cmc
in
in
jno
jnp
dec
imul
xor
insb
push
shrb
lcall
bound
insl
jb
and
call
lods
imul
add
ret
push
ret
push
add
sbb
jge
xor
movsb
xchg
cwtl
mov
and
insb
cmpb
cmpsb
and
fbstp
aaa
aad
sub
inc
int3
mov
pop
jbe
sti
in
sbbl
push
xchg
fidivl
shlb
inc
lods
psubb
icebp
popa
fadd
jecxz
nop
jo
sbb
int3
invd
in
insl
xlat
sub
cmp
sti
xchg
flds
in
xor
test
dec
xorl
insb
xchg
inc
repz
ret
out
ret
cwtl
xor
xchg
jae
loopne
imul
enter
fxch
insl
addr16
popf
dec
inc
dec
imul
dec
in
test
ficomps
push
push
jbe
xorb
push
jecxz
or
cmp
xchg
push
stos
push
push
jb
out
inc
aam
sub
ret
mov
and
out
fnstcw
cmovo
fs
lret
cmp
lds
ss
daa
adc
popa
and
push
mov
dec
je
in
enter
or
les
sbb
adc
and
test
dec
rcll
dec
out
call
jl
sbb
jo
push
shrl
push
ljmp
scas
int
test
mov
aad
cmp
mov
and
fs
xchg
fs
and
mov
sub
loopne
inc
sub
int
cmpsl
mov
leave
xlat
ds
lret
lcall
mov
jb
dec
and
xor
notl
leave
xchg
sbb
or
mov
rorb
leave
mov
adc
pop
dec
adc
cld
push
jp
jbe
mov
pop
int3
rcrl
xlat
push
and
imul
cmp
sahf
aaa
xlat
dec
insb
aam
xchg
xor
dec
push
mov
xor
jae
ficoml
adcb
jecxz
cmp
sbb
mov
mov
cmpsb
inc
dec
das
testb
gs
sbb
sahf
jo
mov
sub
jecxz
test
mov
bt
adc
push
push
xor
stc
xchg
ja
cmpsl
cmp
insl
cmp
scas
pusha
sarb
adc
jmp
movsl
xchg
push
mov
pusha
inc
roll
or
sub
jecxz
add
adc
jecxz
cwtl
aad
jecxz
cmp
pushf
mov
pusha
aaa
push
daa
nop
int3
nop
cwtl
int
pop
loope
and
sbb
add
sbb
mov
xor
xchg
xchg
jae
mov
inc
les
clc
sti
pop
inc
adc
aad
dec
mov
add
das
mov
mov
push
in
fs
pop
inc
mov
and
dec
ficoms
fsubp
shlb
test
xor
pop
xor
jbe
inc
das
loopne
push
fistpll
lret
loopne
or
mov
ret
or
movsb
adc
cmp
cmpsb
dec
dec
loopne
dec
insb
loop
popf
std
jle
inc
sar
out
les
adc
sti
cmp
mov
jle
add
into
and
and
shrl
in
push
lods
push
xchg
xchg
pop
inc
cmc
mov
cmpsb
jl
pop
rcrl
add
xchg
mov
fldenv
pop
or
xchg
shll
rcrl
dec
cmp
outsl
pop
rorl
cmp
cmpsl
sbb
cwtl
in
sbb
mov
pusha
xchg
or
sub
cwtl
push
jge
rcrl
cltd
dec
adc
nop
mov
mov
inc
jge
push
jp
fldt
outsl
fdivrl
adcb
std
and
push
rolb
lahf
jecxz
test
sub
stos
loop
cmp
xor
xor
aas
leave
adc
xchg
mov
sbb
mov
mov
lods
cmp
adc
mov
nop
xor
int
in
jg
lea
inc
adc
imul
sbb
aas
pop
lods
ljmp
ljmp
cmp
jmp
dec
je
xchg
fisttpll
les
cmp
loope
jb
pop
lock
and
jb
popf
sti
sub
mov
cmp
mov
imul
dec
cli
sarb
aaa
mov
outsb
sub
arpl
rolb
adc
scas
icebp
push
mov
fiaddl
repnz
or
xchg
sub
test
lock
adc
sbb
nop
mov
sub
test
test
dec
sub
sub
mov
pop
lgs
fidivrl
stc
lahf
jno
xor
aas
jg
cmp
int
out
pop
push
and
roll
cmpl
sub
xchg
xor
mov
gs
cmc
xchg
xor
or
adc
xchg
pop
mov
fdivrl
stc
imul
lea
xchg
sbb
test
mov
loope
cmpsb
inc
rcrb
and
fwait
js
inc
pushf
inc
loop
shrb
clc
pop
test
push
sahf
xchg
lods
movhlps
pop
inc
mov
cmp
push
test
adc
nop
movsl
xchg
das
mov
sub
or
push
jecxz
ljmp
mov
inc
fdivrs
movsl
shll
or
pop
jp
xor
xor
and
ds
jne
rcr
fdiv
lea
pushf
add
dec
mov
pushf
lea
inc
daa
adc
lods
popa
leave
lret
iret
outsb
clc
pushf
mov
xorb
adc
push
aam
movsb
jp
xor
push
jne
cmp
add
adc
mov
inc
dec
mov
incb
fstsw
es
out
rcrl
cmp
and
mov
call
sahf
pop
sahf
jno
fxch
sub
hlt
subl
sbb
and
in
jmp
xchg
popf
pop
pop
jne
cmp
cmpl
dec
lds
cmp
and
cmp
xchg
fimuls
xchg
mov
push
push
pop
inc
push
lcall
mov
sbb
sbb
scas
cmp
pop
test
or
jmp
inc
jg
mov
aaa
pop
jno
dec
pusha
mov
clc
add
dec
pop
nop
fstpt
fs
stos
pop
in
adc
or
fwait
ret
enter
mov
push
mov
gs
sub
lret
mov
out
dec
jle
lahf
es
mov
outsb
stc
popf
hlt
ljmp
call
loop
leave
in
cvttps2pi
insb
nopl
movsb
inc
mov
sub
fcomps
mov
mov
mov
mov
mov
fucom
cmp
xchg
jg
sbbb
inc
mov
sub
out
pop
cmp
cmp
icebp
dec
and
adc
mov
sub
gs
or
sub
pop
test
or
sub
hlt
ss
xlat
out
sbb
jo
imulb
stos
repz
and
sub
rcll
sbb
sub
ret
mov
imull
stos
outsb
jb
shl
imul
out
pop
idivl
mov
test
mov
icebp
cli
pop
fidivrs
mov
or
jne
je
fstpl
push
mov
or
inc
adc
enter
cmc
adc
scas
jne
sub
dec
adc
jno
xchg
add
outsl
insb
mov
mov
jne
outsl
je
sub
sbb
inc
mov
cmp
fistpl
repz
mov
mov
add
xchg
imul
jge
outsl
xorb
scas
sbb
rcr
lret
mov
imul
mov
insl
jmp
or
test
lret
sbb
shll
xchg
dec
sub
push
icebp
nop
inc
fs
mov
imul
cmp
bound
in
mov
sahf
sbb
pop
cmp
adc
sub
pop
xchg
es
andb
jns
cmc
stc
sub
jge
cli
lods
push
inc
or
outsl
jb
mov
xor
out
inc
sbb
jg
jnp
mov
outsb
mov
into
mov
call
mov
mov
mov
ficoms
sbb
clc
leave
push
pop
jmp
mov
push
jae
mul
and
insb
fldenv
dec
or
mov
inc
push
jp
and
fwait
sbb
sbb
push
mov
inc
call
repnz
ret
aad
leave
sub
mov
xor
daa
movsb
cmpsl
mov
nop
sahf
std
adc
pop
xlat
cmp
push
push
xchg
jno
jmp
rcll
and
cmc
lahf
mov
aad
test
xchg
in
cmpsl
inc
aad
sub
and
inc
pusha
inc
inc
fdivl
sbb
aad
mov
movsb
pop
mov
das
xchg
aaa
iret
pop
scas
icebp
das
pop
mov
mov
cmc
add
xchg
shr
mov
orl
ss
lock
int3
clc
fldl
test
dec
or
movsb
adc
lcall
scas
cmp
stc
mov
jecxz
pop
shll
cmp
adc
iret
sbb
adc
dec
pop
jecxz
sub
lods
xor
ja
js
push
aam
cmp
lea
fisubl
and
dec
out
adc
add
out
sbb
jge
shrb
pop
stos
mov
js
and
icebp
or
adc
mov
orl
xchg
jl
mov
jb
lret
test
in
stc
add
and
xchg
nopl
mov
imul
int3
sub
movsb
sub
out
pop
adc
decb
in
movsb
out
fnsave
xchg
inc
pop
pminub
cmc
push
pop
cmp
sub
xor
xchg
test
fbstp
cmpsl
jmp
or
std
adc
sub
mov
std
xchg
sub
push
push
or
jmp
adc
and
sahf
adc
jne
stos
sbb
movsl
push
test
xor
xchg
je
in
notb
fdivrl
lret
lret
insb
inc
mov
repnz
cmpsl
inc
subb
mov
mov
cmp
add
dec
addr16
out
je
jo
jl
and
cmpsb
jp
or
sub
or
jnp
jbe
int3
cmpsb
lret
mov
ja
arpl
push
cld
inc
imul
xchg
sbb
into
push
scas
pop
push
xor
adcl
into
fadd
dec
in
aam
loopne
add
add
jbe
test
mov
lods
inc
pushf
adcl
rcrl
dec
mov
test
add
call
or
negl
mov
into
xor
add
jl
xchg
mov
fsts
sahf
in
lahf
scas
jne
jmp
mov
mov
leave
push
imul
pop
ret
daa
push
dec
push
aam
push
push
lock
or
adc
clc
pop
test
scas
aad
mov
lahf
rcll
sbb
adc
push
jbe
fidivs
aaa
fs
pop
sub
mov
mov
ljmp
xor
data16
cld
inc
stc
dec
addr16
cld
pop
fidivrs
daa
fistpll
dec
mov
jnp
xchg
add
xchg
lds
push
int3
mov
add
fdiv
xorb
add
roll
xchg
jo
cmp
cld
and
cmp
and
shrl
push
xor
popa
add
cs
push
sets
insl
pop
test
repz
cld
inc
shlb
clc
imul
or
xchg
lods
and
cmp
xor
jmp
jb
jne
sbb
jmp
mov
lret
jl
pop
sbb
je
xchg
and
movl
mov
fistps
adc
out
mov
mov
arpl
sub
cmp
dec
out
cld
sbb
popf
sbb
or
mov
icebp
inc
inc
jbe
sti
cltd
ds
cmc
inc
int
rorl
dec
mov
subb
out
cmpl
ja
jle
aam
push
je
mov
movsl
xor
lret
adc
push
mov
shlb
add
mov
imul
pop
nop
fdivl
cld
and
push
add
mov
shrl
sbb
ficompl
fidivrs
push
jb
enter
jae
ret
jl,pn
xor
fimuls
ds
push
into
inc
fcmovnu
mov
dec
pop
aaa
ret
adc
fst
arpl
dec
fucomp
ja
cld
cmp
sbb
test
pop
movsl
lret
cmp
pop
xor
call
mov
pop
sbb
out
jbe
push
addr16
jb
sbb
decl
xchg
lods
cld
mov
scas
xchg
mov
outsb
ds
ret
cli
and
lret
push
ret
push
pop
ret
ficoms
cmp
es
hlt
mov
sarl
out
ret
lock
pop
lods
jno
inc
xor
mov
aaa
jl
lds
je
mov
push
mov
popa
xor
testl
jb
cmpsb
stc
call
add
insb
lods
push
adc
inc
jg
test
scas
add
inc
pop
nop
jno
xor
jmp
mov
jb
aam
ljmp
jl
aad
aam
in
lds
mov
test
loop
lods
mov
ret
mov
shll
popf
sbb
inc
ficoml
and
test
out
mov
sub
stos
xchg
fldcw
out
sub
lret
inc
neg
popa
pop
cmpsb
in
mov
in
xchg
out
iret
rcrb
dec
push
xor
sbb
push
dec
pop
in
mov
call
je
cmpsl
insb
loopne
or
jnp
jb
push
mov
fcoms
inc
push
cli
dec
push
xchg
dec
push
test
paddusb
in
adc
inc
and
add
fisubl
cmp
insl
aam
add
sahf
sub
jmp
stc
push
mov
popa
aad
mov
cmpsl
sub
xor
push
and
repnz
mov
call
pop
push
lods
xor
xlat
xor
xchg
jle
js
push
cltd
jle
fdivrs
mov
cltd
in
int3
arpl
mov
cmp
jae
sti
fs
xor
aad
js
and
xor
push
roll
in
push
outsl
add
ficompl
stc
out
shl
clc
jno
jmp
imul
dec
xor
fcoml
fnstcw
jns
pop
mov
rclb
insb
jae
sbb
dec
clc
inc
mov
dec
mov
arpl
rolb
cltd
dec
adc
mov
lods
iret
cmp
xchg
inc
sbb
adc
das
push
std
stos
cmpsl
sub
aaa
sahf
stc
add
jne
stos
ja
mov
jb
xor
jb
or
push
pop
xlat
xchg
xor
clc
mov
pop
jne
cmp
pop
shll
inc
mov
jmp
push
leave
xor
aad
jle
scas
or
push
and
add
dec
pop
enter
pop
fnstcw
push
cltd
outsl
shrb
test
sarl
arpl
cld
pop
adc
inc
ss
pushw
sbb
aad
mov
loop
mov
enter
fnstcw
push
testb
outsb
int
bnd
add
sbb
aad
pop
ror
out
test
xchg
fstp
enter
in
add
push
in
aam
mov
js
mov
jbe
sub
mov
out
push
adc
rorl
incl
popf
sub
lahf
add
and
aas
mov
mov
das
ss
inc
cltd
jg
sub
lock
jbe
shl
imul
sbb
inc
xlat
jne
and
push
sub
int
sbb
or
mov
sbb
jb
arpl
mov
adc
mov
mov
jo
mov
dec
jg
popa
or
sub
pop
cmp
xchg
cmp
dec
add
sub
lods
add
inc
clc
decb
and
dec
scas
pushf
rclb
mov
mov
aam
lcall
lea
sbb
ja
dec
dec
stc
in
sbb
push
ja
inc
xor
ret
and
lcall
dec
jnp
pop
fmul
push
mov
sbb
stos
sbb
and
mov
nop
mov
sti
iret
mov
fsubs
mov
repnz
mov
jns
xor
mov
mov
pusha
xor
dec
inc
inc
cmp
lods
xchg
mov
add
mov
and
jbe
mov
imul
inc
xchg
jnp
mov
sbb
adcl
adcb
addl
test
pop
adc
xor
addr16
aad
inc
fstl
nop
mov
inc
adc
icebp
jle
xchg
cmc
sub
aam
out
push
cld
ret
add
rcrb
xor
jg
cltd
outsl
fbld
mov
xchg
imul
dec
xchg
xchg
pop
jle
jns
lods
popf
hlt
js
ds
add
sbb
cwtl
lret
push
push
test
push
pop
push
jo
ret
push
ret
push
insb
imul
icebp
rcl
or
in
xor
or
dec
xchg
mov
xor
and
cli
imul
fisubs
push
scas
sbb
lea
rclb
inc
add
cmp
dec
xchg
out
and
pusha
cwtl
int3
add
mull
adc
lahf
or
sbb
or
daa
in
lods
or
imul
mov
sub
in
xor
fmuls
jl
aad
negb
xor
sbb
test
xchg
xchg
scas
imul
cwtl
or
daa
push
xchg
ret
adc
and
and
dec
inc
fistpl
mov
data16
push
mov
mov
std
inc
cmp
loop
lock
jg
fistpll
loope
popa
dec
push
jg
xchg
cld
cmp
jg
mov
stc
adc
mov
int
pop
cmpsb
and
lret
faddl
jge
out
ret
ret
sub
es
inc
mov
dec
xchg
lds
push
inc
xor
pop
ret
shll
pop
or
cmp
leave
je
scas
stc
insb
icebp
sbb
popf
outsb
jne
jo
outsb
push
shlb
or
repz
inc
fbstp
lret
or
mov
test
popa
jg
push
sub
and
mov
mov
loopne
out
adc
xchg
in
pop
jmp
xchg
xchg
test
push
pop
dec
mov
and
jl,pn
xlat
dec
pop
or
dec
jmp
xchg
add
mov
xchg
ror
sbb
test
adc
mov
cmp
ficomps
bound
fdivs
cmp
sahf
lcall
pop
cmpsl
mov
je
push
pop
insl
xor
popa
xchg
aas
orl
pop
fwait
ja
ret
jns
and
add
stos
divl
sub
faddp
add
outsl
xor
push
lods
rclb
outsl
ret
clc
cmc
sub
stc
out
mov
cmp
add
cmp
cltd
add
cltd
sbb
loope
pop
test
sub
jne
loope
sub
or
aam
mov
mov
add
pop
out
jae
dec
movsl
add
dec
xchg
decl
test
sbb
popf
es
push
jnp
and
in
push
xchg
dec
pusha
dec
sarl
adc
scas
mov
faddl
rol
std
sbb
mov
sub
cmp
pop
clc
loopne
aad
fiaddl
jmp
mov
or
dec
cmp
mov
pop
hlt
lahf
aad
outsb
sub
aaa
dec
imul
xor
addr16
inc
lahf
cmp
cld
rcrl
fld
js
pushf
data16
mov
mov
push
addb
xchg
test
xchg
enter
push
add
fistl
mov
cmp
add
mov
add
outsl
pop
fs
xor
mov
pop
push
xlat
ljmp
dec
pop
stos
aam
mov
clc
gs
pop
in
mov
incl
iret
leave
sbb
dec
loope
repz
jmp
cli
jge
sbb
mov
test
adc
outsb
lcall
addr16
pop
sub
ret
movsb
cwtl
sub
into
adc
cmp
cmpsl
lret
lret
sub
cmpsb
cli
fisttpll
push
js
cmc
fdiv
fucomip
imul
xor
add
dec
mov
repz
nop
icebp
popf
dec
loop
xchg
insl
int
push
dec
pop
inc
ljmp
xor
shlb
aaa
cmp
xor
jae
xlat
dec
test
mov
mov
outsl
jl
inc
dec
andb
push
and
push
pop
rcrl
lea
outsl
jne
jge
negb
in
mov
cmp
or
adc
dec
sar
popf
scas
adc
xchg
loope
bswap
mov
ret
ljmp
fsubr
popf
mov
adc
dec
pop
iret
xchg
dec
mov
cwtl
scas
dec
stc
jae
jl
stos
xor
pop
or
imul
std
icebp
xor
push
jmp
fdivp
mov
ja
push
dec
fisubl
xchg
daa
ja
inc
cmc
fwait
xchg
pop
loopne
in
dec
cmp
inc
pop
mov
jp
xorb
adc
and
scas
cmp
mov
push
xchg
xlat
push
mov
jne
mov
xor
loopne
dec
cmp
sbb
jbe
lods
adc
sbb
enter
push
sub
in
push
dec
sub
mov
ret
sbb
mov
lock
out
mov
pop
or
and
cmp
add
enter
ss
and
loopne
out
std
in
iret
arpl
sbbb
jle
push
cld
sbb
scas
negb
push
xor
shlb
pop
and
faddl
loope
nop
ret
push
cmp
stos
push
ss
mov
fldl
cmp
movsl
shrb
xchg
lods
xor
rorb
mov
add
mull
aaa
dec
xchg
lret
adc
jecxz
test
jne
and
push
enter
rol
testl
into
idivl
xor
jo
and
lret
mov
xor
pop
jbe
sbb
xchg
test
orb
hlt
sbb
add
in
pusha
in
xchg
and
push
mov
push
or
dec
cmp
aam
mov
sti
adc
repz
mov
xor
add
adc
adc
mov
das
cmp
test
in
mov
in
jo
dec
xorl
lock
ret
das
pop
add
push
hlt
jg
call
jbe
mov
pop
js
fbstp
sbb
sbb
push
pop
push
notb
cmc
rolb
filds
pop
popa
mov
or
sub
std
adc
into
mov
data16
stos
mul
in
mov
shll
sub
pop
jmp
hlt
das
lods
insl
cmp
push
pop
stc
pop
mov
jns
es
add
repnz
je
cmp
sub
inc
fwait
imul
xchg
sbb
rorb
hlt
subl
in
mov
mov
xchg
test
jle
lods
aad
jo
inc
sub
sub
repz
fcoml
nop
aad
jo
enter
add
add
add
divl
sbb
add
sub
les
test
mov
arpl
loope
cmp
std
cmp
int
sbb
jo
mov
and
std
fs
scas
cmp
xchg
sub
jns
adc
sub
xchg
pop
scas
sahf
adc
outsl
or
test
cmpsl
or
fcoml
sti
and
sbb
mov
sahf
outsl
ds
mov
mov
xchg
jbe
fsubrl
push
mov
mov
fwait
mov
inc
hlt
inc
dec
mov
pop
sub
mov
daa
fidivrl
int3
fdivs
popa
jnp
jge
push
sub
xor
fisubrs
lret
into
fiaddl
daa
or
pop
and
or
cwtl
jle
ret
clc
mov
into
sub
pop
ret
mov
stc
shl
jbe
adcb
sub
shr
in
inc
cmp
loopne
insl
inc
test
out
and
iret
lods
pop
inc
jnp
sahf
mov
pop
sbb
add
mov
and
mov
and
pop
cmpsb
dec
and
xor
xchg
mov
jne
int
dec
push
inc
jecxz
mov
movsb
cmc
insb
lahf
rol
shrw
dec
mov
and
inc
adc
or
push
sahf
pop
leave
out
outsl
pop
aad
adc
fstps
pop
jge
data16
cwtl
mov
sub
std
test
jo
out
pop
test
out
ficompl
fwait
mov
into
in
xchg
cld
push
shl
cmp
mov
inc
and
scas
xchg
xor
xor
xchg
ds
inc
iret
xchg
pop
lods
jae
loope
inc
decb
pop
cli
pop
lds
xchg
rcl
fsubrs
jmp
and
cli
clc
sub
inc
subb
push
jb
aam
cmp
jae
stc
push
mov
sti
add
in
lret
mov
adcl
push
insb
dec
mov
out
test
fisubs
das
in
es
stos
test
and
jmp
js
cmp
push
in
loope
lret
imul
rcrb
mov
ror
pop
mov
in
jb
ret
lcall
and
arpl
sub
cltd
add
fcmove
push
cltd
xlat
add
adc
sub
aad
sub
cmp
xchg
inc
push
mov
icebp
mov
js
mov
cmp
fdiv
in
jno
cmpsl
jg
inc
mov
mov
enter
push
jg
jns
mov
sbb
adc
xchg
ret
stos
cmc
jo
lcall
xor
xor
in
add
ja
cmp
in
aaa
mov
sbb
sub
xlat
sbb
aaa
arpl
gs
sbb
inc
mov
movsb
fldt
dec
int3
push
aad
mov
jg
rcl
mov
sbb
inc
sub
inc
dec
mov
cmp
jnp
mov
add
insb
loopne
mov
add
fbstp
repz
mov
nop
cltd
mov
iret
dec
jnp
xlat
lea
andl
xchg
pop
mov
in
sub
in
jecxz
or
push
add
push
xchg
mulb
xor
ds
mov
push
mov
rorl
xorl
adc
aaa
mov
lock
jb
loop
xchg
fwait
pop
cmp
cwtl
push
ret
jmp
xchg
es
sbb
sbb
test
lahf
inc
out
or
inc
pop
and
cmp
lret
pop
fwait
daa
stc
mov
pop
add
nop
aam
test
aad
cli
test
cmp
lahf
out
lods
movsl
inc
mov
popf
xchg
mov
adc
mov
fsubrp
and
mov
adc
dec
dec
sbb
xor
ds
scas
scas
imul
jp
pop
sbb
jge
lock
sub
sbb
and
xchg
or
dec
or
inc
test
mov
mov
adcl
push
sub
mov
stc
push
sub
cmp
inc
inc
mov
pop
sub
cmp
test
xor
out
inc
imul
mov
xchg
cs
xor
fdivs
rcrl
fs
mov
and
insb
jae
xor
fdiv
aad
pop
repnz
mov
paddusb
scas
adc
and
data16
mov
lret
add
pop
xchg
in
popf
pop
jmp
cvtdq2ps
nop
inc
das
jg
fcmovbe
xlat
pop
call
pop
jb
outsl
cmp
mov
clc
es
notrack
xchg
leave
cmc
mov
rorb
mov
fdivrs
sub
jmp
test
popf
add
sti
cli
and
movb
add
into
out
inc
mov
jp
adc
sbb
cmp
je
cwtl
add
test
push
insl
cld
fsubl
mov
rcl
adc
cltd
inc
mov
jnp
jle
mov
in
xchg
stc
enter
dec
sub
or
rolb
or
push
sub
mov
and
je
sub
cmp
dec
data16
cld
fdiv
hlt
mov
push
jbe
or
ds
mov
arpl
lcall
dec
or
dec
movsl
xor
aas
hlt
jecxz
imul
cmpl
pop
clc
pop
mov
fisttps
test
adcl
aaa
jmp
mov
stos
data16
adc
xor
fiaddl
pop
push
xor
and
xor
adc
mov
dec
xchg
sub
mov
mov
mov
push
xchg
pop
mov
pop
fs
xchg
pop
pop
pop
mov
add
mov
outsl
movsl
inc
outsl
sbb
xor
mov
icebp
push
cmp
in
inc
ret
ljmp
xor
push
aas
mov
call
and
shl
and
aam
test
fimull
outsb
mov
dec
adc
lds
inc
push
xor
jo
jno
bound
xlat
insb
adc
out
sub
mov
lea
jle
pop
inc
in
out
fwait
sub
pop
jmp
ja
enter
nop
mov
inc
mov
push
and
loop
arpl
mov
mov
sub
xchg
sub
adc
in
dec
push
movsl
xor
add
adc
add
test
and
cmp
in
xchg
push
cmp
sub
push
pop
imul
mov
fwait
popf
int3
and
ss
rclb
dec
mov
outsl
adc
mov
mov
fbstp
aam
sbb
icebp
pop
mov
pop
cmpsl
mov
out
cld
pop
add
pop
push
pop
bound
fsub
lret
mov
stc
shrb
sti
sbb
repz
xchg
hlt
call
sbb
cwtl
dec
stc
lahf
addr16
insb
pop
es
jae
sub
dec
ss
pop
sbb
xchg
cwtl
add
stc
cmp
clc
sbb
dec
fisubs
cmp
dec
int
addr16
dec
push
hlt
dec
push
leave
pushf
dec
xor
lock
cmp
cmp
mov
addl
pop
xchg
stc
popa
or
pop
xorb
push
jno
shlb
out
into
jecxz
test
rcll
leave
sbb
mov
mov
int
test
dec
mov
add
sbb
mov
lcall
or
jns
fs
les
jne
cltd
pop
pop
es
fdivs
out
fs
jne
cwtl
mov
add
cmp
or
in
aaa
jp
inc
sub
jo
and
sbb
and
xchg
aam
clc
pop
icebp
test
loopne
xchg
mov
dec
fmull
xchg
fistps
mov
cld
push
out
add
out
pop
loope
cmp
clc
imul
mov
sbb
mov
push
xchg
call
inc
pop
adc
xchg
add
mov
jecxz
sbb
into
call
enter
popf
test
jp
push
push
mov
add
hlt
and
jo
ds
mov
jne
das
cmp
mov
push
mov
inc
fs
and
sub
mov
xor
sub
daa
test
fldl
je
pop
mov
popf
pop
in
les
fcompl
cs
jmp
jb
sbb
movsb
push
dec
jbe
cmc
cmp
jbe
cld
pop
enter
xlat
push
add
ljmp
dec
es
push
or
ret
xor
jnp
fdivs
pop
fs
adc
inc
mov
xchg
push
mov
dec
mov
cwtl
cmpsl
lahf
adc
fistps
clc
enter
xor
stc
daa
push
sub
cmpsl
in
pusha
or
sti
and
lods
lcall
test
dec
push
or
insb
and
jge
insl
ret
add
xchg
inc
test
mov
push
aam
dec
movsl
pop
add
fstl
xchg
jge
or
push
loop
scas
call
add
push
cmp
jl
shlb
fisttpl
add
jo
cmp
rcl
lret
int
mov
fidivrl
mov
out
sti
loope
cmp
inc
enter
mov
popa
push
mov
or
adc
call
jne
imul
xor
popf
mov
arpl
xchg
mov
call
add
and
add
clc
xchg
lret
ds
mov
mov
dec
push
fs
xor
loop
sub
rolb
out
hlt
andb
inc
cmc
mov
sub
shlb
push
push
pop
xor
mov
es
pop
xchg
scas
cmpsl
ficomps
and
mov
mov
in
loopne
push
xor
add
cmp
cmpsb
es
or
mov
fmulp
stos
sub
mov
enter
mov
out
mov
push
mov
xchg
or
push
imul
aas
jne
ja
sub
enter
jne
inc
stc
ret
jnp
outsb
and
jb
jl
aaa
inc
daa
cltd
cmpsb
xchg
movsb
inc
sbb
fcmove
adc
dec
in
dec
jle
movsb
and
dec
push
adc
pop
xchg
push
mov
shll
clc
jbe
mov
mov
out
sbb
jnp
loope
jg
pop
push
xchg
mov
xchg
lods
xchg
or
sub
scas
scas
and
dec
adc
add
or
out
lds
pushf
cld
arpl
rclb
mov
dec
iret
adcb
stos
bound
mov
mull
loop
lds
jge
negl
sub
xchg
or
adc
sub
mov
cltd
lea
dec
jmp
addr16
xor
aam
inc
rcrb
xor
loope
pop
adc
pop
test
mov
std
xchg
inc
push
jo
cmp
dec
dec
shr
sub
imul
jecxz
and
xchg
pop
es
jns
scas
xchg
fcompl
or
xchg
mov
divb
fiadds
sbb
js
lahf
clc
filds
and
jbe
mul
test
cmpsl
stos
add
in
les
js
sahf
adc
jbe
xor
push
lods
cs
cmc
rcr
js
jo
lds
jno
loope
jg
je
xor
dec
jl
shrb
pop
lret
mov
inc
sbb
lods
sti
insl
sti
mov
pop
push
sub
push
or
addr16
fsubl
cmp
pop
rcrl
cmp
fwait
add
popf
imul
aas
pop
scas
mov
add
bound
jle
or
imulb
pop
push
pop
fsubrs
jmp
fistl
roll
xchg
out
cmpb
ljmp
fs
sbb
gs
les
mov
inc
sti
push
imul
sbb
lea
or
pop
sub
mov
mov
ljmp
xchg
fiaddl
popf
mov
adc
push
popa
mov
push
add
mov
dec
out
lods
jmp
jo
xchg
mov
int3
lahf
ss
xchg
xor
jg
xlat
jl
xchg
fbld
cmp
mov
dec
inc
mov
cmc
mov
lret
sub
push
xor
pop
pop
cltd
outsb
loope
xor
adc
bound
jecxz
insb
in
pop
andl
mov
xor
arpl
test
push
sub
fwait
std
xchg
stos
cmp
es
xchg
xor
sub
jne
clc
aas
or
xor
xchg
xchg
addr16
inc
jae
push
lret
push
push
out
and
fdivs
les
test
testl
cld
stc
daa
iret
xor
mov
xor
sahf
das
jnp
test
orl
addl
xchg
lods
jge
std
lock
pushf
pusha
movsl
inc
mov
rcll
in
in
push
mov
jecxz
mov
inc
add
shl
negb
inc
ficompl
insb
dec
popa
test
cmp
out
pop
and
cli
inc
pop
jmp
arpl
and
mov
test
sub
out
xchg
ja
inc
pop
xchg
fimuls
outsb
iret
cltd
nop
xor
or
and
sahf
push
or
cmp
fs
mov
cmpsb
mov
or
and
sub
pop
ret
ret
push
test
mov
in
subl
jp
dec
cli
adc
lock
add
jae
dec
mov
jg
popa
or
ret
xchg
sub
shll
fstps
cmp
lcall
cmp
mov
pop
loop
mov
inc
out
add
mov
push
orb
lret
push
jbe
divb
aad
rorl
jno
mov
fwait
pop
sub
xchg
push
fwait
xor
rol
shrl
mov
gs
inc
push
or
pop
cmp
out
sbb
int3
mov
mov
xchg
fcomp
inc
js
lret
dec
xchg
stos
mov
movd
cmp
xor
mov
jecxz
and
cmc
mov
out
push
or
ja
dec
scas
loope
push
or
or
adc
cld
and
aam
cmp
jecxz
clc
mov
adc
shll
push
mov
das
sub
scas
inc
or
sbb
outsl
jle
and
mov
repnz
sub
pop
repz
aas
out
sub
sbb
dec
lods
roll
int
xchg
nop
xor
andb
scas
fsubrp
inc
jno
aad
aam
adc
int
lock
lods
sub
sub
xchg
sahf
mov
ret
es
decb
jmp
push
pop
lods
push
loope
xor
mov
cmp
imul
pop
pop
mov
inc
addr16
andb
push
adc
adc
dec
insl
push
or
mov
stos
leave
call
pusha
inc
outsb
or
stos
rcrb
cs
or
inc
jnp
sbb
inc
enter
std
jbe
aam
pop
ja
jae
xor
fstl
iret
shrl
mov
fisubs
adc
cli
adc
fistps
or
adc
shlb
mov
dec
xor
jp
add
jae
dec
inc
pusha
mov
daa
xor
and
push
outsl
lods
outsl
aaa
adc
mulb
mov
cmp
cmpsl
inc
mov
or
xchg
add
xchg
adc
mov
pop
add
fwait
mov
xchg
inc
and
call
xchg
ficompl
leave
enter
aad
aad
pcmpgtd
pop
dec
jmp
cmp
and
inc
adc
ja
lds
sbb
movsb
cli
lea
cmp
xor
aad
fsubl
in
jnp
lods
mov
or
xor
sarl
pop
push
jno
mov
test
inc
and
jg
sbb
mov
xor
outsl
nop
cmpsl
mov
inc
lea
sbb
inc
mov
mov
pop
inc
in
dec
push
jbe
mov
or
mov
rcll
jp
aas
fnsave
dec
add
clc
mov
xlat
xchg
jno
xchg
aas
repz
aaa
adc
cltd
iret
push
jmp
pop
adc
mov
push
fldt
int
sti
push
aaa
aam
pushl
pop
mov
inc
stc
inc
adc
add
sbb
sahf
js
imul
popa
push
jge
push
out
mov
jmp
or
push
in
jbe
mov
ljmp
jecxz
sahf
cmpsl
jae
sub
imulb
sbb
xchg
stos
icebp
mov
xchg
cmpsb
stos
scas
push
mov
jmp
xor
sub
shll
test
xor
pop
enter
lret
sbb
notb
ljmp
dec
arpl
pushf
mov
scas
inc
add
sub
or
jbe
nop
and
adcl
and
inc
xor
cmpsb
xor
pop
cmp
test
mov
lds
jnp
mov
ret
mov
aam
mov
push
cmp
add
jg
jg
dec
loope
out
cmp
scas
jl
ja
cmp
jns
xlat
and
and
iret
add
xchg
mov
dec
clc
roll
repz
call
ljmp
mov
outsl
bound
cld
sbb
scas
inc
aad
mov
ljmp
jp
test
pop
ljmp
add
gs
push
pop
imul
push
xor
test
mov
popf
ja
inc
lods
pop
mov
or
xor
outsl
insb
sbb
clc
in
mov
mov
dec
lcall
test
ss
pop
dec
push
cmc
outsb
push
jle
dec
adc
ja
shll
mov
add
daa
loop
mov
or
stos
xchg
lea
insl
push
popf
stc
jmp
pop
insl
xor
sub
mov
push
and
mov
push
cmp
push
test
pushf
in
mov
popa
fldenv
push
jle
add
scas
jle
sbb
dec
pushf
push
lcall
ds
faddl
inc
scas
lret
in
notb
iret
mov
lock
push
sub
fisubs
mov
jmp
push
mov
sti
fs
inc
repz
stc
push
hlt
fs
rolb
fsubrp
movb
scas
push
cmpsb
mov
popa
shr
ss
hlt
and
push
shll
push
jae
leave
mov
mov
dec
push
mov
or
add
sbb
andb
mov
ss
mov
jnp
jl
dec
mov
push
das
test
push
mov
loopne
jge
xchg
in
adc
adc
jbe
lcall
lcall
inc
sarl
xor
jl
in
pop
lds
ss
or
imul
es
dec
adc
loop
lret
sub
pop
pop
fwait
mov
jns
xchg
aam
push
mov
lds
dec
lods
jbe
into
lret
xor
inc
imul
out
std
movsb
jno
stos
stos
test
dec
mov
lahf
inc
mov
cmpsl
and
pushf
lcall
push
pop
and
aas
adc
or
addr16
das
rcrb
dec
pop
jmp
xchg
add
pop
pusha
daa
adc
fcomp
lret
or
scas
cmp
and
xor
leave
and
test
adc
dec
dec
and
ret
xor
adc
sbb
iret
sbb
push
les
mov
mov
dec
push
popf
adc
out
adc
sbb
fs
mov
in
jo
loope
nop
mov
and
jne
xchg
or
xchg
lods
jle
push
push
in
vcmpss
jecxz
mov
test
push
popl
add
fdivs
les
daa
lock
ret
mov
pop
inc
jae
jmp
mov
inc
mul
mov
add
dec
rcrb
push
mov
jecxz
xor
dec
inc
sahf
pop
xchg
xor
in
jns
adc
adc
mov
loope
mov
pop
mov
cmc
aam
jg
sti
fwait
rcll
jmp
or
xchg
nop
inc
jbe
fstps
mov
add
xlat
loopne
add
movsl
in
dec
mov
xchg
repz
loope
int3
cwtl
lods
movsb
scas
push
mov
and
out
pop
sub
mov
sub
lea
repnz
test
outsb
imul
lock
jmp
jno
xor
push
mov
xorb
sbb
xchg
test
aad
push
in
cld
mov
fs
ja
inc
call
out
cmpsl
pop
in
xchg
ficoml
leave
cli
adc
iret
push
xor
mov
mov
dec
int3
cmp
addb
dec
mov
sbb
inc
int
in
lods
mov
cmc
pop
fsubr
data16
out
pop
nop
movl
stos
shr
hlt
xchg
add
xchg
xchg
push
push
bound
std
jne
loope,pn
and
and
xor
push
nop
out
jecxz
jns
lret
gs
out
pop
arpl
loopne
adc
out
mov
mov
push
outsb
ret
ds
dec
mov
ljmp
outsl
or
out
mov
mov
outsl
aam
lret
lods
pop
sub
scas
or
xchg
hlt
cltd
mov
cld
dec
sub
lods
ds
imul
int3
imul
sub
add
scas
push
in
inc
jl
out
mov
jmp
out
mov
jne
jo
in
push
je
jge
push
notl
mov
or
ret
popa
shlb
adc
mull
mov
es
lahf
test
xor
push
std
sbb
jle
incb
mov
in
stc
mov
jns
insl
test
lds
mov
and
xchg
dec
inc
mov
pop
mov
sbb
push
add
jp
push
sarl
cwtl
out
xor
ficoms
mov
jno
cmp
or
mov
popa
xor
pop
and
je
in
mov
adc
adc
outsb
aad
aad
and
xchg
lea
jno
fwait
pusha
sbb
push
mov
pop
xchg
fs
push
mov
dec
sti
inc
pop
cltd
adc
add
push
adc
test
lret
cmp
sbb
enter
sarb
outsb
push
adc
mov
outsl
daa
sbb
jmp
mull
pop
add
cmp
cmp
out
adc
cld
xchg
jle
sub
fs
fwait
mov
dec
gs
sbb
pusha
cmp
shll
mov
push
insb
movsb
mov
pop
movsb
bound
lret
outsl
mov
loop
ss
sti
push
out
jg
inc
notb
fwait
jle
sbb
std
or
enter
movsb
ljmp
add
xor
test
in
sbb
or
push
dec
arpl
xchg
and
repnz
subl
xchg
fs
popa
dec
sti
faddl
insl
cmp
push
pushl
fistpl
out
and
mov
push
repz
cwtl
mov
inc
mov
fwait
pop
das
repnz
jnp
ja
nop
jae
and
xlat
rcrl
cli
or
jnp
xlat
jbe
and
fistpl
subb
push
stc
cmp
mov
jne
pop
sbb
stos
es
enter
call
dec
scas
adc
cmp
mov
test
pusha
xor
sub
push
pop
js
mull
imul
xor
cwtl
ret
jecxz
int
sub
repnz
movsb
mov
or
push
sub
shrb
fsts
movsl
jecxz
test
mov
push
out
sub
xor
rdpmc
xor
push
in
xor
sbb
jnp
cmp
push
jp
addb
in
mov
in
dec
mov
inc
iret
cltd
clc
mov
jns
push
lods
cmp
mov
mov
inc
pushf
aam
xor
scas
stc
mov
insb
ljmp
je
mov
popa
inc
test
outsl
fisubs
mov
sub
add
sub
mov
mov
pop
sahf
sub
jae
shr
cmpsb
push
sahf
xlat
cld
test
dec
mov
sbb
lcall
js
hlt
sbb
out
out
push
loopne
cmp
shl
repnz
loope
rorl
loop
test
mov
imul
push
sub
hlt
pop
scas
std
out
insl
jmp
and
out
mov
fbstp
daa
cwtl
xor
jno
insl
mov
inc
inc
adc
or
pop
jno
jae
inc
xor
in
jbe
push
shlb
in
or
mov
pushf
outsl
mov
js
xor
shlb
and
cmp
in
or
mov
stos
in
push
push
jns
popf
repnz
popa
dec
push
xlat
mov
into
dec
movsb
pop
and
aam
cli
cmp
iret
dec
ret
cmp
pop
pop
mov
mov
popf
out
lcall
mov
mov
daa
or
ss
fstl
jb
fistpl
inc
mov
stos
mov
test
push
or
push
push
xor
test
jge
xchg
les
xchg
sub
xchg
int
stos
rcr
lods
add
sbb
sbb
cmpsb
xchg
push
popf
or
rcr
shrb
cmp
jmp
into
ret
add
push
mov
shll
pop
lahf
pop
out
aad
repz
jne
ret
push
push
push
push
mov
cmp
imul
jg
popf
std
cmp
gs
filds
out
loopne
orb
adc
jo
add
xlat
imulb
mov
add
addb
iret
arpl
lods
cmc
cmp
adc
xchg
sbb
and
mov
mov
push
popf
adc
add
and
sub
or
inc
dec
jo
ret
pop
std
inc
ja
addr16
add
sub
sub
leave
add
pop
divb
mov
and
push
movsl
aas
mov
or
sbb
fstpl
or
sbb
xor
add
pop
repnz
in
sub
pop
clc
imul
dec
jo
out
push
xor
xchg
mov
jbe
xor
sbb
add
dec
sbb
jecxz
mov
or
jmp
loop
adc
mov
in
mov
cmc
scas
fistps
jne
push
or
out
stc
jmp
testl
shrb
sarb
push
nop
aas
lahf
in
jl
adc
ud0
iret
push
sub
pop
adc
lods
mov
xchg
adc
xchg
shl
scas
in
ja
clc
ja
jae
sbb
dec
add
jl
inc
loope
pushf
andb
dec
adc
into
add
push
test
mov
jle
push
inc
cmp
sti
xchg
aam
test
cmp
aas
cltd
add
fwait
pushf
mov
repz
xor
sbb
adc
mov
or
mov
aas
and
push
orl
pop
or
int3
push
movsl
adc
xchg
jle
xor
xchg
mov
repz
out
xor
mov
sbb
scas
jnp
nop
stc
lahf
jae
pshufd
pop
scas
jge
dec
push
add
das
lret
or
mov
push
fmul
jmp
sbb
inc
push
cmp
mov
jno
je
sub
mov
and
xor
hlt
mov
test
and
jno
neg
mov
pop
pop
dec
pusha
inc
xorb
cwtl
call
or
fcoml
xchg
adc
sub
xor
inc
ret
inc
rolb
cmp
cmp
lds
add
inc
lret
xchg
or
jmp
mov
scas
mov
gs
lea
pop
inc
push
push
and
bound
dec
mov
test
sub
inc
xchg
rol
sub
rcr
in
out
lcall
adc
mov
imul
movsb
dec
cmp
xor
adc
mov
add
arpl
or
loop
mov
adc
mov
adc
mov
push
pop
sbb
pop
stc
add
les
xlat
jno
iret
les
fmull
jnp
xchg
add
sub
push
fidivs
adc
mov
icebp
mov
test
mov
xchg
or
sub
mov
mov
fcompl
popf
sbb
cwtl
cld
inc
sahf
mov
ret
cmp
pop
jno
sahf
or
imul
adc
adc
or
sub
jns
addr16
icebp
inc
fadds
push
in
push
leave
fsub
mov
pop
sub
push
xor
push
sbb
aas
lea
sbb
pop
fstpl
gs
add
dec
add
rol
pop
push
pop
add
xchg
push
dec
dec
inc
lret
sti
out
pop
add
jmp
insl
jl
inc
mov
cmp
pop
push
testb
aas
rcrb
xor
dec
loop
cwtl
cmp
inc
test
jne
jg
adc
dec
adcl
push
mov
pop
das
pop
ret
or
dec
dec
pop
jb
pop
lods
cmp
addb
pop
nop
mov
jns
and
fdivrp
arpl
lds
loope
das
lret
jne
daa
or
push
and
pop
dec
insb
or
push
xchg
sub
push
mov
pop
adc
pop
iret
push
adc
xchg
inc
xchg
xor
ljmp
stos
inc
sarb
adcl
lcall
mov
mov
mov
sub
xor
lods
pusha
jle
sub
adc
inc
fstpt
jmp
shrl
add
push
subb
cli
repz
sub
bound
xor
jp
aaa
lods
adc
mov
ret
fdivrs
sbb
xchg
scas
push
ficoml
sub
push
sbb
mov
xor
push
pop
xchg
pop
pop
and
mov
outsb
pop
leave
mov
sub
xchg
negb
mov
popa
ds
fwait
outsl
bound
add
mov
dec
sbb
ss
jns
test
adc
neg
lods
cmp
les
lds
pusha
sub
jno
sub
inc
add
or
mov
pusha
inc
add
push
add
js
dec
stos
sub
pusha
xlat
xchg
insl
test
push
dec
pop
lods
push
shlb
xor
push
xlat
aam
pop
in
ret
xor
pcmpeqw
rcll
inc
cmp
push
and
std
lock
imul
dec
pop
push
jb
or
fsts
cs
gs
scas
shl
mov
mov
enter
insl
or
out
std
addr16
inc
dec
fidivrl
xor
imull
icebp
imul
ffree
popa
lds
cmp
mov
dec
dec
movsl
jge
sub
test
je
repz
cmp
outsb
idivb
pop
inc
out
fsub
lods
pop
and
repnz
std
mov
out
mov
test
jne
xchg
xchg
lds
orb
push
xlat
fildll
inc
push
sub
xchg
outsl
test
xchg
mov
jp
movsb
ss
ds
iret
lock
cltd
sahf
in
jg
mov
scas
xchg
or
jg
xchg
jecxz
cmp
mov
jg
add
push
dec
fmuls
push
push
es
jae
popf
xchg
lcall
mov
pushf
mov
pop
sub
adc
or
sub
mov
incl
lret
inc
dec
lcall
xchg
mov
insl
insl
addr16
scas
cmp
out
fs
fs
test
adc
test
cmp
pop
mov
shrb
and
lods
dec
xchg
push
iret
repnz
test
jl
push
fisttpl
cmp
xchg
into
bound
call
gs
mov
mov
fcomp
repnz
scas
jmp
mov
mov
cmp
daa
in
push
push
test
ljmp
aam
repnz
sarl
test
push
pop
test
mov
and
int3
jmp
jb
aas
out
adc
lret
mov
push
inc
in
fiadds
aam
cmp
insl
xchg
rcrb
das
les
cmp
jp
dec
push
xor
adc
nop
sti
scas
subb
sub
sbb
cwtl
negl
shl
es
and
xchg
mov
mov
dec
in
mov
pop
pop
jge
pop
stos
addr16
jp
data16
out
test
orl
jb
loopne
jle
pop
push
xchg
xchg
sub
push
imul
xchg
jmp
mov
xor
cmp
ficoms
pop
test
cmp
mov
out
in
fstpl
dec
jne
mov
adc
enter
push
jns
push
inc
test
rcll
imul
xor
fs
and
popa
pop
mov
sub
add
loop
fbld
pop
xchg
add
cld
pop
fists
stc
or
and
mov
jle
pop
int
mov
dec
js
sub
lock
cli
int3
mov
and
inc
mov
lret
nop
sbb
das
in
stos
jbe
jle
ret
xor
cmpsb
lahf
mov
rcl
test
cmpsl
push
fsubrl
xchg
push
push
and
pop
mov
filds
xchg
outsb
add
bound
dec
mov
xor
aam
popf
dec
sbb
ficomps
popa
xor
xor
pop
insb
jbe
dec
jmp
xchg
mov
or
xchg
add
mov
mov
xlat
or
add
test
jo
jo
mov
xchg
xor
aam
adcl
mov
call
cwtl
add
lcall
daa
add
pop
popf
or
movsb
scas
test
subb
scas
or
ljmp
in
lret
and
ficomps
lcall
add
out
popa
pop
lods
jae
dec
mov
out
ret
push
xor
lahf
shrl
ljmp
pop
pushf
sbb
dec
pop
stc
mov
cld
inc
scas
jmp
lds
mov
scas
sub
cmp
push
sub
xor
testb
mov
js
das
inc
movswl
adc
dec
test
fadds
int3
addr16
jno
jne
test
negb
push
inc
push
ss
imul
ficompl
out
xchg
movsl
mov
push
jo
mov
sbb
fcoms
adc
loope
inc
mov
mov
in
mov
test
out
xchg
xchg
dec
arpl
test
mov
mov
jle
pop
repnz
xor
negl
add
addr16
jbe,pt
mov
xor
std
test
mov
sub
andl
fsubr
mov
cli
iret
fisubl
lods
xor
cli
scas
fucomp
dec
cmp
fistpll
in
xchg
pop
xchg
hlt
push
mov
fsubrl
int
xor
fimull
and
stos
xchg
or
cli
fucomi
add
repz
arpl
test
jl
sbb
stos
inc
cwtl
xchg
shl
lcall
les
sub
sbb
das
sub
cmc
and
push
fisttpll
mov
out
jg
mov
jb
jns
mov
xchg
insl
cwtl
push
cld
push
sahf
or
and
jg
lods
scas
stos
adc
enter
xchg
das
dec
xlat
into
cmp
mov
lcall
fisttpll
cwtl
pop
rorb
inc
mov
out
sti
cmp
or
mov
bnd
mov
mov
sbb
xchg
inc
xchg
imull
nop
and
jp
jl
adc
xor
scas
mov
mov
jge
pop
xchg
arpl
jo
adc
push
ret
insl
pop
or
jns
or
push
or
jge
lcall
cbtw
mov
push
and
or
cmp
jecxz
or
mov
fucomi
lret
mov
fistl
pop
jno
scas
jnp
bound
push
sahf
jl
jg
sub
mov
push
xchg
and
dec
add
adc
mov
or
cli
cmpb
in
das
xchg
jg
lods
fisubrl
sub
mov
out
cmp
mov
mov
aam
lret
jne
adc
mov
lods
cs
mov
fimuls
cmpsb
sbbl
push
xor
dec
jb
adc
or
adc
imul
lahf
je
and
mov
xor
std
add
mov
dec
add
mov
mov
xor
jae
test
sbb
mov
pop
gs
jne
add
int
test
cs
pop
jmp
lret
jl
dec
or
xchg
cmc
mov
push
mov
cmc
mov
dec
jle
cltd
sbb
inc
push
addb
sti
pop
add
loopne
jae
iret
adc
pop
mov
inc
pop
inc
sbb
lea
pop
ror
adc
fsubrl
inc
out
xlat
jg
sbb
lods
xor
jl
in
cld
pop
aam
fisubl
movsl
in
pop
sub
roll
inc
mov
out
scas
sub
mov
in
fisttps
and
loop
call
leave
or
mov
cmp
testl
dec
les
fcoms
cmp
movsl
mov
lcall
xchg
mov
sub
push
xor
addl
inc
pop
adc
fs
mov
inc
mov
xor
pushf
jp
aad
add
lret
daa
movsb
jecxz
out
push
sbb
ds
jno
xchg
mov
out
shrb
fnsave
ja
cmpsl
ljmp
pop
add
ds
arpl
jno
in
hlt
outsl
icebp
push
or
push
and
pop
test
ja
sar
icebp
push
sti
and
pop
push
cmp
cld
fstpl
test
sbb
adcl
mov
or
jae
xor
cs
adc
popl
mov
shlb
jb
xchg
into
imul
xchg
aam
xchg
std
sbb
xchg
mov
iret
mov
fadd
xchg
scas
mov
cli
cmp
sbb
test
cs
and
rcr
ret
test
jb
dec
sbb
lock
out
loope
js
rcrb
mulb
sub
les
xchg
mov
and
clc
loop
shll
call
popf
sub
ljmp
call
es
scas
mov
es
cwtl
mov
jb
fsubrs
repnz
lea
fstpt
xor
jl
fcoml
sahf
pop
push
lcall
stos
mov
inc
cld
mov
sbb
aam
adc
fcom
sti
shl
jle
cs
cmp
insl
push
js
adc
pop
stos
sub
repz
add
scas
xor
das
pushf
push
sbb
mov
xchg
test
sub
mov
jo
stos
sub
or
cli
xchg
jae
jge
sub
rcl
cld
sub
jo
es
mov
dec
mov
mov
mov
sub
jl
or
add
dec
aas
adc
or
aam
aaa
mov
push
pcmpeqd
mul
popf
addr16
mov
push
aaa
jnp
mov
mov
stos
shll
push
nop
sbb
sti
std
ret
push
xor
pop
adc
int
fsubp
pop
xor
cmp
jns
icebp
lds
out
sub
cmc
incb
movsb
js
jb
fisubs
xchg
shlb
or
push
pusha
mov
ficoms
out
popf
or
mov
out
shll
stos
mov
sbbl
inc
das
pop
push
push
mov
jmp
adc
mov
rep
leave
push
das
pop
jl
pushf
pop
xor
leave
dec
push
sbb
sbb
les
inc
test
ret
mov
inc
stos
cli
out
insb
add
push
std
jmp
xchg
in
pushf
inc
fisttpll
stc
cmp
push
imul
sub
pop
dec
fisubl
push
scas
adc
cwtl
orb
sti
stos
xor
sti
insb
sub
loope
pop
and
mov
arpl
cmpsl
fs
cli
dec
fidivl
xchg
outsb
mov
mov
in
daa
out
lds
pop
xor
iret
adc
cmp
jmp
dec
imul
dec
aam
cli
and
ljmp
pop
push
shlb
pop
std
cmpl
into
cmc
dec
int3
rcrb
push
aas
sti
ret
mov
push
push
push
and
outsl
into
or
sub
outsl
inc
push
movsb
add
lret
sarb
fisubl
mov
out
lods
loopne
clc
ret
mov
dec
sbb
xor
mov
mov
insl
mov
insl
aas
or
mov
stc
mov
jp
xor
adc
add
rorb
mov
std
dec
aas
mov
xchg
adc
out
adc
sbb
xchg
push
imul
jns
lret
xchg
cmpb
aaa
imul
out
out
test
insb
repnz
shlb
scas
stos
mov
and
mov
fcomi
jmp
add
jmp
pop
jae
push
inc
shll
cmp
sub
cmp
xor
sahf
add
sbb
fdivl
sub
loopne
and
jae
lods
mov
cwtl
add
shll
pusha
mov
arpl
xchg
cmp
out
xor
mulb
pop
dec
and
femms
push
out
or
dec
stos
sbb
sbb
or
mov
lea
xor
cmp
icebp
sub
mov
push
aad
lds
imul
inc
cmc
jg
mov
insb
sbb
sub
mov
pop
daa
mov
out
loope
inc
cmc
das
pop
or
sti
lock
loop
jl
inc
cmc
jne
jmp
push
inc
pop
jae
int3
je
dec
and
sbb
aaa
divl
in
sub
stos
mov
mov
xchg
ds
sbb
push
nop
in
sbb
das
mov
ret
roll
push
pop
icebp
sti
add
sbbl
or
xor
lds
fisttps
jecxz
lret
xchg
ret
ja
cltd
sbbb
leave
xchg
xchg
mov
push
shrl
inc
leave
ror
sub
mov
std
or
sub
call
lods
dec
inc
insl
jo
jmp
push
icebp
pop
scas
pop
aam
sub
or
push
subl
ret
mov
mov
sbb
push
pop
push
arpl
out
or
dec
das
imul
cmp
adcl
popf
ss
or
je
add
push
cmp
cmp
xchg
sub
xor
popl
adcl
test
adc
lret
xor
inc
aaa
aas
pusha
push
inc
fisubs
adc
and
sarb
inc
stos
das
dec
adc
xlat
mov
adc
nop
iret
cltd
lret
popl
fwait
stos
xlat
aad
inc
insl
repz
adc
pop
mov
cltd
jno
icebp
push
cmp
pop
or
pop
aad
jb
xorl
jno
adc
dec
jge
fst
bound
dec
xchg
push
ret
mov
jb
dec
jno
subl
arpl
lahf
add
push
out
pusha
mov
pop
nop
aam
and
mov
mov
cli
jnp
inc
loope
addr16
jae
dec
fcoms
inc
icebp
push
daa
jecxz
adc
mov
sbbl
adc
arpl
dec
pop
fwait
mov
push
inc
mov
xchg
incl
lea
push
add
pop
adc
outsb
pop
mov
mov
es
cmpsl
adc
das
jl
sub
loop
imul
xor
or
sti
and
mov
xchg
jle
ret
ljmp
scas
inc
cli
cmpsl
pop
add
stos
sbb
push
je
sbb
mov
inc
lcall
adc
data16
jle
sbb
call
fs
cmp
inc
xor
popa
mov
jle
outsb
adc
mov
shlb
sbb
pusha
sbb
jno
inc
xor
cmp
cli
and
into
sub
movsb
sub
adc
jp
mov
pop
das
outsb
or
bound
movsl
addl
lret
push
pushf
xlat
je
out
imul
imul
mov
test
push
aaa
inc
jg
mov
in
rorb
cmpl
mov
jnp,pt
popl
push
rcl
negb
xchg
stc
scas
loopne
push
out
or
sub
fucomi
dec
mov
add
xor
jne
inc
adcl
das
stos
ja
mov
mov
into
dec
mov
shll
xchg
mov
imul
xor
in
mov
mulb
push
addr16
inc
xor
ss
jle
cs
sbb
je
and
cwtl
cltd
rolb
fisubrs
into
lods
dec
icebp
ja
mov
inc
arpl
pusha
mov
mov
sti
and
adc
scas
or
sbb
cmpsb
pop
cmp
imul
in
mov
xor
mov
out
xchg
adc
in
or
lcall
imul
fisubrs
mov
mov
or
lret
das
push
loop
xchg
clc
xor
jl
or
sbb
outsb
pop
dec
mov
movlps
sbb
je
or
inc
sub
lcall
sub
rol
popa
cmpsl
dec
lahf
out
xor
fwait
movsb
in
mov
jbe
dec
mov
aam
lods
sub
adc
cmc
cmp
push
pop
sub
out
sub
jg
int3
pop
mov
popf
xlat
divl
les
shlb
mov
or
add
mov
or
std
ljmp
es
pop
mov
pop
stos
mov
jnp
out
cmp
xchg
add
cld
and
fmul
lcall
in
adc
sub
push
jge
ljmp
mov
add
xchg
jbe
add
fldl
add
enter
js
nop
test
mov
jl
adc
pop
mov
or
ds
pop
push
add
nop
sbb
scas
sbb
movsb
mov
or
add
nop
sahf
scas
sub
sbb
stos
fstpl
dec
mov
lods
stos
pushf
notl
imul
jb
adc
push
mov
stos
mov
mov
adc
push
ljmp
sbb
das
popa
fldcw
cmpl
dec
ds
imul
adc
sub
jae
aam
fidivs
stos
scas
pushf
or
shlb
lret
imul
ss
push
cmp
je
or
aas
fisubs
mov
aad
jbe
shl
faddp
or
xor
pop
je
mov
jb
mov
popf
out
test
cli
aad
aad
loopne
xor
aam
test
hlt
insl
cmp
jmp
outsb
leave
xchg
fs
pop
lods
xchg
loopne
nop
lcall
cmp
fwait
lods
inc
sahf
jmp
mov
adc
mov
or
push
loope
jp
inc
out
inc
adc
fsubr
mov
sbb
int
repz
sub
dec
cmpsb
in
push
in
das
sbb
mov
rcrb
push
shll
repz
fsubs
mov
scas
jb
test
sbb
loopne
rol
inc
add
pusha
or
cmp
sub
stos
inc
nop
mov
inc
jae
rcr
mov
stos
jge
cs
jbe
jl
sub
imul
gs
jge
aas
std
pop
mov
mov
add
xor
push
adc
sbb
testl
or
cld
jecxz
ret
aad
ljmp
jp
mov
jmp
pop
movsb
dec
shl
loop
push
and
fwait
mov
fsubr
inc
in
mov
imul
cs
je
loopne
cmp
ss
fmull
xor
dec
xor
dec
test
stos
imul
adc
roll
xor
cmpl
or
cmp
pop
fisubs
push
icebp
adc
pusha
repnz
push
push
push
data16
jno
ss
dec
xor
in
mov
inc
mov
out
in
jno
cmp
push
xchg
int3
jae
stos
dec
popa
lahf
daa
push
add
loop
hlt
mov
lcall
hlt
inc
mov
push
xchg
cmc
or
sahf
bound
ja
dec
je
enter
push
fsubrs
into
mov
aad
aam
pop
ret
inc
in
xor
mov
dec
mov
lcall
dec
adcl
imul
cmp
orl
outsl
jbe
sub
leave
hlt
xor
out
add
es
xchg
insl
fdivl
insb
jno
mov
lds
mov
jecxz
sbb
add
dec
add
ret
daa
out
fwait
dec
loopne
inc
dec
xorl
xor
adc
push
outsb
push
jbe
and
shrl
ret
add
dec
movsb
adc
imul
dec
frstpm(287
imul
mov
or
insl
mov
imul
int3
fldt
add
and
leave
and
mov
inc
jb
mov
pop
jae
enter
jl
aas
xor
nop
push
and
loop
jne
mov
lcall
mov
jnp
fsubrl
outsl
jl
xor
bound
jmp
xor
lods
cmp
xlat
mov
xchg
inc
test
inc
xchg
sub
jge
ficoms
lods
mov
sub
mov
sub
aas
xchg
push
cmp
cmp
outsl
mov
sub
gs
mov
outsb
mov
shrl
pop
insb
adc
mov
lods
pop
stos
pop
pushf
jg
pop
ret
shrb
cmc
andl
es
pop
xor
addr16
lahf
xchg
mov
jae
lahf
jo
xlat
xor
jmp
jecxz
arpl
jo
mov
es
add
js
stos
adc
jnp
pop
jle
and
inc
cld
rol
les
stos
adc
shrl
hlt
mov
cmp
lds
xor
sbb
and
push
jbe
lahf
in
icebp
sub
push
mov
repnz
jo
mov
repz
mov
dec
repnz
sub
and
gs
sbb
mulb
outsl
clc
sahf
sbb
test
adc
popf
adc
js
fbld
mov
lds
sbb
inc
lods
iret
and
and
fidivrs
fisubrs
push
mov
ljmp
insl
fdivp
dec
jp
jecxz
pop
dec
xchg
cld
xchg
jge
test
and
xchg
push
imul
insb
sbb
out
add
test
stc
push
fildll
xor
or
or
out
gs
inc
push
sbb
or
daa
jnp
xor
xorb
xor
cli
pop
fcoms
fcmovnb
sub
shlb
stc
jge
push
cld
dec
sbbl
out
xchg
aaa
inc
movsb
popf
rolb
xchg
add
cmpsl
fidivrs
mov
fsubr
cmc
cmp
mov
xchg
jae
sub
movsb
inc
lock
pop
inc
add
lods
nop
in
xor
and
cltd
inc
movsl
imul
lods
out
push
sti
das
call
xor
sbb
cltd
shll
cmp
jp
jp
shll
cld
pop
xor
je
and
xchg
mov
adc
sahf
jae
int3
stos
adc
jnp
insl
add
dec
push
add
fbld
mov
mov
pop
mov
dec
sub
mov
and
dec
aam
jle
jge
mov
sbb
decb
pop
inc
adc
and
cmp
jns
jmp
pop
sbbb
or
ds
daa
ja
push
test
inc
out
cmp
mov
pop
mov
jmp
pop
add
adc
leave
or
xchg
neg
jo
jmp
shl
cmp
mov
shr
sbb
push
pop
mov
cmp
pop
arpl
js
adc
enter
mov
sub
push
movl
jg
sbb
add
dec
jo
inc
or
aas
mov
lods
out
push
push
pop
sub
mov
arpl
jp
testl
fdivs
pusha
xor
xchg
sub
jmp
nop
mov
imul
jle
cmp
movsl
and
xorb
push
clc
or
or
icebp
test
pop
fsubr
test
ss
pop
push
jb
stos
es
insb
mov
sahf
rolb
leave
or
or
or
mov
sahf
add
jnp
mul
clc
sub
sarb
adc
aaa
xor
rcrb
and
jp
jl
je
loopne
cmpsb
jp
dec
lods
clc
mov
inc
xchg
push
and
loope
pop
lock
jge
and
pushl
sbbl
rorb
cli
mov
mulb
push
negl
pop
daa
es
sar
inc
xor
cmp
fcmovb
insb
pushf
pop
ljmp
dec
and
inc
stos
adc
call
shlb
mov
std
add
out
mov
lret
addb
mov
xchg
test
loop
ja
push
addl
push
aaa
andl
push
pop
cmc
mov
add
ljmp
cmc
lahf
push
popa
inc
in
stos
int
pop
mov
and
mov
mov
mov
jle
insb
push
outsl
outsl
pop
push
and
mov
ret
lahf
adcl
sub
loope
aaa
mov
xor
xchg
xor
mov
push
push
jb
jg
cmpsl
loop
inc
sar
test
pop
cmp
sarb
jae
jnp
inc
mov
push
cmp
fisttpll
addr16
xchg
bound
jb
repz
call
scas
out
pop
jo
xor
or
push
xor
pop
jge
stos
mov
push
pop
cmp
lahf
jne
add
sbb
in
ret
addr16
cmc
fidivl
dec
mov
dec
lcall
mov
push
in
data16
notb
popf
cmp
xchg
cld
adc
leave
or
mov
mov
or
dec
pop
add
test
or
lods
jns
cltd
and
enter
mov
lock
ds
sub
mov
cltd
sbb
stos
pop
dec
lock
sub
inc
mov
xchg
push
add
pop
movl
inc
cmp
add
lcall
sub
orl
mov
xorl
sbbl
sub
dec
mov
aaa
cs
jg
ljmp
mov
xchg
sarl
pop
pop
xorb
inc
and
ret
aam
xchg
inc
out
repz
fidivs
push
mov
fidivrs
xor
inc
cmp
aam
jno
cmp
and
lret
lahf
loopne
mov
mov
pop
imul
cmp
xchg
push
jns
jmp
shlb
dec
arpl
push
lea
xor
mov
mov
cmpsl
cltd
pop
ds
stos
cmp
mov
into
push
daa
mov
adc
mov
cmp
movsl
pop
jge
bound
shrl
cs
cmp
lret
aad
dec
mov
fidivs
mov
jp
mov
xchg
inc
cmp
and
stos
lods
jns
out
loopne
adc
iret
pop
cli
fistl
sbb
int3
sub
repnz
jge
movups
out
lret
jg
mov
in
pop
cmc
rcr
mov
repz
mov
rolb
push
shl
jp
sbb
or
fs
bound
aaa
mov
out
imul
jns
fnstsw
adc
stc
clc
jb
aam
dec
mov
stc
cs
pop
test
mov
push
cmp
enter
les
arpl
arpl
daa
xlat
inc
mov
mov
movsl
pushf
jbe
push
pop
cmc
in
mov
adc
les
call
testb
inc
jo
xor
faddl
dec
lds
adc
xorb
cmpsb
cmp
gs
mov
adc
and
jge
jbe
out
push
fimuls
sbb
push
pop
bound
pushf
ss
inc
and
pop
fdivl
xchg
adc
ret
aas
shlb
or
inc
mov
xchg
daa
or
fstps
cs
jbe
ret
dec
mov
jns
jle
push
sbb
adc
out
test
adc
push
pop
and
movsl
jb
cmc
push
mov
jne
in
mov
jge
cmp
ljmp
xchg
add
outsl
pop
cmp
daa
xchg
xor
pushw
and
jg
xchg
stos
fsts
ds
inc
clc
and
mov
test
add
clc
xor
pop
stos
inc
pop
loop
xchg
sbb
push
cmpsb
or
es
popf
sahf
mov
xchg
or
xchg
mov
jle
mov
aas
iret
sahf
insl
sarl
cmp
inc
in
xchg
out
les
pop
xor
inc
push
subl
sbb
and
dec
imul
push
pusha
push
or
pop
pushf
adc
cmpsl
jne
and
and
or
outsl
add
sbb
mov
call
pushf
and
leave
mov
dec
outsl
add
cld
push
sub
push
sbb
cltd
dec
push
cmp
push
ljmp
mov
push
mov
leave
lret
mov
inc
pop
or
or
popf
and
pop
xor
mov
jnp
jl
into
jo
mov
les
cmc
rclb
cmpsl
sbb
subl
js
jno
xchg
lods
mov
fisubrl
push
es
lock
and
aaa
inc
ss
mov
popf
and
mov
cmp
inc
or
and
outsb
pop
xchg
inc
jg
lds
mov
cli
dec
ja
and
scas
mov
cmp
out
lcall
fidivl
dec
lds
ret
adc
data16
test
shl
adc
mov
dec
inc
sbb
cmpsb
pop
loope
out
xchg
scas
or
xchg
insl
jmp
daa
jae
fisttpl
out
inc
sub
xor
jp
ss
adc
cwtl
cmp
sub
cwtl
or
loop
cs
sbb
int
cmp
mov
clc
push
clc
lods
es
dec
lret
movsb
adc
mov
jge
ja
test
mov
or
adc
jne
das
pop
inc
xchg
and
jno
pusha
add
sbb
and
pushf
xlat
push
fldl
pop
push
sub
iret
and
xchg
sub
cmp
jmp
adc
or
mov
pop
jecxz
std
mov
lret
inc
shrb
mov
sub
insb
adcb
cmp
xor
sti
fwait
arpl
cmp
mov
or
cmc
push
in
xchg
lret
mov
sahf
in
pop
push
cmp
push
lret
jo
jge
and
mov
and
mov
xor
cmpsb
movsb
xor
lahf
lods
push
imul
add
mov
inc
mov
sbb
iret
sbb
das
jo
ds
dec
push
test
xchg
inc
mov
xchg
push
daa
jl
mov
sarb
scas
popa
mov
mov
shll
jbe
xchg
dec
fisubs
aaa
add
mov
psadbw
sbb
out
push
pop
mov
pop
cmpsl
psubsw
arpl
addr16
lea
call
mov
pop
push
fidivrl
xorb
inc
mov
mov
sub
pop
in
pop
fisubrl
jl
jg
rclb
cmc
cmpsb
sbb
jl
jl
add
sarb
ds
es
xchg
cmpsb
ret
sub
aaa
and
cwtl
pop
je
pushf
jb
push
lds
add
sar
movsb
inc
mov
push
dec
sarb
pop
stos
inc
in
mov
std
xor
jo
jge
jl
lock
xchg
insl
ret
add
ja
push
sub
cmp
mov
pop
pop
cmp
pop
add
jl
adc
cmpsl
int
ss
insl
mov
xchg
cwtl
ror
out
adc
sbb
aam
mov
les
out
inc
or
mov
cmp
jl
mov
fnstenv
pop
hlt
movsb
ja
xchg
mov
sbb
aad
nop
mov
push
mov
dec
mov
mov
pop
iret
lcall
xor
je
mov
add
xor
cltd
cmp
mov
sbb
jmp
adc
jp
stc
outsl
repnz
insl
inc
data16
or
dec
stos
stos
shrb
sbb
add
mov
jnp
clc
test
pop
cmp
adc
int
je
dec
ja
jnp
add
pusha
dec
ss
push
mov
outsl
or
ffreep
fisubl
insl
pop
lahf
rcrb
call
jp
mov
aaa
les
stos
push
roll
pop
mov
mov
shlb
cli
push
mov
clc
xchg
call
xchg
pop
push
and
adc
mov
pop
xor
dec
mov
fcmove
in
mov
fnstsw
hlt
out
pusha
push
lock
or
ja
je
aam
mov
sub
sub
adc
popa
add
xchg
hlt
add
test
cmc
xor
sub
xchg
roll
and
mov
xchg
mov
xchg
or
daa
pop
testb
dec
out
sti
pop
gs
sbb
ss
into
jo
leave
jno
out
mov
or
xor
loopne
out
cmpl
pop
lock
and
scas
sub
fildl
mov
inc
nop
movsb
or
notb
loopne
pop
mov
fwait
in
scas
fxch
clc
xor
rcrl
cld
std
jne
jb
stc
xchg
lods
aam
loope
xchg
mov
xor
shll
adc
cmp
xor
out
jmp
mov
data16
in
jns
push
ja
push
popa
mov
jecxz
pop
xchg
loope
mov
fcoml
movsb
stc
dec
mov
sbb
ss
jle
in
movsl
mov
push
jbe
pop
or
lahf
cwtl
sar
and
in
int
sbb
mov
cld
outsb
popa
dec
out
push
pop
sahf
or
fwait
mov
pop
xchg
scas
jo
sbb
into
inc
fucomi
jae
mov
imul
mov
out
sbb
pop
push
cltd
jns
and
imul
jne
or
fcom
jle
adc
sbb
fstpl
fwait
fs
icebp
mov
dec
mov
inc
or
shr
test
cmpsb
push
icebp
or
xchg
inc
lods
dec
and
outsl
adc
rcll
popf
fwait
push
in
aas
arpl
inc
call
cmp
out
out
loop
outsl
std
insb
jl
loop
push
insb
imul
and
in
xchg
xchg
xchg
je
mov
aas
fisttps
mov
lahf
mov
out
das
sub
mov
pop
push
ds
jne
xlat
ret
or
repnz
in
stc
out
negl
xlat
in
sub
popa
adc
inc
and
lret
mov
test
aad
cwtl
or
dec
cmc
pop
sbb
cld
je
out
cmc
mov
mov
test
stos
scas
push
push
pushf
and
dec
xchg
xchg
negb
imul
xor
sbb
loopne
lcall
int3
pusha
gs
in
shrb
cmp
stc
incl
push
les
mov
jg
in
out
inc
push
or
jnp
and
scas
pop
lahf
imul
loop
test
or
imul
shl
int3
dec
dec
xchg
or
cmp
cmc
in
dec
outsl
mov
pop
jb
ret
addr16
xchg
sub
sub
in
popa
mov
xchg
mov
adc
js
pop
mov
cmp
sarb
insb
sub
cmp
rcll
push
jmp
call
add
repz
les
pop
lcall
push
ja
xchg
adc
pop
jg
xchg
call
pushf
inc
pushf
rcl
int
push
outsb
dec
dec
jecxz
mulb
mov
insl
enter
mov
outsb
sbbl
ret
popa
ja
cli
rcl
test
sub
loop
fwait
ja
inc
sbb
mov
jp
shl
push
loopne
mov
lods
dec
in
sarb
ja
sub
pop
pop
xlat
mov
pop
loope
adc
jae
imul
sti
into
dec
xchg
test
and
cmp
sbb
test
bound
loope
clc
outsl
pushf
mov
or
ss
push
dec
adc
rclb
test
jbe
aas
mov
push
je
lock
aaa
data16
lcall
mov
or
dec
ficomps
push
rcl
inc
push
fistpll
out
cs
shll
sbb
inc
push
sbb
scas
lds
push
out
fisttpl
test
lret
push
mov
daa
popa
fsubrs
pop
cmp
push
and
scas
xchg
mov
addr16
mov
bound
xlat
inc
sbb
add
test
in
pusha
push
jg
pushf
pop
dec
pop
pushf
test
xchg
ja
push
adcl
dec
jne
and
enter
pop
out
arpl
push
jnp
out
xorb
sti
lret
mov
xor
mov
add
int3
mov
lds
out
mov
int3
lcall
push
enter
repnz
jmp
cltd
pop
sahf
jno
repnz
dec
xor
sbb
dec
and
cmp
sub
xchg
inc
enter
jmp
push
in
pop
std
sub
xor
and
push
add
test
jg
int
add
roll
test
inc
jno
notl
mov
lods
xchg
or
lock
mov
je
xchg
xor
mov
cmp
xor
int3
mov
push
es
lcall
movsb
adc
push
test
stos
jbe
sub
cmpsl
popf
mov
dec
mov
pop
or
adc
scas
jnp
nop
aad
sbb
push
rcrl
xchg
cld
lret
push
xor
add
mov
subl
pushf
mov
std
jg
movsb
mov
scas
push
cltd
popf
dec
and
mov
pop
jl
fwait
mov
clc
dec
push
mov
hlt
or
sub
test
push
jns
loopne
fsubrs
mov
rol
add
jl
aam
stc
fwait
sub
std
pop
pusha
xchg
ret
xorb
movsb
mov
sub
sbb
lock
ljmp
xor
adc
popa
movsb
fst
sbb
js
jnp
fstl
cmp
rcrl
xchg
jno
mov
popa
sbb
push
mov
rorb
and
push
lret
push
les
jecxz
xchg
out
xor
bound
and
sti
add
mov
or
push
pop
divl
mov
imul
loope
mov
into
out
ret
jmp
arpl
pop
enter
and
loope
dec
jmp
dec
movsl
inc
mov
test
mov
andb
sbb
push
sub
ja
xor
iret
xchg
lods
cmpl
xchg
xlat
andb
ss
pop
mov
cli
or
insl
inc
add
xor
adc
mov
rcrb
mov
inc
cmp
mov
sub
mov
pop
mov
mov
and
jg
add
in
xchg
adc
hlt
jne
mov
cmp
cwtl
inc
imul
xor
enter
ret
and
lahf
adc
sub
mov
sbb
jl
jl
loopne
ljmp
shl
jb
pop
adcl
decl
enter
jmp
mov
sub
lcall
push
out
jb
jne
out
lcall
sub
data16
dec
jecxz
push
stos
pop
cmp
adc
dec
js
mov
jns
rcrb
push
or
xor
push
xor
pop
push
inc
insb
enter
xchg
dec
mov
xchg
lods
mov
into
jbe
mov
outsb
cld
cmp
into
or
dec
repnz
das
je
mov
outsl
inc
andps
mov
sbb
repz
jp
jp
sbb
jbe
push
sub
in
xlat
and
add
pop
adc
sub
xor
jle
jo
cmpb
mov
lret
sbb
xchg
or
sbb
xor
outsl
repnz
sbb
pop
divb
adc
adc
dec
movsb
pop
mov
push
and
insl
rol
aam
mov
xchg
dec
int3
mov
fs
lcall
data16
xor
dec
mov
call
popf
push
icebp
cmp
or
mov
pop
add
aad
inc
adc
loopne
fdivl
cmp
sub
sbb
in
and
sub
inc
dec
test
das
mov
inc
mov
int
inc
xchg
ror
sbb
in
lahf
sbb
sub
subb
jg
test
and
mov
inc
push
xchg
xor
dec
in
mov
test
mov
cmp
inc
adc
jle
in
xor
inc
sahf
test
pop
xor
lret
ja
rcrb
and
mov
adc
mov
lods
ret
jle
call
inc
sub
mov
add
in
fisttpll
mov
mov
jmp
adc
cmp
stc
xchg
sbb
aaa
mov
out
cs
push
mov
dec
sub
push
les
cld
shll
test
mov
sub
xor
lahf
inc
loopew
pmulhw
xchg
jne
ret
test
mov
adcb
lods
dec
jb
fwait
repnz
divb
mov
rcrl
add
mov
nop
call
cmp
mov
mov
add
xchg
dec
and
lea
inc
sbb
int
loope
fdivrl
ret
dec
mov
mov
imul
aas
pop
cmp
sbb
lods
int
sbbb
fmull
nop
aaa
movsl
pop
mov
xchg
xor
and
inc
outsl
lock
aaa
sti
and
loopne
mov
jno
pop
sahf
ficoml
mov
out
adc
pop
les
loopne
cmpl
push
adcl
popa
in
loop
sub
or
loop
lock
outsl
and
pop
es
cltd
xchg
dec
mov
mull
push
jmp
push
jp
jbe
into
ja
ljmp
xchg
shl
fbstp
outsb
sbb
pop
leave
inc
enter
dec
adc
sarl
pop
and
sub
js
lods
je
adc
imull
sbb
arpl
add
adc
xlat
movsb
cmp
jae
out
adc
insl
test
mov
xor
mov
outsl
push
jecxz
pop
cmpsl
arpl
and
ret
bound
add
push
cmp
jns
lret
stos
push
jbe
mov
ds
add
push
push
lcall
add
ds
adc
ljmp
test
into
pusha
data16
dec
xor
adc
sbb
push
xchg
mov
adc
dec
push
xchg
push
mov
jnp
fiadds
cmp
jle
or
ljmp
mov
or
je
sbb
mov
jns
ror
xchg
cmp
inc
push
xchg
dec
sub
inc
repz
pop
xchg
outsb
mov
std
icebp
xchg
pop
int
mov
inc
das
dec
out
rcrb
jae
mov
jmp
dec
jle
or
dec
xchg
mov
es
xchg
es
testl
xor
sbb
jns
cmp
divb
andb
adc
add
lcall
cwtl
xchg
push
out
xor
notb
fildl
test
mov
hlt
jp
xchg
cmp
scas
scas
inc
push
xor
jge
mov
push
inc
dec
adc
or
add
push
out
sbb
dec
int3
or
push
insb
or
add
mov
sbb
arpl
push
dec
jl
xchg
adc
je
je
les
jmp
out
out
testb
sbb
mov
int
lahf
lock
xchg
rorb
subl
push
aad
dec
test
lret
fisttpl
jmp
mov
xorl
jno
or
das
mov
adc
outsb
adc
stos
mov
add
mov
sub
mov
or
sub
cmp
popa
fwait
int3
xchg
sahf
mov
jge
out
and
cmp
lea
xlat
xchg
cmp
out
fimull
stc
cld
push
dec
dec
mov
sbb
sbb
out
cmp
mov
xor
mov
jnp
mov
inc
mov
add
xorb
rorl
inc
aad
dec
xchg
pop
cmpsb
mov
decl
ds
sbb
sbb
sbb
sbbl
jge
js
mov
inc
xchg
mov
hlt
or
hlt
dec
rcl
fcmovnbe
cwtl
mov
mov
pop
bound
cmc
notb
pop
push
shlb
mov
cmpsl
int
jnp
dec
je
add
pop
xor
and
xchg
out
push
mov
sbb
scas
jo
out
sub
cmpsl
pop
fcmovnbe
fildll
aaa
push
xor
push
mov
inc
sti
cmp
repz
int
mov
push
loop
adc
cmp
xor
mov
sub
setne
fimuls
jbe
xor
idiv
fs
cmc
xchg
dec
cmp
mov
mov
test
push
in
mov
xchg
dec
pop
fadds
or
sahf
xor
xchg
les
and
fwait
dec
dec
push
mov
jl
mov
shl
es
lds
mov
add
mov
in
xor
imul
packssdw
lret
pop
and
fiaddl
pop
nop
dec
mov
pop
hlt
imul
inc
lock
repz
cmc
add
jo
mov
arpl
jno
in
sbb
sahf
pop
pop
adc
into
adc
jae
cmpsb
rcll
into
out
and
je
and
xchg
xor
cmpsl
sub
cmp
loopne
cs
outsl
xor
imul
out
push
stos
lods
xor
mov
mov
jae
subb
pop
fisttps
push
lahf
les
stos
andl
xlat
out
pusha
push
jg
das
pop
inc
aaa
adc
or
push
cmpl
fisubrl
add
fldl
clc
and
add
mov
cmp
cmp
pop
fimull
dec
pop
cmc
xor
push
and
jb
fists
fucom
jl
push
popa
mov
bound
dec
sub
inc
je
inc
fisubrl
push
or
adc
pop
mov
aaa
mov
rorb
test
sbb
xchg
idivl
rcrl
mov
rorb
mov
mov
out
xchg
add
cltd
jnp
lret
rcrb
test
sbb
mov
test
adc
sbb
inc
mov
leave
inc
mov
sbb
adc
mov
sarl
cmp
incl
dec
cmp
cmpb
das
xchg
mov
jbe
xlat
js
and
cli
imul
imul
jecxz
fcmovnbe
push
inc
pop
xchg
lods
push
shl
mov
add
ds
pop
jns
xor
test
cli
dec
stos
dec
outsb
mov
push
and
xor
xchg
push
push
mov
fnsave
dec
mov
mov
xchg
push
xlat
add
cwtl
and
insl
es
lahf
aam
jge
sbb
lds
aad
cmpsl
adc
lcall
iret
cltd
aas
jo
fcmovnbe
sahf
mov
adc
jp
fbld
out
shlb
cmp
add
ret
push
lods
rorl
inc
lahf
sub
shll
push
pop
fistl
xchg
fstpl
xchg
leave
adc
inc
sub
sub
mov
jo
insb
mov
in
sbb
and
hlt
ljmp
jecxz
xor
clc
or
xor
adc
and
sub
mov
push
scas
push
and
fiaddl
js
xchg
sbb
mov
xchg
cmp
repz
inc
lret
push
cmp
cs
pop
mov
inc
out
xor
hlt
imul
sub
mov
testb
and
mov
call
fs
and
dec
rclb
sahf
pop
xchg
cld
inc
cltd
sbb
xlat
adc
popa
add
test
push
frstor
push
addr16
shl
orb
sbb
sbb
mov
xlat
stos
cmp
push
fwait
aaa
lcall
sub
xlat
jae
cli
or
icebp
sub
lcall
cltd
pop
add
pop
jge
mov
push
shl
rolb
ret
inc
add
mov
mov
hlt
ss
sub
cli
inc
mov
stos
in
push
mov
or
arpl
imul
lret
and
sub
iret
dec
cmp
aad
mov
stos
sbb
cmc
in
imul
dec
into
shlb
adc
xchg
xor
mov
not
adc
xor
insl
dec
push
js
incb
stc
test
js
aaa
sarl
pop
ss
cltd
xchg
fdivrl
out
mov
int3
jmp
fmuls
inc
cmpsb
rorb
das
lahf
mov
push
aas
fsubp
lret
cld
outsb
mov
scas
fwait
ljmp
mov
adc
add
inc
sahf
dec
push
cli
push
pop
loopne
adc
aaa
aam
fisubl
push
mov
lock
rcrl
dec
pop
scas
xlat
push
xchg
jae
mov
xor
jecxz
icebp
push
push
pop
cld
mov
jnp
jne
int3
adc
ljmp
mov
jmp
scas
push
lock
mov
jnp
lret
jg
mov
scas
push
or
bound
stos
sub
or
xchg
in
in
xchg
in
xor
xchg
adc
pop
int
into
mov
cwtl
mov
adc
cmp
or
mov
mov
sub
sub
dec
and
fisttpll
push
or
adc
adc
repnz
into
xchg
xchg
pop
sub
movsbl
xchg
mov
xchg
push
cwtl
jecxz
int3
cld
adc
sbb
daa
xor
insb
xchg
loop
add
nop
in
mov
sub
xchg
lods
push
in
test
inc
shl
in
add
loop
out
insl
dec
std
xor
push
cltd
ljmp
inc
pop
mov
dec
mov
mov
stos
icebp
xchg
adc
or
or
push
fwait
inc
nop
pop
push
mov
roll
push
cwtl
mov
stos
ss
std
cli
stc
or
push
lock
jo,pt
test
in
aas
cmp
clc
adc
adc
cmpsl
adc
pop
cmp
sbb
call
jl
mov
mov
fstps
push
or
or
fbld
popf
mov
or
aam
mov
in
adc
bnd
or
inc
sub
jmp
push
pop
cmc
push
aas
xor
pop
adc
push
pop
inc
pop
stos
push
enter
scas
ret
clc
clc
and
icebp
mov
ja
cmp
adc
in
movsb
test
repnz
cmp
lahf
jl
sub
pop
cmc
daa
or
bound
iret
ss
xor
imul
or
pop
xchg
in
test
pop
out
adcb
mov
adc
jns
std
out
and
movsl
mov
mov
leave
cmc
std
push
xchg
cmp
std
dec
mov
shrl
push
pop
push
or
pop
add
lahf
inc
arpl
xchg
and
sahf
dec
addr16
pop
add
mov
push
sarb
mov
jecxz
mov
jecxz
dec
jg
add
jle
cmpb
es
loop
fsubr
shrb
mov
xor
mov
mov
mov
mov
insl
and
lods
ret
cmp
mov
inc
fs
push
fnsave
mov
test
lea
lea
int
adc
adc
lds
jns
ret
repz
or
jbe
lea
sub
nop
push
pop
imul
push
xor
mov
mov
push
js
fistpll
addb
mov
xchg
icebp
cmpsl
lods
movups
ret
push
pop
decl
dec
or
lock
out
cli
test
push
cltd
cmpsb
cmpsb
pop
push
and
in
cwtl
lahf
push
je
xor
test
add
jnp
dec
and
lods
call
call
cmp
and
dec
pop
data16
mov
das
adc
jbe
xor
mov
adc
pushf
pop
sub
xchg
scas
fldcw
jbe
mov
orl
popa
or
adc
outsb
push
jno
jl
data16
test
lret
and
imul
sub
sub
mov
data16
out
or
cltd
xchg
call
mov
in
or
jae
mov
fsubrs
mov
icebp
adc
movsb
mov
push
mov
inc
xchg
iret
in
or
and
call
mov
loop
pop
push
cmpsb
addl
out
sti
cs
pop
cltd
inc
loop
sbb
cmp
pop
jb
jo
popf
mov
xlat
add
jg
sbb
shrb
mov
sbb
dec
stos
xchg
mov
lock
mov
pusha
add
mov
push
or
enter
in
xchg
cmp
pop
loop
cmp
insb
pop
lea
ffreep
jl
mov
data16
int
aad
push
push
pop
lods
xlat
sar
sti
pusha
mov
outsl
iret
into
arpl
mov
mov
push
ret
add
jae
fdivp
dec
mov
inc
xchg
and
sbbl
insl
lods
test
lds
and
scas
out
fisubrl
mov
stos
add
rclb
ds
jbe
mov
dec
repz
xchg
lcall
and
xchg
sti
jg
insl
adc
and
inc
cmpl
adc
or
decb
cmp
ds
xorl
jl
mov
mov
mov
adc
pop
jp
mov
cli
pusha
push
test
imulb
cmp
icebp
aaa
das
jle
int
fucom
xchg
and
cmp
add
insb
adc
inc
xor
mov
or
fnsave
cltd
stc
fstl
sub
adc
inc
outsl
dec
inc
and
call
inc
jno
push
mov
icebp
movsl
jo
cwtd
into
sub
cmp
adc
sti
dec
pop
cmpl
mov
pushf
mov
inc
inc
sbb
mov
push
jne
lock
inc
test
loop
stos
mov
ret
pop
mov
out
lret
dec
cli
push
dec
fs
out
cmpsl
xor
insl
iret
xor
jns
and
cld
inc
dec
or
stos
data16
mov
pop
leave
add
sahf
bound
aaa
and
push
jecxz
roll
outsb
rorb
mov
push
lea
in
xchg
mov
jge
mov
and
add
sub
xor
or
ss
icebp
add
lds
pushf
pushl
sbb
pusha
pop
ss
jl
imul
cmpsb
adc
or
dec
mov
and
xlat
mov
ljmp
ja
inc
xchg
rcrb
mov
sub
cltd
jmp
inc
add
dec
pop
inc
call
sbb
int3
inc
ficompl
xor
sub
addr16
test
push
loop
das
roll
push
xorl
dec
int
pop
mov
cmc
mov
out
push
movsl
xchg
test
jp
fbstp
loopne
sbb
mulb
rorl
mov
dec
mov
loopne
mov
pop
mov
pop
jns
adc
jg
out
adc
inc
stos
pop
push
scas
lcall
lcall
lcall
test
fstps
imul
xchg
insl
jbe
lcall
mov
push
icebp
jp
repz
clc
movsl
sub
fidivrs
int3
sbb
sbb
jbe
mov
fidivrs
ret
int
gs
inc
cmp
xchg
jmp
push
inc
leave
scas
xchg
rorl
cld
in
sub
sub
jnp
cmp
sbb
sbb
aam
lret
pop
cmp
sbb
pop
pop
lds
xchg
outsb
lods
mov
adc
mov
jecxz
sub
gs
cmc
inc
push
movsb
cmpsb
mov
fs
dec
lods
inc
jno
dec
test
push
mov
inc
jg
loop
dec
pop
inc
sbb
mov
jle
inc
lods
and
xor
mov
mov
pop
pop
movsb
adc
lds
and
rorl
testl
and
nop
outsb
daa
pop
arpl
cmp
mov
mov
mov
rcrl
mov
imul
jo
js
movzwl
shlb
std
pusha
adc
mov
xchg
push
add
jne
push
clc
je
push
push
adc
or
faddl
cmp
repz
testb
pop
sub
adc
add
mov
mov
add
rol
clc
mov
nop
es
fildl
bound
xchg
xor
dec
scas
lods
gs
popa
fmuls
in
mov
rcrl
rcrl
stos
xor
or
mov
sahf
in
cmp
dec
fbld
pop
test
addl
jne
inc
xor
or
mov
fiadds
dec
inc
jns
stos
push
inc
adc
out
push
ret
pop
lret
stc
push
and
pop
pop
ds
lret
xor
mov
sub
or
sbb
mov
cmpsl
sarl
push
mov
roll
mov
xchg
inc
in
cs
inc
pop
jmp
jo
jbe
out
push
divl
cmp
sub
imul
jmp
mov
mov
in
cmp
pop
add
mov
cmp
pop
into
cmp
cmpsl
int3
push
dec
adc
insb
sub
bound
out
pusha
subl
sbbl
pop
call
jecxz
leave
daa
and
dec
sbb
and
repz
cld
xor
xchg
popf
xlat
shlb
cltd
and
movb
add
popf
ja
xor
aad
cmp
stc
mov
into
jae
stos
insb
pop
cmp
aad
push
pop
flds
or
insb
aad
xchg
in
cmp
mov
fstpt
jo
cmp
mov
les
xrelease
and
or
aas
xchg
cmp
sbb
in
inc
pop
dec
sub
mov
push
push
or
das
mull
or
repz
leave
hlt
cmp
cmp
add
aaa
in
jb
pushf
add
pusha
out
lret
sub
and
iret
popa
jmp
fldl
cs
ret
and
cmp
xor
test
mulb
jl
and
test
dec
shl
into
pop
mov
outsb
dec
lret
ret
adc
stos
dec
mov
cmp
pop
cmpsl
data16
push
rol
mov
mov
daa
sbb
lcall
lret
jno
rclb
dec
mov
pop
test
lea
inc
jmp
mov
push
jae
int3
lret
movsl
cwtl
das
incl
jns
push
sub
xchg
int3
test
mov
xchg
pusha
shrl
jp
dec
pop
test
fisttps
inc
sbb
mov
inc
jnp
xchg
jbe
dec
gs
lods
jno
mov
sub
jl
jmp
loope
push
or
fdivrs
jecxz
or
jae
xor
popa
fstpl
mov
inc
adc
push
or
sub
test
add
dec
ret
xchg
cmpsl
dec
test
out
mov
mov
xchg
mov
mov
mov
rorb
movsb
mov
repnz
scas
sub
int
aad
mov
pop
or
loopne
fists
aad
mov
dec
adc
pop
and
aas
sub
repz
test
pop
hlt
rcrb
stos
mov
es
notl
or
cwtl
pop
fwait
shr
jmp
push
lcall
jae
cmc
fisubl
lret
icebp
jecxz
push
sbb
xchg
out
pop
push
js
inc
std
pop
out
add
xchg
inc
jl
arpl
ljmp
cld
arpl
cmc
jle
enter
and
push
pop
add
shrb
cmp
icebp
jmp
stos
outsl
or
or
inc
add
sahf
cmpsb
push
xor
test
mov
js
xchg
lds
inc
pop
sti
and
inc
test
cmp
cmp
popf
xlat
sbb
outsl
inc
pusha
icebp
jg
dec
xor
pop
bnd
lea
pop
addl
loopne
es
cld
push
das
stc
leave
cmp
test
sbbb
or
add
mov
sahf
sub
les
into
jnp
out
test
std
pop
mov
mov
xchg
nop
inc
daa
xor
sub
push
jae
cmpb
inc
fstl
cmc
pop
mov
into
dec
push
mov
xchg
pop
and
scas
aam
icebp
pop
xor
mov
clc
mov
mov
dec
add
subb
ss
in
push
sbb
inc
aam
in
loop
push
in
dec
lock
lock
inc
test
movsl
cmpsb
or
test
adc
push
mov
shll
int3
adc
cld
cmpsb
dec
dec
xor
add
bound
mov
imul
jle
loop
push
in
insl
cmpsl
jecxz
or
sbb
mov
cmp
nop
and
ds
push
mov
pop
push
push
fbstp
dec
loopne
xchg
xchg
cmpb
mov
adc
fwait
xor
mov
add
pushf
fwait
push
fs
and
mov
mov
xlat
mov
setno
popf
test
add
cwtl
cmp
lds
in
adc
push
imul
dec
mov
inc
divb
push
mov
push
divb
or
test
test
mov
pminsw
xchg
das
sub
push
aad
mov
adc
push
jnp
vcvtpd2dqy
jne
cmp
jl
fimull
xchg
daa
add
inc
push
dec
push
or
imul
inc
fisttpl
push
movntq
add
faddl
leave
dec
cmp
popf
hlt
mov
jb
out
dec
sub
push
inc
cs
push
xor
loop
xchg
mov
sub
push
jle
mov
stos
jb
dec
lcall
pop
jo
sbb
sbb
sbb
test
test
loopne
push
imul
mov
in
dec
adc
out
les
test
stos
aam
in
and
std
mov
repnz
mov
mov
jmp
in
add
lea
pop
xor
repz
loopne
icebp
sahf
andl
mov
repz
inc
pop
push
leave
pop
inc
jae
test
fxch
sbb
jns
sti
js
adc
pop
outsl
popa
sub
es
movsl
cld
pop
scas
push
and
out
jne
lcall
inc
aas
cmp
cltd
arpl
icebp
and
jno
out
sahf
fistl
xor
leave
and
loop
xchg
sub
inc
lock
and
sbb
das
add
cmp
jp
xorl
in
dec
imul
or
cmp
mov
adc
aam
push
dec
push
push
or
popa
daa
lods
cwtl
test
outsb
mov
dec
vpaddq
test
cmp
sbb
push
rclb
mov
ds
mov
or
cmp
popf
jecxz
pop
sub
add
mov
or
jle
and
lcall
out
pop
insl
dec
out
enter
jmp
clc
and
popa
gs
loopne
inc
lds
lods
jne
das
cmc
mov
mov
cli
inc
iret
cmp
mov
and
das
sub
push
mov
sarb
lea
pop
lock
xor
pop
or
jbe
loopne
int3
sbbb
cli
push
mov
loop
ror
push
addr16
ja
jle
push
data16
and
xlat
lds
hlt
js
pop
xor
std
out
incl
sub
pop
xchg
xchg
andb
aas
scas
lea
out
das
sub
push
les
insl
inc
inc
sar
and
cmpsl
out
inc
xlat
dec
push
and
lds
sub
ret
push
dec
rolb
pop
seto
vpaddd
sub
jle
movsb
and
jb
test
xchg
shll
sbb
ficoml
xchg
xor
ss
insb
xor
jns
mov
mov
pop
adc
sahf
and
inc
clc
sub
outsl
xor
imul
ficoms
lods
jb
push
mov
test
xor
lock
lar
push
push
jl
mov
mov
mov
dec
jle
xchg
sub
outsb
and
xor
add
ss
jg
test
push
ret
mov
push
int
pop
popf
hlt
movsb
insl
dec
popf
xchg
jbe
mov
fnsave
lcall
iret
scas
push
xor
sbb
arpl
xor
fmuls
stc
sar
inc
or
decl
sbb
mov
sbb
std
popa
test
test
cli
sbb
cmpsb
lret
push
adc
mov
mov
incb
add
stos
in
or
cli
inc
mov
sub
scas
jbe
jb
push
xor
sub
push
aam
jle
int
mov
push
fucomi
sub
cmpsl
inc
ror
es
aaa
imul
pop
lahf
adc
sahf
mov
loope
nop
mov
sahf
popf
xlat
repnz
mov
jb
scas
jge
gs
mov
xchg
fstl
enter
jle
pushf
je
sub
lcall
cld
xlat
mov
xchg
mov
jae
shrb
js
leave
nop
fld
es
fwait
loope
inc
cmpsb
int
pop
out
or
cmp
aad
aam
xor
fxch
sub
loope
lock
jb
hlt
inc
js
jmp
xchg
in
insl
popa
sbb
subb
outsl
and
add
imul
and
jbe
sbb
shrb
jl
rcll
mov
mov
pushf
shl
cmp
hlt
loope
in
push
cmp
and
xchg
clc
pop
xchg
push
cli
cwtl
clc
mov
test
iret
jns
lods
and
aad
insl
dec
out
cmp
bound
out
xchg
pop
inc
adcb
dec
mov
adc
scas
adc
cmp
sbb
icebp
xchg
push
lret
decl
nop
fs
add
bnd
mov
in
pop
cmpl
jg
in
mov
int
test
nopl
sar
push
leave
cmc
rcrl
std
pop
sub
adc
mov
repz
pop
inc
push
jns
popf
stos
stos
lods
adc
dec
loope
xchg
inc
jnp
pop
mov
insl
dec
jae
cld
push
stc
mov
daa
push
rcrl
xchg
fcoms
or
mov
repz
mov
xor
sbb
mov
fwait
cmp
push
mov
jmp
pop
inc
rcl
push
cmp
jp
fs
popl
repz
sbb
and
out
dec
pushf
in
pop
loopne
mov
mov
pop
sbb
gs
xor
xchg
xchg
into
jns
fstps
inc
aad
cmp
inc
scas
sbb
ja
sub
xor
aas
fnstenv
mov
sahf
sbb
jbe
shll
hlt
sbb
fwait
lods
mov
push
inc
das
sahf
cmc
cwtl
adc
mov
cltd
pop
out
jb
or
popa
loopne
movsb
sbb
jp
fnstsw
pop
pop
push
mov
jne
adc
cmp
fsts
pushf
lods
out
test
fcmovu
je
mov
sbb
mov
inc
cmpsl
rcrl
repnz
jne
add
mov
mov
movsb
pop
int3
mov
jb
pop
loope
call
cmpsb
dec
jg
sahf
popa
outsb
sti
mov
test
outsl
addl
mov
dec
nop
adc
mov
int3
cmpsl
mov
push
scas
cmp
sub
pop
aaa
lret
push
adc
cmc
dec
mov
gs
je
push
in
test
or
or
scas
cmc
adc
xchg
mov
jl,pn
outsl
negl
mov
rcrb
or
lcall
mov
pushf
popf
jecxz
add
pop
or
dec
cli
test
mov
or
call
jmp
xchg
out
testb
stos
mov
nop
jle
sbbb
add
xchg
xor
pop
aaa
push
xchg
push
mov
mov
dec
mov
into
push
mov
push
mov
test
addr16
rol
jo
xor
movsl
icebp
jnp
or
pop
pop
xchg
sbb
idivl
fmul
scas
ror
cmc
fnsave
stc
aaa
lret
push
shlb
pop
add
sub
sub
ret
pop
imul
xor
call
js
pop
xchg
jo
outsb
insl
xchg
sbb
cmpl
dec
sahf
out
sbb
je
cmp
xchg
xlat
lods
clc
sub
xor
add
push
out
mov
add
or
rcl
pop
xor
mov
movsl
rolb
bound
js
push
mov
cwtl
shrb
dec
leave
test
xor
stos
test
icebp
sbb
lods
test
jbe
sub
cmpsl
xchg
or
add
cmc
sbb
cmp
add
dec
outsb
jmp
cwtl
test
push
push
stos
lds
push
xchg
into
add
rorl
in
pop
fiaddl
out
mov
or
imulb
fcoml
ds
es
mov
popf
xorb
and
rcr
scas
sub
lods
xchg
dec
sbb
mov
push
daa
sub
gs
mov
mov
pop
xchg
xchg
mov
jne
scas
jle
fs
fs
pop
gs
xchg
push
pop
pushf
mov
xor
bound
add
sub
outsl
andl
sub
fwait
mov
sbb
outsb
insl
inc
xchg
cltd
dec
sub
dec
sub
xor
fidivrl
add
outsb
sbb
dec
push
icebp
xor
mov
jle
rcl
testl
movsb
lret
sub
ss
in
stos
fcmovbe
or
test
sbbb
or
test
pop
fs
jg
push
fstpl
mov
and
cmp
xor
imulb
cwtl
pushf
xor
mov
cltd
mov
cmp
lds
lods
cltd
nop
or
jnp
push
pop
dec
pop
imulb
push
cmc
dec
xchg
loopne
or
push
pop
repz
mov
pop
or
movsb
les
mov
stc
dec
jne
lods
push
std
ret
lea
and
ret
enter
pop
sti
push
rclb
push
ljmp
sahf
loop
xchg
xchg
repz
sti
fsubl
inc
fimuls
repz
popf
pop
or
pop
cmp
clc
xor
ja
fsts
insl
sar
fnop
mov
int3
inc
out
orb
ror
mov
cmp
aas
xor
mov
in
outsb
movsb
jbe
in
into
xchg
out
pushl
ret
lock
jae
or
xchg
cwtl
jle
sub
or
push
nop
mov
or
dec
outsb
xor
dec
inc
ja
pop
test
pusha
sub
das
cli
sbb
gs
pop
stos
push
xchg
xchg
outsb
stc
push
int
and
pop
fstl
pop
xchg
or
cmp
inc
add
adc
or
xor
inc
push
push
sbb
dec
stos
xor
mov
clc
fldl
cmpsb
sub
mov
js
dec
mov
pop
aad
fcoml
mov
je
sub
in
js
enter
jp
pop
imulb
add
mov
sub
and
bound
mov
or
in
sub
push
loopne
add
lcall
sar
mov
sbb
fcoml
dec
mov
add
scas
or
mov
xlat
ds
call
mov
push
pop
scas
sbb
js
sub
jne
sarb
icebp
jne
mov
fsub
ftst
in
push
inc
mov
cld
ss
repnz
xchg
leave
leave
adc
pop
mov
adc
adc
test
mov
scas
sahf
xchg
aaa
pop
movsb
lret
rcrl
ds
aaa
loope
dec
addb
inc
add
inc
movsl
pop
pop
inc
xorb
sbb
aas
enter
pop
div
mov
hlt
neg
xchg
data16
mov
jmp
aaa
imul
scas
mov
test
jne
fs
movsb
mov
xor
ljmp
jp
fnstenv
mov
sub
jns
ds
out
pop
jnp
aam
sbb
movsb
insl
call
sahf
xor
jno
pop
in
cld
lcall
outsl
adc
xchg
inc
pop
mov
mov
sub
mov
or
pop
or
test
add
outsb
add
nop
cmp
cmp
js
aaa
ret
dec
sahf
shll
imulb
fldcw
xchg
pop
sbb
arpl
dec
mov
fdivp
mov
inc
push
push
cs
jge
fs
mov
andb
ljmp
mov
imul
ljmp
pop
xchg
sub
dec
into
mov
mov
enter
out
inc
sbb
in
cs
pushf
adc
lfs
std
inc
sahf
lods
enter
int
lahf
test
inc
andb
jp
sahf
repz
es
sbbb
test
and
cmp
add
mov
dec
add
or
dec
sub
dec
js
lea
loope
jno
cmp
jl
push
mov
cmc
aas
movsb
inc
xchg
sti
cmp
iret
filds
outsb
fsubrl
lods
ds
dec
jp
and
dec
ret
xchg
push
cmp
dec
rcrb
int
sbb
lret
pop
jge
outsb
adc
jge
and
cmpsl
jecxz
xchg
jecxz
push
mov
cmpsb
pushf
pop
les
pop
pop
dec
lods
cltd
mov
test
dec
rorl
inc
dec
aam
cmp
scas
add
sbb
sbb
fs
lahf
sub
xchg
or
xchg
add
fcompl
and
xlat
and
lret
or
add
test
xchg
ffree
lahf
dec
sub
flds
inc
or
insb
xor
int3
push
iret
sub
sbb
adc
es
psrlq
xchg
push
rol
ljmp
jb
jo
loope
xor
ud0
and
es
fldcw
sti
push
xchg
sahf
push
lods
mov
frstor
xchg
les
into
test
cmp
loop
pop
push
lods
fs
in
xor
push
fsub
mov
push
ret
adc
xchg
push
push
xchg
xchg
mov
push
fwait
test
bound
clc
stos
fildll
movl
outsb
add
movsl
pusha
sub
xchg
push
clc
and
inc
dec
insb
stos
push
inc
shr
adc
and
ss
stos
or
aad
fidivrs
push
push
sbb
cmpsb
mov
inc
push
repnz
repnz
pop
loopne
and
dec
pop
push
mov
jnp
mov
cmp
sub
add
in
pop
xor
push
mov
aaa
orb
sbb
call
jg
cmp
mov
shl
mov
cmp
push
inc
adc
cmpsb
sbb
cltd
in
test
inc
or
adc
xchg
movl
sub
imul
test
push
mov
cmp
jmp
mov
pop
lahf
test
das
out
insl
inc
loopne
subb
pop
repz
add
pop
inc
lock
jmp
push
jno
cmpsb
and
stos
repz
dec
pop
lds
mov
mov
into
sub
test
and
add
popf
pop
ja
fnstcw
pop
jae
pushf
jmp
lods
xor
popl
add
jmp
arpl
fcmovb
popa
jp
pop
or
mov
jl
mov
mov
mov
and
addr16
and
jbe
sysexit
mov
cmc
mov
rol
mov
iret
mov
mov
cmp
lahf
cmp
cmpb
insb
mov
inc
pop
jbe
sbb
xor
jge
dec
outsb
inc
das
mov
jg
mov
mov
ret
dec
xchg
push
cmc
sbb
dec
sub
ljmp
sub
jns
dec
inc
bound
lcall
or
pop
movsb
sbb
sub
sbb
mov
xchg
inc
and
sti
les
out
fwait
mov
add
dec
subl
sbb
or
inc
or
cmpsl
lcall
or
and
enter
sbb
push
push
lahf
sub
cmpsl
adc
stos
gs
and
inc
add
test
cwtl
out
sub
xchg
mov
add
mov
adc
mov
and
inc
add
imul
mov
and
jno
ret
push
iret
or
sub
scas
fwait
mov
cmp
pop
push
int3
aad
sti
cmp
out
mov
shll
scas
pop
movb
out
icebp
cltd
insb
outsb
mov
add
sarl
lret
jno
sbb
test
mov
scas
jecxz
mov
pusha
push
ds
fwait
inc
jmp
jo
sti
loop
cmp
push
popf
je
cmp
pop
xor
stos
pushf
ret
cwtl
mov
jb
pusha
lock
xchg
add
or
mov
hlt
pop
roll
arpl
push
xor
fisubs
jge
fstpt
sbb
test
mov
insl
lods
mov
jecxz
jg
mov
addr16
adc
or
adc
loopne
sub
push
dec
sbb
push
testl
cmp
fmulp
xor
repz
hlt
lea
pop
mov
call
inc
dec
sub
xchg
popf
jb
mov
mov
ss
std
sub
das
in
jg
imul
adc
stos
fimull
or
sub
lcall
rorb
jmp
cmp
fldt
dec
and
or
mov
inc
pop
inc
imul
xchg
mov
lods
notb
aad
adc
loope
inc
test
inc
std
push
aad
mov
and
mov
hlt
repnz
mul
cmp
lds
mov
sub
mov
inc
pop
fstps
adc
lret
jae
mov
out
fcoms
push
mov
fisttpll
sahf
inc
push
push
sub
dec
test
add
dec
movsbl
ret
popf
adc
sbb
in
movsb
add
rorl
mov
or
and
leave
das
hlt
dec
or
cwtl
dec
mov
outsl
fdivs
cmc
jo
mov
fcoml
leave
cmp
pop
pop
repnz
jbe
push
sub
iret
testb
push
in
adc
cmp
cmpsb
jp
xor
xchg
jno
stos
pop
rorl
or
lret
lret
xchg
dec
shlb
xchg
push
cld
jmp
mov
sbb
sub
lock
push
dec
jge
inc
and
pop
jns
xchg
xor
out
insl
outsl
in
loop
lret
push
fsubrs
mov
sub
jns
push
jge
mov
lds
pusha
pop
xchg
stos
sti
or
xor
mov
xchg
sti
dec
test
dec
add
push
dec
mov
pop
mov
push
jbe
xchg
aaa
pushl
add
adc
ds
adc
and
and
daa
xchg
outsl
mov
sub
clc
pop
inc
xor
jp
in
xor
popa
popa
pop
add
call
testl
into
aam
loope
push
sub
mov
mov
mov
sub
xlat
jo
jl
mov
add
push
fidivl
mov
xchg
je
lcall
stc
lds
movsb
loop
xchg
and
in
sub
inc
les
sub
sbb
push
movsl
add
or
dec
mov
mov
lea
lods
inc
in
leave
dec
sbb
mov
aad
pop
jle
jns
and
jmp
push
inc
mov
mov
mov
js
lahf
ficompl
sbb
fldcw
jge
leave
les
jne
adc
jg
xor
movsb
fs
lahf
cld
sub
add
dec
or
sub
dec
adc
hlt
sub
cli
aas
popa
outsb
push
jp
stos
lret
ljmp
insl
and
push
je
cmpsl
mov
pop
inc
cmpsl
hlt
adc
pop
ljmp
mov
aad
aad
popa
inc
add
loop
dec
andb
daa
pusha
xchg
mov
je
jns
cmp
mov
sub
out
movb
pop
loope
jnp
xor
add
sub
ret
and
adc
in
mov
repz
xor
mov
scas
jp
push
ret
dec
stos
lods
xchg
cmp
sub
mov
lret
lods
cld
cmp
loope
xchg
or
pop
jecxz
xor
sub
or
cmp
push
and
xchg
jp
daa
out
pop
cmp
or
sub
test
mov
cmpsl
and
inc
sbb
mov
imul
jp
mov
jg
pop
pop
ljmp
fwait
jmp
push
sbbl
cli
push
movsb
mov
outsb
push
xlat
mov
cmp
jae,pt
loop
ljmp
pop
in
mov
rcll
push
jns
int
dec
dec
adc
jns
mov
mov
aaa
or
xlat
xor
ljmp
or
loope
sub
pop
push
mov
add
add
test
xor
and
je
mov
dec
push
test
mov
xchg
jl
add
sbb
mov
jne
jl
bnd
ja
and
adc
and
mov
jge
rclb
ja
lds
sahf
movsb
test
mov
pop
add
inc
outsb
xchg
dec
mov
dec
or
rorb
pop
jmp
sub
dec
les
push
mov
push
sti
test
mov
fcoml
sbb
movsb
int
stos
imul
stc
mov
jecxz
scas
push
inc
das
jp
test
lods
rcll
gs
ljmp
push
sbb
daa
rcll
sub
pop
bound
sub
movsl
mov
popa
cmp
movl
inc
or
les
sbb
mov
xchg
loope
subl
fildl
cld
test
std
clc
xchg
cmp
lock
jbe
mov
adc
pop
iret
pop
aad
loope
jne
adc
mov
sbb
or
addr16
xor
and
out
pop
test
movsb
jnp
cmpsb
icebp
and
lret
daa
orb
mov
aad
idivb
loop
ja
lock
mov
loope
jnp
cmc
cmp
sbbl
sbb
push
inc
sbb
int
iret
lods
jmp
fstps
mov
in
xchg
and
repnz
aas
mov
outsb
push
mov
xchg
and
inc
mov
pop
and
push
mov
cmp
into
aaa
xor
xor
std
xlat
mov
jp
out
inc
fldt
lar
ja
scas
sbb
pushf
pop
loope
fsubl
jmp
les
mov
lahf
leave
sub
mov
push
push
sbb
push
ds
adc
push
mov
iret
mov
cli
mov
das
mov
clc
test
cmp
shrb
push
sti
xor
in
repz
rclb
dec
ret
lods
fucomp
fists
pusha
bound
sbb
pop
dec
inc
push
jbe
das
fisttps
loopne
aas
mov
pop
lahf
add
push
inc
mov
scas
cmp
pusha
pop
mov
in
xor
sub
add
lret
aas
push
xchg
dec
adc
dec
add
pop
das
sub
or
dec
jne
mov
mov
fcos
pop
inc
pop
pusha
imul
cmp
out
bound
cmp
jns
fidivrl
outsb
inc
xchg
popf
mov
sub
xchg
pushf
jb
sbb
pop
lcall
call
sub
inc
fidivrs
mov
int3
decl
loopne
sbb
mov
js
xchg
movsl
mov
and
loope
sub
out
bound
out
inc
imul
mov
clc
icebp
inc
out
or
aam
mov
xchg
adc
mov
lock
fdivl
push
ret
sbbl
repnz
push
add
pop
js
add
ret
pop
outsb
xchg
stc
insl
enter
xlat
inc
xchg
arpl
sub
mov
loope
and
mov
scas
ffreep
adcb
push
int
ja
shl
jne
or
push
repnz
jmp
stos
or
xor
mov
cli
cmp
mov
fcmovnb
mov
fs
push
pop
mov
sbb
cwtl
sbb
leave
ja
out
sbb
ret
pop
stc
pop
in
push
mov
or
mov
mov
sarb
daa
mov
xchg
pop
jmp
popl
gs
aad
lea
fldcw
push
hlt
or
shll
sub
ja
scas
insl
pop
and
pusha
hlt
inc
jge
sbb
clc
jae
hlt
arpl
xor
push
sub
cmp
dec
aad
xor
mov
aam
fnstcw
insb
xchg
sbb
sub
test
sub
push
pop
scas
adc
and
out
jp
iret
sarb
cmpsl
popa
pand
sahf
jo
lea
ljmp
jno
adc
enter
cmp
inc
cwtl
jno
xchg
repz
adc
mov
and
xchg
push
adc
aad
sbb
insb
aas
js
adc
das
jae
dec
clc
jecxz
jge
out
mov
cmp
jecxz
mov
cmpsl
or
push
mov
fbstp
pop
push
sbbb
imul
icebp
add
jle
inc
stc
repnz
shrb
ljmp
fcomip
and
mov
inc
ucomiss
insl
or
lret
cltd
mov
add
call
jmp
out
jle
ret
cld
sub
add
jmp
push
xor
lods
or
push
adc
push
pop
fcoms
jp
jl
pop
in
cmp
addl
scas
jo
jge
sub
push
mov
jne
movsl
mov
jns
sub
loope
dec
mov
fcompl
jae
insl
lahf
pop
cmc
xor
mov
dec
outsl
sbb
adc
aam
int3
push
xor
cwtl
notb
data16
jae
test
loopne
xor
jo
fadds
scas
xor
js
and
push
ficoml
inc
repz
pop
pop
cli
mov
or
subb
or
mov
sbb
fst
mov
mov
insb
aam
lods
push
insb
inc
movsl
cmpsb
jo
pusha
adc
sub
lods
int3
jge
lret
out
mov
cmp
das
xchg
and
enter
push
mov
and
jnp
enter
mov
cmc
jecxz
dec
mov
inc
adc
test
jne
outsb
std
mov
repnz
pushf
sub
outsl
dec
negl
xor
mov
adc
cmc
out
dec
cltd
xor
add
mov
sbb
pop
ficomps
cmp
fwait
or
inc
pop
ja
cmp
ja
fcomi
cmp
cmp
cmp
jge
loop
scas
lods
ss
ficoml
rcl
inc
repnz
jnp
mov
stc
xchg
imul
push
hlt
pop
sub
out
loopne
inc
xchg
shlb
add
push
jae
js
jmp
xchg
or
gs
div
insb
and
mov
mov
jb
or
test
xchg
imul
out
ret
push
sti
test
add
gs
cwtl
lcall
mov
mov
test
lock
incl
lahf
fsub
mov
push
ficoms
xchg
xchg
pop
push
shr
jo
jg
stos
lret
mov
test
imul
push
dec
iret
jae
movsl
cmp
cmp
xchg
lock
push
pop
mov
cltd
aam
lret
mov
repz
das
test
out
adc
sbb
jge
loopne
fstl
addl
insl
mov
push
cmp
stc
xchg
xlat
std
std
mov
mov
aaa
imul
stc
ja
dec
push
shll
fiaddl
jg
mov
gs
inc
popa
in
jl
mov
or
leave
dec
ret
adc
std
sub
jl
adc
sub
pop
lods
xchg
repnz
add
jb
mov
fisubs
mov
out
or
mov
mov
pop
pusha
adc
popa
ds
lcall
jge
or
ljmp
std
mov
loope
push
cmp
push
jb
cmp
push
rolb
aaa
mov
mov
ss
jmp
jmp
loope
popa
cmp
fsubs
mov
mov
lock
mov
mov
jecxz
pop
xchg
jge
push
mov
push
lahf
xchg
clc
pop
call
fsubrs
repz
mov
lods
xorb
pop
mov
gs
into
cmpsb
call
aam
ror
inc
cmp
inc
daa
divl
xchg
ss
mov
mov
dec
stos
mov
adc
stc
and
pop
mov
inc
shlb
negb
adc
lret
test
cwtl
test
movsb
add
leave
push
cld
mov
subl
lret
fs
sbb
lock
ret
loopne
and
xor
addl
and
aas
xor
out
sbb
add
dec
adc
push
add
out
dec
enter
jge
push
mov
movsl
or
jmp
or
sbb
sub
insb
sbb
xor
push
mov
nop
cwtl
inc
popa
dec
sub
push
mov
dec
fnstenv
in
ficomps
ret
ds
jg
in
mov
in
dec
repnz
out
pushl
in
push
movsb
add
mov
push
lods
sbb
dec
adc
ss
and
mov
push
jns
cltd
push
aas
or
push
rcrb
pop
cmpsb
xor
lret
aam
mov
je
ja
popf
jle
jne
stc
shl
dec
ljmp
sub
jae
sub
add
cli
fimuls
pushf
in
jno
cld
fs
inc
imul
push
cmc
fisttpll
add
jp
push
dec
jl
sbb
push
lods
nop
mov
data16
fnstsw
or
mov
orb
jae
jne
stos
out
pop
repz
lea
xchg
stos
loop
pop
lret
xchg
scas
es
popf
enter
leave
push
xchg
dec
cmpsb
inc
mov
dec
mov
imul
inc
xlat
sub
mov
ljmp
mov
xchg
subb
div
push
push
add
subl
xchg
sub
test
enter
lods
mov
jo
nop
mov
push
outsl
mov
dec
pusha
jae
stc
inc
int3
dec
scas
les
in
lds
mov
out
jne
push
cmp
jp
jnp
xor
xchg
xchg
sub
ljmp
repz
or
mov
rolb
inc
jns
dec
int3
movsb
pusha
inc
shlb
fcmovnu
push
ds
rolb
mov
add
test
xorl
mov
inc
aaa
jne
jne
add
test
loop
jle
and
jno
inc
jo
cld
lods
outsb
sub
mov
mov
dec
pusha
mov
popa
ret
inc
and
fdiv
or
leave
outsl
sbb
daa
mov
aad
addr16
jmp
cmp
arpl
int
cld
jp
add
inc
xorl
test
in
jnp
outsl
inc
ss
sarb
movsl
int3
inc
faddl
pop
mov
dec
rorb
add
cs
ret
fistpl
pop
mov
pop
dec
cmp
addb
imul
stos
add
jg
xchg
cwtl
lret
sub
add
cmp
sbb
enter
sub
mov
push
pop
movsb
mov
cmp
test
lret
out
adc
ja
dec
mov
push
xchg
lret
ja
test
insb
sbb
pop
cli
shlb
addr16
inc
cmp
push
dec
inc
jnp
jbe
insb
push
sbb
std
fistpl
mov
lret
hlt
clc
scas
gs
sbb
pop
sub
cli
and
test
jb
test
movsl
les
movsl
ret
rcll
fninit
cmp
jge
mov
xor
out
adc
mov
adc
insb
inc
in
in
sbb
or
push
nop
xor
mov
push
dec
mov
push
dec
mov
shrl
icebp
dec
sub
test
mov
cmpsl
mull
xchg
pop
out
cmp
sub
jne
or
mov
xchg
xchg
and
pop
mov
sub
pushf
imul
cmpsb
xchg
xchg
inc
xor
inc
or
fdivrp
fwait
cmc
stos
movsl
sub
cmp
pop
mov
add
jno
es
call
push
mov
mov
call
lret
fldt
push
popa
dec
mov
outsl
cltd
enter
jbe
repz
scas
mov
dec
dec
ret
dec
ret
ljmp
dec
mov
sahf
clc
adc
add
and
pop
jnp
std
and
addr16
jge
outsl
jo
lods
cmpsb
mov
cmpsb
inc
sbbl
aad
inc
aam
aam
jne
mov
cmp
iret
adc
dec
shll
push
dec
and
notl
std
incb
fs
xchg
ret
das
mov
push
movsb
insb
sub
aas
inc
test
xchg
hlt
push
mov
pop
call
fcmovnbe
in
aas
mov
popf
dec
test
mov
sbb
stos
push
mov
cltd
jne
sub
dec
mov
push
mov
repz
fstl
mov
mov
mov
push
hlt
sti
xchg
lret
sti
dec
cli
loopne
ret
cli
outsl
push
out
lea
jp
sub
lahf
faddl
sub
mov
popf
negb
xchg
add
xor
pop
mov
xor
es
dec
adc
out
mov
mov
adc
pop
jb
cmp
mov
or
js
jbe
and
sub
dec
adc
xchg
es
mov
sbb
testl
test
fwait
sbb
aad
inc
push
mov
and
cltd
xlat
push
insb
inc
jae
or
cli
or
sbb
cmp
lods
lcall
push
and
iret
jo
jo
pop
push
mov
push
xor
fprem1
dec
add
scas
cli
xorb
sub
and
int3
jne
push
mov
loop
push
das
jne
and
push
or
loop
and
test
adc
in
ret
leave
test
aaa
cmpl
inc
jg
mov
fs
pusha
adc
fnstsw
xor
call
push
mov
xchg
ljmp
in
mov
and
into
dec
push
in
mov
rolb
push
lret
stos
addr16
notb
insb
inc
repnz
addb
ljmp
das
xchg
arpl
out
jns
mov
pop
sti
mov
and
sbb
sub
dec
or
push
fwait
jno
lcall
xor
jae
mov
mov
xor
dec
fwait
lcall
enter
popa
in
dec
lea
nop
xor
repnz
ljmp
leave
outsb
movsl
call
sbb
inc
out
addr16
adcl
int3
stos
aas
imul
adc
lret
icebp
jecxz
xlat
cmpl
sbbl
and
inc
sbb
and
adc
je
add
sub
out
adc
xlat
cmp
pop
and
mull
popf
mov
imul
lret
aam
lcall
sahf
hlt
jge
mov
ds
aam
inc
mov
xor
rcrl
dec
xchg
or
pop
and
int3
inc
xchg
movsl
jmp
sub
sbb
push
jmp
iret
cltd
test
sahf
adc
jl
jp
dec
hlt
insb
mov
std
adc
or
xchg
xchg
fdivr
sub
adc
dec
loopne
xor
add
test
mull
mov
push
cs
pushf
pop
add
imul
int
xchg
jnp
and
cwtl
loope
subl
adc
loope
test
in
pop
lea
mov
in
sbb
clc
xor
pushf
gs
je
sahf
mov
mov
mov
pop
int3
or
sub
inc
mov
pop
dec
or
outsl
mov
pop
sbbl
cmp
dec
mov
adc
jg
dec
xchg
jnp
test
sub
leave
sub
aam
aas
xor
in
call
and
pop
in
test
pop
in
loope
int
pop
loop
std
xor
xchg
int
setns
cmp
inc
push
lods
push
ret
aam
enter
movsl
and
and
adc
add
into
mov
nop
imull
outsl
fwait
push
popa
test
adcb
cmp
inc
add
ljmp
jl
xchg
jnp
lret
roll
pop
aam
pop
sub
jns
jg
or
mov
mov
mov
sbb
test
les
push
repz
mov
shl
cwtl
stos
xor
push
data16
jmp
test
int3
movsl
pop
sbb
sbb
mov
jo
mov
xor
rorl
adc
push
add
xlat
jmp
add
fsubrl
pop
ja
imul
or
add
mov
sti
sbb
mov
aas
inc
inc
mov
mov
scas
stos
and
loope
add
push
mov
and
cltd
and
mov
sarl
cmpsb
insb
mov
and
cmp
aad
or
ss
pop
adc
adc
cmp
adc
fsubl
xor
popf
xor
mov
test
adcl
jle
jle
push
adc
or
mov
fmul
into
pop
fisubl
xchg
in
in
sub
or
outsl
xchg
addb
sbb
cmp
es
xchg
mov
jnp
mov
add
mov
sti
sub
fsubp
lock
ss
lods
mov
shll
in
pop
insl
decl
ret
daa
mov
push
mov
xor
outsb
unpckhps
lret
fs
js
int3
push
in
add
or
das
adc
pusha
fmull
outsb
dec
xor
pop
out
lods
movsb
jnp
aad
fcompl
int
rorb
js
jo
adc
fistpll
and
pushf
fsubs
hlt
adc
inc
stos
js
test
or
sub
int3
pop
inc
xchg
xchg
jo
adc
jae
mov
pop
sbb
pop
xor
sbb
shlb
and
pusha
js
daa
or
add
aas
lcall
or
dec
pop
test
lret
sub
mov
xchg
aas
jl
out
test
sub
mov
cmp
dec
mov
inc
mov
pusha
xchg
mov
mov
adc
popa
mov
out
mov
pop
dec
pop
and
out
mov
movsb
enter
push
dec
xor
test
stos
pop
cld
jno
cmc
pop
push
pop
int3
jns
mov
and
ret
addl
in
imul
into
repz
cmp
dec
mov
and
xor
jl
loop
repnz
out
push
fwait
es
loope
add
ret
sbb
rolb
mov
rcll
iret
insl
scas
jmp
out
jbe
cmp
mov
and
inc
or
sarl
pop
pop
sub
sarl
ss
shlb
mov
push
bound
push
push
sbb
push
pandn
dec
push
fs
movsl
int3
in
mov
in
mov
test
xor
add
pop
mov
and
pop
pop
xor
mov
int3
aas
or
jbe
ljmp
repnz
imul
sbb
repnz
ja
push
and
js
fs
popf
icebp
sahf
jae
fisubrl
das
adc
scas
mov
leave
jle
fbstp
mov
test
repnz
push
sbb
in
into
imul
loop
addl
stos
dec
inc
inc
sti
pop
or
jmp
or
sub
dec
loop
pusha
repz
and
cld
inc
sub
and
out
jo
stos
mov
sub
addl
andb
in
sub
fadd
and
inc
nop
inc
cli
lods
dec
leave
pusha
mov
shlb
ret
and
inc
insl
fstpt
push
add
or
pop
out
ja
out
pusha
push
sbbl
xor
mov
jno
movsl
scas
out
or
cmp
cmp
int
mov
filds
jno
sub
nop
int
and
xchg
es
fmull
fwait
or
scas
xor
pop
sub
fmul
pop
mov
ret
inc
into
mov
out
popa
sub
out
jmp
mov
lods
mov
pop
xchg
push
cmp
add
int
adc
dec
sub
lea
mov
inc
xor
push
xchg
push
mov
mov
rorl
xchg
nop
mov
loope
scas
leave
dec
mov
mov
mov
addr16
repnz
dec
push
cmp
pop
shll
push
movsb
and
imul
decb
push
std
repz
inc
bound
loop
or
pop
int3
push
or
mov
mov
xlat
int
fsubs
inc
or
imul
and
push
flds
pop
sbb
cli
pop
cmpsb
test
ss
ja
push
fstp
lcall
pushf
pop
lcall
mov
pop
dec
lds
lcall
add
mov
fiadds
insl
outsl
loopne
out
sti
out
fimuls
sub
cmpl
out
pop
push
and
cmp
or
add
mov
loopne
sbb
outsl
mov
hlt
sbb
dec
ret
in
in
sbb
push
in
lahf
jbe
shlb
xchg
jge
jle
inc
add
das
dec
mov
ret
dec
push
sub
push
imul
dec
into
mov
cmp
icebp
in
bound
push
cmp
push
sub
push
xor
fsubr
xchg
std
cs
xchg
in
out
add
mov
lret
dec
fdivp
out
lds
push
or
push
jmp
dec
cmp
rcrb
fnsave
je
inc
lods
sarl
in
mov
int
and
push
lcall
mov
outsb
jno
popf
lret
push
addr16
js
cli
or
lcall
mov
jne
ss
pop
jbe
bound
xchg
pop
xchg
pop
mov
mov
rcl
rcrl
sti
pusha
shlb
pop
outsl
pop
enter
out
cmp
sub
lods
pop
cmpb
pop
leave
jmp
jl
scas
sar
and
pop
mov
pop
out
mov
mov
xchg
leave
mov
pop
cmp
iret
mov
scas
pop
scas
rcr
sub
push
or
mov
jmp
pop
bound
push
or
push
cmpsb
stc
ret
inc
jp
mov
inc
xor
mov
dec
mov
dec
vpsubsw
dec
sbb
aas
adc
inc
mov
adc
and
mov
dec
popl
mov
mov
mov
in
in
mov
lea
add
sub
jb
mov
push
cmp
cmp
and
and
mov
pop
arpl
jae
pop
mov
push
in
js
mov
xor
sti
inc
and
sti
cli
cmpsl
ja
hlt
or
jb
cmp
mov
out
mov
movsl
rorb
int3
sbb
loop
and
mov
enter
lahf
rol
cmc
ljmp
mov
gs
xor
push
out
stc
rcrl
lahf
jp
xchg
push
adc
cmpsl
out
sub
pop
jns
fisubl
xchg
das
sbbl
ds
popf
or
xor
push
add
dec
pushf
push
sahf
xor
stc
subl
stc
mov
inc
xchg
mov
inc
xchg
sub
shrb
mov
sub
pop
mov
imul
jl
cltd
iret
stos
aad
pusha
push
dec
aaa
xchg
jae
hlt
int3
stc
sahf
test
stc
dec
mov
rcr
loop
bound
lea
fs
adc
loope
ffree
and
stos
ja
and
pop
imull
pop
jp
hlt
xchg
jns
push
in
sbb
out
call
fwait
add
out
sub
xor
lret
sahf
inc
pmullw
jge
faddp
inc
add
std
imul
lds
loop
jo
sbb
movsb
rol
dec
subl
js
and
sahf
lcall
dec
fcompl
mov
das
jp
movsl
das
pop
out
dec
cmp
jae
sub
mov
cmp
loop
dec
arpl
cmpsl
mov
sbb
dec
lds
mov
stos
and
and
push
or
in
inc
dec
repz
loop
sub
lcall
mov
data16
ja
stos
push
jecxz
jo
mov
push
inc
not
mov
pushf
lds
sub
mov
aas
jno
push
push
adc
inc
sub
inc
call
xchg
adc
pop
pop
inc
leave
in
out
and
mov
loope
enter
jmp
push
pop
push
jmp
xor
or
cmpsl
jl
jmp
repz
jmp
sbb
das
push
ss
sub
pop
dec
cmp
aam
aad
mov
mov
pop
push
xchg
repnz
mov
xor
and
scas
and
xchg
sub
mov
inc
pop
sub
int
out
rolb
cld
mov
vcmpsd
inc
cmp
and
push
movb
add
lock
push
scas
mov
jmp
out
jo
pop
mov
std
fmuls
jl
jecxz
dec
imul
adc
rclb
jl
andb
dec
push
sahf
xchg
out
or
jbe
push
xor
pop
cmp
dec
in
lock
push
mov
mov
sbb
cmpsb
iret
ret
xor
jmp
mov
insl
lret
jns
das
aas
or
pop
xchg
out
push
xor
xor
and
scas
adc
aas
les
lret
popa
subl
push
fwait
shll
push
icebp
into
dec
sub
sub
pop
sbb
mov
push
hlt
scas
ret
xor
dec
lret
and
dec
ret
or
popf
ja
cmp
pop
loop
push
test
mov
movsb
mov
jmp
jge
into
pop
jno
xchg
orb
outsb
daa
arpl
dec
mov
jnp
and
ret
repz
rcrl
and
data16
cld
call
add
test
hlt
ret
and
ja
pop
ss
cltd
xor
sub
pop
adc
fs
inc
rclb
shrl
push
out
leave
pop
pushf
ljmp
sbb
fnstcw
hlt
insb
fidivrs
insb
push
jmp
jo
jecxz
adc
test
cmc
inc
imul
mov
dec
inc
call
arpl
and
jmp
enter
insb
adcb
add
hlt
jne
movsb
lret
repz
jmp
push
les
cmc
cmpsb
xchg
mov
mov
mov
pop
icebp
jle
push
arpl
add
mov
mov
imul
jae
cmp
mov
outsb
lods
push
or
imul
mov
sbb
cmc
sub
mov
pop
add
not
sub
ja
pop
movsb
xor
xor
push
out
stos
mov
mov
sete
int3
mov
arpl
stos
and
jno
gs
ss
cmpsb
packsswb
stos
mov
pop
enter
or
ret
scas
out
mov
nop
jb
out
inc
mov
pop
ret
mov
shl
and
lcall
jge
jg
pop
cmp
or
mov
out
dec
jl
jge
jge
pop
cmp
outsb
pop
jmp
bound
js
pop
sub
mov
inc
mov
or
mov
mov
push
jg
sbb
and
in
jns
xchg
sub
jns
mov
mov
push
or
adc
andl
lret
je
push
push
leave
jmp
sahf
cmp
adc
adc
sbb
lret
mov
int
mov
or
adc
pop
add
pop
fsubl
hlt
loopne
idivl
fs
xchg
adc
xchg
pop
inc
cmpb
sub
mov
cmc
enter
sarl
dec
repnz
mov
insl
cmpsl
out
jg
push
dec
stc
jae
daa
xorl
hlt
adc
sbb
dec
inc
pop
cmp
aaa
mov
test
test
dec
sub
adc
les
mov
lret
sub
jnp
xor
leave
sub
mov
jecxz
jbe
adc
sbb
pop
jnp
ja
fmuls
cld
inc
ss
jns
int
pop
mov
pop
jge
fwait
mov
adc
adc
sub
icebp
jg
push
xchg
dec
insb
mov
pop
test
sbb
mov
in
das
int3
pop
lods
mov
movsb
mov
cmp
stos
insl
popf
mov
shrl
cmpsl
pop
or
shll
out
nop
fidivs
in
imul
icebp
in
fs
xchg
sub
mov
and
add
fadds
pop
inc
insl
jmp
jb
into
sbb
insl
hlt
dec
fadds
mov
out
mov
repz
movsl
bound
loope
sub
jle
insl
jecxz
fs
or
cmp
cmp
repnz
pop
loope
fcmovnb
mov
mov
mulb
push
cmpsb
add
inc
inc
dec
xorb
addr16
jmp
fisubrl
imul
scas
addl
sahf
lcall
clc
add
mov
mov
mov
jnp
cmc
aaa
fsubr
jg
ljmp
shll
lret
aaa
xchg
push
or
std
xchg
fwait
call
and
out
lahf
adc
cmpsb
sub
popa
fnstsw
ret
aam
or
dec
aaa
mov
sbb
stc
idivl
movsl
push
xor
gs
in
mov
out
in
scas
leave
xlat
test
in
jae
addr16
or
psrlq
dec
loope
ss
mov
cmp
cwtl
mov
mov
outsb
inc
push
sub
push
cmp
xchg
and
push
mov
xor
or
fisubl
inc
andl
adc
das
push
mov
mov
inc
cmpsl
xor
shll
mov
inc
lahf
xchg
mov
cmp
sub
pop
cwtl
bound
loop
push
in
mov
jecxz
xchg
mov
enter
mov
and
rorl
int
jmp
jb
dec
into
popa
mov
fsubrs
fisubs
insl
push
sahf
inc
pushf
clc
and
cmpsl
sbb
add
xor
lret
pop
or
xchg
jle
pusha
push
add
xor
popa
xchg
xchg
push
mov
sub
cld
xor
out
ss
imul
sbb
xor
jp
dec
in
in
mov
scas
lods
xor
popf
aad
scas
inc
scas
loope
pop
cmp
je
xchg
push
xor
pop
mov
fdivrs
pop
jne
inc
das
or
sbb
cmp
or
xor
arpl
pop
outsb
sub
xor
test
push
pop
xor
pop
xchg
ljmp
lods
cmp
rclb
xchg
std
movsl
sarb
jo
lods
lock
mov
cwtl
dec
in
clc
lahf
cmc
jb
adc
push
ss
or
test
incb
insl
add
icebp
fcmove
cmp
rolb
sbb
imul
stos
pop
or
aam
xor
fwait
add
mov
mov
inc
push
fwait
pop
push
jge
mov
imul
fwait
shrl
sub
in
push
js
jp
pop
xor
mov
pushf
pop
add
rorl
pushf
addb
adc
lahf
push
jo
sub
out
inc
push
mov
push
inc
pop
inc
sub
add
pop
dec
add
or
and
pop
dec
adc
jo
push
mov
shlb
mov
imul
jecxz
sbb
std
scas
pop
std
cmpsb
jl
push
movsl
mov
add
mov
sbb
cmp
cwtl
xchg
or
pop
inc
mov
and
daa
bound
rorb
pop
fdiv
mov
inc
pop
imul
add
cmp
test
mov
leave
xor
mov
mov
jmp
xchg
out
lods
sbb
jge
dec
push
sbb
xchg
ret
jno
jl
ret
lea
mov
add
ds
jae
call
lock
es
movl
dec
cmp
rcll
pop
dec
adc
mov
cs
stc
sti
cmp
inc
pusha
movsl
sbb
jb
adc
outsb
arpl
sbb
out
cltd
dec
popa
dec
cmpl
adc
int3
leave
dec
in
push
mov
sub
or
pop
sbb
sbb
jns
shlb
mov
outsb
add
cmp
mov
aaa
dec
sbb
lahf
ja
lods
bound
out
xchg
pop
inc
pop
dec
ret
test
jno
adc
jp
cld
cwtl
pop
cmc
in
and
pop
les
leave
into
mov
insb
mov
sbb
mov
fbld
push
pop
mov
scas
clc
jle
pop
mov
pop
and
xchg
fdiv
add
les
adc
sub
adc
pop
movsl
fsubr
or
pop
adc
dec
pop
cmp
ret
dec
cmc
cli
inc
and
inc
test
icebp
pushf
adc
cmp
jnp
loope
ret
jecxz
mov
dec
mov
add
mov
insb
imul
xlat
dec
outsl
push
nop
addr16
lcall
int3
inc
fdivs
dec
jo
sbb
mov
xlat
jg
outsl
adc
gs
lret
mov
dec
aam
push
lds
ss
jnp
dec
sub
sbbb
fwait
pop
mov
stos
push
and
cmp
out
push
jmp
dec
stos
jecxz
xchg
loop
fwait
mov
jmp
add
daa
adc
dec
into
sbb
test
add
inc
jmp
test
push
flds
stos
sub
in
xchg
cmp
in
ficoml
shll
cmp
and
mov
mov
or
and
lods
pop
or
dec
out
mov
loopne
xor
fcomps
dec
pop
cmp
mov
and
or
and
mov
jo
sbb
push
cmp
adc
xchg
or
rorb
fimuls
jae
fsubr
mov
nop
pop
xlat
insl
xchg
shlb
add
mov
jp
clc
aam
push
and
sahf
fwait
inc
lock
inc
icebp
and
lods
mov
insl
push
fwait
mov
xor
mov
jl
mov
push
push
sub
insb
jle
xor
outsb
cli
sbb
xchg
mov
subb
enter
in
xor
adc
mov
sbb
imul
xor
mov
popf
mov
dec
and
popa
lods
add
je
insl
pop
dec
insb
mov
push
cmp
addl
mov
or
fs
pop
mov
inc
std
aam
insb
popf
xor
mov
ss
fisubl
mov
inc
cmp
inc
pop
push
mov
sub
mov
andl
inc
rcrb
xchg
lcall
je
cmp
mov
sub
jnp
pop
mov
mov
xchg
xor
ds
sbb
lds
sbb
pop
dec
jp
sarl
imul
mov
dec
cmp
mov
xorb
fiadds
popf
vrsqrtss
add
inc
out
sub
push
cmpsl
popf
pop
loop
jnp
push
sbb
sbb
dec
pop
add
mov
and
dec
xchg
ja
outsl
jmp
jecxz
push
data16
adc
ja
lds
or
mov
loope
adc
pop
mov
fldcw
hlt
jae
mov
popf
xchg
dec
lds
aaa
out
mov
notb
fcompl
push
dec
es
adc
mov
jge
mov
sub
or
bound
mov
jp,pt
ja
outsb
xchg
jg
pushf
and
ljmp
push
fidivrl
inc
adc
andl
repnz
dec
sarb
jnp
jae
add
jle
add
pusha
push
clc
in
fisubrs
sub
push
inc
cmpsl
jg
xchg
ret
cmp
and
js
or
vmwrite
cmp
dec
pop
xor
adc
or
cmp
test
movl
imul
loop
nop
push
fistps
cwtl
jmp
inc
js
mov
jl
js
push
push
fsubrs
adc
out
ret
lcall
dec
lcall
jns
xchg
xchg
dec
ljmp
jbe
addr16
mov
jo
dec
push
daa
inc
stos
aad
nop
fidivs
adc
push
mov
enter
mov
sbb
loopne
or
stos
jl
aam
fmuls
xchg
fdiv
cli
mov
sti
jmp
std
loop
mov
sbb
cmp
and
sbb
sub
push
cmpsl
mov
mov
stos
dec
push
idivb
inc
cs
push
shlb
dec
lea
mov
shlb
or
or
mov
push
inc
xchg
scas
cmp
adc
xor
dec
sahf
adc
fistpl
popf
mov
sub
in
int
adc
dec
push
in
jp
or
popl
xchg
ja
sahf
sub
add
minps
hlt
mov
push
push
lds
jae
imul
or
mov
mov
ja
test
fcmovb
jmp
xor
or
mov
pop
scas
inc
inc
pop
shll
test
dec
lret
lret
out
stc
pop
mov
fsubs
xchg
pop
xor
inc
fs
and
mov
lods
add
xchg
je
popf
pop
pop
mov
push
mov
test
jne
lea
fcoms
mov
or
not
scas
mov
xor
test
xor
stos
and
aaa
xchg
out
repz
jmp
xor
ret
std
cmp
sbb
fistpl
xor
inc
jns
dec
ss
jmp
ljmp
test
out
shl
push
outsb
sahf
xchg
popf
test
or
fnsave
sbb
mov
lret
outsl
insb
or
fstpt
inc
addr16
pop
rcrl
stc
xlat
mov
sub
enter
orb
stc
into
inc
pushf
jge
ss
movl
xlat
aas
pop
loop
stc
sub
int
sub
lds
or
cmp
sbb
pop
mov
jae
ljmp
aaa
test
push
fidivl
mov
lret
adc
out
lock
inc
and
pusha
movsb
jae
int3
testl
push
in
lods
xor
fisttpl
add
or
pop
add
pushf
addr16
xor
notb
or
mov
ret
push
mov
lods
jbe
aaa
cs
jne
leave
cmpsb
pop
pop
mov
push
or
fidivs
push
mov
int
idivb
sub
in
bound
jnp
inc
lcallw
inc
nop
xchg
rorl
inc
cli
cwtl
or
mov
fwait
mov
cmp
cltd
and
push
adc
push
lods
add
jge
mov
jae
xchg
ss
xor
sarl
arpl
cwtl
xchg
mov
sbb
xchg
jmp
lret
push
push
xorl
fsub
mov
fsubr
sbbl
les
mov
pop
loope
je
shlb
mov
je
cmp
insl
xchg
repz
data16
rorl
fistpll
pop
adc
adc
mov
mov
lea
insl
shlb
dec
sub
into
pop
cmp
pop
dec
push
rcrb
jmp
sti
adc
inc
inc
adc
fprem
sbb
adc
jb
mov
test
lods
pop
ja
jbe
cli
pop
test
add
mov
adc
test
or
int3
add
imul
clc
adc
loopne
or
xchg
pop
mov
jnp
jle
jno
adc
into
je
xchg
fcom
xchg
cs
loopne
daa
mov
hlt
pop
push
or
xchg
or
ret
and
jge
jnp
shrl
push
mov
test
fxch
repz
push
cld
dec
fwait
or
and
jl
inc
lret
out
pop
shll
pushf
cs
scas
xchg
fdivl
bound
pop
mov
xor
pop
and
mull
mov
xor
pop
pushf
cmpsl
fisubs
adc
sahf
sub
out
sub
loope
ret
cmp
mov
mov
and
push
lret
jb
stos
pop
aad
mov
mov
pop
pop
mov
xchg
popf
pop
inc
and
mov
pop
dec
mov
push
rorb
lret
int3
and
iret
popf
sbb
mov
aas
cmpl
jecxz
cltd
cmp
nop
dec
imul
into
sti
fwait
insl
jecxz
repnz
cmp
je
ret
cltd
ret
pop
inc
jno
add
add
mov
xchg
fbstp
add
decb
inc
xor
cmp
adc
sbb
mov
arpl
test
in
and
dec
ret
adc
mov
lds
mov
push
gs
movsb
and
fucomip
je
je
in
mov
outsl
sub
mov
mov
pusha
pop
cmp
sub
imul
cmp
sbb
and
push
or
jno
xchg
inc
mov
addr16
pop
dec
jae
push
jbe
xchg
shrl
add
jnp
add
adc
aam
bound
outsb
int3
and
ljmp
mov
xor
pop
ffree
add
insb
stc
cs
shrl
inc
xchg
adc
dec
sarb
xchg
fildl
fadds
leave
fsts
mov
push
sti
and
popl
xchg
xorb
jp,pn
push
out
rclb
repz
adc
fwait
push
in
in
lock
adc
cmpsl
fwait
mov
push
fdivrl
xor
and
mov
sub
jl
add
or
mov
movl
stc
and
sub
mov
or
addr16
mov
addl
std
pop
int3
or
ds
inc
push
popf
data16
mov
out
mov
imul
xor
cmc
add
loop
fnstenv
dec
popf
adc
clts
jecxz
or
es
pop
cmpsl
ud1
and
hlt
test
cwtl
xchg
and
push
loope
fwait
stos
mov
scas
cmpsl
cmp
je,pt
js
mov
mull
xor
jl
lock
fadd
jbe
addr16
addr16
cld
cmpsl
push
call
pop
xchg
and
outsl
pop
sub
stos
adc
outsb
sub
pop
in
and
bound
lret
fdivl
les
add
sbb
stos
fwait
xor
sbb
xchg
sub
push
xorl
es
push
mov
shll
or
inc
push
inc
cmc
jno
xor
push
push
pop
xor
adc
idivb
adc
mov
rcrl
mov
dec
addb
lcall
jae
sbb
jne
pusha
jecxz
inc
mov
lret
push
jnp
pop
icebp
jg
push
in
sti
and
cmpsl
push
scas
mov
mov
scas
fwait
inc
enter
rclb
lea
dec
xorl
xchg
pop
add
mov
or
jns
and
xchg
cmp
lds
pusha
and
shl
daa
popa
cs
adc
jb
sub
outsl
sahf
in
push
ss
arpl
call
push
rcrb
jae
fcomp
mull
lds
sub
xlat
pushf
addr16
outsb
fsubrs
popf
dec
inc
call
idivb
mov
dec
in
jl
lea
popf
das
cld
or
jb
insl
sbb
cmp
scas
cmp
mov
adc
lcall
paddw
cmc
ljmp
mov
xchg
jne
sub
push
push
jl
push
inc
orl
mov
lods
sbb
xlat
das
inc
xor
sub
push
xor
xor
mov
add
test
inc
dec
ljmp
xor
adc
inc
mov
add
nop
or
dec
pop
mov
inc
xor
xchg
cltd
and
sarb
hlt
xor
fmul
sbb
sbb
in
aam
mov
test
neg
mov
xor
jg
sbb
and
mov
pop
out
enter
mov
js
inc
adc
ds
iret
inc
sub
les
or
repnz
or
movnti
out
and
xor
inc
xchg
loop
clc
cmp
scas
test
and
ds
push
and
lgdtl
xor
lahf
adc
inc
dec
jne
cmpsl
jne
cmp
andb
iret
inc
aam
bound
or
sub
mov
adc
test
loop
mov
sbb
cld
jp
loope
mov
es
or
pushf
xor
push
mov
data16
mov
adc
cmp
pop
cmpsb
push
dec
icebp
cwtl
in
sbb
leave
shll
daa
or
aam
mov
mov
int
add
stc
inc
or
inc
arpl
in
pop
fsubrs
ds
mov
rclb
push
cmpsb
fisubrl
jbe
xchg
pop
fdivp
dec
fisubl
test
sbb
sub
jnp
xchg
ds
and
addr16
in
fisttpll
xchg
xor
addb
cld
push
xor
push
inc
and
fsubrs
in
sub
mov
sub
xor
mov
jmp
into
dec
inc
jbe
fyl2x
ficomps
testl
sahf
je
xchg
call
ja
adc
inc
into
cmp
lea
jo
daa
in
or
xor
xchg
es
mul
pop
mov
pop
test
sub
add
push
aas
loopne
and
pop
enter
jmp
jo
psubw
sbb
fs
lcall
fidivrl
or
jmp
popl
lret
add
jne
mov
scas
into
cltd
xchg
jg
stc
ret
or
fnstenv
out
pop
outsb
xor
xchg
js
pop
jg
rep
adc
sub
or
xchg
cmpsb
into
pushf
push
leave
pop
cmp
mov
mov
sub
jne
bound
es
les
inc
out
dec
xchg
push
pop
icebp
mov
add
cmpsb
xchg
mov
mov
push
sub
xchg
xchg
push
add
repz
rcl
sub
lods
and
fldpi
rolb
inc
lods
xchg
mov
aam
sbb
dec
pop
lods
lods
insl
or
movsb
cs
mov
rcll
lds
lods
lahf
adc
push
xchg
mov
push
scas
jp
lds
daa
aas
out
dec
cld
sbb
jle
inc
jmp
push
xchg
adc
pop
add
cmp
mov
lcall
mov
push
stos
jae
jge
in
cli
mov
bound
lock
fcoml
andb
cmp
jge
fwait
sbb
pop
aaa
jns
pop
jge
mull
sbbb
test
xor
rclb
movsl
stos
push
addl
pop
clc
mov
stc
mov
ds
lods
out
mov
pusha
pop
jb
lds
push
out
xlat
push
cltd
leave
or
js
mov
hlt
sub
popa
jge
sarb
and
scas
xorb
or
inc
and
call
ljmp
sbb
icebp
loop
xor
lea
lods
push
pop
cmp
inc
jbe
inc
mov
iret
cmpsl
and
mov
add
push
push
adc
jmp
cmpsl
ljmp
insl
mov
pop
mov
jmp
ret
test
fimuls
mov
lds
repz
data16
xlat
lcall
jmp
xor
sub
cmp
std
mov
xchg
rcll
insb
mov
inc
ss
aaa
and
jo
sub
daa
insb
inc
leave
adc
popa
mov
je
jmp
push
test
fstl
dec
pusha
std
sub
arpl
cli
push
ss
jo
inc
mov
pop
addr16
insb
mov
fdivp
mov
cmp
mov
int
add
jmp
mov
xlat
and
addr16
mov
xchg
out
aad
cmp
pop
push
xchg
les
iret
pop
insl
je
mov
mov
fdivrs
adc
aaa
or
mov
ds
adcl
jno
sub
mov
leave
adc
cmp
fistl
mov
xor
dec
mov
or
addl
push
mov
scas
pop
dec
int
pusha
jp
jp
jmp
scas
xor
push
jno
adc
pop
movsl
out
stos
shll
or
or
xchg
int3
add
or
mov
xor
inc
and
and
imul
sub
jmp
jge
movsb
repz
push
gs
sbb
or
fdivr
xchg
out
sti
inc
js
fcmovnbe
xor
push
aad
mov
xor
or
mov
pop
lahf
push
mov
enter
rorb
jae
leave
rolb
leave
xor
inc
xchg
pop
mov
and
push
jo
in
cmp
divb
push
cmp
pop
mov
cmp
and
mov
inc
iret
jle
and
imul
int
cwtl
mov
dec
insl
nop
and
loope
add
mov
mov
js
xchg
and
mov
hlt
push
fstpl
xchg
pop
pop
out
shll
push
cmp
aas
dec
sub
pop
scas
movsb
sub
repz
iret
mov
adc
cli
xchg
mov
inc
mov
xchg
jmp
xchg
mov
add
outsl
mov
xchg
push
inc
mov
cmp
or
hlt
ljmp
mov
mov
fs
rcl
xchg
addr16
adc
or
push
add
jo
imul
dec
bnd
xchg
aaa
jecxz
pop
mov
and
dec
loop
and
lock
iret
cmp
cltd
mov
pop
shl
gs
add
aad
lods
jmp
push
xchg
and
test
cmpsb
out
inc
test
sbb
arpl
adc
mov
jns
ds
xchg
mov
inc
sub
stos
add
mov
mov
cmpsb
andl
fs
je
dec
mov
subl
mov
mov
aad
mov
imul
add
pop
jecxz
lret
or
mov
arpl
shlb
xor
xor
jg
addl
inc
int
mov
cmp
movsl
fwait
add
xchg
sbb
dec
mov
dec
std
sub
push
jne
sub
jb
lahf
sub
jb
xor
mov
push
std
add
mov
inc
call
in
pop
lock
pusha
movsb
add
lahf
js
insl
pop
add
sub
cmpsb
jnp
mov
adc
sbb
fxch
jnp
repnz
push
and
iret
fwait
outsb
push
xor
inc
scas
into
and
sbb
out
mov
and
and
add
sti
jmp
cld
dec
test
adc
stos
xchg
iret
cmp
pop
jl
les
jecxz
mov
stos
mov
leave
ss
add
movsl
inc
mov
dec
pop
in
inc
shll
adcl
test
loope
test
push
mov
pop
push
xchg
mov
aaa
data16
loopne
adc
jbe
mov
mov
pop
push
je
cmp
sub
outsl
push
fstps
scas
repnz
inc
repnz
xor
icebp
mov
inc
shlb
and
popa
stos
or
pop
out
les
mov
lock
jl
sbb
adcb
call
or
jle
push
dec
fbstp
xchg
imul
pop
outsb
jne
mov
or
ror
loope
mov
and
dec
pop
inc
stos
mov
inc
mov
jae
in
xchg
dec
xor
mov
xchg
pushf
insb
add
rolb
push
insl
es
dec
sbb
xchg
sbb
and
sub
xorl
push
or
ljmp
shrl
pop
push
adc
fwait
cmp
jno
mov
test
lea
leave
push
fldenv
jle
cmp
jecxz
cs
add
in
push
scas
lcall
pop
pusha
testl
pop
mov
jno
pop
xchg
fisttpl
sar
push
enter
les
inc
sarb
dec
cmc
mov
xor
cmp
xchg
push
sbb
sub
ss
and
fimuls
push
xor
jne
inc
jle
adc
add
pop
ror
es
pop
cmp
aad
repz
cmpb
inc
sbb
xchg
xor
inc
fwait
in
pop
mov
cmc
mov
ja
pop
ljmp
sbb
push
stos
pop
xor
dec
pop
jnp
movsl
shr
push
mov
jmp
push
imul
xlat
mov
jb
in
jno
jecxz
jns
in
sub
mov
add
scas
adc
pop
adc
lcall
xchg
shrb
xchg
int
in
mov
add
mov
in
std
pop
mov
shlb
push
jne
adc
arpl
or
sbb
add
xor
and
sbb
xchg
in
out
xor
xor
add
adc
testb
jmp
add
cmpsb
xchg
pop
test
shr
scas
imulb
mov
pop
cmpb
jl
popl
dec
into
out
add
cld
pop
and
adc
sub
arpl
adc
pop
jo
idiv
mov
loope
push
lods
fs
data16
lods
mov
shll
call
imull
in
incb
lds
movsl
pushf
inc
dec
pop
cmp
scas
shr
orl
lods
add
popf
std
je
mov
leave
sbb
mov
or
jb
clc
jne
stos
fwait
lcall
pusha
sbb
push
adc
push
std
icebp
adc
inc
sbb
aad
mov
mov
xchg
cmp
fisttps
iret
push
fs
jne
div
push
loopne
add
and
mov
std
push
lods
or
and
loop
iret
mov
mov
decb
es
cs
mov
push
call
fisttpll
imul
bound
push
ds
ja
cld
imull
fdivrl
sbb
xor
cmp
mov
nop
adc
mov
lret
fstp
arpl
sub
mov
mov
in
dec
clc
mov
or
mov
jge
stos
mov
cmp
inc
into
jmp
xlat
add
cmpsb
pop
fsts
xchg
sti
int3
mov
jbe
out
lock
outsb
aad
push
or
lcall
jb
dec
shll
pop
cmpsl
jmp
in
ljmp
push
push
sub
lret
loopne
dec
stos
rep
fsubrp
das
dec
stc
mov
mov
fidivl
jns
bound
mov
std
push
outsb
sub
lds
mov
fdivl
push
movsb
xor
ja
clc
xchg
insl
mov
std
repnz
pop
aad
in
int
sub
js
xchg
and
jnp
pop
mov
push
pop
sub
mov
cs
xor
sub
push
mov
mov
cmpsl
adc
testl
xor
mov
inc
push
xchg
out
inc
mov
jl
or
sahf
adc
inc
pusha
fisubrs
lea
mov
into
hlt
ror
add
add
cmp
int
mulb
fs
sbb
mov
cmp
in
jecxz
in
lds
mov
in
stc
jle
test
mov
div
daa
jne
iret
in
ret
popa
aaa
add
xchg
shr
adc
and
data16
push
mov
dec
push
or
pop
xor
nop
call
into
jl
inc
imul
or
in
mov
lret
pusha
sti
imul
or
bswap
popa
jae
ret
mov
std
fstp
sbb
xchg
in
icebp
mov
jmp
sbb
mov
pop
dec
sbb
lock
popf
jbe
fadds
hlt
push
lcall
or
daa
movsb
xchg
rcr
add
push
sbb
sbb
call
ds
jae
and
dec
ds
pop
fstsw
les
aaa
iret
popa
and
mov
leave
mov
clc
cwtl
fwait
movsl
mov
sbb
inc
xchg
push
das
int3
iret
js
mov
inc
cmp
jno
adc
lahf
js
add
cltd
aam
sub
cmp
xor
aam
mull
jge
imul
cli
cli
mov
ficoms
push
add
push
std
in
enter
outsb
rorl
rorl
fidivrs
jmp
push
push
add
and
fxch
sbb
insl
pop
push
lds
sahf
aas
mov
repz
fidivl
dec
out
popa
and
fwait
int
divl
imul
adc
jle
push
fs
sub
jne
sub
sarl
popf
xor
push
testl
std
out
push
mov
push
xchg
mov
loopne
test
out
push
movsb
shlb
incl
pop
test
push
sub
mov
and
push
push
movsb
cmp
mov
int3
mov
dec
mov
fs
ss
shl
jmp
das
les
push
test
das
adc
xorl
sbb
test
pop
mov
fcoml
or
and
jae
dec
icebp
adc
mov
mov
mov
and
outsl
testb
addr16
jnp
mov
xor
lret
sub
pop
imul
pop
fisubrs
and
dec
xor
pop
lret
outsb
pusha
outsb
cmp
shll
xor
out
ret
jge
lods
repnz
mov
or
loop
mov
pusha
setno
movsb
aas
movb
sti
call
adc
push
repz
sbb
jbe
jmp
int
jp
das
push
xor
xor
pop
push
jg
push
lea
push
lret
pop
jno
sub
mov
jg
iret
in
sbb
icebp
jle
or
cwtl
ret
fbstp
and
arpl
scas
cmp
leave
icebp
sarl
xor
cld
js
mov
xchg
call
and
lahf
jge
sahf
inc
pushl
pop
push
lods
and
cld
hlt
sub
movsb
ret
sbb
dec
mov
sbb
cmp
sahf
cmp
nop
mov
je
cmp
mov
and
popa
xchg
inc
adc
movl
stos
push
scas
mov
pop
pop
mov
lret
lds
and
imul
sbb
pop
stc
not
lock
mov
mov
inc
and
jns,pt
or
in
js
popa
fsubs
lds
mov
cmp
push
dec
or
push
adcl
mov
cld
insl
pop
js
dec
sub
cmp
jp
or
cmp
adc
inc
mov
fiadds
jecxz
add
sub
stc
lock
fdivrs
cmpsl
cmc
out
mov
sbb
and
jp
mov
push
cs
ss
and
pop
mov
push
adc
push
sbbb
sbb
pop
in
sbb
or
not
out
mov
data16
xor
fwait
fwait
xchg
hlt
or
pop
imul
and
lret
xchg
movsl
push
fimull
xor
das
mov
jae
fs
movsl
mov
push
test
push
les
leave
mov
adcl
mov
mov
out
mov
jle
cwtl
xchg
aaa
and
pop
popa
cmpsl
lcall
bound
xlat
or
pop
movsl
loop
fidivrs
mov
bound
shl
je
mov
repz
jg
inc
fnstenv
lret
ret
jge
ds
sub
mov
pop
mov
bound
xchg
push
sub
xchg
scas
mov
outsb
lahf
or
sbb
pop
dec
ljmp
xor
add
ja
mov
out
jbe
jg
pop
cmp
les
testl
mov
mov
lds
adcl
in
lret
xchg
jnp
xchg
jb
jns
xor
je
out
add
int3
test
jae
xor
pop
pop
stc
in
scas
shr
lea
idivl
adc
rclb
rorb
icebp
mov
and
add
pop
mov
daa
call
inc
rolb
mov
jb
lahf
test
hlt
in
jae
jg
outsb
xor
bound
add
add
dec
xor
jb
cmp
stos
imul
outsb
add
or
xor
psubw
dec
stc
sbb
fcompl
enter
std
pop
std
cltd
inc
out
fsubl
pop
sbb
sbb
inc
mov
dec
sbb
dec
add
int
add
add
sbb
jnp
pop
hlt
xchg
cmp
xchg
push
and
pop
addr16
push
xor
dec
push
mull
sbb
mov
sbb
int
ja
sti
ja
fwait
mov
mov
iret
dec
and
in
push
in
test
cs
cwtl
jge
ss
push
adc
fimull
sub
or
fstl
dec
mov
pop
clc
xchg
int3
stos
add
xchg
push
cli
inc
div
movsl
mov
push
mov
mov
mov
jns
and
xchg
push
pop
push
push
mov
pushf
inc
ficoms
jnp
lret
adc
or
sub
das
jo
xchg
sub
adc
test
add
popl
add
test
stos
xchg
pop
or
mov
and
repz
test
inc
jmp
or
cmp
pop
push
popa
lret
mov
add
mov
push
push
imul
mov
mov
insb
sub
dec
mov
mov
push
jno
outsb
push
rol
mov
add
add
xor
cmpsl
push
andl
sti
repz
or
int
and
dec
gs
pop
rorl
mov
in
sub
mov
pop
movsb
sarl
fidivrs
repz
pop
jae
xlat
dec
clc
pop
imul
sub
loop
int
jb
dec
mov
ds
jmp
clc
gs
jl
sub
insb
loope
test
jge
or
mov
mov
jnp
in
jle
shl
stos
adc
cmp
push
test
outsl
mov
int
test
mull
jl
je
mov
push
inc
in
fisubs
mov
jne
dec
dec
test
stos
mov
call
jne
mov
enter
nop
xchg
sbb
jp
js
sbb
hlt
mov
test
dec
mov
jmp
es
scas
jecxz
nop
and
negb
rolb
mov
cmp
or
outsl
fdivrs
jg
aas
lahf
xchg
and
sbb
lods
pop
xor
adc
mov
out
jle
int3
mov
dec
sbb
fmull
push
push
jno
test
inc
imul
jge
or
push
insb
popa
mov
inc
mov
xor
xor
das
das
mov
out
mov
jecxz
leave
cli
xchg
mov
adc
enter
sbbb
xchg
outsb
lret
push
fdivrl
test
das
in
and
fwait
sti
jb
decl
add
dec
jne
jo
push
std
xor
jae
dec
into
jo
loop
mov
add
lret
adc
ja
xchg
inc
test
cld
sub
stc
not
loop
push
mov
mov
sbb
ret
jmp
jmp
out
or
sub
or
icebp
lods
add
lahf
les
test
rcrl
into
stc
test
cld
mov
xorb
lret
pop
movsb
jmp
xchg
mov
mov
mov
fcmovu
jbe
enter
mov
push
pop
mul
fiaddl
lea
sbb
mov
les
lock
jno
and
cmp
sarl
outsb
dec
ss
and
push
jle
clc
pop
ret
xor
lret
push
sbb
lret
mov
mov
ljmp
pop
cmp
mov
enter
mov
flds
movsb
aaa
mov
push
int3
in
xlat
cmp
ds
aam
add
bound
inc
insl
test
test
in
push
jnp
gs
out
test
add
pop
popf
mov
outsl
out
insb
in
mov
arpl
cmpsb
call
mul
decb
jbe
mov
sub
popa
xor
insb
mov
sar
pop
sub
adc
lods
fldt
sahf
push
pusha
sahf
fdivp
cli
lcall
loope
mov
loop
mov
loop
mov
xchg
push
inc
adc
mov
insl
mov
xchg
dec
aad
dec
cwtl
out
mov
int
xorb
and
shrl
mov
mov
iret
push
int3
cmp
mov
sbb
mov
in
repz
jmp
test
dec
fsubrl
mov
sti
jbe
in
fsts
arpl
add
cmp
flds
aas
cmc
in
incb
mov
dec
dec
int
popa
mov
mov
fistpll
pop
xor
mov
and
mov
lock
or
dec
ds
and
or
mov
sbb
mov
aad
mov
mov
out
jo
jmp
sbb
cwtl
repnz
call
and
aas
ret
jp
fistl
shll
ret
enter
cmpsl
stos
mulb
iret
stos
mov
or
rcll
xchg
lods
adc
jo
mov
shrl
cmp
out
sahf
mov
jmp
ds
rclb
add
imul
dec
cmp
xor
adc
xchg
push
mov
loop
pop
ja
jo
mov
in
or
xchg
mov
sub
sub
je
aad
enter
xchg
jb
ss
test
pop
pop
popf
inc
decb
cmp
sub
arpl
pusha
inc
pop
or
cmp
cmp
fnclex
movsb
sbb
fdivs
push
or
inc
test
shll
sub
cmp
enter
pusha
adc
test
sbb
push
pop
in
insb
mov
cmp
lds
xor
cmp
insb
adc
jne
std
test
and
lret
imulb
push
add
lahf
mov
lahf
lret
pop
sbbb
shlb
out
stos
adc
clc
add
mov
lock
les
cmp
rorb
xor
nop
sti
fwait
adc
jb
xor
sub
xor
inc
push
mov
aas
mov
pop
dec
sti
out
xchg
jecxz
ds
mov
xor
faddl
out
inc
inc
jge
xchg
cmp
cli
fmuls
jmp
add
or
push
ret
cmc
dec
jl
dec
sbb
fcomip
lea
movsb
jnp
cwtl
xor
mov
mov
lcall
adc
xchg
add
fnstsw
insb
pop
pop
inc
push
adc
jnp
test
xor
xchg
jb
cmpsl
aas
insb
pushf
sub
cmpsl
lret
mov
jbe
ret
push
scas
sbbb
fs
and
insb
xchg
ficoms
sti
and
add
fnsave
fcom
cmp
aaa
inc
nop
sbb
cmp
stos
push
fcoms
arpl
test
inc
fs
add
test
pop
in
mov
xchg
or
sub
into
lcall
movsl
jo
shl
xchg
add
ss
jmp
loope
pop
mov
cmp
ret
rcrl
mov
and
lcall
ss
adc
and
push
cmp
xor
test
mov
xorl
push
sar
cwtl
pop
sub
jge
popa
daa
mov
lds
mov
scas
xlat
jbe
push
aam
jp
pop
test
or
add
andl
loope
js
xchg
mov
add
cli
out
add
sbb
int
out
lock
fsubs
dec
scas
jae
mov
mov
dec
xor
xchg
rcll
sub
cld
cmp
xchg
rorb
stos
mov
dec
xlat
dec
roll
stos
stc
out
or
insb
xchg
scas
jge
add
push
bound
xor
push
test
and
popf
out
mul
repnz
in
mov
pop
sbb
mov
bound
inc
aam
mov
sub
mov
xchg
movsl
xchg
in
ljmp
jge
imul
adc
mov
add
dec
out
lcall
pop
xor
xchg
loope
push
and
cmp
mov
adc
fidivrs
xchg
cltd
mov
mov
mov
dec
test
push
xchg
mov
dec
cmp
push
jb
pop
inc
mov
mov
xchg
mov
sbb
cmp
xlat
ret
cmp
jg
sub
sub
mov
xchg
jbe
jno
push
lods
jns
into
mov
mov
mov
outsb
adc
xchg
movsl
mov
mov
ret
repz
mov
dec
push
push
lahf
and
and
and
cmpsl
push
les
daa
addl
stos
ret
push
pop
xchg
push
mov
sub
outsb
stc
arpl
je
movsb
mov
std
and
jno
scas
lock
ret
and
iret
mov
cmpsl
sbb
shll
nop
pop
push
adc
mov
or
adc
mov
insl
test
xor
push
sbb
push
xchg
jns
xchg
movsb
sbb
xchg
xchg
mov
hlt
js
fwait
cld
and
cwtl
jb
push
push
sbb
and
jle
xchg
ds
mov
inc
dec
sarl
sahf
aad
add
into
clc
xchg
sub
js
cwtl
stos
movsb
push
daa
cmpsl
scas
jb
test
stos
scas
dec
xchg
movsb
jmp
push
xlat
add
jb
sub
jbe
pushf
sub
jmp
xchg
pop
xchg
jo
jb
fisubs
sub
shll
xchg
jg
mov
sub
jo
jmp
xchg
cmp
cwtl
hlt
pop
jg
adc
mov
pop
mov
lods
and
xor
cwtl
dec
or
inc
sbb
in
push
mov
daa
pop
pop
pop
dec
jge
sbb
ja
inc
xlat
mov
add
jne
imul
shl
sub
aaa
test
and
jno
je
inc
fnsave
xor
mov
fwait
jns
jbe
leave
or
mov
stos
push
mov
inc
in
dec
and
dec
data16
pop
and
pop
adc
lahf
pop
mov
pushf
mov
shrl
sbbb
shrl
fcom
nop
cs
mov
std
xchg
lahf
daa
jo
inc
and
rorl
add
lds
adc
sarl
icebp
mov
fadds
push
mov
mov
push
sub
pop
outsb
dec
mov
dec
cmpsb
pusha
and
and
test
xchg
mov
adc
mov
cs
xchg
pusha
fwait
or
and
dec
sahf
push
pop
lret
lods
dec
enter
mov
xchg
sbb
arpl
out
ljmpw
stos
into
sub
inc
inc
stc
jle
push
daa
andb
mov
push
dec
call
daa
mov
cli
xchg
cmp
fsubr
pop
inc
adc
dec
ja
femms
insb
ss
test
repnz
movsb
cmp
dec
adc
rcrb
pop
mov
jo
xor
cmp
ret
repz
add
dec
les
jecxz
sub
loop
andb
daa
into
cmpsl
adc
or
pop
cmp
fwait
jbe
lds
mov
mov
sbb
sub
mov
hlt
roll
mov
xor
sbb
fwait
cmp
lret
ret
push
aam
or
push
jno
fcomp
jno
fwait
mov
pusha
arpl
push
add
lret
scas
fidivs
movsb
or
leave
in
arpl
xor
loop
adc
push
sbb
add
jb
mov
stos
fidivl
dec
jecxz
js
ret
mov
ja
pop
sbb
push
lahf
jno
inc
mov
shr
push
lods
cmpb
in
aaa
xor
dec
pop
mov
into
or
mov
popa
xlat
test
adc
jae
loop
adc
inc
cltd
mov
mov
pop
fwait
mov
lods
jl
cld
lods
icebp
and
push
or
lret
aaa
lods
cmp
mov
shl
mov
dec
pop
xchg
mov
ficoms
pop
dec
int3
inc
xorl
bound
inc
add
sahf
loop
mov
inc
fcomps
dec
mov
data16
shlb
out
icebp
xor
lret
xor
enter
cmp
fcompl
xchg
push
pusha
fsubl
insl
push
and
xchg
adc
insl
and
outsl
inc
imul
pop
mov
mov
and
fwait
mov
add
and
xlat
daa
scas
dec
into
ds
clc
xchg
or
es
mov
xchg
mov
xchg
repz
jmp
or
orb
imul
push
lcall
mov
clc
ss
push
adc
loope
sbb
jne
ret
repz
jne
cmp
inc
xor
mov
test
lods
stc
or
in
push
pop
clc
icebp
fstps
sti
incb
jg
gs
cmp
sub
sbb
lcall
push
mov
daa
dec
dec
cmp
sub
jb
cwtl
inc
xchg
sub
xchg
arpl
stos
jnp
repnz
cs
dec
call
or
pop
popf
jno
sbb
insb
sub
jae
xor
testb
out
push
pop
lret
shll
out
mov
jmp
clc
add
or
dec
aaa
mov
mov
or
scas
xchg
mov
mov
and
into
iret
xor
push
jo
ss
cmpsb
pop
dec
mov
enter
cmc
xchg
nop
out
mov
jns
dec
cli
daa
pop
pop
js
xor
jle
lret
or
iret
push
mov
inc
push
mov
mov
lret
pop
or
pop
ds
nop
mov
xchg
sub
dec
out
addr16
and
mov
mov
mov
aad
or
dec
or
inc
cld
sbb
sub
pusha
sbb
xor
sub
mov
pop
or
pushf
mov
mov
cmpsl
cmpsb
mov
and
xor
lret
push
pop
mov
jmp
iret
add
ds
xor
pop
inc
mov
mov
mov
pop
and
stos
cld
cs
mov
lods
cwtl
push
pop
notb
pop
ret
loope
xchg
cmpsl
mov
shr
pop
test
fidivrl
xchg
add
and
adc
jecxz
cmp
xor
subl
push
and
stos
mov
flds
pop
outsl
xchg
and
pop
gs
das
mov
out
lahf
cmpl
inc
and
push
movsl
xchg
sbb
cltd
nop
ss
sub
cmpb
jg
xchg
mov
lds
sub
mov
push
mov
mov
lahf
mov
ret
sub
cmp
call
dec
int
xchg
pop
ret
call
addr16
cmp
sti
lret
add
push
hlt
les
mov
leave
sbb
out
push
add
add
xchg
insb
push
call
xchg
xor
das
sar
or
outsl
jge
push
inc
jl
inc
or
mov
xor
clc
nop
lds
push
test
aam
hlt
adc
in
jns
imul
add
mov
rcrl
rcrb
cmpsb
fwait
or
push
ror
add
add
mov
jno
hlt
cmpsl
pushw
daa
insl
cmpsb
dec
fdivs
mov
pop
mov
scas
inc
int3
xchg
add
push
dec
jge,pt
or
imull
dec
push
and
in
pop
mov
push
or
out
ljmp
mov
mov
xor
jbe
shr
mov
mov
insb
inc
adc
push
iret
lret
fwait
ja
xor
shll
loop
jo
or
push
pop
dec
add
shlb
push
inc
lock
pop
outsb
mov
iret
enter
push
push
dec
ds
cmp
cmp
mov
mov
paddsw
shlb
and
ret
inc
leave
aas
cltd
push
ja
xchg
mov
je
xchg
lret
push
mov
xchg
test
and
orl
lret
ficomps
pop
adc
frstor
fildll
ret
xchg
push
mov
jo
push
test
imul
xor
rorl
cmc
jge
mov
lret
mov
xchg
push
jbe
test
cmpb
jne
es
roll
cmp
in
sub
pushf
dec
sub
pushf
test
push
sub
ja
dec
fnstcw
sbb
and
lret
test
dec
insb
and
mov
inc
mov
mov
mov
mov
jmp
test
push
inc
or
cmp
pop
jmp
pop
dec
pop
push
rcrl
mov
xchg
xor
xor
fnstcw
int3
jle
sbb
or
push
dec
repnz
mov
sbbb
add
fcoml
in
add
icebp
jne
sub
pop
jl
testl
mov
jg
mov
cmp
icebp
cmp
pop
stc
das
cmp
enter
test
dec
iret
stos
jo
mov
pushf
xor
in
jecxz
les
push
shrb
imul
ficompl
sbb
pop
jmp
out
push
cmpsl
jge
pusha
rclb
mov
push
test
sub
jmp
sbb
outsb
daa
jbe
add
xchg
xor
dec
sbb
and
js
es
xchg
xor
out
dec
mov
sub
sbb
push
popf
fwait
cmp
xchg
pop
dec
nop
popf
push
dec
cmp
xor
adcl
pop
mov
and
dec
aas
lea
clc
push
push
test
push
mov
test
pop
popa
fimull
cwtl
or
pop
cs
bound
and
ja
adc
addr16
sub
stos
xor
ja
popf
je
or
push
loope
aas
jnp
xchg
pop
out
es
data16
dec
es
jo
scas
pop
mov
mov
push
push
push
mov
push
jmp
idivb
dec
cmc
lea
push
fs
xchg
adc
sbb
adc
mov
sbb
insb
rcrl
lds
lahf
js
pushf
xchg
ss
xchg
movsl
out
add
dec
test
xor
aas
sub
mov
out
push
scas
inc
cs
xchg
lods
mov
mov
jmp
lods
shlb
mov
les
cmp
mov
iret
or
sub
pop
enter
inc
xchg
jo
scas
push
sub
lods
rorl
inc
scas
lcall
pop
cmp
mov
shlb
fiadds
aad
ja
movsl
push
jne
fbld
adc
pop
mov
lods
bound
mov
jg
int3
and
push
movsb
gs
cmp
sub
es
mov
in
push
add
mov
push
idiv
jns
imul
lds
adc
test
fs
sbb
or
cmp
clc
add
imul
pop
or
sub
jecxz
lcall
cmpsl
dec
lret
sub
adc
jo
xor
int
xchg
fstl
das
loopne
or
add
repnz
adcl
adc
mov
fldenv
add
mov
ljmp
xchg
nop
push
out
repnz
mov
and
inc
out
call
jge
cmp
dec
scas
adc
cmp
or
inc
mov
test
vpor
repz
xchg
in
pop
sub
mov
cwtl
cmpsb
jnp
xorl
push
sti
enter
imul
icebp
push
test
out
lret
fistl
mov
mov
loope
mov
pushf
mov
add
clc
pop
daa
push
sub
xchg
mov
fs
mov
lcall
xorl
or
aas
lds
mov
mov
leave
cmc
rorb
lds
in
aas
leave
fiadds
rolb
out
push
ficompl
test
subl
push
jno
inc
push
hlt
movsl
jae
clc
aas
std
mov
popf
sub
jl
adc
inc
addl
int
xor
xchg
mov
pushf
push
pop
jb
or
rol
inc
popf
lcall
hlt
adc
xor
adc
lret
mov
mov
inc
movsl
inc
xchg
outsb
cmp
push
movsl
divl
test
push
and
mov
hlt
iret
in
mov
mov
pop
sub
fistpl
inc
scas
push
cmpsl
and
flds
lods
cmp
cmc
mov
std
movsb
mov
mov
loopne
xchg
popa
icebp
mov
lret
mov
pop
jne
out
addb
movsl
subl
jae
lock
pop
mov
xlat
jmp
das
arpl
std
call
loopne
stc
mov
loopne
mov
dec
inc
mov
cmp
pop
pop
cmpsb
jae
inc
int3
leave
lods
repz
out
mov
into
pop
jmp
out
cmc
xchg
mov
push
mov
dec
add
mov
pop
push
fldlg2
pop
fcmovb
dec
jns
in
cs
pusha
inc
imul
sub
sbb
jae
lea
pop
jmp
add
or
sti
repnz
pop
frstor
jo
repz
or
jmp
or
adc
xlat
in
cmp
jne
scas
and
outsl
push
adc
or
jno
push
shll
cmp
arpl
jb
dec
fs
call
mov
fistpll
mov
sarl
xor
in
mov
mov
out
push
xlat
idiv
arpl
xor
cmpsb
sub
int
repz
in
inc
jnp
pop
sbb
mov
xchg
push
inc
cmp
push
popa
out
ds
aad
shrb
mov
dec
pop
je
sbbl
popf
mov
leave
push
je
rolb
mov
lods
adc
loope,pn
scas
inc
loopne
cmp
sub
cmp
jl
jg
add
int
sub
push
in
into
jbe
add
adc
enter
cmp
jno
inc
add
xchg
icebp
rolb
sub
lcall
aam
das
mov
nop
adc
sub
bound
inc
fwait
cmc
cmc
inc
xchg
mov
rcll
in
shr
fadds
and
icebp
outsl
mov
dec
int
test
mov
lods
jb,pt
mov
addr16
mov
mov
jl
fisttps
cmp
inc
ss
mov
popf
call
and
out
and
shl
cwtl
push
mov
mov
pushf
xor
fstpt
test
jge
clc
hlt
mov
inc
jno
mov
in
fwait
push
jns
adc
sbb
es
subl
xor
pop
daa
fiadds
outsl
push
adc
jle
out
aaa
call
jne
mov
ret
lret
jmp
jb
xor
into
fbld
hlt
dec
xor
aad
cmpl
push
push
pop
aaa
pushf
sarl
mov
mov
insl
lcall
lock
sahf
loopne
jecxz
scas
andl
mov
xlat
mov
sahf
stos
test
aam
xchg
out
test
test
push
or
add
jae
test
add
adcb
pop
ja
cli
mov
cmc
push
cwtl
sub
inc
mov
pop
pop
xchg
jbe
mov
adc
pop
xor
out
aas
dec
jge
je
inc
test
or
mov
push
xchg
shrl
je
fistps
out
popa
loope
xchg
adc
inc
mov
sbbl
add
push
test
jecxz
sub
les
aad
jb
dec
cmpsl
out
xorb
jmp
data16
mov
add
xchg
dec
stc
sbb
xor
inc
pop
js
imul
roll
das
test
sbb
cmp
xchg
mov
pop
sub
push
fmuls
dec
pusha
je
out
shlb
je
add
cmp
xor
adc
jge
testl
outsb
pop
xlat
inc
push
movsb
fwait
icebp
jns
scas
pop
sub
mov
add
jmp
jge
inc
sub
lahf
jle
add
into
scas
loopne
mov
std
cmp
adc
lds
jne
pop
cmp
cmp
cmp
xlat
jmp
xchg
push
push
pop
xchg
jb
lock
out
es
and
and
daa
pop
mov
push
popl
or
lcallw
lock
mov
imul
cwtl
jl
scas
pop
adc
lret
sbb
fnstcw
mov
jle
jle
mov
jl
mov
insl
adc
arpl
movsl
roll
jg
xchg
jns
rcll
icebp
jp
push
test
dec
mov
ret
shufps
adc
rcr
and
leave
adc
iret
push
subb
mov
aaa
xor
pop
cmp
dec
nop
push
insb
or
pop
imul
fsubs
push
fcompp
dec
dec
mov
xor
stc
sbb
scas
mov
fwait
imul
jne
sbb
scas
lods
or
mov
icebp
mov
nop
jg
inc
cltd
cmp
pop
stc
les
sbb
pop
push
stc
in
sbb
daa
sub
mov
decl
cmp
pushf
inc
push
ror
pop
jbe
fs
fbstp
mov
xchg
imul
mov
ds
adc
popa
fdivr
sub
inc
ja
cmp
cmpsb
jmp
mov
push
xorb
test
shr
int
leave
sti
lds
cmp
fisttpll
inc
sbb
lods
je
icebp
jg
cmp
cmpb
add
and
push
out
and
jb
xor
sub
mov
cmp
add
ds
ret
and
xchg
fwait
jmp
cwtl
or
popa
sti
repnz
mov
imul
inc
add
adc
adc
jne
enter
fsubrl
dec
xadd
clc
andb
mov
out
inc
adc
push
lods
push
mov
add
push
jno
cwtl
adc
mov
ror
xchg
mov
mov
adc
enter
sbb
cmp
cmp
sub
jo
jnp
test
shrb
pop
fstl
xor
cmpsb
gs
mov
sub
stc
push
fistl
mov
mov
add
mov
shl
pop
scas
cmc
pop
int
xchg
add
or
jne
mov
lock
cs
mov
sbb
addr16
jb
mov
inc
pop
out
das
pop
mov
and
push
pop
pushf
and
pop
lods
add
fldln2
or
andb
and
xchg
pop
neg
xchg
mov
pop
into
mov
sub
xor
dec
cli
cli
mov
mov
stc
pusha
aam
mov
call
test
cs
or
cmp
loop
or
cmp
in
rorl
mov
jae
inc
xorb
frstor
aam
lcall
cmp
rclb
inc
sti
jmp
movsl
mov
sub
and
call
lds
in
ret
sub
pop
push
testb
sahf
lock
xchg
test
ds
decb
cwtl
adc
lock
dec
mov
push
call
out
jmp
inc
bound
cwtl
mov
cmpsl
stos
or
ficompl
add
lahf
lret
xor
mov
xor
std
in
lcall
xchg
rclb
mov
sbb
xchg
pop
shlb
mov
mov
repz
cltd
insl
mov
rorb
mov
mov
repz
sbb
push
lds
loope
in
cmc
cmp
in
in
jl
xchg
iret
repz
inc
jl
adc
aaa
dec
lahf
jmp
loopne
cmpsb
pop
cmpsl
mov
jge
stos
push
incl
and
ffreep
pop
jmp
add
jnp
dec
push
xchg
adc
pop
sbb
rolb
inc
cmpsb
mov
and
cmp
sbb
fiadds
jecxz
jmp
in
nop
jle
adc
push
xchg
mov
aad
cmp
jnp
sbb
pop
pushf
ljmp
ds
xchg
mov
pop
inc
mov
cmp
dec
push
add
rorl
lds
iret
imull
les
arpl
repnz
orl
pop
stos
scas
pop
sbb
cltd
push
push
sub
adc
push
add
iret
push
dec
mov
push
lcall
int3
sub
ljmp
push
aam
mov
popf
bound
lods
popf
pop
lahf
pop
ljmp
jg
xchg
aaa
fstpt
mov
adc
add
in
je
mov
xchg
outsb
testl
inc
or
movsl
mov
sti
imul
insl
adc
test
add
pop
mov
sahf
aas
addr16
cltd
add
lret
out
mov
xchg
inc
push
add
cld
test
test
add
pushf
ds
push
test
mov
and
inc
xor
mov
rclb
ljmp
loop
test
add
pop
jmp
xor
stc
mov
sbb
in
pop
push
and
mov
loop
mov
lcall
lcall
stos
xchg
arpl
lahf
in
or
pop
outsb
fs
pop
pop
mov
fs
pop
cwtl
sbbl
sbb
sbb
cwtl
loopne
lods
mov
bound
add
pop
or
daa
and
push
xor
aaa
das
lea
jo
cmp
mov
pop
fcomps
fnstenv
fucom
sub
sbb
inc
mov
sub
and
ret
jecxz
mov
decl
cmp
mov
sub
adc
ret
pusha
mov
jo
rol
loope
insl
mov
sahf
fcomp
icebp
cmpsl
pop
fwait
push
mov
scas
lock
and
jns
idivb
fwait
inc
cmpsb
pop
pop
sbb
mov
inc
cmp
pop
sub
inc
daa
fdivrl
repz
add
and
push
icebp
add
jne
int
dec
movsl
and
imul
pop
mov
in
es
xor
sbb
cmp
sub
pop
cmpsl
testb
dec
jmp
cmp
mov
shll
rol
add
fadd
jp
fs
data16
inc
jb
mov
fcmovbe
and
js
lahf
decb
cli
jp
nop
push
shl
mov
push
imul
inc
lahf
lods
push
cwtl
bound
popa
jno
or
pop
jbe
push
add
aaa
or
loop
out
inc
icebp
in
ss
mov
dec
mov
mov
push
push
es
inc
cli
xorl
sub
lds
xor
and
adc
out
popf
xchg
pop
push
add
lahf
outsb
repnz
xchg
cmp
mov
in
lock
fs
mov
stc
je
mov
rcrb
jg
or
mov
xchg
movsl
lret
sbb
sub
mov
add
addr16
xchg
outsb
inc
fbstp
iret
xor
dec
mov
jl
ror
lods
adc
dec
and
shrl
fcoms
cmpsb
mov
or
and
inc
jb
xor
test
jg
sti
cwtl
jae
std
cld
pop
inc
xor
mov
flds
jno
sub
bound
fcmovne
mov
mov
fsubrs
gs
adc
push
fiaddl
int
into
xor
cmpsl
adc
test
ja
testl
popf
outsb
inc
arpl
rcrl
pop
aas
je
ja
mov
rcll
sbb
daa
mov
adc
pop
jne
fnstenv
daa
xchg
cmp
cmp
sti
movsl
sub
mov
daa
stc
push
mov
xchg
jg
jo
push
lock
movsb
daa
call
lahf
jg
or
push
and
jnp
pop
jl
pop
pop
aam
add
fcompl
xchg
mov
stos
cld
inc
mov
mov
into
sahf
mov
pusha
data16
hlt
cmp
jecxz
lods
test
jbe
fwait
pop
sbb
pop
bnd
cmp
adc
dec
add
cli
rolb
in
loop
fimull
xchg
dec
loop
pop
dec
mov
hlt
mov
loopne
orl
fsubl
sbb
dec
or
ds
cmp
mov
aaa
adc
mov
mov
sub
or
xor
jmp
cwtl
or
xor
pop
cmpl
push
mov
or
aam
jle
mov
push
or
xor
hlt
ds
mov
cmp
cli
mov
pop
push
bswap
je
pop
out
inc
xchg
dec
pop
push
or
jp
hlt
je
pop
mov
add
std
adc
jle
ljmp
inc
popa
mov
jp
push
mov
mov
xlat
mov
rclb
jbe
xor
test
add
or
adc
mov
imul
push
mov
mov
xor
jge
add
lea
insb
sub
dec
lret
popa
sub
stc
leave
jne
movsb
dec
pop
addr16
lret
movlps
cmp
imul
inc
mov
lret
dec
adc
addb
lods
imul
mov
into
jmp
dec
fchs
mov
sti
int3
sub
js
pushf
mov
dec
aam
push
adc
xor
ficoms
push
jle
scas
fstl
loope
pop
adc
and
push
in
enter
jecxz
adc
adc
ret
or
out
loope
scas
adc
jne
xor
fists
xor
push
inc
fimuls
inc
lea
cli
std
xchg
xorl
mov
push
inc
fidivl
push
fdivl
insb
adc
sbb
lods
sbb
gs
jae
inc
pushf
inc
popa
and
pop
or
mov
sub
out
fcmovnbe
in
and
dec
fidivs
mov
and
pop
adc
cld
pop
mov
pop
aad
mov
mov
test
and
subl
and
lea
call
push
mov
punpcklqdq
dec
inc
pslld
outsb
std
hlt
int3
and
or
xlat
adc
sahf
xchg
lods
fcom
repz
cmpsl
ret
sbb
sbb
xorb
roll
cld
lods
cltd
pop
shrl
movsl
lods
and
int
mov
cli
inc
mov
push
lock
bound
outsb
jg
jae
fsubs
insl
cmpb
lret
dec
push
into
dec
jo
sbb
xchg
pop
jecxz
sbb
mov
bound
fildll
arpl
adc
adc
fildll
sub
mov
cld
in
stos
sbb
add
dec
popl
and
xchg
ret
lret
sarl
adc
jmp
loope
inc
mov
dec
andl
and
std
outsl
dec
adc
mov
cmc
cli
js
jno,pt
or
stos
imul
jno
addr16
imul
fldenv
int3
lret
fisubl
mov
push
mov
or
inc
cmp
dec
jae
push
incb
inc
shrb
cmpsb
sbb
inc
xchg
repz
sti
lret
jae
adc
rclb
mov
lcall
adc
aaa
or
push
aad
hlt
idivb
mov
pusha
testb
pop
out
repnz
xchg
dec
jae
cmp
lds
adc
movlps
cmp
add
pop
adc
fnsave
and
mov
ss
lahf
add
out
mov
pop
sub
fwait
pop
shld
lock
fstpl
icebp
mov
pop
in
sub
outsb
mov
pop
imul
out
fmuls
out
and
mov
popf
pop
movl
popf
inc
or
cltd
in
push
icebp
sub
mov
mov
dec
mov
rcr
or
out
pop
outsl
dec
push
xchg
aam
mov
and
div
adc
jo
push
mul
cwtl
cmpsl
in
cmpsl
xchg
ret
jge
mov
into
jns
filds
movswl
mov
sar
inc
sub
pop
lret
dec
leave
fmull
mov
lods
jne
and
pop
cs
out
outsb
in
adc
mov
push
sahf
xlat
ret
imul
nop
incb
add
js
adc
popa
and
fsubrp
fwait
xor
pop
repz
or
adc
movsl
pop
leave
and
xlat
mov
push
addr16
push
adc
mov
out
cs
in
ja
inc
xchg
lea
out
push
jle
cmp
jmp
cmp
in
xor
add
cmp
fildl
arpl
mov
inc
lret
cmpsl
or
mov
push
adc
pop
sub
leave
in
pop
mov
fimull
adcb
xor
std
mov
je
test
jge
lret
sahf
pop
clc
push
sub
and
and
mov
cmc
imul
outsb
xchg
lods
call
shrb
mov
popa
ja
fcoml
sub
xchg
xchg
fsubs
clc
and
divl
in
jmp
pop
orb
lret
ljmp
addr16
adc
push
seto
dec
cmp
cwtl
mov
and
subb
dec
call
ret
mov
test
fnstcw
add
dec
mov
jle
stc
test
scas
int
sti
cs
sbb
insl
addr16
xor
repz
mov
mov
fdivrs
add
xor
aas
adc
and
ja
ljmp
cmp
loope
adc
mov
rolb
jmp
cmp
leave
push
jb
sub
jne
fwait
int
rol
push
add
test
cmc
xlat
in
jbe
inc
sahf
inc
or
push
lea
int3
je
scas
inc
add
pushf
pop
mov
sub
dec
pop
inc
mov
jae
ljmp
imul
lods
testl
mov
out
in
inc
mov
sarb
das
pop
ss
mov
jae
bound
stos
push
std
jmp
pop
mov
mov
mov
cltd
push
outsb
out
mov
push
xor
loop
pop
es
adc
in
xchg
dec
movsl
xor
mov
dec
push
sbb
mov
negb
movsb
imulb
subl
or
pop
sbb
xchg
or
nop
pop
xor
loop
jp
ret
and
pop
sub
sub
enter
dec
repz
push
add
shlb
push
sub
adc
in
fs
jnp
inc
jae
movsb
js
pusha
imul
jns
movsw
fwait
loope
js
aas
sbb
ds
nop
in
inc
mov
jmp
sbb
out
std
flds
fs
adc
and
in
jnp
movsl
cmp
jno
xchg
cs
out
push
addl
cs
mov
xor
lods
pop
xor
inc
xchg
lcall
adc
mov
fisttpl
push
or
dec
sub
lods
inc
ljmp
ret
push
cmpsb
xor
mov
dec
daa
fwait
out
cmp
loopne
test
lods
js
xor
mov
fs
mov
pushf
incl
xchg
out
inc
jae
add
in
faddl
fsincos
cmp
inc
mov
pop
fidivl
dec
jns
movsl
pop
rclb
movsb
jl
les
inc
popa
sbb
inc
add
xorb
nop
fiadds
xor
daa
pop
add
adc
call
add
repnz
outsb
shlb
mov
xlat
fildl
cmc
stos
js
mov
ja
cmp
aam
add
enter
scas
pop
rcll
fidivs
andb
jnp
mov
mov
xor
dec
stc
mov
jb
mov
cmovne
jbe
imul
sbb
pop
adc
cli
aas
pop
and
push
lock
pop
jp
aam
dec
mov
hlt
or
subps
pop
xor
in
sub
subl
sub
jl
popa
mov
mov
daa
sbb
adc
push
mov
add
enter
loop
mov
mov
mov
mov
jmp
fs
pop
cmpsb
pop
inc
dec
mov
mov
subb
or
cmp
stc
dec
pop
pusha
mov
inc
aaa
cli
and
pop
lret
lahf
xchg
mov
jbe
xchg
jmp
push
pop
subl
fildll
xlat
adc
jl
jl
inc
inc
jge
bnd
out
cmpsl
push
dec
inc
test
mov
shll
or
mov
iret
sahf
rcll
dec
mov
add
pop
or
xchg
mov
scas
into
inc
mov
pop
ja
mov
sar
icebp
or
dec
aaa
inc
rcr
ds
popa
out
mov
fiadds
add
movsl
inc
xor
inc
sbb
leave
pop
fbld
nop
lea
dec
stc
faddp
in
movsb
scas
mov
loope
loopne
movsb
jge
cmp
ljmp
pop
adc
imul
pop
or
out
out
mov
inc
jmp
pop
cmp
sbb
dec
jmp
push
mov
test
xor
std
das
dec
test
mov
inc
sbb
cmp
out
addr16
sub
sub
mov
pop
xor
mov
cwtl
stos
push
data16
push
shlb
arpl
andb
mov
dec
mov
mov
ss
jmp
fmul
xchg
mov
js
or
int
sub
mov
stc
movsb
push
push
es
lahf
mov
push
shll
cmc
mov
test
shr
aad
cld
xor
adc
mov
cmp
sbb
popa
push
add
sbb
test
inc
lcall
sbb
adc
subb
mov
iret
adc
mov
adc
sbb
test
mulb
stos
jmp
rorl
fbld
cmp
sub
xorl
sub
or
in
xchg
pop
into
gs
out
push
mov
jp
jg
sub
add
sbb
dec
pop
shlb
or
and
cmpsb
int
mov
test
pop
and
aaa
fidivrl
jmp
addr16
mov
stc
pop
adc
and
cli
or
int3
sbb
adc
add
mov
inc
arpl
and
mov
mov
add
push
dec
lods
out
mov
xor
inc
or
out
orb
in
cli
cmp
call
shlb
out
jae
mov
mov
or
mov
sqrtps
loop
push
test
dec
cmp
ds
icebp
testl
cmpsb
mov
cmpsb
add
loop
int3
into
pop
lea
cmp
les
sbb
sub
mov
sahf
ljmp
cwtl
je
inc
xchg
imul
xchg
xchg
arpl
xor
rclb
add
shl
scas
outsl
loop
insl
xchg
adc
gs
push
inc
dec
add
push
cmpsb
ret
sti
ljmp
push
mov
cmpsb
dec
inc
mov
test
pop
or
nop
rolb
cmp
mov
cld
adc
xor
fsubs
push
rcl
jecxz
iret
insl
jl
add
dec
pushf
fiaddl
enter
insl
into
out
sub
xor
scas
out
mov
pop
xchg
xor
pop
fwait
inc
fsubs
push
test
inc
mov
add
adc
xchg
sbb
dec
xchg
dec
jl
sub
xor
fidivl
repz
cmpsl
and
repz
adc
add
mov
shr
xchg
mov
xlat
enter
lret
imul
sub
jl
fiaddl
dec
push
std
test
leave
mov
gs
jbe
and
xor
push
push
mov
xor
sbb
out
cmpsl
mov
aas
jb
inc
repnz
outsb
addr16
push
out
out
icebp
mov
jne
sbb
mov
das
mov
out
or
je
pop
inc
mov
sub
pop
adc
jae
jle
ss
rorl
out
xchg
jmp
mov
push
adc
mov
cmc
ret
cmpsb
sub
pop
jmp
jo
into
or
lods
leave
mov
loopne
add
mov
push
pop
out
bound
fnstcw
dec
mov
push
add
adc
adc
int3
xchg
ds
or
fwait
into
iret
test
les
push
repz
adc
adc
inc
clc
cwtl
cmc
mov
add
lret
mov
xchg
mov
insb
pushf
gs
es
ds
outsb
lods
jge
enter
cld
xchg
xor
orl
dec
cmc
xchg
pushf
out
rclb
mov
jl
jbe
shll
xor
rcrl
or
add
arpl
jns
cs
or
jnp
sbb
inc
xor
mov
lcall
xchg
cmpb
fnsave
in
adcl
out
jl
test
fstps
leave
push
gs
sbb
pop
mov
pushf
lret
in
lock
imul
pop
push
mov
and
xchg
fcompl
cli
nop
test
orl
pop
in
test
pop
les
in
call
xchg
ja
adc
pop
adc
mov
inc
loop
jb
cmp
push
outsl
xchg
jmp
lods
fisubs
test
jae
or
mov
adc
push
pusha
inc
fmuls
icebp
sub
sub
xchg
push
sub
int
mov
stos
jp
icebp
xor
xorl
scas
and
imul
inc
das
popa
into
sahf
lods
pop
and
push
stos
lahf
lahf
inc
fst
aas
push
mov
stos
mov
enter
xchg
jnp
aam
xor
xor
cmpsb
xor
test
and
mov
cmp
int3
lock
mov
add
jne
jecxz
pop
push
cmpsl
sbb
sub
xchg
xor
pop
in
lahf
movsl
add
xor
and
pop
mul
sbb
xchg
mov
sbb
mov
pop
mov
sub
scas
sahf
push
mov
movsl
push
mov
cmp
mov
data16
push
lods
or
push
mov
clc
ss
pop
jnp
xchg
inc
mov
jns
cmp
imul
subl
adc
bound
cmp
aas
daa
push
out
push
cmc
addr16
fdivrl
sub
jp
das
iret
sub
cmp
aad
jp
mov
adcl
or
stos
icebp
push
call
push
pop
testl
insb
or
inc
cmp
jmp
ljmp
out
dec
pop
lock
and
cmp
adc
ljmp
rorb
cmp
inc
pushf
and
pop
push
mov
aam
je
ds
aad
sbb
cmp
imul
sbb
push
mov
sbb
mov
pop
push
add
ret
out
inc
imul
push
jle
mov
push
mov
int
stos
xor
scas
stos
add
push
xor
cmp
add
mov
push
sbbl
dec
pushl
in
inc
fistpl
or
add
xchg
cli
adc
nop
imull
sub
add
dec
jecxz
mov
pop
decl
mov
fcomps
xchg
int
ficomps
jb
jl
mov
sub
mov
scas
cltd
std
jnp
les
aaa
sti
sub
outsl
aam
pop
outsb
gs
inc
jno
test
jge
outsb
fisttpl
out
std
ss
push
inc
dec
jge
aam
lret
push
mov
bound
addr16
ljmp
arpl
push
mov
mov
add
pop
sub
lret
and
inc
jo
adc
sub
pop
add
sbb
mov
sarb
adc
das
dec
inc
rol
stos
mov
jmp
dec
cmpb
push
sbb
sub
adc
pop
push
push
es
lcall
mov
or
rcrb
sub
movsl
cld
fdivrs
bound
push
xor
pop
stos
fidivrl
pusha
fs
cmc
and
inc
xchg
pop
cltd
dec
mov
mov
shlb
pop
jne
fmull
jecxz
push
insl
test
mov
out
inc
cmpsb
scas
sub
cmp
ljmp
jge
push
jae
push
sub
std
outsl
xor
jp
sti
out
add
das
mov
mov
kortestb
bnd
clc
inc
xor
sub
andl
mov
ret
andb
xchg
xchg
dec
push
mov
sub
mov
mov
dec
lret
pushf
cld
cmp
out
sub
mov
add
sub
mov
xor
sarb
mov
mov
popf
int
xchg
push
fwait
pusha
push
stos
sub
fcoml
jns
xchg
or
jl
and
daa
ja
in
pop
sub
shlb
jae
or
std
movsl
imul
mull
sub
je
gs
sbb
cld
ret
adc
js
jbe
lods
int
rorb
inc
popl
pusha
lods
outsb
stos
push
test
sub
xchg
repz
sub
rcrl
pop
mov
push
mov
shlb
xchg
enter
xor
xchg
out
int
cmpsl
xchg
loop
jp
xchg
mov
or
out
js
push
lret
jge
inc
jmp
addr16
call
int
xor
mov
xchg
rclb
lcall
cmp
sarb
cmpb
lods
fisubrs
or
add
sbb
sub
daa
ljmp
test
hlt
mov
addr16
xchg
mov
xchg
jmp
cs
dec
cmp
fdivrl
cmp
lds
pop
daa
sahf
dec
packsswb
cmpsb
mov
dec
jle
out
adc
push
mov
sbb
pop
pushf
mov
and
mov
and
pop
cmp
inc
rclb
push
sti
push
loope
adc
jg
test
sti
data16
pusha
je
mov
xchg
fprem1
push
pop
add
shlb
and
fistl
fneni(8087
scas
pop
mov
xor
mov
sahf
in
aaa
les
fcomps
in
push
in
imul
lcall
sbb
fmull
adc
call
popf
sbb
int
leave
loopne
mov
adc
mov
aam
xchg
dec
jmp
mov
sub
mov
repnz
xor
shrl
xchg
int
jb
out
sub
xchg
add
arpl
lcall
and
mov
mov
ficomps
cltd
jp
data16
mov
or
ja
mov
mov
xor
mov
pop
or
repnz
daa
mov
xorl
xchg
cwtl
mov
aam
movsl
in
fs
inc
jbe
and
fistl
lcall
jo
add
ljmp
push
xchg
cmp
in
cwtl
mov
cmpsb
jne
jnp
sub
data16
xchg
mov
jmp
call
xor
out
dec
add
push
adc
dec
gs
jns
cmp
lock
shrb
or
orb
subl
test
data16
sarl
xchg
and
mov
test
pop
jns
pushf
aas
loop
test
insb
push
out
jbe
jbe
scas
arpl
cmpl
push
sbb
sarl
pop
outsl
mov
daa
loop
mov
ds
leave
add
pop
cmpb
xlat
test
sbb
dec
test
das
pop
aas
call
xchg
call
inc
jle
and
shl
fdivrs
adc
pop
insl
add
test
dec
or
ds
jb
xchg
sub
pop
out
sbb
clc
ljmp
addr16
mov
imul
in
jge
lcall
add
and
lahf
das
adc
outsb
leave
insb
add
icebp
stos
loop
mov
divl
sub
or
loopne
cmpsb
pop
ret
or
mov
fcomp
stos
ret
xchg
add
mov
call
adc
scas
and
popa
add
pop
push
pop
test
or
pop
sub
scas
test
cs
test
loope
ja
ret
inc
mov
sbb
adc
push
outsl
out
mov
push
std
sbb
jno
sub
xchg
pop
jp
outsl
leave
push
jb
adc
push
adc
in
fucomp
mov
cmpsb
lods
pop
sbb
cmp
out
jo
scas
jle
sub
lods
dec
mov
insl
cs
divb
clc
test
addb
sti
mov
pop
stc
sbb
pusha
adc
jge
fdivr
lods
mov
jle
sbb
aad
add
or
testl
push
fisttpl
lock
mov
sbb
mov
pop
sbb
push
rdmsr
sbb
add
cli
push
sub
sub
addl
jl
out
mov
fs
mov
and
dec
pop
pusha
dec
mov
bound
and
imul
pop
ja
mov
push
stc
std
outsb
test
rcl
mov
call
and
aaa
out
dec
mov
test
pop
movsl
sub
jecxz
cmc
mov
or
mov
loop
call
jg
sbb
out
push
nop
and
outsb
movsl
push
cltd
push
mov
sub
mov
jno
mov
je
cwtl
push
pop
rcrb
mov
bound
xor
int
hlt
push
sbb
sti
pop
sub
mov
sub
xor
add
cld
out
mov
jle
push
inc
cmpsl
sbb
and
mov
aam
cmp
fs
ja
and
leave
cmp
dec
iret
cli
cmp
and
mov
mov
cmc
int
inc
adc
jle
push
outsl
push
pop
pop
fs
insl
in
scas
xchg
int
inc
stc
repnz
dec
mov
rorb
pop
inc
xchg
sbb
push
sbb
in
into
cmp
pop
fsub
sub
mov
sub
adc
inc
lret
insl
rcll
stc
push
sub
mov
movsb
lods
sahf
loope
std
fadds
icebp
mov
xchg
out
push
aad
adc
iret
xchg
push
adc
lods
inc
and
sarb
add
dec
arpl
push
sub
dec
cltd
lods
jnp
mov
rcrl
shr
jbe
mov
icebp
mov
and
sarb
jp
pusha
cmp
ret
in
xchg
mov
dec
adc
les
dec
jmp
jle
inc
jp
lea
ret
xchg
adc
xor
dec
ljmp
mov
xchg
xor
or
add
or
or
pop
clc
mov
pop
cmpsl
adc
scas
pop
cmp
mov
bound
in
clc
out
sbb
das
movsl
sub
loop
test
mov
and
clc
ret
out
sarb
in
mul
orb
mov
cli
mov
dec
insl
push
xchg
lahf
xor
inc
imul
cmp
cmp
data16
adc
popf
mov
loopne
das
xor
movsb
push
and
sub
inc
adc
or
and
lahf
lods
jp
pop
je
in
das
cwtl
pop
push
fcomps
ret
jmp
mov
inc
roll
in
cmp
and
fs
popa
lahf
dec
mov
jno
mov
dec
cmp
inc
movsb
jb
mov
push
test
mov
lret
push
aaa
pop
aas
jno
cmp
je
fdivp
xchg
pop
jge
addr16
jmp
and
mov
jl
adc
inc
or
inc
pop
add
ret
faddl
sub
sbb
nop
and
mov
das
aam
popf
mov
sbb
dec
addr16
jnp
into
mov
xchg
inc
repnz
js
shl
mov
outsl
jge
fcomp
or
cmpsl
inc
call
mov
ret
call
decl
push
mov
imul
iret
jne
inc
pusha
jo
ljmp
imulb
or
stc
ljmp
out
cli
loopne
xchg
lock
pop
sete
mov
je
aas
mov
xor
mov
mov
dec
popa
sbb
pushf
lret
mov
in
jne
xchg
push
xchg
add
aas
add
ds
xor
push
cmpb
outsl
sarb
inc
movsb
xchg
push
mov
ds
or
pushf
data16
outsb
icebp
mov
sub
shll
nop
sbb
inc
lret
add
jecxz,pn
pop
or
dec
or
test
pop
imul
rolb
hlt
push
outsb
cmp
aad
cmp
add
cld
test
mov
jb
shrl
inc
push
dec
movsl
mov
mov
or
mov
test
pop
inc
jbe
cltd
enter
or
mov
jno
mov
xchg
repnz
add
mov
jno
mov
fnstenv
xchg
pop
add
dec
or
iret
stos
mov
imul
adc
das
pop
add
shll
add
jp
xchg
inc
lock
and
push
mov
js
pop
mov
mov
movsb
or
movsb
arpl
or
pop
or
cmp
xor
bound
lds
imul
in
rolb
inc
test
jbe
inc
test
push
sar
fs
ret
loop
mov
cmp
sub
jg
push
mov
xchg
aad
jno
add
and
test
movsb
test
mov
mov
push
cmp
divl
out
lods
lret
cs
rcrb
jecxz
mov
jmp
adc
popf
mov
aam
mov
aaa
std
pop
sbb
test
sub
lahf
mov
push
push
pushf
movsb
insl
mov
call
xchg
rcrb
loop
and
les
outsl
fcmovbe
cwtl
inc
sbb
and
inc
pusha
xor
pop
sbb
repnz
scas
dec
cs
jns
cwtl
scas
xchg
pusha
pop
outsb
or
inc
clc
jle
cmpsl
mov
mov
inc
and
xor
sbb
lods
xor
lea
push
rorb
popa
cmpsl
out
lock
inc
lcall
or
xchg
and
shrl
sbb
test
lcall
hlt
pop
push
push
in
mov
xchg
test
pop
scas
xchg
jb
imul
lods
inc
push
test
jl
cli
push
shrb
mov
arpl
test
adc
lea
out
ret
loopne
add
mov
decb
dec
and
xchg
inc
xchg
jo
push
cmpsl
idivl
jnp
ja
push
add
push
orl
enter
and
movsb
add
adc
decb
mov
jmp
pop
hlt
cmp
pop
scas
add
subb
int
mov
add
sub
test
jge
cmp
cwtl
push
lret
mov
sbb
mov
mov
jle
imul
sub
lret
subl
jle
or
fimull
std
rclb
pop
push
xchg
pop
xor
movsb
into
inc
dec
bound
cwtl
cmp
dec
lods
iret
sub
pop
xchg
mov
sbb
or
iret
ljmp
cmp
pop
cmp
xchg
lods
inc
adc
cmp
inc
outsl
stc
mov
mov
pop
mov
lret
repz
mov
dec
cmpsl
gs
js
adc
add
and
add
mov
arpl
aas
in
adc
xchg
scas
jbe,pt
ljmp
xor
ss
lcall
adc
in
test
lods
push
sar
cmp
clc
pop
xchg
daa
mov
pop
sub
xchg
sbb
ljmp
sbbl
adc
ds
fdiv
and
or
pop
cs
mov
adc
push
push
push
and
sub
test
test
pop
or
dec
pop
call
cmp
arpl
mov
pop
mov
dec
or
jnp
enter
push
rcll
call
fmuls
lret
jmp
pop
pusha
cwtl
jnp
lods
sbb
addb
xchg
sahf
dec
dec
jns
xlat
loope
dec
jmp
popa
sub
pop
pop
inc
fwait
mov
or
fwait
xor
cmp
push
shrd
cmp
test
bound
xchg
popf
xlat
pop
jo
or
adc
cmpsb
and
and
push
adc
iret
out
ljmp
sbb
or
add
cwtl
pop
mov
into
mov
xor
out
icebp
mov
push
xchg
enter
push
pop
dec
dec
cmp
push
cld
pop
sbb
out
cmpsl
or
sahf
xchg
xor
adc
mov
arpl
xchg
gs
pop
dec
jmp
add
mov
pop
insb
cmpsb
push
sub
scas
dec
out
mov
imul
int
outsl
gs
loope
adc
jae
mov
incb
insb
lock
mov
lahf
inc
sbb
in
dec
arpl
pop
or
mov
add
ja
xor
sahf
push
arpl
mov
mov
fwait
repnz
outsb
leave
test
cmp
fwait
cltd
cmpsb
das
aam
lcall
js
arpl
cmp
je
adc
xorb
lcall
add
lret
ljmp
xlat
imul
pop
scas
push
push
add
mov
stc
push
mov
push
inc
test
fimuls
and
aad
aas
cmpsb
jbe
shl
jbe
jo
ja
out
pop
xchg
jne
push
jle
incb
sub
hlt
popf
aaa
jbe
cmp
xor
sbb
push
testl
std
je
cmp
in
popa
jo
ja
popf
pop
mov
in
mov
sarl
ss
pop
ret
stos
inc
push
xlat
addr16
cmp
shrl
loopne
push
jge
bound
mov
movb
adc
mov
inc
je
mov
fwait
data16
add
mov
mov
or
adc
sub
jge
adc
lret
fcomps
fidivrl
push
jmp
pop
ret
loop
notl
mov
mov
std
out
pop
dec
jo
les
add
je
fildl
mov
add
cmpsl
fcmovnb
mov
mov
mov
repz
mov
into
loop
cli
data16
dec
push
filds
jecxz
sub
xchg
add
imul
cmp
push
fwait
into
sti
dec
subl
hlt
test
mov
fcoms
and
inc
mov
in
and
jle
jmp
andb
or
pop
cmpsl
cmp
imul
aas
lods
movsl
popa
sub
sub
psrlw
push
mov
outsb
xor
icebp
leave
sub
shll
in
enter
hlt
je
cltd
cli
mov
cmpsb
mov
pshufw
jmp
jne
mov
adc
push
test
sbb
mov
jns
shll
pusha
jmp
inc
lret
fsubl
dec
sbb
idiv
xchg
mov
push
jns
movsb
lahf
fs
cltd
nop
out
scas
mov
jl
jnp
sti
add
sahf
add
add
out
pushf
xchg
aaa
xor
adc
fs
sti
or
cmp
lods
lret
xchg
rorl
ret
and
out
push
out
jae
mov
mov
shll
pop
cld
lret
and
or
hlt
out
add
movsb
jb
xorl
icebp
fistps
cmp
imul
and
leave
jnp
fcmovbe
xorb
addr16
cmp
enter
popa
lock
pusha
popf
fisttpl
xor
mov
cltd
xchg
jl
dec
lods
pop
mov
jmp
xchg
in
fsubl
daa
sahf
lods
leave
lahf
movsl
xor
xor
mov
push
jne
mov
cmp
dec
repnz
lods
les
orl
cli
cmp
aaa
filds
sti
shl
mov
imul
popf
testl
mov
sbb
xchg
cli
xor
or
imul
mov
mov
nop
cltd
mov
shll
into
or
adc
pop
jp
lahf
test
adc
jno
cmp
cmp
jl
cs
int
xchg
cmp
sbb
test
xorb
xchg
jle
lods
aam
icebp
div
dec
mov
leave
dec
decb
imul
imul
divl
aaa
pop
clc
fldenv
imull
pushw
arpl
lods
xchg
scas
and
clc
stos
mov
xor
dec
faddl
cmpb
rclb
push
enter
idiv
sub
xchg
mov
adc
loop
loop
cmp
and
pop
inc
psadbw
jns
pop
jo
loopne
fimull
add
fs
sbb
clc
push
aam
inc
ret
mov
pop
clc
shrl
xchg
sub
jmp
fbstp
sbb
mov
jl
dec
and
sbb
ret
lcall
or
lods
iret
iret
cmp
orb
std
sbb
movsl
mov
push
and
out
xchg
test
dec
gs
nop
and
shll
dec
dec
adc
jecxz
adc
xchg
cmp
pop
or
outsb
jo
lods
push
rclb
xchg
push
pop
push
xor
inc
xor
in
mov
mov
ret
jmp
shl
cwtl
xchg
shl
mov
mov
in
xor
aad
adcb
cmpb
ss
lods
fcomps
je
inc
stc
mov
and
sbb
mov
jmp
dec
inc
xchg
lock
mov
xlat
xchg
notl
call
lea
ljmp
push
sbb
rcll
insb
mov
mov
adc
jmp
arpl
adc
in
mov
cmc
jno
out
push
xor
inc
dec
scas
jo
insb
fildl
andl
leave
push
sbb
pop
cld
fcmovnbe
lock
aaa
adc
inc
inc
jle
test
popf
xor
bound
push
xchg
jb
jno
and
jl
mov
lds
jb
sbbb
into
addl
add
mov
mov
test
movsl
add
arpl
mov
sbb
ret
lods
and
mov
in
popf
cmp
in
dec
sti
stos
mov
xchg
push
andl
rorl
inc
cmp
and
vpmullw
and
mov
je
popf
in
fldcw
mov
insb
push
inc
rorl
sbb
jns
dec
jb
jbe
sbb
adc
pop
cmp
mov
and
cmpl
xchg
dec
sbb
cs
pushf
xchg
testb
inc
inc
aas
jae
movsl
pop
jae
or
or
adc
mov
imul
inc
ret
jg
sbb
mov
fisttpll
mov
fnstcw
push
les
fisubrl
pop
xchg
lret
jecxz
repnz
rcrl
out
or
jno
xor
pushf
shlb
into
addl
cmp
mov
aaa
push
outsb
cli
dec
or
add
ret
aad
cmpsb
icebp
outsb
ljmp
mov
sbb
or
xchg
test
mov
lcall
inc
xor
mov
sbb
cmp
ret
lods
cmp
aam
sbb
faddl
jmp
or
mov
rep
cmpsl
out
push
jnp
ss
xchg
les
addl
and
out
mov
push
add
add
repz
lds
insb
or
mov
cmp
cwtl
fldcw
mov
mov
lret
in
pcmpeqd
or
inc
shl
insb
sbb
es
xor
call
setne
cs
mov
pop
out
outsb
je
pop
enter
cli
int3
out
push
cs
jg
or
mov
xchg
out
aaa
loop
pop
loop
inc
mov
push
and
add
insb
orl
add
jge
mov
jge
iret
jo
push
mov
popa
mov
cmp
jnp
xchg
jne
cltd
push
push
xchg
inc
pop
lret
mov
adc
jmp
adc
add
fsubrl
aam
cmp
jbe
mov
or
mov
fwait
bound
mov
out
shrl
into
leave
int
mov
int
jge
idivl
sub
fildll
mov
adcl
arpl
insl
aaa
sahf
fnstenv
cmp
ja
mov
pop
movsb
fwait
mov
add
lret
lods
pop
xlat
hlt
xchg
cmp
cmp
stc
ret
outsl
repz
xor
or
fwait
mov
je
xor
jae
outsb
push
push
adc
jg
push
vsqrtss
jmp
fiadds
or
jae
pushf
xchg
xchg
jg
xlat
leave
sub
mov
cli
imul
gs
imul
scas
das
sub
mov
adc
lret
std
cmp
pop
ljmp
rcrb
dec
jmp
roll
pop
add
out
xor
shll
in
rorl
and
movsl
test
push
jmp
push
popf
aaa
pop
add
dec
das
pushf
mov
jg
mov
ljmp
add
enter
dec
jle
test
lock
repnz
mov
inc
push
fisttpll
dec
movd
jmp
add
pop
gs
push
xlat
pop
pcmpeqd
inc
cmpsl
and
into
adc
and
pushf
mov
test
mov
xor
fldt
fnstcw
sbb
add
jo
inc
icebp
pop
hlt
sub
clc
adc
cmovb
dec
jns
lahf
pop
addr16
mov
push
cmpl
cmp
push
jg
bnd
incl
xor
les
jmp
fcoms
fcoms
or
shrb
add
mov
xor
or
ds
or
xchg
cs
mov
test
lret
push
out
lds
dec
ds
data16
sub
pop
imul
nop
sahf
lret
int
clc
mov
mov
lahf
cmpsl
test
xor
push
mov
icebp
add
push
fdivrl
or
call
inc
out
rorb
movsl
pop
lods
movsl
push
inc
lea
cwtl
filds
setg
data16
es
outsb
pop
push
sbb
push
lahf
in
sbb
rorl
rcr
mov
xchg
das
push
clc
jo
pusha
addr16
mov
mov
mov
push
and
add
or
out
arpl
repz
movsb
push
pop
enter
out
add
fwait
pop
std
inc
repz
ret
shll
or
ret
in
icebp
cs
loopne
inc
imul
mov
jns
jg
int3
sub
sbb
out
test
xor
adc
popa
ja
inc
lock
xlat
mov
add
mov
loopne
push
jle
popa
fsts
rcr
dec
pop
stc
xchg
dec
loop
cltd
icebp
int3
mov
popa
pop
push
push
ret
mov
arpl
aaa
or
loopne
or
in
ret
lock
mov
mov
dec
add
sbb
imul
rorb
push
xrelease
ret
aad
mov
loop
mov
into
mov
popa
mov
addb
jp
pop
cld
cmpsb
jle
xchg
imull
and
jge
dec
hlt
icebp
lcall
clc
icebp
insb
pop
in
pop
loope
mov
or
cmp
imul
mov
or
sbbl
xor
lods
cmp
mov
pop
ljmp
mov
iret
mov
lret
jns
dec
mov
mov
cld
nop
icebp
xchg
int
mov
jg
std
cmp
daa
and
adc
sbb
enter
and
mov
repnz
outsl
jb
das
lahf
or
lods
pusha
ret
pop
shrb
gs
xor
aad
jmp
int
cmp
pop
mov
mov
xor
fimuls
mov
and
imul
movsb
inc
push
js
js
jns
jmp
jg
mov
fcmovb
mov
imul
xor
push
push
lahf
les
dec
ss
dec
cmpsl
cld
enter
jnp
movsl
mov
fsubl
mov
sarl
xchg
mov
mov
lret
mov
push
pop
hlt
lods
or
test
xchg
lret
rcll
mov
xorl
lahf
cmc
pop
popf
dec
jle
sbb
cmpsb
push
repnz
nop
icebp
scas
inc
stos
mov
int3
inc
jg
cmp
dec
ja
add
cmc
je
popa
adc
insb
mov
ja
repz
ljmp
rorl
sbb
xor
jo
mov
cmpsb
push
cmpsl
mov
aam
popa
bound
loopne
in
xlat
loop
arpl
mov
adc
xchg
outsl
clc
scas
or
jecxz
and
xor
popa
xchg
mov
sbb
pop
sbb
or
adc
and
repz
cli
test
mov
sub
enter
inc
pusha
std
or
mov
sarb
ja
xor
daa
out
nop
xor
into
mov
xor
xchg
cmp
push
and
es
scas
xchg
ljmp
dec
imul
jge
iret
scas
add
sub
fmull
xchg
mull
mov
inc
ss
add
mov
ljmp
push
and
mov
pop
insl
xor
int3
mov
arpl
cwtl
test
cld
xchg
cwtl
andb
pop
or
inc
leave
aam
mov
insl
push
dec
mov
repnz
dec
lds
jo
xchg
rcl
push
andb
cltd
out
cmp
data16
inc
stos
jnp
inc
orl
push
or
push
test
stc
rclb
pop
add
push
std
or
cmp
inc
push
sarb
mov
je
xor
adc
frstor
cwtl
mov
aam
lods
jp
mov
xor
mov
popa
inc
les
push
ret
sub
lret
mov
mull
inc
sub
addr16
and
and
push
xchg
ljmp
out
test
test
divb
ret
adc
sbb
xchg
add
mov
js
arpl
clc
popf
adc
outsb
mov
ss
fld
outsb
dec
xor
aam
push
std
push
dec
add
push
pop
addl
xorb
mov
pusha
loopne
scas
jns
xchg
out
mov
ret
sahf
pushf
daa
cmc
rol
jb
cmpsl
into
pushf
inc
xchg
lds
mov
sarl
dec
lahf
movsl
fstp
loopne
lcall
das
rol
insl
fsubrs
in
push
nop
outsb
loopne
mov
bound
test
sub
cltd
adc
punpckldq
iret
jno
movsl
cli
ss
fisubs
or
lea
add
rcl
imul
mov
jge
dec
xchg
repnz
cltd
add
and
ret
jmp
arpl
xor
ret
sbb
and
in
lods
jns
lret
mov
push
dec
les
mov
mov
mov
mov
loope
pusha
or
dec
aad
inc
icebp
adc
outsl
scas
xor
lahf
xor
cmp
scas
mov
insb
inc
orl
sar
shrb
mov
pop
sbb
xchg
ficoml
dec
sbb
into
dec
shlb
aam
dec
and
mov
data16
mov
jae
loopne
inc
cli
jl
dec
push
mov
jp
push
xlat
dec
fs
add
mov
js
jbe
cmpsb
fsubl
or
shl
cltd
inc
sub
add
btc
mov
jg
sti
inc
es
lcall
sahf
cmp
test
sarl
and
push
mov
fldt
cltd
sbb
jmp
mov
dec
sub
setns
adc
cltd
dec
lock
int
sar
pusha
xchg
cmc
sbbl
jo
adc
cmpsl
pushf
daa
jl
fdiv
lcall
rcll
and
jo
out
jl
fwait
bound
lea
cli
nop
rcrl
dec
shll
push
pusha
xor
and
inc
in
mov
pop
xchg
push
or
dec
sti
out
add
rorb
or
iret
in
push
jg
loopne
inc
mov
mov
movsb
sbb
mov
cmp
cli
xchg
mov
xor
add
or
test
inc
sbb
xchg
sub
dec
fnsave
push
push
sbb
lcall
into
add
cmp
ret
dec
mov
pop
mov
icebp
loop
adc
cltd
dec
shl
loope
or
rclb
mov
lods
in
or
push
pushf
inc
push
cmp
jmp
ja
mov
mov
sbb
inc
je
out
dec
stos
jo
outsl
cmp
lock
arpl
cs
test
pop
test
mov
sbb
loopne
fs
and
popa
dec
and
mov
add
dec
cs
lahf
ret
push
mov
or
push
xchg
lods
ss
mov
data16
ficompl
mov
dec
in
mov
pop
pop
sub
or
sub
das
dec
sbb
jmp
scas
into
xor
in
push
inc
mov
sbb
mov
and
xchg
nop
push
pusha
pop
mov
dec
dec
scas
outsl
loope
sub
sbb
and
stc
mov
movsb
or
popf
outsl
jb
fcomp
jge
loope
fstpl
int3
xlat
mov
mov
nop
dec
jmp
jmp
cwtl
dec
mov
shr
add
ljmp
hlt
out
sbb
mov
adc
notb
fisubs
sbb
mov
sbb
fcmovne
mov
lcall
mov
sbb
or
aam
fsubrl
mov
and
sub
xchg
mov
aas
push
xchg
cmc
sbb
sbb
push
cmp
loop
push
out
lahf
inc
add
and
push
int
dec
inc
xchg
das
cld
cmp
adc
rcrb
mov
dec
or
insl
aas
dec
inc
fcompl
jmp
int
push
sahf
push
roll
lds
cmp
fdivrl
test
aam
imul
insl
in
shl
mov
and
xor
clc
cmpsl
xchg
pop
sbbb
push
push
rorl
pusha
clc
shll
sbb
add
push
inc
xchg
sti
push
push
bound
adc
mov
loop
imul
movsb
and
lods
out
add
dec
xor
repnz
mov
sbb
dec
push
stos
mov
mov
mov
outsl
cld
push
pop
movsl
das
fs
mov
mov
cwtl
dec
jl
fidivl
pop
xor
push
lock
mov
je
add
push
and
cltd
mov
fisttpl
test
jmp
sub
inc
xor
and
int3
repz
mov
dec
xchg
sarb
inc
dec
ret
aaa
repz
out
and
popa
push
sbb
mov
sahf
mov
inc
loopne
cli
pusha
jb
push
push
mov
ret
int3
cmpsl
xor
ret
inc
pop
push
xchg
lds
xor
cwtl
out
or
loope
lods
lahf
lret
push
mov
je
mov
cli
imul
mov
xchg
loop
xlat
push
ret
js
repz
push
add
adc
addr16
sbb
mov
mov
dec
in
pushf
ljmp
cmp
and
push
ret
int3
xor
into
repz
pop
mov
xlat
jl
test
push
or
mov
and
cltd
cltd
loope
cli
mov
sbb
mov
mov
sahf
jmp
inc
out
jl
movsl
fxch
lcall
imul
ss
cmp
push
imul
insl
and
in
xchg
fs
xchg
cmc
pop
test
adc
adc
push
das
sti
pop
out
xchg
idivb
clc
sbb
mov
je
jnp
xor
into
sahf
and
hlt
mov
mov
push
mov
adc
sub
or
sti
cmp
push
mov
push
mov
jnp
and
fisubs
adc
xor
xchg
mov
iret
xchg
out
pop
rcrb
pop
fnstenv
movsl
push
push
or
hlt
xchg
aas
lret
es
out
dec
mov
shld
mov
adc
fcomp
movsl
es
fldt
lods
push
fistpl
mov
mov
bound
add
pop
dec
pop
inc
cld
xchg
dec
cs
hlt
xchg
or
jge
icebp
movsb
jno
leave
clc
sbb
sti
pop
mov
pop
dec
dec
pop
popa
popa
mov
adc
mov
mov
sub
mov
bound
add
or
gs
xor
shlb
mov
in
add
test
cmp
adc
repz
in
push
cmc
test
iret
leave
lret
pop
and
pop
jmp
add
cmp
mov
mov
fld1
adc
sub
mov
out
mov
fs
mov
shll
push
jg
push
dec
lret
loope
fimull
sbb
into
mov
loope
pop
outsb
mov
xchg
lea
mov
jge
rol
xor
and
ds
mov
imul
insb
insl
mov
xor
out
fidivrs
jp
ljmp
out
xor
movsl
push
inc
insb
fwait
outsb
and
clc
int3
std
push
mov
adc
ss
sbb
popa
dec
aaa
cmp
in
lcall
dec
out
sbb
lret
ljmp
aas
das
or
repz
fstpt
shr
fadd
ret
mov
nop
fisttpl
and
pop
inc
mov
mov
mov
adc
add
fcomip
mov
shlb
imul
hlt
pop
pop
stos
add
lret
popa
lret
cli
outsl
push
call
sbb
les
mov
bound
fstpl
mov
xchg
fs
xor
pop
data16
push
mov
xchg
and
add
ja
or
pushf
imull
jle
xchg
adc
xor
jbe
arpl
fisubs
jo
out
push
jecxz
pop
sub
inc
jb
hlt
jns
lcall
inc
inc
sbb
dec
lahf
aas
lret
jmp
int
cmp
pop
xchg
mov
sub
sarl
lods
push
js
push
mov
rcrb
fcomi
sbb
jle
mov
pop
test
outsl
or
test
dec
ja
js
in
xchg
jne
pop
mov
push
int3
enter
cmp
dec
pushf
outsl
mov
mov
pop
add
xor
sbb
fidivs
push
repz
imul
fld
sbb
pop
outsl
sbb
hlt
adc
out
je
mov
push
cmp
add
movsb
repz
mov
lods
out
lods
pop
mov
mov
xchg
lahf
dec
repz
sbb
adc
add
out
pop
mov
sub
push
adc
in
jne
adc
call
loopne
in
out
lret
add
negb
fstpl
lds
je
inc
pop
xchg
outsb
lds
cld
or
xor
jnp
push
sbb
mov
je
add
adc
cld
stos
es
xor
shll
sbb
push
jne
or
push
sarb
aaa
sbb
cwtl
testl
sbb
repz
xchg
sti
lret
repnz
in
lods
jno
sub
repz
es
test
ljmp
movsl
lods
xchg
mov
insl
mov
jecxz
sbb
nop
in
add
insl
cmpsl
adc
arpl
mov
out
jnp,pn
repz
repz
or
movsb
repnz
mov
in
ja
negb
push
xchg
pop
cmpsl
mov
clc
cmpsb
lods
push
sub
daa
lcall
cmp
mov
jmp
jmp
adc
repz
xchg
imul
sbb
push
jl
outsl
fucomip
add
cwtl
in
inc
jecxz
pop
cmp
push
aas
mov
call
pop
xchg
ret
cli
add
iret
jp
push
into
lret
mov
je
jno
es
xchg
in
xor
shlb
sub
fisubl
leave
cmpsl
lock
push
jns
fwait
lcall
mov
push
cwtl
pop
push
dec
addb
pop
sbb
mov
cmp
addb
xlat
insb
inc
push
inc
mull
jne
inc
fwait
and
lea
push
ss
clc
daa
jo
movsl
inc
jo
leave
sbb
add
outsb
and
xchg
adc
dec
cmp
loope
or
pop
pop
adc
adc
cmp
mov
maxps
xor
add
loope
mov
pop
pushf
sbb
rolb
mov
sub
in
popf
int
pusha
addb
cmp
push
xlat
adc
dec
fmulp
cmpsb
fmuls
sarl
pop
sbb
mov
aad
sub
and
mov
inc
push
fidivs
cmp
mov
sub
cmpsl
and
lret
fs
lret
les
subb
pop
or
inc
jl
inc
lock
das
cltd
loope
hlt
loopne
pop
dec
divl
mov
mov
out
fwait
ror
mov
call
int
push
push
cmp
jnp
frstor
je
fsubl
cmp
cmp
push
jmp
mov
in
xor
push
push
shlb
add
cld
add
jg
test
lock
mov
adc
mov
mov
mov
mov
mov
adc
pop
xor
mov
mov
icebp
ret
pop
in
xchg
std
and
cmc
arpl
lea
cmc
out
sbb
insl
stos
sarb
pop
frstor
cld
mov
mov
and
mov
rcrb
orl
hlt
int3
sbb
sarb
pushf
sbb
inc
ljmp
imull
jl
cmp
xor
xor
dec
add
sahf
test
insb
enter
lods
cmpsl
jecxz
sub
xor
stos
nop
sub
iret
xor
lods
cli
mov
add
pop
lock
xor
jecxz
pop
aaa
jns
pop
cmp
push
lods
pop
sbb
mov
imul
sbb
sub
or
mov
daa
pop
inc
sbb
shl
pop
xchg
mov
fwait
iret
jge
pusha
repz
arpl
cmpb
cs
dec
mov
push
cmpsl
popa
mov
rcrl
push
ror
loope
out
mov
dec
cmc
icebp
das
movsb
jbe
push
adc
sbb
mov
pop
and
cltd
not
fcompl
jns
adc
leave
dec
pop
xor
push
add
stos
into
adc
add
adc
rcll
sgdtl
mov
sub
mov
add
repnz
stc
xchg
mov
dec
mov
and
or
andb
rorl
sub
add
mov
scas
dec
and
sub
xor
cmp
dec
daa
sbbb
mov
dec
sbbl
outsl
aas
repz
xchg
movsb
pop
lahf
dec
pop
sbb
mov
ret
push
sub
jecxz
cli
dec
aas
test
and
int3
push
leave
push
cwtl
ss
and
std
push
adc
insb
pop
add
jae
jmp
adc
and
dec
movsb
fucomp
xchg
cld
lahf
jecxz
xchg
jmp
sarb
pop
mov
scas
mov
and
pop
xor
sbb
pop
sub
adcl
lods
push
cmpb
sub
sub
dec
clc
andb
push
pushf
ss
or
sub
mov
pop
je
enter
stos
lret
out
ficomps
insl
mov
les
inc
or
lock
mov
je
iret
mov
or
pop
pop
cmp
div
adc
xchg
scas
cmp
push
stos
pop
test
loope
adc
lds
jecxz
movsl
out
lret
cltd
or
ficompl
add
out
into
ja
add
pop
fnstenv
mov
fisttpl
inc
out
stos
sbb
ret
pop
or
sahf
test
pop
dec
cltd
rorb
inc
les
cmp
cmp
fs
lods
test
cli
jle
mov
fsubs
loop
dec
jle
les
popa
or
std
leave
mov
lahf
add
test
xor
in
push
push
aaa
jae
mov
insb
inc
loopne
mov
cmp
mov
cmp
mov
scas
testl
mov
cmp
pop
mov
fcmovnb
gs
rclb
cmp
ljmp
dec
mov
cmp
fidivs
rcl
sti
push
scas
mov
dec
mov
xor
lock
xlat
rcrl
scas
sar
and
push
cmp
mov
and
jg
adc
lea
mov
jbe
xchg
mov
loopne
lcallw
outsl
mov
cmpsb
fsubl
divb
and
nop
out
or
pop
or
xchg
outsb
adc
cmp
imul
or
mov
add
addr16
dec
inc
fdivp
rcl
jp
and
loop
cmp
mov
movl
mov
es
and
fwait
xor
call
cmp
jae
cmp
in
push
pushf
cmpsl
ud0
push
rorb
pusha
sti
test
xchg
cmp
and
es
mov
dec
inc
xchg
es
xchg
sub
dec
adcb
icebp
stos
shlb
sbb
inc
mov
xchg
sarl
mov
fwait
test
into
dec
add
test
loop
div
cmp
inc
mov
cmpsl
adc
cmc
sbb
xor
or
jns
das
jmp
lock
je
push
mov
xor
mov
repz
jae
xchg
les
popf
cli
push
fsubl
cmp
dec
sbb
adc
pushl
jg
test
scas
fldt
inc
pop
push
and
push
adc
movsb
adc
pop
pop
into
bts
adc
inc
xorl
rorl
mov
out
or
inc
or
popf
cmpsl
icebp
mov
pop
int3
ret
cmp
mov
mov
mov
jp
scas
sbb
jp
andl
and
xchg
sbb
in
mov
inc
jns
jmp
mov
sub
ja
data16
add
add
sbb
imul
push
push
adc
jl
movsb
repz
je
jae
lods
divl
mov
mov
jmp
mov
lea
jmp
mov
jb
adcb
adcl
lds
jmp
cmp
out
dec
mov
leave
cmp
rolb
push
in
lods
push
xchg
adc
sbb
aad
pop
in
push
jge
scas
and
outsb
shll
add
mov
inc
out
sbb
int3
test
jmp
cmp
cli
jae
cs
data16
add
aaa
mov
call
push
and
adc
stc
out
jg
add
stc
bound
mov
adc
xor
bound
sbb
lahf
mov
push
sbb
pop
xlat
mov
mov
sub
jp
into
jns
movsb
flds
roll
jbe
shlb
fdivr
ss
add
jmp
insb
and
lret
bound
pop
shl
sbb
sbb
out
sub
repnz
cltd
lret
adc
call
add
inc
adc
inc
sarl
orl
pop
lcall
mov
jae
inc
addr16
xchg
ret
pop
in
cmp
push
ljmp
pop
icebp
sub
cli
inc
and
inc
mull
insb
pop
mov
mov
cmp
push
std
lods
add
int
lods
lds
and
mov
stos
insb
pop
inc
push
xor
adc
sar
xchg
movsb
data16
dec
push
cs
mov
aas
mov
icebp
fcom
cltd
mov
and
fdivp
ds
imul
ljmp
add
ljmp
mov
add
and
mov
shll
testb
movl
out
mov
xabort
cmp
xor
lods
push
xchg
fldt
movsb
es
inc
in
jns
jne
enter
jp
and
fsubr
pop
sldt
shrl
test
mov
inc
pop
cwtl
scas
fcmovnu
cli
xchg
loopne
xor
movsl
and
mov
insb
xchg
and
sbb
xor
fimuls
add
iret
push
lahf
mul
bnd
cmc
neg
repz
inc
sub
xchg
fmuls
mov
mov
ret
pop
mov
js
lock
fisubrl
aaa
pop
shll
mov
jg
xchg
into
mov
sub
sti
outsb
pusha
jne
scas
rorl
int3
and
rolb
gs
loope
aas
or
loopne
mov
aam
adc
jle
jl
clc
sbbb
push
out
lds
dec
cmp
cs
xchg
mov
jno
xlat
cli
dec
aad
sbb
ret
dec
pop
enter
movl
mov
mov
mov
popf
dec
lret
fbld
loope
xor
in
and
and
sbb
mov
mov
mov
and
aad
push
fs
xor
xchg
das
mov
lock
xlat
orl
das
daa
int
mov
jmp
gs
clc
sub
xlat
and
xor
and
jp
ja
sbb
cmc
lret
out
fnstsw
test
daa
mov
pushf
jecxz
pop
repz
jns
adc
or
mov
pop
push
push
ret
lret
mov
in
push
mov
cmp
lock
ficoml
cmp
push
mov
jecxz
dec
dec
fs
enter
pop
outsl
dec
ja
xor
repnz
push
jb
int3
rcrb
data16
push
bnd
movsb
cmp
loope
jnp
ja
loopne
cmp
push
aam
popf
add
mov
xchg
in
loop
loop
sub
cli
aad
in
dec
out
inc
add
fs
lock
lock
push
pop
gs
xchg
lods
jecxz
add
xor
icebp
xor
popf
cmp
les
add
cmc
loope
pop
aam
test
inc
jl
lods
rcrl
xor
decb
js
jbe
stos
add
loop
fsubl
mov
orl
lret
cld
test
inc
or
das
int
fidivrl
sbb
insb
sub
jg
inc
negb
jne
jnp
xor
out
inc
and
pusha
sbb
and
push
inc
lret
lahf
adc
mov
push
or
pop
in
dec
or
fmulp
xchg
fs
adc
adc
mov
fists
mov
push
dec
push
enter
cmp
mov
xchg
xlat
cld
ljmp
scas
push
stos
in
imul
scas
inc
insb
xchg
xchg
je
ret
xchg
mov
fldt
xchg
cmp
mov
repz
or
push
sti
pushf
arpl
xor
into
adc
mov
lock
shr
mov
xlat
into
idivl
cmp
and
call
sbb
xor
fisubs
insb
fdivs
rcll
mov
xor
inc
rcrb
xchg
mov
aad
adc
shl
xor
sarb
mulb
adc
push
mov
mov
cmp
scas
xchg
clc
movsl
pop
mov
sahf
adc
pop
or
popfw
sbb
jmp
sarl
loop
sahf
hlt
push
and
adc
pop
jne
xchg
push
inc
call
push
imul
inc
xor
push
pop
divb
add
outsb
cmpsb
les
xchg
rcll
shrl
mov
lods
aad
adc
lods
insl
shr
push
cmp
lret
scas
dec
inc
pop
lret
push
popf
pop
loope
sub
sbb
cwtl
fildll
push
adc
movsl
movsl
adc
adc
mov
aad
sub
add
jl
lock
mov
mov
inc
cs
test
mov
and
cwtl
mov
pop
ds
push
mov
dec
addl
jecxz
cmp
in
aam
arpl
pop
cmpsl
pop
or
dec
xchg
xor
and
call
scas
daa
xor
movsb
lret
js
mov
add
sub
loope
jmp
outsl
dec
outsl
xchg
mov
pop
mov
jg
dec
cltd
jp
jb
push
cmp
clc
int
lea
call
nop
mov
popa
xor
mov
frstor
out
insb
sbb
mov
js
int
fs
adc
lock
movsb
pop
cmc
test
std
iret
push
adc
fmul
inc
sbb
and
movsl
dec
test
lcall
rcll
outsl
mov
shrb
pop
icebp
add
mov
outsl
movsb
aas
vpand
xchg
std
jp
add
push
pop
out
inc
in
and
sub
dec
mov
sub
or
sbbl
ret
inc
mov
mov
test
sub
gs
jo
cmp
xchg
out
dec
imul
movsl
adc
xor
adc
test
scas
loopne
popa
in
imul
idivb
imul
fwait
inc
inc
xchg
add
mov
popf
leave
cli
stos
fwait
and
cs
mov
inc
sbb
repz
sti
mov
sbb
push
xor
or
repz
enter
test
insl
xchg
push
cmp
loop
add
inc
dec
jecxz
je
xchg
xlat
jo
xchg
jmp
lds
mov
jne
cmp
shlb
lods
mov
adc
shlb
push
sub
dec
test
xor
add
cmc
scas
enter
imul
into
and
or
inc
xlat
pop
sbb
or
mov
enter
fidivs
pop
xchg
add
and
addb
lods
gs
mov
push
enter
lock
clc
fwait
sub
imul
jae
fdivr
daa
jne
leave
push
add
sub
cld
xchg
pop
mov
sbb
mov
rolb
test
fwait
repz
ljmp
pop
cmp
xor
mov
xor
xchg
push
dec
and
div
dec
adc
jae
rcrb
lcall
jmp
and
xchg
ret
adc
test
test
xchg
mov
sub
into
jnp
fadds
mov
fidivl
mov
into
dec
jp
imulb
lock
mov
gs
jo
in
or
mov
js
notl
aam
imul
scas
or
adc
mov
shlb
stos
mov
cmp
testl
cmc
movsl
loope
inc
shl
stos
std
lods
mov
in
fnstenv
dec
fidivrl
leave
imul
inc
ja
je
mov
mov
push
subb
stos
movsb
es
dec
aas
in
hlt
or
push
outsl
sbb
popf
jmp
add
jo
pop
dec
jae,pt
das
xchg
or
pop
lahf
or
xchg
fs
das
gs
loopne
sti
scas
pop
xor
add
xor
in
cmpsl
iret
lock
pop
stos
push
jge
movsl
jb
mov
or
inc
xchg
pop
pop
mov
or
mov
mov
jnp
imul
into
dec
xchg
hlt
adc
lahf
repz
fsubr
addl
add
das
out
mov
test
cmp
push
shrb
add
dec
and
jae
dec
out
add
jmp
leave
insb
ret
stc
fldt
pop
xor
sbb
lcall
xor
xchg
inc
jmp
popa
out
mov
lock
fadds
xorb
xchg
bound
adc
jmp
push
test
jb
shrl
xchg
mov
aad
and
or
push
cmp
lahf
mov
inc
mov
lea
stos
jmp
dec
mov
dec
fwait
mov
test
nop
push
mov
sub
enter
rcrb
jge
fisubrs
or
icebp
or
lret
imul
stos
ss
dec
outsl
aaa
in
cmp
popa
pop
add
fdivl
xor
aas
lods
jmp
mov
and
jp
pop
sbb
ret
ss
cmp
push
in
imul
mov
mov
divb
mov
jo
fdivrl
sub
out
dec
gs
inc
cmp
lea
dec
add
in
inc
ss
pop
xchg
in
xchg
in
push
stos
lock
jo
inc
lcall
shr
mov
jecxz
or
cld
adc
test
fnsave
inc
bound
dec
mov
fmull
mov
test
in
dec
imul
hlt
into
cwtl
test
out
inc
pop
sbb
fistpl
popa
stos
in
add
std
dec
sar
stos
das
cltd
or
mov
jmp
jg
rcrl
push
sbb
les
lds
mov
push
fwait
icebp
mov
mov
push
dec
imul
xchg
or
dec
arpl
mov
lds
jp
rolb
or
out
iret
dec
enter
cmp
xor
and
jle
mov
iret
push
and
fs
rcr
push
out
mov
inc
mov
test
icebp
dec
cli
icebp
xor
inc
push
fucomp
fwait
xchg
in
xor
icebp
jne
mov
enter
inc
addr16
mov
xchg
loopne
dec
movsb
sub
dec
fs
es
sbb
out
mov
dec
popa
inc
mov
movsl
cmc
test
hlt
std
sub
sub
and
lds
and
into
pop
scas
enter
sub
pushl
leave
sbb
or
aam
push
xlat
mov
addr16
jb
add
sub
rol
insl
push
jp
lahf
mov
or
dec
xchg
add
cmc
xchg
fwait
inc
lods
roll
loop
cs
sub
jnp
imul
cmp
push
push
repz
push
lcall
clc
es
jnp
cli
xor
pop
pusha
xor
test
fstps
push
cmp
repz
out
mov
aad
inc
imul
ja
movsb
popa
push
pop
cmc
add
push
test
cmp
xchg
mov
dec
je
dec
imul
test
push
test
xor
push
push
jecxz
xchg
jmp
arpl
cli
jb
jbe
outsb
jne
in
andl
push
imul
mov
pop
fidivs
push
pop
sbb
push
insb
inc
cmpsl
bound
js
shll
mov
movsb
sub
cwtl
xchg
inc
stos
aam
popf
popf
jae
sahf
in
push
pop
add
stos
arpl
push
jnp
test
or
gs
sub
mov
insl
loopne
test
ror
sbb
stc
ss
sbb
add
call
mov
xor
ljmp
dec
jg
push
sbb
ja
in
mov
rcrl
cmp
cli
int
loope
lock
adc
and
ds
out
scas
bound
aad
lahf
shlb
jo
jl,pn
push
push
movsb
xchg
popw
hlt
lds
jl
sub
mov
push
js
shrb
aaa
and
cli
xchg
inc
pushf
in
mov
jge
pop
jo
adc
test
mov
xchg
sbb
jns
adc
js
sti
or
popf
inc
jecxz
push
shl
cmpsl
out
aas
mov
mov
ljmp
cmc
mov
andl
dec
cld
mov
add
lret
cmpsb
mov
cs
repnz
stos
inc
out
mov
test
dec
je
je
mov
loop
aas
mov
xchg
insb
dec
mov
sbb
xchg
sbb
aas
add
cli
adc
jmp
jmp
cmp
push
lds
inc
repnz
lods
fildll
xchg
rcrl
xor
xchg
pop
lock
mov
rcr
js
loope
or
cmpsl
xchg
push
or
jns
mov
test
pop
push
gs
mov
mov
jecxz
lea
add
mov
jne
lahf
jmp
aam
adc
sbbl
xchg
int
movb
loop
mov
imul
mov
pop
mov
mov
sub
in
pop
popf
sbbb
jge
cmpsl
cmp
scas
jae
fcmovu
pop
push
out
sub
dec
dec
jbe
scas
in
mov
dec
xlat
andl
int
pop
sbb
pop
into
pop
inc
icebp
jge
bound
ret
das
mov
jge
sub
cmc
xor
and
dec
or
dec
adc
arpl
add
adc
mov
mov
into
mov
mov
dec
imul
ljmp
rcr
js
int3
cli
daa
pop
or
add
movsb
sub
mov
test
js
push
push
test
pop
sub
rol
mov
stos
push
adc
hlt
mov
pop
xor
inc
push
cwtl
pop
fcompl
push
lds
movsb
xor
mov
add
push
lods
mov
push
mov
push
cmc
sbb
pushf
and
mov
mov
push
dec
jl
sahf
xlat
movsb
cmp
jbe
mov
hlt
and
adc
dec
fwait
lods
enter
xchg
add
jb
mov
call
mov
jg
sbb
int
adc
cli
rclb
test
lret
lahf
lret
rcl
mov
jecxz
icebp
rorb
testb
xor
mov
cli
in
aam
sub
mov
pushf
mov
adc
les
inc
jb
lahf
movsb
test
adc
push
mov
dec
add
jnp
adc
fs
repnz
test
mov
in
out
notb
in
jp
fmul
gs
sbb
add
push
lahf
fs
pop
jmp
dec
mov
add
jg
cli
xchg
and
xor
test
ret
or
sbb
fidivl
pop
in
xchg
in
rcrl
notb
pushf
mov
or
rol
sbb
into
sbb
cld
push
jecxz
arpl
aam
fidivl
leave
andb
xchg
lods
loopne
add
movsl
push
jb
push
mov
loope
fcoml
sub
ja
int3
addr16
lcall
int
out
fwait
push
filds
jbe
rol
mov
addr16
out
loop
fwait
ss
jmp
jmp
popa
sub
fldz
pop
sub
jo
adc
aam
mov
adc
push
jnp
or
stos
out
cltd
nop
popa
pop
stc
sub
or
mov
jnp
adc
pop
ficompl
subl
lret
add
xchg
jge
push
dec
mov
ljmp
aad
hlt
in
add
outsl
testl
cmp
sub
cmpsb
out
testl
jp
pop
ja
jmp
gs
inc
adc
adc
sarl
pop
sub
pslld
mov
movsl
rcll
pushf
mov
jmp
cld
or
ret
movsl
int
cwtl
lahf
pusha
mov
pop
xor
inc
lock
push
in
jp
mov
aad
add
dec
inc
stos
imul
test
insl
out
cmp
dec
push
dec
ret
das
pusha
add
xor
sub
insb
jae
push
int3
shl
xchg
sbb
ret
nop
test
xchg
inc
add
mov
dec
outsl
push
fwait
cmp
dec
xchg
fwait
mov
sbb
imul
lea
or
jg
std
imul
stos
push
enter
cld
xchg
jnp
movsl
imul
adcl
adc
imul
ret
sub
xchg
imul
aad
cmpsb
sbb
cltd
loope
pop
push
mov
call
xchg
lcall
je
fdivs
pop
stos
cs
sbb
cmp
out
test
and
std
sbbl
int
out
mov
and
iret
sub
add
stos
pushf
les
sbb
sbb
mov
and
stos
mov
std
inc
aas
push
add
and
jb
nop
mov
lock
mov
pushf
and
test
jg
mov
push
cmp
and
pop
or
and
fiaddl
jp
adc
test
fwait
test
xor
jp
xchg
xor
movsl
mov
inc
cmp
jbe
push
sub
jbe
dec
mov
cmc
rorl
add
cmpsl
cmc
jl
popf
cmc
mov
jg
adc
mov
or
js
pop
cmpps
or
xor
jg
jg
pop
aas
jp
js
fadd
sub
push
mov
xor
jmp
and
jmp
gs
push
push
ljmp
jge
add
into
mov
xorb
xor
orl
cmp
xchg
pop
sbb
repnz
xchg
add
sbb
int3
xor
lds
shlb
xor
pop
dec
ljmp
xor
pop
push
mov
cli
fisttpl
insl
sbb
jnp
or
subl
orb
jecxz
repnz
adc
scas
lret
sarb
std
cmpsl
ret
stos
push
leave
in
fbstp
movsl
lock
adc
xor
fs
jge
push
std
in
and
inc
shrl
xchg
jne
or
sbb
xchg
xchg
ffree
mov
pop
aas
cmpsl
pop
xchg
jge
and
ret
popa
adc
cmp
push
add
leave
leave
pop
test
mov
hlt
jbe
adc
inc
rolb
jge
push
jb
out
in
push
sbb
or
fistps
mov
push
test
mov
shlb
jecxz
call
dec
dec
insb
movsl
lock
nop
or
push
fldt
jb
or
call
clc
pop
sbb
and
sub
xorb
shrb
incb
addr16
push
dec
xchg
mov
cld
fidivl
test
inc
dec
jge
outsl
outsl
jmp
lea
push
call
out
popa
scas
int
or
mov
subl
in
add
test
ss
cs
int
lock
in
mov
adc
cs
mov
sub
cmp
stc
aaa
mov
push
xchg
sub
xorb
cmpsb
inc
add
sbb
inc
jbe
cld
sbb
fcoms
pop
jg
test
jp
xchg
jmp
flds
lds
push
mov
sti
add
add
pop
pop
jb
adc
stos
insb
mov
add
gs
or
imul
pop
dec
xchg
dec
icebp
fcmovb
push
lret
fdivrp
push
aam
sub
mov
inc
push
xchg
or
movsl
inc
loop
and
ret
add
inc
dec
xchg
mov
mov
add
insb
es
push
mov
add
fcmovnu
sub
cmp
sbb
mov
adc
xchg
and
lods
bound
lods
cmpb
out
or
andl
data16
cmp
pusha
pop
icebp
push
das
mov
orb
out
daa
adc
repz
inc
mov
pushl
ljmp
ljmp
mov
sub
icebp
test
push
xchg
dec
add
jno
dec
or
push
and
dec
sub
sub
xchg
lret
ljmp
fistps
mov
loope
incb
cmc
mov
mov
add
mov
dec
test
adc
cmpsb
js
or
sbb
push
iret
ljmp
aas
shrl
inc
push
stos
cli
mov
or
sub
outsb
inc
bound
cwtl
push
sbb
dec
adc
push
push
jnp
inc
icebp
adcl
mov
cmp
movsb
in
xor
andb
fbld
jmp
push
ds
aas
mov
fiadds
jbe
test
cmp
aam
frstor
insl
jle
andb
cli
pushf
lahf
incb
stos
sub
lahf
add
inc
cmpsl
sbbl
jns
and
mov
add
loopne
adc
shlb
lcall
mov
jb
xchg
shlb
cld
xlat
popa
jae
jnp
jle
sbb
add
and
hlt
and
push
xchg
mov
pushf
mov
push
loope
inc
pop
stos
sbb
fldenv
aas
nop
cmpsl
push
lock
mov
scas
bound
test
daa
cs
xor
std
outsb
xchg
rcrl
ja
and
mov
dec
and
cld
sub
aam
aad
xchg
jl
cwtl
ret
les
rcr
cmc
test
out
gs
jns
lea
addr16
inc
scas
stos
movsl
mov
lahf
xchg
cmp
shlb
lea
jmp
rclb
jae,pt
sub
sahf
jae
mov
clc
pop
movsb
popa
mov
dec
xchg
adc
movsl
std
push
pop
test
es
jl
int
mov
mov
scas
and
mov
addr16
pop
push
and
inc
and
sub
mov
popl
inc
adc
popa
xchg
call
pop
jae
mov
int
or
fildl
jmp
test
inc
out
shr
dec
bound
mov
rcr
sarl
push
xchg
xor
push
mov
cmp
incb
rorl
imul
pusha
mov
mov
sbbb
or
mov
fisubrs
popa
shl
cmp
scas
pand
dec
dec
inc
icebp
sti
inc
and
out
push
fidivl
inc
xchg
push
popf
loopne
pop
push
ss
jne
jo
test
jo
imul
push
mov
out
dec
lahf
jo
fwait
sbb
nop
sar
addr16
xchg
xor
roll
cmp
sar
loope
lcall
out
sub
dec
lds
inc
sub
mov
fldl
test
std
inc
arpl
add
into
push
add
sub
inc
rcll
lods
dec
or
mov
cltd
mov
mov
sti
fcomi
or
pop
cltd
cmp
loope
out
sbb
cmp
addr16
dec
or
mov
and
std
pop
mov
mov
jp
fmulp
aas
fs
mov
pop
faddl
cmpsl
aam
sbb
dec
les
sub
xchg
rol
lds
out
mov
cli
sub
xor
rorb
inc
push
xchg
lret
and
test
xor
pushf
xchg
sbb
cmp
add
mov
push
ds
lret
and
jne
xor
push
loopne
mov
jmp
std
stc
inc
mov
mov
in
xchg
shl
xorl
pop
mov
adc
in
out
cld
adc
jae
lds
pop
jo
mov
and
mov
nop
fmul
stos
pop
cmp
sub
jg
jge
popa
leave
and
mov
lds
mov
lret
test
lock
inc
cwtl
mov
clc
idivb
dec
dec
frstpm(287
movl
ja
sbb
inc
dec
mov
incl
jmp
cmc
and
add
cli
in
rorb
jg
enter
je
and
xor
sub
inc
jne
pop
stos
inc
mov
fidivrl
popf
js
aas
sbb
push
scas
cwtl
mov
cmp
jle
jge
xchg
daa
fldt
mov
repnz
sub
pushf
cs
mov
addr16
dec
repnz
out
je
xor
repnz
icebp
xchg
je
cmp
jno
cmp
inc
sub
add
dec
cmp
ds
inc
add
iret
dec
fsubrl
test
lds
xchg
scas
xchg
pushw
pop
cmp
or
rolb
push
lahf
jp
sub
dec
dec
lock
mov
test
mov
pop
popf
hlt
in
out
dec
mov
xor
jl
call
iret
sahf
jns
pop
lock
pop
or
jo
js
jns
sar
mov
cmp
lahf
aad
lods
ds
in
or
sbb
or
dec
das
xlat
add
add
pop
pop
xor
sub
iret
notb
mov
mov
cmpsb
jmp
gs
push
leave
movsb
bound
and
add
sti
lods
call
in
int
jns
mov
pop
stos
cmp
sbb
pop
jnp
dec
jnp
jno
imul
rorb
addl
mov
popf
mov
jo
sub
movsl
adc
jns
cmc
in
lods
in
icebp
lcall
jae
sbb
xchg
fbld
insl
pop
inc
mov
push
fmuls
cld
aas
fcmovne
mov
jae
cmp
lahf
mov
lret
sbb
pop
jb
inc
mov
cmp
insb
nop
mov
sub
movsb
movsl
and
add
sbb
add
push
jb
push
mov
mov
mov
sub
xchg
shrl
inc
test
aas
xor
mov
scas
dec
icebp
add
mov
imul
inc
add
sahf
jno
dec
cmp
ja
jmp
jne
jmp
or
out
sub
mov
push
or
ret
adc
addr16
ds
jp
int
ljmp
xchg
push
push
cld
orl
pushf
cmp
mov
ja
dec
sbb
pop
ljmp
mov
rcrb
mov
xchg
rorb
clc
xchg
xchg
or
mov
cmp
lcall
mov
cmp
nop
lds
and
mov
ret
add
imul
mov
call
mov
fs
inc
je
cmp
lods
push
nop
les
pushf
jge
in
aam
add
or
aas
sbb
jae
and
imul
addr16
mov
in
cmp
mov
in
inc
ja
xchg
divb
lcall
sbb
pop
pusha
dec
gs
fldcw
repnz
mov
call
loope
push
or
mov
push
inc
bound
shll
test
cmovp
fcoml
subb
cmc
pushf
push
cmp
sahf
xchg
jnp
xor
outsb
cld
insb
out
dec
insl
xchg
pop
adc
jne
push
aam
pusha
enter
add
inc
push
out
sub
loopne
jo
xor
cmp
add
inc
leave
mov
pop
mov
out
sub
imul
xchg
aas
inc
les
fisttps
push
fldl
jge
subl
gs
aam
jecxz
cmpsl
add
out
aam
mov
xor
mov
xchg
ss
loope
mov
lds
sub
or
lahf
and
sti
or
in
pop
and
inc
mov
fcoms
fcomps
fnstcw
dec
cmp
call
or
jno
loop
pop
or
pop
mov
divb
add
nop
and
addr16
pop
mov
adc
and
or
mov
data16
scas
push
lods
dec
orb
icebp
call
lret
dec
loopne
mov
fs
xchg
mov
dec
dec
aaa
loopne
mov
fdivrs
sbb
mov
imul
add
jns
pop
jl
pop
orl
mov
add
push
lahf
in
mov
push
lahf
stc
in
lret
inc
nop
or
outsb
mov
fsub
sbb
or
inc
lds
fxch
jle
xchg
pop
add
adc
jb
jmp
push
cmp
aad
aam
test
sbb
lahf
mov
sbb
je
xor
sub
mov
inc
push
pop
fldcw
jo
in
xchg
dec
test
lods
or
push
mov
fstpl
into
cmc
cmp
out
test
pop
ss
sub
sub
xor
sub
mov
adcl
cwtl
adc
dec
aaa
cmp
hlt
mov
jo
dec
inc
sub
insl
imul
jo
sbb
pop
xchg
bound
push
adc
out
and
mov
sub
jns
sbb
push
data16
push
sub
xor
adc
adc
clc
mov
cli
cltd
cmpl
cltd
jb
bound
les
xor
and
nop
jno
in
xlat
xchg
mov
mov
adc
jno,pt
test
sarl
xor
dec
dec
clc
dec
mov
repnz
dec
mov
mov
cmp
jge
xchg
in
inc
lahf
and
in
das
movsb
or
mov
mov
and
repnz
dec
push
sahf
pop
je
xchg
aad
jle
cmp
dec
jmp
mov
mov
lds
mov
ds
scas
scas
pop
rcll
mov
adc
pop
enter
pop
ds
es
xor
dec
pop
or
pushf
adc
mov
mov
imul
cmpsb
jmp
dec
lock
inc
std
mov
push
loope
test
xor
das
lds
int
cmp
fidivs
xlat
loop
loop
pop
out
loope
xchg
add
std
test
mov
jns
push
dec
jge
cmp
sub
in
mov
jo
je
pop
aad
inc
lods
mov
arpl
jl
sub
mov
out
lahf
aas
mov
pop
std
jne
arpl
adc
lods
sbb
leave
or
and
testb
pop
xor
jns
xor
stos
jns
fdivr
testb
mov
jns
jbe
js
pushf
lods
jmp
bound
push
xor
push
stc
nop
fnstsw
cmp
into
out
lods
rcl
mov
push
into
push
lods
push
pop
cltd
out
xchg
dec
ss
imul
cmp
clc
or
sbb
ja
adc
pop
daa
mov
sub
push
ljmp
stc
mov
test
pop
sub
inc
cwtl
je
inc
inc
add
xchg
std
in
xchg
push
jnp
aad
icebp
mov
std
fdivrs
fsubrs
daa
xchg
inc
popl
outsb
or
pushf
and
insl
clc
cmp
fsub
out
imul
mov
push
inc
or
sbb
mov
out
lret
and
inc
in
pop
movsl
sahf
out
fs
xchg
adc
enter
scas
lret
lock
jb
call
mov
sbb
xor
orb
stc
leave
rorb
add
inc
dec
repnz
sar
and
scas
mov
sbb
inc
xchg
fldcw
shlb
push
or
mov
fildl
aas
push
inc
pop
loop
notb
add
inc
mov
leave
xchg
sysenter
ss
mov
subl
decb
add
das
sahf
stos
lcall
or
sub
shl
in
mov
les
mov
leave
enter
add
xor
cld
rclb
adcl
inc
push
xchg
daa
inc
xchg
fiaddl
xchg
xor
scas
xor
xchg
pop
fisubl
test
jge
sub
das
pusha
dec
pop
dec
mov
std
or
push
in
or
mov
add
mov
cli
in
cmc
loop
and
push
mov
push
mov
lds
outsl
out
inc
push
or
div
clc
in
out
xchg
ret
lock
enter
xchg
repz
adc
sub
jne
daa
pop
scas
mov
fmull
add
hlt
sub
lcall
pop
out
icebp
scas
xchg
cmpl
sub
adc
loopne
xchg
int
lods
outsb
dec
or
out
mov
inc
xor
sbb
or
movsl
rorl
mov
out
ljmp
movb
insl
fimuls
cwtl
sbb
aam
test
movsb
dec
vpackssdw
call
mov
shrl
ret
xchg
mov
mov
lds
pop
popa
xorb
pop
sbb
adc
push
stc
ds
dec
jl
cmp
mov
test
iret
mov
cmpsb
mov
std
cmpsb
sbb
mov
or
mov
or
push
aaa
stos
js
add
lea
inc
inc
jbe
test
lret
mov
cld
sub
xor
sbb
lds
fwait
aaa
fwait
sbb
add
mov
fdivrs
jle
xchg
mov
lods
insl
pushf
ret
adc
xor
mov
fidivl
jns
add
movsb
ss
adc
imul
dec
mov
cmp
mov
xchg
sahf
mov
sbb
push
cs
popa
inc
push
or
push
mov
cmpb
adc
shll
ror
cmpb
add
mov
xchg
dec
rcll
scas
push
lds
mov
mov
jbe
cmp
push
sub
jnp
jb
fiaddl
pop
push
mov
lock
cmpsb
push
jecxz
lods
out
cmp
movsl
push
push
add
int
mov
icebp
fldenv
mov
jns
inc
mov
jb
shl
mov
loope
xor
adc
adc
and
and
push
add
pushf
int
jl
adc
and
sub
ja
stos
inc
popa
das
sub
fimull
jecxz
dec
mov
pusha
in
jmp
popf
fisubl
sbb
jecxz
loope
pop
mov
or
jns
je
lods
call
inc
push
rolb
push
mov
lds
push
in
outsl
jecxz
out
jb
and
sbb
jp
mov
aas
ret
inc
mov
addr16
xchg
pop
jp
orl
ds
dec
inc
pop
jge
lods
scas
xor
pusha
fcomps
lahf
or
jle
or
jle
add
aad
bound
mov
aas
fcomip
jle
mov
inc
das
ljmp
add
out
jae
cmp
push
in
loope,pn
loope
xor
clc
rcrb
insb
gs
pusha
jle
xor
xchg
mov
dec
popa
fld
lock
and
dec
lahf
les
push
pop
pushf
fistps
and
rorl
cmp
sub
sub
xlat
in
inc
xchg
inc
pop
pushf
insl
jp
test
movsl
pop
clc
fsubrs
or
popf
dec
test
int3
pusha
andb
xchg
movsl
icebp
scas
fadd
mov
enter
lret
sbb
mov
or
pushf
inc
out
pusha
sub
clc
add
jbe
add
sbb
lahf
test
sub
mov
fstps
hlt
jmp
mov
xchg
mov
movsb
std
adc
inc
adc
pop
cmp
fs
int
stos
sub
push
xor
out
and
lret
jmp
popf
test
pop
cmovle
or
outsb
pushf
js
cld
or
mov
mov
push
neg
sahf
sub
movsl
inc
hlt
pop
add
pop
in
sub
repz
pop
xchg
cmp
insb
push
mov
cwtl
cmp
add
enter
outsb
sahf
out
sarl
mov
push
jmp
dec
jbe
aas
adc
or
mov
jo
or
push
out
inc
sub
aaa
sbb
sbb
stos
mov
mov
add
push
inc
int
inc
sarl
inc
fmul
popa
xor
lods
stos
add
ret
and
roll
sbb
mov
jnp
mov
les
mov
sub
ds
stos
push
movsb
in
cmpsb
sbb
add
data16
add
push
xor
lahf
cmpsb
add
and
sub
popf
sbb
popa
loope
xchg
inc
sbb
adcl
into
repz
sub
scas
cmpsl
lods
jecxz
cs
jle
jmp
push
fcoms
jnp
aad
in
mov
push
mulb
push
pop
in
mov
fs
sub
push
and
or
add
mov
cmp
movsb
cmp
xlat
adc
fwait
movsb
pop
dec
mov
mov
push
cmpb
mov
push
jns
mov
xor
in
xor
dec
into
mov
and
subl
gs
test
jl
mov
aam
movsl
mov
es
cwtl
inc
in
loope
xchg
cmc
sub
lds
inc
jno
dec
out
add
dec
das
idivl
jmp
and
mov
cmp
imul
push
jmp
pop
mov
add
jmp
mov
jb
mov
sub
out
ljmp
or
mov
mov
xchg
mov
orb
push
mov
das
cmp
sub
mov
xor
adc
and
jae
push
jp
into
sbbl
dec
xor
xchg
nop
dec
scas
jo
jg
cld
cmp
in
pop
gs
dec
test
push
leave
les
jecxz
add
mov
movsl
mov
std
jg
dec
push
out
pusha
xchg
xchg
in
clc
adc
push
xor
push
test
les
aam
and
ret
or
clc
ljmp
mov
xchg
in
cld
dec
lahf
push
out
lods
data16
les
lea
je
xor
add
sahf
and
ja
push
push
sub
or
leave
in
mov
cmpsb
push
dec
cwtl
mov
cmp
xor
xchg
xchg
popf
loope
andl
mov
cmp
lret
cwtl
push
in
shll
mov
or
sti
dec
cmp
mov
out
push
mov
bound
das
and
pop
lret
mov
loop
xchg
cmp
enter
xchg
push
cli
mov
lea
xchg
sub
sub
test
sub
das
pusha
ljmp
xchg
add
ds
orb
mov
js
js
lahf
into
mov
and
dec
xchg
js
movaps
push
call
ret
in
ljmp
jae
mov
nop
mov
loopne
xchg
push
adc
ret
sbb
pop
mov
cmp
hlt
xor
jo
inc
or
sbb
mov
out
popf
xchg
cmp
mov
lret
cs
lret
and
adc
mov
push
iret
jmp
dec
sub
cmp
jg
nop
xchg
outsl
push
xchg
jp
in
outsl
adc
mov
repnz
push
outsb
and
mov
mov
mov
in
add
std
push
dec
fisubl
out
popf
fldl
xor
mov
push
mov
stos
cltd
mov
inc
fnsave
sub
dec
clc
imul
mov
cmpl
pop
pop
mov
andl
lods
loopne
mov
jbe
aam
jae
jmp
lock
xor
mov
mov
dec
push
rcrl
xor
cmp
jmp
rcll
adc
daa
hlt
test
jp
push
push
lcall
add
mov
fistl
cmpb
jecxz
pop
jnp
xlat
fists
shlb
mov
mov
mov
add
test
test
mov
push
mov
stos
jge
mov
dec
jne
out
ljmp
add
xchg
mov
out
and
push
bound
mov
xchg
scas
push
xchg
and
roll
add
pop
roll
or
stos
push
cs
push
sbb
jnp
mov
push
int3
test
sbb
out
popl
jo
cmp
push
int3
mov
add
movsl
ljmp
out
sub
xchg
addr16
pop
mov
mov
daa
ss
ret
sbbb
xchg
sbb
and
xlat
inc
loopne
sub
mov
xchg
cmp
hlt
xchg
push
sub
jb
out
out
mov
inc
neg
add
mov
adc
jg
cmpsb
cmp
lret
lods
push
add
or
je
ljmp
pop
bound
push
jae
shl
mov
sub
jl
or
push
scas
sbb
les
subl
shll
xlat
jo
insb
in
int
pop
jle
stc
and
shll
sub
ja
imul
dec
mov
and
popa
jl
subl
add
mov
or
bound
ret
ja
xchg
inc
test
fs
sti
pop
mov
icebp
xchg
cli
inc
test
mov
leave
mov
dec
ds
xor
or
pmuludq
xor
lock
mov
sbb
int
int
imull
fldcw
stos
inc
cmpsb
movsb
xor
xor
jbe
scas
push
or
fcomp
jae
or
cwtl
mov
mov
adcb
mov
or
cmp
les
adc
sarb
sbb
shl
jge
fmulp
jmp
fcmove
idivl
subl
sub
insb
inc
jno
pop
jl
shll
dec
jns,pn
ror
es
mov
cmp
mul
cmp
cmp
daa
movsl
jne
fs
loop
and
cmp
jno
mov
mov
out
out
sub
aas
out
icebp
enter
jl
inc
mov
xor
sbb
and
gs
loop
pop
sub
ss
adc
dec
in
and
fadd
sub
push
or
or
popa
sbb
add
and
shrl
jmp
bound
xor
inc
mov
daa
stos
adc
cmpsb
xchg
in
mov
ret
jae
xor
and
rcrl
dec
lods
test
lds
fnsave
add
imul
arpl
jp
or
add
repz
lods
negl
inc
stos
sbb
aas
fdivrs
out
push
in
sub
jg
push
sbb
inc
shrb
inc
fmull
cmpsl
faddl
push
nop
das
inc
in
ret
mov
sub
clc
xchg
xor
sub
jl
mov
inc
jne
xchg
fstpt
jecxz
test
mov
lock
lret
fistpll
in
inc
inc
push
repnz
out
lods
xor
popf
scas
push
mov
mov
cld
cli
daa
mov
arpl
mov
clc
imul
and
sahf
add
sbbl
dec
loopne
jb
cmpsl
es
and
daa
mov
shll
repz
loop
push
popa
xor
adc
xchg
je
adc
stos
orl
fisubl
addl
inc
mov
es
inc
add
das
ret
and
lock
sbb
js
lods
lods
mov
push
cld
imul
jns
stos
push
adc
int
jnp
jmp
sbb
gs
mov
out
addr16
cmpl
xor
popf
xor
dec
sarb
jae
sub
fsub
sub
in
lret
mov
mov
lods
xchg
imul
xlat
cmp
xor
js
sub
push
dec
out
dec
xchg
sub
jno
push
scas
cmp
push
adc
push
adc
mov
sub
inc
fisubs
lret
in
iret
aam
jp
popa
into
stos
and
cmp
add
mov
jnp
popa
and
cmpsb
rolb
negl
cmp
std
mov
mov
pushf
pop
adc
push
int
sub
sbb
mov
dec
push
pushf
cli
and
push
mov
push
cmpsl
das
xchg
aam
in
scas
jecxz
jno
xchg
and
pop
loopne
repnz
pop
push
mov
mov
push
cmp
adc
push
in
mov
xor
or
cmc
mov
aaa
pop
ror
test
mov
lret
lea
jecxz
mov
sub
mov
jno
mov
stos
jp
cmc
repnz
push
lods
add
jg
mov
jo
test
mov
xchg
adc
mov
cmp
lret
loop
dec
idivb
rcrb
pusha
scas
xor
add
mov
ret
push
sbb
xor
mov
into
pusha
push
pop
jmp
jb
out
shll
push
outsl
push
inc
adc
inc
mov
stc
cs
je
lcall
push
iret
jae
pop
sub
push
cmp
rorl
pop
lods
imul
rclb
int
sub
adc
mov
pop
push
add
add
cmp
inc
xchg
jg
pop
mov
pop
push
add
push
std
cmc
xchg
xchg
xchg
sti
lock
mov
lea
sbb
lcall
mov
or
and
std
xlat
jg
lret
int
iret
call
shll
mov
ds
mov
gs
adc
push
and
xchg
push
outsl
stos
fisttpl
pop
dec
jnp
gs
push
xlat
shrb
adc
adc
je
cmpsb
ret
in
repz
test
mov
push
pop
adc
mov
dec
fcom
ds
push
push
mov
arpl
sub
push
pushw
sete
cmp
movsb
arpl
mov
pop
cli
mov
jbe
mov
sbb
mov
add
push
hlt
adc
pop
sbb
shl
mov
sub
sub
jle
sub
cmpsb
fldl
mov
xor
or
mov
mov
mov
enter
ror
ret
pushf
cmp
sub
lds
dec
push
push
sub
pusha
adc
fwait
inc
mov
fistpl
mov
mov
daa
pop
imul
pop
mov
stc
fptan
jge
xchg
xchg
mov
mov
out
jae
jp
lea
dec
jle
fbstp
dec
xchg
repnz
mov
pop
adc
xchg
fisttpll
mov
movsb
pop
push
fdivs
xor
inc
push
mov
out
clc
or
sbb
test
cmpsb
jbe
testb
shrb
stc
xor
gs
std
adc
jae
jo
mov
push
sub
pushf
imul
nop
add
incb
repz
repnz
repnz
pop
mov
fistps
sbb
mov
inc
mov
sub
pop
rcrl
sbb
insb
pop
pop
call
icebp
or
mov
mov
es
xor
orb
sub
sub
mov
pushf
jg
in
push
in
mov
jno
es
lds
jge
mov
cmpl
imul
mov
in
shl
test
ret
cs
cltd
mov
sbbb
push
loope
jo
or
cli
jp
pop
pushf
out
je
sti
xor
pop
loop
fmull
jb
sbb
out
and
cmp
mov
cli
dec
mov
leave
iret
mov
mov
jnp
push
mov
sti
or
loopne
or
push
xchg
into
lock
rorl
fidivs
fwait
lock
in
pop
adc
inc
into
xchg
sub
pop
das
aam
fnstsw
sub
les
adc
push
sub
scas
fsts
dec
js
mov
movsl
ret
cs
sbb
loopne
fidivl
out
aaa
dec
and
sahf
stos
test
jecxz
mov
inc
cmp
data16
mov
cmpsb
sti
lret
lcall
push
cltd
mov
stos
out
xchg
into
ljmp
mov
cmpsl
daa
fcmovu
insb
mov
mov
mov
aam
inc
jae
xchg
cs
cmp
mov
cld
imul
sbb
popa
and
xor
mov
mov
mov
aaa
dec
add
dec
xor
mov
or
mov
cltd
cmc
fstp
push
inc
adc
adcb
mov
nop
ss
inc
or
in
push
xchg
test
add
mov
jp
mov
popa
rolb
test
inc
loope
mov
xor
mov
in
fnstsw
mov
sbb
call
mov
push
dec
jp
cmp
enter
inc
adc
jb
in
out
fs
aam
and
xor
inc
stos
pusha
gs
clc
fstpl
insl
push
mov
ret
les
inc
gs
xor
mov
mov
fsubs
test
in
inc
lods
add
stc
aad
leave
fimull
jecxz
sub
repnz
push
jle
sarb
lds
mov
mov
or
sbb
test
movsl
xlat
aam
xor
movsb
mov
rorb
push
std
loop
sbb
les
andl
dec
or
aam
shll
pop
sub
pop
xchg
cld
loopne
les
jle
iret
jne
lock
mov
and
aas
mov
or
neg
jae
or
mov
in
sub
les
aaa
inc
pop
add
insb
xlat
cmp
add
mov
adc
scas
add
outsb
xchg
jbe
xchg
push
mov
pop
ss
add
dec
jle
and
pop
adc
dec
cmc
lods
hlt
sub
jno
mov
test
xor
and
jae
fsub
cmp
jnp
scas
mov
adc
mov
mov
pop
inc
adc
aaa
and
pop
push
ret
and
xorl
addb
and
fisubs
or
fbld
sub
test
out
pop
stos
and
pop
cmp
xchg
push
sbb
dec
out
jne
xchg
sub
mov
fldenv
xchg
cmp
fincstp
movsl
jg
mov
push
jl
cmc
sub
or
lahf
jbe
out
or
push
movsb
mov
pop
in
insb
cmpsl
clc
lds
mov
stc
cmp
popa
repz
mov
adc
sahf
fildl
out
lcall
loopne
cltd
jecxz
lea
push
mov
shrl
jae
and
fistl
sub
jno
push
mov
push
sbb
add
movsl
inc
lret
cld
into
push
cs
xchg
jg
sub
jno
lahf
add
xor
mov
dec
insl
xchg
inc
xchg
mov
iret
ss
cmp
push
nop
mov
jl
mov
popa
jl
lret
mov
xchg
lea
push
adc
push
popf
sbb
jo
adc
out
pop
mov
xchg
loop
into
pushf
push
xor
test
ljmp
lea
test
lahf
sub
test
xor
lcall
xor
adc
pop
ret
lea
dec
pop
mov
insb
test
cmp
std
and
lcall
push
in
ret
jg
mov
xor
inc
ds
mov
cmpb
adc
jno
sti
push
cwtl
lds
push
outsb
inc
push
cmc
xchg
mov
aaa
or
pop
mov
andb
sub
cmp
test
add
jle
xor
repz
cmp
xchg
jge
fisubrs
xlat
and
push
stos
inc
jo
mov
and
lods
push
pop
mov
sbb
push
mov
pop
inc
test
push
jl
xchg
shlb
adc
inc
sbb
fldenv
xchg
mov
add
push
in
sub
popf
pop
adc
jb
aad
pop
movsl
jns
or
sub
loope
pop
ficomps
xor
jp
mov
shlb
rcr
shl
test
dec
push
push
insl
or
sarb
jecxz
sbb
aaa
leave
fldenv
imul
ds
jmp
fimull
add
and
push
cs
repnz
pop
das
pushf
sbb
mov
sub
xorl
mov
fs
xor
xor
adc
push
outsl
fucomip
mov
movsb
int3
push
cld
ljmp
daa
scas
inc
in
xchg
add
out
aas
test
push
out
jge
leave
dec
out
gs
into
push
stos
dec
and
andl
xor
ret
loop
les
mov
jecxz
pop
insb
aaa
test
xchg
push
lret
pop
arpl
inc
xor
dec
aad
not
pushf
pop
cmp
outsl
cli
loope
hlt
xchg
and
sbb
call
add
inc
jmp
test
cmp
sbb
or
fsubr
je
jmp
cmp
repnz
mov
fisubs
fists
fnstcw
mov
cli
sbb
pop
cmp
xchg
mov
jge
adc
push
jl
push
shrb
les
scas
xchg
sarl
movsb
mov
xor
jbe
adc
or
mov
mov
add
cltd
js
push
outsb
push
ja
mov
pop
push
push
mov
icebp
pop
inc
push
mov
xor
insb
and
xchg
and
jecxz
push
jecxz
pop
cmp
cmpsl
test
mov
les
and
jge
add
js
mov
sbb
ds
inc
mov
mov
cmp
ja
loopne
inc
sbb
ljmp
xchg
pop
jg
inc
cmp
pandn
cmp
std
sub
inc
fwait
add
xchg
mov
rclb
add
dec
mov
addr16
add
xor
xchg
outsb
lret
adcl
inc
jb
dec
loope
sbb
or
and
or
scas
inc
sub
ss
int
aad
inc
jae
mov
cs
pusha
or
jbe
icebp
pop
push
leave
fistl
xchg
sbb
mov
lea
dec
jecxz
push
cmp
inc
ret
mov
xor
cmpsb
dec
inc
icebp
stos
add
sub
xor
aas
mov
clc
push
jg
js
in
adc
dec
in
adc
mov
xor
dec
lret
in
out
dec
cmp
je
jbe
repnz
cltd
sub
fimuls
mov
test
sub
cmp
and
mov
bswap
pop
repnz
push
das
ror
pushf
popf
imul
jecxz
insl
add
lea
cmp
unpckhps
mulb
adc
ljmp
pop
cmp
stos
mov
das
movsl
bound
push
xchg
push
rclb
sbbl
out
fistl
sti
cmc
sub
or
je
aad
mov
or
pop
push
inc
jl
addb
mov
inc
into
stos
jne
aaa
push
notb
movsb
ds
xor
mov
xchg
dec
hlt
mov
movsl
mov
mov
popa
ds
sbb
mov
iret
add
cltd
das
pusha
or
jnp
inc
movsb
out
fs
add
sub
ss
adc
jae
jg
pop
mov
out
mov
lods
or
mov
xor
xchg
dec
mov
test
inc
test
inc
xchg
jmp
sbb
pop
mov
fwait
stos
xor
je
xchg
mov
pop
and
xor
inc
adc
scas
imul
aas
and
nop
xor
adcl
scas
lock
fdivrs
cmp
enter
test
jl
enter
push
in
pop
sub
int
sbb
rolb
scas
int3
out
xchg
jo
fstl
push
inc
add
ficomps
sahf
xchg
cli
and
and
ss
mov
mov
jp
and
cmp
call
jg
mov
int
popa
xchg
mov
in
xchg
pop
xchg
xor
stos
jns
xor
lds
jp
or
ljmp
loopne
ret
mov
or
int3
and
sub
xor
arpl
mov
fdivrl
enter
ret
inc
les
xor
fcomp
std
stos
jp
mov
fildll
ret
fdivrs
dec
loope
xchg
xchg
insb
mov
mov
ficoms
sub
push
jg
popa
ret
xor
mov
add
repnz
pop
cmp
xlat
call
lock
sub
push
ffreep
jnp
imul
cwtl
xor
test
addr16
push
imul
adcl
ds
xor
xchg
and
and
pop
sbb
xor
push
mov
or
int3
pop
xchg
push
lcall
mov
ror
cli
add
xor
jg
sahf
lea
insl
imul
orl
mov
or
sub
pop
xchg
push
and
sahf
test
push
mov
pop
rclb
jl
mov
std
mov
sbb
shrd
sti
fwait
in
push
and
mov
sub
add
dec
ss
test
adc
add
pushf
add
pop
mov
test
jle
push
shll
sbbl
aad
or
xor
hlt
sub
add
ficompl
xor
mov
mov
in
into
cmp
sar
ror
ret
adc
lock
jne
cmp
ret
sahf
mov
pop
add
fwait
scas
repz
push
jg
ja
sbb
outsl
loop
cltd
or
sahf
mov
push
jb
dec
js
push
mov
inc
lret
or
icebp
in
xchg
xchg
aas
push
mov
lods
and
or
add
imul
hlt
leave
dec
clc
imul
jg
sub
cltd
cli
popa
or
or
cmp
dec
ss
fisubs
or
pop
int
push
icebp
fcomps
sahf
adc
or
and
shlb
test
enter
dec
cwtl
cmp
lock
jae
sbb
fcomps
add
mov
sbb
push
gs
insb
aaa
sbb
les
imul
call
or
jae
roll
add
adc
movsl
scas
mov
jns
call
and
push
jns
sbb
inc
arpl
clc
mov
dec
sbb
xchg
int3
rcrb
mov
sbb
rolb
jmp
mov
adc
icebp
sysenter
xor
cvtps2pd
mov
push
mov
inc
in
inc
jno
inc
out
ss
xorl
call
pop
test
je
ss
fwait
mov
stos
cmp
lock
xchg
loop
loopne
mov
std
loopne
mov
fstpl
lret
push
in
and
es
xor
xor
outsb
jnp
mov
addb
jnp
mov
out
bswap
lcall
push
inc
pop
jl
roll
cltd
insl
stos
mov
cli
jbe
or
mov
jl
pop
jp
and
adc
add
outsl
jge
sbb
xor
push
pop
cwtl
stos
out
inc
cmpsl
aam
push
mov
cli
mov
lcall
ds
or
cmp
jmp
and
lahf
jle
icebp
pop
lds
test
outsb
inc
stc
imul
sbb
jbe
or
sub
xchg
clc
xor
ror
lcall
lahf
ja
cli
sub
in
cltd
sbb
jecxz
stos
jb
gs
les
and
mov
test
mov
jo
out
dec
out
or
pop
lock
mov
repnz
mov
leave
rep
in
xor
mov
flds
jnp
xor
ret
mov
loopne
cld
cs
push
dec
call
fisttpll
xchg
in
mov
aaa
jbe
adc
jp
stos
int
bound
cmp
push
mov
das
mov
stos
add
mov
packssdw
xchg
add
dec
fiadds
jp
add
cld
inc
push
push
out
push
jbe
dec
push
aaa
pop
fcomp
nop
inc
inc
mov
out
dec
jg
adc
mov
xchg
mov
roll
sbbb
dec
sti
mov
inc
jae
cmpsb
fcomps
or
jge
xchg
icebp
xchg
and
jns
rcll
movsb
pop
addr16
inc
clc
add
sub
dec
sbbb
xlat
push
pushf
fwait
sub
add
add
pop
in
mov
jecxz
in
rorb
sbbb
jno
into
enter
ja
stos
pushf
jb
lock
fsub
lcall
push
jne
repz
pop
sarl
mov
lcall
out
jge
in
or
decl
outsb
popa
sub
out
jecxz
out
data16
insw
xor
mov
lcall
push
adcl
shrb
mov
js
shll
int
notl
fsts
scas
out
xorl
out
or
pop
cmp
sbb
lds
cld
jp
sarb
dec
outsl
not
mov
push
adc
pop
inc
outsl
repz
rcrb
insl
popa
cmpsb
push
iret
lret
sub
jmp
mov
push
add
sahf
adc
jbe
fnsave
pop
mov
add
mov
mov
orb
and
jnp
or
or
aaa
pop
sub
lods
stos
xor
sbb
sar
xor
insb
enter
jp
sub
mov
rclb
or
addr16
out
lcall
cmp
subl
push
jg
sbb
ja
sbb
pop
fnstenv
mov
or
or
push
jg
ret
inc
or
sbb
xchg
cmc
dec
insl
call
xchg
adc
sar
and
test
push
pop
imul
cmc
cli
mov
popa
in
paddb
cmp
mov
cmp
rcr
divl
mov
xchg
addl
fmuls
sti
mov
add
cld
cli
mov
es
lret
nop
pushf
dec
adc
jmp
clc
add
xchg
in
ror
cli
mov
push
aad
cmp
xor
cmpsb
scas
add
jne
imul
ds
sub
sbb
mov
jne
scas
daa
ret
hlt
js
mov
lods
insl
xchg
or
lds
fwait
inc
sbb
xchg
subb
mov
icebp
fs
and
xor
or
mov
jb
fimull
inc
rcr
lods
mov
jne
add
aas
int
add
adc
fcomp
mov
in
je
xchg
jge
jo
and
xor
or
and
cmp
sti
cs
or
fnstsw
gs
cld
icebp
inc
divl
cwtl
cld
in
mov
cli
xchg
sbb
mov
flds
sub
or
add
mov
xchg
repnz
lock
sti
filds
add
subb
test
jo
rcr
sbb
gs
repnz
stc
mov
out
divl
sbb
pop
test
stos
adc
push
mov
cmp
cmc
sahf
inc
lock
dec
aas
or
inc
push
es
cmp
fisttps
lods
mov
decb
cmp
rcrb
xchg
jbe
mov
fnstsw
push
shll
or
ss
inc
cld
cmp
fstps
mov
test
shlb
test
orb
insb
mov
mov
arpl
and
sahf
insl
orl
fldcw
add
pop
sbbb
scas
fadds
aad
pop
inc
push
lret
cmp
pop
fisubl
pop
movl
sbb
addb
push
push
bnd
jbe
in
mul
pop
bound
and
andl
rol
sbbl
std
aam
xchg
repz
jnp
sub
in
add
inc
cmpsb
in
lds
pop
shrb
adc
cmc
jo
lret
setno
call
xchg
iret
dec
push
hlt
push
pop
mov
mov
int3
in
lods
lock
inc
cmpsb
or
out
orl
mov
pop
ja
pop
dec
cmp
iret
jl
sti
insl
mov
ds
ljmp
std
cmpl
sub
cmp
jp
lcall
inc
insl
or
push
shlb
xchg
inc
jle
jp
in
hlt
mov
xchg
addr16
fcmovu
jmp
cltd
adc
sbbl
lret
xor
adc
mov
xor
iret
pop
bound
out
in
mov
mov
inc
jg
sbb
xlat
pop
inc
out
mov
mov
rcr
push
mov
add
xchg
pop
lds
mov
out
xor
out
and
add
mov
adc
add
xor
lret
ss
das
push
test
xor
lods
xchg
shrb
jle
out
adc
inc
cmpsb
out
dec
and
ret
mov
cmp
lods
ja
and
test
xchg
sub
ret
out
jl
adc
sbb
push
loope
test
sarb
lret
icebp
stos
loopne
jns
sub
leave
fisubrl
sub
fstpl
push
push
imul
cmpl
stos
jmp
clc
cmpsb
mov
sar
add
stos
das
fs
dec
bound
push
fists
imul
push
addr16
push
inc
imul
sarb
dec
mov
xchg
bound
mov
roll
jg
or
jno
sbbb
lahf
setl
imul
pop
clc
pop
inc
xor
loop
inc
and
lds
insb
jno
insb
imul
jb
das
sti
xor
push
jmp
pop
hlt
jmp
pop
shl
xchg
stos
hlt
movsb
imul
adc
dec
mov
mov
jl
fsts
push
ss
fsubr
int3
aaa
es
shrb
cmp
xor
cmpsl
out
push
lret
rorb
repz
mov
outsb
fmull
fistpll
dec
sub
jl
adc
sbb
iret
jecxz
ja
lret
ret
cs
mov
jl
push
xchg
cmpsb
adc
orl
int3
mov
popa
movsl
mov
push
jnp
mov
dec
push
inc
pushf
test
daa
stc
push
sbb
and
cmc
mov
mov
push
or
adc
jge
inc
fiaddl
cld
mov
ficoms
pop
inc
leave
test
repnz
sbb
mov
or
or
xchg
sub
movsl
in
xchg
out
leave
push
push
and
rcrl
sub
mov
pop
stc
loopne
pop
ds
cmc
jns
mov
idivl
fs
lcall
add
sub
push
jmp
cmp
inc
push
rorl
add
inc
inc
mov
xchg
sbb
add
andb
bound
sarl
jg
mov
adc
in
popa
cld
in
sub
nop
mov
push
cmp
sti
int
pop
out
push
push
adc
inc
mov
movsl
mov
jns
cs
inc
aam
pop
mov
or
imul
lret
sbb
xchg
lcall
popf
cmp
in
scas
loopne
std
xchg
and
sbb
scas
mov
mov
loopne
push
dec
fadds
adc
jns
xor
ud1
pop
cmp
jmp
mov
scas
inc
sbb
pop
test
jle
jecxz
inc
mov
mov
test
loope
push
push
xorl
inc
jecxz
test
mov
das
mov
ret
call
test
and
sbb
dec
test
sahf
xor
icebp
ret
in
jecxz
pop
mov
xor
xchg
sub
ljmp
xchg
or
jo
or
xchg
aam
loop
adc
jp
int3
negl
in
mov
add
jl
subl
adc
mov
sti
scas
mov
insl
push
ss
mov
sbb
xabort
mov
push
push
aam
int
and
inc
arpl
push
ror
lahf
and
hlt
mov
jae
int
shll
adc
popf
pop
pusha
xor
dec
nop
inc
jmp
out
inc
add
stos
jle
and
shl
in
outsl
xor
movsb
push
add
mov
adc
and
loope
pop
push
fisubs
mov
mov
dec
jle
xor
adc
cmc
cltd
add
sub
push
push
negl
cmp
cs
dec
lea
or
js
xchg
sub
int3
jbe
cmp
ds
xchg
pushf
inc
cmp
dec
adc
repz
mov
imul
pop
inc
ret
sub
icebp
mov
add
inc
jge
nop
dec
adc
mov
mov
adc
data16
or
mov
es
sbb
in
push
xor
xchg
push
cli
in
popf
xor
aaa
mov
loop
xor
call
and
push
je
fdivrl
popf
cmp
scas
movsl
lds
ret
adc
jnp
mov
lock
jmp
dec
dec
shlb
xchg
lea
inc
js
inc
push
push
cmp
push
xlat
jno
cmp
in
ss
sbb
inc
cmp
push
decl
inc
gs
xchg
push
xchg
call
cmp
push
pop
xlat
iret
rolb
fists
lea
lret
aam
adc
out
mov
in
mov
sbb
das
sbb
and
daa
repnz
adc
adc
jl
leave
sub
movsl
sub
push
jmp
sub
adc
mov
sub
loopne,pn
lods
push
add
mov
es
cwtl
pushf
jns
xchg
cs
adc
or
and
dec
outsb
pop
mov
js
or
fcmove
jnp
arpl
lret
xchg
test
stc
mov
add
push
ret
mov
pushf
mov
pop
mov
out
pop
jp
jg
mov
jo
mov
js
mov
mov
sbb
mov
pop
cli
adc
xchg
ljmp
cmp
imul
inc
nop
xor
mov
cmp
lock
mov
push
mov
xchg
adc
and
subb
std
cmp
fistl
enter
mov
fcomps
mov
sbb
out
push
pop
add
outsl
lret
xor
int
push
xchg
neg
imul
add
and
lret
outsb
sbb
push
jae
push
lods
sbb
jbe
int
inc
push
jbe
arpl
sarl
jp
or
sahf
jge
dec
xchg
incb
xchg
clc
pop
mov
jmp
jae
push
mov
and
push
icebp
das
xor
aam
mov
aaa
sbb
rcrb
aam
jnp
stc
sub
repz
fstpl
inc
inc
pop
imul
jmp
adcl
xchg
inc
cmp
sbb
mov
jmp
jbe
add
push
xor
cs
fcomps
bound
pushl
mov
push
mov
lock
xchg
dec
test
sub
pop
std
push
int3
sub
adc
in
pop
test
sarb
xchg
mov
mov
jmp
loope
arpl
push
insb
xor
jae
sbb
mov
xor
pop
xchg
outsl
push
dec
ljmp
lahf
call
test
sbb
mov
repnz
and
je
ret
jns
insb
ret
loop
mov
stc
push
dec
sub
cwtl
jp
mov
mov
and
mov
dec
pop
fsub
pop
cmp
stos
or
bound
aas
push
or
sti
mov
push
inc
aam
or
aas
mov
mov
lahf
pushf
dec
outsb
mov
jecxz
hlt
sbb
xor
pop
xor
cmp
bound
popa
scas
std
xorl
sbb
cs
cwtl
inc
or
add
jle
leavew
mov
xor
mov
lcall
shlb
and
dec
imul
xlat
xchg
push
les
es
cltd
pushw
gs
rorl
mov
mov
out
push
nop
mov
ss
daa
mov
sub
bound
xchg
jb
int
pusha
and
push
pop
ret
push
adc
loop
scas
mov
pop
jae
mov
addb
pushf
jle
cmp
std
je
sbbl
lahf
out
pop
lock
clc
mov
orb
mov
add
fdivrl
aam
jnp
jb
adc
loopne
in
jno
cmp
mov
pop
call
shrl
inc
inc
sub
jg
jl
int3
cmpb
xor
hlt
mov
mov
js
pop
negl
mov
dec
sub
mov
adc
inc
xchg
pop
dec
jg
jae
fldcw
rorl
pop
aas
shll
in
icebp
mov
fstpl
shll
out
jle
push
or
push
add
aas
in
push
test
ja
pop
cmp
lods
neg
mov
in
or
add
mov
outsl
shlb
sbbb
lahf
dec
mov
pop
inc
mov
jle
negb
stos
pop
out
cmpsb
rcrl
lods
repz
sub
dec
dec
mov
mov
ss
jge
push
push
jne
xorl
push
jp
mov
outsl
mov
jp
mov
fs
inc
and
popf
ljmp
and
pop
push
adc
cltd
pop
pusha
sub
mov
sub
lahf
cld
mov
mov
mov
mov
sbb
jecxz
mov
cmp
push
js
and
adc
push
insb
into
pop
ss
repnz
and
push
pop
jmp
and
adc
addr16
push
in
outsb
adc
cmp
mov
fistpll
shll
mov
mov
test
in
mov
inc
imul
jg
cmc
add
aas
mov
xor
add
dec
jbe
inc
pop
mov
mov
arpl
ret
and
pop
push
dec
sahf
dec
sbb
adc
enter
popf
or
jg
mov
mov
dec
mov
clc
jle
inc
xchg
arpl
sbb
out
mov
test
cwtl
sbb
popa
out
mov
lods
dec
sub
lahf
push
xor
mov
xor
movsl
jnp
shrl
cmp
cmp
adc
mov
lock
mov
lods
jp
mov
shll
pop
mov
mov
cmp
ss
lock
loope
mov
pop
sub
xorb
loope
lcall
into
push
rclb
jmp
in
mov
lock
adc
add
jbe
jno
cli
ret
jae
aaa
lds
jecxz
push
adc
push
inc
sub
mov
mov
sub
mov
xor
adc
mov
cmc
lock
push
cli
or
sbb
sbb
jnp
daa
mov
mov
mov
fsubrl
mov
imul
sbb
or
ja
dec
pop
dec
mov
cmpsb
sub
cmp
loope
out
out
sbb
pop
xor
iret
loope
jb
mov
cld
cmp
lret
mov
ret
mov
addr16
pop
in
and
pop
sbb
cmpsl
xor
jl
loop
or
and
fwait
sbb
mov
jno
pusha
adc
sbb
mov
ret
dec
add
pop
pop
pop
sub
imul
lock
enter
push
or
dec
test
sbb
adc
cmp
gs
movsl
dec
fisttpl
out
mov
push
or
pop
dec
push
sub
roll
in
loop
popf
add
cmpsb
mov
sbb
scas
push
test
jno
xchg
xor
sbb
mov
test
mov
dec
push
dec
ss
mov
mov
inc
mov
xchg
lods
dec
rclb
and
sahf
inc
mov
jns
or
cmp
xchg
pushf
mov
pop
cmpsb
pop
mov
movsl
jg
pop
cld
insb
loopne
cmp
lock
dec
loopne
jle
fdivs
ret
add
pop
jecxz
cmpsb
repz
loop
mov
jg
mov
xlat
imull
repnz
sub
test
sbb
or
fcmovnbe
dec
push
lcall
xchg
aas
mov
push
add
jae
sarl
mov
push
pop
stos
add
xchg
in
dec
xorps
xor
push
pop
mov
xor
adc
add
in
adc
mov
mov
adc
jmp
adc
cmp
mov
xchg
dec
cmp
dec
pop
loope
rorl
push
and
lods
imulb
and
or
mov
outsb
scas
xchg
arpl
jmp
add
pop
mov
push
outsl
mov
pop
jns
inc
rclb
inc
sub
cmpsb
inc
jecxz
das
inc
or
push
pop
mov
insl
push
mov
out
lds
jno
mov
push
push
jle
out
cltd
jl
ljmp
add
push
stos
jle
cwtl
push
sbb
sub
popf
fwait
push
mov
in
fildll
mov
push
pop
outsl
shlb
in
repz
mov
std
lcall
xchg
rorl
push
inc
dec
out
unpckhps
popf
xlat
mov
int3
adc
clc
cmp
xor
loopne
adc
inc
cmpsl
cltd
xchg
inc
adc
pop
shll
adc
mov
xchg
cmp
dec
xor
mov
sbb
push
loope
test
subb
cwtl
mov
daa
sbb
loop
mov
or
dec
sbb
aaa
gs
mov
cmp
mov
mov
cmpsl
sbb
push
push
sub
add
mov
cltd
mov
mov
sbb
inc
sbb
movsw
xor
es
ljmp
je
mov
lret
push
stos
jle
mov
gs
mov
mov
popa
pop
arpl
push
mov
push
ds
outsl
pop
and
push
out
clc
and
pusha
int
adc
and
in
dec
leave
daa
out
pop
fs
jnp
cmovo
inc
push
mov
mov
scas
pop
adc
mov
jnp
enter
push
adc
mov
sbb
xlat
mov
dec
out
xchg
xchg
adc
push
mov
inc
inc
into
pop
pop
jns
jae
add
int
xlat
mov
pop
inc
addr16
aaa
adc
iret
leave
outsb
xchg
aaa
and
ds
icebp
xor
fs
push
and
fimuls
ja
lods
cmp
lahf
test
bound
add
ret
mov
pop
les
mov
sbb
dec
xor
ljmp
sbb
cmpsb
pop
sub
call
les
inc
adc
inc
sbb
sarl
xchg
stc
inc
repnz
pop
inc
add
in
jl
and
adc
ss
fsubrl
push
loopne
outsl
rcll
and
iret
cli
inc
jb
repnz
sub
adcl
negl
cmc
jecxz
mov
dec
cmp
pop
mov
mov
fidivrl
lock
hlt
jmp
loope
mov
inc
bound
mov
jb
shrl
idiv
push
test
out
or
ss
loopne
scas
leave
jbe
or
add
xchg
rolb
hlt
aam
lea
std
arpl
fistpl
pop
popf
inc
aad
mov
repz
into
mov
mov
push
and
in
push
mov
fnstsw
ds
ret
push
xor
aad
xor
xchg
mov
add
pop
scas
shlb
pop
sub
jb
lea
out
jmp
in
mov
jp
aaa
xchg
lock
pop
or
inc
jbe
adc
out
ret
data16
fsubrl
lcall
pop
pushf
inc
mov
or
inc
pop
daa
inc
lcall
push
dec
xor
xor
cld
imull
lahf
xchg
movsb
out
stos
call
cmc
push
mov
adc
filds
adc
mov
pop
loopne
mov
push
call
out
cmp
cli
xchg
es
pop
sub
cmpsb
test
mov
sbb
xor
cmp
sbb
jae
pop
push
mov
fldcw
dec
lods
ret
xlat
mov
mov
mov
test
push
icebp
adc
xlat
sbb
dec
xor
fcoms
addb
pop
and
or
cmp
mov
sbb
pop
cmc
push
dec
inc
mov
shrl
ffreep
cmpsb
enter
dec
pop
fnstcw
push
dec
ds
sahf
std
xchg
ljmp
in
movq
mov
repnz
sti
fmuls
sub
push
leave
or
lahf
idiv
pop
push
out
sub
or
movsl
orl
loope
xor
mov
cmpsb
inc
add
das
je
ljmp
mov
sub
aad
ret
int3
negb
cmp
rolb
imul
icebp
sub
mov
mov
lock
test
fwait
dec
pop
xchg
lods
test
sahf
aaa
cmp
add
out
mulb
adc
jp
sti
dec
adc
mov
mov
cmp
sbb
jp
sbb
mov
loop
cwtl
or
ds
xchg
pop
mov
sbb
je
or
nop
stos
dec
jb
mov
push
or
fdivl
ja
xchg
sub
pop
cs
xchg
aad
popf
enter
into
dec
jns
imul
rol
inc
sbb
dec
into
lods
mov
ds
mov
push
aaa
loop
iret
repnz
add
mov
rolb
cld
cmpsb
arpl
push
rorl
arpl
dec
add
xor
sub
mov
out
or
testl
mov
inc
dec
xor
aad
jns
insb
scas
and
aaa
call
movsl
fwait
push
sub
repnz
iret
icebp
mov
test
ja
push
inc
cmpl
in
in
mov
or
fs
pop
jmp
pop
adc
je
sub
aad
clc
adcb
inc
jbe
mov
iret
and
js
xchg
lea
fsubp
daa
jno
xchg
xor
pop
insl
push
mov
movsl
jl
push
popa
and
push
dec
lds
cwtl
mov
push
xchg
fnstcw
aam
pop
pop
cmp
jb
cmp
pushf
outsb
aas
fdivl
lds
jle
pop
neg
and
inc
ds
cmpsb
pop
lcall
push
inc
push
push
in
and
mov
cmp
cmp
rcr
enter
xchg
mov
clts
fiadds
fdiv
inc
cmp
xchg
xchg
ret
inc
mov
sbb
outsl
test
pop
xlat
fdivs
es
fidivrs
inc
mov
ljmp
pop
xchg
clc
das
adc
call
mov
std
mov
mov
inc
sets
xchg
sub
aam
arpl
mov
fwait
cmp
lcall
sti
pop
pop
int
fs
jae
je
jle
scas
es
push
leave
je
loopne
nop
fistpl
or
pop
test
jp
loop
out
adc
xchg
inc
xchg
leave
mov
add
and
inc
mov
int3
in
movsl
stos
push
call
out
push
jae
fmuls
int
fldl
sub
dec
fwait
sub
xchg
xor
pop
in
andb
das
cmp
repnz
xor
push
loope
popa
and
mov
jo
jl
rclb
or
js
jae
mov
lea
mov
xor
xor
movl
imul
js
ds
inc
push
in
xchg
popf
das
ljmp
or
clc
push
cmpsl
push
dec
and
inc
jle
lds
add
add
in
lret
shlb
jb
push
mov
nop
dec
mov
in
jmp
dec
pop
jb
inc
and
ds
lods
add
mov
mov
xchg
mov
pop
push
jl
inc
imul
pop
push
test
popf
and
xlat
push
push
loop
lcall
mov
push
fs
xorl
dec
into
cmpsl
ret
mov
mov
pop
bound
xchg
push
or
es
lock
xlat
jbe
popa
cmpsl
imul
aam
pop
shlb
or
xchg
shrb
xor
popf
or
push
adc
idivb
cli
cltd
mov
pop
inc
mov
cs
add
cli
ja
into
ret
jmp
push
sbb
cmc
pusha
pop
cmp
icebp
or
dec
dec
std
jnp
test
mov
jns
out
imul
lods
out
std
sbbb
ss
adc
jle
rclb
aaa
jp
jge
dec
pop
and
aaa
sbbb
jnp
sbb
push
sub
pop
fwait
stc
cmpsb
xor
sub
dec
in
mov
xor
sbb
test
das
push
add
iret
fs
imul
stos
negl
sub
mov
xor
dec
lcall
sub
sbb
movsb
ret
clc
cmp
sbb
fisubl
movsb
ds
add
shrb
sbb
xchg
fisubs
out
les
ret
movsl
sub
fstpt
stos
outsl
jae
shll
int
sbb
shll
dec
mov
push
jae
lock
dec
test
push
jno
loope
cmp
inc
add
test
push
jecxz
sub
mov
mov
or
mov
dec
dec
lcall
pop
imul
js
and
sbb
push
pop
out
out
inc
xchg
sbb
imul
jb
add
inc
adc
popf
insb
xor
or
pop
mov
orb
xor
mov
jb
into
add
dec
cmp
jmp
pop
pop
add
frstor
mov
jg
mov
jecxz
lret
inc
lcall
ficoml
jg
xor
lret
dec
fs
iret
push
mov
sub
ds
int
sub
cmp
fstpl
xor
sti
xchg
pop
sbb
aad
xor
out
cmp
int
push
or
ljmp
shrb
jl
andb
add
pop
ffreep
or
add
pop
jl
cwtl
xchg
add
fmuls
xlat
cmpsl
aam
pop
jg
ja
xchg
sbb
xchg
push
into
shrb
push
sub
inc
jl
sub
in
sub
jecxz
push
daa
ret
pop
or
xchg
mov
inc
cld
jmp
stc
std
xchg
ficompl
mov
adc
fcmovnbe
shl
hlt
popa
ljmp
inc
mov
cmp
dec
sbb
sbb
xlat
mov
outsb
fadds
fdivrs
loopne
je
sahf
mov
add
inc
movsl
loope
cli
push
loope
fwait
pop
ss
out
leave
mov
sub
mov
sahf
test
mov
mov
sbb
int
pop
sub
mov
adc
adc
mov
xlat
cmp
icebp
sti
add
jbe
mov
mov
sbb
mov
cld
popa
shr
cmp
int
test
cmp
addr16
mov
add
add
outsb
sbb
test
outsl
push
aas
gs
enter
rolb
xor
cmp
arpl
jbe
out
rorb
sti
out
fildl
jg
xlat
repz
daa
sar
mov
xor
int
adc
dec
jl
sahf
mov
xchg
pop
pop
mov
xor
jno
in
out
sbb
xlat
shl
cmp
fiaddl
arpl
push
push
dec
arpl
test
sub
ficoml
or
mov
sbb
pop
js
xor
rcl
fnstcw
outsl
faddp
repz
dec
mov
jmp
xor
das
or
jle
adc
addl
imul
orl
dec
xor
movsb
data16
xchg
rorl
adc
inc
xor
fcoml
inc
xchg
mov
push
movsl
ljmp
insl
mov
cmpb
gs
mov
testb
lods
and
addl
push
sub
mov
lret
sub
push
sbbb
sahf
jg
pusha
es
enter
push
imul
and
jl
push
adc
cmpsl
mov
push
push
lret
cmp
push
mov
mov
add
fists
dec
out
aad
out
insb
testl
xchg
pushf
push
lods
scas
xor
stc
jge
jl
insb
mov
inc
jl
test
pop
pop
pop
add
je
mov
sbb
xor
cmc
mov
jge
sbb
add
sub
add
xchg
jge
les
inc
adc
jg
jo
shll
icebp
adc
pushw
iret
data16
xchg
push
mov
and
je
outsb
subl
push
push
sbb
or
idivl
cmc
shlb
push
icebp
mov
mov
popa
cmp
xlat
xchg
rolb
aad
inc
js
xchg
mov
cs
into
nop
pop
leave
mov
lret
jl
xlat
aad
and
pop
aaa
ja
sbb
dec
je
mov
stc
repnz
iret
call
cmpl
stc
mov
test
ret
dec
out
xchg
jg
cmpsb
outsl
mov
jle
mov
push
mov
pop
aad
popf
pop
mov
sbb
pusha
pop
das
lret
popf
dec
sub
add
cmp
inc
daa
pop
or
jge
mov
jmp
push
js
adc
enter
xchg
add
stc
shrb
adc
dec
das
idivl
js
subl
jmp
xchg
dec
addr16
fnstenv
fsubrs
iret
push
aad
adc
andb
ficoms
lds
in
and
sub
fs
mov
call
cs
xchg
nop
pop
adc
es
pop
outsb
xor
mov
lods
leave
insl
pop
jne
cmc
inc
int
shlb
lds
insb
cmp
ds
ret
rorl
xor
cwtl
push
data16
xchg
pop
dec
add
jg
ss
cltd
cmp
dec
pop
add
inc
mov
jmp
push
repz
js
xchg
fdiv
in
mov
mov
inc
pop
mov
repz
mov
movsb
mov
cli
sbb
inc
xchg
ds
scas
cmp
fstpt
or
push
cld
cli
lods
aas
dec
pop
cmpsl
clc
les
cmpsb
mov
shlb
fwait
sub
iret
inc
pop
inc
sbb
jmp
in
sbb
xor
mov
mov
scas
pop
clc
je
cmp
aad
mov
jg
add
mov
mov
sbb
jg
arpl
fadds
test
hlt
inc
lock
jns
sub
nop
jnp
xor
jecxz
test
xchg
push
test
fdivl
jmp
pushf
lods
xchg
adc
aad
sarl
div
fnstenv
adc
inc
mov
sub
push
lods
lods
inc
adc
xor
lods
jp
data16
sub
daa
push
jns
xchg
decb
data16
inc
mov
test
mov
pushf
xlat
imul
xchg
pop
jo
cld
jo
sbb
test
repnz
je
push
aam
pop
mov
push
std
test
cmp
insb
ret
sub
insb
or
sub
dec
stc
mul
rcll
inc
fwait
sbb
xorb
inc
ret
sbb
test
mov
lret
or
cmp
mov
and
adc
hlt
push
add
mov
daa
stos
mov
adc
pop
jge
sbb
sub
sahf
pop
outsl
insb
test
mov
cmp
std
cmp
xchg
lahf
pop
or
xor
enter
pop
lcall
adc
inc
mov
add
stc
popa
pop
xlat
push
xlat
dec
mov
sbb
fs
inc
leave
jle
push
pop
imul
mov
mov
mov
mov
add
jne
gs
cltd
jb
scas
xchg
jbe
insl
adc
xor
mov
pusha
xor
sub
and
int3
pop
cmc
int3
daa
xor
ljmp
and
sbb
sub
cli
push
rcl
out
popf
jo
adc
bound
xchg
cmp
xlat
pop
das
inc
iret
adc
ret
dec
cltd
cwtl
fs
mov
daa
rol
repz
xor
orb
addr16
leave
fiaddl
xchg
shrb
sub
mov
cmpsl
std
dec
add
push
dec
mov
xchg
cmpsb
push
mov
div
pop
sbb
mov
mov
movsl
or
jecxz
or
mov
out
dec
adc
cmp
jns
cmp
jns
fisubrs
pop
cs
jl
xchg
mov
mov
into
jns
js
push
shll
fistpll
jp
pop
loope
sti
jo
mov
dec
lcall
movsb
pop
xchg
sbb
pop
aas
fadds
popa
stos
mov
int
pop
shll
inc
add
fs
pop
std
pop
daa
rcll
loopne
fsts
jmp
sub
jle
push
inc
std
sub
inc
xchg
and
adc
pop
xchg
jmp
pop
sub
dec
or
jns
adc
or
loopne
lcall
int
nop
xor
xchg
mov
lods
stos
movsb
or
jle
ficoml
out
or
jbe
lahf
fstpl
loopne
sub
mov
xlat
xor
sub
movsb
and
adc
xchg
push
pusha
shlb
adc
subb
and
push
sahf
mov
and
lods
shl
push
jl
xchg
add
rolb
inc
push
or
pop
mov
fisttpl
int
and
xor
fstpt
out
jne
sub
lahf
sbb
nop
push
sub
pop
int3
add
push
sahf
js
mov
mov
aam
repz
lahf
xchg
push
in
insb
outsl
mov
addr16
push
dec
scas
xchg
test
jmp
fcoml
mov
sbb
xchg
out
loope
inc
sbb
xchg
ja
pop
sub
sbb
sbb
xor
aaa
les
in
lcall
out
sti
out
sub
mov
sub
repnz
test
les
push
out
popf
push
push
test
idivb
and
aad
insb
rorl
sub
clts
int3
cwtl
inc
movsl
inc
jmp
mov
lea
fcmovnb
pop
xchg
or
ficoml
in
jo
pop
icebp
movsb
orl
dec
add
je
ret
les
xchg
sub
adc
add
dec
arpl
xlat
dec
dec
ffreep
nop
pop
xchg
sub
xchg
aam
adc
or
clc
andl
cli
pop
dec
inc
fsubrl
lods
dec
cmp
mov
add
mov
lods
cmpb
les
das
test
jae
or
mov
add
sahf
pop
mov
std
or
inc
loop
xor
push
cs
fstps
gs
add
add
adc
in
jl
push
push
and
jg
or
pop
add
fisubrs
movsb
mov
lea
push
pop
hlt
outsl
stos
xor
cltd
xor
ja
cmc
popa
enter
aad
xchg
pop
pop
rcrb
xchg
lods
jg
push
mov
pop
xchg
addl
and
mov
jmp
mov
das
lods
and
and
push
lcall
daa
xor
std
outsb
stos
push
mov
mov
fstl
dec
sub
add
xlat
jl
pop
fisttps
pop
mov
outsl
es
movsb
push
jle
hlt
pusha
dec
mov
or
fwait
or
movsl
pop
push
fwait
dec
cmp
scas
inc
cmpsl
dec
mov
pusha
and
rcl
or
test
std
xchg
lret
jns
addb
cmpsb
pop
or
dec
jmp
cmp
aaa
rcrb
dec
icebp
jo
clc
push
xor
mov
fiaddl
mov
jns
jnp
test
lods
cmpb
jmp
mov
fsubrs
negl
out
ss
mov
popf
pop
or
in
jmp
xchg
pop
xor
mov
adc
push
dec
sub
idiv
int3
cmp
pop
jmp
jbe
movb
popf
adc
jno
xor
outsl
fcmovnbe
loopne
push
gs
xchg
adc
jno
dec
push
loope
rclb
lods
push
pusha
xor
insb
push
cli
call
adc
ja
jp
jge,pn
lock
sbb
test
std
jmp
and
dec
pop
cld
ret
jmp
fwait
jmp
es
mov
fadds
pop
push
mov
mov
push
ror
gs
lea
fldl
push
push
jns,pt
push
jo
dec
outsb
xchg
xor
push
cmp
or
rcrb
mov
mov
xor
jnp
div
mov
iret
xchg
scas
xchg
les
ss
rolb
pushf
pusha
ljmp
jmp
jb
xor
inc
lods
inc
xchg
pop
xor
movsb
dec
xchg
add
push
popf
aad
push
out
pop
xor
push
and
scas
sub
insl
aad
in
cmp
mov
sub
loopne
jge
lods
sub
mov
mov
mov
int3
jns
imul
pop
jns
sub
int3
and
mov
inc
sub
fiadds
inc
test
add
inc
pop
mov
imulb
lds
jns
jmp
mov
loop
add
cs
mov
out
cmp
cwtl
nop
fdivrl
repnz
sbbb
mov
cmc
in
shl
xchg
sbb
sahf
add
inc
outsl
idivl
rolb
divl
add
xlat
arpl
fidivl
data16
movsb
ljmp
add
rclb
xor
sub
dec
jo
inc
mov
pop
arpl
jecxz
push
stos
pop
jbe
daa
pop
sub
pop
jnp
sbb
add
push
mov
adc
sub
das
mov
and
sbb
mov
mov
xor
out
xor
iret
pop
shl
cli
hlt
mov
lahf
pop
xor
cmp
leave
push
pusha
cmp
loopne
jg
push
add
cmp
mov
scas
lock
xchg
sbb
mov
sbb
mov
les
lcall
dec
test
clc
lret
sub
test
sbbb
les
or
fdivr
mov
or
sub
adc
nopl
imulb
push
mov
data16
shrb
xchg
cltd
sub
pop
dec
mov
in
ljmp
data16
pop
push
fisttps
push
mov
cmp
test
mov
ljmp
out
subl
adc
adc
push
aas
mov
clc
adc
pop
sbb
push
aaa
inc
or
icebp
mov
stc
js
in
pop
xchg
jge
push
cs
push
xchg
sub
adc
cmp
pop
cmp
xor
aaa
addr16
ljmp
inc
sbb
int3
sbb
mov
mov
dec
pop
repnz
jns
imul
and
mov
dec
pop
xchg
dec
lcall
movsb
sbb
pushf
ss
jae
popf
sub
into
push
lock
pop
add
inc
test
leave
into
movsb
scas
sub
fs
mov
icebp
mov
push
jecxz
out
sbb
xor
movsb
cmpsl
arpl
inc
or
sti
jl
xchg
and
dec
mov
jnp
stos
fwait
addr16
into
faddp
enter
mov
stos
add
push
push
push
imul
std
cmp
push
cltd
in
orl
push
push
insl
xchg
pop
clc
dec
mov
push
xor
lds
sub
fcoms
imul
or
sbb
push
popa
leave
mov
xor
je
sub
add
mov
add
icebp
cmp
cmc
xor
push
lcall
and
or
mov
in
test
mov
fcmovu
ds
xchg
add
xor
into
cwtl
xchg
pop
lods
inc
xchg
loope
inc
repnz
lea
stos
out
fmull
cltd
cltd
aad
mov
add
into
jbe
and
add
arpl
cmpsl
xchg
cwtl
sbb
sbb
das
in
sub
jg
js
mov
push
nop
pop
int
mov
cmpl
nopl
push
ret
sbb
aas
lods
fs
pop
mov
xchg
js
aad
cmc
sbb
mull
inc
scas
pop
loope
xchg
xor
aad
xor
jbe
rcr
sub
add
aas
add
sub
add
xchg
dec
jns
ds
data16
and
push
push
scas
lea
test
arpl
mov
shlb
xor
sub
adc
xchg
push
shlb
daa
addr16
mov
ret
into
mov
lret
mov
jae
stos
stc
cltd
ret
add
xchg
lods
add
andl
pop
icebp
fstpl
scas
cmpsl
scas
test
adc
sub
inc
xchg
mov
pop
insl
fucomip
aaa
lds
mov
pop
mov
js
movb
mov
xor
sti
sub
mov
cld
sbb
icebp
test
add
jg
mov
cmp
pslld
jp
aas
and
jae
mov
movsl
shrb
add
dec
mov
scas
xchg
or
rclb
aaa
arpl
pop
jmp
cmp
mov
scas
xchg
sub
stc
test
ret
add
cs
mov
cmp
aaa
cmp
aad
mov
in
sbb
ljmp
add
add
loopne
pop
adc
mov
ret
jl
rclb
loopne
js
rcr
push
sub
or
les
inc
add
mov
xchg
pop
mov
mov
movaps
mov
mov
test
ds
orl
inc
cli
mov
dec
lock
out
jmp
cmp
cmp
stos
vcmpps
stos
inc
and
movsl
xchg
ret
scas
dec
mov
mov
sbbl
cs
mov
fists
into
pop
fyl2x
sub
js
jae
sub
imul
and
pop
jbe
dec
leave
pop
sbb
push
add
subb
stos
insb
or
cld
icebp
mov
jp
lret
call
xchg
stos
pushl
sub
mov
dec
xor
bound
push
xchg
enter
rorl
mov
pmuludq
xor
cwtl
xchg
pop
cmpsb
aaa
adc
aaa
jb
mulb
and
mov
out
sub
push
jno
dec
bound
mov
in
pop
rolb
ds
cli
mov
leave
sbbb
inc
jbe
add
cwtl
jne
inc
inc
pop
lahf
jb,pn
cwtl
jo
dec
mov
out
or
or
hlt
jno
js
add
ljmp
in
fisubrl
test
iret
xchg
mov
movsb
data16
das
xor
pop
xor
dec
sti
adc
pop
dec
pop
fstl
test
test
in
daa
ljmp
ss
lea
xchg
push
js
mov
xor
es
enter
aad
adc
or
out
cmp
repnz
add
mov
sbb
aaa
or
push
jno
push
rolb
mov
jmp
sub
lock
movsb
js
push
pop
lds
lds
data16
imul
fcmovnu
push
mov
push
jg
test
nop
push
inc
ss
jmp
mov
inc
cmp
pushf
xor
dec
dec
mov
cmp
hlt
xlat
push
les
dec
inc
sbb
cmpsb
sbb
xor
push
xchg
dec
add
gs
jns
adc
cs
and
rclb
lret
loope
leave
push
fldt
imul
out
out
push
mov
push
movsb
hlt
sbb
mov
bound
cmp
pop
mov
repnz
inc
loopne
adc
add
inc
cmp
or
leave
add
imul
mov
mov
movsb
mov
cmp
and
mov
outsl
test
fcmovu
mov
push
repnz
sbb
out
lret
loop
push
in
sub
jp
push
jmp
jns
add
push
mov
jmp
imul
mov
pop
add
ret
sbb
orb
xchg
sbb
sbb
lret
and
inc
lds
pop
xchg
pop
gs
mov
js
out
xchg
dec
xchg
mov
fs
pop
pop
stos
stos
ret
loope
or
lcall
jo
popa
xchg
xchg
push
push
call
push
testl
aas
xchg
aas
mov
and
jnp
jp
loopne
out
lods
loope
lds
cmp
aam
leave
add
pusha
mov
push
inc
cmp
aas
idivl
popf
pop
sub
pop
mov
adc
sbb
cmp
pop
sub
xchg
cmp
push
mov
add
psrlq
jl
scas
push
iret
mov
std
and
xchg
cmp
test
mov
mov
add
fimull
loop
aaa
xchg
movsl
or
inc
leave
lds
mov
hlt
arpl
loop
mov
sbbw
push
mov
in
xor
out
lcall
xchg
out
mov
mov
or
insl
pop
addr16
shr
popfw
and
xchg
aaa
sub
cld
mov
std
push
out
loope
jne
sahf
aam
mov
movsl
shrb
bound
imul
insb
hlt
adc
scas
sub
mov
add
into
mov
pop
enter
inc
sbb
into
add
xchg
dec
mov
out
fdivrl
mov
hlt
nop
test
add
test
pop
jo
adc
jns
daa
mov
fs
call
adc
push
or
sbb
xchg
insb
xor
jbe
push
ret
cmp
aam
mov
loopne
leave
fadd
in
jp
rorl
mov
rcrb
test
movsb
pop
gs
js
pushf
pushl
xchg
popf
aas
jb
ret
fwait
jns
xor
addb
dec
xchg
daa
adc
pop
nop
mov
fs
mov
lods
cmpsb
out
arpl
xchg
or
loope
xchg
mov
out
or
xchg
pop
jl
jmp
push
rolb
sbb
push
mov
cmp
les
adc
les
mov
sbb
pop
out
mov
push
les
test
push
or
lea
pop
subl
or
data16
mov
gs
push
mov
stos
sahf
test
outsl
mov
rcll
mov
mov
rol
imul
xchg
or
fildl
push
jno
add
mov
pop
inc
cmpsl
cmpl
jle
ret
cltd
imul
ds
dec
stos
xor
sub
in
push
out
insl
in
fsubrl
dec
mov
and
call
or
adc
add
pusha
std
fwait
notb
inc
pop
push
inc
loope
mov
mov
negl
cmpsb
in
in
movsb
fstl
in
imul
mov
sub
test
insb
imul
sub
push
popf
repnz
sbb
sub
das
push
xchg
mov
das
jle
cmp
shll
imul
dec
inc
lahf
mov
pop
movsl
add
sahf
aad
shll
das
rcrb
push
gs
lcall
fldenv
mov
or
pusha
cmpsb
or
in
iret
xchg
jmp
pop
mov
mov
sub
arpl
adc
sub
push
jl
lea
xchg
fldenv
mov
pusha
scas
shll
cmp
lret
jnp
sbb
mov
pushf
dec
or
test
ss
fld
out
repnz
mov
jae
arpl
insl
leave
je
lahf
popa
ret
js
aam
pusha
jl
mov
add
sbb
notl
cmc
push
adc
aaa
mov
sub
mov
jmp
das
cmc
es
rol
cli
push
mov
mov
pop
cmp
add
mov
ret
subl
sahf
cmp
push
jne
arpl
sbb
xor
cwtl
inc
sbb
mov
andb
mov
test
mov
std
and
out
dec
and
mov
addr16
rorl
xor
jmp
lahf
inc
and
cmp
int3
stc
jecxz
imul
mov
or
pusha
int3
inc
lods
xor
mov
repz
push
mov
cmp
push
nop
lahf
cld
in
ja
out
jns
mov
frstor
inc
push
cli
jnp
repz
pop
out
mov
xchg
dec
fmuls
xchg
fidivs
rcrl
and
hlt
roll
xor
loope
push
jae
stos
push
lret
xchg
mov
dec
mov
movsl
jb
sbbl
sub
pop
mov
sbb
out
add
scas
inc
imul
test
cli
aas
cmpsb
pcmpgtb
leave
stos
dec
mov
add
jne
fildll
adc
push
loope
mov
mov
adc
add
pushl
icebp
inc
ffreep
rcrl
xchg
ss
inc
sub
rorb
insb
loopne
pop
gs
adc
push
lahf
iret
std
push
xchg
out
jo
out
jg
xor
xor
popa
jecxz
lcall
push
mov
xor
push
pop
pop
jns
add
aad
sub
sbb
mov
xor
mov
les
dec
ret
mov
adc
daa
pushf
mov
jp
sub
xchg
mov
and
inc
sub
cmpsb
data16
mov
mov
lret
push
js
pop
cmc
mov
ss
jl
jle
xchg
shrl
cmpsb
lods
cmp
jne
mov
cltd
sahf
inc
push
stc
ret
imull
mov
add
jne
stos
stos
repnz
or
mov
ret
jo
clc
pop
fstl
cmp
int
fs
add
pop
inc
mov
out
ja
stos
or
xchg
push
jae
rol
mov
jno
cli
jl
mov
ja
popa
xchg
adc
add
dec
dec
loop
mov
xchg
shl
repnz
scas
test
cli
add
int3
dec
rcrb
sbb
cmpsl
outsb
mov
xchg
add
and
test
mov
sub
out
dec
xor
es
popf
pop
lock
xchg
das
insl
mov
or
push
popf
mov
cld
dec
pop
mov
faddl
push
sarb
ficomps
mov
push
in
in
push
inc
inc
push
je
mov
cld
xchg
sub
cmp
pop
scas
dec
xchg
sub
out
outsl
cmp
rcl
addb
das
or
mov
icebp
dec
aad
cwtl
pop
add
mov
xchg
push
xchg
bswap
jecxz
movsl
ss
cltd
push
mov
cltd
imul
iret
xchg
sub
aaa
jb
inc
shrb
sbb
rorb
or
test
or
or
inc
aam
sbb
xlat
daa
mov
dec
xor
xlat
xchg
pusha
push
addr16
add
jmp
add
in
into
insl
add
xchg
jae
call
mov
jecxz,pn
push
data16
cli
adc
repz
push
movb
stc
and
dec
add
mov
into
popa
mov
mov
and
mov
nop
pop
cmp
pop
sbb
jl
insl
fsubrl
mov
adc
bnd
add
pop
jg
lods
adc
jb
inc
arpl
das
int3
xchg
dec
test
pushf
ret
mov
flds
int3
jl
inc
lods
and
add
mov
pop
loope
jg
xlat
outsb
push
rcr
mov
int
inc
dec
stos
sub
clc
lods
inc
int3
lods
jae
or
popf
mov
push
stos
add
dec
jnp
xor
dec
outsb
iret
fildll
out
jmp
sub
push
cmpsl
or
jb
stos
add
lods
ficoml
add
jo
arpl
adc
fs
aad
iret
pop
add
ret
cmpsb
stc
jg
fistpl
mov
add
sbb
push
adc
adc
daa
push
pop
mov
adc
pop
add
lock
xor
fistpl
pushf
add
adc
repnz
ret
and
and
cmp
fsts
jge
inc
xchg
mov
jecxz
mov
push
dec
stc
jne
xchg
fists
shrl
dec
insb
sub
lcallw
icebp
cmp
enter
ss
sbb
cmc
push
cmp
inc
shr
jg
adc
iret
adc
lea
pop
xchg
inc
lret
pop
jnp
push
dec
jle
insb
add
outsl
test
jne
std
enter
pop
lcall
xchg
mov
shll
fldl
and
push
mov
stc
cmp
push
das
mov
cld
fptan
adc
in
addr16
sbb
out
xor
test
dec
inc
inc
lea
fs
push
fimull
repz
mov
int3
in
xchg
jl
mov
pop
jmp
mov
mov
scas
jecxz
dec
stc
cmp
pop
add
push
movsl
rolb
xor
gs
push
and
movsb
push
pushf
push
cmp
ss
es
add
xor
pop
loop
subb
aaa
enter
roll
iret
adc
arpl
xor
mov
lea
sar
sub
mov
dec
xchg
mov
sbb
or
sub
ret
jne
pop
call
ljmp
lahf
push
mov
sbb
movl
rcr
jp
mov
fadds
stc
xchg
push
or
nop
popf
dec
jns
and
dec
gs
xchg
add
sub
mov
repnz
push
lock
lock
mov
hlt
dec
cmp
test
sub
das
pop
sub
pusha
fadd
bound
jp
repnz
pop
xchg
or
outsb
in
push
push
and
inc
in
jns
push
cli
stc
mov
sub
mov
mov
xchg
xchg
inc
negl
mov
mov
adc
clc
into
jle
shl
jmp
ficompl
fs
insl
lret
push
cmp
sbb
ja
pushf
jmp
push
jno
pop
faddp
pop
ja
nop
mov
mov
mov
and
mov
xor
sti
mov
push
sahf
mov
ljmp
outsl
mov
mov
clc
fwait
cltd
sub
sbb
out
cmc
andb
mov
jge
scas
fidivs
mov
dec
outsl
cmp
push
mov
adc
or
mov
es
add
mov
fldt
dec
ss
cltd
fwait
rep
mov
sub
cmp
mov
xchg
cmp
test
xchg
fnstenv
pop
adc
pop
pushf
movb
lods
rclb
jp
xchg
adc
fwait
shr
jg
mov
leave
popa
mov
das
jnp
sbb
lahf
clc
ret
or
clc
cld
and
dec
cld
ror
cmc
test
fisttps
scas
je
inc
std
dec
adc
sti
add
test
xchg
call
std
dec
or
xchg
and
fcoms
fwait
inc
jle
and
and
in
push
icebp
xor
inc
inc
adcl
enter
js
data16
jle
or
aaa
shrl
add
mov
ljmp
sbb
inc
adc
stc
fs
and
fdivrl
ss
sbb
in
ret
rcl
or
pop
js
jno
push
imul
push
jb
loopne
sub
lahf
dec
outsl
pop
xchg
jge
mov
movsb
cmp
daa
add
mov
mov
scas
insl
test
mov
mov
xchg
xchg
pop
sti
push
or
lea
insl
pop
fldenv
sub
add
pusha
or
dec
adc
pushf
mov
int3
cmp
and
jns
ret
ret
jecxz
mov
ss
vshufpd
jnp
xchg
xor
sbb
gs
jmp
testb
cltd
add
mov
or
sahf
aam
cmp
xchg
arpl
into
mov
pop
outsb
push
cwtl
jmp
stc
rcll
sub
dec
jmp
es
or
or
and
xor
push
or
inc
and
push
cmp
test
in
sti
stos
pop
cmp
and
dec
jnp
lods
popf
pop
stc
ret
int
shrl
ret
inc
sub
fwait
gs
dec
pop
bound
inc
push
aad
push
ja
ret
cmpsb
dec
mov
insb
pop
icebp
jo
jb
sbb
shll
push
xor
jle
subl
out
adc
jbe
sti
lods
mov
inc
sub
dec
arpl
aaa
mov
or
repnz
je
mov
and
insl
out
nop
push
inc
into
mov
pusha
pop
push
pop
adc
out
imul
sbb
test
loop
pop
std
repnz
out
in
sahf
inc
mov
loop
mov
sub
stc
add
insl
push
nop
movsb
push
xlat
mov
mov
pop
hlt
test
icebp
pushf
and
bound
jne
add
xor
sub
mov
adc
outsb
arpl
xor
cltd
lcall
shrl
lea
fcomip
incl
fwait
push
sub
mov
cmp
add
dec
insb
push
std
fistps
clc
push
mov
das
or
jnp
sub
xlat
adc
mov
fistpll
lret
xlat
push
add
mov
and
cmp
and
push
in
lret
push
or
mov
xchg
lcall
cmp
fidivrs
add
cli
bound
fldt
mov
repz
xlat
inc
or
lods
mov
mov
jecxz
mov
movsl
pop
lods
push
or
mov
lea
jmp
and
pop
inc
fs
popa
cld
push
jge
jle
into
enter
cmp
faddl
aaa
iret
push
mov
add
push
mov
jge
icebp
movsl
daa
mov
js
sub
and
xor
dec
sbb
flds
lahf
push
mov
cmpsb
pop
mov
jae
scas
xchg
insb
mov
rolb
test
pop
loope
scas
pusha
or
hlt
cmpsb
sbb
iret
test
push
out
sbb
sarb
or
pushf
xchg
insl
cmp
arpl
jl
out
rcrl
push
push
jae
cmpsb
std
cmp
rolb
inc
adc
sbb
pop
fstl
push
scas
pop
cmpsl
scas
enter
add
stos
push
xchg
lret
push
imul
jo
mov
xor
dec
fisubrs
cmp
mov
sbb
and
xchg
and
push
lret
out
lret
jecxz
clc
inc
xlat
divl
inc
loop
insb
mov
add
mov
xor
and
cmp
mov
xchg
hlt
leave
inc
movsb
jnp
int
rcll
cmpsb
inc
bound
scas
cmp
dec
dec
js
pop
popa
pop
clc
fidivl
add
fnstcw
jge
inc
dec
xchg
or
rcrl
int
outsb
push
or
inc
pop
imul
jae
mov
sub
imul
pop
psrad
decl
push
stos
cs
or
clc
inc
jne
jae
aaa
jo
std
xor
lock
xor
and
outsl
js
jno
scas
std
adc
ja
mov
outsl
mov
cwtl
dec
cs
xchg
aaa
jge
or
xor
ficoml
sub
in
dec
sub
imulb
xchg
rep
inc
fistps
xchg
or
xor
dec
je
int3
mov
lret
iret
sub
cmc
mov
pop
jns
sti
mov
and
pop
mov
cmp
iret
jns
lods
adc
push
or
xchg
rcrb
cmp
push
clc
push
fdivl
sti
jno
or
js
pop
imul
pusha
xchg
lret
jecxz
addr16
fwait
or
fwait
mov
mov
test
cmp
subl
sbb
mov
aam
add
fdivrl
lods
push
push
popa
sbb
in
flds
jae
in
sbb
lahf
lds
pop
adc
shlb
out
add
insl
push
je
jns
and
sbb
jp
jg
mov
lea
cltd
and
pushf
inc
xor
mov
mov
sbb
pop
outsb
xchg
mov
jecxz
xor
and
mov
sub
cmp
fwait
nop
or
xchg
or
fs
outsb
aas
outsb
xchg
mov
pop
in
es
aas
cmp
or
push
push
cvtps2pi
pushf
ja
jl
lock
mov
ret
inc
arpl
ret
jns
jmp
in
gs
aad
sbb
push
pop
dec
mov
adc
jae
int
xlat
pop
push
loop
stos
stc
inc
jg
imul
sub
mov
fwait
clc
dec
pop
pop
or
mov
or
pop
adc
push
enter
out
dec
mov
jecxz
cmp
movsb
outsl
inc
xlat
lods
lret
test
mov
bound
fs
ret
inc
incl
aas
mov
movsl
int
xchg
dec
in
and
daa
push
jnp
xlat
inc
dec
jp
jae
sub
nop
pop
imul
dec
aam
or
cs
ss
loop
lahf
push
inc
push
pop
xor
idiv
sbb
mov
loopne
xor
fwait
cmp
jns
or
das
add
cwtl
xor
mov
test
in
std
push
hlt
cmp
repnz
arpl
stos
push
add
mov
insl
add
xor
shlb
in
pushf
jo
fisubrs
xor
test
movsl
dec
jmp
cmpb
mov
insl
pop
push
stos
fnstcw
stc
sub
push
std
jp
adc
push
in
dec
iret
and
lods
dec
cmp
loopne
mov
cmpsb
fcomi
enter
shl
jle
jae
mov
lods
int3
or
int
imul
sub
mov
dec
pop
pop
out
icebp
or
fs
or
daa
mov
imul
addr16
jae
mov
out
cmp
mov
or
sbb
mov
dec
insb
out
add
xlat
and
lcall
push
fwait
imul
cmpsl
xor
adc
xchg
pop
lret
sbb
xor
mov
mov
mov
inc
sub
loope
aas
stos
cmp
pop
lret
mov
rcrl
mov
adc
idivb
call
loopne
jg
cmp
and
out
pop
xor
shlb
add
loop
sub
in
mov
pop
xchg
lret
mov
popf
rcll
cmp
mov
cmp
lock
xchg
xor
sub
pop
push
mov
push
or
mov
dec
mov
xchg
dec
and
imul
ss
rcr
pop
movsl
mov
pop
sarl
dec
add
outsl
jmp
cmpsb
and
lods
insb
cmp
ljmp
inc
pop
pop
dec
inc
popf
push
pop
jge
call
add
int3
xchg
cmpb
arpl
sub
adc
out
sbb
add
jb
test
fstps
inc
pop
sbb
mov
dec
shrl
or
push
add
ss
pop
fwait
shlb
jmp
cmp
pop
cmp
fwait
outsb
idivb
aad
fs
push
xchg
add
iret
insl
inc
in
clc
jns
dec
psrad
xor
dec
mov
fnstenv
add
adc
adc
lods
fldt
or
xlat
mov
jle
ret
hlt
adc
sub
push
mov
jl
and
adc
ja
mov
loop
or
jecxz
test
mov
sbb
jo
inc
inc
xchg
rcr
add
clc
cltd
inc
repnz
inc
jp
pusha
sbb
fsubrs
pop
call
fwait
cmp
pop
mov
sarb
dec
punpckldq
cld
push
mov
iret
mov
jno
mov
fidivrs
icebp
cmp
pop
stos
inc
mov
xor
mov
and
jnp
mov
cmpsb
scas
lock
add
stos
jecxz
adc
mov
lods
insb
je
imul
dec
icebp
out
inc
push
push
or
mov
mov
cwtl
rcrl
fisubs
bound
push
es
mov
lret
enter
inc
xchg
lret
adc
xor
xchg
jae
shrb
mov
ret
out
add
lret
out
xchg
fcoms
lret
add
push
mov
leave
sarb
and
mull
pop
je
bound
mov
add
rorl
jmp
lods
shl
push
add
fcmovb
cmp
cltd
push
mov
mov
repnz
push
imulb
test
movsl
mov
lahf
xor
cmpb
jmp
cwtl
call
mov
pop
sbb
in
cmc
mov
cmp
roll
test
jo
sub
push
xchg
popf
and
xchg
sbb
sti
stc
mov
pop
xchg
das
mov
jns
out
adcl
sbb
add
repnz
mov
fmuls
mov
aam
ljmp
mov
test
dec
out
dec
and
scas
lret
dec
scas
xchg
pop
popf
pop
xor
cmp
test
mov
xorl
test
stos
push
add
outsl
adc
aaa
push
iret
movsl
push
jns
mov
aas
mov
adc
inc
mov
mov
jmp
add
xchg
nop
mov
aad
scas
inc
jecxz
or
or
mov
jecxz
push
mov
dec
mov
lock
inc
or
dec
loopne
mov
mov
sbb
mov
inc
lcall
and
lock
mov
aas
jnp
inc
imul
inc
dec
and
sub
sub
inc
xor
loope
mov
mov
or
mov
xchg
leave
sub
mov
ss
mov
mov
push
les
xor
or
aam
fwait
xor
scas
inc
js
ja
xchg
and
stos
pop
shll
and
out
sarb
jbe
sub
mov
mov
pop
dec
push
cltd
add
dec
loope
lret
icebp
mov
and
xchg
mov
js
inc
lret
popa
jb
xor
mov
xor
std
mov
dec
dec
push
inc
xor
pop
and
adc
gs
imul
mov
dec
pop
add
add
sub
out
mov
cs
jmp
sub
movsb
jno
mov
cs
and
xor
jne
mov
inc
xchg
dec
idiv
mov
jecxz
negb
add
mov
push
add
lea
pop
jo
or
pop
push
cs
test
popf
int3
or
nop
in
bound
cwtl
mov
outsb
popa
cs
dec
dec
outsb
fcoml
fisttps
lret
stos
pop
les
mov
cmc
fnsave
ja
xor
pop
insb
push
jnp
in
mov
xchg
out
pop
jp
cmp
sbb
jge
out
xor
aad
inc
inc
xor
add
int
aad
push
sbb
and
sbb
in
enter
aad
cmpsb
xchg
cmp
ss
data16
in
sbb
fwait
xor
and
xor
cmp
das
sub
xchg
mov
pop
orb
push
mov
or
iret
out
rcrl
xor
jle
aas
leave
test
icebp
jg
cmpsl
cwtl
xor
dec
lret
cmovne
fldcw
xor
and
arpl
jo
addr16
xchg
mov
sub
xorb
ret
daa
movsb
gs
add
cmpsb
xchg
push
out
jl
and
or
sbb
mov
pop
mov
mov
add
test
repz
sti
idivb
rclb
mov
fchs
lds
ja
leave
mov
push
gs
ret
sub
sub
sbb
add
jp
rcll
gs
cwtl
adc
adc
pop
lret
sarb
xor
leave
movsl
cmc
pop
lret
jp
fisttps
or
jmp
mov
add
lcall
aad
ds
fsubrl
cld
inc
and
mov
cmp
xchg
repnz
and
xchg
inc
cld
jle
aad
mov
pop
and
fbstp
pushw
xor
fs
test
fcmovbe
or
aad
repz
aad
jge
or
mov
test
inc
or
and
xchg
inc
arpl
xchg
jmp
jl
data16
enter
jmp
ja
cmp
icebp
xchg
je
pop
sub
les
sbb
push
or
fdivp
xchg
push
int3
push
mov
dec
cmp
iret
test
xrelease
ret
lea
iret
js
data16
sub
xchg
loope
mov
dec
sub
jmp
mov
adc
push
ja
pop
add
sub
popa
shl
and
pop
xchg
adc
pop
mov
xor
mov
adc
mov
stc
xor
sub
adc
push
mov
call
lock
adc
lds
or
sbb
lret
pop
fnstenv
dec
in
in
inc
sahf
xor
sub
daa
je
jmp
jge
adc
jp
addr16
jnp
vandnps
iret
mov
loop
sub
jg
xlat
jg
mov
and
dec
xchg
push
daa
in
or
and
inc
adc
pop
adc
mov
dec
lock
dec
dec
clc
xlat
mov
xlat
roll
rcll
jb
xchg
std
test
or
test
loope
sub
add
sahf
outsb
gs
mov
insb
xchg
xor
hlt
xchg
stos
push
push
xchg
inc
int
jne
push
out
mov
cmp
sub
inc
inc
test
js
test
stos
je
adc
adc
xchg
nop
loopne
out
jge
inc
fnsave
rcl
fadd
pop
sbb
insb
jno
sahf
push
sub
jecxz
lcall
sbb
lods
cmc
jbe
push
jmpw
cmp
cmp
mov
test
inc
sbb
shll
testb
pushf
sbb
inc
xor
dec
and
popl
mov
ljmp
lea
popa
jmp
fildll
cltd
and
adcl
rcl
and
popf
xor
pop
jge
xor
xchg
xor
ljmp
cli
movsl
push
je,pt
pop
lock
xlat
ljmp
clc
dec
stc
mov
cwtl
int
frstor
sbb
inc
scas
pop
movsb
mov
aas
ficoms
jge
sbb
repz
int3
sti
mov
jae
jmp
mov
out
cmc
jnp
mov
test
sbb
and
xor
pushf
ljmp
jg
jl
jbe
sub
xor
pushf
pushf
fsts
rcll
in
arpl
out
lcall
pop
mov
aam
cmp
sub
xchg
xor
cmp
std
xchg
cmp
jg
mov
mov
lods
call
sbb
fisttps
ficoml
out
in
call
adc
dec
shl
jae
je
cmc
cmp
sbb
mov
add
fsts
dec
fcoml
fisubs
pusha
stc
jl
dec
sub
mov
out
leave
jbe
and
jb
jle
nop
stos
sahf
cwtl
pop
xchg
xchg
and
mov
orb
lahf
and
fdivr
clc
movsl
inc
push
hlt
add
or
inc
loope
imul
cltd
ljmp
or
daa
adc
cld
imul
es
adc
ret
xor
popf
clc
pushf
stc
cmpl
xchg
aas
fwait
rcll
rcll
and
mov
pop
push
cmp
les
lea
addl
or
pop
xchg
test
jnp
popf
sub
mov
push
xor
lock
hlt
add
data16
push
cli
jmp
pop
aas
and
in
leave
jno
ss
scas
adc
mov
das
cli
clc
inc
add
cwtl
lret
sbb
mov
cld
sub
or
cmp
pop
je
dec
pop
lock
sub
or
xchg
repz
stos
outsb
adcb
push
in
shlb
cmp
push
ds
pusha
jl
dec
pushw
mov
fs
out
dec
insb
repz
cwtl
dec
out
fs
mov
xor
cmp
stos
testl
jp
scas
cmp
lds
or
jg
lods
sub
les
and
xlat
inc
xchg
popa
out
mov
ss
inc
cmp
xor
mov
sub
pop
xlat
stos
or
xchg
lods
pop
cmp
sbb
cmp
out
push
inc
xchg
or
sub
dec
loope
adc
stc
and
lock
dec
shll
pop
in
popa
xchg
insb
stos
popa
int3
andl
xchg
nop
lock
jbe
out
add
xchg
pop
lret
pop
mov
add
out
xchg
adc
xchg
test
lea
fcmovbe
pop
test
insl
pop
xor
push
dec
lods
pop
sti
xchg
mov
push
lret
arpl
adc
pop
aad
and
jae
sub
adc
xlat
pushf
mov
pop
jae
cli
push
mov
jae,pt
push
dec
push
add
into
outsb
or
push
jg
xor
lods
jecxz
mov
pushf
mov
and
push
jmp
popa
enter
mov
jle
mov
test
sub
cs
adc
inc
mov
pop
repnz
jbe
inc
mov
and
int
stos
add
in
sbb
mov
jp
cmc
out
mov
inc
test
or
movl
and
inc
xor
dec
popa
mov
jmp
pop
or
movswl
mov
stos
dec
xchg
push
push
ret
push
test
mov
and
outsl
bswap
jae
push
sahf
pusha
movsb
je
sbb
adc
mov
jnp
cmpsb
dec
lods
and
xchg
mov
add
xchg
pop
mov
lods
jo
pop
dec
sbbb
in
sbb
outsl
mov
inc
sub
lea
adc
cmp
push
sahf
sahf
or
cltd
mov
cld
sub
cmpsl
inc
cmp
sub
fs
in
add
ret
jne
pop
jmp
popf
push
and
push
pop
or
sbb
es
sbb
lcall
mov
clc
ja
shlb
cmpsb
xchg
mov
and
jnp
dec
or
gs
test
push
cmp
pop
lea
iret
stos
pop
jge
mov
loope
fldt
test
mov
cmp
mov
pop
inc
or
call
push
jl
cs
inc
into
push
cltd
mov
pop
pop
mov
push
lahf
pushf
aam
sbb
lods
push
adc
xchg
loopne
jmp
push
sahf
sbb
movsb
and
movsl
xor
sub
cmp
pop
cltd
imul
mov
shrb
stos
xchg
loope
test
int
lret
stos
xchg
test
dec
add
dec
int
cmp
xor
sub
adc
mov
in
xchg
jl
je
scas
xchg
push
sbb
pop
jno
repnz
test
add
or
cmpsb
dec
inc
lods
adc
fbstp
icebp
lods
cmpsb
dec
mov
mov
es
dec
cs
xchg
dec
or
rorb
lret
sbb
sub
scas
enter
push
jg
jns
pop
xlat
push
mov
mov
subl
aas
jg
std
mov
lods
mov
popf
ss
and
sub
movsb
call
sbb
ds
les
pushf
sbb
pusha
push
sub
sub
inc
cld
push
jmp
rorl
aaa
aaa
shrl
int3
popa
sarl
add
mov
movsb
xchg
jae
sub
pop
idiv
inc
inc
int
shl
icebp
insl
fwait
add
jo
jge
test
pop
push
jl
jl
fcmovnu
adc
inc
pusha
lcall
es
and
movsb
sbbl
mov
or
ljmp
popa
pop
mov
sub
adc
jmp
hlt
add
imul
jge
inc
popf
popa
aas
push
pusha
out
shrb
mov
or
sahf
cmp
scas
mov
fwait
aam
inc
aaa
call
adc
xor
inc
jae
leave
push
pop
inc
cmp
or
fs
scas
js
pushf
scas
test
mov
mov
dec
push
push
mov
mov
insb
dec
sahf
mov
jae
xchg
pushf
pop
pop
mov
push
add
call
arpl
stos
pop
mov
jns
push
adc
push
sar
push
push
jns
cmp
push
adc
loop
mov
or
divl
add
mov
negb
stc
fimuls
jb
jg
jl
pop
or
outsl
xchg
stos
jns
inc
andl
outsb
mov
cs
push
add
sub
jno
adc
sahf
out
in
fldenv
fdivrl
les
mov
inc
jecxz
push
jmp
bswap
jae
pop
mov
cmp
fistps
xor
cmp
scas
adc
jle
ret
cmp
and
scas
push
dec
sbb
bnd
mov
mov
cmp
dec
push
lahf
sahf
push
rcrb
adc
aad
shll
mov
jno
seta
pop
je
scas
ret
push
aad
or
push
sbb
mov
inc
fistl
stc
mov
cmp
push
rorl
mov
pop
insl
jns
mov
clc
nop
pop
inc
pop
sub
mov
popf
xlat
aad
pop
xchg
sbb
fsubrl
clc
add
les
jg
mov
or
cmp
or
xchg
cmp
clc
dec
out
iret
out
stc
sahf
dec
mov
or
cmp
jle
dec
mov
mov
shll
rcl
inc
in
sub
xorb
pop
aam
lahf
lea
lahf
jne
stc
rorb
fstpt
cmpsb
add
cmp
jnp
mov
fmull
insl
cs
cld
outsb
jmp
dec
cmp
les
cmc
fisubl
fisttpl
adc
std
std
ds
adc
outsb
jle,pt
stos
test
jno
jecxz
jnp
inc
das
sbb
std
aad
into
mov
mov
rolb
int
adc
sbb
jle
pop
jae
jle
mov
xorb
lcall
pop
adc
cmpsb
enter
loopne
cmp
out
add
aad
and
sbb
lods
popa
lahf
loop
fsubrs
cmp
mov
sti
sub
inc
gs
adc
shlb
inc
lods
or
inc
lret
int3
pop
sub
jne
dec
mov
mov
push
out
fidivrl
sbb
sbb
movsb
jl
hlt
insb
pop
sub
shrl
insb
fsubs
fisttps
stos
test
imul
mov
sub
fcmovb
add
clc
ljmp
mov
out
cmp
jae
and
and
inc
fistps
scas
jge
or
sbb
rclb
mov
or
fsts
sbb
fs
adc
repnz
outsl
dec
std
jns
lcall
cwtl
pop
iret
inc
mov
ja
pushf
pusha
jne
ja
lret
xchg
lcall
orl
xchg
mov
xor
and
sbb
ret
and
and
test
lods
mov
cvtpi2ps
xchg
cmp
cld
aad
call
rcr
popa
cmc
push
fsubr
cwtd
scas
sbb
nop
dec
mov
stos
mov
dec
inc
sbb
sbb
jle
sti
mov
adc
fldt
push
cmp
shl
add
mov
mov
nop
js
or
aaa
push
out
out
push
mov
cmc
inc
adc
std
pop
out
xor
outsl
imul
jmp
out
lds
jle
dec
lods
xor
in
mov
jae
jns
movsb
data16
mov
pop
sbb
inc
into
push
pop
pop
shlb
mov
rol
adc
push
mov
and
adcb
cld
cmp
mov
call
out
dec
cmpsb
out
in
shrb
scas
and
adc
sarb
sub
pushf
sub
mov
jl
in
stc
sarl
push
imul
jl
icebp
mov
adc
inc
std
mov
jbe
lahf
outsl
xchg
ss
jle
imul
xor
fcoml
sub
out
or
pop
inc
xor
pushf
stos
jo
pop
add
outsb
pop
out
xor
imul
lret
mov
sub
loop
shll
or
and
jae
rcrb
xchg
pop
insb
and
ja
int
add
dec
sub
addr16
adc
das
fwait
mov
mov
lahf
mov
pushf
xchg
clc
hlt
cmc
mov
mov
ja
mov
adc
addr16
mov
jne
jl
inc
cmp
icebp
mov
cmp
out
pop
sub
dec
sahf
andl
ljmp
leave
add
mov
mov
push
mov
sti
pop
les
les
mov
test
mov
clc
or
imull
jp
dec
dec
in
repz
dec
fucomip
mov
daa
inc
fnstenv
jge
fwait
rclb
mov
jae
mov
ficomps
cltd
add
or
mov
lock
lcall
or
repz
movb
pop
mov
mov
cwtl
sbb
popf
pop
pop
ljmp
shrl
pinsrw
cld
pop
push
fsubrl
dec
test
jl
mov
aam
sub
push
mov
add
hlt
fwait
jb
popf
inc
lret
xchg
andl
pop
outsl
xor
andb
mov
lret
inc
add
notl
jbe
cli
out
call
sub
cltd
cmp
out
jl
addr16
mov
js
js
sub
dec
ss
push
jp
and
jb
adc
in
push
rclb
out
dec
jp
xchg
fbld
test
cs
xor
mov
jno
jbe
pop
stos
in
jo
sahf
xchg
sahf
out
pop
sarb
jecxz
repz
add
jnp
les
push
in
xor
jae
in
push
arpl
movsb
das
mov
add
mov
cmp
enter
xor
pop
repnz
mov
add
enter
pop
std
cmp
push
addl
push
sub
push
mov
es
adc
mov
scas
adc
out
or
out
cld
sbb
xchg
add
mov
cld
test
dec
sub
add
jmp
sbb
movsl
pop
sbb
jp
cmp
shll
cmc
sbb
rcrb
push
fwait
push
push
inc
push
cmp
jmp
xor
sbb
inc
push
and
mov
push
stc
adc
mov
xor
popa
cmp
jnp,pt
sbb
and
fistpll
imul
ret
aam
mov
in
jp
scas
stos
sub
popa
daa
cmp
fists
mov
or
popa
je
call
or
adc
cltd
cmp
xchg
call
jmp
pop
stos
ret
dec
jp
add
les
dec
xor
bound
xchg
sbb
shrl
mov
das
pop
mov
subb
lret
mov
jmp
pop
jnp
in
mov
fimull
mov
sub
pusha
jne
jecxz
jmp
rcl
jns
pop
add
inc
jnp
push
adc
add
push
ds
cmp
jmp
sahf
pop
loope
inc
icebp
xchg
inc
cmp
mov
movsb
loope
pop
das
mov
adc
cmc
xchg
cmpsl
jns
sbbb
inc
stos
in
add
scas
mov
mov
pusha
lret
dec
adc
pop
int
sub
inc
sub
adc
jl,pt
pop
in
dec
movsb
mov
jbe
xchg
sub
hlt
mov
or
test
and
add
das
ror
mov
sbb
dec
aas
lcall
jecxz
pop
push
jle
fnstcw
outsb
mov
ja
or
andb
int3
adc
mov
mov
fnstsw
push
push
stc
lds
std
sahf
je
stc
daa
sti
enter
mov
adcb
or
imul
popa
out
je
outsb
sti
int
or
idiv
movsl
mov
aas
push
mov
fcomp
or
sbb
xchg
sbbb
sti
and
in
orb
in
jnp
xor
cld
lods
or
pushf
mov
out
gs
insl
sbb
jno
js
std
jne
std
mov
mov
push
lods
add
stos
sbb
inc
xchg
ficoms
rorb
or
push
xchg
xchg
dec
jnp
pop
lret
cmpsl
dec
push
fmull
xchg
xchg
scas
movsb
rorb
ds
or
fimuls
imul
sbbl
mov
xor
ja
pop
repnz
lahf
test
mov
inc
mov
xchg
and
aam
sti
lea
cli
push
add
inc
imul
lahf
push
cld
adc
pop
sbb
inc
sub
loopne
push
add
loop
add
iret
mov
stos
cs
ja
stos
lds
and
push
in
cmp
andb
and
popf
adc
inc
ds
or
insb
test
jnp
cmpsb
inc
sbb
aaa
xchg
inc
push
or
repz
cmp
cmp
mov
push
fstps
add
imul
and
hlt
pop
mov
scas
int
adc
mov
jnp
cmp
out
lahf
outsl
adc
ja
push
lods
cld
js
lret
push
add
cld
push
xchg
jnp
daa
xchg
lods
out
xchg
js
es
mov
and
jnp
or
in
aad
inc
push
xlat
mov
icebp
std
push
fisttpl
sbb
adc
cmp
add
lahf
test
sbb
js
pop
inc
xor
imul
push
xchg
fidivs
in
sbb
mov
cmpsb
scas
and
mov
cmpsb
stc
sarb
mov
fcmove
jns
mov
sub
ljmp
xchg
adc
lods
dec
adc
inc
clc
push
mov
test
rorl
xchg
cmp
int
cmp
lahf
jae
sbb
inc
loope
fdivrl
bound
stos
mov
cwtl
pop
hlt
leave
fwait
cmp
iret
dec
jno
in
movsl
xlat
arpl
inc
addr16
inc
lods
rolb
notb
sbb
lret
cld
test
fcmovnu
dec
jge
pop
xor
xlat
xchg
inc
or
jae
push
adc
enter
je
adc
sub
lcall
outsl
mov
or
imul
fisttps
mov
insb
sub
xor
mov
mov
fmul
xorb
ljmp
sub
mov
jbe
jg
jmp
or
ret
xchg
shlb
xor
mov
push
pop
add
xchg
jne
bound
sub
test
pop
and
daa
mov
cmp
add
outsb
sbb
mov
insl
and
mov
call
push
aas
sub
cmp
insl
scas
pop
div
push
ret
xchg
mov
mov
pop
push
leave
sub
outsb
pop
mov
flds
shll
shlb
xchg
in
loopne
mov
lea
dec
push
mov
jp
int
scas
xor
sub
jmp
je
cld
xor
mov
inc
repz
into
mov
xchg
repnz
jns
push
fidivl
dec
xchg
lahf
lcall
mov
addr16
mov
clc
repz
pop
jb
hlt
test
pop
push
jl
push
mov
push
pop
and
push
pop
mov
pop
out
sete
ds
add
and
das
cmp
icebp
push
pop
push
ja
jo
mov
fs
mov
aam
mov
ljmp
in
fnstsw
leave
ss
fldenv
jno
arpl
imul
push
scas
lods
sbb
ret
gs
xchg
inc
mov
iret
stos
mov
sbb
std
and
pop
sbbl
pop
dec
xor
push
iret
mov
call
add
ss
mov
mov
jb
divl
mov
inc
xchg
loope
cltd
mov
xor
inc
in
xchg
dec
ljmp
xor
popf
mov
in
mov
and
fstl
add
add
ss
push
dec
or
mov
and
cmp
jnp
lahf
or
xor
das
cmc
cmp
xor
rcl
sub
push
mov
mov
icebp
mov
dec
cli
or
sti
pop
xchg
jge
icebp
cmp
dec
outsl
mov
and
mov
cmp
dec
jmp
out
js
inc
pop
add
adcb
mov
push
adc
sub
sub
cwtl
adc
jb
mov
sbb
pushf
sbb
jbe
les
cmp
mov
jle
sahf
sti
in
int3
mov
inc
ss
push
scas
popf
roll
aas
mov
stos
jp
rclb
xor
mov
xchg
jo
mov
cmp
xchg
jl
and
inc
std
and
jno
movups
pushf
inc
mov
xchg
pusha
push
add
stos
testb
add
hlt
pop
les
sbb
movsl
jg
leave
pop
push
dec
jno
xchg
out
aaa
mov
dec
je
sub
jno
mov
mov
popa
loope
nop
out
in
arpl
aas
pop
imul
jecxz
lret
cltd
mov
cmp
fsubs
dec
mov
mov
xchg
push
inc
enter
popa
push
test
adc
lock
aaa
xchg
or
sbb
dec
pop
mov
popf
std
bound
pop
dec
push
adc
cmp
pop
xor
or
cmp
in
repnz
mov
sbb
les
data16
cs
sbb
mov
test
jle
mov
inc
push
dec
icebp
in
jbe
out
cmp
arpl
add
xchg
popl
cmpl
jne
sub
adc
fldcw
dec
inc
in
out
fistpl
aam
adc
jnp
xchg
lds
in
mov
mov
pop
aaa
scas
dec
pop
fs
scas
jo
pop
aad
add
popf
stc
andb
jecxz
and
mov
and
adc
arpl
divl
xlat
sub
push
test
test
jge
xchg
mov
scas
std
dec
in
sub
in
mov
lock
sarb
lock
dec
fwait
add
adc
adc
add
sub
in
mov
dec
fisubrl
pusha
sbb
jge
mov
xor
inc
or
shll
xor
dec
lcall
push
jo
adc
add
xchg
sbb
inc
iret
hlt
test
jmp
movsb
jnp
inc
adc
les
jne
jne
jmp
cmp
push
and
cmp
mov
faddl
pop
scas
mov
mov
jne
mov
push
pop
adc
cmp
adc
cmp
mov
subb
bound
sti
and
cmp
or
and
loop
test
pop
mov
ja
mov
outsl
roll
lods
lret
mov
fwait
xchg
inc
into
pushf
sbbl
jle
and
mov
fadds
and
cs
aas
nop
std
cld
mov
fdivrs
popf
mov
movsl
std
add
dec
popa
push
mov
loope
sub
fucomp
popa
test
repnz
lds
insl
andl
or
mov
popa
mov
pop
das
jle
cmpsb
into
shl
in
imul
jb
mov
in
lsl
cs
sub
push
nop
dec
xchg
jg
ds
pop
or
sub
and
dec
jmp
add
in
push
shrl
mov
stos
fists
popa
lds
orl
push
iret
push
xchg
xor
ret
ljmp
pop
cmpsb
popf
fsubrl
dec
jge
sub
inc
jecxz
mov
adc
pop
popf
imul
mov
xor
jb
test
popf
ffreep
adc
out
enter
inc
or
leave
cld
inc
jns
xchg
stos
addr16
cmp
loopne
jg
movsl
sub
and
shr
int
aam
push
les
hlt
cmpsl
dec
mov
or
and
xor
movsb
mov
jmp
push
or
and
dec
jno
jae
arpl
dec
dec
fildl
cmc
ret
xor
repz
push
push
add
xor
int
dec
mov
pop
cmp
outsl
jmp
push
mov
sbb
imul
int3
in
addr16
sbb
fisttps
dec
jo
cmpsl
aaa
mov
rcrb
xlat
xor
jg
sub
ret
adc
dec
das
pop
add
mov
addr16
jge
push
cmc
pop
sub
or
sub
add
xor
jno
lock
fists
and
out
jne
clc
imul
xor
push
adc
fisubs
and
std
add
cmp
and
out
push
mov
shl
ja
mov
and
xchg
mov
or
dec
ds
fcmove
ret
mov
into
jl
cmp
sbb
xchg
pop
fisubl
mov
dec
gs
mov
jns
incb
push
jb
daa
sti
loope
hlt
cmp
fildll
dec
xor
ds
jp
repnz
je
push
and
sub
cmp
divl
data16
and
adc
jo
or
lret
faddl
and
bound
outsl
and
roll
cmp
lods
lret
dec
ljmp
jb
scas
mov
inc
adc
xor
fildll
scas
test
xor
xor
mov
iret
mov
sub
ljmp
sub
jl
es
and
andl
dec
xor
adcl
xchg
mov
and
xorb
add
ret
insl
push
fadds
adc
icebp
imul
bound
xor
pop
inc
lret
sahf
cmp
sub
lods
pop
inc
xorb
fs
mov
test
test
pop
lret
push
fiaddl
mov
cmp
cmp
fsub
test
lret
imul
xchg
loope
pop
popa
iret
bound
sub
push
dec
sub
pushf
jno
mov
out
je
mov
out
mov
cld
sub
xor
ret
sbb
test
hlt
inc
mov
mov
stos
imul
and
push
adc
cltd
mov
fadds
cltd
cmp
in
jmp
cli
and
pop
stos
sub
pop
dec
mov
popf
mov
mov
pop
push
inc
add
mov
daa
scas
lret
leave
aaa
sub
jne
or
xor
repz
or
clc
mov
popa
leave
mov
outsl
nop
mov
sti
int3
ret
and
pop
addl
lahf
mov
rcr
lcall
std
xchg
stc
dec
mov
pop
lahf
sbb
cltd
push
xlat
outsl
xchg
cmp
pop
test
lret
xchg
add
rcll
add
mov
stos
push
jmp
add
inc
mov
pop
jb
std
leave
lret
jbe
fsub
movsb
sub
das
mov
loope
add
outsl
ss
shll
out
xchg
cmpsb
shrb
test
push
or
lret
bound
push
insb
outsl
rcrb
outsb
sub
fs
inc
adc
mov
aam
lock
in
cwtl
sub
push
fcoms
xchg
xor
push
pop
mov
push
mov
jb
mov
mov
xchg
and
adc
adc
fwait
lods
inc
sahf
or
aam
fisubl
sub
jg
pop
and
jo
subb
js
gs
addr16
add
xor
daa
rorb
inc
aad
scas
push
sbb
inc
cmpsl
xor
sbb
jle
mov
roll
sub
icebp
dec
ret
xor
sbb
adc
in
jnp
mov
addr16
dec
rcl
addl
test
mov
inc
jp
or
lret
push
popa
hlt
cmpsl
pusha
pop
push
hlt
adc
adc
leave
sbb
ljmp
aas
pop
shrl
mov
xchg
adcl
cmp
imul
add
adc
icebp
mov
cld
dec
es
aaa
rcrb
fldenv
mov
lea
jmp
mov
popa
mov
int
fsubrs
xlat
lods
aad
fistpll
fsts
jo
lods
push
pop
and
cmp
mov
xchg
push
jg
add
xor
outsl
adc
sbb
pop
loopne
scas
pusha
xor
sbb
pop
rorl
xor
push
sub
xor
cwtl
pop
mov
inc
mov
push
aad
pop
insl
stos
ljmp
xchg
or
loopne
cmp
aad
loopne
data16
lret
sub
call
push
ret
xor
data16
cmc
push
mov
mov
xlat
push
add
outsb
jmp
call
push
loope
ret
push
push
fs
movsl
sti
mov
fimuls
fmuls
add
fidivs
sbb
lods
cmpsl
add
addr16
in
and
or
movsl
aam
cld
push
add
xor
inc
fdivr
push
add
lret
das
loopne
inc
push
andnps
lock
inc
jmp
lahf
in
fiadds
lret
dec
push
pop
jmp
mov
sbbb
call
jle
popa
test
sub
and
fiaddl
sub
outsb
stos
adc
stmxcsr
mov
lea
adc
mov
data16
mov
fnstsw
dec
sbb
and
jl
popf
leave
jmp
hlt
inc
loop,pn
rcrb
push
push
test
pop
inc
jle
push
ss
dec
addl
pop
jge
xchg
lahf
pop
cld
or
adc
in
mov
pop
jge
pop
nop
dec
jne
add
out
jne
movsl
adc
out
xchg
inc
add
ljmp
bound
imul
roll
leave
jp
jg
add
push
inc
mov
scas
add
xor
call
mov
sub
stos
ret
xorl
jb
lahf
inc
jmp
xchg
adc
adc
hlt
in
test
loop
loope
xchg
push
mov
mov
jne
repz
out
jb
pop
int3
add
fwait
adc
cmc
or
repnz
push
dec
dec
test
jne
pop
loopne
out
bound
jne
add
pop
dec
mov
mov
or
fisubrs
add
in
fsts
hlt
push
mov
xchg
loope
sbb
mov
movsb
cmp
adc
jl
push
dec
loope
cmpsb
or
mov
dec
out
mov
fstps
test
mov
xlat
push
jb
insb
xchg
js
out
aas
push
imul
outsb
insb
cmp
xchg
scas
mov
sbb
dec
sub
pop
sub
xor
das
adc
shlb
dec
push
jge
fbstp
shlb
xor
or
mov
sti
pop
call
mov
mov
adc
mov
adc
sub
lcall
inc
lods
fwait
cmpsl
cmp
mov
mov
fldcw
sub
les
adc
sti
dec
int
push
sarb
ret
push
jae
decl
out
lret
in
dec
add
jcxz
or
sbb
mov
mov
sub
icebp
outsb
cmp
in
les
jo
fisttpl
push
cltd
in
or
ret
sbbl
imul
xchg
cmp
and
inc
icebp
push
push
sub
mov
pusha
pop
sub
icebp
daa
mov
lods
push
fwait
add
mov
in
ds
fisubs
lcall
mov
mov
xchg
lds
test
jmp
push
test
in
push
adc
sub
imul
mov
sub
jno
or
adc
jge
add
andb
mov
push
jmp
xchg
cmp
iret
xlat
pop
movsl
sbb
xchg
xchg
outsl
cmp
movsl
sub
jge
sub
cld
enter
push
and
mov
mov
sub
out
js
fcomi
mov
jmp
sub
xchg
addb
rcrl
insb
cmc
in
shlb
out
push
les
pop
andb
dec
push
ljmp
in
xchg
loopne
jb
sub
out
sbb
inc
jmp
ds
shlb
pop
mov
mov
xor
mov
loop
rorb
ss
push
pop
xchg
notl
xor
leave
call
lret
shlb
iret
popf
and
inc
jg
addr16
data16
outsb
int
mov
or
or
out
es
fisttpll
adc
and
jmp
js
sub
inc
ljmp
js
add
popa
sub
loopne
mov
xchg
xorb
test
pop
adc
lret
mov
or
and
cmpsb
aaa
dec
jo
jns
ret
js
test
pop
daa
mov
add
insb
mov
fwait
scas
fwait
push
mov
mov
push
dec
mov
mov
jne
rolb
jbe
jne
push
sarb
and
push
jmp
cmp
jns
jae
xchg
cld
pop
sub
stc
stos
jno
and
mov
mov
mov
dec
aaa
in
insb
xchg
xor
icebp
stos
mov
xchg
pop
dec
dec
pop
inc
cmp
into
setg
mov
mov
dec
add
cmpl
std
loopne
les
testb
pop
sbb
or
minps
sbb
sub
test
cmp
int
cmp
inc
xor
or
sub
out
mov
je
mov
lods
in
cmc
sarl
dec
lods
xor
adc
out
pop
arpl
lcall
inc
xchg
ja
movsb
add
sbb
aad
dec
mov
xchg
add
movsb
mov
adc
jmp
fmulp
or
lock
add
mov
neg
pop
ds
and
inc
or
aam
and
flds
bound
ret
or
fnsave
jbe
push
icebp
cltd
fmuls
xchg
mov
stc
int
movswl
cli
sbb
adc
arpl
or
jne
push
push
fdivrl
adc
out
and
dec
cmpsb
scas
addr16
inc
mov
and
shr
int
xchg
push
ret
mov
cmc
or
and
fcoml
aas
notb
xorl
jnp
fmuls
lds
dec
push
mov
clc
lea
scas
clc
lock
scas
scas
pushf
mov
pop
jecxz
das
jmp
inc
pop
mov
pop
in
dec
hlt
push
shrb
lock
xchg
dec
ficompl
xchg
dec
pop
ljmp
inc
push
cwtl
jno
xchg
aas
sbb
testl
jns
lret
call
cmc
mov
mov
xchg
jbe
out
test
inc
and
jno
adc
push
scas
pop
sub
insl
stos
push
adc
stos
loop
add
jb
mov
popf
mov
jecxz
out
sbb
arpl
push
adc
adc
sub
leave
xor
cwtl
mov
outsl
into
clc
jecxz
lods
and
xchg
sub
repnz
mul
or
mov
jmp
cmp
cld
jno
or
add
mov
mov
out
push
xor
sbb
test
inc
popa
ds
xchg
sub
add
mov
inc
andl
jbe
scas
repz
fimuls
jne
inc
sbb
in
cmc
leave
and
mov
fdivrs
adc
inc
dec
stos
push
xor
mov
pushf
mov
addl
cmp
popf
sbb
and
push
sub
mov
jecxz
adcl
push
sub
mov
movl
lds
mov
pop
sbb
dec
sbb
mov
push
dec
mov
cmp
xor
shll
xor
inc
cmc
cmc
imul
mov
xchg
cmpsb
mov
inc
test
add
push
insl
pcmpgtd
lcall
inc
lods
cmp
std
push
fdiv
pop
test
xor
addr16
stos
dec
sbb
push
rorb
cs
hlt
adc
nop
mov
push
inc
movsb
out
jae
cmp
sbbl
jmp
pop
and
stos
jle
sub
fiaddl
out
cwtl
ret
adc
repnz
adc
ret
pop
jnp
sbb
movsl
mov
mov
cmp
fisubl
bound
fisubl
nop
push
push
xor
arpl
cmp
dec
xchg
sti
pop
fisubrs
pop
movsl
test
popf
int3
sarl
mov
popf
adc
cmp
lret
shrl
adc
jg,pt
sub
idivl
inc
addr16
loop
ja
fimull
jmp
jno
add
and
lods
mov
sbb
fdivrp
dec
jmp
inc
or
stos
std
aad
push
adc
pop
ds
fs
push
pop
addr16
ja
mov
inc
push
cmp
js
ret
jge
xor
and
jp
xor
xchg
das
cmp
rclb
adc
ret
mov
ret
push
push
mov
adc
out
mov
mov
mov
xchg
shll
in
pop
dec
aaa
push
mov
xlat
push
leave
call
movsl
arpl
les
int
fwait
clc
mov
xor
xor
pop
or
arpl
sbb
adc
cmp
push
pop
out
stos
sbb
push
or
inc
mov
mov
imul
xor
shlb
std
pop
xchg
mov
dec
call
jge
adc
dec
lods
packuswb
pop
lcall
jl
aam
fcmovbe
pop
mov
aas
jmp
xor
cmp
xchg
aas
mov
je
addr16
dec
iret
jmp
shlb
gs
pop
fldcw
mov
test
das
int3
imul
mov
push
cmp
mov
daa
scas
add
inc
sbb
mov
pop
pop
shrl
inc
cmp
enter
pop
das
mov
js
popa
ljmp
push
xor
add
jbe
or
popa
aad
decb
inc
and
dec
insb
lds
xchg
mov
ljmp
inc
cmc
dec
test
in
jae
mov
mov
nop
push
jge
rcrb
jmp
das
mov
insl
inc
cmp
lods
pop
incb
sub
fmull
mov
cmp
xor
and
movsb
sbb
mov
jbe
rolb
pop
and
mov
movsb
sub
test
fdivs
pop
test
xchg
cmp
into
hlt
mov
inc
pusha
jle
arpl
xchg
xor
push
ret
lret
xor
xor
cmp
out
mov
pop
imul
jae
outsb
pop
push
inc
mov
mov
pop
sbb
cmc
jae
call
mov
pop
and
aaa
addr16
cltd
adc
push
cmp
push
mov
add
cmp
sub
je
dec
andl
xor
repz
cmc
ret
in
pop
vaesdec
jl
out
mov
aas
mov
orl
mov
ljmp
and
sbb
outsb
fidivl
push
adc
push
cld
push
push
sarl
jle
lret
ja
jecxz
fs
ret
sub
outsl
sbb
sub
add
dec
aad
js
lret
jp
sysenter
js
shrl
mov
loope
movsl
outsl
add
sub
pop
push
mov
pop
ret
xor
mov
pushf
add
pop
mov
cmp
dec
arpl
or
push
outsl
xchg
pop
dec
add
nop
dec
mov
in
ja
das
mov
or
dec
jns
lret
pop
ffreep
inc
cmpsb
push
hlt
xchg
jnp
push
add
mov
js
pop
daa
mov
xor
sarl
xor
jl
stos
out
add
jecxz
jle
movsl
in
js
aad
pop
stc
mov
cmp
daa
sbb
push
dec
hlt
cwtl
outsb
mov
ss
xchg
sbb
mov
inc
mov
pop
pop
stos
loop
mov
push
movsl
popf
in
adc
shll
out
jno
shr
jecxz
shr
mov
mov
adc
jecxz
mov
adc
push
rolb
stos
sarl
vsubpd
sbb
xlat
xor
rcrl
add
xchg
cmp
sbb
push
fsubl
jae
sbb
mov
jb
in
lock
movsb
das
mov
mov
jno
rclb
xchg
in
pop
jnp
mov
jmp
out
pushl
and
mov
in
push
out
insl
dec
mov
int3
mov
es
xchg
rcll
sub
xor
pop
adc
inc
push
stc
enter
xor
sub
push
dec
mov
lret
call
out
scas
daa
loopne
cs
jnp
outsb
shrb
add
rcrb
cmp
fldt
in
add
ss
dec
out
into
inc
stos
les
and
xor
push
or
sbb
jp
inc
xchg
and
unpckhps
or
sub
add
xlat
xor
mov
or
jo
lock
imul
jl
sub
das
fnstsw
lret
pop
out
aas
cmpsl
in
adc
rcrb
xor
test
clc
sbb
test
lahf
mov
sbb
out
mov
mov
shll
not
sub
push
add
shlb
xchg
pop
mov
xchg
aam
jne
cmpsb
lret
outsl
cmp
stos
stos
sbb
cmp
cmpsl
and
jecxz
adc
lcall
pusha
pop
lods
and
jmp
push
aaa
shll
sbb
imulb
pusha
and
mov
mov
push
dec
mov
mov
mov
ja
aad
push
je
lret
rol
in
mov
and
fbstp
jns
sub
stos
pop
jmp
test
movsl
lahf
push
in
fucomp
imul
repz
dec
xchg
jb
push
xchg
push
in
inc
adc
mov
mov
lods
outsl
cld
stc
or
in
adc
shl
mov
add
pop
mov
rclb
shr
mov
mov
push
push
cmpsb
mov
mov
in
sbb
or
adc
icebp
lods
inc
lock
movsb
inc
mov
flds
sub
jne
cmp
dec
inc
add
fdivl
pop
fldt
sbb
paddw
fsubrp
insb
push
popa
xchg
jle
cltd
cmpsl
out
mov
loop
iret
aaa
push
xchg
sahf
setb
dec
xchg
mov
adc
jl
std
movsb
push
lock
add
and
xchg
jne
dec
es
push
daa
push
dec
push
dec
loope
dec
leave
mov
repnz
aad
jle
and
lret
aad
ja
out
and
pushf
or
push
adc
jecxz
je
pop
cmp
add
cmp
inc
lcall
loopne
add
mov
pop
mov
xor
jb
sub
imul
lea
iret
fadds
mov
inc
movsl
xor
addps
jecxz
jo
push
and
enter
and
in
aad
pop
lret
push
lret
scas
sbb
iret
jae
add
pop
xchg
mov
in
sbb
mov
iret
push
movzbl
xchg
rclw
mov
push
pop
cmp
cmp
les
cmpl
pop
xchg
imul
fs
push
outsl
out
mov
xor
mov
jmp
mov
fldl
jns
outsb
mov
cmpsl
mov
cmp
mov
and
pop
adc
or
or
leave
int
pusha
dec
sbb
push
adc
jo
mov
fsubrs
aaa
xor
loope
xchg
ja
cli
stc
adc
fistl
xchg
insb
fxch
pushf
and
stc
add
and
jnp
lock
add
inc
lea
or
fldt
pop
push
shrl
xchg
in
out
sbb
std
jns
mov
inc
cmp
push
inc
or
and
repz
bound
mov
mov
mov
jnp
sub
dec
xor
sbb
cld
or
xchg
jae
add
mov
xchg
das
and
xlat
push
shl
dec
pop
enter
mov
add
lret
dec
je
movsl
jge
mov
movb
or
sbb
nop
inc
cmp
into
nop
ds
jmp
pop
mov
aam
notb
inc
out
xor
mov
loopne
lcall
sbb
mov
hlt
jecxz
adc
lret
mov
dec
sbb
push
mov
inc
pop
ss
jp
jmp
jno
pop
dec
mov
ret
lods
out
out
jp
mov
mov
out
mov
test
iret
xchg
bound
push
ds
test
pop
mov
jnp
popf
pop
push
cmpsb
sahf
adc
sub
das
inc
dec
xchg
mov
pop
sbb
jmp
lret
pop
cwtl
popf
xor
inc
or
mov
nop
jg
sbb
push
out
sub
lcall
fstpt
pusha
push
inc
test
das
fs
les
and
orb
and
out
inc
sbb
sub
dec
rclb
cmp
mov
push
xchg
outsb
outsl
loope
dec
mov
lret
shlb
xchg
and
inc
cld
pop
cmpl
mov
mov
jmp
push
imul
orl
fsub
and
add
sub
bound
xchg
dec
lcall
add
aas
shl
lret
mov
iret
lds
jnp
movsl
mov
jb
sub
scas
and
push
repz
xchg
cmp
gs
sti
pusha
mov
jbe
repnz
hlt
dec
push
repnz
inc
aas
fucomi
neg
xchg
lods
dec
inc
jne
xchg
hlt
jns
repz
jb
cmp
daa
aad
sbb
std
lret
in
fstps
or
jecxz
push
cmp
scas
mov
out
adc
pop
aaa
and
or
pop
ljmp
add
pslld
iret
mov
fstl
faddl
fwait
mov
sbb
mov
pop
ucomiss
lds
sti
out
inc
or
xchg
xor
jmp
jg
in
xchg
cli
fistps
imul
xchg
push
mov
ss
cmp
adc
pop
mov
mov
fst
cltd
xor
imul
sbb
lods
mov
sub
fistl
xchg
stos
jne
mov
ds
out
in
fcoml
in
mov
enter
adc
cmc
lret
and
bswap
xchg
inc
notl
mov
mov
mov
jb
sub
aad
add
mov
push
int
leave
nop
test
mov
cmpsl
xchg
dec
cmpsb
sub
mov
dec
cmp
dec
mov
push
adc
gs
dec
pop
dec
data16
loopne
cmp
xor
adc
sbb
sbb
inc
or
cmp
cmpsl
mov
negb
mov
push
xor
lcall
sti
lods
and
xor
insb
dec
cli
push
sbb
mov
fst
push
pop
xor
cltd
inc
mov
sti
dec
popf
stc
sbb
fisttpll
lock
jns
add
jae
and
cmp
repz
or
insb
repnz
inc
pop
sbb
dec
add
into
mov
add
add
xor
xchg
push
imul
mov
mov
sbb
in
imul
mov
leave
push
sahf
mov
sbb
push
mov
out
xchg
sarb
aaa
push
sub
aam
xchg
jo
rcl
pop
pop
fdivs
cmp
sub
sub
xor
inc
mov
inc
out
and
xor
lds
mov
adc
sub
inc
icebp
push
jae
aam
jo
jl
lds
sub
push
inc
jnp
mov
jp
mov
jbe
fwait
sbb
out
lcall
movsb
push
ret
call
cmp
cmpsl
dec
loop
ja
push
mov
cmp
out
xor
icebp
int3
insl
mov
xor
repnz
sub
and
inc
inc
outsl
cmp
pop
es
xchg
push
into
cmp
lret
mov
repz
dec
jecxz
lret
aad
or
sar
add
push
mov
pop
sar
push
push
fisubrl
xor
xchg
jmp
ret
out
mov
mov
jb
or
pushf
ljmp
negb
roll
xorl
dec
push
repnz
lahf
insb
push
loopne
adc
push
les
enter
fidivrs
mov
outsl
xchg
sbb
cmpsl
ret
cmp
sub
cmp
push
iret
and
inc
dec
enter
or
adc
test
pop
adc
add
adc
mov
insl
insl
jle
movsl
scas
push
das
test
mov
rol
lods
fs
jle
jnp
enter
pushf
cmp
jo
dec
adc
xchg
mov
stc
sub
add
dec
test
add
jmp
and
cmpsb
divb
jmp
add
push
jb
push
push
sbb
cltd
sbbb
sub
push
aad
outsl
pop
insb
enter
cmp
cli
lcall
dec
ds
repz
scas
adc
movsb
mov
lahf
ss
adcb
mov
test
pop
cmc
inc
adc
nop
adc
js
adc
adc
jbe
pop
fldt
xor
lret
xor
ss
xor
ret
es
sahf
insb
rcll
xchg
mov
in
push
into
sbb
mov
xchg
dec
nop
mov
sub
add
xor
inc
test
stc
xchg
mov
vcvtss2sd
mov
dec
aaa
fldenv
mov
and
shlb
mov
rcrb
inc
popf
cmpsb
mov
in
jns
xor
pop
push
or
lds
jge
xor
mov
inc
sub
bound
fstpl
push
lods
fldt
test
lret
cmp
sarb
ss
ss
lahf
rcrl
cmp
popf
adc
int
sub
mov
push
out
cmpsb
xchg
out
clc
lahf
cmc
test
mov
pop
std
adc
pop
xor
filds
dec
xor
xchg
lds
call
xorb
stos
sub
in
mov
rcll
mov
cld
enter
push
enter
or
stos
popf
xchg
pop
js
sbb
test
inc
lods
stos
cmpsb
mov
lods
xchg
cmpl
lret
push
add
dec
cmp
jg
sarb
or
fwait
outsl
fdivr
inc
mov
ljmp
stc
loopne
mov
dec
mov
or
push
imul
push
sub
ret
sub
jg
rcr
aad
cmp
pop
or
pop
loopne
call
mov
xchg
jo
mov
cld
imul
leave
mov
cltd
pop
sar
scas
sub
movsb
cmpsl
jmp
test
fwait
and
fsubrl
movsb
ljmp
fisttps
std
ljmp
ret
jnp
enter
pandn
std
shl
jnp
xchg
movsl
pusha
pop
pushf
repnz
dec
fnstenv
mov
dec
push
clc
or
mov
pop
push
xchg
fwait
loop
loope
pushf
in
sbb
mov
dec
ds
mov
ja
iret
repnz
or
lods
fistps
enter
xchg
fld
pusha
xorb
aam
test
cmp
stos
ret
cmpsb
add
cmp
enter
sbb
xor
stc
push
or
xorl
int3
lret
mov
pop
pop
pop
inc
jb
lods
sahf
setae
jno
inc
sub
dec
sar
sti
mov
enter
and
push
ds
imul
stos
sub
push
fstpt
int3
and
out
jnp
lret
in
push
ret
clc
lds
or
pusha
loop
icebp
mov
test
in
dec
pop
push
sub
bound
ss
mov
dec
dec
fildl
ljmp
mov
movsl
loop
jmp
xor
dec
jl
adc
xor
pop
sbb
insb
lods
pop
lock
pushf
push
stc
push
inc
dec
mov
cltd
cmp
js
and
pop
test
adc
push
mov
je
pop
dec
add
cmp
xor
xor
lret
insl
xchg
mov
pop
ffreep
adc
or
movsb
pop
jp
or
adc
das
cmp
stos
sti
out
data16
stos
and
cmp
test
nop
pop
shlb
mov
loop
decl
mov
negb
call
mov
push
jno
pop
fwait
cmpsl
sbb
leave
ret
sahf
daa
into
xchg
out
in
jg
pop
mov
aam
pop
jg
test
sbb
stos
dec
or
xor
xor
mov
push
push
or
pop
xor
jno
test
pusha
mov
mov
adc
sub
clc
jecxz
mov
in
xchg
and
inc
ljmp
nop
xor
jne
test
clc
cld
sub
shrb
lret
cs
xor
ljmp
mov
in
int3
incl
call
adc
xchg
into
cmpsl
cmp
jo
je
out
cmp
cmpsb
sub
xchg
mov
jno
out
sub
mov
jp
cmp
mov
fisttpl
sbb
xlat
clc
addr16
rcrb
arpl
out
scas
pop
cmp
mov
fwait
pop
movsb
sbb
pop
iret
rcrl
push
jp
mov
xor
clc
push
inc
aad
mov
jmp
shrl
xor
test
pop
mov
pop
jae
jb
dec
mov
sbb
inc
pop
shll
notl
pusha
into
sub
gs
sbb
mov
or
stos
js
frstor
inc
jl
add
inc
mov
dec
fisttpll
mov
frstor
movsb
sbbb
dec
js
in
fstpl
ret
jl
xchg
aam
clc
sbb
pop
insl
in
push
mov
aas
icebp
dec
jg
sahf
jmp
adc
xchg
stos
dec
fwait
mov
jbe
into
push
and
mov
pop
stc
jae
call
or
fsubrl
sub
into
leave
jecxz
or
pushf
sbb
sahf
push
insb
pop
jae
xor
or
in
dec
lret
jmp
icebp
es
lcall
fsubs
xchg
xor
test
sub
negl
int
sbb
jbe
push
xor
push
dec
adc
mov
nop
mov
jb
mov
dec
scas
mov
mov
scas
xor
in
inc
mov
ret
sbb
jg
cmpsl
scas
aas
push
xchg
mov
push
mov
mov
or
lods
shrl
jge
lea
mov
outsl
aaa
enter
sub
out
js
inc
push
cltd
mov
and
dec
in
test
xor
and
sbb
and
or
out
jg
cmpsl
mov
mov
outsb
addr16
push
aas
and
cld
test
push
dec
push
adc
mov
pop
dec
pop
ljmp
mov
inc
decl
inc
lcall
adc
push
and
fisttps
jne
ret
cwtl
cmc
pop
mov
adc
xor
fnstsw
imul
jne
loopne
sub
inc
outsb
shr
mov
mov
aas
in
shll
inc
outsl
incl
je
mov
lods
cmp
or
pushf
in
mov
idivb
pop
outsb
mov
es
int3
mov
test
gs
mov
sub
add
and
add
push
sub
inc
jae
push
mov
mov
into
or
push
sti
xchg
inc
imul
sub
stc
es
outsb
jbe
dec
xor
and
mov
sub
mov
testl
xor
mov
fsts
pop
arpl
stc
or
pop
sub
pop
mov
sbb
pop
aas
add
in
mov
setge
ss
repnz
ret
into
jmp
cmpsl
sbb
xlat
pop
push
movsb
mov
mov
add
test
sarl
aas
call
inc
push
cwtl
jmp
lcall
mov
sub
lock
call
push
inc
mov
sahf
mov
push
pushf
adc
pop
push
and
pop
dec
scas
jl
sbb
sbb
cmpsb
xchg
jge
addr16
xchg
pop
scas
dec
adc
jae
aam
mov
jae
push
cmc
call
in
and
sub
enter
call
decb
inc
pop
popa
lock
xchg
test
xchg
inc
jge
jae
and
repnz
ret
xor
push
pop
divb
xchg
xlat
or
jp
xor
ret
dec
sahf
jl
and
negb
cmp
mov
sbb
mov
out
sub
xchg
xchg
xchg
int3
xchg
mov
jle
stos
scas
adc
adc
cmp
pop
cmp
les
or
sahf
insl
sbb
insb
shlb
xchg
push
mov
fcmovu
add
pop
and
mov
sub
es
cwtl
or
add
ficoms
mov
sbbb
hlt
jnp
mov
jo,pt
ret
and
mov
rcrl
pop
dec
arpl
push
cs
sti
lret
mov
pop
loope
adc
or
adc
shrb
into
popf
cmp
loope
int3
jae
push
movsb
stc
pop
mov
cmp
push
insb
mov
cmp
repnz
aas
pop
pop
dec
push
jno
mov
mov
ja
lcall
iret
pushf
dec
test
or
arpl
mov
mov
test
add
mov
in
aam
push
inc
sub
loop
pusha
aaa
xor
lea
insb
push
rcrb
xchg
cmpl
sti
jnp
mov
bnd
rcll
imul
mov
lcall
and
loopne
dec
rcr
cwtl
jg
ror
imul
cmpsl
add
data16
fwait
std
mov
adc
add
in
ror
mov
dec
mov
in
fcmovbe
sub
mov
clc
xchg
fildl
mov
out
xor
mov
push
aas
and
notb
pop
scas
inc
dec
js
test
adc
in
sub
call
dec
arpl
jp
lds
in
ret
xor
lahf
sbb
fnstcw
lock
mov
mov
jmp
jne
dec
data16
mov
mov
test
into
adc
cmc
xchg
mov
pop
sti
xchg
fmul
test
jbe
mov
mov
or
pop
xchg
dec
stos
push
jg
and
push
ficoml
and
in
cmp
jnp
sbb
inc
stc
inc
repnz
clc
jne
repnz
pop
or
shl
cmp
sbb
xchg
in
movsl
jge
rolb
pop
in
jp
sti
ss
pushf
std
sbb
lock
add
je
mov
fldenv
jg
loope
adc
leave
inc
mov
pop
popf
adc
outsb
int3
xor
jle
sbb
bound
into
dec
xor
gs
inc
pop
sub
shll
adc
lds
jg
fisubrl
mov
mov
adc
cmc
setb
icebp
lcall
divl
mov
jae
xchg
imul
sbb
ret
sub
add
cmpsl
dec
mov
jbe
lock
sbb
insb
sbb
add
mov
pop
push
stos
in
pop
iret
or
and
jbe
sarb
repnz
out
fwait
lds
cmc
and
jb
andb
mov
pop
scas
imul
test
ja
inc
adc
jge
mov
or
pop
cmpsb
inc
jecxz
ljmp
decb
leave
lds
sbb
mov
cmp
jg
or
xchg
push
fimull
xchg
mov
ja
cmp
lods
push
fsubrl
pop
lahf
sbb
add
xor
inc
test
pop
or
jno
cs
out
pop
xor
lock
test
jo
mov
inc
out
fadds
xlat
pop
mov
xchg
mov
xor
in
add
xchg
daa
cmpsl
shrl
in
jns
bound
inc
nop
push
lds
stos
jbe
popa
out
cmpsb
mov
addr16
stc
fcoml
sbb
decb
pop
mov
stc
mov
push
out
lea
inc
or
cmc
rorl
mov
cmp
adc
push
cmp
mov
mov
mov
aaa
fcoms
inc
fld1
adc
add
sub
scas
sub
into
or
mov
pop
push
push
call
lret
sbb
sub
or
adc
pop
data16
stc
dec
loopne
pop
popf
push
sbb
pop
mov
loope
sub
scas
xor
fildll
es
push
test
cmp
inc
push
and
repz
loop
es
add
push
aas
dec
cs
xchg
in
dec
roll
push
adc
sbb
add
mov
scas
aaa
jns
cmp
pop
mov
fdivr
xchg
and
or
stos
imul
cwtl
ret
test
fnstenv
rorl
popf
stos
pop
sbb
sub
adc
js
lds
sbb
and
pop
xchg
sti
sbb
cli
loopne
mov
add
mov
inc
arpl
push
pop
mov
lds
icebp
xchg
sbb
insl
scas
mulb
or
aaa
divb
stc
pop
sti
loopne
mov
outsb
pop
push
pop
push
test
pop
stos
arpl
jb
jge
cli
mov
cmc
cmp
push
sub
jecxz
and
movsl
cmp
int
sahf
inc
sbb
adc
insl
and
xor
scas
icebp
jle
sub
fsub
mov
sub
mov
push
xchg
addr16
popf
fists
ds
mov
ljmp
xor
adc
sbb
test
mov
mov
sub
movsb
outsl
and
mov
inc
xchg
or
stc
jbe
fildl
cmc
dec
xchg
mov
push
rcrb
xor
pop
lahf
addl
push
scas
xchg
les
jmp
pop
fdivrl
insb
and
lahf
movsl
or
adc
insb
cmp
repnz
dec
or
shl
sub
dec
inc
xchg
dec
and
mov
movsl
aad
dec
cmp
mov
jmp
sub
push
push
add
lods
mov
popa
push
mov
jge
mov
add
pop
or
movl
pusha
cmpsb
push
push
dec
lock
adc
mov
mov
mov
cmp
repnz
push
pop
sahf
and
lret
mov
dec
insl
mov
jo
sub
std
push
addl
cmp
add
jecxz
jnp
lret
mov
cld
js
xor
shrl
or
cli
lds
stos
push
push
cmp
pop
lret
out
mov
push
mov
mov
cmp
push
fs
icebp
lods
xlat
adc
dec
and
sbb
xor
xchg
daa
stos
stos
cltd
cld
xchg
mov
inc
push
pop
push
mov
push
adc
or
inc
pop
pop
and
add
sub
aad
jmp
in
sub
cmp
mov
ficoml
popf
pop
lds
stos
andb
sbb
sbb
dec
iret
jns
idivl
in
cmc
sub
cmp
aam
cmp
adc
cltd
and
xchg
lahf
xchg
and
inc
mov
out
lret
lds
push
jns
pop
xor
and
lcall
jb
lcall
pop
xor
scas
fistpll
popa
jbe
xor
cltd
mov
dec
std
or
mov
inc
mov
rcll
cmp
jge
mov
hlt
pop
lcall
sub
xor
mov
inc
lahf
and
inc
and
push
iret
push
nop
daa
or
mov
stc
xchg
xchg
add
xchg
mov
jo
or
popf
inc
imul
fisttpl
rorl
and
nop
and
out
sub
lret
rorb
int
and
mov
pop
dec
cli
add
aas
jno
sbb
mov
and
add
cwtl
and
xor
inc
repz
loope
pop
inc
fs
inc
mov
outsb
xor
mov
fstl
rcrl
lock
outsb
test
sub
out
sahf
push
inc
xchg
jae
or
ret
fimuls
pop
js
out
and
mov
add
les
jl
push
pop
movsl
call
pop
ficoms
add
or
push
loopne
lds
sub
repz
inc
xor
inc
clc
and
fmull
pusha
dec
sahf
jnp
add
xlat
in
jne
movsb
jns
shr
pop
mov
mull
jle
divps
hlt
inc
mov
movsb
sub
and
mov
mov
and
and
inc
adc
mov
mov
inc
jne
aas
xor
dec
jae
mov
insb
inc
in
dec
sahf
dec
add
add
inc
cltd
lods
pop
mov
jo
jmp
push
mov
movsl
or
lea
push
loopne
or
sbb
insl
je
jnp
and
insl
mov
mov
fcmovne
aam
cwtl
repnz
rorb
shrl
adc
ljmp
popa
nop
out
xor
lret
add
repz
or
pop
pop
and
push
pop
xor
push
mov
cld
ret
cmp
sarl
aas
xchg
pop
cld
das
adc
mov
dec
jno
repz
sti
aam
test
pop
cmpsl
cwtl
adc
popf
daa
jge
sti
xor
lret
cmp
xchg
mov
cmp
sahf
ret
aas
add
cltd
testb
inc
mov
dec
icebp
mov
imul
dec
mov
jb
cli
shlb
mov
mov
mov
or
jo
in
test
aaa
add
lods
sbb
mov
mov
or
ficompl
ljmp
decb
jmp
cs
add
jae
lock
pop
add
inc
iret
or
mov
ljmp
push
pushf
rolb
dec
dec
add
gs
loope
or
outsb
rorl
or
sbb
mov
test
cmp
mov
mov
test
jns
push
mov
pop
repnz
cmc
xor
fwait
and
or
jp
push
clc
sbb
out
xchg
xor
xor
out
fwait
jle
inc
in
jo
add
push
es
std
mov
out
sbb
xor
jecxz
pop
xor
xchg
cs
and
push
ficomps
dec
xor
dec
dec
sbb
mov
repz
addr16
movq
push
aas
bnd
xor
daa
test
in
lret
inc
mov
lock
inc
mov
or
aam
xor
rolb
mov
sub
jmp
imul
jne
adc
cmpsb
push
cmc
add
xor
inc
imull
pop
bound
mov
pushf
xor
inc
ljmp
xchg
jne
mov
push
dec
xchg
loopne
int
fmull
sbb
add
xchg
cmp
fwait
andl
xor
and
xorb
adc
out
mov
pusha
jl
adc
loopne
orb
jne
or
mull
addr16
in
arpl
mov
ret
push
shll
push
mov
jb
cli
lods
lret
xchg
sarb
sub
ficoml
lds
out
mov
jns
out
mov
mov
movsb
fists
shr
xlat
dec
sti
cmpsb
lock
addr16
cmp
test
push
daa
jge
mov
repz
stos
push
sub
lods
das
in
pushw
das
outsl
bound
add
mov
fisttpl
pop
add
leave
ficomps
jecxz
out
push
pop
int
mov
mov
add
lcall
pop
jo
test
jb
mov
push
aad
lods
rclb
adc
ret
arpl
iret
lock
outsb
jne
in
std
pcmpgtd
jp
mov
jae
jnp
mov
cmpsb
and
add
fwait
sarb
movsl
sub
jns
pop
cmp
xchg
sti
cmp
loope
iret
dec
jns
jae
das
dec
or
sub
xor
rcrb
xlat
cmpsl
mov
sbbl
movsb
xchg
push
or
jmp
dec
imul
jle
jo
fnsave
aas
xor
and
out
sbb
or
mov
and
mov
xchg
push
ja
jnp
lods
hlt
addl
hlt
stos
repz
xlat
out
lret
mov
push
mov
aaa
xor
mov
rorb
mov
addb
rorb
outsb
sarb
pop
ret
dec
loope
xchg
das
addl
pop
sbb
imul
xchg
clc
mov
push
dec
mov
inc
mov
push
sbb
add
xchg
int
out
jne
mov
lcall
or
xlat
dec
push
pushf
cmpsl
mov
ret
adc
cli
loop
out
or
je
xor
adc
imul
mov
pop
jmp
mov
divb
push
adc
xchg
inc
sbb
fmull
adc
lcall
cmp
cmp
cmp
movsb
loopne
mov
fiaddl
enter
aaa
pop
aas
inc
inc
or
mov
sbb
xchg
icebp
mov
sub
jg
cmpsb
not
fsubs
jno
cmp
rcl
dec
xchg
push
jl
jne
cmc
ss
xchg
std
out
inc
test
gs
addr16
arpl
or
fwait
xor
in
jle
int
push
les
inc
jo
lods
jmp
mov
cmp
sbb
cld
xchg
mov
add
jno
in
xor
lods
pop
into
jo
pop
aas
pusha
out
sub
fmul
mov
lahf
sbb
fs
daa
divl
fidivrl
push
stc
sahf
xchg
add
xchg
add
out
dec
adc
ja
int
or
testb
into
movsb
cmc
pop
sahf
jge
lahf
adc
inc
sub
add
xchg
scas
push
sbb
and
inc
push
or
adc
out
mov
pusha
push
xchg
dec
sbb
inc
pop
rcll
xchg
jnp
inc
push
divl
mov
and
lea
dec
ret
or
sub
jbe
and
cmp
imul
dec
push
sub
xor
loope
push
nop
inc
lret
gs
cmpsl
je,pt
sub
imul
push
push
jmp
setg
inc
push
std
loopne
cwtl
xchg
jl
testb
lahf
dec
jnp
imul
add
stos
add
imul
mov
lods
or
gs
cmp
icebp
lds
jmp
outsb
mov
mov
or
fs
jns
add
jle
cld
pop
jno
xchg
std
notb
lahf
subb
push
adc
arpl
push
pop
mov
loop
sbb
mov
leave
loope
addl
jl
push
mov
sbb
mov
movsl
arpl
popa
sbb
and
mov
ficompl
ror
xor
movsb
inc
xchg
aaa
sub
das
out
mov
xor
add
adc
subb
sub
scas
and
insl
cmpsl
imul
cmpb
jnp
or
mov
xor
jg
outsb
and
ja
das
push
enter
jl
push
repz
mov
test
and
pop
scas
pop
pop
test
or
push
imul
pop
xor
icebp
pop
xor
out
pop
std
fs
xor
cli
xchg
stos
fiaddl
adc
cwtl
xorl
and
out
add
xchg
push
push
lock
adcl
stos
fstl
stos
ret
dec
fucomi
xchg
cld
test
dec
inc
loop
pop
dec
pushf
sar
sub
iret
pop
cltd
mov
gs
pop
inc
lock
rcrb
jge
in
lods
xchg
lret
mov
lods
push
fcomi
imul
and
lcall
repz
ret
add
shr
clc
sub
jne
and
cld
orb
xor
nop
jb
xchg
jae
cltd
orl
jne,pt
push
dec
xchg
pop
sub
mov
fcmovbe
rcrb
jns
mov
inc
out
inc
dec
aaa
inc
push
jge
cmp
xor
popl
pushf
fs
scas
jo
sub
fs
sub
loope
imul
cltd
push
mov
test
xor
lcall
mov
add
add
es
and
sub
xlat
push
outsb
mov
ret
fldt
aam
repz
lret
stos
ret
dec
aas
push
lret
dec
fisttpl
add
jge
sbb
xorl
jp
xchg
hlt
pop
out
popa
adc
fists
xor
dec
push
sbb
or
les
incl
push
fdivs
and
ret
inc
sbb
mov
fidivs
out
cmc
pop
add
mov
mov
dec
fistps
xchg
adc
or
ja
subb
lret
jne
mov
inc
fimuls
mulb
fistl
sub
sub
popa
in
mov
inc
mov
fldt
inc
in
pop
out
mov
or
scas
pop
lods
es
pop
push
movsl
mov
addb
bound
mov
mov
mov
scas
mov
lret
adc
push
divb
call
shll
lret
or
inc
fwait
mov
mov
cs
outsl
adc
fistps
aad
movsl
fisubs
ss
test
mov
dec
lea
xchg
mov
out
mov
sbbb
and
fnop
out
mov
mov
cmpsl
lcall
inc
pop
fistpl
dec
sub
cmp
popf
sbb
fsubl
in
and
adc
js
xchg
cmp
imul
fdivl
mov
inc
cmp
lods
xchg
lret
scas
loope
mov
cmp
dec
mov
leave
push
adcl
mov
jne
jmp
xchg
lea
clc
nop
int3
xor
push
lods
xor
push
mov
fwait
mov
jp
mov
sub
loopne
imul
lret
pop
shl
xchg
adc
adc
in
lret
cmp
push
pusha
sbb
pop
std
rclb
data16
adc
repnz
clc
add
mov
aam
or
xchg
notl
mov
int
xor
leave
sub
push
outsb
mov
fcomps
add
or
mov
push
lods
lods
sbb
add
es
lret
jl
repz
add
jnp
mov
xor
pushf
mov
xchg
fdivr
aam
lods
dec
cmpb
xchg
cmp
arpl
and
adc
or
imul
stc
loop
data16
cmpsl
mov
shlb
sub
jno
mov
sbb
vpsubq
xchg
inc
dec
and
dec
das
mov
movsl
jne
xchg
jb
ljmp
push
shlb
mov
inc
dec
xchg
cmp
mov
add
stos
xor
loopne
dec
lock
in
xchg
mov
dec
cltd
repz
imul
ljmp
jg
cmp
fcomp
cmp
hlt
jmp
sbb
cmp
jg
inc
lcall
outsb
dec
sbb
sbb
addr16
mov
rcrl
and
mov
pop
sbb
std
dec
mov
js
xorb
hlt
std
lds
pop
jae
xor
jno
out
sbb
jmp
pop
cmpsb
mov
and
add
stos
adc
mov
xchg
lret
clc
dec
push
pop
dec
nop
sti
outsl
add
mov
cmp
daa
cwtl
test
repnz
push
nop
sub
cmp
je
xorb
cmp
mov
pop
push
inc
sub
pushf
mov
push
fmulp
fistpll
loop
cmpsl
and
add
adcb
push
fwait
jmp
lock
xchg
pop
adc
lahf
ds
and
jmp
out
cs
nop
xchg
sbb
pop
mov
dec
mov
xchg
xlat
outsl
xchg
sar
pop
cs
dec
leave
sbb
push
or
out
pusha
das
aas
jbe
cmp
cmp
jo
jae
or
or
iret
pop
and
and
mov
mov
push
outsb
xor
mov
sub
xchg
ds
add
jp
jg
sub
cwtl
lock
inc
outsb
xor
pop
sbb
out
popf
jnp
sub
in
xor
pop
sbb
les
xor
lock
rclb
inc
sbb
add
adc
jo
mov
fsubl
lret
jl
ja
roll
mov
cmp
cs
scas
jbe
pop
enter
inc
out
popa
stc
xchg
pusha
jmp
jg
sub
add
pop
pop
inc
shlb
cwtl
scas
lock
pop
jnp
push
outsl
stos
fstps
aas
sti
inc
ja
out
out
ss
jmp
jno
and
loope
fdiv
ret
adc
pop
call
nop
mov
cmp
add
hlt
push
je
test
sti
int3
dec
test
hlt
call
pop
inc
push
incb
mov
lock
mov
mov
adc
ja
movsb
test
inc
inc
add
aas
and
aad
dec
cmp
sti
sbb
std
mov
sbb
pop
outsl
lock
cmp
mov
cmp
shr
and
sahf
bound
insb
mov
fistpll
mov
movsb
aaa
mov
cwtl
ds
mov
sarl
mov
cmpsl
inc
pop
aam
mov
sub
mov
pop
aas
test
test
das
jle
shll
out
sahf
repz
sub
nop
jno
mov
shlb
push
test
lock
pop
repz
and
sub
aaa
bound
xchg
add
mov
sub
sarl
daa
and
push
push
push
fidivrs
mov
rolb
pop
in
mov
xchg
cmp
fldcw
xchg
sbb
mov
movsl
mov
in
xchg
das
js
or
push
xchg
outsb
insb
arpl
loopne
nop
pop
and
jno
adc
stc
mov
ljmp
jbe
jge
mov
xchg
lret
adc
push
mov
out
lods
mov
scas
fimuls
in
dec
add
dec
mov
mov
mov
mov
clc
push
ljmp
addr16
jmp
not
sub
in
mov
loopne
xor
xchg
pop
pop
pop
sarb
mov
popa
lcall
lcall
fistpll
fcomip
mov
popa
adc
xchg
shr
adc
dec
xor
mov
pusha
test
adc
rorl
sub
jl
leave
dec
pop
lods
or
out
push
cmc
push
orb
test
mov
sub
aad
cmp
and
sti
outsl
loopne
je
push
sbbl
ja
xchg
mov
pop
sbb
xor
pmaddwd
ss
scas
outsl
push
push
loope
clc
das
into
loop
out
xor
inc
sbb
cwtl
popf
stos
add
fdivs
jno
mov
mov
std
stc
imul
ds
je
push
jp
leave
les
add
adc
dec
adc
fsubl
leave
sbb
je
inc
jp
jb
mov
test
push
dec
cmpsb
lods
jp
fmuls
pop
mov
sbb
mov
lods
adc
sbb
popa
push
dec
js
push
xor
or
mov
inc
cmpl
imul
cmp
fildll
mov
mov
fucomi
adcl
les
dec
jne
or
add
push
inc
repz
shlb
je
jge
push
les
movsb
xchg
insl
add
mov
dec
data16
sub
fs
fnsave
adc
std
ret
jmp
mov
and
jle
mov
jle
inc
mov
cmpsl
idivb
outsb
imul
imul
or
fwait
push
psadbw
jne
jmp
addr16
dec
dec
inc
sub
fsubl
dec
dec
push
cmpsl
stc
imul
xchg
pop
cltd
sbb
out
xchg
negb
add
xchg
inc
inc
xlat
pop
rcl
stc
push
dec
adc
lea
lods
mov
shll
inc
into
or
or
push
sbb
popf
shll
sub
cmpb
cmc
push
bound
push
insb
xrelease
inc
dec
fisubrl
daa
enter
xchg
es
adc
in
cmp
lret
add
cmpsl
jbe
in
mov
or
xorb
hlt
neg
subl
push
cmc
das
es
movsl
arpl
mov
dec
inc
mov
cmp
and
jmp
mov
in
sub
sub
leave
ret
vmread
cmp
cmpsl
ss
sbb
dec
fistps
push
fsubs
lcall
mov
js
test
rolb
int
dec
cs
std
xor
sbb
inc
cmpsl
mul
or
cwtl
gs
xchg
mov
xor
mov
jmp
lcall
aas
xchg
xor
push
icebp
repz
mov
fimull
cmp
mov
add
int
pop
pop
or
mov
xchg
stc
add
test
or
mov
fldcw
xor
push
push
xor
jae
test
xor
adc
push
dec
cmpb
dec
jne
mov
push
push
notb
cmp
ret
push
mov
inc
jae
ds
out
xor
rcrl
mov
cs
mov
mov
out
mov
or
imul
popf
pushf
nop
in
mov
sahf
and
pop
sbb
mov
inc
js
sbb
test
sbb
mov
mov
ds
ret
or
adc
dec
cmpsl
loopne
mov
movsl
cmp
iret
arpl
ret
call
xchg
cmc
push
cmp
icebp
sub
orb
jbe
mov
mov
add
jmp
into
addb
and
int
inc
push
push
jnp
sub
pmulhuw
mov
pop
loopne
jnp
mov
pop
mov
imul
add
pop
rcl
cltd
or
xor
inc
mov
test
add
dec
pop
add
hlt
inc
inc
inc
popf
mov
dec
adcl
cmp
add
loop
cmp
push
pop
insl
xchg
data16
xchg
clc
cmp
imul
jecxz
dec
loop
ja
dec
push
fsubrl
mov
arpl
test
out
movntq
xor
adc
aam
fstps
aad
cmp
mov
jmp
xlat
sti
cmp
arpl
mov
adc
sbb
cli
insb
adcl
xchg
js
scas
loopne
fidivrs
pop
rolb
sbb
std
mov
dec
mov
scas
pop
lret
inc
or
stos
es
mov
movsl
fs
cmp
inc
push
lds
ret
arpl
push
jmp
jne
inc
popf
imul
mov
inc
test
mul
pop
pop
add
out
lods
pop
stc
jno
mov
jo
dec
lods
push
adc
sbb
je
ss
dec
pop
jo
mov
es
jbe
mov
mov
cs
mov
xlat
pop
arpl
pop
mov
mov
inc
and
sbb
aam
push
push
xor
inc
lea
out
xchg
mov
and
cmpb
push
jb
stos
movsb
ror
fcomip
jge
mov
dec
jne
and
sub
imul
ret
xor
dec
fxch
incl
xor
sub
repz
mov
lret
shrl
jb
sahf
ljmp
gs
mov
cld
mov
sbb
popa
or
int
aas
jae
push
xor
mov
push
push
xchg
add
clc
push
inc
repz
ljmp
sarl
aaa
push
fistps
jbe
loopne
or
imul
test
cli
jb
mov
adc
fstpt
pop
jnp
jp
sbb
dec
movsb
dec
adc
mov
lea
sbb
insl
pop
jmp
or
mov
int
repnz
add
push
imul
jp
fdivl
jbe
enter
dec
out
mov
sub
jae
inc
inc
cmp
insb
cmp
mov
cmpsl
cmp
in
ret
ja
or
adcl
insl
jns
movsl
aam
pop
push
push
fsts
loop
and
jl
in
insl
dec
jmp
jbe
lret
pop
ss
movsb
pop
mov
xor
jecxz
mov
cld
inc
leave
js
mulb
xor
mov
shrl
pop
arpl
lahf
lods
inc
fstpt
aad
ja
mov
das
and
adc
mov
xchg
fadds
mov
outsl
inc
repnz
arpl
adc
mov
mov
outsb
sbb
pop
pop
sub
push
add
lahf
mov
pop
xor
jg
add
shll
stos
mov
jmp
pushf
or
lock
das
xchg
testb
inc
jns
pop
dec
and
mov
jbe
movsb
xor
push
adc
aas
mov
sahf
push
and
dec
push
adc
ljmp
adc
iret
es
push
ss
xchg
into
sbb
mov
mov
fs
insb
pop
imul
push
shl
nop
adc
lods
aaa
push
test
sub
ljmp
sbb
mov
mov
or
push
mov
add
pop
xchg
jb
in
or
test
das
ficompl
std
or
call
sahf
out
data16
cmp
sub
add
data16
stos
popa
test
repz
out
add
outsb
js
pop
das
fmuls
push
dec
xor
scas
push
cmp
mov
mov
and
xchg
sbb
mov
sub
movsb
jle
scas
inc
movsb
shll
jb
fstl
gs
xchg
mov
sbb
andb
pop
adc
jne
leave
jle
inc
int
sti
clc
mov
lret
xlat
mov
sbbl
jmp
pop
add
out
out
mov
sub
std
xor
lock
cli
aas
in
or
xor
mov
or
inc
pop
mov
mov
stos
and
popf
bound
adc
int
into
mov
jb
rolb
addr16
lods
movsb
jp
jnp
push
xchg
out
cmp
xchg
jle
jg
push
sbb
cwtl
ds
sub
lods
lcall
icebp
mov
push
xchg
or
and
xor
and
jae
test
adc
loop
push
mul
dec
pop
sbb
add
loopne
test
push
test
decl
or
cmc
mulb
popf
mov
stc
outsb
mov
dec
xor
nop
test
xchg
jne
pop
mov
pop
stos
sub
pop
jle
and
cmp
pushl
xchg
test
in
sbb
outsl
add
add
and
mov
adc
mov
xor
or
loopne
cli
fwait
sahf
shrl
pop
shlb
sub
test
je
mov
push
lds
hlt
test
lcall
sub
adc
dec
into
mov
in
mov
push
jbe
mov
clc
lcall
add
divl
add
xchg
mov
aaa
mov
fstp
mov
mov
inc
pop
mov
inc
mov
int3
xchg
test
dec
fsubrs
incb
cs
lock
sbb
test
imulb
orb
lcall
mov
mov
cmpsl
test
outsb
idivl
dec
mov
mov
push
test
xchg
xlat
ds
cltd
and
lods
mov
sbb
or
push
add
inc
movsb
or
xchg
enter
xlat
and
loop
inc
inc
mov
mov
push
cmp
daa
push
jbe
icebp
repz
daa
xchg
xor
or
movb
mov
jp
mov
xchg
cmpsl
pop
sbb
jge
sarb
dec
inc
mov
mov
scas
out
or
xor
aaa
fcompl
push
pop
flds
pop
push
mov
adc
add
cmpsb
inc
mov
mov
stc
xchg
cmc
mov
cli
xchg
inc
jne
xor
cmpl
sahf
int
add
rclb
ror
outsb
and
mov
and
es
imul
or
ds
and
stos
aad
push
dec
stos
insl
imul
dec
mov
jmp
and
jp
in
jo
xchg
sub
int
loopne
call
inc
xchg
loop
imul
icebp
push
lock
xor
cmp
xchg
and
shlb
lret
jns
clc
add
call
fcompl
sbb
mov
mov
inc
mov
lahf
sbb
fisttpl
add
lods
imul
mov
scas
pop
mov
push
mov
adc
jmp
test
cwtl
sub
cmp
jecxz
push
add
xor
mov
mov
adc
push
faddp
mov
xor
out
xchg
inc
and
out
xchg
dec
loop
dec
jmp
mov
and
mov
rcl
decl
stos
mov
dec
jl
popf
mov
adc
in
in
sahf
mov
inc
xchg
cmp
and
ss
xlat
pop
stos
rorl
bnd
testb
testb
pop
push
jmp
sbb
cmp
xchg
mov
mov
leave
adc
outsb
stos
call
adc
jg
cmpsb
jnp
repz
into
das
push
clc
cmp
xlat
lods
mov
inc
push
ss
popa
jp
adc
mov
pop
lret
or
pop
daa
in
jmp
push
adc
addr16
push
xchg
dec
icebp
push
add
insb
in
ljmp
add
sti
pushf
jns
add
push
xchg
xlat
nop
mov
cmp
lock
adc
jg
inc
movsl
xor
sub
repnz
mov
or
dec
dec
push
push
rcl
les
pop
jmp
lahf
aas
jns
mov
sbb
push
xchg
or
std
aas
fwait
jbe
jmp
mov
mov
cmp
les
ljmp
add
dec
sbb
mov
mov
cltd
lock
test
mov
xchg
sbb
cmpsl
mov
dec
sbb
adc
inc
mov
daa
orb
iret
loopne
sbb
lock
test
sub
lods
out
das
lret
clc
cmp
outsb
push
daa
push
mov
pop
sbb
or
pusha
shl
inc
lock
test
loop
cmpl
inc
bound
mov
mov
inc
jg
pusha
sbb
adc
icebp
pop
vmovaps
adc
daa
pop
sahf
mov
mov
lret
xchg
jo
mov
or
mov
test
movb
push
adc
std
or
pop
lahf
dec
pop
pushf
data16
inc
dec
cli
cmp
xor
lcall
popa
dec
add
daa
data16
les
cmpsl
cmp
sbb
imul
dec
mov
jne
add
add
adcl
popa
or
mov
cmpsl
adcl
cmp
cmp
mov
mov
aad
push
loopne
test
icebp
ljmp
and
mov
stos
fsubrs
mov
sti
mov
into
push
xor
xor
fdivs
fildll
cmp
push
mov
clc
jmp
mov
mov
mov
aad
mov
fidivrl
clc
std
inc
push
pop
inc
loopne
dec
inc
movsl
sub
outsl
addr16
fs
adc
mov
out
cmp
gs
stc
xor
jb
es
addr16
popa
out
jbe
je
popa
pop
cmp
mov
rcl
sbb
mov
dec
jp
and
dec
cmpsl
xchg
out
test
repz
jmp
pop
mov
mov
rcl
add
dec
push
xor
ljmp
mov
pop
rorb
leave
jne
mov
sub
fcompl
cmpsl
nopl
arpl
int3
mov
test
lahf
stos
or
lcall
pop
and
dec
push
addr16
xchg
mov
pusha
add
mov
jne
leave
lahf
sub
ret
sarl
ljmp
insb
inc
mov
cmp
adc
sub
and
cmpsb
or
inc
jle
fildll
nop
dec
cwtl
adc
jno
and
aad
test
dec
xor
add
jne
mov
loope
jne
decl
jl
test
inc
jl
pushf
idivb
cld
jo
xorb
into
cmp
and
imul
adcl
fwait
mov
inc
cld
and
lock
mov
pop
je
cltd
jmp
xchg
fwait
xchg
cmpsl
jne
mov
fldenv
cld
jmp
cltd
repnz
mov
mov
ret
cmc
mov
ja
xorl
icebp
sub
in
out
in
mov
mov
movsl
dec
jle
pop
shrl
nop
fists
sahf
loopne
inc
rorb
lahf
mov
cmp
lsl
mov
pop
lods
mov
jl
or
add
cli
mov
dec
push
sahf
ret
xchg
shr
or
fistl
js
cli
mov
mov
in
andb
ss
loope
sub
clc
test
dec
rcll
jge
push
cmc
pop
mov
jmp
sbb
mov
in
xor
sbb
xchg
in
or
mov
ds
ret
xor
pop
xor
sub
mov
repnz
inc
dec
pusha
dec
inc
push
movsb
aas
adc
test
jl
sbb
mov
aas
in
les
inc
xor
filds
cmc
adc
sub
pop
sbb
push
mov
incl
sahf
inc
dec
mov
jbe
push
cmpsb
push
mov
lret
in
or
fwait
sbbb
and
or
mov
cltd
dec
inc
arpl
pushf
shl
push
ret
lds
testl
jl
loopne
push
movl
xor
sbbb
daa
sbb
lret
scas
in
cmp
subl
pop
mov
adc
add
xchg
outsl
dec
sub
dec
loopne
sbb
in
mov
inc
mov
into
cltd
rcrl
lods
sub
push
and
repnz
inc
mov
mov
sti
sub
cmp
cmp
jae
push
xor
loopne
sbb
and
and
out
jno
adc
xchg
jne
fisubrs
xchg
fwait
xor
mov
shrd
stc
dec
push
movlps
sub
aas
in
or
mov
ret
sbbb
sbb
mov
test
fnstcw
dec
jge
stos
adc
das
lods
lcall
jb
mov
or
dec
pop
insl
lahf
ficoms
retw
popa
subl
fisttps
mov
ds
mov
sub
jmp
mov
mov
fldenv
test
leave
in
dec
or
push
cmpb
jno
add
cmp
xor
fsubp
push
scas
sbb
inc
or
add
xchg
movsl
aad
push
psubq
inc
int3
fs
mov
aas
cmp
push
dec
cs
pop
out
aaa
mov
mov
rclb
test
xchg
out
or
add
notl
add
inc
mov
xor
and
jp
idivl
mov
push
adcb
mov
lcall
sub
jge
pusha
out
inc
cli
out
adc
inc
dec
xchg
pop
mov
push
push
cmpsl
mov
sti
rcl
imul
lret
cs
sub
inc
push
rolb
int
mov
out
lret
xchg
mov
andb
pop
cmpsb
data16
jae
mov
cld
ficoml
int3
sub
sbbl
lock
push
mov
andl
out
sub
aaa
rolb
in
pop
stc
mov
mov
inc
jge
xchg
xor
inc
xor
ds
adc
xchg
test
sbb
pop
gs
sub
jmp
or
jb
xor
jnp
push
or
inc
inc
sbb
add
jbe
stos
addr16
adc
adc
test
xor
scas
push
and
sbb
pop
mov
sar
xchg
in
leave
adc
repz
push
add
test
icebp
dec
jae
or
mov
pop
test
push
fisttpll
xchg
pop
movsl
xchg
stc
xor
inc
inc
in
aad
and
pop
rorl
sub
xor
aas
push
fidivl
outsl
pop
pop
push
je
out
jb
jno
xorb
adc
fidivrl
jb
loopne
test
pop
rep
lods
lods
and
fsubs
xchg
into
sub
paddsb
or
sbb
push
fsubr
fwait
push
push
mov
sbb
int
lods
cmpsl
push
dec
xchg
cmpsl
sub
test
mov
sub
outsb
jle
push
iret
and
push
cmp
or
bound
loopne
es
xchg
sahf
shrl
and
das
xchg
jns
ret
scas
fs
jns
mov
insb
mov
popa
cmp
inc
arpl
enter
shlb
arpl
int3
andl
test
mov
xchg
mov
pop
jp
cmp
inc
out
jne
fwait
inc
dec
xlat
and
pop
push
mov
enter
jge
inc
inc
adc
push
lods
mov
fwait
xlat
sti
andb
sbb
mov
pop
and
xchg
xor
sub
mov
test
loop
adc
ficomps
cmp
cwtl
push
stos
cmp
pusha
push
jge
roll
nop
adc
xchg
test
repnz
xchg
cmc
outsl
imul
xor
push
repnz
cmc
leave
pop
fidivs
cmpl
cmpsl
cmp
mov
jne
inc
jmp
out
jmp
aad
sbb
lret
repnz
ret
adc
ss
xchg
cwtl
push
lods
ds
test
push
inc
xchg
sub
cwtl
pop
cmp
mov
mov
leave
cmp
adc
bound
or
or
and
repz
adc
xchg
ss
sub
mov
out
clc
mov
sbb
enter
cmp
mov
sti
pop
jb
sub
test
mov
pop
jnp
sbb
sbb
push
jo
pusha
cmp
outsb
test
imul
addb
lock
sarl
gs
add
repnz
iret
in
insb
sub
push
ja
pop
adc
lret
pop
scas
inc
mov
or
add
mov
cwtl
scas
mov
add
push
jbe
fnstsw
out
sbbl
add
and
jge
mov
repz
call
add
sahf
cwtl
add
je
adc
ss
jmp
hlt
add
adc
mov
scas
stos
mov
mov
cmp
xchg
out
push
aad
lods
push
popa
sbb
or
adc
dec
xor
push
push
jge
loop
push
loopne
add
adc
es
and
xor
aad
adc
xlat
cs
ja
jge
sub
jbe
insb
xchg
js
test
test
scas
into
sti
lock
xchg
pusha
mov
shlb
xor
subl
mov
mov
loope
xchg
pop
dec
mov
mov
frndint
mov
insl
inc
fstps
xchg
sbb
in
inc
and
sahf
jmp
ret
mov
inc
lea
sahf
outsb
push
pusha
test
sub
hlt
jno
les
cwtl
and
leave
outsl
movsl
adc
addr16
push
dec
add
xchg
cld
scas
cld
jne
pop
das
and
cltd
lds
lahf
lea
jg
mov
jnp
insl
in
imulb
sub
incb
xchg
xor
mov
scas
add
mov
jo
xchg
aad
loop
or
shll
jmp
sbb
outsb
lods
outsl
cmp
iret
sbb
repz
outsl
gs
addb
mov
inc
cmp
push
push
push
push
push
lret
cmp
lea
push
sahf
ljmp
nop
popf
shlb
cmp
and
xor
das
cmp
ret
xchg
or
inc
pushf
je
xchg
sbb
bnd
rcrb
in
pop
cmp
jle
xchg
xor
cwtl
lcall
psubusw
add
xchg
fnstcw
xchg
mov
pushl
pop
pop
xchg
mov
xor
fnstcw
flds
dec
hlt
push
push
cmc
sbb
mov
cwtl
sub
add
pop
xchg
mov
ret
aas
leave
mov
rcll
in
pop
cmc
ss
into
mov
in
xchg
shrl
xchg
adc
call
jmp
gs
pop
dec
fs
sub
lds
mov
ds
jo
ds
subb
push
icebp
in
pop
cwtl
jg
testl
add
lds
jnp
mov
pop
mov
repnz
adc
inc
xchg
mov
and
inc
pushf
std
pop
push
nop
cs
sbb
mov
jno
sbb
stos
mov
xor
test
xlat
push
jb
repz
icebp
out
adc
adc
sbb
sub
cmp
pop
sbb
xchg
xchg
outsl
mov
xor
shll
data16
sub
xor
inc
loope
push
add
out
popf
sub
mov
mov
xlat
jmp
add
adc
out
adc
and
mov
shl
faddl
push
mov
inc
sub
lcall
aad
outsl
out
daa
push
jne
fnstsw
pop
pusha
out
or
cld
mov
leave
cmpsl
decl
xlat
mov
push
mov
mov
cwtl
es
nop
dec
adc
test
testb
inc
icebp
movsb
imul
adc
daa
ljmp
dec
jl
es
add
jp
mull
xchg
test
rcl
push
ret
dec
xchg
push
and
mov
jns
mov
enter
pop
mov
mov
and
mov
les
outsb
jmp
in
movaps
inc
cmp
lret
pop
push
push
jne
pop
mov
sbb
mov
in
mov
icebp
out
jmp
or
or
jmp
sarl
into
adc
cmp
xor
cli
stos
and
mov
or
dec
push
dec
ljmp
pop
inc
rcrl
xor
stc
xchg
stos
pop
jge
faddl
xor
jge
popa
cli
xchg
jl
adc
jns
cltd
rolb
mov
add
jb
sbb
ss
fadd
test
arpl
cmp
xchg
in
sub
adc
cmc
int
mov
je
ljmp
out
pushf
pop
adc
rclb
inc
aas
push
pop
dec
loopne
in
sbb
push
inc
adc
push
jne
sbb
mov
cs
pop
add
int3
dec
pop
xchg
fstpt
push
mov
mov
repnz
dec
xchg
aas
dec
fisttpll
dec
scas
mov
sbb
push
repnz
insb
mov
lea
fcom
or
inc
ds
sub
xchg
cmp
and
add
movsl
aas
in
call
iret
fbld
daa
rcll
jmp
push
add
mov
add
xchg
sarb
es
lods
cmp
jno
jge
and
xchg
jmp
arpl
xchg
push
xchg
push
pop
and
aaa
fadd
adc
xchg
mov
outsb
adc
cs
push
dec
pop
divb
jecxz
xlat
shll
jmp
and
leave
pop
sbb
xchg
adc
lcall
test
push
sbb
mov
push
sbb
sub
sub
mov
xor
jo
sub
stc
xor
pop
xchg
cmc
mov
adc
pop
jbe
jns
adc
ficoms
popa
xchg
mov
or
mov
ds
leave
mov
popa
mov
aas
push
movsb
xchg
rcrb
int
xchg
xchg
and
mov
mov
ret
or
outsb
mov
call
dec
ret
xlat
aaa
pop
fwait
nop
lret
xchg
mov
sbb
dec
jno
sub
es
out
mov
int3
sub
push
sbb
mov
push
sahf
jmp
inc
fs
test
jo
sub
movsb
pushf
cs
lods
cmpsl
pop
jnp
xchg
ret
mov
and
loope
or
pusha
shl
sub
jb
xchg
pop
add
xchg
dec
cs
push
lfs
xchg
mov
jbe
push
movsb
cltd
xchg
jg
incb
dec
add
mov
leave
les
sbb
and
in
xor
jne
fldt
inc
subb
mov
into
sahf
fs
movsb
dec
or
pop
ret
jmp
fstl
add
adc
mov
lcall
fs
hlt
lcall
lahf
cmp
mov
sbbl
cs
loope,pt
jb
push
inc
adc
cmpsb
add
aas
out
aad
lods
aad
out
daa
into
push
sub
push
cmp
sub
mov
arpl
push
lock
mov
cmp
sbb
mov
mov
jp
push
je
cmp
lcall
mulb
imul
inc
xlat
dec
test
mov
jo
mov
or
jg
hlt
dec
cltd
mov
sub
add
and
dec
adc
or
ja
xchg
xlat
mov
in
and
cmp
sub
cmp
add
fcmovu
popa
cs
mov
bswap
out
test
cmp
xchg
orl
lahf
mov
mov
incl
add
push
insl
or
cmc
pop
cli
icebp
or
cwtl
outsb
sahf
fsubl
push
mov
loop
lcall
cld
push
mov
xchg
cmc
add
mov
stc
addr16
adc
sbb
arpl
push
faddl
int
pop
out
dec
or
add
xor
stc
inc
mov
sub
inc
mov
dec
pop
movsl
stos
loop
add
and
iret
mov
mov
xchg
sbb
movb
mov
inc
pop
or
faddl
rolb
fildll
pushf
mov
xlat
sbb
dec
cmp
push
jmp
mov
popa
adc
mov
arpl
inc
lea
mov
lock
sbb
or
cmp
pop
and
in
mov
fldt
or
in
cmp
or
in
xchg
in
aas
pop
hlt
in
push
sbb
cmp
mov
or
into
sbb
dec
in
push
ret
xchg
and
dec
fstpt
divb
add
cwtl
mov
xlat
cmpsl
inc
ja
movsl
push
and
inc
xchg
rclb
scas
adc
movsl
in
jmp
lods
mov
push
sti
cmp
leave
shl
subb
push
rol
cmp
cmp
xor
or
sarl
jae
je
or
cmp
outsb
inc
shll
pop
dec
mov
test
test
fs
xor
in
aaa
aam
call
pop
xchg
ret
lods
insl
and
ret
lret
rclb
xor
pop
jae
test
xchg
cltd
mov
and
lret
xchg
das
sub
mov
lods
iret
add
mov
fisttps
lcall
test
adc
ss
mov
mov
sub
dec
dec
bound
out
inc
or
cmpb
xchg
pop
leave
inc
mov
jae
shrb
cmp
add
mov
inc
mov
out
adc
cwtl
shlb
sub
mov
adcl
pop
or
dec
xchg
negl
sub
xchg
mov
jno
sbb
jne
stc
aam
mov
push
jmp
and
stos
or
cmp
jl
mov
sub
pop
aas
stc
sarl
test
push
or
sub
lods
rorb
aam
fists
cmp
imul
add
outsl
mov
pop
fwait
clc
jne
cltd
mov
les
jae
pusha
mov
ja
call
jo
addr16
insb
ret
into
ret
clc
jb
loopne
inc
sub
into
dec
adc
sahf
into
jae
xchg
pushf
popf
xor
mov
leave
ret
sbb
int
out
inc
adc
mov
lahf
rorb
mov
jns
sbb
fisttpll
jns
int
fimuls
test
loope
sarb
sahf
ss
rcr
or
gs
stc
and
or
xchg
sbb
xchg
sbb
sbb
je
pop
add
mov
inc
mov
dec
mov
fwait
pop
xor
rcl
test
cmp
popl
pop
jbe
add
cmpsl
shlb
popa
mov
rcrl
mov
xchg
cmp
push
push
add
mov
mov
into
xchg
fdiv
loop
test
mov
and
push
mov
mov
xchg
xor
adcb
jmp
inc
push
stc
out
sarb
mov
js
add
lcall
inc
repnz
ja
add
jmp
mov
dec
fwait
add
mov
imul
stc
sub
int3
out
aaa
push
mov
iret
lret
mov
or
out
sbb
mov
pop
enter
mov
inc
imul
pop
adc
icebp
call
adc
fucomp
in
nop
cld
push
pop
mov
mov
adc
fs
mov
push
push
mov
mov
call
dec
inc
mov
sub
push
pop
jl
std
inc
cmpl
cld
jne
dec
sub
std
loopne
ficoml
js
loop
mov
popw
fsubs
arpl
sbbb
inc
inc
xchg
neg
mov
loopne
push
xorb
rorl
pop
dec
mov
test
loop
pop
dec
sbb
cld
dec
sti
jp
add
mov
push
and
pop
jb
and
lahf
sbb
inc
cmp
gs
lods
mov
push
lcall
add
das
inc
mov
xchg
jae
push
or
aam
pop
or
pop
loope
cmpsb
lcall
add
add
push
iret
xchg
sub
ret
stos
pop
jbe
imul
lds
xchg
jnp
daa
clc
fidivrs
cmpsb
lock
mov
test
sub
imul
shlb
push
decl
popa
scas
cmp
mov
jne
inc
outsb
mov
sti
jns,pn
hlt
cwtl
mov
sti
call
or
or
aaa
adcl
sbb
vandps
repnz
icebp
lcall
sbb
ljmp
pusha
pop
sti
int
fiadds
out
loopne
jne
pop
mov
add
cli
dec
jge
lahf
test
adcb
std
cmp
pusha
jb
jecxz
add
test
adc
add
xchg
pmulhuw
gs
and
mov
and
pop
cltd
xchg
loopne
pop
cs
jnp
pop
adc
and
pop
ret
mov
xor
addr16
int3
xchg
fildl
insb
xchg
mov
test
fisttps
cwtl
aaa
or
mov
ret
mov
loop
xor
es
movsb
mov
adc
push
adc
mov
xchg
sbb
neg
and
mov
or
add
or
aas
cli
sub
cmc
cmovb
andb
or
popf
int
in
out
popf
cmp
push
enter
cmp
cmpsl
arpl
jb
fstl
loope
inc
add
dec
in
int
cld
mov
sub
psllw
test
and
xor
and
xor
jae
rorb
notb
and
mov
iret
push
std
inc
mov
xchg
mov
pop
adc
push
enter
sub
pop
ret
and
int3
sbb
ret
out
push
out
gs
sub
ljmp
ljmp
fwait
arpl
out
lock
arpl
xchg
pop
inc
gs
pop
hlt
and
fadds
lahf
add
fsubl
fadd
int3
and
jecxz
aam
inc
lods
outsb
insb
fcoml
loope
pop
clc
aas
sti
wrmsr
or
mov
js
or
dec
mov
out
test
inc
add
shl
pop
mov
cmp
inc
push
sarl
jge
mov
popf
xor
fisubrl
out
ret
mov
imul
add
cmpsb
iret
das
sahf
sbb
add
test
jb
sub
cmp
mov
xchg
cmp
mov
mov
xchg
mov
mov
xor
loope
mov
ljmp
sbb
in
mov
inc
xor
enter
mov
pushf
daa
jecxz
sub
jo
push
cmp
lods
and
sub
rorl
mov
out
in
adc
inc
jbe
lcall
jno
mov
mov
sub
add
add
leave
cwtl
mov
lret
std
insl
imul
jo
fldl
rorb
jp
and
xor
add
pop
aam
sti
push
mov
arpl
gs
xchg
mov
cld
add
sbb
cmpsb
or
and
and
mov
xlat
mov
sub
mov
int3
dec
jp
sti
push
shrl
cmp
mov
bound
fs
sti
xchg
inc
jg
mov
jp
adc
xor
mov
sub
in
lea
aam
fcompl
data16
mov
ret
pop
daa
adc
mov
ljmp
jg
es
sbb
or
xchg
cmpsb
fisttps
popa
into
mov
jmp
pop
test
push
sub
dec
sub
add
ret
inc
ret
and
in
jae
add
fsubrs
inc
mov
popf
xchg
inc
out
mov
jg
xchg
je
jecxz
dec
inc
and
mov
xor
mov
jo
cmp
dec
and
repnz
xlat
addr16
out
push
aas
stos
ljmp
out
ret
sbb
mov
mov
mov
je
lods
arpl
in
into
insb
fwait
jns
enter
xor
sub
insl
push
lods
xchg
jne
fcompl
mov
mov
jns
cwtl
sbb
jle
sti
arpl
pushf
push
cmp
xlat
inc
or
imull
cmp
mov
pop
addl
xlat
je
fs
sub
das
mov
es
cmp
test
mov
push
pop
dec
imul
and
mov
add
or
mov
pusha
outsl
cmp
mov
adc
mov
mov
add
loopne
aaa
push
sbb
shl
jle
mov
jle
and
movsl
inc
paddd
mov
test
test
inc
rorb
mov
or
xchg
lea
subb
push
xor
arpl
popa
cmp
out
aam
push
arpl
fcoms
pushf
push
jg
mov
mul
in
mov
jp
gs
sbb
mov
fists
nop
or
dec
movsb
jne
rcl
cmp
mov
push
sub
jmp
pusha
jmp
addb
pop
and
push
xlat
jge
insb
push
in
and
fsts
mov
pop
jmp
mov
mov
jo
aam
adc
pop
inc
mov
mov
vpxor
imul
testb
popf
enter
lods
shll
outsb
cmp
sbb
movsb
dec
fstps
jne
and
xchg
stc
test
je
rcll
test
or
mov
or
orb
mov
jg
test
mov
dec
inc
or
lods
mov
dec
jmp
mov
idiv
fmuls
xchg
sbb
mov
aam
dec
test
pop
xorb
std
sbb
mov
xor
aaa
inc
inc
sti
dec
imul
in
cmp
mov
cmp
or
pop
push
push
mov
roll
nop
cli
inc
aad
fdivrl
ds
inc
mov
mov
inc
out
fbld
push
loop
pop
push
cmp
pop
addr16
inc
stos
push
mov
lods
mov
stos
imul
adc
sbb
push
ret
cmp
dec
add
loopne
jmp
fldt
xor
pop
pop
hlt
pop
leave
push
clc
pop
mov
ret
ficoms
cld
jne
out
add
cwtl
inc
into
inc
sbb
xor
in
je
pusha
movsb
sub
repnz
loop
test
cmp
test
cwtl
dec
cmp
lret
push
nop
in
push
or
add
aad
mov
shr
mov
movsl
and
addr16
adc
in
ljmp
pop
sub
lods
mov
dec
lret
pop
popf
mov
xchg
aaa
test
imul
mov
leave
pop
ljmp
arpl
fucomip
mov
jbe
sbb
lret
sbb
or
and
push
dec
xor
iret
sub
fs
inc
push
fcmovu
cs
mov
sub
imul
lcall
inc
addl
and
mov
pop
icebp
mov
and
xor
adc
sub
aam
mov
fs
arpl
mov
push
cwtl
je
mov
in
test
shl
in
scas
jp
push
pop
xchg
xor
das
lret
dec
jge
in
ret
fdivl
aam
cmp
outsl
jmp
lcall
jle
jmp
push
jmp
push
rol
stc
lret
or
mov
test
mov
into
jmp
fsubrs
and
pop
cmpsl
ret
push
ljmp
inc
insb
inc
seta
lret
sbb
scas
and
dec
movsb
enter
and
pop
push
pop
call
mov
mov
cs
adc
jbe
jecxz
and
jmp
mov
mov
sbb
dec
cmp
test
jl
inc
add
cmp
es
xor
out
cli
dec
out
es
subb
call
es
push
scas
sbb
and
push
scas
lret
xor
int3
mov
sarl
dec
xorb
ds
add
stc
bound
xor
xchg
add
sbb
stos
fcoml
push
in
xor
sbb
out
repnz
icebp
mov
xchg
add
mov
ds
adc
lahf
add
add
mov
sbb
adc
pop
leave
xchg
pop
jae
popa
jge
in
and
xor
std
mov
jns
fmulp
dec
popf
dec
inc
inc
repz
into
imul
or
or
adcb
inc
mulb
ret
jg
icebp
dec
and
ja
jge
imul
pop
inc
imul
push
lods
ljmp
outsl
data16
fs
dec
fnstsw
int3
sub
sbb
test
in
push
or
xor
gs
lret
jbe,pn
push
mov
dec
mov
int
ret
inc
dec
pusha
pop
ss
sub
in
mov
inc
mov
and
scas
hlt
in
mov
dec
daa
mov
je
jg
sbb
xchg
ja
out
fbstp
dec
movsb
push
cmp
lcall
push
mov
inc
fidivrl
xchg
push
in
shlb
lods
insl
movsb
cmp
ja
jae
in
out
je
or
or
loopne
in
cmpsl
mov
outsb
clc
and
dec
mov
sbb
add
lahf
add
mov
jbe
add
pop
test
mov
shrb
outsl
mov
js
adc
pop
adc
js
add
sub
cmp
ret
sub
jne
mov
pop
mov
jnp
repz
cmp
orl
movsl
fidivl
shl
mov
arpl
xlat
in
stos
out
dec
cwtl
test
jbe
lds
ljmp
in
pop
mov
popa
icebp
insl
loope
hlt
mov
xlat
jo
andl
ret
sub
mov
rol
sub
pushf
add
cmp
lret
shrb
jns,pn
leave
sub
mov
fnstenv
mov
dec
push
addr16
fmull
jb
stc
and
jecxz
push
pmovmskb
adc
xor
pusha
xchg
dec
sub
cmp
nop
insl
inc
aas
pop
int3
sub
out
add
lock
add
push
push
out
add
pop
inc
xlat
pushl
mull
adc
jp
and
mov
add
add
add
imul
xchg
movsl
cmp
jmp
sbb
cwtl
or
fs
pusha
mov
sbb
insl
pop
inc
lods
sbb
xchg
stos
pop
mov
sahf
aam
sbb
pop
subb
dec
loope
mov
rcrl
decb
sti
repnz
mov
test
scas
fcos
std
out
or
cmp
jo
jne
or
cld
xchg
sahf
add
movsb
outsb
loop
mov
mov
out
out
fisttps
lods
dec
je
lret
jmp
sub
push
rcr
fst
dec
xchg
je
sbb
or
mov
xchg
bound
sbb
fsubp
in
test
fmul
mov
push
stos
sub
ds
nop
sbb
std
fadds
pop
gs
bound
push
loopne
pop
mov
xor
mov
rclb
clc
jecxz
sub
xchg
cmpsl
out
xchg
push
push
push
xchg
sub
scas
jns
leave
daa
dec
pop
lret
push
aaa
aam
ljmp
ja
jnp
xchg
dec
mov
les
dec
hlt
je
pop
push
cmpsl
or
jp
in
lahf
inc
aaa
mov
fsubrs
fcmovu
xor
push
fdivr
cmp
pop
and
cmpsb
in
push
shlb
jp
rol
ja
in
ret
cli
and
int
mov
push
cltd
inc
pop
enter
adc
fldenv
mov
mov
jg
add
aaa
mov
mov
imul
cmp
lods
cld
sbb
mov
enter
adc
cli
addr16
dec
sub
xchg
pop
push
dec
cmp
sar
mov
pop
in
clc
out
cmp
jl
add
cltd
aam
cli
mov
jecxz
mov
pop
std
add
and
sbb
sub
xchg
subl
cwtl
pusha
jmp
outsb
jnp
cmp
jns
aaa
xchg
add
jecxz
js
inc
orb
xor
xchg
leave
lret
mov
shll
inc
pop
fdivrp
mov
push
jmp
xor
push
adc
dec
dec
je
fwait
push
outsb
mov
pushf
repz
add
jbe
scas
clc
dec
jecxz
fucomip
mov
gs
cs
in
mov
mov
add
mov
mov
clc
out
sarb
lret
or
adc
xchg
cwtl
pop
ret
add
and
sub
pop
aam
inc
and
das
push
mov
push
fildl
lods
mov
sbb
aaa
push
imulb
jbe
adc
bound
sbb
out
addr16
enter
push
push
faddp
pop
fisttps
push
xor
orb
pop
daa
roll
adc
mov
or
mov
ja
scas
fdivp
shrl
push
jg
movsb
add
xlat
mov
dec
in
add
negl
dec
inc
aaa
xchg
fistl
xchg
sub
dec
addl
jmp
add
out
notb
push
repnz
sub
icebp
sarb
dec
mov
gs
imul
jle
scas
jle
push
imul
out
ja
add
sbb
pop
xor
xor
pop
aaa
inc
cmp
and
out
stos
fdivs
xor
test
lret
mov
enter
lods
and
rolb
xchg
inc
inc
jne
mov
mov
lcall
stos
and
test
adc
lock
mov
aas
pop
les
dec
addr16
or
imul
test
lds
and
call
cmp
xor
jmp
jbe
inc
dec
call
insl
xor
adc
lds
push
cld
or
pusha
sub
or
sbb
cmc
out
addr16
add
call
mov
adc
jecxz
jecxz
xchg
loopne
mov
jmp
mov
aaa
sahf
push
rclb
stc
cmp
aas
cli
push
mov
loopne
dec
aad
mov
mov
mov
and
ficompl
adc
mov
aaa
ret
pop
stos
sti
mov
lcall
push
sahf
push
dec
and
lret
dec
fnstcw
xor
cltd
jmp
pushf
sarb
xor
cmp
mov
insb
cmp
sub
loope
fistpll
push
pop
jecxz
test
xorl
sub
jae
mov
lods
mov
adc
push
sub
jmp
call
xchg
frndint
mov
and
push
lods
sbb
in
shlb
adc
cmpsb
scas
mov
jb
push
pusha
dec
out
push
pop
inc
push
cmp
push
scas
add
dec
icebp
adc
test
mov
ret
pop
cs
mov
inc
lret
frstor
pop
mov
jp
adc
cwtl
arpl
push
xchg
shl
int
cs
mov
jmp
stc
pop
adc
sbb
xchg
mov
roll
aas
pusha
or
fidivs
xchg
aam
and
movsl
xchg
in
and
adc
pop
ds
dec
fdivp
dec
lcall
loopne
and
repnz
cmpsl
int3
sub
jns
cmp
add
ljmp
jb
in
test
sbb
jp
fisubs
rcrl
ja
mov
and
xchg
ss
scas
lret
xorb
pop
sub
out
jns
fcmovb
inc
stos
stc
jmp
cmp
jae
sub
push
sbbl
rolb
mov
lds
shlb
sarl
dec
pop
push
fisubrs
movsl
mov
outsb
xchg
cwtl
fs
loope
orb
pop
call
add
pop
push
adc
dec
cli
sbb
dec
inc
cmp
dec
and
adc
adc
jecxz
pop
cwtl
adc
mov
cmp
sarl
xor
ss
dec
pop
les
imul
out
xor
jecxz
imul
sahf
decb
in
push
mov
sbb
mov
pushf
repnz
push
test
cwtl
clc
pushf
fcoms
push
push
add
push
inc
fdivrl
out
jge
or
mov
in
adc
add
mov
cmp
ret
cmp
insl
pushf
ljmp
stc
sbb
adc
jo
cld
jp
push
in
mov
cltd
jne
sti
outsl
adc
pop
cmpsb
cmpl
cmp
pushf
pop
ja
inc
pop
aas
cmp
cli
das
aam
jbe
aas
mov
daa
fucomi
mov
sbb
jecxz
ljmp
pop
mov
fs
vpsubsw
sbb
mov
sahf
in
out
daa
aad
icebp
mov
ss
movsl
out
mov
cmp
icebp
rorl
mov
sbb
pop
push
enter
scas
adc
push
mov
cmpsl
inc
and
stc
mov
jo
lret
pop
inc
sarb
xchg
dec
rcll
jne
and
lret
adc
out
mov
xchg
into
stc
mov
sahf
dec
push
add
repnz
sbb
cmp
fidivrs
mov
and
or
adcl
lods
movsl
or
lea
mov
push
xchg
mov
test
pop
clc
mov
pop
xorl
clc
fistps
inc
push
popa
push
stos
jae
pop
inc
pop
das
lcall
push
out
adc
sbb
jp
addr16
ds
lret
sarl
dec
mov
out
js
mov
cmp
aas
out
repz
cmp
mov
out
sub
icebp
cmp
jo
out
out
lods
ficoms
jle
add
lock
fwait
andb
jb
nop
xor
aad
int3
sbb
nop
fldt
stc
in
popf
lock
ret
adc
rcrb
mov
inc
rcrb
movsb
iret
pop
mov
push
mov
scas
out
mov
insl
add
jae
lods
ret
fimuls
mov
xor
icebp
sub
dec
xchg
lea
mov
pop
sbb
popl
sbb
or
scas
dec
cld
test
adc
jmp
stc
push
jbe
cs
lods
cmp
jg
addr16
mov
in
test
lds
lret
sub
pop
cmpsl
pop
clc
daa
enter
imul
insb
ja
dec
bsf
sub
add
fadds
adc
sbb
jg
mov
mov
or
jl
cmpsb
mov
xchg
push
orb
xlat
jae
cmpsl
adc
and
push
addr16
int3
dec
fstl
xchg
xor
data16
loop
les
xor
and
xorb
aam
cmp
add
sub
push
adc
jmp
pop
cwtl
outsb
and
std
mov
repnz
subb
dec
sbb
jbe
leave
cmp
xor
xchg
inc
dec
sbbl
mov
stos
int
pop
test
sub
pop
cmp
sub
lea
pop
fidivrs
out
out
aaa
sbb
mov
dec
add
imul
xchg
aam
jle
sbb
jecxz
and
int3
adc
sbb
ret
adc
fsubl
xor
aas
mov
pop
xor
cwtl
mov
mov
xchg
adc
mov
add
insl
lahf
jle
mov
mov
aam
xchg
out
lret
mov
sbb
mov
push
dec
je
jns
xor
sub
cmp
pop
adc
cld
push
iret
movsl
pop
push
xchg
and
pop
cmpsl
lret
into
push
in
jbe
movsl
fmul
add
bound
test
and
mov
in
dec
mov
dec
xchg
aas
hlt
jb
bound
fimull
push
add
lods
mov
mov
pusha
push
int3
push
clc
ja
mov
ja
lahf
les
pusha
and
inc
jge
pop
les
pminub
jbe
lahf
mov
adc
cmc
jnp
aaa
adc
sub
sub
orl
fbld
cmp
cmp
adc
fisttpl
jp
cmpsl
lcall
push
sub
scas
jge
xchg
in
jne
dec
adc
add
sub
lret
jnp
push
or
ljmp
out
adc
xchg
bound
out
fisubs
je
imul
sbb
loopne
pop
mov
xchg
mov
gs
shll
scas
call
dec
aaa
mov
ss
bound
icebp
adcl
or
pop
pop
push
jns
jl
cltd
push
ja
and
push
inc
mov
lds
sbb
lret
hlt
out
int
imul
pushf
add
or
xor
inc
call
jp
mov
out
imul
xchg
pop
in
pop
fstps
icebp
inc
ja
push
mov
inc
cmp
repnz
jae
sbb
sbb
sahf
shl
mov
and
cld
lret
icebp
push
cmpsl
or
sub
ja
shl
sarl
andl
out
loop
inc
push
into
jl
dec
imul
mov
shl
lret
fdivs
sbb
pop
out
xchg
and
sbb
mov
aaa
jno
sbb
outsl
cltd
adc
jecxz
push
and
pop
nop
cmp
sbb
cmp
cmp
je
xchg
inc
fldt
into
mov
iret
hlt
std
or
sub
stos
imul
pop
adc
sbb
adc
in
mov
fldenv
mov
mov
aam
cmpsl
xchg
repz
stc
push
lock
xor
add
movb
pop
pop
mov
lcall
aad
fdivrs
xchg
test
cmpsb
add
in
cmpsl
and
subb
push
aam
mov
jmp
test
cmp
pop
dec
inc
ss
movsl
inc
jnp
lret
push
inc
nop
dec
jg
push
stos
add
lds
popf
dec
sbb
push
iret
aas
ljmp
dec
push
xor
cltd
cmpsl
jnp
sarl
xchg
sub
lock
aad
pop
fnstenv
xchg
cld
pop
fsts
pop
xor
iret
push
stos
bound
or
jbe
jecxz
popf
or
inc
adc
pop
and
nop
fnstenv
inc
dec
pop
iret
jo
adc
rcrb
jbe
mov
sub
loop
push
xor
pop
lea
in
and
sbb
in
dec
add
lret
lret
mov
jne
xlat
mov
pop
scas
add
xor
adc
insl
inc
out
inc
inc
fwait
jmp
roll
mov
outsl
add
stc
arpl
mov
mov
pop
jb
movsl
stos
or
mov
xor
dec
mov
jle
xchg
inc
push
roll
fcmovne
test
lcall
push
and
stos
jb
sbb
into
call
push
sbb
rep
jp
scas
lret
or
dec
incb
or
aaa
pop
xchg
cmp
push
insb
mov
or
aaa
loop
cltd
pop
jbe
mov
pop
sub
rcll
insb
add
inc
test
cmp
das
and
sub
add
mov
jnp
push
and
movsl
movsb
add
out
cmp
rorl
mov
cmpl
pushf
adc
fldt
sbb
jo
inc
lahf
les
mov
or
icebp
pop
jmp
and
or
xlat
popa
adc
stos
sarl
insl
pop
es
dec
arpl
pop
mov
adc
pop
sarl
clc
pop
pop
add
pop
gs
mov
lock
sbb
adc
and
push
inc
popf
out
enter
repnz
cmp
mov
push
inc
test
sub
pop
adc
imul
xor
pop
inc
jae
test
stc
mov
cld
cld
jecxz
push
and
xchg
fnstcw
dec
roll
aas
or
dec
adc
mov
fwait
lea
xchg
icebp
iret
xchg
dec
cmp
enter
aam
mov
mov
push
insl
movl
push
push
in
imulb
mov
add
sbb
jg
or
hlt
shl
cmp
adc
insl
outsl
movsl
cld
sbb
test
cmp
jmp
outsb
or
push
outsl
imul
data16
xor
dec
ret
fcomi
cwtl
hlt
jg
or
adc
jge
ret
fsubrs
mov
sub
loop
and
inc
bound
jle
xchg
adc
call
in
jmp
xor
jmp
jmp
jns
in
inc
xchg
xchg
movsb
cmp
mov
add
imul
pop
jge
mov
hlt
lods
hlt
dec
cwtl
cld
push
fucomi
inc
out
cmp
jp
mov
jmp
xchg
aad
stc
and
push
push
or
adc
adc
ja
nop
push
dec
je
sbb
andl
subb
inc
les
cmp
sbb
ret
cmp
and
mov
or
inc
jecxz
aam
dec
int3
out
jp
arpl
inc
hlt
or
js
push
stos
jno
xchg
xchg
push
mov
popf
mov
test
mov
out
mov
cmpsl
loope
fisubl
dec
lfs
jle
imul
push
fdivl
stc
aam
out
cmpsl
sub
jo
mov
adc
addr16
push
pop
cmp
xor
in
out
xchg
imul
es
les
out
leave
jb
mov
cmp
or
mov
mov
sbb
sbbb
js
mov
enter
stos
push
and
mov
push
aam
push
xchg
les
dec
mov
adc
mov
movsl
add
gs
rcrb
movsl
insb
mov
mov
xchg
sbb
fisubs
iret
test
mov
and
xchg
jp
loope
push
push
xor
ret
sbb
cwtl
pop
jle
mov
jmp
aad
je
xlat
repnz
dec
sub
stc
mov
add
pop
xor
ds
xchg
jp
fsubs
inc
clc
sbb
cmpsl
mov
mov
and
mov
lahf
cld
lcallw
sub
insl
cmc
push
sbbb
dec
sbb
mov
add
sbb
les
pop
add
dec
adc
mov
inc
lahf
xchg
inc
rcrb
rolw
fmuls
fdivr
aad
dec
insl
outsl
pop
ret
jae
enter
data16
cmpsl
fwait
jb
pop
outsl
push
push
mov
shlb
pop
push
dec
je
ss
cwtl
adc
lock
xchg
add
fwait
sub
push
dec
bnd
mov
fidivs
mov
xchg
into
pop
lods
mov
jnp
fidivrs
sub
xor
inc
shrb
jle
rcrl
mov
insb
mov
dec
mov
sbb
cmc
inc
mov
jg
lret
faddl
or
test
push
adc
rcr
repnz
push
xor
xor
mov
add
cld
xchg
iret
stos
pusha
pop
rol
xor
mov
dec
lcall
rclb
add
mov
adc
dec
jg
aam
call
leave
fcoms
sbb
add
call
ss
insb
lock
shr
into
test
add
and
clc
das
sbb
je
and
mov
sti
cmp
popf
or
lret
sub
and
fstl
mov
pop
shlb
sbb
lods
leave
jecxz
mov
lahf
popa
jae
in
pop
inc
andb
pop
jne
data16
addr16
and
mov
cmp
and
int
insb
ja
insb
jg
pop
xchg
sub
push
mov
sub
shll
jge
xorl
mov
push
int3
enter
inc
mov
mov
adc
in
push
fcomp
test
push
mov
out
imul
decl
idivl
and
push
imul
inc
das
adc
test
sahf
int
xlat
dec
in
hlt
dec
jge
in
ja
call
leave
xchg
aas
sub
add
sbb
jb
into
insl
lret
sub
sub
xchg
cmp
xchg
fsubr
sub
cwtl
popa
das
pop
inc
subl
enter
pusha
sub
lret
mov
subb
in
sbb
roll
test
idivl
loopne
dec
mov
js
xorb
push
pushf
cmp
inc
pop
mov
jo
mov
cmc
adc
push
shl
sub
and
and
int
sbbb
add
jmp
push
inc
jge
cs
pop
dec
pusha
push
ret
jno
mov
popa
xchg
jne
mov
jle
shrl
in
or
jg
or
jp
outsb
mov
shlb
inc
pushf
iret
xor
add
add
test
inc
dec
roll
and
ss
and
mov
lret
xchg
test
shlb
repz
adc
mov
hlt
jg
lea
fisubl
cmpl
ss
or
je
aad
shlb
mov
lahf
ret
stos
add
inc
inc
hlt
in
cltd
and
dec
fldcw
xor
mov
add
icebp
xchg
mov
cmpsl
subl
mov
scas
add
sub
mov
push
jp
imul
pop
insl
mov
std
adc
sahf
inc
and
or
xchg
inc
xor
mov
or
fiaddl
push
pop
dec
cwtl
or
lcall
inc
out
jle
pop
pop
ror
mov
jns
in
push
jne
in
or
lods
adc
xor
jge
xlat
push
mov
push
ljmp
dec
jle
mov
xor
jns
mov
mov
loope
mov
push
sahf
pusha
cmp
add
fnstcw
jb
sub
adc
jbe
je
sbb
movb
jge
out
and
ds
inc
aaa
lods
test
in
push
and
xorl
out
nop
xor
or
stos
mov
es
inc
mov
cmp
ja
jns
push
cs
cld
inc
sbb
sbb
add
lahf
mov
ret
repz
sub
clc
mov
daa
inc
and
movsb
cmpsb
lahf
push
jno
cmp
xchg
insl
popf
xchg
mov
repnz
mov
adc
fmull
shlb
hlt
dec
xchg
lret
lds
inc
std
in
push
adcl
sbb
mulb
dec
inc
mov
sub
mov
mov
shl
sub
push
hlt
movsb
outsb
xchg
mov
dec
in
lahf
jae
stc
adc
mov
jle
insb
lret
mov
arpl
mov
jge
frstor
das
sbb
inc
shll
iret
jbe
sub
out
sarl
add
jmp
dec
mov
mov
iret
fimull
imul
lahf
stos
push
cmp
iret
sbb
push
repnz
addl
lcall
jp
inc
sahf
mov
sub
scas
jnp
add
dec
ret
jmp
imul
adc
in
dec
push
dec
push
inc
push
pop
jo
or
adc
cld
pop
and
or
icebp
push
js
push
sub
mov
sbb
mov
stos
jae
lods
jg
in
out
push
in
bound
push
fiaddl
test
addr16
and
push
xor
push
sbb
inc
repz
ljmp
cltd
mov
mov
xchg
adc
dec
sahf
icebp
in
cmc
aad
outsb
iret
add
std
test
outsl
jge
outsl
fistpl
sub
sti
cmpsl
iret
pop
push
xorb
jne
les
cmp
dec
hlt
movsl
scas
xchg
push
sbb
cmp
out
fwait
out
inc
mov
sub
push
jo
stos
add
cmp
rorb
mov
out
dec
mov
cmp
nop
push
notl
mov
movsl
ljmp
add
aam
dec
dec
pop
mov
xor
and
arpl
mov
iret
ss
mov
loop
std
mov
dec
test
sub
jbe
js
int
jp
loope
add
arpl
ret
insl
pop
jae
sarb
mov
lret
insl
jge
cli
mov
adc
pop
inc
outsb
inc
jo
or
mov
call
mov
pop
adc
mov
push
shlb
xchg
inc
push
mov
addr16
fisubl
jle
leave
or
ja
cmp
dec
cmp
movsb
inc
fcomps
dec
in
pop
int
xchg
aad
aad
mov
jbe
cmp
cmp
nop
cs
test
cmp
push
ret
push
aas
ljmp
nop
or
imulb
lcall
pusha
mov
lods
andb
addr16
mov
popf
mov
or
pop
out
sub
mov
sub
and
pop
mov
cmc
movsb
clc
rclb
sbb
xor
std
fldenv
jp
push
or
pop
mov
dec
pop
int
in
jmp
xchg
or
and
mov
jg
dec
pop
test
pop
cmpsl
xor
ja
sub
gs
nop
cld
loopne
ret
mov
sti
add
jo
mov
fidivs
and
inc
sahf
mov
and
mov
jo
cmp
pushf
push
xor
sbbl
inc
sub
and
xchg
cli
adc
push
xchg
fnstsw
and
sub
adc
sbb
hlt
mov
stos
mov
in
jle
out
sub
cmp
and
je
es
jge
sti
push
jo
adc
test
cld
int3
push
jne
je
call
cmp
jne
push
mov
xlat
mov
repnz
inc
iret
lret
push
jae
jecxz
adc
mov
lds
and
xor
cmp
jge
scas
pushf
es
call
insl
std
and
decl
jecxz
out
pushf
out
jge
ja
mov
sub
xor
cli
add
bound
adc
in
mov
push
mov
push
and
scas
rorb
xchg
ljmp
icebp
imul
or
div
and
push
fwait
pushl
sbb
mov
sbb
cmp
sbb
clc
lds
mov
mov
mov
fiaddl
or
fsub
imul
adc
cwtl
fld
loopne
cmovp
lret
jns
jl
loop
cli
push
rclb
push
inc
icebp
popf
or
insl
aaa
jb
xchg
pop
inc
sbb
adc
jmp
iret
or
outsb
adc
or
shll
enter
pop
jne
es
sbb
sub
xchg
mov
les
push
xor
add
sbb
dec
xor
je
mov
push
adc
inc
cltd
sub
or
sbb
or
push
jb
popa
pop
pop
loop
xchg
out
xchg
mov
outsl
xchg
inc
add
xchg
mov
xchg
incl
imul
in
mov
push
ror
daa
add
dec
outsl
add
outsb
xchg
ret
cs
pop
js
add
fiaddl
shrb
push
push
icebp
cmp
scas
add
js
xchg
and
push
mov
xlat
inc
mov
ret
rclb
imul
xlat
in
adc
ss
jp
dec
ret
xor
xor
js
test
mov
xchg
sub
icebp
mov
int
lcall
jl
push
pop
inc
lods
xchg
movq
test
rorb
repnz
mov
jno
or
dec
sub
vunpckhps
push
imul
popf
pop
mov
and
xchg
cmpsl
and
sub
in
mov
out
inc
popf
int
out
pop
movsl
sub
mov
jb
bound
cli
mov
jg
mov
and
and
add
test
into
mov
cld
movsb
cwtl
jg
add
push
jge
ja
jno
out
jne
pop
xor
cmp
fwait
or
inc
repz
adc
clc
and
sbb
add
push
pop
push
cmp
push
pop
std
add
push
pop
mov
cltd
and
xor
test
aad
or
adc
push
or
lds
mov
sub
adc
and
rolb
push
stos
in
mov
adc
and
push
add
lea
in
and
lret
cld
shr
ret
mov
xchg
xchg
sarl
xchg
cwtl
lods
jecxz
mov
fidivs
cmp
cltd
andb
iret
in
xor
out
stc
pushf
mov
incl
faddp
loopne
jge
dec
push
sub
movsl
scas
lcall
in
pop
mov
shrl
add
cmp
mov
dec
inc
sub
pop
fcmovne
inc
mul
push
sub
pop
fidivrs
push
movsb
ja
push
sub
ja
xchg
mov
push
or
ljmp
xchg
push
dec
or
ds
push
orb
xchg
lahf
outsl
jg
cmc
sti
push
or
sbb
dec
mov
pop
lcall
and
mov
cld
popf
bnd
xchg
in
cs
in
loopne
aas
pop
cmp
lea
or
and
push
data16
adc
xor
adc
and
mov
int
das
test
add
lret
das
clc
sub
aas
std
nopl
fucomi
std
xchg
mov
xor
push
push
push
mov
fcmovne
adc
ds
sbb
into
sbb
adc
aam
popf
inc
mov
and
and
push
lahf
mov
jle
pusha
jg
jge
test
les
push
sarl
cmp
sbb
xor
mov
add
jae
pop
cmc
ret
cmpsb
jle
xchg
cltd
dec
ret
cmpsl
cmp
sbb
ss
pop
jl
hlt
out
cltd
sbb
mov
xlat
mov
scas
bnd
into
push
imul
dec
cmovns
lods
pop
adc
leave
jp
push
aaa
pushf
fstpt
rclb
pop
pop
xor
mov
repnz
lea
mov
xlat
lds
pop
adc
or
int
push
adc
iret
dec
rcrb
pop
aaa
sar
cmpl
sub
test
cmpsl
inc
nop
dec
push
mov
jp
cmp
repnz
outsb
add
push
cwtl
mov
mov
test
sub
pushf
insb
jbe
out
pop
and
clc
or
pop
in
cwtl
jecxz
mov
xchg
out
mov
test
sub
pop
loop
das
fisubrl
inc
orb
adc
add
and
pop
xlat
js
loopne
pop
xor
jns
push
mov
scas
popa
fnstsw
in
xlat
loopne
pop
sbb
dec
mov
test
imul
pushw
jmp
dec
sbb
lods
enter
sub
push
xchg
in
dec
mov
cmpsl
pop
cmpsl
or
adcb
jns
add
sbb
aas
lret
xor
pop
xchg
sbb
push
inc
push
das
std
dec
jge
insl
mov
test
fisubl
rcl
push
adc
mov
addr16
xor
stos
xlat
inc
out
testl
nop
gs
mov
xlat
mov
aas
cmp
xor
add
int3
jge
adc
scas
jno
pop
aam
dec
adc
test
mov
sbb
mov
sub
mov
mov
jmp
popa
xchg
fildl
imul
ja
out
in
or
lcall
je
lock
xlat
ljmp
push
push
jmp
imul
outsl
jmp
fisubl
adc
mov
inc
out
xchg
sub
ljmp
xchg
sub
aas
and
dec
lret
and
jl
mov
in
imul
pop
fdivrl
xor
or
mov
add
cld
out
pop
pop
mov
jge
or
fnop
fnstcw
fcom
das
adc
sbb
mov
inc
ret
roll
inc
jmp
jmp
stos
xchg
xchg
xor
cmp
dec
adcb
les
fstpl
arpl
bound
jp
aas
fisttpll
inc
xchg
and
mov
xlat
dec
ret
mov
xor
jp
pop
add
push
sub
test
sti
or
jge
jb
rcrb
mov
and
inc
imul
jbe
int3
jecxz
mov
lret
lock
sub
mov
es
test
fstl
out
shll
cmpsb
je
loop
into
sbb
cs
aas
outsb
mulb
xor
out
sub
pop
std
add
cs
fisubrs
fcom
adc
xor
mov
cmp
aad
jecxz
mov
and
imul
cmp
jne
repz
fidivrl
lds
pop
loop
xchg
mov
mov
jnp
sbb
cwtl
add
movsb
jg
lods
jns
call
push
lods
push
ljmp
add
jg
rorl
pop
fcoms
xchg
push
inc
loope
andb
insl
push
pop
adc
jl
dec
xchg
mov
xor
cld
ret
cmp
pop
lahf
add
push
adc
or
cmp
enter
outsl
sahf
mov
mov
pushf
sbb
int
mov
sbb
mov
mov
std
sbb
and
mov
loop
push
pop
mov
mov
sub
push
aad
sbb
cltd
ss
mov
out
rcrl
loop
lods
movsb
jp
pop
fwait
inc
adc
or
or
xor
cmp
jmp
xor
dec
mov
mov
ljmp
cmpsb
and
cld
out
mov
mov
jmp
jo
push
mov
adc
jns
subps
inc
hlt
push
frstor
je
scas
adc
jns
das
jge
insb
lahf
scas
pop
jp
dec
mov
xor
push
mov
mov
in
fsubs
xchg
shlb
out
rorl
test
adc
ret
outsl
push
testb
shrb
and
pop
aad
push
add
cmp
enter
rcr
jbe
ss
je
inc
dec
push
jg
xchg
dec
inc
test
lods
out
mov
ficompl
je
loopne
sti
adc
nop
add
addr16
cwtl
push
pushw
mov
push
pop
jb
push
jb
push
push
dec
pop
pop
mov
lods
aas
ss
nop
pop
ds
jp
popf
pop
mov
xchg
sbb
pop
pop
mov
mov
mov
movsb
data16
test
cvttps2pi
or
fwait
ja
cld
cmp
or
shlb
cld
movsl
cmpsl
pop
in
icebp
push
add
or
ret
andl
inc
adc
ljmp
inc
pop
jmp
jmp
push
into
and
mov
lods
rcrb
ret
fsubl
mov
nop
jbe
lahf
divl
dec
mov
imul
jns
mov
lds
nop
mov
test
inc
shlb
fsubrl
and
cwtl
dec
dec
dec
loopne
shrl
pop
mov
mov
pop
fildl
ljmp
movsl
adc
gs
jp
fwait
push
loopne
bound
jp
popa
clc
xor
into
addr16
lahf
pop
xchg
popf
pop
dec
and
shlb
js
in
fisubl
lods
add
dec
js
sti
rorb
in
add
scas
add
jne
sbb
inc
and
fisubl
push
cmpsl
pushf
movsb
and
add
in
icebp
dec
jp
scas
lods
sahf
int
movsl
ror
test
sahf
das
pop
jecxz
xor
out
dec
lret
adc
mov
xor
mov
mov
js
inc
mov
pop
repz
or
gs
and
iretw
mov
stos
cli
pop
leave
popf
push
sbbb
pop
push
cld
xlat
mov
idivb
push
jg
mov
sbb
mov
push
in
shl
or
in
popf
popf
aam
dec
sbb
inc
enter
cli
cmp
xor
mov
and
leave
fs
cld
in
shlb
in
mov
pop
stos
xor
cmp
std
push
jl
shlb
fcoml
cld
repnz
stos
out
cmp
jmp
push
inc
rclb
push
fyl2xp1
pop
pop
sbb
mov
sbb
icebp
add
push
insl
call
or
in
pop
xchg
inc
repz
lods
mov
sbbl
pop
adc
push
inc
in
cmp
es
hlt
adc
mov
xor
sub
movsb
clc
adc
imul
mov
mov
jmp
and
mov
test
sbb
mov
mov
mov
fisttpl
outsb
push
std
into
and
sub
cmpsl
clc
xor
pop
sti
sub
popa
xchg
xor
inc
ja
push
xchg
ljmp
std
test
mov
dec
or
or
mov
mov
adc
jecxz
mov
fsts
fs
jge
stos
insl
rorl
xchg
into
sbb
bound
or
dec
pop
sbb
sarl
inc
or
js
pop
in
or
mov
pusha
inc
jne
or
std
mov
pop
xchg
aaa
cmp
dec
dec
pop
pop
add
decb
stos
std
popf
sbb
mov
daa
scas
xchg
or
call
dec
pop
int3
leave
in
adc
cwtl
mov
insb
add
mov
cmp
addr16
cltd
pop
pop
loop
aaa
out
fisubrl
insl
int
data16
xchg
xchg
or
notl
cmp
mov
pop
jae
jb
jmp
fistpll
test
sbb
and
mov
cli
xor
outsl
jge
add
cmp
pop
fdivr
inc
addl
aas
ret
mov
stos
or
rcrl
add
adc
mov
out
and
shll
addr16
xlat
loope
stc
pop
mov
dec
dec
xor
dec
adc
or
xor
scas
xchg
cmp
cmp
scas
mov
popa
fcompl
pop
ljmp
add
inc
xchg
nop
shl
imul
xor
and
dec
xor
scas
arpl
negl
insb
andb
shlb
fdiv
sub
ficompl
mov
cmp
push
sbbl
sub
sbb
adc
jne
insb
je
dec
pop
cmc
cwtl
lret
jbe
and
lods
dec
test
or
mov
sbb
inc
pop
test
jmp
hlt
icebp
xchg
std
cld
bound
adc
or
add
xchg
fisubl
mov
pop
mov
xor
fildll
inc
mov
xchg
xchg
rcr
sti
xchg
xor
xchg
aaa
xor
stc
mov
push
xor
mov
ss
dec
pusha
cmpsb
cld
push
sub
inc
sub
pop
insb
jmp
lods
rep
jb
rcr
out
aaa
test
mov
cmpb
ret
jle
sahf
inc
fistpll
inc
addr16
mov
sub
loop
mov
faddl
jne,pn
adc
jecxz
or
lcall
adcb
mov
push
push
sarb
pop
adc
insl
into
inc
std
js
and
xchg
and
cmp
mov
arpl
push
lret
loope
ret
rcr
ss
movl
sbb
fisubs
xchg
cmp
inc
push
jnp
push
in
xor
movsb
fdivrl
repnz
pop
or
dec
lock
jmp
sbb
inc
pusha
cltd
inc
push
cli
popa
testb
xchg
mov
jo
inc
mov
movsl
mov
fcmovnbe
cltd
imul
jo
loopne
cmp
aad
bound
push
pop
je
xchg
out
das
xchg
std
mov
or
push
je
test
xchg
inc
inc
cltd
sub
pop
bound
enter
push
mov
push
ljmp
mov
mov
xchg
frstor
lea
stc
add
jle
stos
dec
add
jge
cltd
outsl
sub
xchg
cmp
mov
es
xlat
sbb
jno
andb
jp
inc
inc
or
pop
push
loope
cmpsl
pop
or
add
dec
inc
xchg
mov
into
mov
dec
jb
sbb
and
xchg
cmp
xchg
test
xchg
adc
adc
sbb
mov
and
stc
add
in
jb
stos
adc
mov
stos
ja
roll
adc
fimull
cmp
push
and
push
inc
outsb
inc
ret
xchg
add
add
iret
in
mov
lea
push
test
push
cwtl
stos
adc
cmp
imul
mov
lea
xchg
push
mov
fidivrs
addr16
mov
sub
mov
leave
or
arpl
mov
xor
arpl
test
inc
aam
push
sbb
insb
push
add
aaa
test
call
dec
or
vmovshdup
scas
adc
shlb
aam
clc
xchg
sbb
mov
lock
fs
jl
mov
icebp
xchg
mov
sbb
inc
inc
cld
sbb
xchg
scas
imul
push
and
cltd
stos
dec
test
sub
dec
sbb
dec
cmp
out
in
inc
mov
inc
inc
add
mov
les
loope
pop
adcb
cmp
push
pop
sub
push
push
lahf
cmp
dec
paddb
jp
repz
add
loop
adc
and
lods
mov
adc
add
xor
mov
sbb
repnz
repz
mov
repz
ret
or
shrb
popf
or
cmc
into
lahf
fildl
jbe
push
inc
sub
sar
push
outsb
xchg
adc
push
dec
push
or
pop
and
pop
push
or
cmpsl
jle
rcrl
push
loopne
ret
pushf
sub
loope
ret
std
fidivs
scas
push
daa
sub
pop
aaa
add
xchg
arpl
jbe
lahf
adc
or
inc
outsl
les
pop
ja
xchg
push
gs
pop
push
loop
scas
andl
inc
sub
lea
mov
mov
clc
ds
mov
jb
jne
lret
dec
sahf
cmc
mov
dec
push
pusha
push
adc
add
mov
out
inc
mov
or
out
or
mov
lods
mov
xchg
or
dec
jo
jle
push
jge
sti
fs
jle
dec
push
cmpsb
in
dec
sbb
push
fsubrl
hlt
pop
or
insl
inc
in
jle
iret
stos
fwait
mov
sub
cmp
adcb
dec
ljmp
aaa
ficomps
xor
mov
mov
mov
mov
in
ds
adc
mov
daa
add
arpl
sub
xor
incb
adc
or
cmp
mov
adc
jb
lods
xchg
push
mov
push
xor
jle
out
mov
and
jecxz
out
cltd
push
icebp
sbb
mov
dec
jmp
mov
jle
shl
in
add
mov
sbb
sahf
pushf
mov
add
dec
negb
add
jne
xor
lea
fsubs
xor
scas
popf
xchg
pop
lods
lea
xchg
imul
lret
push
pusha
lock
fcmovnb
add
pop
xor
lods
lds
aas
mov
push
sub
cltd
outsb
shrl
pop
push
scas
rcll
cmp
insl
inc
dec
lods
jo
or
push
aad
cmp
rorl
cmp
mov
mov
mov
push
popa
mov
xchg
aas
cld
xor
or
adc
pop
jmp
xchg
adc
dec
roll
add
mov
outsl
loopne
paddq
dec
cld
mov
insl
shll
add
mov
lock
xchg
jp
push
gs
pop
dec
popf
push
stos
adc
aaa
xor
ss
in
jge
cmp
lods
icebp
mov
insl
dec
shrl
movsb
rorl
jbe
int3
scas
inc
pop
jbe
imul
insb
adc
cmpps
lods
sbb
rcrl
xchg
xchg
sub
inc
popf
cld
dec
dec
push
xlat
out
int
dec
push
cs
mov
stc
mov
add
and
lods
add
adc
pop
adc
push
dec
xor
mov
sub
jmp
outsb
enter
xchg
inc
out
inc
jb
in
js
mov
xchg
cmp
push
icebp
negl
hlt
jns
test
stos
imul
verw
inc
stos
sbb
outsl
push
xchg
adc
xor
decl
pop
pop
mov
in
sub
int
jne
es
iret
or
jns
jg
addr16
push
push
rcr
js
cmp
lcall
fists
xchg
bound
fdivl
cmp
cmc
aas
dec
js
push
mov
cmpsl
lds
dec
push
scas
mov
adc
push
or
mov
xchg
dec
cmc
es
lds
movsl
stos
xchg
aaa
pop
ds
sub
pushf
mov
das
lcall
loop
pushf
in
lds
shr
push
scas
mov
mov
loop
sbb
mov
mov
pop
sub
sbb
repz
xchg
and
fsubrl
mov
out
subb
dec
xor
movsl
jne
xchg
push
and
sbb
inc
adcl
ret
in
rclb
mov
mov
test
inc
mov
loopne
mov
dec
mov
mov
mov
xchg
dec
xchg
push
sbb
pop
jle
mov
in
negb
jge
sbb
ljmp
jae
testb
nop
imull
push
adc
popf
into
mov
stos
mov
sbb
rcl
std
pop
addr16
adc
xchg
pushf
mov
mov
push
imul
movsl
insl
hlt
fsubl
push
lock
and
mov
sbb
and
dec
lods
mov
mov
inc
or
adc
int
cwtl
jae
pop
mov
mov
lcall
daa
mov
rcr
pop
xor
pop
xchg
inc
mov
jecxz
test
ja
and
push
iret
mov
pushf
pop
xorb
dec
push
jle
push
cmpsl
push
mov
ret
add
shlb
add
mov
iret
pop
pop
mov
push
ljmp
imul
out
daa
repz
pop
sarb
pusha
lcall
cmpsl
aam
and
add
push
or
adc
out
js
test
xchg
and
mov
enter
cmp
out
jne,pn
dec
sub
and
stc
in
sbb
mov
ds
mov
mov
mov
test
sub
aam
enter
sub
lret
dec
xchg
enter
adc
leave
mov
mov
sar
jmp
xor
jnp
aad
mov
repnz
test
xchg
rclb
jmp
imul
cmp
pusha
gs
movsb
inc
stc
inc
or
push
sbb
cmpsl
jo
aad
lds
adc
fsubrs
fiadds
das
int
dec
or
adc
stos
xchg
popf
mov
pop
xorl
and
andl
push
cmp
push
push
aaa
jl
outsb
push
inc
stc
mov
cld
sbb
mov
jle
test
test
lret
xchg
dec
pop
xchg
xchg
scas
hlt
jae
sbb
mov
scas
xchg
add
xchg
sahf
push
push
sub
jg
cltd
in
sbb
xchg
add
in
lock
cld
cltd
mov
popf
adc
aaa
dec
ds
repnz
mov
filds
sub
pop
imul
lds
pushf
std
loopne
jmp
sbb
inc
mov
xchg
rorb
mov
xchg
notb
dec
sbb
push
fmuls
inc
adc
xchg
adc
dec
sbbb
or
pandn
leave
dec
lea
pop
outsb
mov
rcrl
icebp
fmul
pop
stc
out
in
lods
cmp
lods
mov
repz
mov
repnz
inc
push
mov
sub
ss
loop
lds
cs
lcall
hlt
es
sbb
test
out
stos
jno
push
mov
add
les
lea
push
arpl
imull
in
cmp
dec
int3
dec
cmpsl
shll
and
sbb
xor
push
lahf
int3
push
push
push
es
cmc
jmp
dec
cmp
jecxz
out
adc
mov
into
dec
enter
mov
imul
sbb
pop
sub
lret
ja
and
xor
push
aad
mov
push
mov
pop
repz
cmp
nop
add
scas
pop
sub
add
mov
sahf
fists
les
dec
pop
mov
mov
fdivrs
ret
fistpl
popf
lcall
loope
mov
lcall
add
add
rcl
movhps
jo
mov
xor
mov
add
dec
and
daa
sarb
int
add
pop
repnz
ljmp
push
adc
stos
adc
jp
or
cmp
push
mov
sahf
outsl
pop
push
xchg
cmp
test
pop
jle
cmc
add
sahf
dec
mov
sarl
repz
sarb
fisttps
repz
insb
mov
jmp
push
or
xchg
cmpsl
in
xor
push
jae
aad
mov
pushf
mov
mov
idivl
les
cld
push
out
aas
ret
std
cmp
and
leave
ja
js
dec
xchg
adc
fidivrs
cmpsl
cmp
sub
int3
dec
sub
imul
sete
add
and
add
out
pusha
mov
roll
aad
xor
mov
sbb
ds
cmp
addl
mov
and
mov
std
scas
clc
push
outsl
ror
push
lods
decb
pop
cmpsb
loop
mov
js
stc
mov
sub
icebp
dec
cmp
pop
mov
xchg
and
stc
arpl
pop
imul
leave
jle
imulb
mov
inc
dec
scas
daa
sub
int3
cld
push
jae
xor
icebp
mov
pop
movsb
jnp
pop
cmp
mov
jbe
jecxz
mov
lock
iret
int
scas
lea
das
mov
lea
scas
jl
mov
in
push
inc
in
cmpsb
push
in
jmp
and
or
push
sub
push
jno
pusha
and
ficoml
pop
aad
jo
dec
jo
outsb
and
sub
das
jae
gs
pop
mov
loope
retw
ds
sbb
and
xor
xor
jns
cli
dec
popf
jne
mov
pop
cwtl
add
es
push
in
xor
dec
xchg
outsl
sar
gs
push
push
sbb
mov
les
mov
addr16
fdivs
mov
push
lods
data16
xchg
outsb
insl
out
or
sub
ss
sub
icebp
addr16
and
dec
jmp
jns
scas
inc
ret
ret
inc
xor
fs
mov
adc
dec
cmp
sbb
mov
fldl
mov
or
sub
xlat
shll
lods
je
sahf
movsb
pop
mov
hlt
mov
insl
jne
add
sarb
pusha
jg
fldl
push
push
xor
add
pop
lahf
call
xlat
cmpsl
cmp
dec
xor
outsb
cmp
jbe
lcall
call
sub
test
aas
mov
pop
mov
or
mov
push
mov
or
lods
push
jg
jbe
sarb
aas
fisubrl
adc
jmp
add
push
std
or
sub
adc
adc
daa
cli
push
xlat
xchg
out
cmp
or
imul
icebp
cmpsb
and
xlat
inc
or
adc
into
jmp
xchg
mov
stos
mov
cli
push
sbb
incb
sbb
dec
pusha
dec
test
mov
mov
cmp
int
fwait
icebp
dec
ret
loope
inc
ja
fisttps
imul
aaa
dec
mov
lods
repnz
push
pop
xchg
lahf
jns
inc
or
scas
icebp
lods
out
loopne
ret
mov
jo
jp,pt
bound
jmp
push
mov
sub
pusha
out
add
jne
jp
add
orb
jmp
xchg
ja
adc
adc
pop
and
mov
addr16
jno
sbb
popf
filds
data16
leave
test
mov
mov
push
xchg
adc
pop
popa
cmovne
jbe
jne
xchg
cmpsb
mov
fistpll
lret
mov
add
data16
je
and
jns
cs
aaa
ret
nop
xlat
cli
out
xchg
std
jge
sbb
pop
add
mov
jnp
inc
fcompl
mov
lods
and
xor
stos
dec
insb
cld
mov
dec
ret
push
dec
icebp
add
das
jg
cmp
mov
iret
push
out
mov
xorb
lret
mov
adc
jb
mov
mov
mov
pop
push
stc
out
imul
inc
outsl
outsl
outsb
or
lret
adc
jp
jmp
repz
insb
rol
or
pop
jmp
repnz
mov
adc
mov
cmp
mov
es
cmp
bound
movsb
lret
mov
xor
repnz
inc
dec
icebp
test
lret
mov
das
push
incb
lahf
stos
sub
mov
negb
out
mov
sbb
leave
rolb
sub
dec
or
dec
mov
in
stc
int
dec
int3
or
fidivs
add
inc
push
jg
or
xchg
mov
jnp
xor
shlb
add
sbb
pop
xchg
jp
jo
daa
xchg
scas
fcoml
nop
fs
rcrb
aaa
testl
jne
pop
rcll
mov
insl
mov
mov
jl
mov
or
cmpsb
or
mov
mov
push
push
pop
pop
jb
mov
popf
sti
fimuls
pop
add
fcompl
dec
add
ret
inc
fwait
test
mov
mov
mov
sub
inc
mov
inc
fdiv
es
jbe
test
in
inc
aas
inc
cmp
fcmove
add
fcoms
fst
or
das
fdivl
jno
fwait
mov
push
repnz
out
loope
push
jl
inc
or
pop
or
sub
je
inc
roll
mov
clc
data16
mov
subb
pop
and
add
mov
sub
cmp
sub
add
push
pop
and
lcall
adc
cmp
and
jne
inc
xor
pop
dec
lahf
push
out
jg
aaa
push
cmpsb
repz
cltd
dec
test
adc
test
inc
mov
jnp
cld
inc
shll
push
rclb
cld
mov
sub
mov
in
stos
xor
pop
lahf
jmp
dec
pop
add
mov
shll
cmp
ret
fidivl
and
adc
ss
sub
xorl
xchg
test
mov
xor
pop
push
mov
mov
out
adc
mov
int
inc
imul
enter
test
aad
jmp
push
cmp
dec
fdivs
xchg
in
pusha
add
adc
test
mov
fisubrs
movsl
add
fsubrs
out
dec
sub
pop
mov
jl
cmp
dec
stos
mov
xrelease
lret
cmpsl
negl
mov
inc
test
cmpsb
jl
pop
xchg
pusha
inc
mov
inc
fdiv
add
xor
data16
ret
nop
inc
testl
sti
add
inc
or
adc
inc
mov
pop
xor
ljmp
jae
pop
in
ret
sbb
jae
stos
clc
push
adc
mov
cmp
scas
daa
fdivrs
add
dec
push
jbe
sbb
in
pop
movsb
fs
inc
loope
fcomps
inc
mov
fdivrl
fs
sbb
sbb
xchg
sti
mov
aad
pusha
sub
cmpsl
testl
dec
or
leave
push
icebp
gs
mov
mov
mov
shr
lcall
inc
scas
test
and
int3
or
cli
test
sbb
pushf
push
sub
sub
sbb
fwait
test
aas
fimull
mov
fistpl
popl
mov
daa
iret
fbstp
loope
lret
and
insl
pop
loop
pop
push
out
cwtl
xchg
jge
outsl
mov
mov
xchg
out
lods
shrb
cltd
dec
mov
roll
lods
push
add
out
addr16
pop
gs
xor
push
xchg
and
int3
test
push
dec
push
lock
clc
out
adc
xchg
testl
push
mov
xchg
cmp
push
leave
mull
xor
int3
nop
push
sbb
pushf
add
fwait
sbb
fs
xchg
cwtl
inc
pop
enter
and
jne
mov
pop
sti
jle
inc
mov
js
aad
or
test
cmpsb
mov
push
cs
leave
xorl
fcomp
cmp
sbb
mov
jmp
xchg
test
imul
mov
outsl
fs
or
cs
pop
and
sub
fcoms
pop
fldcw
push
in
sbb
lds
dec
lea
or
ror
adc
mov
and
xchg
xor
jmp
add
mov
cmp
jne
outsl
sbb
add
and
cmpsb
lods
mov
mov
aad
fcomp
push
pop
cmp
and
fistpll
sub
int
ds
leave
es
popa
dec
ja
adc
inc
fldenv
mov
jg
mov
mov
sbb
ficoms
mov
fsubl
iret
hlt
outsb
cmpl
sub
xchg
jg
pop
push
pop
fs
loop
and
adc
cmp
jb
ss
jae
dec
test
mov
movsb
sub
je
std
fs
push
repz
push
fnsave
and
xchg
fisttpl
mov
cmp
stos
int
shl
stc
add
jl
cwtl
jg
mov
ds
mov
das
cmpsl
cmp
sbb
outsl
cmpsl
stos
push
jae
push
sbb
test
jge
xor
dec
lret
shlb
mov
lea
cltd
mov
xchg
js
mov
sbb
int3
js
inc
sbb
dec
pop
sbb
inc
mov
into
pop
push
mov
sub
jne
pop
mov
repnz
lcall
xchg
popl
out
pop
sub
jle
jbe
stos
sbb
mov
cwtl
mov
jnp
inc
mov
sub
xchg
pop
sbb
cmp
add
sbb
out
mov
or
adc
enter
pop
mov
xorl
and
bound
lahf
iret
lret
mov
adc
push
repnz
push
call
lods
push
stos
mov
cmp
popa
adc
push
xchg
add
in
push
ret
xchg
xlat
fsubrs
adc
in
push
push
test
aas
push
add
fldcw
cmpsl
push
and
sub
push
popf
mov
shrl
mov
inc
repnz
sarb
cli
and
sbb
jno
inc
and
mov
fistpl
test
inc
cmp
jne
and
jmp
mov
stos
xchg
push
and
cltd
adc
push
push
gs
jg
rolb
xor
or
shll
cmpsl
fisttps
jmp
mov
mov
test
lock
outsl
jge
mov
daa
scas
sbb
not
je
xchg
add
dec
xor
pop
bound
add
inc
dec
jo
push
int
js
les
jmp
cs
mov
sub
sti
sub
gs
cld
rclb
inc
lret
mov
ret
and
les
mov
push
leave
stos
dec
shl
add
add
ds
cmp
push
sbb
scas
dec
pusha
inc
or
xor
aad
sub
je
mov
cmp
inc
lcall
add
repnz
enter
clc
mov
add
xchg
fildll
push
es
dec
ss
sbb
pusha
jbe
enter
arpl
std
sbb
int3
stos
mov
mov
cmp
cmp
hlt
pop
stc
into
adc
fstpl
push
dec
sub
xor
lock
cmc
mov
xchg
negb
aam
jmp
movsl
lock
mov
into
mulb
fnstsw
fidivl
loop
cmpsl
cmc
xchg
stos
adc
push
out
mov
clc
and
cmc
inc
xorl
arpl
xor
adc
fisttpl
add
imul
fcomps
fisubl
mov
gs
inc
lea
shll
pop
xor
jo
cmp
movsb
ret
jne
ret
cmp
mov
enter
inc
xchg
xchg
sar
push
cwtl
mov
dec
mov
mov
popa
sbb
and
sub
xchg
stc
jns
mov
xor
call
jno
out
mov
sub
xchg
xor
and
sbb
dec
cltd
out
mov
or
daa
sub
or
orb
cmpsl
and
xchg
popa
stos
int3
mov
mov
icebp
push
or
ret
sbb
hlt
push
push
xchg
push
xchg
push
push
push
jne
sub
rcl
ret
cli
addl
inc
mov
and
push
mov
xor
push
cmp
dec
mov
fnstenv
xor
fs
cmp
push
sbb
ljmp
bound
das
sbb
inc
inc
mov
iret
das
adc
push
mov
mov
inc
pop
nop
rcrl
lods
adc
bnd
push
hlt
test
jno
cmp
jle
fs
add
out
mov
out
jle
loopne
lds
and
push
and
pop
or
mov
fwait
inc
notb
test
je
in
mov
or
mov
mov
inc
xor
sar
js
fdivrs
outsb
dec
cld
mov
sahf
outsl
mov
dec
dec
rcrl
in
test
add
outsl
ljmp
repnz
pop
add
jge
in
in
test
sbb
icebp
xchg
and
inc
sbb
outsb
mov
adc
lock
in
push
repnz
pop
inc
in
scas
cs
and
arpl
repnz
add
jg
and
mov
mov
mov
mov
and
adc
imul
inc
cli
ss
push
fs
repz
pop
xor
iret
in
or
and
lcall
xor
sbb
jp
adcl
sub
pop
push
add
adc
scas
push
std
sbb
pop
lods
mov
bound
fisubl
fstl
fistpl
mov
in
in
sbb
popf
fldlg2
jge
outsl
shrb
ja
mov
mov
addl
jle
mov
add
adc
pop
sub
push
dec
jmp
in
jg
aas
xchg
call
jno
xchg
mov
lret
push
and
aad
or
pop
or
jmp
push
jg
mov
cmc
jg
psrlw
popf
jo
jmp
icebp
pop
je
add
inc
icebp
push
popf
ficomps
scas
sarb
jb
popf
scas
dec
dec
sbb
xor
cmp
mov
mov
stc
jl
sub
xor
adc
sbb
lds
dec
push
leave
lods
jo
repz
loop
es
dec
shl
pusha
cmc
movsb
aam
xchg
icebp
jl
jnp
jp
and
test
sahf
insl
adc
and
jge
js
arpl
fmuls
pop
push
push
push
lret
addr16
movl
push
repnz
sub
adc
jo
inc
insb
hlt
inc
xor
or
mov
call
lfs
push
mov
loopne
pusha
popf
mov
sub
dec
push
mov
cmpb
stos
push
cmpsb
daa
dec
dec
adc
stc
fnstenv
mov
jno
int
repz
jb
or
and
inc
das
and
lcall
inc
imul
lcall
mov
rorl
enter
cmp
das
jo
shl
adc
or
ss
dec
xchg
vmread
dec
cmp
xchg
aaa
lsl
push
addr16
xor
mov
cwtl
js
jnp
pop
sarb
int3
or
jge
movsb
inc
xchg
xchg
xchg
fmul
dec
ret
pop
mov
jmp
fldcw
and
pop
mov
jo
xor
cmpsl
add
rorb
leave
dec
sar
inc
push
pop
xor
lret
nop
fmull
xlat
cltd
loope
jbe
xor
lahf
insl
test
push
in
pop
mov
nop
cmc
addr16
pop
sbb
mov
mov
pop
aaa
add
test
iret
and
mov
out
sub
mov
out
ljmp
pusha
cli
jno
outsb
or
push
es
pop
in
stos
push
aam
xchg
cmpsb
xchg
mov
jns
and
stc
bound
inc
int3
jl
xor
mov
pop
and
outsb
dec
arpl
rcrb
pushf
and
xlat
stc
fnstenv
and
out
out
adc
stos
add
iret
sub
js
sbb
xchg
test
xor
adc
and
mov
ja
dec
jecxz
jno
pushf
jb
jle
inc
out
mov
jg
jnp
add
imul
nop
leave
mov
jge
insl
sahf
sahf
rcrb
pop
push
lods
dec
sbb
push
adc
mov
mov
jae
add
push
pop
lea
mov
adcb
adc
movsb
loop
xchg
xchg
mov
and
in
lahf
dec
test
js
and
inc
into
jb
in
stos
or
cli
mov
rcll
jns
sbb
dec
and
repnz
cli
add
out
cltd
shlb
pusha
jo
sahf
cmp
adc
mov
in
and
inc
mov
leave
pop
enter
fs
arpl
inc
test
imul
mov
aam
dec
mov
andb
add
mov
push
xchg
call
jg
jge
mov
or
xor
icebp
xlat
xor
movsb
flds
dec
aaa
repz
pop
cmp
mov
imul
iret
xchg
and
dec
rcl
jne
cmp
aam
mulb
and
dec
pop
lret
ljmp
je
sub
lahf
arpl
push
in
lds
pushf
and
push
jl
test
addr16
arpl
xchg
mov
insb
cs
ds
sbb
or
or
repnz
mov
addr16
popf
dec
cltd
xchg
in
outsb
dec
adc
clc
call
push
mov
push
cmp
je
dec
and
in
cwtl
add
insb
ja
outsb
ss
cmp
jae
repnz
repnz
pushf
cmp
adcb
hlt
pop
pop
push
push
sub
or
mov
pop
mov
mov
and
loopne
xor
pop
mul
loope
xlat
pop
mov
xchg
xchg
mov
scas
sbb
into
add
mov
mov
pop
notl
pop
and
xchg
outsl
adc
daa
push
and
pop
sbb
clc
dec
dec
xchg
cmpsb
and
inc
push
fsubrs
into
imul
mov
mov
xor
mov
dec
lret
repnz
inc
inc
pop
fmuls
popa
sbb
push
aad
data16
js
cli
mov
sbb
ds
cld
jo
stos
jae
lock
int3
mov
mov
sub
mov
test
popa
enter
jns
cmp
pop
push
mov
incb
adc
mov
mov
jge
cli
in
inc
in
inc
pop
fidivrs
mov
xor
push
fwait
dec
mov
xor
into
test
mov
and
or
lds
and
push
lods
mov
or
adc
and
inc
ret
mov
or
aad
loopne
stos
sub
lods
rolb
out
mov
dec
mov
mov
loope
popf
sub
dec
xor
fs
xor
call
dec
repnz
gs
imul
ss
in
data16
pop
mov
fmul
mov
push
jmp
cmc
mov
xor
mov
or
xor
xchg
dec
cld
sbb
scas
lret
xor
jecxz
adc
aam
imul
sub
dec
or
lods
xchg
push
jne
jo
push
lahf
je
mov
ljmp
push
xor
mov
stos
lret
inc
sub
pop
fidivrl
inc
ljmp
mov
out
sahf
in
xchg
test
inc
sti
xor
jb
cmc
inc
dec
insb
pop
out
nop
mov
pushf
into
sarl
cmp
cmp
push
aas
and
into
mov
mov
clc
sub
xchg
test
les
jae
fwait
clc
pop
push
gs
push
sbb
inc
sub
mov
and
dec
sti
xchg
add
adc
andl
out
adc
or
mov
fcoms
dec
adc
call
adc
mov
jp
jne
sub
scas
add
jne
adc
ja
test
jmp
and
pop
lods
mov
cmpsl
test
mov
sbb
dec
call
mov
mov
fimuls
test
mov
pop
lock
mov
and
adcl
test
ret
aaa
addl
inc
enter
pop
int3
mov
mov
pop
insb
and
test
repnz
push
insb
mov
fstpt
xchg
jmp
fnstcw
or
cmp
add
push
jp
jns
nop
pop
leave
jne
xchg
jge
and
stos
ja
jmp
pushf
mov
fstps
jo
stos
out
lret
jne
fdivrs
push
cmp
fcmovbe
push
push
scas
test
push
cltd
pop
mov
rcr
xor
mov
loope
sar
adc
repz
sti
sub
iret
es
test
sbb
sub
and
stos
fisttpll
xor
iret
aam
out
cmp
xchg
pushf
out
xchg
mov
test
pop
out
iret
or
mov
mov
sub
ret
sbb
idivb
outsl
popa
xor
cmpsl
adc
orb
xchg
je
push
mov
js
sub
adc
test
insb
inc
mov
adc
xchg
scas
cmp
xchg
dec
xor
lret
int
mov
xlat
jae
mov
push
xchg
mov
lret
sti
or
test
push
dec
insb
jnp
sub
push
dec
pop
lea
out
outsl
dec
cltd
test
arpl
and
and
jnp
push
iret
xor
aad
popa
fistps
in
xchg
addr16
mov
mov
test
fists
jb
pop
fidivl
mov
popa
mov
int3
imul
pop
cmpl
rcrb
nop
adc
cwtl
rolb
xchg
imul
mov
pop
lret
xor
imul
xor
fildll
add
sbb
mov
jns
bound
lea
push
or
xor
cmp
inc
mov
sahf
and
sub
mov
aaa
faddl
nop
inc
mov
fistps
jae
loop
xchg
mov
jbe
sbb
mov
and
lret
push
popf
pop
icebp
add
pop
loopne
jno
fsubrl
sub
mov
pop
ret
jmp
xchg
cmp
outsb
sbb
lods
jg
or
sbbl
push
lods
xchg
push
in
mov
js
ja
mov
and
mov
ja
jge
shlb
std
fistpll
jns
jp
add
mov
lods
cmpsl
mov
or
inc
push
scas
sub
rorb
and
movsl
movsl
mov
js
dec
divl
xor
addb
ss
movb
test
sbb
jmp
into
dec
inc
mov
fistpl
es
fisttpll
xchg
pop
movsl
cmp
cmp
jbe
inc
pop
pop
lcall
lock
aad
jb
test
nop
ja
xlat
mov
stc
out
mov
sti
xchg
js
scas
or
dec
cmp
lods
pusha
mov
rcll
aaa
or
ret
add
addl
and
mov
pop
das
stos
mov
push
and
aas
ss
xchg
or
cmc
outsb
cs
in
test
std
and
sahf
repz
fdivl
out
stos
aas
je
sarb
rcll
in
lahf
icebp
sbb
adc
cmp
sub
dec
jp
sbb
mov
mov
cli
and
adc
icebp
shlb
add
add
inc
mov
adc
stc
lods
push
xchg
in
test
movsl
push
sarb
addr16
dec
jecxz
std
xor
cmc
sarl
or
pop
subb
fisttpll
push
or
stos
mov
push
lahf
daa
sub
into
jne
fildll
pop
sbb
and
ja
mov
insl
sub
jno
sbb
push
xchg
test
lods
inc
push
jb
int
aad
or
rcrl
lock
sbb
jnp
jbe
or
xor
push
add
pop
xor
jno
push
mov
jno
gs
pusha
fs
fwait
mov
insl
mov
fnsave
stos
mov
test
clc
push
inc
cld
push
push
add
fcmovu
subb
mov
repnz
data16
pushf
cld
mov
je
pop
or
lock
jnp
shrb
adc
mov
es
sbb
je
test
int3
outsl
cmpsl
test
daa
icebp
insb
into
imul
sbb
push
jmp
sbb
xchg
xor
loopne
push
stc
push
xchg
sahf
aas
adc
lret
jne
icebp
pop
dec
in
mov
mov
and
sub
clc
pop
cmp
add
mov
jl
jge
out
xor
lea
clc
pop
xchg
sbb
mov
repnz
imul
icebp
dec
in
fildll
outsb
mov
cmovns
ds
cltd
or
jne
mov
and
and
movb
iret
jmp
gs
add
and
dec
lods
adc
dec
push
imul
jno
mov
add
sub
sub
mov
push
roll
xor
test
shlb
add
inc
add
lods
xor
sbb
rorb
outsl
fdivrs
mov
dec
push
inc
es
adcb
dec
movsb
roll
jl
dec
adc
test
add
xor
cmp
je
lods
jg
mov
in
pop
loope
aam
int3
pusha
or
xlat
fs
fists
cmp
inc
lock
mov
fstps
int
loopne
pop
mov
xchg
rclb
xor
sarl
jle
jae
sbbb
inc
scas
cmp
fcmove
aam
sbb
xchg
or
xor
jns
pop
jle
frstpm(287
icebp
dec
divb
sub
std
mov
dec
add
jmp
pusha
add
mov
sbb
scas
and
sub
mov
mov
in
pop
mov
imul
dec
cwtl
push
xchg
cmp
in
sub
icebp
push
push
neg
adc
or
adc
lods
adc
in
aam
or
mov
mov
sbb
roll
inc
push
add
jp
jo
mov
inc
adc
out
mov
add
cmp
dec
stos
loop
mov
dec
lret
fwait
leave
mov
inc
js
adc
in
sbb
fbstp
mov
popa
subl
imul
popf
dec
jnp
mov
pop
push
les
mov
add
xchg
and
sub
xchg
or
scas
xchg
jle
dec
xor
dec
frndint
push
lea
xchg
scas
pop
xor
push
lds
push
xchg
sub
jle
insb
stos
xchg
inc
sub
fdivrl
adc
push
fwait
sub
jb
push
push
ja
mov
int3
mov
les
sahf
je
mov
mov
dec
aad
push
ljmp
and
aad
test
lret
dec
out
outsb
cmp
test
jno
add
lea
sbb
lock
xor
aam
das
stos
popa
dec
pop
dec
and
mov
aad
ss
test
je
les
add
or
gs
jo
dec
push
push
iret
jb
cwtl
jbe
insl
outsl
push
sub
sti
jge
fisttpll
mov
sub
fcmovb
ficoml
mov
lret
mov
pop
jmp
pop
je
imul
adc
addb
xor
push
cmpsl
xchg
push
dec
aam
push
fadds
mov
add
lea
jge
mov
adc
loopne
in
jl
cmp
or
pop
pop
jbe
pop
dec
push
imul
pop
cmp
adc
loope
adc
gs
ret
mov
inc
mov
cltd
shll
inc
push
incl
int
in
push
pusha
xorl
mov
dec
inc
cltd
lock
hlt
sbb
cld
das
daa
aad
test
aam
jle,pn
andl
fs
fwait
ud2
out
jne
cmp
cmp
and
js
inc
lock
cmp
inc
push
imul
mov
std
in
add
push
sub
mov
xchg
pop
push
jne
fldt
cmp
mov
xchg
leave
fs
flds
int
test
add
push
lock
and
fmuls
fists
pushf
mov
adc
dec
push
lret
mov
inc
pop
push
lock
popa
sti
imul
aad
or
xchg
mov
dec
lcall
adcl
pop
inc
insl
mov
or
xchg
gs
jmp
dec
or
call
dec
inc
cmpsb
pop
mov
jnp
popa
cmp
inc
scas
bound
cmpl
sbb
push
test
pop
je
lcall
dec
dec
xor
jle
adc
aas
stos
jne
out
lds
dec
divl
lds
and
cmpsb
fidivrs
jbe
push
xor
mov
and
filds
xchg
les
in
xchg
clc
test
out
add
fmull
mov
incl
jmp
movsb
popa
gs
xchg
test
add
push
jbe
popf
pop
xor
clc
xor
xchg
orb
dec
mov
add
mov
ss
pop
jle
out
repnz
andb
jle
lret
xor
sub
adc
sahf
xchg
fmull
push
xor
cmp
cld
stc
mov
js
mov
into
mov
cmp
add
inc
sbbb
sbb
test
push
js
push
and
ss
mov
mov
sbb
sub
jns
and
pop
out
movsb
mov
sti
xchg
gs
roll
test
or
mov
mov
sub
or
and
push
xchg
push
out
je
mov
pop
and
test
insl
cltd
push
or
jecxz
xchg
cmpl
ss
push
lret
dec
ret
dec
call
fistpl
add
and
addr16
aam
inc
mov
dec
into
mov
sbb
imul
pop
movsb
leave
data16
es
insl
fidivs
sbb
push
jp
shrl
ds
fcmovne
gs
aad
mov
std
out
sub
jecxz
jb
sarl
pushf
cwtl
xchg
bound
mov
or
inc
or
inc
cmpsb
lods
lret
out
mov
inc
mov
les
pop
daa
js
lahf
sub
push
dec
cwtl
fistps
out
aad
mov
dec
mov
out
pop
xor
xchg
int
jle
rcr
jl
roll
jl
in
sub
inc
fnstsw
xor
fldl
mov
icebp
cmp
rcl
lock
jge
mull
ud0
in
jns
sub
movsl
ret
aaa
sbb
push
cmp
push
adc
int
js
out
into
fwait
xchg
sub
cwtl
add
dec
sti
orb
andb
cmc
jg
xlat
out
stc
repnz
int
mov
inc
enter
ja,pn
sbb
push
aas
adc
xor
xchg
addb
aaa
dec
loope
hlt
xchg
push
add
shr
cmpsb
cs
inc
lods
loop
adc
add
and
mov
push
fistpl
call
lock
jmp
push
jno
cs
mov
jmp
lods
fisttpl
mov
cmpsb
dec
int3
out
lds
lret
pop
add
push
or
xor
pop
dec
sub
inc
push
pop
push
or
es
and
cmp
dec
jle
pop
ret
xor
andb
pop
jnp
jmp
xchg
mov
cmpsl
mov
pop
jle
push
adc
iret
mov
mov
add
mov
pop
jno
ja
push
fidivs
imul
imul
sahf
aaa
pop
sbb
dec
mov
pop
mov
push
and
adc
dec
mov
xor
jp
push
movsl
push
inc
sub
xchg
vmread
xor
mov
push
adc
cmpsl
repz
cwtl
and
jne
sbb
jo
jg
mov
test
inc
jns
sub
stc
push
in
pop
pop
je
jbe
fcomps
int
cmp
pop
jns
pop
repnz
andl
icebp
cmpsl
jge
cmc
testl
push
pop
incb
xchg
std
fisubs
jo
mov
icebp
dec
nop
pusha
cld
shlb
mov
add
adc
mov
adc
rorb
in
leave
xchg
shlb
sbb
push
xchg
bound
jns
adc
xchg
cli
rclb
ja
mov
sbb
push
mov
movq
testb
add
dec
fwait
cmc
dec
js
ss
mov
outsl
ds
cmp
fnsave
out
mov
pop
mov
js
scas
cwtl
jo
stc
mov
pushf
inc
cs
push
xchg
out
push
das
dec
adc
add
in
dec
ret
pop
xor
xor
mov
lods
cmpsl
cmp
cs
xor
sub
cli
xor
inc
xchg
ss
out
add
jp
lret
and
cmpsb
mov
sahf
sahf
lahf
out
in
mov
sti
ret
daa
adc
es
dec
and
cmp
add
and
lcall
loope
adc
ret
mov
lods
push
rol
push
sbb
fstps
mov
xchg
scas
xchg
inc
adc
ja
mov
adc
jmp
cmp
fstpl
or
in
or
icebp
clc
test
pusha
mov
movsl
pop
jecxz
cmp
sub
in
scas
and
rcrl
insb
pushf
iret
pop
dec
mov
test
inc
pop
fstps
sub
jbe
mov
and
fistps
jb
mov
das
fists
mov
or
mov
push
mov
push
fsubrl
andl
push
push
mov
lcall
or
jge
mov
std
dec
addr16
jb
mov
mov
lret
push
push
shrl
cmp
sub
mov
pop
cmp
popa
iret
loope
xchg
push
mov
sbb
insl
and
or
arpl
push
je
lret
cli
xor
loopne
movsb
xchg
sub
push
lods
sub
repnz
int
xor
sub
daa
mov
mov
jo
inc
sbb
push
or
add
mov
jecxz
sub
push
pop
aaa
arpl
orw
push
inc
mov
enter
sub
mov
cmpsb
mov
jno
cmp
movsl
fstpt
and
insb
push
sbb
ror
arpl
jne
insb
andl
sbb
test
cmp
mov
scas
xchg
mov
cmpb
jmp
hlt
fistl
popa
xchg
hlt
pop
jge
lock
loope
sbb
push
subb
push
inc
test
sbb
sbb
jge
inc
outsl
pop
mov
es
hlt
sbb
and
nop
hlt
pop
insb
stos
out
lds
add
xchg
pop
dec
ret
pop
xor
add
push
cmp
sahf
push
mov
lret
inc
xorb
fwait
cmc
das
dec
shll
pushf
fisubs
out
movsb
lods
push
into
xchg
test
cmpsb
popa
jmp
fdivs
dec
in
push
cltd
out
roll
jbe
fldcw
dec
cmp
imul
rcr
cmpsl
push
aam
test
add
mov
dec
arpl
push
pop
mov
inc
pop
inc
jecxz
mov
cwtl
imul
mov
or
sbbb
insb
or
repz
jle
sub
add
adc
pop
adc
mov
cmc
sbb
clc
cmpsb
jg
and
repz
jbe
mov
mov
cs
iret
rcrl
jmp
aas
and
icebp
sbb
mov
xor
xchg
dec
shrl
mov
call
inc
inc
loopne
in
psubusw
hlt
jg
clc
and
mov
ljmp
test
sub
in
mov
adc
mov
xchg
push
sbbl
inc
add
mov
pusha
xor
pop
sub
iret
jns
fidivrs
cld
scas
jmp
xor
sahf
cwtl
mov
icebp
fisubl
jne
js
lcall
fs
ror
jae,pt
mov
imul
xchg
fldcw
enter
loope
or
cmc
adc
mov
out
push
in
lock
inc
mov
mov
pop
test
daa
mov
xchg
add
mov
fwait
sti
loopne
lock
js
arpl
push
mov
scas
fstp
cltd
or
leave
out
xchg
lahf
xchg
mov
fcoml
shr
jle
cmp
mov
out
test
insl
mov
cltd
je
fcmovbe
or
repnz
jmp
mov
sahf
sbb
repz
scas
int
mov
out
mov
je
or
inc
jmp
scas
push
mov
cmp
jbe,pt
stos
in
daa
and
xor
insb
xchg
cs
mov
loope
mov
sti
das
add
xchg
sbb
xchg
cld
jg
clc
xor
push
fdivl
test
mov
pop
sbb
call
and
fwait
add
not
pushf
in
pop
fnstsw
cld
push
int
repnz
stos
stos
mov
shlb
movsb
mov
push
jns
sub
ljmp
out
in
sub
lock
pop
push
cmp
out
lods
and
push
loop
sarb
int3
dec
es
pop
jp
enter
or
and
mov
adc
push
mov
jbe
daa
xor
inc
pushf
xor
adc
imul
roll
cld
or
outsb
pop
pushf
jg
mov
adc
shrl
ret
cmc
sub
pop
mov
loope
cmp
mov
xor
fisttpl
add
das
lock
loop
stc
jbe
mov
frstor
and
add
clc
sbb
xchg
popf
xchg
fbstp
push
mov
ret
and
pop
xchg
rorb
in
adc
repz
mov
sub
sahf
dec
sub
mov
adc
cmpsl
mov
xor
sbb
cmp
mov
xchg
std
movb
int
inc
jnp
out
dec
scas
lds
mov
sbb
pop
arpl
jge
int
push
push
mov
jb
pop
adc
sub
sbb
cltd
dec
fildl
daa
adc
lahf
sbb
in
shr
fdivrl
jmp
negb
mov
jne
inc
fldt
and
sahf
test
rcl
push
push
dec
mov
pusha
sbb
add
sahf
pop
out
dec
je
xchg
sahf
loop
dec
nop
mov
rcrb
mov
jmp
frstor
lods
jecxz
imul
loopne
dec
inc
adc
jb
outsl
jne
or
push
mov
jecxz
pop
test
xchg
dec
dec
or
lret
je
pop
push
sbb
cltd
cmp
in
jg
mov
loope
ss
push
movsl
mov
data16
ds
cmp
mov
pop
push
push
dec
pop
push
sub
out
jle
mov
xchg
mov
insl
jg
mov
mov
loope
dec
sub
dec
outsb
cwtl
mov
dec
jo
sub
mov
mov
lods
xor
nop
fistpll
mov
xchg
es
or
js
lret
adc
in
adc
outsl
mov
loope
jmp
mov
sub
pop
jnp
iret
test
or
cmp
scas
mov
les
hlt
push
lds
lahf
mov
imulb
mov
jp
aas
jnp
mov
pop
sbb
repz
pmuludq
jmp
loopne
test
addb
mov
jnp
aas
ljmp
jg
repnz
cltd
mov
lods
xchg
int3
cmp
es
jge
inc
addb
cltd
adc
jl
ljmp
in
inc
dec
cwtl
adc
push
stc
sbb
and
push
push
sub
aaa
pop
xor
dec
push
das
mov
imulb
and
push
pop
test
jl
lods
flds
jl
dec
or
mov
mov
sbb
das
dec
jns
xor
lock
add
mov
or
inc
and
fs
fwait
cltd
popa
xor
fstps
orb
inc
xchg
push
mov
movsl
pop
pop
lret
cmp
je
shr
xchg
cmp
jns
jno
fidivs
mov
shll
aam
cltd
lock
enter
xchg
pop
test
shrb
ret
loop
dec
subl
mov
jp
mov
das
fisubs
fs
shrl
add
mov
sbb
dec
stos
mov
das
cmp
scas
or
in
inc
pop
aas
and
dec
adc
sbb
fsubrl
call
mov
cmpsl
popf
lds
xlat
mov
fdivrl
fdivr
lods
push
fstpl
in
fmull
dec
mov
push
push
xchg
mov
insl
mov
mov
test
jp
lods
jnp
call
dec
std
jp
out
mov
insb
mov
ret
xchg
push
or
int3
cmp
call
jnp
rclb
push
jbe
or
cwtl
adc
dec
add
adc
pop
jp
push
push
leave
push
stos
lea
dec
sub
push
test
repz
iret
jl
jecxz
orl
icebp
stos
jecxz
fucom
sbb
lods
xchg
into
push
daa
mov
lret
orb
movsl
clc
push
pop
fmul
rcll
pop
push
out
fwait
mov
mov
pop
sub
or
mov
lds
mov
xchg
decl
frstor
or
aam
iret
mov
push
sbb
in
adc
and
out
aam
inc
cmp
int3
mov
dec
aaa
xchg
outsl
inc
pop
imulb
fcomps
ja
jl
ficomps
sbb
xchg
jmp
jo
jb
stos
sub
into
ljmp
jb
sub
push
ret
jp
in
mov
jmp
adc
mull
mov
inc
adc
jb
push
lcall
mov
lret
js
add
add
and
inc
mov
mov
and
imul
outsb
inc
or
leave
inc
push
out
sub
inc
push
stc
int
mov
leave
lret
pop
add
stos
sar
dec
stc
dec
and
pop
add
cs
mov
mov
sub
xchg
ja
lcall
and
out
add
jo
jae
add
mov
pop
jnp
mov
sbb
shrl
cmp
data16
push
pop
push
imul
scas
pop
push
aad
out
xchg
adc
cmpsb
out
stos
movsb
push
scas
sbb
adc
push
jmp
out
and
add
mov
jno
or
push
inc
add
repz
cld
rcrl
enter
dec
orl
test
and
repz
inc
nop
cltd
adc
insb
xchg
int
call
mov
jno
cwtl
xlat
adc
popf
and
les
cli
jecxz
inc
popf
out
mov
push
sbb
push
lcall
sub
mov
out
push
fistpl
js
xor
out
push
pop
and
inc
movl
mov
jne
ja
inc
sub
push
in
clc
iret
ljmp
in
and
dec
xchg
gs
push
pop
adc
adc
or
xchg
mov
cli
cwtl
mov
jg
adc
cwtl
enter
push
jmp
cld
js
rorb
and
into
dec
xor
imul
mov
fmull
in
lahf
dec
fwait
push
lahf
or
pop
mov
xchg
sub
aas
or
fnstenv
push
inc
test
lret
into
aaa
jge
lcall
jae
inc
movsl
lds
loopne
push
out
sbb
bound
push
popf
jo
jle
pop
test
scas
fmuls
xchg
test
xchg
in
popa
mov
xorb
lods
adc
test
lcall
or
pop
add
das
add
outsl
pop
sub
dec
test
loop
enter
leave
aad
addr16
shr
add
mov
inc
shlb
xchg
inc
mov
adc
or
or
push
ja
int
add
or
mov
fs
aaa
sub
inc
cli
stos
test
outsl
ds
jl
cmp
jb
push
roll
addr16
mov
aad
mov
sub
popa
shrd
add
cmpsb
mov
xor
pop
out
sub
jne
cld
sbb
and
or
sub
cli
or
jns
cmpsl
mov
in
addr16
popf
test
push
xlat
fidivrl
mov
fs
jg
cltd
and
icebp
inc
add
add
gs
pop
adc
out
aad
test
test
dec
push
xchg
xor
push
mov
sti
push
rcrl
cmp
aam
xchg
mov
push
lds
stos
rorb
pop
sbb
andb
and
dec
dec
pusha
jb
bound
dec
xchg
and
pop
xchg
sub
shlb
iret
push
and
stos
leave
push
shll
jnp
lea
mov
adc
imul
loope
lods
or
push
outsl
add
andl
xor
mov
mov
inc
fcmove
pop
popa
cmp
popa
dec
dec
mov
push
add
cwtl
push
dec
cmp
lods
aaa
rorb
gs
shlb
enter
dec
shlb
push
push
je
rorb
pop
js
mov
adcb
jb
mov
pusha
lcall
jns
ficompl
sbbb
jl
mov
clc
push
scas
inc
ds
mov
xor
ja
mov
lcall
fwait
iret
enter
sub
push
das
rol
sub
lods
jg
cmp
outsl
add
jl
cld
push
or
call
out
pop
fimull
mov
or
inc
or
mov
and
orb
aam
xchg
mov
sti
add
xchg
aam
jecxz
ds
jnp
lcall
push
jl
fisubrs
ret
mov
pop
aam
in
mov
adc
adc
insb
lret
dec
dec
jnp
dec
dec
pushf
add
mov
and
mov
js
mov
inc
pop
xchg
or
in
bound
iret
out
mov
cli
hlt
dec
cs
std
push
add
mov
xchg
cmpsb
jne
sarl
add
test
mov
mov
pop
pop
out
repnz
add
ds
cmpsl
add
test
sub
loop
fimuls
cmp
jge
jno
ficoms
push
push
lahf
mov
cmp
cmp
sbb
sub
out
pop
mov
dec
pop
cmpsb
into
sbb
mov
and
fildll
out
pop
sbb
push
ja
movsb
xchg
stos
mov
stos
sub
and
add
pushl
push
les
adc
mov
mov
xchg
enter
aad
std
push
pusha
jge
cmc
arpl
mov
test
adc
jb
inc
hlt
mov
not
push
les
mov
and
jle
jnp
cmc
cltd
cmp
xchg
movsl
fstl
clc
dec
inc
pop
cli
and
xor
mov
xor
mov
mov
cmp
test
or
lea
push
cmp
xor
lds
imul
lds
dec
cmpsb
stc
test
repz
icebp
in
daa
dec
and
or
or
fisubs
pop
test
cmp
insb
ss
loope
and
cltd
repz
in
xchg
add
pop
jbe
rclb
repnz
stos
sbb
sub
int3
fwait
xchg
call
ret
sub
lret
mov
andl
ds
mov
ret
mov
sub
sbb
sarl
sub
sahf
xchg
xor
movsb
ljmp
inc
inc
push
push
cmp
ret
jns
in
pop
test
xchg
cmp
add
xchg
xor
mov
aas
out
push
pop
xor
xchg
sbb
push
and
leave
adc
std
cmp
push
sub
leave
cmp
cs
add
lahf
enter
lods
cmp
ficoml
push
sub
cwtl
cmc
outsb
sbb
xchg
xor
movsb
pop
out
fs
in
sbb
shl
lret
daa
call
shlb
lahf
cld
bound
aaa
dec
rorl
cmpsb
xchg
push
pop
or
out
xor
or
cld
xchg
adcl
jnp
push
add
loopne
sahf
fwait
mov
jg
out
mov
mov
xor
jmp
les
adc
inc
pop
movsl
fs
orl
ss
mov
sub
testl
pop
sub
test
fucom
lea
xchg
jns
push
test
mov
pop
and
daa
adc
mov
adc
add
sub
aaa
jns
inc
aam
outsl
pop
jnp
ja
inc
mov
mov
xlat
in
and
inc
add
add
popf
xchg
inc
lods
sbb
adc
insb
stos
int3
mov
sub
je
fildll
shlb
shlb
imul
bt
sbb
enter
inc
inc
adc
push
lods
bound
pushf
jge
and
mov
int3
cmp
insb
cmc
add
pop
push
mov
add
in
dec
mov
pop
sub
cli
sbb
popa
sub
adc
dec
adc
int3
xchg
dec
jecxz
shlb
sbb
adc
sbb
jae
xchg
sbb
jp
mov
and
cli
imul
je
cltd
lock
lcall
dec
jb
fcomps
or
mov
cwtl
mov
adc
call
popa
mov
sbb
orb
pop
int
xchg
movsb
mov
imul
std
xchg
test
daa
mov
pop
add
adc
out
repz
xor
lcall
mov
mov
mov
loop
dec
push
aas
cld
mov
add
cmp
mov
data16
and
les
sub
mov
push
fldcw
push
subb
or
sti
out
lock
sbb
sub
or
test
leave
lcall
fdivrp
sub
movsl
mov
mov
out
push
lcall
sti
or
dec
push
pop
test
in
cmp
ja
push
jnp
push
inc
and
or
clc
insl
inc
fstpt
rolb
inc
or
adc
push
or
insb
xchg
adc
dec
mov
push
sub
mov
mov
mov
lods
sbb
pop
mov
mov
dec
or
push
xchg
jl
sbb
mov
or
and
les
inc
sub
rorb
xor
mov
inc
cltd
push
ficoms
push
mov
xchg
cwtl
js
shrb
popa
pop
ss
test
shlb
and
lcall
mov
cwtl
out
and
xlat
lock
xchg
pop
sub
imul
in
leave
adc
mov
andb
sub
out
xchg
loop
imul
mov
gs
ficomps
rcll
mov
xchg
push
xor
pop
push
or
out
sti
cmp
xor
sti
jbe
jmp
jp
aad
push
cli
xor
lcall
jns
and
fisubl
icebp
jmp
lcall
mov
mov
dec
sbb
mov
loop
aas
cmp
ret
pop
loope
cmp
daa
icebp
and
and
pop
out
icebp
adc
test
and
cli
inc
out
push
push
mov
and
xchg
loopne
fidivs
jne
push
add
roll
mov
add
jle
dec
fsubrs
ljmp
jb
and
xlat
inc
fldl2e
inc
xor
sahf
insb
and
mov
rcl
mov
dec
xchg
cmp
inc
or
xchg
roll
fimuls
shrl
xor
push
add
js
jge
sbb
or
lea
int
mov
aad
sbb
or
lds
imul
scas
leave
int3
push
mov
jp
and
rcr
leave
cmc
and
dec
xlat
pusha
cmp
inc
addr16
rsqrtps
sbb
mov
push
std
or
leave
cmc
clc
dec
jnp
negb
outsl
xor
outsl
mov
xor
xchg
push
lods
popf
inc
fcos
gs
add
loopne
out
cwtl
popf
jno
fcom
and
mov
inc
out
es
lock
or
push
jecxz
xchg
pusha
mov
jne
cmp
vcomisd
xor
test
jge
in
out
add
add
xchg
call
mov
xchg
and
and
out
imul
xor
or
fwait
enter
sub
notb
insb
add
push
mov
push
add
cli
push
lret
mov
popa
push
mov
ljmp
out
add
in
inc
xlat
insb
xchg
pop
fistpl
xchg
pop
push
or
div
pop
and
into
aad
xchg
jle
imul
xor
add
mov
or
fdivrs
imul
pop
testb
adc
pop
test
xorb
sbb
loop
call
pop
nop
ss
pop
lods
mov
fdivl
fs
jge
xchg
xor
sbb
mov
loop
popf
into
pop
aaa
adc
mov
cltd
mov
mov
lcall
ss
addb
and
gs
jecxz
mov
push
mov
pop
in
sbb
daa
xor
inc
scas
mov
cld
mov
ljmp
mov
outsb
js
lds
xchg
add
sarb
popf
add
fnstcw
mov
or
sub
cmpsl
jecxz
cmpsb
xor
sub
xchg
sbb
repnz
dec
mov
cld
ret
xchg
cltd
cltd
nop
scas
fldpi
movsb
xchg
bound
dec
adc
inc
sbb
jnp
outsl
iret
dec
shrl
or
or
loopne
jb
push
add
sub
and
pop
mov
sub
mov
fsubrl
push
pop
sub
icebp
dec
inc
imul
ss
repz
mov
mov
adc
xor
testb
cmp
out
js
in
in
jge
cli
scas
adc
jmp
lea
ljmp
sub
inc
mov
fistpl
xchg
fnstcw
mov
int
mov
xchg
imul
pop
push
pop
mov
int
adc
in
sbb
icebp
lods
stos
sbb
popl
and
fwait
enter
repz
xchg
cwtl
cld
hlt
mov
xlat
lods
hlt
and
sbb
ss
outsb
mov
ret
sub
push
dec
call
bound
add
mov
outsb
jp
fimuls
adc
lcall
add
imul
mov
shll
pop
in
pop
jg
xlat
pop
jb
in
xor
add
and
je
xchg
das
roll
loope
mov
ds
ror
cld
dec
dec
sbb
mov
nop
mov
clc
popf
lods
mov
xchg
sahf
scas
add
loop
push
jecxz
in
insb
and
sub
xchg
repnz
lods
cwtl
loope
out
sub
das
lret
mov
push
rclb
je
mov
pop
pop
xor
in
data16
rcrl
cmp
inc
clc
outsl
lahf
mov
fdivrs
mov
or
aaa
xchg
sbb
int
push
ds
dec
add
lret
jl
push
xchg
add
cltd
repnz
cmp
jo
or
jecxz
and
mov
and
js
les
adc
test
dec
pop
dec
call
in
orl
dec
arpl
enter
ret
negb
and
xchg
outsl
dec
or
js
sub
push
cli
xor
dec
gs
cltd
pop
jne
or
rcrb
fwait
sbb
testl
ss
out
call
push
mov
int3
mov
sub
pop
and
mov
inc
unpcklps
movsl
insb
mov
mov
cmpsl
jns
xchg
lret
and
orl
bound
mov
ss
idivb
jbe
orl
clc
inc
rol
sbb
mov
mov
repnz
lea
mov
js
call
or
les
mov
in
cmpb
push
call
mov
out
dec
cmp
incb
cmp
push
in
repz
mov
xchg
inc
sti
pop
leave
iret
insl
push
stos
adc
cmp
or
stos
pusha
xor
adc
jno
movsl
scas
push
shufps
dec
notl
mov
pop
inc
pop
mov
dec
cld
out
pop
pushf
or
enter
aas
test
loope
out
jae
fisubrs
iret
adcl
loope
dec
es
sbbb
sub
cmc
push
cmp
jno
mov
pop
adc
lahf
mov
lret
jno
pushf
pop
cmp
daa
mov
inc
cmpsl
and
sub
lret
push
lods
xorb
jl
out
js
ss
cmp
add
push
dec
pop
sbb
sbb
mov
test
and
lods
pop
inc
lret
push
push
ffreep
jb
outsl
int
pop
cltd
push
jae
bswap
fldl
testl
ret
xchg
jmp
out
cmp
cwtl
mov
insb
and
mov
dec
pop
and
nop
pop
adc
mov
push
out
arpl
and
ljmp
pop
jmp
cmpsb
ljmp
fstl
xor
adcl
xor
mov
cmc
pop
inc
xor
dec
lcall
jle
aad
jns
cmp
clc
test
decl
mov
fistps
add
cmp
adc
scas
in
fdivs
outsb
or
aaa
stos
mov
sbbb
cld
sbb
test
out
lahf
int
add
xlat
leave
sub
bndstx
mov
pop
aaa
js
jno
cld
xchg
jl
jp
xlat
imul
mov
negl
xchg
sub
pop
pushf
sbb
shll
movsl
stc
imul
sub
adc
movsb
addr16
cltd
jmp
lret
out
loopne
pop
lcall
lahf
fisttpl
rcll
fbld
cmp
test
cmpsb
mov
dec
movsl
cs
icebp
mov
xchg
int3
les
daa
arpl
fildll
adc
dec
and
pop
aam
xchg
adc
call
idivl
mov
sahf
shlb
lcall
jns
sbb
ss
xchg
call
and
ja
int
xchg
in
pushf
sub
or
loopne
xchg
mov
fs
test
stc
das
jmp
mov
inc
lahf
shll
mov
lds
pop
bound
outsl
mul
in
fidivl
push
inc
sub
dec
arpl
into
stos
imul
shr
cmpl
and
fiaddl
bound
cmp
pop
call
cmpsl
mov
mov
lret
fdivr
stos
jg
lahf
xor
fadds
and
insb
jns
popa
mov
sub
xlat
and
out
cmp
outsl
in
mov
cld
cli
jb
enter
cmpsl
out
add
sahf
inc
ds
lea
pop
cmpsb
rcrl
and
jp
ss
out
repz
dec
imul
sub
mov
inc
adc
mov
scas
pushf
and
mov
mov
aad
das
mov
mov
rorb
jl
cmpsl
out
shrl
push
jno
lods
and
adc
out
ret
rcrb
outsl
mov
adc
sbb
or
lods
mov
inc
ljmp
push
push
lahf
lret
adc
cmpsb
outsb
xchg
add
sbb
js
sub
fnsave
mov
dec
pop
adc
adc
mov
hlt
inc
je
push
cmp
test
dec
cld
pushf
test
push
and
cmp
push
pop
mov
cltd
fimull
popf
jg
and
popf
lods
xor
stos
cltd
xchg
inc
jecxz
xor
xor
jge
mov
sub
icebp
das
inc
punpckhwd
mov
and
ljmp
inc
xchg
or
cmp
fildl
or
dec
inc
jns
cmp
sarl
aaa
jp
jnp
jecxz
cmpsb
pop
cmp
cmp
not
inc
je
mov
push
cmp
sub
mov
movl
mov
mov
lea
shl
push
enter
push
pop
jne
dec
out
sub
pop
cwtl
mov
lea
fsubs
mov
aad
or
rcll
mov
ss
lahf
push
out
cmpsl
imul
jno
inc
out
pop
pop
push
andb
rorl
in
addb
mov
push
push
jns
jbe,pt
cmpsb
jb
push
out
pop
jne
cli
shrl
pop
jg
mov
pusha
sub
and
jg
push
loope
xor
fldenv
dec
out
shlb
daa
out
mov
fwait
pop
mov
stos
fcoml
out
lds
ljmp
adc
jg
cwtl
dec
sbb
aad
dec
int3
sbb
or
pop
and
xchg
shll
adc
cmp
shl
add
pop
aas
rorb
inc
cmc
pop
add
je,pt
clc
mov
insb
xchg
inc
popf
push
ljmp
and
imul
hlt
adc
cmp
sub
inc
popl
mov
mov
dec
sbb
sbb
cli
adc
pusha
out
dec
mov
call
leave
dec
aad
popf
jbe
test
mov
imul
jno
lock
call
jmp
sti
lds
pop
mov
lret
cmpb
cli
lret
dec
sub
or
jo
xor
cmp
pop
add
imul
pusha
mov
ljmp
xchg
mov
js
iret
testb
inc
or
mov
or
push
out
or
jmp
mov
insb
push
pop
fucomip
xor
or
adc
lods
fsubrs
in
fwait
cmp
jge
push
sbb
cli
add
push
push
loopne
lods
loop
ror
cltd
daa
movsb
ljmp
mov
test
fmul
ret
sbb
sub
jbe
xchg
insb
xor
lods
pop
mov
sar
jg
pop
sub
adc
or
adc
cld
outsb
in
clc
xchg
imul
shll
out
mov
lock
sub
or
xchg
std
sbb
mov
jecxz
lods
addl
pushf
fidivs
dec
add
mov
cwtl
xor
mov
shrl
shll
stos
cmp
ss
jecxz
lods
pop
pop
addl
enter
fwait
mov
out
aad
inc
sbb
jecxz
popa
mov
fs
inc
pop
mov
cmp
mov
loopne
sbbb
jno
or
ret
push
push
mov
inc
movl
negb
dec
push
push
adc
push
out
sub
js
lret
fucompp
arpl
int3
out
add
in
sub
mov
mov
setae
bound
ficomps
ret
push
stc
mov
mov
lcall
jle
push
bound
test
fwait
nop
jp
arpl
sub
mov
pop
ret
notb
mov
xchg
scas
inc
mov
aad
scas
xchg
cs
jle
inc
les
sbbl
xlat
push
stos
adc
out
jns
push
push
mov
dec
push
push
popa
xchg
push
inc
inc
aas
mov
dec
test
xor
mov
fsts
mov
xor
pop
push
jo
repz
inc
xchg
xor
lret
and
xor
lfs
sub
and
pop
mov
movsl
mov
sub
pop
ja
jp
and
lock
xchg
orl
subl
loop
test
pusha
cltd
adc
mov
dec
mov
in
enter
lods
inc
popf
cld
cs
cltd
lret
mov
add
clc
test
out
sub
xor
testb
pusha
iret
push
mov
push
mov
cld
repnz
stos
movsb
lahf
cmp
mov
daa
push
in
repz
jb
cs
scas
rcr
stos
sbbl
cmovo
in
xchg
push
fsubrl
jmp
ret
mov
mov
or
push
repz
xor
mov
mov
aam
adc
popf
mov
pop
mov
sahf
or
aad
mov
out
push
mov
inc
mov
sub
mov
xor
mov
sbb
inc
ror
xchg
xorl
adc
loope
push
mov
push
xor
mov
out
dec
add
lock
incb
xchg
lret
push
jae
inc
loopne
in
in
sahf
jecxz
mov
sub
fsincos
cmp
jns
xor
cmp
mov
xchg
and
std
add
xchg
loop
mov
push
lock
call
push
cmp
jle
or
pop
or
pop
mov
or
jecxz
mov
jbe
test
pop
fldcw
dec
add
rclb
test
test
out
lea
dec
shrl
mov
mov
dec
andb
inc
mov
mov
leave
negl
push
hlt
mov
ret
xchg
sahf
movsl
jmp
pop
into
sti
mov
dec
daa
mov
cwtl
dec
stc
mov
adc
lods
test
or
orb
cwtl
jno
pop
gs
insl
es
bound
rorb
dec
pop
push
jp
mov
arpl
ret
inc
ss
shl
cmpsl
xlat
mov
xlat
add
in
loop
mov
in
cmpsb
les
add
les
stc
pop
loope
push
loop
lret
xor
pop
add
push
push
pop
iret
jb
add
mov
mov
stos
or
insb
mul
in
push
stc
jp
adcb
lock
jg
repz
dec
outsl
adc
pop
sub
ja
loope
int3
stos
fcomps
xchg
xor
mov
rolb
add
loop
pop
out
mov
sub
and
dec
push
xchg
or
pop
bsr
pop
and
push
out
or
out
jns
jp
push
mov
and
mov
lcall
cmpsb
arpl
lock
das
mov
and
cmpsl
sbb
leave
lds
hlt
push
adc
fldenv
pushf
push
mov
imul
push
pop
mov
sbb
dec
rcll
mov
mov
mov
sti
xorl
pusha
sbb
jge
xchg
imul
aaa
popf
or
out
mov
mov
or
bound
xchg
dec
dec
pop
std
lock
int3
repnz
mov
sbb
push
push
jle
cmp
jne
cmp
loopne
in
scas
inc
idivl
mov
and
fs
decb
sbb
push
in
out
repz
cs
sub
pop
js
int
lock
fstpl
push
in
shrb
aas
sbb
ret
cmp
add
xchg
jno
incb
jnp
data16
jb
ret
fcoms
pop
ret
mov
jnp
jb
test
lret
mov
test
xor
lahf
aaa
into
mov
mov
js
and
popa
pushf
fildll
jl
or
add
sbb
pop
in
mov
add
aaa
or
out
insb
dec
push
minps
popf
data16
imul
sub
fiadds
pusha
fwait
popl
ficoml
mov
mov
mov
jp
into
es
xchg
jo
cmp
adc
push
lods
stos
jmp
stc
pop
rol
pop
mov
jmp
negl
push
fs
scas
int
cmp
into
lods
pop
or
jne
pop
jnp
cs
fsubs
cli
lods
js
leave
outsl
push
pop
mov
pop
mov
cmp
push
mov
ljmp
cmp
sbb
jp
push
out
mov
mov
xchg
in
aaa
out
xor
ljmp
sti
push
xor
xchg
aam
test
inc
push
in
dec
ds
in
in
xchg
inc
dec
bound
iret
dec
adc
or
inc
cli
pop
cmp
mov
ljmp
lods
push
movsb
out
hlt
sbb
push
loopne
es
add
fidivs
loopne
outsb
jecxz
jle
sbb
sub
pop
es
xchg
cmpsb
mov
je
cmp
pop
sub
add
lds
cmp
adc
dec
fadds
cmpsl
test
test
mov
pop
lods
or
mulb
xchg
inc
xlat
and
sub
cld
adc
push
jnp
lea
cmpsb
push
cmpl
dec
inc
inc
loope
sbb
arpl
int
aam
xchg
dec
cmpsl
jne
jbe
push
dec
std
push
cmp
cmp
jmp
in
push
and
orb
fdivrl
mov
sbb
xchg
xor
mov
push
jbe
xor
lret
cmp
dec
pop
sbb
ja
mov
aas
lret
fwait
aam
lret
push
push
or
cmp
lea
hlt
pop
push
aas
mov
mov
pop
xchg
loop
sbb
iret
push
testb
loop
andl
mov
test
cld
dec
lods
addr16
ret
add
push
push
fiadds
cld
lahf
rclb
testb
cwtl
add
mov
gs
leave
sub
iret
test
test
mov
dec
lds
inc
das
fs
sbb
cmc
mov
pop
mov
pop
mov
movsb
adc
dec
repnz
jg
pop
xor
sbb
rorb
dec
sbb
in
inc
lods
cmpsb
pusha
cmc
xchg
cmpl
mov
jp
xchg
leave
out
fdivs
faddl
mov
or
push
jl
gs
sti
xchg
push
popf
push
loopne
xorb
lret
nop
test
push
and
cmc
and
sbb
mov
dec
outsl
pushf
mov
scas
loope
stos
push
test
xor
jecxz
add
and
xchg
loopne
loope
les
add
mov
xchg
inc
dec
les
mov
xchg
loope
mov
jne
test
lock
xchg
jb
inc
aas
mov
inc
pop
movsl
mov
mov
sbb
stos
aaa
sbb
adc
pop
pop
pop
sub
lahf
fmuls
push
add
sbb
xchg
test
or
test
cmp
jnp
test
js
popf
out
mov
repz
aas
test
mov
dec
aaa
pop
int
das
nop
dec
je
rcl
jmp
lahf
adc
les
fcoml
add
inc
addr16
add
cmp
pusha
stos
sub
xor
dec
mov
mov
js
test
mov
hlt
jmp
stc
pusha
inc
cs
fcompl
push
add
scas
mov
lret
int
add
aam
jmp
lods
push
dec
into
push
popa
jp
test
mov
mov
fstps
jbe
xchg
insb
repnz
mov
or
inc
add
mov
int
ljmp
int
pop
push
dec
sti
inc
xchg
fst
inc
fisttpl
jle
popa
cmp
sbb
add
xchg
sbb
ret
nop
bound
mov
mov
pop
add
and
push
shlb
loopne
movsb
mov
arpl
aaa
cmp
cld
xchg
daa
repnz
popl
mov
cmp
mov
mov
ja
fisttpl
xchg
cmc
mov
jg
fadds
dec
pop
sub
sub
dec
push
pop
insl
ljmp
mov
add
lock
data16
fcmovnu
mov
mov
sub
push
push
jmp
imul
movsb
lret
adc
push
mov
mov
fistl
clc
mov
daa
xchg
mov
jmp
outsl
loope
xchg
sbb
into
push
andb
mov
test
ret
add
mov
push
cmp
imul
mov
cmpsl
and
mov
lahf
push
outsb
lds
out
aam
cmp
outsl
push
or
unpckhps
fwait
or
and
xor
pop
into
out
inc
fwait
cmp
dec
jno
ds
inc
mov
cltd
mov
cld
push
loop
inc
cmp
jnp
xchg
jns
add
leave
mov
cltd
mov
pop
xchg
add
cmp
dec
cmc
lret
push
pop
hlt
dec
movsb
sub
or
dec
xor
fnstsw
jle
out
mov
in
mov
sub
outsl
push
push
dec
jmp
and
repz
cwtl
pop
jb
push
cmc
adc
sub
sahf
imul
dec
push
loope
aad
imul
rcll
inc
or
cmpsb
imul
mov
pop
stos
dec
imul
jecxz
hlt
out
mov
arpl
dec
mov
pushf
or
ret
and
ret
dec
add
int3
testb
sub
shl
sub
outsl
stc
xchg
or
sub
xor
pop
sub
nop
fdivs
test
lods
std
mov
gs
mov
clc
nop
std
xchg
mov
lds
fadd
dec
xlat
fstl
cmpsb
bound
xchg
mov
mov
mov
fcomp
sti
sub
push
call
jno
cmp
inc
testb
pop
xlat
cmp
xlat
enter
mov
inc
mov
pushf
jp
loopne
xchg
out
xchg
jbe
push
mov
pushf
mov
in
subb
pop
inc
jns
jp
adc
bound
mov
dec
movsb
inc
popf
stc
rorl
push
lods
negl
out
push
mov
ds
mov
mov
fnsave
add
lea
adc
clc
sub
dec
mov
dec
pushf
cli
cmp
dec
insl
push
jp
xor
outsl
cmp
xchg
sbb
repnz
dec
mov
push
outsl
daa
mov
iret
scas
test
ds
in
pop
in
cwtl
bswap
test
adc
lcall
dec
mov
sub
push
push
jns
lds
repz
xchg
andb
in
sub
lret
and
add
xchg
mov
or
dec
sbb
xchg
adc
push
cmc
fprem
xchg
jno
sub
adc
jnp
jb
jb
sti
ljmp
in
ret
in
mov
test
mov
fldl
addr16
add
mov
and
and
jo
cmp
sbb
adc
mov
dec
cmp
imul
fdivl
lcall
inc
cmp
inc
cltd
inc
filds
cmpsb
test
dec
cmp
push
in
push
fdivs
sbb
xchg
adc
repnz
xor
jae
jp
fwait
push
mov
push
add
psubw
pop
mov
test
mov
pusha
std
sub
add
jle
clc
jl
jge
ja
pop
cli
inc
icebp
aam
and
fsts
insl
clc
xchg
lods
sahf
push
mov
mov
shl
or
push
cltd
idivb
inc
mov
mov
out
xor
mov
pop
iret
scas
jns
das
repz
mov
addr16
out
push
cmp
push
divb
imul
js
mov
inc
testl
movsb
arpl
and
ljmp
inc
subb
push
jecxz
pop
pop
jmp
mov
out
jl
loop
mov
sub
or
call
add
int3
ss
shr
aaa
outsl
ret
add
fs
mov
push
cmovns
dec
xor
cmp
push
aad
add
xor
arpl
cmp
stc
imulb
jge
cld
sub
ljmp
jns
inc
mov
mov
mov
xlat
leave
into
repnz
fstpl
fldl
add
jecxz
imul
cltd
out
xchg
fbstp
test
xor
fimull
mov
cmp
and
sbb
sarl
dec
inc
xchg
jge
in
xor
or
fsubs
sbb
sar
mov
jg
nop
jl
sbb
mov
ret
or
lds
adc
or
sub
les
cmpsl
add
mov
fistps
jbe
es
mov
dec
add
jmp
int3
dec
out
xchg
jmp
or
xor
pop
sbb
add
mov
push
push
lret
jmp
aaa
mov
ja
or
mov
scas
push
push
dec
lods
mov
pop
cld
mov
add
pop
repz
mov
popf
and
xor
scas
pop
fsubrs
popf
or
test
enter
sub
mov
mov
test
mov
repnz
gs
xchg
jnp
pop
push
test
int3
pop
jnp
jp
popa
sbb
sbb
sbb
fists
jb
das
sbbl
xchg
inc
add
push
outsl
adc
or
cmp
and
je
in
popa
inc
xchg
pop
nop
ljmp
in
outsb
add
pop
push
in
fistl
stc
mov
mov
adc
ds
cltd
xchg
and
dec
add
xchg
pop
push
dec
fldenv
cmp
inc
jecxz
stc
sub
jae
mov
hlt
add
out
inc
into
add
popa
shll
jae
loope
mov
jmp
roll
arpl
dec
fisttpll
or
mov
adc
pusha
aaa
cmc
mov
cld
cmp
sahf
jnp
sub
sbb
pop
inc
fs
js
mov
test
dec
push
inc
js
adc
xchg
sbb
cld
outsb
fstl
fcoml
sub
arpl
inc
mov
pop
jecxz
jle
cli
xor
inc
cmp
inc
movsl
push
stc
insl
mov
dec
insl
ja
sub
sbb
mov
movsb
mov
ss
pop
fs
scas
js
xor
dec
jno
pop
xchg
rcrl
dec
dec
mov
mov
jbe
inc
mov
mul
movsb
jns
and
shrl
nop
in
sbb
lret
xchg
test
push
mov
pusha
pop
add
mov
stos
inc
adc
mov
lea
pushl
pop
das
outsb
push
ds
xchg
in
jbe
cli
data16
in
sub
fs
loop
mov
ret
sbb
mov
xchg
adc
push
fucom
mov
das
inc
mov
es
ret
cmp
xor
test
shll
mov
xchg
mul
aad
in
outsb
pop
dec
cli
enter
lods
mov
aad
or
rcr
jbe
and
or
stos
les
sar
scas
stos
clc
popf
dec
or
test
stc
decb
mov
adc
stos
bound
movsb
add
or
and
mov
xor
sbb
ja
lret
scas
daa
rorb
pop
fildll
or
jne
inc
jo
rcr
sbb
push
inc
insb
inc
mov
lahf
sbb
push
mov
out
mov
aaa
incb
jle
test
popa
push
lods
xchg
lcall
pop
mov
add
pop
in
cmp
cmp
mov
xchg
aam
mov
sbb
mov
rcrl
hlt
shrb
mov
pop
push
imul
pop
xchg
nop
fwait
fdivrs
pop
mov
sbb
xchg
scas
aam
pop
lret
insb
sbbb
push
inc
decl
outsb
cmp
loopne
push
scas
pop
adc
lods
imul
in
pop
movsl
sub
add
cwtl
mov
mov
jns
push
adc
adc
cs
bound
mov
mov
push
fidivl
sbb
lcall
popf
and
mov
push
ret
fdivl
lods
femms
inc
sub
xchg
lret
mov
adc
inc
call
mov
cld
ror
jge
jmp
testl
and
xor
or
push
sbb
hlt
jae
out
daa
sub
mov
sub
lods
push
mov
sahf
cmp
iret
test
shll
pop
fnstcw
insl
js
out
in
nop
mov
pop
jp
arpl
mov
ja
and
sbb
jge
mov
dec
fistl
aad
out
or
mov
push
or
mov
mov
rorl
jmp
mov
rcl
pop
sarl
lods
test
rcrl
push
xchg
popf
and
je
ficompl
adc
inc
push
mov
loop
mov
mov
dec
shll
imul
mov
jns
test
cmp
ja
scas
fmull
xor
lods
mov
out
add
ljmp
xor
pop
lods
lahf
dec
and
ret
add
sarb
xchg
push
int
clc
notb
and
in
xor
mov
dec
fldl
in
and
insb
ds
sub
fs
cmp
mov
aas
test
fldenv
push
mov
and
out
and
cltd
fcomp
mov
push
movsl
mov
mov
xorl
in
das
push
testl
adc
fs
ja
mov
into
movsb
push
scas
imul
jp
mov
imul
lret
mov
insl
pop
in
jle
push
mov
sbb
xor
mov
adc
or
leave
cmp
movsb
call
sbb
je
or
je
mov
fdivrl
stc
movsl
ret
push
pusha
cmc
jns
ret
mov
daa
outsb
lea
ret
mov
sbb
mov
or
pushf
mov
dec
mov
push
push
inc
lcall
cmp
sbb
repz
repz
inc
adc
mov
push
fsubr
sub
scas
movsb
pop
xchg
lea
xorb
xchg
xlat
data16
mov
nop
cmpsl
mov
pop
push
notl
xchg
imul
imul
std
sti
xor
and
cmp
movsb
gs
cltd
pop
mov
or
mov
lea
push
xor
mov
fnstenv
fsub
out
pushf
or
inc
push
lds
or
or
or
ret
mov
popa
push
add
cs
mov
mov
xchg
mov
mov
sbb
data16
sub
scas
call
scas
imul
loope
cwtl
push
scas
cmp
inc
aam
std
dec
nop
jmp
fcomps
jns
pop
mov
lret
dec
mov
jne
xchg
addl
push
dec
mov
leave
imul
aaa
gs
stos
out
xchg
cli
test
ss
push
push
pop
pminsw
adc
push
xor
dec
das
push
filds
ss
popa
fstpt
movsb
jg
push
lcall
xchg
pop
sub
or
test
test
xor
inc
sub
push
inc
filds
cmpsl
mov
movsb
cmpsl
mov
arpl
in
cmpsb
loop
sub
es
je
sub
or
xor
in
inc
in
enter
sub
cmp
fists
adc
pop
dec
test
lods
js
roll
fadds
cmp
pop
jg
insb
xchg
sbb
or
or
iret
mov
cwtl
mov
sarb
add
enter
mov
cmpsl
out
in
aad
loopne
clc
add
test
adc
cs
fsts
lret
xchg
add
cmp
cmp
pusha
iret
in
cmp
dec
xor
and
sub
mov
or
adc
dec
jne
arpl
rol
xor
ret
jecxz
pop
nop
sub
inc
arpl
xchg
movsb
cwtl
mov
and
idivb
data16
repz
pop
inc
insb
jmp
scas
shrb
test
push
mov
cmp
ds
insl
into
push
dec
stos
sbb
push
test
out
mov
shl
nop
movsb
sub
cmp
jmp
sub
enter
loopne
fdivp
sbb
inc
xchg
lret
aam
cmp
repz
inc
int
lock
shlb
sub
add
imul
push
nop
mov
xlat
jb
sub
pop
js
jmp
pop
xchg
das
sbb
ds
fidivs
pop
sbb
pop
sbb
cmp
sub
xor
cli
pop
popa
xorl
xchg
js
push
xchg
mov
fdivp
push
sub
fidivs
dec
arpl
or
pushf
fdivs
aas
add
das
xor
adc
out
lahf
iret
push
filds
scas
cmp
faddl
and
mov
or
sub
pop
js
in
cmp
jmp
mov
or
mov
inc
lds
dec
mov
sti
lret
add
mov
sbb
inc
cltd
add
out
lods
dec
pop
test
sub
mov
cmp
xlat
imul
mov
sub
xorb
or
test
lock
loopne
inc
xchg
and
scas
and
les
xchg
mov
add
test
mov
dec
mov
pop
out
xchg
fcompl
mov
add
jp
mov
add
jb
es
mov
push
das
xorl
jae
xor
xor
sub
push
push
xor
shlb
or
mov
jno
test
sbb
ss
xor
jns
dec
jle
push
or
pop
jno
jmp
and
mov
popa
aaa
pop
je
fwait
sub
pop
mov
jns
adcl
popa
cmp
add
cld
inc
mov
pop
mov
imul
mov
adc
popa
xchg
xor
mov
adc
add
push
cwtl
xorl
out
ss
add
dec
cmpsb
cmp
jmp
mov
jae
cmc
sbb
xlat
loope
hlt
es
mov
jmp
test
push
pop
cmp
dec
stos
sub
sahf
cmp
movsl
push
outsb
pop
xor
lods
imul
lahf
dec
xchg
cli
dec
adc
add
cwtl
dec
pop
ret
jge
fcmove
push
movups
inc
and
sbb
sbb
lret
int3
nop
mov
xchg
seto
xchg
and
bound
mov
and
inc
mov
cmp
dec
push
pop
sbb
jo
int
sub
lahf
or
xor
cs
mul
pop
add
mov
inc
dec
cmc
sbb
fstpl
bnd
xlat
xor
add
cwtl
les
daa
aam
inc
out
cld
cmp
repz
notb
adc
pop
pop
inc
cli
mov
je
dec
mov
adc
push
ss
jns
and
or
stc
xchg
inc
sub
dec
nop
aad
mov
cltd
aam
cli
cmp
punpcklbw
aad
imul
xorl
add
lds
cmp
cltd
loope
es
push
lock
imul
xchg
decb
aad
push
test
or
iret
aas
push
mov
out
inc
jmp
push
mov
out
mov
scas
adc
add
dec
mov
lods
std
inc
enter
jle
idiv
lret
icebp
mov
mov
jmp
xchg
jmp
gs
jp
arpl
mov
iret
pop
push
je
cmp
lock
out
ds
xadd
jno
add
fnstenv
inc
decl
jp
hlt
stos
jle
je
sti
daa
jnp
clc
sarb
add
lcall
aad
xchg
lret
mov
mov
pushf
and
popf
lret
mov
stos
xchg
add
inc
das
push
js
fs
cmp
and
adc
xchg
jnp
dec
cmpsl
icebp
pop
sub
aad
test
mov
xor
stos
aaa
jo
fmulp
inc
imul
lods
aas
out
repz
xchg
ficompl
xor
add
je
jne
push
sbb
mov
adc
mov
out
shll
std
leave
mov
jle
xlat
test
test
pop
lahf
scas
movsb
pop
pop
lock
nop
mov
push
pop
add
enter
fsubr
loope
mov
fisubl
mov
repz
jp
mov
aad
dec
mov
mov
xchg
sub
lcall
repnz
push
shll
push
orb
and
fcompl
popf
pop
lret
std
mov
js
in
lea
push
mov
gs
aaa
test
jl
insl
add
out
test
cmp
iret
imul
aad
nop
pop
test
pusha
xor
mov
mov
xchg
popa
stos
shl
and
lock
icebp
aas
dec
cs
rolb
jns
iret
add
xor
aaa
cmc
or
dec
fldt
sub
movsb
lods
xchg
es
das
pop
daa
sub
minps
or
mov
mov
xchg
pushf
sbb
fsubrs
mov
dec
adc
sti
xchg
mov
fs
adc
or
cmp
bnd
imul
out
pushw
jl
push
fwait
push
xchg
or
shrl
sarl
cld
jle
call
jle
jns
cltd
xchg
test
int3
mov
lds
dec
out
adc
xor
add
dec
dec
pop
lods
stos
iret
xchg
jbe
adc
leave
xor
ljmp
sub
or
cltd
insb
addb
lret
loope
dec
les
fisttpll
fnstsw
shl
cmc
inc
rclb
icebp
das
insb
pop
stc
and
add
in
push
add
mov
insb
jmp
push
loopne
into
movsl
mov
adc
pop
outsl
aad
movsb
lcall
push
jmp
lcall
cmpb
sbb
inc
pop
xor
loopne
hlt
insl
push
jmp
push
sub
inc
or
out
push
iret
pop
sbb
inc
add
mov
das
lods
add
lahf
add
test
pop
add
inc
mov
jnp
out
pop
inc
loope
sti
repz
mov
inc
cmpsb
jne
xchg
sub
in
pop
hlt
leave
mov
icebp
and
stos
lahf
sahf
test
stos
and
inc
inc
sub
outsl
sti
sbb
bound
dec
jmp
mov
inc
jmp
cltd
pop
cld
sbb
push
cmp
nop
push
jle
les
ljmp
ret
outsl
lea
cmc
cmc
sbb
pop
dec
pushf
and
pusha
inc
jne
xchg
xlat
fildl
sub
sti
shrb
push
dec
cmova
enter
cltd
out
cltd
push
sbb
dec
out
adc
rol
cmc
rolb
ljmp
dec
rep
rcl
adc
nop
push
addr16
sub
cltd
out
mov
mov
test
cwtl
neg
or
pop
jmp
divb
dec
sbb
lahf
es
and
ror
inc
sbbb
push
leave
clts
or
inc
xlat
mov
push
les
jb
adc
mov
enter
xchg
adc
rcrb
dec
fsub
test
sbb
adc
sahf
pop
pop
pusha
sbb
out
sbb
xchg
js
mov
and
out
test
xorl
jo
add
lds
mov
sarb
or
dec
aam
enter
cmc
fisttps
mov
mov
dec
and
mov
add
xor
xor
xor
sar
mov
mov
and
adc
push
mov
aad
mov
repz
mov
aam
inc
xor
jno
mov
fsubl
std
out
andl
sub
popf
div
mov
or
push
add
jbe
daa
rorb
stos
out
lods
push
push
xchg
hlt
negl
jl
fwait
leave
enter
dec
je
fwait
lcall
sti
mov
add
ljmp
inc
das
imul
xchg
jno
push
jbe
jge
add
sub
adc
xchg
add
mov
les
or
repnz
cwtl
sbb
insl
mov
sub
fadd
jno
popf
jge
rolb
push
mov
pop
pop
inc
test
fisttpl
pusha
pop
dec
lds
pop
ret
cs
inc
shlb
cmpsb
sub
cmpsl
in
pop
arpl
inc
cmp
js
push
movl
into
rcrl
mov
ret
jecxz
pop
movsl
dec
sbb
arpl
dec
add
lahf
adc
adc
and
mov
stos
stos
cld
outsb
mov
cmc
sbb
xchg
cli
mov
xchg
cs
sbb
sub
dec
cmc
xor
das
sbb
jae
les
cmc
movsl
push
cmpsl
popa
adc
das
cmp
push
jmp
aam
pop
movsl
scas
imul
cmp
loopne
mov
pop
xchg
int
jbe
lods
mulb
push
push
xchg
rol
adc
mov
out
sub
pop
in
sbb
or
sub
testl
xchg
lcall
lods
ficoml
mov
les
xor
fistl
adc
pop
pop
fwait
push
clc
scas
push
std
je
rcr
pop
out
or
mov
sahf
sub
aaa
add
outsb
movsb
scas
ss
notb
jo
fwait
mov
shlb
or
mov
std
fisubl
outsl
aas
mov
mov
lret
negb
dec
cld
pop
add
dec
int3
sbb
or
test
mov
daa
push
mov
andb
or
dec
push
sti
in
leave
pop
inc
test
leave
aam
adc
aam
pop
xor
test
sarb
mov
inc
push
mov
outsb
adc
fisttpl
fnsave
std
popa
loop
jmp
bound
jns
jo
jecxz
cld
nopl
in
jmp
std
fildl
std
and
gs
fstpl
jbe
hlt
mov
call
stos
xchg
jo
push
add
xor
cmp
pushf
in
fnstenv
pop
out
call
mov
je
lcall
or
fwait
mov
jne
xor
repz
and
mov
push
add
push
push
iret
scas
push
stos
mov
js
insb
cmp
inc
in
sbb
jbe
xchg
cmp
sbbb
shlb
or
dec
fwait
repnz
and
inc
jge
adc
lods
sar
mov
lock
ss
push
inc
mov
lahf
sub
pop
icebp
shl
adc
push
je
lea
test
add
mov
sbb
cmc
mov
pop
pop
mov
stc
and
push
push
and
add
outsb
mov
lea
sub
xor
xchg
xchg
seto
pop
hlt
inc
pop
mov
sub
push
jo
push
pop
jo
clc
stos
fists
scas
push
push
mov
xchg
push
rep
jmp
stc
sbb
xchg
dec
adc
sbb
xchg
lcall
mov
repnz
push
pop
lea
cs
lods
mov
dec
cmp
inc
scas
lahf
aaa
mov
pop
mov
or
mov
xor
repz
test
dec
sti
fiaddl
addr16
flds
xor
popa
sbb
stc
push
aas
cmc
mov
pusha
bound
add
xchg
aas
inc
daa
stc
lret
sub
shrb
stos
dec
jg
andb
imulb
rclb
push
sub
aam
push
stc
aas
enter
loope
aad
sub
sub
push
mov
test
call
mov
jns
loop
iret
jmp
mov
fstpt
mov
cs
pop
jo
out
add
add
push
pop
mov
or
and
aaa
out
jmp
cmpsl
cli
jge
mov
jno
dec
mov
sbb
cmc
fstenv
pop
pop
movsl
faddl
fucomip
ja
sbb
push
stc
gs
int3
repnz
and
pushf
dec
insl
insl
cmc
shrl
cmp
sub
int
into
pop
pop
push
sub
adc
iret
xchg
inc
test
cwtl
jo
popa
lods
jmp
cmp
xor
test
sarb
jl
pop
inc
movsb
mov
xchg
add
leave
jge
arpl
testl
jne
mov
mov
mov
jcxz
loopne
push
mov
mov
out
cmp
cmpsl
sub
mov
test
mov
add
jo
fcmovu
stos
jg
cmp
jmp
and
sti
je
popf
xchg
ljmp
fmul
jmp
jl
cmp
push
xchg
sbb
push
sbb
or
adc
adc
fsts
pop
out
je
xchg
in
sbb
aas
decl
mov
or
xlat
lcall
mov
xchg
xchg
stos
xacquire
pop
and
sub
into
enter
jo
mov
jae
stos
sbb
jno
jno
jae
ljmp
lds
test
int
lock
or
push
cmp
and
mov
cli
push
lcall
mov
stc
or
rolb
test
mov
in
in
test
push
mov
sbb
int
mov
jmp
cmp
fwait
jae
or
insb
mov
adc
dec
mov
test
sub
sbb
lahf
push
fwait
adc
push
dec
sbb
inc
cmp
dec
rcrl
mov
shll
xor
jecxz
jmp
test
mov
jbe
inc
jnp
sub
cltd
arpl
jb
scas
pop
jns
ss
jae
jns
aaa
loopne
or
gs
xorb
jnp
les
das
gs
pop
mov
jmp
and
mull
pusha
jbe
mov
ljmp
add
out
mov
pop
decb
push
lods
and
lret
sub
jns
xchg
shlb
call
pop
lea
aas
ffree
je
pmuludq
pop
rcll
mov
pop
adc
or
mov
push
call
loope
aaa
and
andb
orb
add
jl
xchg
sbb
rep
jno
mov
dec
xor
rolb
adc
push
das
mov
cmp
ds
push
xchg
xor
sbb
sti
je
or
xor
jb
pop
sbb
xor
ds
jb
jle
sbb
mov
stos
sbb
call
cwtl
das
adc
repnz
inc
dec
leave
lods
mov
push
fsub
ds
aam
ja
ds
pop
sub
popf
inc
add
sub
and
xor
xchg
hlt
adc
mov
lods
xchg
lods
add
cwtl
dec
sbb
pop
sbb
data16
ja
xor
cld
sbb
mov
sbb
add
xor
xor
cwtl
cmpsb
inc
out
cmpsl
dec
xchg
jno
mov
shlb
mov
daa
mov
adc
jecxz
pop
adc
hlt
mov
incl
imul
mov
sbb
pusha
and
cmpsl
int
jle
cld
out
stos
pop
mov
pop
repnz
out
sub
cmc
mov
jg
mov
das
sub
aaa
pop
dec
dec
fisubrl
outsl
push
cs
fildll
jl
mov
ja
jno
inc
inc
out
enter
aas
cmpsb
out
adc
jle
xchg
or
jmp
leave
push
and
push
dec
xchg
xorl
es
dec
xchg
or
xchg
adc
aas
and
fwait
lret
popf
daa
les
and
imul
lahf
andb
iret
dec
dec
dec
pop
xor
ljmp
ljmp
inc
mov
mov
mov
negl
sub
sub
and
rcrl
sbb
or
js
fidivs
icebp
inc
pop
cmp
jne
pop
xchg
fs
jnp
jno
cwtl
jmp
adc
xor
mov
enter
std
jle
cmp
arpl
mov
dec
dec
shrb
lds
pop
push
jg
push
cmp
adc
inc
sbb
xchg
nop
push
ds
fwait
js
pop
sarb
xor
loopne
pop
fadd
xchg
inc
imul
call
push
pop
pop
mov
pop
fsubrs
in
xchg
sub
dec
or
loopne
lea
and
aaa
pop
push
sbb
cmpl
xor
popa
jg
add
ss
xor
sub
xchg
repnz
pop
call
mov
pop
cld
add
cmp
jecxz
std
mov
jmp
sbb
push
or
xor
pop
lods
mov
cmpsl
clc
fcomi
ficoml
das
bound
adc
pop
cmp
push
orl
cltd
cwtl
adc
aad
ds
inc
cwtl
nop
mov
cmp
lret
dec
sub
es
inc
mov
and
pop
adc
add
int3
cwtl
les
mov
jnp
lods
loop
cmp
mov
ret
inc
notb
sti
jle
xor
or
mov
push
sti
mov
mov
xchg
and
mulps
pusha
add
pcmpgtd
pop
push
sub
int
icebp
sub
sti
pop
hlt
fadds
andl
jge
loopne
ja
in
mov
cld
sub
stos
addr16
push
lret
cmp
push
aas
add
mov
subb
pop
cmpsl
in
xor
xor
scas
fbstp
or
adc
shll
pop
popf
inc
mulb
js
and
and
sub
mov
inc
jp
inc
push
lods
mov
mov
mov
push
cld
roll
fwait
or
add
in
mov
ds
and
aam
jmp
mov
add
ja
or
popf
mov
mov
xchg
add
mov
jno
frstor
shll
outsl
mov
cmp
dec
or
in
push
inc
mov
sbb
inc
mul
fcmovne
dec
out
xor
pop
rclb
add
faddl
sub
inc
gs
sbb
xchg
and
sbb
sub
cmc
or
push
insl
pusha
mov
add
sub
sbb
adcb
aaa
and
repz
scas
insb
mov
dec
dec
in
sub
int3
cwtl
dec
push
cwtl
adc
popa
sub
lret
mov
jecxz
mov
lds
rolb
test
dec
scas
ret
test
insl
dec
mov
dec
adc
repnz
into
or
lret
mov
test
movsl
xor
mov
or
les
jge
insl
ficoms
int3
cmp
out
xor
leave
pop
ja
lcall
imulb
adc
ljmp
test
cld
outsl
out
ficoml
ljmp
inc
popa
adc
add
xchg
dec
mov
repnz
test
and
bound
or
test
sub
or
xchg
mov
dec
fdivl
mov
leave
mov
outsb
cmp
push
sub
pop
mov
scas
mov
sahf
je
jmp
mov
lods
pop
scas
shlb
cmp
adc
or
pusha
jge
jp
push
aaa
jp
xor
cli
pop
or
sub
cmp
clc
push
mov
mov
into
mov
add
call
lds
out
push
iret
pop
mov
dec
insb
loope
jo
mov
mov
mov
out
enter
into
ret
push
cli
data16
jg
fnstenv
mov
jb
mov
popa
mov
js
and
inc
inc
cmp
scas
icebp
psrlw
popl
inc
sbbl
call
add
mov
mov
cs
clc
cmp
es
paddsw
hlt
or
cmp
out
pop
std
push
mov
dec
jno
jne
cmp
fmuls
andb
ds
add
add
cmp
inc
das
cmp
dec
leave
lret
push
imul
int
pop
inc
andl
cmpsl
mov
jno
insb
test
cmp
daa
cmp
jge
test
push
xchg
aaa
call
inc
adc
shrl
dec
or
jno
ss
adc
and
push
adc
add
xchg
ror
cmpsb
xchg
mov
mov
adc
push
mov
push
adc
rorb
push
jecxz
push
or
dec
dec
call
ja
cmp
dec
in
movsl
gs
lds
jl
movsb
push
fucomp
in
out
subl
loop
mov
popf
stc
push
outsb
sti
lock
mov
add
push
cmpsb
inc
out
mov
cmp
sbb
jnp
les
cmpsl
fisttpl
sub
repz
push
cmp
cmp
popf
xor
in
add
xchg
mov
and
hlt
aas
scas
adc
out
arpl
adc
jp
jnp
std
add
lods
ljmp
lret
xor
jle
ljmp
mov
lret
mov
mov
dec
fldenv
stc
sub
mov
jne
mov
adc
lret
xlat
xchg
daa
cmpsb
or
xor
lcall
add
das
shll
push
jb
in
dec
mov
jno
mov
pushf
mov
sub
insl
icebp
mov
movsb
enter
adc
lahf
mov
dec
mov
leave
sub
add
jge
mov
dec
outsl
in
xchg
inc
fisubrl
ret
add
in
cmpsb
mov
andl
out
sbb
and
mov
mov
sub
xor
shrb
aaa
jb
mov
or
out
push
test
jg
lods
pop
xchg
je
mov
inc
rcrl
icebp
sbb
push
add
fisubs
sti
adc
mov
push
and
lods
iret
jno
jmp
call
test
int3
add
pop
test
push
or
mov
fcompl
popf
mov
push
or
negb
ja
cmp
lret
xchg
ret
stos
int3
lahf
aam
xchg
push
fisttps
fisubl
cs
adc
jmp
outsl
sti
mov
or
icebp
sbb
addr16
sub
mov
dec
les
fsubrs
adc
adc
jne
adc
inc
add
cmpsl
pop
addr16
and
mov
push
mov
mov
lea
repnz
mov
sub
add
into
popa
push
cmp
out
xchg
outsl
add
mov
mov
bound
pop
js
ret
fwait
sbb
xchg
and
sti
push
pop
movsl
rolb
in
repnz
mov
scas
ret
stc
pop
ljmp
and
mov
xor
loop
pop
leave
sti
inc
jp
or
inc
dec
shl
fildl
loop
loopne
mov
ficoml
mov
mov
std
clc
mov
and
cmp
fisttpl
cwtl
std
push
adc
sub
push
nop
sbb
or
fcmove
test
mov
aam
insl
sbb
imul
notl
stos
jno
jno
jg
mov
and
jbe
xchg
daa
cld
push
sub
sbb
jecxz
clc
mov
inc
addl
fistpll
cmp
cmp
inc
xor
or
fcompl
xor
out
xlat
insb
into
mov
cwtl
add
jg
xchg
shll
dec
into
mov
and
xor
mov
sbbb
ljmp
jb
pop
adc
adcb
jb
fs
test
sbb
mov
ffree
and
add
fsub
or
or
loope
xor
aad
fsubl
out
mov
cmp
jo
sbb
insb
pusha
in
jp
add
notl
mov
jb
pop
ret
stos
pop
mov
mov
mov
jg
or
movsl
jo
or
mov
xor
or
xor
dec
push
pop
add
and
push
mov
pop
pushf
movsl
mov
loopne
jnp
clc
das
sbb
test
mov
iret
jecxz
sub
dec
sub
mov
lods
push
pop
sub
mov
cmp
push
or
fisubs
dec
out
je
cs
xor
dec
cmp
inc
and
mov
jg
xchg
jl
loopne
inc
adc
popf
dec
add
push
xchg
nop
adc
xor
jle
adc
outsb
popf
xor
adc
movsb
adc
lods
setp
jmp
cltd
sbb
loopne
mov
subl
inc
sbb
loope
loope
scas
mov
pop
xchg
pop
test
jnp
rcrl
loop
mov
sarl
mov
in
xor
int
push
faddp
sub
movsb
jge
mov
pop
mov
dec
sarb
bound
nop
adc
mov
add
dec
sub
cli
pop
outsb
mov
cmovno
sbb
push
js
in
hlt
sar
adc
mov
mov
jno
jmp
dec
push
mov
repz
popa
iret
lea
sbb
scas
mov
mov
push
dec
mov
in
shlb
mov
movsl
and
es
sub
push
dec
test
jle
add
cltd
cmc
mov
fs
cld
and
adc
xor
fistl
shll
cmp
dec
test
fcoml
and
push
andl
pop
cmp
jo
jb
and
scas
stc
test
out
mov
mov
sahf
jge
out
cmp
mov
imul
cltd
xchg
outsl
jne
iret
loopne
setg
sub
mov
adc
test
mov
js
xchg
leave
cmpsb
ss
cmc
dec
mov
iret
ret
xlat
push
lahf
mov
fildll
mov
cwtl
div
es
jg
pop
pop
fildl
xlat
xor
or
inc
add
pop
sbb
push
sbb
std
jl
mov
pop
addl
or
movzbl
inc
or
fistpl
roll
sbb
imul
insl
cli
scas
mov
jb
popf
es
scas
call
adc
and
repz
dec
enter
in
sarb
mov
dec
test
mov
jns
jge
sub
add
mov
jg
je
shl
xor
stos
inc
jnp
pop
pop
xchg
lods
or
in
jo
inc
enter
sub
xor
aaa
imull
int
lahf
rol
aas
sbb
cmp
push
jo
dec
hlt
mov
sub
fnsave
push
jmp
jb
fisttpll
sti
mov
mov
pop
clc
jecxz,pt
jmp
cli
dec
fucomi
push
jecxz
mov
mov
xor
and
adc
pop
push
int
popa
and
jb
bound
shll
sub
outsl
daa
pop
lret
sub
loopne
dec
jp
jb
lods
in
adc
or
lea
mov
xor
lcall
movsb
test
andb
pop
shrb
imul
jg
sub
shl
jns
xchg
dec
push
ljmp
xor
cld
insb
adc
add
mov
cmpb
fisubs
pusha
sti
aas
push
aam
fistps
push
int
or
popf
pop
cmp
mov
push
test
pop
xchg
lods
jecxz
mov
jg
adc
sbb
xor
nop
loop
xchg
les
lods
xlat
imul
mov
add
and
cmpsb
jnp
sub
enter
in
adc
fsubrl
push
sub
mov
cltd
and
xor
mov
sub
xor
pop
aam
xchg
mov
sub
mov
rolb
mov
sub
js
adc
addr16
int
imul
loopne
leave
push
mov
inc
roll
mov
inc
mov
test
xlat
xchg
clc
adcb
fimuls
jbe
stc
inc
xchg
stos
add
loopne
dec
jno
mov
dec
jle
jbe
hlt
xor
and
jmp
orl
xchg
push
jno
shrl
into
inc
in
mov
inc
lret
xchg
cmpsl
faddl
mov
enter
je
inc
sbb
mov
xor
jnp
dec
mov
or
xor
inc
loopne
mov
subl
int3
sbb
jb
xchg
aam
pop
or
and
dec
ficoms
out
xlat
gs
pop
fmuls
xchg
push
push
mov
lea
xchg
lock
leave
push
pop
mov
loop
or
jg
sub
cli
jnp
movsl
jl
cmc
inc
out
push
in
call
sbb
xor
aas
ds
and
nop
mov
mov
add
or
jge
push
out
xor
jae
push
push
mov
repz
jecxz
cmp
out
or
adc
andl
adc
aam
nop
or
out
inc
sub
outsb
pop
popaw
xor
sbb
bound
mov
sbb
call
xchg
jmp
xor
sbb
xchg
jmp
and
in
sbb
mov
scas
mov
popf
and
out
scas
gs
sbb
sub
mov
test
repnz
cmp
fwait
les
lods
repz
and
int
aas
test
or
adc
dec
mov
in
dec
pop
xor
fnsave
mov
inc
sub
adcb
jl
xchg
dec
push
movl
imulb
jge
mov
mov
outsb
not
push
loopne
icebp
cld
sbb
pop
push
loop
push
jmp
xchg
xchg
xchg
and
sbb
mov
loope
cltd
aad
inc
addr16
lahf
jne
test
mov
mov
pop
adc
in
out
ret
mov
sub
push
pop
cmp
xchg
repz
mov
add
dec
or
xor
movsb
and
sarb
fwait
mov
inc
mov
xchg
sbb
js
mov
mov
or
mov
push
push
leave
pop
je
xor
cmp
test
fwait
inc
pop
pushf
sbb
ss
orb
sbb
push
scas
and
sbb
mov
fs
adc
xor
and
jae
jno
int3
push
push
sbb
adc
mov
inc
mov
lcall
or
pop
xor
nop
and
mov
fnstsw
mov
sub
cwtl
mov
xchg
test
aaa
inc
jmp
add
shrb
lcall
xchg
aas
mov
pop
fdiv
int3
mov
cmpsb
dec
outsl
lret
iret
addr16
in
mov
pop
fdiv
sub
mov
push
mov
lods
sub
dec
cmc
and
fs
dec
add
lcall
mov
in
decl
pop
into
adc
aad
inc
cwtl
xor
mov
out
lods
adc
jge
xchg
dec
cmp
mov
push
and
scas
jb
aad
lods
mull
shll
icebp
stc
xchg
pusha
inc
aam
xor
xchg
mov
dec
or
into
out
pop
xchg
xor
adc
cld
repnz
pop
mov
mov
insl
jecxz
mov
xor
outsb
ds
dec
inc
and
test
fdiv
add
pushf
pop
addr16
xchg
mov
lret
jbe
xchg
mov
int
jecxz
insl
cmp
psubusb
test
and
fistpl
or
je
xchg
push
imul
test
les
fucomi
inc
mov
ret
sub
jae
test
push
fmuls
or
xor
add
loope
lret
das
repnz
jle
mov
fs
dec
andl
aaa
lods
sti
rcrb
mov
mov
jg
and
lods
mulb
or
sub
lret
shrl
cmc
and
push
cltd
cmp
sbb
roll
aad
sti
test
push
repnz
jno
repnz
dec
ljmp
outsb
cld
pop
pop
imul
divb
mov
mov
jmp
inc
inc
ret
sbb
dec
jo
cmp
xchg
and
adc
lods
insb
outsl
xchg
les
sbb
add
mov
and
repnz
rcll
sti
mov
aad
sti
cmpsb
xchg
xlat
lods
push
xor
int
pop
jo
sahf
mov
inc
arpl
pop
or
sbb
das
mov
fs
inc
jmp
or
int
mov
xor
mov
mov
repnz
cmp
adc
pop
in
pop
in
ret
pop
hlt
cmp
xor
stos
adc
cmp
sub
ja
nop
sub
fidivl
rolb
fcoml
mov
sti
inc
push
push
and
or
mov
test
push
push
and
jb
sbb
mov
mov
mov
ljmp
jg
and
test
test
cmp
inc
lods
ljmp
ds
push
inc
sub
cmp
pop
testl
push
mov
negl
push
pushf
or
lock
or
mov
jecxz
daa
sbbb
dec
out
orb
mov
leave
pop
mov
ret
scas
fldcw
or
sub
jno
and
xchg
aad
mov
imul
jecxz
flds
sbbl
jl
cmp
nop
js
and
aas
fs
jmp
das
ss
loop
cmpsl
fldcw
outsb
iret
in
lds
clc
das
lea
test
push
sbb
push
add
xlat
mov
and
xor
xlat
push
sub
ror
out
repz
scas
mov
xchg
aad
mov
jge
push
pop
movsl
mov
add
cmc
push
leave
mov
ds
inc
cltd
add
mov
xor
adc
imul
push
shlb
or
xor
outsl
sbb
lods
sbb
sbb
pop
int3
xor
mov
or
fstps
enter
data16
jmp
out
jle
out
fists
daa
popa
or
stos
cmpsl
push
jecxz
call
inc
pop
sarl
popa
xor
pop
push
jecxz
cmp
insl
jbe
push
ret
mov
aas
arpl
cmp
or
hlt
es
cmp
dec
mov
in
shlb
push
dec
sub
lods
or
out
pop
or
in
add
push
pushw
xchg
or
cmc
or
mov
jge
sarl
in
scas
dec
add
hlt
inc
insb
jns
aam
sbb
jae
aad
push
mov
std
dec
icebp
lods
test
cmpsl
inc
fnstcw
in
xchg
push
push
push
ret
jae
pop
ret
pop
cmc
dec
out
cmpsb
push
call
loope
js
add
outsl
adc
imul
xor
mov
xchg
fstps
incb
inc
leave
sbb
dec
in
inc
add
push
or
xor
xchg
pop
sbb
lods
es
push
std
cmc
je
scas
sbb
mov
jne
out
fiadds
rclb
jecxz
lea
dec
ds
mov
nop
popl
and
std
lcall
cmpsb
push
dec
jo
mov
ret
std
stc
test
pop
dec
cli
clc
cmp
daa
jp
fistl
xchg
outsb
adc
sbb
in
mov
sub
push
movsl
push
and
push
pop
sbb
rorl
mov
push
dec
movsb
pop
rclb
das
mov
jle
sahf
lea
mov
pop
push
lods
mov
shrl
pop
loopne
dec
jle
outsb
or
pop
pop
or
adc
adcb
js
jne
imulb
push
lahf
out
xor
test
imul
scas
pop
iret
mov
std
leave
popl
rclb
aad
sahf
push
mov
outsl
ret
push
sbb
xor
out
inc
jg
lret
inc
push
jne
mov
imul
mov
mov
pop
xchg
mov
cmp
scas
mov
in
sub
repz
or
repz
or
sub
sbb
mov
mov
repnz
repnz
pop
loope
dec
lahf
sbb
faddl
adc
dec
sub
sub
adc
dec
clc
sub
mov
xchg
adcb
js
daa
and
jle
pop
icebp
roll
cmc
add
mov
rcll
dec
insb
dec
jno
mov
incb
enter
pop
aad
inc
call
or
inc
mov
pusha
xchg
sub
fstpl
dec
sbb
cmpsb
loopne
repnz
rorb
and
xlat
jg
repz
popf
xor
outsb
ret
inc
fucomp
mov
je
mov
push
out
outsb
scas
in
xlat
repnz
adc
xchg
ffree
mov
adc
insb
cs
sbb
add
add
xchg
jne
and
scas
cmp
mov
sub
pop
dec
jmp
repnz
je
sub
cmp
dec
and
and
imul
push
sbb
jp
push
push
adc
insb
adc
adc
loop
mov
fsubrs
sub
lock
cltd
pop
lret
cmp
sbb
jno
mov
inc
push
fcmovbe
adc
enter
loopne
cmpsb
adc
jle
cwtl
insl
dec
push
je
add
dec
pushf
bound
fs
sbb
mov
pop
pop
roll
movsl
mov
jbe
mov
mov
mov
or
rcr
push
outsl
jmp
push
ror
mov
les
adc
repz
and
cmpsb
jp
icebp
cmp
cwtl
inc
dec
add
sbbl
fcomps
push
mov
mov
cwtl
imul
fistl
cmp
out
mov
adc
jno
jecxz
jmp
jp
leave
xchg
in
rolb
push
nop
dec
xor
popf
mov
faddl
xor
jmp
dec
dec
loopne
cli
movsb
jmp
mov
jle
pop
arpl
jno
mov
repz
and
mov
cmc
movsb
ret
push
jae
cmp
addl
je
hlt
lea
shlb
push
stc
jb
popf
cmp
in
inc
imul
pop
pop
push
mov
loopne
jl
dec
insl
lods
push
int
jnp
cmc
or
aas
mov
dec
and
mov
cmp
std
ret
call
popf
cmpsl
jns
sbb
and
sbb
mov
gs
jno
push
std
test
stc
jnp
dec
mov
aad
sbbb
aaa
jecxz,pn
pop
cltd
jo
sahf
sub
jmp
pop
int
mov
aad
mov
sbb
shl
xchg
stc
add
mov
dec
push
pop
push
mov
or
inc
outsl
test
popf
jg
loopne
divl
sub
mov
mov
pop
ljmp
imul
xchg
popa
lock
out
outsb
pop
scas
sbb
aaa
lahf
fnstsw
push
in
push
not
pop
or
inc
or
sahf
fiaddl
clc
jp
repz
cmpsb
and
and
inc
sahf
rcr
test
int
or
stos
sub
pop
fs
sahf
addr16
gs
pop
or
adc
into
roll
mov
aad
push
push
dec
scas
movsl
mov
nop
xchg
scas
mov
clc
or
lock
mov
std
cmp
lret
cmp
push
lock
cmp
or
inc
inc
jecxz
or
mov
push
stos
push
or
xchg
inc
stos
insb
daa
ret
int3
fwait
outsb
in
movsl
lret
xchg
movsl
pop
mov
ds
push
fs
fwait
out
je
popa
andl
jg
pusha
dec
mov
xchg
jmp
adc
lret
fisubs
cmp
mov
push
out
push
jle
aas
xor
dec
cmp
add
shll
ficomps
pop
into
incb
jge
adc
dec
and
cmc
rorl
sub
pop
int
dec
dec
outsb
cmp
add
mov
mov
or
mov
addr16
xor
test
rcr
mov
push
push
orb
mov
mov
mov
loop
les
test
sbbb
add
xchg
mov
loope
lahf
cmp
call
xchg
jl
pop
mov
sbb
pop
push
mov
fsts
lcall
insb
lahf
mov
sbb
shrb
push
int
sbb
les
adc
scas
pop
jmp
jae
sbb
call
inc
in
stc
jle
push
mov
mov
xor
lretw
add
movaps
das
cmp
adcl
adc
mov
or
push
shll
insb
enter
add
jo
dec
add
stos
xorb
les
mov
jle
out
or
mov
lret
xchg
rolb
mov
les
std
sub
inc
xchg
bound
aaa
xor
lahf
inc
call
sbb
xor
xchg
ja
lcall
pop
pop
sti
mov
pop
and
aad
shlb
cmp
ficomps
mov
lahf
in
mov
ret
jb
xchg
gs
subb
mov
and
jp
and
aad
aad
outsl
push
les
dec
call
sub
loop
inc
jmp
test
jecxz
fs
and
je
jmp
jg
sub
pop
xor
testb
pop
mov
pop
inc
mov
jmp
dec
loope
popa
cltd
sbb
pop
jge
inc
aaa
adc
gs
fidivrl
push
addb
adc
xchg
pop
out
int
enter
je
mov
mov
das
rclb
push
ljmp
out
push
test
leave
push
nop
cmpsl
xchg
push
fistpll
mov
inc
jnp
mov
imulb
out
cmpsl
loop
fsubr
test
add
aas
mov
ret
hlt
push
sub
jae
dec
sub
aad
adc
mov
je
jmp
mov
sti
inc
movsl
or
inc
mov
fsubrs
xor
jmp
idivb
insl
jmp
loopne
call
es
cmpsl
fcmovnbe
inc
adcb
fwait
xchg
imul
gs
mov
push
dec
leave
sbb
xchg
xor
sti
push
or
into
mov
fs
negb
cli
sarb
loop
push
or
in
ret
xchg
jg
pop
mov
in
xchg
inc
cltd
pop
lds
mov
jmp
je
sub
fiadds
imul
mov
int3
imul
add
mov
add
nop
jbe
movsb
outsl
popf
dec
jbe
scas
or
repz
pop
jne
pop
mov
loop
push
inc
cmp
jecxz
xchg
imul
cmp
or
cmpsb
push
test
jbe
push
lret
mov
lret
dec
int3
hlt
sti
xchg
or
lret
arpl
je
and
in
mov
movsl
ret
or
nop
fnstsw
dec
pop
push
and
sbb
rorl
lahf
rorl
xor
in
test
push
lahf
inc
nop
cmpsb
ds
xor
sbb
xlat
insb
arpl
inc
dec
dec
ljmp
aas
das
outsb
pop
enter
mov
faddp
test
fbstp
cmc
add
adc
insb
rorl
sarl
ret
or
aam
inc
fs
jl
out
and
jg
scas
xchg
pushf
and
xchg
pop
dec
add
lea
aad
cmp
xor
in
fbstp
cmp
bound
dec
jecxz
arpl
aad
mov
repnz
fnstenv
fucomi
fcmovnbe
aaa
test
or
push
pop
ljmp
lahf
add
xchg
add
mov
call
bnd
in
cmp
pop
mov
add
loopne
lds
lock
in
mov
mov
lock
mov
sbbb
mov
ret
pushf
fs
out
jmp
mov
lods
rcrb
mov
je
dec
or
aaa
dec
call
mov
shll
jbe
mov
addb
xchg
push
xlat
faddl
mov
test
mov
xchg
and
repz
push
xchg
push
mov
fwait
jle
cld
mov
cli
push
lods
pop
or
movsl
dec
xchg
insl
add
pop
cld
push
out
outsb
pop
ret
jae
mov
pop
mov
shlb
sub
or
inc
or
dec
xchg
ficoms
ret
adc
mov
and
and
push
pop
inc
idivl
xor
xor
mov
mov
sti
cmp
ficoms
movsl
in
stc
sbb
add
outsl
jns
ljmp
push
push
jae
mov
push
pop
cmp
jnp
ret
in
adc
ret
fsubl
jns
aad
dec
sbb
mov
cmpsl
mov
aaa
adc
push
add
mov
mov
pop
mov
fldenv
push
adc
push
movsl
mov
rcrl
push
sbb
cltd
dec
fadd
mov
ja
lock
mov
push
xchg
cli
fs
sub
cmc
and
dec
imul
iret
cmc
cli
into
sub
lret
in
sahf
adc
int3
insb
jg
pop
scas
adc
sbb
xor
dec
mov
dec
push
and
mov
jp
add
cmpsl
idivb
aas
cmp
shll
dec
in
out
and
xor
or
push
sub
sub
adc
es
xor
dec
icebp
inc
adc
ljmp
fwait
cli
in
pop
scas
dec
sbb
pop
and
adc
insb
push
fidivl
xor
mov
and
inc
aaa
xor
push
fbld
aas
adc
jecxz
fdivrl
push
sbb
mov
test
jp
leave
inc
jae
sahf
xchg
pop
push
movsb
mov
cmp
sarb
xor
subl
xchg
ja
repnz
adc
sbb
stc
mov
adc
dec
rcrb
jno
jecxz
push
push
imulb
cmp
lods
outsl
jecxz
repnz
jns
loope
aaa
sub
test
rcrb
sub
xorb
fimuls
or
adc
mov
loope
fstps
fst
shl
inc
inc
sbb
loopne
push
jae
addb
fs
enter
jns
mov
movsl
mov
pusha
fcomps
fdiv
mov
inc
cwtl
or
test
sub
pop
ficompl
xor
shll
dec
jg
sub
dec
sahf
push
pop
sbb
outsl
sub
sahf
mov
jmp
lods
cmpsb
pop
lahf
mov
mov
adc
xchg
jnp
xorb
clc
mov
aas
pushw
or
outsl
fldcw
movsb
sbb
cmp
cmp
outsl
adc
ljmp
aaa
adc
add
sti
xor
sahf
orb
scas
push
lret
cwtl
push
aam
sbb
add
pop
or
xor
xchg
adc
and
js
pop
push
or
sbb
pop
dec
add
add
mov
fwait
pop
and
aaa
or
adc
sub
insl
shlb
inc
adc
imul
xchg
stos
push
lds
xchg
dec
clc
lea
push
xor
inc
cmp
shl
push
call
and
pop
repnz
into
fildl
fdivrp
insb
scas
jo
jno
xchg
sub
pop
repnz
mov
inc
jle
xor
aas
pop
sarb
mov
fisttpl
add
push
xlat
ljmp
out
cmpsb
rorb
push
pop
jno
dec
xchg
stc
jle
jecxz
mov
aad
stos
arpl
sbb
jae
or
sub
loopne
adcb
adc
mov
mov
lds
xor
pop
xchg
aaa
shlb
adc
lret
stos
movsl
cmp
das
imul
pop
lret
xchg
jae
xchg
pop
ljmp
adc
push
test
cmp
mov
inc
scas
rolb
jo
addl
sbb
sub
inc
call
jo
push
mov
icebp
sbbl
pop
jp
sbb
inc
shr
sbb
inc
sbb
xchg
fwait
mov
stos
cli
jge
hlt
int
cld
mov
scas
jge
sub
outsl
sub
clc
jbe
mov
popf
pop
xchg
push
push
and
insb
test
icebp
dec
and
les
adc
push
dec
push
push
lods
mov
outsb
mov
cld
cmp
adc
mov
and
jbe
xchg
push
out
ss
or
iret
dec
imul
adc
outsb
xchg
mov
jecxz
mov
test
inc
or
loope
rcr
aaa
jno
push
cmc
lcall
cmp
das
cld
pop
fimuls
call
adc
inc
inc
dec
loop
dec
xchg
je
and
movsl
aaa
jno
adc
mov
sar
xor
push
insl
movsb
xor
mov
xadd
xchg
xor
push
inc
lock
scas
es
mov
aas
mov
inc
pop
add
jg
aad
js
fistpl
mov
cmp
in
lods
bound
les
push
and
xor
addr16
test
xor
mov
cwtl
lods
push
xor
adc
push
insl
sar
out
pop
sbb
xor
stos
jmp
test
jbe
cmpsl
in
stc
xchg
incl
sbb
dec
mov
or
sbb
hlt
fmul
in
aad
pushl
inc
dec
into
pop
ds
imul
loopne
stc
mov
sub
out
sub
int
insl
sahf
scas
sbb
and
bound
cli
into
mov
inc
divl
aas
cmp
ds
lods
cld
xchg
mov
mov
cld
cli
mov
or
or
repz
popa
mov
and
dec
inc
mov
stos
and
pusha
push
iret
ret
fs
or
and
push
mov
adc
pop
stc
push
inc
xchg
out
mov
jmp
dec
test
pop
jbe
push
cli
sbb
sub
and
push
sub
test
xchg
scas
pop
lds
cmpsb
mov
push
fsts
aaa
ss
xchg
inc
data16
out
in
and
in
loop
fisubrl
xchg
mov
std
xor
and
dec
cmp
pop
in
inc
repnz
shlb
cmp
leave
lret
outsb
pop
cmpsl
jge
pop
mov
dec
mov
lahf
pusha
dec
rcll
clc
lret
jl
out
ljmp
fcomps
push
push
arpl
xor
loope
stos
dec
pop
les
jecxz
movl
or
shlb
sbb
pop
push
mov
mov
addr16
daa
adc
test
jmp
mov
xor
ficoms
and
pop
pop
es
push
out
insl
jo
out
fwait
cmp
lea
enter
jmp
out
scas
adc
xor
in
pop
and
mov
test
rcll
mov
fcomi
cmpb
xchg
loop
and
jg
sarb
jae
call
adc
cmpsl
inc
fistl
adc
push
or
cmpl
sbb
icebp
popf
add
out
cmp
or
in
pop
nop
test
or
adc
mov
adc
push
cmc
mov
sbbb
pop
gs
xor
pop
xchg
test
push
sub
push
ja
add
imul
jbe
pop
adc
xchg
pop
add
pop
fucom
in
mov
pop
and
xor
in
and
xor
jnp
mov
push
pop
fsubp
or
icebp
imul
adc
data16
jae
gs
jg
sbb
sub
shll
sub
sub
imul
push
pop
jl
xor
jp
pop
cmp
imul
fcomip
jo
inc
fnsave
lcall
cmpsb
shrb
fidivrl
mov
std
pushf
inc
mov
sub
or
loop
das
cmp
pushf
add
ja
mov
fs
loope
cmp
in
mov
and
xor
cltd
lods
mov
imul
jle
dec
inc
daa
jmp
jnp
jnp
mov
mov
lcall
adc
int3
iret
or
xor
mov
in
lods
cmp
add
dec
sbb
in
pusha
xchg
addl
aad
inc
xor
fucom
xchg
jecxz
mull
or
andb
pop
push
jecxz,pt
adc
cmpsl
xchg
cmp
inc
arpl
sub
out
xchg
push
dec
addr16
insb
adcb
gs
xor
fisubrl
mov
in
lret
sbb
xor
leave
movsl
out
test
std
icebp
fistps
ss
cltd
fildl
sbb
loope
inc
xchg
in
mov
push
pop
stos
call
in
mov
inc
mov
loope
sbb
arpl
dec
repz
push
dec
data16
fdiv
pop
ftst
push
mov
xor
or
je
xchg
cmp
inc
loop
and
cli
pop
rclb
or
or
mov
cld
jmp
xor
into
mov
out
sarl
inc
inc
xlat
dec
mov
cmp
add
xor
lds
dec
ret
in
lods
ficomps
cmpsb
pop
jg
popa
scas
push
sbb
rcrb
cmpxchg
lods
push
fstp
imul
jecxz
mov
int3
push
xchg
stc
add
aam
push
incb
xor
mov
push
jl
dec
insl
dec
leave
xchg
insb
pop
popa
lea
fisubrl
xor
dec
inc
out
loopne
mov
cs
jecxz
das
enter
pop
lret
push
bound
mov
and
in
mov
into
xor
ret
push
sahf
dec
mov
jns
sub
dec
pop
dec
xor
jp
jmp
pop
dec
mov
loop
cmc
or
mov
push
xor
sub
sti
out
jmp
std
add
fsts
out
enter
adc
in
icebp
and
adc
inc
xchg
dec
push
in
mov
fs
outsb
lahf
xchg
dec
xor
outsb
notb
cmpsl
sarb
repz
or
clc
lahf
cmp
ss
and
or
sarb
rcl
inc
mov
rol
inc
enter
lcall
and
push
cmc
lock
and
cmp
adc
jle
add
jo
jmp
es
out
xchg
out
je
dec
sbb
cmp
pop
cld
jb
addb
cmp
or
es
arpl
fdiv
fnstcw
push
shlb
sbb
icebp
lods
gs
mov
mov
jnp
daa
jecxz
or
push
and
mov
into
mov
mov
cmp
xchg
sti
cmp
fs
inc
fldl
andb
pusha
scas
pop
repnz
pusha
out
adc
lods
int
xor
xor
push
testl
dec
add
les
ret
push
pop
nop
scas
outsb
mov
inc
aaa
ja
aas
sbb
lcall
xor
and
push
add
scas
or
int
test
cs
adc
leave
mov
int3
push
icebp
mov
ljmp
frstor
bound
shufps
xchg
or
std
mov
cmp
xchg
rcrl
pop
xor
outsl
data16
testb
lock
xchg
xor
adc
scas
insb
adc
xchg
jb
aad
dec
out
xchg
out
pop
pop
add
loopne
mov
push
imul
sbb
imul
pop
xchg
bound
fidivrl
aaa
push
int3
adc
fcomi
sbb
xchg
push
or
jp
and
movsl
xchg
shll
mov
mov
pop
push
pop
push
cmpsb
mov
outsb
test
and
mov
dec
xchg
dec
adc
mov
stos
push
inc
pusha
add
lea
stos
pop
repnz
adc
xor
fsubrl
nop
loop,pn
shll
push
lods
lret
cwtl
jmp
ds
scas
pushl
xor
in
pop
test
or
push
fcoml
jg
mov
dec
jae
push
rorb
leave
pop
push
int3
mov
jns
inc
dec
ret
rorb
flds
sub
popa
sub
jb
mov
into
mov
push
outsb
out
inc
cltd
out
sbb
fisubrs
inc
shr
stos
jmp
ljmp
push
jecxz
inc
push
and
dec
sub
sbb
cmp
iret
aas
dec
hlt
jg
jmp
orl
cmpsb
and
insb
enter
fnstsw
mov
adc
out
mov
sbb
lret
cli
leave
mov
fcoms
sbb
minps
ja
cmpsb
lret
mov
hlt
int
je
ret
movsl
ljmp
je
int3
ficoms
pop
sbb
jmp
inc
loope
lahf
test
lahf
xchg
outsl
add
adcb
or
das
lea
call
jae
leave
mov
inc
jnp
jne
cmpsb
andl
imul
fst
loop
ljmp
mov
subb
imul
push
aam
fcmove
jno
std
inc
hlt
jno
sbb
inc
push
hlt
push
xchg
inc
inc
popf
xchg
pop
cmp
mov
loopne
bound
add
or
adc
mov
arpl
call
cmc
add
insb
jb
dec
jnp
hlt
xor
loope
jbe
jl
addr16
je
jp
adc
test
mov
cltd
enter
outsb
add
ds
adc
xchg
leave
push
sarl
dec
lret
loopne
aad
push
ljmp
fistl
pop
jge
dec
ret
xor
insl
sahf
xchg
cwtl
jle
or
sbb
inc
popa
fmuls
push
jns
inc
inc
lcall
insl
sarb
aad
in
pop
fs
pop
daa
int3
or
or
pop
ffree
test
mov
cltd
out
xchg
and
pop
pop
icebp
dec
push
sahf
out
mov
mov
cmpsl
xor
or
xchg
jno
cmp
aas
mov
fiaddl
out
push
and
es
imul
lcall
pop
add
fcompl
test
jne
push
pusha
mov
out
push
cmpl
sub
add
in
jo
ja
stos
ss
cmp
mov
fstpt
or
int
sbb
inc
ja
out
and
jecxz
loop
sbb
mov
popl
in
je
adc
mov
enter
adc
cmp
dec
push
sbb
lods
aam
fists
jns
mov
out
push
jp
loop
out
aaa
aaa
iret
pusha
imul
push
pop
inc
pop
mov
mov
movsb
int3
aas
out
fs
mov
jbe
push
popa
insb
and
xor
test
insl
jb
mov
xchg
pop
dec
pop
stos
push
mov
sbb
dec
andb
decl
sub
leave
xor
scas
fiaddl
lods
test
sti
repnz
pop
ja
xchg
addb
xchg
insl
fs
test
lahf
inc
xchg
pop
call
daa
pop
pop
popf
and
movsb
xchg
inc
sbb
sbb
pushf
jb
fcomps
push
push
les
nop
repz
xchg
mov
mov
clc
leave
jbe
movsb
es
fsubrs
mov
pop
mov
push
lods
movsl
int
pop
xchg
lods
mov
jg
mov
jae
xlat
or
sar
inc
push
dec
and
sub
add
cs
in
outsb
stc
jne
and
in
cwtl
rcll
adc
cmpsl
leave
mov
sti
xchg
jae
cli
push
leave
js
adc
iret
mov
jl
mov
andl
and
inc
ficompl
adc
push
add
cmove
push
lret
mov
aaa
mov
adc
mov
test
or
es
mov
mov
jb
and
scas
dec
test
fistpll
daa
mov
mov
dec
jp
in
push
test
sub
mov
push
sbb
lods
sahf
daa
cmp
test
pop
add
sbb
mov
or
stc
sarb
insl
or
mov
sbb
and
sbb
pop
aaa
scas
xchg
lods
fisttpll
mov
jo
cltd
enter
shlb
sti
jge
add
adc
push
fsubrs
push
sub
movsl
std
xlat
testl
fcompl
cmp
dec
push
rdpmc
out
adc
dec
xchg
push
loope
into
bound
dec
dec
imul
ds
mov
xchg
push
inc
bound
jl
jl
inc
push
int3
ja
add
xlat
fwait
cmpsb
and
nop
mov
push
pop
sbb
lock
pop
jns
das
ficoml
js
dec
push
sub
jo
jecxz
sub
test
ljmp
dec
sarl
ljmp
jnp
out
mov
outsb
jl
xlat
push
psrad
or
imul
jmp
sub
push
es
adc
fisttpll
jp
jo
mov
pushf
les
adc
jg
mov
xchg
cmc
push
and
jne
divb
aad
mov
sub
call
inc
cmp
add
js
ds
test
sub
add
jmp
popf
adc
pop
mov
and
rorl
js
lock
lods
mov
in
xor
sbb
cmpsb
sub
add
cmp
rcll
and
imul
push
inc
int3
sub
pop
mov
mov
mov
aad
in
mov
jno
bound
in
xor
push
mov
nop
add
mov
jg
and
pop
sbb
push
mov
or
pop
inc
das
sub
je
out
push
cmp
pop
adc
int3
dec
mov
hlt
std
divb
hlt
jecxz
into
ljmp
ds
or
and
cmpsb
push
decl
andl
lahf
pushf
std
jb
in
mov
stc
and
rol
sbb
or
dec
insb
lret
push
pushl
int3
sbb
push
xorl
shlb
lock
sub
scas
outsl
cmp
mov
xor
popa
dec
lea
xchg
add
sub
loope
and
aaa
sub
mov
dec
adc
loope
pop
add
cmpsl
push
ret
scas
sbb
es
lahf
shl
cmp
fidivl
clc
add
mov
hlt
sub
jne
jecxz
ja
fwait
ss
sub
add
aad
jmp
icebp
mov
xorl
mov
rol
xor
or
sub
ret
test
mov
pop
dec
mov
push
mov
jbe
clc
dec
pop
scas
and
inc
mov
imul
call
lds
int
adc
idivl
cli
push
clc
lock
out
jecxz
out
mov
xor
addr16
stc
mov
push
push
cli
cmc
std
mov
fstl
adc
test
mov
push
mov
dec
adc
inc
punpckhbw
outsb
sub
jecxz
lret
rcrl
rorl
je
pushl
add
fmull
sahf
jnp
jmp
out
das
lock
insb
fsubr
aad
lods
cmp
jno
in
out
cmpsb
sub
xchg
insb
push
sbb
incl
xchg
dec
mov
sub
int
and
arpl
rolb
in
jle
cmp
cwtl
push
loopne
mov
jmp
dec
arpl
or
lods
cmp
xor
adc
push
cli
popf
lea
add
bound
femms
js
pop
pushf
sub
pushf
jo
adc
xorl
fs
cmp
lret
mov
add
fdivl
stc
addr16
fidivrl
insb
orl
ret
aad
mov
imul
mov
lea
int3
push
push
mov
dec
adc
sar
js
ja
sub
xchg
mov
mov
test
add
jg
lods
jp
inc
fists
int3
in
xchg
les
fstps
cli
adc
xchg
mov
shl
fcoms
sub
add
fimuls
in
aam
sub
xchg
pop
sub
adc
mov
sbb
leave
in
mov
aas
pushf
mov
mov
inc
mov
jecxz
test
ljmp
xlat
jne
inc
pushf
fisttpl
daa
iret
ficomps
xchg
lret
movsl
push
aam
dec
mov
jb
dec
sub
push
dec
sub
lds
lcall
lock
leave
sbb
outsl
scas
orl
mov
rcll
xchg
push
loope
outsl
test
ret
add
aas
jl
adc
mov
cmc
es
out
cld
jg
mov
xchg
call
dec
sbb
pop
call
push
xchg
push
sarl
or
dec
clc
js
mov
cmpsb
xchg
mov
adc
inc
pause
and
or
popf
cmp
mov
cmp
shl
arpl
dec
dec
mov
adc
pop
nop
sahf
out
insl
andl
inc
mov
mov
jae
adc
mov
xchg
sarb
ror
push
lods
or
pop
jno
mov
dec
inc
rclb
jb
mov
add
mov
push
mov
lock
pop
jo
fnstsw
inc
mov
repnz
mov
jge
mov
pop
subb
pop
inc
add
leave
mov
or
clc
adc
add
sbb
pop
sub
test
in
stc
outsb
mov
aaa
push
sbb
adc
fwait
cld
ss
shr
cmp
and
es
das
jecxz
lcall
jno
std
scas
lahf
xchg
rol
xor
cmp
or
dec
or
dec
or
and
mov
push
arpl
cli
or
sbb
push
lret
inc
cmp
cmc
out
shrl
push
push
inc
js
and
cmp
test
jge
add
lods
jecxz
clc
xlat
push
enter
push
pop
les
dec
mov
ss
fwait
xchg
jmp
mov
sub
jnp
sub
adc
fdivl
cli
push
xor
pop
popa
xor
arpl
rorl
xor
mov
cmp
sub
aaa
lret
and
dec
mov
rclb
leave
aam
add
dec
pushl
pop
rcrl
xchg
mov
add
call
push
shll
cmp
or
ror
fildl
loopne
in
ret
xchg
inc
aaa
push
lret
rcrl
xchg
fwait
mov
mov
and
andl
add
or
sbb
sub
push
cmc
mov
push
cmp
sbb
sub
dec
xchg
pop
sub
mov
push
mov
xor
int
testb
fmuls
in
int3
lahf
jns
inc
pop
adc
lea
test
lock
in
iret
icebp
mov
fdivp
inc
scas
mov
mov
and
movsl
idivl
out
es
jns
add
fs
ret
push
fwait
lea
or
dec
scas
xchg
lods
ret
inc
cmpb
insl
sub
stos
data16
std
into
repnz
and
aaa
jmp
mov
xchg
mov
lock
mov
jp
push
fstl
cmpsb
and
jmp
mov
xchg
and
popa
adcb
jno
mov
cmp
fs
insl
das
les
mov
cwtl
ljmp
or
in
inc
ds
addr16
sbb
or
push
popa
jo
cld
cld
les
add
aaa
sub
sbb
pop
movsb
fstps
imul
jl
lods
mov
sarb
out
icebp
adc
and
fwait
pop
add
lret
ja
cmp
repnz
lods
xchg
insb
popf
mov
mov
cwtl
daa
stos
sub
jp
xchg
sahf
lods
push
or
mov
dec
jmp
sbb
pop
ud2
fwait
std
inc
in
arpl
out
mov
adc
subb
xorl
fucomip
adc
fucomip
gs
jnp
jle
pop
adc
xor
shll
add
jae
add
sti
mov
inc
aam
mov
fwait
gs
fcoml
fbld
push
fwait
add
stos
push
notl
push
ljmp
sbb
xchg
mov
loopne
pop
mov
cmp
inc
outsl
test
cmp
imul
push
ficoml
les
mov
push
loopne
negb
loop
das
dec
cmpsb
mov
adcl
push
mov
or
add
test
xchg
daa
insl
data16
or
fdivrl
stc
popa
data16
cwtl
fsub
call
or
push
popa
int
adc
out
cltd
mov
lret
xchg
or
ja
inc
pop
fyl2x
push
cmp
pop
pop
scas
pop
mov
push
lret
outsb
xor
mov
add
imul
add
add
outsl
dec
cmp
xchg
lods
mov
out
xorl
into
int3
in
sbbb
xor
test
ja
sub
aaa
imul
mov
incl
int
or
out
or
sahf
lcall
pop
and
ss
mov
imul
xor
jno
mov
ja
lods
pushf
or
loop
sbb
mov
fwait
pop
loope
std
mov
pop
inc
mov
push
dec
data16
add
mov
cmp
ret
iret
mov
xor
ja
enter
es
pop
or
inc
stos
les
loopne
jns
cmpsb
les
mov
int
mov
mov
mov
outsb
stos
addr16
jb
sarb
mov
or
xor
xchg
xor
addr16
bnd
mov
and
jbe
aaa
imul
out
andl
adc
xchg
mov
fnsave
sbb
repz
adc
lret
mov
fimull
and
mov
adcb
add
daa
inc
pop
jb
ja
inc
cmp
sub
mov
pop
cld
jno
sub
mov
fdivrs
insl
ss
leave
imul
data16
lahf
add
xor
pop
movsb
sub
or
andl
and
mov
or
mov
fiaddl
xor
adc
pop
jge
or
add
stos
pop
adc
gs
rol
mov
rol
lods
mov
mov
push
mov
or
push
loope
push
mov
and
rep
push
push
jmp
mov
daa
push
mov
inc
xor
fisubs
sbbl
ja
sub
add
push
iret
sbb
in
sub
lcall
sbb
data16
inc
aas
int
xchg
shlb
xchg
popa
mov
xchg
fcmove
data16
jno
push
pusha
repz
xlat
mov
cmp
aad
push
pop
out
rcll
dec
sub
out
leave
shrl
dec
push
inc
lods
fbstp
and
and
pop
mov
pop
pusha
xor
xchg
inc
clc
aas
outsb
mov
imul
js
je
mov
adc
loopne
inc
dec
ds
sub
out
and
sub
cmpsb
scas
xlat
xchg
outsl
mov
sahf
mov
lea
mov
and
adc
and
stc
xor
xor
mov
sub
sub
stc
pushl
aad
int
mov
pop
xor
dec
fstpl
ret
out
das
pop
popa
movl
lahf
std
mov
mov
mov
or
sbb
pop
dec
lea
adc
push
and
insl
xchg
movsb
push
fst
cmpsb
out
popa
push
or
int
rclb
out
mov
jp
cltd
mov
iret
js
pusha
jp
dec
mov
fwait
int
arpl
jl
ret
or
dec
jl
cmpsl
mov
lahf
popa
dec
xchg
loope
insl
in
in
pop
dec
cld
cli
sbb
sub
decb
or
mov
xchg
loope
test
or
mov
rcr
in
push
adc
pop
aad
inc
ja
mov
mov
cmc
lcall
jbe
sub
ds
sahf
xchg
ja
jmp
mov
insb
sahf
pop
subl
mov
arpl
xlat
int
imul
push
sahf
aad
xlat
cmp
loopne
inc
mov
lahf
movl
sbb
enter
sub
ljmp
call
outsl
or
lds
idivl
add
fisubs
or
leave
jno
out
pop
inc
lds
out
cli
stos
mov
fldenv
or
add
cld
bound
mov
xchg
loop
pop
and
xchg
in
stos
sub
movl
push
mov
insl
jbe
clc
scas
nop
in
icebp
aaa
mov
cmc
inc
icebp
dec
dec
rorl
dec
movb
stc
popa
xor
mov
lahf
jge
shll
and
sub
les
dec
xchg
mov
push
mov
in
aas
sub
ljmp
jnp
lea
cltd
insl
gs
xor
mov
jle
or
or
ret
dec
insl
comiss
dec
sti
or
imul
mov
ret
mov
mov
sbb
dec
mov
outsb
fadds
hlt
in
lds
rclb
ljmp
dec
hlt
mov
mov
insl
jbe
testl
repnz
aam
inc
sahf
adc
pop
xor
je
xor
jmp
xlat
xchg
mov
mov
fwait
adc
pop
in
add
mov
test
mov
fwait
inc
sbb
jns
or
test
jp
test
out
in
out
pop
jns
pop
cmc
cmc
inc
sbb
xchg
push
inc
sti
mov
vpsllq
aaa
rclb
xchg
in
andb
xor
popa
inc
push
xchg
lret
mov
and
movl
xchg
pop
insb
aaa
add
push
mov
fwait
xor
lods
in
loop
lock
and
cmpsl
dec
jae
adc
lret
and
and
sub
test
fs
in
fnsave
rcr
movsl
sub
jb
cmpsb
int3
ja
dec
mov
sahf
retw
or
std
inc
add
sbb
daa
jge
add
in
xchg
pop
push
bound
ret
bound
or
not
mov
mov
jg
xor
xchg
inc
dec
mov
rclb
pop
fcompl
lahf
movsb
ret
pop
push
pop
mov
adc
inc
scas
sbb
out
shrb
leave
es
nop
jp
inc
or
push
cmpsb
push
pop
sahf
add
xor
jnp
push
rcrl
inc
shlb
sub
in
andb
jle
mov
push
ljmp
sub
push
and
stc
jne
xchg
mov
adc
inc
loopne
mov
movl
rolb
mov
pop
jne
int3
dec
int
mov
cmp
mov
insl
xor
aam
pop
stos
mov
push
inc
xlat
push
sub
fdiv
jbe
mov
aas
rcrl
xor
std
fnsave
jge
out
in
js
scas
jp
push
idivb
push
jecxz
cmp
jl
loopne
rcr
push
faddl
mov
les
imul
dec
leave
icebp
mov
mov
hlt
xor
enter
jl
adc
aaa
out
fwait
icebp
xor
mov
jbe
or
incl
stos
outsb
lds
js
pop
push
inc
aaa
in
arpl
push
adc
jg
fidivs
or
xor
jnp
aaa
sub
push
test
mov
cli
fbld
mov
mov
lcall
dec
jns
setp
cmp
repz
aaa
mov
xchg
std
inc
shll
mov
lret
jp
out
add
stc
xor
pop
test
in
cmc
cmpsl
push
xchg
mov
jge
cmp
ja
out
clc
lods
lret
sti
and
and
push
stc
int
or
mov
xor
push
xor
mov
ds
stos
aad
out
push
imul
sar
or
sbb
andl
pop
mov
pop
movsl
mov
test
fld
or
mov
xchg
fdivl
inc
push
cmpsl
bound
jl
mov
xlat
sub
les
daa
pop
add
lret
das
rol
into
fmuls
adc
in
addr16
and
cmp
stc
int
sbb
pop
pop
add
mov
sub
movsb
add
xchg
xchg
mov
mov
jbe
jg
mov
xchg
and
ja
sub
xlat
enter
ret
insb
mov
push
push
int3
dec
pop
nop
test
jbe
in
xchg
jbe
or
lahf
notb
jl
mov
xorl
icebp
into
push
mov
pop
jp
jne
cmpb
add
dec
pop
add
lods
pop
jle
inc
test
jb
scas
jne
pop
mov
in
sti
stos
andl
inc
mov
xchg
cmp
imul
sbb
repnz
popa
dec
mov
movsb
lods
ret
xchg
stos
cmp
xor
xor
lds
insl
xchg
add
sub
mov
dec
add
jecxz
or
sbb
imul
xor
ds
xchg
sub
mov
xor
adc
pop
jb
sar
aaa
test
jae
or
out
add
fadds
stos
cld
push
fmuls
sahf
scas
xchg
xor
push
xor
sub
cmp
outsb
mov
and
or
xor
aas
ret
push
cli
movsl
inc
adc
pop
mov
sub
flds
rolb
push
push
pop
mov
es
jmp
mov
into
mov
shl
push
and
jae
xchg
ja
xorb
dec
movsl
adc
push
cmpsl
xor
cs
call
inc
test
loope
xchg
push
or
jge
arpl
test
cli
repz
inc
cmp
xchg
push
ja
adc
lock
sbb
movsl
ret
jb
dec
daa
mov
sub
ret
loope
mov
clc
mov
mov
and
sbb
orb
xor
stc
dec
sub
insb
inc
iret
adc
outsl
sub
dec
dec
lret
div
jno
hlt
mov
loop
adc
inc
xchg
inc
aam
and
hlt
mov
push
mov
call
push
pop
cmp
repnz
cmpsb
add
xor
jecxz
mov
mov
sbb
pop
push
mov
out
fmul
add
out
pop
stc
fsts
push
jmp
xchg
push
call
stos
out
cltd
lret
pop
pushf
mov
shll
inc
mov
mov
jno
sbb
xchg
daa
add
pusha
leave
sbb
xor
outsl
aad
sbb
fistps
test
push
inc
lcall
mov
roll
popa
xor
push
push
push
rorl
imul
cmc
or
xchg
fs
test
mov
pop
popa
xor
adc
pop
xor
or
cs
or
emms
cmp
add
jl
js
push
jmp
inc
cs
mov
cmc
lret
les
imul
enter
mov
push
ret
sub
sub
jge
pop
arpl
loopne
iret
lods
add
add
popa
aas
or
and
scas
filds
inc
and
inc
inc
mov
jmp
push
popf
mov
das
mul
pop
addr16
sbb
push
into
lret
repnz
or
dec
out
adc
repz
rcrb
ss
fcmovnu
test
and
lods
push
jp
ds
ja
sbb
int
cmp
and
fidivrl
lock
pusha
out
data16
mov
adc
xlat
mov
cmp
scas
out
arpl
push
out
in
loopne,pt
pushf
ficoms
cltd
mov
in
lds
orl
pop
data16
fldcw
ret
rcll
dec
sbb
jne
enter
mov
cmp
aad
shlb
out
aam
in
sbb
lret
mov
push
mov
bound
jns
inc
popf
subb
fidivrs
add
gs
fcomi
cmp
and
pop
fcmovnu
fstpl
mov
out
outsl
mov
testl
fcoml
data16
sub
out
psrld
pop
jnp
add
in
cmova
inc
pop
push
sbb
pop
jnp
push
mov
fidivrl
and
xor
insb
xchg
mov
inc
jo
xor
scas
movsl
mov
pusha
fildl
loopne
and
sub
pop
cmpb
test
add
inc
or
cmp
mov
daa
mov
mov
rcrl
insb
mov
mul
dec
add
mov
mov
xor
push
ret
xchg
rcrb
xlat
out
xor
neg
jnp
jb
loope
les
pop
fabs
dec
push
mov
jecxz
jne
cmpsb
mov
ja
push
test
jecxz
jnp
or
pop
adc
mov
xor
add
ljmp
fimuls
arpl
sbb
and
loop
insl
test
fmulp
fsubrl
insl
aas
or
mov
lret
sbb
jge
xchg
inc
lods
out
jae
jb
mov
arpl
jp
pop
pop
mov
loop
jo
pop
cmp
xchg
xchg
and
pop
in
insl
jl
subl
idivb
jle
inc
sbb
popf
stos
test
jg
or
out
push
xchg
mov
cmp
cwtl
mov
mulb
inc
aas
push
std
xlat
adc
bswap
ret
dec
mov
adc
test
dec
jnp
jge
pop
lds
adc
mov
push
adc
xchg
fstpt
into
mov
lcall
nop
out
push
push
fs
leave
jg
push
sub
shrb
and
aad
jecxz
js
mov
add
sbb
and
jge
inc
jns
repz
stos
leave
arpl
mov
fistpll
mov
rcr
sbb
push
inc
adc
loope
dec
push
dec
inc
imul
repz
mov
jmp
es
push
mov
xchg
mov
mov
mov
ret
ds
fimull
push
sbb
and
fnclex
ret
mov
adc
fiaddl
push
and
jecxz
ja
ds
adc
loop
aaa
dec
cmp
iret
stc
mov
or
lock
dec
rolb
fsubrl
aaa
jnp
or
mov
sbb
xchg
dec
push
xor
icebp
jbe
jp
jb
decb
in
inc
adc
insb
insb
and
mov
test
cmp
cmp
orl
mov
pop
rolb
sbb
pop
xor
mov
into
push
pop
fisubl
leave
leave
outsl
mov
cs
mov
xor
dec
das
out
popf
inc
mov
push
sbb
sbb
outsb
mov
push
testl
sbb
cmp
ds
fiaddl
and
ret
mov
scas
adcb
sbb
fmull
sub
out
in
sbbb
dec
push
xchg
test
addr16
mov
aaa
iret
ljmp
sahf
lret
rcr
mov
cs
enter
lods
sbb
push
popf
stos
inc
xor
ret
mov
shlb
xor
xor
aas
push
loopne
or
sub
inc
dec
cmp
fbstp
pop
jmp
test
xchg
into
mov
dec
add
pop
sbb
cmp
fildll
sbb
rolb
add
jmp
sub
pop
sub
outsl
js
adc
pop
nop
mov
ds
fisttpl
sub
test
dec
cmp
lahf
pop
ds
cld
push
sub
jge
mov
mov
pop
pop
inc
clc
leave
xchg
bound
sbb
pop
jge
xor
or
outsb
pop
and
out
mov
add
or
sbb
pop
mov
iret
cmp
or
add
dec
mov
insl
adc
xstore-rng
cmpsl
shll
sbb
jno
mov
addl
outsl
es
stos
jno
rcll
lds
shlb
bound
fdiv
int3
das
jg
jo
adc
repnz
hlt
jb
sub
test
mov
sahf
adc
mov
out
sub
cmp
sub
int
sbb
push
jl
imul
dec
movsl
pop
xor
popa
mov
jo
gs
cmp
scas
icebp
repnz
in
sti
gs
out
lock
mov
xchg
jl
sti
js
bound
sbb
in
out
hlt
nop
pop
mov
leave
and
mov
push
pop
mov
loopne
lods
add
pop
test
cmp
jo
sub
aas
std
cmc
push
popa
push
xchg
add
adcl
shrb
sub
xchg
int
in
ljmp
or
std
into
in
xor
inc
sbb
sti
fldenv
lcall
lahf
loope
shll
mov
dec
repz
movsb
lock
pop
das
cmp
push
jns
push
sub
sub
inc
and
hlt
stc
pop
ret
inc
icebp
aad
fwait
in
xchg
mov
or
sbb
mov
out
jns
je
sbbb
xor
stos
cwtl
cmpsl
lret
fildll
jmp
cmp
cmp
stos
sub
std
inc
cltd
jns
add
push
sub
adc
out
add
jge
cwtl
mov
inc
mov
fnstenv
xchg
sub
and
sbb
icebp
inc
mov
jecxz
sbb
add
cld
jg
aas
sub
cmc
movsb
sbb
jle
xor
jge
popa
andl
mov
into
xchg
cmp
mov
mov
and
dec
fbstp
push
je
inc
shll
xchg
or
jno
sub
cmp
lahf
scas
into
mov
fmull
out
fisubl
mov
pop
in
movsb
enter
mov
dec
sub
and
in
mov
jmp
add
rorl
sub
ss
add
and
push
int
xorb
and
mov
divl
fisttps
push
cltd
in
sub
clc
mov
out
les
dec
xor
cmp
lods
mov
add
xchg
and
sbb
fdivl
dec
jno
sahf
icebp
mov
pop
add
loop
fsubs
mov
xchg
push
dec
sahf
xor
into
mov
mov
push
dec
push
pop
inc
popa
fwait
sub
fidivs
push
cmp
stos
sbb
fcomip
ljmp
lahf
jnp
xor
lock
aam
pusha
in
loopne
aam
stos
stc
push
cmp
loopne
jnp
inc
shlb
mov
push
in
xchg
insb
xchg
mov
outsb
sbb
jbe
icebp
or
cmpsl
sub
out
repz
sbbb
or
cmp
mov
mov
lds
sub
daa
dec
xlat
loopne
push
lahf
mov
sub
out
cs
jbe
stos
lea
and
inc
add
idiv
cmpsb
jbe
pop
push
jge
hlt
scas
fdivl
sbb
mov
mov
dec
addr16
repnz
insb
icebp
roll
into
inc
rcl
fnstenv
push
xor
std
sbb
or
int
ja,pn
popa
mov
or
mov
inc
mov
jmp
bound
fsubr
sbb
push
adc
sahf
or
lret
enter
insl
dec
jmp
push
push
xchg
nopl
sbb
jmp
pop
pop
leave
pop
scas
stos
fs
mov
jmp
clc
call
pop
inc
lock
cmc
mov
outsb
cli
mov
inc
in
js
in
fs
repnz
mov
scas
loope
fisubs
sub
cmp
xchg
xlat
mov
bound
iret
adc
in
adc
dec
test
repz
mov
xchg
add
and
icebp
pop
dec
imul
lock
sub
iret
icebp
cmc
or
pop
add
and
lods
iret
sahf
mov
les
and
rorb
lret
adc
in
xor
dec
and
call
adc
icebp
cmp
imul
movsl
xor
cmc
cli
outsb
fdivl
aad
push
fmul
push
inc
pop
mov
shll
or
imul
add
mov
push
pop
pop
xchg
hlt
jle
sti
push
lods
mov
pusha
push
hlt
mov
stos
test
divb
clc
mov
add
lods
jo
sbb
std
pop
jno
push
or
push
out
mov
in
ret
movsl
cmp
add
lahf
lods
mov
dec
movsl
mov
imul
mov
push
mov
cmp
repnz
inc
dec
lahf
xchg
ds
jmp
dec
push
or
clc
inc
or
push
cmp
aaa
sti
xchg
sbb
test
addr16
xor
out
pop
mov
shlb
nop
add
andl
xchg
into
xor
cltd
or
in
in
popf
pop
dec
mov
ret
repz
call
cld
mov
adc
and
and
call
movsl
fistpl
ds
mov
xor
sahf
lea
and
mov
mov
iret
aam
inc
addr16
pop
push
cmpb
pop
dec
and
scas
push
ret
ret
mov
or
dec
inc
dec
cltd
mov
sub
in
mov
add
out
les
jmp
ja
sbb
mov
or
xor
pop
jecxz
sub
lds
movsw
or
push
sbb
gs
daa
movsb
mov
test
sbb
lret
mov
xchg
in
push
out
or
pop
inc
mov
shlb
add
lret
xor
aad
push
push
cmpsl
test
pop
jno
mov
jae
push
scas
in
imul
jle
stos
in
pop
sub
xor
pmulhw
jg
pushl
and
push
ffreep
loop
mov
repz
and
sub
add
adc
push
mov
cli
mov
fcmovne
lods
jle
jl
add
mov
frstor
ret
sbb
xchg
pop
jl
jnp
iret
enter
adc
cmp
jp
mov
jmp
jge
clc
outsl
dec
push
xchg
mov
mov
add
sahf
sbb
dec
imul
pop
jno
idivb
in
and
jl
and
push
daa
inc
xor
jae
imul
fistpl
add
insb
push
aaa
enter
subl
push
jo
mov
adc
dec
xchg
push
repnz
cmpsl
in
fs
jle
jecxz
insb
or
loopne
imul
sub
lret
adc
mov
insb
dec
add
hlt
mov
cli
out
pop
fwait
pop
jl
ja
pusha
sbb
out
jb
jne
aad
shlb
jns
fisubrs
or
clc
push
xchg
sub
aaa
fistpl
mov
cld
mov
pop
add
xchg
dec
mov
bound
cmp
sub
mov
xor
icebp
mov
xor
push
xor
mov
aas
pmulhuw
rcl
mov
ftst
fs
popa
in
add
cltd
gs
jns
pop
pop
or
lods
mov
mov
pop
mov
cmp
sbb
xorl
ficoms
xchg
fcmovbe
jecxz
aas
jecxz
mov
or
pushf
minps
mov
jp
fisubrl
sarb
mov
imul
sub
jns
fsubs
mov
mov
scas
call
ds
lcall
dec
jbe
pop
insl
and
vpmacsdqh
jns
xchg
push
push
pop
pop
pop
notl
sbb
clc
es
pushf
jge
or
mov
push
sub
les
push
lods
lret
mov
mov
aad
out
xchg
into
cmpl
loope
sbb
sti
inc
xor
ljmp
outsb
stos
js
fdivrl
pop
cmp
and
xor
out
cwtl
movl
push
sbb
jnp
int
mov
pop
inc
loopne
dec
andb
sub
sub
mov
xchg
in
pop
xor
jo
pop
and
or
sub
push
dec
int
leave
insb
sahf
dec
mov
inc
ja
inc
popf
pop
movsl
nop
loopne
rcrb
pop
and
pushf
mov
negb
insb
sub
nop
or
push
dec
add
xchg
lahf
mov
push
lret
xor
sub
cli
adc
fisttpl
cltd
pusha
lcall
pop
pop
mov
push
daa
jmp
inc
sub
and
or
dec
test
inc
movsb
rcr
aam
bound
adc
jmp
pop
insl
das
mov
daa
inc
fwait
test
cltd
jne
inc
mov
test
xchg
int
xor
xor
movsb
jne
mov
out
xchg
iret
sahf
mov
inc
jo
jns
pop
mov
and
jno
stos
inc
or
xor
loop
in
mov
mov
imul
push
xorl
mov
xlat
movsl
mov
sbb
add
pop
jno
sbb
pop
ficompl
cmp
cmp
mov
mov
sbb
aam
movsb
sub
or
push
aaa
in
ds
dec
mov
pop
cmp
fwait
adc
sbb
sub
push
cmp
pushf
xor
xchg
roll
push
shrb
repz
leave
mov
mov
push
sub
xor
mov
ret
dec
int3
mov
push
movsb
mov
sub
dec
or
fs
pop
mov
cmpsl
xchg
sub
test
addr16
mov
fidivrs
cs
out
jecxz
inc
subl
sbb
or
clc
xlat
cmpsb
in
fiadds
or
push
add
push
adc
or
daa
pop
dec
into
pop
int3
inc
xor
cmp
cmp
dec
cs
jmp
pop
mov
or
fidivs
cmpsb
notb
lock
sbb
sbb
cli
jne
out
test
pop
repnz
inc
leave
jae
or
and
fwait
jnp
add
xor
cmp
cwtl
ja
jl
push
aam
iret
ja
xchg
add
pop
jnp
ret
and
dec
addr16
sbb
mov
out
xlat
faddp
mov
andl
mov
cmpl
shl
push
inc
inc
fldt
xor
rcrl
or
nop
sub
ss
inc
dec
loop
daa
scas
jl
inc
or
das
and
bts
test
shrb
jge
pop
fisttpll
movsb
adc
sub
cmc
pop
push
lea
and
mov
xchg
aaa
xchg
add
jo
mov
pushf
fsubl
arpl
or
mov
push
aam
xchg
push
pop
cmp
cmc
popa
ss
rorl
incb
or
push
and
add
addr16
jae
pop
icebp
ds
mov
mov
push
movsb
std
sbb
lcall
popa
jns
icebp
cmp
mov
ffreep
push
scas
add
arpl
imul
ret
and
pusha
test
ds
fcmovu
xchg
movsl
in
in
xchg
stc
imull
jmp
scas
sahf
aad
xor
ret
insb
clc
mov
test
sbb
add
in
jmp
pop
pop
lret
cs
sarl
repz
xchg
clc
adc
cmp
dec
push
xor
cmp
sti
sub
mov
mov
incl
dec
roll
shl
pop
push
or
and
pop
xchg
js
xlat
inc
push
dec
or
xlat
mov
in
sbb
add
js
jns
lret
push
inc
inc
mov
mov
adc
add
push
sbb
cmpsl
dec
dec
xor
mov
bswap
ds
xor
xchg
mov
or
sub
outsb
adc
inc
rcll
adc
or
push
test
or
push
test
dec
sarl
lods
repz
pcmpgtw
jmp
push
sbb
shll
adc
scas
jb
jne
outsl
add
add
mov
mov
lock
jno
push
mov
pop
clc
cmpl
xor
int3
andl
in
test
clc
scas
arpl
adc
mov
inc
outsl
clc
lock
mov
adcb
inc
cmc
cmp
pop
sahf
dec
outsb
mov
cmp
fnsetpm(287
dec
jo
pop
loop
dec
movsb
push
xor
fisubl
adc
cmp
lock
in
push
insb
pop
mov
sbb
push
sti
sbb
mov
jecxz
xchg
dec
push
cltd
iret
std
add
sub
popa
push
data16
mov
orb
lods
stos
adc
rolb
push
push
movsb
lods
rcrb
gs
das
fld
dec
lea
cwtl
inc
cld
popf
mov
addl
push
and
pushl
sbb
or
lcall
and
fmull
jecxz
int3
fld1
imul
sbb
xchg
dec
fstp
jmp
arpl
movsl
lret
jmp
cmpsl
xchg
aas
push
cmpsb
xchg
cmp
lahf
pop
sarb
gs
push
enter
xor
cmpsl
lods
iret
test
lret
fsubrs
mov
je
jnp
add
aaa
xor
in
adc
pop
scas
outsb
mov
shr
icebp
into
jmp
in
inc
scas
gs
pop
out
push
aad
mov
pop
lahf
xchg
fistpll
hlt
fcmove
in
xchg
mov
adc
lea
and
adc
sub
fcoms
adc
cmp
xchg
fwait
cmpsl
idivl
std
enter
mov
xor
ss
mov
aad
and
jecxz
shlb
or
inc
xlat
pop
jl
iret
movsb
xor
pop
repnz
or
pop
stc
fidivs
push
nop
dec
jecxz
mov
push
int3
push
in
call
mov
imul
aas
lds
mov
sub
nop
add
and
das
jno
jbe
shrl
loope
sub
sti
unpcklps
push
in
mov
cmpsl
popa
jns
shlb
ljmp
jg
xrelease
adc
cmp
sbb
push
push
scas
push
mov
ret
js
pop
mov
and
push
pop
lea
or
pop
cmp
cld
push
xor
ror
and
push
nop
jns
int3
stos
dec
out
stos
pop
or
xor
mov
dec
imul
sbbb
pop
mov
mov
ljmp
iret
roll
and
mov
ja
out
sub
cmpsb
xor
iret
repnz
mov
lret
into
sarb
cld
sub
add
push
mov
scas
lea
push
dec
push
jb
push
mov
stos
dec
add
pop
das
xor
lret
lods
or
ret
fsts
inc
mov
out
xchg
stos
fmul
jnp
add
pop
sub
fwait
inc
jns
nop
mov
sahf
add
add
call
push
or
mov
push
in
out
and
loopne
outsl
or
sub
in
daa
subl
inc
mov
jbe
outsl
inc
dec
jl
mov
adc
daa
mov
and
test
jle
jb
push
mov
bound
inc
loop
sbb
fwait
cmp
movsb
sub
jb
imul
into
sbb
lods
inc
les
out
pop
stos
adc
xor
push
pop
arpl
les
adc
daa
add
add
sbb
mov
mov
adc
ljmp
and
xchg
xchg
mov
add
addr16
or
push
mov
loop
xchg
lds
or
add
xor
pop
hlt
test
sub
mov
xlat
in
add
pop
jb
push
stos
ret
mov
ljmp
rclb
push
popf
rcll
insl
and
ss
es
addr16
aad
jns
or
aam
addr16
mov
jl
xchg
cmp
adc
int3
test
imul
inc
es
dec
movl
xchg
pop
xlat
aad
inc
scas
loope
cmp
pop
in
pop
lock
js
pop
adc
and
repz
xor
inc
mov
nop
xor
je
inc
dec
xchg
inc
jne
scas
xchg
adc
and
addr16
mov
cmp
cmp
xchg
in
push
sbb
out
pop
pop
lret
mov
lea
fisttpl
repnz
push
jmp
jns
mov
and
hlt
cwtl
inc
jmp
mov
xchg
cmp
clc
lock
in
test
mov
imul
outsl
adc
sbb
dec
and
pop
push
sbb
repz
adc
xchg
pop
insl
sbb
cmpsb
roll
pop
repnz
stos
or
out
test
nop
out
hlt
mov
mov
xchg
int3
mov
adc
add
fidivrl
dec
push
mov
stc
insl
sbb
mov
popa
sahf
mov
jl
mov
jmp
lods
imul
or
adc
jp
mov
shlb
jae
lods
fwait
loop
in
mov
lahf
dec
push
testb
inc
pop
cmp
scas
dec
fsubrl
ljmp
js
rclb
xchg
xchg
test
fnstsw
sbb
pop
jl
push
test
aas
iret
or
fldl
and
dec
jle
dec
lret
or
fsubl
stos
lods
cmp
or
inc
pop
sbb
gs
jno
adc
pop
jmp
sbb
insl
jno
movsb
arpl
mov
mov
int3
sahf
xchg
sti
out
xor
test
sbb
or
cmpsb
aam
imul
xchg
mov
icebp
and
ret
push
mov
push
lods
xor
sub
mov
xor
push
push
jmp
shrb
lret
rolb
lods
or
xchg
orl
sub
cmp
int3
sbb
repz
arpl
sti
popf
xchg
xchg
sub
xor
test
in
mov
add
sahf
test
pop
rclb
lea
add
inc
or
mov
push
inc
or
adc
daa
mov
or
jnp
xor
inc
rcrb
aad
pop
xor
aaa
clc
ss
loope
mov
movsb
hlt
pop
das
dec
out
pop
push
sti
dec
jbe
lahf
roll
jno
or
xlat
mov
adc
jo
ss
loop
mov
scas
jae
xor
test
jne
or
push
popf
jae
dec
inc
hlt
fiaddl
or
mov
out
jae
adc
loop
inc
adc
and
xchg
adc
sub
push
mulb
xchg
fisubrs
dec
add
jle
push
or
inc
mov
sbb
lock
pop
negb
ds
cli
js
dec
sub
in
out
adc
das
insl
push
bound
test
xchg
sub
jle
lock
xchg
in
adcb
dec
int
xor
leave
push
push
cmpsl
cmp
jno
and
add
mov
add
jmp
je
jle
pop
xchg
enter
xor
jne
xchg
clc
enter
xchg
inc
test
pop
cmp
fadd
loopne
lds
shlb
maskmovq
imull
movsb
stc
fildl
add
sub
inc
ret
push
cmp
lea
xchg
mov
adc
sbb
jne
aam
xchg
lret
mov
fsubrp
xchg
cmp
xchg
pop
or
mov
xor
out
lea
mov
cmp
or
fwait
in
mov
mov
push
je
pop
jl
pop
xor
lea
jb
nop
add
sbb
or
sbb
add
pop
ret
icebp
outsb
popf
push
fs
insl
mov
insl
xchg
mov
mov
loope
sbb
nop
bound
mov
lret
repz
push
jecxz
rcrb
cwtl
mov
loope
sub
mov
cwtl
shl
sbb
pop
fcoms
add
shl
mov
stc
aaa
xchg
jbe
cmp
mov
repz
in
pusha
lea
push
add
jmp
ljmp
test
pop
inc
or
aas
cmp
dec
sbb
sbb
and
adc
test
pop
pop
cltd
dec
rcll
mov
cmpsb
cwtl
fnstcw
loope
inc
loope
push
xchg
loopne
and
xor
daa
dec
xor
outsb
dec
sub
cltd
dec
mov
jne
sbb
cmp
cli
adc
ficoms
bound
out
in
ds
mov
fcmovu
testl
cwtl
and
mov
sarl
std
iret
inc
lods
xchg
mov
pop
push
cltd
mov
imul
sbb
and
fcmovnb
sbb
add
nop
incb
loope
aaa
push
aaa
mov
or
mov
scas
repnz
rcrl
mov
aaa
adc
sbb
sub
addr16
nop
es
mov
mov
inc
xlat
adc
shl
cmp
scas
xchg
and
leave
neg
out
xlat
lcall
out
outsl
mov
xchg
sbb
dec
scas
push
sub
loopne
inc
xchg
mov
std
jo
xchg
idiv
ficoms
push
push
xor
pop
jl
movsl
loopne
cmp
mov
loope
in
je
cmpsl
out
movsb
cmp
mov
pushf
inc
jns
push
cwtl
mov
dec
push
pushf
pushf
les
pushf
jns
enter
xchg
imul
push
arpl
fistpll
outsb
les
dec
cmpsl
mov
push
push
sbb
mov
stos
xchg
les
insb
gs
stos
out
jnp
fcomps
lahf
adc
jno
jae
jo
test
add
jg
les
add
cmpsb
outsl
push
mov
and
pusha
push
jl
adc
sub
movsb
stos
add
sbb
lahf
cltd
fidivrl
mov
xchg
jno
pop
fisttps
jo
adc
xor
je
aad
fwait
iret
and
out
mov
repnz
jle
out
or
sbb
pop
out
jne
sbb
sbb
and
cld
mov
data16
idivl
enter
in
popa
daa
cmp
lock
sbb
in
inc
push
mov
pop
outsl
arpl
mov
add
mov
rolb
xchg
addb
addr16
or
dec
outsl
add
test
mov
inc
daa
jg
sub
sbb
cmc
insb
cmp
stc
sti
aaa
lret
jl
add
dec
pop
sub
hlt
gs
sub
xor
sbb
pop
in
fstpt
inc
mov
inc
in
lret
push
fstp
pop
sbb
sbb
int
xorl
add
ljmp
push
pop
xor
sbb
jns
push
sbb
pop
sbb
push
xor
pop
testb
into
int
inc
dec
xlat
fists
mov
adc
cltd
leave
mov
cld
or
sahf
or
inc
dec
in
push
pushf
cmp
jg
pop
xchg
and
sbb
and
int3
pop
jle
out
lea
lret
mov
int
jmp
std
rcrl
int
add
mov
mov
jb
xor
int
mov
mov
lods
mov
xlat
mov
popa
daa
push
enter
fucom
je
and
insb
das
xchg
or
shl
dec
fmuls
jo
out
call
es
sti
mov
dec
jbe
xor
dec
orl
sbb
enter
jp
push
divb
enter
mov
arpl
jns
int
or
sub
xor
xchg
sub
cmp
scas
das
imul
sub
icebp
adc
loop
mov
jo
xor
push
les
jno
xchg
insl
es
repz
mov
repnz
idiv
mov
push
mov
inc
mov
push
mov
cli
jnp
jns
aaa
scas
stos
andl
iret
jp
test
test
lcall
ret
cld
cmpsb
and
jne
mov
fstps
je
test
mov
fstps
dec
jge,pn
punpckhbw
mov
lcall
mov
push
in
push
stc
popw
and
xor
ss
pushf
clc
nop
ret
sub
rorl
mov
xchg
or
in
jl
mov
imul
aas
notl
out
inc
xor
xor
in
sub
mov
call
pop
push
dec
xlat
xlat
pop
orb
mov
les
cwtl
bound
into
sub
adc
popf
mov
mov
jecxz
movsb
rcrb
addr16
mov
popa
call
test
mov
imull
sub
push
push
imul
adc
ss
push
and
cmp
sub
loop
call
fwait
push
mov
adc
sbb
mov
mov
clc
clc
inc
mov
cmp
pop
inc
negl
sbb
push
push
fistpll
mov
cmpsb
pop
outsb
xor
jle
enter
cmp
in
mov
push
fs
adc
bound
ljmp
outsb
dec
cmp
mov
mov
push
sbb
cmp
mov
mov
pop
lret
fbstp
filds
ljmp
add
clc
mov
push
jecxz
lret
movsl
xchg
cmp
popf
ljmp
inc
jmp
imul
add
lret
sbb
repnz
test
test
cmp
out
outsb
jp
adcl
arpl
jge
iret
jle
arpl
inc
loop
jo
sub
cwtl
movsb
imul
iret
mov
push
cmp
pop
and
add
mov
adcb
arpl
pop
mov
adc
ret
mov
jg
push
je
jnp
xchg
mov
aaa
adc
mov
lret
and
mov
pop
dec
pop
cmpsl
inc
nop
iret
in
mov
xor
add
out
fdiv
dec
fisttpl
xchg
jo
int3
jp
jecxz
push
xchg
hlt
aad
sub
stc
mov
jo
add
and
jae
lods
lret
bound
nop/reserved
in
and
sub
mov
push
repnz
sahf
mov
mov
push
int
or
out
mov
add
push
xchg
adc
scas
scas
iret
xchg
dec
addr16
pop
add
jbe
sub
das
xchg
xor
sub
mov
push
sbb
xor
sar
in
pop
add
pop
push
add
mov
jle
xchg
xorl
mov
xor
mov
pop
or
outsb
mov
push
movsl
push
mov
lods
lret
cmp
jle
lea
outsl
xor
out
ss
clc
sub
call
mov
push
adc
pop
adc
js
pop
fbstp
out
popa
shll
xor
movsl
xor
mov
push
insl
push
imul
adc
mov
sub
jnp
lea
loop
aad
xchg
push
mov
repnz
shl
push
jle
cld
mov
repnz
push
add
add
mov
outsb
inc
test
dec
cs
sbb
adc
daa
lcall
hlt
cld
adcb
xor
add
mov
push
rcrb
add
sub
mov
rorb
test
jne
dec
in
lret
icebp
popa
mov
mov
arpl
dec
xchg
mov
enter
out
test
add
cmp
jbe
aad
mull
outsb
dec
xor
pop
test
aam
pop
sub
loope
cmpsl
daa
jmp
jle
mov
sub
orl
pop
add
repnz
stos
cmpsb
enter
or
pop
test
ret
mov
inc
int
pop
out
cmpsl
pop
out
fcomps
dec
stos
and
jnp
add
ret
movsl
push
and
sbb
and
jmp
cmp
adc
pusha
movsl
pand
ss
pop
into
jg
pushl
dec
pop
cli
mov
stc
mov
adc
lods
xor
pop
out
test
jge
jo
in
dec
call
fbld
ja
mov
into
inc
jg
inc
cmp
stc
test
cmp
imul
push
insl
sbb
bound
cmp
mov
jb
shll
int
dec
lea
popf
mov
jl
dec
daa
stos
mov
mov
out
cmp
call
xchg
orb
sahf
xor
andl
sub
jp
pop
inc
das
jbe
negb
mov
test
out
push
push
ret
adc
test
jg
cltd
movl
jae
sbb
sub
xor
lea
call
out
loope
daa
lock
nop
cmpsl
stc
inc
or
add
or
daa
xchg
test
mov
arpl
jg
sub
and
pop
leave
daa
rorl
dec
inc
aaa
lret
xor
loopne
movsb
adc
xor
xchg
adc
mov
imul
sub
jg
cmpsb
loop
bound
out
pushf
pop
cmp
das
fwait
mov
js
jmp
jno
adc
jg
loop
lock
aam
movsb
and
cld
cmp
jge
and
sub
inc
cwtl
xchg
mov
fistps
mov
cmpsl
sbb
iret
add
shlb
testb
lret
lret
iret
insb
scas
mov
stos
cmp
out
jl
jae
jmp
mov
je
arpl
add
dec
pshufw
xchg
pop
jnp
daa
scas
ljmp
mov
out
pop
bound
enter
dec
lcall
leave
fcmove
sub
lahf
inc
cmp
pop
and
icebp
das
add
adc
pop
shrb
sub
out
mov
in
lea
mov
sbbl
add
mov
subb
cmpl
aas
imul
push
mov
mov
xor
mov
sbb
pop
jge
out
fidivs
xlat
std
out
push
ret
xchg
sbb
push
imul
leave
rcll
iret
shl
sbb
mov
test
cld
mov
dec
and
into
cmpsb
jb
pop
xor
lea
and
in
push
cs
shll
test
sub
data16
jnp
xlat
mov
inc
icebp
not
push
call
push
mov
aam
cmp
mov
sbb
sub
dec
sub
mov
test
jae
in
and
ss
jmp
inc
pop
jae
jno
add
adc
pop
notl
cli
mov
aad
lcall
adc
je
repz
push
loope
or
stos
iret
jne
adc
sub
xchg
test
inc
pushf
test
sarb
fimuls
xor
repnz
jne
mov
mov
aaa
fdiv
arpl
cwtl
cmp
sbb
adcb
jnp
xchg
mov
or
push
aaa
pop
dec
mov
ss
xchg
push
xchg
sub
dec
shlb
sbb
and
lcall
inc
subl
sub
add
shll
adc
pop
push
xor
lods
xchg
mov
cld
adc
les
and
popa
subb
mov
jnp
out
scas
and
jo
loope
jmp
and
xlat
jbe
into
mov
mov
cmp
testb
lret
push
cmp
push
push
inc
decl
sbbl
je
and
test
jne
adc
ret
jns
jb
loope
dec
repz
cmp
inc
push
shlb
mov
sbb
js
aad
stos
mov
arpl
fisttps
and
cmpsb
add
cmp
push
ja
pop
push
out
inc
push
rorl
fdivrs
push
dec
or
jno
or
jle
mov
les
cmpsl
loope
mov
std
lcall
mov
adc
js
scas
aam
jnp
or
cwtl
mov
xchg
mov
jp
hlt
mov
jne
xor
stc
pusha
mov
iret
xor
fs
add
cwtl
fwait
lea
push
push
je
imul
cmp
mov
xor
dec
into
ss
cmp
mov
shlb
push
mov
cltd
jns
jae
test
or
or
aas
pop
push
movsb
sub
das
mov
std
lret
sti
xor
inc
cltd
push
xchg
mov
xlat
mov
pop
xor
insb
push
lods
pop
out
add
in
push
pop
inc
insb
xchg
test
jge
pop
cmpsl
roll
loopne
pop
xchg
and
xchg
or
cmpsl
popa
js
jo
push
jo
push
dec
xorl
mov
pushf
mov
shll
add
push
and
addl
jne
rorb
inc
add
call
rcr
out
dec
sub
std
mov
push
mov
pop
mov
mov
loop
mov
and
mov
xlat
leave
jmp
cmpsl
push
mov
adc
cmp
xor
icebp
sub
gs
jne
arpl
add
into
repz
clc
loop
xchg
mov
push
fisttpll
aad
xchg
adc
push
and
std
lret
icebp
or
lahf
mov
fs
dec
pop
pop
and
sbbb
fbstp
cmp
hlt
xchg
adc
es
int
inc
hlt
subl
cmp
shl
and
sar
adc
movq
fistl
icebp
add
test
outsl
pop
and
xor
jmp
mov
loop
dec
dec
xchg
push
inc
xchg
adc
std
mov
xor
dec
into
ss
cmp
mov
shlb
push
mov
cltd
jns
jae
test
or
or
aas
pop
push
movsb
sub
das
mov
std
lret
sti
xor
inc
cltd
push
xchg
mov
xlat
mov
pop
xor
insb
push
lods
pop
out
add
in
push
pop
inc
insb
xchg
test
jge
pop
cmpsl
roll
loopne
pop
xchg
and
xchg
or
cmpsl
popa
js
jo
push
jo
push
dec
xorl
mov
pushf
mov
shll
add
push
and
addl
jne
rorb
inc
add
call
rcr
out
dec
sub
std
mov
push
mov
pop
mov
mov
loop
mov
and
mov
xlat
leave
jmp
cmpsl
push
mov
adc
cmp
xor
icebp
sub
gs
jne
arpl
add
into
repz
clc
loop
xchg
mov
push
fisttpll
aad
xchg
adc
push
and
std
lret
icebp
or
lahf
mov
fs
dec
pop
pop
and
sbbb
fbstp
cmp
hlt
xchg
adc
es
int
inc
hlt
subl
cmp
shl
and
sar
adc
movq
fistl
icebp
add
test
outsl
pop
and
xor
jmp
mov
pushf
add
pop
xchg
xor
bound
cli
stc
mov
jns
or
out
mov
inc
mov
mov
inc
jns
push
cmpsl
stc
stos
push
enter
aam
xchg
adc
sbb
cmpsb
insb
pusha
push
add
or
aam
pop
sub
mov
outsb
repnz
pushf
cmp
jno
roll
into
mov
cli
lret
ljmp
ret
out
add
cmp
add
das
push
fdivp
jbe,pt
add
hlt
cmp
hlt
cli
stos
js
mov
out
aam
pop
pop
testb
jle
insb
mov
sbb
sahf
inc
xor
cmp
push
lret
cmp
sbb
loope
lods
sub
into
push
add
jge
in
loope
dec
jae
pushf
push
sbb
dec
sbb
aaa
sub
data16
das
leave
inc
out
sahf
mov
loope
mov
addr16
aam
xchg
sub
cmp
push
lret
dec
jl
mov
test
inc
lds
pop
jo
mov
sub
or
sbb
push
pop
and
daa
fdivrl
push
adc
inc
add
stos
in
cwtl
inc
and
insl
mov
ret
mov
sub
insl
sarl
mov
push
repnz
std
jo
icebp
dec
icebp
test
cwtl
mov
call
aaa
mov
lahf
cmpsb
enter
mov
pop
cld
fwait
ds
and
sub
sar
xor
inc
adcl
or
xor
jge
sbb
bswap
repnz
imul
and
add
ret
pop
cmpsl
andl
addr16
adc
pushf
xor
add
xorb
jl
xchg
loope
sbb
cli
push
inc
xchg
adc
dec
cmpsl
mov
xor
mov
mov
add
adc
call
adc
push
lahf
sti
fadd
adc
sub
jecxz
pop
jo
repz
stc
outsb
jnp
aas
push
push
mov
xchg
cld
cmp
xchg
les
int
xchg
sti
pop
das
xchg
xor
adc
push
outsl
adcl
mov
lret
or
fidivrl
stos
and
push
out
lods
stc
in
scas
lea
addl
rcl
adc
mov
xchg
pop
xor
mov
xchg
rorl
int
adc
push
dec
movsl
jne
into
adc
push
and
push
push
fsin
lods
cs
cmp
push
or
adc
pusha
dec
mov
lods
mov
pop
test
cmp
lods
inc
xor
cwtl
add
xor
adc
incb
fdivs
loope
movups
bound
movsl
adc
icebp
xchg
fs
mov
pop
imul
lock
out
and
sub
int3
lods
and
xor
testb
fisttpll
rorb
nop
outsl
ljmp
fs
jae
and
adc
pop
mov
inc
nop
inc
push
popa
cmp
mov
mov
push
cmp
shll
cmp
xor
push
call
inc
call
sub
sbb
mov
jmp
mov
test
mov
ds
jl
push
ja
fisubl
test
xor
mov
shlb
stos
cmp
jmp
xor
iret
mov
test
dec
jl
loope
push
lods
inc
nop
mov
push
push
xchg
sub
js
and
add
repz
jo
js
sar
mov
hlt
imul
int3
enter
pop
jns
scas
in
int3
shlb
sbb
sbb
imul
jae
sahf
xor
test
mov
stc
mov
enter
xor
jns
int3
mov
lahf
and
inc
mov
inc
arpl
cmp
ret
fcoms
adc
add
adc
cwtl
xchg
inc
sti
add
ss
jae
movsb
mov
pop
mov
mov
sub
dec
add
lea
xor
call
adc
push
out
or
and
jnp
and
aad
js
lock
xor
cmpsl
or
cwtl
mov
fnsave
sbb
sbb
mov
rorl
pop
pop
test
jge
add
and
push
cmpsb
ja
inc
xchg
xchg
xchg
adcb
mov
imul
out
sbb
out
cmpsl
mov
outsb
push
mov
mov
in
in
xlat
jne
or
inc
mov
sub
cmp
stos
add
xchg
call
sbb
push
mov
fistpll
les
lea
lods
xor
filds
dec
fstps
mov
out
fistl
ror
dec
shlb
lcall
data16
inc
and
mov
pop
fwait
mov
push
ucomiss
int
in
pushf
mul
mov
cmp
int3
mov
stc
push
in
insl
fmul
repnz
std
lods
adc
sbb
loope
dec
movsb
jns
data16
pop
add
ror
lret
orl
fdivr
jmp
stos
cmp
cli
and
mov
mov
mov
xor
pop
sub
aas
pop
lods
clc
mov
outsb
add
adc
jmp
stos
jo
ljmp
xor
pop
rolb
mov
adcl
push
xchg
cmc
push
gs
das
sbb
cmc
mov
ljmp
dec
dec
lock
out
jb
sahf
add
fisttps
sbb
ret
jo
les
lods
in
outsl
lret
leave
mov
dec
xchg
dec
xor
cmp
mov
xchg
xchg
jne
inc
xor
int3
adcl
aad
fs
pop
jg
addr16
lret
das
cmpsb
mov
sub
imul
jle
jg
xchg
dec
jmp
xchg
popa
xchg
sbb
add
addb
loop
pop
jp
mov
in
cld
push
pop
std
mov
out
add
imul
movsl
xchg
jae
or
or
daa
dec
stos
int
pop
pop
xlat
icebp
sbb
std
dec
es
sbb
pop
cs
pop
add
push
dec
inc
stc
shrl
cmp
daa
jmp
dec
sbb
push
sub
push
scas
cmpb
dec
dec
xor
arpl
jbe
jecxz
inc
enter
sahf
dec
jno
popf
fildl
ljmp
and
adc
enter
lcall
cltd
mov
jmp
cmpsb
jae
sbbb
test
dec
adc
jecxz
iret
inc
pop
cmp
jb
mov
xchg
imulb
loopne
pop
jg
xor
and
lcall
test
clc
daa
lahf
sti
fistpll
xchg
rorl
cmp
aad
setge
inc
in
inc
lahf
divl
inc
sbb
adc
mov
dec
mov
mov
pop
mov
push
ja
and
adc
into
mov
or
cmp
sub
fcmovnu
push
mov
cmp
inc
int
fiaddl
dec
adc
adc
movsl
pop
or
sti
nop
mov
sub
or
sti
shl
adc
ficompl
pop
dec
pop
lds
lcall
int
cmp
pop
or
jo
cmpsl
jbe
and
mov
jl
cmp
mov
fwait
mov
bound
test
aam
mov
inc
push
xchg
icebp
imul
mov
push
dec
ljmp
rorl
sbb
push
jno
pop
add
je
dec
sti
lret
addb
scas
jae
add
xchg
inc
cmc
sbb
xor
xchg
fs
ds
xor
mov
sub
nop
or
addb
add
repnz
mov
out
mov
add
ljmp
movsb
jae
repnz
jae
mov
adc
or
xor
jnp
xor
jmp
fsubrs
dec
out
cmc
jl
movsl
imulb
pop
imul
aad
push
adc
in
cmp
mov
xor
rol
jp
sarb
jnp
rorb
pop
mov
cmp
int
cmpsl
sbb
icebp
adc
cmc
int
lds
and
mov
sub
sub
cmpsb
push
insl
mov
jp
dec
push
xchg
cmp
sti
push
pop
sti
push
movsb
push
mov
inc
pop
jae
xchg
dec
jo
push
jmp
testl
fisubl
addr16
vpshufhw
sub
push
cmc
gs
mov
push
jne
sub
stos
xchg
mov
push
out
shlb
and
xchg
pop
lock
adc
push
ljmp
mov
push
clc
cmp
add
add
push
pop
ret
xchg
pusha
mov
mov
out
loope
ret
mov
stos
adc
cmovb
loop
mov
adc
mov
frstor
aad
and
adc
mov
out
jne
ds
insb
and
xlat
repz
dec
loopne
sbb
push
cli
lcall
xchg
xor
popf
fsubr
rol
or
test
movsl
lods
jp
sbb
in
mov
fdivr
and
adc
mov
sarl
inc
lds
test
test
insb
cmc
adc
mov
or
inc
mov
cmpsb
mov
aam
push
mov
sbb
xor
inc
scas
in
pop
jb
mov
icebp
cmc
out
inc
imul
sbb
fildl
movsl
es
sbb
aam
outsb
inc
fisubrl
lcall
iret
int
or
sub
adc
and
or
xlat
jb
push
rcrb
iret
dec
push
sub
and
stc
das
lock
loopne
out
lcall
std
push
fwait
les
jno
leave
sub
sbb
cld
out
push
xchg
cmp
sub
testl
cltd
jle
addr16
or
lret
rcll
out
push
mov
data16
aad
dec
fimuls
and
repz
sahf
insb
mov
sbb
shrl
mov
shrl
movsl
mov
xor
int3
mov
cmp
cmpl
add
pop
or
inc
repz
fwait
xchg
mov
lret
in
insb
adc
gs
in
or
xor
sub
clc
mov
jno
cmpsb
lahf
push
mov
lea
adc
enter
xchg
jecxz
jb
sar
in
or
movsb
push
sub
xchg
cli
inc
movsl
sbb
cmc
mov
cmpsb
pop
fs
pop
out
insl
lock
push
mov
xor
xorl
cmp
fxch
xchg
hlt
lret
cwtl
cwtl
sub
and
xchg
sub
call
push
xchg
push
xchg
pop
cld
push
jp
das
mov
adc
testb
movups
xchg
data16
ret
ret
ss
jo
orb
insl
scas
fisubrs
dec
xor
inc
aam
int
sub
inc
test
rorl
arpl
and
xchg
jecxz
lahf
call
scas
rorb
popa
int3
sbb
and
or
push
jge
adc
daa
xchg
aad
push
pop
inc
iret
inc
insb
mov
loopne
aam
mov
imul
fwait
xor
pop
cmc
fisttpl
cltd
or
nop
sbb
fs
stc
mov
inc
lock
mov
stos
sbb
test
mov
mov
lret
mov
scas
adc
fbstp
add
test
jb
lret
inc
pusha
sub
add
add
in
and
or
mov
lods
int3
dec
add
xor
std
sub
std
sbb
adc
idiv
pushf
sbb
xchg
add
inc
scas
push
mov
xchg
test
sub
push
inc
mov
jo
mov
dec
mov
and
inc
pop
pop
movb
jns
or
mov
dec
cmp
sbb
or
mov
outsl
add
inc
xor
inc
mov
adc
pop
mov
fbstp
cmp
jge
push
ret
mov
dec
jecxz
out
nop
gs
clc
cmp
add
xchg
xchg
inc
ljmp
jae
mov
sub
jmp
dec
fwait
lret
insl
cmp
lods
adc
icebp
lahf
fldcw
loope
popa
jns
sbb
pop
pop
sub
add
cld
js
xor
push
inc
xor
sahf
lahf
dec
sub
push
call
test
ljmp
mov
dec
dec
mov
xchg
dec
fnstsw
dec
in
popf
test
adc
sahf
test
inc
push
test
ret
fisubrs
ljmp
xchg
jo
push
pop
pop
add
sbbl
int
dec
lahf
push
xchg
test
push
inc
stos
je
in
das
lcall
push
outsl
xchg
sahf
jne
ret
mov
rorb
mov
out
movsl
test
popf
out
daa
popl
xchg
test
add
xchg
xorb
das
pop
stos
lock
and
in
adc
pop
fnstsw
fwait
mov
pop
mov
pop
jp
rcrb
loop
jne
sbb
into
fldl
push
mov
and
fsts
test
xor
mov
in
inc
mov
insb
mov
scas
cltd
icebp
lret
sbb
int3
lea
cwtl
mov
cmp
jo
pop
loope
inc
or
lcall
xchg
in
ret
cmp
push
cmp
mov
mov
cmpsl
push
dec
lret
cwtl
pop
test
mov
imul
sub
rcrl
arpl
cmpl
adcl
dec
push
push
cltd
aam
jbe
push
xor
les
sbb
add
add
or
pop
pop
pushf
push
pop
loope
bound
cmp
sbb
dec
call
pop
jle
push
and
pop
or
iret
cs
sbbl
sub
push
pop
mov
xor
lahf
inc
in
pop
xchg
pop
inc
out
cmp
les
ret
dec
es
lds
jecxz
js
sbb
rcrb
testb
inc
stc
sub
adc
and
push
aad
push
jb
or
push
push
dec
test
fs
clc
iret
push
loop
sti
jl
xor
sub
enter
push
dec
cmp
cmp
mov
jg
jge
mov
push
add
dec
cmp
adc
dec
xlat
push
pop
int3
leave
cwtl
xchg
jmp
jns
xor
cmpsl
sbb
add
mov
adc
ds
aas
in
jae
lcall
push
insb
testl
sub
adc
sub
aam
hlt
cmpsb
xchg
mov
outsb
mov
xchg
pop
push
imul
movsb
mov
inc
std
stc
xlat
mov
mov
inc
pop
sub
outsb
int3
cmpsb
dec
rcrb
daa
scas
push
icebp
sti
cs
xchg
test
push
fsincos
inc
popa
sub
jb
lods
xchg
sbb
data16
push
jae
icebp
mov
out
sub
lods
mov
rcrb
push
xchg
loopne
push
mov
sahf
xchg
adc
shrb
xor
outsb
in
hlt
dec
call
sub
sbb
ss
xor
and
jbe
jae
adc
add
sub
mov
adc
movsb
xlat
dec
inc
pop
and
mov
shrl
insb
in
rorb
push
push
mov
pop
jb
mov
arpl
dec
mov
cwtl
jae
cs
in
aad
pop
or
and
ja
or
mov
lods
xchg
dec
cli
sub
xor
jl
cmp
pop
fdivs
ficoms
ss
sbbb
pop
lds
inc
lods
fwait
adc
lds
mov
cmp
fsubl
sbb
jno
enter
inc
mov
je
call
jmp
lods
ss
pusha
push
mov
jle
dec
loope
jnp
ret
rcrl
cli
adc
jnp
or
mov
adc
mov
sbb
clc
dec
mov
mov
orb
sub
cmpsb
cmp
fnstsw
aaa
dec
ljmp
mov
dec
aaa
punpckhwd
lods
cmc
lahf
dec
add
out
or
outsb
ss
sub
insb
bound
dec
daa
or
fxtract
imul
xor
js
test
push
pop
iret
lret
imul
arpl
xor
test
outsl
xchg
mov
adc
lret
sahf
movsb
adc
mov
mov
xchg
jmp
or
push
adc
outsb
rep
sub
xor
rorl
dec
adc
dec
pop
insb
test
sub
push
gs
outsl
imul
mov
cmpsl
ret
fsubr
inc
adc
inc
push
cmc
clc
mov
cltd
xchg
in
or
popf
pop
arpl
test
stc
push
mov
sbb
inc
aam
mov
lcall
and
jae
push
popf
xchg
mulb
mov
hlt
or
mov
lahf
pop
repnz
sub
xor
push
jo
inc
out
sahf
dec
cmp
mov
pop
sub
or
cltd
imul
pop
lea
scas
push
or
dec
fsubl
lret
popf
in
pop
bound
add
scas
mov
jmp
push
xor
cmp
popa
loope
imul
loope
mov
cmp
fdivrl
outsl
mov
adcl
adc
test
out
adc
sub
lods
add
ret
mov
outsb
fnstenv
lea
mov
mov
mov
hlt
mov
or
shlb
jnp
xor
adc
lods
sahf
jns
lods
outsb
xor
cmc
adc
sbb
fmul
pop
lret
fisubrs
sub
add
nop
inc
lret
mov
inc
popf
jne
xor
orb
mov
push
mov
ljmp
aaa
xor
mov
in
movl
clc
adc
sbb
jle
ds
je
mov
or
clc
fs
cmp
push
xchg
decl
ret
popf
rorl
pop
pop
mov
adc
divb
outsl
cmp
dec
sbb
test
mov
push
inc
push
cltd
lods
fdivrp
out
push
cmp
lahf
aas
enter
rclb
dec
jecxz
into
popf
pop
mov
xor
cld
pop
sbb
mov
dec
lcall
push
loope
jge
lret
xchg
mov
mov
mov
push
sbb
mov
repz
jno
ds
notl
inc
mov
xor
push
sbb
or
mov
mov
sbb
sub
push
adc
or
fdivs
mov
jecxz
xor
in
sub
stos
pop
cld
arpl
push
aad
push
mov
mov
xchg
scas
sahf
in
fstpl
mov
add
push
mov
mov
sbb
call
nop
mov
ret
push
sbb
dec
add
icebp
add
dec
scas
int3
jl
fidivrs
pop
inc
jne
xorl
mov
loopne
cmp
rcrb
jbe
mov
jbe
xchg
in
out
sbbb
jp
add
addr16
loop
ljmp
adc
icebp
or
cmp
or
ss
push
test
mov
adcb
jae
push
loopne
mov
dec
bound
out
insb
xor
add
rcrb
mov
arpl
scas
lcall
pop
jle
outsl
lods
mov
push
les
aaa
pop
mov
insb
mov
cli
shrb
dec
xchg
dec
xchg
mov
enter
mov
ret
jbe
jecxz
or
je
and
test
sub
push
mov
inc
mov
sbb
das
orb
pop
lods
faddl
mov
xchg
inc
jmp
push
add
arpl
or
jle
inc
clc
mov
push
fldenv
jl
mov
or
push
bound
fcompl
mov
stos
in
jne
lahf
mov
mov
sub
pushl
sub
mov
xadd
in
mov
push
sbb
js
jbe
stos
inc
mov
inc
push
call
push
lret
push
jnp
imul
or
jg
mov
testl
jno
jbe
mov
push
inc
rcll
mov
repnz
or
into
les
cmp
or
and
sub
lds
addl
loop
addr16
popa
test
into
in
inc
add
out
push
fsubrs
pop
and
rcr
icebp
fistpll
imul
aam
rclb
in
mov
lcall
mov
inc
jns
pushf
add
rcr
push
cmp
lods
sahf
jne
jns
dec
push
adc
lcall
icebp
shll
cmp
mov
enter
dec
cmp
mov
movsb
in
test
mov
sbb
mov
xchg
aaa
and
xchg
dec
loopne
into
xor
xor
outsl
cmpsb
fs
jbe
hlt
pop
test
mov
mov
xor
and
sbb
adc
sti
push
pop
adc
stc
or
and
fidivl
inc
leave
jmp
nop
addr16
jo
in
inc
imul
popf
or
jg
testl
jmp
aad
rcr
cli
mov
and
xchg
mov
mov
add
adc
add
dec
rcrb
je
mov
jno
enter
or
popa
iret
xor
xchg
ror
mov
in
cmpl
mov
mov
insl
jge
cwtl
ror
loope
pop
or
rcl
adc
jb
stc
add
loope
cmp
push
es
in
lcall
sub
je
es
pop
outsb
ljmp
stos
popa
stos
sub
mov
cmpsb
arpl
jbe
fmuls
movsl
inc
mov
cld
mov
jno
stos
dec
or
cmpsb
pop
mov
dec
sbb
addr16
aad
aam
test
sti
stos
xor
dec
xor
test
mov
pop
push
lds
js
push
or
decb
jnp
pop
cwtl
jnp
mov
cwtl
iret
cwtl
sbb
ret
jp
rolb
aam
push
mov
jns
push
mov
mov
rol
loopne
xor
xchg
sbb
sbb
data16
out
dec
or
sub
cltd
hlt
pushf
add
cmp
dec
sub
pop
inc
pop
cmpsb
and
sbb
mov
sbb
xchg
stos
fsubp
dec
inc
jmp
imul
ss
mov
inc
aas
sub
sbb
cmp
mov
aad
or
inc
or
sti
xchg
ljmp
in
mov
fisttps
add
fdivr
sahf
out
popa
sub
cld
mov
mov
scas
inc
out
fs
xor
sahf
xchg
adc
sbb
subl
dec
mov
adc
lods
mov
es
sub
pop
jne
pop
test
fiaddl
fistpll
push
icebp
pop
and
mov
ret
and
fsin
mov
fists
inc
adc
mov
jp
popa
clc
jae
mov
call
dec
ds
xor
pop
xor
cmpsl
popf
in
pop
dec
xchg
cmpsb
sar
lret
lret
pop
mov
mov
xor
push
mov
dec
push
mov
cmp
push
ds
cmp
mov
js
xor
insb
aaa
nop
sarb
sbbl
out
imul
loopne
adc
fists
jg
scas
inc
push
and
inc
mov
hlt
ljmp
fs
repnz
pop
xor
jb
lret
pop
sahf
ds
xor
mov
popf
sbb
jno
xchg
jnp
sbb
xchg
cmp
adc
gs
insl
mov
mov
out
mov
negl
pop
mov
mov
icebp
xchg
xchg
and
andl
repz
insl
jb
adc
add
nop
add
daa
add
stos
mov
sahf
aas
enter
sahf
fsubp
dec
cmovs
stos
jp
rcll
ja
jne
test
daa
and
ljmp
cmp
xorb
jo
stos
cmp
push
push
filds
daa
out
testl
xchg
daa
mov
loop
adcb
sub
xor
push
lods
int
aad
pop
dec
dec
jns
in
cli
cmp
or
sbb
test
xchg
mov
decb
enter
dec
ja
leave
shrl
or
mov
dec
push
fcoms
push
fisttpll
es
mov
jbe
lcall
movsb
repz
dec
stc
mov
pop
xchg
mov
cmp
sub
push
sub
mov
xor
dec
test
and
arpl
fldt
fcom
scas
loope
cmp
fcmovnbe
out
es
jbe
int
ss
aaa
push
jnp
loop
add
add
in
ja
inc
mov
nop
daa
out
jecxz
jmp
flds
or
rolb
clc
mov
jge
pop
mov
lret
mov
subb
sar
sbb
sbb
imul
pinsrw
aas
mov
mov
scas
sub
dec
mov
sti
jmp
mov
xchg
or
or
add
clc
push
and
dec
bsr
loop
fdivrl
insl
out
jbe
je
xchg
ret
andl
pop
repnz
mov
lds
xor
in
lea
xchg
movsl
mov
lods
mov
faddl
push
mov
jp
xchg
cli
lods
into
fsubr
cmp
outsb
mov
ss
adc
inc
into
mov
xor
ss
orb
imul
mov
sti
dec
xor
sub
pusha
pop
std
out
shll
fcoms
in
adc
xchg
xchg
repz
push
ljmp
dec
std
push
out
and
test
push
call
in
out
bound
mov
push
clc
pop
imul
jnp
mov
xor
jno
add
xor
cmp
repnz
mov
fildl
or
cmpsb
dec
movsb
int
xor
lods
stos
xchg
leave
pusha
je
xor
fstpt
pop
xor
adc
xchg
insl
adc
ret
fucom
push
mov
inc
js
cmpsb
dec
mov
test
mov
xchg
adc
lock
lret
xor
pop
andl
movsb
cli
cmp
lds
shll
and
mov
or
mov
lods
rdrand
jl
push
fnsave
mov
ret
jle
popa
movsb
ret
cmp
ss
rclb
pop
or
stos
adc
fists
fnstsw
xor
adc
jne
aaa
arpl
mov
add
in
fildll
cld
or
push
adc
jne
aad
scas
and
dec
adc
xchg
fdecstp
cmovbe
cltd
mov
stos
daa
mov
jbe
jns
jno
andb
popf
cmp
adc
ss
xchg
mov
int
xor
pop
das
add
dec
cmp
xor
and
mov
add
xchg
pop
jp
cmp
xor
jae
gs
int
jo
adc
je
in
adcl
mov
ret
mov
aad
dec
sbb
cwtl
push
push
mov
pusha
inc
xchg
adc
shrl
pop
xor
into
mov
fldcw
sub
loop
mov
mov
cmpsl
fcomi
repz
or
lods
inc
jecxz
mov
cld
push
icebp
aaa
adc
insl
shlb
push
test
fwait
mov
pushf
shrb
pop
or
stos
jbe
shll
mov
jle
dec
inc
sbb
or
adc
repz
test
xor
or
mov
pushf
push
push
lret
jae
jle
ret
negl
test
mov
pop
inc
int3
sbb
enter
fnsave
adc
shlb
fidivs
cld
push
ljmp
aam
jmp
insl
push
mov
dec
insb
adc
sbb
out
inc
jmp
mov
and
arpl
mov
out
aam
addl
pop
pusha
fs
adc
pop
and
aas
in
rcrb
outsl
aas
xor
mov
pop
or
or
add
and
or
fnstenv
push
les
call
xor
call
shlb
hlt
addr16
push
xchg
jb
addr16
js
dec
test
push
shrb
mov
clc
idiv
mov
loope
out
scas
xchg
addr16
xlat
fisttps
xchg
xor
jg
out
xor
jle,pt
stos
xchg
les
pop
push
ret
js
push
lcall
and
repz
jg
fisubrs
out
insl
stc
pop
in
fiadds
int
add
shrl
xor
nop
ss
xchg
xchg
stc
les
pop
pop
or
lcall
xchg
push
insl
jnp
jle
aas
mov
fldl
xor
sbb
repnz
les
cmc
stos
mov
repz
or
rolb
dec
stos
movsl
les
lds
jae
pop
mov
imul
nop
cmp
jmp
loop
add
aad
pop
push
orb
and
dec
mov
jp
mov
xchg
inc
mov
add
xchg
mov
sub
lahf
sub
mulb
stc
popa
push
xor
cli
push
ja
adc
clc
xor
out
push
xor
loop
sbb
std
fdivs
int3
hlt
fdivr
daa
insl
mov
je
xlat
incl
cmp
cmp
pushf
mov
xor
lahf
lods
jge
mov
and
in
xchg
pop
cld
adc
xor
in
loopne
sbb
xor
imul
mov
adc
mov
cld
xchg
lods
arpl
add
sbb
lods
sub
inc
push
xor
inc
or
push
insb
jo
push
mov
repz
incb
movsb
leave
das
cmp
xor
cld
push
pop
mov
scas
pop
pop
sbb
adc
fistl
xchg
xchg
mov
fcompl
mov
push
and
add
insl
ds
fcoms
loope
or
mul
push
or
enter
cmp
jmp
sub
hlt
sub
push
mov
ds
popa
roll
mov
push
lea
inc
shrl
mov
inc
mov
clc
sbb
xor
into
imul
pop
jae
inc
xchg
rorb
inc
adc
push
bound
cmp
fwait
cmp
sub
out
mov
popf
mov
mov
mov
sbbb
cmp
and
fists
mov
in
das
test
popa
mov
mov
sbb
xchg
mov
pop
adc
out
into
call
inc
in
repnz
adc
loopne
push
sub
jne
or
enter
fmuls
subb
fimuls
imul
sbb
mov
aaa
pop
addr16
lea
in
test
leave
push
into
jge
and
test
and
sarl
aaa
sub
pop
push
inc
dec
movb
pop
inc
mov
adc
push
jb
jb
jns
nop
fsts
clc
jne
mov
pusha
gs
js
jp
in
jnp
fwait
clc
loope
lea
in
mov
jbe
cmpsl
push
sbb
fwait
sbb
mov
pop
xchg
adc
xor
scas
jge
dec
call
cmp
mov
lock
dec
ret
dec
jp
ss
mov
scas
mov
enter
inc
mov
dec
xchg
movsb
xchg
xor
sub
movsbl
in
loopne
cmp
jo
inc
out
cmp
push
pop
dec
mov
dec
mov
mov
sub
outsb
pxor
imul
sub
hlt
jnp
and
mov
cmp
imul
jno
js
mov
sbb
dec
mov
in
call
jle
adc
mov
clc
mov
push
std
sbb
inc
sarl
or
jns
mov
push
arpl
add
dec
cmp
rorl
inc
dec
xchg
lock
xor
sbb
in
stos
shll
sbb
pop
cmc
pop
mov
ss
jno
jl
insl
sub
fs
in
mov
test
loopne
mov
or
pop
imul
cmpsb
mov
nop
neg
loop
sbb
inc
sbb
pop
jmp
and
out
loopne
ficoml
insb
fimull
imul
xchg
fwait
jae
fsubs
cmp
movsl
std
fwait
cmp
into
xor
test
push
xchg
mov
mov
push
fdiv
mov
push
aaa
and
push
xor
je
xchg
pop
pop
shlb
mov
outsl
add
dec
call
iret
dec
into
cltd
test
stos
push
loopne
sbb
mul
adc
adc
sbb
adc
fidivl
lods
mov
jle
arpl
xchg
mov
xor
jb
push
std
fs
jg
scas
pop
pop
orb
jno
cmp
xor
and
push
sti
hlt
aas
sub
and
push
das
push
daa
test
mov
mov
sbbl
mov
adcl
iret
ret
fidivl
inc
inc
imul
out
addr16
mov
jecxz
xor
jecxz
ja
pushf
inc
jecxz
je
sub
je
mov
add
fs
outsb
mull
es
in
or
sub
pusha
xchg
subl
je
push
inc
shr
adc
push
jl
push
mov
jg
dec
pop
cmp
inc
pop
xor
shlb
dec
gs
adc
hlt
pusha
inc
push
sbb
rcrb
sbb
out
sbb
mov
testb
fs
fistl
xor
in
lds
pop
leave
mov
adc
ret
idivb
push
dec
shrl
scas
mov
cmp
jle
fs
push
cmp
xchg
pop
xor
adc
mov
push
push
imul
pop
icebp
je
fisttpl
xchg
add
hlt
pop
dec
mov
fwait
sbb
xor
arpl
mov
sti
and
jl
or
rolb
dec
lock
mov
clc
mov
sbb
push
add
push
mov
icebp
popf
fcompl
inc
add
and
adc
into
cs
daa
mov
fidivl
sub
fcmovu
fcmovnb
test
fdivp
jl
push
jbe
dec
insl
loopne
cli
scas
jne
mov
mov
add
cld
loop
xchg
sahf
aas
rolb
or
adc
orl
cs
testl
pop
popa
test
mov
scas
mov
andb
pop
orl
std
testb
xchg
cmpsl
ja
xchg
js
dec
cmp
divl
sbb
cmp
das
cmp
xchg
xlat
pop
cld
jle
mov
pop
dec
lds
popa
adc
xchg
pop
ja
notb
bound
push
fsubrp
sbb
push
xchg
and
inc
lcall
jmp
enter
hlt
add
gs
out
dec
xor
fs
xchg
int
cwtl
pop
adc
cs
xchg
pop
mov
fwait
inc
or
cmpsb
dec
add
add
in
xor
sbb
jge
xchg
js
pop
mov
jno
hlt
adc
xor
iret
mov
cld
inc
mov
xchg
jge
xor
inc
imul
xchg
jns
inc
popa
or
dec
push
test
xchg
push
enter
mov
mov
scas
xchg
stos
pop
insl
movsl
cld
jmp
mov
movsl
adc
sub
shl
jae
jbe
daa
xor
jno
xor
push
push
sub
test
push
or
cmp
push
sub
pushf
jle
dec
std
push
jnp
int
jns
es
push
sub
mov
xchg
ljmp
push
clc
mov
pop
cmp
test
mov
incb
outsl
mov
lods
gs
jp
fldl
clc
andb
mov
mov
xchg
inc
iret
shrl
icebp
std
dec
mov
xchg
mov
mov
cwtl
popa
scas
xchg
push
loopne
insb
sbb
ret
push
sbb
loop
loop
scas
push
pop
mov
add
shr
scas
mov
das
xchg
sub
mov
mov
xchg
xor
cmp
or
pushf
loopne
scas
pop
sub
sbb
outsl
rcll
test
push
sub
add
aas
jne
addr16
stc
fs
sub
xchg
inc
push
push
mov
in
sahf
in
gs
repnz
pop
jecxz
loope
data16
arpl
xchg
or
sub
jecxz
adc
mov
cmpsl
enter
xchg
push
sbb
int3
shrl
pop
aam
pop
test
jb
sub
flds
sub
xchg
iret
ds
movsb
mov
iret
fwait
adc
adc
mov
jecxz
or
mov
or
jmp
pop
jbe
mov
pop
pushf
mov
adc
or
test
addb
sub
push
lahf
pop
fs
adc
mov
ja
inc
inc
push
add
sub
xchg
xor
adc
xchg
dec
les
lds
cmp
sub
mov
jge
push
mov
cli
bnd
sub
fimuls
push
push
shl
xor
mov
ljmp
sub
cmp
out
fdivrl
aad
mov
sub
xor
push
mov
movsb
inc
ror
mov
orl
mov
addl
dec
sbb
add
leavew
mov
dec
bound
mov
cwtl
xchg
jecxz
and
jae
push
cmc
scas
push
sbb
addr16
add
repnz
int
push
daa
xchg
jo
pushf
call
jns
popa
popa
or
lahf
xchg
pop
cmp
cwtl
cmp
test
push
push
into
jge
shlb
loopne
icebp
sbb
sub
cli
mov
jns
fidivrl
mov
bnd
cmp
xchg
addl
sub
data16
test
and
and
pop
fsubs
mov
cmp
mov
movl
pop
mov
or
or
and
sub
mov
js
mov
hlt
jl
pop
test
pop
call
mov
push
cli
aas
push
mov
push
inc
nop
stos
inc
sarb
xchg
xor
cmpsl
add
sarb
push
lock
shl
imul
mov
jge
pop
gs
adc
add
aam
jmp
inc
xorb
std
mov
pop
sbb
sti
jmp
push
jl
xchg
cmp
loopne
mov
out
inc
ja
fs
jg
sub
or
jl
push
lret
xor
push
jo
shrb
in
mov
fdivp
add
inc
push
or
mov
in
xchg
push
add
xchg
leave
cmpsl
jp
pop
scas
dec
ss
jl
shrd
pop
mov
adc
adcl
subb
outsl
xchg
std
push
jl
fs
mov
push
pop
pop
loope
idiv
mov
or
mov
sbb
dec
jp
loope
shll
repnz
jno
lret
jge
and
lock
out
jp
rolb
dec
lods
xchg
xchg
xor
out
ss
test
adc
inc
in
pop
in
and
popa
pop
rorb
test
testl
cmp
mov
dec
add
inc
add
lds
adc
xor
rclb
lea
popa
mov
stc
add
xchg
xorb
enter
mov
jnp
dec
add
push
mov
cli
loope
push
and
push
mov
je
jg
xchg
mov
sti
pop
and
add
xlat
test
jns
xchg
or
out
hlt
mov
jle
iret
test
loop
int
outsb
sub
nop
mov
pop
dec
mov
lahf
pop
mov
cmp
xchg
outsl
pop
sub
clc
and
aam
xchg
mov
ss
or
int
mov
add
repnz
in
mov
xor
ror
bound
adc
xlat
jecxz
test
fs
pop
test
lds
rcr
cs
ret
sub
mov
pop
mov
pop
jmp
loopne
xchg
ss
mov
cmpsl
or
add
aad
fidivrl
lods
xor
pusha
add
add
add
cmp
sub
in
push
icebp
dec
mov
test
push
and
lret
mov
mov
popf
jno
lods
pop
mov
sbb
lcall
pop
aad
pop
mov
cli
push
icebp
cmpsb
das
push
test
pop
jge
fnsave
jmp
rcll
roll
shrl
mov
pop
cmc
fst
pop
adc
insb
dec
stc
mov
sti
sub
nop
cs
rorl
lods
mov
sbb
sub
push
pop
dec
adc
int
push
test
adc
pop
aas
adc
aas
add
or
loopne
imul
pop
dec
adc
leave
pop
das
loop
pop
cmpsl
jl
and
and
mov
out
pop
fstpt
mov
stos
scas
jo
outsb
imul
adc
rcr
testb
mov
xor
mov
fidivrs
cltd
test
mov
xor
sub
test
repnz
loop
push
in
int
into
adc
insl
cmp
inc
test
rcll
out
jle
mov
mov
mov
push
lock
ret
jp
gs
lret
mov
mov
push
ja
es
jecxz
clc
xor
sub
aad
ret
sbb
jmp
xchg
stos
pop
shl
ret
xchg
sbb
mov
xor
out
stc
jecxz
cmp
scas
bound
popf
insb
dec
mov
into
xchg
push
into
shrb
push
push
push
loope
cmc
cmp
lea
lock
inc
and
or
xchg
push
lea
imul
mov
or
in
lods
repnz
or
dec
pop
jge
push
sbb
xor
inc
dec
sti
mov
cmc
repz
cmc
jmp
sub
lcall
in
gs
jbe
mov
je
xchg
xorl
sub
scas
and
fnstenv
push
popa
stos
call
dec
or
lods
push
in
push
xchg
enter
dec
jae
int3
push
insl
add
popf
scas
mov
push
inc
cli
dec
inc
ret
jbe
sti
in
sbbb
add
addl
jg
sub
cmp
mov
add
adc
lds
sbb
xchg
clc
sbb
imulb
sahf
or
or
jo
jl
loopne
mov
or
push
inc
ret
sbb
imul
dec
and
pusha
inc
pushf
aam
xor
mov
lds
xor
xor
je
push
js
popa
nop
and
and
pop
test
dec
dec
and
xor
popf
lcall
in
mov
push
outsl
pusha
loopne
mov
int
cli
add
jl
jge
mov
jl
fwait
inc
or
mov
fistpll
call
mov
cltd
repz
xchg
rorl
jo
dec
xor
cli
enter
pop
decb
xchg
sub
daa
and
clc
sub
jl
mov
mov
cmpsb
adc
add
and
sti
add
pop
sbb
dec
test
into
ss
in
jo
ja
pop
push
xor
sbb
sarl
cli
sub
ret
or
mov
les
push
and
sub
mov
mov
and
sti
push
test
mov
mov
fst
shrb
mov
fldl
add
lahf
into
adc
data16
addr16
mov
inc
pusha
lahf
or
in
test
std
or
xchg
dec
and
ret
adc
cmp
sti
xor
jno
ficompl
mov
push
adc
in
incl
adc
xor
icebp
xchg
cmp
inc
mov
idivb
movsb
lret
pop
test
popa
shrl
lret
jnp
lods
inc
push
jle
inc
cwtl
ret
or
jmp
lahf
idiv
jb
jb
add
test
sub
mov
pop
inc
aas
aaa
sbbl
mov
int3
fwait
lock
jg
mov
mov
mov
test
lret
mov
jbe
sbb
pop
ds
mov
out
cmp
test
test
pushf
jb
mov
pop
inc
ficoml
cmpsb
xchg
filds
and
pop
pop
stc
sub
mov
xchg
pop
js
and
sti
jecxz
mov
scas
jl
ja
imul
pop
dec
cmc
adc
jge
fwait
cmpsl
push
test
std
cmpsb
mov
mov
in
sahf
push
test
dec
mov
mov
in
xchg
andl
or
loopne
stc
imul
shll
ss
cli
sbb
leave
jb
jne
movsb
lods
nop
pop
xor
mov
dec
ljmp
dec
dec
fdivs
inc
mov
jnp
cmpb
or
jp
test
pop
push
pop
les
push
out
cli
push
add
mov
daa
push
inc
xchg
push
ja
test
add
ret
mov
mov
push
mov
sub
loope
dec
scas
pop
ds
inc
pop
in
fmull
ja
loope
mov
daa
xor
mov
and
ljmp
xchg
int
out
add
pop
stc
push
mov
insl
je
or
push
xchg
push
xor
sbb
sub
sub
fimuls
xchg
clc
lods
mov
pop
scas
mov
pop
pusha
adc
inc
fidivs
mov
lret
movsl
jl
pop
in
sbb
test
xchg
jecxz
pop
ja
sysret
subb
sub
imul
pop
or
mov
jle
cmp
adc
in
scas
pusha
rcll
dec
roll
aas
inc
lret
bound
mov
lods
popa
mov
loope
push
lcall
jae
jp
int
pop
sbb
sahf
mov
cmpsl
out
sahf
jg
fldl
add
lret
repz
adc
aad
loope
sbb
pop
and
shll
into
pushf
aas
and
cmp
xor
adc
mov
scas
test
xor
mov
adc
xor
push
in
mov
int3
sahf
mov
or
dec
mov
sub
push
mov
pop
popf
dec
mov
and
add
fwait
sbb
test
pushl
mov
in
add
aaa
mov
icebp
sub
add
out
xor
cli
mov
aas
sub
sbb
dec
popa
mov
test
push
ret
mov
es
or
popl
sbb
dec
xchg
adc
int3
dec
leave
adcl
gs
sbb
xchg
adc
lahf
sub
movsl
fidivl
mov
out
push
pusha
stos
ret
inc
xchg
xchg
movsb
inc
xor
fldenv
inc
rcrb
dec
insb
mov
in
xorl
pop
push
mov
mov
xor
mov
inc
xchg
shl
ret
int3
or
bound
rcrl
fmuls
aas
mov
add
aas
imul
mov
pop
cmp
into
repz
inc
mov
ret
addl
lock
dec
stc
mov
jb
inc
movsb
cmp
xorl
and
pop
push
or
xlat
addl
dec
lods
out
jmp
adc
adc
cmpsl
test
pop
js
test
shll
xchg
sahf
popf
stos
scas
dec
xchg
ret
addr16
popf
adc
ds
mov
rclb
cld
and
add
sbb
sahf
aas
sbb
push
jge
mov
fwait
add
push
test
call
or
cmc
or
gs
inc
sub
sbb
loope
mov
fdivrl
jmp
sub
jmp
in
mov
lret
dec
push
inc
xor
xor
add
aad
rcl
lret
leave
pop
mov
lahf
ss
push
insl
mov
movl
add
xor
push
lea
xchg
stos
addb
fldl
dec
test
pop
push
mov
ljmp
mov
adc
jl
mov
ss
mov
cmp
push
add
and
jp
cmp
sbb
lods
push
loop
fidivl
jecxz
cmp
scas
fldcw
sub
lret
or
jnp
inc
outsb
push
pop
aam
dec
xor
icebp
mov
jmp
inc
sti
std
test
mov
inc
scas
xchg
xchg
enter
jg
mov
lods
xor
repnz
fwait
leave
xchg
add
jne
icebp
jnp
cmpb
loop
and
iret
cmp
data16
out
xchg
js
adc
aad
lret
mov
sub
jecxz
xchg
loop
outsl
lahf
sub
sub
cld
clc
push
outsb
loop
mov
subb
pop
dec
push
mov
imul
xchg
dec
int3
loopne
outsl
mov
cmp
add
mov
dec
fildll
mov
lods
jecxz
fs
xor
xchg
lods
and
push
dec
icebp
ret
lea
push
add
repz
inc
test
outsl
xor
inc
push
pop
xor
repz
cmpl
int3
shlb
adc
push
test
pusha
or
xlat
cmp
mov
test
cs
sub
lahf
in
loopne
inc
orl
jmp
and
testb
in
orb
mov
push
mov
mov
or
push
jp
pop
repnz
data16
pop
mov
fsubrl
dec
lret
cmp
and
or
jmp
pop
bound
jno
cmp
jnp
xchg
enter
rcl
mov
mov
adc
xchg
cmp
mov
mov
jbe
lahf
add
mov
cmpl
pushf
adc
cld
mov
ja
push
test
out
add
das
out
or
xchg
out
repz
out
mov
cmp
mov
xchg
sub
int
ficompl
ret
sbb
ljmp
xor
les
pcmpgtd
and
mov
insb
sbb
insl
push
mov
aam
mov
xor
pop
push
xchg
pusha
adc
sbb
mov
fidivrs
movsb
es
lcall
pop
aam
lret
adc
iret
xchg
pop
mov
stc
sahf
popa
inc
mov
or
test
xor
jmp
call
imul
mov
mov
je
insb
xlat
push
inc
ja
jg
test
and
jg
push
pop
ret
mov
mov
cmpsb
mov
mov
and
mov
imul
or
hlt
insb
dec
stos
jl
add
dec
push
xchg
xor
push
test
ljmp
sbb
push
pop
xchg
sub
pop
add
xchg
jnp
xchg
out
push
aam
mov
add
fs
jns
jne
stos
in
shlb
inc
sub
jecxz
cmp
sub
dec
mov
and
jno
aad
testl
jnp
sbb
fadd
test
cld
out
sub
add
rolb
sub
adc
fsubrl
or
jns
addr16
mov
mov
xchg
xchg
lahf
or
cmp
ds
xchg
and
and
push
lods
xchg
roll
movsl
hlt
xor
shl
aad
fldt
jbe
fmull
mov
and
jmp
push
popf
or
imul
cwtl
nop
adc
bound
nop
les
out
daa
stos
pop
adc
mov
shll
jno
fnstsw
jns
sbb
sbb
push
sub
jnp
popf
pop
dec
test
mov
xor
jns
xor
inc
insl
das
lret
hlt
mov
aad
add
pmulhuw
daa
mov
jg
mov
icebp
jl
push
mov
shll
scas
push
jle
outsb
rcl
and
xorl
test
cmpsb
pop
add
inc
ja
xchg
xlat
jnp
mov
repz
ds
inc
cmpsl
ds
movsb
cmp
cwtl
sub
popf
mov
sub
incl
mov
dec
loop
xor
jecxz
inc
bnd
out
hlt
jno
in
and
dec
shlb
pop
cmp
out
jno
xor
adc
jb
mov
xchg
jae
cltd
jg
push
xchg
leave
or
mov
mov
fdivl
add
addb
jo
lea
add
iret
add
adc
fiaddl
in
add
sbb
mov
xchg
mov
sarb
in
add
mov
dec
int
test
nopl
pop
test
enter
xchg
js
push
xchg
push
fisubrl
mov
ljmp
stc
pop
mov
xchg
add
xchg
cmc
adc
or
je
rolb
shrb
ret
sub
xchg
push
fstps
divb
stos
jle
stc
repnz
cmp
lcall
ficoms
outsl
mov
cmp
ret
mov
nop
and
es
add
xlat
lahf
pushf
mov
scas
dec
mov
pop
mov
sbb
adc
adc
out
loopne
scas
adc
jmp
daa
adc
ljmp
movsl
jmp
xchg
sarb
add
mov
loope
jnp
std
mov
add
adc
pop
add
dec
jae
inc
cli
mov
popa
icebp
pop
jnp
cld
push
jns
aam
and
std
lahf
mull
sub
and
mov
arpl
dec
and
mov
add
pushf
test
mov
or
sub
ret
push
fmuls
mov
or
out
scas
add
dec
jb
dec
daa
sub
jnp
xchg
pusha
enter
imul
outsb
adc
jp
cmp
push
lock
xor
sbb
push
les
add
sub
push
scas
pop
ss
pop
sbb
cwtl
xchg
xchg
pop
or
ss
movsl
inc
into
gs
and
ss
add
cmp
mov
jp
repnz
pop
push
push
dec
xchg
stos
jl
jne
adc
xchg
cmp
or
lock
sub
pop
ss
sbb
mov
call
push
sbb
movsl
mov
pop
push
xchg
ss
addb
out
pop
mov
mov
push
aad
sbb
add
test
pop
mov
xlat
add
pop
loope
push
mov
arpl
insl
mov
pop
stos
stos
jae
push
dec
test
es
out
add
inc
push
aad
push
mov
in
mov
fs
cli
xor
and
je
mov
push
cmc
mov
pop
stos
jbe
insl
xchg
bound
mov
mov
cmp
xchg
jae
sbb
adc
iret
clc
lret
popa
fbld
sub
aas
insl
mov
push
bound
pop
daa
call
cmc
inc
cld
ficoml
fadd
push
and
adcl
inc
loopne
jne
sub
xchg
jne
jo
scas
xchg
pop
add
cmpsb
and
lock
mov
fidivrs
test
pop
and
out
sti
aaa
movsl
push
cld
cmp
enter
xchg
xchg
lods
xchg
shrl
orb
inc
out
cmp
std
mov
sub
xchg
cmp
sbb
dec
add
hlt
pushw
mov
xorb
inc
bound
sub
inc
iret
add
pop
and
daa
or
xor
jne
fcomps
mov
lret
xchg
xor
std
rorl
mov
push
addr16
mov
push
xor
lea
mov
cmp
add
or
push
faddl
xchg
sub
push
pop
xor
dec
and
fdivrl
xchg
movsl
jno
jo
leave
jno
fldenv
inc
in
inc
pop
or
add
neg
mov
ret
ds
call
mov
sbb
mov
imul
loope
jns
sbb
push
mov
mov
nop
mov
mov
jl
push
into
dec
cmp
inc
inc
cmp
jecxz
test
sub
pop
insb
jo
shl
mov
cli
xor
inc
and
jmp
bound
xchg
lods
loopne
mov
icebp
jbe
xor
push
xlat
mov
test
xchg
movsb
negb
in
lahf
xchg
insl
push
adc
sbb
es
test
leave
pop
movsb
xlat
pop
popa
xor
aas
add
int3
xchg
jge
adc
add
or
sub
fidivrl
xor
mov
sub
or
loope
rclb
mov
adc
mov
aaa
cmp
push
jo
fcmovne
mov
pop
jo
dec
je
mov
je
and
js
mov
into
mov
mov
and
xor
push
and
ret
les
imul
pop
pop
add
inc
dec
or
addr16
mov
stos
cli
sbb
sbb
out
sbb
sti
mov
out
bndldx
lret
fsubrp
movsb
aas
xchg
xor
shlb
cltd
or
xor
cld
jne
pop
enter
inc
push
ss
mov
push
or
mov
inc
cld
push
popf
or
pop
mov
pop
push
out
inc
jns
data16
cltd
inc
mov
or
jmp
xor
rcll
repz
repnz
dec
insl
jecxz
and
cmp
pop
insl
mov
dec
mov
or
xchg
sbb
ja
push
testb
hlt
push
nop
ret
gs
lods
mov
push
or
inc
dec
xor
sahf
cmpsl
ret
mov
add
push
rcl
dec
push
sub
popf
mov
ret
xchg
enter
pop
cmp
xor
mov
jl
adcl
pop
cmpsl
cwtl
mov
cmpsl
xchg
aam
fcompp
stos
or
or
sbb
js
scas
pop
and
cmp
enter
mov
push
adcl
je
xchg
sub
lods
pushf
movsb
pop
fs
dec
pop
or
pop
sub
sub
das
xor
mov
insb
ffreep
inc
gs
pop
or
dec
xchg
aam
adc
dec
sbb
adc
leave
cli
xchg
lds
cs
cmc
push
out
mov
or
push
scas
xor
bound
lock
mov
outsl
cs
inc
pop
lret
arpl
xchg
xorb
sahf
sub
mov
inc
jmp
iret
and
push
in
mov
insb
sub
mov
scas
jle
shlb
pop
aaa
out
jb
rcr
popf
dec
jae,pn
add
cmp
movsb
add
cwtl
call
xor
jne
andb
lahf
xor
xchg
jbe
and
dec
in
push
inc
lods
dec
push
nop
fdivrl
test
in
mov
dec
pop
dec
mov
insl
jno
jecxz
and
test
ljmp
pop
into
or
mov
cmpsl
repz
xor
sbb
push
jae
rol
sbb
adc
ret
fidivrl
pop
cs
xchg
out
movsb
inc
add
lcall
pop
xchg
sbb
and
out
out
lods
loopne
mov
xor
lcall
fadds
xorl
sti
sub
sbb
jno
repz
dec
dec
ja
xchg
xor
cmp
shl
in
sbb
sbb
data16
push
cmp
ljmp
and
and
int3
inc
inc
push
or
stos
aam
inc
jns
jl
mov
gs
arpl
ljmp
cltd
xor
jle
xorb
sti
or
stos
sub
es
push
pop
cmp
push
cwtl
add
jbe
les
add
dec
addr16
mov
pop
push
push
cmp
xchg
xchg
adc
jno
add
sbb
ss
jb
rcll
adcl
sub
pop
push
mov
jmp
and
add
cwtl
out
sbb
mov
popa
push
xor
out
cwtl
mov
dec
xchg
orb
rcrb
jmp
ret
pop
mov
ret
dec
cmp
pop
add
xor
cmp
adc
stos
sbb
and
mov
stos
bound
hlt
push
cmc
test
subb
adc
mov
dec
pop
xchg
rcrl
fldt
inc
push
cmpsl
imulb
xchg
and
or
xor
pop
daa
xor
xchg
jb
test
add
les
push
sbb
mov
test
push
sbb
jne
shll
xlat
mov
cld
push
or
fs
pop
mov
ret
sub
mov
sub
xchg
int
cmp
inc
loop
inc
xchg
imul
mov
sahf
cmp
fmull
adc
mov
adc
addr16
sahf
les
idivb
mov
fwait
dec
mov
mov
inc
outsl
push
cmp
cmp
inc
xchg
inc
mov
mov
out
sbb
push
mov
lahf
loopne
sbb
push
pop
adcb
push
add
mov
and
mov
pop
and
lods
add
iret
sbb
mov
in
sub
inc
in
je
mov
jecxz
aam
cmpsb
in
mov
mov
dec
mov
sbb
les
pop
addr16
int3
std
cmp
jl
ret
or
xlat
xchg
lcall
mov
sbb
clc
popf
pop
rorb
sub
sub
xchg
mov
bswap
lea
xor
jg
xchg
mov
lods
add
and
pop
xor
imul
lods
pop
cmp
test
xor
jmp
push
adc
lret
mov
push
call
dec
dec
lds
ljmp
ficompl
in
dec
inc
push
add
cs
out
mov
mov
mov
movsb
pusha
sbb
jo
and
cmpsl
mov
mov
pop
into
add
stos
jg
sar
sbb
hlt
add
daa
mov
pop
push
cmpsl
loopne
hlt
sbb
xchg
shr
push
push
scas
xchg
adc
dec
mov
push
daa
js
aaa
push
adc
cli
cwtl
push
dec
rcrl
sbb
mov
jmp
mov
mov
mov
mov
or
rcrb
mov
les
data16
imull
mov
mov
cli
jecxz
outsl
sbb
pop
adc
mov
lret
mov
aaa
fmull
mov
pop
sbb
lahf
pop
movb
insb
inc
int3
repnz
mov
dec
fistl
mov
shrl
popf
imulb
xlat
adc
sub
jp
jmp
cmp
ja
inc
out
jmp
push
lock
outsb
xchg
xchg
repz
and
fnop
pop
int
sub
fldt
inc
mov
cmpsb
adc
mov
sub
jmp
pop
fnstcw
sti
inc
es
cwtl
or
push
loopne
loop
xchg
aas
lret
js
pop
fs
jo
jp
divb
add
mov
jbe
push
sub
mov
in
cmp
lret
push
xchg
cmp
fiadds
loopne
iret
add
and
cmp
and
pushf
xchg
and
sbb
ja
lahf
xchg
leave
lret
ficoms
sub
dec
xchg
or
je
and
in
xlat
scas
imul
ja
mov
xor
add
xchg
mov
dec
jp
jae
xor
sbb
dec
popl
jp
pop
sbb
sub
ret
and
jl
and
popf
xor
xchg
pop
dec
sbb
dec
xor
push
sbb
aas
test
adc
ja
imulb
cmp
outsb
stos
cmp
sub
pop
mov
mov
lock
adc
outsb
fwait
mov
loope
mov
adc
fbstp
jo
push
cmp
out
add
daa
sub
adc
shlb
or
and
ret
cmpb
daa
outsl
cmp
negl
and
lcall
cmc
les
inc
xorb
mov
xchg
push
xchg
rcll
lret
cltd
lahf
sbb
pop
jb,pn
sub
rcrl
call
movsl
in
adc
mov
cmp
leave
stc
push
outsb
push
lods
and
jne
fiaddl
loop
push
loopne
enter
stos
jecxz
mov
or
scas
inc
and
ja
cmpsb
fistps
out
outsl
fwait
outsl
add
pop
xchg
test
xor
rdmsr
mov
dec
cmp
decb
mov
mov
test
xor
inc
sbb
push
adc
test
and
push
out
fcmovne
sub
sub
test
push
imulb
and
maskmovq
imull
in
lcall
pop
js
cmpl
lahf
ds
pop
mov
sub
je
sub
xlat
cmp
mov
inc
sbb
inc
adc
cmp
fs
cmpsl
cmpsb
inc
insl
mov
rcll
rorl
mov
insb
imul
call
add
add
or
or
jg
addr16
test
in
fisttps
fistpl
movzbl
outsl
xor
push
jmp
cmp
push
repz
push
cmp
pushf
add
and
xor
mov
lret
outsb
jnp
pop
pop
mov
push
pop
inc
adc
stc
leave
test
fists
mov
pop
lods
mov
push
in
adc
xor
push
das
fxtract
mov
testl
add
jnp
jl
add
mov
fisttpll
sub
leave
xor
scas
pop
and
ja
cmp
jecxz
int
insl
cld
adc
stos
fsubr
and
push
jg
xor
or
mov
pop
pop
in
into
push
jns
add
pushf
jecxz
rolb
mov
jns
or
ljmp
xchg
jecxz
inc
fadds
adc
bound
leave
xchg
and
scas
and
mov
aas
mov
lret
imul
inc
cmpsl
adc
sub
lock
pop
xchg
psllw
adc
add
push
imul
inc
pushf
mov
into
js
pop
mov
push
sub
and
in
cmp
mov
filds
decl
fcompl
insb
sbbl
sbb
aas
repz
or
pop
outsb
push
cwtl
outsb
jb
lret
cmp
dec
add
pop
mov
out
sub
push
sub
jns
xor
mov
test
jb
xchg
push
fdivp
sub
cmp
pop
xor
sarb
in
stc
lret
add
pop
fists
jb
or
pushl
add
xor
arpl
pop
lds
push
mov
or
cmp
dec
stos
stc
xchg
cwtl
aam
paddd
xor
pop
js
fsts
mov
scas
xchg
pop
adc
jnp
pushf
cmp
push
or
mov
outsl
daa
xchg
scas
jle
sub
mov
xor
jmp
dec
lods
sbb
jb
cmp
mov
fndisi(8087
add
push
push
aad
test
cmp
jae
aaa
roll
add
jp
dec
mov
aam
popf
jecxz
sbb
and
xchg
outsl
mov
pop
adc
push
or
fadds
jb
pushf
loopne
xorb
call
sahf
leave
pop
lds
push
pushf
mul
or
sti
mov
jae
and
xor
jo
ja
xchg
pusha
outsl
cltd
stc
ret
mov
cmpsl
in
aad
push
dec
cs
mov
sbb
leave
cmc
movsl
lods
xchg
int3
adc
scas
out
mov
insl
into
fimuls
in
out
mov
dec
leave
in
jbe
call
pop
sti
add
and
xchg
loopne
je
lret
jo
pusha
adc
faddl
lret
jb
xchg
clc
push
cmp
mov
dec
cli
jno
pusha
mov
icebp
sub
in
xchg
inc
nop
mov
divl
mov
dec
pusha
insb
or
dec
imul
and
popf
sub
cmp
inc
pop
pop
xchg
jnp
aad
mov
push
int
repz
sub
repnz
sbb
dec
mov
jg
xchg
jno
jg
jg
inc
pop
pushf
xchg
out
add
sbb
lea
mov
add
xorb
xchg
sbb
jo
mov
or
xchg
mov
xchg
xchg
mov
ja
sbb
xchg
dec
jle
pusha
aaa
in
cwtl
sti
testl
jbe
fistl
xchg
pop
aas
pop
add
outsl
sbb
add
lock
leave
ror
insb
call
cmpsb
das
test
inc
bound
fsubrl
imul
notl
cmp
xor
pop
add
insl
call
and
push
jg
mov
pop
out
popf
dec
mov
xchg
jb
xchg
xlat
inc
mov
popf
mov
mov
xor
dec
jnp
cmp
sub
adc
sbb
into
aad
mov
or
jg
add
fsubs
test
enter
in
imul
xor
sbb
jno
xor
or
jecxz
mov
xchg
cmpsb
std
mov
stc
pop
fcmovnu
in
scas
add
dec
xchg
shrb
loop
add
test
push
ret
loop
arpl
data16
fwait
lea
sub
mov
roll
cmp
hlt
out
popa
xchg
outsl
into
mov
mov
pop
pop
push
add
xor
push
pushf
add
add
ds
mov
sbb
popf
iret
hlt
mov
inc
fs
sbb
dec
cmovns
in
pop
out
mov
dec
add
xchg
xorb
xlat
clc
push
lods
dec
add
notl
fiadds
cld
sub
jg
sub
adc
pop
mov
pop
mov
andl
mov
es
add
inc
test
xchg
ljmp
add
shrl
cmp
ja
adc
cli
adc
sti
cmpsb
dec
dec
int3
loopne
imul
in
divb
mov
repz
jno
call
sub
pushf
aam
mov
pop
jmp
push
and
and
xchg
push
clc
stos
and
sbb
jp
aad
sbb
jl
insl
lds
arpl
lods
sahf
hlt
ret
jo
pop
sub
test
pop
nop
mov
adc
sbb
lret
or
out
mov
sbb
cmp
pop
pusha
icebp
cmp
fdivrl
ror
es
sub
jg
jg
in
cmp
sbb
cmp
mov
test
mov
xor
repnz
jmp
mov
scas
sub
std
mov
sbb
push
fildl
xchg
iret
jg
fmuls
add
imul
fsubr
inc
cmp
inc
cmp
or
dec
lret
xlat
pop
mov
jo
jmp
in
jno
rcll
cmpsb
inc
stc
addl
adc
jecxz
jmp
or
mov
pop
add
int3
ret
sbb
incb
fidivrl
fs
adc
mov
dec
sub
mov
xchg
push
dec
push
push
stos
shll
push
bound
jno
aas
lcall
sbb
je
lahf
ljmp
inc
insl
add
test
xchg
mov
mov
stos
or
mov
cli
pusha
and
jnp
stos
pushf
adc
aam
jp
icebp
mov
pop
fmul
xchg
adc
mov
jbe
outsl
adc
dec
jmp
ret
rcl
pushl
mov
cmc
mov
lret
jmp
xchg
sub
sub
rorl
iret
cmp
clc
and
push
add
mov
jae
add
cmp
push
jge
popf
cld
mov
cmp
or
outsl
test
jne
cmp
insl
int3
jg
xor
mov
sbb
jo
cmc
mov
fwait
js
in
xor
imul
and
sbb
cmp
dec
pop
mov
inc
or
ror
xor
cmp
cmpsb
mov
and
sti
leave
xchg
je
xchg
ret
inc
sbb
xor
mov
sbb
rol
out
in
lods
sub
adc
push
stos
aas
cmp
xchg
mov
test
pop
lret
enter
sub
mov
dec
and
jecxz
push
dec
mov
and
or
pop
xchg
out
push
mov
pop
test
sbb
scas
sbb
cmp
push
and
adc
mov
jns
push
fwait
int3
mov
out
test
jg
pop
mov
or
iret
mov
mov
xchg
inc
sub
and
jmp
int
xchg
daa
scas
mov
fld
pusha
pop
es
mov
xor
xor
repnz
sub
cmp
dec
ffree
mov
xchg
js
dec
xchg
je
mov
gs
adc
rcr
push
outsb
rcll
cwtl
inc
dec
mov
sbb
out
pop
lds
inc
cld
adcb
idiv
pop
and
repz
imul
fsubrs
fdivrl
push
shrb
mov
cmpsb
or
or
mov
gs
pop
dec
sarl
aaa
jg
aas
xchg
popl
xor
xchg
cmpsb
shll
cltd
dec
cmp
mov
inc
adc
in
sub
pushf
xor
jle
frstor
push
mov
stos
icebp
repz
xchg
pop
or
cmp
mov
dec
pop
cs
dec
mov
shrb
mov
pusha
ss
inc
subb
clc
push
les
sbb
push
fwait
lods
test
jae
sbb
aam
lcall
and
in
or
xchg
cmp
movsl
xorb
popf
cmpsb
xchg
loop
and
mov
fsub
push
xchg
mov
push
mov
xor
add
test
out
cwtl
mov
and
cwtl
outsl
out
faddl
cmp
out
je
add
ficoml
jno
notl
fldl
adc
out
out
push
push
mov
xchg
push
jns
popf
bound
mov
sti
fnstenv
inc
mov
push
push
adc
inc
call
xor
fstl
in
js
push
mov
gs
or
loope
and
in
xchg
insl
push
push
lea
sbb
ja
dec
cmc
scas
popl
ffree
out
xchg
ret
pop
sbb
mov
and
movsl
mov
test
movsb
lret
orl
mov
out
pop
pop
repnz
bound
int3
sbb
insl
cmc
je
or
ja
push
mov
push
jno
shrl
and
push
les
cmp
jecxz
cld
shrl
adc
adc
sahf
adcl
mov
pop
push
inc
pusha
js
pop
cmpsb
sbb
or
or
les
push
and
imul
jle
adc
repz
f2xm1
leave
movsl
out
sbb
test
push
fmuls
add
pushf
xor
sahf
fstpt
sti
movsb
jnp
xchg
xor
xlat
pop
push
or
pop
xchg
push
mov
test
stos
cmpsb
adc
adcl
fnstcw
sbb
push
mov
sahf
fwait
mov
dec
lods
pop
sub
adc
mov
dec
in
out
inc
lahf
mov
divb
fs
mov
push
dec
sub
and
aam
jbe
push
sbbl
dec
int
sbb
and
lcall
ljmp
inc
xor
fst
push
or
sbb
push
jno
push
fs
xchg
add
lock
cmp
adc
cmovle
test
push
xor
orb
mov
xchg
or
ss
xor
clc
ficompl
ror
subl
sub
loope
jmp
xchg
sub
rclb
cltd
fcmovu
xor
mov
dec
aaa
bound
rcl
sub
enter
call
pop
or
inc
push
shrb
adc
test
mov
mov
ss
or
cmc
mov
rorb
push
sub
inc
daa
pop
out
data16
cld
lahf
xor
pusha
bound
or
mov
out
stos
test
nop
mov
ljmp
lret
adc
dec
pop
pop
or
lcall
in
or
pop
in
jecxz
ret
dec
pop
out
in
out
and
scas
imul
lods
int3
sbb
lcall
orl
js
xchg
loop
pop
jbe
push
jo
xchg
test
das
or
sahf
cli
push
pop
mov
ds
loope
adc
ljmp
mov
lds
xlat
fidivrl
fldenv
add
out
add
cmc
adc
and
adc
cld
loop
push
sub
inc
fwait
out
xlat
push
cmp
pop
lahf
inc
mov
pop
hlt
mov
ret
sti
imul
sub
add
lock
xor
aas
sub
out
add
hlt
jb
out
orb
jns
in
add
mov
sub
xor
xor
cmp
push
cwtl
or
xor
clc
rol
sahf
dec
dec
adc
jbe
fstl
dec
test
mov
mov
cmpsb
jb
mov
add
enter
pop
or
push
push
inc
jns
cltd
jns
pop
in
adc
pop
mov
repnz
je
xor
loopne
mov
dec
dec
jb
dec
lods
nop
nop
and
pop
add
cltd
scas
out
test
push
enter
out
ja
cmp
enter
dec
fldenv
jb
js
lret
cmpsb
inc
rcrl
js
and
mov
outsl
popf
mov
xchg
or
cmp
in
fs
jns
int
les
mov
mov
mov
mov
dec
cs
jg
add
cmpsb
sbb
xchg
pop
in
test
jbe
cwtl
pop
jge
add
test
and
jmp
xor
lahf
fwait
jl
cmpsl
xchg
repnz
dec
mov
ret
xchg
lock
inc
sbb
std
rcll
std
lods
insb
ret
jns
push
xchg
ror
in
cmp
adc
repnz
ficomps
es
sub
ja
mov
xor
xchg
ja
pushf
pop
xor
dec
sti
xor
mov
xor
ds
out
mov
add
loopne
test
adc
shrb
dec
xor
xlat
fcmovnu
push
jnp
jg
movsl
repz
loopne
mov
daa
dec
out
mov
out
mov
push
test
pushf
add
xchg
push
sub
das
insl
fcmovbe
push
jns
mov
shrl
dec
cmpsb
lcall
rorb
test
hlt
cmpsl
xchg
or
push
or
mov
fdivr
fisttpl
lods
out
dec
sbb
scas
lret
push
in
lds
or
roll
mov
and
mov
wrmsr
adc
hlt
ds
jnp
cwtl
sub
mov
mov
in
lea
dec
push
dec
std
sarb
push
dec
add
jl,pt
cli
jns
sbb
cs
adc
leave
imul
repnz
xor
stos
pushf
out
sbb
push
scas
xor
mov
push
movsb
jle
stos
xor
lea
aam
scas
sbb
mov
addr16
pop
mov
mov
xchg
testb
jae
xor
dec
mov
jnp
popa
pushf
ret
in
dec
lret
jo
add
mov
call
pushf
push
imul
adc
adc
xchg
cmp
mov
fistps
mov
cs
mov
jecxz
pushf
jnp
aad
mov
testb
xchg
push
jne
mov
lea
push
or
pusha
mov
jbe
xor
or
jns
mov
roll
cmp
mov
inc
fadds
lea
icebp
addr16
mov
sub
out
jmp
or
stos
jnp
imul
pop
push
fiaddl
push
lret
int
in
pop
dec
clc
push
pop
mov
je
cmc
jmp
insb
xor
mov
add
sbb
mov
push
mov
sahf
xchg
inc
stos
jg
clc
lret
dec
mov
mov
sbb
leave
test
xor
sub
mov
outsb
testb
jno
push
sbb
or
and
pop
dec
xchg
cmpsl
dec
inc
out
pop
push
insb
cwtl
and
dec
pusha
clc
dec
add
hlt
push
add
push
dec
jae
clc
jle
data16
sbb
lret
aad
lock
mov
cld
lcall
loop
mov
cmpsl
push
cli
dec
ja
xor
clc
movsl
dec
mov
stc
jmp
push
ljmp
mov
mov
mov
cmp
sbb
sbb
rcrb
sub
xor
inc
mov
sti
repz
sub
sbb
or
and
movl
or
repnz
movsb
or
shl
in
aaa
stc
repz
clc
mov
mov
andl
aas
xchg
sbb
daa
jae
mov
ficomps
jbe
outsb
popf
inc
xchg
aaa
xor
movsb
nop
inc
jl
ss
mov
jo
lods
and
sub
jnp
sbb
jo
out
cwtl
lds
cmc
push
out
int3
jg
inc
jns
cmp
jecxz
sbb
clc
out
pavgb
stc
iret
lock
stos
push
iret
inc
adc
mov
movsl
xchg
inc
clc
aam
data16
stc
scas
inc
repz
dec
or
les
mov
cltd
push
clc
in
xor
cmp
adc
xchg
add
in
push
jecxz
mov
cmp
inc
and
inc
and
div
scas
mov
jl
xor
in
mov
fisubs
outsb
pop
pop
call
mov
out
or
mov
shrb
out
jae
test
xchg
sub
stc
nop
outsl
lock
jne
in
arpl
js
call
jb
adc
mov
or
cltd
mov
mov
and
sti
shrb
sti
or
push
sbb
mov
push
gs
pop
js
call
int
cmpsb
icebp
jo
movsl
xchg
outsb
mov
sbb
cs
stos
orl
insb
dec
scas
or
xor
sbb
hlt
imul
mov
cltd
fnsave
pop
js
xchg
adc
sarl
fs
add
xchg
mov
push
into
inc
xchg
mov
inc
add
lret
cmc
inc
inc
ljmp
lods
dec
scas
scas
fisttpl
repnz
or
jp
xchg
das
into
iret
je
iret
adc
jle
mov
sub
xlat
ja
mov
cltd
xor
mov
mov
ja
fcomps
test
sbb
add
ja
push
in
sbb
xchg
pop
add
inc
jl
cmp
cmp
xchg
push
out
sub
test
daa
leave
cmp
adc
jmp
xchg
jne
xor
jp
inc
les
movsl
stc
pop
popf
pushf
mov
fdivs
cmpl
jle
pop
dec
push
and
cwtl
movsl
loopne
mov
les
out
cmp
movsb
lods
mov
popa
loopne
test
pushl
dec
inc
add
sar
sahf
dec
in
add
inc
push
mov
sbb
movsl
fdivr
cltd
jp
cmp
loopne
test
and
cltd
push
mov
and
in
push
pop
xchg
pop
and
repz
sahf
dec
mov
test
aas
dec
lret
in
dec
xor
jb
arpl
push
jge
and
cmp
roll
mov
push
repz
xchg
push
loopne
mov
sub
stos
mov
push
out
jge
insb
or
rclb
test
aas
cmp
out
out
dec
jo
push
fistpll
and
sbb
push
ror
sti
call
mov
push
sbbl
movl
stc
mov
push
xchg
xor
mov
push
es
jmp
jge
insb
cli
mov
out
popa
fwait
jmp
xchg
test
divl
or
test
call
dec
pop
fisttpl
pop
xor
rcl
jo
leave
sti
or
cld
test
xchg
push
fdivs
outsl
adc
dec
adc
and
das
sbb
scas
stos
or
or
and
mov
mov
xor
pop
sbb
fsubp
xor
movb
popa
cmp
mov
push
push
sub
stos
mov
popa
sbb
ficoml
add
aaa
lds
ret
add
jbe
adc
jl
or
or
and
mov
or
lret
je
cs
jge
sbb
xchg
xchg
xchg
test
mov
out
push
and
xor
loop
test
fistps
mov
addl
mov
dec
push
testl
imul
lock
inc
push
int3
add
cwtl
stos
mov
call
pop
cmpsb
sbb
loope
decl
or
xor
push
mov
mov
mov
inc
testb
test
pop
add
test
out
sbb
cmp
test
adc
inc
imul
jbe
cmp
clc
inc
adc
aad
fdivrl
rol
cli
inc
jbe
icebp
or
cmp
mov
gs
das
pop
dec
subps
mov
sbb
inc
mov
movd
std
enter
mov
adc
fisubrl
imul
loop
mov
das
cmp
xor
xchg
cld
movsl
jmp
aas
xor
sti
lock
loopne
push
jae
lahf
dec
sbb
xchg
movb
cmc
mov
icebp
inc
out
mov
cmpsl
cmpsl
mov
pusha
dec
ror
fsubl
out
xchg
cmp
scas
out
inc
pop
jb
or
cmpsb
mov
lahf
jecxz
mov
outsb
inc
mov
push
sbbl
mov
push
fistl
mov
jecxz
into
sbb
adc
lret
mov
push
cmp
gs
popf
sbb
stos
lahf
scas
test
xchg
add
js
sarl
inc
xlat
pop
fmull
mov
or
imul
outsb
cmpsl
scas
or
or
mov
or
outsl
dec
inc
fdivrl
sbb
xor
jo
getsec
sub
pop
ds
test
iret
lds
dec
jne
insb
xor
data16
xchg
and
incb
jmp
add
nop
cs
shlb
in
xor
lods
add
xor
dec
lcall
mov
xor
mov
insb
fadds
js
pop
mull
add
mov
test
sbb
add
rcrb
loope
xchg
js
decb
xorl
jmp
mov
out
push
frstor
iret
pop
adc
pop
jno
imul
or
sub
cld
dec
jmp
hlt
outsl
sbb
ret
repz
das
loope
adc
iret
adc
into
mov
xor
lcall
frndint
imul
fisttpll
jns
inc
das
inc
fucom
int3
stos
lret
mov
and
roll
adc
dec
test
add
jmp
inc
cmp
cs
mov
pop
or
addl
cwtl
xchg
stos
mov
push
cs
data16
mov
push
cwtl
cmp
mov
jnp
std
mov
in
sbb
repz
data16
mov
xor
test
mov
lcall
jbe
and
bound
stos
add
fadds
ljmp
fcoml
and
test
shll
xchg
cmp
mov
in
call
push
sbb
xchg
ret
inc
lahf
inc
inc
aaa
ljmp
mov
adc
test
mov
inc
sub
lcall
push
mov
sub
push
lret
mov
and
std
adcb
push
scas
hlt
xorl
es
imul
lea
push
pop
pop
testl
jecxz
push
adcb
mov
and
xchg
outsl
rolb
and
jno
loop
mov
xor
loop
mov
jne
mov
fildl
mov
pop
jae
in
jne
push
test
add
sub
sub
jmp
fmull
xor
xor
xchg
test
adc
loope
cld
test
pop
scas
daa
push
push
testl
loope
shrl
xor
std
pop
push
lods
sub
js
in
push
mov
dec
add
into
jbe
je
repnz
fcompl
jne
adc
mov
jns
push
in
mov
out
mov
mov
faddl
cmp
test
in
nop
in
cwtl
inc
je
inc
into
iret
inc
into
es
sub
notl
imul
out
cmp
dec
xchg
and
lret
dec
inc
mov
push
lahf
sbbl
xchg
out
add
sarb
sbb
dec
cmp
int3
int
sbb
lock
push
clc
xchg
xchg
sti
add
or
lock
lods
xor
mov
adc
js
daa
movsl
aas
mov
add
jecxz
jne
push
mov
scas
int3
ss
add
stc
nop
mov
icebp
mov
inc
xchg
pop
adc
loope
adc
sbb
push
daa
xchg
cmpsl
stos
movsb
insb
stc
jbe
ss
shrl
loop
adc
test
jle
mov
jns
mov
leave
jp
xor
push
push
pop
cmp
cmp
xchg
push
pop
mov
sbb
xor
lea
ljmp
push
adc
stc
and
jae
daa
lret
pop
pop
sub
xor
jmp
lcall
or
icebp
mov
aas
push
push
rclb
adc
inc
aas
loopne
ret
xor
neg
sahf
or
add
loopne
xor
jne
hlt
bound
fidivs
add
push
aad
hlt
jne
aad
pop
cwtl
push
pop
nop
and
ljmp
jecxz
pop
push
cwtl
pop
cmp
mov
outsb
and
je
icebp
mov
pop
push
push
jne
and
scas
pop
call
jne
xchg
pop
clc
cmp
mov
neg
pop
das
fsubs
xor
popf
js
and
cmp
xlat
xchg
inc
xchg
imul
das
cmp
stos
mov
jecxz
loope
fldenv
addr16
out
inc
adc
scas
or
hlt
pop
es
jmp
test
pop
and
jge
sti
add
data16
fadd
rclb
sbb
xchg
in
cld
insl
mov
mov
mov
pop
jns
cmp
ds
add
mov
pop
push
stos
jecxz
inc
not
mov
ret
sbb
inc
xchg
add
dec
test
cwtl
pop
movsl
repz
lret
mov
cmp
jnp
test
adc
negl
mov
pop
nop
mov
fdivrl
xor
sbb
push
jo
sbb
int3
test
pop
xor
add
mov
pop
inc
insb
or
push
mov
iret
push
pushf
aad
inc
fidivs
pop
xor
int
adc
lds
in
out
xor
add
sub
test
dec
test
iret
push
arpl
in
or
add
cmc
icebp
fisubs
mov
xchg
add
xlat
call
inc
inc
ficoml
push
jns
lods
sahf
pop
pushf
jae
out
pop
mov
adc
add
fdivs
xor
push
mov
sub
sub
andl
sub
xchg
mov
cltd
sub
adc
mov
mov
and
jnp
xchg
pop
push
aaa
mov
xchg
ret
cmp
dec
inc
pop
jmp
cld
mov
jl
shl
je
mov
cmpsb
lcall
inc
mov
adc
or
lea
or
call
or
or
popa
sub
push
lea
xor
pop
cs
xchg
imul
rclb
inc
cld
dec
movsl
ja
test
cld
sub
into
push
data16
xor
mov
jbe
mov
xor
inc
insb
test
mov
loop
xor
cmp
test
dec
out
in
sbb
push
dec
notl
and
mov
mov
inc
mov
jp
add
es
mov
and
sub
outsl
mov
movsb
and
fisubrl
and
jb
jmp
mov
leave
cmpl
lds
pushf
or
mov
ret
loope
ja
add
xor
repnz
pop
cmp
jb
iret
pop
jecxz
inc
mov
daa
gs
bound
mov
gs
mov
out
cmc
js
outsl
int3
stc
pop
dec
mov
dec
or
mov
jmp
mov
iret
pop
or
ss
jno
push
cli
mov
sub
and
or
scas
and
mov
cmpsb
jl
adc
fsubs
inc
int3
jl
ljmp
pop
lahf
jnp
jnp
jae
push
mov
ds
out
push
fs
divl
mov
mov
cmpsl
mov
lods
mov
dec
mov
into
andl
pop
mov
inc
or
pop
testl
dec
test
test
je
daa
sub
inc
inc
mov
push
jge
testb
test
add
cmpsb
mov
dec
sub
mov
sbbl
add
push
xchg
cmp
adc
cmc
mov
add
pop
mov
xor
mov
mull
sbb
js
cwtl
cld
stos
fs
repz
aam
cmp
sti
cmpsb
cwtl
imulb
cwtl
fs
sub
loop
js
faddl
shr
clc
popf
jns
loopne
push
push
call
cwtl
jo
mov
push
ret
xor
push
jo
insb
jo
iret
inc
push
jle
inc
fmulp
dec
cvtpi2ps
imull
pop
jae
adc
xchg
test
out
cmp
push
in
lods
xchg
stos
lods
mov
lret
ja
pop
mov
popf
test
fwait
andb
call
scas
call
fildl
int
xchg
push
cwtl
push
adc
add
js
push
sbbb
xchg
cmpsb
pop
popa
pop
sbb
les
cwtl
fwait
in
fstpl
mulb
mov
or
icebp
iret
mov
pop
cmpb
popf
pop
mov
dec
jp
pop
sbb
mov
push
sub
push
pop
daa
jle
cmpl
andl
popf
mov
mov
stos
jbe
pusha
cmp
dec
push
cmp
inc
mov
cmp
scas
imul
sbb
push
push
hlt
dec
fildl
push
push
fsubr
mov
sbb
pusha
cmpb
cmpsb
jno
les
movsb
ret
cmp
cmpsb
out
pop
test
dec
sti
cs
outsb
jl
call
dec
subb
outsb
or
ds
cmc
or
xchg
xchg
xor
cmp
sub
int3
push
push
cwtl
les
addr16
insb
repz
imul
addr16
pop
fwait
sbb
daa
je
jo
cld
push
cmpl
popf
out
pop
out
push
das
imul
xor
cmp
rolb
fs
pop
iret
leave
dec
lds
inc
nop
xchg
aas
dec
shrb
repnz
xchg
and
ja
cmpsb
imul
fcoml
les
lret
das
xor
jg
jge
pushf
addr16
shlb
mov
sarl
fucomp
and
adc
dec
cltd
mov
ljmp
rcl
es
daa
cmpsb
add
cmp
mov
mov
jecxz
lcall
ja
sarl
mov
cmp
lods
rolb
add
xor
mov
movsl
inc
ss
push
fsub
inc
popf
or
hlt
lds
gs
pop
fsts
push
xchg
int
mov
and
mov
into
cmp
ja
cmp
fucomp
push
gs
pop
jl
dec
pop
lcall
out
sbbl
jmp
subb
pusha
imul
jmp
or
adc
adc
ljmp
rcl
sbb
ja
insl
jbe
aam
jecxz
sub
daa
out
and
add
add
push
daa
in
mov
in
cmpxchg
in
push
xchg
jmp
xchg
push
push
lcall
push
lock
frstor
mov
ror
imul
insl
or
mov
mov
rcr
negb
inc
stos
shll
std
loop
jmp
icebp
add
push
call
outsb
and
ja
pushf
int3
or
pop
iret
dec
test
int3
leave
shlb
stos
jae
int
sbb
inc
cmp
outsb
push
mov
adc
xor
jb
mov
bnd
es
mov
mov
lret
jg
out
stos
scas
pop
pop
add
ljmp
stos
jbe
cwtl
ljmp
arpl
daa
push
mov
pushf
xlat
push
cmp
jnp
addr16
lods
sub
sub
jae
and
mov
std
mov
mov
cmpsb
pop
imul
inc
adc
aas
data16
test
testb
orl
sbb
pop
xchg
bound
push
adc
pop
mov
aas
fsubr
repnz
mov
mov
xor
xor
mov
pop
dec
cmp
add
fbstp
cmp
arpl
scas
dec
pop
sub
stos
xchg
dec
xchg
in
loopne
inc
xchg
push
mov
jmp
cmp
xchg
fsubrs
cmp
dec
pushf
sti
rcrb
xor
mov
mov
and
inc
cmpsl
xlat
aas
icebp
pop
test
push
push
inc
stos
sub
dec
fstpl
xchg
jg
cmc
cmp
cs
mov
pop
inc
push
es
ret
or
push
aam
jno
cli
out
xchg
ds
imul
scas
xchg
pop
mov
pop
popf
insl
loopne
daa
std
inc
xchg
adc
dec
mov
ds
inc
jnp
jae
faddl
pusha
call
fistl
mov
repnz
aaa
mov
dec
sarl
add
fs
shrb
jge
mov
stos
mov
dec
popa
jmp
jl
out
dec
pop
jo
and
dec
divps
xlat
inc
jo
rcl
cs
loopne
xor
mov
daa
jl
dec
mov
call
scas
xchg
sbb
sbb
cmp
mov
dec
jle
faddp
stos
pop
getsec
push
push
jg
scas
nop
clc
fiadds
xor
xchg
imul
cmp
cmp
mov
jg
clc
lock
loop
sub
scas
cmpb
mov
pop
pop
pop
das
fdivl
inc
movsb
jmp
mov
cmp
test
mov
xchg
mov
jne
leave
adc
cli
cmp
sub
or
inc
outsb
pop
sbb
test
mov
arpl
mov
mov
mov
mov
into
mov
xlat
sub
sarb
xor
sub
ret
push
cmpsl
stos
mov
cmp
shl
subl
aad
cmc
mov
and
jbe
int
xchg
jae
movb
add
sbb
xor
fstl
sbb
push
mov
inc
pop
clc
mov
mov
filds
cmp
sub
and
lret
stos
push
push
les
pop
decl
ja
inc
pop
push
dec
dec
push
cmp
out
sub
cli
roll
sub
dec
pop
out
scas
inc
fstps
cmp
sbb
mov
mov
push
inc
jne
jp
push
stc
lods
test
dec
popf
outsb
xor
fwait
add
mov
cmp
int3
std
add
push
and
cmovnp
and
xchg
push
enter
pop
out
mov
mov
jns
cmpsl
cmpl
pop
or
loop
sub
sub
in
cmp
add
inc
pop
or
nop
insl
mov
jle
test
mov
cmp
xchg
gs
enter
movsb
push
aas
pop
mov
cmpsl
mov
sti
dec
leave
jo
jnp
hlt
xchg
sbb
in
xor
jno
clc
cmp
stos
mov
cmp
sub
je
pop
rcrb
add
movb
es
cltd
sahf
cmp
daa
pop
jp
cmp
xchg
mov
out
dec
cli
mov
and
mov
mov
out
bound
adc
push
xchg
idiv
sub
incb
nop
sub
es
cmc
sub
das
repnz
cmp
js
xor
in
sub
or
jns
rcll
popw
fidivrl
dec
sub
mov
xchg
cmp
mov
lods
mov
pop
scas
iret
sti
sar
push
lret
movsb
xlat
cltd
sub
in
in
lcall
add
call
jecxz
pop
jbe
gs
test
fldt
cwtl
cmp
adc
scas
negb
sbb
xchg
jl
jle
and
fnsave
xor
xchg
mov
aaa
mov
or
sub
mov
cmp
cmp
and
dec
xchg
icebp
and
pop
pop
mov
adc
loopne
sti
shll
movsb
test
push
or
and
jae
outsl
inc
mov
inc
jne
andb
pop
xchg
pop
out
inc
add
adc
sahf
lods
fidivl
or
cmpsb
scas
shlb
mov
mov
add
jnp
imul
gs
dec
sub
push
ret
mov
test
fwait
xlat
aaa
mov
add
inc
sahf
jmp
fcomps
adc
inc
shrl
and
inc
pushf
leave
xchg
pop
jge
cld
inc
mov
shlb
sbb
pop
add
sarb
jmp
dec
pop
das
mov
bound
aad
cmp
sub
negb
mov
inc
es
sub
orb
or
dec
rclb
mov
pop
and
popa
scas
sarl
and
jmp
cmp
ficoml
aad
pop
and
popf
and
into
movsl
std
mov
mov
add
mov
stc
jb
mov
daa
xchg
les
sub
adc
dec
pop
pop
movsl
or
or
pop
xchg
arpl
jnp
daa
mov
or
add
or
sbb
test
lret
mov
jae
xchg
shlb
mov
aam
jns
sub
dec
cmp
dec
mov
adc
addl
pop
mov
mov
jno
inc
vmovntps
mov
pop
les
ja
into
mov
and
xor
inc
or
shll
scas
push
pop
dec
into
shlb
mov
jge
jns
pop
enter
ss
inc
shrl
ja
int
enter
push
mov
jo
es
sub
mov
addr16
sbb
jno
int3
sbb
cld
aas
push
pop
mov
jne
or
aaa
mov
fbld
imul
rorb
or
sahf
test
jne
lret
mov
jb
ret
xchg
pop
push
fimuls
push
fptan
push
imul
idivl
adc
xchg
data16
pop
int
cmp
and
pop
mov
and
xor
mov
adcl
loop
cmp
push
xchg
mov
sbb
fisttpll
mov
es
sub
je
mov
mov
or
push
out
mov
call
jbe
lds
outsl
scas
rcr
movsl
outsb
in
xchg
ret
ss
sub
inc
fidivrs
push
sub
jns
in
or
pop
xor
lods
and
mov
inc
mov
iret
or
push
push
aas
addr16
jb
shl
jge
mov
add
xchg
inc
xchg
in
xchg
out
fwait
mov
jno
xor
movsl
lea
das
aam
or
pop
test
cmp
mov
mov
mov
push
aas
push
aas
pop
adc
adc
sub
mov
adc
push
repz
cwtl
mov
xchg
repz
mov
ja
shl
icebp
mov
popf
push
mov
in
cmpsb
sub
cmp
xchg
cld
inc
in
repnz
sub
adc
aam
hlt
in
ss
mov
in
in
in
mov
in
insl
mov
aaa
js
push
and
aas
ljmp
jno
fisttpl
ret
mov
idivl
jne
daa
fisubrs
add
xchg
int
mov
pop
int
pop
lds
inc
mov
push
fsubl
lds
aam
jno
sbb
pop
jmp
cltd
push
scas
mov
mov
sbb
out
out
and
stos
stos
ss
push
sub
adc
pop
xchg
sbbb
shll
decb
push
pop
add
pop
jo
and
sub
fnsave
xor
mov
cmp
in
int
cwtl
cltd
dec
push
and
pop
inc
inc
mov
je
push
adc
and
dec
xor
test
rclb
push
and
arpl
lds
sahf
adcl
and
add
push
nop
or
mov
sub
outsb
adc
inc
mov
xchg
sbb
daa
jmp
jg
sub
fscale
sbb
jg
mulb
mov
lods
mov
ss
pop
inc
add
daa
scas
pop
jecxz
fwait
jmp
divl
xor
std
mov
rcrl
sub
sbb
jle
imul
inc
enter
jle
gs
mov
mov
xchg
test
mov
mov
inc
fucomi
mov
lret
push
xor
push
mov
aas
pusha
sbb
jmp
xor
rorb
xor
xchg
mov
inc
std
insl
insl
cs
repz
sbb
insb
shlb
xchg
pop
je
mov
sarl
imul
rol
pop
add
add
aaa
push
ror
nop
loope
cmp
add
sbb
dec
arpl
jae
jp
sbb
pop
ds
add
add
mov
push
pop
sbb
cmp
cmp
sbb
or
mov
cmp
pop
push
push
adc
lret
xchg
xor
ret
inc
inc
sbb
in
fidivl
inc
in
lock
xchg
aad
clc
inc
adc
pop
mov
or
sub
dec
mov
or
xchg
test
das
lret
icebp
insl
sbb
repz
cltd
xor
dec
inc
pushf
jno
aaa
aas
lcall
imul
aas
js
adcl
and
int
mov
mov
push
jb
mov
inc
pop
aaa
mov
psraw
test
xor
cwtl
jbe
popa
or
je
cmp
jns
mov
xor
lods
fidivrs
xor
pop
xor
sahf
pop
popa
add
xor
ret
push
push
xchg
and
repz
mov
adc
aas
test
inc
psubusw
pop
into
addr16
pop
outsb
sbb
pop
int3
out
cltd
and
nop
dec
adc
std
arpl
repnz
lret
add
pop
mov
into
aam
lock
dec
test
inc
and
test
icebp
bound
inc
cmp
sub
jle
or
iret
fsubrp
mov
jns
add
mov
xlat
pop
sbbb
ljmp
outsb
fadds
std
ss
inc
or
ret
mov
jp
jb
ds
stc
in
int3
inc
pusha
pop
outsb
dec
sub
add
in
xchg
sti
and
pop
mov
clc
xor
faddl
jecxz
stc
xchg
and
outsl
xchg
rorl
loopne
arpl
mov
jmp
gs
inc
sub
mov
xor
inc
adc
xor
mov
jnp
sahf
lcall
decb
mov
xchg
movsb
adc
dec
jne
ret
push
and
or
or
ror
ja
cmp
jecxz
push
lahf
cmpsl
xchg
mov
mov
imul
in
das
int3
or
or
sub
cmp
in
mov
xchg
fstps
push
sbb
xor
adc
inc
fs
leave
xchg
add
push
mov
hlt
jno
pop
clc
jge
lahf
arpl
test
sbb
push
mov
push
lds
js
xchg
cmc
push
addr16
stos
fs
in
mov
dec
mov
bound
and
and
test
cld
add
shrb
and
bound
push
pop
sub
push
das
xor
cmc
cli
jp
add
or
stos
pop
arpl
mov
iret
pop
or
cmp
arpl
xor
push
push
mov
mov
adc
add
test
dec
mov
jo
dec
inc
repz
into
shlb
mov
add
dec
addb
jae
pop
and
sbb
mov
sbb
jmp
or
cmpsb
clc
imul
imul
loope
iret
mov
loope
lods
cmp
test
cmp
add
sbb
xchg
jno
cmp
bound
mov
cld
add
ljmp
adc
push
mov
addr16
adc
ror
adc
add
inc
or
or
adc
adc
sbb
sti
xor
out
in
adc
into
mov
lods
std
cmp
test
add
bound
pushf
xchg
push
and
jg
inc
jmp
adc
sbb
call
push
lods
pushf
push
push
data16
pop
push
cmpb
xchg
into
fdivs
mov
sub
push
cmp
pop
mov
loop
dec
pop
clc
jl
xorl
ljmp
cmc
stos
loop
push
cmp
dec
imul
xlat
imul
add
es
cmpsb
test
fs
std
mov
mov
lcall
inc
out
sti
std
mov
cwtl
mov
scas
mov
jge
or
sbb
jns
jle
or
sub
or
add
xlat
out
in
js
adc
mov
or
xlat
ja
mov
adc
dec
cwtl
cmp
pcmpgtb
daa
xchg
mov
je
or
sub
push
mov
push
andl
das
imul
mov
data16
inc
xor
adc
leave
dec
sbb
jns
test
xchg
mov
sbbl
push
xchg
or
ret
iret
out
mov
insl
loope
xor
divb
incl
popf
fmuls
jne
std
leave
bnd
push
or
lods
loope
rcll
mov
inc
push
es
push
and
test
out
je
push
adc
sub
adc
aad
mov
icebp
xchg
inc
movsl
xchg
and
vpsllq
sbb
sbb
icebp
imul
pop
fistpl
stos
add
std
mov
test
sbb
mov
sbb
sub
sarl
subb
mov
into
cmpb
sbb
repz
scas
pop
rcr
shl
stos
out
mov
insb
or
and
jb
aam
push
inc
push
mov
and
shr
ljmp
inc
sete
leave
in
pop
push
mov
cmc
add
hlt
inc
or
cmp
push
loop
or
scas
test
sbb
hlt
adc
lods
ret
fdivs
cmp
lea
call
adc
or
cmp
popf
and
inc
ficomps
repnz
cmpsl
cltd
test
test
mov
dec
adc
xor
xchg
fimuls
test
xor
fstpt
mov
das
dec
lock
fcmovb
fistps
fcom
sub
adc
leave
or
shlb
mov
mov
leave
sbb
cmp
sahf
popf
mov
or
cmp
pusha
and
and
aas
dec
aaa
imul
cmp
repnz
fnstcw
movsl
daa
mov
aaa
pop
scas
cmp
push
loop
imul
push
mov
lock
lcall
je
jo
ret
addr16
jmp
cld
ret
iret
xchg
ret
cmp
adc
bound
xchg
jg
jge
xchg
pop
ret
dec
push
call
push
cmp
inc
mov
and
dec
int3
shl
arpl
sbb
arpl
dec
xor
pop
scas
sub
or
std
sbb
fwait
cmp
push
sbb
rcll
lods
lahf
cmpb
mov
pop
adc
sub
sbb
xor
dec
scas
xchg
lods
inc
out
lcall
mov
stc
mov
cmpsb
mov
push
scas
or
jmp
lret
adc
jg
push
hlt
xchg
adc
push
aas
pusha
cmp
pop
add
cmp
rclb
pusha
push
jbe
fadds
iret
aad
xchg
cmpl
push
into
into
clc
mov
adc
es
push
pop
xchg
out
ret
pop
push
xor
ret
fcmovnbe
cmpsb
jb
ret
lret
xchg
sahf
add
ror
std
mov
cli
mov
lods
xor
movsb
pop
inc
mov
nop
test
add
sbb
jl
push
lock
mov
adcb
insl
xchg
inc
inc
movsb
sahf
xchg
rorb
jnp
hlt
dec
adc
insl
leave
lods
push
ret
inc
aad
jo
arpl
lock
mov
test
loopne
inc
in
mov
rorb
enter
jne
cli
jle
mov
jecxz
mull
mov
movsb
mov
gs
mov
fwait
or
stos
sub
cltd
and
mov
aam
xchg
mov
add
add
mov
push
inc
fsubr
arpl
shrl
inc
cltd
rcrb
or
hlt
or
shl
aad
jb
daa
scas
icebp
ret
cmp
setg
js
push
or
sub
pop
scas
aas
mov
adc
sub
das
sbb
adc
cli
jp
jmp
xchg
mov
ljmp
and
mov
add
out
or
mov
into
mov
xchg
out
inc
loope
insl
or
pop
push
fcomp
mov
test
inc
mov
push
add
std
xchg
punpckhwd
bound
mov
jge
push
dec
add
xor
xor
mov
aaa
sarb
repz
lret
cs
rolb
mov
es
lods
aam
pop
ret
rol
add
dec
dec
rolb
and
add
fidivrl
movsb
mov
xchg
jae
shll
movsb
jno
arpl
xor
fadds
lea
leave
mov
shr
sub
aam
fldenv
imul
scas
add
mov
ljmp
cmp
inc
or
lcall
xchg
and
xchg
add
add
inc
les
js
pop
aaa
push
lret
adc
mov
or
and
test
add
out
pop
push
cs
int3
aaa
orl
ss
sbb
outsb
popa
dec
aad
idiv
out
gs
cmp
push
imul
dec
lret
pop
pop
incb
sub
out
push
jb
xchg
sbb
mov
xchg
add
mov
lcall
movsl
pop
stos
icebp
or
test
mov
hlt
fildll
ret
xor
in
ficoml
sub
mov
adcl
dec
mov
jp
jo
xor
mov
repz
or
inc
or
lea
push
adc
mov
addl
or
rorb
icebp
fmul
mov
test
js
rol
push
dec
fildll
and
push
fnclex
sti
mov
lds
push
push
subl
addr16
pop
jg
xor
mov
fs
loopw
adc
sbb
addl
test
dec
or
push
cwtl
xchg
pushf
adc
popa
call
outsb
popf
mov
mov
cmp
inc
in
cmpsl
inc
cwtl
fwait
push
aas
mov
fisttpll
and
das
mov
jb
pop
push
cmc
and
pop
loop
lock
negb
xor
stos
lret
dec
xchg
int
mov
cmp
jae,pt
ret
in
movsb
cld
mov
sub
ds
mov
push
xchg
sbb
iret
fs
loop
dec
pop
pop
xlat
or
lods
mov
loopne,pt
xchg
xchg
out
mov
add
in
leave
into
add
int
imul
add
and
jo
xor
stos
dec
and
jne
pop
xchg
inc
and
adc
mov
loopne
in
int3
int3
cmp
ficompl
push
push
cmp
sbb
sti
jmp
jp
and
lret
inc
aam
int
adc
xchg
adc
enter
cwtl
lahf
test
inc
sbbb
or
pop
pop
jb
mov
mov
imul
and
add
out
shll
sbb
loopne
inc
test
add
aam
lret
fs
lods
mov
int3
push
cmpsl
lea
xchg
repz
xchg
in
inc
sub
decb
push
icebp
cwtl
inc
test
fisubrs
push
repz
faddl
lcall
sbb
and
xor
push
lret
js
jnp
icebp
test
jae
sub
pop
xchg
out
mov
fiaddl
lcall
imul
mov
xchg
adc
mov
imul
in
int
push
add
sub
sti
arpl
call
js
adc
shll
pop
and
fisttpl
inc
pop
push
popf
flds
inc
insb
jbe
push
lret
sbb
jae
xor
add
pop
sti
ja
add
mov
mov
mov
fistps
lods
jne,pn
inc
std
pop
cmp
xchg
xchg
movb
insl
adc
xchg
jb
jp
das
insb
mov
in
out
movsb
adc
and
pop
mov
mov
out
xor
movl
sbb
pop
ljmp
movsl
test
pop
pop
ret
jp
cli
pop
xor
movsb
cmp
sarb
add
mov
std
ror
movsl
add
clc
call
stc
iret
cmp
sub
adc
popf
pop
xchg
loopne
cld
ljmp
pushf
ret
xchg
stos
clc
rcll
aam
in
cmp
sahf
and
jg
jbe
cmp
inc
and
in
and
sbb
inc
mov
cmp
lods
call
pop
stc
lcall
sbb
inc
andb
push
and
sbb
lret
pop
or
outsl
in
aad
dec
loop
fs
jle
mov
lret
xchg
idivl
filds
aad
inc
cmp
mov
push
sahf
or
xchg
sub
lods
std
sub
mov
mov
test
daa
mov
mov
cmp
cmp
test
or
ss
test
hlt
call
sub
nop
add
pop
add
dec
loope
loopne
rcl
iret
mov
push
jge
rcll
mov
out
jl
fisttps
out
push
jb
jp
test
and
pop
pop
and
or
mov
xor
jae
lret
les
push
cmp
sub
movb
mov
fwait
mov
mov
xchg
test
sub
cmpsl
in
jecxz
jg
jo
add
addb
and
sbb
or
add
ret
aad
or
adc
je
movsl
xor
outsl
lods
adc
js
pop
fsubrs
popa
dec
in
pop
xor
adc
es
xchg
pop
and
dec
sarl
data16
lock
out
add
scas
sub
sub
fs
notl
xchg
fdivrs
scas
sub
int3
ss
push
leave
xor
in
ss
fmull
loope
xor
jbe
mov
cmp
jl
rclb
pushf
test
cwtl
jbe
push
jae
mov
sbb
dec
xchg
mov
mov
std
adc
and
mov
push
je
ljmp
ds
lods
out
shlb
push
fadds
sbb
jae
mov
test
pop
int3
repnz
jge
pop
rdtsc
scas
andl
shlb
mov
test
divb
mov
jge
xchg
in
rcrl
ficoml
adc
and
jl
inc
adc
pop
dec
clc
lds
adc
sub
fiadds
push
scas
inc
push
icebp
push
push
add
jns
cmp
cltd
mov
or
mov
scas
pop
insb
push
cmp
aam
cwtl
sahf
xor
and
test
out
sbb
push
sahf
pop
xor
jo
hlt
lahf
mov
ret
mov
xchg
mov
scas
add
aam
mov
nop
and
frstor
ja
jb
jg
and
leave
js
inc
std
sahf
push
mov
insl
imul
inc
js
xchg
adc
push
and
sub
in
sbb
popf
cmc
mov
xor
xchg
xchg
stc
movsb
push
cmp
repz
repz
sub
fiadds
mov
sbb
orl
negb
arpl
lock
pop
mov
movsl
ss
lcall
xchg
pop
scas
fists
push
add
mov
xchg
sub
cmpsl
push
xchg
fmuls
es
inc
dec
scas
add
das
xchg
dec
leave
adc
sub
fcmovu
stos
dec
es
ds
scas
insb
xor
mov
jmp
out
out
mov
lock
pop
rolb
nop
jecxz
scas
and
dec
mulb
pop
rolb
sahf
or
mov
mov
dec
arpl
hlt
push
in
adc
lds
inc
cmp
sbb
daa
add
ljmp
fs
aam
ret
lea
test
add
push
jo
mov
pop
xor
adc
fprem
mov
xor
dec
stos
in
jae
js
or
dec
mov
mov
and
pop
movsb
mov
mov
inc
js
repz
mov
dec
insb
push
mov
jb
adc
test
add
adc
xor
jle
sub
loopne
cmp
mov
dec
inc
hlt
mov
int
jne
fsubl
adc
xlat
rcl
imul
adc
sbb
cmp
je
pusha
fdivr
mov
popa
mov
mov
aas
aaa
push
cmp
xor
inc
es
test
dec
pop
inc
inc
dec
mov
cltd
rorb
push
pop
cmp
and
push
fnsave
xor
out
mov
popa
push
out
xor
leave
cmp
cs
gs
push
or
or
mov
repnz
cld
sbb
mov
mov
out
push
push
inc
mov
add
push
ret
in
outsb
adc
jmp
andl
sahf
gs
mov
pop
cs
mov
fstl
clc
in
imul
sub
imul
xor
xchg
mov
lcall
sub
mov
sahf
dec
daa
or
mov
ss
sub
shl
loopne
insl
adc
inc
dec
outsl
sbb
xorl
clc
xchg
and
outsb
push
xchg
jecxz
sbb
leave
das
scas
add
inc
repz
insb
or
insl
out
push
addl
jae
aam
pop
fcoms
xchg
jnp
pop
cmpl
push
lahf
es
jnp
and
movsl
push
mov
mov
dec
adc
add
test
shll
pop
lods
or
cltd
nop
mov
adc
jb
pusha
inc
insl
stos
lret
sbb
fdivr
and
mov
xor
inc
int3
pop
in
add
arpl
sub
outsw
test
push
jno
inc
xor
xchg
dec
xchg
sub
daa
inc
shl
pop
fimuls
sub
int3
cmp
repz
cmp
adc
jge
cltd
pushf
dec
dec
sbbb
fstpt
movsl
fadds
es
mov
adc
stc
loopne
sub
sbb
jp
fsubrl
mov
mov
adc
testl
clc
rcl
fmull
fcomp
adc
mov
and
push
es
lahf
cmp
jg
mulps
lret
repz
repz
jb
outsl
mov
enter
add
mov
int
mov
adc
pop
push
add
cmc
sub
adc
push
sub
xchg
rcll
sarb
jmp
in
icebp
dec
clc
push
jno
inc
push
int
pop
add
sub
test
fwait
add
pushf
inc
jnp
mov
adc
inc
leave
jns
pusha
js
addl
in
bswap
jne
das
pop
cmp
lret
fwait
adc
ret
movsl
and
jns
stos
mov
iret
repz
leave
mov
movsb
sbb
mov
push
jae
aam
dec
pop
aam
mov
inc
cmpsl
nop
jbe
adc
rcrb
popa
lods
pop
mov
xlat
fsts
test
inc
insb
jl
lods
js
shr
in
xlat
loop
sub
shrl
xchg
mov
fwait
mov
pop
das
jo
push
les
out
movsl
xor
fwait
push
xlat
das
imul
call
shll
and
or
dec
mov
cmpsl
rcrb
push
or
sbb
adc
mov
imul
or
hlt
cs
cwtl
mov
daa
mov
mov
jns
fdivrl
sub
sti
xchg
das
jge
fcoml
paddusb
push
push
sarl
sub
movsl
stc
lret
or
int
inc
ret
jge
and
leave
push
dec
data16
xor
and
push
pop
sahf
cwtl
sbbl
and
push
inc
dec
mov
cmp
jmp
ud2
scas
jns
loop
popa
test
xlat
mov
in
jb
jb
sub
pop
cld
call
xor
xor
into
adc
jns
mov
enter
cmpsb
add
jmp
cmp
imul
mov
cmp
push
int
mov
lcall
and
and
in
cmc
in
stos
testl
daa
jge
and
sub
adc
mov
clc
mov
outsb
xchg
aam
in
push
sub
lods
std
js
dec
jnp
push
mov
push
inc
adc
pushf
jl
cli
sti
pop
jmp
jp
fidivs
lea
jmp
mov
add
movsb
lds
push
sbb
fs
in
adc
add
pop
in
rclb
xchg
rorb
arpl
inc
xchg
jl
cld
jge
outsl
sub
lock
lods
sbb
or
nop
enter
aaa
loopne
dec
out
fwait
enter
loope
mov
add
push
mov
xor
cltd
pop
js
test
inc
and
pop
filds
or
mov
jnp
cmc
xchg
mull
mov
sbb
test
lahf
out
pop
popf
pop
jno
pop
cmpsl
pop
gs
push
pop
pushf
push
std
rcl
pop
dec
fsubp
and
sbb
daa
cmp
xor
jne
mov
mov
xor
jecxz
faddl
ret
jo
and
nop
jbe
xchg
jbe
outsb
and
test
mov
push
dec
xchg
int
inc
call
shlb
push
mov
in
mov
lahf
adc
test
sub
push
pop
cmc
mov
xor
repz
adc
adc
add
test
mov
xchg
adc
ds
out
cmp
nop
aam
mov
xchg
pop
dec
push
sub
ds
ljmp
call
packuswb
das
es
pop
sub
cmc
scas
mov
lcall
lods
pop
es
int3
pop
and
jl
mov
mov
dec
sbb
mov
cmc
out
hlt
sub
mul
repnz
nop
xchg
xor
adcl
adc
aaa
aas
adc
stos
xchg
sub
adc
add
or
out
loopne
dec
nop
mov
cltd
lahf
scas
and
fldt
sub
mov
repnz
fisttpll
sub
out
sub
in
jb
clc
xor
mov
ftst
jmp
fwait
pop
shlb
and
sub
add
mov
dec
jbe
lret
inc
sub
add
rorl
pop
mov
push
or
cmp
push
xor
add
je
imul
out
adc
inc
jmp
xlat
int3
add
sbb
lahf
push
pop
and
push
push
jb
fs
mov
ljmp
je
mov
test
or
aam
jne
loope
push
inc
jnp
jno
pusha
mov
scas
dec
add
das
push
inc
dec
push
lods
add
add
inc
leave
mov
cltd
inc
push
rorb
push
sbb
jle
stos
fiadds
mov
das
mov
jns
lcall
or
or
xor
roll
sub
je
sub
cmp
push
jns
inc
call
popf
pop
add
or
popa
loopne
shll
pop
movsb
mov
pop
sarl
add
mov
stc
jo
cli
mov
mov
movl
pop
mov
popa
xchg
add
cmpsl
mov
faddl
add
pop
add
fldcw
mov
mov
lahf
fidivrl
add
inc
xchg
adc
sub
cmp
pushf
loop
mov
push
and
fnsave
rcl
push
in
jl
sbb
sub
lahf
enter
into
stos
pop
and
push
lea
mulb
inc
rcrl
sub
bound
insl
add
outsb
add
inc
nop
nop
cld
mov
in
hlt
xchg
and
fisttpl
leave
shl
pop
cmova
daa
jnp
xchg
aad
loop
movsl
sub
dec
lret
sub
mov
shll
js
jp
xchg
push
addl
in
inc
mov
mov
aad
adc
mov
shlb
jns
xor
adc
fidivl
imul
mov
xor
inc
test
mov
in
out
cld
xchg
mov
fsub
or
data16
insb
jge
inc
scas
leave
dec
sbb
and
sub
popf
push
addr16
jmp
add
dec
pop
mov
push
dec
push
data16
jnp
inc
loop
cmp
je
lods
pop
popa
pop
mov
sbb
jmp
addr16
subb
fadd
pop
push
push
cmc
dec
mov
cmp
mov
inc
push
das
imul
jecxz
jp
bound
push
out
push
rorl
stos
inc
xor
les
jmp
inc
fnsave
push
inc
repz
mov
jae
pop
add
fists
sbb
xchg
xor
enterw
testl
or
std
push
cmp
shr
jbe
add
fldcw
pusha
arpl
fidivrs
push
lods
mov
inc
sahf
push
cld
lret
cs
movsw
inc
lock
iret
addb
push
sub
int3
stos
push
jae
test
sbb
xor
aas
mov
daa
adc
sbb
std
xchg
std
fcoms
dec
mov
cltd
popa
xchg
andb
xchg
add
lods
test
cmp
pop
loop
adc
js
push
in
je
cmpsb
test
mov
arpl
stc
or
sub
xchg
mov
jecxz
ja
sbb
and
nop
jns
jns
fmul
mov
dec
aam
or
int3
mov
lods
xor
insl
fcmovnu
lret
lds
push
movsb
test
gs
scas
xchg
xor
xor
pop
xchg
push
aas
sbb
push
ficomps
gs
sbb
or
adc
inc
ds
fscale
fcomps
jg
pop
add
mov
jb
mov
mov
jno
sub
pop
jne
push
xchg
lods
shrl
sahf
inc
mov
iret
adc
lahf
push
test
popf
cmpsl
ret
test
push
insl
inc
int
lods
jne
sbb
leave
adcl
scas
add
lcall
rcl
mov
pop
adc
loop
mov
outsl
mov
push
or
dec
aaa
add
sub
outsl
into
add
movsl
jo
mov
xchg
sbb
addr16
pop
sbb
addr16
inc
inc
fwait
rclb
sub
jg
leave
inc
psubusw
std
add
rcrl
push
aad
push
jbe
imul
das
mov
push
movsl
pop
or
mov
dec
rcr
sbb
sbb
inc
fidivs
sti
jne
mov
ljmp
xor
shrl
mov
iret
fisttps
std
popf
adc
mov
test
or
repz
cmp
cmp
and
pop
ds
test
jbe
scas
vsqrtsd
in
loopne
iret
jno
shll
lods
mov
push
js
popa
push
mov
movsl
dec
or
cmpsl
jle
or
adc
adc
les
inc
push
gs
jp
movsl
flds
mov
scas
cli
pop
xchg
xchg
lea
jo
lock
jnp
inc
arpl
sahf
adc
outsl
nop
imulb
or
dec
into
movsb
mov
rcll
push
inc
ljmp
shl
inc
loop
add
mov
scas
ret
xor
test
lcall
dec
mov
sbb
jl
rcrl
imulb
shlb
mov
in
in
xor
add
cli
fistl
add
xlat
icebp
jns
xchg
daa
cltd
iret
push
dec
imul
pop
insl
outsl
and
mov
sbbb
or
push
pop
rcrb
imul
lods
movsb
cmpsb
sbb
sbb
sbb
fsubrl
ds
and
inc
pop
and
ret
xchg
scas
push
imul
add
cld
lock
or
xchg
ret
cmp
xor
mov
jge
cmpsl
mov
and
xor
mov
fidivl
sub
aad
push
in
mov
fs
push
cli
mov
jp
add
cmp
add
jecxz
mov
gs
outsl
lcall
add
push
xchg
dec
mov
xchg
xor
push
arpl
faddp
pop
shl
push
push
loopne
add
xchg
inc
fmuls
loopne
mov
enter
jo
pop
mov
sub
popa
daa
hlt
shll
xchg
jle
sbb
imul
lea
and
mov
mov
pop
mov
lret
loopne
fcos
mov
pop
sub
test
push
sub
xchg
cmp
add
and
pusha
jge
pop
notl
repz
icebp
enter
xchg
xor
adc
push
adc
popl
fs
mov
imul
cli
fs
or
scas
lock
pop
and
enter
test
int
fstpl
xchg
loope
pop
xchg
cli
xchg
jnp
cwtl
sarl
xchg
cmpsl
xlat
out
imul
lret
push
js
lods
bound
pushf
mov
call
push
push
add
adc
xor
push
js
xor
in
das
inc
lds
push
fbstp
or
lods
push
mov
ljmp
or
adc
loopne
je
adc
or
or
popf
lahf
pop
mov
jl
fidivs
sahf
inc
enter
jbe
ds
sub
and
mov
cmc
sub
test
or
and
and
xlat
or
daa
sbb
mov
in
mov
mov
test
cmovno
jae
popa
sbb
and
cmpb
inc
std
or
or
and
in
inc
in
js
add
das
test
push
xorb
cmp
inc
testl
jb
call
mov
mov
and
lds
pop
mov
ja
test
lds
sub
xchg
fnsave
sbb
jno
jle
aad
icebp
lcall
dec
sub
push
ret
adc
push
inc
inc
push
cmp
sbb
sbb
ficompl
push
es
stc
mov
sub
add
psubusw
lret
nop
sahf
sbb
cli
adc
push
cmp
sbb
mov
mov
push
jno
lret
imul
popa
sbb
gs
jnp
sahf
cs
out
mov
mov
rcr
daa
mov
pop
icebp
iret
xchg
pop
push
in
or
aas
inc
push
dec
jno
test
mov
add
mov
pop
addr16
sub
dec
mov
mov
xchg
jge
rcr
pop
push
ret
sub
loope
call
mov
fistpll
ss
mov
lahf
lock
sbb
adc
jno
jecxz
int3
pop
icebp
sbb
cmpsl
pop
dec
mov
aaa
cli
jne
jp
ror
or
add
std
lret
or
fcompl
pop
scas
rcrl
les
call
pop
push
pop
xchg
xor
push
sbb
and
aas
out
mov
cmp
enter
jns
test
dec
shll
dec
ja
lret
scas
aad
inc
lock
mov
call
cs
mov
mov
aad
adc
xor
scas
push
lret
and
pop
cmp
stos
inc
lret
notl
mov
sub
mov
loopne
dec
or
add
std
repnz
jb
inc
fcompl
add
insb
andb
cmpsb
aas
adc
iret
adc
orb
mov
sbbl
push
shlb
dec
cwtl
lret
arpl
fldl
adc
fwait
jl
mov
and
hlt
insb
pop
cmp
rcrb
sbb
pop
pop
cltd
daa
fwait
in
cmp
sub
cld
push
repz
lock
in
popf
mov
or
pop
addr16
ljmp
int3
in
or
ja
lahf
dec
repnz
sub
dec
arpl
dec
lahf
call
out
iret
inc
pop
ret
and
mov
mov
xchg
xchg
and
dec
daa
lock
adc
repnz
dec
stc
sub
and
aad
sub
rcll
fwait
inc
rcr
jnp
iret
and
mov
jmp
test
add
lret
clc
repz
ret
inc
ljmp
mov
loope
jb
inc
loop
int
dec
test
andl
sub
lcall
mov
xor
inc
add
push
in
cwtl
inc
mov
lahf
fsubr
popa
cli
cmpsb
ret
stos
test
sbb
ljmp
xchg
ja
addl
ss
ret
cli
sti
xor
jle
push
cli
pop
fdivp
add
mov
sbb
mov
or
pop
outsl
shlb
pop
pushl
push
adc
mov
push
stos
cmc
in
scas
mov
dec
sub
inc
xor
push
bound
dec
loopne
push
nop
int
lea
ficomps
adc
mov
jp
cwtl
xchg
pop
int3
or
jae
repz
jne
pop
lock
clc
sbb
add
aam
push
mov
push
jle
mov
jnp
aam
stc
push
into
xchg
mov
mov
push
dec
iret
xor
mul
pop
fsubrl
pop
or
jae
inc
mov
testl
fstpl
ror
scas
or
aaa
cltd
lock
sahf
xor
xlat
cmp
jb
into
std
ds
pop
roll
in
iret
push
mov
push
jmp
inc
sub
das
xchg
pop
sahf
mov
cmp
push
arpl
in
xchg
or
jnp
cld
lods
cli
fiadds
add
mov
jno
enter
cmpsb
mov
adc
sub
mov
mov
test
insl
lds
ljmp
test
mov
add
jp
inc
aas
fildl
push
in
test
test
lret
mov
iret
loopne
push
outsl
or
loope
movsl
cmp
xchg
push
mov
xchg
in
mov
push
cmp
lea
or
dec
lret
mov
xchg
jne
adc
mov
sub
arpl
and
fsubr
jb
cmp
and
sbb
sub
mov
test
test
outsl
add
mov
xchg
inc
adc
mov
cmp
aas
sub
mov
das
notb
sbb
inc
lcall
pop
js
ljmp
ljmp
es
inc
lret
insl
pop
ss
mov
pop
andl
dec
add
dec
pop
add
add
inc
mov
push
aaa
mov
mov
hlt
ja
adc
mov
xchg
mov
lret
cmp
sub
and
hlt
shrl
jmp
sbb
mov
or
xlat
sbb
sub
imul
ja
popf
mov
and
insb
or
repz
in
push
cmp
addl
cmp
sub
adc
push
lret
push
test
into
lahf
cmpsl
jl
sub
stos
xchg
or
mov
fnsave
loopne
push
icebp
nop
lcall
clc
dec
sub
xchg
pop
push
push
sbb
and
pusha
loope
push
jmp
jle
mov
cs
push
gs
inc
popa
push
push
fstpt
addb
xor
filds
test
das
iret
aas
jecxz
test
pop
mov
loope
inc
jno
int3
add
or
jge
or
shlb
push
stc
outsb
fidivs
sbb
cltd
outsl
rorb
or
mov
popf
adc
or
xchg
insl
mov
sbb
fs
sti
clc
sbbl
stc
mov
lcall
fucom
cmp
test
mov
pop
xlat
imul
push
xor
out
inc
sbb
adcb
sub
push
dec
in
nop
scas
idivb
xchg
dec
ret
dec
or
js
xchg
outsl
pop
xchg
addr16
sub
pop
inc
jle
dec
in
adc
adc
xor
jo
pop
mov
or
or
adc
dec
fistps
iret
cld
pop
lahf
mov
out
mov
mov
jbe
or
xor
clc
jb
xlat
jno
test
out
add
mov
nop
jo
add
mov
push
push
mov
fsubs
sbb
pop
mov
mov
out
sub
call
jbe
cmp
loopne
stc
and
fwait
mov
or
aaa
jo
push
ds
fiaddl
adc
sub
fiaddl
call
add
outsl
add
lret
imul
js
mov
xchg
pop
fidivrs
popf
sahf
and
jle
pop
loopne
sti
nop
rcll
pushf
jmp
mov
shll
dec
push
sbb
gs
lret
lea
inc
jp
enter
sbb
and
adc
mov
sbb
outsl
inc
mov
mov
jmp
fstl
gs
cmc
pushf
int3
pop
test
pusha
sub
rcll
lea
mov
push
inc
adc
int
push
adc
les
call
bound
mov
cmp
mov
cld
mov
das
pop
dec
mov
jb
push
in
int
push
imul
ss
inc
sarl
cmp
dec
pop
mov
mov
mov
sbbl
ret
mov
sbb
sbb
mov
lock
test
push
jmp
bound
cmp
seto
push
mov
push
dec
dec
adc
push
outsl
lock
in
push
push
mov
pop
jecxz
cld
shll
push
xor
fcompl
ds
fwait
push
in
and
je
pusha
inc
in
push
rorb
sti
cmp
dec
mov
fnstsw
aas
inc
outsl
and
repz
lahf
xchg
inc
leave
icebp
sub
stos
mov
xchg
fadd
out
jmp
xlat
pop
sub
pop
pop
cli
mov
lds
add
rclb
xor
test
xor
mov
jne
cs
std
jge
fimull
dec
add
ficomps
test
repnz
mov
fcomps
int
lds
xchg
enter
cmpsb
xchg
js
xchg
leave
jno
or
mov
ds
add
inc
add
fists
mov
mov
dec
daa
lahf
push
mov
int
or
jge
mov
dec
push
dec
sbb
pop
cmpsb
ss
adc
cmp
push
cmp
repnz
cmpl
mov
mov
xor
inc
in
sar
mov
ret
mov
jo
add
xchg
mov
test
dec
push
cmp
or
pop
adc
pop
inc
push
lret
sub
mov
xor
movsb
mov
imul
in
add
das
jge
mov
lcall
push
daa
dec
ljmp
inc
push
jle
shl
mov
jp
jns
push
and
movl
sti
repnz
fwait
std
jbe
xchg
fucomip
pop
loop
into
inc
out
push
jg
mov
fstl
leave
imul
arpl
insb
popf
loope
repnz
push
adc
adc
dec
add
iret
cld
out
cld
add
sarl
arpl
fsts
mov
or
ret
repz
sbb
push
jmp
lahf
mov
cmp
pop
fisubs
cs
inc
mov
add
xchg
mov
orl
jno
fidivrs
sub
ljmp
mov
push
fistpll
mov
lods
add
push
pop
push
inc
clc
lock
outsb
mov
bound
sub
test
jl
xchg
adc
ret
ds
test
pop
mov
jecxz
push
jge
cmp
mov
mov
push
sub
popf
arpl
mov
lds
dec
jno
dec
jno
pop
mov
jne
jne
jmp
mov
sbb
fcmovnu
mull
std
rorl
xor
and
mov
popa
ljmp
adc
inc
dec
push
repnz
cwtl
and
push
cmp
dec
clc
mov
cmp
mov
sbb
popf
push
daa
add
fsqrt
jecxz
sub
or
xchg
repnz
pop
mov
in
addr16
lds
outsb
pop
adc
push
idiv
pop
aaa
and
xor
adc
inc
fidivrs
dec
iret
inc
cmpsl
popa
xchg
aad
ja
inc
repz
mov
jbe
pop
inc
and
xor
mov
pop
adc
js
fimuls
lods
cmp
imul
jo
pop
ret
mov
rorl
aad
ss
dec
mull
cmpsl
fcmovne
and
es
xchg
std
add
adc
insb
mov
aas
enter
mov
arpl
mov
lock
or
sbb
in
add
pop
add
int
adc
dec
adc
insl
mov
and
insb
es
push
and
cmp
xchg
inc
test
mov
mov
cmp
loop
mov
and
clc
push
daa
dec
sub
jg
xchg
orl
ret
mov
cld
sub
ss
aad
test
xlat
push
imul
pusha
mov
jb
jg
dec
leave
and
pop
add
pop
xchg
or
aas
jb
inc
andb
pop
adc
scas
lahf
jns
lret
sbb
aas
mov
push
push
mov
jne
pop
adc
cmpsl
loope
cmp
stos
iret
ret
or
ja
cmp
popf
pop
xchg
out
in
popaw
sti
testb
int3
and
pop
xchg
rorl
jno
aam
pop
jle
jmp
or
sti
stos
push
and
pusha
dec
cld
add
jae
out
adc
stos
jmp
popa
mov
iret
push
pusha
push
call
shrl
repnz
sbbl
mov
sbb
mov
mov
outsl
dec
xchg
xor
arpl
pop
push
dec
jge
icebp
add
xor
dec
dec
sub
test
das
add
cmp
and
cmp
loopne
sub
lods
mov
in
imull
mov
fstpt
push
leave
inc
push
pop
dec
push
or
add
add
or
cmp
pop
and
loopne
pop
pop
push
jnp
or
adc
lods
arpl
sbbb
test
adc
sub
mov
stos
and
std
cmpsb
inc
sub
aaa
sub
add
push
out
out
mov
rcr
pushf
daa
jbe
ja
pop
loop
sbb
rcrl
mov
adc
xchg
inc
xchg
inc
imul
mov
adc
out
push
outsl
mov
push
pop
add
mov
cmc
ret
lds
ficoms
movsb
mov
inc
xchg
sbb
mov
jmp
in
jb
and
lret
ja
push
add
adcl
xchg
xchg
lret
out
mov
jle
mov
aad
inc
and
dec
xchg
jbe
decl
xchg
and
fcompl
xchg
mov
push
adc
adcl
insl
jp
lods
push
pop
cltd
idivl
inc
and
js
xchg
repnz
xorb
xchg
fdivr
icebp
call
cmc
cmpsb
jmp
roll
add
ljmp
pop
andb
dec
mov
jbe
or
inc
or
bound
sbb
jg
dec
push
aas
loopne
dec
xchg
rcl
pop
ljmp
xchg
repz
je
mov
leave
std
cmpsl
ljmp
stc
jmp
bound
shll
inc
push
roll
dec
pushf
mov
popf
in
dec
push
add
sbb
add
add
push
ret
cmpsb
stos
xchg
arpl
addl
hlt
xchg
stos
ljmp
fidivrs
pop
loop
popa
and
dec
xchg
scas
mov
fdivrp
lea
nop
imul
hlt
loop
or
pushf
jmp
scas
ds
sbb
hlt
inc
lock
je
faddl
icebp
shlb
pop
sbb
cld
push
jp
addr16
push
inc
dec
icebp
repnz
lock
adc
sbb
sbbb
imul
mov
jnp
and
out
dec
loope
ret
pop
sub
xor
pushf
enter
lds
stos
mov
in
mov
cmpsb
cmp
lock
mov
cld
stc
rclb
loop
pop
js
fimuls
les
sub
in
enter
arpl
icebp
add
inc
outsl
inc
repz
push
loope
fisubrs
adc
jbe
mov
dec
les
dec
mov
mov
pop
dec
lock
mov
lahf
pop
cld
push
mov
jno,pn
pop
cwtl
rcr
push
mov
fsubr
shll
inc
fimuls
push
in
fistpll
in
xor
push
adc
adc
mov
test
push
shlb
add
pop
shl
mov
mov
loopne
out
add
bound
nop
jmp
mov
mov
popa
cld
sbb
sti
sbbb
outsl
fs
jle
jecxz
mov
and
and
lret
add
fnstenv
int
dec
pop
xchg
push
mov
xchg
push
xchg
pushf
dec
jp
shrl
dec
sub
bound
or
inc
adc
xchg
insl
adc
push
mov
pop
push
inc
adc
jb
mov
cwtl
xchg
cmove
sbbb
cmp
and
gs
fcompl
cmp
ret
push
mov
mov
movsb
jb
mov
insb
add
xchg
and
cmp
pop
ljmp
jnp
add
out
stos
hlt
jno
negb
mov
int
cmp
mov
repz
scas
loop
push
fisttpl
clc
pop
repnz
fstps
cmc
lea
xor
lock
insb
nop
sbb
mov
xor
add
cmpsb
inc
fstpt
cmp
das
nop
aam
push
xor
gs
cmp
cld
push
scas
pop
ja
shrb
les
cmp
xchg
pop
jbe
out
fs
mov
sbb
or
inc
jbe
adc
push
xor
inc
cmpsl
dec
shl
add
ljmp
xlat
mov
pop
fldz
data16
lock
and
loop
into
shll
cmp
adc
stos
push
out
cmp
jl
pop
mov
ja
inc
add
jb
inc
jns
jmp
xor
in
shl
add
popa
loopne
xchg
fdivs
mov
rcrb
popa
sbb
fsubs
mov
mov
mov
movd
fstp
dec
inc
jne
dec
xchg
fildll
or
mov
sbb
sbb
lret
push
push
imul
clc
stos
movsl
add
stc
les
aad
sub
xchg
push
sub
jo
lret
testl
sub
jg
xlat
pushf
das
data16
out
loope
nop
sbb
lods
mov
jge
test
daa
sbb
enter
subl
sbb
aas
add
ljmp
jnp
xor
dec
movsb
mov
arpl
loopne
movsb
mov
outsb
movsl
mov
pop
enter
jecxz
xor
push
ficoml
in
sbb
sbb
bnd
std
mov
push
add
lcall
cmpsl
dec
pop
jle,pt
add
cltd
mov
out
aam
ficoml
push
aaa
test
mov
sbb
orb
in
add
cmpsl
cmp
sahf
sub
mov
mov
andb
leave
jp
ss
push
cwtl
jnp
pop
pop
mov
sub
add
sahf
bts
ja
arpl
stos
cmp
xor
mov
xor
cmp
cmp
iret
in
rcrl
jle
sub
ss
test
imul
dec
xor
push
jge
into
divb
jnp
call
hlt
cmp
dec
loopne
shr
push
repz
mov
enter
shrb
inc
dec
arpl
arpl
loope
fst
in
imul
sbb
call
rcl
jnp
pop
mov
iret
jmp
jge
dec
cmc
xchg
leavew
bound
jmp
push
push
sub
mov
in
dec
in
stc
jne
ret
insl
addb
ss
enter
repnz
push
ss
arpl
frstor
xor
xchg
pop
xor
fisubs
xor
sbb
lret
mov
pop
lahf
sub
test
lock
cmp
sbb
mov
jbe
loope
xchg
or
cmp
jecxz
out
jae
sbb
inc
xor
pop
add
movsl
out
sbb
loope
add
xlat
aad
sbb
xchg
mov
xor
not
insb
bound
adcl
out
xor
mov
add
sbb
inc
inc
lahf
rcr
jbe
inc
cli
andl
icebp
push
mov
xchg
pusha
and
outsb
inc
out
sti
sbb
push
mov
aad
test
pop
xor
xor
push
aas
jp
inc
lds
xchg
adc
loopne
movsb
pop
and
jmp
insl
clc
enter
mov
repnz
in
mov
and
or
mov
in
mov
testl
pop
shl
test
mov
dec
test
jno
lret
push
xor
sbb
lcall
lret
aaa
sbb
or
enter
lret
sti
cmc
daa
fsubrs
std
fwait
dec
xchg
xor
lock
jo
ja
lock
mull
dec
sti
outsl
or
mov
scas
or
xor
es
adc
xor
out
xchg
pop
xchg
ja
cmp
inc
repnz
jp
frstor
movsb
lret
xchg
dec
mov
pop
cmp
and
test
out
scas
xchg
push
pop
push
mov
sti
stos
sahf
xorl
add
fwait
mov
sahf
ja
dec
loopne
sbb
cltd
push
stos
aad
pop
add
push
movsb
cwtl
in
stc
adcb
and
cmp
aad
aas
arpl
pusha
shrl
lock
jns
jmp
arpl
daa
lods
int
mov
popf
adc
mov
mov
in
mov
pusha
sbb
jnp
inc
xor
insb
imul
fcos
jbe
mov
dec
adc
jbe
shlb
jmp
xchg
iret
pop
mov
fbld
sub
push
std
imul
xor
sbb
dec
xchg
or
clc
sbb
out
adc
fmull
dec
adcb
add
jmp
jmp
ret
xor
out
push
sbb
aam
lret
add
cmp
cltd
push
inc
fdiv
stos
jecxz
scas
xchg
cmp
outsl
aas
stos
lods
or
leave
notb
and
push
lock
hlt
lret
jne
mov
pop
fsubs
mov
aas
movsb
out
jl
jns
icebp
fs
cmpsb
sbb
icebp
daa
jmp
push
and
inc
xor
mov
xor
sti
or
lahf
sbb
test
or
xchg
push
fldl
mov
int
push
cltd
pop
ffree
hlt
enter
and
add
inc
xchg
push
push
mov
rcrl
insb
gs
push
insb
mov
ljmp
cld
arpl
hlt
test
adcl
lods
mov
mov
mov
pop
push
pop
inc
xchg
pushf
jmp
idivl
je
sarl
jmp
mov
dec
xor
mov
gs
sbb
sbb
lock
imul
inc
sub
and
rcll
test
test
xor
out
inc
jo
cmpb
and
es
pop
pushf
jecxz
pop
rcrb
jmp
mov
and
add
xchg
fnstsw
xchg
mov
jmp
in
sbbb
repz
xchg
push
or
mov
cld
insl
xchg
movsl
repz
cli
mov
xchg
or
jno
jl
fldcw
xchg
daa
fwait
leave
fstp
and
daa
add
dec
push
cmpsl
or
xlat
iret
scas
arpl
cmpsl
add
jle
andl
push
xchg
jg
inc
fimuls
jecxz
mov
push
or
xorl
cmp
xchg
xchg
adc
push
sbb
pop
mov
mov
mov
xor
inc
imul
mov
push
mov
popf
sbbb
dec
negl
mov
cmpsb
fcmovnbe
lret
ja
push
jecxz
dec
inc
push
sbb
ja
and
push
pop
loope
cs
xchg
pop
inc
and
cmp
adc
movsl
pop
lahf
jmp
sub
jge
outsl
cmp
dec
pop
insb
jecxz
mov
mov
shrb
add
das
push
cmpsl
test
dec
pop
cwtl
orb
adc
sbb
add
insb
out
cli
lds
sbb
jl
int
aam
les
adc
mov
loop
inc
cli
out
xor
incb
jecxz
and
jns
dec
inc
out
sahf
fwait
inc
push
scas
pop
rcrl
sub
sub
pop
xlat
mov
insl
adc
xor
test
mov
mov
lds
ret
mov
enter
sbbl
movsl
mov
push
jne
and
xor
int3
scas
cmpsl
std
sbb
push
push
and
mov
lds
lret
adc
cmp
aas
ds
jmp
sbb
fwait
sbb
push
movsb
sub
or
stos
lock
cmp
out
xor
jnp
mov
inc
das
shrb
rolb
int3
add
sub
negl
inc
mov
mov
pop
addr16
adc
mov
inc
sbb
lods
pop
fmull
into
adc
bound
daa
mov
mov
adcl
dec
dec
or
fnstenv
jle
repz
ljmp
cmpsl
or
jnp
fsubl
mov
jbe
push
sbb
and
pushf
mov
jl
mov
repz
inc
mov
cli
push
mov
xchg
pop
mov
scas
push
mov
ret
loop
cmpsl
and
lcall
xor
jmp
sub
and
dec
add
cmp
je
shrb
movsl
xor
add
hlt
or
jmp
add
mov
xor
push
ja
pop
adc
jo
sbb
xor
scas
daa
aad
testb
icebp
adc
dec
popa
jnp
adc
xchg
push
add
data16
mov
in
rcrb
outsb
push
ljmp
adc
jbe
lds
enter
ss
xchg
and
or
dec
inc
jp
mulb
outsb
and
mov
push
cmp
sbb
vpaddd
mov
sbb
stc
adc
and
pop
xor
mov
xchg
sbb
lahf
jp
cld
mov
mov
jge
fcmovb
mov
and
loopne
mov
sbb
bound
imul
push
inc
mov
pop
mov
clc
aas
hlt
cmp
je
add
mov
jbe
fists
cmp
gs
jecxz
push
and
rcl
sahf
and
in
mov
lcall
stos
mov
ja
inc
test
ss
and
movsb
sub
cmp
adcb
andb
popa
jle
mov
addr16
in
sbb
cmp
dec
imul
sub
xchg
or
and
xchg
adc
xchg
push
xchg
pop
or
fisttpll
pop
inc
jne
popf
or
push
sbb
das
in
inc
fisubrl
roll
movsb
cmpb
imull
sub
mov
mov
mov
outsl
cwtl
jl
jl
daa
mov
in
sub
scas
mov
es
es
pop
jbe
call
dec
mov
sub
pop
jle
lret
nop
inc
jle
std
xchg
jae
test
jbe
sbbl
jp
rcl
dec
add
xor
sbb
lods
sysenter
imull
dec
adc
fmull
inc
xor
dec
pop
scas
aas
jl
hlt
mov
xchg
mov
scas
add
int3
pop
dec
push
insb
out
jge
andb
jno
pusha
pop
icebp
cwtl
arpl
fwait
ja
div
out
test
test
faddp
cmp
in
jnp
push
mov
pop
and
mov
dec
lret
mov
pop
inc
dec
add
mov
jno
movsb
cmp
pop
dec
cmp
add
insl
test
loopne
push
in
cli
mov
sub
or
push
inc
sahf
mov
sbb
pop
mov
adcl
pushf
icebp
jbe
adc
xor
cmp
sti
adc
mov
mov
orb
scas
push
popa
ret
lret
add
fcomp
out
push
scas
out
xchg
orb
xor
pop
inc
cltd
cmp
nop
xor
push
pop
push
lods
test
fwait
clc
pop
xor
mov
js
cmp
aad
stos
xchg
repnz
dec
jno
out
push
dec
sub
jno
call
mov
push
sub
rcr
pop
cmp
pop
cli
mov
lcall
mov
jb
pop
shll
cwtl
loop
shrb
bound
mov
lret
aam
mov
sub
fstps
cmpsb
mov
mov
mov
push
jne
pushf
bound
out
sbb
mov
adc
movsb
xchg
sarl
cmp
loope
enter
push
push
mov
jge
fwait
mov
push
pop
ds
inc
insb
mov
jle
outsb
lret
pop
aam
pop
mov
pop
dec
push
mov
or
xor
sahf
jge
fcomp
shl
pop
bound
dec
cmpsb
fst
mov
movsb
cwtl
hlt
lcall
sub
bound
push
test
pop
in
inc
lcall
cld
or
sub
mov
movsl
push
mov
dec
leave
inc
sbb
lcall
ds
push
popa
mov
int3
ljmp
enter
jg
xor
xchg
in
movsl
push
and
inc
jne
jo
mov
mov
stos
dec
mov
inc
and
xlat
repz
dec
inc
cmpsl
in
xchg
jne
lock
ds
scas
jne
dec
push
outsl
das
in
jb
pushf
mov
loope
test
xchg
dec
movsl
xor
shll
push
push
stc
in
subb
and
xor
movsl
push
adc
mov
and
aad
into
call
enter
frstor
push
cmp
inc
inc
push
mov
int3
sbb
sub
sub
ljmp
testl
or
sbb
mov
cmpsl
scas
insl
ret
jo
shlb
cli
sbb
in
ss
xchg
mov
jecxz
insl
sbb
andb
xchg
stc
cmpsb
scas
jp
unpcklps
push
adc
xor
sub
fistl
mov
incl
shl
or
xor
cs
movb
lahf
aas
jecxz
clc
stos
pop
repz
xor
nop
mov
or
mov
and
sub
sbb
mov
and
xor
or
test
pop
les
pop
lock
lea
or
les
mov
scas
mov
dec
lret
iret
loope
popa
iret
xor
inc
xlat
rcrb
inc
jns
mov
push
jno
cli
cmp
mov
jno
ds
loop
mov
xchg
cwtl
and
aad
sbbb
sub
icebp
out
push
sti
out
lcall
or
movsl
mov
fmul
or
xor
cmp
daa
mov
mov
sub
aam
ret
lock
ja
addr16
jp
mov
xor
pop
mov
jg
test
ret
sub
xchg
xor
aaa
mov
and
loope
adc
jnp
addr16
jbe
pop
test
mov
or
imul
inc
insb
mov
nop
jb
cmp
loop
xchg
stos
xchg
push
xor
or
dec
mov
jle
mov
imul
decl
rol
mov
std
into
dec
pop
sbb
push
mov
les
adc
ss
repz
ret
clc
add
dec
lret
arpl
xorb
das
jmp
lock
cmpb
stos
and
stc
repnz
bound
data16
pop
scas
aas
inc
inc
or
outsb
pop
add
jbe
aaa
loopne
jge
xor
pop
cmpsl
jmp
subb
daa
push
sti
test
aam
dec
push
xchg
jp
inc
xor
inc
loope
xchg
pop
mov
sahf
lahf
lret
xchg
mov
rcll
out
and
inc
jbe
shl
xchg
sub
add
scas
xlat
xor
adc
stc
fnstcw
sbb
dec
cmp
repnz
inc
xchg
clc
mov
out
push
cwtl
int
inc
fxch
stc
or
aam
int3
mov
and
icebp
push
repnz
shrb
fistl
jnp
addl
mov
cwtl
inc
cmp
gs
xchg
data16
push
ss
xor
nop
dec
mov
sub
mov
into
xchg
fstp
adc
mov
in
pop
cmc
aam
in
dec
aaa
adc
jae
xor
add
out
xor
aad
mov
lods
cmp
add
adc
dec
jae
dec
lods
das
cmp
sbb
cmpsl
fisttpll
sbb
adc
xchg
xor
xor
int3
jecxz
or
fmull
xor
loope
xchg
sbb
xchg
cmpsb
cmc
adc
push
sbb
mov
hlt
test
addr16
pop
xchg
popa
cmp
mov
add
mov
mov
scas
mov
mov
pop
test
movsl
xchg
fstp
mov
movsb
cmp
xor
jle
jbe
aam
add
push
push
loope
daa
xor
mov
out
into
push
fistl
movsb
addl
dec
mov
fs
sbb
jnp
stos
inc
mov
movsl
xor
daa
cli
or
roll
icebp
inc
lds
pushf
or
push
add
cmp
arpl
or
cmp
sub
sbb
push
mov
pop
cmc
pop
ljmp
in
sub
std
jg
iret
out
loop
imul
lock
or
xchg
inc
or
adc
pop
scas
mov
cli
mov
movsl
fistpll
and
push
imul
test
pop
push
stc
or
shlb
fcomi
pop
mov
mov
dec
jae
jbe
dec
ftst
loopne
ret
sahf
outsb
aas
push
stos
mov
jl
sub
mov
adc
ret
mov
test
inc
inc
cmpsl
jb
inc
xor
leave
jns
subl
dec
pop
pop
push
sub
or
addr16
inc
sub
mov
dec
dec
ss
notl
adc
push
test
xchg
xchg
cmp
sub
adc
dec
adcb
mov
xorl
jbe
add
repnz
or
dec
or
sub
or
xor
sub
in
jno
sbb
rcll
test
push
and
ja
test
or
push
xor
int
push
push
outsb
jnp
sbb
aam
push
lret
out
or
xabort
jns
cli
cwtl
adc
stos
xor
cmc
js
adc
sub
mov
shr
mov
sub
cmpsb
movsl
movsl
mov
push
jl
popa
sti
jge
cmp
sbb
xor
sbb
daa
jo
lea
xchg
leave
ret
aas
xchg
xor
loop
mov
inc
mov
fiaddl
pushf
lahf
aaa
loop
pop
inc
test
scas
jg
push
loopne
push
or
loop
sbb
mov
cli
loope
mov
jno
adc
ja
lock
rorl
sahf
in
ret
sub
jp
aad
dec
jle
ret
jns
xor
daa
fmuls
dec
xor
add
mov
pop
inc
and
xorl
and
pop
lods
test
loope
inc
shrb
daa
and
lcall
push
cmpsl
jle
pop
lods
mov
pushf
jno
mov
adc
ret
dec
adc
push
ljmp
dec
inc
xchg
mov
and
mov
push
shlb
filds
pop
pushf
push
push
xchg
pop
jle
movsl
adc
jo
call
sbb
xchg
add
shll
ret
xchg
arpl
pop
fildll
div
dec
daa
inc
insl
xchg
lock
xor
inc
data16
into
mov
pop
mov
adc
sub
outsb
into
sbb
pop
inc
pop
jo
loope
loopne
pushf
mov
cs
js
dec
mov
insb
cli
arpl
push
nop
jae
jns
aas
mov
fdivrl
outsb
stos
rcrb
jb
loopne
sub
ja
and
out
or
fstl
mov
sti
push
pop
sub
addr16
mov
push
pop
pop
mov
daa
add
enter
out
out
ret
mov
pop
imul
cmc
lahf
idivb
push
xor
sub
nop
mov
cmp
pop
lcall
dec
pop
and
push
cmp
adc
dec
or
and
sub
mov
mov
jle
inc
cmp
mov
in
fdivr
pushf
dec
pushf
test
xor
mov
hlt
cs
xor
xor
or
and
inc
addl
mov
mov
jmp
shlb
xchg
in
jle
dec
nop
fdivl
pop
loope
out
dec
mov
aad
shl
mov
push
or
mov
cs
or
rcl
push
iret
adc
pop
push
aas
dec
and
jo
sub
or
movsb
das
cltd
mov
gs
and
and
dec
cltd
sbb
mov
adc
icebp
scas
pop
loop
mov
aam
in
nop
sub
adc
sub
mov
push
movsl
shll
inc
pop
lds
lock
out
pop
test
outsl
sahf
cmp
mov
fmuls
lahf
sub
leave
int3
add
stos
or
pop
sbbb
sti
add
mov
repz
inc
inc
lcall
push
dec
les
adc
push
andl
mov
mul
and
sti
ficomps
mov
mov
mov
mov
lods
pusha
inc
int
subb
sub
inc
sbb
xor
cmpsl
or
outsl
push
lock
and
div
push
pop
push
mov
dec
mov
icebp
cmpl
cmpsb
sub
test
shlb
xchg
mov
cmp
lret
mov
jnp
sbbb
sub
addl
inc
testb
cmpb
inc
test
lret
jo
movsl
lods
mov
cmp
add
insb
push
dec
xchg
dec
cmp
je
inc
cmp
jmp
xor
cmp
lods
mov
int3
inc
mov
adc
cmp
int3
jmp
rcl
adc
rcl
cli
fisubrs
test
dec
cmp
nop
add
outsb
add
xor
aaa
add
imul
jecxz
sub
sub
cmp
bound
test
mov
addr16
jnp
mov
out
notb
push
loop
negl
outsb
in
sbbl
in
xchg
cmc
push
in
incl
mov
mov
dec
xor
mov
popf
sbbl
mov
icebp
fidivrl
aam
sbb
push
push
push
int
mov
mov
jae
mov
push
enter
loop
popa
push
mov
repz
xor
mov
mov
mov
bound
adc
je
lcall
adc
mov
dec
insl
scas
and
sub
test
mov
dec
mov
xchg
nop
xchg
sub
inc
icebp
repnz
imul
inc
cmpsb
jg
imul
insb
test
mov
sbb
sbbb
fldcw
fisubs
lods
xor
cmp
xchg
scas
ja
test
dec
jecxz
popa
addr16
pushf
jbe
pop
scas
inc
xor
or
in
cmp
ficoms
bnd
mov
xor
jecxz
stc
sbb
sbb
pop
inc
jns
rcrb
pusha
and
pop
popf
ffree
incb
aad
cmp
int3
mov
dec
mov
into
scas
scas
sti
and
cmp
jne
in
out
loop
int
inc
fcmovnbe
outsl
xor
add
pop
lret
iret
out
cmp
lods
jbe
arpl
xor
orb
sbb
jno
cmc
inc
add
xchg
and
jbe
pop
sbb
es
push
push
mov
movsb
cmp
in
jg
ds
xchg
or
jle
dec
fimuls
mov
ret
or
fwait
push
push
jo
in
lret
sub
cwtl
scas
inc
xor
les
dec
jbe
out
cmpb
aad
sbb
incl
gs
inc
sarl
leave
enter
inc
int
cmp
or
cli
push
repz
lods
cmp
sahf
cmpsb
ja
mov
ds
sub
leave
shl
xchg
ljmp
push
ss
pusha
ja
pop
pop
repz
dec
lds
mov
jmp
or
adcl
sub
int3
pop
popf
ja
movsl
data16
movsb
push
cltd
mov
int
push
lods
inc
cmp
repz
jl
stos
inc
xchg
data16
shll
sahf
mov
sub
inc
enter
xchg
sub
je
xor
mov
mov
jns
cmp
ds
sbb
inc
jbe
inc
test
les
out
jge
clc
dec
insb
arpl
mov
cli
jnp
mov
mov
xor
int3
lret
loopne
sbb
xlat
xchg
inc
add
outsl
inc
pop
mov
stc
sarl
sub
xor
dec
jg
fidivrl
pop
adc
mov
pop
repz
dec
jp
mov
stc
xor
xchg
pop
xor
mov
aam
jnp
jecxz
cmp
je
cltd
repnz
cmp
lods
gs
mov
push
mov
inc
outsb
sahf
add
xchg
rclb
jmp
shl
icebp
scas
fwait
out
cmp
mov
xor
mov
cwtl
jb
adc
cmp
jg
aas
fstl
outsl
mov
pop
mov
aaa
adc
mov
jl
mov
xchg
push
jns
mov
mov
dec
movb
sbb
cmpsb
push
popa
jne
in
xlat
inc
cmp
pop
insb
add
sub
cmpsb
sahf
xor
pop
es
mov
mov
in
sbb
mov
xor
es
mov
add
pop
sti
cmpsb
fnstenv
push
lret
sub
xchg
cmpsb
mov
push
pop
cmp
out
in
adc
arpl
jne
jecxz
iret
push
andb
gs
or
aam
and
pop
xchg
cmc
gs
mov
jo
fwait
push
jle
aam
pop
nop
inc
rcrb
sub
test
sbb
idivb
mov
fldl
or
aad
mov
inc
cs
mov
rolb
jg
cs
mov
dec
sub
add
add
lock
fldt
mov
in
in
imul
imul
outsl
notb
push
add
xor
ret
sti
scas
xor
add
ljmp
sub
shrb
and
mov
mov
outsb
dec
jmp
dec
mov
push
mov
ds
arpl
and
dec
and
es
inc
clc
icebp
cmpb
repnz
or
std
jne
punpcklbw
daa
cmp
in
lods
xchg
xchg
sub
leave
and
jne
lods
xchg
or
mov
pop
xchg
test
ud0
ja
inc
jmp
rcrl
and
xchg
repnz
out
outsb
or
stos
jecxz
adc
imull
sbb
arpl
movsb
in
mov
mov
js
mov
ds
imul
testb
ror
notl
xor
repz
jnp
loop
loope
rorl
lahf
test
xor
arpl
lret
add
ret
sbb
add
iret
lods
mov
dec
ja
ss
mov
cmpsl
roll
pop
rcrb
mov
mov
in
out
xchg
mov
mov
jecxz
mov
ljmp
lahf
movsb
add
or
cwtl
test
sub
aaa
sbb
mov
lahf
fs
xchg
adc
andb
cmp
lock
ljmp
xchg
cli
incb
rol
xor
addb
or
shrb
scas
xchg
mov
jge
pop
adc
mov
jb
push
inc
stos
push
pop
push
pop
inc
sub
imul
ds
dec
je
das
lret
push
test
sub
jp
pop
pushf
idivl
out
shrl
sbb
xchg
sub
lea
mov
dec
pop
pop
cmp
lret
loopne
sahf
stc
stc
daa
push
xor
adc
sub
jge
pushf
add
pop
sbb
imul
jecxz
mov
std
sbb
push
inc
xchg
mov
notl
cmp
sbb
andl
xchg
ret
mov
jl
and
add
mov
adc
mov
or
rorb
icebp
mov
push
stos
adc
out
jne
mov
dec
adc
add
leave
sbb
sub
fcmovb
xchg
int
sub
or
xchg
repnz
test
loop
pop
push
mov
scas
es
scas
daa
faddl
or
and
xor
cmpsb
cmp
popa
out
and
cmpsb
sbb
clc
mov
mov
sbb
push
push
in
pop
or
pop
mov
adc
push
sti
fistpl
mov
data16
fiadds
push
imul
lcall
mov
sub
decb
test
aas
insl
nop
arpl
imul
mov
dec
push
in
lea
push
mov
cmpsb
push
loopne
in
loope
lea
int
mov
push
sbb
stos
adc
movsl
dec
mov
mov
mov
push
push
cmp
pop
cs
fxch
icebp
push
xchg
mov
jg
int
pop
cmp
jnp
or
sbb
cmp
in
xor
pop
ja
inc
call
jae
fidivs
pop
add
xor
jg
mov
stos
ljmp
scas
sbb
insb
dec
push
push
outsl
dec
sarb
dec
leave
xchg
outsl
test
shl
xchg
stos
outsl
subb
repz
lret
dec
loope
ret
aad
mov
scas
dec
insl
loope
cmp
in
sub
test
inc
orb
mov
call
add
push
stc
cltd
mov
mov
push
mov
push
cmp
and
jo
fbstp
les
icebp
cs
lcall
and
pop
cmp
mov
sbb
xlat
inc
cmpsb
adc
inc
shl
or
out
inc
push
or
shr
jno
sub
push
cli
push
movq
add
jno
stc
ds
imul
ss
pop
int3
push
sbb
sub
add
push
mov
iret
adc
lds
faddl
sbb
jno
pop
sbb
push
dec
cltd
mov
inc
test
fildll
sbb
into
test
or
pop
data16
popa
loope
or
test
adcl
insb
jae
xchg
lock
mov
dec
loope
mov
sbb
outsl
jle
xchg
lcall
ret
in
test
and
sub
or
jne
xchg
mov
mov
push
cld
mov
cs
dec
jecxz
mov
adc
pop
or
les
lods
inc
mov
xchg
movsb
cmp
dec
in
lahf
mov
mov
adc
pop
xor
mov
movsb
pop
xchg
cli
incb
push
add
sub
in
stos
cld
push
cmp
call
dec
clc
xor
push
cwtl
lahf
lret
cmp
or
inc
out
pop
xor
fdivrs
jne
pop
in
or
test
pushf
pop
out
rcrl
inc
mov
push
xchg
and
rcll
or
les
pop
dec
sbb
xor
xchg
sarb
into
enter
mov
adc
loopne
pop
mov
int3
dec
mov
mov
cmp
ja
dec
push
mov
enter
fiadds
mov
pushf
iret
add
clc
pushf
and
mov
ss
div
insb
jmp
iret
ds
mov
add
pop
loopne
push
movsl
roll
sub
test
jno
xchg
sbb
stos
sahf
vpsllw
sub
push
and
stos
pusha
push
mov
loopne
mov
pop
sti
clc
repz
loope
shrb
push
cli
imul
pop
and
fldcw
mov
push
adc
lods
rcl
xlat
xlat
push
outsl
movsb
fbstp
cld
rorb
mov
mov
shll
adc
mov
or
nop
loop
xchg
push
cli
jmp
sbb
jnp
inc
aam
rclb
push
xor
push
pop
subl
orl
mov
ds
fwait
xor
addr16
jnp
and
sbb
pop
inc
imul
push
jns
mov
lods
test
lahf
xor
ja
loop
add
push
test
ret
shrl
data16
dec
mov
daa
sbb
ljmp
add
movsl
ds
sub
sbb
xchg
xchg
mov
mov
mov
shll
loop
bound
std
lds
iret
mov
movsb
or
mov
xlat
lret
loopne
xor
sub
inc
mov
int
xor
xchg
lret
push
int3
inc
push
insl
push
cli
fldcw
pop
je
dec
adc
add
cmp
pop
imul
or
xor
inc
jge
dec
adc
ret
cmp
sbb
xor
js
lahf
adc
icebp
arpl
push
dec
fiadds
iret
ds
mov
cmp
call
pop
jbe
je
cmpl
and
aad
daa
xchg
fwait
js
xor
and
lret
repz
gs
mov
mov
mov
ror
sbb
xor
das
mov
push
cmc
and
xor
xchg
dec
mov
dec
cmp
das
into
loopne
adc
std
jnp
jp
cli
cmc
je
lcall
sub
jl
mov
cmp
andl
push
mov
lret
inc
mov
jmp
jbe
test
add
add
insb
or
and
cli
pusha
dec
dec
or
addr16
dec
push
insb
inc
cli
xchg
movsb
add
and
das
and
jl
mov
or
outsl
icebp
les
hlt
mov
xchg
js
and
movsb
sbb
fcmovu
dec
push
xor
dec
mov
mov
push
repnz
push
and
xchg
jno
mov
jo
jle
xor
lea
scas
push
dec
mov
scas
xchg
arpl
pop
out
jb
fdivs
rorl
cmp
cltd
fwait
scas
xorl
jo
enter
shl
mov
jbe
ss
js
and
imul
dec
gs
adc
addr16
dec
jecxz
or
push
mov
adc
aam
icebp
hlt
adc
pop
push
jmp
sahf
push
test
adc
inc
dec
repz
cmp
add
xor
aas
mov
mov
dec
xchg
xchg
imul
arpl
inc
mov
aam
jmp
and
mov
setge
testl
jns
int3
push
adc
andb
popa
add
jno
fs
in
packuswb
xchg
mov
dec
ds
pop
dec
pusha
jns
xchg
movsl
leave
mov
and
adc
lcall
xchg
and
jae
mov
sbb
jmp
jno
cltd
lcall
jle
ret
xor
mov
es
dec
or
cmc
aad
shll
les
rolb
aad
add
imul
sub
mov
lea
aas
and
test
push
das
jbe
divl
movsb
fnsave
xchg
inc
mov
hlt
jno
scas
xchg
and
cld
sbbl
sti
push
pop
sub
fldt
push
pop
add
cwtl
rcll
imul
test
mov
lret
xchg
cwtl
sti
repz
aad
pop
dec
cli
pop
mov
fistpl
sub
cmp
stos
lock
leave
cwtl
aas
and
xchg
sbb
lea
xor
push
adc
cs
inc
lret
ss
loope
movsl
popf
or
jno
mov
and
cmpsb
dec
sub
cli
jmp
fimull
lea
mov
push
jg
sti
xlat
data16
pusha
cld
jae
mov
into
test
bound
mov
es
in
inc
mov
fstp
xchg
xchg
pushf
inc
std
xor
pop
xchg
arpl
pop
cmc
sub
add
lahf
int3
fisttpll
icebp
xchg
ficompl
popa
cmpsl
cmp
sub
fists
jg
cwtl
xor
inc
xor
aas
rclb
add
iret
in
stos
loope
push
lods
lret
stos
inc
sbb
pop
cmp
les
jbe
lods
pop
and
fsubrs
mov
adc
roll
cmp
xchg
add
arpl
push
insl
jne
in
push
xchg
dec
jmp
sarb
jnp
stos
adc
popa
jl
shll
jbe
adc
fildl
mov
ror
mov
imul
add
scas
xor
or
dec
out
lds
sarb
add
mov
cld
fidivrl
and
fdiv
jns
test
js
cwtl
aam
cmp
jns
mov
or
pusha
pop
mov
or
mov
pop
std
xor
sbb
es
fmull
dec
and
or
mov
adc
or
shrl
lods
je
clc
sti
in
sub
call
mov
fdivl
int
push
push
int
test
shrl
jge
or
imulb
or
jg
jne
push
out
bound
xor
pop
push
lds
mov
out
xor
stos
push
aaa
pop
out
add
pop
in
mov
lods
stos
lahf
sahf
enter
jmp
stos
les
mov
xor
call
pop
sbb
or
push
bound
fs
or
inc
push
mov
mov
mov
divl
adc
push
inc
iret
inc
adc
mov
lods
shll
sbb
dec
js
fs
loop
insb
push
call
dec
or
adc
or
cwtl
out
pop
into
mov
cmc
jecxz
or
arpl
ret
loop
add
cmp
das
and
mov
sub
ret
rcrl
sub
jl
rclb
fcom
test
lcall
mov
jne
sbbl
idivl
stos
shll
vpsubsb
mov
sbb
cmp
xorb
data16
ds
and
and
cmp
lods
test
rorb
xor
inc
fsubl
push
pop
and
hlt
xchg
cmpsl
push
in
pop
scas
and
sub
mov
pop
popa
subb
mov
cmp
dec
insl
mov
push
test
push
mov
sbb
mov
outsb
jno
ds
popa
mov
jmp
sub
out
lret
and
jb
mov
notb
sub
xchg
lahf
add
cld
loope
xlat
aam
popf
xchg
std
in
call
inc
fwait
cli
sbbb
cld
mov
sar
mov
push
mov
push
bound
incb
jg
enter
pop
cmp
inc
scas
jae
int
inc
or
push
dec
in
mov
add
mov
cmpxchg
sbb
lock
out
or
jle
dec
jae
pop
movsl
mov
aam
mov
mov
adc
cmovs
fwait
out
jno
dec
mov
sti
mov
add
arpl
fnsave
jo
cs
aam
and
mov
xchg
and
adc
sub
ss
imul
aam
xor
add
aad
les
dec
mov
in
mov
push
cmpsl
stos
push
loope
sarl
push
adc
or
arpl
jmp
sub
mov
jb
and
adc
jno
dec
fwait
mov
add
pop
push
ror
out
push
je
in
pop
fisubrl
je
inc
jle
xchg
int
dec
leave
in
test
subl
jb
int3
cld
xor
add
rcr
mov
cltd
jbe
dec
dec
pushf
scas
dec
mov
adc
jge
jno
cld
dec
add
rcll
jb
dec
addb
call
mov
inc
fisttpll
andl
les
fs
mov
jge
mov
out
jge
fwait
mov
dec
and
inc
cvttps2pi
inc
inc
and
mov
lahf
in
jbe
push
pop
pop
adcl
adc
push
or
in
addr16
push
jo
aas
sbb
or
gs
push
std
test
shll
rcl
cmp
inc
je
mov
lock
mov
dec
xor
sbb
sar
jo
lods
xchg
xor
cmp
or
pushf
mov
or
fcomi
pop
xchg
sarb
push
loop
scas
pop
mov
push
mov
popa
or
and
xchg
stos
pcmpgtb
movl
add
adc
loope
es
fsts
movl
out
lahf
mov
insl
ret
mov
test
test
push
mov
pop
repnz
sahf
pop
push
rcr
popf
fwait
loope
push
cmp
or
sbb
inc
sbb
sbb
stos
inc
mov
lods
mov
push
fcmovne
pusha
mov
cmp
jle
addl
sahf
test
in
data16
adc
fcmovu
mov
insl
mov
xchg
movsb
pop
popa
pusha
inc
scas
test
pop
addr16
jns
cmc
mov
out
cs
mov
inc
enter
xchg
pop
cmp
and
call
ret
stos
hlt
mov
rclb
lods
ja
fdivrs
cmc
sbb
and
aas
mov
stos
sbb
lods
push
push
shll
cmp
pushf
pop
mull
imul
imul
jecxz
push
subl
cs
in
pop
push
cltd
add
xchg
add
xor
mov
jge
mov
jae
fcoml
mov
daa
test
fisubrs
lret
testb
insl
push
sbb
sarl
sahf
fsubl
sbb
scas
cli
leave
cmp
push
cld
fisttpl
nop
xchg
nop
mov
sbb
mov
shrl
fbstp
pop
jo
call
ret
mov
ror
push
les
inc
mov
mov
pop
push
mov
add
cmp
cmpsl
shrb
xor
sub
xchg
push
cld
and
jo
lock
mov
pop
push
cmpsb
nop
sbb
in
ds
popf
mov
imul
cmp
leave
lds
push
xorl
out
mov
inc
push
lds
test
fnstcw
pop
dec
sahf
ret
sub
outsl
mov
mov
jp
lea
push
cmp
mov
out
mov
or
ficomps
stos
iret
scas
sub
mov
add
mov
gs
repz
adc
stos
cld
mov
pop
movsl
popf
cs
imul
and
repnz
out
insl
push
in
gs
std
outsb
push
in
mov
sub
xchg
adc
int
inc
mov
jns
push
inc
add
cmp
and
gs
scas
jecxz
pushf
cmp
mov
fiadds
xchg
pusha
cli
lret
call
mov
and
out
mov
pushf
pop
loop
or
dec
enter
ja
pop
test
pushl
sbb
and
mov
mov
leave
cmp
mov
dec
pop
icebp
xchg
mov
insb
inc
insl
cmc
aad
xlat
rolb
inc
pop
mov
mov
push
jno
dec
in
xchg
cmc
packsswb
push
sar
leave
rcr
inc
dec
sbb
nop
xchg
insl
bound
mov
pop
and
dec
xchg
jb
adc
mov
sub
dec
outsb
cmp
sbb
mov
sub
test
in
cli
jmp
mov
scas
adc
xor
fistpl
js,pt
pusha
stos
sbb
clc
dec
xchg
mov
lea
push
and
mov
jl
and
mov
mov
sub
pop
aaa
jns
notl
jae
setbe
xor
test
cwtl
mov
sub
sub
or
outsb
movzwl
hlt
int3
mov
add
mov
scas
cld
xchg
mov
xor
addr16
loopne
in
or
inc
dec
pop
or
scas
dec
inc
jp
fsts
aaa
ja
lods
inc
sbb
pushf
jno
mov
cld
stos
cmc
sbb
pop
adc
scas
ret
adc
hlt
fcmovnu
loopne
out
mov
xor
inc
jae
insl
push
inc
enter
xchg
sti
push
jne
cmpsl
lahf
fwait
mov
push
and
fwait
repnz
adc
cmpsb
sbb
stos
inc
push
cmp
rcr
dec
mov
adc
and
mov
ljmp
xchg
sub
sbb
xchg
mov
xlat
xlat
pop
dec
pop
les
testb
xor
loopne
xchg
adc
cmp
gs
leave
in
sub
jns
inc
push
jns
xchg
scas
fwait
sbb
sbb
mov
and
leave
in
mov
mov
inc
jecxz
stos
dec
jle
push
xchg
push
in
ret
mov
repnz
out
xchg
jle
add
rcr
fldcw
jns
sbb
test
inc
aam
lret
rcrl
mov
xchg
rcrb
sbb
push
and
ljmp
hlt
into
xor
in
addr16
cmp
adc
mov
test
bound
add
aas
xor
mov
cwtl
dec
imul
lahf
ret
mov
aas
push
fwait
adc
cmpsl
sub
xchg
lea
addr16
stos
ret
fisubl
push
rcll
xor
adc
stos
mov
test
fimull
loop
test
inc
cli
sbb
jg
sti
in
imul
adc
fnstenv
loopne
or
sbb
xor
cmpsl
pop
xor
cmpsb
stos
xchg
or
xchg
jno
mulb
lock
sub
lods
cmp
mov
push
cmp
mov
jg
cwtl
dec
pop
loopne
xchg
inc
int
sub
divl
das
out
xchg
flds
cli
inc
push
cmc
aam
sbb
je
hlt
inc
mov
dec
in
inc
jo
shlb
inc
loope
sub
jo
mov
adc
sbb
lock
lret
shr
ss
add
sbb
popa
dec
xor
inc
cmp
xor
sarl
cmp
shlb
imul
mov
cmp
and
dec
jl
inc
aaa
cmpsb
scas
dec
loop
cmp
mov
nop
out
push
inc
or
int
jecxz
lods
out
ficoms
sarb
add
inc
add
insl
jne
lahf
aas
sbb
push
in
dec
fdivrl
sti
cmpsb
jg
pusha
xor
inc
ljmpw
fstpl
lahf
and
sub
sbb
push
js
aaa
insb
sbb
ficoml
inc
push
daa
push
shll
or
xor
pop
out
mov
push
mov
jb
pop
jge
add
xlat
sub
pop
loope
sub
mov
mov
push
test
cmp
pusha
aas
fisubrl
cs
int3
xchg
into
push
orb
add
dec
ret
test
fs
mov
pop
adcl
cs
loope
adcb
rclb
xchg
xchg
xchg
fisubs
stos
arpl
out
sbb
inc
or
pusha
adc
pop
xor
inc
rclb
scas
push
bound
add
ja
mov
pop
cmp
xchg
lods
test
add
js
test
push
xchg
test
rclb
xchg
in
cmp
lcall
jg
nop
jbe
dec
push
lret
mov
enter
inc
mov
add
fdivrp
pop
loop
cmp
lds
in
pop
xor
scas
fidivl
mov
pop
sahf
out
sbb
mov
mov
xor
jge
push
dec
dec
push
sbbl
in
loope
jae
sub
les
dec
mov
mov
mov
xchg
xchg
or
and
outsb
lea
iret
scas
daa
xor
cmp
sti
xchg
dec
xchg
data16
and
jle
adc
pop
sub
sbb
cld
stc
cmp
daa
aad
pop
insb
pop
gs
cwtl
out
jo
cld
in
pop
out
mov
sub
cmp
test
test
std
adc
jecxz
mov
adc
cmp
pop
pusha
pop
mov
sub
and
mov
cmp
pop
aas
xor
xchg
sbb
adc
test
push
pop
fs
add
adc
fwait
or
imul
mov
xchg
inc
rol
xchg
dec
xor
mov
loop
cmp
movsl
xor
arpl
or
cltd
push
mov
xor
mov
sti
mov
pop
mov
xchg
add
mov
ss
pop
push
fwait
inc
inc
push
js
cs
sti
js
mov
icebp
out
dec
dec
jo
mov
mov
fsubp
jne
cwtl
push
xor
or
xor
mov
sub
stc
daa
repz
push
sahf
and
aaa
sub
in
incl
inc
cmc
bnd
dec
loop
jge
mov
clc
pushf
sysexit
adc
bnd
loopne
push
cltd
dec
aad
xlat
fstp
in
mov
scas
jmp
xchg
addr16
sahf
mov
loop
and
pop
test
and
pop
pop
fnsave
scas
cwtl
mov
pop
add
jns
adcl
jl
adc
imul
pushf
hlt
sbbb
aam
jbe
sub
dec
add
iret
cmpsl
call
les
jo
add
fbld
lds
daa
pusha
lahf
repnz
adc
push
pop
daa
call
lods
lock
int3
fs
test
jnp
push
mov
and
les
rcl
jae
xchg
lcall
adc
fnstsw
stc
fcoml
decl
mov
in
xchg
inc
lds
cmpsl
mov
pop
mov
mov
repz
sub
in
and
sbbl
lahf
dec
dec
daa
sub
sbb
pop
scas
mov
cmc
mov
popa
sbb
cmp
lock
jl
pop
mov
sub
repz
and
jbe
xlat
lock
imulb
les
cmc
icebp
lds
mov
shll
in
add
inc
jge
test
xchg
mov
dec
pop
cmp
lock
push
out
pop
int3
or
add
rcrl
adc
and
fstpt
jge
and
outsb
jae
loopne
in
adc
add
mov
push
es
test
xchg
pushf
pop
iret
or
inc
and
lret
mov
aad
call
ficoms
ljmp
mov
shrl
in
pop
jns
cmp
nop
in
mov
stos
adc
mov
stc
jo
xchg
cmp
shlb
data16
fdivrs
sub
fdivrl
testb
fcmovnbe
shll
loop
pop
aam
cmpl
fidivrl
xorl
cmp
push
out
in
push
gs
mov
inc
clc
cltd
mov
and
popl
dec
push
sbb
sub
jnp
imul
mov
call
sbb
push
push
leave
sbb
adc
bound
test
or
dec
inc
jmp
test
adc
dec
cmp
in
jp
mov
ds
out
mov
cmc
xorl
lahf
mov
push
icebp
and
adc
jo
sub
pop
cmp
stos
in
addr16
jno
mov
addl
lea
and
xchg
repz
mov
rcrb
je
jecxz
outsb
popa
scas
dec
push
in
add
aam
mov
mov
hlt
mov
mov
sbb
imul
xor
scas
pop
mov
mov
scas
das
in
out
jne
xlat
shrl
xchg
iret
in
mov
psrad
cmp
and
dec
add
lock
fcomps
into
pop
mov
adc
cmpsl
cltd
adc
mov
lret
or
mov
sti
jp
inc
push
in
sub
pushf
loop
adc
shll
les
shll
ret
adc
in
cltd
xchg
mov
xor
loop
fiaddl
dec
or
xchg
pusha
lcall
inc
xchg
icebp
pop
inc
sbb
or
dec
xor
orl
xor
cli
push
dec
das
adc
inc
push
lcall
adc
add
adc
imul
or
jecxz
pop
dec
push
cmp
pop
add
xchg
lret
mov
test
mov
repnz
inc
pop
mov
lcall
daa
and
in
jb
push
or
jnp
xor
or
add
mov
dec
jnp
fisttpll
fdivrp
cmp
outsb
jg
mov
fs
add
test
mov
jo
mov
gs
popf
xorb
push
jg
ja
jne
rclb
movsl
mov
sbb
cmp
pop
ljmp
pop
add
xchg
aad
enter
rcr
xchg
shll
jp
cld
xor
push
lret
cmp
xor
push
dec
mov
mov
sbb
push
stc
cmp
jne
dec
dec
dec
lcall
popa
mov
dec
in
test
insl
xchg
mov
add
jne
addl
xchg
hlt
push
xor
xchg
push
in
jnp
or
out
jne
rcr
xor
add
adc
bound
daa
mov
lahf
mov
mov
jns
jae
adc
lcall
jle
je
stc
test
add
shlb
mov
in
lds
inc
pop
cmp
ds
test
inc
lock
adc
jbe
pop
movsl
mov
stos
cltd
fnstenv
mov
imul
jecxz
xor
mov
push
mov
out
jb
incl
mov
adc
sbb
lods
in
pop
cmpb
loop
adc
dec
dec
lock
aas
aam
push
jecxz
push
divl
push
dec
xchg
jae
xor
inc
pushl
adc
mov
inc
mov
mov
jge
pop
mov
xchg
int
mov
pushf
add
dec
ret
lods
jl
jmp
fsubrs
cltd
ss
or
jnp
push
push
stos
mov
add
loopne
mov
mov
jae
push
fs
add
add
pop
ds
push
push
or
mov
add
or
int
cmp
bound
pusha
adc
sbb
cmpl
iret
loopne
gs
nop
fnstcw
shrl
repz
fisubs
jl
add
jle
or
les
cmp
mov
js
nop
loope
cmpsb
dec
xchg
fstl
jge
lret
popa
xchg
ret
jle
out
mov
addb
aam
shll
iret
xchg
push
lahf
jnp
push
idivl
inc
jo
cmp
pop
clc
cmp
adc
in
or
mov
inc
jae
cmpsl
dec
roll
fwait
int
aas
fidivl
mov
jne
test
daa
jns
and
mov
dec
adc
xchg
mov
or
lcall
xorb
test
cs
ret
pop
xchg
lret
xchg
out
outsb
xor
icebp
out
xor
sub
sbb
js
lret
out
or
jns
jecxz
push
jl
call
fucomi
xor
push
rorl
xchg
les
xlat
pop
ficoml
clc
pop
mov
lcall
fsts
jle
lcall
adc
je
xlat
stos
into
enter
xchg
xchg
mov
mov
sub
rcrb
add
cltd
popf
mov
lock
jmp
test
loope,pn
jg
xchg
ss
lcall
ljmp
mulb
jns
cltd
addl
add
cmp
leave
and
mov
xor
fstpl
loope,pn
andb
mov
mov
cmp
cmp
push
imul
addr16
stc
mov
jo
or
das
or
ret
stos
mov
loopne
or
mov
jle
rcrb
lods
inc
mov
mov
and
mov
scas
addr16
fsubs
loop
popf
mov
ss
lods
leave
inc
push
mov
mov
push
add
cmp
repnz
sarb
pop
or
ret
cltd
jno
or
fwait
and
cmpsb
sub
jb
test
mov
mov
dec
and
mov
jb
fbstp
push
popa
jp
js
cmpb
loop
daa
out
add
mov
insl
jbe
in
adc
outsb
movsb
cmpsl
jne
jns
cmpsb
inc
aam
aas
repnz
adc
add
sub
insl
dec
stos
pop
lcall
jo
and
xlat
fadds
aam
sbb
mov
mov
ljmp
movsb
inc
mov
rorl
dec
jbe
int3
orb
out
inc
or
test
lock
mov
das
nop
add
xor
cmp
pop
xchg
sub
test
mov
push
stc
movsb
fldenv
mov
mov
mov
xchg
sbb
dec
mov
push
pop
inc
aaa
icebp
out
in
jmp
push
loop
stos
ljmp
fs
cwtl
mov
sub
aad
mov
push
mov
jae
je
mov
mov
push
mov
in
rcr
shlb
enter
sub
stos
fisubl
out
pop
stc
imul
outsb
sti
daa
sub
cmp
aam
int3
notb
lahf
or
out
jge
and
inc
inc
mov
stos
sbb
es
sahf
adcl
movsl
mov
and
into
bound
int3
stos
lock
mov
dec
test
rorl
sti
xlat
inc
fs
out
jecxz
in
mov
adc
stc
jb
push
scas
cmc
sbb
leave
lds
adc
push
cmp
jns
scas
cmpb
dec
inc
outsl
adc
adc
scas
xchg
les
mov
mov
enter
push
icebp
push
and
mov
inc
push
loopne
pop
or
add
test
push
cltd
pop
xchg
icebp
push
outsl
sub
xor
push
cltd
sbb
xor
fwait
inc
rorb
dec
pusha
hlt
stos
sbb
or
push
lret
pop
mov
sbb
cmc
pop
jp
in
push
popf
mov
cmp
pop
stos
pop
adcl
jns
dec
insb
xchg
lods
cmp
in
outsl
int
das
outsb
rcrl
int
sbb
inc
shl
jecxz
outsl
and
arpl
mov
pop
mul
out
into
ret
pushf
mov
adc
clc
mov
lods
xchg
add
lods
in
cmp
fwait
fwait
shlb
stc
inc
sub
loope
cmpsl
sub
mov
add
push
movsb
test
inc
sub
fmul
jae
jg
push
popf
sbb
sarb
ja
in
mov
outsb
movsb
xchg
jno
mov
sub
scas
push
jne
into
hlt
mov
in
fimuls
aaa
and
sub
lods
cmp
cmp
sub
xor
lret
insl
adc
pop
xchg
cmpsl
inc
adc
cmp
mov
xchg
lods
fimuls
mov
outsl
inc
jne
mov
mov
push
daa
scas
stos
test
call
push
mov
sub
mov
jl
loopne
xor
xor
movsb
sbb
lret
sbb
mov
ss
mov
fstpl
enter
adc
adc
gs
cli
shll
cmpsl
lahf
sbb
jle
push
fidivrl
mov
rolb
shlb
mov
adc
leave
add
pushf
data16
insl
xchg
sub
nop
jge
arpl
inc
repnz
leave
inc
call
rclb
jns
add
mov
xchg
mov
add
mov
add
pop
inc
sbb
inc
dec
pop
scas
leave
pop
repnz
popa
inc
push
mov
or
fs
jp
fmulp
lret
icebp
dec
jge
sub
inc
inc
insl
mov
add
jecxz
stos
fidivl
insl
pushf
ja
cmp
and
add
mov
in
push
add
std
mov
daa
jg
xchg
ja
rclb
out
pop
mov
add
lods
cmp
addl
lea
lret
push
ljmp
fmuls
jp
and
bound
popa
clc
mov
push
movsb
jo
sub
xchg
loope
scas
xor
adcw
pop
lahf
test
jp
in
sub
adc
into
push
and
push
xchg
and
mov
xlat
out
xor
add
les
out
and
push
arpl
and
inc
rcrb
cmp
enter
pusha
loop
bound
hlt
inc
cwtl
hlt
jae
shlb
dec
fsub
stos
outsb
in
jae
data16
addl
bound
and
ret
int
repnz
push
popf
rclb
or
jp
aas
adc
ret
je
lcall
aaa
mov
in
or
xchg
mov
fcmovnb
xor
inc
sahf
jo
fisubrl
loopne
stos
es
mov
and
pop
test
fdivrp
je
dec
adc
jno
imul
sbb
mov
lcall
js
call
repz
lcall
mov
push
dec
jecxz
fstps
xchg
adc
lcall
out
cltd
icebp
dec
cmp
sti
cmp
add
mov
or
jns
gs
fwait
lcall
fmull
mov
cmpl
push
xor
inc
enter
loopne
pop
cltd
mov
arpl
cmp
lea
jno
stos
cltd
push
pop
jmp
fs
idivb
sbb
push
ret
mov
mov
fs
jg
lods
cltd
bound
jl
rol
ret
ljmp
and
or
adc
popf
iret
out
cmp
pop
lock
mov
out
push
sbb
mov
pop
std
insb
in
pop
dec
xchg
lret
jge
sbb
cmp
imul
inc
shll
pop
pop
rolb
aaa
std
cmp
push
xchg
ds
pop
or
cmp
std
pusha
mov
sbb
adc
es
aaa
mov
push
lock
push
mov
int3
cld
ds
lds
xlat
mov
or
mov
cmp
rorl
or
push
mov
sbb
dec
loope
fwait
jle
pop
mov
xorb
and
mov
js
xchg
repz
mov
mov
inc
mov
push
pop
scas
dec
les
out
fwait
mov
test
push
movsl
adcb
repnz
lods
mov
inc
repz
mov
push
rcrl
lcall
sub
pusha
lock
pop
jecxz
les
lret
imul
xchg
jae
das
mov
mov
sbb
rcl
push
inc
xchg
or
jae
scas
test
les
mov
in
lods
sub
and
imul
push
rcl
fsts
mov
and
sbb
adc
adc
jmp
pop
jae
jmp
movsb
mov
pop
mov
mov
xor
pop
cmp
and
push
fiaddl
aaa
mov
xchg
sarl
cltd
jns
stos
cmp
ficompl
sub
jae
adc
enter
add
jle
js
pop
into
mov
repnz
in
aad
insb
negl
or
dec
xlat
mov
fcompl
insb
loope
mov
mov
push
push
pop
lret
lcall
das
loop
fnstcw
fimuls
testb
add
cs
loopne
xchg
addb
lods
in
xor
scas
jb
sbb
jg
sbb
out
cmp
cmpsb
push
movsb
push
mov
mov
inc
fs
push
and
mov
sub
into
inc
or
jmp
mov
addr16
add
fildl
or
sub
insb
dec
ljmp
pop
psubusw
sbb
shlb
negl
push
test
cmpsl
mov
push
add
mov
sbb
mov
or
loop
sbb
mov
inc
fmull
gs
xchg
add
fadds
lods
out
je
sbb
ficoms
mov
fwait
add
adc
and
popf
lea
sti
pop
adc
mov
mov
mov
xchg
mov
xchg
add
and
sub
out
sub
inc
add
pop
adc
mov
test
xor
idivl
xchg
orl
mov
mov
push
fistps
inc
lea
shlb
insl
enter
push
aas
aad
xchg
cmp
pop
xor
rorb
xor
xorb
stos
jmp
pop
and
cmp
push
int3
mov
mov
and
jmp
pop
push
stc
adc
pop
push
pop
xchg
daa
jns
rol
sbb
mov
fdivs
add
pushf
mov
pop
sbb
pop
ret
pop
leave
call
jae
mov
jge
addr16
outsl
fucomi
xor
xchg
pop
mov
mov
cmp
adc
fildll
dec
inc
dec
mov
cmp
cmpsb
sbb
and
xor
pop
and
jno
pop
scas
adc
add
icebp
and
out
in
sbb
stos
je
outsl
test
jle
jae
les
fstpt
mov
xchg
push
mov
and
sti
dec
mov
mov
jmp
add
sub
pop
dec
bts
or
add
sub
mov
addr16
test
outsb
mov
xor
jecxz
and
inc
incb
dec
cmp
jae
xor
adcl
call
leave
arpl
outsb
cltd
xchg
inc
inc
inc
mov
mov
nop
cmp
mov
xor
mov
jp
sbb
push
push
addr16
cmp
into
cmpsl
sub
jl
nop
pop
stos
jge
int3
mov
and
sbb
cmpsl
cmp
test
frstor
fcompl
imul
and
scas
dec
sbb
shll
stos
in
loop
fdivrp
push
rclw
cmp
add
es
mov
adc
ret
int3
test
dec
leave
hlt
pop
or
and
incb
xor
ss
and
dec
pop
mov
outsb
or
mov
lret
pop
cmp
and
leave
int3
fcomp
adc
outsb
test
bnd
into
or
jb
adc
mov
mov
inc
cmp
divb
or
loop
jno
scas
aas
mov
icebp
jge
sbb
orb
fists
inc
mull
inc
xchg
xor
fs
stos
push
mov
inc
sub
push
sti
andb
out
int
add
mov
xor
imul
jno
dec
inc
frstor
je
inc
fstp
jo
jnp
inc
fiaddl
not
les
out
xchg
lds
div
jecxz
sahf
insb
xchg
lea
ret
loope
cmovs
imul
shlb
dec
xchg
mov
popf
and
push
cmp
and
sbb
sti
cmp
push
int
decb
ljmp
mov
mov
in
inc
cmp
mov
push
xor
mov
inc
arpl
lret
decb
shll
inc
cltd
jnp
repz
cltd
mov
jno
repnz
scas
inc
sbb
xchg
rcrl
lret
xor
ja
pop
mov
aam
out
xchg
aas
insl
gs
sbb
loopne
fsubl
aad
jo
fs
fwait
mov
arpl
js
push
add
test
xchg
sub
out
loope
pushf
or
sub
xor
jnp
xor
sub
and
xchg
jne
xlat
mov
adc
inc
adc
inc
add
jnp
pop
dec
leave
cmpsb
add
inc
leave
xor
lods
cltd
or
fld
dec
aam
movsb
test
fsubr
lret
punpckhwd
lds
inc
test
ret
mov
adc
out
test
and
scas
test
jle
jnp
push
in
mulb
push
sub
outsb
xchg
mov
sbbb
das
xor
mov
rclb
movb
mov
xchg
fcompl
dec
mov
daa
lock
movntps
stos
mov
mov
movsb
mov
jnp
push
sarb
fs
outsl
sbbl
push
scas
xrelease
add
leave
ss
sbb
mov
in
cmp
nop
andl
mov
dec
insb
mov
inc
in
lret
in
in
decb
jns
scas
outsb
pushf
std
into
mov
aaa
std
jno
arpl
daa
addr16
and
shll
mov
or
mov
test
jne
es
cwtl
or
jl
jp
pop
ja
aam
js
scas
andb
decl
fsubrl
pop
cmpsl
push
sbb
test
ja
pop
add
xchg
outsb
call
jno
jne
fs
xor
jg
cmp
shr
ds
dec
mov
sub
sub
cmp
ror
pop
fdivrl
pop
pop
out
fnsave
xchg
movsb
incl
jmp
outsl
aad
ret
pusha
push
test
sub
push
insb
pop
xorl
imul
sub
aam
insb
fsubrs
lods
std
push
pop
jge
mov
push
and
or
lods
int3
into
dec
xor
adc
pop
dec
leave
mov
imul
ja
lret
push
pop
add
ljmp
test
or
xlat
or
pop
sbb
or
mov
push
sbb
stos
ja
sbb
int
push
imul
cld
sub
ds
inc
ljmp
add
or
mov
mov
not
leave
lea
hlt
movb
pop
dec
pop
add
push
dec
mov
das
int
jmp
fldl
pop
pushl
push
jnp
xchg
jecxz
int
jae
mov
nop
sbb
xor
fimull
jno
jno,pt
push
cmc
rolb
jb
jl
les
xchg
iret
enter
push
cmpsb
loope
das
and
ficoml
fstpl
adc
and
cmc
inc
sahf
dec
sbb
and
push
mov
add
pop
ficomps
addb
push
jbe
in
pushf
xor
dec
xchg
lods
sub
sub
pop
scas
sub
or
in
jmp
ljmp
adc
ret
push
insb
mov
mov
adc
mov
sub
xor
cld
rclb
mov
jns
icebp
sbb
das
or
addr16
mov
popf
mov
mov
push
jp
insb
or
subb
sarl
lods
call
push
nop
mov
push
pop
xor
inc
dec
jns
fisubl
xchg
and
jns
xchg
lret
ror
and
dec
pushf
mov
cmp
mov
out
adc
popf
ljmp
daa
loop
xor
mov
ficoml
xchg
mov
mov
shr
inc
pop
arpl
fstpt
test
lcall
ja
xor
pop
rolb
fnsave
pop
cli
movsl
jnp
test
adc
pusha
cwtl
push
fisubrs
xlat
cmp
sub
or
xor
sahf
sbb
pop
cli
mov
bound
fdivrl
push
mov
sahf
push
ficompl
into
mov
xchg
mov
sbb
int
xchg
sub
lds
pop
jb
mov
jne
rcr
sub
adc
inc
ret
sarb
inc
dec
ljmp
push
pop
push
xchg
or
inc
add
fs
out
or
jle
divl
pop
pop
gs
or
xlat
add
les
jp
sub
jle
xchg
push
aaa
push
mov
rcrb
fistl
push
ror
aam
and
je
fadds
nop
lods
push
xlat
adc
movsb
mov
outsl
es
mov
pop
and
sbb
sbb
dec
std
xor
enter
mov
je
mov
mov
push
pop
push
inc
pop
push
inc
adc
aam
jnp
jb
mov
pop
in
mov
mov
mov
xor
imul
add
insb
mov
cwtl
loop
mov
mov
rcr
push
push
popf
jg
add
mov
add
cmp
jb
aam
push
inc
rcrb
cmpsl
test
sub
sar
in
fsubrs
cli
mov
sbb
xchg
or
pusha
add
or
sub
aaa
int
lods
test
push
inc
xlat
inc
into
je
add
jnp
pusha
mov
in
xor
addr16
xrstors
pop
cmpsl
jle
popa
mov
mov
or
fisubrl
sbb
mov
mov
sub
rcll
add
addl
loopne
jbe
flds
mov
aam
cmpsl
inc
movsb
push
lds
fwait
and
inc
jnp
xor
mov
dec
jle
xor
movl
adc
xor
call
push
ljmp
adc
inc
cmp
cmp
jge
jnp
mov
loopne
add
arpl
mov
dec
ja
clc
pop
andl
pop
fmull
mov
leave
dec
call
mov
jnp
andl
xchg
mov
lods
inc
scas
mov
and
repz
fstps
fistps
pushf
and
ret
jmpw
jbe
mov
aaa
jle
adc
loop
fwait
mov
push
push
push
mov
sbb
jecxz
fsubrl
sub
in
out
in
std
call
cld
pop
int
and
scas
lcall
inc
enter
inc
gs
rcll
test
xchg
into
movsb
dec
mov
out
pop
test
jb
cmp
add
test
sbb
pusha
mov
add
daa
testl
sbb
xor
mov
dec
adcl
adc
pop
inc
test
xor
cmovnp
fimuls
xor
lods
or
mov
iret
rcll
mov
les
dec
lds
outsl
sbb
pop
pop
iret
je
out
shll
push
push
leave
daa
lods
mov
and
rclb
sbb
pop
roll
dec
popf
mov
pop
shll
shll
and
aam
int3
inc
pop
aas
mov
xchg
addr16
dec
push
inc
add
adc
aaa
insl
imul
test
xor
jl
push
adc
mov
add
push
dec
testb
mov
ds
dec
mov
adc
mov
xlat
or
mov
pusha
add
adc
or
sbb
sbb
test
mov
stc
test
imul
inc
test
stos
iret
add
cmpsl
int
add
ret
gs
clc
iret
mov
les
fcmovnb
pusha
int
lea
pop
inc
das
outsb
sub
hlt
inc
inc
xor
test
push
jbe
fistpll
adc
jp
pop
in
repnz
les
loop
out
ret
xor
xchg
adc
inc
shlb
add
pusha
into
pusha
mov
mov
adc
mov
sbb
pop
les
adc
ss
push
pop
and
jo
out
sahf
pop
repnz
inc
push
jp
xor
pushf
push
mov
fisubs
inc
sbb
xchg
inc
jg
mov
outsb
adc
and
pop
xor
mov
ljmp
lret
xchg
jp
xor
cmp
cmp
addl
bound
inc
rorl
pop
xor
pop
ss
jae
in
addb
stc
pop
push
cli
js
sub
ss
mov
ficoml
stos
cmpsl
cltd
mov
outsl
lahf
cmp
xchg
stos
mov
fdivrs
stos
or
cmp
cmp
cmpl
pop
xor
or
mov
sbb
nop
mov
mov
repnz
xlat
sbb
enter
dec
xor
xor
xchg
jecxz
imul
loope
add
xchg
mov
je
jns
dec
sahf
mov
xchg
jbe
sub
out
sub
xchg
mov
sbb
vmovhps
mov
jle
fucomip
jo
movsl
push
idiv
repnz
ret
push
pop
inc
emms
or
vmwrite
jge
into
pop
pop
xchg
or
adc
enter
fmul
pop
sub
imul
sarl
shll
push
sbb
mov
stos
mov
xor
out
pop
xchg
push
push
es
inc
adc
sbb
addr16
push
sahf
sub
mov
mov
fidivs
push
lods
cltd
sbb
out
mov
xchg
jae
and
loopne
and
jecxz
adc
add
sbb
repz
lret
aaa
xor
jo
jp
xchg
ds
mov
push
mov
fstpl
nop
lds
mov
ljmp
das
outsl
pop
fadd
xor
ret
xor
dec
mov
inc
sub
mov
aam
cltd
mov
push
mov
adc
adc
fdivs
add
dec
mov
adc
sub
or
xor
add
push
sbb
iret
xor
ss
mov
in
inc
jp
out
pop
pop
xchg
cld
dec
mov
loope
rorl
mov
pusha
adc
dec
xor
mov
cmp
cltd
adc
push
pop
lds
mov
std
subl
add
sbb
scas
cmp
and
rcll
dec
daa
mov
dec
push
xor
and
inc
dec
nop
mov
outsb
dec
mov
mov
stc
inc
push
dec
sub
loopne
test
inc
inc
jle
cmpsl
sbb
add
mov
pop
jbe
sub
and
sarb
loop
fdivrs
mov
testl
decl
insl
into
in
jne
cmpsb
add
arpl
movsl
roll
es
adcl
out
xchg
aam
and
addr16
push
out
push
mov
out
xchg
mov
iret
movsb
sbb
push
mov
add
jg
out
inc
pop
ja
sbb
xor
insl
lcall
pop
jecxz
sub
jnp
push
aad
pop
hlt
pushl
in
jno
push
sub
sahf
js
xchg
adc
hlt
notl
outsb
sub
in
call
push
mov
and
push
call
pop
outsb
pop
rclb
dec
push
jo
lock
mov
insl
aam
xor
xchg
mov
mov
cltd
inc
loop
sarb
pop
rcl
movsb
xchg
fisubrs
loope
pusha
pop
std
sbb
sar
or
into
or
ror
lock
dec
push
or
mov
hlt
inc
inc
inc
jns
pop
sti
add
aam
dec
mov
pop
or
xor
mov
idiv
or
xor
add
les
push
rclb
cmp
xchg
icebp
in
mov
adcl
fsubrp
mov
xchg
dec
shll
adc
test
in
test
popf
mov
jg
test
std
hlt
and
xor
fs
adc
out
mov
inc
mov
mov
cmc
shll
inc
inc
iret
jbe
push
rolb
jecxz
mov
xor
mov
adc
out
movsb
sub
in
xchg
cmp
dec
cmp
sub
sub
inc
dec
cli
adc
scas
xlat
inc
sbb
imul
ja,pn
iret
mov
loope
fildll
loop
add
stc
pushf
out
sti
stc
mov
test
and
push
add
out
inc
and
sub
xchg
ret
insb
sub
lds
lret
int3
ja
jb
ljmp
cld
movsl
fwait
test
clc
sub
popf
movsl
das
mov
cld
pop
mov
mov
iret
sub
add
inc
pusha
mov
or
and
mov
into
notb
xor
fbld
das
push
cmp
push
mov
lcall
add
fidivrs
pop
fstpt
stos
mov
dec
jp
sub
fadd
stos
mov
dec
and
mov
pusha
ss
out
dec
jge
push
mov
dec
push
data16
xorl
stc
cwtl
or
mov
into
mov
bound
rorb
xor
cmp
mov
rcrb
mov
jns
in
jmp
cmc
pusha
xor
popf
add
jo
push
out
lret
xchg
pop
cmpsl
inc
sub
imul
in
incl
xchg
test
jbe
shll
cltd
fiadds
outsb
add
xchg
enter
mov
and
dec
mov
push
mov
cmpsl
mov
ds
test
inc
icebp
daa
je
jg
inc
pop
hlt
daa
pop
push
push
add
shr
push
mov
inc
and
in
and
sbb
scas
lock
jb
xchg
pop
mov
fwait
roll
popa
stos
cmc
push
add
pop
fmuls
push
or
cmp
arpl
and
add
jle
push
xor
sub
mov
sub
mov
fucomi
out
mov
int3
mov
sbb
cmc
pop
sub
lcall
fisttpl
icebp
mov
mov
negb
lcall
filds
dec
xor
mov
lods
ja
scas
les
jae
inc
psubsw
mov
adc
mov
fidivrs
inc
push
xchg
lds
lea
fucomp
sub
lods
sub
insb
dec
movq
jno
sbb
xchg
ja
popf
fstpl
inc
decl
lret
push
adc
out
out
pop
xchg
mov
xchg
pop
xchg
je
icebp
aam
out
push
dec
test
in
mov
fs
lds
inc
hlt
lods
ljmp
clc
mov
and
ss
sbb
mov
pop
adc
push
add
adc
out
xlat
stos
cmp
ret
and
movsl
and
lret
loope
loopne
or
pop
xor
sub
xor
dec
push
add
cltd
sub
mov
fs
adc
cmp
test
ss
cmpsl
test
ret
mov
and
adc
lahf
xchg
bound
scas
inc
aad
imul
imull
cmp
add
mov
sti
mov
leave
jno
out
inc
mov
xor
stos
add
sub
and
idivb
aas
cli
int3
les
loopne
fcompl
mov
sbb
in
jns
jo
ror
jb
insb
mov
jbe
cmp
add
shrb
test
add
and
pop
addr16
fs
sarl
in
int3
push
lcall
and
push
ss
mov
mov
repnz
xchg
pop
and
xchg
dec
push
test
addr16
mov
dec
clc
and
or
stos
or
mov
imul
xchg
outsl
mov
iret
inc
inc
mov
shll
jp
pop
jne
xor
jp
xor
ret
and
xchg
ja
rclb
imul
cs
pop
jnp
clc
push
gs
inc
ficoml
cmp
sahf
pop
loopne
pop
push
mov
mov
sbb
mov
or
mov
sbb
mov
jb
xor
std
mov
data16
loopne
call
nop
test
cmpsb
cmpsb
jne
pop
cmpsl
sub
fs
push
cmp
jl
inc
testb
fstl
pop
das
ss
add
arpl
mov
fisubs
mov
pop
push
inc
xor
push
clc
xor
inc
dec
add
bound
inc
dec
je
loopne
xchg
in
xchg
inc
cmp
cmp
xchg
and
roll
push
test
or
dec
adc
xchg
sbb
ja
or
pop
fiaddl
push
push
cmp
cmc
pop
rorl
jp
faddl
movsl
xor
rolb
or
fcmove
add
pop
shl
lods
rcrb
add
xor
jae
inc
aaa
ljmp
testl
mov
pusha
popf
jo
jg
cld
add
int
aaa
mov
aam
insl
hlt
cmpsl
jae
shrb
pop
rclb
fs
lret
dec
or
cmc
fimuls
pop
dec
shlb
push
mov
ja
mov
clc
pop
jp
adcl
rcl
arpl
cmp
mov
andl
scas
testb
xor
dec
xlat
sub
test
mov
xchg
xor
adc
push
inc
out
imul
fildl
cmpsb
inc
cmp
ds
add
in
mov
imul
cmpsb
and
cmp
add
xor
fldenv
jnp
rorb
and
imul
aaa
ret
inc
pop
push
mov
mov
jmp
dec
stos
out
pop
xchg
ror
mov
dec
lret
call
xchg
in
push
orl
sbb
jne
jno
notl
inc
mov
leave
vcvttpd2dq
insl
loope
and
mov
cmp
and
mov
push
les
popf
jbe
aaa
pusha
pop
adc
ja
imul
lock
push
into
jnp
xorb
dec
outsb
stc
lock
xchg
loope
ret
popf
push
mov
enter
addr16
loope
push
dec
push
outsl
cltd
xchg
rcrl
ret
inc
les
faddp
dec
shrb
jg
or
xor
rclb
inc
lods
jge
and
imul
mov
push
and
iret
daa
sub
sarb
or
jg
sub
ja
notb
cld
sar
lret
ret
xor
fbstp
outsl
outsl
arpl
imul
or
sub
cmp
push
mov
rclb
ret
mov
sub
sub
xor
xor
xor
cmp
cmp
fdivrl
cmp
cwtl
jmp
cmp
adcb
mov
setne
cmc
mov
push
and
xor
adc
dec
cltd
cld
sbb
filds
clc
push
sbb
dec
lcall
inc
jmp
int3
and
test
or
or
pop
lahf
shll
aad
repnz
loope
jne
inc
xchg
gs
data16
mov
ljmp
int
xorl
notb
jge
sahf
push
scas
sub
shll
mov
test
add
add
lea
scas
sahf
cs
inc
out
cmp
or
mov
xor
and
xchg
out
jb
test
dec
pop
mov
loope
or
in
mov
cmc
or
shr
stc
jg
addr16
andb
add
pop
push
fdivs
mov
mov
inc
jbe
jge
pop
leave
push
pushf
aaa
fwait
sbb
sbb
jne
lods
aam
ret
mov
push
insl
cmp
les
cmp
sbb
js
aas
fidivrl
lods
add
leave
call
inc
push
fucomi
xchg
or
leave
xlat
mov
call
in
popa
jge
mov
xor
and
xor
movb
in
mov
jle
bound
sti
out
inc
stc
cmp
div
imulb
shlb
test
cmp
sub
les
sbb
ds
psraw
adc
jb
fs
jg
call
lods
outsl
sub
sub
je
aas
dec
fs
mov
jns
lahf
lret
add
jge
in
stos
stc
fldcw
pop
enter
mov
movsl
fwait
xlat
pushf
call
nop
cltd
mov
push
fadds
lret
push
pop
jno
hlt
or
xor
inc
mov
in
test
cld
mov
mov
lahf
push
sub
ss
cmp
in
js
out
pop
inc
mov
mov
and
jl
enter
in
ja
xlat
data16
xchg
add
in
inc
cmpsl
add
inc
inc
adcl
in
or
mov
adc
sub
int3
mov
test
std
test
xchg
jo
add
sbb
add
insb
cmpsb
stos
loopne
jns
call
lea
mov
enter
popf
out
push
sahf
push
out
fistl
test
pop
cwtl
mov
repz
pop
mov
dec
lock
orb
xor
inc
inc
js
loop
mov
sbb
xchg
xor
hlt
jmp
mov
and
xchg
addr16
inc
stc
pop
nop
ficompl
bts
mov
inc
xchg
sbb
inc
pop
dec
es
cmpl
inc
cmpsb
popl
dec
scas
rcrl
push
jns
mov
mov
pop
jl
jns
dec
push
outsb
repz
into
cmpsb
jle
add
stos
loop
fisttps
addb
stos
xchg
pop
add
inc
xor
add
jg
jbe
mov
or
push
sub
aaa
inc
das
pop
faddl
loopne
inc
scas
fsubrs
and
jmp
fs
inc
ret
add
and
jne
fs
xor
inc
cld
adc
mov
inc
inc
loop
cmp
xchg
fsubl
fwait
jnp
sub
clc
mov
icebp
xor
data16
adc
mov
call
sbb
and
push
shll
scas
and
add
pusha
fwait
push
mov
gs
addr16
jbe
jno
dec
sub
pop
sub
xchg
iret
cmpsl
cmp
cwtl
adc
push
es
ret
or
xor
and
add
nop
daa
addr16
fnstenv
add
xor
int
jg
std
nop
or
dec
mov
gs
fimull
fucomi
test
xchg
clc
inc
jnp
adc
gs
cli
addr16
cwtl
adc
sub
mov
push
add
movsb
adc
dec
aam
mov
xor
push
hlt
in
mov
and
inc
add
sbb
mov
cmpsl
aas
adc
scas
cmp
notl
push
sbb
data16
fisttps
cmpsl
sub
cmpsb
lret
movsb
fsubr
in
sub
adc
sbb
icebp
fwait
adc
or
lret
adc
popl
push
ja
inc
dec
and
fldl
cmpsb
push
js
icebp
gs
xchg
mov
enter
cmp
jbe
and
out
dec
pop
xchg
enter
sbb
loop
bound
jle
ja
sahf
xchg
xor
add
xchg
ret
inc
push
push
cwtl
push
inc
test
jno
lret
shlb
jb
push
add
pop
sub
xchg
pop
push
sti
push
shrb
ret
xchg
lock
pop
push
jbe
es
adc
aaa
xor
xchg
jle
cltd
pop
cld
lea
push
and
xchg
fwait
mov
sbb
add
add
insl
adc
pop
add
shll
leave
out
rcrb
add
data16
mov
lock
fadd
cmp
es
push
cmpsb
test
test
cmc
rclb
jnp
and
enter
test
xchg
xor
cmp
push
aas
cmp
xor
jl
pop
mul
int
scas
jbe
inc
in
les
sbb
pop
or
imulb
data16
add
mov
mov
cmpsl
nop
inc
ds
mov
sbb
mov
sbb
inc
or
sarb
fdivs
mov
mov
popa
in
adc
mov
fiaddl
iret
jecxz
shl
mov
inc
cmp
iret
int
pop
push
stos
and
arpl
push
lods
push
cltd
jnp
jg
mov
loope
mov
jno
adc
dec
outsl
ret
mov
jmp
jns
xor
jp
roll
mov
test
and
lods
xlat
hlt
cmp
fwait
cmp
mov
push
sub
xchg
andl
mov
mov
fwait
dec
je
aaa
jno
or
pop
test
lock
ja
outsl
pop
jecxz
xchg
or
jge
imul
pop
hlt
mov
stc
xchg
rcrb
mov
sbb
inc
sbb
outsl
sub
scas
inc
mov
js
lahf
test
pop
cmp
aad
jno
insl
imul
in
cmp
jecxz
xlat
hlt
jle
push
jae
and
push
xor
outsl
jg
je
out
js
mov
mov
sub
or
mov
cmpsb
mov
pop
xor
ds
push
inc
xor
ja
xchg
jo
or
movsl
and
enter
xchg
inc
jmp
xor
scas
dec
or
cli
loop
cmp
enter
jge
mov
bound
shll
jbe
mov
or
das
int3
and
mov
pop
inc
vmwrite
xchg
dec
dec
xor
std
stos
inc
jbe
daa
inc
imul
xor
jecxz
loopne
gs
and
or
cmp
inc
imul
xchg
pop
xlat
shrb
xor
xchg
popf
inc
cmp
sub
or
mov
sahf
insl
mov
arpl
sbb
repnz
push
dec
pop
jne
pop
sub
adc
aas
js
popa
jl
nop
in
pusha
cmp
sbb
and
popf
movsl
out
ja
shl
popa
mov
ds
mov
xorl
xor
sub
ret
mov
data16
sbb
jle
sub
aaa
pop
mov
repz
dec
or
xor
sbb
test
std
xor
pop
inc
fwait
popf
fisttpl
dec
arpl
cmc
insl
inc
mov
out
iret
xchg
loop
mov
sbb
loop
mov
lds
and
mov
xor
jo
shl
sub
data16
jae
ja
into
inc
test
xor
pop
push
dec
daa
ret
pop
iret
inc
cmp
push
or
mov
push
addr16
push
sarb
fdiv
jnp
aam
add
int
mov
les
push
or
clc
sub
inc
sbb
pusha
scas
pop
sbb
mov
adc
and
adc
imull
lcall
cmp
xor
mov
mov
sbbb
sbb
xorb
cmp
jne
push
inc
jmp
lock
sti
mov
sbbb
clc
out
addb
cmpsl
int
aas
mov
mov
ja
xchg
es
cmpsb
xor
push
nop
lods
sbb
pop
mov
xor
mov
lods
rcr
sbb
push
cmpsl
mov
clc
adc
pop
icebp
orl
mull
clc
idivl
push
pop
push
mov
cmp
hlt
iret
cmp
or
add
repnz
inc
mov
cmpsl
pop
inc
loop
sbb
xchg
xor
cmpsl
add
cmpsl
xchg
fld
mov
mov
je
jae
int
jmp
mov
je
int
jl
pop
loope
aam
jg
and
pinsrw
push
jmp
xorb
movsl
inc
cmpsl
jmp
lret
mov
mov
es
mov
insb
pop
idivl
adc
and
js
inc
mov
mov
popl
push
mov
ss
xchg
mov
mov
stos
int3
jae
rclb
cwtl
adc
xor
mov
das
imul
dec
mov
xchg
repnz
outsb
aaa
jbe
iret
lea
pop
inc
ficompl
out
shll
fwait
stc
call
jecxz
and
test
stos
aad
mov
mov
or
cld
pop
fimull
icebp
orl
pop
jl
in
mov
push
xor
cmp
movsl
ja
jb
mov
push
xor
push
gs
jno
cwtl
lea
xchg
and
adc
loopne
jnp
cs
mov
pop
add
jmp
cld
push
mov
cs
movsl
dec
xchg
lods
sti
and
ds
psllq
mov
mov
icebp
or
and
je
or
icebp
xor
or
sbb
les
out
push
xor
mov
mov
dec
cmp
mov
push
adc
xchg
ljmp
scas
xor
shrl
or
mov
sub
sbb
mov
fpatan
jp
aaa
lds
fwait
lods
ljmp
adc
inc
mov
idiv
divl
loopne
jl
pop
mov
or
or
add
loop
in
mov
pop
push
fsubl
in
dec
repz
das
xor
mov
pop
sub
negl
sbb
fwait
mov
add
ret
cmp
test
in
rolb
outsl
mov
pusha
adc
mov
cltd
mov
adc
mov
sbb
xor
sub
js
mov
adc
out
cmc
jle
or
cmp
jnp
cltd
jb
fistl
lea
jbe
adc
jo
test
xchg
sbb
movsl
call
pop
add
cwtl
mov
xchg
cmp
mov
cld
andl
bnd
faddl
lds
mov
and
sbb
lds
sub
lods
leave
xor
dec
xchg
arpl
sbb
mov
inc
sbb
adc
fcompl
into
push
adc
sbb
jmp
dec
mov
pop
xlat
dec
lret
test
xchg
repnz
push
and
dec
bound
shlb
mov
mov
hlt
mov
add
hlt
pop
dec
pop
sbb
cmp
mov
mov
negl
stos
dec
outsl
loop
lds
inc
dec
les
mov
sub
mov
clc
push
dec
leave
ret
mov
outsl
adc
jb
mov
jle
sbb
out
inc
mov
out
sti
xchg
cli
inc
popa
and
xchg
stos
adc
push
cmp
mov
push
lods
shrl
pop
pop
xlat
out
ljmp
dec
mov
loop
jo
xorb
sub
add
adc
dec
mov
mov
sbb
cmp
imul
call
movsb
in
dec
push
fwait
sub
enter
test
out
fistps
jmp
test
xor
je
adc
std
inc
adc
lret
xor
icebp
sub
add
setnp
push
push
mov
loopne
xor
jbe
arpl
test
sbb
and
xchg
jb
sbb
xchg
xor
sbb
popf
pop
mov
imul
mov
lds
xchg
dec
in
dec
imul
adc
insl
rorl
arpl
xchg
addb
pop
xlat
sbb
pop
push
push
mov
fsub
test
dec
cmp
scas
jmp
pop
push
push
add
stos
and
stc
push
dec
mov
addr16
test
shlb
clc
and
add
xorl
mov
sbb
lcall
xchg
ljmp
and
cmp
test
jbe
aaa
and
pop
jg
int3
mov
hlt
pop
lret
and
dec
stos
or
mov
je,pt
addr16
lods
shll
fimull
test
icebp
in
xor
repnz
lods
sbb
sbb
pop
sarb
adc
sarb
out
xchg
jecxz
sbb
pop
int
adc
clc
inc
and
mov
cmp
pop
push
lret
pop
push
insb
sub
insb
in
mov
mov
and
push
cli
inc
pop
loop
sub
xor
inc
jg
push
xchg
out
call
mov
push
sbbb
and
push
imul
jge
inc
in
int
stos
std
push
nop
push
cmp
lret
inc
sub
cmp
ss
mov
and
push
mov
rorb
test
sub
add
scas
jno
aad
outsl
mov
clc
in
push
lahf
int3
call
adc
dec
cwtl
lea
nop
std
test
mov
orl
ja,pn
dec
cmp
je
cmp
push
jae
loope
ja
sub
jne
in
add
cli
pop
cli
or
cltd
cmp
mov
fidivl
inc
adc
and
pop
out
insb
xchg
pop
push
xor
js
bound
sbb
adc
movsb
rolb
adc
or
pop
mov
outsl
and
sbb
movsl
pop
mov
pop
inc
lret
add
mov
jo
stos
fwait
hlt
mov
sbb
icebp
aaa
cwtl
mov
cmpsl
aam
test
lahf
adc
loop
movsl
add
jae
jne
shrl
rorl
sti
xchg
push
push
int3
push
pop
subl
xchg
sub
js
roll
subl
clc
fdivp
loop
call
pop
jmp
add
or
pop
or
insl
mov
inc
inc
fstpt
add
ret
scas
dec
pop
adc
cli
idiv
pop
jb
and
adc
call
pop
ja
jle
inc
xor
mov
pop
push
dec
xor
mov
jmp
sbb
xchg
mov
cs
outsl
push
flds
sbb
push
add
std
int
xchg
dec
inc
mov
jae
es
iret
mov
sahf
mov
lds
daa
mov
sub
movsl
pop
mov
and
xchg
adc
movsl
xchg
jmp
lret
aam
imull
lcall
push
jecxz
fstps
pop
mov
movsl
push
and
xor
outsl
adcb
add
filds
pop
xchg
sbb
inc
out
and
pop
add
popa
pop
sub
sbb
out
cmp
stos
cwtl
fwait
imul
jmp
call
adc
sahf
scas
inc
out
cmp
push
outsl
inc
out
xchg
cmp
dec
inc
sbb
mov
incb
movsb
jno
adc
rorl
dec
lahf
fwait
aam
mov
scas
and
repz
xor
mov
ja
xchg
jl
outsl
js
dec
sbb
jne
arpl
push
test
pop
jmp
push
fsubrl
mov
les
mov
push
jmp
xchg
movsl
adc
call
call
in
enter
loopne
inc
das
ret
addr16
dec
sbb
insb
sbb
shl
inc
scas
bound
ret
or
mov
out
cmp
add
xchg
mov
loop
xor
mov
mov
xchg
xchg
int3
mov
int
aaa
mov
push
test
ror
lahf
push
in
out
jl
mov
out
lret
jle
aaa
mov
jecxz
ficomps
push
rclb
scas
dec
out
ljmp
es
push
fisttpll
adcb
das
add
loopne
sbb
ds
cmpsl
or
xchg
adc
test
xchg
mov
in
lods
sbb
pop
sub
cmp
xor
mov
mov
aas
addr16
outsb
xor
push
sub
jle
ret
or
xchg
popf
sbb
push
movsl
push
add
mov
or
pop
xor
in
push
jnp,pt
mov
loopne
stos
mov
xchg
jo,pn
outsl
and
lret
dec
dec
dec
mov
lods
test
ret
dec
dec
xchg
test
shrb
jle
xor
or
adc
mov
clc
cmp
mov
fiaddl
mov
imulb
repz
stos
and
dec
repnz
push
and
xchg
js
push
sub
cmpsl
popf
pop
cmp
cltd
cmpsl
sbb
or
loope
ret
jg
fmul
cmp
cmp
imul
je
inc
ret
pusha
xchg
mov
push
icebp
les
imul
cmp
call
sbb
jae
inc
xchg
pop
cltd
xchg
dec
or
in
dec
mov
mov
ret
movsb
sub
mov
stc
dec
or
or
push
mov
sbb
lcall
sbb
push
lcall
dec
sub
push
repz
jecxz
leave
cltd
adc
cltd
cmpsl
xchg
adc
addr16
xor
test
mov
inc
mov
mov
sbb
jne
addr16
ja
mov
and
aam
aam
jne
xor
out
xor
jo
pop
cwtl
idivb
aaa
xor
hlt
addl
jns
inc
lods
xor
repnz
push
xlat
adc
aad
lahf
aad
sub
lret
jns
ja
ror
inc
push
push
jmp
inc
lret
mov
fscale
adc
sbb
inc
lea
xchg
push
mov
int
insl
lds
push
aad
sbb
fs
xchg
das
test
inc
cltd
andl
cmp
imul
mov
push
lods
xchg
stos
and
sub
pusha
test
lret
jmp
into
cltd
or
pop
mov
adc
add
cld
inc
sti
xor
sub
rcll
pop
and
test
push
movsb
in
neg
adc
inc
sbb
add
jle
jb
in
adc
or
stc
rclb
and
ret
ljmp
insb
rcrl
sarb
pusha
jle
add
fmuls
mov
fpatan
rdtsc
mov
mov
push
mov
mov
outsb
ljmp
sub
push
jae
xor
xor
test
pop
nop
mov
shrl
rcrl
ret
or
addr16
cmp
sbb
add
lock
pop
ret
arpl
ret
xor
outsb
stos
adc
enter
push
mov
sarb
out
cmp
gs
popa
imul
xlat
adc
lds
and
jmp
movsl
add
dec
mov
fildll
test
xor
fs
xchg
push
xor
mov
pop
and
hlt
clc
mov
movsl
pop
pop
lock
inc
test
mov
push
jge
rorl
or
and
sbb
subb
dec
lock
pop
inc
jb
cld
stos
xor
ja
pusha
dec
inc
shll
roll
jb
ret
dec
lret
dec
cmp
adc
xchg
mov
mov
dec
iret
ds
dec
jne
xor
mov
xor
test
sbb
jle
jo
sub
push
insb
inc
jno
push
int
lods
cmp
movsl
mov
aas
clc
dec
lcall
sub
add
sub
push
lea
and
push
jl
sbb
pop
push
repz
lock
dec
mov
test
mov
mov
cmpsl
ja
mov
adc
gs
mov
push
rcr
push
daa
fldl
sbb
das
cmpsb
aas
not
or
ss
add
stc
sbb
aas
cmp
dec
push
xor
aad
sti
xchg
sbb
mov
jecxz
push
out
scas
mov
aad
ja
out
popa
arpl
loopne
sub
sbb
sub
mov
cwtl
xchg
sbb
fsubrs
xor
xchg
incl
push
mov
aam
adc
in
jae
ds
sbb
lea
sub
xchg
cmp
sbb
nop
or
jbe
jno
fsubr
mov
inc
scas
cmp
add
fisttpll
shll
sbb
outsb
mov
vpmaddwd
dec
std
bound
and
push
pop
xor
cwtl
push
push
add
sub
push
mov
les
dec
aaa
and
push
and
cmp
imul
and
cmp
hlt
leave
mov
imul
and
jo
mov
loop
or
push
inc
out
dec
shll
rcrl
adc
push
pusha
es
mov
push
add
sahf
xchg
sub
sbb
jae
dec
sti
jg
shl
sub
inc
jle
lea
rorl
xchg
lahf
clc
aad
mov
pop
test
cli
lea
jae
scas
mov
enter
push
andl
sbb
rorl
push
aad
rcl
data16
adc
pop
mov
and
in
cmpsb
sbb
add
sbb
inc
in
and
icebp
enter
pop
cmc
aaa
pop
sbbb
je
mov
std
popf
repnz
test
fsub
je
mov
rcr
xor
clc
sub
mov
aas
fsubs
cmpsb
ret
stc
inc
xchg
sahf
insb
mov
jle,pn
lret
dec
shrl
cwtl
adc
and
push
xchg
hlt
pop
jl
cmpsl
sti
sub
xchg
andb
rcrb
or
pop
xor
jle
neg
mov
xchg
pop
rcl
sbb
mov
ja
nop
or
movsb
push
pop
jle
rorb
jbe
xchg
enter
ret
ljmp
stos
es
xor
xchg
mov
mov
xchg
push
shll
push
loope
fwait
clc
aam
mov
fucomip
rorb
jle
mov
jg
pop
pushf
ljmp
adc
and
add
sbb
orl
push
rorb
sahf
lahf
negl
inc
cmp
fdivr
cltd
jmp
mov
push
mov
mov
xor
cwtl
push
popa
sub
cwtl
imul
mov
jp
fldt
shlb
loopne
andl
into
and
and
repnz
adc
subb
daa
xchg
xlat
stos
les
mov
clc
xchg
xchg
or
push
sbb
add
mov
mov
lods
fs
push
push
int
and
push
sahf
pop
jo
mov
or
add
sbb
push
addb
mov
int
lods
gs
sbb
es
xchg
sti
fbstp
cmp
add
or
jge
lret
iret
notl
lcall
scas
jle
mov
xchg
mov
jl
dec
dec
je
adc
mov
insb
cmp
xor
aas
push
mov
mov
jo
mov
sarl
cmpsl
inc
jns
daa
fbld
sbb
cli
xorb
mov
xchg
jle
stos
cmp
divb
mov
pop
sub
rcl
jnp
movsb
mov
sub
push
repnz
pop
xchg
xorb
push
pop
add
push
popf
dec
adc
es
and
outsb
call
sbb
dec
dec
cmp
cmp
mov
loopne
repz
push
add
lock
mov
lret
cmp
mov
gs
mov
pop
mov
cmp
dec
in
xchg
lcall
push
jnp
es
mov
ror
dec
xlat
shl
xor
jl
jns
cmp
stos
imul
scas
dec
fwait
mov
and
fstl
pcmpgtd
inc
cld
cwtl
adc
inc
cmp
je
sbb
xor
mov
shlb
mov
xor
int3
fnstsw
adc
out
lock
or
in
xorb
xchg
xchg
pop
push
or
xchg
mov
js
mov
and
test
sub
jbe
xchg
add
adc
addb
cmpsl
imul
push
jmp
mov
stos
mov
mov
fsubrs
nop
cmp
mov
inc
lods
jp
push
movsl
jno
iret
insl
inc
enter
iret
add
sub
ret
insb
test
or
sbb
enter
lock
daa
jmp
cmpsl
lods
jns
push
icebp
jbe
imul
lods
cli
mov
mov
or
xor
loopne
sbb
add
mov
jbe
xchg
popf
dec
xchg
add
repnz
lcall
inc
les
xor
push
sbb
sar
add
jecxz
dec
push
repz
in
inc
mov
adc
push
push
or
inc
jge
dec
xor
xchg
and
push
mov
stc
xor
stos
sbb
adc
xchg
jae
pop
jge
repnz
iret
frstor
mov
ds
int
cs
jp
hlt
lahf
insb
hlt
cmp
xchg
jl
lock
xchg
adc
out
aaa
mov
dec
jp
xchg
or
les
aas
sbb
or
jno
push
jae
xor
sbb
sub
pop
shrb
add
aas
int
cmp
push
mov
lods
imul
out
or
outsl
pop
out
dec
mov
es
dec
aas
decl
sbb
cmpb
pusha
fcoms
movsb
loopne
mov
ret
lcall
scas
orb
mov
dec
mov
dec
mov
imul
xchg
pop
cmp
negb
int3
mov
mov
push
xor
in
and
mov
in
fistpl
data16
add
xchg
adc
cs
mov
fstl
sbb
inc
lock
sbb
ja
daa
out
xor
xor
andb
add
inc
inc
xor
aaa
addb
and
mov
push
outsl
imul
xor
mov
clc
pop
movsl
and
pop
mov
push
in
insb
lods
inc
bound
mov
jbe
sbb
adcb
mov
test
fidivs
pop
mov
push
cmp
cld
movsb
sub
sub
shll
test
cmp
faddl
cmpsb
xor
roll
pop
adc
push
js
mov
ret
jg
aam
dec
sbb
jbe
mov
and
cmp
pop
dec
or
dec
test
jg
sets
or
mov
jmp
repnz
cs
int
fstl
add
aas
andb
mov
xchg
orl
pop
pop
xor
stc
out
inc
adc
inc
jo
pusha
add
pop
dec
mov
jnp
test
icebp
into
hlt
pushf
ja,pn
and
lahf
lea
fildl
sbb
aam
xor
packsswb
sti
jno
scas
xchg
dec
pop
cmp
shl
push
inc
fs
push
nop
pusha
testb
pusha
dec
out
cmpsl
mov
pop
adc
lock
cld
mov
int3
push
push
movsb
clc
add
add
xor
sbb
loop
out
mov
inc
bound
aad
sub
push
ss
int
jl
testb
push
js
pop
shlb
std
jge
lea
ss
jmp
cmpsb
ljmp
xor
jb
or
dec
jle
and
sarl
fs
test
adcl
push
fstps
and
mov
push
mov
inc
test
and
mov
mov
lcall
cltd
or
and
addb
clc
or
sbb
arpl
lock
fs
dec
and
mov
popa
dec
data16
cs
out
out
mov
nop
repz
lret
unpcklps
sbb
test
mov
int
cmp
into
jb
mov
push
inc
test
mov
xchg
shrl
in
xlat
faddp
mov
mov
adc
imul
jle
out
jno
sbb
sahf
mov
jne
cwtl
outsl
leave
xor
shrl
pop
int3
mov
fbld
ds
jnp
outsl
out
mov
pushf
pop
das
xchg
movsl
out
mov
sub
dec
or
cmp
scas
xchg
ret
sub
out
jle
lods
push
sbbl
push
sti
fldt
push
inc
aam
sub
ss
cmp
fwait
in
cli
cmp
lods
xchg
mov
mov
pop
inc
sarl
cmc
mov
ds
mov
sub
cmp
add
mov
mov
gs
outsb
movsb
sarb
jg
jmp
scas
xchg
cmp
cmp
into
add
mov
add
rorb
add
popf
arpl
xchg
stos
lods
cmpsb
add
les
das
iret
add
pop
shll
int
js
clc
cmp
inc
fistpll
ss
cmp
jno
fcoml
jns
mov
lret
add
xor
sub
repz
lods
or
test
jnp
or
repnz
mov
repnz
movsb
cs
fidivrl
push
loopne
inc
mov
mov
xor
sub
sub
adc
les
out
mov
addr16
fldcw
aad
fdivrl
ficoml
cli
pop
out
cltd
mov
pusha
gs
repnz
push
popa
inc
orb
mov
out
fisttps
pop
repz
inc
sub
fcoml
scas
pop
pusha
and
scas
ss
push
cmp
cltd
dec
mov
pop
outsb
out
or
insb
adc
movsl
xchg
sbb
sti
stos
jb
rcll
jp
fwait
ror
sbb
jae
mov
scas
pop
aaa
pop
int3
outsl
fiadds
cmp
aam
pop
mov
adc
cmp
jnp
inc
jbe
add
sub
sbb
lcall
ja
sbb
das
in
sti
mov
fisubl
cmp
out
and
cmp
xorl
and
adc
inc
cmp
fldcw
sarb
sarb
test
push
subb
push
push
in
fstl
dec
and
mov
pop
sub
aas
push
xor
mov
or
push
mov
sub
test
mov
cltd
imul
in
and
push
fistl
fs
lock
jno
cs
bound
cli
fld1
mov
shrl
mov
xchg
adc
sub
dec
mov
add
sub
lret
popa
push
lods
paddsw
in
mov
into
jecxz
movsl
daa
gs
ficoms
xor
insb
rol
je
stc
loope
jae
add
js
pop
sbb
ljmp
movsl
gs
pop
dec
iret
ret
outsl
pop
into
jp
mov
in
xor
push
and
fxch
pop
in
loopne
xchg
adc
lds
punpcklbw
leave
xchg
xchg
es
mov
mov
mov
lret
pusha
lret
cltd
mov
add
stos
stc
or
fildl
out
mov
imul
shlb
rcr
lds
in
cmp
cwtl
push
lahf
mov
imul
add
mov
and
adc
push
cmc
roll
sub
push
mov
loopne
sub
adc
aad
push
cld
jle
push
mov
sbbb
ss
xchg
mov
mov
shll
inc
pop
loop
and
movsl
cmp
sub
cmc
inc
pop
add
leave
ficomps
jnp
jp
mulps
or
bound
in
ja
out
cld
pop
pop
adc
add
mov
in
imulb
sti
loopne
int3
int3
clc
sub
xchg
lods
test
imul
sahf
sar
mov
and
loop
arpl
xchg
xchg
mov
mov
mov
sub
ret
lret
filds
cmp
js
iret
mov
out
inc
mov
pop
jns
xor
test
push
dec
pop
cmp
cld
fnsave
test
jb
adc
cmp
call
std
xor
popa
test
notb
mov
es
outsl
push
gs
lahf
or
dec
jle
repnz
sub
aas
pushf
lods
ja
psadbw
dec
jmp
pop
push
mov
dec
sbb
addr16
xorl
add
das
es
inc
sti
addr16
cmp
andl
sbb
repz
ljmp
adc
add
sub
xor
scas
mov
pop
lahf
stos
jae
push
in
mov
pop
in
push
int
sub
dec
stc
test
popl
mov
lock
mov
dec
nop
fists
jo
ljmp
popf
enter
sub
iret
outsl
sbb
and
sub
xchg
addr16
insb
frstor
sub
and
jb
insl
daa
mov
mov
jno
inc
xchg
mov
inc
mov
aas
insb
push
insl
cmpsl
xchg
pop
or
or
mov
add
aad
pop
div
sub
ret
mov
cmpb
mov
shlb
xchg
add
in
rcrb
jno
repz
in
lcall
lahf
pop
mov
outsl
sub
sbb
loopne
imul
stos
out
push
movsb
insl
pusha
ds
hlt
xchg
lret
mov
cmp
sbb
outsb
mul
mov
sub
repnz
imul
cmp
arpl
fs
cmpsl
pop
and
pop
sub
cmp
cmc
xchg
mov
jp
jmp
out
add
aas
fidivrl
jne
jg
popf
inc
sbb
std
jmp
adc
pusha
outsb
cs
aaa
mov
cmp
pop
sbb
or
mov
inc
lret
shlb
dec
and
jne
inc
cli
inc
add
aad
or
jns
add
jle
add
repz
shrl
push
les
cli
movd
movsb
loopne
push
xchg
dec
jle
mov
in
adc
inc
enter
xchg
jl
ljmp
add
xor
test
xchg
inc
outsl
mov
push
mov
mov
inc
mov
and
fsubr
sbb
mov
dec
jnp
cltd
jb
jnp
shrl
pusha
into
xchg
inc
sti
popf
pusha
fwait
pushf
inc
jecxz
mov
pop
xlat
jae
lods
dec
mov
stc
in
sbb
popf
mov
push
or
jg
lods
das
xor
and
sub
movsl
outsb
mov
and
add
lds
dec
cmc
or
push
ret
test
out
and
push
dec
cwtl
cmpl
dec
sarb
ds
cmpsl
in
incb
cltd
jle
jmp
mov
lock
mov
sub
int
sub
add
subl
cmc
jb
adc
repnz
div
repz
fdivl
es
jmp
lods
and
out
dec
repnz
cs
aaa
cmpsb
inc
pusha
scas
cmp
in
cmp
cld
or
xchg
lret
lret
xor
dec
xchg
outsl
or
mov
cld
rcr
dec
push
inc
mov
mov
es
sub
ret
and
jmp
sar
hlt
test
adc
cmp
pop
mov
and
mov
xchg
cli
inc
cs
ret
add
out
fst
pusha
int
xor
in
aam
mov
jle
addr16
sub
xlat
gs
leave
in
lea
or
and
dec
mov
shll
loopne
cwtl
push
imul
mull
fimull
sti
pop
lret
lcall
in
sahf
dec
in
push
push
lea
xchg
mov
inc
stos
jnp,pn
or
fucomip
inc
ret
cmp
shll
or
in
ret
and
and
push
outsb
fnsave
mov
shlb
sub
cmp
loop
or
shlb
push
aam
aaa
out
xchg
mov
pop
out
les
movsl
push
mov
mov
test
xchg
mov
lgs
adcl
sub
and
gs
sub
fisubl
xor
nop
xchg
jg
or
sbb
lea
pop
mov
cmpsb
jl
insl
mov
test
lock
lods
pop
imul
push
sbb
add
movsl
std
mov
push
inc
pop
adc
pop
inc
sub
pusha
jns
stc
in
push
in
ret
dec
in
mov
or
and
arpl
dec
ror
loope
rcr
pop
jecxz
add
or
test
out
mov
sbb
and
cmp
in
add
je
sahf
loope
adc
mov
repnz
sbb
and
aaa
adc
xchg
sbb
mov
sbb
std
and
mov
xchg
scas
push
jg
xchg
rol
scas
lea
in
gs
jp
jg
or
xchg
fldenv
imul
xchg
xor
jg
jbe
mov
xchg
fisttpll
lock
lahf
fstl
hlt
outsl
ret
jge
leave
dec
add
adc
lahf
jbe
icebp
xor
pop
jl
nop
aam
push
mov
push
mov
es
jnp
arpl
sarb
push
ja
and
std
inc
or
mov
das
dec
fildl
or
nop
hlt
push
hlt
das
leave
jae
fst
hlt
test
mov
loopne
jg
jo
subl
sub
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
pop
mov
int3
sub
xchg
push
movb
sub
pop
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
enter
cmpsb
imul
mov
or
aam
bound
out
mov
pop
cmpsl
mov
and
adc
addr16
negl
fs
or
and
jg
int
rcr
insb
jae
rcll
adc
adc
orb
frstor
xchg
add
cld
out
xchg
mov
mov
ret
arpl
cmp
mov
mov
clc
gs
jo
setge
mov
sti
xor
stos
mov
inc
mov
cwtl
xor
sbb
hlt
imul
mov
into
sbb
outsl
xchg
lcall
ss
ljmp
lahf
mov
pop
test
jno
pop
out
dec
add
test
subl
sub
mov
mov
lahf
mov
mov
int
mov
mov
sbb
lea
lcall
cltd
in
gs
cli
sbb
pop
fistl
add
dec
xchg
dec
jae
mov
jecxz
rol
lock
hlt
das
shll
and
push
cmc
mov
fnsave
mov
out
push
lcall
aaa
mov
rcr
ja
sbb
sarb
ret
lret
mov
rcr
xor
imul
push
inc
jp
popfw
mov
pop
add
fwait
jp
lods
or
fstl
test
lds
inc
call
sub
outsb
jmp
add
lret
sbb
loopne
jge
stos
add
and
cmp
leave
adc
mov
mov
repnz
cmpsb
and
iret
pop
mov
jo
mov
add
add
sti
lcall
mov
sbb
daa
sbb
inc
or
adc
sub
mov
mov
inc
in
fcmovne
in
dec
adc
imul
adc
leave
mov
clc
movsb
or
clc
push
nop
xor
dec
fsubrs
mov
adc
loop
cmp
orb
push
mov
jb
je
mov
shll
mov
jbe
bound
xlat
sti
mov
stos
aam
cld
hlt
daa
lahf
dec
addr16
fs
mov
jo
idivl
xchg
loope
push
cs
es
adc
fdivs
dec
inc
stc
cmpsl
add
in
push
inc
outsb
or
les
subl
sub
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
jo
subl
sub
mov
mov
lahf
add
or
dec
stc
daa
fisubs
pop
call
sub
stos
mov
mov
mov
lods
push
jnp
pop
hlt
adc
out
jo
clc
icebp
sub
mov
adc
dec
jg
mov
repnz
lret
mov
int3
loop
xchg
inc
cwtl
rclb
popa
adc
mov
jno
add
lea
and
cwtl
cwtl
inc
push
gs
lcall
je,pn
in
in
shll
jl
jp
adc
stc
adc
out
out
mov
dec
dec
adc
xchg
mov
mov
push
sbb
xchg
clc
ja
sbb
call
ljmp
adc
push
adc
mov
dec
cmp
xlat
fwait
insl
mov
mov
lock
xor
or
shll
ret
add
sub
or
push
or
sub
imul
into
into
and
mov
insl
jns
cmp
ds
push
lds
cmp
in
sbb
cmp
bound
push
mov
mov
jne
addl
mov
mov
push
and
xchg
adc
inc
daa
loopne
add
imul
hlt
insb
fidivrl
int
arpl
add
mov
loope
hlt
fdivrl
adc
loope
stc
jle
movsl
std
shl
sbb
adc
or
inc
test
sub
enter
sub
jbe
lock
les
sub
addb
das
iret
jmp
or
mov
add
mov
leave
pop
adc
push
icebp
push
xchg
arpl
stos
cwtl
cmpsl
gs
add
sahf
adc
push
mov
lods
add
shl
sarb
add
fs
mov
int3
xchg
cmpsb
mov
inc
xchg
scas
pop
jmp
daa
add
out
or
xchg
mov
dec
scas
stc
lret
jo
push
pop
daa
outsl
pop
cmp
xchg
push
mov
pop
popa
cmpsl
mov
data16
adc
push
xchg
push
repz
ds
test
jae
adc
dec
daa
inc
lock
or
aaa
stc
cmpb
cmp
out
lods
jmp
pusha
jb
fbstp
jb
aad
lret
fcompl
mov
sbb
add
or
mov
mov
jb
dec
adc
mov
aas
sar
les
mov
scas
jle
mov
nop
dec
outsl
ss
or
test
push
cltd
sbb
aaa
jo
fdiv
mov
mov
or
dec
adc
mov
jmp
xchg
mov
jbe
xchg
cmp
in
xchg
enter
or
lcall
or
sbb
sub
lcall
mov
adc
stos
rcrb
mov
inc
jg
bound
mov
add
sub
jge
inc
insb
ss
ret
aaa
xchg
add
int
pop
mov
in
inc
mov
fs
jbe
pop
cld
dec
xchg
inc
and
sub
fistl
xor
gs
dec
das
rolb
and
mov
movsl
inc
enter
cmp
push
push
mov
fisubrl
push
jne
inc
daa
dec
pop
int
cmp
pop
pop
shll
addr16
repnz
sub
pop
stos
xchg
js
leave
ss
in
and
gs
loopne
mov
jmp
cs
fnstenv
add
popf
pop
data16
aas
scas
rol
lret
xchg
data16
stos
stc
pop
out
out
cld
sbb
jmp
shlb
loope
dec
xorl
addl
jmp
popf
in
shr
or
aas
std
mov
mov
cmc
arpl
jle
in
push
dec
pop
jbe
daa
lds
loop
call
pop
nop
xor
add
sldt
add
add
xor
add
xor
add
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sldt
add
add
jae
sldt
xor
add
add
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
gs
jne
xor
cs
insb
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
gs
je
push
imul
popa
je
outsl
outsb
push
add
add
addr16
bound
arpl
add
je
popa
ja
outsb
jo
je
gs
arpl
outsb
outsw
push
add
add
je
imul
jb
add
add
jb
insb
insb
push
imul
add
je
imul
popa
arpl
outsb
je
add
push
popa
imul
jne
dec
fs
add
add
jae
gs
push
imul
jb
popa
outsb
je
imul
popa
jb
jns
jne
dec
cmp
add
push
popa
jb
cmp
outsl
insl
push
je
add
add
jb
dec
xor
jb
insl
inc
outsl
outsl
insb
add
adc
add
add
add
add
add
lock
add
add
add
add
add
add
or
add
add
add
add
add
mov
mov
mov
mov
inc
mov
loop
mov
sub
sub
lea
mov
mov
shr
push
mov
add
cmp
je
mov
cmp
je
push
push
call
pop
pop
dec
jmp
add
dec
jmp
pop
lea
mov
shr
mov
mov
xor
mov
add
loop
jmp
mov
pop
inc
xor
leave
movsl
sub
fwait
test
xor
sahf
jl
nop
call
jp
mov
jecxz
filds
adc
shlb
or
rcr
dec
lods
repz
jnp
sarl
push
cwtl
cs
std
mov
ror
xchg
test
add
jno
jp
lods
add
insb
les
mov
hlt
mov
and
and
cmp
negl
pop
cmp
xchg
in
fucomip
in
adc
or
insl
dec
mov
les
lcall
lods
sub
pop
mov
add
xor
enter
loop
cmp
lods
sub
shl
or
add
cmp
insl
cwtl
js
shr
push
pop
repnz
dec
push
pop
pop
pop
cli
mov
mov
in
pop
jmp
inc
insb
movsl
adc
jno
mov
push
xchg
pop
fs
mov
add
sub
dec
sub
mov
daa
mov
stos
pushf
jo
mov
inc
mov
mov
lods
mov
popf
pop
sbb
shrl
data16
mov
sub
xchg
push
mov
in
fldenv
stos
xchg
imulb
cmpsb
int3
rol
mov
bound
int
mov
pop
loop
mov
hlt
and
lret
mov
movsl
mov
icebp
jecxz
adcb
push
insb
inc
daa
repz
stc
movsb
xor
lea
inc
mov
ljmp
push
mov
pop
mov
outsb
add
sbb
inc
popa
push
jg
fwait
lock
into
pop
cmc
es
clc
test
xchg
xchg
lock
xor
aas
pushf
imul
cld
arpl
adc
iret
xor
insl
push
pop
or
inc
jbe
or
mov
pop
inc
rclb
repz
fmull
lock
arpl
mov
aaa
sbb
addr16
mov
pop
mov
mov
pushf
push
and
gs
mov
jns
insl
rcll
and
mov
jbe
jb
jbe
mov
jg
out
lcall
mov
inc
movsl
and
jnp
xor
mov
dec
add
mov
push
les
rolb
in
daa
xchg
mov
jbe
add
fld
jge
ret
jmp
cmp
das
ds
into
xchg
cmp
xchg
roll
fwait
push
cmp
cmp
jp
dec
sbb
xor
add
and
mov
and
xchg
sub
add
mov
mov
out
dec
pusha
fisttpll
loope
icebp
insb
orl
ss
mov
push
sub
inc
fwait
fs
push
stc
push
cmp
cmc
push
xchg
inc
outsb
adc
inc
pop
movsl
mov
xor
push
cs
or
mov
push
fwait
push
sub
add
adc
lods
aam
xor
cmp
stc
fisttpll
lods
test
or
sbb
mov
aas
or
gs
pop
pop
in
in
xchg
je
ss
aam
out
rclb
xor
xor
test
push
in
enter
sub
inc
mov
push
dec
out
inc
shlb
xchg
loop
mov
push
push
test
push
imul
shrb
fisttpl
loop
inc
in
push
and
hlt
shlb
cmp
sbb
pop
dec
jp
cld
sti
stos
and
lock
nop
mov
imul
sub
and
pushf
push
fs
pop
sub
and
loope
pop
dec
inc
hlt
dec
add
iret
shrl
lods
lret
xor
dec
mov
lea
mov
xor
int
pop
cwtl
ret
in
in
shrb
out
mov
lods
arpl
or
or
fwait
mov
jne
or
pop
xchg
movsl
test
or
add
mov
mov
jbe
add
into
dec
ret
orl
cld
icebp
cmpsl
or
ljmp
mov
gs
mov
mov
jbe
add
pop
sahf
lods
out
mov
mov
inc
int3
idivb
stos
cmp
push
xchg
icebp
into
je
lret
shll
jmp
push
cmp
lock
icebp
push
inc
and
sub
out
mov
jne
xor
mov
pop
scas
mov
push
cmp
jmp
arpl
xlat
test
fiadds
in
or
jnp
data16
sbb
sub
arpl
mov
cmp
stos
cmc
mov
fwait
and
mov
inc
xor
cmp
subl
clc
and
mov
cltd
fwait
loopne,pt
mov
dec
int3
scas
pop
fistps
push
aad
push
sbb
or
je
scas
push
mov
nop
or
push
repnz
and
push
xchg
pop
cmp
push
pop
aam
scas
fstpl
sub
call
sbb
addr16
mov
ret
adc
dec
stc
idivb
mov
cli
je
fwait
leave
rolb
mov
mov
imul
fnsave
or
in
pop
rcrl
lea
fcompl
mov
addr16
pop
dec
cmp
idiv
mov
scas
das
fs
in
jae
sbb
data16
into
lods
mov
movsl
mov
mov
aad
int3
out
js
pop
pop
xor
repz
pusha
pop
lret
inc
lahf
rorl
sub
or
mov
cmp
xchg
movsl
mov
fwait
lods
ret
or
xchg
pop
cmp
gs
fimuls
inc
xchg
pop
imull
xor
insb
push
cmp
add
int3
int3
int3
add
add
add
inc
add
icebp
push
add
add
add
int
int
int
int
push
add
inc
push
add
add
push
add
adc
add
int
int
int
int
int
int
int
int
int
int
int
int
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
mov
mov
mov
mov
add
xor
xor
xor
xor
sub
mov
and
xor
or
xor
not
or
xor
and
xor
and
xor
xor
and
or
xor
xor
and
xor
xor
xor
xor
xor
sub
ror
ror
mov
xor
xor
shl
xor
ror
xor
ror
mov
shl
xor
xor
xor
xor
ror
ror
xor
mov
and
xor
xor
xor
or
xor
and
not
xor
and
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
ror
ror
mov
xor
xor
shl
xor
ror
xor
ror
mov
shl
xor
xor
xor
xor
ror
ror
mov
or
xor
xor
and
xor
or
not
xor
or
xor
xor
and
xor
xor
and
xor
xor
xor
xor
xor
xor
xor
xor
sub
ror
ror
mov
xor
xor
shl
xor
ror
xor
ror
mov
shl
xor
xor
xor
xor
ror
ror
xor
mov
and
xor
or
not
xor
xor
and
xor
or
xor
and
xor
xor
and
xor
xor
xor
xor
xor
xor
sub
ror
ror
mov
xor
xor
shl
xor
ror
xor
ror
mov
shl
xor
xor
xor
xor
ror
ror
xor
mov
and
xor
or
xor
xor
or
xor
xor
xor
xor
and
xor
and
xor
xor
xor
xor
xor
xor
xor
sub
ror
ror
mov
xor
xor
shl
xor
ror
xor
ror
mov
shl
xor
xor
xor
xor
ror
ror
xor
mov
not
or
xor
xor
xor
or
xor
xor
or
xor
xor
and
xor
xor
xor
xor
xor
xor
xor
sub
ror
ror
mov
xor
xor
shl
xor
ror
xor
ror
mov
shl
xor
xor
xor
xor
ror
ror
xor
mov
xor
not
or
xor
and
xor
and
xor
or
xor
xor
or
xor
xor
xor
xor
xor
xor
xor
sub
ror
ror
mov
xor
xor
shl
xor
ror
xor
ror
mov
shl
xor
xor
xor
xor
ror
ror
mov
xor
or
xor
not
xor
xor
and
xor
and
xor
xor
xor
and
xor
xor
xor
xor
xor
xor
xor
sub
ror
ror
mov
xor
xor
shl
xor
ror
xor
ror
mov
shl
xor
xor
xor
xor
ror
ror
mov
and
xor
or
xor
not
or
xor
and
xor
and
xor
xor
and
or
xor
xor
and
xor
xor
xor
xor
xor
sub
ror
ror
mov
xor
xor
shl
xor
ror
xor
ror
mov
shl
xor
xor
xor
xor
ror
ror
xor
mov
and
xor
xor
xor
or
xor
and
not
xor
and
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
ror
ror
mov
xor
xor
shl
xor
ror
xor
ror
mov
shl
xor
xor
xor
xor
ror
ror
mov
or
xor
xor
and
xor
or
not
xor
or
xor
xor
and
xor
xor
and
xor
xor
xor
xor
xor
xor
xor
xor
sub
ror
ror
mov
xor
xor
shl
xor
ror
xor
ror
mov
shl
xor
xor
xor
xor
ror
ror
xor
mov
and
xor
or
not
xor
xor
and
xor
or
xor
and
xor
xor
and
xor
xor
xor
xor
xor
xor
sub
ror
ror
mov
xor
xor
shl
xor
ror
xor
ror
mov
shl
xor
xor
xor
xor
ror
ror
xor
mov
and
xor
or
xor
xor
or
xor
xor
xor
xor
and
xor
and
xor
xor
xor
xor
xor
xor
xor
sub
ror
ror
mov
xor
xor
shl
xor
ror
xor
ror
mov
shl
xor
xor
xor
xor
ror
ror
xor
mov
not
or
xor
xor
xor
or
xor
xor
or
xor
xor
and
xor
xor
xor
xor
xor
xor
xor
sub
ror
ror
mov
xor
xor
shl
xor
ror
xor
ror
mov
shl
xor
xor
xor
xor
ror
ror
xor
mov
xor
not
or
xor
and
xor
and
xor
or
xor
xor
or
xor
xor
xor
xor
xor
xor
xor
sub
ror
ror
mov
xor
xor
shl
xor
ror
xor
ror
mov
shl
xor
xor
xor
xor
ror
ror
mov
xor
or
xor
not
xor
xor
and
xor
and
xor
xor
xor
and
xor
xor
xor
xor
xor
xor
xor
sub
ror
ror
mov
xor
xor
shl
xor
ror
xor
ror
mov
shl
xor
xor
xor
xor
ror
ror
mov
and
xor
or
xor
not
or
xor
and
xor
and
xor
xor
and
or
xor
xor
and
xor
xor
xor
xor
xor
sub
ror
ror
mov
xor
xor
shl
xor
ror
xor
ror
mov
shl
xor
xor
xor
xor
ror
ror
xor
mov
and
xor
xor
xor
or
xor
and
not
xor
and
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
ror
ror
mov
xor
xor
shl
xor
ror
xor
ror
mov
shl
xor
xor
xor
xor
ror
ror
mov
or
xor
xor
and
xor
or
not
xor
or
xor
xor
and
xor
xor
and
xor
xor
xor
xor
xor
xor
xor
xor
sub
ror
ror
mov
xor
xor
shl
xor
ror
xor
ror
mov
shl
xor
xor
xor
xor
ror
ror
xor
mov
and
xor
or
not
xor
xor
and
xor
or
xor
and
xor
xor
and
xor
xor
xor
xor
xor
xor
sub
ror
ror
mov
xor
xor
shl
xor
ror
xor
ror
mov
shl
xor
xor
xor
xor
ror
ror
xor
mov
and
xor
or
xor
xor
or
xor
xor
xor
xor
and
xor
and
xor
xor
xor
xor
xor
xor
xor
sub
ror
ror
mov
xor
xor
shl
xor
ror
xor
ror
mov
shl
xor
xor
xor
xor
ror
ror
xor
mov
not
or
xor
xor
xor
or
xor
xor
or
xor
xor
and
xor
xor
xor
xor
xor
xor
xor
sub
ror
ror
mov
xor
xor
shl
xor
ror
xor
ror
mov
shl
xor
xor
xor
xor
ror
ror
xor
mov
xor
not
or
xor
and
xor
and
xor
or
xor
xor
or
xor
xor
xor
xor
xor
xor
xor
sub
ror
ror
mov
xor
xor
shl
xor
ror
xor
ror
mov
shl
xor
xor
xor
xor
ror
ror
mov
xor
or
xor
not
xor
xor
and
xor
and
xor
xor
xor
and
xor
xor
xor
xor
xor
xor
xor
sub
ror
ror
mov
xor
xor
shl
xor
ror
xor
ror
mov
shl
xor
xor
xor
xor
ror
ror
mov
and
xor
or
xor
not
or
xor
and
xor
and
xor
xor
and
or
xor
xor
and
xor
xor
xor
xor
xor
sub
ror
ror
mov
xor
xor
shl
xor
ror
xor
ror
mov
shl
xor
xor
xor
xor
ror
ror
xor
mov
and
xor
xor
xor
or
xor
and
not
xor
and
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
ror
ror
mov
xor
xor
shl
xor
ror
xor
ror
mov
shl
xor
xor
xor
xor
ror
ror
mov
or
xor
xor
and
xor
or
not
xor
or
xor
xor
and
xor
xor
and
xor
xor
xor
xor
xor
xor
xor
xor
sub
ror
ror
mov
xor
xor
shl
xor
ror
xor
ror
mov
shl
xor
xor
xor
xor
ror
ror
xor
mov
and
xor
or
not
xor
xor
and
xor
or
xor
and
xor
xor
and
xor
xor
xor
xor
xor
xor
sub
ror
ror
mov
xor
xor
shl
xor
ror
xor
ror
mov
shl
xor
xor
xor
xor
ror
ror
xor
mov
and
xor
or
xor
xor
or
xor
xor
xor
xor
and
xor
and
xor
xor
xor
xor
xor
xor
xor
sub
ror
ror
mov
xor
xor
shl
xor
ror
xor
ror
mov
shl
xor
xor
xor
xor
ror
ror
xor
mov
not
or
xor
xor
xor
or
xor
xor
or
xor
xor
and
xor
xor
xor
xor
xor
xor
xor
sub
ror
ror
mov
xor
xor
shl
xor
ror
xor
ror
mov
shl
xor
xor
xor
xor
ror
ror
xor
mov
xor
not
or
xor
and
xor
and
xor
or
xor
xor
or
xor
xor
xor
xor
xor
xor
xor
sub
ror
ror
mov
xor
xor
shl
xor
ror
xor
ror
mov
shl
xor
xor
xor
xor
ror
ror
mov
xor
or
xor
not
xor
xor
and
xor
and
xor
xor
xor
and
xor
xor
xor
xor
xor
xor
xor
sub
pop
mov
mov
mov
mov
pop
pop
pop
pop
ret
int3
int3
int3
int3
