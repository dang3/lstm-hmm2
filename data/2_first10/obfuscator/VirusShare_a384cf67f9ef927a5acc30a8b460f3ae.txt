push
call
ret
ret
test
mov
pop
cmp
inc
pop
std
cmp
sub
addr16
push
dec
in
jmp
bound
mov
xchg
pushf
repz
nop
call
fwait
xor
mov
pop
or
arpl
inc
dec
lret
mov
clc
sub
fadds
push
inc
xor
mov
out
mov
lods
xchg
jae
or
repnz
adc
movsl
test
out
xchg
push
in
out
push
inc
scas
adc
mov
loope
pop
cltd
adc
xchg
rcll
ljmp
and
sbb
rcrb
stc
add
addb
mov
pushf
sub
cmp
xchg
notb
cmp
cmp
sub
in
movsl
mov
push
mov
mov
push
pop
shrl
jmp
sub
clc
mov
sbb
fstps
sti
and
stos
cmpsl
mov
andb
pop
dec
in
movsl
pusha
push
repz
cmp
fstl
push
mov
pop
addw
in
jnp
lret
ret
pop
add
pusha
cmp
aam
xchg
push
xlat
jle
into
rcl
bound
shll
xor
xor
call
xchg
bound
mov
test
sub
ret
loopne
or
dec
add
jns
pop
inc
pop
mov
xor
jmp
sub
lea
mov
or
insl
push
fdivs
inc
cmpsl
rcll
fwait
addr16
push
inc
in
pusha
jmp
shl
sub
mov
add
dec
iret
or
xor
insl
push
push
mov
mov
pop
add
rcll
in
outsb
data16
xor
adc
or
testb
xorl
pop
decl
pop
inc
jg
daa
adc
daa
push
cmp
sub
in
inc
push
in
jb
cmp
jecxz
rclb
xor
push
add
and
pushf
fmull
and
jp
pop
lahf
add
enter
mov
jecxz
ficoms
mov
xchg
mov
add
ret
inc
enter
adc
sahf
xlat
outsl
jbe
sbb
push
xlat
rclb
push
pop
push
clc
sbb
push
test
xchg
popa
xchg
repz
push
call
add
cmp
mulb
cmp
mov
loopne
pop
mov
jae
shl
xor
mov
and
fidivl
out
dec
js
mov
gs
hlt
sbbl
call
sbbl
mov
or
bound
dec
sub
xor
jmp
repz
sti
xor
or
sbb
fwait
test
sbb
mov
pop
daa
mov
dec
pushf
das
xchg
inc
fcmovbe
sub
sbb
inc
mov
fnsave
and
push
sti
arpl
adc
pop
xchg
push
lods
hlt
ret
add
outsl
sbb
xchg
push
inc
lret
cmpb
pop
nop
fwait
sbb
jge
mov
jp
outsb
js
pop
mov
jge
lods
enter
pop
add
clc
stos
in
add
lahf
fistpll
xor
pop
dec
sarl
mov
jno
xor
out
lret
enter
push
sahf
das
sub
xor
test
add
mov
xchg
into
adc
sbb
mov
sub
test
pop
push
cmpsl
out
sub
je
push
mov
jmp
mov
push
add
sbb
insl
fsincos
mov
lcall
test
jne
outsb
sbb
dec
push
push
xchg
adc
insl
pop
inc
bound
lea
dec
push
fimuls
mov
pop
loopne
fisttpl
cmp
inc
jns
in
xchg
pop
push
lret
pusha
pushf
adc
js
aas
mov
mov
pop
mov
xchg
sti
ret
dec
xchg
divl
dec
inc
outsl
or
inc
adc
jnp
cmpb
dec
pop
out
hlt
sbb
or
inc
cmp
sub
gs
cwtl
mov
js
insl
push
sub
lods
jae
dec
mov
rorl
mov
in
jno
cmp
lea
mov
pop
fmul
jno
repnz
mov
adc
push
adc
adc
insb
dec
bound
jno
insl
or
dec
shl
iret
and
mov
mov
pop
test
rol
fstpt
adc
js
call
test
and
fnstcw
in
inc
push
outsb
lods
jns
sbb
lock
xchg
or
lcall
mov
shlb
fsubl
fnstcw
call
stos
mov
fnstsw
fimull
cmp
cmp
inc
call
mov
mov
in
cs
pop
sahf
mov
popa
js
scas
cmp
sub
add
sbb
push
aam
mov
les
push
xchg
dec
aam
jne
das
sub
xor
pop
inc
push
arpl
pop
xchg
xchg
cmp
jmp
or
subb
daa
je
sahf
out
and
jg
int
pop
dec
cmp
jle
out
xchg
cld
inc
cmp
fists
lret
ret
icebp
sti
jl
cmpsl
push
sbb
outsb
mov
xorb
popl
mov
fnstcw
dec
std
popa
cmp
mov
xlat
movsb
xor
xor
mov
and
jne
push
xor
dec
xor
xchg
fwait
xchg
fisubs
paddusw
jp
sbb
insb
divb
clc
out
pop
dec
ret
mov
xchg
sub
xlat
push
bound
xor
sahf
xor
daa
lods
push
mov
negb
addr16
test
gs
cmp
pop
daa
lret
fdivs
jae
imul
pop
into
jns
adc
shlb
cld
aas
sub
test
hlt
mov
or
dec
xchg
inc
repnz
dec
cltd
clc
pop
dec
adc
pop
or
xor
pusha
lods
pop
push
xor
mov
lods
sbb
cs
mov
addr16
add
dec
or
adc
mov
fcmovu
cmp
xchg
cmpsl
cmp
outsl
test
test
addr16
adc
xor
cmp
add
fidivs
inc
dec
push
ss
add
mov
aam
out
lahf
cmp
mov
pop
pop
dec
out
add
cmc
inc
add
movsb
hlt
stc
fcmovbe
xchg
sub
adc
xor
mov
call
xchg
rcrb
filds
sbb
fmul
scas
jo
dec
arpl
mov
daa
jl
pop
rcrb
test
sbb
fwait
repz
push
lods
test
xor
pop
es
in
add
cmp
out
lods
push
jnp
xchg
and
and
lock
lret
push
arpl
jmp
fwait
mov
sbb
jle
sbb
aam
call
ss
pop
cmp
fmulp
push
sarb
dec
into
pop
jno
push
mov
ds
fadds
icebp
sbb
or
hlt
cmpsl
inc
ret
negb
sbb
dec
divl
addb
jge
sarl
inc
aam
mov
loope
and
cs
fbld
sti
xchg
insl
les
je
xor
out
sti
inc
icebp
add
pop
mov
test
jg
iret
cmp
mov
and
cmpsb
xor
je
outsb
dec
movsl
in
aaa
jne
fsub
xchg
xchg
fwait
into
movsl
loope
loop
push
mov
push
mov
add
inc
lahf
push
in
inc
addb
adc
dec
out
cltd
lds
test
sub
xchg
and
js
adc
loop
push
cmc
sbbb
cmp
cmp
stos
adc
bound
cmp
pop
scas
pop
lods
push
out
pop
arpl
xchg
popf
cmp
mov
jge
ljmp
imull
add
fsubrp
jmp
cmp
ljmp
ret
dec
mov
xchg
xchg
std
dec
daa
stc
push
and
push
mov
outsb
jb
and
or
out
mov
in
xchg
fldenv
loop
aad
clc
add
jne
or
mov
imul
pop
fcoml
in
sbb
psrlq
shrl
mov
ret
ds
adc
daa
jmp
aaa
loope
xchg
mov
insb
and
mov
dec
xor
mov
gs
xchg
or
xchg
pop
push
icebp
in
mov
and
mov
cmpb
leave
dec
pop
cmp
mov
add
scas
aaa
es
sub
cmp
mov
sub
imul
pop
addr16
pop
xor
adc
loop
iret
in
insb
mov
aaa
mov
add
ja
gs
sub
fsts
jmp
push
pop
inc
pusha
pop
cmpsb
or
ss
mov
jne
mov
lret
daa
aaa
pusha
pop
xchg
jg
sub
push
movsl
fs
out
nop
nop
arpl
add
inc
sub
fildll
arpl
orl
sbb
mov
push
push
xchg
sub
cmc
dec
mov
xor
sbb
sbb
daa
or
fmuls
mulb
test
adc
lock
mov
adc
mov
into
aam
pop
xor
js
xchg
cmp
mov
xor
fnsave
aaa
testl
add
pop
lds
orl
push
std
into
ds
cmpsl
mov
jmp
repz
inc
pop
and
cmp
cwtl
and
std
fmuls
int3
jmp
loop
push
adc
mov
rorb
sub
mov
adc
sub
push
inc
sbb
scas
xchg
pushf
adc
or
insl
push
stos
sti
sub
mov
push
lret
std
jmp
mov
ja
adc
scas
stos
in
fldenv
into
mov
xchg
pop
push
and
or
add
dec
cmp
loopne
add
add
subb
lds
or
stc
xchg
leave
int
xor
mov
xchg
std
cmp
les
repnz
cmc
jecxz
mov
in
fsts
mov
push
adcb
lds
push
aad
sbb
push
sub
mov
test
incl
lret
xor
xor
or
cld
aam
or
test
and
mov
nop
mov
jmp
sub
fdivs
mov
xlat
push
dec
jnp
pushf
xchg
btr
cmc
inc
adc
adc
cli
cwtl
push
adc
jbe
or
jle
sub
int3
inc
xorl
jmp
lcall
cmc
jne
jmp
daa
push
sub
clc
int3
push
adc
cs
push
pop
enter
jne
pop
and
lahf
sbb
push
fldl
mov
mov
push
or
pop
rorb
mov
jns
sbb
sub
dec
or
pop
mov
test
in
mov
insl
mov
das
cmp
sbb
cld
jmp
int3
inc
popf
and
pop
bound
xchg
rcl
sahf
dec
or
jno
xchg
call
dec
sub
repz
movsl
xor
fnclex
inc
divb
cmp
xchg
add
sbb
rcr
sbbl
mov
scas
fld
loopne
xlat
adc
dec
movsb
inc
push
mov
pusha
push
outsl
mov
cli
xor
mov
scas
fnsave
popa
pop
adc
loop
ss
fisttpl
in
add
push
add
bound
sub
cmpsb
cli
adc
xchg
flds
push
sub
ss
iret
push
test
push
clc
inc
push
repz
sub
mov
pop
push
cmp
test
addb
sbb
aam
jb
gs
xor
mov
xchg
jnp
shlb
fwait
push
data16
sub
mov
cmp
fisubrl
pop
ljmp
xchg
lret
adc
adc
push
outsl
push
aaa
in
pop
int
or
mov
rcr
mov
rorl
cmp
push
xor
inc
int
jmp
cmp
sbb
adc
fwait
dec
and
js
xlat
jb
push
adc
sub
fiadds
fwait
call
clc
jp
icebp
pop
add
int3
ja
cmp
test
cmpsb
mov
push
pop
or
movsb
inc
aad
sahf
push
cmp
int3
cld
adcl
fstl
cltd
shrb
adc
mov
negl
rcrl
daa
add
sbb
cmpsb
pop
fs
pop
lret
sbb
aam
mov
jecxz
xor
xor
iret
jmp
xchg
rorl
fucomp
into
dec
add
test
mov
xor
add
pusha
scas
ret
push
cmp
mov
out
push
xchg
xor
js
adc
xchg
dec
sarb
bound
xchg
and
hlt
lret
sub
dec
movsb
xchg
gs
xchg
adc
mov
and
push
pushf
push
mov
aaa
sbb
and
cmc
push
mov
mov
mov
push
je
jg
and
jns
scas
xchg
cmpsb
mov
testl
fs
lds
lock
pop
hlt
add
enter
scas
jo
repnz
aas
xchg
lcall
mov
push
mov
daa
add
jnp
mov
sub
sarb
mov
sbb
lea
or
mov
lods
aad
xor
js
cld
jo
sbb
cs
ret
in
popa
std
and
ret
xchg
gs
rorl
ret
fnstcw
les
sub
pop
cmp
jo
jne
je
push
in
dec
jbe
jmp
lret
test
ljmp
cmp
dec
out
xchg
pop
push
das
mov
mov
mov
mov
add
cmpsl
push
les
push
ret
leave
aad
add
lret
sub
add
arpl
sub
out
bound
insb
inc
mov
ljmp
xor
add
jno
mov
sarl
cmc
add
inc
sub
or
sbbl
fwait
je
pop
mov
fistpl
jno
stc
adc
add
jmp
inc
cmp
inc
or
bound
inc
push
mov
loop
jl
out
dec
inc
pop
jecxz
sbb
push
inc
pop
std
adc
es
dec
scas
push
add
sbb
rclb
xor
ret
nop
scas
inc
jbe
jmp
sahf
stc
jmp
subb
mov
xor
xchg
js
mov
mov
push
cmp
push
push
push
gs
mov
out
sti
or
xor
xchg
adc
shl
pop
push
pop
xchg
mov
mov
push
idivb
mov
pop
es
or
sub
dec
loop
int
daa
pop
lds
mov
je
jns
test
adc
xlat
mov
out
xor
rcll
gs
dec
mov
leave
sub
loopne
jno
into
sbb
in
adc
test
add
out
test
mov
pop
mov
dec
jns
out
or
jns
cltd
outsb
leave
nop
dec
xchg
jae
aaa
sti
xor
pop
push
sti
push
or
mov
sar
pop
clc
add
mov
push
pop
sarl
sbb
lcall
nop
xor
or
out
bound
stos
sub
push
adc
loop
test
sbb
aam
inc
pop
loopne
lahf
pop
jmp
seta
testb
clc
lds
sbb
sub
jnp
sbb
aad
add
fists
aad
adc
sbb
sbb
lds
pop
push
and
fidivrl
shl
mov
mov
inc
cmc
and
inc
outsl
pop
mov
cwtl
adc
je
ja
jbe
int3
jp
ficomps
insb
pop
cmp
ljmp
in
imul
mov
cmp
stos
or
int3
inc
mov
stos
loopne
out
jb
fisttpll
das
jg
ss
cmpsl
dec
jg
mov
int3
sbb
fs
mov
mov
push
ret
cld
scas
or
sub
test
pusha
and
enter
xchg
call
out
je
ja
jmp
idivb
notb
dec
rcl
sub
out
roll
xor
mov
push
pop
inc
cmp
std
lret
xor
test
dec
mov
cmc
mov
aas
jmp
shr
or
jle
out
push
lds
scas
jle
gs
ja
int
stos
adc
enter
out
test
mov
stc
mov
mov
pushf
and
xor
jl
mov
pop
push
pop
mov
add
pop
mov
sub
adc
mov
sbb
jecxz
and
stos
cli
xchg
xor
dec
fcoml
enter
sarb
iret
and
scas
push
imul
xor
movsb
imull
inc
cmp
inc
mov
jl
inc
test
dec
ficoml
in
add
jo
fimull
mov
push
aad
and
xchg
out
popa
inc
mov
popa
mov
and
sub
imul
jecxz
and
pop
stos
inc
andb
xchg
pop
adc
fwait
and
dec
rcl
divb
sbb
or
mov
ja
mov
add
lods
leave
adc
imul
cmp
mov
lahf
xchg
inc
in
pop
in
cltd
xchg
inc
pop
push
iret
mov
xor
lds
out
stos
cltd
mov
cmp
inc
pop
mov
shll
sub
popw
pusha
aaa
inc
orb
push
pop
nop
nop
repz
jecxz
clc
pop
pop
loopne
mov
pop
fmull
test
outsb
aaa
jb
or
add
and
enter
jo
lock
push
cwtl
adc
jge
mov
mov
pop
jecxz
push
idivl
pop
sub
xor
xchg
dec
lds
dec
add
call
mov
xor
mov
or
pop
out
dec
and
inc
rcrb
xchg
scas
add
inc
mov
inc
aad
dec
lcall
fcompl
cmpl
push
in
xchg
or
sbb
or
jle
jb
and
or
mov
push
adcb
in
xor
push
inc
outsl
inc
mov
fidivrl
push
push
dec
enter
lret
bndstx
xor
xor
dec
xchg
cmp
aad
flds
sti
inc
jmp
fldl
aam
mov
and
loop
mul
jge
mov
mov
fcoml
sbb
xor
mov
ja
xor
int3
ljmp
out
inc
xchg
cmpsb
inc
mov
outsb
ror
xor
mov
xchg
repnz
xlat
sub
das
lahf
fistpll
sub
int3
inc
fdivr
ljmp
loopne
sub
inc
cmpsl
in
jo
jecxz
pop
jecxz
jo
clc
jp
cmp
and
pop
addb
inc
fcompl
fisttpl
cmpl
sub
subb
xchg
push
nop
pop
adc
jb
mov
lret
push
sbb
dec
ja
shrb
xor
push
add
popf
aam
or
mov
arpl
inc
es
push
leave
test
mov
fucom
fcompl
clc
sbb
cmp
sti
out
mov
xor
add
fwait
aam
xor
xor
sti
rol
sbb
in
cltd
fisubrl
mov
loopne
xor
add
cli
into
out
addr16
jno
push
xlat
shlb
subb
mov
xchg
cmpsl
cs
and
fistps
ficomps
push
pop
dec
lret
aam
push
and
and
jl
cmp
ret
stos
ja
or
mov
shlb
aam
mov
pop
std
bnd
adc
sti
in
test
xor
dec
adc
popf
lahf
or
jnp
popa
stc
pop
loopne
sbb
rclb
rcrl
push
and
inc
jae
int3
jl
shl
pop
cltd
scas
call
ds
test
mov
mov
cmpl
dec
loope
mov
xchg
and
and
xor
and
pop
scas
clc
adc
pusha
addr16
cltd
fildll
dec
fimuls
je
pop
lds
iret
clc
gs
cmpb
aaa
push
repz
cs
adcl
das
pusha
std
sbb
das
dec
mov
mov
lret
jo
ljmp
mov
imul
pop
mov
orb
jmp
loop
push
fsubrs
ror
dec
inc
and
fistpll
and
movsb
push
fistpl
fistpll
adc
add
cs
aaa
add
insl
setns
sbb
lods
xchg
pop
dec
ja
orl
adc
pop
out
or
je
xor
lock
xor
push
test
pusha
mov
insl
mov
fisttpll
add
mov
neg
mov
dec
ja
out
test
xorl
out
frstor
ss
negl
mov
xchg
cmpsl
bound
add
rcll
fldl
into
jle
hlt
mov
mov
sbb
mov
xor
mov
aas
cmpsl
insb
mov
jge
xor
mov
mov
push
xchg
dec
sub
mov
inc
loope
aad
insb
ret
push
cmp
xchg
add
push
xchg
and
aam
scas
pop
mov
repnz
and
jo
cld
loopne
out
loope
mov
repnz
outsl
sbb
lcall
adc
jae
cmp
and
inc
adc
cs
xchg
push
add
mov
ja
mov
fstpl
scas
sbb
hlt
into
pop
add
sub
adc
hlt
fwait
scas
aaa
sub
ss
aaa
fwait
mov
cmc
inc
outsl
mov
bound
and
out
lahf
idivb
rorl
into
pop
test
js
add
ret
sarb
fnsave
pop
lcall
nop
or
lock
inc
in
arpl
pop
push
xchg
outsl
cmpsb
jne
mov
addr16
adc
pop
inc
dec
imul
stc
pop
repnz
inc
loopne
scas
shrl
add
dec
stos
jb
addr16
mov
pop
add
dec
pop
out
xchg
dec
jecxz
cmp
pop
popl
icebp
pop
mov
push
push
repnz
int3
sub
jg
popa
orb
icebp
or
push
jg
cltd
mov
das
loopne
mov
cmpsb
in
shl
stos
negl
jp
stos
adc
xor
repz
es
mov
adcb
notl
sbb
adc
fwait
jmp
cmp
lds
mov
or
jnp
cmp
scas
push
leave
pop
in
leave
push
inc
js
dec
bound
inc
dec
in
pusha
fidivrs
jno
ret
mov
push
inc
cmp
bound
ja
jno
inc
adc
rorl
fidivrs
aam
sbb
jb
andl
add
lds
mov
cmp
shlb
les
pop
mov
mov
push
test
out
je
jmp
daa
and
xchg
jns
int3
std
cwtl
test
mov
xchg
int3
dec
xchg
fsubrl
lahf
push
mov
rol
insl
aas
int
dec
ljmp
out
xorb
mov
ffree
and
icebp
xchg
push
mov
je
push
jb
jle
push
inc
insb
sub
or
mov
outsb
addr16
pop
sti
add
iret
dec
adc
pushl
insl
push
sub
dec
leave
add
fwait
pop
pop
push
jl
out
insl
xor
lds
xor
sbb
lock
xchg
add
push
add
jecxz
cmpsb
mov
hlt
mov
pop
aam
xchg
das
es
in
out
adc
shlb
add
xor
sub
adc
pop
jno
xchg
mov
popa
cmp
add
cmp
loop
mov
loop
inc
lmsw
bnd
and
cmp
out
scas
rcr
push
mov
add
cmp
out
cmp
xchg
fcomip
stos
xchg
xchg
push
fwait
call
xchg
repz
dec
fisubrs
mov
xor
add
je
add
imul
adc
inc
movsb
pop
daa
in
sbb
inc
pushf
fsubrs
in
cmpsl
lret
add
push
add
mov
int3
jg
inc
popa
lahf
add
insl
cli
ja
sub
lahf
sub
push
jnp
xor
ret
repnz
outsl
out
mov
mov
sub
pusha
in
mov
add
ss
push
mov
fildll
xchg
push
inc
insb
popf
int
push
add
ds
out
daa
pop
in
sbb
pop
mov
dec
shrl
mov
scas
cmp
fxch
sbb
sbb
lcall
out
push
mov
push
xor
in
sbb
mov
adc
andl
ret
popf
leave
cmp
icebp
int3
popa
mov
mov
pop
loop
push
and
fidivs
imul
aaa
pop
rcrb
mov
stc
nop
ret
sbb
push
test
addl
jp
out
in
aaa
into
lods
sbbl
add
or
loop
jnp
or
in
iret
mov
stos
insb
jecxz
in
mov
adc
adc
mov
mov
out
leave
cltd
addr16
inc
ja
adc
fcmovb
push
in
int
lock
ja
push
addr16
push
and
cld
push
xchg
xchg
cmpsl
or
das
mov
jl
sub
das
mov
jo
mov
test
xlat
pushf
rcrl
push
add
pop
jmp
dec
cltd
mov
push
cli
sub
mov
add
fbld
push
sub
adc
push
nop
sbb
stos
xor
push
lods
xchg
mov
ss
mov
rcll
jns
ss
jge
aad
push
cltd
push
inc
out
repz
jmp
pop
rcll
fldl
or
out
and
add
test
mov
aas
mov
es
or
aas
dec
iret
shlb
and
cld
xchg
das
add
cmc
sahf
sub
rorl
mov
push
xor
cld
mov
cltd
jle
pop
xor
sbb
loop
lds
jmp
call
mov
push
mov
inc
xchg
repz
loop
not
jecxz
or
into
pop
test
mov
cmpsl
in
jno,pt
inc
jb
fiadds
mov
pop
das
cs
iret
mov
xor
ss
inc
adc
bound
aaa
lahf
sbb
lcall
vpmovswb
repz
dec
out
lods
or
sub
cwtl
mov
int3
jne
push
mov
or
sbb
push
cmp
mov
orb
in
movsb
hlt
test
mov
outsl
movsl
fwait
sbb
add
imul
xor
fists
loop
jmp
xor
addr16
jnp
outsl
adc
mov
mov
push
xor
mov
std
xchg
subb
outsb
js
sub
nop
in
add
bound
inc
pop
js
xchg
sub
jmp
lds
jno
movb
mov
xchg
aaa
pop
aam
push
jae
or
lock
jno
xor
insb
mov
divl
in
fmuls
enter
gs
add
xchg
ljmp
movsb
jmp
inc
sbb
ja
jne
cmp
dec
dec
cli
or
outsl
mov
mov
adc
in
insb
and
adc
mov
xchg
fldl
mov
xchg
arpl
push
mov
popf
xor
xor
aam
inc
adc
adc
gs
mov
nop
jp
dec
and
sbb
aaa
inc
xchg
gs
rolb
mov
dec
and
out
dec
jecxz
pop
getsec
pop
mov
mov
repnz
insl
test
or
xchg
sahf
mov
mov
cmpsb
fwait
sahf
mov
inc
xchg
pop
mov
adc
sub
ret
mov
add
sub
jp
push
repz
pop
mov
les
inc
jnp
jns
hlt
jno
sbb
xchg
fadd
xchg
or
rcll
loopne
mov
push
cs
lret
xchg
por
in
gs
jg
jp
dec
mov
or
cmp
sub
repz
hlt
leave
test
adc
in
in
test
int
dec
out
push
jb
fs
pop
loop
mov
popa
adc
dec
aad
jg
xchg
stos
lds
dec
dec
cs
shlb
sbb
fcoml
rcrb
les
push
inc
dec
mov
mov
inc
out
insl
ds
fbstp
ja
push
inc
jo
mov
dec
jno
push
cmp
out
arpl
add
jle,pn
ror
cs
or
mov
je
xor
and
mov
es
fbstp
cmpsl
pusha
into
jg
adc
les
imul
rcrl
popa
xchg
inc
lds
jecxz
out
jb
loope
jb
jge
fsts
cmp
or
lods
jo
mov
cmpsb
add
popf
sub
jg
or
into
cmpsb
out
mov
add
cmc
jne
dec
orb
push
jbe
mov
jb
sahf
sbb
fldenv
fwait
lret
cld
mov
pop
sub
scas
in
or
mov
fadd
lea
jmp
xchg
loope
xchg
outsl
sahf
out
decb
cld
addr16
and
mov
mov
loopne
icebp
scas
mov
hlt
add
pop
nop
dec
fcmovbe
cmpsb
sub
lret
push
inc
daa
dec
mov
std
pop
in
add
sub
imul
mov
inc
insl
jae
and
icebp
sbb
fwait
cmpsl
clc
mov
inc
aam
and
shll
pop
xchg
sub
push
or
ljmp
ficomps
jge
insl
insb
loope
mov
jle
aam
fs
xor
out
scas
shlb
aaa
pop
aas
inc
jl
nop
das
lcall
sbb
pusha
jbe
pop
inc
call
xchg
mov
mov
push
or
or
leave
lock
stc
popf
push
fidivrl
ds
xchg
out
out
aas
nop
scas
or
mov
inc
push
sbb
sbb
add
or
imul
mov
sub
call
fsubrl
push
imul
outsb
push
or
js
pop
lcall
fucomp
adc
es
fs
sub
popf
flds
or
jp
daa
loopne
cld
cli
lahf
mov
sbb
pop
mov
inc
js
out
dec
insl
and
push
cmp
aad
out
dec
inc
mov
shrl
or
jno
xor
sbb
lods
inc
pop
bound
add
sbb
jb
jne
fwait
add
xor
xor
fadds
and
std
aaa
pop
xor
mov
mov
xor
loopne
add
mov
sub
jbe
xor
pop
sub
adc
lods
es
dec
add
mov
std
mov
ss
xchg
js
int
pop
pop
cs
mov
stc
leave
sub
sahf
jmp
add
pop
xor
scas
leave
fwait
adc
mov
lret
les
mov
daa
aaa
inc
cmp
jns
xor
sub
mov
sub
jg
or
pop
test
fnstenv
imul
imul
jno
mov
sbb
dec
mov
dec
rcll
nop
or
jge
insl
sub
test
loop
cmp
or
xchg
mov
pop
or
icebp
mov
xchg
ljmp
xor
js
push
imul
dec
jb
loopne
jl
xchg
jecxz
or
fisubrs
lea
out
out
scas
push
mov
ljmp
rolb
pusha
in
je
inc
movsl
std
cli
ffree
out
xlat
insb
push
xor
cld
xor
sbb
fsub
je
xchg
xchg
imul
sarb
mov
dec
pusha
into
cmp
xchg
xchg
repz
clc
jmp
fistps
xchg
pop
push
cmp
outsb
and
mov
cwtl
cmp
cmp
lret
pushf
mov
pop
or
pop
lea
shr
je
stos
std
dec
push
movsb
mov
cmp
scas
xor
clc
sarl
and
dec
add
mov
inc
fwait
inc
xor
fs
and
in
jne
das
mov
push
and
cli
sbb
xchg
jne
xchg
sub
jmp
lds
push
jge,pn
add
pop
hlt
xchg
int
inc
push
fstpl
inc
loop
sahf
and
jle
lea
xchg
inc
fwait
xor
adc
int
cmpsl
cwtl
mov
mov
and
add
pop
sti
aas
sub
jmp
fcoml
sub
mov
sbb
cmp
sub
xchg
mov
lds
hlt
jecxz
lcall
mov
or
cmc
gs
scas
lds
push
add
push
lret
aam
sti
or
aam
push
pop
out
jge
mov
mov
out
insl
push
add
mov
cmpsb
xor
xor
outsl
fwait
popa
cmc
imul
js
cmp
xchg
leave
jb
and
jb
mov
dec
imul
jno
mov
mov
sub
pop
das
mov
xchg
mov
sbb
mov
stc
pop
gs
aas
sbb
mov
xchg
cwtl
mov
cld
sub
rcrl
inc
dec
xor
shrl
fistps
aad
adc
out
loop
test
ljmp
rcr
pop
add
jne
inc
je
push
or
xor
faddp
pop
ret
inc
out
push
pop
in
fstl
ljmp
or
jb
xor
add
test
pop
leave
subl
jns
daa
adc
add
mov
adc
or
push
mov
jecxz
icebp
pop
mov
rcr
mov
jecxz
dec
adc
fsts
pop
xor
dec
pushl
and
push
dec
pop
stos
aaa
mov
pop
dec
pop
push
mov
mov
jne
out
sahf
push
jae
mov
shrl
sbb
xlat
fdivs
daa
lahf
or
and
cwtl
sbb
lcall
call
mov
jl
jmp
call
cmpl
or
jmp
xchg
mov
int
push
xor
adc
adc
negb
xor
xchg
push
jg
add
aaa
mov
jp
mov
popa
inc
add
daa
cmp
lods
or
mov
movsb
mov
xor
pop
add
or
fwait
jecxz,pn
push
xlat
jmp
dec
ret
xor
dec
int
das
mov
test
adc
ret
mov
inc
push
jle
push
inc
mov
lock
popa
imul
cld
jne
adc
das
ljmp
mov
fildll
xchg
sbb
mov
nop
inc
jmp
movsl
cs
push
pop
push
addr16
in
pushf
lcall
sahf
repz
sbb
xchg
outsb
sub
loope
push
outsb
push
int
andl
or
inc
scas
int3
push
bound
daa
push
push
std
dec
sbb
aad
int
jp
xchg
int
hlt
pusha
les
mov
xor
stc
imul
mov
mov
inc
cmp
loop
test
mov
mov
jle
gs
popf
add
test
out
mov
pop
sbb
test
xor
pop
mov
sub
out
aaa
pslld
sahf
xchg
xchg
push
inc
inc
xor
bound
arpl
add
ljmp
add
add
pop
jmp
adc
aaa
cld
jne
pop
mov
lea
movsl
dec
pop
pop
gs
shrb
mov
pop
push
mov
stos
cmp
push
in
jo
mov
adc
rcll
data16
aaa
pop
add
out
push
sub
add
xor
and
insb
nop
daa
mov
xor
xor
or
adc
arpl
iret
mov
mov
pop
repz
and
pop
inc
adc
cvttps2pi
rorb
sbb
inc
sbb
xor
push
ljmp
pushf
call
shll
daa
stc
cltd
mov
jp
inc
and
outsl
mov
cmp
inc
mov
sub
cmp
adc
imul
sarb
sbb
hlt
out
jmp
jle
enter
add
repz
or
in
mov
ret
test
out
xor
and
xor
cmpsl
test
out
push
aam
xlat
cmc
or
and
mov
adc
das
addr16
fdivs
jge
push
test
and
insb
adc
pushf
sbb
push
lcall
xor
repz
loopne
jns
fistps
xor
mov
pop
std
mov
notl
test
mov
pushf
pop
add
mov
jle
xchg
push
pop
mov
xchg
lods
pop
pop
pushf
cwtl
gs
xchg
mov
mov
pop
in
sub
ja
outsb
xchg
shlb
das
lods
cmc
and
insl
int
jno
test
mov
jbe
inc
pusha
inc
or
mov
push
mov
aam
scas
inc
aad
or
scas
push
push
dec
xlat
lcall
jb
push
fs
call
ret
push
sub
sub
inc
push
pop
mov
mov
pop
dec
movsl
add
imul
or
add
push
in
cmp
stos
mov
jne
xlat
out
insb
mov
mov
push
add
push
pop
pop
mov
lret
imul
mov
test
push
xorl
repz
stc
dec
add
and
in
sti
fwait
mov
pop
mov
xchg
jmp
xchg
cs
pop
fstps
fcompl
movsb
int3
xor
or
sar
cmp
xchg
mov
mov
mov
test
js
and
mov
add
into
out
out
pop
mov
push
adc
pop
pop
mov
mov
daa
dec
loop
cmpsb
mov
inc
mov
mov
lret
rcrb
and
dec
push
and
testb
leave
inc
popf
jg
dec
imul
xchg
xorb
xor
push
add
jg,pt
movsl
in
les
loope
sub
scas
sbb
lahf
sahf
idiv
in
or
push
mov
aaa
popa
xor
inc
xchg
pop
and
rolb
mov
sub
testb
pop
dec
mulb
imul
push
jno
or
add
test
aas
leave
xchg
cltd
mov
add
fiaddl
cld
jge
test
ret
pop
add
shl
js
pop
mov
pop
lods
aaa
push
int
imul
arpl
and
add
jo
cli
mov
popa
push
lds
out
mov
ficoms
dec
mov
xor
aas
jb
inc
or
mov
adc
cmpb
inc
xchg
jb
lods
lret
add
and
popa
setge
je
jb
xchg
testl
jmp
inc
pop
jmp
daa
adc
fcmovnb
inc
iret
dec
sbb
mov
mov
je
test
clc
mov
or
xor
movsb
scas
xchg
lea
cmc
or
sti
stos
sti
mov
dec
adc
icebp
jno
int
daa
std
cs
dec
xor
or
fwait
loop
insl
dec
jno
mov
rorb
dec
ds
stos
js
in
and
mov
es
in
mov
mov
mov
mov
loopne
insb
mov
push
bound
mov
inc
cmp
imul
push
mov
sbb
cmp
push
lret
bound
pop
jb
daa
repz
xor
mov
inc
fmull
jl
push
lods
hlt
cmp
xor
and
jl
out
jle
mov
test
int
push
sub
add
inc
jae
fsubp
or
mov
pusha
into
cwtl
mov
into
pop
xor
adcl
pop
cltd
and
jmp
sub
push
jecxz
mov
pop
or
inc
sub
push
ljmp
mov
dec
pop
clc
pusha
jecxz
sub
pop
stos
int3
out
insl
cmpsb
xlat
lret
repnz
sbb
loop
xchg
jnp
jne
cmc
lsl
xor
jmp
sbb
sub
pusha
push
call
dec
mov
test
bound
push
jne
scas
out
xor
dec
out
mov
mov
cmp
stc
loope
mov
orb
enter
or
in
popa
cmp
into
lret
ja
divl
dec
fcmovnb
frndint
push
push
ror
mov
repz
psubb
jmp
xchg
sub
das
pop
xor
rclb
movsb
cmp
out
mov
in
es
pop
mov
insb
adc
cmp
mov
add
pop
xor
adcl
enter
pop
pop
add
mov
jno
test
outsl
out
fcoml
mov
icebp
cs
mov
push
ja
push
sti
push
rcl
mov
sub
in
out
sub
dec
mov
xor
mov
lock
pop
jp
pop
push
imul
inc
add
push
add
test
add
stos
and
loopne
and
ljmp
push
push
push
push
out
in
dec
in
lods
fdivrl
jno
mov
imul
sbb
jmp
insl
xor
in
mov
loopne
inc
mov
test
data16
or
mov
jno
mov
push
rol
scas
dec
cmpsb
leave
dec
mov
jo
outsl
mov
push
adc
fisttpll
imul
mov
out
sub
sbb
movsb
jns
push
cmp
xchg
pop
inc
xor
imul
pop
push
or
dec
mov
jne
xor
out
cmpb
js
pushf
movsb
subl
loopne
jge
push
insb
leave
dec
mov
call
sbb
and
and
aad
pop
into
inc
fdivr
ja
adc
mov
sbb
pop
test
xchg
cmpsl
pusha
stos
mov
mov
addr16
cmp
push
jne
out
mull
adc
push
inc
pusha
pop
mov
jg
add
adc
mov
out
pop
sub
cli
jmp
inc
jno
insl
lods
mov
xor
andb
ds
fbstp
jg
jge
dec
inc
add
pop
outsl
aad
add
cmp
push
or
divb
sbb
hlt
je
mov
adc
fcoml
test
mov
mov
jo
sbb
cmpsb
cmp
int
fdivrl
stc
mov
dec
mov
fst
mov
or
pusha
ss
jnp
sub
or
dec
fwait
jne
rorl
mov
cld
push
sbb
fists
mov
dec
adc
xor
sbb
mov
call
out
in
mov
fcomps
test
sub
out
or
outsl
push
inc
mov
adc
fdivrs
xor
ret
div
out
jmp
and
fstp
pushl
loope
insb
aam
xorb
cmp
xor
add
cmpsb
out
xor
cwtl
mov
cmp
xchg
cmp
test
cs
xor
mov
hlt
pop
add
aam
push
mov
jge
sbb
mov
dec
pop
sarb
cmp
aas
lock
out
jl
push
and
jbe
jo
or
jge
mov
or
sbb
pop
fdivr
mov
clc
add
mov
mov
xor
scas
enter
xor
or
mov
push
enter
imul
mov
pop
dec
jecxz
mov
sub
xor
shl
je
stos
jns
and
loope
jecxz
loopne
and
push
or
jae
pop
ja
stos
dec
push
sbb
sub
je
pop
dec
jecxz
in
mov
dec
mov
rorl
in
repnz
pushl
in
cld
cmp
xor
in
lds
xchg
addr16
mov
adc
jo
lcall
stos
ffree
pop
jecxz
fnsave
rclb
and
push
xchg
cmp
sub
mov
inc
xor
mov
mov
outsb
mov
sub
pop
jns
adc
pop
cmp
sti
or
pushf
jecxz
mov
jb
out
in
add
cltd
out
pop
or
les
cs
pop
out
rorb
addl
sbb
sub
test
test
fmul
jmp
add
mov
andb
jle
push
or
sbb
cmp
mov
push
mov
mov
cmpsl
or
arpl
inc
lcall
test
lret
lahf
pop
subl
loop
lods
or
pushf
lods
int
cmp
add
xchg
mov
add
adc
jecxz
icebp
lcall
shrl
in
out
leave
push
icebp
daa
rclb
and
sub
mov
cmc
loop
adc
rcrb
pop
insb
mov
repz
xchg
fsubs
lcall
push
inc
xchg
insl
cld
notl
jl
xor
dec
adc
shr
ja,pn
lahf
sub
and
repz
mov
dec
cld
xchg
es
lret
scas
xchg
xchg
mov
sbb
js
frstor
sbb
adc
cmp
push
jecxz
mov
gs
loope
fcomip
cmp
sub
mov
sbb
popf
sbb
dec
mov
inc
popf
loopne
jmp
dec
xor
repnz
xor
push
lods
cmp
push
pop
lahf
fldl
sbb
ljmp
vpsubusb
mov
adc
cmc
or
je
daa
ror
mov
mov
out
push
mov
lret
mov
ffreep
mov
mov
pushf
lret
push
and
aas
nop
xchg
addr16
mov
xchg
ffree
stos
inc
pop
cmpb
js
sbb
movsl
pop
pop
mov
xchg
sub
clc
dec
ds
cmp
jmp
jo
push
mov
jo
loope
xchg
cs
stos
adc
push
cltd
out
lea
repnz
sbb
pop
jge
mov
pop
ret
sbb
mov
sub
out
shl
cli
movb
push
mov
push
mov
jae
inc
pop
ja
sub
mov
xor
dec
test
pop
lahf
ss
fimuls
cli
sub
or
in
int3
xor
loopne
jno
cmpl
enter
sbb
sbb
push
xlat
sub
pop
int3
jmp
adc
xchg
in
and
lock
shrl
pop
xorb
inc
or
not
push
xor
les
add
pop
adc
enter
mov
or
cwtl
mov
cs
or
test
fldcw
aad
jl
outsl
sub
jo
jo,pt
jl
popf
inc
sbb
xor
movntq
inc
add
fcmovb
mov
cmp
jo
mov
je
std
jo
and
mov
cmp
xchg
dec
jp
adc
inc
fdivr
aaa
pop
subb
adc
sbb
sahf
ja
dec
bound
rcrb
call
push
sbb
lods
pop
pop
andb
in
dec
mov
sub
jno
pop
mov
fs
inc
rorb
sub
icebp
stos
loope
ffree
outsl
movsl
mov
das
sbb
jge
xor
jne
loope
add
lret
jecxz
pop
push
add
inc
fisubrl
js
loopne
adc
bound
leave
inc
push
repnz
mov
test
inc
add
rorl
fstpl
ljmp
ljmp
movsl
xor
addr16
add
jo
mov
jns
lret
adc
or
imull
sub
mov
adc
xor
inc
add
jmp
sub
xor
repnz
cmp
cmpsb
push
ret
data16
xor
out
pusha
lahf
movsb
add
sbb
shlb
fs
xor
jae
or
mov
jg
ljmp
pop
sahf
xlat
cld
or
mov
and
mov
ret
push
jecxz
jp
push
cmp
adc
pop
shrl
orl
test
outsb
xor
sti
test
cmc
testl
fldcw
call
adcl
cmp
fdivrl
pushf
or
test
jge
clc
bound
in
jnp
cmp
fwait
or
out
into
pop
out
xchg
push
hlt
idivl
push
mov
test
xchg
movsl
nop
clc
scas
cmp
mov
aad
int3
adc
mov
test
dec
cltd
pusha
aad
and
ja
loope
pusha
adc
outsl
into
push
sahf
push
pushf
mov
jne
push
push
test
add
dec
pop
jns
subl
cmp
pop
adc
hlt
pop
es
iret
sahf
sbb
jno
repz
cmp
into
pop
mov
insb
test
push
pop
lcall
pop
arpl
jbe
pushf
jo
rolb
push
testb
pop
movsb
clc
popf
or
cmp
in
and
rorl
jmp
xor
or
push
repnz
mov
xor
pop
mov
dec
popl
xor
mov
and
pop
iret
mov
jl
jp
loop
mov
or
or
add
xor
xor
mov
shrd
sub
fcoml
out
into
pop
rcrb
jg
fcomip
xlat
mov
je
div
sub
mov
cmpsl
shll
push
lret
int3
inc
jmp
imul
jne
pushf
mov
out
inc
sbb
les
rorb
push
or
cvtpi2ps
pushf
scas
lods
sti
pop
ja
dec
or
cmp
sbb
stos
outsb
rclb
cmp
adc
dec
idivb
xchg
test
fdivl
mov
movsb
jnp
popa
outsb
shrl
mov
int
cmpsb
in
gs
inc
out
sub
repz
mov
jmp
or
scas
sub
fsubrl
lret
adc
pop
jecxz
inc
popa
jns
and
test
insl
loopne
mov
jns
stos
xchg
pop
scas
pop
fpatan
rorb
cmc
in
xor
iret
out
test
test
cmp
jg
in
lret
mov
push
loop
jns
lock
popf
repz
xor
xchg
hlt
pop
push
in
jbe
lret
hlt
andb
pushf
jg
movsl
jb
insl
popl
jmp
sbb
mov
add
test
or
add
ja
sbb
insb
dec
mov
add
xchg
pop
imul
xchg
sbb
in
xor
xchg
daa
or
jne
sbbl
or
testl
mov
inc
cmp
ds
sbb
mov
testb
fimuls
pop
cmp
lret
cmovo
mov
stc
ret
dec
std
out
cmp
and
fcmovnb
in
inc
pop
repz
mov
cmp
es
in
mov
fildll
ds
push
repz
in
call
scas
lds
sub
cmp
fsubrs
js
xor
call
ljmp
fsubrl
mov
or
dec
cmp
test
push
loopne
mov
jle
sahf
aaa
int
push
jo
ljmp
pushf
mov
adc
popf
push
mov
inc
sbb
xor
arpl
cltd
imull
lock
into
sbb
stos
push
sbb
xchg
jmp
aam
jecxz
gs
fs
js
or
xor
or
je
into
inc
and
xorb
push
add
push
jno
aaa
jl
mov
xor
mov
mov
fiaddl
push
lock
dec
clc
stos
jecxz
inc
in
xor
flds
out
mov
outsb
mov
popf
xor
fimuls
addr16
insl
ljmp
ret
shl
ss
sbb
into
sub
shl
xchg
inc
pop
and
push
fisttpl
jl
sarl
test
cwtl
bound
dec
mov
mov
dec
cmp
divl
adc
pop
adc
sub
pop
sbb
cld
lea
imul
test
dec
pop
dec
dec
jbe
push
test
lock
sub
mov
je
xchg
inc
jne
sbb
and
pop
mov
jnp
pop
fstpt
mov
std
clc
lret
out
das
loope
es
fdivrs
out
and
inc
fcompl
cmp
int3
mov
scas
jl
push
mov
lret
fnstenv
ljmp
pop
mov
lcall
jl
lods
outsl
jecxz
lcall
mov
hlt
push
pop
pop
push
mov
xchg
mov
xchg
nop
jns
mov
int3
jg
pop
mov
push
adc
fwait
je
jle
dec
xor
gs
pop
or
mov
xor
mov
ret
jp
notl
dec
xor
mov
inc
mov
lods
mov
in
stos
aaa
orb
adc
popa
cmpsb
test
enter
mov
jp
aas
les
mov
push
pusha
inc
or
shrl
int
add
stos
inc
inc
jo
outsb
jg
divl
sub
loop
jno
fcomi
mov
xor
pop
jmp
inc
push
ja
jp
movsb
ret
arpl
add
lods
push
dec
outsl
cltd
pop
inc
ret
fwait
roll
pop
ljmp
add
adc
mov
and
jae
clc
sub
outsl
inc
sub
ljmp
push
xor
sbb
cltd
aam
mov
cmp
fbld
fisubrl
out
cmp
adc
dec
dec
inc
mov
and
fstl
inc
pop
jb
sbb
xorb
sub
fldln2
scas
adc
jmp
push
mov
loope
push
inc
es
fisttps
add
out
sbb
push
ficompl
popf
xchg
ficoml
sbb
cltd
mov
mov
ja
mov
adcb
jmp
jnp
push
dec
sti
dec
imul
out
stos
mov
inc
push
jmp
sti
or
xchg
mov
jne
repnz
lret
push
insb
imul
mov
test
inc
lahf
in
jg
add
push
jnp
xchg
adc
movsl
addr16
lret
mov
jno
cmp
cld
push
push
sub
adc
mov
xor
adc
dec
inc
xor
mov
cs
jecxz
fnstsw
gs
push
out
mov
jg
mov
jne
sub
roll
popa
mov
jp
xchg
ror
movsl
mov
sub
mov
ret
es
arpl
mov
adc
movsb
addr16
adc
pop
mov
mov
pop
or
and
jb
mov
sbb
cltd
int3
mov
pop
inc
pop
jne
scas
sub
and
sahf
loop
scas
inc
bound
paddusw
jg
int3
mov
mov
jno
mov
mulps
adc
icebp
cmpl
push
fisttps
xchg
push
cmc
iret
mov
mov
and
lods
movsb
icebp
adc
mov
mov
fnstenv
xchg
cmp
xchg
popa
mov
xchg
ret
mov
mov
dec
jnp
andl
mov
mov
push
out
inc
pusha
shll
mov
push
aas
scas
jp
gs
jns
pop
push
nop
mov
jmp
imul
clc
jge
xchg
dec
jp
out
dec
mov
xor
mov
lret
shlb
sbb
mov
repnz
arpl
jmp
fcmovnbe
pushf
dec
loope
es
lods
movb
mov
xlat
mov
xchg
jecxz
sbb
ret
lock
adc
push
mov
int
xor
pop
stc
nop
cwtl
mov
int
into
xchg
mov
iret
and
or
std
lahf
mov
jns
ja
jne
sub
add
fsubrs
repz
imul
adc
dec
push
bound
div
jmp
stc
jecxz
incb
mov
mov
imul
add
inc
xchg
add
testl
ror
bound
aas
push
cmpsb
sarb
push
outsb
sarb
xlat
lods
sbb
xchg
jmp
jb
cmp
loope
sbb
push
inc
sti
bnd
jmp
mov
mov
mov
jne
cmc
mov
cmp
fmuls
xchg
push
and
xchg
push
dec
ds
mov
fnstcw
mov
icebp
push
push
es
jle
xcrypt-ctr
cmpsl
fsubl
xor
sarb
mov
xchg
push
shrb
lret
icebp
gs
dec
ja
mov
jle
pop
mov
inc
jo
dec
push
push
repz
lcall
add
push
xchg
mov
push
pusha
pop
push
inc
cmp
and
jecxz
stos
sub
lret
pop
ss
aad
inc
aaa
pop
sahf
ds
jg
xchg
fmul
je
jg
jno
hlt
cmp
xchg
jne
lods
sbb
loope
adc
lock
adc
ljmp
movsl
movsb
jp
js
xchg
jne
dec
popf
ret
test
fbld
outsl
dec
xchg
fiadds
pop
xchg
loop
pop
je
cmp
das
push
push
popa
out
push
dec
jbe
int
jge
push
jp
mov
je
mov
test
data16
push
mov
sub
popf
pushf
sub
sti
test
ja
xchg
stos
outsb
push
push
jl
mov
call
add
stos
cltd
add
mov
xor
mov
cmpsl
iret
cmp
div
ss
cli
inc
xor
jns
add
xor
rcrb
cmp
fs
mov
jno
fsubrs
pop
repz
fcompl
mov
and
sub
adcb
pop
sbb
inc
lahf
js
xor
sbb
loopne
imul
jmp
movl
xor
test
mov
jbe,pt
pop
adc
movl
outsl
mov
xchg
and
popa
jp
movsb
add
and
sti
inc
cmp
mov
je
mov
or
popf
jae
aad
jno
dec
pop
push
jb
dec
aad
lods
orb
daa
jmp
cld
daa
xor
clc
repz
push
mov
mov
lods
or
jne
call
mov
pop
jo
add
shrl
scas
fcmovu
push
cmp
sbb
inc
iret
sbb
ja
cwtl
or
addb
fs
mov
cmp
test
adc
mov
daa
pop
addr16
jecxz
pop
adc
push
jge
pusha
fidivs
add
gs
mov
out
push
add
fstps
test
mov
test
icebp
inc
sbb
movsl
imul
mov
je
dec
addps
push
vmulpd
ds
icebp
mov
pop
mov
bound
data16
fyl2x
mov
in
jne
mov
scas
fnstenv
adc
mov
gs
xchg
push
cmpsl
mov
push
mov
jmp
inc
cli
inc
movhps
xor
cmpsl
mov
lds
addr16
jne
mov
mov
pop
mov
cmp
idivb
sbb
or
push
lods
dec
mov
push
stc
and
xor
push
or
outsl
nop
xchg
jecxz
xchg
inc
xor
jmp
gs
cmp
fwait
add
jle
pop
shrl
cltd
inc
mov
pop
xor
or
mov
dec
add
push
mov
mov
push
xchg
push
or
add
pop
ds
mov
les
jp
add
or
cmpsl
add
mov
mov
adc
mov
movsl
jne
in
mov
and
shll
ss
pop
cmpsb
outsl
pop
dec
pop
rcl
in
decl
insb
insb
and
mov
lcall
push
add
xor
jmp
pop
push
ljmp
add
cmp
ret
dec
xor
subb
popa
adc
sarb
lods
xchg
roll
xor
loope
popf
lret
push
sarl
neg
or
into
outsl
jns
ret
cmp
xchg
ja
clc
jp
cmpsb
push
sbb
scas
in
mov
jno
in
sbb
popa
vminss
lods
f2xm1
xchg
lds
scas
lcall
inc
xchg
sbb
fdivrp
or
xchg
xchg
cmp
cli
nopl
pop
ds
das
mov
adc
dec
add
cli
insb
fwait
jmp
adc
popa
out
arpl
cld
mov
inc
scas
scas
xchg
jae
cltd
mov
pop
outsb
fcomps
mov
fisttpl
addb
pop
inc
fs
test
inc
adc
inc
sbb
jb
loopne
mov
movsl
test
pop
out
push
or
xor
and
and
lahf
adc
mov
and
ds
jmp
mov
ds
subl
into
popa
inc
jg
enter
es
fimuls
lea
jle
dec
mov
out
js
stos
pop
jg
pop
push
mov
cmc
call
pop
and
xchg
pop
cmp
pushf
js
lods
cmp
mov
shlb
ljmp
adc
pop
xchg
dec
add
mov
aam
inc
push
jae,pn
jo
das
icebp
test
pusha
jne
xchg
aas
das
mov
fmull
outsl
cli
loopne
adc
dec
ljmp
jg
sbb
and
mov
xchg
push
fimull
or
dec
adc
lds
cmpsb
leave
mov
jecxz
lock
fstpl
jno
bound
lret
jne
gs
mov
push
inc
out
mov
push
clc
pushf
outsl
out
iret
aam
cltd
mov
pop
xchg
fildl
fistpl
adc
out
inc
mov
addr16
push
addr16
daa
fidivrs
mov
stos
sarb
or
pop
dec
psubb
das
adc
in
mov
mov
xchg
fldenv
outsl
jnp
pop
add
sub
popf
movhps
nop
inc
adc
icebp
mov
rcl
cs
repz
dec
sub
mov
add
loop
jo
cmp
movsb
test
pop
scas
xchg
jmp
or
mov
and
jl
cmp
jl
and
jb
mov
add
lds
mov
mov
jp
jnp
inc
sub
test
add
adc
lds
push
pop
scas
sub
pop
push
cmp
xor
lret
arpl
or
add
mov
imul
add
mov
loopne
or
jno
jnp
push
mov
int
repnz
xchg
lahf
nop
dec
add
push
inc
jnp
mov
lret
mov
addr16
std
mov
or
add
cmp
iret
jg
movsb
jmp
rorl
insl
adc
xchg
dec
jmp
test
push
adc
dec
and
neg
push
jle
cmp
popa
decb
divl
jb
pop
out
xchg
xchg
iret
stos
pop
dec
sahf
push
jo
cltd
sbb
stc
mov
aad
mov
je
jg
cmp
and
push
test
mov
xchg
push
and
inc
cld
or
fnsave
adc
jns
repz
push
pop
xor
jge
test
stc
fcmove
push
insb
imul
test
lahf
inc
hlt
sti
adc
inc
popf
mov
xor
dec
cmpsl
adc
dec
ret
stc
xchg
sbb
xor
iret
outsl
pop
int3
xchg
push
cltd
mov
test
or
mov
and
int3
jno
and
pop
lret
lret
xor
add
xchg
xchg
lret
cmp
hlt
sub
ret
mov
inc
clts
pop
shl
jno
movl
popf
nop
xor
aaa
aas
push
mov
pop
arpl
incl
jo
in
mov
dec
lret
pusha
mov
inc
shrl
test
out
mov
cltd
push
pop
gs
inc
add
mov
aaa
mov
xor
mov
push
icebp
stc
cld
sti
cld
cli
stos
pop
mov
and
hlt
dec
hlt
mov
cmp
iret
xchg
xor
xchg
loop
push
nop
mov
cwtl
inc
adc
dec
cmp
adc
adc
hlt
adc
adcb
int3
mov
jnp
out
sub
xor
adc
adc
pop
cmpb
outsb
mov
adc
movsb
fildll
adc
adc
dec
fcoml
rorb
cmp
and
push
xchg
shlb
js
sub
lcall
cwtl
or
fsubr
xchg
mov
sbb
xor
pop
add
pop
ss
jae
cwtl
lods
pop
loopne
lds
jg
sarl
push
orl
lret
jno
pusha
mov
ret
jbe
bound
imul
outsl
ret
out
lods
aas
inc
sbb
sarl
jecxz
enter
test
adc
adc
adc
cltd
cltd
outsb
insl
dec
jge
push
dec
sub
ljmp
mov
pop
mov
mov
fcomip
lds
lods
scas
imul
jp
xor
pop
into
ljmp
mov
dec
gs
adc
xor
adc
aas
xchg
dec
out
xor
jo
lock
xchg
sbb
ja
das
mov
test
cmp
mov
adc
daa
mov
test
pop
mov
push
in
icebp
cmp
or
adc
mov
pop
add
jae
ret
aam
push
shll
lret
mov
mov
mov
adc
sub
mov
lahf
setp
add
jmp
fiaddl
jmp
push
cwtl
pop
adcl
mov
js
pop
inc
enter
mov
sub
jbe
enter
and
movsl
rorl
dec
mov
sbb
xchg
inc
fldenv
xchg
pushf
mov
pop
scas
imul
xor
sub
mov
test
shlb
or
test
inc
push
subb
and
movsl
add
mov
cmp
xchg
scas
out
mov
add
cwtl
cli
les
sbb
mov
adc
icebp
cmp
fs
sti
sbb
pop
in
and
push
inc
inc
ftst
cwtl
icebp
mov
mov
cmp
jg
mov
daa
jae
sub
pop
cmp
mov
ss
pop
out
mov
mov
in
add
push
pusha
ror
jmp
stos
sbb
cmpsl
push
popf
pop
movsb
push
mov
dec
aaa
mov
inc
cmp
outsl
mov
pop
cmp
movsl
push
cmp
dec
inc
mov
push
mov
push
repnz
or
mov
jg
mov
xor
notb
shll
mov
mov
shrd
xlat
ret
pusha
out
cmp
and
loop
jge
addr16
push
push
cs
inc
push
lods
inc
nop
mov
loop
xor
push
sub
int
dec
adc
xchg
push
add
imul
ljmp
fcmovu
outsb
scas
data16
xor
xchg
push
adc
mov
jne
xchg
das
imul
pop
pop
push
bound
sub
stos
inc
inc
push
movsb
and
test
xchg
pop
ja
and
out
dec
mov
test
cld
dec
js
sarl
scas
cmp
mov
andb
scas
push
dec
adc
leave
cmpsb
aam
inc
incl
mov
adc
insl
push
mov
ds
push
stc
or
or
or
clc
push
lds
mov
ds
or
xor
mov
loopne
xor
call
mov
in
lods
mov
push
sbb
adc
or
aaa
sub
loope
xchg
adc
test
jb
cltd
xchg
xchg
loopne
cld
cld
dec
mov
dec
mov
loope
insb
cmp
jg
repz
pop
push
inc
and
sub
popf
ret
pop
sbb
cmpsl
aaa
sbb
repnz
enter
pop
loope
sbb
add
and
mov
cmc
push
outsb
xor
fistpl
push
lea
sarb
sub
inc
mov
jnp
fcompl
add
mov
leave
repnz
cwtl
aas
jno
mov
int3
repz
data16
loopne
or
in
icebp
insb
mov
aaa
sbb
mov
mov
push
push
xchg
add
and
js
pop
sbb
jns
sbb
dec
mov
insb
cmpsb
cmpsl
add
dec
ret
fptan
ficompl
rolb
cmp
mov
daa
push
and
stos
inc
jno
stos
fs
cltd
addb
xchg
loop
inc
lret
setb
stos
mov
ficompl
icebp
sbb
loope
subl
ljmp
mov
stc
iret
cli
mov
or
fwait
dec
sbb
lea
add
xorb
pop
mov
xlat
xchg
push
arpl
push
push
hlt
xchg
add
daa
leave
mov
mov
ja
sub
inc
gs
inc
outsl
jae
push
pop
mov
repnz
xchg
shll
push
lea
insb
inc
or
add
and
ljmp
pslld
and
push
mov
nop
push
pop
mov
fld
push
dec
add
mov
lret
outsb
adc
dec
ljmp
in
sahf
jp
les
lods
mov
test
sbb
out
pop
hlt
cmc
icebp
jbe
mov
loopne
xor
jle
mov
pop
add
rorl
jbe
xorb
cmp
jae
xorb
fisttps
in
pop
fisubs
ret
xchg
ret
mov
pop
sbb
jmp
lcall
mov
sub
push
sbb
into
jno,pn
test
xorb
jne
cltd
mov
call
cmc
aad
test
icebp
xchg
dec
mov
push
mov
dec
test
jle
cmp
xchg
pop
dec
push
adc
fwait
or
mov
dec
mov
xchg
add
lods
lahf
sub
mov
ret
mov
xor
stos
dec
pop
lods
in
aas
jp
das
mov
faddl
cmp
roll
or
push
mov
bound
int
out
inc
jecxz
in
fimuls
je
loope
dec
or
sbb
arpl
adc
std
fsubrl
mov
mov
adc
xor
push
mov
mov
sbb
push
das
sahf
sbb
xchg
lods
mov
and
loope
addr16
adc
icebp
dec
out
xor
mov
lret
int
xchg
mov
incb
xchg
push
pop
or
cmpb
adc
cmp
mov
gs
dec
jns
or
xchg
xchg
pop
push
icebp
mulb
pop
jl
fists
inc
mov
mov
jno
fldcw
sahf
shlb
icebp
add
push
xor
lcall
ljmp
repz
mov
jbe
mov
jns
in
cmp
pop
cli
adc
ja
cmpsl
mov
je
mov
scas
mov
mov
sbb
es
mov
push
ja
call
and
rcr
jmp
in
notb
cmpsb
mov
sub
sbb
cmp
fsts
mov
imul
inc
xchg
test
push
into
push
int3
fcomps
mov
in
mov
add
xchg
scas
jp
rorb
arpl
push
jle
inc
jmp
add
jmp
jae
pushf
std
or
jecxz
inc
push
fwait
mov
testb
loope
leave
out
mov
xor
sub
jnp
pop
je
inc
cmpl
mov
or
clc
jge
jg
jae
sub
pop
dec
xchg
cmp
fwait
adc
jle
je
fsubp
jae
bswap
cmp
fdivr
lret
push
sub
mov
pop
sub
fisubl
adc
jmp
mov
icebp
xchg
cli
push
adc
sbb
inc
aas
mov
and
push
in
xor
sub
repz
pop
shlb
outsl
jno
cwtl
push
jg
in
mov
cmp
fisubl
push
popa
add
push
ds
mov
xchg
test
dec
push
aad
aad
rorl
repz
data16
inc
orb
jbe
cmp
inc
stos
out
cmp
adc
lahf
js
mov
fiadds
dec
cltd
mov
out
not
xchg
insl
push
add
flds
pushf
adc
lods
out
xchg
inc
test
cmp
stc
inc
cmc
mov
mov
dec
sub
sti
mov
mov
sbb
lds
mov
inc
mov
test
fstpt
add
hlt
xor
fucomi
xchg
testl
sbb
sub
stos
subl
push
adc
cmp
lods
rorb
leave
jp
or
dec
in
out
into
aam
mov
jae
lcall
fidivrs
mov
iret
or
inc
jg
clc
enter
enter
mov
or
mov
ficompl
adc
das
sbb
push
dec
add
cmc
bound
mov
into
lea
insl
lds
or
les
sbb
xchg
icebp
xchg
xchg
dec
and
jecxz
dec
sbb
pop
sub
ficoms
rcrb
mov
call
pop
mov
fdivrp
cli
popa
sub
xor
imul
lods
sbb
fbstp
xor
xchg
or
int3
jnp
inc
or
ja
push
or
add
mov
or
test
xchg
scas
mov
pop
mov
mov
shll
inc
js,pt
cmp
pop
jbe
loop
mov
mov
mov
faddl
dec
dec
sbb
push
jmp
dec
dec
stos
es
jl
icebp
sbb
mov
cmp
pop
dec
rcll
xor
mov
cwtl
mov
or
lahf
decb
dec
pop
nop
mov
lahf
stc
aam
mov
sub
std
mov
push
xor
fidivs
popa
mov
xchg
cmp
movsl
int3
lea
bound
jb
nop
mov
insb
insl
test
dec
jg
cmp
inc
sahf
mov
mov
xor
add
vmread
daa
xchg
mov
pop
sub
sbb
lea
dec
mov
test
mov
fcompl
jg
scas
and
dec
dec
test
aam
dec
icebp
mov
mov
xchg
loope
pop
xchg
mov
pusha
popa
pushf
mov
and
add
daa
ljmp
xchg
mov
iret
cmp
adc
imul
mov
out
push
adc
mov
sbb
xchg
addl
add
mov
cltd
and
sub
sub
mov
aad
mov
dec
fstpl
pop
scas
and
js
and
sbb
xchg
mov
notl
mov
test
dec
and
push
xor
jmp
out
mov
add
dec
sbb
mov
test
push
es
or
add
fs
cwtl
je
adc
mov
rcrb
sahf
mov
fdivrp
stos
inc
pop
cmp
pop
loopne
mov
ficompl
sti
outsl
and
pop
enter
adc
cmp
js
add
and
mov
xchg
mov
mov
shll
leave
pop
and
insb
fstpt
xchg
cld
enter
xor
jo
fcom
test
or
push
jns
cld
or
jbe
sti
push
cmp
dec
test
mov
data16
sub
daa
push
sar
lahf
icebp
mov
cmp
mov
pop
lods
push
push
pop
mov
fs
jb
sbb
add
jg
in
adc
dec
cmc
in
push
out
xor
inc
mov
lcall
adc
call
enter
jnp
add
xchg
sub
mov
fwait
shrl
dec
pop
pop
pop
pop
push
and
shl
jge
dec
bound
add
repz
xor
push
jnp
push
nop
xlat
outsl
mov
push
cmc
mov
pushf
cmpsb
inc
jmp
add
test
testl
pop
push
jge
daa
pusha
movsb
lret
push
xor
sbb
fmuls
push
mov
jmp
daa
xor
je
faddl
fs
ret
dec
cmp
js
pop
push
jp
notl
push
dec
pusha
dec
shld
push
xor
shr
test
pop
jbe
jae
inc
inc
fs
pop
inc
adc
jp
test
imul
das
push
pop
insb
divl
cwtl
push
dec
cltd
stc
push
arpl
sbb
pop
cs
mov
dec
and
inc
in
cmp
fst
push
fistps
add
jae
cld
outsb
mov
add
outsl
lods
ja
faddp
push
aas
sub
sbb
inc
stc
or
enter
xchg
mov
xchg
stos
sub
and
cmp
je
or
ds
daa
lret
xor
sbb
arpl
mov
mov
jg
lea
mov
add
xchg
imul
ficoms
fdivr
fidivl
inc
stos
or
sahf
push
bound
ret
pop
lahf
xchg
comiss
not
mov
push
lret
mov
jmp
leave
mov
mov
loopne
sbb
mov
add
cmc
rclb
pop
test
jbe
push
adc
ljmp
jno
out
das
aam
pop
cmp
std
mov
cmp
popa
gs
data16
cmc
mov
cmp
ret
cmpsb
jp
jecxz
mov
les
call
cltd
mov
ljmp
sahf
dec
xor
push
push
lret
xchg
cmpsl
xchg
daa
and
and
clc
xchg
inc
inc
js
lret
pop
je
xor
sbb
dec
and
xor
mov
gs
cmpl
test
stc
and
leave
pop
inc
in
movsl
daa
push
mov
rcll
imull
pushf
sarb
shrb
push
les
out
fists
sub
jmp
xor
out
imul
stos
xor
jo
out
imul
stc
enter
dec
sti
cmp
cltd
jne
cmpsb
imul
into
xchg
sub
pop
mov
scas
cmp
jae
inc
test
add
lea
add
xor
fisttpl
pop
repnz
lcall
dec
cmc
push
lret
hlt
insl
cmp
jnp
and
clc
shr
aaa
cmpsb
xchg
and
mov
add
loopne
inc
ljmp
pcmpeqd
xchg
arpl
jb
shr
xchg
mov
arpl
adc
rcrb
sbbb
bound
dec
std
jno
cmp
inc
jmp
sbb
mov
sub
or
js
lahf
adc
dec
inc
mov
or
rcll
movsl
jns
fisttpll
xchg
mov
jmp
in
inc
test
jne
aas
push
pop
dec
xor
enter
xor
icebp
mov
adc
clc
mov
jo
repz
add
adc
mov
mov
sub
and
fcmovu
scas
cmpsb
and
or
pop
inc
inc
xor
xor
lahf
dec
mov
cmp
or
mov
in
cmpsl
push
in
arpl
push
sarl
push
test
adc
and
aaa
jb
test
and
mov
push
pop
cs
es
arpl
or
adc
adc
mov
jp
es
scas
xor
sar
sti
jle
pushf
fisubrl
mov
xlat
sub
mov
loopne
mov
aas
sub
lods
mov
rcrl
xchg
loopne
lcall
cmp
subl
push
jno
add
adc
push
mov
gs
imul
sbbb
pop
mov
push
pop
in
xor
aas
ja
cmp
and
cli
movsl
mov
inc
fidivrl
sbb
in
pushf
les
repnz
dec
xchg
rorb
pop
cltd
mov
pop
icebp
out
sahf
sbb
add
inc
pop
outsb
xchg
scas
inc
inc
icebp
sbb
loope
sub
push
jl
cmp
cmp
out
in
add
inc
push
call
jae
mov
xchg
cmp
scas
lea
or
les
sub
dec
jno
mov
adc
push
xchg
inc
ja
aad
mov
add
jbe
pop
lea
push
subb
push
add
mov
imul
mov
lret
mov
sbb
sub
push
mov
pop
inc
jge
lods
sub
adc
adc
sbb
pop
lods
pop
lcall
inc
aas
imul
inc
fbstp
lods
mov
jnp
aas
push
xor
dec
fwait
cmpsl
inc
mov
xchg
pop
testb
movsl
xor
sbb
nop
out
dec
test
mov
add
lea
cmp
cmpsb
jns
out
jl
out
out
outsl
mov
lock
clc
cli
xor
sub
xchg
loop
std
out
jo
push
dec
sub
and
inc
mov
sbb
mov
jnp
je
mov
sbb
rorl
int
data16
arpl
test
push
sub
xchg
jae
adc
and
sbb
sbb
sarb
hlt
pop
lods
enter
dec
out
int3
sub
jmp
jae
pop
dec
fidivl
mov
jnp
fists
push
xchg
adc
inc
ja
nop
jno
decl
pop
xor
sub
mov
push
push
popf
sbb
rol
xchg
xchg
xchg
sbb
aaa
in
jge
pushw
mov
icebp
les
imul
sbb
sbb
out
popf
loope
push
leave
mov
cmpsb
fidivrl
xor
mov
lods
imul
mov
cmp
fstpt
pop
adc
push
dec
xor
leave
fwait
and
sbb
pop
adc
inc
rol
jmp
cmp
rorb
adc
adc
lods
dec
mov
jl
cltd
std
mov
inc
inc
pushf
adcl
repz
xchg
adc
out
pushl
pop
mov
jp
cmpsb
icebp
adc
jne
add
add
push
adc
or
mov
test
adc
and
bound
push
fisubrl
out
test
lods
cmpb
xchg
mov
mov
xchg
jnp
shlb
mov
push
fnstcw
or
aas
fld
lea
imulb
and
inc
mov
sub
lds
lock
push
cld
pop
andl
daa
sbb
cltd
adc
mov
in
test
and
adc
ret
fidivs
imul
adc
mov
popf
sub
nop
push
xlat
aam
dec
xchg
movl
and
stos
xor
jp
mov
fucomip
fcmovbe
nop
push
cmp
lret
jmp
into
or
es
cmp
mov
hlt
jbe
add
adc
mov
outsl
and
movsb
out
sub
or
scas
pop
jp
add
add
in
cmp
jecxz
mov
std
and
push
jae
inc
leave
leave
inc
pop
faddp
cmp
xchg
mov
add
lcall
push
xchg
jmp
fcoms
xchg
into
mov
mov
sti
xor
lods
mov
divl
push
lods
adc
adc
scas
mov
mov
repz
mov
cmpl
mov
xchg
nop
jl
jo
add
mov
imulb
jp
mov
xchg
insl
int
cmp
inc
inc
and
popa
or
popf
bound
divl
inc
mov
outsb
and
lock
mov
cmp
cs
repz
movsl
adc
pop
xchg
fisubs
mov
xor
mov
or
inc
outsb
imull
xchg
and
cmp
sbb
es
dec
push
std
mov
inc
adc
jne
pop
jle
pop
movsl
cmp
in
repz
xor
cmp
ljmp
dec
xchg
mov
call
adc
jle
xor
cmpsl
jle
jge
adc
hlt
xor
mov
inc
jbe
aaa
nop
sti
mov
jl
sbb
pop
or
push
mov
or
mov
sbb
popa
add
push
mov
mov
sbb
jmp
fs
mov
cld
and
insb
and
sub
mov
fdivl
movsl
das
aam
outsl
cwtl
pushf
push
fwait
mov
adc
mov
and
cmp
ret
in
ljmp
cmpsb
popa
cmp
lock
repz
and
mov
jae
out
in
push
repz
push
les
mov
jbe
mov
pop
repnz
int3
add
adc
add
jae
hlt
stos
or
hlt
ja
mov
xchg
pop
scas
inc
mov
cmpsb
and
mov
test
lret
push
ficompl
mov
arpl
pop
rorb
movsl
sbb
pop
cltd
pop
pop
xchg
dec
popa
or
mov
ds
popa
scas
mov
jecxz
bound
jno
arpl
test
cltd
imul
mov
push
int3
leave
dec
inc
fdivrs
adc
jmp
sub
test
or
or
mov
sbb
enter
adc
addr16
sbb
cmp
sub
enter
jae
icebp
sbbl
cmpsl
test
jno
scas
jecxz
push
adc
add
cmp
and
mov
jge
mov
push
mov
adcb
push
sub
fs
sahf
or
repz
pusha
mov
cmpsl
fnstcw
insb
mov
ss
jp
ffreep
inc
xchg
sub
cmp
fmuls
push
dec
mov
out
inc
insl
xor
test
mov
push
outsl
sbb
lods
jno
mov
push
out
hlt
add
out
das
and
loop
mov
mov
lods
mov
sbb
outsb
xor
xchg
imul
dec
ss
push
daa
out
iret
clc
outsl
and
aaa
jae
xchg
gs
mov
pop
scas
dec
imul
inc
pop
daa
outsb
cmp
das
inc
mov
jae
frstor
addb
sub
mov
jg
jl
aas
xor
and
or
test
push
cmp
mov
sub
cmp
je
adc
pop
fwait
cmpsl
push
xchg
sub
mov
outsl
xchg
nop
inc
cmovae
pusha
or
xchg
insb
cmc
in
loope
out
dec
data16
mov
mov
out
xlat
in
sbb
adc
imull
or
pop
fwait
jle
sbb
aas
dec
idiv
call
call
pushw
sti
dec
repnz
mov
dec
lcall
popa
mov
pusha
add
aam
js
movsl
xor
ja
mov
test
in
jle
mov
xor
or
jbe
clc
fnstenvs
xor
ljmp
aaa
shrb
sub
mulb
lock
adc
dec
xchg
loopne
gs
divb
shlb
int
cmp
sub
ds
mov
leave
cmc
add
cwtl
out
js
cmp
lods
push
test
out
rcrb
xor
pusha
xchg
in
lea
mov
jo
xor
push
xchg
aad
cmc
xor
movsl
imul
or
int3
push
mov
jnp
push
jl
inc
imul
fdivs
add
jmp
adc
adc
inc
rorl
jns
aam
ss
adc
add
outsl
xchg
push
fmul
imul
inc
movsl
popl
jae
sbb
mov
xchg
cmp
mov
push
push
push
mov
or
mov
and
movsl
repz
in
pushf
jecxz
sub
xchg
movsl
inc
aam
xchg
xor
or
outsb
or
sbb
sbb
and
int
cli
aad
nop
pop
or
push
cmp
test
in
inc
adc
mov
stos
outsl
es
cmp
andl
out
arpl
test
repnz
xor
ja
jns
ret
inc
inc
test
test
sbb
hlt
cltd
scas
and
jp
jg
jmp
sub
sarl
lock
loopne
in
cltd
ret
mov
xor
dec
mov
xchg
inc
movsb
jnp
nop
ja
imull
fwait
dec
add
lock
ja
mov
pusha
cmp
icebp
mov
sbb
sbb
jo
loope
int
notb
fisttps
loop
push
mov
in
int3
sbb
jge
cltd
mov
cmpsl
dec
cmp
or
mov
push
daa
adc
std
sub
fwait
pop
lahf
loope
jg
sub
ljmp
mov
sbb
stc
out
or
fisttps
popa
push
push
insl
jp
lods
cmpsb
dec
pop
or
fmul
push
sbb
inc
xchg
rorl
and
addb
and
dec
push
jb
inc
push
mov
scas
lahf
lods
into
cmp
in
std
inc
pop
jae
xor
jae
sub
xchg
fisubl
jb
and
outsb
cli
addr16
sub
and
shll
pop
mov
or
push
or
inc
dec
push
sub
in
outsb
js
pusha
repz
pop
into
inc
jo
push
mov
stos
cmp
cltd
pushl
or
bnd
imul
dec
xor
mov
mov
inc
nop
lock
addr16
jle
dec
xchg
adc
or
mov
inc
inc
lret
mov
sbb
cltd
inc
adc
mov
pop
cmp
mov
jo
imul
sub
and
movsl
fwait
mov
cmp
push
idiv
adc
cmp
nop
je
outsb
clc
mov
mov
and
adc
add
mov
mov
push
inc
das
add
js
or
push
out
das
fimull
icebp
push
out
mov
mov
and
repnz
jmp
pop
dec
aad
scas
xchg
or
push
jp
cmp
pop
xchg
out
mov
mov
shlb
rclb
pop
ds
adc
arpl
xchg
xchg
cwtl
pop
mov
mov
sahf
xchg
dec
addr16
push
inc
inc
test
xor
gs
xor
cmc
call
sub
int
xchg
add
dec
cmp
fs
imul
push
jbe
in
adcb
ficoml
sbb
out
insb
test
lcall
sbb
sbb
pushf
js
jb
sub
fimull
sub
xorl
lods
fadd
cmpsb
stos
add
pop
cld
data16
pop
int3
cwtl
out
rol
leave
clc
cmp
sub
mov
dec
xor
mov
sub
or
repnz
ror
test
mov
mov
sbb
add
es
jae
in
lock
jbe
in
add
sub
lods
enter
sbb
int3
xchg
fists
pop
mov
enter
pop
inc
mov
xor
add
mov
sbb
maxps
es
popl
xor
fs
sbb
cmp
mov
jmp
sbb
aas
pusha
jae,pt
aad
mov
stos
or
ja
push
dec
movsl
fcoml
ds
jmp
cmp
adc
jbe
pop
rcr
loope
insb
loop
mov
inc
dec
test
rep
sub
sbb
idivb
inc
adc
lret
push
std
hlt
leave
inc
or
jl
mov
clc
je
inc
inc
pop
inc
xchg
dec
xor
in
jmp
rolb
popf
pop
pop
lret
jmp
std
inc
ja
xor
or
mov
imul
xchg
ljmp
mov
daa
daa
xchg
sahf
shll
icebp
sbb
lret
cmc
mov
hlt
mull
sbb
arpl
push
mov
mov
hlt
in
xchg
add
cmc
icebp
clc
inc
addb
or
cmpsl
cmp
jge
hlt
lcall
dec
mov
outsb
push
gs
fisubs
add
and
or
movsl
jecxz
inc
mov
lret
dec
aaa
insl
mov
sbb
aad
fmuls
hlt
add
mov
jne
add
stc
jnp
push
sbb
ljmp
push
ja
mov
dec
push
pop
fidivrl
jns
mov
mov
inc
mov
xor
cmovl
and
mov
js
sub
and
dec
pop
rclb
shrl
push
dec
add
icebp
or
and
jmp
pop
hlt
mov
pop
or
imul
add
lcall
sub
aas
rcrb
inc
cmpsb
inc
aaa
cwtl
insb
pop
cltd
cli
aaa
inc
add
repz
pop
repnz
dec
mov
push
insl
out
stc
fsubr
scas
pop
loopne
sub
dec
fs
jnp
cltd
or
xor
int3
lcall
insl
push
sbb
push
jnp
push
push
push
xchg
lcall
sbb
orb
rcl
mov
mov
add
adc
pop
sub
testb
dec
pop
mov
ret
es
mov
dec
push
gs
fcoms
subb
loop
and
ljmp
pop
push
dec
cmp
icebp
xchg
inc
outsb
mov
and
test
test
sahf
pop
xor
lret
inc
push
lcall
sbb
and
movsb
lods
cmp
in
sbb
mov
inc
push
xor
mov
or
cld
outsl
das
and
nop
dec
dec
and
cmp
add
inc
repz
and
lret
test
push
rolb
cmp
jl
push
lods
pop
lea
adc
std
lret
adc
shl
repz
push
lods
jmp
sub
jb
and
mov
mov
fwait
mov
sbb
sbbb
jae
lock
mov
jns
lods
mov
cltd
mov
cmp
mov
push
cwtl
sbb
sbb
subl
mov
in
inc
gs
pop
pop
and
out
jmp
nop
pop
repnz
ljmp
push
outsl
stc
das
movsl
stos
repnz
dec
leave
sbb
dec
adcl
cmpsl
pop
xor
inc
xchg
push
sbb
sbbl
inc
push
lds
sbb
aas
jns
adc
test
mov
lock
fiadds
xor
mov
dec
out
loop
jmp
dec
leave
mov
xchg
push
adc
ljmp
add
xchg
stc
nop
add
xor
stos
lahf
js
scas
jno
int
cli
mov
orb
inc
mov
loopne
dec
lds
cmpsl
pop
mov
or
les
add
test
mov
fsts
out
xor
aas
jl
test
or
or
jno
push
mov
lods
test
push
test
xchg
lahf
outsb
jp
push
inc
or
shlb
sahf
dec
xchg
sbb
mov
dec
outsb
push
es
nop
and
cwtl
lcall
ret
mov
insl
or
dec
pop
push
push
pop
andb
mov
les
inc
jo
rep
fistpl
sarl
and
dec
or
andb
repz
xlat
daa
repnz
or
outsl
push
mov
and
mov
xor
out
jecxz
fwait
sti
push
sbb
add
inc
popa
or
mov
call
pop
inc
cmpsb
andl
imul
pop
pushf
or
rol
aaa
adc
dec
sti
dec
inc
imul
push
push
loope
out
push
pop
jnp
ljmp
mov
cwtl
jbe
sub
popf
xlat
in
inc
sbb
clc
stos
adc
lock
fwait
cmp
push
inc
push
fildl
sti
xchg
xor
sbb
jne
sub
add
inc
and
leave
int
sub
notl
mov
mov
outsb
and
pushf
or
inc
dec
repz
fidivrs
adc
adc
int
fbld
ds
and
cmpl
call
cmpb
add
or
lds
sarl
mov
test
adc
adcb
mov
dec
inc
gs
mov
lock
gs
dec
and
in
insb
xchg
adc
xchg
mov
adc
mov
cli
insb
jns
jle
add
call
mov
add
jo
lcall
sub
loope
jno
aas
leave
dec
sub
lds
ja
mov
repnz
addr16
sub
mov
fldenv
mov
push
mov
or
enter
icebp
add
fidivrs
cld
les
mov
minps
imul
xor
xor
out
sub
jb
aaa
pop
adc
push
repnz
mov
cmc
cmp
mov
mov
ret
pop
jb
sarb
daa
clc
cmp
push
js
and
mulb
push
mov
arpl
push
data16
pop
xchg
push
xor
push
xor
xchg
test
mov
ljmp
push
mov
add
jno
add
jno
jb
xor
adc
jmp
fsubrs
es
insb
mov
orb
scas
add
test
cmp
sub
add
mov
cmp
icebp
ds
arpl
es
and
ja
jns
push
pop
addr16
inc
cld
mov
imull
push
popa
pop
in
ja
sarl
pop
out
sbb
aad
inc
outsl
mov
movsl
adcb
movsb
sbb
int
das
and
insl
inc
and
movsb
sbbl
divl
adc
mov
fidivrl
mov
in
xchg
cltd
in
mov
in
pop
xchg
mov
movsb
dec
mov
enter
cmpsb
jp
lret
jnp
repnz
push
push
inc
addr16
cld
rdtsc
loope
xchg
stos
icebp
lods
xchg
rcrb
pop
repnz
xchg
hlt
sahf
add
adc
or
bound
fs
in
sarb
stos
sub
stos
cmp
cmp
add
and
test
movsb
aas
or
stos
cwtl
push
in
mov
in
add
out
out
push
fcmovb
jae
ss
testl
inc
or
je
xor
ret
imul
out
sub
xor
xor
mov
inc
sbb
jmp
rorl
push
mov
pop
data16
and
mov
mov
push
sbb
push
pop
into
cmp
aad
int
adc
test
jo
push
mov
and
pusha
gs
icebp
mov
sub
test
imul
push
int
adc
push
incl
inc
xorl
jbe
repnz
xorl
jmp
fadd
push
jbe
fisubrl
jae
fidivl
repnz
repz
mov
mov
stos
out
inc
repnz
rcrl
mov
cmp
gs
imul
pop
imul
aaa
add
pop
mov
lods
and
push
jmp
and
fldenv
pop
mov
in
sbb
pop
cltd
pushf
rorb
adc
jecxz
filds
fcomps
pop
hlt
fucomi
mov
outsl
std
and
jge
pusha
mov
jp
in
lods
pop
mov
dec
enter
shll
bound
dec
pop
and
fsubrl
and
pushf
xor
xchg
leave
mov
add
jmp
mov
sub
cmc
nop
cmp
cmp
add
popf
xor
in
clc
adc
rolb
das
xchg
and
scas
pop
dec
pop
jo
idivl
xor
ja
iret
xchg
fcompl
ret
ds
mov
xchg
mov
hlt
rcrb
mov
ljmp
fstpt
xorl
jl
cmc
shlb
add
mov
stc
loopne
shll
in
loop
andl
mov
push
outsl
mov
and
int3
fs
or
aad
out
pop
mov
jmp
cld
cmp
sub
push
cmpsb
push
lahf
pop
push
push
mov
test
pop
cmp
pop
mov
or
lds
ja
roll
jmp
jge
jbe
adc
push
inc
add
dec
jmp
dec
push
jge
leave
movsb
xchg
or
rclb
lods
and
cmp
data16
mov
repz
jnp
lret
std
test
jge
sbb
dec
jmp
add
push
ret
out
mov
jae
xor
mov
push
aam
or
sti
cld
nop
jnp
rolb
jg
std
aad
push
sahf
lea
adc
fwait
or
or
sub
push
mov
sbb
jns
xchg
mov
jnp
sti
mov
dec
xor
add
push
mov
insb
std
out
out
fimull
pop
mov
jno
mov
cltd
sti
bswap
sub
cs
ljmp
jmp
jo
or
inc
mov
xchg
jle
call
and
decl
pop
test
sbb
popf
push
mov
add
fstpt
je
dec
mov
sbb
out
mov
js
nop
leave
xchg
push
push
es
out
pop
inc
lods
sbbl
sub
jge
add
cmp
add
jle
push
in
inc
push
push
jno
or
imul
push
xchg
xchg
out
pop
js
push
loope
insb
pop
loop
bnd
dec
repnz
sbb
out
sub
mov
sub
addr16
jne
sub
sbb
ds
cmp
push
insb
xor
fsubrl
sbb
mov
mov
scas
pop
ficoms
xor
insl
mov
pusha
mov
mov
inc
int3
push
push
xchg
cmp
mov
adc
sub
and
ret
js
in
call
adc
sti
jno
insl
push
or
sbb
imul
xchg
xor
stos
mov
xchg
repnz
jecxz
aaa
dec
test
push
int3
mov
adc
sahf
je
jns
xchg
sbb
cmpsl
xor
dec
lods
inc
testb
inc
fiadds
dec
jno
inc
adc
cmpsl
mov
mov
mov
int
das
call
mov
mov
les
or
xor
nop
nop
fbstp
xchg
adc
mov
or
insl
add
aas
lods
fwait
sub
inc
ss
imul
ss
vminpd
out
mov
int3
sti
mov
xor
mov
in
xor
repz
pop
mov
xchg
test
jle
mov
cld
and
push
shl
arpl
sub
and
imul
jne
inc
das
mov
cmp
add
jbe
fldcw
jae
in
mov
adc
mov
jecxz
or
repnz
je
inc
cmpsb
enter
push
push
adc
fisttpl
dec
lea
lcall
pop
movsb
jae
add
mov
mov
jmp
lret
hlt
imul
pop
xchg
push
cltd
out
movsb
repnz
icebp
movsb
dec
sub
jg
or
pop
ss
xchg
mov
dec
add
in
int
mov
cmp
inc
pop
xchg
xchg
cwtl
jg
or
jno
adc
adc
sbb
mov
dec
subb
mov
and
imul
push
push
rcrl
das
push
scas
cmpsl
out
mov
push
std
and
fwait
ljmp
sub
ja
clc
insb
push
movsl
pop
fprem1
repnz
pop
loop
je
ss
stos
lret
int3
push
mov
xchg
add
inc
sti
les
ds
cltd
clc
fld
je
mov
cli
fsubs
fcmovnu
pop
iret
call
js
mov
add
ficoms
divb
mov
movsl
ja
shrl
push
mov
cltd
call
mov
outsb
sub
push
or
cmp
loope
je
sbb
sub
mov
enter
lock
cmp
adc
mov
mov
aas
cmp
incb
dec
jbe
mov
lods
cmpb
pop
jecxz
jecxz
addb
jb
movhps
push
out
or
outsb
pop
push
test
mov
push
aaa
loope
inc
xchg
fcomip
incb
nop
add
cmp
scas
lock
lea
in
outsb
lret
jmp
add
ja
inc
paddb
lds
mov
nop
loope
addb
adc
aam
dec
fs
sub
stc
pop
mov
into
jmp
jno
cld
iret
int
imul
je
movsb
lret
popf
hlt
push
lods
imul
add
or
jae
pop
jmp
mov
push
add
xchg
or
mov
push
inc
inc
xor
pop
mov
loope
insb
aad
xor
stos
jle
mov
subl
mov
fs
imul
imul
ja
into
xor
jo
inc
push
push
in
orl
fidivrs
mov
rclb
pop
mov
and
ret
leave
and
aam
or
pop
stos
das
sub
shl
sub
sbb
add
xchg
pop
pop
cmc
sti
add
stc
into
popa
int
in
push
or
push
fwait
int3
adc
arpl
lods
loop
sbb
mov
jl
daa
ret
sbb
jp
adc
inc
xchg
cmp
mov
jbe
push
pushw
dec
popf
ror
pop
sbb
scas
xchg
lods
fs
pop
dec
loope
sub
stc
push
dec
lcall
jecxz
fwait
jecxz
cmpl
fneni(8087
loopne
repnz
push
mov
pop
push
cmpsb
in
ret
and
jb
movsb
cmp
inc
jle
mov
mov
inc
sti
mov
cmpsb
mov
xor
int
push
xchg
in
test
std
lea
push
sub
pop
dec
or
xchg
xorl
jbe
fld
sbb
mov
sahf
outsl
pop
les
push
sbb
inc
dec
fists
or
fsts
jno
pop
sbb
sub
mov
hlt
dec
mov
nop
fstpl
ljmp
inc
rorl
shrb
mov
xchg
mov
dec
out
jb
cmp
xor
mov
or
add
fdiv
xor
cmp
pop
lret
fcmovbe
xlat
or
and
and
enter
add
setno
clc
sar
in
xor
in
mov
cld
nop
rcll
stos
repnz
xchg
add
pusha
insl
or
insb
xchg
fdivr
ljmp
push
mov
mov
sbb
cmp
push
lods
je
cs
or
imul
in
push
jns
mov
lock
stos
and
cmp
lret
dec
add
mov
dec
into
aaa
mull
mov
data16
insb
dec
jnp
dec
jnp
mov
stos
jge
inc
jg
orl
and
mov
aam
or
inc
fidivl
cmpsl
lcall
mov
cmp
jae
test
std
lea
gs
push
lds
xchg
or
pop
jle
cmpsb
or
repnz
insb
std
xchg
andb
fcmovu
daa
mov
test
gs
mov
pop
imul
push
sbb
xor
cmp
shlb
jne
ror
sub
push
add
inc
pop
fldt
push
in
xchg
pusha
js
jmp
ja
push
mov
cmp
fdivp
insl
mov
fcompl
mov
aam
pop
dec
dec
mov
jg
sti
and
mov
movsb
imul
sub
ficompl
shl
lock
aad
xchg
xchg
xchg
add
xchg
in
shll
fistl
sbb
icebp
bound
mov
add
pop
mov
pop
test
clc
test
out
enter
mov
sub
sub
addr16
xchg
jp
mov
and
sub
in
xchg
pop
adcb
cld
lods
cmp
mov
xchg
cmpsb
into
rcrl
xor
inc
loop
and
push
mov
ret
jns
mov
repnz
fbld
int3
mov
xchg
push
mov
aad
xchg
mov
mov
xor
lret
pop
movsb
and
rcll
pop
subb
lcall
fcomps
push
out
push
mov
jle
pop
popf
add
sub
xchg
pop
mov
pushf
out
shl
xor
scas
inc
jmp
out
sbb
add
in
stc
dec
bound
jge
or
lcall
mov
push
daa
fstl
dec
movsb
mov
cmpsl
dec
or
pop
shlb
inc
mov
jns
mov
cmp
ja
sbb
je
out
and
loope
mov
xor
imul
and
mov
mov
push
bound
mov
xchg
outsl
push
and
push
in
in
arpl
push
arpl
mov
scas
pusha
lock
cmp
pop
insb
out
mov
cmp
scas
adc
adc
mov
push
ret
mov
lods
jle
cld
fdivrp
mov
cmpsb
inc
ret
test
inc
jne
dec
leave
jns
adc
inc
push
push
xor
xor
js
fisttps
ds
add
pop
mov
and
dec
add
ds
aam
inc
or
gs
rolb
pop
push
mov
xor
popa
lods
or
mov
hlt
inc
ja
aas
add
mov
je
adc
mov
mov
xchg
and
xor
add
out
xor
lret
lock
xor
pop
mov
repz
pop
dec
aaa
jnp
pop
stos
xor
and
ficoms
repnz
or
aas
xor
jge
cwtl
push
test
stc
int
xlat
pop
testl
loope
push
stos
mov
mov
cmp
xor
add
adc
inc
lret
scas
pop
xor
mov
and
out
std
ja
inc
xor
jge
pop
jno
mov
pop
mov
jbe
cwtl
pop
push
sbb
movsl
leave
add
outsl
adc
xchg
mov
xchg
adc
shrl
xchg
mov
push
imul
iret
jp
aam
add
sub
iret
sub
int
jmp
dec
into
xchg
jg
addl
in
and
fistl
shl
aas
xchg
mov
lahf
je
push
cmc
or
stos
cmc
inc
pop
sarb
mov
lret
jmp
mov
ret
mov
gs
push
not
addr16
push
sub
pop
popa
jp
cmp
jns
subps
test
or
mov
add
mov
in
and
fsubs
lods
nop
test
sub
jp
in
cld
pop
add
push
cmp
hlt
loopne
sti
sahf
mov
jns
adc
inc
xor
call
popf
push
mov
sbb
mul
mov
push
out
out
out
mov
jle
push
lret
cs
pop
mov
repz
jecxz
fwait
fwait
sub
pop
sub
sbb
aaa
sbbb
mov
xor
ja
dec
sti
aad
popa
inc
lock
enter
xchg
clc
in
jno
push
jp
and
ret
mov
mov
data16
repz
lcall
out
aam
inc
pop
adc
clc
cli
stc
fnstenv
movsb
and
loope
or
call
mov
xor
sarb
rol
clc
sub
scas
into
test
sub
push
icebp
xchg
jo
lret
and
pop
mov
ja
scas
in
jo
loope
cltd
adc
cmc
adc
test
mov
lret
or
pushf
repz
add
mov
pushf
ret
xor
cs
sbb
mov
das
mov
jmp
cmpsb
pop
mov
mov
fdivl
xor
cmc
loopne
insl
pop
add
xor
fcoms
in
aad
and
mov
push
and
push
scas
inc
jae
xor
sarl
and
pop
data16
sbb
xchg
mov
ds
outsb
aaa
rclb
jae
mov
stc
popa
inc
pop
add
mov
lea
inc
mov
mov
xchg
xchg
or
xor
adc
or
mov
mov
inc
push
xor
xor
stos
add
sbb
xchg
sbb
fistpll
mov
lret
add
testl
add
xchg
insl
addb
lea
mov
sub
cwtl
push
xchg
roll
and
or
or
inc
mov
cld
dec
popa
or
push
popf
push
sub
aad
mov
mov
mov
pslld
dec
js
stc
jnp
xor
cltd
and
into
pop
cmpsb
or
fidivs
jg
jno
and
call
inc
rcrl
push
bnd
sbb
movsl
jle
jl
or
test
int3
xchg
push
mov
cld
pop
and
cmp
xchg
ds
push
lock
push
pop
cmp
pop
mov
pop
and
jne
cs
js
push
push
dec
sbb
or
inc
inc
lret
call
jno
mov
mov
push
mov
icebp
and
fs
pop
pop
scas
mov
pop
fnsave
sub
add
call
xor
add
imul
loopne
xchg
mov
or
push
out
loope
push
push
jnp
push
sahf
cmp
outsl
iret
aad
or
inc
jne
rol
add
push
pop
adc
test
shlb
out
mov
add
push
push
lea
pop
stos
dec
sbb
adc
adc
jbe
push
lret
push
mov
mov
push
lret
sbbl
add
mov
cmpsl
and
int
fdivr
or
dec
shlb
int
cmpsl
data16
fstps
lods
lods
test
icebp
lret
xchg
or
push
xchg
xlat
in
fwait
push
sbb
movsl
sbb
cld
xlat
jae
mull
fwait
or
and
ret
jp
sahf
mov
jecxz
cltd
mov
mov
xchg
sub
sub
push
aad
adc
es
inc
mov
dec
stos
cmp
mov
fmull
mov
mov
sbb
jle
pusha
jle
das
loop
psubb
mov
xorb
stc
cltd
pop
aaa
orl
xor
mov
push
jae
insb
imul
cmp
xchg
rcrl
pushf
cmp
mov
cld
xchg
sub
pop
fcomps
lds
add
repz
push
sbb
adc
and
sub
sub
scas
or
jne
loopne
jns
lods
inc
xorl
gs
sarb
add
fisubs
fwait
sarb
das
push
sbb
lret
mov
les
ds
inc
or
adc
ds
rorl
pop
call
mull
dec
pop
inc
add
jecxz
push
push
or
in
sbb
pop
xlat
inc
popf
movsl
vpcmpeqw
ljmp
mov
cmpsl
lret
jne,pt
test
dec
mov
fisubrl
int
filds
popf
push
icebp
dec
add
inc
popa
jae
rcrl
inc
jl
pop
adc
jmp
out
push
pop
lds
jo
aas
adc
jb
mov
jmp
movsb
in
pop
nop
pop
sbb
xor
push
loope
push
out
mov
mov
insl
and
dec
in
cmc
lods
jae
push
out
cmp
xchg
mov
xor
xor
ss
lods
scas
cmp
and
imul
xchg
add
sbb
adc
xchg
int
mov
jbe
xor
or
bound
add
ds
and
mov
gs
imul
aas
cli
pop
icebp
test
loopne
mov
in
sub
push
and
push
push
fidivl
inc
fidivl
rolb
cli
and
mov
xchg
inc
into
int
pop
push
jnp
push
scas
fldl
sahf
movaps
sub
sbb
in
adcl
jl
xchg
add
jo
adc
ja
std
mov
cmp
fstps
lods
incl
in
push
jne
popa
lcall
push
dec
dec
inc
sarb
mov
mov
jecxz
pop
sub
cltd
mov
movsl
mov
aas
push
sahf
outsl
jl
sahf
jg
mov
push
adcl
jg
push
hlt
pop
outsl
arpl
cmpsl
pop
stc
add
iret
insl
mov
cmp
in
fsubl
mov
es
mov
cmp
shll
sub
cmp
adc
mov
inc
jge
test
lahf
loope
dec
pusha
jle
jg
fmull
shll
fsubrs
daa
sbb
push
lret
dec
psllw
dec
roll
sbb
push
loop
mov
mov
xchg
test
mov
xor
iret
outsl
insl
in
cs
push
xor
dec
mov
imul
push
mov
add
fucomp
lods
movsb
insl
ficompl
shll
cs
pop
jns
pop
out
jns
stos
jl
cmp
dec
inc
xorb
pop
shrl
mov
mov
xor
mov
push
fwait
repz
loopne
xorb
aad
and
movq
mov
ljmp
dec
mov
sub
add
push
xchg
mov
adc
scas
jecxz
add
sbb
push
repz
jmp
outsl
xchg
add
ja
sub
xchg
pop
pop
xchg
mov
mov
cld
shlb
les
jb
popa
inc
mov
clc
push
add
mov
inc
sti
adc
push
push
mov
out
mov
xlat
iret
push
or
mov
sub
dec
gs
mov
jg
pop
xchg
ljmp
mov
inc
in
sbb
add
jbe
scas
fdivs
out
pop
xor
lds
shlb
clc
and
xchg
lcall
ja
outsl
push
les
sbb
jle
daa
sbb
xchg
and
inc
xchg
test
test
or
sub
inc
xchg
pop
fisubrs
dec
js
mov
mov
movsb
lods
fsubp
jecxz
hlt
and
add
stos
enter
into
mov
jbe
cmp
bound
xchg
and
and
into
ljmp
mov
jnp
mov
out
nop
mov
lretw
lock
out
or
and
cwtl
test
sti
pop
add
jg
jmp
mov
inc
mov
xor
cmp
mov
mov
inc
and
pop
mov
adc
pop
add
mov
lds
lods
adc
ljmp
jmp
xchg
fld
push
shlb
mov
xor
inc
jbe
cmp
pop
fwait
pop
lret
movsb
add
push
ja
xor
add
fs
mov
cltd
cli
xor
dec
mov
fnstsw
mov
lods
cmp
shll
js
imul
and
pushf
iret
or
rorb
fmull
jl
or
in
cli
cmpsl
dec
adc
fcomp
xor
adc
mov
dec
sbb
hlt
out
jno
lret
in
pushl
in
mov
cmc
adc
xchg
inc
les
sub
add
pop
push
lcall
mov
sbb
cmp
hlt
xor
pop
dec
jns
add
jns
adc
push
dec
sbb
push
dec
cmp
stos
xchg
mov
and
jg
outsl
push
pop
fidivrs
lret
into
or
jae
js
jns
mov
pop
sti
iret
pop
ret
repz
dec
pop
fimull
data16
add
adc
cwtl
cmp
aaa
ja
addr16
cmp
decl
lahf
leave
mov
stos
int
loopne
dec
loopne
push
push
adc
mov
push
repz
pop
mov
mov
clc
imul
sbb
mov
mov
mov
rorb
int
add
fbstp
lods
pop
or
add
adc
mov
cmpsb
xchg
repz
es
pushf
dec
aam
push
xor
dec
imul
jl
repz
mov
dec
mov
adc
leave
popa
imul
push
mov
jge
mov
dec
pop
daa
dec
testb
adc
icebp
inc
push
push
push
lahf
add
push
lock
sbb
sbb
dec
cld
imull
or
mov
push
stos
inc
push
adc
or
jb
outsl
xchg
rorb
sbb
xchg
adc
push
mov
enter
mov
pop
push
test
les
jb
loop
xor
and
cmpsb
add
add
aam
aad
push
pop
mov
adc
sub
mov
add
out
sbb
cmp
jne
mov
mov
pop
xchg
fcomi
outsb
cmpl
into
dec
fdivrl
jge
adc
addl
pushf
shlb
gs
push
xchg
sti
jle
mov
orb
scas
cs
adc
cmp
lret
popf
adc
mov
ja
sub
lret
jmp
jle
in
das
mov
in
mov
xor
mov
push
xor
jecxz
or
stos
fdivl
dec
sub
cmc
dec
scas
xchg
cmpsb
cltd
sub
fnstcw
xor
ds
std
lcall
mov
fldl
gs
push
or
in
pop
roll
pop
sub
sbb
adc
xchg
and
xlat
js
scas
out
pushf
fwait
sub
dec
lahf
or
movsb
pop
dec
cmpsl
xchg
or
and
fldt
mov
into
or
int
out
push
push
add
pushf
clc
mov
push
jns
mov
jo
lods
out
stos
cs
filds
adc
sbb
push
pop
testb
insb
jmp
imul
shll
fsubs
cld
push
mov
enter
scas
or
xchg
lahf
add
pop
sub
cmp
adc
rolb
jb
jnp
lea
add
adc
dec
test
in
test
jmp
lods
pop
lock
xor
jl
sub
leave
and
mov
xor
add
sbb
dec
push
imull
sbbb
popl
fdivrl
lock
xchg
cmp
push
loop
dec
mov
scas
jae
mov
addr16
test
lret
and
push
pop
add
aam
std
js
int
call
dec
ss
iret
and
sti
test
sub
iret
pop
add
das
xchg
xlat
scas
sbb
xchg
lahf
movsb
mov
mov
jnp
push
clc
adc
inc
rcrb
aam
inc
ja
jge
cmp
sbb
scas
out
leave
mov
ljmp
cli
pop
mov
sbbl
jns
cmp
repz
dec
arpl
xchg
and
sbb
jge
mov
insb
dec
in
sbb
inc
rcr
dec
fwait
add
call
pop
xchg
sub
sub
mov
push
std
movsl
enter
xchg
repz
sub
call
or
jne
sarb
fs
shr
xor
in
mov
data16
cmp
ss
and
std
das
push
jne
xor
mulb
push
sub
xor
push
std
les
test
cmp
cli
outsb
dec
fdivr
cmp
xchg
or
insb
xor
cmp
movsb
stos
cltd
xchg
mov
andl
dec
fucom
mov
into
lods
jbe
popf
add
movsb
cmc
das
ret
das
mov
in
cmp
ficompl
jo
cmp
icebp
adc
nop
inc
add
jecxz
adc
icebp
fs
sbb
pop
loopne
test
popa
rclb
cmpl
inc
push
mov
and
addr16
mov
out
push
gs
pop
rclb
icebp
in
shlb
push
mov
xor
lret
or
les
icebp
mov
stc
mov
fsts
jp
sbb
and
cmp
stos
push
or
in
rolb
adc
inc
and
sbb
fildll
xchg
repnz
jae
or
dec
fcoms
out
or
ja
push
sbbb
cmc
mov
cmp
cmp
push
add
inc
sub
roll
cld
outsb
mov
testb
test
sub
sbb
mov
add
sub
push
shlb
js
shlb
icebp
test
sbb
aas
mov
std
pop
cmp
push
rcrb
push
xchg
jns
jns
negl
pop
mov
xchg
and
adc
cmp
imul
not
xchg
mov
mov
xchg
pop
inc
mov
sub
fwait
rorb
repnz
in
into
and
sti
test
cwtl
sbb
sahf
nop
fnstcw
xor
inc
ds
sub
lcall
pop
out
shlb
xor
fwait
stos
push
mov
and
scas
inc
es
out
xor
dec
push
arpl
dec
dec
sbb
dec
xchg
fwait
cld
in
cmpsb
icebp
rol
rol
pop
test
push
sub
idivl
mov
sbb
scas
mov
and
jae
sub
pop
mov
add
cs
addr16
mov
sub
xchg
add
pushf
xlat
xchg
adc
out
lea
mov
mov
cmp
inc
push
push
inc
lods
push
mov
xlat
loopne
cwtl
xor
push
insb
ljmp
mov
jge
jmp
filds
hlt
inc
xor
adc
pop
jnp
push
mov
jae
inc
mov
repz
inc
mov
jp
lahf
mov
dec
sahf
push
outsl
cs
dec
push
cmp
js
lods
dec
and
outsb
jne
xchg
or
sahf
and
outsb
adc
insl
mov
in
mov
int3
leave
cwtl
stos
scas
cmp
xchg
mov
loope
mov
mov
pop
push
js
or
mov
fadd
sti
into
xchg
inc
pop
loope
jecxz
jg
sbb
lods
mov
lods
push
sub
insl
sbb
xor
inc
imul
jo
in
or
pop
sub
ret
xor
andl
loop
mov
jb
ficoms
in
pushf
or
jb
inc
jbe
mov
pop
fcmovne
jnp
inc
dec
enter
dec
xchg
xor
xchg
daa
push
iret
cmp
sbb
jle
aad
lret
dec
idivl
adc
aaa
daa
mov
and
dec
mov
negb
cmpsb
imul
hlt
add
dec
cmpsb
fiadds
lds
sbb
cmp
int3
fisubl
fldenv
pop
xchg
sub
adcl
inc
dec
loopne
mov
sti
inc
into
pop
daa
lfs
cmp
ja
arpl
outsl
and
inc
cmp
in
lock
andl
idiv
cmp
sahf
imull
xchg
add
inc
dec
push
shlb
push
decb
cmpsl
clc
test
fisttpl
cmp
stos
hlt
in
add
mov
popa
into
popa
fildll
sub
imul
add
pushf
xchg
or
or
xor
push
xchg
mov
enter
rol
pushf
sub
add
stos
lea
mov
inc
ja
mov
shl
adc
stos
cmc
leave
xchg
and
inc
stos
inc
sub
enter
test
add
outsb
xor
dec
or
xchg
ds
mov
mov
jno
jl
sub
lods
inc
int3
iret
pop
mov
ret
pop
sub
movsb
mov
sahf
repz
xor
push
cmp
loope
je
scas
lock
sub
jbe
push
xor
push
adc
sbb
lahf
add
aaa
bound
mov
sahf
imul
inc
cmp
cwtl
xchg
loope
dec
ljmp
pop
fidivrs
jle
inc
or
inc
iret
mov
push
xchg
push
dec
movzwl
leave
and
inc
mov
jo
sbb
pusha
push
sub
ficoms
or
mov
mov
sti
or
insb
and
push
cwtl
outsb
ss
adc
enter
push
push
ret
in
sbb
xchg
inc
cwtl
pusha
jp
mov
je
in
mov
dec
sbb
lret
sub
adc
jp
cmp
std
lds
aaa
mov
in
out
dec
xchg
dec
stos
inc
fidivs
jno
inc
das
in
pushf
mov
fcomps
repnz
aas
add
xor
in
fdivrl
cmp
or
scas
mov
pop
inc
inc
test
mov
ficoml
pop
xchg
dec
or
loop
jb
iret
xchg
xor
xor
hlt
lahf
sahf
das
dec
pop
inc
jmp
xor
loop
jb
or
mov
mov
jne
dec
jo
inc
xorl
je
inc
lea
add
and
sbb
pop
sbb
xor
inc
cmpsl
adc
push
sub
add
cltd
adc
jns
std
inc
mov
and
add
fadd
jnp
push
jns
mov
xorl
adc
inc
test
sub
xchg
mov
imul
mov
into
mov
jl
lret
fisubl
aas
cld
jne
aad
inc
dec
jle
mov
xchg
jg
clc
xor
icebp
stos
and
xor
push
mov
add
cmp
inc
push
mov
enter
push
dec
push
outsl
movsb
repz
pop
rcl
nop
jno
and
xchg
adc
pop
mov
in
loopne
je
dec
mov
outsl
sub
sahf
lret
jbe
mov
pop
and
push
xchg
jae
das
add
or
leave
sbb
cmpsb
insb
and
mov
or
fisubs
jns
lods
fsts
popa
mov
stos
jecxz
inc
sub
cmp
repnz
sub
pop
movsl
call
pop
mov
popf
mov
aam
ljmp
sbb
sets
pop
lcall
inc
push
xchg
dec
sbb
sbb
ret
cmovns
mov
rorb
sbb
push
xor
icebp
add
sahf
in
inc
loopne
inc
stos
push
dec
imul
cmpl
in
xor
mov
test
mov
xchg
stc
popf
fs
popf
fs
xchg
xchg
pop
add
xchg
xchg
cmpsb
lcall
add
cmp
jl
cmp
sub
mov
pop
aas
addr16
ror
push
sbb
sub
int3
add
pushf
cltd
mov
mov
iret
pop
stos
xor
sahf
fdivl
bound
xor
or
sbb
jbe
addr16
repnz
insb
sub
xor
push
lcall
outsb
iret
dec
insl
insl
mov
test
cmp
jno
int3
pop
push
ss
cmpsb
test
lret
lea
std
inc
mov
sub
adc
test
shrl
aad
ss
aaa
mov
xchg
nop
imul
test
neg
xor
and
jl
bnd
ss
adc
sarb
mov
lahf
xchg
push
clc
and
cmc
pop
xchg
sbb
xor
push
jnp
push
in
sub
jp
adc
test
jae
mov
lea
out
insb
addr16
pusha
sbb
fistpll
inc
ja
lods
push
pop
mov
movsl
dec
jb
rol
loopne
push
pop
lret
sbb
cwtl
insl
adcb
sti
jl
data16
xchg
sbb
popf
popl
pop
or
dec
lret
push
sbb
push
sti
cmp
icebp
in
jo
sub
cmp
and
ja
test
ret
out
leave
lret
xchg
fs
sbb
mov
sbb
push
and
std
sub
fiaddl
out
jo
rolb
jecxz
es
dec
stos
jbe
inc
arpl
dec
aaa
iret
xchg
aas
data16
test
fcoms
fildll
gs
xor
cmp
xlat
pusha
inc
cmp
and
push
test
xchg
into
inc
jo
push
ret
sbb
push
into
arpl
push
inc
mov
std
adc
ret
push
pop
incb
aam
push
mov
inc
ds
jge
outsl
arpl
loope
aaa
xor
mov
je
scas
cmpsb
dec
fs
into
add
dec
ds
imul
or
inc
out
jg
push
mov
pop
sarl
push
pusha
in
stos
cmpsl
mov
inc
xchg
lods
adc
xlat
mov
xorl
arpl
jb
push
xchg
cmpsb
jecxz
dec
aaa
popa
push
test
daa
ret
jge
in
mov
stc
push
sbb
aaa
jo
fldz
stos
jno
adc
mov
rolb
mov
data16
insl
stc
or
xor
jb
test
push
push
repz
add
adc
push
pop
add
dec
push
pop
js
inc
rorl
sub
gs
jne
jecxz
shll
adc
shl
lods
xor
call
cli
rorl
jmp
rdpmc
sub
es
xchg
mov
lods
push
push
call
lods
scas
insb
mov
mov
push
data16
cld
pop
aaa
rol
cwtl
add
int
cmp
xchg
push
xchg
testb
cli
bound
hlt
scas
mov
xor
mov
sbb
jmp
push
or
ret
shr
adc
add
ja
or
push
ss
mov
pop
and
or
ljmp
in
mov
mov
mov
add
je
xor
scas
aas
fmuls
cmp
dec
ret
push
fisttps
mov
mov
fistps
and
pop
mov
int
adc
push
fs
sahf
ja
cmp
xchg
roll
jne
out
jge
test
fs
movsl
stc
cmp
notb
jae
jne
push
bound
pop
jecxz
mov
repnz
jae
mov
pop
jmp
adc
jl
enter
cmp
push
out
add
imul
mov
push
jbe
dec
repz
sbb
push
dec
test
repz
scas
dec
out
flds
xchg
mov
repz
ficompl
aam
jo
daa
push
cmc
sbb
dec
repnz
in
scas
rcr
xchg
popf
xchg
in
and
mov
cld
es
dec
xchg
xchg
rcrl
pop
xchg
shl
lock
lea
cld
jns
test
adc
faddl
fdivl
loope
ud0
pop
in
aaa
xchg
mov
cmpsl
pop
jne
pusha
adc
xor
xchg
movsb
push
inc
and
adc
pop
nop
mov
jnp
add
in
jmp
push
xorb
jge
adc
std
jmp
mov
push
mov
insl
cmp
outsb
mov
and
push
xorl
jmp
aad
xor
jo
xor
fldenv
je
insl
das
int3
xor
aam
inc
ret
push
dec
jno
xor
cmp
faddp
mov
loope
and
or
lret
mov
cli
cmp
mov
push
jmp
js
in
jg
aaa
inc
jge
out
arpl
push
insl
sbb
hlt
push
xchg
or
pop
pop
lret
or
and
lds
and
push
out
xchg
xlat
cmp
frstor
call
jecxz
stos
dec
insb
loopne
jb
stos
pop
or
add
lods
add
movsl
cmp
insl
dec
xor
xchg
cmp
fnsave
cltd
push
mov
fnstsw
popa
test
jle
bound
pop
sub
fdivrl
sti
adc
sbb
rcll
pop
jp
lret
xchg
insl
mov
dec
adc
cli
jmp
or
mov
and
dec
xchg
add
testb
add
shl
mov
add
adc
jb
and
js
mov
aad
push
cltd
jne
or
mov
cld
and
test
sub
fsubs
sub
adc
sub
in
test
pop
shrl
adc
testb
test
push
test
xlat
add
aam
inc
outsl
inc
pop
stc
adc
sub
scas
mov
sbb
mov
fwait
sbb
fsubp
rorb
jl
add
push
sbb
pop
adc
jne
and
hlt
dec
leave
dec
pop
push
push
imul
push
dec
frstor
mov
jmp
shlb
shrb
movsl
les
inc
xor
fisttpll
mov
out
fwait
push
cmp
int
sbb
pop
push
faddl
shr
test
mov
vprotq
push
andl
and
push
push
test
mov
lret
jecxz
inc
lret
rorb
fisttps
ds
push
jle
push
adc
mov
push
inc
testl
out
fsubr
push
xchg
jecxz
std
and
jmp
or
mov
pop
mov
sbb
jns
jne
mov
out
sar
movsl
ret
dec
mov
jg
int3
adc
stos
add
cmpsl
cmc
movsl
lock
push
sub
jns
shl
fsubs
and
daa
fistl
cmp
xchg
lret
push
xchg
xchg
cld
pop
mov
dec
pop
sbb
out
push
xchg
sub
inc
sbb
mov
jle
sbb
flds
imul
mov
scas
pop
pop
jne
mov
mov
jg
sub
test
or
push
fwait
sub
in
cld
jle
stos
test
jmp
loopne
roll
adc
jo
jo,pt
xchg
stos
adc
outsl
sub
lret
in
lds
add
lods
jl
testb
jnp
int
jo
test
sarl
or
xlat
inc
adc
mov
in
adc
dec
hlt
test
and
inc
das
test
shll
jbe
cmpsl
cmp
fcmovnb
cmpb
and
sbb
lea
push
enter
and
sub
test
jmp
xor
std
inc
out
jp
mov
adc
mov
jno
test
scas
adc
aaa
icebp
pop
mov
int
shrl
mov
mov
mov
inc
mov
mov
cmc
xchg
addps
clc
scas
sbb
cmp
imul
mov
mov
add
add
add
jae
out
in
cwtl
mov
pushf
pusha
mov
adc
mov
fisubs
mov
inc
sbb
out
in
data16
lahf
aad
mov
pop
jb
movsl
pop
pop
mov
jns
int3
imul
sbb
std
ret
nop
js
or
aam
inc
inc
out
pusha
sub
cmp
and
mov
inc
cld
push
sbb
sub
add
ja
cmp
orb
es
push
es
fadd
adc
dec
inc
dec
in
mov
add
stos
jae
jecxz
adc
rcr
ds
pop
popf
and
test
leave
adc
jp
jg
mov
inc
push
icebp
divl
es
dec
imul
ljmp
jl
je
inc
iret
ret
sub
push
jnp
mov
cwtl
ffreep
mov
ja
mov
sbb
pop
add
mov
cmpsl
add
es
mov
mov
stc
ret
adc
test
repz
push
sti
jle
aaa
cmpsb
dec
pop
mov
or
and
push
hlt
sub
mov
pop
mov
in
mov
popa
cltd
sbb
hlt
scas
xchg
adc
xor
aas
subb
push
sbb
scas
xlat
and
mov
pop
pop
out
pusha
jle
in
aaa
mov
es
imulb
jecxz
add
fsubrs
adc
pop
mov
lods
xlat
jo
jns
xor
sub
das
into
dec
test
je
push
sbb
mov
popf
je
push
in
fisttpll
bound
mov
sahf
aaa
cmp
mov
insb
scas
xchg
or
cli
xchg
in
into
lea
jg
jl
jo
sub
adc
cmp
in
loope
stos
xor
outsl
pop
mov
mov
mov
adcl
adc
adc
idiv
cmp
rolb
pop
loop
mov
pop
mov
push
aas
push
xchg
or
lahf
adc
dec
mov
or
cmpl
incl
idivb
in
adc
je
sbb
xchg
pop
sub
pop
sub
stos
dec
in
push
xchg
mov
adc
shll
loop
pop
popf
mov
repz
fbld
mov
outsl
scas
std
cmp
shrl
insb
xchg
cmp
or
cwtl
xchg
xchg
cmpsb
mov
stos
sbb
int
mov
sub
or
cmp
cs
add
push
aaa
mov
or
dec
mov
inc
mov
loope
andl
or
and
mov
lock
adc
xchg
mov
adc
cmp
shll
cmp
and
out
dec
scas
mov
out
inc
adc
and
fistpll
mov
ljmp
dec
sub
mov
xor
ljmp
xchg
push
mov
xchg
insl
loope
or
mov
out
int3
sub
in
bound
and
outsl
daa
or
adc
test
movsb
mov
lret
jo
xor
adc
xchg
dec
add
js
dec
aas
jp
dec
mov
inc
sub
ja
push
lea
cmp
mov
pop
ret
mov
and
scas
int3
sub
cmpsl
mov
adc
pop
or
add
loop
dec
ret
or
lds
loope
fucom
aas
push
test
mov
mov
scas
jbe
iret
in
test
test
cli
jbe
call
cmp
lret
sahf
push
repnz
pop
jg
mov
rcrl
lahf
cmc
loope
scas
insb
cld
lods
push
adc
pop
mulps
mov
cli
cmc
stos
sbb
cwtl
mov
xor
inc
ds
bound
add
adc
cmp
std
push
cli
cmc
int3
repz
std
and
in
mov
movsl
jae
aam
fcoml
fnstenv
int
pop
mov
nop
int
fwait
mov
mov
jecxz
imul
pushf
inc
mov
mov
sub
mov
orb
loope
inc
xorl
addr16
or
mov
inc
inc
or
sub
popf
push
push
ret
out
das
frstor
push
ja
scas
outsb
push
xor
jbe
add
xor
and
das
inc
test
cmp
cmp
xor
cmp
das
sbb
enter
pop
icebp
fwait
lock
pusha
out
jmp
push
cmc
loop
sub
mov
mov
aas
sub
and
mov
lahf
movsb
inc
push
sbb
dec
mov
int
adc
cmp
dec
sbb
in
mov
aaa
sub
mov
xchg
and
mov
imull
dec
daa
fsubrs
mov
int
xchg
inc
xchg
cmp
lock
loop
insb
push
jmp
sub
or
loop
loopne
hlt
mov
push
mov
mov
or
mov
push
sub
stos
cmp
jo
mov
inc
int3
inc
mov
and
sbb
cmpb
jns
call
lcall
repz
jb
repnz
pop
xor
or
imul
pop
repz
sub
jb
add
je
test
mov
cmpsl
jmp
clc
push
jmp
test
jge
aaa
jo
in
mov
push
push
aad
shlb
cld
fidivl
cmp
cmc
mov
std
push
mov
and
fildll
test
cs
gs
pop
imul
jecxz
outsb
fs
inc
mov
adc
leave
out
pop
sbb
jae
outsl
loope
inc
movsl
jae
xor
ljmp
inc
sbb
cmp
out
std
fidivrs
pop
movl
shll
or
in
les
adc
rolb
push
cmp
popf
scas
ret
ja
push
and
jnp
inc
jecxz
sub
sarl
lret
push
enter
hlt
aad
cmp
outsb
sbb
out
in
xchg
pop
cli
out
imul
mov
pop
inc
testb
mov
loope
movsb
daa
adc
add
outsb
inc
adc
or
sub
pop
loope
sbb
mov
mov
pop
in
push
test
daa
ljmp
cld
xchg
xor
lcall
pop
add
aas
imul
popa
outsl
add
push
jmp
dec
mov
mov
push
mov
push
mov
dec
xchg
jns
jb
cli
adc
xchg
nop
nop
cmpsb
jge
jle
je
add
es
inc
xor
cmp
xchg
push
clc
cmp
mov
je
push
clc
test
adc
cmp
jp
dec
fwait
and
xchg
push
dec
mov
mov
cmp
pop
cmc
jp
or
lock
stc
mov
and
add
fidivl
sbb
mov
cmc
and
xor
cld
cmp
mov
subb
xor
das
inc
out
adc
int3
sti
inc
push
fisttpl
jl
aam
mov
cld
popa
clc
and
push
ret
mov
jbe
popa
add
and
sbb
lods
fs
pop
mov
dec
xlat
xchg
jmp
cltd
push
adc
or
imul
and
pusha
cmpsb
les
addr16
repz
bound
mov
or
test
roll
aaa
xor
hlt
pusha
stos
push
sbb
xor
push
sub
cmp
dec
jb
arpl
xchg
dec
xchg
addr16
aas
cwtl
pop
sub
pop
pop
lret
lahf
in
push
xchg
push
loop
jl
stc
and
add
imul
xlat
mov
aaa
lcall
out
xlat
xchg
icebp
xor
ss
cmpsb
mov
mov
into
mov
cmp
repnz
push
cmp
aam
cmp
test
int
les
xor
imul
lock
push
lret
push
in
sbbb
sub
popl
loope
sbb
shl
mov
mov
and
cli
sub
or
fcoml
mov
stos
mov
mov
es
adc
cmp
cmc
dec
cmc
dec
mov
jge
cld
pop
xor
lret
aam
inc
jno
jl
stos
sbb
je
xor
js
jge
sbb
sbb
lods
mov
mov
insl
aas
cmp
sub
out
dec
repnz
xor
jle
cwtl
in
pop
lea
xor
xchg
addr16
push
inc
sub
sub
out
mov
sub
movsl
std
mov
leave
dec
stc
sub
call
cli
xchg
mov
xchg
cmp
cli
xchg
xor
daa
pop
hlt
pop
or
adc
dec
loope
push
push
and
loope
push
hlt
fldl
adc
or
cmp
add
or
shl
push
fcompl
pushw
negb
or
jae
add
push
xor
and
in
icebp
inc
mov
push
bnd
add
jmp
sbb
pusha
shr
int
out
aad
cmp
and
push
jbe
jmp
sub
je
cmpsl
mov
jne,pn
xchg
int3
mov
xchg
mov
jge
cmp
pop
sub
inc
cs
arpl
sarl
cmc
sbb
cmc
test
js
push
shll
lret
mov
mov
not
bound
cmp
sub
out
or
mov
cltd
out
imul
inc
and
push
mov
cld
into
scas
jmp
pop
dec
pop
sbb
sbb
in
pop
stc
and
adc
pusha
clc
push
pop
mov
test
fsubrs
shll
sub
pushf
imul
das
jge
mov
repz
adc
mov
cmpsb
jg
sti
test
mov
dec
and
movsb
push
inc
dec
mov
add
fucomp
mov
jp
jae
sub
imul
mov
bound
pop
fwait
push
xchg
jno
sub
xchg
jbe
dec
pop
dec
mov
dec
push
adc
fbld
mov
jne
nop
cmp
mov
pop
push
int
pop
addb
aas
sub
cmc
arpl
push
dec
lods
cmpb
pop
out
push
adc
mov
adc
fcmovnbe
xor
inc
sbb
jle
add
lahf
pop
test
popa
xchg
cmpsl
mov
sbb
push
mov
pop
lock
mov
repnz
mov
jge
pop
lret
pop
xor
movsb
ret
mov
fnsave
mov
mov
pop
in
cmp
out
lock
hlt
ret
test
call
pop
nop
inc
mov
pop
sub
mov
into
xchg
ds
pop
ja
cmc
inc
add
sub
addl
mov
clc
dec
fldl
mov
and
sbb
daa
call
push
ja
stc
fisttps
mov
push
mov
pop
inc
xchg
cmc
and
in
ficompl
loope
aam
pop
and
movsb
add
inc
and
andl
mov
inc
cmpl
jmp
ss
pop
int3
sahf
nop
xor
iret
arpl
sub
jg
xchg
sti
cwtl
es
jg
out
push
cmc
push
out
js
add
movsb
sub
cwtl
adc
add
sub
pop
mov
add
clc
cmp
mov
xchg
sub
lds
roll
or
mov
mov
test
mov
cmpsb
sbb
push
push
sub
pop
cmp
adc
lret
jnp
cmp
push
bound
pop
imul
pop
sbb
jg
push
xor
pop
ficomps
fistps
ja
ss
push
pusha
push
sbb
jbe
dec
add
bound
jg
outsb
ret
outsl
dec
cmp
or
push
addb
es
inc
out
cwtl
int
hlt
push
fcompl
in
sbb
rcrl
popf
cltd
jb
add
sub
sahf
sub
adc
mov
pop
fwait
mov
mov
pop
jmp
sub
out
jbe
dec
inc
std
pop
mov
add
adc
sti
push
push
cmp
push
mov
sar
mov
mov
mov
jmp
push
push
sahf
stc
jge
dec
add
inc
roll
or
jmp
lahf
push
pop
and
aam
mov
or
sub
or
mov
sarb
pop
xchg
fsubl
push
in
pop
mov
and
in
aas
orl
loope
xlat
fiadds
inc
cmp
pop
mov
out
mov
adc
xchg
cmp
dec
sarl
enter
bound
je
dec
cli
popa
sti
mov
jnp
adc
ss
xorl
adc
xchg
lds
cmp
pop
movb
mov
leave
jle
xchg
sbb
sbb
push
cmp
repz
fcomip
stc
ja
aaa
adc
xor
mov
arpl
push
fwait
jnp
jge
stc
data16
push
test
loopne
out
xor
inc
pushf
xchg
sbb
push
fs
stc
sbb
shrb
xor
ret
dec
adc
stc
mov
loopne
cmp
cmp
stos
dec
adc
or
sub
push
fimuls
jne
dec
stos
call
loopne
dec
sbb
lods
dec
push
ret
jp
mul
xchg
adc
adc
int
mov
les
and
aam
rorb
sbb
je
push
cmp
fdivrl
roll
mov
aaa
test
cmc
js
arpl
shl
lods
insl
cmp
out
mov
jmp
lock
movsb
dec
rorb
inc
push
cmp
into
push
fcmovne
ljmp
xchg
or
rclb
popa
inc
and
lock
sub
in
loope
mov
scas
mov
xchg
loope
std
push
pop
int3
pop
lret
adc
xchg
sub
add
int3
lods
inc
int3
cmp
and
int3
nop
xor
jl
sahf
sbb
sahf
into
add
adc
xor
mov
stos
push
dec
rorb
jbe
jecxz
das
xchg
hlt
cmp
add
rclb
adc
ss
mov
out
pop
loopne
adc
cmpsl
lret
adc
outsl
jmp
inc
ror
pop
inc
sbb
xlat
push
jg
push
inc
call
mov
or
outsb
add
lcall
adc
ror
rcrb
mov
aaa
test
xor
popa
mov
repz
pop
movsb
sbb
iret
ret
jmp
adc
dec
hlt
fistps
das
aam
inc
popl
sbb
or
aas
hlt
ds
es
icebp
stc
setb
or
frstor
add
stc
mov
out
sbb
mul
inc
dec
jno
mov
and
cvtdq2ps
inc
pusha
fcoms
adc
popf
inc
bound
fsubl
and
mov
ds
jnp
cwtl
inc
sbb
cmp
cs
rorl
notb
mov
mov
push
stos
ror
frstor
out
adc
in
pop
xor
int
ds
sbb
scas
jno
fxam
mov
adc
roll
out
insl
enter
fwait
inc
mov
mov
mov
xchg
sbb
mov
cmp
xchg
outsl
pushf
pushf
addr16
add
cmp
fbld
or
sbb
aam
mov
mov
xchg
data16
pop
in
sti
push
push
mov
xor
push
add
inc
sbb
lcall
das
push
jl
or
ljmp
dec
push
repnz
cli
xchg
fstl
inc
xchg
xor
xor
adc
out
rclb
icebp
int3
sub
lods
jnp
arpl
sbb
pop
push
or
fisubl
cmc
and
bound
std
daa
loop
xchg
fnstenv
iret
cmp
aad
fcoml
out
cmpsl
fbstp
push
mov
sbb
adc
int
out
pop
add
das
mov
sbb
bound
lcall
out
aam
sbb
dec
adcb
mov
or
mov
out
repnz
cmp
repnz
and
cmp
cmp
cmpsl
addb
shlb
int3
mov
jmp
repz
or
xchg
mov
add
cwtl
cld
imul
mov
je
jmp
or
inc
aaa
or
cmp
sub
insb
lret
push
fisubrl
shrl
dec
mov
aam
mov
mov
sub
cmc
pop
insb
jl
cmpsb
sbb
js
add
inc
mov
mov
inc
add
out
xchg
in
sub
mov
dec
mov
pop
lock
push
pop
dec
into
inc
or
mov
mov
jb
adc
push
push
clc
inc
xchg
add
mov
or
push
lret
xor
aad
shr
rcrb
pop
lret
out
pop
data16
mov
dec
pushf
dec
xorb
pop
inc
int
mov
push
lea
mov
aam
add
pop
dec
out
xor
xchg
pushw
jmp
lret
xorb
mov
mov
subl
insb
push
arpl
jmp
das
mov
ficoms
outsb
jnp
dec
dec
xchg
testl
jge
out
nop
insl
in
push
aaa
dec
shlb
mov
cmp
push
gs
mov
cmp
das
jg
pop
jo
xchg
xchg
int3
leave
jnp
scas
cmp
ljmp
pop
mov
imull
aaa
mov
xor
pop
cmpsl
mov
aaa
dec
divl
orl
dec
and
imul
jg
mov
ret
lock
add
movsb
dec
divl
cmp
jne
rcr
ss
or
add
inc
sbb
lea
push
lds
xor
out
inc
test
pop
cld
repz
and
ret
dec
mov
and
inc
xor
movsb
pop
pop
into
shll
insb
lret
pop
loop
pop
test
add
sub
mov
notb
dec
movsb
je
cmp
fisubrs
pop
add
jne
push
mov
cwtl
xor
pop
inc
int
lret
mov
ret
add
ret
testl
mov
push
int
sbb
add
xchg
pop
pop
test
and
cmp
cli
xchg
pushl
adc
pop
mov
push
xchg
push
push
outsb
dec
add
xchg
mov
adc
mov
mov
or
xor
cmp
out
rcr
fimuls
ja
pushf
xor
dec
insb
push
bound
mov
rorl
gs
into
fmul
iret
pop
xchg
lahf
pop
add
test
pop
dec
dec
xchg
dec
loope
popa
sbb
pusha
aad
pop
sub
add
adc
jge
dec
pop
dec
sub
xlat
arpl
in
adc
stos
sarl
jmp
xor
pushf
sti
cli
jbe
dec
addr16
sbb
aas
sbb
pop
cmp
ljmp
push
and
mov
pushf
arpl
xlat
add
mov
mov
mov
out
mov
addr16
xor
jmp
ds
jmp
mov
test
cld
push
add
data16
sbb
pop
xor
fistps
adc
mov
lock
cmc
mov
aaa
lock
mov
jnp
test
dec
pop
mov
dec
lods
sahf
ret
jbe
sbb
dec
cwtl
sbb
cmp
shrb
repnz
popa
jns
cld
pop
push
scas
sti
or
mov
pop
xchg
fldenv
rcrl
sub
xor
jae
cmpsw
mov
push
jl
pop
subb
popf
loop
pop
cs
aam
lods
cwtl
in
push
sub
test
in
ret
stc
and
jl
xor
std
inc
mov
jmp
mov
jle
sub
and
insl
inc
and
xchg
stos
pop
push
mov
sub
xchg
ja
sbb
xchg
sbb
jl
shrb
int
jns
jno
outsb
iret
inc
icebp
fs
movsb
xchg
and
fbld
test
filds
fiadds
mov
idivb
dec
mov
add
sub
jnp
mov
mov
sub
mov
lret
out
mov
mov
ljmp
push
sub
addr16
shrl
out
pusha
add
dec
test
fs
xchg
pusha
aam
leave
pop
je
in
movups
pop
xchg
ja
xor
cli
sub
mov
ret
out
cmp
sub
mov
int3
mov
dec
dec
rorb
xor
mov
pop
sub
loopne
sti
subb
adc
mov
shrl
loope
xor
and
ror
divl
ret
mov
push
sub
xchg
mov
jg
inc
nop
rcll
imul
adc
sub
cmpsl
xor
in
jecxz
test
adcb
rolb
add
loop
and
mov
sbb
pop
mov
mov
nop
mov
pop
sbb
test
mov
mov
mov
icebp
aas
xchg
mov
lahf
shll
xchg
enter
ds
xor
dec
xchg
arpl
cld
jp
in
ss
sar
add
sbb
sar
aaa
in
scas
std
rolb
sbb
pop
mov
or
cmpsb
sti
mov
push
imul
pop
pop
repnz
mov
das
andl
jle
xchg
ja
adc
in
lahf
push
xor
data16
sbb
rclb
xor
adc
add
iret
pop
push
outsl
sub
xor
lcall
inc
ss
dec
cmp
leave
out
outsl
movnti
mov
mov
sub
nop
mov
ret
push
movsb
pushf
xchg
mov
rclb
mov
adcl
dec
int3
push
jo
cmpsl
jmp
int
mov
shlb
stos
test
cmp
ds
push
sub
and
push
inc
iret
mov
push
and
loop
sub
shlb
and
add
adc
aaa
stos
sub
or
icebp
inc
ret
stos
scas
lahf
popf
and
fidivs
add
jl
mov
jb
daa
add
add
pop
rclb
xchg
lret
xchg
icebp
dec
pop
push
insb
clc
jp
adc
lret
and
insb
add
xchg
mov
ror
shll
mov
fwait
or
inc
je
sbb
xchg
out
cmp
sub
mov
ret
hlt
aam
leave
fiaddl
rcr
std
inc
adc
bound
subl
dec
or
cmp
inc
outsl
icebp
adc
je
mov
fimull
shl
mov
fs
adc
lcall
pusha
mov
xor
sbb
jnp
adc
repnz
mov
and
idivl
insl
adc
mov
jb
je
sub
dec
adc
mov
sbb
hlt
adc
inc
mov
inc
sbb
sbbb
add
pop
data16
inc
xlat
sub
insb
mov
cmp
inc
or
out
pop
pop
dec
sbb
sub
pop
or
xchg
jle
mov
add
sub
dec
sti
sti
out
lods
dec
ret
cli
cltd
sub
dec
mov
insb
mov
sbb
cmp
inc
mov
pop
imull
movsl
loop
add
data16
adcl
rol
push
cmc
lret
push
sbb
xor
pop
mov
jo
pop
mov
cltd
psllw
cwtl
jmp
in
push
int3
cmpsl
inc
sbb
lcall
addr16
pushf
jb
add
shlb
dec
jecxz
int
ljmp
add
out
push
xor
loop
fnsave
jne
mov
in
mov
or
arpl
push
ret
outsb
aam
sarl
lcall
adc
out
pop
in
dec
mov
test
ja
or
and
lods
or
dec
dec
leave
les
jle
inc
mov
gs
arpl
mov
add
cmp
pop
or
adc
inc
cmp
add
cmp
subl
mov
cmp
and
cmp
addb
movsl
iret
out
nop
pop
jns
int3
test
jp
push
and
and
or
xor
and
push
flds
and
aas
sar
test
aaa
or
xor
and
inc
fildll
test
sub
mov
pop
dec
mov
ror
ljmp
xor
mov
lods
lock
cwtl
shl
sub
jmp
add
dec
xchg
mov
jne
repnz
vmovntdq
std
outsb
rol
xor
jle
dec
aas
xchg
cmpsl
jns
xchg
mov
fisubrl
fnstsw
jnp
cli
iret
aam
outsb
hlt
add
pop
jo
aas
adc
hlt
jno
daa
fwait
mov
adc
test
hlt
out
cltd
pop
adc
mov
int3
sbb
aaa
mov
shl
jecxz
insb
mov
test
cmc
imul
fstpl
repnz
scas
test
and
jo
dec
mov
orl
bnd
jge
pop
imul
mov
adcb
loopne
push
addr16
fistps
shl
movsl
sub
ffreep
ret
xchg
xchg
test
mov
fsubrs
xor
xchg
push
shrl
mov
inc
out
shll
add
cmp
dec
pop
cwtl
loope
jae
mov
popl
cli
mov
adc
in
pop
in
fwait
push
ja
pushf
xlat
xor
or
stos
nop
lea
jne
and
mov
mov
or
sub
mov
lods
fnsave
push
cltd
push
xor
repnz
fldenv
sub
pop
fucompp
mov
jmp
and
jmp
lock
pop
dec
adc
shrb
icebp
pop
in
push
xor
imul
cld
mov
pop
insl
jb
cmp
add
mov
xor
pop
push
mov
icebp
ss
pop
fsts
add
cld
bound
mov
iret
rorb
mov
mov
xchg
inc
pop
rorb
mov
arpl
inc
mov
orl
or
fcoms
or
movsb
xor
push
sbb
jg
daa
push
cmp
cmc
inc
testb
stc
lea
push
mov
mov
fwait
push
fcompl
in
sbb
inc
sbb
push
mov
mov
sbb
xor
push
call
jg
loope
icebp
lahf
xor
aam
in
out
xchg
pop
pop
fnstsw
push
xor
xchg
pop
mov
jae
pop
mov
xchg
cs
and
stc
push
pslld
xlat
stc
push
movsb
add
aam
mov
fsts
stos
push
mull
adc
mov
pushf
push
xchg
cwtl
or
sub
cli
in
push
and
lods
pop
lcall
icebp
and
pop
adcb
loopne
mov
popf
mov
sarb
ret
pushf
movb
add
into
loop
adc
mov
cmpsl
xchg
lret
inc
inc
ljmp
subl
test
imull
or
insb
int
jl
xchg
test
jb
js
shrb
jae
roll
jb
call
pop
xchg
and
add
fisubrl
push
test
or
daa
fdivl
add
jns
rorb
mov
lds
xor
cmpsl
movsl
adc
sub
sub
adcl
sub
cli
lds
add
clc
dec
cmp
ret
mov
xchg
mov
mov
push
cmp
xchg
mov
and
test
nop
mov
mov
push
xchg
jmp
lock
out
push
xchg
pop
push
jbe
dec
push
jge
mov
cmp
push
sub
movsb
ljmp
fnstsw
sub
lds
aad
out
dec
fsubl
addb
or
and
repz
mov
xchg
scas
xor
mov
dec
pop
inc
in
je
and
sbb
inc
subl
jmp
mov
int3
dec
mov
xlat
dec
xchg
cmp
mov
xchg
or
rol
dec
lock
stos
cmp
clc
sarb
lret
jnp
imul
xchg
inc
loope
ljmp
scas
lds
push
dec
add
mov
shl
aaa
popf
jge
adc
in
std
xor
xor
push
lods
fisubrl
and
xadd
movsb
mul
sub
cmpl
scas
jbe
cmp
push
add
rcrl
jge
push
test
push
lret
jl
inc
sbb
ss
stos
dec
lret
mov
scas
les
jne
adc
mov
dec
inc
jbe
and
mov
stos
lea
dec
dec
int3
loop
pop
outsb
cltd
mov
jmp
push
push
jne
sarb
jmp
scas
loopne
add
dec
je
fisttpll
fdiv
dec
inc
imul
bound
sub
sub
pop
loope
pop
shrl
out
or
mov
frstor
mov
ret
inc
pop
sub
add
fsubrs
in
int
lock
xchg
mov
push
jb
fidivl
lahf
mov
inc
pop
jg
test
pop
test
dec
cmp
int
sub
mov
dec
js
lret
mov
mov
fldl
jle
inc
vmulsd
cmp
jle
ret
test
lret
jnp
stc
popf
fmulp
and
xor
push
bound
sub
jg
rorl
jmp
pop
mov
inc
cs
fstpl
loope
adc
imulb
pop
mov
ds
lcall
clc
push
test
pusha
xor
xchg
xor
or
int3
xchg
push
cmp
or
xor
sbb
xchg
mov
mov
out
cmp
cmpb
cltd
pop
sysret
pop
pop
mov
dec
pop
imul
jmp
adc
and
xor
lahf
xchg
cltd
push
inc
aam
lods
jp
lock
xor
mov
loop
cld
add
xchg
in
lods
jmp
dec
add
adc
sub
mov
jl
daa
fdivs
lcall
cli
popa
adc
sub
jbe
jns
sbbb
dec
std
arpl
ss
push
lret
lds
or
lods
stc
icebp
xor
xor
lock
xchg
add
mov
xchg
mov
mov
sbb
iret
push
jmp
je
or
fiaddl
insl
and
cmp
es
mov
jl
push
arpl
neg
cltd
mov
mov
inc
lods
outsl
not
rorb
and
pop
add
cmp
sub
mov
and
hlt
lcall
test
js
dec
mov
cmp
int3
adc
aam
sahf
dec
push
arpl
add
ret
xor
mov
mov
adc
in
repz
pop
movsb
outsl
popf
icebp
movsb
push
jbe
daa
and
pop
repz
ret
mov
jl
or
xchg
push
mov
push
xchg
cmp
xchg
pop
jo
mov
rcrl
dec
aas
rclb
das
cwtl
xorl
xor
out
push
pusha
rcrb
pusha
dec
inc
mov
lea
jg
icebp
inc
stc
mov
popf
icebp
lcall
lock
icebp
dec
xor
orl
imul
cmp
insb
xlat
mov
sub
js
xchg
pop
xchg
push
pop
pop
mov
push
xchg
dec
jae
add
fdivrl
mov
jno
jnp
sarb
dec
aaa
add
fisubrl
dec
adc
mov
jnp
jb
icebp
lret
cld
imul
mov
sbb
push
shll
cmp
sub
jp
inc
insl
aas
and
ss
mov
or
jbe
cltd
outsb
bound
cmpsl
ljmp
mov
inc
sbb
std
jge
jbe
pusha
xchg
inc
bound
xchg
sbb
hlt
xlat
enter
cmp
lcall
mov
lea
xor
mov
aas
mov
mov
dec
gs
or
xor
flds
xchg
test
cmc
mov
cmp
mov
lea
iret
xor
dec
out
push
and
mov
cs
loop
push
cltd
sub
push
pop
xor
scas
fcompl
or
or
dec
loopne
inc
xchg
stos
stos
and
bound
xchg
dec
adc
sti
enter
mov
jle
pop
lret
das
ja
fstps
add
fidivrs
cmp
cmp
mov
sub
imul
in
leave
lahf
loop
mov
and
xchg
scas
roll
mov
xchg
sbb
xchg
insb
stos
adc
push
cmp
lods
mov
push
adc
test
mov
push
cs
or
mov
push
incl
pop
xchg
dec
scas
push
mov
outsl
and
push
inc
hlt
adc
mov
loope
jae
rorb
mov
rclb
call
push
cli
scas
int3
xchg
das
mov
cltd
add
icebp
rorb
adc
pop
cmp
or
cs
test
insl
and
jg
out
sub
adc
rcrl
or
inc
push
xor
lcall
xchg
push
pushf
push
sub
mov
les
in
icebp
mov
in
call
fs
mov
jae
ds
push
fiadds
sub
push
movsl
jl
mov
or
test
push
mov
out
fcmovnu
rorl
pop
inc
cmp
or
mulb
scas
mov
mull
jno
nop
rcrb
pop
xchg
mov
cmpw
and
fstl
mov
pop
and
cmp
movsb
cmp
inc
and
jno
mov
mov
cmpsl
xor
out
sbb
testl
cli
sub
push
addb
pop
lahf
mov
int3
add
lret
jmp
pop
jns
shlb
jbe
push
jmp
mov
mov
scas
adc
fs
out
in
inc
stos
push
insb
jnp
and
mov
sahf
aaa
mov
aam
rorl
jns
fiadds
pop
push
mov
mov
pop
cmpsb
inc
mov
jmp
mov
jl
or
dec
mov
sub
mov
sub
das
adc
dec
incb
pop
sbb
nop
adc
aad
ret
jp
scas
addr16
outsl
pop
sbb
xchg
adc
add
pop
mov
ja
into
out
sbb
in
aad
std
addr16
loope
lock
mov
xor
push
pop
call
mov
push
idivl
fwait
out
push
and
fs
aad
sti
dec
sub
ljmp
stc
into
movsl
cmc
mov
fs
add
lret
inc
mov
les
test
adc
es
dec
sub
mov
test
cmpsb
or
jmp
fiadds
sbb
mov
adc
fsubrl
xchg
sahf
sub
lods
das
jmp
mov
push
loope
je
cmpsb
call
cwtl
and
daa
mov
add
pop
jbe
add
test
sub
js
mov
addr16
adc
push
push
pusha
addb
call
inc
add
ljmp
push
das
xor
and
sahf
mov
imul
push
sub
add
push
pop
loop
int3
push
jg
inc
fsubrs
push
pop
xchg
pop
fs
fidivrl
and
mov
dec
test
loopne
xchg
dec
cmp
push
cmp
stc
xchg
test
jns
mov
inc
call
shrl
dec
in
xor
push
in
lret
fistpll
push
adc
insl
add
xor
inc
ret
mov
test
push
movsb
scas
inc
fstl
xor
pop
push
jmp
aad
cli
outsl
cmp
lahf
pushl
lock
push
push
repnz
xchg
add
mov
clc
jns
mov
add
pushf
cmp
adc
mov
int3
adc
dec
pushf
jg
cmp
in
cld
loope
dec
add
test
cmp
jl
and
shrl
mov
mov
rorl
and
aas
fadds
inc
push
pop
loope
cwtl
aad
sbb
leave
stos
stos
and
cmp
bound
test
in
outsl
std
fsubrl
xor
imul
lods
push
sti
push
cltd
mov
pusha
lret
jle
cs
add
loop
lret
aam
jno
test
sbb
scas
dec
pop
lcall
add
or
test
call
ja
aaa
and
subl
jo
xor
and
jmp
sub
in
popa
subl
jecxz
out
push
lcall
cmc
sub
jnp
dec
sub
sub
rcrl
not
repnz
imulb
pop
loop
aaa
xchg
sbb
pop
int
leave
ljmp
sub
mov
add
mov
aaa
or
sub
and
lods
sbb
insl
inc
adc
nop
sbb
inc
imul
or
jns
pavgw
xor
mov
shrl
popa
stc
xor
in
in
cmp
fldenv
call
mov
int
in
dec
mov
aaa
lods
int
dec
outsb
sbb
sub
cmpsb
ljmp
or
add
stc
scas
dec
and
adc
shrb
outsb
mov
ljmp
fwait
jae
insb
cmp
fcoms
jae
mov
imul
loope
es
push
fidivl
pop
push
out
push
fildll
xchg
int
fsubs
decb
iret
fsubrs
push
or
lods
cmp
repz
mov
mov
pop
push
and
sbb
out
push
aas
aas
pop
movsb
add
mov
sub
lret
das
and
xchg
gs
sub
in
sbb
aam
inc
sbb
ja
pop
push
xor
dec
add
aas
sbb
adc
xchg
cmp
out
cwtl
lods
inc
pop
pop
fdivl
scas
xchg
sti
ds
fnstenv
push
cwtl
stos
orb
push
pushf
clc
test
aaa
jl
inc
stos
adc
enter
stc
cmpsl
std
loop
add
mov
int3
repnz
jnp
hlt
call
arpl
sub
xchg
test
bound
jecxz
adc
lea
dec
iret
rcr
ret
pop
pop
fdivrl
mov
xchg
mov
rolb
dec
cld
sbb
inc
andnps
dec
pop
pop
pusha
mov
and
mov
jmp
and
xorb
incl
mov
mov
jecxz
out
mov
pushf
jge
push
lods
popf
sbb
mov
or
push
mov
insb
stos
sbb
push
in
and
push
mov
xchg
and
out
jecxz
mov
lret
adc
pushf
jmp
fs
lds
pop
cld
push
sbb
ljmp
orps
js
insb
test
rol
shll
jb
xor
test
jb
add
jnp
sahf
testl
pop
xor
jecxz
dec
insb
pop
addr16
and
add
adc
cltd
push
subb
inc
out
and
call
mov
fidivl
in
mov
ljmp
lods
xchg
out
leave
jecxz
gs
adc
pop
je
push
lea
fs
das
lcall
ja
fwait
popa
adc
movsb
pop
add
xor
call
push
add
lret
in
lea
jne
mov
call
dec
into
add
mov
movsl
pop
in
fldt
sub
pop
xchg
lret
mov
es
cli
lock
xor
sub
mov
mov
outsb
dec
dec
sbb
mov
push
or
ljmp
bound
mov
cltd
jo
mulb
jge
stc
dec
adc
add
lcall
add
sti
mov
mov
orb
xor
sahf
cmpsl
popa
add
xor
mov
pop
cltd
cmpsb
in
pushf
push
es
and
adc
daa
daa
jno
mov
push
or
daa
jl
int3
pop
movsb
pop
cmc
orb
mov
xchg
and
push
and
mov
push
jb
in
pop
cmp
sub
jne
gs
repz
add
ss
daa
js
rol
push
adc
push
and
sub
push
arpl
les
xchg
cmp
das
push
xchg
cmp
aad
in
bound
inc
xlat
jae
repz
jbe
jae
lahf
pop
push
mov
push
mov
pop
add
orl
test
gs
arpl
into
pop
js
pop
push
scas
xor
out
push
data16
mov
insb
enter
jno
loopw
xorl
clc
mov
ffreep
daa
ret
lcall
cld
sub
and
repz
inc
sub
push
inc
pop
add
nop
mov
leave
int
movsb
fcomps
out
push
sub
stos
mov
cmpsl
shl
movsl
sub
fwait
adc
cmp
pop
xor
in
cmp
xor
cmpsl
mov
movsb
imul
lods
test
xor
je
jne
cmpsb
or
jno
sbb
mov
popf
pop
sbb
pop
aas
or
jmp
xchg
add
xor
inc
enter
out
sbb
test
inc
imul
and
jp
and
test
inc
lea
movsl
jbe
mov
stos
fdivr
dec
dec
sbb
in
movb
jp
jo
mov
in
ljmp
mov
pop
mov
aad
sbb
orl
adcl
lds
cld
jno
mov
fildll
les
movsl
mov
dec
xor
movsb
pusha
cmc
mov
loop
enter
lret
insb
xor
loope
into
aad
push
jecxz
mov
aad
aaa
icebp
js
cmpb
push
in
mov
xchg
rorl
aaa
sub
push
sub
dec
pusha
fisttpll
xor
cmp
in
iret
insl
sbb
aam
adc
adc
pop
push
pop
sub
mov
orl
lret
or
insl
test
aam
cmp
pop
add
mov
push
int
xchg
add
jecxz
cmp
hlt
sar
sbb
mov
add
cmp
jnp
jl
mov
cmp
adcb
in
data16
call
mov
std
ljmp
movsl
jg
inc
ja
sbb
push
jno
aaa
mov
and
and
mul
sahf
lds
mov
xchg
cmpsl
stos
xor
add
xchg
lcall
call
dec
adc
mov
sbb
cmp
dec
pop
mov
cs
dec
dec
cmc
mov
jle
inc
mov
insl
aaa
add
sbb
xor
stc
xchg
push
push
adc
cs
jmp
xor
loop
push
push
xchg
inc
pusha
cltd
cmp
inc
cmpsb
adc
shll
shl
cmp
pop
out
bswap
scas
bound
mov
data16
sub
les
lahf
out
mov
mov
push
fs
and
mov
jle
jno
push
cmp
mov
adc
adc
xor
jno
jmp
inc
add
mov
inc
pop
mov
mov
push
dec
pop
sub
lcall
xchg
inc
push
add
imul
or
in
xchg
dec
lret
push
lcall
push
adcb
test
mov
and
dec
sbb
or
test
add
lret
xchg
add
mov
or
jne
inc
cs
mov
mov
adc
dec
hlt
test
adc
push
lds
and
repz
or
jnp
sub
or
inc
or
xor
mov
scas
cltd
bound
mul
and
test
jmp
cmp
pusha
pop
aam
dec
mov
ss
mov
sbb
xor
mov
cli
leave
inc
mov
insl
or
shl
xchg
mov
pop
add
movsb
mov
addb
or
fsub
add
sbb
and
pop
out
xor
clc
xchg
je
dec
into
addr16
out
mov
mov
pop
pusha
dec
mov
xchg
sahf
cltd
inc
enter
mov
pop
and
lods
add
mov
mov
ret
xchg
mov
inc
inc
lea
ss
adc
jecxz
idiv
mov
mov
neg
das
daa
dec
jb
cmpsl
push
jge
or
int3
ret
cmp
mov
or
int
jnp
movsb
in
xchg
lea
fistps
sbb
nop
insb
or
xchg
pop
jo
fs
nop
fbld
or
mov
mov
nop
pop
je
fwait
arpl
loopne
dec
inc
call
cmpb
sahf
ljmp
push
test
or
or
xor
ret
movsl
push
sub
xor
xlat
or
out
mov
or
rcl
jmp
inc
cmp
bound
dec
out
lea
gs
inc
insl
sbb
test
mov
xor
fmuls
sbb
pop
add
mov
push
cmp
add
lcall
adc
lahf
mov
jle
pop
enter
arpl
pusha
mov
rclb
mov
stc
ss
push
stos
mov
dec
scas
lret
and
fmull
jecxz
mov
movsl
or
push
std
cmp
test
aam
shlb
aam
mov
inc
leave
js
cld
cmpsb
mov
aaa
icebp
movsl
xchg
pushf
lcall
cs
in
mov
sub
jae
or
fs
leave
imul
mov
not
es
cmp
add
pop
icebp
or
adc
shrl
xchg
and
inc
rclb
xor
mov
mov
lret
lods
sbb
or
cmp
out
test
aas
fdivr
adc
loopne
push
mov
cmpb
jle
adc
push
lods
dec
adc
cli
aas
push
or
adc
lds
sarb
xchg
imul
ja
fnstcw
or
mov
adc
scas
aad
jbe
sbb
or
outsl
mov
sti
fnstsw
pop
and
test
xor
shlb
nop
adc
daa
sbb
lods
and
cld
xchg
jb
push
aam
sub
jle
insb
cmp
mov
jne
mov
dec
mov
and
pop
jae
mov
pusha
data16
lods
lret
sub
mov
inc
push
and
and
fildll
arpl
sbb
mov
jbe
movaps
push
test
dec
mov
jmp
pusha
sbb
pushf
pop
aam
sbb
xchg
addr16
mov
xchg
rclb
mov
bound
clc
pop
and
jp
sbb
mov
push
xchg
and
movsl
dec
js
ror
and
mov
mov
pop
mov
sub
xor
sub
cmpsl
xor
cli
jmp
ss
or
ss
cmp
sahf
add
aad
pop
int
push
jae
pop
sub
jnp
inc
insl
jbe
jno
scas
mov
packuswb
jge
jmp
sub
push
fcmovnu
jmp
mov
insl
inc
ret
mov
mov
mov
imulb
dec
daa
fdivrs
cltd
lret
mov
into
mov
aas
jne
cld
push
pushf
mov
sub
pop
or
jns
aas
pusha
rcrb
dec
sarb
shrl
jle
mov
or
ss
adc
btr
inc
aad
fstpl
ljmp
cwtl
sahf
je
push
mov
pushf
mov
and
and
fimuls
out
fcmovne
push
push
in
pop
ljmp
loope
movsl
fstl
dec
jecxz
xchg
mov
les
push
insb
sub
jo
and
xchg
test
cmpsl
sub
in
div
dec
fwait
pop
sub
jmp
repz
ficoml
int
xchg
pusha
cmp
inc
repnz
jno
inc
div
out
jecxz
pusha
and
in
movsb
pop
xor
push
pop
repz
xchg
cmc
mov
negl
mov
add
cmp
xchg
lea
cmp
iret
and
movsl
cmpsb
mov
mov
xor
or
test
pop
lea
xor
push
leave
mov
js
pop
and
mov
cld
ja
cld
push
push
or
push
fsubrs
mov
incb
lcall
mov
fwait
mov
cmp
push
es
jnp
ret
jnp
les
xor
clc
add
mov
dec
imul
pop
andb
mov
outsl
loopne
fstpl
cmp
mov
and
mov
arpl
iret
sbb
sub
fincstp
jns
cwtl
int
sti
outsb
ret
push
push
sub
jns
in
xchg
aam
push
into
sahf
dec
jmp
dec
imul
daa
movsl
sbb
lods
or
js
dec
in
xor
aam
mov
pop
test
or
ret
pop
dec
push
pop
iret
xchg
and
inc
call
out
repz
cwtl
xchg
loop
int
mov
jns
cmpsl
call
sahf
cmpsb
xchg
ss
js
in
xchg
dec
and
add
and
mov
pop
jecxz
ds
xchg
dec
stos
or
add
int3
stos
dec
xor
fimull
in
out
not
mov
scas
mov
mov
jmp
rclb
xchg
mov
ljmp
jno
and
ljmp
sbb
sub
dec
jbe
and
mov
sub
aam
movsl
fwait
test
fadd
sbb
repnz
call
cld
loope
jne
popf
pop
xchg
out
push
addr16
sub
dec
scas
andb
jns
or
cmp
ljmp
fs
clc
cmpsb
movsb
add
cmp
inc
je
add
xchg
lea
sbb
lahf
arpl
mov
loope
mull
mov
and
adc
xor
js
cmp
jne
cli
pop
mov
lcall
pop
fiaddl
jl
push
push
test
lret
jl
sbb
iret
mov
loopne
xchg
xchg
imul
push
test
stc
movsb
iret
mov
xor
or
rcl
adc
push
inc
notl
mov
out
push
push
inc
dec
mov
inc
xchg
adc
jns
push
cmp
add
test
test
js
inc
cmp
mov
lret
xor
xor
lcall
shlb
jb
fsub
mov
jo
mov
jge
loopne
add
and
mov
push
xchg
inc
sub
pop
addl
test
aaa
pop
or
addr16
insb
popa
adc
out
mov
add
sarb
jb
pop
ret
insl
rclb
push
sahf
adc
inc
jnp
and
sbb
fs
in
sti
xchg
pop
js
ljmp
outsb
mov
push
jp
sbb
fstpt
je
or
aad
aas
or
jbe
xchg
xchg
jecxz
xchg
and
ret
sarl
cwtl
push
loope
mov
xchg
lcall
leave
cmc
movsl
xchg
inc
push
decl
push
mov
mov
in
pop
sbb
jg
cld
je
cwtl
xor
clc
push
and
mov
ds
outsb
ds
jge
aad
jmp
sahf
xchg
dec
push
iret
jbe
ljmp
xchg
fisttpl
mov
mov
ljmp
mov
jge
lret
cltd
xchg
dec
push
jmp
ljmp
shlb
rcrb
push
les
dec
fsubp
ret
mov
jle
lret
jns
add
fcom
clc
cmp
popa
sbb
inc
mov
or
and
arpl
ficomps
sbb
adc
aam
mov
mov
fcoms
push
lcall
xchg
add
xlat
pop
mov
mov
sub
jg
popa
shrl
cs
jnp
or
mov
test
pop
in
and
stos
adc
and
pop
leave
add
add
add
cmp
adc
imul
and
pop
jg
inc
in
ret
jle
jne
jne
inc
pop
xchg
outsl
and
push
push
aam
or
sub
dec
ljmp
into
xor
mov
cmpsb
es
je
fcomip
mov
imul
xchg
scas
popf
fbstp
jp
enter
sub
into
icebp
pop
sbb
add
cld
fs
cmp
pop
faddl
add
mov
outsb
and
imul
test
sub
inc
push
mov
shrd
mov
cmp
or
pusha
xor
iret
cld
fptan
or
sbb
fiadds
aas
xor
mov
in
sub
pop
pop
in
bound
lahf
xchg
add
sub
pushf
cld
lcall
sarl
and
dec
mov
add
arpl
jns
sub
mov
or
mov
in
loopne
add
push
inc
sahf
les
cmp
stos
repnz
sti
int
push
outsl
cmpsl
xor
loopne
outsl
dec
bound
or
dec
lock
jle
jns
test
ret
lret
hlt
decb
les
mov
lock
sbb
cmp
mov
sub
xor
mov
sub
jbe
inc
dec
xchg
adc
fwait
arpl
mov
xor
sub
xor
sbb
pop
movsl
and
mov
jne
je
xchg
ss
push
inc
shl
ja
hlt
adc
xlat
les
pop
push
fdivrs
push
or
insb
sub
push
stos
or
addl
xchg
push
mov
or
loop
test
ds
sbb
addr16
cs
mov
mov
push
cs
rcr
out
aas
pop
add
mov
cwtl
test
fs
dec
pusha
cmp
pop
xor
icebp
or
push
pop
pushf
xor
add
jg
mov
outsb
mov
xor
ja
mov
insb
nop
clc
xchg
or
mov
test
out
test
mov
shl
jmp
in
aas
sbb
pop
mov
xor
pop
jae
push
dec
adc
sbb
jb
xor
and
mov
cmpb
scas
sarl
sbb
add
xchg
sub
sub
xchg
xor
push
push
sbb
arpl
pushw
mov
decl
ljmp
fucom
daa
aas
or
imul
or
ja
inc
mov
mov
push
clc
xor
adc
adc
sub
pop
pop
mov
clc
jae
jae
es
mov
inc
xchg
cli
arpl
inc
std
xor
jge
mov
ret
adc
xor
test
push
fnstenv
gs
pushf
xchg
dec
stos
push
push
sub
repz
cmpsb
mov
aad
icebp
pop
xor
sub
cltd
js
pusha
mov
je
mov
push
in
sub
adcl
pop
xchg
adc
xchg
dec
lahf
clc
insl
push
sub
push
stos
cmpsl
insb
add
scas
adc
jns
dec
push
sbb
xchg
dec
mov
inc
pusha
mov
mov
jmp
cmp
cld
push
fildll
xchg
in
cmpsb
or
test
or
out
shr
jl
sbb
outsb
add
jp
add
mov
cltd
mov
and
addr16
mov
out
bound
cmp
xlat
cmpb
or
jg
inc
cmp
orb
xlat
jl
cmp
bnd
in
inc
into
or
add
lret
scas
jle
lds
in
cmp
in
ds
lock
cmp
push
rcr
mov
ljmp
sarb
xor
pop
fnstcw
movsl
xor
xor
rorb
les
daa
sub
adc
add
pop
add
ret
mov
js
popl
add
out
and
sub
loope
jl
jecxz
and
mov
add
outsb
sahf
cli
stos
scas
mov
stos
aam
jle
sub
mov
jno
aam
mov
cltd
pop
or
in
push
mov
and
jl
sti
adcl
aaa
sub
pop
mov
sub
lea
shlb
sarl
xorl
jne
pop
dec
iret
mulb
jne
loop
xor
add
imulb
fimuls
sahf
int3
and
hlt
idiv
hlt
push
aad
fimull
jb
xor
repz
adc
xchg
or
enter
subb
dec
sarb
jns
xor
xor
repnz
ds
mov
inc
es
cmp
pop
mov
into
cmpsb
lcall
int3
rol
lock
adc
push
cmp
idivb
sbb
dec
inc
xor
stos
clc
aaa
nop
out
aad
pop
mov
fidivs
xchg
jno
bound
cmc
jnp
out
clc
xor
pushf
pop
adc
push
mov
pop
sbb
sar
jl
ret
cmc
in
push
mov
ljmp
cmp
xlat
flds
pusha
mov
mov
push
and
ja
stos
call
push
mov
pop
jb
mov
cmpsb
outsb
les
les
mov
mov
cli
mov
xchg
mov
sub
cmp
shl
sub
mov
jno
daa
push
clc
add
adc
push
je
adc
push
and
mov
xchg
sub
and
es
je
xchg
or
int
pusha
lret
sbb
cld
dec
mov
ss
jae
inc
popa
loopne
aam
fsubrs
xchg
adc
xor
and
adc
ss
shrl
xor
pop
sbb
js
leave
lahf
mov
sbb
dec
cmp
dec
ljmp
mov
adc
pop
add
inc
ja
add
inc
pop
mov
rcrb
cmp
mov
xor
and
js
jns
mov
adc
and
inc
mov
jbe
popa
push
cmc
pusha
inc
repz
mov
cld
rcrl
out
jnp
loope
sbb
add
fs
mov
mov
fnstenv
pop
test
mov
inc
frstor
inc
movsl
jmp
jge
dec
sbb
pop
jle
inc
inc
push
cmc
fst
invd
stos
mov
mov
pop
xlat
pop
pushf
pop
ret
and
add
cmp
cld
shlb
lds
mov
jae
mov
dec
iret
mov
sbb
filds
leave
fldt
cltd
roll
mov
dec
pop
xor
lds
jecxz
stos
nop
xchg
xchg
push
xchg
sub
push
cmp
cmp
xor
or
mov
in
in
fstpl
cs
daa
cwtl
jnp
idivl
mov
pop
pop
xchg
leave
mov
push
ds
outsb
jnp
mov
test
lcall
outsl
lcall
xchg
test
jmp
in
push
js
and
mov
lcall
rolb
bound
scas
in
cmp
dec
lock
loop
inc
push
pop
insl
pop
fmulp
xchg
outsl
cmpsl
pop
rcrb
clc
ffreep
lea
push
or
stos
mov
mov
mov
pusha
outsl
ds
divl
sbb
lcall
mov
mov
or
inc
and
xchg
aaa
fcmovne
inc
lahf
pop
or
adc
jo
pop
pop
xchg
sbb
push
pop
push
push
mov
mov
or
aaa
dec
jne
add
xchg
dec
xchg
cmp
cmpsb
rcr
mov
cmc
ja
sbb
push
test
mov
push
lods
clc
jmp
bound
sarb
dec
mov
add
js
mov
sbb
scas
mov
and
inc
fldenv
mov
xor
scas
mov
mov
cmp
add
push
fsubrl
sarb
pop
xor
xchg
jae
leave
push
inc
movb
push
and
ljmp
pop
lcall
mov
test
mov
loop
nop
loopne
arpl
sub
mov
push
pop
sbb
sub
mov
mov
inc
js
and
loope
imul
into
add
jno
test
loope
mov
mov
mov
add
push
aaa
jo
dec
aaa
std
cmc
insl
mov
push
xchg
xor
cmpb
cld
xor
sub
and
orl
call
add
pop
xchg
fsubp
pop
adc
icebp
subb
lods
sbb
xchg
jae
xor
scas
mov
sub
roll
add
popa
push
inc
or
fidivl
mov
sar
lods
and
push
or
nop
and
jns
inc
clc
stos
add
jle
mov
inc
je
or
mov
popw
ja
jmp
mov
sub
lea
xchg
and
sub
xchg
sub
fistl
shlb
dec
je
fistpl
std
push
in
dec
gs
add
cmp
and
call
pop
ffreep
mov
adc
mov
cmpsl
push
or
sub
push
adc
rorb
fs
sbbb
rcrb
mov
mov
sbb
jno
adc
inc
lcall
sar
xor
jge
pop
mov
cmp
mov
sub
cmp
mov
add
loope
dec
out
sbb
adc
pop
ja
lret
in
push
xchg
jne
add
push
cmp
movsl
xchg
movl
insl
push
mov
add
xchg
mov
clc
inc
xchg
mov
xchg
mov
mov
inc
out
div
test
mov
jb
cmp
xchg
rol
sub
in
cmp
cmc
in
in
das
dec
mov
repnz
and
jno
push
and
pop
or
mov
xlat
inc
pop
les
add
xchg
test
je
mov
in
imul
push
popa
es
imul
jecxz
inc
mov
testb
es
pop
mov
sarl
insl
imul
sbb
or
faddl
and
cmp
pop
pop
pop
repnz
enter
xchg
adc
xlat
adcl
inc
xchg
cs
js
xor
add
pop
frstor
mov
mov
insl
mov
push
mov
iret
in
add
cltd
inc
stos
loop
xchg
push
in
ljmp
jne
push
pop
mov
sub
iret
test
inc
mov
push
or
ss
scas
ret
scas
test
xor
add
xor
mov
cmp
loopne
shlb
and
rcrl
cmpsl
cld
dec
movsb
xor
rorl
sub
bswap
sbbl
jns
out
xor
add
test
adc
and
mov
ljmp
and
cwtl
sub
shr
incb
sahf
nop
push
repz
sti
xor
sub
sbb
ja
loopne
lds
lods
les
sbb
push
loop
push
rcl
js
mov
arpl
mov
push
jnp
mov
fnstenv
add
jbe
sti
loopne
add
into
fwait
das
or
cltd
mov
fdivrp
iret
add
insl
xlat
and
scas
pop
fildll
mov
aaa
add
aad
or
int3
fnsave
sub
cltd
je
pop
iret
inc
orb
or
stos
cmp
xchg
mov
int
xor
in
imul
sub
mov
push
inc
or
out
outsl
ds
dec
cltd
jae
mov
fwait
insb
aad
js
xchg
daa
ret
ds
mov
pusha
bound
repz
and
jns
sbb
test
sub
cmp
fcomps
dec
and
cmp
sbb
stc
loope
sub
sbb
pop
cmp
test
jo
je
fcompl
push
mov
push
push
into
pop
and
jnp
dec
jne
adc
movsl
jns
cmp
notl
fs
test
int
gs
add
add
std
loop
adc
jmp
xor
shll
xchg
and
fldl
inc
test
fldcw
ss
sbb
push
je
mov
popf
dec
jmp
inc
inc
mov
andb
push
movsl
call
xchg
and
and
popa
stos
test
mov
sbb
test
xor
and
into
subb
aam
push
rcrb
jne
daa
fidivs
ja
int3
cmp
push
lods
test
shl
dec
leavew
xor
mov
cs
ret
pop
or
dec
mov
xor
xor
dec
arpl
mov
or
cld
pop
call
sbb
or
xchg
inc
or
nop
out
jle
dec
dec
add
stos
pop
lret
pop
push
cmp
rcll
add
xchg
fnsave
imul
dec
int
out
mov
mov
xchg
or
push
cmp
push
push
xchg
dec
jge
sbb
ds
rclb
andb
xor
fildl
loopne
mov
shll
mov
mov
and
iret
jecxz
xchg
xor
cs
jns
push
aad
shlb
push
inc
pop
jno
push
jns
xchg
pushf
add
mov
rclb
hlt
in
lods
and
push
cmp
clc
shlb
or
push
je
out
push
and
bound
stos
mov
std
roll
pusha
outsl
mov
jmp
insb
mov
in
xor
ljmp
inc
inc
xchg
jge
dec
out
ret
out
loopne
xor
pop
add
sub
in
hlt
insb
test
sub
cvtpi2ps
sti
xchg
pusha
sub
push
push
cli
call
push
test
push
addb
inc
pop
std
push
dec
mov
jle
fmuls
repz
mov
stc
xor
cmp
loop
pop
pop
repnz
stc
mov
mov
xchg
mov
test
popa
int
or
mov
push
insb
loope
jae
movsb
daa
sub
xchg
sbb
fcompl
sarb
inc
pop
repz
sub
cmp
repnz
add
xor
push
dec
scas
jo
std
inc
push
pop
or
adc
incl
push
adc
pop
push
test
pop
int3
sub
ss
jecxz
leave
ja
inc
dec
xchg
add
into
addl
and
adc
jp
and
pop
inc
lods
xchg
lea
mov
mov
mov
stos
cmpsl
pop
push
inc
orb
cli
fldln2
insl
pop
nop
push
cmpsb
jecxz
sbb
dec
nop
xchg
movsb
leave
pop
aam
sbbb
adc
adc
sarb
pop
or
sbb
pusha
xchg
pop
pop
mov
cmp
imul
jne
cltd
xchg
jge
mov
bound
mov
neg
push
xchg
inc
cmc
clc
mov
xor
call
gs
xchg
sbb
movsb
cmp
imul
xor
les
pop
pop
scas
sqrtps
push
cmp
cmpsb
imull
inc
jmp
xor
sbb
mov
loope
add
daa
xchg
movsl
lret
loopne
jo
lahf
sti
push
scas
ds
inc
cmp
sub
dec
iret
or
popf
and
shrl
add
xchg
iret
stos
pop
mov
sub
or
add
ljmp
push
or
dec
aaa
xor
daa
addr16
mov
pop
insl
imul
or
jecxz
shrb
aam
bound
push
adc
sbb
imul
inc
and
cltd
adc
in
xchg
xchg
push
sbb
repz
mov
pop
loopne
mov
fwait
xorl
cmc
dec
fwait
jge
inc
cmp
lcall
lods
push
data16
repz
sbb
aam
fs
cmpb
adc
js
push
repz
jo
bound
xchg
daa
fisubs
lods
iret
sahf
add
rcrl
test
popf
xor
xor
jns
rorl
add
std
adc
mov
cmp
lahf
leave
push
jle
cmp
pushf
lahf
shll
addr16
cwtl
fwait
insl
and
les
out
not
push
or
lock
out
jae
iret
push
mov
xchg
into
lods
sub
xchg
mov
dec
in
push
and
lret
in
push
cltd
fnsave
ficoms
xchg
mov
mov
push
mov
imul
push
stc
xchg
mov
and
add
pop
rcl
push
jle
and
mov
pop
rorl
adc
ficoms
arpl
jge
or
enter
push
and
stc
push
pop
lret
cli
inc
xchg
popa
into
add
jg
mov
jno
cs
aad
lock
inc
sbb
lods
jb
out
imul
lock
fmulp
scas
or
jmp
fisubrl
sbb
test
js
mov
andps
fs
jo
outsb
inc
lods
mov
inc
add
ret
xchg
fs
mov
stc
mov
jne
mov
sahf
and
test
test
fmuls
stos
sbbb
popf
mov
mov
sbb
loopne
jae
pop
sub
push
and
pop
icebp
mov
mov
pop
scas
gs
mov
mov
xchg
faddl
ds
movsb
mov
mov
not
jbe
jecxz
pop
iret
add
xchg
fstpt
push
test
sbb
mov
inc
or
inc
popa
stc
sub
sbb
jne
pusha
jmp
or
sub
jb
insb
imul
popf
dec
fs
hlt
sbb
sbb
pop
aam
inc
loop
mov
dec
stos
cmp
and
xor
pop
hlt
push
loope
fnstsw
orl
daa
push
test
xchg
cmp
xor
cld
xlat
or
dec
push
xlat
adc
das
sub
jp
adc
pop
int
iret
and
iret
mov
mov
xor
xor
or
jmp
cwtl
ljmp
sub
jnp
in
loop
jnp
shlb
push
pop
roll
ds
adc
sub
test
mov
fcom
mov
shlb
inc
mov
adcb
imul
jl
and
inc
push
pop
sbb
lock
mov
adc
cltd
js
lods
insb
lods
or
cmpsl
dec
jnp
push
adc
es
jmp
sub
loop
dec
inc
cmp
ljmp
or
arpl
sbb
or
lcall
mov
ds
inc
xchg
ja
sub
mov
cmp
push
and
sbb
jp
lahf
out
test
xor
std
rclb
sub
mov
scas
xchg
xor
xchg
aam
les
mov
mov
push
or
hlt
push
rol
pop
js
sti
pop
stos
push
loopne
inc
pusha
or
aam
cmp
adc
negb
lahf
sti
mov
mov
pop
jnp
jbe
push
dec
pop
rol
add
popa
decl
fildl
add
or
push
xorl
push
out
addr16
push
sub
xor
adc
testl
sub
test
sahf
pop
xlat
mov
lds
push
xchg
loope
xchg
sbb
fnstenv
or
xlat
push
mov
dec
out
repnz
data16
sub
repz
pop
loopne
out
dec
ret
std
shll
aaa
jno
cmpsl
loopne
or
sub
hlt
cmp
lret
xchg
pslld
add
adc
adc
jge
cmc
jbe
or
aaa
push
inc
ficoms
add
lods
xor
jl
mov
negl
push
dec
stos
lods
inc
scas
xchg
add
repnz
mov
in
mov
mov
jecxz
ficompl
repnz
int3
lods
out
dec
fcoms
sbb
fisttpl
in
inc
dec
int3
shll
pop
xchg
push
rorb
test
add
pop
xor
cmc
dec
mov
shlb
jb
data16
scas
test
jno
cwtl
ret
mov
xor
fidivrs
xchg
mov
push
ret
aaa
sub
push
adc
lds
or
xor
pop
scas
mov
add
loop
cld
jge
std
clc
lahf
cld
push
cwtl
sub
addr16
mov
gs
test
sbb
dec
into
xchg
ret
sbb
mov
and
arpl
sahf
add
or
mov
mov
cmp
mov
out
push
lds
jbe
xlat
mov
nop
and
popf
cwtl
sbb
sbb
xlat
jbe
and
cli
frstor
out
filds
sbb
push
pop
ret
addr16
lods
add
jo
add
mov
test
mov
jg
mov
in
insl
dec
pop
ficomps
push
jbe
pop
rolb
jmp
int3
pusha
aaa
jae
add
inc
and
jo
in
neg
int3
jecxz
adc
sbb
xlat
mov
cmc
fbld
sti
ds
faddl
push
add
or
mov
push
inc
dec
cmp
and
mov
fucom
popa
idivl
cmp
dec
loop
pop
lahf
xlat
push
sbb
jne
push
mul
add
hlt
test
lock
fwait
push
scas
in
mov
outsb
out
in
ret
pop
mov
and
addr16
lds
push
cwtl
sahf
loop
mov
int3
lret
icebp
js
inc
ret
xor
xchg
movb
fwait
loopne
sahf
sbb
roll
fadd
or
pop
inc
lds
movsb
andb
addr16
and
mov
jp
sbb
sub
lahf
call
outsb
mov
xchg
lahf
movsb
loope
dec
lea
stc
add
aas
orl
or
call
sub
add
inc
call
pop
addr16
push
inc
fildl
and
mov
pusha
int
inc
jb
push
jmp
daa
inc
pop
adc
jbe
sbb
fmuls
sbb
rolb
imul
mov
xchg
out
lcall
cmc
add
mov
mov
insl
jae
or
lret
ret
sbb
xchg
mov
stos
into
and
aam
js
std
jp
sahf
pop
out
mov
pop
mov
cwtl
icebp
rcll
mov
add
push
cwtl
inc
fsubl
xor
mov
dec
push
in
jmp
jnp
aas
outsl
push
test
aam
scas
push
inc
sub
dec
aas
xchg
out
pop
mov
in
and
xchg
or
and
aaa
mov
xor
xchg
sahf
stos
hlt
push
xor
mov
adc
gs
arpl
std
out
popf
bound
sbbb
jg
ja
scas
sbb
jns
test
pop
inc
push
pop
imul
sbb
cmpsb
call
mov
adc
stc
push
mov
adc
lock
call
push
pop
push
jbe
cmp
xchg
stc
sub
sbb
stos
ja
dec
cwtl
jle
mov
pushf
adc
enter
movsl
xchg
sahf
sbb
or
mov
gs
push
outsl
add
mov
mov
jg
xchg
sub
mov
lods
movsb
pop
inc
xchg
scas
xchg
and
aam
aas
xor
sahf
inc
js
mov
stos
aam
ss
mov
push
jmp
lods
or
lret
sub
sbb
push
repz
in
and
xchg
inc
pusha
cmpsl
mov
mov
jne
inc
fs
popf
push
call
aad
fsubrp
dec
xchg
xor
stos
adc
inc
mov
je
stc
stos
cmpsl
push
jg
outsl
clc
js
mov
sub
je
into
xor
inc
repnz
pop
xor
insl
incb
nop
enter
sahf
sub
xchg
sti
dec
in
mov
ret
adc
jmp
inc
mov
aaa
shlb
fistpl
and
nop
pop
out
out
arpl
fsubr
sub
mov
fistpl
pop
xchg
xor
fisttpll
sbb
lea
test
clc
out
xor
ficoml
xor
loop
xchg
push
inc
mov
rcrb
lcall
push
push
cwtl
repz
out
push
lock
dec
dec
das
int
repnz
add
movsb
jp
sbb
push
xchg
mov
jg
dec
arpl
dec
call
add
lods
and
push
lret
divb
xchg
aam
dec
jne
push
dec
lds
ljmp
add
xor
pushf
xchg
push
or
out
or
jecxz
into
cs
push
fmull
fdivr
push
jo
sbb
leave
adc
push
test
mov
push
cli
push
test
in
movsl
xor
dec
xor
imul
sub
and
adc
sbb
in
in
rsm
popa
and
inc
add
adc
bound
push
js
shll
sub
std
adc
loope
pop
mov
adc
jnp
in
or
les
aad
cmp
in
stos
testl
add
xor
or
dec
sub
out
sbb
sti
or
int
hlt
test
xchg
sub
sbb
adc
fmul
aam
jb
fadds
ss
repz
cmc
lock
cld
lahf
je
jnp
into
xor
and
in
inc
xor
insb
adc
sub
and
outsl
imul
sbb
sbb
out
stc
cmp
xchg
out
shll
xchg
outsb
std
push
cmp
push
subb
leave
jecxz
sti
cmc
jmp
fcompl
and
out
xchg
push
loop
mov
shll
mov
ds
leave
or
add
cli
add
mov
xchg
popf
and
pop
push
sbb
cli
sbb
xchg
lea
xchg
and
movsl
out
jp
pop
loopne
cmp
lods
dec
cmp
mov
aad
add
and
pop
mov
push
outsb
inc
int
sub
inc
mov
in
insb
mov
int3
cmp
mov
scas
adc
adc
adc
faddl
push
mov
imul
call
sbb
mov
inc
fcmovb
pop
adc
sahf
cmpsl
fnstenv
adcb
add
fisttpll
dec
inc
int
js
and
pushf
out
iret
and
dec
sbb
gs
shrb
xchg
mov
jle
pop
fdivr
mov
out
outsb
push
aad
dec
push
data16
outsl
int
pop
mov
mov
or
or
mov
jae
movsb
mov
arpl
or
stc
loope
push
mov
push
cmp
pop
and
add
ffree
hlt
push
sub
or
outsb
fistpll
add
mov
jecxz
dec
pop
out
lahf
jb
mov
outsl
ret
mov
jae
mov
mov
add
scas
xlat
rclb
rcrl
mov
push
adc
and
dec
add
bound
int3
xchg
sub
ror
mov
in
mov
dec
enter
rcl
cmp
cmp
lock
mov
sbb
xor
sbb
aaa
dec
pop
jbe
sarl
mov
pop
xor
pusha
add
jmp
push
sub
xchg
jnp
sub
add
cmp
int
jbe
clc
adc
jns
jb
pop
ret
push
mov
dec
mov
in
hlt
inc
pop
loope
fsubl
mov
jo
lret
pop
jecxz
xchg
push
ljmp
clc
push
outsl
jne
or
xchg
xchg
cmp
aad
xlat
xor
fistps
aaa
iret
or
add
loope
clts
sub
jg
cmp
mov
add
pop
ja
nop
movsl
popa
jg
lds
xor
ja
outsb
cltd
sbb
xchg
loope
mov
xchg
xchg
lret
or
ja
in
scas
bnd
pop
sub
nop
inc
aad
cltd
dec
imulb
or
pop
mov
jbe
mov
cwtl
lret
cltd
aad
jnp
scas
lahf
dec
rorb
xor
dec
jmp
mov
or
mov
lcall
jbe
ja
pop
psrlw
out
scas
sarl
ja
mov
int3
mov
loop
xchg
mov
dec
mov
and
negb
push
inc
pcmpeqw
jne
push
xor
fs
sub
sub
inc
push
sub
stc
mov
and
mov
out
push
test
fadd
sub
popl
iret
cmp
pop
pusha
loope
cmp
xor
inc
push
aad
xchg
scas
enter
mov
and
push
ljmp
adc
cmp
dec
mov
pop
xchg
enter
rcl
outsb
into
cmc
mov
pop
in
xchg
sahf
dec
pop
scas
addr16
popa
mov
inc
dec
mov
andb
scas
cli
divb
add
lret
popf
adc
lret
cmp
out
bound
clc
cmp
dec
xor
mov
push
xor
je
int3
push
repz
cmpl
push
pushf
mov
test
jo
mov
aaa
jmp
orl
push
xchg
mov
mov
xchg
cltd
xchg
mov
xchg
testb
aam
out
add
call
adc
cmp
lds
push
dec
les
sub
cli
decl
sub
inc
inc
jmp
cmp
mov
or
xor
loope
pop
mov
pop
sbb
xchg
mov
fsub
push
inc
in
test
orl
mov
xchg
adc
pop
push
cwtl
jmp
adc
push
lock
jmp
dec
sub
imul
je
negb
test
push
ljmp
cld
lock
orl
sub
and
cmp
inc
pop
xor
fsubrs
sub
push
cmp
scas
dec
dec
jecxz
inc
push
jecxz
inc
outsl
sub
push
and
test
shll
push
pop
adc
cld
mov
push
sahf
inc
inc
mov
call
pop
bound
clc
ret
ja
jg
mov
lods
adc
dec
and
xor
mov
xchg
cld
mov
mov
fcoms
mov
push
test
cmp
adc
mov
add
mov
xor
push
cmp
xchg
imul
pop
test
out
mov
cmp
mov
insb
js
loopne
popa
fisttps
inc
fsubrl
cmp
loopne
add
cltd
xor
js
inc
inc
add
mov
mov
jo
insl
js
mov
sbb
mov
or
das
cmp
fiaddl
mov
mov
cmp
push
xchg
pop
stc
lds
lods
sub
test
push
sub
dec
aam
mov
add
and
pusha
jns
xchg
pop
sbb
mov
inc
mov
scas
or
inc
aad
and
mov
mov
jmp
push
sub
xor
cmpsb
call
nop
xlat
dec
jl
sbb
cmp
jmp
mov
dec
fstpl
jle
fsubrl
ds
lods
or
gs
cwtl
jb
pop
faddl
mov
dec
jmp
clc
pop
pop
shll
in
mov
daa
shl
ret
push
push
xchg
rcl
pop
insb
mov
hlt
pop
add
repnz
jge
sub
mov
std
lret
sub
insl
xor
adc
xchg
mov
icebp
mov
jbe
andps
cli
mov
std
in
cwtl
cmp
mov
adc
out
dec
and
in
cmp
push
imul
xchg
sub
jg
jge
and
sub
cwtl
test
lods
ret
das
test
insl
sbb
je
mov
add
mov
in
andl
ret
cld
adc
add
sub
adc
mov
push
or
jns
sbb
int
mov
cltd
adc
or
repnz
xchg
xchg
aaa
icebp
loope
inc
sbb
sbb
bound
dec
scas
sbb
lret
inc
inc
lds
jae,pn
movl
mov
cmpsl
xchg
cmpsb
push
or
jle
jg
mov
mov
and
leave
cmpsl
hlt
out
scas
ds
adc
stos
insb
rclb
dec
push
lahf
xchg
and
sti
adc
movsl
push
mov
cmc
iret
sub
mov
imul
aad
xchg
or
cmpsb
xor
int3
sbb
cld
cmp
lret
adc
mov
lret
test
arpl
aas
int
adc
pop
mov
outsb
inc
cli
push
inc
xchg
outsb
add
stos
xor
jnp
fnsave
in
push
cmp
add
mov
mov
cli
cmp
loope
push
out
and
movb
xlat
inc
ja
xor
mov
mov
subl
cli
daa
cmp
mov
add
add
std
popa
mov
adc
out
sub
jae
xchg
jne
nop
sub
xchg
sbb
dec
sbb
mov
add
xchg
inc
mov
popf
dec
or
and
mov
daa
adcl
push
sar
mov
push
xchg
dec
in
inc
cwtl
lahf
sbb
clc
movsb
mov
push
cli
daa
fwait
mov
fcompl
imul
add
add
mov
lea
adc
mov
and
ljmp
notl
add
sar
push
jge
repz
lods
call
mov
subl
xor
ret
rcll
adc
aas
lcall
leave
jns
mov
sub
out
pop
mov
divb
jge
leave
cmp
cwtl
and
add
xlat
pop
in
mul
cmp
into
enter
pop
adc
push
or
maskmovq
add
push
mov
lcall
jnp
test
sbb
and
scas
jl
adc
ret
scas
int3
int3
push
icebp
lods
jp
inc
mov
xchg
int
mov
cs
loopne
ret
xchg
shll
xchg
inc
push
push
out
add
cmp
cs
mov
mov
push
pusha
adcl
arpl
xor
mov
cmp
xor
rcll
cmp
jl
in
mov
test
test
jbe
aam
lods
aas
rolb
pop
mov
add
aam
xchg
repnz
xlat
arpl
dec
pop
fldcw
mov
xchg
xor
jl
arpl
pop
icebp
and
lea
inc
sbb
xchg
outsl
sbb
mov
lea
mov
jl
mov
and
mov
in
test
mov
subb
int3
pop
and
pop
push
push
cmp
sub
imul
orl
mov
push
jl
fcmovnu
push
scas
test
imul
xchg
inc
out
jno
jne
add
xchg
ret
repz
cs
pop
cmpsb
or
stc
jecxz
adc
pop
out
inc
mov
loope
pop
das
je
daa
xor
lcall
push
push
xchg
xchg
add
das
mov
and
repz
dec
inc
xor
das
imul
pop
dec
add
jecxz
dec
mov
xchg
in
sbb
adc
jg
xchg
push
dec
mov
or
mov
popa
dec
scas
and
add
mov
aas
sbb
js
ja
jge
and
lds
jo
lods
cmp
or
lds
addr16
add
jb
cld
jmp
mov
pop
xchg
subl
cs
jg
mov
inc
les
mov
cmp
push
clc
xchg
sub
out
inc
divps
js
inc
out
cltd
ret
fidivl
aas
in
jns
add
xchg
jno
ss
push
jp
lahf
movsl
fmull
cmp
and
mov
xlat
add
cli
jns
sbb
cmc
pop
fildl
outsl
lahf
aaa
pop
sub
test
xor
pop
hlt
rolb
jb
xchg
mov
or
push
xchg
lds
daa
adc
xor
jg
and
ljmp
ret
loopne
sub
mov
push
push
clc
dec
jge
jne
loopne
push
fs
xchg
mov
jae
mov
bnd
jbe
pop
pop
xor
dec
in
mov
out
push
mov
movsl
lds
push
add
lds
cwtl
xchg
cmpsb
and
rorb
out
xor
lods
push
scas
push
pop
pop
test
cmp
pop
mov
adcb
sbb
imul
popl
repnz
mov
cmp
imul
xor
stos
xchg
inc
xor
jle
add
xchg
inc
xchg
filds
sbb
push
xor
int3
cmp
daa
testl
jb
inc
sahf
cwtl
fsubrs
outsl
cmp
sub
scas
inc
out
cld
loop
icebp
ret
mov
pusha
lcall
iret
inc
pop
std
mov
or
into
pop
xor
or
adc
popa
cmp
jge
bound
mov
daa
aad
fcmovnu
cmpsb
cld
lcall
inc
push
xchg
std
mov
cmpsb
out
int3
add
jecxz
adc
data16
dec
inc
cmp
sbb
jno
ds
adc
push
out
xchg
add
and
in
jmp
xor
repnz
xchg
adc
movsb
cmp
pop
pop
xchg
xor
adcl
gs
ss
sbb
lock
lock
cmp
outsl
jmp
adc
xchg
cmpsl
pop
add
jg
mov
mov
das
mov
movsb
adc
jnp
and
sub
jns
imul
lods
mov
dec
fildl
cmp
pop
pop
add
or
cmpsb
pop
xchg
mov
pop
cmp
sbb
xor
sbb
fimuls
jne
and
xor
insl
aad
shl
enter
adc
lods
and
ja
aam
cmpsl
sub
add
jae
ret
sub
loope
insb
ss
ss
sub
fwait
add
scas
call
pop
and
add
push
pop
ss
adc
stos
and
int3
in
mov
jge
addr16
add
add
mov
cmp
adc
sti
mov
pop
movsb
ret
cmp
cmpsb
cmp
push
inc
inc
mov
and
orb
mov
in
xor
dec
sub
adc
mov
push
xchg
cmp
sub
in
inc
loopne
pop
xchg
stos
or
aaa
and
dec
cmpl
addl
xlat
in
sbb
cmpsb
jne
ljmp
xor
sbb
push
rcll
in
pop
loop
aas
push
aaa
out
insb
mov
and
test
jl
loopne
and
jae
mov
mov
dec
scas
cli
pop
or
push
sbb
mov
lds
inc
sub
popa
arpl
jmp
add
cmp
add
xchg
jno
repz
push
cmpsb
sbb
rcr
mov
pop
push
mov
mov
cli
cmpsl
in
lret
mov
data16
scas
mov
les
pop
cmp
cmp
inc
repnz
adc
mov
jle
ja
nop
stos
fiaddl
inc
xchg
add
cltd
xor
arpl
add
pop
sub
or
adc
jmp
lock
adcl
mov
mov
pushf
sti
inc
shl
addr16
sub
mov
pop
pusha
push
int
loop
xchg
sbb
jecxz
arpl
xchg
mov
daa
daa
je
inc
xchg
sub
lods
cmp
pop
mov
pop
lock
shlb
mov
clc
jecxz
ficoms
test
mov
stos
cmp
pop
or
jp
xchg
xor
push
shll
pop
push
daa
leave
not
adc
adc
orb
mov
jb
cmp
jo
push
movsl
movsb
xorl
mov
cmp
pop
jb
cmpsl
mov
mov
mov
jle
jge
pop
sahf
shl
push
mov
add
mov
fcmovbe
je
jle
add
loop
push
xchg
inc
sbbb
fidivrs
xchg
xchg
sub
loope
icebp
jecxz
pop
adc
cwtl
outsb
xchg
mov
mov
xchg
call
mov
shr
pop
jl
rcl
push
cwtl
adc
lods
sbb
cmp
pop
divb
test
push
push
or
aaa
aam
push
jmp
jb
adcb
pushf
lret
add
das
sub
sahf
dec
in
jno
dec
and
push
inc
lds
xlat
bound
fnstenv
inc
pusha
mov
sbbb
or
pop
cmp
adc
cmp
jmp
mov
xchg
mov
je
ret
push
mov
or
lea
int
or
int
inc
orl
mov
frndint
sahf
push
cmp
popf
mov
xor
dec
test
fs
int
clc
jbe
xlat
jg
std
aas
push
or
subb
mov
ret
icebp
into
repnz
xchg
stos
and
mov
xchg
pop
daa
and
gs
lods
mov
nop
mov
pop
dec
mov
push
imul
jb
or
sub
mov
sarl
mov
pop
pop
mov
mov
insl
pop
jno
lods
jns
inc
scas
test
jle
add
out
dec
mov
push
mov
out
add
mov
mov
jbe
in
dec
mov
movzbl
dec
repnz
xchg
insl
imul
clc
pop
movsb
fldl
mov
loop
pushl
dec
pop
cmp
lods
icebp
cmp
cmp
cmp
pop
or
mov
xchg
outsl
test
sub
mov
dec
imul
std
cmp
dec
lret
mov
sbb
pop
mov
or
cs
sahf
sub
and
ret
mov
ret
cmp
stos
add
popa
pop
mov
incl
xchg
faddp
fdivrs
add
dec
out
arpl
xor
dec
addr16
ret
jbe
popa
mov
jmp
xchg
int3
mov
xchg
ss
jo
mulb
sti
jno
gs
test
mov
stc
add
cld
ficompl
lea
pop
sbb
std
int3
pushf
pop
call
nop
pop
int
test
test
lret
test
sbb
pop
adc
xor
jno
mov
out
jns
lahf
ja
mov
mov
lret
jbe
cmp
inc
idivb
adc
pop
lahf
adc
std
pop
lods
stc
xchg
jg
or
dec
dec
into
pushf
movsl
je
push
pushf
hlt
lahf
mov
or
mov
mov
sub
mov
adc
sbb
jecxz
xchg
out
mov
sbb
scas
xchg
fldenv
ljmp
jp
test
aas
stc
xchg
mov
lret
or
adc
jb
rcr
xor
inc
enter
mov
mov
push
fldenv
push
jle
bound
negl
or
dec
lahf
lahf
or
in
pop
jbe
shll
lcall
jge
mov
adc
rcrb
cmp
outsb
lahf
mov
inc
dec
sub
pushf
push
inc
lcall
mov
ret
es
xchg
jae
mov
out
outsl
adc
test
push
js
stos
gs
int3
push
std
pop
add
mov
xor
mov
repnz
fnstsw
sbb
aas
xchg
mov
pop
ja
call
jle
push
in
xchg
pop
jle
sbb
lock
inc
inc
inc
mov
mov
pop
fiadds
adc
jle
pusha
shll
mov
push
mov
and
mov
fldenv
shrb
mov
inc
std
xchg
dec
xchg
mov
movb
mov
jo
push
jl
sub
adc
test
fwait
mov
shll
les
sbb
jg
mul
jg
sub
or
or
jbe
mov
sub
jecxz
leave
stos
cld
dec
ja
xor
test
and
bound
push
mov
bound
dec
dec
bound
adc
stos
fidivs
pop
jae
pusha
scas
inc
fcomps
stos
rcrl
lcall
orb
fs
mov
ss
mov
clc
sti
out
in
mov
pushf
inc
test
nop
movsb
push
cli
clc
mov
and
inc
pop
stos
loopne
lret
dec
push
call
aad
dec
inc
ss
scas
iret
cltd
in
test
iret
pop
inc
nop
jnp
popa
pop
jne
push
pop
cwtl
lea
or
in
lds
push
out
stc
inc
fsubp
mov
or
xchg
pop
cmp
add
xor
ss
lcall
xchg
push
add
cmp
mov
cs
cmp
aaa
dec
mov
dec
xchg
lcall
fwait
div
adc
imul
jg
subb
inc
adc
inc
adc
sub
dec
and
mov
arpl
lret
pop
gs
test
inc
imul
pushf
outsl
sub
and
jb
adc
mov
bound
jo
and
shlb
and
xchg
cmp
mov
xchg
add
enter
arpl
ds
lret
lock
sub
int
out
push
mov
lret
pop
loopne
enter
mov
xchg
fsts
aas
dec
out
or
xchg
sti
push
sbbb
insb
add
daa
fisubrl
pop
mov
fwait
movsb
or
lcall
mov
xchg
aas
jbe
mov
divl
cmc
sbb
sahf
lret
mov
jmp
fsubrl
rclb
cli
and
xchg
in
outsl
jle
movsb
mov
loop
jnp
popa
test
adc
popf
fs
cs
push
pop
mov
cmp
xchg
cmpb
loope
xor
push
jo
mov
dec
sti
sti
sub
loope
inc
sub
mov
push
pop
pop
fisttps
shlb
sbb
cmp
mov
sbb
cmp
addb
xchg
sbb
mov
fsubl
add
mov
icebp
daa
arpl
aas
push
jmp
xchg
mov
cmp
cmp
inc
leave
pop
xor
out
jae
mov
or
int
mov
les
in
mov
orl
pushf
jle
push
dec
or
push
jo
bts
sub
mov
test
test
mov
inc
push
cmp
imul
push
cltd
dec
js
inc
hlt
fsubr
scas
ds
call
cmpsl
nop
mov
xor
mov
daa
jecxz
or
and
sub
mov
cmc
fwait
stc
jo
bound
hlt
mov
outsl
xchg
nop
js,pt
adc
enter
mov
es
push
cmp
stos
fs
roll
sub
cs
out
sbb
test
xor
movsb
dec
repnz
sbb
xor
inc
pop
dec
lea
enter
repz
les
test
jns
push
mov
cmpl
mov
add
je
inc
mov
in
shrb
push
gs
shll
lahf
leave
aas
andl
rclb
push
cmp
jmp
and
inc
mov
sub
push
outsl
movsl
hlt
ret
add
scas
xor
fucomi
cmp
ljmp
dec
popf
push
dec
gs
scas
arpl
pusha
lret
pop
js
push
adc
movsl
loopne
pop
mov
sahf
or
cmpsl
adc
mov
push
or
pop
sub
popf
es
gs
jae
xchg
lcall
cmp
and
mov
movsl
gs
outsb
scas
je
jg
cs
mov
push
pusha
shrb
adc
movsb
stos
dec
adc
xchg
xor
xor
mov
or
xchg
in
mov
add
sahf
add
ss
je
test
outsl
jo
mov
shlb
sub
xor
decl
fcoml
or
pop
fsubs
or
fisubl
dec
ljmp
pop
mov
adc
sbbb
je
add
loope
inc
push
leave
dec
in
dec
cli
pop
mov
std
aaa
xchg
mov
loope
cmp
stos
pop
sbb
dec
lods
lcall
sbb
pop
in
scas
ret
xchg
xor
push
push
jb
add
fisubs
sbb
or
in
xchg
inc
das
out
fcoms
imul
orb
jne
outsb
in
mov
out
jp
and
je
orl
shll
xchg
sbb
sbb
push
es
sub
adc
loopne
or
push
js
paddd
and
test
sahf
sub
out
icebp
popa
push
mov
in
scas
mov
cwtl
cs
mov
xorl
adc
add
fistl
and
clc
push
mov
lret
mov
arpl
daa
fildll
movsl
test
adcb
dec
mov
arpl
rorb
mov
cmp
out
notl
out
sub
mov
push
jae
stos
pop
xor
mov
cltd
test
or
mov
push
fdivrl
mov
imul
nop
lods
ja
pop
fcoml
push
lea
cmp
lcall
addr16
lahf
jecxz
iret
sub
js
out
lret
and
aaa
ret
addr16
xlat
and
mov
jnp
cmp
sbb
out
and
js
mov
into
xor
sub
call
and
pusha
add
sbb
pop
mov
sub
jecxz
or
push
icebp
xlat
movsl
test
mov
xchg
cmp
inc
jg
xchg
aaa
mov
push
xor
mov
sbb
int3
out
xor
add
inc
stc
test
xchg
cmpsl
mov
xchg
pop
icebp
or
add
adc
mov
cli
mov
and
sbb
add
ja
or
xchg
jecxz
xor
push
fimuls
xor
popf
ljmp
notb
xor
fildl
je
out
out
push
sbb
dec
add
fistpll
sub
mov
sub
lret
add
lretw
jle
mov
jae
add
mov
jle
mov
xchg
aaa
popa
jbe
or
mov
lcall
gs
xchg
pop
xchg
jmp
sti
jno
roll
dec
in
notl
cmpb
cmp
mov
push
imul
pop
rol
cmpsl
cmc
fdiv
xchg
stos
int3
push
xchg
pop
mov
in
fcompl
sbb
das
shr
fildll
sti
lcall
pop
mov
sbb
sahf
mov
cmp
ss
and
mov
gs
mov
loop
sbb
popa
inc
jle
pusha
aaa
cwtl
xlat
int3
jl
cs
xor
adc
pop
dec
mulb
mov
divl
jne
lea
add
and
jnp
cmp
xchg
scas
add
test
out
mov
push
out
xchg
jl
jae
lcall
push
adc
add
cmpb
int3
push
adc
dec
inc
ret
add
add
or
fwait
or
mov
adc
ret
out
or
lret
cmp
sbb
adc
or
leave
mov
js
jns
pop
jge
jl
data16
sub
sub
cltd
aas
xchg
pop
lret
pop
push
jle
jb
aas
jge
cmp
adc
and
cmp
sbb
jg
fidivl
sti
mov
hlt
or
ss
push
cmp
dec
or
push
jns
mov
idivl
inc
push
aas
sub
bound
repz
mov
sti
enter
mov
xor
mov
and
jmp
repnz
cs
mov
es
cld
ss
push
cltd
or
call
daa
das
fistps
adcl
sbb
bound
sbb
lods
adc
xchg
and
mov
inc
iret
loope
dec
aas
and
mov
jge
xor
and
out
sub
movsb
sub
mov
js
mov
pusha
mov
fcomps
iret
lret
dec
jno
add
dec
sbb
sub
loopne
and
adc
mov
bound
je
ret
jp
cwtl
sub
popf
movsl
adc
or
fdivrl
add
in
jns
dec
mov
jecxz
out
movsl
loopne
jle
mov
xchg
out
xchg
mov
cmpsb
cmp
repnz
in
pop
mov
jecxz
inc
pop
jno
pop
imul
jge
sbb
fmull
fisubl
mov
cli
jbe
push
mov
int
mov
jp
mov
fldcw
lahf
iret
xchg
mov
add
mov
mov
out
out
imul
jmp
pop
cwtl
xchg
mov
xchg
or
sahf
fdiv
fnstsw
xchg
outsb
pusha
clc
shll
and
hlt
leave
inc
es
loop
test
mov
lahf
pushf
mov
fs
movb
mov
test
enter
mov
fcoml
pop
movsl
pop
jmp
es
scas
scas
mov
mov
cli
mov
dec
push
jg
push
xchg
push
sub
inc
fs
push
gs
gs
mov
clc
jns
in
in
addr16
scas
adcb
mov
out
mov
sbb
cmc
or
dec
jae
rcr
inc
pop
xchg
nop
insb
xchg
dec
mov
push
pop
fsubrs
inc
mov
mov
xchg
dec
movsb
rclb
xor
fdivs
cmpsl
ret
fidivrl
adc
adcb
icebp
ss
mov
adc
dec
and
mov
jnp
add
aaa
aad
sub
or
out
fdivp
push
and
hlt
in
ret
pop
pop
cmp
pop
push
add
mov
inc
fs
aad
arpl
fstp
cmp
ror
cmp
sahf
int3
mov
out
std
inc
ret
sbb
shlb
xlat
call
add
add
jbe
imul
dec
fmuls
mov
loop
jnp
xchg
sbb
add
push
ret
jle
adc
mov
adc
or
mov
jp
dec
or
jmp
add
lds
stc
ficoml
stos
add
mov
xor
mov
inc
inc
mov
stos
int
fdiv
repz
clc
and
cmp
and
loop
jle
sbb
mov
mov
xchg
lret
cltd
out
mov
fdivs
faddp
imul
stos
add
gs
ljmp
cs
enter
fcomps
cs
and
sti
cmp
divl
mov
ret
scas
jb
cwtl
inc
into
idivl
inc
pop
mov
mov
sbb
scas
outsb
pop
push
nop
xor
inc
mov
addr16
into
dec
xor
inc
lcall
int
andb
in
bound
xchg
inc
xchg
pop
ret
sub
mov
hlt
cmp
andl
lret
addr16
add
mov
int
stos
lods
out
in
insl
push
loope
and
add
mov
test
popf
pusha
xlat
int
ficoms
sbbb
xchg
lds
aam
inc
fdivp
pop
fdivrs
xor
clc
adc
cmp
inc
lahf
xchg
sub
xor
xchg
cmc
mov
dec
add
xor
mov
mov
loope
sbb
outsb
test
jge
cltd
cmp
mov
jmp
cmc
mov
shrb
mov
and
call
dec
cs
push
fdivrs
jns
mov
inc
cwtl
mov
jecxz
mov
xchg
sub
cmc
call
in
adc
pop
jmp
rcl
cmc
fdivl
dec
imul
mov
cld
imul
and
cmovns
mov
jmp
sub
insl
scas
cmp
ja
lcall
pop
ret
pop
test
test
dec
jb
iret
lret
pop
outsl
int3
jae
cmp
test
add
test
xor
movsl
lea
movsl
sahf
jg
ljmp
xchg
sub
or
adc
sbb
clc
fs
push
xor
rolb
scas
fdivrs
test
adc
lds
and
mov
jmp
mov
jge
pop
jae
rcr
add
dec
jnp
cwtl
es
inc
imul
xchg
das
fstps
fcompl
ljmp
add
cmpsl
loop
dec
sub
cmp
out
mov
outsl
and
mov
addb
xor
pop
aam
pop
jle
xchg
shl
xchg
add
or
lea
lea
mov
in
add
add
add
stc
dec
jge
sbb
loop
jg
repnz
sbb
sbb
aam
aam
pushl
test
inc
push
inc
out
rol
pop
das
imul
ja
sbb
mov
sub
lods
aaa
les
decb
or
filds
mov
leave
in
test
xchg
cs
mov
fcmovnu
scas
stc
out
sub
push
int
aaa
and
sub
cmp
jo
add
jmp
arpl
outsb
outsb
inc
in
ret
rcrl
shll
loopne
int3
mov
mov
insb
fsubs
fsubr
icebp
js
mov
jb
or
fucom
sub
les
mov
sbb
int
shl
pushf
mov
in
notb
inc
push
ficomps
mov
sbb
pop
sub
dec
and
sahf
or
repz
mov
mov
jb
push
pop
or
lret
sbb
cmp
lcall
iret
rol
aad
test
sahf
cmpsl
mov
movsb
pop
mov
jp
leave
and
push
xchg
lea
jae
cld
fists
mov
sbb
test
popf
leave
or
das
jg
sbb
xchg
rolb
out
mov
icebp
fstl
mov
pushf
mov
jne
in
movsl
je
sbb
or
add
ja
in
push
cmp
pop
int
dec
roll
jns
aad
dec
xchg
mov
out
jmp
lret
xchg
rcll
js
xchg
and
insb
bound
adc
adc
sbb
sbb
mov
mov
pop
arpl
dec
shrl
scas
out
shrb
pop
sub
aaa
lea
sub
adc
or
sar
mov
test
adc
xchg
xchg
sub
es
add
dec
sbb
test
sub
lds
add
adc
mov
enter
cmp
pop
ret
sub
sub
xchg
cmp
ret
roll
xor
mov
gs
imul
shll
outsb
cmp
jne
pop
lods
inc
sub
add
adc
xor
mov
xor
cmp
lahf
fwait
mov
cmpsb
push
push
cs
mov
adc
cld
xor
negl
sti
xor
iret
es
dec
mov
add
cmp
dec
out
fdivrs
hlt
ret
jp
pop
out
ja
adc
add
dec
pop
cmp
sbb
lock
jmp
jmp
loopne,pn
inc
pop
and
or
jb
push
loopne
push
and
sub
into
add
sahf
inc
rorb
cmp
xchg
fs
stos
cmp
push
test
adcb
les
mov
xor
jns
dec
mov
ds
jle
dec
mov
push
popa
mov
sbb
aad
jbe
xlat
add
cmp
scas
or
xchg
daa
shrl
in
fdivr
in
xchg
and
mov
mov
dec
lods
mov
out
cmp
mov
outsb
inc
mov
xor
shlb
call
mov
xchg
out
scas
neg
jo
or
shlb
push
loop
idivl
movsb
in
sub
test
test
movsb
int
pop
ljmp
xor
or
jecxz
jmp
cmp
mov
out
jnp
addr16
call
pop
into
push
cltd
pushf
lds
rcrl
ljmp
jae
or
imul
inc
mov
push
mov
xchg
gs
cld
dec
mov
push
popa
rcl
fs
ret
dec
mov
sub
pop
cmpsb
ss
xchg
sbb
scas
div
mov
xchg
lahf
pop
arpl
pop
and
xor
xorb
lods
lock
inc
call
push
aad
xchg
adc
mov
idivb
pusha
cmp
sbb
push
xchg
lds
xchg
mov
lret
push
out
cli
adc
scas
cld
adc
xlat
xchg
and
dec
daa
cmp
mov
outsb
outsl
sarb
lahf
repnz
add
inc
push
cmp
mov
add
in
and
addr16
mov
movsl
inc
xchg
mov
add
jp
jno
cmp
movsl
pop
add
push
lahf
sbb
lret
cmc
imul
xor
lret
jne
jo
xchg
test
in
sbb
mov
outsb
dec
xor
xor
sahf
pop
insl
xor
adc
fildl
sarb
lcall
repz
sbb
push
lcall
mov
lods
and
sbb
jae
mov
jne
cwtl
sub
pop
dec
out
cmp
cmp
stc
and
leave
sbb
inc
and
aas
imul
pop
test
pop
aam
rclb
je
lret
aas
leave
ljmp
xor
cmp
add
xchg
fimull
pop
ljmp
in
sbb
jp
stc
cld
jp
and
xchg
push
pop
cmpsb
pop
add
arpl
push
pop
dec
inc
aas
repnz
push
mov
dec
jg
sahf
mov
adc
jae
adc
out
in
pop
andl
or
call
adc
mov
pop
scas
adc
lahf
lock
jo
aas
daa
data16
sub
scas
loope
fwait
cwtl
cmp
sub
xchg
sarl
das
aam
lret
or
and
out
ffreep
mov
movsb
cmp
test
xor
cmpl
stc
push
sub
lret
add
cld
fadd
mov
shrb
jmp
inc
ja
dec
es
insl
int3
addl
scas
add
mov
ss
movsb
enter
xor
pusha
add
xchg
mov
jecxz
add
cmpsl
push
pop
mov
jbe
jo
adc
pop
dec
sar
add
inc
or
jecxz
and
pusha
inc
sbb
scas
sha1rnds4
mov
jp
xchg
mov
movsb
out
jmp
subl
aas
into
shll
sbb
push
pop
mov
xchg
push
xchg
mov
push
mov
xchg
test
out
ror
rol
mov
push
shlb
fwait
cmp
mov
int3
subl
adc
nop
jb
jg
fadds
adc
loop
insb
in
sub
push
xchg
and
pusha
push
and
fstpt
pop
inc
lea
cltd
dec
aas
ljmp
xor
leave
pop
mov
je
cmc
push
hlt
and
or
xchg
adc
jmp
mov
out
cmp
jle
ss
mov
ficomps
cmc
pop
sbb
leave
clc
pushf
mov
lret
jmp
lret
test
sbb
push
mov
aaa
jo
lea
movsb
mov
mov
mov
push
leave
push
ljmp
popl
mov
push
sub
jmp
mov
in
cmpsb
pop
das
test
xchg
insl
cli
adc
dec
adcb
pop
push
inc
xchg
lret
cwtl
mov
mov
outsb
push
imul
gs
xor
push
mov
js
add
inc
xchg
iret
mov
xchg
add
lock
cwtl
dec
dec
add
fnsave
loope
cmp
cmpsl
xchg
cmp
mov
sbb
les
shrl
iret
fsubrp
hlt
cmp
out
pop
lret
aad
mov
add
cli
test
mov
adc
mov
xor
jmp
jecxz
xchg
icebp
mov
insb
fdivp
shrl
lcall
xchg
jp
dec
cmp
add
jne
fildll
decb
add
adc
mov
mov
dec
add
jne
or
frstor
icebp
sub
insb
xchg
cmp
in
and
insb
incb
fiadds
in
mov
jle
lahf
jecxz
jae
adc
insb
mov
cmp
xchg
inc
and
inc
bswap
push
lret
ja
rorb
cmpsb
mov
leave
mov
repnz
sbb
inc
xor
pop
imul
sbb
xchg
mov
insl
xchg
lods
xchg
add
movsb
push
stos
mov
dec
pop
add
das
int
inc
stc
xchg
xlat
call
dec
pop
js
mov
xchg
xor
jmp
add
movsb
cltd
aam
and
inc
jmp
test
scas
jmp
xchg
jne
xor
cld
outsb
loop
lahf
jns
lods
cwtl
rcl
and
mov
jno
dec
mov
cmp
adc
pushf
insl
pushf
mov
add
lcall
loope
jbe
cmc
sbb
fisttps
pop
out
cmpsl
incl
out
aas
test
or
cmp
data16
mov
lcall
test
xchg
jne
xlat
cmc
sub
push
inc
out
or
ret
or
fxam
repnz
enter
cld
fdiv
sbb
mov
and
inc
sub
xor
mov
les
pop
out
int3
push
sbb
and
push
fwait
pop
mov
movsb
mov
fsubrl
ficoms
mov
cmpsb
cld
or
jns
jo
imul
mov
mov
jo
sub
pop
mov
fimuls
pop
pusha
xor
xchg
and
or
loope
sub
jge
ret
and
sub
shlb
imull
in
fisttpll
repz
mov
fcmovbe
jb
inc
outsl
xchg
cmp
fistpll
call
jns
jp
cmp
movsb
sub
or
mov
inc
jl
push
arpl
jnp
out
data16
ljmp
loop
enter
pop
std
lods
loope
cli
cmp
mov
dec
cs
jnp
push
sbb
ret
ds
pop
mov
mov
ss
pop
arpl
fabs
adc
mov
vmread
bound
inc
mov
incl
aad
sub
mov
inc
or
ljmp
xchg
sbb
adc
jo
push
imul
cli
dec
dec
inc
jb
jo
std
icebp
pop
mov
pop
dec
loope
push
add
test
mov
stc
out
adc
mov
cmpsl
divl
pop
and
loopne
xchg
das
fdivl
push
fisttpl
xchg
cmc
or
sbb
push
cs
xchg
xchg
jge
hlt
xchg
xlat
addr16
mov
xchg
es
mov
xchg
jmp
daa
mov
pushf
js
or
movsl
jnp
xchg
push
fstp
or
jg
jbe
or
jo
sub
fldenv
movl
jl
cld
sbb
mov
adc
les
fwait
jmp
fs
fisubl
int
aad
lds
lcall
stos
imull
rclb
cmp
push
mov
or
dec
dec
push
mov
jae
fbstp
loop
push
push
popa
std
sarl
adcl
insb
mov
daa
or
pop
pop
inc
add
imul
add
lds
inc
dec
pop
mov
arpl
fdivl
cvttps2pi
pop
mov
pop
jecxz
mov
in
push
xchg
jmp
sbb
cmp
notl
cli
les
fs
insl
pop
pop
mov
enter
cmc
out
and
aaa
jne,pt
mov
jnp
and
mov
push
icebp
mov
js
data16
mov
lods
dec
push
out
stos
lods
xchg
outsl
mov
pop
xor
add
outsl
cmp
jmp
inc
fidivrl
sahf
xor
pop
lods
fwait
mov
inc
cs
cmpsb
adc
sti
movsl
inc
dec
roll
and
mov
jbe
shl
shld
mov
js
test
pop
pop
shlb
mov
mov
stos
out
jg
scas
inc
aam
lar
cs
add
test
xchg
outsb
in
xor
mov
mov
xlat
icebp
push
mov
out
lock
mov
cmp
call
out
lret
xchg
inc
fsubrp
lahf
jge
call
push
pusha
lret
jp
fcmove
pop
adc
push
scas
lahf
test
adc
push
shll
lods
loopne
arpl
movsl
mov
sbb
and
pop
test
cli
jnp
dec
add
ljmp
and
jg
daa
std
pop
pop
gs
lcall
add
cmpb
leave
xchg
sub
or
mov
push
fs
pop
popf
inc
stc
inc
cli
sarl
mov
cmpsl
mov
inc
sub
movsb
jae
jl
sbb
jb
sub
into
outsl
mov
mov
or
int3
push
add
je
out
xor
mov
sbb
add
fists
pop
fwait
ret
dec
loope
xchg
or
inc
xor
jecxz
mov
xchg
shlb
lods
and
sub
sub
pop
xlat
pop
dec
shll
xchg
push
and
sub
pop
std
cmc
popa
in
dec
cmpsl
pop
push
jmp
fnstcw
push
cmpsb
data16
pop
or
inc
mov
push
inc
dec
mov
xor
inc
cmc
jmp
jno
stc
push
cmp
mov
jmp
adc
and
xlat
mov
imul
std
jecxz
push
push
jae
or
push
aad
inc
jno
jno
int3
jg
pop
mov
imul
cmpsb
mov
lds
mov
arpl
cmp
xchg
lea
cmp
lcall
negb
adc
test
dec
sub
outsb
daa
pop
add
jb
lahf
es
pop
or
sbb
pop
mov
add
pushf
xlat
sub
popf
or
ja
test
push
cmc
std
rclb
mov
pop
shll
mov
or
addl
sbb
fs
mov
pop
sub
push
ror
cmp
aaa
hlt
xor
xlat
sub
sub
mov
mov
sbb
push
xchg
mov
decl
add
int3
inc
inc
cwtl
or
lock
sub
mov
xchg
ret
mov
ljmp
mov
adc
push
cwtl
sub
pop
inc
js
and
test
xchg
or
inc
ficomps
push
bound
cmp
loopne
cmp
jbe
sub
insl
int
insb
mov
lds
pushf
sub
sub
in
fs
les
arpl
lea
arpl
sti
lods
xchg
mov
in
scas
sub
rorl
sub
and
std
cmc
push
mov
daa
push
cmpsb
movsl
dec
jno
addl
fidivl
int3
mov
inc
aas
adc
lock
jle
arpl
sbb
xchg
add
sarb
cmpsb
mov
imul
pop
xor
push
hlt
cmp
je
pop
inc
popf
imull
xchg
pop
cmc
dec
scas
ja
adc
and
mov
aas
cmp
or
fs
inc
or
xchg
rcr
lcall
xor
dec
jb
xor
add
cmp
ficoml
sbb
mov
sub
icebp
lock
mov
orb
leave
mov
incl
stos
mov
lret
push
pushf
xor
insl
shlb
or
xor
cmp
loope
repnz
push
inc
adc
pop
adc
mov
fimuls
mov
add
push
loop
push
jbe
mov
or
dec
sti
les
push
sbb
cmc
outsl
adc
addb
lahf
ret
pop
push
out
cld
mull
lods
fyl2x
imul
push
test
sti
jns
pop
movsl
adc
mov
loopne
cmp
add
adc
sahf
aam
int
push
dec
mov
ja
lods
inc
fildll
cmp
insb
push
in
vunpcklps
mov
sbb
adc
into
push
inc
pop
cmp
mov
mov
mov
adc
pop
aam
cld
loope
push
fildl
sub
ret
add
pop
inc
push
insb
push
cmc
pop
push
in
pop
push
gs
lcall
call
cmpsl
sbb
gs
fs
mov
gs
or
icebp
mov
sbb
cli
rcrb
gs
popa
inc
stc
xor
inc
mov
out
pop
stos
cmove
add
adc
fnstsw
adc
lret
bound
adc
movsl
cld
mov
xlat
cld
cmp
aas
shlb
cmpl
xchg
fcoms
bound
xchg
xchg
negl
push
xlat
or
sub
jne
cmp
pushf
push
and
and
aaa
sbb
mov
jnp
xchg
out
sub
in
das
sahf
dec
or
push
or
dec
inc
test
out
imul
adc
movsl
xchg
shlb
fmuls
xchg
mov
das
movsb
jnp
mov
cmpsb
jae
rcl
out
sbb
hlt
lods
dec
lret
mov
fimull
aaa
gs
xchg
in
addr16
xor
mov
cs
add
loopne
mov
ret
out
xchg
enter
testl
and
fcmovbe
clc
es
test
pushf
ljmp
push
movsb
lret
push
leave
xchg
and
scas
stos
mov
lcall
scas
sbb
add
inc
mov
pop
xor
jg
dec
dec
mov
jnp
divb
dec
out
or
repz
mov
dec
mov
repz
mov
pop
dec
and
bound
inc
in
xlat
jle
mov
test
scas
xchg
xchg
pushf
hlt
stos
or
mov
aas
xorl
cmp
cmp
je
mov
sbb
mov
jno
xchg
mov
scas
das
mov
loopne
cmp
xchg
sar
std
jno
or
inc
mov
sbb
pop
xchg
sbb
pop
lahf
mov
loopne
xchg
dec
mov
iret
add
xorb
cmp
mov
sbb
xor
test
adc
out
pop
mulb
fisubl
scas
jecxz
shr
pop
rcrl
push
sbb
dec
std
add
pop
loopne
aad
mov
xor
cmpsb
pop
test
icebp
sub
add
and
sub
stc
dec
push
and
addl
mov
mov
add
lahf
push
mov
stos
faddl
movsl
gs
ret
cmp
sub
mov
push
rol
ljmp
jb
ret
aad
faddl
dec
imul
cli
pop
loop
dec
jno
enter
dec
aam
stos
cmp
and
pop
pop
and
push
outsb
movsb
dec
push
in
mov
insl
add
mov
xchg
push
jg
mov
mov
pop
mov
das
lret
insl
movl
mov
push
cs
orb
ficompl
inc
in
or
sbb
ficomps
inc
add
sbb
call
insb
test
xor
mov
cld
and
push
xor
or
pop
stos
cmc
or
div
test
or
xlat
sti
aas
sbb
or
pop
or
movsl
jae
stos
push
cld
test
jns
mov
setns
dec
inc
adc
mov
sub
test
addr16
data16
jnp
jmp
mov
jo
mov
int3
xchg
shrb
adc
scas
dec
jo
dec
popl
outsl
std
push
inc
add
lcall
sbb
outsl
stc
jmp
or
daa
xor
mov
jno
mov
fistl
in
popw
xor
pop
fs
popa
lock
mov
daa
cld
addr16
stc
mov
xchg
mov
add
into
lods
mov
out
iret
and
xchg
pop
cmpsb
mov
inc
shlb
inc
jae
ljmp
jl
mov
into
jecxz
sarl
mov
cmp
push
mov
mov
inc
lret
mov
sbb
pop
cwtl
mov
xlat
test
int3
and
jle
mov
cli
add
outsl
subl
popl
sbb
push
sbb
std
xlat
lcall
leave
dec
push
lret
adc
pop
lahf
in
cs
loope
imul
xchg
daa
dec
sub
mov
dec
add
lret
dec
sub
ja
pop
push
stos
add
dec
shll
out
aas
ret
dec
cmp
cmpsl
lods
popf
scas
dec
inc
setno
or
outsl
pop
and
int3
mov
cmpsb
shrb
pop
mov
push
and
sbb
dec
mov
shlb
xchg
paddw
cwtl
mov
outsb
jnp
shrb
cwtl
sbb
div
nop
mov
clc
and
lcall
lods
jnp
cmpsl
ret
xchg
jmp
mov
mov
dec
rol
fwait
cli
push
push
add
enter
test
lods
and
scas
add
insl
das
mov
mov
in
and
test
or
cld
sbb
xchg
adc
cwtl
sbb
adc
sbb
ficomps
xchg
pushf
in
mov
les
jmp
sub
fnstsw
mul
inc
ss
sbb
and
repnz
fwait
test
add
mov
dec
sahf
or
mov
pop
cmp
pop
nop
push
push
and
inc
adc
dec
ret
pusha
sbb
fs
inc
aas
push
mov
test
push
mov
xor
jae
and
stos
nop
jmp
jns
lods
clc
outsl
sub
push
movsb
xor
je
or
mov
sbb
loopne
roll
insl
add
mov
push
xor
out
insb
enter
fldt
or
mov
and
xchg
sahf
adc
cld
jmp
jne
and
and
stc
or
cli
std
stc
mov
inc
dec
pop
sbb
add
mov
mov
jge
sahf
fdivl
xchg
push
popa
roll
lahf
xor
int3
jp
mov
jecxz
mov
jp
push
push
inc
sarb
xchg
mov
cmp
or
out
fmulp
inc
mov
arpl
mov
pop
lcall
add
xor
xchg
pop
push
lods
sarl
mov
mov
push
insl
jmp
inc
sarl
sbb
sti
js
jns
sbb
mov
push
add
ret
adcl
inc
cltd
out
xchg
enter
mov
stos
inc
cmp
lahf
sbb
ret
or
xorl
xchg
push
jb
lock
sbb
das
sahf
outsb
sub
popa
adc
fsts
jge
cmp
leave
xor
test
popf
xor
sub
xchg
inc
lods
daa
aam
jns
sbb
add
inc
dec
push
ljmp
add
cmp
std
stos
fwait
out
push
jp
out
mov
arpl
push
mov
adc
mov
jg,pn
pop
mov
and
cmc
addl
pop
outsl
mov
int
fidivrs
sbbb
inc
iret
or
icebp
rcr
popa
xchg
or
jbe
jl
lods
mov
or
mov
bound
popa
loope
fs
sbb
cmp
dec
mov
cld
js
incl
fildl
repz
lods
add
cmc
lahf
mov
das
pop
inc
inc
lahf
add
sub
dec
push
push
mov
std
sahf
cmp
sahf
lds
sbb
inc
inc
je
adc
out
or
testl
xor
fwait
popa
lea
repz
xor
push
push
test
dec
adc
call
movsb
dec
mov
ljmp
and
iret
out
cmp
pushf
imull
scas
xor
neg
cli
cmp
bound
negl
inc
mov
xor
xor
push
stos
pop
sbb
mov
fst
or
add
cmpsl
mov
movl
arpl
and
xchg
or
lds
sbb
push
fsubs
push
push
iret
jmp
pop
xchg
loope
jp
scas
insl
subl
add
jb
std
fsubrs
mov
xchg
lods
ljmp
mov
sub
mov
push
add
mov
xor
gs
inc
call
ljmp
cwtl
aas
mov
pop
int
push
popf
jl
fwait
outsl
add
jmp
adc
fs
push
mov
adc
push
jne
jecxz
mov
es
push
mov
imul
lcall
sbb
add
cli
sbb
ss
das
rcrb
cmpsl
sbb
outsl
dec
jmp
mov
insl
xchg
jg
mov
sub
add
and
das
loopne
popa
fmul
in
sub
shll
add
rcrl
push
inc
adc
test
pop
mov
and
sar
add
cwtl
pop
push
or
pop
jns
pop
lea
movsb
pop
push
cmp
lret
sub
xchg
jb
mov
mov
fldl
movsb
dec
insb
fs
or
xor
test
lods
sbb
scas
fs
mov
cmp
loop
and
outsb
nop
ret
inc
push
jno
fwait
int
daa
lds
cld
lock
lock
xchg
cmp
pop
or
mov
test
cmc
sub
test
fwait
xor
pop
xchg
pushl
movsl
loope
cmp
inc
pop
or
mov
sbbb
jae
ret
addr16
adc
jo
les
push
insb
idivl
out
xchg
fldl
cmp
int3
jle
clc
testb
push
test
mov
sub
aaa
fcomps
in
pop
popa
cmc
add
push
push
das
sub
shl
dec
or
sub
xor
and
pop
and
mov
outsb
pop
mov
loope
jge
adc
jmp
mov
mov
pop
fucom
sbb
pop
dec
call
add
jg
sub
jno
jns
dec
sub
mov
cmp
mov
xchg
cmc
aas
inc
sub
push
mov
icebp
daa
lock
push
pop
adc
xlat
or
jno
mov
mov
mov
mov
ljmp
mov
or
sarb
sbb
jb
imul
inc
xor
test
lret
arpl
mov
hlt
sub
hlt
insb
cmp
orl
cld
xor
push
xor
add
inc
loope
or
xchg
fs
pop
inc
add
cmc
mov
pop
cmpsl
dec
xchg
les
daa
enter
ss
setno
fbstp
mov
ja
sbb
shrl
xchg
cmp
cld
xchg
xchg
int3
push
ljmp
js
xorl
cmp
xorl
xor
cmp
mov
dec
mov
test
dec
cltd
push
mov
and
jbe
popf
xor
sub
das
jmp
addr16
imul
mull
cmp
push
repnz
or
xor
icebp
popa
xchg
stos
xchg
add
in
dec
xor
mov
test
mov
jb
jle
pop
fcomps
push
push
imul
adc
sar
fdivs
cld
push
cmc
jno
xor
push
xlat
push
xchg
push
jb
mov
inc
sahf
mov
nop
mov
lret
orb
push
adc
mov
aas
shrl
scas
icebp
dec
xchg
pop
mov
mov
jnp
jge
in
test
cmpsl
sarl
outsl
test
pop
lret
scas
mov
rcll
shl
or
jle
js
mov
cli
cmp
lret
push
add
xor
scas
add
data16
mov
push
cli
int
add
es
loop
or
mov
sbb
aad
test
or
push
fnstenv
pop
cltd
out
dec
arpl
out
lret
je
or
mov
das
mov
outsl
nopl
lcall
in
dec
rolb
dec
addl
imul
pop
imulb
jecxz
inc
in
cmp
adc
rol
aas
icebp
xor
in
loope
cwtl
mov
pop
pop
add
jbe
push
in
pop
ss
mov
test
dec
push
cmp
mov
stc
fimuls
arpl
and
imul
push
jb
xchg
jl
or
cli
lahf
cmp
add
push
dec
shlb
roll
jl
xchg
into
pop
es
jle
pop
leave
outsl
cmp
fsubrs
addr16
dec
mov
pusha
sub
or
xchg
daa
lods
pop
pop
cltd
adc
add
nop
loopne
fcmove
in
cmc
lock
push
push
xor
out
insb
hlt
jecxz
push
outsb
jo
testl
mov
es
push
inc
adc
cmpsl
add
dec
jg
jb
mov
or
xchg
fnstenv
iret
mov
enter
out
arpl
fsubrs
adc
ret
sbb
mov
add
in
in
inc
xor
dec
loopne
in
mov
inc
mov
xor
insl
orl
push
cli
push
in
mov
shrb
mov
fucomip
mov
in
or
push
or
xor
jnp
scas
cwtl
insb
adc
sub
ljmp
push
lahf
pop
xchg
and
imulb
lds
pop
and
pop
repnz
rcll
test
lods
dec
test
into
add
orl
lods
pushf
mov
mov
imul
adc
inc
std
adc
jo
add
sub
dec
add
in
or
in
iret
aam
cmp
push
dec
dec
movsl
in
outsl
es
mov
idivl
xchg
icebp
push
dec
pop
pop
iret
cli
cld
push
mov
jo
fsts
test
sbb
push
mov
jp
popa
and
adc
popf
xlat
test
rcll
cmc
sbb
cmc
cmp
insl
xor
pop
lods
add
xchg
std
dec
mov
jne
add
and
push
scas
daa
jns
insl
xchg
repz
cld
jge
xchg
hlt
mov
inc
popa
in
lods
test
sbb
es
inc
inc
stos
cmp
adc
les
out
pop
mov
nop
test
and
iret
xorb
pop
and
mov
imul
dec
sub
adc
leave
pushf
or
les
xchg
or
add
gs
cld
lret
je
hlt
dec
mov
add
arpl
push
sti
adc
roll
jmp
add
std
scas
mov
repz
dec
enter
jge
movsb
xor
ss
lahf
lea
fisubl
mov
psraw
mulb
mov
mov
popf
jl
push
xchg
mov
gs
lods
loopne
les
jo
adc
cld
mov
shlb
lods
cwtl
jle
pop
sub
loopne
scas
xor
add
sub
pop
arpl
pop
scas
sub
popa
xchg
shrb
mov
pop
push
loop
push
daa
push
push
cld
imull
xor
dec
xchg
clc
lods
test
xor
pop
loope
jge
cmp
dec
push
lahf
cmp
insl
adcl
or
hlt
mov
clc
mov
pop
cmp
xchg
mov
sub
out
inc
jmp
or
mov
jae
mov
xor
cmp
mov
out
jbe
jo
inc
mov
mov
adc
xorl
pop
mov
out
stos
out
or
out
arpl
sbb
xor
xchg
xchg
jge
mov
jnp
outsb
nop
xchg
push
mov
andb
lds
js
mov
and
mov
sbb
daa
sub
push
rol
mov
xchg
pop
rorb
shlb
mov
inc
bound
aaa
cli
test
inc
movsl
fwait
push
push
fs
xchg
push
jbe
mov
mov
dec
mov
xchg
xchg
mov
xchg
and
divb
cwtl
cltd
mov
loopne
lret
lret
add
adc
xlat
cli
jo
pop
mov
loope
ljmp
sti
test
popf
and
and
fcoms
mov
inc
pop
repz
test
gs
push
add
lock
lods
fwait
pop
sbb
loope
jns
jae
mov
jmp
imul
mov
dec
jne
mov
xchg
jge
fwait
push
int
test
aad
cli
sub
xchg
push
idiv
in
pop
pop
mov
std
cs
clc
imul
imul
pop
nop
add
jne
aas
out
stos
addr16
test
mov
in
jg
outsb
aad
sub
xchg
push
aas
lods
mov
xchg
pop
xchg
test
sahf
xchg
sub
sub
mov
repnz
fdivrl
jmp
xor
jge
xchg
add
rcll
jl
es
xorb
xor
dec
fucom
mov
cmp
jns
push
aas
jl
test
ret
and
je
sub
adc
add
mov
aam
daa
clc
fiaddl
push
repz
mov
psrlq
add
add
js
jb
fisttps
sub
lcall
popa
into
in
les
sub
push
jle
test
sti
xchg
mov
pop
mov
pop
xor
sub
call
xchg
lds
aam
sbb
lock
dec
fs
je
lea
lock
stc
in
das
pop
lods
mov
xor
or
std
xorl
push
cs
mov
addr16
xchg
js
mov
xchg
jb
ss
adc
movsl
fnstsw
ja
cmpsb
dec
shr
xor
cmp
cmp
dec
clc
mov
into
ret
inc
test
inc
test
xchg
xor
add
popf
in
or
adc
sarl
out
shl
jmp
pop
int3
mov
add
jmp
sbb
popf
inc
lahf
sti
sub
cltd
subl
pop
lods
pushf
sub
push
inc
shll
les
pop
fistpl
and
ret
cmp
xor
lds
mov
popf
xor
es
sbbl
shll
or
imul
flds
dec
pop
loope
sbb
clc
loop
cmp
pop
xchg
xchg
ficoml
imul
loopne
and
addr16
sbb
mov
imul
imul
inc
fidivs
add
shrb
je
shl
call
popa
sub
fwait
mov
test
push
pop
imul
xor
mov
push
addr16
push
sub
out
popf
sub
aas
jp
in
push
hlt
xlat
push
into
pop
popa
jp
aas
jns
dec
pop
xor
ss
push
outsl
push
ss
sub
cmp
cmpsb
push
call
jnp
ds
mov
cmpsb
cmp
pusha
cmc
xchg
or
push
inc
loopne
subl
mov
mov
add
ja
in
imul
addr16
pop
dec
dec
cli
mul
dec
jle
aas
lahf
cmc
lahf
push
mov
inc
dec
inc
mov
cmovge
mull
mov
ljmp
leave
push
scas
mov
movsl
add
jecxz
fstps
xchg
test
add
or
out
xchg
sub
pop
add
push
adc
cwtl
pop
pop
sti
mov
jge
addr16
mov
or
lcall
ret
addl
add
cli
ret
pop
and
stos
clc
xor
aad
and
nop
andb
test
sub
ljmp
fwait
jo
call
pusha
cs
fsubs
gs
rcrb
add
inc
ds
jp
lahf
popf
out
dec
roll
mov
jo
gs
in
sub
leave
and
call
cs
pop
ret
push
pop
xchg
ror
pushf
mov
aas
cmc
popf
arpl
mov
fdivrl
lret
icebp
cmc
cmpsb
popa
loop
and
jg
lds
fstps
orl
push
adc
test
test
inc
pop
out
jecxz
cmpsl
inc
leave
lret
push
adc
xchg
or
pop
es
sbb
push
mov
push
outsl
adc
cmp
xchg
jg
mov
or
xchg
adc
dec
test
jecxz
mov
sub
pop
mov
out
fnstenv
bound
dec
pop
push
test
cld
sub
ret
aas
cmp
add
push
cmp
cmp
sarl
sub
roll
xor
and
adc
aas
test
cmp
push
inc
out
sub
sub
clc
jmp
mov
adc
je
mov
xor
das
jmp
lods
out
pop
xor
pop
push
mov
test
and
add
sub
lea
push
add
ret
lahf
cld
cmp
sbbb
add
fistl
mov
jno
in
jo
call
out
scas
and
mov
mov
dec
jno
in
lret
inc
sbb
jns
fcompl
add
subl
xchg
sbb
in
iret
cmp
fbld
stos
nop
fwait
add
push
mov
sbb
jne
jp
jo
int
inc
imul
mov
lcall
fucomp
jae
inc
xchg
xor
mov
lods
mov
pop
test
pop
push
pusha
ss
int
lea
mov
jge
pop
adcl
or
jecxz
xchg
push
and
cmp
jne
mov
sbb
or
rclb
lret
ja
clc
lea
inc
and
xor
xchg
push
xchg
arpl
or
xchg
mov
xor
and
jp
mov
inc
jl
cmp
and
jb
sub
lds
push
xor
jecxz
push
ja
dec
leave
popf
scas
fs
inc
inc
rcrl
enter
inc
push
jne
inc
inc
out
cltd
pusha
mov
adc
adc
loopne
fiaddl
jle
xchg
ljmp
andnps
ret
mov
dec
cmp
call
ss
pop
mov
inc
inc
les
sbb
mov
push
add
push
jg
inc
push
add
dec
negl
rorb
xor
pop
jno
mov
xor
push
lcall
adc
out
adc
fs
inc
shlb
je
repnz
and
in
je
push
mov
or
sbb
pop
pop
aam
add
mov
jge
dec
lods
out
mov
call
inc
add
mov
adc
cmp
stc
ds
dec
and
xor
cld
or
imul
add
cld
or
idiv
push
ficoms
cmc
int3
mov
push
or
xor
cmpsb
ret
pop
fbld
in
daa
push
outsb
push
inc
or
out
xchg
scas
xchg
push
enter
mov
pop
sbb
js
jge
adc
dec
jb
das
movsb
push
dec
cs
int3
call
icebp
clc
into
inc
stc
and
mov
in
shrb
adc
push
pop
je
stc
jp
ja
push
aaa
cmp
lods
jno
sub
mov
add
xor
lock
or
push
jmp
xorl
dec
cmpsl
aam
outsb
add
pushf
iret
js
cmc
pop
add
rolb
into
subb
mov
sbbb
rclb
inc
mov
cmp
push
push
xchg
inc
in
mov
push
xchg
movsl
repnz
mov
and
push
xchg
push
adc
ljmp
xchg
pop
push
pop
hlt
mov
adc
adc
in
mov
ret
movl
popf
loope
pop
out
xchg
pop
mov
imul
aaa
outsl
add
aas
js
mov
mov
jl
out
addl
rorl
nop
xchg
jb
mov
adcl
dec
rol
ret
adc
out
mov
push
jbe
pop
or
dec
je
inc
mov
jb
movsb
adc
push
pop
mov
fistpl
pop
jl
js
dec
mov
mov
js
and
jne
in
fcompl
jae
and
flds
incl
repz
call
push
inc
sti
aas
xor
loop
roll
adc
loope
adc
jo
pop
ds
leave
mov
push
xor
mov
mov
or
jmp
idivb
lea
test
push
faddl
fiadds
fnstsw
nop
xorl
fwait
and
data16
mov
out
imul
roll
outsb
xchg
pop
bound
jge
push
and
clc
mov
jge
scas
gs
xor
xchg
sub
sub
jp
xorl
mov
and
std
divl
push
jno
xchg
inc
arpl
in
ficomps
das
hlt
and
sbb
push
insl
mov
cltd
pop
adc
lcall
push
movb
rorl
cmp
jae
fistl
dec
push
mov
jmp
outsl
dec
push
mov
ficoms
xchg
jecxz
out
push
pop
or
xchg
sti
xchg
push
sbb
scas
dec
push
lods
inc
cmc
cmc
inc
call
dec
mov
in
lahf
jne
pusha
push
out
sbb
or
dec
cmp
lahf
add
or
xchg
jp
jge
inc
pop
sub
mov
loop
pusha
push
jp
xor
or
subb
cmp
sub
sub
xor
stos
es
xor
push
adc
icebp
and
call
pop
xor
andb
iret
sti
push
movsb
sbb
mov
add
pop
shl
jno
xlat
inc
int
sarl
xchg
fdivp
fisubrs
lods
stc
pop
sbb
es
mov
mov
xchg
fnsave
lds
xchg
stc
dec
jmp
xchg
out
xchg
mov
fdivl
sub
mov
sbb
jp
lods
outsb
test
fcomps
dec
call
xchg
das
jmp
call
dec
popf
call
mov
lahf
mov
fidivs
jle
sbb
mov
cmp
rol
dec
xor
pop
mov
jb
mov
js
lahf
movzbl
sbb
shrl
fimuls
add
adc
popa
push
add
sbb
xchg
sub
inc
jns
adc
jg
mov
mov
mov
lds
jno
in
lea
dec
dec
shlb
mov
inc
adc
pop
enter
fwait
stc
outsl
mov
and
mov
adc
xchg
add
jnp
pushf
sub
xchg
push
mov
or
divb
fsubs
lea
addb
pop
mov
cmp
shll
hlt
mov
adc
xor
xor
push
into
ret
mov
sub
adc
xor
mov
mov
out
mov
sbb
je
dec
lcall
sub
mov
movsl
cmc
test
mov
lock
addr16
push
lcall
test
jecxz
mov
add
cmpsl
jle
sbb
jnp
out
mov
xchg
jecxz
cmp
xchg
mov
ret
call
rcrb
or
addr16
mov
fistl
pop
cmp
sti
ljmp
pop
test
data16
adc
add
movsl
adc
pop
pushl
imul
inc
or
fwait
add
scas
mov
jmp
shll
icebp
push
pop
pop
out
fcmovne
int
pusha
inc
js
jb
push
dec
mov
jne
fsubp
mov
mov
idiv
push
aam
mov
jl
stc
mov
insl
xor
xlat
pop
outsb
cmp
addr16
jmp
pop
aaa
sbb
and
push
pop
gs
das
movsb
mov
rcrb
xor
xor
push
aas
cs
int3
int
ret
mov
into
rcrb
iret
push
push
cmpsb
jl
add
pushf
shlb
xor
lret
mov
out
adc
jne
lcall
cwtl
jle
nop
rorb
aam
mov
adc
mov
arpl
in
cltd
push
and
pop
mov
popf
aam
push
sbb
clc
and
ret
mul
jle
jl
mov
shlb
cmpsb
xor
pop
xchg
xchg
mov
cmpsb
push
xchg
mov
push
aam
and
pusha
push
out
inc
or
mov
mov
pop
add
mov
cmpsl
pushf
orb
and
xchg
push
popf
out
push
es
cmp
cmpsb
inc
repz
push
sahf
mov
cmpsl
jl
xchg
inc
push
test
inc
mov
repz
icebp
mov
in
inc
adc
push
sbb
fisubrl
cmp
and
pop
pusha
flds
mov
jle
fsub
movsl
add
sub
dec
push
ficompl
cmc
mov
cmpsb
jae
into
cmp
jge
shlb
loopne
pop
cs
mov
add
test
xchg
cmpl
cmp
pop
ret
in
sbb
push
inc
idiv
inc
dec
xor
add
pop
push
and
mov
ss
sub
pop
pop
inc
jmp
jnp
clc
sub
xor
daa
repnz
mov
cltd
xor
fmull
idivl
mov
ljmp
popf
cmpsl
pusha
imul
aas
jae
mov
int
sub
sub
mov
pop
lods
dec
xchg
fnsave
or
sbb
sub
push
push
push
push
dec
sbb
stos
dec
mov
in
sti
imul
pop
sbb
cli
stc
movsb
mov
cmp
cmp
push
sti
mov
shll
mov
rcr
jbe
or
imul
xorl
in
mov
leave
and
scas
mov
sbb
pop
out
cmc
pop
sbb
sub
fcmovnbe
pop
arpl
xor
mov
stos
jge
lock
jb
decl
cmp
cld
pop
xchg
pop
mov
aas
pop
inc
loop
loop
out
mov
lret
int3
testb
xor
sub
inc
mov
pop
inc
out
outsl
pop
mov
rcr
sub
cli
jnp
or
mov
lock
pop
add
or
pop
fidivl
in
cmp
or
xor
sbb
mov
clc
pop
out
adc
in
sub
jl
mov
insl
test
mov
and
xlat
adc
lea
xchg
xor
add
int3
outsl
notl
popa
sub
ret
mov
repnz
cmp
fimuls
inc
push
int
cmp
mov
pop
jmp
add
jmp
xchg
xchg
lds
daa
xchg
mov
or
lods
xlat
mov
mov
imul
dec
aaa
dec
into
mov
xchg
cmpsl
rol
dec
jb
xlat
sbb
dec
popa
mov
fldcw
jno
insl
fimull
ret
test
dec
mov
inc
js
negb
lahf
and
cli
xor
xlat
cmpsl
xchg
or
xchg
dec
adc
aam
xchg
mov
mov
and
xlat
pop
dec
mov
mov
pusha
cmp
sti
test
popa
and
mov
pop
and
in
cld
bnd
push
testl
push
es
push
push
cld
mov
mov
jnp
push
jb
cmpsl
std
or
fstps
popf
das
xchg
mov
lret
adc
push
dec
negl
stos
dec
and
sbb
in
push
or
mov
and
dec
pop
inc
pop
movsl
int3
popf
add
sbb
adc
inc
and
jmp
sbb
mov
aam
cmp
je
push
pop
cltd
data16
inc
mov
test
lds
adc
scas
ficoms
addl
lods
lcall
xacquire
dec
cltd
sbb
lock
inc
repnz
insb
dec
fs
into
or
fstps
sub
addl
aam
sbb
add
mov
or
cmp
pop
xor
stos
std
or
push
mov
fisubrl
jge
mov
mov
mov
mov
push
test
loop
dec
shll
es
int3
jae
bound
mov
in
addl
popa
testb
fnclex
add
icebp
mov
fldenv
outsb
aad
test
loopne
je
scas
inc
pop
or
enter
lds
sbb
push
mov
or
adc
add
test
add
add
rcll
pop
sub
mov
js
sti
mov
inc
xchg
sbb
es
jmp
stos
fdivp
scas
fsubrl
mov
daa
sbb
subb
stos
data16
sbb
xchg
jne
mov
dec
and
inc
xchg
fdivrl
sub
adc
mov
insb
sub
into
sub
rcll
dec
stos
jecxz
fldt
outsb
pushf
add
mov
push
cmp
add
and
out
fcoms
rcl
adcl
push
mov
push
jne
add
call
mov
push
movsl
test
inc
adc
xchg
repnz
pop
jae
repnz
inc
mov
in
mov
or
push
in
call
xchg
adc
out
mov
fistl
cmp
pop
mov
pop
lds
xorl
mov
clc
jno
xchg
push
divb
push
inc
dec
push
decb
pop
in
jg
shr
out
jge
punpckhwd
lock
movsl
xchg
popa
jge
test
lcall
pop
add
out
inc
fsub
aam
pop
int3
and
jb
jbe
mov
xor
mov
mov
out
dec
scas
fs
stc
pop
fdivrl
jmp
stc
sub
jp
lods
lret
push
fnstenv
aam
inc
dec
pop
sbb
jns
lock
jg
adc
dec
push
cwtl
dec
aas
xorb
fldt
btcl
adc
xchg
add
andl
sbb
mov
jmp
cmp
and
inc
jb
imul
out
cmpsl
bound
jle
sbbb
int3
add
pop
fwait
push
dec
out
mov
enter
push
xchg
add
xchg
xor
lahf
mov
mov
idivl
sub
xor
push
mov
push
sbb
test
mov
movsl
cmp
and
rorb
movsl
fs
out
outsb
pop
popf
cmp
bound
arpl
pop
in
shl
inc
cmp
enter
jmp
arpl
dec
fsub
sbb
and
imul
cltd
outsl
jbe
ret
in
es
dec
hlt
jge
mov
and
mov
push
ficoml
dec
sub
adc
xchg
mulb
ret
inc
mov
adc
lcall
fistps
xor
lods
cmp
lods
mov
sbb
mov
push
sub
fnstenv
hlt
pavgw
push
imul
inc
xchg
xchg
repnz
dec
outsl
push
pop
fprem
ljmp
jo
mov
cmp
xchg
clc
jae
xchg
call
cltd
or
push
jle
mov
sbb
push
inc
add
add
addl
sub
jnp
inc
in
xchg
jg
dec
inc
jne
ret
push
sub
out
das
or
loope
into
cmp
push
or
mov
jge
mov
call
mov
fsubrp
and
rcrb
popf
shll
mov
hlt
nop
pop
mov
fdivr
ficompl
shll
test
xchg
mov
mov
mov
cmpsb
sub
add
lahf
imul
loopne
pop
inc
sbb
xor
jo
cmovbe
mov
leave
and
leave
clc
pop
and
out
adcb
jno
push
lret
mov
mov
sub
dec
cmpsl
cld
cmp
gs
test
sti
sub
mov
in
sbb
inc
cltd
shrl
mov
jb
cmc
int
xchg
aaa
or
fldt
fisubl
mov
dec
mov
or
rcrb
xchg
jno
test
or
sbb
dec
imul
mov
addl
lea
andb
cmp
jmp
sahf
jo
in
stc
insl
cli
mov
add
loope
pushf
clc
xchg
jmp
das
push
inc
push
rcrl
sbb
repz
cmp
xor
pop
or
or
stos
inc
cmp
jne
adc
imul
jg
ja
cmpsl
inc
outsb
dec
jns
mov
mov
xor
adc
lret
cmpsb
std
inc
rcll
or
add
pop
jle
pop
adc
xchg
sub
fldl2t
or
aaa
xchg
in
out
in
push
pop
lea
pushl
sbb
lret
mov
jecxz
bound
or
sbb
mov
xor
call
lods
int3
and
or
cli
call
xor
fidivrl
mov
pop
xor
cmpsb
test
jnp
popa
cmp
ss
test
loop
cmpsb
pop
int
xor
add
sub
adc
mov
and
xchg
mov
mov
mov
inc
jl
in
mov
xor
out
xorb
adc
inc
inc
mov
je
adc
pop
fcomp
cld
inc
out
imul
and
ljmp
jnp
lcall
shl
movsb
jg
aaa
mov
popf
popl
data16
repz
into
push
mov
cs
int3
jl
in
cs
inc
shll
in
leave
jne
fisubs
scas
fadds
bound
pushf
test
pop
decl
adc
xchg
and
gs
push
mov
sub
or
nop
hlt
sub
aaa
adc
leave
cmp
outsl
imul
fwait
or
push
mov
adc
mov
out
adc
hlt
push
inc
shlb
nop
enter
mov
scas
pop
mov
sub
pusha
cmp
mov
mov
loopne
dec
mov
pop
dec
cmp
clc
jbe
and
movsb
xor
stc
sub
cmovs
mov
decb
push
jno
and
aad
loopne
stos
or
mov
mov
push
repz
fidivl
daa
lahf
pusha
nop
mov
mov
jae
outsl
jbe
jne
jmp
xchg
imul
cmc
jae
mov
test
mov
dec
cltd
dec
push
jle
mov
fldt
or
push
dec
packuswb
mov
pop
adc
jg
mov
mov
dec
in
cmp
sbb
fdivr
xorl
xlat
orb
pusha
or
js
fcomip
stc
pop
or
dec
mov
mov
cmp
inc
das
shr
ds
loope
push
push
rorl
shll
test
cld
mov
mov
rcrb
fadd
test
stos
gs
ret
jmp
or
xor
inc
mov
cmp
rcrb
pushf
andb
xor
mov
adc
popa
mov
add
inc
push
out
xchg
inc
je
mov
scas
xchg
push
test
enter
out
cmpsl
aaa
out
mov
in
cmpsb
outsb
mov
mov
rcrl
push
dec
je
and
ror
push
sarb
inc
dec
dec
mov
sub
xchg
rcrb
mov
fistpl
je
xor
arpl
sub
testb
mov
fadds
fldcw
mov
sahf
cmp
mov
imul
rcr
or
popa
pop
mov
adc
adc
mov
push
insl
mov
out
jl
inc
jle
pop
iret
mov
outsb
cmpsb
frstor
lret
loop
daa
lock
dec
inc
mov
mov
pop
jg
mov
lods
xor
mov
fsubrs
cmp
fistpl
cld
fucomp
sub
mov
and
in
sahf
or
dec
xchg
shlb
push
cmp
data16
xchg
mov
movb
call
loope
in
sub
pop
and
jnp
mov
sti
push
xor
mov
call
shll
or
xchg
movsl
sbb
imul
insb
bound
es
push
sarb
or
shll
add
lock
mov
jecxz
stc
cmp
icebp
dec
pop
arpl
jns
fildl
mov
imul
adc
sbb
mov
pop
push
out
stos
xchg
or
aas
push
ljmp
dec
xor
push
add
rcrb
sub
xor
mov
push
pushw
js
iret
jl
xchg
cs
cwtl
loopne
cwtl
jne
test
dec
xlat
and
psrlq
sub
lock
lods
insl
and
xchg
scas
jle
cmp
movsb
inc
movzbl
inc
mov
std
notb
inc
and
test
loopne
sti
addl
hlt
popa
cmp
pop
int3
andb
insb
cmp
xor
stc
pop
cld
shlb
push
push
jne
cmp
and
or
xor
sbb
xor
das
add
jae
in
push
adc
in
jp
push
sub
frstor
mov
dec
imul
lods
add
and
negb
mov
inc
push
mov
into
pop
iret
into
cmp
test
lock
pop
bound
iret
push
xor
sbb
out
xor
lods
pop
outsb
aad
xchg
mov
or
push
sbb
je
call
sbbb
pop
and
xor
rcrl
sub
daa
mov
mov
xlat
jae
mov
rcrb
xor
sbb
lods
mov
imul
fmuls
pop
add
insb
xchg
das
mov
jae
push
lea
xor
movsl
lods
cmp
insl
xor
mov
stc
cmpsb
cld
dec
push
jno
loop
das
jecxz
insl
pop
sbb
popa
sub
loop
push
pop
mov
repz
push
stos
xchg
sub
and
jns
xor
lods
les
mov
clc
sbb
jmp
sbb
ds
pop
jle
sahf
mov
dec
out
cmp
sbb
popa
int
bound
call
pusha
imul
in
push
out
loope
aam
subb
sub
xlat
lods
push
aas
scas
dec
push
push
pop
stos
jae
fsub
dec
pop
je
mov
out
mov
dec
sbb
xor
in
adc
cli
bound
stc
pop
ret
jb
cmp
outsl
xchg
add
std
sub
adc
xchg
mov
call
test
jge
stc
xor
aad
scas
bound
mov
or
pop
test
lcall
push
xor
mov
shl
enter
push
outsb
rcl
xchg
bound
dec
push
push
out
mov
ss
adc
je
push
pop
ss
cmpsb
xchg
cmpl
sti
cmp
cld
aas
scas
pop
pop
push
xchg
dec
push
jmp
xchg
dec
add
mov
adcl
pop
out
adc
rolb
xor
jno
sub
stos
mov
sub
mov
dec
movl
fistl
addl
or
sti
sbb
hlt
popa
mov
adc
cmp
push
call
mov
loop
bound
lahf
adc
sub
cmp
xchg
icebp
mov
and
mov
stos
cli
mov
mov
add
add
add
cwtl
inc
sbb
scas
imul
cmpsb
dec
pop
adc
mov
arpl
je
je
ss
dec
es
push
jg
sub
mov
enter
adc
push
fisttpl
jno
addr16
jne
mov
mov
sbb
cltd
and
fistpll
add
dec
shll
out
jb
mov
inc
adc
shl
dec
into
sub
shrl
xchg
aam
movsl
xchg
lret
cmovbe
cltd
pop
mov
in
in
sub
icebp
sbb
mov
mov
xor
inc
dec
inc
pop
adc
loopne
push
mov
aad
lcall
movsl
xchg
ljmp
mov
lret
and
jo
ds
test
adc
cmp
sarl
mov
xchg
xlat
stos
jge
cmpl
notb
push
rorl
out
shll
dec
dec
fbld
mov
add
outsl
and
mov
lods
mov
test
ja
scas
in
mov
mov
cmpsl
add
mov
jge
dec
dec
popf
pop
scas
mov
mov
jle
xor
sahf
pop
and
mov
xchg
inc
inc
cmp
out
cmp
sub
dec
pop
js
orl
or
and
jecxz
and
xchg
adc
cmp
xor
loope
movsl
out
sti
mov
insb
dec
ret
movsl
adc
xchg
mov
sub
xlat
mov
mov
xchg
sub
lret
scas
cmp
rorb
push
shr
test
dec
and
in
ss
or
shr
leave
mov
lcall
test
sbb
mov
xor
jmp
scas
or
lds
leave
test
xor
scas
jl
es
mov
fdivrl
jp
cmp
cli
lahf
mov
inc
mov
cmpl
iret
out
or
cmp
mov
or
fmull
push
sbb
div
mov
negb
mov
jne
sti
test
sub
pop
xor
jno
sbb
lods
cmpb
add
cld
mov
stos
dec
adc
imul
ja
and
nop
stos
shll
int3
mov
cmpsl
nop
jmp
rclb
cmp
filds
rol
mov
gs
pop
out
add
loop
loope
push
push
fwait
jo
push
cs
fwait
push
sahf
popa
xchg
out
in
das
in
add
sub
out
imul
inc
inc
push
jb
ss
sbb
or
adc
xor
mov
add
cmp
aam
xchg
loop
mov
orl
pop
aas
cmp
mov
mov
test
in
add
pop
ds
mov
dec
inc
xor
dec
and
jno
mov
mov
push
rcrl
pop
push
stos
mov
das
int
ja
push
mov
lret
mov
cwtl
jp
inc
cmp
and
pushf
lds
inc
fmuls
mov
jns
vphaddubd
fsubr
mov
push
into
nop
scas
shrl
je
jp
test
mov
movsb
adc
ljmp
pop
sbb
adc
and
and
or
jnp
mov
or
popf
and
mov
and
pop
mov
add
aam
les
add
int
enter
push
out
jae
bound
std
xor
xchg
rol
ja
jns
xor
sub
sub
movsl
mov
mov
pushf
lods
cmp
mov
or
fidivl
jae
mov
loopne
or
jb
mov
xchg
xor
xor
adc
and
sub
data16
inc
pop
pop
mov
inc
pop
dec
mov
push
adc
push
xor
mov
xchg
test
sub
xchg
test
push
cs
rcr
jmp
pop
sbb
ror
jno
imul
cld
std
or
pop
sbb
pop
push
sbb
lods
lds
jge
cwtl
mov
sub
inc
inc
jo
shll
jbe
aaa
jecxz
mov
push
es
in
inc
jecxz
xor
mov
push
in
add
fdiv
enter
mov
pop
popf
jae
jnp
fs
jns
xchg
aaa
pop
rol
rolb
call
out
fwait
xchg
or
test
addl
adc
ret
mov
jl
adc
addb
push
push
inc
push
push
xchg
loop
sahf
call
push
imul
insb
ret
gs
jne
sti
jo
into
push
mov
xchg
popf
iret
add
add
sub
inc
and
outsl
test
loope
pop
jge
loopne
in
das
xor
mov
cmpsl
pop
cltd
in
push
mov
cmp
xchg
int
add
cmc
push
dec
push
pop
jl
out
xchg
dec
jecxz
aam
mov
xor
cmp
out
pop
andb
nop
add
test
xor
xchg
pop
jno
xchg
mov
xchg
sub
pop
jae
fs
push
test
push
xor
sti
cmpb
cmpsl
xor
dec
fidivrl
adc
cwtl
dec
outsl
nop
xchg
push
push
popa
ds
das
mov
leave
call
push
mov
sub
scas
push
push
pop
mov
das
ficoms
shl
or
mov
int
into
xor
mov
pop
insl
and
andl
imul
outsl
xchg
lods
lcall
jbe
sbb
cmp
sbb
or
cli
popl
cmp
lods
mov
push
jb
sarb
sbb
not
out
test
mov
push
xor
lret
xor
adc
mov
jecxz
call
cmc
xchg
mov
sti
xor
sub
mov
add
in
fstpl
sarl
das
cmp
mov
sbb
jle
push
cltd
cmp
cmp
sub
sub
mov
inc
call
data16
jnp
les
inc
add
test
and
and
xlat
mov
inc
mov
ret
mov
lcall
mov
push
and
jmp
mov
stc
js
loop
xor
xchg
mov
pushf
cmp
cwtl
adc
jecxz
xchg
mov
inc
bound
cltd
in
cmc
jmp
jmp
xor
inc
mov
mov
sbb
dec
push
xor
jo
pop
leave
xchg
fidivrl
fbstp
fists
cmp
movsl
push
fisubs
lds
and
sub
fidivs
sbb
bound
pop
pop
sub
in
mov
idivl
and
xor
loope
repnz
out
daa
js
call
shrl
in
mov
sub
mov
or
je
lret
cmp
xchg
cmpsb
cs
test
jo
stc
movsb
adc
xchg
test
stos
inc
xchg
add
or
adc
or
or
mov
test
pop
sbb
test
push
movsl
fcmovnbe
mov
sbb
test
aaa
iret
stc
jmp
inc
js
or
orb
cld
adcl
stos
jmp
sbb
aad
rcrl
arpl
fldt
add
add
sti
xchg
test
sub
ljmp
fs
xchg
jmp
or
push
jo
sbb
in
icebp
dec
pop
xchg
inc
and
scas
lahf
mov
ja
push
push
inc
inc
lcall
roll
add
mov
pop
loopne
in
inc
push
and
pop
mov
or
outsl
repnz
mov
adc
sub
sbb
js
sbb
cmp
xor
pop
fstl
xchg
inc
imull
sbbb
inc
sbbl
mov
mov
adc
ds
stc
shl
pop
mov
shll
xchg
sub
out
cmp
sbbb
dec
dec
int3
fisubs
and
cmp
ss
xchg
popf
push
inc
fidivrs
jmp
dec
clc
xor
mov
mov
and
pop
ljmp
test
inc
jno
mov
add
dec
or
or
aaa
lods
lock
push
sbb
xchg
dec
jns
jmp
insl
inc
xchg
pop
dec
lret
mov
xchg
cmp
adc
cmpsb
sbb
stos
sub
rcr
pop
xchg
jnp
stos
mov
sbb
xchg
fildl
popf
inc
sahf
in
push
push
in
leave
out
mov
mov
sbb
cmp
mov
pop
jne
jnp
gs
fadds
mov
lock
push
out
repz
imul
inc
lahf
stos
mov
push
add
jnp
out
push
mov
pushf
add
push
incl
arpl
andl
loopne
inc
aad
out
mov
std
inc
or
rorl
mov
jbe
fwait
cwtl
adc
push
mov
mov
loop
adc
pop
cmp
jns
mov
stos
aaa
stos
cmpsl
rcl
xor
dec
sub
in
fs
insb
and
mov
inc
nop
sub
inc
cmp
mov
and
push
ljmp
shl
std
mov
pop
xlat
xor
jg
adc
dec
push
arpl
sar
jo
jno
cs
and
vmaxss
dec
insb
cmp
enter
add
idivl
inc
movsb
add
rclb
pop
mov
out
into
in
lock
lods
mov
pushf
pop
daa
xchg
popa
gs
mulb
xor
mov
add
sub
stos
loop
mov
adcl
or
or
or
popa
iret
into
fiadds
ret
cmp
les
call
stos
add
lods
sbb
pop
leave
adc
xchg
inc
push
lds
in
mov
mov
bound
clc
xchg
jae
or
or
loop
xor
ja
arpl
mov
mov
xlat
and
inc
enter
dec
xchg
fwait
push
cli
popf
xchg
jmp
push
rcrl
out
inc
dec
pop
imull
mov
lds
orl
xchg
into
cli
movsb
inc
inc
inc
dec
xchg
cmp
xlat
pop
jbe
dec
inc
pop
mov
mov
cmp
pop
cmc
repnz
pushl
mov
pop
add
cs
out
shl
loope
das
loope
push
push
pop
movsb
fidivs
dec
cmp
and
in
add
mov
lret
xchg
shld
lret
sbb
push
push
bound
adc
les
jae
pop
and
test
lock
call
push
fsubr
inc
data16
xor
movsb
out
push
pop
push
cltd
scas
and
leave
jp
into
mov
push
add
mov
fcoml
rcrl
xor
pop
cmp
icebp
or
dec
cmp
dec
clc
test
mov
js
shll
outsl
sahf
arpl
xor
daa
xchg
inc
xchg
lahf
or
mov
xor
outsl
scas
inc
add
xchg
mov
mov
repz
and
inc
popa
jg
xchg
faddl
push
nop
or
xchg
enter
push
bound
loop
push
sub
loope
lds
sub
jl
pop
roll
push
les
dec
cmp
lods
add
shlb
lock
mov
jp
arpl
loope
divl
sahf
test
pop
out
test
jl,pt
xchg
add
leave
mov
pop
jge
or
int3
jo
ficompl
sub
xlat
dec
das
shlb
inc
sub
inc
sub
out
push
xor
cmp
sbb
lds
sbb
ficoms
lods
and
dec
mov
ja
push
ret
xchg
dec
inc
mov
jge
call
mov
ljmp
out
inc
and
out
movsb
loop
ja
fdivl
push
pusha
lea
cmp
popf
and
dec
dec
popa
sbb
ja
mov
xchg
in
aam
mov
jbe
sub
push
and
jnp
inc
movsl
jne
jo
xchg
dec
mov
js
adc
cmp
andnps
iret
mov
shrl
adc
mov
fimuls
pop
push
outsb
and
mov
sub
mov
imul
push
aam
jecxz
add
push
mov
lds
sub
or
jne
add
jmp
incb
xchg
xchg
into
aaa
in
icebp
dec
mov
aam
mov
jo
out
cmp
cmpsb
ror
jnp
push
sbb
aas
mov
xchg
out
add
sbb
lret
push
std
jo
repnz
in
sbb
push
mov
shlb
test
jmp
mov
xor
mov
xchg
push
xchg
mov
mov
xor
outsl
loopne
add
sbb
jecxz
clzero
insl
xchg
pop
imul
inc
movsb
in
es
cmc
cmp
rorl
jmp
adc
mov
and
movsl
loopne
rcrb
pop
add
sub
shrl
pop
push
and
cmp
sbb
shr
sbb
fimull
add
sbb
ja
mov
or
aas
adc
ret
stmxcsr
cmp
and
xlat
sbb
jne
jl
popf
stos
dec
in
cmp
mov
sub
call
pop
and
pop
dec
mov
std
mov
inc
push
lahf
int
test
fcmovnb
push
jns
stos
xchg
packsswb
mov
and
mov
or
rorl
cmpsl
stc
and
out
and
jmp
sub
daa
xchg
xchg
movsb
shll
cltd
jns
enter
cmp
pop
xchg
xorb
fstl
mov
pop
in
pop
outsb
lock
mov
out
fstps
adc
lea
add
push
test
cli
mov
and
xchg
movsb
mov
fistps
lock
subb
cmc
push
push
and
movsl
pop
je
cmp
call
xchg
mov
adc
pop
inc
lods
mov
test
mov
and
aas
js
pop
and
test
in
dec
mov
outsb
sbbb
and
popl
in
out
jne
pop
scas
lods
leave
loopne
xchg
jl
or
xor
sbb
and
add
loope
mov
imul
xchg
and
icebp
xor
add
inc
xchg
cmp
jnp
inc
push
aad
cmp
jmp
jg
jno
mov
jmp
jmp
dec
adc
pop
pop
scas
dec
cmp
dec
xor
pop
stc
cltd
xchg
push
loopne
lret
jge
in
dec
cld
jge
ss
sub
jae
cmp
cmp
loopne
lahf
movsl
add
pop
push
imul
pop
pop
xor
sbb
mov
enter
scas
shlb
fidivl
sub
sub
mov
xchg
fildl
out
movsb
dec
inc
mov
push
add
mov
pop
js
adc
pop
lock
jns
shl
cmp
adc
pop
mov
arpl
rcrb
fmull
mov
mov
jno
pop
mov
jp
jns
pop
in
or
push
inc
mov
lock
or
xchg
pop
mov
xchg
int
jecxz
pop
mov
lret
add
inc
xor
fs
push
les
rorl
leave
or
dec
jg
jne
pop
push
add
int
push
sub
aaa
mov
adc
arpl
out
adc
iret
xchg
mov
iret
cmp
xchg
jae
aaa
lret
mov
movl
adc
mov
test
test
inc
jb
mov
test
mov
xchg
int3
jo
pop
sbb
cmp
cli
test
sub
and
and
pop
jns
cmp
push
mov
sti
sub
mov
xor
push
cmc
mov
or
pushf
in
push
aaa
movsl
mov
xor
xchg
enter
inc
fldl
pusha
ret
lret
mov
faddl
push
xchg
mov
cmp
xchg
bound
out
mov
sbb
inc
in
sub
mov
sahf
ljmp
xor
push
push
dec
mov
shll
mov
call
jb
lahf
loopne
cwtl
and
test
cmpsl
cmp
adc
dec
or
inc
push
mov
insl
addr16
pushf
cmpsl
fsubrl
sub
jmp
popf
lock
xor
lock
cwtl
js
dec
add
lea
mov
rcll
push
xor
jb
inc
and
je
mov
insl
sub
push
ficompl
scas
cs
and
pop
push
jbe
add
out
mov
std
xchg
cmp
dec
and
xchg
mov
popf
xchg
test
cmc
pop
sbb
arpl
inc
jp
sub
repz
sbb
jl
mov
sbb
jne
movsl
in
xlat
das
bound
push
or
pop
lahf
into
jmp
sub
dec
ja
fs
cltd
and
push
mov
dec
mov
sub
aam
mov
push
jg
jle
mov
loop
stos
push
xchg
xor
add
outsb
fidivl
outsb
add
mov
pop
jmp
mov
stos
pop
or
mov
rcll
test
inc
xor
ja
adc
call
cmp
cmpsb
xor
pop
cli
xor
xlat
sbb
push
pop
imul
add
xchg
hlt
insb
popf
inc
mov
mov
xchg
pop
sbb
or
inc
lret
mov
and
push
jae
pop
adc
push
pop
les
ds
xchg
or
fwait
cmp
pop
imul
sbb
mov
jecxz
and
dec
stos
cmc
rorb
mov
leave
or
mov
data16
sub
loop
jo
inc
loope
dec
orb
or
lods
sbb
pop
pop
pop
daa
in
sarl
out
mov
jle
mov
aad
pop
push
adc
inc
out
fidivs
pop
xchg
js
or
bound
jo
cmp
testb
mov
or
insl
and
hlt
test
add
fdivs
mov
shl
das
xchg
dec
and
sarl
xchg
pop
mov
pop
xcrypt-ofb
cmpsl
imul
mov
les
push
shll
sub
pusha
arpl
sbb
aam
jne
outsb
xchg
loope
aam
out
js
push
bound
push
das
mov
dec
push
clc
icebp
ds
test
or
add
repnz
jecxz
mov
rorl
imul
rcrl
sub
sbb
inc
outsl
add
sbb
xlat
fistl
ss
lret
ret
cli
mov
mov
lods
push
test
aad
sbb
mov
shrl
mov
lret
xchg
aas
inc
adc
jb
lcall
mov
inc
movq
pop
or
add
aaa
cmpsb
mov
dec
and
unpcklps
adc
icebp
test
sub
inc
adc
adc
leave
in
push
movsl
nop
jle
fcomi
mov
pop
sub
push
lods
outsl
jge
jno
stos
mov
jb
jl
add
outsb
jecxz
sub
dec
cmc
loope
stos
mov
lcall
xchg
lahf
addr16
xorb
xchg
xor
sub
mov
mov
jns
gs
cmc
fadds
jge
aam
and
stc
xchg
sub
and
jae
fisttpl
mov
out
push
movsl
mov
mov
repz
stc
popf
lods
xor
shrl
nop
sahf
mov
rol
popa
dec
dec
into
push
jmp
stos
add
repz
call
push
gs
jne
push
xor
fmuls
dec
adc
inc
sbb
lock
jmp
movsb
push
xchg
mov
movsb
test
jnp
mov
cltd
cmp
xchg
mov
in
mov
push
sti
insl
movsb
int
je
mov
les
xor
xchg
jns
pop
js
das
add
addr16
xor
out
pushf
call
enter
mov
adc
outsb
mov
leave
push
mov
out
mov
mov
push
fs
in
ds
adc
testb
movsl
cmp
popf
mov
icebp
cwtl
shll
xor
push
call
and
test
mov
jno
icebp
into
lds
sub
cmp
icebp
xchg
cmpsb
jnp
mov
jb
mov
adc
sbb
xor
or
repnz
xor
outsl
adc
insb
adc
test
add
jecxz
jmp
or
test
pushf
xchg
fcompl
lahf
popa
sarb
mov
mov
add
scas
ja
outsl
fucomip
xchg
dec
jno
xlat
insb
pop
std
addr16
dec
add
cltd
arpl
cmpsl
mov
mov
iret
mov
fdivl
lock
sub
push
fisttpl
sub
pop
or
add
mov
daa
ljmp
push
push
das
lcall
into
push
pop
addr16
mov
lds
push
xchg
f2xm1
aad
push
cld
and
push
inc
push
addr16
pop
in
and
adc
dec
lock
fcomip
cmpsl
cmp
sbb
enter
fscale
addl
mov
stos
ja
adc
bound
js
data16
sbb
mov
xor
ljmp
adcb
test
test
imul
dec
das
addr16
inc
movsl
int3
inc
dec
cmp
test
repnz
or
ljmp
mov
add
mov
xor
jle
cmp
dec
insb
ret
shrb
dec
cmp
mov
adc
test
pop
pop
repz
mov
test
xchg
fisubs
test
fcom
or
pop
popf
mov
mov
clc
cltd
cmp
mov
mov
dec
jo
dec
enter
add
outsl
xchg
sti
or
fistl
test
addl
cmc
pop
decl
imull
out
enter
imul
dec
js
jle
jecxz
xor
jecxz
lahf
jns
into
sub
dec
or
adc
es
sub
mov
dec
inc
pop
lret
jg
add
add
xor
sbb
dec
xor
adc
imulb
mov
push
int
mov
movsl
addr16
cmpsl
mov
dec
push
jnp
or
cs
aas
pop
loope
repz
and
jbe
mov
adc
xchg
add
hlt
jno
jp
out
aad
icebp
sbb
fmull
xor
xchg
frstor
or
dec
jmp
js
xchg
jge
aas
adc
pop
mov
mov
fsubl
add
xlat
test
sti
test
lahf
sbb
mov
xchg
into
push
lea
add
adc
cmc
mov
pop
data16
cmp
mov
mov
xchg
mov
insl
daa
in
inc
xor
jae
rolb
inc
mov
mov
jnp
xor
mov
fwait
cltd
and
popa
sbb
outsl
mov
std
test
les
push
repnz
loope
rorb
data16
pop
jmp
inc
mov
mov
jns
or
jg
dec
outsl
out
push
xlat
jl
or
or
mov
pop
sub
popf
push
and
inc
jl
mov
dec
fidivl
fs
cmpsl
lcall
inc
fildl
pop
xor
bound
dec
adc
jb
movsl
dec
pushf
outsl
inc
add
adc
pop
imul
inc
inc
fnstenv
push
xchg
imul
mov
sti
in
stos
sbb
push
mov
adc
lea
adc
es
scas
push
inc
cmp
xlat
js,pt
push
pop
jge
shrb
popf
xor
out
inc
adc
push
xor
adc
mov
cmpsl
mov
sub
push
adc
mov
cld
mov
push
sbb
loop
lock
fs
and
cwtl
and
repz
roll
add
push
shl
in
pop
sub
xchg
push
dec
divb
add
jge
xor
xchg
insl
dec
xor
push
xchg
sbb
fimull
push
pop
aam
fiadds
mov
mov
shl
das
vcomisd
leave
or
jg
pop
dec
shl
fidivrl
rcrb
fwait
pop
sbb
andb
push
jb
sbb
or
adc
jmp
rcll
stos
mov
push
decl
leave
or
test
pop
sarb
aaa
jb
sub
and
fwait
mov
je
mov
aas
arpl
shrl
lret
bound
xor
pop
fs
shrl
loop
gs
int3
dec
les
pop
adcl
jmp
int
pop
adc
testl
cmpsl
outsl
lret
sbb
fmul
and
in
arpl
push
pop
mov
inc
mov
into
push
das
sub
inc
jecxz
jae
outsl
aad
or
in
and
pushf
insb
aam
xchg
xchg
jge
jg
insb
mov
shrl
jae
inc
outsl
jnp
pop
pop
aam
fdivrl
out
push
adc
fisubs
stc
popf
emms
lods
sbb
mov
cli
or
fnsave
mov
pop
test
cld
lock
sarb
clc
inc
xchg
in
mulb
js
cli
cmp
jno
inc
and
stos
fidivrl
test
stos
mov
stos
sbb
addr16
mov
mov
mov
mov
jbe
ds
jg
ret
gs
push
adc
push
cmp
adc
addr16
push
xchg
pop
hlt
scas
lea
mov
push
xchg
jmp
cmp
xlat
xchg
mov
xchg
insl
cwtl
add
arpl
cmp
mov
pop
xchg
scas
mov
in
mov
lcall
mov
test
insb
in
dec
xchg
rolb
push
dec
lods
test
lahf
sbb
mov
or
arpl
sub
mov
and
add
jb
jle
cli
adcl
jp
add
fcmovnb
in
movsl
in
insb
jecxz
sbb
pop
cmc
jae
mov
in
insb
aas
pop
xor
mov
mov
cltd
jno
test
nop
lea
jle
movl
pushl
pop
pop
push
mov
jne
scas
pop
push
std
dec
lret
test
pop
and
mov
inc
xor
push
push
adc
sub
movsb
in
pop
bound
push
mov
jnp
xlat
fstps
or
mov
icebp
mov
mov
stos
and
std
pop
push
pushf
add
mov
in
movsb
dec
and
pop
test
insl
push
rorb
mov
or
outsb
and
cmpsl
pop
es
xchg
inc
pop
mov
jb
mov
cmp
xor
rcrl
inc
sub
mov
stos
jbe
cli
pushf
fistl
fldt
sub
xchg
jmp
ucomiss
fmuls
xchg
inc
mov
push
mov
roll
push
lret
cld
in
inc
jmp
mov
push
dec
mov
es
mov
fucomi
sbb
xchg
std
mov
inc
jb
and
mov
orl
xor
pop
cs
fnsave
cmp
fcoms
arpl
fimull
jo
sbb
bound
jg
inc
pop
inc
lea
adc
xor
mov
imul
imul
popf
adc
test
sub
push
mov
pop
aad
inc
insb
push
cmpsl
dec
jns
and
push
hlt
cli
xchg
and
divb
mov
je
mov
sbb
push
mov
add
test
scas
mov
and
pop
cwtl
xchg
sub
or
sahf
shlb
into
cs
and
sarl
or
jge
sub
mov
int3
cli
sbb
push
movsl
das
test
xor
mov
aas
mov
lahf
mov
aad
clc
cltd
push
mov
in
rcl
shr
call
movsl
mov
cmpxchg
or
addr16
incl
inc
lret
inc
lds
out
inc
lods
lcall
outsb
aad
dec
mov
push
cld
loope
aam
clc
xor
xor
cwtl
mov
xchg
mov
add
sbb
and
jmp
inc
pop
pop
sbb
ss
mov
add
repz
cmp
rclb
aad
xor
sahf
movsb
shl
sar
push
cmp
jo
lea
mov
loop
inc
imul
test
xchg
cmp
jl
jae
sub
movsl
inc
sub
andl
mov
fistpll
add
inc
scas
fwait
out
adc
mov
xor
push
mov
in
data16
and
dec
mov
out
mov
ja
call
mov
mov
in
cmp
and
mov
sbb
insl
dec
in
cmp
in
push
dec
push
inc
cwtl
bound
push
lret
inc
add
cmpb
adc
xchg
jge
push
push
push
aaa
jno
push
sub
mov
das
jb
inc
popf
leave
adc
xchg
rorl
jno
dec
test
push
mov
dec
ud2
lret
js
xchg
sub
aaa
xor
gs
aas
test
lcall
and
push
ss
push
cmc
enter
adc
push
pop
mov
ja
mov
sbb
scas
add
sub
repz
push
fs
mov
orb
pushf
mov
xchg
cmpl
clc
out
inc
movsb
adc
mov
xlat
scas
lods
fdivrp
or
clc
lods
push
test
in
jbe
push
add
out
jle
loopne
lods
mov
cwtl
mov
cli
imul
push
push
in
insl
push
mov
ljmp
inc
adc
movsb
or
lods
daa
pop
in
sub
repnz
das
jle
popf
jg
jns
push
lcall
in
popf
mov
and
mov
out
js
call
add
push
cmpsl
imul
inc
add
scas
pop
mov
jmp
inc
icebp
push
mov
cmp
adc
adc
pop
outsl
mov
jmp
iret
shrb
into
andl
add
jnp
push
pop
je
adc
sub
sub
inc
insb
lods
add
or
xor
push
jge
nop
test
push
aaa
call
in
xor
xor
fmull
call
scas
lret
lds
push
loope
cmc
je
sarl
cmp
inc
fistl
xchg
push
inc
rcr
fsubr
lods
sbb
int
pop
jg
or
xor
fstpt
or
mov
push
jo
mov
rol
lret
cmp
test
fs
scas
add
shrl
xor
cmp
cmpsb
mov
stos
test
dec
xchg
fstpt
sbb
jecxz
mov
jle
cmp
in
pusha
xor
xchg
pop
aad
cli
mov
cmpsb
mov
inc
sti
add
jo
jp
pop
movsl
lret
jo
lock
xorb
cmpsb
cltd
call
das
jno
out
lahf
push
pop
jp
ss
loopne
push
pop
add
insb
jbe
pop
fildl
cs
subb
sub
stos
adc
bound
xchg
scas
out
dec
sahf
xor
das
xor
jmp
rclb
popa
aaa
or
and
mov
dec
cmpsl
adc
test
xchg
dec
pop
mov
lea
mov
and
sbb
lods
mov
xchg
mov
cmp
push
xor
jmp
mov
mov
add
jnp
push
test
push
insl
pop
jle
mov
push
ss
sub
push
mov
fwait
addb
adc
popf
aam
mov
gs
les
push
jge
loope
adc
fmuls
pop
push
xor
rclb
std
lock
sahf
stos
inc
pop
xchg
xor
push
inc
inc
loop
scas
dec
jg
mov
mov
mov
jns
addb
push
rcl
std
mov
das
cld
pop
inc
jmp
jbe
adc
hlt
cmpsb
nop
cmp
leave
popa
iret
push
mov
mov
std
push
divb
test
or
loop
scas
mov
cwtl
sahf
daa
ret
sti
dec
icebp
jp
fdivs
xor
addr16
fwait
cli
inc
dec
and
cmp
test
jb
mov
inc
cmp
mull
push
pop
pop
stos
and
add
int3
dec
adc
push
cltd
test
mov
std
adc
or
xchg
mov
xor
jmp
jbe
test
roll
xor
push
int3
scas
mov
cmp
cli
insl
add
ret
mov
cmp
and
xor
aaa
push
sbb
xor
loop
sbb
dec
cmpsb
jp
cltd
jb
push
jg
mov
mov
mov
fwait
mov
inc
popa
ret
jg
and
lret
cmpsb
pop
fnsave
push
mov
popf
xor
inc
adc
push
push
cwtl
das
outsb
dec
lods
test
fstl
cwtl
mov
inc
cmp
aad
scas
push
mov
add
mov
push
dec
fbld
int3
iret
mov
cmc
sbb
sbb
cli
les
jmp
jbe
jnp
add
xchg
es
pop
add
movsl
or
xchg
xchg
jmp
mov
mov
sahf
leave
pop
pop
mov
mov
call
lahf
imulb
sbb
out
cmp
in
fs
sar
sarl
inc
std
push
test
popf
dec
clc
mov
stos
iret
xchg
in
mov
pusha
mov
and
stc
enter
or
js
push
mov
cmpsl
mov
mov
adc
inc
jle
roll
or
sub
pop
rorl
rorb
loop
and
int
movsl
dec
sub
ret
leave
push
clc
cltd
loop
sbb
inc
mov
add
inc
pusha
mov
pop
mov
out
add
mov
dec
xchg
mov
inc
xor
xchg
xor
fs
sbb
push
xchg
cld
push
sbb
cs
jp
pop
insb
sub
js
popf
leave
cmp
mov
jg
js
mov
jge
sbb
test
or
adc
xor
lret
arpl
jge
pop
out
dec
jmp
addr16
ret
outsl
or
pop
mov
or
mov
cmpl
cs
frstor
testl
pop
dec
cmpsl
mov
in
inc
push
insl
mov
mov
out
mov
mov
pop
inc
push
jns
cmp
arpl
inc
push
insb
ljmp
into
push
clc
xchg
jl
push
and
lds
mov
out
int
mov
sbb
xchg
mov
or
rolb
pop
inc
addr16
pop
xchg
add
cli
sub
inc
leave
xlat
mov
jbe
in
pop
cmp
xchg
in
jno
pop
mov
les
adc
ja
sub
rorl
dec
inc
mov
dec
repnz
inc
or
sti
pop
roll
mov
inc
lcall
mov
shlb
popf
inc
in
jge
aad
fisubrs
mov
out
adc
or
je
enter
repz
into
daa
mov
inc
nop
lret
mov
adc
mov
stos
movsl
push
cmpsb
scas
pop
sarl
cli
xchg
rcll
lds
popf
sub
lret
int
insl
pushf
push
mov
hlt
mov
push
hlt
gs
fs
sbbl
adc
add
repz
lea
or
mov
lods
cmp
inc
jl
mov
lret
andb
cwtl
cmp
jp
sub
sbb
rcrb
cs
and
div
push
adc
add
cli
idivl
cli
jo
sub
gs
popa
xor
pop
fbld
mov
arpl
push
jl
xchg
repnz
in
cli
sarb
mov
daa
in
rcl
test
jo
adc
in
stos
adc
enter
xlat
fldcw
shl
std
enter
fisubrl
loop
push
pop
ja
enter
jecxz
xchg
rclb
sbb
sbb
cli
cmp
adc
es
pop
mov
jo
adc
fcomps
std
pushf
icebp
sti
outsb
mov
pop
mov
fnsave
cmpsl
test
mov
fdivr
loope
and
mov
das
movsb
and
or
mov
int
pop
iret
adc
sbb
or
jge
ds
negl
lahf
sub
sub
and
ret
vfmsub213ps
and
insb
outsb
movsl
mov
cli
dec
divb
mov
cmpsb
andl
sub
or
and
push
mov
cmc
jae
jne
into
ss
lods
or
insb
or
xor
push
cli
sbb
std
fcompl
into
in
add
and
in
fs
js
pop
in
loop
outsb
pop
pop
sub
mov
repnz
lret
push
loop
xor
shr
inc
cmpsl
push
test
push
std
mov
sub
cld
iret
sub
jnp
jp
xchg
into
das
mul
jp
je
cmp
ror
sub
movsb
lahf
gs
mov
and
dec
cmp
cmp
aas
or
lds
popa
xlat
in
jae
jo
es
mov
cwtl
xchg
test
or
lds
lock
sbb
jl
loope
xlat
and
loop
xchg
jbe
leave
out
dec
ss
insb
jns
sub
jns
popa
rorb
jp
ficomps
ret
and
fwait
push
mov
and
aad
xor
xchg
mov
push
sbb
in
int3
mov
xor
aad
inc
out
mov
test
in
mov
cmc
lods
jp
mov
cwtl
fidivrl
jl
call
mov
fwait
xchg
cs
into
xorl
or
icebp
aad
pop
sbb
adc
xlat
dec
xchg
xchg
pop
loop
pop
xor
jne
mov
mov
out
sbb
mov
scas
xchg
ret
filds
pop
cmc
pop
insb
les
cmpsl
pushf
pop
inc
std
fldt
sub
icebp
pop
push
test
mov
loopne
cmpsl
or
fwait
xchg
pop
popf
clc
hlt
mov
mov
or
stc
fists
cmp
or
mov
imul
ljmp
xor
mov
xor
pop
jne
sbb
dec
mov
in
orl
inc
sbb
jns
incb
sub
movsb
data16
stos
mov
mov
and
ds
xchg
push
pusha
sub
pop
sbb
xchg
jb
mov
cmp
cs
nop
sar
adc
cwtl
pop
sarl
adc
sub
inc
jns
add
mov
dec
arpl
dec
aaa
lret
pop
lcall
aad
imul
jmp
push
mov
and
adc
std
pop
cmp
bnd
pop
stos
jbe
sti
sbb
test
sbbb
pop
cmp
sbb
adc
je
pop
sbb
or
xchg
sbb
jg
add
aaa
pop
mov
jns
inc
pop
jno
bound
mov
punpckhdq
insb
stc
mov
pop
xlat
sbb
adc
repz
pop
fs
mov
add
jbe
and
lds
cmp
adc
adc
cs
mov
pop
push
sub
cmp
roll
into
cmp
fstpl
inc
bound
lods
out
push
movsl
push
dec
ss
dec
cwtl
mov
sti
bswap
sti
cli
and
mov
aas
shll
adc
pop
enter
inc
dec
adc
fstp
mov
cmp
push
pop
add
ljmp
mov
or
imul
lock
mov
jmp
mov
lods
test
mov
pushf
pop
stos
pop
in
jmp
jns
scas
daa
scas
or
rclb
jnp
add
fs
stos
xorb
inc
jp
inc
test
xchg
rcrb
jnp
inc
movsl
popf
imul
stos
inc
sarl
dec
mov
cltd
pop
push
loopne
lcall
scas
arpl
mov
cs
test
adc
adc
fldenv
mov
ret
mov
mov
jns
scas
jl
popa
dec
ljmp
lret
orb
push
fisubl
les
cmp
xor
out
in
call
ss
dec
sub
mov
je
sbb
insl
push
jns
int3
adc
add
xor
sbb
scas
cmp
xchg
dec
ret
ja
roll
rolb
jmp
cs
hlt
dec
pop
lods
arpl
and
cli
jns
cmp
push
push
jbe
xchg
jbe
lcall
xor
stc
xor
popa
int3
int
stc
out
std
dec
mov
inc
inc
std
ds
mov
popa
adc
aam
jp
and
mov
xchg
mov
clc
add
mov
in
dec
ss
pop
sbb
addl
pop
shll
jg
mov
jo
sbb
add
push
jmp
or
loop
push
iret
fdivl
jnp
dec
and
jbe
sub
push
adc
movsb
push
xchg
jge
loope
xchg
push
je
cwtl
push
push
pop
repz
jo
ret
jnp
pop
lods
mov
xor
push
fdiv
mov
dec
mov
dec
fsqrt
notl
mov
daa
lock
lea
xchg
shlb
pushf
and
rorl
ljmp
mov
repz
pop
data16
inc
pop
xor
jnp
xchg
loop
aaa
xchg
shr
sbbl
mov
dec
xchg
mov
clc
inc
aas
cmp
int
sbb
dec
and
pop
pop
jmp
mov
inc
push
pop
pop
xlat
stc
dec
or
inc
into
ret
adc
mov
outsl
in
movsb
push
stos
cmpsl
push
mov
mov
ds
mov
sub
or
inc
cmpxchg
xor
call
fdiv
addr16
cmpsb
rolb
leave
mov
push
adc
mov
aad
dec
adc
push
fsubrs
push
xor
or
cmp
pop
mov
and
add
fdivrs
popf
int
push
loope
outsl
mov
decb
jg
push
ljmp
jb
dec
cld
test
mov
adc
pop
dec
and
mov
pop
lcall
sub
or
daa
repnz
dec
sbb
fldt
insl
cmp
nop
mov
jg
cs
cs
movsl
adc
pop
add
mov
push
mov
ja
aaa
xchg
dec
stos
rcl
stos
pop
shrb
cmp
lcall
sbb
jae
ficompl
jge
pushf
pusha
mov
shl
es
or
popf
add
movsb
sbb
jne
lahf
in
icebp
xor
mov
pushf
imul
rcll
daa
ljmp
sub
jne
enter
pop
mov
adc
or
es
and
add
mov
xor
sbb
jne
xchg
mov
pop
in
faddl
je
or
shll
xor
fistl
inc
shll
jg
pop
scas
rorl
mov
rol
pushf
cmp
mov
dec
imul
mov
dec
push
adc
ret
push
pusha
lret
mov
aas
mov
divps
sbb
mov
mov
popf
lcall
lret
jo
outsb
xor
sbb
sbb
xor
arpl
iret
insb
test
insl
push
mov
fisttps
testb
ja
lret
pop
xchg
arpl
or
aaa
lock
in
negl
sub
test
sbb
cmpl
test
adc
push
lcall
push
add
mov
mov
pop
mov
jno
xor
icebp
or
in
dec
adc
push
adc
mov
adc
fdivrp
hlt
xchg
sarb
jnp
and
dec
inc
and
mov
in
and
test
fnstenv
fnstcw
outsb
lahf
jo
loope
test
mov
mov
lahf
sub
subl
dec
mov
lds
jb
lret
insl
mov
mov
push
pusha
mov
movsb
out
fiaddl
adc
stc
lods
push
xchg
mov
xlat
mov
loope
shlb
call
data16
jne
sub
rcrl
pop
mov
outsb
lret
push
data16
xchg
cmp
pop
sar
or
adc
pusha
cmpsl
std
dec
das
aam
jge
lea
sub
and
pop
mov
dec
adc
icebp
or
or
sbb
xor
push
xchg
dec
push
adc
sahf
mov
cltd
xor
aam
std
mov
lcall
and
pushf
xchg
das
arpl
loope
and
loopne
sti
jl
les
or
xor
jo
es
sbb
scas
aaa
ret
add
mov
mov
mov
mov
loopne
or
sbb
lret
push
ret
aaa
gs
cmp
out
xor
es
int3
or
or
lods
aad
test
add
nop
test
ficomps
outsl
pop
hlt
pop
and
push
inc
testb
dec
pop
call
mov
adc
cmp
cmpsl
gs
fcmovne
into
push
pusha
cmpsl
push
inc
xchg
add
daa
jle
lea
dec
push
cld
outsb
adcb
mov
frstor
sub
mov
push
mov
or
adcl
iret
lret
sub
xlat
push
dec
dec
add
mov
jp
push
mov
mov
enter
out
pop
fs
scas
push
movsb
jno
out
bound
jp
add
repnz
ds
ficomps
sub
imul
lea
pop
lcall
pop
push
rol
mov
jge
jle
mov
loopne
cwtl
pop
adc
cld
ja
scas
frstor
jg
xchg
sub
push
mov
push
adc
das
push
gs
pop
sbb
jne
push
push
adc
shr
dec
orb
mov
mov
in
mov
jnp
pop
aaa
movsb
xchg
test
pop
push
push
clc
xor
jo
or
mov
rcll
inc
incb
cmpsl
cltd
jmp
jecxz
pop
cmp
out
mov
cmp
movsl
mov
jbe
inc
adc
xor
pop
jge
mov
inc
jo
mov
fnsave
aad
sbbb
push
xor
xorb
fildl
divl
inc
divb
test
push
ss
dec
lahf
in
shrb
clc
dec
test
push
fsubrp
mov
and
mov
mov
adc
int3
and
les
pop
sbb
add
dec
aad
mov
js
jno
stc
cmp
adc
and
nop
lods
xor
sub
das
jae
lcall
adc
pop
lea
adc
cwtl
dec
lahf
jae
or
cli
ss
add
cs
outsb
add
imul
test
imull
arpl
or
jg
gs
add
or
stos
adc
aad
mov
and
les
lea
rcrl
insb
ja
inc
push
cmp
xchg
insl
insl
add
adc
inc
sub
pop
int
push
clc
dec
scas
add
fldl
fmull
and
imul
and
or
cli
cs
dec
in
lods
cmpsb
cmp
outsb
hlt
xor
mov
cmc
dec
pop
aaa
push
imul
xchg
mov
lock
mov
iret
insb
mov
xor
mov
sti
cmp
mov
roll
push
arpl
fcmove
sbb
pop
pop
fldenv
aad
xorl
jecxz
mov
ljmp
sub
pushf
push
cmp
xchg
mov
es
xor
mov
sub
test
ljmp
scas
mov
inc
pop
mov
mov
mov
jle
xor
jae
and
cmp
nop
sbb
xor
dec
hlt
xlat
cmp
ljmp
les
jb
mov
cld
out
ss
xchg
xchg
cmp
sbb
test
push
orb
dec
pop
mov
add
cmp
pop
push
pop
xchg
and
xor
imul
adc
mov
push
das
std
sub
aaa
push
and
sbb
cwtl
cmp
stos
icebp
sahf
xchg
mov
imul
adc
out
movsl
sbb
jne
jle,pt
push
push
aas
mov
pop
mov
mov
lea
lahf
mov
inc
cmpsb
in
mov
jmp
insl
pop
lods
jne
ror
mov
sbb
cltd
cmp
add
je
fwait
mov
fisubl
mov
push
mov
mov
rolb
dec
jne
jge
mov
popa
jmp
mov
mov
cltd
xchg
imul
push
data16
lret
inc
scas
loop
inc
adc
subb
enter
inc
data16
sbb
pop
shl
inc
js
arpl
add
or
icebp
add
mov
out
bnd
jnp
cmpsb
cvtps2pd
cs
xchg
dec
scas
xchg
into
mov
orl
lret
pop
in
xor
frstor
iret
popa
insb
pop
lock
jge
mov
movl
ljmp
jb
pop
notb
or
inc
adc
add
jmp
aad
stos
bound
lds
fs
mov
daa
mov
mov
loope
cmp
xchg
lods
stos
lods
cmp
add
nop
sbb
hlt
push
sbb
jae
fsub
sbb
dec
test
rcl
inc
mov
hlt
lods
mov
jmp
shrb
and
les
in
adc
test
jbe
adc
aas
xorb
cwtl
nop
jnp
mov
stc
push
arpl
in
mov
stc
das
and
dec
mov
cld
ret
or
or
mov
sbb
ss
ljmp
push
frstor
adc
or
mov
orb
mov
sub
int3
push
int
dec
icebp
aaa
loopne
shl
xor
sbb
test
imul
mov
fsts
jecxz
fdivrs
pop
test
lds
or
pop
cld
inc
sbbl
imul
dec
pop
sbb
pusha
or
or
fstpt
or
inc
out
cltd
movsb
xchg
js
mov
orl
add
sarl
xchg
sbb
insl
imul
or
jmp
push
cli
loopne
outsl
lds
add
mov
xchg
scas
in
cltd
clc
push
setb
push
or
sbbb
data16
int3
notb
stos
cld
sub
imul
test
sbb
and
lods
jns
pop
insl
mov
jnp
pop
mov
jmp
adc
mov
jecxz
jo
and
push
fucomi
mov
xchg
repnz
xor
loopne
mov
aad
dec
mov
lret
adc
les
mov
icebp
mov
ja,pt
into
ds
sbb
adc
push
push
sub
fidivs
dec
adc
or
sbb
adcb
aam
inc
iret
clc
xlat
mov
xchg
xchg
jb
leave
jp
push
mov
push
popf
cmp
pop
enter
push
jp
andb
pop
stc
mov
mov
xor
pop
roll
xor
clc
sub
push
decb
jne
pop
mov
adc
xchg
not
push
testb
push
shrl
fsubrl
and
iret
lods
je
mov
mov
cmpb
add
cmp
das
cmc
mov
inc
je
inc
add
pop
add
adc
xorl
rclb
fistl
jbe
scas
in
xchg
je
mov
dec
mov
push
ret
test
mov
jno
jo
jo
outsl
out
sub
inc
in
pushf
xor
je
lret
lret
hlt
push
cmp
fwait
rorb
call
and
mov
dec
push
inc
jbe
cltd
stos
sbb
fwait
leave
xchg
mov
sbb
sub
jne
mov
scas
hlt
fstl
pop
enter
mov
faddl
xchg
xor
or
fninit
call
outsl
pusha
gs
in
xorl
jnp
lods
sti
into
mov
jmp
adc
cmp
pop
in
inc
inc
mov
or
sbb
push
int
pop
add
or
insl
jo
movb
bswap
ja
xor
adc
fistl
inc
jne
cwtl
clc
addb
nop
enter
push
mov
lock
mov
jbe
push
xlat
or
mov
fistpl
lret
add
das
xor
mov
and
xor
jne
jne
push
dec
jmp
push
jne
lock
inc
push
std
repnz
movsl
out
daa
repnz
jne
cmp
into
cltd
cs
rcll
push
add
mov
inc
shrb
inc
and
mov
movhps
xchg
mov
out
cmp
shl
xor
sub
outsl
add
iret
sbb
xchg
pop
adc
mov
lahf
jbe
sbb
push
ret
aad
fldt
fistps
mov
std
cmpb
pop
dec
or
mov
sahf
popa
sbb
fdivs
xchg
aas
mov
fiadds
and
mov
roll
push
imul
jb
and
mov
ljmp
add
scas
mov
rolb
mov
inc
aaa
ror
xchg
out
adc
push
mov
sub
xlat
outsl
daa
outsb
and
sbb
xchg
sbb
sbb
push
pop
fcomps
mov
dec
pop
lret
mov
data16
xlat
test
adc
outsl
push
sti
xor
jo
das
push
hlt
shl
sbb
jmp
int
stc
ds
ja
call
cmp
ss
sahf
cmp
xor
imul
ja
adc
ffree
push
jecxz
jg
or
ret
adc
fwait
mov
enter
lods
hlt
xchg
xlat
ret
add
lods
jbe
mov
sub
lds
lcall
push
or
lods
jbe
push
out
fwait
iret
pop
mov
rep
call
sbb
cmp
out
popl
jmp
xchg
fmuls
cmp
and
inc
sub
mov
stc
clc
imul
iret
sbb
call
push
fdiv
je
mov
add
clc
std
jecxz
add
dec
mov
fisubrs
pop
mov
cmp
jmp
dec
cmpsb
sbb
mov
repnz
and
dec
inc
sbb
stc
inc
mov
inc
cs
in
cmp
push
mov
xorl
mov
push
scas
in
and
inc
pop
or
mov
mov
les
push
dec
dec
rclb
mov
stos
lcall
push
ret
mov
pop
cltd
mov
jmp
mov
inc
mov
xor
lods
sbb
scas
and
lods
mov
push
leave
pop
adc
jecxz
add
pop
push
push
ljmp
jl
xor
mov
sub
orb
xor
dec
mov
xchg
popf
cmp
popf
rorl
jmp
xchg
push
ljmp
lcall
aas
out
mov
mov
imull
test
test
repz
sub
gs
inc
add
insl
push
rclb
jns
test
aaa
inc
sbb
xchg
mov
adcb
dec
sbb
mov
hlt
sub
cmpsl
jle
dec
in
xlat
mov
xchg
sub
mov
shlb
push
and
sbb
popa
xorb
stos
jo
repz
cltd
push
lcall
filds
and
rcl
xor
push
xchg
sbb
stc
push
imul
int3
adc
idiv
in
jno
int3
insl
fisttps
loope
cmc
andb
mov
aad
push
add
stc
into
mov
pop
dec
push
mov
inc
int3
hlt
paddsb
or
jmp
sub
roll
clc
test
xchg
cmp
xchg
xchg
mov
out
mov
aam
imul
inc
cmpl
xor
push
jnp
popf
scas
inc
jle,pn
fstpt
call
add
push
imul
pop
xchg
mov
mov
jns
das
ret
stos
fstl
out
insl
ret
dec
sbb
shll
lock
mov
rcll
sbb
cli
or
inc
lods
inc
inc
arpl
mov
xchg
or
movsb
dec
adc
xor
and
gs
mov
insb
adc
xchg
incb
fcmovb
inc
movsb
sub
stc
pop
leave
xor
out
ret
fldenv
xchg
dec
push
outsl
out
mov
ds
inc
fsubr
lahf
insl
mov
jbe
xchg
leave
cmp
jae
sub
add
imul
xchg
adc
pop
icebp
jp
iret
and
sahf
add
cmpsb
inc
lcall
lret
popa
repnz
sar
jp
or
ss
aam
out
sub
popf
xchg
jmp
mov
fdivr
loop
xor
mov
sub
mov
fdivrs
cmpl
mov
int3
sti
mov
clc
movsb
pop
cs
xor
cmp
cltd
push
mov
mov
out
dec
addb
lret
jge,pt
xor
jecxz
aad
bound
popf
mov
jl
adc
mov
call
rcrb
push
clc
rolb
cmpb
lcall
rcrb
aam
lods
scas
dec
and
dec
aas
lock
cpuid
int
loope
pop
adc
scas
scas
int3
mov
imul
and
js
bound
lea
sbb
leave
add
loope
cmp
mov
dec
popf
cltd
in
mov
jl
add
push
mov
shr
adc
outsb
fwait
ja
mov
pop
in
lds
imul
fistps
dec
pusha
push
test
cli
orb
out
push
jne
cmp
mov
add
jge
dec
mov
dec
jmp
push
push
out
stc
bound
and
sub
dec
mov
jecxz
jb
inc
xchg
imulb
ret
xor
sub
ljmp
fwait
sub
push
mov
ljmp
mov
in
rolb
jg
dec
addb
mov
jmp
dec
mov
dec
cs
lea
adc
addr16
pop
in
and
les
push
jecxz
movsl
test
adc
sub
jbe
fstl
loopne
out
shl
imul
push
es
xchg
jnp
out
fnsave
repz
loope
adc
cmp
mov
mov
daa
rcll
aaa
and
mov
mov
pop
lods
sbb
jns
and
jae
sub
scas
jecxz
add
jne
push
rclb
mov
sbb
xor
icebp
aad
sbb
mov
mov
push
adc
cltd
adc
jns
popa
xchg
hlt
mov
pop
and
inc
pop
repz
sub
pop
into
push
daa
dec
cld
sbb
ds
sbb
and
xlat
icebp
les
jl
add
pushf
sub
push
add
bound
ret
push
sbb
jne
dec
mov
pop
jbe
sbb
mov
lea
loopne
mulb
push
std
cmpsb
push
subl
pop
jnp
arpl
xor
adc
ret
mov
rclb
dec
dec
or
push
fwait
sub
pop
leave
sub
xor
dec
cmpsb
adc
clc
inc
push
inc
cli
fdivr
cmp
xor
pop
or
adc
mov
adc
inc
sbb
js
push
shrl
cmp
dec
out
imulb
lods
lock
pop
aam
mov
dec
cmp
mov
test
push
sbb
jecxz
jle
jmp
push
enter
mov
jb
shlb
sahf
mov
inc
sub
and
pop
mov
xorb
add
inc
lret
js
mov
sbb
rol
jae
sbb
lret
imulb
pop
lods
add
cli
adc
cmp
dec
in
jle
push
sahf
test
insb
imul
out
cmp
and
insb
test
insl
dec
sbb
sub
cltd
fcomps
dec
fsubl
or
jl
fs
xor
xchg
sub
fs
sti
dec
movsl
imul
ja
pop
imul
inc
and
ja
daa
fs
and
movsl
imull
sahf
sub
adc
test
mov
jmp
mov
aaa
inc
cmp
ljmp
js
jle
or
cmp
jecxz
sub
mov
in
rcl
xchg
mov
jbe
sbb
xor
sbb
mov
fnstsw
dec
mov
out
ja
fcompl
xor
mov
pop
jns
mov
dec
in
mov
fisttpll
dec
out
jne
add
enter
jne
icebp
gs
or
jbe
sbb
xchg
fdivrs
lcall
call
out
adc
push
ljmp
ret
push
inc
orl
or
push
jne
or
jnp
rclb
insb
fisttps
jge
add
fwait
mov
fmul
repnz
mov
loop
sub
mov
mov
and
mov
sub
push
add
mov
and
pop
movsl
pop
call
and
pop
push
sub
xchg
shl
pop
mov
push
ljmp
dec
hlt
pop
cmpsb
shlb
es
rcrl
push
mov
inc
lock
xchg
sub
add
rorl
cmpsb
sbb
sub
rcll
ss
pop
mov
jae
test
bound
and
dec
jle
jbe
out
jno
lock
in
test
adc
pop
bound
sub
pop
jne
test
sbbl
sarb
jge
sbb
dec
push
pop
xchg
repnz
mov
push
mov
sub
dec
lret
movsb
add
xchg
jl
scas
cmp
fidivs
jo
in
adc
mov
mov
mov
test
ljmp
fs
or
pop
jle
sub
mov
int3
ss
push
clc
cwtl
inc
jle
pop
aas
arpl
cld
aam
fs
adc
pop
push
xchg
push
cmp
fimull
adc
mov
xchg
inc
sbb
mov
push
mov
jno
out
mov
in
pushf
sbb
aas
mov
pop
sub
jmp
cli
in
mov
mov
cmpsb
cmp
sub
outsl
push
pop
pop
arpl
cmp
cld
pop
dec
add
jbe
clc
ja
jmp
mov
inc
movsb
sub
pand
pop
ljmp
cmp
lea
mov
mov
leave
mov
mov
inc
mov
in
add
stos
test
cmpsb
clc
xlat
inc
inc
ds
adc
push
push
jg
mov
xchg
aas
push
mov
xor
push
shr
sti
fsubrl
mov
and
jmp
iret
test
inc
dec
xor
inc
mov
and
cmp
incl
lret
stos
test
mov
mov
xlat
andb
fisttpl
jo
cmp
enter
dec
add
stos
in
sbb
out
cwtl
mov
cmpsb
inc
pop
popf
das
test
in
cli
cwtl
push
mov
jle
pop
loope
icebp
aas
shl
insb
or
test
test
repnz
jp
gs
lret
inc
in
inc
fmull
or
out
in
inc
sbb
push
fsubs
mov
into
and
pop
sbb
incb
and
adc
mov
aaa
xchg
sti
test
mov
test
adc
shl
and
fisubrs
leave
pop
cmc
dec
jns
cmp
jb
clc
movsb
shrb
ljmp
fwait
into
or
push
loop
sub
sbb
dec
loopne
jns
or
cwtl
int3
je
jne
mov
mov
mov
sbb
icebp
hlt
jecxz
movsl
or
dec
mov
adc
adc
and
jbe
xchg
dec
push
jb
mov
pop
out
mov
or
sub
sbb
dec
push
push
iret
mov
in
push
add
xchg
adc
bound
add
fstl
inc
adc
insb
add
xchg
cmp
mov
and
je
jge
sbb
aas
popf
mov
arpl
add
ljmp
fs
out
dec
sub
loop
mov
rorl
adc
mov
shrd
fs
addl
arpl
push
out
and
les
mov
sarb
xor
pop
jg
rolb
jp
mov
mov
inc
xchg
rolb
imul
aaa
push
adc
or
or
pop
xor
out
xor
inc
push
popa
pop
adc
push
sbb
nop
jns
push
mov
push
in
in
pop
lock
ja
mov
sbbb
movsb
jae
cmp
dec
or
and
ds
pop
arpl
std
mov
inc
lahf
adc
cmpsb
cmp
or
pop
cmp
aad
ljmp
ret
push
xchg
jl
fistps
pop
shlb
mov
hlt
xor
in
loop
sub
loop
push
adc
cld
jb
mov
out
xchg
aas
mulb
push
pop
mov
enter
jno
repz
and
out
cmc
cwtl
inc
cmpl
fwait
es
clc
add
mov
pop
xchg
dec
mov
and
clc
and
movsb
into
into
loope
scas
sub
xchg
jne
xorb
and
hlt
mov
push
adc
cmpsb
test
fimull
add
ss
fsubr
repz
mov
call
out
fisubrs
rcrb
jno
dec
aad
popf
cs
adc
test
insl
lock
jbe
cld
sbb
inc
push
jge
subl
ljmp
cmp
sahf
ljmp
test
int
outsb
mov
je
xchg
jnp
fnstsw
in
sub
xor
mov
lahf
fdivrs
sub
jle
dec
into
aas
xchg
inc
ret
lock
int3
cmp
xor
cmp
rol
xor
push
xchg
push
imul
stc
insl
dec
xchg
movsl
hlt
push
sub
out
shll
xor
out
adc
pop
jno
mov
push
jle
jmp
ds
cmp
popa
xor
stos
lret
fadds
mov
push
rcll
je
adc
mov
int
cmpsl
sbb
fidivs
aad
mov
int3
jl
mov
dec
shll
mov
das
mov
rclb
jbe
cmp
push
ret
cmpsl
popa
xchg
iret
cmc
dec
and
testl
sub
daa
mov
es
decl
inc
add
cmpsl
pop
fnop
out
xchg
fwait
dec
jb
inc
mov
and
es
pop
bound
andb
iret
sub
pop
aam
mov
bound
int3
stc
stos
sbb
pusha
stos
push
or
in
lea
jo
adc
stos
popa
int3
cs
dec
ds
and
es
repnz
sub
dec
shrl
cmc
jg
faddl
add
mov
pop
mov
jo
adc
add
and
stc
repz
daa
stc
nop
push
sti
cmp
pop
mov
es
jbe
adc
mov
jae
sbb
pushf
lock
mov
icebp
gs
test
popf
xchg
pop
into
mov
mov
adc
jo
imull
push
cmp
mov
adcb
cmpsl
data16
lcall
cmp
sti
loope
ss
xchg
xchg
jl
leave
pushf
sbb
out
mov
mov
mov
jb
inc
div
and
jl
cld
jno
jmp
std
cwtl
cmpsl
imul
mov
testb
pushf
je
call
jne
push
ret
out
pop
mov
sub
pop
jmp
je
fimull
pop
mov
lcall
icebp
dec
repz
push
test
fimuls
fdivrs
cs
sbb
jecxz
pop
mov
cmp
inc
cmpsb
in
xchg
dec
shll
jno
rcrb
cmpsl
cmc
orb
pop
shrb
xlat
xor
outsb
scas
mulb
das
sbb
adc
mov
out
fs
jns
stos
and
aad
push
pop
pusha
call
mov
push
sub
mov
jecxz
aam
das
mov
test
cmp
mov
and
add
mov
pop
jle
out
sbb
adc
fstpl
push
mov
lock
mov
inc
push
jmp
es
add
imul
inc
jecxz
xchg
popa
pop
in
pop
add
dec
outsl
jno
push
push
cmp
nop
push
sbb
inc
arpl
mov
je
mov
sbb
stos
xchg
ret
jp
push
and
jmp
into
scas
or
inc
fnstenvs
aaa
lcall
fsubrs
add
mov
add
mov
jecxz
stos
test
pop
cmpsl
clc
push
dec
sbb
test
or
pop
cmp
push
mov
mov
pop
fisubrs
sbb
test
push
test
test
mov
xor
sahf
mov
in
dec
test
add
cmp
dec
jae
into
xchg
loopne
inc
je
cmc
mov
fisubrs
daa
jns
test
enter
mov
adc
push
outsb
ss
dec
icebp
sub
dec
lahf
js
mov
scas
jne
cli
jo
adc
inc
imulb
mov
hlt
hlt
outsb
dec
inc
dec
adcb
push
add
addb
xchg
leave
sub
jb
scas
test
add
arpl
bound
jg,pn
pop
jmp
sbb
and
sbb
movsb
out
insb
xchg
popa
inc
lock
cmp
je
dec
or
inc
std
dec
clc
lcall
std
sub
dec
dec
xchg
push
inc
cmp
aad
fistl
push
jl
sub
adc
rcll
out
mov
je
mov
dec
test
adc
mov
bound
mov
cmp
fidivrs
xchg
or
sbb
sti
adcb
in
and
jp
adc
mov
push
outsb
sbb
mov
data16
orl
outsb
or
addl
sarl
ret
push
mov
jns
jo
mov
shll
in
mov
sub
rcll
jns
ljmp
cmp
aaa
push
xchg
xchg
cmp
jecxz
pop
fidivrs
sbb
cli
leave
mov
or
mov
dec
push
leave
add
fldl
jl
or
push
dec
mov
out
or
jl
test
insb
inc
js
inc
xchg
aam
addr16
mov
int3
xor
xlat
push
xchg
lret
mov
ret
mov
sbb
rolb
outsb
sbb
idivb
mov
ret
dec
clc
add
int3
add
stc
mov
sahf
loope
add
jns
xchg
or
mov
sahf
dec
loopne
mov
and
cltd
imul
mov
bswap
inc
lods
iret
inc
or
ss
sub
lods
sbb
add
jl
and
cmpsl
sub
sub
dec
aad
xor
mov
aas
inc
lds
add
sub
pop
add
hlt
daa
cmpb
dec
and
xor
sub
add
insl
mov
pop
dec
xor
pop
mov
dec
adc
xchg
popa
into
cmc
cmp
outsl
test
dec
scas
mov
loop
push
fwait
xchg
sub
xchg
lcall
jecxz
add
cwtl
lahf
int3
xor
fists
pop
pop
loop
mov
cltd
adc
sbb
jo
mov
js
and
push
cld
and
out
sbb
mov
shlb
das
mov
lds
xchg
push
push
dec
sub
push
sub
or
add
inc
inc
pop
inc
repz
loop
outsb
mov
xor
pop
xor
add
jl
xchg
ficoms
repz
inc
sub
sbb
test
fsubl
test
add
adc
lods
mov
push
jne
or
mov
scas
sbb
andl
out
test
ss
mov
mov
out
or
shrb
hlt
adc
out
aad
movsb
out
xchg
pop
add
scas
out
imul
loop
push
mov
nop
mov
jo
sbb
cmp
lock
lock
dec
cmpl
pop
mov
xlat
mov
lea
xor
inc
xor
fs
cli
cs
pusha
cwtl
push
adc
dec
cwtl
imul
imul
into
aas
mov
add
rorl
daa
js
mov
popf
add
pop
inc
outsb
mov
xlat
adc
rcrl
jnp
mov
mov
mov
ds
test
mov
pop
xchg
mov
rcrb
jbe
jns
stos
pop
jecxz
pop
insb
dec
or
cmp
cmp
pop
mov
leave
sbb
mov
lods
xchg
fmuls
xor
dec
add
movsb
push
pop
jg
movsb
xor
scas
xchg
ficoms
addr16
inc
mov
daa
pusha
testl
and
orb
popl
ljmp
mov
arpl
out
xchg
mov
mov
cs
aas
jge
in
sub
mov
xor
inc
or
jge
ficomps
dec
jecxz
outsl
jg
repz
and
and
int3
ret
movsl
notb
enter
cmc
push
stos
adc
pop
and
sti
das
out
or
in
adc
ret
pop
in
jo
cmp
fstl
fnsave
jge
nop
lods
jg
adc
push
adc
or
adc
out
aaa
out
roll
cmpsb
mov
mov
addl
or
push
sub
pop
sbb
mov
sub
das
in
movsl
fistps
pop
push
xchg
or
fldl
mov
rcrb
mov
test
shlb
sti
push
stos
lret
or
sbb
mov
lds
inc
jg
jge
pusha
push
movsl
xor
xchg
xchg
imull
and
xor
and
subb
lea
mov
mov
sub
inc
rcrb
popf
in
iret
cmpsl
out
lods
hlt
repnz
repnz
ds
lret
inc
mov
in
or
and
pop
je
add
shll
outsb
xchg
xor
shrl
out
loopne
repnz
addr16
rol
notl
call
pop
cmpsl
inc
add
pop
dec
dec
mov
fxch
pop
outsl
mov
add
mov
aaa
fdivs
push
cmp
inc
xchg
ljmp
jge
xchg
scas
sbb
enter
jg
pop
jmp
out
sub
rolb
ja
aam
jo
jmp
insl
repnz
push
movsb
jl
les
push
pop
sub
pusha
xchg
xor
loope
cmp
arpl
insb
adc
addr16
es
inc
or
adc
out
adc
out
aad
pop
pop
scas
mov
sub
loope
xor
ss
push
cmpsb
loope
aam
aas
mov
fcomps
nopl
pop
jb
add
in
in
sbb
fadds
arpl
and
call
cmp
shr
jle
arpl
adc
cmc
pop
push
mov
xchg
lea
inc
mov
test
adc
cmc
aad
call
add
cmp
clc
cld
aad
call
mov
xchg
ret
push
and
cmp
fsubrs
aaa
add
out
and
rcr
mov
jnp
cmc
jne
sbb
mov
test
add
jbe
cmp
dec
push
iret
xor
cld
cmp
push
xchg
xchg
enter
and
add
jecxz
pushf
call
mov
push
test
pop
pushf
mov
ja
mov
sbb
cmpsb
dec
mov
imul
fmull
scas
fwait
adc
cltd
xor
scas
ret
xor
fsubs
jnp
dec
jmp
push
les
aas
repnz
mov
mov
ror
xchg
sub
jnp
or
dec
push
dec
aad
cmp
das
fimuls
fwait
mov
push
mov
push
rolb
je
fwait
mov
and
xchg
out
push
sub
imul
cld
cs
in
inc
fnstenv
sbb
mov
mov
mov
or
xor
daa
orps
test
xchg
popa
jecxz
dec
rolb
and
sbb
mov
ljmp
xor
dec
mov
add
pop
jg
fisttps
mov
stos
scas
lcall
inc
cld
stos
or
imul
iret
adc
jno
xor
cmp
ja
mov
push
in
sub
fbld
ret
jae
test
jnp
mov
dec
setb
sbb
int
adc
cmp
test
loopne
test
dec
pop
stos
test
sbb
dec
ds
movsl
jecxz
push
inc
xchg
cmp
mov
lock
cld
jno
and
lds
add
and
jns
sub
or
jo
leave
sbb
mov
insl
add
loope
add
add
fmull
in
frstor
addl
push
adc
insb
lods
fst
ljmp
inc
fidivrs
daa
leave
es
int3
mov
movsl
adc
mov
test
pop
loopne
inc
dec
icebp
popa
push
mov
inc
out
gs
sub
push
or
in
divb
adc
gs
pop
inc
loopne
add
es
pop
xor
xchg
outsb
xor
scas
xchg
sbb
add
xor
iret
push
scas
mov
pop
mov
pop
nop
rcrl
out
aaa
mov
xor
dec
lods
loopne
mov
mov
jb
lds
int3
dec
hlt
mov
add
out
sbb
cmpsb
jp
js
xor
jnp
dec
hlt
mov
sub
int3
inc
mov
daa
mov
mov
outsb
push
add
js
mov
inc
mov
sti
rclb
pop
inc
sub
cli
mov
push
cmp
and
mov
in
mov
nop
inc
ljmp
lcall
cmp
sbb
pop
stos
dec
into
inc
psubq
std
or
sbb
call
fcoml
les
or
mov
cmp
lods
jmp
dec
les
jno
jbe
push
xlat
lahf
mov
pop
insb
push
add
fidivrs
fbld
adc
jecxz
mov
sbb
pop
and
out
mov
mov
or
jecxz
jbe
pop
mov
sti
mov
out
inc
jo,pt
and
das
and
dec
add
in
pushf
cmp
push
testb
adc
mov
jns
add
pop
mov
pusha
outsl
sbb
leave
pop
pop
fldenv
inc
xchg
scas
ljmp
stos
push
insb
mov
call
ret
cmp
es
adc
daa
dec
andb
in
std
add
jo
icebp
rolb
sarb
adc
jmp
repz
fwait
lods
or
out
pop
icebp
xchg
pusha
imul
lock
xor
xchg
or
mov
les
hlt
xor
inc
dec
call
push
daa
pushf
push
jb
mov
aad
mov
mov
adc
inc
sbb
pop
loope
loopne
cwtl
je
pop
add
and
or
stos
mov
sbbl
inc
dec
push
shr
push
bound
xchg
into
outsl
mov
and
loope
rcrl
mov
push
insb
cmpsl
out
ret
scas
ja
fmul
in
clc
incb
lods
insb
pusha
lods
jae
push
jecxz
ja
jg
cld
out
add
enter
cmpsb
fnstsw
scas
push
push
pusha
and
mov
xchg
adc
sub
cmp
pushf
aad
jge
and
push
push
mov
jg
mov
adc
fstl
push
adc
std
fcompl
fisttpl
push
fsubrs
xor
stos
lahf
pop
insb
add
jbe
lock
pushf
cmc
stos
xchg
and
ret
and
dec
ja
and
fst
rclb
loopne
movsb
mov
mov
insl
adc
sbb
inc
lahf
dec
mov
sbb
mov
rcrl
inc
xor
lea
popa
jne
sbb
fstps
lea
mov
jne
cld
sub
ficoml
subb
mov
mov
repz
inc
mov
sub
aas
push
mov
adc
lds
dec
jmp
mov
sbb
pop
lcall
mov
cs
push
ljmp
cmp
xor
lahf
movsb
dec
data16
fildl
push
add
pop
leave
pop
xchg
idiv
adcb
xchg
push
mov
inc
adc
movsb
xor
add
pusha
fs
xchg
test
push
data16
fnstenv
jg
adc
pop
add
or
push
movsb
jg
mov
ret
rolb
enter
test
mov
add
or
pop
fisubrs
cmp
movsb
pop
test
push
lock
lods
push
pop
xlat
fwait
jnp
cmpsl
sbb
test
push
addr16
sub
xchg
or
bound
bound
push
sbb
fildll
and
jle
jbe
iret
cs
mov
out
dec
mov
and
shl
daa
sub
gs
ficompl
add
or
jnp
stos
lds
or
or
lds
fisubl
and
ret
push
mov
push
lret
fisubrs
push
and
or
outsl
mov
and
dec
mov
inc
xor
mov
sub
mov
lods
clc
daa
leave
add
rcrl
cmp
enter
push
test
rcrb
push
fdivs
addr16
lods
add
lods
cs
scas
adc
push
out
in
inc
sub
xor
sub
xchg
sub
loope
mov
jns
mov
shlb
insl
in
pushf
test
clc
and
cmpsl
xor
xor
and
mov
out
jecxz
mov
cmc
cmpsb
xor
xchg
xor
test
addr16
jne
movsb
cmp
pop
stos
test
lret
push
or
mov
shlb
mov
clc
push
outsb
fwait
in
lcall
scas
add
sub
out
push
xchg
test
sbb
jno
and
pusha
sub
xlat
mov
inc
roll
stc
lods
cwtl
inc
je
loope
cmp
out
inc
nop
xchg
pop
xchg
pop
adc
int
sbb
or
out
fiaddl
in
xchg
shrb
out
lret
les
dec
and
dec
or
loope
inc
dec
push
lock
adc
frstor
ljmp
push
call
xlat
lock
dec
mov
jno
insb
int3
inc
cmp
xchg
iret
insl
das
rorl
adc
push
es
cmc
int3
push
in
rclb
push
call
or
pop
pop
mov
mov
ds
fstpt
and
pop
std
movsb
inc
mov
add
push
cmp
mov
enter
fisubs
pop
rcll
ja
incb
dec
test
stos
xor
or
decb
sbb
push
pop
mov
pop
mov
mov
jne
mov
sbb
int3
loope
sahf
push
or
ret
push
push
mov
push
lds
mov
stos
xchg
dec
out
push
dec
ret
daa
xchg
xlat
int3
int3
adc
inc
and
xlat
cmp
sub
mov
je
ss
jecxz
mov
les
mov
insl
and
incl
xor
stos
sbb
pop
dec
mov
clc
xchg
inc
insb
mov
lods
stos
arpl
sub
cltd
imul
cmpsb
dec
jnp
mov
mov
dec
les
sbb
push
orb
add
sbb
movsb
add
jne
dec
inc
sub
fiadds
jns
lcall
rcrl
iret
scas
fld
mov
mov
xor
push
mov
cmp
adc
pop
and
cmp
cmp
popf
sbb
cmp
xchg
cli
shl
cmp
scas
sub
movsb
jns
js
xchg
mov
jbe
movsl
mov
lea
mov
pushf
push
daa
dec
inc
adc
ja
push
and
shlb
in
loope
mov
mov
xor
push
gs
mov
add
lahf
cltd
fucomi
lret
mov
daa
das
loop
cmp
ret
jne
adc
mov
jb
xchg
and
inc
test
sbb
mov
mov
mov
ret
popf
lea
subl
nop
jb
test
in
mov
sbb
stos
mov
cmp
xchg
sub
xlat
xchg
mov
fs
movsl
ror
outsl
mov
xor
aaa
pop
xchg
mulb
popf
imul
loopne
in
mov
movsb
rep
xor
add
pop
ret
arpl
rorb
stc
adc
pop
dec
xchg
je
mov
invd
jb
inc
jmp
sbb
js
adc
fiaddl
mov
mov
dec
xor
int3
gs
mov
leave
or
shlb
jmp
les
psubb
mov
ret
add
shrb
sahf
call
xor
pop
cmpsl
push
imul
bound
and
sti
popf
rolb
test
popf
or
jg
adc
sub
into
pop
lcall
sbb
into
call
mov
clc
sub
xor
popa
xchg
push
pop
lock
mov
jge
jecxz
sahf
lds
sub
dec
xchg
dec
xchg
popf
push
jnp
fnstenv
out
jno
lret
xor
stos
push
pop
call
clc
nop
pop
jae
mov
lock
inc
enter
lcall
mov
arpl
ljmp
nop
cmpsl
sbbb
add
jmp
enter
fcmovnb
jmp
pop
ffree
jbe
test
lea
repz
pop
push
sbb
das
push
inc
push
out
iret
lahf
arpl
adc
divl
out
xchg
dec
mov
dec
adc
scas
sub
or
sub
add
mov
inc
mov
pop
xchg
nop
adc
cmp
mov
outsl
cmp
in
fs
mov
sub
negb
mov
add
mov
xchg
rorb
jne
mov
das
es
clc
aas
pop
outsb
push
cmp
xor
adc
fsub
adc
push
sub
ja
ja
fimull
mov
sarl
int
sbb
inc
push
push
imul
add
lret
dec
xchg
xchg
sahf
clc
pop
mov
stc
into
sub
outsb
clc
add
test
or
fldt
or
jbe
mov
push
push
xor
mov
adc
jae
sub
clc
pusha
lods
push
mov
ds
enter
pusha
xlat
cltd
mov
sahf
sbb
xor
adc
rolb
movsb
mov
push
push
add
mov
je
ret
inc
aam
mov
inc
adc
add
mov
jle
dec
xor
cwtl
stos
test
and
rol
pop
pushf
repz
sub
add
cmp
jge,pt
inc
inc
notb
adc
sub
cwtl
fwait
pop
mov
or
mov
xor
pop
clc
sbb
push
out
repnz
divl
sti
in
or
mov
jmp
mov
mov
adc
cmpsb
mov
or
mov
movsl
push
and
jp
inc
test
jle
pop
mov
rcrl
lret
push
cmc
test
mov
add
push
in
punpckhbw
jle
xchg
movsl
loope
lret
or
push
outsl
mov
fs
std
mov
sbb
and
adc
das
inc
lea
call
int3
and
mov
iret
sbb
push
sbb
rcrl
and
aaa
push
add
xchg
std
nop
mov
test
rorb
sti
sub
mov
popf
lret
cmp
jge
call
or
in
push
lahf
call
jle
mov
test
dec
sub
shl
mov
mov
sub
movsb
sarb
xchg
ljmp
jne
lea
push
mov
pushf
idivb
sub
repz
add
dec
sahf
jl
xor
rorl
int3
mov
and
fwait
daa
ficoml
lcall
add
je
insl
das
inc
push
ss
pushf
mov
dec
or
cs
inc
test
mov
adc
pop
mov
push
xchg
push
cwtl
jp
fisttpl
nop
add
stos
cmpsb
mov
femms
lret
and
push
mov
shlb
xchg
movsl
jo
xchg
das
scas
test
fwait
das
call
loop
cmpl
xchg
scas
mov
fidivl
dec
negb
mov
cmp
test
andb
aad
aad
hlt
fnstenv
xor
repz
inc
dec
dec
mov
das
cmc
dec
pop
push
into
lds
stc
pop
enter
shll
jle
rcrb
pop
inc
adc
xchg
xor
dec
out
adc
adc
cmp
mov
mov
jmp
inc
mov
dec
ret
lea
loop
mov
aad
jnp
orb
cmc
xchg
clc
pop
cld
movsl
mov
and
pop
sub
inc
adc
sub
xchg
add
iret
lock
or
xor
iret
mov
mov
push
sub
xchg
dec
mov
sbb
and
sahf
addr16
xorb
and
int3
aaa
sbb
les
cmp
pop
iret
xchg
popf
jge
setno
insb
sub
xor
test
or
xchg
inc
inc
or
inc
xor
inc
xchg
jmp
adc
mov
and
cmpsl
lcall
mov
dec
xchg
or
lock
lcall
jg
and
push
inc
je
cmc
mov
fildl
sbb
sub
popf
mov
mov
sahf
sbb
pop
icebp
popf
cmp
cmp
ret
fimull
addr16
popf
fdivr
js
aaa
nop
and
out
xor
dec
adc
xchg
jo
jo
mov
fdivs
out
test
test
sub
cwtl
fisubrl
movsl
fs
mov
mov
jmp
add
sub
sbb
shl
mov
lcall
xchg
cmp
push
repnz
mov
push
or
sub
aam
lret
je
push
pushw
mov
xor
movsb
sbb
inc
xchg
cltd
or
xchg
push
jae
pop
out
test
mov
mov
sbb
pop
or
lret
loope
pusha
cltd
sbb
shlb
mov
add
dec
jmp
into
mov
loopne
xchg
movsb
and
dec
fnstcw
jl
pop
lahf
insb
in
adc
or
push
pushf
js
fsubl
int3
mov
dec
test
jl
loope
js
nop
mov
pop
mov
sub
and
add
push
push
sbb
xchg
sbb
stos
xchg
or
popa
add
notl
mov
jbe
bswap
add
gs
ljmp
loopne
jne
dec
fucomp
jb
jne
inc
insl
dec
ss
aad
test
in
in
push
push
push
xor
mov
jnp
mov
rorl
cmpsl
iret
push
mov
ja
repz
dec
int3
adc
adcl
and
inc
mov
lods
lea
ficompl
push
shr
xchg
mov
mov
sti
add
insl
in
mov
shrl
cmp
xlat
in
add
cmp
add
aaa
aas
pop
pop
mov
sub
inc
push
and
in
frstor
push
popf
lahf
test
inc
mov
jno
pop
div
pusha
pop
or
add
push
and
xor
jg
dec
gs
xchg
mov
js
jae
xchg
fimuls
call
ljmp
mov
pop
imul
add
sub
test
pop
inc
push
add
dec
pop
mov
out
xchg
test
js
jo
push
mov
or
and
sub
lock
loope
sbb
out
push
cmp
mov
scas
out
addr16
mov
aas
popa
out
fistpl
cmp
xchg
fldcw
mov
addl
mov
cmp
insl
je
lea
xchg
or
add
or
inc
in
in
mov
enter
jo
aam
sbb
lret
adc
scas
mov
pop
icebp
loopne
mov
push
mov
lahf
adc
iret
jbe
xor
lret
sbb
jmp
gs
roll
add
mov
enter
das
notl
in
sarl
int3
adc
mov
dec
js
jo
loopne
call
fidivl
jp
std
add
sbb
and
mov
jnp
push
dec
xor
out
cwtl
std
mov
jle
loopne
shl
daa
repz
mov
lods
fidivs
mov
fidivs
cmc
jl
push
ljmp
movsb
xchg
and
or
and
ret
insl
pop
push
xchg
or
sbb
mov
mov
mov
rclb
nop
adc
jns
inc
pop
adc
add
inc
in
mov
fwait
xchg
into
or
mov
mov
cs
scas
ret
test
pop
pop
fadds
xlat
mov
aaa
jmp
jnp
pop
incl
lock
jp
gs
push
inc
insl
xchg
push
ret
adc
pusha
add
lret
jae
dec
ret
add
and
push
sub
int3
mov
xor
cmpsb
fisttps
mov
clc
jae
mov
add
fldt
xchg
lret
and
cmp
loopne
ret
mov
daa
inc
xor
mov
out
stos
jl
subl
idivl
fwait
pop
cmc
sub
sub
push
cmp
fldenv
sub
sub
cwtl
inc
jb
out
movsl
repnz
stos
sub
sbb
movsl
inc
cmc
mov
std
jecxz
mov
sub
or
or
cmp
insl
mov
inc
dec
repnz
jnp
pop
mov
xchg
push
xchg
add
mov
xor
push
fidivrs
sbb
aam
mov
xor
js
adcb
pop
pop
mov
lret
pop
fwait
iret
or
xchg
daa
lret
mov
dec
pop
rcrl
ffreep
cmp
repnz
cmp
sbb
lock
aas
loop
fpatan
push
ss
jg
xchg
js
iret
outsb
inc
shlb
les
shll
jo
andl
popf
roll
pop
hlt
in
aaa
adc
sub
sbb
inc
ja
push
and
fcompl
jbe
pusha
inc
sbb
es
mov
inc
sarb
sbb
xor
sbb
xchg
lahf
aam
insb
in
adc
xor
dec
test
pop
push
mov
in
push
scas
dec
and
add
lock
out
adc
arpl
and
shll
jo
and
stc
push
lock
pushf
insl
cmpsb
sub
jl
pop
bound
fmull
lds
shrb
or
mov
in
xor
test
das
in
dec
js
dec
mov
jge
pop
mov
and
add
and
dec
and
sbb
sbb
arpl
or
notb
pop
xor
inc
pop
arpl
aaa
inc
jge
stc
sti
and
xor
adc
xchg
dec
jmp
jno
and
rcrl
inc
fnstsw
cmpsl
and
add
sbb
push
das
xorb
mov
adc
das
and
sahf
push
ljmp
out
rcl
inc
bnd
cmpsl
sbb
sub
pop
cmp
xchg
lret
std
adc
mov
lret
in
jge
push
sbb
sub
cltd
fstl
das
mov
mov
fbstp
cs
push
xchg
les
outsb
jmp
fstps
push
stos
push
jno
jne
ja
push
and
inc
loopne
lret
mov
jle
addr16
test
mov
inc
data16
mov
xlat
test
dec
in
push
mov
lret
inc
lcall
adc
add
loopne
sbb
adc
ss
mov
dec
lret
movsb
sbb
std
jl
push
sti
ljmp
stos
inc
mov
movsl
dec
loop
ss
leave
popf
adc
rcr
pop
add
pop
adc
pushf
push
sbb
stc
out
mov
inc
es
mov
and
cmpsl
push
sub
fwait
rcl
repz
inc
push
jp
int3
lcall
int3
xor
out
lods
lahf
loopne
repnz
xchg
mov
call
mov
aas
out
pop
push
iret
mov
sahf
bound
push
movsb
mov
adc
es
lret
and
push
xchg
sub
xor
cmpsl
sbb
add
popl
push
in
arpl
sbb
nop
add
or
and
jae
adc
mov
jmp
sub
inc
and
or
xor
in
jne
mov
adc
push
cs
xlat
pop
add
lea
idivl
mov
sbb
iret
mov
dec
push
ret
mov
lds
lods
int
push
push
cmc
pop
ja
pop
push
jnp
xchg
xlat
mov
lds
dec
clc
dec
aad
jecxz
and
in
push
mov
dec
cwtl
aam
add
mov
push
push
mov
in
mov
mov
and
or
pop
cwtl
xor
cs
inc
mov
imul
in
pop
cmp
adc
xchg
mov
outsb
repz
jg
cli
jmp
jno
jmp
fldl
sub
dec
scas
icebp
stc
mov
frstor
sub
push
rolb
xor
sbb
or
and
push
dec
movsl
enter
dec
orb
adc
call
out
repz
lcall
cltd
aam
push
mov
bound
sahf
lcall
aas
call
mov
stc
out
fnstenv
lods
push
int3
cmp
std
inc
in
pushf
ret
mov
mov
mov
adc
and
les
jge
lods
cltd
insb
and
sahf
xchg
xlat
jbe
aad
pop
out
add
int3
or
cs
push
and
pop
mov
xchg
jecxz
dec
xor
pop
cs
dec
sbb
jp
aaa
ret
inc
lea
inc
pusha
lds
add
outsb
movsl
lcall
inc
dec
sti
jnp
inc
push
and
push
scas
imul
lock
hlt
repz
xchg
cld
repnz
std
gs
adc
sub
jle
ds
dec
xchg
cmp
jno
xchg
cwtl
jbe
fwait
sub
addb
je
scas
aas
hlt
mov
xchg
mov
dec
add
loope
inc
jno
mov
add
or
xor
and
mov
mov
or
jbe
push
cld
xchg
cmp
lock
or
xchg
add
cmp
in
pop
rorl
mov
jae
loope
shll
and
int3
lret
adc
daa
int3
int
sbb
mov
sbb
and
jg
xorl
and
call
out
mov
push
push
mov
inc
in
jae
popl
lods
sub
jno,pn
aam
add
enter
adc
movsl
or
cmp
shl
fsubrs
movsl
jns
lcall
sbb
add
or
scas
jae
and
aam
test
xchg
repnz
and
notl
enter
sub
mul
jg
adc
push
movsl
gs
mov
pop
add
mov
stos
push
pop
xorb
enter
and
dec
cmp
test
fsubrl
or
mov
lock
mov
jbe
fsubs
rcrb
jo
sarl
cwtl
addr16
ja
or
push
popf
jne
mov
fisttpll
loope
pop
fninit
int3
pop
adc
stos
repnz
mov
add
mov
notl
and
xor
arpl
pop
lcall
push
fistps
pushf
call
mov
in
lods
movsb
mov
xchg
mov
adc
push
mov
sub
mov
sub
xor
mov
mov
pop
inc
popf
dec
mov
les
jae
add
jae
les
fs
int3
std
fsubs
test
incl
int
nop
xor
pop
dec
push
mov
inc
mov
xchg
pop
aad
sbb
mov
push
in
js
dec
popa
in
sti
xlat
dec
push
repnz
jne
popf
jo
jbe
mov
inc
movb
sahf
call
push
gs
adc
leave
flds
imulb
pop
clc
xor
pop
inc
rcrb
mov
cmp
jl
dec
das
imul
pop
xor
daa
pop
sub
arpl
fwait
pop
out
lahf
pop
int3
mov
sub
mov
insl
mov
cmc
push
lock
add
xchg
hlt
lcall
mov
inc
lret
pop
xchg
xchg
movsl
cmc
mov
add
pop
mov
aaa
xchg
cs
outsl
test
xor
adc
repnz
add
or
add
test
cmp
fimull
cs
inc
inc
cmc
jo
xchg
xchg
xor
sti
jae
xor
and
cmpb
idivb
test
dec
addl
fsubrs
xor
sub
dec
imul
and
cwtl
test
dec
cli
xor
mov
xchg
imul
cld
push
add
xor
roll
inc
adc
fstp
mov
stos
or
jg
in
mov
enter
cmpsb
mov
cmp
stos
popf
addb
shl
icebp
inc
cmc
sti
mov
out
aam
aaa
mov
push
into
sahf
outsb
lret
or
stos
out
add
arpl
sahf
jne
mov
adcb
jmp
xchg
gs
sti
inc
outsl
push
je
les
pop
bound
repnz
subb
mov
lods
scas
add
mov
lahf
rcl
push
leave
sub
mov
ret
or
sub
sbb
dec
dec
pop
cld
push
adc
lods
fwait
adc
add
insl
test
in
lds
jecxz
iret
mov
xor
mov
mov
cmpsl
das
xchg
fxch
mov
stos
loope
add
addr16
xor
data16
xchg
fmuls
mov
mov
push
jl
pop
decl
pop
jno
nop
lods
les
out
xchg
xor
jg
xor
inc
xor
outsb
xor
adc
adcl
ret
add
sbb
mov
sub
dec
sub
mov
int
ret
loopne
mov
jnp
das
addps
loop
xor
data16
in
sbb
cmpsl
into
xlat
adc
out
ja
fisubrs
dec
mov
out
mov
push
jbe
imul
data16
jmp
mov
push
dec
jnp
fs
push
adc
dec
notb
mov
push
add
add
stc
aad
loop
outsb
fisubl
stc
cmpsl
jo
xor
test
cmp
inc
in
stos
or
sub
ret
aas
faddl
mov
loope
inc
testl
and
dec
cld
insl
adc
mov
adc
jge
fst
arpl
inc
dec
inc
jg
xor
cmpsl
lods
mov
adc
mov
pop
inc
inc
cmpl
push
jle
ret
fwait
ds
sbb
mov
ja
addr16
pop
hlt
lcall
jb
adc
jecxz
mov
push
fimull
mov
dec
and
fists
jnp
sub
mov
pop
adc
cmp
mov
rorl
and
fisttpll
movsb
push
add
mov
dec
jb
lds
jae
lds
inc
pop
cmpsb
adc
push
fcoms
in
mov
cmp
adc
sbb
andb
cld
xor
aaa
xor
push
sbb
je
push
and
scas
int
or
xchg
pusha
enter
addr16
bnd
sbb
adc
sub
enter
dec
pop
imul
jae
int
sbb
mov
push
imull
sahf
ds
mov
inc
xchg
mov
mov
mov
movq
push
rolb
dec
insb
xchg
sbb
inc
cmp
stos
jnp
sti
or
je
loop
lds
add
into
mov
movsl
insb
imul
cmpsl
fisubrs
loop
or
sahf
jl
stc
xchg
data16
jb
add
push
das
ja
pusha
jle
mov
inc
cmpl
es
loopne
sub
push
or
popf
mov
sub
jbe
loope
js
mov
cmpsb
enter
push
hlt
out
sub
rcr
out
xlat
icebp
sub
repnz
push
out
subb
or
stc
cwtl
aas
cmp
pop
fdivrl
cmpsl
jmp
push
inc
mov
fimuls
pop
xlat
bound
add
in
add
outsl
adc
mov
add
or
in
fisubrs
pop
xlat
adc
xor
mov
cmp
xchg
ds
lret
aam
push
or
les
cmp
adc
add
in
int
mov
in
idivb
xchg
fistl
and
jmp
pop
ror
imul
push
cmp
fldcw
mov
xor
and
mov
sbb
ss
jge
fdivr
into
divl
push
int
inc
fimull
testl
outsl
dec
sbb
and
xchg
xor
dec
cmpsl
pop
mov
jge
sub
dec
rol
xchg
iret
bound
pop
in
jnp
mov
es
xorl
lcall
add
or
ljmp
jno
out
les
lea
arpl
inc
into
jo
movsl
gs
mov
or
jp
nop
cltd
pop
push
adc
push
dec
fcoms
je
inc
imul
mov
fwait
cltd
xchg
xchg
div
adcl
test
test
jno
pop
sub
sbb
int
aas
rorb
fiadds
pop
cmpsb
xchg
jp
inc
iret
push
mov
pushf
adc
add
aaa
sub
mov
std
pop
in
movsb
jge
adc
cli
test
subb
push
fisubs
mov
mov
mov
add
aas
enter
mov
sbb
adc
lret
cwtl
jge
pop
out
add
jecxz
out
inc
xchg
cs
mov
gs
fld1
cmpb
pop
xchg
mov
ljmp
xor
pushf
jp
mov
xor
and
fstpt
es
add
xchg
cmpsb
into
daa
mov
lea
repz
ljmp
push
jle
and
js
mov
cli
jmp
gs
fcompl
lods
xor
int
jle
paddusw
fwait
sbbb
cmp
mov
dec
adc
push
adc
xor
pushf
stc
mov
or
cwtl
nop
shl
stc
ret
jns
loopne
push
cmp
xchg
xchg
inc
add
incl
nop
popa
testb
outsb
aas
jbe
and
mov
andl
jle
ret
adc
rcll
adc
sub
or
das
inc
shll
jns
lret
jmp
sub
ret
je
jae
pusha
stos
loopne
cmp
push
mov
xchg
insb
xor
and
out
cmc
loopne
add
dec
pop
mov
sbb
mov
mov
je
sbb
cmp
out
arpl
dec
xchg
aam
jbe
mov
orl
sahf
and
int
xchg
xor
dec
mov
ret
mov
ds
jmp
jns
dec
jae
and
cmp
dec
shrl
adc
cmp
jnp
cmpsb
xchg
mov
sbb
sbb
inc
push
addr16
out
jmp
sti
push
enter
je
adc
faddl
dec
lock
push
std
sub
stc
and
xchg
scas
rorb
jecxz
fdivp
arpl
sub
ficompl
outsb
push
stc
dec
jp
dec
mov
fsubl
mov
insb
push
in
cmpsl
fs
xchg
or
into
test
pop
sbb
arpl
sub
cmp
movsl
dec
cld
mov
bound
cwtl
pop
xor
or
mov
ljmp
or
cmp
cs
out
mov
out
out
repnz
xchg
les
jle
aaa
mov
out
in
add
push
lods
adc
jb
fwait
imul
cld
loop
xchg
out
imul
rcll
iret
cmc
fisubs
fs
repnz
jns
jno
mov
pop
jg
push
testb
leave
xchg
repnz
call
jo
or
out
xchg
in
outsb
pop
pop
sub
xchg
push
pop
ficompl
pusha
inc
sahf
jno
hlt
inc
popa
in
fidivl
test
inc
mov
jg
fcomps
lds
sbb
dec
and
fisubs
pop
pop
push
out
sbb
cwtl
or
aas
rcrl
sbbb
js
cmp
inc
adc
xchg
jmp
jns
push
mov
or
out
sbb
jp
lock
jo,pt
outsl
inc
xchg
jg
es
inc
or
lret
aad
dec
shrl
or
pop
call
fstl
sub
mov
xor
popa
pop
inc
jns
incb
push
push
adc
lret
mov
adc
sbbb
cmp
cmp
xchg
popf
push
and
xor
xor
jmp
adc
imul
andb
jno
lcall
push
or
cmp
fcoms
and
jge
mov
lods
mov
add
ds
cmp
sbb
fs
dec
scas
rclb
ja
sub
shrl
mov
or
outsb
ficoml
cmp
jecxz
mov
bound
pushf
push
in
mov
rorb
or
lahf
pop
mov
cmc
out
jnp
sbb
push
in
lods
cmp
cmp
pop
cmc
dec
ficompl
jg
sbb
pop
test
ret
mov
loope
aaa
aam
mov
inc
rcll
inc
out
xor
aaa
cmp
outsb
test
mov
cli
cmc
inc
lods
cs
lret
xchg
and
pop
push
pop
sbb
js
js
dec
int
xor
jno
scas
cmc
repnz
pop
xchg
or
in
cld
ret
add
jle
sti
cmc
cmp
sahf
cmp
sbb
inc
cmp
add
jge
std
adc
data16
test
mov
je
cmp
mov
sbb
push
push
out
dec
mov
iret
add
add
loopne
mov
or
les
gs
mov
popf
jno
cmp
mov
sarl
scas
or
jo
mov
sub
mov
push
xor
push
cmp
lahf
and
jnp
or
mov
add
std
xor
sub
popa
sbb
punpcklwd
push
sbb
push
xor
outsl
lods
arpl
cwtl
addl
push
cmp
leave
call
mov
xor
andb
pusha
jnp
and
aas
aas
dec
stc
ret
jno
and
out
jecxz
loope
repz
sub
int3
cmp
js
inc
push
inc
imul
pop
xchg
out
shl
jmp
ret
push
dec
pop
out
jns
mov
and
mov
in
into
or
mov
push
cmpsl
xchg
addr16
popf
dec
inc
dec
jmp
nop
sub
jle
shrb
out
mov
mov
xchg
pop
lcall
aam
int3
pop
pusha
sbb
dec
int3
fildll
xchg
das
lods
xchg
fcmovu
push
push
popa
push
and
lret
dec
out
stc
xchg
add
cmp
aam
mov
mov
nop
outsl
leave
cwtl
aas
jns
jne
shll
dec
mov
inc
loop
lcall
push
shlb
js
mov
rolb
mov
push
mov
mov
xchg
lods
insl
dec
popa
mov
mov
in
sbb
test
mov
and
test
jp
leave
shlb
nop
jmp
dec
addr16
mov
mov
aad
sub
cltd
sbb
jle
popf
or
lods
mov
mov
pop
and
mov
ljmp
lret
pop
iret
mov
pop
stc
adc
add
arpl
jno
lods
xor
mov
mov
insl
mov
cltd
repnz
jns
sub
arpl
inc
or
mov
sub
repz
jg
stc
cmc
inc
sahf
mov
mov
adc
movsl
xchg
cs
mov
out
nop
push
ja
push
xor
xchg
std
fildll
test
roll
mov
or
sbb
xor
inc
jne
js
adc
sub
nop
rcl
aas
adc
xchg
out
outsl
test
clc
inc
inc
mov
push
repz
je
xchg
cli
dec
lods
sub
inc
outsb
out
in
mov
pop
and
hlt
jbe
pop
out
orb
neg
sbb
stos
lea
ret
fmull
sbb
pop
ja
loop
cmp
movsl
ljmp
leave
sub
xchg
cmp
mov
pop
iret
scas
xchg
push
mov
ret
subb
fidivs
push
xchg
dec
push
xchg
jnp
mov
jp
shr
mov
jno
cmc
mov
and
mov
xor
jg
lea
inc
stos
add
sub
das
enter
stos
es
xchg
fldcw
and
adc
xchg
jge
sub
pop
mov
pop
xor
outsl
jecxz
repz
movsl
divl
cmp
xor
ret
cmp
jae
int
jae
inc
sti
add
lcall
sbb
sti
jno
inc
xor
xor
pop
pusha
lahf
fs
inc
push
adc
fucomi
in
dec
jns
push
add
and
sbb
pop
xchg
cwtl
lcall
mov
in
insb
jge
inc
inc
out
test
sub
aaa
inc
fwait
movsb
leave
push
and
andl
jle
cli
adc
push
stos
call
rol
lahf
ljmp
mov
rolb
cwtl
pop
es
fwait
pusha
cltd
js
cmp
xor
pop
mov
mov
scas
and
inc
adc
lods
int
xchg
mov
sbb
std
pushf
mov
ret
hlt
mov
adc
jnp
adc
jge
daa
sbb
mov
mov
pop
arpl
shr
xor
sbb
xor
call
loopne
adc
test
mov
xchg
push
mov
fsts
cmp
aaa
popf
mov
lret
mov
push
inc
jnp
add
xor
fildl
lds
es
inc
fdivs
inc
test
addr16
sbb
and
pusha
mulb
imul
out
push
lea
or
adc
cmp
push
inc
sub
repnz
pusha
lret
out
fildll
mov
testb
adc
shrb
popa
jge
fptan
or
xor
cmp
aad
js
add
fsubs
addr16
out
fs
dec
mov
inc
into
xor
popf
and
add
inc
push
sbb
mov
pop
leave
jb
xor
sti
push
xor
popf
out
push
fldenv
ss
dec
or
mov
jmp
or
scas
add
sbb
in
inc
mov
leave
mov
jns
jle
mov
pop
and
mov
mov
pop
mov
push
push
test
push
xchg
pop
cmp
cs
fdiv
fwait
mov
fwait
jns
mov
cltd
and
rcr
sbb
push
sbb
cmpsb
and
into
outsb
sbb
mov
mov
test
scas
in
xchg
aas
out
inc
call
mov
mov
push
jnp
push
mov
inc
or
cmc
sub
jb
inc
out
rcr
je
int3
insb
test
fwait
fwait
pop
xorl
mov
fsubrl
mov
sub
cmp
add
xchg
adc
mov
test
and
pop
xchg
xor
je
insl
and
add
leave
popa
lret
xor
jmp
push
xchg
rcr
push
cmp
test
orl
fstpt
jp
sub
fnsave
pop
sub
pop
inc
imul
psubb
add
repnz
mov
dec
std
cmp
aad
scas
xor
cmp
and
mov
mov
divl
out
in
lods
subb
pusha
arpl
pushf
sbb
pop
aam
les
xchg
cmp
dec
test
mov
and
push
or
push
fnstenv
cmp
call
mov
out
fildl
jns
idiv
lds
ljmp
fwait
in
inc
ljmp
add
int3
fdivrs
rolb
lret
cltd
pop
pop
ror
mov
int3
std
sti
inc
push
scas
sub
mov
aas
das
fnstsw
jp
and
stc
lds
rcrb
cmp
pop
aad
sub
mov
ds
cmp
fstpt
push
jns
gs
jp
cli
fstl
int
mov
mov
mov
movsb
cld
cmc
divl
mov
jns
xor
pop
mov
arpl
adc
icebp
aaa
mov
adc
ret
pmulhw
xchg
xor
lret
test
test
jmp
ljmp
jnp
dec
stos
int3
punpckldq
jge
cmpsl
mulb
andl
mov
jge
cltd
xor
cmp
lds
or
fiadds
xchg
sub
pop
fadd
cltd
shr
into
addr16
mov
mov
aam
sbb
nop
lcall
jne
jae
sahf
jp
in
scas
or
sub
outsl
enter
or
mov
and
adc
paddd
and
cld
mov
cwtl
rorl
pop
cmpsl
call
xlat
or
lea
cs
push
push
out
stos
cwtl
fcmovnb
cld
ljmp
jno
movsl
out
xor
das
adc
clc
fs
pushf
and
decb
ljmp
lcall
fldt
inc
push
push
cmp
jnp
jae
push
test
add
inc
jno
loop
popf
inc
cltd
dec
adc
inc
inc
push
nop
sbb
pop
call
clc
ret
jno
das
push
mov
jae
inc
push
cmp
aam
jg
adc
lock
add
je
aaa
push
test
adc
popf
adc
push
sarl
xor
int
cs
das
inc
cmp
mov
repnz
push
pop
paddd
popl
inc
cli
out
jne
mov
inc
lds
cmpsb
repnz
shl
iret
and
pop
dec
dec
jecxz
pusha
outsb
push
bound
outsb
or
test
cmp
cmp
inc
jb
jecxz
sbbb
jmp
lods
lahf
mov
add
jmp
repz
lahf
imul
insb
mov
lret
loope
pop
shl
sub
ret
nop
sti
popf
xchg
dec
adc
xor
mov
aaa
xchg
mov
int3
mov
ret
mov
mov
push
sub
lcall
outsb
cld
scas
push
ret
sbb
jns
call
mov
jecxz
jp
out
out
lods
fmuls
popf
gs
std
add
nop
fstpl
nop
xor
mov
jecxz
or
fnstenv
inc
xchg
cwtl
dec
and
add
xchg
push
jecxz
ds
in
stos
cwtl
clc
mov
cmp
mov
fmuls
cmc
std
call
jns
js
test
xlat
lea
ror
sarb
mov
jb
push
mov
pop
cmp
bound
jmp
pop
jl
pop
push
inc
or
ljmp
imul
int
in
repnz
loope
subb
jno
mov
imul
push
minps
rcr
dec
negb
jp
cli
test
movsb
push
and
xor
shrl
mov
jecxz
out
add
pop
push
xchg
jl
adc
jmp
stos
mov
dec
inc
xchg
pop
pop
xor
out
icebp
adc
dec
jl
add
jno
xor
pop
dec
sbb
and
lahf
ds
mov
dec
cmp
mov
ja
test
movsb
fiaddl
dec
and
adc
mov
mov
arpl
xchg
adc
dec
jbe
sbb
stos
je
fs
sub
mov
ret
push
test
add
sar
shr
pushf
cmp
push
cld
int3
lret
xlat
lea
sub
shl
mov
mov
push
loopne
and
jmp
dec
ljmp
icebp
dec
sahf
mov
jecxz
jne
imul
push
sub
inc
out
out
dec
dec
les
pop
adc
out
xor
inc
mov
fsubl
dec
mov
mov
imul
inc
mov
sti
sarb
fidivl
lods
mov
add
fs
inc
cwtl
sbb
push
sbb
iret
pop
loopne
inc
xchg
mov
loopne
pusha
dec
lock
inc
lret
xlat
fsubs
xchg
imul
cmpsl
push
das
adc
cltd
push
jmp
cmpsl
pop
negl
mov
mov
pushf
loopne
mov
lock
inc
dec
dec
mov
xchg
sub
inc
rolb
push
notb
xchg
out
jmp
jp
pop
fwait
sbb
sbb
enter
in
push
mov
mov
lret
repz
mov
call
addr16
inc
ljmp
jl
out
ja
xchg
cld
imul
sub
daa
test
jae
out
stos
andb
jl
es
jg
mov
dec
cmp
stc
sbb
sbb
in
sahf
in
cltd
xchg
mov
rorl
mov
and
pop
sub
popa
mov
pusha
mov
jne
sub
jb
aam
and
repz
shr
cs
mov
cmp
out
adc
sbb
popf
out
adc
sti
cli
dec
test
rcl
jb
dec
scas
jp
push
rcr
sub
out
es
cwtl
adc
adc
mov
sub
mov
rcr
mov
or
add
fdivl
cmpsb
xchg
jmp
pop
xchg
shl
lcall
jns
sbb
fxch
dec
pop
jecxz
mov
push
popl
adc
inc
mov
mov
xchg
push
inc
fdivrl
movsl
hlt
pop
punpckhdq
push
mov
push
or
or
and
int3
jb
xor
pop
ret
pop
jae
pop
rcr
out
mov
fstl
out
jae
rcrl
xlat
les
sub
jg
data16
cmc
sub
cmp
adc
add
lret
xchg
mov
adc
aad
lock
ss
fisttpll
cmpsl
push
subl
adc
mov
cmpsl
xchg
incb
arpl
imul
js
jns
adc
and
movntps
dec
imul
cmp
mov
jne
mov
into
bnd
pushf
sbb
adc
lods
adc
jmp
xorb
cmp
or
jmp
xor
outsb
or
jo
pop
cli
movsl
dec
dec
sbb
scas
push
rolb
mov
in
es
xor
adc
sbb
loope
push
shlb
pushf
push
stos
cltd
xor
movsb
inc
mov
out
nop
mov
and
xchg
cs
jae
insb
je
jns
and
fdivs
hlt
inc
lds
lret
cld
inc
je
test
xchg
cmp
add
sub
jecxz
add
out
cmpsl
jbe
pop
adc
test
mov
and
jno
jmp
jle
add
and
rorl
push
or
add
sbb
out
adc
hlt
jmp
cmc
stos
inc
lahf
test
adc
je
lods
mov
int
sub
popa
inc
cmp
adc
mov
sub
jg
jp
adc
xchg
cmp
xor
mov
out
clc
cmp
dec
push
push
push
push
xchg
inc
scas
in
rorb
adc
push
push
inc
mov
dec
xchg
popf
xchg
mov
loopne
rcll
test
and
mov
inc
mov
rcl
inc
in
pop
icebp
adc
xchg
inc
inc
jg
mov
jbe
movb
pushf
insb
adc
xorl
add
push
xchg
sbb
xor
sub
mov
js
cmp
lds
mov
data16
and
adc
out
in
xor
imul
aam
rcl
out
rclb
repnz
pop
or
aam
or
xchg
or
loope
loop
sahf
mov
adc
mov
pop
push
cmp
add
jle
dec
sub
xor
sbb
cmp
push
mov
xlat
in
ds
mov
ljmp
jbe
jae
jl
pop
push
mov
outsb
aad
or
daa
sbb
sahf
fwait
pop
movsb
inc
xor
lods
cmpb
mov
les
push
mov
add
cmc
fsubrl
sbb
dec
nop
addr16
sub
insl
sbb
xchg
iret
movsl
in
sbb
enter
addr16
push
rcrb
data16
sub
pop
adc
dec
mov
jl
scas
jo
bound
mov
lea
xchg
addl
xchg
or
xchg
adc
fs
sbb
loop
pop
hlt
aaa
repz
clc
aad
mov
mov
stos
test
leave
push
popa
hlt
out
sub
cmpb
push
mov
add
pop
pop
push
fs
jl
sub
dec
mov
fldenv
xchg
call
mull
and
stos
xorl
jg
jecxz
scas
xor
cmp
imul
cmp
insb
mov
lds
dec
and
leave
inc
leave
lret
sbb
pushf
mov
mov
insb
pop
push
xchg
out
sahf
sbb
xor
popa
mov
mov
mov
push
fs
xlat
repz
out
insb
or
adc
fwait
les
inc
push
mov
ret
popf
out
lods
out
ficompl
cld
inc
inc
xor
push
inc
jle
lods
js
movsb
arpl
cmp
aad
mov
inc
je
fisttps
mov
mov
and
jns
mov
loope
out
pushf
xor
push
push
xor
or
dec
fcom
ljmp
add
xor
lea
ret
insb
in
loop
popa
fcmovnb
out
in
cli
push
add
lret
cmp
adc
lods
or
push
inc
clc
jno
pop
mov
aad
push
xor
pop
mov
sbb
push
cmp
cmp
das
pop
mov
pop
mov
pusha
pop
hlt
mov
aas
scas
xchg
jge
test
pop
imul
cmp
jecxz
mov
pop
dec
stc
mov
test
push
mov
inc
into
xor
sub
es
ljmp
inc
cmp
mov
push
adc
mov
cli
pop
xchg
add
stos
mov
les
adc
or
ds
adc
or
add
or
xchg
fisubs
push
add
mov
adc
dec
mov
sahf
lahf
sub
scas
mov
or
in
stos
xchg
add
sarl
aad
imul
ljmp
pop
in
jae
cmp
mov
jg
and
rcrb
shlb
lods
sub
and
test
and
and
out
test
and
rcr
dec
ljmp
add
lods
mov
xchg
xor
loop
repnz
dec
pop
jb
stos
data16
inc
mov
jl
testl
adc
fwait
dec
inc
hlt
dec
push
movsl
imul
out
xchg
or
push
movsb
fstp
mov
cltd
ret
or
pop
stc
jb
bound
sbb
or
or
sbb
pop
dec
xor
xchg
dec
dec
pop
ja
xor
les
scas
mov
or
iret
loopne
das
mov
fisubrl
sub
dec
clc
fwait
cmp
mov
and
ret
cmp
mov
cmp
add
js
sbb
imul
push
push
inc
sti
orb
jb
ds
lds
xor
loope
das
xor
xor
sub
insb
mov
dec
xchg
and
jl
loop,pn
insl
int
push
push
mov
fsts
push
stos
jp
pop
sbb
xor
xchg
push
push
lret
sub
or
out
dec
cld
add
mov
stos
mov
sbb
pop
leave
sub
dec
in
inc
xor
aad
dec
mov
addb
lcall
sahf
imul
inc
ret
rorl
mov
mov
dec
std
out
iret
xchg
pop
xlat
lcall
pop
mov
loop
add
mov
xchg
xchg
mov
nop
xchg
pusha
jmp
aam
aam
push
push
in
loopne
and
push
popa
pop
fucompp
ret
mov
xchg
mov
xchg
jle
testb
repz
sete
or
sub
sahf
into
pop
mov
je
lret
shl
cmp
push
addr16
iret
adc
sahf
push
cmp
jmp
loop
and
inc
pop
insl
std
mov
sbb
fildll
test
std
vmovsd
adc
and
mov
or
lahf
pop
xor
add
pop
sub
js
lret
sbb
sbb
mov
inc
and
addb
aam
inc
adc
mov
jmp
cmp
push
aad
mov
rcrl
test
ja
pop
aas
test
in
mov
push
xor
cmovne
lret
mov
outsb
add
xor
adcb
sub
xchg
cmp
jmp
inc
ss
xchg
std
cmpsl
int
add
sub
push
pop
ret
subb
xor
jle
jns
cmpsb
xor
iret
jl
dec
xchg
mov
dec
es
out
stos
mov
int
in
fidivl
xchg
fwait
add
pop
xor
fstps
cwtl
xlat
fidivrl
mov
ja
fdiv
pop
or
loope
xor
pop
fdivrp
repnz
outsb
cmp
pop
in
stc
inc
push
adc
aas
and
or
cmpl
jb
stos
dec
mov
fisubs
or
rolb
cwtl
scas
push
adc
test
movsl
cmp
sub
in
xchg
lret
xchg
in
ret
jmp
push
in
xor
fistps
iret
cbtw
loopne
gs
sbb
insb
fisubrs
loopne
sub
xlat
mov
sbb
jnp
int3
jo
cmp
mov
push
stos
and
into
dec
add
fildll
inc
inc
jne
jle
push
pop
dec
les
addr16
ljmp
dec
lds
pop
ret
dec
inc
scas
aam
in
or
out
jge
subb
nop
pop
mov
fnsave
lret
jge
adc
repnz
cmp
cli
ucomiss
sub
insb
and
jmp
jmp
adc
jnp
push
mov
pop
ret
in
sbb
lahf
cwtl
jnp
repz
xchg
shlb
add
and
sbb
push
in
stos
fisubrs
stc
mov
mov
fwait
dec
cmpsl
push
scas
arpl
cmc
jbe
adc
cmpsl
cltd
mov
orl
iret
and
dec
jae
or
and
mov
dec
psubusb
lock
xchg
js
repz
fnstenv
jge
ret
jmp
jns
insb
dec
xchg
inc
pushf
inc
mov
add
cld
and
mov
sub
les
loope
pop
mov
aam
adc
add
bound
jnp
cmp
rol
sti
push
repnz
outsb
xchg
push
out
mov
jno
int3
cmp
outsl
push
cld
cs
xchg
cmpb
xchg
xchg
gs
in
cmc
mov
mov
aaa
push
je
fcmovu
push
sbb
lea
out
repz
in
or
jmp
lahf
aaa
shrb
inc
mov
dec
xchg
pushf
jge
divb
mov
shl
jmp
clc
xchg
in
iret
pop
jl
es
add
pusha
repnz
cltd
sub
adc
sti
push
dec
adc
jl
xor
xchg
mov
cmc
push
xchg
jg
push
fmul
inc
jecxz
lds
mov
xchg
bound
test
cld
pop
inc
mov
scas
sub
push
in
in
das
repz
lods
xchg
out
jne
das
cmp
mov
sarb
pop
sarb
ss
jle
jb
lods
pop
inc
dec
dec
int
mov
adc
dec
aaa
pop
cmpsb
popf
sub
jge
rorl
add
jmp
mov
arpl
mov
popa
lods
loopne
leave
loope
sbb
xchg
pop
cltd
icebp
mulb
jbe
pop
and
dec
mov
repnz
lret
xchg
sbb
mov
in
pusha
and
cmpsl
out
mov
mov
or
pusha
jge
divb
dec
push
test
mov
or
cmc
xlat
out
lea
push
out
pop
mov
cli
push
add
inc
jg
lods
adc
add
xor
pop
scas
mov
cmp
or
out
pushf
shll
xlat
sahf
lods
push
xor
jmp
jno
mov
jg
hlt
and
xor
ret
sbb
ja
or
jb
ret
lahf
lcall
mov
xchg
lahf
xchg
adc
out
mov
out
pop
pop
jnp
in
mov
jns
add
cmp
adc
test
lods
faddl
add
sub
out
cmp
inc
mov
and
dec
ret
and
cs
lret
add
into
and
repnz
xlat
mov
stos
xor
jae
in
ja
pop
cmp
adc
testl
call
jns
movsl
rorb
ficomps
and
scas
decb
push
pop
mov
insl
ret
xor
iret
inc
lret
stos
sti
ret
adcl
jbe
cmp
xlat
bound
pop
sub
push
repz
sub
adc
inc
or
xchg
cwtl
out
push
lods
push
lcall
or
jecxz
leave
aad
mov
insb
scas
or
adcl
inc
xor
cmc
pushf
int
xchg
je
imul
arpl
xor
pop
fucomp
test
mov
testl
xor
out
xchg
mull
pop
out
and
cmp
mov
movsb
dec
aaa
and
cwtl
adc
push
mov
shlb
sub
insl
xor
movsb
cmp
rolb
push
and
in
dec
mov
fs
movsl
xchg
mov
inc
fwait
sti
inc
insb
add
cs
mov
loopne
sti
pusha
cmpsb
shrl
push
or
lahf
xchg
mov
push
pushf
adc
lods
ss
or
mov
xchg
js
gs
mov
jp
stc
or
xchg
fstl
inc
out
mov
jno
in
sbb
mov
adc
xchg
cmpsb
xchg
out
movl
js,pt
in
cmpb
popa
mov
addr16
mov
sbb
stos
divl
mov
lock
outsb
into
jns
and
mov
cmp
mov
add
lea
es
js
out
and
dec
cli
stos
mov
xchg
push
loopne
cmp
mov
stc
pop
call
pusha
ret
jo
ja
pop
push
out
mov
rorl
enter
clc
mov
adc
inc
and
pushf
scas
sbb
outsl
lcall
rcrb
sub
and
xlat
pop
out
sahf
mov
outsl
add
adc
mov
lret
xchg
fisttpll
mov
mov
mov
jne
xor
xor
ret
xchg
mov
movsl
xchg
test
dec
int
push
and
sbb
pop
jae
std
cmc
cmp
pop
inc
or
bound
loope
inc
scas
pushf
jle
mov
adc
enter
jbe
jbe
or
daa
cmp
xchg
or
or
and
or
inc
outsl
add
or
aad
adc
add
jle
out
into
or
xchg
mov
clc
mov
and
les
jp
or
xor
cltd
add
cmp
mov
in
js
fsts
outsl
push
int
pop
dec
mov
jmp
pushf
loop
mov
daa
test
outsb
out
iret
enter
dec
popf
ret
movsl
insl
lahf
inc
inc
hlt
mov
pushf
push
xor
lcall
sub
aam
insb
dec
adc
adc
es
aad
xchg
inc
push
in
in
scas
push
test
aaa
dec
fdivrs
mov
or
add
sahf
adc
jmp
lods
lods
daa
add
jp
and
hlt
ret
insl
mov
inc
leave
pop
sbb
in
testl
xchg
int3
pop
es
js
add
dec
insl
jg
cmp
out
jecxz
cmpsb
test
dec
or
push
push
out
mov
loope
xchg
mov
jbe,pn
rclb
je
ja
js
mov
stc
dec
orb
imul
test
jae
fs
jp
mov
loopne
leave
fisubl
xchg
adc
cmp
shlb
pop
adc
mov
push
jbe
hlt
dec
mov
mov
mov
sarb
loop
in
addl
dec
adc
xlat
sbbb
aas
inc
jge
add
mov
scas
dec
mov
out
add
push
popf
sti
pusha
mov
fcomi
sti
push
or
les
dec
dec
adc
fwait
cmpl
into
pushf
cmp
ljmp
ss
and
cmp
loopne
pop
add
and
aas
xchg
xchg
cmc
nop
cmp
aam
mov
lea
outsl
insb
imul
pop
loope
fpatan
mov
jmp
jecxz
fwait
add
dec
and
xor
pushf
add
lods
fs
xchg
jl
add
fistl
push
dec
pop
test
add
add
mov
std
je
push
mov
or
or
out
push
cmpsl
nop
push
outsl
and
imulb
jae
in
movsb
dec
cmc
les
xchg
push
rcrb
out
xor
mov
pop
ret
add
js
ret
mov
fstpl
stos
in
loope
loope
cmp
pop
or
mov
loopnew
leave
mov
pushf
sbb
outsb
sbb
and
push
paddd
sbb
ja
stos
mov
sub
adc
stos
cmpl
lods
dec
fs
int3
cld
out
or
add
imulb
or
push
cltd
sub
scas
push
cmp
aam
pop
add
or
and
jb
push
pop
push
hlt
sti
sahf
insl
rcrb
aam
lret
jl
jmpw
xor
mov
aad
push
pop
mov
aam
dec
data16
push
sub
cld
rcl
cwtl
push
pop
cmpb
inc
stos
ljmp
lret
push
jae
cli
pop
sbb
popa
mov
mov
sti
sarb
sbb
imul
mov
and
jbe
out
mov
stc
jecxz
or
xchg
mov
in
das
pop
cmp
adc
imul
add
in
xor
mov
mov
and
sub
mov
mov
movsb
fisubrs
jnp
dec
cmp
scas
out
stc
push
gs
mov
rolb
push
stc
push
sbb
push
and
cwtl
sub
dec
pop
scas
dec
mov
ret
dec
call
jmp
cmp
add
imul
out
movsb
lcall
pop
fwait
inc
mov
jns
out
out
sbb
test
sub
adc
xorl
dec
popf
and
add
int
pop
mov
sbbb
ret
or
and
sub
pop
sub
jbe
cmc
xchg
sbb
inc
jbe
lcall
pop
jne
sub
pusha
enter
test
push
sti
std
sub
lock
inc
insb
shl
pop
xor
fucomip
add
loop
outsl
gs
stc
mov
in
xlat
and
pop
mov
in
test
lahf
dec
lahf
jbe
jbe
imul
cs
jae
xchg
call
dec
jae
call
push
mov
inc
aam
sbb
int3
lods
arpl
cld
inc
out
xchg
shll
lahf
insb
scas
fldenv
sbb
pop
xchg
icebp
xor
scas
xor
and
int3
sub
or
dec
repz
clc
loopne
pop
sahf
repz
or
das
mov
out
loopne
adc
arpl
sbb
sahf
or
xchg
arpl
push
or
push
addr16
cmpsl
pop
mov
hlt
lods
sub
fwait
pop
pop
iret
pusha
adc
or
xchg
adc
shl
mov
mov
mov
and
mov
shr
add
lock
or
pop
dec
or
pop
and
mov
in
sbb
xor
mov
call
es
adc
inc
jg
jae
pop
out
xor
fs
xlat
out
imul
add
mov
sbb
lret
sbb
sub
jne
push
push
adcl
push
push
gs
mov
and
aaa
push
jecxz
addb
xchg
sub
cld
out
mov
jnp
cmp
gs
dec
outsl
lock
or
jo
xor
stos
arpl
sub
adcb
inc
pop
lcall
and
xor
enter
sbb
adc
shll
adcb
pop
fisubl
and
stc
rorb
pop
sahf
xchg
scas
jmp
movsl
ljmp
sub
and
xchg
pop
mov
imul
sbb
cmp
rcr
sbb
xor
gs
push
icebp
mov
adc
call
dec
ljmp
inc
pop
mov
sbb
cmp
add
cli
pop
sub
call
insb
lahf
fsubs
or
cmp
sbb
das
je
mov
divl
int3
sti
sbb
popf
testl
push
mov
fistpl
xchg
mov
es
dec
push
lock
sub
push
jecxz
mov
xor
cltd
dec
les
lret
add
or
adc
scas
push
fwait
xchg
xor
outsl
scas
adc
push
subl
pop
mov
je
aam
jno
jmp
or
cld
lods
cmp
sub
outsb
or
loop
pop
mov
sti
repz
lret
addr16
sub
fisubrl
xchg
fnstsw
aad
sub
and
fnstsw
pop
cs
pop
jnp
inc
divb
fidivrs
push
jge
inc
icebp
out
adc
ret
orl
enter
cmp
add
int3
out
xor
mov
enter
jo
loop
jo
sub
aaa
xor
ljmp
sarb
adc
repnz
loope
add
insb
pop
mov
jp
xchg
and
xchg
sti
push
roll
out
test
loope
data16
inc
pop
xchg
insb
repz
and
nop
mov
pop
adc
lods
or
repz
movsb
sub
in
sbb
popl
cltd
out
or
mov
push
adc
and
sub
jp
and
test
imul
dec
dec
stc
int3
mov
sti
lahf
pusha
or
mov
sub
or
mov
out
stc
popa
shll
sahf
in
negl
out
xchg
dec
and
push
js
jp
jge
sub
inc
aam
inc
mov
negb
outsb
push
and
test
out
je
jg
mulb
mov
mov
inc
bound
rorl
inc
faddl
nop
pop
lret
jg
pop
aas
test
loop
das
cs
orb
xlat
inc
test
push
push
ljmp
call
sub
fstpl
push
outsb
or
sub
sarl
repnz
jbe
jae
mov
sub
mov
mov
mov
mov
pop
test
loop
sbb
xorb
sub
sub
adc
add
jno
xlat
pop
ficompl
out
aaa
scas
mov
test
mov
mov
add
ret
andb
mov
sbb
enter
add
pop
add
les
mov
add
pop
rcrb
and
out
mov
cli
lock
mov
xchg
adc
mov
out
out
pop
imul
xlat
outsb
mov
rcll
dec
leave
stos
mov
push
adc
mov
cwtl
rorl
jb
mov
jmp
notl
mov
bound
sub
cmp
repz
mov
lcall
adc
sbb
cmc
mov
adc
sti
les
repnz
and
pop
add
push
stos
fdivl
push
dec
in
cmp
mov
loopne
jnp
test
adc
clc
pop
daa
imul
mov
loope
call
mov
add
and
push
cmp
sbb
das
jo
dec
mov
and
lea
push
int3
push
mov
mov
clc
jb
dec
sub
mov
xor
jno
std
cld
push
adc
repz
negb
or
xlat
inc
imul
mov
or
in
inc
jmp
inc
inc
lods
imul
pop
jnp
or
mov
jl
cmp
inc
ret
in
imul
test
inc
add
rolb
les
xchg
xchg
xor
xor
fdivs
lahf
bound
hlt
arpl
daa
rol
lock
out
inc
mov
iret
push
pop
mov
stos
cmc
cmp
inc
ror
notb
cmp
scas
sti
sets
cltd
pop
cmp
mov
iret
xor
inc
in
mov
out
cmp
nop
in
jmp
mov
mov
push
sbb
imul
fcompl
xchg
popa
ret
xchg
imul
jmp
repnz
mov
adc
push
cmpsb
dec
dec
cmp
jne
lret
mov
xor
inc
ret
jbe
std
movsb
and
nop
mov
mov
xor
andb
cmc
repnz
scas
pop
aaa
inc
inc
in
pop
shrb
lahf
adc
sbb
fnstsw
mov
sub
movsl
pop
mov
pop
aaa
imul
push
xchg
loop
lock
xchg
fidivl
lods
mov
jmp
pop
push
or
int3
out
shl
pusha
xor
sub
sub
or
test
jne
push
push
adc
ret
mov
movsb
pushf
out
andl
xor
jns
pop
aas
or
xchg
xchg
push
adc
push
insl
or
repz
mov
cmp
mov
cmc
mov
and
jp
or
sbb
fadd
or
mov
adc
xchg
add
jo
sub
outsl
mov
jne
pop
hlt
ret
xchg
pop
cmp
aam
cmpsb
adcl
xchg
inc
mov
in
mov
jp
bound
xchg
jo
insb
push
dec
mov
je
jge
shl
pop
pop
jbe
pop
xor
xlat
or
mov
mov
out
loop
pop
leave
repz
push
adc
dec
leave
dec
cmp
shlb
imul
lcall
xchg
sbb
jg
aam
into
imul
xchg
ud2
inc
cmpsl
sbb
and
stos
aad
mov
xchg
push
cmpsb
rcrb
pop
xor
mov
aam
lret
xlat
push
into
xor
call
je
mov
in
out
mov
adc
mov
or
negl
push
cs
loopne
out
ret
cmp
ret
cmp
inc
dec
and
mov
std
lret
pop
outsl
nop
push
in
push
inc
in
push
in
inc
fisttps
cltd
call
or
cmc
push
sbb
cmp
jl
out
jo
lock
mov
pusha
decl
jg
mov
mov
mov
in
xchg
pop
jmp
mov
popf
std
or
add
stos
push
shll
imul
stc
sahf
adc
inc
push
sbb
add
iret
scas
pop
push
jl
adc
jmp
jg
mov
movb
mov
test
jns
mov
pop
jb
jae
mov
push
push
mov
mov
xchg
repnz
ja
push
outsl
adc
adc
dec
sbb
mov
or
mov
cmp
or
xchg
mov
push
push
test
dec
sti
push
mov
fists
insl
or
push
or
sub
aaa
cwtl
aas
in
leave
arpl
adc
mov
push
decl
lahf
push
mov
ds
imul
push
out
fcompl
in
mov
jnp
out
enter
imul
xor
pop
dec
je
popa
mov
sub
jl
sbb
rolb
sub
mov
cld
fmul
movsb
ret
aas
sub
dec
sbb
lret
sub
mov
push
mov
cmpsb
loop
jbe
ffreep
jecxz
movsl
jbe
lea
cli
fwait
test
add
sar
insb
xchg
outsb
push
and
shr
push
pop
inc
scas
xchg
lds
les
mov
fdivrl
in
scas
mov
das
sbb
add
dec
fiadds
mov
adc
shlb
leave
inc
inc
popf
fs
jne
in
shlb
insl
frstor
fcoms
mov
std
mull
sub
in
sarl
pop
pop
sbb
inc
int3
push
adc
mov
movsb
sarb
leave
mov
aam
stos
pop
outsb
adc
xchg
mov
mov
mov
dec
mov
pop
movsb
test
in
dec
fs
cmp
mov
je
and
divl
xchg
subl
xor
shl
adc
add
int3
xor
sub
imul
clc
ret
fildl
mov
xor
adcb
mov
sbb
push
test
adc
jo
pusha
and
ja
and
movzwl
ds
inc
pop
or
mov
mov
gs
adc
pop
jbe
sub
adc
mov
sub
cmp
xor
iret
pop
adcb
mov
sub
addr16
dec
rol
mov
xor
ljmp
jmp
cwtl
xlat
sub
mov
jl
add
cmp
jmp
sahf
adc
push
fiadds
cmpsl
xchg
xchg
lods
fsubs
adc
adc
imul
push
bound
imul
scas
push
cld
pop
dec
adc
scas
movsb
xchg
cmp
mov
arpl
fs
mov
dec
pop
outsb
pop
mov
int3
ss
mov
repnz
aam
sub
clc
sub
dec
and
xor
cmp
gs
stos
or
mov
les
and
or
pop
dec
xlat
mov
aaa
pop
xchg
lret
pop
cltd
push
lahf
inc
push
cmpsb
cs
mov
push
mov
xlat
mov
ja
data16
add
sbb
push
inc
inc
cmp
cmpsl
cmp
mov
jne
scas
xchg
add
dec
or
cli
scas
sarl
icebp
xor
xchg
je
mov
rolb
jne
mov
jo
or
cltd
inc
les
or
flds
int3
push
or
lods
out
xchg
movsl
in
push
inc
cmpb
xor
clc
fs
or
jns
test
sub
adc
mov
cli
frstor
lcall
scas
sahf
mov
imul
sub
adc
dec
and
mov
xor
stc
jg
adc
frstor
subb
xchg
xor
daa
aam
push
jb
sbb
loop
sub
sbb
imul
fsubs
pusha
xor
jb
ret
adc
fwait
jge
andl
fdiv
jp
push
mov
add
add
mov
cmp
xorl
sub
cmp
negl
jno
xchg
cmp
xchg
int
inc
sahf
stos
out
sbb
rcll
pop
jo
jecxz
mov
sbb
xchg
push
or
mov
cwtl
es
outsl
repnz
mov
and
bound
sub
mov
std
or
push
push
push
adc
pusha
add
pop
gs
dec
scas
test
dec
ja
rcl
pop
and
push
test
outsl
xor
popa
lods
imull
cmp
adc
outsl
les
mov
add
xor
aaa
push
inc
sti
add
dec
cs
icebp
hlt
mov
fxch
mov
and
inc
lock
jmp
or
pop
add
mov
or
sbb
jl
jmp
cmp
leave
enter
and
mov
fmuls
and
mov
hlt
pop
pop
lcall
arpl
jo
pop
dec
sbb
in
mull
mov
mov
jno
sub
dec
ja
aaa
pop
inc
fists
fiaddl
stos
jmp
mov
lret
scas
arpl
or
pop
sub
sub
ja
addr16
pop
notb
sahf
rorb
or
mov
mov
loop
pop
ljmp
outsb
mov
sbbl
mov
lahf
or
dec
and
ficoml
fisubrs
cli
aas
aam
xchg
pop
add
or
sub
daa
xchg
sti
xor
adc
clc
int
dec
xchg
shlb
fcomps
jmp
adc
aam
cmp
inc
adc
out
mov
jle
popl
call
mov
divb
cld
sub
sti
nop
push
fmull
cmp
fcompl
pop
xor
xor
dec
ljmp
pop
in
xor
and
lret
dec
movsb
mov
hlt
and
movsb
gs
push
jp
xchg
jno
xor
cmp
cmpsb
repz
mov
mov
ret
mov
inc
cmovb
mov
and
inc
nop
sbb
mov
mov
push
fsub
sarl
or
repz
lea
gs
push
or
sbb
jge
pusha
ficompl
push
and
mov
jb
movsl
into
sbb
cmp
rolb
lods
pop
pusha
mov
push
pop
sub
push
js
jbe
push
mov
fdivrl
les
adc
filds
ja
out
mov
lahf
pop
test
fwait
idivb
jg
in
and
xchg
mov
popa
inc
pop
push
push
inc
push
ret
xchg
xchg
std
mov
mov
xchg
hlt
cmp
fistps
xor
mov
shll
aaa
adc
and
cmp
aad
mov
cmp
jns
pop
test
in
push
bound
pop
shr
cld
adc
sub
aam
imul
lods
push
jns
xor
xchg
adc
add
cmp
push
and
and
imul
or
pushf
dec
fld
add
cmp
fdivl
mov
xchg
jmp
orl
insb
inc
pop
inc
aaa
xorl
mov
aad
icebp
test
push
shl
ret
ja
and
sub
out
cmp
adc
and
sub
outsb
add
jns
inc
lret
int3
daa
loope
xchg
in
dec
jae
pop
int3
mov
mov
out
pop
sbbl
out
jg
je
outsb
xchg
mov
dec
push
out
mov
sbb
outsl
push
sahf
insb
cld
into
and
mov
pushf
adc
mov
adc
pushf
nop
out
clc
or
or
xor
mov
ret
test
fidivrl
mov
cltd
xor
jne
pop
js
xor
xchg
fsubp
pop
hlt
xor
enter
cmpxchg
or
dec
mov
lock
adc
cmpsl
xorl
pop
push
testl
push
imul
mov
lret
and
dec
shr
push
jl
sbb
add
lock
test
jae
fnsave
shll
lahf
mov
inc
adc
fwait
push
xchg
in
mov
rcrl
sub
cmp
jg
movsl
imul
and
sub
pop
fs
jo
mov
imul
mov
add
repnz
mov
inc
dec
xor
jo
outsl
cmp
ror
xchg
movsl
cmpsl
pop
pop
fs
mov
insl
in
aas
ficoms
mov
adc
lock
push
repz
pop
clc
arpl
add
push
dec
xchg
mov
stc
mov
mov
sub
mov
enter
cmpl
mov
sahf
aad
int3
dec
xchg
jb
ss
lret
sahf
fldpi
out
inc
adc
push
in
das
fidivl
xor
jno
dec
pop
adc
loope
push
mov
xor
pop
mov
out
test
adc
out
jae
mov
jecxz
add
les
repnz
mov
loop
add
rclb
shrb
push
xor
jo
inc
and
mov
xchg
enter
lds
add
mov
das
inc
jecxz
decb
mov
mov
cmp
scas
xchg
aam
and
mov
pop
sub
lods
aad
xor
adc
jne
outsb
hlt
sbb
loope
sub
les
cmp
inc
xor
pop
data16
aaa
inc
movsb
fiaddl
or
push
lods
mov
pop
add
jecxz
repz
outsb
mov
sbb
ret
ja
jbe
mov
lea
icebp
push
pop
add
mov
jge
mov
jl
dec
mov
rcrb
dec
cld
mov
clc
ret
xchg
lock
insl
enter
daa
cmpsb
sbb
cld
jns
or
scas
dec
xchg
ret
ja
jmp
sbbl
and
adc
cltd
dec
cmpsb
fdivl
xchg
push
dec
ret
ljmp
xor
repnz
sbb
jle
inc
arpl
mov
lds
jmp
and
sarb
cmpsb
das
inc
adcl
sub
scas
jp
lea
fwait
insb
cld
fcmovnbe
xor
jo
jge
ja
push
xchg
pushf
hlt
xor
pop
cmpsb
fdivrs
sahf
mov
inc
shll
js
push
cmp
out
mov
xlat
xchg
rcrb
into
dec
jge
dec
xor
mov
inc
sbb
leave
or
cmp
lea
aaa
cmc
lock
ret
adc
les
add
inc
pop
or
mov
xor
pop
dec
sbb
push
insb
cmc
mov
pop
mov
inc
fdivl
ret
je
fsubl
icebp
loope
dec
sti
sahf
ss
jno
dec
push
mov
mov
xor
cmpsl
xor
outsl
loope
jmpw
in
movsb
mov
sub
rolb
test
ret
int
push
movsb
pop
ss
ret
sbb
icebp
push
xor
jns
in
mov
fnstenv
sub
les
stos
mov
mov
mov
test
mov
cmpsb
inc
ror
mov
loopne
mov
stos
push
xchg
arpl
dec
insb
clc
push
shl
xchg
imul
jno
mov
inc
pop
jnp
lahf
out
nop
adc
push
adc
jg
clc
push
push
cmp
jae
xchg
sbb
dec
and
adc
add
mov
test
lcall
enter
push
andl
pop
pop
mov
mov
pop
jg
mov
mov
je
test
add
mov
or
ds
icebp
xor
repz
mov
mul
subb
push
adc
cmp
jmp
inc
out
sbb
or
dec
xor
push
dec
mov
imul
mov
pop
shl
dec
dec
fs
mov
adc
and
fmulp
fwait
sub
lahf
jne
sbb
adc
inc
enter
jecxz
iret
dec
ret
mov
push
test
or
adc
bnd
mov
cs
xchg
jno
fwait
test
es
jg
sti
xchg
push
movsl
adc
adc
scas
cmp
fstpt
shl
jne
fidivrs
cmp
and
int3
imul
cld
enter
add
lock
pop
lods
adcb
cmp
arpl
fimull
dec
pxor
inc
mov
add
fstps
xchg
ficomps
aad
pop
sub
pop
sbb
cmc
mov
jb
push
pusha
cmp
xor
idivl
xchg
mov
sbb
push
cmp
mov
in
mov
aas
ret
xchg
enter
in
mov
adc
inc
in
insl
repz
dec
mov
jge
pushf
inc
mov
int3
arpl
fnstenv
imul
cmp
dec
jmp
arpl
xchg
test
icebp
xor
arpl
int3
hlt
mov
aam
pop
arpl
or
or
ds
xchg
pop
leave
clc
sub
cmp
std
ret
xchg
jmp
pop
int3
inc
sub
in
stos
loope
pop
inc
push
cli
sub
fldenv
test
push
jl
scas
bound
or
sti
es
mov
push
pop
int3
pusha
loopew
and
cmpsb
stc
pusha
mov
sbb
enter
inc
sbb
ss
fistpl
fstpl
mov
insb
ret
xor
adc
ljmp
cltd
cmp
jp
cmp
jge
inc
call
cmc
mov
in
pop
scas
sub
add
es
push
test
cmp
fcoml
aas
adc
lea
int3
mov
cmp
insl
dec
sub
sub
xchg
notl
mov
pop
dec
jnp
jbe
inc
add
daa
lahf
out
xlat
pop
dec
pop
out
hlt
aad
xchg
mov
data16
and
scas
inc
adc
add
xchg
cmc
xchg
pop
rorb
cmp
icebp
cmp
arpl
loope
mov
sbb
adc
jle
push
inc
push
push
cld
xchg
aad
ficompl
vpminub
push
inc
mov
mov
loope
dec
mov
xchg
jne
push
ret
mov
jb
ficomps
bound
xchg
pusha
sbb
stos
lds
cwtl
cmp
sti
sti
add
xchg
sub
dec
lret
xchg
subb
test
arpl
jbe
jmp
and
movl
xchg
loop
ret
or
sbb
bound
or
test
dec
scas
xchg
repz
cmc
test
push
dec
jbe
cmp
das
jno
cmp
into
xchg
sub
cmp
xor
imul
into
pop
jge
imul
arpl
inc
dec
or
xor
into
les
int3
cltd
lret
cmp
xchg
adc
push
rcll
push
sub
stc
lret
cmp
mov
jo
pop
mov
push
mov
ret
ljmp
push
xor
pop
and
jecxz
test
dec
lcall
pop
mov
mov
ljmp
xorb
inc
cmp
xchg
popa
imul
cwtl
jle
ret
jl
pop
jge
pop
je
cld
mov
lock
jb
push
scas
test
add
loopne
push
mov
jg
rol
sub
xchg
jo
push
ja
cmc
inc
pop
data16
andb
jbe
movsl
cmpsb
mov
pop
inc
push
negb
stc
stc
fidivl
call
dec
sub
mov
inc
xchg
and
and
stc
mov
in
xor
jb
or
sbb
xor
mov
addr16
roll
cld
ja
xchg
xchg
mov
mov
out
mov
negl
setge
lods
jns
addr16
adc
mov
push
aam
dec
xor
stos
stos
popa
adc
mov
mov
hlt
push
test
sbb
repz
hlt
mov
jp
insb
std
sbb
mov
stc
lods
and
push
leave
mov
cmp
sub
cwtl
pop
add
mov
or
sub
into
mov
xchg
pushf
icebp
scas
add
outsb
pop
add
out
xor
cmpsl
jecxz
aad
repnz
scas
xchg
ds
cmpsl
hlt
loop
push
mov
rol
lahf
mov
xchg
pushf
sbb
cld
fs
dec
jecxz
lcall
push
std
add
adc
es
mov
adcl
inc
or
lods
repz
add
fcomps
pushf
dec
in
je
test
inc
add
aad
add
add
mov
stc
lcall
leave
jns
or
mov
notl
and
jle
pushf
cmpsl
outsb
fbld
mov
jnp
in
mov
leave
fwait
dec
scas
mov
hlt
mov
jecxz
ret
outsb
push
ficoms
mov
lret
sbb
aaa
int
imul
jle
dec
sbb
sbb
lahf
sbb
es
lahf
jmp
imul
scas
cmp
xchg
daa
insb
sarb
stos
sub
xchg
rcrb
add
leave
shl
arpl
sub
shlb
shl
nop
push
or
jp
addr16
mov
mov
or
rolb
outsl
inc
jp
mov
push
adcb
push
ficomps
mov
sti
pop
movsb
scas
or
cmp
fcomps
rcrb
xchg
adc
add
push
jne
jecxz
insl
fistpl
pop
push
nop
or
jae
fwait
or
inc
fsubp
cs
out
and
cltd
cmp
jo
mov
push
outsl
lret
js
xlat
rorl
xchg
adc
lods
cli
adcl
sti
outsb
je
jo
dec
sbb
enter
jbe
add
jb
push
fcmovnbe
shrl
fisubl
cmc
inc
jo
in
xchg
imul
mov
js
fwait
mov
push
pop
es
outsl
fcmovb
push
mov
pop
xor
mov
xchg
sub
add
xchg
stos
shrb
push
adc
and
imul
dec
inc
test
mov
in
or
sti
dec
adc
pop
cwtl
cmp
ret
jle
loop
enter
pusha
shll
aas
adc
mov
dec
mov
sbb
push
aam
push
jns
push
push
in
fs
jmp
sub
mov
lcall
dec
mov
jbe
fldcw
mov
mov
cli
or
jbe
mov
adc
and
hlt
out
pop
leave
dec
pop
dec
mov
call
out
inc
stos
decl
cwtl
fdivp
aaa
sar
int
in
xchg
cld
jecxz
and
jl
or
xchg
adc
ror
addr16
mov
stos
pusha
out
test
movsl
jmp
jbe
mov
add
in
mov
push
xchg
jg
or
dec
push
mov
push
cltd
in
adc
testl
test
or
mov
adc
or
xor
fwait
repnz
shl
mov
mov
pop
scas
bound
sbb
cld
mov
jae
pop
repz
and
cmpsl
into
mov
or
pop
mov
sbb
jae
lods
insl
test
fdivs
lret
cmp
mov
xchg
jmp
sub
cld
test
fs
out
push
and
lcall
push
jne
lock
mov
pop
scas
outsl
push
int3
ljmp
mov
mov
or
dec
jge
mov
and
push
loope
sbb
sub
mov
frstor
shrb
popf
mov
gs
xor
in
incl
mov
bound
mov
ljmp
cmpsb
xor
fcomip
jmp
pop
push
mov
std
jecxz
and
mov
stos
inc
add
push
subb
popf
adc
pandn
je
hlt
clc
jmp
cmpsb
sarl
xchg
jns
cmp
ret
cmpl
jp
gs
add
or
daa
xor
lret
adcb
sbb
add
pop
jle
cmp
in
xor
cmp
mov
cltd
into
ss
mov
mov
mov
iret
add
and
mov
pusha
pop
rclb
mov
insb
shll
jl
scas
je
inc
jne
insl
pop
mov
test
lret
mov
and
jecxz
add
mov
loop
push
xchg
mov
loopne
ja
test
std
push
sub
adc
hlt
cmp
push
mov
ret
enter
addr16
add
ret
dec
leave
push
fcmovne
lret
jo
addr16
test
pop
ficoms
mov
pmulhuw
icebp
add
sbb
dec
mov
and
sbb
aaa
cli
lods
mov
xor
adc
cmp
inc
xchg
mov
or
dec
cmp
dec
pop
cmp
cld
dec
adc
fdivrs
jb
or
in
in
mov
arpl
cmp
add
out
xor
fldt
test
pop
jmp
push
ret
xchg
jbe
mov
add
pop
jae
nop
js
stos
pop
js
mov
pusha
xchg
push
out
mov
xorb
pop
mov
inc
sub
jmp
ljmp
xchg
sarl
sahf
inc
pop
jae
scas
xchg
add
test
adc
push
xor
ljmp
xchg
icebp
sub
icebp
insl
inc
cli
gs
hlt
jns
cmp
int
inc
mov
push
add
mov
mov
adc
lea
dec
dec
nop
bswap
cmp
mov
inc
jge
imul
nop
aas
arpl
fmuls
pop
arpl
pop
pushf
lahf
mov
inc
jnp
sahf
test
pop
popa
lea
xchg
mov
cmp
pop
or
push
aas
rcrb
ret
imul
adc
sub
mov
pmuludq
mov
outsb
or
mov
test
sub
adc
mulb
insl
cltd
pop
inc
das
in
data16
xchg
inc
or
inc
hlt
pop
mov
mov
in
adc
or
icebp
aas
js
iret
fcoml
loop
ljmp
or
sahf
ja
outsl
jb
mov
jns
lods
pushl
test
push
mov
insl
adc
sub
lods
in
out
lret
sarl
popf
lcall
daa
push
dec
or
push
sbb
mov
daa
xchg
sub
push
je
mov
sbb
and
imul
xchg
xchg
xchg
mov
scas
adc
out
sbb
pop
cmpsl
outsb
out
cmpsb
cmp
rolb
ucomiss
mov
mov
fsubr
fbstp
sub
pop
add
mov
sti
int
xor
shr
ja
mov
mov
pushl
mov
sbb
jno
add
mov
jbe
dec
dec
rolb
fistpll
lods
clc
push
cmp
bound
lock
cli
test
sti
sub
cmp
popf
and
fucomip
add
mov
mov
out
mov
xchg
adc
mov
cs
inc
pushf
cld
lcall
cmp
adc
lock
mov
adc
xor
out
aaa
shrd
mov
in
cmp
adcl
push
ljmp
shlb
fstpt
xchg
fnsave
repnz
and
dec
ror
xchg
mov
mov
sub
popf
pop
testl
pop
adc
lea
mov
repz
add
xchg
rep
imul
ja
sbb
sbb
scas
ror
jp
int
xor
add
stos
dec
stc
popa
pop
aaa
nop
scas
cmc
ja
mov
xor
loopne
inc
mov
fistpl
mov
mov
out
repz
mov
lcall
neg
jns
lcall
adc
mov
rcll
dec
add
fucom
pushf
lret
push
arpl
inc
mov
ja
sub
in
push
adc
repnz
fs
xor
out
fs
sbb
das
lods
movsb
mov
pop
outsb
xor
adc
in
inc
pop
aad
adc
push
test
jno
mov
dec
inc
xlat
outsl
pop
addl
rcr
aad
jbe
clc
inc
fcomps
add
out
push
pushf
mov
xchg
xchg
and
jae
jl
jmp
fisttps
push
and
push
sub
test
leave
sahf
dec
mov
andb
mov
lods
rorl
lret
mov
insb
xlat
test
hlt
cmp
repnz
inc
mov
test
jg
and
push
outsb
add
pop
imul
or
adc
std
pop
in
sahf
mov
insb
or
dec
push
xchg
idiv
xchg
cmp
jo
lds
xchg
aad
dec
aam
cmp
out
int3
dec
aaa
insb
pop
sbb
mov
jle
pop
out
jns
xchg
lahf
jecxz
pop
cmpsb
jl
fnstsw
mov
nop
jo
or
imul
lds
adc
jbe
mulb
rcl
clc
xor
sbb
loopne
mov
imul
repnz
fsubl
jb
mov
ja
test
cmpl
in
mov
xor
jp
mov
jno
mov
inc
sub
ret
inc
imul
push
test
xchg
add
xchg
xor
push
mov
sub
and
ja
pusha
adc
imul
and
insb
xor
out
sub
mov
aad
xor
mov
ret
cmp
call
push
dec
jg
dec
movsl
sbb
lock
and
mov
sbbb
nop
mov
out
mov
jle
cmp
xchg
scas
clc
mov
sbb
in
dec
lods
jne
push
shrl
cwtl
mov
sbb
lcall
or
cmc
mov
out
addb
push
pop
sbb
enter
pop
mov
icebp
cmp
fsubl
mov
int
nop
add
cld
cmp
stos
mov
fs
pop
inc
cwtl
int
jle
imul
mov
rcrl
sbb
test
inc
cmp
push
pop
lds
dec
fsubrs
scas
push
adc
jp
je
orb
xchg
pop
adc
daa
imul
cmp
stos
jne
mov
dec
push
mov
sbb
dec
mov
xchg
xchg
mov
dec
pop
sub
pop
pop
bound
mov
mov
add
add
push
clc
fcoms
adc
xor
inc
pop
inc
lahf
icebp
jge
jne
or
mov
adc
fs
fisttpl
mov
xor
mov
outsb
gs
add
push
js
std
notl
fnstcw
popf
test
fmuls
cli
pavgw
scas
loop
or
into
push
and
clc
xchg
test
pop
mov
divb
xor
xor
clc
xchg
stos
or
xchg
iret
pop
or
add
decb
lret
jno,pt
daa
pop
clc
out
dec
aaa
and
pop
sbb
cmp
insb
inc
inc
mov
dec
jnp
sbb
call
les
push
frstor
test
adc
cwtl
mov
push
movsl
push
out
xlat
test
xchg
inc
and
xor
sbb
lcall
repz
popa
frstor
into
push
into
jno
xchg
cmpl
jb
jno,pn
add
jmp
loop
jecxz
pop
cmp
xchg
int3
mov
call
xchg
xchg
mov
adc
xor
and
sbb
and
out
mov
sbbb
pop
andl
pop
xchg
xor
mov
pop
mov
inc
adc
push
mov
pushf
call
scas
and
dec
sbb
mov
daa
adc
outsl
lods
and
mov
popa
xor
push
ja
xor
xchg
subl
mov
mov
es
sti
xchg
adc
pop
mov
mov
cmp
push
xchg
shr
cmp
mov
fs
jnp
xor
call
std
xchg
gs
push
imul
aad
dec
lahf
adc
dec
jmp
jl
add
enter
mov
add
leave
pop
push
jecxz
push
adc
js
sub
add
in
js
adc
incl
xchg
jl
leave
jb
cli
xchg
cmc
icebp
iret
int3
int3
or
hlt
push
pushf
adc
outsl
int3
lea
idivl
push
sbb
jecxz
loope
and
int
es
or
loopne
sub
fst
shrl
mov
sub
jle
cltd
mov
adcb
xchg
jl
jnp
orb
mov
xchg
pop
mov
roll
aad
jge
popl
popf
mov
or
in
pop
xor
in
fstl
in
sub
mov
outsl
fstpt
ficomps
inc
ds
xor
sub
loope
xchg
mov
push
push
xchg
cmc
xor
jg
cmp
mov
mov
out
inc
jmp
adc
imul
pop
jg
add
int
adc
hlt
lods
jp
movsl
lods
sbb
adc
or
les
aam
addl
xor
mov
call
aad
aam
pop
adc
std
jmp
add
add
xlat
mov
pop
push
mov
out
push
ss
div
cltd
and
insb
loope
cmpsb
mov
stc
pop
adc
imul
dec
add
add
cmp
and
imul
mov
or
popl
push
xlat
scas
pop
int3
jne
les
and
mov
clc
ret
add
sbb
xor
imul
cs
lds
adc
mov
addb
xor
pop
add
push
out
ret
roll
out
lret
cmp
ret
repnz
pop
mov
pop
jle
add
cwtl
mov
hlt
mov
sti
test
or
cli
xchg
dec
lock
adc
in
or
stos
push
int
lret
mov
psubd
pop
jecxz
and
and
idivb
jne
fs
shll
adc
and
add
mov
sahf
loope
pop
lret
push
mov
rcll
push
jne
call
rorb
loope
cld
cs
add
mov
or
mov
sti
cwtl
pop
into
sbb
pusha
pop
jecxz
xchg
dec
mov
fsubs
fisttps
pop
xchg
jnp
iret
fcmovb
into
in
test
das
add
jne
mov
pop
inc
imul
ja
mov
inc
enter
push
pop
push
popa
add
repz
mov
sub
ja
jne
dec
add
jo
mov
push
dec
ds
adc
cwtl
or
xchg
in
xchg
mov
dec
sub
mov
dec
jnp
mov
push
test
add
dec
pop
mull
jmp
cwtl
mov
or
vpand
add
pop
fstpt
and
jmp
iret
imul
mov
test
or
mov
idiv
daa
pop
jp
push
inc
repz
xorb
ret
inc
jo
jmp
pop
insl
dec
popf
in
mov
jg
fstl
hlt
pop
pusha
pusha
mov
popf
add
out
xor
cwtl
pop
loope
xchg
in
pusha
mov
aas
daa
and
ret
das
and
or
adc
and
fwait
cmp
daa
inc
jg
nop
sub
sub
dec
icebp
xorb
xchg
ret
or
lret
mov
xchg
mov
cli
fisubrl
rcrl
scas
mov
popl
push
es
enter
rclb
mov
inc
cmp
movsb
ds
cmp
dec
js
int3
jle
cmp
pop
aam
nop
mov
dec
or
jno
push
cmpb
inc
daa
imul
test
shr
dec
shll
icebp
pop
popa
cmp
mov
cltd
sahf
cmp
dec
or
sbb
sub
in
xchg
cld
pop
int3
cwtl
loop
test
jg
cld
loop
lods
and
cmc
lea
movl
xchg
outsb
xchg
sbb
pop
shlb
mov
loop
aaa
into
aad
fnstsw
outsl
dec
loope
push
jne
push
iret
lret
sub
mov
in
subl
cwtl
hlt
fisubrl
or
mov
in
xchg
lea
cli
xchg
das
fidivl
bound
sbb
dec
ss
lods
xlat
popa
sub
out
sub
pop
mov
cmpsb
mov
cltd
lock
outsl
and
mov
ds
pop
shrl
lahf
jne
and
dec
mov
insl
cli
call
add
mov
pop
jmp
push
popf
stc
std
fisttps
call
inc
lea
jmp
cmpsb
ret
push
lods
vmread
xchg
xchg
pop
or
out
je
mov
int
adc
popf
sbb
inc
push
sti
ret
mov
sti
jmp
xchg
sbb
js
lds
push
cmp
xchg
xor
or
cmpb
push
test
sbb
out
mov
xchg
dec
mov
cmpsb
movl
add
daa
mov
sbb
sub
lret
pop
add
add
xchg
push
pop
jbe
add
add
inc
sub
sub
jge
cmp
jmp
pop
mov
int3
push
inc
adc
sub
lcall
hlt
push
or
scas
imul
clc
xchg
test
adc
icebp
dec
pop
or
push
lret
xchg
mov
loope
adc
cmp
stc
cmp
insl
xchg
xchg
xor
aam
pusha
fdiv
bound
xchg
fst
cmpsl
dec
mov
js
das
or
cwtl
xchg
mov
push
leave
loop
mov
mov
scas
fwait
pop
xchg
jns
popf
and
leave
push
jb
push
pop
push
cmp
dec
adc
pop
sahf
iret
dec
sub
shrb
push
mov
arpl
and
and
icebp
gs
and
xor
jne
movsl
test
adcl
mov
int
jno
pop
movsb
inc
pop
add
inc
fucomip
push
xor
sub
push
imul
mov
int3
bound
ss
mov
cli
gs
jb
lock
push
stos
movsb
cmp
das
push
xchg
or
icebp
xorb
call
inc
or
aad
repz
sbb
mov
mov
adc
xor
js
imul
adc
inc
mov
leave
sti
add
and
cltd
jl
pop
mov
rcr
xchg
scas
or
ret
mov
inc
or
cmp
je
movsb
pop
fsubrl
out
in
xchg
pop
cmp
mov
insb
xor
fidivs
jge
xor
cli
jle
mov
adc
test
cmpsl
cmpl
rorb
ret
mov
mov
fldln2
loopne
lods
sbb
and
mov
xchg
lcall
lods
inc
adc
adc
in
xor
jmp
cmp
jnp
push
and
jno
mov
jecxz
imul
sbb
sbb
pop
and
push
cmp
add
jns
mov
popa
xchg
adc
hlt
popf
pusha
and
popf
out
mov
fidivl
cmpsb
int3
js
jmp
sub
test
and
sbb
test
int3
pop
jle
fcompl
adc
jo
das
js
mov
add
pop
mov
push
and
stos
fs
movb
lds
out
lcall
jecxz
hlt
out
inc
push
inc
ss
lock
in
js
lret
rol
and
mov
fbstp
shlb
cld
xor
sub
lock
sahf
data16
adc
push
push
adc
jb
xchg
repnz
push
adc
xchg
xchg
add
push
cmp
cwtl
incl
cmc
xchg
mov
dec
xor
xchg
pop
shlb
scas
lods
cli
sub
test
ja
push
inc
adc
xchg
xor
or
and
scas
sub
mov
sbbl
push
fistpl
jg
adc
cmpsl
rolb
int3
pinsrw
pop
sub
cmp
or
cmp
lods
dec
pusha
pop
mov
enter
ds
xorl
dec
mov
shrl
mov
lcall
in
mov
sahf
cmp
mov
inc
push
jmp
jns
pushf
jl
daa
cmp
xchg
repnz
inc
sbb
xchg
dec
add
cmp
je
mov
dec
push
dec
dec
addr16
push
cmp
inc
cs
test
jle
mov
xor
insb
adc
pop
int
shrb
jno
or
sub
les
mov
es
push
sar
push
dec
push
adc
ficomps
push
cmp
sahf
loopne
pop
fmull
in
jle
gs
dec
mov
ds
enter
inc
pop
fwait
xchg
push
push
clc
xor
mov
mov
push
fdivl
cld
out
leave
dec
test
xlat
fmuls
shl
jmp
faddl
cwtl
ret
xchg
test
push
push
jae
jno
loope
and
mov
add
ljmp
xchg
imul
je
pop
cli
inc
cltd
lahf
sub
or
into
out
and
cmpsl
stos
or
fidivrl
inc
repz
lods
fimull
adc
xor
dec
push
xchg
stos
ljmp
xlat
push
jmp
test
lods
adc
insl
add
lret
subl
in
add
fbld
mov
out
jmp
push
stos
and
ljmp
lcall
add
imul
dec
loope
enter
or
pop
xor
pop
mov
inc
jae
fbstp
jno
nop
cmpsb
stos
dec
push
mov
sbb
or
mov
sahf
into
xchg
cltd
test
inc
mov
lahf
sbb
repnz
push
sbb
cld
fbld
lock
mov
jl
xchg
xor
xchg
ds
fwait
add
nop
arpl
lret
cmpsl
add
jo
fsubl
mulb
in
stos
pop
in
pop
cmc
fisttpll
or
call
or
xchg
aaa
ja,pt
popa
aaa
inc
xchg
and
push
sbb
shll
xchg
push
or
outsl
ds
or
jmp
divb
movsb
mov
sarl
loopne
inc
add
mov
not
mov
cmp
and
and
jns
rorl
movsl
pop
mov
pop
push
dec
adc
mov
cmpl
stos
out
mov
xor
lods
xchg
push
stos
pop
adc
leave
scas
xchg
pop
dec
in
data16
dec
or
jl
cmp
into
dec
jo
mov
ret
es
lods
loopne
dec
int3
popa
inc
adc
push
or
cmp
outsb
scas
add
sbb
flds
xchg
lahf
push
cmpsb
inc
dec
call
mov
pushf
pop
or
dec
ret
movsb
or
or
icebp
loope
mov
push
lret
lock
cmp
mov
push
in
adc
jge
push
movsl
enter
dec
stc
cmp
rorb
sub
fsubrs
out
mov
int3
mov
pushf
mov
lahf
les
dec
roll
sbb
in
cmc
and
adc
xchg
xor
jmp
std
xchg
sub
push
sahf
movsb
outsb
push
mov
pop
xchg
insb
adcb
mov
mov
sbb
mov
push
and
lcall
sbb
mov
std
scas
pop
std
push
xlat
cs
pop
addr16
jbe
bound
cwtl
xor
push
sahf
adc
icebp
fidivl
popf
das
mov
push
mov
mov
call
cmp
js
push
dec
cs
and
iret
cmp
pop
cmp
mov
xor
popa
movsl
xor
add
mov
add
popa
xor
mov
jecxz
mov
daa
add
push
dec
jb
cmp
adc
inc
jge
xor
jle
xor
lock
sub
fs
mov
push
shll
add
or
xchg
sub
sub
dec
mov
jno
adc
fistps
push
mov
and
aas
mov
mov
repz
in
mov
inc
mov
sbb
outsl
imul
lret
sub
sub
xacquire
jmp
leave
notl
push
mov
mov
dec
mov
sahf
xor
adc
mov
add
or
lock
out
flds
mov
and
lahf
mov
mov
xchg
mov
dec
push
pop
push
mov
jmp
ret
fcomps
mov
adc
cli
adc
loop
dec
icebp
pop
cli
cli
sbb
cmp
jmp
or
cmp
outsb
js
lods
jl
xlat
and
loope
and
push
imul
cwtl
ljmp
shl
push
fs
std
into
bnd
and
xor
mov
in
enter
push
jmp
sub
iret
mov
add
adc
pop
js
mov
pushf
cmc
inc
loop
lods
aam
mov
popa
rclb
mov
xchg
jmp
movsl
movsb
aaa
dec
int3
ss
push
ja
lods
sub
inc
insb
mov
jbe
add
mov
inc
jns
js
pusha
mov
addr16
cld
pop
std
xlat
test
sub
dec
sbb
or
jae
ds
cwtl
in
mov
inc
scas
cs
and
push
sbb
loopne
mov
xchg
sti
sbb
int3
aad
and
mov
in
test
push
mov
ljmp
pop
jae
push
sub
inc
xor
scas
xor
arpl
cmp
add
pop
aas
mov
jo
jbe
adc
mov
loopne
les
cmp
dec
jg
rcrl
cmp
xchg
in
pop
jno
xchg
aad
or
out
mov
dec
lea
popf
pushf
mov
or
sti
xor
cs
rcll
pop
lock
xor
xorb
jle
cmp
sub
fstl
push
pusha
ja
jl
pop
xor
jge
jle
adc
inc
push
mov
xor
nop
cmp
fiaddl
jo
xor
mov
jmp
pop
fldpi
stc
test
test
mov
cltd
push
repz
sub
mov
imul
cltd
push
adc
imul
xor
lahf
dec
sub
push
mov
pushf
sbb
push
inc
imul
sbb
into
xor
popf
mov
mov
cmp
push
movsl
loopne
mov
lea
out
adc
dec
ss
xor
fistps
jns
popf
in
addb
jecxz
cmp
pushf
popa
mov
rcll
xchg
mov
mov
adc
imul
cmp
fwait
pop
cmpb
pop
xor
push
mov
aas
mov
cmp
pop
push
add
or
divb
jmp
push
xchg
outsl
jp
inc
add
test
xor
sarb
or
cmc
add
imul
adc
popf
and
js
push
dec
pop
gs
data16
xchg
cmp
sti
jae
inc
iret
data16
jo
add
lods
pushf
decb
mov
scas
push
xchg
mov
push
cwtl
dec
jmp
imul
xor
push
mov
mov
or
and
mov
imull
dec
insl
loope
fidivs
mov
fmuls
popf
xor
pop
dec
scas
push
fldcw
in
push
lret
xor
popa
mov
subb
jnp
xchg
push
push
adc
and
test
stos
fs
dec
aas
or
rcr
stos
das
jg
xchg
mov
sub
movsl
jbe
aad
or
leave
aaa
inc
mov
mov
out
lds
in
inc
cmpsb
roll
int
lods
push
mov
fildll
adc
test
insb
inc
pushf
sbb
cld
int3
rclb
fnsave
sbb
mov
imul
sub
flds
stos
xor
push
or
cmp
mov
imul
mov
loop
mov
inc
mov
popf
or
mov
rorl
inc
lahf
insl
push
int
std
add
insl
jmp
inc
mov
mov
out
inc
adc
pop
xchg
or
cltd
shrl
fwait
and
inc
jg
pop
lods
mov
sti
or
dec
in
loope
adc
xchg
std
es
std
mov
and
xchg
leave
xchg
inc
xchg
dec
les
leave
in
outsl
xor
repnz
sbb
cmc
push
test
lods
iret
lahf
lea
test
data16
int3
int
dec
iret
push
std
sbb
mov
inc
inc
cmpsb
test
fnstcw
rorl
test
mov
sahf
pop
push
jbe
push
fldcw
xchg
popf
divl
sbb
inc
and
mov
add
sub
aam
mov
or
jae
mov
mov
rcrl
xchg
loopne
inc
add
and
fisubrs
mov
ja
out
or
or
pop
into
sub
jp
out
repz
sub
jmp
add
jne
or
repz
arpl
dec
enter
push
push
push
sahf
imul
pusha
sub
jmp
jo
sti
pusha
cli
aam
shll
cmpsb
scas
mov
add
cmp
dec
nop
cmp
mov
arpl
rcr
adc
movsb
dec
addl
inc
out
push
imulb
aad
divb
fildl
sub
xor
ja
hlt
ret
dec
fwait
mov
sub
test
cmp
iret
fiaddl
cmp
arpl
ljmp
mov
adcb
jge
mov
sub
push
jmp
sbb
adc
push
aaa
mov
add
mov
cmp
test
sub
std
outsb
mov
add
outsb
lcall
fists
pop
jmp
insl
ds
aas
jmp
lods
enter
inc
jl
xchg
insb
ds
sbb
add
add
iret
cmp
sub
cwtl
cs
jecxz
mov
inc
mov
dec
sti
lock
sub
jecxz
inc
mov
xlat
fildll
aaa
lcall
adc
mov
add
and
push
sti
cmp
sbb
cli
rcrb
inc
or
adc
xlat
mov
ljmp
test
fnstcw
fs
int
shl
inc
movsb
push
repnz
shll
mov
popa
dec
lea
push
ja
into
in
out
xchg
add
push
inc
pusha
rcrb
cmp
push
fists
xor
sahf
push
sub
jge
jg
cwtl
fadds
cmp
rcrb
pop
xchg
dec
arpl
jp
dec
mov
dec
les
mov
iret
mov
adc
cli
imul
add
xor
or
scas
repz
.byte
cmpsl
.byte
sbb
cmp
fldenv
add
adc
or
sbb
test
dec
bound
pusha
mov
testl
adc
fdivs
movsb
mov
adc
sub
movsb
imul
sub
call
add
push
sub
and
sbb
push
lods
xchg
cli
aas
xchg
mov
shrb
ret
ja
cmp
xchg
push
mov
dec
int3
mov
gs
es
xchg
adc
sub
fnstsw
out
or
xchg
jo
das
and
xchg
int3
lods
push
mov
popa
je
jg
or
ljmp
cmp
sub
mov
and
inc
fldt
test
hlt
hlt
xor
cmp
cmp
mov
popf
mov
adc
call
in
fbstp
out
in
popf
sbb
mov
sub
mov
mov
in
push
or
push
mov
lds
in
sar
xchg
pop
cmp
dec
inc
inc
sub
pop
mov
pop
sbb
jbe
insb
jne
stos
pop
dec
js
xchg
jp
out
test
jg
lea
mov
add
cmc
sub
cmpsl
imul
clc
aad
cmc
jnp
and
mov
ret
jbe
pop
bound
and
out
or
fmuls
jmp
xchg
mul
outsl
in
push
ja
pop
add
in
pop
fistpll
add
enter
lcall
ja
rorl
and
repnz
push
xchg
nop
jb
add
mov
movl
pop
push
fistl
lahf
fbstp
or
out
push
jnp
pop
cs
push
mov
pop
test
pop
inc
lret
iret
xlat
cltd
cmp
adc
out
lret
stos
xor
sbb
push
xchg
pop
je
fcoms
add
xchg
dec
pop
es
pop
pop
xor
xor
mov
into
mov
lock
adc
adcl
lret
pusha
xor
cli
dec
sub
cmp
fdivrl
add
lret
inc
nop
or
push
sbb
pop
sbb
loop
pop
outsl
pusha
xor
dec
jge
fidivl
inc
aad
lahf
mul
addr16
div
xor
sub
cmp
inc
sti
imul
adc
leave
xchg
mov
mov
out
clc
cmpsl
mov
gs
jmp
jle
push
in
sbb
pushf
lds
jge
test
cwtl
stc
push
ja
mov
adc
popf
and
dec
adc
cli
sbb
xchg
adc
inc
sbb
dec
loop
mov
ja
mov
mov
ljmp
push
mov
into
adc
test
jge
xlat
in
cmp
pusha
aaa
jb
mov
sub
mov
aas
sbb
rcrl
aas
push
in
cmp
rcr
cmp
mov
mov
xor
imul
xchg
mov
or
iret
inc
or
test
dec
movsb
push
sbb
or
adc
outsb
adc
xchg
dec
arpl
sbb
shlb
dec
fadds
roll
mov
sub
push
stos
xchg
int3
jle
fadds
inc
fmull
push
pop
int
mov
jbe
jns
data16
addr16
push
jle
clc
pop
mov
inc
add
jnp
mov
or
popa
cmp
data16
andl
xchg
sub
push
mov
inc
call
mov
dec
or
pop
stc
xchg
xchg
push
mulb
mov
sbb
test
xchg
push
mov
out
mov
mov
or
pop
ficoms
fsubs
stos
jecxz
mov
cmpl
mov
lods
aaa
cmp
pop
pop
add
std
ljmp
mov
int3
pop
je
imul
and
lds
push
mov
jle
fistpl
clc
outsb
xor
lea
push
aad
aas
and
push
fnstcw
jnp
bound
jo
xorb
out
stc
mov
fdivrs
in
fcompl
jp
sub
pushf
in
test
and
adc
dec
adc
and
jno
addr16
mov
xchg
out
sub
or
icebp
repz
pop
push
outsl
aas
push
in
sub
outsb
xchg
push
loopne
pop
jle
pusha
out
js
mov
adc
test
shl
je
dec
aam
dec
sbb
add
out
xchg
scas
inc
add
decl
mov
int
xor
xlat
imul
leave
mov
in
fldt
sbb
shlb
mov
push
inc
in
dec
stos
je
movsl
mov
icebp
sub
popa
inc
clc
pop
pop
push
shrl
push
inc
mov
sahf
jb
or
movsl
cmpl
dec
loope
ljmp
push
xor
insl
pop
cltd
jne
fcompl
aad
mov
jg
divb
aam
dec
inc
mov
mov
pop
or
jge
movsb
imul
lds
fldenv
and
mov
adc
push
pop
shll
lds
cwtl
inc
or
aaa
test
pushf
clc
jl
aad
pop
inc
popf
int3
and
fldl
inc
xchg
or
add
cmp
inc
mov
add
mov
jecxz
or
fs
mov
dec
push
push
mov
loop
std
pop
mov
xchg
jns
ret
in
insl
xlat
sub
leave
dec
jmp
emms
fwait
xchg
xor
imul
loopne
ret
aam
test
aad
or
or
outsl
sbb
stc
mov
sbb
aas
out
lret
repz
mov
in
adc
aam
insb
std
sub
xchg
in
mov
push
mov
mov
cmp
cli
cmp
xor
inc
lcall
je
insb
in
out
loope
jle
sbb
or
aaa
inc
leave
or
xchg
add
lret
mov
sbb
ds
add
arpl
jbe
sub
jns
sbb
fcoml
pop
jmp
cmp
cli
sub
push
addr16
xor
dec
push
mov
stc
xor
pop
sub
xchg
scas
adc
inc
sub
push
js
cmpsl
lods
cltd
xchg
pop
add
jecxz
jnp
pusha
in
or
push
xor
int
cmp
mov
repz
xchg
or
mov
scas
mov
nop
lods
insl
hlt
sbb
jle
pop
sbb
xor
fsts
cltd
inc
adc
pop
testb
pop
push
mov
imulb
jae
adc
repnz
mov
movsl
es
out
inc
sub
or
push
inc
test
push
push
loopne
adc
fcom
mov
mov
ljmp
push
mov
dec
sbb
in
out
inc
or
adc
imull
push
jge
mov
sub
outsl
mov
xchg
or
pop
data16
cmpb
cmpsb
je
pop
and
ds
mov
xchg
ja
jmp
mov
mov
hlt
.byte
.byte
.byte
sbb
cmp
sbb
jg
aas
jecxz
and
add
mov
jbe
stc
sub
fcmovne
push
mov
jb
push
or
mov
mov
outsb
adc
test
xor
push
pop
imul
pop
loop
push
jnp
or
xor
test
mov
aaa
push
stos
ljmp
iret
pop
push
lea
ss
andl
xchg
movsb
aam
ss
cmpsl
sub
shrl
sti
addr16
aaa
test
xor
popa
mov
mov
mov
cmp
mov
mov
adc
mov
jmp
xchg
outsb
sub
lods
jmp
icebp
rolb
jge
jmp
pusha
xchg
iret
mov
fcmovb
push
or
ret
push
sbb
cmpsl
pop
lods
js
xor
imul
and
fmulp
aam
notb
fnsave
repnz
pop
repz
ja
adc
stc
push
int3
mov
push
xchg
add
cmp
stos
movsl
mov
notb
xor
mov
scas
fs
and
imul
sub
or
data16
pushf
inc
mov
scas
dec
dec
jp
stos
outsl
and
clc
cmp
xchg
jnp
xchg
fld1
fimull
fimuls
mov
lods
inc
or
dec
imul
mov
ficoml
dec
add
adc
cmp
popa
mov
adc
adc
jnp
inc
js
and
jg
mov
xchg
stc
xor
mov
xchg
rcrb
shlb
xchg
sub
stc
pop
mov
push
mov
sbb
iret
xor
out
sbb
jecxz
mov
ljmp
ret
dec
mov
ret
sbb
jno
inc
mov
add
push
je
rcrb
rcrb
mov
sbbb
xchg
bound
xchg
mov
xchg
arpl
jo
test
jno
mov
jmp
adc
and
inc
mov
lea
inc
cmp
dec
mov
nop
mov
int3
and
lea
xchg
das
xor
xchg
pop
aam
push
test
mov
dec
lds
lahf
je
leave
lds
out
or
push
xor
jmp
mov
mov
test
jae
sbb
addr16
rorb
pop
pop
xlat
add
cmpsb
add
fnstsw
xor
adc
mov
mov
test
and
lods
sbb
jg
push
imul
ja
insl
xor
xchg
and
sub
add
adc
mov
adc
inc
ret
dec
pusha
negl
mov
lods
mov
jbe
enter
and
and
jbe
mov
add
mov
clc
mov
xchg
pop
inc
xchg
adc
fdivs
nop
mov
mov
jne
negl
scas
mov
pop
push
clc
ja
aas
cmp
lock
add
sub
clc
mov
lahf
push
cmp
nop
inc
mov
jge
mov
out
or
push
mov
repz
inc
push
enter
push
push
scas
aam
gs
xchg
pop
jns
cmpb
out
bound
out
mov
xchg
push
fs
repz
push
sti
mov
mov
out
enter
mov
push
call
adc
in
xchg
repnz
dec
sahf
xor
mov
fisubl
rcrl
fisttpl
inc
sbb
push
sub
adc
cmp
addr16
xor
sahf
jg
dec
jb
xor
test
testb
pusha
xchg
jo
jle
inc
mov
cmp
push
mov
push
sbb
push
push
xchg
rorl
ret
and
cs
adc
in
jne
xor
jno
das
xor
xor
adc
addr16
mov
out
xor
mov
add
in
leave
adc
dec
and
adc
pop
sti
les
or
dec
cmp
xchg
lods
sahf
push
fdiv
or
cmp
inc
rol
push
test
arpl
xor
push
rol
adc
les
mov
sub
nop
outsb
mov
jns
push
cs
or
jns
bswap
mov
je
add
push
inc
jg
fsubrl
and
and
test
add
sub
xor
cli
inc
or
adc
das
and
inc
or
movsb
pop
popf
popf
jle,pt
scas
xor
pop
push
arpl
xor
mov
xor
mov
dec
mov
push
dec
popa
call
shlw
sbb
dec
in
sbbb
hlt
sbb
lock
ret
cmp
aad
lcall
jg
ss
mov
pop
fbstp
jbe
inc
jge
testl
shlb
popa
mov
sub
leave
mov
ficompl
pop
rclb
jl
add
push
cmpb
imul
shl
xchg
mov
sbb
adc
add
daa
shll
rcll
mov
insl
scas
fimull
bound
out
pop
lds
insl
add
fisubs
sarb
outsb
out
popf
out
mov
add
mov
insb
xor
dec
push
jmp
mov
iret
mov
movsl
test
add
mov
sbb
lds
inc
pop
ret
mov
ss
paddusw
sub
add
lods
popa
ds
ret
dec
into
xchg
mov
pop
stos
nop
pop
decl
jb
jmp
and
xchg
cmp
mov
pop
xor
mov
movsb
repz
insb
lds
jbe
cmp
jae
ljmp
cld
jecxz
add
xchg
pop
ss
mov
mov
jne
lds
fnsave
xor
mov
jge
stos
sub
pop
sbb
mov
into
ret
mov
add
lret
push
pop
call
mov
data16
push
dec
notb
repz
out
sbb
into
sbb
mov
stc
cmp
add
lret
lret
xchg
les
vmovaps
xlat
lea
xor
add
popa
lock
jle
xor
jle
insl
jns
gs
mov
sub
ds
jl
lret
mov
jecxz
cld
fistpl
loopne
out
or
test
hlt
xor
adc
or
cmp
pop
cmpl
sbb
stc
jmp
iret
jp
inc
cmp
mov
xchg
pop
mov
mov
loop
sbb
test
sbb
xchg
subb
popa
stc
ja
ljmp
cltd
inc
in
add
lcall
dec
inc
sbb
and
jo
aas
jmp
jne
xchg
cwtl
and
adc
bound
shr
fsts
adc
in
fistpl
mov
repz
and
and
sbb
xchg
jle
nop
cmpxchg
loope
jp
or
lret
nop
ret
in
xor
call
rcrl
xor
and
xlat
stc
inc
adc
test
rorb
mov
test
sbb
lods
xchg
lds
addr16
arpl
sbb
xor
iret
mov
cld
inc
xor
cs
and
mov
fs
mov
dec
scas
addb
js
lock
and
push
pop
push
xchg
jae
cld
cli
or
xor
jne
out
adcl
cld
aad
xchg
dec
inc
add
push
dec
dec
nopl
mov
test
and
sbb
js
dec
inc
adc
add
call
loope
xchg
pop
sub
mov
mov
int3
jnp
mov
cmp
fnsave
add
fdivl
sti
mov
pop
int3
jmp
push
mov
mov
in
arpl
or
xor
fwait
stos
je
das
pop
pop
loop
xchg
inc
jg
mov
push
push
and
dec
out
sahf
mov
push
pop
cmpb
pop
and
jns
inc
addl
rcll
fidivrs
sbb
mulb
icebp
fdivr
jae
cmpsl
fdivp
adc
cmpsl
pop
int
dec
adc
inc
sub
loop
dec
cwtl
mov
mov
in
lret
repz
addr16
movsb
rcr
add
fcompl
jb
mov
faddp
push
mov
mov
mov
xchg
ret
xchg
lcall
dec
and
pusha
inc
aad
das
add
cmpsb
scas
lods
in
negb
jb
repz
stos
test
or
pop
inc
mov
pop
pop
in
mov
inc
fwait
push
imul
or
pop
ficoml
inc
jl
xchg
scas
adc
mov
clc
arpl
andl
push
fcompl
fbstp
mov
xlat
fcoml
push
inc
icebp
daa
pushf
add
lds
or
mov
test
dec
out
cmp
jns
sbb
loopne
scas
xor
or
and
dec
xor
adc
jg
cs
sub
les
xchg
insl
jno
mov
addl
sbb
mov
loopnew
mov
dec
aaa
in
fmuls
rorl
mov
das
fistl
mov
pusha
xlat
mov
sbb
out
in
pop
sahf
insl
lret
dec
mov
int
fnstenv
out
adc
dec
out
dec
in
sub
jle
ss
test
sub
mov
lahf
outsb
adc
frstor
clc
ret
clc
ret
stos
std
in
jae
in
cli
sbb
into
movsb
cmc
jnp
cmp
in
cmp
and
jmp
fcom
nop
sahf
mov
sbb
lods
sbb
cmp
pop
mov
int3
loopne
pusha
aad
push
or
test
sub
and
and
push
ret
insl
ds
je
rcrb
sbb
lds
hlt
mov
movsl
inc
leave
je
add
mov
pop
dec
ret
daa
mov
pop
rclb
icebp
ds
test
fisttpll
cmp
adcl
ret
std
lret
pushf
fstp
out
test
dec
cli
xchg
mov
aad
jg
addb
adc
movsb
xchg
movsb
aad
cmpl
xor
mov
dec
sub
mov
cmp
cmpsb
fdiv
mov
stc
test
mov
fldl
shll
nop
loope
mov
push
sahf
mov
push
in
sub
or
das
mov
mov
cmp
lahf
sbb
sbb
in
loop
jbe
push
sti
mull
mov
nop
mov
.byte
and
sub
mov
dec
negb
callw
push
int3
inc
mov
int3
push
fnstsw
mov
stos
cmp
push
loope
ja
push
roll
sub
jge
push
fmuls
icebp
cmp
adc
cmp
mov
inc
xor
scas
call
and
movsb
sar
lret
cmpsl
push
mov
mov
scas
xor
sub
popf
ljmp
or
daa
cld
idivb
out
aaa
shl
push
fcompl
ret
jmp
into
imul
push
popa
push
cld
pop
imul
outsl
xor
dec
inc
mov
aad
or
or
les
push
fisttpll
xchg
inc
lods
popf
pushf
adc
js
add
pop
xchg
lahf
xchg
out
or
scas
push
leave
add
inc
into
mov
sbb
stos
pop
les
test
add
jae,pt
mov
mov
shrb
les
push
mov
movsl
jae
sar
out
cmp
push
aam
das
add
lcall
jb
xchg
push
dec
ret
inc
rclb
adc
dec
sahf
adc
add
push
jg
pop
cmpsl
xchg
mov
outsl
sbb
cmp
or
icebp
jge
or
xchg
pushf
mov
adc
and
xorb
xor
arpl
das
lock
inc
mov
icebp
mov
cli
stos
inc
test
xlat
bound
mull
or
mov
inc
cmp
into
sub
mov
scas
cld
fmuls
jbe
imul
mov
mov
or
lods
clc
push
hlt
out
lods
mov
les
xor
pop
or
enter
mov
adc
fidivl
je
xchg
ret
int
cmc
push
stos
les
push
and
jns
insb
xchg
popa
pop
or
mov
cmp
mov
sbb
das
fnstcw
push
hlt
mov
sbb
dec
movsb
gs
and
push
ljmp
mov
mov
xor
push
std
lret
and
shrl
inc
inc
fbld
cmc
sub
out
sbb
loop
int
cwtl
dec
loopne
dec
sub
cwtl
rolb
cli
data16
divb
mov
dec
addr16
mov
pusha
jmp
pop
dec
rclb
push
jno
inc
js
lods
gs
mov
movsl
sbb
sub
push
incl
das
xchg
rorb
mov
das
clc
out
mov
jmp
mov
stc
mov
es
in
clc
and
stos
add
negl
pop
dec
lods
test
fcoms
jecxz
mov
dec
cld
testl
cli
fidivl
mov
aas
lahf
inc
lock
or
jbe
jnp
leave
sub
xchg
adc
rcrl
sbb
cmpsl
dec
cmpsl
out
shll
lret
loopne
push
in
pop
jb
pop
or
mov
mov
sub
xchg
movl
sub
jl
jecxz
das
jg
stc
jecxz
xchg
out
xor
iret
xchg
jp
adc
movb
sbb
push
push
cld
jns
imul
xchg
or
ret
push
mov
icebp
cld
push
add
inc
inc
sub
repnz
mov
ret
pop
jno
xor
imul
into
je
dec
push
ret
in
jbe
ds
jb
je
dec
cmpl
xchg
mov
data16
lret
sbbb
xchg
notl
mov
cmp
retw
jne
in
push
loope
out
inc
push
fadd
sub
add
mov
xchg
in
rclb
push
psrad
add
mov
push
or
push
jl
loope
and
fs
test
fdivrs
movsl
and
pop
pop
in
orb
push
mov
mov
movsl
aas
pop
testb
stc
xor
mov
sub
push
cwtl
icebp
gs
fisubs
xchg
movsl
jo
dec
dec
jg
push
add
test
add
cmp
scas
pusha
incl
hlt
sbb
sub
nop
in
add
gs
andb
fidivrs
out
push
lock
ja
pop
jb
cmc
jle
out
adc
cltd
in
jecxz
ds
xor
add
les
pop
rcrl
pop
aam
push
js
sub
jmp
jno
ss
inc
mov
hlt
stos
pop
add
cmp
xlat
ds
mov
jbe
mov
and
lret
call
push
aaa
clc
push
adc
shll
shl
mov
ror
fnstsw
je
ficoms
dec
ret
outsl
outsb
in
mov
mov
outsb
cltd
cli
pop
fildll
aas
cmp
rclb
scas
repz
dec
test
adc
xchg
in
sub
mov
xlat
jbe
shl
divb
mov
aas
mov
xor
mov
push
cmc
mov
xlat
inc
mov
mov
or
sbb
or
fldt
push
daa
add
loopne
lock
cmpsl
pop
adc
xchg
inc
jno
fldl
or
movsb
dec
loope
arpl
sub
jge
push
mov
stc
or
std
jo
jp
ret
jecxz
leave
sub
and
sub
mov
std
rcrb
pop
in
jge
jecxz
push
call
scas
aas
mov
insb
mov
insl
aas
lock
sub
jno
push
fnsave
sarl
outsb
jns
mov
aad
popa
add
jge
jbe
mov
or
inc
sub
mov
jnp
insl
adc
mov
inc
mov
xor
lock
jl
add
ja
xchg
sub
pusha
push
aaa
fildll
divb
or
inc
cmpsl
cmp
mov
pop
mov
mov
xor
pop
xor
scas
cmp
mov
or
sbb
jae
adc
mov
push
mov
and
xor
pop
sahf
push
aaa
jmp
mov
sub
mov
clc
mov
mov
push
inc
fmull
pushf
sub
dec
fisubs
in
push
aaa
popf
jp
pop
insl
jg
xlat
aam
fcoms
stos
and
nop
or
movsl
sub
mov
data16
loopne
or
jecxz
rcrl
fists
inc
jns
pop
mov
pushl
or
lahf
pop
lods
cltd
mov
mull
bnd
and
push
les
add
lret
mov
cwtl
sahf
sbb
add
dec
mov
sbb
bnd
out
lret
xchg
mov
mov
sbb
dec
jge
pop
mov
or
loopw,pn
hlt
pop
push
sbb
jnp
test
vpavgb
repz
faddp
jnp
ret
shll
push
int3
dec
lds
in
xchg
popf
nop
cs
xchg
jmp
mov
mov
out
bound
pop
sbb
sbb
mov
jo
jae
divb
cmc
mov
inc
push
and
lret
or
aaa
cmp
jne
xchg
pop
add
imul
add
iret
adc
fwait
xor
repnz
and
dec
pushf
jle
jl
cmp
pushf
in
mov
and
mov
stc
pop
mov
int
mov
out
sub
loopne
ja
movsl
lret
adc
fadds
test
lea
jbe
frstor
mov
cld
or
or
cmpl
jne
mov
add
pop
xor
inc
loopne
notb
iret
xor
fwait
mov
mov
iret
inc
xchg
sbb
cmp
inc
pop
sti
xchg
fimuls
inc
add
sub
mov
and
mov
add
inc
push
stos
pushf
push
push
arpl
nop
pop
mov
arpl
fmull
rcr
sbb
mov
pop
filds
push
test
mov
test
cmp
cmp
jp
int3
inc
rcrb
std
stos
outsb
pop
xor
stos
movsl
adc
mov
les
ljmp
xor
addb
mov
sbb
mov
sahf
jecxz
jg
ss
outsb
and
add
push
jp
mov
stos
jl
repnz
in
in
sahf
pop
lock
mov
in
fnstenv
ficompl
xor
jb
pushfw
sti
mov
std
pop
mov
push
pop
fwait
testb
lret
mov
cmc
cmc
mov
xchg
jge
xchg
mov
sub
jmp
inc
fbld
inc
out
sbb
in
or
cmp
or
pop
testl
push
dec
pmaddwd
fst
not
pop
xlat
inc
inc
mov
fildl
cwtl
rcrl
and
sti
mov
add
movsb
dec
cltd
inc
and
jo
jl
std
cmp
cmp
arpl
inc
popf
sub
and
xlat
aad
dec
jae
cltd
cmpsl
mov
jbe
inc
xchg
popl
sahf
scas
inc
pop
stc
mov
in
loop
adcl
adc
inc
jno
push
push
jp
push
add
pusha
stos
idivb
les
stos
and
cwtl
fidivrl
xchg
mov
and
push
shlb
stos
xor
mov
xchg
pop
cltd
cmp
mov
sbb
into
cmpsb
mov
push
mov
addr16
add
cwtl
pop
pop
movsb
loope
adc
clc
mov
lahf
push
aas
test
xchg
inc
les
movsl
mov
xchg
fdivs
in
stos
iret
sbb
mov
push
jo
aad
pusha
out
sub
gs
insb
mov
cmp
pop
mov
push
xchg
ret
xor
ret
mov
and
sub
pop
add
pop
test
jg
push
or
andl
fs
fdivrl
add
popa
mov
mov
push
fistpll
inc
and
cmp
cmpsl
jle
xchg
cmp
mov
shl
sti
imul
nop
xor
cmp
sbb
leave
and
and
add
repnz
xor
outsl
inc
imul
in
sub
sti
dec
and
mov
push
lods
xor
mov
out
sti
mov
pop
outsl
jp
ret
mov
cmp
pop
xchg
and
in
push
in
mov
push
shll
stc
std
pop
xor
inc
sbb
sbb
invd
sub
pusha
or
inc
add
jmp
imul
mov
ss
out
test
fcompl
mov
test
sub
xchg
jbe
push
xchg
dec
jp
mov
xchg
xlat
inc
enter
test
mov
sbbb
daa
nop
and
jle
cmp
fstpl
add
jbe
iret
imul
pop
push
sbb
js
xlat
mov
lods
sub
cmp
lds
bound
xchg
jnp
pop
mov
or
lahf
push
xor
push
sbb
scas
popa
and
stc
xorl
sub
push
nop
sub
je
je
inc
push
das
and
or
fiadds
nop
jl
mov
jecxz
jbe
jmp
test
mov
adc
sbb
adc
getsec
out
cmpl
leave
and
jg
cmp
and
add
gs
xor
lods
scas
dec
cmpb
movsl
out
pop
mov
mov
mov
pop
sbb
out
out
loop
push
shr
or
jne
test
loop
jnp
mov
je,pt
pop
out
sub
add
jge
lods
gs
out
test
fbstp
jmp
sbb
out
xchg
mov
inc
in
scas
pop
popa
shll
sbb
sub
pop
fidivl
push
in
shll
mov
dec
sti
mov
pop
inc
mov
neg
orl
fs
pop
ficompl
lds
push
sub
cmp
test
jmp
cwtl
jmp
push
mov
enter
icebp
add
insl
repz
clc
insl
jno
cmp
cld
pop
jbe
shr
push
inc
xchg
clc
aam
cld
or
xchg
loop
add
fdivr
out
add
mov
cmc
stos
shll
and
add
push
ds
mov
push
fists
pop
es
ficompl
lcall
rep
mov
idiv
int3
pop
das
add
or
mov
and
sbb
inc
lret
test
xchg
sahf
fbstp
mov
mov
jns
sbb
stos
scas
enter
imul
daa
push
cmp
into
add
imul
out
faddl
sbb
sbb
cmp
push
aam
and
push
leave
and
arpl
mov
lahf
xor
sbb
test
inc
mov
adc
insb
add
xor
movsb
jp
sub
imulb
addb
mov
std
dec
test
inc
push
pushf
push
push
mov
imull
or
and
xchg
inc
xchg
rcr
cmp
push
inc
shrl
popl
jge
mov
xor
xchg
inc
push
pop
enter
cld
xlat
mov
pop
test
jo
jmp
jmp
pop
add
shl
jno
aaa
sub
iret
add
and
jbe
scas
jnp
jo
dec
mov
rol
lea
lret
fucomp
pop
dec
repz
inc
outsb
pop
pusha
cwtl
dec
das
mov
mov
addr16
sbb
dec
or
xchg
test
push
clc
enter
sahf
mov
and
sbb
dec
add
pop
pop
out
mov
pop
aad
inc
int3
mov
jg
enter
adc
cmc
aam
aas
sub
jl
sub
sbb
pop
adc
xchg
add
cwtl
mov
pusha
push
loope
mov
rcrb
pop
inc
xlat
scas
xchg
push
cmp
and
sbb
gs
jmp
enter
inc
dec
sub
xor
xchg
into
or
fidivrl
nop
cmpb
sub
inc
xchg
jg
add
mov
mov
rorl
xchg
test
jmp
in
or
and
stos
sub
cltd
shlb
pusha
mov
sub
sub
cmpsb
mov
sub
pusha
gs
cli
icebp
mov
pop
inc
test
imul
cmp
mov
repz
sbb
testl
mulb
fisttpll
adc
mov
xor
pop
int
mov
call
xchg
repz
or
outsl
test
sbb
fisttps
push
mov
out
pop
add
mov
fstpl
sub
scas
or
stc
jg
sbb
aad
popf
xchg
push
test
nop
pop
outsl
push
or
push
jns
orb
jb
iret
inc
jae
sbb
jnp
pop
cmpsb
jo
insb
jmp
pushf
xor
ret
or
xchg
mov
insb
pop
cmc
adc
clc
dec
pop
cmp
sbb
loop
mov
adc
sar
fwait
popa
add
adc
jp
and
in
mov
dec
cwtl
in
sbb
or
lds
std
shll
jp
aas
and
shlb
loopne
outsl
adc
out
pop
push
fsts
lret
jb
dec
pop
loop
stos
movsl
bound
cwtl
cmp
push
sbb
push
push
lret
cmp
or
jnp
andl
push
push
push
mov
pusha
fdivrl
pop
movsb
int
sbb
dec
and
out
add
jp
or
mov
push
xchg
clc
mov
push
leave
push
stc
inc
imul
dec
inc
pop
testl
mov
jge
xchg
or
lods
sub
adc
sbb
push
movsb
rcrl
xlat
icebp
pop
adc
sub
xchg
sub
lods
pop
pushf
mov
xor
xchg
cli
jge
sbb
cld
ss
stos
arpl
loope
in
lds
mov
leave
mov
push
sbb
in
add
mov
mov
mov
test
bound
adc
add
shl
inc
ret
leave
repnz
sbb
push
push
in
pop
lods
cmp
aas
mov
and
cmp
shl
aas
sbb
or
ret
test
ljmp
aam
mov
cmc
cwtl
loopne
fsub
rorl
aaa
adc
xchg
jae
sub
jmp
cli
adc
out
mov
js
mov
add
scas
loope
and
dec
fldl
mov
pop
mov
popl
pop
leave
add
aam
jno
dec
pop
sbb
mov
fsubr
mov
in
mov
imul
adc
xchg
pop
cwtl
imul
xchg
cmpsb
fildl
xchg
xchg
xlat
jp
cmp
add
push
ds
daa
fisttpll
sbb
and
in
mov
pop
jg
xor
xchg
push
sbb
stos
loope
bound
cmc
outsb
push
push
push
adcl
negl
fwait
sahf
cmc
mov
sbb
or
in
sub
dec
push
jmp
movsb
push
loope
jb
int3
mov
out
icebp
inc
aad
scas
es
call
test
loope
jo
xchg
push
out
jmp
dec
adc
mov
stos
inc
js
inc
pop
jno
cmp
mov
xor
test
mov
push
mov
xor
sbb
jg
fildl
ljmp
or
pop
scas
cli
mov
pop
or
or
or
aaa
jno
jo
push
mov
xor
mov
sar
cmp
cli
daa
xchg
lock
add
jb
push
lret
push
or
js
int3
std
push
leave
out
aad
xor
loop
test
sub
sub
mov
push
xor
dec
cltd
jle
in
push
out
hlt
jg
add
sahf
jl
mov
js
scas
pop
imulb
scas
sti
enter
mov
scas
pop
ror
shl
sub
out
jne
lret
out
ret
mov
loope
imul
repnz
enter
pop
xchg
jb
test
sbb
icebp
lret
aaa
test
daa
xchg
xor
push
cmp
dec
sbbl
test
fsubs
push
aaa
cli
lcall
mov
mov
rolb
cmp
in
outsb
scas
jmp
push
sahf
cmpsl
dec
mov
mov
sub
mov
xchg
std
inc
xchg
test
xor
mov
in
pop
repnz
inc
out
clc
cmpb
rorl
addr16
mov
loope
inc
subl
pop
xchg
inc
xchg
popa
enter
icebp
and
popl
sbb
sub
ja
ret
jnp
stc
xor
and
xorl
into
push
movb
sti
sahf
pop
iret
out
es
mov
test
ret
fcmovne
mov
and
aad
test
and
stos
mov
int3
sbb
xchg
into
jbe
and
sub
sbb
jbe
pop
xchg
or
ljmp
and
or
cwtl
mov
rolb
cs
fcomps
adc
mov
std
sbb
pusha
xor
mov
lahf
xor
ljmp
mov
add
nop
sarb
lods
das
pop
mov
insb
loopne
xchg
mov
inc
lret
dec
into
into
jg,pt
mov
sahf
cmp
ja
adc
fbld
pop
outsb
mov
sbb
cltd
inc
xchg
mov
push
push
jno,pn
xchg
jbe
dec
mov
mov
push
cli
xchg
shl
movsl
jle
push
incb
pushl
inc
mov
jnp
push
test
loopne
lret
in
adc
inc
inc
fisubrs
movl
pushf
cmp
jae
into
inc
mov
das
xchg
inc
stc
negl
insb
inc
out
and
lods
mov
lret
and
movsb
cmp
push
popf
xchg
pop
or
jl
mov
adc
sbb
or
xor
or
jae
sub
pop
mov
rolb
adc
arpl
int
mov
pop
xchg
cmc
mov
subl
daa
ss
xor
fsubl
cltd
push
dec
loopne
mov
sub
xor
mov
es
pop
aad
cmp
mov
adc
repz
je
or
js
lcall
pop
sbb
sub
pop
in
adc
push
jle
jns
fistpll
mov
dec
movsl
add
mov
popf
mov
jne
lock
enter
pop
mov
aaa
in
rorb
out
ret
and
mov
mov
cmp
iret
mov
dec
stos
jge
push
xor
mov
ret
xor
adc
stos
shrb
mov
dec
lcall
test
or
insl
xchg
sbb
add
test
out
mov
sub
sbb
loope
dec
push
shlb
iret
pop
movsl
push
jge
lods
lea
pushl
lret
jno
lea
stos
jne
outsl
push
lods
sbb
cmp
or
and
push
inc
push
cmp
and
popa
pop
out
out
xchg
lahf
sbb
xchg
int
bound
ljmp
filds
mov
mov
cmp
add
inc
and
or
test
pushf
fisubl
push
and
dec
mov
mov
loope
fisubrs
sub
lcall
test
push
inc
aad
stc
mov
pop
and
pop
or
divl
pop
js
dec
mov
mov
inc
clc
cltd
inc
add
push
es
pop
mov
sarl
iret
inc
xor
std
xchg
cmp
in
mov
xor
aas
stos
dec
jmp
addr16
cmpsl
sahf
test
ja
movsl
mov
jno
adc
push
iret
sub
out
jmp
sbb
cmp
popf
arpl
cmp
testb
and
mov
lock
xchg
leave
xlat
in
and
mov
fsubl
outsl
push
pop
in
inc
pop
dec
subb
mov
lret
xor
sub
ficomps
vpmaxsw
dec
or
clc
mov
pop
mov
ljmp
aam
adc
es
mov
je
sub
adc
inc
movsl
lahf
ja
flds
fs
jecxz
into
cmp
or
js
in
mov
into
mov
cltd
imul
pop
outsl
add
insl
jecxz
out
push
pop
and
fnstenv
ja
push
in
movsl
into
sub
lods
pop
and
mov
repz
aad
inc
cmc
lea
movsb
scas
inc
jnp
fadds
lret
jne
or
mov
movsl
cmpsb
mov
insl
add
sub
sbb
mov
sbb
dec
inc
adc
fwait
sbb
gs
push
xor
mov
adc
xchg
or
fincstp
xchg
mov
mov
lcall
cmpb
outsl
out
into
mov
mov
mov
dec
push
enter
mov
sbb
xchg
push
mov
flds
push
test
and
loopne
rcll
cmp
pop
xchg
and
ret
mulb
mov
sbb
je
dec
loop
fstpt
lahf
aam
test
push
sub
orl
in
jae
ljmp
and
cmpsl
cmpsl
add
xchg
sub
xchg
scas
xchg
add
cmpsl
fiaddl
cmc
push
test
mov
xchg
mov
xchg
test
jnp
ffreep
nop
test
and
jbe
pop
adc
sarb
push
xor
daa
fnsetpm(287
and
jb
adc
and
sub
pop
mov
inc
inc
cmp
xor
add
fstl
in
pop
push
cmpsl
loopne
in
fisubs
rol
inc
repz
das
sbb
cs
adc
sbb
outsb
fisubrs
cltd
pop
call
xor
pop
jns
mov
jp
mov
push
fs
mov
add
push
pop
sbb
push
mov
sahf
outsl
call
mov
sub
cs
fidivl
int
push
fnstsw
repz
decb
mov
push
dec
push
test
out
add
iret
out
fldt
stc
mov
dec
sarb
out
adc
push
and
mov
mov
adc
setl
data16
mov
sub
or
xor
repz
aad
cmp
into
rolb
outsb
mov
decb
jmp
xor
stc
push
loope
ret
cmp
pop
test
sti
jge
insb
ja
cmc
enter
fsubrs
jecxz
orb
sbb
mov
aas
popf
fwait
sbb
mov
dec
in
insb
sbb
sti
and
adc
sub
es
sti
mov
sbb
mov
add
xchg
dec
jmp
imul
jmp
mov
fisttpll
mov
mov
lcall
into
lcall
jmp
cmp
in
xorl
outsb
pop
fmuls
les
fsubrl
stos
xchg
outsb
lret
sub
pop
imul
jb
bound
repnz
cmp
add
jg
sbb
fwait
jg
rolb
mov
add
test
mov
cs
lahf
and
or
loop
ss
jne
jns
adc
divl
mov
add
dec
ja
add
sahf
sbb
xor
mov
or
add
fidivrs
lods
je
cmp
mov
popf
cmpsb
fstl
jmp
test
cmp
xchg
and
cmp
jecxz
xchg
iret
jb
push
lods
jbe
gs
inc
mov
lock
fstps
pop
fbstp
push
xor
fsubs
sbb
inc
cmp
repnz
dec
mov
popf
mov
cltd
lahf
jmp
enter
jo
mov
push
iret
sbb
inc
adc
icebp
pusha
lret
mov
xchg
mov
or
mov
ds
sub
pop
cltd
shl
xchg
pop
mov
adc
inc
xor
out
cmc
ficompl
test
rorb
push
test
mov
loope
mov
cli
scas
adc
sub
sbb
cmc
mov
sub
inc
cli
mov
movsb
cmpl
lcall
or
mov
push
cmp
leave
push
and
xchg
hlt
pop
outsl
in
fwait
dec
jmp
push
sbb
aad
or
out
inc
js
loop
stc
lahf
pop
icebp
icebp
es
mov
jg
adc
int3
pop
lock
cs
cltd
rcrb
mov
cmpsb
xchg
and
fmull
aad
fidivs
inc
ljmp
pusha
ret
rorb
fcoml
hlt
xor
movsb
pop
cltd
lds
inc
fdivs
inc
ss
test
mov
adc
push
stos
mov
iret
bt
es
dec
loopne
pop
fsubs
aam
mov
push
mov
push
leave
cld
imul
add
insl
repnz
adc
mov
xor
arpl
je
sub
in
loopne
fldenv
mov
sbb
jmp
clc
mov
je
out
sub
xchg
repz
cli
pop
aaa
add
jnp
shr
dec
insl
sar
xor
repz
sbb
cld
fnstcw
sub
xchg
aaa
jecxz
int3
mov
and
test
das
icebp
das
pushl
testl
fsubrs
fsubl
mov
cmp
dec
icebp
test
mov
cmovae
rcrb
adc
push
repnz
mov
push
lahf
faddp
mov
in
decl
iret
out
shr
pop
add
idiv
lret
push
adc
fmull
sbb
scas
or
push
icebp
push
ret
fidivrl
insb
inc
xor
mov
test
mov
push
mov
mov
add
cmp
clc
xor
adc
xor
aaa
rcr
loop
test
lock
rolb
push
insl
and
test
jl
ss
and
rorl
out
ds
out
std
jp
mov
leave
mov
mov
push
or
ljmp
dec
add
enter
lods
push
scas
cltd
data16
inc
popf
fcmovne
sbb
lods
or
push
into
pop
sar
jp
into
int3
jmp
bound
jnp
mov
movl
mov
pop
xorb
jo
jecxz
lret
in
cmp
and
dec
sub
dec
insb
cmp
rorl
ret
or
lods
rcrb
or
outsl
or
outsl
or
jmp
das
mov
jp
mov
rclb
jge
stos
add
cmpsl
mov
rolb
or
stos
sub
cli
adcl
aad
push
loopne
and
int3
jne
jle
popa
add
fsubrs
cmp
mov
out
dec
movsb
les
add
mov
test
hlt
or
stos
sbb
jbe
fidivrs
dec
dec
leave
xchg
js
cs
push
adc
sbb
addl
mov
gs
fs
fwait
adc
push
int3
xchg
lea
xchg
xchg
cmp
mov
test
pop
or
int
aam
ljmp
jbe
pop
fnstsw
or
rorl
out
cltd
mov
cmp
add
shll
jg
ja
adc
fstp
mov
mov
popa
xor
into
xchg
call
stos
dec
cmpb
add
mov
xchg
xchg
push
cmpl
call
idivl
popl
sahf
notb
mov
xchg
loop
inc
mov
push
push
fildll
out
ja
mov
add
movsl
sub
leave
mov
imul
mov
jo
inc
fldl
mov
mov
lods
mov
fwait
adc
aam
iret
jge
adc
or
inc
lret
mov
jb
xor
inc
xor
test
mov
dec
aad
mov
or
lea
adc
or
fnstcw
adc
ljmp
scas
hlt
mov
aad
inc
fistl
xchg
push
mov
adc
cli
adc
inc
ret
push
mov
adc
jg
cmp
sub
and
shll
ret
loope
divb
lahf
aaa
test
dec
mov
xorl
test
aad
out
out
rcll
fisttps
das
movsl
mov
push
sar
sbb
addl
int3
stos
popf
iret
xchg
pop
inc
sbb
arpl
stos
xor
repnz
xchg
out
jns
and
out
lret
sbb
or
sub
sti
pusha
cmp
lahf
xor
mov
imul
push
dec
dec
push
scas
pop
imul
les
ror
ret
out
dec
imul
mov
add
sub
leave
dec
cmc
sarb
out
fdivrs
incb
shlb
sbb
out
shrb
dec
xchg
xchg
cs
push
push
imul
mov
push
mov
dec
or
mov
cmp
int3
popf
push
mov
nop
ss
call
and
push
pushf
push
enter
mov
lret
iret
lock
xor
mov
test
mov
dec
repz
or
cmp
imul
in
adc
ss
xchg
andb
loope
xorl
push
xchg
jnp
pop
adc
addr16
sub
mov
sub
add
rep
or
movsb
inc
inc
xlat
mov
sti
or
daa
inc
out
mov
clc
mov
std
xor
fistps
dec
mov
add
sbb
adc
or
xor
enter
mov
into
jnp
jmp
imul
cmp
imul
clc
xor
adc
sti
test
je
push
in
sbb
cmp
int
popf
mov
fwait
mov
jmp
pushf
out
aad
adc
push
sbb
mov
xchg
scas
mov
sub
hlt
adc
fnstsw
xchg
push
xchg
out
inc
pop
mov
sub
out
adc
fidivrl
.byte
add
add
adc
lock
and
mov
sbb
sub
pop
icebp
mov
cmp
mov
loop
mov
jb
stos
insl
mov
cmp
enter
jp
sub
adc
fwait
adc
pop
mov
jge
inc
in
lret
in
scas
mov
lahf
lock
jecxz
inc
flds
popf
aad
xchg
rorb
mov
int
and
add
xor
mov
decb
fadd
cmp
pop
mov
and
cmp
mov
dec
add
test
push
dec
add
es
fwait
rorl
in
sub
out
inc
in
andb
stos
les
and
outsl
cmp
jp
repz
jae
inc
mov
push
mov
arpl
rcl
mov
or
sbb
sub
cmp
and
adc
xor
inc
fwait
or
adc
pop
mov
out
push
mov
jp
int
aaa
aas
mov
and
and
ds
cs
mov
out
mov
mov
jecxz
nop
xor
fwait
dec
xchg
adc
cltd
fsubl
repz
mov
into
jp
inc
push
adc
sub
adc
andl
sahf
xor
sahf
mov
clc
inc
push
mov
shlb
jnp
lret
icebp
das
xor
sbb
push
popf
adc
lods
bnd
jo
enter
sbb
pushf
or
mov
xor
mov
clc
mov
jbe
ret
lods
pop
jb
in
push
push
mov
push
xchg
pop
sbb
cld
cmpsb
es
cmc
insb
push
mov
or
test
xchg
push
cmpb
lahf
lret
popa
les
lcall
insb
jp
out
pusha
push
jmp
lock
cmp
fldt
jge
push
daa
xor
add
xor
nop
ret
movsl
xor
mov
movsl
mov
xchg
cmp
out
aaa
repz
mov
cmp
pushf
jo
and
jae
repz
cmc
in
lret
outsl
mov
cmpsl
pushf
aas
stos
cmp
dec
fcoml
daa
cmp
frstor
dec
nop
mov
ret
or
push
jnp
mov
pop
je
xor
pop
and
cmp
sub
adc
mov
shrl
push
outsb
cli
sub
sbb
cmp
jno
in
out
movq
pop
test
cltd
jnp
aam
lcall
xor
stos
icebp
dec
lret
dec
mov
out
mov
adc
pop
outsb
jle
sarb
xchg
add
out
inc
inc
cwtl
fsubr
imul
call
adc
loop
in
or
loop
push
sbb
test
or
sub
pop
test
fstps
sub
jns
outsb
inc
adc
std
out
jne
aaa
fsts
cmp
push
scas
xor
outsl
fs
das
jmp
je
inc
das
pop
fldenv
xchg
das
inc
lds
sarl
mov
jge
pushf
xchg
addb
dec
and
sbb
pop
sub
jbe
xchg
adc
jne
mov
movsl
cltd
push
gs
pop
mov
ret
mov
mov
and
outsb
mov
sub
inc
and
je
mov
inc
push
loope
shll
bound
or
sbb
in
ret
insb
push
xchg
sub
jno
notb
into
mov
addr16
mov
mov
xchg
cltd
and
das
or
mov
sbb
repnz
mov
clc
pop
or
and
mov
mov
cmp
rcl
jbe
adc
cmpsl
iret
inc
shl
out
cmp
fwait
jp
fildl
mov
mov
jns
call
gs
jp
cmp
push
mov
fidivs
outsl
mov
arpl
jg
movsl
testb
cmpsl
sbbb
and
add
sbb
adc
add
popa
jno
insb
jecxz
mov
aas
pushf
je
outsl
iret
push
mov
xchg
mov
add
jae
push
jno
out
notb
or
jnp
movsl
and
stc
arpl
in
cmp
mov
adcl
fadds
sti
ret
ds
mov
aaa
imul
jns
and
arpl
icebp
push
pop
fidivrl
ljmp
stc
out
jl
mulb
ds
sub
push
ret
popa
aas
xor
mov
out
adc
notl
mov
inc
cmpsb
add
adc
and
mov
xor
inc
gs
gs
imul
dec
insb
sub
es
jmp
push
imul
jmp
pop
add
lahf
add
lods
subl
xor
dec
mov
pushf
arpl
pop
inc
test
jns
insl
std
loop
push
jl
or
mov
jbe
and
mov
test
sbb
mov
adc
test
pop
sub
daa
out
adc
out
insl
xchg
mov
gs
in
push
test
adc
loopne
fnstcw
rcrb
mov
testb
test
loope
adc
mov
dec
ja
test
sub
fstpt
xchg
push
sbb
and
pop
add
test
sbb
shrb
jle
pop
rorl
push
mov
cmp
imul
dec
push
inc
mov
or
stc
adc
jg
xor
lods
sub
jnp
rcll
cmp
pop
in
les
subb
xchg
lock
out
and
inc
lret
leave
movsl
mov
xchg
pop
xchg
push
cld
xchg
outsl
aam
jmp
jle
stos
ljmp
xlat
push
mov
out
pop
iret
fs
loopne
loopne
and
ljmp
lods
dec
int3
lret
stc
jnp
add
jp
adc
or
arpl
xlat
mov
shl
iret
lds
adc
push
rol
pop
js
leave
add
insl
out
stos
xor
insl
add
pusha
fidivs
leave
and
or
or
mov
or
in
outsb
inc
cmp
shl
fstps
sub
sti
lcall
in
xor
mov
in
loop
sub
mov
xor
push
or
and
inc
push
mov
in
scas
push
mov
int3
xchg
jo
cmp
andl
std
lcall
push
and
mov
dec
pop
mov
xchg
mov
dec
test
inc
std
testl
cvtps2pd
cmc
vucomisd
ljmp
cmc
loope
repnz
cmpsl
cmp
jnp
enter
les
leave
mov
int3
xchg
mov
mov
enter
stos
std
pop
pop
lea
push
repz
shlb
aaa
inc
and
mov
mov
sub
ds
mov
out
out
call
testb
ss
pop
mov
cltd
lahf
adc
or
scas
movsl
cmc
sbb
insb
xlat
dec
mov
int3
lea
sub
fstpl
ljmp
cmpsb
sbb
push
int
jp
and
ja
push
mov
icebp
or
mov
cmc
lea
mov
das
test
inc
loopne
addr16
jle
test
fwait
lods
dec
xchg
rcr
sbb
dec
scas
cmpsb
pusha
mov
or
xor
jnp
orl
cmp
ficompl
cmp
pushf
pop
testl
scas
sub
push
or
fildll
adc
dec
fs
sub
stc
test
negl
pop
or
cmp
stos
jg
jne
push
pop
hlt
sub
adc
sbb
std
lcall
push
cli
in
cmp
insl
movzbl
popf
lahf
sub
sti
pop
int
mov
add
sbb
xor
xchg
xchg
mov
sub
adc
mov
pop
incb
adc
mov
mov
mov
test
jmp
les
add
adc
fildll
les
das
mov
js
or
sub
movsl
inc
xor
push
push
pusha
repnz
add
and
in
bound
in
xchg
das
dec
push
ljmp
jl
mov
cmp
stc
leave
lahf
sbb
pop
das
fisubrs
mov
push
mov
lret
mov
fsubrl
mov
lret
inc
test
fists
mov
pop
xchg
les
stos
test
subb
mov
lret
xor
mov
push
scas
gs
jecxz
ja
mov
jns
faddl
mov
jb
popa
pop
int3
xchg
mov
mov
stos
lea
shlb
push
jae
jbe
lahf
gs
dec
add
mov
dec
outsb
cmp
cmc
sahf
xchg
ja
adc
dec
push
add
mov
in
es
aas
or
mov
and
and
cmpsb
mov
adc
fcoml
sbb
test
cld
in
into
mov
orb
xlat
call
add
mov
sbb
cmp
xchg
pop
mov
mov
cmp
cmpsl
orb
pop
sub
sahf
mov
add
bound
push
rorb
jecxz
xchg
cld
and
cmp
jae
shll
ljmp
arpl
pop
clc
lea
adc
pushf
dec
aas
add
lahf
test
loop
mov
in
jne
cld
sub
push
or
xchg
dec
mov
rcr
repz
xchg
mov
push
sub
push
mov
call
mov
fs
xchg
call
jle
out
push
or
sahf
add
movsl
mov
xchg
push
stc
lods
cmp
mov
test
mov
call
push
or
dec
aam
pop
ds
xor
mov
sbb
daa
mov
push
out
sar
je
pushl
fmul
test
cmp
xchg
shrb
sub
outsb
mov
or
insl
movsl
push
shrb
das
jmp
es
bound
loop
arpl
cmc
ds
xchg
mov
js
pop
pop
sbbl
lret
and
lret
scas
dec
and
or
ret
xor
add
test
in
jbe
add
inc
lds
xor
jp
ret
cmpsl
xor
roll
cmp
add
push
cwtl
out
sub
mov
jo
js
xor
mov
mov
aaa
jo
add
sti
sbb
cli
push
xchg
cmpsb
mov
sar
sub
loopne
cmpsb
or
xchg
shrl
pushf
leave
shll
push
lods
testl
xor
adc
nop
xor
cmpsb
cltd
xor
push
sti
loopne
stc
push
or
pop
test
lahf
les
inc
pop
fstpl
inc
mov
aad
xor
lret
inc
inc
rcll
xor
aad
loope
xor
push
into
cmp
mov
test
adc
xchg
or
mov
ret
push
mov
dec
jp
adc
fwait
push
mov
cmp
xor
mov
dec
scas
shlb
adc
add
xchg
inc
pusha
je
fsubs
push
lds
mov
dec
js
mov
imul
das
stos
cmp
inc
mov
jg
in
loopne
imul
add
sahf
sub
mov
add
mov
or
sti
xchg
mov
or
mov
xchg
icebp
sbbl
jp
xor
sub
mov
fmul
adc
mov
outsb
push
das
imul
xor
jmp
test
xchg
or
insb
lock
pusha
mov
mov
sbb
and
aaa
xor
sub
imul
inc
sub
sbb
pop
xchg
out
mov
ret
pop
out
push
outsb
sti
ds
add
and
fldenv
add
movsl
inc
sub
dec
or
xchg
iret
dec
into
out
imul
int
insb
shll
mov
test
push
jmp
test
lods
cmp
js
xchg
daa
rorb
cmp
stos
and
in
dec
leave
sub
or
cmp
dec
inc
ret
inc
dec
sarl
sbb
mov
mov
push
mov
in
out
dec
in
mov
mov
sbb
fmull
stc
mov
mov
mov
jecxz
jg
xor
addr16
inc
flds
push
daa
subb
push
mov
cmp
test
xchg
in
adc
lcall
sbb
sub
call
fldcw
inc
fldl
xchg
mov
mov
mov
lods
add
and
push
pop
filds
fs
lods
or
inc
cld
rclb
xchg
ret
arpl
in
sub
shrl
fnstenv
inc
outsl
pop
sub
adc
popa
pop
cld
mov
fcomp
cmp
jle
jb
and
mov
loop
mov
mov
jnp
pushf
out
stos
push
dec
jnp
ds
pop
push
cmp
into
or
inc
sub
lret
rclb
mov
mov
stc
pop
jmp
inc
rorl
into
push
push
jl
dec
sbb
pusha
sbb
mov
jge
sbb
sbb
jl
sahf
xor
scas
cmp
or
dec
nop
cmp
jecxz
sbb
dec
sbb
stos
pop
lods
mov
add
jne
or
cmp
mov
xchg
test
xchg
and
roll
cltd
add
fsubrs
mov
add
push
mov
xchg
shl
std
stos
inc
xor
add
adc
shrl
add
mov
test
lahf
sub
sahf
sahf
out
pop
sahf
push
popa
and
shll
push
cmp
sub
insb
fs
mov
sub
mov
shrb
mov
inc
push
into
dec
test
inc
jmp
xor
cmp
add
lds
mov
xchg
aaa
icebp
ljmp
inc
sbb
jb
in
sahf
imul
leave
movswl
jno
dec
and
xchg
fistps
xchg
je
lods
sub
push
fnclex
rol
rcrb
sbb
fistpl
rcr
mov
shrl
cmc
xor
pop
insb
pop
xor
inc
mov
insl
push
xchg
cmc
and
inc
call
mov
push
lock
into
test
cli
xor
pop
adc
fcoms
out
rorb
loopne
dec
insb
out
cmp
gs
pop
xchg
iret
roll
lahf
cmpsb
mov
lea
cmp
jnp
jmp
mov
xor
loopne
cs
mov
adc
fiaddl
jle
data16
or
aaa
fisubl
mov
rcr
lods
jno
bound
sbb
mov
and
jmp
xchg
in
lods
cmovl
and
jp
xchg
subl
jmp
cmpl
movsw
out
push
mov
int
daa
adc
inc
xor
popf
or
or
mov
ss
mov
popa
mov
lret
mov
sti
shl
mov
push
mov
loop
xchg
xchg
mull
cmp
jge
pop
punpckhbw
inc
xchg
or
notl
xor
lock
lea
sub
xor
shr
add
sbb
rcrl
fs
mov
pop
xchg
lahf
xchg
push
lcall
or
int
mov
push
lcall
in
jl
mov
jp
incl
in
inc
rcl
rorb
int3
icebp
jg
das
pop
sub
and
dec
in
scas
mov
sub
outsl
cmpsb
or
add
repz
xchg
cmc
add
xchg
lahf
pop
insb
sahf
inc
dec
bound
jno
nop
add
cmp
cmovae
sub
daa
cmp
outsl
fstpl
popf
leave
cltd
rolb
inc
loope
jno
rolb
xlat
lret
mov
xor
xchg
jb
mov
sub
push
mov
mov
add
lret
gs
inc
cmp
faddp
sbb
sub
xor
insl
fsubl
pop
nop
xor
pop
iret
dec
mov
divb
loope
lock
aad
xor
cmp
stc
scas
stos
mov
nop
xchg
jl
mov
sbbl
daa
mov
aam
jp
sbb
dec
enter
adc
addb
lods
sub
insb
add
roll
lods
sub
adc
and
stc
mov
cmp
push
mov
xchg
out
loope
push
jno
ret
popa
call
aad
ret
cmp
cmp
inc
mov
mov
js
and
ja
jo
loope
pop
test
pop
mov
jbe
shlb
pop
sub
testb
cld
int3
test
sub
mov
mov
movsl
inc
inc
bound
pop
mov
sbb
mov
adc
pop
inc
nop
jge
aas
mov
mov
clc
mov
xor
movsb
mov
push
lahf
sbb
outsl
dec
cmpsb
call
popf
add
adc
mov
repnz
or
dec
dec
inc
imul
divb
sbbb
inc
push
es
outsb
movsb
add
adc
sbb
dec
inc
xchg
inc
or
mov
cmp
stos
jb
shll
loop
jbe
pop
popf
xchg
and
dec
rcl
adc
or
xor
pop
movsb
dec
mov
pop
fadd
aaa
popa
xor
sub
or
out
ljmp
push
ss
mov
rorb
sahf
xchg
lea
rolb
pop
jmp
loop
bound
inc
aam
cmpsb
pop
fstps
pushl
fcoms
aas
xchg
cmp
sbb
cmpsl
call
mov
inc
aas
cmpsl
lods
cmpsb
fld
adc
outsb
sbb
ljmp
jno
add
adc
lods
sbb
push
cli
add
les
std
es
dec
inc
ds
icebp
mov
inc
mov
cmp
es
sub
push
inc
push
jmp
push
sub
js
test
sbb
ss
test
or
sarl
out
rcrb
movsb
xchg
cmp
dec
inc
mov
pop
mov
lods
in
and
pop
lock
sub
pop
lds
jmp
pop
or
ss
fstps
jb
ljmp
test
dec
xor
push
inc
pop
insl
data16
mov
jle
imul
decl
sahf
loopne
dec
leave
out
push
movb
inc
cmp
push
icebp
push
mov
imul
and
xor
aaa
push
cmp
mov
pushl
fcmovnbe
imul
pop
inc
fmul
jg
ret
lret
scas
and
push
push
push
outsl
rol
jb
add
decl
push
hlt
out
or
jno
push
insl
test
je
lods
sbb
cmp
push
mov
pop
fs
sub
pop
or
push
mov
xchg
in
add
mov
pop
jns
add
in
sbb
fwait
stos
jnp
arpl
outsl
fstps
and
jae
lcall
sbb
in
add
loop
pusha
sub
mov
mov
mov
rcl
cmc
icebp
push
or
mov
inc
xchg
shlb
mov
cltd
cmp
bound
adc
in
repz
scas
pop
mov
jnp
lret
xor
add
hlt
sub
arpl
mov
jnp
add
push
xchg
dec
mov
xchg
pop
push
push
push
mov
stos
jg
lods
cmpsb
daa
push
sbb
jns
enter
mov
test
mov
popf
jle
int
cmpsl
push
sub
bound
or
and
jo
xor
pushf
fisubl
dec
lods
ret
or
mov
push
subl
dec
aam
add
into
mov
pop
jo
sti
cli
mov
or
push
xor
int3
sbb
fwait
pop
scas
jns
movsl
es
mov
out
iret
push
in
push
push
int
fisttpl
test
je
repnz
leave
popa
xchg
dec
leave
les
movsb
adc
gs
rclb
sbb
inc
adc
leave
inc
push
jo
xor
in
mov
jo
scas
lahf
push
push
pop
shlb
cli
subb
xor
or
mov
mov
push
mov
and
es
push
stos
je
jge
insl
sbb
and
add
add
test
xchg
mov
mov
push
or
or
jge
daa
jg
cmp
fstps
push
pushf
pusha
fs
xchg
daa
cmp
pop
test
imul
repz
mov
mov
cmc
push
pop
mov
sbb
sbb
fstps
ljmp
or
divl
clc
jb
pushf
icebp
fisttps
mov
in
mov
rorl
xlat
sarb
mov
mov
lds
jno
and
gs
call
jp
mov
rcll
pop
sbb
ret
test
into
cmp
stc
cmp
mov
adc
lret
stos
add
mov
push
adc
adc
sub
jmp
std
dec
out
cli
or
add
leave
andb
popa
mov
and
push
dec
outsb
xchg
int
jns
or
xchg
xchg
and
in
inc
icebp
fimull
jae
stos
sbb
and
lock
dec
enter
pop
icebp
out
sub
rorb
push
lods
scas
adc
jb
test
jne
lods
lods
imul
mov
stos
repz
pop
and
pop
andb
jecxz
sub
loope
mov
xchg
mov
cmp
stos
pop
out
or
mov
jne
cwtl
mov
and
push
out
dec
fimuls
and
shlb
add
js,pt
int3
xchg
andl
push
fcmovb
aas
or
das
stc
cmpsl
and
sub
fadd
rcr
shl
xor
stos
loopne
mul
pop
lahf
or
rcr
aas
test
inc
cmp
lret
mov
aam
loope
jns
outsb
lret
sub
sub
scas
hlt
cs
and
xchg
mov
shll
movsb
or
mov
push
push
or
loop
gs
ljmp
xor
jmp
push
adc
pushf
clc
insb
mov
addr16
xor
js
sub
pop
cmpsl
insl
push
std
add
es
loopne
push
and
sub
inc
xchg
xor
js
test
inc
iret
or
xor
dec
lcall
inc
cmp
and
adcl
sbb
or
imul
bound
call
mov
leave
jne
rcr
sub
sbb
fs
mov
lea
and
pop
fwait
sbb
fwait
rcl
add
out
xlat
lods
sub
in
in
cmp
sbb
add
jno
adc
mov
pop
call
jae
addr16
sub
inc
jnp,pn
js
cmp
shll
jge
orl
subb
sub
test
or
inc
mov
cli
adc
testb
and
xchg
in
xchg
mov
cmpsb
mov
and
mov
loop
pop
adc
mov
cwtl
decb
inc
int
subl
mov
fmul
pop
jne
xchg
std
sub
stos
sbb
stos
ret
test
cmp
xchg
ret
pop
fsubs
sbb
and
jnp
cltd
mov
and
push
xor
cmp
orl
pop
and
jns
add
inc
data16
jp
xlat
and
jle
clc
cmp
mov
orb
dec
cltd
fnsave
loope
dec
sahf
jno
cltd
mov
shll
and
ret
jbe
mov
pusha
xchg
loope
stos
or
lahf
test
push
dec
gs
aaa
jecxz
jns
or
xchg
jl
pop
pusha
and
lods
inc
movntps
addr16
imul
mov
pop
ljmp
or
xor
push
insb
push
gs
cmpsl
ss
mov
mov
in
inc
adc
inc
out
sub
xchg
jbe
push
mov
mov
test
or
out
aam
out
ret
inc
cwtl
lods
add
fwait
cmp
inc
in
inc
cmp
std
les
cmp
sbb
out
dec
ss
pop
data16
enter
adc
arpl
loope
iret
and
mov
sub
cmp
or
jb
ja
pop
test
and
les
repz
je
jb
pop
aaa
loopne
mov
sub
out
fbld
push
fsubl
cmpsl
test
outsb
jb
nop
pop
cmp
xlat
pop
jmp
pop
xor
pop
les
shlb
mov
jle
sbb
xor
jge
push
pop
jl
icebp
shr
and
pop
xor
fwait
jge
pop
or
ret
cwtl
cld
out
mov
push
xor
rolb
pushf
dec
cmp
xor
decb
lcall
mov
enter
orb
mov
push
jb
mov
xchg
mov
test
cltd
mov
cmc
incb
dec
std
and
jo
bnd
mov
mov
repnz
bound
les
pop
loopne
incb
or
mov
lcall
das
dec
sbb
jmp
lahf
sti
std
cwtl
fcoms
add
fwait
imul
push
xchg
sbb
ret
jo
pop
jne
bnd
stc
pop
nop
shl
jnp
adc
repz
cli
pop
pushf
fstps
loopne
sahf
or
aas
std
stc
in
mov
jb
mov
pavgw
mov
sbb
cli
cmp
insl
pop
cli
adc
outsl
enter
or
jle
or
push
lods
cmp
adc
loop
int3
popa
fisubrs
or
int3
scas
push
sarl
insl
and
sub
mov
push
mov
xor
xchg
sub
aas
lret
cmp
out
arpl
xor
xchg
sub
rorb
out
out
pop
inc
popa
ss
dec
dec
das
test
in
nop
xchg
stc
jl
insl
adcl
sahf
insl
frstor
or
inc
in
scas
jne
mov
nop
cmp
add
xchg
loopne
xor
xchg
int3
add
out
inc
sub
push
outsl
movsb
sbb
aad
mov
adc
lea
xchg
xchg
xchg
and
stos
hlt
pop
push
movsb
and
push
daa
mov
cmp
xchg
push
lods
inc
sti
sub
xchg
push
inc
fs
or
jo
jno
insl
xchg
or
mov
mov
fidivrl
jge
adc
and
push
xchg
mov
xchg
push
nop
mov
icebp
and
repz
mov
in
mov
out
sbb
int3
push
xchg
fadd
adc
sarl
jae
stos
addr16
dec
daa
neg
sub
xchg
rclb
sbb
jo
ja
xchg
sarb
sub
sub
xor
cmp
dec
jle
jmp
pushf
enter
pop
out
mov
es
shll
fdivs
push
mov
fdivr
pop
mov
gs
enter
dec
cwtl
pop
jb
sbb
lahf
mov
xchg
xor
sbb
daa
lods
out
xchg
gs
ret
fisubl
js
cmpsl
xor
adc
psrlq
lahf
adc
sub
call
ret
rcll
arpl
outsl
test
adc
jmp
cmp
not
cltd
imul
mov
movsl
push
je
push
lods
mov
jns
test
repz
cmp
push
or
ja
xchg
jecxz
xchg
jecxz
mov
pop
push
dec
je
pop
lcall
xchg
jo
out
es
loope
lods
or
adc
sub
xor
push
fs
push
push
jmp
es
cld
xchg
sbbb
dec
outsl
das
adc
stos
jp
sub
sub
mov
cmp
andl
mov
jno
and
mov
lods
lcall
cltd
stos
push
std
cs
xor
and
jle
ja
cmpsl
in
out
sub
movb
fsubl
arpl
sbb
test
mov
push
jl
cs
jns
mov
enter
dec
xchg
mov
lret
icebp
push
aaa
bound
jae
mov
inc
std
outsl
stc
repz
adc
add
and
inc
and
xchg
imull
mov
sbb
mov
dec
dec
das
adc
xor
xor
fwait
mov
pop
sti
popa
pop
pop
rcrl
push
mov
mov
cmp
jbe
sub
fstps
pushf
in
testl
repnz
lods
mov
stos
add
nop
fisubrs
push
mov
mov
stos
sbb
jne
enter
aam
les
fsub
inc
cmpsb
sub
xor
sub
hlt
fcmovnbe
loop
lcall
scas
push
enter
xor
push
jmp
jmp
or
aam
jmp
mov
imul
rorl
sub
pop
popa
es
test
add
mov
xor
pop
sbb
notb
sbb
sub
movl
sbb
mov
cmpsl
lret
dec
fsubr
xchg
es
dec
push
cmp
cwtl
jge
aaa
mov
mov
and
int
pop
addb
ljmp
sub
xchg
xor
mov
enter
dec
jo
add
jae
iret
bnd
in
fwait
icebp
lcall
fcoml
push
cmpb
and
sbb
mov
fistps
outsl
loop
lret
xchg
bound
in
subb
outsl
and
std
mov
loope
dec
in
aaa
xor
sub
negl
ja
fiaddl
push
std
mov
or
orl
sarl
sbb
push
cmpsb
aaa
jbe
fabs
sbb
insb
add
pop
jmp
subl
repnz
das
and
cmp
mov
cltd
ljmp
pop
cwtl
add
out
push
data16
push
sub
popf
inc
xor
pop
popa
inc
lds
xchg
gs
lods
je
sahf
aaa
lahf
daa
andb
fcmovb
mov
ret
sbb
inc
jns
jmp
insb
xchg
scas
aaa
wbinvd
outsb
fistps
mov
pop
sub
or
lods
fbld
pushw
aas
and
cld
mov
sbb
adc
push
aam
mov
xor
popa
gs
inc
inc
mov
mov
clc
cmp
sbb
mov
mov
push
outsl
daa
sbb
lock
push
in
push
test
xchg
aas
push
inc
pop
imull
cmp
js
push
inc
sub
sbb
das
adc
push
push
cmp
insb
xchg
cmp
and
mov
or
in
mov
popa
data16
movsb
je
fwait
inc
jb
mov
add
cmpsb
add
mov
push
rcr
fnstcw
lods
out
bound
cltd
fwait
and
fdivrs
sti
cltd
cmpsl
xor
sub
lods
push
mov
xchg
dec
push
mov
icebp
ret
mov
lods
es
icebp
cmp
aam
mov
mov
test
and
imulb
mov
test
xchg
scas
pop
mov
xchg
xchg
inc
dec
push
jo
push
repz
push
and
or
pusha
js
addl
jae
cmp
stos
imul
push
movsl
pop
stos
cmp
sub
inc
adc
fcmovnu
mov
mov
sti
xchg
xor
lock
xchg
dec
insb
sbb
scas
or
cltd
pushf
sar
cmpb
xor
jno
lods
daa
shl
jge
inc
xor
lods
and
push
mov
or
lock
gs
cmpsl
mov
jle
jp
or
mov
out
pop
ret
xor
sub
ret
inc
sti
xor
dec
xor
lock
inc
loope
mov
xlat
leave
pop
out
xor
ret
je
inc
jns
pusha
imul
mov
xchg
xor
adc
jg
sti
mov
jecxz
bound
add
mov
pusha
les
test
in
jno
inc
fidivl
daa
pop
push
push
mov
dec
jg
cmp
lret
mov
jmp
test
xchg
dec
push
dec
push
sub
xchg
js
cmpsl
push
mov
call
sbb
xor
fucomi
clc
xchg
cld
mov
xor
fisttpl
out
pop
bound
xor
lret
out
mov
js
insb
push
jg
mov
cmpsl
inc
cmc
pop
mov
sbb
jb
cmp
adc
notb
hlt
test
push
popf
fcomps
xchg
aam
inc
xchg
xchg
cltd
incl
out
popa
dec
dec
stos
jbe
ret
dec
shll
sbb
bound
add
inc
stc
lods
in
les
int3
cli
pmulhw
sahf
mov
popa
mov
pop
or
jge
fnstenv
mov
cli
cltd
jg
jae
mov
lds
inc
xchg
mov
movsb
roll
out
test
fdivs
xchg
inc
pop
adc
xor
mov
clc
imul
loope
mov
cmp
mov
push
mov
mov
xchg
xor
lods
mov
inc
jae
mov
xchg
jmp
adc
push
inc
adc
cmp
imul
mov
stos
cmpsb
insl
sub
xor
mov
mov
sbb
out
popf
std
adc
stos
rcrl
sub
or
loopne
cmp
aam
out
jo
clc
out
arpl
test
fnstsw
imul
and
cli
test
push
jge
call
daa
sbb
xchg
imul
jle
adc
test
push
jle
or
adc
jb
lahf
shrb
jle
pop
xchg
mov
out
push
cmc
loope
sbb
xlat
mov
jmp
fdivr
jmp
call
jo
xchg
adc
data16
insb
js
filds
in
cmpsl
cmpsl
jns
out
dec
and
pushf
cmp
enter
imul
ja
xchg
add
add
or
in
ret
jmp
or
scas
rcll
fucomi
xchg
es
jmp
sarb
jge
notb
mov
sti
cmc
jbe
frstor
in
sub
mov
cld
stos
mov
cmp
decl
sub
ds
xchg
xor
add
dec
dec
or
int
stc
adc
sub
lods
xchg
dec
popa
and
jbe
fcmovnb
mov
push
fs
dec
das
adc
mov
xor
fiadds
loope
jae
jbe
out
adc
add
mov
outsb
jb
mov
push
dec
jbe
mov
pusha
xchg
addl
fsts
mull
push
fidivl
and
sub
sub
sbb
push
daa
fsts
mov
inc
cli
and
les
subb
cld
fs
pop
cmpsb
inc
lods
test
dec
scas
mov
call
enter
inc
adc
mov
lea
lahf
mov
or
sub
push
fs
ja
mov
mov
mov
dec
daa
mov
scas
in
addr16
lods
inc
cld
outsl
lock
adc
cmp
insb
jo
jns
subl
mov
and
pop
add
xor
adc
clc
in
dec
mov
rcl
and
out
cmp
dec
add
ja
pop
jno
inc
testl
fsubrl
mov
adc
out
mov
adc
cli
sbb
jne
js
jns
cs
lret
pop
cli
sub
dec
push
out
jb
insb
mov
push
push
mov
cmp
aas
shl
repnz
dec
mov
adc
xor
repz
test
icebp
push
jns
nop
clc
call
and
js
test
push
mov
add
sbbb
push
cltd
call
mov
push
xchg
call
test
imull
xor
cmpsb
or
imul
mov
leave
mov
push
jl
out
pop
xchg
and
int
jno
ret
cs
pop
stos
lock
loope
sbb
das
adc
sub
xor
jo
lret
sub
mov
push
in
mov
xchg
inc
push
rorb
push
adc
push
xchg
cwtl
add
test
mov
or
outsl
jbe
cwtl
jecxz
jg
test
xor
sub
imul
pop
int
jmp
callw
add
pop
push
sti
rorl
mul
add
mov
rcl
mov
addb
fcmove
arpl
shlb
adc
lods
imul
mov
cmp
dec
cmpsl
int
mov
rclb
cwtl
ret
rolb
sbb
call
shl
popa
xchg
rsm
sub
jecxz
mov
mov
push
lock
adc
inc
pusha
sbb
nop
mov
rcr
push
popf
jl
push
xchg
clc
adc
jg
in
test
inc
jbe
or
jle
std
xor
jo
sbb
sti
jle
ret
fnstenv
inc
fstps
mov
and
xorb
push
adc
neg
push
and
jmp
push
mov
xchg
popa
adc
sub
mov
aas
mov
lea
test
int3
mov
cwtl
mov
in
mov
mov
aam
jnp
mov
cs
sub
sub
repnz
jge
fnstsw
adc
xchg
popf
lcall
mov
xchg
lea
xor
lret
divl
mov
fisttps
inc
adc
cltd
out
cs
pop
pop
adc
popa
jo
adc
xchg
icebp
mov
sub
mov
leave
jge
mov
ljmp
ljmp
push
out
inc
xor
mov
pop
insb
pop
pushf
pusha
mov
xchg
cmc
pop
mov
inc
sub
mov
jb
imul
lahf
pop
cs
enter
xchg
pop
xchg
xor
mov
and
insl
les
xchg
pop
popf
push
push
pop
xor
in
leave
stc
leave
xor
and
cwtl
hlt
pop
movsb
loope
xchg
and
jo
mov
popl
mov
pop
dec
mov
cmp
and
cli
bound
mov
xor
sbb
outsl
jge
cmp
test
loope
mov
fadds
mov
sbb
daa
push
sbb
rclb
jp
cmp
jb,pn
pop
push
push
lock
stc
mov
andb
ljmp
lret
pop
dec
xor
lds
fnstsw
inc
andb
inc
ss
sub
jp
les
stos
dec
sets
cmc
cmc
jb
jl
addr16
int
bound
ljmp
sbb
jl
pop
lods
adc
add
cli
xchg
or
add
insl
data16
imul
sbb
jecxz
jmp
mov
imul
inc
or
insb
cmp
and
filds
lret
stc
inc
cmp
or
cmp
xchg
inc
bnd
dec
inc
pop
inc
push
leave
mov
pushf
in
dec
xor
pop
mov
ja
jg
push
xchg
jnp
mov
or
insb
lcall
in
and
shrl
iret
adc
movsb
mov
mov
jae
add
mov
cmp
aam
int
sub
xchg
mov
sahf
leave
movsl
cmpsl
jo
push
clc
es
sbb
push
shrl
stos
in
aam
jg
int
cmp
pop
frstor
sbb
test
adc
xor
adc
jne
rclb
fsubl
psubsb
mov
rcr
in
mov
or
mov
fwait
push
in
lcall
nop
mov
xorl
mov
adcl
mov
xchg
sub
cltd
mov
daa
mov
es
pushf
add
stos
mov
xchg
jb
mov
popa
lcall
outsb
jno
aas
shll
inc
mov
call
popf
push
inc
daa
shl
xlat
outsb
and
xlat
add
mov
cmpsl
roll
rcrb
scas
mov
andl
cmpsl
xor
loopne
pop
add
test
dec
mov
jmp
in
lret
cmpsb
jg
xchg
pop
stos
xor
xchg
add
gs
sti
xchg
addr16
in
jns
insb
cli
fists
and
lcall
cs
jne
adc
push
and
mov
xchg
fisubrs
push
lcall
mov
insl
gs
cmp
push
pop
mov
and
mov
test
cmpsb
shl
sub
repnz
cli
adc
fs
fldl
pop
cmp
mov
mov
adc
mov
xrelease
push
jo
and
cmpb
sbb
jns
push
outsl
and
lock
mov
fucomp
cmpsb
sub
mov
ja
xchg
jecxz
mov
or
cmp
int
test
cli
pushf
mov
fidivl
orb
cmc
or
dec
jb
cmp
fcoml
xor
sbb
pop
push
push
popa
mov
sarb
test
insb
add
rclb
xchg
in
cmp
ss
or
and
mov
sub
xlat
je
ds
lahf
stos
aaa
xor
xor
std
test
lock
mov
mov
xchg
xlat
leave
fcompl
jmp
std
call
scas
sub
jno
cmpsb
xchg
je
pop
cwtl
scas
mov
sub
cmp
out
jnp
iret
xchg
cld
fldenv
xor
or
ja
pop
rol
pop
pop
scas
icebp
xchg
pushf
pop
dec
push
pop
add
orl
outsb
xchg
sbb
int
mov
in
test
addr16
popa
sbb
sub
and
mov
imul
mov
jl
mov
mov
mov
ret
call
sbb
and
es
dec
imul
rcrb
data16
and
or
mov
and
pusha
lds
jns
sbb
inc
pop
add
sbb
mov
inc
jo
jae
mov
cwtl
pop
iret
push
fistpll
xor
sbb
sbb
jns
cmp
jmp
das
popa
cltd
cli
in
adc
aas
psubusb
ret
mov
xlat
js
sub
sbb
pop
or
repnz
xorb
adc
inc
inc
sbb
sub
out
jl
and
mov
sbb
sti
fnsave
or
mov
mov
mov
or
add
or
fcompl
jns
push
mov
iret
mov
cltd
out
cwtl
aaa
dec
xchg
test
je
jle
sub
add
mov
inc
test
dec
mov
in
sub
add
movsb
add
insb
ret
xchg
sbb
xchg
stos
mov
cltd
cmp
add
mov
xor
sbb
lods
adc
pop
or
sub
add
dec
xchg
sub
aad
es
je
lock
out
ds
sarl
xchg
aam
cmpsl
add
push
movsl
jle
sub
fsubrl
adc
fstps
clc
mov
pushl
in
pop
flds
add
add
fcoml
lcall
mov
push
bound
mov
jg
ja
out
sbbb
xchg
pop
icebp
push
pop
adc
xor
mov
cmpsl
pop
les
sbb
ja
ret
scas
das
fsubrs
ss
lock
lcall
jp
adc
mov
sahf
ds
loop
xor
into
or
pop
rorl
xor
push
insl
mov
xor
cmc
test
and
cld
outsb
mov
repz
daa
orb
enter
insb
mov
inc
or
xchg
jg
lods
mov
sbb
xchg
sahf
mov
cmp
lcall
and
mov
ja
inc
out
dec
adc
adcb
mov
add
xlat
stc
into
leave
fmul
int3
or
jle
dec
sub
mov
js
xor
shlb
stos
sub
adc
pop
cmp
push
pop
out
jl
daa
xchg
cmp
pop
adc
lret
xchg
xor
mov
dec
mov
dec
xor
and
arpl
int3
mov
xlat
lods
cmp
xor
pop
dec
call
lret
loopne
push
inc
stos
das
in
mov
mov
rcll
push
pop
lcall
xor
ret
jno
sub
cmpsb
cltd
and
cs
shr
int3
mov
int
pusha
lds
mov
push
call
sarb
leave
cld
add
jp
jle
test
or
jp
loop
jbe
aaa
xor
shll
pop
push
jl
mov
and
sti
jo
add
stos
pop
pop
mov
jecxz
push
jns
push
fisubrl
fnsave
pop
inc
imul
add
shrl
test
mov
adc
xchg
cmp
and
xchg
ficoms
and
je
ljmp
cmpsb
test
adc
cmp
jecxz
mov
mov
mov
xor
and
add
enter
or
es
xor
push
pop
lods
jl
jo
arpl
xchg
dec
sub
adc
aad
popa
lock
dec
or
adcb
jno
negb
pushf
push
pop
loopne
inc
incb
int
stc
xchg
mov
mov
cmp
jecxz
sbb
sbb
lahf
xor
jmp
pop
loop
ficoml
mov
aaa
mov
test
mov
dec
clc
out
cmp
out
jno
pop
daa
jecxz
adc
scas
dec
mov
or
mov
jl
sub
into
scas
scas
xlat
lahf
push
out
fcomp
repnz
and
push
push
adcl
push
cs
mov
sub
mov
es
jae
js
stc
loope
fwait
es
out
test
mov
sub
pop
jns
add
inc
js
jne
inc
adc
mov
shld
pop
mov
jle
out
ds
inc
sbb
in
mov
repnz
and
and
out
je
dec
test
pop
rcr
repnz
add
push
mov
inc
xorl
inc
push
xor
jle
loopne
xchg
in
push
lahf
dec
inc
hlt
in
jle
mov
push
and
mov
jnp
mov
orb
inc
into
test
sub
and
xlat
imulb
or
or
jbe
ss
mov
adc
movsl
sahf
jle
nop
dec
test
sbb
cmp
leave
int
hlt
shrb
cmp
push
mov
xchg
mov
test
mov
cwtl
flds
out
shlb
in
pop
xor
add
mov
pop
mov
jecxz
jno
cli
sahf
in
sahf
adc
insb
sbb
mov
and
ds
jle
add
arpl
and
mov
sbb
fiadds
movsb
mov
fnstsw
dec
xor
add
mov
test
scas
inc
test
lods
insl
fs
mov
add
pop
or
int
or
jmp
xchg
in
in
push
cmp
pop
sub
pop
cs
add
pushf
mov
mov
jae
adc
push
jg
mov
or
jp
addr16
test
dec
fwait
pop
mov
dec
js
sub
fstps
push
mov
imul
sub
mov
xchg
jge
andb
lahf
sahf
pop
into
dec
inc
hlt
cmp
inc
popl
je
jle
test
inc
jno
paddd
jb,pt
pusha
idiv
test
mov
aam
pop
ficoms
sbb
sti
mov
sub
lock
push
xor
aas
or
jmp
add
cmp
push
adc
test
fimuls
or
inc
lahf
clc
cmpsb
cli
xchg
imul
sub
adc
stos
sub
loope
movsb
or
mov
bound
into
aas
sbb
out
lret
cli
mov
inc
lock
aad
cmpsb
clc
add
xchg
out
mov
loop
test
loopne
leave
stos
cmp
push
dec
jae
mov
lea
shlb
outsb
jmp
sub
loop
mov
mov
inc
in
xlat
pusha
pop
mov
and
mov
xor
js
push
cwtl
or
daa
dec
mov
gs
in
lods
jb
pop
gs
push
dec
mov
push
sbb
mov
jbe
fst
repnz
dec
and
lods
push
cld
or
sbb
adc
mov
xorb
or
dec
cmpsb
xor
icebp
pop
or
hlt
addr16
shrl
ljmp
inc
movsb
rcl
pop
es
xor
nop
cmpsl
mov
lcall
add
es
movsl
cmp
lret
addr16
jmp
fsubs
dec
outsb
jl
in
dec
mov
xchg
jmp
mov
push
push
xchg
lods
add
mov
mov
out
jnp
pop
jge
or
sbbl
jge
sbb
adc
out
cmpsl
loopne
push
inc
adc
pop
inc
mov
xchg
mov
repnz
xchg
jmp
cmp
lcall
ja
scas
dec
cmp
or
xlat
xor
fidivs
fucomip
imul
adc
push
jle
sub
loop
sbb
xor
arpl
sub
sub
jnp
push
repz
pop
sub
jl
dec
cmpsb
sub
ss
lcall
cld
popa
jb
out
mov
fmuls
cmp
testl
pop
add
aaa
outsl
mov
insb
lcall
bound
dec
adc
aaa
jnp
and
sti
dec
push
mov
cli
cltd
sbb
sti
mov
insl
enter
jb
push
adc
add
jne
mov
std
stos
mov
mov
jnp
enter
cmp
inc
aas
jle
stos
jnp
cmp
mov
lock
push
add
stos
stc
rcrl
jnp
repz
insb
pop
xchg
sbb
lock
cli
jmp
or
int3
or
cmp
cmp
jmp
mov
add
mov
mov
pop
push
sahf
mov
push
push
adc
mov
sbb
cmp
push
ss
jmp
lahf
mov
mov
shll
aad
push
jb
mov
lret
fildl
fsts
pop
or
or
cmp
je
nop
mov
cmp
imul
sub
mul
stos
jle
test
mov
orl
lds
pushf
dec
repz
jmp
sarl
es
shr
jne
imul
cwtl
adc
int
out
cltd
mov
or
in
add
mov
mov
shrl
cwtl
mov
push
fwait
mov
inc
jge
rol
add
movsb
iret
leave
push
mov
ss
mov
.byte
.byte
push
add
add
mov
pop
aaa
add
add
add
add
add
add
xor
add
js
add
lock
orb
add
add
addb
add
mov
pop
aaa
add
add
add
pop
add
add
add
add
jo
add
mov
add
mov
add
add
add
add
add
addb
add
call
add
add
add
add
add
add
add
xor
add
sbb
add
xor
add
dec
add
cmp
add
pusha
add
cmp
add
js
add
nop
add
cmp
add
test
add
rolb
cmp
add
fadds
add
lock
cmp
add
or
add
and
add
mov
pop
aaa
add
add
add
add
loopne
add
out
add
add
mov
pop
aaa
add
add
add
pop
add
jg
add
add
addb
cmp
add
cwtl
add
cmp
add
mov
add
enter
jg
add
add
cmp
add
clc
add
addb
add
mov
pop
aaa
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
pop
aaa
add
add
add
add
or
add
add
add
add
mov
pop
aaa
add
add
add
add
or
add
add
add
add
mov
pop
aaa
add
add
add
add
or
add
add
add
add
mov
pop
aaa
add
add
add
add
add
add
addb
add
add
mov
pop
aaa
add
add
add
add
add
add
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
pop
aaa
add
add
add
add
add
add
adc
add
mov
pop
aaa
add
add
add
add
add
add
and
add
mov
pop
aaa
add
add
add
add
add
add
xor
add
mov
pop
aaa
add
add
add
add
add
add
inc
add
add
mov
pop
aaa
add
add
add
add
add
add
push
add
add
mov
pop
aaa
add
add
add
add
add
add
pusha
add
add
mov
pop
aaa
add
add
add
add
or
add
add
add
add
mov
pop
aaa
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
pop
aaa
add
add
add
add
or
add
add
push
add
add
cmp
push
add
add
jo
push
add
add
movsb
imul
add
push
add
add
or
push
add
add
inc
insl
push
add
add
je
push
add
add
fsubrl
add
add
sub
push
add
add
add
add
add
jb
add
add
lock
add
add
add
js
add
add
jl
add
add
add
jg
add
add
clc
addl
add
addb
xchg
add
add
push
add
add
add
push
add
add
add
add
add
add
add
call
add
add
lea
add
add
or
push
add
add
and
add
xor
push
add
add
dec
nop
push
add
add
pop
nop
push
add
add
jo
push
add
add
test
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
sbb
mov
add
fldenv
ds
cs
mov
jmp
or
scas
and
nop
mov
out
fcompl
mov
leave
cld
and
loope
or
jnp
mov
popf
dec
out
pushf
cmp
ljmp
mov
popf
out
outsb
aam
cmp
adc
jmp
jp
inc
ljmp
jmp
mov
in
mov
sub
cmp
dec
mov
inc
jnp
popw
pop
in
xchg
jp
cld
lds
jecxz
push
xor
int3
out
push
or
jns
mov
mov
outsl
xor
mov
xchg
shll
testl
addl
sbb
das
push
inc
mov
in
hlt
add
repz
adc
cwtl
mov
sub
out
jp
mov
out
and
and
add
push
jne
adc
and
inc
mov
fwait
sub
sbb
and
add
fdivs
xchg
out
sub
ss
fcmovb
inc
ljmp
ljmp
add
dec
jl
fildl
xchg
inc
hlt
scas
in
es
inc
cmc
mov
mov
sub
out
jo
xchg
shl
pop
adc
and
cmpsb
mov
push
dec
pusha
and
mov
xor
mov
pusha
sbb
push
or
jne
add
pop
addr16
rcrb
cmp
repnz
and
mull
add
lock
mov
or
gs
pop
cmp
push
cmp
das
mov
repnz
mov
aas
scas
inc
mov
xchg
movsb
dec
pop
lahf
push
jge
add
gs
mov
mov
aas
jns
idiv
ss
cmp
pop
xchg
ror
mull
out
popa
xorl
dec
subl
push
outsb
rolb
pop
out
daa
mov
jnp
inc
mov
and
inc
mov
movsb
je
fiadds
sub
fcom
and
sub
daa
shlb
xchg
dec
sar
add
into
mov
pop
dec
jmp
or
ret
addr16
loopne
jae
frstor
sbb
test
pop
or
sbbl
ljmp
or
jnp
in
in
int3
leave
mov
cmp
jmp
lds
xor
push
add
stos
cmpl
sar
jne
dec
es
pop
int3
push
outsl
push
mov
xor
mov
and
xchg
call
out
cmpsb
int3
jmp
rcll
std
and
jecxz
sub
and
cmpsl
xchg
mov
cmp
popa
repz
or
aaa
pop
out
mov
mov
inc
push
int3
jl
sub
lock
insb
add
in
cmpsb
jbe
push
fs
cmpl
sahf
inc
push
lods
sbb
adc
shr
cld
notl
das
inc
and
push
outsl
mov
movsl
int3
xchg
andl
icebp
int
stos
leave
jno
popa
add
and
es
xor
aas
add
mov
add
aaa
js
jb
lret
push
sub
lea
dec
pop
idivb
dec
imul
push
std
fildll
outsb
fadds
mov
xchg
dec
jne
aaa
push
push
and
or
mov
mov
fdivrs
lret
sahf
adc
mov
in
adc
adc
jl
jne
and
js
sbb
or
test
leave
cmp
push
les
outsl
xor
pop
stos
mov
dec
pop
or
sti
cmp
subl
aam
jo
or
dec
test
xor
xor
mov
fdivr
sbb
xchg
hlt
jns
leave
push
ret
fsubs
out
dec
test
push
lahf
aaa
cmpsb
mov
pop
lcall
bound
add
pop
sar
xor
mov
add
push
push
xchg
mov
sub
sub
stc
fistpl
adc
fdivs
jae
or
sbb
adc
and
lods
orl
fisubs
mov
sub
mov
xor
push
inc
push
xchg
pop
jmp
dec
adc
mov
cmp
das
cmp
push
subb
movsb
insl
sbb
jo
sbb
daa
mov
xchg
lahf
scas
addr16
xchg
mov
or
shlb
dec
out
jl
test
in
repnz
cmc
add
pop
loopne
jo
es
shr
out
leave
pusha
fmull
dec
or
int
mov
jge
test
add
cltd
jmp
ficoms
cmp
test
mov
mov
out
add
push
enter
jmp
mov
hlt
je
scas
testb
mov
shl
jecxz
mov
cmpsl
mov
xor
and
les
cmc
sbb
dec
jl
fcmovnb
add
scas
enter
mov
sbb
daa
mov
bound
or
adc
out
leave
sahf
inc
lret
ret
dec
dec
mov
sbb
mov
adc
xor
das
dec
dec
mov
adcl
test
or
arpl
pop
ja
inc
test
fdiv
addr16
dec
out
add
sub
shrl
mov
imul
sbb
xor
mov
pushf
push
push
jno
rclb
mov
add
sub
push
and
or
sbb
stc
shlb
scas
bound
adc
in
xor
add
out
clc
iret
xor
xchg
shrl
lods
nop
xchg
mulb
and
push
xor
shrb
cmpsl
mov
mov
dec
mov
stc
or
movsl
stos
nopl
scas
mov
sub
sti
jle
or
iret
dec
mov
ret
cmp
ja
cmp
fsin
leave
and
sub
sbb
shrb
shrl
mov
das
out
xor
icebp
mov
pop
xor
push
and
mov
mov
inc
mov
jns
inc
sahf
push
cmpsl
sti
sarb
rolb
xor
and
lods
cmpsl
or
push
xor
mov
popf
rcrl
cld
mov
pop
jg
lods
sub
sub
add
push
mov
or
push
imul
mov
push
xchg
in
xor
xchg
std
ret
push
lahf
xor
ret
fnstenv
jecxz
pushl
fmull
repnz
adc
lock
pop
inc
inc
loopne
dec
mov
ret
in
pushf
fmull
ret
jns
cmp
pop
push
and
enter
mov
int
sub
pop
movsl
pop
psrld
enter
daa
and
or
jg
jne
pop
nop
cmc
aam
mov
stos
dec
aam
out
mov
mov
cwtl
iret
outsl
scas
push
lds
push
out
add
fidivl
pop
jl
sub
fnstenv
imul
jmp
mov
shr
mov
fcompp
sbb
xchg
ret
cltd
or
ljmp
test
mov
icebp
dec
push
jne
in
mov
jo
ljmp
dec
mov
or
mov
pushf
sahf
pop
xchg
ret
push
pop
and
lahf
pop
pusha
or
jge
pusha
jno
add
xor
leave
out
pushf
movsb
mov
cmc
push
mov
insb
adc
in
popa
gs
outsl
cmpsl
rorl
cmp
pop
loopne
gs
mov
xor
movsl
out
test
dec
cld
sbb
pop
mov
xchg
std
dec
push
es
inc
and
xlat
sbb
loope
inc
clc
mov
repnz
cs
fstpl
rorl
add
arpl
jnp
inc
jne
test
addb
popf
loopne
fisubrs
stos
ja
mov
popf
or
scas
adc
sahf
out
js
sub
adc
xchg
cltd
dec
sub
mov
add
nop
stos
fildll
mov
sub
mov
lret
push
scas
dec
jb
inc
jb
and
leave
mov
xor
daa
ficompl
sub
movsb
bound
xor
sub
repz
int
in
pop
add
mov
push
sahf
push
stos
sti
ljmp
dec
adc
repnz
jmp
dec
hlt
out
pop
dec
inc
inc
out
sub
sbb
xchg
rcrb
lods
out
into
jmp
cld
iret
pop
out
add
lret
sbb
fldt
out
xchg
mov
enter
cmpsb
jmp
push
mov
in
or
sbb
daa
mov
fdivrl
mov
lods
sub
sub
aaa
push
cmp
fldcw
pop
loope
jae
loopne
std
cmpsb
adc
test
adc
fwait
scas
fnstcw
fucomi
or
push
divb
imulb
xor
xchg
fdivl
in
hlt
inc
scas
cmp
and
hlt
mov
and
cmp
xchg
sbb
xchg
movsl
add
test
xor
or
pop
inc
test
call
adc
sbb
cmp
jp
add
pop
sahf
mov
sub
pusha
xchg
inc
dec
popf
nop
orb
leave
cld
data16
dec
sub
mov
jb
cmp
jb
mov
jno
inc
and
bound
fmull
or
jno
in
xchg
or
cltd
dec
xlat
and
mov
movsl
addr16
int3
add
mov
cwtl
out
pop
inc
lret
insl
fisttps
sbb
mov
mov
aaa
push
mov
adc
pusha
inc
daa
mov
jno
cld
xlat
xchg
fdiv
loope
iret
out
mov
mov
lret
mov
xlat
sbb
gs
push
sahf
mov
test
mov
ret
or
xchg
mov
xchg
add
aam
adc
dec
pop
mov
jmp
cld
add
dec
dec
jnp
fdivr
mov
stc
mov
shl
rcrb
add
pop
pop
js
sbb
and
jle
xor
xchg
popf
cmc
adc
jb
xchg
mov
cs
push
pop
push
xchg
push
icebp
lea
jbe
dec
lock
mov
les
into
sti
mov
hlt
out
es
mov
pop
cltd
scas
and
fnsave
jmp
xor
push
xor
loop
ds
cmc
bnd
ljmp
xchg
pusha
aaa
ficomps
add
cltd
scas
movsl
subb
pop
push
test
ss
test
ja
push
lds
addr16
mov
pop
push
sub
pop
cmp
jne
xchg
dec
jnp
ljmp
fidivrl
shrl
add
popf
scas
and
stos
jge
adcb
enter
mov
xchg
sti
cmp
mov
and
repnz
xchg
call
loopne
rclb
int3
mov
fidivrl
xchg
mov
repz
lock
jmp
push
fwait
dec
xchg
test
movsl
scas
add
and
mov
add
mov
jmp
inc
jle
dec
jg
mov
in
je
push
test
movsl
lret
xchg
shll
icebp
sti
shrl
push
imul
inc
pop
test
xchg
adc
jp
aam
pop
ret
push
clc
adcl
loopne
pop
cld
mov
pop
iret
jnp
loop
adc
sbb
mov
xor
xor
and
dec
sbb
aas
rcrb
or
ja
cmpsl
in
push
jl
or
leave
inc
jecxz
jnp
or
mov
xchg
cmpsl
repnz
dec
orl
xchg
pop
jl
adc
stc
xor
inc
call
jmp
and
cmp
cmp
jge
es
xor
popf
shlb
loopne
dec
dec
insb
xor
pushf
adc
or
fidivrs
dec
and
mov
les
lock
and
inc
xchg
movsl
movsb
scas
push
int
call
xchg
push
lods
jmp
stos
lea
dec
jnp
jo
dec
in
int
pop
into
outsl
std
mov
pop
adc
lods
xchg
ja
xor
dec
shll
and
xor
in
mov
or
dec
sub
je
js
stc
test
in
jp
outsl
jo
ljmp
cmp
fsubr
dec
mov
xor
xchg
pop
loop
add
cmc
test
rol
in
sub
xchg
test
clc
dec
out
pop
push
push
fstps
mov
and
scas
lret
add
packuswb
cmpl
aaa
mov
shlb
jg
xor
push
insb
inc
aam
pop
lea
.byte
pop
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
rcrb
add
add
mov
push
push
push
mov
pop
pop
pop
mov
pushl
movzwl
pop
call
out
cmp
jle
sub
jmp
jno
xlat
les
cs
pop
gs
xor
call
push
hlt
sbb
add
add
js
mov
and
inc
push
nop
mov
push
loope
sbb
add
sub
mov
mov
sbb
sub
add
mov
cmp
jne
mov
jmp
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
addr16
push
mov
pop
lods
jne
mov
mov
xlat
flds
xor
popf
adc
mov
es
mov
ret
mov
sbb
and
pop
pop
or
aas
cld
dec
push
rcrb
xor
mov
mov
and
pop
xchg
mov
arpl
mov
imulb
rol
scas
dec
jge
int3
cli
jge
insb
incb
out
loop
mov
lods
test
xor
fwait
sbb
lock
and
shll
pop
jge
loope
loope
cmp
dec
pop
dec
rcrl
lcall
mov
mov
test
fstpt
lret
jno
cmpsl
add
xor
in
call
sub
inc
ret
adc
divl
in
mov
adc
mov
aam
push
add
data16
sub
xchg
pop
test
lods
inc
test
je
jne
push
into
cmc
inc
adc
inc
pushf
hlt
mov
pushf
cmp
daa
loope
outsb
xor
push
lahf
pop
test
mov
jle,pt
aas
lret
jae
fnstsw
adc
ja
xchg
js
adc
cmp
dec
imul
inc
xchg
fdivr
cmp
cwtl
lret
jge
std
sub
jbe
gs
xchg
test
fsubp
dec
push
push
repnz
push
lods
ret
mov
xchg
out
mov
pushf
pop
push
call
mov
addr16
loop
xor
lods
cwtl
fcoms
loope
lods
push
adc
xchg
enter
outsl
add
hlt
cmp
hlt
jae
movsl
repz
or
pusha
mov
std
xor
mov
cli
out
cli
cmpsl
mov
dec
lea
jbe
jmp
push
out
cli
adc
mov
je
dec
mov
and
jne
fldl
insl
idivb
fnstcw
mov
enter
les
popa
cmp
into
inc
movsl
xor
mov
sarl
sub
outsb
rorb
test
out
xchg
hlt
xchg
cs
stos
pushl
push
pushl
cmc
jns
fmull
inc
pop
xor
sbb
enter
outsb
push
inc
ja,pt
push
scas
add
insl
mov
mov
push
mov
sbb
subb
mov
dec
jne
movsb
in
ret
leave
jp
xor
sub
add
mov
mov
call
cmp
rol
scas
lock
mov
or
mov
or
scas
or
in
rcr
mov
mov
cmp
xor
mov
jg
fdivrl
mov
xor
xchg
push
aam
hlt
inc
pop
xor
shrb
mov
jg
xor
xchg
push
aam
mov
rol
scas
xchg
rol
cmp
and
test
xchg
insb
xchg
retw
scas
loopne
test
inc
rol
scas
mov
rol
xor
leave
addr16
fdivrl
aas
push
xchg
sarb
cmp
rorl
xor
rol
rcr
popf
scas
xchg
pop
arpl
mov
sbb
pop
rol
scas
cmp
jge
inc
rol
test
xchg
inc
test
xchg
pop
fwait
cli
pop
rol
rcr
add
lret
cwtl
pusha
aam
scas
fimull
and
fadds
sbb
fcomp
sbb
rcrb
xchg
rclb
push
ficompl
push
xchg
rcrb
mov
rol
rcll
xchg
movb
scas
xchg
pop
jl
inc
ffreep
sub
pop
dec
inc
inc
and
xchg
rol
iret
jmp
stos
mov
jg
popf
scas
xchg
add
scas
add
mov
pop
rol
rcll
rol
rcll
xchg
mov
adc
mov
pop
pop
push
xchg
fwait
sahf
xchg
lds
fcomps
pop
pop
shlb
push
xchg
shrb
xor
or
test
inc
test
sarb
xchg
rol
adc
xchg
rol
scas
or
or
ficoml
lods
loop
xchg
push
pop
pop
sbb
push
fcmovne
pop
pop
and
test
ljmp
and
or
xchg
fcmovne
pop
pop
add
pop
xchg
rol
test
ljmp
inc
nop
sbb
sub
lahf
inc
pop
xlat
inc
aad
xlat
es
pop
out
xchg
inc
xchg
outsb
xchg
xchg
fcmovne
pop
pop
add
and
fcmovu
roll
repnz
in
lds
pop
pop
out
xchg
inc
xchg
outsb
xchg
xchg
fcmovne
pop
pop
and
aad
xlat
inc
icebp
in
lds
pop
pop
out
xchg
inc
xchg
adc
pop
pop
and
test
push
es
rol
test
fcmovnu
pop
fdivrl
rol
sbb
ficompl
inc
pushf
xlat
xlat
es
pop
out
xchg
inc
xchg
pop
sarb
out
out
xchg
aad
scas
and
add
test
rol
test
xchg
push
xchg
cmpsb
fs
mov
pop
push
xchg
bound
pop
aam
xlat
xchg
mov
pop
int
cmpsb
fs
mov
repnz
inc
pop
inc
lods
xrelease
rol
scas
xchg
pop
push
cmc
jp
lds
xchg
rol
call
push
or
fcompl
push
xchg
rclb
jmp
fnsave
adc
mov
adc
sti
push
xchg
rclb
push
xchg
sar
pop
xchg
rol
jge
xchg
sbb
push
inc
mov
xchg
daa
fdivl
pop
push
dec
xchg
sahf
nop
cli
xchg
data16
stc
xchg
rol
imul
fwait
dec
push
adc
push
dec
jp
mov
pop
cmp
mov
jbe
push
sbb
sbb
fcmovnu
sbb
fstpl
sub
mov
int
filds
jns
xor
ret
mov
ljmp
out
xor
cmpsb
lods
pop
jo
xlat
call
sub
rol
scas
xchg
rol
scas
xchg
rol
scas
xchg
rol
scas
xchg
rol
scas
xchg
rol
scas
xchg
rol
scas
xchg
sahf
sbb
jp
scas
xchg
adc
xchg
rol
scas
xchg
rol
scas
inc
and
sbb
shlb
scas
xchg
rol
scas
xchg
rol
scas
xchg
rol
scas
xchg
add
xlat
sbb
xor
dec
xchg
movsl
test
jo
inc
push
push
add
cmpsb
outsl
js
adc
out
sbb
push
popl
mov
hlt
test
bound
dec
cmp
push
mov
sub
jo
roll
aaa
or
cmp
pushf
test
repz
adc
push
inc
xchg
clc
or
ret
fldcw
mov
or
or
iret
lods
aaa
adc
mov
movsb
mov
int
repnz
mov
test
rep
das
popf
lret
mov
or
jbe
cmp
xchg
inc
jb
dec
aaa
push
and
cmpsl
sbb
push
pop
cmp
cmp
das
mov
mov
in
push
test
ja
test
xlat
and
pop
mov
scas
sub
mov
pusha
push
outsb
cmp
pop
std
movsb
push
xchg
cmp
ds
dec
in
jb
dec
mov
idiv
addl
jmp
vpslld
out
mov
fisubrl
call
jno
popf
les
sbb
xlat
ror
mov
and
fstpt
dec
sub
arpl
jnp
inc
inc
mov
cmp
clc
fstl
mov
outsb
mov
cwtl
inc
loope
or
fdivs
jo
outsb
xchg
jb
popf
hlt
dec
xlat
jne
inc
inc
sub
gs
ljmp
lods
or
in
sub
cwtl
imul
sbb
insb
movsb
ja
inc
lahf
jo
sbb
xor
clc
jp
xor
ljmp
addb
dec
sub
dec
inc
jne
lcall
pushf
test
fs
mov
scas
add
rcll
push
xchg
fcmovnbe
cwtl
ret
mov
std
xor
push
mov
mov
or
add
adc
cmp
je
mov
cwtl
inc
add
xchg
inc
mov
adc
cmp
mov
pop
push
lcall
lahf
and
popa
rcrl
push
jno
mov
into
jl
and
or
mov
jno
pop
pop
sbb
pop
sbb
mov
shl
lret
loopne
push
xchg
adc
push
push
adc
push
mov
shrl
xor
shlb
cmp
pop
cmp
push
xor
dec
aaa
cwtl
cmpsb
jns
adc
sbb
add
jo
or
push
push
repz
and
cli
dec
repz
sub
and
add
add
add
loopne
adc
add
adc
lock
add
add
add
lods
push
add
lods
push
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
lods
push
add
stos
push
add
push
add
lods
push
add
push
add
lods
push
add
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
lods
push
add
scas
push
add
lods
push
add
scas
push
add
lods
push
add
push
add
lods
push
add
push
add
gs
jne
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
gs
xor
fs
insb
add
gs
xor
fs
insb
add
imul
insb
add
jb
imul
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
gs
insb
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
push
add
add
add
push
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
add
scas
push
add
add
add
scas
push
add
add
add
scas
push
add
add
add
scas
push
add
add
add
scas
push
add
add
add
add
jae
jb
gs
je
imul
gs
jne
jb
push
popa
insb
jne
inc
js
add
add
je
gs
outsl
popa
jb
push
jns
add
add
gs
je
push
imul
inc
add
add
jb
popa
insb
imul
arpl
add
jb
jne
jb
push
popa
insb
jne
inc
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
pop
push
jb
arpl
outsl
jne
gs
jbe
outsb
je
add
push
push
js
arpl
gs
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
mov
sbb
add
add
inc
repnz
adc
mov
sbb
cmp
fs
stos
jno
or
out
add
data16
mov
jne
iret
notl
push
pop
ds
popf
xor
call
test
in
sbb
jnp
fldcw
push
jp
ljmp
in
dec
sub
mov
jp
aas
fsubr
inc
mov
fnclex
cmpl
pushf
xlat
std
push
fsubrl
cld
dec
lods
mov
mov
mov
mov
xlat
pop
loopne
mov
dec
dec
lret
les
mov
in
out
arpl
mov
pop
lods
push
test
shl
sbbb
xchg
mov
pop
xor
out
inc
mov
push
and
nop
dec
mov
sub
outsb
jle
mov
sbb
je
cmp
clc
shrb
rcll
or
add
test
pop
adc
movsl
icebp
sbb
jne
repz
test
ss
lods
inc
lahf
lea
pop
fidivl
or
xor
out
filds
mov
mov
and
repnz
mov
insb
fiaddl
enter
int
cmp
js
cld
lret
aaa
pop
jo
adc
and
add
lcall
icebp
arpl
pop
xor
into
lds
movsb
and
test
fnstenv
jns
dec
fildl
cmpsl
cmp
cwtl
jb
pop
jb
out
ret
xchg
cmc
inc
xchg
orb
inc
jmp
cld
inc
jb
xchg
add
cmp
jge
aaa
in
jecxz
pop
jle
std
pop
in
das
adc
addr16
data16
jae
movsl
rcr
sub
xor
mov
std
add
inc
push
push
jmp
call
adc
add
pop
push
enter
mov
push
ja
pop
jbe
xchg
adc
jge
sbb
xchg
in
push
xchg
dec
pop
shll
iret
push
or
mov
insb
int3
cwtl
aam
imul
mov
or
rcrb
cmp
das
xchg
ja
mov
push
xchg
scas
pop
dec
ss
aas
imul
jg
mov
fildll
aas
or
dec
or
inc
push
jecxz
ret
outsb
sbb
icebp
mov
pop
mov
das
cmpsl
sarb
sahf
fildll
je
fcoms
mov
shrl
xorb
lret
mov
jo
loopne
flds
outsb
cltd
out
std
mov
out
mov
mov
sbb
les
call
jg
xor
adc
mov
scas
out
dec
jbe
push
cmpsl
push
or
mov
enter
push
mov
jmp
cld
push
push
push
inc
mov
sbb
push
shrl
sub
out
ss
xor
loopne
mov
pop
jnp
jle
cmp
jmp
loope
add
jne
sti
cmpsl
mov
aam
and
sbb
pop
je
sub
dec
cmp
push
xchg
fcoms
call
cmpsb
scas
ss
and
push
add
and
cmpsl
pop
dec
inc
xchg
mov
dec
mov
jmp
dec
cwtl
xor
mov
test
jg
push
xor
mov
cmp
jb
adc
test
out
les
ss
std
fwait
imul
xchg
int3
mov
mov
jb
push
mov
push
adc
inc
inc
clc
push
mov
cmp
xchg
mov
inc
out
mov
insb
mov
dec
addr16
aam
xchg
sub
sbb
adc
fsubs
xor
pop
add
mov
frstor
imul
and
je
add
pop
mov
lods
fiadds
lcall
fmuls
inc
lock
pop
std
push
pop
cmp
inc
mov
inc
jle
imul
jno
adc
sbb
lea
lds
adc
or
add
xchg
and
xlat
pop
sbb
jnp
xor
out
lahf
jno
add
psubusw
in
lret
xchg
xor
jle
or
aas
and
pop
mov
ljmp
loope
ds
out
pop
mov
out
sti
jmp
mulb
mov
sub
xchg
ret
gs
xor
mov
xor
sub
mov
mov
xchg
pop
and
mov
data16
stos
mov
test
insb
stos
sub
mov
roll
pop
sbb
pop
lods
push
mov
cmpsl
add
movsl
sub
lods
mov
xchg
std
dec
out
inc
in
sub
jbe
loop
and
jge
add
adc
cli
push
xchg
pop
pop
aad
out
dec
pmullw
dec
fistl
inc
shlb
sub
addr16
out
ficomps
xor
push
int3
stos
ja
btr
lods
arpl
inc
dec
fcoms
jno
fucomi
cmp
xor
add
mov
push
bound
sti
pop
out
pop
test
fs
add
fsubrs
jge
jns
fcompl
ja
cmp
sbb
cmp
test
sub
and
bound
nop
jno
pop
movsl
lods
seta
imul
jecxz
hlt
and
into
popw
shrl
jno
xor
cmp
hlt
flds
in
frstor
or
xchg
jl
lods
jl
sub
xchg
call
aaa
aad
stos
inc
mov
test
pop
push
test
test
movsl
mov
jmp
mov
jg
push
int3
cs
fisttpl
mov
adc
enter
mov
adc
and
push
int
leave
jo
fdivr
mov
adc
add
xchg
xchg
fcompl
jle
push
add
xor
int3
dec
into
clc
jg
dec
sbb
aas
jg
enter
dec
shrl
add
cmpsl
push
xlat
je
push
imul
xor
outsl
and
push
xchg
incl
push
ror
aaa
push
addr16
iret
les
test
push
xchg
mov
mov
lods
outsl
lret
fistpll
in
rorl
aas
dec
push
mov
cwtl
int
xor
test
xor
mov
xorl
adc
lods
in
scas
icebp
dec
sarl
xchg
sub
and
in
sar
cmp
lods
out
inc
mov
call
mov
lock
iret
pop
stos
and
cmp
xor
or
xor
dec
xchg
dec
mov
cwtl
sub
outsb
and
out
lret
jle
mov
adc
sahf
fisttps
mov
mov
push
and
orb
pushf
in
fmull
lods
inc
dec
xor
into
xchg
aaa
xchg
ret
ss
hlt
pop
jle
pop
aam
popf
and
add
push
mov
ss
add
inc
cltd
cmp
inc
or
imul
dec
sub
into
out
cmp
adc
lds
xor
aam
addr16
xor
fadds
pushf
jnp
push
jbe
rolb
out
fnstcw
scas
add
jns
cld
dec
bound
pop
xor
stc
cltd
push
shl
xchg
inc
dec
and
js
pop
es
and
mov
cmp
adcb
jb
repz
mov
in
fcompl
test
out
pusha
jno
xor
mov
cmpsb
jle
add
jg
push
fstpl
out
stc
pusha
or
push
clc
push
mov
outsb
dec
lock
inc
pop
inc
mov
xorb
pusha
lock
dec
rorl
insl
out
xlat
sarb
jne
insb
insl
mov
mov
adc
dec
stos
jae
minps
sbb
adc
or
pop
xor
push
jecxz
jp
cmpsb
and
sbb
dec
cld
or
sbb
maxps
fisubl
pop
iret
and
and
jbe
sti
pop
xor
mov
sbb
and
fdivl
mov
sbb
dec
arpl
jo
mov
pop
cmp
call
push
mov
mov
les
das
lret
mov
sbb
jp
ja
fnstcw
xor
mov
ficoms
stos
out
jo
cmp
or
cmp
jne
pushf
nop
sub
repnz
cmp
sbb
mov
lock
aas
test
cmpb
dec
or
jge
adc
lea
push
jno
lcall
shr
pop
cli
sarl
push
push
pop
mov
lods
call
mov
jecxz
mov
sbb
inc
add
cmc
test
sahf
dec
lahf
repz
rorl
mov
int
cmc
lret
pop
cmp
sarl
xchg
and
inc
xchg
insl
cltd
test
dec
inc
fs
ret
lods
push
out
sbb
test
mov
inc
lock
in
sub
lahf
xchg
mov
inc
inc
mov
sbb
sub
cmp
es
adc
dec
rcr
les
out
test
jge
dec
movsb
or
xchg
cmp
sbb
fbstp
ret
std
push
insl
cmp
add
xchg
mov
sub
aaa
int3
loope
dec
shll
push
xor
mov
mov
xor
bound
cmp
jg
jns
mov
or
movsb
inc
jns
pop
sbb
xor
out
outsl
cld
lcall
enter
cmp
jp
pusha
xor
xchg
lcall
xchg
mov
xor
shll
fisttps
mov
mov
adc
das
mov
arpl
dec
pushf
cmp
dec
int3
loopne
or
cwtl
loop
jmp
sub
lea
mull
push
push
lcall
mov
lcall
test
aaa
sbb
inc
mov
push
dec
popa
inc
add
test
fnstsw
jl
xor
sub
and
fld
rcr
mov
stc
cli
jo
xlat
out
out
lods
xor
ret
sub
pop
mov
mov
cmp
mov
jl
push
ret
jge
nop
ret
or
cmp
cwtl
aaa
xchg
mov
mov
or
jae
push
jae
mov
adc
ret
loopne
inc
cmp
cmpsl
xor
mov
xor
gs
lret
mull
arpl
mov
adc
dec
popf
or
sub
cmpsb
test
or
mov
sahf
arpl
inc
pusha
fs
or
or
in
jo
subl
mov
xchg
cli
aas
adc
pop
sbbb
lock
and
xor
clc
aam
test
or
mov
jecxz
sti
adc
ds
scas
mov
xchg
sbb
mov
dec
scas
mov
nop
js
push
jle
cmpsl
xor
mov
dec
je
fistpll
iret
in
enter
cmpsb
lret
cli
in
outsl
push
mov
jge
adc
test
push
inc
fsts
test
adc
mov
dec
mov
dec
cwtl
mov
push
mov
int
pop
xor
cwtl
sub
js
cwtl
leave
ljmp
cltd
stc
dec
repnz
mov
adc
xchg
adc
insb
test
jmp
ret
cltd
and
inc
nop
pop
xchg
xchg
pop
jns
sub
pusha
adc
dec
sbb
outsl
popa
pop
ds
cmpsb
es
mov
cs
stc
add
push
cli
bts
mov
and
cmp
popf
fcomps
das
mov
sub
inc
shrl
sbb
leave
add
jmp
and
int3
pop
cld
call
cltd
pop
cmpsl
mov
mov
xchg
cmc
test
xchg
shrl
xor
insl
lods
mov
icebp
imul
sbb
jbe
adc
mov
sub
out
and
stc
popl
test
jno
loope
lahf
push
cltd
xchg
or
mov
daa
xchg
mov
cmpl
cmovl
pop
mov
sub
and
jae
cmc
inc
jno
js
or
lcall
sub
int3
or
rcrl
scas
or
adc
aad
pushf
mov
addr16
inc
or
lahf
dec
test
push
dec
inc
pop
pop
movb
pop
int3
ja
adcb
fistps
out
and
pop
stc
aad
xlat
xor
jmp
pop
iret
test
aam
data16
movsb
data16
aaa
ror
dec
pop
pop
push
aam
xchg
jb
jns
xor
rorb
les
inc
mov
inc
push
push
mov
sub
lds
cmpsb
push
minps
bound
and
sub
repz
mov
test
ret
bound
iret
jecxz
and
ja
push
sub
mov
jo
in
inc
scas
gs
bound
in
jmp
and
ficoms
add
imul
daa
fdivr
aad
out
mov
mov
jl
int3
xchg
and
adc
rcr
fdivrp
mov
test
adc
sbb
xlat
scas
mov
jmp
mov
fcmovnb
orl
ficomps
dec
fsubrs
inc
into
push
mov
mov
mov
pop
mov
push
xor
cmp
sub
cmc
lea
shll
fstpl
lcall
xchg
jne
dec
mov
jg
mov
test
stc
ret
fldt
js
cmp
ss
call
std
dec
mov
notl
in
testb
mov
inc
pop
and
push
orb
add
leave
xor
sub
addr16
and
aas
jo
pop
cmp
lods
xchg
xor
mov
sbb
or
jnp
pop
iret
push
jo
outsb
test
lock
adc
pushf
mov
pop
je
dec
mov
shl
push
dec
or
mov
aam
imul
fldt
lods
adc
leave
cmc
xor
push
aas
jae
sahf
lods
out
mov
daa
xchg
add
push
nop
push
cli
pop
lret
mov
pushf
cmp
int3
shll
push
mov
cmc
lods
pop
xchg
sarl
push
ds
cltd
add
out
orb
mov
push
loope
cli
sub
ret
mov
popl
xor
push
inc
adcb
sub
cltd
mov
lock
cmp
xorl
mov
outsl
das
adc
mov
les
push
addr16
jmp
fs
test
cld
cmp
idivl
imul
lock
pop
fmull
cmc
cmc
dec
fldt
xchg
scas
mov
or
cwtl
push
fisubl
inc
fsubp
pop
outsl
test
pop
dec
and
cmpb
popa
mov
addl
pop
sub
andb
je
test
pop
sbb
cmp
es
cmp
enter
cmp
fidivrl
enter
out
and
loopne
negl
hlt
call
jge
push
cmp
jo
ss
xchg
xchg
cld
cmpsb
sbb
movsl
pop
test
add
lahf
jmp
push
lea
fisubrl
ret
mov
xchg
xchg
pop
std
inc
xor
ret
cwtl
popf
mov
lods
jnp
icebp
push
push
cmp
mov
ds
out
jp
add
repnz
sbb
xor
inc
pop
addr16
xor
outsb
push
ja
int3
and
das
imul
pop
les
call
scas
hlt
add
sbb
repnz
fs
ficoml
movsl
push
fnsave
pop
lock
mov
lock
xlat
sahf
mov
dec
mov
cltd
xchg
das
fistl
sahf
iret
pushf
cli
sub
pop
insb
cmp
mov
sbb
push
push
add
push
rclb
fisubs
xchg
cltd
addl
pushf
aad
pusha
or
in
mov
cmpsl
stos
insb
int
movsb
push
mov
sbb
fs
mov
popf
test
lock
fwait
xchg
jg
fldenv
stc
insl
loopne
and
test
das
mov
xor
out
or
mov
or
xchg
push
adc
sbb
mov
mov
pop
sbb
add
mov
push
lds
mov
push
jmp
dec
ja
jle
stos
or
les
inc
xor
arpl
popa
pusha
pusha
pop
addr16
roll
insb
daa
inc
add
mov
push
pushf
lds
or
dec
jle
push
imul
mov
stos
mov
sbb
popf
out
insl
clc
fistps
out
and
rcrl
ret
inc
dec
xchg
xchg
or
jecxz
pop
sbb
jmp
and
ret
sbb
jae
vmread
mov
out
pop
sarl
subb
add
lret
cmp
ds
mov
xchg
add
mov
cmpsb
jbe
adc
jbe
mov
ret
movsl
sar
enter
loop
fs
roll
insb
adc
sub
jo
in
inc
sti
cmp
jbe
and
popa
and
dec
and
pop
call
push
enter
int
mov
jge
pop
cli
xchg
shll
adc
sbb
gs
inc
cltd
add
inc
sahf
loope
sbb
cld
and
or
and
mov
std
iret
pop
push
aad
in
or
leave
push
leave
sub
mov
sbbb
and
pop
or
mov
shrl
add
cmpsb
xorl
pop
les
fisubs
xlat
adc
aas
lahf
or
sbb
fldcw
jge
pusha
sub
cs
xchg
xor
and
push
cmp
mov
pop
add
sbb
movb
fs
push
dec
jle
jp
pop
fnstcw
imull
push
sahf
xor
and
dec
sbb
in
in
hlt
xlat
pop
daa
mov
xchg
add
pop
call
push
jo
xchg
xor
sarb
cwtl
fwait
popl
cmp
shrl
cld
orb
jmp
jmp
int3
xor
ja
pop
push
call
dec
cmp
pop
push
stc
mov
mov
cmp
sub
xchg
sbb
sub
push
mov
insb
aas
jecxz
lea
cmpsl
dec
pop
fadd
mov
fisubs
sbb
pop
mulb
mov
or
xor
clc
std
adcb
stos
shl
mov
add
pop
push
sub
sub
lds
idiv
divl
xchg
ret
adc
xchg
loope
dec
iret
pop
or
fs
inc
into
scas
pop
xor
cmp
dec
fidivl
add
pop
cltd
mov
addr16
sbb
pop
inc
jge
mov
lea
cltd
mov
push
pop
dec
xchg
mov
mov
iret
push
in
arpl
popa
fsubrp
push
inc
xor
sbb
test
cwtl
adc
lret
paddq
mov
adc
cli
pop
aaa
out
sub
fwait
into
inc
jne
jae
aad
jo
add
dec
repnz
xlat
leave
stc
scas
and
es
sub
ds
mov
or
jae
jae
mov
mov
dec
aas
sub
test
out
clc
sbb
mov
data16
mov
xchg
mov
enter
mov
icebp
mov
ja
or
orb
ds
sub
imul
fcoms
frstor
mov
insl
data16
ds
sahf
sub
ret
popa
adc
hlt
jo
jp
cmp
data16
or
jbe
or
xchg
jno
cmpsb
pop
shlb
mov
dec
fnstcw
xchg
inc
bound
xchg
adc
jmp
xchg
mov
push
mov
mov
sbb
add
mov
add
sub
gs
pop
dec
sbb
icebp
mov
rcr
xchg
sahf
xchg
xor
pop
dec
push
lret
mov
ss
sarb
xchg
push
push
stos
mov
addb
mov
out
dec
or
fwait
lret
ja
aas
mov
mov
ja
jb
cmpsl
repnz
and
nop
out
outsb
es
push
stc
mov
adc
incb
lods
xor
cli
testb
lret
mov
mov
aam
icebp
int
push
in
test
leave
repz
repz
test
mov
test
cld
mov
std
jecxz
pop
add
xchg
paddd
xor
jbe
dec
es
pop
xchg
fildll
iret
rcr
cmp
jne
jbe
pusha
adc
or
dec
movsb
push
and
cltd
mov
ret
xchg
loop
fs
inc
cmp
std
nop
sarl
lods
repnz
test
js
push
nop
jbe
pusha
loope
xchg
ret
sbb
add
ja
mov
cmp
xor
push
mov
std
loopne
add
fiadds
ja
xchg
cmpsb
push
fsubrl
in
inc
or
sahf
mov
push
mov
sbb
mov
inc
add
push
and
gs
or
in
test
in
hlt
in
xchg
push
rorl
cmp
mov
add
and
lahf
pushf
and
xchg
or
mov
out
dec
dec
dec
jecxz
pop
scas
mov
xchg
mov
pop
jle
ffree
or
jp
test
addb
es
add
in
push
iret
das
xor
insb
out
shr
dec
pop
data16
ljmp
mov
pop
test
pop
xlat
sbb
xchg
jle
inc
int
inc
sub
dec
movsb
leave
push
mov
mov
pusha
push
jmp
call
add
out
mov
je
xor
scas
sbb
and
cmp
aam
xchg
adc
pop
push
jno
out
sub
call
cld
push
mov
push
sbb
or
stos
and
sub
pop
add
inc
jge
push
aam
imul
pop
sbb
scas
jae
insl
loop
sub
les
sbbl
xchg
imul
je
xchg
adc
add
int3
dec
sub
and
xor
jge
pop
pop
and
push
add
fildll
adc
lret
sar
mov
ja
cmpsb
sbbl
xor
sub
jne
pop
sti
das
sub
jb
fadd
les
clc
sbb
push
mov
fcomi
jmp
in
jnp
repz
or
lods
pop
mov
imul
pushf
ljmp
sub
jmp
adcl
push
insb
inc
imul
fisttpll
orb
sbb
add
inc
inc
adc
cmp
mov
sti
movsb
inc
push
andb
xor
adc
imul
adc
int
xor
pop
std
ljmp
orl
ss
sub
mov
xor
out
outsb
cmpsb
rclb
adc
push
aad
adc
icebp
pop
xchg
out
dec
jle
pop
aad
mov
pusha
xchg
inc
jno
sbb
xchg
xlat
xor
fucom
not
xor
or
jge
adc
push
push
push
fwait
pop
jmp
into
dec
or
fsubr
push
ret
inc
jp
jge
sub
bound
mov
or
f2xm1
loope
into
xchg
sbb
fldl
movsb
sbb
repz
sbb
loop
loopne
cwtl
arpl
outsl
xor
sti
mov
and
lock
xor
or
sbb
xchg
push
fnstcw
push
cltd
pop
outsb
jo
add
cmpsb
and
xchg
cmp
ret
outsl
fisttpl
fs
xor
mov
in
aad
mov
cmp
addr16
scas
dec
sbb
push
test
mov
sbb
cs
pop
ljmp
sub
push
mov
xchg
scas
pop
pop
xchg
stos
mov
scas
jge
xor
mov
and
dec
jmp
xchg
out
addr16
cmpsb
xchg
stc
ljmp
repnz
fsubr
out
sbb
mov
and
or
mov
dec
pop
outsb
add
lds
mov
js
fbld
mov
dec
adc
bnd
sbb
es
jp
or
loope
jo
mov
xchg
stc
jl
mov
ja
mov
push
inc
push
jbe
add
mov
lret
fucomi
arpl
sbb
pop
cmp
xor
cmpsl
mov
lcall
xchg
loopne
dec
sti
mov
mov
jbe
adc
xchg
cs
mov
cmpsb
and
orb
mov
push
ss
jmp
xchg
popa
popf
sarb
cmp
inc
loope
sbb
mov
mov
fucomi
jbe
out
xchg
roll
sar
push
pop
cwtl
out
mov
sub
out
daa
in
or
lahf
aam
dec
andb
sarl
inc
dec
clc
xor
fsubrs
adc
hlt
or
jo
sub
int3
testb
push
inc
aas
xor
jp
sub
repz
pop
adcl
or
dec
gs
inc
mov
dec
cmp
jge
mov
xchg
jne
icebp
addb
and
and
add
cmp
adc
adc
pop
lret
adc
sub
rorl
outsl
xor
ret
mov
sub
mov
in
aaa
xor
fisubrl
mov
push
jmp
mov
subl
jns
and
loopne
pusha
cmc
and
repz
in
jns
test
in
je
std
cmpsl
inc
subb
add
mov
fdivl
push
js
fs
jno
adc
std
cmpsb
mov
add
adc
and
repz
mov
movsl
lds
pop
push
mov
das
inc
cld
xchg
inc
add
outsb
jge
bound
lock
cmp
add
mov
lea
pop
jmp
mov
mov
repz
outsl
dec
mov
lahf
lods
mov
out
test
in
mov
pusha
dec
pop
rorb
pop
clc
sarl
jb
jge
push
and
pusha
and
leave
hlt
aaa
pop
test
dec
popa
push
push
or
out
cld
out
xchg
adc
rorb
push
fwait
mov
push
xchg
insb
mov
daa
add
stos
movsl
push
popa
cmp
push
mov
andb
das
cmp
nop
aas
hlt
in
sub
jae
testb
jns
mov
mov
cli
jne
lods
jmp
leave
cli
jecxz
xlat
movsb
xchg
out
inc
pop
jl
sub
test
lods
lcall
rep
and
out
ds
jecxz
loop
ds
xorl
cmp
rcl
clc
inc
aam
mov
jge
mov
mov
add
sbbb
sbb
stos
adc
lcall
push
or
dec
or
shll
or
mov
shrl
fstps
imul
fnsave
lods
cltd
lahf
iret
or
test
leave
adc
push
cmp
jne
cmpsb
das
negl
hlt
mov
lahf
cmp
dec
js
sub
ljmp
cs
inc
addr16
jp
push
jle
push
movsb
sarl
pop
int3
subb
sub
sub
jecxz
outsb
aaa
adc
inc
movsb
mov
int3
repz
push
sub
loopnew
mov
lock
inc
aas
push
clc
mov
pop
pop
je
lock
sbb
cmp
fimull
inc
fbstp
in
jno
pop
xor
dec
cmp
int
push
aam
push
ret
xlat
sarl
mov
adc
xchg
push
sub
dec
or
mov
mov
fcomp
and
dec
sbb
ljmp
bound
jecxz
shr
jmp
or
prefetchwt1
popl
xchg
xchg
mov
or
and
lea
ret
ljmp
or
outsl
inc
sub
dec
inc
in
xchg
cmc
lret
add
mov
push
sbb
sti
jb
inc
xor
sub
jecxz
jge
sub
in
adc
push
mov
fildll
mov
gs
pop
dec
popa
bnd
mov
sub
lds
ret
dec
cmpsl
lcall
std
xor
jecxz
inc
dec
add
jmp
cmp
sbb
lock
cmp
or
loopne
das
xchg
jmp
push
iret
subl
lcall
test
inc
into
mov
lds
xor
xor
xlat
or
adcb
ss
lds
adc
iret
push
insl
cmp
test
jo
adc
into
repz
in
rorl
je
fdivr
psubw
gs
cmp
addb
sub
mov
sub
xchg
xor
pop
lock
sbb
inc
bound
xlat
pop
inc
ljmp
mov
ds
jg
test
sbb
or
mov
sub
jecxz
mov
cmp
imul
push
jo
adc
or
mov
dec
cmp
mov
test
push
pop
cmp
inc
pusha
popf
push
mov
and
push
inc
lods
pop
push
sub
sbb
imull
dec
push
jecxz
xlat
lret
cmp
lret
out
test
cld
push
outsl
lcall
pushf
ret
mov
pop
aad
push
daa
cmp
ret
jno
pop
mov
xor
sahf
shlb
lds
out
rclb
das
push
mov
data16
mov
subl
inc
aam
sub
imul
jns
dec
imul
mov
out
add
push
incl
dec
mov
clc
xchg
insb
add
push
cwtl
in
xchg
pop
lret
mov
out
std
movsb
and
popf
xor
sbb
xchg
lods
lret
lret
mov
lods
dec
movsl
es
scas
ret
sahf
ds
sub
fistpll
call
in
popa
int3
xor
sub
jg
shll
push
mov
and
xor
pop
xor
pop
xchg
fildl
hlt
ds
cmp
ljmp
shlb
cmpb
adc
or
in
hlt
jo
jecxz
js
mov
pushf
dec
cwtl
rorb
cmpb
lds
andl
lret
addr16
mov
fsubr
fcmovnu
int
outsl
jecxz
cmc
int3
pop
and
mov
cmp
push
sub
push
mov
mov
mov
or
jne
fldl2e
mov
fnstenv
jmp
pop
movsl
add
mov
or
lds
cwtl
push
pop
outsl
push
test
add
pop
lcall
jp
sub
lahf
out
sbb
call
mov
fs
lret
mov
or
sub
pop
jns
aad
lret
in
mov
sti
jmp
push
shr
pop
add
mov
aad
jge
sub
fisttpl
int
jp
xchg
aad
mov
jns
scas
out
icebp
pusha
sub
je
add
ss
sub
ljmp
adc
fwait
or
sub
pop
sbb
jl
add
loopne
or
mov
add
push
sub
int3
push
pusha
cwtl
or
inc
rol
mov
xor
jb
cmp
jmp
hlt
pop
sarl
or
push
add
pop
scas
cmp
and
mov
divb
dec
aas
fldt
push
sub
inc
mov
add
push
pop
fidivrl
aam
jmp
rclb
push
sub
jo
lea
cltd
rolb
or
imul
mov
lcall
lret
sahf
test
nop
cli
popa
mov
push
outsl
mov
insb
fwait
in
ret
bound
lret
jnp
fidivrs
adc
clc
pop
shl
lret
jne
xlat
sbb
into
adc
xor
pop
lcall
lds
addl
sbb
test
popa
adc
in
xchg
push
sbb
repnz
dec
mov
jo
mov
sahf
jecxz
push
fsts
aam
inc
loop
lods
fs
inc
jmp
inc
inc
daa
lock
xor
add
mov
pushf
sub
xchg
xorl
xor
push
push
pop
adc
imul
push
fildl
inc
jno
and
lock
sbb
xor
sbbl
sbb
bound
mov
mov
jg
imul
jns
test
push
dec
aas
mov
jno
mov
push
jno
rorl
mov
mov
xlat
pop
sub
push
push
inc
xchg
push
mov
popa
nop
lock
mov
scas
dec
mov
push
fildl
cli
xor
mov
dec
jle
test
push
inc
mov
cmp
sub
or
jl
inc
clc
repnz
adc
sbb
ss
adc
mov
and
scas
out
xor
out
jo,pt
mov
andl
loopne
or
inc
pop
and
iret
mov
or
subl
mov
xchg
aaa
jp
dec
push
mov
cmp
or
jmp
pop
lret
fdivl
cmpsl
mov
fbld
pushf
push
or
push
sbb
sti
cmp
ss
mov
cmp
ret
divl
or
daa
mov
loop
int
jb
outsb
jb
push
xchg
xor
std
adc
adc
push
shl
pop
das
xor
mov
pop
xlat
movsb
fidivrs
xchg
arpl
xor
aam
int
adc
dec
fistps
mov
mov
aas
lret
lods
inc
jmp
dec
iret
push
lods
fwait
push
and
xor
loop
pop
push
adc
orl
sbb
icebp
push
jl
rorl
pop
cmp
scas
popa
paddd
sub
mov
into
pop
sar
push
movsb
jp
jo
nop
sahf
mov
pop
ret
popa
into
stc
mov
jo
dec
das
push
pop
imul
inc
or
pop
inc
inc
mov
or
jmp
inc
js
mov
mov
outsl
popf
cmp
mov
jno
clc
adc
or
jmp
sbb
lcall
int
aam
mov
test
push
data16
mov
xchg
sbb
mov
lret
stos
xchg
ret
cmc
repz
pusha
add
mull
rclb
mov
cmp
pop
add
mov
jle
jmp
mov
lahf
and
int3
add
aaa
cmp
inc
outsl
loop
cs
mov
out
mov
cld
lahf
out
or
mov
dec
in
inc
in
xor
jne
mov
ja
je
fiadds
cmpsb
fwait
addr16
dec
outsb
test
jb
pop
arpl
mov
std
adc
xchg
xor
lret
inc
fs
mov
sti
pop
je
fcomi
lods
jb
xchg
add
inc
jmp
clc
pop
mov
push
jns
cmc
add
and
ss
ret
insb
adc
jle
xlat
jmp
pop
mov
or
mov
aam
cltd
pop
push
sbb
addl
mov
adc
jns
out
stos
add
out
gs
scas
fsts
stos
repnz
test
ret
scas
mov
rorl
into
mov
sub
ficoms
rolb
or
repz
mov
jno
xor
push
jne
stos
mov
mov
xchg
das
lods
or
mov
sub
cmp
or
insb
jge
inc
shl
pop
dec
or
push
in
push
stos
outsb
in
imul
pop
dec
fnstenv
mov
mov
iret
in
jb
cltd
cmp
int
jmp
shrb
fidivrl
icebp
mov
mov
sbb
and
fmul
inc
lods
jg
lds
iret
ja
cmp
mov
call
adc
add
pop
push
mov
add
faddp
insl
jecxz
out
mov
dec
jae
sub
shrb
std
jnp
shlb
mov
es
jbe
outsl
push
clc
pop
pop
cmc
mov
js
popa
cmp
and
loop
popf
and
fists
flds
push
pushf
or
test
sub
sub
inc
adc
xchg
clc
jnp
pusha
or
cmpsb
aas
jg
cs
adc
adcb
icebp
push
imul
outsl
mov
sub
dec
dec
push
test
insb
call
imul
dec
jo
xchg
adc
mov
sub
fidivl
mov
adc
push
push
jecxz
fsubl
cmp
mov
seta
mov
shll
sahf
mov
lds
lahf
pop
mov
andb
cmp
pop
add
xchg
inc
ret
ljmp
insb
xchg
push
addr16
imul
mov
pop
popa
lea
incb
stos
cwtl
add
inc
data16
and
data16
and
daa
jmp
sbb
add
or
cmpsb
aas
out
mov
lahf
add
add
mov
add
call
sub
cwtl
imul
jl
popa
sbb
mov
lahf
pop
add
aaa
pop
cmpsl
add
jne
xchg
insl
jp
iret
pop
test
add
test
loope
pop
popa
scas
pushf
test
ss
pop
ds
lods
and
pusha
mov
and
push
ret
mov
je
jns
stc
lahf
mov
repz
add
sub
dec
or
cs
iret
push
cwtl
mov
lock
push
sahf
dec
movsl
push
inc
jge
hlt
jae
ds
fistl
mov
jecxz
inc
js
outsl
shlb
scas
sub
dec
loope
mov
sti
jmp
mov
xor
pop
mov
out
imul
popa
mov
pusha
enter
pop
adc
cmpb
jmp
xor
aad
push
outsb
inc
sti
call
sub
mov
push
mov
scas
pop
clc
adc
pop
and
jle
xlat
sarl
mov
out
sbb
or
dec
aam
inc
jmp
push
imul
jle
dec
sbb
push
xchg
sub
rcrl
dec
pop
push
enter
les
cmp
inc
lcall
icebp
test
pushl
cmp
adc
dec
aaa
dec
cmpsl
shl
mov
sub
scas
bound
aad
pop
mov
jne
xchg
lret
gs
aad
fstl
pandn
clc
or
mov
int
mov
push
or
sub
divb
fs
loopne
and
or
cld
inc
outsl
data16
nop
push
loope
mov
cmp
outsb
addr16
add
add
xor
stos
lods
inc
pushf
adc
arpl
fsubl
inc
xor
les
add
pushf
cmp
push
pop
pop
jmp
xchg
push
stos
in
pusha
push
int
jg
test
jp
dec
stos
inc
mov
cmp
pop
fcmovnb
sbb
bound
mov
leave
or
std
cwtl
cs
gs
cmpl
xchg
test
or
dec
ds
hlt
rcrb
inc
jl
shl
lds
sub
test
in
lods
scas
mov
sub
xchg
xchg
mov
imulb
int3
jmp
adc
jmp
lods
out
adc
inc
push
and
mov
xlat
out
das
jecxz
pop
add
fsubrs
gs
mov
cmp
dec
pop
push
shrl
outsl
loopne
loopne
aas
and
cli
adc
lcall
push
sub
lods
repz
adcb
mov
std
dec
insb
push
enter
pop
cltd
adc
or
imul
cmp
nop
cmp
cld
or
mov
hlt
fs
jbe
mov
cli
outsb
push
imul
pop
and
lods
in
push
jp
int3
aam
outsl
fs
sbb
paddsb
xchg
insb
hlt
sbb
pop
jg
dec
push
fists
jnp
lea
cwtl
cmc
push
fldcw
mov
test
and
cs
addr16
nop
pop
xchg
stos
das
add
and
cmp
sbb
add
test
dec
mov
outsb
arpl
mov
sub
or
pop
pop
js
xchg
xor
jo
jnp
int
rorl
aad
pop
inc
xor
and
push
add
or
movsb
lret
loope
jno
negl
subl
inc
mov
pusha
jne,pt
adc
cmp
mov
mov
adc
cmc
jnp
shlb
and
xchg
push
jge
jecxz
push
pop
xchg
cwtl
and
clc
mov
shrl
ret
movsl
pop
ljmp
cltd
adcb
addr16
sub
insb
jg
push
aad
aaa
cmp
pop
iret
jno
mov
aaa
mov
repnz
stos
loope
out
sbb
sbb
pop
lock
push
sbb
mov
xchg
mov
pop
cmp
es
push
repz
ds
mov
xorb
aam
fldl
jbe
rorb
jns
jo
lret
movsl
out
sbb
rcrb
inc
add
loopne
negb
in
jmp
addr16
sub
mov
dec
loop
cmp
jecxz
push
mov
ret
popf
out
ficoms
cmp
jo
mov
jle
xor
sbb
ret
push
mov
xor
mov
add
rol
scas
inc
rclb
mov
jnp
mov
adc
or
addb
inc
testb
dec
aad
sarb
fldl
repnz
jnp
inc
adc
insl
jo
mov
or
lahf
sub
and
push
jno
lds
fildl
jecxz
sti
adc
rcrl
ss
mov
out
out
inc
mov
mov
cwtl
je
fs
shrb
jae
mov
ljmp
mov
lahf
ficomps
in
test
or
push
sbb
cmp
mov
pusha
fcomp
in
std
add
sti
ret
cmpsb
mov
xor
sarl
fucom
inc
fsubrs
out
dec
popa
call
add
add
int3
sbb
xchg
sub
daa
fistl
add
mov
and
cmp
sub
push
out
icebp
sbb
insl
sahf
sarl
imul
aam
pop
cmp
adc
inc
les
sbb
repnz
xor
inc
jns
xor
push
iret
xor
jb
fiaddl
test
mov
out
adc
fwait
shrl
mov
or
aaa
mov
mov
subps
xor
push
jnp
pop
sarl
sbb
cs
pop
into
pop
xchg
cmp
test
jnp
xor
sub
icebp
rcr
push
push
sbb
lds
and
fxch
test
lea
sub
xchg
imul
insl
jmp
pop
pusha
int3
jae
jmp
lret
jb
bound
scas
ja
mov
pop
pop
pop
adc
sub
leave
cmc
inc
push
std
xchg
mov
cmp
xchg
cmp
xchg
mov
xor
loop
lret
bound
push
xchg
mov
loope
jg
mull
pop
sub
je
pop
inc
pop
inc
addr16
pop
jecxz
ds
push
add
stos
adc
cmc
cmp
push
aaa
imul
movsb
lock
cs
aad
xlat
es
call
movnti
inc
mov
mov
xor
mov
add
ljmp
inc
repnz
loopne
add
call
rcll
ret
mov
pop
or
add
pop
or
cli
xchg
mov
pushf
push
xchg
jae
mov
test
pushf
dec
xor
movsl
int
fimull
lahf
mov
xor
notl
mov
sbb
xor
pop
data16
sahf
mov
push
popf
adc
enter
mov
icebp
xorl
ds
out
xlat
xchg
pop
out
jo
repz
test
lret
mov
jnp
test
hlt
push
fisubl
aaa
int
inc
out
je
cmp
stc
or
cs
dec
adc
jbe
pop
xor
mov
jo
gs
in
jo
sti
lahf
jbe
repz
add
lcall
mov
fsubl
mov
jne
rorb
call
xchg
arpl
fbld
or
fsub
push
mov
inc
rolb
xor
popf
mov
xchg
xchg
xchg
stos
pop
loope
aad
cld
push
std
sti
xchg
mov
adc
mul
cmpsl
sub
pop
dec
popf
pop
shll
test
add
adc
add
sbbb
pop
lods
sub
xor
push
mov
and
stos
out
inc
loope
popa
mov
sub
push
jl
dec
adc
mov
mov
or
lods
je
mov
pop
in
je
cmp
cmpsb
mov
lock
mov
add
out
push
leave
mov
jge
adc
test
and
push
popf
insb
decl
jnp
jns
xor
or
push
pop
aas
ja
cld
cmpsb
sarl
outsl
outsb
and
or
pop
imul
sub
leave
adc
or
xor
mov
xor
fldcw
loopne
adc
popa
fldcw
shll
js
mov
test
pop
sub
insb
xor
xlat
jne
scas
cmp
jmp
cmpsl
cmp
sbb
fninit
xlat
xchg
pop
mov
mov
sbb
lds
in
cmp
xor
push
mov
dec
xorl
mov
mov
fwait
call
mov
xor
fisubrl
shrl
lea
push
mov
dec
mov
xor
scas
inc
in
or
adc
popf
fidivrl
mov
dec
test
jecxz
and
jp
mov
shl
loop
subb
lret
pushf
std
mov
out
dec
rcr
pop
aam
in
daa
inc
add
dec
rcrb
mov
ds
imul
or
jg
lret
fs
movsl
sbbl
cwtl
adc
call
push
jns
scas
push
in
dec
test
mov
jp
divl
push
or
sub
outsb
or
das
cmp
xchg
add
call
jg
movsb
dec
bound
lods
cmp
in
fs
push
popf
shll
flds
mov
jbe
je
ds
mov
pop
out
sbb
and
ja
outsb
mov
test
decl
scas
arpl
dec
aam
aad
je
lcall
cmpsl
cmc
cmpsb
rorb
incb
int
popa
in
sub
push
mov
xchg
sbb
mov
push
lods
jno
ds
push
arpl
fldcw
jle,pt
sbb
aas
adc
idiv
es
in
leave
rorl
aas
cmpsl
stc
fbld
mov
xlat
fs
iret
and
xor
icebp
aad
mov
into
std
jne
leave
cmp
clc
roll
add
sahf
and
add
out
sub
adc
or
cmp
repnz
out
inc
out
addr16
sub
adc
mov
das
das
and
mov
cmc
ret
cmp
xchg
loopne
mov
shrl
inc
lea
cmp
mov
loope
adc
paddd
cs
pushf
or
mov
mov
mov
xchg
enter
int3
loopw
enter
xor
stos
fcomps
test
imul
andl
cli
dec
add
lods
mov
addr16
outsb
shll
fcoms
sub
call
lock
mov
sti
dec
xor
xchg
jmp
dec
iret
dec
les
jne
stos
aaa
and
xchg
dec
bound
mov
leave
popa
or
xchg
push
xchg
push
mov
and
pop
adc
cmp
mov
push
sub
mov
idivl
stos
addr16
or
or
xor
cltd
pop
jp
jle
push
sub
and
out
hlt
xor
pop
mov
mov
jmp
jecxz
pop
stos
xchg
sbb
and
pop
sbb
icebp
jno
enter
push
lahf
xlat
shrl
push
push
jg
mov
insb
inc
jne
xchg
push
shll
xor
adc
xchg
adc
popf
cli
mov
jne
jno
jmp
and
into
cmp
nop
xor
lods
xchg
arpl
mov
scas
xor
fwait
inc
cmpsb
test
mov
imul
shrb
jae
in
lods
je
cmpb
xor
js
xor
aas
dec
sahf
testl
and
loop
jmp
lods
stos
mov
test
imul
mov
sbb
fnstenv
dec
lds
pop
xor
xchg
adc
daa
pop
jno
push
and
aam
movaps
repz
sbb
lock
mov
dec
or
loopne
nop
inc
dec
addr16
xor
dec
jge
mov
ret
cli
cli
out
test
sub
insb
adc
dec
fsubr
push
push
rcll
cld
out
and
or
fs
jmp
leave
inc
jmp
popa
sbb
add
imul
pushl
loope
js
dec
mov
scas
lret
je
push
or
sub
sub
loopne
insl
push
clc
xchg
xor
sub
cmpb
mov
push
int3
push
add
and
pop
out
std
ja
movsb
lret
mov
mov
push
pop
add
cmp
bound
mov
aas
cmp
xor
inc
lret
sti
and
xchg
movsl
sub
add
out
pop
imul
popf
inc
sub
xchg
lret
add
sbb
out
and
or
add
mov
mov
scas
mov
or
cmpsl
jb
jecxz
mov
adc
subl
ss
scas
loope
imul
add
nop
clc
sub
jnp
enter
scas
sub
cmpsb
push
push
mov
add
cmpsl
jmp
nop
mov
jg
inc
bound
nop
aaa
sub
xchg
push
sbb
outsb
or
fcoml
loop
push
addb
pop
out
push
movsl
mov
push
xor
dec
and
pop
ds
sub
sub
xbegin
mov
fs
imul
jg
andl
cmpsb
imul
jns
jns
cs
mov
add
cld
lods
add
mov
std
mov
dec
sub
xor
jle
jg
imul
jle
pop
out
call
mov
jb
adc
insb
stos
pop
insl
xchg
clc
pop
jmp
loop
inc
fldt
add
sub
cmp
fprem
js
push
cwtl
mov
pop
mov
adc
andb
mov
mov
movsl
rcll
das
shl
lea
fadd
sti
out
fcoml
lock
jo
cmp
mov
divl
and
aam
mov
sbb
jno
lahf
cmp
push
pop
lods
add
mov
xchg
jg
popa
bound
jp
jo
cmp
lock
movsb
gs
sub
outsb
pop
mov
pop
dec
mov
dec
fs
out
js
inc
mov
and
mov
es
mov
mov
mov
push
jo
and
nop
movsl
nop
add
ror
cmpsb
ja
xchg
sbb
inc
ljmp
mov
add
pop
mov
outsl
cs
mov
lods
xor
or
jle
add
daa
push
iret
mov
jb
mov
sarb
push
bound
mov
xchg
pop
aad
mov
andb
test
mov
lods
and
sub
push
shll
cmp
mov
test
lods
loopne
mov
loopne
stc
inc
pusha
sbb
or
cmpl
xor
test
orl
sahf
push
movsb
pop
dec
cmc
push
mov
add
call
ret
and
repnz
jecxz
imul
cmp
inc
dec
popa
xchg
push
mov
daa
syscall
call
add
pop
call
cmp
jnp
punpckldq
jns
subb
in
test
xchg
inc
cmp
pop
in
cmp
jmp
xlat
cmp
and
pushf
adc
fucomip
sahf
mov
dec
push
aam
mov
test
cmpsb
mov
mov
mov
insb
movsl
cmpl
adc
gs
iret
mov
pop
mov
mov
sub
sub
mov
dec
and
addr16
xorb
insl
repz
stos
pop
mov
sub
sti
sti
lds
and
push
enter
movsb
lea
jno
mov
xlat
cmp
loopne
pop
fmull
scas
cmp
test
mov
rep
pop
mov
push
jg
mov
inc
mov
mov
cmpsl
xor
mov
inc
mov
addps
in
mov
rorl
out
fs
sub
popa
imul
jae
lcall
inc
clc
push
outsb
xchg
xchg
ljmp
jecxz
cmpxchg
repz
push
stos
mov
cli
sub
jae
into
outsl
jnp
mov
sbb
add
adc
sbb
mov
ret
sub
mov
or
fdivr
cmp
jbe
popf
cwtl
nop
out
add
push
fildll
testb
sbbb
inc
jbe
aas
mov
mov
pop
mov
or
lock
stos
test
and
das
aas
mov
fnstsw
scas
out
dec
nop
clc
mov
mov
flds
mov
add
cmp
xchg
or
adcl
addr16
xor
pop
push
je
mov
fdivr
arpl
repz
repz
hlt
dec
pop
mov
xor
daa
cmp
jge
push
loope
std
sti
rol
xor
cmpl
call
es
xchg
mov
popf
hlt
aad
lcall
mov
sbb
fisttpll
mov
adc
xor
cmp
orb
dec
dec
aad
insl
pusha
in
or
jo
pusha
aad
push
popa
jae
test
js
ret
mov
sbb
mov
dec
lods
cs
pushf
jbe
out
lds
in
dec
ficoms
cmp
dec
sub
mov
adc
or
dec
mov
orb
aaa
pop
sub
push
ret
add
lcall
in
xchg
inc
xchg
mov
movsl
sbb
add
fisubl
adc
mov
pop
iret
mov
sbb
cltd
js
pop
lods
inc
out
inc
sar
jge
sbb
loop
xor
add
popa
sub
sahf
cmp
sbb
lods
mov
push
sub
adc
sti
test
mov
mov
or
in
mov
mov
sub
dec
inc
fstpt
cmp
inc
and
cmpsb
jne
jle
fcomp
or
inc
mov
inc
sub
test
push
mov
sbb
inc
shll
cmp
lcall
sbb
lods
mov
pushf
lods
mov
repnz
lods
aaa
inc
sub
mov
js
jmp
je
fbld
sbb
bnd
inc
orl
ss
xchg
dec
outsb
xor
or
jecxz
xchg
ret
sub
mov
push
les
dec
xchg
mov
and
xor
call
pop
out
aad
in
dec
sbb
xor
and
pop
cmpl
ljmp
jecxz
push
and
rol
sub
mov
inc
sub
dec
or
add
mov
roll
xchg
loope
orb
pop
fistl
js
out
mul
test
push
sub
or
or
sbbl
push
je
and
dec
fs
jge
leave
xor
and
pop
div
pop
pop
into
mov
inc
cmp
popf
ficoms
call
out
push
xor
ja
orb
inc
cltd
test
shll
or
lea
pop
jmp
xchg
loope
pop
xor
add
out
in
mov
cmp
rorb
loop
lods
mov
cmp
jne
fsub
mov
popf
mov
mov
and
fucomi
add
dec
stc
sub
lods
sub
pop
aam
dec
mov
ds
sbb
ret
out
insb
lret
arpl
pop
fpatan
mov
std
and
sub
push
or
cmp
test
jne
push
push
popf
shlb
or
jne
test
mov
outsb
out
lods
adc
sub
movsb
mov
inc
mov
or
icebp
adc
mov
dec
cmpsb
adc
push
xor
xchg
movsl
mov
inc
in
xchg
inc
push
xchg
push
adc
pop
mov
dec
xchg
dec
daa
cmp
icebp
push
sbb
in
cmpsl
mov
add
loopne
push
test
xor
out
fdivrp
into
rcr
mov
mov
xchg
movsl
dec
in
subb
cmp
bound
push
pop
nop
dec
add
int
test
inc
sbb
rcl
cs
fstl
xchg
cmp
insb
mov
cmpsb
ljmp
push
sub
mov
or
enter
int3
daa
mov
mov
push
sub
xchg
outsb
pop
repz
into
push
aam
fistpll
mov
cmp
aad
xor
adc
cmp
testb
lret
scas
fmuls
mov
push
jl
mov
dec
rcll
push
mov
inc
pushf
push
repz
inc
loop
inc
push
fstp
idivb
das
sbb
into
shl
jge
fildl
sbb
fiaddl
aam
cmpsl
mov
dec
jle
push
dec
sbb
push
dec
add
inc
lcall
xchg
pop
outsl
sub
cs
cld
mov
lahf
enter
jbe
mov
pop
jae
dec
int3
pop
int
aaa
push
sub
pusha
hlt
std
jne
add
jp
sbbl
subl
push
fwait
insb
add
mov
mov
fnsave
fcmove
scas
pop
ss
and
sbb
les
and
xchg
sbb
cltd
jno
adc
xchg
xchg
aam
js
inc
pop
jge
ret
adc
and
mov
or
ss
xor
sub
cli
jl
insl
iret
mov
aam
imul
insl
add
ljmp
daa
lea
clc
sub
add
cmp
js
cmc
add
roll
movsl
add
mov
data16
std
mov
cwtl
mov
sub
xor
clc
pop
clc
and
aaa
adc
ljmp
ret
movsb
mov
mov
gs
rcll
and
movsl
mov
repz
mov
pushf
jne
pop
adc
pop
mov
sarl
sbb
add
jns
xchg
xchg
stc
dec
sbb
inc
loopne
shll
xorl
dec
or
cld
outsb
inc
jno
cmpsl
cmp
out
push
inc
adc
jge
pushf
xchg
inc
inc
stos
out
loope
shll
cmpsl
sub
dec
sti
daa
mov
xor
or
out
sbb
cld
outsb
sub
aad
shrl
mov
xlat
pop
loopne
add
adc
iret
stos
xor
mov
mov
jl
jle
adc
pushf
les
fildll
sbb
stos
clc
sbb
xor
lea
dec
loope
insl
xor
stos
adc
cltd
fwait
xor
pop
add
lods
dec
fistps
pushl
andb
mov
hlt
cltd
mov
ffreep
arpl
sbb
scas
ret
xchg
mov
mov
in
lcall
out
enter
enter
imul
imul
or
data16
stos
call
icebp
pop
pop
fldt
mov
add
mov
jp,pt
pop
jl
sub
call
push
mov
mov
sub
jl
adc
xchg
lods
dec
xor
stc
dec
sbb
imul
aam
or
cmp
cmpsb
lea
jne
push
xchg
jno
lds
inc
or
movsb
and
adc
mov
lcall
dec
mov
jnp
cmp
lods
and
xchg
stc
mov
arpl
push
mov
jmp
gs
push
out
pushf
sbb
pop
adc
xchg
xor
push
test
loopne
ja
inc
adc
out
rcrb
mov
scas
xor
inc
or
jp
mov
movsl
xor
dec
leave
push
fwait
inc
mov
and
dec
and
jecxz
out
scas
jecxz
ss
fwait
out
xor
lods
adc
sahf
jl
fdivrl
add
stos
pop
push
adc
sub
and
pop
sbb
xchg
mov
shll
xorb
sbb
shr
push
push
xchg
or
je
inc
cmp
xchg
xor
push
xchg
out
jnp
cltd
inc
dec
iret
out
adc
dec
arpl
mov
pop
in
and
scas
cmc
cltd
pop
lcall
sahf
outsb
mov
push
cmc
popa
rol
pusha
sti
dec
jno
adc
shlb
jnp
repz
fidivs
rcrb
outsl
mov
movb
popf
cli
sbb
nop
xor
popa
mov
roll
cmpsl
pop
in
cltd
scas
ja
fbstp
loop
ss
pusha
clc
mov
fmuls
cwtl
lret
push
push
pop
push
movsb
and
and
adc
mov
test
push
mov
imul
adc
fwait
shll
push
mov
nop
imul
mov
push
in
xchg
int
cmp
movsb
das
push
xlat
lods
mov
mov
pop
push
dec
stos
cmpsl
jnp
jp
repnz
jae
dec
add
jmp
mov
adc
aad
ja
add
xchg
sub
arpl
mov
pop
xor
fistpll
dec
lahf
pusha
xor
mov
ja
mov
outsl
jg
add
sbb
pop
ret
xchg
in
call
mov
int
ret
jbe
lds
push
bound
divb
shr
jle
fwait
daa
stc
shl
aaa
movsl
test
ja
xlat
loop
inc
adc
loopne
cld
imul
adc
and
mov
xchg
jge
dec
ljmp
push
mov
loop
add
mov
popa
sbb
ss
imul
jl
sbb
ja
cmp
mov
push
push
lret
or
lods
daa
lock
divl
xor
xchg
adc
adc
cmp
rcrb
pop
fcoms
nop
jecxz
jg
cld
in
or
rcrb
fs
pop
cmp
cmp
les
inc
sbb
inc
mov
adc
out
fidivl
andb
jl
in
cltd
aas
mov
pushf
dec
inc
pop
incl
aas
cmp
push
cmpsl
and
cmp
fs
lret
mov
test
sbb
notl
pop
pop
rorl
js
movb
nop
inc
or
pop
stc
pop
xlat
xchg
push
shrb
or
cmpsb
and
mov
repz
shrb
pop
mov
cld
in
pop
arpl
sub
xchg
add
inc
xor
lahf
pop
ficomps
in
inc
jno
adc
addr16
stos
sbb
iret
cld
aam
jmp
and
jmp
in
fistpll
dec
cs
leave
sub
jae
xor
mov
clc
nop
dec
popf
xor
mov
inc
adc
setbe
cmpsb
subb
jae
pop
pop
xor
push
xchg
add
testb
clc
xchg
ds
ret
cwtl
mov
push
in
js
adc
cs
mov
lea
ss
push
add
push
shrb
sbb
cmp
jmp
jmp
lock
sub
xchg
notb
sbb
sub
mov
push
jge
sub
mov
and
enter
cli
fstpl
lcall
pop
sbb
scas
jg
inc
inc
mov
pop
adc
es
mov
or
sbb
or
and
and
mov
sub
add
xchg
push
lret
adc
inc
jnp
call
mov
sarb
dec
mov
imul
mov
push
cmp
dec
push
xor
fimuls
dec
lcall
sbb
or
pop
test
leave
jge
shl
add
out
or
xor
lods
sub
ret
and
js
lea
popf
idivl
push
push
dec
add
xor
lret
push
data16
and
and
inc
jg
or
mov
clc
roll
xor
imul
lds
fidivl
nop
mov
mull
mov
push
mov
adc
icebp
lods
jecxz
enter
inc
inc
ret
mov
pop
sub
test
and
jb
fsubrl
push
idiv
andl
rorl
add
addr16
fcmovnbe
lret
je
gs
notl
lods
out
mov
lods
or
loope
adc
push
dec
pop
inc
xor
add
push
sbb
dec
popa
test
arpl
fistpl
xchg
cwtl
outsl
jnp
out
jns
push
inc
sbb
dec
push
sbb
rcrl
and
daa
lods
rorb
jnp
push
sub
aaa
test
lods
loop
pop
add
out
cs
cmpsb
xchg
lds
xchg
dec
subb
js
shll
xor
fiadds
push
jne
dec
add
and
jle
cs
inc
fwait
jge
xchg
sbbl
clc
sbb
xchg
jae
inc
mov
push
or
fisubl
jns
popf
testb
cmp
dec
out
push
mov
stc
in
xchg
mov
mulb
or
addr16
jns
mov
fisttpl
ljmp
inc
sbb
sub
dec
cld
leave
dec
xorl
push
cld
out
mov
fidivl
imul
clc
adc
add
mov
adc
repz
mov
xchg
xchg
outsl
xchg
and
rcll
das
imul
fnstcw
and
int3
push
shlb
ret
fstl
jbe
cmp
mov
lock
cmp
mov
mov
dec
add
sbb
pop
dec
mov
int
dec
movsb
xchg
testb
jno
mov
mov
inc
outsb
lock
and
popf
cld
orl
dec
or
stos
leave
mov
adc
jmp
loop
add
xchg
mov
imul
xor
mov
insl
pop
sub
pushl
inc
addb
jmp
cltd
dec
int3
mov
mov
push
cmp
push
add
inc
mov
scas
dec
add
jecxz
in
rorb
mov
add
add
mov
jge
movsb
and
ja
sub
inc
xor
inc
int
jno
push
inc
jecxz
out
jno
jne
jbe
sub
mov
inc
dec
fxch
int3
insl
jmp
jns
repnz
dec
rdpmc
mov
pop
fucomi
pusha
mov
ja
mov
cli
add
ret
test
stos
cld
jbe
xchg
pop
clc
shl
loopne
xlat
jo
xor
mov
mov
pop
ja
jle
movsb
inc
out
inc
mov
mov
cs
aaa
cmp
lahf
dec
mov
pop
sub
ds
mov
mov
cli
jecxz
inc
push
adc
add
call
rol
push
popa
cmp
add
mov
in
sub
and
out
xchg
hlt
mov
loop
scas
dec
mov
jge
clc
insl
subb
mov
mov
lock
cmp
test
call
push
xor
ret
or
and
xor
sbbb
xchg
mov
xchg
int3
ret
xchg
push
jns
jns
pop
pop
out
shrb
push
pop
mov
loope
and
movmskps
jle
cmp
lea
mov
adc
shll
mov
dec
lcall
inc
mov
pop
xchg
push
xchg
sti
in
test
test
inc
fsubl
scas
mov
dec
popf
inc
incl
in
xchg
fs
scas
pop
sarl
and
lea
push
in
sub
cld
data16
out
lret
lea
sbb
push
jnp
stos
enter
sub
cli
sahf
lahf
stc
add
outsl
or
push
or
cmp
pop
jp
sbb
loope
push
es
inc
sbb
xchg
dec
add
aad
das
pop
dec
aam
xor
roll
jbe
loopne
jnp
adc
push
cli
inc
push
xorl
cmp
add
mov
jmp
xchg
lahf
add
cmc
in
jmp
pop
and
xor
push
ret
xchg
jg
or
mov
test
jp
inc
jb
xor
pop
test
push
fdivrs
movb
pop
push
add
mov
sbb
mov
ds
pusha
mov
fiadds
test
loop
outsb
or
jmp
cmp
pop
jp
andb
xchg
dec
ja
mulb
mov
sbb
dec
push
repnz
xchg
dec
cld
into
pop
inc
test
icebp
sub
loop
lods
and
lods
orl
pop
imul
dec
xchg
xchg
cs
pop
mov
or
int3
and
xor
inc
add
dec
test
cmp
and
arpl
mov
cmc
mov
lods
int3
cwtl
adc
add
fmull
addr16
inc
and
out
dec
xlat
pop
enter
ljmp
fmull
shl
mov
mov
dec
mov
subb
inc
sub
repz
ret
faddl
adc
insl
jmp
mov
mov
neg
cli
hlt
mov
ret
stos
dec
mov
gs
xchg
jne
icebp
shlb
mov
into
inc
jb,pt
push
rep
sub
fucomi
jo
mov
add
xlat
popa
into
ljmp
xor
jae
mov
add
js
pop
pop
push
les
inc
inc
push
sahf
adc
pop
and
cld
out
add
dec
clc
cwtl
and
mov
mov
cld
xlat
push
add
dec
loope
popa
call
lods
mov
mov
push
mov
sbb
es
cmpsl
pop
and
popf
int
addb
cmp
push
cmc
iret
adc
in
cltd
les
pop
jo
jo
cwtl
mov
in
jae
dec
mov
mov
js
dec
xor
jle
mov
movsb
mov
aam
mov
sbb
pop
or
dec
adc
xchg
cwtl
mov
insl
mov
insb
dec
fisttpl
rclb
jp
push
xlat
lods
fcmovnb
in
ss
movsl
fnstenv
mov
or
test
shlb
test
call
pop
ficoms
sub
xchg
or
pop
test
pushf
cltd
mov
mov
jns
jle
sahf
call
fidivs
pop
in
mov
test
mov
lret
movsl
je
insl
xorb
sbb
jae
jp
jge
push
add
or
mov
fisttpll
push
je
adc
ret
push
mov
scas
xchg
mov
mov
aaa
push
ljmp
push
mov
adc
add
inc
dec
xchg
stc
and
cmpsb
dec
jecxz
or
cs
das
mov
mov
push
aam
xor
push
out
into
stos
aaa
mov
ret
repz
leave
test
and
and
mov
and
rorl
and
mov
and
mov
rcrb
std
mov
inc
pop
sahf
in
arpl
push
ret
int3
cld
jmp
decl
testb
xchg
xlat
push
push
outsl
in
sbb
jbe
push
imul
das
mov
jmp
cmp
addb
jne
pop
gs
in
cmpsl
cmp
cmpsb
lock
lock
testl
into
mov
je
nop
adc
mov
jo
adc
out
mov
mov
lcall
jge
inc
mov
dec
xchg
fsubr
add
and
jecxz
and
scas
and
test
jmp
movsl
jecxz
mov
jb
xchg
jecxz
xor
pop
jb
cmpsl
sbb
add
jecxz
mov
neg
sub
push
lock
orb
xor
fstpl
data16
cld
js
adc
xor
jg
push
xchg
bound
mov
xor
mov
sbb
or
mov
movsl
xchg
movsb
mov
ja
scas
shrl
jbe
push
lret
divb
inc
sti
clc
fldenv
out
les
out
pop
clc
fistpll
adc
xchg
into
dec
adc
cmp
cmp
adc
idivb
sub
ret
xchg
addl
and
xchg
cmpsb
and
adc
adc
xor
lret
xor
mov
xor
mulb
into
sub
or
push
xor
and
pshufw
dec
lcall
xchg
in
setle
outsl
xchg
and
ds
stc
cmp
out
insl
mov
in
cwtl
or
mov
add
out
mov
xchg
scas
mov
sti
ds
insl
lds
bound
xchg
in
mov
bound
popf
cmpsl
cmpsb
xor
fcmove
inc
sbb
and
dec
cs
adcb
cli
faddl
int3
push
arpl
out
scas
icebp
or
movsl
lret
or
movsl
stos
inc
dec
test
push
cmp
and
in
lods
inc
nop
or
inc
fsub
call
gs
sbb
lods
pop
mov
pop
inc
xchg
clc
inc
cmp
ds
mov
push
cmpsl
popa
push
mov
ja
pop
inc
fwait
pop
jg
cmc
mov
sti
and
add
pop
cwtl
pop
dec
outsb
popa
stc
mov
jecxz
ja
mov
or
fiadds
inc
pop
inc
je
lret
rcll
add
hlt
sub
xor
sbb
lods
mov
and
jecxz
and
std
popf
int3
rcl
xchg
jns
out
jg
sbb
idivl
shlb
xchg
adc
nop
imul
dec
aam
fstp
or
xchg
pop
add
in
addl
test
out
xchg
mov
int3
jecxz
in
mov
xlat
arpl
sub
cmp
cmp
and
cmp
aaa
shll
shr
mov
into
cmp
push
xor
in
insl
push
sahf
outsl
repnz
or
mov
xchg
xchg
das
mov
cmc
fldcw
fstps
xor
test
stc
lahf
or
sbb
roll
mov
sarb
jns
inc
gs
push
jne
test
shrl
pop
jns
ret
bound
lock
pop
or
arpl
clc
in
pop
xor
idivb
push
jo
or
mov
jecxz
pop
fsub
fucomp
gs
or
loop
cld
xlat
dec
mov
mov
sbb
repz
popl
movsb
and
jns
pop
cmpl
jecxz
call
mov
pop
stc
cmp
xor
mov
cmp
lea
xor
xchg
adc
out
xlat
push
mov
lret
mov
cwtl
lret
cmp
mov
dec
dec
lock
mov
repz
jb
sub
shlb
out
jo
jmp
jae
in
xchg
repz
insb
adc
cli
sub
movb
ds
add
mov
or
and
jno
sahf
inc
add
sub
pop
and
adc
negb
inc
pop
dec
push
xchg
cli
jae
inc
paddq
or
cltd
inc
test
lret
mov
adcb
cld
mov
test
es
popa
push
mov
aad
andl
jo
add
dec
cmpsl
push
xor
je
inc
jb
xorb
and
lods
mov
fisttpl
inc
repnz
out
mov
push
stos
daa
rorb
mov
inc
xchg
lcall
xchg
and
mov
adc
sub
fcmovnb
adc
xor
cltd
rcrl
dec
stos
aam
pop
out
call
fidivrl
fs
sahf
iret
push
jbe
cmp
add
cld
rcrb
cmpsl
lods
xchg
pop
xchg
dec
adc
sub
sub
dec
clc
sbb
fldenv
es
pusha
or
push
cltd
mov
repnz
sub
adc
xchg
xchg
fistpll
or
adc
dec
and
mov
mov
mov
push
ret
pop
out
push
xchg
pop
cmp
cltd
test
or
lahf
add
pusha
pop
add
sbb
pop
xor
imul
inc
enter
mov
pop
lcall
xchg
mov
xchg
lret
jno
out
pop
jle
dec
push
nop
fnstcw
jb
push
jmp
xchg
add
aam
inc
or
das
mov
xchg
add
push
inc
jp
fcmovnu
cld
cmpsl
and
sbb
call
sub
imul
sbb
mov
pop
sbb
out
sbb
mov
gs
or
sbb
movsl
mov
sar
or
jb
cmpsl
fisttpl
jg
rol
test
inc
mov
jo
in
aaa
and
roll
cmp
scas
gs
jo
lock
adc
mov
jg
mov
repnz
sub
push
ret
imul
out
js
inc
sub
sti
sub
mov
ljmp
mov
hlt
push
ljmp
stos
jmp
pop
std
mov
or
jnp
push
xor
subb
mov
lahf
call
dec
mov
dec
loopne
negb
push
leave
xor
pop
pop
in
jne
subb
pop
lea
or
mov
inc
iret
xlat
or
mov
mov
cmp
das
ret
push
push
push
mov
mov
cmp
push
xchg
cmc
push
ret
inc
mov
ja
lea
out
adc
lahf
and
lea
dec
mov
sahf
adc
movsl
sub
ds
adc
push
mov
sub
je
stos
cli
nop
xor
nop
xchg
dec
pop
xor
frstor
xchg
fistpll
xor
rorl
push
push
adc
sub
jbe
jg
xlat
push
push
insl
mov
es
repz
jne
pop
push
push
mov
aaa
idiv
jae
cmpsb
ret
shlb
push
cmp
pop
sbb
jnp
push
mov
dec
sub
imul
xor
fsts
ficoms
adc
fstl
xchg
mov
cmpsl
lahf
jne
sub
push
mov
push
rep
mov
js
push
jb
insl
fsubs
xchg
xor
imul
sub
cmp
ja
xchg
sub
xor
lahf
stc
or
add
xchg
sub
out
xchg
ret
jbe
pushf
cmc
jno
push
jp
psllq
ljmp
pop
cmp
lods
fdivrs
fadd
fwait
adcl
jmp
jns
push
pop
and
std
mov
aas
jmp
xor
jo
pushf
adc
ja
mov
ss
and
cmpsb
stos
xchg
hlt
mov
and
xor
stos
push
push
add
shll
mov
pop
mov
adc
scas
mov
jle
cwtl
aas
and
adcl
cmpsb
adc
add
addr16
scas
sub
inc
mov
xor
incl
add
mov
shll
push
loopne
iret
or
mov
loop
call
daa
xchg
sub
test
xchg
in
std
inc
je
push
cmp
mov
aas
cs
jb
pop
jge
inc
ss
xchg
xchg
mov
pop
mov
push
test
ds
push
pop
or
dec
fcompl
rcrl
ret
sbb
ljmp
dec
dec
loope
jecxz
xor
mov
rorl
add
jmp
ljmp
push
iret
stos
adc
fs
sahf
mov
fsubl
pop
xchg
iret
arpl
push
add
outsb
adc
rcll
inc
nop
mov
fucomi
outsl
cld
xor
mov
insb
sarb
jo
cmpsl
mov
lea
insl
sub
pop
mov
mov
cmp
daa
into
idivl
xor
movl
mov
jmp
shr
outsl
jg
int3
inc
clc
fdivrs
lahf
mov
xor
jecxz
cmp
mov
cmc
adc
addb
mov
or
lock
push
ficoml
popa
aad
aaa
dec
xorl
dec
mov
and
xlat
or
sub
hlt
test
push
push
jns
pop
adc
js
sbb
ds
jns
xor
dec
lret
sbb
push
xchg
push
pop
mov
and
ret
pusha
or
stos
mov
push
in
push
pop
lds
pop
sub
inc
adc
or
push
or
rcr
jae
mov
jnp
mov
bound
and
fisttps
fistpl
movsb
xchg
mul
mov
pop
lret
cld
mov
cwtl
call
lahf
popa
rorb
lret
mov
push
std
mov
fisttpll
mov
inc
adc
and
shll
push
cs
and
adc
jmp
icebp
int
loope
jnp
xlat
fidivrl
outsl
adc
mov
loopne
dec
pop
and
pop
xchg
hlt
jmp
mov
cs
dec
adc
scas
outsl
sahf
insl
movb
jb
mov
mov
cwtl
in
push
cmp
add
lahf
push
cmp
xorb
jbe
push
std
jl
jl
jno
adc
mov
dec
mov
push
out
fcoml
mov
cld
cmpsl
int3
adc
call
mov
cmp
pop
adc
iret
pop
mov
xchg
dec
ljmp
in
dec
aad
lea
mov
mov
sar
mov
icebp
leave
ja
loopne
dec
cld
dec
and
adc
fsubl
cs
jecxz
pusha
out
nop
cwtl
dec
lods
out
xchg
popa
or
mov
mov
push
sbb
xchg
adc
add
and
and
jle
pop
fisubl
cltd
cmp
mov
and
cwtl
fbld
xlat
lea
mov
push
ffree
dec
mov
add
andb
and
add
imul
arpl
push
imull
outsl
push
roll
add
or
cmc
sbb
mov
mov
outsl
lahf
xchg
adc
dec
sub
lds
inc
cmpsb
sbb
out
test
cmp
lock
sbb
sub
push
fcompl
ljmp
xchg
adc
xor
adc
xor
and
lret
cmp
jae
out
adc
fists
ret
jge
mov
movmskps
ljmp
test
mov
insb
out
rcll
imul
xchg
jg
aas
add
or
or
cld
mov
and
jmp
mov
stc
fstl
lahf
sub
push
push
rorl
sub
xchg
nop
adc
adc
sbb
sub
repz
pop
stos
in
adc
sahf
dec
inc
add
insl
popa
loopne
dec
movsb
jnp
idivb
dec
push
out
jmp
pop
and
lods
sub
push
pop
stc
jg
push
in
xor
push
cwtl
add
mov
pop
inc
inc
stos
sbb
pusha
mov
push
andl
je
mov
shll
cwtl
fwait
cmpsl
xchg
xlat
pop
nop
stc
in
xor
jmp
push
mov
stos
mov
hlt
imul
insl
ja
scas
or
arpl
rcrb
sub
aaa
push
test
shrb
mov
out
adc
mov
arpl
push
in
test
stos
jns
stos
lock
je
leave
pushl
addr16
xlat
rorl
or
xchg
dec
lcallw
cmc
mov
in
lea
dec
negb
pop
loope
mov
fwait
cltd
leave
mov
sbb
mov
pop
mov
loopne
mov
out
inc
mov
dec
push
jl
and
mov
jae
dec
xor
xor
inc
dec
in
sub
jo
stos
xchg
add
into
jbe
fwait
jo
xchg
fdivrs
movsb
in
hlt
mov
faddl
xchg
mov
sahf
outsl
lret
sub
dec
push
negb
jns
lret
decl
into
sahf
stc
inc
popa
xor
mov
sahf
and
jg
test
mov
pushf
arpl
sub
addl
test
and
aaa
adc
rcrl
pop
inc
pop
test
iret
mov
sub
sbb
mov
jo
cld
xor
xchg
xlat
mov
jnp
adc
int
adc
mov
push
int3
cmc
loop
mov
fucomp
lret
push
xor
cmc
lret
pop
dec
int
out
mov
fldl
lods
cmc
lds
in
xchg
ja
or
jns
sti
fisubrs
xor
mov
or
push
add
jbe
xchg
lods
leave
jns
push
sbb
jnp
scas
adc
push
imul
test
ret
fldl2e
and
add
and
out
xor
pop
push
inc
dec
xchg
fisttpl
jge
test
add
lods
xchg
jnp
cli
dec
aaa
push
test
popa
xor
xchg
adc
xchg
or
mov
nop
orl
cmp
mov
and
sub
jp
adc
jg
xor
addr16
sub
cmp
int3
dec
shlb
lcall
aaa
das
push
dec
into
and
mov
xchg
cli
scas
out
hlt
rcll
outsl
push
or
outsb
into
inc
out
sub
inc
stos
or
inc
dec
dec
imul
ja
sbb
shrb
rorl
call
ficompl
xor
or
shrb
mov
sub
sahf
lods
mov
and
int3
fwait
and
pushf
aaa
cmp
fimuls
fnsave
icebp
rcrl
out
sub
insb
or
aas
es
pop
lods
add
int
fildll
push
lea
sahf
int
push
lods
in
add
fbstp
dec
imul
inc
sbbl
sbb
nop
xchg
fmull
scas
divl
stos
xchg
in
and
push
shrb
adc
les
add
lret
ds
and
lahf
inc
cmc
jle
sub
dec
loop
aad
sti
push
push
mov
in
or
xchg
testl
pushf
push
push
jmp
jns
repnz
popa
mov
out
mov
scas
pop
inc
xchg
daa
cld
gs
xor
enter
out
or
adc
pop
cltd
inc
ret
scas
dec
inc
lea
xchg
punpckhdq
jb
icebp
sbb
ljmp
shl
nop
mov
psubd
or
or
sbb
mov
sub
mov
mov
xor
sbb
push
pop
sbb
or
fscale
push
imul
je
rolb
jge
xor
and
icebp
test
das
pushf
dec
lods
xor
add
cmp
cmp
cmp
inc
outsb
add
iret
call
jae
insl
adc
adc
mov
pop
xor
fsubl
cli
pop
aaa
xor
pop
jnp
ja
mov
push
out
dec
add
arpl
mov
test
int3
dec
orb
sbb
or
xor
xor
imul
hlt
dec
mov
jb
push
rol
ret
ljmp
jmp
dec
or
jne
jne
enter
repz
out
call
push
sbb
sahf
in
mov
std
rcll
add
pop
in
enter
mov
sub
bound
adc
jo
mov
loop
jae
push
insb
aam
push
into
repz
fdivp
dec
stc
daa
xor
es
repz
mov
cwtl
mov
mov
fistl
filds
test
ret
xchg
out
xchg
mov
addr16
cs
pop
sbb
cwtl
ss
call
jne
cmp
hlt
sub
ret
aaa
fwait
xor
mov
push
fisubs
loop
xchg
out
ljmp
cmp
pop
pop
shrb
mov
shlb
scas
int3
pop
sub
add
xchg
jmp
in
push
cmpsb
ret
scas
push
imul
loop
and
adc
push
shrl
xchg
clc
xor
mov
pop
push
ljmp
sub
or
xchg
es
ja
sub
pop
outsl
xchg
or
sbb
aad
and
xchg
mov
dec
sbb
add
xlat
sbb
cld
and
mov
xor
lret
pop
inc
cli
stos
jmp
popf
subb
jg
xchg
cmpsl
icebp
sub
add
mov
jae
adc
scas
sbb
inc
push
push
movsl
bound
mov
sub
fs
fwait
mov
pushf
adcb
mov
inc
jnp
add
add
dec
fstl
popa
in
popf
popf
pop
mov
arpl
jns
mov
or
jno
insb
loopne
es
aad
sbb
fwait
xchg
add
xchg
inc
lods
fsubr
mov
mov
pop
pusha
xchg
aam
and
mov
cmpsb
sbb
insl
cmp
add
xchg
push
adc
jmp
cmp
push
and
repz
mov
lret
into
cltd
adc
call
shr
adc
ljmp
dec
sub
andl
add
jl
jne
jge
add
xor
cmp
mov
xchg
fisubrs
loope
sbb
add
imul
mov
orl
jo
xor
cmp
jae
inc
sbb
ljmp
fcomps
movlhps
push
stos
insb
add
sub
pop
loope
jbe
mov
scas
jne
or
mov
hlt
mov
mov
pop
fcomp
sbbb
xchg
nop
movsl
xchg
imul
push
aaa
in
sbb
mov
and
and
sub
insb
push
cmp
fadd
inc
pop
mov
rcrb
repnz
lock
in
pop
and
fsubs
aam
ja
cmp
fmull
pop
pop
lods
imulb
and
pop
mov
and
mov
jnp
sarl
shlb
adc
sti
add
mov
mov
mov
pop
add
or
rorb
or
inc
mov
fbld
jnp
mov
or
ret
add
mov
and
mov
mov
mov
xor
inc
movsb
or
stos
aaa
or
rclb
mov
lcall
inc
in
lds
repnz
ret
ljmp
in
and
inc
pop
lcall
inc
out
dec
rclb
add
lea
lret
mov
or
test
inc
or
pop
loope
addr16
cli
inc
data16
dec
mov
in
add
mov
mov
cmp
bound
sbb
adc
mov
dec
out
sbb
pop
call
mov
pop
jg
shl
cld
mov
addr16
aas
sbb
mov
jnp
pop
mov
adc
repz
enter
std
mov
ret
movsb
mov
xchg
outsl
xchg
and
and
fwait
dec
clc
and
bound
xchg
mov
orl
lret
subl
ds
adc
arpl
into
add
mov
or
mov
adc
or
es
insl
sahf
fstpt
sub
dec
sbb
push
jno
pop
xchg
pushf
lret
xor
xor
aas
sbb
filds
fcmovnb
dec
scas
mov
push
fwait
mov
mov
xor
push
pop
enter
cmp
repnz
cmp
and
and
sbb
push
pushf
pusha
jno
add
out
incl
icebp
lods
pop
cmpsb
mov
imul
dec
and
dec
cs
ja
xor
js
jle
mov
xchg
dec
lahf
cs
or
push
and
inc
int3
xchg
cmp
mov
xchg
or
or
add
adc
xor
sbb
jb
xchg
sahf
ljmp
sbb
arpl
inc
mov
dec
and
aad
mov
cld
or
add
jecxz
imull
bound
fildl
mov
cmp
lcall
pop
push
inc
mov
add
and
iret
mov
loop
or
push
mov
sbb
mov
daa
lods
ds
aaa
jl
test
cli
je
nop
sub
mov
das
cmpl
mov
jmp
data16
in
out
sti
ss
cwtl
lea
push
mov
daa
loope
cwtl
push
movsl
xchg
and
repz
lret
push
jb
push
xor
out
mov
test
fadd
jecxz
xchg
xchg
xor
sbb
lods
ds
adc
les
sbb
test
hlt
pusha
or
jecxz
fwait
push
sub
push
sbb
jmp
xor
loop
jno
xor
sub
sti
pop
jecxz
jge
test
push
in
js
or
mov
or
rol
je
fistpll
orl
aam
dec
inc
inc
hlt
mov
mov
cltd
hlt
sbb
push
or
mov
pop
lahf
push
loopne
mov
mov
getsec
les
in
scas
imul
mov
cmpsl
cwtl
cmpsb
stos
jns
mov
jne
sbb
mov
push
mov
lret
mov
scas
fisubs
jb
outsb
cmpsl
pop
das
popa
jge
push
adc
pushf
adc
lret
out
push
popl
xchg
push
jmp
enter
inc
arpl
cmp
adc
loopne
mov
pop
inc
cld
jecxz
xor
mov
mov
pusha
and
into
dec
mov
push
rcrl
inc
fimull
xchg
mov
dec
push
popf
cltd
cmp
shl
inc
and
movsbl
ja
lods
insl
adcl
fs
push
adc
cmpsb
stc
jle
mov
outsl
pop
mov
cmp
repz
popf
bound
or
enter
and
inc
jl
enter
add
or
enter
outsb
mov
insl
mov
movsb
imul
and
aad
lods
adc
mov
data16
xchg
stos
divb
bound
xorb
orl
jmp
mov
sbb
pop
xor
pop
cmpsl
inc
ljmp
mov
add
fnstsw
push
and
xor
push
arpl
stc
cmpsb
test
je
imul
xchg
pusha
mov
push
inc
pop
js
push
xor
fcoml
je
fbld
leave
push
bound
jns
lea
aad
and
push
push
adc
arpl
cmp
jno
jecxz
addr16
bound
dec
data16
jl
loopne
bnd
mov
aaa
sti
mov
inc
mov
inc
rorb
rorl
lcall
orl
inc
jns
cs
enter
push
push
cli
xchg
pop
push
aam
movsb
fs
push
add
sub
push
aad
lahf
fst
adc
xlat
testl
push
aam
mov
mov
cmc
test
sar
in
mov
add
sarb
outsb
mov
mov
sbb
movsb
push
push
enter
imul
xchg
jno,pt
ret
movl
cld
and
jp
mov
mov
push
inc
leave
xor
xor
js
mov
sbb
fmull
or
jg
mov
ds
aas
mov
mov
mov
js
popf
cmp
sbb
mov
adc
mov
in
fs
outsl
or
scas
dec
js
pop
pop
cli
pusha
jne
testb
loopne
bound
xor
mov
inc
jecxz
mov
test
mov
jnp
and
xchg
iret
adcb
xor
gs
adc
jecxz
mov
jne
fs
mov
jno
push
sbb
out
sbb
js
mov
jae
roll
aam
cld
or
jecxz
lock
or
xlat
dec
inc
inc
jbe
push
sbb
adc
cltd
stc
add
and
adc
ja
jmp
in
fs
pushf
repz
fdivr
fbld
push
xlat
into
ss
mov
faddp
sbb
aaa
filds
imul
fcoml
and
aad
ss
lods
mov
jl
push
frstor
jmp
mov
cmc
aas
in
popa
dec
xor
ret
adc
and
push
les
test
cmp
jge
daa
loope
mov
mov
dec
mov
cltd
fwait
mull
mov
pop
into
add
daa
movsl
xchg
roll
jno
test
and
fdivrl
mov
dec
jnp
mov
icebp
ret
cmp
ss
movsl
pop
movl
ss
int
inc
inc
push
jns
cmp
mov
addr16
in
loopne
xor
rol
xor
push
mov
pop
insb
sbb
mov
cmp
lock
ja
test
hlt
fsts
movsl
hlt
sub
and
out
xor
test
push
repz
or
repz
push
in
jp
xchg
mov
and
cmp
xchg
lret
aad
sub
lea
mov
mov
inc
shrb
repz
push
ret
sbb
lcall
xchg
ja
clc
or
adc
add
out
shrb
lods
int
jno
or
sbb
call
stos
aam
inc
push
cmpb
out
inc
jl
test
ret
jbe
fcmove
jecxz
pop
loopne
test
scas
cltd
int
int
cmpsb
sub
out
sbb
mov
fiadds
xor
daa
in
or
repz
in
imul
push
push
subb
push
sub
and
lret
out
dec
cmpsl
sahf
scas
aaa
mov
lods
xchg
push
mov
lock
pop
nop
cmpsb
jmp
in
mov
lods
scas
mov
lret
std
enter
in
pusha
cmc
add
jnp
jp
push
push
clc
mov
aas
ja
test
inc
cmpsl
into
adc
cmp
test
mov
sti
lds
repnz
sub
xchg
daa
pop
mov
mov
mov
xor
and
cmc
rcr
pop
sbb
orps
data16
rcr
popf
xor
sbb
ret
push
js
dec
mov
or
mov
jmp
sub
cltd
mov
and
mov
jl
jno
fst
int
sbbb
xchg
mov
in
fs
ss
and
cmp
mov
sbb
dec
lahf
addr16
pushf
xor
shlb
icebp
pop
jnp
out
repnz
sbb
xor
push
cmc
jecxz
mov
pushf
mov
cmpsb
and
xor
outsb
mov
mov
push
jg
mov
sar
insb
xorl
jle
xor
xchg
mov
ficoms
lahf
xchg
call
inc
sub
into
loopne
movhps
xchg
and
or
adc
inc
inc
ret
stc
repnz
addr16
or
mov
mov
lds
pop
insl
adc
loope
jecxz
loope
call
cltd
sub
adc
push
loop
and
lret
pop
xlat
sarl
imul
xchg
and
movsb
icebp
leave
shl
ja
jmp
nop
cmpsl
data16
sbb
push
movsb
sbbb
xor
lea
jno
es
add
ror
inc
add
mov
dec
sub
movsb
in
jle
hlt
adc
aaa
push
sbb
loopne
cmp
xor
jl
pushf
add
adc
fsubl
cmp
sbbl
bound
push
sti
mov
inc
arpl
repz
push
icebp
mov
add
movsb
fdivl
movb
dec
mov
xchg
mov
push
stos
loope
nop
mov
sbb
jecxz
loopne
das
cmp
test
popf
mov
imul
xchg
jmp
and
lahf
hlt
cmpsb
outsl
push
inc
lods
jo
mov
popf
pop
mov
and
pusha
dec
push
cmpl
lahf
jne
lods
icebp
sar
cmc
fcmovnbe
filds
push
sbb
and
hlt
jle
lahf
inc
push
push
jecxz
scas
shll
sbb
jno
lret
ret
and
push
push
testb
lds
jg
adc
cmpsl
inc
test
std
sbb
jecxz
cld
and
sbb
inc
add
mov
ret
sbb
cmp
aas
cltd
push
cli
add
aaa
or
mov
lds
stos
jo
into
or
xchg
cli
add
adc
add
lahf
adc
jge
mov
cmp
cmpsb
in
or
ljmp
mov
adc
ljmp
mov
mov
push
or
out
and
adc
sub
cmp
sub
and
repz
and
jno
adc
and
inc
push
mov
movsb
sbb
adc
aas
xchg
adc
repnz
adc
mov
xchg
in
popf
mov
dec
mov
cmp
xchg
dec
pop
pop
sbb
or
lret
cmp
cmc
outsb
popl
fsubrp
mov
fnstcw
test
in
dec
xor
mov
push
or
jmp
jns
sub
nop
xchg
dec
mov
mov
in
pusha
push
mov
dec
push
mov
push
xor
into
adc
adc
ljmp
pop
push
mov
stc
nop
mov
add
popa
jg
aas
ret
out
int3
push
outsl
jecxz
dec
mov
or
out
xchg
in
mov
add
outsl
xor
pop
mov
push
mov
xorb
jae
scas
dec
pop
and
sbb
mov
mov
xor
rcrl
mov
mov
sahf
push
pop
fdiv
shl
or
mov
sbb
xchg
add
add
or
adc
sbb
icebp
or
insl
add
jg
lds
testl
jg
mov
dec
add
cmpsl
stos
xchg
push
out
je
imul
call
fidivrs
neg
out
jl
push
rcll
mov
lahf
dec
mov
jns
frstor
divb
adc
movsl
repnz
rcrb
sbb
std
jg
popf
add
cmp
adc
adc
push
push
outsl
ss
xchg
in
ljmp
and
loop
in
or
or
test
mov
add
lret
lret
or
xor
in
pop
mov
popa
lock
jle
xchg
loop
shlb
movl
rorb
pop
mov
mov
fsubp
and
adc
adc
das
in
push
pop
mov
adc
jne
movsb
and
and
mov
je
orl
aaa
stc
mov
repnz
lahf
adc
or
jno
subl
call
or
icebp
dec
sti
cmp
stos
mov
sahf
aas
cmp
aad
out
pop
cli
adc
pop
ja
lret
lea
clc
pop
leave
cmp
sarb
call
popf
xor
jecxz
clc
cmpsl
jnp
mov
cmp
inc
mov
sub
inc
sbb
aaa
cwtl
cltd
mov
adc
and
xor
push
mov
pop
lods
mov
xor
add
fbstp
dec
ja
ja
enter
adc
sbb
cli
hlt
pop
ja
icebp
lea
adc
jo
test
rolb
nop
mov
pop
popa
push
jbe
mov
push
push
add
cmp
loop
mov
adc
in
ret
lea
mov
or
inc
dec
lcall
push
xor
ljmp
mov
dec
lock
andl
push
mov
sbb
lea
in
hlt
lret
roll
jne
pop
or
pop
ss
lahf
jb
jno
jb
rcrl
std
inc
ror
xchg
jnp
or
mov
jmp
jb
push
imulb
jns
xor
subl
inc
dec
pop
push
sub
int
js
mov
es
mov
ret
or
flds
insb
push
in
loop
aaa
xor
mov
lcall
lcall
pop
lds
test
call
cmp
outsl
fucomi
sbb
rol
cmp
dec
jecxz
sub
int
sbb
cwtl
or
add
popf
outsb
stc
pop
into
cwtl
in
push
fsubrs
jnp
fsubp
fmuls
icebp
insl
push
sbb
outsl
and
and
sahf
inc
movsl
mov
inc
add
in
or
jae
fisubl
mov
dec
pop
jp
pop
sbb
sub
in
jno
sub
inc
cmc
xchg
movsl
outsb
pop
mov
out
andb
sbb
movsb
repz
sub
out
jbe
inc
jnp
hlt
cmpl
mov
mov
idivb
mov
pop
nop
stos
ds
cli
int3
pop
fsub
movsb
cmp
sbbl
out
and
adc
cli
repz
jno
sahf
xchg
jbe
stos
insb
pop
sahf
mov
js
cmp
test
and
in
mov
and
jbe
scas
imul
dec
out
adc
std
push
clc
dec
or
jo
shlb
jge
aam
xor
xlat
xchg
jnp
mov
and
mov
mov
out
aad
js
ret
bound
icebp
dec
in
sub
lret
adc
hlt
push
sar
cmp
jb
mov
dec
stos
clc
mov
les
cmc
bound
sbb
or
outsb
push
jns
stc
cmpsb
fmul
dec
rorb
test
ja
dec
in
add
or
jecxz
jle
inc
mov
xor
and
adc
push
jae
cmc
sub
push
sub
fcomps
inc
lods
adc
push
inc
xchg
ljmp
mov
outsl
aam
movsb
xchg
mov
adc
in
mov
xor
pop
push
cmp
fistps
pusha
mov
jge
dec
push
movsl
dec
fnstenv
push
ret
cmp
add
ljmp
jbe
repnz
xchg
cmp
int
sub
pop
dec
je
or
push
jecxz
xor
mov
add
cmpsb
pop
divl
push
movsl
pop
cmp
xor
and
lret
mov
pop
pop
dec
std
aas
das
add
stos
and
add
or
push
xor
xlat
lahf
int
push
cs
jns
sub
mov
nop
adc
lock
test
inc
add
mov
dec
movsb
adc
xchg
xchg
jg
cld
pop
mov
sbb
mov
xchg
sub
xchg
mov
cltd
mov
sub
mov
gs
lds
loopne
jl
aaa
xor
stos
insb
cmpl
testb
ljmp
testb
and
inc
mov
xchg
sarb
gs
dec
mov
les
push
push
or
cmp
pop
bound
mov
test
pop
and
jnp
out
daa
in
and
int3
ljmp
add
out
or
cmp
ret
dec
movsl
inc
mov
movb
andb
mov
mov
addr16
shll
dec
mov
sarb
popa
push
int
jmp
push
cmp
addr16
or
sub
out
mov
push
xchg
push
outsl
cltd
add
xchg
xchg
test
stos
pop
xor
sub
mov
notb
cmp
xchg
jle
je
out
xor
sub
fwait
add
cmpl
cli
jmp
push
fwait
fwait
ret
xor
in
sub
inc
fdivs
mov
out
repnz
push
mov
rclb
jge
inc
leave
xor
mov
sub
xor
mov
out
fadds
pop
cmc
mov
vmread
jae
les
jbe
adc
rcrl
push
test
mov
cmc
lock
test
aam
jne
sub
int3
cs
jae
mov
loopne
int3
sub
stos
movsl
popf
adc
mov
scas
aam
cmp
lds
loope
adc
xchg
adc
loope
jo
add
fnstsw
mov
inc
cmp
cli
push
fs
xlat
mov
cmp
pop
xor
jecxz
sub
sub
in
jmp
fidivl
fildl
pusha
loopne
call
cmpsl
insl
leave
cld
loopne
cmpsb
cmpsb
jl
js
ds
out
mov
lcall
mov
fdivr
xor
movsl
enter
xor
cmpsb
and
xchg
mov
push
adc
sub
out
es
mov
sarl
iret
mov
mov
push
mov
outsb
repz
js
ljmp
mov
cmpsb
loop
xchg
mov
inc
ja
sub
stc
mov
pop
and
rcl
int3
movsl
cs
pop
pop
out
lock
mov
rcrl
mov
out
fdivs
pop
xor
lods
add
mov
sub
add
arpl
aad
add
push
out
cmp
mov
lcall
ret
push
stc
clc
xor
push
jle
xchg
inc
or
pop
push
cmp
notb
inc
and
stc
cmp
loop
push
pop
fwait
ljmp
sbb
dec
mov
outsb
jecxz
scas
dec
fdivr
sub
dec
shll
std
sahf
and
push
xchg
inc
and
mov
cli
bound
movsb
push
out
fwait
das
insb
inc
push
adc
out
das
out
xor
popa
sbb
js
pop
lret
or
inc
inc
mov
fisttpl
stos
mov
jp
pop
std
pop
mov
leave
push
push
jb
xchg
sub
sub
pop
jae
in
xchg
bound
inc
or
insb
cmp
push
sbb
test
aam
fwait
push
mov
pop
imul
pop
mov
inc
mov
pop
cmp
mov
mov
xchg
leave
lahf
cmp
lods
stos
pushf
inc
sub
in
xor
in
mov
and
enter
ss
add
in
ja
jl
mov
mov
mov
mov
push
stos
cltd
inc
outsb
into
ficoml
dec
aam
push
into
push
hlt
mov
push
fdivl
insl
sub
cmpsl
movsb
lods
ljmp
dec
sbb
pop
sbb
xchg
imull
mov
iret
and
xchg
test
push
lret
nop
stos
nop
cmp
popa
fldcw
xcrypt-cbc
cmpsl
push
fnstsw
sbb
add
jg
lods
ror
in
lret
lds
daa
mov
mov
mov
cmp
mov
iret
icebp
insb
and
das
inc
outsb
ror
aas
cmp
jbe
mov
test
lods
mov
push
dec
in
cmp
xor
ret
dec
fidivrs
mov
pop
cmp
pop
jnp
dec
lock
jns
in
add
das
mov
and
jo
hlt
adc
jg
fnstenv
and
dec
aad
call
mov
pop
sbb
movsl
shll
out
jl
mov
push
inc
and
ds
decl
clc
stos
jae
sub
push
mov
pop
jae
dec
int
scas
mov
cmp
shl
jmp
xor
jecxz
mov
and
mov
notb
cmp
mov
mov
cmp
out
pop
test
out
aad
adc
fmul
or
cmp
xchg
sbb
ja
nop
fistl
stos
mov
xor
adc
mov
dec
ss
mov
cmpsb
sub
test
pop
mov
xchg
ja
adc
xchg
mov
pop
and
aas
stc
test
call
scas
sti
mov
and
enter
jmp
sbb
es
pop
mov
es
xlat
stos
and
sub
aad
shrl
icebp
std
sbb
lea
imul
push
mov
aam
outsl
dec
imul
and
adc
mov
push
mov
or
cmp
rcrl
sbb
pop
mov
arpl
mov
lock
hlt
aad
out
sbb
xor
in
outsb
mov
aad
add
test
inc
or
jbe
push
fisubl
shrb
dec
sbb
lock
mov
icebp
cmpsl
sar
sbb
fcomip
cmpsl
inc
or
inc
movsl
add
or
imul
mov
push
inc
xchg
push
lods
std
mov
add
and
addr16
mov
and
mov
and
and
push
xchg
xor
mov
fmuls
scas
pop
add
cwtl
and
cmpsb
scas
hlt
out
xchg
or
lods
sub
jbe
int
pop
inc
bound
mov
inc
cli
xchg
testb
add
jno
and
mov
out
pop
xchg
aaa
xor
jne
push
test
inc
mov
out
aas
lret
cmp
sub
mov
push
pop
leave
data16
and
inc
rcl
cmc
leave
inc
das
enter
fdivrs
sbb
cli
sbb
xor
imul
cmp
cmp
aas
test
add
xchg
adc
pop
rorl
push
pop
sub
es
dec
push
jns
pushf
in
in
pop
out
xor
rorl
lcall
call
cli
stos
xchg
loop
inc
loop
xor
shll
popa
sub
je,pn
imul
imul
xor
and
iret
xchg
mov
mov
out
jbe
fbstp
sbb
in
dec
sub
add
shlb
lret
xchg
int3
in
sbb
add
push
in
inc
sti
test
and
fwait
mov
xchg
popf
in
aas
lods
lds
dec
mov
jo
fwait
andl
mov
lret
sarl
fsubs
popf
stc
xor
fdivrs
test
add
iret
xchg
popf
popa
dec
cmp
shrl
sub
adc
jb
xchg
or
dec
mov
btrl
cmp
mov
cltd
test
movsb
lahf
clc
pop
mov
test
xchg
inc
stos
and
int3
sub
sub
out
mov
aad
adc
jecxz
jp
lahf
sbb
or
mov
aam
pop
cmpsl
std
push
pop
add
nop
icebp
mov
mov
js
push
pop
push
je
push
daa
mov
icebp
imul
jp
jno
xor
addb
out
xor
sbb
outsl
notl
lret
mov
lods
or
call
out
pop
insl
out
popa
mov
pop
add
mov
ds
int3
xchg
ja
enter
sbb
out
mov
push
es
jnp
mov
ja
push
fimull
or
or
fcomps
sbb
mov
ds
stc
pop
les
daa
mov
cwtl
nop
inc
pop
pushf
and
out
mov
mov
insb
adc
add
mov
inc
in
sbb
sub
loopne
aaa
insl
mov
testb
aas
std
cmp
and
setge
or
xor
xchg
jne
pop
mov
mov
mov
mov
ror
push
sub
cmp
mov
xchg
jb
lahf
and
xor
js
xor
hlt
pop
dec
mov
repz
in
cmp
dec
add
outsb
sub
xor
cmpsb
js
pop
adc
cli
or
inc
mov
push
iret
sarl
shll
loop
call
xor
mov
pop
leave
xchg
loopne
addb
inc
adc
mov
sub
mov
movsb
or
mov
sbb
test
inc
popa
push
cmp
dec
adc
pusha
add
cmpsb
cmp
inc
pop
jge
test
jl
sub
push
push
sbb
and
int
repnz
or
jg
or
adc
ja
aad
xor
pop
cmp
mulb
int3
mov
xchg
lds
loop
lahf
lahf
pop
mov
repnz
and
ret
sub
mov
sub
xor
ds
sub
push
mov
gs
mov
adc
xor
jae
xor
or
push
xchg
sub
pop
jns
dec
adcl
orl
jge
sub
sub
mov
mov
xor
xchg
adc
sub
or
xor
insb
pop
xor
pop
shrb
ret
mov
push
stc
aaa
pop
outsb
es
scas
mov
outsb
jne
jbe
add
pop
inc
sub
cli
lret
iret
pop
add
jb
fs
jno
out
test
into
fmull
mov
mov
bound
inc
mov
jo
shlb
arpl
loop
test
movsb
push
and
sbb
xlat
orb
xchg
test
mov
mov
xor
adc
dec
psubq
mov
lds
dec
loopne
fbstp
xchg
and
std
dec
out
jb
notb
loop
dec
add
packsswb
in
jle
mov
imul
adc
push
enter
xor
cli
hlt
xchg
setns
pop
inc
or
pop
adc
rorb
mov
rcrl
mov
jge
inc
aam
lods
pop
mov
das
in
inc
enter
lods
sbb
adc
or
dec
and
and
nop
fdivrl
lds
mov
nop
rep
in
xchg
in
fisubrl
in
jno
fs
cmp
int
xchg
aad
js
fs
push
andb
mov
mov
test
inc
sub
jmp
test
cs
adc
insb
hlt
loopnew
xchg
mov
gs
call
and
cwtl
sub
std
iret
cwtl
mov
sub
outsb
das
test
stc
jno
pop
outsl
arpl
cld
es
jno
pop
mov
mov
out
testl
pushf
rcrb
cmp
mov
sub
mov
cmpsb
iret
jp
icebp
and
movsl
leave
sub
cmpsb
add
cmp
xchg
push
or
cmp
int3
jle
or
mov
cmpsb
jecxz
pop
sar
ds
push
ret
adc
hlt
aas
dec
sbb
dec
jno
and
out
mul
inc
jg
or
data16
sub
pop
add
mov
push
adc
xor
pop
enter
psubw
fstpt
loope
adc
data16
ret
mov
lahf
int
insl
cmp
fs
lret
gs
fwait
mov
push
in
mov
mov
inc
push
fs
stc
adc
mov
fisttpl
gs
lods
push
lock
mov
movsl
movsl
repnz
clc
inc
push
dec
xor
mov
dec
dec
or
adc
lds
leave
dec
std
jb
fdiv
inc
std
loope
cmpsl
int3
adc
push
fildll
das
jge
jns
decl
adc
stc
jg
inc
movsl
loop
rcrb
enter
sbb
in
nop
push
xlat
pop
test
mov
out
lods
sub
or
xchg
add
inc
pop
mov
xchg
in
sub
mov
insl
imul
icebp
fstl
mov
pop
stos
xor
xchg
int
adc
inc
jg
test
bound
mov
mov
sbb
adc
lods
jne
mov
push
insl
mov
inc
fiadds
add
or
and
jnp
aam
loope
mov
scas
test
mov
test
jg
jno
push
inc
out
jbe
pop
cmp
ljmp
mov
push
sub
roll
mov
cmp
pop
mov
mov
lret
jge
ffree
out
fisttps
sub
cmp
mov
les
pop
imul
cmp
leave
sub
xlat
xchg
xchg
inc
sub
stos
fstps
aad
outsl
insl
pop
or
loopne
sub
orl
sub
stc
pop
add
mov
js
aaa
loopne
and
push
sub
pop
dec
mov
pop
cmp
xorl
mov
dec
lods
mov
push
or
xchg
out
cmp
lret
mov
mov
cld
std
shl
in
cmpsb
push
jnp
xor
sub
pushf
xchg
aaa
data16
pop
jle
push
in
mov
das
cmp
jae
cmc
cmp
inc
call
push
jb
or
lea
call
arpl
cmpsl
adc
jnp
push
adc
cltd
push
push
fwait
push
pop
pushf
popa
lahf
jo
xor
mov
add
fdivl
outsb
ficompl
cmp
dec
and
xchg
ss
cs
dec
or
fnsave
aad
mov
repnz
dec
mov
jo
bnd
inc
jge
cwtl
mov
jno
sub
jg
int3
stc
jp
fwait
push
sarb
push
dec
mov
scas
push
shlb
cwtl
shr
sti
stos
idivl
movsb
in
or
aas
push
sub
addb
ljmp
jp
lods
or
lret
mov
imul
movsb
inc
and
mulb
shr
sbb
lret
jmp
push
mov
xor
int
fimuls
mov
out
cld
fdivl
and
pop
ds
aad
push
frndint
or
bound
cmp
push
fists
and
push
push
push
and
push
cmpsb
fbstp
stos
sahf
sbb
insl
mov
outsl
cmp
pop
add
idivl
call
jo
movsb
les
push
out
pop
xor
fistpl
popa
adc
jno
push
ds
pushf
sub
sbb
insb
or
mov
lock
fidivl
xchg
arpl
push
les
in
mov
aad
pop
add
rorl
mov
scas
out
inc
xchg
rol
or
push
push
bound
mov
test
out
mov
jb
js
mov
push
pop
pushf
popf
xlat
leave
pop
sub
push
stc
or
imul
js
fisttpll
ja
adc
pop
aam
dec
out
arpl
ds
mov
push
add
or
testb
mov
clc
jmp
call
pop
push
lods
mov
sarl
pop
cmpsb
lds
jl
call
sti
push
sti
mov
ja
divb
stc
push
ljmp
pop
pushf
fucom
and
mov
jne
mov
insb
xlat
and
icebp
mov
lea
movsl
pop
movsl
mov
fiaddl
nop
lods
sub
dec
lahf
mov
loope
into
out
mov
push
push
cmc
and
imul
out
stc
stos
out
cmpsl
mov
jb
pop
icebp
adc
fdivl
cmp
mov
cmp
xchg
mov
inc
push
push
sarb
add
add
lock
int3
aam
pop
dec
inc
mov
mov
and
test
lret
sub
scas
shlb
iret
mov
cli
inc
mul
dec
mov
or
adc
add
fimuls
std
stos
enter
mov
push
push
inc
stos
outsl
sbb
push
movsb
cmp
mov
pushf
or
or
test
jecxz
push
push
std
inc
inc
cs
xchg
fcom
ljmp
cmpsl
aas
jno
scas
or
nop
push
jo
add
inc
mov
or
test
ljmp
inc
mov
std
cmc
sub
mov
mov
sti
jnp
dec
cmp
sub
dec
and
mov
imul
mov
sarb
cld
scas
stos
push
repnz
add
fiadds
arpl
das
pop
adcb
pop
cmp
fdivrp
xchg
jp
pop
jecxz
push
push
ljmp
jge
sbb
pop
test
adc
push
in
out
leave
push
xor
push
pop
xchg
out
out
add
push
push
adc
inc
aad
xchg
lods
mov
cmp
addl
loop
sbb
data16
insl
cmp
sti
push
jb
sub
ja
inc
in
xchg
je
pop
cmp
cmp
adc
cmpsb
sbb
lods
push
lock
jle
mov
pop
aad
lahf
or
js
lock
jle
out
js
std
xchg
dec
add
pop
sub
xchg
xlat
adc
insb
jbe
sahf
fidivrs
add
lds
lods
out
adc
pop
aam
mov
je
cmp
subb
int3
push
into
scas
mov
rcl
pop
xchg
push
inc
lahf
mov
cld
jle
stos
jecxz
jo
xchg
jbe
cmp
test
push
jns
in
in
popa
or
mov
fisttpl
dec
dec
dec
dec
jbe
outsb
hlt
ds
and
arpl
stos
insb
scas
int3
and
inc
xlat
les
xchg
mov
xor
jnp
mov
add
icebp
nop
mov
ds
inc
xorl
out
fcoml
std
adc
icebp
insb
iret
sbb
mov
cmp
or
hlt
clc
push
dec
and
add
mov
into
pop
stos
sahf
inc
pop
adc
jb
sub
pop
setns
aas
arpl
jae
pusha
jb
cltd
sbb
sub
sarb
jmp
sbb
mov
and
js
sub
add
cmpsl
loopne
jp
add
shlb
xchg
aam
insl
out
leave
pop
mov
enter
sub
or
out
fwait
jg
fmuls
pusha
inc
addl
dec
xor
add
cmpsl
pop
cmp
pop
mov
adc
and
adc
add
add
stc
sub
sti
outsb
cmpsl
sub
lcall
lret
mov
das
or
mov
jge
in
add
ficomps
mov
fisubl
mov
mov
bound
jl
jbe
andl
cmp
or
or
ljmp
dec
decb
sbbb
push
jmp
rcrb
mov
icebp
cld
jae
adc
adcb
lds
je
xchg
inc
mov
mov
or
adc
inc
clc
aam
fisttpl
xchg
aas
mov
cvtps2pd
cmpsb
cmc
lods
pop
icebp
jl
ljmp
pop
fildl
loop
add
adc
lret
in
mov
jle
adc
pop
or
into
push
add
or
std
inc
jo
mov
inc
push
mov
es
int3
pop
scas
test
inc
push
xor
and
sbb
movsb
sub
push
jp
xor
mov
stos
dec
jp
int
mov
xchg
or
int
mov
dec
arpl
add
stos
sub
add
cld
sbb
imul
stos
bound
lods
xchg
dec
xor
mov
pushf
jb
sub
mov
or
push
mov
fstps
cmpsl
mov
mov
xor
lret
mov
loope
lds
aaa
stc
fmuls
adc
dec
mov
jecxz
mov
ss
fst
mulb
andl
add
icebp
cmp
mov
xor
addr16
popl
in
cwtl
aam
mov
xlat
push
ret
lahf
in
mov
arpl
fimull
test
mov
out
push
frndint
pushl
pop
pop
scas
push
add
dec
repnz
icebp
jecxz
add
enter
nop
enter
xchg
sahf
arpl
sub
pop
and
out
xchg
lods
adc
movl
sbb
hlt
das
pop
xchg
lcall
scas
and
loopne
inc
sub
jnp
outsb
inc
sbb
in
in
push
shlb
fistpl
stos
repz
fwait
lods
cmpsl
sbb
daa
xchg
lock
dec
lahf
jbe
ds
mov
pusha
cmp
sarb
push
inc
clc
stos
testl
mov
jle
out
mov
mov
out
add
adcb
sbb
xchg
sbb
xor
outsb
fildl
mov
fstps
mov
sahf
jb
sarb
pop
ds
movsl
dec
out
insl
xor
jle
sub
nop
ret
mov
push
dec
and
pushf
fimuls
fisubs
jl
xchg
jecxz
mov
sbbl
gs
leave
cmp
leave
loope
adc
push
aam
xchg
mov
xchg
pop
lret
jp
inc
test
or
sbb
jo,pn
ja
scas
jmp
loopne
es
lods
inc
mov
sub
jnp
jp
mov
mov
pop
pop
nop
movsb
rorb
jnp
sub
dec
push
mov
sub
imul
scas
push
cmc
and
push
cli
and
hlt
xchg
loope
fstps
mov
insb
movsl
adc
pop
sub
cmpsb
or
cmc
mov
inc
mov
rorl
sub
loopne
cmp
testb
lods
push
por
cmp
push
mov
adcb
sbb
xchg
pop
sbb
xlat
and
dec
push
pop
xchg
dec
into
in
daa
jae
movsb
clc
cmpsl
mov
cmp
cwtl
and
add
or
inc
insl
test
mov
push
leave
push
cmpsl
gs
or
rolb
dec
mov
xor
adc
cmc
inc
jecxz
push
adc
push
js
adc
mov
bound
mov
inc
adc
andb
rdpmc
jl
shl
cld
pusha
outsl
and
or
pop
repnz
dec
adc
mov
mov
mov
sbb
ljmp
outsb
inc
xchg
cmpsl
loopne
mov
push
sbb
repnz
sub
sub
test
daa
into
inc
jecxz
and
loopne
gs
mov
test
xor
nop
add
pop
inc
orb
inc
xchg
add
in
dec
mov
mov
stos
xchg
jns
neg
xchg
in
loop
adc
pop
hlt
push
xchg
cmp
inc
sub
loop
pop
sub
ja
pop
mov
shl
xchg
loopne
addb
mov
jecxz
jg
adc
into
arpl
rcrl
mov
out
gs
mov
xor
mov
ja
lods
fsubrl
pushf
xchg
dec
insl
aam
pop
fxch
in
ret
inc
clc
cmp
jae
sub
jne
dec
js
movsb
inc
fs
jmp
cld
stc
adc
fcom
jns
cmp
test
xor
mov
sbb
fnsave
cmp
xor
push
xor
pop
dec
pushf
jno
sar
pop
sbbl
je
jecxz
cltd
ljmp
jne
jnp
mov
cld
ss
cmp
cmpsb
sub
ljmp
inc
ss
push
sbb
push
fisttps
cmp
enter
mov
cmpsb
adc
insl
sbb
jne
push
int
mov
stos
je
jmp
in
cmp
push
and
xor
ret
cmpl
add
xor
jno
add
inc
jge
xor
jo
int3
push
mov
xor
mov
scas
mov
es
pop
rolb
dec
cli
aaa
rcll
popa
pop
sti
lret
test
jl
mov
adc
pushf
insl
in
outsl
add
out
loope
xlat
fwait
and
and
dec
movsb
into
shlb
fwait
mov
sub
jge
adc
pop
mov
movsb
outsb
push
sub
pop
fwait
inc
fistpll
subb
push
out
repz
test
sub
jp
fwait
outsb
mov
lods
push
fidivrl
cwtl
imul
dec
sbb
shrb
jge
les
cmpsb
mov
push
fs
sub
mov
loop
out
sarl
add
jg
cld
and
loopne
jl
aaa
pop
rol
jl
test
push
dec
loope
push
mov
or
xchg
adc
sbb
cmp
push
pop
pop
mov
xor
dec
cltd
les
test
inc
imul
ss
dec
imul
jl
bound
and
inc
mov
aaa
pop
sbb
or
inc
push
adc
jle
jne
mov
or
test
outsb
out
rcrb
insb
movsb
filds
data16
fiaddl
dec
sub
cmpsb
push
mov
pop
incl
adc
inc
imul
ficomps
inc
xor
add
stos
or
xchg
and
loope
cmp
hlt
loope,pn
sub
adc
xorb
lcall
dec
jge
out
je
cmp
or
pop
inc
aam
inc
mov
jns
repz
into
repnz
or
xchg
jne
or
push
push
jbe
aam
cs
jmp
outsl
rcrl
rolb
sbb
in
push
lret
andb
scas
push
pop
adc
gs
fldcw
xlat
cmpsb
mov
dec
lret
mov
sub
fnstsw
movsl
lock
adc
stos
sbb
mov
mov
inc
jo
and
mov
xchg
into
mov
mov
cwtl
cld
xchg
fsubrl
ret
fs
xchg
xor
in
xor
mov
cmpsb
mov
imul
daa
push
add
mov
movsl
pop
insb
jb
jmp
lea
movsb
in
pop
dec
stos
add
insb
subl
jbe
insl
imul
lret
loop
mov
dec
loop
cwtl
inc
leave
lcall
mov
push
jo
pop
xor
out
insb
sub
jl
mov
data16
fs
and
popl
cmp
jb
loop
bound
enter
sbb
rcr
or
jb
adc
ja
push
stc
ljmp
jle
pop
pop
inc
and
xchg
pop
out
loop
push
iret
jnp
sub
lea
mov
mov
fstpl
sarb
xorl
mov
sub
out
mov
push
mov
fucomi
jns
in
fsub
repnz
sarl
push
and
cli
jnp
in
xchg
dec
lods
mov
jbe
ret
aad
je
adcl
out
mov
mov
inc
or
cltd
pop
test
or
xor
sbb
jo
mov
mov
lret
fs
mov
xor
cmp
outsb
push
and
enter
mov
fwait
lea
or
popf
and
jp
or
xchg
mov
sbb
subl
lret
jmp
test
ret
nop
add
dec
testl
sub
xor
xchg
sbb
test
jne
mov
sbb
scas
mov
adc
jmp
js
shl
fisubrl
aaa
push
mov
dec
mov
dec
sbb
mov
imul
mov
mov
sbb
ret
mov
cmpsb
push
xchg
ret
sti
mov
and
jmp
cmp
pop
ficoml
jle
mov
sub
dec
cmpsb
cmp
repz
add
mov
jbe
cmp
push
into
or
sbb
push
sub
popf
push
fisttpl
jbe
pusha
xchg
out
sbbb
push
sbb
jge
ret
pop
lods
das
add
ja
dec
out
xchg
sarb
xchg
mov
dec
add
ds
cmp
inc
mov
or
adc
sub
pushf
stos
idivb
lahf
mov
mov
dec
stc
mov
add
arpl
and
icebp
lock
lcall
mov
in
xchg
icebp
push
jno
mov
imul
push
sti
in
cwtl
push
call
sub
arpl
mov
jno
dec
repz
pop
push
mov
incl
int3
arpl
repnz
jns
xchg
jg
or
sbb
sub
dec
adc
repnz
icebp
ret
les
adc
je
je
mov
lock
test
sub
adc
mov
mov
cmpb
sub
into
dec
or
stos
repnz
and
or
je
or
pop
jno
lret
xchg
xor
idivl
dec
stos
out
lock
mov
jb
test
add
sub
out
jnp
iret
push
xorl
mov
es
js
pusha
pop
jge
jecxz
dec
mov
mov
lahf
enter
pop
stos
mov
stos
inc
sbb
das
mov
ficoms
xlat
fcoml
mov
cli
push
mov
pop
push
dec
mov
idiv
enter
cmc
mov
push
bound
pop
test
mov
arpl
stos
add
cmc
pop
xor
insb
jg
pushf
inc
lret
imul
std
ret
rorl
sub
xchg
insl
sbb
mov
cmp
sahf
mov
aam
mov
test
insb
je
ss
mov
push
stos
rsqrtps
or
ljmp
sbb
sub
pop
dec
loopne
add
pop
into
idivb
sub
adc
lret
add
sbb
inc
movsb
je
jecxz
std
cmpsl
cmp
adc
dec
xor
movsb
push
xor
ljmp
adc
loope
gs
add
loop
in
jp
or
nop
jno
cs
jle
in
fstl
mov
es
fnstenv
mov
decl
adc
cmpsb
mov
ds
aad
mov
xor
push
movsb
ret
imul
jecxz
mov
adc
scas
adc
jmp
arpl
jl
idivl
mov
stos
lods
je
cmpsl
xchg
jnp
mov
fistpll
int
or
cld
mov
lcall
push
fsubl
lods
jecxz
imull
pop
das
cmp
ds
adc
enter
incb
and
cmp
andb
mov
sub
xor
mov
jno
notl
jbe
ficoml
xchg
es
in
inc
and
mov
daa
jmp
lcall
mov
xchg
outsb
jb
cmp
push
je
adc
imul
imul
push
pushf
inc
cmp
xor
mov
mov
jb
jae
ror
mov
jb
jp
movsl
push
popf
xlat
loope
out
xchg
and
out
fnstsw
xor
cmpsl
adc
or
or
and
jnp
adc
jne
loop
sbb
or
dec
pop
jecxz
fldl
push
add
imul
or
lret
frstor
and
pop
xor
xchg
push
sahf
pushf
inc
outsl
jno
addr16
dec
mov
jl
jmp
iret
lea
xchg
lcall
aas
shl
in
or
call
fwait
pop
loop
dec
leave
lods
aaa
mov
jne
hlt
inc
mov
jnp
aas
adc
mov
fidivs
pop
sti
ja
mov
std
adc
fsubrp
xchg
sub
mov
push
sbb
jmp
insb
ret
pop
and
dec
roll
lods
sub
in
push
add
in
sbb
movsl
in
sahf
jl
cltd
sub
fnstenv
jecxz
sbb
cmc
into
push
sub
ret
inc
sbb
test
call
call
adc
in
pop
dec
adc
aad
xor
popa
pop
or
orl
inc
out
test
in
mov
or
inc
xor
fsts
mov
bound
lods
int3
xor
xor
dec
push
cli
mov
sub
outsb
mov
out
inc
fwait
mov
xchg
fs
enter
xor
and
in
loopne
jg
aas
add
adc
leave
imul
callw
stc
and
cmp
lds
xchg
lret
or
into
popf
pop
cwtl
lret
out
cmpsl
jb
ljmp
int
testb
aad
jle
jns
mov
mov
lods
mov
adc
into
sub
cmp
mov
pop
adc
sbb
addr16
jecxz
mov
xchg
es
sub
jp
xchg
sbb
pop
cwtl
insl
gs
mov
mov
and
xlat
movsl
rol
sbb
cmc
jmp
cs
jp
loope
jmp
mov
xlat
ret
js
mov
pop
int
sbb
inc
sub
inc
shll
pop
mov
loop
iret
xchg
xchg
fcmove
outsb
adc
xchg
mov
stos
aas
enter
and
ja
and
pop
shll
sbb
cld
push
cmp
mov
popa
push
or
sbb
adc
nop
std
rcrb
nop
xchg
stos
adcb
mov
fwait
lcall
push
and
xor
jns
repz
fs
mov
sub
int3
add
das
add
rolb
pop
ret
mov
push
pop
xor
int3
arpl
aas
mov
idivb
out
jnp
pop
mov
out
or
adc
ret
sbb
jmp
adc
mov
fsts
push
push
xchg
shrl
jbe
cmpsb
and
pop
push
lret
sbb
mov
rolb
fnstcw
test
insl
sarl
jne
dec
sahf
push
and
cmp
ljmp
jge
scas
or
push
cmpsb
and
xor
and
jne
sbb
call
ficoms
push
jg
pop
cltd
and
into
mov
outsl
or
repnz
insl
xchg
cltd
mov
jg
xor
mov
negl
mov
sub
push
inc
lahf
push
sarb
jmp
mov
push
inc
cld
dec
dec
pop
lds
cmpsl
and
push
pushf
icebp
shl
addr16
cmp
adc
mov
icebp
pop
aam
fisubl
xchg
cmp
push
cmp
pop
lds
push
adc
inc
insl
fwait
test
adc
adc
and
push
fs
dec
inc
je
mov
xchg
das
add
jp
lret
sub
jbe,pn
push
jne
pop
pusha
test
insb
enter
mov
repz
adc
ds
sbb
pushf
inc
and
sbb
sub
inc
pop
jae
xor
mov
cmp
mov
push
add
mov
stc
aaa
pop
jp
scas
repnz
in
sub
xchg
dec
or
fistps
stos
mov
pop
xchg
ss
sub
lds
xor
and
push
ror
fcmovnbe
mov
jnp
mov
out
repz
lahf
je
add
fadds
inc
and
icebp
mov
jl
clc
out
movsl
xor
inc
lahf
or
mov
add
ja
push
das
in
aad
mov
cmpsb
pop
adc
nop
dec
mov
enter
in
out
jecxz
xor
mov
fistps
stc
fscale
adc
add
mov
adc
mov
or
enter
push
pop
cmc
je
jne
mov
dec
or
or
dec
jg
scas
out
js
fidivrl
jmp
scas
cmp
in
cmp
adc
cld
jg
pop
add
fwait
pop
shrl
repz
nop
lea
in
fwait
and
sbb
fimull
inc
jo
mov
fnsave
decb
bound
js
xorb
lea
cli
xchg
pop
push
cmp
pushf
lods
sub
sub
mov
mov
test
sub
fsubrl
inc
pcmpeqb
mov
sti
or
repz
idivb
out
or
xor
in
xchg
loopne
mov
in
xor
inc
xchg
push
test
les
mov
jnp
sub
xor
sub
es
add
xchg
fsts
or
jae
repnz
cmc
leave
or
inc
sbb
test
std
mov
xlat
inc
movsl
jnp
int3
fs
bswap
popf
mov
enter
hlt
shrl
aaa
mov
cmp
ror
lcall
pop
repz
or
insl
je
cmp
inc
mov
shrl
and
icebp
mov
enter
rorl
ds
jmp
pop
cmpsl
xchg
mov
dec
mov
cmpsb
push
xchg
cmpsl
lret
loopne
cltd
pop
sbb
add
mov
faddl
mov
inc
cmpsl
test
cmpsb
mov
inc
dec
jge
jg
out
push
xor
cmp
mov
outsb
push
mov
lods
ret
das
fidivs
dec
fiadds
and
mov
adc
push
decb
cmp
addl
fmul
out
cmpsb
cli
push
arpl
out
mov
xlat
aam
push
cmp
jae
xlat
pop
push
leave
pushf
and
mov
sub
or
andb
push
aad
adc
icebp
fadd
cmp
imul
testl
gs
pop
pusha
aam
xor
jb
ljmp
and
fdivrs
push
fimuls
dec
sti
movb
mov
loop
int
mov
adc
mov
cmp
sahf
sub
into
dec
cld
lret
cld
setns
stos
insb
cmpl
mov
pop
stc
sbbl
sub
add
jge
mov
fcmove
mov
adc
clc
xlat
push
loope
fadds
into
scas
push
fsubrl
jae
dec
je
cli
clc
jmp
adc
jp
inc
outsl
pop
xor
sub
mov
cmpl
dec
lret
mov
cld
loope
xor
bound
test
mov
pop
or
fsubrs
loope
or
shl
lret
jg
and
arpl
push
add
sub
jp
mov
andb
mov
pop
loope
mov
adc
jecxz
fsts
imul
push
in
dec
idivl
mov
jecxz
mov
loopne
ficompl
test
xchg
xchg
les
loopne
jl
jp
movsl
dec
inc
mov
dec
sbb
sahf
sub
loope
repnz
lods
sbb
popa
lods
into
subl
sbb
mov
xor
ss
out
mov
out
push
xchg
mov
loope
pop
nop
mov
lret
xor
sbb
out
dec
sbb
inc
inc
cmpsl
cwtl
notl
adc
or
pop
pop
mov
cwtl
or
shlb
push
imul
lods
push
outsl
lea
sbb
xor
push
inc
cltd
shl
movsb
paddusw
lret
dec
iret
push
mov
loope
xchg
insl
outsl
test
adc
insl
inc
dec
out
scas
xchg
icebp
aam
pop
pop
js
mov
mov
insb
and
in
and
cmp
jp
inc
in
sbb
jbe
cmp
mov
cmp
clc
outsl
sahf
or
fsubrp
mov
lahf
push
int
xchg
fcmove
fdiv
and
in
sub
jae
and
xchg
movsl
cmp
fadd
fnstenv
stc
push
pmaxub
jb
or
outsl
xor
in
cmp
jo
push
ficoml
fiaddl
pop
pop
cld
aaa
jmp
cmp
jno
stos
cmp
pop
cmp
push
jle
mov
cltd
sbb
mov
inc
into
dec
jp
sbb
dec
popf
fadd
fadds
and
insb
adc
adc
mov
sti
outsb
mov
add
xor
jge
sub
dec
es
in
mov
pop
fists
dec
jp
push
rorl
push
pop
movsl
sbb
jl
test
cmp
pop
test
popf
jb
mov
cltd
inc
shll
adc
xchg
jne
add
out
or
repnz
int3
xchg
adc
or
cmp
pusha
pushf
sbb
out
fs
pop
mov
mov
pop
pop
mov
aas
mov
inc
push
ds
in
sbbb
sub
fwait
push
addr16
and
push
or
xchg
mov
insb
loopne
out
mov
dec
inc
mov
or
in
sbb
pop
sub
stos
ret
mov
mov
scas
mov
add
pop
jecxz
add
dec
mov
xchg
xchg
xchg
dec
std
adc
mov
mov
mov
inc
jae
imul
lahf
xchg
cmp
sub
lds
loope
loopne
xchg
or
push
fcmovnu
mov
into
sahf
gs
add
ds
inc
out
into
dec
ss
pop
and
leave
xchg
mov
inc
fistps
sbb
stos
sahf
and
stos
jbe
movsb
lods
and
je
frstor
push
frstor
xchg
cmc
xchg
mov
and
push
mov
shll
fistpl
into
dec
pop
jge
out
repz
sti
mov
adc
sbb
or
mov
daa
out
jo
stos
mov
aaa
orb
mov
jge
adc
je
andl
jmp
pop
das
inc
mov
xchg
mov
jbe
ja
push
mov
cmpsb
outsb
xor
nop
sub
add
ds
stc
mov
or
pop
incl
fidivl
idiv
les
lea
test
lods
cli
mov
dec
scas
fcompl
pop
scas
into
in
outsb
xchg
xchg
push
add
ret
hlt
psubb
sahf
sub
pushf
add
jge
es
xchg
cli
sar
inc
mov
repnz
lds
ficoml
inc
dec
mov
or
sti
in
ret
jge
xchg
lret
shll
sbb
cld
cli
xor
sub
bnd
das
push
in
dec
jmp
cmp
cmp
xor
rclb
je
jl
pop
sahf
je
out
mov
push
mov
xor
mov
jb
iret
xchg
jle
cmpsb
shrb
dec
stos
mov
dec
mov
ret
jns
das
aas
pop
mov
push
lret
adc
pop
fisubrl
divb
test
add
rorl
pop
sub
jno
das
gs
dec
je
das
push
inc
repnz
das
cmp
lret
mov
add
xchg
inc
and
or
lahf
leave
aad
dec
mov
mov
push
cmp
cs
fisubrs
jmp
inc
add
ss
pop
clc
movsl
add
dec
pop
loope
inc
inc
daa
shrl
cmc
daa
lahf
stos
cwtl
icebp
outsl
ret
mov
sbb
cmp
cltd
jnp
fbld
jae
bound
addr16
adc
or
cmp
cmp
repz
or
gs
xchg
int3
andb
pop
arpl
fdivrl
pop
sub
scas
push
xchg
dec
or
push
ss
dec
lret
mov
mov
jecxz
add
es
or
cli
int
jns
shl
inc
mov
test
movsl
xlat
rcll
cmc
hlt
fs
add
mov
adcl
std
ljmp
ficomps
dec
stc
mov
cld
mov
xor
out
add
int
orl
mov
mov
addr16
mov
repz
sbbl
sbb
fsubs
stos
adc
pand
jo
xchg
test
sbb
pinsrw
xor
pop
mov
sti
movb
loopne
sbb
push
mov
in
jo
mov
cmp
fldl
xchg
test
lret
xor
xor
pop
lea
in
pop
mov
add
movsb
xchg
nop
loopne
addb
adc
lods
sub
sbb
cwtl
pushl
mov
sbb
and
push
and
dec
ja
lahf
insl
pop
into
xor
cmp
call
out
rcrb
inc
repnz
in
shll
jle
xor
push
xchg
into
into
and
leave
mov
mov
jne
mov
imul
divb
fdivrs
aad
out
inc
insl
mov
mov
add
cmpl
clc
or
sbb
fcoml
scas
fs
sub
popf
mov
add
dec
mov
imull
stos
push
ss
mov
enter
jnp
fs
push
mov
mov
sub
inc
loop
cld
andl
loopne
repnz
sbb
repnz
mov
repz
dec
xchg
cmc
or
mov
inc
inc
inc
dec
test
mov
shll
xor
and
push
into
rcrl
jp
xchg
hlt
sbb
dec
sarl
lret
pop
lret
sbb
and
cmpsb
sbb
call
jmp
dec
dec
sti
mov
inc
test
jp
rcl
and
push
adc
push
sbb
lcall
scas
test
xchg
stc
inc
dec
popa
cmp
lods
sbb
rorb
pop
je
sub
mov
jb
fsub
mov
sbbl
fwait
lahf
cmp
incl
scas
jle
lret
cmp
pushf
es
je
jnp
or
xor
jbe
push
out
xchg
jg
and
cmp
add
lods
cltd
xchg
xchg
aam
or
dec
scas
dec
stos
incb
ja
pop
xchg
repnz
aad
mov
aam
inc
mov
stos
icebp
shl
loope
mov
lock
jns
sub
outsb
rcll
xchg
mov
sub
outsl
ljmp
fwait
push
iret
xchg
dec
repnz
adc
cltd
f2xm1
push
sbb
jecxz
jecxz
mov
mov
aaa
jle
popf
xor
or
lcall
and
cld
pop
mov
aas
inc
lret
dec
popf
inc
and
sub
ss
jns
mov
xor
and
arpl
fcmovne
test
adc
stos
xorb
lahf
cwtl
repnz
push
push
or
test
in
mov
lods
pop
fisttpll
ds
aad
and
ds
push
cld
sbb
sbb
icebp
xor
ljmp
pop
mov
sti
mov
mov
cmc
rorb
xchg
or
aas
adc
xchg
sub
xor
test
pop
arpl
sub
cmpsb
xor
or
and
and
lock
ja
lea
ljmp
les
shlb
insw
xchg
das
popf
clc
pop
xor
sub
test
sbb
repz
bound
sbb
sbb
jmp
push
cwtl
aam
adc
mov
mov
call
inc
dec
lds
pop
lret
aam
mov
insb
test
lcall
shrb
jl
iretw
adc
arpl
xchg
adc
loope
int3
cwtl
insb
dec
pop
in
cmp
addl
shlb
sbb
xchg
jb
stos
push
mull
dec
gs
dec
dec
push
data16
stos
xor
addr16
mov
iret
mov
fdivl
cmpsb
add
pop
cld
jg
ja
outsb
sbb
mov
call
int
add
mov
dec
es
pop
in
nop
test
rorb
out
pop
xor
xchg
imul
ret
notl
mov
loope
mov
ss
rcr
dec
call
into
add
addr16
mov
adc
inc
sub
insl
into
pop
push
fs
gs
xchg
mov
push
inc
push
adcb
add
lock
sbb
inc
jne
adc
add
sub
or
mov
jg
sub
mov
pop
jnp
mov
in
pop
adc
add
dec
pusha
jne
cmp
mov
mov
dec
pop
mov
aad
mov
movsl
outsb
push
pop
notb
adc
fdivrl
jb
notb
ja
mov
je
or
sbbl
sub
in
out
add
or
fistl
insb
sbb
adc
aam
inc
fld
lcall
out
test
push
test
adc
or
les
cmpsl
into
test
add
xlat
mov
adc
gs
dec
sbb
ret
dec
mov
mov
stos
sub
sbb
jp
sar
imul
andb
pusha
fs
cmpsb
or
rcll
mov
jmp
jp
cld
cmp
into
hlt
sbb
push
sbb
sbb
xor
call
mov
lcall
dec
xor
jae
ret
cmp
aas
imul
sahf
xchg
cld
lods
mov
adc
or
lock
add
push
decl
xchg
dec
or
push
pop
fwait
test
or
mov
hlt
dec
pop
cmc
call
push
test
es
push
mov
pcmpeqd
xor
xchg
push
mov
cmp
out
xchg
push
jb
xor
in
loop
or
cmp
and
push
in
and
sti
add
repnz
notb
mov
sbb
xor
mov
mov
push
mov
cmp
jecxz
or
in
enter
pusha
es
push
mov
push
lods
xchg
jle
aad
stc
fisttpl
pop
sbb
push
adc
mov
int
test
pop
insl
mov
in
sbb
scas
pop
inc
popa
jp
jge
sub
push
pop
jnp
mov
scas
dec
adc
mov
cmpsl
mov
out
rcll
mov
add
mov
jl
pop
rol
loop
sbb
lahf
xor
xor
and
sbb
dec
xchg
dec
pop
fcmovnu
mov
jmp
xchg
mov
and
in
cld
mov
mov
dec
dec
lods
pop
xchg
pop
repnz
mov
mov
add
jge
cmp
arpl
sbb
mov
mov
inc
xchg
dec
mov
int3
out
je
loopne
lock
sahf
ret
scas
mov
mov
cmpsl
sbb
int3
inc
push
out
pop
adc
jge
sbb
out
insb
mov
bound
icebp
mov
shl
in
enter
mov
stos
shll
ficompl
int3
cmp
mov
inc
cwtl
xchg
xor
addb
pusha
mov
cli
int
xor
jae
mov
inc
movsl
insl
aas
push
push
dec
test
adc
xchg
addb
xchg
dec
or
aam
test
push
inc
add
sbb
iret
fcoms
sub
mov
jmp
sbb
sbb
je
xchg
ret
nop
lea
mov
insl
adc
sbb
jp
and
cmpsb
xchg
push
mov
add
aam
outsb
push
pop
cwtl
pop
inc
icebp
daa
xchg
fnstsw
test
mov
mov
repnz
xor
jno
cmc
ljmp
ds
push
mov
adc
aas
mov
imul
loop
push
xor
mov
loope
jns
adc
movsl
hlt
mov
dec
jl
aad
pop
bound
movsb
jecxz
mov
push
jns
mov
into
adc
loope
jge
mov
loope
test
or
add
pop
xchg
mov
gs
gs
mov
clc
shll
mov
in
pushf
jb
scas
mov
adcl
jle
inc
gs
cmp
xchg
mov
add
insl
push
lret
xchg
mov
lock
xor
mov
stc
out
or
cltd
repnz
xlat
push
push
mov
and
mov
iret
or
push
sub
aam
mov
push
into
xchg
lods
sahf
nop
ret
mov
repnz
in
sub
imul
imul
mov
imul
call
or
or
ds
mov
fs
jae
hlt
fcompl
jle
sub
jbe
cmpsl
jo
sti
std
js
inc
outsl
xchg
insb
cmp
adc
mov
cmp
popl
outsl
xchg
cmp
cwtl
cmp
mov
sbb
test
fisttps
and
insl
mov
mov
negl
sbb
and
cmpsb
pop
xchg
out
shrb
add
je
mov
inc
cmpsl
pop
fwait
or
cs
xor
xor
xor
cmp
in
xchg
fwait
add
mov
sti
dec
aad
insl
pop
mov
fcmovnu
xor
fstps
xor
add
ret
fisubrs
push
dec
aad
arpl
mov
push
sarl
mov
xchg
adc
arpl
xor
mov
daa
loop
add
sub
out
adc
scas
fs
xchg
add
push
sahf
mov
push
jle
test
call
or
xchg
mov
mov
push
xor
mov
and
jns
mov
add
mov
in
xor
mov
repz
dec
das
mov
cli
and
sbb
push
sahf
stos
movsl
addl
push
sbb
xchg
insb
jmp
mov
and
mov
xor
xor
push
inc
and
out
sub
outsl
test
push
dec
loope
xor
mov
insl
pop
or
adc
les
mov
out
insb
gs
sub
xlat
sub
inc
dec
mov
push
add
loope
mov
arpl
clc
xchg
and
movsb
aam
mov
pop
jbe
test
mov
sahf
pop
lret
sbb
or
es
stos
push
adc
dec
ret
int
inc
inc
mov
cmc
jnp
push
enter
jecxz
fildll
dec
mov
jb
inc
pop
xlat
mov
aaa
dec
cmpsl
mov
and
addr16
dec
jo
cmp
jle
into
into
dec
and
out
test
add
fadds
mov
mov
rcr
fstps
push
into
dec
xchg
mul
leave
leave
add
add
and
sbb
in
arpl
sbb
test
push
adc
fsubl
mov
popf
push
les
insl
imul
stc
lret
xchg
shrl
push
inc
mov
pop
fldt
sbb
xchg
lds
adc
cmc
push
outsb
mov
jle
mov
je
or
sub
lcall
jmp
push
xor
push
and
inc
jno
jmp
and
dec
out
out
push
pop
push
xchg
sarb
outsb
icebp
mov
dec
sarb
push
pop
popa
xor
flds
mov
mov
pop
push
cwtl
or
lret
mov
leave
xchg
cmp
or
mov
or
adc
rcrl
inc
cmp
sbb
das
fs
fisttpll
xlat
pop
and
or
js
lret
out
addr16
xor
lock
mov
cs
pop
push
data16
nop
lahf
faddl
or
lock
and
mov
popa
je
xchg
xchg
dec
xchg
mov
push
sti
test
insl
subb
cltd
shrb
pop
xchg
hlt
jg
sar
adc
dec
hlt
in
cmc
fisttpll
mov
in
push
test
sbb
imul
loop
lods
push
push
arpl
sarl
mov
mov
and
cwtl
pop
icebp
add
insl
xchg
in
push
leave
cs
xchg
dec
pop
fs
repz
dec
sarl
lcall
sub
pop
out
rcrb
pop
sbb
test
jmp
gs
lcall
scas
jnp
dec
mov
lea
cmpl
dec
cwtl
mov
pop
andl
inc
imul
fdivrp
push
addr16
nop
daa
mov
lods
sub
push
mov
shrl
push
rorl
pop
xor
mov
jbe
test
sbb
sbb
pop
int3
in
push
mov
pop
adc
out
sti
sbb
leave
aad
xor
fsubl
mov
cmpsl
xchg
adc
cmpsb
dec
add
sbb
data16
lret
cmp
lods
pop
xor
cld
or
scas
cmc
push
inc
loope
sbb
push
mov
gs
push
fistl
stos
push
add
aaa
pop
push
insl
adc
mov
add
repz
fsub
fwait
xchg
cmp
pop
fwait
mov
sti
ds
xchg
jo
lods
orl
sbb
add
mov
mov
push
xor
and
and
sbb
es
lods
push
shlb
lret
cld
pusha
add
xchg
add
jg
push
fdivrl
push
xlat
ja
scas
and
insl
add
cmc
imul
xor
dec
sub
out
jg
icebp
jne
ss
mov
clc
xchg
jp
jecxz
mov
xchg
scas
movsb
jl
mov
inc
std
and
mov
mov
fnstenv
cmova
xlat
mov
test
inc
iret
xlat
cli
mov
data16
fs
rclb
int3
push
jne
inc
lret
cwtl
cmpsl
leave
or
inc
xor
mov
pop
jae
sbb
inc
cmp
jp
adc
testl
add
scas
loop
in
push
and
rcrb
repz
dec
xorb
dec
xchg
xchg
lods
ror
dec
add
push
mov
faddl
cmpsl
aaa
flds
xchg
xchg
lret
ret
add
jno
aad
test
mov
mov
pop
xchg
xchg
notl
stos
cld
iret
pop
or
ja
pop
fdivrs
je
movsl
ja
xor
inc
inc
sahf
test
movsb
dec
push
mov
mov
je
aad
sarl
push
es
and
or
mov
inc
inc
shl
popa
xor
xchg
adc
inc
and
movsb
mov
pop
push
fwait
lret
jmp
in
pop
xlat
ret
test
jecxz
popf
in
loope
sbb
mov
nop
cmp
pop
add
jmp
pushf
push
cmp
mov
cmp
jg
sub
gs
shrl
add
aam
fsubrp
lcall
clc
xchg
aam
xchg
cmpsb
fnstenv
and
xor
scas
lods
mov
sub
loope
sub
mov
adc
add
fwait
mov
inc
in
daa
xchg
adc
mov
scas
sti
out
mov
lds
fwait
or
sub
and
sbb
test
mov
mov
sti
sub
mov
jbe
movsl
pop
out
outsl
sbb
mov
pop
xchg
xor
shl
xor
das
jmp
mov
es
or
aam
out
je
pop
int3
inc
dec
push
cs
stos
jbe
cltd
mov
std
daa
sbb
and
dec
sub
bound
pop
xchg
add
in
mov
xor
pop
cmpsl
mov
or
and
gs
xchg
adc
ds
jp
dec
xor
daa
sub
jp
fmul
enter
popf
into
std
pushl
dec
sub
add
int
push
jmp
ret
add
ror
xlat
xor
pop
or
icebp
push
sarl
jge
push
dec
aaa
add
insl
adc
inc
xorl
sbb
jp
enter
push
inc
xor
sub
mov
and
cmp
inc
into
ss
xlat
int
in
outsl
mov
inc
push
nop
das
sbb
aas
mov
frstor
add
bsr
push
xlat
es
sarb
inc
loopne
inc
add
test
cwtl
add
mov
mov
imul
adc
les
fldt
dec
pushf
das
pop
ret
push
into
xchg
dec
mov
data16
xchg
adc
push
jnp
sbb
shrb
cmp
out
push
sub
andl
push
jge
aas
sub
lcall
ljmp
js
test
inc
cmp
push
imul
mov
xchg
pop
cltd
clc
dec
aas
dec
jg
add
sahf
push
arpl
cmp
movsl
add
cs
sahf
xchg
xor
xchg
xchg
loope
out
aaa
loope
sbb
xor
enter
inc
adc
push
leave
cld
fdivl
or
mov
ret
testb
repz
jl
mov
int3
add
leave
dec
out
leave
int3
rcr
es
sub
push
adc
xchg
inc
jbe
sbb
int3
add
xchg
insb
pop
xchg
or
mov
mov
jle
cmp
popa
jb
sub
fmuls
hlt
pop
sbb
and
adc
and
jbe
push
dec
xor
aaa
mov
lock
out
fs
fistps
jns
es
ret
push
std
push
and
test
lds
loopne
adc
ljmp
stc
cmpsl
xor
clc
sub
cmc
add
inc
pop
cmpsl
mov
push
add
mov
mov
pushf
icebp
rcrl
adc
mov
jnp
mov
adc
das
addr16
sbb
rcll
cmp
stos
xor
js
xchg
scas
lret
subb
pushf
loop
xlat
andb
mov
push
push
shll
dec
inc
mov
arpl
mov
xchg
mov
adc
mov
adc
xor
arpl
xor
inc
hlt
push
mov
stos
pop
fisubl
cmpsb
movsl
cmp
xor
mov
mov
aaa
shll
rolb
lahf
popf
sbb
add
mov
test
cmp
imul
ss
fcmovnbe
icebp
mov
je
push
out
lds
bnd
les
loop
aam
jecxz
fwait
out
test
adc
lcall
or
fstpl
stos
mov
xor
jg
movsl
pop
jp
frstor
cmp
sub
movsb
xor
jns
add
out
insb
and
mov
xor
lcall
pop
cmp
jns
mov
shrb
add
xchg
jns
inc
adc
cmpsb
mov
xchg
inc
outsl
sub
loop
testl
das
xchg
js
pop
add
sahf
jp
sub
jbe
ljmp
in
repz
push
rcr
lods
dec
pop
inc
fidivrs
cmpsb
mov
add
ss
jmp
insb
push
jp
mov
fcoml
insl
push
lret
inc
inc
push
mov
mov
mov
frstor
gs
dec
bound
movsl
aad
popl
lahf
mov
adc
add
aam
scas
or
xchg
cmp
popa
add
fnstsw
mov
ret
loop
ss
mov
pop
orl
rcll
fnstsw
jmp
cmp
or
scas
push
xor
xor
pop
test
lcall
inc
mov
xchg
push
cmp
out
pop
cltd
repnz
mov
push
imul
push
jge
movsl
jl
cmp
add
bound
sti
arpl
push
adc
outsl
shrl
andb
jmp
push
jle
jae
stos
push
mov
and
cmpsl
fidivl
out
mov
inc
in
int
xchg
mov
mov
cltd
repz
adc
xorl
pop
daa
and
cltd
mov
inc
mov
sbb
inc
dec
les
xchg
mov
ds
and
xchg
xor
lds
mov
jl
ljmp
leave
dec
cmc
and
lods
rcrl
cmp
lret
in
pop
ror
push
subb
fidivrl
call
shrb
push
scas
test
push
add
addr16
inc
push
pushf
cld
int3
data16
fiaddl
or
out
sbb
sbb
mov
push
out
scas
xchg
pop
jl
mov
out
dec
sbb
out
test
inc
fcomps
ljmp
int3
jns,pn
mov
inc
xchg
fwait
push
sbbb
je
fsubp
mov
test
or
out
push
cmpb
daa
repnz
sub
out
mov
repz
mov
hlt
ffreep
nop
mov
sub
xchg
mov
xor
aam
shlb
addr16
aad
call
data16
fidivrl
les
mov
push
xchg
ret
movsl
inc
rol
inc
les
dec
test
and
mov
int
ficompl
inc
or
mov
xchg
test
test
mov
cltd
iret
adc
mov
in
shlb
jb
jae
lahf
insb
inc
cltd
sbb
push
sbb
in
push
aaa
jns
incl
andb
nop
shl
cmp
push
fidivrs
or
sahf
jb
fsub
es
scas
jne
pop
ds
rcl
or
add
lcall
push
aad
add
pop
and
mov
jmp
xchg
inc
nop
jno
jg
aas
and
cli
imul
jl
xchg
lahf
adc
mov
or
lret
aas
cltd
shl
jle
cmp
xchg
imul
mov
mov
stc
loop
push
movsb
mov
inc
and
test
xchg
arpl
in
mov
jbe
pop
jb
test
mov
jae
jp
push
or
push
cmpsb
aas
fsts
das
cmpsb
popa
or
enter
fnstcw
push
mov
adc
je
ss
inc
pushf
leave
lcall
mov
sti
lret
mov
outsl
mov
mov
add
hlt
sarb
mov
dec
pushf
pop
jbe
outsb
icebp
push
xchg
pushf
stos
insl
out
in
popa
sbb
loope
adc
fsts
stos
xchg
pop
xchg
or
pandn
and
pop
cmp
cmp
jae
xor
icebp
cmp
pusha
sub
cmp
addr16
or
xor
adc
sub
adc
aas
xchg
dec
movsb
and
push
xor
jno
jne
cmp
das
and
cmp
dec
add
add
jnp
fwait
xchg
clc
repz
push
inc
mov
or
push
fidivrs
or
push
ja
mov
push
add
mov
pusha
sub
xchg
xchg
roll
sub
push
mov
loop
jne
or
imul
xchg
lds
shrl
mov
sbb
ljmp
cltd
mov
insb
xchg
fisubl
adc
jb
popf
xor
cmp
push
std
mov
iret
out
out
push
sbb
or
fsubs
jne
sub
stos
out
loop
lock
push
mov
jmp
jnp
mov
test
and
and
ljmp
jg
pop
jns
fcom
in
shrl
mov
push
push
push
jb
jg
sarl
ss
fnstenv
ret
pushf
mov
inc
js
xorb
repnz
or
mov
push
pusha
sub
loop
mov
movsb
cmp
movsb
xchg
pusha
test
outsb
mov
lahf
mov
andl
lahf
imul
decl
stos
mov
ljmp
icebp
fidivrl
out
les
stos
adc
cmp
push
scas
aaa
cmp
outsb
popa
mov
mov
inc
cmp
mov
movsb
sub
scas
mov
rcll
imul
push
mov
pop
or
mov
mov
jp,pt
ficoml
ret
sub
movsb
sub
mov
rcll
and
inc
sub
jg
fidivrs
push
dec
jns
hlt
fdivrs
stos
ret
loop
pop
inc
xchg
test
adc
iret
cmpl
and
pushf
cmp
jmp
sub
mov
xlat
pop
inc
and
mov
aam
mov
int
jp
sarl
ret
sbb
scas
and
add
test
flds
push
lahf
sbb
cmp
push
ret
cmp
push
lods
push
push
frstor
add
dec
in
jo
add
mov
repnz
cmp
pop
popf
mov
or
mov
sbb
inc
fmuls
ja
dec
add
jae
adc
and
or
ficoml
ret
dec
popf
mov
xor
gs
cld
jb
insl
fidivrl
rclb
or
cmpsb
dec
or
sub
gs
cltd
hlt
fnsave
in
clc
pop
cmp
pop
xor
mull
mov
pusha
ja
xchg
and
inc
fstpl
sbb
cmpsl
out
or
or
adc
aaa
divb
out
sti
lea
aaa
out
rcr
xchg
push
jo
rcrl
popa
pop
int3
xlat
sti
inc
outsb
push
mov
mov
xchg
mov
pop
sbb
loopne
pop
push
sahf
fldt
xor
xchg
inc
jl
std
add
cld
pop
jbe
aaa
or
or
cmp
push
fisubrs
cmp
pop
push
test
jmp
movsb
cltd
sbb
test
das
sbb
fidivrl
sub
push
decl
mov
and
aad
inc
xor
imul
insb
mov
hlt
ret
xchg
out
lcall
pop
dec
xchg
jns
cld
stc
dec
or
mov
imull
in
fnstsw
mov
pushf
cmp
ficoml
xchg
outsl
or
out
mov
or
and
mov
mov
outsl
lcall
cs
mov
sub
in
jle
ficompl
sbb
xor
cld
jo
push
mov
jnp
jne
negl
mov
ds
movsl
sub
mov
movsl
and
dec
mov
push
scas
and
jo
xchg
dec
sbbl
mov
into
adc
mov
roll
ds
shll
clc
jbe
push
xorb
int3
mov
pop
cli
jp
and
mov
sub
push
test
add
inc
pop
rcl
fists
lds
orl
pop
lret
jp
jge
cmc
sub
pusha
pusha
rorl
jg
pop
mov
or
xor
out
rcr
popa
pushf
sub
in
ljmp
jo
rcll
inc
xor
jo
sbb
mov
xchg
in
and
add
xorb
popa
push
or
inc
xchg
les
aas
repz
test
icebp
fisubrl
adc
cmp
scas
insl
mov
popa
sti
jp
rclb
lods
lcall
add
mov
ret
pop
mov
xchg
out
xor
jnp
testl
leave
loope
push
dec
cmp
shl
mov
jl
cld
mov
jmp
cmp
push
and
adc
mov
xor
jo
xchg
push
pop
aaa
jb
repz
out
arpl
test
cmpsb
push
push
lcall
push
mov
mov
jecxz
arpl
xchg
xor
dec
pop
shlb
cmp
movsb
push
adc
iret
ds
adc
ds
adc
lret
lds
lds
sub
push
gs
cltd
sub
sbb
nop
mov
xlat
repnz
dec
shr
mov
xchg
mov
mov
insb
pop
mov
cmp
pop
dec
test
js
cmp
mov
cmp
and
push
mov
pop
out
cltd
out
add
in
mov
fdivrl
sub
mov
bound
cld
dec
xor
xchg
push
pop
lret
lcall
xor
cs
cmc
daa
mov
mov
cmp
jb
add
jne
fistpl
adc
cmpsb
jmp
je
or
scas
xor
scas
or
outsb
in
sarl
cmp
cmp
sti
test
out
sub
mov
add
mov
push
ds
ficomps
repz
mov
xchg
dec
test
pop
sti
cmpsl
das
jp
fcompl
dec
cmp
and
je
lods
mov
jae
daa
ret
cmp
inc
xor
jbe
aad
fcmovnu
aaa
cmpsl
and
push
sbb
enter
xor
scas
xor
push
lods
int3
jle
jge
dec
dec
std
insb
aad
inc
push
mov
arpl
das
in
sub
pop
out
mov
jmp
dec
add
mov
clc
mov
cld
xchg
mov
xor
jne
lret
imul
nop
mov
and
jne
jecxz
adc
sub
fsubs
sub
xchg
ror
or
sub
rcll
dec
xor
mov
das
test
outsb
mov
mov
scas
xor
daa
add
jns
enter
jnp
jno
test
mov
mov
push
stos
loop
nop
das
test
jge
in
movsb
popf
insb
popa
dec
and
shlb
jae
xchg
nop
icebp
into
pop
clc
addb
stos
out
inc
or
pop
stc
dec
pop
and
add
push
nop
std
cli
xor
insl
mov
inc
ret
aas
dec
shll
xchg
dec
cmp
sbb
shlb
int
aaa
jno
pop
iret
orl
mov
dec
out
dec
ljmp
lret
shll
mov
pushf
bound
dec
ss
lock
dec
adc
xchg
dec
fnsave
xor
jo
cmc
lret
adc
decb
std
stos
mov
dec
fstpt
mov
test
mov
repz
sbb
fisubrs
and
loopne
jnp
jmp
xor
loop
dec
inc
fs
mov
sbb
aas
mov
or
sbb
out
cltd
jmp
dec
xchg
jge
mov
sti
mov
iret
dec
stc
mov
in
nop
sahf
daa
hlt
in
sarb
andb
lret
xchg
fs
in
jg
ds
xchg
sbb
and
mov
jp
stc
gs
hlt
fisubrl
imul
push
add
cmpsl
idivl
jmp
lcall
xchg
push
xchg
std
cld
in
stos
cwtl
stos
sbb
sbb
ljmp
daa
push
fdivrs
mov
dec
sub
push
in
inc
dec
js
or
stc
add
xchg
lret
or
rcll
xlat
sbb
push
cmp
loop
fldenv
add
push
pop
ja
xlat
loop
adc
mov
out
stos
in
out
outsb
jb
mov
mov
xchg
cmp
loope
mov
xchg
jge
xchg
mov
adc
adc
es
lods
adc
std
in
cwtl
push
mov
inc
sbb
mulb
ljmp
ljmp
lea
jle
push
jecxz
loope
fs
xor
sbb
jb
cld
adc
pop
adc
aam
push
jns
enter
xor
mov
aaa
icebp
jb
es
scas
sbbl
loopne
push
jmp
or
add
fcmovne
mov
cmp
ja
jmp
add
dec
fiaddl
cmpsl
or
cmp
das
mov
mov
mov
sub
enter
stos
jno
jne
hlt
imul
mov
imul
xchg
mov
and
addr16
cmp
icebp
sub
adc
ljmp
icebp
pop
inc
xchg
ds
sbb
add
mov
sbb
adc
clc
xchg
mov
stos
sub
cmc
jb
shll
cli
loope
mov
xchg
adc
stc
aas
mov
insb
popf
or
aas
fs
cmp
sbb
jo
inc
add
adc
and
or
cmp
push
test
ja
mov
pusha
sti
inc
push
mov
das
into
daa
sub
cmp
call
sti
test
mov
cltd
stc
addr16
or
mov
fwait
xor
stos
mov
adc
jecxz
cld
xchg
mov
jecxz
faddl
pop
out
adc
rcr
out
adc
and
mov
mov
xchg
inc
and
cmp
inc
or
mov
adc
inc
cli
xor
push
xchg
xchg
lods
popa
addl
pop
or
jmp
jns
adcb
popf
out
bound
mov
jl
dec
pop
dec
jg
add
mov
lods
cwtl
xorb
cmpsb
pop
aam
shl
dec
sbb
xlat
addb
out
mov
push
pop
ja
mov
and
push
cmpsl
enter
adc
mov
arpl
stos
sub
popf
lcall
icebp
pop
movsb
out
bound
fstps
sub
pop
insl
movb
in
stc
xchg
adc
shll
test
movsb
aaa
pusha
xchg
cmp
icebp
stc
mov
je
cld
cmovae
inc
jns
pop
inc
dec
aaa
adc
cs
loopne
mov
xlat
roll
clc
inc
mov
sub
mov
sub
push
dec
es
cltd
sub
push
or
stos
pop
add
scas
mov
push
pop
dec
push
testb
inc
cld
xchg
cld
std
das
ja
pop
mov
jb
test
dec
arpl
jo
loopne
pop
sbb
ss
sub
lret
pushf
push
insl
mov
push
push
cmp
xchg
aas
mov
lods
fcomps
popa
dec
push
iret
mov
cmp
les
loope
aad
pop
testb
sbb
mov
mov
xchg
sbb
adcb
cmp
in
and
loopne
add
shr
pop
xor
mov
lret
rcrb
push
cwtl
hlt
ljmp
mov
jle
pushf
loope
push
mov
je
lahf
addr16
cmpsl
inc
jo
nop
jbe
mov
dec
cld
shr
mov
xlat
jo
pop
xchg
xor
xor
jne
xor
cmp
outsl
fnsave
add
xor
xorl
jae
jne
mov
fwait
push
scas
xchg
mov
cmp
mov
cmp
lea
pop
push
mov
xor
test
mov
call
or
arpl
xchg
wbinvd
mov
fs
mov
es
dec
mov
mov
ss
inc
comiss
cld
jle
add
popl
jb
aaa
out
or
mov
or
push
mov
add
shrl
test
rcrb
xchg
mov
sub
enter
pop
xor
nop
xor
fistpl
test
bound
dec
xorl
out
pop
cmp
insb
rcrl
cs
jb
lds
pop
and
int3
sarl
jmp
mov
mov
mov
loope
pop
push
push
sub
pop
push
mov
stos
js
xor
aas
cmp
ss
lcall
dec
aam
test
pop
add
popa
popf
mov
repz
push
or
fsubrs
or
and
adc
ffree
lds
icebp
xchg
out
xchg
pop
mov
and
jnp
xchg
js
add
jecxz
shrb
sbb
jle
jo
fists
sbb
dec
insb
xchg
les
lods
dec
mov
and
adc
push
aas
dec
mov
mov
mov
xor
popf
andl
shlb
sbb
cmp
cmp
sbb
and
pop
gs
aas
xchg
mov
dec
sbb
idivl
inc
cmp
ljmp
adc
enter
or
push
aam
push
popf
into
std
fcomps
push
cltd
rcll
mov
mov
cmp
mov
lods
ja
in
enter
mul
push
push
add
int
xor
in
or
das
jmp
in
pop
je
pop
push
sahf
nop
sbb
lret
mov
or
cmp
roll
mov
outsb
xchg
jb
pushf
xchg
lea
dec
sbb
jno
sbb
testl
pop
push
test
or
mov
fdivs
dec
negl
xor
out
mov
sbb
sbb
fs
aaa
fucomi
daa
div
lret
push
pusha
outsl
lods
xchg
pop
jp
xchg
push
and
fsub
scas
popa
mov
jae
fldl
push
cmpsb
stc
data16
inc
sub
inc
out
add
sbb
daa
push
sub
scas
jb
push
and
mov
clc
inc
push
in
ss
fmull
add
in
dec
add
fidivrl
aaa
inc
fstl
pop
loope
stc
scas
pop
fistl
xor
loopne
stc
cmpsb
xchg
mov
pop
inc
xor
or
xchg
sub
xchg
shrl
repnz
lcall
xor
call
xabort
mov
cmpsl
jp
mov
cltd
xlat
fistps
jae
cmpsl
pusha
and
sub
shlb
cmp
cmp
push
test
cmp
mov
hlt
rol
outsl
lods
inc
and
sbb
dec
les
pop
out
xchg
sub
mov
dec
push
in
mov
out
mov
mov
insb
dec
adc
repz
movl
mov
sbb
daa
inc
and
in
dec
lds
jo
dec
lods
loope
xchg
adc
sbb
ret
jae
push
imul
ss
aas
pop
test
lret
iret
dec
push
or
fcomps
test
aaa
rcll
lret
sub
mov
xchg
push
int
xlat
out
ret
xor
push
iret
imul
and
adc
addl
bound
loopne
loope
enter
dec
aad
adc
mov
xor
inc
insl
cmpsb
leave
or
insb
sub
push
push
cmpsl
sbb
mov
xor
arpl
dec
sub
xor
mov
jbe
add
out
jge
pop
mov
in
mov
out
add
jecxz
fildl
inc
cmp
call
out
cmp
sub
outsl
iret
popf
xchg
mov
inc
pop
loopne
lahf
insb
dec
lea
sub
xor
sahf
test
stos
xchg
das
cmp
sbb
lods
mov
leave
hlt
push
dec
rolb
and
cmp
push
pop
or
stos
fdivrs
push
leave
ret
out
out
test
add
ficoml
mov
jle
cmp
inc
scas
xchg
mov
ss
and
pop
dec
aaa
sarb
add
mov
sub
xorl
jno
sub
push
in
sbb
push
dec
mov
jns
jne
popa
push
dec
xchg
pop
xchg
iret
pop
orl
xchg
cmpsl
xor
test
sbb
sub
jle
xchg
push
mov
scas
and
loope
lcall
in
jne
mov
xor
cmp
out
call
cmp
insb
fdiv
sbb
mov
lahf
test
gs
shl
xor
sub
sahf
cli
popf
and
das
popa
push
outsl
adc
jg
aad
inc
push
outsb
push
pop
insb
xchg
sahf
adc
jge
addr16
fyl2xp1
lock
mov
movsb
sbb
in
fincstp
mov
and
flds
in
out
shlb
dec
push
mov
mov
xor
shll
cmpsl
insl
in
cmp
int
imul
pop
cmp
lret
xchg
fiadds
mov
jmp
rcrb
and
xlat
jno
pop
aam
pusha
popf
adc
stos
xchg
push
push
nop
sbb
fstpl
push
into
jl
outsb
adc
mov
int
sahf
sahf
jmp
push
xchg
out
add
outsb
shll
inc
cmpsb
dec
pop
orb
pop
sahf
cmpsl
ret
inc
jl
cmp
ror
sbbb
movsb
arpl
cld
adc
leave
jge
push
sub
jb
rcrb
mov
mov
add
mov
mov
dec
lret
andl
insb
repz
fimuls
and
mov
xchg
pusha
mov
pop
pop
shr
shl
inc
scas
sub
lahf
jl
push
mov
scas
cmc
push
bound
jbe
dec
or
adc
xor
mov
xchg
dec
in
popa
mov
cmpl
std
ja
xchg
jle
adc
pop
xor
shll
addl
mov
jb
pop
mov
fwait
push
fsts
out
inc
lods
pop
cmp
sbb
push
jecxz
ret
dec
loop
cmpsb
push
sahf
cwtl
addr16
dec
or
aas
testl
leave
movsb
das
push
dec
mov
mov
iret
mov
jo
dec
sbbb
pop
jnp
aas
and
shll
scas
jge
jmp
mov
mov
sub
sbb
push
jae
dec
cmpsl
std
shlb
push
mov
pop
dec
xchg
aam
out
hlt
shrb
idivl
inc
mov
xchg
in
jl
es
push
pushf
jb
cmc
dec
jge
fidivrl
pusha
lahf
js,pt
gs
mov
xrelease
test
loope
insl
js
call
addb
fnstcw
pushf
fbld
or
push
sub
mov
das
es
fstp
test
xor
call
sbb
popl
and
lods
lcall
je
cmp
adc
mov
xor
sbb
sub
lea
in
or
div
mov
rclb
addr16
imul
xchg
push
mov
push
adc
sahf
dec
popf
cmp
jae
sub
jl
sti
xor
jns
jge
cmp
lea
mov
cmp
sbb
nop
lea
push
cltd
xchg
pop
mov
negl
movl
fbld
test
push
push
lock
xlat
std
iret
mov
jl
sbb
add
and
cmc
cld
adc
push
int3
inc
fs
pushl
out
dec
pusha
inc
and
dec
sti
pop
and
fstp
cmpsb
push
inc
test
add
or
jnp
insl
mov
idivl
and
stos
int
xchg
int3
rol
subb
fucomi
mov
daa
mov
lahf
and
dec
pop
sti
outsb
nop
xchg
jecxz
test
ret
xchg
cmp
and
call
push
hlt
imul
cmc
mov
sbb
pop
or
xor
pop
or
push
mov
inc
lock
lret
pushf
rcll
mov
daa
push
xor
ret
inc
sbb
jle
mov
jge
jge
inc
pop
sub
pop
daa
xor
jo
mov
mov
xchg
bnd
or
into
adc
lds
in
jecxz
sbb
in
lods
insl
dec
or
adc
test
pop
mov
imul
bnd
xlat
jecxz
pushl
sbbb
dec
test
mov
sub
cmc
dec
in
mov
pop
push
into
stc
imul
test
mov
add
shlb
or
xchg
push
adcl
test
jbe
test
stos
test
cmpsl
jae
xchg
movsl
adc
dec
pop
sub
and
inc
leave
mov
in
or
nop
adc
mov
popa
push
sub
addb
jmp
pop
ljmp
jne,pn
sar
ss
sbb
jo
pop
les
mov
lret
mov
lret
mov
jle
iret
call
mov
jmp
jle
cmp
mov
mov
pmullw
or
jae
cmpsl
xchg
push
loop
pusha
mov
cmc
fimuls
test
jne
xor
add
pop
xlat
jno
int3
in
aad
xchg
lods
push
push
mov
outsl
sti
sti
lea
outsl
test
ss
and
mov
ret
cmp
in
fsubrs
inc
xor
mov
xor
sbb
fisttpl
pop
mov
mov
push
cltd
imul
mov
jbe
mov
scas
sti
cmc
pusha
sarb
arpl
push
leave
neg
pop
inc
dec
xchg
jg
pop
popf
movsl
sbb
divl
sti
call
mov
push
cmp
pop
xor
xchg
ficoms
pop
jmp
xchg
dec
and
xchg
dec
or
mov
stc
push
icebp
mov
jo
int
sub
iret
pop
jg
xor
mov
idivl
inc
jae
pusha
out
mov
sub
test
push
hlt
adc
aaa
mov
mov
push
mov
push
pop
lods
dec
push
iret
jmp
je
and
loop
repz
leave
or
xor
and
mov
ret
cmp
push
and
sbb
addr16
mov
xchg
icebp
sbb
inc
addr16
int3
sub
jl
push
xor
jbe
lret
fwait
in
aam
push
adc
mov
add
xchg
shll
dec
mov
test
inc
bound
adc
insl
sbb
icebp
cmp
inc
pop
int
cmp
mov
nop
cld
sti
imul
mov
add
mov
addr16
loopne
cwtl
test
push
adc
mov
dec
or
mov
data16
insb
in
imul
jae
and
addr16
and
mov
mov
lahf
dec
xor
mov
push
inc
xor
inc
jp
mov
mov
xor
jle
adc
jmp
ret
pop
sahf
xchg
into
push
sbb
mov
or
xchg
popa
jp
lret
xchg
shrb
mov
ljmp
mov
xor
shll
stos
dec
inc
sub
jne
xorb
int3
dec
or
sbb
js
jle
aas
xlat
sbb
adc
ret
ss
mov
test
mov
data16
iret
pop
push
sbb
and
mov
mov
inc
jns
mov
mov
dec
mov
adc
sub
dec
cmp
cmp
add
xor
pusha
xchg
pusha
adc
cltd
dec
cmp
pop
les
fs
neg
pusha
inc
xor
hlt
or
insl
sbb
jg
ds
push
push
pop
inc
inc
mov
mov
test
aaa
or
add
xchg
xor
lcall
mov
hlt
out
sahf
push
cmc
stc
xchg
test
mov
movsb
pop
aaa
or
cmp
push
xor
xor
cmp
xchg
cmpsl
mov
mov
popa
mov
cmp
icebp
out
test
repz
loope
jne
leave
ret
adc
cmpsl
ja
mov
dec
mov
es
loop
add
push
hlt
sti
push
cmp
test
and
or
xchg
aad
inc
mov
rcll
scas
call
cmc
and
xchg
cld
add
sub
fwait
or
out
add
inc
imul
jns
xchg
shll
clc
mov
jnp
cmp
pop
or
jmp
adcl
jg
xchg
mov
mov
jbe
sub
sbb
push
je
loopne
fidivrl
and
lods
lret
inc
fidivl
jg
test
fwait
js
rcrb
and
mov
and
mov
or
dec
add
or
in
jmp
fiaddl
lret
fcoms
jbe
in
stc
aaa
add
adc
and
and
insb
popa
jecxz
loope
in
or
bound
addb
ret
add
mov
add
mov
mov
push
mov
mov
iret
inc
push
and
and
loopne
int3
repnz
and
adc
repz
lea
lods
adc
dec
dec
mov
lahf
aam
mov
mov
pop
xor
clc
imul
adc
mov
mov
inc
ret
pop
or
clc
mov
dec
stc
call
mov
or
insb
sbb
jl
push
xchg
cmp
xchg
xchg
notb
jo
mov
jle
mov
and
daa
fistps
enter
sbb
inc
mov
jae
sbb
loop
xchg
enter
in
int3
testl
add
fnstcw
jno
mov
outsb
test
es
xchg
les
or
and
in
mov
outsb
mov
xchg
je
lods
cmpsb
test
cmc
popf
shlb
jnp
dec
jo
lret
add
inc
lods
xchg
lret
out
jge
mov
aaa
ror
xchg
xor
cld
scas
jmp
pop
or
mov
sub
mul
mov
pop
adc
and
cwtl
sbb
add
pusha
lock
imul
call
loopne
fsubrs
push
rcl
inc
lret
adc
push
iret
mov
je
mov
lahf
fadd
test
jge
ljmp
loopne
negl
aam
fsts
sub
not
outsb
or
roll
stc
loopne
pop
ret
push
outsb
inc
push
jmp
ds
loopne
mov
sbb
mov
pop
ret
xlat
fildll
addb
out
xorb
dec
xchg
dec
jmp
push
pop
mov
xor
orl
xlat
cmp
test
add
push
pop
xchg
sub
pop
push
loop
rclb
scas
add
cmpsb
cmp
or
dec
aaa
shll
xor
pop
push
popa
mov
lret
mov
rclb
push
ret
mov
or
loope
dec
arpl
mov
lods
jge
inc
pop
sbb
out
andb
repz
leave
add
test
sub
js
sbb
notb
mov
in
sbb
mov
adc
cmp
enter
dec
or
arpl
push
mov
mov
push
mov
xchg
cmpsl
sbb
push
add
std
mov
pop
fs
and
addr16
jge
jge
in
jnp
xlat
pop
xchg
mov
insb
pop
int3
push
jno
adc
xchg
es
dec
es
movsb
pop
scas
mov
aad
adc
mov
inc
inc
xor
out
imul
xchg
aaa
add
bnd
push
fs
xchg
xchg
call
test
aam
lods
mov
inc
inc
loopne
jg
pushf
in
test
xchg
add
jge
mov
jnp
jb
push
outsl
jo
clc
adc
popa
std
sub
add
pusha
jg
js
push
test
cltd
nop
lds
lcall
call
cmp
gs
mov
xor
in
mov
mov
faddl
mov
mov
sbb
ljmp
inc
pop
aad
out
jl
aam
mov
test
pop
xchg
xor
das
mov
mov
scas
adc
and
xchg
push
bound
rol
push
cmpsb
sbb
popa
pop
aad
sub
xchg
arpl
loope
popa
mov
icebp
jg
aad
outsb
fistl
push
sbb
stc
inc
mov
out
lods
outsb
nop
int
lcall
es
sub
popa
in
mov
mov
es
mov
call
out
imul
cli
dec
adc
sub
add
lcall
stos
xchg
cmp
adc
sub
pop
add
clc
add
insb
sbb
mov
xor
add
jp
push
xlat
add
sub
push
push
pop
push
stc
test
or
mov
gs
pop
icebp
dec
cmp
dec
push
repz
std
mov
sub
jecxz
mov
adc
xchg
xchg
sub
and
in
das
jne
cs
cmp
fwait
pop
push
and
ss
pop
repz
pusha
int
push
out
cmp
sub
push
lods
es
lahf
jle
jae
jge
push
pop
adc
xor
ficomps
pop
ljmp
mov
mov
outsl
loop
sahf
sbb
xlat
sub
jge
cmp
sarb
adc
inc
and
or
jg
ss
movsw
cmp
movsb
aas
les
jge
or
xor
mov
dec
leave
fwait
and
out
and
and
inc
and
inc
mov
call
xor
xchg
pop
fmuls
lea
in
lea
das
fdivrl
shr
sub
mov
cmc
inc
mov
mov
in
pop
bound
dec
hlt
xor
addl
adc
int3
mov
fiaddl
in
je
outsl
test
mov
and
inc
aad
and
sbb
lret
mov
aam
add
xor
movsb
inc
xchg
shl
mov
mov
mov
or
in
mov
leave
dec
add
jmp
xchg
push
push
fwait
les
pop
ds
jne
idiv
adcl
mov
lret
out
mov
jno
shr
in
stos
jne
pop
scas
leave
pop
inc
outsb
nop
lret
dec
mov
sub
xor
cmpsb
ss
xchg
pop
out
xchg
adc
test
add
push
popf
jg
pop
sbb
mov
mov
cmp
inc
pushf
enter
ss
mov
push
pushf
clc
es
inc
dec
mov
in
and
cmp
jl
pushf
lods
scas
ss
jo
outsl
out
inc
push
gs
dec
mov
mov
shrb
and
cwtl
push
out
mov
cli
mov
lock
es
lods
xor
xor
pop
jbe
cmc
movsb
pop
call
inc
test
sbb
call
cld
xor
or
push
clc
fsts
lret
jg
in
stc
movl
fadds
adc
and
jg
xchg
lds
inc
sbb
cwtl
je
pop
lods
add
mov
enter
lret
sub
jns
pop
jnp
add
or
ljmp
in
adc
andb
mov
pusha
enterw
jg
pop
mov
push
jle
xchg
adc
push
mov
mov
rorb
mov
testb
jle
add
sub
sub
jle
jp
das
cmp
add
scas
jbe
push
movsb
lret
jecxz
fnstsw
pop
repz
adc
xor
mov
lcall
icebp
xor
js
inc
mov
cmp
jg
adc
ss
bound
jle
pop
pop
cli
mov
stos
push
in
stc
sbb
popa
pop
gs
mov
gs
insb
mov
adc
adc
fdivs
ficoml
or
jl
mov
into
loopne
clc
lahf
call
out
lea
shl
fwait
je
add
cmp
btrl
loopne
pop
push
xor
sub
or
insb
jmp
xchg
roll
ror
adc
dec
shrl
cmp
xlat
cmp
stos
or
sti
sahf
mov
lods
int
shl
shrl
sub
sti
mov
sbb
hlt
outsb
int
imul
hlt
gs
es
mov
lret
mov
es
in
rcrl
push
inc
mov
or
xor
repz
and
out
scas
insb
cld
sahf
mov
ret
add
mov
rcrb
mov
xor
xor
add
pop
push
adc
xor
mov
jmp
lea
xor
mov
jno
jns
loopne
iret
or
mov
pop
mov
inc
push
cmc
push
mov
push
cmp
add
mov
subl
push
inc
inc
shl
or
ret
adc
push
popf
mov
mov
xor
inc
test
mov
setno
cmp
in
mov
xchg
mov
mov
orb
in
xor
push
push
dec
fcomps
shrb
es
dec
push
pop
iret
inc
mov
in
div
rcrl
in
sarb
bound
xor
stos
nop
ror
sarb
inc
mov
dec
sbb
test
in
mov
js
fldcw
adc
dec
lds
mov
mov
enter
jbe
add
pop
nop
mov
sbb
cwtl
ror
cld
stc
adc
jo
iret
fiadds
leave
xchg
lcall
mov
in
xor
dec
mov
pop
sti
mov
clc
and
lods
inc
subl
mov
inc
mov
pop
clc
insb
ja
orb
jg
cmpsl
mov
js
fs
mov
mov
mov
or
je
sub
push
and
push
ficompl
ret
add
ffreep
jns
jmp
sbb
and
aaa
pop
or
ss
jecxz
push
lea
mov
arpl
into
in
jmp
cltd
pop
xchg
in
push
into
pop
jo
pusha
inc
and
nop
decb
jle
pcmpgtw
sub
mov
dec
sub
fwait
mov
int
cld
fwait
pop
mov
sub
cmp
out
mov
iret
cli
xlat
pop
jmp
push
aas
int3
push
xor
test
test
push
int3
push
loop
fcmove
dec
adc
pop
lcall
mov
je
ja
imul
and
pushf
enter
scas
add
mov
ljmp
or
mov
mov
sbb
into
nop
pop
lret
dec
insl
test
xor
push
js
add
iret
xchg
pop
movsb
xchg
nop
das
mov
inc
xchg
rolb
dec
jg
pop
push
xchg
mull
jecxz
jno
test
in
es
in
jp
rol
test
sbb
into
jecxz
imul
dec
add
pop
cs
movsl
and
dec
loope
and
xchg
and
mov
data16
pop
test
sub
mov
in
adc
jae
cli
inc
add
pusha
shlb
mov
test
arpl
addr16
sub
mov
mov
scas
push
test
dec
sub
jp
inc
and
or
faddl
xlat
adc
lahf
cmp
jp
lods
jp
movsl
mov
inc
xor
dec
sti
ret
xchg
lahf
and
ret
pusha
pop
mov
adc
jecxz
daa
cli
pop
mov
and
stos
pop
inc
icebp
pop
jbe
imulb
lret
ss
lret
vpshuflw
push
arpl
lods
inc
lret
mov
jb
dec
nop
fsubl
xchg
lea
fstpt
icebp
inc
fistl
fwait
incb
dec
cli
pop
insl
jge
vaddps
xchg
add
ss
mov
or
shrl
int
mov
jecxz
mov
push
out
cwtl
ja
gs
movsb
and
ds
nop
mov
mov
sub
mov
push
scas
ja
pop
pop
popf
out
xor
mov
lods
sub
mov
lds
dec
or
rcrl
cmp
mov
fs
andb
mov
enter
sbb
call
sub
push
inc
and
daa
inc
jl
loope
out
xor
mov
dec
outsl
inc
aas
sub
mov
clc
lods
int
orl
js
or
arpl
les
mov
iret
pop
out
movzwl
inc
push
sbb
in
scas
imul
scas
add
jmp
xlat
mov
pushf
stc
repnz
les
push
jo
hlt
mov
xor
pop
xor
jmp
mov
pop
lods
pushf
movsl
test
xchg
dec
in
or
sbb
inc
mov
orb
add
gs
push
test
add
es
out
ror
push
adc
outsb
xor
push
jno
push
addr16
call
lock
inc
mov
addr16
fisubrl
mov
and
pop
or
xchg
pop
adc
push
fsubrl
and
aam
movsb
jmp
push
shld
pop
add
jno
and
add
inc
mov
inc
cmp
movsb
dec
loop
jbe
jbe
inc
outsl
xchg
sbb
lret
cmp
inc
mov
mov
fs
in
enter
mov
cmpl
xor
add
pop
mov
xor
pop
imulb
pop
xor
rolb
fs
jo
xchg
js
stos
sbb
push
rcrb
fbstp
pop
enter
sub
out
cmp
push
hlt
scas
push
clc
imul
fldt
jg
sti
cld
dec
in
mov
lea
mov
sahf
sbb
stos
cmpb
xchg
mov
mov
mov
imul
jge
xchg
cli
dec
arpl
xor
fwait
sub
repz
sub
das
pop
adc
adc
lret
stc
lcall
or
add
adc
sbb
mov
push
xchg
ljmp
movsb
hlt
and
adc
lret
pop
jns
cmpsl
push
adc
je
push
pop
dec
pop
adc
dec
rcrl
mov
jae
jp
arpl
aad
push
clc
out
rcl
cs
push
cmp
call
adc
imull
shrb
adc
les
inc
lahf
out
gs
push
mov
mov
shrb
xor
mov
fwait
aaa
sub
push
icebp
cmp
or
mov
outsb
jmp
outsl
testl
push
loope
cwtl
sbb
add
push
scas
aaa
add
shll
in
test
js
test
leave
sbb
xchg
mov
push
rcrl
xor
pop
subl
iret
add
adc
out
popa
add
mov
out
dec
out
jns
lods
xchg
push
jl
sti
mov
mov
mov
movups
sbb
dec
mov
and
loop
sbb
andl
out
lcall
inc
in
jne
cs
hlt
push
mov
cmp
or
lret
aad
mov
mov
mov
ucomiss
mov
pop
lret
pop
aas
rorb
adc
dec
adc
xor
data16
mov
mov
mov
fnstsw
aas
bsr
ja
sbb
add
inc
mov
fwait
sbb
ds
mov
in
lcall
cmp
rcr
les
repnz
movsl
in
mov
add
xchg
das
in
rorl
mov
ljmp
dec
sbb
sbb
mov
pusha
aad
gs
ror
inc
mov
mov
cmp
rol
aad
jo
popa
and
pop
push
in
sbb
fidivrl
or
jo
scas
and
add
test
and
repnz
push
cmpsb
ret
int
xchg
push
xor
xchg
icebp
push
pushf
and
add
sub
movsb
mov
xchg
adc
loopne
addr16
fcompl
rol
scas
xchg
jns
mov
inc
fwait
lea
lahf
or
iret
jns
mov
xor
aas
pop
mov
dec
rcrl
add
push
into
mov
adc
xchg
testl
xor
pop
and
xlat
mov
out
sbb
mov
notl
xchg
mov
pushf
jp
filds
jne
aas
shll
stos
inc
fs
fistl
jo
cld
mov
pop
lds
dec
adc
scas
adc
xchg
xchg
or
aam
scas
jnp
or
mov
push
xor
lahf
pop
movsb
fistpll
fdivrl
and
jbe
jno
shlb
loopne
add
int
add
sub
cmp
cmp
stos
mov
call
adc
pop
dec
inc
test
outsb
pop
cmp
mov
jae
or
xchg
push
add
sub
imul
movsl
pop
push
cmp
test
cmpsl
fucomi
gs
sbb
arpl
inc
movsl
test
xlat
inc
enter
or
sar
dec
mov
dec
add
push
loopne
push
mov
mov
in
dec
cltd
mov
popa
mov
sar
jnp
push
movl
fwait
and
popf
popa
ljmp
scas
pop
add
or
mov
add
sub
ds
and
sti
jge
dec
popa
pause
aam
ret
mov
dec
sbb
ffreep
popf
fimuls
mov
sub
cmp
cwtl
ret
notb
or
pop
mov
or
xchg
adc
jno
mov
test
lret
rorb
pop
out
push
test
lds
dec
pop
mov
cs
adc
jae
mov
pop
outsl
add
dec
pop
push
insb
pop
mov
cmc
cmc
jae
add
mov
fs
cmpsb
mov
dec
fwait
xchg
mov
dec
dec
or
mov
inc
add
adc
mov
test
push
push
dec
mov
in
push
lea
call
jbe
push
and
push
jl
xchg
xchg
adc
imul
add
pop
outsb
aad
cli
or
xchg
ret
push
sub
mov
mulb
dec
xchg
shrb
dec
add
sub
mov
mov
jg
ljmp
hlt
lret
xor
mov
xor
test
addb
sbb
mov
inc
cmp
movl
mov
jmp
subl
xchg
cmp
in
les
or
repz
addr16
cmp
fisubl
push
ror
push
pop
cmp
push
sub
insl
test
mov
lds
push
dec
insl
out
xor
push
pop
adc
sub
popa
and
movsb
cmp
loopne
adc
inc
loop
or
iret
ss
or
test
add
ljmp
ret
mov
aaa
dec
arpl
jp
pop
push
cld
add
mov
mov
pop
loope
inc
pop
hlt
ja
fists
jb
imul
inc
mov
scas
sbb
mov
cmp
iret
sar
hlt
sbb
inc
out
js
push
lret
and
lods
test
or
push
lods
scas
in
rcr
test
out
push
enter
cmp
jg
gs
jmp
or
and
inc
pop
push
push
dec
js
stos
dec
push
jg
pop
cld
xor
imul
adc
std
adc
adc
mov
lret
push
push
sbb
jbe
mov
mov
ficoml
add
xchg
scas
jg
in
jne
add
push
cltd
insb
mov
dec
pop
lods
xchg
fistpl
ret
xor
lods
addr16
mov
xchg
xor
mov
ss
ds
mov
hlt
fwait
or
lea
pushf
mov
inc
mov
clc
jns
in
clc
xchg
nopl
push
lock
das
dec
adc
pushf
xchg
mov
clc
ret
xchg
jecxz
dec
inc
push
xchg
outsl
pmaddwd
int3
xchg
lods
jns
mov
push
adcb
jle
faddl
push
inc
nop
pop
sbb
xor
cmpsb
shll
mov
mov
sbb
and
mov
or
mov
or
sbb
popf
and
int
imul
push
leave
adc
fildll
imul
test
test
dec
fnstcw
push
lret
fcomip
sub
test
inc
lahf
adc
leave
pop
loop
sub
mulb
xchg
add
xchg
lret
cmp
lods
cmc
mov
popa
adcl
popf
aad
push
push
daa
mov
ret
push
adc
jno
fisttpll
lock
in
cs
xchg
push
ds
and
in
jl
iret
xor
loop,pn
mov
pop
aas
push
sbb
jle
repz
fldcw
sti
sub
sbb
rcr
ds
fidivl
pop
rcr
shlb
xor
mov
mov
lahf
shlb
cs
sbb
out
dec
ljmp
cmp
stos
fidivrs
pop
pop
inc
inc
jge
cld
cmpsl
or
jo
je
xchg
in
lret
cs
and
stos
mov
cwtl
jmp
imul
data16
push
xor
lods
in
fdivs
nop
data16
and
std
xor
jg
inc
cmp
rcrb
jp
loop
mull
push
sub
add
pop
add
jno
jne
sbb
adc
inc
push
sub
and
mov
cwtl
cmpsl
jecxz
mov
mov
ljmp
or
mov
cmp
test
push
mov
cmp
xchg
add
adc
cwtl
jno
sub
cwtd
movsl
adc
dec
jo
lea
test
push
mov
xchg
push
shl
cli
loop
bound
xchg
cmp
mov
addr16
cmc
and
jae
mov
lret
cmp
jae
je
ja
add
mov
clc
enter
adcl
movsl
mov
icebp
jns
js
inc
aam
pushf
sahf
in
push
push
push
stc
and
mov
push
gs
adc
jp
adc
push
jae
add
stc
adcb
inc
jno
add
outsb
xchg
cmp
cli
sahf
pop
lcall
mov
out
iret
mov
leave
xor
in
sub
loopne
lea
adc
mov
adc
aaa
jbe
gs
or
sarl
cmp
jne
jo
pop
jns
lahf
inc
add
mov
mov
scas
adc
or
std
jmp
dec
jbe
push
or
push
std
lea
mov
sub
shlb
push
les
cmp
jp
cli
aas
or
xchg
iret
mov
and
xor
sti
mov
lret
cmp
out
xor
aam
dec
popl
out
in
call
xchg
lahf
rorb
lahf
sbb
or
test
pop
into
outsl
sub
sub
out
aam
data16
ds
dec
and
and
xorb
in
rorl
fwait
into
jle
dec
dec
sub
daa
ljmp
add
pop
les
icebp
mov
pop
or
pusha
add
call
lahf
mov
aad
clc
jmp
push
bound
or
pop
xchg
adc
push
enter
push
rorb
mov
mov
lods
lahf
aad
aad
pushf
insb
jns
mov
outsl
das
push
out
inc
movsl
nop
cld
jg
stos
mov
mov
dec
sub
ss
cmpsl
add
inc
dec
js
sbbb
sbbb
popa
push
mov
adc
cmpsl
bound
xchg
mov
loop
lock
mov
imul
push
add
repz
cmp
push
cmp
sub
call
popa
pop
repnz
cmpsb
xchg
insb
inc
jne
test
push
and
xor
mov
inc
dec
or
adc
xor
in
gs
jg
or
push
dec
aaa
lahf
xor
ja
pop
mov
inc
out
add
nop
mov
ret
orb
jb
jb
not
notl
mov
test
xor
test
popf
rcrl
ss
cli
aaa
imul
test
xor
xchg
xchg
js
ret
push
add
mov
and
dec
pop
fcomps
je
mov
jbe
or
add
lea
push
jmp
sub
inc
and
jg
mov
arpl
mov
movsb
xor
adc
and
outsb
pop
and
repnz
movsb
in
jns
or
mov
ret
and
adc
push
rcrb
addr16
nop
mov
xor
shrb
test
mov
push
rclb
cmp
cmpsl
clc
mov
and
outsl
jge
outsl
xor
shrl
inc
sub
outsl
scas
sahf
addr16
out
in
jl
mov
lods
decb
sub
mov
fsubr
mov
adc
cmpsb
enter
sahf
push
push
dec
add
aad
and
lods
push
mov
pop
sbb
pop
push
fs
mov
sub
inc
mov
mov
dec
icebp
hlt
aaa
add
and
xor
mov
subb
adc
cld
and
iret
adc
push
fisubrl
loop
cmpb
es
push
mov
push
inc
xchg
addr16
js
ret
out
ljmp
jb
femms
jno
test
fsubrl
mov
adc
cwtl
aas
pop
divl
xor
out
jae
js
pop
nop
pop
push
jge
push
and
cli
sub
mov
cli
jno
lretw
xchg
les
jb
repz
lds
mov
jae
sub
dec
aaa
dec
sub
aaa
cmpsl
cli
cmc
add
sbbb
mov
lds
xchg
test
out
xchg
add
jne
or
pop
mov
push
xor
jmp
bnd
jbe
in
movsb
inc
dec
dec
push
icebp
cmpb
dec
gs
xor
cwtl
orb
sbb
insl
ret
jb
inc
and
mov
add
jae
aam
test
mov
xorb
mov
es
cmc
xchg
out
xchg
pop
dec
and
mov
adc
ljmp
sbb
hlt
mov
adc
adc
ds
ret
and
fs
dec
out
clc
add
imul
and
popa
push
or
insb
jge
inc
jle
jg
nop
mov
insl
loop
inc
xor
mov
or
jg
loope
call
divb
cli
rcll
enter
lcall
or
std
jbe
xor
out
js
push
lahf
loope
out
lods
sbb
popa
fcmovu
aas
ds
mov
xor
inc
imul
push
fstpt
movsb
xor
mov
aad
xor
ss
or
ror
fcomps
cwtl
xlat
ficomps
mov
fstpt
add
pop
jno
mov
sbb
adc
scas
roll
call
or
not
stos
push
cmpsl
stos
fcomps
mov
adc
in
sub
add
push
popa
lahf
sub
inc
mov
or
lret
notl
mov
pop
and
cmp
mov
cmp
add
ds
sub
mov
js
dec
cs
ss
sbb
lea
mov
imul
outsb
push
incb
sub
in
mov
daa
cmp
addb
jg
mov
jmp
test
fcom
push
out
sub
in
add
jmp
shr
nop
movsb
fiaddl
inc
push
iret
fcomps
fisubrs
or
cmp
imull
loope
push
popa
shlb
or
mov
push
shlb
in
inc
andb
jnp
xor
push
lods
push
addr16
scas
adc
push
or
int3
lahf
add
notl
push
in
lahf
adc
sbb
pushf
std
std
or
mov
pop
xchg
cltd
sbb
mov
and
hlt
add
fists
mov
adc
sti
add
test
ret
mov
sub
cmp
xchg
arpl
lahf
aam
stos
mov
xchg
mov
nop
inc
nop
sub
sbb
adc
mov
iret
inc
dec
mov
cmp
loope
jg
shlb
rolb
stos
inc
sahf
repz
pop
test
into
test
push
int
cmp
or
jnp
push
sbb
in
out
loope
mov
shrl
rcl
aas
mov
mov
xlat
stc
lahf
dec
mov
test
push
pusha
or
mov
pusha
push
aas
push
inc
push
push
mov
dec
repnz
or
dec
push
aam
test
jbe
jb
stos
mov
push
pop
popa
andl
call
mov
dec
push
mov
and
or
ret
mov
aas
out
arpl
sbb
sub
jo
lods
push
lcall
into
inc
shl
jnp
adc
xchg
jp
sub
fimuls
jne
sub
aam
fwait
cwtl
in
xor
aaa
repnz
jmp
xchg
int
jb
jo
push
dec
mov
xor
inc
lcall
fcomps
das
int3
ss
xchg
mov
adc
sbb
xchg
push
adc
inc
into
mov
mov
pushf
stos
jecxz
dec
jne
push
testl
mov
cs
push
sbb
lcall
testb
sub
push
dec
or
cmp
scas
inc
sbb
xor
in
cmp
cmpl
add
lods
jae
rclb
cld
fnstsw
test
xor
xchg
in
dec
js
inc
lea
lea
mov
dec
idivb
int
test
push
pop
pop
push
jmp
outsl
insl
test
and
fdivl
mov
lods
xor
movsl
scas
dec
jne
xor
jae
push
lret
loope
lahf
out
xor
pop
inc
cwtl
jecxz
je
loopne
sub
cmpsl
inc
pop
pusha
sub
jge
or
aas
push
push
iret
xchg
mov
pusha
ljmp
call
mov
int3
mov
notb
je
inc
cmp
dec
fsubl
out
lods
lret
mov
add
sub
xchg
dec
filds
xchg
cmp
dec
mov
sbb
jns
pushf
arpl
mov
call
dec
adc
inc
popf
insl
jl
cmpl
pop
xchg
dec
test
cltd
repz
hlt
mov
addb
inc
in
and
pushf
call
inc
cmp
repz
sti
stos
enter
adcl
and
jle
cmpsb
pop
loop
xor
shr
add
pop
cmp
cmp
or
push
scas
fwait
aaa
daa
scas
sbb
inc
pusha
arpl
jb
xchg
mov
bnd
ljmp
stos
push
mov
sbb
out
das
jb
mov
push
cli
sub
xchg
clc
or
jnp
sub
mov
mov
jns
cmp
fistl
imul
test
movsb
or
fisttpll
mov
sbb
lods
cmp
rcr
ljmp
xchg
cs
out
mov
dec
inc
mov
jae
push
cmpl
dec
push
cmp
mov
mov
xchg
pop
or
xor
and
adc
or
xor
push
test
push
movsl
xor
data16
stos
gs
outsb
fsubr
stos
push
sahf
fs
loop
insl
enter
ds
pop
mov
push
call
xor
inc
icebp
adcl
imul
cmp
mov
inc
ficoml
jo
or
sub
js
mov
movsl
cmp
enter
mov
cmp
dec
pop
mov
or
or
or
xchg
rcrl
ds
push
and
fsubrl
test
jle
gs
and
test
xlat
jp
cmp
iret
pushf
ljmp
fnstsw
js
ss
xchg
jg
add
sarl
mov
cmp
and
std
pushl
pop
lahf
fdivrp
ficompl
stc
jnp
adc
and
inc
mov
out
jb
iret
stos
loope
insb
movsl
push
mov
push
mov
aaa
popa
and
sbb
and
sbb
das
cli
xchg
pop
addr16
fcmovnu
mov
xchg
jo
stos
loopne
cmp
jg
fcmovne
inc
cmpsb
cli
sarb
jmp
negl
xor
sbbb
cwtl
sbb
cld
or
sub
jl
inc
jmp
nop
fdivrp
mov
hlt
mov
lret
daa
mov
fistl
push
iret
jge
xor
dec
adc
mov
addr16
scas
int3
sbb
adc
movsb
and
mov
fwait
pop
xchg
xchg
lock
or
sbb
jns
xchg
popa
pop
jp
dec
cmpsb
mov
ret
ljmp
mov
adc
xlat
imull
lds
mov
cli
enter
mov
inc
xor
push
aad
addr16
insb
dec
test
call
and
sbb
movl
push
jle
push
sub
movsl
mov
fidivs
cs
xchg
outsl
cmp
shll
xor
lcall
bound
mov
sub
xor
xlat
jp
xchg
jno
and
push
pop
out
stos
cltd
or
mov
ds
cs
jle
movsb
jbe
or
cli
into
pop
mov
hlt
xor
and
loope
push
inc
jb
ds
test
fnstsw
dec
and
dec
xchg
int3
ret
aaa
jb
aaa
call
lods
mov
jb
in
cmp
pusha
test
jne
jbe
pop
dec
mov
lods
pop
pop
sti
lret
je
sub
xor
lcall
dec
rolb
or
shrl
and
pop
lea
mov
or
adc
jg
lcall
sahf
fstpt
pop
mov
enter
mulb
popf
popf
mov
fisttps
mov
and
in
enter
ljmp
jno
cmp
pop
test
leave
popf
jno
cmp
fldt
jmp
cs
jmp
pushf
mov
push
xchg
dec
jno,pn
cmc
inc
mov
shlb
idivb
imul
or
xor
mov
mov
fsubs
fstp
lea
and
cmpsl
shrl
imul
daa
sub
cmpsl
pop
push
add
xlat
dec
outsl
js
fsts
jno
or
movntq
jge
wbinvd
mov
mov
ficoml
pop
ss
mov
stc
xchg
xchg
pop
pop
jp
push
sbb
or
mov
shll
jo
cmpsb
aad
mov
test
or
and
out
nop
xchg
pop
and
add
test
test
add
add
stos
xchg
adc
testb
lcall
mov
sub
imul
and
xor
jl
pop
outsl
enter
pop
rcrb
negb
nop
pop
xor
sbb
ret
mov
sbb
jmp
mov
push
inc
add
int
test
out
xor
sub
adc
rcl
mov
lahf
xor
js
adc
ficoml
push
and
daa
dec
mov
call
add
scas
push
fcoml
xor
in
pop
inc
mov
loopne
pushw
xchg
mov
or
sti
es
jmp
aam
cmp
iret
sub
repnz
in
mov
or
jne
jl
dec
jecxz
xor
push
mov
push
jp
jmp
decb
loop
imul
rorb
adc
es
aas
mov
fwait
js
xchg
adc
xchg
mov
bound
ret
roll
xchg
cmp
in
jp
ds
inc
or
push
test
mov
cmpsb
push
add
popf
scas
push
sbb
imul
testb
jecxz
rclb
fdivrs
jmp
mov
subl
cmc
mov
fcmovnbe
pop
xor
stc
mov
inc
jecxz
mov
adc
xchg
add
in
or
xor
fsubrl
or
and
sbb
mov
mov
xlat
in
add
and
push
dec
cmp
fldt
in
inc
mov
lret
adcb
xchg
pushl
lcall
insb
or
sbb
cmpsl
and
pop
icebp
or
inc
cmp
or
cmpsl
mov
jg
stos
scas
ret
inc
push
cmp
lods
mov
out
fs
psubw
cmp
cld
sub
sahf
rcll
loopne
imul
in
sti
mov
adc
insb
dec
sub
out
xchg
mov
xor
xor
push
push
pop
es
shrb
hlt
xchg
cmpsl
pop
push
loopne
rorl
xor
lea
push
adc
in
inc
ret
call
cmp
mul
out
loopne
push
clc
mov
xor
add
mov
jle
add
imul
adc
aas
xor
push
mov
push
inc
mov
inc
push
shll
fidivs
xor
lret
and
pop
mov
fimull
ljmp
xchg
es
mov
movsl
hlt
mov
fldenv
push
fmul
test
test
pop
xchg
fldenv
popa
loop
xchg
out
fsubl
fs
pop
aam
jne
ret
mov
shll
arpl
lret
faddp
lds
fsubrp
hlt
scas
and
lock
std
aad
lds
hlt
jg
mov
dec
sahf
inc
shlb
pop
loope
mov
xor
adc
scas
mov
push
fs
pop
sub
inc
dec
dec
pop
cs
shlb
fsubrs
jnp
idivb
jge
xor
and
movl
pop
jl
push
in
out
cmp
mov
adc
gs
scas
pop
dec
loope
push
push
hlt
sub
fcoml
ja
out
xchg
xchg
repz
xchg
add
nop
pop
divb
adc
pop
mov
adc
ds
pop
stc
cmp
cs
test
xchg
in
and
lea
inc
cs
ds
incl
dec
sub
inc
push
push
int
stc
cli
mov
cwtl
fnsave
push
sahf
ljmp
pop
mov
sbb
mov
dec
add
and
fidivl
xchg
fbld
mov
ret
pushf
mov
ds
xor
jp
leave
fwait
xchg
dec
push
pop
mov
insb
or
jg
out
mov
and
cltd
dec
hlt
xchg
dec
mov
or
movsb
loope
mov
push
xlat
cmp
fldenv
mov
pushf
or
or
fmull
cmp
popl
leave
sarl
jle
outsb
lds
std
jno
cs
mov
repz
outsb
pop
add
lods
pop
pop
mov
jmp
ret
cmpsl
loope
jnp
adc
shrl
or
push
lahf
test
imul
arpl
mov
and
push
mov
mov
fnsave
out
stos
sub
pop
jo
jns
into
jns
fsubl
aaa
fstp
jge
orl
pop
pop
cmp
pop
in
icebp
push
mov
lahf
pop
jl
popf
adc
sbb
fstpl
cmp
loop
mov
mov
std
pop
add
les
pop
mov
pop
jne
mov
cwtl
pop
jle
push
loopne
bound
jle
lret
jb
and
pop
pop
jge
xchg
insb
test
data16
loope
in
es
loopne
xchg
shll
pushf
int
insb
lcall
out
xchg
aam
push
xor
sbb
iret
pop
cld
insl
jo
xor
sbb
mov
mov
fwait
sub
and
pop
mov
jle
clc
or
xchg
adc
jge
scas
adc
xchg
cmc
fwait
stos
outsb
mov
pop
leave
sbb
aas
ja
inc
aas
bound
jnp
out
orl
dec
popf
jl
repnz
xchg
insl
icebp
repz
dec
cli
test
adc
mov
test
sub
ret
lds
xlat
shlb
add
mov
pop
rol
jnp
xor
push
into
js
mov
inc
sarl
aad
cmc
fwait
movsl
in
jge
insb
mov
sbb
repz
loopne
fidivl
cmp
pop
clc
pop
and
leave
inc
cld
sbb
and
cli
and
and
adc
fs
aas
pop
xchg
jge
or
shlb
insl
push
out
dec
mov
scas
cmp
aaa
jbe
ret
pop
xchg
push
adc
push
es
outsl
shll
or
out
cmp
push
xchg
fsubrl
cmp
cmc
xor
lcall
test
cmpb
pusha
sti
mov
mov
cwtl
in
jg
dec
cltd
lea
int
movl
jg
add
js
xchg
clc
sbb
outsl
frstor
clc
inc
adc
fdivp
or
adc
xlat
jmp
mov
cmp
fldl
std
jle,pn
es
shrb
lret
sub
and
cmpsl
push
loop
mov
inc
jecxz
lods
mov
sbb
pop
push
xchg
cmpsl
imul
mov
xchg
adc
repz
jae
push
pop
fidivrl
pop
adc
jns
jns
jecxz
shlb
outsb
std
repnz
pop
cltd
rcll
daa
cmp
fisttpll
mov
popf
xlat
mov
inc
jbe
sbb
pop
pop
rcr
in
repnz
xchg
push
mov
mov
ja
xor
insb
ss
in
pushf
jnp
cs
scas
lcall
es
inc
pop
sbb
dec
mov
sbb
sbb
mov
add
in
out
sbb
add
les
mov
xor
into
lcall
cmpsb
cmp
mov
es
mov
arpl
mov
imul
scas
and
inc
xchg
mov
mov
add
test
in
mov
add
cmp
fildll
inc
fs
pop
push
push
cmp
mov
shll
dec
xor
sbb
dec
hlt
pop
out
pusha
sti
xchg
jmp
in
sub
or
jmp
jge
out
inc
pop
shll
jbe
jnp
adc
in
repz
icebp
imull
lea
mov
pop
mov
sub
and
movsb
mov
push
xor
cmp
ja
mov
andb
cmc
jg
pusha
sub
mul
div
out
cmp
sub
push
popa
mov
lret
push
add
jg
int3
lcall
loopne
push
shlb
mov
addb
or
adc
sbb
int3
mov
in
inc
sti
cmpb
jle
push
cmp
xchg
and
sbb
xchg
outsl
add
mov
and
rcrl
pop
ror
lahf
or
push
enter
pop
jg
mov
xor
lods
outsb
enter
loopne
add
dec
decb
jecxz
stos
hlt
inc
jne
jmp
mov
jl
sbb
loop
lds
sar
insl
testb
add
imul
scas
out
mov
int3
shlb
bswap
jae
int3
mov
divl
xor
dec
rolb
bound
lret
or
and
inc
nop
mov
hlt
or
jae
fistpl
cmc
rcr
adc
push
test
xor
test
test
gs
call
sub
loop
push
adcl
lds
into
ja
stc
fcmovb
iret
mov
jbe
jns
movsl
leave
mov
cmc
push
fiadds
stc
scas
sahf
cli
dec
dec
inc
outsl
sbb
adc
pop
mov
imul
repnz
inc
daa
or
or
jno
fnstenv
mov
pop
pop
push
movsb
mov
stos
scas
pop
and
xor
adc
aam
jbe
mov
pop
adc
xchg
test
loopne
out
cmp
aad
cmp
push
push
ficoms
adc
cmp
pop
jne
cltd
je
push
pop
jge,pn
or
dec
rcr
cmp
sub
repnz
pop
ret
pop
push
and
cltd
mov
rorl
xorb
in
rcll
sub
and
ret
sbb
aas
sbb
push
lods
daa
rclb
ja
and
mov
mov
daa
mov
popa
imul
lea
cli
negl
orb
sti
and
push
jge
int3
xorb
out
pop
or
cs
or
pop
add
add
and
pop
je
testb
bound
ljmp
mov
inc
sahf
out
mov
and
fiadds
in
mov
pop
daa
shlb
lcall
dec
push
jmp
inc
stc
dec
mov
test
fadds
mov
xchg
es
vxorps
decl
lds
mov
xor
jnp
push
cmp
jmp
daa
popa
repz
sarb
std
cmpsb
in
test
stos
pop
aaa
enter
nop
xor
push
mov
jb
ss
mov
mov
pop
in
mov
bound
jg
out
cli
scas
cld
cmpsl
insb
and
stos
shlb
xor
push
adc
stos
mov
lock
sbb
loop
or
cmpsl
imul
jo
pop
mov
iret
insl
lret
xor
out
mov
mov
movb
jb
inc
push
sahf
or
xor
pop
stos
push
cmp
ljmp
mov
repz
stc
mov
push
cli
int
sarl
push
jae
jg
cmc
test
cs
lods
ja
xchg
fwait
sbb
ret
pop
sub
cmovnp
rep
ss
popl
mov
mov
sub
xchg
add
cli
lahf
stos
fidivl
xchg
insl
sub
add
outsb
pop
or
mov
and
cltd
cli
mov
push
shrb
aad
or
repz
pushf
lds
test
std
jbe
add
add
rcl
xor
into
mov
shrl
jne
ret
scas
sub
divb
jbe
mov
js
insl
lsl
mov
inc
stos
ror
push
pop
movsb
sti
pop
jmp
sub
mov
xor
add
ss
xchg
pushl
jmp
fdivrs
aas
pop
xor
bound
xchg
stos
xor
scas
js
lock
sub
pusha
add
mov
push
aad
mov
orb
xchg
gs
ds
cmp
les
mov
adc
xchg
mov
mov
push
dec
xor
rol
stos
mov
pop
rcrb
enter
repz
sub
xor
sahf
xorl
sbb
jae
pop
and
dec
cmp
call
xchg
add
push
andb
pop
arpl
dec
mov
dec
in
outsb
sub
sarb
sub
mov
xor
das
and
loope
add
lahf
jno
jno
jo
pusha
popf
mov
pop
mov
andl
push
xchg
out
sahf
sbb
mov
add
sub
imul
dec
fidivrl
mov
mov
gs
out
inc
dec
fstp
ret
jecxz
lret
jg
dec
aam
jns
inc
mov
push
sbb
dec
test
pop
arpl
lret
imul
lods
clc
out
repnz
pushf
mov
xor
outsl
mov
das
inc
add
nop
add
cmp
imul
push
and
jns
mov
pop
push
jl
js
into
sarb
popf
or
lods
lret
enter
roll
dec
data16
xor
and
dec
jbe
popf
clc
mov
ret
inc
push
or
sub
pop
or
cmp
lea
clc
pop
push
loop
inc
je
mov
hlt
les
xchg
pusha
sahf
push
nop
jae
add
fbstp
and
int3
jle
jl
lahf
jl
or
xor
sub
arpl
or
in
mov
scas
fisubl
stos
int3
rorl
lea
jge
mov
fistps
or
ret
and
cmp
xchg
mov
xlat
in
fcoml
popa
add
in
movsl
add
push
testl
loop
decl
bound
into
rcll
mov
xor
xlat
or
mov
mov
cmpb
je
sarl
mov
sbb
jb
call
in
sbb
and
mov
cmp
mov
sub
nop
or
mov
das
push
mov
adc
sar
stos
call
cmp
and
pushf
nop
movsb
fdivl
lret
adc
fsts
in
addr16
push
xchg
mov
enter
cwtl
or
jle
scas
sub
in
es
dec
push
mov
dec
inc
test
std
mov
test
jbe
cmpsb
xchg
movsl
scas
dec
add
jle
pop
adc
rolb
lret
sub
stos
cltd
push
inc
jg
pop
imul
imul
adc
sub
sbb
ficomps
scas
jecxz
loop
pusha
inc
bound
mov
sbb
stos
jle
xchg
lock
push
push
add
int
sar
xchg
push
mov
mov
movsb
scas
add
mov
ret
inc
fwait
lods
sub
xchg
add
ljmp
cwtl
jb
inc
adc
xchg
mov
pusha
inc
adc
adc
addr16
jp
in
in
xor
jge
int
lcall
adc
sbb
pop
xchg
outsl
aas
test
mov
ja
mov
cmp
xchg
loopne
sbbl
in
sub
rorb
lret
and
push
inc
and
arpl
aaa
cmp
in
fcom
xor
fisubs
push
pop
les
xor
mov
mov
fistps
addr16
jle
mov
or
cmp
push
subb
call
rcl
das
add
and
mov
jmp
mov
xchg
cli
adc
shll
dec
mov
pop
and
imul
xlat
jecxz
inc
shll
sbbb
mov
and
sbb
mov
add
aad
xor
insl
scas
mov
sbb
popa
imul
push
fucomip
ljmp
push
sti
inc
pop
fisttps
inc
mov
mov
adc
js
int
inc
or
jnp
and
push
bound
xor
mov
mov
scas
imul
sub
pop
or
jmp
inc
outsb
mov
xchg
adc
cmp
jne
inc
xchg
mov
sub
mov
les
stc
fldt
push
pop
push
in
lds
aad
cmc
fisttpll
cmp
addb
sahf
lods
iret
iret
repnz
ret
dec
xor
pusha
in
xchg
test
push
mov
add
fwait
xlat
push
mov
adc
dec
pop
pop
ja
outsl
dec
push
clc
arpl
xor
aad
sbbb
das
jo
pop
add
mov
roll
fwait
mov
out
inc
lock
fwait
mull
addb
jp
aad
sub
mov
imul
xor
gs
mov
add
out
jo
add
jno
and
jbe
cs
add
scas
add
lds
out
inc
cmp
sbb
or
xchg
sub
xchg
add
sub
ljmp
das
ss
shlb
xchg
xor
jl
adc
aad
pop
mov
ret
xchg
mov
push
dec
jmp
xchg
cmpsl
xor
fsubrp
sbb
inc
jns
jp
xchg
mov
test
imul
ljmp
into
and
xor
loope
pop
mov
jl
or
int
inc
movsl
pop
lret
mov
mov
in
xchg
orb
out
xchg
mov
pop
xor
fdivs
push
mov
xchg
jbe
cmp
push
push
mov
pop
inc
cmpsl
push
mov
mov
es
scas
repz
fildl
ja
rclb
cmpsb
sub
lea
pusha
outsl
scas
sbb
inc
in
xor
not
aas
es
push
sub
mov
mov
lret
cltd
stc
out
fcom
or
xchg
pop
pop
and
pop
clc
mov
jl
scas
pop
xor
and
aas
jmp
rorb
daa
popf
shrb
rcl
jp
rcr
inc
inc
movsl
pop
pop
fdivrl
dec
fcomps
ss
xchg
sbb
add
into
mov
jmp
cltd
cmp
add
test
insb
mov
and
adcb
dec
test
add
sarl
leave
movsb
and
es
stos
scas
iret
shrl
jmp
adc
imulb
fsubrp
and
in
ud1
pop
das
das
xor
add
add
aad
ret
sti
xchg
cmp
push
add
in
stos
repz
pop
push
or
mov
das
and
and
adc
jo
pop
orl
mov
jp
xor
lret
xor
je
mov
mov
icebp
je
push
sub
insl
loop
sub
push
jge
xor
inc
and
mov
mov
aaa
aam
popa
aad
ja
loop
pop
enter
out
mov
inc
stc
xor
xchg
jo
ret
and
in
xor
movsb
mov
cwtl
lods
lret
mov
enter
cmp
mov
mov
sti
ret
push
push
xchg
mov
sahf
faddl
jbe
ficomps
test
xor
sti
cmc
in
xchg
dec
pusha
add
push
cs
bound
jle
cld
sarl
sarb
daa
andb
xchg
xor
popf
jl
pop
aad
xor
mov
shrb
jne
sub
xchg
rcr
mov
mov
fsin
pop
mov
outsb
mov
cmp
lods
sub
pop
in
sbb
xchg
orb
hlt
xlat
push
std
inc
popf
sbb
xchg
rorl
cmp
in
fs
xor
aam
rorb
int
sub
sub
mov
sbbl
nop
xchg
das
mov
mull
ljmp
cmpb
subb
mov
cwtl
or
mov
insb
popa
mov
sbb
pop
sub
jno
mov
rorl
pop
push
pop
pop
xor
cmc
inc
cltd
out
xchg
cmp
jno
fidivrl
sub
pop
cmp
push
imul
ljmp
sbb
dec
sbb
or
cmp
lret
xchg
or
inc
outsb
xchg
pop
lret
mov
imul
in
sbb
mov
lret
or
xchg
sti
enter
in
fisttpll
pop
into
and
pop
and
push
daa
test
jae
mov
and
jae
pop
gs
xor
call
mov
cmovnp
pop
xchg
test
out
arpl
ficoml
sahf
enter
test
frstor
lcall
or
dec
inc
cmp
mov
test
dec
lods
movsb
sti
scas
outsb
sub
popa
xchg
sub
dec
rolb
mov
mulb
push
xorb
test
mov
decl
bound
mov
icebp
int
mov
test
cmp
mov
dec
mov
cli
lock
loope
mov
gs
fdivs
mov
andl
lahf
dec
adc
mov
sub
sbb
adc
mov
mov
xor
pushl
imul
out
mov
mov
jl
int3
sub
stos
inc
cmp
mov
shlb
in
nop
and
dec
fwait
jmp
repz
adc
das
push
insb
lods
add
xchg
lea
fstpl
and
cmp
sbb
cmp
cmp
push
sbb
outsb
push
out
call
and
jb
leave
out
or
push
lods
sbb
push
bound
xor
cmp
xor
das
dec
dec
push
insl
sbb
push
push
adc
test
xor
ljmp
cmc
mov
xor
sbb
cli
dec
out
and
je
pop
rcll
popf
pop
insl
mov
ja
mov
dec
movb
scas
out
add
pop
push
subl
push
enter
sub
jle
push
cwtl
cld
push
xlat
sbb
add
in
es
fcompl
outsl
pop
add
jae
lahf
mov
pop
movsl
leave
stos
pop
cli
nop
add
test
loopne
js
xchg
pushf
jecxz
out
outsl
sbb
jb
shrl
test
lahf
xchg
adc
adc
sbb
icebp
mov
aam
movsb
xchg
sub
into
fsubr
xchg
clc
add
cmpsl
pusha
dec
inc
test
ss
int
inc
and
mov
sbb
outsb
pop
push
xlat
push
aam
mov
xchg
pop
inc
mov
sbb
jbe
pop
jne
adc
in
cmp
cmp
sub
push
leave
stos
ror
fmuls
mulb
enter
lods
ret
sbb
imul
xchg
mov
cs
inc
ss
ss
outsl
into
insb
cmp
ljmp
enter
sbb
adc
xchg
mov
inc
xchg
nop
shrb
cmc
mov
sarb
imul
rorl
pop
push
xor
sub
stc
xchg
mov
push
movsb
xchg
test
and
fcoml
sub
icebp
mov
inc
mov
das
je
pop
aad
pusha
push
add
sub
aam
mov
inc
add
scas
into
fnsave
mov
cmpl
push
mov
leave
xor
mov
fwait
pop
pop
push
ljmp
dec
rol
sub
push
push
mov
incb
add
mov
pop
aaa
jns
push
scas
dec
pop
inc
pop
cwtl
or
sub
dec
or
xchg
hlt
adc
mov
hlt
add
jns
mov
push
mov
push
sbb
rcrl
inc
cld
das
loope
in
ficoml
int3
xor
loope
sbb
pop
sub
push
cmp
mov
mov
jbe
ja
enter
popa
stc
std
mov
jno,pn
jnp
lret
xchg
call
cmpsb
adc
popf
pop
sti
cmpsb
scas
out
mov
mov
jno
lds
aad
push
and
sub
and
sbb
mov
stos
sub
add
cld
lcall
test
pop
inc
lods
shlb
daa
sub
sub
xchg
stc
in
mov
enter
jne
test
ss
test
mov
out
jbe
aad
cmpsl
adc
or
lea
dec
dec
je
inc
xchg
test
call
ljmp
lret
cmp
push
push
add
gs
inc
cltd
test
cwtl
dec
cwtl
andl
jb
xchg
xor
clc
adc
in
mov
lret
mov
jnp
adc
add
ljmp
movswl
inc
mov
scas
les
or
shll
sbb
insl
pop
out
pop
stc
nop
addr16
ret
mov
xor
mov
pop
arpl
jge
out
xchg
adc
out
out
and
pop
insb
push
mov
clc
add
cmp
shl
sbb
push
fwait
add
out
enter
lcall
ljmp
mov
aaa
arpl
mov
fldl
notl
add
cmp
negl
xchg
mov
out
mulb
push
push
cli
sahf
out
call
inc
mov
push
popa
std
mov
xchg
cmp
adc
cld
sbb
adc
dec
mov
in
dec
push
mov
cmp
fwait
sti
dec
adc
cmp
adc
icebp
sarl
and
inc
inc
xchg
adc
xor
pop
xchg
das
jb
jo
stos
enter
cs
and
adc
or
and
sub
nop
xchg
frstor
fnstenv
xor
insb
xor
jle
xchg
testl
sub
xlat
pop
push
pop
cmp
addr16
dec
pop
testb
cmp
mov
or
dec
sub
loopne
lds
pusha
movsl
inc
outsb
or
sahf
pop
insl
and
sub
mov
push
icebp
sahf
bound
dec
sbb
adc
dec
cmp
ficoml
andb
addr16
push
sub
xchg
lcall
sbb
or
mull
fs
pause
or
mov
adc
ja
inc
flds
xor
adcb
push
clc
jbe
pusha
adc
enter
adc
jbe
fnstenv
cmp
lock
cs
bound
xorl
adc
xor
dec
lret
stc
lods
pop
outsl
fwait
inc
out
stos
nop
mov
lock
into
sbb
outsl
mov
rcrb
add
adc
test
lcall
mov
mov
loop
fadds
call
pop
sbb
fldl
xchg
js
out
ret
push
insl
sbb
push
int3
xchg
orl
jle
xchg
push
mov
bnd
xchg
dec
clc
nop
push
fucomi
sbb
icebp
mov
pop
lahf
adc
mov
mov
jl
or
mov
dec
call
arpl
stos
inc
mov
stos
sub
bound
dec
mov
sbb
daa
in
shrl
sbb
push
xchg
cmpb
notb
cmp
mov
imull
cmp
data16
dec
sbb
repnz
rcrb
sub
pop
and
ffreep
mov
out
std
add
lcall
xor
or
ret
fistpl
mov
pop
and
lock
rolb
lret
sbb
les
xor
xchg
sbb
mov
out
jo
sbbl
clc
or
pop
xchg
adc
mov
dec
into
lret
cltd
int3
lret
aam
in
xchg
push
call
and
lcall
push
dec
dec
cwtl
push
cmp
add
mov
dec
or
xchg
pop
cmpsb
xor
stos
jno
mov
pop
data16
cmp
cmpsl
xor
test
xchg
cmc
push
std
inc
gs
pop
push
leave
rorb
mov
ds
sbb
ljmp
test
icebp
push
xor
js
mov
hlt
xchg
imul
push
inc
out
lods
xlat
andps
testb
sub
cmc
xor
sbb
mulb
sbb
or
fldt
jb
test
jg
in
inc
pop
comiss
cmp
sahf
xchg
pusha
out
cmp
test
sub
in
sub
mov
lahf
ror
movsl
jle
cmp
sbb
pop
jl
jne
pop
lock
xor
pop
dec
in
mov
ret
fnsave
xchg
push
xchg
jns
push
jb
cs
popf
mov
dec
mov
lret
ss
test
fisubs
dec
jae
add
inc
scas
rclb
inc
mov
cld
xor
push
jecxz
mov
mov
adc
dec
popf
cmp
clc
cltd
bound
adc
cmpsl
clc
pop
jl
inc
sbb
testl
les
mov
or
movsl
jno
stc
in
test
mov
inc
xor
lea
xor
outsl
push
push
mov
jg
shll
imul
xorb
lret
mov
out
xchg
inc
cwtl
add
bound
enter
xor
mov
mov
push
inc
push
sbb
rorb
and
mov
cltd
ret
sbb
sub
das
insb
andb
mov
out
dec
lods
xor
jno
xchg
aaa
add
aam
xchg
pop
aad
mov
or
jne
pop
fs
gs
in
pop
enter
pop
out
cmc
dec
outsb
dec
sub
jl
sti
xor
cmp
cmpsb
scas
xlat
xchg
cmpsl
mov
mov
pop
dec
pop
add
and
fidivl
and
add
pushf
mov
test
in
scas
mov
jle
jnp
xor
xchg
mov
sub
fcmovb
fs
shlb
pop
sub
pusha
insl
push
loope
xchg
inc
lahf
jecxz
adc
add
or
lock
xchg
ffree
loope
jge
cmp
xor
insb
push
inc
jg
xchg
xchg
nop
popa
int3
pop
rcr
mov
aaa
test
pusha
jne
dec
mov
hlt
xchg
dec
popa
fldenv
mov
mov
or
addr16
in
data16
shl
mov
aas
xchg
fildll
jmp
xchg
pop
cld
addr16
movaps
in
inc
xchg
mov
inc
es
in
push
xor
and
mov
or
lods
rcr
mov
inc
mov
mov
push
js
pop
mov
and
push
lret
data16
insl
rorb
mov
lds
sub
inc
push
add
dec
dec
into
add
imul
faddl
in
dec
mov
nop
sbb
dec
fdivr
xchg
les
idivl
mov
push
inc
movb
mov
mov
test
nop
adc
cmpsl
jecxz
lods
sbb
pop
mov
or
mov
aaa
cld
jecxz
pusha
ds
stos
xor
push
test
mov
xchg
fsubp
popa
mov
daa
int3
fmuls
out
adc
jae
dec
jp
and
aas
je
cmp
or
lea
cs
mov
test
adc
mov
scas
sbbb
mov
in
inc
or
out
es
ds
out
fisttpl
fadds
cmp
js
sti
mov
mov
jnp
ss
in
notb
xchg
fidivrl
push
inc
jne
out
push
xchg
dec
xor
pusha
stos
out
jnp
cmpb
jg
test
shrl
add
andl
repz
mov
or
push
pop
dec
push
aam
sbb
xor
or
sub
mov
dec
jg
inc
or
mov
aad
bound
std
ds
lds
nop
into
inc
fwait
imul
jno
insl
adcl
jp
cmp
repnz
dec
sbb
xchg
mov
aad
add
adc
mov
loop
out
aas
push
loop
aaa
movsb
jne,pt
jne
daa
popa
imul
adcb
push
shlb
push
and
xchg
pop
iret
out
inc
or
rcl
xchg
pop
enter
and
call
shrb
push
xchg
adc
rcll
inc
sub
jl
mov
jmp
mov
pop
fwait
popf
in
cmp
xor
into
fidivrs
sbb
sub
and
cmp
imul
loopne
mov
sub
dec
mov
clc
outsl
inc
dec
pop
inc
cltd
cvttps2pi
data16
enter
xchg
lret
mov
mov
fbld
xlat
cwtl
loopne
shlb
out
add
lea
fildll
lret
scas
mov
fs
lret
pop
cmp
jg
rcll
add
rol
xor
jecxz
jge
int3
push
push
mov
or
cmp
cmpsb
clc
fwait
out
mov
sbb
hlt
stos
jge
sbb
dec
sbb
jb
ret
in
leave
add
arpl
arpl
out
dec
pushf
sub
add
push
lahf
sub
das
or
pop
pop
dec
sbb
shlb
xor
aad
daa
xor
xor
sbb
sbb
push
adc
lahf
fisttps
mov
insb
shl
rolb
inc
shll
arpl
sub
ljmp
and
cmc
xor
and
push
adc
jp
hlt
mov
ret
xlat
jle
adc
mov
lods
mov
and
or
push
mov
into
xchg
xor
inc
es
xchg
ds
test
mov
leave
cmp
fidivrs
mov
xor
mov
and
in
popa
dec
mov
push
xor
rcrl
inc
sub
and
je
xchg
mov
insb
inc
xchg
push
shl
cld
or
push
add
sbb
popa
jecxz
xor
cmp
in
mov
xchg
push
nop
bound
lods
inc
jmp
jge
rorl
packuswb
inc
adc
daa
jle
push
jo
es
sbb
cs
adc
fidivrs
out
sbb
push
push
fmull
xor
les
pop
lods
fistl
js
sub
imul
sbb
sahf
jb
jbe
xchg
jbe
mov
dec
add
test
pop
adc
adc
jb
inc
in
lods
mov
mov
pusha
inc
or
inc
jge
jg
jle
inc
pop
adc
or
rcl
lods
cli
and
mov
pop
int
mov
xchg
cmpsb
sub
fwait
test
cmp
cmpsl
hlt
outsb
pop
out
add
pop
push
popa
cltd
mov
pop
jmp
int3
cmpsb
xchg
or
loop
mov
ret
mov
or
push
adc
pop
pop
or
adc
js
fisttps
incb
jno
ss
loope
inc
stos
dec
loopne
pop
xchg
mov
icebp
mov
outsl
sbb
xchg
sti
inc
out
xor
push
rclb
pop
popa
sbb
push
push
popa
dec
jnp
sbb
mov
ds
into
mov
into
jbe
mov
lods
sbb
lcall
sub
and
or
mov
pop
mov
pop
mov
scas
out
mov
loopne
outsl
xchg
cmc
out
adc
insl
push
adc
mov
pop
jo
pop
lods
xor
xor
and
sbb
fldlg2
pusha
pusha
jns
sub
cmc
popa
xor
into
mov
mov
inc
xchg
mov
mov
iret
pop
add
loope
insl
roll
or
stc
ss
cs
shrb
shll
mov
rorl
xlat
ds
repnz
add
nop
cmp
bound
cmc
jl
or
xor
lods
inc
add
lcall
int
xchg
mov
out
std
mov
pop
je
xor
pop
cmc
negb
mov
cmc
in
sbb
pop
js
sbb
mov
sbb
dec
and
push
inc
jg
nop
adc
add
mov
bound
xchg
sbb
mov
sbb
mov
lcall
push
mov
in
neg
popf
in
leave
cmp
mul
and
imul
cmp
cli
inc
test
icebp
lods
pop
xchg
or
xor
ljmp
addr16
push
xchg
leave
xchg
cmp
out
leave
cmp
ds
ljmp
push
daa
dec
push
jae
movsl
cmp
fsts
push
les
mov
leave
sub
cmp
push
lret
test
loopne
data16
aam
mov
jo
cmp
in
mov
jbe
test
out
test
jnp
enter
mov
sbb
out
xor
jle
inc
test
mov
mov
cmc
imul
stc
xor
pop
in
les
and
imul
out
and
jl
jbe
mov
sbbb
sbb
adc
push
mov
jb
cli
jg
dec
rclb
fimuls
jl
shlb
push
popa
cmp
jb
mov
fld
popf
lds
sub
xchg
fcompl
cmc
addr16
xchg
shll
pmuludq
lcall
pushf
or
push
jg
cmp
rcl
loop
dec
iret
pop
pop
sbb
rolb
stc
add
aas
stc
test
in
cmp
push
and
lock
sbb
fistpl
sbb
inc
mov
mov
decw
jb
or
shrl
repz
cmp
fxch
add
cltd
xor
stc
inc
xchg
adc
fs
daa
jl
ss
cmp
sarb
dec
ror
mov
outsl
xor
pop
sahf
push
cld
or
sbb
icebp
out
mov
test
stos
es
addr16
aad
jnp
je
jg
js
adc
aam
loope
imul
pop
mov
pop
mov
pop
rcl
or
xchg
dec
jbe
stos
rolb
dec
mov
mov
cmpsl
lds
or
out
xor
in
mov
dec
xchg
les
bound
ror
pop
push
nop
stc
cli
ds
mov
dec
xor
push
cmpsl
sahf
inc
adc
inc
xchg
jne
mov
pushf
push
sti
mov
pop
mov
pushl
mov
out
imul
xlat
lahf
cmp
popf
gs
pusha
adc
pop
pop
or
adc
cld
sbb
xchg
loopne
cmp
negb
and
xlat
jae
jp
mov
inc
clc
fnstenv
aas
inc
dec
fwait
sub
ret
repz
adc
stos
sbb
mov
push
cmp
inc
or
loope
push
sbb
push
mov
rorl
gs
dec
test
xlat
movsl
mov
jg
sbb
push
pop
repz
and
in
sbb
xchg
aam
lock
pop
push
lcall
fs
push
mov
mov
push
iret
inc
cmp
mov
add
pop
movsb
add
out
mov
hlt
lret
xor
aad
dec
jge
ss
mov
jb
jmp
testb
imulb
and
cmp
xchg
sub
push
pop
sbb
adc
push
xchg
sub
scas
inc
jl
mov
push
outsl
in
roll
inc
sbb
push
xor
popa
mov
push
sbbb
addr16
int3
mov
mov
dec
aas
out
push
fcomps
xchg
cmp
fcoml
cmpl
test
push
push
mov
sbb
ss
and
hlt
int3
jne
and
dec
bound
dec
jecxz
pop
rorl
lcall
jno
rolb
and
shlb
scas
fnsave
testl
push
or
sub
bound
popf
cmp
push
and
jb
mov
nop
add
gs
mov
sbb
imul
mov
iret
sbbb
aad
stc
xchg
sub
movsb
mov
sub
das
test
loopne
inc
push
push
and
mov
xchg
in
add
inc
fiaddl
push
repnz
push
mov
mov
repz
add
loope
push
jmp
mov
rorl
sahf
stos
lods
xchg
cwtl
mov
and
iret
pop
lds
fs
movsb
lret
shrb
adc
test
gs
movsb
add
inc
or
int3
xchg
fidivrl
pop
push
js
jb
movsl
movsl
aam
add
xor
mov
cmp
movsb
pop
out
scas
inc
xchg
fmulp
or
xchg
ja
add
add
filds
clc
int3
ret
les
pop
jmp
lods
js
movsl
fs
fs
fsubr
sbb
adc
inc
push
cmp
fistpll
jl
inc
mov
or
inc
rorb
es
inc
or
pushf
cmc
xchg
mov
andl
sbb
mov
and
fcmovnb
lea
inc
das
iret
pop
push
pusha
dec
or
repnz
push
mov
jbe
push
and
mov
loope
test
out
pushf
pushf
adc
dec
rcll
mov
jg
adc
mov
add
sbb
sbb
cmp
push
je
dec
mov
pop
jmp
push
pushf
mov
rolb
test
les
in
std
ret
jb
sbb
sbb
xchg
pop
rolb
loop
mov
sub
imul
jp
inc
xchg
faddp
repnz
movsl
dec
and
das
addr16
inc
xchg
mov
dec
jae
cmp
dec
add
repz
cwtl
inc
add
xor
ja
fdivrs
out
and
jae
inc
arpl
inc
sub
les
in
cwtl
rolb
pop
jg
and
loopne
xorl
shll
iret
jle
fstpt
imul
dec
outsb
mov
sti
subl
jnp
dec
mov
mov
rcrb
dec
lock
cmp
repz
xor
leave
push
test
bound
push
insl
adc
into
sbb
and
shrl
jecxz
mov
test
cld
aam
ds
scas
in
sub
pop
pop
jmp
fists
sti
xor
fs
sub
clc
pop
jl
sahf
repz
stos
cmpsb
sbbb
or
cmp
std
mov
fwait
lods
mov
xchg
xchg
sub
std
ds
cld
ljmp
stos
pop
adc
push
inc
jmp
mov
cwtl
mov
mov
xor
sub
mov
jno
lret
aaa
jnp
cmp
aad
cs
in
das
testb
shr
push
add
jp
cmpsl
call
mov
cmpb
add
adc
daa
cmp
mov
iret
cmpsb
flds
push
inc
inc
or
add
xchg
movsb
shlb
loope
lcall
xor
dec
jb
jns
incb
pop
data16
jno
out
shll
mov
ret
inc
dec
mov
sub
shlb
sbb
sub
mov
sub
stos
mov
mov
or
jae
out
negl
pop
or
adc
mov
stos
rorl
push
fdivl
pop
jle
lahf
dec
push
or
bound
nop
pop
cmpsb
test
lock
lods
inc
mov
xlat
xchg
insl
sub
popf
mov
insl
repnz
cmpsb
mov
stos
scas
cltd
push
jge
lret
int3
cld
mov
testb
adc
shlb
leave
add
push
ficoms
or
pop
cmp
out
xchg
jle
or
rol
cs
setno
inc
push
mov
mov
std
jmp
in
shl
sti
jmp
cmpsl
ljmp
cmpsl
lret
fwait
rdtsc
jbe
sarb
pop
rcl
js
sti
fistps
out
cwtl
stos
imul
inc
hlt
push
clc
adc
inc
je
repz
lods
dec
fstpl
mov
out
lcall
adc
push
dec
add
cmp
xchg
rcr
cli
mov
sti
xor
incb
popa
out
ret
sbb
movsb
or
push
add
nop
loope
in
sub
std
repz
cmp
pop
cmp
push
lret
mov
aaa
inc
sbb
mov
push
mov
jae
shrl
fldt
add
xor
mov
pop
hlt
dec
sub
shlb
push
out
scas
les
out
cmp
jp
dec
stos
jl
xlat
stc
mov
stos
add
push
dec
dec
push
xchg
and
out
addl
cmp
push
mov
je
repz
fdivr
and
dec
lock
gs
test
push
fs
scas
sbb
inc
dec
xchg
mov
dec
data16
mov
loopne
push
jmp
popf
stos
jnp
rol
cmp
sbb
push
mov
fmul
int
mov
std
sbb
dec
adc
lds
add
in
mov
and
jmp
jbe
scas
add
lret
sub
or
jnp
mov
push
ficomps
push
mov
dec
inc
shlb
adc
xor
jecxz
aam
ss
inc
dec
inc
jecxz
mov
pop
aaa
push
pop
xlat
imul
cwtl
jnp
cmpsl
jp
cmp
std
fldl
dec
mov
test
mov
push
mov
pop
out
inc
mov
lcall
add
sbb
fistl
jne
fmul
cmp
pop
ja
and
or
je
cmp
push
sahf
jge
sub
pushf
ja
or
ss
dec
lret
mov
pusha
mov
fwait
ret
into
loope
or
xor
mov
push
mov
xor
push
lea
jle
xor
and
rcr
enter
dec
test
lret
das
sub
lret
test
pop
mov
arpl
jp
inc
test
jmp
sbb
add
pop
lea
inc
fmull
mov
mov
push
mov
jmp
pop
mov
gs
mov
mov
shlb
mov
adc
jns
jecxz
push
mov
or
cltd
data16
stos
stos
stc
mov
arpl
xor
mov
out
mov
orl
dec
ljmp
popa
cmp
and
lret
test
jno
pushl
xor
aam
into
mov
xor
leave
rcrb
fs
xor
rolb
fists
divb
push
incl
stos
or
cmpl
sub
addr16
test
mov
xor
adc
dec
or
jp
das
rol
mov
test
pop
fnstsw
jecxz
xchg
jmp
push
ret
jecxz
aad
cwtl
stos
clc
icebp
in
inc
mov
dec
movsb
insl
pop
and
inc
fisubrs
sarb
sub
lods
movsl
dec
xchg
in
sbb
ljmp
in
cli
fs
adc
cs
fildl
call
nop
push
pop
mov
adc
andl
or
mov
push
fbstp
loope
icebp
adc
jle
sub
gs
jnp
out
sbb
adc
js
out
adc
ret
or
mov
outsb
add
in
pop
testb
ret
mov
movsl
std
data16
and
jle
jns
pusha
cltd
xchg
je
and
rcrb
dec
mov
cmpsb
adc
jmp
or
imul
adc
rclb
add
or
clc
add
xor
add
add
ret
repnz
cs
push
test
mov
jge
sbb
mov
iret
sub
fbstp
bound
std
sbb
movsb
hlt
out
mov
add
push
cmp
adc
mov
andb
insb
outsl
jle
shl
sbb
clc
inc
inc
push
add
sub
push
cmc
and
bound
cltd
add
mov
incl
cmp
and
lock
adc
ss
loope
xchg
adc
pusha
mov
cmp
pop
xchg
jae
cmpsb
loop
shld
push
repnz
mov
dec
pop
and
test
pop
outsl
fst
inc
into
push
push
dec
call
sub
data16
jp
pop
in
pop
hlt
lcall
shlb
lret
and
in
in
lea
test
ret
ret
push
inc
ret
lock
jne
lahf
pop
or
pop
dec
pop
aad
imul
movsb
and
rcrl
clc
mov
add
sarb
xor
test
je
xchg
stos
inc
xchg
sub
jbe
jp
insb
mov
adc
mov
cmp
pop
mov
test
add
rorb
jg
dec
mov
or
dec
movsb
orb
jl
mov
adc
cmc
in
test
out
cmp
int3
arpl
test
imul
and
adc
or
popa
pop
fstl
into
cmp
adc
xchg
mov
add
push
call
sub
mov
xor
pop
lods
dec
test
cmp
scas
scas
aad
data16
push
orb
pusha
xchg
cmpb
jp
jnp
ss
mov
add
mov
fs
inc
pushf
lret
das
push
sbb
cmp
sbb
mov
push
std
adc
outsb
sub
jbe
ds
add
and
stos
cmc
in
test
cmp
in
jmp
inc
adc
ljmp
cmpsl
stos
test
adc
mov
cld
fwait
shlb
jle
cli
in
mov
clc
and
push
pop
fwait
or
fwait
xchg
rolb
mov
nop
sahf
ret
movsl
mov
arpl
or
dec
xor
pop
test
push
mov
out
mov
scas
shlb
stos
xchg
lea
mov
test
dec
mov
sbbl
or
adc
sbb
mov
in
ljmp
mov
cltd
pushf
mov
idiv
or
cwtl
sbb
in
mov
sbb
mov
stos
mov
sbb
cwtl
cmpsl
inc
dec
mov
imul
xor
jp
pusha
xor
lret
dec
xchg
dec
sti
jns
and
pop
divl
fsts
mov
sub
cwtl
int3
pop
jl
mov
cmp
xchg
ret
ret
popa
push
cmp
xchg
fmuls
xchg
clc
shr
pop
ss
aad
add
in
sarl
js
cmp
daa
jl
mov
les
leave
lcall
or
add
inc
cmpl
test
in
push
sub
cmp
push
xor
mov
lods
repz
xor
divl
pop
xor
repz
fcomi
lods
testl
test
mov
and
pusha
jnp
cmpsb
loopne
xchg
mov
jmp
mov
pop
ds
xchg
ret
inc
cmp
in
mov
push
mov
gs
mov
push
rcr
aaa
cmp
ret
mov
mov
adc
cmpb
fcmovnbe
xor
lcall
flds
fldl
pop
ljmp
xchg
or
mov
insb
mov
call
add
inc
sbb
in
scas
mov
pop
popf
or
xchg
outsl
jp
xchg
test
xor
dec
jno
mov
jmp
adc
sub
leave
xor
pop
xorb
incb
or
lret
pusha
cmp
mov
out
inc
addl
int3
out
xchg
pop
pop
movsl
pop
push
out
lds
xor
js
movsb
rclb
sbb
adc
push
push
push
mov
ja
sbb
clc
push
sub
in
inc
cmp
loop
outsl
fwait
push
stc
addr16
pop
loopne
pop
movsb
mulb
jnp
mov
mov
movsb
xorl
fisubrl
loopne
push
mov
and
sahf
ljmp
and
adc
icebp
ds
ja
or
inc
cmp
sahf
or
cltd
mov
lret
sbb
push
syscall
popf
jp
jl
inc
sub
cmpsl
mov
test
push
xchg
fnstsw
pop
subl
clc
mov
mov
shrb
and
adc
std
aas
mov
in
repnz
movsl
dec
xor
aam
int
fcmove
insl
cwtl
sarb
daa
inc
dec
ja
ret
sub
or
imul
ja
push
dec
ljmp
and
adc
add
sub
mov
outsl
or
repnz
lahf
outsb
ljmp
xchg
xchg
push
mov
insb
cld
js
or
cmp
mov
cmc
jae
icebp
sub
nop
cmpsb
jnp
sbb
lahf
xor
inc
and
cwtl
adc
fwait
sub
jmp
add
subl
std
int
inc
lock
out
mov
mov
lock
cmp
jmp
sub
cmp
dec
or
adc
dec
out
ret
sub
pop
mov
jns
jbe
fisubrs
push
push
mov
in
in
jbe
popa
push
leave
jmp
sub
in
dec
das
in
gs
pop
negl
imul
and
xor
push
in
jecxz
push
xchg
mov
push
mov
cltd
rorl
scas
arpl
insb
jg
inc
arpl
shl
fisttpl
cmpsb
jo
popf
pop
sub
stos
sahf
es
fcoms
mov
loope
stos
test
inc
or
inc
pop
jo
or
and
addb
mov
test
lds
push
imul
outsb
mov
inc
sub
mov
fcoms
mov
test
ret
shl
mov
mov
cmpsb
scas
or
fs
lds
xchg
cs
push
jecxz
in
lea
adc
lret
xchg
mov
sbb
pop
outsb
aam
mov
fistpll
in
mov
loop
out
aaa
iret
or
and
xchg
xchg
dec
pop
jns
fistl
mov
pop
je
xchg
in
mov
add
cmp
mov
sbb
xor
ljmp
fdivrs
mov
loope
ds
mov
imul
or
mov
jo
jle
rcl
sub
shl
xchg
movsb
cmpsl
sti
add
cmp
xor
mov
xor
inc
jae
cli
xchg
jg
dec
fisubrs
or
lods
xchg
dec
sahf
sub
cmpsl
lcall
cmp
test
pop
and
jb
int
mov
aam
dec
test
sub
cmp
fwait
inc
sarl
cmpsl
mov
push
push
cld
lods
in
movsb
jmp
jnp
mov
cmpsb
loopne
loope
js
enter
dec
lahf
dec
jg
mov
jg
xchg
mov
ds
into
lret
gs
jo
xchg
outsb
sbb
mov
cmp
mov
into
je
pop
add
sbb
inc
mov
pusha
mov
repz
jbe
icebp
cld
fisubrl
pop
cmp
adc
inc
ss
jge
dec
lcall
jecxz
outsl
inc
or
das
outsl
cld
sub
shll
jns
xchg
push
jno
lods
add
push
sub
imul
push
movsb
or
push
movsb
cmp
hlt
inc
or
mov
mov
or
pushl
in
scas
xchg
push
loop
aas
rcll
mov
daa
rorl
and
or
lahf
pop
mov
fwait
inc
jecxz
lret
loope
inc
mov
mov
shlb
jp
jge
cwtl
out
lcall
out
out
mov
std
inc
mov
popf
mov
sbb
mov
aad
test
stos
xchg
mov
xchg
rorb
lock
xor
movsb
sbb
mov
add
and
aas
cmp
popa
stc
aas
mov
jmp
sti
adc
and
ds
negl
insb
inc
data16
test
jmp
adc
das
push
enter
add
mov
lea
scas
ror
dec
into
scas
imul
scas
sbb
push
cmp
out
jmp
mov
int
dec
jne
cmp
fwait
cld
outsl
inc
jmp
xlat
sbb
lds
test
in
pop
pop
mov
mov
repz
xchg
shrb
ds
imul
loop
dec
in
sbb
dec
daa
fcomps
add
mov
sub
mov
fbstp
jno
sbb
mov
int
andb
daa
mov
sbb
jg
cltd
or
mov
sarb
subl
negb
sbb
xchg
push
mov
xor
pushf
push
call
mov
xchg
in
mov
lea
mov
cmp
in
jns
aam
cltd
test
sahf
dec
in
mov
mov
push
sar
sahf
aam
adc
mov
pop
mov
adc
frstpm(287
jbe
xor
jmp
dec
rcrb
jp
fsubr
mov
xor
fistpll
xchg
addr16
ret
dec
dec
push
imul
aam
inc
sub
pop
push
cmpsb
ss
or
in
scas
push
xor
lahf
push
add
insl
int
roll
daa
sub
leave
lods
mov
cld
jnp
mov
mov
and
imul
test
mov
cwtl
fwait
push
insl
mov
mov
and
int
dec
inc
xor
fs
mov
mov
jmp
dec
rorb
stc
rcrl
adc
or
xor
nop
pop
pop
cmp
scas
and
push
les
inc
scas
lds
fnop
pop
adc
outsl
ret
inc
cmp
out
fstpt
mov
xchg
or
inc
inc
push
icebp
call
in
mov
sbbb
test
mov
sbb
push
xor
cltd
pop
lahf
movsb
cmpsb
rcrb
into
arpl
push
xor
int3
lret
cmp
pusha
test
inc
jg
push
mov
sbb
jnp
dec
insb
or
pop
roll
or
push
mov
sub
mov
insl
pop
das
xchg
dec
fistpl
lods
mov
and
stos
xchg
popf
out
sub
int
inc
cwtl
sbb
xchg
cmpsb
add
rorb
mov
jecxz
sbb
or
test
into
aas
xchg
inc
shl
pop
mov
add
lahf
ficoml
mov
or
iretw
cmpsl
js
xor
into
mov
adc
in
lret
imul
mov
mov
insb
ss
mov
imul
cmpb
xor
or
xchg
mov
pop
shl
inc
mov
aaa
push
sbb
sub
mov
jle
and
add
insl
arpl
push
or
xor
sub
jne
mov
inc
pop
jbe
clc
push
call
add
inc
inc
mov
sub
sbbl
call
push
sub
mov
pop
jne
hlt
add
test
fucomp
mov
loopne
and
out
inc
jb
xor
es
xor
or
push
push
or
xchg
mov
add
xor
arpl
loope
add
mov
push
pop
or
mov
leave
and
jnp
ja
dec
stc
adc
xor
out
std
jecxz
dec
fisttpll
scas
fwait
js
cmc
cli
imul
cmpsb
fsubr
lret
mov
lea
inc
repnz
lcall
pusha
mov
mov
xchg
cmp
cmpsb
adc
sbb
xor
lcall
hlt
lea
xchg
dec
push
stos
add
aam
mov
jl
pop
adc
movsb
push
inc
push
mov
sete
rcrl
jl
insb
je
xchg
frstor
dec
xor
sub
js
fists
jo
xchg
xchg
cmp
and
and
leave
xor
inc
enter
pop
push
outsl
cltd
pop
sbb
cmpl
rcl
iret
arpl
pop
mov
mov
push
out
out
mov
test
pop
push
push
imul
fcomip
pop
xchg
gs
sbb
push
mov
insb
jl
in
jbe
loop
cwtl
xchg
neg
push
adc
sub
mov
popa
mov
mov
punpckhdq
add
cltd
pop
stos
hlt
das
ss
jns
adc
mov
dec
adc
mov
and
dec
inc
sub
roll
outsl
inc
ss
mov
in
popa
lahf
pop
xchg
insb
xor
cwtl
sbb
inc
sbb
jne
subb
xor
outsl
lret
jne
or
addr16
lods
and
mov
imul
jno
sub
and
outsb
xbegin
mov
adc
mov
xchg
jp
cmp
jg
mov
pushf
sbb
xchg
cli
orl
inc
push
mov
mov
xor
mov
mov
sub
lock
imul
lahf
and
inc
gs
sbb
scas
cmpb
mov
nop
lea
add
addr16
sub
inc
jge
push
aam
ljmp
insb
shll
lcall
add
lds
movsl
in
fisubrl
jo
cli
loop
dec
pop
repnz
pop
mov
jmp
dec
adc
daa
add
xchg
test
push
or
jnp
hlt
fimuls
inc
ret
je
lods
jbe
xchg
sbb
pop
inc
push
sbb
mov
fwait
dec
adc
sub
sbb
stos
mov
lea
mov
push
xor
popf
pop
aam
int3
fildl
add
pushf
cmp
add
cmp
xor
in
push
dec
jno
lret
lods
cmpsl
icebp
enter
push
sub
xchg
ds
push
xchg
xchg
push
xor
dec
aam
out
inc
mov
mov
lcall
mov
xor
push
aam
data16
adc
mov
pop
cmp
push
add
push
inc
dec
fldenv
shlb
or
xchg
mov
cmpsl
and
ficoml
mov
repnz
test
push
fwait
outsl
data16
rolb
xchg
jp
enter
ret
jo
sub
cmp
aas
mov
push
ret
sub
mov
mov
mov
or
imul
xor
inc
xchg
jno
mov
sub
or
idiv
lds
jne
cwtl
ret
stos
inc
icebp
sub
nop
je
push
insl
mov
es
imul
ret
push
bnd
bound
into
outsl
mov
loope
icebp
or
fdivr
pop
sub
xor
jo
in
cmpsl
jnp
popa
sti
loopne
jnp
sbb
xchg
incl
fnstsw
in
inc
xchg
arpl
jg
idivl
dec
ja
inc
sub
enter
decb
pop
ficompl
int3
xlat
data16
orb
fistps
lock
cmp
dec
mov
or
sub
sbb
dec
jb
sbb
mov
fcmovnu
inc
gs
lods
imul
data16
push
jnp
cmpb
nop
add
lret
xchg
xchg
pop
into
cmp
inc
and
insl
loopne
stos
add
popf
sbb
lods
sbb
pop
xor
cld
shll
scas
cmp
dec
sub
push
in
sbb
mov
jg
xlat
fidivs
test
adc
loopne
fwait
pop
in
lea
test
movsl
xchg
imul
add
mov
in
or
adc
cs
lcall
dec
push
ret
repnz
add
and
add
cmpb
movsl
iret
xchg
sbb
xor
push
ljmp
out
cmpsb
or
and
pop
xchg
mov
dec
jmp
clc
bound
ficoms
data16
sbb
pop
iret
sub
icebp
xlat
andl
in
mov
fcoml
rcr
pop
mov
fbld
lret
std
insl
orps
add
stos
pop
and
movsb
sub
or
dec
imul
xchg
pushf
fs
cmp
testl
out
inc
subl
lods
jae
insb
add
mov
cmpsl
xchg
inc
clc
add
xchg
cmc
cltd
dec
dec
pop
push
mull
inc
xchg
je
mov
sbb
loope
xchg
insb
or
lahf
jns
or
cmp
in
in
shlb
xchg
mov
icebp
in
setnp
mov
shl
roll
and
mov
push
xchg
lret
test
mov
pop
sub
cmp
sbb
adc
sahf
arpl
int
mov
dec
sbb
mov
sub
dec
xchg
adc
jle
fildl
pop
and
mov
xor
fnstcw
jmp
xor
xlat
sti
nop
push
xor
les
or
xor
lods
cld
or
stc
fbld
pop
scas
repnz
sbb
lsl
ret
jns
xchg
pusha
aaa
add
outsl
ret
cmp
lret
dec
xor
pop
fistpl
pop
in
sbb
sub
popf
repnz
cmpsl
outsl
adc
in
jns
lea
in
inc
jbe
sub
enter
or
xor
jp
dec
mov
push
add
or
sbb
scas
iret
ds
xchg
cmp
not
inc
aad
ljmp
fnstenv
aad
xchg
pop
xchg
pop
sub
push
push
scas
cmpsb
adc
shll
pop
inc
scas
jge
jge
mov
call
pop
xchg
andb
xchg
enter
add
xchg
push
cmp
add
push
push
mov
mov
sub
insl
xor
adc
leave
rcl
mov
ret
pusha
push
mov
push
negl
test
xor
out
adc
lods
sub
js
xor
arpl
loope
scas
ffree
loopne
adc
movsl
jo
adcb
sub
xlat
jb
popa
sub
cmc
ljmp
in
xchg
aam
sbb
xchg
pusha
pusha
xchg
xor
loop
xchg
ret
stos
pop
adc
mov
mov
mov
lret
fstp
iret
xlat
mov
mov
sbb
jno
jne
test
pop
jecxz
xor
imul
popf
jg
call
or
jb
sbb
mov
and
repz
mov
fdivrs
cwtl
aaa
dec
aam
stos
and
dec
jae
hlt
xor
add
fldenv
lods
outsb
repz
push
push
xchg
insb
push
daa
adc
lret
faddl
sbb
dec
and
cs
pushf
jnp
out
lahf
mov
int3
jmp
mulb
cs
insb
fisttpll
jns
cmpsl
push
xor
int
test
dec
add
add
rol
lods
rcr
shll
cmc
xlat
push
ja
daa
push
addr16
test
ss
in
mov
mov
push
or
bound
pop
in
adc
scas
push
mov
mov
pop
negb
jae
pop
lods
aam
add
adc
xor
pop
dec
repnz
cltd
sbb
clc
repz
pusha
arpl
cmpsb
push
les
mov
xlat
gs
xchg
push
and
add
dec
loop
jnp
pop
jo
jecxz
lock
mov
ret
mov
mov
or
andb
hlt
xor
sbb
pop
jno
add
outsb
jae
cli
mov
xchg
fistl
cmp
mov
add
dec
mov
sub
sub
sub
in
lea
mov
cmc
out
pop
push
mov
dec
sub
cmp
jmp
and
dec
mov
fyl2xp1
xor
mov
in
pop
imul
cmp
push
fdiv
and
in
sbb
mov
dec
pop
pusha
cmc
or
push
test
and
cld
mov
push
add
or
add
cmc
fiaddl
scas
icebp
mov
jb
pop
push
cmp
sbb
pop
mov
inc
aas
into
sbb
mov
out
sub
popf
mov
cmpsb
cmp
xchg
outsl
icebp
mov
out
sub
mov
xlat
outsl
stos
iret
cli
popf
add
mov
mov
ja
jge
push
std
pop
push
in
pushf
iret
sahf
lret
dec
xchg
push
dec
sbb
lock
pop
and
or
jmp
pop
stc
dec
pop
and
pop
scas
dec
xchg
adc
inc
lea
test
fsubrs
xor
rolb
push
cwtl
jle
mov
push
and
loop
adc
push
cmp
inc
daa
inc
pop
and
sbb
cltd
jg
add
sbb
xor
daa
inc
add
pop
inc
jmp
mov
xchg
lret
mov
cmp
pop
jae
test
movb
idivb
fstpt
mov
mov
xchg
pop
mov
or
and
rorl
pop
xchg
test
jle
outsl
pop
shll
in
daa
xchg
data16
in
push
sbb
lea
dec
mov
lret
fdivl
dec
jmp
or
add
jne
sub
inc
inc
push
and
and
pusha
dec
pusha
add
mov
out
push
rcll
jg
xorl
daa
clc
jecxz
out
push
mov
fcmovnbe
call
rorl
adc
xchg
daa
mov
arpl
mov
in
pop
adc
insl
andb
push
fwait
inc
pop
jl
imul
dec
adc
jmp
jbe
ja
js
pop
fs
or
cmp
lods
aam
sub
mov
jns
addr16
jmp
rclb
mov
add
fisttpl
cltd
xchg
lock
imul
or
and
das
inc
repnz
into
into
jns
loop
cmpsl
xor
mov
lods
jb
jecxz
clc
fisttps
dec
lds
stos
push
lcall
jbe
jbe
int3
xchg
out
mov
push
add
mov
bound
cmp
xor
fwait
sbb
stc
and
test
nop
jns
repz
repnz
popa
aaa
mov
push
mov
subl
mov
jo
mov
and
sbb
icebp
push
push
mov
sub
flds
xor
dec
shll
ljmp
mul
xchg
cmpsl
pusha
data16
mov
hlt
mov
fnsave
movsl
xor
pop
outsl
xchg
lret
fadd
xor
xchg
call
mov
lock
adc
ficomps
daa
dec
test
mov
mov
pop
jle
push
divb
mov
std
out
leave
jmp
js
mov
fcomp
mov
sub
fdecstp
call
jbe
xchg
adc
xchg
pushf
out
aaa
or
push
popf
xchg
push
mov
std
adc
jmp
add
xchg
xchg
jno
add
sti
xchg
mov
sub
clc
sbb
xor
inc
dec
movsl
jecxz
or
jl
jnp
ja
sub
and
fbld
outsl
loop
gs
arpl
mov
jge
xor
nop
lods
xor
adc
imul
mov
mov
sbb
cwtl
aad
dec
aam
repz
or
in
dec
cli
imul
jns
lahf
sti
jecxz
mov
add
cmp
pop
xor
adc
les
and
mov
sti
jmp
lods
loopne
test
in
sbb
sub
loop
dec
rep
into
push
jl
xchg
subl
push
sbb
add
and
pop
push
divb
xchg
mov
sub
cmp
fsubrs
cmpsl
mov
iret
jo
xor
lea
jbe
aas
xchg
sbb
flds
imull
add
add
lret
sbb
lret
stos
fcoms
xor
dec
push
inc
push
mov
cmp
cmpsl
loop
cs
jb
ds
pop
popa
cmp
push
ss
aam
lock
ljmp
mov
fwait
inc
or
adc
mov
pop
add
jae
fmul
ds
push
fwait
add
addb
ret
xor
xchg
loope
addr16
xchg
mov
test
inc
push
push
pop
jb
addr16
out
jl
sbb
lret
rcr
push
lods
push
xor
cwtl
jmp
mov
cmpsb
repnz
cmp
pop
test
popf
fdiv
test
gs
mov
iret
in
loop
sub
mov
mov
sbb
jge
mov
sub
push
sub
mov
xchg
nop
into
test
push
aas
shrl
test
hlt
out
sub
in
jb
lahf
xor
push
mov
inc
test
sub
cld
or
fdivr
jl
mov
xchg
cmp
insl
lods
icebp
cmp
mov
pop
mov
jge
or
mov
enter
mov
ficoms
inc
push
xorl
push
mov
pop
stc
insl
repnz
push
repz
movsl
jae
xor
sbb
sub
sub
add
push
and
push
pop
and
or
test
mov
addb
cmp
fsubrs
movsl
rcrl
push
shll
je
xor
adc
cmp
call
cmp
stos
or
lock
fsubl
sbb
jge
fwait
mov
jmp
jg
or
shr
mov
cmp
test
adc
xchg
push
xor
or
pusha
nop
add
mov
lock
dec
into
xchg
iret
and
cmp
ss
sbb
rcrl
inc
dec
sub
and
sub
jge
clc
pop
mov
outsl
sbb
fsubp
std
xor
adc
adc
addl
or
jl
or
push
insb
xor
sbb
cwtl
mov
or
js
scas
ss
adc
imul
shlb
fnstsw
fnstenv
or
lahf
push
in
mov
cwtl
push
pop
int
les
mov
sub
jle
unpcklps
xchg
fs
orb
add
cs
icebp
cmp
call
or
punpcklwd
dec
es
and
scas
hlt
and
sbb
mov
xchg
dec
dec
xlat
jmp
mov
mov
pop
or
xor
xor
daa
xchg
push
jb
test
or
adc
ret
sub
sbb
cmp
aas
pop
nop
mov
ds
out
inc
aad
ss
jb
arpl
jg
mov
push
imul
movsl
adc
lods
pop
scas
and
je
push
dec
dec
aam
pop
jnp
dec
xchg
xchg
movsl
iret
cmp
mov
and
rolb
or
xorb
pop
push
shll
jnp
adc
ss
sbbl
lret
fs
fcmovne
dec
cs
scas
ljmp
jge
sti
mov
loop
stos
call
adc
adc
stc
xchg
int
and
ret
out
pop
dec
scas
rorl
adc
testb
ds
jmp
push
gs
jnp
inc
sub
mov
rorl
lret
dec
subl
dec
enter
rorb
inc
inc
mov
sbb
sbb
dec
scas
push
cmp
mov
je
add
fsubr
incb
push
mov
imul
lock
and
add
pop
jo
sub
addb
add
pushf
sub
jb
mov
ljmp
jge
push
icebp
imul
or
mul
or
insl
push
mov
bound
ja
lret
pop
jbe
pop
mov
rcl
imul
cmp
dec
in
cwtl
mov
dec
push
cmp
mov
outsl
loope
stc
rcll
mov
lcall
mov
jns
into
adc
enter
fs
fiadds
pop
clc
aam
mov
rcrb
loopne
pop
sub
call
xor
repnz
test
cmp
mov
imul
ss
xor
dec
push
andb
add
insl
push
fstl
das
or
mov
inc
dec
fimuls
daa
shl
in
cli
mov
inc
and
push
jb
test
in
inc
sarb
or
mov
mov
sbb
movsb
mov
in
enter
pop
or
add
fstps
and
or
mov
pop
pusha
inc
push
in
shll
mov
mov
pop
das
mov
cmp
push
das
bound
cmp
mov
lods
inc
add
pusha
lcall
pop
loop
push
xchg
lds
ficoms
mov
outsl
mov
sti
sbb
idivl
out
pop
mov
sbb
fucomi
dec
aam
mov
mov
mov
add
je
in
xor
insl
daa
test
loope
push
adc
lods
push
adc
push
shll
out
cli
jmp
sbbl
rclb
out
cli
sahf
out
test
sbb
and
mov
jb
xor
popa
aam
and
out
mov
push
push
adc
pop
int
out
out
lods
pusha
xchg
dec
jno
lret
push
ljmp
orl
dec
neg
or
mull
mov
xchg
xchg
mov
push
loope
add
out
jp
jnp
mov
and
push
lcall
cmp
push
dec
adc
sub
pop
pop
out
outsl
cmpl
adc
daa
lret
out
cmp
push
scas
push
sbb
push
sub
imulb
imul
cmpsl
and
sbb
mov
stos
jp
push
jecxz
dec
rol
rolb
sub
popa
mov
push
xchg
mov
mov
sbb
insl
fimull
xchg
in
or
xorb
call
mov
push
mov
addr16
shr
adc
popl
icebp
notl
pop
cmp
loope
nop
xor
in
imul
ljmp
sub
idivb
imul
jo
repz
mov
jg
sbb
sbb
or
test
adc
mov
pop
cmp
pushf
or
jnp
sbb
xor
test
pop
imul
jecxz
aaa
xor
add
mov
or
adc
fwait
frstor
or
inc
or
or
das
and
fisubrl
loop
pop
push
pop
mov
mov
out
andl
movsl
or
fadds
stc
fstl
dec
test
mov
adc
mov
cmpsb
xchg
cld
sbb
pop
sbb
sub
and
pop
adc
sahf
mov
push
push
push
push
stos
fiaddl
push
repnz
aaa
push
rcrl
adc
sarl
add
or
pop
mov
popf
out
mov
adc
dec
stos
bound
stos
pusha
outsb
int
sbb
jbe
jnp
fdivs
sbb
repnz
jg
popf
push
mov
xor
lret
push
enter
sub
in
ror
dec
sub
inc
push
mov
pop
jl
aas
mov
and
mov
test
add
das
add
fwait
leave
scas
add
dec
ss
std
cmp
sub
and
add
test
repnz
in
pop
jb
add
sub
testb
sbb
aaa
inc
push
movsb
or
cwtl
jbe
push
cmp
dec
sahf
adc
jo,pn
bound
bnd
cmpsl
mov
in
mov
cmp
xchg
adc
shrl
cwtl
shrl
pop
sub
jle
gs
jnp
loope
push
lret
pop
inc
adc
ret
push
call
add
mov
dec
push
in
pop
outsb
ljmp
dec
fwait
xchg
jae
lods
sti
sub
xlat
loop
notl
rorl
rcll
int3
stc
addr16
adc
mov
cltd
mov
iret
sbb
fucomp
sub
out
jmp
cmp
mov
cmc
push
mov
subl
sub
add
gs
xor
dec
pop
sarb
in
mov
mov
movsl
out
cmpsb
adc
adc
push
pop
sub
movsl
insl
in
das
das
testl
cmp
jo
std
xchg
icebp
mov
dec
iret
movb
and
sub
sbb
lods
pushf
mov
je
fsubrs
sbb
adc
dec
pop
xchg
xorl
shll
jno
inc
fwait
push
xlat
jb
int3
lret
xor
adc
jae
push
push
mov
or
bound
mov
sub
cmp
mov
sub
inc
adc
sbb
xchg
call
xor
das
jg
dec
aad
mov
repnz
imul
and
loop
adc
outsb
push
pop
cmpsb
mov
cmpsb
mov
js
mov
bound
and
and
cmpsl
dec
lahf
shl
or
fdivrs
js
sbb
xorl
jmp
push
mov
out
loop
cmp
frstor
insl
inc
mov
push
mov
fistpl
mov
mov
les
mov
cwtl
and
mov
push
xchg
dec
pop
out
inc
cmp
popf
pop
xchg
enter
cli
pop
ljmp
cmp
stos
bound
movsb
sbb
jbe
jns
fcomi
cmpsl
adc
mov
push
dec
push
lods
xchg
push
pop
xor
out
cmp
adc
sbbb
adc
loopne
xor
add
and
dec
sbb
shlb
xchg
jno
mov
or
inc
cs
xor
adc
mov
jns
add
nop
idivb
dec
mov
daa
add
loope
push
lds
or
movb
jae
outsl
addb
xchg
clc
pop
loopne
and
sub
test
fisubs
jnp
mov
pushf
dec
pop
xrelease
sub
sub
jb
mov
xor
inc
fstl
pop
std
sbb
movsb
mov
test
or
scas
inc
dec
pop
mov
int3
cwtl
dec
lds
cs
and
push
inc
pop
ja
outsl
je
mov
mov
xchg
jno
mov
rcrb
sub
hlt
jecxz
push
xchg
cmp
shlb
mov
mov
in
pop
inc
out
clc
out
dec
push
jne
sbbl
mov
mov
enter
mov
mov
sub
cmp
jg
xchg
mov
imul
sub
or
push
in
call
or
repnz
push
rclb
pop
push
push
jle
les
les
test
aad
idivl
add
sub
sub
pushf
inc
mov
pop
dec
addr16
loope
jbe
inc
call
jmp
ss
mov
outsl
insl
add
xchg
mov
pop
push
mov
mov
jno
dec
dec
jmp
xchg
sub
sub
outsb
daa
lahf
pusha
dec
sbb
imul
pop
rorb
or
and
fidivrl
jecxz
test
popf
nop
lret
xor
dec
or
pushf
shlb
in
dec
jp
outsl
nop
mov
in
jl
sbb
push
push
xor
ds
shlb
into
xchg
popa
adc
cmpsl
mov
mov
popf
mov
rol
ss
push
repnz
pop
ds
jecxz
xchg
mov
fistps
pusha
std
rolb
xor
cmpsl
add
mov
xor
push
ja
xchg
push
movsl
dec
sub
fld
jns
or
jo
bnd
add
mov
insl
mov
in
aas
adc
xor
dec
mov
inc
ds
mov
das
js
cmp
or
mov
mov
lock
in
pop
cmc
pop
sub
in
rcrl
jbe
fbstp
leave
fsubrs
mov
sahf
imul
rcr
xor
fbld
in
into
cmp
cld
aad
data16
pushf
xchg
fwait
mov
pop
mov
add
jo
or
jbe
xor
jbe
pop
test
xor
std
jl
rolb
mov
imul
pop
or
pop
shrb
aam
push
and
enter
cmp
cld
mov
out
out
and
pop
clc
das
out
fists
dec
inc
mov
jb
enter
jbe,pn
xchg
pop
bound
stos
pop
jg
js
bnd
pop
ret
lea
jl
stos
aad
idivl
pop
mov
dec
push
stos
xor
inc
mov
inc
fucomip
mov
inc
xchg
jbe
xchg
sub
mov
ror
ret
popa
and
fstpt
clc
repnz
cmpsb
dec
xchg
insb
mov
in
cmpsb
or
fldt
xor
mov
mov
jp
rcrb
jnp
xchg
inc
fwait
or
mov
addl
pop
in
test
out
pop
cmp
add
dec
jne
cmp
inc
sbbl
xchg
cmpsl
andl
mov
push
repz
arpl
hlt
fst
cwtl
ss
shrb
ja
pop
dec
xor
pop
adc
rcrb
insb
test
xor
fbstp
imul
fs
out
sbb
sbb
cli
icebp
nop
add
xchg
movsl
jg
ror
lcall
or
mov
xchg
xchg
in
xchg
cmc
xchg
cmp
push
ja
lcall
dec
mov
xchg
pop
pusha
lret
mov
mov
bound
mov
dec
ja
xlat
mov
dec
xor
adc
mov
gs
lret
push
fxch
pop
lret
fisubrl
cmp
stc
cmp
add
in
or
fwait
add
cmpl
aaa
mov
xor
rcrl
mov
jmp
xchg
cmpsb
pop
test
lahf
sbb
pop
hlt
insb
movsl
dec
inc
sahf
arpl
add
bound
aas
test
mov
stos
and
dec
xor
repnz
roll
xchg
ret
scas
mov
jne
stos
arpl
push
pop
sbb
jo
cmp
aad
fstpl
push
insl
jne
adcb
andl
outsb
in
call
jnp
iret
dec
sbb
push
aas
xchg
inc
js
jns
lock
out
in
xlat
cmp
fisubrs
xchg
dec
cmp
dec
testl
and
jno
ret
add
out
dec
arpl
test
in
rorl
jmp
pop
mov
push
push
adc
pop
sti
pop
cmc
rolb
mulb
cmpsl
mov
sub
insl
dec
addr16
test
fwait
cmp
outsl
btr
adc
cmp
sbb
jae
sti
imul
push
aad
ljmp
icebp
push
pop
push
adc
addl
pop
fstpl
pop
nop
mov
lods
test
inc
shrl
in
lcall
ss
aas
xchg
jp
xchg
jecxz
loop
pop
into
mov
push
lea
xchg
or
scas
xlat
cwtl
scas
mov
sbb
cltd
pushw
push
arpl
and
sub
loopne
in
mov
mov
lahf
inc
iret
xchg
pop
fildll
push
sbb
fsubl
xor
test
popf
loopne
cmp
adc
call
add
pushf
ss
outsl
int3
add
in
ss
jg
xor
ss
das
add
lds
mov
les
lock
mov
pop
imul
test
sahf
pusha
iret
push
fwait
add
mov
push
movsl
outsl
jae
xchg
pop
inc
mov
dec
push
pop
or
lock
arpl
pop
pop
aam
adc
out
in
bound
aam
add
xchg
jnp
pop
jne
repz
imulb
stos
insb
mov
mov
data16
out
call
ljmp
jbe
mov
adc
cmpsl
pshufw
add
in
js
sbb
roll
ljmp
add
push
push
test
xchg
test
sar
aad
inc
aas
mov
int3
mov
adc
and
mov
xchg
int3
scas
add
out
sub
push
push
and
in
cmpsb
lds
arpl
jne
jg,pt
push
arpl
mov
arpl
sbb
jg
dec
nop
in
pop
gs
out
dec
arpl
lea
pusha
data16
cwtl
or
dec
bound
and
fs
xchg
mov
mov
push
arpl
stos
decl
xor
push
test
outsb
ja
jbe
dec
in
cmpl
add
jb
faddp
jmp
mov
or
lret
fidivl
mov
divb
xor
movl
dec
jns
mov
pop
inc
add
add
pop
mov
adc
mov
xchg
pusha
mov
out
xor
ss
cwtl
mov
cmpsb
mov
sbb
mov
cmp
enter
dec
test
add
popf
fmuls
cmpb
and
fcoml
cli
mov
xchg
rcrb
add
xchg
adc
movsl
add
insb
test
jo
push
fwait
dec
jo
sub
in
lss
xchg
adc
test
xchg
jb
pushf
mov
call
mov
mov
inc
push
popa
sub
fiaddl
dec
sbb
inc
fdiv
das
jno
mov
inc
icebp
jmp
cmp
sub
es
mov
cld
in
mov
imull
loopne
dec
test
loope
call
add
adc
dec
mov
mov
hlt
nop
jle
testl
xchg
cmp
xchg
jecxz
shr
add
mov
xchg
pop
icebp
test
xchg
push
mov
mov
jmp
add
and
adc
gs
mov
std
out
cmp
pushf
pusha
cs
adc
lret
pusha
push
in
sti
xrelease
jae
add
loopne
shlb
jne
mov
add
mov
out
out
out
leave
ds
cmp
xchg
adc
rorl
mov
dec
js
sub
js
lahf
jbe
and
icebp
hlt
vmwrite
xor
mov
cmp
add
mov
mov
das
js
imul
cmp
mov
push
lods
add
add
mov
inc
nop
cmp
outsb
dec
and
aam
jne
sub
ja
dec
mov
mov
orl
orb
int3
sti
xchg
repz
loop
xchg
inc
jmp
adc
mov
dec
pop
ds
push
repz
leave
adc
xorl
push
dec
xlat
inc
inc
push
dec
jg
sbb
sub
fwait
and
cmc
vmovapd
test
iret
sahf
xor
mov
cmp
dec
movsb
sti
mov
jnp
xor
sbb
dec
push
aam
push
push
cltd
pop
mov
pop
push
add
fwait
and
mov
push
cmp
add
mov
sti
sub
fnstcw
dec
shll
xchg
dec
scas
mov
lahf
mov
xchg
xor
sti
mov
inc
pop
or
sub
pop
push
pop
lahf
adc
sbb
push
rorb
jp
pop
xor
sub
dec
jmp
lods
shlb
adc
inc
add
pop
lds
sub
aad
dec
xor
ja
popa
inc
mov
pop
testb
outsb
cwtl
pop
jg
sarb
mov
in
dec
lahf
and
sbb
into
shrb
jne
or
aas
add
loop
adc
pop
test
out
shlb
cltd
sbb
roll
push
mov
xor
lods
jl
jbe
insl
test
and
adc
push
lds
mov
and
xchg
mov
decb
lock
test
push
cmpsl
mov
or
int3
jno
daa
jl
push
mov
xor
push
vpunpckhqdq
neg
scas
mov
jg
sbb
shl
in
adc
ret
xor
movsb
daa
repz
test
pop
mov
out
arpl
dec
and
cmp
or
pop
ds
sbb
nop
mov
test
sbb
xor
iret
ljmp
dec
cli
cs
push
popf
or
sub
pop
addr16
xchg
mov
fildll
in
pop
add
in
jecxz
les
pop
orl
lds
fwait
mov
mov
cmp
or
and
cmpsb
add
sti
cmp
punpckhdq
bts
or
adc
pop
sbb
fstpt
or
push
scas
aam
mov
mov
sub
or
add
adc
add
les
mov
aaa
out
aad
cmp
pop
daa
mov
mov
cwtl
jmp
xchg
jmp
shrb
stos
daa
fcmovbe
pop
pop
push
cmp
sub
dec
out
push
pop
jno
sarl
xchg
jl
movsl
idivl
repnz
cmpsl
jmp
repnz
fnstenv
or
repz
in
and
fdivs
jp
add
call
insb
push
adc
xchg
fnsave
inc
or
inc
pop
cmp
jae
ret
add
and
dec
pop
adc
lock
fcmovb
fstl
mov
std
out
mov
mov
movsb
adc
jo
loope
stos
mov
faddl
push
int3
jmp
loopne
sub
andl
out
fsubrl
data16
shlb
push
mov
pop
jp
rclb
jmp
push
mov
adc
sub
cli
push
clc
inc
notb
sbbl
repnz
dec
mov
cmp
test
andl
sub
nop
sbb
arpl
je
dec
jp
inc
mov
adc
mov
and
adc
mov
leave
jne
addr16
rclb
fcmovnb
out
pop
cmc
inc
ret
ret
cmpsl
xchg
push
pushl
or
fmuls
es
mov
inc
pop
aaa
ret
or
xor
stos
out
stc
lods
mov
mov
jge
add
ret
shrb
push
push
fildll
push
sub
add
mov
jg
test
mov
out
adc
push
nop
repnz
inc
inc
ja
fldt
cmp
aaa
jmp
and
shlb
fucomp
mov
mov
xchg
mov
fdiv
mov
cli
push
test
xchg
test
pop
adc
hlt
pop
in
cwtl
push
arpl
mov
sbb
mov
jl
push
mov
imulb
mov
iret
rcl
out
hlt
sub
or
or
rcrb
addb
mov
push
icebp
jae
test
mov
and
push
or
stos
add
cmpsl
xorl
cmp
add
aaa
fs
sti
jae
add
push
arpl
inc
hlt
pushl
or
movsl
test
sub
jnp
adc
jecxz
std
ret
inc
in
rcrb
dec
out
pop
mov
push
shll
repz
cmp
xor
push
jmp
or
lcall
loopne
cmp
xchg
and
xor
scas
shlb
imul
dec
cmpsb
add
dec
lret
not
ljmp
stos
sahf
pop
sbb
mov
or
adc
mov
addb
les
mov
mov
mov
test
stos
jo
cwtl
cmc
sar
push
dec
jp
stc
sahf
sbb
pop
shrb
add
ret
mov
xchg
fmuls
sub
jbe
outsl
jb
cmc
mov
mov
outsb
mov
mov
push
aad
out
insb
mov
js
push
mov
cld
jl
or
inc
imull
sub
aad
add
xchg
and
out
insl
sub
lret
mov
mov
cli
push
jecxz
cmp
imul
cmpsl
jle
iret
arpl
loop
js
cmpsb
outsb
push
jnp
mov
pushf
push
in
sbb
std
inc
in
fnstcw
mov
mov
dec
inc
ljmp
jge
loopne
pop
lods
dec
int
mov
xor
int3
jmp
mov
out
popl
mov
and
and
xor
or
mov
repnz
jne
sbbl
leave
adc
je
dec
lods
outsl
popa
mov
nop
cmp
gs
cld
cmc
pop
push
sub
testb
xor
xchg
test
rolb
mov
scas
test
mov
daa
repnz
sub
je
dec
ljmp
repz
repz
jecxz
outsl
adc
shl
jmp
out
xchg
out
xchg
jns
or
adc
xor
out
aad
rorl
sub
push
pop
pop
test
rcl
mov
dec
xlat
lock
rol
rolb
inc
adcb
aam
adcb
mov
shr
sbb
testb
fbstp
int
movsl
sti
clc
shll
jnp
dec
mov
xchg
inc
int3
push
push
fdivrs
adc
add
iret
push
and
mov
aad
xchg
push
inc
insl
adc
xor
xchg
or
out
movsb
stc
ret
jmp
inc
fs
mov
es
lret
shrl
psrad
pop
div
jmp
inc
xchg
lds
mov
dec
fstp
xlat
add
inc
add
popf
lret
mov
outsl
sub
dec
mov
in
cmp
imul
push
das
add
fsubr
in
adc
jo
mov
and
sbb
adc
ficoml
imulb
sbb
int
flds
popf
mov
mov
sti
lcall
iret
cmpsl
inc
lahf
inc
mov
fcmovnb
sti
bound
fwait
xchg
push
xor
lods
push
or
nop
mov
sbb
ror
push
ja
mov
fwait
aam
cld
test
jo
inc
out
jo
hlt
adc
fistpll
fmul
sbb
je
push
lcall
lods
hlt
iret
adc
mov
cli
mov
addr16
xchg
es
xchg
popf
cltd
mov
addb
je
enter
jg
inc
cltd
aam
mov
mov
in
xchg
and
je
fwait
jg
dec
xor
fwait
jg
sarl
in
jp
push
leave
cmp
shl
arpl
arpl
push
daa
lret
xlat
repnz
shr
mov
sub
mov
popf
xor
push
js
adc
sub
mov
cmp
punpckhdq
pop
mov
out
xchg
jge,pt
xor
jne
out
dec
nop
lods
mov
jo
sbbb
loop
or
or
pop
pusha
jg
clc
dec
loope
andb
movb
outsl
into
fiaddl
inc
je
and
ljmp
mov
stc
loop
into
sub
cmp
adc
jmp
repz
mov
dec
sbb
fwait
shll
dec
xchg
pop
mov
xchg
or
xchg
sub
inc
lcall
inc
cwtl
xchg
push
ljmp
iret
pop
mov
adc
lods
adc
mov
sbb
outsl
adc
pop
push
jno
sbb
sbb
test
push
pop
inc
insb
inc
adc
and
loope
add
push
adc
xchg
dec
out
lret
pop
xor
imul
adc
dec
jne
out
mov
scas
insl
and
jg
imul
xor
jecxz
lods
das
js
push
xchg
mov
cmp
pop
xchg
xchg
xchg
push
pop
mov
in
mov
movsb
pop
iret
sub
or
dec
call
into
stc
leave
pop
jnp
lock
mov
mov
jle
push
jp
pop
cmpsb
sub
mov
adc
push
stos
dec
adc
add
push
xchg
ja
out
sbb
divl
gs
inc
pop
stos
ljmp
iret
movsb
mov
sbb
xchg
lods
sbb
in
stc
lahf
shl
push
scas
xchg
mov
fs
mov
xchg
cmc
lods
jl
or
add
and
fcmovbe
jg
stos
insb
in
pop
jle
mov
aad
mov
icebp
push
cmpsb
cld
les
les
pop
push
xchg
imul
jg
test
sub
xchg
ljmp
pop
outsl
daa
sbb
dec
mov
sub
mov
jge
loopne
add
fildl
addr16
jbe
mov
push
cmp
popa
scas
in
enter
adc
lock
scas
icebp
out
loop
sub
test
jb
shrl
jl
sbb
sub
push
and
cmp
lods
shrl
xor
cmp
ret
push
lods
dec
push
dec
jmp
mov
sbbl
inc
bound
xchg
jp
sub
ljmp
add
mov
int
push
mov
push
xchg
lea
mov
cmp
jle
enter
cmp
inc
cs
mov
xor
nop
mov
jle
call
push
xchg
cs
and
cmpsb
pop
test
mov
sub
jecxz
andb
call
in
pandn
jns
aam
popf
sti
mov
cmp
mov
std
or
pushf
mov
mov
jle
cs
shrb
jnp
js
add
adc
dec
add
jnp
imul
or
rol
cltd
outsb
cmpsl
xorb
loop
inc
mov
aam
xor
inc
repnz
xchg
das
dec
cwtl
push
pop
pusha
mov
mov
sbb
addps
sbb
jmp
and
or
arpl
in
sahf
fidivs
push
ds
mov
lock
hlt
cmc
xor
mov
cmpb
mov
insl
outsl
fwait
mov
mov
dec
inc
outsb
mov
dec
inc
sub
into
xor
cmpsl
shlb
inc
mov
scas
xchg
aam
pop
push
push
je
pop
sub
xchg
icebp
insl
icebp
pop
sub
jp
sub
stos
cli
push
mov
ret
cmp
aad
mov
mov
and
sub
or
ja
mov
and
pop
add
mov
rcl
mov
xchg
aad
outsb
hlt
jae
cs
jge
mov
int
shlb
fs
test
pop
fcoml
or
mov
sub
cmpsb
test
xlat
fsubrs
push
rolb
adc
jnp
and
stos
loop
test
pusha
sub
dec
mov
dec
mov
pop
xchg
pusha
xchg
hlt
incb
js
pop
adc
pushf
sbb
shl
adc
addr16
ds
loopne
mov
cmpb
push
sahf
inc
mov
push
cmc
imul
jne
cmp
stos
push
cmp
aas
pop
lahf
les
xchg
adc
adc
push
aas
mov
pop
mov
sub
mov
dec
mov
adcl
inc
das
xchg
add
mov
inc
or
sti
pop
stos
jns
lret
in
and
adc
in
mov
or
test
cmpsb
add
adc
mov
mov
mov
push
sbb
mov
mov
test
cmp
or
sahf
ds
xorb
fisttpll
cmp
das
sti
stos
hlt
cmpsl
mov
mov
mov
aaa
test
orl
dec
imulb
aad
lret
popa
inc
aad
inc
mov
js
mov
daa
jmp
jg
inc
dec
pop
test
pop
sbb
xor
adc
cmp
add
lret
mov
xor
loop
scas
je
pop
ret
xlat
mov
jae
jmp
orl
into
test
pusha
arpl
aad
or
inc
dec
pop
data16
ret
sub
inc
inc
mov
stos
or
bound
mov
sbb
mov
faddl
push
stos
mov
push
mov
dec
in
mov
xor
ffree
mov
jno
adcl
and
jle
xchg
pop
cmpb
mov
push
ret
fs
jle
xchg
jae
inc
xchg
ljmp
jp
sbb
mov
pop
mov
stc
and
xchg
lret
jmp
pop
jg
mov
icebp
lahf
inc
jb
std
mov
sbb
sbb
sbbb
add
push
cmc
insb
sub
cmp
lcall
jge
mov
imul
arpl
push
sbb
dec
xchg
lods
add
sahf
jb
and
sub
mov
int3
decl
sbb
fisubrs
in
rcrb
add
jecxz
fsubp
jmp
or
jne
cli
mov
xor
jbe
or
mov
cmp
jl
xor
mov
bound
sbbb
sbb
ds
cmp
adc
dec
bound
sti
das
js
dec
mov
and
inc
call
pop
lret
fcmovnb
test
cs
lods
addb
xor
adc
test
mov
push
iret
pop
mov
adc
bound
xlat
add
mov
pop
sbb
add
mov
push
pusha
imul
inc
mov
cld
mov
in
arpl
nop
jg
fwait
xorl
push
jne
xchg
lock
xchg
test
or
addr16
mov
pop
idivb
push
nop
in
pop
pusha
adc
mov
mov
add
jg
std
sbb
jo
cmp
jo
mov
add
pop
ds
out
shld
test
mov
jg
mov
jnp
pop
jnp
pusha
in
cmp
daa
xchg
xchg
jmp
sarl
gs
cwtl
mov
push
add
cld
popf
mov
cld
xchg
cmpsb
sub
shlb
or
cli
or
dec
add
popa
mov
ja
or
dec
ss
fwait
pop
or
mov
dec
pop
mov
sub
add
and
mov
inc
lock
mov
pop
mov
fisttpll
sbb
push
cmp
mov
les
bound
push
flds
lods
insb
lret
aad
imul
adc
pusha
mov
stos
ds
cld
jns
pop
pop
mov
and
out
lock
bound
fcmovne
insb
mov
stc
jnp
and
int3
setle
jle
or
outsb
jne
sub
stos
fiadds
enter
insl
mov
xchg
mov
pop
and
mov
sub
pop
iret
sbb
sub
cmp
add
sub
adc
loopne
lahf
or
lds
and
adcl
loopne
mov
mov
in
lds
push
inc
ret
test
xorb
add
lret
ret
xor
out
push
mov
xchg
sbbl
pop
pop
addb
iret
mov
mov
out
js
divb
inc
ss
test
xor
in
popf
clc
pop
stc
cmpsb
mov
inc
push
punpckhdq
inc
movsl
inc
mov
xor
xlat
test
inc
mov
pop
push
out
push
loop
jl
and
in
subb
rorl
pop
push
mov
adc
ds
scas
sti
push
loope
inc
xchg
gs
sub
xor
test
lds
cmpsb
sbb
inc
call
subb
jge
xchg
fcmovnbe
out
mov
fstpl
cwtl
lods
das
orb
sbb
lods
jmp
stc
adc
movsl
sahf
icebp
in
std
std
inc
scas
and
es
sbb
jecxz
xchg
nop
icebp
xor
pop
mov
dec
stos
rol
test
out
push
ret
or
sbb
and
sahf
ljmp
adc
mov
fstps
je
fistpll
mov
call
stc
ds
add
lods
jnp
pop
jne
call
mov
cmp
lods
pop
mov
dec
sbb
insl
mov
xor
scas
mov
inc
js
decb
popa
mov
dec
movsb
sub
imul
adc
add
fcomps
ja
xchg
loopne
insb
xor
mov
cmp
fsubrs
or
test
imul
hlt
jp
push
cmpsw
add
inc
aas
incb
popf
adc
xchg
lcall
adc
popa
mov
push
and
xorb
or
cmp
jl
rcrb
imul
or
push
mov
dec
out
pop
xchg
std
movsb
push
test
jecxz
fcompl
pop
sahf
fcmovb
mov
pop
xchg
mov
add
sbb
xchg
pushf
leave
mov
xchg
dec
sarl
jnp
jno
mov
xchg
enter
mull
fisttpll
bound
inc
mov
cmp
in
outsl
jg
sti
popf
dec
jecxz
inc
push
cmp
push
sub
fbld
out
mov
imul
cmpsb
mov
xor
fldenv
jl
rorb
adc
push
and
cmp
icebp
shrl
xlat
enter
sub
lods
stc
or
sahf
pusha
test
fildll
cli
fdivrl
dec
push
sub
cmp
scas
or
cmp
fs
popa
mov
incb
insl
mov
xor
mov
jnp
sti
dec
hlt
data16
sub
push
test
ljmp
cmp
jbe
lret
mov
insb
aaa
sub
dec
xchg
aaa
aad
int3
jecxz
mov
cmpsl
repz
bound
cmp
sbb
or
jecxz
push
mov
jecxz
sbb
jp
fldenv
push
dec
jno
jl
pop
add
stc
gs
xor
js
mov
push
mov
mov
outsb
pop
jmp
ljmp
jo
adc
jno
xor
test
inc
jno
pusha
fs
cmpl
ljmp
jmp
add
dec
in
or
jns
int3
cmp
pop
or
lret
mov
pop
iret
mov
dec
fldl
dec
jle
push
lahf
pop
or
scas
in
mov
jl
inc
push
jge
stos
dec
mov
negb
in
sub
xchg
cmp
xchg
mov
adc
popa
loope
sbb
inc
test
stos
inc
and
or
data16
ficoml
gs
nop
push
xchg
pop
pop
fistpl
lods
pop
adc
aad
iret
negl
xor
fadds
imul
xchg
shlb
imul
sarb
xor
or
aas
push
cmp
scas
inc
jne
aad
stos
fcmove
fadd
or
or
push
outsl
xchg
inc
or
or
roll
test
stc
scas
sub
movsl
sti
outsl
push
pusha
and
bound
ss
fwait
je
push
jmp
subl
les
sub
push
jne
das
insb
fwait
pop
xlat
stos
cmp
int
mov
bound
mov
lahf
add
sbb
xchg
adc
and
push
sbb
adc
cmp
fmuls
cwtl
mov
jns
jb
movsb
mov
in
mov
arpl
pop
sbb
lahf
jmp
lea
pop
dec
fmul
outsb
sbb
clc
outsl
ret
dec
push
shll
fisubrs
cmpb
ljmp
cs
cs
pop
jns
lahf
lahf
sub
mov
xorl
push
push
aas
pop
jmp
inc
inc
xchg
or
mov
pop
je
sbb
and
lods
mov
xchg
add
adc
inc
stc
in
push
sbb
sub
adc
int3
stc
jne
jbe
cld
mov
or
mov
add
push
arpl
cmp
aam
xor
ja
lret
and
imul
lea
and
test
pop
xchg
fnstenv
lock
jnp
jno
pop
cmp
loop
mov
dec
data16
jo
insb
fisttps
pop
mull
loope
jl
cmpsb
repnz
test
pusha
sub
shlb
mov
fiadds
or
test
mov
out
cmc
mov
xchg
ret
xor
sti
cltd
and
mov
loop
mov
scas
pushf
vminsd
shlb
sub
fimull
inc
das
cmp
andl
xor
flds
out
adc
cmpsb
sbb
push
in
cmpb
ret
pop
aaa
clc
movhps
dec
inc
in
in
and
sbbb
std
jne
sub
rcll
push
mov
pop
mov
test
divb
pop
pop
push
scas
lock
mov
bound
int3
test
push
sub
stc
inc
xchg
aad
out
in
pop
div
mov
pushf
push
jno
int3
mov
jg
jmp
mov
ret
repnz
sbb
fsub
mov
out
dec
in
push
pop
pop
or
lods
jge
out
inc
add
das
in
mov
out
inc
dec
jno
fisttpl
stos
sbb
xchg
popa
jmp
sti
mov
pop
iret
adc
or
fiaddl
and
dec
orl
sbb
fcomps
rcrb
enter
dec
fdivl
push
pop
fadds
cmp
scas
insl
icebp
and
dec
or
jae
xor
pop
mov
or
xchg
push
test
jne
popa
push
mov
jge
outsb
fstpl
lds
add
outsl
mov
mov
in
shrl
hlt
or
sbb
xor
pop
shll
add
call
jecxz
minps
adc
and
and
push
push
inc
aam
jle
mov
or
int
xlat
mov
enter
push
aad
rcll
and
bound
nop
fbld
test
sbb
dec
movsb
cld
imul
push
bound
out
mov
sub
notl
jno
rolb
scas
aad
jl
pusha
bound
xchg
push
push
dec
sbb
mov
lods
jbe
mov
pop
xchg
mov
sbb
xor
fsubrs
xchg
pop
loope
or
cmpsl
inc
sbb
stos
push
dec
mov
repz
clc
aas
push
xchg
sub
pushf
mov
and
repnz
sbb
or
divb
add
jae
test
dec
cmp
sub
rorb
mov
mov
cmc
daa
into
add
or
inc
fistpll
jl
fisubrs
xor
loop
dec
in
mov
inc
arpl
js
test
pop
jae
adc
mov
je
push
in
mov
insl
nop
jne
pusha
jmp
shll
pop
jle
xchg
pushf
cmpb
loopne
push
add
in
inc
in
add
xor
and
sbbl
xchg
popa
cmp
sbb
lahf
xchg
ds
pop
out
and
repnz
bound
sbb
adc
inc
sti
dec
xor
jbe
push
mov
sbb
adc
js
cmp
inc
mov
outsb
mov
dec
or
mov
orl
jecxz
cwtl
mov
popf
jg
cmp
mov
out
jmp
cmpsb
loop
mov
imulb
cmc
xor
push
test
adc
jg
pop
nop
mov
push
adc
cmp
pop
rorl
push
push
cmp
add
xchg
dec
test
sti
js
xor
testl
into
in
inc
and
lds
or
cmpsb
lahf
or
mov
add
cmp
les
mov
aaa
arpl
and
inc
xor
lods
fstpl
add
xchg
test
add
mov
jbe
mov
and
rcrl
out
push
stc
sub
popf
mov
scas
push
outsl
iret
loopne
push
or
scas
or
adc
cli
jl
xchg
mov
bound
xor
mov
test
jl
push
sub
push
in
cmp
imul
inc
cwtl
aam
faddl
test
mov
fxch
mov
and
sti
sub
jle
scas
adcl
push
cmpl
pop
xchg
imul
xor
xlat
out
pop
and
test
and
mov
add
pop
mov
dec
pop
int
sub
aam
pop
push
gs
repz
int
xchg
cmp
pop
sarl
ret
fucomp
stos
mov
push
jns
aad
fbstp
push
imul
mov
sbb
bound
outsb
sub
ret
fcoms
jno
mov
and
cmp
push
stos
aam
mov
pop
mov
call
sub
jb
wrmsr
sub
jmp
call
lods
scas
iret
push
cmp
test
loopne
insb
push
lock
push
jb
or
test
pop
sti
jge
loop
cmpl
cs
sbb
das
scas
add
mov
cs
sti
and
mov
fbstp
stos
loop
adc
xchg
pop
pop
out
push
jmp
sub
cmp
fisttpl
dec
sub
mov
push
repz
mov
and
xlat
incb
cmp
pop
dec
mov
test
and
cmp
nop
cmp
mov
xchg
mov
lcall
loopne
mov
push
scas
lret
loop
or
test
inc
xchg
test
adc
scas
hlt
mov
dec
adc
adc
add
xchg
fprem1
push
and
fdivrs
mov
mov
shrl
test
inc
push
xor
mov
jg
in
leave
sub
pushf
push
rcr
sbb
sahf
hlt
dec
icebp
dec
push
pop
cmp
mov
dec
lret
pop
mov
and
subl
fnstcw
sub
dec
pushf
ss
pop
add
js
lock
add
in
iret
mull
loope
adc
scas
cmpsl
or
cmc
mov
push
fnstsw
and
fidivrs
fidivl
push
mov
and
jns
into
xchg
lret
and
xor
shlb
je
stos
ss
outsl
decb
testb
repnz
xchg
mov
les
inc
mov
mov
data16
addr16
inc
dec
pop
sarl
pusha
leave
movsl
sti
fsts
or
dec
add
xorb
icebp
pop
and
mov
xor
adc
pop
out
push
pop
push
pop
lods
xlat
jmp
stos
test
add
bound
outsb
aad
adc
mov
rcll
xor
cli
lahf
fs
add
mov
jb
adc
lods
xchg
fcom
sub
sbb
stos
xchg
fdiv
dec
sub
sti
int
jmp
fxch
insl
ljmp
cmp
int
leave
push
push
xor
fdivrs
sub
and
sbbl
idivb
jge
push
cwtl
dec
adc
clc
faddl
and
mov
xchg
fs
xor
lret
enter
scas
mov
xchg
pop
dec
leave
inc
push
rorb
inc
pushf
pop
movsl
adc
add
inc
movsb
cmc
push
pop
sub
push
mov
stos
aas
xchg
addl
add
in
pop
pop
scas
xlat
mov
cmc
jo
mov
xor
inc
iret
and
stc
in
add
cmpsb
mov
ljmp
les
pop
dec
pop
pop
jmp
jae
push
pushf
sbb
push
test
in
inc
sbb
fdivrl
ret
mov
xchg
jo
pop
shl
pop
inc
rcl
call
cli
mov
js
scas
adc
mov
xor
jbe
or
notl
xchg
inc
mov
gs
outsl
mov
mov
enter
adc
pop
push
stc
sub
sti
js
icebp
nop
mov
jmp
mov
dec
insl
in
pop
and
or
dec
pop
mov
inc
cmp
push
adc
or
xchg
fsubrp
jns
or
test
adc
adc
loop
mov
xor
adc
mov
jmp
movsl
add
imul
xor
sub
cmpsl
mov
enter
and
jecxz
mov
mov
mov
popf
and
stos
add
xchg
shrl
push
dec
jl
mov
nop
pop
lods
test
pop
rcll
mov
negl
xchg
popa
sub
or
out
js
ljmp
rorl
lock
ficoml
inc
int
and
jns
arpl
xor
push
sbb
bound
ret
leave
leave
mov
out
test
xor
xchg
fldenv
std
lcall
mov
mov
push
in
pop
sub
sbb
lods
lds
fldcw
and
std
xor
pop
clc
dec
movaps
sub
and
fsubrl
push
xor
negb
sbb
dec
or
and
sahf
push
push
inc
inc
xor
push
cltd
ret
jb
xor
mov
pop
insb
and
lods
sbb
mov
rol
jb
and
into
mov
aas
jg
dec
mov
mov
push
inc
sbb
xchg
outsl
sbb
lea
sbbl
mov
push
nop
inc
adc
jnp
lock
gs
cmp
leave
lret
js
pop
xor
push
pop
xchg
push
xchg
mov
adc
popf
cmpsb
push
mov
pop
cmp
test
daa
aaa
cmc
ret
and
fisubrl
or
jge
add
fbstp
mov
pop
add
test
icebp
inc
inc
loope
sbb
mov
aam
imul
ss
sbb
ret
and
lret
rcl
mov
or
cmc
sti
mov
fidivrs
in
and
push
les
mov
add
add
fwait
nop
lret
rclb
je
push
sbbb
xor
adc
ja
test
jecxz
xchg
jno
sarb
fwait
dec
adc
shll
push
mov
and
ret
mov
push
int3
pop
add
testl
dec
inc
mov
xchg
cmp
ss
mov
xlat
jmp
adc
in
xchg
ret
xor
push
xchg
cwtl
arpl
xor
test
out
mov
adc
iret
vpinsrw
jbe
add
or
cwtl
dec
add
imul
adc
movsb
sub
movsb
mov
clc
shll
mov
jo
add
push
es
xor
and
xchg
lds
icebp
adcb
in
xchg
sbb
addb
push
aam
out
shll
test
test
mov
mov
stos
shl
add
and
push
pop
bnd
dec
cld
invd
push
loope
xchg
or
cmp
ljmp
cmp
out
push
rcrb
icebp
pop
inc
test
xor
cmp
cmp
mov
mov
mov
test
out
add
xlat
arpl
icebp
inc
jmp
cs
jg
xlat
jb
and
insl
jno
ret
jp
add
mov
xchg
loope
je
andb
jle
dec
xchg
cmpb
enter
cmp
pop
ficomps
adc
mov
outsb
mov
rorl
mov
and
xor
jp
xchg
mov
and
lcall
and
in
movsl
jmp
jle
dec
imul
sub
hlt
scas
xchg
js
addl
aaa
push
ret
jmp
in
cmp
sub
pop
fnstsw
lret
lret
add
inc
add
adc
push
ljmp
jg
adc
imul
xchg
mov
dec
ljmp
pop
bound
push
divl
fcom
xchg
cmc
sbb
outsl
or
push
jnp
mov
dec
xchg
movsb
xchg
mov
fld
mov
pop
mov
and
arpl
aad
vpmacssdqh
lods
jecxz
pextrw
or
jmp
aam
mov
adc
loop
xchg
inc
test
pop
add
sbb
fdiv
xchg
dec
lods
jb
mov
rorb
out
subl
enter
cs
icebp
and
or
lret
mov
cmpsl
mov
dec
sub
pop
inc
mov
sub
mov
or
icebp
jae
add
adc
push
div
not
pop
or
mov
addb
bound
imul
xor
sub
imulb
jbe
cltd
mov
mov
dec
jno
and
lods
pop
mov
stos
shr
mov
push
outsb
push
xchg
push
decb
mov
pop
mov
push
stos
lahf
pop
mov
cmp
repnz
xor
shrl
jle
ljmp
add
and
std
enter
jno
dec
and
rorb
mov
mov
jbe
pusha
and
into
sbb
xchg
int3
cld
cmc
or
out
xor
mov
out
insb
push
cmp
scas
fdivl
sbb
imul
or
mov
add
push
xlat
testb
das
mov
mov
xchg
add
movsb
int
mov
cmp
insb
and
lcall
dec
sbb
lret
jno
loopne
loopne
mov
sbb
das
sub
mov
dec
rcr
loope
das
fwait
adc
xchg
jle
dec
push
mov
movsl
push
insb
pop
mov
jb
inc
aas
mov
ja
pop
in
cltd
xchg
jb
dec
daa
out
cld
dec
out
aad
frstor
mov
les
iret
fcomp
dec
sub
xchg
cmpsl
dec
sahf
pop
jecxz
sahf
nop
xor
fsubrs
push
jmp
sub
xchg
or
sbb
ret
scas
xchg
jno
mov
xchg
push
fwait
pop
add
xchg
enter
sub
xor
ja
jg
arpl
jecxz
jbe
mov
test
jecxz
mov
mov
gs
inc
ljmp
push
inc
add
fucomi
add
or
jb
ret
mov
pop
or
cmp
push
xchg
ret
jo
iret
ret
cmp
adc
sub
mov
push
test
mov
xchg
and
inc
insl
dec
and
sub
jne
xchg
pop
aad
inc
aas
lods
push
dec
dec
aas
adc
inc
cwtl
data16
insb
fldl
adc
lock
inc
mov
xor
mov
mov
mov
or
pushf
stos
and
mov
filds
xchg
mov
movsl
add
scas
jp
bound
inc
cmp
leave
sarl
cmp
stc
dec
in
xchg
cmp
sub
jge
flds
xor
dec
dec
lock
call
xor
sbb
outsl
dec
mov
sub
fisubrs
and
testl
xchg
cltd
cld
cmp
jge
inc
jae
xchg
cwtl
push
lock
out
sub
cs
push
jae
push
dec
lret
loopne
popa
mov
ret
mov
mov
ja
rorl
push
mov
in
jmp
pushf
add
movsl
sti
aas
call
enter
inc
mov
dec
cld
push
shll
pop
aas
out
loop
pop
iret
mov
mov
les
sti
stos
jmp
jle
ja
mov
adc
pop
jnp
cmc
or
fldl
mov
ficompl
pushf
and
mov
add
pop
add
jle
adc
xor
inc
in
inc
pushf
jbe
push
adcl
loop
dec
cmp
push
xchg
mov
jmp
test
inc
mov
cmc
add
aaa
sub
jo
push
jg
cwtl
loope
mov
dec
pushf
out
inc
cli
add
cmp
int3
sarb
xor
aad
mov
fs
xchg
cmpsl
mov
mov
pushf
mov
cmp
mov
jb
sahf
roll
cmpsb
and
dec
mov
or
jecxz
shl
add
cmp
cmp
jl
inc
outsb
xchg
ljmp
repnz
pop
xor
test
in
push
outsb
fstpt
popf
mov
addr16
ficoml
ds
add
xadd
mov
mov
mov
scas
inc
cmovl
arpl
mov
test
jle
pop
ret
dec
mov
jg
sub
imul
test
and
jecxz
push
rcl
int
fs
test
hlt
out
fstpt
das
jnp
sub
insb
push
in
sub
add
lods
sub
clc
and
hlt
fcoml
jecxz
xchg
pop
lret
jno
aam
aas
aam
and
arpl
xor
imull
repz
hlt
addb
and
adc
dec
test
jns
sbb
inc
sbbl
call
push
fisubl
mov
fidivs
xchg
lahf
je
lea
pop
pop
and
test
and
xor
es
sub
dec
or
andb
xor
inc
hlt
mov
jl
mov
push
stos
shrb
jae
or
mov
imul
mov
jl
mov
lret
xchg
mov
shlb
jge
pop
sbb
push
sar
and
popf
popf
adc
gs
adc
xchg
and
jle
ja
cli
stos
insb
int
mov
dec
or
or
cmc
loope
adc
jle
scas
ljmp
sahf
sub
dec
lock
dec
test
sub
inc
dec
lea
sub
outsb
cmc
test
xchg
cmp
sub
ret
daa
mov
lock
decb
adc
test
mov
aaa
loopew
and
and
shrb
mov
int3
xchg
fistl
add
js
outsl
mov
mov
cmp
sbb
nop
or
test
lock
mulb
mov
movsl
int3
mov
pusha
pop
or
dec
cmpb
fistpl
add
add
lods
mov
xor
iret
jmp
or
and
adc
inc
mov
jne
lea
lret
or
pop
shrl
mov
push
pop
repz
mov
jnp
and
cmp
mov
in
aaa
cwtl
mov
sarb
push
add
jb
jne
mov
mov
jne
cmp
movsl
pushw
add
mov
cwtl
mov
je
filds
movsl
mov
mov
jae
or
mov
mov
pushf
xchg
lret
jp
add
test
mov
mov
in
dec
push
jne
fsub
jle
testb
pushf
rcrl
test
add
add
xchg
test
stos
xchg
push
xchg
inc
cmp
sbb
pop
jl
cltd
shl
pop
in
cmc
repz
mov
jmp
dec
cmp
nop
in
sbb
pushl
fidivs
sub
xchg
insl
or
cwtl
lods
dec
cmp
div
mov
lds
in
addb
pop
decb
add
lods
in
xchg
and
pop
cmp
jl
pop
shr
clc
into
jecxz
inc
mov
aaa
mov
mov
insl
fadd
packuswb
out
pop
bound
fisubrs
lret
cmpsb
es
lahf
push
fpatan
sbb
jmp
arpl
push
fbld
sbb
shr
repz
add
add
xorb
xchg
aaa
pop
mov
add
and
test
test
add
lock
mov
mov
pop
iret
in
shlb
aam
fidivs
jns
mov
inc
stos
bnd
adc
mov
lret
push
rol
jle
nop
cmc
std
shlb
add
mov
adc
mov
adc
loopne
inc
fsubrs
fsubl
sbb
and
dec
and
in
sub
fldenv
fsubl
adc
jnp
cs
mov
popf
jae
div
ljmp
lds
popa
fwait
pop
jae
xchg
xlat
dec
mov
cmp
mov
or
add
les
loopne
imul
lret
mov
cld
subl
nop
pusha
add
push
cli
sbb
fiaddl
aas
xchg
pop
jns
sub
lret
popf
pop
fsts
orl
mov
lock
xchg
xor
insb
movsl
sub
or
and
popf
adc
test
cmp
cld
add
push
inc
jno
pop
popf
fstpl
push
adc
loopne
cwtl
xor
push
dec
out
and
jge
jge
cltd
mov
xchg
pop
lods
roll
and
addl
mov
shr
cmp
cmp
dec
sbbb
fistpll
into
addl
mov
out
movsl
xchg
push
sbb
inc
rorl
mov
push
scas
mov
adc
pushf
nop
mov
sub
mov
sub
int3
daa
cltd
mov
or
rclb
rcll
ljmp
scas
in
dec
push
dec
stos
daa
arpl
cmc
lds
lods
hlt
scas
and
pop
adc
lea
dec
cmp
dec
jno
fnstsw
popf
dec
enter
xor
xchg
and
icebp
sub
mov
push
sbb
mov
test
inc
movsb
push
mov
stos
sti
mov
imul
cmp
mov
out
xor
xchg
dec
xor
insb
daa
pop
mov
cmc
push
nop
mov
mov
mov
popf
add
movsl
mov
popa
out
push
outsl
mov
js
repnz
aaa
or
outsl
test
cli
dec
push
pop
lret
call
aam
cmpsl
test
push
mov
cmp
sbb
and
pop
xchg
sub
lret
mov
in
movsb
pop
in
mov
scas
add
ljmp
mov
lea
xor
xchg
nop
test
jno
idiv
clc
mov
in
push
jbe
inc
jecxz
pushf
cs
aas
mov
sahf
ja
cmpsb
and
lock
sti
orb
sbb
jne
inc
cmp
mov
and
fnstsw
and
les
pop
jne
pop
fsubl
shll
pcmpgtw
arpl
cmp
adc
loope
mov
shl
push
mov
push
lods
mov
nop
add
pop
or
add
adc
jnp
inc
pop
daa
jg
cld
test
inc
cmpsl
mov
sahf
mull
jmp
sbb
out
mov
mov
pushf
cs
mov
test
dec
mov
es
lds
ret
xchg
xchg
sbb
imul
mov
scas
leave
rcll
cmp
mov
push
aad
mov
fadds
sub
cld
and
mov
addr16
sub
ret
dec
xor
add
popf
sub
test
imul
sub
cmp
int3
and
cmp
pop
lock
ds
mov
xor
xchg
pop
roll
cmpsb
and
cmpsb
xor
dec
push
sbb
out
or
push
das
repz
mov
lea
sub
mov
inc
or
adc
sbb
les
jbe
out
mov
adc
cmc
aas
sbbb
lock
push
cli
ja
xchg
push
js
push
daa
cmpsl
jecxz
dec
nop
mov
shrb
pop
pop
dec
je
imul
inc
ljmp
and
pop
stc
add
int3
mov
adc
aas
fisubs
sbb
sti
xor
fcmove
mov
int
scas
jp
cld
push
js
dec
mov
push
dec
adc
xorl
les
cmpsb
cmp
adc
ljmp
lods
fsubrs
xchg
mov
xchg
push
and
cmp
lods
inc
cmp
das
in
cmp
jmp
fists
aaa
adc
cli
pop
fdiv
cld
icebp
fsubrl
jge
jns
cmp
scas
out
adc
adc
dec
dec
inc
sub
pushf
test
cmpsb
adc
add
sarb
packuswb
and
stos
mov
cmc
outsl
sub
pop
aam
cs
pushf
adc
fbld
outsb
sbb
fsubs
stos
mov
std
mov
mov
es
fsub
and
add
sbb
inc
jmp
ljmp
push
jns
push
jne
loop
push
pop
jo
pusha
pop
cld
iret
scas
lds
push
jg
mov
shll
pushfw
vunpckhps
popf
fwait
push
arpl
or
int3
push
mov
sbb
pop
loop
mov
inc
in
das
mov
cmp
lahf
add
mov
sub
lods
push
dec
in
out
xor
in
test
fadds
arpl
pop
test
into
mov
rcrl
aam
idivb
sti
inc
push
xor
cli
out
aam
cwtl
fsubrs
sti
adc
dec
lock
sub
lret
push
jne
add
mov
cmp
movsb
xchg
push
push
push
mov
cmp
mov
shr
or
fmuls
fcompl
mov
dec
mov
nop
bound
out
popa
fwait
pop
pcmpeqd
je
orb
or
cmp
push
dec
push
sbb
lcall
pop
cvtps2pi
cmp
adc
sahf
push
jno
jae
stos
mov
adc
lahf
cwtl
ds
aas
test
xor
orb
cmpb
pushf
dec
int
cld
xchg
sbb
mov
add
aad
sbb
add
repnz
inc
shlb
adc
out
sbb
outsb
cltd
ret
dec
xor
or
push
in
pop
jnp
pop
dec
xchg
int
loop
sbb
add
in
lret
mov
cmpsb
push
sub
cmp
push
cli
lods
sbb
scas
test
lds
out
jnp
cmpb
push
js
sub
and
jne
xlat
int3
push
jge
shlb
push
adc
repz
xchg
in
iret
mov
shrl
push
loope
stos
cltd
push
int
lock
sbb
sub
inc
push
xchg
mov
push
pop
int3
mov
mov
bound
lods
mov
jno
fadds
pop
shlb
in
jbe
mov
inc
in
push
push
ret
pop
add
or
fdivrs
dec
js
mov
leave
inc
push
xor
sbb
or
or
lock
aad
jnp
adc
sbb
jp
jbe
lods
sbb
ds
mov
push
mov
inc
pop
push
pop
ret
xchg
sbb
push
mov
and
loopne
xor
sbb
iret
out
ja
imul
push
hlt
lds
cltd
sbb
cmp
xchg
push
std
cmp
aas
or
repz
std
jbe
insl
loopne
adc
adc
inc
dec
pop
pop
js
cmpl
push
mov
call
dec
lock
sti
mov
shll
nop
adc
es
inc
lods
or
xchg
dec
cwtl
scas
jo
add
inc
sub
pop
stc
icebp
dec
cmp
cmp
pop
sbb
outsb
shlb
cld
aaa
sub
rorl
dec
out
xchg
pop
pusha
mov
scas
cli
cs
int
sbb
cmp
cmp
shll
pop
pop
inc
mov
fwait
cmp
decl
imul
in
sbbl
jge
lret
clc
add
inc
test
cs
pushf
mov
sbb
lret
cld
adc
jbe
ljmp
cmp
add
clc
cmp
jmp
mov
jno
push
fisubl
mov
and
outsl
daa
int3
lds
gs
pop
mov
rorb
sarl
je
nop
sti
gs
mov
ja
in
push
jb
push
inc
push
and
lcall
int
adc
pop
push
add
pusha
inc
es
addr16
and
lret
cmp
lea
add
outsl
cmp
out
jmp
xor
push
push
add
xor
jns
inc
xor
sbb
shll
sbb
pop
sub
cmpsl
add
xor
lahf
loope
jle
les
pop
mov
mov
dec
jne
jmp
scas
ret
stos
xchg
popa
adc
into
adc
dec
fcmovnb
fcomps
dec
jp
mov
notb
xchg
out
pop
adc
pusha
aam
sbb
mov
mov
clc
nop
cld
cmp
xlat
enter
loop
lahf
ja
mov
push
add
pop
icebp
movsb
push
call
outsb
loope
test
popf
pop
leave
jmp
mov
cmp
push
mov
xchg
mov
stos
pop
ds
cmc
sbb
fldl
dec
in
push
mov
es
or
cmp
mov
jns
arpl
cmp
xlat
insb
xlat
enter
ja
fs
or
test
jb
sbb
ja
test
lcall
mov
test
inc
jnp
adc
lcall
pop
mov
push
cwtl
repnz
daa
nop
jmp
push
cmpsb
test
daa
add
aaa
jns
adc
outsb
sub
adc
dec
mov
int
adc
outsl
push
inc
jnp
and
int3
fldl
add
mov
and
loop
xor
lods
rcll
dec
cmp
mov
pushl
xchg
jb
jg
jne
cs
xchg
cmpsb
sub
or
xchg
std
out
jne
inc
inc
lds
pop
mov
cld
cli
jno
fsubl
lods
fs
push
adc
imul
sahf
xchg
cvttps2pi
fidivl
fldcw
pop
jno
out
cmp
and
std
pop
test
or
jmp
enter
add
repnz
sbb
int
test
cmpsb
aad
loopne
push
mov
insl
out
jae
in
push
sbb
adc
sbbl
or
cmp
dec
or
cmp
adc
shll
ss
dec
std
adc
xor
push
imul
sub
push
pop
mov
imul
or
test
insl
dec
int3
pop
cmp
pop
ss
testl
xor
mov
aaa
cmc
mov
loop
dec
mov
mov
adc
pop
dec
add
pop
daa
stos
test
and
data16
test
jbe
xor
mov
pop
inc
imul
add
aaa
mov
out
jl,pt
out
cmp
pop
jno
lret
xchg
repnz
dec
push
mov
test
iret
std
cmp
les
jmp
or
lods
pop
xchg
lret
jmp
cli
push
jg
push
add
loope
and
and
inc
lods
loop
test
nop
adc
dec
loope
xor
clc
mov
sub
es
out
loopne
pushf
neg
into
jae
addr16
mov
sbb
mov
sahf
adc
xchg
repnz
add
addl
sbb
lahf
jb
push
stos
out
push
lcall
dec
pop
fdivl
mov
pop
mov
adc
sub
popa
aaa
or
jno
out
jmp
or
addr16
in
cmp
mov
jbe
enter
in
adc
jb
lcall
mov
out
sub
lods
sbb
fisttpll
shlb
pop
sbb
fucom
jl
sbb
xor
andl
test
mov
in
repz
mov
xor
das
mov
xchg
je
hlt
jge
sbb
push
fsubrs
push
jnp
mov
into
imul
mov
bound
and
mov
int
mov
or
mov
mov
xor
movsl
lods
out
xor
push
jno
das
icebp
mov
nop
sti
pop
mov
xchg
mov
and
movsl
mov
unpckhps
or
inc
stc
mov
push
lea
xchg
outsl
cwtl
aaa
hlt
cmp
mov
jge
lret
and
dec
pop
orb
jg
imul
cltd
dec
cmpsb
decb
jne
cld
mov
flds
or
mov
and
push
sbb
sti
mov
pop
nop
pop
dec
les
lahf
addr16
and
rorb
xchg
fcom
sarb
add
fstps
dec
loope
inc
mov
je
pop
repz
add
jl
pop
mov
xor
dec
adc
jno
adc
nop
jb
and
fwait
add
mov
fdivrs
jg
nop
mov
cmp
shl
orl
daa
sub
movsl
loope
lock
jbe
dec
shlb
cld
fcoms
adc
sub
aam
mulb
pop
fisubl
idivb
sub
pop
push
add
xor
es
jle
mov
and
ljmp
push
inc
fs
movsb
add
in
mov
jge
sti
aas
dec
cltd
lahf
cs
mov
mov
dec
inc
decl
pop
pcmpeqd
in
jne
xchg
xor
jle
roll
sbb
pop
js
pusha
popa
mov
dec
inc
mov
ret
xchg
insl
or
push
js
or
xchg
cmp
mov
out
je
xchg
in
pusha
pop
xchg
js
and
movsl
std
fcom
or
out
cmp
rdmsr
push
fiaddl
jmp
mov
imul
test
mov
inc
pop
aad
push
mov
int3
leave
pop
in
cltd
jno
push
jge
push
repz
mov
je
xor
add
in
sub
jp
xor
ss
dec
pop
pop
or
mov
sbb
mov
popf
and
or
sbb
fbstp
popf
pop
int3
dec
scas
ds
push
jbe
fwait
je
lahf
adc
mov
adc
sub
xchg
xlat
icebp
cmp
jmp
fldt
sti
mov
inc
lods
mov
fsts
xchg
adc
insb
mov
bound
in
jns
pop
mov
lcall
pop
inc
fcomi
inc
or
popl
ret
imul
sbb
and
xor
fucomip
jo
cmc
test
or
aaa
jne
push
push
inc
into
jp
fcoml
mov
mov
mov
jmp
and
ret
test
cmpb
and
xchg
lds
xor
test
stc
js
jl
enter
movsb
bound
xchg
xor
xchg
xor
cmp
scas
sbb
xchg
xor
pop
call
lock
or
xor
inc
lcall
xchg
int
cmc
pop
test
cmp
pop
mov
mov
or
sbb
jnp
mov
mov
out
add
aaa
mov
pusha
imul
ret
push
and
xchg
lods
aas
adc
push
cmp
cmp
fsubs
pop
or
out
iret
xchg
pop
int3
xchg
shll
xchg
popf
jae
loopne
or
add
jnp
outsb
ret
test
sub
movsl
int3
imul
mov
mov
push
sbb
inc
xor
lret
cmp
cmpsb
sbb
cltd
pop
mov
add
mov
inc
jmp
mov
add
rolb
in
xlat
xchg
sahf
inc
sub
iret
jno
or
push
xchg
jbe
aam
sbb
lods
into
xchg
bound
mov
pop
cmp
filds
inc
pop
push
shl
ljmp
push
aaa
adc
lret
cmp
pop
dec
outsb
xor
enter
xchg
jge
loop
idivb
cmp
pop
dec
xor
je
bswap
aaa
cmp
lcall
addr16
rcrl
insl
and
out
rcrb
aam
sub
insl
jb
mov
stc
ds
ret
into
imul
and
ret
lret
fucomi
push
push
mov
dec
outsl
mov
dec
push
dec
xlat
add
popl
jecxz
fs
cli
cmp
pop
mov
mov
cwtl
cmp
jl
xor
pop
jbe
repnz
rep
out
aam
addr16
push
adc
sub
mov
push
sahf
int
icebp
sbb
mov
popa
jne
aaa
mov
xchg
push
insl
inc
adc
into
add
xchg
adc
and
xchg
sbbl
insl
or
repz
sbb
insl
push
sub
pop
cmp
movsb
jno
push
and
mov
or
sub
cli
cltd
adc
or
mov
jne
push
lret
subb
push
cmc
xchg
in
jns
push
lcall
sahf
mov
mov
push
insl
mov
test
decl
push
mov
sub
pushf
movsb
clc
cli
sbb
and
lret
mov
test
jp
outsl
adc
dec
test
xlat
aad
call
jle
cld
or
out
and
adc
add
sbb
add
out
std
iret
out
cmpsl
es
pop
cmp
dec
lock
pusha
sti
mov
test
aaa
jp
or
aad
cwtl
stos
insb
push
xor
sub
movsb
call
test
dec
cmp
xchg
mov
lods
aas
nop
adc
aad
aaa
ficompl
test
jb
bound
cmp
cmp
jle
sahf
hlt
shlb
loop
inc
addr16
sub
or
pop
xchg
mov
sub
enter
cmc
xor
xor
inc
jb
pop
lds
fs
hlt
mov
jne
push
and
cltd
cmc
sbb
xchg
sub
fisttpll
dec
xor
mov
jne
cltd
pusha
dec
inc
mov
inc
push
pushf
stos
mov
insb
sub
outsl
dec
pusha
cmp
jae
push
push
push
arpl
and
push
or
stos
sbb
jo
jnp
scas
adc
cmpsb
jp
call
dec
add
jp
inc
insb
dec
dec
and
dec
sbb
roll
std
or
adc
in
js
xor
jo
inc
and
jp
sbb
dec
stc
or
icebp
sub
jmp
and
jns
sti
xchg
adc
dec
pop
fsubs
xor
xor
sub
repnz
mov
into
lods
daa
data16
ret
add
imul
sub
mov
inc
mov
sub
push
mov
pop
iret
ja
stc
sub
aas
sbb
ficoms
sbb
jne
xchg
and
daa
out
xor
mov
idivb
mov
ss
cmp
stos
insb
arpl
js
loope
mov
push
mov
mov
add
pop
leave
jecxz
sbbl
cmc
pop
inc
in
testb
pop
push
repnz
imul
lcall
sbb
xor
jno
hlt
pop
add
loopne
fldcw
cli
add
inc
inc
fdivs
mov
mov
cmp
pushf
mov
jg
and
bound
pop
push
test
adcl
int3
pop
cmpb
jns
popf
add
pop
mov
cmp
jge
cmp
insl
adc
sti
fdivr
ret
sbb
arpl
lds
push
sub
inc
mov
lods
mov
pop
jp
xchg
xchg
mov
loop
jmp
lret
add
jp
cmp
or
mov
aam
imul
pop
inc
aad
adc
cmpsb
add
les
outsl
clc
mov
xlat
mov
pop
mov
mov
mov
ljmp
mov
cmpsb
mov
add
aaa
jns
insl
xor
mov
xchg
icebp
test
fwait
pop
ret
lea
testl
call
pop
lods
out
jle
mov
push
adc
inc
push
shl
movsb
cwtl
or
or
push
popf
xchg
and
xor
and
aad
aam
sbb
imul
out
mov
sub
mov
dec
cmpsb
stc
sub
push
rorb
sbb
cmp
cmp
out
cwtl
jmp
dec
es
stos
test
mov
int
adc
xchg
ret
inc
xor
mov
div
or
lret
movsb
adc
stos
xchg
sub
mov
push
cmpsb
add
mov
pusha
insl
sbb
cmovp
in
insb
xor
cmp
xor
lret
or
sub
cmpl
pop
adc
xor
adc
dec
inc
xchg
xlat
xchg
imul
es
loope
xchg
add
or
adc
xor
sub
outsl
int
addb
call
ficompl
mov
insb
mov
repnz
fwait
pusha
or
add
daa
enter
lods
inc
mov
ret
and
sub
or
cli
mov
test
jb
jno
sub
xchg
jle
lods
pushf
jg
in
sub
add
xchg
sahf
or
xor
mov
data16
and
jno
pop
xchg
fnsave
andl
cmp
outsb
dec
ret
cmc
lods
mov
push
jl
dec
call
cmp
test
fsts
mov
push
jg
add
jns
add
push
pop
mov
add
and
loope
pop
mov
mov
inc
xchg
adc
iret
and
add
adc
xchg
mov
xor
cmpb
dec
test
int3
sti
in
xchg
cli
out
subb
mov
adcb
jecxz
jnp
jne
cltd
in
add
push
sti
cmp
push
mov
xchg
or
and
mov
inc
iret
out
outsb
insl
adc
daa
jmp
gs
mov
push
adc
andb
je
popa
sub
add
out
fs
xchg
dec
ror
adc
and
xchg
and
adc
leave
sub
pop
mov
cltd
xor
sbb
push
stos
cld
jl
ret
sub
bound
outsb
lods
daa
xor
add
sbb
mov
xorl
and
jl
rolb
setp
jae
lret
divl
push
adcb
ds
mov
mov
icebp
dec
jns
mov
and
or
xchg
jne
fisttpll
push
push
sbb
ret
repz
in
xchg
inc
pushf
into
xorl
mov
pop
and
sub
sub
jmp
jb
test
cs
addr16
aaa
mov
cmp
cmpsl
pop
mov
je
lret
inc
sub
mov
lahf
cld
dec
outsb
dec
das
and
add
and
test
xchg
xor
jb
xor
xchg
sub
mov
mov
outsl
fucom
or
mov
mov
mov
movsb
mov
test
xchg
mov
repz
daa
xchg
sub
cli
ja
leave
jecxz,pt
cmp
fisubl
sub
lahf
pop
in
mov
test
pop
cmp
push
xor
jo
shr
iret
xor
aad
adc
xchg
leave
loop
iret
imul
sbb
push
aam
out
icebp
mov
aas
push
cmp
pop
sbb
scas
cmc
rolb
testb
inc
jo
sarb
jbe
mov
mov
lds
mov
and
jnp
adc
cltd
or
push
mov
stc
popf
jae
xchg
cli
andb
sbb
cmpsb
mov
fwait
movlps
aas
sub
shlb
push
cmp
fbld
cmp
into
push
test
sbbb
sub
sti
subl
jecxz
mov
imul
movsb
mov
outsl
mov
shlb
stos
or
lds
mov
das
push
out
inc
lods
mov
idivl
push
inc
cmc
add
add
aad
ja
and
sub
mov
jg
adc
push
mov
or
adc
jecxz
jo
xchg
mov
iret
adc
sub
mov
mov
scas
xchg
push
dec
xor
jecxz
sbb
rolb
aas
push
push
dec
je
push
and
pop
inc
sub
push
arpl
clc
nop
sub
mov
stos
fisubl
adc
sbb
xor
iret
clc
ret
scas
jl
int3
repz
or
sahf
mov
jg
imulb
popa
test
and
hlt
std
cmp
xor
push
aas
scas
dec
movsl
xchg
std
loopne
mov
dec
popa
cwtl
mov
fs
idivl
lods
jecxz
xchg
mov
xor
mov
cmp
adc
loope
mov
faddp
mov
pop
cmp
jmp
mov
cmp
and
dec
pop
mov
pushf
fdivs
fnstcw
hlt
stos
sbb
and
add
dec
add
insb
icebp
orb
push
fs
aad
or
sbb
movsl
xchg
out
cltd
inc
dec
std
dec
jl
out
sbb
jne
fsubl
pop
insl
mov
push
call
sub
mov
nop
mov
ljmp
into
repz
mov
cmp
pop
into
xlat
xor
add
addr16
or
adc
push
shlb
push
adc
movsb
out
jo
cli
out
xchg
mov
or
out
fldenv
in
sbb
and
lret
xchg
adc
push
pop
cmp
and
mov
jmp
cmp
clc
sub
arpl
mov
inc
stos
mov
out
lret
mov
std
icebp
inc
inc
stos
fwait
mov
xor
insl
xchg
out
pop
jo
rol
test
xchg
mov
mov
cmc
aas
jns
out
jns
and
push
shl
sub
ret
or
sar
pop
mov
jbe
aam
inc
inc
pop
pop
gs
or
bound
mov
adc
bound
sub
sub
mov
fisubl
push
dec
inc
inc
in
into
arpl
inc
xchg
fstpt
movsb
test
mov
mov
pop
aad
xchg
pop
das
mov
in
ret
mov
loope
xor
jno
cmp
outsb
mov
imul
or
add
inc
push
test
imul
xor
daa
jmp
test
test
subl
cmp
pusha
push
xchg
mov
add
lds
push
dec
add
idivl
hlt
sbb
fcoms
xchg
jnp
or
jno
sbb
cmp
and
repz
cld
decb
out
das
arpl
loop
leave
cli
sbb
adc
lret
repz
sbb
std
js
jo
pop
adc
out
shll
in
inc
sarb
xor
in
enter
xor
hlt
dec
sub
jp
and
outsb
es
mov
xchg
jmp
rorl
mov
ret
lock
cmp
stos
mov
jmp
pushfw
push
clc
adc
pslld
ret
adc
inc
and
mov
pop
insl
or
dec
in
push
or
adc
pop
shlb
pop
setns
cmp
aaa
push
repz
incb
push
mov
aad
push
push
or
daa
and
cmpsl
dec
or
sub
jb
xchg
std
popa
aaa
mov
mov
mov
int
cmp
dec
adc
push
mov
in
mov
jg
cmp
and
mov
idivl
and
fs
lods
dec
shll
leave
or
pop
mov
je
inc
pop
andb
adc
mov
shlb
loopne
js
mov
push
aad
iret
shll
sub
mov
movsb
sbb
loopne
sbb
imul
cmp
mov
xchg
scas
jp
add
les
mov
push
cltd
es
mov
add
dec
mov
ret
aaa
call
dec
push
jp
sub
or
and
xor
mov
fcomp
pop
out
ja
sbb
mov
test
cmp
sub
add
popf
or
xor
pop
or
aad
fildll
dec
or
push
data16
xor
mov
sub
sub
add
cltd
ljmp
rcrb
out
xchg
add
pop
pop
jae
push
and
je
fldenv
fsubl
in
imul
dec
mov
into
popf
ds
xor
mov
push
andb
insl
mov
inc
sbb
inc
cmp
mov
jg
mov
xor
out
movsb
pop
jne
inc
movsb
mov
jmp
mov
mov
rcrb
mov
lock
push
std
push
jecxz
inc
popf
in
mov
cli
je
sbb
scas
mov
in
pop
ficomps
aad
pushf
adc
add
rolb
mov
outsb
cs
adc
xchg
push
lahf
sti
loope
js
sbb
xchg
xchg
lret
mov
insb
pop
js
out
push
es
mov
xor
mov
xchg
jmp
leave
fcompl
jl
mov
lds
mov
pop
sahf
mov
inc
mov
std
pop
mov
ss
aas
cltd
stc
push
fisubs
pop
cli
neg
and
dec
sbb
movsl
dec
cld
inc
call
arpl
mov
call
ljmp
dec
push
pop
cmpsl
adc
push
negb
in
mov
rcl
sahf
mov
inc
jnp
cmp
sbb
int
jmp
out
mov
jmp
repz
lcall
mov
jo
test
jo
aas
adc
fstp
ss
inc
fidivrl
mov
mov
push
mov
dec
sbb
adc
lds
loopne
mov
call
xchg
xor
das
cmp
bound
sub
enter
jl
pop
adc
xlat
cmp
inc
or
roll
xor
out
lahf
and
inc
push
frstor
xchg
ficomps
ss
shrb
add
jecxz
dec
out
movsb
out
bound
ret
pop
test
leave
mov
or
or
xor
xchg
jecxz
loop
les
xor
outsl
push
arpl
jns
es
inc
push
rcll
mov
xor
adc
hlt
sbb
sbb
sub
cmp
loop
or
mov
cmc
mov
xchg
scas
xchg
add
lock
subb
cld
xor
cmp
ret
jno
add
test
adc
imul
push
mov
dec
inc
mov
dec
pushl
insl
fs
rclb
xor
lods
cld
fiadds
adc
adc
inc
lds
xor
cltd
push
aaa
int
add
or
push
push
push
add
mov
inc
pop
jge
add
mov
mov
in
mov
lods
imul
fdiv
mov
lea
pop
add
clc
fistps
idivb
and
sbb
xor
add
xor
adc
mov
jb
insl
add
pop
push
jnp
dec
aad
fiadds
xchg
xchg
mov
pusha
push
jbe
inc
loopne
sbb
out
sub
sub
dec
and
mov
pop
xor
dec
enter
insl
imul
xor
mov
rcrl
aad
loopne
notl
pop
std
lahf
fnsave
ret
mov
roll
fs
pop
loop
jle
mov
push
push
pop
call
jp,pt
pop
lcall
jno
fwait
adc
movsl
xchg
adc
ficoml
jge
loope
mov
cltd
mov
or
jno
cltd
sbb
cmc
mov
xchg
jge
imul
cld
push
movsb
rclb
cmp
fcomp
mov
pop
and
xor
adc
pop
jp
mov
sub
jbe
loop
insl
insl
mov
mov
sbb
pop
sbb
and
add
in
iret
les
mov
sub
out
test
sti
out
and
fcomps
xchg
xchg
mov
outsl
adc
push
fsub
out
sub
mov
and
cmp
js
inc
fcmovnbe
pop
adc
and
shrb
movsb
add
sbb
sub
gs
dec
xor
jne
push
push
daa
cmc
push
xchg
das
xchg
mov
mov
dec
cmp
js
mov
popf
and
pusha
or
jg
dec
sub
pop
mov
sahf
cmc
fs
jg
jns
pusha
test
ds
pop
lods
aad
es
inc
xchg
ljmp
icebp
mov
mov
lods
xchg
mov
enter
inc
mov
out
adc
cmp
mov
bound
outsb
sub
mov
roll
test
fs
adc
and
inc
adc
add
xlat
call
sbb
sarb
movb
fisubs
xor
leave
fisubs
jbe
hlt
cld
incb
pop
add
js
test
push
fbstp
dec
mov
lret
fisttpl
out
mov
sub
out
int3
repz
sti
or
cmp
les
mov
push
sbb
or
xchg
push
sub
cmpb
popf
orb
das
pushf
inc
cmp
xchg
push
arpl
imul
mov
xor
cmp
rol
pop
lods
cmpsl
sarb
xchg
or
repz
dec
stos
popa
cmp
js
out
sub
fldcw
fcmove
adc
movsl
dec
dec
and
mov
mov
mov
out
mov
mov
lods
fisubrl
sahf
add
std
mov
dec
xchg
pop
stc
mov
sbb
jbe
daa
dec
lret
imul
aas
dec
cmpsb
aaa
xchg
sub
bound
and
jbe
inc
add
jmp
cmpsl
cmp
push
into
rcl
inc
sarb
adc
xchg
in
ret
cltd
dec
mov
nop
icebp
xlat
jnp
push
dec
bound
and
icebp
scas
daa
scas
xchg
repnz
bound
mov
cltd
pop
lock
fs
push
sub
stc
fstps
inc
pushf
scas
dec
repz
pop
jmp
jne
loope
sub
movsb
iret
pop
mov
sub
jo
test
jne
mov
jno
movl
push
out
fwait
clc
pusha
test
negl
dec
aaa
cmp
mov
sahf
insl
mov
dec
imul
int3
out
lods
push
test
add
xchg
pop
push
pop
clc
in
and
sbb
mov
xor
mov
popf
in
inc
daa
cmpsl
jae
or
enter
fistl
jno
cmp
push
dec
xchg
es
cmc
mov
fs
jp
mov
clc
aam
enter
jb
insl
cmp
jl
scas
outsl
in
test
outsl
ds
push
push
jo
add
push
cmp
xchg
test
movsb
sbb
scas
hlt
inc
add
fnop
fiadds
lcall
dec
cmp
lret
mov
push
sub
fs
sub
dec
jnp
jne
cli
ret
fstps
mov
mov
fisttps
insl
sub
pop
or
xor
dec
fs
mov
out
imul
rolb
fstpl
cmp
call
in
jecxz
dec
cli
cwtl
adc
mov
outsb
mov
in
loop
mov
and
or
xor
push
pushf
cmp
outsb
jg
imul
call
mov
add
fsubr
adc
mov
xchg
and
mov
mov
pop
inc
pop
push
adc
dec
test
push
nop
and
pop
push
sbb
imul
pop
push
xchg
movsl
testl
mov
popf
int
xchg
rolb
movswl
jmp
shll
js
popa
mov
lret
ret
mov
andl
sti
adc
jo
dec
mov
mov
imul
jg
cmp
jae
scas
enter
or
cli
stos
dec
xor
div
and
int3
ss
test
dec
jl
jb
push
push
aad
and
xor
push
cwtl
jge
mov
dec
faddp
mov
mov
out
dec
outsl
sub
xlat
mov
test
jle
dec
cmp
and
or
sbb
shlb
rolb
test
shll
mov
or
add
popa
or
mov
xor
and
cmp
sub
push
xchg
loop
or
mov
mov
pushf
mov
pop
cmpsl
mulb
dec
aad
pop
pop
cmpsl
inc
xor
mov
add
lea
sbb
notb
push
mov
out
mov
int3
xchg
jns
iret
push
rorb
or
repnz
jns
adc
nop
decl
sub
mov
outsl
neg
js
mov
inc
push
sarb
sub
or
movsb
or
sub
push
add
es
fimull
mov
lahf
scas
sahf
lcall
inc
mov
lods
jmp
pop
or
std
lds
fists
outsb
xlat
out
inc
fstpt
pop
jns
add
sahf
xor
lods
dec
cwtl
sbb
mov
sbb
and
mov
pop
pop
jo
ja
stc
in
ret
adc
sti
cli
xchg
jne
into
int3
insb
and
aad
cmp
fistl
les
xor
aad
lock
cmp
sub
bnd
and
jmp
jge
xchg
mov
push
aas
mov
cmp
cmp
dec
mov
mov
or
sub
pop
xor
lods
push
adc
loopne
out
dec
fs
scas
push
rol
push
mov
dec
imul
pop
pop
pop
pop
push
cmp
jbe
ret
xchg
les
fistpl
mov
sbbb
inc
inc
ds
cmp
ss
movsb
pop
push
lods
xlat
cmpb
sbb
std
jp
sub
push
dec
jle
jl
test
dec
and
mov
cmp
pop
mov
rsqrtps
decb
jae
aam
dec
add
scas
ja
mov
sub
adc
inc
xchg
jl
mov
int
mov
sub
mov
in
sahf
add
out
xchg
loope
pop
pop
test
sbb
xor
cmp
dec
das
and
xchg
mov
dec
movsl
mov
js
and
mov
sbb
pop
cmpsw
loope
jl
mov
cmp
dec
aas
pop
cmp
cmpsl
cmp
mov
stos
scas
popa
lods
push
mov
and
aas
jle
xchg
xchg
inc
adc
roll
jae
test
shl
xchg
in
pop
cmpsl
adc
leave
pusha
lret
in
sahf
push
sbb
nop
mov
sarb
fwait
mov
jl
mov
mov
popf
cltd
lea
jae
mov
xor
leave
fs
lods
int3
adc
pop
add
dec
mov
outsb
imul
fnstsw
test
mov
aad
js
jp
insb
ret
outsb
push
ds
dec
push
xor
loope
push
inc
scas
fidivrs
jp
iret
push
fmuls
hlt
mov
xor
inc
sub
sbb
pop
rolb
add
loope,pn
dec
lcall
xor
out
pop
sbb
lea
lods
out
mov
insl
xlat
in
movsl
dec
adc
dec
jmp
jb
jbe
out
or
mov
mov
lret
mov
inc
sbb
pop
xlat
nop
popf
jbe
mov
testl
dec
mov
mov
and
push
cmp
jne
push
imul
push
orb
mov
pushf
fwait
mov
and
stc
stc
repz
scas
lock
pop
ss
add
sub
mov
xchg
lea
cmc
lret
orl
push
in
enter
dec
popf
add
dec
bound
adc
mov
cltd
std
cmovle
mov
add
arpl
and
sar
pop
mov
add
or
mov
push
test
das
mov
add
push
fcomi
sub
or
cltd
jbe
fdivs
stc
ljmp
fcompl
fsubrs
mov
imul
leave
jne
mov
imul
imul
out
loopne
and
mov
xchg
jmp
cmp
scas
data16
addb
and
xor
aam
push
and
jmp
test
cmp
cmp
outsl
push
aad
lea
lds
lods
xor
push
inc
les
shl
fidivl
mov
xchg
pop
jle
cmpsl
dec
fnsave
insl
cld
iret
scas
movsb
xor
ja
ret
in
rorb
xor
es
push
addr16
cmpsl
leave
dec
fsubrl
xchg
xchg
dec
adc
cmp
movsl
xchg
jnp
jge
mov
std
adc
data16
xor
fistpll
push
aam
inc
mov
or
dec
or
pop
data16
out
mov
or
in
mov
sarl
roll
cli
in
daa
adc
xchg
mov
frstor
repnz
dec
adc
lods
mov
mov
aad
cmpsb
sub
clc
fcompl
adc
xchg
divb
imul
or
ret
xor
cltd
push
sbb
sbb
movsb
mov
adcl
cld
sbb
imul
jmp
dec
pop
xor
or
popf
cwtl
ret
mov
sbb
or
cs
or
std
inc
data16
outsl
bound
pop
cltd
mov
push
leave
add
stos
test
fwait
jne
scas
mov
fadds
lock
lahf
dec
imul
fnstcw
imul
jp
xchg
bound
cld
enter
insb
pop
aad
xchg
aas
stos
push
lret
fwait
std
jo
dec
mov
test
xchg
adc
lahf
sub
repnz
idivb
test
out
jge
mov
ds
pop
cmp
repnz
arpl
push
sbb
lods
ljmp
xchg
mov
sub
push
scas
aad
test
xchg
mov
loopne
pusha
mov
test
or
in
adc
movsl
mov
pop
mov
mov
cmp
rcl
repnz
dec
dec
lcall
dec
mov
dec
rcrb
and
daa
sub
mov
cld
inc
push
xchg
sbb
testb
xchg
pop
pop
clc
movsb
out
imul
push
loopne
push
sub
sbb
and
cmpsl
xor
shlb
aad
fsubrs
iret
jge
push
inc
xor
jmp
push
out
ja
scas
inc
sub
cmpsl
dec
and
rcl
inc
push
out
mov
mov
packssdw
inc
push
lds
cmp
call
sbb
cmpsb
ljmp
jno
je
cmp
lods
fiadds
mov
imul
shll
push
mov
xchg
test
lods
sbb
sub
imul
test
push
and
jle
movsl
pusha
mov
mov
insl
faddl
ficoml
push
nop
cmp
mov
xor
xor
sub
imul
es
fsub
pop
test
rorb
inc
rcrl
sub
adc
inc
push
push
push
fprem1
push
imul
pushf
pushf
imul
andl
jmp
aas
sbb
push
popf
outsb
shl
adc
sti
dec
lods
lods
aad
pop
icebp
and
outsb
mov
sbb
and
cmp
and
int3
clc
aas
xor
mov
push
sti
mov
neg
pop
lahf
nop
mov
fmuls
ror
sub
xchg
push
sub
rcrb
fmull
mov
xchg
sbb
pusha
roll
pop
loop
xchg
insb
jae
pushf
scas
sbb
push
jnp
pop
call
adc
mov
xlat
mov
insl
fisubl
add
mov
notb
in
cmp
ljmp
pushf
sub
and
mov
add
xchg
mov
lods
or
jbe
add
inc
cmp
les
and
pop
jo
imul
fiaddl
aas
or
les
hlt
mov
push
adc
xchg
xorb
push
mov
push
ds
jne
inc
shl
std
shlb
mov
add
sbb
setg
fistpll
or
dec
or
xchg
rorl
jae
inc
jb
adc
or
jns
mov
cmc
adc
or
mov
shlb
out
sti
and
sub
lods
insb
mov
cmp
adc
lcall
mov
out
dec
pop
xor
mov
loopne
scas
movsb
shlb
cwtl
push
inc
push
sub
mov
daa
incb
in
arpl
and
icebp
dec
in
lods
push
pop
fstps
das
mov
xor
cmc
xchg
mov
cltd
or
lcall
sbb
rclb
aad
andb
das
jno
arpl
xchg
or
test
mov
in
jl
xchg
fwait
out
or
cld
and
scas
jne
mov
xchg
in
jb
cmpsb
pop
cmc
std
jecxz
add
mov
outsl
jne
fiadds
gs
mov
or
js
js
sub
sub
push
rcrb
sbb
push
lock
movsl
add
out
js
loopne
ret
loopne
or
in
mov
cli
sti
jno
aas
jg
mov
xor
pop
loop
imul
pop
cmp
dec
pop
mov
bound
lods
adc
rolb
mov
movsl
out
mov
or
adcb
ds
in
push
cli
or
jl
jecxz
in
mov
in
rclb
subb
pop
pop
jmp
cmp
or
mov
or
jnp
xor
jp
gs
ja
test
sti
std
es
adc
test
mov
mov
xor
pushf
or
add
loop
int3
inc
movsb
add
movsb
dec
sub
inc
mov
jb
outsl
inc
cmp
imul
aas
xchg
jns
xor
inc
mov
xchg
clc
bound
not
push
pop
ret
mov
sub
inc
mov
sub
add
cs
push
push
pop
pop
mov
or
or
inc
clc
and
ret
imul
and
mov
sub
and
je
cmpsb
and
insl
add
sbb
pop
dec
mov
sub
jns
movsb
cmp
sub
pop
aam
push
xchg
repnz
fwait
cmc
or
inc
ds
push
xchg
or
inc
mov
testb
lret
lock
inc
in
outsb
xchg
scas
mov
mov
inc
pusha
cwtl
pusha
xchg
dec
pop
add
push
add
jbe
cmpsl
sti
inc
daa
insb
fcomps
shlb
aam
call
ja
jbe
or
and
add
fstps
push
sbb
pop
out
inc
xor
sub
and
je
sbb
fcoms
sbb
je
or
or
aad
cld
fsubl
add
mov
and
push
aam
xchg
dec
dec
in
adc
mov
fisubrl
push
push
cwtl
ljmp
nop
and
scas
ret
or
lret
fisubs
jne
fs
fmulp
sti
mov
mov
test
fildll
shrl
filds
arpl
mov
mov
mov
xchg
pop
xor
and
inc
dec
loop
and
mov
sub
jp
pop
insb
mov
loope
sub
pop
loopne
xchg
mov
outsb
cmpl
mov
cmp
imul
xor
dec
pop
dec
fucomi
data16
cli
ret
xchg
ds
inc
jns
je
jnp
into
mov
xor
lret
add
into
fistl
in
jno,pn
arpl
cmpsb
fdivrl
or
iret
fstps
mov
cld
cld
inc
sub
cmpsb
ret
outsb
sub
rorw
pop
sub
rol
hlt
cmpsl
lock
outsb
les
je
rol
cmp
mov
xchg
jg
jae
sbb
fdivl
or
stos
andl
push
or
mov
add
adc
icebp
inc
mov
or
cmpsl
inc
scas
movsb
sbb
sbb
lcall
pop
hlt
xorl
pop
xchg
push
dec
nop
mov
das
and
cld
aas
add
and
push
fs
mov
ss
sahf
aam
add
in
loop
sahf
jno
sbb
stos
mov
fldt
mov
notl
loopne
fisttps
sub
jo
push
int
adc
lea
bound
ja
pop
sub
jae
push
loope
mov
sahf
mul
and
idivl
enter
repnz
mov
rorb
pushf
xchg
lret
mov
das
sub
fs
cmpsb
fcom
ret
fidivl
pop
inc
mov
out
stos
cmpsl
mov
aad
sbb
sub
mov
int3
ljmp
imul
popf
in
mov
xchg
mov
push
iret
scas
cltd
mov
adc
lret
rorb
dec
push
enter
xchg
ds
push
icebp
mov
cmp
or
xor
cmp
cmp
jb
sbb
xor
push
mov
enter
sarb
jge
jae
nop
add
mov
xchg
popf
inc
pop
xor
sub
scas
push
daa
es
cmp
inc
jbe
rcrb
adc
push
and
iret
fsubs
sub
into
pop
pop
outsl
popa
push
add
pop
movsl
jae
push
fidivl
movsl
xlat
fildll
push
bound
cli
lods
insl
fwait
ret
mov
shll
and
ja
xor
jb
icebp
inc
adc
jne
mov
jmp
sbb
jns
push
push
jae
fcomps
int
in
scas
mov
jmp
aaa
leave
mov
pop
dec
xor
dec
cmpsb
pop
xor
fwait
shlb
sti
ljmp
pop
arpl
mov
or
mov
dec
and
stos
mov
shlb
lahf
aas
pop
test
sbb
repnz
int
fsubs
jmp
jo
rcrb
dec
cmp
adc
mov
push
es
loopne
dec
mov
scas
xchg
popf
jo
sbb
xor
dec
rclb
mov
sub
cmpsl
subb
add
gs
add
nop
mov
pop
fcomp
int
xor
das
mov
add
dec
in
push
stos
idivl
pop
mov
gs
push
scas
xchg
jg
popa
xorl
stos
mov
add
jb
mov
stos
roll
jbe
cmp
pushf
aam
mov
popa
jg
ds
xchg
cmp
out
rorb
scas
scas
xchg
daa
and
pusha
gs
addr16
mov
pop
lret
ret
fmulp
ret
xchg
adc
nop
mov
adc
adc
repnz
dec
lret
sub
xchg
lret
stos
and
jg
dec
mov
add
dec
inc
push
movsb
mov
repz
xchg
out
push
aaa
sbb
cmp
out
xchg
sub
cmpsb
lcall
jbe
mov
imul
inc
test
sub
and
loopne
push
cli
pushf
in
test
insl
lods
movsl
xchg
adc
daa
stos
into
stc
dec
fisttps
shlb
xlat
mov
mov
adc
dec
xor
adc
mov
lcall
dec
mov
mov
lds
ficompl
insl
nop
mov
lss
sub
arpl
jle
scas
aam
adc
adc
lea
jg
mov
and
test
pop
or
dec
std
loope
daa
dec
add
and
ret
iret
mov
div
sub
mov
dec
je
mov
fwait
mov
jle
orl
sarb
lahf
and
out
adc
call
mov
inc
clc
dec
add
out
aam
pop
pop
cmpsb
mov
bound
es
push
stos
lcall
pop
inc
adc
stos
nop
and
add
int
xorb
jns
addb
loop
loop
mov
std
sbb
out
and
mov
fidivrl
cmp
scas
or
js
pop
pushf
fcoml
jecxz
xchg
dec
enter
dec
ds
lods
mov
pop
xchg
cmp
fs
pop
and
mov
out
add
test
mov
inc
and
or
add
fnstsw
push
pop
push
iret
and
or
shrb
hlt
pusha
jae
pushf
jnp
cmp
dec
add
aad
in
inc
cmpl
popf
out
sbb
jb
cmp
in
pop
pop
add
mov
incl
nop
or
lock
push
stc
mov
pop
sbb
pop
test
incl
sarb
leave
out
xchg
dec
add
cmp
pop
pop
rep
cmpsb
std
lcall
mov
icebp
adc
mov
sbb
mov
outsb
jo
xchg
icebp
inc
dec
jmp
mov
mov
scas
dec
jge
popf
lods
mov
inc
test
push
adc
pop
push
in
push
in
sub
mov
and
or
mov
xor
push
sbb
xor
adc
sbb
addl
pushf
jno
xchg
mov
adc
inc
into
and
add
loopne
imul
int3
lods
pushf
mov
test
rclb
pop
push
lods
cmp
rcr
imulb
jecxz
arpl
xor
lret
test
in
jmp
insl
pushf
repnz
mov
push
mov
mov
pop
imul
testl
movsl
push
pop
xor
rcr
addr16
fs
test
add
cmp
add
clc
xchg
mov
jl
and
mov
xchg
jo
sti
mov
cmpsb
mov
into
xlat
mov
in
imul
xchg
dec
lock
mov
pop
lds
mov
imul
fwait
lret
push
sarb
or
add
push
rcrb
sbb
das
jno
xor
push
push
andl
popa
pop
adc
inc
inc
sbb
lods
or
sbb
xor
dec
xchg
cld
nop
adcl
repz
pop
jge
mov
andl
pop
push
test
jp
mov
add
push
lahf
jmp
jle
in
push
mov
fsub
and
push
mov
shrb
lcall
pop
and
rorb
adc
scas
jae
push
test
xchg
out
leave
les
pop
or
rolb
std
pop
push
pop
hlt
mov
dec
repz
les
nop
push
sahf
addl
out
cmp
stos
xchg
ret
sbb
xchg
mov
inc
test
pop
ljmp
mov
mov
dec
push
lds
pop
inc
and
sub
or
sarl
loope
sbbl
xor
mov
in
mov
jmp
inc
cmp
jb
sbb
fmul
out
sbb
jge
lea
sbbl
js
and
cld
mov
es
insl
pop
je
cld
movsb
ret
xchg
sbb
andl
or
movsl
push
pop
cmp
pop
ds
in
std
mov
jno
test
outsb
push
sbb
sub
or
mov
add
xchg
out
daa
movsl
pop
pop
sub
jb
xor
orb
and
adc
push
push
mov
xlat
or
pop
popa
adc
add
sbb
pop
fisubs
aas
ja
shll
pusha
pop
cmp
or
add
subb
fadds
cmp
fcompl
fwait
imul
stos
enter
scas
aaa
repz
in
ret
cmp
add
dec
arpl
inc
cmp
sbb
ss
xor
enter
mov
inc
jle
push
mov
inc
mov
std
ja
dec
pop
test
dec
inc
sbb
repnz
loop
xlat
inc
add
out
push
dec
lahf
call
sub
and
sub
popf
dec
fidivs
sub
mov
bound
stc
icebp
add
inc
ret
adc
xchg
ja
jge
pop
push
dec
sub
movsb
mov
cmpsb
dec
sub
add
push
cmp
cld
inc
pop
push
jo
sbb
mov
loope
fisttps
fcmovnu
mov
cltd
push
stc
mov
push
lcall
jns
push
and
orl
push
sbb
nop
mov
add
int
ror
mov
stc
sarb
xchg
pop
bound
lock
sub
xchg
jg
or
pop
dec
and
dec
sub
rolb
mov
jmp
jg
push
sbb
mov
jle
jp
mov
scas
and
jp
in
icebp
jno
insb
mov
jp
fxtract
mov
jg
out
fucompp
xlat
js
mov
popf
inc
mov
jle
in
sar
fdivl
dec
push
ss
pop
adc
icebp
xor
push
std
out
xor
adc
div
test
test
mov
lcall
push
adc
inc
jo
out
add
xlat
dec
adc
jb
mov
add
mov
sbbl
mov
je
xchg
gs
jne
jmp
xchg
addr16
decb
rcll
pop
or
fs
imul
and
push
and
xchg
mov
pop
xor
cmpsb
cmp
hlt
mov
lock
pop
add
push
and
cmp
push
jp
add
jno
sub
lahf
lods
in
mov
sub
adc
mov
cmp
lods
xor
ret
dec
repnz
inc
test
cs
fwait
outsb
lods
pop
inc
push
adc
aad
xor
idivl
adc
test
cmpsb
ss
pop
add
jg
jnp
mov
loop
pop
sub
jp
in
inc
fwait
sbb
mov
mov
add
xor
pop
dec
imul
mov
mov
das
fwait
jae
bnd
dec
popf
jmp
shlb
inc
testb
hlt
or
xor
dec
test
imul
mov
rclb
mov
imul
clc
aad
add
es
daa
push
adc
jae
enter
xor
adc
loopne
scas
out
imul
cltd
jbe
jle
push
sahf
cmp
push
jge,pn
test
sbb
lods
popf
sub
adc
fs
sbb
xor
imul
inc
cltd
mov
jb
fldenv
or
in
and
fistl
add
cli
jmp
mov
mov
mov
jne
mov
insb
ret
xchg
xor
js
dec
pop
ja
hlt
pop
dec
xchg
mov
mov
push
js
cmp
dec
mov
popf
pushf
cld
mov
xchg
cmp
lods
xor
rolb
ds
jmp
loopne
pushf
adc
sub
stos
inc
mov
ljmp
popa
push
fsub
mov
pop
adc
mov
mov
pop
sbb
and
mov
xchg
add
push
cmp
shll
dec
sub
cmp
cmp
add
outsb
fcomps
fs
xor
cmp
mov
cmpsl
push
sti
lock
mov
ficomps
test
scas
les
sub
cmp
add
ret
mov
inc
movb
sar
inc
dec
dec
push
scas
call
decl
sti
add
mov
int
sbb
sub
xor
jne
test
and
int
das
out
adc
sub
adc
je
adc
xor
sbb
sahf
adc
mov
int
adc
fsts
jbe
in
xchg
pop
cmpsb
cmp
lds
popf
jmp
mov
xor
repnz
adc
iret
pusha
dec
jecxz
pop
xor
bound
stos
out
sbb
pusha
mov
pop
or
cwtl
push
jecxz
fmul
ljmp
jnp
sahf
ljmp
or
mov
xchg
dec
mov
mov
test
and
xor
pop
shlb
popf
pop
in
xor
negl
mov
neg
xchg
daa
and
sub
xor
or
pop
arpl
cltd
cmp
fisttpll
xchg
add
js
out
pop
ret
xor
sbb
adc
inc
mov
cli
adc
stos
mov
roll
mov
subl
fwait
jae
push
clc
mov
adc
adc
rcrl
in
stc
mov
rcr
inc
je
test
fiadds
pop
inc
pushf
jnp
cmp
int3
xor
scas
pushf
lds
sub
xlat
clc
add
xor
jmp
nop
dec
rolb
inc
fdivl
add
push
outsl
push
jns
mov
loope
mov
cmp
xchg
pusha
aad
jecxz
lcall
das
daa
enter
test
aam
jnp
fidivl
jp
ret
icebp
popa
in
movsl
out
gs
or
xor
ds
vsqrtps
cmc
subl
mov
push
lods
push
gs
push
xor
sbb
sbb
inc
dec
push
sub
xchg
pop
adc
je
ljmp
sub
testb
pop
lds
add
or
sahf
and
mov
out
fcmovnu
icebp
mov
push
adc
mov
pop
add
in
les
xchg
sub
mov
jecxz
adc
jmp
stos
dec
add
inc
add
pop
push
and
test
lcall
mov
inc
je
jecxz
dec
add
addr16
data16
jno
sahf
cmpb
stos
xchg
and
mov
cld
sarb
cltd
outsb
jl
lret
mov
pop
and
pusha
scas
in
ret
xchg
daa
shl
mov
aam
mov
inc
pop
fcoml
push
jns
mov
jecxz
insb
fidivl
sub
nop
mov
sub
adc
push
mov
ja
fs
popa
std
mov
jno
repnz
mov
lods
pusha
arpl
mov
mov
jae
inc
mov
sbb
lods
fs
sarl
push
aam
lret
clc
mov
rdpmc
mov
icebp
push
sub
idivl
jmp
mov
inc
sti
sub
jge
icebp
inc
mov
fwait
pop
jge
push
mov
mov
roll
push
sti
add
scas
adc
aam
lods
cmp
imul
sub
inc
test
repnz
test
arpl
mov
je
rcrb
fdivr
outsl
add
shlb
repnz
push
inc
aas
lahf
lahf
je
adc
fisttpl
mov
ljmp
std
xchg
jg
jmp
es
in
das
sub
pop
aam
add
mov
lods
mov
ret
fistpl
jl
insb
fwait
outsl
lret
mov
add
lcall
and
and
sub
and
pop
push
add
shr
adc
or
lods
dec
jns
pop
repnz
xor
push
jns
inc
xchg
cmp
ficoms
int
cltd
pop
ljmp
xor
jge
in
mov
jmp
ret
repnz
fsubrs
jl
dec
adc
mov
mov
cmpsl
pushf
insb
inc
xor
adc
mov
loopne
dec
cmpsl
out
pop
int
es
xchg
xlat
fisubl
sbb
outsl
mov
ror
dec
pop
sub
push
dec
loope
inc
mov
movsl
dec
loopne
pop
pop
sbb
push
out
fwait
loopne
and
mov
xorb
lods
jge
push
xchg
jmp
xor
xorl
incl
push
sarb
mov
and
pop
or
jno
ret
jo
inc
or
inc
jecxz
sub
push
and
es
daa
inc
popf
mov
pop
clc
enter
ja
pop
enter
pop
cld
cld
mov
mov
mov
lret
ficoml
sbb
push
ljmp
dec
sti
pop
mov
mov
shll
pop
push
jmp
popf
mov
xchg
lds
imul
stos
mov
imul
pop
add
std
adc
adc
fld
orb
stc
negb
add
add
bound
add
rorl
cltd
sbb
mov
sbb
mov
xchg
lret
std
loop
in
pop
xor
je
stc
push
inc
sub
into
fsubr
mov
pop
and
and
outsb
xor
fdivrs
ficoms
pop
sub
cmp
or
out
mov
in
inc
fldenv
sub
clc
xlat
jne
sub
fimull
movsl
dec
rcrb
ss
clc
mov
movb
rcrb
lahf
popf
inc
add
mov
stos
or
decl
pushf
addl
subb
imul
inc
out
fbld
jg
stos
dec
outsl
fadds
jg
in
clc
sub
jp
clc
lea
adc
jno
mov
lahf
rdmsr
orl
pop
or
dec
fs
push
push
test
jnp
ret
jb
mov
sahf
ss
adc
mov
xor
sar
out
in
out
out
loopne
adc
addb
xchg
mov
mov
jl
dec
push
daa
sbb
jne
mov
daa
lds
or
mov
stos
mov
jmp
js
mov
in
dec
inc
mov
outsb
add
and
lret
addr16
mov
inc
js
out
es
stos
shll
scas
mov
loop
xchg
and
rolb
sbb
xchg
pop
dec
xchg
cmp
add
in
sub
sub
and
jb
mov
adc
call
adc
int3
es
mov
mov
hlt
arpl
cmovs
inc
out
push
in
jmp
push
and
fists
xchg
inc
dec
and
mov
push
adc
sbb
and
and
lcall
sbb
test
outsb
ja
pusha
mov
cmp
xor
sub
pop
xor
cli
inc
jge
outsb
pop
ret
sub
xor
es
sbb
sub
sbb
jb
cmp
sbb
pusha
cmp
test
mov
or
sbb
out
cmpsb
lock
popa
xor
dec
in
adc
int
adc
imul
adc
ret
add
inc
movsl
push
enter
xchg
in
fwait
rol
pop
push
rcr
and
inc
ljmp
pushf
dec
adc
cld
inc
pop
aaa
out
cmp
mov
xlat
les
push
test
fmuls
out
dec
imul
ret
aaa
je
sbb
xor
test
xor
mov
into
icebp
lods
dec
out
pop
gs
pop
loopne
rcrb
popa
cmpsl
nop
pop
pop
in
xor
into
flds
pop
adc
lret
xor
clc
dec
adc
rcrl
mov
fldcw
mov
mov
xorb
mov
in
mov
pop
or
in
jl
inc
lahf
inc
xor
sbb
in
xor
or
mov
push
js
cld
and
inc
test
or
rcll
movsl
pop
push
add
mov
mov
jo
mov
adc
shrb
and
sahf
mov
out
jnp
loopne
cltd
cltd
mov
jbe
popf
push
cmp
nop
dec
insl
sbb
loop
mov
push
push
popa
movsl
push
not
dec
xor
fcompl
lods
xor
sti
sbb
into
inc
xor
mov
dec
sar
fildll
adc
jno
stos
inc
addr16
pushf
stc
rcrb
adc
sub
mov
xchg
cmpsl
sbb
hlt
popa
gs
cs
lcall
aam
lret
dec
int3
push
or
in
data16
cwtl
adc
sbb
jmp
sbb
lahf
add
cmp
mov
mov
in
call
xchg
loope
bound
fadds
lods
shrl
test
sbb
pop
ljmp
inc
enter
cmpsl
sbb
or
inc
sti
in
cmpsb
lods
add
and
jne
mov
in
outsl
dec
jle
mov
mov
add
push
xor
fistpll
in
and
pop
je
cwtl
add
ret
sub
jb
fimull
fnsave
out
add
imulb
cmp
nop
mov
fsubrl
and
in
stos
pop
dec
aad
pop
sub
inc
dec
mov
test
cltd
adc
jmp
mov
fdivr
bnd
or
les
mov
dec
std
push
aad
sub
je
scas
xor
je
into
and
jbe
xlat
popf
jge
imull
or
scas
mov
insl
nop
mov
mov
add
jmp
stc
xor
xchg
mov
push
das
cli
test
mov
mov
jg
test
dec
decl
sbb
pop
jmp
mov
cmp
jo
outsl
xor
call
add
or
xchg
push
lret
mov
jmp
jo
outsl
movsl
push
outsb
add
mov
and
sub
cld
inc
cmp
xlat
mov
lods
mov
xchg
mov
test
adcl
sahf
adc
clc
mov
bound
call
sbb
adc
outsl
test
bound
and
add
ljmp
es
push
out
cmp
xor
imul
rcl
pop
sub
iret
aad
insl
ljmp
daa
cmpsl
mov
ret
inc
fcomip
divl
enter
addr16
enter
imul
mov
je
mov
imulb
sbb
into
inc
in
scas
xor
in
ja
hlt
xor
and
jno
or
mov
lods
add
cmpsl
shlb
mov
loopnew
idivb
fnstsw
in
stos
mov
sub
pop
sbb
js
jnp
inc
lock
popf
xchg
int
sbb
jbe
mov
sahf
test
pop
jmp
inc
or
lcall
hlt
pop
pop
int3
out
pop
cwtl
call
popl
ficoms
mov
data16
fiaddl
add
xchg
pop
cld
jns
imulb
sub
mov
stos
cmp
mov
sbb
push
in
cmp
xchg
mov
sub
sar
or
mov
stos
outsb
aaa
nop
mov
lods
xchg
loop
loopne
xchg
xchg
addr16
out
cmp
mov
push
jecxz
in
adc
clc
dec
jne
adc
mov
adc
loope
or
icebp
ja
es
push
pop
mov
movsb
mov
add
addr16
daa
sbb
adc
jbe
lods
xchg
mov
sub
pop
imul
adc
imul
filds
cltd
jbe
cwtl
insb
xor
into
cmp
push
rcll
jl
push
or
add
in
mov
xor
jg
adc
and
sbb
push
cmpsb
movsb
test
xor
dec
es
hlt
jg
cmp
in
and
mov
ret
imul
sbb
pop
je
mov
fwait
bound
sub
lret
mov
ja
leave
out
stos
les
les
cmp
xor
pop
rcrl
pop
and
add
sub
cltd
pop
pop
sarl
lds
jmp
cmp
loopne
repz
adc
adcl
outsb
int3
scas
in
push
in
fadd
test
icebp
xor
mov
insb
adc
stos
adc
lcall
in
cmpsb
addr16
cld
mov
shlb
pop
out
insl
mov
fwait
ret
xchg
movsl
pop
movntq
cmp
mov
lret
cmp
add
test
sub
pushf
call
lahf
arpl
pop
enter
sbb
loop
leave
iret
in
pop
lea
xor
mov
inc
bnd
ficomps
dec
loop
sti
inc
pop
jns
fldcw
fnstenv
mov
pushf
inc
movb
hlt
rclb
xchg
shll
cmpsl
out
inc
sbb
jo
data16
inc
sbb
jge
mov
push
in
loop
daa
xchg
movsl
in
mov
mov
pop
int
pop
in
xchg
push
sbb
insl
addl
adc
fwait
cli
jge
je
sub
fsubs
push
jp
je
mov
iret
jbe
inc
jns
push
int
ret
pushf
fwait
inc
push
mov
mov
jbe
add
and
shl
lods
bound
enter
ret
push
in
pop
mov
mov
inc
loope
jmp
mov
mov
xor
outsb
or
add
gs
xor
loop
stos
aad
mov
fnstenv
xor
nop
pusha
xchg
test
xorl
adc
in
insb
dec
mov
sub
repz
nop
cwtl
and
aam
stos
dec
xchg
cmp
jno
jno
movsb
or
mov
repnz
shll
int
lock
aas
mov
adc
pop
cmp
repz
dec
iret
fisttpl
inc
or
mov
push
pop
pop
mov
loopne
lret
adc
push
outsl
inc
jge
orl
and
xlat
pop
arpl
arpl
mov
bound
in
mov
ret
adc
mov
push
pop
fldt
fdivl
addr16
dec
repz
adc
loope
out
push
hlt
mov
sahf
aaa
pop
ja
mov
xchg
scas
push
push
mov
xchg
push
jmp
sbbl
lcall
mov
pop
jl
imul
bound
xchg
inc
cmp
mov
leave
jo
rorb
adc
jbe
sbb
fisubs
pop
dec
sti
push
cmc
push
jp
arpl
int
jmp
jae
sarl
int3
aam
stos
xchg
dec
push
test
fnstenv
fcmovne
dec
bound
data16
sub
stc
fpatan
lahf
es
cli
cli
outsb
and
cmpsl
ret
pushf
sub
int3
popa
stc
push
std
mov
mov
or
jnp
add
movsb
push
jno
and
mov
stc
sbb
ret
dec
mov
repnz
cmp
xchg
xchg
inc
dec
int3
mov
mov
imul
test
ds
inc
mov
into
inc
or
les
into
loope
jl
mov
loopne
fildl
or
mov
loop
loope
cmp
mov
leave
cwtl
ret
push
mov
test
test
call
stos
jmp
cmp
xor
rcrl
js
or
and
pop
stc
lock
inc
mov
xchg
es
mov
mov
je
cltd
icebp
adc
push
xchg
fildl
movsb
or
enter
jbe
add
push
add
add
xchg
xor
xor
fldenv
sbb
addb
cmp
push
add
bound
ja
adc
xchg
mov
cmp
test
fwait
inc
sbb
cmpsb
out
in
xor
add
add
sub
stos
movsb
lret
add
das
inc
and
mov
sbb
iret
psubsb
push
and
cwtl
int
mov
stos
push
movsl
jns
fbstp
bound
cmc
xor
cltd
leave
stc
add
add
out
push
pusha
push
faddl
jle
cmp
ljmp
or
mov
mov
mov
arpl
lods
or
popf
lahf
jae
fcoms
push
sub
push
push
mul
imul
into
mov
xor
xchg
pop
rep
xchg
iret
test
mov
cltd
xchg
cmpsl
cli
lahf
cwtl
push
mov
dec
mov
out
jle
mov
xchg
hlt
or
pusha
test
outsb
addr16
cli
shl
xchg
and
inc
or
je
ret
xchg
mov
icebp
dec
mov
pop
out
inc
fidivl
xchg
cmpsl
ljmp
push
outsb
lea
imul
cmp
pop
call
mov
mov
popf
pop
mov
jnp
dec
clc
out
xchg
sbb
dec
or
ret
mov
mov
sbb
stos
or
ljmp
aam
dec
xchg
mov
ljmp
icebp
dec
mov
push
sbb
gs
mov
mov
push
jbe
jbe
inc
cmp
cwtl
aam
mov
test
stc
xor
rcll
pop
ss
lahf
inc
push
xor
andb
mov
and
xchg
das
lcall
sbb
mov
fdivl
or
mov
mov
add
push
push
in
sub
pop
or
stos
mov
dec
jnp
in
inc
pop
fisttpll
movsb
inc
pop
xor
mov
mov
jecxz
inc
cmp
insb
inc
aas
push
pop
dec
or
mov
add
fcomps
push
xchg
jo
fsub
je
icebp
loopne
mov
out
and
cwtl
sub
lock
xor
add
and
cmp
xchg
inc
and
icebp
mov
arpl
hlt
mov
loope
insb
or
dec
mov
lret
push
push
daa
sub
xor
shl
add
sbb
pop
ret
ja
sub
std
and
jg
sbb
scas
adc
adc
and
loop
das
mov
inc
fwait
loop
push
push
jb
rcrb
les
aas
jle
stos
push
lcall
loopne
out
mov
mov
jge
movsb
lahf
push
jo
jae
stc
inc
es
lret
pop
mov
test
lock
or
adc
push
aaa
mov
xor
lods
mov
mov
fistpl
mov
and
pop
sbb
mov
mov
cmpsl
std
aas
push
outsb
mov
add
push
sbb
or
fs
outsb
pop
in
gs
aad
xchg
testb
loope
and
stc
push
jl
xchg
test
dec
and
xor
inc
mov
pop
stos
clc
lea
int
jae
sub
dec
test
add
fstps
fistps
lret
shrl
adc
scas
into
aas
into
xchg
icebp
pop
inc
jmp
inc
mov
stos
imul
insb
cmpsl
mov
pusha
mov
arpl
mov
fxch
dec
sbb
stos
outsl
shl
shll
int
mov
arpl
std
lea
adc
and
sub
loopne
and
adc
scas
or
mov
mov
adc
lods
into
gs
sub
mov
cmpsl
in
insl
xor
call
jmp
pop
xor
pop
push
sub
or
mov
or
shlb
mov
test
gs
std
jp
mov
or
dec
fnstenv
cli
arpl
in
and
or
test
shrb
bndldx
add
push
pop
xor
fisttps
add
scas
xchg
sub
cltd
mov
xchg
mov
sbb
movsl
push
pusha
je
into
pop
inc
cmp
inc
out
add
adc
imul
inc
mov
cmp
mov
mov
fisubrs
inc
push
and
hlt
test
popf
pop
mov
mov
mov
and
cmp
fstpt
push
jb
mov
add
jle
pop
xchg
sbb
ljmp
mov
in
or
inc
jge
jecxz
push
mov
cmc
mov
imul
out
sub
out
cmc
rclb
sub
pop
inc
jl
enter
adc
rcrb
mov
mov
or
test
adcb
push
mov
in
inc
push
dec
vmovsd
mov
xor
leave
sarl
push
jne
testb
shrb
add
fisubrl
stos
int
ss
aas
pop
or
cmpsb
cmpsb
mov
xchg
cmp
arpl
push
subl
mov
mov
sbb
in
nop
xchg
icebp
sbb
sub
in
jae
mov
rorl
pop
aas
stc
xor
pop
ds
stc
mov
xchg
mov
push
push
fs
or
js
loopne
rcll
pop
pop
dec
loope
fildll
jae
push
packuswb
sbb
sbb
push
incl
ret
cmc
mov
mov
or
or
or
push
mov
cmp
inc
in
xor
rcrb
mov
mov
adc
cs
and
mov
jmp
sub
orb
mov
cld
and
cmpl
jmp
and
in
pop
das
mov
jg
sub
xor
stos
pop
jecxz
aas
fmull
adc
jecxz
neg
call
sbbl
in
xor
mov
adc
clc
dec
pusha
out
push
fcompl
push
out
lds
ficompl
roll
mov
sbb
dec
cmp
ficomps
subl
cs
sub
and
fucom
lahf
xlat
dec
jns
das
inc
outsb
sti
data16
hlt
mov
repnz
mov
test
enter
add
loop
clc
dec
scas
hlt
push
inc
sbb
jns
jbe
mov
ljmp
mov
xor
mov
add
adc
stos
sbb
out
cmp
test
push
sbb
push
push
add
or
movsl
sbb
in
fmul
xchg
cmc
xchg
sub
and
push
ja
dec
cli
js
jbe
push
sahf
adc
mov
sbb
loop
mov
pop
lea
ds
push
push
mov
pop
shll
sub
fsubp
cmp
mov
popa
push
test
or
data16
mov
add
pop
cmpsb
popf
lret
nop
jmp
sti
loop
jecxz
push
jb
cld
xchg
pop
cmpsb
sub
inc
cmpsb
cmc
sbb
cli
je
loope
jge
loop
push
add
or
jg
call
mov
inc
lret
imul
adc
int
mov
ret
and
and
lds
sbb
pop
dec
mov
fisubrl
mov
adc
test
add
js
stos
inc
cmp
arpl
inc
ljmp
jns
repnz
insb
into
int3
popf
sub
insl
pop
mov
jbe
icebp
mov
and
sbb
imul
push
sbb
jnp
test
adc
sahf
xor
je
faddp
aas
rorb
pusha
or
mov
shrl
mov
xor
call
clc
xor
mov
jge
cmp
loop
jns
or
fbstp
addr16
shrb
push
mov
fistpl
jle
inc
lahf
fdivrl
orl
jge
pop
push
and
mov
in
xchg
jmp
add
xor
mov
cmp
scas
mov
push
mov
lret
xchg
je
scas
aam
pop
scas
in
adcl
jle
das
mov
sub
and
mov
add
sbb
fstpt
les
pusha
xchg
dec
aas
or
xor
fsubrl
push
sub
adc
ss
mov
pop
or
data16
das
lds
pop
sub
lret
popa
and
loopne
jnp
pop
jae
inc
dec
les
cmp
pop
comiss
outsb
test
mov
add
add
xor
sti
popf
dec
jg
or
cmp
call
or
and
inc
fdivl
sub
in
or
lret
pusha
loop
jge
jg
push
push
sub
roll
adc
and
cmp
push
sub
fwait
sub
and
mov
sbb
cld
sti
test
std
bnd
ljmp
test
mov
xchg
daa
lods
in
movsb
mov
xchg
pushf
push
and
shr
pop
sbb
loopne
iret
xlat
and
mov
and
jmp
adc
into
flds
popf
pop
dec
jp
int
jmp
cli
rcll
mov
cmpsl
test
fwait
add
pop
lods
mov
mov
adc
aam
jnp
add
push
sbb
out
cli
or
outsl
xor
cmpsl
mov
inc
cltd
jge
stos
add
insl
orl
and
cmp
out
out
in
lret
repz
into
cld
ret
pop
push
mov
xchg
sbb
sbb
test
add
insb
shl
sub
outsl
jmp
fwait
mov
in
mov
sbb
movsb
mov
stos
jns
add
mov
pusha
mov
pop
pop
inc
aad
cmp
adc
lea
xchg
ss
mov
stos
into
je
rolb
sub
jmp
cmp
fimuls
xchg
xor
cmp
repz
dec
sbb
lret
cmp
popa
inc
cmp
test
adc
ficoms
ds
push
or
addl
jbe
inc
push
sbb
test
cmc
adcl
popf
and
in
loop
mov
lcall
fld
xchg
push
jnp
std
ja
push
push
xor
pop
jne
pusha
fsincos
js
jne
stos
jle
mov
and
mov
push
shrb
mov
and
sti
lods
lcall
sbb
inc
repnz
fwait
int3
add
push
mov
in
shlb
lret
sub
xchg
cmp
cmpb
out
sti
hlt
cmpsb
fbld
adc
jge
push
movsl
test
movsb
xchg
pop
int3
dec
mov
loope
inc
test
fs
outsl
push
sti
fidivs
out
test
fldenv
xchg
lods
jg
cwtl
push
rorb
dec
out
out
shlb
lock
sub
clc
mov
jge
sub
xor
loop
mov
dec
dec
mov
sbb
adc
or
push
pop
je
pop
std
push
lret
jno
pop
sti
mov
pop
mov
aaa
cltd
cmp
cmc
adc
pop
mov
cmp
cmp
adc
pop
inc
movsl
aaa
add
push
inc
ret
test
or
daa
dec
xlat
jmp
aaa
sub
cmp
mov
mov
sub
mov
xchg
cmp
insl
pop
cmp
inc
cmp
outsb
xor
mov
add
shrl
lcall
push
std
mov
in
scas
idivb
mov
mov
ficoml
cmp
push
data16
movsb
inc
mov
sbb
aad
repnz
imul
outsb
add
dec
push
jl
adc
out
lcall
xor
out
add
fisttps
test
xor
pop
cmp
mov
inc
sbb
push
aas
repz
adc
adc
ficompl
arpl
mov
pop
adc
xor
adc
mov
mov
sarl
rcrl
add
sub
jle
pusha
inc
cld
sti
jle
jg
mov
dec
cs
int
xchg
cmp
fisubrs
cmp
xor
push
jns
hlt
push
call
adc
push
jge
pusha
fnstenv
popf
out
hlt
sbb
pop
nop
cmp
cwtl
xlat
pushf
mov
fbld
loopne
mov
mov
ljmp
jp
test
shr
repz
pop
outsb
imul
mov
je
pand
rcrl
or
dec
dec
fiaddl
out
sub
jl
add
outsl
roll
add
jg
mov
sbb
xchg
test
in
xor
rcrl
or
cmp
popa
shlb
and
or
mov
shll
call
hlt
clc
loope
mov
or
les
xor
jecxz
jle
std
aas
or
gs
sti
cmp
repnz
mov
push
mov
clc
mov
push
mov
rclb
pop
pop
pop
and
daa
mov
push
jbe
inc
inc
sbbl
add
out
cmp
test
cld
adc
xor
mov
or
out
in
in
cmp
and
loopne
jl
push
cs
dec
sub
into
sahf
add
or
lea
repnz
in
ret
fiadds
mov
ds
clc
mov
xlat
iret
xchg
cmp
lahf
xchg
imul
jne
stos
dec
clc
xchg
and
push
dec
lods
in
fldl2t
insl
int
sub
sbb
mov
xchg
fsts
rclb
sub
and
insl
xchg
js
jp
inc
jg
adc
push
mov
vpmadcsswd
adc
mov
cmp
add
or
sbbb
gs
ss
mov
pusha
imul
insb
or
jmp
pop
inc
jg
sub
ret
ret
adc
sub
pushf
cli
push
cld
mov
repnz
lahf
add
insb
out
mov
aas
adc
fsub
aaa
mov
stc
pop
popf
outsb
lods
arpl
outsl
data16
shlb
stos
pop
xchg
xchg
add
mov
repz
mov
cld
xchg
and
orl
xor
push
les
mov
sbb
mov
xchg
les
xor
out
push
int3
in
mov
cmp
outsl
xchg
cmp
xchg
cltd
stos
xchg
or
push
out
adc
and
cwtl
push
adc
push
jecxz
push
movsb
sbb
xchg
stos
dec
and
ds
add
mov
popf
xor
inc
arpl
mov
clc
push
scas
pusha
fimull
jmp
inc
xchg
nop
xchg
xchg
jecxz
xchg
pushf
movsb
inc
mul
cli
cmp
fwait
push
mov
in
fs
xchg
cmp
add
xchg
mov
lahf
push
or
ja
icebp
adc
stos
xchg
insl
dec
js
dec
push
cmpsb
add
jmp
jg
cmp
cmc
jb
popa
aas
pop
in
adcl
lret
dec
mov
lahf
push
sub
jo
jo
fisttpll
ret
cmp
jb
jbe
xchg
inc
mov
stos
push
xchg
inc
das
or
bound
sbb
inc
sub
mov
xor
mov
stos
add
xchg
sub
rolb
loopne
mov
dec
cmp
mov
jns
xchg
xchg
movsb
xchg
shr
cmpsl
push
cmc
incb
aam
jge
and
aas
and
sahf
test
mov
mov
mov
jg
xor
xchg
insb
fs
xchg
in
sarl
adc
dec
iret
lock
popf
fnstcw
arpl
loopne
fwait
stc
js
xchg
push
shl
inc
pop
sarl
adc
lods
dec
lcall
lcall
stos
icebp
xlat
jbe
mov
addr16
repnz
pop
xchg
pop
push
bound
jp
movsl
outsl
lods
movsb
pop
aam
pop
std
imul
pop
cmp
clc
dec
lea
mull
in
je
xor
sbb
adc
sbb
out
dec
movsb
sub
hlt
mov
in
mov
mov
mov
repnz
push
movsl
sbb
pop
cmp
xor
or
push
ret
push
inc
test
pop
pop
dec
imul
sahf
pop
js
out
loop
push
mov
fsubrl
jbe
rcrl
jae
push
jb
movsl
adc
aaa
sub
stc
sbb
cwtl
xor
in
int3
cmc
frstor
in
mov
ss
pop
pop
sbb
aaa
aas
iret
sub
stos
imul
adc
std
andb
clc
popf
mov
mov
and
mov
pop
sub
js
test
lret
sahf
cmpsl
xor
ret
pop
aas
inc
pop
cmp
loop
into
divl
jmp
test
les
mov
lret
pushf
scas
jge
insl
and
imul
mov
and
loop
push
jp
adc
into
adc
xor
and
inc
in
mov
mov
sub
cs
jge
add
xlat
lods
dec
pop
mov
test
sti
mov
pop
ret
addr16
and
fdivrp
dec
out
lock
stos
js
rcl
out
jecxz
cmp
test
test
inc
sub
shll
push
lret
test
add
lock
sbb
test
fdivrl
cmp
ljmp
or
test
insl
adcb
jg
lea
addr16
push
xor
inc
jp
call
cmp
imulb
lock
mov
xchg
cmp
jns
dec
or
pop
rcl
pop
jl
push
sahf
mov
mov
std
jle
in
lock
data16
cs
mov
jmp
xor
xlat
mov
std
mov
pop
sbb
pop
mov
jne
jbe
dec
psubd
sub
xor
push
cmpsb
xchg
sbb
mov
adc
cld
xchg
xchg
test
adc
mov
imul
xor
lcall
fidivl
in
push
add
jmp
fdivl
mov
data16
mov
test
fiadds
push
cwtl
imul
xchg
and
cmp
mov
mov
shll
or
mov
inc
or
pop
test
mov
es
imul
shll
loope
jmp
add
daa
cmp
shl
js
dec
pop
xchg
in
add
add
add
clc
sbb
jge
gs
les
xchg
adc
enter
add
cltd
frstor
call
mov
test
mov
imul
inc
dec
adc
repz
sahf
dec
inc
sbb
xchg
mov
lods
fnsave
mov
arpl
adc
inc
fnstsw
sub
xlat
into
movsb
aaa
loopne
movsb
je
sbb
push
repnz
out
bound
push
xchg
popf
push
push
mov
and
cmp
outsl
cld
fs
ss
dec
fdivp
test
xchg
sahf
addr16
das
cli
out
xchg
es
imul
push
adc
mov
aaa
fistpll
add
iret
mov
cli
sbb
adc
add
or
xor
cltd
lods
mov
or
bound
pop
cmp
mov
xchg
jnp
lret
sbb
jge
jmp
aam
pop
mov
push
pop
push
out
pop
push
lret
rep
push
mov
and
mov
ja
sti
sbb
ja
lods
icebp
and
push
push
pop
sbb
sbb
shll
cmp
sbb
or
mov
nop
orl
xchg
jns
adc
and
xlat
mov
les
adc
pcmpeqd
sub
fstpl
in
cmpsb
xor
cmp
inc
data16
pop
push
mov
mov
dec
ja
jnp
push
sub
out
dec
dec
pop
scas
lea
mov
movsl
mov
jl
mov
cmc
sub
xchg
xchg
push
mov
add
push
out
xchg
scas
enter
lods
jmp
dec
sub
mov
push
int3
pusha
ds
stc
sbbb
dec
add
mov
in
lret
inc
inc
idivl
mov
aaa
jmp
mov
mov
sub
sbb
sub
push
enter
jne
adc
inc
pop
jle
ret
push
adc
mov
mov
mov
std
lods
add
add
sti
pusha
popa
push
loop
daa
cmpsb
repz
and
cmp
test
mov
or
insb
push
cmpl
lds
or
inc
std
push
test
mov
aaa
pop
mov
cmp
pop
add
or
idivb
in
imul
push
adc
adc
ret
mov
out
inc
pop
mov
ss
fldenv
and
xor
push
inc
push
js
jae
pop
addb
cmp
sti
clc
ja
mov
fbld
mull
out
jg
inc
lcall
mov
ret
and
icebp
inc
pop
out
repz
push
lods
call
jp
ds
mov
push
loop
out
mov
mov
xchg
daa
add
out
push
pop
ja
gs
adc
dec
cmpsl
mov
sbb
jno
pop
popf
sbbb
bound
call
imul
dec
sbb
stos
lods
mov
jnp
mov
jno
mov
mov
jecxz
andl
es
mov
push
loopne
rcr
and
mov
fwait
in
and
jmp
mov
ja
stos
fs
outsl
xchg
in
add
mov
cmpsl
and
mov
xchg
push
shlb
xchg
cmp
in
xor
push
repz
mov
or
ret
pop
xchg
push
or
cltd
add
mov
push
add
pusha
test
stos
xchg
sub
inc
push
js
pop
imul
sub
jg
push
aam
or
adc
xor
pusha
jmp
add
insl
and
jo
popa
sbb
je
stc
pop
push
xchg
or
xchg
les
ljmp
test
sbb
adc
inc
repnz
cmp
les
or
loopne
dec
inc
mov
dec
sar
lahf
push
or
shrb
jbe
test
fistps
push
call
fsubr
pushl
jne
and
inc
cltd
dec
stc
pushl
mov
mov
fnstcw
jbe
shrb
mov
or
mov
mov
mov
pop
mov
jae
pop
sub
jb
ja
test
push
in
dec
sbbb
push
rorl
and
movsl
clc
inc
aaa
scas
mov
inc
mov
xchg
push
push
repnz
adc
shll
fmul
sti
inc
mov
imul
insb
negl
rcrl
mov
lock
and
ret
ss
push
inc
inc
cwtl
pop
adc
xor
mov
xchg
pop
test
ljmp
inc
repnz
cwtl
rcll
or
and
test
paddusb
rolb
into
mov
xor
push
std
xchg
mov
mov
ror
push
std
es
mov
and
pop
cmp
adc
je
xchg
and
sbb
pop
sarl
mov
mov
mov
scas
cmc
sbb
sub
xchg
jb
data16
add
ret
nop
push
jmp
insb
aad
es
mov
pop
fstpl
ds
into
fildl
popa
mov
les
ror
ss
adc
stc
sbb
push
int
or
mov
pop
pop
aaa
mov
into
sub
jle
sahf
dec
mov
loop
inc
pop
xlat
xchg
cmc
or
cmp
fcomps
inc
fstpt
cwtl
inc
add
sub
dec
pop
dec
sarl
rclb
jle
call
mov
testl
inc
filds
mov
cld
ja
loop
lock
and
test
repnz
push
jb
std
push
jecxz
cmp
sbb
push
inc
sub
jle
mov
pop
fadds
mov
outsl
inc
and
aam
ss
and
aad
push
jbe
ja
xchg
mov
add
popf
stc
mov
cmp
cld
es
and
add
nop
dec
mov
sbbl
jo
pop
inc
scas
cmp
enter
ja
mov
jns
push
data16
icebp
dec
sub
push
dec
shl
aam
notl
clc
ret
and
mov
jno
sub
push
out
sbb
jmp
rcrb
sub
xor
xchg
outsb
mov
mov
mov
add
or
in
test
rcll
mov
outsb
pop
cli
push
inc
pusha
gs
leave
mov
add
test
cmc
add
and
rolb
mov
std
ljmp
adc
gs
ds
stc
movsb
sbb
shr
ret
rcr
fsubrl
into
xchg
mov
jmp
add
jp
enter
pop
mov
faddl
insl
leave
pop
lea
mov
arpl
mov
jns
icebp
test
or
ds
fdivp
jge
aaa
or
popf
sub
sub
cs
cmp
out
cmp
loopne
fldt
popf
mov
and
pop
mov
push
jns
out
fs
or
cltd
cmp
cmp
das
xchg
hlt
inc
push
mov
iret
mov
inc
jne
adc
sub
mov
sbb
xchg
add
lea
sbb
rolb
fcomps
loope
mov
cmp
xor
into
dec
cmp
pop
or
add
test
not
jle
bound
mov
scas
out
dec
push
test
sub
pusha
jns
push
in
xchg
jmp
iret
pushf
popf
jnp
leave
lahf
jne
arpl
lcall
popl
dec
and
das
out
jp
jmp
mov
call
in
push
dec
push
and
xor
or
mov
push
into
adc
lods
and
scas
loopne
and
jecxz
xlat
sti
test
notb
mov
pop
aad
pop
sahf
loope
mov
jg
mov
sub
pop
push
cwtl
xor
lock
push
lcall
fdivr
cmpsb
sub
sbb
jge
mov
daa
jge
jae
mov
mov
and
jg
sub
cmp
lods
int
and
push
repnz
cltd
dec
pop
push
inc
mov
xlat
sbb
sub
mov
pop
arpl
int3
je
icebp
outsl
add
notb
loope
stc
push
pop
xor
or
shrb
dec
ds
rolb
xchg
dec
jne
mov
jecxz
cld
jnp
rolb
enter
cld
out
cmp
aaa
std
lret
xor
int
xchg
insl
xchg
sub
mov
cld
adc
movsb
mov
movsb
popf
mov
ja
adc
scas
shlb
or
xor
bound
mov
xor
mov
iret
inc
add
out
mov
push
add
fimuls
mov
in
sbb
andb
sub
dec
lods
inc
rorl
push
mov
cld
dec
lret
xor
or
mov
mov
fsubp
pop
out
adc
xchg
stc
push
sbb
pop
xchg
fnsave
inc
in
jne
imul
nop
arpl
mov
pop
stc
add
push
sub
add
test
repnz
insl
jnp
mov
sub
es
mov
cmp
ss
das
test
pop
push
test
sbb
add
sbb
and
pop
push
xchg
mov
jle
or
loopne
add
cmpsl
xchg
cmc
cltd
std
stos
adc
ja
push
add
jmp
in
jl
adc
cmp
sysret
sbb
xor
inc
lock
fnstcw
xchg
ret
testl
pop
fdivrl
repz
sbb
aad
bound
sbb
or
cmp
test
les
ret
or
sub
ljmp
cmp
pop
xor
pop
hlt
and
add
adc
mov
cmp
sbb
add
rcl
sbb
jae
cmp
ljmp
pop
andl
push
sahf
insl
jmp
or
cmp
mov
lcall
ljmp
jge
out
pop
adc
fs
adc
cmpsb
into
lret
aaa
and
pop
cmc
sbb
fistpll
push
cmc
dec
mov
lods
cmc
and
xchg
push
fsubr
add
in
cmc
incl
arpl
aad
dec
pop
insl
sub
aad
es
cmp
cmp
test
addb
flds
and
aad
bts
push
sbb
lret
scas
nop
stos
fwait
adc
xchg
xchg
roll
sub
sbb
or
fstpt
dec
ljmp
push
xchg
test
in
jp
call
inc
inc
shll
sar
mov
lahf
je
adc
lret
test
iret
sub
subl
sbb
pop
push
xor
hlt
jl
pop
dec
das
push
adc
pop
popf
and
xor
clc
dec
adc
sub
pusha
aaa
imull
add
into
cld
jl
xchg
adc
jne
mov
std
sbb
pop
out
jns
fisttps
xor
or
push
int3
hlt
jo
adc
in
or
stos
pushf
cmc
pop
inc
jnp
mov
rorl
or
add
mov
popf
mov
xor
les
dec
pop
rolb
pop
inc
fs
push
inc
mov
inc
fsubrp
enter
cwtl
outsb
stos
push
add
push
ss
cmp
adc
xchg
mov
out
stos
in
fcmovne
mov
shll
mov
scas
mov
fisubs
pop
out
sbb
mov
jo
jmp
dec
mov
lret
push
pop
pushf
pop
mov
insl
insl
adc
add
mov
xchg
out
xor
jg
dec
inc
jle
mov
sub
scas
lret
mov
test
test
in
mov
inc
cmpsb
hlt
pop
adc
cmpsl
mov
jbe
repnz
test
jne
push
add
scas
jb
and
adc
int
adc
bound
mov
add
ds
lahf
sub
and
cld
and
in
test
cltd
and
insb
add
or
sub
out
popf
cmp
jg
pop
jp
xor
test
inc
push
pushf
xchg
je
xchg
push
xchg
jnp
push
xor
add
xchg
mov
arpl
lea
add
and
mov
out
xor
mov
cmp
movsl
popf
or
popa
aaa
add
pop
rol
xchg
cmpsl
fwait
sbb
sbb
or
cli
pop
fmulp
jmp
cwtl
xchg
jno
inc
dec
dec
push
addr16
clc
test
mov
pop
jne
sbb
stos
or
je
mov
mov
mov
sub
push
mov
pusha
out
adcb
mov
fwait
inc
nop
fsubs
loopne
fld
in
ret
fwait
sti
js
pop
fndisi(8087
jl
dec
mov
xchg
stos
mov
adc
sbb
mov
dec
test
in
inc
jnp
pop
or
dec
and
sarl
pop
sbb
pop
xor
int
mov
aam
faddl
shr
adc
xchg
adc
add
cmpsl
scas
cltd
sbb
mov
out
sahf
pusha
aad
inc
stc
cmp
dec
mov
mov
sbb
incl
fbld
jnp
cmp
mov
cmp
or
scas
rcrb
rcll
cmp
test
pop
inc
lcall
xchg
adc
inc
xchg
adc
faddl
push
pop
in
lret
jbe
jge
adc
sbb
xor
mov
mov
repnz
push
shll
push
insl
arpl
push
add
pop
shll
sbb
ffree
arpl
nop
lcall
xchg
inc
pop
fs
cmpb
inc
dec
cmc
cmc
add
xchg
in
jnp
push
push
test
push
fsubrp
sub
xor
fldcw
aaa
out
sub
xchg
ffreep
or
outsb
lock
xor
sub
cs
rcl
scas
dec
push
xchg
mov
and
push
cmpl
enter
push
and
loope
iret
bound
movsl
lods
aam
orb
andl
inc
mov
jne
adc
xchg
inc
sbb
movsl
mov
dec
xchg
mov
or
sarl
pop
push
sub
inc
pushf
inc
jmp
xorb
iret
push
dec
jo
rorl
addr16
add
loop
and
mov
inc
cld
fstps
hlt
dec
ljmp
inc
rol
aas
xchg
cmp
sub
into
ds
push
pop
nop
pop
ss
sahf
or
fcmovbe
mov
dec
rcr
cmc
pop
das
xorb
into
cmp
fs
mov
sub
fidivrs
sub
mov
mov
sbb
out
lret
inc
mov
or
jo
loop
repz
sub
lret
fwait
data16
xor
mov
push
push
out
lcall
sbb
cs
xorl
loopne
loop
pop
stc
and
lock
out
iret
mov
ror
ret
mov
es
andl
mov
sub
loope
adc
mov
ss
cmp
lods
data16
imul
mov
gs
enter
pop
mov
les
arpl
fs
jnp
and
sbb
sub
push
and
jl
xchg
dec
loopne
bound
rcrl
sbb
sub
stos
push
jl
and
mov
lods
imulb
and
sbb
pop
xchg
js
icebp
xchg
ss
cmc
xchg
xchg
sub
mov
xchg
add
pop
xor
or
sub
frstor
test
lock
mov
push
mov
sahf
outsb
pop
mov
loope
bound
in
scas
in
push
mov
cwtl
push
mov
aad
jecxz
ret
push
iret
popf
mov
pushf
inc
mov
inc
in
je
mov
mov
es
enter
xchg
jg
sti
and
xchg
std
cwtl
test
in
jmp
popa
test
orb
mov
pop
jae
adc
and
cltd
sbb
sar
push
jg
cld
daa
mov
inc
jp
xchg
scas
push
cmp
jne
lret
or
push
add
popf
arpl
xchg
dec
icebp
add
xchg
sub
rcr
adc
pop
mov
sbb
repnz
fsubs
imul
call
stos
cmp
mov
out
loopne
sub
jne
or
dec
mov
test
adc
and
cld
mov
into
add
jae
cltd
mov
bound
push
lock
inc
adc
shlb
test
icebp
and
cwtl
icebp
scas
test
outsl
test
dec
adc
subl
xor
sbb
or
leave
add
inc
push
call
test
gs
jp
inc
mov
sbb
movsb
cmc
popf
aad
iret
adc
cmp
enter
push
mov
je
mov
sub
in
cltd
pop
ret
js
adc
jae
xor
out
icebp
hlt
stos
std
jae
xchg
dec
push
repnz
lods
je
cmpsl
mov
xchg
fnstenv
cmpb
or
xor
xchg
popa
lods
cmovl
mov
jecxz
fdivs
xchg
cli
inc
ret
adc
sarl
scas
mov
add
and
out
fiadds
mov
inc
adc
jl
icebp
or
sarl
stc
xor
jp
cmp
lcall
pop
inc
cmp
pop
add
adc
outsb
inc
test
mov
sub
ret
mov
test
sbb
call
inc
jnp
xchg
cmpsl
cmp
dec
repz
inc
sub
push
js
pop
imul
mov
sub
in
hlt
mov
pushf
mov
fwait
and
cld
pop
enter
or
mov
fisubs
sar
movsb
lock
or
jns
js
sbb
push
cmp
jmp
jnp
into
inc
or
cmpsl
jle
test
fstps
mov
lret
icebp
inc
dec
pop
imul
clc
dec
cltd
ror
and
xchg
stc
andb
fildll
sbb
test
xor
pop
pop
cli
cs
cmp
xchg
lds
je
das
jne
iret
or
sbb
xchg
sub
into
mov
mov
dec
or
imul
cmc
xchg
addb
sbb
jecxz
sub
jae
ret
xchg
bound
lahf
lock
mov
mov
mov
ss
sub
push
mov
das
imul
enter
les
outsl
addb
out
shlb
dec
jae
pusha
pop
clc
imul
and
in
pop
dec
fldt
shr
jg
pop
popf
scas
icebp
mul
pop
jne
gs
mov
stos
ret
or
jmp
call
and
mov
xor
sub
jae
roll
inc
mov
icebp
je
xchg
mov
jbe
data16
xor
mov
in
mov
fs
mov
arpl
jmp
or
popf
es
push
sbb
cmp
jmp
ficoms
andb
daa
aaa
loopne
and
mov
push
xchg
dec
xor
add
add
daa
add
mov
clc
dec
in
addl
xchg
xor
inc
iret
push
and
repz
lret
sub
inc
lahf
ljmp
test
arpl
and
pusha
mov
ja
push
xorl
cmp
mov
sahf
mov
clc
data16
out
sub
scas
loopne
test
pushf
inc
cld
cltd
jmp
xchg
push
orl
lret
into
jl
sub
sub
mov
addr16
cltd
daa
sarl
aad
int
insb
repz
pop
stc
inc
add
mov
cmp
push
imul
or
xchg
int
pop
mov
lods
mov
lock
mov
push
enter
push
stc
sub
add
cwtl
mov
arpl
ret
call
mov
negb
lods
lret
and
stos
cwtl
rol
mov
xor
popf
in
icebp
dec
inc
in
xor
push
aam
arpl
push
call
clc
xor
dec
stos
adc
or
shrb
jne
mov
sar
sahf
push
ret
clc
add
shlb
fwait
test
loope
sbb
mov
sbb
jo
xchg
fmuls
sbb
fnstcw
push
js
sub
in
sub
adc
or
lods
cmp
js
jecxz
sbb
dec
push
sub
and
inc
jns
pop
push
xchg
xor
clc
xor
and
pop
mov
push
cltd
jecxz
cwtl
mov
dec
lcall
pop
jnp
dec
ja
pushf
add
stos
test
xchg
adc
mov
mov
jnp
cld
jmp
stos
adc
adc
je
dec
pop
push
xchg
dec
jge
into
mov
test
dec
loop
ror
xchg
ficomps
imul
and
lcall
jae
inc
jo
inc
mov
in
hlt
jnp
aaa
bound
jmp
stos
inc
sbb
jmp
rolb
jmp
xorb
mov
mov
fdivrl
mov
out
pop
psubsb
rorb
pop
mov
rcl
int
in
pop
repnz
test
sub
pop
insl
into
sarl
inc
lods
addb
sbb
faddl
dec
out
scas
mov
dec
repz
mov
sbb
dec
iret
mov
sub
mov
or
add
popa
cmp
inc
and
iret
lock
sbb
sub
mov
adc
jle
adc
sub
push
xchg
add
sub
xlat
cmpsl
cmp
and
ss
jno
ljmp
dec
mov
scas
rcrb
into
jae
jp
lret
fs
mov
or
add
outsl
mov
cmp
clc
inc
mov
lret
jnp
ret
sub
out
mov
mov
add
test
popf
stos
jle
aas
orl
pushf
adc
cwtl
mov
xchg
rclb
std
xor
dec
and
push
pop
neg
movsb
inc
mov
add
push
test
loop
xchg
xchg
aam
push
add
xchg
lea
imul
inc
mov
stos
xlat
and
loope
adc
and
mov
mov
mov
imul
sbb
out
jo
leave
movsb
nop
jmp
mov
shrb
push
imul
ret
arpl
cmp
xor
sbb
xor
mov
xor
arpl
jge
ja
push
push
mov
xor
add
and
xor
jecxz
jl
ljmp
pushf
aaa
addr16
imul
jmp
mov
imul
xor
dec
sarl
inc
dec
lahf
sub
push
fisttpll
shlb
xchg
xchg
inc
jae
test
push
cmp
mov
fprem1
test
cmpsl
icebp
lret
inc
aam
mov
nop
incb
pushf
ljmp
and
xor
addb
data16
test
xchg
enter
popf
dec
rorl
sbb
mov
aam
inc
push
aaa
or
lahf
les
dec
aam
popa
cmpsl
cld
test
insl
andl
mov
faddl
cmp
sub
fldl
cmp
jbe
push
pop
sub
jecxz
adc
push
je
sub
je
xchg
push
daa
pop
mov
roll
xchg
xchg
pop
enter
outsb
ss
cli
pop
ficomps
popa
pop
push
repnz
xchg
hlt
and
mov
adc
and
loop
sbb
clc
mov
testl
insl
sbb
clc
pop
mov
cmpb
js
inc
mov
lea
pop
in
pop
gs
out
adc
jp
fdivrs
lahf
js
jbe
fidivrs
mov
adc
sub
jp
les
push
fbld
and
push
in
pop
lahf
xorb
fs
mov
fiadds
mov
cmpsb
adc
mov
jmp
ret
add
lods
sub
out
ja
fdivr
cmp
testl
mov
ret
add
in
jle
dec
rcll
mov
cltd
mov
idivl
andl
sbb
test
push
int3
cmp
repz
inc
mov
inc
imul
adc
inc
popa
add
js
inc
rcrl
rcr
dec
mov
sbb
ss
lea
mov
arpl
enter
jl
int3
jnp
cmc
mov
jmp
dec
mov
lds
adc
std
xchg
adc
sub
mov
mov
add
sti
clc
dec
add
mov
out
jb
push
insl
adc
jnp
mov
adc
cld
mov
mov
mov
or
int
lods
or
shll
lret
ret
in
mov
xchg
adc
or
int
adc
inc
inc
dec
loop
mov
mov
imul
and
xchg
sti
nop
adc
sbb
push
fiadds
pop
js
imul
cmpsb
xchg
mov
sbb
mov
jg
jl
add
xor
loope
and
add
mov
pop
xchg
cmc
pop
imul
or
scas
scas
jb
pop
pusha
dec
xchg
jecxz
jo
jns
inc
mov
shll
pop
add
push
pop
dec
mov
std
lds
jmp
inc
into
leave
mov
call
fdivrs
pop
scas
add
dec
push
das
rcrb
adc
xchg
repz
dec
fwait
in
inc
ljmp
jge
adc
sbb
in
jle
sbb
sub
xchg
mov
jae
pusha
jns
jbe
ja
cwtl
sub
imul
cmp
and
xor
jb
dec
cmp
sub
jecxz
outsl
arpl
nop
aad
fimull
ljmp
pop
mov
xor
stc
jno
les
inc
cld
iret
adc
inc
adc
cmc
ja
cmc
and
pop
or
scas
and
adc
xchg
and
addl
xchg
and
jae
dec
add
mov
and
mov
jecxz
imul
call
clc
jge
shlb
in
jbe
xchg
mov
loop
test
jo
je
addb
loop
push
fptan
push
shlb
sbb
inc
ret
sbb
imul
sub
push
or
gs
neg
inc
jecxz
mov
or
xchg
lea
xor
add
movaps
mov
push
mov
dec
xchg
sub
gs
mov
dec
or
scas
stc
cmp
jbe
aaa
shr
int
cmovge
xchg
mov
push
mov
jecxz
pop
xchg
pop
rcrb
push
mov
push
mov
add
inc
sub
add
mov
add
rorl
jno
mov
cli
mov
repnz
dec
pushf
xor
ret
and
sarb
sub
adc
mov
adc
mov
add
jno
cli
jne
stos
and
aad
shl
loop
mov
fs
ret
test
sub
sbbb
aam
inc
xchg
mov
rcr
mov
sbb
test
mov
xchg
iret
push
and
movsb
mov
jle
jge
or
push
lahf
popa
adc
cltd
jg
jne
sbb
mov
xchg
cmp
dec
sub
mov
jns
repz
xchg
outsl
leave
inc
les
dec
jbe
cmc
rcll
sti
or
popf
jecxz
mov
ja
jno
and
loop
xchg
push
addb
out
pop
jp
mov
es
lret
mov
jno
lcall
and
fisubrl
sub
add
mov
mov
pushf
arpl
inc
jae
ja
js
daa
pushf
cmp
mov
lods
mov
or
mov
xchg
pop
nop
ret
in
fcoml
in
ja
ret
pop
pop
pop
sub
push
adc
jns
stc
mov
xor
mov
cmc
mov
and
xor
jmp
adc
cltd
or
je
iret
jmp
jmp
sbb
dec
mov
pop
push
dec
jbe
sti
into
test
or
mov
xchg
push
loopne
mov
shll
mov
push
and
sbb
dec
out
adc
inc
mov
xlat
fiadds
or
push
cmp
dec
cmc
andl
xchg
push
and
inc
sti
xor
into
adcb
cmpb
mov
and
push
cmp
divl
add
mov
std
mov
inc
mov
add
cmc
test
cmp
inc
pop
pop
pop
xchg
sub
push
lret
aam
movsl
inc
je
push
orb
out
pop
cmp
div
das
adcb
ljmp
or
xchg
sbb
mov
clc
xchg
mov
mov
mov
mov
push
stc
sub
jecxz
nop
shrl
movsb
out
dec
lock
loope
test
clc
fs
pop
mov
mov
jge
std
popf
mov
inc
mov
outsl
ja
lods
xchg
movl
movsb
mov
cmp
lock
jbe
jmp
add
jl
mov
mov
pop
pop
fwait
leave
not
sub
jno
inc
inc
cwtl
mov
dec
ret
test
sbb
adc
stos
and
nop
or
pop
mov
push
push
std
jge
inc
imul
cmp
insb
push
je
andb
cmpb
push
mov
mov
sub
test
stos
in
arpl
sbb
imull
cmp
bswap
mov
movsb
xchg
push
lret
pop
jbe
mov
test
mov
out
das
mov
jbe
aaa
loopne
dec
loopne
and
insl
outsl
jmp
sbb
jle
ss
lods
pop
jnp
sti
xor
pusha
push
call
add
cmc
fs
out
xlat
or
fstps
rcr
into
pushw
int3
mov
lods
popf
mov
mov
test
fistpll
pop
shlb
mov
add
incb
fs
xor
in
and
arpl
dec
sbb
mov
pop
xchg
adc
das
lret
jne
lcall
hlt
lds
jno
add
mov
jle
or
sbb
subb
add
add
jnp
rol
xchg
pop
or
addr16
jle
fstpl
add
gs
gs
enter
mov
mov
xchg
dec
ljmp
pop
leave
lahf
xchg
fildll
dec
xor
add
adc
pop
xchg
mov
inc
arpl
jecxz
addr16
into
mov
in
inc
xchg
stos
lods
xor
movsl
ret
hlt
xor
inc
pop
dec
xor
ja
add
and
outsl
sub
mov
icebp
push
inc
lods
inc
mov
loopne
lods
pusha
cmpsl
mov
adc
sbb
sahf
movl
imul
lahf
arpl
or
in
movsl
push
loopne
negb
xchg
lods
pop
rorl
subl
adc
out
push
jo
test
or
sbb
adc
test
cli
in
xor
adc
cmp
rol
pushf
loope
movd
insb
out
notl
xchg
xlat
cli
fnsave
xchg
inc
out
jge
pop
sbb
daa
lea
nop
test
jo
lahf
mov
lds
pop
mov
add
ss
jns
push
enter
xchg
test
lahf
xorl
xchg
sub
sub
lods
shll
mov
add
pushf
arpl
popa
adc
int3
jl
hlt
and
sti
in
xor
pop
dec
xorb
mov
fldcw
pop
or
sub
sub
sbb
inc
pop
cwtl
push
inc
aam
push
xchg
int
push
ja
lods
push
fwait
stos
repnz
data16
iret
out
sbbl
push
pop
push
cmp
into
mov
pushw
fldl
icebp
push
int
testb
jg
mov
sbb
xchg
xchg
mov
mov
fnsave
movsb
idivl
movsl
bound
shrl
test
adc
mov
cli
xlat
cmp
inc
jno
jecxz
test
out
push
mov
out
xchg
arpl
addb
add
call
inc
jae
jb
sbb
std
mull
test
icebp
or
cld
shlb
lahf
inc
movsl
pop
sbb
aas
les
ret
in
jae
cmp
cwtl
fs
mov
add
and
sub
fidivl
inc
popa
jns
call
fnsave
push
dec
push
jo
push
cmp
inc
in
push
nop
dec
imul
cmpb
add
popf
cld
dec
shr
xchg
out
vsqrtss
imul
xor
leave
lods
cmp
js
sbb
jns
push
and
outsb
je
add
and
or
inc
mov
or
jge
push
xchg
push
cwtl
lret
sub
out
adc
push
or
lock
pop
scas
adc
jns
mov
ja
mov
fmuls
adc
mov
ljmp
loope
aad
push
mov
lahf
mov
fcompl
adc
dec
leave
std
dec
mov
or
mov
mov
das
test
adc
dec
push
mov
int
pop
or
int3
xor
mov
ret
mov
stos
insb
js
sarl
test
sbb
imul
add
into
push
movb
or
dec
pop
dec
sub
adc
flds
sbb
iret
inc
sbb
jno
mov
sar
adc
xor
inc
xchg
ret
add
ret
sub
and
int
stc
inc
add
add
dec
testl
inc
dec
pop
fnstcw
in
test
cltd
mov
pop
and
pop
xor
push
jnp
movsb
and
les
lods
xchg
sub
scas
push
mov
pop
xchg
adc
jle
dec
xchg
fisubrs
xor
cmp
cmpl
icebp
insl
adc
or
aaa
jmp
ja
or
cmc
fwait
lds
cltd
mov
ret
nop
ret
cli
test
aaa
xor
jno
jle
mov
mov
std
lea
xor
testl
in
scas
push
xlat
pop
push
mov
mov
popf
pop
setp
pushf
xchg
pushl
lods
test
mov
lret
mov
sbb
cwtl
lret
out
int3
not
add
std
xchg
lock
insl
mov
loop
or
stos
pop
push
and
ret
outsb
push
inc
mov
insb
add
les
fiadds
mov
shll
fmuls
cmpsl
push
jne
jl
push
or
and
cltd
js
scas
popa
pop
adc
aaa
xor
mov
test
cmc
insb
cs
icebp
loopne
ss
or
or
in
mov
outsb
push
push
shl
mov
jbe
mov
and
sub
adc
movsl
rorb
movsb
dec
lea
in
ljmp
sub
int
jns
hlt
sahf
js
outsl
gs
push
inc
adc
cmpsl
push
fmuls
mov
decb
call
mov
cltd
sti
jbe
pop
xchg
lcall
clc
insb
mov
in
dec
int3
adc
mov
lret
mov
movsb
inc
jg
pop
icebp
cmpsb
loopne
push
mov
call
jb
sbb
lods
inc
xchg
cmp
mov
inc
jbe
icebp
dec
outsl
push
sub
xor
mov
and
shrb
es
and
pop
popf
push
jb
push
sti
iret
adc
lret
fldt
mov
vshufpd
push
xchg
xchg
pop
data16
divl
orb
mov
std
cmp
inc
cltd
cmp
xchg
in
or
smsw
mov
cmpsl
dec
out
push
je
lret
icebp
push
lcall
ds
shl
adc
pop
movsl
ret
mov
sbb
dec
lahf
test
dec
inc
repnz
jge
push
xchg
lret
add
sub
inc
cmp
sbb
mov
shll
hlt
or
and
stos
lcall
ficoml
mov
mov
inc
or
pop
mov
cmp
jno
adc
stos
mov
les
adc
rolb
pusha
jb
outsl
xchg
mov
fildll
xor
xchg
imul
sub
pop
xchg
xchg
cmpxchg
rolb
cltd
mov
sbb
loope
fdiv
mov
popf
sarb
icebp
mov
xchg
kmovw
mov
sbbb
pop
pop
in
or
or
fbstp
pop
pop
loop
repnz
jecxz
push
and
out
pushl
push
roll
mov
mov
pusha
pop
mov
lcall
fs
sti
mov
xor
inc
int3
ss
out
mov
mov
cld
mov
bound
cmpsb
out
int
inc
push
imul
out
mov
mov
push
sbbl
shrl
lds
push
cmpsb
and
lahf
loopne
movsl
push
inc
xchg
adc
enter
sub
ljmp
mov
fcmovnb
sti
aaa
push
in
xchg
push
cs
jl
gs
push
mov
mov
mov
pop
imul
orl
push
shrb
testb
pop
lcall
int
loope
bnd
shrb
lahf
loopne
fcomi
rcr
mov
mov
pop
dec
iret
or
and
xchg
ds
lods
or
mov
sub
push
mov
fiadds
dec
das
hlt
jae
add
adc
push
ret
jns
sbb
ljmp
xchg
jns
dec
cmpsb
mov
scas
scas
pop
xorl
cmc
sbb
mov
test
inc
mov
mov
inc
xor
cmp
fidivrl
arpl
cmp
push
scas
sbb
jle
mov
cltd
cmp
and
cmc
repnz
shll
mov
out
stos
add
sbb
lret
loope
fstl
outsb
or
mov
mov
hlt
sub
sbb
pop
mov
adc
leave
dec
stos
movsb
shll
inc
or
insl
xor
cltd
clc
cs
insl
outsl
jae
dec
cmovle
or
adc
test
icebp
dec
push
xorl
cltd
ja
int3
ja
sbb
jmp
imull
aas
xor
insb
cmp
mov
cwtl
negb
push
jb
lds
sysexit
fwait
out
insb
mov
jno
xchg
sub
jp
sub
ret
sub
mov
mov
inc
ss
jle
lods
mov
cwtl
adc
add
mov
loopne
adc
out
jle
cmp
sub
rorb
push
imul
bound
sti
stos
repnz
repz
jb
movsl
lods
push
in
pop
icebp
cmpsb
cmp
hlt
inc
mov
add
xchg
mov
gs
ss
cmp
mov
lret
push
pop
imul
imul
ret
outsb
stos
pushf
insb
sbb
mov
imul
jge
and
inc
cmc
push
js
aad
pop
xchg
int
enter
movl
mov
adc
push
cmp
xchg
out
dec
cmp
xor
add
ret
jmp
mov
hlt
inc
inc
push
call
sub
xchg
sub
and
jb
and
mov
mov
mov
jl
pop
push
mov
push
xchg
jns
loop
ljmp
inc
cmpsl
inc
jp
xchg
xchg
loop
xor
mov
addr16
cwtl
jo
enter
jecxz
sbb
mov
xorl
mov
jl
outsl
cmpsb
call
dec
xor
push
xchg
andb
in
inc
pop
enter
dec
push
xor
lods
jge
jae
jle
js
pop
xchg
push
lods
cmc
lret
addr16
fs
cmp
add
add
aad
fidivrl
push
pop
fists
inc
lds
cld
push
cmp
gs
sbb
push
cmp
or
adc
push
js
adc
int
add
dec
aaa
cmp
stos
cmpsl
or
pop
popa
push
push
or
mov
xchg
xchg
mov
popa
xchg
out
cmp
mov
movsl
dec
or
jae
mov
mov
cmp
and
pop
insl
sub
sbb
mov
cltd
cs
mov
in
jle
inc
sub
pushf
jo
je
dec
mov
or
push
pop
out
notl
sahf
sahf
test
out
adc
stos
jl
pop
push
ret
loop
es
jbe
sahf
movsl
hlt
mov
add
mov
aad
xor
push
cmp
mov
scas
outsb
sub
xchg
mov
shl
subb
out
or
filds
or
push
xor
mov
mov
test
test
nop
fisubs
xchg
inc
push
push
and
add
ja
test
sub
xor
or
push
mov
pushf
xchg
and
jl
fidivrs
or
fiadds
lahf
jge
push
ud2
add
inc
mov
iret
inc
pop
aam
dec
int
inc
xchg
jp
xor
imul
fs
xchg
push
sbb
jle
int3
sbb
aam
mov
insl
jae
cli
pop
sbb
sub
hlt
add
xor
jmp
lcall
popa
out
sbb
sub
clc
in
es
mov
cmp
data16
adc
push
or
imul
push
insb
or
daa
dec
shr
sarl
adc
add
movsb
mov
ja
push
out
out
fists
int3
mov
adc
or
lret
inc
leave
push
stos
adc
aad
sbb
push
fildl
and
mov
mov
int
icebp
das
xor
mov
sti
mov
mov
push
test
jl
mov
mov
int3
ret
out
fdivl
bound
mov
push
xor
jmp
add
fs
pop
aas
lret
sub
mov
testb
pop
cmpsb
adc
lods
das
inc
andb
or
test
test
cmpsb
shrb
cli
fidivrl
in
sahf
in
outsb
mov
std
jae
out
add
das
push
mov
cmpsl
or
sub
gs
in
mov
fwait
outsl
movsb
xor
scas
sbb
testl
sub
inc
aam
xor
cld
ret
and
xchg
hlt
daa
cmpsb
fisubs
inc
lods
inc
pop
fwait
xor
sub
push
sbb
stos
call
add
inc
test
cli
push
push
popa
dec
nop
sub
arpl
stos
outsl
mov
mov
push
add
push
xor
and
std
test
and
lret
add
movsl
int3
lahf
arpl
jbe
jp
lret
movaps
xchg
in
imul
dec
mov
test
mov
and
jecxz
ja
dec
xchg
outsb
push
fmuls
sbb
daa
fwait
pop
xor
movsl
lods
jne
or
xchg
out
push
fdivl
mov
in
in
out
add
pop
add
jnp
mov
jnp
mov
sbb
in
mov
shl
popf
mov
inc
push
leave
shlb
cli
xlat
fidivrl
sub
bound
hlt
cmpl
mov
scas
mov
mov
aaa
dec
jecxz
push
jp
leave
lock
xor
mov
cmp
mov
push
insb
shll
or
mov
icebp
dec
arpl
xorl
test
cmp
je
mov
dec
jo
xor
fldpi
push
addr16
fildl
out
xchg
adc
cs
aam
pop
movsb
mov
mov
insb
pop
push
push
icebp
lcall
in
pushf
or
mov
sbb
mov
sub
pop
lock
sub
pushf
arpl
add
std
sti
push
fsubr
mov
test
add
dec
out
clc
out
mov
add
jmp
jns
cld
sbb
imul
add
out
fldl
pusha
cmp
test
cmp
and
fcomp
xchg
ljmp
jecxz
iret
out
arpl
pushf
in
sub
xor
data16
sub
xor
pop
inc
or
sbb
pop
mov
ds
jnp
inc
xchg
mov
cmp
mov
push
fsts
cmpsl
or
add
inc
call
js
stos
outsl
cwtl
sub
or
xchg
incb
inc
pushf
jo
add
popf
scas
mov
dec
xlat
test
cmp
inc
mov
jl
jno
sahf
int
and
inc
push
and
ja
stos
or
lock
mov
fmul
xlat
shl
iret
scas
cmp
dec
in
pop
sbb
jmp
lds
jecxz
cmc
dec
push
inc
xor
cmp
repnz
shll
lods
xor
jp
leave
jecxz
aas
sub
fadd
fdivs
movsl
sub
lret
mull
clc
dec
lds
fnstcw
cmc
movsb
jne
mov
enter
sub
push
mov
fldt
jl
das
out
nop
pushf
movsl
sbb
mov
xchg
lahf
fimull
lahf
popf
inc
inc
jb
adc
and
adc
sarl
in
pusha
gs
sahf
xlat
subb
pop
push
lret
cmp
jne
cwtl
insb
jne
les
dec
mov
sub
mov
sub
imul
and
mov
fcmovbe
jo
scas
adc
lods
ret
inc
sti
ss
add
leave
movsb
cmp
xor
ret
pop
push
testb
scas
and
xchg
mov
mov
cli
enter
xor
lcall
out
in
mov
cmpsb
lods
fwait
mov
dec
mov
add
fdivrs
inc
xchg
xlat
cmp
fnstcw
cs
fiaddl
insl
fs
pop
int3
popl
jle
sub
jecxz
aas
out
imul
jl
xorl
leave
and
inc
push
inc
iret
xlat
xor
mov
jo
jecxz
mov
inc
adcb
jns
clc
sub
test
mov
je
loope
jne
push
jecxz
shlb
leave
loopne
lods
push
inc
addr16
sbb
mov
rcrl
xchg
inc
cmp
sub
inc
popa
mov
aas
dec
add
imul
cmp
mov
stos
sbb
or
popl
dec
movsb
push
inc
leave
mov
push
cmc
jnp
jmp
mov
std
xchg
pop
test
call
shll
fldenv
in
setp
movsl
mov
test
testb
movb
push
cmpsb
mov
jmp
sbb
sub
ljmp
xor
icebp
adc
push
sub
sub
scas
xor
mov
lcall
cld
divl
cmpb
std
push
lcall
or
sbb
mov
cmpsl
cli
and
push
lock
xchg
adc
aam
pop
popa
mov
dec
sbb
sti
aad
jg
inc
imul
ljmp
jbe
dec
incl
insb
xchg
push
adc
sbbl
ret
lahf
shll
mov
sbb
xor
add
dec
imul
jns
sbb
repz
and
and
cld
dec
or
sahf
jae
movsl
fs
sub
add
push
stos
hlt
mov
pop
push
es
int3
mov
push
dec
sbb
out
push
cmp
inc
mov
addb
mov
mov
add
xchg
lahf
imul
repz
icebp
aad
cmp
in
mov
sbb
mov
mov
add
and
or
adc
cmp
js
inc
test
ret
mov
xchg
xor
cmpsb
add
dec
iret
in
pop
xchg
push
mov
pop
loope
cwtl
cmpsl
or
push
mov
push
int3
add
rcrb
mov
inc
jbe
push
add
pop
jbe
je
popa
cld
mov
scas
pop
in
mov
dec
push
pop
ja
cmc
gs
xchg
testb
nop
cld
lahf
ds
dec
xchg
push
jp
xchg
inc
jne
cmp
pop
ss
xor
test
leave
into
cmc
ljmp
jg
sub
mov
inc
cmpsl
and
push
lret
loopne
into
daa
aad
nop
cmp
jle
in
sbbb
dec
push
or
cmp
sub
aas
insb
negb
lret
jp
cmp
pop
incl
fidivl
cmp
outsb
pushf
add
and
in
sub
loope
or
lods
inc
sub
inc
imul
pop
cmp
push
outsb
les
dec
sahf
loope
inc
stos
mov
jecxz
inc
mov
cmp
cmp
and
sub
push
sbb
push
xlat
shlb
xchg
mov
into
std
ljmp
or
icebp
xchg
jns
test
fcmovu
dec
shl
dec
xorl
sti
mov
stos
mov
lea
and
daa
or
push
lcall
das
mov
or
jns
adc
ret
mov
icebp
sbb
or
jle
sbb
inc
pop
xchg
in
mov
push
ja
dec
and
je
or
fistps
ds
push
xchg
inc
js
aam
lret
and
mov
ficompl
lret
es
das
sbb
xchg
and
mov
sbb
xchg
lret
roll
outsl
xor
daa
stos
stos
movsl
or
jmp
mov
sub
mov
inc
mov
or
bound
stc
adc
xor
movsb
insb
and
adc
sub
gs
xchg
mov
loopne
pushf
in
lods
scas
inc
ss
hlt
jle
mov
mov
dec
or
push
jecxz
incl
xchg
test
shlb
lods
sahf
insb
aam
jg
pop
out
xor
inc
es
and
cli
int
icebp
sbb
fdivrl
into
addb
movaps
pop
and
pop
and
lds
sarb
add
mov
and
std
pop
cmc
mov
add
fldcw
stos
cmp
add
daa
inc
imul
add
and
and
out
and
mov
jmp
jg
test
call
pop
idivb
fimull
sbb
ss
and
cmp
pop
pop
mov
mov
pop
enter
cltd
out
ss
stos
mov
shll
mov
lret
dec
das
pop
mov
repz
cmc
fwait
sbb
lods
mov
sub
sbb
flds
and
jo
push
mov
pop
in
mov
push
and
data16
mov
lods
or
leave
mov
loop
add
aaa
mov
adc
daa
pop
test
dec
sub
xchg
loop
or
jnp
ss
adc
pop
mov
in
mov
fidivrl
fcmovb
daa
popf
in
imul
xchg
mov
add
in
js
jns
pop
jno
sub
ret
cmp
and
push
into
jecxz
ja
sbb
and
fwait
pop
xchg
dec
scas
cli
push
jmp
fnstcw
scas
jg
arpl
imul
sub
mov
cmpl
mov
and
repz
xchg
in
add
jle
mov
cmp
fucomi
xor
arpl
cmpb
lcall
cmpsb
and
cli
mov
das
xchg
mov
fwait
sahf
mov
lcall
cmp
int3
scas
xchg
sbb
ret
aaa
stos
ljmp
sti
or
inc
pop
jp
pop
loop
sub
jns
xchg
cmp
or
lods
cmp
pandn
stos
xor
mov
jbe
xlat
loopne
inc
shrb
inc
inc
sbb
gs
push
int3
inc
icebp
sub
cmp
push
mov
dec
mov
call
mov
loop
mov
fbstp
cmpsb
jecxz
call
mov
in
jnp
add
push
mov
out
ret
roll
movsb
popf
fbld
popf
lret
dec
daa
jb
bnd
das
out
inc
pushf
insb
sub
xor
ja
mov
fisubrs
fwait
push
fs
stos
jae
mov
in
in
inc
xchg
and
popf
loope
mov
adc
pop
dec
inc
jl
sbb
inc
pushf
inc
mov
into
push
xchg
scas
movsb
adc
push
push
cwtl
clc
jno
cld
pop
out
lock
test
or
ds
mov
mov
cmp
lods
mov
rcrb
shlb
scas
mov
movsb
hlt
subl
jnp
add
clc
cmpsb
cmp
stos
std
inc
popa
aaa
jl
push
enter
cld
add
cld
cld
jb
mov
and
sub
push
adc
mov
push
dec
stc
sub
mov
addr16
mov
das
fnstcw
inc
cmp
and
xor
fwait
dec
rorl
mov
das
push
mov
push
stc
push
data16
dec
sbb
fcomps
cmp
gs
cs
leave
rsqrtps
mov
jbe
sbb
mov
cmp
arpl
out
mov
jae
jb
jge
jl
jae
sbb
push
push
push
pop
jae
mov
leave
call
lea
pop
lods
in
jb
cltd
ds
adc
mov
jp
push
stc
xor
cli
cmpps
sub
or
dec
fsts
sbb
mov
stos
cmp
mov
push
xchg
ja
sub
popf
aaa
xor
xchg
mov
test
xchg
jmp
jmp
add
test
pop
gs
push
aas
stos
fnstcw
inc
into
dec
cmp
mov
outsb
mov
and
mov
jl
cmc
inc
inc
shr
aam
scas
jl
pop
in
loope
pop
adc
xor
fndisi(8087
nop
xchg
sbb
xor
adc
call
push
lret
out
pop
movsl
jb
insb
jle
notl
dec
mov
mov
mov
test
pop
outsb
stc
arpl
loop
es
and
repz
hlt
lret
jae
adc
in
cmp
cmp
push
mov
mov
pop
out
or
jmp
test
int3
xchg
inc
jp
pop
enter
jnp
out
adc
ficoml
imul
repz
sub
inc
imul
xchg
rclb
xchg
rcrl
mov
or
lret
push
xor
rcr
pushf
push
adc
mov
popf
call
test
xor
scas
mov
mov
xor
dec
add
movsb
sarb
ficompl
ret
jl
lret
dec
jbe
and
or
rorl
data16
fmull
shll
or
push
add
pop
dec
cmp
gs
clc
insb
and
jo
sti
jle
rolb
nop
stos
fimull
mov
cli
sub
movsl
and
mov
adc
dec
mov
add
xor
sbb
push
lock
lcall
inc
adc
dec
inc
dec
adc
leave
inc
scas
cwtl
cmp
add
pop
inc
push
movsl
cmpsb
out
sahf
cmpsl
arpl
cmp
dec
cmp
jb
pop
mov
cwtl
push
sub
mov
adc
push
adc
leave
pusha
inc
aas
daa
cmp
jge
fsubl
cld
sbb
xor
repnz
mov
sbb
dec
cld
sbb
lcall
sub
jmp
test
daa
xchg
in
mov
inc
or
test
or
and
imulb
icebp
sub
pop
pop
xchg
jecxz
dec
pop
sub
push
outsl
and
je
in
cmc
cmp
mov
out
mov
inc
dec
fwait
mov
mov
jecxz
jns
mov
insb
in
inc
inc
movsl
jnp
das
inc
in
xchg
xor
fcompl
dec
cltd
pop
das
in
adc
xchg
mov
mov
cmc
dec
add
pop
ljmp
shrb
cmpsl
outsl
xor
xchg
mov
lods
fstl
fcoms
push
and
lock
data16
pop
cwtl
push
dec
and
clc
pop
mov
sub
fs
lahf
lock
push
inc
jp
mov
es
into
mov
popf
jnp
mov
xor
push
sub
int
pop
fcomps
push
xchg
or
repnz
cs
mov
and
mov
fistpll
sarb
and
inc
xchg
fcmove
call
test
out
addr16
push
and
or
std
jb
fwait
xchg
mov
xor
add
sti
dec
ss
pop
fdivrl
addl
cmp
mov
shrl
xchg
pusha
or
fstpt
subb
add
mov
pop
pop
and
add
pop
push
and
arpl
and
jbe
mov
lods
dec
pop
fdiv
or
icebp
movsb
dec
or
pop
xchg
test
ds
jl
gs
je
mov
or
loop
roll
pop
pop
push
ja
fistl
aas
popa
sbb
xor
jge
xchg
mov
stc
pop
lds
loope
sub
inc
int3
mov
fs
nop
xor
inc
sbb
pop
rorb
mov
rol
push
mov
mov
data16
mov
xor
mov
push
rorl
mov
inc
mov
imull
hlt
mov
imul
pop
inc
jp
xor
lahf
andb
movsb
pop
cmp
adc
inc
rcrl
cmpsb
pushl
ss
sbbb
xchg
add
shlb
xchg
and
or
sbb
jbe
add
cmpsb
xlat
loop
cmp
push
lea
xchg
xchg
or
mov
sbb
sbb
js
test
jns
inc
mov
cmp
call
repnz
dec
add
das
jbe
mov
jae
sub
arpl
loope
dec
xchg
and
lods
int3
lret
lods
divb
push
cld
cmp
aaa
mov
cmp
ljmp
out
inc
adc
xchg
xchg
mov
dec
ss
xchg
and
jae
sub
cmp
popf
stos
and
cmpsl
inc
arpl
mov
add
adc
sbb
aad
mov
roll
insb
mulb
mov
loop
fneni(8087
rcl
adc
pushf
sahf
xlat
cld
outsl
popa
push
mov
jns
fwait
btc
inc
ret
movb
out
inc
adc
adc
scas
mov
mov
jae
test
inc
in
cmp
push
aam
or
adc
fcompl
jl
js
add
sub
cwtl
andl
fs
xchg
fs
add
and
xchg
jb
pop
scas
push
imul
outsl
add
repz
cmp
or
lahf
sbb
sub
mov
das
scas
and
sub
or
sbb
test
mov
mov
popf
jno
sbb
xchg
repnz
mov
andb
rorl
insl
repnz
push
sbb
mov
jnp
out
mov
adc
div
adc
hlt
daa
dec
inc
in
and
mov
fmull
cmpsl
push
das
adc
or
mov
jnp
imull
out
jb
inc
jp
xchg
ljmp
call
or
outsl
xor
cmp
adc
outsl
mov
adcl
stos
lret
adc
aas
and
mov
jne
ret
adc
cmpl
aas
pusha
and
aas
stos
inc
mov
insb
sbb
enter
cmp
mov
or
add
pop
inc
mov
popf
test
fcompl
popa
add
xor
stos
jbe
adc
das
out
testl
loop
ret
aaa
out
xchg
sbb
pop
mov
aam
xor
es
add
sub
mov
lret
lods
add
push
mov
xchg
pop
insb
dec
stos
xlat
sbb
sub
out
rclb
outsl
xor
negl
pop
pop
fists
test
cmpsl
aaa
mov
fldt
ja
ss
cli
out
out
mov
cmp
orb
mov
popf
sbb
std
inc
sub
scas
loope
sub
pop
imul
mov
cltd
push
mov
push
inc
cmp
pusha
dec
push
mov
insb
out
lea
das
sbb
add
add
hlt
jg
mov
inc
sbb
dec
mov
enter
out
scas
adc
sbb
push
cmp
sbb
mov
mov
lret
inc
pop
imulb
pop
loope
aad
sti
dec
jmp
data16
xor
dec
cmpsb
cmpsl
lods
and
in
mov
fisubs
frstor
popa
rcrl
outsl
mov
adc
fcmovbe
push
jl
loopne
out
int
pushf
lock
hlt
inc
mov
jae
ss
ficoml
cltd
test
negl
ficompl
dec
gs
addb
mov
out
cs
cmpsb
lahf
stos
stc
in
inc
movsl
mov
cmp
dec
fwait
rcr
push
or
cmpsb
jae
mov
movsl
add
or
fs
mov
mov
in
adc
xorl
pop
mov
sbbl
mov
dec
and
arpl
and
mov
adc
cwtl
jmp
lds
and
push
call
adc
push
insl
stc
arpl
or
or
jnp
mov
stos
sbb
and
fstpt
mov
rorl
or
lock
add
into
cmp
int3
out
lcall
movsl
sbb
pop
test
pop
jbe
pop
call
add
in
inc
cwtl
in
and
jbe
adc
fidivrl
pop
jb
hlt
xlat
mov
and
mov
sbb
mov
lds
insl
dec
cbtw
jae
jno
in
popf
xor
jnp
stc
pushf
enter
inc
push
fiadds
icebp
xchg
movsl
xchg
pop
movsl
fmul
jns
imul
imul
dec
cmp
mov
mov
and
sarl
mov
cmp
cmp
adc
sbb
sti
mov
sub
jae
push
movsl
xchg
call
push
icebp
push
inc
xchg
cmp
cmp
and
pop
xchg
cmpsl
jmp
pop
sbb
cli
mov
push
shll
xor
pop
out
jge
xor
test
and
roll
lret
jmp
cli
xor
push
fdiv
cmp
pusha
jns
and
stos
pop
adc
fcmovnbe
jo
push
iret
sub
cmp
out
psllw
push
dec
mov
pop
fisubs
imul
outsb
shrl
pop
xor
push
mov
sbb
mov
outsb
xchg
insb
cmp
js
movsl
dec
push
xlat
rorl
in
std
push
addr16
into
ret
push
pop
mov
adc
out
dec
add
sub
push
jne
stos
lcall
shlb
jae
cmp
pop
push
sub
adc
dec
sub
aas
inc
add
push
or
ja
mov
nop
adc
aam
adc
xor
icebp
lods
sub
sbb
sbb
lret
out
and
js
or
rclb
cmp
adc
xchg
cmp
ficomps
in
std
cltd
or
jnp
fisttpl
add
fs
callw
ljmp
sbb
sub
mov
xor
in
sbbb
mov
out
rolb
imul
js
int
pop
adc
pop
cli
mov
pop
jl
addb
rorl
adc
cmp
or
in
ja
cltd
cmp
xor
jb
adc
or
jmp
pusha
repnz
dec
lret
test
dec
or
cmp
ja
sbb
push
dec
add
mov
adcb
in
pushf
ljmp
push
push
mov
adc
inc
dec
add
xchg
xchg
push
lea
mov
les
lcall
inc
popa
int3
xchg
xchg
sub
cmpsl
push
and
inc
inc
jmp
addb
movsl
loop
mov
iret
adc
fcoml
cs
and
sub
test
test
mov
push
push
popa
test
aaa
and
mov
ds
push
mov
jge
scas
mov
cmp
mov
pop
sub
pop
in
jge
in
ljmp
mov
push
cmp
xlat
dec
in
lods
sub
mov
aas
into
scas
or
js
scas
arpl
stos
pop
push
mov
xor
inc
or
dec
lods
cmc
in
xor
in
lock
adc
movsl
jmp
cmc
imul
dec
jle
sbb
cmpsb
fs
ret
lods
xor
and
outsl
pop
js
mov
popf
cmc
jns
cs
adc
mov
cmp
jnp
and
xor
xchg
xor
lahf
mov
out
xlat
imul
cmp
push
sub
xchg
fisttps
bound
push
sbb
clc
cmp
lret
pop
int3
movsb
mov
aas
and
es
cmpsl
cmc
dec
push
sub
ja
sbb
sahf
push
and
into
shll
mov
imul
mov
and
mov
mov
dec
das
and
pop
loop
aas
daa
je
and
jp
jmp
and
je
push
pop
dec
mov
dec
lret
dec
push
cltd
shll
call
mov
addr16
cmpsl
pop
sbb
jae
lods
hlt
daa
repnz
sahf
insl
push
ljmp
daa
pop
test
cmpsb
orl
sub
mov
repz
dec
lods
push
clc
sbb
roll
iret
lock
lret
aas
cmpsb
add
je
or
push
mov
adc
cmp
xchg
in
das
cmc
loopne,pt
xlat
inc
sbb
mov
pop
aam
mov
and
lds
in
cltd
or
pusha
sbb
mov
leave
push
pop
in
je
xchg
insb
jl
das
jle
push
stos
push
in
pusha
lcall
mov
mov
sub
jns
push
sarb
iret
sub
xor
jo
cwtl
sub
cmp
xchg
iret
scas
and
xchg
pop
out
pop
add
int3
push
dec
les
cmp
jo
sbb
pushaw
je
daa
cmp
adc
ds
dec
scas
inc
xlat
ljmp
lea
sub
sbb
out
mov
mov
hlt
dec
push
mov
xor
and
fwait
mov
xchg
mov
and
lahf
outsl
pop
cmp
add
dec
test
leave
xchg
xor
mov
fwait
mov
sub
ret
cmp
sub
push
xchg
outsl
push
xor
jg
jg
or
insl
or
lahf
xor
ficoms
xchg
jo
dec
jge
out
xchg
pop
rorl
sub
mov
dec
loope
js
mov
in
mov
dec
jnp
repnz
sbb
and
das
or
dec
push
inc
outsb
jle
in
xor
dec
jecxz
fdiv
sahf
xlat
lea
outsl
jmp
and
cmc
sbb
fists
mov
push
in
leave
xchg
adc
ja
jns
mov
cmp
mov
adc
ret
jb
xor
stos
out
mov
sbb
lea
mov
sub
sahf
mov
leave
roll
mov
cmp
inc
repz
lcall
sahf
cmp
and
aam
negl
outsl
lea
push
imul
ret
mov
je
jbe
add
pusha
es
cmp
lds
fcmovbe
sbb
out
mov
and
ret
jns
add
adc
jb
stc
fimull
rorl
hlt
xchg
or
xchg
jge
adc
ljmp
arpl
popf
mov
mov
cmp
daa
adc
cmp
popf
and
adc
fists
cwtl
pop
sbb
xor
push
pop
ficomps
cmpsl
shrb
inc
jle
add
je
dec
leave
xlat
and
cltd
test
int3
push
jb
pop
push
cli
push
push
pushf
lods
sub
or
fimull
pop
sub
sub
cld
cld
test
lcall
inc
jo
mov
mov
mov
push
fistl
xchg
xor
das
push
out
push
and
mov
dec
lods
lds
xchg
mov
ffree
xchg
scas
mov
sub
jle
stos
cmp
nop
les
or
push
js
lock
xor
and
div
shrl
or
inc
pushf
movsb
out
scas
stos
ja
sbb
mov
shlb
xchg
push
adc
les
jecxz
div
sub
mov
leave
dec
xchg
pop
add
sub
sub
mov
aam
mov
fcoms
incl
pusha
lods
pop
fadd
ja
sub
bswap
das
jo
cmp
mov
mov
xor
xlat
adcb
hlt
pop
scas
add
shr
jmp
movsb
mov
xchg
push
xor
sub
mov
dec
pop
add
inc
out
insl
or
add
repz
jl
xchg
mov
mov
mov
mov
jge
mov
in
lcall
je
cwtl
xor
stos
add
xchg
fs
mov
jne
adc
lret
jns
out
bound
or
pop
mov
push
repnz
lock
or
jle
aad
movhps
in
jmp
xor
repz
imulb
mov
popf
int3
cmp
jns
jge
cmp
mov
lock
jno
jmp
push
lahf
sti
jbe
add
dec
push
adc
addr16
hlt
pop
dec
sbb
jg
out
cmp
inc
jmp
mov
push
insb
adc
aam
push
adc
adc
mull
push
jae
inc
xchg
fsubl
cmp
push
xchg
xor
dec
imul
inc
mov
push
mov
jg
pop
xor
das
adc
mov
idiv
pop
aaa
adc
mov
xchg
jb
cmp
test
jne
dec
js
mov
push
divl
push
adc
push
cmp
xor
xchg
bound
dec
add
or
ljmp
es
out
mov
inc
stos
add
repnz
sub
loopne
adc
daa
push
mov
cs
inc
adc
push
stc
lds
xchg
into
in
fsubr
lock
push
gs
sub
fs
sbbl
jns
mov
sti
inc
lret
dec
popa
daa
pusha
fadd
aaa
outsb
ficoms
nop
jno
push
fnstcw
inc
lods
shl
xchg
dec
lret
adc
pushf
xchg
ds
jo
mov
aad
addr16
cwtl
loopne
xor
mov
push
ljmp
xchg
pop
mov
push
lods
iret
mov
fdivrp
lcall
int3
push
lea
cli
std
xor
mov
popf
roll
stos
lret
inc
rclb
call
not
icebp
or
scas
mov
js
sahf
addr16
xchg
xchg
xchg
adc
pop
cmp
push
pusha
fistpl
bswap
out
adc
pop
out
push
fldcw
out
lret
icebp
rcl
hlt
mov
pop
or
lea
dec
popa
and
pushf
dec
rcrl
pop
insl
test
test
and
add
jns
pop
cs
enter
mov
lahf
sub
pop
lret
mov
mov
jmp
push
or
xor
ror
xor
cmp
push
and
jl
cmp
ja
pop
fadd
out
push
inc
imul
loope
sbb
enter
enter
mov
fs
insb
addl
repz
pop
jne
inc
jno
mov
imul
in
cld
mov
out
mov
cwtl
jp
iret
aad
es
mov
push
fstps
fnclex
push
shl
jp
into
jns
mov
scas
mov
ljmp
sub
leave
in
call
push
cmpsl
in
mov
mov
jge
mov
or
xor
sahf
addr16
xchg
lret
xchg
adc
dec
jge
testl
add
fcoml
jo
dec
pop
pop
cmp
or
popl
ret
imul
dec
push
mov
xchg
or
adc
addr16
les
ja
in
dec
add
jae
inc
xchg
imul
and
lret
jo
xchg
out
test
mov
pop
mov
pop
cmpsl
pop
or
xchg
movsb
lea
adc
js
and
and
scas
sub
dec
into
imul
lds
inc
add
test
jne
insb
adc
push
inc
pop
imul
in
mov
add
lea
sub
pop
push
xlat
xor
outsl
insb
jmp
daa
dec
int
or
sbb
xor
cmpsb
addb
cmc
daa
cwtl
xchg
adc
cmp
loope
rorl
push
out
pop
fildll
shlb
pop
mov
add
call
popa
lret
mov
push
sub
push
fildll
test
cli
pop
cld
mov
arpl
rcll
in
mov
xchg
cmpsl
hlt
push
sub
mov
push
fcmove
ja
loop
and
lods
out
mov
int3
adc
add
mov
rol
push
sbb
inc
rorl
repnz
push
cs
add
push
cmpsb
icebp
xor
pop
jbe
cmp
mov
lret
xchg
test
out
mov
pop
jl
insb
shlb
hlt
jg
mov
mov
insl
addr16
repnz
sub
xchg
xorb
or
loopne
pop
add
jp
jo
adc
adcl
xlat
push
lret
jne
insl
cmp
adc
nop
dec
pushf
jno
mov
pop
dec
inc
je
sbb
mov
inc
insb
lahf
iret
jp
les
jecxz
sbb
fmul
div
inc
subps
adc
outsl
sub
nop
fistpl
movsb
push
jns
into
lret
sahf
lea
pop
cs
and
xchg
inc
inc
ret
aaa
xchg
fucom
or
cmp
or
js
cmp
repnz
push
mov
mov
or
cli
add
and
in
imulb
add
in
or
cmp
xor
mov
mov
mov
cmp
adc
cmp
push
xlat
add
mov
adc
dec
outsl
push
test
push
sub
lds
pop
out
adc
outsb
push
rcll
aam
into
sbb
movsw
inc
aam
into
and
arpl
pushf
sti
inc
movsb
jb
push
loope
ljmp
repnz
mov
sbb
inc
cli
bnd
inc
popw
xchg
lea
fcmovu
xchg
andb
sahf
movsl
jnp
orb
lods
xorb
and
inc
jmp
mov
hlt
fistl
jp
push
or
in
icebp
jo
add
nop
aad
icebp
push
fdivrl
xor
aad
dec
in
pop
jl
inc
fnstenv
fadds
xchg
aad
nop
inc
lret
clc
loopne
out
mov
andl
dec
push
pop
push
push
bound
pop
mov
adc
ffreep
in
scas
out
loopne
add
dec
xchg
or
jge
mov
movsb
push
js
movl
loope
insb
mov
pop
mov
cmp
sub
pop
mov
std
outsl
sbb
mov
jp
xchg
push
outsl
lock
shll
test
movsl
jmp
mov
xchg
and
inc
std
in
imul
cmp
fdivl
and
or
mov
lret
mov
out
jb
pop
repnz
push
sahf
mov
jne
xchg
arpl
fidivrs
daa
scas
push
push
fisttps
mov
and
stos
repnz
jne
adc
ret
dec
push
int3
in
test
lock
xor
sub
xlat
cltd
imul
mov
test
dec
iret
filds
jb
clc
dec
push
or
cmp
lods
outsb
out
call
adc
mov
in
cwtl
dec
jns
jge
dec
fsub
in
pop
xchg
xchg
mov
sahf
dec
faddl
pop
cmp
xchg
clc
pop
inc
mov
jb
repz
dec
ret
std
adc
stos
fwait
mov
inc
dec
out
lahf
sbb
outsl
aaa
sti
jno
jae
lahf
push
ret
fcomip
les
dec
sbb
adc
mov
neg
cltd
fcmovb
repz
ds
xor
cmpsl
fxch
pop
rcrb
inc
dec
jb
scas
lds
ljmp
add
hlt
mov
fnstsw
push
add
mov
mov
push
fnstenv
add
sahf
mov
lock
test
add
outsl
pusha
cmp
loope
and
stos
push
loop
out
dec
sti
and
mov
sub
push
fmulp
jo
push
xchg
push
push
jl
push
dec
ret
clc
lahf
lcall
sarb
negb
sti
jb
lret
mov
cld
inc
xchg
jg
das
push
fiaddl
pop
lods
icebp
andb
add
xor
mov
test
rorb
pop
aaa
mov
dec
imul
adc
mov
sbb
xchg
sarl
fdivrp
xor
fs
mov
inc
leave
mov
adc
rcll
cmp
clc
mov
jns
jb
loope
addr16
dec
pop
and
lods
jmp
and
sub
das
cs
dec
xchg
push
ds
push
popl
cmp
cmp
add
out
adc
push
loope
mov
xor
or
repnz
cmc
sbbl
mov
push
adc
cli
and
je
jmp
inc
aam
pop
mov
orl
enter
sub
mov
xchg
xchg
in
xchg
dec
addr16
pop
push
out
in
stos
mov
lods
sub
push
fdivrs
sbb
mov
addr16
loope
push
in
cmpsb
dec
mov
dec
aaa
mov
push
sub
xor
adc
mov
ret
adcb
repnz
out
out
push
mov
divps
or
pop
je
ds
pusha
xor
xor
mov
and
dec
popa
pop
nop
gs
pusha
enter
popa
pop
imull
in
xor
movsb
mov
sarb
sbb
sbb
jp
mov
jno
dec
xchg
cmp
mov
imul
pop
loope
repz
jmp
push
dec
push
xor
mov
lea
sub
mov
mov
inc
dec
pushf
mov
add
sahf
test
push
push
sub
ss
repz
jge
fcomp
pop
sbb
stos
aaa
cwtl
ljmp
sub
test
pop
dec
fisttpl
repz
shrl
jg
repnz
xchg
push
popf
loopne
jmp
data16
mov
int
ficoms
add
pop
sbb
subb
inc
adc
ljmp
popa
jb
dec
pop
pop
xchg
loopne
jp
test
push
push
xlat
and
loop
cwtl
sub
sub
adc
inc
jb
loop
fs
in
sub
lcall
pusha
or
sbb
cmp
push
pop
lods
jbe
cli
xchg
pop
pop
scas
gs
inc
mov
inc
int3
clc
lret
and
ss
pushf
jno
in
or
clc
mov
xchg
movsl
sti
js
test
adc
xchg
xor
adc
aad
test
out
cwtl
sub
outsl
and
jns
pop
cmp
cmpsb
inc
cli
iret
add
sbb
adc
mov
jo
push
push
mov
mov
mov
sbb
fisubrs
push
into
sub
stos
call
dec
adc
mov
mov
xchg
lea
dec
jp
mov
aaa
mov
mov
mov
pushf
loopne
aam
or
pop
cld
sub
push
rcl
pop
mov
xchg
xchg
mov
aaa
mov
cltd
repz
dec
dec
lods
lods
daa
push
xchg
das
int
xchg
into
leave
sti
sti
fistpl
subb
enter
sahf
stc
jae
inc
jnp
push
jns
xchg
aad
adc
fdivs
fidivs
sbb
push
repz
adcb
sbb
scas
cmp
and
lret
sub
jl
and
neg
out
mov
or
sub
adc
pop
or
or
stos
mov
repnz
mov
mov
cltd
sbbl
push
inc
adc
lret
or
sub
les
sti
push
dec
push
push
mov
iret
lds
jp
or
flds
dec
add
in
inc
pop
xchg
mov
lret
movsl
sub
mov
sub
add
inc
cmp
out
out
fidivl
inc
sub
in
dec
jl
orl
mov
scas
dec
cs
push
stos
fsubrl
jb
fmul
pop
adc
push
mov
test
mov
and
loopne
adc
outsb
or
mov
xor
mov
and
test
je
js
inc
pop
and
dec
or
mov
popf
pop
and
add
inc
lods
js
mov
mov
sub
fwait
outsb
xchg
adc
add
adc
push
pop
aas
pop
sbb
mov
add
xchg
and
sbb
adc
jae
xor
pop
ja
js
in
xchg
pop
or
andb
pop
dec
push
add
push
sarl
or
cli
divl
pop
out
jb
dec
lcall
dec
stos
add
inc
xor
mov
lret
lock
push
mov
add
mov
imul
stos
mov
subb
jns
or
clc
subb
in
push
je
jno
pop
cmp
aad
jle
inc
jbe
dec
fstpt
insl
mov
sbb
xchg
outsb
insb
sbb
jne
inc
js
cmpsb
sub
scas
and
fs
xchg
add
push
adc
outsb
fidivrl
sub
psllq
sub
femms
adc
lods
clc
jae
jmp
push
xchg
shl
jl
sahf
jmp
pop
push
pop
and
mov
sub
or
inc
dec
movsb
cwtl
jnp
adc
cmpsl
fcmovnu
movsl
in
xor
pop
xlat
movsb
nop
out
outsl
cwtl
pop
int
es
xor
mov
ljmp
shll
testb
es
sbb
push
cmc
push
mov
lea
jb
int
fdiv
fcmove
aas
sub
out
ds
cmp
lcall
test
xor
push
cmp
dec
fidivl
movsl
pop
stos
push
mov
inc
push
cmp
adc
popf
out
dec
aam
jge
or
rcrb
jb
push
mov
test
jge
sbb
mov
pushf
sub
dec
push
push
dec
aas
adc
lds
sti
sarl
push
and
sub
jecxz
mov
push
jo
loop
mov
stc
jle
out
fldcw
mov
repz
mov
adc
sub
push
mov
leave
and
dec
push
pop
jo
movsl
mov
xchg
mov
int3
in
ds
xor
and
fstl
gs
sbb
stos
ret
mov
sub
test
jnp
int
inc
cmp
ja
lret
push
jge
and
daa
mov
jbe
add
inc
roll
lods
pushf
sub
sub
jmp
xchg
or
jbe
push
jb
push
jmp
aas
sbb
mov
mov
outsb
aam
ss
shlb
xchg
mov
test
clc
mov
jnp
cmp
add
mov
push
fldt
adc
test
fs
leave
mov
mov
pop
sub
cmpsl
sbb
jle
or
fpatan
mov
or
add
inc
xchg
lret
ss
pop
jns
out
inc
jmp
adc
xlat
pop
mov
jecxz
mov
jb
mov
or
stc
pop
or
and
outsl
dec
fisttpl
sbb
mov
cld
jecxz
pusha
outsb
pusha
xor
filds
hlt
sti
lret
mov
fxam
mov
dec
adc
xor
sub
add
adc
jnp
cmp
or
and
orl
mov
lret
push
push
push
inc
sahf
fwait
idivl
ljmp
add
xlat
in
into
jnp
out
rorb
sub
punpcklwd
pop
xchg
cmp
jb
xlat
mov
adc
movl
xchg
bound
xchg
dec
ljmp
fcoms
inc
pop
imul
int3
adc
cmp
mov
arpl
mov
pop
jne
jg
and
cmpsl
jmp
sub
mov
mov
push
cmp
mov
les
adc
add
pop
mov
push
insl
adc
mov
test
and
or
das
jnp
test
dec
mov
push
jp
shl
insb
mov
aam
jns
repnz
sbb
dec
cld
pop
cmp
nop
and
cmp
mov
push
jnp
mov
ss
jp
mov
and
movsb
sub
pop
mov
pop
add
add
cmp
mov
repnz
pop
adc
mov
outsl
dec
xor
int3
jbe
test
cmp
cwtl
push
jns
push
push
push
mov
enter
fnsave
sahf
out
aad
jmp
cmp
cld
stos
js
sbb
test
ss
dec
cmpb
jb
iret
add
sbb
pop
lret
aam
daa
dec
jecxz
mov
rcrb
pop
cmp
shrl
mov
shrl
xchg
dec
out
inc
shll
notrack
adc
fsubs
shlb
fs
mov
or
fcmovu
push
test
or
mov
xchg
mov
push
fstpl
dec
and
mov
arpl
add
add
jno
jp
lret
jb
xor
jnp
shufps
stos
xor
dec
lahf
inc
dec
jl
jbe
push
addb
sbb
fistps
mov
andl
movsl
add
fnstsw
cmp
aad
mov
jmp
cmpsb
xorl
pop
sub
sub
mov
mov
mov
xchg
sti
cwtl
xor
mov
pop
mov
imul
scas
mov
push
push
mov
cmovl
repz
dec
xlat
adc
push
mov
sbb
push
dec
add
mov
xor
adc
cli
sub
pop
cli
xor
out
mov
insl
dec
pop
adc
add
leave
mov
xchg
sub
bound
push
mov
fdivs
fbstp
out
cmp
jmp
jmp
jge
mov
sub
fwait
jne
and
aaa
test
mov
xchg
cmp
cmp
jo
jmp
addr16
movsb
call
and
call
out
cmp
arpl
or
cld
push
cltd
dec
fbld
repnz
fsubl
outsb
mov
cmp
ret
adc
mov
mov
lret
cli
push
aas
xlat
push
je
mov
lcall
stc
pusha
adcb
scas
adc
test
leave
leave
dec
popa
ljmp
push
fstpl
call
pop
adc
and
push
pop
inc
shll
fstps
lods
int3
div
rolb
jg
fsubl
dec
mov
inc
ja
testb
addl
and
insl
out
xchg
push
lret
rcrl
xabort
cmpsb
ficomps
les
js
xor
xchg
xor
pop
push
jl
pop
mov
mov
mov
nop
std
test
pop
call
movsb
test
mulb
fstpl
cltd
sub
mov
inc
add
pcmpgtw
setp
sub
cltd
jae
lods
int
or
out
or
jg
pop
jp
push
sbb
dec
push
cmc
loop
or
mov
ret
dec
incb
test
mov
xorl
jnp
xor
and
push
or
test
mov
mov
pop
jge
lods
cmp
or
add
mov
out
lods
out
or
jle
fdivr
inc
or
fisubrs
or
ljmp
sbb
dec
cli
inc
mov
je
jge
jmp
push
aam
cltd
clc
out
mov
sbb
imul
lock
loop
add
stos
sbb
sbb
cltd
jne
lret
dec
cld
cmpsb
mov
lahf
xchg
call
and
ljmp
lods
adc
aaa
nop
aaa
push
ss
addr16
mov
ret
ja
xor
test
xor
in
lds
int
inc
push
mov
inc
outsl
jp
int3
mov
jecxz
mov
mov
js
test
adc
sbb
xlat
push
clc
sub
push
jae
repnz
cmp
sbb
adc
mov
sub
outsl
aam
inc
add
sbb
adc
aas
sbb
out
inc
scas
and
cmp
cmpsl
and
jne
and
rorb
cld
or
lahf
lahf
xchg
xchg
pushw
mov
mov
jo
test
loope
insb
pushf
add
fsubrs
sbb
notl
cli
inc
push
push
fsubrs
push
in
mov
sbb
sbb
ss
mov
sub
ja
xchg
cmp
aas
sbb
mov
cs
cwtl
push
mov
pusha
dec
jno
push
adc
mov
push
int
sbb
aad
cmp
cmp
in
or
scas
mov
out
mov
jmp
test
push
fistpll
outsb
js
dec
jbe
insl
cli
jp
adcb
jmp
mov
imul
int3
xor
fldcw
push
and
or
loop
int
jns
jmp
mov
pop
lret
jmp
mov
pop
fcmovne
bound
outsl
hlt
push
dec
mov
icebp
dec
inc
iret
stc
cmp
call
push
sahf
sub
sub
push
cwtl
fisttps
mov
xlat
mov
inc
pop
je
inc
jb
leave
pop
cmp
repz
pushl
icebp
jnp
xchg
mov
imul
int
mov
test
daa
mov
sbb
mov
test
mov
add
setne
sbb
in
or
dec
sub
ljmp
mov
pop
daa
mov
mov
stc
and
cmpsb
mov
push
out
jb
nop
adc
dec
ja
ds
lea
stos
mov
cli
mov
xor
pop
jecxz
jmp
js
cmp
cli
fsubrp
mov
andb
inc
or
not
mov
inc
and
jle
or
out
mov
cmp
inc
and
xor
jmp
jae
jne
stc
push
pop
cli
jb
lds
scas
data16
gs
insb
mov
push
mov
sarl
sbbl
fcoml
sarl
cli
cmc
xchg
int
idivl
xchg
jmp
arpl
out
add
daa
shlb
or
ficompl
jae
fisubl
add
sti
popa
jno,pn
push
or
cld
rcll
lcall
xchg
std
pmuludq
fnstsw
pop
ds
repnz
in
mov
test
test
add
mov
adc
das
jmp
mov
int3
inc
push
and
inc
jnp
push
loope
mov
jp
nop
jge
jge
jg
clc
arpl
adc
call
mov
push
loope
xor
out
in
mov
cld
push
nop
jno
popa
sub
insb
xor
movsl
mov
add
inc
mov
or
push
push
dec
jge
or
mov
ljmp
dec
fwait
jg
fcmovne
test
inc
or
nop
dec
shl
movsl
sbb
nop
ret
bound
pop
in
lods
mov
shll
data16
into
push
adc
mov
mov
xchg
je
mov
inc
cli
add
sub
mov
js
fcompl
push
and
push
insl
xchg
pop
test
movsl
gs
and
push
imul
sub
adc
adc
dec
cmc
jns
cmp
sub
movsb
aaa
cmp
push
stos
out
cs
test
stc
cltd
roll
lea
pop
inc
sarl
mov
cmp
mov
pusha
test
aad
xor
lock
sbb
push
out
lret
xor
int
aam
cltd
stos
sub
ja
xor
fs
outsl
js
dec
mov
mov
and
inc
jp
ljmp
std
dec
lods
xchg
scas
mov
or
sbb
shrb
clc
inc
and
ss
clc
fstpt
mov
jae,pt
lods
xor
or
sbb
fidivrs
mov
cmc
jle
or
daa
test
jne
add
fwait
mov
bound
adc
out
ja
jnp
lcall
adc
xchg
idivl
lret
mov
jnp
xchg
mov
js
inc
in
xorl
xchg
push
adc
pop
out
mov
push
adc
subb
std
sbb
lds
pop
xchg
pop
scas
fdivs
cmp
mov
pop
push
sbb
into
out
and
push
xor
sub
int
stc
arpl
ret
divb
divb
adc
fstpl
stos
test
es
mov
in
jp
addr16
fwait
xchg
test
rclb
cmpsl
loope
shrl
dec
rol
push
loope
mov
test
cmp
and
shlb
jge
mov
sub
les
ss
and
jae
and
xchg
jl
mov
pop
rcr
hlt
loope
mov
lods
nop
iret
enter
mov
sub
stos
mov
out
out
mov
cmpb
loope
scas
inc
and
pop
loopne
cmp
pop
mov
nop
pop
push
fsubp
jne
bound
stc
xchg
mov
adc
dec
pop
add
subl
ret
adc
ret
aas
cld
inc
add
call
cli
push
aam
cwtl
pop
lea
add
lcall
ficompl
pop
or
scas
out
mov
das
sti
stos
mov
inc
inc
pop
in
add
sub
lods
stos
out
jae
es
enter
enter
imull
push
and
pop
popf
inc
aam
adc
leave
adc
sbb
push
daa
jae
movsb
dec
loope
arpl
in
pushf
cld
sbb
or
pushf
cmc
pop
cmc
cmp
inc
mov
shlb
and
test
xlat
jae
inc
or
jp
pushf
pusha
rol
jo
add
gs
insb
aaa
cli
loopne
jno
les
ds
and
stos
lea
int3
shrl
jbe
out
xchg
mov
insl
or
push
jmp
dec
sbb
popf
mov
adc
sti
lods
shl
inc
push
test
mov
hlt
popa
sbb
xor
jl
and
sub
cmp
cmp
setl
sbb
fstps
push
int3
mov
scas
ret
lods
imul
adc
or
pop
es
jno
stos
pop
dec
mov
sbb
xchg
lret
mov
jns
xchg
mov
cmpsl
aaa
sub
test
xchg
imul
movsl
arpl
xchg
adc
fadds
lods
cmp
mov
xor
xlat
xchg
or
sahf
cmp
aad
mov
loopne
push
mov
arpl
in
cmp
mov
xchg
mov
loop
aad
adc
fdiv
mov
fsubl
xorb
sbb
add
or
push
xor
mov
lahf
enter
test
adc
out
data16
xor
rol
loop
dec
sbb
xlat
pop
cmp
push
test
push
in
xor
cmp
scas
sub
std
mov
fisubs
pop
insl
mov
or
hlt
xor
out
mov
mov
dec
xchg
stos
push
js
cwtl
imul
scas
int3
and
leave
sahf
xchg
das
lcall
push
cmp
hlt
hlt
repnz
ficoms
cmpsb
js
shl
xor
mov
sbb
out
lret
out
push
jmp
dec
adc
fldl
jecxz
xlat
pop
inc
ljmp
into
xlat
aam
xor
and
mov
negb
fsubl
mov
jnp
push
add
sbb
pop
xchg
dec
test
jns
jle
sbb
cmpsb
inc
push
cwtl
pop
push
std
clc
push
dec
sbb
inc
test
cmc
xor
enter
sub
jmp
lcall
xchg
mov
gs
xor
mov
bound
jge
clc
add
je
popa
test
ret
xor
arpl
mov
mov
rol
mov
lock
and
xchg
repz
fldt
sbb
int
xchg
mov
ds
or
sbb
sub
addr16
mov
sbb
jecxz
icebp
stc
add
cmp
enter
xchg
ret
pop
mov
push
push
scas
std
adc
out
mov
in
pop
sbb
xorb
stos
xor
xchg
ret
fistpl
ds
fadds
mov
imul
outsl
cmp
push
sub
aas
xchg
andl
jmp
push
loope
aaa
out
int
int
sahf
aas
jle
in
clc
mov
mov
inc
or
mov
and
shrl
jl
jecxz
or
inc
add
inc
jmp
push
sub
xlat
lods
push
fldcw
and
insb
sub
sahf
inc
int3
sub
testl
sbbl
adcb
lds
dec
jae
out
rcrl
in
aas
sbb
mov
arpl
loope
psubusw
sbb
loop
xor
incb
mov
xchg
jp
sbb
int3
adc
fwait
in
inc
imul
lods
xchg
push
xchg
dec
push
out
jbe
mov
stc
mov
out
lret
cmp
cmc
das
or
mov
or
cmpsl
mov
cmp
push
dec
ds
pop
xchg
adc
stos
inc
dec
test
sar
mov
fldcw
in
sbb
out
outsb
push
imul
jl
xor
xor
fisttpl
mov
or
inc
mov
or
inc
push
pusha
leave
lret
jno
jno
jb
aam
xchg
or
or
fcoml
in
xlat
pop
sub
lea
pop
stos
push
push
js
pop
cli
mul
pop
xor
or
fimull
mov
test
push
ljmp
ss
mov
outsb
fldl
lret
xchg
stos
rcll
and
cmp
xchg
in
jno
movsb
jecxz
push
jmp
xchg
bound
lds
mov
test
xorl
icebp
negl
mov
dec
in
inc
jg
pusha
int3
mov
inc
lea
into
or
scas
and
jp
push
test
push
pusha
mov
pop
clc
leave
push
lods
int
xor
loop
lock
and
flds
rcrl
push
adc
inc
push
mov
jo
mov
out
fs
push
cmp
insl
data16
mov
cmp
cmp
mov
xchg
jne
pop
insl
lods
dec
mov
repz
xor
and
gs
inc
fnstsw
mov
call
test
cli
sbb
ljmp
xor
shl
aaa
mov
out
cwtl
fmulp
jb
filds
and
push
aaa
scas
dec
bound
jg,pn
fsubs
mulb
outsl
sahf
or
iret
mov
or
cmpsb
mov
out
xchg
ret
test
push
inc
inc
adc
fidivrl
ja
fcoml
int
sbb
sub
adc
and
add
mov
movsl
mov
scas
push
stc
je
push
sbb
mov
rclb
fistpl
test
insl
movl
maskmovq
imull
repz
inc
dec
pop
adc
inc
repz
cmp
jns
inc
fs
testl
lahf
or
stos
sub
aaa
cmpsl
movsb
les
sarl
hlt
jb
hlt
jmp
fisubl
nop
in
sbb
movsb
in
pop
xor
jnp
sub
cmc
test
pusha
fsubs
repnz
cmp
ret
adc
addb
dec
enter
rcll
jl
add
int3
in
outsl
pushf
inc
add
jnp
ret
sub
std
test
sub
or
sbb
in
cwtl
addr16
xor
add
pop
or
enter
mov
int3
mov
or
aad
sub
repnz
sub
fwait
pop
cs
mov
arpl
imul
imul
jb
add
call
xor
mov
mov
aam
jl
and
mov
popf
and
addr16
test
jecxz
adc
ds
jl
out
test
push
jle
mov
test
cmc
ja
mov
pop
push
mov
add
movsl
xor
mov
adc
lock
mov
mov
lret
inc
and
cmp
mov
std
lea
out
out
cmc
pusha
leave
inc
clc
fimuls
sub
adc
xchg
popa
inc
ret
scas
inc
andl
out
jb
dec
push
lret
mov
adc
xor
xor
daa
xlat
idivb
xorl
xchg
mov
mov
ret
or
xchg
add
fwait
shlb
lock
dec
sbb
ret
mov
jp
repnz
test
dec
mov
icebp
loop
ret
mov
out
jg
sub
inc
jbe
push
shll
and
pop
cmp
jl
add
and
rcl
popa
imul
mov
inc
push
scas
hlt
call
pusha
pushl
mov
xchg
and
aaa
push
ret
leave
fsubrl
mov
sbb
leave
loopne
test
je
in
xchg
ffree
cmpb
push
rorl
movsb
pop
mov
bound
test
pushf
test
shll
xchg
sbb
outsl
jg
cli
or
arpl
mov
sar
popf
gs
repnz
int3
insl
and
out
das
inc
fwait
outsb
les
pop
or
xor
lret
movsl
push
push
push
addb
mov
cs
adc
shll
sbb
push
aas
jns
mov
dec
insb
sub
iret
scas
in
mov
sub
inc
jge
xchg
cltd
dec
mov
mov
xor
inc
push
repnz
loope
fmuls
jne
lahf
xor
testb
push
inc
pop
cmpsb
mov
aad
pop
push
jmp
je
jns
mov
adc
movsb
push
xor
fcoml
cmp
loop
mov
ret
pop
adc
loopne
xacquire
les
into
push
add
scas
ljmp
mov
sub
lret
xchg
jo
sbb
push
jp
cmp
cmp
push
or
xor
sbb
xorb
and
push
imull
mov
loop
dec
dec
lea
sahf
pop
push
shrb
mov
mov
notl
pop
adc
pop
fcoml
and
or
outsl
xlat
enter
xorb
mov
sub
cmp
jbe
insb
xor
dec
loopne
pop
lret
sub
jns
ficoml
sub
pusha
fcompl
icebp
ret
dec
enter
cmpsb
jns
scas
add
cmp
jge
xchg
shrb
or
and
xor
pop
sbb
jge
adc
mov
aas
mov
pop
push
sbb
add
mov
pusha
out
push
js
jns
loope
test
xchg
in
popf
adc
fildll
mov
getsec
pop
xlat
aam
stos
adc
loope
lods
ss
add
loope
and
pop
das
jg
mov
rcrl
aas
loopne
imul
in
pop
adc
shrl
cwtl
push
das
icebp
mov
clc
push
push
adc
outsl
cmp
and
cmp
icebp
vpermil2pd
add
notb
or
stc
pop
pop
lcall
mov
xor
push
sbb
sub
test
ja
dec
imul
push
cli
pop
mov
imul
jbe
les
hlt
or
pop
and
add
fbld
movsb
addl
mov
push
xor
shrb
cmpsb
movsl
int3
or
roll
imul
daa
mov
xor
jbe
pmaxub
stc
mov
out
push
lret
dec
mov
divb
pop
jle
adc
mov
cmp
lock
adc
iret
icebp
xor
int3
fcmovnu
adc
or
arpl
mov
mov
push
jmp
lods
push
pop
sub
frstor
mov
or
and
sub
ds
out
sbb
aas
xorb
imul
imul
pop
into
es
and
xchg
jne
lods
push
out
aad
int
jo
enter
cmpl
movsl
inc
xor
mov
push
xchg
xlat
pop
fisttpl
repnz
insl
push
sub
in
shlb
jl
jl
iret
sbb
adc
sbb
lds
test
pop
dec
aaa
lcall
xorl
xchg
add
lds
sub
cmp
out
adc
out
fcmovnb
push
add
mov
mull
push
xor
sahf
aaa
ja
mov
shrb
mov
pop
jne
ja
int
xchg
xchg
ja
sub
mov
stos
mov
fndisi(8087
data16
pop
stos
inc
push
pop
cli
jbe
enter
mov
cmp
push
out
test
out
fldt
outsl
xor
adc
into
jp
out
addr16
bswap
jns
xchg
push
lahf
test
xchg
mov
test
push
mov
dec
pop
and
movsb
dec
cs
cwtl
mov
andl
dec
dec
test
icebp
out
dec
stc
mov
cli
mov
xor
xchg
sbbl
ljmp
les
push
or
ds
jne
cmpsl
pop
pushf
out
jl
out
xchg
sbb
xchg
test
inc
push
sbb
jbe
fdivrs
xchg
pop
jle
mov
popf
or
sbb
xchg
inc
aas
push
cmp
in
inc
push
inc
inc
xchg
fs
cmp
iret
push
lret
pop
push
push
movsl
out
add
and
sub
imul
or
test
or
jecxz
loop
dec
lahf
pusha
dec
lret
dec
and
movsl
jae
cmpsl
inc
shlb
adc
mov
pop
int
xchg
loope
fisttpll
mov
lea
lahf
imul
sbb
in
mov
sbb
and
stos
xor
in
xor
stos
jae
adc
iret
mov
inc
les
int3
or
test
mov
shll
lret
fistps
jecxz
je
repnz
lcall
xor
into
jmp
nop
mov
out
lock
popf
cmp
icebp
shlb
xchg
sti
stc
aaa
inc
cmp
cmp
repz
aad
xchg
andb
in
scas
fists
sbbb
jge
sub
nop
shrl
inc
xchg
iret
dec
xlat
stc
push
shlb
push
stos
rcrb
repz
push
or
fldt
pop
test
sub
rcrb
xlat
xlat
ret
int
mov
jl
mov
or
adc
das
lcall
add
adc
stos
add
cmp
inc
xor
and
push
sub
push
mov
jo
sahf
xor
in
fidivrs
cmp
mov
iret
xor
lds
pop
shlb
jno
inc
push
outsb
js
jo
xlat
add
mov
data16
mov
mov
lods
adc
mov
jne
jne
nop
cltd
pop
mov
jb
dec
mov
sub
je
mov
aaa
or
out
out
enter
xchg
fisttpll
hlt
sti
xchg
frstor
popa
scas
mov
imul
xor
aaa
push
lcall
add
xor
nop
dec
ljmp
gs
push
shll
xchg
mov
jmp
mov
arpl
daa
sbb
out
movsb
xchg
push
dec
mov
aad
pusha
dec
shll
cmp
adc
or
rorb
mov
mov
sub
js
arpl
lock
or
faddl
out
das
repz
mov
scas
mov
cmp
pop
imul
sarb
add
add
inc
cltd
stc
jmp
cmp
inc
aad
mov
mov
out
in
andl
jmp
mov
stc
outsb
sub
clc
in
mov
or
pop
es
xchg
sub
adc
sbb
loopne
mov
add
mov
or
push
popa
cli
pop
xchg
loopne
push
push
or
popa
dec
jp
xor
cmp
fldenv
xorl
lock
add
enter
call
fnstenv
lret
mov
cs
sbb
mov
sbb
push
in
push
mov
scas
test
addr16
mov
sbb
mov
stos
popf
incb
roll
xchg
lock
or
and
loop
notb
or
mov
adc
jmp
imul
xor
mov
adc
cmp
mov
das
rcll
arpl
add
xlat
mov
pop
lods
mov
mov
jg
bound
sti
inc
add
push
xchg
cs
popf
xchg
pop
cmc
push
std
hlt
mov
lods
adc
xchg
pop
dec
test
fcmovnbe
cmp
mov
in
test
mov
fmull
sbb
out
pop
xor
inc
pop
push
aad
jle
lea
lods
stos
dec
cwtl
repnz
cmp
int3
sbb
push
test
je
add
pop
xor
mov
rcll
pop
xor
cwtl
dec
sub
mov
les
clc
bound
push
jo
mov
in
les
add
jae
sub
and
xchg
inc
cwtl
lahf
ret
lahf
fldcw
fwait
cmp
aas
inc
lahf
pop
lods
sbb
insb
stos
repnz
test
mov
setae
pop
scas
mov
aam
imul
lea
lahf
test
inc
scas
mov
dec
mov
mov
shlb
push
or
lock
das
movsb
pop
mov
push
or
pop
stc
inc
mov
push
pop
sti
enter
jnp
fcmovnb
inc
jle
mov
push
add
in
aaa
adc
in
mov
mov
mov
adc
es
cmpsl
pop
jp
cli
sbb
getsec
andl
flds
je
dec
dec
mov
inc
sub
or
out
mov
sub
pop
adc
or
lret
sahf
lea
pop
repz
inc
pusha
add
sub
aad
pop
mov
daa
and
orl
in
addr16
in
sub
push
mov
repnz
jle
and
mov
cmp
movsb
mov
sbb
jg
fwait
xor
scas
xor
mov
daa
stos
jo
xchg
mov
jae
push
adc
out
int
cltd
loopne
adc
lret
out
pop
scas
out
lods
pusha
cmp
mov
fiadds
add
xlat
xchg
movsl
xor
sub
fidivrl
push
lcall
inc
enter
addb
into
lret
leave
addr16
jmp
stos
popa
cli
sub
adc
in
mov
mov
pusha
pop
imul
faddl
mov
jno
outsl
jg
add
lcall
ret
push
cmpsb
jns
cs
je
adc
sbb
push
imul
div
sub
sti
lock
add
pop
xor
incb
push
cli
lret
fidivs
orl
mov
ss
cltd
mov
lcall
mov
xchg
sahf
imul
insb
out
xchg
sbb
adc
outsb
lret
xchg
jmp
xchg
lea
lahf
add
mov
jo
js
call
cmp
insb
adc
sub
inc
loopne
repnz
out
or
fwait
xor
cmc
push
jae
stos
adc
cmp
int
jg
rcll
sub
clc
mov
pop
data16
adc
adc
sub
and
push
pop
aad
aaa
pop
jne
addr16
and
xor
mov
mov
shlb
and
shr
inc
loope
sub
out
lahf
mov
mov
xor
mov
or
lods
mov
sub
int
ficoms
loopne
pop
shll
out
or
mov
xor
gs
pop
mov
push
mov
movsl
leave
xchg
decb
inc
bound
xorl
sti
lahf
cli
mov
mov
ss
xlat
mov
adc
pop
pushf
fdivrl
push
and
mov
mov
fdivrl
out
data16
cmp
dec
pusha
in
jne
out
jbe
fsubrp
xchg
lods
mov
jmp
jmp
loopne
mov
xchg
test
dec
outsl
dec
push
stc
pop
and
or
pop
mov
arpl
fcompl
shlb
push
sub
pop
xchg
sub
mov
mov
xchg
lods
and
sub
stc
xor
adc
mov
pop
cmp
dec
sub
add
pop
xchg
std
pop
push
ja
aad
xchg
clc
fnsave
adc
push
js
je
push
iret
jl
mov
push
add
dec
aaa
xchg
movsb
imul
jle
in
les
dec
insl
pop
cmp
mov
jb
xchg
xchg
or
scas
ja
movsl
sbb
adc
cmpsl
push
push
dec
jns
hlt
loopne
mov
and
pop
leave
lret
jns
leave
jnp
daa
cwtl
push
cmpsl
sahf
sahf
scas
idivb
mov
mov
inc
sbb
popf
loope
cmpsb
bound
cmpsb
mov
ja
shrl
pop
xchg
jecxz
andl
cli
repz
inc
xor
sbb
mov
jp
dec
xchg
sahf
dec
cmc
mov
dec
add
lahf
sbb
xor
shll
repz
or
stos
jge
dec
sub
xor
ljmp
push
push
sbb
mov
insb
mov
sub
adc
inc
fstps
in
mov
decb
hlt
adc
or
lea
add
pusha
or
mov
pop
lods
jbe
add
les
dec
push
shrb
pop
adc
cmp
addb
pop
shlb
jl
jle
mov
sbb
mov
push
in
lods
stos
mov
lods
xor
fistpll
xchg
bound
dec
xchg
add
fnsave
jg
mov
out
std
or
xor
mov
not
std
jmp
mov
test
mov
add
ret
xor
jns
mov
mov
and
push
and
mov
into
iret
bound
add
push
xor
mov
sbb
subb
les
in
out
mulb
mov
jp
and
sbb
pop
into
mov
popf
xchg
add
iret
sub
mov
xor
jg
out
dec
push
cltd
cmp
jp
lock
mov
punpcklbw
cmp
xchg
and
inc
mov
ja
or
lahf
aas
sub
push
pop
cmpl
testl
gs
arpl
test
sbb
stos
xor
addr16
insb
das
add
js
mov
pusha
sub
movsb
adc
sbb
rorb
push
sbb
pop
dec
sub
sti
in
mov
cmp
push
dec
sbb
test
lods
test
test
stos
xlat
adc
shll
mov
xor
cs
into
inc
dec
push
inc
je
inc
popa
jmp
insb
mov
les
push
pop
add
das
dec
rclb
sub
adc
mov
push
loop
jae
into
and
das
clc
fildl
fadds
adc
int3
dec
xchg
jnp
movsb
mov
call
inc
and
xchg
jle
fisubrs
push
aad
roll
inc
inc
jp
cmp
popf
call
call
mov
mov
int3
scas
imul
jns
enter
pusha
mov
cltd
scas
test
mov
push
fnsave
jne
jo
aas
xor
mov
sub
adc
int3
gs
mov
stos
push
sub
push
testl
sub
mov
inc
mov
push
sub
mov
outsb
xor
jnp
pop
stos
call
loop
dec
push
clc
cmp
mov
xchg
push
dec
jge
pop
inc
in
addr16
mov
xchg
loopne
fs
mov
xchg
loopne
pop
push
dec
lds
les
scas
inc
cmpsl
mov
mov
sub
jp
idivl
jo
push
fnstenv
cltd
test
fiadds
cmp
outsb
cmpsb
jo
dec
call
pop
jne
add
cli
add
insb
setg
and
sub
adc
rorl
dec
xor
jmp
cmp
dec
pop
jno
lea
jnp
pop
std
rolb
add
mov
popa
imul
mov
ds
scas
push
test
jp
sub
aam
cmp
jne
adc
mulb
lret
in
push
aam
mov
xchg
mov
jbe
lock
or
insl
movsl
or
cwtl
dec
hlt
aam
inc
or
cltd
adc
fsubrl
test
jnp
std
pop
mov
cmp
hlt
ficoml
jae
push
mov
lcall
pop
pop
ljmp
mov
jnp
add
lret
repz
outsb
pop
jno
mov
adc
or
ljmp
fwait
mov
int3
out
cmp
pop
mov
addr16
xor
out
push
out
fstl
cmp
rcl
adc
xor
jge
fwait
push
sub
sahf
cmc
cs
jl
lcall
dec
mov
xor
pop
mov
outsl
flds
dec
add
push
fiadds
mov
or
xor
lods
pop
dec
mov
int3
dec
aam
mov
mov
fadd
js
mov
inc
cli
mov
pop
aas
xchg
cmp
fadds
mov
add
push
nop
cmp
mov
and
add
sub
cwtl
dec
and
mov
repnz
inc
jge
addr16
mov
sbb
ja
jmp
xor
inc
sbb
js
sbb
scas
imul
mov
and
fmuls
pop
fs
pop
push
mov
inc
xchg
movsb
imul
bound
scas
mov
ja
js
rcl
and
stos
xor
push
mov
int3
sbb
xchg
std
push
sbb
jb
rcr
sbb
xchg
shll
xchg
xor
loopne
push
leave
test
test
adc
ret
cmp
in
or
or
pop
add
push
out
outsb
cmp
mov
in
add
outsl
xor
in
addr16
es
int3
sub
sbb
loopne
inc
xchg
imul
cltd
push
or
pop
jge
ss
mov
dec
cltd
mov
rcll
mov
add
cs
pop
test
imul
imul
mov
loop
jg
enter
ljmp
xlat
inc
rorb
xchg
mov
dec
add
out
push
dec
in
loopne
mov
shll
loop
xchg
hlt
shlb
sti
rep
aas
cmp
xor
movsb
pusha
sub
push
or
out
andb
stos
or
lret
lcall
clc
stos
lret
jle
push
mov
pusha
inc
xchg
cmc
jecxz
test
sti
lcall
aam
fwait
jo
push
ss
jg
sbbl
negl
inc
xchg
nop
or
xchg
sbb
and
lret
test
sub
cmp
push
sti
rorl
xchg
test
mov
sahf
aaa
xor
push
scas
test
outsl
gs
movlps
mov
pusha
das
push
ret
add
ret
inc
arpl
mov
sub
js
leave
xor
and
and
pop
push
inc
adc
movsl
push
sbb
test
inc
idivl
xchg
faddl
sub
pop
aaa
aas
fidivrs
enter
jmp
push
jb
rcrl
les
scas
mov
mov
cmpsb
cmc
popf
cld
scas
iret
cmpsb
fucomp
adc
clc
lods
mov
push
insb
dec
add
xchg
adc
dec
xlat
popw
popf
aad
ja
mov
pop
test
std
rclb
in
mov
xor
adc
jl
mov
add
inc
or
add
cmpsl
call
dec
jle
cltd
cmc
test
in
fs
daa
clc
dec
jl
pop
cmp
add
inc
or
lods
cmp
nop
sti
hlt
addb
jg
dec
outsb
dec
test
add
xor
subl
aam
jo
xorl
mov
xchg
jno
faddl
xor
xchg
and
push
iret
mov
dec
addb
lds
push
mov
mov
sub
popf
outsb
lods
je
push
lods
aad
sbb
mov
movsb
jne
lds
ljmp
pop
mov
or
lret
cmp
sub
jae
lea
cli
in
push
xor
pop
fistpll
jl
cmp
out
or
jg
jle
xchg
xor
mov
push
cmpsb
ficompl
cld
push
mov
mov
or
adc
inc
pushf
push
scas
outsl
inc
adc
xchg
ret
inc
mov
into
inc
pop
pop
es
ss
xchg
repnz
in
insb
and
push
inc
sbb
xchg
bound
test
mov
insb
push
fwait
hlt
clc
jbe
aaa
and
and
pop
add
cmp
mov
push
mov
ror
std
mov
icebp
xchg
xor
outsl
mov
or
add
stos
stos
mov
aaa
add
push
mov
ljmp
push
hlt
lock
add
out
mov
ljmp
jge
pop
ljmp
hlt
pop
mov
repz
pop
lock
xchg
add
stos
xor
adc
test
loope
std
xor
sbb
insb
push
push
in
mov
jne
dec
lds
imul
mov
pop
sbb
ret
inc
sbb
sbb
mov
aad
cmp
mov
xchg
mov
lods
mov
ds
sub
test
fistps
and
test
xor
cwtl
push
ds
mov
xorl
jb
and
bound
xchg
insb
and
call
mov
stc
cmpsl
push
adc
int3
movb
push
or
and
stos
push
jbe
daa
cmp
enter
mov
fists
jle
into
jmp
lcall
fdivrl
push
or
and
mov
push
lahf
push
or
pop
out
ds
add
ret
mov
in
int3
imul
sub
xor
push
adc
data16
cmp
clc
sbb
leave
outsl
push
inc
xchg
mov
paddusb
jo
es
lea
or
icebp
jp
or
dec
push
out
in
and
pop
data16
les
sti
rclb
fnstcw
push
shrb
cmpsb
inc
stc
clc
xor
nop
and
pusha
and
and
inc
enter
cmp
cmp
imul
test
push
scas
nop
jo
xlat
mov
pop
cli
jl
lret
sbb
mov
pop
push
or
push
fisttpll
mov
cmp
fs
jmp
cmp
cltd
lods
mov
shll
xor
int
lret
leave
and
loop
cmp
pop
sub
notb
mov
cld
dec
sbb
pop
mov
inc
dec
jno
aam
std
xor
push
ds
and
fcompl
imul
sbb
lcall
icebp
test
sbb
jbe
xor
popa
cmp
jns
ljmp
jne
into
cmp
mov
int
pop
cmp
and
pop
iret
inc
pop
lcall
arpl
out
xor
xchg
mov
lods
mov
loop
inc
out
fld1
addb
push
lods
cmpsb
sub
data16
das
shll
add
mov
shll
push
cmp
mov
cwtl
fwait
scas
fs
adc
cli
inc
dec
sti
fwait
jmp
cmpsb
push
pop
or
sbb
mov
in
pusha
mov
adc
js
mov
push
sbb
lods
push
subl
jl
adc
lods
int3
ss
bound
fsubrs
pop
mov
and
lahf
pop
xchg
mov
adc
sbb
push
fcmove
mov
or
mov
mov
or
aam
pop
xchg
push
push
dec
test
sbb
fisubl
lret
cmc
pop
or
clc
pushf
push
cltd
outsb
leave
insl
daa
push
mov
shl
xchg
fcoms
jne
das
xchg
int3
sub
ljmp
leave
jnp
ror
test
scas
sub
push
xchg
pop
pop
pushf
jbe
and
repz
xor
enter
mov
addr16
and
jae
push
cmp
xchg
jl
aas
lods
cmpsb
cmp
lods
ret
mov
jae
mov
mov
jnp
and
int
sub
and
int3
ds
cld
xor
loop
sub
or
jle
repz
divb
sti
mov
rcrl
mov
pop
inc
outsl
sbb
movsb
call
js
fisttps
jbe
or
dec
xchg
cmc
sbb
stc
into
add
mov
into
fsts
push
sub
test
fistpll
mov
ljmp
or
repnz
cli
aaa
outsl
mov
pop
jle
push
xchg
jnp
lock
ss
sti
push
cld
int
ds
adc
sbb
pushf
lock
int
popa
jnp
dec
and
dec
jo
test
dec
push
or
and
outsl
shr
mov
fnsave
adc
lods
imul
setne
pop
ret
sub
imul
rcrb
xchg
loope
aam
mov
cmp
jg
outsb
loope
lods
push
and
daa
inc
cmp
mov
int
cmc
inc
icebp
mulb
repz
lea
mov
mov
js
jp
stc
push
push
loop
insl
jbe
xlat
lods
stos
test
sub
ljmp
call
push
pop
orl
sbb
pop
imul
mov
insl
and
mov
in
mov
cmp
icebp
dec
jmp
in
jecxz
lods
fwait
dec
outsl
mov
add
jecxz
add
or
dec
pop
jl
je
gs
cli
cmpsl
mov
push
add
jnp
loopne
push
add
pushf
push
push
lods
or
les
sti
or
out
mov
lods
mov
inc
adc
sub
sbb
inc
or
add
push
ds
lret
int
jnp
and
add
pop
add
scas
mov
jo
pusha
scas
stc
in
test
cmp
xchg
xor
ds
es
dec
cmp
sub
mov
sahf
ret
call
and
arpl
lcall
dec
dec
xchg
dec
pusha
pop
fiadds
je
icebp
or
scas
xor
mov
hlt
mov
gs
fwait
mov
aaa
aad
and
sti
or
lods
pusha
iret
xlat
push
xchg
clc
jbe
es
xchg
jp
sub
mov
andb
mov
xlat
mov
sub
clc
pop
lahf
cld
loope
loop
mov
cwtl
into
cwtl
add
fidivrl
and
or
pop
shl
les
mov
push
in
int3
xchg
pushf
push
xor
in
push
cltd
das
repnz
inc
mov
cmpl
sub
repz
andl
test
or
xor
pop
pop
lds
movsb
adc
push
xor
jo
test
pushf
mov
sbb
xorb
jmp
imul
sti
ret
push
inc
popa
aas
vmptrst
or
inc
dec
es
jns
cmp
push
xchg
mov
inc
fwait
subb
gs
xchg
in
cmp
sbb
push
push
cmp
in
or
rcrb
jmp
lcall
lahf
ficompl
ret
or
pop
cmp
stc
sbbb
test
xor
sub
cmp
das
imul
jno
jmp
pushf
add
rcr
adc
add
xchg
inc
or
push
cmp
outsl
xchg
mov
jno
test
add
das
jno
mov
jl
add
cmp
icebp
jl
adc
gs
mov
jge
lock
rcll
in
repnz
push
es
and
into
fcmovne
adc
mov
add
fcompl
pop
lret
pop
mov
inc
aas
insb
jl
inc
fcmovnb
addr16
pusha
fistl
lock
add
mov
fcmovbe
insl
movsl
scas
jb
pop
mov
jns
dec
add
incb
mov
je
and
cmpsb
nop
lods
or
push
lea
es
push
sub
test
pop
cmp
inc
in
jecxz
je
cmc
loope
and
xor
imul
movsl
lret
addr16
or
mov
pop
in
adc
inc
shlb
adc
pop
add
shlb
insb
sbb
mov
pop
lea
and
xlat
sub
xchg
outsb
inc
pop
mov
mov
push
mov
xchg
dec
sub
cltd
data16
das
outsb
sub
cld
dec
mov
xor
es
jne
out
pop
imul
out
cmp
xchg
outsl
mull
sub
iret
sbb
add
mov
jge
add
adc
adc
jb
or
push
popa
loop
je
cmc
dec
scas
repz
adc
jl
xchg
sub
sbb
pop
inc
sub
jle
push
jbe
repnz
enter
aas
pop
fnstsw
mov
ret
xchg
push
call
out
lods
xor
fisubl
imul
test
shl
push
mov
pop
add
push
fwait
lahf
add
add
xlat
daa
ljmp
add
or
int3
xchg
inc
push
add
sarl
adc
imul
test
dec
inc
es
adc
aaa
lods
int3
std
testl
out
mov
adc
jb
push
jo
ret
pop
cmc
adc
push
inc
aam
mov
jge
or
popa
xchg
sub
jle
adc
imul
pushf
insb
mov
es
sub
dec
aaa
xchg
inc
shrl
adc
dec
jns
inc
push
test
enter
jp
dec
xor
jo
xor
cmp
cltd
sahf
ja
outsl
daa
xor
mov
ffreep
ds
jbe
pop
push
outsl
js
add
out
mov
pop
mov
dec
daa
xor
cmp
dec
sarl
xchg
pop
adc
push
cltd
mov
ss
sbb
adc
adc
outsb
mov
inc
sahf
dec
fdivp
push
enter
mov
cmp
xor
sarl
ja
sub
mov
pop
leave
stos
xor
mov
xor
bound
adc
pop
pop
js
sub
mov
adc
fiadds
sub
mov
in
xor
aaa
push
dec
inc
stc
dec
and
and
test
mov
dec
xchg
mov
imul
sub
arpl
xchg
ret
mov
jo
add
das
sub
sbb
cmpsl
fsubl
aam
popa
add
std
pop
push
movsb
push
testb
rorb
cmpsl
lock
lret
ret
mov
jmp
repnz
insl
push
dec
shrl
in
sub
xchg
mov
aas
lahf
jl
dec
xchg
aad
subb
scas
push
sahf
mov
arpl
je
insb
push
imul
arpl
add
nop
dec
push
push
rorb
das
add
adc
and
mov
imul
shrb
clc
bound
hlt
pop
sub
incb
or
or
inc
mov
or
jo
inc
jo
push
cli
cld
fimull
nop
jmp
es
cmc
add
pop
sub
mov
mov
fimuls
inc
outsl
cmpsl
push
or
leave
cmp
cmp
outsb
jmp
mov
mov
addr16
sti
ljmp
sub
push
xlat
imul
icebp
shll
dec
dec
pop
cs
bound
sub
or
out
lock
lahf
pop
fwait
iret
cmpb
add
fwait
test
fadd
idivl
cmpsb
mov
in
xchg
and
add
xchg
dec
and
jae
jb
jmp
cmpsb
jne
lock
out
arpl
cltd
popa
leave
mov
cmc
jo
pop
jb
add
sbb
mull
mov
fxch
xor
clc
xchg
dec
stc
test
lds
jg
add
xor
jg
jne
and
and
dec
jmp
xlat
sbb
adc
outsl
sbb
adc
inc
shl
lcall
sub
jnp
cmpsb
mov
orb
jg
loope
dec
sub
lcall
aaa
in
daa
inc
int3
push
mov
jb
lahf
pop
pop
jb
jmp
mov
mov
dec
ja
xor
addr16
mov
mov
sub
pusha
pop
xchg
lods
inc
stos
scas
outsl
jg
popf
or
inc
inc
out
je
adc
jge
scas
push
in
cwtl
mov
xchg
xchg
js
add
js
mov
pushf
std
and
cmp
adc
mov
movsl
dec
adc
shll
jl
cmp
xor
mov
repz
scas
push
xor
test
fxch
leave
js
jl
jo
push
in
addr16
pop
xor
inc
shlb
aaa
pop
xchg
mov
repz
push
and
test
mov
sub
in
sahf
div
rolb
lcall
adc
sbb
leave
sub
sbb
jo
sbb
leave
fsubrl
push
mov
outsl
bts
fnstcw
iret
add
xlat
mov
loop
jmp
loop
cld
repz
icebp
lds
xchg
mov
and
lds
loop
xchg
adc
aad
scas
mov
xchg
cld
xchg
sub
in
xchg
fiaddl
shll
imul
ds
cmp
ret
and
push
dec
enter
mov
jcxz
adc
leave
push
inc
mov
jg
sub
int
popl
jmp
and
xchg
sub
jmp
adc
out
jge
inc
inc
mov
or
negl
repz
inc
jge
dec
mov
and
mov
fsubrs
mov
xor
int3
push
insb
push
dec
js
scas
pop
sbbb
fwait
push
fprem1
jecxz
xchg
mov
imul
dec
sbb
jnp
cs
in
les
repz
and
mov
sbbl
adc
lea
pop
pop
and
leave
iret
mov
inc
or
inc
add
arpl
aas
call
mov
lcall
fildll
xor
mov
dec
mov
sbb
mull
mov
mov
shrb
sbb
enter
adc
loope
pop
nop
sub
dec
fbstp
cs
test
and
pop
imul
test
jg
pop
test
fdivrs
jb
mov
xchg
push
fiadds
jl
inc
ficoms
adc
jo
push
cli
adc
push
outsb
test
inc
sub
xor
sarb
dec
push
loope
mov
rol
sbb
sbb
xor
push
mov
rorb
mov
sbb
popf
sub
sub
ljmp
into
mov
or
jl
push
mov
outsb
xchg
xchg
xchg
and
lahf
mov
pop
add
mov
cmc
mov
movsl
mov
and
jge
or
dec
pop
jae
iret
push
hlt
mov
sub
pop
push
inc
xchg
pop
les
gs
shrl
and
mov
stc
push
jae
test
fsubr
adc
lret
sub
je
dec
or
lahf
ja
lahf
or
or
or
xor
xchg
add
and
xchg
dec
fstpt
mov
adc
in
jecxz
stos
jnp
adc
test
ljmp
cmp
pop
sbb
mov
adc
cwtl
pop
dec
cmp
in
nop
adc
inc
in
jl
sar
push
inc
data16
daa
mov
outsb
xchg
xchg
cmp
mov
in
sbb
mov
jnp
sbb
xchg
test
psllw
stc
sahf
sbb
xlat
leave
cmp
jle
adc
sub
shlb
pusha
jno
dec
mov
dec
or
cmpsb
movsl
lods
jl
push
addl
inc
shll
mov
cs
testl
cmc
or
stos
jbe
fwait
sbb
loopne
or
sub
mov
inc
mov
loop
gs
and
aaa
sbb
fisubl
pop
fiaddl
xchg
test
mov
cmp
popf
dec
sti
jl
push
test
adc
dec
dec
popf
faddp
ret
stc
jb
popa
add
mov
dec
mov
les
pop
sub
leave
and
scas
adc
ret
aad
mov
inc
adc
sbb
ljmp
aam
je
cmpsb
inc
out
out
cmc
pop
mov
lret
aam
mov
mov
mov
inc
mov
fmuls
gs
sub
push
sub
testb
cmp
cmp
xchg
add
lods
out
xchg
jae
loop
xlat
out
cmc
adc
jge
push
orb
test
rcl
adc
adc
and
jle
pop
dec
push
je
pop
ljmp
push
push
xchg
xor
push
pop
add
mov
clc
dec
push
fcomip
or
xchg
stos
jnp
outsb
js
adc
shll
fnstcw
adc
in
in
test
add
pop
cmpsb
movsb
hlt
dec
push
push
jg
mov
mov
lods
push
daa
sub
or
cli
pop
pop
repz
xor
fsubrl
cli
sub
inc
sub
mov
xlat
sub
test
orl
push
inc
adc
icebp
add
int
cs
xor
loopne
ret
je
sbb
add
mov
mov
mov
pop
rclb
cltd
aas
or
pop
outsl
jecxz,pt
mov
sahf
sbb
xor
in
pop
cmp
cmpsb
fldcw
push
xor
inc
test
inc
dec
push
xchg
shlb
push
or
scas
ds
movsl
push
mov
push
push
repz
shl
mov
pop
call
loope
xor
and
cmp
les
jno
push
push
push
sbb
lods
or
sub
aam
ret
sub
inc
sbb
fdivs
inc
mov
std
aad
arpl
dec
pop
aad
mov
iret
mov
sti
lcall
mov
push
mov
mov
daa
insb
adc
jg
push
add
mov
or
xchg
push
or
insb
loope
add
imul
aad
rcll
sbb
gs
pop
jno
mov
les
pop
cmpsl
shll
popa
cld
fmull
sub
lret
jo
mov
adc
inc
adc
pushf
mov
loopne
pop
out
or
insb
ljmp
shll
aad
sti
stc
xchg
sub
pop
dec
cmp
dec
ror
sti
fbld
sbb
sbb
and
lcall
jnp
aaa
sub
fstpt
mov
mov
jnp
cmpsb
rcl
jbe
adc
out
push
mov
dec
cmp
mov
aam
lock
std
dec
push
jg
gs
mov
cmp
cmpsb
test
cld
insb
pop
adc
jecxz
jecxz
mov
xchg
ja
insl
mov
jo
cmp
adc
add
push
cld
mulb
stos
aaa
imul
adc
lea
fwait
mov
aad
cmp
mov
xchg
or
in
out
cld
int3
fisttpl
test
lods
rorb
inc
mov
mov
pop
mov
test
lea
loopne
add
pusha
outsb
xchg
fxch
stc
mov
sub
add
fdivs
or
xchg
add
inc
scas
pop
lcall
rcr
dec
imul
push
mov
nop
xchg
loope
in
push
pop
lock
int
cmp
mov
std
inc
scas
dec
andb
test
cmc
test
mov
xchg
mov
jle
inc
movaps
fistl
xchg
and
in
popl
xchg
mov
cmpsb
or
call
cmp
cltd
lahf
adc
insl
sub
cwtl
mov
sbb
push
int
pop
adc
in
pop
pop
add
cmpsl
jle
repnz
testb
int
cmp
outsl
mov
iret
jb
xchg
jo
in
dec
testl
leave
pop
sahf
pushf
dec
and
sub
lret
mov
xorl
aam
adc
adc
inc
lcall
xor
cs
jno
leave
orb
and
mov
push
and
sbb
sti
cltd
pop
mov
jl
mov
pusha
out
pop
jp
or
les
or
stos
adcb
jb
and
cmp
test
scas
lods
into
sub
pop
push
test
dec
or
cmp
inc
int
sub
dec
daa
pop
xor
shll
mov
and
scas
ljmp
shr
pop
dec
outsb
test
cmp
pop
cli
push
add
xor
sub
cmp
sub
pop
imul
push
xor
arpl
fdivr
push
mov
stos
popa
insl
xchg
arpl
dec
movsl
inc
lock
dec
push
mov
in
add
mov
mov
outsl
outsl
jnp
mov
xor
fsubl
nop
sti
mov
add
cs
inc
push
addr16
mov
jns
cmp
and
inc
sub
push
add
xchg
lahf
cmpl
adc
mov
add
aas
aam
jmp
sbb
inc
ret
mov
arpl
sbb
mov
mov
test
das
imul
jle
js
cmpsb
ljmp
push
setno
test
add
fstp
or
push
and
lret
clc
cmp
sarb
jmp
jecxz
cli
stos
dec
push
cld
add
sbb
pop
das
aaa
out
inc
push
jns
push
push
xchg
jno
mov
xchg
clc
ficoms
xor
cmpsl
pop
test
movsb
adc
je
inc
andb
cmp
call
scas
add
cltd
jp
lods
xchg
or
cwtl
add
sbb
sub
and
lret
pop
jmp
lret
add
pop
out
adc
ficompl
in
dec
dec
sbb
mov
xchg
sahf
cmpsb
inc
dec
dec
sbb
mov
test
pop
pop
pop
push
and
loope
add
cmp
xchg
add
xor
or
mov
rcrl
pushl
cmp
pmulhuw
jl
test
cs
adc
dec
jno
lods
aas
add
sub
push
dec
into
jge
cmc
shl
cmp
pop
or
inc
shrl
xchg
addr16
addr16
sub
fcmovu
sbb
inc
dec
mov
push
sub
cmpsl
mov
nop
lret
pop
mov
xchg
add
xor
xlat
mov
mov
xchg
movsl
push
insl
rorb
enter
or
adc
jne
pushl
and
inc
dec
inc
in
xchg
into
pop
stos
out
mov
fists
cmc
shr
je
and
cmp
dec
mov
mov
cmp
stc
pop
mov
mov
call
mov
cmpb
testl
sarb
mov
push
xor
out
xchg
push
or
int
pusha
add
dec
bound
jl
insl
insb
xor
je
int3
repz
lcall
push
pop
or
sbb
mov
insb
sbb
dec
and
inc
inc
dec
shlb
hlt
rcl
fistpl
pop
addb
fmuls
xchg
xor
scas
xchg
inc
or
loope
mov
mov
add
push
mov
ret
adc
cmp
adc
cltd
dec
mov
in
mov
in
or
cmpsl
or
mov
aam
mov
mov
pop
inc
sub
push
mov
jge
icebp
arpl
push
mov
pop
jne
and
loopne
xchg
das
and
movsl
dec
pop
nop
pop
inc
pop
sahf
mov
push
fcmovnu
cli
mov
pmaxub
rcl
stc
hlt
add
test
mov
call
dec
out
dec
int
sahf
mov
sbb
jle
mov
cmc
inc
xor
cmp
js
mov
test
icebp
push
pop
aad
cltd
pop
jmp
adc
jmp
xor
aam
push
sbb
xchg
add
xlat
jnp
ficoms
xchg
add
sub
cmp
ja
jne
subl
movsb
mov
adc
jns
adc
dec
push
lods
stos
sbb
loope
xchg
or
mov
push
mov
popa
fidivl
jae
js
push
fnstcw
sub
mov
inc
lcall
push
sbb
xchg
stos
cwtl
cmp
xor
fidivl
arpl
add
repz
sbb
sbbb
dec
mov
inc
inc
bound
push
push
jl
jne
shl
cmp
leave
outsl
mov
lds
sub
js
xlat
sbb
or
jg
cwtl
loopne
or
daa
xchg
ret
sahf
push
mov
loopne
jl
bound
push
gs
sub
push
jae,pn
mov
in
ret
rorl
enter
push
addps
inc
rcrl
shlb
imul
arpl
test
mov
jmp
push
fists
mov
inc
mov
aad
xchg
jge
jb
xchg
mov
jne
jno
cli
xchg
das
cld
mov
pop
lea
call
jecxz
nop
rcll
outsl
pop
xchg
sub
in
jmp
xchg
push
addr16
xchg
pop
es
int
test
cmp
mov
addb
dec
xlat
outsb
dec
dec
in
lcall
loopne
pop
loop
dec
push
loopne
xchg
imul
lret
mov
push
mov
and
popf
jne
adc
lahf
ret
or
xlat
xor
sarb
push
scas
insb
mov
test
aam
fnstcw
addr16
jmp
out
push
popf
mov
aam
xor
mov
sub
sbb
mov
xor
jl
jno
clc
mov
aam
movsl
lods
call
shlb
nop
push
out
adc
push
into
pushf
xchg
test
mov
adc
inc
push
fbld
cmp
sub
subb
jno
jne
jno
sub
cli
loop
sbb
xor
sub
dec
lods
add
pop
push
call
shrl
mov
scas
dec
adc
xor
mov
sub
push
mov
or
cwtl
popa
aam
mov
stos
add
fimull
inc
ret
mov
pop
mov
mov
pop
int3
pushf
orb
cwtl
sbb
lret
out
push
and
jp
rcll
xor
popa
xor
lock
xchg
and
ret
or
pushf
into
inc
sub
jmp
pop
mov
pop
cmp
cmp
mov
or
aam
push
inc
dec
mov
cmp
mov
lahf
and
mov
mov
loop
shrb
jge
xchg
xchg
or
mov
nop
aaa
jle
rcl
jno
mov
push
xchg
xor
sahf
mov
scas
lcall
add
gs
ja
cmpsb
sub
mov
xchg
loopne
fsubrp
lahf
das
es
daa
lahf
rol
mov
and
stos
cmp
adc
js
rorb
mov
lea
mov
inc
mov
lods
in
in
int3
inc
mov
sub
pushf
add
incl
mov
icebp
insl
adc
mov
jo
mov
pop
clc
jnp
repnz
jbe
xor
pop
call
pop
cmovle
push
mov
arpl
jl
xor
adc
add
mov
jnp
jns
inc
fs
rorb
and
in
scas
sub
imul
sub
dec
jne
adc
jmp
hlt
pop
xor
arpl
jle
je
aaa
hlt
xchg
push
mov
repnz
popa
int3
lock
add
or
lods
sahf
sbb
dec
xchg
push
cmp
adc
outsl
mov
rcrl
repnz
pop
sbb
push
push
pop
and
lcall
push
jge
gs
test
mov
cmp
int
xor
xchg
mov
dec
inc
aam
sbb
subl
lods
dec
iret
rcl
sbb
adc
cli
rcrl
mov
in
inc
and
and
dec
and
call
sub
mov
push
mov
sti
xchg
hlt
and
enter
jge
into
sar
add
jl
xchg
inc
add
je
in
sbb
aam
or
sbb
in
incb
adc
popf
inc
in
jle
inc
mov
jnp
jno
js
dec
cld
jge
push
sbb
sbb
dec
mov
add
lods
mov
lret
push
mov
into
aad
stos
sbb
sbb
das
or
push
sbb
aaa
and
fsts
xchg
pop
outsb
dec
cld
mov
stc
mov
xchg
add
in
fistl
jno
adc
es
lock
pop
aaa
jns
je
lods
mov
aad
sub
mov
jge
xor
and
int
mov
push
push
add
xchg
rolb
repz
ljmp
xchg
jecxz
mov
mov
mov
add
repz
dec
cwtl
cltd
xlat
fisttps
add
pop
lahf
outsl
test
orl
xchg
push
inc
add
xor
test
repz
popf
dec
jle
dec
shr
jns
popa
test
xchg
test
push
adc
pop
dec
jb
dec
fistpl
or
sbb
pop
mov
mov
loop
push
mov
xor
lock
mov
and
inc
xchg
cwtl
ds
fcom
cmc
dec
sub
mov
jno
adc
loope
xchg
hlt
lret
shr
js
cwtl
leave
and
ljmp
out
xchg
repnz
es
pushf
out
mov
pop
mov
leave
rcrb
loope
push
ret
fistpl
cmp
mov
mov
nop
loop
loopne
out
sbbl
cmp
lock
int3
or
mov
lds
or
lods
loop
inc
mov
mov
test
icebp
sub
repnz
pushl
in
xor
jmp
cs
add
sub
pop
int3
popf
xchg
sti
mov
xor
and
cmp
icebp
inc
iret
cwtl
outsb
jae
ds
push
adc
inc
rcrl
cmpsl
xchg
xchg
sbb
rcll
aaa
ja
inc
movsb
lods
pop
dec
push
mov
sub
loope,pt
cwtl
pop
add
cmpsl
add
adc
dec
sub
mov
mov
mov
adc
xchg
in
cmp
mov
sbb
adc
cltd
inc
in
stc
int
in
push
jmp
fimuls
inc
xchg
mov
mov
add
cmc
stc
shrl
jne
jg
roll
sti
xor
clc
daa
lods
filds
add
test
add
clc
imul
outsl
xor
and
pusha
scas
std
cmc
push
dec
test
das
fs
xor
jle
mov
fmull
xchg
data16
and
push
fwait
inc
ret
xchg
pop
mov
cmpsl
cmp
adc
cmovo
and
xchg
mov
inc
cmp
and
xchg
cli
fnstenv
xchg
adc
xchg
cmpsb
les
jno
adc
inc
mov
roll
add
repz
push
fstpt
lret
jecxz
and
sbb
cmp
xchg
or
inc
imul
arpl
xchg
mov
dec
out
mov
jne
push
popf
push
push
jne
cmpsb
lcall
in
adc
dec
mov
xchg
lcall
push
cli
xlat
in
loope
pop
test
mov
cld
xchg
mov
popa
inc
push
inc
jne
outsb
jg
je
lcall
shl
iret
inc
fstpl
inc
dec
push
cmp
and
fcmovb
inc
icebp
sbbb
clc
cmp
insl
mov
xchg
mov
sub
pop
cmpsb
pop
push
jle
mov
jae
add
cmp
mov
scas
dec
jl
sarb
les
or
push
ljmp
sahf
pop
outsb
aam
jmp
fwait
stc
inc
lcall
dec
stc
pusha
mov
fs
cmp
fisubrl
mov
cli
mov
add
aam
mov
push
dec
lods
imul
pop
push
cmp
or
popa
mov
in
adc
lea
fsubrs
push
movsl
inc
xchg
and
in
adc
or
and
mov
arpl
shl
mov
and
mov
shrl
hlt
inc
adc
dec
lahf
xchg
jbe
jb
lret
jo
addr16
push
sti
punpcklbw
dec
lret
jne
lds
nop
cltd
xlat
loopne
mov
or
nop
scas
ja
sbb
imul
cmpsb
outsb
fadds
or
mov
leave
adc
pop
mov
xor
mov
and
clc
outsb
push
xchg
pop
add
pushf
mov
xor
add
andb
rorl
pop
dec
mov
pop
jle
mov
inc
cli
loopne
inc
jg
or
cmp
pushf
cwtl
repz
jecxz
fwait
orb
or
mov
fnsave
aaa
mov
jg
push
mov
or
and
push
mov
rorl
into
lods
lret
push
fs
push
popf
mov
sub
pusha
and
cmp
loope
adc
pop
mov
or
shl
test
and
push
add
in
sbb
imul
sti
push
ret
xchg
push
xchg
jl
push
cmp
push
popa
mov
push
icebp
mov
dec
push
mov
xor
loopne
mov
mov
mov
cmove
pop
sbb
xchg
sbb
cmp
pusha
mov
js
out
sub
lea
sbb
xchg
jmp
pop
mov
mov
xchg
jge
adc
loope
mov
je
imul
cmp
aas
inc
std
xchg
push
mov
and
sbb
and
cwtl
sub
or
faddl
fwait
jo
xor
aad
adc
idivl
inc
fldl
testb
add
pop
jecxz
les
ss
jle
push
aaa
mov
dec
std
cltd
add
jecxz
fimuls
xchg
jge
xchg
rcrl
mov
lods
mov
enter
mov
mov
lods
addr16
inc
cltd
sub
ds
fucomip
inc
xlat
inc
test
mov
sub
mov
shrl
outsb
cmp
dec
sbb
in
mov
in
pop
mov
out
push
xlat
lret
dec
sbb
mov
test
cmc
test
cld
fldl
xchg
mov
std
inc
lret
stos
js
push
js
outsb
sbb
dec
add
jle
pop
inc
dec
inc
mov
xlat
loopne
sbb
ds
bound
fs
dec
or
les
clc
adc
cmp
push
test
xchg
push
add
cmp
mov
sub
pop
stos
in
sub
pushf
sbb
push
test
cli
pushf
cmp
xor
or
in
push
scas
mov
push
inc
xchg
inc
xor
cmp
sbb
dec
loopne
mov
fwait
inc
test
xor
inc
mov
test
add
movsl
rcrb
int3
movsl
or
mov
add
sub
into
aad
lds
add
dec
int
mov
lods
push
scas
sahf
lods
std
js
and
cwtl
fdivrp
xchg
mov
jmp
loopne
push
aas
lret
and
bound
negb
xchg
and
in
sbb
push
cmpsb
adc
movsl
xchg
cmc
neg
push
stos
sbb
inc
in
jp
fisttps
and
dec
jl
outsb
add
dec
mov
sub
mov
dec
aad
jnp
aaa
mov
stos
mov
lods
mov
sub
test
das
cwtl
adc
rolb
xchg
rorl
fidivrs
movsl
stc
sbb
xchg
pusha
xor
sbb
std
popa
test
outsl
aad
mov
sbb
pop
xor
pusha
inc
jp
popa
jo
or
cwtl
dec
insl
inc
scas
imul
mov
mov
mov
pop
inc
adc
adc
xor
inc
push
push
insb
add
lahf
ret
ret
or
sarb
dec
scas
aaa
dec
loop
dec
mov
clc
in
lret
adc
shlb
and
pop
fs
push
fwait
sbb
pop
push
mov
mov
and
mov
cmpsl
scas
add
es
arpl
push
movsl
and
mov
push
xchg
pop
mul
clc
lret
jns
add
test
jnp
nop
das
cli
adc
add
sahf
out
int
jp
add
out
and
fmull
fiaddl
xchg
hlt
mov
mov
inc
xor
sahf
lret
adc
jnp
mov
mov
mov
popa
fnstsw
cltd
or
test
stos
fs
or
js
inc
xchg
add
or
jns
in
popa
add
lahf
inc
mull
jno
pop
nop
push
fnstcw
test
lods
jp
fmuls
or
push
fidivrs
jp
aas
mov
and
mov
jmp
in
mov
jmp
mov
mov
lock
into
adc
pusha
loope
push
popa
stc
and
mov
sbb
mov
pop
cmp
mov
inc
ret
cmp
sub
mov
jb
jbe
adc
mov
xchg
into
ret
pop
imul
or
loopne
int3
add
call
lods
mov
lcall
jmp
les
mov
sbb
adc
shl
lods
and
pop
std
dec
and
test
inc
sahf
push
int
fs
ret
sbb
or
cmp
into
jle
sub
mov
inc
sbbb
mov
add
addr16
popl
fwait
dec
test
movsl
and
push
and
xchg
add
mov
mov
lahf
jp
jmp
or
lcall
fwait
scas
in
popf
test
sub
mov
fadd
or
repz
adcb
xchg
dec
jge
xor
mov
loopne
in
xchg
movb
insb
dec
mov
rclb
fiaddl
adc
push
xchg
and
cli
roll
sbbl
or
add
add
mov
je
mov
mov
enter
inc
fimuls
push
mov
ja
or
cwtl
call
je
inc
out
jne,pt
xor
std
les
mov
jne
loopne
xchg
lods
jge
jae
lret
fcomps
out
outsb
out
mov
aaa
loopne
pop
xchg
cmpl
out
cmp
sbb
pslld
rorl
sub
imul
xchg
imul
mov
in
out
and
aad
addr16
jecxz
pop
loop
std
lret
outsl
gs
jae
popf
push
inc
rcll
adc
mov
shrb
dec
mov
sub
fmull
sub
mov
adc
mov
xchg
cltd
add
sbb
sbb
mov
imul
loopne
not
insb
push
mulb
mov
xchg
loope
stos
movsl
or
push
loop
sub
add
add
mov
mov
adc
nop
sahf
cmp
cmp
outsl
es
ja
mov
sub
addb
in
lods
movsb
sbb
adc
xchg
dec
jmp
repz
test
jmp
rcrb
inc
test
pop
pop
mov
push
add
pop
mov
fnstsw
scas
mov
in
cld
pop
xchg
leave
jg
adc
push
cmp
adc
in
or
lods
mov
cmp
xor
mov
addl
jle
ficoms
pop
xor
xchg
rorb
pop
pop
int
shlb
adc
stos
inc
push
xorb
pop
or
xor
insl
ja
cli
dec
pop
mov
or
mov
outsb
in
jb
pop
xchg
or
xor
lds
lds
sbb
jnp
add
push
xchg
int
or
loope
sub
mov
fs
cmp
pop
xchg
lock
roll
fucomp
loope
or
dec
test
imul
pop
adc
sub
gs
mov
xor
mov
jne
mov
js
xor
pop
pop
pusha
fwait
lahf
repz
mov
xor
and
inc
jnp
rcr
leave
and
mov
popa
hlt
mov
loop
jecxz
cwtd
xchg
nop
sbb
pop
mov
add
mov
push
scas
adc
jbe
or
out
mov
cmp
inc
ret
xchg
clc
pop
shlb
mov
cmp
add
xchg
loop
repz
je
xor
ja
cmp
popf
cmc
aaa
dec
frstor
cmp
mov
push
adc
lcall
add
pop
sbb
mov
outsb
mov
stos
scas
push
lcall
xor
push
addr16
jno
popf
cmpsl
sub
or
imul
push
popa
dec
and
cwtl
jb
jp
leave
adc
aam
in
or
out
in
sbb
adc
or
gs
push
shrb
xchg
mov
cmp
repnz
mov
push
pusha
shl
sbb
out
jb
fildll
pop
in
or
xorb
jg
mov
or
xchg
inc
xor
sbb
add
push
cli
mov
fwait
push
inc
push
dec
call
jp
sti
sub
in
inc
aas
pop
adcl
jmp
call
jecxz
xchg
divb
lods
shrl
scas
cli
inc
je
mov
arpl
mov
mov
out
test
mov
xor
mov
cmc
roll
sar
je
push
pop
ret
sbb
sub
cmp
adc
cltd
test
xor
cmpsl
xchg
inc
sbb
movsb
push
or
inc
adc
sub
out
jno
and
je
lret
or
std
outsl
stos
std
pop
add
repnz
push
and
dec
dec
or
js
xchg
lock
dec
dec
stos
inc
jns
sub
xchg
jge
pop
dec
xlat
jl
out
test
jge
cmp
mov
stc
pusha
pop
ds
cltd
jmp
mov
scas
adc
cmp
inc
jmp
add
roll
add
cmp
lods
repz
lock
xor
je
push
fisubl
jecxz
aas
mov
inc
inc
push
sub
push
mov
push
mov
out
rcrb
lahf
mov
pop
insb
push
pop
push
xchg
psrad
aam
and
inc
fistpl
orb
imul
dec
mov
xorl
mov
inc
hlt
testl
int3
mov
mov
inc
testb
das
add
mov
fucomp
and
mov
loop
pop
lock
stos
fcoml
jl
into
sbb
mov
sub
pop
lret
xlat
pop
push
sub
into
stos
push
pushf
cmp
adc
dec
repnz
sti
pop
fldenv
sbb
idivb
xor
add
test
or
ja
addr16
cmpsl
in
cmpb
mov
adc
std
xchg
add
stc
cmp
cld
fsubp
xor
shrb
xor
jmp
add
or
xchg
les
xchg
pop
std
test
mov
sub
les
nop
mov
xchg
cld
cmp
in
and
xor
xor
dec
fucomi
nop
jb
outsb
sbb
out
adc
and
roll
sbb
gs
pop
fnsave
repnz
push
push
jmp
adc
iret
sbb
pop
ds
pusha
popa
and
cmp
cs
fwait
lret
add
lret
hlt
push
mov
inc
sub
dec
push
leave
and
imul
inc
je
jl
js
cwtl
es
lret
call
mov
jl
inc
xchg
push
repz
shlb
into
sbb
pop
mov
adc
push
mov
jb
fdivr
mov
fwait
pop
inc
adc
popf
sbbb
xlat
sub
inc
xlat
add
sub
ljmp
pop
loop
xor
movsw
inc
jo
fldt
lds
scas
xor
mov
sub
popf
fstl
xchg
jecxz
or
scas
add
cmp
in
mov
or
xchg
xchg
imul
jo
push
mov
fstpl
ja
xor
jnp
insl
jmp
fwait
int3
pop
mov
fstp
fucompp
les
add
push
adc
repz
adc
mov
xchg
or
inc
mov
lcall
mov
push
xchg
cmp
hlt
fimuls
dec
xchg
cmp
gs
mov
jnp
mov
and
inc
or
jae
out
out
mov
cs
mov
repnz
sub
dec
aad
or
pop
paddb
aas
dec
jg
jp
ljmp
nop
mov
push
xor
int
cmp
cmpsb
in
pop
mov
ret
pop
mov
sub
je
in
mov
mov
repnz
loope
neg
aas
cmp
shll
out
sbb
sbb
and
push
ret
mov
outsl
adc
dec
cmpsb
cltd
inc
dec
stos
or
ficoml
push
inc
pushf
popa
sbb
sar
lsl
fnstenv
push
inc
cmp
mov
insl
mov
stos
jne
stos
lret
arpl
inc
push
cltd
loope
cmp
je
jmp
dec
mov
inc
and
ja
xchg
gs
mov
sbb
scas
pop
adc
xchg
aad
add
jnp
data16
fnstenv
test
xchg
setge
xchg
dec
jbe
incl
jp
mov
push
lods
hlt
repz
leave
fisttps
test
and
fcmovnu
test
loope
lods
leave
js
xchg
push
pop
std
outsl
xlat
aam
pop
pop
aam
es
push
jle
sbb
mov
inc
push
fstpt
add
inc
jge
popl
cmp
es
stos
jnp
rolb
mov
mov
cli
pop
hlt
in
push
fisubrs
mov
mov
inc
adc
push
les
jne
add
mov
iret
jge
adc
insb
add
pop
test
jae
push
enter
ss
jp
mov
rol
push
mov
jle
adc
inc
push
out
and
fildl
pop
xchg
imul
lods
xchg
push
xor
mov
fcom
inc
add
push
je
aad
mov
mov
sahf
fld
aas
out
pop
dec
jle
imul
in
jnp
sub
ss
leave
cli
js
cli
ret
aas
sub
dec
testl
pop
push
out
subl
movsb
icebp
shl
dec
push
xchg
fisubrs
add
dec
adc
add
divb
or
fisubrs
pusha
adc
add
mov
lret
mov
std
dec
scas
outsl
add
loop
mov
xchg
mov
cmpsb
ljmp
cmp
addr16
and
sub
inc
repnz
and
das
cli
fnstenv
mov
lock
lahf
mov
jp
and
mov
nop
and
sbb
pop
outsl
pushf
cmpsb
cmpsb
cmp
dec
fistpll
fstpt
jae
add
je
loope
das
je
leave
ja
pop
push
pushf
lcall
cmpsb
push
aaa
fsubs
imulb
and
orb
xor
mov
or
lock
jbe
push
add
es
imul
add
into
lahf
int
push
ret
mov
mov
jb
mov
pop
cli
ret
addl
orb
pop
out
stos
mov
inc
add
movaps
lcall
lds
fbstp
push
cmp
cmp
cmp
cwtl
icebp
xor
dec
and
mov
dec
pushf
cli
xor
push
mov
sbb
adc
imul
xor
into
ret
cs
pop
sahf
lret
push
shrb
mov
pop
xor
adc
clc
rolb
mov
and
pop
push
sti
mov
sub
fmuls
out
cmp
or
decl
adc
cmpsb
cld
inc
sahf
push
pop
sbb
xchg
xor
adc
or
test
in
sbb
dec
cli
iret
mov
push
xchg
repz
stos
push
loope
iret
sub
js
add
inc
mov
xchg
insl
stos
sbb
inc
test
xor
add
jne
jbe
in
subb
xor
dec
or
es
out
push
dec
cld
mov
or
push
js
dec
fnsave
ljmp
insb
add
inc
movsl
mov
sub
mov
addr16
iret
pop
cmp
js
ret
std
xchg
decb
sarl
push
sbb
jle
push
in
movsl
outsl
aaa
jge
mov
pop
rcll
mov
stc
push
adc
or
sahf
or
mov
adcb
and
cmp
mov
mov
dec
xor
mov
rorw
ljmp
jae
mov
loop
xchg
dec
or
shrb
xchg
push
pop
jge
cmp
push
jae
in
imul
aas
pop
popl
icebp
lds
push
mov
lods
inc
or
dec
mov
xchg
mov
push
cmp
adc
xchg
dec
clc
mov
adc
push
test
sbb
lods
xchg
xchg
imul
mov
push
push
xor
mov
shrb
sbb
out
mov
cmp
or
jecxz
or
test
fildl
jecxz
mov
jae
addr16
jge
adc
lods
push
inc
pop
push
insb
xchg
jnp
in
pusha
ret
mov
add
and
dec
add
xchg
xor
add
jae
mov
mov
jnp
int
int3
call
inc
int
dec
sahf
loope
in
push
dec
ret
xchg
movsl
add
sbb
jmp
popf
dec
sbb
mov
outsb
or
inc
jge
lret
cld
popa
lds
push
in
fisttpl
dec
in
dec
sub
jmp
call
sti
shlb
rorl
es
clc
mov
lret
test
ljmp
pop
in
por
lods
cli
out
jecxz
xchg
and
add
jge
loope
std
push
sarb
xor
sub
or
cmp
movsl
out
push
cmp
shlb
push
push
push
call
jge
es
push
aas
push
xchg
pop
and
pushf
xchg
test
push
pushf
inc
xchg
jl
shlb
sti
xor
subb
repnz
lea
pop
xchg
inc
mov
mov
mov
stos
pop
cmp
aas
push
and
mov
jno
das
cmc
cld
int
roll
arpl
add
adc
pushl
vpunpckhdq
mov
lret
repnz
xchg
mov
loopne
jmp
pop
outsb
lcall
sub
cs
and
add
not
into
mov
test
adc
sub
hlt
lret
xor
out
out
pop
add
test
and
enter
xchg
jmp
push
sub
clc
and
push
and
dec
mov
and
arpl
push
movsl
mov
jge
stos
scas
mov
gs
movsl
ja
xadd
mov
int
fiaddl
sub
mov
xchg
dec
ss
out
xor
sti
in
ret
sahf
je
or
pop
popf
fiaddl
inc
mov
xor
mov
fcmove
dec
xor
pop
aaa
or
xchg
rorb
push
cmp
push
mov
nop
add
jg
xchg
insl
push
mov
int3
mov
adc
aam
pop
pop
inc
adc
popf
dec
inc
subl
dec
ljmp
cld
repz
and
mov
mov
mov
lea
dec
cs
jp
test
adc
push
mov
xor
movsb
add
fs
outsb
ret
jecxz
lods
or
nop
adc
mov
ds
mov
xchg
outsb
push
mov
cltd
mov
inc
sub
mov
rol
mov
outsl
popl
lods
xchg
arpl
add
jle
insl
cld
mov
fisubs
fsubr
insl
push
ret
sub
fstps
jecxz
outsl
mov
out
mov
ljmp
dec
dec
sub
mov
jo
xchg
rcll
cmp
out
mov
mov
sbb
sub
in
lahf
js
nop
loope
inc
scas
fs
xchg
jbe
enter
jp
sub
add
cmp
popa
cmp
jne
outsl
leave
clc
cwtl
hlt
aad
cmpsb
xor
outsb
jnp
pop
insb
std
jbe
mov
lea
out
aaa
out
filds
adc
mov
pop
rcrl
test
ds
sub
jl
mov
mov
int3
xchg
add
mov
jb
push
push
sub
xor
mov
mov
loopne
lods
push
and
aad
stc
mov
mov
outsl
leave
stc
cmpl
pusha
adc
das
icebp
rcrb
jge
and
or
rclb
out
rclb
ja
adc
dec
mov
lahf
dec
cwtl
inc
insl
fstpt
mov
xor
or
mov
dec
cmp
rorb
in
loope
bound
mov
jb
int
xchg
enter
add
sbb
test
lock
mov
negb
sbb
cmp
lock
push
mov
push
fcomip
cltd
mov
pusha
and
push
xchg
iret
mov
subb
out
jmp
orb
dec
fadds
sub
pop
in
movsb
cmp
aas
jns
sahf
inc
push
ret
addb
mov
cmp
add
dec
xchg
adc
fsts
jae
cmp
mov
pop
add
mov
cmp
cld
pop
cli
mov
mov
aaa
mov
and
jmp
iret
or
notl
xchg
push
aaa
sbb
sbb
mov
test
pop
pushf
call
sti
call
rorb
lret
inc
cs
inc
test
inc
jecxz
popw
lret
pop
mov
jmp
sbb
test
insl
cmp
or
pop
add
fidivs
negl
ret
movsb
xor
inc
lcall
mov
lea
nop
add
inc
xchg
stos
add
jo
dec
sub
and
mov
sub
mov
adc
fwait
mov
push
in
or
lods
cs
mov
ss
mov
push
fwait
fwait
xor
sub
fsubr
push
repz
lods
fstps
push
shlb
cltd
pop
out
jae
out
or
mov
int3
dec
jge
pop
repnz
sbb
aam
jecxz
push
imul
inc
icebp
cmp
xorl
sbb
jge
push
xchg
andb
cmp
add
nop
fbld
inc
cmovno
imul
dec
jmp
sub
mov
inc
pop
stos
std
add
lahf
mov
dec
dec
add
stc
shll
insb
stos
inc
or
add
mov
sub
popf
pop
in
repz
and
js
imul
fs
pop
repz
ljmp
ja
cmc
xor
add
add
push
pop
rcrb
int
sbb
out
cmpsl
daa
std
testb
cmp
fsubp
test
lea
sahf
or
jmp
adc
add
pushl
in
mov
fucomp
or
pop
scas
mov
xor
out
cmpsl
mov
xor
jmp
enter
push
or
push
mov
lcall
cs
inc
in
lods
les
mov
aaa
testb
lcall
add
jmp
sbbl
arpl
xchg
push
mov
mov
dec
inc
adc
push
push
iret
jno
out
adc
out
rorb
xor
enter
pop
jg
sbb
movsb
adc
push
xor
das
or
or
xor
cmp
nop
ss
in
mov
mov
inc
imul
push
cli
lock
fldt
icebp
mov
ret
nop
xchg
push
add
stc
pop
push
xchg
xchg
xor
push
mov
scas
xor
xchg
xor
shrl
pop
cmp
outsb
js
imul
lret
in
fcoms
fcoms
sbb
lret
sbb
cltd
push
pop
xor
mov
or
jg
jg
mov
or
dec
mov
arpl
pop
pop
cmp
and
jl
in
fwait
and
pusha
mov
in
cmpl
int3
xor
cmp
popa
mov
adc
orb
mov
daa
mov
and
cmc
jl
lret
cltd
jb
sub
mov
or
adc
outsb
mov
std
pop
ss
loopne
pop
sbb
sbb
lods
sahf
sti
jno
xlat
les
add
ds
in
js
xor
push
insb
lods
jne
fsubrl
lods
mov
sub
leave
xor
xchg
push
les
call
xchg
adc
enter
hlt
xchg
aam
mov
mov
jns
cwtl
adc
inc
outsl
dec
sub
lret
pop
xchg
std
pop
test
je
mov
negb
cmp
test
mov
and
mov
adc
jo
fcomps
lock
xor
add
push
xchg
xchg
mov
cmp
xor
or
adc
pop
xchg
ror
inc
dec
test
jae
popa
lcall
sub
shll
das
sub
jnp
push
or
leave
cmp
add
push
mov
cli
addb
ds
push
and
xor
test
jno
inc
out
insl
fwait
in
adc
add
xorb
cmp
jmp
mov
iret
ljmp
js
ret
mov
in
in
dec
mov
push
popa
or
adc
jecxz
or
sbb
mov
mov
jne
xchg
and
adc
test
movsb
sti
push
add
sahf
cmpsb
lcall
push
faddl
fsts
loopne
sub
sub
cmpsl
and
inc
int3
dec
add
sbb
call
cld
push
sbb
outsb
and
sbb
out
data16
cmpsb
mov
outsl
into
dec
mov
inc
cwtl
pop
lods
cltd
pop
inc
in
dec
loop
mov
mov
in
ja
aaa
sti
js
int
outsl
mov
bound
orb
out
ljmp
sub
in
fs
daa
push
cmpsb
das
adc
loopne
xor
xchg
int
sub
mov
cmp
push
dec
js
gs
sub
jle
pop
xchg
jl
ljmp
dec
sbb
in
divb
xor
test
lret
xor
das
mov
or
xor
mov
pop
mov
sub
mov
cmp
js
clc
mov
std
in
adc
das
aaa
mov
mov
insb
inc
push
leave
ret
lods
inc
mov
sahf
xchg
cmp
sub
stc
cli
mov
hlt
test
or
filds
movsb
arpl
std
int
dec
mov
jle
mov
lret
pop
das
je
pop
add
shrb
push
dec
add
icebp
mov
mov
or
pop
add
test
adc
std
insb
jae
inc
cmpsb
xchg
jne
jne
out
add
lods
mov
out
jbe
jnp
nop
rcll
jge
mov
xchg
xchg
jle
nop
and
pop
in
les
cmpl
mov
jns
hlt
jmp
add
inc
push
fbstp
mov
push
mov
int3
jb
popf
into
cwtl
jg
repnz
cmp
push
xchg
lcall
jns
jnp
xlat
mov
outsl
shrb
cwtl
jne
or
sahf
movsb
adc
xchg
mov
and
xor
cli
out
dec
cmp
push
push
fwait
daa
popa
pop
js
lret
fsts
clc
inc
imul
jno
lahf
out
xor
inc
cwtl
add
pop
fstl
cmpsl
jmp
xchg
imul
or
iret
ret
xchg
aam
xlat
popf
add
sub
mov
inc
adc
cmp
add
jmp
fdivs
testb
push
repnz
sub
xor
mov
out
mov
pop
mov
imul
jl
sub
leave
gs
mov
dec
lret
ret
xchg
or
and
xor
insl
adc
aad
shll
cmp
xor
add
sub
jp
sbb
lea
xchg
decb
dec
enter
mov
adc
rcll
cwtl
test
into
test
arpl
xchg
fstpl
jae
jbe
scas
inc
or
xchg
test
movsl
hlt
icebp
xchg
dec
pop
and
lock
shrb
stc
sub
mov
test
jne
les
jbe
lods
fdivs
xor
sahf
sbb
int3
or
sub
sti
adc
mov
fsubrp
icebp
aaa
inc
mov
cmpsb
mov
cmpsb
push
adc
insb
push
push
xchg
mov
push
add
mov
sub
and
xchg
dec
repz
cmpl
fstps
test
loopne
pop
pop
dec
stc
repz
jae
fmulp
sahf
jns
decl
mov
in
in
daa
rcrb
mov
sub
iret
movsb
mov
adc
enter
push
mov
push
pop
scas
test
enter
insl
icebp
subl
mov
adc
push
add
mov
push
in
pop
sub
js
in
mov
jecxz
mov
andl
sbb
inc
stc
pop
adc
jnp
pop
popf
xor
or
pop
sub
inc
addr16
mov
out
sarb
daa
xor
inc
pop
add
sbb
sub
cmpsb
jg
mov
pop
add
outsb
sub
xlat
sarl
pop
scas
inc
dec
insb
lret
add
dec
scas
or
lock
mov
pop
mov
inc
add
sbb
or
dec
repnz
cmp
lret
sahf
out
aaa
xlat
int3
pop
bnd
ret
jl
or
scas
fimuls
or
xchg
lret
inc
push
xor
faddl
cmp
ret
jmp
out
jb
push
mov
cltd
call
jge
int
stos
or
dec
dec
fisubs
icebp
jmp
jns
cmp
add
nop
clc
fnstenv
test
push
iret
inc
xorl
in
int
cmpsb
jmp
in
lock
cld
popf
roll
out
jge
jecxz
jecxz
push
inc
mov
cmp
mov
xchg
aaa
rcll
sbb
xor
pop
or
jmp
jmp
and
adc
jmp
test
push
adc
stos
arpl
xchg
cmp
sub
loop
loopne
add
daa
mov
add
jb
inc
pop
cmp
insb
imul
sub
jb
or
cmp
int3
pop
fwait
sbb
push
push
push
mov
daa
aas
fstl
data16
subl
xchg
stos
jne
jmp
pop
dec
jmp
pop
xchg
add
mov
adc
pop
inc
inc
aam
fsubrl
arpl
cli
mov
adc
xchg
or
fwait
xor
mov
lcall
xor
iret
pop
shl
insb
cmc
in
lds
or
jp
sub
popf
aas
xchg
pop
int
stos
data16
push
scas
push
std
adc
or
dec
or
jae
mov
daa
mov
xor
stos
imul
cwtl
movsl
sbb
mov
or
ss
insb
inc
ret
add
adc
xor
push
aam
js
or
pop
and
aas
cmpsl
sub
inc
loop
sbb
add
push
imul
mov
mov
cmovb
jmp
sysexit
and
jg
cmp
das
pop
xor
jne
inc
pop
mov
mov
insb
pusha
pop
pop
push
lret
or
adc
imul
cs
sbb
aas
gs
sub
stos
add
ror
mov
adc
fildll
push
fwait
sub
xchg
and
adcl
inc
xchg
or
movsb
aam
imul
mov
and
aad
lock
pop
xor
sti
pop
mov
in
in
in
out
mov
fs
repz
cmpb
ljmp
xchg
mov
or
dec
xchg
mov
xor
xchg
cmc
enter
mov
mov
lds
fs
cmp
dec
or
pop
xchg
mov
mov
xor
mov
dec
xor
scas
imul
inc
insl
popa
out
pop
push
fisubrl
nop
and
hlt
cmp
adc
in
ret
test
xchg
sub
mov
add
fsubrs
dec
pop
xchg
repz
pushf
cmp
pop
mov
push
inc
mov
add
ret
lock
mov
push
imul
and
xor
cwtl
in
dec
repz
mov
out
mov
sahf
gs
stos
sub
enter
call
adc
fidivs
jle
test
adc
xchg
inc
shlb
aam
xchg
adc
mov
mov
sti
pop
lahf
scas
stos
mov
les
clc
shll
cmp
xchg
scas
push
scas
and
jb
repnz
mov
inc
and
in
imul
mov
testb
cmpsb
idivb
jg
adc
mov
mov
add
data16
aad
adc
in
outsb
test
sar
call
pushf
ret
and
mov
pop
lock
pop
mov
add
pop
aas
xchg
js
dec
or
mov
testb
fwait
sub
iret
leave
insb
jno
aaa
daa
push
sahf
subb
popa
cmpsb
in
sbb
push
mov
xchg
lret
pop
neg
ret
clc
aaa
lret
xor
and
or
iret
mull
aaa
daa
nop
sti
xor
repnz
push
lea
call
adc
test
jo
gs
jb
ja
test
or
dec
je
mov
mov
es
test
fnstenv
mov
es
xchg
arpl
sub
mov
shll
sub
pushw
lods
lret
aaa
in
and
mov
mov
push
sahf
add
jg
in
cwtl
fs
push
stos
push
dec
call
divl
add
in
inc
and
add
mov
dec
sbb
pop
add
adc
pop
sub
cmp
xor
sub
jns
jmp
ja,pt
cmpb
sub
in
xchg
xchg
hlt
lods
lds
in
xchg
cs
test
loop
and
test
or
pop
jne
roll
gs
sub
lcall
cmpsl
test
ja
ss
mov
mov
es
adc
add
or
inc
inc
js
dec
aas
inc
jmp
xor
es
fwait
xor
inc
jb
jae
adc
pop
or
xor
mov
fsubs
popf
xor
add
les
scas
inc
in
sub
out
cltd
insl
xor
xchg
ja
add
insb
insb
sti
inc
jl
mov
arpl
or
adc
ljmp
pop
inc
negl
lret
sbb
push
push
add
push
sub
clc
addr16
ljmp
and
xchg
lea
dec
sbb
push
fadds
fs
and
in
call
jbe
jg
adc
pop
outsl
bound
push
cli
mov
cwtl
sub
out
and
stos
sbb
push
xchg
rol
test
mov
or
ljmp
push
jbe
repnz
sbb
dec
mov
inc
sub
nop
testl
push
xchg
xor
pop
lods
std
addr16
es
jno
lahf
add
mov
test
test
popf
pop
mov
xchg
out
das
sub
mov
jae
sti
shlb
cwtl
cmp
leave
icebp
test
nop
mov
cmp
shlb
sub
push
std
mov
dec
sbb
add
xor
pop
inc
lahf
xlat
scas
fmuls
xor
lea
pop
test
nop
adcb
ficomps
icebp
in
je
out
jne
pop
cmpsb
sbb
cmp
pop
add
mov
stos
mov
out
repz
inc
icebp
int
lods
xlat
cmc
xchg
lret
add
nop
cld
adc
out
xor
mov
push
xchg
cmp
cmc
in
xlat
mov
cmp
cmc
pop
sbb
mov
dec
iret
cmovo
pop
inc
dec
mov
loopne
pop
rcrl
xor
xor
arpl
sub
xorb
pop
jmp
cmp
xor
data16
mov
int3
cli
dec
adc
inc
addr16
dec
out
fucomp
lret
das
ret
mov
mov
cwtl
add
xchg
xchg
pop
loope
pop
enter
bound
arpl
test
mov
lock
js
adc
inc
loope
mov
lds
je
imul
dec
cmp
nop
js
push
movntq
outsb
sub
movsl
rolb
sub
and
xor
es
sbb
adc
pop
push
sub
or
shlb
add
mov
hlt
rcll
ror
xorl
scas
and
imul
mov
aam
push
pop
mov
adc
cltd
loope
add
or
cmp
cli
repnz
lcall
mov
movsl
jmp
jge
pop
push
lahf
gs
cmp
xor
or
mov
in
stos
repz
cmp
mov
cmp
mov
in
lods
dec
mov
mov
mov
and
aam
repz
pop
out
or
jmp
nop
gs
pop
insl
in
es
jne
mov
push
jmp
mov
inc
push
insb
int
nop
or
insb
cmp
dec
loop
ret
pop
das
mov
jg
jnp
shlb
add
mov
lret
int
clc
xchg
test
xor
and
adc
testl
and
in
loopne
push
je
add
jecxz
or
enter
arpl
inc
mov
cs
pop
pop
xchg
add
mov
push
ja
cmpsb
adc
and
add
jns
jl
leave
sbb
jne
add
xchg
cwtl
jmp
cmp
xchg
xchg
cli
sub
fadd
das
push
or
sbb
inc
adc
lcall
adc
cli
or
mov
mov
fcompl
adc
xchg
or
mov
in
repz
pop
sbb
pop
ja
add
mov
aad
or
pushf
shl
out
js
int3
mov
fs
ljmp
inc
mov
enter
adc
inc
pop
and
movsl
jmp
inc
inc
pop
stc
cmc
imul
sub
mov
mov
lods
dec
mov
aad
pop
xor
outsb
out
pop
cmp
sub
sub
mov
hlt
stos
gs
int3
outsb
cvtdq2ps
rep
sub
xor
fistl
into
push
lods
inc
sub
pop
sarb
push
repnz
add
mov
out
pop
inc
sub
mov
cmp
cmp
xchg
mov
repz
add
push
sub
loop
testb
pmaddwd
xchg
push
gs
add
fdivr
fildl
or
out
in
sub
clc
repz
std
and
imul
enter
xchg
mov
adc
popl
dec
lds
mov
push
add
popl
adc
xor
adc
je
lret
in
dec
cmp
imul
cmp
mov
xchg
int3
xchg
adc
jbe
std
outsl
mov
mov
in
testb
int3
xor
sub
test
js
test
sub
mov
scas
xor
inc
mov
jg
fldl
mov
mov
imul
pop
repz
stos
ds
fs
sub
jne
push
ljmp
daa
cmpsl
jecxz
ljmp
inc
outsb
jecxz
pushf
xor
insl
loopne
add
adc
add
push
clc
inc
jo
pop
lahf
das
out
movsl
and
inc
and
push
inc
inc
loop
mov
push
cs
fstpl
jno
add
xchg
bound
fisttpl
adc
xor
mov
and
mov
out
xor
xor
aad
movsb
loope
lock
insb
rcrb
int3
fwait
and
insl
cmp
or
dec
mov
bound
inc
mov
jge
movsl
xor
pop
mov
or
dec
pop
lock
stos
mov
cwtl
mov
sbb
out
push
xor
into
outsb
adc
pop
dec
adc
jne
test
mov
lea
stos
imul
arpl
jp
jb
daa
testb
ds
mov
pop
pop
xor
xchg
lea
bound
inc
dec
fidivrs
shll
fucomp
aad
stos
mov
mov
lock
cmp
xlat
xchg
pop
mov
mov
xchg
add
push
pop
inc
xchg
sub
mov
xor
je
jge
mov
cmpsb
cmpl
mov
adc
icebp
repz
cmp
enter
fcmovnb
jae
xchg
mov
inc
out
xchg
mov
je
dec
js
cmp
xchg
lods
or
rcrl
das
mov
mov
aaa
add
jae
and
outsl
daa
sbb
or
push
add
and
push
or
add
jae
mov
sar
mov
adc
mov
add
pop
dec
outsl
fsubr
sahf
neg
rdpmc
mov
push
dec
rcrl
data16
fs
cmp
push
aam
ss
sub
sub
fsubl
insb
inc
dec
push
dec
test
imul
push
das
xor
insl
shrb
movaps
dec
sub
pop
sub
push
jb
lock
jecxz
lods
clc
or
add
push
das
mov
bsr
call
int
insl
icebp
pop
sbb
jns
or
and
loopne
jnp
test
dec
mov
pusha
push
inc
push
cmp
inc
xor
sbb
loope
lock
mov
jae
ja
hlt
insl
data16
mov
les
sbb
xor
in
je
pop
push
out
cmp
aas
push
add
or
test
sbb
jbe
popl
inc
cltd
jb
push
or
sti
es
cmpsl
popf
out
sub
inc
xor
shrb
addr16
mov
into
lcall
sarl
jecxz
lret
dec
fiadds
addr16
xor
insb
pushf
lods
and
mov
add
xor
daa
sub
scas
or
xor
pop
iret
roll
leave
in
xor
xor
xchg
mov
jbe
movsb
jmp
daa
cmp
dec
push
or
imul
int3
add
mov
stos
sbb
filds
mov
mov
xchg
adc
mov
mov
in
nop
icebp
pop
loopne
stos
rcll
xchg
lds
leave
pusha
sbb
xchg
dec
mov
loopne
fwait
ss
in
sbb
das
cld
shlb
push
mov
arpl
cmp
xchg
pop
loope
addr16
lret
je
movsb
inc
inc
sahf
hlt
adc
xchg
nop
lret
jle
xchg
out
mov
mov
fsubl
push
adc
dec
fstps
sub
sub
cmc
jns
or
pop
cvtps2pd
xchg
push
roll
test
cwtl
sbb
sub
cli
ljmp
js
cli
xchg
xor
cmpsl
aad
xor
loop
insb
pmulhuw
sub
jge
jmp
frstor
sbbb
xchg
hlt
leave
insl
mov
aam
or
pop
inc
mov
nop
xchg
xchg
dec
ret
mov
movsl
imul
aam
int3
fcmovu
bound
push
mov
fcompl
xchg
pop
pop
fildll
xor
shrb
and
sub
lahf
or
mov
push
sub
mov
push
inc
loopne
or
roll
das
sub
test
nop
dec
aam
stos
mov
lcall
movsb
daa
mov
sbb
jmp
shrl
mov
movsb
lods
repz
repnz
adc
jmp
xchg
mulb
or
pop
push
jg
push
fdivrp
and
dec
into
mov
jns
jg
jge
fildll
fbld
or
adc
mov
mov
push
ret
and
jle
inc
out
add
cmp
lret
fsubrl
jle
cld
xor
mov
and
stc
pop
aad
iret
push
ljmp
add
jno
or
es
pop
or
dec
insl
test
xlat
aaa
inc
adc
loop
push
out
adc
add
repz
outsl
inc
cmp
test
jns
in
lock
mov
shr
es
jns
adc
aas
cmp
aaa
lds
mov
or
ja,pt
xlat
xor
sahf
shll
dec
outsb
sahf
mov
adc
add
pusha
enter
or
jecxz
sbb
mov
les
stos
fists
shl
out
jbe
leave
bound
arpl
es
movl
push
xchg
nopl
adc
mov
inc
stc
lret
mov
scas
jp
xchg
mov
loopne
dec
cmp
and
lcall
jns
daa
xchg
lock
cmp
xchg
xor
sbb
push
xchg
lods
psubsw
adc
dec
xchg
in
jmp
jne
lahf
pop
js
dec
addr16
sub
pop
sahf
hlt
mov
ret
leave
cmp
cltd
movsl
into
enter
xchg
push
popa
mov
mov
push
dec
push
sbb
cwtl
push
sbb
ss
pop
and
xlat
mov
push
pop
cmpsl
ffreep
iret
dec
pop
push
push
push
aad
push
mov
xlat
test
movsl
mov
fsubrl
sub
or
rcrl
mov
icebp
xchg
lret
in
loopne
sub
out
mov
push
cmp
xchg
ss
ret
inc
mov
xor
enter
insb
aas
inc
lahf
sub
mov
jp
add
push
inc
push
and
scas
or
je
jecxz
mov
adc
iret
dec
sbb
mov
cmpsb
js
call
xor
sbbb
mov
jb
enter
into
leave
jo
pop
fisttpll
jge
jnp
test
dec
fmuls
push
mov
pcmpeqb
mov
outsl
in
mov
inc
outsb
pop
dec
roll
adc
xchg
sti
add
lahf
inc
sub
in
inc
pusha
push
sub
insl
sub
and
adc
pop
mov
cmp
jmp
lods
adc
xor
sbb
mov
or
jo
pop
icebp
lret
jae
jns
dec
das
in
adc
divl
add
jp
and
in
add
mov
pusha
das
lahf
aad
mov
in
mov
xchg
loope
xchg
push
sbbb
mov
repnz
push
nop
mov
xchg
xor
mov
into
out
dec
mov
push
lds
add
enter
cmp
push
cmp
sub
lods
stos
sub
xor
mov
pushf
pop
adc
dec
xor
sub
int
mov
push
cmc
cli
fistps
js
and
stos
std
clc
push
lahf
cmp
sbb
sub
cwtl
das
sbb
je
incb
add
or
lock
cli
cmp
cmp
frstor
test
sti
js
sbb
jb
mov
lock
and
inc
mov
sti
lods
push
mov
in
sbb
inc
sub
addr16
inc
ret
pop
insb
arpl
and
jge
sub
ret
sub
rcll
bound
shrl
dec
aas
int
mov
inc
fwait
sbb
rcrb
sub
jne
divl
rclb
dec
mov
mov
and
loope
negb
mov
sub
call
add
int3
xchg
push
cmp
repz
sub
setnp
xchg
test
test
cs
ficoms
jle
lods
inc
push
push
pushf
clc
pop
je
dec
pop
test
inc
out
mov
sub
aad
and
or
scas
mov
cmc
and
xchg
dec
sbb
adc
std
jmp
repz
cwtl
mov
mov
mov
loop
test
cmp
jb
mov
lods
gs
mov
sbb
dec
mov
pop
jmp
lock
and
lcall
add
push
call
mov
pop
inc
push
mov
out
cli
push
aas
repnz
mov
xor
jl
lcall
test
sub
adc
rorl
cmpsl
inc
outsl
jle
inc
stos
mov
fsubrs
xor
or
rclb
dec
jne
jmp
mull
enter
mov
cmpsl
pop
lcall
pop
push
add
loopew
lahf
push
or
loopne
pop
cli
orl
mov
movsl
outsl
add
xor
mov
shl
jae
jne
jmp
jb
ret
add
adc
lahf
outsb
sbb
in
mov
mov
inc
pop
and
or
sub
sub
shrl
add
xor
daa
iret
addr16
lds
xor
dec
js
or
xchg
adc
lock
imul
mov
xchg
sahf
and
out
mov
sbb
push
pop
repz
stc
pop
data16
mov
xor
cmp
ljmp
test
pop
jae
push
sbb
sub
pop
lahf
adc
jecxz
das
test
into
into
add
mov
ss
pop
pop
movsl
jns
dec
cmp
or
arpl
mov
dec
ja
lret
xor
pop
push
xchg
daa
mov
jmp
inc
push
dec
xchg
inc
cmc
pop
dec
leavew
aam
mov
jl
sarl
stc
push
test
xor
cmp
jmp
loope
sub
les
mov
in
out
scas
xchg
pop
or
jecxz
pop
ljmp
push
adc
sub
jl
lods
mov
stc
add
ljmp
mov
and
adc
mov
mov
fwait
sahf
push
push
xlat
mov
mov
adc
adcb
jae
sahf
lods
fwait
in
push
leave
jb
push
mov
testb
addr16
or
push
movsb
add
nop
lods
adc
pop
push
xchg
add
pop
cmp
addb
aas
sbb
push
out
hlt
inc
sub
repnz
pop
jg
scas
inc
in
fs
mov
xor
call
fninit
mov
jg
xchg
jg
mov
sbb
add
jne
sti
or
xlat
cmpsb
mov
in
adc
pop
jo
int3
subl
dec
mov
popa
inc
cmp
push
push
xchg
or
pop
xor
or
sarl
ja
pop
and
insb
test
xchg
xchg
adc
inc
daa
push
cmpsb
in
cmc
mov
gs
mov
push
adc
mov
xchg
sti
jnp
icebp
jg
lea
mov
push
dec
adc
js
adc
or
repz
mov
sbb
aas
sub
push
pop
rol
std
add
add
xlat
sub
add
out
sti
lods
fstpl
xor
sbb
imul
sarb
xchg
xchg
xchg
fs
push
enter
scas
adc
ds
push
inc
jge
mov
xchg
aad
shr
mov
mov
js
mov
jo
push
push
ljmp
cmp
xchg
push
mov
adc
out
lods
mov
xchg
sbbb
je
in
ds
movsb
add
push
dec
dec
cmp
into
test
out
std
sub
mov
adc
inc
cmp
outsb
mov
jne
call
lahf
aaa
adc
rolb
push
movb
xor
jbe
mov
xor
loopne
cmp
sbb
jecxz
int
push
clc
cmpsb
iret
push
jmp
mov
js
orl
sbb
mov
pushf
push
xor
mov
out
test
or
or
mov
imul
movsl
pusha
lea
mov
stos
inc
je
or
push
nop
nop
xchg
and
cmp
dec
out
repnz
mov
mov
cwtl
testl
add
loopne
shrb
jmp
sbb
or
pushf
jb
pop
mov
outsl
dec
outsl
out
mov
outsl
sub
inc
cmpsl
xchg
dec
xor
std
gs
cld
daa
aaa
in
insl
stc
out
jmp
cwtl
aaa
insl
mov
out
fstpl
push
out
add
xchg
faddl
mov
inc
sbb
fistl
mov
jno
lods
lds
std
sbb
loop
jns
xor
test
and
jmp
pop
sbb
lret
mov
cld
cltd
inc
mov
mov
insl
sub
dec
mov
add
mov
mov
sub
in
cmp
push
push
mov
inc
inc
cmpsb
inc
pop
roll
pop
cs
add
mov
daa
ds
sarl
add
test
and
icebp
xor
pushf
dec
jnp
in
js
dec
add
add
fs
das
mov
scas
xor
jg
pop
sub
sub
mov
xor
insb
add
mov
and
js
mov
dec
fbld
ret
push
jb
push
fmulp
xchg
and
in
inc
cmp
mov
xchg
and
push
pop
sbb
mov
pop
iret
adc
adc
fistpll
insb
cmpl
js
sbb
mov
call
dec
sbb
loopne
mov
out
cltd
pop
mov
sub
cmp
jl
dec
gs
jmp
mov
addl
repz
mov
adcl
pop
mov
fwait
cmp
loopne
jg
aaa
rorl
cwtl
jge
pop
lods
add
scas
sbb
pop
mov
jns
imul
mov
and
icebp
std
dec
mov
into
insl
outsl
inc
sbb
mov
cmp
outsb
aam
xchg
pop
scas
mov
clc
push
inc
int3
or
push
aaa
push
add
inc
and
sarb
add
pop
cmpsb
movsl
mov
xor
fmuls
mov
stos
sbb
popa
icebp
inc
xadd
jns
cs
mov
cmc
in
in
loopne
shll
push
push
loope
iret
adc
sub
pop
inc
dec
addl
mov
push
pop
mov
shl
fcmovbe
test
adc
pop
xor
jbe
or
daa
jl
lds
sbb
adc
adc
cltd
inc
add
mov
leave
sub
stc
add
push
js
jp
sbb
in
cmp
sti
stc
int3
jbe
mov
sarl
lods
and
adc
pushf
inc
pusha
loop
jo
mov
dec
lea
xchg
cmpsl
loopne
pushw
dec
add
push
push
sbb
pop
mov
jne
add
sub
add
outsb
bound
xchg
mov
imul
ret
in
and
jbe
jge
stc
imul
xor
push
pop
jmp
dec
and
xor
sub
daa
add
rclb
push
adcl
or
and
es
xor
mov
bnd
mov
andl
fs
lcall
popf
pop
or
into
mov
ja
loop
imul
push
clc
jo
xchg
fs
xchg
outsl
shll
addr16
je
jae
mov
mov
xor
clc
fidivrl
dec
enter
and
ljmp
jno
pop
mov
push
mov
sbb
sbb
popa
popa
cmpsb
xchg
mov
add
or
int
imul
dec
lods
dec
or
xchg
outsb
mov
in
sub
fcmovnbe
cmpsl
and
sbb
pop
pop
sub
cmp
scas
push
fadd
jo
and
les
xchg
xchg
sti
or
xor
xor
sub
test
pop
push
loope
ja
xor
pop
iret
loope
fs
aam
xlat
in
ret
je
inc
out
into
pop
adc
pop
or
mov
dec
out
out
dec
push
mov
loope
fidivrs
iret
cmp
and
das
cwtl
or
push
cmp
insl
cltd
test
cmpsl
sbb
push
loopne
aad
fs
pusha
cli
and
cmpsl
insb
pop
shlb
dec
pop
mov
aad
inc
sub
mov
je
xor
push
xor
dec
test
sub
push
push
add
or
push
les
lcall
mov
ja
ss
pop
clc
cmp
cmp
pop
in
jmp
mov
xchg
push
ds
inc
mov
aam
jo
cmp
enter
stc
and
arpl
xor
jl
mov
mov
iret
sar
dec
cltd
inc
push
lea
ret
push
mov
clc
test
inc
les
popa
loop
adc
mov
loop
bound
push
repnz
aad
adc
clc
cltd
mov
mul
cmp
cli
cmp
adc
xor
mov
mov
adc
jne
cli
xchg
orb
gs
shlb
cmp
popf
test
xchg
mov
inc
fsubrl
das
push
scas
shlb
mov
fmul
iret
hlt
xchg
movsl
xchg
fadd
push
les
inc
inc
repnz
ret
lcall
out
adc
xchg
pop
dec
movb
data16
out
mov
jnp
lods
int3
mov
mov
mov
lods
enter
imul
sbb
mov
jp
fldcw
jno
push
arpl
or
das
xchg
lds
sbbb
add
and
mov
pop
xchg
js
dec
inc
adc
ret
xchg
bswap
pop
testb
mov
sub
or
mov
icebp
jns
xchg
push
mov
push
mov
or
aad
fidivs
dec
sbb
or
nop
lods
imul
mov
out
lods
dec
movsb
push
lret
mov
xchg
push
push
adc
out
push
pop
xchg
cmp
push
mov
mov
inc
cmp
mov
bound
dec
cmp
and
sub
add
sbb
jne
mov
imul
lcall
sahf
or
nop
xor
xchg
ja
and
enter
jne
push
jmp
sbb
sbb
das
ja
adc
jns
push
inc
clc
xor
movsb
call
out
lcall
insb
add
cmp
add
scas
mov
es
in
add
sub
into
fldenv
ljmp
aam
lret
and
repz
pushf
dec
pop
fidivrs
xchg
lock
or
shlb
movsb
stc
mov
pop
add
ficoms
pop
lcall
aas
roll
adc
fnstenv
and
adc
scas
cli
xchg
and
pop
xchg
and
scas
and
add
incb
adc
and
mov
pushf
xchg
mov
js
pop
jne
cs
cmpb
cmp
inc
xchg
and
leave
push
pop
xor
pop
add
fdivs
sub
scas
call
pop
stos
cli
inc
xor
xchg
or
sub
andb
mov
xchg
sbb
das
inc
inc
push
lods
push
xor
sbb
in
sub
jb
pop
ljmp
les
xor
mov
test
jo
inc
test
imul
add
mov
mov
clc
xchg
sbb
stos
das
or
enter
adc
ja
jmp
in
sbb
add
push
mov
out
cli
xchg
mov
mov
in
jg
in
jp
adc
dec
aad
ja
sbb
movsl
subl
adc
and
cltd
outsl
pop
mov
adc
xchg
sub
jnp
inc
mov
xchg
xchg
test
xchg
movsb
sbb
hlt
testl
sub
bound
stc
inc
push
and
cmpl
fstps
or
loope
or
mov
repnz
loope
test
loope
push
sub
push
cld
andl
and
push
xchg
test
out
sti
mov
mov
pop
push
mov
sbb
push
cmpsl
sub
sub
push
loopne
jnp
push
and
pop
add
jno
and
stc
and
pop
dec
jg
iret
mov
rorl
pop
and
test
es
call
jne
xor
cmp
mov
andl
daa
popa
xor
popf
push
dec
push
or
add
and
pushf
fldl
lcall
mov
cmp
loope
push
mov
lahf
cmp
insl
push
or
gs
xchg
repnz
mov
enter
into
lea
js
je
xchg
cmp
fcomps
jno
addr16
stos
jno
adc
fs
push
out
push
nop
mov
jecxz
out
inc
mov
lods
and
jo
adc
cs
inc
pop
sbb
cmp
lock
cmp
pop
call
loope
push
mov
mov
mov
inc
jnp
push
lds
cld
stc
inc
loop
mov
xchg
push
dec
xchg
movsl
push
push
add
push
jg
push
push
pop
pop
cwtl
jbe
mov
fisttpll
cltd
and
mov
loopne
pusha
pop
xchg
push
out
dec
ret
jb
test
xchg
loope
js
imul
and
iret
pusha
cmp
iret
mov
int
out
sub
lock
adc
mov
jo
sub
mov
stos
push
stos
or
mov
lds
cmp
call
cmpl
dec
sub
jne
ffreep
add
pop
mov
imul
mov
loop
jo
mov
loop
push
enter
pop
es
jl
nop
and
in
inc
jp
add
pop
pop
aad
je
mov
xor
stos
test
fistl
xchg
sbb
inc
cmp
fidivrs
cmp
jmp
mov
sbb
pop
and
or
outsb
leave
or
cmp
xchg
jecxz
inc
xchg
inc
pop
mov
test
inc
pushf
cmp
leave
cmp
andl
jbe
stos
aam
mov
inc
mov
inc
adc
ret
lea
jmp
pop
mov
call
jbe
jns
call
and
adc
test
jecxz
jnp
out
shr
scas
fsubr
push
xrelease
mov
psubd
sbb
cmpl
cmp
ljmp
in
repnz
ss
adc
shl
xchg
sbb
ja
ficoml
cli
adc
gs
movsb
mov
pop
out
xchg
ret
dec
xchg
pop
outsb
popf
aam
repnz
cmp
mov
shlb
dec
push
xor
mov
fidivl
aam
push
call
fs
mov
add
daa
cmpsb
es
push
dec
sbb
mov
adc
jno
add
inc
push
icebp
or
mov
pop
das
test
jo
mov
pop
es
jge
xchg
mov
push
in
out
and
mull
and
shlb
jbe
pop
rolb
repz
xor
aas
lahf
xor
fsubrl
popa
pop
rclb
mov
incb
fisubrs
fiaddl
mov
rorb
pop
mov
dec
dec
aam
in
insl
sbb
inc
out
and
sbb
ja
cmc
push
xorl
leave
xchg
pop
ljmp
ljmp
xchg
cmp
test
inc
std
jne
aas
les
xchg
ficoms
ljmp
pop
mov
jl
or
test
or
push
sub
leave
pop
fcoml
outsl
out
sub
aaa
push
adc
pop
mov
int3
shll
dec
mov
dec
xor
xor
mov
dec
test
push
iret
int3
pop
ret
or
dec
jne
cwtl
jge
iret
loope
dec
loop
jecxz
or
test
cli
pop
adc
mov
into
stc
test
pop
mov
mov
mov
cmpsl
dec
into
mov
xchg
cmp
jo
jns
pop
add
xor
call
rorl
cltd
push
pop
icebp
cmc
mov
daa
subb
or
cmp
repnz
sub
add
push
push
jns
cld
rcl
test
in
mov
popa
loopne
ja
jmp
insl
loopne
cltd
mov
push
loop
mov
sahf
loop
cmp
arpl
adc
js
pop
add
adc
jl
jae
dec
or
mov
pop
pop
cmpsl
fwait
out
lock
ljmp
add
call
sub
sub
cmp
jle
xchg
jne
andl
jg
xchg
cld
popf
mov
mov
xchg
nop
daa
xchg
or
xor
repz
adc
in
inc
push
in
neg
push
in
xor
mov
fwait
mov
push
out
sbb
adc
inc
xrelease
and
push
sbb
fs
outsb
in
pop
ret
out
sbb
sbb
dec
lcall
sbb
fwait
xchg
dec
cmpl
or
mov
jnp
and
inc
lods
xchg
mov
add
popa
mov
rcrl
ja
xor
pop
pop
lods
cltd
xchg
mov
dec
call
xor
and
add
leave
pop
js
in
repnz
sahf
test
cmp
insb
xchg
jae
dec
popf
das
xchg
pop
jo
leave
add
int
scas
push
and
pop
enter
out
pop
outsl
xchg
push
mov
popf
sti
push
mov
push
xchg
jns
jg
sahf
dec
mov
imull
jge
jmp
sti
std
in
out
jno
push
jnp
mov
cli
inc
repnz
sbbw
les
pop
adc
in
ret
pop
mov
push
push
cmp
movsl
lods
mov
sbb
out
fbld
pop
dec
cmp
mov
push
cmp
mov
daa
jmp
mov
add
rorb
repz
dec
stos
ja
sub
push
es
fistps
out
fimuls
bound
dec
outsl
add
mov
stc
add
fwait
imul
add
mov
mov
add
mov
mov
insb
stos
adc
idivb
inc
stos
scas
adc
mov
repnz
ljmp
shlb
ror
inc
test
ljmp
lret
dec
lods
popf
jmp
push
mov
push
repnz
js
pop
xor
xchg
dec
lret
jae
adc
sbb
and
xor
push
test
cli
jne
int
mov
loop
fcoml
data16
sbb
sub
out
test
jmp
mov
push
xlat
mov
fcmovnu
rcr
rcl
test
jne
xor
test
test
sub
pop
mov
xor
das
xor
sbbb
lods
push
and
idivb
pop
or
cwtl
or
shl
cmp
xor
mov
mov
or
mov
ja
imul
popf
icebp
rclb
jge
inc
cltd
pushl
lea
jecxz
ljmp
mov
jmp
jl
insb
int
inc
pop
out
rolb
jbe
lcall
sbb
fistl
jp
dec
out
inc
xchg
and
jne
sub
or
sub
inc
fdivr
add
dec
sub
and
decl
push
cs
test
popa
adc
push
push
lahf
cmp
outsb
adc
mov
jl
xor
mov
cmp
jne
fcmovnu
scas
fwait
or
push
imul
mov
dec
cmp
mov
xor
faddp
leave
jle
xchg
js
popa
pop
mov
notb
je
sbb
ret
pop
aam
xlat
test
test
hlt
mov
hlt
mov
inc
adc
xchg
xor
sub
jne
xlat
aas
xchg
mov
xor
fisttps
adc
push
fstpt
add
jne
cmpb
sub
mov
ret
inc
dec
div
cmc
push
andb
sub
les
mov
mov
mov
pop
ret
out
sbb
mov
sub
push
lahf
sub
mov
in
and
push
fisttpl
pop
enter
pop
jno
pop
addb
aas
sub
dec
xchg
int3
rcrl
aaa
sub
cmp
subb
and
lea
fidivs
push
sub
loope
dec
adc
aam
pop
sub
lea
rorb
xchg
jnp
outsl
ficomps
rorb
stc
pop
xor
aad
aaa
call
or
or
or
pushf
mov
or
arpl
pop
jnp
inc
push
into
test
fcompl
stos
pop
adc
in
stos
fldpi
sub
insb
and
sti
es
popf
leave
sbb
hlt
fsubs
xor
divl
test
daa
xchg
imul
rorl
or
pop
out
pandn
insl
mov
dec
lods
rorb
mov
adc
rep
clc
iret
sub
xor
jne
mov
xor
lods
or
repz
mov
xor
out
or
loop
xor
dec
or
sbb
pusha
ds
loop
aaa
cmp
cld
inc
mov
push
pop
mov
popf
pusha
dec
cltd
stos
test
testl
dec
dec
jb
loopne
int3
out
cmp
xor
mov
add
push
test
jle
mov
andl
dec
xchg
in
cmc
mov
outsb
xchg
xchg
shll
roll
and
std
push
push
lret
aad
movsl
inc
cmp
out
or
xchg
cs
sarl
xchg
sbb
sub
mov
jo
lret
dec
add
push
sub
xor
push
insb
inc
in
push
out
dec
dec
pop
addr16
fwait
sbb
out
inc
inc
fadd
rcl
fistpll
fildll
cmp
inc
inc
lret
pop
mov
jns
sbb
shl
in
lret
out
mov
cwtl
arpl
push
adc
or
cli
test
mov
adcl
or
ds
inc
push
jbe
ret
test
adc
push
push
jp
push
fs
int
insl
dec
inc
in
pmaxsw
inc
enter
pushf
push
add
inc
icebp
insb
imul
aas
sti
push
add
data16
test
arpl
orl
fdivl
xor
mov
rcrb
jmp
lds
sub
in
inc
pop
or
cltd
movaps
pop
sub
imul
mov
xchg
rcrl
push
rolb
test
test
pop
or
push
in
rorl
and
movl
adc
js
xchg
shrl
push
scas
mov
lds
cmc
aas
aaa
orl
scas
les
cmpsb
lret
mov
jbe
clc
xchg
jb
inc
pop
cmp
xchg
mov
setae
pop
das
fwait
push
js
hlt
lds
jo
adc
inc
bound
je
or
test
dec
mov
pop
xor
cmpxchg
sub
push
cli
push
daa
cmpsb
lock
in
cmp
adc
repz
add
stos
dec
lahf
sldt
mov
lea
pusha
std
adc
sub
dec
xor
add
jo
clc
in
sub
enter
sbb
rclb
inc
pop
leave
inc
iret
xor
ret
pusha
adc
adcb
sub
push
loope
push
movsl
je
jge
or
and
push
dec
or
cltd
cmp
das
xor
imul
fs
sarb
pop
mov
add
push
int
dec
and
cwtl
xor
aaa
clc
lcall
dec
stos
mov
fwait
std
inc
addr16
xor
ficoms
push
push
xor
jmp
xchg
or
les
sbb
push
sahf
cmpsb
pop
aam
jmp
or
mov
push
xchg
pop
or
jae
mov
xor
cmp
out
cmp
xor
cmpsl
and
jae
fistps
inc
add
sub
ljmp
lcall
jo
cmpsb
or
fistpll
test
lcall
or
sbb
jae
subl
inc
es
or
fidivs
cld
ficoms
rcrb
cld
xor
xor
adc
and
add
mov
sahf
xchg
xchg
and
or
sub
aad
test
test
mov
sbb
loopne
mov
insb
std
scas
ja
scas
adc
sbbl
jmp
add
leave
negl
pop
in
setg
outsb
ja
lcall
push
cmp
in
sbb
xchg
push
popa
sti
sub
sbb
lods
inc
pop
lock
lock
imul
loopne
test
sahf
mov
or
dec
jg
mov
pop
and
mov
imul
mov
lock
xchg
mov
insb
lock
test
test
arpl
and
aam
loopne
cmc
xchg
xor
push
rorl
sbb
jle
or
fsts
pop
arpl
or
out
cmp
adc
mov
inc
das
mov
fwait
outsb
and
das
dec
pop
in
scas
enter
and
test
popa
cld
rcrb
cmp
scas
dec
add
sbb
out
icebp
sub
andb
inc
idivl
add
hlt
test
jnp
fcoml
or
enter
loopne
cmp
in
sub
lcall
xor
movsb
mov
cmc
loopne
jp
and
shll
adc
jmp
xchg
lock
imul
xchg
dec
dec
or
jg
fwait
addl
xorl
test
ret
pop
pop
pop
sbb
out
fucomi
in
xchg
and
mov
cmp
test
inc
adc
clc
push
jge
push
sub
dec
ret
xor
sbb
inc
mov
mov
mov
mov
jae
enter
cld
adc
xchg
scas
mov
jae
jle
mov
idiv
jg
xchg
dec
mov
ljmp
loop
adc
fbstp
pop
cmp
push
adcb
insl
sbbb
adc
sbb
dec
repnz
mov
sbb
xor
push
fcmovne
iret
hlt
dec
lock
mov
outsb
insl
jmp
mov
jae
gs
mov
mov
xlat
pop
xrelease
adc
ss
in
