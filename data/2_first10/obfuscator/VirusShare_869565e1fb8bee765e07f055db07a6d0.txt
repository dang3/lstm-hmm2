lcall
add
add
add
incl
add
push
xor
push
push
mov
add
in
outsl
and
mov
add
add
xor
adc
clc
cmp
mov
idiv
and
jne
pop
pop
pop
xor
pop
add
cmp
mov
subb
push
sub
cmp
fcmovnu
outsl
cmp
jne
add
add
add
rorb
repz
fsubrs
and
push
inc
push
push
push
inc
xchg
sbbb
add
add
mov
mov
mov
cltd
mov
mov
outsl
pop
mov
mov
sub
dec
or
outsl
pop
mov
adc
mov
cmp
or
add
add
js
add
aas
jbe
push
push
scas
inc
push
imul
incl
add
add
mov
sub
pop
cmp
out
pop
popf
push
aad
divb
sbbl
and
popf
jnp
xor
jae
push
push
mov
add
push
push
jmp
pushl
mov
test
jbe
jmp
or
jo
cs
mov
add
add
cwtl
push
lods
jne
push
add
leave
pop
pop
setne
mov
nop
add
add
add
pusha
push
ja
test
addr16
out
je
push
call
out
or
shlb
add
add
add
sbb
sbb
or
add
or
fsts
out
or
add
addl
call
hlt
sbb
push
pop
mov
aas
add
movl
leave
push
mov
and
shrl
stc
jmp
mov
pop
aaa
adc
lret
dec
shr
rep
pop
inc
or
loope
push
rep
or
cmp
std
loopne
jo
add
add
push
add
cmp
and
add
inc
sub
or
insb
or
scas
or
movsl
mov
mov
add
add
mov
lods
mov
fnstsw
stc
test
jle
mov
xchg
inc
sarl
add
mov
inc
cmp
jl
movb
mov
in
call
mov
mov
cmp
jne
test
in
push
add
je
mov
mov
femms
add
pop
outsb
outsl
mov
or
add
adc
add
fisttpl
test
mov
adc
add
cmpb
adc
inc
and
je
cmp
inc
es
jbe
mov
add
jne
rclb
or
je
mov
js
pop
pop
out
je
add
add
add
sub
je
sti
fildl
push
or
sbb
or
add
jae
dec
dec
pop
nopl
imul
pop
push
mov
sarb
jne
mov
je
xchg
jge
add
add
fimuls
mov
and
cmp
and
pusha
sbb
jb
das
cmp
dec
dec
popf
mov
xchg
movsl
mov
orb
add
jp
pushf
mov
xor
dec
fucomi
cmp
dec
ja
decl
test
inc
add
add
cmp
pop
xor
sbb
and
and
push
sbb
imul
aas
mov
pop
add
add
add
out
repz
jecxz
ror
and
sbb
inc
mov
out
movswl
add
add
mov
mov
inc
xorb
xchg
dec
daa
jbe
jb
popa
adc
pop
dec
daa
inc
mov
sub
add
popf
add
fsts
and
sahf
mov
or
add
add
imull
push
sbb
data16
test
push
aas
cmpsb
dec
clc
fldl
dec
xor
stos
stos
lea
add
add
push
push
movsb
sub
test
adc
jae
dec
xlat
out
movsb
inc
leave
inc
mov
aad
sti
test
cmp
aam
in
jmp
mov
adc
inc
mov
shrb
mov
add
scas
call
jae
out
and
in
sub
or
add
adc
aad
sub
mov
mov
ret
and
push
dec
cwtl
lret
std
rcrl
adc
lods
dec
xor
in
in
shrb
ss
dec
or
sub
mov
jge
test
adc
insl
js
lods
mov
add
in
nop
in
mov
mov
les
ljmp
or
cwtl
or
or
sbb
js
call
fs
push
add
xor
dec
mov
popa
mov
cmp
add
add
or
mov
dec
mov
cs
or
adc
mov
xor
add
add
or
jecxz
out
lcall
les
loopne
jae
pushf
in
add
icebp
add
in
mov
add
repz
inc
hlt
push
loopne
shrl
and
scas
popa
mov
cmpsb
add
sbb
and
add
add
add
pop
push
push
incl
jge
and
test
xchg
xchg
sub
jne
in
add
and
add
add
or
cmpsl
xchg
dec
mov
enter
adc
jl
or
addl
and
sbb
push
or
orl
out
mov
sub
add
fisttpl
ficomps
sub
aam
mov
xchg
adc
and
loopne
jae
and
push
xorb
add
in
push
dec
mov
jp
add
xchg
cmpsl
sub
cmp
mov
add
inc
mov
cmp
cmp
ja
lock
cmp
incl
add
add
cld
ja
pop
js
or
rol
mov
fisubrs
pop
pop
xor
add
add
filds
andw
mov
divl
call
pop
jmp
arpl
stos
sbbl
add
xor
push
lea
testb
push
add
add
and
rcrl
sub
jmp
mov
negl
imul
pop
and
lea
xorb
in
push
mov
test
je
mov
call
add
inc
ret
jmp
xchg
sub
out
incb
jne
fs
add
fcoms
shll
dec
pcmpeqd
out
lret
subb
xor
push
and
cmp
testb
add
add
xor
and
cmpl
adc
cmp
mov
cmp
out
pushf
dec
jl
pop
or
into
add
ret
outsl
jp
pop
icebp
insb
insb
popa
das
xor
xor
add
add
sub
insl
jo
je
bound
cmpsb
push
cmpsb
mov
push
je
xor
popaw
jne
es
add
add
dec
push
add
das
das
arpl
addr16
imul
das
imul
add
add
cs
add
jne
je
dec
jge
inc
fcomps
jo
aas
push
jns
gs
in
add
add
xchg
push
push
inc
dec
pop
inc
jne
jb
outsb
je
outsl
add
insb
push
add
cmpb
jb
xor
jo
imul
insb
fwait
add
lock
popa
xor
or
psubq
sub
add
push
setle
push
fdiv
adc
and
adc
add
add
outsl
xchg
int
fists
inc
add
movsb
movsl
sti
lods
insl
cmp
pop
ja
fs
orb
add
add
imul
fcoms
dec
rdmsr
pop
adc
or
or
test
mov
adc
insb
mov
jb
inc
inc
mov
movl
cld
inc
add
in
adc
insb
pcmpgtw
add
incl
imul
popa
or
gs
inc
orb
pop
adc
nop
lods
add
outsl
sbb
jge
shrb
xor
add
xchg
sbb
jae
sbb
ficoml
rcrb
jae
push
jb
dec
add
orl
inc
daa
fwait
or
xchg
push
and
imul
mov
or
or
add
dec
popa
outsb
fs
fsin
imulb
cmp
cli
addr16
dec
bound
arpl
mov
push
gs
dec
gs
push
add
add
mov
push
popa
insb
jne
loope
dec
sbb
mov
xorl
jne
push
imul
insb
jbe
inc
arpl
pop
mov
nop
dec
add
insl
loope
punpckhdq
imul
sbb
ja
adc
insl
leave
inc
add
add
pop
push
outsl
imul
or
outsb
test
push
pop
imul
push
inc
ror
cmpsl
fnstcw
test
ja
and
sarb
sbb
or
outsb
and
or
sub
add
outsb
inc
push
push
lahf
gs
ret
adcb
test
adc
add
add
add
or
lret
mov
add
adc
or
lret
sbb
pop
je
cld
add
sarb
cs
or
pop
cmovns
and
dec
adc
pop
or
sbb
or
add
mov
aas
sub
sbb
push
sub
xor
add
push
pushl
mov
xor
mov
jg
loope
mov
adc
and
ds
or
pop
or
or
jl
add
or
pop
es
add
outsl
add
and
push
push
and
add
jp
adc
xor
fildl
negb
rolb
inc
sahf
add
fidivl
and
dec
ret
push
and
add
data16
add
cld
adc
sbb
xchg
in
fwait
shll
or
push
add
xchg
mov
pop
push
or
xor
les
add
jbe
pop
push
nop
and
dec
push
xlat
int3
dec
mov
in
push
inc
dec
mov
push
int3
in
inc
push
sbb
roll
or
out
inc
pusha
jb,pn
add
loopne
mov
sbb
sti
push
das
mov
inc
cs
enter
add
add
imul
gs
sbb
inc
daa
sbb
add
xchg
and
add
add
pusha
pusha
or
add
call
ljmp
insl
add
add
lods
push
fs
cmp
nop
xor
addl
pop
inc
add
mov
adc
jb
mov
inc
adc
jae
cmpb
cltd
jae
xor
sub
and
xchg
or
pop
xor
xor
leave
data16
popa
jne
inc
add
add
add
roll
sbb
add
cld
jbe
mov
inc
dec
jne
mov
jno
mov
add
mov
add
sub
mov
and
add
pop
mov
mov
andl
clc
add
mov
add
stos
jmp
lea
add
shlb
add
test
add
push
es
or
xchg
mov
fmuls
fmull
mov
xchg
pop
push
inc
mov
mov
mov
add
xor
push
fsubs
rol
sub
pop
lea
and
ja
out
pop
add
ret
mov
xchg
rol
ror
jnp
loop
movups
sub
add
shll
mov
add
push
push
push
push
test
shlb
and
andb
pop
push
pusha
or
add
lea
push
cmp
jne
sub
jmp
popa
pop
insb
int3
jo
jo
push
enter
movsb
sahf
jg
aas
out
icebp
mov
jg
cld
mov
fdivrl
les
jno
mov
sbb
jno
jno
dec
stc
mov
mov
stc
stc
jo
jae
add
dec
inc
dec
xor
add
cs
dec
dec
add
push
inc
push
dec
lret
fs
insb
jb
add
inc
push
push
push
push
or
pop
popf
push
dec
dec
inc
and
mov
push
push
xor
xchg
cwtl
ja
hlt
push
jo
jb
jb
cmp
push
mov
fs
test
ret
jb
add
and
leave
xchg
inc
mov
cs
inc
gs
mov
push
loop
sbb
push
lret
mov
dec
add
sub
adc
pusha
pop
add
sbbb
sti
dec
fsubr
lea
sub
xor
or
add
call
push
addr16
cwtl
mov
aas
jp
pop
mov
sub
add
aad
cmp
out
mov
jp
xchg
push
lret
lret
pop
jo
icebp
insl
sbb
add
cmp
add
and
cmpsl
leave
stos
mov
add
rorb
mov
jne
adc
add
int
pop
push
add
add
jbe
popa
mov
mov
cmp
scas
enter
loopne
scas
in
mov
je
scas
add
ja
lea
sar
call
xor
in
sub
xor
add
fildll
rcr
pop
or
sahf
in
mulb
xchg
insl
popl
add
inc
lods
add
cmp
jae
scas
in
icebp
dec
add
mov
dec
cmp
ja
out
add
add
xchg
cmp
aas
and
pop
dec
shrb
adc
lahf
inc
fisttpll
add
add
inc
pop
or
fmulp
leave
xlat
add
sbb
dec
dec
pop
jmp
shll
or
pop
add
pusha
decl
pushf
call
or
pusha
pushf
mov
popf
cltd
test
popl
cmpb
clc
xor
jmp
add
shll
add
push
add
aaa
or
mov
rolb
dec
sub
bt
cmp
push
das
add
into
add
shrl
adc
neg
dec
dec
pop
das
add
lret
clc
cmp
stc
add
sub
dec
je
mov
sub
jl
sbb
dec
jo
sbb
outsl
mov
movb
push
sub
popa
loop,pn
or
inc
cmp
pushf
cmc
sub
pushf
mov
mov
adc
mov
mov
in
add
pushf
mov
push
mov
pusha
push
add
aam
mov
jo
test
repnz
pushf
setae
rcr
mov
jae
push
add
mov
flds
mov
or
add
into
lea
not
inc
push
inc
int3
outsl
mov
out
sti
cs
sub
pushf
pusha
or
xchg
std
mov
or
mov
rolb
push
ss
movl
das
and
inc
cld
mov
enter
inc
pushf
xor
test
xor
sbb
or
sbb
addr16
push
mov
mov
fcoml
ret
xchg
pop
dec
mov
pop
add
pop
add
pop
clc
mov
lret
pop
shl
add
repnz
lds
pop
add
mov
neg
pop
cmp
fisubs
mov
fldcw
loopne
mov
cmp
add
or
sbb
mov
pushf
loope
sbb
pop
or
mov
sbb
sub
xchg
fcoml
xor
and
enter
or
stc
clc
pusha
stc
and
rcrl
pusha
and
loop
pop
sti
sub
test
push
call
shrb
mov
mov
add
pop
sub
pushf
dec
mov
or
xchg
jmp
pusha
repz
inc
loope
or
or
inc
jg
pop
mov
mov
je
adc
jo
push
dec
fiaddl
mov
pusha
pop
ja
or
mov
or
xchg
test
mov
aaa
pop
leave
jnp
add
or
adc
mov
cmpsb
pushf
subb
mov
cld
mov
adc
add
add
mov
sub
push
fisubrl
call
out
ss
repnz
dec
icebp
shll
mov
cli
sbb
push
push
mov
xchg
pop
std
dec
hlt
mov
xchg
pop
ficomps
shll
loopne
mov
sub
sub
adc
popf
loope
outsb
pop
sbb
mov
add
push
mov
push
popf
sarb
xchg
push
add
jge
cltd
xchg
or
cmp
lds
inc
movsb
sbb
lea
enter
enter
dec
incb
pushf
shll
in
mov
xchg
adc
add
cmp
rcl
adc
sub
lock
push
aaa
pusha
mov
mov
pop
cmp
stc
mov
fldenv
js
mov
ror
das
clc
sbb
add
cmp
jae,pt
nop
xor
test
dec
dec
and
add
rcrb
cmp
rcrb
and
sar
neg
rcr
sub
sbb
out
pop
das
pop
loopne
jno
add
std
cld
sbb
movsl
xchg
xchg
pusha
ret
adc
add
and
stc
or
pusha
pop
cli
mov
push
pop
mov
pushf
repz
aam
push
clc
inc
add
sbb
and
popa
addl
repnz
movb
mov
add
clc
cmc
xchg
or
ret
add
test
into
sub
xor
xor
xor
cmc
mov
add
cli
ror
rcl
add
and
mov
stos
imul
or
push
int3
add
xor
mov
pop
data16
adc
ljmp
or
jno
sub
jae
sub
shlb
lea
inc
shrl
ret
bnd
loope
cmpsl
mov
sub
mov
and
pop
add
mov
popf
movsl
cmp
mov
pusha
adc
ret
push
jne
pop
dec
data16
cmpsb
mov
fwait
adc
je
dec
jns
mov
mov
push
adc
cmp
rcrl
xchg
sbb
push
add
jb
aam
lcall
and
mov
and
lret
sbb
xor
inc
mov
cmp
sub
popf
data16
push
xchg
dec
popf
xchg
jno
cmp
mov
push
cmp
adc
mov
ja
jnp
mov
icebp
cmp
add
sbb
in
xchg
pusha
out
xchg
mov
or
in
push
stc
or
xchg
jmp
push
add
sbb
mov
loop
add
cmp
mov
xchg
sbb
or
dec
mov
mov
pop
adc
or
out
push
sbb
lods
dec
inc
decb
lret
or
push
pop
jge
inc
inc
push
or
add
pop
in
ret
mov
pop
pop
cmc
sbb
sbbl
or
hlt
das
test
or
add
lcall
and
in
mov
sbb
cmp
adc
jno
pushf
add
push
mov
mov
push
dec
sbb
adc
rclb
adc
mov
push
cld
pop
dec
sub
sub
les
int
dec
cmp
cmp
popf
and
add
jbe
cmp
imul
fdivl
push
clc
push
jo
fsub
add
test
and
cmpsl
push
mov
int
or
ficompl
in
and
rcl
cmpb
push
push
xchg
dec
jae
or
cmpsb
inc
push
cli
cmc
adc
roll
mov
mov
push
in
je
add
push
or
outsb
mov
rcrb
or
sub
adcl
push
inc
ret
mov
add
insl
xchg
jns
cmp
inc
mov
je
call
mov
xor
jle
or
fcom
filds
or
sub
sbb
pop
enter
xchg
pushf
cmp
testl
movsb
dec
cmp
pushf
ja
cs
in
comiss
push
push
hlt
bound
aam
mov
xchg
xchg
mov
mov
jp
xchg
leave
pusha
or
lock
xor
add
xchg
xchg
ret
xor
pop
xchg
into
dec
jb
mov
in
leave
sbb
ds
mov
data16
cli
into
add
jne
and
inc
lock
and
int3
cld
inc
and
add
sub
add
setge
pop
xor
data16
mov
and
rcl
sar
add
test
lds
or
dec
or
stos
dec
rorb
mov
int
sahf
ret
pop
repz
shrb
test
ds
cmpxchg
dec
pop
xchg
nop
adc
inc
xchg
fidivl
sub
jbe
int3
test
insb
push
dec
pushf
enter
add
mov
pop
es
sbb
rdtsc
sub
mov
push
adc
ret
pop
stc
shl
mov
jp
cmp
testb
mov
or
or
adc
push
pop
out
cmpsb
bnd
je
in
pop
or
jno
mov
pop
dec
jb
push
out
inc
andl
cmp
add
test
arpl
xchg
mov
sbb
leave
ret
and
or
xchg
cli
or
int3
insb
leave
dec
and
dec
cli
inc
pushf
pop
fiadds
xchg
mov
fldcw
xchg
inc
gs
mov
or
inc
call
adcl
loop
or
sarb
insb
dec
aaa
sbb
mov
and
sbb
outsb
dec
test
adc
pop
xor
pop
sbb
push
adc
rol
dec
push
sbb
or
rorl
mov
fs
cmp
push
in
or
sub
fs
xchg
xchg
cltd
and
sbb
loopne
pop
xor
jae
es
inc
sti
mov
xor
or
mov
mov
adc
imul
cmp
in
jo
or
call
or
mov
pop
push
mov
ja
nop
and
and
xor
aam
adc
iret
lds
push
xor
xchg
and
andb
loopne
sbb
push
xor
and
lock
sub
cmc
cmc
popf
out
subb
jp
sub
in
inc
sub
pusha
push
ds
ret
sbb
mov
jl
pop
mov
xchg
js
and
and
int3
pop
adc
and
push
inc
pushf
bound
or
xor
push
push
push
scas
or
loopne
add
into
stos
xlat
dec
or
mov
aas
subl
aad
mov
xor
dec
push
lea
dec
mov
sbb
cld
pusha
pushf
or
js
inc
add
xchg
adc
cmpsb
xchg
ss
mov
rcrl
dec
mov
push
mov
jno
mov
cmpsl
dec
sbb
sbb
leave
pop
xlat
dec
enter
lret
or
inc
testb
jne
js
orl
push
and
mov
adc
mov
push
cmpsb
orb
inc
sbb
push
cmpsb
loop
or
xchg
insb
pusha
ljmp
pop
xchg
fldl
shll
cld
dec
mov
mov
inc
push
jge
add
pop
pop
dec
fdivs
in
shr
sub
insl
ret
into
mov
sbb
jb
inc
clc
xor
push
jmp
cltd
xorb
xor
mov
into
ret
int3
rol
mov
pop
insb
pop
inc
int3
pushf
stc
cmc
shl
push
push
gs
and
dec
push
mov
or
and
push
add
std
cmc
pop
sub
dec
jle
add
daa
fcmove
sub
test
rcrb
xor
sbb
paddsw
sbb
shlb
or
cwtl
jnp
push
dec
rcrb
pop
dec
dec
jg
jmp
nop
insb
xchg
outsb
call
fs
pushf
popa
inc
push
bound
sbb
daa
out
mov
pop
or
mov
inc
sub
push
test
inc
hlt
push
and
add
stc
pushf
cmp
insl
push
mov
jnp
and
add
add
push
arpl
test
add
rclb
sbb
sub
shlb
aaa
sti
add
nop
mov
rolb
test
in
jo
shl
dec
add
ret
mov
das
sti
sub
and
repnz
jge
cmpsl
push
inc
stc
fwait
push
xor
xor
pop
jae
ss
ss
jns
adc
shl
or
jo
push
mov
add
xor
sub
cli
inc
rcr
add
loopne
rcr
rol
shrd
test
in
aaa
nop
sub
lea
sahf
push
adc
jne
add
and
out
repz
rcr
stos
adc
mov
xor
add
loop
scas
test
lcall
pop
scas
mov
or
xor
movsl
xor
mov
mov
jmp
enter
stc
lods
loop
arpl
add
adc
or
mov
in
lret
add
jge
sub
push
push
imul
mov
frstor
int
adc
sub
lret
dec
xchg
push
pusha
lds
inc
mov
sbb
xor
adc
push
add
pop
ret
int3
dec
or
lcall
add
mov
xchg
and
les
mov
xor
stos
mov
imul
fadds
adc
xchg
ret
mov
inc
call
xor
push
or
push
sub
cs
jl
inc
les
add
sbb
inc
cmpsl
jno
pop
adc
xor
or
ror
cmpb
aaa
fisubs
stos
lds
mov
add
sub
cltd
shl
jecxz
xchg
add
xor
mov
mov
vrsqrtss
and
xor
push
dec
lods
sub
rolb
mov
lds
jbe
mov
or
add
stc
pusha
xchg
cmp
xor
stc
push
xor
jmp
mov
cli
dec
enter
inc
rcr
sbb
rorb
out
test
test
ret
gs
pusha
stc
mulb
mov
repz
lahf
aad
sbb
insl
subb
fiadds
fldl
lahf
adc
outsl
std
es
lret
push
pusha
mov
sub
or
sar
mov
add
mov
cmc
clc
clc
clc
test
add
cmp
shl
dec
cwtl
inc
sub
orb
xchg
insb
pusha
daa
pusha
cmc
movsb
xchg
cmpsb
or
push
clc
cmp
test
neg
dec
cmp
outsl
cwtl
push
cmc
cwtl
add
das
add
xchg
jg
mov
movsb
ljmp
mov
ret
pop
ret
rclb
add
push
add
mov
rolb
subb
ret
movsl
mov
dec
adc
pop
sbb
ret
sbb
fs
scas
and
mov
lcall
push
mov
push
sbb
adc
sbb
inc
push
push
lods
adc
xchg
cli
jmp
pop
sbb
insl
or
dec
pop
lea
les
mov
repnz
sbb
jb
xor
shl
add
cmpsl
negb
loop
mov
or
xor
inc
mov
lods
pop
scas
inc
mov
sbb
cmpsl
or
push
pusha
push
mov
mov
inc
pop
mov
jle
mov
pusha
sbb
sub
sbb
or
clc
xor
xchg
pop
or
push
or
das
and
xchg
sbb
and
push
pushf
shlb
pop
xor
jg
addr16
loop
push
dec
xor
push
pop
or
ss
pop
movsb
cld
orb
dec
sbb
outsl
pop
inc
mov
mov
sub
add
and
mov
shr
clc
rolb
inc
pop
rcr
mov
dec
mov
pop
mov
xchg
cmp
push
nop
mov
imul
cmp
xchg
add
push
xor
sub
mov
adc
mov
movsl
mov
lea
mov
loopne
je
push
push
test
cmpsl
orb
fwait
out
and
xor
mov
sub
gs
cmp
mov
outsb
data16
jg
lret
pop
iret
das
xor
mov
xor
sbb
je
sbb
gs
dec
insb
rcll
jns
fcom
push
pop
dec
pushf
nop
adc
and
int
fs
and
pop
bound
push
arpl
mov
test
insb
in
mov
nop
adc
ret
test
push
or
dec
sub
pop
sbb
orl
push
lds
xchg
add
out
aad
sbb
or
and
stc
xchg
cmpl
cmp
cmpsb
adc
mov
hlt
pop
jae
insb
ss
jge
bound
fdivs
and
mov
data16
xor
bound
cmp
cli
xor
imul
scas
mov
adc
cli
mov
in
sub
mov
jg
rcrl
adc
lds
addr16
and
add
notl
jnp
aaa
scas
lods
ja
es
in
cs
adc
push
lcall
xor
push
push
add
ror
data16
or
push
or
inc
push
push
xor
out
push
dec
mov
push
xor
push
das
out
mov
data16
dec
and
mov
inc
sub
and
cwtl
movsb
sahf
or
push
lods
add
adc
rcl
lds
or
cmp
or
mov
pusha
lret
push
sbb
dec
aam
sbb
jo
and
push
lahf
data16
dec
add
call
rclb
sub
and
pop
adc
bound
push
sbbl
or
mov
fstl
xor
xorb
shr
xor
lock
in
nop
xchg
es
adc
cmpsl
push
lds
add
jg
jle
lods
push
push
cmp
pop
adc
jl
xor
hlt
ds
das
jle
add
xchg
cmpb
cmp
jp
and
or
sub
jbe
mov
test
xchg
adc
and
fadd
fnstcw
cmp
cs
ficompl
or
cmp
push
mov
and
icebp
cwtl
sub
pop
rcl
dec
mov
xor
jp
subb
in
pushf
mov
lea
lds
je
sub
rcrb
xor
mov
idiv
inc
jl
pusha
fisttps
sbb
lock
cltd
inc
rorl
loopne
sub
sub
insl
push
fwait
test
xor
shld
cwtl
push
and
insb
testl
lcall
and
cmp
fxch
insb
lock
inc
or
fwait
std
mov
or
cmp
stos
cmp
pop
inc
ret
int
inc
jecxz
mov
imul
mov
leave
loopne
mov
jl
or
pusha
cmc
inc
add
inc
popf
adc
push
pushf
push
mov
lods
or
lcall
or
xor
xor
push
and
lea
shrb
addr16
insb
lcall
push
pop
insb
rcrb
push
adc
mov
sub
and
pop
not
push
or
pushf
outsb
adc
andb
add
sub
adc
inc
sub
mov
add
cmp
xchg
stc
sbb
dec
or
les
enter
xchg
xor
das
test
movsb
push
fstp
mov
mov
jle
into
add
mov
pop
les
push
in
mov
loope
xor
push
cmp
add
mov
in
pop
mov
xor
inc
call
add
adc
inc
test
xor
xor
add
test
dec
bound
rclb
xor
pop
iret
push
inc
pop
mov
xor
repnz
es
fbld
sbb
or
je
out
sbb
push
pushaw
inc
inc
dec
cmp
and
sbb
lds
or
pusha
out
aaa
and
in
cld
push
shl
xor
cmpb
pop
push
and
mov
inc
fists
inc
data16
into
inc
mov
das
adc
inc
push
rep
jg
xchg
sbb
sbb
push
addb
ja
mov
and
add
popa
add
pushf
sti
or
loop
out
add
lock
mov
fwait
cmc
pop
mov
push
not
xor
popa
les
fistl
int
cltd
and
lcall
ficomps
subl
adc
shlb
and
cmp
and
mov
faddl
jl
and
or
xchg
neg
mov
roll
jns
push
fdivrp
rorl
pushf
mov
fs
nop
pop
sbbl
adc
jae
push
dec
pop
sbb
in
or
bound
std
mov
xor
cmp
pop
mov
mov
out
xchg
mov
push
jb
clc
cmc
xlat
mov
imul
push
push
cltd
das
pop
inc
aaa
adc
cld
mov
cltd
pop
test
testb
sub
andb
icebp
pushf
loope
xor
in
lcall
cmp
js
push
pop
or
mov
sbb
add
fidivrl
mov
adc
inc
pushf
adc
adc
test
mov
or
push
pushf
adc
push
add
push
pushf
adc
add
inc
inc
jns
push
add
les
fistpl
jg
jmp
sub
cmp
xor
lea
sub
sbb
test
inc
out
sbb
out
and
add
out
adc
xor
adc
insl
pop
sub
cltd
add
pushf
sub
xchg
mov
push
xchg
or
mov
xchg
iret
stos
test
push
add
xchg
dec
cmp
jno
and
push
ret
add
out
push
sbb
jns
clc
enter
sbbl
add
ds
test
imul
roll
add
dec
and
inc
subb
adc
cli
mov
xchg
dec
leave
xor
mov
xchg
add
sub
js
push
adc
push
mov
dec
push
imul
adc
jbe
lock
pusha
inc
ljmp
test
shr
pusha
mov
cmovno
dec
rcll
pop
stos
mov
pop
leave
and
cmc
sbb
inc
aad
inc
add
or
sub
mov
pushf
or
cmp
adc
insl
push
into
xor
test
and
inc
fisttpll
xor
cmp
adc
cmpl
rclb
xchg
mov
xchg
insb
xor
and
ljmp
sub
and
iret
inc
bound
cmc
and
and
add
je
dec
dec
or
pushf
fsubs
cmp
movsb
push
scas
cs
pushf
subb
cli
sub
shl
pop
push
push
popf
sub
xchg
lods
add
pop
xchg
xor
fldenv
int3
and
int3
push
ljmp
sub
in
out
mov
notb
mov
sbb
gs
and
dec
negl
sub
mov
pop
popa
lcall
and
pop
xchg
dec
cwtl
aad
pop
inc
scas
ljmp
push
cmp
xor
adc
imul
add
add
mov
test
sub
lods
lcall
mov
push
adc
sbb
or
xchg
in
inc
addr16
push
enter
orl
mov
inc
and
mov
cmc
ja
add
xor
and
inc
xor
insl
and
adc
or
loopne
push
mov
loop
adc
hlt
inc
pusha
or
aad
push
test
dec
loopne
cmp
xchg
dec
pop
push
adc
fldt
or
push
mov
and
ljmp
test
xchg
in
adc
movsl
adc
fcmovnbe
push
sbb
sbb
add
xchg
gs
pop
bound
jae
cmp
jl
pop
ret
icebp
popa
push
push
lods
jnp
jo
popf
filds
jo
push
insb
mov
js
outsb
popf
out
loope
arpl
hlt
sub
addr16
cmpsb
push
sbbl
push
out
outsl
shlb
sub
imul
jl
loope
mov
jp
mov
dec
loope
or
int
xchg
sarl
jnp
std
jge
pushf
xchg
cwtl
mov
pusha
mov
jge
bnd
es
imul
mov
or
dec
jbe
dec
xlat
imul
jno
data16
in
fwait
sahf
lret
or
shll
dec
in
inc
js
lock
jbe
push
jno
pop
pop
mov
cmp
sbb
into
in
jmp
hlt
sub
imul
sarb
arpl
cmp
hlt
pushf
sti
xchg
sarb
sarl
push
jbe
xor
popf
iret
xor
outsb
pop
xchg
loope
sub
mov
fwait
repz
pop
cltd
daa
lods
push
jmp
xchg
xor
mov
loope
cmp
stc
cmp
cmpsb
mov
outsl
movsl
addr16
ljmp
out
imul
repnz
jmp
lret
cmp
cltd
imul
sahf
sub
xor
sarl
push
mov
imul
out
cli
into
jmp
fidivs
mov
sub
data16
cmc
das
shr
dec
call
stos
xchg
das
and
notl
cli
or
xor
mov
add
pushf
sub
lret
hlt
pop
pop
xor
xchg
rclb
adc
sbb
push
xor
mov
pop
mov
pushf
pop
pushf
lcall
imul
sub
rorb
scas
ficompl
push
shlb
pop
mov
dec
adc
imul
adc
mov
pop
cmp
dec
sbb
cmp
test
inc
jg
push
inc
push
mov
cmc
and
daa
rdtsc
sub
test
push
and
pop
dec
sbb
pslld
sub
push
or
cwtl
loop
mov
xchg
sub
or
mov
add
mov
or
mov
add
jo
add
cmp
out
add
sub
movsb
outsl
push
jecxz
stc
nop
add
jae
add
push
push
sbb
mov
in
jp
add
adc
aam
cbtw
cmpsb
push
rorb
push
rol
cmc
and
arpl
clc
pushf
push
nop
mov
fwait
loopne
inc
subl
adc
sbb
adc
add
jp
cmc
neg
test
andb
mov
cld
mov
sub
pushf
dec
pop
push
sbb
pop
xor
cmp
adc
mov
sub
xchg
mov
adc
stos
sti
add
fadds
and
add
or
cs
addr16
sbb
not
cwtl
adc
stos
mov
mov
in
aad
insb
sub
xchg
sub
mov
push
ret
adc
xchg
mov
aaa
lods
out
add
loop
loope
ret
dec
sbb
mov
jo
jp
movsb
mov
clc
mov
mov
sub
or
push
pop
pop
and
pop
adc
lcall
xchg
push
mov
push
sub
outsb
arpl
icebp
adc
or
sar
out
add
adc
shl
or
test
icebp
xor
push
jae
inc
or
clc
stc
shrb
add
sbb
dec
idivb
xchg
cmp
mov
insb
push
sbb
enter
mov
pop
popf
xchg
outsl
push
push
add
pop
leave
sbb
aam
or
pop
ror
btc
cmp
lahf
add
mov
mov
inc
push
test
pushf
loop
stc
pusha
out
ret
mov
sbb
insl
std
xchg
ss
cs
ja
inc
cmp
sub
out
testb
or
lea
leave
lea
sbb
push
cwtl
sub
adc
aas
lea
mov
add
add
mov
addr16
and
rcr
sub
mov
stc
dec
inc
cwtl
iret
xor
inc
xor
dec
sbb
ljmp
fimull
xchg
jno
inc
xor
cmpb
mov
clc
mov
pop
xchg
ljmp
mov
popf
std
shr
stc
pop
and
sub
sub
imul
pop
frstor
add
add
loope
xor
stc
and
clc
pop
cmp
insl
push
or
inc
push
mov
loopne
movsb
or
idivl
pushaw
les
inc
dec
and
mov
xor
test
or
sub
inc
aas
and
dec
and
adc
insb
add
cld
cmc
cmc
push
clc
sub
ja
dec
repz
mov
and
dec
adc
sahf
adc
call
jnp
lea
cs
ljmp
iret
les
ret
mov
push
inc
dec
lods
stos
and
mov
ja
jle
mov
test
rcrb
xchg
sbb
movsl
pop
rorb
adc
test
dec
jmp
mov
sbb
push
mov
push
push
pushf
push
push
adcb
pusha
cmpsb
push
adc
add
dec
jne
mov
add
dec
imul
iret
add
jo
add
loop
or
xchg
pop
or
jo
jl
mov
adc
imul
add
shr
sub
fcomps
jmp
cltd
movsl
jnp
mov
es
ss
int3
repz
add
fwait
or
and
fwait
mov
and
popa
dec
rolb
sarb
sub
cli
daa
sbb
bound
movb
outsl
pop
cld
cmpsb
add
enter
mov
subb
jmp
jnp
push
pop
sbb
lock
add
aaa
test
jl
ja
add
add
sbb
xor
pop
jo
in
stos
movsb
scas
shrb
inc
cmp
pop
pop
jo
pop
mov
inc
push
pop
out
imul
push
fsubl
movb
jo
outsb
or
or
mov
or
add
jo
mov
or
mov
push
push
mov
cmp
jge
or
lods
add
addb
sbb
fldenv
ret
xor
inc
or
out
int3
movsb
out
sub
mov
add
subb
or
aas
add
scas
cmpl
jo
cmp
dec
or
inc
hlt
arpl
out
push
loopne
or
xchg
out
jg
inc
xchg
adc
add
cmp
inc
nop
iret
mov
mov
shl
mulps
xor
loopne
push
loopne
lock
sbbb
dec
push
sti
xchg
outsl
repz
fiaddl
enter
adc
dec
pop
sbbb
jge
in
icebp
adc
mov
ret
pop
stos
adc
sbb
lret
adc
jo
or
mov
sti
mov
std
pop
jo
pop
ret
fldl
mov
pop
roll
mov
cltd
fidivrs
push
dec
cltd
pop
fimuls
jnp
push
sub
shll
pop
jo
jb
sbb
lret
imull
or
mov
pop
jo
pop
sub
notb
xchg
cmpb
pop
pop
jo
mov
div
xchg
cmp
or
sbb
cmpsl
xchg
popf
fcomip
cli
enter
add
mul
sbb
add
cmp
out
stc
add
imul
rolb
or
test
cmp
cld
out
shlb
fsubrs
add
adc
adc
add
test
and
pushf
stc
cmpsb
sbb
add
ret
lcall
cwtl
std
dec
roll
pop
inc
mov
test
js
loope
cli
push
loopne
push
jae
cld
and
xchg
mull
icebp
jg
sub
stos
add
mov
xor
stc
sarl
std
ret
add
and
add
adc
add
add
jns
add
add
add
mov
sbb
adc
add
in
and
mov
push
xor
icebp
add
mov
or
movsl
out
mov
loopne
add
add
sbb
out
cli
das
dec
lods
xor
cs
sbb
push
ss
ja
daa
add
ret
insb
into
add
add
xchg
xchg
out
sbb
inc
jnp
dec
ja
clc
loopne
leave
jne
adcb
adc
xchg
mov
fbld
pop
fmull
xor
adc
and
clc
or
push
ss
ficompl
ja
and
mov
mov
into
inc
dec
movsb
mov
les
xchg
jne
cmpb
mov
sub
add
iret
xchg
cmp
std
xor
repz
mov
add
mov
add
jecxz
push
lods
sub
data16
lods
stos
or
icebp
mov
sbb
xor
mov
add
add
ret
aam
into
and
pop
es
pop
jo
cmp
int3
sbbl
loopne
add
pop
lock
xchg
pop
jo
out
xchg
rol
add
add
testb
cmp
repnz
lahf
int
mov
aam
add
add
rcl
pop
mov
pop
adc
push
xlat
xor
sub
int
ret
das
aas
les
sbbb
iret
sbb
ljmp
jns
jmp
add
outsb
or
ret
sbb
mov
lcall
add
add
dec
pop
cltd
xchg
in
mov
mov
insl
xor
test
out
mov
add
add
insb
cvtdq2ps
add
leave
aad
sbb
negl
in
mov
or
xchg
dec
add
add
push
push
xlat
dec
lods
jbe
inc
push
add
mov
xchg
cmp
popa
lcall
add
pop
outsl
mov
les
outsb
fidivl
add
add
je
inc
adc
sbb
cmp
jae
mov
jno
in
xchg
sahf
movsl
jmp
cli
push
inc
les
add
add
das
popa
adc
fs
xchg
lods
add
cwtl
push
mov
imul
xchg
inc
pop
clc
push
leave
pop
xchg
adc
fadds
xchg
lods
subb
fistl
xchg
push
dec
add
inc
xor
filds
mov
sub
sub
insl
and
add
adc
stos
mov
out
lock
rcrb
xchg
pop
aas
imul
sub
add
out
decb
xchg
in
rclb
lcall
ret
pop
push
push
in
movsl
les
push
dec
sbb
inc
hlt
ret
pop
mov
cmp
add
add
xchg
fsubrl
aad
loope
into
pop
mov
or
sub
lret
push
xchg
inc
cli
sub
add
add
pop
adc
inc
out
cmp
mov
nop
jmp
int3
pop
loope
bound
push
or
in
add
es
add
mov
xlat
sahf
lds
cmpsl
and
pop
add
add
pusha
aam
dec
icebp
jmp
jb
cwtl
call
push
and
movsb
jg
pop
xor
adc
add
add
xchg
and
imul
xchg
out
jl
xor
jp
add
out
xchg
and
mov
push
cmp
cmp
pop
mov
enter
bound
stos
pusha
daa
into
jne
lcall
shlb
inc
mov
sub
loopne
popf
add
shlb
lahf
popf
repnz
xchg
mov
push
cwtl
jmp
add
add
add
int3
cmpsb
cmp
and
inc
jne
imul
add
iret
in
dec
arpl
fs
or
fistpll
inc
in
mov
dec
mov
out
fidivs
andl
cld
mov
mov
ja
and
loop
in
test
jnp
jle
daa
push
movsb
and
ss
sbb
add
add
push
inc
orl
popf
mov
xorb
cmp
gs
xchg
popf
push
push
jb
push
mov
daa
shrl
add
subb
cmp
xor
xor
sbb
fbstp
dec
shll
mov
inc
jg
cltd
ret
mov
xchg
bound
push
dec
and
and
pop
xor
jg
xchg
outsl
add
add
cmp
pop
daa
in
testl
aaa
xor
ds
add
add
add
nop
mov
clc
mov
jp
rolb
adc
sub
rorl
fnstenvs
testl
sub
xchg
mov
cmp
adc
jp
sub
xchg
inc
popa
pop
in
pop
out
mov
lods
xor
lds
repz
mov
lods
add
add
add
fisubs
rorb
push
aad
add
int
mov
pop
push
lea
add
cmp
push
in
mov
rorb
add
loopne
adcl
add
cmp
fiaddl
scas
and
pop
shl
lea
jne
ss
jnp
add
add
cmp
mov
inc
xor
ljmp
xor
mov
js
mov
es
add
imul
movl
lret
mov
pop
push
incb
and
add
fimull
or
jg
cmp
cs
push
jecxz
add
add
loop
cmpsl
test
test
jne
inc
add
in
lock
push
mov
sbb
fstpl
add
add
or
xchg
ror
sti
loope
push
popf
jns
sub
loope
sti
fsubrs
js
dec
sub
sub
pop
ret
sbb
and
fistpl
dec
or
jle
cmc
add
mov
lret
mov
cwtl
cmc
jmp
inc
mov
and
testb
add
xor
jmp
jmp
scas
and
movl
inc
fwait
rolb
add
add
mov
cmp
jp
fsubrs
xor
add
sub
add
outsl
mov
fcoml
push
shrl
mov
pusha
repz
subl
add
sti
je
data16
imul
icebp
pop
add
add
push
add
mov
mov
arpl
fidivrl
add
inc
mov
scas
adc
les
ljmp
add
je
pop
addr16
push
or
aaa
in
or
das
je
push
ljmp
pushf
add
add
push
fdivl
jle
pop
ds
insb
push
imul
ret
cmp
mov
mov
loope
push
lods
lcall
adc
mov
adc
mov
cs
inc
xorb
and
cli
test
inc
add
add
push
cmpsl
adc
dec
fstpl
jmp
out
dec
cmp
dec
mov
xchg
in
fisttpll
xchg
and
bound
shr
out
cmpsb
sarb
pop
ror
lods
mov
add
sarb
cmpb
push
fisubrs
loop
add
add
push
sub
add
scas
repz
fdivrs
lret
jmp
cld
add
add
ror
sti
mov
pop
or
ljmp
fstps
je
mov
pusha
clc
inc
sbb
in
std
lcall
add
pop
sbb
jle
mov
pop
fisttpll
mov
push
mov
inc
fxch
ret
into
sub
add
cmp
cmp
mov
jg
add
add
sti
mov
dec
xchg
cmpsl
push
sbb
add
enter
cmpsl
mov
add
xor
divb
adc
loop
int
xchg
les
add
adc
cld
sar
jnp
mov
jecxz
inc
and
or
adc
lcall
add
lret
jno
aam
cli
dec
ds
in
aad
push
and
lock
aad
mov
sbbl
add
jmp
insb
stos
movsl
in
mov
andb
lock
mov
repz
xor
cwtl
ljmp
mov
or
int
xor
mov
adc
mov
cmp
inc
lods
add
fsubl
shlb
and
or
ljmp
inc
add
add
lods
or
fcmovbe
mov
cmpsb
push
test
sbb
jne
mov
mov
mov
hlt
bnd
stos
test
mov
pop
cld
push
add
add
fs
ss
xchg
testl
mov
les
shrb
test
add
add
jno
or
cltd
data16
adc
jb
paddb
ss
jmp
add
sbb
add
add
pop
rorb
addr16
stos
inc
orl
ss
xor
inc
iret
jmp
adc
xchg
or
mov
insl
sqrtps
lret
jecxz
add
add
add
mov
adc
shr
jnp
test
lds
xchg
out
add
loopne
shr
xchg
inc
adc
cmpsb
lret
iret
push
pusha
lods
jno
fbstp
shrb
inc
pop
popf
mull
shrb
mov
scas
movsb
fldl
movb
jnp
aaa
cwtl
add
and
and
jno
data16
into
inc
lock
mov
add
clc
adc
jbe
pop
cwtl
hlt
pop
add
add
fstpl
lods
mov
or
mov
add
mov
out
add
add
std
xchg
and
fnsave
hlt
mov
dec
add
sbb
push
or
dec
xor
mov
roll
inc
add
ljmp
add
into
add
sbb
jp
stc
loope
dec
push
mov
add
add
das
push
ljmp
icebp
mov
and
inc
jnp
or
lods
add
shrb
mov
push
shll
outsb
mov
adc
add
push
add
pop
call
sub
inc
pop
movsb
mov
add
jbe
fsubl
mov
inc
lock
jle
add
add
inc
inc
cli
icebp
xor
adc
xchg
sub
outsl
lcall
sbb
push
jg
adc
add
ficoms
inc
push
xor
fdivrl
xor
outsl
pop
mov
rorb
loop
adc
add
add
jns
pop
stos
rorb
xor
das
xchg
adc
pop
push
or
iret
sub
stos
jbe
in
imul
mov
sbb
pop
jmp
add
add
and
inc
jne
fnsave
fs
pop
sub
ficoms
les
mov
jmp
or
cmp
add
adc
add
xchg
add
push
xchg
pushf
push
dec
push
pop
adc
or
rcrb
xchg
dec
mov
out
aas
pop
pop
add
add
add
pop
jb
xlat
out
and
mov
jp
iret
and
or
mov
cltd
sbb
dec
leave
arpl
lret
or
add
sbbb
mov
dec
pop
push
jg
jmp
xchg
scas
adc
movzbl
and
std
mov
aad
into
test
sub
mov
pop
insl
and
add
add
into
mov
sub
repnz
test
cwtl
pop
mov
fisubrs
insl
or
mov
mov
mov
add
add
int
push
xchg
mov
dec
out
push
mov
xlat
stc
testl
addl
cwtl
loop
add
sahf
cmovle
repnz
add
add
into
push
cmp
lahf
mov
out
push
into
out
xor
clc
inc
add
add
int
pop
adc
sbb
pop
push
pusha
mov
xchg
and
scas
call
pop
jno
sbb
add
add
out
pop
leave
das
int
xor
outsl
mov
test
in
es
adc
add
add
dec
sub
fwait
mov
pop
push
test
fs
cwtl
push
jae
fwait
ret
xchg
pop
out
jne
push
cmp
add
push
inc
call
outsb
hlt
push
sbb
pop
sub
pusha
dec
or
scas
push
sbb
add
add
mov
or
lcall
fwait
add
mov
popf
add
add
add
pop
fiaddl
jb
mov
jl
and
cmpb
clc
shrb
mov
popl
lahf
popa
xchg
push
adc
out
inc
add
add
aam
xchg
test
popf
stc
mov
movsl
pop
scas
mov
mov
push
cmp
lret
push
imul
adc
test
add
fldl
mov
decl
or
add
add
xchg
pop
jne
mov
sbb
add
adc
leave
jo
popa
and
jo
int
add
aaa
clc
test
out
in
xchg
pusha
sahf
adc
dec
mov
inc
cmp
popa
pop
imul
jo
sub
or
cmpsl
add
mov
add
mov
mov
gs
arpl
or
mov
add
nop
push
addr16
push
mov
mov
add
add
sub
fstp
aas
test
ficoms
pop
icebp
lods
pop
add
in
jge
inc
mov
sub
rorb
push
xlat
cmp
test
notb
cli
clc
fsubrl
dec
push
sahf
leave
xor
add
cmp
stos
jge
cmp
mov
mov
cmc
test
adc
pop
xor
inc
dec
pop
mov
and
imul
dec
adc
test
stos
and
add
or
mov
mov
and
inc
sbb
cld
repnz
add
add
int
xor
or
xor
adc
sub
in
fildll
inc
cmpsl
add
popa
es
lods
add
stos
scas
cmp
cmc
iret
sbb
hlt
shrl
mov
sahf
sub
shrb
push
sbb
add
clc
outsb
jb
xor
shll
sub
mov
add
ljmp
mov
cmc
pop
jmp
adc
or
ljmp
adc
pop
ret
mov
int
mov
adc
sbbl
imul
jecxz
sbb
les
xacquire
es
add
add
aas
fsubrl
rcll
cmp
mov
adc
jl
dec
xchg
outsl
aad
sub
aad
loopne
adc
add
ret
and
adc
pop
in
cmpsl
imul
add
inc
lea
cmovo
std
mov
dec
hlt
test
mov
das
xor
or
jne
shlb
cmpb
jne
leave
push
addl
orb
pushf
inc
icebp
and
lahf
aaa
aaa
cmp
add
mov
push
std
pushf
add
cs
insb
cmp
pop
xor
push
fdivr
sbb
pop
jo
pop
out
cld
leave
dec
xchg
ljmp
loopne
lcall
mov
mov
jns
add
rorl
xor
jo
add
add
push
roll
mov
lret
mov
add
adc
cmp
xchg
jnp
cmpl
add
cmpsl
and
aam
ja
jbe
nop
testl
sub
sahf
dec
push
add
add
mov
mov
insl
mov
xor
sub
or
add
fsts
pop
std
std
xchg
xchg
pusha
pop
mov
ret
add
sbb
inc
xor
ret
leave
pop
sub
mov
pop
ss
lret
iret
cld
in
jge
add
add
in
cmp
aaa
and
aam
pop
lret
out
fsubrl
test
xchg
dec
add
adc
add
inc
push
call
cmpsb
xor
xor
nop
mov
clc
scas
sbbb
rorl
add
xor
xlat
xchg
popa
js
mov
pop
into
int
cmp
rorl
or
std
addr16
add
aaa
adc
iret
jl
jns
push
call
out
cmp
dec
pop
in
sub
pop
xchg
push
cmpsl
test
loope
daa
add
and
out
ret
add
scas
in
loop
pop
fiaddl
outsb
jo
fisttps
pop
xchg
add
rcrl
addr16
inc
add
leave
int3
minps
addr16
pop
out
add
add
cld
int
jns
in
sub
fimull
pusha
sbb
push
into
out
shlb
or
mov
mov
rcrl
adc
dec
insb
inc
inc
xchg
push
fildl
ss
aam
add
sbb
into
test
add
mov
jb
push
mov
fimuls
lock
mov
add
add
jle
jne
mov
add
ficoms
mov
xor
xchg
nop
test
add
add
into
out
orl
mov
dec
jp
cli
insb
or
add
pusha
jae
xchg
mov
fdivs
xor
or
call
sub
add
add
push
xor
cmpsl
xchg
cltd
sbb
xor
jg
push
adc
cld
inc
test
add
in
sbb
popa
sahf
dec
inc
aad
push
adc
pop
std
fiadds
stc
in
icebp
xchg
adc
push
js
in
xor
mov
cmp
addb
add
add
pop
sub
repnz
arpl
fmul
xchg
lds
dec
out
pop
xor
ja
xor
dec
add
add
mov
cmc
mov
mov
nop
push
inc
cwtl
nop
and
add
inc
mov
ss
and
push
lds
adc
arpl
sarl
push
push
mov
aaa
and
das
das
jmp
adc
and
sub
add
pop
add
inc
sub
add
lds
aad
test
add
add
ss
add
add
sub
ss
loopne
jb
add
lods
sbb
inc
jecxz
stc
std
insb
inc
pop
sbb
jmp
sbb
data16
test
fimuls
mov
add
jecxz
in
in
ret
cmp
sub
lcall
fldt
adc
add
jmp
or
mov
sti
aaa
sbb
sub
add
cmc
outsb
in
jmp
aad
cmp
rorb
shll
stc
loope
hlt
sbb
mov
sbb
ljmp
idivl
jo
add
sbb
jb
orb
push
dec
fisttpl
add
xchg
add
mov
call
xor
inc
mov
add
pop
dec
js
sub
insl
sbb
add
mov
enter
lret
add
sbb
add
sub
jmp
jmp
enter
sbb
mov
adc
and
jns
in
mov
data16
popa
into
add
or
lods
jge
or
js
dec
add
aam
pop
les
inc
and
cmp
add
loope
int
push
pusha
push
add
inc
out
jecxz
les
mov
call
add
fs
int3
adc
dec
mov
mov
ret
add
lret
bound
add
or
jmp
ja
pop
ficoml
mov
or
aam
push
jmp
daa
cltd
inc
movl
and
sub
fdivr
and
add
aad
test
sub
sbb
add
cld
ret
ja
in
orb
add
paddsw
push
or
pop
test
pop
push
leave
dec
add
or
pop
push
int3
in
sub
add
test
cwtl
add
ds
scas
out
push
adc
stos
test
xchg
dec
or
sbb
add
loopne
mov
jl
fcmovnb
rorl
iret
in
and
or
pop
sbb
push
jo
pop
inc
pushf
std
jge
adc
arpl
push
pop
xchg
xchg
testl
and
hlt
inc
mov
ret
xchg
mov
mov
fcomps
xor
sbb
fdivl
movb
add
fyl2x
aad
cmpsb
xchg
lret
xchg
call
fcoms
add
add
lahf
test
repnz
fnstenv
push
into
mov
cmpl
adc
rorb
ret
dec
push
add
lret
mov
shr
xchg
push
add
roll
adc
cmp
out
cmp
imul
add
fwait
popf
pop
mov
fsubr
xchg
mov
decl
add
inc
lods
lods
sbb
add
add
pop
push
xor
data16
mov
cld
test
mov
ret
add
pop
sbb
xor
sub
inc
outsl
xor
out
fldcw
add
add
stos
push
aas
xchg
repnz
inc
repz
dec
xlat
dec
clc
cwtl
sub
fnstcw
sahf
mov
inc
push
push
int
mov
fwait
and
pop
add
mov
daa
mov
xchg
arpl
dec
push
add
jmp
jbe
out
cmp
xchg
data16
ret
adc
shlb
xor
decl
pusha
add
cmp
pop
push
andb
cmp
addr16
shrl
add
inc
ss
aam
pop
out
sub
and
icebp
icebp
outsb
leave
add
subl
aaa
ss
mov
jb
sbb
jne
ret
cwtl
mov
pop
aad
popa
inc
and
push
js
popa
sbbl
cmpsl
inc
in
mov
xchg
xchg
add
and
mov
or
jb
push
into
stos
sbb
out
ret
pop
cld
sub
inc
jno
scas
push
fnstsw
or
test
cmp
aam
jmp
add
and
pushf
and
sub
cmp
or
add
dec
sub
sub
fcoms
mov
mov
jg
xchg
add
xchg
jbe
dec
cmpsb
nop
in
leave
aas
outsb
xchg
int
inc
add
pop
push
aad
sbb
imul
fiadds
jmp
inc
add
push
negb
xor
inc
mov
add
sub
dec
popa
and
inc
sub
sbb
add
out
xor
jge
repnz
clc
push
add
cwtl
test
add
or
xchg
sub
mov
pop
hlt
les
pop
rcrb
add
decl
or
add
push
arpl
inc
es
add
xor
enter
mov
mov
add
mov
add
scas
inc
scas
leave
pop
dec
gs
xchg
and
test
insl
sub
add
add
lods
push
ret
jae
insb
push
sbb
pop
xorl
in
loopne
add
call
sub
call
or
mov
fcmove
shrl
mov
fcmovu
fwait
aaa
xlat
jle
or
add
dec
stos
ficompl
in
stc
cmp
xchg
into
inc
dec
jo
add
fs
std
pop
bound
call
clc
roll
repz
mov
pop
add
pusha
xor
iret
xor
das
push
fiadds
inc
cwtl
xchg
ss
cmc
push
sbb
int3
xlat
inc
in
fistl
mov
dec
rolb
add
add
pop
pop
mov
dec
cmp
ud1
mov
out
sub
jo
push
pop
push
rcrl
inc
cltd
nop
sub
outsl
dec
mov
sbb
iret
sub
leave
sub
add
aam
scas
arpl
push
and
push
xchg
add
xor
dec
and
es
add
mov
dec
sbb
push
stc
cmp
push
test
jnp
dec
rorl
loopne
mov
fdivrs
lahf
rolb
add
adc
lret
jbe
or
mov
pop
jle
test
fisubl
cmp
or
mov
dec
sub
adc
mov
xor
sahf
lret
inc
dec
pop
and
pusha
out
scas
add
xchg
cmp
stc
loopne
negb
lea
pop
push
add
push
icebp
out
xor
movsl
inc
cmp
pusha
pop
push
push
jbe
popf
int
add
add
movsb
pop
aas
cmpl
dec
adc
add
mov
xchg
lods
sahf
xorl
push
hlt
and
inc
xor
push
lret
pushf
push
clc
dec
or
and
jecxz
xchg
insl
cltd
lahf
lea
in
jp
call
addl
loope
xchg
loopne
dec
xchg
int3
ret
out
and
cmp
dec
and
orb
scas
mov
add
dec
xor
and
aam
pop
int
push
add
add
inc
mov
flds
fnstsw
je
push
adc
out
mov
repz
cmp
inc
jnp
mov
js
repnz
mov
adc
dec
xchg
xchg
gs
sbb
xchg
adc
add
leave
dec
popf
das
outsb
icebp
addl
cmp
and
jle
in
inc
sbb
test
push
ret
fcoms
add
jbe
test
xor
mov
popw
add
mov
stos
les
or
loope
pop
nop
add
fiaddl
inc
add
out
xchg
arpl
ss
adc
lds
add
les
sbb
sbbb
xchg
jbe
shrb
add
or
scas
sbb
loop
sub
push
jge
jne
insb
push
sub
add
arpl
std
mov
jo
ljmp
fwait
int3
cmp
in
cmpsl
pushf
fwait
js
cmp
mov
mov
add
cmpsb
test
inc
inc
aad
mov
add
lock
aaa
stc
out
cli
iret
mov
xor
adc
aad
inc
notb
rcr
add
xor
add
fisubrl
and
or
pop
cmp
mov
add
cmp
lret
repnz
jae
imull
dec
js
and
outsb
das
mov
or
add
add
add
sahf
mov
and
dec
in
daa
imul
call
add
inc
mov
rorl
jns
cmc
jmp
aaa
sub
leave
and
pusha
add
push
int3
cmpsb
das
in
lcall
xor
or
test
fucom
loopne
or
push
push
jne
xchg
scas
jnp
add
add
shll
out
mov
dec
out
loop
rol
shrl
dec
pop
mov
add
mov
js
aad
adc
sbb
mov
pop
ja
dec
test
cmp
xchg
cmp
push
mov
loope
lea
ljmp
jno
lret
dec
xor
in
jle
call
dec
adc
mov
inc
add
stos
push
adc
cwtl
xchg
ret
loopne
jge
cmp
jmp
cmpl
scas
dec
out
mov
push
daa
fisttps
push
rolb
jecxz
or
xchg
adc
cltd
add
int3
inc
add
out
dec
std
addr16
pusha
and
pop
arpl
rcll
.byte
lcall
add
add
add
incl
add
push
xor
push
push
mov
add
in
outsl
and
mov
add
add
xor
adc
clc
cmp
mov
idiv
and
jne
pop
pop
pop
xor
pop
add
cmp
mov
subb
push
sub
cmp
fcmovnu
outsl
cmp
jne
add
add
add
rorb
repz
fsubrs
and
push
inc
push
push
push
inc
xchg
sbbb
add
add
mov
mov
mov
cltd
mov
mov
outsl
pop
mov
mov
sub
dec
or
outsl
pop
mov
adc
mov
cmp
or
add
add
js
add
aas
jbe
push
push
scas
inc
push
imul
incl
add
add
mov
sub
pop
cmp
out
pop
popf
push
aad
divb
sbbl
and
popf
jnp
xor
jae
push
push
mov
add
push
push
jmp
pushl
mov
test
jbe
jmp
or
jo
cs
mov
add
add
cwtl
push
lods
jne
push
add
leave
pop
pop
setne
mov
nop
add
add
add
pusha
push
ja
test
addr16
out
je
push
call
out
or
shlb
add
add
add
sbb
sbb
or
add
or
fsts
out
or
add
addl
call
hlt
sbb
push
pop
mov
aas
add
movl
leave
push
mov
and
shrl
stc
jmp
mov
pop
aaa
adc
lret
dec
shr
rep
pop
inc
or
loope
push
rep
or
cmp
std
loopne
jo
add
add
push
add
cmp
and
add
inc
sub
or
insb
or
scas
or
movsl
mov
mov
add
add
mov
lods
mov
fnstsw
stc
test
jle
mov
xchg
inc
sarl
add
mov
inc
cmp
jl
movb
mov
in
call
mov
mov
cmp
jne
test
in
push
add
je
mov
mov
femms
add
pop
outsb
outsl
mov
or
add
adc
add
fisttpl
test
mov
adc
add
cmpb
adc
inc
and
je
cmp
inc
es
jbe
mov
add
jne
rclb
or
je
mov
js
pop
pop
out
je
add
add
add
sub
je
sti
fildl
push
or
sbb
or
add
jae
dec
dec
pop
nopl
imul
pop
push
mov
sarb
jne
mov
je
xchg
jge
add
add
fimuls
mov
and
cmp
and
pusha
sbb
jb
das
cmp
dec
dec
popf
mov
xchg
movsl
mov
orb
add
jp
pushf
mov
xor
dec
fucomi
cmp
dec
ja
decl
test
inc
add
add
cmp
pop
xor
sbb
and
and
push
sbb
imul
aas
mov
pop
add
add
add
out
repz
jecxz
ror
and
sbb
inc
mov
out
movswl
add
add
mov
mov
inc
xorb
xchg
dec
daa
jbe
jb
popa
adc
pop
dec
daa
inc
mov
sub
add
popf
add
fsts
and
sahf
mov
or
add
add
imull
push
sbb
data16
test
push
aas
cmpsb
dec
clc
fldl
dec
xor
stos
stos
lea
add
add
push
push
movsb
sub
test
adc
jae
dec
xlat
out
movsb
inc
leave
inc
mov
aad
sti
test
cmp
aam
in
jmp
mov
adc
inc
mov
shrb
mov
add
scas
call
jae
out
and
in
sub
or
add
adc
aad
sub
mov
mov
ret
and
push
dec
cwtl
lret
std
rcrl
adc
lods
dec
xor
in
in
shrb
ss
dec
or
sub
mov
jge
test
adc
insl
js
lods
mov
add
in
nop
in
mov
mov
les
ljmp
or
cwtl
or
or
sbb
js
call
fs
push
add
xor
dec
mov
popa
mov
cmp
add
add
or
mov
dec
mov
cs
or
adc
mov
xor
add
add
or
jecxz
out
lcall
les
loopne
jae
pushf
in
add
icebp
add
in
mov
add
repz
inc
hlt
push
loopne
shrl
and
scas
popa
mov
cmpsb
add
sbb
and
add
add
add
pop
push
push
incl
jge
and
test
xchg
xchg
sub
jne
in
add
and
add
add
or
cmpsl
xchg
dec
mov
enter
adc
jl
or
addl
and
sbb
push
or
orl
out
mov
sub
add
fisttpl
ficomps
sub
aam
mov
xchg
adc
and
loopne
jae
and
push
xorb
add
in
push
dec
mov
jp
add
xchg
cmpsl
sub
cmp
mov
add
inc
mov
cmp
cmp
ja
lock
cmp
incl
add
add
cld
ja
pop
js
or
rol
mov
fisubrs
pop
pop
xor
add
add
filds
andw
mov
divl
call
pop
jmp
arpl
stos
sbbl
add
xor
push
lea
testb
push
add
add
and
rcrl
sub
jmp
mov
negl
imul
pop
and
lea
xorb
in
push
mov
test
je
mov
call
add
inc
ret
jmp
xchg
sub
out
incb
jne
fs
add
fcoms
shll
dec
pcmpeqd
out
lret
subb
xor
push
and
cmp
testb
add
add
xor
and
cmpl
adc
cmp
mov
cmp
out
pushf
dec
jl
pop
or
into
add
ret
outsl
jp
pop
icebp
insb
insb
popa
das
xor
xor
add
add
sub
insl
jo
je
bound
cmpsb
push
cmpsb
mov
push
je
xor
popaw
jne
es
add
add
dec
push
add
das
das
arpl
addr16
imul
das
imul
add
add
cs
add
jne
je
dec
jge
inc
fcomps
jo
aas
push
jns
gs
in
add
add
xchg
push
push
inc
dec
pop
inc
jne
jb
outsb
je
outsl
add
insb
push
add
cmpb
jb
xor
jo
imul
insb
fwait
add
lock
popa
xor
or
psubq
sub
add
push
setle
push
fdiv
adc
and
adc
add
add
outsl
xchg
int
fists
inc
add
movsb
movsl
sti
lods
insl
cmp
pop
ja
fs
orb
add
add
imul
fcoms
dec
rdmsr
pop
adc
or
or
test
mov
adc
insb
mov
jb
inc
inc
mov
movl
cld
inc
add
in
adc
insb
pcmpgtw
add
incl
imul
popa
or
gs
inc
orb
pop
adc
nop
lods
add
outsl
sbb
jge
shrb
xor
add
xchg
sbb
jae
sbb
ficoml
rcrb
jae
push
jb
dec
add
orl
inc
daa
fwait
or
xchg
push
and
imul
mov
or
or
add
dec
popa
outsb
fs
fsin
imulb
cmp
cli
addr16
dec
bound
arpl
mov
push
gs
dec
gs
push
add
add
mov
push
popa
insb
jne
loope
dec
sbb
mov
xorl
jne
push
imul
insb
jbe
inc
arpl
pop
mov
nop
dec
add
insl
loope
punpckhdq
imul
sbb
ja
adc
insl
leave
inc
add
add
pop
push
outsl
imul
or
outsb
test
push
pop
imul
push
inc
ror
cmpsl
fnstcw
test
ja
and
sarb
sbb
or
outsb
and
or
sub
add
outsb
inc
push
push
lahf
gs
ret
adcb
test
adc
add
add
add
or
lret
mov
add
adc
or
lret
sbb
pop
je
cld
add
sarb
cs
or
pop
cmovns
and
dec
adc
pop
or
sbb
or
add
mov
aas
sub
sbb
push
sub
xor
add
push
pushl
mov
xor
mov
jg
loope
mov
adc
and
ds
or
pop
or
or
jl
add
or
pop
es
add
outsl
add
and
push
push
and
add
jp
adc
xor
fildl
negb
rolb
inc
sahf
add
fidivl
and
dec
ret
push
and
add
data16
add
cld
adc
sbb
xchg
in
fwait
shll
or
push
add
xchg
mov
pop
push
or
xor
les
add
jbe
pop
push
nop
and
dec
push
xlat
int3
dec
mov
in
push
inc
dec
mov
push
int3
in
inc
push
sbb
roll
or
out
inc
pusha
jb,pn
add
loopne
mov
sbb
sti
push
das
mov
inc
cs
enter
add
add
imul
gs
sbb
inc
daa
sbb
add
xchg
and
add
add
pusha
pusha
or
add
call
ljmp
insl
add
add
lods
push
fs
cmp
nop
xor
addl
pop
inc
add
mov
adc
jb
mov
inc
adc
jae
cmpb
cltd
jae
xor
sub
and
xchg
or
pop
xor
xor
leave
data16
popa
jne
inc
add
add
add
roll
sbb
add
cld
jbe
mov
inc
dec
jne
mov
jno
mov
add
mov
add
sub
mov
and
add
pop
mov
mov
andl
clc
add
mov
add
stos
jmp
lea
add
shlb
add
test
add
push
es
or
xchg
mov
fmuls
fmull
mov
xchg
pop
push
inc
mov
mov
mov
add
xor
push
fsubs
rol
sub
pop
lea
and
ja
out
pop
add
ret
mov
xchg
rol
ror
jnp
loop
movups
sub
add
shll
mov
add
push
push
push
push
test
shlb
and
andb
pop
push
pusha
or
add
lea
push
cmp
jne
sub
jmp
popa
pop
insb
int3
jo
jo
push
enter
movsb
sahf
jg
aas
out
icebp
mov
jg
cld
mov
fdivrl
les
jno
mov
sbb
jno
jno
dec
stc
mov
mov
stc
stc
jo
jae
add
dec
inc
dec
xor
add
cs
dec
dec
add
push
inc
push
dec
lret
fs
insb
jb
add
inc
push
push
push
push
or
pop
popf
push
dec
dec
inc
and
mov
push
push
xor
xchg
cwtl
ja
hlt
push
jo
jb
jb
cmp
push
mov
fs
test
ret
jb
add
and
leave
xchg
inc
mov
cs
inc
gs
mov
push
loop
sbb
push
lret
mov
dec
add
sub
adc
pusha
pop
add
sbbb
sti
dec
fsubr
lea
sub
xor
or
add
call
push
addr16
cwtl
mov
aas
jp
pop
mov
sub
add
aad
cmp
out
mov
jp
xchg
push
lret
lret
pop
jo
icebp
insl
sbb
add
cmp
add
and
cmpsl
leave
stos
mov
add
rorb
mov
jne
adc
add
int
pop
push
add
add
jbe
popa
mov
mov
cmp
scas
enter
loopne
scas
in
mov
je
scas
add
ja
lea
sar
call
xor
in
sub
xor
add
fildll
rcr
pop
or
sahf
in
mulb
xchg
insl
popl
add
inc
lods
add
cmp
jae
scas
in
icebp
dec
add
mov
dec
cmp
ja
out
add
add
xchg
cmp
aas
and
pop
dec
shrb
adc
lahf
inc
fisttpll
add
add
inc
pop
or
fmulp
leave
xlat
add
sbb
dec
dec
pop
jmp
shll
or
pop
add
pusha
decl
pushf
call
or
pusha
pushf
mov
popf
cltd
test
popl
cmpb
clc
xor
jmp
add
shll
add
push
add
aaa
or
mov
rolb
dec
sub
bt
cmp
push
das
add
into
add
shrl
adc
neg
dec
dec
pop
das
add
lret
clc
cmp
stc
add
sub
dec
je
mov
sub
jl
sbb
dec
jo
sbb
outsl
mov
movb
push
sub
popa
loop,pn
or
inc
cmp
pushf
cmc
sub
pushf
mov
mov
adc
mov
mov
in
add
pushf
mov
push
mov
pusha
push
add
aam
mov
jo
test
repnz
pushf
setae
rcr
mov
jae
push
add
mov
flds
mov
or
add
into
lea
not
inc
push
inc
int3
outsl
mov
out
sti
cs
sub
pushf
pusha
or
xchg
std
mov
or
mov
rolb
push
ss
movl
das
and
inc
cld
mov
enter
inc
pushf
xor
test
xor
sbb
or
sbb
addr16
push
mov
mov
fcoml
ret
xchg
pop
dec
mov
pop
add
pop
add
pop
clc
mov
lret
pop
shl
add
repnz
lds
pop
add
mov
neg
pop
cmp
fisubs
mov
fldcw
loopne
mov
cmp
add
or
sbb
mov
pushf
loope
sbb
pop
or
mov
sbb
sub
xchg
fcoml
xor
and
enter
or
stc
clc
pusha
stc
and
rcrl
pusha
and
loop
pop
sti
sub
test
push
call
shrb
mov
mov
add
pop
sub
pushf
dec
mov
or
xchg
jmp
pusha
repz
inc
loope
or
or
inc
jg
pop
mov
mov
je
adc
jo
push
dec
fiaddl
mov
pusha
pop
ja
or
mov
or
xchg
test
mov
aaa
pop
leave
jnp
add
or
adc
mov
cmpsb
pushf
subb
mov
cld
mov
adc
add
add
mov
sub
push
fisubrl
call
out
ss
repnz
dec
icebp
shll
mov
cli
sbb
push
push
mov
xchg
pop
std
dec
hlt
mov
xchg
pop
ficomps
shll
loopne
mov
sub
sub
adc
popf
loope
outsb
pop
sbb
mov
add
push
mov
push
popf
sarb
xchg
push
add
jge
cltd
xchg
or
cmp
lds
inc
movsb
sbb
lea
enter
enter
dec
incb
pushf
shll
in
mov
xchg
adc
add
cmp
rcl
adc
sub
lock
push
aaa
pusha
mov
mov
pop
cmp
stc
mov
fldenv
js
mov
ror
das
clc
sbb
add
cmp
jae,pt
nop
xor
test
dec
dec
and
add
rcrb
cmp
rcrb
and
sar
neg
rcr
sub
sbb
out
pop
das
pop
loopne
jno
add
std
cld
sbb
movsl
xchg
xchg
pusha
ret
adc
add
and
stc
or
pusha
pop
cli
mov
push
pop
mov
pushf
repz
aam
push
clc
inc
add
sbb
and
popa
addl
repnz
movb
mov
add
clc
cmc
xchg
or
ret
add
test
into
sub
xor
xor
xor
cmc
mov
add
cli
ror
rcl
add
and
mov
stos
imul
or
push
int3
add
xor
mov
pop
data16
adc
ljmp
or
jno
sub
jae
sub
shlb
lea
inc
shrl
ret
bnd
loope
cmpsl
mov
sub
mov
and
pop
add
mov
popf
movsl
cmp
mov
pusha
adc
ret
push
jne
pop
dec
data16
cmpsb
mov
fwait
adc
je
dec
jns
mov
mov
push
adc
cmp
rcrl
xchg
sbb
push
add
jb
aam
lcall
and
mov
and
lret
sbb
xor
inc
mov
cmp
sub
popf
data16
push
xchg
dec
popf
xchg
jno
cmp
mov
push
cmp
adc
mov
ja
jnp
mov
icebp
cmp
add
sbb
in
xchg
pusha
out
xchg
mov
or
in
push
stc
or
xchg
jmp
push
add
sbb
mov
loop
add
cmp
mov
xchg
sbb
or
dec
mov
mov
pop
adc
or
out
push
sbb
lods
dec
inc
decb
lret
or
push
pop
jge
inc
inc
push
or
add
pop
in
ret
mov
pop
pop
cmc
sbb
sbbl
or
hlt
das
test
or
add
lcall
and
in
mov
sbb
cmp
adc
jno
pushf
add
push
mov
mov
push
dec
sbb
adc
rclb
adc
mov
push
cld
pop
dec
sub
sub
les
int
dec
cmp
cmp
popf
and
add
jbe
cmp
imul
fdivl
push
clc
push
jo
fsub
add
test
and
cmpsl
push
mov
int
or
ficompl
in
and
rcl
cmpb
push
push
xchg
dec
jae
or
cmpsb
inc
push
cli
cmc
adc
roll
mov
mov
push
in
je
add
push
or
outsb
mov
rcrb
or
sub
adcl
push
inc
ret
mov
add
insl
xchg
jns
cmp
inc
mov
je
call
mov
xor
jle
or
fcom
filds
or
sub
sbb
pop
enter
xchg
pushf
cmp
testl
movsb
dec
cmp
pushf
ja
cs
in
comiss
push
push
hlt
bound
aam
mov
xchg
xchg
mov
mov
jp
xchg
leave
pusha
or
lock
xor
add
xchg
xchg
ret
xor
pop
xchg
into
dec
jb
mov
in
leave
sbb
ds
mov
data16
cli
into
add
jne
and
inc
lock
and
int3
cld
inc
and
add
sub
add
setge
pop
xor
data16
mov
and
rcl
sar
add
test
lds
or
dec
or
stos
dec
rorb
mov
int
sahf
ret
pop
repz
shrb
test
ds
cmpxchg
dec
pop
xchg
nop
adc
inc
xchg
fidivl
sub
jbe
int3
test
insb
push
dec
pushf
enter
add
mov
pop
es
sbb
rdtsc
sub
mov
push
adc
ret
pop
stc
shl
mov
jp
cmp
testb
mov
or
or
adc
push
pop
out
cmpsb
bnd
je
in
pop
or
jno
mov
pop
dec
jb
push
out
inc
andl
cmp
add
test
arpl
xchg
mov
sbb
leave
ret
and
or
xchg
cli
or
int3
insb
leave
dec
and
dec
cli
inc
pushf
pop
fiadds
xchg
mov
fldcw
xchg
inc
gs
mov
or
inc
call
adcl
loop
or
sarb
insb
dec
aaa
sbb
mov
and
sbb
outsb
dec
test
adc
pop
xor
pop
sbb
push
adc
rol
dec
push
sbb
or
rorl
mov
fs
cmp
push
in
or
sub
fs
xchg
xchg
cltd
and
sbb
loopne
pop
xor
jae
es
inc
sti
mov
xor
or
mov
mov
adc
imul
cmp
in
jo
or
call
or
mov
pop
push
mov
ja
nop
and
and
xor
aam
adc
iret
lds
push
xor
xchg
and
andb
loopne
sbb
push
xor
and
lock
sub
cmc
cmc
popf
out
subb
jp
sub
in
inc
sub
pusha
push
ds
ret
sbb
mov
jl
pop
mov
xchg
js
and
and
int3
pop
adc
and
push
inc
pushf
bound
or
xor
push
push
push
scas
or
loopne
add
into
stos
xlat
dec
or
mov
aas
subl
aad
mov
xor
dec
push
lea
dec
mov
sbb
cld
pusha
pushf
or
js
inc
add
xchg
adc
cmpsb
xchg
ss
mov
rcrl
dec
mov
push
mov
jno
mov
cmpsl
dec
sbb
sbb
leave
pop
xlat
dec
enter
lret
or
inc
testb
jne
js
orl
push
and
mov
adc
mov
push
cmpsb
orb
inc
sbb
push
cmpsb
loop
or
xchg
insb
pusha
ljmp
pop
xchg
fldl
shll
cld
dec
mov
mov
inc
push
jge
add
pop
pop
dec
fdivs
in
shr
sub
insl
ret
into
mov
sbb
jb
inc
clc
xor
push
jmp
cltd
xorb
xor
mov
into
ret
int3
rol
mov
pop
insb
pop
inc
int3
pushf
stc
cmc
shl
push
push
gs
and
dec
push
mov
or
and
push
add
std
cmc
pop
sub
dec
jle
add
daa
fcmove
sub
test
rcrb
xor
sbb
paddsw
sbb
shlb
or
cwtl
jnp
push
dec
rcrb
pop
dec
dec
jg
jmp
nop
insb
xchg
outsb
call
fs
pushf
popa
inc
push
bound
sbb
daa
out
mov
pop
or
mov
inc
sub
push
test
inc
hlt
push
and
add
stc
pushf
cmp
insl
push
mov
jnp
and
add
add
push
arpl
test
add
rclb
sbb
sub
shlb
aaa
sti
add
nop
mov
rolb
test
in
jo
shl
dec
add
ret
mov
das
sti
sub
and
repnz
jge
cmpsl
push
inc
stc
fwait
push
xor
xor
pop
jae
ss
ss
jns
adc
shl
or
jo
push
mov
add
xor
sub
cli
inc
rcr
add
loopne
rcr
rol
shrd
test
in
aaa
nop
sub
lea
sahf
push
adc
jne
add
and
out
repz
rcr
stos
adc
mov
xor
add
loop
scas
test
lcall
pop
scas
mov
or
xor
movsl
xor
mov
mov
jmp
enter
stc
lods
loop
arpl
add
adc
or
mov
in
lret
add
jge
sub
push
push
imul
mov
frstor
int
adc
sub
lret
dec
xchg
push
pusha
lds
inc
mov
sbb
xor
adc
push
add
pop
ret
int3
dec
or
lcall
add
mov
xchg
and
les
mov
xor
stos
mov
imul
fadds
adc
xchg
ret
mov
inc
call
xor
push
or
push
sub
cs
jl
inc
les
add
sbb
inc
cmpsl
jno
pop
adc
xor
or
ror
cmpb
aaa
fisubs
stos
lds
mov
add
sub
cltd
shl
jecxz
xchg
add
xor
mov
mov
vrsqrtss
and
xor
push
dec
lods
sub
rolb
mov
lds
jbe
mov
or
add
stc
pusha
xchg
cmp
xor
stc
push
xor
jmp
mov
cli
dec
enter
inc
rcr
sbb
rorb
out
test
test
ret
gs
pusha
stc
mulb
mov
repz
lahf
aad
sbb
insl
subb
fiadds
fldl
lahf
adc
outsl
std
es
lret
push
pusha
mov
sub
or
sar
mov
add
mov
cmc
clc
clc
clc
test
add
cmp
shl
dec
cwtl
inc
sub
orb
xchg
insb
pusha
daa
pusha
cmc
movsb
xchg
cmpsb
or
push
clc
cmp
test
neg
dec
cmp
outsl
cwtl
push
cmc
cwtl
add
das
add
xchg
jg
mov
movsb
ljmp
mov
ret
pop
ret
rclb
add
push
add
mov
rolb
subb
ret
movsl
mov
dec
adc
pop
sbb
ret
sbb
fs
scas
and
mov
lcall
push
mov
push
sbb
adc
sbb
inc
push
push
lods
adc
xchg
cli
jmp
pop
sbb
insl
or
dec
pop
lea
les
mov
repnz
sbb
jb
xor
shl
add
cmpsl
negb
loop
mov
or
xor
inc
mov
lods
pop
scas
inc
mov
sbb
cmpsl
or
push
pusha
push
mov
mov
inc
pop
mov
jle
mov
pusha
sbb
sub
sbb
or
clc
xor
xchg
pop
or
push
or
das
and
xchg
sbb
and
push
pushf
shlb
pop
xor
jg
addr16
loop
push
dec
xor
push
pop
or
ss
pop
movsb
cld
orb
dec
sbb
outsl
pop
inc
mov
mov
sub
add
and
mov
shr
clc
rolb
inc
pop
rcr
mov
dec
mov
pop
mov
xchg
cmp
push
nop
mov
imul
cmp
xchg
add
push
xor
sub
mov
adc
mov
movsl
mov
lea
mov
loopne
je
push
push
test
cmpsl
orb
fwait
out
and
xor
mov
sub
gs
cmp
mov
outsb
data16
jg
lret
pop
iret
das
xor
mov
xor
sbb
je
sbb
gs
dec
insb
rcll
jns
fcom
push
pop
dec
pushf
nop
adc
and
int
fs
and
pop
bound
push
arpl
mov
test
insb
in
mov
nop
adc
ret
test
push
or
dec
sub
pop
sbb
orl
push
lds
xchg
add
out
aad
sbb
or
and
stc
xchg
cmpl
cmp
cmpsb
adc
mov
hlt
pop
jae
insb
ss
jge
bound
fdivs
and
mov
data16
xor
bound
cmp
cli
xor
imul
scas
mov
adc
cli
mov
in
sub
mov
jg
rcrl
adc
lds
addr16
and
add
notl
jnp
aaa
scas
lods
ja
es
in
cs
adc
push
lcall
xor
push
push
add
ror
data16
or
push
or
inc
push
push
xor
out
push
dec
mov
push
xor
push
das
out
mov
data16
dec
and
mov
inc
sub
and
cwtl
movsb
sahf
or
push
lods
add
adc
rcl
lds
or
cmp
or
mov
pusha
lret
push
sbb
dec
aam
sbb
jo
and
push
lahf
data16
dec
add
call
rclb
sub
and
pop
adc
bound
push
sbbl
or
mov
fstl
xor
xorb
shr
xor
lock
in
nop
xchg
es
adc
cmpsl
push
lds
add
jg
jle
lods
push
push
cmp
pop
adc
jl
xor
hlt
ds
das
jle
add
xchg
cmpb
cmp
jp
and
or
sub
jbe
mov
test
xchg
adc
and
fadd
fnstcw
cmp
cs
ficompl
or
cmp
push
mov
and
icebp
cwtl
sub
pop
rcl
dec
mov
xor
jp
subb
in
pushf
mov
lea
lds
je
sub
rcrb
xor
mov
idiv
inc
jl
pusha
fisttps
sbb
lock
cltd
inc
rorl
loopne
sub
sub
insl
push
fwait
test
xor
shld
cwtl
push
and
insb
testl
lcall
and
cmp
fxch
insb
lock
inc
or
fwait
std
mov
or
cmp
stos
cmp
pop
inc
ret
int
inc
jecxz
mov
imul
mov
leave
loopne
mov
jl
or
pusha
cmc
inc
add
inc
popf
adc
push
pushf
push
mov
lods
or
lcall
or
xor
xor
push
and
lea
shrb
addr16
insb
lcall
push
pop
insb
rcrb
push
adc
mov
sub
and
pop
not
push
or
pushf
outsb
adc
andb
add
sub
adc
inc
sub
mov
add
cmp
xchg
stc
sbb
dec
or
les
enter
xchg
xor
das
test
movsb
push
fstp
mov
mov
jle
into
add
mov
pop
les
push
in
mov
loope
xor
push
cmp
add
mov
in
pop
mov
xor
inc
call
add
adc
inc
test
xor
xor
add
test
dec
bound
rclb
xor
pop
iret
push
inc
pop
mov
xor
repnz
es
fbld
sbb
or
je
out
sbb
push
pushaw
inc
inc
dec
cmp
and
sbb
lds
or
pusha
out
aaa
and
in
cld
push
shl
xor
cmpb
pop
push
and
mov
inc
fists
inc
data16
into
inc
mov
das
adc
inc
push
rep
jg
xchg
sbb
sbb
push
addb
ja
mov
and
add
popa
add
pushf
sti
or
loop
out
add
lock
mov
fwait
cmc
pop
mov
push
not
xor
popa
les
fistl
int
cltd
and
lcall
ficomps
subl
adc
shlb
and
cmp
and
mov
faddl
jl
and
or
xchg
neg
mov
roll
jns
push
fdivrp
rorl
pushf
mov
fs
nop
pop
sbbl
adc
jae
push
dec
pop
sbb
in
or
bound
std
mov
xor
cmp
pop
mov
mov
out
xchg
mov
push
jb
clc
cmc
xlat
mov
imul
push
push
cltd
das
pop
inc
aaa
adc
cld
mov
cltd
pop
test
testb
sub
andb
icebp
pushf
loope
xor
in
lcall
cmp
js
push
pop
or
mov
sbb
add
fidivrl
mov
adc
inc
pushf
adc
adc
test
mov
or
push
pushf
adc
push
add
push
pushf
adc
add
inc
inc
jns
push
add
les
fistpl
jg
jmp
sub
cmp
xor
lea
sub
sbb
test
inc
out
sbb
out
and
add
out
adc
xor
adc
insl
pop
sub
cltd
add
pushf
sub
xchg
mov
push
xchg
or
mov
xchg
iret
stos
test
push
add
xchg
dec
cmp
jno
and
push
ret
add
out
push
sbb
jns
clc
enter
sbbl
add
ds
test
imul
roll
add
dec
and
inc
subb
adc
cli
mov
xchg
dec
leave
xor
mov
xchg
add
sub
js
push
adc
push
mov
dec
push
imul
adc
jbe
lock
pusha
inc
ljmp
test
shr
pusha
mov
cmovno
dec
rcll
pop
stos
mov
pop
leave
and
cmc
sbb
inc
aad
inc
add
or
sub
mov
pushf
or
cmp
adc
insl
push
into
xor
test
and
inc
fisttpll
xor
cmp
adc
cmpl
rclb
xchg
mov
xchg
insb
xor
and
ljmp
sub
and
iret
inc
bound
cmc
and
and
add
je
dec
dec
or
pushf
fsubs
cmp
movsb
push
scas
cs
pushf
subb
cli
sub
shl
pop
push
push
popf
sub
xchg
lods
add
pop
xchg
xor
fldenv
int3
and
int3
push
ljmp
sub
in
out
mov
notb
mov
sbb
gs
and
dec
negl
sub
mov
pop
popa
lcall
and
pop
xchg
dec
cwtl
aad
pop
inc
scas
ljmp
push
cmp
xor
adc
imul
add
add
mov
test
sub
lods
lcall
mov
push
adc
sbb
or
xchg
in
inc
addr16
push
enter
orl
mov
inc
and
mov
cmc
ja
add
xor
and
inc
xor
insl
and
adc
or
loopne
push
mov
loop
adc
hlt
inc
pusha
or
aad
push
test
dec
loopne
cmp
xchg
dec
pop
push
adc
fldt
or
push
mov
and
ljmp
test
xchg
in
adc
movsl
adc
fcmovnbe
push
sbb
sbb
add
xchg
gs
pop
bound
jae
cmp
jl
pop
ret
icebp
popa
push
push
lods
jnp
jo
popf
filds
jo
push
insb
mov
js
outsb
popf
out
loope
arpl
hlt
sub
addr16
cmpsb
push
sbbl
push
out
outsl
shlb
sub
imul
jl
loope
mov
jp
mov
dec
loope
or
int
xchg
sarl
jnp
std
jge
pushf
xchg
cwtl
mov
pusha
mov
jge
bnd
es
imul
mov
or
dec
jbe
dec
xlat
imul
jno
data16
in
fwait
sahf
lret
or
shll
dec
in
inc
js
lock
jbe
push
jno
pop
pop
mov
cmp
sbb
into
in
jmp
hlt
sub
imul
sarb
arpl
cmp
hlt
pushf
sti
xchg
sarb
sarl
push
jbe
xor
popf
iret
xor
outsb
pop
xchg
loope
sub
mov
fwait
repz
pop
cltd
daa
lods
push
jmp
xchg
xor
mov
loope
cmp
stc
cmp
cmpsb
mov
outsl
movsl
addr16
ljmp
out
imul
repnz
jmp
lret
cmp
cltd
imul
sahf
sub
xor
sarl
push
mov
imul
out
cli
into
jmp
fidivs
mov
sub
data16
cmc
das
shr
dec
call
stos
xchg
das
and
notl
cli
or
xor
mov
add
pushf
sub
lret
hlt
pop
pop
xor
xchg
rclb
adc
sbb
push
xor
mov
pop
mov
pushf
pop
pushf
lcall
imul
sub
rorb
scas
ficompl
push
shlb
pop
mov
dec
adc
imul
adc
mov
pop
cmp
dec
sbb
cmp
test
inc
jg
push
inc
push
mov
cmc
and
daa
rdtsc
sub
test
push
and
pop
dec
sbb
pslld
sub
push
or
cwtl
loop
mov
xchg
sub
or
mov
add
mov
or
mov
add
jo
add
cmp
out
add
sub
movsb
outsl
push
jecxz
stc
nop
add
jae
add
push
push
sbb
mov
in
jp
add
adc
aam
cbtw
cmpsb
push
rorb
push
rol
cmc
and
arpl
clc
pushf
push
nop
mov
fwait
loopne
inc
subl
adc
sbb
adc
add
jp
cmc
neg
test
andb
mov
cld
mov
sub
pushf
dec
pop
push
sbb
pop
xor
cmp
adc
mov
sub
xchg
mov
adc
stos
sti
add
fadds
and
add
or
cs
addr16
sbb
not
cwtl
adc
stos
mov
mov
in
aad
insb
sub
xchg
sub
mov
push
ret
adc
xchg
mov
aaa
lods
out
add
loop
loope
ret
dec
sbb
mov
jo
jp
movsb
mov
clc
mov
mov
sub
or
push
pop
pop
and
pop
adc
lcall
xchg
push
mov
push
sub
outsb
arpl
icebp
adc
or
sar
out
add
adc
shl
or
test
icebp
xor
push
jae
inc
or
clc
stc
shrb
add
sbb
dec
idivb
xchg
cmp
mov
insb
push
sbb
enter
mov
pop
popf
xchg
outsl
push
push
add
pop
leave
sbb
aam
or
pop
ror
btc
cmp
lahf
add
mov
mov
inc
push
test
pushf
loop
stc
pusha
out
ret
mov
sbb
insl
std
xchg
ss
cs
ja
inc
cmp
sub
out
testb
or
lea
leave
lea
sbb
push
cwtl
sub
adc
aas
lea
mov
add
add
mov
addr16
and
rcr
sub
mov
stc
dec
inc
cwtl
iret
xor
inc
xor
dec
sbb
ljmp
fimull
xchg
jno
inc
xor
cmpb
mov
clc
mov
pop
xchg
ljmp
mov
popf
std
shr
stc
pop
and
sub
sub
imul
pop
frstor
add
add
loope
xor
stc
and
clc
pop
cmp
insl
push
or
inc
push
mov
loopne
movsb
or
idivl
pushaw
les
inc
dec
and
mov
xor
test
or
sub
inc
aas
and
dec
and
adc
insb
add
cld
cmc
cmc
push
clc
sub
ja
dec
repz
mov
and
dec
adc
sahf
adc
call
jnp
lea
cs
ljmp
iret
les
ret
mov
push
inc
dec
lods
stos
and
mov
ja
jle
mov
test
rcrb
xchg
sbb
movsl
pop
rorb
adc
test
dec
jmp
mov
sbb
push
mov
push
push
pushf
push
push
adcb
pusha
cmpsb
push
adc
add
dec
jne
mov
add
dec
imul
iret
add
jo
add
loop
or
xchg
pop
or
jo
jl
mov
adc
imul
add
shr
sub
fcomps
jmp
cltd
movsl
jnp
mov
es
ss
int3
repz
add
fwait
or
and
fwait
mov
and
popa
dec
rolb
sarb
sub
cli
daa
sbb
bound
movb
outsl
pop
cld
cmpsb
add
enter
mov
subb
jmp
jnp
push
pop
sbb
lock
add
aaa
test
jl
ja
add
add
sbb
xor
pop
jo
in
stos
movsb
scas
shrb
inc
cmp
pop
pop
jo
pop
mov
inc
push
pop
out
imul
push
fsubl
movb
jo
outsb
or
or
mov
or
add
jo
mov
or
mov
push
push
mov
cmp
jge
or
lods
add
addb
sbb
fldenv
ret
xor
inc
or
out
int3
movsb
out
sub
mov
add
subb
or
aas
add
scas
cmpl
jo
cmp
dec
or
inc
hlt
arpl
out
push
loopne
or
xchg
out
jg
inc
xchg
adc
add
cmp
inc
nop
iret
mov
mov
shl
mulps
xor
loopne
push
loopne
lock
sbbb
dec
push
sti
xchg
outsl
repz
fiaddl
enter
adc
dec
pop
sbbb
jge
in
icebp
adc
mov
ret
pop
stos
adc
sbb
lret
adc
jo
or
mov
sti
mov
std
pop
jo
pop
ret
fldl
mov
pop
roll
mov
cltd
fidivrs
push
dec
cltd
pop
fimuls
jnp
push
sub
shll
pop
jo
jb
sbb
lret
imull
or
mov
pop
jo
pop
sub
notb
xchg
cmpb
pop
pop
jo
mov
div
xchg
cmp
or
sbb
cmpsl
xchg
popf
fcomip
cli
enter
add
mul
sbb
add
cmp
out
stc
add
imul
rolb
or
test
cmp
cld
out
shlb
fsubrs
add
adc
adc
add
test
and
pushf
stc
cmpsb
sbb
add
ret
lcall
cwtl
std
dec
roll
pop
inc
mov
test
js
loope
cli
push
loopne
push
jae
cld
and
xchg
mull
icebp
jg
sub
stos
add
mov
xor
stc
sarl
std
ret
add
and
add
adc
add
add
jns
add
add
add
mov
sbb
adc
add
in
and
mov
push
xor
icebp
add
mov
or
movsl
out
mov
loopne
add
add
sbb
out
cli
das
dec
lods
xor
cs
sbb
push
ss
ja
daa
add
ret
insb
into
add
add
xchg
xchg
out
sbb
inc
jnp
dec
ja
clc
loopne
leave
jne
adcb
adc
xchg
mov
fbld
pop
fmull
xor
adc
and
clc
or
push
ss
ficompl
ja
and
mov
mov
into
inc
dec
movsb
mov
les
xchg
jne
cmpb
mov
sub
add
iret
xchg
cmp
std
xor
repz
mov
add
mov
add
jecxz
push
lods
sub
data16
lods
stos
or
icebp
mov
sbb
xor
mov
add
add
ret
aam
into
and
pop
es
pop
jo
cmp
int3
sbbl
loopne
add
pop
lock
xchg
pop
jo
out
xchg
rol
add
add
testb
cmp
repnz
lahf
int
mov
aam
add
add
rcl
pop
mov
pop
adc
push
xlat
xor
sub
int
ret
das
aas
les
sbbb
iret
sbb
ljmp
jns
jmp
add
outsb
or
ret
sbb
mov
lcall
add
add
dec
pop
cltd
xchg
in
mov
mov
insl
xor
test
out
mov
add
add
insb
cvtdq2ps
add
leave
aad
sbb
negl
in
mov
or
xchg
dec
add
add
push
push
xlat
dec
lods
jbe
inc
push
add
mov
xchg
cmp
popa
lcall
add
pop
outsl
mov
les
outsb
fidivl
add
add
je
inc
adc
sbb
cmp
jae
mov
jno
in
xchg
sahf
movsl
jmp
cli
push
inc
les
add
add
das
popa
adc
fs
xchg
lods
add
cwtl
push
mov
imul
xchg
inc
pop
clc
push
leave
pop
xchg
adc
fadds
xchg
lods
subb
fistl
xchg
push
dec
add
inc
xor
filds
mov
sub
sub
insl
and
add
adc
stos
mov
out
lock
rcrb
xchg
pop
aas
imul
sub
add
out
decb
xchg
in
rclb
lcall
ret
pop
push
push
in
movsl
les
push
dec
sbb
inc
hlt
ret
pop
mov
cmp
add
add
xchg
fsubrl
aad
loope
into
pop
mov
or
sub
lret
push
xchg
inc
cli
sub
add
add
pop
adc
inc
out
cmp
mov
nop
jmp
int3
pop
loope
bound
push
or
in
add
es
add
mov
xlat
sahf
lds
cmpsl
and
pop
add
add
pusha
aam
dec
icebp
jmp
jb
cwtl
call
push
and
movsb
jg
pop
xor
adc
add
add
xchg
and
imul
xchg
out
jl
xor
jp
add
out
xchg
and
mov
push
cmp
cmp
pop
mov
enter
bound
stos
pusha
daa
into
jne
lcall
shlb
inc
mov
sub
loopne
popf
add
shlb
lahf
popf
repnz
xchg
mov
push
cwtl
jmp
add
add
add
int3
cmpsb
cmp
and
inc
jne
imul
add
iret
in
dec
arpl
fs
or
fistpll
inc
in
mov
dec
mov
out
fidivs
andl
cld
mov
mov
ja
and
loop
in
test
jnp
jle
daa
push
movsb
and
ss
sbb
add
add
push
inc
orl
popf
mov
xorb
cmp
gs
xchg
popf
push
push
jb
push
mov
daa
shrl
add
subb
cmp
xor
xor
sbb
fbstp
dec
shll
mov
inc
jg
cltd
ret
mov
xchg
bound
push
dec
and
and
pop
xor
jg
xchg
outsl
add
add
cmp
pop
daa
in
testl
aaa
xor
ds
add
add
add
nop
mov
clc
mov
jp
rolb
adc
sub
rorl
fnstenvs
testl
sub
xchg
mov
cmp
adc
jp
sub
xchg
inc
popa
pop
in
pop
out
mov
lods
xor
lds
repz
mov
lods
add
add
add
fisubs
rorb
push
aad
add
int
mov
pop
push
lea
add
cmp
push
in
mov
rorb
add
loopne
adcl
add
cmp
fiaddl
scas
and
pop
shl
lea
jne
ss
jnp
add
add
cmp
mov
inc
xor
ljmp
xor
mov
js
mov
es
add
imul
movl
lret
mov
pop
push
incb
and
add
fimull
or
jg
cmp
cs
push
jecxz
add
add
loop
cmpsl
test
test
jne
inc
add
in
lock
push
mov
sbb
fstpl
add
add
or
xchg
ror
sti
loope
push
popf
jns
sub
loope
sti
fsubrs
js
dec
sub
sub
pop
ret
sbb
and
fistpl
dec
or
jle
cmc
add
mov
lret
mov
cwtl
cmc
jmp
inc
mov
and
testb
add
xor
jmp
jmp
scas
and
movl
inc
fwait
rolb
add
add
mov
cmp
jp
fsubrs
xor
add
sub
add
outsl
mov
fcoml
push
shrl
mov
pusha
repz
subl
add
sti
je
data16
imul
icebp
pop
add
add
push
add
mov
mov
arpl
fidivrl
add
inc
mov
scas
adc
les
ljmp
add
je
pop
addr16
push
or
aaa
in
or
das
je
push
ljmp
pushf
add
add
push
fdivl
jle
pop
ds
insb
push
imul
ret
cmp
mov
mov
loope
push
lods
lcall
adc
mov
adc
mov
cs
inc
xorb
and
cli
test
inc
add
add
push
cmpsl
adc
dec
fstpl
jmp
out
dec
cmp
dec
mov
xchg
in
fisttpll
xchg
and
bound
shr
out
cmpsb
sarb
pop
ror
lods
mov
add
sarb
cmpb
push
fisubrs
loop
add
add
push
sub
add
scas
repz
fdivrs
lret
jmp
cld
add
add
ror
sti
mov
pop
or
ljmp
fstps
je
mov
pusha
clc
inc
sbb
in
std
lcall
add
pop
sbb
jle
mov
pop
fisttpll
mov
push
mov
inc
fxch
ret
into
sub
add
cmp
cmp
mov
jg
add
add
sti
mov
dec
xchg
cmpsl
push
sbb
add
enter
cmpsl
mov
add
xor
divb
adc
loop
int
xchg
les
add
adc
cld
sar
jnp
mov
jecxz
inc
and
or
adc
lcall
add
lret
jno
aam
cli
dec
ds
in
aad
push
and
lock
aad
mov
sbbl
add
jmp
insb
stos
movsl
in
mov
andb
lock
mov
repz
xor
cwtl
ljmp
mov
or
int
xor
mov
adc
mov
cmp
inc
lods
add
fsubl
shlb
and
or
ljmp
inc
add
add
lods
or
fcmovbe
mov
cmpsb
push
test
sbb
jne
mov
mov
mov
hlt
bnd
stos
test
mov
pop
cld
push
add
add
fs
ss
xchg
testl
mov
les
shrb
test
add
add
jno
or
cltd
data16
adc
jb
paddb
ss
jmp
add
sbb
add
add
pop
rorb
addr16
stos
inc
orl
ss
xor
inc
iret
jmp
adc
xchg
or
mov
insl
sqrtps
lret
jecxz
add
add
add
mov
adc
shr
jnp
test
lds
xchg
out
add
loopne
shr
xchg
inc
adc
cmpsb
lret
iret
push
pusha
lods
jno
fbstp
shrb
inc
pop
popf
mull
shrb
mov
scas
movsb
fldl
movb
jnp
aaa
cwtl
add
and
and
jno
data16
into
inc
lock
mov
add
clc
adc
jbe
pop
cwtl
hlt
pop
add
add
fstpl
lods
mov
or
mov
add
mov
out
add
add
std
xchg
and
fnsave
hlt
mov
dec
add
sbb
push
or
dec
xor
mov
roll
inc
add
ljmp
add
into
add
sbb
jp
stc
loope
dec
push
mov
add
add
das
push
ljmp
icebp
mov
and
inc
jnp
or
lods
add
shrb
mov
push
shll
outsb
mov
adc
add
push
add
pop
call
sub
inc
pop
movsb
mov
add
jbe
fsubl
mov
inc
lock
jle
add
add
inc
inc
cli
icebp
xor
adc
xchg
sub
outsl
lcall
sbb
push
jg
adc
add
ficoms
inc
push
xor
fdivrl
xor
outsl
pop
mov
rorb
loop
adc
add
add
jns
pop
stos
rorb
xor
das
xchg
adc
pop
push
or
iret
sub
stos
jbe
in
imul
mov
sbb
pop
jmp
add
add
and
inc
jne
fnsave
fs
pop
sub
ficoms
les
mov
jmp
or
cmp
add
adc
add
xchg
add
push
xchg
pushf
push
dec
push
pop
adc
or
rcrb
xchg
dec
mov
out
aas
pop
pop
add
add
add
pop
jb
xlat
out
and
mov
jp
iret
and
or
mov
cltd
sbb
dec
leave
arpl
lret
or
add
sbbb
mov
dec
pop
push
jg
jmp
xchg
scas
adc
movzbl
and
std
mov
aad
into
test
sub
mov
pop
insl
and
add
add
into
mov
sub
repnz
test
cwtl
pop
mov
fisubrs
insl
or
mov
mov
mov
add
add
int
push
xchg
mov
dec
out
push
mov
xlat
stc
testl
addl
cwtl
loop
add
sahf
cmovle
repnz
add
add
into
push
cmp
lahf
mov
out
push
into
out
xor
clc
inc
add
add
int
pop
adc
sbb
pop
push
pusha
mov
xchg
and
scas
call
pop
jno
sbb
add
add
out
pop
leave
das
int
xor
outsl
mov
test
in
es
adc
add
add
dec
sub
fwait
mov
pop
push
test
fs
cwtl
push
jae
fwait
ret
xchg
pop
out
jne
push
cmp
add
push
inc
call
outsb
hlt
push
sbb
pop
sub
pusha
dec
or
scas
push
sbb
add
add
mov
or
lcall
fwait
add
mov
popf
add
add
add
pop
fiaddl
jb
mov
jl
and
cmpb
clc
shrb
mov
popl
lahf
popa
xchg
push
adc
out
inc
add
add
aam
xchg
test
popf
stc
mov
movsl
pop
scas
mov
mov
push
cmp
lret
push
imul
adc
test
add
fldl
mov
decl
or
add
add
xchg
pop
jne
mov
sbb
add
adc
leave
jo
popa
and
jo
int
add
aaa
clc
test
out
in
xchg
pusha
sahf
adc
dec
mov
inc
cmp
popa
pop
imul
jo
sub
or
cmpsl
add
mov
add
mov
mov
gs
arpl
or
mov
add
nop
push
addr16
push
mov
mov
add
add
sub
fstp
aas
test
ficoms
pop
icebp
lods
pop
add
in
jge
inc
mov
sub
rorb
push
xlat
cmp
test
notb
cli
clc
fsubrl
dec
push
sahf
leave
xor
add
cmp
stos
jge
cmp
mov
mov
cmc
test
adc
pop
xor
inc
dec
pop
mov
and
imul
dec
adc
test
stos
and
add
or
mov
mov
and
inc
sbb
cld
repnz
add
add
int
xor
or
xor
adc
sub
in
fildll
inc
cmpsl
add
popa
es
lods
add
stos
scas
cmp
cmc
iret
sbb
hlt
shrl
mov
sahf
sub
shrb
push
sbb
add
clc
outsb
jb
xor
shll
sub
mov
add
ljmp
mov
cmc
pop
jmp
adc
or
ljmp
adc
pop
ret
mov
int
mov
adc
sbbl
imul
jecxz
sbb
les
xacquire
es
add
add
aas
fsubrl
rcll
cmp
mov
adc
jl
dec
xchg
outsl
aad
sub
aad
loopne
adc
add
ret
and
adc
pop
in
cmpsl
imul
add
inc
lea
cmovo
std
mov
dec
hlt
test
mov
das
xor
or
jne
shlb
cmpb
jne
leave
push
addl
orb
pushf
inc
icebp
and
lahf
aaa
aaa
cmp
add
mov
push
std
pushf
add
cs
insb
cmp
pop
xor
push
fdivr
sbb
pop
jo
pop
out
cld
leave
dec
xchg
ljmp
loopne
lcall
mov
mov
jns
add
rorl
xor
jo
add
add
push
roll
mov
lret
mov
add
adc
cmp
xchg
jnp
cmpl
add
cmpsl
and
aam
ja
jbe
nop
testl
sub
sahf
dec
push
add
add
mov
mov
insl
mov
xor
sub
or
add
fsts
pop
std
std
xchg
xchg
pusha
pop
mov
ret
add
sbb
inc
xor
ret
leave
pop
sub
mov
pop
ss
lret
iret
cld
in
jge
add
add
in
cmp
aaa
and
aam
pop
lret
out
fsubrl
test
xchg
dec
add
adc
add
inc
push
call
cmpsb
xor
xor
nop
mov
clc
scas
sbbb
rorl
add
xor
xlat
xchg
popa
js
mov
pop
into
int
cmp
rorl
or
std
addr16
add
aaa
adc
iret
jl
jns
push
call
out
cmp
dec
pop
in
sub
pop
xchg
push
cmpsl
test
loope
daa
add
and
out
ret
add
scas
in
loop
pop
fiaddl
outsb
jo
fisttps
pop
xchg
add
rcrl
addr16
inc
add
leave
int3
minps
addr16
pop
out
add
add
cld
int
jns
in
sub
fimull
pusha
sbb
push
into
out
shlb
or
mov
mov
rcrl
adc
dec
insb
inc
inc
xchg
push
fildl
ss
aam
add
sbb
into
test
add
mov
jb
push
mov
fimuls
lock
mov
add
add
jle
jne
mov
add
ficoms
mov
xor
xchg
nop
test
add
add
into
out
orl
mov
dec
jp
cli
insb
or
add
pusha
jae
xchg
mov
fdivs
xor
or
call
sub
add
add
push
xor
cmpsl
xchg
cltd
sbb
xor
jg
push
adc
cld
inc
test
add
in
sbb
popa
sahf
dec
inc
aad
push
adc
pop
std
fiadds
stc
in
icebp
xchg
adc
push
js
in
xor
mov
cmp
addb
add
add
pop
sub
repnz
arpl
fmul
xchg
lds
dec
out
pop
xor
ja
xor
dec
add
add
mov
cmc
mov
mov
nop
push
inc
cwtl
nop
and
add
inc
mov
ss
and
push
lds
adc
arpl
sarl
push
push
mov
aaa
and
das
das
jmp
adc
and
sub
add
pop
add
inc
sub
add
lds
aad
test
add
add
ss
add
add
sub
ss
loopne
jb
add
lods
sbb
inc
jecxz
stc
std
insb
inc
pop
sbb
jmp
sbb
data16
test
fimuls
mov
add
jecxz
in
in
ret
cmp
sub
lcall
fldt
adc
add
jmp
or
mov
sti
aaa
sbb
sub
add
cmc
outsb
in
jmp
aad
cmp
rorb
shll
stc
loope
hlt
sbb
mov
sbb
ljmp
idivl
jo
add
sbb
jb
orb
push
dec
fisttpl
add
xchg
add
mov
call
xor
inc
mov
add
pop
dec
js
sub
insl
sbb
add
mov
enter
lret
add
sbb
add
sub
jmp
jmp
enter
sbb
mov
adc
and
jns
in
mov
data16
popa
into
add
or
lods
jge
or
js
dec
add
aam
pop
les
inc
and
cmp
add
loope
int
push
pusha
push
add
inc
out
jecxz
les
mov
call
add
fs
int3
adc
dec
mov
mov
ret
add
lret
bound
add
or
jmp
ja
pop
ficoml
mov
or
aam
push
jmp
daa
cltd
inc
movl
and
sub
fdivr
and
add
aad
test
sub
sbb
add
cld
ret
ja
in
orb
add
paddsw
push
or
pop
test
pop
push
leave
dec
add
or
pop
push
int3
in
sub
add
test
cwtl
add
ds
scas
out
push
adc
stos
test
xchg
dec
or
sbb
add
loopne
mov
jl
fcmovnb
rorl
iret
in
and
or
pop
sbb
push
jo
pop
inc
pushf
std
jge
adc
arpl
push
pop
xchg
xchg
testl
and
hlt
inc
mov
ret
xchg
mov
mov
fcomps
xor
sbb
fdivl
movb
add
fyl2x
aad
cmpsb
xchg
lret
xchg
call
fcoms
add
add
lahf
test
repnz
fnstenv
push
into
mov
cmpl
adc
rorb
ret
dec
push
add
lret
mov
shr
xchg
push
add
roll
adc
cmp
out
cmp
imul
add
fwait
popf
pop
mov
fsubr
xchg
mov
decl
add
inc
lods
lods
sbb
add
add
pop
push
xor
data16
mov
cld
test
mov
ret
add
pop
sbb
xor
sub
inc
outsl
xor
out
fldcw
add
add
stos
push
aas
xchg
repnz
inc
repz
dec
xlat
dec
clc
cwtl
sub
fnstcw
sahf
mov
inc
push
push
int
mov
fwait
and
pop
add
mov
daa
mov
xchg
arpl
dec
push
add
jmp
jbe
out
cmp
xchg
data16
ret
adc
shlb
xor
decl
pusha
add
cmp
pop
push
andb
cmp
addr16
shrl
add
inc
ss
aam
pop
out
sub
and
icebp
icebp
outsb
leave
add
subl
aaa
ss
mov
jb
sbb
jne
ret
cwtl
mov
pop
aad
popa
inc
and
push
js
popa
sbbl
cmpsl
inc
in
mov
xchg
xchg
add
and
mov
or
jb
push
into
stos
sbb
out
ret
pop
cld
sub
inc
jno
scas
push
fnstsw
or
test
cmp
aam
jmp
add
and
pushf
and
sub
cmp
or
add
dec
sub
sub
fcoms
mov
mov
jg
xchg
add
xchg
jbe
dec
cmpsb
nop
in
leave
aas
outsb
xchg
int
inc
add
pop
push
aad
sbb
imul
fiadds
jmp
inc
add
push
negb
xor
inc
mov
add
sub
dec
popa
and
inc
sub
sbb
add
out
xor
jge
repnz
clc
push
add
cwtl
test
add
or
xchg
sub
mov
pop
hlt
les
pop
rcrb
add
decl
or
add
push
arpl
inc
es
add
xor
enter
mov
mov
add
mov
add
scas
inc
scas
leave
pop
dec
gs
xchg
and
test
insl
sub
add
add
lods
push
ret
jae
insb
push
sbb
pop
xorl
in
loopne
add
call
sub
call
or
mov
fcmove
shrl
mov
fcmovu
fwait
aaa
xlat
jle
or
add
dec
stos
ficompl
in
stc
cmp
xchg
into
inc
dec
jo
add
fs
std
pop
bound
call
clc
roll
repz
mov
pop
add
pusha
xor
iret
xor
das
push
fiadds
inc
cwtl
xchg
ss
cmc
push
sbb
int3
xlat
inc
in
fistl
mov
dec
rolb
add
add
pop
pop
mov
dec
cmp
ud1
mov
out
sub
jo
push
pop
push
rcrl
inc
cltd
nop
sub
outsl
dec
mov
sbb
iret
sub
leave
sub
add
aam
scas
arpl
push
and
push
xchg
add
xor
dec
and
es
add
mov
dec
sbb
push
stc
cmp
push
test
jnp
dec
rorl
loopne
mov
fdivrs
lahf
rolb
add
adc
lret
jbe
or
mov
pop
jle
test
fisubl
cmp
or
mov
dec
sub
adc
mov
xor
sahf
lret
inc
dec
pop
and
pusha
out
scas
add
xchg
cmp
stc
loopne
negb
lea
pop
push
add
push
icebp
out
xor
movsl
inc
cmp
pusha
pop
push
push
jbe
popf
int
add
add
movsb
pop
aas
cmpl
dec
adc
add
mov
xchg
lods
sahf
xorl
push
hlt
and
inc
xor
push
lret
pushf
push
clc
dec
or
and
jecxz
xchg
insl
cltd
lahf
lea
in
jp
call
addl
loope
xchg
loopne
dec
xchg
int3
ret
out
and
cmp
dec
and
orb
scas
mov
add
dec
xor
and
aam
pop
int
push
add
add
inc
mov
flds
fnstsw
je
push
adc
out
mov
repz
cmp
inc
jnp
mov
js
repnz
mov
adc
dec
xchg
xchg
gs
sbb
xchg
adc
add
leave
dec
popf
das
outsb
icebp
addl
cmp
and
jle
in
inc
sbb
test
push
ret
fcoms
add
jbe
test
xor
mov
popw
add
mov
stos
les
or
loope
pop
nop
add
fiaddl
inc
add
out
xchg
arpl
ss
adc
lds
add
les
sbb
sbbb
xchg
jbe
shrb
add
or
scas
sbb
loop
sub
push
jge
jne
insb
push
sub
add
arpl
std
mov
jo
ljmp
fwait
int3
cmp
in
cmpsl
pushf
fwait
js
cmp
mov
mov
add
cmpsb
test
inc
inc
aad
mov
add
lock
aaa
stc
out
cli
iret
mov
xor
adc
aad
inc
notb
rcr
add
xor
add
fisubrl
and
or
pop
cmp
mov
add
cmp
lret
repnz
jae
imull
dec
js
and
outsb
das
mov
or
add
add
add
sahf
mov
and
dec
in
daa
imul
call
add
inc
mov
rorl
jns
cmc
jmp
aaa
sub
leave
and
pusha
add
push
int3
cmpsb
das
in
lcall
xor
or
test
fucom
loopne
or
push
push
jne
xchg
scas
jnp
add
add
shll
out
mov
dec
out
loop
rol
shrl
dec
pop
mov
add
mov
js
aad
adc
sbb
mov
pop
ja
dec
test
cmp
xchg
cmp
push
mov
loope
lea
ljmp
jno
lret
dec
xor
in
jle
call
dec
adc
mov
inc
add
stos
push
adc
cwtl
xchg
ret
loopne
jge
cmp
jmp
cmpl
scas
dec
out
mov
push
daa
fisttps
push
rolb
jecxz
or
xchg
adc
cltd
add
int3
inc
add
out
dec
std
addr16
pusha
and
pop
arpl
rcll
cmp
add
inc
mov
dec
scas
xor
sub
in
add
out
cmpb
sub
ret
lods
ret
xor
cmp
or
sbb
add
adc
jge
xor
add
pop
addr16
xor
jbe
loopne
adc
mov
xor
mov
stos
daa
pop
cmc
insl
mov
orb
or
jmp
sbb
dec
pop
cmc
dec
cmpsl
cmpsb
pop
in
test
inc
cmp
or
pusha
push
add
add
fiadds
stc
jmp
mov
push
call
inc
pop
and
inc
xor
popa
mov
add
rcll
out
gs
ss
js
shrb
test
sbb
dec
add
mov
lock
addl
add
xchg
xchg
and
fmull
mov
mov
xchg
pusha
xor
push
rcll
or
push
les
cwtl
jbe
adc
dec
sbb
pop
cs
les
adc
xor
inc
adc
xchg
inc
xor
add
out
mov
add
inc
pop
cmp
or
adc
xchg
lcall
cmp
inc
cmp
pop
cmp
sbb
add
dec
arpl
movsb
push
sub
jo
mov
add
lods
jo
sub
iret
addl
and
add
xchg
les
xchg
fstps
in
test
pushf
sub
fldt
rcrb
cmp
iret
pop
add
cli
dec
stos
mov
add
xor
lret
inc
dec
aad
jbe
add
aas
sbb
mov
jmp
sti
xor
and
xchg
mov
arpl
xchg
verr
pop
or
push
inc
push
jl
dec
xchg
rolb
aam
xchg
xor
adc
pusha
shlb
mov
inc
cwtl
lcall
popl
xchg
pusha
mov
out
sub
repz
add
jo
jbe
xor
adc
enter
sbb
jne
in
jge
lret
sub
push
xor
or
add
add
add
add
add
add
add
adc
in
add
add
add
nop
inc
dec
add
mov
adc
add
test
nop
adc
arpl
mov
test
cwtl
js
add
das
and
mov
add
jle
aaa
add
mov
sub
add
cmp
add
add
lea
mov
hlt
push
add
xchg
fisubrl
nop
dec
add
add
mov
add
add
add
add
add
add
lock
xor
add
xor
add
add
cmp
add
xor
add
push
gs
imul
add
add
add
shl
add
lock
add
add
push
lock
add
add
decl
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
sub
or
and
or
movlps
sbb
push
adc
sub
or
or
add
add
or
add
pop
add
je
and
jl
sub
lods
xor
test
je
loopne
sbb
xor
lea
movsb
mov
call
cmp
jae
push
or
xor
inc
xor
mov
lea
mov
mov
call
sub
lea
add
mov
call
pop
sub
jae
and
call
mov
call
jne
pop
cmpsb
sub
inc
mov
sub
add
fcos
cmp
sub
add
movsb
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
inc
ret
add
flds
in
call
leave
call
out
jb
ret
sub
sbb
ret
add
sub
sub
adc
pop
aaa
addr16
mov
sub
or
push
lock
push
ljmp
add
or
cmp
mov
je
mov
mov
insl
pop
fcmovnb
mov
push
xchg
xlat
loope
jo
insb
loop
pusha
mov
pushf
enter
addr16
lcall
loope
imul
cmc
imul
or
xchg
dec
insl
adc
mov
inc
repnz
pusha
adc
jno
out
je
andb
loopne
icebp
mov
push
push
push
push
push
xchg
or
add
in
dec
adc
push
sub
inc
cld
add
cld
mov
mov
push
add
mov
add
lea
xor
add
nop
cmpl
je
mov
test
je
mov
das
mov
add
or
test
add
or
ljmp
push
call
fstl
lea
inc
fiaddl
push
push
iret
ret
aaa
mov
mov
testb
fcomps
test
fwait
cltd
call
pop
adc
je
loopne
enter
jnp
xchg
pushf
enter
mov
cltd
insb
jne
jmp
test
je
push
and
or
test
push
aas
das
push
cs
jmp
sbb
enter
push
push
shrb
push
daa
insl
or
sbb
cs
mov
xchg
fiadds
inc
or
dec
inc
mov
add
movb
add
mov
arpl
dec
out
daa
in
das
sbb
and
mov
rclb
sub
fs
test
les
inc
or
add
pop
ret
push
mov
add
push
sub
aad
sub
jl
mov
call
mov
add
jle
add
popa
roll
sti
xor
add
je
push
mov
add
addb
jne
xor
jmp
adc
add
jne
mov
ret
add
clc
pop
int
mov
pop
add
add
cmp
je
mov
push
add
mov
sub
mov
xor
lods
mov
add
lods
aas
mov
sub
inc
pop
add
lods
data16
jo
cmpl
add
adc
mov
mov
and
outsb
cmp
clc
add
mov
add
dec
scas
sahf
pusha
pop
shr
mov
mov
pop
mov
ss
push
or
add
add
jmp
xchg
mov
ss
stc
imul
cmp
or
cwtl
adc
mov
mov
adc
je
mov
add
push
push
lea
xorl
fiadds
pop
sbb
mov
or
jecxz
pop
push
mov
mov
jge
sub
pop
jp
test
mov
mov
jmp
cmp
jge
mov
inc
or
ret
je
dec
mov
jne
sbb
push
cmp
jne
or
rclb
les
in
cmpsb
push
push
test
cwtl
add
push
rolb
enter
loopne
movb
push
ret
int
sub
data16
sbb
adc
call
push
mov
pop
and
lock
inc
xor
mov
jae
popa
pop
je
dec
or
add
movsl
add
add
add
add
cmp
lret
push
mov
cmp
icebp
in
push
xchg
mov
jne
jecxz
mov
aad
xchg
or
xor
push
adc
mov
xchg
mov
jge
dec
xor
inc
adc
enter
loop
inc
jg
jnp
pop
and
inc
dec
hlt
push
jae
sub
adc
mov
ret
in
call
icebp
lret
inc
je
inc
popf
rolb
add
popl
call
mov
cli
cmp
jne
fiaddl
stc
jmp
mov
jecxz
movl
xlat
jo
xor
jnp
inc
or
inc
mov
pop
inc
fldcw
and
insl
insb
dec
push
imul
push
push
scas
cmp
je
add
jle
mov
aaa
cltd
int
jle
dec
lahf
inc
call
das
add
push
push
call
push
rcll
lds
push
sub
sbb
mov
mov
shlb
testb
xchg
out
cmp
lock
call
and
jo
addr16
jne
arpl
fisubrs
mov
push
inc
push
adc
mov
shlb
leave
mov
sbb
fcomps
xor
stos
or
jmp
or
xor
inc
mov
and
inc
pop
jb
pop
leave
pop
test
xchg
add
mov
mov
pop
and
lcall
insl
xor
icebp
mov
cmp
xor
pop
repz
xchg
xor
xlat
push
cmp
adc
add
dec
adc
jl
sbb
shr
sub
add
or
insb
mov
adc
ljmp
orb
mov
xchg
push
inc
jbe
sahf
aad
into
enter
or
ja
dec
mov
xchg
add
jae
bound
add
jo
imul
and
jb
jb
iret
mov
arpl
jo
cs
add
and
gs
jo
or
and
je
bound
shr
mov
call
dec
push
shlb
fs
test
insb
add
pop
sub
jne
xor
add
jns
or
jae
popa
addr16
outsl
js
add
fcoms
leave
ret
imul
call
js
je
iret
xor
sub
outsb
fs
add
outsb
mov
mov
dec
outsl
insb
sub
rcr
push
imul
out
arpl
cmc
cmp
lret
mov
adc
dec
cs
iret
jae
xchg
jle
inc
cmp
pop
pop
shr
lret
jns
mov
clc
cmpsl
lea
xchg
add
add
pusha
mov
mov
cld
lods
xor
test
je
xor
lea
movsb
mov
call
jae
cmp
jae
push
push
push
xor
inc
xor
mov
lea
mov
mov
call
jae
lea
add
mov
call
jae
pop
pop
pop
sub
jae
mov
call
jmp
mov
call
adc
dec
jne
inc
call
mov
cmp
sbb
cmp
sbb
push
mov
sub
rep
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
dec
pop
add
dec
add
add
add
pop
lock
pop
lock
add
add
push
lock
push
lock
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
