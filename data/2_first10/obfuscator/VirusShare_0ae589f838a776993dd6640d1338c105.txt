ljmp
call
in
add
mov
cmp
add
mov
sbb
leave
imul
sub
mov
push
cmp
cmp
add
add
add
add
mov
imul
mov
sbb
inc
cld
add
leave
sub
imul
xor
and
add
dec
add
imulb
shrb
sub
out
sbb
enter
fildl
cs
movb
adc
xor
mov
pop
ret
repnz
sub
add
inc
or
push
pop
cmp
add
sub
mov
or
insb
add
and
pop
clc
sub
std
pop
fstpt
rolb
mov
sub
add
push
pop
sub
in
in
mov
ss
or
enter
iret
mov
adc
call
sub
test
shll
imul
imul
mov
fistl
mov
adc
fistpl
sti
push
cmp
mov
push
adc
mov
pop
loope
mov
add
lock
fisttpll
fidivl
xor
lea
outsb
pop
sti
aas
pop
out
add
add
mov
rorb
insl
sub
sti
stc
push
dec
or
add
add
fucomi
ret
out
adc
aas
shrl
cli
pop
fs
outsl
fst
faddl
sarb
dec
add
push
test
mov
mov
push
mov
imul
mov
imul
mov
xchg
pop
lea
or
adc
repz
mov
add
insb
fcmovnb
outsb
push
pop
add
sub
push
adc
sbb
cmp
fcmovnu
xlat
imul
in
mov
data16
jecxz
rorb
sub
pop
inc
add
sbb
mov
and
sbb
mov
icebp
pop
or
shl
mov
push
push
inc
or
rolb
mov
rcrb
in
add
pop
mov
sbb
sub
jg
ss
pop
adc
insl
mov
sti
fs
or
adc
out
xchg
mov
fidivrs
or
cld
inc
fnstenv
cmp
add
insl
fwait
outsl
cli
push
shl
push
mov
and
jge
in
lods
rcr
out
xchg
or
jbe
insb
fcoml
add
rcrb
pop
pop
popa
ret
adc
ljmp
shr
leave
mov
adc
es
adc
icebp
sbb
dec
lock
lret
insl
mov
adc
jno
gs
mov
adc
cmpsl
insl
xor
in
sbb
sbb
or
and
ret
sbb
cmp
sbb
or
mov
aaa
out
inc
mov
push
push
sbb
imul
sbb
repnz
stos
sarb
push
jo
cmpb
testb
jmp
int3
ror
bound
lcall
cmpsb
xorb
mov
loopne
cmp
or
cmp
pop
ret
add
sbb
add
push
ja
out
icebp
imul
rclb
and
test
cli
or
insl
xlat
sbb
xor
pusha
inc
insb
call
dec
sbb
sbb
add
sbb
mov
xchg
jo
push
incl
mov
insl
mov
and
cwtl
or
or
add
add
sub
fcmovnu
pop
mov
xor
pop
stc
or
gs
jmp
mov
mov
sbb
lret
inc
jecxz
mov
add
push
aaa
push
fcmovne
push
adc
add
out
or
cld
sub
popf
lods
rorb
mov
or
popa
sbb
imul
ret
xchg
adc
inc
sub
adc
or
ss
xchg
sbb
jno
test
mov
roll
popa
fistl
sbb
jbe
lea
sarb
sbb
xchg
adc
adc
mov
xor
rclb
push
xor
mov
ficomps
cvtdq2ps
fadd
rol
add
jo
xor
rorl
or
shlb
jecxz
mov
mov
and
out
test
pop
ret
int
rcl
add
pusha
jno
shll
sbb
or
inc
leave
ret
test
add
jl
sub
pop
int3
mov
insl
int
aaa
aad
sub
adc
push
arpl
out
and
dec
es
inc
adc
js
jmp
sub
push
pop
lock
jmp
adc
xor
sbb
sbb
loopne
push
shr
inc
fldt
adc
cmp
test
insl
jae
lods
clc
imul
cli
fmull
or
lods
ret
pop
add
adc
adc
testb
js
push
add
and
add
push
sbb
push
cmc
imul
call
sbb
add
rol
add
gs
rcll
leave
cwtl
push
cmpsb
iret
adc
or
inc
sbb
mov
call
sbb
addr16
imul
clc
or
fcomps
push
imul
jo
or
add
icebp
ficoml
pop
std
or
or
add
sarl
mov
sarl
mov
jle
leave
or
adc
popa
cmp
ss
fldt
sbb
cmpsl
pop
sbb
push
mov
in
je
mul
ds
mov
sahf
fcomp
fcoml
or
sub
push
fldl
or
or
lods
adc
clc
jmp
pop
enter
loop
leave
les
addr16
sub
pop
mov
and
outsb
in
mov
pop
mulb
shl
into
in
shll
in
mulb
dec
cli
ja,pn
adc
pop
push
aas
jmp
add
out
testl
stos
je
cmp
inc
rcrl
add
mov
mov
xchg
xlat
sarl
imul
rorl
sub
out
add
sbb
test
inc
stos
shrl
mov
sub
lock
pusha
push
jae
sti
push
add
dec
push
sbb
adc
adc
xlat
leave
out
iret
push
sarb
rcrb
icebp
lock
mov
add
sbb
or
je
imul
addl
add
ret
push
js
adc
sbb
lahf
and
push
jno
popa
mov
js
jb
xchg
out
shlb
pushf
cltd
aaa
jle
dec
ja
lods
rcrl
cmp
push
mov
in
jecxz
or
cmp
mov
imul
push
pop
pushf
arpl
sbb
xor
in
dec
push
scas
adc
stc
mov
pop
into
jg
inc
add
movsb
mov
leave
call
decl
xor
repnz
cmp
rorb
or
or
dec
dec
inc
add
jge
test
mov
out
adc
pop
dec
adc
icebp
out
or
sbb
popa
ret
push
and
lods
mov
loope
sbb
inc
div
inc
hlt
add
cmp
mov
and
mov
cs
xchg
mov
adc
and
jmp
jne
mov
push
movbe
or
mulb
cltd
add
aaa
or
adc
repnz
add
xchg
fsubrl
shlb
xor
les
xor
push
scas
or
sbb
sbb
vmovntps
and
push
mov
push
pop
push
or
out
sub
mov
xorl
mov
xlat
or
pop
dec
out
push
idiv
imull
push
mov
push
ret
or
push
lods
movsl
dec
mov
fstps
fwait
cmpsb
lock
sbb
adc
and
orl
add
scas
pushf
or
inc
adc
mov
cmc
fdivrl
test
lcall
fisubrl
jmp
sub
xchg
xor
cmp
xchg
sbb
lods
or
push
jo
or
pusha
std
mov
mov
shlb
movsb
icebp
cmp
mov
pop
pop
jle
das
insb
jo
push
push
mov
sbb
ret
cmc
lahf
push
es
sbb
ret
rcll
jns
inc
nop
int3
lods
xchg
sbb
movsb
push
fcmovnb
sbb
in
popf
pop
xor
mov
sbb
rorl
mov
cmpsl
in
lea
les
mov
subb
adc
add
sbb
inc
fcomps
mov
mov
scas
pop
or
movsb
fistpl
add
loopne
sub
push
dec
insb
add
insl
ret
adc
lcall
pop
call
dec
cs
call
cwtl
push
lds
pop
imul
mov
pop
pop
jae
jle
jno
loop
out
xchg
sti
lret
add
mov
mov
jo
mov
out
cmp
test
xchg
sbb
sahf
prefetch
clc
and
imulb
test
jne
imul
les
mov
shll
sbb
insb
push
enter
mov
mov
pop
cltd
push
mov
sbb
sbb
aam
insl
rclb
inc
xchg
cmp
popf
sub
addl
mov
roll
or
sbb
or
adc
movsl
test
outsb
int
test
mov
orb
push
xchg
sbb
xor
sarb
loopne
je
out
bound
jno
xchg
push
adc
in
xchg
mov
cmp
mov
or
insl
testl
push
jno
cwtl
adc
addr16
mov
push
mov
push
mov
ret
or
aas
push
push
out
in
jg
mov
mov
add
xlat
fdivrs
into
loop
cmp
cmp
or
mov
inc
ss
push
add
test
fimull
adc
mov
rcrl
and
sarl
jb
mov
stos
sbb
pop
cmp
in
inc
sub
ficompl
loopne
inc
sbb
inc
mov
adc
movsl
clc
mov
lret
jbe
pop
xor
pop
or
int
mov
xchg
out
sbb
loop
pop
add
sbb
into
dec
aas
test
xchg
fisubs
jge
jle
adc
cltd
cs
test
xor
mov
dec
leave
leave
out
dec
insl
dec
push
cmp
icebp
mov
push
stc
shrl
cli
adc
xor
push
scas
inc
inc
and
xor
sub
inc
pop
mov
enter
lods
icebp
push
add
xchg
push
pop
jbe
or
pop
rorb
add
mov
xlat
mov
jecxz
pop
add
or
xchg
leave
je
cmpb
sub
jmp
cmp
push
push
sbb
mov
shlb
stos
stos
push
add
imul
pop
or
mov
xor
leave
lea
cmp
imul
mov
or
or
mov
outsl
incl
sahf
aam
sbb
cmp
adc
or
dec
call
mov
call
sbb
sub
cmc
cld
loop
adc
sbb
add
mov
ret
jge
sbb
jecxz
or
andb
jno
xor
or
cmp
lret
les
scas
push
mov
mov
das
add
sbb
sbb
call
mov
and
testb
ja
shrb
fisubrs
push
xchg
mov
jmp
scas
add
jbe
stc
add
add
adcb
and
js
xchg
outsb
push
lahf
sub
sbb
adc
in
leave
fs
lea
push
jne
ss
sbb
push
xor
bound
and
and
cwtl
fcomps
cmp
inc
popf
or
push
jp
es
cli
ljmp
push
rclb
loope
add
and
stos
movsb
cmp
sbbl
jo
lahf
rclb
rcrb
in
inc
and
lods
adc
xchg
mov
shrl
pop
or
push
add
dec
adc
mov
lods
or
mov
or
testl
xchg
pop
imul
xor
in
jne
xor
push
test
dec
shll
cmp
fimull
loope
rorb
xchg
lods
jg
xchg
inc
add
mov
into
movsl
insb
andb
and
ret
mov
cmp
push
push
push
or
cwtl
imul
jns
xor
rol
push
xchg
pop
pushf
mov
pop
call
shrb
cmp
ljmp
push
jle
sbb
pop
pop
js
imul
shrb
xchg
or
dec
cmp
add
cmp
aaa
idiv
ret
adc
mov
push
mov
jo
jmp
mov
mov
mov
pop
dec
adc
mov
ret
ds
jb
arpl
mov
and
enter
add
lea
rcrl
sbb
leave
or
mov
lret
push
into
push
or
and
fmul
add
into
push
adc
lret
movlhps
sti
imul
dec
cmp
test
pusha
stos
adc
sbb
lret
push
inc
cmpsb
and
cmp
xor
xor
or
adc
xor
mov
mov
xchg
add
pusha
or
xor
sti
dec
ss
ja,pn
add
outsb
push
pshufw
adc
mov
cwtl
push
mov
call
adc
pop
rorb
lock
sbb
xchg
testb
jnp
fs
orl
in
cmp
popa
scas
in
sub
mov
adc
sbb
push
sbbb
sbb
imul
pop
add
popa
ret
adc
movsl
add
sub
lahf
cltd
jo
push
addr16
rolb
jne
jmp
loope
ret
inc
cmp
jne
jne
ficomps
pushf
mov
fistpl
sbb
fisttpll
mov
sub
fistl
pop
jecxz
cmp
icebp
ja
mov
into
push
out
stc
or
shl
add
js
leave
and
pop
jb
rolb
jge
test
pop
jl
sub
or
xchg
rol
inc
call
add
cwtl
pop
pop
mov
inc
inc
dec
push
sar
mov
and
out
adc
inc
xchg
dec
pusha
mov
or
mov
ret
or
out
push
dec
loop
xor
mov
es
addr16
pop
mov
adc
adc
dec
sub
inc
ret
dec
dec
or
aad
pop
rorl
lret
add
xor
mov
notb
sbb
add
cmpsl
pop
shrb
ljmp
clc
decl
insl
mov
inc
into
push
sbb
ret
pop
pop
lret
adc
push
sub
icebp
push
pop
or
or
jle
orb
gs
in
add
jge
push
add
add
or
and
test
inc
mov
fwait
mov
add
gs
cmp
xor
xor
add
into
cltd
jp
cltd
mov
jle
adc
sbb
push
arpl
push
xchg
xchg
and
inc
sar
aam
or
mov
mov
push
xchg
jae
dec
mov
inc
mov
cmpsl
pop
in
mov
pop
xlat
dec
add
pop
and
call
or
rorl
or
sbb
jl,pt
xor
scas
nop
add
xor
mov
sub
mov
pop
sbb
dec
fildl
dec
push
add
sub
or
pop
gs
mov
adc
sbb
or
jnp
mov
push
mov
fwait
dec
mov
std
jo
xor
clc
push
dec
add
loope
push
xor
pop
sbb
xchg
inc
mov
movsb
add
in
test
push
add
pop
cs
fisttpll
or
icebp
out
sbb
jge
rorb
or
adc
dec
daa
aad
insb
lods
lcall
ret
push
push
insb
mov
adc
jno
mov
dec
adc
popa
out
pop
dec
fcompl
je
push
and
shrb
lea
popa
xor
or
andl
pop
mov
int
push
xor
mov
push
sub
xor
or
push
jno
or
out
adc
scas
dec
mov
sbb
cmp
adc
xchg
inc
rorb
or
js
push
cmp
pop
in
and
cli
pop
pop
stos
bound
adcb
jno
jo
mov
fisubrs
sahf
and
dec
mov
mov
test
scas
or
push
pop
test
jo
mov
sub
bsr
push
push
push
lahf
push
rclb
loopne
mov
xchg
or
imul
in
sbb
inc
in
notb
or
ret
out
loop
and
icebp
jbe
leave
mov
imul
cwtl
rol
mov
enter
push
adcb
xchg
pusha
adc
jle
in
push
add
cli
adc
inc
stos
cltd
pop
pop
movsb
inc
fcomps
dec
ret
sarl
push
es
cld
adc
cmpb
dec
adc
rcrl
fcoms
and
lret
sub
fs
cmpsb
inc
xchg
scas
incb
push
jmp
push
cmp
jb
or
aam
inc
loopne
xchg
test
sbb
mov
mov
push
adc
mov
add
pop
push
ret
push
pusha
push
or
sub
pop
testb
fsubp
dec
mov
and
lods
jne
add
adc
push
push
cmp
punpckldq
cmp
xchg
sbb
mov
jmp
and
out
jl
test
shll
incl
pop
je
loopne
mov
push
push
jp
inc
xchg
shlb
mov
add
ljmp
xlat
je
pop
pushf
cwtl
push
xchg
add
out
mov
push
je
and
sbb
add
adc
sbb
movsb
adc
mov
fdivl
adc
dec
sub
inc
pusha
jmp
adc
test
or
nop
sarb
aad
arpl
cmc
sbb
mov
dec
lock
sub
mov
xchg
shrl
or
insl
loope
scas
test
push
roll
push
xor
les
ficoml
inc
or
cmpsl
push
call
adcl
adc
cmp
add
shlb
inc
faddp
dec
mov
adc
adc
pop
push
shl
in
xchg
shl
add
ja
adc
sub
sbb
ret
sti
push
mov
in
ret
orb
lods
adc
rclb
adc
je
cmp
sbb
scas
mov
xor
xor
lods
inc
js
cmp
int
jae
stos
test
mov
dec
cmp
mov
mov
jae
pop
fsubrs
push
pop
roll
out
sbb
scas
js
push
inc
aam
rolb
jecxz
mov
out
and
out
gs
mov
sbb
stc
mov
push
mov
push
lret
inc
mov
jmp
sbb
or
adc
arpl
roll
dec
pushf
mov
mov
adc
scas
inc
sub
clc
test
mov
scas
shl
stos
insl
push
inc
pop
loope
or
or
inc
inc
in
mov
jle
enter
int
inc
cmp
sub
pop
jmp
jae
sub
ret
lret
mov
clc
pop
dec
mov
shlb
inc
into
aas
cli
add
arpl
jb
sbb
xchg
sub
shlb
pop
insb
and
mov
cs
inc
add
xchg
or
rclb
cpuid
idivb
or
push
pop
mov
dec
jne
mov
inc
out
fsubl
push
dec
cmp
dec
cmp
rolb
add
out
add
pop
push
fcmovnbe
add
mov
nop
adc
into
in
pop
cmp
xor
pop
shl
push
xor
sbb
jmp
scas
jb
cmovno
push
cmpsb
mov
orb
ljmp
insl
push
pop
rclb
jp
xor
xor
adc
data16
mov
adc
inc
into
xor
and
sbb
adc
shrl
sub
sbb
or
jle
stc
or
nop
cmp
sbb
cwtl
or
rorb
cmp
sbb
inc
push
test
push
xchg
testl
cltd
in
pop
xchg
or
pop
icebp
les
pop
push
mov
adc
mov
ret
push
push
imul
push
orb
add
mov
pop
jecxz
dec
jne
cltd
cmp
dec
pop
sarl
add
xchg
jmp
push
fdiv
or
inc
call
ds
imul
adc
mov
sbb
mov
jb
and
xor
push
in
xor
mov
adc
jnp
arpl
jne
or
push
aas
enter
push
jnp
pop
jo
mov
add
inc
insb
sbb
pop
in
jle
pop
or
ret
xor
sbb
icebp
sub
repnz
in
stos
shl
pop
xchg
adc
adc
jmp
mov
cmp
push
add
mov
mov
mov
push
inc
xchg
mov
ret
inc
sub
in
fs
add
cli
push
aad
cli
test
xor
sub
stc
or
dec
popa
lahf
and
cmp
mov
mov
jl
adc
inc
or
pop
enter
push
cld
into
shll
ficomps
jmp
add
jb
mov
pop
into
cmp
or
jb
adc
cmp
pop
add
push
pusha
arpl
sub
push
adc
or
jmp
stc
les
aas
sbb
pop
xchg
push
mov
xchg
adc
sbb
rcll
xchg
popa
cwtl
cmp
or
adc
sub
aad
in
mov
lds
mov
sbb
gs
push
or
push
call
pop
aas
cmp
jmp
push
clc
add
mov
cmp
mov
lds
cltd
push
in
jae
fcomi
mov
test
or
rcrl
sub
aam
jmp
sbb
inc
outsb
sbb
cmpsb
scas
imul
addb
dec
cmp
adc
imul
repnz
mov
clc
pop
cmp
in
dec
das
loopne
jo
mov
and
imul
ret
shrl
inc
movsb
pop
std
xchg
adc
push
mov
pushf
fs
into
orb
hlt
jnp
lcall
sub
mov
or
insb
push
inc
or
jae
add
rolb
mov
and
fucomip
push
push
mov
mov
adc
add
or
inc
push
add
pop
adc
cs
adc
and
sbb
lcall
test
in
sub
xor
or
push
jmp
ret
xchg
adc
nop
jmp
lret
pusha
into
dec
rolb
sahf
pop
int3
js
push
pop
out
inc
mov
dec
enter
in
pop
lret
lret
pop
xchg
add
adc
adc
push
mov
inc
loopne
xor
rorb
mov
mov
ss
inc
inc
shll
rclb
stos
insb
int
shlb
shlb
jns
and
loop
loop
add
jo
add
add
rolb
mov
push
jg
pop
scas
mov
xchg
mov
sbb
mov
fstpl
mov
and
movsl
cmp
jle
sub
inc
mov
pusha
mov
jle
xchg
mov
repnz
shl
mov
xor
lcall
mov
or
in
andl
jb
popf
mov
push
adc
dec
jmp
xor
in
dec
mov
insl
xchg
push
dec
mov
sbb
mov
mov
mov
shr
mov
stos
sbbl
or
inc
add
icebp
xchg
fs
call
pop
in
cltd
push
xor
mov
rcll
mov
push
cmpl
stos
icebp
jecxz
dec
ja
pop
cwtl
sbb
mov
xchg
push
mov
aad
mov
rorb
add
sbb
in
jle
jmp
rcrb
outsl
mov
int
and
fcomps
inc
fwait
into
pop
ret
ret
jo
mov
fdivp
cmpsl
push
cmp
stos
or
shll
pusha
jmp
shr
loop
sub
mov
or
push
cwtl
xchg
xchg
xchg
push
rcrb
cmp
add
cmp
out
xor
dec
shll
or
into
mov
lock
push
sub
and
add
jge
pop
push
adc
jecxz
nop
push
or
ja
xor
adc
in
adc
xchg
cwtl
push
orb
iret
dec
cmp
js
xor
mov
lret
repnz
orl
fcoml
mov
and
sub
div
enter
loope
pusha
icebp
inc
or
fcoml
inc
and
pop
popf
sbb
bound
mov
fisubs
cmc
jne
push
sbbb
mov
or
xchg
imul
jnp
add
push
push
rol
rorb
push
cmpsb
or
add
test
add
scas
dec
scas
rorl
adc
and
mov
push
pop
cs
adc
and
push
scas
xchg
pop
jbe
cwtl
and
inc
fldt
adc
and
pop
jmp
push
sub
adc
loope
cmp
cmp
add
or
mov
push
pop
fwait
sbb
adc
imul
fs
imul
mov
or
and
sahf
rcrl
push
cwtl
jbe
lret
sub
lods
lret
shrl
test
push
mov
lcall
jmpw
bound
movaps
adc
and
shlb
xor
adc
or
out
out
push
push
adc
adc
push
adc
jno
add
adc
into
hlt
mov
rcl
jmp
in
sub
rcl
mov
add
push
mov
shr
push
test
jo
mov
cmp
js
sbb
ds
sub
xchg
pop
mov
roll
sub
xor
jmp
push
jbe
pop
xor
out
icebp
add
das
push
bound
mov
jge
sbb
jge
pop
stc
addl
xor
pop
rcrl
sbb
xor
dec
scas
jp
push
fsubrs
or
mov
jae
es
pop
stos
jno
aad
xor
or
and
mulb
pop
or
iret
sbb
call
ret
push
adc
lret
jp
ret
or
xor
ljmp
sbb
cmp
jb
stc
or
out
ds
imul
xor
push
stos
pop
sub
inc
xor
push
mov
adc
push
xor
sbb
adc
adc
mov
mov
mov
jnp
jbe
sub
pop
out
jg
shll
add
stos
push
les
add
push
shl
into
lods
shll
push
or
ret
xchg
and
adc
xchg
pop
inc
mov
adc
dec
push
push
push
fwait
push
dec
jne
addb
jns
jbe
out
mov
popf
js
adc
cmp
fwait
pop
into
or
jo
int3
or
add
adc
add
jp
xor
or
add
sub
xlat
sbb
mov
lock
cmp
add
insb
push
rcrb
add
faddl
inc
xchg
or
inc
adc
lret
push
mov
movsb
sbbl
cltd
adc
shl
cmp
push
daa
sub
cmp
jae
in
sbb
jl
push
imul
js
sbb
inc
mov
push
inc
icebp
push
adc
out
xor
push
cli
dec
cmc
mov
ret
push
js
push
cs
mov
adcl
sub
mov
push
dec
and
adc
cmp
xchg
sub
rcl
push
mov
xor
adc
mov
adc
cli
push
pusha
and
xor
pusha
dec
cmp
adc
add
int
push
push
and
xor
pop
ljmp
enter
mov
jae
push
inc
push
jl
icebp
sbb
dec
xchg
orl
or
fadds
add
rorl
xchg
push
leave
mov
jb
push
push
in
cmp
inc
sub
push
push
daa
in
mov
ljmp
les
out
xchg
mov
push
jge
xchg
mov
mov
pop
sub
pop
insl
movsl
sarb
add
loop
push
arpl
rorl
outsb
jg
or
pop
mov
push
add
popf
push
jle
add
or
mov
mov
je
push
mov
rolb
rcrl
push
out
push
sbb
adc
jb
in
push
add
aas
lret
push
ljmp
mov
sbb
es
rcrl
rcll
add
sbb
add
cmpl
push
sbb
add
loope
push
or
and
cltd
or
cmp
push
mov
jmp
sbb
xchg
push
xor
aas
scas
mov
data16
xlat
push
cmp
mov
movsl
imulb
xchg
ss
jg
push
rcrl
push
ret
fs
test
push
sub
fs
adc
and
push
sub
rolb
shlb
lahf
mul
add
loopne
cmp
or
mov
jo
push
sbb
mov
scas
out
out
movb
pop
sbb
lock
pusha
sub
mov
sbb
stos
adc
push
test
cmpsl
inc
push
inc
sbb
jp
pop
movsl
sbb
and
sbb
dec
aam
or
cmp
pop
pop
cs
cmpl
cmpsl
push
inc
rolb
jne
add
dec
adc
fisttps
sbb
xchg
push
jnp
stos
inc
leave
jmp
cmp
scas
mov
ret
sub
insb
adc
mov
cs
add
or
add
int3
icebp
ret
dec
loope
xchg
scas
ljmp
lods
fiaddl
lret
push
movl
repz
bound
jno
jo
cmp
push
into
sub
and
cld
xor
add
adc
lea
xor
sbb
clc
stos
push
cmp
push
pop
cmp
repz
orl
enter
or
into
mov
mov
and
cmp
lret
mov
rolb
xor
mov
cmp
lcall
and
pop
dec
subl
mov
or
ja
enter
cs
js
loope
cmc
push
push
lock
pop
jp
icebp
sahf
sbb
add
int3
adc
mov
testb
pop
push
inc
mov
push
sbb
adc
push
pusha
inc
jns
ret
lret
push
pop
jb
roll
mov
or
add
sbb
push
add
add
mov
mov
and
test
jmp
sbb
mov
sub
stos
out
pop
fcmovnbe
fwait
jo
cmp
lds
test
cmp
syscall
cmp
mov
cmp
sbb
add
mov
stos
jo
adcl
pop
pop
movsl
sbb
lds
dec
cmp
xlat
mov
mov
or
sbb
orl
bound
enter
into
popa
lret
add
pusha
inc
pop
push
bound
sbb
inc
push
or
push
sbb
add
jo
push
into
lret
push
movsl
js
pop
adc
fsts
mov
add
push
inc
inc
test
loope
dec
mov
popf
add
sbb
adc
mov
fistl
sbb
loopne
and
roll
jb
stos
add
test
call
sbb
daa
add
push
inc
and
adc
lea
inc
mov
pushf
sub
push
cmp
sub
loop
dec
loopne
and
xchg
push
cmpsb
inc
pusha
mov
mov
stos
pop
add
xchg
add
inc
and
dec
pusha
shlb
add
fistpll
mov
sbb
sub
shlb
push
push
inc
pop
pushf
push
sbb
ficoml
mov
andl
sbb
pop
adc
sub
or
jno
mov
mov
pop
dec
scas
hlt
and
sbb
inc
pop
and
fcoms
mov
add
les
push
mov
loop
xchg
dec
push
sysret
int
inc
add
iret
push
xor
add
add
add
in
movb
sub
lock
pop
lods
arpl
xor
inc
lock
scas
imul
jle
popf
dec
pop
xor
testb
hlt
add
cmp
mov
lret
pop
push
sbb
and
popf
je
adc
inc
push
movsl
lret
imul
xchg
ret
inc
cmp
mov
push
inc
rol
js
jp
pop
mov
mov
testb
jmp
daa
faddl
sbb
sbb
cmc
mov
xlat
jecxz
xor
add
xchg
push
xor
mov
loopew
inc
sub
inc
jp
push
lcall
sub
test
pop
js
or
jnp
scas
cmp
aam
push
pop
shll
push
fwait
push
ret
testb
lds
loopne
jle
clc
sbb
inc
movsb
pop
jne
sub
mov
sub
inc
cmpsb
test
add
icebp
mov
sbb
sarl
dec
int
xor
imul
push
push
inc
inc
test
aam
and
loop
sbb
lods
adc
mov
out
push
add
dec
mov
or
into
in
push
lea
cmpsl
leave
loopne
jb
shrl
add
stos
push
iret
push
jb
mov
inc
jb
and
pusha
in
cmc
mov
cmpsb
push
push
jg
insb
push
stos
ss
in
insl
pop
lret
hlt
xor
xor
push
push
cwtl
mov
or
fsubs
adc
lock
out
add
stos
stos
inc
shrl
loopne
lret
sub
sub
ret
push
movsbl
mov
loop
imul
in
mov
daa
push
js
xor
pusha
shlb
loop
test
xor
push
shlb
je
cs
arpl
cmp
inc
pop
in
adc
loop
sub
into
push
lds
xor
push
cmp
cmp
mov
or
inc
in
mov
mov
mov
rcll
mov
jmp
inc
adc
imul
lock
imul
aam
and
adc
lcall
call
jmp
add
ret
fsubr
cltd
inc
sbb
jno
mov
pop
scas
lock
jp
push
pop
mov
xchg
or
call
mov
or
jmp
push
sub
in
adc
out
add
stos
pop
dec
sub
push
mov
sbb
js
add
sbb
dec
lock
loopne
or
addps
push
andl
sub
not
pop
dec
add
push
add
inc
and
xchg
or
sbb
pusha
mov
scas
add
pop
mov
cmp
pop
scas
push
push
imul
sbb
sub
adc
push
jnp
mov
mov
xchg
add
nop
and
xchg
mov
add
dec
push
mov
lret
add
cli
sub
sbb
push
push
andl
cmpsl
pop
jle
adc
inc
sahf
adc
sbb
pop
lods
mov
and
push
int
je
add
aaa
pop
pushf
dec
push
or
loope
dec
rcll
rcl
mov
adc
xchg
pop
cmpsb
aas
pushf
test
inc
test
dec
hlt
pop
mov
cmp
data16
shrb
stos
add
lcall
mov
xor
push
ret
cs
or
aaa
sti
sub
and
jb
adc
xchg
xor
sbb
ljmp
in
mov
sub
movsb
jge
cmp
leave
xchg
int3
rol
push
popa
scas
aam
add
adc
add
ret
aam
mov
and
xchg
int
jae
push
dec
xchg
nop
test
xchg
jmp
sbbl
adc
sbb
imul
sbb
mov
sbb
pop
js
lea
xor
cmp
iret
mov
rolb
add
adc
cli
push
cmp
mov
mov
hlt
mov
stc
rcrb
push
or
out
mov
xor
adc
pop
rcrb
add
mov
js
mov
rclb
negb
test
sbb
bound
push
add
out
mov
mov
inc
xor
lret
pop
inc
aaa
push
add
inc
xor
adc
add
outsb
lcall
jo
sbb
test
enter
inc
push
inc
add
add
and
sbb
xchg
cmp
push
pop
pop
pop
pop
fwait
pop
roll
jmp
push
push
rcll
pusha
out
cmovle
cmpsl
fs
inc
xor
push
dec
lea
int
shlb
dec
pop
inc
push
push
inc
add
into
or
mov
sbbb
scas
ror
inc
push
mov
adc
lock
xchg
adc
mov
call
push
lods
scas
add
ljmp
sub
imul
movb
xor
xor
cli
icebp
or
roll
adcb
shrb
adc
jp
mov
sbb
adcb
push
stos
dec
shrb
jae
dec
mov
pop
inc
in
jmp
push
sbb
or
aam
mov
das
and
add
inc
pop
mov
loop
mov
sbb
jp
or
xchg
cmp
push
ljmp
push
inc
push
adcb
jg
popl
es
xor
lods
xor
add
lock
imul
push
shrl
rolb
xchg
sub
pop
push
nop
fst
push
cmp
or
or
sbb
sub
and
popl
pop
cmc
int3
cmp
and
test
cmp
hlt
inc
jne
pushf
adc
stos
add
or
cmp
or
inc
add
inc
mov
xor
push
or
out
cltd
inc
jmp
sbb
std
rcrb
aam
test
int
add
adc
cmp
rclb
push
ret
rolb
mov
in
lret
xor
xchg
cmp
sub
add
in
or
wbinvd
lock
mov
lcall
icebp
or
xor
sub
call
daa
push
mov
sbb
xor
cmp
jb
aad
adc
ret
sbb
adc
cmp
xor
sub
xor
mov
mov
jns
pop
lret
sbbb
adc
xor
jo
adc
clc
mulb
push
push
and
xor
add
scas
inc
repz
xor
fiaddl
push
push
push
adc
xor
or
add
iret
enter
mov
lcall
mov
lock
pop
and
pop
divb
lds
jg
fstpt
sbb
mulb
sbb
sub
jmp
jge
mov
mov
es
fwait
ret
mov
mov
xchg
rorb
push
and
jb
call
push
out
add
or
add
cmp
jecxz
stos
lret
add
pop
sbb
es
leave
popa
andb
sti
enter
scas
and
sbb
cs
xor
xchg
mov
adc
push
xor
and
xor
jge
add
mov
or
lret
adc
mov
add
mov
inc
jmp
add
jb,pn
push
fistl
cmpsb
mov
clc
cmc
jo
pop
sub
insl
mov
nop
loope
cmp
outsb
xor
dec
mov
push
or
stos
jmp
sub
mov
idivb
inc
out
adc
xor
push
xchg
mov
push
mov
cltd
cmp
push
mov
or
adc
inc
pop
and
add
leave
jno
and
inc
xor
xchg
dec
push
jae
enter
add
push
pop
push
mov
js
xor
in
mov
roll
or
pop
lret
push
orb
leave
jg
int3
xchg
sub
dec
adc
adc
adc
add
mov
adc
pop
bound
push
push
jge
cmpsb
xchg
push
push
add
aaa
cltd
lods
rol
popf
rorb
sub
push
sub
pop
sub
cmpsb
scas
dec
add
ret
or
inc
pop
add
mov
mov
popf
ror
pop
pop
push
mov
cli
adc
xor
add
leave
clc
cmp
ficompl
fsubrs
ud0
mov
imul
jmp
bound
add
dec
adc
test
cmp
add
mov
lret
test
loopne
jo
or
icebp
jno
loopne
hlt
mov
jl
shlb
shrb
cltd
dec
sbb
pop
mov
mov
fisttpl
bound
or
fisubrl
das
or
push
push
sti
rclb
scas
mov
mov
pop
jmp
mov
push
aaa
mov
push
loopne
pop
or
fs
add
cmpsl
sbb
lock
xor
or
testb
scas
cs
lret
jns
shl
shl
in
sbb
shr
jge
xor
jp
je
icebp
xchg
inc
add
push
cmp
or
push
fs
inc
sbb
add
test
scas
pop
and
pop
loopne
add
and
loopne
mov
ds
mov
inc
push
cli
cli
or
adc
in
shl
add
adc
mov
mov
push
sub
call
es
dec
add
sbb
inc
push
or
dec
mov
inc
scas
pop
xchg
mov
ret
jecxz
mov
xchg
mov
sbb
jno
xchg
aaa
loopne
sbb
ljmp
adc
xor
pop
add
push
mov
jo
ja
and
imul
pop
daa
repz
shlb
mov
repz
rclb
cwtl
pop
das
jb
test
enter
add
dec
push
das
mov
push
sbb
std
clc
jmp
scas
pusha
mov
fistpl
add
push
add
enter
cmpsb
movaps
or
lcall
call
xchg
out
aaa
add
stos
jne
cwtl
pop
sbb
sbb
mov
int
cmp
sub
shll
jns
in
push
mov
cmpsl
js
mov
push
or
and
mov
inc
es
jno
mov
shrl
push
push
ret
mov
or
sub
outsb
inc
lret
ficoml
in
push
xchg
subl
jae
in
add
popa
cmp
add
xor
jge,pn
jae
jo
dec
mov
les
in
enter
ret
inc
sarl
or
cmpsb
cs
mov
add
adc
imul
and
inc
xor
int
das
hlt
lret
lea
pop
cmpsb
dec
aas
enter
das
lret
xchg
subl
inc
and
sbb
das
push
add
mov
inc
in
and
mov
rorb
pop
and
mov
inc
movsb
and
push
pop
loope
ja
icebp
sub
ljmp
adc
cs
sbbb
push
adc
add
add
add
andl
jne
push
into
jne
push
mov
adc
mov
sbb
jg
ja
sbb
lcall
lods
les
or
daa
and
push
cmp
jne
cmpsl
mov
loopne
sub
pop
test
inc
lret
js
inc
mov
ds
in
adc
or
enter
push
xchg
mov
adc
aas
cmpsb
stos
adc
loopne
lock
mov
pusha
jle
subb
or
adc
cmp
lret
in
fcomps
int3
sub
mov
int
xor
mov
pop
inc
add
xchg
test
lock
pop
imul
je
scas
test
push
outsb
or
or
mov
mov
jp
cmc
mov
mov
sbb
xchg
pusha
inc
or
sti
add
mov
hlt
inc
popf
pop
loopne
or
sbb
cli
add
push
sbb
gs
pop
xor
adc
push
cmp
pop
int3
lret
or
jnp
jmp
cmpsb
js
or
outsb
pusha
ja
ror
lcall
decb
pop
popa
mov
xchg
cmpsl
push
dec
xor
or
rcl
sbb
add
push
mov
dec
fs
push
call
push
rcrl
ret
pushf
lock
stos
push
dec
sbb
sahf
adc
push
stos
inc
inc
lret
adc
mov
pusha
mov
xor
je
int
and
mov
sub
in
inc
adc
mulb
push
sub
push
adc
and
stos
mov
xor
sub
push
jb
push
orl
inc
pop
pop
push
out
push
cmp
add
sbb
lea
inc
sub
data16
rorb
mov
fmuls
jae
sub
enter
cli
cltd
loope
xlat
inc
das
gs
test
xor
add
test
and
ret
add
xor
jmp
xor
rcrl
or
add
dec
cltd
mov
xchg
pop
loop,pn
adc
push
dec
insb
sbb
or
and
shll
and
inc
push
adc
bound
adc
addb
fsts
dec
aam
leave
pop
sub
test
cmc
lds
iret
shlb
pop
sahf
ror
adc
add
inc
rorb
sarl
xchg
call
mov
adc
inc
lods
xor
push
pop
int3
add
sahf
int3
orb
jno
jne
mov
xchg
inc
lods
jo
mov
and
das
push
or
sub
mov
cmp
cmp
ret
pop
mov
xlat
mov
aas
dec
and
adc
push
mov
in
stos
jbe
sub
or
scas
adc
rep
outsb
inc
cs
cmp
test
lods
adc
icebp
icebp
xchg
shrb
push
popa
push
lret
shrb
clc
repnz
mov
add
mov
sbb
std
clc
push
inc
repnz
inc
test
push
pop
rclb
shl
jns
shlb
xchg
mov
mov
in
pushf
stc
sub
pusha
xor
out
rcl
push
mov
shlb
out
cmpsb
js
lock
xchg
orl
jo
cltd
mov
shl
test
mov
ror
rcll
inc
imul
fistpl
cs
push
aam
rorl
add
push
imul
push
or
int3
es
scas
movsl
push
gs
sbb
sbb
jae
and
jl
jmp
mov
stos
shrl
lret
mov
ja
push
shrb
add
pop
popf
pop
popf
lcall
and
sbb
xor
sub
mov
xchg
or
sub
inc
test
icebp
sbb
push
popf
push
fsubrs
pop
cmp
cltd
repnz
dec
nop
test
or
push
lret
xchg
xchg
push
jne
xchg
or
lods
and
adc
fidivs
jle
cmp
push
xor
insl
push
mov
out
pop
and
imul
mov
dec
fisubrl
in
pushf
inc
jo
mov
lock
jbe
gs
shrb
inc
imul
push
fsub
ret
lods
or
in
mov
sbb
iret
rolb
cltd
pop
xlat
sub
sub
arpl
pop
add
arpl
shrl
mov
stc
push
ret
push
sub
add
insb
or
nop
stos
in
insl
cli
dec
lods
adc
aas
popa
pop
pop
shlb
into
pop
xchg
imul
shrb
mov
adc
or
outsl
mov
jmp
cmp
rorb
das
jb,pn
test
adc
rcll
mov
mov
mov
cmpsb
dec
aad
mov
pop
das
xor
mov
gs
jg
lret
es
push
data16
mov
adc
push
lds
and
inc
ret
sbb
popa
mov
call
andl
dec
sbb
ret
xchg
sbb
fnstcw
or
stos
mov
clc
movsl
xchg
loope
je
push
ds
repz
imul
mov
mov
mov
and
push
dec
or
mov
jle
sbb
mov
call
subl
insb
test
adc
push
jge
add
inc
adc
sti
je
faddl
inc
loope
xor
popa
inc
cli
push
cmp
orb
add
sbb
hlt
icebp
mov
jmp
mov
add
packsswb
out
insl
xchg
lret
adc
mov
rorb
sub
or
add
push
jno
loop
and
sbb
xchg
push
es
test
rol
lock
push
push
stc
pop
decb
fadd
orb
mov
push
insl
add
adc
push
repnz
pop
fidivrl
push
adc
stos
shlb
mov
scas
jge
add
loopne
adc
popf
fmulp
jne
pop
mov
xchg
rcrl
sub
push
ret
paddd
stos
mov
add
out
movb
push
push
xor
xchg
xchg
add
pop
shll
fistl
cmc
push
pusha
xchg
pop
add
and
pop
repz
adc
push
xor
xchg
fmull
ret
xchg
xor
rclb
cmp
dec
lock
pop
lods
jo
inc
and
dec
scas
or
adc
gs
dec
mov
stos
pop
and
push
sbb
shrl
mov
mov
add
test
fs
mov
nop
and
stc
icebp
addl
adc
fmull
incb
test
pop
jo
cmp
pop
push
inc
adc
push
lret
and
insl
xor
loopne
sbb
mov
into
idiv
iret
out
xor
push
data16
push
or
mov
push
in
ret
call
adc
addr16
and
push
ret
inc
adc
or
push
and
dec
call
das
pop
and
pusha
pop
addb
int
push
jmp
cs
and
or
into
jl
push
inc
jb
enter
jbe
lods
adc
or
jo
enter
bound
lock
adc
js
popa
sbb
or
int3
cmp
pushf
jae
and
sbb
add
mov
mov
push
add
pop
sub
lret
cli
or
pop
add
loopne
test
movsb
push
icebp
mov
push
cmp
adc
add
jb
cmp
icebp
imul
call
bound
sbb
adc
in
adc
cmc
les
push
xor
outsl
imul
and
cld
dec
test
add
xor
mov
aad
xorb
adc
enter
mov
sbb
adc
bound
dec
sbb
mov
daa
push
loope
sar
push
xor
mov
adc
dec
pushf
dec
aad
adc
ljmp
mov
xor
int3
xchg
lcall
or
mov
cmp
inc
push
fdivrs
pop
mov
fdivrl
fsts
sbb
notb
or
nop
out
shr
cmpsb
sbb
orb
mov
loope
push
mov
fwait
stc
in
or
add
add
mov
sti
jbe
inc
mov
xor
fs
sub
cmp
sub
mov
or
div
push
leave
and
xor
or
or
ljmp
push
lock
and
mov
mov
xor
fisttpl
not
shlb
pop
scas
sahf
adc
test
add
adc
push
and
or
mov
adc
cli
lods
jb
cmp
sbb
mov
leave
ret
inc
push
clc
stos
push
cmp
sbb
or
repnz
mov
flds
pusha
out
sbb
adc
cli
test
shll
rcll
push
ret
add
ss
xchg
aaa
push
icebp
mov
lock
add
call
push
adc
jmp
push
inc
mov
and
sub
lret
test
inc
pop
mov
sbb
lock
push
cmpsb
test
out
xchg
jbe
xchg
mov
cmp
and
sbb
and
mov
ret
or
push
push
mov
js
ljmp
mov
mov
inc
out
fcmovb
aaa
test
shll
and
sub
mov
pop
adcl
dec
aam
and
rcl
adc
sub
push
mov
bound
loop
adc
mov
and
pop
test
arpl
add
lock
add
pop
jmp
add
mov
or
add
enter
jne
inc
cmp
pop
mov
push
adc
cmp
push
aad
out
sub
pop
lock
push
imul
add
divb
dec
cmc
loopne
jb
int
nop
movsb
inc
and
scas
popf
push
mov
rcrb
jo
rclb
repnz
mov
fwait
xor
out
lock
jg
push
and
xchg
nop
imul
and
add
push
fstps
ljmp
in
cs
fiaddl
clc
push
mov
adc
push
shlb
cmp
sbb
inc
push
mov
pop
mov
dec
repnz
push
mov
scas
je
jo
cmp
test
add
inc
outsb
adc
sub
or
push
sbb
push
xor
loope
xor
cmp
add
fcoml
mov
ret
adc
and
push
sti
jne
add
dec
lret
mov
inc
cmp
sub
or
jae
sbb
adc
sbb
cwtl
or
sbb
mov
sbb
xor
sub
xchg
repnz
jge
jbe
push
dec
imul
pop
push
push
xchg
add
or
adcb
loopne
lods
int3
test
or
jge
mov
xor
fistpl
imul
jb
push
mov
mov
and
push
mov
push
dec
mov
jo
jecxz
push
outsl
dec
add
jo
rcrb
shl
or
and
movsb
mov
ret
push
loop
iret
addb
xor
rclb
and
jl
ljmp
inc
ds
lods
push
cs
out
or
jp
inc
push
pop
push
test
add
inc
loope
dec
or
imul
icebp
xor
adc
nop
cld
psubusw
inc
loope
ret
sbb
sbb
aaa
int3
mov
sti
sub
jge
stos
add
js
leave
pusha
push
rorb
adc
sub
xchg
sbb
pop
jg
pushf
call
xchg
loopne
vminps
dec
test
fisttps
xor
pop
sub
sub
push
or
rorb
loop
lcall
mov
jnp
sbb
or
sbb
cli
sub
sub
pop
push
pop
imul
mov
and
mov
adc
pop
cmpsl
or
testl
or
popa
call
mov
rorl
push
adc
pop
popf
add
push
add
in
jae
or
ror
imul
mov
inc
es
mov
je
pop
xchg
push
loope
dec
xchg
dec
or
pop
rcll
xor
push
decb
xchg
mov
aad
inc
lods
rcrb
cmp
mov
push
scas
push
jecxz
jmp
popa
stos
inc
test
imul
pushf
dec
out
xor
or
adc
or
adc
aaa
lods
inc
shrl
jmp
rorb
pop
lahf
push
sub
push
mov
cmp
sub
mov
cmp
adc
xchg
add
es
jae
push
rclb
mov
call
stc
add
xchg
sub
aaa
leave
adc
add
mov
cltd
lcall
xorl
pop
gs
inc
add
push
sbb
and
fwait
push
mov
lods
push
out
push
test
nop
sub
add
pop
push
cmp
add
inc
push
test
cmc
mov
adc
in
adc
rcrl
es
rcl
push
push
inc
jle
jo
test
imul
sbb
fcoms
std
add
pop
cld
sbb
cmpsl
sub
xchg
sub
xor
in
cmp
mov
cltd
popa
loopne
xchg
lock
test
les
or
lcall
cmp
ret
orb
cmc
add
mov
lock
mov
repz
lcall
cld
lds
xlat
dec
adc
sub
adc
push
adc
and
adc
aam
dec
jge
loopne
mov
sbb
ja
pusha
mov
or
es
lret
push
or
adc
and
cmc
mov
roll
mov
xor
push
add
lock
movsl
outsl
inc
adc
cmp
push
out
into
insb
mov
mov
push
sbb
shrb
sbb
adc
push
ret
pop
add
cld
adc
pop
pushf
or
push
push
loopne
mov
loope
push
cmpsb
push
aam
xchg
inc
lods
or
test
adc
inc
adc
adc
add
mov
icebp
adc
icebp
movsb
sbb
push
popa
jo
nopl
adc
or
lods
add
mov
jo
push
sub
rolb
mov
dec
lock
cmp
pop
xchg
lret
sbb
mov
xor
fimull
enter
mov
test
ljmp
or
imul
test
cmp
xor
or
inc
xchg
rcr
mov
mov
leave
xor
xorb
pop
jae
ret
adc
sub
out
fcom
dec
ss
repz
sti
push
mov
mov
lsl
aad
xor
pusha
mov
dec
loope
cmp
xchg
shr
nop
and
mov
push
inc
jmp
sbb
xor
adc
pop
les
mov
jo
enter
jp
das
js
rolb
adcl
mov
push
pop
cmc
xchg
adc
pop
aas
shlb
pop
add
dec
enter
test
pop
xor
or
dec
fnstcw
mov
sub
jne
mov
mov
lahf
and
adc
fld
lock
and
mov
inc
add
mov
mov
add
dec
aas
mov
adc
adc
cmc
dec
es
add
add
imul
lods
pop
in
cmp
jmp
or
sahf
jp
jl
pushf
push
dec
push
pop
push
test
push
shlb
add
sbb
fldl
xor
push
push
insl
ljmp
test
cmpsb
push
inc
int
inc
sbb
push
aad
add
xchg
adc
sbb
aam
jne
dec
sub
push
scas
add
jmp
push
push
stos
push
addb
adc
jo
xlat
sub
inc
xchg
push
mov
sahf
and
xor
insl
sbb
mov
mov
jp
lahf
add
mov
lds
adc
pusha
xorb
mov
cmp
sbb
push
les
add
adc
or
push
and
shlb
rolb
jne
fistps
and
icebp
jmp
and
mov
or
push
sub
jnp
inc
icebp
mov
orb
aam
add
sub
push
add
pop
sbb
leave
test
ficompl
jne
dec
sub
call
sbb
aad
mov
mov
sti
stos
in
stos
push
adc
icebp
dec
cmpsl
imulb
push
or
xlat
fwait
adc
push
lods
add
sub
xchg
or
push
aam
or
push
mov
jp
mov
bound
mov
stos
mov
add
roll
cmp
push
jne
notb
add
jnp
fsubl
add
movsl
pusha
cmc
mov
sbb
push
push
jne
aaa
div
cmp
push
ficoml
adc
or
inc
jne
mov
scas
sbb
push
mov
sub
mov
adc
xchg
or
test
pop
mov
push
es
mov
adc
xorl
pop
mov
loopne
decb
sbb
ret
addl
or
xlat
orl
rorl
shr
pop
popf
mov
jle
leave
pushf
sbb
or
sub
push
add
inc
orl
xor
push
and
es
mov
inc
adc
pushf
adc
icebp
mov
pop
pop
mov
lods
jno
insb
hlt
sbb
jnp
cmp
push
rcrl
andb
or
int
mov
mov
mov
mov
aas
test
and
dec
adc
mov
adc
inc
std
or
adc
dec
sbb
or
add
enter
out
cli
sbb
lock
shrb
das
jb
ret
or
dec
shr
push
inc
mov
fcomip
inc
mov
inc
adc
cli
ljmp
or
es
dec
pop
sub
pop
insl
icebp
mov
adc
aad
xor
push
or
push
sti
mov
xchg
fists
cmpsb
pop
shr
adc
mov
loope
xlat
push
mov
mov
test
rorl
testl
ljmp
inc
pusha
pop
jmp
or
mov
lcall
leave
pop
shufps
roll
mov
pop
movsb
cli
or
push
push
push
insl
fistpll
add
sbb
push
lret
pop
lea
call
lcall
pushf
stos
ret
mov
dec
mov
sub
and
test
cli
aaa
shlb
mov
add
push
xor
sbb
sub
xchg
mov
adc
ret
je
movsl
data16
fadds
xchg
aas
pop
scas
adc
jle
out
adc
inc
loope
mov
loopne
add
lret
push
mov
lret
call
push
sbb
sub
cmp
xchg
les
jmp
into
dec
cmp
or
roll
and
xchg
pop
pushf
xor
cwtl
push
jno
add
lgs
les
jne
rcr
or
cmp
mov
roll
sub
mov
push
or
add
and
inc
adc
aas
inc
or
jae
loop
mov
cltd
mov
xor
push
mov
mov
aam
nop
call
push
cmp
mov
ret
stos
push
aam
idivb
jle
stos
mov
and
or
adc
lds
sbb
popa
cltd
adc
popf
sub
daa
leave
xchg
in
jmp
pop
lret
push
inc
inc
inc
jno
sbb
pop
mov
cs
inc
jl
out
addb
sbb
add
test
mov
sbb
xchg
dec
cs
lds
imul
or
out
imulb
sub
push
cltd
mov
les
or
lret
lret
add
repz
or
mov
sar
sbb
mov
and
stos
and
jo
scas
addb
and
mov
inc
mov
xchg
jb
rcl
dec
mov
add
pop
fwait
mov
mov
sahf
loop
push
push
dec
push
jb
or
cmp
insl
sub
jmp
push
xorb
jo
ficoml
xchg
cmpl
inc
adc
adc
icebp
push
and
inc
or
roll
mov
xor
add
orb
stos
inc
mov
push
add
ret
push
das
push
scas
lret
roll
add
icebp
int
and
fildll
inc
mov
call
add
mov
inc
imulb
bound
inc
mov
or
mov
xor
dec
aam
xor
fldcw
cmp
sbb
pop
xchg
dec
pushf
inc
mov
dec
mov
popl
call
jb
xor
sti
sub
or
cmp
pop
adc
nop
movl
movsl
push
adc
cmp
es
xchg
jnp
lret
add
sbb
jmp
out
add
enter
les
sub
dec
sub
or
push
stos
icebp
or
adc
mov
stos
push
shrb
faddl
jmp
mov
xor
aad
xor
pop
cmp
mov
mov
sbb
lret
shlb
fsubs
cwtl
sbbb
mov
push
push
xchg
jge
xchg
inc
jne
push
fildl
jo
push
lods
fmuls
arpl
repnz
push
dec
push
sbb
jg
cmp
pushf
stc
pop
andb
jo
addb
test
jo
sbb
or
adc
mov
cmp
pop
cltd
imul
and
ficoml
sbb
add
lcall
and
pop
inc
rcll
out
push
addr16
mov
test
cmp
ss
mov
jb
lock
sbb
dec
mov
xchg
mov
jp
das
add
push
out
leave
insb
lcall
push
int3
xor
sbb
and
push
addb
push
xor
push
scas
repz
rcll
enter
push
loopne
adc
and
adc
das
mov
subl
cmp
scas
pop
aad
adc
and
addr16
into
sbb
push
jne
jo
xor
mov
mov
mov
inc
mov
cmc
mov
mov
dec
add
sub
jb
push
sbb
mov
sub
push
nop
and
push
test
rclb
sub
mov
mov
ljmp
or
loopne
adc
fs
ror
testb
xor
in
add
cwtl
lea
mov
cmp
rclb
leave
add
dec
push
and
inc
icebp
add
mov
test
inc
jne
jg
mov
pop
inc
push
pop
inc
mov
shlb
or
rcrl
dec
pop
jmp
ret
rcll
pop
mov
xlat
ret
inc
add
lret
push
pop
mov
call
test
jmp
xchg
xchg
cld
dec
jnp
inc
mov
pop
push
push
ficomps
sub
popl
cmp
adc
cmp
std
aam
jno
jb
cmpsb
data16
lods
sub
hlt
rolb
xor
test
inc
adc
mov
adc
and
jp
lea
es
push
cmp
xchg
addb
push
cmp
or
mov
inc
pop
pop
adc
adc
inc
inc
rclb
inc
or
push
lods
adc
jp
mov
fadds
pop
pop
mov
gs
rorb
mov
adc
add
dec
leave
ljmp
cmc
enter
cmp
movsl
mov
push
in
fwait
pop
push
mov
xor
ds
xchg
enter
dec
fs
sbb
dec
inc
pop
in
clc
adc
adc
or
sbb
push
sti
dec
push
cmp
stos
es
cwtl
sahf
adcb
inc
rclb
test
cmpsb
leave
outsb
ja
sbb
loopne
cmp
sbb
cmp
xchg
xlat
std
pop
es
rcrb
loop
outsb
ret
cld
add
add
aad
xchg
mov
jo
ret
rclb
stc
jnp
push
mov
lods
shrl
add
push
aad
push
add
dec
js
add
cmp
add
add
out
push
cmp
push
addr16
incb
mov
inc
push
or
add
xor
mov
add
jnp
aad
aad
cmp
add
lods
lahf
cmp
negb
sbb
push
pushf
les
inc
mov
sbb
pop
xor
add
ret
add
ljmp
enter
mov
and
sub
push
mov
xor
ja
mov
popa
sarb
adc
loop
clc
cmpsb
bound
jb
int3
jae
pop
rolb
or
adc
xor
jle
adc
into
cli
sub
loop
subb
leave
and
cmp
pop
sti
dec
jae
jbe
sbb
clc
lahf
inc
push
stos
xchg
sub
dec
push
jmp
adc
loop
shlb
push
dec
in
dec
add
xor
aam
add
outsb
or
cmp
pop
mov
fcmovnu
lods
cltd
call
and
movsb
into
repnz
or
out
mov
das
rcrl
in
and
les
jnp
dec
js
sbb
fadds
push
aam
inc
add
movsl
push
pop
vsqrtss
cmpsl
sbb
rcll
les
stos
lods
inc
test
add
js
add
jmp
daa
mov
jge
add
mov
pop
mov
addb
sbb
fnstenv
mov
add
or
inc
xchg
test
sbb
lock
add
ret
cmp
out
inc
pusha
stos
pop
stc
mov
addr16
jg
push
roll
adc
xchg
inc
shrl
pop
lock
shll
jmp
js
sahf
dec
jmp
lods
enter
mov
je
es
xor
enter
mov
jbe
addb
daa
mov
and
ds
inc
test
inc
inc
mov
sbb
mov
jae
inc
pop
sbb
push
rclb
repnz
jle
sbb
pop
rcrl
push
push
mov
orb
xor
adc
rol
enter
push
test
fmull
in
rolb
cmp
shlb
push
pop
or
sarb
xor
sbbb
test
pushl
jo
or
out
jns
or
sbb
add
test
mov
pop
in
add
add
lret
and
mov
pop
push
adc
push
out
inc
adc
ret
daa
xlat
loop
xor
inc
stc
push
push
andb
scas
xor
es
das
leave
test
push
dec
adc
jae
push
sub
and
push
xchg
sbb
shr
rol
pop
push
and
xchg
add
adc
inc
pop
stos
cmp
jbe
adc
inc
push
mov
jp
mov
movsl
pop
repnz
xchg
and
jnp
push
insb
xchg
movsb
scas
js
call
pop
jg
es
inc
xchg
adc
cld
and
ds
movb
popa
or
ret
and
push
js
mov
xor
add
cld
add
mov
xchg
xchg
loopne
or
into
leave
mov
nop
or
jmp
push
push
fwait
stos
stc
push
and
out
push
add
data16
rolb
add
jo
inc
ficoms
aad
sub
pop
push
lods
shr
xchg
adc
sub
js
or
lods
out
das
cwtl
sahf
xor
repnz
jo
sub
mov
pop
loop
mov
sub
and
sbb
and
adc
lahf
ret
sbb
stc
aam
sbb
daa
push
ret
js
enter
or
or
ljmp
adc
cmp
mov
or
push
mov
cmpps
xor
mov
add
js
and
fst
lods
dec
xor
and
rcrb
call
mov
arpl
out
push
push
or
add
ret
xor
sbb
xchg
jl
jbe
adc
push
sub
and
inc
jne
push
mov
lds
jge
mov
hlt
mov
bound
pushf
mov
push
movsl
fsubl
push
push
loop
popf
dec
lea
bound
nop
or
mov
pop
les
and
xor
cmp
popf
enter
test
pop
sbb
or
jb
dec
rcrb
mov
jb
pop
scas
cwtl
inc
lods
and
data16
and
xchg
add
or
push
mov
imul
push
and
bound
rclb
leave
in
inc
or
sahf
xor
sti
mov
ds
inc
test
pop
sbb
xchg
lods
sbb
push
xor
sub
add
sbb
stos
mov
push
ret
add
pop
or
sbb
inc
adc
aad
stos
adc
dec
popa
test
add
scas
hlt
rorb
pop
adc
push
pop
daa
or
xor
mov
movsb
lock
es
xor
adc
push
cltd
sub
dec
or
stc
push
hlt
cmp
mov
dec
mov
xchg
cmp
cmp
icebp
sub
push
xor
pop
sub
mov
sbb
jne
ret
aad
add
push
ljmp
cmp
call
add
jle
ret
sarb
inc
jl
sbb
pop
call
out
cmp
mov
cmovs
aad
sbb
push
xor
xor
sysenter
inc
sbb
ret
movsb
push
jg
mov
xor
xor
cmp
push
pushf
sub
loop
lcall
adc
add
mov
faddl
pop
xor
dec
rcrl
mov
or
lods
scas
cmp
pop
pop
and
mov
sbb
movsl
add
dec
inc
inc
addr16
fs
push
or
int
mov
mov
into
push
xor
mov
lret
pop
mov
imul
jmp
sbb
cmp
loopne
sub
rclb
pop
mov
jno
adc
ret
adc
or
and
push
fld
or
test
adc
adcb
rorb
push
push
mov
lea
pushf
inc
jl
cmp
sub
jb
and
sub
repnz
andl
add
aam
lcall
push
xor
cmp
into
xchg
adc
sub
mov
outsb
movsb
adcb
inc
xor
push
decb
jge
fcmovnb
fnsave
aaa
push
mov
and
push
cmp
push
pop
stc
loopne
rcrl
dec
xchg
xor
arpl
pop
lods
lock
rclb
lock
inc
andl
imulb
pusha
dec
pop
fs
sbb
dec
icebp
dec
jl
orl
rcl
inc
push
jl
add
or
xlat
or
push
pushf
cmc
shrl
popa
jo
add
aam
push
sub
movb
scas
adc
adcb
xchg
mov
or
xchg
jne
cmpsb
cwtl
sbb
lret
push
mov
adc
test
sub
sbb
mov
loope
or
mov
dec
cmpb
xchg
push
or
out
bound
mov
mov
rcrl
pop
sbb
dec
sbb
jge
hlt
add
sbb
lret
outsb
out
add
cmp
push
incl
cs
pop
or
inc
negb
mov
iret
or
inc
scas
into
sub
inc
stos
push
adcl
xor
rcrb
xor
mov
sbb
rcr
or
lret
pop
fistl
or
cs
push
je
imul
or
jmp
xlat
pop
mov
lods
or
sbb
push
add
or
or
out
out
test
inc
pop
std
jo
pop
orl
xchg
fsubrl
test
add
mov
push
lods
pop
sti
icebp
sub
mov
cld
inc
lods
lret
pop
cmovl
mov
outsb
rcrl
or
enter
aas
aad
add
push
ret
and
cmp
pop
xchg
jmp
or
xchg
add
dec
jge
scas
divb
push
xchg
orb
std
xor
mov
sbb
loopne
sbb
add
xor
sbb
xor
or
popa
subb
loop
add
sub
pop
loopne
adc
lock
inc
stos
loope
int3
cltd
adc
or
stos
sbb
adc
dec
inc
mov
lds
push
imul
mov
cmpsb
stc
lret
inc
and
push
push
mov
stos
in
or
cltd
insl
fcompl
lods
xor
pop
xor
push
andb
ficoml
pminsw
lahf
sub
push
movsb
lret
sbb
jo
push
jp
push
dec
sub
push
push
mov
jecxz
and
test
sub
fiadds
cmp
roll
rclb
enter
in
movsb
pop
je
mov
and
out
ret
rorl
cmp
xchg
push
rorb
add
fwait
rcll
adc
fmuls
inc
or
aam
fbld
add
int
inc
xchg
cwtl
adc
cs
andl
inc
loopne
inc
insb
add
sub
movsl
iret
stos
or
or
enter
sbb
cmp
mov
mov
pop
lods
add
dec
fwait
loopne
inc
addr16
icebp
push
mov
shrl
add
and
pusha
push
sti
arpl
add
sbb
insb
sbb
rclb
and
or
or
mov
sub
mov
add
test
outsb
jne
and
je
add
stos
xchg
mov
dec
scas
sub
sbb
test
add
sahf
mov
cmp
jne
pop
push
int
icebp
sub
mov
call
inc
int3
icebp
dec
adc
dec
sbb
xchg
push
daa
pop
jnp
daa
mov
sbb
mov
fnstsw
push
dec
pop
ljmp
or
sbb
aad
push
pop
andb
in
xor
add
add
imul
add
cwtl
mov
xchg
mov
data16
add
jb
xchg
sub
stos
and
jl
mov
push
push
sbb
xchg
mov
push
and
or
pop
loop
push
dec
sub
inc
inc
out
sahf
rolb
sbb
popa
sub
rorl
sar
fildll
adc
sub
mov
incb
inc
pop
les
add
rorl
fmull
and
cmp
dec
inc
push
aad
xor
push
xchg
and
or
mov
jns
inc
leave
pop
and
stos
sahf
and
inc
popa
inc
test
pop
xor
outsb
into
or
sub
push
ret
pop
cwtl
sbb
ljmp
rcl
and
and
cwtl
mov
mov
fwait
fs
cmp
sbb
mov
and
add
ljmp
and
mov
and
jmp
cltd
pop
loope
ds
adc
push
bound
cmp
jl
push
inc
sub
add
pop
rorl
mov
sti
cmp
cmp
ret
fs
add
loop
dec
and
add
cmpsb
shlb
push
test
mov
mov
jo
xchg
or
xor
adc
push
inc
cmp
inc
xor
and
push
stc
jmp
xchg
imul
jl
loop
rcrl
pop
lods
cli
mov
subl
lret
fcomps
shlb
dec
xchg
sub
inc
mov
insl
push
jmp
inc
fcmovnb
lea
mov
test
xor
lock
rorl
gs
testb
cli
pop
sub
aam
imull
or
mov
mov
adc
ret
pop
roll
hlt
adc
mov
dec
cmp
adc
cmp
sbb
or
and
pop
inc
push
sub
pop
rclb
int
imul
test
and
xchg
and
sub
rorb
pop
inc
xor
push
inc
insl
into
rclb
add
cmp
aad
add
and
lahf
jae
das
mov
les
bound
aam
adc
fdivr
imul
add
dec
inc
xor
adc
or
ror
inc
xor
lock
imul
cmp
jo
add
lds
xor
testb
jae
lret
test
cmc
in
out
mov
clc
out
inc
inc
rcll
dec
xor
rcl
mov
inc
mov
pop
adcb
in
mov
js
and
leave
scas
push
ficompl
mov
or
xor
or
les
sub
mov
push
pop
add
cmp
jb
xor
cmp
loopne
lods
ljmp
repnz
enter
out
jge
sub
out
movsl
push
stos
jnp
push
add
cmp
lret
ret
mov
ret
xor
dec
mov
mov
and
insb
das
bound
jl
push
cmpsl
repnz
xor
cmpsb
cmp
adc
push
xchg
push
mov
pop
xor
push
mov
mov
push
mov
bound
das
cmc
sahf
add
je
push
adc
add
or
push
stos
or
fsubrs
add
enter
xor
push
add
adc
popf
jmp
push
jne
fcomps
xor
test
adc
xchg
mov
sbb
adc
mov
sbb
sbb
xchg
stos
dec
adc
roll
pop
add
adcl
je
icebp
sarl
or
cmp
lds
adc
es
adc
xor
inc
pop
rcrl
sub
push
cmpb
adc
push
ja
mov
popa
inc
inc
mov
push
mov
or
testb
dec
cmp
notl
test
inc
bound
decb
mov
cmp
push
push
mov
nop
stos
or
push
hlt
add
sub
mov
inc
lds
or
dec
icebp
add
sbb
xchg
cmpsl
call
es
mov
addl
push
jmp
adc
and
push
loopne
sub
sbb
rolb
sub
loope
loopne
xor
jb
cmp
setne
loope
test
sbbb
jecxz
pusha
xor
xor
lods
adc
leave
into
xchg
lds
jb
ljmp
inc
aad
lret
jne
jo
inc
jae
in
pop
adc
pop
push
shl
push
add
aad
leave
adc
and
out
pop
int
ret
adc
nop
rolb
pop
adc
fcomps
add
faddl
add
shrl
rcrb
mov
push
and
push
sbb
mov
adc
ret
add
sar
cmc
jno
js
pop
inc
dec
adc
push
inc
jb
dec
sbb
pop
loopne
outsl
es
cwtl
mov
stos
or
dec
mov
lods
rolb
add
sub
xor
sub
stos
adc
pcmpgtw
jo
aam
adc
rorl
adc
lock
sbb
lock
ds
sub
mov
push
in
pusha
jge
out
push
mov
jg
loop
jo
and
leave
adc
in
loope
sub
lods
push
xchg
or
cwtl
adc
add
mov
mov
rcrl
xor
push
rcll
adc
add
sub
loopne
loopne
push
lock
cmp
sbb
lds
sbb
and
sbb
orb
add
xchg
js
dec
mov
cmpsl
sahf
les
push
popf
pusha
hlt
add
pushf
icebp
stos
or
negb
xor
push
push
cmp
shr
or
add
and
jbe
or
pop
sarb
or
mov
mov
dec
or
mov
ret
jo
inc
pop
aam
ror
out
mov
or
insb
mov
pop
adc
addb
xor
lcall
inc
rol
add
add
jb
adc
adc
cmc
sbb
inc
push
pop
jbe
jae
mov
add
das
loopne
push
out
adc
sarl
ja
xor
push
adc
rolb
inc
mov
xchg
lcall
adc
xor
ror
mul
or
cmp
inc
icebp
inc
xchg
mov
cmp
sbb
lods
fsubrl
xor
and
lret
rcll
sbb
movsl
pop
cmp
movsb
sbb
aaa
add
les
mov
pop
push
jae
or
sbb
add
jbe
shrl
jo
xchg
xor
push
add
mov
or
or
push
mov
add
push
pop
push
test
inc
sub
xchg
mov
ljmp
push
inc
aam
mov
pop
push
add
dec
arpl
adc
push
cmp
xchg
sbb
and
ds
adc
push
mov
inc
cmpsb
jb
repnz
or
adc
mov
popa
push
push
mov
push
push
add
push
xlat
push
into
out
sbb
inc
addr16
sbb
pop
cmp
jmp
dec
push
sub
clc
rorl
dec
sub
stos
adc
and
or
cmp
adc
stc
xlat
in
inc
lods
arpl
movzbl
xor
sbb
add
shlb
and
sbb
daa
or
aad
and
mov
jne
in
lahf
outsl
ret
or
dec
test
cmp
jmp
jne
push
and
push
lods
ret
pop
pop
arpl
xchg
sbb
cwtl
dec
adc
in
rclb
rol
sub
shl
sub
mov
mov
xor
inc
adc
aam
inc
add
adc
and
xor
scas
mov
mov
add
sub
cmp
pop
dec
or
sbb
dec
dec
addr16
sbb
mov
inc
push
xor
mov
clc
lret
shlb
cmp
xchg
ret
lret
mov
push
push
xchg
xor
je
int3
add
jbe
fsubl
sub
fwait
clc
sbb
aam
lret
and
cs
inc
movsb
insl
notb
mov
in
shll
mov
or
test
mov
es
into
out
loopne
sbb
cltd
sbb
lock
and
or
add
cmpsl
lods
adc
add
adc
push
pop
add
sub
dec
adc
cmpl
call
add
mov
inc
xchg
dec
inc
inc
lods
xorb
or
inc
in
push
sbbl
cwtl
fsubl
pop
test
mov
xchg
push
shl
xchg
mov
ret
test
js
adc
mov
cltd
and
pushf
lcall
mov
andb
sbb
xchg
loope
test
or
out
cmp
push
adc
xchg
jo
add
mov
stos
icebp
or
push
sub
mov
or
pop
les
adcb
idivb
adc
inc
jecxz
jno
add
cmp
repnz
movsl
pusha
jmp
sub
mov
fs
xchg
adc
ljmp
lods
add
pop
gs
push
jae
cmp
or
pop
mov
xor
loope
sub
mov
pop
stc
nop
jae
add
push
cmp
lret
sub
shlb
pop
pop
stos
push
add
or
dec
adc
xchg
mov
cmpsb
test
aam
test
mov
adc
test
bound
dec
call
jns
sbb
dec
sbb
pop
mov
inc
mov
push
cld
sbb
push
sti
mov
hlt
or
adc
addb
mov
shl
scas
into
adc
rolb
xor
das
mov
in
ret
and
xchg
testl
scas
enter
ficompl
inc
test
mov
enter
dec
ret
mov
rorl
sub
inc
push
dec
gs
test
rcll
in
roll
push
imul
or
jb
lcall
out
fsubrl
call
push
orl
das
rorb
mov
out
scas
mov
movsb
push
jge
add
cmp
push
call
mov
sbbb
or
push
shll
push
add
or
outsl
test
sub
cld
call
jl
sbb
or
test
es
out
adc
fwait
repz
mov
test
add
gs
test
insb
cmp
add
or
sbb
xor
add
pop
hlt
sub
or
push
mov
mov
les
repnz
pop
call
stos
je
add
pop
frstor
rcl
lret
or
lret
sbbb
int
dec
xor
into
dec
add
lea
pop
inc
shrb
mov
sbb
add
leave
inc
or
lahf
test
and
inc
ret
test
aas
rolb
pop
lea
lret
add
sbb
les
push
sub
cli
push
test
cmp
xchg
int3
call
icebp
push
and
mov
sbb
mov
inc
cmove
loopne
adc
pop
les
jp
lock
scas
and
add
mov
push
mov
fidivrs
loop
xor
repnz
jmp
and
inc
lock
repz
fnsave
or
ja,pn
mov
adc
hlt
filds
rcrb
cli
add
int
or
pop
andb
les
adc
mov
inc
mov
test
dec
and
movsb
fisubrs
and
pop
mov
adc
rolb
repnz
xor
jno
pop
ljmp
push
or
scas
std
ljmp
in
push
push
mov
inc
inc
xchg
cmp
je
add
xor
test
lock
xlat
inc
fs
or
dec
adc
shlb
ret
xchg
insb
xor
cmpsb
pop
repnz
mov
popa
insb
iret
lock
in
and
aad
xchg
sbb
or
cwtl
and
or
je
sbb
jp
jb
sbb
mov
add
cmp
loope
testb
xchg
mov
daa
orb
cs
cwtl
and
clc
gs
vandnps
loop
adc
mov
stos
movsl
out
out
sub
jno
push
or
jo
cmp
pop
rclb
sub
add
add
push
les
sti
or
mov
lock
mov
sbb
icebp
xor
cmp
cs
iret
adc
sbb
mov
inc
data16
add
cmpsb
jns
adc
lret
js
rorb
loopne
push
push
mov
repnz
push
push
pop
and
test
sub
daa
mov
insl
push
rolb
dec
scas
dec
ret
push
lret
shlb
das
add
push
test
sbbb
mov
push
cmp
adc
loope
adc
mov
mov
jl
sub
cmpsb
test
or
lcall
mov
inc
add
imul
or
mov
cmp
push
add
adc
test
sbb
adc
lret
ss
lret
mov
and
aas
mull
clc
mov
or
sarl
push
roll
dec
ret
or
test
and
pop
inc
out
aad
shrb
pop
and
and
push
punpckhdq
sub
or
mov
or
pop
pop
or
jle
xor
add
daa
cmp
push
mov
cmp
aad
cmp
sbb
or
push
sbb
rol
dec
pop
into
adc
sbb
sub
andb
pop
div
mov
adc
cld
jge
in
aaa
in
push
je
clc
mov
aad
push
and
cs
or
bound
movsl
enter
or
sub
int3
add
mov
popa
cmp
adc
push
cmp
inc
push
adc
call
xchg
jb
rclb
rcl
pop
loope
sub
inc
push
and
cmp
inc
mov
add
push
or
xchg
jb
mov
mov
sbb
in
pop
hlt
or
push
mov
adc
push
sbb
fimull
sbb
mov
mov
hlt
or
mov
mov
xchg
adc
fwait
add
movsl
and
outsl
xchg
mov
cmpb
mov
lahf
outsl
incl
and
in
cmpsl
aas
adc
stc
repz
push
inc
sbb
pop
out
push
push
repnz
loopne
mov
inc
ss
sub
aas
ds
repz
fsubs
xor
adc
nop
ja
jg
cld
cmp
testb
leave
pop
mov
out
lahf
out
inc
xchg
std
xor
add
dec
pop
add
cld
stc
insl
cmp
aam
gs
xchg
xchg
aas
lret
rolb
arpl
pusha
stos
jp
jg
cld
stc
push
add
insl
enter
pop
lret
and
fwait
inc
cmpsl
mov
in
cld
cld
stc
repz
stc
leave
mov
and
loope
xchg
aas
jg
ljmp
test
cmc
cld
stc
repz
xchg
nop
les
imul
lahf
aas
jg
jo
cmc
mov
sbb
adc
repz
sbb
push
out
lahf
test
pop
sbb
test
stc
sbb
into
adc
cs
and
xchg
push
jmp
pop
mov
jp
js
fldcw
cld
stc
repz
es
or
sarb
pop
in
jae
aam
add
das
cld
stc
repz
push
sub
add
mov
mull
call
cld
test
push
mov
push
push
stc
repz
jae
les
push
into
xchg
cmpsb
call
aas
jg
cld
add
clc
enter
mov
out
lahf
dec
push
jnp
es
cltd
pop
push
xor
jg
cld
stc
js
testb
dec
jns
test
dec
sbb
iret
lahf
aas
cmp
and
sarl
cld
stc
repz
sub
in
aas
cmpsb
fisubs
in
aaa
cli
jmp
repnz
out
push
adcb
cld
mov
icebp
lcall
jb
out
lahf
mov
sub
out
rcrb
imul
in
pop
mov
push
ror
jg
xchg
push
test
wbinvd
mov
repz
xor
mov
insb
pop
inc
enter
mov
and
push
sub
sbb
push
lds
jbe
push
or
or
inc
cld
stc
repz
shll
outsb
sbb
lahf
aas
jg
xor
scas
xor
lock
repz
sti
aas
xor
test
add
insb
mov
jmp
cmp
loopew
pop
lret
mov
movsl
repz
lahf
into
je
xor
mov
aas
ljmp
dec
mov
and
cld
gs
aam
adc
ljmp
pop
or
cld
stc
repz
lcall
push
incl
pop
jl
xor
iret
lahf
aas
jg
sbbl
mov
cmp
repz
xor
andb
jne
sub
pop
jno
cld
gs
sbb
popf
dec
inc
adc
lahf
aas
jg
fiadds
fistpl
xor
pusha
cld
stc
repz
outsb
mov
pop
lahf
insb
test
cmp
lahf
aas
jg
icebp
add
rcrl
ds
xchg
xchg
rcr
es
out
mov
cld
stc
fwait
and
pop
cmp
dec
clc
and
clc
int3
push
out
lahf
aas
fwait
jno
cmp
aas
mulb
jecxz
cld
cld
stc
repz
and
popa
sbb
imulb
iret
lahf
insb
in
pop
adc
mov
and
cld
stc
repz
fadds
pusha
lcall
adc
lahf
aas
jg
data16
cmovge
cmp
cld
stc
repz
mov
mov
adc
inc
jle
dec
xor
lret
aaa
mov
rcll
jbe
push
frndint
cmp
test
scas
repz
lahf
mov
adc
mov
iret
aam
adc
jg
cld
stc
pop
jo
pop
or
sarl
out
lahf
aas
push
scas
mov
fldcw
mov
repz
imul
add
in
iret
lahf
aas
jg
cmp
rorb
xchg
mov
cld
stc
repz
nop
and
aam
push
clc
mov
mov
mov
outsb
push
jge
push
stc
outsb
add
repz
cmp
inc
stc
mov
cwtl
mov
icebp
aas
jg
cld
ficompl
cmc
xchg
jb
push
adc
cmpsl
repz
lahf
adc
orl
daa
mov
jg
cld
stc
das
jp
test
mov
icebp
nop
xor
cld
sbb
sub
aas
mov
call
pop
mov
cld
stc
repz
sbb
ljmp
and
lahf
aas
jg
jb
and
stc
cs
in
mov
fadds
and
add
je
mov
fs
aas
jg
jbe
int3
shll
movsl
add
push
dec
adc
xchg
repz
pop
std
adc
jge
mov
test
lea
jg
cld
adc
push
mov
vmaxpd
jae
repz
lahf
jge
jp
and
pusha
sbb
scas
bnd
aas
aas
pop
stc
stc
sti
repz
mov
mov
out
out
lahf
cld
popf
loope
xchg
cmp
cltd
dec
inc
das
mov
stc
repnz
xor
sbb
lods
stc
xlat
dec
jnp,pt
inc
mov
cmpl
hlt
jb
jg
cld
sbb
cli
push
sbb
nop
xchg
push
xor
lahf
fsub
idivb
push
mov
jg,pt
cld
stc
cmp
mov
push
add
xchg
pop
inc
add
sbb
in
cltd
push
or
aas
cmp
repz
xchg
cmova
inc
enter
stc
repz
mov
adc
cmpsb
sbb
mov
xchg
push
iret
lahf
aas
jg
and
sti
in
rcll
push
cld
stc
repz
jl
or
icebp
xchg
icebp
dec
and
in
nop
iret
lahf
inc
shrl
mov
test
mov
jae
outsb
outsl
adc
adc
lahf
aas
jg
dec
daa
mov
ja
nop
mov
lcall
dec
movsl
dec
aas
lcall
or
outsb
xchg
fs
sub
mov
jae
inc
add
stc
pop
cld
stc
repz
push
mov
bound
cmpsl
mov
fisubrs
lahf
aas
jg
or
shl
add
push
cld
stc
repz
adc
movsl
lret
shlb
xchg
xchg
dec
inc
dec
cld
lods
jp
pop
arpl
push
out
cld
in
and
xor
adc
sbb
adc
cld
stc
repz
ss
outsb
cmpb
data16
sub
iret
lahf
aas
jg
jmp
and
inc
out
int3
add
stc
repz
pop
and
mov
mov
aas
jg
push
and
mov
int3
or
xchg
jbe
testb
dec
insb
insl
sub
jg
cld
lea
xchg
idiv
jb
xor
repz
lahf
inc
lea
and
jp
pop
repz
lret
mov
cmpsl
adc
jg
cld
stc
mov
scas
xchg
xor
pop
mov
xchg
push
std
aas
out
lahf
aas
mov
jg
lea
out
cld
stc
repz
add
push
nop
mov
inc
lock
shll
jnp
iret
lahf
aas
jg
or
mov
mov
out
insb
jb
stc
repz
ret
adc
mov
xlat
insb
test
nop
push
or
dec
pop
cltd
hlt
ss
jbe
repz
addr16
iret
jmp
popa
clc
lcall
je
jg
cld
jp
jmp
jnp
test
icebp
dec
int3
daa
repz
lahf
std
pop
jge
push
in
ret
xchg
cld
stc
cli
mov
sbb
jmp
iret
in
iret
lahf
aas
sub
pop
nop
lcall
ss
repnz
ljmp
aas
jg
xlat
jbe
addl
ret
jb
cmp
jmp
clc
flds
add
sub
outsb
iret
lahf
aas
jg
ds
je
push
fsubrs
add
inc
cld
stc
repz
xchg
setbe
clc
movsb
mov
dec
iret
mov
into
xchg
negl
movsl
cmp
out
sarl
jnp
pop
or
aas
jg
cld
add
in
andb
repz
lahf
or
xor
mov
rolb
sub
jg
cld
stc
sbb
add
fdivrl
imul
sbbl
pop
repz
sub
sahf
stc
cld
stc
repz
divl
and
int3
clc
dec
adc
jle
lahf
aas
jg
mov
pop
out
push
lods
int3
adc
inc
lods
enter
outsb
push
pop
inc
stos
inc
or
lahf
aas
jg
icebp
jmp
lcall
stc
repz
outsb
cmc
add
lea
scas
cli
sbb
aas
jg
jge
xor
loop
shl
and
repz
ret
adc
cmp
jno
aas
jg
cld
mov
add
and
outsl
or
bound
lahf
jle
push
fcomp
test
and
aas
das
nop
stc
cmc
cli
movsl
adc
sbb
repz
sub
jbe
out
pop
loopne
aas
jg
adc
xchg
inc
push
add
lahf
pusha
push
adcb
sub
inc
xchg
stc
mov
sub
bound
jle
sbbl
flds
mov
jne
repz
lahf
notl
test
mov
jns
cld
and
pushf
add
pop
iret
femms
dec
pop
xchg
iret
push
push
dec
adc
add
mov
daa
add
cmp
movsl
mov
iret
lahf
aas
lods
or
decb
push
stc
cld
stc
repz
shll
sti
jecxz
jl
push
lahf
aas
jg
aad
into
mov
pinsrw
test
xchg
dec
fiaddl
dec
push
aas
jg
cld
mov
enter
push
mov
out
lahf
mov
jne
roll
jg
cld
stc
adc
mov
shl
mov
iret
lahf
aas
aaa
xchg
lods
dec
mov
push
cld
stc
rep
push
lret
inc
sub
lahf
aas
jg
leave
ja
lret
mov
sub
cmp
push
int3
les
rcl
pop
push
or
xor
pop
movsl
popa
lahf
aas
jg
lret
mov
jecxz
jbe
mov
adc
jg
stc
repz
and
cltd
jb
insl
pop
inc
and
cld
xor
leave
inc
mov
or
loope
repz
lahf
sbb
sahf
pop
lock
cmpb
stc
sbb
imul
jns
xor
iret
lahf
aas
adc
dec
dec
lahf
arpl
iret
lahf
jg
sbb
in
mov
sub
xor
stc
repz
ss
dec
push
cld
inc
das
rorl
xchg
dec
xor
mov
xor
into
xchg
stc
repz
add
repz
pop
lock
ja
imul
jp
jg
cld
aad
xchg
inc
sub
dec
sub
dec
repz
lahf
inc
add
jle
sahf
jg
cld
stc
mov
pop
mov
cld
call
into
sub
sub
outsb
js
js
lahf
jg
shl
mov
mov
cmp
cld
stc
repz
or
sub
pop
mov
incb
jg,pt
sbb
mov
sti
ret
jo
nop
add
out
cmp
cs
xchg
addb
out
pop
or
jg
cld
dec
clc
cmp
jbe
sbb
push
dec
sti
mov
sahf
cmp
fwait
aaa
outsl
dec
ror
mov
jg
loopne
and
push
jg
mov
fsubrs
mov
repnz
cmc
stos
sbb
stc
mov
stos
push
ret
push
cmp
xchg
out
jmp
mov
lods
adc
outsl
fidivrs
jb
sti
pop
add
push
inc
jecxz
out
xchg
mov
inc
dec
addl
inc
jle
stc
jle
mov
pop
sti
outsl
push
dec
add
out
lahf
aas
cmp
fdivr
fsub
inc
sbb
jne
into
cld
stc
repz
push
pop
jge
push
inc
mov
call
outsb
jbe
lahf
aas
jg
and
cmp
dec
add
xor
stc
repz
loopne
and
mov
xor
adc
jg
or
ficompl
lock
iret
jb
mov
gs
js
pop
idivl
jg
cld
mov
jne
mov
jmp
test
imul
leave
imul
cs
adc
cmp
inc
je
insb
repz
mov
cmp
add
stc
sub
jb
fisttpl
adc
loope
loop
gs
lahf
aas
cli
lret
gs
mov
cld
stc
repz
inc
pop
mov
iret
icebp
shll
insb
iret
lahf
aas
jg
xchg
test
xor
xor
pop
insb
lret
cmc
pop
cld
stc
repz
movb
lahf
test
lahf
aas
jg
popf
jns
jecxz
dec
pop
inc
push
xchg
repz
outsb
dec
out
stc
push
push
cmc
and
clc
cmp
jns
dec
cmpsb
xchg
mov
hlt
test
mov
mov
jnp
jnp
int
aaa
outsl
mov
mov
jecxz
mov
or
xchg
jp
mov
aam
fadds
jns
mov
cld
aas
fwait
aaa
outsl
fidivrs
lea
pop
mov
fmul
enter
and
dec
xor
stos
jg
pop
insl
shl
iret
lahf
cli
add
imul
cld
stc
repz
and
sbbl
fxch
fsubr
xor
lahf
aas
jg
out
sbb
mov
dec
frndint
stc
repz
int
pop
jl
jecxz
push
imul
pop
dec
push
je
gs
lret
std
jle
repnz
iret
lahf
pop
outsb
mov
pop
ret
sahf
int3
cld
stc
repz
mov
sub
inc
mov
cmp
mov
jg
bound
aad
into
icebp
mov
out
lods
out
or
cmp
loopne
fldl
adc
rcl
xor
rolb
jg
cld
sbb
or
enter
iret
ljmp
add
icebp
sbb
jmp
jg
jg
cld
stc
lahf
mov
adc
rep
inc
push
cmp
leave
iret
lahf
aas
imull
adc
sbb
cs
sub
out
icebp
or
xchg
sub
push
xor
iret
pop
cmp
xor
cmpsl
call
stc
repz
add
add
pop
push
hlt
iret
lahf
aas
jg
rcrl
push
gs
adc
std
in
out
mov
adc
and
jae
xchg
lea
iret
aas
jg
cmc
jae
cmp
pop
inc
popa
mov
sub
scas
repz
lahf
sahf
add
add
lods
mov
leave
and
fildll
push
mov
out
cld
imul
ljmp
pop
jp
lahf
aas
jg
push
ljmp
pop
lods
mov
stc
repz
jo
lret
les
aas
loope
aas
jg
cld
mov
aaa
das
cmp
enter
ss
out
lahf
lock
push
or
pop
dec
push
cmp
stos
mov
add
es
inc
mov
pop
pop
sbb
fisubrl
jecxz
das
sbb
fwait
aas
jg
cld
mov
push
inc
jg
clc
mov
repz
lahf
lods
mov
push
push
sub
fcos
aas
jg
repnz
push
dec
pop
gs
repz
inc
xchg
repz
lahf
mov
fidivrs
add
inc
xor
cld
stc
andb
push
sbb
into
stc
data16
out
lahf
aas
add
cmp
test
cld
stc
repz
pop
dec
jg
add
ljmp
pop
iret
lahf
aas
jg
adc
fcmovbe
fstpl
aas
xchg
out
cmp
push
inc
int
cld
stc
repz
mov
mov
mov
repz
jne
xor
lcall
and
inc
adcb
out
lahf
mov
push
bound
xchg
lock
cmp
stc
stc
js
dec
mov
subl
aas
mov
mov
mov
sbb
stc
repz
xchg
dec
popf
test
cmp
icebp
aas
jg
cld
add
daa
jp
pop
les
push
and
repz
lahf
push
mov
stos
mov
jg
cld
stc
mov
test
ljmp
or
out
lahf
aas
xor
cli
vmovlps
cld
stc
repz
push
addr16
out
jb
jl
add
scas
iret
lahf
aas
jg
pop
jle
cltd
iret
in
mov
push
arpl
stc
repz
and
xor
adc
pop
add
push
xchg
repz
push
xlat
pop
nop
stc
repz
push
inc
cmp
test
adc
enter
aas
jg
cld
inc
loopne
inc
shrb
shll
iret
lahf
and
or
mov
cld
stc
jbe
adc
nop
std
bound
push
sbb
mov
aas
scas
dec
bound
mov
cld
stc
repz
cltd
mov
cmc
xchg
fisttps
lahf
pop
push
mov
xor
test
loopne
cld
stc
repz
lret
aad
int3
xchg
add
mov
jg
int3
jmp
ret
fsubrs
stc
repz
push
xor
or
js
mov
das
lahf
aas
jg
arpl
and
mov
repz
sub
jp
push
inc
lea
sbb
aas
jg
cld
addr16
adc
pop
ja
repnz
adc
out
lahf
or
xor
sbb
push
das
addr16
sbb
mov
pop
stc
repz
fwait
adc
xlat
jb
outsb
push
movsb
insl
fdivrs
jg
cld
outsl
fstps
outsb
daa
cmp
sbbl
inc
inc
xor
scas
incl
inc
std
mov
stc
fistpl
inc
mov
ret
or
iret
lahf
jg
push
scas
sarb
test
mov
and
stc
repz
sarl
fcmove
sti
imul
incb
nop
adc
jl
stc
repz
call
jl
cmpsl
dec
loop
aam
les
cld
cld
inc
loope
push
inc
pushf
rclb
jns
scas
inc
or
addr16
cld
stc
repz
push
aas
jmp
insb
das
xchg
ljmp
jp
mov
cmp
sbbl
flds
xchg
sbb
mov
cmp
cld
mov
cmp
push
add
hlt
arpl
xchg
sbb
adc
cltd
les
lods
das
jb
and
mov
int
out
lahf
push
mov
test
pop
jg
cld
stc
loopne
fdivrp
call
xor
sbb
stos
out
lahf
aas
xorb
xchg
gs
fcomps
jge
repz
loopne
dec
imul
xchg
stc
jg
hlt
leave
cmp
iret
jns
mov
ja
dec
clc
out
lahf
aas
notl
mov
dec
movsb
cmp
stc
repz
xor
or
ret
les
subl
push
push
add
stc
repz
sub
cltd
test
jle
or
aam
mov
aas
jg
notl
loop
inc
sbb
loop
mov
iret
ljmp
ret
jbe
push
xor
aas
jg
cld
mov
aaa
pop
repz
xchg
addr16
les
imul
pop
or
mov
out
cltd
aaa
jno
in
mov
mov
pop
xor
jl
mov
sub
push
adc
int
aaa
outsl
aam
rol
leave
aas
insl
push
sahf
fucomp
add
out
mov
jl
addr16
sub
adc
es
sbb
mov
inc
aas
jg
cld
nop
int
pop
inc
sbb
mov
pop
fnstsw
sub
jecxz
jnp
pop
xchg
mov
out
out
pop
jae
xor
lcall
int
jl
dec
sub
xor
cld
fimull
or
dec
iret
pop
push
inc
push
and
fdivrl
int
add
push
sbb
repz
aaa
fists
pop
inc
sbb
jmp
jg
cld
ja
int
add
sbb
out
les
adc
out
lahf
sbb
and
hlt
or
into
dec
rcr
out
jg
cld
stc
mov
lahf
xchg
mov
pop
in
jp
xchg
out
lahf
aas
rcrb
jo
cltd
imul
sbb
or
out
rol
xchg
repz
jle
push
mov
lahf
aas
jg
inc
and
insl
dec
pop
sbb
jo
stc
repz
popa
repnz
ja
ficoms
dec
jg
aas
jg
lcall
mov
sbb
adc
add
repz
push
loop
inc
push
das
jo
or
jle
push
sbb
aas
push
xchg
push
inc
iret
pop
or
push
mov
pusha
xlat
cld
stc
repz
or
pop
add
lea
loope
daa
aas
jg
inc
mov
pop
pop
gs
std
repz
shll
mov
outsl
fidivrs
stos
jle
nop
cli
pop
mov
cli
out
fwait
aaa
fcom
in
lock
jecxz
shll
lods
dec
fidivrs
dec
push
inc
loope
nop
punpckhwd
mov
fwait
aaa
outsl
shll
scas
ja
aad
insl
das
mov
repz
jno
pop
pop
pop
jno
or
jecxz
aaa
outsl
ficoms
xor
test
stos
lods
add
jne
in
sahf
fs
insb
bswap
out
cmpb
stos
ds
push
int3
scas
push
inc
daa
out
inc
cmp
out
mov
sbb
rolb
mov
out
orl
inc
and
mov
or
adc
mov
adc
xchg
orl
inc
jne
inc
sbb
repz
xlat
shll
repnz
lahf
out
sahf
inc
shlb
mov
jmp
stos
and
int
add
stc
repz
mov
xchg
test
addr16
sub
shll
clc
lahf
aas
jg
xlat
dec
lods
mov
fistpl
stc
repz
cmpb
cmpsb
nop
push
jbe
addr16
and
jg
cld
xchg
lret
add
sbb
repz
lahf
jo
and
inc
stos
xchg
shlb
fisttps
mov
pop
jmp
cld
cld
stc
ja
ljmp
movsb
je
cmpb
fiadds
pmulhw
out
int
aaa
outsl
rcr
scas
iret
popf
pushf
xchg
mov
fdivl
inc
fidivrl
cmpsb
and
stos
adcb
xor
call
push
and
jge
fnstsw
fmul
jns
out
imul
hlt
test
ds
mov
repz
cmpsb
movsb
dec
ljmp
flds
repz
cmp
mov
call
inc
aam
xchg
outsl
fidivrs
outsl
mov
int3
mov
mov
loopne
fwait
aaa
idivl
inc
pop
out
lock
int
addr16
mov
mov
repz
inc
icebp
nop
mov
sbb
inc
push
repz
aaa
outsl
fidivrs
push
addr16
outsl
and
es
loop,pn
int
or
jns
lds
ss
test
jl
mov
repnz
pop
aas
imul
int
aas
sbb
cmp
int
in
sub
pop
cmc
push
lret
cs
pop
in
or
jnp
jg
cld
stc
sbb
mov
push
sub
or
fstps
enter
clc
repnz
pusha
add
jno
lea
aam
fstps
in
lahf
aas
push
or
imul
mov
fs
sarl
jns
shlb
xor
fcmovb
addb
lea
sub
lret
mov
sub
repz
cmp
aas
aad
fdivrp
pushf
dec
arpl
lahf
aas
jg
jle
inc
fs
nop
adcb
mov
pop
xchg
fwait
aaa
movhlps
xchg
mov
enter
or
repz
fldcw
les
outsl
fisubrs
xlat
stos
hlt
add
jmp
xchg
ljmp
int
and
inc
push
mov
call
sbb
xor
repz
loop
adc
cmpsl
pop
dec
inc
fwait
and
mov
ds
xchg
sbb
xor
pop
aas
lcall
imul
call
inc
jle
cld
push
xor
mov
aaa
out
and
out
addr16
fwait
pop
pop
ljmp
repz
fwait
pushl
inc
nop
mov
push
data16
outsl
fidivrs
add
mov
pop
add
lahf
xor
icebp
jge
bound
jb
outsl
adc
stc
repz
adc
aaa
inc
pop
mov
aaa
mov
jne
fdivrl
mov
mov
pop
push
push
xor
out
lahf
xor
and
scas
push
mov
cld
stc
outsb
insl
jo
jnp
lea
jns
ficoms
sar
insl
fs
aas
pop
pop
mov
int
aaa
fdiv
mov
shlb
aam
adc
repz
call
hlt
push
xchg
sub
shlb
outsl
pop
movlps
mov
int
ja
insb
push
push
inc
repz
add
mov
pushf
shlb
fwait
jl
mov
xor
push
int
aaa
outsl
enter
cmp
mov
push
jle
jns
out
adc
pop
inc
aaa
mov
or
push
stc
loope,pt
fwait
aaa
outsl
fimuls
cmp
push
out
int
dec
or
call
mov
pop
int3
out
pop
jmp
add
jne
mov
fdivl
pop
out
jg
mov
pop
lcall
add
push
add
repz
lahf
add
loop
jecxz
mov
cld
stc
or
rcrb
mov
iret
and
ljmp
push
addr16
aas
jg
cld
fs
fsubrp
mov
loop
or
out
lahf
pop
sub
in
cmp
sbb
data16
pop
inc
xor
out
ret
rolb
xlat
jo
push
mov
fldl
push
push
outsl
pushf
mov
out
fdivr
push
popl
aas
and
fdiv
cmpsb
xor
add
fnstcw
sub
aaa
outsl
fidivs
fnstsw
gs
jns
out
fs
lret
rcrl
scas
sub
outsl
fidivrs
jne
mov
fstpt
push
loope
out
int
movsl
repnz
push
fwait
or
and
mov
push
gs
shlb
bound
cld
mov
outsl
lods
repnz
add
sub
aam
aas
imul
ja
jp
add
stos
enter
sub
push
dec
scas
adcl
outsb
pop
aaa
dec
add
inc
dec
jge
xrelease
inc
imul
push
inc
das
push
cli
in
mov
cmp
iret
sub
pop
sub
add
xchg
pop
cmp
int
aaa
outsl
fidivl
in
mov
dec
subb
xlat
mov
cmpsb
lcall
pop
xlat
mov
sub
ds
mov
aaa
outsl
and
adc
gs
stc
or
mov
pop
outsb
mov
lret
das
sahf
jb
test
fdivrp
scas
std
jae
jbe
out
jbe,pt
cmp
ret
jns
out
adc
clc
rcrb
inc
and
test
aaa
outsl
fidivrs
and
mov
jo
inc
lock
cmp
xchg
fwait
or
cbtw
mov
push
dec
mov
aas
jg
enter
xchg
outsl
xchg
pop
or
repz
lahf
lahf
mov
or
and
in
gs
cwtl
cld
stc
push
lret
out
cmp
loopne
lret
cmp
data16
out
dec
dec
adc
adc
stc
repz
fcomip
cmpsl
pop
lock
pop
mov
sbb
jg
cld
xchg
popa
jno
inc
push
xor
movsl
jl
cmp
out
lahf
punpcklbw
or
out
jg
ret
ds
stc
repnz
ret
jecxz
fldl
repz
mov
inc
or
add
cld
adc
jb
pop
ds
movsb
xchg
aas
ljmp
lahf
shll
dec
cld
stc
inc
or
inc
sub
das
std
rcrl
push
add
push
xchg
xchg
inc
lahf
shll
repz
pushf
adc
shl
lea
shlb
push
int
aam
jg
cld
xchg
lea
push
push
fnstsw
lds
clc
repz
lahf
gs
ret
sub
je
inc
sub
dec
insl
mov
stc
push
sub
xchg
xchg
aas
sti
xor
sahf
or
jle
cld
in
aaa
ret
and
in
fnsave
lock
clc
leave
das
pop
and
sbb
add
repz
xchg
mov
pusha
repnz
repz
addr16
push
pop
inc
pusha
xchg
jmp
or
jg
cld
rcl
dec
cli
sbb
out
shr
or
out
lahf
fidivl
sbb
cmpsb
nop
stc
lcall
stc
ret
fidivs
cltd
add
cmp
andb
fldcw
jb
rolb
jecxz
sti
or
out
sub
pop
mov
in
negl
inc
je
pop
sahf
aas
mov
push
xchg
dec
sub
adc
mov
test
dec
ror
sbb
aas
mov
jg
in
test
addl
imul
out
push
dec
or
mov
or
mull
inc
mov
jg
cld
adc
push
push
scas
mov
es
or
mov
repz
lahf
dec
xor
and
add
stc
idivb
jg
cld
stc
sbbb
jbe
xor
movsl
leave
aaa
mov
lea
aas
es
jnp
jle
popa
dec
cli
in
js
cld
stc
repz
cli
adc
cmp
xchg
jno
fisubrl
mov
aas
jg
cli
and
push
repnz
mov
cld
stc
repz
stc
and
pop
lret
and
pop
aaa
in
lahf
aas
jg
jbe
mov
ret
pushf
lcall
stc
repz
or
incb
and
out
mov
in
int
ja
push
adc
rcrb
stc
push
pushf
addr16
f2xm1
iret
outsl
fidivrs
mov
push
shr
push
or
insb
jns
lds
inc
lcall
ret
repnz
stc
push
dec
jecxz
mov
filds
cld
out
dec
push
test
xlat
in
cli
aad
cld
stc
repz
lods
ja
mov
xchg
aaa
lds
iret
lahf
aas
jg
lret
in
ret
leave
aas
xor
lret
loope
or
lods
iret
adc
adc
lock
jbe
aas
jg
mov
cli
jno
jb
loope
jl
repz
pop
mov
inc
test
dec
dec
ficoml
std
test
stos
inc
and
xacquire
addr16
inc
and
cmp
aas
jl
push
sbb
xchg
lahf
aas
jg
outsl
dec
aaa
stc
jmp
cmpsb
mov
repnz
push
push
lock
fcoms
sub
inc
mov
lahf
jg
sbb
inc
dec
in
repnz
inc
dec
xlat
fwait
cli
pop
push
adc
mov
enter
pushf
lock
aas
sub
mov
fiadds
leave
xor
scas
xor
ficoms
pop
fisubrl
in
pop
popl
inc
jbe
pop
xor
outsb
mov
fidivrs
adc
movsl
dec
push
ljmp
push
int
aaa
outsl
lcall
orl
scas
push
mov
and
mov
pop
cmpsb
xchg
or
outsl
fisubs
sbb
mov
cmp
push
cwtl
daa
cmp
mov
pop
sbbl
aaa
outsl
fidivrs
push
push
ljmp
aas
je
xchg
jne
or
xor
out
ss
and
gs
jg
cld
stc
aaa
in
lds
mov
ljmp
test
je
sbb
addr16
or
ud0
sub
lahf
aas
lcall
ucomiss
out
out
popf
xor
xchg
ss
cmp
push
sub
in
in
sbb
scas
jg
cld
test
lock
ret
or
call
lahf
aas
mov
mov
pusha
aas
movsl
jnp
cld
stc
repz
hlt
insl
xchg
dec
fwait
mov
fistpl
push
lahf
aas
jg
mov
je
jbe
addr16
xor
stc
repz
cmc
inc
lea
aad
in
pop
mov
aas
jg
rclb
jecxz
popa
inc
jnp
mov
repnz
test
rorb
fnstenv
mov
jge
aam
ja
cmp
jge
test
cld
stc
inc
addr16
cmpsl
test
movsb
shl
inc
jle
jo
mull
sub
dec
fcmovnb
out
cld
stc
repz
jo
mov
push
mov
andl
sub
je
jbe
inc
insb
cmc
xchg
pop
addr16
xchg
adc
ja
pop
iret
mov
cmpsl
lcall
fidivrs
push
rol
sbb
or
dec
int3
jno
int
call
repnz
jmp
mov
mov
repz
cld
inc
int
aaa
outsl
lods
aad
or
out
cwtl
lret
push
js
and
mov
xchg
cmc
sub
sub
faddp
fmull
movsb
inc
push
mov
fldl
dec
jns
out
or
xor
mov
aaa
outsl
fidivrs
jl
outsb
aam
xchg
adc
loopne
out
fwait
or
inc
xor
push
testl
pop
arpl
lcall
cld
xchg
dec
out
fwait
aaa
push
sbb
mov
push
dec
pop
fidivrs
fs
movlps
pop
mov
outsl
lods
inc
add
dec
mov
mov
and
xor
sub
inc
loop
fstps
es
loopne
rep
enter
nop
pop
dec
inc
jo
int
adc
pop
hlt
inc
aaa
das
outsl
fidivrs
inc
push
mov
repnz
int
aaa
pop
int3
arpl
rolb
shr
fidivrs
shl
xor
pop
xchg
mov
mov
mov
dec
mov
adc
cli
pop
mov
push
lret
mov
filds
xchg
and
addr16
inc
push
mov
jge
adc
in
ljmp
cmp
scas
leave
iret
lahf
aas
jg
sarb
push
lret
flds
jmp
loopne
in
xor
push
mov
lods
mov
inc
dec
clc
cld
loope
push
leave
fwait
aaa
outsl
ficoms
mov
scas
iret
movsb
scas
mov
xchg
dec
jns
out
ret
fsub
shll
mov
stos
dec
dec
inc
pop
fnstcw
mov
out
fwait
aaa
mov
or
xor
cld
push
iret
pushf
mov
inc
dec
repz
adc
stc
repz
addr16
push
dec
mov
jmp
aas
jg
cld
iret
sub
jb
or
test
xor
loop
mov
jg
xchg
stc
xchg
leave
iret
cmp
aas
icebp
andb
xorb
movsb
int
aaa
outsl
out
rcrb
mov
sub
inc
scas
lahf
jg
enter
dec
lcall
mov
repz
loopne
jl
lock
outsb
jo
mov
aas
jg
cld
insb
dec
std
xlat
ds
in
sub
insl
lock
iret
lahf
push
addr16
mov
push
mov
out
jg
mov
dec
imulb
aaa
outsb
push
repz
lahf
push
add
incl
xchg
icebp
lret
cld
stc
jbe
roll
adc
mov
fidivrl
fdiv
into
inc
dec
sbb
pop
lret
mov
mov
aas
jg
cld
cmp
lret
push
jge
fsubrl
add
repz
shl
out
lahf
loopne
rcrb
sti
mov
cld
stc
push
xchg
call
sbb
stc
enter
test
repz
das
pop
push
push
data16
outsb
xchg
outsl
fidivrs
or
cltd
jp
mov
cld
jmp
fwait
adc
call
inc
test
shll
mov
jno
lods
sub
stc
repz
adc
push
xchg
outsb
push
fimuls
or
jg
cld
lock
xor
pop
mov
dec
dec
xchg
mov
out
lahf
xchg
rolb
je
xor
cld
stc
ss
push
or
cli
leave
xor
mov
adc
lret
iret
lahf
aas
push
adc
inc
or
pop
and
mull
aas
in
test
push
pop
mov
dec
xchg
dec
out
fwait
mov
iret
cli
xlat
lods
mov
mov
icebp
out
je
flds
adc
xchg
in
sbb
and
sahf
sub
adc
iret
scas
jg
cld
stc
inc
add
mov
fcompl
mov
iret
lahf
aas
dec
movsl
pop
or
fiadds
repz
rcrb
cmp
cmc
into
cmp
lahf
aas
jg
fucom
iret
pop
pop
not
fidivrs
stc
repz
jge
dec
fwait
dec
mov
pop
mov
setl
lahf
aas
jg
inc
sti
ret
out
sbb
cmpsb
cli
loope
test
sub
aas
ficoml
out
imul
repz
push
push
adc
into
js
and
sub
and
jg
mov
test
mov
mov
inc
add
dec
jns
out
mov
fildl
icebp
or
call
sub
mov
mov
inc
dec
sbb
add
arpl
enter
mov
jle
pop
mov
fisttps
testb
fs
xchg
dec
cli
adc
lods
ficompl
aaa
outsl
fidivrs
pop
jecxz
adc
inc
lods
repz
fwait
sarb
jp
stc
dec
lods
push
mov
outsl
fidivrs
out
bnd
xor
repz
or
add
xor
xor
push
inc
insb
sbb
jns
aad
inc
push
inc
lret
ror
fidivrs
jmp
int
aaa
outsl
inc
inc
dec
inc
push
outsb
call
dec
insl
cmpsb
js
out
shl
scas
dec
xchg
popf
out
xlat
fidivrs
out
mov
mov
rclb
fwait
aaa
outsl
inc
out
xor
xchg
cmpb
pop
rcr
add
loopne
int
aaa
out
jg
mov
inc
sub
imul
aam
fcmovu
jp
cltd
mov
fwait
aaa
outsl
fmulp
stos
push
sub
lahf
or
adc
sub
pop
pop
jns
xor
jb
mov
and
movsb
xchg
xchg
insb
ficoms
mov
pop
out
cmp
inc
dec
sarb
pop
jne
pop
mov
adc
sub
jns
inc
and
mov
insb
outsb
aas
mov
lahf
jg
and
decl
jge
xor
adc
pop
xchg
shlb
pop
sub
mov
inc
cwtl
inc
jg
cld
stc
pop
jno
adc
lcall
mov
mov
out
lahf
aas
jo
out
out
dec
pop
push
push
xor
stc
repz
push
dec
mov
fnstcw
pushf
add
pop
in
push
inc
and
jg
insl
xchg
sub
in
repz
lds
add
les
mov
ds
das
xchg
aad
dec
inc
pop
push
or
repz
adc
sti
jp
pop
in
jns
enter
cld
pop
dec
cli
in
pop
dec
and
movsb
outsl
sub
fnstcw
xor
es
rcl
inc
sbb
dec
test
add
hlt
lcall
dec
cmpsb
dec
push
out
pop
mov
xlat
jp
out
sbb
jmp
inc
fidivrs
scas
mov
sbbb
and
aaa
outsl
ret
and
cwtl
out
cmp
mov
jno
or
mov
shrb
jnp
aad
xor
repz
ffree
stc
jle
adc
jle
cli
push
fld
iret
lahf
aas
cmp
sbb
ret
xor
loop
cld
stc
repz
dec
incl
mov
fadd
cmp
sti
in
mov
jg
adc
fs
add
and
mov
dec
push
push
lods
add
and
sub
xchg
push
and
lods
push
sbb
dec
es
imul
iret
lahf
aas
call
pop
sub
or
mov
loope
shrl
mov
testb
jle
cld
push
adc
lcall
cli
in
iret
enter
es
jg
or
xchg
aas
incl
dec
lcall
add
ja
mov
outsb
fidivrs
jle
pop
mov
ret
sbb
int
mov
xchg
and
fidivrs
sub
push
mov
xchg
dec
mov
outsb
shll
xor
out
cmpb
xlat
aas
lahf
xor
iret
pop
sub
aam
hlt
rcrb
stc
repz
cmpsl
sbb
and
int
pop
std
cmp
mov
ror
lahf
jg
aaa
loopne
popf
fs
add
cld
stc
repz
or
xchg
aas
sbb
xor
jle
jl
sub
mov
xchg
adc
cmp
jg
cld
sub
aas
sub
loopne
fbstp
cs
lahf
mov
ret
cmp
addr16
adc
jg
cld
stc
dec
repnz
or
fsub
stos
loopne
daa
test
mov
mov
imul
cmp
cmp
cld
stc
rep
lods
ficoms
ds
out
mov
arpl
xchg
aas
jg
cmp
push
mov
jge
pop
stos
lahf
aas
jg
addr16
sbb
dec
pushf
sub
adc
push
stc
repz
push
movsb
jp
mov
in
jnp
sbb
add
jg
cld
ss
mov
data16
addb
lret
bnd
xchg
inc
jne
aas
jg
cmp
mov
pop
mov
stc
repz
js
pop
push
mov
popa
mov
xchg
arpl
icebp
dec
dec
and
lods
mov
pop
mov
sbb
jg
daa
inc
sbbb
lahf
orl
lahf
push
dec
andb
inc
out
lahf
jg
inc
xor
ds
rorb
insb
adc
stc
repz
jb
popf
inc
push
ja
mov
outsb
mov
mov
xchg
je
outsl
fidivrs
fisubrs
mov
cld
mov
fwait
aaa
jno
in
popa
sub
lock
push
push
fdiv
mov
mov
into
pop
xor
fwait
aaa
outsl
popf
imul
pop
xlat
cmp
in
out
sub
aaa
outsl
fidivrs
and
add
scas
in
je
int
in
mul
xlat
arpl
in
push
cmp
mov
mov
daa
repnz
jno
stos
out
inc
cld
stc
pop
inc
in
mov
pop
jle
lahf
stos
lahf
jl
push
jb
adc
xor
repz
sbb
push
inc
mov
repz
push
outsl
fidivrs
mov
mov
mov
and
aaa
movsl
xor
pop
or
sub
fidivrs
lock
in
icebp
jo
inc
mov
int
aaa
outsl
les
popa
fidivl
outsb
pop
stos
mov
hlt
jo
cld
or
or
lahf
xor
adc
in
xchg
and
and
int
adcb
push
xchg
inc
inc
sbbb
pop
nop
adc
or
outsl
fidivrs
pop
ret
les
imul
aam
aaa
jecxz
mov
call
int
insl
jne
iret
mov
cld
iret
popa
outsl
fidivrs
sbb
or
mov
jmp
fwait
aaa
inc
into
xorb
pop
or
popl
sbb
js,pn
int
ja
or
adc
jbe
push
mov
in
jmp
out
sbb
or
stc
in
aam
jmp
ror
aaa
outsl
push
or
mov
repz
lahf
dec
cmp
and
int
fidivrs
jge
cmp
mov
in
das
shl
dec
pop
xor
incl
push
out
jg
cld
stc
pop
jl
sbb
test
loope
rcrl
push
out
lahf
aas
imul
js
mov
stc
repz
cltd
or
pop
add
repz
iret
lahf
aas
jg
jns
dec
stos
mov
adc
scas
cwtl
ffree
out
hlt
leave
adc
ret
push
jb
jns
or
mov
in
andb
lahf
xchg
pop
mov
pusha
and
push
das
lods
inc
sbb
jecxz
lea
jo
inc
int
aaa
fistpll
cli
enter
and
dec
or
sbb
or
cmp
mov
push
push
inc
mov
repnz
cmp
int
aaa
mov
int3
int
fcoms
mov
mov
loopne
ljmp
jne
xchg
mov
jne
cwtl
rcll
or
lahf
xchg
mov
out
fwait
fs
push
and
fcom
stos
jmp
fidivrs
out
test
insb
addr16
pop
int
mov
xchg
lret
rclb
fcoml
cli
enter
aas
pop
xchg
nop
mov
xchg
and
das
mov
mov
mov
es
cmc
mov
jle
in
dec
pop
fisubrs
dec
cmp
inc
push
fcoms
aaa
push
pop
outsl
aaa
out
mov
cld
fldt
shrb
repz
fwait
shl
insl
mov
hlt
aam
sbb
jns
pop
cmpsl
inc
gs
mov
scas
dec
das
cmp
and
aas
imul
add
dec
movl
cld
stc
repz
out
sbb
scas
adc
cmpsb
aas
jl
aas
jg
inc
out
cmpsb
inc
out
stc
inc
xor
pop
movb
shrl
call
sbb
jg
cld
aas
add
shl
inc
jo
cmp
iret
lahf
cmpsb
outsb
subl
arpl
xchg
test
push
lret
out
out
test
fwait
jae
jno
dec
lahf
dec
adc
adc
add
mov
inc
adc
push
jge
outsl
fidivrs
call
insl
mov
xchg
insb
iret
int
mov
dec
in
out
lahf
aas
pop
mov
inc
sub
test
cld
stc
repz
lcall
pop
sub
fwait
data16
mov
lahf
xchg
out
jbe
data16
lock
cmp
mov
add
add
or
fnstcw
mov
mov
pop
cmc
in
dec
movsl
xchg
mov
loope
scas
jns
out
jns
push
ljmp
xor
fnsave
outsl
fidivrs
test
and
xor
repz
fwait
cmp
mov
fwait
sbb
addr16
jns
xor
loopne
jne
std
or
add
xor
cmp
out
lods
arpl
stos
mov
outsl
fidivrs
ja
repnz
mov
enter
out
fwait
sahf
sub
sub
out
sbb
mov
repz
or
and
push
outsb
mov
fwait
aaa
jmp
and
ds
inc
sbb
mov
rcll
xor
jnp
andb
fwait
aaa
outsl
ja
adc
or
mov
mov
sahf
andb
mov
fwait
aaa
outsl
ficomps
mov
sub
adc
out
add
push
imul
inc
mov
mov
push
sbb
call
fwait
pop
shlb
jp
aam
sub
sbbb
mov
add
sbb
pop
leave
lcall
popf
loopne
jne
xor
mov
sbb
xchg
cmovo
lods
push
and
and
outsl
fimuls
std
mov
leave
int
ja
sub
les
mov
sbb
nop
aas
push
jp
test
push
stc
repz
rcr
in
mov
dec
je
rclb
bound
stc
dec
add
dec
mov
aaa
and
gs
mov
xchg
and
fldcw
xchg
shll
outsl
fidivrs
ret
clc
rcrb
pop
mov
out
fwait
lods
iret
xchg
sbb
jle
cmpsb
stc
xor
sti
add
ja
xchg
fisubl
dec
das
aaa
outsl
fidivrs
xchg
rol
sbb
vcvtpd2dq
fwait
ss
rorb
mov
sbb
jns
xchg
in
stc
push
cmp
out
sbb
push
and
int
aaa
lret
adc
lea
cld
jmp
dec
sbb
mov
dec
out
pop
arpl
int
andb
pop
sub
mov
mov
sub
push
inc
push
sub
leave
mov
sub
enter
push
sbb
jecxz
imul
loopne
cli
dec
icebp
push
mov
inc
repz
fwait
outsl
iret
and
das
in
dec
psrlw
fidivrs
sbb
sub
in
mov
aaa
and
mov
cltd
fcmovnb
out
fwait
aas
jmp
xchg
jo
jae
aas
jl
repz
adc
lea
or
xchg
inc
ror
aaa
outsl
cmp
sahf
jnp,pt
and
sbb
cld
mov
leave
mov
and
in
mov
xchg
fisubs
mov
xchg
add
loopne
outsb
lahf
loope
dec
test
fcomps
inc
outsb
fidivrs
lods
mov
fwait
aaa
out
test
mov
data16
rclb
loopne
roll
pushf
sti
inc
in
lret
add
lahf
insl
imul
fdivrl
xor
es
xchg
in
mulb
mov
fwait
aaa
inc
mov
mov
repz
pushf
push
pop
mov
jp
pop
std
push
fwait
aaa
outsl
fisubs
arpl
aas
aad
test
jns
out
icebp
push
fadds
fcmovb
icebp
jo
fidivrs
jg
sbb
xchg
mov
add
inc
lcall
and
test
loop
jg
cld
cld
aas
jp
lea
movsl
push
fcmovb
loope
ret
iret
lahf
cltd
ror
push
adc
mov
sahf
daa
mov
test
test
adc
or
mov
jb
out
ret
mov
pop
and
rorl
sbb
sbb
fdivr
repz
mov
inc
and
pop
sbb
sahf
aas
jg
cld
jnp,pt
jl
pop
or
push
sub
ret
jns
cmpsb
and
stc
das
fs
dec
jle
cld
xchg
leave
cld
outsl
out
mov
loopne
xor
filds
xchg
shlb
and
repz
pop
jb
js
and
adc
add
or
arpl
leave
shlb
aaa
inc
pop
dec
testl
ds
dec
movsb
xchg
test
pop
mov
repz
filds
mov
push
push
aas
jg
cld
call
jns
dec
push
loopne
ret
lret
lock
iret
lahf
cltd
adc
out
xchg
movsl
repnz
repz
push
stos
iret
xchg
xor
jns
mov
adc
andb
dec
aas
lods
aaa
outsl
fidivrs
aaa
scas
fsubrl
cmp
sbb
and
add
mov
out
nop
add
sub
dec
jle
mov
jae
push
out
add
add
push
fildll
popa
inc
pop
out
fwait
aaa
and
test
inc
or
repz
out
pop
mov
cs
mov
out
shlb
outsl
pop
aaa
dec
sub
adc
mov
cld
dec
push
cmp
pop
movsl
xchg
inc
inc
std
xchg
out
mov
jb
and
adc
pop
add
cld
stc
repz
push
fcmovne
xchg
cmc
mov
jle
jne
mov
aaa
out
xchg
arpl
and
js
mov
dec
les
and
in
jae
pop
cld
xor
jb
pop
pop
inc
sbb
xchg
mov
or
jg
or
mov
aaa
outsl
fidivrs
sub
repnz
mov
lods
mov
out
fstl
and
aas
jge
outsl
fidivrs
adc
dec
imul
lods
arpl
lods
inc
out
fwait
aaa
pop
ja
mov
adc
cmp
mov
rcll
fisttpl
div
push
lock
add
fwait
aaa
outsl
cltd
cld
xor
out
xor
repz
xor
jo
cli
les
scas
jmp
fdivrp
aaa
add
and
mov
int
call
ds
jno
cmp
out
sbb
fdivs
adc
ret
aaa
outsl
fisubrs
imull
cmpsl
call
mov
lods
lcall
imul
inc
ficompl
fidivrs
stc
cwtl
adcb
xchg
or
sub
jg
int
mov
out
xor
pop
insb
lret
movsb
jns
out
pop
lret
movb
cld
sbb
sbb
out
mov
out
shll
jnp
xor
insl
scas
push
dec
outsb
adc
mov
push
push
jo
sub
mov
or
jbe
inc
stos
sub
int
aaa
xor
ss
bound
cld
pop
mov
pusha
push
jns
adc
ljmp
ljmp
andb
repz
push
adc
cwtl
jg
jge
cmp
daa
mov
out
ficoms
outsb
mov
fdivr
fcmovne
jle
jl
cmp
jbe
mov
in
sbb
xchg
xchg
scas
or
xor
xchg
sbbb
fdiv
in
out
push
pop
fnstcw
sub
xchg
jnp
out
fwait
dec
pop
stc
xlat
dec
fdivr
mov
mov
mov
bound
xchg
mov
pop
dec
dec
out
fwait
aaa
mov
pop
addr16
jmp
lret
scas
fidivrs
sbbl
lret
sbb
sbb
mov
aam
outsl
aas
jmp
nopl
jmp
fiaddl
xchg
aad
ret
xchg
decl
data16
push
lret
adc
repz
aad
rclb
push
mov
pop
adc
leave
hlt
aam
fidivl
push
add
repz
leave
fcmove
addr16
sbb
aaa
loopne
mov
mov
cld
stc
cld
mov
inc
gs
and
loopne
outsl
popf
jns
jecxz
dec
add
adc
fidivrs
out
stc
jg
movsb
stc
aas
pop
sahf
out
fwait
aaa
dec
xchg
inc
rcll
push
insb
iret
rol
fidivrs
fldcw
mov
add
enter
fwait
aaa
outsl
test
sbb
dec
roll
inc
push
mov
fwait
imul
pop
jl
jnp
sbb
pusha
fwait
aaa
outsl
fisubrs
lret
push
jo
xchg
and
repz
int
adc
in
xor
jno
xor
mov
mov
mov
sub
test
outsl
scas
sahf
pop
divl
push
sti
jp
mov
mov
call
ss
mov
push
dec
xor
mov
repz
and
pop
insl
imul
xchg
dec
hlt
jg
cld
stc
test
or
and
xchg
pop
imul
xchg
into
fiaddl
xchg
cli
cld
stc
repz
push
push
sub
dec
mov
xor
rep
jns
cmp
pop
div
add
fnclex
aas
jg
cld
jb
mov
push
adc
or
mov
iret
lahf
dec
fs
sub
jns
jo
pop
out
cmp
imul
stos
lods
mov
push
mov
hlt
das
push
mov
cmc
xchg
int
call
pop
jns
fdivrl
out
sub
lods
cwtl
popa
lds
dec
iret
xchg
cmp
lods
cmp
sub
inc
rcl
mov
inc
inc
scas
jns
not
enter
xlat
cmp
je
out
mov
iret
or
cmp
int
aaa
xor
xchg
dec
pop
cltd
std
fidivrs
mov
push
repz
call
cmc
pop
mov
test
in
add
cmp
cmp
add
sub
aad
mov
or
mov
dec
jg
mov
out
cmp
outsl
ficoms
iret
and
pop
mov
movsl
inc
mov
cld
imul
adc
les
jge
lahf
aas
jg
mov
stos
cmp
sbb
repz
rorb
pop
mov
imul
add
stc
hlt
lret
mov
xlat
divb
inc
test
fldenv
xor
and
mov
dec
aad
push
mov
fwait
aaa
outsl
mov
mov
in
pop
jg
repz
imul
pusha
mov
cs
outsl
fidivrs
movsb
push
jne
dec
mov
out
fwait
xchg
andl
cmp
fdivrl
sbb
lahf
mov
movsl
mul
repz
repz
out
dec
or
sub
jmp
clc
aas
jg
cld
into
or
add
bound
lahf
es
adc
jae
test
adc
clc
xlat
jae
inc
and
adc
cmp
call
shl
cltd
mov
test
or
push
cmp
mov
sahf
mov
pop
mov
mov
cmp
add
adc
ret
push
sbb
push
push
and
ffree
test
ret
adc
ficompl
jnp
dec
push
rorl
out
mov
push
lret
dec
push
inc
icebp
dec
sub
dec
and
add
add
das
and
push
adc
adc
rorb
cmp
pusha
push
add
mov
inc
aad
xchg
mov
xchg
xorb
jmp
inc
repnz
lds
jg
adc
cmpsb
mov
add
sub
adc
mov
inc
jb
xor
aad
movsb
sub
jb
cmp
jae
sbbb
dec
loop
or
sub
sub
inc
xchg
mov
fwait
mov
mov
xchg
sbb
shll
les
icebp
cmp
mov
mov
mov
icebp
adc
xorb
mov
movsl
sbb
or
pop
dec
dec
add
mov
rcrb
mov
sbbb
icebp
test
mov
sti
enter
fidivrl
or
cmovo
push
push
addr16
aad
aaa
push
xlat
sbb
add
dec
adc
test
add
add
clc
sbb
add
sarb
orb
push
add
sub
add
push
test
xor
push
das
sub
cmp
pop
or
add
pop
mov
mov
xor
popw
ret
lret
test
push
mov
pop
aas
sub
inc
adc
push
mull
sbbb
test
inc
mov
and
repnz
ljmp
rolb
push
cs
mov
xor
lahf
pop
jne
push
stos
and
leave
lcall
rolb
lret
arpl
or
and
hlt
pop
push
add
ljmp
inc
mov
clc
and
add
sbb
push
xchg
mov
ljmp
cmp
into
test
push
xor
mov
add
sbb
and
call
add
sbb
sbb
cli
push
cmp
testl
push
fcmovb
daa
or
dec
sub
add
scas
pop
shll
adc
fcmovnb
or
push
or
add
ret
add
adc
add
sbb
out
and
jne
test
andl
and
mov
or
sbb
mov
adc
mov
movsl
movsb
icebp
inc
push
clc
adc
les
mov
add
ss
insl
daa
inc
add
pop
xchg
aam
mov
or
loopne
testb
and
lret
push
push
push
mov
adc
and
push
mov
test
xchg
push
inc
sbb
push
cmc
add
mov
and
testb
sbb
adc
test
fdivs
mov
aaa
mov
push
push
ss
sub
and
mov
enter
scas
loope
xchg
pop
ds
add
adcl
sbb
adc
sbb
mov
adc
inc
adc
or
decb
pop
sbb
sub
dec
inc
dec
fcoms
push
aam
outsb
inc
pusha
mov
mov
cmp
mov
xor
push
scas
sub
mov
or
add
divb
push
push
test
enter
inc
movsl
repnz
sub
adc
mov
ret
push
dec
pop
jno
add
cmpsl
push
add
dec
mov
add
add
shr
inc
in
ss
addb
test
and
or
sub
mov
cmp
cmpsl
mov
and
loopne
mov
adc
jae
rcrb
lcall
cmc
stos
sbb
loope
lret
sbb
subb
or
mov
inc
pop
sbb
lret
stos
enter
ret
jmp
cs
lock
call
pop
insb
notb
fcmove
xor
shlb
ret
add
adc
insl
stos
sbb
fists
xchg
test
mov
add
fadds
push
cmp
push
jnp
pop
pop
xlat
adc
and
je
xchg
in
adc
cwtl
add
push
ljmp
and
ret
clc
rolb
sbbb
call
loopne
ret
sub
xor
sub
test
aaa
int3
mov
add
xor
sbb
add
push
mov
inc
mov
sar
jbe
push
clc
add
adc
pop
stc
fcomip
insl
xor
movsl
push
mov
shlb
in
dec
pop
add
mov
xor
push
sbb
sub
data16
fldl
rcrl
fdivrs
push
or
adc
arpl
push
lods
or
es
add
in
sub
pop
inc
or
imul
jecxz
push
test
imul
add
mov
rolb
cwtl
fiadds
sbb
xor
inc
mov
pusha
aam
cmp
add
fmuls
ja
and
or
sbb
stos
jno
fcmove
ljmp
dec
ret
or
into
cmp
add
sub
lods
mov
jae
adc
xor
mov
mov
rolb
mov
add
adc
rolb
sti
loop
lret
sahf
insb
cmp
or
push
adc
out
add
inc
pop
adc
mov
add
cwtl
insl
add
sbb
popf
add
daa
push
push
jns
mov
sbb
mov
call
jge
jae
pop
add
xchg
and
add
aad
shll
ljmp
add
fcomps
xchg
subb
rorb
movl
sub
testb
lods
shll
push
fstl
clc
in
test
or
dec
mov
adc
adc
mov
xor
call
push
add
pop
mov
rorl
in
lcall
and
push
arpl
push
cmp
add
push
in
bound
fdivrs
mov
bndstx
mov
add
shrl
cmp
dec
mov
push
scas
pop
ret
mov
push
rclb
shrb
loopne
sbb
sbb
jno
testb
xor
negb
sub
notb
mov
movsl
jge
push
push
xlat
adc
or
std
lcall
mov
test
mov
cmovno
lea
mov
mov
orl
inc
lar
push
pop
cltd
dec
mov
fwait
push
sbb
push
lret
jo
push
add
mov
push
inc
scas
pop
shll
inc
push
roll
daa
and
je
test
jl
add
push
push
xor
xor
lret
icebp
mov
test
sub
cmp
sub
pop
pop
insl
pusha
sub
sarb
rolb
stos
pop
adc
adc
inc
and
sub
daa
fcomps
sbb
cmp
cwtl
and
push
in
jb
push
push
call
enter
daa
jp
stos
sub
je
roll
stos
adc
dec
push
out
popa
adc
xor
push
jno
leave
mov
pop
sbb
jne
sbbl
cli
push
and
sub
cs
popw
and
pop
cs
rclb
cmp
pusha
jb
lea
mov
or
arpl
cltd
add
dec
xchg
or
add
repnz
sub
shr
pop
or
adc
leave
or
cmp
sbb
sub
pop
arpl
cmp
adc
mov
cmpsl
add
ret
sbb
rcrb
ljmp
rolb
mov
push
fidivl
sbb
push
adc
ds
inc
je
rcll
xorb
fistl
fs
dec
mov
cltd
dec
push
push
add
adc
pop
rcrb
mov
sbb
cltd
sbb
fcmovne
scas
sbb
cmp
add
push
adc
bound
push
lret
repnz
pop
xor
adc
jne
xlat
mov
aam
rorl
clc
aad
push
subb
mov
mov
or
jp
xor
push
mov
add
js
adc
mov
ret
inc
and
mov
xchg
test
pop
cmp
repnz
and
add
popa
les
pop
arpl
mov
mov
pop
sbb
add
leave
mov
adc
push
mov
jmp
xchg
adc
pushf
pop
cmpsl
or
out
das
adc
adc
adc
push
es
sbb
and
or
dec
or
mov
push
in
or
vfrczpd
fcmove
fucomi
jae
sub
or
inc
push
cmp
lock
xchg
pop
fisttpll
shlb
mov
sbb
cmp
mov
lret
dec
addr16
mov
lock
mov
add
and
mov
imul
movsl
cmpsl
pop
or
fcompl
push
out
pop
flds
push
push
call
mov
or
push
cmpsb
jecxz
lods
jp
shlb
push
adc
test
or
ror
xor
xor
add
adc
push
mov
or
mov
lock
pop
sbb
subl
cli
and
call
or
ret
add
add
ret
push
adc
ret
sub
adc
fcompl
cli
or
or
push
mov
ss
ret
in
cmpsb
ja
pop
aaa
push
lods
ret
loopne
insb
lock
add
dec
or
rcll
int3
test
or
adc
push
aad
sub
hlt
shll
adc
sbb
add
and
movsb
popf
roll
mov
std
xor
cmp
inc
or
pop
ja
or
pop
fiaddl
or
rorb
jb
xchg
sub
pop
scas
sbb
adc
pusha
lret
xchg
inc
adc
sbb
aam
jb
movl
lcall
pop
inc
mov
sbb
mov
lods
cmp
adc
jmp
dec
into
push
ret
mov
imull
test
push
xchg
pop
insb
lret
test
or
mov
adc
add
mov
push
push
push
mov
cmp
adc
out
add
mov
sbb
adc
cli
or
in
and
or
push
xchg
addr16
rclb
int
or
mov
cmp
test
ds
test
sbb
mov
cli
xchg
inc
or
and
mov
in
mov
inc
lods
or
sbb
adc
add
adc
or
adc
or
aad
nop
test
stos
sbb
mov
pop
fsubp
add
js
sbb
push
loope
cmp
xor
jmp
xor
in
icebp
dec
push
mov
addr16
fld1
jb
bndstx
out
xchg
dec
push
movsl
push
and
aam
scas
test
push
sub
cltd
mov
sub
push
mov
mov
aad
dec
lock
fcoml
cmpsl
test
push
imul
and
cltd
xchg
rorb
push
jae
xor
inc
aam
sbb
rcrb
test
add
mov
sbb
movl
mov
push
cmp
and
pusha
push
inc
and
test
or
mov
adc
mov
sub
andb
pusha
push
mov
test
jl
mov
les
adc
ret
xchg
push
add
popa
js
pusha
push
fwait
bound
mov
pop
push
pop
daa
clc
or
leave
movsl
add
sub
jo
pop
sbb
push
imul
ret
add
lcall
pop
inc
pushf
mov
cmp
cltd
hlt
push
addl
adc
adc
mov
add
test
test
xor
icebp
inc
mov
push
push
and
pop
or
sub
mov
xchg
ret
sbbb
pop
mov
stos
mov
inc
push
add
incb
or
cmp
or
loope
das
fnstcw
imul
out
lcall
sti
ret
in
incb
mov
add
add
mov
dec
or
add
addl
cmp
and
add
or
sub
and
add
mov
dec
push
inc
dec
jmp
jp
andb
push
mov
mov
push
xlat
xchg
add
leave
mov
mov
mov
push
fdivp
in
dec
mov
roll
jmp
leave
inc
fists
push
je
or
aad
and
mov
and
add
out
dec
mov
insl
and
sbb
pop
add
mov
leave
xchg
push
mov
pop
sbb
adc
cmp
jo
mov
insb
pop
ret
adc
lcall
add
je
subb
xchg
cwtl
push
orl
push
lock
pop
sbb
or
mov
push
popf
dec
test
or
int3
iret
sbb
sbb
ret
repz
push
add
or
lea
inc
andl
adcl
jp
inc
sbb
mov
ret
sbb
add
lock
dec
aaa
add
into
repz
out
pop
and
ret
add
push
adc
ljmp
lock
pop
cmp
nop
call
or
or
inc
imul
or
jo
cwtl
pop
or
or
orl
addl
add
mov
push
test
push
inc
mov
scas
scas
jo
sub
sbb
repz
xchg
mov
loop
subl
test
mov
pushf
cmp
popf
or
shrb
ljmp
movsb
inc
rorl
xchg
cltd
lcall
add
add
inc
sub
mov
mov
movsl
test
add
out
in
dec
and
test
or
sbb
shll
cmpsb
push
dec
loopne
gs
mov
push
sub
cli
adc
mov
shll
inc
clc
lock
aaa
int
nop
imul
mov
add
sbb
pushf
jp
les
mov
push
into
loopne
stos
fisubrs
rcll
ljmp
aam
push
add
xor
inc
pop
mov
loope
pop
push
add
mov
jno
jb
repz
cmp
testb
cmp
iret
xor
cmp
or
lods
pop
jo
xchg
mov
popa
and
or
jb
xor
mov
pop
sarl
jno,pt
enter
add
lock
mov
lods
adc
jne
cwtl
sbb
sbb
test
cmp
cs
mov
dec
aam
and
add
inc
movsl
les
xor
mov
fiaddl
nop
and
test
outsl
bound
add
cmp
unpcklps
ret
ficoml
add
cmpsb
sbbb
rcrl
cmp
mov
sub
sub
xor
sub
sub
dec
insw
fdivrl
cmp
int
mov
incl
push
or
test
inc
pop
sub
push
cmp
loope
lret
ljmp
into
fidivs
mov
fcomps
sbb
dec
mov
gs
or
mov
xlat
xchg
cmp
scas
push
mov
insb
mov
or
xor
shll
mov
rolb
icebp
jno
scas
jle
sub
mov
jecxz
test
add
in
pop
xor
jg
push
inc
add
jne
add
popa
mov
push
push
cmp
jecxz
sub
std
incl
cmp
sub
stc
inc
sbb
inc
rorb
mov
mov
mov
and
jp
cs
leave
aad
inc
mov
in
jge
aad
mov
js
or
pop
ret
movsl
sub
jecxz
inc
add
mov
mov
mov
fs
push
int3
sbb
lock
notb
addl
mov
xor
pop
popa
ljmp
add
cmp
or
or
xlat
or
lret
push
xchg
push
inc
stos
or
cltd
push
pop
jmp
push
cli
negb
mov
aas
leave
add
aad
popf
jo
mov
push
push
pop
aad
xchg
mov
dec
dec
in
mov
outsb
les
imul
dec
in
push
jmp
jb
sarl
mov
cmp
ds
inc
nop
lods
orl
sbb
inc
sarl
sbb
mov
cmpsl
daa
testb
push
pop
inc
inc
jae
push
cmc
jmp
and
dec
shr
cwtl
ljmp
inc
jmp
in
shlb
inc
imul
or
stos
or
aam
pop
jb
sbb
or
push
sbb
add
add
push
push
dec
push
ljmp
cmp
push
dec
in
sub
adc
mov
jle
and
mov
rcrb
cs
sub
cmp
fisttpl
sub
cmp
les
ds
push
pop
fstl
push
shlb
push
xlat
negl
rcll
mov
xchg
fld
cmp
and
addb
shl
call
test
loope
fwait
pop
or
jnp
lea
rorb
ja
cmp
add
or
enter
adc
push
inc
sbb
cmp
in
sbb
add
push
aam
or
iret
push
add
call
push
mov
push
push
and
pop
xlat
push
inc
or
sbb
leave
cmp
scas
js
or
sbbl
rclb
call
push
add
or
mov
inc
xor
mov
cld
or
mov
mov
lds
out
cmp
adc
fadds
push
and
mov
sbb
js
sub
push
jmp
or
adc
pxor
mov
add
enter
sub
xchg
push
lds
push
mov
pusha
or
jmp
pushl
adc
ficompl
xchg
sbb
and
movsl
pop
mov
bound
mov
loopne
sbb
add
lcall
sbb
or
rcrl
daa
mov
out
lea
rclb
xchg
add
pop
pop
xor
sub
movsb
jmp
add
mov
je
xchg
mov
loope
lret
inc
scas
clc
lret
sti
sub
push
xchg
and
popf
and
adc
jmp
ret
push
dec
mov
repnz
cmp
push
add
lea
icebp
out
rolb
inc
mov
and
rorb
adc
dec
into
add
or
mov
mov
and
adc
add
mov
jo
dec
negb
inc
call
pushf
mov
nop
sub
add
rclb
add
xchg
sub
push
cmp
shr
int
or
mov
pop
inc
xor
in
cwtl
or
inc
movsl
xor
xchg
inc
test
adc
push
movsl
sbb
sub
and
push
rol
push
mov
add
rclb
int
mov
sarb
pop
lods
setge
adc
cmp
test
leave
ss
lret
add
rcl
inc
dec
int
lcall
mov
das
rol
adc
add
stos
shlb
dec
pop
test
add
pop
push
mov
mov
adc
push
fdivs
stos
dec
xchg
mov
add
icebp
stos
mov
push
push
push
inc
xor
add
push
sbb
cmp
cwtl
or
add
rclb
fcoms
sbb
jb
xchg
or
ret
push
ret
roll
int3
adc
mov
mov
stos
sbb
pushf
adc
test
push
rcrl
push
and
inc
movsl
sbb
repz
and
jae
push
push
add
mov
lahf
rcrl
push
push
mov
lock
cmp
aaa
ret
icebp
mov
scas
push
jp
icebp
lret
rolb
inc
lock
mov
fisttpll
shl
push
inc
dec
jp
sub
sub
dec
dec
add
pop
fisubrs
adc
cs
xchg
jecxz
inc
add
std
cwtl
stos
hlt
or
dec
jb
push
enter
xor
sbb
fimull
sbb
insl
and
push
mov
mov
inc
in
mov
cmp
adc
imul
or
push
rclb
or
pop
pusha
fldcw
jae
or
and
sbb
mov
pop
mov
call
or
jl
inc
test
adc
mov
dec
lock
cmpsb
sbb
in
adc
jbe
ljmp
test
and
aas
mov
and
insb
dec
push
add
jle
addl
xchg
sub
sbb
aad
into
add
int3
adc
push
aad
inc
mov
mov
lods
sub
adc
leave
mov
and
call
loopne
es
xor
push
push
mov
inc
cld
inc
ja
inc
or
test
fldl
fidivrl
loopne
iret
sbb
mov
insl
adc
or
mov
adc
cmp
sahf
jmp
or
mov
add
ja
mov
icebp
ret
lret
mov
sbb
and
and
enter
push
adcl
inc
les
jge
xchg
pushw
add
call
mov
sbb
adc
lds
rcll
mov
inc
lods
xor
out
xchg
jmp
sbb
sub
push
shl
fsubrs
jb
xor
cmp
int3
ljmp
push
mov
out
subb
jp
or
lock
aam
dec
xchg
movb
mov
and
cmp
js
and
lahf
push
mov
pop
push
pop
pop
insb
shl
jb
mov
adcl
insb
or
addl
adc
sub
int3
or
lods
adc
add
pop
lock
mov
sarb
mov
pop
mov
adc
js
jle
stos
add
push
je
inc
les
repz
push
or
adc
loope
das
pop
or
int
adc
ljmp
and
push
adc
pushf
shrl
or
dec
push
andb
push
mov
sbb
add
adc
scas
loopne
outsl
sbb
push
add
push
mov
cmc
xchg
insb
ljmp
mov
mov
mov
add
add
xchg
loop
adc
loopne
dec
hlt
sub
mov
fstpl
test
aam
pushf
mov
mov
lock
daa
adc
mov
mov
scas
into
mov
addb
jae
mov
mov
insl
push
mov
adc
je
mov
sbb
jmp
inc
and
mov
ds
out
std
mov
push
mov
lcall
jne
mov
push
inc
add
adc
addl
mov
add
mov
adc
int3
push
mov
push
rorb
sub
xchg
fstpl
sub
movsl
ret
cmpsl
repnz
stos
pop
push
jge
add
mov
enter
add
dec
shrb
mov
cwtl
sub
add
inc
scas
add
fadds
rol
ret
inc
and
adc
inc
dec
jb
sbb
orb
stos
cmp
mov
sub
jo
loopne
nop
pop
ret
loopne
mov
xor
adc
add
adc
test
icebp
mov
sbb
cli
stc
push
rolb
into
cmp
scas
pop
push
sbbb
add
fwait
into
sbb
rsm
add
fstpl
cmp
hlt
sub
xorb
mov
sbb
subl
mov
test
rcl
subl
roll
adc
adc
xchg
add
addb
xchg
stos
xchg
stos
outsb
inc
rcr
and
hlt
adc
mov
lock
loop,pn
repnz
push
rolb
mov
xchg
incb
pusha
cwtl
mov
rclb
mov
inc
mov
xor
call
push
mov
push
jb
pop
mov
testb
pusha
aas
popf
inc
out
mov
and
scas
sbb
sbb
and
rolb
dec
jo
dec
addr16
or
stos
imul
outsl
jae
adc
pushf
pop
adc
xchg
dec
xor
and
int3
xchg
push
adc
arpl
popa
mov
mov
icebp
cmp
add
xchg
mov
lret
xchg
mov
mov
xchg
sub
dec
mov
fists
dec
inc
pop
mov
xchg
js
bound
aad
mov
inc
add
clc
rcrl
dec
sbb
jo
out
add
fstpl
xor
push
or
xchg
push
dec
dec
movsl
loopne
add
lret
cmp
inc
add
subb
lret
adc
sar
rorl
cmp
scas
cltd
and
adc
xor
mov
in
les
and
push
add
out
mov
lahf
es
and
xor
add
into
scas
loopne
dec
repnz
adc
mov
xor
std
les
repnz
inc
mov
repnz
adc
xchg
lock
mov
daa
sahf
pop
push
lret
cltd
mov
pop
cs
pusha
inc
inc
jnp
xor
aam
leave
adc
sbb
add
enter
mov
repz
push
es
lret
add
or
add
repnz
xchg
stos
shrb
je
pop
dec
in
xchg
adc
add
pusha
mov
push
pop
lds
jo
add
lret
adc
pushf
or
mov
fwait
xor
add
push
push
or
dec
cs
or
xchg
adc
ret
push
jo
dec
or
adc
mov
or
test
das
mov
and
xchg
jno
leave
ficompl
arpl
insb
push
or
movsl
and
or
xor
mov
loop
and
pop
std
in
stc
or
loope
cmc
pop
or
faddl
push
fs
sbb
jo
cmp
xchg
add
xor
push
jecxz
js
or
stc
imul
pop
jno
adc
push
shlb
mov
loopne
call
and
movsl
xor
movsb
or
pushf
mov
call
pop
push
inc
cli
pop
mov
pop
xor
cli
adc
addb
adc
push
mov
sbb
out
sub
push
jmp
addb
loopne
pop
addb
mov
mov
sub
loope
in
icebp
sahf
pusha
and
sub
call
insl
rclb
sbb
mov
mov
subl
adc
xor
inc
xor
int3
add
add
and
sub
cmpsl
jae
stos
addb
xor
lock
ljmp
sbb
mov
cmp
lods
jecxz
push
iret
adc
popf
inc
add
and
std
sahf
add
mov
dec
hlt
pop
mov
adc
push
mov
unpckhps
mov
push
xor
or
cmp
sbb
das
inc
shlb
adc
jge
cmp
add
or
push
stc
int
mov
rclb
aad
int
lds
add
lret
fdivrs
sub
dec
xchg
pop
fsubrs
pop
add
add
arpl
cmp
lcall
push
arpl
inc
mov
shrl
xchg
xor
xchg
in
shlb
sub
mov
pminub
add
add
mov
movsb
add
adc
add
push
jmp
mov
mov
imul
adc
cwtl
in
push
pop
rorl
xlat
adc
or
and
enter
ret
aad
push
and
push
lock
inc
addb
inc
stos
jge
mov
test
sbb
mov
data16
sub
inc
adc
or
inc
fcompl
loope
fbstp
shr
inc
pop
inc
ljmp
ljmp
jae
stos
outsb
shrl
aas
ja
add
sarb
mov
insb
adc
lock
push
jae
or
add
leave
aam
icebp
lret
push
icebp
cmp
arpl
bound
mov
pushf
es
add
mov
and
roll
cltd
mov
lods
jmp
inc
mov
jmp
ss
xor
jge
test
pop
inc
add
inc
xlat
cli
sbb
xchg
xor
push
and
cmp
add
pop
adc
adc
xor
inc
inc
mov
adc
pop
mov
push
xchg
jp
jb
cmp
fisttpll
xchg
ret
lds
adc
add
mov
insl
test
bound
push
sbbb
add
push
xchg
addl
and
icebp
aam
mov
mov
cmpsb
inc
inc
js
inc
arpl
add
loope
sbb
xor
or
xchg
jmp
call
adc
hlt
xor
inc
add
fwait
lock
sbb
movsb
inc
dec
add
loop
jp
mov
mov
add
push
push
xchg
stos
or
sbb
adc
movsb
mov
call
mov
movb
push
dec
inc
sbb
cmp
adc
icebp
or
inc
cmp
mov
xor
xor
bound
cld
mov
mov
or
dec
insl
or
xchg
mov
dec
push
and
inc
out
mov
dec
sbb
aad
test
mov
xchg
lcall
stos
adc
int
mov
sub
jb
push
pusha
cmpsb
add
ret
in
add
or
xorb
test
sbb
jp
cmp
movsl
mov
push
loopne
push
pop
scas
add
and
mov
push
mov
add
push
decb
add
adc
xor
or
add
imul
pop
iret
or
jae
je
push
sbb
in
and
inc
loope
call
push
test
dec
push
or
or
inc
cmpsl
pop
rcr
popf
fadds
xor
push
dec
sub
idiv
leave
inc
inc
xor
mov
adc
mov
fimull
into
mov
and
mov
lods
adc
sub
repnz
adc
jno
adc
and
out
pop
das
out
push
mov
mov
mov
lock
and
mov
push
inc
repnz
into
fadds
inc
cmp
loope
jl
bound
enter
push
dec
jns
mov
push
lock
xor
jecxz
in
rorb
call
push
icebp
and
loop
popa
add
adc
repz
lret
sbb
push
cmp
sub
jns
rcrl
cmp
out
mov
and
add
push
cmpsb
push
rcrl
inc
es
push
sahf
ljmp
adc
and
push
xor
xor
imul
lods
sbb
adc
xchg
popf
adc
pop
icebp
inc
jb
test
divl
andl
jnp
xor
pop
mov
sbb
sbb
pop
jge
cmp
add
mov
mov
and
sbb
int3
cmpl
xor
pop
decl
leave
xchg
rclb
outsb
mov
adc
pushf
aad
or
lods
or
cli
pop
and
aam
sub
pushl
or
sbb
jnp
xor
mov
jbe
push
xor
ljmp
out
and
nopl
bound
pop
add
push
rcll
test
cli
test
xor
pop
xchg
sbb
aaa
push
repnz
inc
mov
jno
add
cld
mov
js
call
sbb
rclb
test
mov
roll
sub
push
and
xor
test
test
adc
mov
adc
push
int3
loop
and
sub
push
pushf
cmpsb
and
jb
push
push
data16
add
sbb
stos
rolb
test
add
or
test
in
sub
mov
shl
aad
mov
or
daa
adc
pop
push
ja
mov
repz
mov
jo
sar
push
adc
sbb
sbb
faddl
mov
stos
clc
adc
movsb
arpl
notb
add
xchg
loop
mov
ja
xchg
ss
xchg
adc
movsl
push
mov
pop
adc
pusha
icebp
mov
add
fsubrs
sarl
or
push
sti
adc
push
or
xchg
fisttps
mov
loop
shrl
sbb
leave
xchg
add
push
or
or
push
mov
mov
inc
addb
xchg
xorl
jo
sahf
xchg
mov
xchg
sbb
icebp
xchg
push
int
mov
mov
mov
or
dec
push
sbb
push
mov
xchg
sbb
cmp
jl
push
pop
adc
sbb
sub
test
push
inc
push
mov
or
pop
les
sbbl
std
inc
inc
inc
fs
adc
push
pusha
dec
rcr
cmp
adc
push
add
jle
sbb
lret
lret
and
shl
sbb
out
mov
mov
mov
sbb
dec
inc
aas
push
sbb
sar
dec
fldt
push
aam
or
rol
mov
testb
pop
call
ret
cmpl
xorl
jb
mov
push
mov
fcoml
push
add
clc
ja
enter
or
cmp
mov
adc
lret
inc
jecxz
loop
sub
push
je
sbb
add
shrl
test
enter
shrb
pop
jo
insl
mov
roll
stos
or
test
push
or
inc
rol
adc
dec
jne
ss
int
gs
nop
mov
lcall
mov
in
lcall
sbb
mov
ret
cmpl
push
ljmp
mov
adc
gs
es
scas
sbb
pusha
jmp
mov
cmpsl
clc
mov
or
pop
cmpl
ror
mov
dec
add
ds
mov
jmp
and
inc
adc
rclb
mov
jp
inc
lds
mov
iret
add
cmp
pop
imul
mov
add
subl
push
sub
add
cmpsb
lcall
cmp
rolb
or
mov
nop
ret
ret
stos
adc
xchg
cmovne
add
inc
push
addl
or
lahf
out
or
mov
and
gs
inc
cmpsb
ljmp
sbb
ljmp
outsl
adc
adc
jno
or
or
orb
xchg
lea
or
mov
jo
push
scas
or
xor
dec
add
adc
xor
pop
push
jecxz
add
addl
or
xor
inc
insb
addl
shrl
cli
adcl
stos
test
jecxz
jl
add
fwait
adc
and
stos
and
cmpl
int3
mov
push
lds
jnp
in
ja
cmp
dec
pop
jno
mov
clc
or
sbb
mov
add
cmp
jmp
mov
in
mov
shll
scas
or
mov
rorl
hlt
sahf
pop
mov
fidivl
xchg
gs
movsb
mov
or
cmp
shlb
test
push
pop
add
jmp
xor
mov
mov
xor
or
pop
inc
sbb
fsubl
ss
push
cmpsl
add
sub
and
lcall
insb
xlat
pop
push
sub
or
mov
push
rol
jne
xchg
jnp
adc
lret
push
mov
xchg
mov
icebp
arpl
push
lds
and
ja
lret
jb
sbb
dec
push
pushf
sahf
cmc
outsb
enter
fwait
push
inc
inc
pop
and
xor
jecxz
and
add
cmp
adc
arpl
cli
sub
icebp
sub
sbb
or
push
popa
or
add
add
lret
pop
adc
test
inc
push
mov
rorl
aam
enter
ret
pop
cwtl
fcomps
fcoms
jecxz
addr16
and
or
popf
mov
push
mov
xor
lret
adc
and
inc
pop
mov
or
popl
js
push
xor
jo
ljmp
pop
push
cmpsb
sarb
sub
mov
rorl
inc
inc
sub
xchg
arpl
push
push
xor
pop
or
in
test
or
gs
loopne
pop
or
adc
cmp
sub
mov
push
in
push
and
fwait
push
mov
stos
mov
add
mov
cmp
cmpl
push
jns
mov
pop
sbb
mull
mov
push
sbb
les
js
popf
add
enter
pusha
sub
stos
jmp
icebp
xor
scas
ja
push
into
aad
test
push
xchg
lea
pop
cmp
repnz
or
xchg
inc
inc
push
push
dec
outsb
pushf
or
mov
cmp
sbb
xchg
ficompl
and
aam
mov
loopne
inc
jo
add
jbe
and
mov
add
inc
inc
lods
repz
ror
or
dec
nopl
insb
lock
clc
inc
xchg
sub
mov
and
test
push
mov
call
rorb
inc
lock
pushf
lahf
and
cwtl
outsb
jmp
jmp
jge
pop
xchg
aas
mov
test
jne
leave
std
leave
fsubr
pop
fwait
pop
add
xor
mov
outsl
mov
fisttpl
gs
sbb
stos
clc
pcmpgtb
mov
add
scas
cs
movsb
push
push
push
sub
push
cwtl
inc
pushf
testb
je
mov
pop
cld
mov
aam
add
pop
sbb
and
and
push
dec
mov
inc
add
sti
or
push
adc
pop
pop
ret
mov
jne
out
mov
cmpl
push
pushl
mov
mov
inc
das
and
sti
fs
pop
and
hlt
in
inc
call
jo
cmp
lds
add
add
ret
push
xchg
scas
sub
or
std
fnstsw
adc
cmp
jne
outsl
lahf
xor
sbb
sub
mov
ja
negl
mov
enter
les
mov
and
or
jno
pop
jb
mov
pushf
jns
mov
and
pop
cltd
sbb
jns
push
jmp
out
out
pop
je
or
repnz
aas
push
aam
cmpsb
insb
xor
mov
and
enter
xor
mov
adc
push
jo
push
cmp
jge,pn
or
pushl
or
popa
sbb
pop
je
outsb
mov
mov
add
sti
add
fcmovnbe
insl
sbb
sub
adc
daa
loop
dec
push
mov
testb
cld
mov
mov
mov
div
out
push
jne
cmc
mov
pop
pusha
push
fidivrs
lea
movsb
imul
jle
cld
fs
and
sbb
loop
std
inc
sti
mov
mov
jle
cmp
movl
fimuls
cmp
cmp
out
ds
lea
push
cmp
pop
push
xor
rcrl
jo
mov
js
pop
jmp
call
mov
sbb
mov
jmp
xor
leave
mov
loopne
or
aam
cmp
push
xorb
cmp
add
inc
jae
cmp
jne
out
adc
cmp
or
movsl
jmp
call
std
call
cmp
cmp
jne
mov
inc
pop
je
test
std
or
mov
das
insb
stos
mov
jmp
cmpb
fdivrp
mov
or
jbe
inc
or
ja
xor
out
mov
pop
add
jmp
fstpt
sbb
pop
sub
mov
lock
adc
jb
pop
lea
idiv
call
adc
pop
cmp
mov
pushl
or
cmp
cmp
push
cmp
aas
dec
and
cmp
jecxz
lret
push
das
push
cs
pushl
or
pop
in
mov
pop
add
aaa
jne
pop
incl
or
add
sbb
scas
insb
mov
push
mov
popa
mov
add
push
push
ja
dec
clc
mov
mov
dec
mov
mov
push
add
lods
aam
cld
push
push
push
lahf
arpl
ja
insl
fmuls
mov
or
daa
and
push
push
push
mov
xor
pop
movsb
pushf
fidivl
addr16
hlt
mov
sbb
ficoms
ficomps
add
jne
jecxz
or
add
adc
jle
aaa
inc
mov
adc
fwait
div
or
inc
mov
inc
cmp
sub
subb
pop
fdivrp
test
add
xor
mov
mov
inc
inc
or
jmp
or
andb
inc
inc
fistl
sbb
add
jae
outsl
leave
testb
and
lret
pop
or
or
jne
dec
mov
adc
rcl
jmpw
mov
inc
sub
pusha
data16
icebp
pop
enter
adc
add
pop
loope
rcl
test
pop
jne
inc
inc
jmp
pop
outsb
xor
xchg
sub
ret
add
or
idivb
and
test
shlb
mov
xchg
ret
shr
mov
dec
test
push
mov
inc
mov
jne
andb
push
outsl
or
pop
je
test
add
sub
loop
pop
sbb
inc
add
inc
fdivs
xor
push
mov
push
inc
daa
mov
pop
sti
pop
mov
and
sub
inc
dec
loopne
ffree
or
les
ret
repz
lea
ds
jnp
aam
sub
inc
addr16
int3
ret
pop
ljmp
bound
clc
test
or
mov
data16
daa
ret
push
inc
outsl
mov
inc
inc
or
jne
push
repnz
cmp
mov
pop
jmp
mov
mov
xor
mov
je
sbb
push
shll
mov
and
adc
jg
outsb
sbb
add
mov
jmp
leave
pop
mov
movsl
test
je
pusha
mov
je
inc
cmp
add
sub
inc
mov
push
into
stos
sti
jmp
lea
lds
push
cmp
mov
jmp
pop
pop
dec
in
pop
fwait
sub
or
or
sbb
test
xchg
mov
and
pop
mov
add
andl
inc
add
mov
add
mov
lock
jg
ss
in
or
cmp
or
out
movsl
mov
add
push
clc
jl
pop
andl
mov
aas
jbe
idivb
xorl
add
sbb
pusha
adc
xor
pusha
inc
mov
jmp
das
arpl
roll
jmp
adc
lods
call
dec
cld
inc
mov
cmp
fsubrs
lcall
push
and
test
rcrl
fimuls
sbbl
or
add
inc
cmp
jl
loop
mull
cmpl
lea
jne
in
pop
lods
push
ss
das
enter
jmp
mov
dec
neg
sbb
xchg
cmc
or
jp
test
pop
push
jo
and
lods
push
cli
push
orb
or
jne
push
mov
add
addb
jl
dec
cmp
cmp
ret
pop
test
insb
xchg
jbe
adc
mov
je
inc
cmp
jbe
sub
lcall
sbb
negl
fisttpl
adc
pushl
push
sbb
rcrl
add
jne
inc
push
xor
adc
data16
data16
les
or
mov
and
insb
es
xchg
xchg
adc
xchg
mov
outsl
pop
jge
add
push
add
push
mov
push
in
lret
incl
xlat
test
scas
dec
data16
sub
popa
test
pop
insb
xor
nop
ret
int3
add
mov
lret
int3
rcrb
sbb
mov
sub
testl
js
je
ljmp
rorb
adc
pop
movsb
pushf
sti
inc
aam
add
mov
mov
mov
cmp
and
outsb
or
mov
jne
push
fldt
call
ret
popl
dec
orb
add
pop
pop
cli
push
push
or
push
xchg
mov
mov
sbb
fcmovnbe
or
dec
add
dec
ljmp
pop
ret
push
inc
xor
pop
inc
xor
shrb
or
lcall
mov
push
mov
adc
out
cli
and
or
mov
icebp
shll
mov
je
push
push
lea
testl
pop
inc
or
arpl
notb
sbb
mov
sbb
pop
shrl
mov
into
jne
add
push
or
or
sbb
mov
fucomi
sbb
jmp
pop
fidivrl
push
push
xchg
mov
cmp
push
add
push
and
mov
jecxz
jns
push
sbb
mov
add
fcomps
mov
loop
adc
inc
or
aas
test
xor
mov
add
inc
inc
mov
push
ficomps
icebp
shl
cmp
insb
es
fstps
cltd
call
jnp
adc
test
jne
icebp
incb
pop
lcall
into
insl
xor
adc
push
xchg
in
mov
push
pop
adc
mov
mov
cmp
sub
push
mov
clc
or
add
mov
loopne
lcall
jbe
cmp
adc
cmp
ss
pop
rclb
mov
sbb
adc
mov
and
aaa
pop
mov
adc
mov
insb
sbb
push
enter
test
jl
push
dec
nop
cmpb
call
pop
fmull
lods
push
mov
cs
das
cmp
imul
aas
jne
push
push
pop
clc
call
pop
ja
es
mov
add
add
outsb
pop
lods
ficoml
adc
sbb
pusha
or
pusha
call
add
push
mov
cwtl
mov
adc
inc
jne
pushf
jb
psraw
adc
mov
mov
add
inc
sbb
xchg
inc
sbb
mov
xchg
push
lods
or
cwtl
pop
or
xchg
mov
or
mov
pop
mov
je
inc
popf
roll
call
fisubrs
pop
cmp
popa
and
andl
jmp
cmp
rep
stos
mov
xchg
cmpsl
jecxz
jmp
cmpb
mov
sbb
arpl
cmp
jbe
inc
decl
sbb
adc
xchg
pop
test
ljmp
outsl
fdivrl
add
lea
dec
je
mov
into
call
add
cli
xchg
ja
outsl
dec
adc
mov
inc
inc
adc
inc
insb
xor
cmp
sbb
jmp
jb
fs
cmpsl
lods
lods
fisttpll
movsb
adc
das
mov
mov
sti
mov
shll
pushl
aas
jge
shlb
or
xchg
jb
push
fcompl
bound
sub
jmp
mov
pop
add
push
stc
in
or
jo
inc
xchg
outsl
pop
add
jmp
insl
adc
daa
xchg
or
jnp
xor
inc
sub
dec
cmp
cmpsb
fistl
nop
cld
mov
adc
dec
sub
push
cld
rorl
inc
orl
pop
cmp
push
mov
and
or
push
jno
test
mov
arpl
call
xchg
mov
movsl
mov
cli
cwtl
cmc
arpl
sarb
mov
jb
mov
movb
and
aaa
fmuls
inc
pop
mov
out
push
mov
sub
and
mov
shr
das
mov
xchg
and
rep
inc
inc
mov
xor
rcrb
int
ret
cmpsb
push
in
cli
lea
push
imul
insb
mov
mov
std
sbb
mov
xchg
frstor
or
xchg
add
dec
and
je
movb
lea
test
push
add
adc
nop
rclb
fdivrl
jns
je
and
loope
outsl
mov
add
test
jb
pop
mov
jbe
pop
dec
enter
mov
sbb
popa
jb
jp
push
and
and
dec
dec
mov
and
push
inc
in
pop
enter
pop
pusha
sbb
jmp
mov
into
mov
jecxz
push
sbb
push
fmull
pop
push
insl
aad
mov
int3
aaa
jg
push
fistps
push
movsb
and
ljmp
test
add
add
cmp
jne
lods
js
decb
jle
lock
aaa
mov
test
call
test
je
test
pop
lods
push
add
int
pop
pop
fisubrs
pop
jmp
add
jmp
std
jmp
cld
pusha
outsl
ficompl
lods
or
sbb
inc
loop
mov
inc
mov
cld
pusha
out
jmp
mov
fsubl
sub
outsb
imul
test
daa
test
mov
inc
insl
cmp
pop
mov
movb
or
mov
js
aad
dec
not
adc
jl
loopne
and
add
mov
mov
int
adc
or
jae
ficomps
xor
sub
jp
or
pusha
or
mov
pop
test
inc
fcoms
inc
out
jnp
push
into
lock
add
and
fs
js
imul
adc
lds
rol
jmp
cld
jle
mov
aad
pop
dec
adc
shrl
fcomi
in
jbe
clc
jb
mov
jg
outsb
lods
and
and
rep
jmp
add
jb
sbb
inc
inc
loopne
pop
test
pusha
int
jae
push
lea
aaa
loop
mov
and
mov
mov
das
mov
mov
mov
add
mov
pop
mov
sbb
lea
sub
add
add
popf
and
inc
aas
mov
cmpsb
imul
cmpsb
stc
outsl
lcall
in
inc
in
lcall
lock
popa
lcall
ret
or
push
lock
dec
cmp
popf
or
shll
mov
inc
or
lea
jl
cld
fdiv
xchg
inc
jg
or
cmpb
in
adc
fldenv
rorb
sahf
pushf
sbb
sub
sub
je
fwait
jne
add
insl
add
add
jne
outsl
add
dec
push
mov
dec
or
xchg
pop
mov
int3
out
add
mov
fisubs
sub
rol
pop
sbbl
dec
xlat
jg
add
aam
in
xor
dec
in
hlt
and
xchg
sbb
dec
shll
adc
xor
shll
or
or
sbb
add
xor
sub
dec
mov
mov
jae
adc
mov
scas
add
ja
jne
ja
ljmp
and
daa
push
fiaddl
push
jne
push
or
xorl
jge
outsl
or
inc
push
jl
cmp
jmp
add
mov
pop
js
mov
hlt
cmpsl
xchg
and
push
mov
nop
and
adc
ljmp
addb
rolb
addr16
mov
or
and
int
insl
test
jnp
imul
sub
add
loopne
mov
jbe
or
jp
cld
push
shr
aaa
outsb
loop
jl
cld
imul
jge
mov
xchg
xchg
sbb
dec
dec
or
fistpll
add
clc
jne
rcrl
or
iret
jbe
insb
outsl
mov
dec
adc
add
cwtl
call
and
mov
dec
ja
jg
add
xlat
and
decb
sub
cmp
xor
insb
andl
loope
popf
jnp
mov
adc
jns
push
in
int
mov
add
add
or
or
icebp
aas
jnp
pop
aad
fst
das
mov
mov
cmp
adc
pop
cmp
cmpsb
jbe
repz
mov
inc
ds
jbe
cli
mov
pusha
fistl
push
mov
xchg
cmp
ljmp
popa
rcrl
shlb
xchg
into
mov
dec
push
mov
add
aam
pop
or
xchg
loope
dec
adc
cmp
pop
mov
pop
testl
das
push
lret
add
mov
pop
add
jge
paddd
mov
jae
fnstsw
inc
push
mov
jmp
or
jbe
sbb
sbb
sub
jnp
mov
and
add
or
mov
sub
push
cli
sbb
cli
call
mov
fisttps
scas
bound
loope
add
push
sbbb
imulb
call
pop
xor
shll
push
or
cmp
andl
push
paddd
or
dec
fidivs
inc
adc
cmpl
fsubs
cmpsb
insb
sub
jo
pop
adc
adc
hlt
in
or
xchg
lret
enter
decl
push
lea
push
push
push
mov
incl
xor
add
jmp
push
out
inc
mov
sub
xchg
add
data16
push
adc
sub
dec
pop
jbe
ja
mov
xor
push
sub
out
or
orl
jmp
es
and
pop
mov
push
or
jbe
or
mov
cmp
lret
jae
mov
cmp
sub
decb
iret
jne
clc
adc
lcall
ja
jne
mov
cmp
es
mov
out
jne
and
push
jnp
xchg
mov
or
aaa
jmp
es
sbb
out
inc
push
jmp
insl
jge
jnp
test
mov
xor
mov
aaa
loopne
lcall
jmp
test
mov
cli
dec
sub
ret
mov
mov
mov
push
push
push
fisttpll
push
in
or
inc
or
mov
jne
xchg
push
mov
sbb
lcall
or
je
mov
lods
pop
pop
pop
dec
jbe
push
pushl
mov
push
fs
test
jl
shl
inc
jmp
mov
fnsave
push
stc
inc
or
jg
jnp
incb
aam
orl
aam
cmp
fcompl
and
pop
push
and
jl
pushf
shl
gs
ja
in
and
mov
decb
jne
loope
ss
mov
xor
sub
mov
ss
jb
inc
mov
test
or
hlt
mov
clc
add
addr16
test
test
add
ret
xchg
outsb
xchg
push
decb
jge
les
imul
mov
cmp
add
or
das
sub
jge
dec
orb
jnp
mov
lods
sub
cs
mov
cmp
or
mov
jne
jle
mov
xor
lahf
mov
pop
mov
jne
pop
inc
movsb
scas
aad
fwait
dec
cmp
imul
in
inc
add
mov
and
pusha
lcall
xor
push
jb
inc
cmp
push
xchg
push
xchg
pushf
cmp
je
push
xor
mov
mov
loopne
inc
xor
xchg
mov
lods
xor
mov
je
push
adc
pop
and
push
sbb
bound
incl
lods
and
jl
and
mov
outsl
lds
bound
mov
shr
sar
inc
add
enter
fcmovnb
cmc
jno
inc
ret
aaa
imul
mov
inc
or
mov
mov
shl
in
fstp
jns
mov
addb
dec
es
mov
daa
jg
lea
sti
sub
lea
dec
repnz
hlt
lea
cld
lock
sti
in
inc
push
out
jmp
call
inc
push
jp
sub
jbe
push
add
mov
clc
xchg
es
ficompl
lods
lea
or
inc
xor
sahf
jecxz
inc
mov
or
pop
sub
cmpsb
or
mov
sub
push
lods
push
stos
leave
cmpsl
inc
push
ljmp
mov
fdivrs
mov
push
cwtl
out
mov
inc
je
adc
mov
add
dec
mov
mov
push
call
cmp
xchg
adc
add
sub
and
ror
add
roll
add
push
xchg
jp
push
mov
mov
push
jne
imull
push
and
pop
ljmp
jmp
inc
inc
sahf
sub
dec
je
adc
pop
jne
aad
xlat
sub
add
sbb
dec
fsubrs
pop
xchg
ficoms
xchg
popf
je
dec
adc
out
insb
sbb
cmp
sub
xchg
cmp
sbb
push
add
leave
mov
fisubrs
or
lods
lock
jne
cmp
sbb
push
pop
mov
rclb
push
or
std
outsb
add
pop
pop
jne
mov
test
pop
xchg
inc
sbb
mov
jo
inc
push
push
mov
pop
push
xor
stc
insl
sbb
pushl
jmp
ds
pop
and
sbb
sbb
inc
cmpsl
jo
adc
adc
xor
inc
dec
cmp
sub
pop
call
int3
jo
sbb
mov
pop
mov
pop
roll
fistpl
rcrl
mov
and
insb
ljmp
loopne
inc
push
aaa
and
push
mov
test
sbb
sbb
scas
mov
les
pop
push
jmp
lock
es
imul
cmp
je
push
dec
fsubl
mov
hlt
dec
in
sbb
rclb
mov
xor
inc
or
sbb
mov
jbe
add
aad
push
fidivl
inc
cwtl
lods
lea
daa
movsb
mov
call
or
push
xor
mov
pop
loopne
jne
bound
je
push
fs
outsb
out
xchg
addr16
mov
add
jmp
cmp
jo
mov
push
mov
mov
lods
cmp
or
adc
or
mov
xchg
repz
lret
sub
add
pop
add
popa
xor
mov
lods
insb
in
outsl
jns
lea
push
push
pop
push
push
movsl
clc
push
andb
xchg
inc
into
dec
push
mov
xchg
pop
xlat
sub
sub
add
pop
xor
xor
push
insl
dec
and
add
cwtl
sub
and
mov
mov
je
gs
mov
sbb
jl
loope
inc
pop
pop
push
int3
sub
or
testb
leave
loopne
pop
sbb
push
push
ds
clc
xlat
xchg
mov
adc
or
loopne
inc
lret
and
lahf
add
sub
ret
int3
add
sbbl
pop
mov
or
stc
adc
neg
cli
push
sub
addr16
and
add
adc
ficoms
lret
je
rep
cmp
and
pop
cmpsb
dec
mov
data16
mov
ljmp
call
in
add
mov
cmp
add
mov
sbb
leave
imul
sub
mov
push
cmp
cmp
add
add
add
add
mov
imul
mov
sbb
inc
cld
add
leave
sub
imul
xor
and
add
dec
add
imulb
shrb
sub
out
sbb
enter
fildl
cs
movb
adc
xor
mov
pop
ret
repnz
sub
add
inc
or
push
pop
cmp
add
sub
mov
or
insb
add
and
pop
clc
sub
std
pop
fstpt
rolb
mov
sub
add
push
pop
sub
in
in
mov
ss
or
enter
iret
mov
adc
call
sub
test
shll
imul
imul
mov
fistl
mov
adc
fistpl
sti
push
cmp
mov
push
adc
mov
pop
loope
mov
add
lock
fisttpll
fidivl
xor
lea
outsb
pop
sti
aas
pop
out
add
add
mov
rorb
insl
sub
sti
stc
push
dec
or
add
add
fucomi
ret
out
adc
aas
shrl
cli
pop
fs
outsl
fst
faddl
sarb
dec
add
push
test
mov
mov
push
mov
imul
mov
imul
mov
xchg
pop
lea
or
adc
repz
mov
add
insb
fcmovnb
outsb
push
pop
add
sub
push
adc
sbb
cmp
fcmovnu
xlat
imul
in
mov
data16
jecxz
rorb
sub
pop
inc
add
sbb
mov
and
sbb
mov
icebp
pop
or
shl
mov
push
push
inc
or
rolb
mov
rcrb
in
add
pop
mov
sbb
sub
jg
ss
pop
adc
insl
mov
sti
fs
or
adc
out
xchg
mov
fidivrs
or
cld
inc
fnstenv
cmp
add
insl
fwait
outsl
cli
push
shl
push
mov
and
jge
in
lods
rcr
out
xchg
or
jbe
insb
fcoml
add
rcrb
pop
pop
popa
ret
adc
ljmp
shr
leave
mov
adc
es
adc
icebp
sbb
dec
lock
lret
insl
mov
adc
jno
gs
mov
adc
cmpsl
insl
xor
in
sbb
sbb
or
and
ret
sbb
cmp
sbb
or
mov
aaa
out
inc
mov
push
push
sbb
imul
sbb
repnz
stos
sarb
push
jo
cmpb
testb
jmp
int3
ror
bound
lcall
cmpsb
xorb
mov
loopne
cmp
or
cmp
pop
ret
add
sbb
add
push
ja
out
icebp
imul
rclb
and
test
cli
or
insl
xlat
sbb
xor
pusha
inc
insb
call
dec
sbb
sbb
add
sbb
mov
xchg
jo
push
incl
mov
insl
mov
and
cwtl
or
or
add
add
sub
fcmovnu
pop
mov
xor
pop
stc
or
gs
jmp
mov
mov
sbb
lret
inc
jecxz
mov
add
push
aaa
push
fcmovne
push
adc
add
out
or
cld
sub
popf
lods
rorb
mov
or
popa
sbb
imul
ret
xchg
adc
inc
sub
adc
or
ss
xchg
sbb
jno
test
mov
roll
popa
fistl
sbb
jbe
lea
sarb
sbb
xchg
adc
adc
mov
xor
rclb
push
xor
mov
ficomps
cvtdq2ps
fadd
rol
add
jo
xor
rorl
or
shlb
jecxz
mov
mov
and
out
test
pop
ret
int
rcl
add
pusha
jno
shll
sbb
or
inc
leave
ret
test
add
jl
sub
pop
int3
mov
insl
int
aaa
aad
sub
adc
push
arpl
out
and
dec
es
inc
adc
js
jmp
sub
push
pop
lock
jmp
adc
xor
sbb
sbb
loopne
push
shr
inc
fldt
adc
cmp
test
insl
jae
lods
clc
imul
cli
fmull
or
lods
ret
pop
add
adc
adc
testb
js
push
add
and
add
push
sbb
push
cmc
imul
call
sbb
add
rol
add
gs
rcll
leave
cwtl
push
cmpsb
iret
adc
or
inc
sbb
mov
call
sbb
addr16
imul
clc
or
fcomps
push
imul
jo
or
add
icebp
ficoml
pop
std
or
or
add
sarl
mov
sarl
mov
jle
leave
or
adc
popa
cmp
ss
fldt
sbb
cmpsl
pop
sbb
push
mov
in
je
mul
ds
mov
sahf
fcomp
fcoml
or
sub
push
fldl
or
or
lods
adc
clc
jmp
pop
enter
loop
leave
les
addr16
sub
pop
mov
and
outsb
in
mov
pop
mulb
shl
into
in
shll
in
mulb
dec
cli
ja,pn
adc
pop
push
aas
jmp
add
out
testl
stos
je
cmp
inc
rcrl
add
mov
mov
xchg
xlat
sarl
imul
rorl
sub
out
add
sbb
test
inc
stos
shrl
mov
sub
lock
pusha
push
jae
sti
push
add
dec
push
sbb
adc
adc
xlat
leave
out
iret
push
sarb
rcrb
icebp
lock
mov
add
sbb
or
je
imul
addl
add
ret
push
js
adc
sbb
lahf
and
push
jno
popa
mov
js
jb
xchg
out
shlb
pushf
cltd
aaa
jle
dec
ja
lods
rcrl
cmp
push
mov
in
jecxz
or
cmp
mov
imul
push
pop
pushf
arpl
sbb
xor
in
dec
push
scas
adc
stc
mov
pop
into
jg
inc
add
movsb
mov
leave
call
decl
xor
repnz
cmp
rorb
or
or
dec
dec
inc
add
jge
test
mov
out
adc
pop
dec
adc
icebp
out
or
sbb
popa
ret
push
and
lods
mov
loope
sbb
inc
div
inc
hlt
add
cmp
mov
and
mov
cs
xchg
mov
adc
and
jmp
jne
mov
push
movbe
or
mulb
cltd
add
aaa
or
adc
repnz
add
xchg
fsubrl
shlb
xor
les
xor
push
scas
or
sbb
sbb
vmovntps
and
push
mov
push
pop
push
or
out
sub
mov
xorl
mov
xlat
or
pop
dec
out
push
idiv
imull
push
mov
push
ret
or
push
lods
movsl
dec
mov
fstps
fwait
cmpsb
lock
sbb
adc
and
orl
add
scas
pushf
or
inc
adc
mov
cmc
fdivrl
test
lcall
fisubrl
jmp
sub
xchg
xor
cmp
xchg
sbb
lods
or
push
jo
or
pusha
std
mov
mov
shlb
movsb
icebp
cmp
mov
pop
pop
jle
das
insb
jo
push
push
mov
sbb
ret
cmc
lahf
push
es
sbb
ret
rcll
jns
inc
nop
int3
lods
xchg
sbb
movsb
push
fcmovnb
sbb
in
popf
pop
xor
mov
sbb
rorl
mov
cmpsl
in
lea
les
mov
subb
adc
add
sbb
inc
fcomps
mov
mov
scas
pop
or
movsb
fistpl
add
loopne
sub
push
dec
insb
add
insl
ret
adc
lcall
pop
call
dec
cs
call
cwtl
push
lds
pop
imul
mov
pop
pop
jae
jle
jno
loop
out
xchg
sti
lret
add
mov
mov
jo
mov
out
cmp
test
xchg
sbb
sahf
prefetch
clc
and
imulb
test
jne
imul
les
mov
shll
sbb
insb
push
enter
mov
mov
pop
cltd
push
mov
sbb
sbb
aam
insl
rclb
inc
xchg
cmp
popf
sub
addl
mov
roll
or
sbb
or
adc
movsl
test
outsb
int
test
mov
orb
push
xchg
sbb
xor
sarb
loopne
je
out
bound
jno
xchg
push
adc
in
xchg
mov
cmp
mov
or
insl
testl
push
jno
cwtl
adc
addr16
mov
push
mov
push
mov
ret
or
aas
push
push
out
in
jg
mov
mov
add
xlat
fdivrs
into
loop
cmp
cmp
or
mov
inc
ss
push
add
test
fimull
adc
mov
rcrl
and
sarl
jb
mov
stos
sbb
pop
cmp
in
inc
sub
ficompl
loopne
inc
sbb
inc
mov
adc
movsl
clc
mov
lret
jbe
pop
xor
pop
or
int
mov
xchg
out
sbb
loop
pop
add
sbb
into
dec
aas
test
xchg
fisubs
jge
jle
adc
cltd
cs
test
xor
mov
dec
leave
leave
out
dec
insl
dec
push
cmp
icebp
mov
push
stc
shrl
cli
adc
xor
push
scas
inc
inc
and
xor
sub
inc
pop
mov
enter
lods
icebp
push
add
xchg
push
pop
jbe
or
pop
rorb
add
mov
xlat
mov
jecxz
pop
add
or
xchg
leave
je
cmpb
sub
jmp
cmp
push
push
sbb
mov
shlb
stos
stos
push
add
imul
pop
or
mov
xor
leave
lea
cmp
imul
mov
or
or
mov
outsl
incl
sahf
aam
sbb
cmp
adc
or
dec
call
mov
call
sbb
sub
cmc
cld
loop
adc
sbb
add
mov
ret
jge
sbb
jecxz
or
andb
jno
xor
or
cmp
lret
les
scas
push
mov
mov
das
add
sbb
sbb
call
mov
and
testb
ja
shrb
fisubrs
push
xchg
mov
jmp
scas
add
jbe
stc
add
add
adcb
and
js
xchg
outsb
push
lahf
sub
sbb
adc
in
leave
fs
lea
push
jne
ss
sbb
push
xor
bound
and
and
cwtl
fcomps
cmp
inc
popf
or
push
jp
es
cli
ljmp
push
rclb
loope
add
and
stos
movsb
cmp
sbbl
jo
lahf
rclb
rcrb
in
inc
and
lods
adc
xchg
mov
shrl
pop
or
push
add
dec
adc
mov
lods
or
mov
or
testl
xchg
pop
imul
xor
in
jne
xor
push
test
dec
shll
cmp
fimull
loope
rorb
xchg
lods
jg
xchg
inc
add
mov
into
movsl
insb
andb
and
ret
mov
cmp
push
push
push
or
cwtl
imul
jns
xor
rol
push
xchg
pop
pushf
mov
pop
call
shrb
cmp
ljmp
push
jle
sbb
pop
pop
js
imul
shrb
xchg
or
dec
cmp
add
cmp
aaa
idiv
ret
adc
mov
push
mov
jo
jmp
mov
mov
mov
pop
dec
adc
mov
ret
ds
jb
arpl
mov
and
enter
add
lea
rcrl
sbb
leave
or
mov
lret
push
into
push
or
and
fmul
add
into
push
adc
lret
movlhps
sti
imul
dec
cmp
test
pusha
stos
adc
sbb
lret
push
inc
cmpsb
and
cmp
xor
xor
or
adc
xor
mov
mov
xchg
add
pusha
or
xor
sti
dec
ss
ja,pn
add
outsb
push
pshufw
adc
mov
cwtl
push
mov
call
adc
pop
rorb
lock
sbb
xchg
testb
jnp
fs
orl
in
cmp
popa
scas
in
sub
mov
adc
sbb
push
sbbb
sbb
imul
pop
add
popa
ret
adc
movsl
add
sub
lahf
cltd
jo
push
addr16
rolb
jne
jmp
loope
ret
inc
cmp
jne
jne
ficomps
pushf
mov
fistpl
sbb
fisttpll
mov
sub
fistl
pop
jecxz
cmp
icebp
ja
mov
into
push
out
stc
or
shl
add
js
leave
and
pop
jb
rolb
jge
test
pop
jl
sub
or
xchg
rol
inc
call
add
cwtl
pop
pop
mov
inc
inc
dec
push
sar
mov
and
out
adc
inc
xchg
dec
pusha
mov
or
mov
ret
or
out
push
dec
loop
xor
mov
es
addr16
pop
mov
adc
adc
dec
sub
inc
ret
dec
dec
or
aad
pop
rorl
lret
add
xor
mov
notb
sbb
add
cmpsl
pop
shrb
ljmp
clc
decl
insl
mov
inc
into
push
sbb
ret
pop
pop
lret
adc
push
sub
icebp
push
pop
or
or
jle
orb
gs
in
add
jge
push
add
add
or
and
test
inc
mov
fwait
mov
add
gs
cmp
xor
xor
add
into
cltd
jp
cltd
mov
jle
adc
sbb
push
arpl
push
xchg
xchg
and
inc
sar
aam
or
mov
mov
push
xchg
jae
dec
mov
inc
mov
cmpsl
pop
in
mov
pop
xlat
dec
add
pop
and
call
or
rorl
or
sbb
jl,pt
xor
scas
nop
add
xor
mov
sub
mov
pop
sbb
dec
fildl
dec
push
add
sub
or
pop
gs
mov
adc
sbb
or
jnp
mov
push
mov
fwait
dec
mov
std
jo
xor
clc
push
dec
add
loope
push
xor
pop
sbb
xchg
inc
mov
movsb
add
in
test
push
add
pop
cs
fisttpll
or
icebp
out
sbb
jge
rorb
or
adc
dec
daa
aad
insb
lods
lcall
ret
push
push
insb
mov
adc
jno
mov
dec
adc
popa
out
pop
dec
fcompl
je
push
and
shrb
lea
popa
xor
or
andl
pop
mov
int
push
xor
mov
push
sub
xor
or
push
jno
or
out
adc
scas
dec
mov
sbb
cmp
adc
xchg
inc
rorb
or
js
push
cmp
pop
in
and
cli
pop
pop
stos
bound
adcb
jno
jo
mov
fisubrs
sahf
and
dec
mov
mov
test
scas
or
push
pop
test
jo
mov
sub
bsr
push
push
push
lahf
push
rclb
loopne
mov
xchg
or
imul
in
sbb
inc
in
notb
or
ret
out
loop
and
icebp
jbe
leave
mov
imul
cwtl
rol
mov
enter
push
adcb
xchg
pusha
adc
jle
in
push
add
cli
adc
inc
stos
cltd
pop
pop
movsb
inc
fcomps
dec
ret
sarl
push
es
cld
adc
cmpb
dec
adc
rcrl
fcoms
and
lret
sub
fs
cmpsb
inc
xchg
scas
incb
push
jmp
push
cmp
jb
or
aam
inc
loopne
xchg
test
sbb
mov
mov
push
adc
mov
add
pop
push
ret
push
pusha
push
or
sub
pop
testb
fsubp
dec
mov
and
lods
jne
add
adc
push
push
cmp
punpckldq
cmp
xchg
sbb
mov
jmp
and
out
jl
test
shll
incl
pop
je
loopne
mov
push
push
jp
inc
xchg
shlb
mov
add
ljmp
xlat
je
pop
pushf
cwtl
push
xchg
add
out
mov
push
je
and
sbb
add
adc
sbb
movsb
adc
mov
fdivl
adc
dec
sub
inc
pusha
jmp
adc
test
or
nop
sarb
aad
arpl
cmc
sbb
mov
dec
lock
sub
mov
xchg
shrl
or
insl
loope
scas
test
push
roll
push
xor
les
ficoml
inc
or
cmpsl
push
call
adcl
adc
cmp
add
shlb
inc
faddp
dec
mov
adc
adc
pop
push
shl
in
xchg
shl
add
ja
adc
sub
sbb
ret
sti
push
mov
in
ret
orb
lods
adc
rclb
adc
je
cmp
sbb
scas
mov
xor
xor
lods
inc
js
cmp
int
jae
stos
test
mov
dec
cmp
mov
mov
jae
pop
fsubrs
push
pop
roll
out
sbb
scas
js
push
inc
aam
rolb
jecxz
mov
out
and
out
gs
mov
sbb
stc
mov
push
mov
push
lret
inc
mov
jmp
sbb
or
adc
arpl
roll
dec
pushf
mov
mov
adc
scas
inc
sub
clc
test
mov
scas
shl
stos
insl
push
inc
pop
loope
or
or
inc
inc
in
mov
jle
enter
int
inc
cmp
sub
pop
jmp
jae
sub
ret
lret
mov
clc
pop
dec
mov
shlb
inc
into
aas
cli
add
arpl
jb
sbb
xchg
sub
shlb
pop
insb
and
mov
cs
inc
add
xchg
or
rclb
cpuid
idivb
or
push
pop
mov
dec
jne
mov
inc
out
fsubl
push
dec
cmp
dec
cmp
rolb
add
out
add
pop
push
fcmovnbe
add
mov
nop
adc
into
in
pop
cmp
xor
pop
shl
push
xor
sbb
jmp
scas
jb
cmovno
push
cmpsb
mov
orb
ljmp
insl
push
pop
rclb
jp
xor
xor
adc
data16
mov
adc
inc
into
xor
and
sbb
adc
shrl
sub
sbb
or
jle
stc
or
nop
cmp
sbb
cwtl
or
rorb
cmp
sbb
inc
push
test
push
xchg
testl
cltd
in
pop
xchg
or
pop
icebp
les
pop
push
mov
adc
mov
ret
push
push
imul
push
orb
add
mov
pop
jecxz
dec
jne
cltd
cmp
dec
pop
sarl
add
xchg
jmp
push
fdiv
or
inc
call
ds
imul
adc
mov
sbb
mov
jb
and
xor
push
in
xor
mov
adc
jnp
arpl
jne
or
push
aas
enter
push
jnp
pop
jo
mov
add
inc
insb
sbb
pop
in
jle
pop
or
ret
xor
sbb
icebp
sub
repnz
in
stos
shl
pop
xchg
adc
adc
jmp
mov
cmp
push
add
mov
mov
mov
push
inc
xchg
mov
ret
inc
sub
in
fs
add
cli
push
aad
cli
test
xor
sub
stc
or
dec
popa
lahf
and
cmp
mov
mov
jl
adc
inc
or
pop
enter
push
cld
into
shll
ficomps
jmp
add
jb
mov
pop
into
cmp
or
jb
adc
cmp
pop
add
push
pusha
arpl
sub
push
adc
or
jmp
stc
les
aas
sbb
pop
xchg
push
mov
xchg
adc
sbb
rcll
xchg
popa
cwtl
cmp
or
adc
sub
aad
in
mov
lds
mov
sbb
gs
push
or
push
call
pop
aas
cmp
jmp
push
clc
add
mov
cmp
mov
lds
cltd
push
in
jae
fcomi
mov
test
or
rcrl
sub
aam
jmp
sbb
inc
outsb
sbb
cmpsb
scas
imul
addb
dec
cmp
adc
imul
repnz
mov
clc
pop
cmp
in
dec
das
loopne
jo
mov
and
imul
ret
shrl
inc
movsb
pop
std
xchg
adc
push
mov
pushf
fs
into
orb
hlt
jnp
lcall
sub
mov
or
insb
push
inc
or
jae
add
rolb
mov
and
fucomip
push
push
mov
mov
adc
add
or
inc
push
add
pop
adc
cs
adc
and
sbb
lcall
test
in
sub
xor
or
push
jmp
ret
xchg
adc
nop
jmp
lret
pusha
into
dec
rolb
sahf
pop
int3
js
push
pop
out
inc
mov
dec
enter
in
pop
lret
lret
pop
xchg
add
adc
adc
push
mov
inc
loopne
xor
rorb
mov
mov
ss
inc
inc
shll
rclb
stos
insb
int
shlb
shlb
jns
and
loop
loop
add
jo
add
add
rolb
mov
push
jg
pop
scas
mov
xchg
mov
sbb
mov
fstpl
mov
and
movsl
cmp
jle
sub
inc
mov
pusha
mov
jle
xchg
mov
repnz
shl
mov
xor
lcall
mov
or
in
andl
jb
popf
mov
push
adc
dec
jmp
xor
in
dec
mov
insl
xchg
push
dec
mov
sbb
mov
mov
mov
shr
mov
stos
sbbl
or
inc
add
icebp
xchg
fs
call
pop
in
cltd
push
xor
mov
rcll
mov
push
cmpl
stos
icebp
jecxz
dec
ja
pop
cwtl
sbb
mov
xchg
push
mov
aad
mov
rorb
add
sbb
in
jle
jmp
rcrb
outsl
mov
int
and
fcomps
inc
fwait
into
pop
ret
ret
jo
mov
fdivp
cmpsl
push
cmp
stos
or
shll
pusha
jmp
shr
loop
sub
mov
or
push
cwtl
xchg
xchg
xchg
push
rcrb
cmp
add
cmp
out
xor
dec
shll
or
into
mov
lock
push
sub
and
add
jge
pop
push
adc
jecxz
nop
push
or
ja
xor
adc
in
adc
xchg
cwtl
push
orb
iret
dec
cmp
js
xor
mov
lret
repnz
orl
fcoml
mov
and
sub
div
enter
loope
pusha
icebp
inc
or
fcoml
inc
and
pop
popf
sbb
bound
mov
fisubs
cmc
jne
push
sbbb
mov
or
xchg
imul
jnp
add
push
push
rol
rorb
push
cmpsb
or
add
test
add
scas
dec
scas
rorl
adc
and
mov
push
pop
cs
adc
and
push
scas
xchg
pop
jbe
cwtl
and
inc
fldt
adc
and
pop
jmp
push
sub
adc
loope
cmp
cmp
add
or
mov
push
pop
fwait
sbb
adc
imul
fs
imul
mov
or
and
sahf
rcrl
push
cwtl
jbe
lret
sub
lods
lret
shrl
test
push
mov
lcall
jmpw
bound
movaps
adc
and
shlb
xor
adc
or
out
out
push
push
adc
adc
push
adc
jno
add
adc
into
hlt
mov
rcl
jmp
in
sub
rcl
mov
add
push
mov
shr
push
test
jo
mov
cmp
js
sbb
ds
sub
xchg
pop
mov
roll
sub
xor
jmp
push
jbe
pop
xor
out
icebp
add
das
push
bound
mov
jge
sbb
jge
pop
stc
addl
xor
pop
rcrl
sbb
xor
dec
scas
jp
push
fsubrs
or
mov
jae
es
pop
stos
jno
aad
xor
or
and
mulb
pop
or
iret
sbb
call
ret
push
adc
lret
jp
ret
or
xor
ljmp
sbb
cmp
jb
stc
or
out
ds
imul
xor
push
stos
pop
sub
inc
xor
push
mov
adc
push
xor
sbb
adc
adc
mov
mov
mov
jnp
jbe
sub
pop
out
jg
shll
add
stos
push
les
add
push
shl
into
lods
shll
push
or
ret
xchg
and
adc
xchg
pop
inc
mov
adc
dec
push
push
push
fwait
push
dec
jne
addb
jns
jbe
out
mov
popf
js
adc
cmp
fwait
pop
into
or
jo
int3
or
add
adc
add
jp
xor
or
add
sub
xlat
sbb
mov
lock
cmp
add
insb
push
rcrb
add
faddl
inc
xchg
or
inc
adc
lret
push
mov
movsb
sbbl
cltd
adc
shl
cmp
push
daa
sub
cmp
jae
in
sbb
jl
push
imul
js
sbb
inc
mov
push
inc
icebp
push
adc
out
xor
push
cli
dec
cmc
mov
ret
push
js
push
cs
mov
adcl
sub
mov
push
dec
and
adc
cmp
xchg
sub
rcl
push
mov
xor
adc
mov
adc
cli
push
pusha
and
xor
pusha
dec
cmp
adc
add
int
push
push
and
xor
pop
ljmp
enter
mov
jae
push
inc
push
jl
icebp
sbb
dec
xchg
orl
or
fadds
add
rorl
xchg
push
leave
mov
jb
push
push
in
cmp
inc
sub
push
push
daa
in
mov
ljmp
les
out
xchg
mov
push
jge
xchg
mov
mov
pop
sub
pop
insl
movsl
sarb
add
loop
push
arpl
rorl
outsb
jg
or
pop
mov
push
add
popf
push
jle
add
or
mov
mov
je
push
mov
rolb
rcrl
push
out
push
sbb
adc
jb
in
push
add
aas
lret
push
ljmp
mov
sbb
es
rcrl
rcll
add
sbb
add
cmpl
push
sbb
add
loope
push
or
and
cltd
or
cmp
push
mov
jmp
sbb
xchg
push
xor
aas
scas
mov
data16
xlat
push
cmp
mov
movsl
imulb
xchg
ss
jg
push
rcrl
push
ret
fs
test
push
sub
fs
adc
and
push
sub
rolb
shlb
lahf
mul
add
loopne
cmp
or
mov
jo
push
sbb
mov
scas
out
out
movb
pop
sbb
lock
pusha
sub
mov
sbb
stos
adc
push
test
cmpsl
inc
push
inc
sbb
jp
pop
movsl
sbb
and
sbb
dec
aam
or
cmp
pop
pop
cs
cmpl
cmpsl
push
inc
rolb
jne
add
dec
adc
fisttps
sbb
xchg
push
jnp
stos
inc
leave
jmp
cmp
scas
mov
ret
sub
insb
adc
mov
cs
add
or
add
int3
icebp
ret
dec
loope
xchg
scas
ljmp
lods
fiaddl
lret
push
movl
repz
bound
jno
jo
cmp
push
into
sub
and
cld
xor
add
adc
lea
xor
sbb
clc
stos
push
cmp
push
pop
cmp
repz
orl
enter
or
into
mov
mov
and
cmp
lret
mov
rolb
xor
mov
cmp
lcall
and
pop
dec
subl
mov
or
ja
enter
cs
js
loope
cmc
push
push
lock
pop
jp
icebp
sahf
sbb
add
int3
adc
mov
testb
pop
push
inc
mov
push
sbb
adc
push
pusha
inc
jns
ret
lret
push
pop
jb
roll
mov
or
add
sbb
push
add
add
mov
mov
and
test
jmp
sbb
mov
sub
stos
out
pop
fcmovnbe
fwait
jo
cmp
lds
test
cmp
syscall
cmp
mov
cmp
sbb
add
mov
stos
jo
adcl
pop
pop
movsl
sbb
lds
dec
cmp
xlat
mov
mov
or
sbb
orl
bound
enter
into
popa
lret
add
pusha
inc
pop
push
bound
sbb
inc
push
or
push
sbb
add
jo
push
into
lret
push
movsl
js
pop
adc
fsts
mov
add
push
inc
inc
test
loope
dec
mov
popf
add
sbb
adc
mov
fistl
sbb
loopne
and
roll
jb
stos
add
test
call
sbb
daa
add
push
inc
and
adc
lea
inc
mov
pushf
sub
push
cmp
sub
loop
dec
loopne
and
xchg
push
cmpsb
inc
pusha
mov
mov
stos
pop
add
xchg
add
inc
and
dec
pusha
shlb
add
fistpll
mov
sbb
sub
shlb
push
push
inc
pop
pushf
push
sbb
ficoml
mov
andl
sbb
pop
adc
sub
or
jno
mov
mov
pop
dec
scas
hlt
and
sbb
inc
pop
and
fcoms
mov
add
les
push
mov
loop
xchg
dec
push
sysret
int
inc
add
iret
push
xor
add
add
add
in
movb
sub
lock
pop
lods
arpl
xor
inc
lock
scas
imul
jle
popf
dec
pop
xor
testb
hlt
add
cmp
mov
lret
pop
push
sbb
and
popf
je
adc
inc
push
movsl
lret
imul
xchg
ret
inc
cmp
mov
push
inc
rol
js
jp
pop
mov
mov
testb
jmp
daa
faddl
sbb
sbb
cmc
mov
xlat
jecxz
xor
add
xchg
push
xor
mov
loopew
inc
sub
inc
jp
push
lcall
sub
test
pop
js
or
jnp
scas
cmp
aam
push
pop
shll
push
fwait
push
ret
testb
lds
loopne
jle
clc
sbb
inc
movsb
pop
jne
sub
mov
sub
inc
cmpsb
test
add
icebp
mov
sbb
sarl
dec
int
xor
imul
push
push
inc
inc
test
aam
and
loop
sbb
lods
adc
mov
out
push
add
dec
mov
or
into
in
push
lea
cmpsl
leave
loopne
jb
shrl
add
stos
push
iret
push
jb
mov
inc
jb
and
pusha
in
cmc
mov
cmpsb
push
push
jg
insb
push
stos
ss
in
insl
pop
lret
hlt
xor
xor
push
push
cwtl
mov
or
fsubs
adc
lock
out
add
stos
stos
inc
shrl
loopne
lret
sub
sub
ret
push
movsbl
mov
loop
imul
in
mov
daa
push
js
xor
pusha
shlb
loop
test
xor
push
shlb
je
cs
arpl
cmp
inc
pop
in
adc
loop
sub
into
push
lds
xor
push
cmp
cmp
mov
or
inc
in
mov
mov
mov
rcll
mov
jmp
inc
adc
imul
lock
imul
aam
and
adc
lcall
call
jmp
add
ret
fsubr
cltd
inc
sbb
jno
mov
pop
scas
lock
jp
push
pop
mov
xchg
or
call
mov
or
jmp
push
sub
in
adc
out
add
stos
pop
dec
sub
push
mov
sbb
js
add
sbb
dec
lock
loopne
or
addps
push
andl
sub
not
pop
dec
add
push
add
inc
and
xchg
or
sbb
pusha
mov
scas
add
pop
mov
cmp
pop
scas
push
push
imul
sbb
sub
adc
push
jnp
mov
mov
xchg
add
nop
and
xchg
mov
add
dec
push
mov
lret
add
cli
sub
sbb
push
push
andl
cmpsl
pop
jle
adc
inc
sahf
adc
sbb
pop
lods
mov
and
push
int
je
add
aaa
pop
pushf
dec
push
or
loope
dec
rcll
rcl
mov
adc
xchg
pop
cmpsb
aas
pushf
test
inc
test
dec
hlt
pop
mov
cmp
data16
shrb
stos
add
lcall
mov
xor
push
ret
cs
or
aaa
sti
sub
and
jb
adc
xchg
xor
sbb
ljmp
in
mov
sub
movsb
jge
cmp
leave
xchg
int3
rol
push
popa
scas
aam
add
adc
add
ret
aam
mov
and
xchg
int
jae
push
dec
xchg
nop
test
xchg
jmp
sbbl
adc
sbb
imul
sbb
mov
sbb
pop
js
lea
xor
cmp
iret
mov
rolb
add
adc
cli
push
cmp
mov
mov
hlt
mov
stc
rcrb
push
or
out
mov
xor
adc
pop
rcrb
add
mov
js
mov
rclb
negb
test
sbb
bound
push
add
out
mov
mov
inc
xor
lret
pop
inc
aaa
push
add
inc
xor
adc
add
outsb
lcall
jo
sbb
test
enter
inc
push
inc
add
add
and
sbb
xchg
cmp
push
pop
pop
pop
pop
fwait
pop
roll
jmp
push
push
rcll
pusha
out
cmovle
cmpsl
fs
inc
xor
push
dec
lea
int
shlb
dec
pop
inc
push
push
inc
add
into
or
mov
sbbb
scas
ror
inc
push
mov
adc
lock
xchg
adc
mov
call
push
lods
scas
add
ljmp
sub
imul
movb
xor
xor
cli
icebp
or
roll
adcb
shrb
adc
jp
mov
sbb
adcb
push
stos
dec
shrb
jae
dec
mov
pop
inc
in
jmp
push
sbb
or
aam
mov
das
and
add
inc
pop
mov
loop
mov
sbb
jp
or
xchg
cmp
push
ljmp
push
inc
push
adcb
jg
popl
es
xor
lods
xor
add
lock
imul
push
shrl
rolb
xchg
sub
pop
push
nop
fst
push
cmp
or
or
sbb
sub
and
popl
pop
cmc
int3
cmp
and
test
cmp
hlt
inc
jne
pushf
adc
stos
add
or
cmp
or
inc
add
inc
mov
xor
push
or
out
cltd
inc
jmp
sbb
std
rcrb
aam
test
int
add
adc
cmp
rclb
push
ret
rolb
mov
in
lret
xor
xchg
cmp
sub
add
in
or
wbinvd
lock
mov
lcall
icebp
or
xor
sub
call
daa
push
mov
sbb
xor
cmp
jb
aad
adc
ret
sbb
adc
cmp
xor
sub
xor
mov
mov
jns
pop
lret
sbbb
adc
xor
jo
adc
clc
mulb
push
push
and
xor
add
scas
inc
repz
xor
fiaddl
push
push
push
adc
xor
or
add
iret
enter
mov
lcall
mov
lock
pop
and
pop
divb
lds
jg
fstpt
sbb
mulb
sbb
sub
jmp
jge
mov
mov
es
fwait
ret
mov
mov
xchg
rorb
push
and
jb
call
push
out
add
or
add
cmp
jecxz
stos
lret
add
pop
sbb
es
leave
popa
andb
sti
enter
scas
and
sbb
cs
xor
xchg
mov
adc
push
xor
and
xor
jge
add
mov
or
lret
adc
mov
add
mov
inc
jmp
add
jb,pn
push
fistl
cmpsb
mov
clc
cmc
jo
pop
sub
insl
mov
nop
loope
cmp
outsb
xor
dec
mov
push
or
stos
jmp
sub
mov
idivb
inc
out
adc
xor
push
xchg
mov
push
mov
cltd
cmp
push
mov
or
adc
inc
pop
and
add
leave
jno
and
inc
xor
xchg
dec
push
jae
enter
add
push
pop
push
mov
js
xor
in
mov
roll
or
pop
lret
push
orb
leave
jg
int3
xchg
sub
dec
adc
adc
adc
add
mov
adc
pop
bound
push
push
jge
cmpsb
xchg
push
push
add
aaa
cltd
lods
rol
popf
rorb
sub
push
sub
pop
sub
cmpsb
scas
dec
add
ret
or
inc
pop
add
mov
mov
popf
ror
pop
pop
push
mov
cli
adc
xor
add
leave
clc
cmp
ficompl
fsubrs
ud0
mov
imul
jmp
bound
add
dec
adc
test
cmp
add
mov
lret
test
loopne
jo
or
icebp
jno
loopne
hlt
mov
jl
shlb
shrb
cltd
dec
sbb
pop
mov
mov
fisttpl
bound
or
fisubrl
das
or
push
push
sti
rclb
scas
mov
mov
pop
jmp
mov
push
aaa
mov
push
loopne
pop
or
fs
add
cmpsl
sbb
lock
xor
or
testb
scas
cs
lret
jns
shl
shl
in
sbb
shr
jge
xor
jp
je
icebp
xchg
inc
add
push
cmp
or
push
fs
inc
sbb
add
test
scas
pop
and
pop
loopne
add
and
loopne
mov
ds
mov
inc
push
cli
cli
or
adc
in
shl
add
adc
mov
mov
push
sub
call
es
dec
add
sbb
inc
push
or
dec
mov
inc
scas
pop
xchg
mov
ret
jecxz
mov
xchg
mov
sbb
jno
xchg
aaa
loopne
sbb
ljmp
adc
xor
pop
add
push
mov
jo
ja
and
imul
pop
daa
repz
shlb
mov
repz
rclb
cwtl
pop
das
jb
test
enter
add
dec
push
das
mov
push
sbb
std
clc
jmp
scas
pusha
mov
fistpl
add
push
add
enter
cmpsb
movaps
or
lcall
call
xchg
out
aaa
add
stos
jne
cwtl
pop
sbb
sbb
mov
int
cmp
sub
shll
jns
in
push
mov
cmpsl
js
mov
push
or
and
mov
inc
es
jno
mov
shrl
push
push
ret
mov
or
sub
outsb
inc
lret
ficoml
in
push
xchg
subl
jae
in
add
popa
cmp
add
xor
jge,pn
jae
jo
dec
mov
les
in
enter
ret
inc
sarl
or
cmpsb
cs
mov
add
adc
imul
and
inc
xor
int
das
hlt
lret
lea
pop
cmpsb
dec
aas
enter
das
lret
xchg
subl
inc
and
sbb
das
push
add
mov
inc
in
and
mov
rorb
pop
and
mov
inc
movsb
and
push
pop
loope
ja
icebp
sub
ljmp
adc
cs
sbbb
push
adc
add
add
add
andl
jne
push
into
jne
push
mov
adc
mov
sbb
jg
ja
sbb
lcall
lods
les
or
daa
and
push
cmp
jne
cmpsl
mov
loopne
sub
pop
test
inc
lret
js
inc
mov
ds
in
adc
or
enter
push
xchg
mov
adc
aas
cmpsb
stos
adc
loopne
lock
mov
pusha
jle
subb
or
adc
cmp
lret
in
fcomps
int3
sub
mov
int
xor
mov
pop
inc
add
xchg
test
lock
pop
imul
je
scas
test
push
outsb
or
or
mov
mov
jp
cmc
mov
mov
sbb
xchg
pusha
inc
or
sti
add
mov
hlt
inc
popf
pop
loopne
or
sbb
cli
add
push
sbb
gs
pop
xor
adc
push
cmp
pop
int3
lret
or
jnp
jmp
cmpsb
js
or
outsb
pusha
ja
ror
lcall
decb
pop
popa
mov
xchg
cmpsl
push
dec
xor
or
rcl
sbb
add
push
mov
dec
fs
push
call
push
rcrl
ret
pushf
lock
stos
push
dec
sbb
sahf
adc
push
stos
inc
inc
lret
adc
mov
pusha
mov
xor
je
int
and
mov
sub
in
inc
adc
mulb
push
sub
push
adc
and
stos
mov
xor
sub
push
jb
push
orl
inc
pop
pop
push
out
push
cmp
add
sbb
lea
inc
sub
data16
rorb
mov
fmuls
jae
sub
enter
cli
cltd
loope
xlat
inc
das
gs
test
xor
add
test
and
ret
add
xor
jmp
xor
rcrl
or
add
dec
cltd
mov
xchg
pop
loop,pn
adc
push
dec
insb
sbb
or
and
shll
and
inc
push
adc
bound
adc
addb
fsts
dec
aam
leave
pop
sub
test
cmc
lds
iret
shlb
pop
sahf
ror
adc
add
inc
rorb
sarl
xchg
call
mov
adc
inc
lods
xor
push
pop
int3
add
sahf
int3
orb
jno
jne
mov
xchg
inc
lods
jo
mov
and
das
push
or
sub
mov
cmp
cmp
ret
pop
mov
xlat
mov
aas
dec
and
adc
push
mov
in
stos
jbe
sub
or
scas
adc
rep
outsb
inc
cs
cmp
test
lods
adc
icebp
icebp
xchg
shrb
push
popa
push
lret
shrb
clc
repnz
mov
add
mov
sbb
std
clc
push
inc
repnz
inc
test
push
pop
rclb
shl
jns
shlb
xchg
mov
mov
in
pushf
stc
sub
pusha
xor
out
rcl
push
mov
shlb
out
cmpsb
js
lock
xchg
orl
jo
cltd
mov
shl
test
mov
ror
rcll
inc
imul
fistpl
cs
push
aam
rorl
add
push
imul
push
or
int3
es
scas
movsl
push
gs
sbb
sbb
jae
and
jl
jmp
mov
stos
shrl
lret
mov
ja
push
shrb
add
pop
popf
pop
popf
lcall
and
sbb
xor
sub
mov
xchg
or
sub
inc
test
icebp
sbb
push
popf
push
fsubrs
pop
cmp
cltd
repnz
dec
nop
test
or
push
lret
xchg
xchg
push
jne
xchg
or
lods
and
adc
fidivs
jle
cmp
push
xor
insl
push
mov
out
pop
and
imul
mov
dec
fisubrl
in
pushf
inc
jo
mov
lock
jbe
gs
shrb
inc
imul
push
fsub
ret
lods
or
in
mov
sbb
iret
rolb
cltd
pop
xlat
sub
sub
arpl
pop
add
arpl
shrl
mov
stc
push
ret
push
sub
add
insb
or
nop
stos
in
insl
cli
dec
lods
adc
aas
popa
pop
pop
shlb
into
pop
xchg
imul
shrb
mov
adc
or
outsl
mov
jmp
cmp
rorb
das
jb,pn
test
adc
rcll
mov
mov
mov
cmpsb
dec
aad
mov
pop
das
xor
mov
gs
jg
lret
es
push
data16
mov
adc
push
lds
and
inc
ret
sbb
popa
mov
call
andl
dec
sbb
ret
xchg
sbb
fnstcw
or
stos
mov
clc
movsl
xchg
loope
je
push
ds
repz
imul
mov
mov
mov
and
push
dec
or
mov
jle
sbb
mov
call
subl
insb
test
adc
push
jge
add
inc
adc
sti
je
faddl
inc
loope
xor
popa
inc
cli
push
cmp
orb
add
sbb
hlt
icebp
mov
jmp
mov
add
packsswb
out
insl
xchg
lret
adc
mov
rorb
sub
or
add
push
jno
loop
and
sbb
xchg
push
es
test
rol
lock
push
push
stc
pop
decb
fadd
orb
mov
push
insl
add
adc
push
repnz
pop
fidivrl
push
adc
stos
shlb
mov
scas
jge
add
loopne
adc
popf
fmulp
jne
pop
mov
xchg
rcrl
sub
push
ret
paddd
stos
mov
add
out
movb
push
push
xor
xchg
xchg
add
pop
shll
fistl
cmc
push
pusha
xchg
pop
add
and
pop
repz
adc
push
xor
xchg
fmull
ret
xchg
xor
rclb
cmp
dec
lock
pop
lods
jo
inc
and
dec
scas
or
adc
gs
dec
mov
stos
pop
and
push
sbb
shrl
mov
mov
add
test
fs
mov
nop
and
stc
icebp
addl
adc
fmull
incb
test
pop
jo
cmp
pop
push
inc
adc
push
lret
and
insl
xor
loopne
sbb
mov
into
idiv
iret
out
xor
push
data16
push
or
mov
push
in
ret
call
adc
addr16
and
push
ret
inc
adc
or
push
and
dec
call
das
pop
and
pusha
pop
addb
int
push
jmp
cs
and
or
into
jl
push
inc
jb
enter
jbe
lods
adc
or
jo
enter
bound
lock
adc
js
popa
sbb
or
int3
cmp
pushf
jae
and
sbb
add
mov
mov
push
add
pop
sub
lret
cli
or
pop
add
loopne
test
movsb
push
icebp
mov
push
cmp
adc
add
jb
cmp
icebp
imul
call
bound
sbb
adc
in
adc
cmc
les
push
xor
outsl
imul
and
cld
dec
test
add
xor
mov
aad
xorb
adc
enter
mov
sbb
adc
bound
dec
sbb
mov
daa
push
loope
sar
push
xor
mov
adc
dec
pushf
dec
aad
adc
ljmp
mov
xor
int3
xchg
lcall
or
mov
cmp
inc
push
fdivrs
pop
mov
fdivrl
fsts
sbb
notb
or
nop
out
shr
cmpsb
sbb
orb
mov
loope
push
mov
fwait
stc
in
or
add
add
mov
sti
jbe
inc
mov
xor
fs
sub
cmp
sub
mov
or
div
push
leave
and
xor
or
or
ljmp
push
lock
and
mov
mov
xor
fisttpl
not
shlb
pop
scas
sahf
adc
test
add
adc
push
and
or
mov
adc
cli
lods
jb
cmp
sbb
mov
leave
ret
inc
push
clc
stos
push
cmp
sbb
or
repnz
mov
flds
pusha
out
sbb
adc
cli
test
shll
rcll
push
ret
add
ss
xchg
aaa
push
icebp
mov
lock
add
call
push
adc
jmp
push
inc
mov
and
sub
lret
test
inc
pop
mov
sbb
lock
push
cmpsb
test
out
xchg
jbe
xchg
mov
cmp
and
sbb
and
mov
ret
or
push
push
mov
js
ljmp
mov
mov
inc
out
fcmovb
aaa
test
shll
and
sub
mov
pop
adcl
dec
aam
and
rcl
adc
sub
push
mov
bound
loop
adc
mov
and
pop
test
arpl
add
lock
add
pop
jmp
add
mov
or
add
enter
jne
inc
cmp
pop
mov
push
adc
cmp
push
aad
out
sub
pop
lock
push
imul
add
divb
dec
cmc
loopne
jb
int
nop
movsb
inc
and
scas
popf
push
mov
rcrb
jo
rclb
repnz
mov
fwait
xor
out
lock
jg
push
and
xchg
nop
imul
and
add
push
fstps
ljmp
in
cs
fiaddl
clc
push
mov
adc
push
shlb
cmp
sbb
inc
push
mov
pop
mov
dec
repnz
push
mov
scas
je
jo
cmp
test
add
inc
outsb
adc
sub
or
push
sbb
push
xor
loope
xor
cmp
add
fcoml
mov
ret
adc
and
push
sti
jne
add
dec
lret
mov
inc
cmp
sub
or
jae
sbb
adc
sbb
cwtl
or
sbb
mov
sbb
xor
sub
xchg
repnz
jge
jbe
push
dec
imul
pop
push
push
xchg
add
or
adcb
loopne
lods
int3
test
or
jge
mov
xor
fistpl
imul
jb
push
mov
mov
and
push
mov
push
dec
mov
jo
jecxz
push
outsl
dec
add
jo
rcrb
shl
or
and
movsb
mov
ret
push
loop
iret
addb
xor
rclb
and
jl
ljmp
inc
ds
lods
push
cs
out
or
jp
inc
push
pop
push
test
add
inc
loope
dec
or
imul
icebp
xor
adc
nop
cld
psubusw
inc
loope
ret
sbb
sbb
aaa
int3
mov
sti
sub
jge
stos
add
js
leave
pusha
push
rorb
adc
sub
xchg
sbb
pop
jg
pushf
call
xchg
loopne
vminps
dec
test
fisttps
xor
pop
sub
sub
push
or
rorb
loop
lcall
mov
jnp
sbb
or
sbb
cli
sub
sub
pop
push
pop
imul
mov
and
mov
adc
pop
cmpsl
or
testl
or
popa
call
mov
rorl
push
adc
pop
popf
add
push
add
in
jae
or
ror
imul
mov
inc
es
mov
je
pop
xchg
push
loope
dec
xchg
dec
or
pop
rcll
xor
push
decb
xchg
mov
aad
inc
lods
rcrb
cmp
mov
push
scas
push
jecxz
jmp
popa
stos
inc
test
imul
pushf
dec
out
xor
or
adc
or
adc
aaa
lods
inc
shrl
jmp
rorb
pop
lahf
push
sub
push
mov
cmp
sub
mov
cmp
adc
xchg
add
es
jae
push
rclb
mov
call
stc
add
xchg
sub
aaa
leave
adc
add
mov
cltd
lcall
xorl
pop
gs
inc
add
push
sbb
and
fwait
push
mov
lods
push
out
push
test
nop
sub
add
pop
push
cmp
add
inc
push
test
cmc
mov
adc
in
adc
rcrl
es
rcl
push
push
inc
jle
jo
test
imul
sbb
fcoms
std
add
pop
cld
sbb
cmpsl
sub
xchg
sub
xor
in
cmp
mov
cltd
popa
loopne
xchg
lock
test
les
or
lcall
cmp
ret
orb
cmc
add
mov
lock
mov
repz
lcall
cld
lds
xlat
dec
adc
sub
adc
push
adc
and
adc
aam
dec
jge
loopne
mov
sbb
ja
pusha
mov
or
es
lret
push
or
adc
and
cmc
mov
roll
mov
xor
push
add
lock
movsl
outsl
inc
adc
cmp
push
out
into
insb
mov
mov
push
sbb
shrb
sbb
adc
push
ret
pop
add
cld
adc
pop
pushf
or
push
push
loopne
mov
loope
push
cmpsb
push
aam
xchg
inc
lods
or
test
adc
inc
adc
adc
add
mov
icebp
adc
icebp
movsb
sbb
push
popa
jo
nopl
adc
or
lods
add
mov
jo
push
sub
rolb
mov
dec
lock
cmp
pop
xchg
lret
sbb
mov
xor
fimull
enter
mov
test
ljmp
or
imul
test
cmp
xor
or
inc
xchg
rcr
mov
mov
leave
xor
xorb
pop
jae
ret
adc
sub
out
fcom
dec
ss
repz
sti
push
mov
mov
lsl
aad
xor
pusha
mov
dec
loope
cmp
xchg
shr
nop
and
mov
push
inc
jmp
sbb
xor
adc
pop
les
mov
jo
enter
jp
das
js
rolb
adcl
mov
push
pop
cmc
xchg
adc
pop
aas
shlb
pop
add
dec
enter
test
pop
xor
or
dec
fnstcw
mov
sub
jne
mov
mov
lahf
and
adc
fld
lock
and
mov
inc
add
mov
mov
add
dec
aas
mov
adc
adc
cmc
dec
es
add
add
imul
lods
pop
in
cmp
jmp
or
sahf
jp
jl
pushf
push
dec
push
pop
push
test
push
shlb
add
sbb
fldl
xor
push
push
insl
ljmp
test
cmpsb
push
inc
int
inc
sbb
push
aad
add
xchg
adc
sbb
aam
jne
dec
sub
push
scas
add
jmp
push
push
stos
push
addb
adc
jo
xlat
sub
inc
xchg
push
mov
sahf
and
xor
insl
sbb
mov
mov
jp
lahf
add
mov
lds
adc
pusha
xorb
mov
cmp
sbb
push
les
add
adc
or
push
and
shlb
rolb
jne
fistps
and
icebp
jmp
and
mov
or
push
sub
jnp
inc
icebp
mov
orb
aam
add
sub
push
add
pop
sbb
leave
test
ficompl
jne
dec
sub
call
sbb
aad
mov
mov
sti
stos
in
stos
push
adc
icebp
dec
cmpsl
imulb
push
or
xlat
fwait
adc
push
lods
add
sub
xchg
or
push
aam
or
push
mov
jp
mov
bound
mov
stos
mov
add
roll
cmp
push
jne
notb
add
jnp
fsubl
add
movsl
pusha
cmc
mov
sbb
push
push
jne
aaa
div
cmp
push
ficoml
adc
or
inc
jne
mov
scas
sbb
push
mov
sub
mov
adc
xchg
or
test
pop
mov
push
es
mov
adc
xorl
pop
mov
loopne
decb
sbb
ret
addl
or
xlat
orl
rorl
shr
pop
popf
mov
jle
leave
pushf
sbb
or
sub
push
add
inc
orl
xor
push
and
es
mov
inc
adc
pushf
adc
icebp
mov
pop
pop
mov
lods
jno
insb
hlt
sbb
jnp
cmp
push
rcrl
andb
or
int
mov
mov
mov
mov
aas
test
and
dec
adc
mov
adc
inc
std
or
adc
dec
sbb
or
add
enter
out
cli
sbb
lock
shrb
das
jb
ret
or
dec
shr
push
inc
mov
fcomip
inc
mov
inc
adc
cli
ljmp
or
es
dec
pop
sub
pop
insl
icebp
mov
adc
aad
xor
push
or
push
sti
mov
xchg
fists
cmpsb
pop
shr
adc
mov
loope
xlat
push
mov
mov
test
rorl
testl
ljmp
inc
pusha
pop
jmp
or
mov
lcall
leave
pop
shufps
roll
mov
pop
movsb
cli
or
push
push
push
insl
fistpll
add
sbb
push
lret
pop
lea
call
lcall
pushf
stos
ret
mov
dec
mov
sub
and
test
cli
aaa
shlb
mov
add
push
xor
sbb
sub
xchg
mov
adc
ret
je
movsl
data16
fadds
xchg
aas
pop
scas
adc
jle
out
adc
inc
loope
mov
loopne
add
lret
push
mov
lret
call
push
sbb
sub
cmp
xchg
les
jmp
into
dec
cmp
or
roll
and
xchg
pop
pushf
xor
cwtl
push
jno
add
lgs
les
jne
rcr
or
cmp
mov
roll
sub
mov
push
or
add
and
inc
adc
aas
inc
or
jae
loop
mov
cltd
mov
xor
push
mov
mov
aam
nop
call
push
cmp
mov
ret
stos
push
aam
idivb
jle
stos
mov
and
or
adc
lds
sbb
popa
cltd
adc
popf
sub
daa
leave
xchg
in
jmp
pop
lret
push
inc
inc
inc
jno
sbb
pop
mov
cs
inc
jl
out
addb
sbb
add
test
mov
sbb
xchg
dec
cs
lds
imul
or
out
imulb
sub
push
cltd
mov
les
or
lret
lret
add
repz
or
mov
sar
sbb
mov
and
stos
and
jo
scas
addb
and
mov
inc
mov
xchg
jb
rcl
dec
mov
add
pop
fwait
mov
mov
sahf
loop
push
push
dec
push
jb
or
cmp
insl
sub
jmp
push
xorb
jo
ficoml
xchg
cmpl
inc
adc
adc
icebp
push
and
inc
or
roll
mov
xor
add
orb
stos
inc
mov
push
add
ret
push
das
push
scas
lret
roll
add
icebp
int
and
fildll
inc
mov
call
add
mov
inc
imulb
bound
inc
mov
or
mov
xor
dec
aam
xor
fldcw
cmp
sbb
pop
xchg
dec
pushf
inc
mov
dec
mov
popl
call
jb
xor
sti
sub
or
cmp
pop
adc
nop
movl
movsl
push
adc
cmp
es
xchg
jnp
lret
add
sbb
jmp
out
add
enter
les
sub
dec
sub
or
push
stos
icebp
or
adc
mov
stos
push
shrb
faddl
jmp
mov
xor
aad
xor
pop
cmp
mov
mov
sbb
lret
shlb
fsubs
cwtl
sbbb
mov
push
push
xchg
jge
xchg
inc
jne
push
fildl
jo
push
lods
fmuls
arpl
repnz
push
dec
push
sbb
jg
cmp
pushf
stc
pop
andb
jo
addb
test
jo
sbb
or
adc
mov
cmp
pop
cltd
imul
and
ficoml
sbb
add
lcall
and
pop
inc
rcll
out
push
addr16
mov
test
cmp
ss
mov
jb
lock
sbb
dec
mov
xchg
mov
jp
das
add
push
out
leave
insb
lcall
push
int3
xor
sbb
and
push
addb
push
xor
push
scas
repz
rcll
enter
push
loopne
adc
and
adc
das
mov
subl
cmp
scas
pop
aad
adc
and
addr16
into
sbb
push
jne
jo
xor
mov
mov
mov
inc
mov
cmc
mov
mov
dec
add
sub
jb
push
sbb
mov
sub
push
nop
and
push
test
rclb
sub
mov
mov
ljmp
or
loopne
adc
fs
ror
testb
xor
in
add
cwtl
lea
mov
cmp
rclb
leave
add
dec
push
and
inc
icebp
add
mov
test
inc
jne
jg
mov
pop
inc
push
pop
inc
mov
shlb
or
rcrl
dec
pop
jmp
ret
rcll
pop
mov
xlat
ret
inc
add
lret
push
pop
mov
call
test
jmp
xchg
xchg
cld
dec
jnp
inc
mov
pop
push
push
ficomps
sub
popl
cmp
adc
cmp
std
aam
jno
jb
cmpsb
data16
lods
sub
hlt
rolb
xor
test
inc
adc
mov
adc
and
jp
lea
es
push
cmp
xchg
addb
push
cmp
or
mov
inc
pop
pop
adc
adc
inc
inc
rclb
inc
or
push
lods
adc
jp
mov
fadds
pop
pop
mov
gs
rorb
mov
adc
add
dec
leave
ljmp
cmc
enter
cmp
movsl
mov
push
in
fwait
pop
push
mov
xor
ds
xchg
enter
dec
fs
sbb
dec
inc
pop
in
clc
adc
adc
or
sbb
push
sti
dec
push
cmp
stos
es
cwtl
sahf
adcb
inc
rclb
test
cmpsb
leave
outsb
ja
sbb
loopne
cmp
sbb
cmp
xchg
xlat
std
pop
es
rcrb
loop
outsb
ret
cld
add
add
aad
xchg
mov
jo
ret
rclb
stc
jnp
push
mov
lods
shrl
add
push
aad
push
add
dec
js
add
cmp
add
add
out
push
cmp
push
addr16
incb
mov
inc
push
or
add
xor
mov
add
jnp
aad
aad
cmp
add
lods
lahf
cmp
negb
sbb
push
pushf
les
inc
mov
sbb
pop
xor
add
ret
add
ljmp
enter
mov
and
sub
push
mov
xor
ja
mov
popa
sarb
adc
loop
clc
cmpsb
bound
jb
int3
jae
pop
rolb
or
adc
xor
jle
adc
into
cli
sub
loop
subb
leave
and
cmp
pop
sti
dec
jae
jbe
sbb
clc
lahf
inc
push
stos
xchg
sub
dec
push
jmp
adc
loop
shlb
push
dec
in
dec
add
xor
aam
add
outsb
or
cmp
pop
mov
fcmovnu
lods
cltd
call
and
movsb
into
repnz
or
out
mov
das
rcrl
in
and
les
jnp
dec
js
sbb
fadds
push
aam
inc
add
movsl
push
pop
vsqrtss
cmpsl
sbb
rcll
les
stos
lods
inc
test
add
js
add
jmp
daa
mov
jge
add
mov
pop
mov
addb
sbb
fnstenv
mov
add
or
inc
xchg
test
sbb
lock
add
ret
cmp
out
inc
pusha
stos
pop
stc
mov
addr16
jg
push
roll
adc
xchg
inc
shrl
pop
lock
shll
jmp
js
sahf
dec
jmp
lods
enter
mov
je
es
xor
enter
mov
jbe
addb
daa
mov
and
ds
inc
test
inc
inc
mov
sbb
mov
jae
inc
pop
sbb
push
rclb
repnz
jle
sbb
pop
rcrl
push
push
mov
orb
xor
adc
rol
enter
push
test
fmull
in
rolb
cmp
shlb
push
pop
or
sarb
xor
sbbb
test
pushl
jo
or
out
jns
or
sbb
add
test
mov
pop
in
add
add
lret
and
mov
pop
push
adc
push
out
inc
adc
ret
daa
xlat
loop
xor
inc
stc
push
push
andb
scas
xor
es
das
leave
test
push
dec
adc
jae
push
sub
and
push
xchg
sbb
shr
rol
pop
push
and
xchg
add
adc
inc
pop
stos
cmp
jbe
adc
inc
push
mov
jp
mov
movsl
pop
repnz
xchg
and
jnp
push
insb
xchg
movsb
scas
js
call
pop
jg
es
inc
xchg
adc
cld
and
ds
movb
popa
or
ret
and
push
js
mov
xor
add
cld
add
mov
xchg
xchg
loopne
or
into
leave
mov
nop
or
jmp
push
push
fwait
stos
stc
push
and
out
push
add
data16
rolb
add
jo
inc
ficoms
aad
sub
pop
push
lods
shr
xchg
adc
sub
js
or
lods
out
das
cwtl
sahf
xor
repnz
jo
sub
mov
pop
loop
mov
sub
and
sbb
and
adc
lahf
ret
sbb
stc
aam
sbb
daa
push
ret
js
enter
or
or
ljmp
adc
cmp
mov
or
push
mov
cmpps
xor
mov
add
js
and
fst
lods
dec
xor
and
rcrb
call
mov
arpl
out
push
push
or
add
ret
xor
sbb
xchg
jl
jbe
adc
push
sub
and
inc
jne
push
mov
lds
jge
mov
hlt
mov
bound
pushf
mov
push
movsl
fsubl
push
push
loop
popf
dec
lea
bound
nop
or
mov
pop
les
and
xor
cmp
popf
enter
test
pop
sbb
or
jb
dec
rcrb
mov
jb
pop
scas
cwtl
inc
lods
and
data16
and
xchg
add
or
push
mov
imul
push
and
bound
rclb
leave
in
inc
or
sahf
xor
sti
mov
ds
inc
test
pop
sbb
xchg
lods
sbb
push
xor
sub
add
sbb
stos
mov
push
ret
add
pop
or
sbb
inc
adc
aad
stos
adc
dec
popa
test
add
scas
hlt
rorb
pop
adc
push
pop
daa
or
xor
mov
movsb
lock
es
xor
adc
push
cltd
sub
dec
or
stc
push
hlt
cmp
mov
dec
mov
xchg
cmp
cmp
icebp
sub
push
xor
pop
sub
mov
sbb
jne
ret
aad
add
push
ljmp
cmp
call
add
jle
ret
sarb
inc
jl
sbb
pop
call
out
cmp
mov
cmovs
aad
sbb
push
xor
xor
sysenter
inc
sbb
ret
movsb
push
jg
mov
xor
xor
cmp
push
pushf
sub
loop
lcall
adc
add
mov
faddl
pop
xor
dec
rcrl
mov
or
lods
scas
cmp
pop
pop
and
mov
sbb
movsl
add
dec
inc
inc
addr16
fs
push
or
int
mov
mov
into
push
xor
mov
lret
pop
mov
imul
jmp
sbb
cmp
loopne
sub
rclb
pop
mov
jno
adc
ret
adc
or
and
push
fld
or
test
adc
adcb
rorb
push
push
mov
lea
pushf
inc
jl
cmp
sub
jb
and
sub
repnz
andl
add
aam
lcall
push
xor
cmp
into
xchg
adc
sub
mov
outsb
movsb
adcb
inc
xor
push
decb
jge
fcmovnb
fnsave
aaa
push
mov
and
push
cmp
push
pop
stc
loopne
rcrl
dec
xchg
xor
arpl
pop
lods
lock
rclb
lock
inc
andl
imulb
pusha
dec
pop
fs
sbb
dec
icebp
dec
jl
orl
rcl
inc
push
jl
add
or
xlat
or
push
pushf
cmc
shrl
popa
jo
add
aam
push
sub
movb
scas
adc
adcb
xchg
mov
or
xchg
jne
cmpsb
cwtl
sbb
lret
push
mov
adc
test
sub
sbb
mov
loope
or
mov
dec
cmpb
xchg
push
or
out
bound
mov
mov
rcrl
pop
sbb
dec
sbb
jge
hlt
add
sbb
lret
outsb
out
add
cmp
push
incl
cs
pop
or
inc
negb
mov
iret
or
inc
scas
into
sub
inc
stos
push
adcl
xor
rcrb
xor
mov
sbb
rcr
or
lret
pop
fistl
or
cs
push
je
imul
or
jmp
xlat
pop
mov
lods
or
sbb
push
add
or
or
out
out
test
inc
pop
std
jo
pop
orl
xchg
fsubrl
test
add
mov
push
lods
pop
sti
icebp
sub
mov
cld
inc
lods
lret
pop
cmovl
mov
outsb
rcrl
or
enter
aas
aad
add
push
ret
and
cmp
pop
xchg
jmp
or
xchg
add
dec
jge
scas
divb
push
xchg
orb
std
xor
mov
sbb
loopne
sbb
add
xor
sbb
xor
or
popa
subb
loop
add
sub
pop
loopne
adc
lock
inc
stos
loope
int3
cltd
adc
or
stos
sbb
adc
dec
inc
mov
lds
push
imul
mov
cmpsb
stc
lret
inc
and
push
push
mov
stos
in
or
cltd
insl
fcompl
lods
xor
pop
xor
push
andb
ficoml
pminsw
lahf
sub
push
movsb
lret
sbb
jo
push
jp
push
dec
sub
push
push
mov
jecxz
and
test
sub
fiadds
cmp
roll
rclb
enter
in
movsb
pop
je
mov
and
out
ret
rorl
cmp
xchg
push
rorb
add
fwait
rcll
adc
fmuls
inc
or
aam
fbld
add
int
inc
xchg
cwtl
adc
cs
andl
inc
loopne
inc
insb
add
sub
movsl
iret
stos
or
or
enter
sbb
cmp
mov
mov
pop
lods
add
dec
fwait
loopne
inc
addr16
icebp
push
mov
shrl
add
and
pusha
push
sti
arpl
add
sbb
insb
sbb
rclb
and
or
or
mov
sub
mov
add
test
outsb
jne
and
je
add
stos
xchg
mov
dec
scas
sub
sbb
test
add
sahf
mov
cmp
jne
pop
push
int
icebp
sub
mov
call
inc
int3
icebp
dec
adc
dec
sbb
xchg
push
daa
pop
jnp
daa
mov
sbb
mov
fnstsw
push
dec
pop
ljmp
or
sbb
aad
push
pop
andb
in
xor
add
add
imul
add
cwtl
mov
xchg
mov
data16
add
jb
xchg
sub
stos
and
jl
mov
push
push
sbb
xchg
mov
push
and
or
pop
loop
push
dec
sub
inc
inc
out
sahf
rolb
sbb
popa
sub
rorl
sar
fildll
adc
sub
mov
incb
inc
pop
les
add
rorl
fmull
and
cmp
dec
inc
push
aad
xor
push
xchg
and
or
mov
jns
inc
leave
pop
and
stos
sahf
and
inc
popa
inc
test
pop
xor
outsb
into
or
sub
push
ret
pop
cwtl
sbb
ljmp
rcl
and
and
cwtl
mov
mov
fwait
fs
cmp
sbb
mov
and
add
ljmp
and
mov
and
jmp
cltd
pop
loope
ds
adc
push
bound
cmp
jl
push
inc
sub
add
pop
rorl
mov
sti
cmp
cmp
ret
fs
add
loop
dec
and
add
cmpsb
shlb
push
test
mov
mov
jo
xchg
or
xor
adc
push
inc
cmp
inc
xor
and
push
stc
jmp
xchg
imul
jl
loop
rcrl
pop
lods
cli
mov
subl
lret
fcomps
shlb
dec
xchg
sub
inc
mov
insl
push
jmp
inc
fcmovnb
lea
mov
test
xor
lock
rorl
gs
testb
cli
pop
sub
aam
imull
or
mov
mov
adc
ret
pop
roll
hlt
adc
mov
dec
cmp
adc
cmp
sbb
or
and
pop
inc
push
sub
pop
rclb
int
imul
test
and
xchg
and
sub
rorb
pop
inc
xor
push
inc
insl
into
rclb
add
cmp
aad
add
and
lahf
jae
das
mov
les
bound
aam
adc
fdivr
imul
add
dec
inc
xor
adc
or
ror
inc
xor
lock
imul
cmp
jo
add
lds
xor
testb
jae
lret
test
cmc
in
out
mov
clc
out
inc
inc
rcll
dec
xor
rcl
mov
inc
mov
pop
adcb
in
mov
js
and
leave
scas
push
ficompl
mov
or
xor
or
les
sub
mov
push
pop
add
cmp
jb
xor
cmp
loopne
lods
ljmp
repnz
enter
out
jge
sub
out
movsl
push
stos
jnp
push
add
cmp
lret
ret
mov
ret
xor
dec
mov
mov
and
insb
das
bound
jl
push
cmpsl
repnz
xor
cmpsb
cmp
adc
push
xchg
push
mov
pop
xor
push
mov
mov
push
mov
bound
das
cmc
sahf
add
je
push
adc
add
or
push
stos
or
fsubrs
add
enter
xor
push
add
adc
popf
jmp
push
jne
fcomps
xor
test
adc
xchg
mov
sbb
adc
mov
sbb
sbb
xchg
stos
dec
adc
roll
pop
add
adcl
je
icebp
sarl
or
cmp
lds
adc
es
adc
xor
inc
pop
rcrl
sub
push
cmpb
adc
push
ja
mov
popa
inc
inc
mov
push
mov
or
testb
dec
cmp
notl
test
inc
bound
decb
mov
cmp
push
push
mov
nop
stos
or
push
hlt
add
sub
mov
inc
lds
or
dec
icebp
add
sbb
xchg
cmpsl
call
es
mov
addl
push
jmp
adc
and
push
loopne
sub
sbb
rolb
sub
loope
loopne
xor
jb
cmp
setne
loope
test
sbbb
jecxz
pusha
xor
xor
lods
adc
leave
into
xchg
lds
jb
ljmp
inc
aad
lret
jne
jo
inc
jae
in
pop
adc
pop
push
shl
push
add
aad
leave
adc
and
out
pop
int
ret
adc
nop
rolb
pop
adc
fcomps
add
faddl
add
shrl
rcrb
mov
push
and
push
sbb
mov
adc
ret
add
sar
cmc
jno
js
pop
inc
dec
adc
push
inc
jb
dec
sbb
pop
loopne
outsl
es
cwtl
mov
stos
or
dec
mov
lods
rolb
add
sub
xor
sub
stos
adc
pcmpgtw
jo
aam
adc
rorl
adc
lock
sbb
lock
ds
sub
mov
push
in
pusha
jge
out
push
mov
jg
loop
jo
and
leave
adc
in
loope
sub
lods
push
xchg
or
cwtl
adc
add
mov
mov
rcrl
xor
push
rcll
adc
add
sub
loopne
loopne
push
lock
cmp
sbb
lds
sbb
and
sbb
orb
add
xchg
js
dec
mov
cmpsl
sahf
les
push
popf
pusha
hlt
add
pushf
icebp
stos
or
negb
xor
push
push
cmp
shr
or
add
and
jbe
or
pop
sarb
or
mov
mov
dec
or
mov
ret
jo
inc
pop
aam
ror
out
mov
or
insb
mov
pop
adc
addb
xor
lcall
inc
rol
add
add
jb
adc
adc
cmc
sbb
inc
push
pop
jbe
jae
mov
add
das
loopne
push
out
adc
sarl
ja
xor
push
adc
rolb
inc
mov
xchg
lcall
adc
xor
ror
mul
or
cmp
inc
icebp
inc
xchg
mov
cmp
sbb
lods
fsubrl
xor
and
lret
rcll
sbb
movsl
pop
cmp
movsb
sbb
aaa
add
les
mov
pop
push
jae
or
sbb
add
jbe
shrl
jo
xchg
xor
push
add
mov
or
or
push
mov
add
push
pop
push
test
inc
sub
xchg
mov
ljmp
push
inc
aam
mov
pop
push
add
dec
arpl
adc
push
cmp
xchg
sbb
and
ds
adc
push
mov
inc
cmpsb
jb
repnz
or
adc
mov
popa
push
push
mov
push
push
add
push
xlat
push
into
out
sbb
inc
addr16
sbb
pop
cmp
jmp
dec
push
sub
clc
rorl
dec
sub
stos
adc
and
or
cmp
adc
stc
xlat
in
inc
lods
arpl
movzbl
xor
sbb
add
shlb
and
sbb
daa
or
aad
and
mov
jne
in
lahf
outsl
ret
or
dec
test
cmp
jmp
jne
push
and
push
lods
ret
pop
pop
arpl
xchg
sbb
cwtl
dec
adc
in
rclb
rol
sub
shl
sub
mov
mov
xor
inc
adc
aam
inc
add
adc
and
xor
scas
mov
mov
add
sub
cmp
pop
dec
or
sbb
dec
dec
addr16
sbb
mov
inc
push
xor
mov
clc
lret
shlb
cmp
xchg
ret
lret
mov
push
push
xchg
xor
je
int3
add
jbe
fsubl
sub
fwait
clc
sbb
aam
lret
and
cs
inc
movsb
insl
notb
mov
in
shll
mov
or
test
mov
es
into
out
loopne
sbb
cltd
sbb
lock
and
or
add
cmpsl
lods
adc
add
adc
push
pop
add
sub
dec
adc
cmpl
call
add
mov
inc
xchg
dec
inc
inc
lods
xorb
or
inc
in
push
sbbl
cwtl
fsubl
pop
test
mov
xchg
push
shl
xchg
mov
ret
test
js
adc
mov
cltd
and
pushf
lcall
mov
andb
sbb
xchg
loope
test
or
out
cmp
push
adc
xchg
jo
add
mov
stos
icebp
or
push
sub
mov
or
pop
les
adcb
idivb
adc
inc
jecxz
jno
add
cmp
repnz
movsl
pusha
jmp
sub
mov
fs
xchg
adc
ljmp
lods
add
pop
gs
push
jae
cmp
or
pop
mov
xor
loope
sub
mov
pop
stc
nop
jae
add
push
cmp
lret
sub
shlb
pop
pop
stos
push
add
or
dec
adc
xchg
mov
cmpsb
test
aam
test
mov
adc
test
bound
dec
call
jns
sbb
dec
sbb
pop
mov
inc
mov
push
cld
sbb
push
sti
mov
hlt
or
adc
addb
mov
shl
scas
into
adc
rolb
xor
das
mov
in
ret
and
xchg
testl
scas
enter
ficompl
inc
test
mov
enter
dec
ret
mov
rorl
sub
inc
push
dec
gs
test
rcll
in
roll
push
imul
or
jb
lcall
out
fsubrl
call
push
orl
das
rorb
mov
out
scas
mov
movsb
push
jge
add
cmp
push
call
mov
sbbb
or
push
shll
push
add
or
outsl
test
sub
cld
call
jl
sbb
or
test
es
out
adc
fwait
repz
mov
test
add
gs
test
insb
cmp
add
or
sbb
xor
add
pop
hlt
sub
or
push
mov
mov
les
repnz
pop
call
stos
je
add
pop
frstor
rcl
lret
or
lret
sbbb
int
dec
xor
into
dec
add
lea
pop
inc
shrb
mov
sbb
add
leave
inc
or
lahf
test
and
inc
ret
test
aas
rolb
pop
lea
lret
add
sbb
les
push
sub
cli
push
test
cmp
xchg
int3
call
icebp
push
and
mov
sbb
mov
inc
cmove
loopne
adc
pop
les
jp
lock
scas
and
add
mov
push
mov
fidivrs
loop
xor
repnz
jmp
and
inc
lock
repz
fnsave
or
ja,pn
mov
adc
hlt
filds
rcrb
cli
add
int
or
pop
andb
les
adc
mov
inc
mov
test
dec
and
movsb
fisubrs
and
pop
mov
adc
rolb
repnz
xor
jno
pop
ljmp
push
or
scas
std
ljmp
in
push
push
mov
inc
inc
xchg
cmp
je
add
xor
test
lock
xlat
inc
fs
or
dec
adc
shlb
ret
xchg
insb
xor
cmpsb
pop
repnz
mov
popa
insb
iret
lock
in
and
aad
xchg
sbb
or
cwtl
and
or
je
sbb
jp
jb
sbb
mov
add
cmp
loope
testb
xchg
mov
daa
orb
cs
cwtl
and
clc
gs
vandnps
loop
adc
mov
stos
movsl
out
out
sub
jno
push
or
jo
cmp
pop
rclb
sub
add
add
push
les
sti
or
mov
lock
mov
sbb
icebp
xor
cmp
cs
iret
adc
sbb
mov
inc
data16
add
cmpsb
jns
adc
lret
js
rorb
loopne
push
push
mov
repnz
push
push
pop
and
test
sub
daa
mov
insl
push
rolb
dec
scas
dec
ret
push
lret
shlb
das
add
push
test
sbbb
mov
push
cmp
adc
loope
adc
mov
mov
jl
sub
cmpsb
test
or
lcall
mov
inc
add
imul
or
mov
cmp
push
add
adc
test
sbb
adc
lret
ss
lret
mov
and
aas
mull
clc
mov
or
sarl
push
roll
dec
ret
or
test
and
pop
inc
out
aad
shrb
pop
and
and
push
punpckhdq
sub
or
mov
or
pop
pop
or
jle
xor
add
daa
cmp
push
mov
cmp
aad
cmp
sbb
or
push
sbb
rol
dec
pop
into
adc
sbb
sub
andb
pop
div
mov
adc
cld
jge
in
aaa
in
push
je
clc
mov
aad
push
and
cs
or
bound
movsl
enter
or
sub
int3
add
mov
popa
cmp
adc
push
cmp
inc
push
adc
call
xchg
jb
rclb
rcl
pop
loope
sub
inc
push
and
cmp
inc
mov
add
push
or
xchg
jb
mov
mov
sbb
in
pop
hlt
or
push
mov
adc
push
sbb
fimull
sbb
mov
mov
hlt
or
mov
mov
xchg
adc
fwait
add
movsl
and
outsl
xchg
mov
cmpb
mov
lahf
outsl
incl
and
in
cmpsl
aas
adc
stc
repz
push
inc
sbb
pop
out
push
push
repnz
loopne
mov
inc
ss
sub
aas
ds
repz
fsubs
xor
adc
nop
ja
jg
cld
cmp
testb
leave
pop
mov
out
lahf
out
inc
xchg
std
xor
add
dec
pop
add
cld
stc
insl
cmp
aam
gs
xchg
xchg
aas
lret
rolb
arpl
pusha
stos
jp
jg
cld
stc
push
add
insl
enter
pop
lret
and
fwait
inc
cmpsl
mov
in
cld
cld
stc
repz
stc
leave
mov
and
loope
xchg
aas
jg
ljmp
test
cmc
cld
stc
repz
xchg
nop
les
imul
lahf
aas
jg
jo
cmc
mov
sbb
adc
repz
sbb
push
out
lahf
test
pop
sbb
test
stc
sbb
into
adc
cs
and
xchg
push
jmp
pop
mov
jp
js
fldcw
cld
stc
repz
es
or
sarb
pop
in
jae
aam
add
das
cld
stc
repz
push
sub
add
mov
mull
call
cld
test
push
mov
push
push
stc
repz
jae
les
push
into
xchg
cmpsb
call
aas
jg
cld
add
clc
enter
mov
out
lahf
dec
push
jnp
es
cltd
pop
push
xor
jg
cld
stc
js
testb
dec
jns
test
dec
sbb
iret
lahf
aas
cmp
and
sarl
cld
stc
repz
sub
in
aas
cmpsb
fisubs
in
aaa
cli
jmp
repnz
out
push
adcb
cld
mov
icebp
lcall
jb
out
lahf
mov
sub
out
rcrb
imul
in
pop
mov
push
ror
jg
xchg
push
test
wbinvd
mov
repz
xor
mov
insb
pop
inc
enter
mov
and
push
sub
sbb
push
lds
jbe
push
or
or
inc
cld
stc
repz
shll
outsb
sbb
lahf
aas
jg
xor
scas
xor
lock
repz
sti
aas
xor
test
add
insb
mov
jmp
cmp
loopew
pop
lret
mov
movsl
repz
lahf
into
je
xor
mov
aas
ljmp
dec
mov
and
cld
gs
aam
adc
ljmp
pop
or
cld
stc
repz
lcall
push
incl
pop
jl
xor
iret
lahf
aas
jg
sbbl
mov
cmp
repz
xor
andb
jne
sub
pop
jno
cld
gs
sbb
popf
dec
inc
adc
lahf
aas
jg
fiadds
fistpl
xor
pusha
cld
stc
repz
outsb
mov
pop
lahf
insb
test
cmp
lahf
aas
jg
icebp
add
rcrl
ds
xchg
xchg
rcr
es
out
mov
cld
stc
fwait
and
pop
cmp
dec
clc
and
clc
int3
push
out
lahf
aas
fwait
jno
cmp
aas
mulb
jecxz
cld
cld
stc
repz
and
popa
sbb
imulb
iret
lahf
insb
in
pop
adc
mov
and
cld
stc
repz
fadds
pusha
lcall
adc
lahf
aas
jg
data16
cmovge
cmp
cld
stc
repz
mov
mov
adc
inc
jle
dec
xor
lret
aaa
mov
rcll
jbe
push
frndint
cmp
test
scas
repz
lahf
mov
adc
mov
iret
aam
adc
jg
cld
stc
pop
jo
pop
or
sarl
out
lahf
aas
push
scas
mov
fldcw
mov
repz
imul
add
in
iret
lahf
aas
jg
cmp
rorb
xchg
mov
cld
stc
repz
nop
and
aam
push
clc
mov
mov
mov
outsb
push
jge
push
stc
outsb
add
repz
cmp
inc
stc
mov
cwtl
mov
icebp
aas
jg
cld
ficompl
cmc
xchg
jb
push
adc
cmpsl
repz
lahf
adc
orl
daa
mov
jg
cld
stc
das
jp
test
mov
icebp
nop
xor
cld
sbb
sub
aas
mov
call
pop
mov
cld
stc
repz
sbb
ljmp
and
lahf
aas
jg
jb
and
stc
cs
in
mov
fadds
and
add
je
mov
fs
aas
jg
jbe
int3
shll
movsl
add
push
dec
adc
xchg
repz
pop
std
adc
jge
mov
test
lea
jg
cld
adc
push
mov
vmaxpd
jae
repz
lahf
jge
jp
and
pusha
sbb
scas
bnd
aas
aas
pop
stc
stc
sti
repz
mov
mov
out
out
lahf
cld
popf
loope
xchg
cmp
cltd
dec
inc
das
mov
stc
repnz
xor
sbb
lods
stc
xlat
dec
jnp,pt
inc
mov
cmpl
hlt
jb
jg
cld
sbb
cli
push
sbb
nop
xchg
push
xor
lahf
fsub
idivb
push
mov
jg,pt
cld
stc
cmp
mov
push
add
xchg
pop
inc
add
sbb
in
cltd
push
or
aas
cmp
repz
xchg
cmova
inc
enter
stc
repz
mov
adc
cmpsb
sbb
mov
xchg
push
iret
lahf
aas
jg
and
sti
in
rcll
push
cld
stc
repz
jl
or
icebp
xchg
icebp
dec
and
in
nop
iret
lahf
inc
shrl
mov
test
mov
jae
outsb
outsl
adc
adc
lahf
aas
jg
dec
daa
mov
ja
nop
mov
lcall
dec
movsl
dec
aas
lcall
or
outsb
xchg
fs
sub
mov
jae
inc
add
stc
pop
cld
stc
repz
push
mov
bound
cmpsl
mov
fisubrs
lahf
aas
jg
or
shl
add
push
cld
stc
repz
adc
movsl
lret
shlb
xchg
xchg
dec
inc
dec
cld
lods
jp
pop
arpl
push
out
cld
in
and
xor
adc
sbb
adc
cld
stc
repz
ss
outsb
cmpb
data16
sub
iret
lahf
aas
jg
jmp
and
inc
out
int3
add
stc
repz
pop
and
mov
mov
aas
jg
push
and
mov
int3
or
xchg
jbe
testb
dec
insb
insl
sub
jg
cld
lea
xchg
idiv
jb
xor
repz
lahf
inc
lea
and
jp
pop
repz
lret
mov
cmpsl
adc
jg
cld
stc
mov
scas
xchg
xor
pop
mov
xchg
push
std
aas
out
lahf
aas
mov
jg
lea
out
cld
stc
repz
add
push
nop
mov
inc
lock
shll
jnp
iret
lahf
aas
jg
or
mov
mov
out
insb
jb
stc
repz
ret
adc
mov
xlat
insb
test
nop
push
or
dec
pop
cltd
hlt
ss
jbe
repz
addr16
iret
jmp
popa
clc
lcall
je
jg
cld
jp
jmp
jnp
test
icebp
dec
int3
daa
repz
lahf
std
pop
jge
push
in
ret
xchg
cld
stc
cli
mov
sbb
jmp
iret
in
iret
lahf
aas
sub
pop
nop
lcall
ss
repnz
ljmp
aas
jg
xlat
jbe
addl
ret
jb
cmp
jmp
clc
flds
add
sub
outsb
iret
lahf
aas
jg
ds
je
push
fsubrs
add
inc
cld
stc
repz
xchg
setbe
clc
movsb
mov
dec
iret
mov
into
xchg
negl
movsl
cmp
out
sarl
jnp
pop
or
aas
jg
cld
add
in
andb
repz
lahf
or
xor
mov
rolb
sub
jg
cld
stc
sbb
add
fdivrl
imul
sbbl
pop
repz
sub
sahf
stc
cld
stc
repz
divl
and
int3
clc
dec
adc
jle
lahf
aas
jg
mov
pop
out
push
lods
int3
adc
inc
lods
enter
outsb
push
pop
inc
stos
inc
or
lahf
aas
jg
icebp
jmp
lcall
stc
repz
outsb
cmc
add
lea
scas
cli
sbb
aas
jg
jge
xor
loop
shl
and
repz
ret
adc
cmp
jno
aas
jg
cld
mov
add
and
outsl
or
bound
lahf
jle
push
fcomp
test
and
aas
das
nop
stc
cmc
cli
movsl
adc
sbb
repz
sub
jbe
out
pop
loopne
aas
jg
adc
xchg
inc
push
add
lahf
pusha
push
adcb
sub
inc
xchg
stc
mov
sub
bound
jle
sbbl
flds
mov
jne
repz
lahf
notl
test
mov
jns
cld
and
pushf
add
pop
iret
femms
dec
pop
xchg
iret
push
push
dec
adc
add
mov
daa
add
cmp
movsl
mov
iret
lahf
aas
lods
or
decb
push
stc
cld
stc
repz
shll
sti
jecxz
jl
push
lahf
aas
jg
aad
into
mov
pinsrw
test
xchg
dec
fiaddl
dec
push
aas
jg
cld
mov
enter
push
mov
out
lahf
mov
jne
roll
jg
cld
stc
adc
mov
shl
mov
iret
lahf
aas
aaa
xchg
lods
dec
mov
push
cld
stc
rep
push
lret
inc
sub
lahf
aas
jg
leave
ja
lret
mov
sub
cmp
push
int3
les
rcl
pop
push
or
xor
pop
movsl
popa
lahf
aas
jg
lret
mov
jecxz
jbe
mov
adc
jg
stc
repz
and
cltd
jb
insl
pop
inc
and
cld
xor
leave
inc
mov
or
loope
repz
lahf
sbb
sahf
pop
lock
cmpb
stc
sbb
imul
jns
xor
iret
lahf
aas
adc
dec
dec
lahf
arpl
iret
lahf
jg
sbb
in
mov
sub
xor
stc
repz
ss
dec
push
cld
inc
das
rorl
xchg
dec
xor
mov
xor
into
xchg
stc
repz
add
repz
pop
lock
ja
imul
jp
jg
cld
aad
xchg
inc
sub
dec
sub
dec
repz
lahf
inc
add
jle
sahf
jg
cld
stc
mov
pop
mov
cld
call
into
sub
sub
outsb
js
js
lahf
jg
shl
mov
mov
cmp
cld
stc
repz
or
sub
pop
mov
incb
jg,pt
sbb
mov
sti
ret
jo
nop
add
out
cmp
cs
xchg
addb
out
pop
or
jg
cld
dec
clc
cmp
jbe
sbb
push
dec
sti
mov
sahf
cmp
fwait
aaa
outsl
dec
ror
mov
jg
loopne
and
push
jg
mov
fsubrs
mov
repnz
cmc
stos
sbb
stc
mov
stos
push
ret
push
cmp
xchg
out
jmp
mov
lods
adc
outsl
fidivrs
jb
sti
pop
add
push
inc
jecxz
out
xchg
mov
inc
dec
addl
inc
jle
stc
jle
mov
pop
sti
outsl
push
dec
add
out
lahf
aas
cmp
fdivr
fsub
inc
sbb
jne
into
cld
stc
repz
push
pop
jge
push
inc
mov
call
outsb
jbe
lahf
aas
jg
and
cmp
dec
add
xor
stc
repz
loopne
and
mov
xor
adc
jg
or
ficompl
lock
iret
jb
mov
gs
js
pop
idivl
jg
cld
mov
jne
mov
jmp
test
imul
leave
imul
cs
adc
cmp
inc
je
insb
repz
mov
cmp
add
stc
sub
jb
fisttpl
adc
loope
loop
gs
lahf
aas
cli
lret
gs
mov
cld
stc
repz
inc
pop
mov
iret
icebp
shll
insb
iret
lahf
aas
jg
xchg
test
xor
xor
pop
insb
lret
cmc
pop
cld
stc
repz
movb
lahf
test
lahf
aas
jg
popf
jns
jecxz
dec
pop
inc
push
xchg
repz
outsb
dec
out
stc
push
push
cmc
and
clc
cmp
jns
dec
cmpsb
xchg
mov
hlt
test
mov
mov
jnp
jnp
int
aaa
outsl
mov
mov
jecxz
mov
or
xchg
jp
mov
aam
fadds
jns
mov
cld
aas
fwait
aaa
outsl
fidivrs
lea
pop
mov
fmul
enter
and
dec
xor
stos
jg
pop
insl
shl
iret
lahf
cli
add
imul
cld
stc
repz
and
sbbl
fxch
fsubr
xor
lahf
aas
jg
out
sbb
mov
dec
frndint
stc
repz
int
pop
jl
jecxz
push
imul
pop
dec
push
je
gs
lret
std
jle
repnz
iret
lahf
pop
outsb
mov
pop
ret
sahf
int3
cld
stc
repz
mov
sub
inc
mov
cmp
mov
jg
bound
aad
into
icebp
mov
out
lods
out
or
cmp
loopne
fldl
adc
rcl
xor
rolb
jg
cld
sbb
or
enter
iret
ljmp
add
icebp
sbb
jmp
jg
jg
cld
stc
lahf
mov
adc
rep
inc
push
cmp
leave
iret
lahf
aas
imull
adc
sbb
cs
sub
out
icebp
or
xchg
sub
push
xor
iret
pop
cmp
xor
cmpsl
call
stc
repz
add
add
pop
push
hlt
iret
lahf
aas
jg
rcrl
push
gs
adc
std
in
out
mov
adc
and
jae
xchg
lea
iret
aas
jg
cmc
jae
cmp
pop
inc
popa
mov
sub
scas
repz
lahf
sahf
add
add
lods
mov
leave
and
fildll
push
mov
out
cld
imul
ljmp
pop
jp
lahf
aas
jg
push
ljmp
pop
lods
mov
stc
repz
jo
lret
les
aas
loope
aas
jg
cld
mov
aaa
das
cmp
enter
ss
out
lahf
lock
push
or
pop
dec
push
cmp
stos
mov
add
es
inc
mov
pop
pop
sbb
fisubrl
jecxz
das
sbb
fwait
aas
jg
cld
mov
push
inc
jg
clc
mov
repz
lahf
lods
mov
push
push
sub
fcos
aas
jg
repnz
push
dec
pop
gs
repz
inc
xchg
repz
lahf
mov
fidivrs
add
inc
xor
cld
stc
andb
push
sbb
into
stc
data16
out
lahf
aas
add
cmp
test
cld
stc
repz
pop
dec
jg
add
ljmp
pop
iret
lahf
aas
jg
adc
fcmovbe
fstpl
aas
xchg
out
cmp
push
inc
int
cld
stc
repz
mov
mov
mov
repz
jne
xor
lcall
and
inc
adcb
out
lahf
mov
push
bound
xchg
lock
cmp
stc
stc
js
dec
mov
subl
aas
mov
mov
mov
sbb
stc
repz
xchg
dec
popf
test
cmp
icebp
aas
jg
cld
add
daa
jp
pop
les
push
and
repz
lahf
push
mov
stos
mov
jg
cld
stc
mov
test
ljmp
or
out
lahf
aas
xor
cli
vmovlps
cld
stc
repz
push
addr16
out
jb
jl
add
scas
iret
lahf
aas
jg
pop
jle
cltd
iret
in
mov
push
arpl
stc
repz
and
xor
adc
pop
add
push
xchg
repz
push
xlat
pop
nop
stc
repz
push
inc
cmp
test
adc
enter
aas
jg
cld
inc
loopne
inc
shrb
shll
iret
lahf
and
or
mov
cld
stc
jbe
adc
nop
std
bound
push
sbb
mov
aas
scas
dec
bound
mov
cld
stc
repz
cltd
mov
cmc
xchg
fisttps
lahf
pop
push
mov
xor
test
loopne
cld
stc
repz
lret
aad
int3
xchg
add
mov
jg
int3
jmp
ret
fsubrs
stc
repz
push
xor
or
js
mov
das
lahf
aas
jg
arpl
and
mov
repz
sub
jp
push
inc
lea
sbb
aas
jg
cld
addr16
adc
pop
ja
repnz
adc
out
lahf
or
xor
sbb
push
das
addr16
sbb
mov
pop
stc
repz
fwait
adc
xlat
jb
outsb
push
movsb
insl
fdivrs
jg
cld
outsl
fstps
outsb
daa
cmp
sbbl
inc
inc
xor
scas
incl
inc
std
mov
stc
fistpl
inc
mov
ret
or
iret
lahf
jg
push
scas
sarb
test
mov
and
stc
repz
sarl
fcmove
sti
imul
incb
nop
adc
jl
stc
repz
call
jl
cmpsl
dec
loop
aam
les
cld
cld
inc
loope
push
inc
pushf
rclb
jns
scas
inc
or
addr16
cld
stc
repz
push
aas
jmp
insb
das
xchg
ljmp
jp
mov
cmp
sbbl
flds
xchg
sbb
mov
cmp
cld
mov
cmp
push
add
hlt
arpl
xchg
sbb
adc
cltd
les
lods
das
jb
and
mov
int
out
lahf
push
mov
test
pop
jg
cld
stc
loopne
fdivrp
call
xor
sbb
stos
out
lahf
aas
xorb
xchg
gs
fcomps
jge
repz
loopne
dec
imul
xchg
stc
jg
hlt
leave
cmp
iret
jns
mov
ja
dec
clc
out
lahf
aas
notl
mov
dec
movsb
cmp
stc
repz
xor
or
ret
les
subl
push
push
add
stc
repz
sub
cltd
test
jle
or
aam
mov
aas
jg
notl
loop
inc
sbb
loop
mov
iret
ljmp
ret
jbe
push
xor
aas
jg
cld
mov
aaa
pop
repz
xchg
addr16
les
imul
pop
or
mov
out
cltd
aaa
jno
in
mov
mov
pop
xor
jl
mov
sub
push
adc
int
aaa
outsl
aam
rol
leave
aas
insl
push
sahf
fucomp
add
out
mov
jl
addr16
sub
adc
es
sbb
mov
inc
aas
jg
cld
nop
int
pop
inc
sbb
mov
pop
fnstsw
sub
jecxz
jnp
pop
xchg
mov
out
out
pop
jae
xor
lcall
int
jl
dec
sub
xor
cld
fimull
or
dec
iret
pop
push
inc
push
and
fdivrl
int
add
push
sbb
repz
aaa
fists
pop
inc
sbb
jmp
jg
cld
ja
int
add
sbb
out
les
adc
out
lahf
sbb
and
hlt
or
into
dec
rcr
out
jg
cld
stc
mov
lahf
xchg
mov
pop
in
jp
xchg
out
lahf
aas
rcrb
jo
cltd
imul
sbb
or
out
rol
xchg
repz
jle
push
mov
lahf
aas
jg
inc
and
insl
dec
pop
sbb
jo
stc
repz
popa
repnz
ja
ficoms
dec
jg
aas
jg
lcall
mov
sbb
adc
add
repz
push
loop
inc
push
das
jo
or
jle
push
sbb
aas
push
xchg
push
inc
iret
pop
or
push
mov
pusha
xlat
cld
stc
repz
or
pop
add
lea
loope
daa
aas
jg
inc
mov
pop
pop
gs
std
repz
shll
mov
outsl
fidivrs
stos
jle
nop
cli
pop
mov
cli
out
fwait
aaa
fcom
in
lock
jecxz
shll
lods
dec
fidivrs
dec
push
inc
loope
nop
punpckhwd
mov
fwait
aaa
outsl
shll
scas
ja
aad
insl
das
mov
repz
jno
pop
pop
pop
jno
or
jecxz
aaa
outsl
ficoms
xor
test
stos
lods
add
jne
in
sahf
fs
insb
bswap
out
cmpb
stos
ds
push
int3
scas
push
inc
daa
out
inc
cmp
out
mov
sbb
rolb
mov
out
orl
inc
and
mov
or
adc
mov
adc
xchg
orl
inc
jne
inc
sbb
repz
xlat
shll
repnz
lahf
out
sahf
inc
shlb
mov
jmp
stos
and
int
add
stc
repz
mov
xchg
test
addr16
sub
shll
clc
lahf
aas
jg
xlat
dec
lods
mov
fistpl
stc
repz
cmpb
cmpsb
nop
push
jbe
addr16
and
jg
cld
xchg
lret
add
sbb
repz
lahf
jo
and
inc
stos
xchg
shlb
fisttps
mov
pop
jmp
cld
cld
stc
ja
ljmp
movsb
je
cmpb
fiadds
pmulhw
out
int
aaa
outsl
rcr
scas
iret
popf
pushf
xchg
mov
fdivl
inc
fidivrl
cmpsb
and
stos
adcb
xor
call
push
and
jge
fnstsw
fmul
jns
out
imul
hlt
test
ds
mov
repz
cmpsb
movsb
dec
ljmp
flds
repz
cmp
mov
call
inc
aam
xchg
outsl
fidivrs
outsl
mov
int3
mov
mov
loopne
fwait
aaa
idivl
inc
pop
out
lock
int
addr16
mov
mov
repz
inc
icebp
nop
mov
sbb
inc
push
repz
aaa
outsl
fidivrs
push
addr16
outsl
and
es
loop,pn
int
or
jns
lds
ss
test
jl
mov
repnz
pop
aas
imul
int
aas
sbb
cmp
int
in
sub
pop
cmc
push
lret
cs
pop
in
or
jnp
jg
cld
stc
sbb
mov
push
sub
or
fstps
enter
clc
repnz
pusha
add
jno
lea
aam
fstps
in
lahf
aas
push
or
imul
mov
fs
sarl
jns
shlb
xor
fcmovb
addb
lea
sub
lret
mov
sub
repz
cmp
aas
aad
fdivrp
pushf
dec
arpl
lahf
aas
jg
jle
inc
fs
nop
adcb
mov
pop
xchg
fwait
aaa
movhlps
xchg
mov
enter
or
repz
fldcw
les
outsl
fisubrs
xlat
stos
hlt
add
jmp
xchg
ljmp
int
and
inc
push
mov
call
sbb
xor
repz
loop
adc
cmpsl
pop
dec
inc
fwait
and
mov
ds
xchg
sbb
xor
pop
aas
lcall
imul
call
inc
jle
cld
push
xor
mov
aaa
out
and
out
addr16
fwait
pop
pop
ljmp
repz
fwait
pushl
inc
nop
mov
push
data16
outsl
fidivrs
add
mov
pop
add
lahf
xor
icebp
jge
bound
jb
outsl
adc
stc
repz
adc
aaa
inc
pop
mov
aaa
mov
jne
fdivrl
mov
mov
pop
push
push
xor
out
lahf
xor
and
scas
push
mov
cld
stc
outsb
insl
jo
jnp
lea
jns
ficoms
sar
insl
fs
aas
pop
pop
mov
int
aaa
fdiv
mov
shlb
aam
adc
repz
call
hlt
push
xchg
sub
shlb
outsl
pop
movlps
mov
int
ja
insb
push
push
inc
repz
add
mov
pushf
shlb
fwait
jl
mov
xor
push
int
aaa
outsl
enter
cmp
mov
push
jle
jns
out
adc
pop
inc
aaa
mov
or
push
stc
loope,pt
fwait
aaa
outsl
fimuls
cmp
push
out
int
dec
or
call
mov
pop
int3
out
pop
jmp
add
jne
mov
fdivl
pop
out
jg
mov
pop
lcall
add
push
add
repz
lahf
add
loop
jecxz
mov
cld
stc
or
rcrb
mov
iret
and
ljmp
push
addr16
aas
jg
cld
fs
fsubrp
mov
loop
or
out
lahf
pop
sub
in
cmp
sbb
data16
pop
inc
xor
out
ret
rolb
xlat
jo
push
mov
fldl
push
push
outsl
pushf
mov
out
fdivr
push
popl
aas
and
fdiv
cmpsb
xor
add
fnstcw
sub
aaa
outsl
fidivs
fnstsw
gs
jns
out
fs
lret
rcrl
scas
sub
outsl
fidivrs
jne
mov
fstpt
push
loope
out
int
movsl
repnz
push
fwait
or
and
mov
push
gs
shlb
bound
cld
mov
outsl
lods
repnz
add
sub
aam
aas
imul
ja
jp
add
stos
enter
sub
push
dec
scas
adcl
outsb
pop
aaa
dec
add
inc
dec
jge
xrelease
inc
imul
push
inc
das
push
cli
in
mov
cmp
iret
sub
pop
sub
add
xchg
pop
cmp
int
aaa
outsl
fidivl
in
mov
dec
subb
xlat
mov
cmpsb
lcall
pop
xlat
mov
sub
ds
mov
aaa
outsl
and
adc
gs
stc
or
mov
pop
outsb
mov
lret
das
sahf
jb
test
fdivrp
scas
std
jae
jbe
out
jbe,pt
cmp
ret
jns
out
adc
clc
rcrb
inc
and
test
aaa
outsl
fidivrs
and
mov
jo
inc
lock
cmp
xchg
fwait
or
cbtw
mov
push
dec
mov
aas
jg
enter
xchg
outsl
xchg
pop
or
repz
lahf
lahf
mov
or
and
in
gs
cwtl
cld
stc
push
lret
out
cmp
loopne
lret
cmp
data16
out
dec
dec
adc
adc
stc
repz
fcomip
cmpsl
pop
lock
pop
mov
sbb
jg
cld
xchg
popa
jno
inc
push
xor
movsl
jl
cmp
out
lahf
punpcklbw
or
out
jg
ret
ds
stc
repnz
ret
jecxz
fldl
repz
mov
inc
or
add
cld
adc
jb
pop
ds
movsb
xchg
aas
ljmp
lahf
shll
dec
cld
stc
inc
or
inc
sub
das
std
rcrl
push
add
push
xchg
xchg
inc
lahf
shll
repz
pushf
adc
shl
lea
shlb
push
int
aam
jg
cld
xchg
lea
push
push
fnstsw
lds
clc
repz
lahf
gs
ret
sub
je
inc
sub
dec
insl
mov
stc
push
sub
xchg
xchg
aas
sti
xor
sahf
or
jle
cld
in
aaa
ret
and
in
fnsave
lock
clc
leave
das
pop
and
sbb
add
repz
xchg
mov
pusha
repnz
repz
addr16
push
pop
inc
pusha
xchg
jmp
or
jg
cld
rcl
dec
cli
sbb
out
shr
or
out
lahf
fidivl
sbb
cmpsb
nop
stc
lcall
stc
ret
fidivs
cltd
add
cmp
andb
fldcw
jb
rolb
jecxz
sti
or
out
sub
pop
mov
in
negl
inc
je
pop
sahf
aas
mov
push
xchg
dec
sub
adc
mov
test
dec
ror
sbb
aas
mov
jg
in
test
addl
imul
out
push
dec
or
mov
or
mull
inc
mov
jg
cld
adc
push
push
scas
mov
es
or
mov
repz
lahf
dec
xor
and
add
stc
idivb
jg
cld
stc
sbbb
jbe
xor
movsl
leave
aaa
mov
lea
aas
es
jnp
jle
popa
dec
cli
in
js
cld
stc
repz
cli
adc
cmp
xchg
jno
fisubrl
mov
aas
jg
cli
and
push
repnz
mov
cld
stc
repz
stc
and
pop
lret
and
pop
aaa
in
lahf
aas
jg
jbe
mov
ret
pushf
lcall
stc
repz
or
incb
and
out
mov
in
int
ja
push
adc
rcrb
stc
push
pushf
addr16
f2xm1
iret
outsl
fidivrs
mov
push
shr
push
or
insb
jns
lds
inc
lcall
ret
repnz
stc
push
dec
jecxz
mov
filds
cld
out
dec
push
test
xlat
in
cli
aad
cld
stc
repz
lods
ja
mov
xchg
aaa
lds
iret
lahf
aas
jg
lret
in
ret
leave
aas
xor
lret
loope
or
lods
iret
adc
adc
lock
jbe
aas
jg
mov
cli
jno
jb
loope
jl
repz
pop
mov
inc
test
dec
dec
ficoml
std
test
stos
inc
and
xacquire
addr16
inc
and
cmp
aas
jl
push
sbb
xchg
lahf
aas
jg
outsl
dec
aaa
stc
jmp
cmpsb
mov
repnz
push
push
lock
fcoms
sub
inc
mov
lahf
jg
sbb
inc
dec
in
repnz
inc
dec
xlat
fwait
cli
pop
push
adc
mov
enter
pushf
lock
aas
sub
mov
fiadds
leave
xor
scas
xor
ficoms
pop
fisubrl
in
pop
popl
inc
jbe
pop
xor
outsb
mov
fidivrs
adc
movsl
dec
push
ljmp
push
int
aaa
outsl
lcall
orl
scas
push
mov
and
mov
pop
cmpsb
xchg
or
outsl
fisubs
sbb
mov
cmp
push
cwtl
daa
cmp
mov
pop
sbbl
aaa
outsl
fidivrs
push
push
ljmp
aas
je
xchg
jne
or
xor
out
ss
and
gs
jg
cld
stc
aaa
in
lds
mov
ljmp
test
je
sbb
addr16
or
ud0
sub
lahf
aas
lcall
ucomiss
out
out
popf
xor
xchg
ss
cmp
push
sub
in
in
sbb
scas
jg
cld
test
lock
ret
or
call
lahf
aas
mov
mov
pusha
aas
movsl
jnp
cld
stc
repz
hlt
insl
xchg
dec
fwait
mov
fistpl
push
lahf
aas
jg
mov
je
jbe
addr16
xor
stc
repz
cmc
inc
lea
aad
in
pop
mov
aas
jg
rclb
jecxz
popa
inc
jnp
mov
repnz
test
rorb
fnstenv
mov
jge
aam
ja
cmp
jge
test
cld
stc
inc
addr16
cmpsl
test
movsb
shl
inc
jle
jo
mull
sub
dec
fcmovnb
out
cld
stc
repz
jo
mov
push
mov
andl
sub
je
jbe
inc
insb
cmc
xchg
pop
addr16
xchg
adc
ja
pop
iret
mov
cmpsl
lcall
fidivrs
push
rol
sbb
or
dec
int3
jno
int
call
repnz
jmp
mov
mov
repz
cld
inc
int
aaa
outsl
lods
aad
or
out
cwtl
lret
push
js
and
mov
xchg
cmc
sub
sub
faddp
fmull
movsb
inc
push
mov
fldl
dec
jns
out
or
xor
mov
aaa
outsl
fidivrs
jl
outsb
aam
xchg
adc
loopne
out
fwait
or
inc
xor
push
testl
pop
arpl
lcall
cld
xchg
dec
out
fwait
aaa
push
sbb
mov
push
dec
pop
fidivrs
fs
movlps
pop
mov
outsl
lods
inc
add
dec
mov
mov
and
xor
sub
inc
loop
fstps
es
loopne
rep
enter
nop
pop
dec
inc
jo
int
adc
pop
hlt
inc
aaa
das
outsl
fidivrs
inc
push
mov
repnz
int
aaa
pop
int3
arpl
rolb
shr
fidivrs
shl
xor
pop
xchg
mov
mov
mov
dec
mov
adc
cli
pop
mov
push
lret
mov
filds
xchg
and
addr16
inc
push
mov
jge
adc
in
ljmp
cmp
scas
leave
iret
lahf
aas
jg
sarb
push
lret
flds
jmp
loopne
in
xor
push
mov
lods
mov
inc
dec
clc
cld
loope
push
leave
fwait
aaa
outsl
ficoms
mov
scas
iret
movsb
scas
mov
xchg
dec
jns
out
ret
fsub
shll
mov
stos
dec
dec
inc
pop
fnstcw
mov
out
fwait
aaa
mov
or
xor
cld
push
iret
pushf
mov
inc
dec
repz
adc
stc
repz
addr16
push
dec
mov
jmp
aas
jg
cld
iret
sub
jb
or
test
xor
loop
mov
jg
xchg
stc
xchg
leave
iret
cmp
aas
icebp
andb
xorb
movsb
int
aaa
outsl
out
rcrb
mov
sub
inc
scas
lahf
jg
enter
dec
lcall
mov
repz
loopne
jl
lock
outsb
jo
mov
aas
jg
cld
insb
dec
std
xlat
ds
in
sub
insl
lock
iret
lahf
push
addr16
mov
push
mov
out
jg
mov
dec
imulb
aaa
outsb
push
repz
lahf
push
add
incl
xchg
icebp
lret
cld
stc
jbe
roll
adc
mov
fidivrl
fdiv
into
inc
dec
sbb
pop
lret
mov
mov
aas
jg
cld
cmp
lret
push
jge
fsubrl
add
repz
shl
out
lahf
loopne
rcrb
sti
mov
cld
stc
push
xchg
call
sbb
stc
enter
test
repz
das
pop
push
push
data16
outsb
xchg
outsl
fidivrs
or
cltd
jp
mov
cld
jmp
fwait
adc
call
inc
test
shll
mov
jno
lods
sub
stc
repz
adc
push
xchg
outsb
push
fimuls
or
jg
cld
lock
xor
pop
mov
dec
dec
xchg
mov
out
lahf
xchg
rolb
je
xor
cld
stc
ss
push
or
cli
leave
xor
mov
adc
lret
iret
lahf
aas
push
adc
inc
or
pop
and
mull
aas
in
test
push
pop
mov
dec
xchg
dec
out
fwait
mov
iret
cli
xlat
lods
mov
mov
icebp
out
je
flds
adc
xchg
in
sbb
and
sahf
sub
adc
iret
scas
jg
cld
stc
inc
add
mov
fcompl
mov
iret
lahf
aas
dec
movsl
pop
or
fiadds
repz
rcrb
cmp
cmc
into
cmp
lahf
aas
jg
fucom
iret
pop
pop
not
fidivrs
stc
repz
jge
dec
fwait
dec
mov
pop
mov
setl
lahf
aas
jg
inc
sti
ret
out
sbb
cmpsb
cli
loope
test
sub
aas
ficoml
out
imul
repz
push
push
adc
into
js
and
sub
and
jg
mov
test
mov
mov
inc
add
dec
jns
out
mov
fildl
icebp
or
call
sub
mov
mov
inc
dec
sbb
add
arpl
enter
mov
jle
pop
mov
fisttps
testb
fs
xchg
dec
cli
adc
lods
ficompl
aaa
outsl
fidivrs
pop
jecxz
adc
inc
lods
repz
fwait
sarb
jp
stc
dec
lods
push
mov
outsl
fidivrs
out
bnd
xor
repz
or
add
xor
xor
push
inc
insb
sbb
jns
aad
inc
push
inc
lret
ror
fidivrs
jmp
int
aaa
outsl
inc
inc
dec
inc
push
outsb
call
dec
insl
cmpsb
js
out
shl
scas
dec
xchg
popf
out
xlat
fidivrs
out
mov
mov
rclb
fwait
aaa
outsl
inc
out
xor
xchg
cmpb
pop
rcr
add
loopne
int
aaa
out
jg
mov
inc
sub
imul
aam
fcmovu
jp
cltd
mov
fwait
aaa
outsl
fmulp
stos
push
sub
lahf
or
adc
sub
pop
pop
jns
xor
jb
mov
and
movsb
xchg
xchg
insb
ficoms
mov
pop
out
cmp
inc
dec
sarb
pop
jne
pop
mov
adc
sub
jns
inc
and
mov
insb
outsb
aas
mov
lahf
jg
and
decl
jge
xor
adc
pop
xchg
shlb
pop
sub
mov
inc
cwtl
inc
jg
cld
stc
pop
jno
adc
lcall
mov
mov
out
lahf
aas
jo
out
out
dec
pop
push
push
xor
stc
repz
push
dec
mov
fnstcw
pushf
add
pop
in
push
inc
and
jg
insl
xchg
sub
in
repz
lds
add
les
mov
ds
das
xchg
aad
dec
inc
pop
push
or
repz
adc
sti
jp
pop
in
jns
enter
cld
pop
dec
cli
in
pop
dec
and
movsb
outsl
sub
fnstcw
xor
es
rcl
inc
sbb
dec
test
add
hlt
lcall
dec
cmpsb
dec
push
out
pop
mov
xlat
jp
out
sbb
jmp
inc
fidivrs
scas
mov
sbbb
and
aaa
outsl
ret
and
cwtl
out
cmp
mov
jno
or
mov
shrb
jnp
aad
xor
repz
ffree
stc
jle
adc
jle
cli
push
fld
iret
lahf
aas
cmp
sbb
ret
xor
loop
cld
stc
repz
dec
incl
mov
fadd
cmp
sti
in
mov
jg
adc
fs
add
and
mov
dec
push
push
lods
add
and
sub
xchg
push
and
lods
push
sbb
dec
es
imul
iret
lahf
aas
call
pop
sub
or
mov
loope
shrl
mov
testb
jle
cld
push
adc
lcall
cli
in
iret
enter
es
jg
or
xchg
aas
incl
dec
lcall
add
ja
mov
outsb
fidivrs
jle
pop
mov
ret
sbb
int
mov
xchg
and
fidivrs
sub
push
mov
xchg
dec
mov
outsb
shll
xor
out
cmpb
xlat
aas
lahf
xor
iret
pop
sub
aam
hlt
rcrb
stc
repz
cmpsl
sbb
and
int
pop
std
cmp
mov
ror
lahf
jg
aaa
loopne
popf
fs
add
cld
stc
repz
or
xchg
aas
sbb
xor
jle
jl
sub
mov
xchg
adc
cmp
jg
cld
sub
aas
sub
loopne
fbstp
cs
lahf
mov
ret
cmp
addr16
adc
jg
cld
stc
dec
repnz
or
fsub
stos
loopne
daa
test
mov
mov
imul
cmp
cmp
cld
stc
rep
lods
ficoms
ds
out
mov
arpl
xchg
aas
jg
cmp
push
mov
jge
pop
stos
lahf
aas
jg
addr16
sbb
dec
pushf
sub
adc
push
stc
repz
push
movsb
jp
mov
in
jnp
sbb
add
jg
cld
ss
mov
data16
addb
lret
bnd
xchg
inc
jne
aas
jg
cmp
mov
pop
mov
stc
repz
js
pop
push
mov
popa
mov
xchg
arpl
icebp
dec
dec
and
lods
mov
pop
mov
sbb
jg
daa
inc
sbbb
lahf
orl
lahf
push
dec
andb
inc
out
lahf
jg
inc
xor
ds
rorb
insb
adc
stc
repz
jb
popf
inc
push
ja
mov
outsb
mov
mov
xchg
je
outsl
fidivrs
fisubrs
mov
cld
mov
fwait
aaa
jno
in
popa
sub
lock
push
push
fdiv
mov
mov
into
pop
xor
fwait
aaa
outsl
popf
imul
pop
xlat
cmp
in
out
sub
aaa
outsl
fidivrs
and
add
scas
in
je
int
in
mul
xlat
arpl
in
push
cmp
mov
mov
daa
repnz
jno
stos
out
inc
cld
stc
pop
inc
in
mov
pop
jle
lahf
stos
lahf
jl
push
jb
adc
xor
repz
sbb
push
inc
mov
repz
push
outsl
fidivrs
mov
mov
mov
and
aaa
movsl
xor
pop
or
sub
fidivrs
lock
in
icebp
jo
inc
mov
int
aaa
outsl
les
popa
fidivl
outsb
pop
stos
mov
hlt
jo
cld
or
or
lahf
xor
adc
in
xchg
and
and
int
adcb
push
xchg
inc
inc
sbbb
pop
nop
adc
or
outsl
fidivrs
pop
ret
les
imul
aam
aaa
jecxz
mov
call
int
insl
jne
iret
mov
cld
iret
popa
outsl
fidivrs
sbb
or
mov
jmp
fwait
aaa
inc
into
xorb
pop
or
popl
sbb
js,pn
int
ja
or
adc
jbe
push
mov
in
jmp
out
sbb
or
stc
in
aam
jmp
ror
aaa
outsl
push
or
mov
repz
lahf
dec
cmp
and
int
fidivrs
jge
cmp
mov
in
das
shl
dec
pop
xor
incl
push
out
jg
cld
stc
pop
jl
sbb
test
loope
rcrl
push
out
lahf
aas
imul
js
mov
stc
repz
cltd
or
pop
add
repz
iret
lahf
aas
jg
jns
dec
stos
mov
adc
scas
cwtl
ffree
out
hlt
leave
adc
ret
push
jb
jns
or
mov
in
andb
lahf
xchg
pop
mov
pusha
and
push
das
lods
inc
sbb
jecxz
lea
jo
inc
int
aaa
fistpll
cli
enter
and
dec
or
sbb
or
cmp
mov
push
push
inc
mov
repnz
cmp
int
aaa
mov
int3
int
fcoms
mov
mov
loopne
ljmp
jne
xchg
mov
jne
cwtl
rcll
or
lahf
xchg
mov
out
fwait
fs
push
and
fcom
stos
jmp
fidivrs
out
test
insb
addr16
pop
int
mov
xchg
lret
rclb
fcoml
cli
enter
aas
pop
xchg
nop
mov
xchg
and
das
mov
mov
mov
es
cmc
mov
jle
in
dec
pop
fisubrs
dec
cmp
inc
push
fcoms
aaa
push
pop
outsl
aaa
out
mov
cld
fldt
shrb
repz
fwait
shl
insl
mov
hlt
aam
sbb
jns
pop
cmpsl
inc
gs
mov
scas
dec
das
cmp
and
aas
imul
add
dec
movl
cld
stc
repz
out
sbb
scas
adc
cmpsb
aas
jl
aas
jg
inc
out
cmpsb
inc
out
stc
inc
xor
pop
movb
shrl
call
sbb
jg
cld
aas
add
shl
inc
jo
cmp
iret
lahf
cmpsb
outsb
subl
arpl
xchg
test
push
lret
out
out
test
fwait
jae
jno
dec
lahf
dec
adc
adc
add
mov
inc
adc
push
jge
outsl
fidivrs
call
insl
mov
xchg
insb
iret
int
mov
dec
in
out
lahf
aas
pop
mov
inc
sub
test
cld
stc
repz
lcall
pop
sub
fwait
data16
mov
lahf
xchg
out
jbe
data16
lock
cmp
mov
add
add
or
fnstcw
mov
mov
pop
cmc
in
dec
movsl
xchg
mov
loope
scas
jns
out
jns
push
ljmp
xor
fnsave
outsl
fidivrs
test
and
xor
repz
fwait
cmp
mov
fwait
sbb
addr16
jns
xor
loopne
jne
std
or
add
xor
cmp
out
lods
arpl
stos
mov
outsl
fidivrs
ja
repnz
mov
enter
out
fwait
sahf
sub
sub
out
sbb
mov
repz
or
and
push
outsb
mov
fwait
aaa
jmp
and
ds
inc
sbb
mov
rcll
xor
jnp
andb
fwait
aaa
outsl
ja
adc
or
mov
mov
sahf
andb
mov
fwait
aaa
outsl
ficomps
mov
sub
adc
out
add
push
imul
inc
mov
mov
push
sbb
call
fwait
pop
shlb
jp
aam
sub
sbbb
mov
add
sbb
pop
leave
lcall
popf
loopne
jne
xor
mov
sbb
xchg
cmovo
lods
push
and
and
outsl
fimuls
std
mov
leave
int
ja
sub
les
mov
sbb
nop
aas
push
jp
test
push
stc
repz
rcr
in
mov
dec
je
rclb
bound
stc
dec
add
dec
mov
aaa
and
gs
mov
xchg
and
fldcw
xchg
shll
outsl
fidivrs
ret
clc
rcrb
pop
mov
out
fwait
lods
iret
xchg
sbb
jle
cmpsb
stc
xor
sti
add
ja
xchg
fisubl
dec
das
aaa
outsl
fidivrs
xchg
rol
sbb
vcvtpd2dq
fwait
ss
rorb
mov
sbb
jns
xchg
in
stc
push
cmp
out
sbb
push
and
int
aaa
lret
adc
lea
cld
jmp
dec
sbb
mov
dec
out
pop
arpl
int
andb
pop
sub
mov
mov
sub
push
inc
push
sub
leave
mov
sub
enter
push
sbb
jecxz
imul
loopne
cli
dec
icebp
push
mov
inc
repz
fwait
outsl
iret
and
das
in
dec
psrlw
fidivrs
sbb
sub
in
mov
aaa
and
mov
cltd
fcmovnb
out
fwait
aas
jmp
xchg
jo
jae
aas
jl
repz
adc
lea
or
xchg
inc
ror
aaa
outsl
cmp
sahf
jnp,pt
and
sbb
cld
mov
leave
mov
and
in
mov
xchg
fisubs
mov
xchg
add
loopne
outsb
lahf
loope
dec
test
fcomps
inc
outsb
fidivrs
lods
mov
fwait
aaa
out
test
mov
data16
rclb
loopne
roll
pushf
sti
inc
in
lret
add
lahf
insl
imul
fdivrl
xor
es
xchg
in
mulb
mov
fwait
aaa
inc
mov
mov
repz
pushf
push
pop
mov
jp
pop
std
push
fwait
aaa
outsl
fisubs
arpl
aas
aad
test
jns
out
icebp
push
fadds
fcmovb
icebp
jo
fidivrs
jg
sbb
xchg
mov
add
inc
lcall
and
test
loop
jg
cld
cld
aas
jp
lea
movsl
push
fcmovb
loope
ret
iret
lahf
cltd
ror
push
adc
mov
sahf
daa
mov
test
test
adc
or
mov
jb
out
ret
mov
pop
and
rorl
sbb
sbb
fdivr
repz
mov
inc
and
pop
sbb
sahf
aas
jg
cld
jnp,pt
jl
pop
or
push
sub
ret
jns
cmpsb
and
stc
das
fs
dec
jle
cld
xchg
leave
cld
outsl
out
mov
loopne
xor
filds
xchg
shlb
and
repz
pop
jb
js
and
adc
add
or
arpl
leave
shlb
aaa
inc
pop
dec
testl
ds
dec
movsb
xchg
test
pop
mov
repz
filds
mov
push
push
aas
jg
cld
call
jns
dec
push
loopne
ret
lret
lock
iret
lahf
cltd
adc
out
xchg
movsl
repnz
repz
push
stos
iret
xchg
xor
jns
mov
adc
andb
dec
aas
lods
aaa
outsl
fidivrs
aaa
scas
fsubrl
cmp
sbb
and
add
mov
out
nop
add
sub
dec
jle
mov
jae
push
out
add
add
push
fildll
popa
inc
pop
out
fwait
aaa
and
test
inc
or
repz
out
pop
mov
cs
mov
out
shlb
outsl
pop
aaa
dec
sub
adc
mov
cld
dec
push
cmp
pop
movsl
xchg
inc
inc
std
xchg
out
mov
jb
and
adc
pop
add
cld
stc
repz
push
fcmovne
xchg
cmc
mov
jle
jne
mov
aaa
out
xchg
arpl
and
js
mov
dec
les
and
in
jae
pop
cld
xor
jb
pop
pop
inc
sbb
xchg
mov
or
jg
or
mov
aaa
outsl
fidivrs
sub
repnz
mov
lods
mov
out
fstl
and
aas
jge
outsl
fidivrs
adc
dec
imul
lods
arpl
lods
inc
out
fwait
aaa
pop
ja
mov
adc
cmp
mov
rcll
fisttpl
div
push
lock
add
fwait
aaa
outsl
cltd
cld
xor
out
xor
repz
xor
jo
cli
les
scas
jmp
fdivrp
aaa
add
and
mov
int
call
ds
jno
cmp
out
sbb
fdivs
adc
ret
aaa
outsl
fisubrs
imull
cmpsl
call
mov
lods
lcall
imul
inc
ficompl
fidivrs
stc
cwtl
adcb
xchg
or
sub
jg
int
mov
out
xor
pop
insb
lret
movsb
jns
out
pop
lret
movb
cld
sbb
sbb
out
mov
out
shll
jnp
xor
insl
scas
push
dec
outsb
adc
mov
push
push
jo
sub
mov
or
jbe
inc
stos
sub
int
aaa
xor
ss
bound
cld
pop
mov
pusha
push
jns
adc
ljmp
ljmp
andb
repz
push
adc
cwtl
jg
jge
cmp
daa
mov
out
ficoms
outsb
mov
fdivr
fcmovne
jle
jl
cmp
jbe
mov
in
sbb
xchg
xchg
scas
or
xor
xchg
sbbb
fdiv
in
out
push
pop
fnstcw
sub
xchg
jnp
out
fwait
dec
pop
stc
xlat
dec
fdivr
mov
mov
mov
bound
xchg
mov
pop
dec
dec
out
fwait
aaa
mov
pop
addr16
jmp
lret
scas
fidivrs
sbbl
lret
sbb
sbb
mov
aam
outsl
aas
jmp
nopl
jmp
fiaddl
xchg
aad
ret
xchg
decl
data16
push
lret
adc
repz
aad
rclb
push
mov
pop
adc
leave
hlt
aam
fidivl
push
add
repz
leave
fcmove
addr16
sbb
aaa
loopne
mov
mov
cld
stc
cld
mov
inc
gs
and
loopne
outsl
popf
jns
jecxz
dec
add
adc
fidivrs
out
stc
jg
movsb
stc
aas
pop
sahf
out
fwait
aaa
dec
xchg
inc
rcll
push
insb
iret
rol
fidivrs
fldcw
mov
add
enter
fwait
aaa
outsl
test
sbb
dec
roll
inc
push
mov
fwait
imul
pop
jl
jnp
sbb
pusha
fwait
aaa
outsl
fisubrs
lret
push
jo
xchg
and
repz
int
adc
in
xor
jno
xor
mov
mov
mov
sub
test
outsl
scas
sahf
pop
divl
push
sti
jp
mov
mov
call
ss
mov
push
dec
xor
mov
repz
and
pop
insl
imul
xchg
dec
hlt
jg
cld
stc
test
or
and
xchg
pop
imul
xchg
into
fiaddl
xchg
cli
cld
stc
repz
push
push
sub
dec
mov
xor
rep
jns
cmp
pop
div
add
fnclex
aas
jg
cld
jb
mov
push
adc
or
mov
iret
lahf
dec
fs
sub
jns
jo
pop
out
cmp
imul
stos
lods
mov
push
mov
hlt
das
push
mov
cmc
xchg
int
call
pop
jns
fdivrl
out
sub
lods
cwtl
popa
lds
dec
iret
xchg
cmp
lods
cmp
sub
inc
rcl
mov
inc
inc
scas
jns
not
enter
xlat
cmp
je
out
mov
iret
or
cmp
int
aaa
xor
xchg
dec
pop
cltd
std
fidivrs
mov
push
repz
call
cmc
pop
mov
test
in
add
cmp
cmp
add
sub
aad
mov
or
mov
dec
jg
mov
out
cmp
outsl
ficoms
iret
and
pop
mov
movsl
inc
mov
cld
imul
adc
les
jge
lahf
aas
jg
mov
stos
cmp
sbb
repz
rorb
pop
mov
imul
add
stc
hlt
lret
mov
xlat
divb
inc
test
fldenv
xor
and
mov
dec
aad
push
mov
fwait
aaa
outsl
mov
mov
in
pop
jg
repz
imul
pusha
mov
cs
outsl
fidivrs
movsb
push
jne
dec
mov
out
fwait
xchg
andl
cmp
fdivrl
sbb
lahf
mov
movsl
mul
repz
repz
out
dec
or
sub
jmp
clc
aas
jg
cld
into
or
add
bound
lahf
es
adc
jae
test
adc
clc
xlat
jae
inc
and
adc
cmp
call
shl
cltd
mov
test
or
push
cmp
mov
sahf
mov
pop
mov
mov
cmp
add
adc
ret
push
sbb
push
push
and
ffree
test
ret
adc
ficompl
jnp
dec
push
rorl
out
mov
push
lret
dec
push
inc
icebp
dec
sub
dec
and
add
add
das
and
push
adc
adc
rorb
cmp
pusha
push
add
mov
inc
aad
xchg
mov
xchg
xorb
jmp
inc
repnz
lds
jg
adc
cmpsb
mov
add
sub
adc
mov
inc
jb
xor
aad
movsb
sub
jb
cmp
jae
sbbb
dec
loop
or
sub
sub
inc
xchg
mov
fwait
mov
mov
xchg
sbb
shll
les
icebp
cmp
mov
mov
mov
icebp
adc
xorb
mov
movsl
sbb
or
pop
dec
dec
add
mov
rcrb
mov
sbbb
icebp
test
mov
sti
enter
fidivrl
or
cmovo
push
push
addr16
aad
aaa
push
xlat
sbb
add
dec
adc
test
add
add
clc
sbb
add
sarb
orb
push
add
sub
add
push
test
xor
push
das
sub
cmp
pop
or
add
pop
mov
mov
xor
popw
ret
lret
test
push
mov
pop
aas
sub
inc
adc
push
mull
sbbb
test
inc
mov
and
repnz
ljmp
rolb
push
cs
mov
xor
lahf
pop
jne
push
stos
and
leave
lcall
rolb
lret
arpl
or
and
hlt
pop
push
add
ljmp
inc
mov
clc
and
add
sbb
push
xchg
mov
ljmp
cmp
into
test
push
xor
mov
add
sbb
and
call
add
sbb
sbb
cli
push
cmp
testl
push
fcmovb
daa
or
dec
sub
add
scas
pop
shll
adc
fcmovnb
or
push
or
add
ret
add
adc
add
sbb
out
and
jne
test
andl
and
mov
or
sbb
mov
adc
mov
movsl
movsb
icebp
inc
push
clc
adc
les
mov
add
ss
insl
daa
inc
add
pop
xchg
aam
mov
or
loopne
testb
and
lret
push
push
push
mov
adc
and
push
mov
test
xchg
push
inc
sbb
push
cmc
add
mov
and
testb
sbb
adc
test
fdivs
mov
aaa
mov
push
push
ss
sub
and
mov
enter
scas
loope
xchg
pop
ds
add
adcl
sbb
adc
sbb
mov
adc
inc
adc
or
decb
pop
sbb
sub
dec
inc
dec
fcoms
push
aam
outsb
inc
pusha
mov
mov
cmp
mov
xor
push
scas
sub
mov
or
add
divb
push
push
test
enter
inc
movsl
repnz
sub
adc
mov
ret
push
dec
pop
jno
add
cmpsl
push
add
dec
mov
add
add
shr
inc
in
ss
addb
test
and
or
sub
mov
cmp
cmpsl
mov
and
loopne
mov
adc
jae
rcrb
lcall
cmc
stos
sbb
loope
lret
sbb
subb
or
mov
inc
pop
sbb
lret
stos
enter
ret
jmp
cs
lock
call
pop
insb
notb
fcmove
xor
shlb
ret
add
adc
insl
stos
sbb
fists
xchg
test
mov
add
fadds
push
cmp
push
jnp
pop
pop
xlat
adc
and
je
xchg
in
adc
cwtl
add
push
ljmp
and
ret
clc
rolb
sbbb
call
loopne
ret
sub
xor
sub
test
aaa
int3
mov
add
xor
sbb
add
push
mov
inc
mov
sar
jbe
push
clc
add
adc
pop
stc
fcomip
insl
xor
movsl
push
mov
shlb
in
dec
pop
add
mov
xor
push
sbb
sub
data16
fldl
rcrl
fdivrs
push
or
adc
arpl
push
lods
or
es
add
in
sub
pop
inc
or
imul
jecxz
push
test
imul
add
mov
rolb
cwtl
fiadds
sbb
xor
inc
mov
pusha
aam
cmp
add
fmuls
ja
and
or
sbb
stos
jno
fcmove
ljmp
dec
ret
or
into
cmp
add
sub
lods
mov
jae
adc
xor
mov
mov
rolb
mov
add
adc
rolb
sti
loop
lret
sahf
insb
cmp
or
push
adc
out
add
inc
pop
adc
mov
add
cwtl
insl
add
sbb
popf
add
daa
push
push
jns
mov
sbb
mov
call
jge
jae
pop
add
xchg
and
add
aad
shll
ljmp
add
fcomps
xchg
subb
rorb
movl
sub
testb
lods
shll
push
fstl
clc
in
test
or
dec
mov
adc
adc
mov
xor
call
push
add
pop
mov
rorl
in
lcall
and
push
arpl
push
cmp
add
push
in
bound
fdivrs
mov
bndstx
mov
add
shrl
cmp
dec
mov
push
scas
pop
ret
mov
push
rclb
shrb
loopne
sbb
sbb
jno
testb
xor
negb
sub
notb
mov
movsl
jge
push
push
xlat
adc
or
std
lcall
mov
test
mov
cmovno
lea
mov
mov
orl
inc
lar
push
pop
cltd
dec
mov
fwait
push
sbb
push
lret
jo
push
add
mov
push
inc
scas
pop
shll
inc
push
roll
daa
and
je
test
jl
add
push
push
xor
xor
lret
icebp
mov
test
sub
cmp
sub
pop
pop
insl
pusha
sub
sarb
rolb
stos
pop
adc
adc
inc
and
sub
daa
fcomps
sbb
cmp
cwtl
and
push
in
jb
push
push
call
enter
daa
jp
stos
sub
je
roll
stos
adc
dec
push
out
popa
adc
xor
push
jno
leave
mov
pop
sbb
jne
sbbl
cli
push
and
sub
cs
popw
and
pop
cs
rclb
cmp
pusha
jb
lea
mov
or
arpl
cltd
add
dec
xchg
or
add
repnz
sub
shr
pop
or
adc
leave
or
cmp
sbb
sub
pop
arpl
cmp
adc
mov
cmpsl
add
ret
sbb
rcrb
ljmp
rolb
mov
push
fidivl
sbb
push
adc
ds
inc
je
rcll
xorb
fistl
fs
dec
mov
cltd
dec
push
push
add
adc
pop
rcrb
mov
sbb
cltd
sbb
fcmovne
scas
sbb
cmp
add
push
adc
bound
push
lret
repnz
pop
xor
adc
jne
xlat
mov
aam
rorl
clc
aad
push
subb
mov
mov
or
jp
xor
push
mov
add
js
adc
mov
ret
inc
and
mov
xchg
test
pop
cmp
repnz
and
add
popa
les
pop
arpl
mov
mov
pop
sbb
add
leave
mov
adc
push
mov
jmp
xchg
adc
pushf
pop
cmpsl
or
out
das
adc
adc
adc
push
es
sbb
and
or
dec
or
mov
push
in
or
vfrczpd
fcmove
fucomi
jae
sub
or
inc
push
cmp
lock
xchg
pop
fisttpll
shlb
mov
sbb
cmp
mov
lret
dec
addr16
mov
lock
mov
add
and
mov
imul
movsl
cmpsl
pop
or
fcompl
push
out
pop
flds
push
push
call
mov
or
push
cmpsb
jecxz
lods
jp
shlb
push
adc
test
or
ror
xor
xor
add
adc
push
mov
or
mov
lock
pop
sbb
subl
cli
and
call
or
ret
add
add
ret
push
adc
ret
sub
adc
fcompl
cli
or
or
push
mov
ss
ret
in
cmpsb
ja
pop
aaa
push
lods
ret
loopne
insb
lock
add
dec
or
rcll
int3
test
or
adc
push
aad
sub
hlt
shll
adc
sbb
add
and
movsb
popf
roll
mov
std
xor
cmp
inc
or
pop
ja
or
pop
fiaddl
or
rorb
jb
xchg
sub
pop
scas
sbb
adc
pusha
lret
xchg
inc
adc
sbb
aam
jb
movl
lcall
pop
inc
mov
sbb
mov
lods
cmp
adc
jmp
dec
into
push
ret
mov
imull
test
push
xchg
pop
insb
lret
test
or
mov
adc
add
mov
push
push
push
mov
cmp
adc
out
add
mov
sbb
adc
cli
or
in
and
or
push
xchg
addr16
rclb
int
or
mov
cmp
test
ds
test
sbb
mov
cli
xchg
inc
or
and
mov
in
mov
inc
lods
or
sbb
adc
add
adc
or
adc
or
aad
nop
test
stos
sbb
mov
pop
fsubp
add
js
sbb
push
loope
cmp
xor
jmp
xor
in
icebp
dec
push
mov
addr16
fld1
jb
bndstx
out
xchg
dec
push
movsl
push
and
aam
scas
test
push
sub
cltd
mov
sub
push
mov
mov
aad
dec
lock
fcoml
cmpsl
test
push
imul
and
cltd
xchg
rorb
push
jae
xor
inc
aam
sbb
rcrb
test
add
mov
sbb
movl
mov
push
cmp
and
pusha
push
inc
and
test
or
mov
adc
mov
sub
andb
pusha
push
mov
test
jl
mov
les
adc
ret
xchg
push
add
popa
js
pusha
push
fwait
bound
mov
pop
push
pop
daa
clc
or
leave
movsl
add
sub
jo
pop
sbb
push
imul
ret
add
lcall
pop
inc
pushf
mov
cmp
cltd
hlt
push
addl
adc
adc
mov
add
test
test
xor
icebp
inc
mov
push
push
and
pop
or
sub
mov
xchg
ret
sbbb
pop
mov
stos
mov
inc
push
add
incb
or
cmp
or
loope
das
fnstcw
imul
out
lcall
sti
ret
in
incb
mov
add
add
mov
dec
or
add
addl
cmp
and
add
or
sub
and
add
mov
dec
push
inc
dec
jmp
jp
andb
push
mov
mov
push
xlat
xchg
add
leave
mov
mov
mov
push
fdivp
in
dec
mov
roll
jmp
leave
inc
fists
push
je
or
aad
and
mov
and
add
out
dec
mov
insl
and
sbb
pop
add
mov
leave
xchg
push
mov
pop
sbb
adc
cmp
jo
mov
insb
pop
ret
adc
lcall
add
je
subb
xchg
cwtl
push
orl
push
lock
pop
sbb
or
mov
push
popf
dec
test
or
int3
iret
sbb
sbb
ret
repz
push
add
or
lea
inc
andl
adcl
jp
inc
sbb
mov
ret
sbb
add
lock
dec
aaa
add
into
repz
out
pop
and
ret
add
push
adc
ljmp
lock
pop
cmp
nop
call
or
or
inc
imul
or
jo
cwtl
pop
or
or
orl
addl
add
mov
push
test
push
inc
mov
scas
scas
jo
sub
sbb
repz
xchg
mov
loop
subl
test
mov
pushf
cmp
popf
or
shrb
ljmp
movsb
inc
rorl
xchg
cltd
lcall
add
add
inc
sub
mov
mov
movsl
test
add
out
in
dec
and
test
or
sbb
shll
cmpsb
push
dec
loopne
gs
mov
push
sub
cli
adc
mov
shll
inc
clc
lock
aaa
int
nop
imul
mov
add
sbb
pushf
jp
les
mov
push
into
loopne
stos
fisubrs
rcll
ljmp
aam
push
add
xor
inc
pop
mov
loope
pop
push
add
mov
jno
jb
repz
cmp
testb
cmp
iret
xor
cmp
or
lods
pop
jo
xchg
mov
popa
and
or
jb
xor
mov
pop
sarl
jno,pt
enter
add
lock
mov
lods
adc
jne
cwtl
sbb
sbb
test
cmp
cs
mov
dec
aam
and
add
inc
movsl
les
xor
mov
fiaddl
nop
and
test
outsl
bound
add
cmp
unpcklps
ret
ficoml
add
cmpsb
sbbb
rcrl
cmp
mov
sub
sub
xor
sub
sub
dec
insw
fdivrl
cmp
int
mov
incl
push
or
test
inc
pop
sub
push
cmp
loope
lret
ljmp
into
fidivs
mov
fcomps
sbb
dec
mov
gs
or
mov
xlat
xchg
cmp
scas
push
mov
insb
mov
or
xor
shll
mov
rolb
icebp
jno
scas
jle
sub
mov
jecxz
test
add
in
pop
xor
jg
push
inc
add
jne
add
popa
mov
push
push
cmp
jecxz
sub
std
incl
cmp
sub
stc
inc
sbb
inc
rorb
mov
mov
mov
and
jp
cs
leave
aad
inc
mov
in
jge
aad
mov
js
or
pop
ret
movsl
sub
jecxz
inc
add
mov
mov
mov
fs
push
int3
sbb
lock
notb
addl
mov
xor
pop
popa
ljmp
add
cmp
or
or
xlat
or
lret
push
xchg
push
inc
stos
or
cltd
push
pop
jmp
push
cli
negb
mov
aas
leave
add
aad
popf
jo
mov
push
push
pop
aad
xchg
mov
dec
dec
in
mov
outsb
les
imul
dec
in
push
jmp
jb
sarl
mov
cmp
ds
inc
nop
lods
orl
sbb
inc
sarl
sbb
mov
cmpsl
daa
testb
push
pop
inc
inc
jae
push
cmc
jmp
and
dec
shr
cwtl
ljmp
inc
jmp
in
shlb
inc
imul
or
stos
or
aam
pop
jb
sbb
or
push
sbb
add
add
push
push
dec
push
ljmp
cmp
push
dec
in
sub
adc
mov
jle
and
mov
rcrb
cs
sub
cmp
fisttpl
sub
cmp
les
ds
push
pop
fstl
push
shlb
push
xlat
negl
rcll
mov
xchg
fld
cmp
and
addb
shl
call
test
loope
fwait
pop
or
jnp
lea
rorb
ja
cmp
add
or
enter
adc
push
inc
sbb
cmp
in
sbb
add
push
aam
or
iret
push
add
call
push
mov
push
push
and
pop
xlat
push
inc
or
sbb
leave
cmp
scas
js
or
sbbl
rclb
call
push
add
or
mov
inc
xor
mov
cld
or
mov
mov
lds
out
cmp
adc
fadds
push
and
mov
sbb
js
sub
push
jmp
or
adc
pxor
mov
add
enter
sub
xchg
push
lds
push
mov
pusha
or
jmp
pushl
adc
ficompl
xchg
sbb
and
movsl
pop
mov
bound
mov
loopne
sbb
add
lcall
sbb
or
rcrl
daa
mov
out
lea
rclb
xchg
add
pop
pop
xor
sub
movsb
jmp
add
mov
je
xchg
mov
loope
lret
inc
scas
clc
lret
sti
sub
push
xchg
and
popf
and
adc
jmp
ret
push
dec
mov
repnz
cmp
push
add
lea
icebp
out
rolb
inc
mov
and
rorb
adc
dec
into
add
or
mov
mov
and
adc
add
mov
jo
dec
negb
inc
call
pushf
mov
nop
sub
add
rclb
add
xchg
sub
push
cmp
shr
int
or
mov
pop
inc
xor
in
cwtl
or
inc
movsl
xor
xchg
inc
test
adc
push
movsl
sbb
sub
and
push
rol
push
mov
add
rclb
int
mov
sarb
pop
lods
setge
adc
cmp
test
leave
ss
lret
add
rcl
inc
dec
int
lcall
mov
das
rol
adc
add
stos
shlb
dec
pop
test
add
pop
push
mov
mov
adc
push
fdivs
stos
dec
xchg
mov
add
icebp
stos
mov
push
push
push
inc
xor
add
push
sbb
cmp
cwtl
or
add
rclb
fcoms
sbb
jb
xchg
or
ret
push
ret
roll
int3
adc
mov
mov
stos
sbb
pushf
adc
test
push
rcrl
push
and
inc
movsl
sbb
repz
and
jae
push
push
add
mov
lahf
rcrl
push
push
mov
lock
cmp
aaa
ret
icebp
mov
scas
push
jp
icebp
lret
rolb
inc
lock
mov
fisttpll
shl
push
inc
dec
jp
sub
sub
dec
dec
add
pop
fisubrs
adc
cs
xchg
jecxz
inc
add
std
cwtl
stos
hlt
or
dec
jb
push
enter
xor
sbb
fimull
sbb
insl
and
push
mov
mov
inc
in
mov
cmp
adc
imul
or
push
rclb
or
pop
pusha
fldcw
jae
or
and
sbb
mov
pop
mov
call
or
jl
inc
test
adc
mov
dec
lock
cmpsb
sbb
in
adc
jbe
ljmp
test
and
aas
mov
and
insb
dec
push
add
jle
addl
xchg
sub
sbb
aad
into
add
int3
adc
push
aad
inc
mov
mov
lods
sub
adc
leave
mov
and
call
loopne
es
xor
push
push
mov
inc
cld
inc
ja
inc
or
test
fldl
fidivrl
loopne
iret
sbb
mov
insl
adc
or
mov
adc
cmp
sahf
jmp
or
mov
add
ja
mov
icebp
ret
lret
mov
sbb
and
and
enter
push
adcl
inc
les
jge
xchg
pushw
add
call
mov
sbb
adc
lds
rcll
mov
inc
lods
xor
out
xchg
jmp
sbb
sub
push
shl
fsubrs
jb
xor
cmp
int3
ljmp
push
mov
out
subb
jp
or
lock
aam
dec
xchg
movb
mov
and
cmp
js
and
lahf
push
mov
pop
push
pop
pop
insb
shl
jb
mov
adcl
insb
or
addl
adc
sub
int3
or
lods
adc
add
pop
lock
mov
sarb
mov
pop
mov
adc
js
jle
stos
add
push
je
inc
les
repz
push
or
adc
loope
das
pop
or
int
adc
ljmp
and
push
adc
pushf
shrl
or
dec
push
andb
push
mov
sbb
add
adc
scas
loopne
outsl
sbb
push
add
push
mov
cmc
xchg
insb
ljmp
mov
mov
mov
add
add
xchg
loop
adc
loopne
dec
hlt
sub
mov
fstpl
test
aam
pushf
mov
mov
lock
daa
adc
mov
mov
scas
into
mov
addb
jae
mov
mov
insl
push
mov
adc
je
mov
sbb
jmp
inc
and
mov
ds
out
std
mov
push
mov
lcall
jne
mov
push
inc
add
adc
addl
mov
add
mov
adc
int3
push
mov
push
rorb
sub
xchg
fstpl
sub
movsl
ret
cmpsl
repnz
stos
pop
push
jge
add
mov
enter
add
dec
shrb
mov
cwtl
sub
add
inc
scas
add
fadds
rol
ret
inc
and
adc
inc
dec
jb
sbb
orb
stos
cmp
mov
sub
jo
loopne
nop
pop
ret
loopne
mov
xor
adc
add
adc
test
icebp
mov
sbb
cli
stc
push
rolb
into
cmp
scas
pop
push
sbbb
add
fwait
into
sbb
rsm
add
fstpl
cmp
hlt
sub
xorb
mov
sbb
subl
mov
test
rcl
subl
roll
adc
adc
xchg
add
addb
xchg
stos
xchg
stos
outsb
inc
rcr
and
hlt
adc
mov
lock
loop,pn
repnz
push
rolb
mov
xchg
incb
pusha
cwtl
mov
rclb
mov
inc
mov
xor
call
push
mov
push
jb
pop
mov
testb
pusha
aas
popf
inc
out
mov
and
scas
sbb
sbb
and
rolb
dec
jo
dec
addr16
or
stos
imul
outsl
jae
adc
pushf
pop
adc
xchg
dec
xor
and
int3
xchg
push
adc
arpl
popa
mov
mov
icebp
cmp
add
xchg
mov
lret
xchg
mov
mov
xchg
sub
dec
mov
fists
dec
inc
pop
mov
xchg
js
bound
aad
mov
inc
add
clc
rcrl
dec
sbb
jo
out
add
fstpl
xor
push
or
xchg
push
dec
dec
movsl
loopne
add
lret
cmp
inc
add
subb
lret
adc
sar
rorl
cmp
scas
cltd
and
adc
xor
mov
in
les
and
push
add
out
mov
lahf
es
and
xor
add
into
scas
loopne
dec
repnz
adc
mov
xor
std
les
repnz
inc
mov
repnz
adc
xchg
lock
mov
daa
sahf
pop
push
lret
cltd
mov
pop
cs
pusha
inc
inc
jnp
xor
aam
leave
adc
sbb
add
enter
mov
repz
push
es
lret
add
or
add
repnz
xchg
stos
shrb
je
pop
dec
in
xchg
adc
add
pusha
mov
push
pop
lds
jo
add
lret
adc
pushf
or
mov
fwait
xor
add
push
push
or
dec
cs
or
xchg
adc
ret
push
jo
dec
or
adc
mov
or
test
das
mov
and
xchg
jno
leave
ficompl
arpl
insb
push
or
movsl
and
or
xor
mov
loop
and
pop
std
in
stc
or
loope
cmc
pop
or
faddl
push
fs
sbb
jo
cmp
xchg
add
xor
push
jecxz
js
or
stc
imul
pop
jno
adc
push
shlb
mov
loopne
call
and
movsl
xor
movsb
or
pushf
mov
call
pop
push
inc
cli
pop
mov
pop
xor
cli
adc
addb
adc
push
mov
sbb
out
sub
push
jmp
addb
loopne
pop
addb
mov
mov
sub
loope
in
icebp
sahf
pusha
and
sub
call
insl
rclb
sbb
mov
mov
subl
adc
xor
inc
xor
int3
add
add
and
sub
cmpsl
jae
stos
addb
xor
lock
ljmp
sbb
mov
cmp
lods
jecxz
push
iret
adc
popf
inc
add
and
std
sahf
add
mov
dec
hlt
pop
mov
adc
push
mov
unpckhps
mov
push
xor
or
cmp
sbb
das
inc
shlb
adc
jge
cmp
add
or
push
stc
int
mov
rclb
aad
int
lds
add
lret
fdivrs
sub
dec
xchg
pop
fsubrs
pop
add
add
arpl
cmp
lcall
push
arpl
inc
mov
shrl
xchg
xor
xchg
in
shlb
sub
mov
pminub
add
add
mov
movsb
add
adc
add
push
jmp
mov
mov
imul
adc
cwtl
in
push
pop
rorl
xlat
adc
or
and
enter
ret
aad
push
and
push
lock
inc
addb
inc
stos
jge
mov
test
sbb
mov
data16
sub
inc
adc
or
inc
fcompl
loope
fbstp
shr
inc
pop
inc
ljmp
ljmp
jae
stos
outsb
shrl
aas
ja
add
sarb
mov
insb
adc
lock
push
jae
or
add
leave
aam
icebp
lret
push
icebp
cmp
arpl
bound
mov
pushf
es
add
mov
and
roll
cltd
mov
lods
jmp
inc
mov
jmp
ss
xor
jge
test
pop
inc
add
inc
xlat
cli
sbb
xchg
xor
push
and
cmp
add
pop
adc
adc
xor
inc
inc
mov
adc
pop
mov
push
xchg
jp
jb
cmp
fisttpll
xchg
ret
lds
adc
add
mov
insl
test
bound
push
sbbb
add
push
xchg
addl
and
icebp
aam
mov
mov
cmpsb
inc
inc
js
inc
arpl
add
loope
sbb
xor
or
xchg
jmp
call
adc
hlt
xor
inc
add
fwait
lock
sbb
movsb
inc
dec
add
loop
jp
mov
mov
add
push
push
xchg
stos
or
sbb
adc
movsb
mov
call
mov
movb
push
dec
inc
sbb
cmp
adc
icebp
or
inc
cmp
mov
xor
xor
bound
cld
mov
mov
or
dec
insl
or
xchg
mov
dec
push
and
inc
out
mov
dec
sbb
aad
test
mov
xchg
lcall
stos
adc
int
mov
sub
jb
push
pusha
cmpsb
add
ret
in
add
or
xorb
test
sbb
jp
cmp
movsl
mov
push
loopne
push
pop
scas
add
and
mov
push
mov
add
push
decb
add
adc
xor
or
add
imul
pop
iret
or
jae
je
push
sbb
in
and
inc
loope
call
push
test
dec
push
or
or
inc
cmpsl
pop
rcr
popf
fadds
xor
push
dec
sub
idiv
leave
inc
inc
xor
mov
adc
mov
fimull
into
mov
and
mov
lods
adc
sub
repnz
adc
jno
adc
and
out
pop
das
out
push
mov
mov
mov
lock
and
mov
push
inc
repnz
into
fadds
inc
cmp
loope
jl
bound
enter
push
dec
jns
mov
push
lock
xor
jecxz
in
rorb
call
push
icebp
and
loop
popa
add
adc
repz
lret
sbb
push
cmp
sub
jns
rcrl
cmp
out
mov
and
add
push
cmpsb
push
rcrl
inc
es
push
sahf
ljmp
adc
and
push
xor
xor
imul
lods
sbb
adc
xchg
popf
adc
pop
icebp
inc
jb
test
divl
andl
jnp
xor
pop
mov
sbb
sbb
pop
jge
cmp
add
mov
mov
and
sbb
int3
cmpl
xor
pop
decl
leave
xchg
rclb
outsb
mov
adc
pushf
aad
or
lods
or
cli
pop
and
aam
sub
pushl
or
sbb
jnp
xor
mov
jbe
push
xor
ljmp
out
and
nopl
bound
pop
add
push
rcll
test
cli
test
xor
pop
xchg
sbb
aaa
push
repnz
inc
mov
jno
add
cld
mov
js
call
sbb
rclb
test
mov
roll
sub
push
and
xor
test
test
adc
mov
adc
push
int3
loop
and
sub
push
pushf
cmpsb
and
jb
push
push
data16
add
sbb
stos
rolb
test
add
or
test
in
sub
mov
shl
aad
mov
or
daa
adc
pop
push
ja
mov
repz
mov
jo
sar
push
adc
sbb
sbb
faddl
mov
stos
clc
adc
movsb
arpl
notb
add
xchg
loop
mov
ja
xchg
ss
xchg
adc
movsl
push
mov
pop
adc
pusha
icebp
mov
add
fsubrs
sarl
or
push
sti
adc
push
or
xchg
fisttps
mov
loop
shrl
sbb
leave
xchg
add
push
or
or
push
mov
mov
inc
addb
xchg
xorl
jo
sahf
xchg
mov
xchg
sbb
icebp
xchg
push
int
mov
mov
mov
or
dec
push
sbb
push
mov
xchg
sbb
cmp
jl
push
pop
adc
sbb
sub
test
push
inc
push
mov
or
pop
les
sbbl
std
inc
inc
inc
fs
adc
push
pusha
dec
rcr
cmp
adc
push
add
jle
sbb
lret
lret
and
shl
sbb
out
mov
mov
mov
sbb
dec
inc
aas
push
sbb
sar
dec
fldt
push
aam
or
rol
mov
testb
pop
call
ret
cmpl
xorl
jb
mov
push
mov
fcoml
push
add
clc
ja
enter
or
cmp
mov
adc
lret
inc
jecxz
loop
sub
push
je
sbb
add
shrl
test
enter
shrb
pop
jo
insl
mov
roll
stos
or
test
push
or
inc
rol
adc
dec
jne
ss
int
gs
nop
mov
lcall
mov
in
lcall
sbb
mov
ret
cmpl
push
ljmp
mov
adc
gs
es
scas
sbb
pusha
jmp
mov
cmpsl
clc
mov
or
pop
cmpl
ror
mov
dec
add
ds
mov
jmp
and
inc
adc
rclb
mov
jp
inc
lds
mov
iret
add
cmp
pop
imul
mov
add
subl
push
sub
add
cmpsb
lcall
cmp
rolb
or
mov
nop
ret
ret
stos
adc
xchg
cmovne
add
inc
push
addl
or
lahf
out
or
mov
and
gs
inc
cmpsb
ljmp
sbb
ljmp
outsl
adc
adc
jno
or
or
orb
xchg
lea
or
mov
jo
push
scas
or
xor
dec
add
adc
xor
pop
push
jecxz
add
addl
or
xor
inc
insb
addl
shrl
cli
adcl
stos
test
jecxz
jl
add
fwait
adc
and
stos
and
cmpl
int3
mov
push
lds
jnp
in
ja
cmp
dec
pop
jno
mov
clc
or
sbb
mov
add
cmp
jmp
mov
in
mov
shll
scas
or
mov
rorl
hlt
sahf
pop
mov
fidivl
xchg
gs
movsb
mov
or
cmp
shlb
test
push
pop
add
jmp
xor
mov
mov
xor
or
pop
inc
sbb
fsubl
ss
push
cmpsl
add
sub
and
lcall
insb
xlat
pop
push
sub
or
mov
push
rol
jne
xchg
jnp
adc
lret
push
mov
xchg
mov
icebp
arpl
push
lds
and
ja
lret
jb
sbb
dec
push
pushf
sahf
cmc
outsb
enter
fwait
push
inc
inc
pop
and
xor
jecxz
and
add
cmp
adc
arpl
cli
sub
icebp
sub
sbb
or
push
popa
or
add
add
lret
pop
adc
test
inc
push
mov
rorl
aam
enter
ret
pop
cwtl
fcomps
fcoms
jecxz
addr16
and
or
popf
mov
push
mov
xor
lret
adc
and
inc
pop
mov
or
popl
js
push
xor
jo
ljmp
pop
push
cmpsb
sarb
sub
mov
rorl
inc
inc
sub
xchg
arpl
push
push
xor
pop
or
in
test
or
gs
loopne
pop
or
adc
cmp
sub
mov
push
in
push
and
fwait
push
mov
stos
mov
add
mov
cmp
cmpl
push
jns
mov
pop
sbb
mull
mov
push
sbb
les
js
popf
add
enter
pusha
sub
stos
jmp
icebp
xor
scas
ja
push
into
aad
test
push
xchg
lea
pop
cmp
repnz
or
xchg
inc
inc
push
push
dec
outsb
pushf
or
mov
cmp
sbb
xchg
ficompl
and
aam
mov
loopne
inc
jo
add
jbe
and
mov
add
inc
inc
lods
repz
ror
or
dec
nopl
insb
lock
clc
inc
xchg
sub
mov
and
test
push
mov
call
rorb
inc
lock
pushf
lahf
and
cwtl
outsb
jmp
jmp
jge
pop
xchg
aas
mov
test
jne
leave
std
leave
fsubr
pop
fwait
pop
add
xor
mov
outsl
mov
fisttpl
gs
sbb
stos
clc
pcmpgtb
mov
add
scas
cs
movsb
push
push
push
sub
push
cwtl
inc
pushf
testb
je
mov
pop
cld
mov
aam
add
pop
sbb
and
and
push
dec
mov
inc
add
sti
or
push
adc
pop
pop
ret
mov
jne
out
mov
cmpl
push
pushl
mov
mov
inc
das
and
sti
fs
pop
and
hlt
in
inc
call
jo
cmp
lds
add
add
ret
push
xchg
scas
sub
or
std
fnstsw
adc
cmp
jne
outsl
lahf
xor
sbb
sub
mov
ja
negl
mov
enter
les
mov
and
or
jno
pop
jb
mov
pushf
jns
mov
and
pop
cltd
sbb
jns
push
jmp
out
out
pop
je
or
repnz
aas
push
aam
cmpsb
insb
xor
mov
and
enter
xor
mov
adc
push
jo
push
cmp
jge,pn
or
pushl
or
popa
sbb
pop
je
outsb
mov
mov
add
sti
add
fcmovnbe
insl
sbb
sub
adc
daa
loop
dec
push
mov
testb
cld
mov
mov
mov
div
out
push
jne
cmc
mov
pop
pusha
push
fidivrs
lea
movsb
imul
jle
cld
fs
and
sbb
loop
std
inc
sti
mov
mov
jle
cmp
movl
fimuls
cmp
cmp
out
ds
lea
push
cmp
pop
push
xor
rcrl
jo
mov
js
pop
jmp
call
mov
sbb
mov
jmp
xor
leave
mov
loopne
or
aam
cmp
push
xorb
cmp
add
inc
jae
cmp
jne
out
adc
cmp
or
movsl
jmp
call
std
call
cmp
cmp
jne
mov
inc
pop
je
test
std
or
mov
das
insb
stos
mov
jmp
cmpb
fdivrp
mov
or
jbe
inc
or
ja
xor
out
mov
pop
add
jmp
fstpt
sbb
pop
sub
mov
lock
adc
jb
pop
lea
idiv
call
adc
pop
cmp
mov
pushl
or
cmp
cmp
push
cmp
aas
dec
and
cmp
jecxz
lret
push
das
push
cs
pushl
or
pop
in
mov
pop
add
aaa
jne
pop
incl
or
add
sbb
scas
insb
mov
push
mov
popa
mov
add
push
push
ja
dec
clc
mov
mov
dec
mov
mov
push
add
lods
aam
cld
push
push
push
lahf
arpl
ja
insl
fmuls
mov
or
daa
and
push
push
push
mov
xor
pop
movsb
pushf
fidivl
addr16
hlt
mov
sbb
ficoms
ficomps
add
jne
jecxz
or
add
adc
jle
aaa
inc
mov
adc
fwait
div
or
inc
mov
inc
cmp
sub
subb
pop
fdivrp
test
add
xor
mov
mov
inc
inc
or
jmp
or
andb
inc
inc
fistl
sbb
add
jae
outsl
leave
testb
and
lret
pop
or
or
jne
dec
mov
adc
rcl
jmpw
mov
inc
sub
pusha
data16
icebp
pop
enter
adc
add
pop
loope
rcl
test
pop
jne
inc
inc
jmp
pop
outsb
xor
xchg
sub
ret
add
or
idivb
and
test
shlb
mov
xchg
ret
shr
mov
dec
test
push
mov
inc
mov
jne
andb
push
outsl
or
pop
je
test
add
sub
loop
pop
sbb
inc
add
inc
fdivs
xor
push
mov
push
inc
daa
mov
pop
sti
pop
mov
and
sub
inc
dec
loopne
ffree
or
les
ret
repz
lea
ds
jnp
aam
sub
inc
addr16
int3
ret
pop
ljmp
bound
clc
test
or
mov
data16
daa
ret
push
inc
outsl
mov
inc
inc
or
jne
push
repnz
cmp
mov
pop
jmp
mov
mov
xor
mov
je
sbb
push
shll
mov
and
adc
jg
outsb
sbb
add
mov
jmp
leave
pop
mov
movsl
test
je
pusha
mov
je
inc
cmp
add
sub
inc
mov
push
into
stos
sti
jmp
lea
lds
push
cmp
mov
jmp
pop
pop
dec
in
pop
fwait
sub
or
or
sbb
test
xchg
mov
and
pop
mov
add
andl
inc
add
mov
add
mov
lock
jg
ss
in
or
cmp
or
out
movsl
mov
add
push
clc
jl
pop
andl
mov
aas
jbe
idivb
xorl
add
sbb
pusha
adc
xor
pusha
inc
mov
jmp
das
arpl
roll
jmp
adc
lods
call
dec
cld
inc
mov
cmp
fsubrs
lcall
push
and
test
rcrl
fimuls
sbbl
or
add
inc
cmp
jl
loop
mull
cmpl
lea
jne
in
pop
lods
push
ss
das
enter
jmp
mov
dec
neg
sbb
xchg
cmc
or
jp
test
pop
push
jo
and
lods
push
cli
push
orb
or
jne
push
mov
add
addb
jl
dec
cmp
cmp
ret
pop
test
insb
xchg
jbe
adc
mov
je
inc
cmp
jbe
sub
lcall
sbb
negl
fisttpl
adc
pushl
push
sbb
rcrl
add
jne
inc
push
xor
adc
data16
data16
les
or
mov
and
insb
es
xchg
xchg
adc
xchg
mov
outsl
pop
jge
add
push
add
push
mov
push
in
lret
incl
xlat
test
scas
dec
data16
sub
popa
test
pop
insb
xor
nop
ret
int3
add
mov
lret
int3
rcrb
sbb
mov
sub
testl
js
je
ljmp
rorb
adc
pop
movsb
pushf
sti
inc
aam
add
mov
mov
mov
cmp
and
outsb
or
mov
jne
push
fldt
call
ret
popl
dec
orb
add
pop
pop
cli
push
push
or
push
xchg
mov
mov
sbb
fcmovnbe
or
dec
add
dec
ljmp
pop
ret
push
inc
xor
pop
inc
xor
shrb
or
lcall
mov
push
mov
adc
out
cli
and
or
mov
icebp
shll
mov
je
push
push
lea
testl
pop
inc
or
arpl
notb
sbb
mov
sbb
pop
shrl
mov
into
jne
add
push
or
or
sbb
mov
fucomi
sbb
jmp
pop
fidivrl
push
push
xchg
mov
cmp
push
add
push
and
mov
jecxz
jns
push
sbb
mov
add
fcomps
mov
loop
adc
inc
or
aas
test
xor
mov
add
inc
inc
mov
push
ficomps
icebp
shl
cmp
insb
es
fstps
cltd
call
jnp
adc
test
jne
icebp
incb
pop
lcall
into
insl
xor
adc
push
xchg
in
mov
push
pop
adc
mov
mov
cmp
sub
push
mov
clc
or
add
mov
loopne
lcall
jbe
cmp
adc
cmp
ss
pop
rclb
mov
sbb
adc
mov
and
aaa
pop
mov
adc
mov
insb
sbb
push
enter
test
jl
push
dec
nop
cmpb
call
pop
fmull
lods
push
mov
cs
das
cmp
imul
aas
jne
push
push
pop
clc
call
pop
ja
es
mov
add
add
outsb
pop
lods
ficoml
adc
sbb
pusha
or
pusha
call
add
push
mov
cwtl
mov
adc
inc
jne
pushf
jb
psraw
adc
mov
mov
add
inc
sbb
xchg
inc
sbb
mov
xchg
push
lods
or
cwtl
pop
or
xchg
mov
or
mov
pop
mov
je
inc
popf
roll
call
fisubrs
pop
cmp
popa
and
andl
jmp
cmp
rep
stos
mov
xchg
cmpsl
jecxz
jmp
cmpb
mov
sbb
arpl
cmp
jbe
inc
decl
sbb
adc
xchg
pop
test
ljmp
outsl
fdivrl
add
lea
dec
je
mov
into
call
add
cli
xchg
ja
outsl
dec
adc
mov
inc
inc
adc
inc
insb
xor
cmp
sbb
jmp
jb
fs
cmpsl
lods
lods
fisttpll
movsb
adc
das
mov
mov
sti
mov
shll
pushl
aas
jge
shlb
or
xchg
jb
push
fcompl
bound
sub
jmp
mov
pop
add
push
stc
in
or
jo
inc
xchg
outsl
pop
add
jmp
insl
adc
daa
xchg
or
jnp
xor
inc
sub
dec
cmp
cmpsb
fistl
nop
cld
mov
adc
dec
sub
push
cld
rorl
inc
orl
pop
cmp
push
mov
and
or
push
jno
test
mov
arpl
call
xchg
mov
movsl
mov
cli
cwtl
cmc
arpl
sarb
mov
jb
mov
movb
and
aaa
fmuls
inc
pop
mov
out
push
mov
sub
and
mov
shr
das
mov
xchg
and
rep
inc
inc
mov
xor
rcrb
int
ret
cmpsb
push
in
cli
lea
push
imul
insb
mov
mov
std
sbb
mov
xchg
frstor
or
xchg
add
dec
and
je
movb
lea
test
push
add
adc
nop
rclb
fdivrl
jns
je
and
loope
outsl
mov
add
test
jb
pop
mov
jbe
pop
dec
enter
mov
sbb
popa
jb
jp
push
and
and
dec
dec
mov
and
push
inc
in
pop
enter
pop
pusha
sbb
jmp
mov
into
mov
jecxz
push
sbb
push
fmull
pop
push
insl
aad
mov
int3
aaa
jg
push
fistps
push
movsb
and
ljmp
test
add
add
cmp
jne
lods
js
decb
jle
lock
aaa
mov
test
call
test
je
test
pop
lods
push
add
int
pop
pop
fisubrs
pop
jmp
add
jmp
std
jmp
cld
pusha
outsl
ficompl
lods
or
sbb
inc
loop
mov
inc
mov
cld
pusha
out
jmp
mov
fsubl
sub
outsb
imul
test
daa
test
mov
inc
insl
cmp
pop
mov
movb
or
mov
js
aad
dec
not
adc
jl
loopne
and
add
mov
mov
int
adc
or
jae
ficomps
xor
sub
jp
or
pusha
or
mov
pop
test
inc
fcoms
inc
out
jnp
push
into
lock
add
and
fs
js
imul
adc
lds
rol
jmp
cld
jle
mov
aad
pop
dec
adc
shrl
fcomi
in
jbe
clc
jb
mov
jg
outsb
lods
and
and
rep
jmp
add
jb
sbb
inc
inc
loopne
pop
test
pusha
int
jae
push
lea
aaa
loop
mov
and
mov
mov
das
mov
mov
mov
add
mov
pop
mov
sbb
lea
sub
add
add
popf
and
inc
aas
mov
cmpsb
imul
cmpsb
stc
outsl
lcall
in
inc
in
lcall
lock
popa
lcall
ret
or
push
lock
dec
cmp
popf
or
shll
mov
inc
or
lea
jl
cld
fdiv
xchg
inc
jg
or
cmpb
in
adc
fldenv
rorb
sahf
pushf
sbb
sub
sub
je
fwait
jne
add
insl
add
add
jne
outsl
add
dec
push
mov
dec
or
xchg
pop
mov
int3
out
add
mov
fisubs
sub
rol
pop
sbbl
dec
xlat
jg
add
aam
in
xor
dec
in
hlt
and
xchg
sbb
dec
shll
adc
xor
shll
or
or
sbb
add
xor
sub
dec
mov
mov
jae
adc
mov
scas
add
ja
jne
ja
ljmp
and
daa
push
fiaddl
push
jne
push
or
xorl
jge
outsl
or
inc
push
jl
cmp
jmp
add
mov
pop
js
mov
hlt
cmpsl
xchg
and
push
mov
nop
and
adc
ljmp
addb
rolb
addr16
mov
or
and
int
insl
test
jnp
imul
sub
add
loopne
mov
jbe
or
jp
cld
push
shr
aaa
outsb
loop
jl
cld
imul
jge
mov
xchg
xchg
sbb
dec
dec
or
fistpll
add
clc
jne
rcrl
or
iret
jbe
insb
outsl
mov
dec
adc
add
cwtl
call
and
mov
dec
ja
jg
add
xlat
and
decb
sub
cmp
xor
insb
andl
loope
popf
jnp
mov
adc
jns
push
in
int
mov
add
add
or
or
icebp
aas
jnp
pop
aad
fst
das
mov
mov
cmp
adc
pop
cmp
cmpsb
jbe
repz
mov
inc
ds
jbe
cli
mov
pusha
fistl
push
mov
xchg
cmp
ljmp
popa
rcrl
shlb
xchg
into
mov
dec
push
mov
add
aam
pop
or
xchg
loope
dec
adc
cmp
pop
mov
pop
testl
das
push
lret
add
mov
pop
add
jge
paddd
mov
jae
fnstsw
inc
push
mov
jmp
or
jbe
sbb
sbb
sub
jnp
mov
and
add
or
mov
sub
push
cli
sbb
cli
call
mov
fisttps
scas
bound
loope
add
push
sbbb
imulb
call
pop
xor
shll
push
or
cmp
andl
push
paddd
or
dec
fidivs
inc
adc
cmpl
fsubs
cmpsb
insb
sub
jo
pop
adc
adc
hlt
in
or
xchg
lret
enter
decl
push
lea
push
push
push
mov
incl
xor
add
jmp
push
out
inc
mov
sub
xchg
add
data16
push
adc
sub
dec
pop
jbe
ja
mov
xor
push
sub
out
or
orl
jmp
es
and
pop
mov
push
or
jbe
or
mov
cmp
lret
jae
mov
cmp
sub
decb
iret
jne
clc
adc
lcall
ja
jne
mov
cmp
es
mov
out
jne
and
push
jnp
xchg
mov
or
aaa
jmp
es
sbb
out
inc
push
jmp
insl
jge
jnp
test
mov
xor
mov
aaa
loopne
lcall
jmp
test
mov
cli
dec
sub
ret
mov
mov
mov
push
push
push
fisttpll
push
in
or
inc
or
mov
jne
xchg
push
mov
sbb
lcall
or
je
mov
lods
pop
pop
pop
dec
jbe
push
pushl
mov
push
fs
test
jl
shl
inc
jmp
mov
fnsave
push
stc
inc
or
jg
jnp
incb
aam
orl
aam
cmp
fcompl
and
pop
push
and
jl
pushf
shl
gs
ja
in
and
mov
decb
jne
loope
ss
mov
xor
sub
mov
ss
jb
inc
mov
test
or
hlt
mov
clc
add
addr16
test
test
add
ret
xchg
outsb
xchg
push
decb
jge
les
imul
mov
cmp
add
or
das
sub
jge
dec
orb
jnp
mov
lods
sub
cs
mov
cmp
or
mov
jne
jle
mov
xor
lahf
mov
pop
mov
jne
pop
inc
movsb
scas
aad
fwait
dec
cmp
imul
in
inc
add
mov
and
pusha
lcall
xor
push
jb
inc
cmp
push
xchg
push
xchg
pushf
cmp
je
push
xor
mov
mov
loopne
inc
xor
xchg
mov
lods
xor
mov
je
push
adc
pop
and
push
sbb
bound
incl
lods
and
jl
and
mov
outsl
lds
bound
mov
shr
sar
inc
add
enter
fcmovnb
cmc
jno
inc
ret
aaa
imul
mov
inc
or
mov
mov
shl
in
fstp
jns
mov
addb
dec
es
mov
daa
jg
lea
sti
sub
lea
dec
repnz
hlt
lea
cld
lock
sti
in
inc
push
out
jmp
call
inc
push
jp
sub
jbe
push
add
mov
clc
xchg
es
ficompl
lods
lea
or
inc
xor
sahf
jecxz
inc
mov
or
pop
sub
cmpsb
or
mov
sub
push
lods
push
stos
leave
cmpsl
inc
push
ljmp
mov
fdivrs
mov
push
cwtl
out
mov
inc
je
adc
mov
add
dec
mov
mov
push
call
cmp
xchg
adc
add
sub
and
ror
add
roll
add
push
xchg
jp
push
mov
mov
push
jne
imull
push
and
pop
ljmp
jmp
inc
inc
sahf
sub
dec
je
adc
pop
jne
aad
xlat
sub
add
sbb
dec
fsubrs
pop
xchg
ficoms
xchg
popf
je
dec
adc
out
insb
sbb
cmp
sub
xchg
cmp
sbb
push
add
leave
mov
fisubrs
or
lods
lock
jne
cmp
sbb
push
pop
mov
rclb
push
or
std
outsb
add
pop
pop
jne
mov
test
pop
xchg
inc
sbb
mov
jo
inc
push
push
mov
pop
push
xor
stc
insl
sbb
pushl
jmp
ds
pop
and
sbb
sbb
inc
cmpsl
jo
adc
adc
xor
inc
dec
cmp
sub
pop
call
int3
jo
sbb
mov
pop
mov
pop
roll
fistpl
rcrl
mov
and
insb
ljmp
loopne
inc
push
aaa
and
push
mov
test
sbb
sbb
scas
mov
les
pop
push
jmp
lock
es
imul
cmp
je
push
dec
fsubl
mov
hlt
dec
in
sbb
rclb
mov
xor
inc
or
sbb
mov
jbe
add
aad
push
fidivl
inc
cwtl
lods
lea
daa
movsb
mov
call
or
push
xor
mov
pop
loopne
jne
bound
je
push
fs
outsb
out
xchg
addr16
mov
add
jmp
cmp
jo
mov
push
mov
mov
lods
cmp
or
adc
or
mov
xchg
repz
lret
sub
add
pop
add
popa
xor
mov
lods
insb
in
outsl
jns
lea
push
push
pop
push
push
movsl
clc
push
andb
xchg
inc
into
dec
push
mov
xchg
pop
xlat
sub
sub
add
pop
xor
xor
push
insl
dec
and
add
cwtl
sub
and
mov
mov
je
gs
mov
sbb
jl
loope
inc
pop
pop
push
int3
sub
or
testb
leave
loopne
pop
sbb
push
push
ds
clc
xlat
xchg
mov
adc
or
loopne
inc
lret
and
lahf
add
sub
ret
int3
add
sbbl
pop
mov
or
stc
adc
neg
cli
push
sub
addr16
and
add
adc
ficoms
lret
je
rep
cmp
and
pop
cmpsb
dec
mov
data16
mov
pop
test
dec
test
nop
add
add
mov
sbb
xchg
aas
dec
shll
das
add
or
and
cmp
hlt
in
mov
or
lock
nop
adc
jo
xchg
adc
nop
rolb
inc
je
not
nop
or
or
add
mov
xchg
xchg
je
sub
pop
push
test
mov
xor
rcll
adc
inc
mov
jne
loopne
idiv
mov
lahf
push
cmp
push
lret
jb
sub
jle
test
pop
jae
fcmovnb
mov
mov
stc
out
cmp
sbb
xchg
enter
sbb
sbb
push
sbb
sbb
clc
hlt
loopne
sbb
sbb
in
or
rcl
add
sub
cmp
mov
jb
outsb
je
insl
and
jb
sti
lods
push
sbb
xchg
push
push
adc
cmp
push
add
dec
inc
add
inc
outsl
mov
lods
adc
push
xor
cmp
sub
insb
sti
imul
das
je
and
imul
push
iret
aaa
daa
aaa
outsb
outsl
je
add
addr16
divb
popa
arpl
data16
outsl
ja
cmp
and
aaa
ss
fs
jo
jb
jbe
jb
jne
jle
imul
movsl
arpl
and
insb
sub
enter
pop
sub
mov
pop
fistpl
push
fsub
pop
fstp
pop
jbe
cmp
outsl
jo
pop
xor
dec
push
insb
fisttpl
fs
sub
or
outsb
lods
inc
and
gs
xchg
sbb
aaa
insl
jne
lods
je
ret
insl
mov
arpl
mov
fs
fistps
outsb
lods
add
jo
addr16
insl
pop
inc
popa
imul
insl
ss
xor
dec
adc
and
sub
repz
jne
jae
xor
fdivs
outsb
outsb
subb
cmp
fs
dec
sub
or
adc
jae
inc
sub
and
mov
imul
sub
sbb
push
and
push
aam
mov
xchg
lods
ret
add
int
sub
insb
ja
sbb
je
popa
xor
add
push
scas
jne
adc
ljmp
cmp
fs
jae
addr16
outsl
js
add
jae
xor
cs
jmp
jne
sbb
xchg
add
cmp
xchg
orb
sub
add
xor
sub
addr16
add
js
aaa
pop
add
dec
xor
add
sbb
xor
add
and
xor
je
add
pop
js
or
pop
xchg
lret
and
sbb
add
add
in
inc
or
or
xchg
daa
dec
sahf
cwtl
adc
sbb
repnz
call
sbb
daa
dec
sahf
push
js
jns
jp
loope
leave
and
sbb
or
add
dec
cmpsl
adc
sub
xor
clc
pop
add
das
xchg
cmp
movsb
add
jns
and
leave
mov
cld
inc
jle
cld
test
cmp
and
incb
inc
inc
xchg
push
mov
inc
scas
nop
mov
in
sbb
in
call
leave
outsl
ja
push
add
pop
pop
fisubrl
xor
xchg
fistpl
fcomp
loopne
cmp
jle
add
sub
inc
mov
jns
fs
sub
dec
add
nop
add
adc
nop
add
jbe
aas
addb
ret
inc
cmp
adc
add
inc
inc
mov
insb
push
sub
mov
dec
addb
mov
push
push
or
dec
outsl
fs
gs
popa
outsb
sbb
insl
add
popa
xor
out
jle
dec
outsb
outsw
adc
insl
insl
pop
dec
imul
push
gs
aas
or
insl
push
or
add
lods
cmp
pop
gs
xchg
std
xchg
cmp
jb
outsb
and
outsb
push
fisubl
jo
inc
inc
imul
add
gs
popa
insl
imul
inc
mov
cltd
jb
addr16
jl
or
imul
dec
sub
jbe
inc
inc
jns
pop
sub
test
or
clc
jne
adc
pop
fwait
adc
gs
ret
jo
pop
insb
jae
add
insb
jne
or
push
or
orb
mov
faddl
sahf
or
sbb
mov
push
mov
sbb
push
je
cmp
loop
sub
cmpsl
je
adc
mov
or
je
insl
push
data16
adc
sbb
push
out
or
fdivrs
or
dec
inc
dec
or
pop
xchg
push
gs
fs
add
jb
dec
dec
andb
mov
push
mov
push
mov
cmp
push
dec
or
enter
nopl
lods
sarl
fbstp
sbb
inc
inc
fs
in
nop
cmp
fisttpl
imulb
bound
xor
lods
adc
pop
rolb
or
xor
imul
xlat
fsub
test
mov
jae
or
fimull
dec
adc
outsl
inc
std
xcrypt-ctr
cmpsl
fldcw
jecxz
push
jae
outsb
arpl
jns
divb
pop
hlt
push
push
lahf
jbe
or
cwtl
std
dec
gs
repnz
sbb
xlat
jmp
adc
jo
add
test
decl
inc
add
add
inc
dec
add
insl
add
add
in
out
in
dec
lock
jg
dec
push
add
adc
add
lock
out
add
add
jno
cmp
sarb
cmp
push
add
cmp
dec
lock
addb
add
cmp
dec
add
jae
xor
add
mov
fstpt
lock
xor
lock
xchg
push
add
dec
mov
add
add
add
in
mov
fbld
aaa
mov
inc
scas
test
lahf
lock
ds
das
jo
mov
xor
fstp
cmp
sarb
bound
in
add
mov
mov
inc
cmp
adc
mov
jns
mov
dec
mov
outsb
mov
add
pop
mov
std
jg
add
lock
pushl
inc
cmp
inc
and
xchg
addl
mov
dec
mov
add
cmc
add
mov
insl
mov
xor
testl
lcall
mov
jle
popa
add
mov
lock
cmp
xor
push
fistps
sub
cmp
ss
mov
add
in
jg
jnp
dec
xchg
lock
add
aaa
lock
add
add
jg
movsl
test
xor
out
mov
addl
lock
add
inc
inc
dec
mov
inc
outsb
lock
xor
mov
outsb
mov
inc
sbb
aaa
scas
push
clc
jbe
lds
lea
sbb
jns
mov
xchg
jp
lock
add
jnp
addl
cmp
push
add
rcrl
mov
clc
lods
jo
or
ds
gs
jge
inc
pop
ret
pushw
mov
sarb
testb
dec
inc
enter
ss
inc
add
outsb
sub
xor
cmp
adc
sbbl
sbb
mov
add
dec
insl
sub
scas
mov
or
lock
adc
jno
add
mov
or
rorl
and
or
or
adc
pop
jg
or
or
push
push
push
test
cmovl
xor
inc
or
adc
or
incl
dec
inc
jecxz
xor
aas
push
adc
xor
pop
adc
and
push
xor
adc
outsl
fcmovnbe
sbb
sbb
cmp
pop
sbb
adc
sbb
sbb
in
or
or
inc
adc
or
adc
sti
and
adc
sub
xor
xor
mov
insl
mov
or
or
je
or
inc
push
in
lods
cwtl
add
push
outsl
mov
adc
or
push
movups
in
incl
lock
add
push
ret
sbb
scas
add
sub
sbb
add
dec
push
lahf
nop
mov
sbb
push
sbb
push
or
std
mov
jecxz
xor
or
dec
add
mov
or
pop
ret
notb
adc
push
fimuls
inc
cmpsb
lock
fistpl
adc
test
sbb
adc
out
in
bound
pop
adc
sbb
lcall
inc
pop
mov
sbb
xor
push
popa
negb
pop
adc
rcrl
push
add
cmp
add
add
xchg
jge
add
fmuls
add
adc
lock
add
repnz
add
cmc
dec
add
dec
loopne
jbe
push
or
pop
mov
add
cli
or
ljmp
or
xor
jnp
and
in
mov
inc
subl
dec
mov
das
movsb
js
push
repnz
mov
je
scas
mov
adc
jge
jbe
jge
int3
mov
add
mov
test
fldenv
jb
dec
outsb
push
push
clc
or
mov
add
es
xchg
xor
jae
or
data16
jb,pn
jb
jmp
dec
or
cmp
ja
shlb
inc
sbb
movsl
add
rcl
fadds
or
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
