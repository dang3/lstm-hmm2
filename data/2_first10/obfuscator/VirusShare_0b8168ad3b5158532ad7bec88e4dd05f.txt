push
in
xor
cmp
xor
add
test
sbb
scas
movb
inc
out
jecxz
cltd
addb
shlb
iretw
or
mov
out
dec
sar
daa
mov
into
je
adc
adc
fwait
or
jecxz
adc
inc
lds
or
test
mov
mov
push
dec
loope
pop
inc
and
and
daa
sbb
rcll
xchg
xor
xchg
add
shl
sbbl
jo
lahf
add
stos
pop
rorb
test
scas
mov
lods
aas
or
std
and
fadds
rcrl
popf
and
pop
psubb
push
cmpsl
mov
in
push
or
andl
sub
push
daa
jo
nop
xor
lea
or
int
pop
dec
push
mov
shl
call
punpcklwd
fistpl
or
popl
jae
xchg
in
or
test
pop
mov
pop
push
pop
jno
and
or
das
jno
and
stc
cmp
and
out
sub
cld
adc
mov
jne
aaa
push
popa
subl
dec
lgdtl
pop
pop
sub
mov
sub
shr
xchg
xor
xor
add
stc
pop
push
cwtl
sbb
push
jl
pop
sbb
scas
pop
adc
shlb
mov
mov
into
xor
xchg
pop
jns
ret
xchg
push
les
adc
leave
push
xor
pop
dec
mov
stc
lcall
das
movsb
push
stos
mov
mov
sbb
sbb
lea
and
or
add
lahf
call
sbb
mov
lcall
or
je
orb
sub
sub
add
sub
lretw
mov
inc
shll
cmp
and
ficomps
push
and
sub
add
fiadds
inc
scas
add
and
push
and
xorps
dec
inc
movsb
call
push
and
push
and
lahf
sub
clc
xor
cwtl
mov
mov
cltd
je
fchs
cwtl
hlt
cmp
subl
push
sbb
sbb
push
adc
ja
xor
mov
sbbl
call
xchg
ficoml
mov
cmpsl
in
mov
xchg
leave
ret
cmpsb
pop
dec
dec
shlb
test
lds
dec
sub
stc
adc
push
cmp
or
mov
pop
inc
xor
addl
adc
inc
cli
or
pop
arpl
aam
adc
lock
push
cs
mov
dec
dec
jmp
jo
add
std
add
xchg
xchg
shl
testl
outsb
sbb
pop
jmp
fcoml
shrl
cmpl
lret
psubsw
xor
mov
enter
jmp
or
xchg
add
or
cmpl
or
or
and
jp
and
loope
iret
xor
inc
add
insl
xchg
sahf
lods
and
aam
jmp
or
dec
mov
movsl
cld
inc
mov
dec
push
adc
adc
xchg
adc
mov
ret
pusha
sbb
add
dec
imul
sub
xor
add
xchg
adc
test
cwtl
mov
arpl
inc
or
test
mov
add
nop
out
sarb
and
or
mov
jg
xor
pop
jne
dec
add
pop
fists
popa
adc
shrl
daa
cmc
xor
sbb
inc
cmp
xchg
add
xor
jbe
mov
sbb
push
test
cmp
dec
mov
in
in
jl
jns
adc
pop
int
rcll
adc
xchg
ret
xor
or
or
cmp
pop
and
dec
mov
inc
or
or
bound
test
stos
sarb
xchg
inc
cmpsb
mov
mov
insb
inc
or
test
add
sti
es
popa
int
jg
daa
sub
pop
add
dec
mov
fs
cmp
pop
inc
loope
sub
dec
in
inc
xchg
and
test
mov
or
cmp
and
shrb
test
inc
or
cmp
sbb
cmp
rcrl
adc
inc
push
jl
cmpsl
inc
and
inc
sub
fiaddl
adcl
enter
dec
in
jbe
ret
mov
inc
js
jbe
add
inc
mov
mov
imul
filds
jnp
sbb
xchg
or
aam
jge
daa
cs
push
jmp
push
inc
adc
and
sub
add
ds
or
into
data16
movsb
add
lods
das
cltd
or
in
insb
add
arpl
jecxz
sbb
mov
mov
addl
dec
stos
inc
lret
adc
or
adc
push
cmp
cltd
xor
imul
test
and
pcmpgtd
cmp
icebp
cmp
dec
mov
daa
fs
push
subb
adc
aad
ficomps
and
loopne
mov
lock
movsl
adc
ret
add
int
and
push
xchg
dec
in
or
sub
push
leave
cmp
and
shrb
xchg
les
sbb
dec
dec
sub
xchg
inc
inc
or
xchg
fcoms
mov
dec
pop
xchg
cltd
sbb
add
and
rcrb
xchg
fmuls
shrl
sti
xchg
push
mov
aaa
fdivr
cmp
aad
xor
std
push
sarb
stos
es
ss
and
jns
sahf
mov
loop
or
loope
or
es
mov
arpl
mov
pop
jge
test
jl
and
mov
sti
ret
sub
add
sbbb
cmp
dec
mov
dec
jp
pop
xchg
loope
addps
push
mov
aad
fs
xor
aas
add
rclb
cmp
es
push
push
loopne
fwait
inc
bound
inc
mov
mov
sub
rorb
mov
arpl
jge
jb
cltd
mov
xor
arpl
pop
inc
in
pop
dec
inc
and
incl
mov
xchg
iret
test
int3
shl
cltd
in
insl
pop
adc
cmp
mov
push
add
and
pop
mov
loopne
push
pop
push
jns
stos
adcb
mov
std
rclb
imul
xchg
or
or
xchg
or
aas
negb
fwait
pop
dec
dec
mov
xchg
mov
fldenv
sbb
and
addl
mov
sub
bnd
xor
addb
les
dec
mov
add
mov
jp
add
mov
pop
mov
push
dec
rcl
cmc
scas
nop
and
inc
mov
mov
call
or
daa
xchg
add
push
inc
pop
inc
push
xchg
movsb
pop
push
aad
int3
pop
in
xor
leave
or
mov
test
shr
mov
mov
loope
int
sbb
jmp
cmp
std
mul
push
mov
and
xchg
sub
jmp
sub
jns
mov
dec
lds
cltd
insl
add
enter
sub
push
lods
cltd
adc
je
repz
pop
jl
out
test
sub
repnz
test
adc
lea
or
adc
lcall
push
sbb
cmp
inc
mov
int3
or
jae
inc
stc
xor
aam
into
jns
nop
dec
and
inc
insl
ret
jp
in
insb
arpl
push
mov
roll
jmp
pop
push
and
cmp
pop
mov
xorl
inc
dec
mov
iret
and
xor
sub
inc
loop
push
ret
lea
xchg
xor
sbb
and
or
xchg
arpl
rcll
cmp
gs
inc
mov
cmp
adc
xor
cs
test
inc
add
inc
push
int
cmp
mov
jle
xchg
aam
inc
or
addl
popa
or
mov
and
mov
push
iret
push
fadds
outsl
add
rol
inc
xor
push
mov
xlat
lods
mov
negb
rcr
and
bound
insb
push
ss
adc
mov
test
rorl
xlat
int
popa
or
daa
xor
int
jo
arpl
jge
mov
ret
add
bound
inc
and
sbb
and
inc
mov
mov
test
sbb
out
push
sbbl
mov
mov
or
sbb
mov
scas
out
dec
dec
xor
movsl
in
mov
inc
out
fdivrs
adc
sbb
add
xchg
js
cmp
in
sub
adc
or
xor
lods
and
or
jnp
aad
xchg
inc
sub
and
add
lcall
sub
push
sti
pushf
jp
imul
cmpl
inc
daa
xchg
loope
pop
sub
mov
jecxz
push
test
or
scas
pop
das
jmp
cmp
mov
or
dec
pop
or
xchg
inc
and
sub
stc
loope
push
adc
sub
add
xchg
hlt
imul
rorl
fsubl
mov
movsb
lea
aam
jmp
mov
les
pushf
adc
mov
mov
jp
lods
push
sbb
mov
repnz
or
inc
mov
cmpsl
movsl
push
lea
pop
jo
shrb
jns
adc
mov
push
push
leave
addr16
int
rclb
sbb
mov
push
mov
xchg
mov
sbb
or
jo
inc
pop
test
sarb
sub
loope
int
pop
adc
jbe
xor
add
loopne
pop
add
ret
jne
xchg
test
push
mov
xchg
sbb
mov
jo
mov
adc
adc
pop
das
scas
sub
cld
mov
popa
call
addl
aam
inc
adc
in
ret
mov
fs
mov
insb
imul
mov
js
addr16
push
into
sbb
popa
lahf
mov
push
push
test
leave
fwait
dec
xor
inc
xchg
add
mov
pushl
fcoms
jmp
fmul
inc
ja
xchg
test
or
xchg
or
sub
aad
sbb
and
in
mov
sahf
testl
push
sub
sahf
jae
fyl2x
pop
test
loope
pop
push
sub
add
or
dec
jae
in
fstl
dec
or
push
sbb
xor
push
cmp
shr
roll
jg
adc
xchg
cmp
mov
call
rcrl
xchg
test
add
imul
and
int3
inc
repz
cmp
xchg
bound
jns
sbb
pop
xchg
outsl
arpl
out
cmpsb
inc
add
push
xor
inc
lahf
ljmp
add
cmp
leave
and
pop
cltd
aaa
dec
and
mov
pop
out
xchg
or
call
dec
mov
dec
arpl
push
mov
cmp
mov
aas
aad
aad
test
adc
push
pop
inc
adc
mov
inc
xlat
mov
xchg
mov
sub
sbb
mov
jne
sarb
push
xor
dec
daa
and
cmpsb
mov
add
ds
sbb
cmpb
xchg
aam
xchg
or
repnz
xor
or
int
adc
jmp
int
movsb
push
nop
jmp
push
jp
aad
sub
xor
sbbl
lods
clc
mov
mov
pop
pusha
mov
into
fsubs
in
frstor
lret
xlat
adc
das
sahf
push
sub
and
push
cli
lret
sbb
and
mov
fidivrl
in
xchg
fs
or
and
or
mov
int
sub
pop
pop
sbb
dec
sub
nop
das
push
sarl
loope
shl
rorl
movsl
push
mov
add
jmp
outsl
and
shll
out
fisubl
sub
ret
pop
or
insl
or
mov
test
cli
add
sahf
out
mov
fists
out
mov
dec
push
testl
or
dec
mov
outsl
xchg
cwtl
pop
mov
jb
not
cmc
das
or
xchg
inc
sahf
xor
add
or
pop
jo
mov
sbb
andb
sub
inc
jp
dec
cmp
mov
imul
or
add
lahf
nop
sub
je
adc
jmp
mov
sbb
push
or
jmp
rolb
inc
xchg
and
jne
mov
loope
mov
inc
clc
sbb
ljmp
in
xor
jle
mov
xchg
jo
repz
stc
and
xchg
sbb
icebp
sahf
shrl
test
adc
push
add
mov
sub
lock
call
inc
or
and
inc
sbb
andb
add
adc
in
mov
dec
xchg
jo
jne
pop
hlt
test
add
and
pop
or
shlb
jmp
imul
jno
repz
sarb
cmc
adcl
enter
jmp
cmp
sub
jbe
jecxz
mov
idivl
out
inc
negb
and
and
imul
mov
push
push
mov
cltd
lods
mov
dec
shlb
sbb
inc
mov
dec
xchg
test
pop
and
or
inc
aaa
imul
jmp
cmpsb
xchg
movsl
loopne
dec
add
dec
adc
int3
les
adc
pop
scas
loop
dec
gs
fadds
nop
shl
mov
push
sub
push
movsl
ss
shl
jb
icebp
mov
or
xchg
xchg
scas
cltd
es
call
andl
aam
xchg
adc
ljmp
enter
pop
test
mov
nop
cmp
cli
lds
repz
xchg
add
andl
cmp
xor
or
or
fwait
and
icebp
incl
test
je
outsl
add
push
cmpsl
addb
xor
gs
lcall
scas
frstor
pushf
mov
or
jle
xor
pop
mov
test
xor
jae
add
mov
mov
adc
lock
xor
lds
push
lock
out
mov
cmp
xchg
mov
inc
sti
and
pop
pop
dec
sahf
aaa
jo
popa
ret
roll
aaa
push
sub
mov
fwait
pop
ret
shlb
or
nop
jmp
repz
push
adc
add
inc
test
push
sbb
sbb
imul
xchg
sbb
stos
cltd
or
push
enter
fidivrl
mov
pop
mov
out
fmuls
push
and
add
cmp
mov
or
test
push
ljmp
or
jg
into
pop
adc
roll
lcall
xchg
xchg
repnz
inc
pushf
lock
xchg
divb
dec
cli
in
aaa
andl
lcall
adc
loop
or
mov
xchg
add
xchg
cltd
mov
sti
add
jge
and
xor
mov
pop
loop
in
ja
cmp
ret
loope
pop
xchg
and
repnz
jo
mov
jne
push
and
dec
sub
mov
sbb
ret
popa
mov
mov
pop
xchg
xchg
jecxz
xor
mov
mov
xchg
lock
jle
cmp
and
movsl
dec
mov
mov
xchg
xchg
clc
idiv
insl
sbb
sahf
sub
sbb
fidivs
fimull
mov
pop
aam
add
ljmp
add
jle
and
arpl
ficomps
or
arpl
in
dec
adc
es
es
mov
cmp
xor
jae
and
jno
add
mov
repnz
out
ret
xor
rorb
cmp
push
cmp
xor
mov
or
sbb
push
lret
movsl
cmc
push
movsl
push
fs
arpl
cltd
icebp
push
or
cs
push
addr16
sbb
inc
or
arpl
cmp
mov
mov
mov
test
roll
ret
pop
cli
sub
add
xor
scas
mov
js
xchg
push
insl
push
add
nop
mov
ret
out
dec
push
xchg
shrl
jg
je
fisttps
add
fisttpl
and
lds
out
scas
lock
inc
fsubr
pop
movsb
test
mov
mov
enter
outsb
jnp
loopne
push
test
rcrb
add
mov
and
lds
mov
add
cld
cmp
xchg
pushf
or
cmpsl
mov
jno
shll
push
inc
mov
stos
insl
stos
jmp
mov
mov
dec
jmp
mov
fwait
inc
inc
sub
sub
add
mov
fwait
sub
aaa
orl
out
aam
orl
mov
inc
stos
daa
and
mov
push
jmp
pop
push
or
jge
mov
and
pop
dec
mov
jg
fsubs
xchg
mov
test
mov
xor
lea
repnz
mov
mov
inc
les
or
adc
scas
xor
cltd
push
mov
dec
int
sub
sub
adc
xchg
sbb
and
and
fs
cmp
scas
sbb
pop
ret
add
repnz
xor
test
push
popa
lock
sbb
lret
loopne
fs
xchg
mov
xchg
xor
nop
add
add
dec
fs
dec
and
or
jne
or
xor
add
sbb
roll
jecxz
xchg
push
sbb
inc
cmp
adc
dec
sub
fbstp
push
adc
sbb
pusha
push
adcb
fwait
outsb
sub
sbb
ja
movsl
inc
pop
add
lods
mov
mov
inc
add
sub
orb
shll
sub
pop
inc
loopne
jle
pop
aam
inc
dec
and
and
leave
mov
shrl
push
and
xor
loop
addl
xchg
movsb
push
or
pop
or
pop
sbb
ret
cltd
adc
push
sbb
ja
mov
lds
push
and
mov
out
leave
mov
xor
and
les
inc
xchg
and
lea
psraw
dec
inc
and
adc
inc
push
push
cmp
cmp
arpl
xor
jecxz
shll
inc
stc
inc
push
and
cltd
int3
shlb
cs
add
add
sbb
mov
jbe
jbe
inc
mov
xor
jns
je
dec
jb
mov
hlt
mov
lods
psrld
add
and
or
test
std
andl
lcall
scas
fimuls
push
bound
out
outsl
cltd
cltd
and
lea
pop
and
lea
icebp
inc
arpl
add
add
filds
mov
or
inc
and
mov
inc
loopne
adc
inc
orl
inc
or
test
mov
ror
test
outsl
data16
sub
movups
movl
fwait
movaps
sbb
outsl
inc
cmpsl
pop
in
add
enter
inc
push
daa
pop
addl
mov
leave
cmp
stos
pop
push
lea
jp
fwait
cwtl
sub
aad
sahf
mov
lret
push
popl
into
bound
jg
sub
mov
mov
insb
jle
push
jbe
outsl
aam
js
faddl
enter
or
leave
les
add
sub
sarb
xor
orl
cmpsb
lea
pop
adc
adc
dec
push
imul
cwtl
dec
inc
mov
popf
cltd
sub
pop
push
mov
popa
das
add
mov
enter
cmp
pop
cmp
mov
js
xor
inc
xchg
les
fisttps
iret
and
int
and
adc
jne
gs
outsl
in
addb
rcl
sti
xchg
and
push
addl
sbb
fistl
push
inc
jecxz
nop
daa
test
sub
sbb
iret
jge
and
pusha
inc
push
mov
adc
subb
push
in
push
repz
in
mov
repnz
lcall
sub
mov
sbb
pop
mov
lea
mov
inc
testl
cmp
fidivl
inc
lcall
sub
icebp
and
iret
push
sub
repnz
push
repnz
cmp
addb
popf
mov
int
test
sbb
fwait
out
xor
add
inc
mov
stos
jno
gs
push
inc
addr16
pop
cs
xchg
adc
lahf
loope
dec
or
insb
jmp
sahf
xchg
pusha
push
orl
lds
jno
shlb
test
stos
into
sub
mov
jg
add
xor
and
lcall
pusha
or
inc
insb
shll
outsb
or
and
das
test
cmpsl
mov
or
xchg
enter
sub
jb
or
xor
ret
gs
sti
xorl
mov
pop
repz
sbb
mov
rclb
gs
out
dec
adcl
and
cmp
cs
mov
inc
xor
and
mov
dec
inc
add
iret
inc
mov
sbbb
shl
push
loope
notl
and
lds
mov
and
xchg
add
test
or
imul
and
mov
push
inc
stos
sbb
dec
test
jb
push
lret
inc
xor
lds
xchg
dec
and
xchg
pop
or
push
roll
lods
sub
and
rcl
rcl
jae
aam
arpl
add
xchg
jo
mov
ds
fwait
sbb
cmp
leave
sbb
es
adc
push
mov
mov
push
xchg
ja
outsb
sub
adc
lods
xchg
xlat
xchg
call
cmp
push
cmp
iret
ret
inc
sub
jmp
ljmp
or
mov
push
and
repz
adc
cltd
push
sbb
inc
mov
out
cmpsl
adc
or
pop
push
ret
adc
xchg
stos
out
popa
dec
inc
sub
pop
push
ret
adc
xor
and
mov
daa
mov
data16
je
mov
movsb
and
adc
and
or
dec
cmc
push
lds
xchg
or
mov
out
lret
inc
int
mov
and
mov
nop
jmp
sbb
pop
push
sub
xor
add
or
fldenv
dec
mov
movsl
adc
xchg
add
push
mov
je
shll
div
mov
mov
mov
lods
jmp
fstpt
in
cmp
xchg
rcll
inc
popa
and
xorl
jo
lcall
jmp
ficompl
loopne
pop
add
cmp
or
pop
mov
xor
cmpsb
jb
cmc
mov
lret
enter
mov
add
orl
inc
jmp
inc
or
jne
xchg
fnstenv
xchg
mov
mov
bound
leave
test
in
daa
insl
dec
inc
fidivrl
cwtl
in
ret
or
jl
xor
mov
je
ss
fadds
sub
popf
repz
in
loopne
imul
fstpl
mov
cmpsl
pop
ret
mov
test
pop
sbb
push
in
pop
out
lahf
jmp
pop
and
pop
pop
sti
imul
sbb
aaa
mov
das
rorl
mov
mov
icebp
adc
adc
cmc
imul
ret
push
sbb
scas
in
mov
or
inc
lock
inc
dec
jae
jno
sub
icebp
outsl
adc
adcl
xor
xchg
cwtl
repz
lds
add
add
inc
add
xor
lds
call
adc
gs
jno
jo
push
mov
lea
or
insl
pop
jns
dec
lock
lds
cltd
or
addb
and
sub
fldcw
xchg
sub
dec
adc
cmp
mov
adc
push
adc
or
xorl
adc
inc
adc
dec
pop
arpl
push
cmp
fcoms
cmp
xor
sbb
and
std
lea
xor
jnp
jae
stc
adc
out
xchg
sbb
test
and
outsl
rcrl
stc
add
mov
pop
into
push
xor
pop
call
mov
jno
roll
rcl
test
and
mov
sub
or
add
xchg
movsb
mov
mov
dec
or
and
push
xorb
adc
xchg
or
movsb
icebp
int3
dec
jecxz
rorb
jbe
aas
inc
les
inc
nop
mov
leave
pop
xchg
and
xor
xlat
cmp
imul
enter
sbb
test
push
loope
mov
inc
adc
dec
xor
pop
pop
mov
jns
mov
mov
jecxz
sbb
push
cmc
pop
jmp
dec
mov
add
mov
cmp
shr
cmp
cltd
leave
sub
sbb
adc
mov
into
enter
mov
jl
mov
xchg
shl
adc
sbb
das
cmp
cmp
incl
std
cmp
mov
in
and
xor
cs
out
or
das
or
fstps
shll
sub
sahf
jns
dec
xorb
pop
and
xchg
imul
ret
or
mov
or
arpl
pop
mov
adc
and
and
jae
sbb
imul
and
xor
xor
or
pop
or
mov
add
adc
das
sub
adc
loopne
inc
ror
shr
rol
rcr
or
sub
call
cli
mov
xor
fsub
movsl
jo
fwait
xor
fisttpl
pop
mov
movsl
jo
lret
xor
xorl
aam
mov
fldt
fdivrl
repz
rcr
push
fsub
js
add
add
imul
out
into
mov
movsl
cmpsb
fdivrl
or
xor
dec
movsl
cmpsb
fsub
pop
jo
js
adc
xor
shll
fsub
pop
pop
push
js
imul
in
cmp
js
jo
or
xor
xchg
fiaddl
cmp
js
lret
xor
cld
jmp
jle
push
push
push
in
int
movsl
cmpsb
fdivl
ret
xor
mov
in
rorb
in
js
xor
xor
xchg
jecxz
sahf
je
push
push
push
movsl
cmpsb
fsub
js
add
add
aam
mov
add
add
movsl
jo
and
xor
inc
cli
fimuls
cmpsb
fdivl
shll
xor
push
push
push
cmpsb
fsub
add
xor
push
push
push
inc
das
inc
add
aas
fwait
xor
addb
lcall
and
xor
push
push
push
in
pushf
cmp
xor
pop
fldenv
jae
cmpsb
fsub
js
jae
xor
mov
fsub
je
dec
mov
js
push
xor
fwait
xor
jnp
loope,pn
mov
push
in
int
js
dec
xor
imul
ffreep
cmpsb
fsub
js
imul
aaa
enter
fdivs
xor
jg
mov
xor
call
in
jne
movsl
jo
imul
push
out
jmp
push
cmpsb
fsub
lcall
xor
push
mov
cli
adcl
in
jo
mov
xor
xchg
clc
movsl
cmpsb
fdivl
mov
xor
inc
clc
cltd
fs
push
push
push
movsl
cmpsb
fsub
pop
lea
jo
push
xor
movb
cmp
xchg
push
xor
das
xchg
xor
xchg
ljmp
fsub
std
jo
add
add
test
mov
mov
push
add
mov
jo
mov
xor
dec
jae
js
stos
xor
xor
jnp
out
in
dec
js
pushf
shll
xor
scas
dec
push
push
push
fisubrl
xor
pop
xor
adc
xor
jae
xor
sbb
cltd
jnp
xor
ret
xor
or
in
push
imul
fwait
xor
pop
xchg
push
push
in
int3
xchg
movsl
js
fwait
xor
lcall
jo
or
xor
cmp
pop
aam
fsub
pop
dec
adc
add
xor
pop
sahf
push
push
push
movsl
cmpsb
fsub
jo
dec
xor
stos
iret
mov
fsub
jo
sti
xor
mov
adc
sbb
mov
cmpsb
fsub
pop
dec
adc
xor
push
push
push
cmpsb
fsub
jo
arpl
xor
daa
push
cmc
xchg
in
and
mov
xor
and
xor
movsl
cmpsb
fdivl
mov
jnp
test
shlb
xor
andl
cmp
push
js
fwait
xor
movsl
cmpsb
fsub
jo
jnp
xor
aad
bound
jae
jo
xorl
xor
sbb
fsub
mov
fisubrs
push
push
movsl
cmpsb
fdivl
sbb
xor
inc
rcrb
fsub
js
imul
ja
ret
in
movsl
cmpsb
fsub
js
sub
xor
fldenv
in
cmpsb
fsub
sbb
xor
and
outsb
xor
mov
fsub
jo
jecxz
xor
sbb
xor
add
lret
arpl
mov
cmpsb
fdivl
add
add
mov
push
movsl
cmpsb
fsub
push
jo
xor
sub
jo
sbb
xor
mov
cmpsb
fsub
aad
xor
xor
mov
jo
adc
xor
push
cmpsb
and
movsl
jo
inc
xor
add
daa
movsl
cmpsb
fsub
js
stos
xor
mov
jb
or
or
fdivrl
cmp
xor
int3
fsub
movsl
cmpsb
fdivl
mov
test
movsl
cmpsb
fsub
pop
imul
movsl
js
push
xor
jl
outsb
lea
in
jno
cmpsb
fsub
js
push
xor
out
pop
mov
inc
hlt
in
jnp
sub
outsl
and
xor
xor
movsl
movsl
cmpsb
fsub
jo
arpl
xor
or
add
js
xchg
xor
movsl
jo
dec
xor
repnz
scas
adc
push
push
push
mov
cmpsb
fsub
je
dec
mov
pusha
test
push
daa
or
fsub
aaa
ljmp
xor
xor
jecxz
mov
movsl
cmpsb
fsub
pop
push
js
cmpsb
fdivl
and
xor
mov
xchg
push
push
push
cmpsb
fsub
rorb
xor
xor
xorl
inc
in
ja
std
js
dec
xor
movsl
cmpsb
fsub
je
add
dec
jo
sub
xor
std
test
sub
lea
fsub
jo
stos
xor
push
cltd
shll
movsl
cmpsb
fdivl
or
add
leave
inc
add
inc
push
push
push
dec
adc
sti
xor
cmp
fwait
and
mov
and
xor
jne
dec
cmpsb
fsub
js
fwait
xor
sbb
dec
xchg
lock
mov
cmpsb
fsub
jo
arpl
xor
push
push
movsl
cmpsb
fdivl
sbb
xor
dec
and
mov
push
push
push
mov
adc
xor
fimuls
popa
push
push
push
add
xor
lods
imul
in
movsl
js
add
add
cmpsb
fsub
pop
fstl
stos
arpl
xor
das
xor
push
push
push
in
movsl
cmpsb
fsub
jo
mov
cli
sbb
movsl
cmpsb
fdivl
adc
xor
adc
fcmovne
out
cmpsb
fsub
movsl
cmpsb
fdivrl
jmp
xor
push
jo
in
sbb
cmpsb
fdivl
mov
outsl
out
mov
in
xor
shll
xor
in
dec
imul
xor
xor
notb
mov
xor
dec
push
cmp
movsl
cmpsb
fsub
pop
sub
js
repz
ja
int
push
push
push
movsl
cmpsb
fsub
sbb
adc
xor
push
add
pushf
jae
jnp
xor
std
push
cmpsb
fsub
js
jae
xor
push
in
jmp
and
jo
shll
xor
movsl
cmpsb
fsub
jo
add
xor
enter
push
push
push
cmpsb
fsub
pop
sbb
xor
les
mov
cmp
xor
movsl
cmpsb
fdivl
lret
xor
xor
rcrb
in
adc
mov
xchg
pop
in
cmpsb
fsub
pop
inc
and
lock
flds
cmpsb
fsub
imul
or
xor
popa
push
push
push
cmpsb
fsub
pop
lea
xor
gs
cmpsb
fsub
dec
clc
jo
sti
xor
ds
mov
cmpl
movsl
cmpsb
fsub
pop
cmp
jecxz
xor
jecxz
movsl
cmpsb
fsub
jo
jmp
xor
hlt
mov
add
roll
int3
icebp
popf
js
or
xor
cmc
movsl
cmpsb
fdivl
call
mov
and
push
push
popf
jo
cmp
xor
or
cmp
jmp
push
push
push
movsl
cmpsb
fsub
outsl
dec
icebp
jo
adc
xor
push
or
cmp
js
mov
jnp
lea
push
xor
arpl
jne
jo
add
xor
shl
jnp
stos
sbb
xor
lcall
aad
movsl
cmpsb
fdivl
sub
xor
pop
daa
push
push
push
cmpsb
fsub
jo
call
sub
jo
sti
xor
push
jp
das
fbstp
xor
xor
fwait
dec
xor
test
adc
xor
movsl
cmpsb
fsub
mov
xchg
xor
test
cmc
inc
dec
mov
fsub
movsl
jo
rolb
jnp
loope
push
das
in
xor
jo
and
xor
pop
pop
in
xchg
xor
dec
push
jae
xor
add
push
mov
add
xchg
xor
adc
fsubs
xor
jp
add
cmp
and
cmpsb
fsub
add
pop
jo
dec
xor
ja
das
lea
dec
adc
jae
pusha
cmp
xor
pop
popa
mov
xor
movsl
cmpsb
fsub
pop
xor
push
push
push
jo
lock
movsl
js
xor
xor
cmp
js
lock
movsl
cmpsb
fdivl
mov
xor
inc
xor
adc
cmpsb
fsub
js
xor
xor
push
push
push
cmpsb
fsub
pop
lea
inc
rolb
xor
push
in
and
movsl
jo
arpl
xor
push
push
push
movsl
cmpsb
fsub
fwait
imul
enter
js
inc
xor
jmp
cmpsb
fsub
jo
mov
mov
push
adc
add
popa
mov
mov
mov
movsl
cmpsb
fsub
movsl
jo
mov
pop
shr
fsub
mov
xor
xor
xor
int3
das
cmpsb
fsub
pop
push
adc
rorb
pop
shrl
pop
or
in
jo
cmp
xor
nop
bound
push
push
push
jo
xor
xor
in
in
cmpsb
fsub
jo
call
mov
push
push
push
cmpsb
fdivl
clc
add
mov
pop
dec
xchg
movsl
jo
rolb
jg
or
adc
xor
xor
push
xor
test
outsb
push
push
push
in
lea
xor
pop
mov
movsl
cmpsb
fsub
jo
inc
xor
sbb
jle
test
push
push
push
movsl
cmpsb
fsub
jo
cmp
xor
dec
xchg
push
out
cmpsb
fsub
jo
sbb
xor
xor
push
push
cmpsb
fsub
cmp
xor
xor
movsl
cmpsb
fdivl
adc
xor
mov
fiaddl
sbb
js
enter
ror
pushf
fnstenv
mov
js
sti
xor
js
call
cwtl
xchg
or
int3
adc
sub
xor
ds
js
in
push
push
push
movsl
cmpsb
fdivrl
mov
xlat
pop
popf
int
pop
sbb
arpl
xor
inc
cmpsb
fsub
outsl
lea
std
mov
xor
ret
add
cmpsb
fsub
jo
or
add
push
cmpsl
bound
add
add
or
xor
subl
sub
jae
cmpsb
fdivrl
jnp
xor
fisubl
cmpsl
popf
mov
add
xor
dec
xor
xchg
int
enter
push
push
cmpsb
fsub
js
push
xor
movsl
jo
mov
xchg
pop
cmpsb
fsub
movsl
cmpsb
fdivrl
jae
xor
push
push
in
dec
cmp
dec
cwtl
movsl
jo
jae
xor
and
fsub
imul
sub
xor
in
add
push
push
push
in
pop
nop
xchg
xor
movsl
cmpsb
fsub
jo
mov
xor
repnz
cmp
in
and
xor
push
push
cmpsb
fsub
jo
or
add
ljmp
in
and
jo
mov
xor
popf
in
cmpsb
fsubl
push
xlat
push
push
push
movsl
cmpsb
fsub
jo
add
xor
into
push
sahf
test
push
push
push
movsl
jo
mov
xor
in
movsl
js
and
xor
sar
in
pop
cwtl
movsl
cmpsb
fdivrl
imul
push
or
in
pop
push
push
push
xor
cmpsb
fsub
movsl
jo
dec
xor
add
jl
in
movsl
cmpsb
fsub
add
ret
xor
lea
movsl
cmpsb
fsub
js
fwait
xor
mov
mov
ret
xor
bound
hlt
fcoms
push
push
push
pop
jne
movsl
cmpsb
fsub
outsl
lea
js
add
add
push
lcall
shll
xor
repnz
and
or
in
mov
add
xchg
add
lods
or
xor
movsl
cmpsb
fsub
lcall
xor
jmp
push
js
and
xor
xor
mov
mov
movsl
cmpsb
fsub
jo
mov
inc
lea
push
push
push
js
push
xor
movsl
cmpsb
fdivl
clc
add
lods
or
jb
cmpsb
fsub
js
fwait
xor
push
inc
movl
movsl
js
push
xor
add
jle
fsub
movsl
cmpsb
fsub
jo
shll
xor
and
mov
push
xor
jg
test
mov
notb
les
in
jo
shll
xor
cmp
push
push
push
pusha
into
jo
mov
xor
adc
shlb
mov
xor
cmp
fsub
movsl
cmpsb
fdivl
and
xor
cwtl
subl
push
push
push
jo
xorl
movsl
cmpsb
fsub
jo
add
add
into
cmpsb
fsub
je
xor
fdivl
repz
jg
cmp
cmpsb
fsub
jnp
rcl
xor
add
mov
cmpsb
fsub
js
sbb
xor
pop
dec
mov
movsl
cmpsb
fsub
sahf
sub
add
fsub
sbb
and
xor
scas
daa
add
js
int3
cmp
imul
movsl
cmpsb
fsub
jo
adc
add
lea
pop
lea
jo
rolb
add
sub
fs
push
push
push
cmpsb
fsub
movsl
jo
rolb
add
cmpsb
fsub
pop
mov
add
xor
push
push
push
in
mov
hlt
in
cmpsb
fsub
lcall
xor
sbb
xor
in
push
push
push
lods
movsl
cmpsb
fdivl
jecxz
xor
xlat
hlt
xchg
in
sub
xor
pop
test
in
js
xor
xchg
dec
shll
xor
jg
cwtl
movsl
cmpsb
fsub
js
jnp
xor
xchg
xor
mov
or
push
push
push
in
dec
jae
dec
adc
call
cmp
adc
xor
jg
adc
loop
jg
clc
je
xor
xor
test
add
inc
dec
mov
cmpsb
fsub
movsl
movsl
cmpsb
fdivrl
and
xor
outsl
stos
push
push
push
int
cwtl
lds
xor
ds
loop
add
sub
add
xchg
xlat
js
ja
cmp
xor
xor
movsl
cmpsb
fsub
movsl
js
lock
test
inc
mov
movsl
cmpsb
fsub
inc
outsl
lea
js
inc
xor
ljmp
int3
xchg
movsl
cmpsb
fsub
js
rolb
add
and
push
push
push
in
fldenv
imul
aad
pop
push
je
dec
mov
js
jecxz
xor
sub
std
pop
das
xchg
in
jo
repz
ja
xchg
int
push
push
push
pop
dec
jae
xchg
sub
xor
pop
inc
sbb
adc
xor
stos
in
push
push
push
in
xor
cld
mov
xor
push
push
push
in
cmpsb
fsub
jo
arpl
xor
imul
fdivl
repz
mov
inc
sbb
push
in
jl
xor
repz
fisubs
sbb
mov
js
lret
xor
or
push
push
push
movsl
cmpsb
fsub
js
ret
xor
mov
movsl
cmpsb
fdivl
sbb
xor
cli
scas
jns
mov
dec
clc
movsl
js
call
loope
pop
push
push
push
push
movsl
cmpsb
fsub
movsl
cmpsb
fdivl
shll
xor
outsb
in
and
xor
mov
xor
push
push
push
movsl
cmpsb
fsub
js
repz
mov
movsl
cmpsb
fsub
jo
add
add
inc
lea
push
push
push
cmpsb
fsub
jo
jmp
xor
xor
pop
movsl
cmpsb
fsub
pop
int
jo
rolb
add
mov
int3
adc
jmp
xor
fwait
inc
pop
movsl
mov
cmpsb
fsub
sbb
add
filds
mov
fsub
outsl
dec
fsubs
xor
aam
movsl
jo
mov
xor
leave
sub
inc
test
add
ret
js
call
pop
pop
dec
adc
rolb
add
push
push
push
movsl
cmpsb
fdivl
pop
xor
fcoml
and
fsub
int
cwtl
jo
sub
xor
jl
icebp
cmc
cmpsb
fsub
pop
int3
xchg
movsl
cmpsb
fsub
jo
clc
add
push
leave
outsl
dec
or
aaa
ljmp
rcr
or
push
push
cmpsb
fsub
pop
push
jae
jo
pop
xor
andb
push
pop
jo
movsl
cmpsb
fsub
pop
mov
add
adc
sti
cmpsb
fsub
adc
mov
stos
pop
cmpsb
fsub
jo
fwait
xor
sub
fistps
jo
sub
xor
xor
sub
pop
inc
jnp
pop
inc
movsl
cmpsb
fsub
das
sbb
xor
xor
stos
xor
mov
mov
cmpsb
fsub
je
mov
xor
sbb
xor
test
push
push
push
in
mov
xor
push
cmpsb
fsub
pop
fnstenv
sub
xor
push
push
cmpsb
fsub
pop
jo
xchg
xor
imul
movsl
cmpsb
fsub
dec
adc
stos
xor
je
cmpsb
fsub
mov
jo
and
xor
adc
sub
inc
pop
ljmp
xor
adc
add
ds
jne
cmpsb
fsub
fidivrl
jnp
dec
cmp
xor
xor
mov
cmpsb
fsub
pop
lea
shll
mov
push
cmpsb
fsub
jo
adc
add
adc
pop
dec
js
jo
mov
add
sysret
sbb
out
mov
xor
mov
xor
push
adc
leave
js
ret
and
movsl
cmpsb
fsub
jo
addb
in
and
push
je
cmpsl
popf
mov
repz
lret
pop
mov
lcall
xchg
call
fsub
movsl
cmpsb
fsub
pop
dec
js
stos
xor
outsb
xlat
ret
movsl
cmpsb
fsub
pop
sbb
movsl
jo
sub
xor
pop
xchg
sahf
fidivrl
push
xor
movsl
cmpsb
fsub
movsl
cmpsb
fdivl
enter
push
jmp
push
std
push
push
push
in
jo
xor
xor
cmpsb
fdivl
xorl
and
insl
add
movsl
cmpsb
fsub
jo
or
add
dec
cmpsb
fsub
pusha
xor
push
mov
add
fildl
in
cmpsb
fsub
lds
addb
out
cmpsl
shll
cwtl
add
movsl
cmpsb
fdivl
xorl
jb
mov
or
xor
in
call
ret
adc
fsub
sbb
jo
lock
sub
sbb
popf
js
shll
xor
adc
add
or
lea
fidivl
xor
push
jae
jo
stos
xor
in
sub
inc
addr16
add
movsl
cmpsb
fdivl
adc
add
cmpsb
fsub
js
sub
xor
inc
add
mov
mov
xor
xor
xor
jg
in
cmpsb
fdivrl
loopne
add
mov
fsub
dec
clc
movsl
cmpsb
fsub
jo
adc
add
outsb
stos
fisubs
jo
mov
sbb
or
cmpsb
fsub
pop
sub
jo
and
xor
sub
xor
movsl
js
shll
xor
adc
cmp
xchg
xor
mov
xor
movsl
cmpsb
fdivl
cmp
xor
movsl
cmpsb
fsub
inc
sub
movsl
jo
loopne
add
outsl
xchg
gs
movsl
cmpsb
fsub
movsl
cmpsb
fdivl
pop
xor
sub
cmpsb
cmpsb
fsub
mov
decb
jl
jle
push
push
push
in
jo
mov
xor
movsl
cmpsb
fsub
add
rorb
cmpsl
cltd
enter
jo
mov
nop
and
js
or
add
mov
in
dec
jae
jo
loopne
add
push
push
inc
outsl
lea
jo
addb
push
repz
pushf
jg
cmpsb
fsub
sbb
movsl
cmpsb
fsub
jo
mov
add
das
inc
mov
pop
in
cmp
fsub
js
inc
xor
add
push
cmp
movsl
cmpsb
fsub
int
cwtl
js
test
add
jne
lret
sahf
movsl
cmpsb
fsub
dec
clc
movsl
cmpsb
fdivl
fadds
add
ljmp
jo
inc
xor
jmp
pop
mov
add
clc
add
mov
add
movsl
js
addb
xor
or
mov
push
push
push
push
jo
call
add
movsl
cmpsb
fsub
js
enter
leave
sub
daa
jge
push
push
push
cmpsb
fsub
xor
xor
in
pop
push
push
push
movsl
cmpsb
fsub
dec
aam
add
movsl
jo
test
add
jno
das
cmpsb
fsub
sbb
js
enter
lds
push
push
push
je
dec
mov
js
shll
xor
add
js
dec
movsl
cmpsb
fdivl
rolb
add
out
icebp
call
movsl
cmpsb
fsub
jo
mov
xor
mov
push
int
cwtl
pop
push
clc
movsl
cmpsb
fdivl
mov
xor
push
push
push
sbb
jae
cmpsb
fsub
jo
jnp
xor
jo
add
das
in
sbb
mov
sub
jno
add
or
xchg
movsl
cmpsb
fdivrl
dec
xor
mov
ljmp
dec
adc
dec
xor
jmp
push
push
je
dec
mov
jo
dec
xor
add
xchg
lret
push
push
movsl
jo
inc
xor
repnz
xchg
xchg
in
dec
shll
xor
out
sbb
aas
in
dec
adc
fidivl
jo
mov
add
mov
movsl
cmpsb
fsub
jo
pusha
add
js
cmp
xor
out
adc
cmpsb
fsub
movsl
js
push
test
movsl
jo
enter
sbb
pop
push
xor
fsub
movsl
cmpsb
fsub
js
add
add
xchg
cmpsb
fsub
int
cwtl
pop
push
clc
jo
or
add
daa
icebp
and
cmpsb
fsub
pop
fnstcw
pushf
arpl
xor
jnp
xor
pop
orb
movsl
cmpsb
fdivrl
sub
xor
adc
pop
cwtl
lds
add
mov
sarb
pop
add
js
flds
xor
or
push
push
push
movsl
cmpsb
fsub
jo
mov
add
push
movsl
js
xorl
xchg
xchg
insb
aaa
dec
push
xor
fstl
jo
or
add
and
cmpsb
fsub
pop
int3
xchg
movsl
jo
lock
repz
inc
int3
idivl
movsl
cmpsb
fsub
pop
fdivl
xor
push
into
addr16
pop
sbb
in
dec
adc
sbb
xor
out
in
or
xor
dec
adc
add
push
lods
fldl
cmpsb
fsub
sbb
movsl
cmpsb
fsub
jo
mov
mov
int
cwtl
das
push
aam
add
movsl
cmpsb
fsub
js
sub
xor
imulb
mov
in
xor
xor
movsl
cmpsb
fsub
jo
mov
add
jge
sahf
dec
movsl
cmpsb
fsub
movsl
cmpsb
fsub
jo
jnp
xor
in
or
add
les
jno
cmpsb
fsub
movsl
cmpsb
fsub
jo
mov
add
mov
in
dec
push
push
push
in
cmpsb
fdivl
mov
int
icebp
pop
andl
movsl
jo
addb
jmp
dec
push
push
push
add
jae
cmpsb
fsub
js
or
add
mov
movsl
cmpsb
fsub
jo
add
add
dec
jb
es
push
push
push
cmpsb
fdivl
enter
cmp
pop
inc
push
movsl
cmpsb
fdivl
jnp
xor
daa
add
imul
das
dec
xor
les
xor
in
js
sub
xor
sbb
fldt
push
push
push
in
xchg
jb
dec
push
push
push
movsl
cmpsb
fdivrl
inc
add
icebp
mov
cmpsb
fsub
jnp
pop
enter
cmpsb
fdivrl
add
add
cmpsb
fsub
movsl
cmpsb
fsub
js
enter
enter
in
dec
js
cmpsb
fdivl
push
add
push
push
push
lcall
popa
clc
add
js
add
add
add
mov
jo
dec
add
cs
cmp
cmpsb
fsub
sbb
movsl
jo
addb
mov
adc
cmpsb
fdivl
pop
xor
lea
add
cmpsb
fsub
jo
adc
add
sub
xor
xor
pop
xor
dec
mov
push
push
push
movsl
js
clc
add
xor
cmp
cs
movsl
cmpsb
fsub
pop
dec
clc
movsl
jo
nop
add
dec
jae
fstpl
dec
xorl
movsl
cmpsb
fsub
jo
cmp
xor
or
push
push
push
add
add
fistl
in
das
in
mov
xor
negb
push
push
cmpsb
fdivl
jnp
xor
mov
xor
xor
xor
xor
mov
cmpb
push
push
cmpsb
fsub
jo
push
in
xchg
mov
cmpsb
fsub
outsl
dec
js
ljmp
cmpsb
fsub
pop
int
movsl
cmpsb
fsub
jo
add
add
xor
pop
sbb
push
push
push
in
js
push
xor
xor
sub
cmpsb
fsub
jo
inc
xor
fs
call
push
push
push
movsl
cmpsb
fsub
jnp
cmp
xor
add
test
add
pop
fadds
add
movsl
jo
clc
add
iret
pop
or
movsl
cmpsb
fdivl
inc
add
push
arpl
js
hlt
push
push
push
cmpsb
fsub
dec
fsubs
dec
add
adc
xchg
movsl
cmpsb
fdivrl
sbb
xor
mov
cmpsb
fsub
pop
int3
jae
sub
xor
pop
sub
mov
push
movsl
cmpsb
fsub
jo
rolb
add
sub
rcrb
add
lock
mov
shll
xor
cmp
sbb
cmp
push
push
push
lcall
add
movsl
cmpsb
fsub
sbb
movsl
cmpsb
fdivl
cwtl
add
inc
xchg
cmpsb
fsub
movsl
cmpsb
fdivl
dec
add
adc
push
sahf
ds
in
mov
sbb
popf
je
push
movsl
cmpsb
fsub
jo
pop
add
ds
xchg
cmpsb
fsub
jo
enter
shrl
adc
xorl
movsl
cmpsb
fsub
je
jb
mov
xor
xchg
lea
inc
movsl
cmpsb
fsub
pop
pop
xchg
movsl
cmpsb
fdivrl
xorl
outsl
cmp
aaa
movsl
cmpsb
fsub
jo
add
add
aas
push
in
mov
test
xor
aaa
rcr
inc
in
cmpsb
fsub
movsl
jo
lock
mov
push
je
push
push
push
cmpsb
fsub
push
pop
or
xor
xor
jo
add
add
add
push
xchg
cmpsb
fsub
movsl
cmpsb
fsub
js
jae
xor
xchg
jecxz
or
and
js
pop
add
mov
movsb
ljmp
pusha
add
jo
mov
add
iret
int
ss
js
add
movsl
jo
imul
stos
arpl
cmp
fsub
fimull
mov
add
push
add
in
popf
cmp
loopne
cmpsb
fsub
sbb
adc
add
sbb
sub
push
push
push
pop
lea
mov
enter
push
push
movsl
cmpsb
fsub
jo
jae
xor
shrb
in
cmpsb
fsub
std
jo
push
xor
sub
dec
jae
js
nop
add
xor
rcl
cmpl
fsubs
dec
jae
xor
stc
lods
cmpsb
fsub
sbb
movsl
cmpsb
fsub
jo
mov
cmp
enter
fsub
jo
mov
gs
in
dec
fdivs
jae
xor
movsl
cmpsb
fsub
je
dec
mov
js
mov
xor
addb
in
mov
in
cmp
add
ljmp
fsub
imul
push
push
push
pop
lea
cmpsb
fdivrl
and
add
cs
cld
push
xchg
movsl
cmpsb
fsub
pop
pushf
xchg
jo
mov
add
sbb
dec
arpl
cmp
xor
loopne
adc
nop
cmpsb
fsub
jnp
and
xor
movsl
cmpsb
fsub
js
inc
xor
xchg
dec
adc
pop
sbb
js
push
xor
fcoms
push
push
push
in
push
jo
inc
add
or
mov
insl
jo
dec
add
xlat
inc
mov
movsl
cmpsb
fsub
jo
rolb
add
xor
add
movsl
cmpsb
fsub
outsl
dec
adc
test
add
push
ffreep
jo
push
push
push
movsl
cmpsb
fdivrl
sub
xor
adc
xor
cmpsb
fsub
jo
fadds
add
add
cmpsb
fsub
add
xor
jbe
mov
cmpsb
fsub
pop
add
jnp
call
jbe
add
icebp
add
movsl
cmpsb
fsub
js
jae
xor
mov
pop
push
fsubs
sbb
xor
in
jo
clc
add
popf
push
and
aas
sub
pop
push
jae
jo
pop
xor
sarb
lea
push
push
push
in
rolb
test
mov
movsl
cmpsb
fsub
cmc
jo
mov
and
push
cmpsb
fdivl
or
add
push
and
outsl
dec
clc
movsl
cmpsb
fdivrl
rolb
add
jge
push
cmpsb
fsub
dec
adc
add
xor
and
js
js
add
ret
cmpsb
fdivl
or
add
inc
repnz
push
push
push
in
cmpsb
fdivrl
dec
add
std
cmp
js
cmp
add
loopne
add
mov
push
push
push
push
movsl
cmpsb
fdivl
xor
xor
push
push
push
in
push
sub
cmpsb
fsub
jo
arpl
xor
leave
adc
push
push
movsl
cmpsb
fdivrl
jae
xor
inc
popf
inc
shrl
cmpsb
fsub
movsl
jo
adc
add
sti
sbb
push
push
push
cmpsb
fsub
pop
and
movsl
cmpsb
fdivrl
mov
add
popa
mov
fsub
js
nop
add
loop
fwait
pushf
pop
cwtl
movsl
cmpsb
fsub
int
push
sbb
xor
outsl
popa
push
jg
js
cmp
add
pusha
push
and
sti
add
cmpsb
fdivrl
imul
pop
dec
pop
pusha
sub
pop
loope
cmpsb
fsub
jo
lock
out
push
cmpsl
movsl
cmpsb
fsub
jne
cmpsb
fdivrl
addb
aas
fisttpl
cltd
test
push
in
mul
add
mov
push
in
gs
jo
push
add
cmpsl
cmpsl
pop
in
call
push
push
movsl
js
mov
add
ja
xor
outsl
dec
cmp
xor
add
cmpsb
fsub
jo
addb
add
push
push
push
in
stc
adc
add
push
push
push
cmpsb
fsub
inc
das
repnz
in
decl
xor
movsl
cmpsb
fsub
outsb
xor
xor
jnp
push
call
jae
xor
notl
push
sbb
js
dec
add
xchg
into
ljmp
fsub
jo
pop
add
inc
andb
jno
frstor
sahf
adc
add
xchg
movsl
cmpsb
fsub
movsl
js
loopne
add
daa
das
xchg
in
jo
xor
xor
aas
xchg
lods
cmpsb
fsub
sbb
jae
mov
jbe
ret
mov
push
pop
push
fdivs
inc
add
jnp
mov
in
xor
les
in
inc
push
push
push
in
and
movsl
jo
enter
pop
push
xchg
mov
in
push
ja
jo
enter
sbb
les
in
movsl
cmpsb
fdivl
pop
add
movsb
shlb
movsl
cmpsb
fsub
js
inc
add
push
scas
jmp
push
push
push
add
jo
stc
add
rcrb
push
cmpsb
fsub
int
cwtl
popf
lds
sbb
xor
sub
and
add
fldenv
mov
cmpsb
fsub
jo
lock
lsl
mov
movsl
cmpsb
fdivl
push
fstpt
aas
push
push
push
in
add
xor
dec
push
cmp
cmpsb
fsub
movsl
jo
lock
pushf
les
mov
movsl
cmpsb
fsub
jo
dec
xor
sbb
xchg
test
js
add
add
outsb
inc
mov
add
add
pop
cmp
jae
add
cmp
mov
fsub
movsl
cmpsb
fdivl
rolb
rorl
push
push
push
in
xor
sub
add
movsl
jo
dec
add
jecxz
cmp
xlat
enter
add
jo
cwtl
add
sub
scas
outsl
adc
fsub
movsl
jo
push
xor
insl
ret
daa
outsb
repnz
cmpsb
fsub
sbb
movsl
cmpsb
fdivrl
inc
xor
cmpsl
xchg
mulb
mov
pusha
cli
loopne
mov
aad
daa
push
push
push
in
dec
fsubs
add
add
mov
sbb
pop
add
add
lcall
xor
xor
movsl
xchg
js
adc
add
fsub
movsl
cmpsb
fsub
js
or
add
call
lcall
in
movsl
test
add
xor
inc
cmpsb
fsub
je
xor
push
add
mov
dec
push
push
push
add
js
push
fadds
add
loope
add
pop
imul
pop
ret
fsub
js
stc
add
cs
pusha
mov
jae
push
xchg
movsl
cmpsb
fsub
lcall
add
cli
push
push
push
movsl
cmpsb
fsub
add
jae
or
add
jo
cmp
add
shll
cmp
add
adc
jo
rolb
add
cmp
jecxz
push
push
push
movsl
cmpsb
fsub
jo
cmp
add
xor
in
idivl
imul
cmpsb
fdivl
dec
xor
adc
fsub
sbb
xor
inc
dec
repz
xor
movsl
jo
or
add
out
sbb
mov
in
inc
or
add
xchg
pop
lcall
push
add
add
push
orl
in
neg
add
js
loopne
add
adc
je
enter
js
nop
add
movsl
js
adc
add
cmpb
fsub
pop
pop
movsl
jo
sub
add
in
movsl
cmpsb
fsub
jo
mov
std
aad
lret
push
push
push
cmpsb
fdivrl
call
shl
movsl
cmpsb
fsub
movsl
cmpsb
fsub
js
xor
xor
movsl
cmpsb
fsub
pop
add
push
add
clc
xchg
push
push
push
add
fdivs
lock
add
jne
nop
ret
push
js
dec
xor
xchg
sbb
pop
shld
fsub
js
fadds
add
and
in
movsl
cmpsb
fsub
add
stc
add
and
push
push
push
movsl
cmpsb
fsub
sub
add
dec
sub
fisttpll
movsl
jo
push
xor
mov
in
jo
dec
add
movsl
cmpsb
fsub
jo
fadds
add
cmpsb
sbb
or
in
cmpsb
fsub
pop
adc
js
add
mov
cmpsb
fsub
jo
and
xor
or
cmpsb
fsub
jo
js
add
movsl
jo
pop
add
in
ja
jo
pop
push
push
push
scas
movsl
cmpsb
fsub
jne
dec
dec
add
in
aaa
and
or
in
add
lock
mov
cmpsb
push
xchg
cmpsb
fdivrl
call
iret
mov
jnp
pop
add
movsl
jo
test
add
mov
push
push
push
js
adc
add
movsl
mov
add
movsl
cmpsb
fsub
js
cmp
add
cmpsb
fsub
js
rolb
scas
push
in
cmpsb
fsub
js
or
add
lea
mov
pop
ss
fsub
pop
clc
cld
jo
mov
int
insl
das
popa
stos
ret
movsl
cmpsb
fsub
jo
rolb
dec
xor
inc
mov
jo
inc
add
mov
shrl
fsub
sub
mov
mov
push
push
push
push
cmpsb
fsub
sbb
movsl
jo
or
add
outsb
or
push
xor
flds
add
lock
movsl
jo
fadds
add
lock
push
push
push
cmpsb
fsub
pop
fidivl
jnp
mov
add
movsl
jo
dec
add
clc
das
mov
or
pusha
add
ss
outsl
into
dec
sub
rolb
add
cwtl
add
sarl
cwtl
cmpsb
fsub
int
cwtl
js
call
or
fsub
movsl
cmpsb
fsub
jo
push
add
add
in
lea
sahf
mov
xchg
mov
movsl
cmpsb
fsub
jo
mov
cmpsb
inc
int
pop
fimull
loopne
add
js
or
add
jmp
cmpsb
fsub
iret
aam
add
movsl
js
mov
aam
sti
cmpsb
fsub
sub
js
pop
add
jne
dec
std
push
fnsave
and
add
cmp
stos
lret
add
push
push
push
lcall
js
add
dec
jae
jo
addb
fnstsw
movsl
cmpsb
fsub
mov
cmpsb
fdivl
enter
sub
das
pop
data16
push
push
push
pop
xor
in
push
and
xor
mov
lret
cmpsb
fsub
jo
sub
add
sub
cmp
add
data16
daa
pop
adc
inc
nop
add
movsl
js
stc
add
jno
jb
xor
jbe
add
cmp
movsl
cmpsb
fsub
fs
add
xchg
xor
fbstp
sahf
add
pop
js
addb
movsl
cmpsb
fdivl
clc
add
lods
sahf
sbb
mov
jae
movsl
cmpsb
fsub
movsl
jo
lock
mov
stos
sub
aas
jmp
jo
adc
add
ficoms
dec
clc
movsl
cmpsb
fdivl
flds
add
pop
xor
fsub
imul
fdivl
add
add
movsl
xor
in
cli
js
add
adc
add
frstor
test
pop
imul
adc
jne
movsl
cmpsb
fdivl
add
add
cmp
in
sub
mov
cs
add
in
pop
dec
jmp
pop
pushf
mov
jne
add
iret
mov
in
sub
movsl
jo
fadds
add
jbe
in
imul
nop
push
leave
jmp
cmpsb
fsub
add
fadds
int3
adc
loope
add
push
push
push
cmpsb
fsub
inc
cmp
xor
movsl
cmpsb
fdivrl
push
shl
sub
add
movsb
lock
paddusw
pop
cwtl
pop
push
adc
add
dec
ss
outsl
aad
xor
add
pop
adc
push
pop
dec
js
cmpsb
fsub
sbb
add
into
cmp
js
movsl
cmpsb
fsub
cmpsb
aaa
jo
cmp
add
orb
loopne
push
push
push
sbb
pop
add
dec
in
jo
push
push
push
cmpsb
fsub
pop
inc
adc
jo
jo
add
movsl
and
cmpsb
fdivl
loope
add
cmpsl
add
cmc
movsl
cmpsb
fsub
jo
test
add
pop
iret
mov
in
pop
outsb
movsl
imul
movsl
jo
pop
add
xchg
mov
dec
stos
cmpsb
fsub
mov
cmpsb
fdivl
mov
add
mov
in
js
jmp
into
movsl
cmpsb
fdivrl
mov
add
ret
add
mov
jo
or
add
push
push
push
in
stos
add
add
pop
sti
xor
push
push
push
cmpsb
fsub
sbb
loope
add
out
aaa
int
cwtl
pop
push
rcrl
jo
mov
inc
pusha
insl
lods
js
nop
add
movsl
cmpsb
fsub
jo
xor
add
mul
sbb
movsl
cmpsb
fsub
pop
clc
movsl
jo
roll
cmp
lret
mov
dec
in
pop
inc
add
movsl
cmpsb
fdivl
loope
add
mov
into
mov
rorl
fdivrl
xor
add
pop
pop
ret
mov
sbb
fadds
add
out
cmpl
add
movsl
jo
jo
add
mov
xlat
arpl
cmpsb
fsub
int
cwtl
jo
fadds
add
pop
sub
sub
cmc
enter
add
and
cltd
movsl
cmpsb
fdivrl
roll
into
sub
movsl
cmpsb
fsub
mov
add
add
sub
sub
aaa
ljmp
xchg
imul
cmp
add
or
push
push
push
cmpsb
fsub
push
movsl
jo
mov
add
inc
add
lods
xchg
js
std
shr
and
cmp
shr
jmp
repz
pop
push
dec
xor
les
rol
jmp
fsubl
push
dec
mov
and
dec
rol
shl
shr
xor
cmp
jne
sub
outsb
add
adc
or
cmp
jne
test
add
mov
neg
rcr
adc
call
sbb
ror
or
rcl
call
setns
cltd
sahf
in
ror
rcl
jmp
stos
add
or
call
imul
fiaddl
xor
dec
jmp
sbb
mov
cli
pop
shl
sub
ror
rcl
dec
jmp
mov
sub
sti
lahf
push
shrl
xlat
and
shl
sub
jmp
negb
add
ret
ret
ror
shr
cmp
jne
add
int3
ror
shr
cmp
jne
loope
cmp
adc
add
jmp
jp
imul
rol
pop
cmp
jne
enter
adc
mov
mov
ror
dec
jmp
std
in
mov
ror
cmp
jne
es
dec
lret
not
sub
jmp
out
jo
testl
and
jnp
les
push
sbb
rol
cmp
jne
xorl
xor
ror
cmp
jne
and
ret
out
sar
rcl
test
add
rol
add
cmp
jne
lock
jne
repnz
shl
or
sub
add
test
cmp
jne
ret
xor
stc
pop
push
out
neg
shr
and
xor
rcr
jmp
jge
lahf
lds
rcll
inc
dec
add
shl
call
ffree
and
int3
add
cmp
jne
insb
mov
ret
js
neg
dec
call
mov
repnz
dec
mov
shl
jmp
and
and
out
add
xor
sar
ror
cmp
jne
jno
ds
shl
test
rol
sar
cmp
ror
call
loopne
or
mov
shl
sub
and
cmp
jne
sbb
insb
mov
loope
ret
push
ror
jmp
scas
add
enter
iret
neg
shl
shr
sar
cmp
jne
pop
push
adc
push
lea
neg
call
imul
dec
rcr
xor
call
inc
or
rcr
neg
rcr
sub
jmp
pop
icebp
std
stos
inc
lea
xor
shr
xor
cmp
jne
rclb
cmp
dec
inc
ror
ror
dec
and
jmp
and
pop
arpl
insl
shl
inc
sar
sub
and
and
jmp
push
arpl
lea
cmp
sbb
rcr
add
ror
call
or
cs
sar
sbb
xor
adc
shl
add
call
fwait
inc
popa
cltd
cltd
test
testl
aam
movb
add
add
int3
adc
lret
mov
stc
test
inc
jne
mov
jmp
push
adc
js
not
sub
rcr
cmp
jmp
mov
and
shl
sbb
rcl
shr
call
in
icebp
cmpsl
mov
ror
jmp
and
ljmp
or
rol
sar
rol
call
cmc
mov
dec
adc
add
mov
sar
or
cmp
jne
ret
cmp
fs
neg
sbb
cmp
jne
xor
ds
push
mov
fs
rcl
jmp
push
sbb
shr
shl
sub
cmp
jne
neg
pop
pop
sar
sub
not
jmp
lret
and
xchg
sub
inc
sub
shr
call
cld
push
inc
rcr
ror
shr
cmp
jne
stos
pop
inc
loop
movb
and
call
lds
fadd
cli
adc
cli
rcr
rol
call
lea
pop
lea
adc
call
dec
and
fnsave
pop
xor
or
or
test
call
pusha
aas
lcall
test
shl
call
sbb
inc
daa
mov
shr
sub
adc
or
or
or
cmp
jne
mov
dec
lea
and
mov
sub
xor
rcr
call
ret
out
xor
shl
rol
rcr
adc
sub
cmp
jne
nop
add
loope
orl
mov
push
ror
call
es
jae
and
sbb
dec
neg
and
mov
cmp
jne
add
aas
or
rol
sub
rol
cmp
jne
cli
pusha
lcall
adc
in
cmpsl
add
mov
mov
shr
jmp
inc
fcoml
xor
push
inc
fstps
mov
cmp
jne
and
repnz
lea
xor
add
ror
dec
call
jge
stos
ffreep
shr
sar
shl
and
call
movsl
iret
js
push
test
shr
sub
add
jmp
sbb
adc
or
jmp
or
and
fs
rcl
shl
jmp
imul
cmp
neg
cmp
jne
data16
push
rol
sbb
add
cmp
jne
adc
add
and
rcl
jmp
mov
cmp
mov
sbb
shl
rcl
cmp
cmp
jne
sti
mov
sub
dec
shl
rcl
jmp
lahf
mov
jo
aad
test
sar
jmp
mov
hlt
xor
dec
shl
or
rol
call
inc
mov
lea
sbb
adc
call
add
ss
or
and
test
sar
sbb
shr
cmp
jne
dec
stos
dec
cmp
xor
dec
test
mov
neg
jmp
lods
sbb
jmp
jmp
loopne
aad
test
cli
mov
pop
add
shl
sub
and
call
inc
loopew
fs
mov
call
aad
mov
rcr
mov
shr
shl
jmp
int3
mov
inc
inc
dec
rol
add
call
or
je
ror
dec
call
pop
rep
push
pop
shl
sbb
neg
xor
jmp
add
addl
and
rol
dec
call
xchg
insl
sub
fs
cmp
test
add
xor
sbb
cmp
jne
inc
nop
dec
lea
cmp
shl
cmp
jne
pop
rcr
sbb
add
ror
not
adc
call
inc
ds
xchg
adc
rclb
adc
cmp
jne
xchg
inc
cld
jl
fs
xor
and
rcl
shr
cmp
jne
xchg
call
fs
shl
sbb
shl
cmp
jne
repz
xor
rol
or
cmp
jne
fcoms
adc
les
adcl
into
fmull
jmp
dec
xor
je
rcl
sar
adc
cmp
jne
cld
fcoml
idiv
decl
imul
in
loope
rol
shl
not
mov
jmp
cli
pushf
jbe
loopne
adc
rcr
xor
rcl
jmp
out
cmp
adc
not
ror
rcr
or
shl
call
or
sarl
neg
sar
call
nop
fwait
movsl
lea
rol
rcl
rcl
call
jne
lea
loopne
in
rcr
adc
jmp
lods
add
sub
rol
or
jmp
mov
neg
push
sar
cmp
jne
leave
xor
cmpl
das
neg
mov
add
cmpw
jmp
out
add
out
fidivrs
jp
sub
cmp
jne
mov
lea
rol
rcl
cmp
jne
pop
icebp
popf
xor
out
test
mov
call
xor
shr
add
sbb
shl
cmp
jne
adc
lea
rcl
sub
add
jmp
imul
aas
incl
fiadds
push
jne
leave
push
inc
in
fs
sbb
shl
cmp
jmp
push
cmp
hlt
and
xor
shl
cmp
jne
xchg
fisttpll
stc
call
fsubl
and
test
call
cmp
outsl
dec
ret
addr16
dec
ror
add
mov
call
fistl
mov
or
ret
cmp
jne
inc
fcmove
jb
movsb
shl
adc
rol
sbb
or
xor
cmp
jne
pusha
xlat
jo
rcr
rol
mov
jmp
ss
sti
sbb
not
jmp
add
sub
mov
lret
jecxz
int3
push
test
inc
cmp
jne
mov
adc
loop
and
sar
cmp
jne
adc
roll
sub
ror
mov
call
jo
xor
sub
add
shr
jmp
mov
outsl
push
lea
int
sar
cmp
shl
cmp
jne
into
lock
aas
imull
clc
add
out
add
rcll
add
cmp
add
lods
xor
rorb
call
shr
adc
rcr
xor
cmp
jne
sub
xor
mov
sub
adc
ror
cmp
jne
pop
popf
inc
dec
gs
adc
sbb
cmp
jne
push
enter
fs
neg
rol
add
cmp
jne
jbe
lahf
xchg
sti
jle
fs
ror
ror
jmp
cmp
daa
ljmp
jmp
lds
lret
or
or
jg
div
adc
xchg
sub
mov
neg
neg
sub
sub
call
out
js
mov
neg
call
sbbb
not
adc
shr
sbb
jmp
mov
lret
inc
shr
sub
cmp
jne
decl
in
dec
lea
not
rcr
neg
rol
rcl
call
insb
data16
fs
sbb
shl
dec
and
cmp
jne
aaa
xor
mov
or
and
adc
jmp
xor
push
sbb
roll
clc
add
jne
dec
cmpsb
shll
neg
sar
jmp
xlat
sar
and
ror
dec
sbb
or
shl
cmp
jne
push
test
jae
add
add
xor
shr
rol
call
shlb
cmp
neg
rcr
call
imull
pop
dec
call
outsl
push
adc
and
xor
adc
call
mov
js
dec
mov
lret
inc
test
sub
jmp
mov
sti
neg
sbb
sub
ror
cmp
jne
dec
inc
jne
addl
rcl
adc
neg
jmp
push
mov
neg
jmp
sub
adc
xor
not
rol
call
data16
sub
rclb
cmpsb
fwait
arpl
pushf
adc
add
rcl
shl
call
lock
ret
neg
rcr
not
adc
jne
xor
adc
jmp
push
mov
or
fs
test
rcr
rcr
jmp
mov
cld
daa
lret
jl
mov
rcl
jmp
adc
lea
mov
shr
sar
jmp
aam
add
enter
add
push
sarb
lea
rol
rcl
ror
shr
call
xchg
test
shr
cli
jmp
icebp
test
xchg
sub
ror
mov
jmp
xor
repz
shr
jmp
sub
pop
mov
or
cmp
jne
mov
sti
adc
sub
stos
repz
ljmp
jmp
lock
mov
mov
cmp
jne
mov
shll
and
or
ror
call
or
mov
fs
cmp
adc
rcr
call
add
imul
sbb
rcl
inc
cmp
jne
xchg
scas
test
mov
rol
xor
rcl
cmp
jne
cmp
icebp
loop
imul
ret
sbbl
shr
rcl
cmp
jne
rcrb
pop
mov
sbb
dec
xor
ror
or
jmp
rcr
dec
mov
jmp
fs
mov
sar
adc
rol
xor
jmp
andb
xor
adc
mov
dec
jmp
push
adc
jecxz
mov
pushf
xchg
push
sar
cmp
jne
iret
inc
inc
sub
rol
xor
ror
rol
test
cmp
jne
xchg
and
not
ror
jmp
lock
in
lea
test
shl
adc
call
inc
cmpsl
shl
and
and
mov
rcr
call
in
pop
sbb
adc
shr
rcr
dec
call
xor
