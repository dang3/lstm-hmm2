cmpsl
cwtl
fisubl
and
pop
rorl
adc
jmp
popa
jg
rcr
repz
and
and
ret
in
pop
mov
xchg
jge
add
jmp
pop
push
jg
or
xor
sub
mov
lods
pop
ret
and
mov
pop
ljmp
mov
ret
cmp
in
shrb
call
dec
xlat
jmp
add
push
fucomp
es
ret
outsl
xor
dec
dec
cmpsb
jns
mov
sbb
dec
hlt
pop
out
or
ret
out
mov
pop
test
outsb
sub
fiadds
ss
aaa
pushl
xor
push
xor
cs
icebp
xchg
dec
inc
inc
adc
or
sahf
in
enter
jns
incb
es
sub
xor
xor
sti
push
out
lahf
mov
loop
stos
int3
adc
lock
popa
je
inc
imul
dec
popa
insl
gs
add
test
mov
dec
arpl
rep
rorl
lahf
adc
pusha
push
gs
xor
mov
sbb
test
mov
push
lods
pop
xor
push
xor
cmp
ret
pop
inc
fisubl
push
cmp
inc
je
jbe
lea
xchg
xor
push
ret
inc
es
jae
ficoms
inc
mov
and
repnz
or
pushf
mov
test
sbb
mov
int3
pop
xchg
fldenv
fadd
dec
test
divl
cs
repnz
dec
out
cmpsb
push
jbe
and
mov
lcall
cmpl
shll
sbb
xor
xchg
or
test
mov
dec
js
cwtl
test
inc
repnz
popa
jbe
test
jl
cmp
mov
iret
cltd
push
dec
xor
cmc
std
jae
aas
outsl
dec
sbb
lock
hlt
or
jp
test
js
xor
orb
fs
jbe
testb
jb
push
xchg
pop
stos
xchg
push
pop
xchg
add
lea
jae
cmp
mov
push
shld
mov
pop
mov
clc
stc
sub
bt
call
cld
pop
fildl
xchg
mov
addr16
dec
das
stos
ret
adcl
push
outsl
add
push
jbe
pop
push
mov
sub
test
push
enter
pop
popf
lahf
pop
sub
sub
jns
pop
outsl
adc
ficoms
sub
mov
aaa
add
popf
mov
imul
jnp
lcall
sub
mov
sarl
dec
push
in
std
cmp
inc
mov
iret
mov
add
into
inc
push
ret
pop
xlat
dec
push
iret
inc
setg
jp
xor
jmp
cwtl
mov
xchg
aaa
xchg
lods
sbb
and
adc
loop
and
mov
xchg
inc
pushf
out
lock
push
orl
jmp
add
cmp
rol
cmp
cmp
add
bound
mov
pop
push
xchg
jne
mov
add
stc
popa
int
cmp
insl
popa
dec
rcrl
sbb
ds
out
jae
sub
imul
cmp
jno
icebp
mov
sub
in
push
jecxz
mov
in
mov
lods
sbb
icebp
in
jecxz
scas
mov
ret
lahf
insb
push
xlat
iret
adc
jmp
xchg
push
dec
or
popf
sbbl
pop
loopne
loopne
imul
mov
push
dec
in
inc
xchg
mov
xor
mov
ljmp
push
stos
lcall
ljmp
sub
xchg
cld
mov
pushf
mov
js
enter
push
xchg
jp
shll
inc
stos
popf
leave
test
imul
in
or
sbb
mov
icebp
int
and
dec
jecxz
dec
xchg
fidivl
clc
sbb
testl
sbb
push
add
pop
int
loop
movsb
sub
scas
repz
fcmovnbe
inc
das
outsl
xlat
pop
xchg
sbb
mov
shl
movl
pusha
dec
test
pop
mov
add
pusha
jmp
push
clc
in
dec
rcl
mov
ja
pop
inc
mov
inc
sub
imul
jno
sub
and
insl
add
in
loope
pop
fistpl
stos
sbb
ljmp
xchg
or
xlat
fiadds
bound
mov
fstl
xor
jp
lahf
cmp
pop
cmpsl
inc
mov
mov
out
jb
cmp
pop
xchg
aad
push
loopne
xchg
mov
cs
mov
sbb
lods
mov
in
mov
int
or
sbb
loop
lods
push
push
inc
aad
bound
in
cmp
testb
lret
scas
xor
testl
jb
cmp
gs
sti
jno
pop
xchg
gs
ficoms
jo
pushf
or
cmp
mov
fcompl
inc
and
insb
push
mov
pusha
lea
jb
pushf
pushl
ret
testl
outsb
mov
es
inc
and
xchg
dec
nop
jo
cli
cmp
add
sbb
jle
nop
fiadds
fisubrl
dec
jmp
adc
sbb
dec
cmp
adc
mov
negb
and
inc
sub
push
xchg
stos
ljmp
or
out
cmp
das
pop
pop
xchg
pop
lea
call
pusha
jmp
pushf
lea
jb
jmp
call
jmp
dec
sti
mov
in
push
jns
pop
inc
sub
das
or
pop
jecxz
xlat
fcoms
or
ss
and
xor
popa
fdiv
sub
mov
cmp
sub
js
nop
rorb
int
out
dec
iret
xchg
push
jl
and
fldt
add
dec
mov
sbb
pusha
test
mov
notb
in
sbbl
jge
data16
cli
xchg
cmp
xor
add
mov
jb
push
cmp
movsl
xor
gs
popa
inc
pop
xchg
lahf
mov
ret
inc
dec
sbb
shl
xchg
pusha
sar
not
pushf
mov
call
push
push
inc
push
xor
cs
insb
add
mov
mov
addl
cmp
out
xchg
add
lods
push
ror
ret
nop
inc
fidivs
data16
cmc
adc
cwtl
xchg
scas
push
sbb
shlb
fnstenv
add
dec
dec
and
or
dec
lock
test
outsb
or
ret
adc
inc
clc
ljmp
div
scas
dec
ds
dec
push
push
xor
cwtl
mov
cmpsb
xor
cmpsb
push
ljmp
mov
pop
add
add
add
pop
add
add
add
push
add
add
add
push
add
add
add
lcall
push
mov
add
add
add
mov
add
add
add
add
addb
add
in
push
add
add
add
jmp
add
pop
mov
add
xor
add
ss
stc
add
add
pop
pusha
push
inc
call
lahf
pop
rcrl
add
imul
mov
push
shll
test
xor
mov
das
push
inc
daa
pop
xor
pop
push
aaa
mov
outsl
ja
popa
scas
lret
jb
es
lahf
cmp
sbb
jge
cmp
clc
xchg
cmp
sub
subl
push
sarb
fadd
push
insb
enter
je
and
add
dec
add
int3
add
orl
cmc
lock
jnp
int3
lods
sub
loopne
test
js
movsl
or
sbb
jae
adc
ret
cmpsb
inc
ret
mov
adc
mov
sub
xchg
hlt
jbe
inc
mov
mov
push
cmp
mov
insb
stc
lcall
dec
das
inc
mov
dec
cwtl
in
mov
lods
inc
sbb
adc
lods
inc
cmp
pop
xchg
add
popf
and
pop
popa
loop
test
ret
sub
mov
stos
or
psubsb
clc
adc
fiadds
insb
pop
mov
mov
int3
mov
adc
hlt
sbb
cmp
push
jle
mov
fstp
xchg
rclb
sub
xchg
div
repnz
cli
mov
adc
int
int
mov
mov
pop
xchg
sub
in
or
lock
pop
mov
jbe
repnz
lea
fnstcw
aad
or
or
ljmp
xchg
pop
push
cmp
jno
stc
std
xchg
cmpsl
mov
aaa
das
xchg
jnp
out
rcrl
adc
mov
jecxz
pop
cld
mov
outsb
lods
pushf
into
xchg
rorl
pop
pop
ljmp
inc
or
aad
push
push
pop
xlat
inc
sbb
fwait
cmp
xor
mov
mov
repnz
jb
in
lret
adc
pop
jle
in
jo
mov
call
into
or
loop
ret
xor
add
adc
arpl
sub
test
loopne
add
add
imul
cmp
out
pop
or
aaa
aaa
shll
dec
add
fldt
ret
and
pop
pop
lret
push
out
xchg
xor
js
xchg
popl
ret
push
push
adc
pop
fcmovne
mov
mov
sbb
push
mov
lcall
sarb
jp
sarl
add
cmc
xchg
push
inc
adc
imul
lds
pop
lock
add
iret
xlat
imul
nop
add
xchg
icebp
jmp
add
out
jbe
mov
mov
std
adc
mov
rcrl
lods
sbb
pop
xchg
loopne
das
pop
cmpsb
xchg
mov
test
add
leave
cmp
lods
inc
pop
ss
inc
stos
mov
add
mov
and
leave
mov
arpl
dec
pop
push
sbb
test
jl
push
stc
jle
sub
and
push
cmpsl
xchg
aad
call
out
cmp
adc
sbb
mov
ljmp
insb
nop
xchg
cmp
xchg
dec
mov
cld
mov
cs
shl
xor
call
push
mov
sbbb
frstor
or
andb
mov
repz
lahf
mov
roll
je
add
test
and
stos
fwait
mov
test
mov
fdivrp
and
mov
xchg
aaa
cwtl
xchg
pop
pop
adc
or
and
mov
jp
imul
pop
dec
mov
adc
movsb
mov
sub
lods
or
add
popf
fists
dec
and
pop
xor
out
daa
mov
xor
adc
xlat
aaa
sti
out
inc
ret
pop
test
xchg
jge
rcl
bound
jno
sahf
sub
sbb
dec
outsl
std
cmp
add
je
jb
gs
jo
outsb
push
jb
inc
add
and
bswap
mov
pushf
pushf
bswap
mov
push
mov
push
mov
movsbl
mov
jmp
push
dec
dec
push
push
dec
dec
dec
cs
push
push
add
lcall
mov
cmp
jo
sbb
loopne
hlt
inc
mov
ret
and
or
loop
insl
std
lcall
and
imul
dec
adc
lds
pop
aad
cwtl
movsl
in
sub
test
cmc
cwtl
out
std
inc
andl
ficoms
sub
in
in
fcomps
xor
xchg
pop
adc
div
loop
add
ds
pop
xchg
in
clc
cmp
test
xor
bt
ror
push
movb
std
pushw
popfw
lea
jo
push
inc
pushf
pushf
push
adc
lea
push
pushl
ret
sbb
xchg
inc
out
mov
jge
cmp
inc
test
push
jmp
sub
sub
inc
adc
and
sbb
movb
jbe
psraw
out
in
jecxz
cmp
mov
mov
push
loop
pushl
push
sub
ss
dec
lods
cmpl
cmp
ss
push
lods
imul
and
jne
mov
imul
shrl
fldenv
stos
jp
lret
cmpsl
jae
jmp
dec
pandn
lret
sbb
push
pop
jmp
dec
pop
jb
fwait
push
iret
ret
cwtl
jne
inc
xor
into
outsl
into
cltd
pop
xlat
fsubr
mov
cmpsl
je
int
inc
adc
das
iret
jp
ja
inc
int3
lods
xor
cwtl
addb
xchg
cmp
sub
push
xchg
loopne
repz
cmp
push
lahf
daa
sbb
aaa
das
pop
xchg
adc
clc
cmp
cmc
xor
jmp
and
dec
les
adc
sti
addr16
jg
push
inc
pop
pop
testl
fsubrl
push
inc
mov
xor
jns
jne
sbb
clc
loop
push
jnp
lret
xchg
sub
jne
sub
in
decb
cld
dec
jae
rol
cs
idivb
std
or
cmpsl
fwait
xchg
pop
aas
jle
enter
xor
mov
ljmp
out
inc
pop
xchg
xchg
push
cs
aam
or
aas
xlat
xchg
pop
and
out
mov
jae
dec
xchg
push
repz
jns
dec
fs
add
outsb
xchg
add
sarb
pop
mov
and
xor
inc
stos
dec
inc
add
hlt
mov
mov
mov
mov
add
iret
insb
lret
dec
out
sub
dec
scas
mov
dec
dec
in
in
aam
pop
out
lret
clc
in
jo
adc
mov
cli
or
addr16
enter
rorb
gs
shlb
xchg
jg
mov
pop
xchg
gs
insb
and
lea
ja
cmc
bt
push
pusha
imul
pusha
stc
jmp
inc
inc
dec
xor
cs
insb
add
dec
cld
bsf
call
ror
bt
add
ja
bt
shr
pushf
call
mov
call
btr
mov
stc
jmp
xchg
std
jne
jg
cmpsb
xchg
cld
adc
test
sbb
mov
mov
inc
jmp
rcrl
pushw
out
pusha
mov
bound
xchg
cmp
dec
sbb
adc
clc
inc
pusha
stos
inc
out
adc
aas
add
cmp
repz
push
fbld
ficompl
push
mov
loope
lock
test
popa
rcrl
insl
imul
pop
xchg
lea
call
jmp
push
movl
call
pushf
clc
call
test
jmp
pusha
push
mov
mov
pushl
jmp
xchg
shlb
mov
repz
inc
into
ljmp
push
mov
out
pop
aad
push
movsb
jmp
into
dec
push
push
and
and
insl
pop
mulb
addb
stos
cmp
mov
enter
and
jp
sbb
xchg
mov
xor
insl
out
pop
sub
cs
loope
arpl
sbb
movl
pop
xchg
push
pop
psubd
cmp
mov
mov
icebp
mov
pop
shll
fwait
out
clc
inc
push
xchg
dec
lret
mov
mov
sub
shlb
test
int3
cli
ljmp
add
fidivl
jg
push
fnstenv
xor
xor
fcomps
add
ficompl
push
adc
negb
inc
popf
cmp
jmp
pop
fisttpll
jne
adc
icebp
scas
sub
pop
sbbb
jnp
xchg
fwait
adc
mov
inc
out
out
xor
ret
sahf
cld
test
enter
sub
push
mov
fs
rol
cmpb
fildll
pop
iret
aaa
daa
pop
stos
jmp
stos
out
mov
adc
sub
cmpsb
adc
mov
push
nop
jbe
iret
jae
dec
pop
out
shrl
je
push
cmpl
adcb
in
add
inc
jb
pop
repz
cld
shll
adc
mov
aad
cwtl
loopne
popf
sbb
and
jle
loop
push
mov
cmp
pop
rcr
insb
lods
jae
cmc
std
jecxz
aam
push
mov
sub
push
movsl
or
pop
xchg
test
sub
loope
add
jmp
pop
mov
mov
mov
sub
push
cmpsb
data16
mov
inc
or
or
pop
xchg
ljmp
nop
clc
sbb
sbb
sbbb
xor
mov
pop
lods
sbb
or
xor
jg
aaa
xchg
sahf
lds
cli
ret
mov
jge
mov
pop
xchg
pop
in
or
and
je
add
add
and
movzbl
test
mov
clc
test
stc
call
call
push
call
jmp
pushl
push
lea
call
jmp
pushf
call
lea
jbe
bts
sub
bsr
btr
mov
bt
cmp
xor
sub
mov
rol
jmp
pushf
push
lods
push
push
xor
clc
cmc
movl
ror
pusha
xor
cmc
pushf
movb
stc
ror
call
add
mov
push
mov
pushl
bsf
rol
pushl
mov
stc
pushf
pushf
sub
push
rep
lea
mov
mov
movw
movb
mov
lea
jmp
test
pusha
jmp
add
push
gs
outsl
jb
inc
inc
add
jb
push
cli
out
pop
push
inc
int3
mov
clc
test
shrb
mov
data16
sub
mov
sarl
movsb
mov
sbb
fisttpl
xchg
pop
jo
popa
dec
aad
cltd
sub
mov
cltd
mov
leave
mov
cmpl
mov
pushl
lea
je
pusha
call
not
rol
rcr
and
mov
jmp
jmp
clc
or
sub
lea
pushf
lea
mov
jmp
movb
lea
pop
push
pusha
push
movb
lea
call
mov
lea
push
pushf
lea
call
pusha
push
jmp
bsr
mov
ror
and
rol
call
call
pusha
mov
mov
pushf
mov
pushf
pushf
push
lea
jmp
imul
jo
fs
insb
add
add
je
imul
inc
add
dec
or
shl
pop
jp
jle
ds
push
mov
call
jae
and
lds
roll
push
aam
loop
or
sbb
in
jbe,pn
jge
xchg
inc
in
and
pop
pop
ss
test
es
mov
ret
lea
mov
std
ljmp
mov
divb
cs
or
scas
pushf
hlt
cmp
mov
popf
in
daa
pop
xor
inc
mov
repnz
xor
lea
pushf
pushl
pushf
call
add
fs
jne
bts
call
call
xchg
inc
inc
jb
incb
arpl
stos
and
ja
das
jbe
xchg
fiadds
pop
adc
or
add
lret
or
pop
rolb
into
jnp
imul
adc
push
mov
addr16
jno
add
stos
mov
cwtl
or
mov
pop
xchg
in
movsl
imul
mov
negb
rolb
es
loop
ss
jp
xor
jne
mov
cmp
jno
push
pop
push
mov
insb
dec
imul
sti
adc
xor
xchg
mov
jp
scas
dec
addb
inc
fldl
jge
jp
stc
nop
sahf
inc
fildll
xchg
cmp
inc
fmuls
dec
push
cltd
rcll
pop
cmc
adc
pop
pop
cmp
push
add
inc
stos
xchg
mov
xchg
mov
add
add
xor
inc
and
dec
jne
loope
fs
call
cmp
cmp
pusha
push
pushl
pushf
lea
jae
jmp
nop
dec
ficoml
fdivl
add
mov
cli
outsb
jbe
ss
ljmp
mov
out
push
mov
sub
xchg
xor
dec
mov
cmpsb
jecxz
xor
loope
lcall
push
subb
or
mov
dec
xchg
addr16
xor
xchg
adc
dec
mov
dec
xlat
adc
mov
out
push
mov
pop
jle
xchg
ret
push
or
fsubl
aam
or
push
int
sub
rol
cltd
test
xor
sub
mov
add
popa
sub
addr16
insb
mov
sub
ss
scas
pop
or
mov
movsl
dec
mov
cli
add
mov
push
fnstenv
push
loop
cli
fwait
ja
sbb
jge
fsubrs
clc
push
adc
mov
out
scas
pop
jmp
call
push
mov
jmp
mov
sti
aas
sub
cmp
jae
movsl
cltd
arpl
pop
mov
std
lea
sbb
daa
loopne
loop
rcrl
mov
movsl
lods
test
lock
adc
pop
rdmsr
inc
filds
outsb
xchg
sarb
xchg
frstor
adc
add
movsb
add
push
sbb
into
cs
shl
cmpsb
sbb
shrb
sarl
cmpsl
repz
scas
pop
and
pop
xlat
das
xchg
repnz
xchg
or
xor
cwtl
iret
mov
xor
mov
xchg
and
xchg
repnz
cltd
inc
lret
pop
inc
scas
push
in
or
xchg
xchg
aas
mov
cmp
jecxz
jecxz
mov
mov
or
loopne
data16
push
incb
loop
pop
hlt
repnz
jle
add
ret
inc
mov
int3
sub
aad
sub
lods
shll
cmpsl
cmp
pop
ds
push
into
movsb
add
cmpsb
cwtl
scas
sbb
jne
std
stc
jmp
pop
xchg
jns
movsl
cwtl
int
pop
rcl
adc
leave
and
push
into
push
xchg
lods
xor
pop
push
cmp
jae
dec
bound
mov
sbb
mov
inc
lods
jge
cmp
mov
pop
cli
pop
jmp
sub
fwait
or
or
fwait
adc
cmpsb
sbb
cmp
xchg
xor
mov
shll
out
out
dec
mov
pop
push
lds
aaa
cli
fstl
push
or
cmc
xchg
jge
pop
xchg
push
out
add
mov
lea
jmp
cmpsl
ss
push
out
mov
dec
adc
out
xchg
and
xor
inc
aas
or
cmpsb
inc
ds
iret
pushl
shll
arpl
sub
cmp
and
stos
ja
insb
pop
dec
xchg
mov
jle
in
cltd
rol
aaa
sub
push
mov
int
ja
push
sti
push
lods
and
mov
imul
mov
or
cmc
inc
aaa
fst
push
int
xchg
aad
icebp
loope
mov
aas
cmc
jg
stc
mov
cmc
pusha
stc
movl
cmpb
push
lea
jne
jmp
cmp
sub
pusha
pushl
popl
stc
jmp
push
mov
lea
call
pushf
pusha
pusha
call
lea
jne
call
mov
xor
push
or
add
imul
lods
or
data16
popa
add
lcall
jne
pushf
sbb
imul
fistps
inc
mov
pushf
jg
in
ljmp
jnp
mov
ficoms
sub
adc
nop
out
sarl
mov
insb
test
jle
int3
mov
jne
cmp
cs
xor
mov
xor
test
jp
lods
sbb
ljmp
daa
xor
cmp
xchg
or
arpl
mov
ja
ja
sti
xchg
repz
xlat
cmpsl
aaa
div
push
and
push
mov
hlt
fistpll
cli
popa
pop
pop
scas
jge
es
mov
movsl
ret
insb
bound
hlt
and
mov
mov
and
mov
cmp
pushl
scas
mov
xchg
xor
jge
xchg
adc
mov
idivb
incb
xchg
cmpsl
mov
adc
push
bndldx
mov
adc
loop
pop
jb
jbe
in
xchg
mov
imul
imul
sbb
xchg
jno
inc
adc
mov
mov
mov
ja
xchg
int
jle
xchg
xor
push
imul
or
or
xchg
cmp
decb
dec
dec
fcomi
out
data16
shr
inc
xchg
pop
sahf
out
push
jb
xchg
iret
pop
jns
mov
jg
push
sbb
mov
out
mov
scas
mov
dec
pop
maskmovq
negl
shlb
leave
testb
out
or
pop
mov
jne
and
fdivs
ds
aam
push
test
jmp
int3
mov
pop
out
outsb
add
jbe
int
pop
data16
push
shl
and
inc
sarl
test
addr16
cmpb
inc
cmp
in
push
shlb
and
xor
in
lods
mov
mov
jns
xor
mov
loop
push
leave
imul
cld
leave
imul
mov
fcmovnb
and
subl
mov
stos
lret
outsb
pop
out
mov
nop
add
mov
cmp
cld
hlt
pop
xchg
ss
js
loope
inc
testl
or
out
mov
cmc
clc
cmc
bt
shr
clc
pushf
test
cmp
call
inc
dec
dec
inc
dec
inc
xor
cs
insb
add
dec
out
mov
in
add
mov
jnp
addr16
or
xor
movsl
jno
pop
pushf
pop
push
and
cmpsl
ret
pop
roll
cmpsb
mov
std
and
adc
jbe
xor
xchg
fwait
add
xchg
in
test
rorl
xchg
sbb
movsb
not
data16
test
scas
call
in
add
mov
adc
jle
mov
and
jne
fldl
cmpb
pusha
push
inc
cmp
movsb
mov
mov
adc
aam
add
xchg
jp
inc
xchg
and
clc
jle
cmp
mov
test
jne
jne
and
jmp
dec
inc
push
addb
cwtl
mov
xchg
dec
mov
aas
in
fcomip
stos
insl
mov
cmp
jle
push
pop
iret
rol
loopne
je
mov
push
add
dec
in
aad
popl
hlt
in
daa
push
sub
adc
rolb
cmpsb
xor
loop
and
or
push
sahf
pushf
in
aad
insb
fimull
adc
ret
mov
push
mov
rol
cltd
in
ret
loope
popa
pusha
aam
test
loop
push
fldenv
sub
rolb
das
mov
pop
ficoml
push
repnz
xor
inc
cmp
mov
sti
mov
lock
mov
mov
xor
stos
fwait
adc
aas
fimuls
jb
mov
push
orb
sahf
add
mov
fdivs
les
sti
dec
adcb
xor
pop
and
and
adc
and
aam
mov
add
in
dec
leave
xchg
ja
cmp
xor
adc
loopne
cmp
jg
jmp
leave
lods
dec
leave
rcll
fisubs
popf
cltd
in
xor
adc
jmp
mov
repz
push
xor
add
sub
or
icebp
fxch
pop
ror
roll
jg
rol
add
out
jbe
fwait
out
sbb
mov
and
pop
xchg
mov
lea
jne
jmp
inc
rclb
fistpl
leave
inc
mov
shll
push
mov
movb
and
xlat
xchg
xchg
sub
pop
stos
jle
dec
sar
enter
pop
or
cmp
push
jl
sarl
idivl
cmpsb
ret
sbbl
sbb
mov
stos
shrb
sub
inc
cmp
and
cld
jo
xchg
mov
pop
jmp
xchg
or
lahf
orl
add
or
je
jge
cs
lock
push
jbe
nop
stos
jg
cs
or
inc
rsm
loopne
inc
imul
cmp
jl
fiadds
ja
outsb
cmp
sarl
push
orb
cmpsb
clc
adcb
xor
xor
pop
pop
daa
int
and
pop
jecxz
test
fisubl
cli
jbe
mov
pop
int
into
mov
ret
push
jbe
dec
mov
adc
and
in
and
dec
pop
push
icebp
popf
pop
xchg
xchg
std
sbb
mov
lods
movsl
icebp
cmp
mov
mov
pop
mov
jg
dec
int
adcl
mov
sub
test
test
jmp
hlt
mov
jno
mov
cmp
inc
in
sub
aaa
xor
lea
sub
xor
pop
xchg
pusha
jl
lret
mov
ret
in
mov
pop
cmp
inc
push
into
mov
or
fcmovnbe
jp
xorb
loop
inc
cmp
inc
and
int
out
jle
shrb
or
mov
into
pushf
mov
dec
sarb
mov
fadds
sbb
cmpsb
sub
sahf
aam
jl
fdivrl
lods
testb
and
mov
daa
jo
sbb
movsb
gs
fdivl
dec
push
dec
inc
cmp
fwait
jae
fbld
or
ffreep
ret
ds
fwait
js
mov
cmpsl
ja
add
mov
mov
mov
push
pop
clc
out
mov
ret
and
int
in
test
fsin
je
bound
stos
lea
and
or
jmp
cmc
xor
aad
popf
sub
sahf
pop
push
mov
out
mov
pop
movsb
lock
mov
aas
and
sahf
pop
xchg
in
js
pusha
lea
jne
call
pusha
call
jmp
inc
mov
mov
cmp
or
int3
xor
mov
or
mov
or
daa
lret
mov
xor
data16
jp
mov
dec
out
mov
mov
and
nop
xor
mov
push
xor
add
imul
jo
pop
fbstp
test
xchg
iret
push
cli
inc
insb
je
jne
fcoml
lods
je
xchg
push
movsb
mov
xlat
dec
es
stos
inc
ds
cmpsb
pop
xchg
adc
ss
mov
das
repz
out
xchg
das
bound
xor
add
stos
outsl
pop
out
inc
aaa
sahf
repnz
loope
je
movsl
fldt
xchg
or
fdiv
sub
imul
add
lret
arpl
push
scas
fwait
addr16
sahf
xchg
or
or
in
push
in
bound
jl
lods
pop
sbb
mov
xor
push
jecxz
and
xchg
icebp
lds
adc
repz
imul
xor
xlat
cmp
sti
sbb
inc
push
mov
jae
or
stos
scas
addr16
aaa
add
jge
outsb
pop
out
pop
fldpi
jecxz
cmp
movsl
sahf
jns
aas
stos
inc
push
iret
fwait
xor
dec
xchg
ret
dec
sbb
and
ja
fadds
xor
pop
pop
daa
ret
inc
aaa
mov
pusha
sub
push
ss
lea
out
mov
xchg
fisubs
inc
arpl
jae
push
mov
pop
xchg
ja
mov
jl
sub
movzbl
movzbl
pop
mov
pushf
mov
lea
mov
push
mov
pushf
pushl
pushl
ret
sub
shl
insl
cs
jp
inc
adc
mov
repnz
push
je
mov
stos
pop
xchg
aam
jo
mov
push
jle
jo
or
push
daa
mov
jae
hlt
jecxz
shlb
cs
xchg
cmp
movsl
cmp
daa
cltd
push
out
rcll
sub
cld
in
dec
imul
xlat
and
idivb
push
sub
movsl
adc
lea
popf
sub
sbb
xchg
insb
clc
push
pusha
lea
je
stc
cmp
test
cmc
cmp
call
es
inc
shll
pop
sbb
test
adc
mov
in
stos
mov
cmp
sub
icebp
jno
stos
ss
add
notb
ret
adc
inc
cmp
cli
jg
rcrb
push
outsb
or
push
pop
fs
push
jo
fdivs
cmp
jecxz
cli
adc
arpl
xchg
insl
cmp
adc
insb
inc
fbstp
inc
pop
mov
inc
shrl
xchg
sarl
lahf
cmpsl
pop
xchg
jecxz
sub
test
xlat
in
sarl
cmc
in
frstor
adc
or
xor
push
adc
dec
cmp
sbb
dec
test
pop
sub
out
in
fstps
fnstsw
or
cmpsl
mov
pop
and
fstpt
lret
mov
cmpsb
inc
popf
mov
fisubs
pop
popa
and
pop
jae
push
inc
xchg
aaa
mov
ror
pop
xchg
add
push
inc
rcrb
mov
xchg
adc
dec
adcb
and
int3
fcom
xor
incl
xchg
subl
testl
pop
aaa
and
test
dec
filds
and
aam
ss
test
mov
sti
fcoml
out
xchg
aaa
xchg
cmp
xor
bound
rcrl
lcall
mov
xchg
pop
pop
xchg
fisubrl
add
dec
insl
popa
addr16
outsb
insb
outsl
popa
add
and
lock
aad
push
negl
xor
fcmovnb
aas
rorl
xor
lahf
sub
ss
enter
pop
dec
push
xor
pop
jae
sub
cli
sbb
xchg
mov
dec
lea
add
and
jnp
testl
sar
xchg
mov
jbe
sub
mov
stos
lahf
and
mov
xor
adc
and
das
pop
xor
pop
out
cs
add
xchg
sbb
stc
pop
dec
popa
mov
pop
xchg
lds
pusha
bt
pusha
stc
cmp
push
call
pusha
cmp
pushf
call
cmp
stos
addl
adc
fs
mov
jo
sub
out
push
mov
enter
hlt
repz
push
add
xor
pop
aas
imul
jo
loope
outsl
sub
repnz
pusha
cmp
mov
cmc
or
adc
arpl
jno
ds
stc
xor
xor
mov
add
dec
jnp
cmp
push
xchg
xor
stos
xchg
es
mov
xchg
jmp
add
bsr
not
and
mov
pushf
cmp
jmp
test
aam
in
jnp
and
cmc
imul
xchg
sbb
jo
stos
sub
fwait
mov
pop
aas
push
rorl
mov
push
push
and
lcall
enter
dec
pop
bound
subb
cld
mov
fldenv
pop
mov
cmpsb
xchg
cmp
sub
pop
xorb
fildll
lods
cltd
mov
jge
dec
push
jmp
xchg
mov
mov
mov
push
int
mov
mov
or
push
cmp
leave
mov
in
leave
inc
cwtl
jl
push
call
test
pop
sub
or
xchg
mov
inc
xlat
pop
sub
lret
or
pop
inc
pop
or
xchg
cmp
and
cwtl
ljmp
and
in
push
cwtl
add
movsb
in
pop
xchg
lods
push
clc
xor
bt
call
push
ffreep
aaa
mov
out
inc
pop
mov
orl
xor
jae
imul
loop
add
inc
iret
or
iret
pushl
aaa
aam
lret
outsl
mov
gs
nop
push
jp
xchg
mov
loope
mov
insl
adc
sti
mov
mulb
mov
popa
push
cmp
in
or
pop
cmp
sub
xchg
lods
push
mov
mov
pusha
lea
jmp
fwait
push
inc
push
and
pop
mov
mov
daa
mov
sub
jbe
stc
xor
jmp
into
mov
scas
and
mov
and
or
enter
xlat
adc
jnp
sub
inc
inc
sbb
stos
sub
stos
jne
push
add
pop
loopne
cwtl
ss
lret
xchg
push
loopne
inc
mov
push
popf
and
popf
adc
add
movw
pushl
lea
call
push
mov
pushf
lea
jmp
lret
popf
cmp
bt
repnz
pushf
pushf
lea
jne
neg
xchg
cmc
mov
movsbw
sar
sub
jmp
bt
add
call
pusha
push
lea
jae
pushf
pushf
pushl
lea
jne
pusha
push
stos
pusha
pushf
push
lea
jmp
call
lods
pop
sbb
inc
popl
and
sahf
outsb
push
ds
mov
imul
repz
int3
stc
mov
adc
rcl
xchg
xor
cs
jmp
loop
sahf
test
mov
and
xchg
pop
and
imul
push
mov
lret
lret
pop
mov
outsl
pop
and
lods
out
sub
pop
fwait
setb
or
cmp
flds
lock
mov
cltd
and
mov
jp
mov
mov
push
push
pop
dec
loope
pop
nop
push
orl
mov
lcall
inc
aad
sub
lcall
and
adc
mov
add
fdivl
mov
adc
push
mov
cwtl
pop
xchg
in
mov
dec
dec
dec
inc
push
cs
insb
add
pop
insl
in
mov
xor
xor
gs
inc
add
pop
aad
pop
mov
loopne
push
xor
icebp
fstl
push
icebp
inc
xchg
xchg
mov
les
nop
push
or
sub
es
mov
jp
sti
jmp
pop
add
xchg
xor
test
cmp
shlb
push
popl
inc
push
xchg
cs
add
or
cli
pop
xchg
dec
fcompl
mov
call
cmp
add
pushf
mov
mov
mov
lea
jmp
or
movsb
mov
push
les
sbb
add
cwtl
jl
lods
rolb
bound
mov
aad
add
out
pusha
inc
pop
mov
dec
sbb
addr16
add
inc
mov
pop
jbe
jmp
xor
dec
idivb
fsubl
xor
and
shll
dec
aam
pop
test
clc
in
xor
test
pop
xchg
sahf
stos
ret
pushf
jmp
or
jmp
bound
in
stc
add
clc
pop
shl
pop
sub
imul
idiv
test
fsubrs
in
inc
mov
add
ss
inc
jae
cmp
cmc
lea
sbb
xor
jb
outsb
pop
add
push
in
mov
xchg
mov
sub
jns
mov
mov
jp
fistpl
cmp
jmp
xchg
mov
test
mov
push
jno
jecxz
inc
lahf
jmp
jmp
cmpsl
xchg
fwait
jg
xchg
ret
inc
add
imul
xchg
or
out
push
ja
dec
cmp
sub
sbb
and
mov
in
xor
mov
xchg
sti
cmp
sub
push
jecxz
xor
push
call
stc
fsqrt
adc
and
sti
cwtl
mov
out
xlat
addr16
test
add
insl
mov
sbb
add
xor
int3
enter
sbb
xchg
mov
or
test
enter
cmp
or
aam
test
sbb
lods
les
fldt
ja
pop
outsl
pop
sbb
mov
loope
daa
cmp
xor
sub
mov
jge
icebp
sbb
dec
xchg
inc
cs
fsubl
xor
sbb
dec
stos
mulb
xor
sub
inc
jp
int
fucomip
push
or
mov
movb
lea
je
sbb
rol
push
jmp
lea
jae
call
bswap
mov
pushl
jmp
push
rcrb
scas
loop
call
nop
or
or
sbbb
push
pop
movsb
xor
inc
xor
jp
add
int3
or
loopne
dec
in
jp
sbb
sub
pop
xor
mov
mov
sub
ror
cmpsb
sti
xchg
sbb
dec
lcall
push
inc
dec
mov
push
jp
adc
enter
dec
sub
repnz
fwait
scas
loop
fildll
adc
mov
iret
pop
test
jecxz
mov
and
jle
sbb
sub
lods
adc
adc
inc
xor
jp
aad
iret
cmp
fistpl
shll
popl
mov
xchg
mov
push
orb
int3
aas
cld
jp
rclb
addr16
mov
ja
jecxz
inc
aas
das
and
mov
cmpsb
ljmp
mov
sbb
inc
mov
imul
sub
fcmovb
or
jge
cli
sbb
out
push
ficompl
or
dec
imul
test
push
or
das
popf
xor
jmp
push
in
test
in
nop
repnz
aam
push
pslld
incl
shll
push
aaa
fcmovb
cli
xchg
dec
mov
or
popf
insl
pop
xchg
lods
call
pop
std
std
mov
fs
add
aad
into
rcr
sub
mov
pop
jmp
pop
cmpb
lods
jge
mov
inc
pop
and
aam
pop
into
add
in
sub
test
cmp
adc
aad
xor
xchg
add
xchg
push
mov
fs
add
xor
xor
adc
inc
movb
lea
call
jmp
shll
dec
hlt
pop
pop
mov
stos
and
push
rcrb
xchg
mov
adc
loope
f2xm1
fdivp
aas
and
pop
dec
jmp
jl
mov
sub
test
in
add
lahf
sbb
cld
outsb
or
sub
scas
and
xchg
sub
stc
fdivrp
fwait
cmp
test
mov
adc
xor
dec
jp
movsl
inc
mov
int
cmp
sub
adc
add
lea
jne
call
cmp
push
pusha
lea
ja
bt
bt
cmc
cmc
imul
cmc
add
pushf
pushl
pushf
movb
lea
jmp
jo
sub
mov
cli
out
lcall
cmp
sbb
or
loop
rorb
outsb
pusha
sbb
or
xchg
pop
adc
xor
test
inc
mov
push
leave
mov
addl
xchg
lcall
popf
adc
push
sbb
lock
aaa
int
adc
jecxz
mov
fwait
out
add
outsl
lret
cmp
pop
xchg
arpl
or
mov
mov
clc
pop
in
pusha
fsubl
mov
mov
jg
jl
iret
cmp
inc
dec
into
add
push
sarb
jl
jmp
jmp
je
ret
inc
sbb
sbb
xchg
jg
inc
xor
out
xor
into
arpl
inc
std
cmc
aad
daa
mov
in
xchg
cmp
dec
xchg
cld
add
and
pop
xchg
and
cld
lea
jge
pusha
lea
jae
pushf
stc
bt
call
lea
jae
sets
xchg
mov
inc
dec
pusha
jmp
adcb
gs
adc
pop
pop
mov
mov
pop
daa
xor
iret
lahf
or
mov
push
retw
loope
or
add
pusha
mov
mov
test
adc
mov
bound
jbe
test
adc
test
xor
js
inc
call
in
push
mov
shlb
xor
in
int
cld
fistpl
mov
in
lds
inc
mov
ds
int3
push
ret
in
xor
pop
pop
sub
xchg
push
xchg
insb
cmpsb
mov
dec
mov
mov
repnz
lret
arpl
mov
dec
mov
inc
mov
xor
dec
xchg
cmp
push
lea
setg
imul
adc
pop
xchg
cli
mov
jmp
pusha
pushf
call
mov
aas
mov
aas
sbb
dec
xor
add
std
gs
or
int3
mov
jecxz
data16
push
mov
adc
push
es
loop,pn
test
stos
ret
dec
popa
jne
fidivs
je
mov
mov
pop
jnp
xchg
aam
outsb
jno
std
leave
mov
js
lock
test
mov
push
aaa
das
out
les
and
jno
and
into
loop
and
or
repz
xchg
imul
lea
call
jnp
pusha
pushl
pushf
lea
jae
cmp
xor
pusha
jmp
outsb
pop
sub
pop
sbb
and
and
adc
cmpsl
jp
iret
test
add
in
or
bound
repnz
xchg
sahf
cmp
jle
cwtl
mov
sub
addr16
adc
mov
mov
push
fwait
cmp
mov
mov
leave
sub
sbb
imul
sub
xchg
mov
inc
aam
loopne
push
mov
int3
inc
and
pop
outsl
mov
pop
push
inc
add
and
popf
std
jmp
pop
xchg
push
loop
movsl
mov
mov
lds
pop
push
lret
mov
into
test
cli
leave
test
sbb
cld
mov
cs
lret
flds
es
jecxz
and
xor
jo
inc
push
xor
xchg
xchg
mov
fs
insb
lods
pop
scas
jmp
xchg
xor
jge
or
popf
pop
xchg
in
ja
adc
out
mov
shrl
add
iret
mov
adc
adc
xchg
pop
pop
sub
cmpsb
pop
pushf
fisubl
mov
cmp
je
mov
pop
jp
pop
jge
add
or
movl
push
in
xchg
bound
push
cld
into
fwait
out
sub
push
mov
and
lret
cmpsl
add
mov
push
mov
push
push
sub
insb
stos
inc
adc
push
aam
sub
or
sub
outsl
imul
lret
pop
xchg
test
jl
adc
xchg
data16
out
push
mov
repz
pop
rorl
adc
add
push
jp
add
sbb
aaa
mov
das
jg
fwait
cmp
out
lret
xorl
cmp
cltd
inc
test
mov
inc
xchg
aaa
out
push
push
ljmp
mov
cli
repnz
xchg
mov
mov
mov
mov
sub
aad
jno
in
inc
stc
inc
or
xchg
lods
add
add
mov
jge
add
sarb
add
je
mov
xor
arpl
dec
gs
pop
je
nop
aas
insl
cli
aas
add
dec
lods
pop
push
pop
inc
out
mov
or
insl
test
lahf
fcomp
or
push
push
dec
pop
inc
pop
shll
mov
aaa
xchg
fcoml
sub
sbb
out
xchg
es
xchg
cmp
shrl
mov
cmpb
mov
pop
arpl
pop
mov
adcl
lcall
adc
aas
push
lea
call
stc
pusha
bt
sub
push
pusha
lea
jne
pushf
mov
movb
call
lea
ja
push
mov
call
pushf
pushf
push
mov
pusha
jmp
call
call
pushf
pushl
call
pop
xor
lock
sbb
pop
aas
mov
repz
pop
push
cmp
divl
movsb
pop
sbb
popa
push
mov
shr
push
adc
push
add
ja
fldenv
fisttps
sub
mov
in
fwait
jg
pusha
cmp
lret
pop
sub
cmp
loop
data16
adc
stos
sbb
call
xchg
mov
dec
nop
sbb
aam
or
sbb
in
fcomps
cmpsb
sahf
enter
test
leave
inc
or
mov
ja
jle
cmpsb
pop
incl
inc
cli
mov
rcrb
pop
into
cltd
outsb
jecxz
pop
sub
xchg
test
pushf
xor
data16
adc
in
iret
lret
jmp
enter
stos
scas
enter
fsubrs
jae
xor
mov
xor
hlt
pusha
mov
xchg
push
cs
sub
bound
mov
lret
shl
or
bound
pop
orl
mov
mov
fsub
and
mov
mov
pusha
mov
sahf
stos
add
aam
loopne
imul
mov
xchg
and
nop
es
popf
adc
cwtl
int
test
add
lret
inc
cmpsl
mov
shll
or
enter
adc
pop
mov
dec
out
int3
ret
or
dec
insl
mov
sbb
dec
cmc
inc
test
sub
jmp
lds
fsubrs
push
popa
jno
into
lcall
jecxz
sldt
cmc
test
call
or
push
dec
mov
ret
xor
sub
mov
mov
movsb
mov
push
fsubrl
xchg
dec
scas
lcall
or
jo
mov
ret
xor
jecxz
dec
xor
add
jmp
orb
cmpsl
incl
fwait
pop
xchg
jbe
add
dec
gs
imul
insl
add
xor
loope
test
xor
cli
mov
or
mov
sbb
mov
sbb
push
dec
in
lods
mov
add
xchg
pop
cwtl
ljmp
push
ret
rcrb
bound
push
lret
das
daa
add
and
icebp
xor
xchg
pop
in
sub
movsl
mov
or
fs
adc
push
pop
inc
inc
adc
jno
jns
jge
mov
push
adc
mov
repz
into
sub
in
jno
mov
inc
xor
repnz
enter
or
pop
sub
add
or
movsb
pushf
pop
xchg
shrb
pop
inc
shll
xor
jg
icebp
daa
add
addr16
mov
xchg
cmpsl
lahf
or
lahf
jmp
add
aam
adc
ret
mov
dec
dec
push
mov
or
cvtdq2ps
cmp
ret
pop
and
ds
mov
test
mov
push
ffree
andl
aad
jmp
out
or
popf
cmc
pop
mov
adc
xchg
mov
js
fdivrs
and
push
mov
pushl
ret
jae
dec
mov
pushf
push
pusha
inc
not
call
lea
jae
xor
add
bsf
cmp
mov
not
rol
bt
add
mov
btc
pushf
clc
mov
pusha
stc
test
sub
cmc
pushf
bt
cmc
repnz
movw
pushl
call
dec
pusha
push
adc
mov
inc
in
outsl
imul
ret
fs
jmp
imul
or
mov
lcall
xchg
repnz
jl
mov
or
xor
cmp
xor
stc
sbb
test
inc
popa
mov
jecxz
xlat
hlt
ja
mov
add
cltd
lock
jno
pop
jg
stos
cwtl
popa
pusha
xor
pop
out
mov
mov
lods
mov
and
pusha
mov
jbe
fs
jge
lret
inc
pop
dec
cmp
push
mov
mov
clc
ja
flds
cli
rsqrtps
stc
sub
aas
test
insl
das
mov
sub
adc
std
mov
repz
jmp
jecxz
pusha
mov
sarl
imul
inc
pusha
xorb
icebp
pusha
mov
ja
lret
mulb
push
adc
xor
mov
xchg
pusha
inc
fs
lahf
push
loop
pop
dec
loope
hlt
pop
ljmp
popf
inc
mov
pusha
push
jne
jbe
lods
clc
pusha
cmp
lea
pusha
mov
test
pusha
sub
out
mov
xcrypt-cbc
cmpsl
shrb
mov
repnz
adc
arpl
cmpsb
xor
add
xor
mov
jae
jmp
loope
inc
xchg
popa
pushf
dec
fwait
xor
ja
xchg
push
test
scas
mov
out
cmp
add
mov
pusha
cmpsl
imul
mov
cmp
xchg
xor
jmp
xchg
aam
ficoml
mov
cmc
movq
ja
jns
or
add
pusha
addr16
fwait
call
iret
lahf
dec
push
add
or
lcall
inc
pop
repnz
aad
jmp
data16
adc
pusha
movsb
out
enter
mov
dec
lcall
dec
sbb
pusha
jge
jecxz
popf
out
pop
jmp
outsl
test
push
adc
shl
rclb
pusha
cmp
lahf
jl
mulb
or
pusha
dec
mov
xor
pusha
dec
cwtl
sub
or
leave
imul
pushaw
lret
push
movsl
jl
push
fcomp
pop
scas
jmp
xlat
fcoml
cwtl
inc
xchg
bound
bound
mov
sub
pusha
and
jo
popa
data16
pusha
cmp
mov
mov
add
push
mov
sbb
call
push
mov
ds
push
mov
mov
insb
dec
pop
add
mov
jg
inc
pusha
bound
sbb
sub
adc
xchg
cmpsl
push
mov
in
pusha
fs
jge
mov
insb
cmc
je
mov
mov
and
insb
in
pusha
pop
imulb
xchg
pop
push
adc
popl
pusha
mov
xor
leave
ja
hlt
xchg
inc
add
mull
out
mov
outsb
loope
nop
cmp
pushf
popf
je
imul
aaa
in
adc
repz
pop
popf
loope
out
and
pusha
and
scas
jge
pop
mov
xchg
or
ss
sub
jo
shlb
rcll
scas
mov
int
out
loopne
loopne
movsb
jl
push
push
ficomps
push
pop
dec
pop
sbb
popa
out
jl
mov
inc
pop
pusha
xchg
or
xor
pusha
mov
out
mov
iret
or
arpl
jns
push
jmp
insb
imul
or
insl
data16
jle
jae
adc
repz
das
je
sbb
jl
jne
loopne
iret
pusha
push
enter
fdivrs
insb
xor
pusha
popa
push
mov
aas
pusha
push
pop
mov
jb
dec
jmp
pusha
mov
jo
xchg
das
inc
jle
notb
pushf
test
pop
mull
mov
gs
stos
and
adc
or
sub
test
ds
sub
cmc
in
fcmovne
lahf
mov
fst
aam
adc
cmp
pusha
cmp
push
pusha
xchg
pop
push
mov
mov
jns
addb
mov
xchg
mov
or
dec
xor
repnz
inc
enter
pusha
xchg
insb
mov
push
dec
push
aas
ja
stos
in
sti
sub
call
lret
mov
pop
aam
leave
je
mov
xor
sub
inc
loopne
sbb
xorl
mov
lea
push
inc
mov
inc
loopne
cs
push
and
sbb
call
call
jno
mov
repz
push
push
js
and
inc
adc
clc
and
pop
mov
mov
jp
cmpsb
inc
loopne
iret
movsb
inc
loopne
xor
sub
in
cmpsb
sub
pop
shl
jne
in
loop
mov
movsb
fstp
les
sbbb
out
push
add
shrl
mov
loopne
sbb
sub
add
mov
shrl
mov
mov
sbb
test
or
push
cmc
aad
test
shl
fs
sbb
rol
add
sbb
in
cmpb
sub
mov
jae
fucomp
jb
add
data16
lock
ds
xor
test
add
inc
and
and
popa
adc
std
sbb
bound
add
popa
stc
lret
popa
std
hlt
add
loopne
inc
mov
icebp
les
adcb
leave
pop
add
shrl
and
cmc
lods
jg
mov
pop
xchg
mov
lahf
jg
mov
lods
and
gs
jmp
cwtl
mov
aad
in
add
test
popf
sbb
daa
cmpsb
mov
test
inc
fsubrp
jl
js
and
insl
cmp
cmc
in
inc
and
jno
jno
mov
adc
mov
data16
mov
jg
mov
and
mov
jo
in
popa
inc
sub
je
jge
and
dec
call
imul
movsb
js
inc
loopne
push
stc
les
pop
stc
cmpsl
movsb
add
leave
pop
xor
dec
inc
pop
jno
adc
xor
pushf
and
gs
adc
pop
sub
ret
xchg
inc
inc
and
inc
lock
inc
xorb
push
sub
cld
je
xorb
cmpsb
lods
call
adcb
ds
ret
lock
inc
and
stc
xor
icebp
add
jbe
xor
pop
lock
jns
dec
aad
sub
cmp
xor
cmp
shl
and
in
mov
lods
and
lock
mov
inc
push
adc
repz
jne
mov
jno
lods
mov
cmc
mov
outsl
pop
jge
mov
lcall
stc
gs
add
sti
push
inc
jl
das
aad
pop
ficomps
add
xor
and
enter
sub
adc
xor
or
test
sub
test
mov
and
cmc
out
xchg
out
lret
insl
clc
mov
aas
std
icebp
xor
je
mov
mov
and
je
test
xor
lods
adc
and
mov
mov
mul
push
sub
rorl
mov
pop
jno
inc
dec
inc
mov
test
imul
rcl
dec
dec
in
jmp
icebp
push
out
add
cmc
testb
shrb
les
add
fadd
imul
jne
gs
insl
popa
xor
rcrl
mov
rcll
lds
in
mov
fstpl
addr16
cmc
inc
es
push
call
jno
jge
popa
dec
ss
out
and
push
push
dec
push
inc
mulb
lahf
and
pop
sbb
shr
js
jo
inc
outsl
inc
loopne
and
call
stc
push
popf
and
jg
pop
jo,pn
inc
into
push
pop
out
inc
test
adc
in
cltd
mov
in
mov
test
inc
inc
jle
stos
scas
push
jae
xor
pop
movsb
divb
shlb
lcall
inc
or
mov
lods
fldenv
jno
adc
data16
sub
mov
call
jno
movsb
inc
cmp
lock
fwait
and
outsb
inc
jne
pop
pop
adc
data16
inc
bound
jno
jb
in
movsl
dec
or
inc
pop
mov
mov
sahf
stos
repz
bound
and
lock
xor
daa
jo
jecxz
jle
in
nop
pop
and
push
outsl
pop
push
orb
popa
push
xchg
mov
mov
movsb
hlt
push
jb
lds
ffreep
or
mov
mov
pop
pushf
cmp
arpl
dec
xor
jne
lock
cmpsl
aad
out
cmc
stos
mov
fucomp
mov
fcoms
mov
in
scas
add
movl
push
inc
movsb
cmp
fwait
lock
nop
ret
add
cmpsl
mov
movsl
inc
addr16
sti
inc
and
cmp
ds
jo
inc
popl
repnz
call
fdecstp
in
jmp
jno
mov
loopne
jno
mov
ret
jnp
rcl
mov
push
inc
adc
adc
jle
xchg
xchg
pop
jle
dec
jo
jl
arpl
push
jns
imul
mov
cmc
adc
cmp
and
cmpl
roll
fidivrs
add
xchg
int
xchg
ljmp
mov
in
xchg
insl
mov
in
inc
xlat
adc
sbb
fsub
inc
imul
add
jno
lock
sbb
es
and
jmp
push
xor
add
enter
xor
aam
and
mov
call
insl
fsubrs
mov
sbb
sbb
mov
sub
cmpsb
into
push
shlb
jl
sub
or
inc
dec
xchg
xor
shrb
insb
inc
sbbb
inc
cltd
pop
loop
fldenv
inc
arpl
and
arpl
xchg
mov
dec
fs
fdivrs
jno
in
push
lds
xchg
icebp
adc
icebp
xor
test
and
nop
nop
jle
cmp
rolb
insl
jb
jge
mov
push
xchg
movsl
loop
icebp
ret
scas
or
nop
push
inc
and
inc
rolb
jnp
js
push
hlt
loopne
push
inc
fs
push
jmp
mov
inc
jmp
jl
add
jno
cmpsl
aam
fs
dec
or
adc
repz
js
jle
adc
std
sbb
imul
mov
out
and
bnd
adc
and
adc
gs
jo
mov
aaa
mov
cmp
push
mov
insb
xor
inc
nop
add
pop
clc
and
cmc
in
jecxz
mov
xchg
and
adc
push
rcll
dec
in
ljmp
jne
pop
sti
push
in
test
sub
in
imul
out
lods
mov
inc
fstpl
mov
fildll
and
mov
xchg
cld
sub
jbe
data16
rolb
or
mov
adc
inc
dec
js
push
sbb
inc
add
les
inc
mov
pop
lods
dec
mov
stc
jne
lds
and
push
or
out
icebp
inc
std
or
add
jbe
mov
ret
xchg
push
xchg
int
mov
hlt
stc
inc
jae
jns
jmp
add
pop
insl
cmpsl
mov
in
rol
xor
jge
leave
mov
test
adc
fcomps
jnp
push
and
push
dec
and
inc
xchg
add
push
xchg
movsb
xchg
inc
aam
int3
shlb
jns
and
jae,pn
jno
push
or
adc
inc
jne
and
jecxz
inc
jns
and
out
inc
aaa
sub
sub
mov
movsb
stc
mov
dec
loop
inc
pop
fisubrs
test
cld
xchg
inc
cmp
push
repz
mov
mov
pop
inc
and
ret
push
sbb
roll
loope
lock
add
out
and
jae
in
jae
inc
xor
gs
ja
push
mov
adc
mov
dec
iret
dec
mov
or
pop
jmp
jno
mov
aad
mov
and
out
imul
es
sub
inc
inc
lock
call
inc
inc
jecxz
add
jb
mov
adc
push
ret
addb
in
xor
adc
icebp
cmpsl
xor
mov
loopne
or
sub
pop
test
in
sub
xchg
aad
fs
xchg
lret
sbb
inc
and
movsb
movsb
andl
insb
bnd
xorl
push
inc
loop
mov
mov
movsb
stc
lahf
mov
jg
mov
cli
and
xor
addl
out
push
add
mov
les
and
enter
add
jo
out
js
test
mov
mov
push
lods
add
inc
out
gs
adc
movsb
in
push
cmpsb
push
andb
inc
in
ja
pusha
repnz
movsb
adc
call
sbb
pop
loop
xchg
jle
inc
pop
fsubs
and
and
sbb
push
icebp
mov
data16
test
fstpt
xor
mov
pop
sub
pop
adc
jecxz
in
imul
or
rcl
popa
adc
loope
xchg
mov
clc
push
inc
pop
mov
jae
insl
sub
mov
add
lds
das
adc
push
mov
rorb
jp
mov
cmpsb
lods
pushf
mov
sub
jno
inc
mov
pushf
xchg
push
shlb
mov
mov
xchg
xchg
shlb
sbb
fs
mov
loopne
xchg
out
movsb
or
enter
pop
aam
cmp
push
addb
add
gs
and
lods
sub
rclb
repnz
scas
inc
subb
lock
push
inc
test
cmc
inc
inc
add
fsubl
call
roll
add
cld
fsubs
es
xor
test
fistpll
in
arpl
mov
mov
xor
shl
jo
lcall
add
mov
rolb
ret
cwtl
inc
add
test
mov
inc
adc
add
inc
jno
movsb
jge
xor
xor
outsb
inc
jmp
mov
pop
lahf
imull
fnstcw
push
mov
mov
or
push
push
cmc
cmp
inc
lds
jne
mov
and
popf
test
loopne
jp
out
inc
in
cmp
mov
lock
lcall
cmp
sbb
rolb
cmp
and
adc
aad
dec
add
gs
lock
insl
xor
mov
xchg
popa
lods
mov
xlat
out
sub
rorb
mov
sbb
mov
dec
lods
xchg
cmpsl
and
aad
dec
and
fstp
and
sub
xor
push
in
pop
inc
or
pop
xchg
test
loopne
addb
push
rolb
ret
inc
adcb
and
inc
jo
and
insl
shl
fadd
and
andb
addb
sti
gs
jno
xchg
inc
loopne
adc
loopne
shll
nop
lock
int3
xor
rclb
and
adc
test
inc
adc
mov
arpl
lock
adc
cwtl
insl
xor
imul
arpl
pushl
int3
nop
fs
add
imul
jnp
or
loopne
pushf
dec
sub
in
shll
loopne
mov
orl
stos
je
adc
add
pop
lock
cmp
push
push
and
inc
mov
jno
jb
jle
out
pop
insb
jne
jmp
imul
insl
popa
gs
push
mov
cmp
mov
dec
mov
bound
ret
ret
gs
loopne
adc
ret
lods
rorb
inc
and
adc
xor
adc
gs
dec
push
inc
jb
test
ret
mov
xor
sub
mov
scas
dec
lods
inc
and
das
insb
push
push
push
insb
cmp
test
add
lods
mov
push
and
inc
sub
movsl
shll
mov
jmp
dec
sub
loope
std
mov
in
cmp
push
je
imul
and
in
andb
mov
add
xor
jne
loop
loope
add
push
loopne
outsb
jno
movsl
test
popa
inc
nop
mov
inc
jns,pt
icebp
add
jns
lcall
push
xor
push
ja
mov
dec
xchg
xor
sub
inc
nop
loopne
push
inc
shl
loopne
jmp
movsl
shll
movsl
hlt
add
xchg
xchg
dec
dec
sbb
mov
jo
dec
and
push
loopne
lahf
jl
sbb
bound
lods
aad
scas
mov
and
cs
inc
xor
jmp
imul
lcall
cld
lret
jmp
inc
dec
loop
int3
mov
fs
cmc
in
and
idivb
xlat
test
imul
ret
lahf
repnz
iret
or
jno
rcrb
cmpsl
cmp
xor
movsl
sub
jle
inc
pop
jge
and
pop
mov
gs
test
mov
mov
or
fchs
jecxz
rol
push
fsubl
mov
movsb
mov
in
hlt
mov
pop
fidivrs
rol
fsubrs
dec
push
fsubl
pushf
nop/reserved
or
mov
dec
and
testb
shrb
dec
scas
fcmovnbe
mov
aad
cmp
or
inc
inc
lds
int3
fsub
pop
mov
jle
mov
xchg
mov
outsl
dec
out
stc
mov
rclb
data16
inc
sahf
mov
xor
dec
loopne
pop
rclb
dec
xor
jns
mov
jmp
sub
and
iret
inc
sar
loop
popf
ret
cmc
and
lods
pop
push
stc
xchg
sub
outsb
aad
dec
xor
aam
cli
add
test
ljmp
pop
test
adc
adc
push
xor
int3
lds
push
pop
fstpl
loop
push
mov
jmp
or
jno
xbegin
movsb
cwtl
jbe
sub
in
sub
clc
mov
mov
fldt
adc
mov
mov
shl
cli
loopne
test
loopne
cmp
out
outsb
repz
mov
int3
test
repz
subb
xor
in
mov
fwait
mov
sub
or
add
mov
loope
sbb
fsub
stos
jl
nop
mov
loope
movsb
test
cli
sarl
hlt
and
ljmp
mov
icebp
or
mov
lock
aad
mov
test
int
mov
mov
mov
sbb
mov
jns
and
das
sub
ljmp
pop
testl
xchg
cmp
inc
mov
gs
shrb
out
test
cmp
or
lock
mov
les
stc
mov
aad
inc
je
mov
dec
ds
cs
stc
imul
sete
cmp
icebp
and
pusha
push
dec
adc
nop
outsb
fwait
std
push
pop
psubusw
insl
lods
and
ljmp
lock
jns
adc
and
sub
pusha
push
jl
inc
pusha
dec
dec
push
push
pop
pop
and
sub
xor
cmp
add
or
adc
sbb
in
call
cld
rol
enter
fcomp
popa
out
lods
pusha
mov
mov
mov
xchg
cwtl
pushf
popa
imul
inc
inc
dec
dec
pusha
push
push
pop
pop
and
xor
or
sbb
jb
stc
bound
aad
sub
mov
mov
lea
xchg
cmp
cmp
or
pop
adcb
push
sbb
jno
xchg
icebp
rol
jns
shrl
inc
and
push
je
mov
push
jge
test
nop
rolb
dec
sub
jae
cmpsb
shlb
imul
sbb
cmpsl
lods
js,pn
jnp
ljmp
lret
inc
popa
xor
mov
sub
or
jo
push
and
lahf
sahf
cmp
cmp
sub
and
xchg
and
je
mov
mov
addl
cmp
xchg
jb
loope
rorl
sub
in
insb
lahf
xorb
fwait
mov
sbb
pop
js
fdivrs
data16
xchg
and
fnsave
or
popf
repnz
sar
inc
cmp
cwtl
add
loopne
adc
dec
stc
push
mov
sti
inc
les
jecxz
icebp
loopne
cmp
and
add
stos
inc
movsl
inc
cmpsl
loope
ljmp
subl
mulb
data16
xchg
shrb
repz
and
stc
sub
cmp
inc
movsb
test
sub
inc
mov
mov
sbb
lock
lds
std
jo
and
mov
dec
mov
pop
insl
cmp
es
inc
pop
test
in
es
sub
mov
xchg
push
mov
mov
sub
cmc
pop
rcll
je
cltd
and
jge
inc
lods
mov
inc
mov
adc
ds
cmpl
fwait
daa
pop
shll
sub
inc
xor
inc
push
pop
lock
ljmp
lret
and
rcll
cmpl
cltd
jbe
inc
and
inc
jb
push
call
fs
popa
movsl
push
push
nop
push
jne
mov
xor
fs
push
push
push
pushf
push
xchg
xor
fs
sbb
daa
bound
sti
push
push
outsb
jb
jp
inc
inc
dec
pusha
dec
push
push
pop
pop
and
sub
xor
cmp
add
or
adc
sbb
loop
ljmp
ret
pusha
into
rcl
fcmovu
mov
mov
mov
pusha
mov
imul
ja
jg
inc
dec
pusha
dec
push
push
pop
pop
and
sub
xor
cmp
add
or
adc
sbb
jecxz
jmp
out
repz
inc
lret
pusha
iret
rcl
fcmovnu
mov
mov
mov
je
xchg
xchg
fwait
lahf
ljmp
fsubs
xor
test
aad
xchg
or
xor
mov
inc
jecxz
dec
cltd
movsl
pop
mov
hlt
cld
dec
call
inc
cwtl
inc
dec
test
popa
imul
jae
cmp
xor
fdivr
xchg
cli
mov
cmp
loope
in
loopne
xchg
out
test
xorb
nop
loope
cmpsl
fxch
jnp
loopne
mov
jb
test
xor
sub
jmp
add
test
adc
ss
mov
xlat
push
es
lock
dec
fnstcw
xchg
loope
shrl
jo
int3
xor
call
pushf
jecxz
xorb
or
aam
ds
add
imul
loope
mov
jge
mov
pop
movsl
sbb
or
mov
jle
inc
out
lock
in
movsl
xor
inc
xchg
jne
inc
inc
mov
int
dec
in
adc
cmp
loope
sbb
and
mov
and
pushf
or
mov
dec
icebp
imul
test
mov
mov
sub
dec
lods
filds
inc
or
xchg
or
int3
out
ret
popa
mov
or
add
jbe
mov
mov
pop
add
mov
shr
cs
xor
out
xchg
es
clc
adcb
hlt
push
add
inc
aam
int3
sub
cld
xchg
adc
jg
and
es
cltd
sub
std
icebp
inc
and
adc
inc
pop
aam
enter
inc
sti
xorl
repnz
imul
repnz
jmp
inc
dec
jo
dec
push
inc
inc
and
sbbb
std
test
icebp
add
mov
or
mov
and
mov
jno
stc
scas
out
push
mov
cld
jns
cmc
shl
test
imul
push
or
sarb
call
jo
orl
roll
es
push
loopne
jmp
xor
test
icebp
movsb
inc
jae
ret
test
stc
andb
jno
rolb
sub
lock
inc
mov
push
es
inc
call
inc
subl
shll
shr
jno
adc
sub
lock
es
call
inc
subb
lock
call
inc
inc
cmp
inc
mov
and
call
inc
xchg
sub
lock
inc
adc
add
inc
sub
jno
xor
sub
addb
jo
xchg
aas
call
inc
repnz
xorb
cmp
adc
mov
xor
sbb
stc
push
cs
xchg
movsl
lock
call
hlt
stc
test
ds
aaa
inc
icebp
sarl
sub
push
jmp
or
sub
jle
movsl
jae
xchg
inc
test
pop
rcrl
sbbb
inc
jb
outsb
push
ljmp
lds
and
inc
inc
out
imul
pop
lahf
inc
xor
sti
leave
adc
pusha
mov
and
dec
mul
xor
mov
xor
jb
cltd
sbb
cs
xchg
xor
movsl
idivb
inc
fldcw
pop
and
dec
jl
inc
in
in
sbb
and
or
inc
popf
xchg
aad
inc
xchg
outsb
pop
es
in
cwtl
jge
inc
inc
xchg
sbb
test
cld
xchg
icebp
pop
and
in
adc
pop
es
stos
inc
cwtl
jge
inc
cmp
repz
lea
loop
data16
jle
add
je
outsl
test
aad
mov
and
xchg
sbb
repz
xchg
cmp
xchg
sbb
loope
out
jge
inc
out
xchg
sbb
xchg
repz
xchg
mov
es
ficompl
xchg
scas
xchg
sbbb
stos
mov
xchg
and
cmc
daa
and
fcoms
jl
sbb
xchg
push
test
out
test
gs
out
pushf
push
sbb
xchg
cmpsb
xor
inc
sar
pop
pop
sub
jae
xchg
pop
jle
fdivrs
hlt
xor
dec
add
std
xor
frstor
icebp
hlt
pop
xor
popa
pop
mov
jb
adc
jb
sbb
jecxz
in
mov
jmp
ss
ret
orl
into
cmp
adc
inc
mov
xchg
ret
push
mov
ljmp
xor
loopne
jno
loop
mov
add
daa
test
pusha
sbb
pop
inc
gs
mov
mov
mov
pop
dec
scas
mov
addl
pop
ljmp
pushf
outsb
jb
inc
mov
pop
inc
jmp
and
int
mov
jmp
outsb
icebp
aad
mov
test
stc
mov
xorb
fadds
jb
ds
cmp
in
icebp
mov
inc
test
fadds
xor
push
xchg
bound
mov
sahf
lret
and
fs
dec
xorl
mov
xchg
in
mov
lock
mov
and
mov
jae
mov
sub
mov
in
imul
loope
lcall
mov
mov
les
mov
and
lods
bound
adc
cs
and
popa
xchg
jno
idiv
pop
in
xchg
xor
add
imul
das
sarb
stos
loopne
push
aaa
pop
iret
popa
sub
mov
push
scas
mov
cli
imul
dec
xchg
mov
xchg
jmp
repnz
test
sub
cmp
and
inc
andb
call
mov
xor
xorl
lret
push
add
icebp
cmp
adc
or
sbbl
push
clc
cmp
hlt
adc
sub
leave
incb
jae
mov
dec
sub
push
push
lds
push
std
sbb
inc
push
call
test
fdivrl
jp
insl
cwtl
jmp
pop
test
fstl
int3
pusha
jge
inc
cmp
xor
and
dec
imul
push
jmp
insb
push
fscale
pop
push
mov
or
jns
or
cmp
pop
std
sub
sub
dec
or
cli
popa
pop
jne
les
inc
ret
lds
push
and
add
jmp
sub
mov
add
cmpsb
scas
sub
mov
and
jmp
dec
pop
int
lock
cmpl
aam
lret
or
inc
xor
mov
icebp
loop
sarl
shl
adc
cmpsb
sub
xor
dec
add
hlt
rclb
sub
and
and
mov
inc
and
and
out
xor
repnz
out
sub
loopne
scas
cld
mov
sbb
test
mov
and
or
push
loope
popf
lods
mov
push
gs
dec
or
pop
pusha
push
adc
cmp
int
fldt
scas
enter
fcos
shll
dec
adc
icebp
inc
sbb
stc
test
pusha
add
jae
mov
stc
scas
jo
imul
mov
lds
xor
repz
sub
ret
mov
in
lret
inc
loopne
push
add
push
rclb
insb
nop
loopne
test
lret
testb
nop
cmp
and
gs
inc
ror
inc
cmpsl
xchg
ss
mov
and
push
orl
xchg
cmp
jno
push
dec
in
xor
outsb
shlb
int3
xor
xchg
repz
adc
in
sub
ljmp
mov
mov
jbe
mov
xchg
insl
jo
xchg
lret
lock
inc
xor
push
mov
cwtl
mov
adcb
jno
roll
inc
nop
dec
test
cmp
loopne
fnstenv
divb
loop
sub
and
fs
in
bound
mov
xor
pop
loop
adc
mov
out
rorl
out
jecxz
in
mov
and
inc
nop
dec
push
jno
xchg
in
rcl
adc
xor
adc
inc
add
in
dec
inc
xor
repz
nop
push
inc
cltd
jge
dec
arpl
pop
rcrl
ret
xchg
inc
adc
add
nop
arpl
shl
les
mov
rorl
test
and
mov
stos
loope
loopne
loope
mov
xor
test
xchg
jnp
in
add
lock
push
dec
and
mov
loop
lock
nop
pusha
push
in
inc
mov
test
incl
and
seto
les
inc
jno
ror
push
inc
cmpsl
lods
sarb
arpl
and
jns
and
jbe
mov
adc
loope
xor
imul
mov
jne
imul
mov
add
mov
jge
int3
and
jo
and
xor
arpl
jo
into
xchg
jns
and
roll
in
es
add
mov
stos
loop,pn
sti
test
roll
dec
fsubl
popa
loope
inc
test
sub
xchg
jae
cmpl
stos
nop
popa
stc
loopne
rolb
adcb
xorl
icebp
stos
pop
xor
xor
xchg
rcrl
in
divl
and
repz
repnz
repz
cltd
imul
cmpsb
inc
or
xor
jne
add
in
sub
repnz
jns
push
jb
in
add
push
push
inc
rolb
xor
pusha
xchg
movsb
shll
jmp
fdivs
push
ljmp
xor
and
and
xchg
and
mov
adc
rolb
test
adc
ret
sbb
mov
and
mov
ret
stos
xchg
call
inc
in
shll
xchg
jle
xorb
inc
inc
add
ret
inc
pop
inc
inc
xchg
ret
addl
in
xchg
sbb
loope
sarb
mov
and
mov
loop
push
adc
daa
loop
out
addl
sbb
loop
jo
jo
mov
mov
clc
dec
xor
adc
mov
in
les
xchg
cmp
jb
fidivs
and
call
xorb
jb
push
lock
push
jno
dec
and
xor
mov
out
mov
adcl
mov
adc
add
push
add
adc
dec
inc
add
addb
xor
es
jns
lock
cmp
push
pop
and
shl
xchg
jno
xchg
xchg
addb
cmp
jno
dec
and
mov
adc
mov
inc
loope
jno
push
inc
and
in
les
xor
and
xor
mov
shrb
lock
jae
bound
imul
xchg
and
repz
cmp
mov
xorl
inc
xor
rcl
jecxz
inc
cltd
pop
add
inc
adc
add
orb
dec
xor
in
es
xchg
int3
xchg
mov
push
imul
pop
push
xor
popa
xlat
mov
jle
insb
jno
jo
xor
scas
loope
and
push
in
sub
addb
and
inc
and
xchg
and
jle
xchg
xchg
pop
andb
dec
in
cmp
movsl
xchg
pusha
leave
testb
jl
iret
outsl
into
fucom
pop
sbb
ficompl
ss
data16
je
ror
xchg
mov
dec
cld
in
add
add
pusha
test
out
pop
pusha
xor
ret
movl
dec
lret
jne
sbb
insb
adc
movsb
jl
xchg
cmp
mov
call
pop
adc
ja
mov
jl
pop
sahf
mov
push
mov
push
pusha
xor
sub
mov
loope
int3
jo
mov
insb
mov
fimull
mov
pusha
cwtl
and
daa
shrb
lret
les
push
out
mov
movsb
push
pusha
leave
out
ljmp
xor
mull
and
add
sub
dec
fldl
jmp
repnz
pusha
js
icebp
leave
add
ret
inc
pusha
lret
xchg
dec
mov
nop
fisttpl
jne
mov
push
sub
pusha
rorl
dec
jmp
cmp
pop
jns
lret
mov
sub
inc
js
rol
test
sub
imulb
orl
pusha
popa
and
push
jecxz
nop
xchg
pop
add
mov
bound
es
adc
leave
pusha
add
push
icebp
fsubrl
nop
or
xor
mov
out
fcompl
inc
mov
xor
shl
dec
fwait
rol
push
mov
and
shlb
inc
sub
sub
jo
loope
add
adc
mov
push
pop
and
repnz
lahf
and
mov
mov
and
lahf
inc
rcrl
add
mov
and
lahf
inc
icebp
rorb
test
add
rolb
test
out
repz
adc
jo
shlb
push
sbb
mov
orb
icebp
insb
pop
inc
cmp
push
mov
and
ljmp
clc
push
arpl
cmpsb
adc
dec
jno
jo
jb
xor
push
test
ret
lock
inc
xor
adc
adcl
iret
insl
nop
and
ret
mov
xor
add
jo
divl
inc
pop
popa
lock
and
xor
and
and
jne
shl
and
pop
xor
in
repz
imul
jae
nop
nop
mov
and
jb
and
jbe
inc
jl
xchg
jne
inc
inc
push
inc
jo
adc
negb
xchg
in
adc
cmp
inc
xchg
scas
push
ds
negl
repnz
xor
xor
call
cmpsl
in
pusha
out
push
arpl
adc
bound
cmpsb
int3
jb
inc
jo
add
inc
inc
test
or
shr
test
data16
shlb
inc
and
cmp
inc
push
testb
and
xchg
outsl
ja
add
and
je
push
fs
adc
jmp
pop
loopne
xchg
fsubs
mov
push
xor
icebp
fsubl
push
inc
outsb
mov
icebp
xchg
push
jae
add
jcxz
and
js
xor
inc
jae
and
dec
fsubs
bound
aad
outsb
dec
repnz
and
popa
mov
repz
jecxz
pushf
and
das
cmpsl
push
jl
jmp
ljmp
fcmovnb
int3
cmpb
outsb
ja
rcll
jb
and
adc
inc
xchg
adc
cmp
inc
cmpsl
icebp
xchg
xchg
hlt
test
push
loopne
inc
jl
adc
sub
mov
push
mov
push
sbbl
xchg
and
cs
xor
inc
dec
jnp
icebp
daa
mov
mov
inc
pop
dec
xor
add
push
ret
inc
xor
push
xchg
in
sbb
mov
hlt
and
aad
test
test
imul
jns
jbe
inc
sbb
stc
nop
flds
add
jmp
loop
sub
jb
inc
cltd
jns
xor
dec
bound
nop
add
or
shll
and
mov
dec
mov
dec
adc
mov
push
dec
mov
push
mov
xorb
inc
rcrl
jmp
dec
divl
mov
jae
dec
in
jp
jb
jp
mov
inc
rolb
xor
jl
dec
cmpsb
jecxz
pop
int3
mov
and
dec
add
adcb
inc
jns
add
adc
inc
push
repnz
jle
ret
pop
scas
sub
sub
dec
pop
int3
dec
andl
push
push
addl
xor
and
repz
jno
stos
jo
jb
pop
jb
inc
add
xor
mov
loope
jae
push
adc
pop
xorl
sub
rorl
sub
push
nop
popf
jmp
mov
jno
cmp
jmp
mov
inc
push
pop
add
sbbl
xor
adc
push
mov
adc
in
inc
addr16
pop
insb
sbb
inc
add
mov
pop
xor
pop
repnz
and
jle
pop
rcrb
insl
sarl
test
sbb
loope
flds
add
cmp
popa
pop
daa
jmp
push
bound
loop
push
cmp
pop
sbb
push
jmp
and
or
mov
inc
xor
xchg
in
add
mov
out
cmpsb
xchg
popa
dec
sub
loopne
les
add
ds
inc
les
adc
rclb
shlb
fs
loope
fs
shlb
and
loopne
int3
push
repz
sbb
pop
sub
loopne
fiaddl
sbb
push
jmp
mov
add
outsl
dec
mov
subl
pop
aad
push
xchg
int3
jae
nop
sub
push
xchg
adc
and
jecxz
mov
int3
daa
xchg
loop
gs
movb
scas
pushf
mov
and
dec
mov
sar
xor
sar
add
inc
mov
and
xor
dec
push
adc
loopne
jne
mov
pop
inc
inc
loopne
arpl
add
or
inc
addb
sub
loopne
xor
sub
in
xchg
loopne
aas
int3
xchg
in
adc
push
xchg
push
cmp
or
inc
dec
jno
cli
int3
bound
imul
jnp
dec
bound
jmp
cmp
in
add
cmpsl
jecxz
in
jno
loopne
jle
mov
adc
bound
adc
inc
or
loope
xchg
fwait
loopne
shrb
cmp
and
stos
xor
insl
mov
jecxz
rcrl
lock
loopne
in
shlb
nop
mov
cmp
push
pop
adc
inc
rorb
jo
int3
dec
add
mov
add
out
inc
inc
into
repz
test
dec
pop
jge
in
mov
inc
iret
repz
test
push
jge
in
sub
or
in
repz
test
insl
pop
jge
in
sub
repz
lods
test
dec
in
cs
inc
out
repz
test
outsl
pop
jge
in
das
es
movb
out
pop
sbb
clc
add
popa
mov
inc
loop
sub
dec
dec
mov
lock
or
bound
repnz
push
inc
cmp
out
shlb
push
pop
mov
fsubrl
xor
pop
and
call
cltd
lods
mov
jne
in
and
inc
call
add
inc
loop
movsl
xor
shlb
jo
arpl
cmp
add
repz
inc
and
xchg
jbe
cmpsl
ret
ss
fwait
cmp
je
gs
mov
lds
xchg
push
xchg
stc
adc
jbe
pusha
movsl
loop
ret
xor
adc
loopne
data16
pop
inc
and
xchg
pop
pusha
cmp
cmpsb
xlat
push
adc
or
mov
and
int3
pop
stos
daa
out
loope
pop
mov
add
add
or
push
and
xor
jp
inc
movsb
fs
jl,pn
shll
push
clc
loopne
idivl
pusha
xchg
cmpb
pusha
sub
es
push
cmp
pusha
movsl
xchg
mov
cmp
popa
imul
mov
fwait
dec
pusha
int3
rclb
fs
push
lock
pop
int
pop
mov
xchg
pop
push
add
sbb
xor
adc
adc
mov
loop
mov
sti
jb
mov
adc
shrl
les
sbb
jmp
imul
adc
jl
sbb
fdivr
mull
in
push
mov
mov
es
call
inc
jns
fdiv
cmp
bound
test
and
insl
and
dec
inc
mov
pop
jno
lock
and
inc
mov
adc
imul
shl
adc
es
call
inc
popa
sub
loopne
arpl
lea
inc
jmp
push
sub
lock
inc
mov
and
jecxz
fistl
xor
test
dec
cmp
call
lret
sub
loopne
jno
lret
inc
js
lock
sub
jno
icebp
inc
fldcw
lock
es
push
jno
addl
outsb
adc
es
mov
mov
dec
hlt
mov
shll
inc
push
lock
js
inc
jno
dec
inc
lcall
es
call
inc
mov
lock
hlt
inc
sbb
push
call
inc
xchg
sub
lock
es
clc
jno
dec
inc
stos
lock
xor
jae
stos
es
call
inc
sbb
jns
test
cmp
js
mov
imul
or
jp
mov
call
inc
push
lds
fiaddl
es
call
inc
inc
sub
es
and
sbb
xchg
sub
lock
rclb
ljmp
in
addl
into
jl
dec
ret
lods
inc
lods
inc
sub
fs
in
jo,pn
mov
jecxz
inc
xchg
sub
lock
inc
or
jp
test
mov
fdiv
adc
inc
ret
fsubl
call
inc
sbb
and
bound
es
jno
fadds
sub
addl
cmp
jae
mov
inc
add
jp
mov
call
inc
cmp
jo
mov
jo
inc
add
jae
stos
jno
or
sub
es
test
lock
and
shlb
insb
sti
lods
push
repz
call
add
sub
es
xorb
dec
jb
mov
and
imul
inc
and
lock
inc
adc
push
push
inc
inc
mov
es
sbb
pop
je
jg
mov
das
add
call
orl
movsb
in
inc
adc
dec
push
mull
in
dec
and
in
loope
sub
mov
std
ljmp
je
lods
ficoml
pop
paddd
mov
xchg
shll
gs
jmp
mov
cmp
sub
and
inc
sbb
push
bound
aas
pusha
nop
add
jo
mov
inc
pop
andb
nop
gs
mov
lods
push
pusha
sub
pusha
xor
add
pop
pop
dec
adc
cmp
sbb
mov
xchg
insb
inc
jle
daa
testl
lods
inc
and
dec
lret
arpl
and
arpl
insb
xor
xchg
jmp
inc
mov
nop
lods
mov
in
cltd
push
sub
mov
hlt
sahf
in
jae
and
fs
mov
pusha
or
sti
push
pop
shlb
ds
xchg
mov
mov
mov
xchg
inc
hlt
cmp
js
cmpsb
bound
pushf
fs
jge
stos
cmp
inc
sbb
or
xor
divl
pusha
sti
add
jno
ja
cltd
sbb
call
inc
movsl
or
cwtl
shrb
add
aaa
push
sbb
pusha
cs
mov
dec
pusha
xorl
sahf
lds
fisubl
adc
cmp
mov
ret
shlb
pusha
inc
and
mulb
mov
pop
sbbb
pusha
daa
jns
jge
pop
rolb
mov
dec
push
mov
pop
shll
jecxz
movsb
dec
xor
pop
lock
jp
and
enter
jl
scas
fmuls
fs
popa
push
xchg
jne
mov
js
sub
mov
add
mov
sub
xchg
push
xchg
cmp
lock
das
xor
fs
push
push
pop
fwait
and
push
inc
icebp
out
xor
inc
insb
push
dec
loope
and
xorl
mov
pop
pop
adc
cwtl
dec
out
cmp
adc
push
mov
push
mov
pusha
xchg
subb
fsub
mov
lea
bound
push
jbe
mov
nop
mov
jle
movsl
jl
push
js
mov
hlt
idivb
aas
xor
jmp
cmp
mov
inc
adc
mov
pusha
incb
jl
jo
out
sbb
sbb
jl
pop
arpl
mov
adc
push
xlat
pop
cmp
iret
pusha
jmp
nop
scas
pusha
xchg
jns
fldt
fistps
pushf
popf
out
stos
mov
jl
repnz
pusha
aad
cltd
cmp
sbb
fisttpll
testl
pusha
mov
pop
in
sbb
in
lea
out
nop
je
push
inc
cmpb
and
jp
pop
push
lret
or
add
pusha
out
push
jle
ja
test
xor
adc
imul
pop
pusha
cld
scas
in
cmp
fiadds
and
sarb
adc
clc
in
sbb
cmpl
jbe
fistpll
nop
dec
insb
xor
mulb
nop
xor
lret
test
js
push
je
es
pop
mov
cmp
or
adc
fstpt
pusha
cwtl
add
dec
sti
cmp
xor
mov
or
push
pop
lret
fisttps
testl
sbb
ret
push
mov
push
test
sbb
pusha
pop
aas
enter
lahf
lods
lods
add
fldenv
mov
xor
mov
pusha
sbb
mov
sarb
push
scas
lock
pushf
iret
pusha
pop
jmp
fwait
outsb
jo
cmp
and
and
push
jno
pusha
cltd
jbe
mov
mov
call
jg
mov
pusha
movsb
popf
gs
test
arpl
inc
inc
add
inc
mov
mov
fs
or
xchg
imul
aas
jg
dec
out
mov
mov
arpl
stos
in
fs
jae
mov
or
js
cmp
pusha
cwtl
inc
sub
add
aam
pusha
mov
je
addb
mov
loopne
mov
imul
push
pusha
mov
enter
push
fsubl
test
or
add
xchg
hlt
push
inc
mov
pop
ss
xorb
scas
loope
movb
xchg
and
loopne
pusha
add
ja
movsl
sti
aas
pop
jmp
jg
add
das
mov
adc
cmp
or
adc
repz
dec
shlb
pop
ja
in
push
inc
aaa
pusha
pop
lods
outsl
and
les
mov
mov
lcall
push
sti
adc
push
sahf
cwtl
mov
jl
cmp
lret
pop
jecxz
iret
mov
cmc
jne
jecxz
je
or
mov
xor
cmp
push
enter
outsb
imul
pusha
stos
lock
out
orb
shlb
ss
add
bound
add
adc
fcompp
mov
add
leave
cmp
fsubl
int
add
push
mov
bound
aad
and
jnp
arpl
mov
sbb
shlb
sbb
or
adc
stos
jecxz
adc
dec
jl
cmpsb
jmp
mov
xor
aad
pusha
jecxz
sbb
pusha
push
mov
cltd
int3
dec
shll
mov
fcmovb
iret
pusha
push
ds
icebp
push
leave
xchg
fs
repnz
fsubl
push
inc
test
cmpsl
fs
push
and
pop
xchg
mov
iret
nop
or
xchg
jl
loopne
mov
pop
loop
cmpsb
loop
pop
pusha
test
lret
xchg
or
cmp
and
out
lds
testw
sub
mov
shl
mov
jo
add
lahf
scas
ds
push
adc
and
test
mov
inc
add
jecxz
pusha
inc
push
shld
xor
cmpsb
in
mov
scas
pop
clc
jbe
loope
inc
repz
dec
ds
sub
cmp
enter
pusha
cmp
stos
pushf
int
push
dec
lret
add
dec
sub
sbb
pusha
fcom
adc
lods
cwtl
adc
loopne
pusha
nop
jge
rclb
xchg
daa
mov
loopne
dec
pusha
in
cmp
mov
cmp
jb
jg
pop
decb
daa
div
pusha
cmpsl
sbb
ret
je
js
arpl
and
adc
out
cmpsb
xchg
idivb
push
test
cmp
repz
mov
jg
nop
sub
addb
cmp
pusha
mov
stos
mov
push
cmpsb
inc
pop
loop
push
insb
mov
jmp
bound
mul
out
popa
rclb
test
pop
jl
and
lahf
sbb
andb
pusha
mov
mov
push
fldt
aad
movsb
mov
pushf
dec
rcrl
stos
dec
sti
movntps
xchg
aad
pusha
enter
xchg
jl
cmp
adc
addl
mov
ret
mov
popa
push
subb
pop
xchg
arpl
pusha
sbb
call
xor
in
pop
test
jmp
insb
scas
scas
in
movsb
adc
ss
cmp
add
jbe
shl
stc
mov
aad
outsl
adc
dec
mov
pop
pop
jae
add
sub
mov
ja
out
lret
popa
mov
std
enter
in
xor
add
mov
dec
int3
sbb
cmc
mov
arpl
in
daa
push
mov
ja
lcall
jo
insb
push
xchg
mov
pop
jg
je
fdiv
js
push
dec
lret
mov
aam
icebp
adc
aaa
bound
testb
insb
and
mov
xor
pop
sarb
shl
pop
sbbl
rclb
sbb
ficoms
pop
pusha
pop
aad
push
ret
jbe
sar
shll
ficomps
lds
jle
or
inc
outsb
cmc
rcrl
lcall
push
push
push
lock
pusha
outsb
xor
sbb
xor
push
pusha
rcl
lods
add
add
cwtl
adc
out
mov
xchg
mov
jmp
movsb
std
and
scas
jns
dec
les
imul
xlat
mov
cwtl
mov
mov
fisttps
sub
pusha
cmp
mov
lods
bound
mov
in
addb
pusha
pushf
mov
sti
sbb
sub
es
bound
aas
mov
out
sahf
pusha
and
jl
sub
xor
popa
mov
aam
sub
dec
repz
jmp
push
fs
add
xchg
pusha
lock
adc
xchg
adc
and
jmp
or
pop
sbb
out
test
inc
stos
pushf
sbb
adc
pusha
and
jns
lahf
fistpll
aaa
add
mov
mov
and
jle
add
jb
jmp
sub
add
inc
fildll
push
jecxz
push
pusha
imul
cmpsl
loope
shrb
scas
dec
and
jl
repnz
pop
andb
rol
pusha
inc
xor
mov
test
jns
fimull
mov
js
cmp
aam
pop
add
pop
pusha
in
fs
test
lock
mov
je
outsl
jl
sub
daa
arpl
mov
aas
fadd
lahf
call
mov
int3
mov
cmp
int
pop
and
in
jl
pop
mov
pusha
mov
popf
push
and
clc
adc
fbld
lahf
cmp
push
imul
test
sarl
dec
loopew
inc
movntps
mov
arpl
insb
cmp
inc
sbb
lret
dec
stos
aaa
xor
rcl
jecxz
pusha
rorb
icebp
out
ds
pop
fsubl
pop
out
mov
lret
push
js
ljmp
mov
jb
int
push
movsb
push
bound
pop
stc
dec
popa
subl
jl
jp
leave
mov
dec
pop
ja
cmp
ficoml
repz
adc
nop
mov
and
mov
int
mov
out
pop
mov
inc
push
pusha
mov
sti
push
hlt
aam
jl
inc
enter
pop
jle
out
pop
pusha
fwait
add
push
adc
orl
loope
add
cltd
pusha
push
or
std
cmp
push
mov
mov
sbb
mov
add
sub
push
mov
mov
push
push
mov
pusha
add
hlt
push
inc
dec
imull
add
stos
pusha
shr
lcall
out
jle
sbb
mov
sbb
jae
sbb
loopne
mov
enter
jb
fwait
fwait
adcb
fwait
pusha
les
dec
xchg
jecxz
inc
lock
je
mov
orb
xchg
leave
adc
jo
and
ds
jge
mov
pusha
int
jle
into
or
and
jl
add
cltd
adc
xchg
aas
shrl
lea
jo
pusha
out
xchg
fcomi
jno
cmc
sub
pop
cli
cmpsl
sahf
cmp
pop
enter
cmp
mov
pop
lcall
lret
pusha
fdiv
clc
jbe
lds
mov
fs
jne
add
insl
adc
xorb
push
sbb
fisubrl
dec
cltd
pusha
mov
test
mov
cmc
inc
ds
ja
adc
pop
push
loop
ss
pop
pusha
push
mov
mov
lock
or
mov
adc
jno
and
cmp
insb
les
inc
int
sub
popf
lcall
fnstenv
inc
and
cmp
pop
loope
gs
add
mov
cld
adc
mov
loopne
shl
pusha
or
lods
xchg
mov
pop
out
out
sbb
jl
sbb
pusha
sub
jp
cld
xlat
pop
into
andb
jl
jno
or
fs
push
pop
inc
outsb
push
push
mov
fs
xchg
sub
fldenv
push
sub
dec
dec
mov
jle
inc
xchg
jecxz
pop
data16
lods
mov
movsb
and
jle
les
insb
out
lahf
ljmp
and
rorl
pushf
pop
mov
ljmp
movsl
xchg
mov
add
cmpsl
adc
aaa
fs
std
hlt
scas
shll
pop
cltd
mov
insb
mov
popf
dec
xchg
pusha
add
movsb
loopne
dec
fstl
sub
pop
arpl
add
mov
rolb
adc
inc
jmp
cmp
inc
loopne
pusha
xor
mov
jo
inc
repz
pusha
popf
outsb
xlat
rorb
lods
aam
pop
pop
je
cld
insb
ljmp
sub
outsl
add
pusha
cmpl
out
and
inc
je
lret
jmp
out
mov
sarb
inc
dec
inc
pusha
ja
xchg
nop
loop
and
incb
pop
sbb
fs
xor
out
adc
je
aam
sub
out
push
repnz
pusha
inc
das
sub
cmp
fdivrs
fstps
ss
push
mov
jl
pusha
les
xchg
push
pop
sbb
sbb
dec
push
dec
stos
scas
sbb
push
cmp
imul
xor
pop
add
inc
jb
cmpsl
frstor
add
jecxz
xchg
neg
sbb
xchg
repz
mov
insb
ljmp
shrb
lds
xchg
dec
jl
andb
jecxz
pusha
inc
fwait
mov
scas
xor
xchg
loope
daa
sbb
pop
ljmp
aad
xor
leave
push
pop
mov
decb
imul
xchg
pop
xor
pop
dec
or
jp
jae
clc
bound
mov
sbb
cmpsl
ret
rcrl
and
imul
lcall
in
sbb
sub
jg
test
mov
pop
scas
pusha
frstor
addl
dec
je
out
adc
fisubs
adcb
xor
mov
loopne
shrl
pop
mov
sahf
arpl
fstpl
jecxz
in
mull
hlt
mul
bound
ljmp
pusha
xchg
daa
adc
lods
mov
imul
rclb
jno
adc
adc
scas
addb
inc
mov
in
lret
clc
pusha
dec
popa
pop
mov
push
cmpsb
movsb
and
mov
mov
inc
imul
ret
js
and
mov
pop
imul
cli
je
sbb
cld
test
mov
popa
mov
jg
mov
das
movsl
jne
inc
inc
push
mov
popf
arpl
inc
repnz
in
pop
jl
sub
imul
shlb
sti
leave
mov
inc
ret
pop
cmc
xor
push
popa
xchg
pusha
in
pop
jb
inc
out
mov
dec
imul
adc
loop
push
icebp
shlb
pusha
jl
sub
xchg
popa
mov
insb
pop
fildll
add
add
jl
push
aas
nop
decl
imul
popa
lcall
push
shl
jecxz
pusha
jae
mov
out
xchg
leave
fs
push
aad
sbb
fidivl
xchg
push
loope
stos
push
pop
arpl
outsl
lea
mov
jl
sub
dec
pusha
cld
cwtl
call
push
xor
jp
xchg
cmpsb
pusha
mov
jl
mov
or
mov
cmp
movsl
arpl
dec
lcall
jge
test
mov
or
std
xchg
lods
mov
dec
inc
ret
mov
jnp
xchg
insb
bnd
mov
jle
mov
addr16
testl
subb
jecxz
in
out
dec
or
ljmp
add
mov
dec
stos
addr16
push
inc
loop
aad
fcomps
adc
leave
dec
fs
push
test
lock
pusha
mov
cli
fists
dec
xchg
lds
aad
mov
pusha
or
std
stos
fisttpll
mov
inc
popa
xchg
movsl
pusha
sbb
fsubrs
add
xor
aas
movsl
push
int3
push
out
fs
push
push
inc
shll
movsl
mov
or
and
push
dec
flds
in
cmp
pop
std
lds
jecxz
push
int
lahf
cmpsl
pop
xor
mov
ss
std
sbb
lret
cltd
xlat
clc
or
xchg
pop
aam
addl
mov
push
pop
mov
dec
cmc
arpl
xorb
in
jg
and
and
adc
mov
add
jo
bound
pusha
hlt
push
in
cmp
dec
xor
outsb
das
jle
add
loope
jmp
decb
inc
in
fadd
and
loope
sarl
decl
pusha
cmp
not
push
arpl
movsb
pusha
mov
ss
xchg
or
sub
pop
pop
lea
and
mov
cmovl
and
pushf
in
inc
frstor
inc
jp
ds
pop
jecxz
lock
pusha
xchg
fs
push
aas
mov
stos
outsb
jno
divb
dec
sbbb
cmpl
mov
fs
jge
repz
shll
lret
jno
cli
pop
loop
adc
bound
mov
pop
into
arpl
mov
js
sbb
xor
push
out
pusha
sbb
add
or
cmpsb
xchg
bound
xchg
in
or
cmp
mov
loope
or
call
mov
inc
jl
pusha
sbb
pop
cs
push
rol
fs
repz
stos
mov
mov
call
out
add
test
lds
bound
cmp
mov
notl
rclb
sbb
mov
test
loop
loope
sbb
add
je
mov
fstl
sub
xor
cmp
adc
sub
sbb
fcmovbe
loopne
es
out
mov
insb
xor
dec
dec
pop
test
mov
pop
mov
popf
mov
adc
and
push
and
je
add
pop
xor
mov
cmpsl
mov
test
sbb
sub
pop
nop
adc
ss
dec
cltd
fisubl
jecxz
dec
adc
adc
inc
adc
cs
sub
xchg
pop
jo
loope
je
cli
lods
es
or
adc
pusha
gs
or
scas
adc
dec
cli
pusha
dec
cmpsb
xchg
mov
scas
mov
mov
addr16
cld
adc
mov
loopne
xchg
insb
mov
loope
or
outsl
pusha
lds
roll
lcall
jae
pusha
movsl
xor
xchg
mov
das
xor
jnp
xchg
mov
cs
fadd
int
test
nop
vpunpcklbw
roll
mov
insb
jbe
adc
stos
jmp
fists
cld
test
cmp
fmull
add
xor
push
mov
and
arpl
out
pop
pop
movsl
outsl
push
jecxz
ljmp
icebp
je
xchg
dec
and
pushl
mov
pusha
fxch
xchg
mov
fimuls
pusha
xor
icebp
or
pusha
stc
mov
jecxz
adc
sbb
xchg
mov
dec
push
repnz
outsb
roll
xchg
jmp
adc
push
ljmp
inc
and
and
in
movl
adc
movw
push
pushf
pushl
ret
stos
pusha
movb
lea
jmp
pusha
mov
jmp
repz
stos
add
xor
or
xchg
sbb
test
lea
int3
popf
mov
cli
std
dec
gs
cmp
xor
sub
mov
mov
jns
xchg
add
mov
inc
and
push
shrl
push
lahf
inc
sbb
or
inc
mov
mov
and
xor
inc
int
jge
aaa
nop
cmp
jae
pop
push
pop
mov
cli
rolb
fistpl
pop
fwait
mov
jg
xlat
ja
pop
xchg
mov
fdivrp
test
sub
cmp
stc
neg
movl
stc
bt
cmp
not
cwtl
push
lea
lea
movsbw
jmp
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
cs
shlb
shl
stc
mov
clc
neg
setg
sub
add
add
pushf
mov
cmp
cmp
call
test
cmp
call
push
lock
std
std
mov
xchg
imul
pop
mov
std
lret
std
and
pushf
mov
pop
and
xor
inc
fistps
popa
js
inc
and
aam
push
iret
add
out
cs
test
push
jge
shl
and
lret
inc
out
adc
xchg
push
push
stos
les
mov
sub
jmp
adc
inc
and
out
lea
push
xchg
mov
out
mov
mov
addb
scas
cmc
pop
fisttpll
stos
hlt
lds
add
mov
ffree
jle
fldenv
fwait
add
jb
imul
faddl
xor
insb
pop
jmp
int3
mov
shlb
mov
out
cmp
jnp
cmp
jmp
stos
inc
dec
dec
cltd
out
shl
pop
loopne
and
mov
pop
mov
mov
inc
push
out
out
cmp
rorl
dec
loop
imul
add
push
mov
rcl
and
pushf
insl
adc
mov
push
or
fistps
push
fwait
testb
add
xlat
mov
lods
jge
dec
loopne
xchg
or
jecxz
mov
jo
mov
adc
out
push
add
mov
cmp
int
xchg
jb
sbb
or
xor
icebp
mov
push
leave
mov
pop
sub
add
xchg
lcall
not
push
stos
setns
pusha
jmp
lea
je
pushf
mov
pushf
lea
jmp
sub
repz
inc
sbb
adc
rclb
pop
dec
sbb
test
loop
jmp
ja
test
pop
mov
jp
push
ret
push
add
jl
fdivs
xchg
adc
lds
fidivrs
mov
adc
dec
inc
mov
or
lods
inc
adc
stc
enter
mov
out
or
rcrb
inc
ds
inc
cmp
mov
adc
add
sub
aaa
ret
cmp
pop
xchg
mov
dec
outsl
arpl
inc
insb
insb
outsl
arpl
clc
daa
inc
or
sub
clc
daa
push
or
pop
sub
out
sub
loopne
in
sbb
mov
cli
pushf
test
lret
dec
in
sub
cmp
in
dec
jb
adc
scas
lcall
cmp
mov
imul
pop
movl
mov
mov
cmp
into
movlps
cltd
ret
jne
xchg
cmp
xor
decb
popf
push
push
push
cmc
jno
xchg
call
or
xor
loop
mov
ljmp
lret
pusha
jecxz
insb
mov
in
mov
ffree
loopne
jle
test
lods
mov
mov
push
dec
scas
pop
insb
vpmovmskb
in
xchg
jg
fnstenv
jnp
sbb
cmc
out
mov
xchg
and
test
or
call
aas
xchg
dec
scas
aad
shl
or
mov
pop
scas
in
test
fstpl
cwtl
cmp
out
jns
std
arpl
call
test
mov
fnstenv
test
mov
xchg
xor
call
jae
loopne
in
mov
pop
nop
rcl
in
out
or
int3
xchg
hlt
sub
insl
cmc
gs
push
sbb
xchg
sub
lcall
outsl
push
mov
xchg
lret
rolb
pop
fcoml
leave
dec
fadd
aad
stc
mov
mov
fnstcw
aaa
push
jl
int3
enter
enter
add
lods
leave
in
mov
inc
sub
dec
arpl
pop
insl
xchg
inc
test
jbe
mov
int3
mov
stc
rclb
lret
mov
sbb
std
nop
repz
inc
pop
gs
std
dec
loopne
jbe
loopne
adc
xchg
sti
and
xchg
push
icebp
and
lods
mov
scas
jmp
sbb
mov
cwtl
icebp
mov
inc
mov
ja
inc
mov
push
mov
in
mov
ret
fidivs
test
cmp
dec
std
mov
xor
jmp
or
lahf
xchg
frstor
dec
enter
xor
or
mov
pop
lds
mov
xor
les
lods
lds
mov
mov
dec
mov
in
pop
popa
inc
std
lods
inc
adc
xchg
mov
rol
or
inc
lds
add
xchg
mov
cmp
cli
jge
cmp
in
aad
mov
or
insl
repnz
adc
repnz
repnz
dec
mov
mov
mov
pop
fadd
leave
and
rorl
jns
mov
popa
sub
mov
andl
and
cld
sbb
popf
cmp
iret
sub
adc
fld
jp
or
adc
cmc
mov
or
push
shlb
cmp
clc
inc
mov
or
or
and
stc
mov
mov
pop
cmp
push
jl
cld
fnsave
adc
mov
addr16
xor
fnsave
icebp
or
adc
int3
in
inc
std
xor
in
cmc
mov
xchg
notb
shlb
idivl
cli
pusha
test
push
les
std
inc
fdivrs
mov
jmp
mov
dec
fadd
fldt
sbb
test
int
mov
ljmp
rcrb
xor
repz
add
or
icebp
xchg
xor
sbb
jp
icebp
loopne
popa
push
fs
sbb
rcrl
addb
sub
lock
arpl
and
in
and
in
arpl
add
jno
and
jb
imul
add
es
fwait
and
call
insb
and
lods
jne
xchg
mov
gs
mov
andl
xchg
push
loope
jg,pt
inc
pop
fs
lock
test
adc
movsl
jl
mov
inc
jb
inc
inc
inc
inc
movb
in
icebp
inc
sub
les
test
jbe
inc
push
inc
and
sbbw
mov
jne
stos
stos
inc
insb
lock
aam
push
outsb
push
inc
xchg
in
ret
fisubl
jo
pop
inc
popa
bnd
push
insb
push
cmp
dec
bound
out
inc
scas
cmp
cwtl
mov
mov
fs
xor
xchg
inc
add
inc
and
xchg
or
push
jnp
insb
inc
bound
pop
out
fs
mov
add
jo
push
inc
and
call
push
dec
rorb
sub
cmp
nop
xor
pushf
inc
sbbl
pop
inc
jecxz
inc
arpl
mov
cltd
jbe
push
inc
inc
push
out
cmp
in
mov
call
dec
repz
jmp
dec
roll
clc
adc
shlb
rcll
mulb
mov
pop
loopne
jl
push
mov
fwait
jo
inc
push
mov
clc
adc
shlb
rcll
inc
xor
mov
inc
and
push
dec
sub
clc
jo
jb
sub
mov
or
add
repnz
inc
jecxz
arpl
stos
sub
imul
xor
or
cwtl
adc
repnz
popa
push
imul
jno
les
jo
push
sub
lock
pushf
in
push
jbe
and
inc
outsl
scas
jo
out
sbb
insb
icebp
fwait
inc
xchg
inc
andl
call
shlb
es
les
imul
in
loopne
mov
pop
nop
dec
mov
mov
inc
mov
sub
loopne
data16
inc
addr16
mov
push
mov
pushf
inc
sbb
jo
inc
jl
mov
jo
dec
pop
mov
inc
jo
push
inc
cs
test
sub
mov
pop
inc
call
mov
xor
jecxz
and
loope
fwait
incl
inc
bound
sub
jmp
jge
jo
pop
rcll
xor
cmp
lcall
mov
and
and
mov
push
decl
and
jo
inc
sbb
pushf
call
pop
jo
jle
and
inc
push
idivl
inc
pop
mov
mov
bound
inc
adc
inc
bound
inc
popa
jo
inc
arpl
inc
xchg
xchg
xor
jno
and
adc
add
mov
jb
scas
jo
cmpsl
jo
mov
popf
xchg
jl
sbbl
out
push
mov
jl
push
inc
xor
loopne
and
mov
adc
sbb
inc
rorb
rcr
sub
pop
cwtl
rcrb
jb
stc
rol
push
xor
pop
rolb
sbb
sub
outsb
bound
cwtl
inc
bound
cwtl
jo
gs
push
subb
gs
xor
lock
pop
pusha
sub
loop
inc
mov
cwtl
xchg
xchg
jnp
adcb
inc
jo
and
adc
fiaddl
and
lret
lret
inc
lahf
adc
repnz
push
rclb
cli
add
adc
rorl
mov
jge
sub
nop
push
xor
cmp
push
in
mov
push
add
sti
inc
jb
divb
sub
jo
and
out
and
jo
add
dec
arpl
push
aaa
sub
adc
push
inc
insb
out
inc
stc
mov
jl
inc
dec
ja
and
aad
in
aas
inc
shrb
xor
adc
mov
xchg
out
andb
or
adc
jle
pop
cmp
insl
mov
lods
les
mov
lods
adc
xor
push
or
fldl2e
or
rcll
lea
xorl
inc
mov
and
jmp
outsb
xor
bound
mov
pop
jbe
adc
sub
inc
jo
pop
pop
jl
idiv
insl
mov
and
inc
add
loop
cmc
sbb
inc
jno
mov
and
adc
pop
inc
push
push
fs
call
cmc
dec
aad
pop
dec
push
or
xchg
pop
cltd
aam
and
lods
mov
movsb
addr16
je
add
and
ss
jp
loopne
shrl
rcll
std
fcoms
sub
cld
loope
imul
in
xor
repnz
jnp
mov
jge
call
inc
test
jbe
arpl
inc
loope
jge
in
int
sarb
out
pop
fucom
fmuls
je
mov
and
inc
inc
mov
data16
aam
sub
jo
jp
sbb
sub
dec
jno
aam
and
imul
mov
test
xor
je
cmc
inc
mov
test
adc
xchg
stos
rcrb
js
xor
adc
push
add
ljmp
or
ljmp
sbb
push
cltd
and
push
js
js
xor
push
imul
out
enter
cli
icebp
xor
pusha
rorb
clc
rcrl
rcll
orl
loopne
cmp
push
aad
jno
movsb
jns
inc
fsubrs
sub
out
jge
sti
add
insb
adc
outsl
add
popa
add
jle
mov
mov
xchg
roll
sbb
std
xchg
xor
and
jmp
jnp
push
mov
inc
mov
rol
mov
fisttps
sbb
mov
cmp
jmp
push
icebp
adc
pop
insb
aas
sub
enter
add
push
jno
and
rcr
cmp
mov
sub
and
push
mov
sbb
mov
mull
jge
mov
add
sbb
cmc
mov
cwtl
insb
cmpb
sub
add
shrb
push
jl
and
add
pop
pop
inc
jbe
lock
fdivr
clc
xor
xchg
jo
hlt
cmp
push
arpl
stc
test
pushf
sub
and
mov
mov
fsub
mov
and
enter
push
sub
mov
ret
loopne
and
or
lock
nop
inc
out
ret
and
mov
mov
mov
add
loop
repz
repnz
enter
shlb
sbb
dec
bound
mov
test
mov
in
jmp
push
and
adc
icebp
cmp
iret
mov
add
fiaddl
push
sub
push
xor
gs
rcrb
jno
and
dec
cli
xor
cmp
nop
push
rcll
mov
dec
pop
cmp
jmp
add
lock
jge
push
xor
in
or
push
imul
ss
call
mov
in
rorb
push
xor
stc
push
aam
pop
rol
out
lea
inc
or
push
ret
and
rcr
inc
test
push
movsb
mov
insl
fmulp
cs
inc
pusha
pop
sub
loopne
or
ret
dec
pop
xor
dec
call
mov
addb
bnd
sbb
add
shll
lea
inc
and
jmp
xor
adc
dec
lock
dec
inc
jle
mov
xor
pop
stos
testl
cld
fidivrl
and
push
fs
sbb
insl
mov
xchg
jge
xor
cld
lock
cmc
inc
mov
inc
add
inc
divb
adc
ret
dec
stc
or
pusha
loopne
push
mov
adc
in
icebp
lret
push
dec
sbb
sub
mov
outsl
icebp
addr16
add
idivl
mov
sarb
push
pop
jmp
dec
lock
outsb
or
bound
test
sbb
rolb
jns
cmp
cmp
rorl
sub
in
and
fnstenv
dec
add
cmp
add
lock
jg
jne
pop
test
sub
mov
lcall
or
mov
push
cli
data16
movsb
test
mov
cmp
cmp
cld
loope
jb
sbb
add
sub
sub
lcall
inc
inc
rclb
std
xor
adc
push
and
adc
enter
movsb
pop
push
xor
sahf
scas
dec
imul
imul
je
sub
stc
jno
mov
enter
and
cmp
add
inc
loop
loop
sub
lock
cltd
dec
jne
dec
adc
lods
and
imull
sub
and
icebp
lret
cmp
icebp
es
push
in
xor
js
es
repz
sub
bound
fdivs
cmp
pop
inc
imul
stos
roll
add
xchg
shlb
dec
mov
mov
fs
in
and
mov
jmp
sub
mov
je
push
jg
outsb
and
das
cltd
cwtl
leave
adc
popf
xor
and
xchg
push
xor
cli
mov
clc
mov
xor
dec
push
sub
add
lds
push
push
cmp
std
adc
jnp
mov
loopne
xor
jne
ljmp
loope
js
mov
sub
fadds
popa
movsl
jmp
mov
data16
loopne
pop
mov
jae
lock
or
pop
xor
sbb
stos
xor
push
xchg
and
repz
fsub
and
sbb
stos
cmp
in
mov
insb
in
mov
inc
xor
insb
jo
sub
or
das
mov
jno
inc
adc
add
inc
out
aas
lods
pusha
pusha
cmc
shr
push
pushf
lea
je
jmp
mov
sbbl
je
js
fcoms
loopne
pop
pushf
cld
push
inc
lcall
std
icebp
ds
ffree
test
stos
dec
jp
jb
dec
xorb
push
sysret
orl
cmp
dec
jnp
notb
ret
cmp
sbb
fwait
jae
js
in
shl
fmulp
mov
and
adc
xor
or
push
ret
fbld
inc
and
xorb
inc
and
jns
sti
and
and
fistpl
add
loopne
lcall
cltd
andl
movsl
in
push
inc
das
push
jp
rcrl
jl
mov
dec
ds
mov
dec
xor
add
cld
push
adc
out
mov
imul
movb
nop
xor
mov
rcll
push
add
adc
dec
jno
loop
mov
inc
and
pop
lock
lret
or
xlat
iret
pop
imul
or
pop
xchg
fs
ja
neg
shl
sub
neg
add
sub
bts
sets
shrd
mov
push
pushf
mov
call
pusha
lea
jb
cmc
stc
jge
test
cmp
jmp
mov
jno
or
adc
xchg
or
push
into
mov
or
or
mov
clc
aam
into
lods
push
adc
xchg
lea
insl
enter
or
lea
pop
stos
inc
cmp
insl
inc
sar
mov
adc
sbb
mov
outsl
repz
into
sbb
cli
xchg
cmp
xor
inc
cmp
popa
mov
insl
in
mov
in
dec
jecxz
push
imul
das
mov
jecxz
xchg
sbb
scas
out
mov
ljmp
scas
jb
out
dec
xchg
std
jge
add
xchg
push
jb
jne
xchg
cmp
loop
addb
xchg
hlt
lret
jne
fwait
iret
or
jno
sub
and
pop
adc
sub
and
divl
push
mov
xlat
fisubl
cmp
xchg
aaa
arpl
jge
lods
das
fs
dec
xor
popa
push
adc
xor
std
pop
xchg
test
add
popf
roll
inc
xor
in
pusha
cld
fcomps
ret
sbb
mov
jmp
test
mov
dec
imul
inc
sbb
repz
and
mov
clc
fcomip
shlb
shll
sbb
fldcw
inc
fsubl
fmuls
jl
or
clc
pop
dec
in
lods
pop
xchg
outsl
xlat
dec
adc
lret
out
mov
xchg
mov
push
in
sbb
aam
ret
or
sti
xchg
jp
fidivrs
pusha
pop
push
jo
pushf
fcoms
stos
out
fnstcw
jge
mov
loope
ss
arpl
int3
call
sbb
in
mov
push
addr16
scas
aas
or
popa
add
pop
out
lock
xchg
adc
scas
nop
push
nop
std
xor
cmp
xchg
stc
imul
mov
inc
xchg
aas
and
xor
popf
fisttpll
pop
xchg
xor
movsl
mov
inc
xchg
adc
sub
jle
aas
imul
imul
mov
mov
inc
push
sahf
xchg
sub
xchg
add
xor
mov
sub
andl
cmp
dec
dec
jecxz
loopne
mov
rcrb
mov
lea
je
pusha
lea
jmp
popf
mov
fcoms
into
mov
sbb
jnp
daa
jmp
lret
adc
jl
orb
mov
mov
add
xor
enter
in
jp
stos
or
jge
add
xchg
ret
jne
and
adc
and
xchg
cmp
test
xchg
jge
push
lret
lret
jecxz
rorl
ret
cmp
push
and
popf
xor
cmc
pop
rorl
lcall
push
in
cmpsb
movntps
cmp
cs
pop
xchg
xor
pushf
push
pushf
lea
call
call
pop
in
mov
lock
fdivs
dec
xor
fadd
test
je
sbb
sti
sbb
and
mov
std
cmp
dec
sti
aad
mov
repz
in
lahf
aaa
lods
sbb
push
out
xchg
mov
dec
jb
ficompl
mov
cmp
movsb
xor
icebp
mov
inc
loope
push
mov
mov
pop
xchg
idiv
cmp
repnz
pusha
lea
jne
not
movsbw
call
gs
sub
ret
pop
push
insb
mov
pop
xchg
orl
imul
negl
jns
or
mov
sahf
mov
in
cli
xor
test
stos
dec
test
dec
or
xchg
shlb
and
pusha
add
movsb
inc
cs
in
repnz
or
mov
and
sub
cmp
fdivr
call
or
js
pop
add
mov
loopne
mov
pop
xchg
or
xchg
iret
rcrl
or
rolb
lds
and
inc
adc
imul
sub
dec
imul
mov
sbb
pop
xchg
lret
lea
int
sub
pusha
mov
xchg
mov
and
les
lds
int3
dec
inc
sub
aad
xchg
cmp
jge
nop
cmp
pop
push
inc
test
loopne
and
or
mov
dec
pop
xchg
sbb
out
xchg
add
fprem1
insl
push
dec
and
dec
mov
dec
mov
mov
movsb
shrb
test
cmp
in
rcll
mov
mov
out
inc
popf
xor
push
add
adc
sbb
sub
pop
sub
jbe
int3
fdivl
xor
and
add
pop
xchg
call
jge
mov
sub
clc
fcompl
push
notl
push
add
out
jb
jmp
addr16
push
outsl
pop
and
popf
jae
mov
mov
aas
das
sti
push
jle
xor
nop
inc
add
shlb
stos
inc
cmp
push
mov
or
pop
and
jb
dec
mov
push
and
jp
into
outsb
push
pop
xchg
fs
jbe
stos
not
pushf
pusha
sete
mov
lea
je
call
push
jmp
or
bt
sbb
push
xchg
lea
dec
shl
xadd
mov
rol
movzbw
pushf
bsr
mov
bts
push
rol
movzbl
push
clc
bsr
push
clc
call
xchg
icebp
insl
push
cmp
pop
mov
cmp
in
mov
pop
sub
or
xor
je
mov
xchg
cmpsl
repz
out
lea
sahf
adc
jmp
pusha
cmc
jp
xchg
cmp
into
cmpsb
xchg
cmp
mov
aam
int
stc
mov
cld
call
dec
out
jo
xchg
cmp
js
jle
pop
fldenv
jmp
sbb
pop
dec
scas
sbb
ret
sbbl
sti
lea
pop
cmpsb
xchg
xchg
add
pop
xchg
stos
pop
scas
sub
ret
xor
jg
dec
sbb
sbb
and
loopne
add
mov
out
jne
ret
cmp
pushf
inc
add
add
aas
cmp
filds
leave
push
xor
cwtl
sbb
jp
out
adc
cltd
test
and
lods
aaa
cmp
jecxz
inc
xor
iret
repz
inc
ror
lods
push
fdivr
push
jmp
lods
xchg
push
test
aad
pop
xchg
pusha
sbb
test
push
adc
pop
or
bound
lret
ss
inc
pop
cmp
xor
stos
mov
and
mov
pusha
loopne
pop
dec
jp
mov
cmp
aaa
insl
pusha
mov
or
mov
pop
je
jg
dec
arpl
add
mov
call
mov
xchg
sbb
sub
mov
in
xchg
scas
pusha
sbb
xchg
inc
insl
cmpsl
cmp
pop
lock
movsl
fcomi
jae
shlb
dec
lds
out
pop
adc
cld
cmp
aam
xchg
or
daa
or
pusha
dec
xchg
mov
xor
mov
fidivrs
popa
lock
cmp
push
jb
je
jl
in
or
pusha
ret
daa
lods
lret
aam
pusha
and
call
out
pusha
xor
les
dec
enter
mov
movsb
adc
sbbl
pusha
cwtl
aaa
xchg
xchg
mov
cmp
sub
adc
mov
cmp
mov
and
sahf
lea
pusha
in
xor
pop
jno
xchg
clc
pusha
cli
sbb
mov
hlt
cmp
cmc
xchg
adc
push
jae
lea
mov
push
pop
sti
fs
mov
push
int
test
pusha
push
imul
shll
sub
and
pop
jg
out
out
and
adc
xor
jae
movsl
mov
jle
lds
ds
bound
scas
cmp
cld
lea
mov
pop
lret
aam
cmp
in
fs
aas
push
ret
and
pusha
push
ss
iret
inc
ret
shll
push
lock
repz
xor
jl
push
cltd
fdivrl
mov
pop
mov
adc
call
pusha
jb
jecxz
cli
test
ret
divb
jmp
stos
xor
enter
pusha
xor
push
or
sti
inc
pusha
jo
out
int
ror
jno
sub
mov
add
out
adc
push
pusha
add
into
jne
in
call
enter
pop
aad
sti
fs
or
adc
fs
add
andl
ss
fsub
adc
mov
repz
xchg
xor
pusha
mov
cld
xchg
add
sbb
test
cmp
int
dec
lret
mov
in
nop
mov
enter
adc
mov
mov
sub
out
sbb
add
sbb
jecxz
cwtl
ret
outsb
ret
pusha
rclb
push
lret
pusha
test
outsl
dec
test
loope
out
mov
lret
adc
cmp
adc
xor
mov
idivl
mov
xlat
push
and
sub
pop
ret
xchg
push
insb
rol
mov
and
call
add
fcompl
dec
sbb
inc
div
ret
pusha
xchg
mov
pop
pop
pop
popf
pop
and
cld
inc
scas
pusha
mov
movl
lret
insb
jp
lret
dec
adcb
inc
or
mov
mov
aad
push
ja
and
jnp
jg
and
int
push
push
pusha
cmc
cmpsb
add
shrb
popf
lret
in
fs
aad
adcb
ret
adc
pusha
jecxz
das
cmp
mov
pusha
mov
pop
insl
inc
arpl
mov
idivb
dec
dec
jo
mov
jl
mov
mov
mov
insb
imul
adc
sub
mov
inc
pop
jno
nop
pusha
mov
adc
and
pusha
insl
pop
mov
cs
lea
mov
dec
pushf
dec
jecxz
insl
and
jle
mov
xor
jae
lcall
daa
and
add
cld
or
mov
pop
out
iret
or
ja
test
lods
mov
mov
xchg
sub
dec
and
pusha
lds
lea
pusha
adc
mov
pusha
das
shrl
pusha
adc
jnp
fs
insb
pusha
push
sbb
punpcklbw
outsl
xchg
inc
jge
fwait
mov
mov
sub
pusha
insb
cmpsl
jae
dec
lcall
adc
clc
or
pusha
mov
adc
mov
lcall
loopne
icebp
lods
sub
lahf
jmp
mov
xchg
push
ret
shl
pusha
adcb
test
ss
push
fs
jl
mov
lcall
addr16
js
sbb
dec
cmp
dec
aam
xor
xchg
or
pusha
push
mov
fldenv
xor
insl
pop
push
pushaw
ljmp
out
pusha
popf
fnstenv
mov
shll
sarb
fnstsw
loop
mov
pusha
adc
mov
fisttps
imul
insl
sti
test
stos
addr16
xchg
mov
mov
jl
lods
imul
aam
push
adc
jecxz
jns
dec
xchg
cwtl
mov
popa
mov
les
mov
hlt
jl
mov
and
pusha
fsts
fs
insl
mov
loopne
cmp
mov
outsl
fldt
lods
lahf
fs
mov
sbb
sbbb
push
adc
adc
imul
sbb
jne
sahf
mov
pusha
movsl
ljmp
pusha
fnsave
mov
push
xor
pusha
out
imul
ja
pusha
or
push
pusha
push
inc
adc
adc
loop
in
insb
pusha
les
inc
mov
std
jo
out
jmp
push
test
add
js
mov
mov
and
stc
jmp
pusha
jge
aam
sub
outsl
cld
pop
sti
push
addr16
and
cmpsl
xchg
fisubrs
jl
cli
add
and
jge
imul
push
xchg
shll
cli
test
bound
mov
and
repz
adc
bound
icebp
pusha
movsl
or
lods
lods
adcl
pusha
push
shlb
das
pusha
jg
out
insl
xor
int
mov
inc
push
test
arpl
sbb
jno
sbb
in
mov
adc
sbb
aam
cmp
fs
pop
sub
pusha
mov
andb
mov
adc
dec
sbb
lock
nop
pop
push
clc
mov
inc
roll
fs
mov
pop
pusha
add
cmpsb
es
adc
dec
cmp
femms
lahf
mov
int
pusha
cs
rclb
cltd
add
repnz
inc
in
xlat
mov
loopne
bound
mov
fwait
outsl
adc
loope
add
adc
mov
mov
subb
bound
xchg
int
inc
pusha
shr
popa
pushf
mov
mov
push
jmp
add
rol
mov
shlb
ret
jbe
adc
cmc
sahf
sbbl
mov
loope
or
stos
mov
pop
int3
pushaw
mov
lods
clc
test
mov
sub
pop
in
ja
sbb
or
popa
rclb
movsl
xor
aas
jl
lock
ror
neg
xchg
pusha
xchg
sbbb
pop
pusha
mov
add
pusha
sub
imul
adcl
mov
leave
pusha
fdivrs
fdivrl
pusha
mov
mov
pusha
arpl
or
test
popa
and
call
mov
ljmp
arpl
or
mov
push
push
add
pusha
xchg
push
adc
sub
add
popa
adc
pushf
mov
mov
inc
push
shlb
pusha
shll
adc
jecxz
pop
test
pusha
xchg
lock
adc
lcall
sahf
popf
pop
arpl
adc
push
dec
fs
adc
pop
scas
rclb
jo
loopne
adcb
inc
push
mov
xchg
xchg
add
mov
in
stos
mov
bound
pushf
jo
pusha
mov
fdivrl
ss
jnp
lock
addr16
ljmp
cmc
aad
cmp
xchg
mov
push
mov
data16
push
sahf
cmp
fmuls
push
adc
mov
mov
imul
add
popa
pop
jb
rol
ljmp
and
imul
mov
jb
xor
and
ret
xchg
popa
and
mov
subb
js
push
ret
in
fbstp
xchg
imul
jl
sub
ret
shlb
dec
test
and
dec
scas
dec
dec
and
xchg
pop
push
push
push
inc
sarb
pmulhw
inc
adc
mov
enter
psraw
push
bound
cmpb
pop
clc
addb
leave
mov
enter
and
popf
call
inc
xor
jns
shlb
xor
mov
add
popf
sti
sub
pusha
mov
sub
xchg
mov
adcb
ficompl
xchg
mov
and
inc
and
std
popa
inc
dec
push
push
pop
xchg
outsl
mov
shr
sahf
loope
mov
adc
stos
inc
jns
jb
push
addr16
xor
or
nop
mov
xchg
add
push
sahf
lahf
dec
inc
sub
cs
popa
and
pop
jge
xor
jecxz
outsl
mov
ret
xchg
incl
repnz
push
inc
jb
lcall
in
and
loop
mov
addr16
pop
jp
test
mov
stos
push
arpl
roll
cmp
loopne
adc
pop
adc
loope
cmpsl
arpl
test
sbb
jns
out
shl
jp
jmp
in
and
xchg
mov
sar
xchg
daa
push
add
mov
fisubrs
pop
loopne
pop
xlat
scas
mov
movsl
or
jle
rolw
fld1
mov
mov
stos
rcl
push
arpl
std
fisubl
pop
jp
hlt
cmovg
sbbb
cmp
jmp
iret
mov
daa
bound
in
arpl
cld
mov
lock
dec
std
sbb
gs
jb
das
pusha
clc
out
lret
loop
mov
inc
cltd
lcall
push
xor
pop
je
insl
scas
push
andb
pop
sahf
pusha
mov
enter
jmp
pusha
mov
dec
into
add
fidivs
lock
mov
sub
shll
and
xchg
push
jl
mov
loopne
andl
bound
rcll
insl
sbb
xchg
mov
mov
aaa
pop
cmp
and
aam
stos
ret
mov
into
test
pop
jbe
addr16
mov
sbb
fcmovne
push
popa
push
inc
ja
ret
sbb
and
int
adc
ficoml
notl
pusha
push
sti
add
mov
test
cmpl
mov
std
out
fistpl
iret
mov
popa
inc
fimull
jmp
pusha
xor
lret
mov
pusha
imul
dec
iret
shl
mov
cmp
fldenv
daa
lahf
mov
xorl
mov
xor
into
cmc
pusha
pushl
stos
xor
das
cs
jnp
ja
pop
jecxz
pop
push
data16
mov
sbb
cld
pop
sbb
pop
mov
pop
xor
lock
outsl
pop
shrb
push
movsb
xor
nop
adc
stos
rorb
pusha
inc
mov
cmp
pusha
mov
and
loopne
mov
cmpsl
bound
cld
push
sbb
iret
addr16
and
lds
mov
xor
inc
pusha
sub
cwtl
imul
push
add
das
pusha
fwait
into
inc
push
sbb
jl,pt
sbb
xchg
and
insl
mov
or
adc
lahf
sub
movsl
and
cmp
loope
jbe
mov
push
dec
jnp
cmp
mov
jecxz
scas
jne
jmp
js
mov
mov
sub
pusha
hlt
xor
mulb
cli
jno
incb
adc
add
pusha
xchg
lods
mov
mov
mov
cmpsb
lahf
and
xchg
adc
dec
sysexit
les
rcll
or
out
pusha
sbb
jns
call
jne
or
out
js
sub
mov
push
test
iret
fucom
xor
add
clc
mov
loope
pop
fbld
jl
bound
scas
adc
stc
dec
dec
jmp
pop
xchg
sub
xor
cli
inc
or
xor
incb
cmpsl
and
sub
pusha
popf
scas
cmp
aad
ret
and
xchg
inc
or
dec
sarl
test
fbld
ret
scas
out
mov
adc
fs
stos
outsb
mov
inc
ret
nop
loop
push
in
loope
adc
dec
adc
das
test
xchg
pusha
push
xchg
inc
sub
push
dec
pop
fldenv
movl
pusha
adc
bound
dec
addl
pusha
pop
cmp
adc
dec
or
mov
inc
pusha
imul
push
xchg
cmp
pusha
xlat
push
mov
pusha
cmp
sub
pop
int
jle
nop
add
mov
pusha
rol
mov
lods
adc
sbb
xor
xor
push
cwtl
xchg
and
pop
je
jne
adc
bound
mov
cli
pusha
push
xchg
jmp
pusha
scas
outsl
sbb
int
adc
pop
xor
xchg
jo
mov
pop
loope
jle
lods
popa
movsb
scas
cmp
or
leave
test
push
arpl
jbe
bound
xchg
mov
aam
cmp
push
cmpsl
pop
pop
icebp
cmpsb
sbb
out
ds
xchg
push
lcall
outsb
pop
stc
pusha
loopne
mov
aam
xlat
hlt
inc
mov
cmp
pusha
xor
dec
push
aam
cmp
sub
outsl
xchg
jo
mov
mov
into
jb
mov
pusha
sti
loope
nop
cltd
jg
jl
and
arpl
pusha
pop
mov
pusha
movl
aam
daa
fsubr
movsl
dec
stos
pop
lods
js
cmp
repz
leave
push
pusha
aad
test
jl
sub
int
xchg
inc
jl
in
pop
mov
cmp
adc
dec
cmp
aaa
stos
sub
nop
mov
shl
mov
pusha
ja
mull
popf
loop
pop
nop
xchg
cmpsl
mov
and
or
push
pusha
inc
dec
cmp
repz
lcall
mov
rcl
pusha
movsb
out
mov
sbb
lods
pop
gs
fwait
pop
data16
sub
dec
sahf
add
sub
sbb
jp
xchg
xchg
and
sbb
call
mov
push
pusha
mov
jecxz
pusha
push
push
or
test
jb
xor
je
jmp
xlat
inc
out
shll
push
icebp
mov
or
out
fstl
iret
pop
pop
outsl
mov
xor
pop
dec
std
stc
jmp
in
adc
fs
mov
sarl
ss
pusha
out
or
pusha
loope
clc
push
push
in
gs
xor
cltd
and
and
pusha
scas
scas
das
sbb
pusha
mov
fidivrl
pusha
out
test
hlt
dec
lock
jl
or
arpl
in
sarb
lods
sbb
and
lret
cwtl
xor
add
ret
and
hlt
mov
and
outsl
pop
fbstp
sbb
inc
jl
xor
fcompl
repnz
insb
pop
cli
cld
mov
mov
jbe
movsl
andw
inc
xchg
ret
inc
sbb
and
jp
pusha
cmp
pop
or
cwtl
dec
les
daa
arpl
pop
pop
mov
add
mov
mov
xor
test
sbb
dec
adc
mov
bound
mov
mov
mov
inc
inc
mov
lock
lea
jmp
pusha
bound
cmp
mov
pusha
inc
push
add
in
inc
loopne
pusha
or
popf
cwtl
pusha
sbb
shll
lea
in
test
jl
pop
insl
sbb
inc
js
pusha
lock
lods
adc
rclb
push
cmpsb
mov
ss
jle
std
sbbb
fstpl
push
jecxz
cld
sarl
cmp
mov
inc
dec
adc
bound
enter
sbb
outsb
or
jecxz
popa
sahf
addb
inc
mulb
mov
xor
jge
and
jle
test
inc
push
inc
add
lea
maskmovq
mull
clc
cmp
mov
shrb
xchg
mov
cltd
call
rcrb
pop
aad
lods
adc
pop
jbe
outsl
loop
jne
in
inc
and
jns
dec
mov
jbe
lock
jecxz
out
xchg
pop
loopne
stos
ret
iret
into
mov
shll
fcomip
mov
jge
ss
mov
lret
rcrb
jle
fsts
jbe
scas
lahf
adc
mov
popa
jp
mov
and
cmpsb
pop
ss
cld
pusha
dec
pop
mov
push
ljmp
jmp
pusha
clc
add
jo
xchg
jg
jne
xorl
in
lock
and
adc
jg
mov
xchg
cmp
out
and
push
push
push
les
movsb
lret
outsb
sbb
dec
shlb
ss
jge
jl
push
adc
pop
int
adc
out
mov
clc
sti
ret
dec
and
pushf
inc
add
pop
sub
or
divl
jo
push
inc
int
xchg
scas
pusha
push
xchg
mov
ljmp
mov
js
sub
push
or
pusha
and
in
mov
xchg
lds
ret
test
sbbb
dec
pusha
and
xchg
jbe
out
push
arpl
add
std
and
shlb
das
mov
push
and
js
xchg
nop
leave
pusha
call
add
lahf
cmpsl
daa
ja
stos
leave
mov
add
lds
aad
jae
in
inc
pop
fs
mov
xchg
imul
mov
arpl
xor
push
ret
pusha
and
jo
sahf
insb
daa
pusha
addr16
leave
inc
ss
pusha
add
inc
repz
cld
mov
iret
or
stos
loope
push
pusha
mov
add
das
cmpsb
lret
imul
adc
out
scas
ficomps
push
push
dec
jae
shll
jecxz
pushl
push
stos
das
ja
push
pusha
or
jg
repz
push
jmp
pusha
popa
lods
xchg
nop
mov
mov
add
push
insl
popa
pop
dec
pushf
add
pop
pusha
fimuls
call
insb
test
jb
push
sahf
aas
popa
shll
and
push
pusha
mov
mov
pusha
cltd
aaa
or
pusha
lea
gs
mov
stos
jge
mov
sbb
in
outsl
rclb
mov
xor
inc
adc
shlb
bound
lods
aaa
sbb
jb
pusha
mov
pop
cwtl
test
pusha
sbb
das
jg
cltd
dec
xchg
pusha
sbb
add
pusha
outsl
pop
test
mov
adc
mov
jo
insb
mov
stos
lock
frstor
xchg
sbb
pusha
lods
lds
xchg
test
jge
dec
mov
push
repz
xchg
pushaw
test
mov
inc
add
pusha
ss
stc
inc
repnz
popa
adc
rcl
jecxz
pusha
sbb
sbb
inc
cltd
lea
sbb
arpl
addr16
insb
jge
inc
stc
or
mov
xchg
stos
pusha
frstor
jl
mov
mov
mov
adc
or
xor
push
jp
mov
lds
in
add
icebp
loopne
cmp
pusha
ffree
jnp
jo
in
je,pn
shlb
repnz
mov
push
pusha
push
imul
fcompl
pusha
or
fcomp
inc
mov
ss
or
jb
push
scas
inc
es
xchg
cs
sbb
sub
pusha
and
les
dec
cmp
pusha
stos
push
lock
fiadds
and
data16
mov
arpl
cmp
iret
sti
mov
lds
fistpl
sahf
add
sbb
arpl
dec
adc
fnstsw
mov
loope
mov
lock
fbld
jge
lgdtl
pop
std
rolb
jmp
mov
mov
fiadds
aam
mov
into
mov
push
int3
movsb
push
mov
cld
out
aaa
pop
add
out
xor
cmp
mov
jl
jmp
popa
or
clc
aaa
ds
cmp
xor
mov
lcall
std
stos
stos
sub
pop
jle
push
ss
inc
mov
pushf
fldl
dec
cmp
sbb
pop
pop
shlb
loop
sub
mov
ds
and
mov
or
leave
pusha
addb
fstpl
or
mov
mov
scas
ja
xchg
push
jmp
jbe
sbb
pusha
xchg
cmp
or
and
dec
testl
loope
dec
xlat
pusha
pop
orb
test
idivb
movnti
sbb
fisubrl
pop
add
push
aam
add
mov
stos
insl
pusha
aas
pop
mov
pop
insb
stos
push
inc
adc
pop
test
movsl
cmc
loop
mov
in
mov
mov
dec
pop
scas
repz
aas
iret
in
js
mov
adc
sub
jle
mov
mov
pusha
jns
sbb
xchg
pop
push
mov
push
push
cmp
testl
or
fs
rolb
lret
push
sub
andl
pop
mov
push
leave
loope
sub
into
das
lret
out
pop
adc
mov
pop
inc
ret
ss
push
pusha
mov
xor
andl
push
mov
inc
xchg
pusha
push
and
dec
pusha
es
lods
inc
xor
daa
cmc
lea
and
out
enter
int3
rcrb
fcomip
xchg
bound
mov
gs
cld
daa
jmp
inc
push
pop
out
jecxz
push
pusha
xchg
mov
rcrb
scas
es
add
mov
popf
mov
cwtl
inc
out
pusha
mov
stos
or
fsubrp
pusha
push
aam
inc
sbb
inc
pusha
incl
stos
and
mov
pusha
cli
hlt
outsl
jae
mov
and
lahf
push
fxch
call
dec
mov
sbb
cltd
push
jl
jns
dec
lds
jecxz
jg
cs
je
cmp
pusha
cmp
lret
arpl
cmp
dec
mov
rolb
js
fistpl
movsl
je
pop
cmp
insb
mov
out
add
ficompl
cmp
inc
pusha
into
jb
insb
inc
xchg
pusha
in
test
out
dec
dec
jns
outsl
loope
pusha
in
nop
repz
pop
adc
jne
movb
aam
jmp
inc
and
mov
sub
pop
rclb
mov
bound
add
cmp
jg
mov
pop
movsb
and
xchg
and
add
fldenv
aad
xchg
lods
in
mov
dec
outsb
fistpll
lds
shlb
movsl
shll
ret
js
mov
stos
jecxz
or
cmp
pusha
lods
cmp
fs
pop
test
iret
ret
pop
test
adc
mov
cld
pusha
in
xor
mov
sub
movsl
insl
pusha
sub
imul
and
addr16
cs
pop
mov
dec
fnstcw
repnz
and
in
cld
xchg
pusha
xor
out
jle
add
mov
xor
xchg
outsb
mov
clc
sahf
jbe
jae
adc
ja
cmp
add
pop
popa
xchg
aaa
pop
outsb
std
data16
xchg
insl
mov
adc
or
sub
sbb
mov
icebp
lret
lcall
xchg
sub
push
loope
pusha
jmp
lret
xlat
out
pusha
mov
fdivr
inc
repz
adc
xor
push
hlt
cmp
cmp
mov
shlb
adc
lods
mov
outsb
xchg
sbb
das
pusha
jb
mulb
mov
jecxz
nop
out
cwtl
fldcw
test
int3
xchg
sub
pusha
or
mov
pusha
cmp
mov
pusha
test
add
cs
pusha
push
fsubrl
je
and
mov
mov
add
jo
pusha
cld
xchg
push
jp
imul
pusha
aam
daa
mov
cs
pusha
adc
in
mov
es
imull
jno
or
and
jnp
pusha
stos
xlat
outsb
sub
pop
aad
pop
or
dec
sbb
stos
pop
xchg
inc
xor
popf
sbb
popf
imul
dec
enter
lahf
repz
pop
lahf
pop
add
sub
loopne
lcall
fdivrl
stos
mov
add
sbb
loope
lahf
sahf
mov
arpl
sub
pusha
dec
call
sbb
es
test
cltd
stos
arpl
imull
cmp
or
arpl
xchg
arpl
pusha
pop
or
movsb
inc
gs
clc
mov
mov
out
xchg
sbbb
add
adc
pusha
sub
push
pusha
lods
xor
fcomi
dec
popf
mov
and
test
mov
shrb
daa
ja
insb
inc
test
arpl
cmp
je
dec
push
jb
pop
xor
push
adc
lods
pusha
sbb
pop
xchg
pusha
addr16
lods
pop
adc
mov
sbb
pusha
insb
pop
sahf
jl
push
ret
pop
fs
pop
mov
push
pop
push
aaa
xor
test
push
pushw
cmpsl
popa
cmc
add
idivb
clc
loopne
fs
test
addr16
mov
adc
pop
mov
pop
sbb
jl
in
loopne
imul
daa
hlt
repz
inc
imul
bound
inc
cwtl
and
ret
mov
iret
xor
fiaddl
adc
daa
movsb
lahf
sbb
jo
pushf
scas
scas
ret
arpl
icebp
dec
in
cmc
inc
je
xor
ss
mov
mov
cmp
add
jmp
insb
std
sub
test
xchg
or
fs
adc
add
sub
js
jle
addb
sbb
fninit
pusha
scas
pop
fcoml
mov
cmp
pusha
adc
movl
cmp
xlat
js
push
fldl
dec
fsubs
fwait
jne
and
fidivrl
mov
jl
outsb
dec
mov
mov
xor
je
jl
outsl
pop
lock
mov
mov
sub
jne
push
jg
mov
or
jbe
xchg
pusha
popa
pushf
inc
mov
mov
mov
mov
loope
loope
cmpsl
sti
pusha
dec
iret
in
std
out
jmp
fildll
loopne
and
dec
test
iret
fisubrl
es
sbb
mov
imul
adcl
fsub
xor
cmp
rolb
mov
pusha
stos
push
scas
jecxz
sub
scas
xor
fadd
inc
and
ret
insl
pop
ss
test
add
bound
mov
arpl
lret
andb
sub
push
pusha
enter
loopne
andb
out
cmp
inc
sub
cmp
xor
jnp
dec
xor
movsb
ja
pusha
cmp
les
add
test
mov
icebp
pusha
add
jns
cwtl
ret
sahf
pusha
pop
push
push
aaa
xchg
lahf
int3
xchg
pop
je
push
movsl
or
mov
sbb
jbe
jns
push
dec
mov
lahf
ja
pop
rorb
pusha
jle
popf
filds
negl
sti
cmp
in
mov
pusha
sub
xchg
cltd
adc
xor
mov
inc
fs
inc
ret
xchg
or
scas
adc
arpl
pusha
jno
mov
adc
stos
or
rolb
xlat
xor
shlb
sub
div
mov
mov
test
shr
outsl
mov
movsb
and
mov
je
dec
cs
mov
push
adc
pop
pop
pop
and
ss
pusha
icebp
std
rolb
inc
push
arpl
leave
push
mov
xor
cmp
pop
insb
mov
mov
pusha
repz
loopne
xor
sbb
clc
leave
cmpsb
lahf
adc
movsb
bound
jns
lds
lea
or
je
pusha
sub
scas
out
iret
movsl
add
lret
push
xlat
imul
inc
test
lock
ja
cmpb
pusha
sbb
mov
add
adc
inc
cld
push
addl
andl
pushf
pop
jl
mov
shll
jp
mov
inc
ja
sbb
xor
clc
pop
and
and
cmpsb
cmp
testb
dec
insb
in
out
push
mov
mov
ret
scas
outsb
mov
pusha
repz
add
sub
mov
js
cmpsb
sbb
cmp
and
mov
sbb
arpl
jp
sbb
cmp
loope
xchg
pusha
sub
mov
cltd
filds
jbe
sub
dec
mov
pusha
cltd
pop
sbb
xchg
dec
jnp
adc
pop
cmp
insl
in
vphaddudq
nop
hlt
insb
mov
shrb
inc
ljmp
fucom
mov
bound
aam
mov
into
pusha
push
mov
sbb
push
xchg
bound
ja
pusha
sub
rcll
lds
push
push
cs
in
call
dec
dec
dec
inc
shlb
gs
addr16
adc
mov
addl
repz
inc
push
pusha
sub
cs
loop
sub
arpl
ljmp
imul
push
ret
cmp
pusha
rorb
lods
and
push
xchg
mov
cmp
lods
arpl
xchg
add
push
mov
dec
addb
xor
outsb
cltd
bound
imul
js
or
mov
xchg
loope
dec
or
imul
fisubl
and
divb
insb
sbb
inc
add
je
in
fistpl
pushf
pusha
xchg
adc
pop
outsb
push
jp
scas
xor
lahf
sbb
sti
mov
inc
sbb
push
and
push
jmp
push
mov
jbe
arpl
divl
add
sahf
sub
out
xchg
fs
jmp
outsb
enter
pop
dec
pusha
xchg
aam
mov
js
jp
jmp
pop
dec
mov
cmc
cld
dec
fildll
xor
xlat
mov
push
je
arpl
fdivl
pusha
and
lods
in
push
enter
xlat
push
and
loopne
push
push
sub
out
inc
cs
mov
inc
insb
push
movsb
les
pop
and
aas
std
pusha
xchg
sub
inc
adc
xorl
push
rcrl
lret
sti
inc
jne
pusha
jae
enter
adc
loop
xchg
and
pusha
mov
push
rcr
pusha
push
pushf
push
xlat
pusha
std
pop
mov
hlt
cmp
in
pusha
or
mov
mov
mov
sub
test
xor
and
jle
mulb
sbb
add
xchg
pushf
pop
pusha
addr16
dec
pop
lods
mov
lock
pop
jg
or
xor
in
arpl
pusha
sbb
adc
mov
fisubs
pop
ss
lret
inc
pop
lret
mov
inc
add
xor
negb
fisttpll
dec
add
inc
mov
ret
loopne
sbb
es
lret
xchg
arpl
sbbl
popf
xor
and
mov
aad
add
adc
sbb
fs
xor
imul
test
xchg
out
insl
mov
xor
fmul
push
mov
pusha
fistps
repz
mov
or
xchg
and
orl
push
lock
cmp
je
mov
mov
sbb
repnz
jl
pop
sub
sub
or
mov
imul
gs
rcrb
jns
pusha
push
and
ret
sub
out
xor
test
add
dec
lock
pusha
jmp
dec
mov
js
mov
lahf
int
xchg
gs
pusha
je
cmp
enter
pusha
cmp
cld
sbb
cmpsl
sbb
mov
insb
aad
stos
pop
test
pusha
mov
dec
jg
je
dec
ret
arpl
scas
out
add
loop
out
pusha
ds
adc
pop
mov
mov
stos
jge
pusha
shll
lods
xor
mov
pop
inc
pusha
les
in
aaa
ja
insb
fdivrp
xor
pop
lods
jbe
aas
cs
sbb
sbb
mov
xlat
lea
sub
push
sbb
mov
popa
push
xchg
std
mov
inc
pusha
or
xor
popf
es
inc
aam
xchg
frstor
orb
cmp
cmp
sbb
sbb
sub
cmp
and
je
sti
adc
ljmp
mov
mov
ficoml
jl
int
fs
hlt
inc
dec
data16
sub
and
aad
subl
jo
popa
ret
shlb
cmp
stos
sbb
mov
mov
lret
pusha
dec
cmpsl
adc
add
mov
mov
arpl
adc
add
ret
movsl
cmp
pusha
shrb
or
pop
jge
push
fs
sbb
insl
inc
jecxz
inc
ljmp
mov
out
call
scas
mov
fldt
dec
push
cmpl
sub
mov
adc
sbb
and
inc
hlt
fs
out
es
in
clc
and
xor
mov
ss
jbe
arpl
adc
pushf
in
imul
mov
or
mov
pusha
repz
or
xchg
inc
ret
cmc
mov
mov
hlt
gs
mov
shl
sub
mov
xor
xchg
test
dec
pop
dec
and
and
lahf
pusha
xchg
push
or
in
cli
test
pusha
jle
bound
mov
jecxz
pusha
cmc
lods
into
out
adc
push
jmp
mov
jmp
js
push
addl
leave
sbb
pusha
pop
mov
addr16
push
push
add
push
adc
pusha
jnp
and
dec
xchg
je
int
cmpsb
pusha
test
addr16
push
inc
push
jg
pusha
cs
mov
and
pushf
loop
popa
mov
pusha
push
lds
mov
jmp
push
aad
xchg
pusha
dec
inc
std
int
pop
pusha
int3
lret
dec
movsb
iret
sub
ret
dec
mov
push
cmp
and
orb
add
add
mov
ds
aaa
cltd
mov
push
pusha
loopne
cs
pop
mov
adc
inc
fs
dec
adc
aam
arpl
xchg
sub
pusha
hlt
mov
aad
jmp
sbb
and
bound
in
mov
cmp
fs
push
pop
popf
or
xchg
xchg
pusha
mov
rorb
pusha
cmp
es
jmp
scas
jl
fwait
and
pop
and
call
pop
and
pusha
inc
mov
add
push
js
push
insb
dec
mov
pop
inc
out
xchg
dec
icebp
pusha
es
shll
mov
lahf
ret
jmp
pusha
out
xor
or
testl
xor
cltd
pop
push
in
add
scas
call
imul
mov
pusha
sbb
je
ja
jge
out
fsub
rcll
int
dec
scas
xchg
push
cmpsl
les
add
push
mov
idivb
add
rcrl
or
xor
mov
sti
test
inc
mov
cld
sarb
cmp
mov
push
push
ss
pusha
adc
pop
pop
call
lahf
mov
xchg
movsl
mov
inc
les
mov
xchg
push
jno
mov
add
fsubrl
out
sub
pusha
and
cmp
cwtl
fsub
aam
out
dec
adc
mov
clc
dec
js
shrl
cmp
xchg
inc
sbb
xor
daa
xchg
insb
lcall
and
adc
ret
in
push
dec
js
in
adc
lcall
inc
imul
je
mov
mov
and
fiadds
mov
mov
arpl
add
xor
adc
cld
or
adc
lcall
dec
js
lock
nop
mov
xor
lods
cs
rol
ret
int
stos
cmp
push
bound
jg
mov
push
call
addb
in
xor
sbb
mov
dec
je
mov
adc
push
dec
push
mov
jno
das
mov
mov
bound
and
inc
mov
js
ffreep
inc
outsb
jbe
xor
push
add
mov
and
das
mov
xchg
icebp
mov
mov
pop
or
lcall
ja
push
out
mov
lahf
sub
inc
js
dec
mov
sub
push
fwait
nop
mov
sub
mov
test
imul
arpl
push
mov
xlat
pop
popf
xor
push
shrb
repz
dec
rcr
cmp
outsb
insl
mov
add
sub
sbb
push
push
movsl
inc
mov
imul
ret
mov
dec
adc
iret
add
mov
and
lock
jo
or
sub
inc
sahf
push
or
dec
jl
scas
lods
test
pop
cmp
jb
sbb
shll
nop
stos
ret
xor
and
ljmp
and
icebp
lods
mov
mov
jne
inc
out
mov
test
push
pushf
adc
rcll
mov
imull
stos
xor
repnz
loop
loop
addr16
jg
in
inc
movhps
mull
in
jo
push
xchg
ja
popa
addr16
mov
inc
insl
or
inc
mov
mov
clc
out
popf
inc
push
mov
out
jbe
push
sub
pop
and
pshufw
movsb
jmp
pop
jl
or
fisubl
sbb
sahf
lret
ret
mov
push
and
hlt
lods
or
push
pop
stos
push
cmp
movsb
push
and
mov
ss
push
jecxz
xchg
mov
arpl
bound
out
hlt
jecxz
or
or
push
mov
sbb
dec
xchg
pusha
adc
dec
jle
adc
hlt
mov
out
mov
sub
inc
in
push
rcrb
dec
stc
sub
mov
lcall
and
jbe
sahf
or
and
fs
and
addb
push
push
mov
stc
test
inc
inc
xor
push
outsb
enter
imul
ljmp
inc
inc
enter
or
pop
sti
pop
jo
cmpsl
mov
inc
adc
loop
daa
push
fs
push
adc
cwtl
inc
push
sub
dec
arpl
add
pop
js
cmpsl
add
xor
xor
push
and
mov
stc
mov
out
inc
pop
inc
lcall
lea
jb
ret
leave
bound
adc
push
xor
push
dec
push
popa
lock
inc
dec
es
shrl
in
cmp
xor
out
jge
loop
fldenv
ljmp
lcall
clc
imul
push
sub
ja
cmp
xlat
adc
push
dec
testb
push
push
push
push
pop
movsb
push
icebp
cmp
cmp
mov
int3
aas
mov
fisubrl
xor
mov
adc
int3
push
test
pop
xchg
shrb
xor
push
cmp
movsl
and
push
sbb
sub
jne
jo
sti
or
pop
mov
es
sub
loopne
ret
loopne
adc
nop
xor
xchg
addb
rolb
jg
cwtl
mov
jmp
lock
sahf
dec
cltd
sub
dec
inc
mov
dec
fisubrs
mov
lods
dec
and
adc
jmp
adc
pop
add
pop
sarl
xor
xchg
loopne
int3
and
movsl
repnz
test
sti
xchg
jne
push
jg
mov
clc
jo
inc
xor
outsl
adc
pop
pop
pushf
adc
arpl
ret
add
test
xor
jle
xor
xchg
std
popa
out
sarl
pop
sub
ljmp
mov
jmp
ds
xchg
mov
pop
outsb
movsb
sbb
in
call
dec
nop
xchg
pop
inc
bound
cs
pop
cltd
inc
pop
mov
popa
ret
add
nop
and
data16
loopne
jo
adc
xchg
imul
jmp
out
inc
popa
sub
jno
inc
xorl
fisttps
test
shr
or
nop
lahf
pusha
popa
add
and
iret
push
ret
ljmp
mov
adc
cmp
es
add
push
inc
adc
rcrb
and
cmp
sub
bound
fwait
mov
das
and
sub
or
daa
mov
roll
int3
dec
xchg
mov
sub
push
aas
stc
jmp
fldl
pop
repz
test
iret
enter
test
je
cmpsb
xchg
bound
pusha
fwait
sub
push
push
loopne
xor
and
adc
std
cli
rol
inc
not
pushf
sbb
lds
inc
mov
push
outsl
loop
out
jmp
add
shrw
mov
jo
sub
dec
cmpsl
jp
or
xchg
push
ret
shrb
lret
mov
stos
fimull
sub
sub
imul
jo
mov
mov
and
cmc
sub
call
aas
add
adc
leave
sbb
andl
int3
jge
loope
stos
adc
dec
rcrb
and
mov
xchg
popa
stos
inc
ret
and
cltd
lea
test
pop
xchg
les
ficompl
and
ds
sbb
and
mov
cmpsb
push
movsl
daa
stos
mov
movsb
imul
sbb
lock
xor
rcrb
jae
fidivrl
rcl
xor
ficoms
shr
sbb
shlb
ljmp
mov
imul
in
ljmp
add
dec
pusha
jne
insb
jge
clc
sbb
xchg
push
xor
out
movsb
psraw
mov
jecxz
mov
hlt
or
pop
push
popa
test
stos
pusha
ret
repz
notb
insb
loopne
adc
xchg
adc
add
mov
div
xor
adc
arpl
xor
jb
inc
fdivrl
mov
sub
outsb
push
lret
fisubrl
mov
pop
mov
xor
loop
sbb
pusha
ljmp
fwait
test
xlat
out
sbb
bound
jbe
and
jl
xor
fnstsw
adc
aam
lahf
pusha
jo
mov
addb
insb
loop
shlb
movsl
cmpsb
arpl
aas
loope
pop
pusha
dec
pop
cmpsl
push
adc
mov
jb
mov
clc
or
sub
xchg
popf
jne
repnz
add
loopne
scas
les
test
cld
enter
jl
nop
mul
adc
mov
fistpll
lcall
mov
xor
xchg
add
pushf
xlat
addr16
shl
fsubl
mov
int
inc
das
xchg
lods
pusha
ret
jbe
adc
push
mov
add
sahf
mov
jmp
shlb
movsb
mov
add
jp
pusha
xorl
lock
pusha
dec
xchg
and
daa
sbb
arpl
insb
pop
cmpsl
pusha
add
jge
pusha
mov
mov
sahf
pusha
imul
call
fmuls
loop
inc
add
dec
nop
sub
push
sub
lret
scas
je
aaa
adc
mov
xchg
data16
inc
jbe
inc
frstor
mov
sub
addl
out
rolb
pusha
pop
aaa
pop
sub
stos
push
pusha
dec
cmp
cmpsl
mov
pop
adc
adc
inc
dec
lret
pusha
mov
lret
aad
pusha
repnz
sub
add
fisubrs
fwait
sbb
push
dec
addr16
cmp
iret
clc
imul
jmp
jl
test
cld
dec
pusha
rcll
popa
sarb
imul
jae
cltd
lret
mov
pop
and
out
hlt
inc
mov
pop
jne
faddl
jecxz
mov
outsb
insl
adc
mov
aam
xchg
out
lods
xor
addl
or
pusha
sti
popf
cmp
mov
dec
outsl
xchg
mov
ss
ret
testb
xor
shlb
je
fwait
jnp
mov
fiadds
mov
aam
dec
movsb
dec
stos
aaa
movsl
ret
pop
mov
fsubs
cwtl
cmp
push
add
adc
jl
cmp
or
sub
xor
mov
pop
mov
mov
test
aam
jl
or
insb
add
imul
mov
push
mov
mov
imul
outsb
pop
jg
sub
mov
insl
jecxz
xchg
xchg
loopne
scas
int3
or
fldt
jge
xor
sub
pop
adc
mov
add
ficomps
sti
pusha
dec
cmpsb
data16
inc
inc
mov
mov
dec
pop
inc
call
mov
das
fdivl
xchg
popa
mov
mov
in
dec
pop
mov
pusha
aad
sti
shll
pop
ja
inc
ret
mov
xchg
mov
cmp
dec
rclb
fs
call
in
or
out
mov
inc
mov
inc
mov
in
cmp
or
add
lret
loopne
stos
sbb
lods
imul
and
andl
pop
data16
pop
pusha
enter
mov
psubusw
scas
loop
sbb
sub
xchg
cmp
push
mov
addl
dec
lods
dec
inc
push
push
dec
mov
cmp
xchg
pop
incb
ss
fs
cmp
rorb
ds
pop
add
or
xor
xlat
mov
mov
into
enter
bound
mov
pusha
mov
fucom
add
fdivl
pop
iret
out
popf
cmc
arpl
push
inc
je
pusha
lods
or
mov
int
inc
mov
jne
mov
outsl
lods
scas
sub
pusha
pop
out
ljmp
dec
xor
cs
jae
insb
adc
loope
push
xor
into
add
movb
iret
push
hlt
arpl
push
insl
je,pt
popa
jl
add
or
jmp
xor
cmp
shll
loope
jl
cltd
pusha
or
push
sub
mov
pusha
in
or
fildll
pusha
sub
cmp
cmp
dec
roll
pop
int3
pop
inc
adc
bound
cmc
add
enter
xor
loopne
pop
insb
aas
ficomps
in
sti
xor
lock
aaa
pusha
mov
mov
jg
cmpl
loop
sbb
and
cltd
out
add
in
add
mov
pusha
test
xchg
xchg
jo
outsl
pusha
sbb
jno
pop
or
xchg
fsubrl
mov
out
push
pop
pusha
pop
movsb
ss
push
pop
and
insb
das
cmp
add
arpl
push
inc
pop
adc
int3
push
ljmp
jmp
mov
imul
lret
fs
cpuid
pop
jne
mov
mov
push
add
cltd
mov
push
or
loope
outsl
mov
int
int3
outsb
pop
cltd
pop
pusha
movsl
push
cmc
mov
mov
daa
mov
jno
fbld
ds
pusha
lahf
inc
push
movsb
movsl
stos
fs
stos
addr16
sub
data16
in
pop
hlt
out
lret
jbe
in
aaa
cmp
mov
adc
arpl
cltd
inc
imul
inc
sbb
mov
xlat
jne
jae
jnp
aas
cld
test
and
je
sub
or
outsb
push
sub
repz
insb
sarl
push
mov
mov
cltd
ljmp
mov
cmp
mov
orb
sbb
dec
cli
pusha
enter
mov
cmp
fstl
test
adc
pop
xor
pusha
dec
int
pop
jne
fidivl
mov
cmpsl
mov
pop
mov
sub
jo
xor
adc
in
idivl
loopne
adc
adc
andb
imul
pusha
mov
scas
fstpl
outsl
adc
ljmp
lods
sbb
sub
sarb
mov
inc
ss
dec
outsb
ret
hlt
andl
sub
rcl
sbb
pusha
xchg
test
adc
pop
push
push
test
mull
iret
movsl
mov
push
repz
pusha
daa
aas
lcall
loope
fisttps
mov
dec
bound
out
pop
fdivr
leave
cmp
bound
pusha
sbb
or
nop
sbb
movsl
cltd
pop
adc
pusha
aam
aad
insl
mov
sbb
jns
cmp
lods
js
cli
ret
test
repnz
cmp
lea
xchg
icebp
mov
xorb
xchg
loopne
and
mov
into
jge
mov
xchg
sub
enter
fs
div
cmp
pusha
xor
mov
mov
shlb
mov
inc
pusha
push
sub
test
mov
mov
std
arpl
sbb
xchg
test
stc
push
push
lcall
mov
pusha
pop
add
pmullw
dec
sbbb
lods
xchg
add
ret
lcall
and
pop
inc
loope
rol
sub
cli
xlat
inc
sarb
pop
popw
and
gs
push
inc
sub
cwtl
ret
xchg
pop
jmp
jo
clc
mov
ja
pusha
stc
pop
pop
lcall
dec
cmpsb
add
push
cmp
jge
push
inc
ret
xor
pusha
xor
out
insb
xchg
mov
jle
inc
data16
sub
imul
mov
imul
dec
jecxz
push
push
vmread
test
movsb
mov
push
sbb
stc
add
int3
cmp
push
mov
push
loopne
dec
xchg
ss
mov
loopne
adc
dec
sbb
movsl
jae
sahf
dec
aas
fbld
popf
mov
gs
pop
xchg
loop
addr16
mov
jno
inc
test
and
jg
loop
ret
outsl
mov
jl
divl
or
xor
xor
push
or
inc
mov
dec
mov
shlb
pop
andb
lock
jg
cmpsb
sbb
jbe
xor
popa
push
bound
iret
lahf
mov
sbb
jnp
mov
cltd
pop
jge
jo
popf
jb
fdivrs
and
inc
in
mov
xchg
jg
dec
mov
sbb
loope
jmp
movsb
popa
add
push
iret
ret
fwait
loope
fsubs
arpl
les
and
aaa
add
in
push
sbb
dec
dec
push
rclb
pop
add
movsl
jne
pop
mov
icebp
popa
jnp
aam
sub
lods
imul
xor
int
pusha
repz
in
dec
jl
pusha
fcomps
sbb
data16
insb
stos
xor
loop
lea
insb
inc
shrb
mov
ret
ja
push
pusha
and
mov
icebp
sbb
fisubs
nop
lock
adc
daa
dec
push
sbb
cmpsl
test
aad
pusha
jb
sub
pop
movsl
pop
sahf
pusha
out
add
mov
mov
xchg
cmp
pushf
movb
mov
dec
ret
dec
enter
lea
stc
jmp
mov
mov
xorb
mov
or
cwtl
xor
cmp
jo
mov
mov
pusha
xchg
pop
bound
pusha
mov
movsb
jb
pusha
mov
lret
pusha
cmova
test
jnp
pusha
cmc
xchg
hlt
loope
xor
adc
adc
dec
loope
mov
test
cs
sbb
mov
pusha
or
xchg
dec
sbb
in
xor
push
ds
arpl
loope
call
mov
and
outsl
into
je
dec
jg
xchg
add
ret
insl
pop
pop
pop
shl
adc
cmpb
mov
test
lret
cmpsb
jmp
pusha
push
das
push
adc
stos
mov
outsb
jmp
pusha
sbb
lods
jecxz
addr16
push
jns
adc
out
pusha
fmuls
test
insb
inc
movzwl
lret
insb
pop
insl
cmpsb
cmpl
arpl
jmp
push
rorb
arpl
rol
adc
in
les
sub
loopne
xchg
push
add
insb
or
repz
mov
pusha
dec
mov
add
pusha
lahf
push
mov
jae
ljmp
mov
test
inc
mov
mov
mov
pop
and
sub
popa
adc
ret
cmpsb
jl
cmpsl
lods
xchg
and
frstor
push
jmp
movsb
sub
add
mov
and
pusha
sub
loop
pusha
pop
sbb
and
lds
pusha
push
stos
outsb
cmp
inc
movsl
popa
cltd
mov
orb
pusha
jge
pop
xchg
pusha
adcl
xchg
insb
sahf
cmp
xor
inc
outsl
mov
xchg
repnz
fildl
shlb
mov
leave
stos
ficoml
mov
jle
xlat
add
mov
shrl
xor
scas
lret
push
mov
popa
aam
rcrl
or
fidivrs
push
inc
push
imul
pop
push
loop
les
stc
imul
verw
mov
arpl
or
pusha
cmpsb
and
adc
xor
loop
lcall
fmull
xor
les
jns
sbb
xorb
cmpsl
arpl
push
popa
cli
sub
push
adc
loope
scas
cmc
push
into
int3
popa
cwtl
inc
movsb
fs
and
inc
xchg
xor
jmp
mov
bound
repnz
call
lea
push
add
xor
jl
sahf
pop
mov
push
arpl
jmp
mov
sarb
lahf
incl
les
mov
pusha
lcall
jle
insl
xor
cltd
mov
mov
inc
push
or
movsb
push
push
pusha
mov
movsl
aam
pusha
insl
daa
test
push
jb
pusha
enter
test
aad
in
cld
pop
xor
push
xchg
adc
in
fmull
mov
loop
pop
xor
ret
icebp
sub
xchg
aas
jae
jb
push
fcmovu
jmp
sub
push
int3
xchg
jecxz
lret
outsb
test
sub
xchg
adc
loopne
subl
ret
stos
or
inc
ja
xchg
add
andl
xchg
movsb
xchg
fdivl
and
adc
sub
rorl
pop
nop
in
mov
subb
sub
int
xchg
ret
jno
fidivs
and
inc
pop
addr16
pushf
hlt
mov
cmpsl
push
mov
lock
test
cmp
mov
push
jp
nop
stos
push
jp
push
insl
aas
jo
out
and
sbb
sub
mov
mov
sbb
or
shlb
pop
adc
adc
jmp
inc
lcall
push
imul
test
sub
jno
ljmp
mov
hlt
stos
add
push
or
xchg
mov
pop
push
inc
stos
loop
mov
repnz
shrl
pop
and
push
mov
mov
add
lock
rorb
dec
arpl
inc
adc
outsb
aad
aas
mov
pushf
loopne
jbe
xchg
and
dec
push
andl
or
adc
mov
add
jl
insb
cmpsl
push
xor
pusha
je
stos
mov
mov
mov
stc
cmc
xchg
cwtl
pop
out
cmpsb
lcall
xor
jae
inc
fbld
cmc
mov
clc
pusha
xor
rcr
adcb
pusha
into
jg
sbb
mov
popa
and
cmc
sub
out
fsubrl
test
adc
fst
mov
rep
pusha
jge
mulb
add
pusha
int
sti
imul
dec
sub
push
push
push
jmp
push
pusha
xor
into
inc
adc
xlat
xchg
jno
or
jb
and
cwtl
fldenv
out
push
lret
cltd
test
and
mov
pop
jle
push
pusha
mov
or
stos
gs
pusha
sbb
jp
clc
jg
pusha
in
and
fucom
dec
fwait
fs
push
inc
call
insb
adc
jmp
arpl
sub
mov
addb
push
mov
add
xchg
pusha
rcrb
imul
jae
in
push
cwtl
push
stc
ret
aam
pusha
nop
repnz
adc
jbe
popa
test
imul
pop
pusha
mov
xor
or
mov
inc
test
pusha
push
jns
dec
adc
popf
inc
pusha
int3
jo
xor
adc
bt
mov
mov
pusha
lock
jnp
cmp
push
lret
fs
adc
imul
or
idivb
mov
push
iret
mov
push
pusha
jb
std
lods
nop
xlat
inc
pusha
mov
popf
lcall
xor
and
mov
in
arpl
bndstx
aad
shll
stos
inc
pusha
mov
jns
sub
push
xor
add
enter
pusha
out
int
rolb
or
jb
add
mov
adcl
aas
mov
dec
mov
nop
into
and
mov
dec
sub
pusha
add
ret
mov
enter
jle
fcoms
xchg
fs
shlb
pusha
jbe
jo
das
mov
ret
dec
mov
insb
shrb
xchg
xor
imul
pusha
ss
rclb
popa
xor
pop
and
mov
push
pusha
sub
adc
jo
mov
adcl
push
dec
scas
repz
pop
mov
mov
add
loope
mov
clc
les
setnp
pop
fdivr
sbb
daa
inc
call
sub
adc
mov
pusha
push
stc
sbb
pusha
rorl
lret
or
movsl
sahf
or
mov
lea
hlt
lds
inc
aas
jecxz
pusha
dec
cmpb
dec
mov
mov
fmuls
sbb
jmp
sbb
sbb
cwtl
pop
insl
push
xchg
and
push
imul
pusha
lcall
ds
pusha
das
sbb
enter
jl
mov
push
and
and
mov
push
cmpsl
jg
loope
push
repnz
pusha
sub
mov
and
sub
add
mov
jecxz
or
ljmp
insb
repnz
jge
call
pusha
jae
and
sarl
mov
pop
push
gs
bound
xlat
test
push
cltd
incl
pusha
pop
inc
and
pop
cmp
push
pusha
adc
cmp
sbb
jb
loope
stos
insl
cld
out
adc
pusha
push
lcall
pusha
jnp
push
imul
mov
cltd
add
mov
andl
repz
push
popa
push
xchg
insl
pusha
lods
mov
addr16
push
shrb
sbb
pusha
ja
aaa
shlb
fs
xchg
inc
aam
stc
mov
daa
mov
imul
popa
mov
and
pusha
leave
repz
inc
sub
movsl
pusha
clc
cwtl
insb
pxor
inc
fs
mov
outsl
andl
out
sbb
repnz
aas
push
pop
pusha
andl
mov
test
pusha
je
pop
jbe
push
mov
push
mov
inc
push
jb
test
jg
pusha
insb
jle
dec
shl
adc
out
and
lret
xchg
popf
outsb
or
adc
dec
lods
data16
add
sbb
pusha
movsb
xchg
mov
sub
imul
xor
sub
in
pusha
jge
ja
adcb
cmpsb
sbb
dec
pusha
call
jno
ret
pop
dec
aam
jle
inc
pusha
cmp
pop
push
cmp
sub
aad
add
ss
inc
mov
fcompl
inc
insb
stos
add
and
xchg
dec
fs
in
inc
mov
jnp
outsl
out
popa
fcomps
fimuls
cld
fildll
xor
add
add
cmp
mov
mov
test
cmpsl
jmp
hlt
xor
cmp
add
ficoml
mov
cltd
ret
mov
popa
cmpsl
test
jo
sub
cmp
inc
pop
pusha
sub
sahf
cmp
inc
pusha
add
shrl
dec
fsubp
pusha
xchg
arpl
cmp
pop
sbb
jecxz
mov
jns
pusha
insb
outsb
dec
pop
in
pusha
out
jg
inc
ljmp
cmpsb
stc
imul
dec
in
bound
xchg
cs
rol
stc
fcmovbe
lock
xchg
je
sub
les
pusha
sbbl
pushf
pop
enter
lret
inc
fisubl
je
repz
sbb
pushf
pop
cmp
fmull
xor
adcl
lret
push
movsb
dec
and
cmp
fwait
js
xor
pusha
jno
mov
nop
pusha
andb
mov
aam
enter
comiss
mov
movsb
pop
shll
mulb
adc
scas
push
xor
cmp
out
push
cmpsl
popa
test
rcrb
daa
sbb
stc
movsb
mov
push
pusha
stos
cmpsb
aam
xchg
sbb
leave
pop
xor
cmp
cwtl
cmp
dec
and
mov
lock
inc
jne
and
jmp
pusha
sub
addr16
andl
arpl
pusha
adc
jge
popf
popf
pusha
adc
xor
icebp
nop
ret
fs
and
sub
xor
shlb
mov
je
sub
dec
out
mov
or
jp
andl
adc
push
mov
xor
and
and
xchg
xor
jp
mull
insb
xchg
repnz
pusha
sti
inc
test
jb
sub
mov
inc
lods
lret
mov
jno
cmpsl
adc
pop
in
rcrb
sbb
adcl
fidivl
int3
xor
loopne
pusha
lock
test
mov
rclb
fucomi
sbb
lock
mov
add
xchg
add
pusha
adc
pop
stos
sub
xor
in
fwait
pop
dec
xchg
sub
test
sub
and
add
cmp
xlat
ja
add
insl
push
cmc
and
pusha
xor
ret
sbb
pusha
daa
mov
int
jne
inc
pop
mov
mov
pusha
jb
nop
sub
imul
loope
pusha
pop
dec
int
in
mov
sarl
stos
les
lea
sub
pusha
push
mull
imul
cmpsb
jg
aaa
iret
lret
adc
xchg
pusha
lea
pop
lods
in
movsl
call
fcomps
pop
enter
mov
ljmp
jl
shl
jge
push
cmp
test
adc
fs
aad
add
ss
sahf
pop
or
jo
inc
jmp
mov
jo
xchg
cmp
adc
lds
aam
loopne
pushf
dec
bound
cld
movl
aas
ret
add
std
sbbb
mov
mov
insl
daa
dec
jbe
push
lcall
xchg
shll
mov
push
stos
xchg
dec
xor
ret
sbb
mov
lret
stos
adcb
movsb
test
fstl
ret
sub
mov
cmc
fdivs
lret
sub
mov
daa
fs
push
jge
xor
jmp
xor
pop
cld
shlb
adc
cmp
or
add
inc
pop
shll
pop
cmpsb
loop
pop
jle
iret
lret
push
cmp
test
sbb
pop
mov
shlb
bound
enter
out
int3
in
sub
dec
cltd
insl
jb
sbbb
popf
xor
or
jl
push
cmp
dec
insb
inc
lock
or
hlt
mov
imul
jae
clc
xor
push
xchg
jns,pt
jo
add
in
and
hlt
pop
xlat
bound
pop
sarb
sub
adc
aas
mov
addr16
lods
xchg
sub
mov
or
aam
and
xor
cmp
push
data16
push
test
call
sub
js
xchg
shll
pop
lahf
shlb
icebp
xor
adc
jno
mov
add
xchg
lcall
and
mov
js
add
mov
ret
in
fnstcw
loope
fwait
sub
xchg
add
fisubrs
fcmove
xchg
or
aas
scas
mov
jg
test
adc
mov
inc
pop
pushf
bsf
or
lahf
and
shrl
loope
icebp
adc
data16
les
jl
push
iret
jns
jecxz
fldcw
enter
subb
add
or
outsb
mov
bound
bound
imul
pusha
je
ja
and
pop
sbb
dec
or
in
out
loop
das
pop
pusha
cmp
xor
and
mov
stos
push
arpl
push
jecxz
cmp
icebp
jmp
jbe
stos
mov
ret
loope
sub
xor
inc
lock
push
jl
adc
mov
push
sbb
ja
enter
test
stc
mov
cld
repnz
cs
loope
inc
movsb
pusha
and
dec
pop
cmp
and
or
xchg
loopne
pusha
es
movsl
hlt
fscale
push
pusha
mov
lea
pusha
into
pop
mov
shll
cmp
xor
sbb
bound
andb
pusha
in
push
pop
push
cmpsb
sub
ljmp
pusha
mov
aaa
adc
inc
dec
lods
fsubrs
cmp
fs
aam
inc
jae
xor
adc
jl
repz
mov
pop
xchg
nop
mov
inc
cwtl
clc
dec
lock
pop
sub
xor
stos
mov
pusha
pop
rcrl
punpckhdq
or
cmc
lods
mov
pusha
rcrb
mov
xor
xchg
shrb
mov
pop
jecxz
mov
dec
pusha
adc
mov
in
and
call
je
inc
push
mov
loopne
push
out
lock
push
pusha
sub
lahf
push
shlb
jmp
sbb
pop
add
fwait
aam
pushf
mov
adc
outsb
push
rcr
xchg
jl
mov
shll
mull
pusha
nop
loopne
int3
dec
movsb
xchg
rol
loopne
pushf
adc
sbb
shrb
fnstsw
or
repz
adc
mov
outsb
sahf
mov
inc
shlb
in
or
push
and
mov
adc
and
pop
pop
loope
hlt
loopne,pt
mov
sbb
cli
or
ret
inc
mov
daa
addr16
pusha
scas
fs
sub
stc
lea
shll
push
cli
sbb
or
adc
mov
push
stos
mov
xchg
pusha
stos
xchg
dec
xchg
fcmove
pop
and
adc
leave
arpl
mov
call
in
ss
cmp
xchg
push
pusha
cs
sbb
mov
shll
call
hlt
xchg
dec
pusha
test
shrl
imul
cmp
arpl
xchg
dec
add
lret
sbb
popf
and
roll
jp
adc
in
int3
jle
push
and
sahf
xlat
pusha
adc
pusha
pop
pop
ljmp
and
xlat
jns
sub
xchg
loop
mov
arpl
xchg
jl
pop
push
inc
cmpsl
lock
ret
shll
push
pusha
xor
pop
pop
jo
jg
cwtl
xor
repnz
xor
cmp
and
cmp
pusha
fbld
mov
pop
mov
xor
repnz
lahf
arpl
pusha
enter
jecxz
rcll
mov
bound
mov
push
pop
insb
sarl
jb
adc
in
popf
cmp
out
push
cmpsb
loope
ja
lods
fs
mov
pop
in
pusha
push
lock
mov
aad
outsb
jecxz
out
lret
adc
xor
adc
std
loop
and
inc
pusha
in
dec
hlt
aad
in
mov
xchg
pusha
aas
fdivrl
sahf
jge
and
mov
loop
lcall
int3
dec
push
mov
ja
test
test
push
pusha
mov
and
arpl
jl
dec
test
mov
pusha
xor
mov
pusha
out
mov
jbe
mov
cli
push
cwtl
pusha
cli
jnp
jl
movsb
adcl
push
pop
pusha
dec
int
jecxz
xchg
call
push
test
imul
xchg
das
cmp
or
jmp
pusha
nop
add
aad
jne
mov
sbb
sbbb
insb
dec
sahf
adc
movsl
dec
andb
xor
stc
dec
jp
das
repz
fldpi
add
mov
popf
aad
mov
cld
dec
jnp
into
shlb
push
leave
dec
jae
or
adc
adc
mov
pusha
sub
adc
push
pusha
aam
shrl
pusha
pop
pop
xor
push
leave
iret
loopne
xchg
pop
aas
push
in
popa
loope
sbb
lret
xor
fwait
pusha
add
dec
and
aaa
dec
pop
or
aad
mov
bndldx
aas
mov
push
adc
insb
push
int
pop
ja
or
xor
popf
mov
call
pop
bound
pusha
outsb
out
clc
lret
sub
add
fwait
pusha
int
fmuls
pop
insb
ss
and
push
insb
daa
in
cld
lods
mov
iret
icebp
out
xchg
xchg
mov
andb
cmp
adc
shrb
test
scas
jl
leave
dec
lock
outsb
mov
adcl
loopne
dec
or
enter
mov
nop
adc
bound
sbb
xor
stos
sub
and
jp
sub
test
cmpsl
sub
dec
pusha
jle,pn
movsl
mov
test
and
mov
pusha
rclb
pop
test
dec
sbb
and
push
pusha
loope
mov
mov
dec
adc
mov
ss
pusha
lods
lods
popw
rolb
fsubrs
jp
or
js
lds
xchg
pusha
lret
pop
loopne
pusha
sahf
fbld
inc
pop
mov
mov
and
sbb
test
push
sbb
push
popa
xchg
pusha
in
decl
xor
pop
call
push
and
and
mov
inc
mov
cwtl
xor
jg
jge
sub
test
cmpsl
push
mov
xchg
sbb
jecxz
mov
es
adc
dec
pusha
stos
cmp
push
pop
clc
pop
mov
mov
dec
in
test
leave
pusha
and
test
xor
jmp
sbb
add
mov
mov
subl
dec
cld
fsts
popa
xchg
dec
std
andb
fcompl
rcrl
lds
xorb
push
lcall
and
andl
lret
sahf
jbe
mov
lds
ds
mov
jl
jl
jecxz
repnz
pusha
outsb
aam
inc
lahf
pusha
lea
rcl
sbb
push
mov
je
mov
inc
arpl
jge
mov
xchg
mov
out
pusha
fcompl
lcall
loop
sbb
mov
out
dec
jnp
testb
enter
jne
adc
xchg
xor
imul
mov
je
test
sbb
orl
jmp
mov
fwait
pusha
push
xor
lcall
sub
adc
xor
repz
arpl
pop
sbbb
lods
pop
pop
jl
and
cmp
mov
mov
stos
adc
mov
sub
addr16
xlat
pop
fsub
clc
sahf
adc
out
je
dec
mov
jnp
adc
loope
clc
mov
arpl
fldenv
mov
test
inc
movl
nop
push
jbe
jmp
mov
dec
bound
or
fdivs
adcl
lret
outsb
mov
lret
jo
adc
push
push
js
cmp
fsubs
adc
push
inc
sub
enter
arpl
rcl
popf
orl
ud0
xchg
test
sar
stc
sahf
inc
out
mov
mov
sbbb
cld
iret
and
xchg
cs
mov
pop
add
push
addr16
mov
mov
xchg
mov
xchg
pop
stos
icebp
cmpsl
sbb
rorl
decl
mov
loop
jne
in
int
pusha
jbe
rclb
cmpb
xor
loope
popf
int
andb
mov
cmp
jne
pop
cwtl
push
inc
pop
jmp
aam
and
fmuls
and
ds
mov
mov
xor
loop
xor
pop
fs
mov
popa
lahf
dec
je
pop
mov
xchg
mov
mov
or
mov
add
xchg
imul
sbb
sbb
sbb
sub
push
mov
push
inc
xor
je
shrb
push
mov
inc
xchg
mov
push
adc
out
mov
dec
push
popf
fildll
push
cld
mov
cmp
js
clc
enter
mov
sbb
push
popf
insb
cmp
mov
push
push
xor
jno
xchg
inc
xchg
cmp
mov
inc
adc
icebp
imul
test
pop
cmc
cmpsb
sarl
notl
cmp
ret
inc
je
in
adc
dec
divl
inc
setb
in
repz
and
enter
xchg
or
mov
ret
mov
lods
xchg
and
roll
cltd
movsb
jle
ret
daa
xchg
es
push
cmp
ret
test
ret
mov
into
and
rorl
cld
jbe
pop
push
ret
mov
lock
xchg
je
sbb
imul
push
mov
push
jne
rolb
lods
pop
pushf
inc
sti
enter
push
or
leave
push
mov
pop
inc
ret
adc
or
sub
movsl
jb
jo
sub
push
aad
push
cmp
rolb
mov
or
icebp
add
adc
push
or
mov
adcb
pop
je
cmpsb
inc
scas
sarb
push
out
cwtl
cmp
out
stos
adcb
xchg
lret
jecxz
pop
mov
cld
jo
or
adc
daa
pop
imul
inc
xchg
stos
push
and
ret
push
lea
inc
loopne
push
aaa
dec
ret
mov
pop
je,pn
push
in
xchg
popa
push
lret
xchg
clc
xor
jae
dec
stos
test
and
bound
mov
test
adc
dec
lds
adc
daa
cmpsb
fwait
dec
imul
push
mov
std
adc
xchg
cmp
repnz
inc
jp
inc
push
lahf
mov
dec
mov
inc
rcr
bound
push
push
fisubs
bound
js
push
leave
jp
nop
adc
loopne
xor
jo
bound
mov
push
pop
ret
xchg
cli
scas
jo
decl
adcl
int
je
sbb
pop
xchg
pop
sarl
or
mov
pusha
push
lret
adc
or
nop
fdiv
bound
es
or
mov
inc
movsl
in
mov
lret
sbb
pop
inc
orl
sbbb
or
mov
leave
jo
mov
pop
xchg
and
test
dec
scas
mov
xchg
lock
roll
inc
xor
inc
mov
push
adc
adc
push
lea
aas
movsl
adc
pop
cli
pushf
inc
lods
mov
push
dec
or
lods
jmp
xor
add
pop
notb
mov
push
xor
pop
lret
push
bound
data16
enter
pop
push
je
pusha
inc
sbb
mov
stos
push
loope
add
loop
or
pop
fs
popa
fmul
pop
pop
inc
xchg
jnp
add
push
ficoml
pusha
insb
sbb
imul
inc
call
and
mov
fdivl
push
repz
enter
stos
stos
dec
inc
mov
jbe
sub
mov
cli
adc
jl
scas
mov
stos
ret
pop
pusha
inc
xor
cmc
pusha
inc
scas
aas
pop
imul
nop
sub
xor
repz
in
int
insb
sub
jecxz
xchg
loop
adc
fldenv
fimull
mov
imul
pusha
or
mov
and
mov
loope
dec
inc
es
pusha
shll
aad
jle
pusha
pop
mov
sbb
add
xor
push
pop
push
jecxz
adc
lret
pop
pusha
aam
int
xchg
mov
cmpsl
pusha
mov
cmp
jno
and
mov
out
mov
out
sbb
jbe
pop
mov
mov
cmc
aad
inc
adc
or
insb
and
js
jg
pusha
icebp
cmp
pop
dec
mov
pop
dec
push
xchg
popf
lret
fldenv
xor
mov
adc
mov
mov
sti
cltd
pop
shl
shlb
nop
test
inc
pop
cmpsb
add
pushf
push
jl
ret
aas
movsl
push
ss
and
testb
inc
jl
mov
popa
xor
mov
cmp
add
sti
pusha
les
sub
lahf
arpl
sbb
cmp
jbe,pn
sbb
pop
pop
or
int3
and
scas
pusha
cmp
out
mov
lcall
pusha
sub
roll
push
add
xchg
fcomps
adc
testl
pop
lret
stos
loopne
sbb
imul
pop
bound
pusha
mov
push
mul
movsl
push
lods
pusha
pop
sar
das
cli
rorl
pop
inc
mov
int
addr16
outsl
push
xchg
sbb
adc
nop
sbb
ret
push
leave
pusha
popf
lods
lea
cmp
jns
sub
adcb
insb
addr16
jle
mov
adcb
andb
out
ret
orb
fisubl
adc
mov
aaa
insb
repz
in
int3
gs
outsb
push
adc
cmp
andb
jmp
lret
mov
lds
clc
push
jle
in
out
sub
dec
fstpt
pusha
dec
push
xlat
pusha
aad
ret
roll
mov
test
mov
ret
sub
popf
testb
pusha
push
cmc
jge
dec
xchg
adc
mov
loop
outsb
frstor
pop
stos
pop
js
push
aam
cmpsl
pushf
mov
mov
jl
push
loope
jecxz
cmpsb
cwtl
sub
pusha
int
aad
jbe
dec
pop
lahf
lods
test
sub
mov
stos
sbb
mov
cmp
pusha
je
dec
daa
xchg
adc
sub
scas
inc
pusha
mov
dec
dec
pusha
sub
sub
pusha
movsl
decb
stc
mov
testb
push
fsubs
lds
cmp
addl
push
push
mov
sti
rcll
pop
pusha
and
in
jg
mov
pusha
clc
adc
lods
out
fildl
jns
leave
in
and
pusha
ret
loope
xchg
pusha
fldl
mov
enter
pusha
pop
cmp
cmpb
ret
cmpsb
ret
popl
jge
sbb
pop
in
roll
pusha
and
std
mov
xor
sbb
insl
or
add
pusha
pushf
stos
insb
pop
mov
cmpsb
adc
fdivs
mov
jae
aam
and
dec
pop
pop
daa
lahf
inc
mov
gs
cli
pushaw
xor
shlb
sub
mov
es
addr16
mov
mov
insl
inc
mov
arpl
arpl
lods
xor
dec
sbb
xchg
ds
loopne
stc
ds
insb
mov
and
jmp
sbb
popf
mov
mov
outsb
jne
arpl
rcrl
ffree
lock
dec
sbb
push
into
pop
xchg
adc
cmp
je
dec
sbb
sahf
pusha
daa
lret
cs
sbb
pusha
fiadds
mov
jno
and
pusha
push
stos
sub
sbb
clc
stc
inc
sti
mov
add
sbb
adc
lcall
sub
mov
push
pusha
push
inc
xor
add
lret
dec
out
or
xchg
lods
loopne
call
and
into
sub
cmpsb
lret
jmp
test
test
xchg
push
out
sub
jg
sbb
shll
jbe
mov
pop
or
add
in
or
mov
int
jl
pop
sub
xchg
mov
xchg
gs
jb
cmp
pusha
int3
in
aaa
sub
and
sti
dec
sub
enter
mov
aam
sbb
lock
xchg
and
insb
test
xor
enter
mov
pusha
roll
les
fs
mov
xchg
out
mov
xchg
loop
inc
push
push
and
fmull
sbb
mov
mov
sti
aad
xorl
lcall
and
adc
int
mov
cmp
js
les
arpl
fbld
inc
xchg
mov
push
loope
adc
or
xchg
pusha
shrl
dec
mov
int3
loop
inc
mov
lods
cs
outsb
mov
jo
sbb
arpl
lcall
inc
xchg
inc
lods
sti
push
pusha
aad
jge
nop
adc
mov
sub
in
popl
es
test
nop
shl
sbb
mov
out
test
inc
inc
lea
jg
imull
fsubp
cmpsb
lods
pusha
xchg
in
stos
mov
das
int
hlt
push
adc
jb
rolb
mov
arpl
and
or
or
jg
jmp
pop
bound
push
inc
push
pusha
mov
xor
fdivl
andl
subb
sahf
scas
cmp
jmp
imul
jo
rclb
outsb
stos
popa
out
mov
outsl
ja
imul
and
pusha
repz
add
fbld
pop
adc
inc
add
sbb
and
movsl
loop
inc
mov
insb
sbb
fs
fld
cmp
add
in
paddusb
adc
sbb
in
jo
cmp
sahf
fucom
mov
xor
je
push
mov
negb
sbb
sub
test
clc
jno
les
pusha
hlt
pushf
rorb
xchg
or
sarl
stos
cmp
ret
out
pusha
push
ss
fidivs
daa
pusha
mov
inc
mov
jle
aam
add
and
dec
imul
push
mov
xor
pop
pusha
inc
inc
test
push
xchg
or
bound
rcrb
movsl
jae
cmovns
loop
jno
adc
insb
pusha
sub
fcmovnbe
pusha
mov
dec
ljmp
push
push
ror
pusha
das
sbbl
shlb
movsl
es
sbb
enter
mov
bound
adc
inc
mov
pusha
daa
std
mov
scas
pusha
in
pop
iret
out
dec
sahf
fdivr
pop
out
sbb
pop
imul
sarb
mov
shl
cli
lahf
rcrl
mov
in
insb
mov
pop
mov
mov
fstpt
dec
fs
jne
fdivrl
jmp
pop
xchg
adc
and
adc
loope
repnz
ljmp
cmpsb
mov
cld
adc
lret
adc
iret
sub
je
mov
ret
add
fs
push
scas
cwtl
dec
jp
cmpsl
int
out
lahf
jnp
dec
add
cwtl
loope
fildl
mov
filds
fs
lret
pop
sub
inc
jae
lods
push
sbb
inc
cmp
ds
lahf
push
and
insl
mov
sub
test
aas
add
shll
iret
adc
dec
bound
jg
mov
push
je
int3
xchg
out
xchg
pause
and
dec
push
adc
jne
mov
xchg
insb
pop
shl
orb
push
sbb
adc
mov
pop
pusha
adc
push
pop
les
shlb
pusha
lock
push
cmpb
mov
and
push
mov
pusha
iret
mov
lods
jno
add
jle
xchg
repz
arpl
add
out
pop
pop
arpl
aam
pop
fndisi(8087
sbb
and
fwait
inc
and
pusha
test
imul
aad
inc
bound
pusha
out
lahf
push
inc
out
fsubs
xor
jge
in
cmp
pusha
mov
xchg
dec
ror
dec
stos
addr16
xchg
fsubl
mov
stc
ja
cmpsb
xlat
fdivr
dec
and
rcrb
pop
sub
inc
inc
repnz
pop
push
add
pusha
xchg
sbb
xor
and
mov
cmp
xor
in
scas
cmpl
ret
ljmp
repnz
cmpsl
cmpsb
xor
pusha
hlt
aas
movsl
or
or
pop
mov
bound
cmpsb
imul
cmp
pusha
lds
scas
pop
lea
fisubl
aad
lock
mov
rorl
jmp
pusha
xor
xchg
sbb
jo
cmp
or
dec
push
sub
jl
jns
and
out
and
aad
xchg
and
xchg
push
push
enter
push
lea
fwait
jmp
rcll
popa
test
popf
adc
mov
xor
add
pusha
dec
test
mov
je
sbb
pop
jge
rep
adc
mov
xor
or
pop
mov
je
pusha
cmp
shrb
leave
enter
cmc
ss
sahf
sub
bnd
pusha
add
push
fwait
pop
and
xchg
gs
sbb
jecxz
pusha
in
sahf
stos
movsl
add
or
xor
shlb
sbb
pusha
ret
cmc
into
dec
fidivs
ss
in
add
and
pusha
mov
rolb
stos
mov
test
jns
bound
and
sub
sub
sbb
and
aas
pusha
movsb
imul
pusha
loope
dec
cltd
xchg
mov
adc
pop
mov
dec
pop
gs
hlt
pusha
inc
jnp
add
adc
sarb
aas
jecxz
mov
adc
stc
cli
fwait
adc
mov
repz
scas
jmp
xchg
ret
and
ds
push
or
cmp
std
das
or
jmp
pop
leave
roll
loopne
jg
shlb
cmp
pop
jle
push
outsl
sti
je
stos
push
clc
cmc
out
pushaw
mov
ret
mov
inc
add
loope
test
cld
mov
sahf
add
and
insb
xchg
fs
pop
lret
mov
insb
in
int
leave
jnp
sahf
stc
mov
stos
je
pop
or
jg
jne
lret
pusha
adc
jmp
repz
push
xchg
or
adc
fs
imulb
mov
lods
mov
rclb
mov
and
mov
xchg
pop
cmp
xchg
shrl
push
imul
sbb
and
add
pop
in
jp
and
mov
aam
cmp
jb
pusha
stos
mov
mov
dec
ret
out
fwait
cld
jle
in
mov
inc
repnz
test
fidivrs
and
fnstcw
mov
pop
cmc
mov
dec
or
sbb
cwtl
mov
or
jecxz
xor
sbb
jns
mov
adc
sub
add
repz
leave
and
ljmp
popf
pop
imul
xor
mov
inc
dec
lahf
inc
xchg
fstps
leave
jl
testl
dec
sub
fs
xor
in
jge
cli
mov
jp
call
aas
adc
test
femms
loope
cld
pusha
out
cmpsb
mov
jne
movsb
pusha
add
jbe
mov
ss
push
push
and
cld
jge
testb
pusha
vcvtdq2pd
mov
push
pusha
mov
dec
shll
das
pop
int
loop
fcmovnu
xchg
and
and
fistpll
test
adc
push
push
adc
jb
test
xor
adc
pusha
xchg
fnstsw
adc
push
mov
and
mov
mov
cmc
das
es
sub
xchg
mov
mov
inc
cmp
push
pop
mov
cmp
sbb
leave
jle
push
ficomps
inc
cmpsl
pusha
fsubs
cwtl
cltd
dec
lret
jl
movsb
ficomps
outsl
subb
xorb
jns,pn
pusha
sub
icebp
insb
lret
fcoms
int
sbb
pop
mov
repnz
sbb
movsb
lods
push
mov
bound
pop
int3
fisubrs
xchg
pusha
out
jmp
cltd
xor
das
pushf
xchg
inc
fimull
shlb
jp
test
or
add
ret
pusha
fucomi
xchg
mov
outsb
and
jl
stos
dec
sub
pop
pusha
scas
lods
fstl
ficompl
mov
jl
and
shlb
sbb
mov
testb
ret
lock
jp
lret
mov
fcomps
inc
and
ljmp
mov
lahf
pusha
sub
loope
dec
xor
andl
popf
lods
inc
loopne
push
mov
pusha
cltd
mov
adcb
loopne
mov
out
movsb
mov
popf
pusha
add
loopne
jno
or
xchg
test
or
mov
and
pusha
int3
add
adc
rcl
pusha
push
mov
pushf
xlat
pusha
mov
int3
mov
mov
repnz
mov
pusha
push
outsl
sbb
adc
jmp
cmp
popa
dec
rorb
pusha
popf
insb
adc
push
push
ret
gs
popa
pop
mov
shl
dec
mov
outsl
jl
out
jl
popa
stos
mov
jl,pn
call
xchg
pop
mov
sbb
mov
mov
fists
pusha
xchg
popaw
mov
jl
mov
pop
pop
xchg
add
andl
mov
fs
xchg
xchg
loope
daa
bound
adc
mov
fstpl
dec
mov
cld
pop
pusha
dec
insb
in
lods
cmp
gs
mov
inc
es
dec
rcll
cltd
xor
gs
imull
out
in
jl
xor
cmp
sar
sbb
sub
push
cmp
cld
push
fs
repz
pop
pop
inc
enter
xchg
mov
dec
imul
xchg
insl
xchg
pop
pop
pop
pop
xor
pusha
cmpsl
lret
sbb
pop
test
cmp
mov
xchg
shlb
mov
add
out
iret
and
pop
cmp
sub
adc
shrl
jmp
pusha
leave
dec
or
add
cmp
cmp
sbb
jae
insl
cmpsl
and
fldenv
pop
add
dec
cmpsb
pop
bound
fidivl
shlb
ljmp
bound
mov
pusha
fisttpll
mov
pop
outsl
xor
xor
sti
stos
inc
pusha
icebp
or
xchg
js
fsubp
loope
scas
jl
xor
arpl
aam
sahf
rcrb
je
mov
push
xor
rcrl
cmp
stc
push
fwait
pop
ss
repnz
pusha
dec
or
push
xchg
outsb
push
pusha
pop
dec
sahf
xor
lea
lcall
scas
psubusb
fcoml
pop
push
pop
loope
shr
lret
clc
inc
lds
int
ja
mov
sub
adc
pop
popf
xor
in
dec
xor
ljmp
sbb
pop
push
cmp
jecxz
cmp
loop
out
pusha
repz
mov
jns
mov
fwait
and
push
xor
pusha
jle
daa
ljmp
loop
sbb
jb
insb
jl
xor
stos
jp
sbb
pop
aaa
adc
daa
push
pusha
pop
pop
jno
out
cmp
scas
adc
mov
jle
mov
cmp
and
pop
xchg
ret
jle
cs
imul
cmp
cli
xor
cmpsb
and
jae
xchg
xchg
rcl
jle
pop
pusha
repnz
ret
pop
mov
loop
jg
push
push
sub
sub
sub
fs
mov
insb
push
sub
jb
popl
dec
xchg
adc
xor
mov
gs
dec
or
ret
push
xchg
nop
or
bound
cld
hlt
jo
and
sbb
push
push
iret
loop
sarl
mov
ja
mov
loop
dec
mov
stc
mov
dec
mov
scas
lcall
adc
mov
cwtl
popf
cmp
aam
aam
dec
fldenv
push
cmpsb
sbb
ret
pop
sarl
loopne
daa
dec
aaa
ljmp
cmpl
jp
mov
jno
push
push
jp
push
sahf
mov
lcall
cmp
cltd
mov
mov
sbb
adc
cmp
gs
sbb
daa
dec
insb
fiadds
popa
jle
add
scas
and
shlb
inc
push
gs
dec
sub
adc
adc
and
pushf
stos
loopne
cld
fiaddl
sub
cmp
ja
mov
pop
mov
pop
inc
rclb
fsubl
out
xor
dec
jecxz
mov
pop
mov
and
loope
add
xorl
ret
insb
outsb
fsubl
jnp
add
push
xchg
ds
ret
cli
inc
ret
push
loopne
push
es
mov
or
mov
pcmpgtd
xlat
fidivrs
ret
shll
xchg
adc
sbb
shlb
sarl
scas
and
adc
es
pushl
sub
cmp
push
rorb
push
or
dec
popa
adc
bound
mov
jnp
dec
nop
mov
call
or
cld
cwtl
call
jae
imulb
xchg
pushf
cmpsb
jp
and
jg
aas
or
lret
fisubl
xor
pusha
aas
fldlg2
adc
and
aam
cmpsl
loope
dec
ficoml
cmp
mov
loope
jecxz
xchg
push
xlat
scas
maxps
pop
pop
ret
ss
mov
mov
push
mov
xor
jbe
sub
push
ljmp
pusha
notl
inc
adc
loope
dec
xchg
and
sub
xlat
int
cwtl
bound
lods
dec
lods
or
arpl
loopne
ficompl
out
adc
jo
pop
not
xor
ss
pop
push
rorb
mov
mov
mov
pusha
pop
fwait
idivl
addl
pusha
sbbl
jg
pop
xchg
add
dec
iret
inc
sub
adc
adc
gs
cmp
jp
jb
insl
push
pop
and
sub
loop
xorl
outsb
cmp
push
pop
jae
xchg
scas
decl
jle
out
data16
popf
in
push
inc
lock
mov
icebp
repnz
lret
insb
mov
xchg
push
lds
pusha
push
push
aaa
pusha
push
sbb
std
out
inc
lea
or
add
inc
and
dec
out
pusha
ret
cld
cmpsl
inc
lret
pop
pusha
sbb
scas
pop
leave
jge
jl
sub
pop
push
push
loop
hlt
pusha
mov
loopne
xchg
pusha
sub
jnp
inc
add
pushf
pusha
scas
stos
bswap
out
mov
pusha
cmp
pop
cmp
pusha
popaw
push
fisubrs
arpl
test
ja
sub
mov
xchg
ficoms
pusha
lahf
cmp
jae
lods
jb
scas
jo
mov
pusha
lcall
and
mov
pusha
sbb
movsb
jmp
adc
inc
sbb
aas
stos
sub
pusha
push
xlat
mov
adc
inc
sbb
inc
cli
sub
insb
mov
and
inc
int
mov
push
ret
xchg
xor
xchg
cmc
cmpsb
pusha
dec
sbb
daa
pusha
idiv
sub
inc
arpl
xor
stos
mov
cmpsl
pushf
loop
or
fiaddl
pusha
in
loope
push
lcall
lea
push
adc
or
inc
pop
gs
xchg
pusha
adc
and
inc
and
pusha
call
sbb
shlb
jmp
arpl
scas
outsl
pusha
int3
in
sub
adc
and
mov
loope
add
sub
adc
lea
jo
fwait
jo
mov
dec
jl
push
rcrb
add
mov
into
jle
mov
loopne
and
ret
pusha
lret
stos
or
fs
inc
and
mov
xchg
fisubl
sub
mov
push
jl
jmp
dec
pop
mov
int3
jl
push
sti
xor
xchg
aad
stos
dec
pop
nop
mov
lcall
pusha
int
ret
adc
insl
sbb
xchg
inc
jg
scas
cmpsb
loopne
in
pop
pop
sub
call
es
xchg
incl
rorl
mov
push
pusha
test
jae
imul
lds
pop
daa
out
mov
xor
lahf
inc
outsb
push
sahf
mov
scas
dec
pop
mov
invd
cli
or
mov
in
sbb
add
std
popa
push
in
xchg
sahf
loop
mov
cmpsb
pusha
push
add
je
mov
and
movsl
push
xchg
xchg
pusha
gs
iret
test
adc
pop
lea
mov
test
mov
inc
mov
aaa
pop
jl
in
int3
andb
mov
push
cmp
or
adc
pop
icebp
sbb
jge
mov
in
mov
rolb
add
pusha
or
inc
fstpt
sub
push
or
lcall
or
push
test
xor
daa
lods
mov
mov
fldenv
or
mov
popf
loope
scas
into
pusha
xor
insb
out
fcoms
pusha
jg
lods
lea
out
pusha
insl
adc
mov
mov
andb
inc
dec
ret
bound
ss
xchg
and
push
push
cmpsb
mov
jns
pusha
fldpi
cmc
mov
lods
repnz
inc
pop
jno
clc
rcr
pop
lcall
insb
xor
cmpsb
ret
xor
in
mov
int3
repz
insb
incl
push
cmc
mov
and
pusha
mov
insb
cmpsl
xchg
pusha
daa
fnstsw
je
cmp
sbb
push
sub
inc
loop
mov
inc
stc
enter
pusha
adcb
pop
pop
es
mov
xlat
out
push
dec
cmp
loop
subl
inc
jo
lods
and
cmp
adc
mov
cmpsb
pusha
jns
mov
dec
jmp
test
pop
pop
and
or
stos
imul
fucomi
sbb
and
jmp
add
inc
jns
inc
sbbb
ficompl
loopne
xchg
scas
pop
leave
pop
inc
out
into
ss
pusha
pop
shl
and
sub
sti
pop
cmpsl
xchg
repz
pop
cwtl
lea
in
imull
inc
mov
sbb
fstl
popa
mov
cmp
mov
xchg
mov
and
aad
inc
sub
pusha
jns
dec
xor
push
repz
in
popf
mov
je
arpl
scas
fdivr
pusha
xchg
adc
pusha
int
scas
pop
jmp
mov
xchg
add
stos
or
fs
add
sbb
aam
pusha
push
repz
mov
lea
fstps
stos
ss
fcmove
pop
pusha
adc
popf
mov
and
mov
stc
movl
xchg
lds
sub
loop
ss
subl
xor
sbb
mov
scas
lods
clc
pusha
lds
sbb
cmp
sbb
jo
adc
stos
xlat
addr16
pop
add
stc
dec
ja
mov
cmpsl
pusha
mov
fisubrl
pusha
shlb
sbb
es
fstpt
dec
push
fwait
addb
mov
mov
mov
rcr
fildl
and
jmp
mov
inc
insb
sub
or
out
popa
sbbl
jmp
pusha
push
fwait
and
daa
pusha
inc
xor
ljmp
cwtl
imul
data16
mov
xchg
push
push
mov
aam
mov
adcb
jge
repnz
cltd
pusha
push
pushf
mov
mov
call
mov
adc
mov
mov
rcrb
push
mov
ret
pop
sti
stos
sbb
and
arpl
push
pusha
hlt
xchg
pop
test
dec
stc
fdivr
outsb
lods
sbb
mov
or
xchg
and
xchg
pusha
je
fs
add
cmc
inc
in
repz
cld
rcpps
int3
xor
jmp
mov
aas
outsl
pop
inc
out
adc
repz
icebp
or
pop
sti
outsb
mov
ja
mov
lcall
push
push
insl
push
lret
sahf
insb
lret
jecxz
out
or
aas
cmp
mov
jmp
inc
dec
mov
lcall
pop
xchg
xor
pop
dec
cwtl
cli
cmp
sbb
push
loope
fsubs
pusha
adc
pushf
add
dec
jno
shrb
pusha
push
pop
stos
inc
outsb
pop
inc
jge
mov
add
fmuls
adc
je
iret
sub
lods
fisubs
lea
xorb
cli
cmpsb
xchg
xlat
sbb
repz
outsl
loop
cld
adcb
mov
loope
pusha
add
shll
adcb
pusha
pop
fstpt
mov
xor
arpl
adc
pop
loopne
dec
ja
mov
cli
mov
push
jne
adcl
and
sub
cltd
mov
and
aad
pop
inc
loope
mov
rolb
mov
dec
pop
sbb
cmp
sub
mov
call
adc
cmp
outsb
clc
divl
nop
pusha
int3
sub
sar
test
xchg
addr16
xchg
inc
or
inc
sub
stos
mov
xor
sbb
sbb
pop
push
repz
pusha
divb
inc
add
cs
jp
enter
inc
push
xor
sbb
in
js
dec
inc
test
sub
fdivrs
dec
leave
clc
pusha
inc
lahf
fsubrp
out
xchg
cmp
push
sub
mov
loop
xchg
je
nopl
loopne
shll
jecxz
pushf
mov
stc
push
pop
adc
add
lods
in
dec
mov
fs
insl
dec
mov
fs
mov
cmpsl
inc
jecxz
mov
xchg
test
clc
sub
clc
lds
pusha
loop
call
fisttpl
pop
or
pop
push
fimuls
pop
mov
pusha
popa
out
scas
popf
movsb
dec
stos
inc
pusha
jo
push
sbbb
mov
xor
nop
adc
sub
jns
sbb
mov
pusha
sub
lret
pop
popl
ss
mov
dec
dec
xchg
cmp
iret
test
cmp
dec
out
sub
mov
movsl
xchg
jg
mov
jae
cmpl
sahf
aad
pop
lods
repz
out
cmp
pop
pop
cmp
popa
adc
and
push
xchg
aam
out
popa
cmpsl
in
int
jmp
in
test
dec
mov
pusha
call
bound
cmc
sub
insb
jle
xchg
mov
add
out
iret
mov
mov
mov
mov
mov
and
fyl2x
rcrl
fsub
xorl
pop
ret
ljmp
pop
test
pusha
aam
mov
xlat
jbe
pushf
int
pop
and
repz
js
jge
mov
pusha
shll
divl
xchg
in
leave
fldenv
repz
jae,pn
arpl
jl
inc
ror
cwtl
mov
dec
fstpt
fisubrl
cmp
inc
scas
in
jl
in
jge
and
bound
pusha
rcll
in
fwait
push
mov
mov
add
inc
pop
dec
mov
jo
mov
and
pusha
insb
fists
loopne
push
lea
sub
and
shl
and
dec
pusha
js
sub
add
pusha
out
mov
lods
movsl
jo
lcall
aam
call
ss
and
mov
add
ljmp
inc
and
inc
xor
push
and
cmpsl
xchg
pop
pop
lret
ret
nop
jle,pt
fs
cmp
lock
xchg
loopne
test
nop
cmpb
mov
jmp
pop
movsb
jo
stos
loope
fst
xchg
scas
pusha
pop
sahf
insl
aaa
ja
xor
adc
iret
add
adc
add
fwait
mov
jb
jmp
sahf
roll
pusha
mov
jl
xlat
add
sub
mov
jns
mov
nop
inc
dec
insb
out
mov
pop
add
dec
inc
movsb
or
sbb
in
sbb
ror
in
xor
jns
pusha
ss
add
aas
xchg
add
aam
inc
pusha
xor
cmp
fmull
dec
cs
imul
roll
pusha
jbe
push
add
or
rol
pop
popa
sub
pusha
orl
mov
push
pusha
je
loop
mov
jb
and
sti
sbb
pusha
int
inc
rorl
inc
xchg
in
xchg
shll
sbbl
stc
mov
and
xchg
dec
in
cmp
hlt
bound
jo
push
adc
rcl
lcall
imul
dec
loope
inc
in
mov
cmp
bound
adc
aaa
jbe
jl
pusha
insl
aam
pop
aas
xchg
test
lahf
inc
imul
pusha
mov
movsb
mov
pusha
stos
pop
and
insb
fimuls
adc
sub
mov
fbld
popf
lods
add
shlb
stc
insb
insl
sub
inc
pusha
sbb
in
cmp
xchg
lods
adc
imul
insb
bound
idivb
adc
pushf
mov
xor
stos
mov
fs
and
sbb
call
pusha
fimuls
xchg
pushf
fwait
sub
and
or
fimull
andb
xchg
jo
jl
es
in
mov
andb
fwait
mov
insb
inc
xor
inc
imul
sbb
and
pusha
stc
adc
xor
cmp
data16
punpcklbw
addb
xor
pusha
aaa
sub
aas
pop
mov
ja
pusha
add
in
andl
inc
into
pusha
sub
stc
cwtl
lcall
cmp
push
push
sbb
or
je
iret
adc
pop
daa
push
scas
insb
mov
push
sbb
in
inc
jecxz
and
push
jecxz
pop
popf
mov
xor
and
jge
arpl
mov
fadds
cmp
and
mov
mull
jmp
add
push
cs
orl
pusha
out
pop
cwtl
mov
gs
loopne
adc
jmp
out
and
cmpsb
arpl
cltd
pop
and
mov
dec
fistps
add
lret
iret
adc
and
mull
test
push
push
xor
or
jbe
jbe
pusha
rcrl
das
jae
nop
pusha
and
aas
out
add
fucomi
in
xor
pusha
fs
jge
pop
sub
or
daa
loope
addr16
insb
pusha
lea
push
add
fs
pop
jge
jmp
std
incb
subl
lahf
sti
add
add
jne
xchg
shll
or
xchg
daa
jge
sbb
cli
lods
je
xor
movl
ljmp
dec
jl
dec
outsb
hlt
mov
popa
lock
inc
push
lcall
bound
or
inc
clc
call
das
xchg
push
pusha
mov
iret
insb
xor
pop
cs
in
xchg
push
pop
mov
xor
jl
lods
and
pop
sub
insb
pop
mov
pusha
xlat
sbb
jbe
das
push
int
sub
xchg
pusha
daa
adc
mov
arpl
jp
xorl
push
call
xchg
inc
ret
std
cs
adc
shl
insb
fnstsw
xchg
pusha
inc
push
in
lcall
pop
ds
pop
mov
roll
xchg
or
jecxz
jle
insb
sub
arpl
mov
or
in
nop
and
pusha
test
mov
xchg
dec
mov
adc
cltd
jmp
cmp
add
mov
pusha
add
or
sub
aaa
js
notl
ds
inc
pusha
lds
push
pusha
inc
popa
cld
add
mov
out
divl
daa
and
aas
sbb
sub
jae
in
arpl
adc
add
push
xlat
sarl
mov
sahf
cmp
cltd
jmp
clc
arpl
dec
dec
cmp
push
jg
mov
nop
mov
lahf
lods
popf
pusha
cmp
xchg
push
addr16
xchg
aam
jne
fs
inc
and
arpl
adc
pusha
dec
fidivrl
xor
js
fists
rolb
pop
sub
pop
and
or
xor
mov
mov
bound
sbb
insl
inc
xlat
mov
sbb
data16
or
xchg
je
lods
bound
push
cmp
jl
sti
xor
mov
cmp
xchg
push
inc
addr16
jmp
pop
es
pusha
clc
je
jge
pop
imul
jmp
pusha
shll
jns
adc
pop
mull
add
in
mov
andb
pop
mov
cmpsl
shrl
and
fldenv
jge
mov
jle
lock
pusha
xlat
cmp
mov
mov
mov
insb
repz
lea
adc
fs
jecxz
inc
outsl
pop
push
xchg
mov
cs
test
pusha
lahf
rol
jg
pop
cmp
jbe
pop
pusha
pop
push
cmp
aaa
movsl
pusha
sub
pop
lds
add
push
xor
xorl
jle
mov
pusha
in
mov
mov
jb
inc
rcrl
jp
pop
add
les
outsl
insl
or
cmp
stos
pusha
cli
popl
clc
pop
jl
pusha
mov
xor
aas
shll
pusha
ljmp
lods
dec
cld
stc
sub
pusha
cmp
jp
insb
test
jne
dec
jmp
mov
mov
cltd
ret
lea
and
pop
loop
flds
jae
nop
sahf
dec
ds
pusha
ja
xchg
movswl
test
pusha
data16
loope
inc
xchg
xlat
jb
aam
pusha
mov
xchg
xchg
es
add
push
push
sub
adc
inc
scas
push
sub
mov
sahf
in
fwait
jge
rcrl
roll
push
imul
mov
inc
mov
fldt
mov
incb
or
push
inc
aam
inc
dec
cltd
mov
mov
xor
repz
push
je
xor
and
xlat
aas
ss
loope
lds
addl
push
aas
inc
in
xchg
xchg
jno
inc
fwait
inc
into
adc
sub
ret
rcrl
outsb
loope
mov
pop
dec
inc
push
lcall
scas
ljmp
js
cwtl
mov
jb
call
test
shlb
inc
inc
push
adc
mov
ret
mov
jl
sbb
mov
xchg
cmp
imul
jl
imul
xchg
icebp
cmp
das
mov
or
addr16
jecxz
lock
inc
lret
dec
hlt
imul
mov
arpl
fs
rolb
hlt
pop
loop
add
popa
fldcw
je
add
outsb
andb
and
pop
and
pop
or
data16
nop
pop
pop
rorl
push
lods
or
sbbl
push
mov
and
lcall
adcl
je
mov
mov
push
sbb
fildl
inc
fs
cld
inc
jae
push
and
nop
cs
push
mov
popa
lret
cltd
ret
pop
push
rcrb
pop
xor
sub
xchg
pop
mov
rolb
push
xchg
inc
mov
ss
ret
lret
ds
ljmp
and
loope
stc
jl
mov
inc
ret
push
and
je
out
or
push
lcall
mov
and
inc
and
xchg
mov
cltd
push
or
mov
adc
sub
mov
push
jle
pop
cmp
mov
ret
sbb
js
or
cmp
adcb
popa
rcll
mov
jecxz
in
std
mov
mov
or
aam
dec
aam
insb
push
mov
lods
les
ret
into
xchg
shl
into
loopne
sub
cmp
leave
and
sub
arpl
xchg
pop
pop
and
mov
mov
lret
bound
pop
adc
jbe
insb
xchg
out
clc
inc
sbb
add
loope
in
loop
loopne
std
dec
ret
sbbb
mov
mov
jle
mov
cmpsl
jns
outsl
test
push
push
push
into
test
insl
mov
ret
inc
sub
ss
jle
addr16
pop
ss
popf
cwtl
arpl
movb
scas
and
cmc
adc
jo
js
inc
rcll
sbb
lcall
inc
js
mov
out
adc
mov
dec
inc
bound
push
xor
jo
lret
lods
insl
enter
mov
test
mov
sbb
test
mov
loope
sub
jle
loope
xchg
fdiv
pusha
sbb
xchg
movsl
js
popa
mov
arpl
or
sarl
jb
jo
cmpsl
inc
xor
ljmp
sub
shrl
add
pop
loopne
jb
push
daa
jno
push
aad
add
dec
and
fildl
outsl
add
lods
and
pop
mov
fs
mov
jp
aam
pushf
rorb
and
mov
jne
jb
in
es
cmp
sahf
and
mov
mov
in
fsubl
dec
lock
push
idivb
out
aam
sbb
sbb
ret
push
push
js
mov
arpl
loopne
rolb
jmp
xor
popa
out
sub
push
jns
lret
cmp
sbb
inc
inc
popa
dec
les
ficompl
push
push
add
mov
lods
jp
daa
jl
jo
sub
dec
bound
ret
cwtl
mov
je
lret
pusha
sub
shll
fsubrs
and
shrl
pop
bound
rcrl
inc
add
rcll
sub
mov
clc
xor
jbe
clc
cwtl
out
push
add
movsb
jae
aas
mov
jbe
xchg
sti
or
cs
ud2
add
xchg
sub
scas
lock
push
or
pop
ja
xor
jp
xlat
ss
sub
xor
sub
and
pushf
mov
mov
and
dec
and
sar
test
mov
es
push
rcrl
test
enter
inc
jnp
xor
adc
cmp
lock
mov
inc
dec
test
and
lret
and
pop
test
shll
xor
inc
movsl
aaa
aam
mov
sbb
dec
dec
jae
test
es
inc
push
sbb
xchg
push
push
xor
mov
dec
mov
inc
jne
adcb
inc
sbb
and
push
cmp
cmp
dec
jl
lahf
sbb
sub
or
std
mov
jb
shlb
in
iret
mov
shrb
mov
shrl
in
ss
mov
sub
inc
mov
inc
insl
andl
or
faddl
xchg
sub
ljmp
dec
mov
xor
pusha
add
sarl
dec
in
loopne
sbb
enter
loop
ss
dec
dec
sub
inc
fcmovb
jmp
repz
inc
addr16
ss
dec
imul
inc
bound
out
fwait
xor
cli
dec
sbb
jbe
xor
or
push
roll
and
rol
test
adc
pop
jno
shll
pop
mov
inc
pop
jmp
mov
mov
xchg
pusha
movsb
adc
xchg
cmp
adc
mov
sub
jae
bound
testl
add
cmp
mov
push
icebp
xor
hlt
xor
test
andb
adcl
mov
mov
jb
mov
adc
or
ret
jmp
xchg
jle
adc
clc
push
xchg
ret
mov
inc
lret
lret
clc
adc
das
lods
stos
fidivrs
cld
sub
dec
jb
test
imul
lds
cltd
adc
mov
movl
inc
xor
cmpsl
js
push
jne
jecxz
cmp
cmp
fcomps
xor
inc
sub
pop
dec
loopne
fs
pusha
ja
push
sbb
mov
xchg
and
or
and
push
pop
repnz
pusha
xchg
pop
jns
push
ret
mov
lcall
es
dec
or
xchg
out
cmpsb
daa
push
nop
imulb
mov
pusha
mov
and
loop
jns
sar
cmp
cmp
sti
loopne
std
scas
push
or
mull
insb
fs
push
or
jge
push
icebp
out
mov
das
jle
aam
add
xchg
mov
sbb
xchg
movsb
mov
shl
pusha
lret
jp
inc
jb
scas
and
fdivl
lahf
lods
mov
add
cld
dec
inc
popa
rcr
andb
or
leave
loop
xchg
adc
fbstp
icebp
lea
and
add
pop
xchg
pop
pusha
aas
out
bound
cltd
jge
adc
push
cmc
bound
and
faddl
scas
pushf
jbe
bound
outsb
lret
jns
sub
sub
xor
and
rclb
fs
push
sbb
jl
jae
sbb
cli
or
fsubl
adc
cmpsl
xor
lock
in
pusha
pop
xor
fcoms
adc
pop
mov
push
je
push
inc
mov
inc
dec
imul
xor
adc
adc
jp
or
push
and
fmull
lds
pop
cmp
sub
inc
pop
inc
cli
xor
xchg
push
sbb
les
mov
sbb
jle
movsb
ja
gs
loopne
and
xor
mov
fwait
in
or
mov
xchg
fdivs
mov
test
inc
xor
lds
add
icebp
jle
inc
cmpsl
cmp
jae
or
sbb
jge
out
and
mov
push
stos
mov
add
and
rcrb
movsl
dec
inc
lods
adc
data16
adc
mov
mov
dec
or
out
pop
mov
sti
loope
test
fs
add
and
sbbl
fadd
arpl
aam
aas
adc
pusha
cmp
mov
popa
pusha
xor
xchg
cmp
pusha
aad
imul
or
fidivl
subl
dec
cwtl
repz
mov
rorb
fs
jno
adc
pop
pop
outsb
add
arpl
cmp
int3
adc
fldcw
mov
pusha
jle
and
popf
lea
or
enter
jae
xchg
sub
mov
insb
shrb
jmp
inc
jl
nop
jo
add
pushf
cmp
pause
lret
or
enter
ret
cmp
nop
xchg
pusha
jne
jle
test
add
les
bound
cmp
cltd
or
shrl
mov
push
mov
add
jecxz
cmp
mov
sub
jo
fsubr
pusha
inc
aam
fstpl
rolb
hlt
cmp
pusha
mov
push
pusha
xchg
fcoml
pop
aaa
or
mov
mov
faddl
mov
sub
inc
pop
arpl
pusha
cmp
sub
pusha
mov
das
xor
sub
fs
mov
ljmp
orl
int3
mov
icebp
outsl
mov
pop
ljmp
addl
enter
sbb
in
lret
fistpll
stos
dec
jl
jnp
inc
jb
xchg
insl
pushaw
mov
sbb
jno
adc
pop
stos
insl
pusha
js
lods
lcall
dec
jecxz
sbb
jnp
and
imul
fsub
fsts
lcall
das
and
and
leave
or
dec
aas
out
xor
dec
sub
loopne
jl
pushf
push
xor
mov
push
inc
es
rcrb
mov
mov
fsub
cmpsb
dec
mov
in
add
xlat
data16
out
inc
lcall
pop
pusha
test
sub
pop
aas
scas
stc
push
test
sub
aaa
leave
rcrl
sub
lock
pop
rcll
dec
pop
pusha
push
mov
pop
call
testb
mov
pusha
xchg
dec
xchg
xor
xchg
roll
xchg
push
dec
mov
sbb
pop
lret
iret
add
fiadds
pop
aas
inc
pusha
xchg
scas
cmp
stc
pusha
push
bound
add
out
xor
cmp
jg
xchg
xchg
aaa
pop
lret
adc
sbb
xor
js
mov
xchg
test
sti
pop
outsb
repnz
call
dec
pusha
xor
imul
cmp
jmp
xchg
sub
xchg
mov
fwait
add
mov
incl
xor
pusha
mov
fwait
test
repnz
dec
sbb
inc
adc
fcomps
adc
les
iret
dec
pusha
mov
orb
fnsave
sbb
lock
cmp
dec
pop
mov
pushf
jo
sub
xor
movsl
sbbb
shll
shlb
icebp
and
mov
je
test
push
cmp
xor
xchg
jecxz
imul
sbb
shlb
es
pop
test
pusha
leave
push
dec
push
sbb
cli
pusha
and
aam
jl
bound
mov
in
mov
andl
sub
or
pusha
movsb
sub
jo
icebp
fdivrp
cmp
or
push
inc
mov
bound
repz
mov
stc
pusha
icebp
out
mov
sbb
rclb
pusha
mov
cwtl
ss
pusha
push
addr16
cmp
xor
in
jl
lret
imul
push
cmp
pusha
mov
pop
icebp
pop
in
popa
das
mov
mov
pusha
movsl
insb
jne
rorb
loopne
jo
mov
adc
sub
bound
daa
push
out
cmp
insb
rcrl
sbb
fdivp
mov
inc
sub
sahf
pop
sbb
mov
repz
dec
int
push
pusha
pop
in
or
movsb
hlt
leave
daa
lcall
push
or
sbb
sbb
cld
mov
lahf
daa
cmp
lret
loop
push
push
pusha
fldcw
rorb
mov
add
in
mov
pop
scas
xchg
xor
xor
in
cmp
and
iret
sub
div
cmpsb
push
pop
add
pop
jnp
stos
add
call
push
loope
mov
imul
loop
mov
pop
cmc
xchg
std
popa
lahf
jns
inc
dec
fimuls
cmp
movsl
popa
inc
loop
insl
pusha
inc
aaa
jae
loope
testl
test
pop
dec
repz
lcall
std
pusha
or
cwtl
push
mov
popa
mov
fidivs
mov
push
divb
or
pop
pusha
sbb
jno
leave
lods
repnz
adc
jbe
stos
cmp
mov
pushf
jg
lds
add
jp
mov
sbb
sbb
pusha
aam
mov
pusha
repz
and
shll
fmull
adc
sbb
mov
pusha
stc
test
or
loopne
repz
push
pop
xorl
fisttpl
cmp
mov
aad
nop
fs
sbbl
stc
dec
pusha
ljmp
scas
xchg
int3
lea
jl
mov
mov
add
lds
imul
test
sahf
lret
fisubs
mov
pusha
enter
cmp
xor
pusha
push
je
xchg
push
test
pop
sub
pop
loope
mov
lods
add
cmp
mov
iret
out
adc
fwait
mov
mov
clc
jp
push
cld
arpl
mov
pusha
xor
push
sbb
push
mov
leave
jge
mov
jl
pop
xor
and
rcr
pusha
mov
pop
int
lret
pusha
cli
xchg
lods
add
push
mov
jbe
and
bound
fiaddl
int
clc
pusha
cmpl
mov
xchg
cli
pusha
jecxz
xlat
push
lock
pusha
ss
mov
push
pusha
inc
jns
push
mov
adc
sub
pop
int
push
jle
xorb
add
inc
mov
mov
jmp
orb
cld
pop
dec
pop
push
xchg
scas
pusha
lcall
mov
enter
jbe
lea
mov
loop
jmp
adc
mov
inc
xchg
jno
pusha
dec
fimull
hlt
test
dec
cmpsb
pop
pop
push
frstor
aam
jb
sti
cwtl
mov
cmp
pusha
mov
push
pop
dec
inc
dec
ss
fldcw
mov
in
fdivr
dec
ret
arpl
xor
pusha
adc
add
pusha
xlat
sahf
mov
pushf
outsl
mov
loop
std
push
xchg
pop
jl
xchg
xor
sub
mov
jb
add
pusha
push
inc
popf
out
outsb
push
jmp
adc
mov
sbb
arpl
out
imul
mov
int3
cli
mov
mov
pop
or
fisubs
inc
sahf
repnz
inc
leave
fxch
ss
pop
loopne
sti
ret
scas
sub
test
jp
shrl
insl
jle
pusha
xchg
mov
xor
sbb
xchg
pop
cwtl
pusha
enter
or
outsl
inc
mov
push
jge
jb
mov
xchg
stos
push
xor
push
jns
dec
outsb
pop
in
arpl
jp
jl
jmp
imul
add
dec
adc
and
ja
mov
inc
mov
ret
movsb
mov
sub
jne
dec
insb
ret
nop
ss
inc
jle
add
ljmp
ss
mov
cmp
imul
sub
je
orb
add
xchg
dec
bound
shrl
andl
lret
xor
pusha
pop
outsl
inc
and
jne
ds
inc
xchg
and
dec
adc
sub
push
cs
les
out
std
push
shlb
jo
jle
clc
rcll
mov
roll
mov
jle
lea
mov
test
lock
and
lcall
cld
jns
test
movsb
stc
data16
dec
loop
aad
sbb
ljmp
xlat
stc
movsb
mov
imul
xchg
push
shrb
xchg
xor
sahf
pop
add
pushf
inc
in
pop
xor
pop
je
outsb
push
shlb
xchg
push
and
jg
xchg
dec
cmp
sbb
jnp
ret
jecxz
or
add
xchg
mov
pop
lea
xor
into
mulb
js
ret
inc
jmp
shrl
ljmp
dec
stos
or
dec
push
repz
and
sar
fnsave
pop
hlt
mov
or
push
xchg
pop
cmp
and
inc
inc
sbb
mov
pop
ja
and
test
cmp
jl
cmp
adc
enter
rcrl
and
imul
ja
sub
push
push
cld
mov
or
pop
and
test
iret
hlt
xor
aaa
sub
jecxz
insb
push
mov
xor
outsl
lods
jno
das
dec
fistpl
jmp
mov
and
mov
mov
mov
rclb
pop
not
sub
dec
push
mov
add
sbb
mov
xor
scas
inc
inc
loopne
mov
dec
pop
push
push
testl
dec
dec
and
loope
add
shlb
mov
add
xor
fmul
ss
xchg
jmp
pusha
shll
outsb
push
or
cmp
adc
sub
pop
push
aas
sub
mov
mov
ret
xchg
int
xchg
dec
mov
dec
sbb
test
xchg
sahf
loopne
sti
xchg
pusha
xchg
jnp
xor
add
sahf
enter
jno
mov
pusha
mov
sbb
pop
pop
inc
jb
aaa
bound
sbb
test
aad
repnz
mov
push
arpl
xchg
outsl
andl
pop
je
jbe
add
push
mov
mov
add
sub
addr16
push
jp
cmp
loopne
jb
bound
fistps
lcall
dec
xor
mov
xchg
addr16
loopne
cmp
pop
loope
call
cwtl
stos
mov
inc
dec
loope
jae
addr16
add
stos
nop
adc
movsb
cmpsl
mov
inc
push
inc
test
icebp
movb
std
ret
sub
hlt
pop
shll
outsb
icebp
jg
sub
movsl
ljmp
pusha
bound
adc
inc
inc
cmc
jmp
or
push
mov
push
push
xlat
and
push
dec
inc
scas
xchg
mov
lcall
fs
cmpsb
pop
ret
adc
sbb
mov
mov
and
pusha
lods
mov
pop
dec
xlat
push
mov
push
inc
lds
mov
mov
mov
xor
mov
decl
in
jecxz
mov
js
pusha
sub
adc
inc
or
mov
jmp
mov
pusha
push
mov
add
xchg
or
popa
addb
inc
inc
and
dec
pop
cmp
jl
jae
js
mov
inc
sbb
addr16
adc
mov
push
hlt
jmp
pusha
pusha
shr
leave
fsubs
or
mov
call
push
mov
lds
shrl
sub
fs
outsb
loope
adc
repz
lock
and
fs
out
inc
adc
jmp
bound
stc
fs
fnstcw
int3
jecxz
cmp
insb
in
sbb
loop
pop
loop
jne
pusha
inc
cmp
es
pop
adcl
icebp
mov
pusha
mov
incl
out
mov
roll
enter
stc
jo
or
mov
movsb
mov
mov
rcll
call
in
test
fisubl
xchg
js
or
rcrb
lret
pusha
pop
cmp
and
pop
push
aad
test
insb
lret
cltd
xchg
jge
out
cld
fimull
pushf
adcl
fdivp
mov
inc
inc
loop
mov
insb
xor
enter
push
dec
arpl
sahf
jge
inc
cmpl
pop
shrl
pop
dec
insl
push
imul
lahf
call
mov
pop
popf
shr
pop
test
jnp
jns
mov
div
pop
pusha
mov
insl
adc
sub
fcoms
mov
and
cld
push
fs
adc
dec
jl
data16
shlb
dec
idivb
or
ficomps
mov
enter
adc
je
mov
add
xchg
inc
sub
out
pusha
mov
mov
pop
cmpsb
push
nop
lcall
fmull
pusha
mov
incl
pusha
inc
das
rolb
insb
aam
and
pop
mov
sbb
xchg
adc
pop
leave
push
pusha
xchg
jne
or
mov
andl
jmp
shll
jp
jo
push
scas
sub
fiadds
mov
mov
movsl
fcoms
ja
pusha
mov
fs
push
mov
xchg
jb
mull
orl
fstps
pusha
jp
push
addr16
stos
shl
dec
std
ret
lock
sbb
jmp
sbb
cmp
push
js
popa
mov
xchg
pusha
lret
and
cltd
jp
xchg
xchg
out
mov
je
add
dec
bound
push
push
aam
lahf
lret
adc
dec
int
ret
jg
std
lret
cmp
pusha
mov
incb
pusha
cwtl
aad
dec
or
nop
stos
pop
push
inc
pusha
ret
rcr
lea
in
mov
leave
arpl
pop
inc
xlat
out
xchg
fadds
sub
pusha
mov
sbb
leave
pop
punpckhbw
dec
jo
arpl
mov
jbe
andl
mov
movsb
mov
adc
mov
ds
out
mov
pusha
mov
adc
push
test
bound
in
cmpsl
xchg
jmp
inc
jl
les
add
repnz
pop
popf
jecxz
mov
jns
movsb
popa
cmc
addl
sub
dec
mov
jb
xchg
xlat
pop
in
mov
pusha
cs
shl
fs
cmc
nopl
outsl
push
inc
jp
shl
ret
jmp
dec
xchg
add
jnp
cwtl
rcl
xchg
pop
mov
jecxz
arpl
xchg
mov
inc
out
or
inc
cmp
pop
push
dec
adc
sub
arpl
xchg
es
inc
dec
aas
inc
pop
lods
out
xchg
mov
int
and
dec
pushw
movsb
arpl
mov
inc
cli
insb
ljmp
psrad
cld
sbb
in
bound
dec
int3
icebp
fwait
mov
pusha
outsb
les
out
jge
mov
or
push
mov
addb
fcompl
ret
mov
or
aaa
call
pusha
lret
jle
xor
pop
test
or
or
popl
add
pop
daa
andl
pusha
aaa
in
xor
jne
or
add
das
pusha
ficomps
ret
cmp
repnz
int3
dec
stc
push
sub
inc
nop
ds
push
arpl
repnz
xor
xor
and
lret
pusha
out
xchg
dec
push
mulb
xor
cli
pop
cmpsl
dec
inc
push
lcall
leave
and
cmc
bound
dec
scas
negb
jecxz
and
mov
inc
mov
pusha
sbb
fcmovbe
lea
push
or
ja
push
movsl
arpl
pusha
repnz
push
xchg
jecxz
xchg
test
lods
push
je
add
adc
out
mov
ret
insb
in
xchg
aam
popa
loop
mov
repnz
push
fs
std
xor
sbb
fstl
outsb
add
stos
and
pusha
push
orb
out
fists
jl
sbb
and
imul
repz
push
xchg
andb
loopne
pop
pop
push
cltd
cmp
mov
sbb
pusha
cmc
jmp
out
pushf
bswap
dec
pusha
inc
scas
add
and
int3
pusha
loopne
enter
aad
sbbl
sbb
mov
mov
xchg
pop
pusha
imul
add
insl
in
int
outsb
inc
cmp
test
cld
lret
pop
sbbl
loopne
jo
divl
lods
or
stos
mov
jae
jne
ret
pushl
hlt
aam
pushf
subb
imul
sub
pop
aas
test
stos
mov
insb
arpl
mov
or
stc
mov
fwait
push
xor
bound
fsubs
scas
pusha
fistpl
cli
shlb
cmp
data16
pop
mov
lcall
jns
test
bound
cmp
int3
out
mov
mov
cs
jle
inc
pop
addb
pop
movsb
inc
out
in
fsubrl
pusha
cld
xchg
pusha
nop
sub
jnp
adc
lcall
pusha
shll
mov
fsubs
add
inc
shlb
out
pop
mov
push
mov
dec
mov
out
jecxz
test
xchg
pusha
or
mov
cwtl
mov
lock
pop
mov
cwtl
loop
xchg
mov
cmc
ret
andb
sbb
add
jae
add
pop
mov
mov
xor
imul
mov
arpl
add
insb
dec
dec
push
icebp
adc
je
bound
fnstenv
push
test
pop
mov
in
loopne
mov
inc
and
test
insb
rclb
dec
mov
sti
pop
iret
sub
imulb
mov
pop
mov
pusha
sahf
push
sub
adc
test
pop
in
lea
and
mov
push
mov
iret
push
call
test
mov
das
mov
cmp
mov
cmp
mov
scas
lock
int
mov
fsts
mov
lea
and
pusha
jns
movsl
fstpl
xor
cmp
sbb
orb
sahf
xchg
add
int3
ret
std
jg
adc
mov
fnstenv
sub
dec
mov
pusha
sti
ret
or
sbb
cs
aaa
xor
cli
icebp
add
shlb
push
pop
jnp
xchg
das
arpl
aad
aas
mov
pusha
pushf
mov
cmp
pusha
je
lea
pop
dec
jecxz
aas
icebp
mov
xor
xchg
and
sub
jns
lock
sti
xchg
or
call
and
add
xor
test
adc
pop
inc
out
aaa
sbb
cmp
ljmp
insl
inc
sarl
sub
test
addr16
jo
push
fmull
lahf
jne
xor
arpl
lock
xor
and
aam
sub
imul
testb
data16
cltd
imul
pop
and
loop
ljmp
push
cli
mov
hlt
or
or
pop
ret
rcrb
adc
nop
inc
jnp
mov
jae
adc
add
dec
and
mov
inc
adc
xor
daa
fwait
pop
or
loope
xor
and
mov
mov
and
inc
outsb
arpl
xchg
inc
xchg
cltd
bound
mov
bound
sbb
cmpsw
jne
xchg
sbb
push
sar
adc
popf
or
inc
mov
mov
jl
lcall
xor
xor
movsl
cmc
dec
insb
mov
cmc
mov
mov
adc
and
mov
jp
jl
popa
push
xor
pop
in
shll
pop
arpl
adc
mov
loope
popf
xlat
adc
enter
in
ret
repz
cmp
xlat
lret
inc
popl
pop
or
movsl
mov
scas
xchg
clc
sbb
adc
cmp
sub
and
mov
adc
mov
and
pop
jge
out
mov
inc
enter
xchg
jle
hlt
sti
pusha
es
pop
cs
arpl
push
jo
daa
adc
mov
sbb
popa
jmp
and
out
in
xor
add
imul
inc
or
push
and
mov
push
xor
dec
mov
arpl
bound
popa
idiv
jb
imul
jnp
cmc
daa
adc
jecxz
and
and
sbb
es
mov
mov
lock
push
and
inc
dec
inc
jbe
xlat
push
popa
ss
fs
cmp
sub
aas
sbb
sub
faddl
mov
inc
ss
and
mov
add
sti
mov
sub
lcall
push
jno
mov
lock
jne
bound
fcompl
dec
popf
fs
jg
sub
stos
pusha
cmpsb
or
xchg
sbb
add
inc
test
cmp
pop
mov
fucom
xor
push
addr16
in
bound
mov
xor
fwait
daa
mov
insb
fstl
push
xchg
clc
mov
imul
pop
pusha
inc
rolb
xchg
mov
bound
push
pusha
mov
jno
fbld
xchg
add
jae
cmp
out
push
aad
test
jecxz
leave
mov
sbbl
add
fsubr
cwtl
push
and
xor
test
sbb
xchg
clc
insb
mov
neg
jg
and
lods
std
jl
test
sbb
mov
inc
int3
insb
insl
movsb
mov
cmpsl
and
mov
xchg
subb
pop
inc
pusha
enter
inc
testb
lcall
pushf
cmp
jne
cmp
push
shr
pop
push
xor
sub
pop
test
arpl
loop
sub
adc
fistpl
loopne
das
push
scas
jecxz
sbb
ja
mov
mov
imul
dec
mov
sarb
xor
mov
ds
popf
inc
inc
mov
enter
dec
enter
push
xchg
dec
ljmp
push
pop
dec
pusha
ljmp
fidivrs
mov
pusha
sti
out
cltd
mov
jbe
int
pop
shll
and
ss
mov
lea
xchg
cmpl
leave
sub
sub
dec
in
pusha
icebp
ss
jp
mov
pop
mov
rcrb
xchg
in
mov
cmpsb
add
xchg
sbb
out
push
jecxz
and
stos
pusha
lret
inc
sub
pusha
aad
cwtl
popa
push
dec
mov
addr16
addb
sti
or
shlb
jae
or
xchg
fdivs
sbbl
xchg
push
mov
add
test
jb
ss
ds
stos
pusha
inc
fistpll
xchg
pop
jne
xorl
add
popa
pop
jmp
call
test
add
fildl
mov
and
loop
std
add
pusha
mov
add
xor
pusha
ljmp
inc
dec
push
lods
dec
fdivl
add
into
pop
sahf
bound
jl
in
sbb
add
pop
inc
xchg
jo
pusha
int
pop
pop
lea
push
movsb
and
dec
addl
and
fimull
and
push
bound
popf
and
sbb
xchg
mov
arpl
push
or
jl
in
and
lret
pusha
outsb
clc
fwait
sbb
sahf
pusha
out
mov
cmp
stc
mov
shr
cld
mov
cmp
adc
sub
fucomi
lret
dec
out
dec
stos
sbb
add
arpl
loopne
scas
jb
pusha
fnstcw
xchg
jg
stc
adc
sbb
cwtl
arpl
xchg
bound
pusha
shrl
out
out
jns
pusha
ja
xchg
nop
inc
xor
pusha
cltd
and
cmp
dec
imul
mov
es
pop
push
les
xchg
sbb
cltd
test
jecxz
jge
pusha
pop
cmp
jle
sbb
leave
es
push
aad
push
push
sbb
sbb
int3
fs
arpl
and
mov
insb
adc
mov
test
inc
lcall
inc
cmp
mov
adc
bound
dec
out
push
xchg
cmp
cmc
xchg
insl
test
stc
jnp
pop
call
inc
cltd
mov
mov
jl
repz
dec
xchg
inc
cmp
pusha
xor
addl
jmp
sbb
je
popa
sbb
ss
enter
insl
xchg
fnsave
nop
nop
shrb
ret
mov
push
cmp
jecxz
fwait
sbb
lods
daa
pusha
inc
shrb
scas
push
movsl
inc
pusha
sub
mov
insb
repz
cmpsb
adc
movsl
call
push
dec
dec
xor
jg
mov
pusha
inc
push
ret
and
popa
jecxz
sbb
push
out
mov
cmpsl
shl
cmpsb
fwait
rcrb
daa
adc
dec
mov
mov
sub
loope
inc
pusha
ja
and
les
jo
je
repnz
arpl
lret
pusha
test
ret
pop
adc
cmpsl
aaa
xor
test
add
mov
cmpsl
sbb
out
int
cli
or
sub
dec
and
sbb
jmp
shl
pop
sub
aaa
stos
sub
pop
inc
cmpsl
nop
sbb
dec
sahf
test
pushf
out
cli
jmp
cld
sbb
inc
fwait
js
sahf
inc
add
mov
sbbb
ret
xchg
negl
aaa
ret
lret
or
std
popa
xchg
inc
scas
inc
repnz
fcmovbe
leave
lds
xor
mov
jnp
adcl
in
loope
out
push
repz
push
cmpsb
or
mov
rorb
ud1
add
fildll
pop
push
mov
push
cltd
inc
pop
fs
jmp
mov
fstpl
cmpb
outsl
xor
in
rorl
mov
sub
es
mov
rorl
xchg
ficomps
sahf
fimuls
push
les
ret
cld
leave
inc
jne
xor
shrb
xchg
in
icebp
sub
sahf
shrl
ret
xor
or
push
adc
dec
adc
or
loope
shll
int3
xchg
inc
pop
or
nop
adc
dec
lcall
pop
cmpsb
lahf
xor
rcrl
pop
sbb
bound
dec
arpl
and
rcrl
hlt
push
shl
pop
ja
ret
cmp
pusha
xchg
outsl
push
push
mov
lcall
inc
outsl
push
std
lods
mov
cli
xchg
fs
lahf
mov
popa
je
sahf
ret
mov
jns
enter
sub
int
fwait
mov
pop
fistl
cmp
pusha
mov
ret
xor
fldcw
push
jge
gs
push
mov
cmp
enter
cwtl
pusha
xchg
mov
sbb
xor
arpl
sub
inc
divb
iret
cwtl
bound
les
sti
sbb
neg
lret
pusha
imul
xor
movsl
fmul
nop
mov
xor
inc
lahf
in
adc
cmp
inc
adc
lret
scas
mov
out
push
fwait
sub
inc
mov
fsubr
iret
pusha
sbbl
clc
mov
into
fdivp
cmpsl
adc
jae
ret
jo
cs
pop
cli
hlt
add
lahf
push
jb
inc
fcoms
into
adc
cmp
sub
popf
pop
outsl
repnz
pop
loopne
sub
mov
adc
adc
inc
dec
pusha
dec
out
dec
xchg
call
lret
mov
mov
jb
cli
jmp
testb
add
pusha
shll
mov
cmp
pop
jl
pop
pop
hlt
test
xchg
pop
fwait
dec
bound
pusha
test
enter
cmpsl
jle
mov
leave
pusha
mov
shlb
cmp
jno
cmp
movsl
bound
movsb
fidivs
fsubs
mov
lahf
loope
push
xlat
mov
out
cwtl
fsub
sahf
sub
lret
mov
pusha
mov
inc
fs
sbb
les
out
mov
pusha
fidivrl
dec
inc
pop
lret
cmpsl
jp
mov
pop
insb
das
adc
sbb
cltd
out
fs
ljmp
pusha
inc
das
or
lret
push
pusha
out
pushf
mov
pusha
hlt
imul
xchg
dec
dec
dec
lods
jl
sbb
mov
mov
enter
rcll
or
jmp
xor
pusha
popf
lods
inc
xchg
insl
nop
sub
mov
adc
repz
pushf
xor
repnz
pop
sbb
dec
repz
sar
je
aas
inc
lret
jno
hlt
jge
fucom
int
repnz
cmp
cwtl
pop
pusha
mov
mov
push
loope
cmpsl
or
add
jg
scas
ret
outsl
or
jl
mov
outsb
dec
push
pop
push
stos
push
pusha
pop
and
aad
xchg
testb
mov
cmp
daa
aam
call
adc
call
push
jo
aas
std
sahf
pop
dec
or
daa
lcall
dec
std
xor
jge
mov
sub
and
ret
and
dec
and
rclb
mov
iret
push
sub
loope
dec
cli
cwtl
cmp
and
cmpsb
ret
cmp
int3
pushf
ret
insb
sub
mul
dec
cmp
popf
add
nop
pop
cmp
mov
or
sbb
loopne
inc
sub
scas
jle
mov
push
mov
adc
or
lret
add
lret
push
cmp
inc
lahf
subb
das
imul
loope
sbbb
ret
bound
xor
cmp
into
jne
repnz
fwait
inc
rolb
mov
push
enter
mov
ss
jp
ss
lret
adc
jle
xchg
xor
push
test
push
imul
std
xchg
dec
dec
or
jp
es
les
adc
sbb
fstpt
sbb
cmp
outsb
cmp
pop
aad
push
call
nop
mov
movsl
pusha
out
fsub
in
jp
jb
adc
inc
cmp
lock
out
arpl
sub
add
sbb
shlb
in
dec
sub
insb
inc
dec
stos
int3
movsl
mov
ficoms
adc
jb
adc
inc
loop
pop
pop
xor
adc
mov
pop
in
jecxz
adc
xchg
and
pop
cld
push
sbb
inc
xchg
and
pop
popa
nop
xorb
add
jle
xchg
data16
lret
movsb
pusha
jecxz
fidivrs
and
dec
pusha
int3
std
cmpsl
and
mov
mov
mov
in
sub
or
loope
mov
into
jb
or
adc
sbb
jl
add
std
in
dec
push
ret
les
pusha
inc
sub
mov
mov
ja
add
push
inc
add
out
adc
cmp
xor
xchg
xchg
mov
aaa
jecxz
shld
xchg
pusha
mov
ss
call
in
jo
add
push
enter
arpl
ficomps
sub
cmp
sbb
pusha
xorl
jecxz
adc
arpl
inc
pusha
xor
pop
inc
cmp
insb
mov
inc
inc
sbb
shrb
gs
pusha
jbe
mov
int3
rclb
pusha
in
mov
repnz
popf
testb
or
inc
stos
lahf
pusha
into
push
ret
scas
cwtl
stos
pusha
dec
xlat
dec
daa
xor
test
js
aam
pusha
pop
dec
xchg
push
mov
stos
xchg
pusha
shlb
in
ficoms
dec
add
popa
pusha
jne
addr16
jl
int3
and
pop
push
sub
push
adc
loope
ret
or
pop
ds
hlt
fs
adc
js
fisubl
es
mov
fsubr
jb
pusha
ffreep
xor
jo
loope
push
adc
movsl
jne
mulb
mov
pushf
int
pusha
dec
push
insl
push
rorb
mov
pop
mov
jo
xor
jecxz
or
insb
xor
inc
sbb
mov
inc
paddsw
test
sbb
shlb
and
addr16
loopne
dec
sbb
xchg
pusha
mov
imul
cwtl
arpl
cmp
push
dec
pop
and
addb
out
or
mov
jne
inc
add
shll
adc
inc
aad
sahf
push
popf
enter
mov
dec
data16
cmc
push
pop
dec
shll
sub
jnp
mov
pop
or
adc
push
jecxz
xchg
or
push
pop
pusha
test
add
cmp
inc
rorb
pusha
push
stos
fdivrs
pusha
and
repz
fistps
fidivs
loop
fnsave
pusha
pop
or
inc
out
adc
jne
cmp
jae
js
andl
je
sbb
ja
nop
test
or
rclb
pushf
subl
add
pop
jg
pusha
mov
sbb
mov
jle
fildll
ret
xorl
sbb
clc
movsb
push
or
dec
repnz
out
pushf
or
loop
cmp
psubb
push
les
rolb
repnz
popf
hlt
pusha
js
addb
scas
adc
mov
filds
test
pop
imul
icebp
push
mov
rolb
xchg
in
sub
mov
push
out
sbb
es
sub
ret
scas
out
pusha
iret
outsl
dec
idivl
jno
pusha
pushl
lret
cmp
jp
fst
inc
inc
jl
fwait
dec
js
sti
push
lock
adc
jns
pushf
andb
mov
dec
jmp
pusha
mov
xor
movsb
mov
adc
mov
pusha
test
inc
or
les
pusha
cmp
lods
pushf
cmp
imul
jl
xchg
insl
jo
cmpsb
jecxz
or
mov
ds
cltd
xchg
mov
jmp
jp
xchg
lcall
inc
lahf
pusha
pop
repz
pushf
pusha
add
sub
pop
push
data16
popa
loope
adc
lret
mov
fwait
in
imul
loopne
pusha
xor
push
mov
add
push
dec
sbb
in
call
ds
ret
shl
imul
outsl
cmpsb
negb
cld
scas
xchg
mov
stos
and
ret
add
sub
insb
pushf
sub
pusha
dec
sbb
push
shlb
out
mov
sub
ret
xor
sbb
cmpsb
hlt
pop
popf
pusha
popa
or
into
xchg
pop
outsb
bound
jmp
jge
mov
add
test
xchg
es
out
aas
loopne
adc
push
les
mov
pusha
test
call
dec
out
xchg
aaa
jo
sar
xor
mov
add
outsl
test
sti
sbb
sub
js
jl
push
bound
mov
addr16
data16
roll
cmp
dec
stc
arpl
sbb
jge
mov
inc
mov
mov
lods
or
pusha
cmpsl
cmpsb
test
pop
cmp
xchg
pop
mov
pop
pop
fnsave
xor
retw
int
sub
lock
in
pusha
lock
fcoml
mov
popf
repz
pusha
lods
xorb
mov
xchg
and
pop
daa
xchg
negb
xorl
out
mov
xor
pmaxub
insl
mov
sahf
hlt
push
je
clc
test
aaa
arpl
cwtl
mov
jmp
pop
xlat
in
pop
pusha
push
outsb
mov
xor
pop
pop
addb
lds
mov
jecxz
shlb
push
sub
cld
arpl
mov
repz
xchg
push
ljmp
aas
out
int
loope
add
scas
xchg
aaa
mov
test
mov
dec
insb
bound
add
es
sub
daa
pusha
cmp
aaa
fidivrl
sub
in
adcl
pop
inc
mov
loopne
jmp
cs
pusha
mov
mov
lock
pusha
pop
lret
bound
pusha
adc
insl
or
push
dec
push
fwait
sbb
leave
add
xchg
xchg
jl
lods
push
imul
loope
adc
pop
adc
pusha
popa
sub
inc
das
jg
test
insl
loop
push
pop
xchg
cwtl
scas
sete
or
loope
popf
subb
pusha
sarb
ja
in
fidivrs
xor
add
cli
pusha
mov
icebp
cmpsl
add
sti
pusha
push
jne
jbe
sub
das
cs
sbb
or
xchg
and
outsl
stc
xor
cld
mov
push
addr16
mov
jno
lods
into
pusha
push
pop
nop
xor
sbb
insb
xchg
test
cltd
cmp
pop
adc
sahf
arpl
cmp
pusha
fdiv
scas
mov
xor
ret
pop
push
popa
inc
aaa
add
nop
stc
fcomps
pop
cli
notb
shll
cwtl
dec
sub
add
pusha
sti
add
cmpsl
jl
out
mov
shlb
fisttpll
pushf
pusha
call
pop
adc
arpl
pusha
push
sub
and
adc
mov
pop
sbb
rol
jp
addl
mov
pop
sti
rcrb
rcrl
push
add
dec
test
lret
push
in
cli
and
adcl
jle
ljmp
xor
jbe
or
rorb
and
cwtl
addl
cmp
or
ss
add
xchg
bound
add
call
and
sub
cmp
xchg
jecxz
inc
mov
and
and
lock
inc
mov
and
cltd
fidivrs
icebp
jl
and
dec
xchg
ret
pop
ja
sub
je
mov
jae
repz
pop
inc
aas
xor
std
in
push
pusha
jno
fimull
mov
sub
adc
inc
pusha
clc
jl
xor
out
lahf
and
lods
test
cwtl
dec
dec
bound
cs
xchg
nop
mov
cmc
or
add
sbb
aam
outsb
in
pop
push
je
fimull
es
sbb
pop
jle
sbb
jbe
jl
jl
mov
lock
pop
arpl
xchg
pusha
push
int3
outsl
xchg
cmc
gs
pusha
int
cmp
dec
movsl
sub
cmp
or
jne
mov
into
jge
mov
rorb
daa
and
push
push
and
sbb
xchg
fldt
sub
imul
jl
in
cmp
jecxz
enter
cld
fimull
sbb
jbe
popa
test
pusha
popf
push
xor
ljmp
mov
jmp
mov
adc
test
add
jo
push
inc
xchg
lea
sbb
mov
test
sbb
cmpsl
pusha
inc
pop
mov
push
ret
jp
pusha
shrl
jle
mov
push
add
pusha
shrd
sub
jecxz
in
fstpt
mov
stos
cwtl
jp
cmp
jmp
pusha
sbb
pop
add
mov
push
push
jl
cmp
xor
test
cmp
inc
adc
ror
outsb
out
pshufw
insl
icebp
xor
aam
mov
js
or
cwtl
sahf
add
xor
mov
dec
shrl
popf
ret
pop
outsb
js
lcall
mov
gs
mov
jl
sbb
push
sarl
xor
xchg
pop
data16
cmp
mov
lahf
int3
fbld
mov
movsb
lret
add
adc
aaa
in
and
repz
mul
dec
pop
lret
add
dec
jle
mov
loop
nop
das
cmp
cmc
jge
cs
dec
push
popf
fdivp
lods
lahf
lock
cmpsl
and
shlb
cmp
iret
into
fdivrp
mov
inc
jmp
lcall
je
pop
cmc
cmp
jae
jb
fs
xchg
or
xor
roll
aad
test
scas
in
lods
cli
jmp
mov
sbb
popa
stc
popa
scas
add
lcall
pop
sahf
test
std
xorb
stc
xor
imul
cmpsl
ret
dec
xchg
and
push
rcll
sbb
icebp
xchg
jp
push
sahf
adc
add
rol
mov
ret
notl
push
mov
je
sarl
cld
jecxz
mov
dec
ret
pop
out
imul
add
ja
dec
inc
lock
je
and
sub
jge
int
cltd
or
jo
arpl
fstl
push
fisttpl
mov
fldcw
xchg
xchg
xchg
dec
ret
sub
dec
ds
sti
gs
test
or
mov
lods
in
mov
xchg
mov
shll
lret
pop
cwtl
mov
data16
cmp
loopne
clc
cmc
or
rolb
add
and
adc
dec
aas
ret
arpl
sbb
out
mov
pop
sub
inc
frstors
mov
xchg
popa
aam
xor
gs
mov
or
insl
fs
add
inc
push
sub
andb
lock
cld
out
push
mov
pusha
mov
push
jecxz
push
andl
and
aas
negb
dec
mov
outsl
cmpb
inc
insb
adc
pop
inc
movsb
jbe
pusha
jg
cmp
mov
jmp
pusha
repz
mov
jns
dec
nop
pusha
aad
xor
jbe
jmp
arpl
push
pusha
xchg
cmp
adc
and
addr16
adc
sti
sub
js
cmc
aam
pop
fcomp
lea
or
mov
sub
add
lret
fldt
xor
or
cmp
aam
shll
cld
dec
inc
dec
mov
sbb
and
arpl
mov
mov
pusha
mov
fisttps
out
xchg
outsl
sub
dec
lcall
pushl
arpl
rcr
pop
es
adc
adc
jae
popa
inc
daa
lret
int3
and
push
mov
add
adc
in
aad
mov
mov
daa
xor
jg
fistpll
or
jge
mov
mov
jnp
sbbb
fildl
mov
jae
hlt
xchg
aad
stos
push
loope
sub
sbb
add
mov
aas
adc
cmp
pop
leave
stos
pop
inc
mov
push
ret
cmpsl
mov
inc
fcomps
mov
lret
inc
arpl
inc
inc
jmp
lret
out
pushaw
xor
mov
and
stos
mov
pusha
push
mov
imul
jo
inc
psubsb
jae
cmp
cmp
sub
sbb
sahf
push
mov
add
adc
jp
mov
movsl
mov
in
or
mov
aaa
pusha
mov
aad
pop
fimull
mov
mov
jae
divl
cltd
xor
roll
leave
xor
aaa
adc
jge
incl
shlb
mov
inc
data16
inc
loop
mov
repz
aaa
mov
lcall
inc
pusha
mov
xchg
fisubs
and
cmp
or
inc
pusha
into
sbbl
mov
or
fs
mov
fs
sbb
and
sbb
jge
pop
cmp
arpl
fldt
pusha
pushf
cld
mov
pusha
aaa
rorl
and
mov
test
bound
lret
mov
ljmp
cmp
pusha
outsb
iret
jne
cli
clc
xchg
inc
jp
fdivrl
or
repz
sbb
pusha
add
dec
enter
out
sub
test
push
mov
push
jo
mov
addr16
add
and
das
ret
pop
aam
jns
mov
cmp
and
push
rcl
xchg
inc
lods
xor
shlb
pop
daa
mull
clc
lret
xlat
sti
scas
fimull
in
iret
enter
xor
pop
stc
sbb
cmp
inc
add
and
mov
ret
aam
mov
cmpsl
nop
dec
in
add
pusha
xchg
sahf
jge
aas
sub
push
je
subl
pop
and
mov
sbb
bound
adc
fwait
adc
push
outsb
sbb
dec
out
and
fnsave
mov
das
insb
hlt
cs
inc
decl
adcl
movsb
and
ljmp
pop
addl
addr16
lcall
add
mov
lea
test
pop
ja
adc
jmp
fwait
inc
shl
pop
pop
orb
bound
sarb
and
dec
push
inc
mov
lret
lahf
stc
adc
insl
sahf
lods
xor
jno
dec
pusha
mov
add
imul
dec
or
sarl
mov
aaa
ret
arpl
fsubrp
fs
push
shrl
lret
lcall
xor
fldt
test
pop
cmc
out
add
pusha
inc
mov
movsb
pusha
fsub
aad
inc
cmp
insb
insl
sub
mov
ret
mov
and
adc
arpl
outsb
sub
es
out
jb
mov
sahf
push
mov
aad
jne
outsb
pusha
test
jmp
je
in
cld
loop
bound
stc
mov
mov
dec
insb
push
lods
cmp
or
inc
cmpsl
in
pop
out
pop
sbbl
mov
pushf
loopne
fists
popa
jle
pop
jne
xchg
pusha
stc
mov
mov
add
es
sbb
mov
fwait
ret
ret
jg
pusha
mov
sti
ja
and
in
pop
sbb
andb
sbb
mov
es
movsb
lea
imul
cs
into
mov
jle
pop
pop
inc
mull
mov
xor
xchg
cwtl
pusha
mov
cwtl
in
test
lret
dec
shl
call
mov
loopne
push
lods
xchg
test
popl
and
clc
jge
dec
lret
pusha
sbb
mov
es
pop
sbb
negl
jmp
filds
pusha
cmp
add
jle
mov
xchg
loop
jae
inc
movsl
lret
test
sub
arpl
jecxz
pusha
lret
out
shll
pusha
or
fcoms
lock
inc
jg
pusha
mov
aam
sub
hlt
imul
frstor
add
in
leave
sbb
add
add
pop
pusha
and
mulb
stc
ja
mov
mov
add
inc
mov
shll
and
mov
call
cltd
xchg
add
lock
cmpsb
shlb
popa
inc
jns
jae
loope
pop
sbb
mov
pusha
lea
jmp
lds
jo
sbb
cmpb
jns
or
lcall
xor
cltd
mov
ret
inc
jl
adc
pusha
jp
mov
mov
push
pushf
mov
rcll
cwtl
adc
and
pop
mov
data16
cli
pop
cmp
cmp
hlt
cmp
cwtl
xchg
sub
push
cmc
arpl
jo
enter
ja
xor
jno
inc
xor
xchg
cmp
xchg
pop
cmpl
adc
leave
xchg
cmp
pusha
cmp
into
or
aam
pusha
clc
mov
pop
mov
xchg
arpl
push
and
and
lret
stos
pusha
test
lock
and
cmc
sbb
sbbb
add
aad
add
data16
aas
in
hlt
mov
js
xchg
testb
mov
pusha
mov
dec
test
sbb
pop
lds
outsb
lods
or
xchg
dec
in
mov
fs
das
int
test
loop
add
pop
adc
push
insb
sti
xlat
outsl
xor
std
or
gs
dec
pop
cld
xchg
movsb
pop
ljmp
add
fists
xor
jl
mulb
adc
cmp
fneni(8087
pusha
add
or
xchg
lahf
pusha
lock
cmpb
jae
ret
inc
mov
popa
shl
popa
add
popf
inc
add
sbb
sub
pop
pop
aas
or
mov
movsl
out
in
in
sub
sub
iret
and
adc
xchg
pusha
xchg
pop
jle
cmp
pusha
aam
inc
div
lahf
in
imul
jno
lds
lock
pusha
scas
cmp
call
pusha
rolb
out
inc
popf
shl
pop
lret
shl
cwtl
call
cmp
sti
and
mov
mov
pusha
inc
lcall
insb
or
add
popa
inc
jle
sub
jmp
adc
or
clc
add
xchg
aas
push
out
mov
clc
inc
sub
lock
jo
push
xlat
sbb
sub
shlb
xchg
sub
or
icebp
test
jge
dec
in
divl
lcall
gs
jl
jp
mov
pusha
cli
sahf
insb
sti
outsb
push
jg
loopne
and
ret
pop
enter
or
xchg
pop
sub
mov
push
sbb
leave
xchg
in
mov
or
fsubs
or
cmc
inc
adc
xchg
xor
sti
loop
add
lret
jp
movsl
nop
addl
jl
into
jo
dec
movsl
add
mov
out
sbb
pushf
inc
out
push
xor
jb
les
bound
cmp
pop
mov
sub
inc
ret
icebp
adc
in
sub
std
jnp
dec
mov
pusha
cld
stos
jne
es
pusha
std
and
add
jl
xchg
fs
loopne
mov
push
or
dec
cmp
and
xlat
jp
xor
out
and
shrb
cs
imul
sub
jnp
add
mov
lcall
arpl
mov
push
clc
mov
insb
insb
jg
jmp
push
hlt
fs
dec
sarb
call
arpl
loopne
in
pusha
push
adc
punpcklbw
outsb
rolb
pusha
cmp
add
mov
fs
push
push
movsl
mov
sub
iret
in
incl
inc
adc
push
sub
add
mov
test
jbe
mov
mov
test
jp
pusha
and
inc
dec
xlat
adc
pusha
add
rorl
or
inc
jmp
je
pop
pop
shrb
fs
loopne
rcr
add
push
add
cmp
pop
mov
xchg
into
sbb
fdivrl
fsubr
in
cmp
into
ja
ret
sbb
xchg
test
or
pop
xchg
cmp
cmp
mov
or
test
push
repz
pop
aam
cmp
loope
and
hlt
lea
push
inc
bound
ror
out
loope
jo
jnp
dec
mov
and
sahf
and
and
push
push
and
push
scas
out
ret
xor
or
sbb
sti
sub
xor
xor
jl
inc
jnp
shlb
and
mov
dec
popf
pop
js
pushf
je
sahf
icebp
movsl
cwtl
jle
lods
lret
pop
push
adc
push
dec
dec
dec
imul
mov
jle
jle
inc
sub
sbb
and
and
mov
inc
aaa
iret
movsl
es
cli
lock
add
jle
jae
fs
sahf
add
mov
mov
mov
mov
cmp
xchg
xchg
xchg
jnp
sahf
leave
shlb
lods
stos
adc
cmc
cmp
daa
xor
xor
sahf
inc
jecxz
add
xchg
sbbb
dec
je
mov
xor
addb
out
pop
ja
jbe
xlat
loopne
add
mull
popa
jo
push
or
in
xchg
xchg
popa
in
mov
mov
cwtl
jg
pop
and
cli
jmp
arpl
mov
inc
adc
lcall
lock
dec
jl
adc
movsb
pusha
inc
add
leave
outsb
jg
push
push
push
jecxz
ss
adc
lds
adc
fdivrl
out
pusha
add
into
lret
call
adc
popa
addb
mov
int3
or
lret
call
shr
push
pusha
ja
jno
pusha
mov
dec
dec
js
divl
outsb
xor
pusha
in
xchg
jg
dec
mov
shll
pop
pop
pop
ds
cmp
add
dec
daa
icebp
shll
stos
std
xchg
push
shll
popa
jnp
sub
pop
or
popf
pop
insl
stc
lahf
mov
rolb
sub
push
mov
xchg
out
adcl
pusha
dec
stc
mov
xlat
cs
popf
dec
lret
stos
mov
xchg
jp
or
pusha
ret
inc
inc
mov
mov
iret
loopne
add
and
lods
adc
dec
bound
inc
pusha
xor
daa
std
cld
dec
leave
pusha
pop
popa
inc
negl
cmpsl
jno
and
pusha
arpl
cs
in
leave
pusha
or
paddd
pop
xchg
pusha
scas
mov
mov
jmp
imul
mov
and
pop
mov
sub
mov
sub
pusha
inc
lock
es
adc
sbb
jnp
inc
icebp
sbb
pushf
mov
cli
sbbb
repz
xchg
cmp
push
inc
xor
mov
enter
dec
mov
daa
ret
pop
shlb
cmp
mov
lods
out
mov
adc
int
and
fs
fstl
inc
pusha
push
sub
icebp
mov
inc
scas
dec
les
insb
mov
bound
fs
std
hlt
jmp
repz
jecxz
ja
cmpsl
inc
arpl
sbb
xchg
aaa
xor
jecxz
pusha
mov
push
mov
jmp
cwtl
and
ret
out
dec
fiaddl
push
fcmovbe
pop
jecxz
jecxz
mov
xchg
push
lret
pop
fs
les
ret
adc
mov
add
mov
lret
pusha
in
rclb
aaa
adc
inc
jg
iret
xchg
in
cmc
jp
lds
fwait
imul
in
mov
mull
mov
mov
pop
sbb
lods
stc
pusha
xorb
jno
or
pusha
bndstx
push
dec
xchg
push
or
jmp
fadds
jno
adc
push
add
popa
cmp
or
loop
fs
mov
jl
mov
inc
in
inc
adc
pusha
lret
cwtl
js
imul
in
std
sbbb
enter
rolb
dec
nop
sub
sbb
mov
lds
and
call
cmc
push
pop
andb
fs
aas
and
cmp
test
cltd
les
lods
dec
leave
sbb
int
xor
lahf
adc
jle
aas
jo
cmc
repz
lret
repnz
cs
outsl
dec
push
pop
popw
jecxz
shlb
pop
insl
lcall
imul
andb
xor
xchg
mov
add
xor
mov
je
lcall
or
jae
ja
fnsave
pop
jecxz
mov
addl
lea
aaa
or
mov
out
mov
lret
popa
xor
push
dec
xor
pop
loope
mov
cmpb
rcll
fs
ja
fadds
jae
test
cmp
push
add
mov
cmc
push
or
adc
mov
sbb
filds
and
insb
adc
mov
sub
xchg
shl
loop
test
lahf
fcmove
mov
inc
add
push
inc
sbb
mov
mov
xlat
xor
mov
cmp
mov
xchg
mov
inc
mov
lds
mov
jo
xchg
pusha
push
mov
ficompl
dec
leave
imul
inc
sbb
and
pop
dec
andb
call
shlb
xchg
xor
fs
jno
repz
cmc
xor
test
hlt
ret
movsb
imul
mov
jno
pop
pusha
shl
xor
mov
aam
dec
ret
jecxz
jbe
dec
bound
add
or
lcall
sub
mov
daa
jne
jns
iret
push
mov
or
out
mov
shll
js
fwait
adc
sahf
outsl
push
iret
test
or
dec
loop
sarb
adcb
out
into
or
pop
pusha
mov
fnstcw
pusha
jno
xchg
into
sahf
and
jl
push
cltd
ds
pusha
xchg
xorl
gs
insl
cmp
push
out
fcoml
sbb
and
sub
out
arpl
add
inc
cwtl
insb
mov
mov
mov
enter
fwait
pusha
push
cmp
pusha
xchg
cmc
xchg
ret
popa
xor
push
xchg
add
pop
push
mov
dec
popa
loop
dec
sub
je
imul
adc
pusha
and
mov
imul
add
insb
loope
cmp
dec
inc
inc
nop
jb
sbb
stc
mov
sbb
pop
not
cmp
in
dec
das
add
push
mov
pusha
mov
pop
dec
mov
call
jno
xchg
dec
add
pop
mov
out
pusha
in
sbb
push
pop
xor
sbb
lret
mov
fimuls
pop
cmpsb
das
fsubl
pop
inc
mov
pusha
testb
insb
aam
lods
pop
mov
xchg
mov
sbb
out
sbb
fildl
sarb
push
sti
jg
jge
xor
fldl
mov
fsts
xorb
cli
cld
push
ljmp
pusha
ds
jge
jnp
xchg
fsubs
sub
or
pusha
int
call
insb
rcrb
add
pop
jp
sbb
sbb
mov
stos
mov
pusha
sub
and
jecxz
aam
and
in
lahf
jae
xlat
pusha
je
cld
add
pop
sub
jge
movlps
mov
pusha
and
je
popa
push
fists
pusha
pop
mov
push
jmp
push
jne
adc
stos
pop
dec
pop
xor
jle
adc
xchg
cmp
test
notb
inc
mov
aas
in
daa
imulb
fld
mov
stos
mov
fdiv
imul
ja
or
pusha
pop
js
mov
inc
dec
cltd
jl
push
pusha
stos
mov
sbb
rolb
cs
push
rcl
fistps
lahf
mov
pusha
lods
pop
into
pop
in
fstl
roll
packsswb
xor
jl
fstp
mov
outsb
or
or
loope
jp
xchg
scas
xchg
div
pusha
mov
out
gs
adc
addr16
jne
mov
jo
sbb
clc
jl
popa
aam
jnp
negb
pusha
sub
mov
or
test
faddl
jecxz
jo
jecxz
mov
hlt
sub
inc
cmpsb
addr16
arpl
ret
push
adc
mov
jl
jnp
cwtl
sbb
add
imul
enter
stos
xchg
or
sub
pop
insb
js
insl
adc
jne
push
xchg
call
in
xchg
rcrl
rorb
out
mov
xlat
xchg
test
je
insb
inc
mov
inc
iret
lods
pop
subl
dec
jle
pop
ljmp
sbb
adc
call
subb
mov
sub
lods
mov
and
inc
jecxz
push
popa
test
nop
shlb
inc
inc
jge
cmp
ret
std
mov
mov
push
lods
or
add
test
xor
and
dec
outsb
cmp
hlt
xchg
int3
dec
jge
mov
push
int
cmc
pusha
aaa
adc
hlt
pusha
imul
push
inc
adc
jp
pusha
push
pop
mov
pop
nop
and
xchg
sub
dec
mov
adc
xchg
aas
bound
adc
dec
imul
fs
pop
leave
or
sbb
mov
fsubrs
loop
pusha
enter
push
mov
pop
push
roll
mov
mov
jb
xor
lret
jl
mov
xor
sahf
pop
dec
jno
pop
arpl
rclb
aas
jnp
test
lds
pop
movsb
push
push
mov
repnz
jmp
mov
ja
cltd
push
js
xor
lock
cwtl
lret
in
xchg
or
adc
imul
pusha
ja
std
insl
stc
push
sub
in
and
xchg
das
pusha
lds
or
pusha
in
jl
inc
imul
fs
int3
mov
test
movsb
push
hlt
sub
dec
iret
mov
cmpsb
outsb
int
fs
xor
stc
mov
iret
sbb
mov
mov
cli
mov
mov
pusha
jle
lahf
call
jo
pop
pop
nop
fistpll
and
stc
fsubs
xchg
mov
orl
js
mov
ret
xor
inc
adc
cmp
les
and
out
jmp
adc
popf
jp
push
dec
pusha
insb
aad
stc
mov
mov
fldenv
shll
lcall
sahf
insb
imul
adc
add
pusha
adc
ret
jmp
out
les
loopne
cmp
bound
pusha
cmpsb
test
mov
mov
lods
adc
enter
outsb
fildl
sahf
mov
xor
push
add
pusha
mov
mov
mov
xor
bound
jmp
dec
mov
bound
aas
push
mov
xor
cmp
cwtl
inc
in
cmp
aaa
or
out
out
sarb
clc
mov
lds
test
adc
sbb
dec
fs
fbstp
incb
jl
adc
int3
sub
add
fucom
sbb
inc
or
cmp
sub
insb
outsb
iret
jb
mov
iret
or
xor
gs
inc
lods
imul
in
cs
sbb
push
xchg
lahf
rol
into
pusha
xor
sbb
shrl
fs
push
es
adc
arpl
or
sbb
mov
outsl
fldcw
icebp
mov
int
jmp
scas
lret
sahf
punpcklwd
pusha
rcl
cmp
scas
mov
pusha
mov
jp
arpl
aam
xchg
mov
fmuls
addr16
cli
lea
pusha
add
jb
jae
mov
pusha
stc
rol
mov
pop
cmp
mov
dec
mov
fwait
and
push
in
xor
push
movsl
cmpsl
into
jnp
nop
xchg
pop
push
mov
pop
jmp
jl
and
sub
push
inc
movsl
popa
les
test
das
xchg
pop
ljmp
sbb
test
mov
pusha
icebp
shll
stos
pusha
push
fistps
push
xorl
pushf
fmull
cmc
pop
jg
xchg
mov
mov
fisubl
jp
lods
cvtps2pi
inc
shlb
lahf
insb
mov
addr16
fadds
cld
dec
movsb
ds
jmp
jmp
fs
xchg
loope
mov
jne
pop
enter
add
and
sub
inc
test
jg
inc
insb
loopne
and
cli
jbe
and
fsub
mov
mov
movsl
push
mov
cmp
test
fsincos
inc
ret
sub
mov
xchg
jp
mov
out
pusha
insb
pop
xor
mov
sbbb
shlb
pusha
xor
or
xchg
aaa
adc
sub
addr16
mov
ss
jnp
xchg
je
hlt
mov
arpl
leave
jle
pusha
mov
mov
scas
xchg
aam
jecxz
fldt
rcll
imull
pusha
mov
movb
ss
push
add
mov
lock
mov
out
xor
inc
jne
jb
loope
cmp
mov
xchg
and
cs
js
push
push
fwait
pop
pop
loopne
inc
lock
cmp
jle
scas
lret
nop
sbb
inc
mov
mov
js
add
pusha
push
sub
mov
xor
mov
pop
sbb
popa
jmp
push
jg
clc
test
xor
and
mov
or
cmp
cli
push
jmp
nop
xorb
popa
stos
cmp
and
push
mov
hlt
hlt
adc
pop
push
out
and
imul
hlt
repnz
cmp
lahf
pushf
jo
daa
mov
jbe
sahf
sub
fwait
push
shl
jecxz
adc
jo
hlt
push
add
inc
ror
mov
iret
dec
mov
decl
mov
mov
filds
js
sarl
xor
sub
pop
scas
fwait
lahf
and
les
int3
push
call
test
inc
loope
xor
stos
fisubrs
push
mov
fs
lods
sbb
dec
in
in
pop
jbe
mov
mov
out
adc
mov
imul
xchg
pop
xor
sbb
outsl
mov
and
xchg
push
jnp
pop
mov
jo
lock
jno
cwtl
shll
jbe
adc
loope
push
xor
ret
insb
cld
fs
loope
rolb
sub
and
lcall
adc
xor
out
push
cmp
pop
ret
and
sub
addl
out
enter
subb
xchg
xor
xor
fisubl
repz
mov
xor
movsl
mov
dec
ret
dec
jbe
into
rcl
mov
pop
pop
lcall
clc
or
les
ret
aad
xor
rcll
add
ret
aad
fcmovnu
int
daa
xor
mov
sub
push
js
les
sarb
das
dec
jecxz
xchg
enter
rcrw
pop
pop
popa
cmp
test
jg
sbb
pop
pushf
xchg
hlt
xchg
test
test
xor
rclb
js
xor
sahf
sub
inc
stc
subb
add
shll
out
ret
pop
arpl
adcl
ffreep
mov
sub
sub
movsb
and
push
and
dec
jl
call
mov
ret
cwtl
lea
addr16
fsubl
push
pop
xchg
iret
mov
lods
rcrb
mull
js
insb
cmp
pop
xor
fbstp
gs
sub
pushf
aaa
adc
sahf
inc
jmp
fildl
inc
adc
cmp
subl
mov
aas
or
adc
add
cmp
pop
mov
mov
push
push
cmp
ficompl
loop
adc
cmp
mov
or
addr16
arpl
mov
xor
bound
shll
adc
loope
inc
cmpsl
mov
jns
mov
std
lea
inc
iret
lock
fs
dec
mov
nop
in
inc
and
mov
push
nop
push
sub
mov
dec
mov
int3
pop
push
mov
cmp
mov
mov
xchg
vmwrite
mov
bound
movl
and
pusha
mov
or
add
bound
stos
dec
or
sbb
jne
bound
xchg
pop
sub
inc
or
mov
repz
mov
mov
roll
push
cmp
rcl
lock
cmp
shrb
jmp
sub
rcll
rcll
push
icebp
ret
push
push
mov
into
ds
loopne
or
mov
inc
jno
les
mov
and
stos
ret
jge
jo
jmp
test
add
mov
mov
cmp
inc
addr16
push
fs
sbb
mov
xchg
loopne
pop
sbb
inc
mov
mov
lcall
mov
enter
sub
outsb
scas
push
daa
push
push
popf
fsubrs
icebp
xchg
out
mov
enter
ret
push
sub
iret
pop
xchg
inc
hlt
xor
sbb
xor
fdivl
test
mulb
xorl
nop
inc
push
push
pusha
cld
sub
mov
sub
popa
add
mov
add
push
pop
mov
mov
dec
sbbb
xor
jecxz
adc
or
lea
push
je
sub
push
movl
loopne
cli
lret
mov
xor
sti
arpl
rol
add
sbb
adc
and
pop
lret
mov
enter
cmpsb
insl
mov
cld
inc
push
jmp
inc
dec
push
mov
mov
mov
mov
inc
or
ret
inc
mov
xchg
and
in
pop
or
or
push
out
mov
mov
or
push
js
dec
xor
inc
jnp
stc
sub
and
aaa
das
shrb
sti
inc
add
xor
jb
adc
inc
popa
std
mov
roll
adc
or
test
nop
pop
inc
jno
sub
sub
daa
pop
jb
adc
retw
mov
push
ret
movb
inc
xor
int3
mov
leave
pop
push
sub
sub
frstor
ret
ror
dec
daa
dec
ror
insl
out
addb
inc
adc
sub
jo
cmp
mov
push
cmp
adc
jnp
mov
int3
ljmp
mov
pusha
xchg
jl
and
in
dec
mov
and
jo
mov
jo
mov
adc
push
fwait
sbb
mov
sbb
push
out
mov
sbb
add
test
testb
loopne
sti
loop
mov
add
push
pop
shll
mov
add
ds
int
lods
mov
pusha
shl
pop
ja
xchg
add
lret
push
cmp
inc
adc
insl
and
mov
inc
pusha
and
outsl
repnz
jnp
dec
in
pop
stos
fs
pop
jmp
push
xchg
sbb
adc
jmp
std
ljmp
xchg
aaa
sbb
pusha
push
rcl
std
pusha
xchg
in
jge
call
jb
pop
fldl
loope
sub
ljmp
mov
adc
fdivrl
lods
in
testl
jecxz
stos
pop
pop
sub
pusha
xor
mov
xchg
and
pusha
jne
xlat
out
jae
test
push
cmp
jns
aam
movsb
push
and
loope
fimull
aad
cmp
pop
add
pop
jl
out
pop
rep
pop
add
cltd
ret
adc
pusha
mov
lcall
jmp
js
add
pusha
xor
mov
test
pusha
jl
mov
xchg
enter
sbb
push
test
or
roll
in
cli
mov
arpl
out
jge
mov
sarl
or
lcall
xchg
pusha
in
mov
sbbb
pop
inc
leave
cmp
or
jbe
sbb
and
jmp
iret
xlat
pop
add
cmp
jl
mov
mov
dec
xchg
cmc
fisttpl
pusha
dec
insl
in
xchg
jecxz
lods
dec
lock
pusha
xchg
fstpt
cmp
xchg
fcom
stos
cli
inc
dec
shll
adc
movsl
cld
mov
pop
jl
sub
mov
mov
sub
movsb
mov
sarb
lds
add
divb
mov
dec
sub
outsb
pop
sub
fptan
jbe
cmp
aaa
xor
les
gs
sub
mov
adc
bound
push
cmp
dec
pusha
push
dec
mov
jo
adc
xchg
xchg
inc
push
pop
xchg
pusha
or
jmp
jbe
mov
dec
push
daa
flds
pusha
addl
jl
jl
lods
int
divb
adc
mov
cwtl
mov
lret
xchg
adc
mov
jno
push
pop
push
push
vpunpcklbw
fsubl
xorb
mov
scas
jp
arpl
int
and
lret
out
xchg
pusha
repnz
cmp
inc
xor
insb
fimull
fstpt
push
nop
ror
enter
enter
insl
cwtl
mov
fbld
and
fs
sub
jno
bound
cmp
sbb
xchg
mov
xor
jle
mov
mov
mov
or
sbbl
test
sti
mov
push
loope
push
ret
pusha
or
jne
jp
decl
or
jae
fs
mov
cmp
pop
movsl
subl
cltd
push
sahf
push
mov
stc
xchg
dec
in
xor
ds
nop
push
add
and
ss
pusha
jo
inc
aam
sub
pusha
jmp
in
int
lds
and
mov
add
xchg
add
sub
dec
fcmovne
dec
cmp
bound
pusha
call
and
lahf
pusha
repz
mov
jnp
je
adcl
mov
cmc
xchg
mov
mov
mov
mov
mov
jle
popf
movsb
in
std
pop
fwait
loope
mov
fstp
lds
jl
dec
popa
sahf
fdivp
pusha
ss
mov
and
dec
dec
movb
pusha
cwtl
andb
nop
or
and
pop
js
fisubrl
aaa
addr16
pop
arpl
jns
mov
outsb
sbb
mov
pusha
shl
mov
xor
add
mov
pop
int
mov
mov
out
sbb
fsubp
les
stc
arpl
fisttpl
lret
push
pop
cwtl
mov
or
loop
push
lods
pusha
test
aad
adc
mov
and
mov
aaa
test
mov
xor
xor
jp
inc
sub
jb
pusha
push
xor
push
out
sti
or
idivb
or
and
dec
rcll
xchg
int3
jge
into
stos
sbb
jl
or
bound
cmp
push
mov
pop
add
adc
mov
mov
fdivrl
cmp
pusha
cmp
sub
and
fsts
andb
add
mov
lea
dec
or
unpcklps
cltd
fldenv
outsl
lods
loope
imul
pop
jg
pusha
jnp
add
push
pusha
push
roll
enter
pusha
shl
fisttpll
les
and
pop
bound
rclb
or
jns
xchg
ficompl
jl
insb
xlat
addr16
test
fbld
xor
pop
pop
adc
xor
clc
cwtl
or
pop
cmpsl
or
cli
das
jecxz
push
data16
shl
cmp
imul
push
jne
sarb
pop
jmp
fwait
push
pusha
mov
idivl
in
xchg
pusha
cmp
inc
inc
pop
fbstp
dec
sub
cmp
adc
dec
stc
mov
sub
dec
xchg
or
pop
mov
xchg
iret
xchg
sbb
sub
mov
push
subb
mov
pop
sbb
sahf
pusha
int3
test
inc
jbe
stc
or
sti
adc
test
test
mov
pusha
push
movsl
je
xlat
dec
push
repnz
mov
test
fcmovb
cmpl
xchg
divb
fs
popf
sub
mov
lods
pusha
mov
add
pusha
rolb
int3
jno
and
add
invd
jecxz
mov
pop
mov
add
fwait
mov
jl
and
jmp
or
xor
lock
dec
inc
je
adc
add
pusha
jp
cwtl
cmp
out
inc
xchg
pusha
xchg
cmp
push
inc
cld
mov
iret
scas
rcrb
xchg
add
or
dec
adc
pusha
shlb
enter
cmpsb
test
sub
loope
shll
adc
or
sbb
stos
test
lea
fsubl
insl
jbe
cmp
pop
cmc
pusha
fstpl
cmpl
es
insl
jecxz
mov
fs
jmp
fidivrl
pop
mov
cmp
jp
mov
adc
stos
test
jle
div
sbb
imul
rol
adc
pop
mov
lcall
and
add
jecxz
or
pop
divb
out
lret
out
lret
push
pusha
push
dec
pop
stos
inc
jae
dec
pusha
xor
pop
std
out
mov
sbb
mov
imul
mov
mov
xchg
cwtl
pusha
addr16
mov
je
inc
je
repnz
fistpll
mov
pusha
std
aam
test
or
sti
dec
nop
bound
push
mov
fs
shrd
fldcw
xor
adc
dec
fnstsw
fs
ss
shl
lods
int3
pusha
fdivrl
mov
sub
lahf
push
jp
imul
mov
jge
pop
cmp
sbb
dec
mov
and
jb
add
xchg
fstenv
cmp
inc
pusha
cmp
cmpsb
xlat
jae
xchg
repnz
mov
mov
jns
frstor
dec
inc
sub
or
jg
cmp
or
adc
push
mov
adc
push
js
adc
pop
jge
jp
xchg
sbb
mov
je
jmp
sbb
stos
push
jl
add
jb
sub
in
cmp
dec
adc
cld
mov
jb
mov
es
sub
negb
mov
into
xlat
insb
fists
fidivrs
mov
cmp
sbbl
adc
pop
dec
shll
negb
push
mov
enter
jecxz
adc
stos
mov
push
cwtl
mov
ret
mov
loope
subl
jb
mov
inc
aam
mov
dec
jne
and
adc
xor
jne
xor
inc
ret
mov
mov
or
and
add
xchg
inc
mov
ljmp
mov
out
adc
push
push
pop
stc
mov
xor
jecxz
arpl
jmp
inc
sahf
adcl
and
push
mov
enter
arpl
fsubrl
ss
in
and
xchg
dec
xchg
add
mov
bound
shr
dec
jecxz
mov
mov
mov
icebp
arpl
and
jecxz
dec
pop
bound
test
inc
sub
adc
add
mov
aam
dec
and
jo
mov
stos
sub
dec
mov
inc
cmp
pop
cmp
and
jnp
repz
jbe
mov
out
jmp
outsl
push
xor
jne
lret
sbb
rcl
pop
sbb
xchg
repz
lock
pop
lret
stc
inc
pop
mov
jmp
mov
dec
xor
daa
mov
icebp
add
sub
ret
inc
sbb
fsts
push
fdivrs
das
js
std
mov
or
cmp
jg
mov
push
ss
jecxz
mov
ss
add
cltd
js
cs
inc
into
add
repnz
push
outsl
mov
adc
inc
divb
sub
outsb
jmp
lods
fdivrs
ja
mov
xor
mov
imul
pushf
mov
cwtl
addl
inc
jle
jb
add
sub
andl
xor
mov
ret
cwtl
pop
xorb
xor
adcb
cmp
mov
xchg
scas
sbb
and
xchg
jne
aaa
pop
cmp
push
mov
icebp
pusha
mov
cmpsl
cs
lahf
ficomps
mov
pop
xchg
lea
sbb
ss
sub
mov
jmp
loopne
and
in
and
xor
lock
shrl
mov
adc
sbb
add
jno
stc
cmp
push
arpl
and
inc
mov
cltd
mov
or
push
or
lods
sti
and
inc
sbb
push
mov
js
mov
sub
leave
data16
mov
icebp
rcl
inc
xchg
mov
jno
xchg
call
inc
daa
adcl
jl
adc
sbb
or
xchg
bound
imul
dec
ret
enter
mov
fwait
sub
mov
data16
mov
cmp
mov
popa
pop
out
sbb
dec
dec
lret
inc
push
push
ret
cli
loop
fs
mov
add
inc
data16
lret
int
popf
and
popf
push
test
xchg
and
enter
ret
scas
pop
dec
xor
and
adc
popa
enter
inc
sub
mov
aaa
jns
inc
sahf
ljmp
fwait
inc
popa
jae
xor
addr16
mov
or
add
scas
jo
dec
jne
loope
insb
stos
insl
inc
cwtl
out
jae
gs
ret
adc
out
xchg
mov
sub
inc
push
push
dec
sub
pop
popa
mov
and
pop
and
xchg
push
or
loope
push
cmpsl
ja
fistpll
xchg
or
cmc
in
and
push
and
pop
jno
outsb
ret
sub
push
lret
insb
adc
push
mov
cs
fs
mov
mov
jp
and
repnz
cmp
pop
insl
loop
adc
fsubl
cmp
pop
sbb
xor
mov
dec
mov
mov
ret
jns
xor
ret
cmp
daa
je
call
insl
and
decb
scas
mov
mov
xchg
ds
xchg
and
mov
sbb
gs
lea
cmp
inc
test
in
test
jo
outsb
bound
push
mulb
inc
pop
pop
jo
iret
push
jns
enter
mov
ret
loopne
jne
inc
inc
sub
adc
or
fidivs
lods
in
xchg
mov
fcomps
pop
inc
loopne
lahf
arpl
stc
imul
adc
pop
or
out
xchg
sbb
mov
jae
mov
bound
adc
scas
xor
fisttpl
jnp
imul
add
push
inc
or
and
cmpsb
xchg
pusha
loopne
insl
cld
outsl
sbb
lret
sub
aad
ja
or
repz
push
mov
mov
add
out
push
sbb
outsl
daa
mov
add
ss
jg
lret
in
gs
push
fs
fs
rcr
insl
rcr
subb
leave
cmpsb
mov
pop
shlb
arpl
ret
inc
outsl
pusha
int3
test
dec
leave
sti
pop
pusha
or
mov
pusha
fmull
test
jb
mov
inc
cmp
pop
mov
inc
divb
cmp
fistpll
ljmp
mov
lods
int
and
pop
mov
inc
ret
mov
xchg
mov
out
or
push
pusha
movb
shrb
ja
cmp
sbb
loope
inc
mov
popa
inc
rolb
pop
xlat
dec
pushf
jecxz
insb
pop
pusha
movsb
in
outsl
popf
push
jnp
xorl
sbb
popa
insl
and
test
jo
or
mov
pushaw
adcb
add
pop
and
dec
mov
arpl
dec
cmp
addr16
out
jbe
in
and
jo
scas
mov
pusha
and
pusha
push
add
fidivrs
or
nop
mov
pusha
adc
mov
sub
cwtl
pusha
mov
sub
frstor
add
add
ret
mov
bound
or
jbe
mov
pusha
es
xor
pusha
in
adc
rclb
adc
pusha
lods
push
push
xor
mov
adc
mov
leave
cmc
xchg
stc
pusha
inc
roll
jo
leave
jae
test
xchg
dec
dec
add
popf
cs
pusha
cmp
push
jmp
add
xor
mov
push
insb
sbb
leave
int
lret
pusha
in
dec
shlb
je
imul
imul
arpl
xor
mov
pusha
test
cmp
fcomi
shll
jns
imul
jp
xor
pop
dec
imul
pusha
test
in
sbb
pusha
xor
pop
adc
pusha
jo
into
adc
adc
sub
fistl
fbld
mov
scas
insb
sbb
dec
rclb
cmc
jecxz
shl
xchg
test
fsubp
sub
fs
mov
movsb
jl
or
insb
scas
leave
jg
dec
movl
xor
inc
pop
mov
xor
loopne
push
pop
loop
pusha
jl
mov
test
jno
mov
scas
fbstp
popf
xlat
mov
repnz
out
ret
xchg
pushaw
jl
daa
cmpsl
cmc
push
mov
call
nop
inc
fistl
stc
pusha
lock
ljmp
mov
add
mov
cmp
pop
imul
sbb
fs
xchg
fwait
push
dec
enter
fildll
pusha
icebp
jnp
ret
or
or
mov
pusha
xor
mov
mov
fwait
jecxz
jp
outsb
mov
mov
jo
out
dec
les
arpl
cs
cmp
pop
ret
shll
inc
lahf
dec
dec
out
adc
loop
push
push
js
mov
mov
pop
dec
cmp
lcall
and
insl
in
pop
cwtl
jns
adc
inc
cld
dec
dec
cs
imul
push
sub
enter
stos
out
outsb
jae
jmp
and
push
sub
cmp
cmp
pop
pushf
js
pusha
mov
in
stos
sub
fldl
cs
loop
fistpll
orl
mov
lods
mov
adc
aas
es
xor
jnp
pusha
mov
stos
bound
mov
out
mov
fs
add
pushf
xchg
jecxz
push
imul
lret
fldenv
inc
mov
pop
stos
and
mov
rolb
mov
pusha
xor
call
dec
adc
jle
pusha
gs
arpl
leave
insb
dec
push
mov
xor
and
jp
pusha
sahf
and
into
push
dec
push
js
pop
pusha
xchg
or
test
rcr
bound
dec
xchg
test
rep
xchg
pop
pusha
je
mov
xchg
lods
scas
arpl
ss
jmp
andb
test
pop
shl
add
xor
dec
nop
push
add
mov
jno
jmp
lahf
bound
std
aaa
xor
pop
push
pop
aas
loope
mov
adc
mov
bound
ds
adc
push
mov
stos
pusha
movsl
dec
jecxz
pop
ror
dec
pop
dec
cs
addr16
cmp
pusha
xor
xchg
mull
xor
pop
adc
lock
mov
ss
cmpsb
sahf
lods
mov
inc
inc
or
and
pusha
add
mov
ljmp
daa
push
inc
xchg
jno
dec
cmp
addl
sbb
scas
sbb
shll
sahf
sbb
dec
repnz
ljmp
inc
pop
cmc
mov
pusha
jb
fistps
cmp
mov
adc
out
pusha
int3
pop
addb
pop
je
ret
fwait
xor
fcompl
push
add
mov
loopne
je
aad
xchg
mov
pusha
xorl
jns
xchg
hlt
mull
push
xor
stos
adc
das
pop
dec
and
ss
mov
pusha
adcl
daa
pusha
cli
lods
sbb
pop
fstpl
stos
les
xor
std
lds
or
mov
arpl
dec
pusha
les
in
and
stos
stos
pusha
icebp
mov
out
pop
cmp
and
out
sub
push
dec
fwait
xchg
pusha
test
jb
repnz
push
and
adc
loop
std
sub
xchg
push
mov
dec
pusha
das
dec
icebp
adc
sub
mov
aam
mov
pusha
clc
je
mov
mov
fcomps
loop
aas
sub
inc
out
je
loopne
lcall
push
pop
ds
dec
mov
adc
arpl
jg
lods
adc
pusha
add
or
sub
pusha
sahf
inc
sub
je
icebp
jo
jno
add
lock
test
jl
aad
pusha
add
sub
mov
fwait
or
jno
test
in
int
pusha
inc
test
das
push
pusha
lea
mov
mov
mov
add
adc
inc
mov
jp
sbb
push
jmp
jno
das
popa
push
enter
pop
pop
sub
mov
mov
arpl
leave
push
loope
sub
sbb
add
cmp
pusha
shr
fsubrl
pusha
mull
jae
std
fisttpll
pop
pusha
cmovo
mov
aaa
sbb
or
pushf
shlb
pusha
mov
in
shll
clc
cmpsb
bound
lahf
out
stc
fildl
mov
sbb
push
xchg
sbb
rorb
cli
push
jecxz
mov
pop
pop
bound
sbb
mov
pop
jo
shlb
lods
jg
fsubl
sub
xor
mov
outsl
sahf
xchg
add
cmp
loop
sti
je
push
mov
dec
stc
ret
aaa
movsl
xor
loop
sbb
lcall
cmpsl
add
mov
mov
std
in
sahf
pop
push
dec
and
xor
or
jne
pusha
cmpl
cmp
cld
or
repnz
or
pusha
ficoml
xorb
lret
out
push
and
pusha
xor
jns
pushf
pusha
push
js
adc
pusha
mov
repnz
sub
sub
mov
repz
loopne
or
adc
cmp
adc
jo
es
jecxz
int3
mov
stos
inc
fildll
push
jo
aaa
jae
cld
xor
mov
cmpl
test
pushf
shlb
rorl
and
cwtl
ja
mov
add
jo
mov
in
ss
jno
pop
inc
scas
mov
or
pop
mov
xor
std
inc
mov
dec
lret
dec
xchg
add
sahf
mov
jo
xchg
shlb
fmull
lds
cmp
stos
popa
cmp
dec
jle
xchg
push
sbbb
push
inc
jnp
or
dec
adc
xchg
mov
xchg
pop
loope
dec
sahf
inc
mov
sti
push
inc
stc
push
pop
in
ljmp
dec
and
jo
sbb
nop
push
stc
enter
jb
lret
inc
adc
sbb
sub
mov
jle
push
jo
jne
cmp
jbe
lods
inc
jo
rorl
outsl
call
mov
lock
push
lods
push
xchg
jo
mov
sub
mov
cmp
scas
push
test
fistpl
jecxz
xchg
rclb
and
cmp
push
mov
rorb
sbb
mov
in
scas
xor
faddp
inc
loopne
cmp
insl
data16
mov
sub
pusha
mov
xor
call
jb
add
xchg
xor
mov
loope
xchg
pushf
enter
xor
int
mov
and
inc
loope
push
mov
xchg
sub
ret
mov
lds
pop
add
pop
xchg
mov
inc
call
sub
push
js
and
push
imul
bnd
sbb
adc
xchg
pop
fsub
and
loope
das
add
test
xchg
stos
or
inc
in
mov
icebp
sub
fisubl
movsl
cwtl
mov
push
xchg
faddp
andb
leave
orb
push
push
pusha
lock
out
movsb
hlt
stc
sbb
adc
xor
bound
shr
enter
arpl
jmp
push
pusha
addps
mov
mov
je
into
adc
clc
inc
add
xchg
aas
pusha
adc
test
push
iret
insl
std
jl
xchg
cmc
sbb
scas
push
adc
filds
lds
push
pusha
dec
cld
gs
and
mov
xor
clc
stos
pusha
test
into
cmp
popf
push
push
cmc
imul
pusha
dec
cld
in
mov
add
aaa
fs
sbb
shlb
out
in
loope
insl
pusha
outsb
stc
insb
jmp
jl
ja
mov
aaa
outsl
addb
movsl
push
add
pusha
xor
arpl
pusha
clc
fwait
jp
push
xchg
add
daa
insb
mov
shl
loopne
jo
mov
sub
loop
xchg
mov
mov
inc
aad
xor
shrl
sbb
cli
pusha
movsb
fsub
test
sbb
mov
mov
add
sub
pop
push
jmp
dec
or
push
out
mov
pusha
insb
push
jbe,pn
dec
lock
inc
mov
bound
jns
cmp
mov
cmpsb
pop
push
outsl
mov
sub
pusha
cwtl
sub
sbb
aas
mov
mov
popa
push
jg
pusha
adc
xlat
mov
pop
movsl
xchg
inc
mov
addr16
mov
pusha
dec
fimull
add
cli
mov
fidivrs
mov
lcall
mov
pop
mov
sbb
call
pop
ret
pop
mov
and
out
imul
sarb
nop
xor
xchg
mov
inc
pusha
movsbl
lds
shrl
inc
rolb
loope
mov
xchg
and
cmp
popf
shr
in
in
add
pusha
mov
popa
dec
dec
sahf
jle
mov
rcl
xchg
push
pusha
lds
mov
movsl
shrd
popf
in
pop
mov
es
adc
jo
pop
dec
jg
xchg
pusha
adc
xor
mov
cmp
fcoml
sbb
mov
aas
mov
dec
jmp
lea
cmp
cs
roll
pusha
jmp
call
dec
pusha
das
xchg
pop
pop
cmp
fmul
sub
cmpsb
dec
cmp
and
sbb
jecxz
fcomi
or
js
aas
pusha
dec
cmpsb
aam
inc
fwait
xchg
pusha
out
dec
xor
in
adc
sbb
outsl
and
aas
mov
xchg
pusha
gs
imul
mov
jo
fs
dec
data16
aaa
ret
jns
pusha
sbb
sub
inc
pusha
mov
cli
rorb
xchg
icebp
push
and
jbe
pusha
push
scas
or
lods
repz
shrl
outsl
test
test
clc
mov
pusha
pop
sbb
jle
xchg
inc
pusha
adcb
bound
lods
push
insb
adc
mov
andl
mov
push
gs
push
mov
pop
and
imul
mov
js
popa
xor
inc
xor
push
add
arpl
fbstp
addl
cmp
xchg
or
mov
mov
sti
mov
in
ficompl
push
inc
icebp
cmp
in
rorl
mov
insb
test
sub
popa
loopne
jp
xor
jmp
sbb
push
dec
aaa
jle
push
lods
pusha
nop
out
sub
mov
movntq
push
cli
stc
insb
clc
cmp
inc
push
fstps
fwait
sbb
es
mov
add
jmp
pusha
fdivrs
mulb
lret
xchg
pusha
or
adc
pusha
add
pop
xor
dec
popa
fs
push
sbb
or
mov
pusha
or
pushf
pusha
add
mul
cli
adc
jl
sub
jmp
push
adc
pusha
sbb
xor
dec
jno
adc
call
or
jmp
jl
xchg
sbb
mov
push
mov
insb
stos
mov
xor
cli
arpl
xor
pusha
or
scas
xchg
mov
lcall
fcomps
mov
xor
lahf
mov
pusha
mov
push
xor
shrb
rcll
int
pusha
push
mov
aas
pusha
loope
jg
out
or
lret
lcall
pusha
fstps
out
lsl
mov
or
outsb
pop
xchg
ss
arpl
pop
in
pusha
cmp
push
mov
sub
jle
inc
xchg
lea
gs
adc
mov
movb
mov
leave
dec
pusha
sub
sub
or
in
mov
dec
mov
stos
test
fistpl
cmp
add
fs
jb
push
inc
pop
mov
mull
dec
jecxz
fidivl
push
int
mov
lahf
cmc
mov
pusha
push
sahf
cmc
cmp
aaa
sbb
leave
jle
dec
push
jno
fs
jns
pop
fsubrl
push
and
mov
ret
fldl
cld
jbe
lret
ficompl
cmp
inc
std
orb
mov
test
mov
fmull
push
add
scas
js
cvtdq2ps
outsl
push
sub
mov
stos
cmp
cmpb
je
pop
dec
and
push
adc
inc
pop
dec
xchg
mov
jp
ret
cmp
mov
aaa
mov
inc
shrl
and
cli
mov
xlat
adc
mov
dec
out
ret
jecxz
and
jg
jae
jbe
pop
insb
jne
xchg
aam
jge
and
mov
out
mull
rolb
and
sbb
addr16
shrb
sbb
cwtl
mov
inc
in
push
inc
mov
inc
addr16
mulb
dec
mov
and
dec
jge
lret
jnp
outsb
jl
inc
repnz
pop
out
mov
movsw
in
jmp
std
pusha
xor
enter
mov
cmp
and
test
idiv
pop
ret
ret
push
jl
mov
inc
mov
pusha
stos
sbb
inc
mov
push
xchg
aaa
add
and
add
rclb
sbb
pop
cmp
mov
sub
stos
test
jle
cli
pop
clc
xchg
mov
popa
cmp
xchg
inc
pusha
imulb
push
enter
cmp
mov
pop
sub
jbe
fwait
stos
pop
mov
xor
aam
sahf
jmp
xlat
cmpl
push
fsubrl
pop
adc
out
ss
mov
pusha
ret
outsl
mov
or
stc
je
daa
imul
xchg
insb
cmp
and
xchg
pusha
shrl
lcall
jae
xor
or
andb
shlb
mov
scas
sbbb
std
pusha
in
loop
mov
pusha
mov
mov
in
pop
test
js
add
xor
dec
negb
sub
dec
fs
jne
into
dec
pusha
push
cwtl
mov
gs
aam
rolb
lcall
add
bound
les
adc
leave
icebp
shr
pusha
mov
and
push
pusha
pushf
or
mov
out
ret
gs
xchg
pusha
inc
sbb
and
pusha
mov
test
push
sub
ret
in
rcll
pusha
xchg
adc
sbb
dec
mov
hlt
dec
xchg
ljmp
and
scas
add
sti
pop
test
adc
mov
push
out
jae
ror
sahf
ja
xchg
inc
adc
loopne
pop
fwait
lret
bound
ror
push
pusha
jg
or
add
cli
loopne
dec
pusha
in
or
orl
mov
mov
fstpt
iret
and
pop
xchg
shl
inc
mov
sbb
arpl
sub
cmp
pusha
sbb
xlat
pushf
dec
xor
lcall
jnp
dec
repnz
pusha
sub
lea
pusha
xor
lock
pushf
mov
rolb
movsl
sbb
sub
jmp
dec
mov
pop
pusha
and
mov
js
cmc
pop
lods
xor
jp
movsl
je
dec
sub
inc
push
in
pusha
and
jns
push
xor
ljmp
xchg
pop
test
in
nop
pusha
cmp
pop
xchg
push
jns
xlat
pusha
jl
pop
ja
sbb
dec
sbb
fldcw
or
arpl
add
xor
and
shll
xchg
pop
stc
inc
xchg
sbb
mov
loope
js
ljmp
popf
jnp
clc
enter
xor
mov
xchg
adc
outsb
pusha
cli
lds
loop
inc
pusha
push
jmp
push
dec
inc
add
into
int
jle
pusha
jecxz
pop
test
mov
jl
pushf
fimuls
les
cmp
pop
xor
ficompl
lret
and
andb
enter
jecxz
pusha
stc
scas
add
add
sbbb
out
scas
jl
pop
jge
xchg
and
sti
xchg
fs
jne
xor
shrb
bound
movl
incb
jb
mov
test
xchg
inc
bound
sub
pusha
fxch
add
mov
cmp
test
imul
add
in
mov
sub
cmpsl
stc
imul
or
xchg
scas
nop
inc
cmpsl
pusha
div
xor
mov
cltd
insl
push
test
xchg
xchg
fs
cmp
iret
mov
or
sbb
xor
js
les
loopne
movsb
ss
stos
pusha
iret
in
icebp
and
push
pusha
sbb
push
negb
flds
pusha
adc
dec
push
push
pusha
fsubrl
cmc
icebp
xlat
xchg
je
mov
aam
add
mov
cmpsl
mov
out
mov
nop
arpl
jg
sbb
pusha
inc
pop
insl
mov
push
out
jmp
out
int3
test
pusha
fldl2t
cwtl
lods
xchg
push
jns
pusha
mov
mov
cmp
rorl
les
repnz
stos
inc
mov
fsubr
mov
dec
repz
aam
adc
pusha
jge
adc
das
xor
pop
xchg
shll
sub
pop
pusha
in
aam
inc
imul
sub
adc
dec
lods
or
outsb
sbb
pop
fsubrs
mov
lcall
pusha
pop
inc
idivl
stc
pusha
scas
lods
sub
mov
sbb
aad
in
ret
sbb
pusha
xchg
les
inc
add
in
mov
mov
xor
pop
adc
dec
pusha
cmpl
loopne
aas
push
or
inc
in
pop
or
int3
jns
shlb
mov
lret
out
bound
cmp
add
jl
call
cmc
adc
leave
sub
adc
call
in
sahf
pusha
es
lods
adc
dec
mov
mov
pop
cwtl
jns
inc
pop
or
imul
ret
dec
jg
test
pusha
and
xchg
movsl
fistpll
jo
pusha
mov
fidivl
xor
pop
push
cld
sub
decl
mov
aaa
inc
hlt
dec
pusha
jo
test
and
sub
inc
cli
sbb
adc
or
jae
stos
stos
pusha
pushf
cmp
jp
cltd
cwtl
jmp
add
adc
or
pusha
clc
out
xchg
adc
cltd
fsubl
in
sbb
fwait
sti
inc
adc
ret
add
sub
cwtl
notb
fcompl
iret
jbe
xchg
cvttps2pi
daa
dec
enter
adc
ljmp
push
mov
jle
pop
addr16
das
in
jecxz
lcall
cmp
sub
adc
pusha
roll
pusha
and
jbe
aas
and
data16
or
and
mov
pusha
sub
mov
loop
pusha
push
cmpsb
cwtd
je
adc
pusha
movsl
fisttpll
mov
arpl
xchg
adc
push
insb
add
jecxz
mov
jo
jb
lods
xchg
bound
pop
jno
push
mov
shl
out
pusha
out
dec
imul
jle
ds
je
pusha
loope
cld
mov
xchg
in
pop
sbb
mov
xchg
cmp
and
xchg
mov
lods
andl
sbb
loop
sub
push
fildll
mov
mov
pusha
pop
sub
jbe
sbb
pusha
cmp
adc
dec
fidivrl
xchg
shlb
pop
xor
push
or
or
mov
bound
push
xchg
repz
movsl
std
and
pusha
lods
jge
jb
sti
pop
test
andb
jbe
shlb
neg
xchg
call
mov
mov
pusha
push
cmp
xor
jbe
cmp
jns
inc
pusha
lahf
and
pusha
jle
loopne
imul
and
fldenv
popa
mov
mov
stos
arpl
mov
push
mov
fbld
mov
into
das
test
repnz
cmp
in
push
call
scas
sub
push
push
clc
pop
hlt
jb
orl
jge
add
cmp
mov
sub
divw
fistl
rcrl
dec
xor
lahf
pusha
fisttps
inc
mov
or
cmp
aad
push
mov
mov
pop
pop
mov
sub
shl
sbb
sub
loop
cmp
insb
movl
mov
jge
mov
popa
fwait
mov
out
fildll
stc
jno
or
mov
nop
pop
bound
mov
bound
mov
adc
mov
int
cld
in
cltd
or
lret
push
xchg
aas
ret
mov
shll
dec
sub
cwtl
sub
adc
add
lods
jbe
sbb
mov
mov
jb
loope
bound
fldcw
adc
jb
inc
ret
add
mov
mov
adc
sub
inc
adc
aam
mov
sahf
inc
cs
mov
mov
mov
mov
sbb
sub
cmp
int
pop
mov
fnstsw
dec
insb
mov
cmpsl
fadd
push
xor
adc
rol
out
test
stc
loope
and
sti
jmp
pop
lret
inc
outsb
mov
testb
push
or
fcoml
scas
ret
xor
in
pop
rcll
out
dec
push
imul
imul
imul
pusha
add
rcll
cli
mov
in
iret
js
in
and
mov
mov
cmpsl
inc
fsubr
ds
sahf
inc
incb
jne
hlt
fisubrs
mov
repz
out
fbld
loopne
aas
pop
icebp
push
call
sbb
mov
insb
adc
pop
push
fdivl
adc
orl
jnp
jo
xor
sub
inc
cld
dec
lods
inc
xchg
aas
popa
push
and
adc
ljmp
dec
inc
out
jbe
nop
out
movb
loopne
mov
xor
test
xor
imul
or
inc
jecxz
jmp
add
xorl
ret
stos
push
and
shl
inc
push
sti
dec
sub
enter
cwtl
lcall
and
pusha
jmp
mov
pop
mov
pop
gs
xor
popa
or
es
lds
pop
into
out
lahf
arpl
mulb
or
mov
ja
clc
pop
adc
popf
adc
psrad
pusha
dec
mov
mov
cwtl
adc
cmpsb
jbe
mov
inc
lcall
pop
pusha
pop
cltd
fucom
in
dec
nop
andl
add
mov
push
fistl
jns
addr16
icebp
repnz
fs
xorl
pop
pusha
jp
mov
xchg
jno
cmp
sub
jl
and
cmpsb
jns
cmp
cltd
and
and
bound
int
into
mov
pop
mov
movsb
hlt
andl
sbb
pusha
fsubs
adc
mov
adc
pop
jo
push
fs
jno
mov
jae
adc
pusha
or
shll
mov
rcl
add
lahf
cwtl
outsl
sbb
imul
jg
pop
sbb
loope
leave
sbb
cmp
push
in
push
xor
add
insl
int
stc
cmp
hlt
xor
jb
push
cmc
push
jecxz
xchg
es
outsb
push
xchg
popf
fistps
pusha
dec
mov
push
add
mov
inc
cmp
fs
xchg
pop
fdivrs
arpl
test
dec
xor
and
pusha
sbb
push
outsb
cld
push
pop
sti
pusha
mov
jnp
pop
stos
lret
jae
mov
or
out
cmp
and
insl
or
jo
jg
and
dec
mov
sahf
popa
fisubl
xor
add
jge
inc
pusha
rorb
jno
fcmovu
not
shl
dec
test
xchg
sub
mov
pusha
xor
cwtl
xchg
pop
or
pusha
push
dec
inc
shl
and
mov
fldcw
pop
adc
adc
lds
es
push
xchg
fwait
pusha
push
add
mov
shlb
adc
mov
sbb
out
adc
add
xchg
imul
out
sbb
inc
pusha
and
sbb
mov
or
popf
pusha
dec
add
bound
leave
fs
push
cmp
mov
aad
mov
ss
dec
fs
mov
or
je
loopne
pop
jo
mov
shlb
pusha
cmpsb
ja
movsb
push
push
jno
test
jo
sub
pop
mov
dec
dec
push
pop
in
jl
push
jg
movsl
arpl
stos
jbe
dec
push
or
mov
or
repnz
sbb
adc
sub
pop
pop
ds
in
addr16
push
and
mov
shll
jb
mov
jne
sub
bound
mov
popa
es
jle
inc
sbb
leave
stos
inc
int
icebp
sub
push
mov
cmpsl
and
fildl
lods
fnstsw
mov
fs
pop
ds
pop
mov
loope
loopne
xor
das
fbld
xchg
dec
push
sbb
lahf
mov
pop
hlt
fs
pop
mov
push
outsb
lahf
mov
in
sbb
and
dec
loope
pusha
movsb
jg
push
movsb
xchg
lcall
jl
push
mov
mov
pusha
es
xor
lret
add
pusha
sbb
mov
dec
dec
xchg
jne
pop
pop
test
daa
ljmp
mov
cmp
xor
cmpsb
pusha
sbb
lret
mov
mov
pop
xchg
mov
jl
xorb
loopne
mov
jno
cmpsl
iret
enter
push
lea
pusha
sub
mov
hlt
or
adc
sbb
pop
jg
aam
cmp
mov
jne
mov
ljmp
pusha
test
sub
mov
pop
dec
mov
mov
daa
xor
mov
pusha
popa
movsl
sarb
xchg
loope
into
sbb
ret
mov
cmp
jnp
xor
xchg
je
or
lahf
movsb
xor
in
pop
fidivrs
leave
cmpsb
loop
inc
test
popf
js
pop
data16
mov
or
aam
sti
sbb
inc
sub
pusha
push
push
cmc
jo,pn
test
pop
push
stos
movsl
and
or
shlb
in
shlb
adc
fs
je
sarb
xchg
bound
add
inc
shlb
loope
imul
sub
loop
mov
jnp
out
xchg
inc
arpl
clc
ds
cmp
bound
adc
loope
insb
aaa
lods
popa
jo
mov
inc
repz
adc
andb
or
shll
mov
stos
push
xchg
xor
mov
pop
jo
push
xchg
lods
insb
pop
pusha
sub
add
pusha
fimull
add
pusha
lcall
rorb
mov
pushf
popf
lock
mov
add
xchg
mov
jecxz
pusha
test
les
add
pop
stos
adc
dec
sti
xchg
inc
mov
cmp
fs
call
sub
outsb
arpl
pusha
xadd
clc
repz
jecxz
cmpsl
in
inc
pusha
sbbb
ret
pusha
pop
cmp
mov
pop
cmpsb
pusha
int3
out
and
dec
in
mov
pop
dec
push
lret
stos
pushf
test
scas
pop
sub
cmpsb
inc
jg
fidivrs
cmc
negb
pusha
sahf
and
lahf
sbb
lds
mov
repz
dec
add
ja
insb
loope
pop
pusha
jnp
mov
shll
mov
xor
in
pusha
es
pop
les
addr16
into
lahf
dec
mov
and
cmp
mov
pusha
pop
lea
mov
mov
xchg
sub
sub
add
and
incb
sbb
test
dec
lods
clc
pusha
push
dec
and
xorl
dec
jecxz
sahf
adc
jno
mov
pusha
test
jns
iret
pusha
out
lret
cli
mov
xlat
dec
ljmp
xchg
data16
mov
inc
frstor
neg
sbb
andl
dec
icebp
hlt
mov
sub
inc
sbb
pop
sbb
testl
inc
mov
in
push
push
pop
in
pusha
adc
insb
lods
sub
lock
jge
mov
xchg
adc
xchg
loope
out
push
scas
sahf
pop
sub
leave
adc
cmc
imul
imul
pusha
mov
adc
aas
int
and
and
dec
fs
jp
and
pop
in
fisttps
and
pusha
mov
jl
test
cs
bound
shrl
or
hlt
jb
mov
sti
fsubs
lret
in
mov
add
pusha
and
adc
push
adc
shlb
ss
pusha
lcall
mov
or
sbb
outsb
insb
jae
pop
sarb
jl
cmpsb
add
int
test
rcl
sbb
mov
sub
loop
pusha
mov
push
out
lahf
jl
sti
pop
in
pop
in
or
subb
das
or
inc
xor
sub
in
in
pusha
push
push
pop
jle
inc
xchg
dec
pusha
iret
xchg
push
pop
jl
stc
mov
push
and
and
nop
popa
xor
push
mov
push
xchg
pusha
add
pop
or
ja
jmp
rcl
sub
cld
test
mulb
inc
inc
xor
sub
xorl
mov
and
les
pop
arpl
mov
or
dec
jmp
sbb
out
rcrl
sbb
dec
mov
inc
xorl
xor
push
shlb
js
xchg
in
in
lret
jbe
mov
repz
insb
out
psubsb
stos
or
cli
mov
adc
jne
cmp
cmp
popa
scas
scas
or
sub
not
stc
xchg
adc
sbb
push
movsb
jbe
xor
repnz
jecxz
pusha
pop
mov
push
jp
imul
les
xchg
pop
jmp
sbb
mov
pusha
pop
mov
popf
fcmovne
mov
push
inc
mov
jecxz
in
cmpsb
movsl
xor
in
adc
push
outsb
test
pusha
ds
ss
call
lret
mov
loopne
clc
jmp
pusha
and
test
pusha
cmp
in
jl
sbb
lods
fucom
push
movsl
dec
popf
in
jae
mov
daa
cmpsb
enter
pusha
gs
das
add
push
push
push
pusha
outsl
cli
mov
pusha
and
sbb
jns
pusha
pop
movsl
mov
pusha
lock
mov
cmpl
mov
movsb
xor
test
jno
out
scas
pusha
lods
mov
ljmp
aad
inc
sahf
ret
push
mov
adc
call
dec
or
mov
sbb
insb
fs
mov
shlb
mov
adc
or
ja
mov
add
mov
or
jae
cmp
mov
test
pop
inc
jl
inc
adc
fsub
data16
int3
pusha
shrb
bound
add
enter
loopne
push
add
jae
jl,pn
xor
xor
setle
inc
dec
mov
push
cmp
xor
fnstenv
sbb
ja
push
push
sub
inc
arpl
sarb
add
cwtl
pusha
sti
or
mov
push
jbe
dec
sbb
jle
push
and
ret
adc
test
xorb
push
bound
mov
arpl
or
lcall
and
adc
pop
js
pusha
lods
jbe
xrelease
push
xchg
mov
pusha
dec
outsl
jns
dec
shll
push
mov
xlat
pop
ficompl
pusha
push
xor
inc
jmp
sbb
xchg
mov
shll
jl
hlt
ret
cli
sbb
pusha
xchg
aad
pop
imulb
sbb
adc
fs
pop
out
adc
xchg
ljmp
mov
out
jp
inc
xor
popa
loop
lahf
pop
xchg
add
scas
dec
dec
lcall
fwait
sbb
and
loope
lock
mov
pusha
and
adc
idivb
pusha
xchg
xchg
mov
push
loope
mov
fcom
mov
adc
repz
ret
cltd
push
in
adc
pusha
rol
add
jns
lods
in
or
push
popa
icebp
roll
scas
inc
xchg
negb
imul
cmp
xlat
jb
das
sbb
inc
arpl
stos
pusha
sub
push
ja
dec
mov
or
mov
xor
popa
pusha
jge
mov
outsl
dec
scas
fsubs
mov
loopne
push
jle
inc
fisubl
adcl
mov
jae
or
cld
gs
push
test
pusha
std
dec
fisttpl
daa
add
dec
mov
mov
das
push
sbb
jl
add
cmpsb
pop
ret
jae
frstor
ucomiss
pusha
sbb
faddl
lods
rolb
aas
pusha
or
lods
and
pusha
mov
loopne
pop
push
xorb
mov
sbb
int3
testb
pusha
ret
faddl
ficoml
mov
adc
ljmp
fildl
je
test
les
hlt
sbb
jb
pusha
and
sub
in
pusha
shll
jns
add
jno
outsb
in
push
or
out
and
sar
mov
jae
xchg
mov
cmp
pop
stc
enter
into
pusha
xchg
xlat
repz
adc
adc
pop
push
pusha
adc
dec
iret
add
daa
inc
pusha
fsubrs
cld
adc
inc
cmp
jb
pusha
push
mull
mov
aad
pop
mov
lods
out
mov
shlb
cmc
lret
vsqrtss
push
fs
fcomp
mov
sti
outsb
out
jl
jns
daa
push
mov
pusha
ja
sar
sahf
dec
out
insb
mov
dec
add
int
pusha
movsb
in
js
cmpl
out
data16
mov
pop
aad
js
bound
shr
js
xor
xchg
cmp
xchg
cli
or
cltd
mov
jnp
fildll
jbe
push
clc
sub
into
int3
jne
stos
in
jno
inc
adc
stc
stos
repnz
lock
insb
push
test
or
ret
mov
addr16
mov
fstpl
dec
pusha
xchg
jg
scas
xor
ss
pusha
lea
popa
xor
jmp
mov
fisttpl
cmp
jns
pusha
das
sub
movsl
pop
call
xor
pop
in
cld
add
mov
cmp
mov
out
or
adc
inc
inc
push
pusha
shlb
or
jge
push
add
bound
cmpsl
ljmp
ss
dec
loope
push
insb
inc
aaa
daa
lret
ret
jp
pop
mov
dec
or
sub
rolb
cmpsb
mulb
lds
sbb
fldt
jge
adc
outsl
jle
pusha
cwtl
int3
nop
jp
adc
pusha
inc
or
fwait
xor
mov
popl
shl
in
pop
scas
leave
xchg
mov
cmp
mov
sbb
pusha
sbb
mov
or
inc
lcall
jnp
adc
adc
sub
cmp
les
jl
shrb
add
inc
pusha
mov
test
sti
cmp
bound
push
cmp
out
fildl
cmp
xor
jp
test
mov
pusha
shll
sbb
pusha
daa
xchg
insb
bound
sti
popa
mov
shlb
inc
aam
mov
mov
je
push
mov
repnz
adc
pusha
and
pop
enter
in
test
adc
repz
lret
pusha
movl
push
fdivs
fs
fs
mov
stc
shll
pusha
aas
je
adc
leave
enter
jae
ds
js
inc
pusha
icebp
aad
lret
push
iret
mov
insb
lock
ljmp
mov
cmpsb
mov
cltd
clc
fcoml
orl
mov
add
test
mov
cwtl
mov
push
pop
rorb
mov
pusha
jecxz
pop
or
mov
pusha
lds
insl
mov
add
clc
test
fdivrs
adc
jecxz
xor
push
out
js
loop
xor
in
jl
shlb
popf
loopne
test
pop
xor
pushl
int3
enter
ret
pusha
mov
cmpsl
xchg
cmovs
push
xor
cltd
pop
pop
jp
mov
or
ljmp
sti
or
mov
mull
inc
iret
arpl
pusha
pavgw
clc
pop
mov
jno
imul
nop
mov
cmp
dec
loopne
cmpsl
sub
add
notb
movsl
push
inc
lock
jle
mov
cmpsb
push
arpl
orb
inc
and
sahf
sbb
pusha
sub
or
divb
dec
jmp
sbb
fldenv
in
and
adc
pop
and
add
repnz
mov
cmp
push
lahf
icebp
sub
or
mov
loop
sub
sub
hlt
aas
dec
mov
dec
insb
add
sbb
aam
loope
andb
xor
jle
je
inc
lahf
inc
andb
add
dec
inc
ret
xor
push
fidivl
popf
mov
mov
jl
or
in
adc
sbb
rclb
push
push
push
js
mov
adc
shl
mov
jno
sahf
jmp
adc
ret
lret
testb
add
ret
push
push
inc
xchg
lahf
xor
ret
adc
dec
sub
xchg
addr16
das
imul
addr16
stc
ljmp
add
shlb
push
adc
arpl
in
mov
ds
insl
dec
jnp
mov
jle
sbb
cmp
cmp
jnp
xchg
sub
adc
shlb
loope
and
daa
arpl
js
xchg
mov
divb
and
push
and
add
sbb
out
mov
ds
mov
mov
xchg
add
rcll
xchg
and
ret
faddl
sbb
cld
push
adc
jnp
pop
mov
jl
dec
xor
mov
fidivrl
pop
sub
add
pushl
xchg
push
shll
mov
ret
ds
imul
lret
cmpsb
dec
adc
inc
popf
jno
xor
sub
fisubrs
pop
xor
insb
push
add
sub
sub
ja
inc
out
xor
and
adc
enter
loopne
or
and
scas
jle
mov
mov
xor
xchg
xor
ds
jnp
out
popf
sub
pop
mov
jle
loopne
push
push
adc
pusha
add
and
mov
xchg
cmp
nop
mov
js
and
xor
in
cwtl
dec
mul
das
ficomps
inc
mov
mov
in
inc
xor
push
add
xchg
sub
and
mov
add
dec
sub
mov
movl
mov
cmpsb
mov
es
mov
imul
inc
mov
leave
jmp
xchg
ret
cmp
insl
fstpt
xor
jle
mov
adc
leave
pop
stos
inc
mov
imul
lcall
jo
adc
call
jecxz,pt
dec
push
clc
mov
xchg
rclb
insb
arpl
mov
jle
mov
clc
leave
dec
sbbb
pusha
sub
sub
and
stos
sub
pop
cmp
add
inc
inc
lret
sbb
div
dec
add
xor
mov
or
out
ljmp
dec
lods
lret
std
mov
jp
loop
inc
cmp
lock
int3
fwait
gs
pop
sbb
push
push
xor
dec
lret
or
push
pop
push
push
adc
jle
or
jbe
pop
imul
xor
xchg
inc
xchg
mov
pusha
or
mov
mov
xorb
adc
mov
adc
xor
dec
xchg
cmp
outsl
adc
mov
pop
or
or
shll
xchg
push
ja
scas
and
cld
imul
scas
and
jp
popa
in
je
sbb
popf
mov
lds
int
fdiv
stc
jb
adc
or
shlb
sub
jecxz
jns
sbb
mov
nop
jl
mov
stos
repnz
stos
pop
cmp
subl
lds
shlb
into
ljmp
int3
pop
mov
or
and
and
jo
cmpsl
and
mov
in
faddl
adc
outsb
jecxz
movsl
and
hlt
daa
mov
sub
pop
pusha
and
hlt
shl
mov
clc
mov
js
inc
add
sbb
xchg
push
ja
arpl
or
sbb
je
or
stos
push
jmp
pop
push
ret
pusha
bound
add
mov
mov
mov
ljmp
ficompl
ret
or
cmp
sub
sbb
ret
pop
es
and
xchg
xor
out
ficomps
adc
inc
lcall
mov
sbb
orb
mov
push
inc
scas
pop
inc
mov
test
add
mov
arpl
imul
jno
add
xchg
cmp
push
mov
fwait
lret
scas
pop
out
lods
ret
das
push
and
mov
fwait
add
add
data16
leave
out
jmp
and
repnz
push
popa
or
ret
movsl
or
xorl
sarb
clc
bound
mov
mov
stc
inc
push
stc
xchg
mov
aam
inc
je
xchg
push
adc
mov
dec
test
dec
fnstsw
pusha
push
and
pop
xorl
cli
mov
scas
pop
inc
push
adc
arpl
cld
mov
jo
pushf
xor
in
test
add
adc
lods
test
jnp
adc
mov
cltd
shr
push
idivb
xor
testb
adc
addr16
inc
dec
adc
mov
cmp
mov
popa
jo
ret
lcall
mov
scas
or
stos
daa
xchg
das
repz
adc
imul
push
jp
lds
outsl
fidivrs
pop
subb
cmpsb
sub
popa
jg
rcrb
scas
pop
mov
movsb
loope
enter
icebp
push
dec
push
lcall
adcl
leave
clc
and
movsb
add
loopne
adc
dec
aas
mov
jo
mov
test
jecxz
adc
push
mov
xor
rclb
stos
cmc
faddl
xchg
adc
jne
push
lods
pop
dec
mov
shll
lods
popf
shll
add
fildl
push
inc
addb
mov
xchg
jmp
fbstp
xor
mov
sub
and
nop
sub
lock
mov
inc
sub
cmp
nop
das
or
jno
shl
add
and
adc
sarl
adc
cmp
fisubs
aam
jg
lea
hlt
xor
enter
dec
xor
std
sub
or
mov
fildll
int3
push
cld
insl
push
lds
xchg
insb
cltd
lcall
or
fcompl
jbe
mov
jo
bound
jb
push
mov
add
cwtl
lahf
mov
mov
cmp
xchg
sbb
mov
dec
xchg
mul
mov
pusha
and
jge
or
ret
cltd
dec
outsl
push
loopne
adc
popa
pusha
mov
lahf
lcall
mov
jge
add
pusha
jecxz
pop
ret
aaa
cmc
pusha
out
xor
mov
lahf
mov
mov
in
ficoml
pop
in
pusha
lock
sti
imul
adc
mov
jmp
pushf
jae
mov
loop
pop
sub
rcrl
mov
pusha
cli
icebp
dec
cmp
cltd
mov
shlb
cmpb
lods
icebp
stc
ficomps
int
mov
insb
ljmp
add
leave
xchg
mov
or
andb
mov
inc
push
push
outsl
jg
jl
dec
popf
pusha
icebp
ret
imull
lds
fwait
pop
fs
mov
enter
push
imul
add
pusha
loope
cmp
lret
adc
out
add
pop
jmp
in
mov
cs
mov
stos
xor
xchg
xor
push
dec
aas
cli
adc
enter
fbld
mov
nop
mov
inc
repnz
pop
std
aam
push
cmp
sbb
mov
js
ret
popf
inc
gs
mov
lahf
push
lahf
or
cmp
sub
je
inc
xchg
jne
loopne
mov
cli
es
pop
out
adc
mov
jnp
and
sub
loop
cwtl
cmpsl
dec
dec
sub
test
test
test
outsl
dec
mov
inc
add
xchg
xor
lods
aaa
jle
adc
into
pop
icebp
fistl
je
xchg
push
addl
test
stos
or
xchg
bound
adc
xchg
push
pop
cmpsb
js
imul
mov
dec
fs
jp
lret
rorb
push
mov
es
rol
push
popa
ja
jae
movsb
add
es
lcall
mov
cmp
mov
dec
add
sub
or
or
and
decb
cmp
popf
mov
jne
xor
sti
and
add
mov
jns
andl
jg
sub
imul
das
popf
jb
test
and
add
sbb
int3
push
sahf
mov
xor
mov
xchg
mov
cmp
stc
dec
xchg
jne
bound
loopne
mov
xor
cmp
xchg
sti
add
xor
mov
les
dec
stos
jmp
mov
push
daa
stc
stos
pop
fs
sub
adc
jo
push
lret
insb
nop
push
pop
pusha
mov
fs
xchg
push
loope
jg
cmpsl
push
mov
int3
je
push
jecxz
dec
push
ret
dec
and
adc
bound
and
jbe
jg
shll
mov
push
arpl
xor
xchg
xchg
cmova
jae
jo
mov
addr16
sti
ljmp
lret
movsl
pusha
mov
roll
in
and
adc
test
fdivs
call
sbb
inc
push
mov
lret
icebp
adc
stos
mov
nop
lcall
ret
pushf
fbstp
cmp
pusha
ljmp
jbe
push
pusha
stos
sub
pusha
fstp
dec
mov
add
pop
fs
mov
rcl
mov
subb
push
hlt
add
adc
cmpsb
mov
shll
fdivrl
jno
pop
inc
sbb
lcall
mov
jle
pusha
adc
jl
fs
repnz
into
adc
dec
push
popf
loope
popa
shlb
outsb
ss
int3
add
repnz
rcll
push
loopne
std
into
xor
and
faddp
lock
je
ja
adc
sbb
in
sahf
push
shrb
push
pop
test
pusha
ror
cld
inc
popf
sahf
dec
jl
andl
insb
fwait
push
or
movd
push
sbb
or
scas
jae
lods
and
sbb
mov
das
outsl
cmp
jl
inc
lods
ret
dec
pusha
into
push
lock
sbb
loopne
je
xor
ja
mov
sub
cmp
cmp
repz
pusha
xor
popa
movsl
xor
mov
push
pusha
dec
xor
jp
push
xor
dec
mov
rcll
ficoms
pusha
mov
test
insb
xchg
pop
sahf
mov
mov
pop
add
pop
jae
sub
addr16
and
std
push
sub
aaa
shr
pusha
hlt
cltd
mov
add
jnp
lahf
xchg
enter
in
push
dec
cs
bound
or
pop
movsb
cmpsl
or
pusha
sahf
out
push
aas
xor
pusha
in
xlat
ror
dec
add
das
lret
shrb
mov
jl
or
sbb
fs
aad
push
cli
mov
push
stos
pop
pusha
rclb
cmp
xchg
and
xchg
ficoms
cmp
pop
sbb
loop
push
mov
aam
data16
pusha
inc
jo
or
pusha
lcall
mov
frstor
leave
or
and
pusha
int3
int
pop
sbb
add
pop
movsb
and
and
pop
pusha
push
repnz
cmp
loopne
filds
mov
xchg
dec
clc
popa
inc
sbb
dec
addb
sub
mov
xor
xchg
cld
aam
sbb
pop
add
xchg
mov
cmp
fldenv
adc
sbb
mov
and
js
sti
lock
outsl
mov
push
pusha
adc
mov
sbb
or
aad
adc
pusha
mov
jmp
pusha
mov
in
xchg
lret
scas
repnz
insb
jecxz
pusha
push
ds
add
xlat
lret
mov
mov
rol
pusha
out
mov
sub
pop
jno
jecxz
scas
inc
ret
inc
popf
frstor
icebp
gs
mov
mov
pop
loop
or
jno
sbb
and
data16
mov
mov
mov
bound
sbb
pusha
jo
dec
sbb
cmp
xchg
pusha
and
lea
lea
outsl
ja
movsb
inc
inc
icebp
push
fs
pinsrw
jae
shlb
nop
sahf
dec
int
mov
daa
rcrl
out
or
pop
cltd
shlb
orb
xchg
pusha
jo
jg
and
xchg
out
cltd
or
mov
mov
cmp
mov
add
inc
test
inc
bound
mov
pop
fs
insb
loop
dec
mov
fwait
and
sahf
inc
jb
mov
adc
add
dec
mov
jbe
dec
jmp
push
jb
pusha
cs
pop
cld
ja
adc
and
mov
mov
add
mov
pusha
push
push
mov
pusha
clc
sub
sub
mov
sbb
xchg
jo
cmp
mov
and
addl
hlt
mov
sbbl
lds
push
fstp
cmp
test
pop
mov
mov
adc
and
or
inc
cmc
insb
loop
bound
adc
push
inc
sub
jecxz
cmp
and
daa
xchg
inc
ss
test
sbb
lds
cwtl
nop
pusha
add
inc
movsb
frstor
das
push
test
fs
pusha
sarb
loopne
out
shll
push
ficompl
mov
pusha
pop
imul
mov
pusha
in
cli
xor
enter
mov
pop
and
pop
bound
jmp
pusha
dec
aas
mov
xchg
daa
pushf
push
and
pop
outsl
loop
js
fimull
out
cmpsb
push
jl
inc
stos
pusha
enter
out
jno,pn
inc
xor
adc
push
xor
out
xchg
inc
fbstp
arpl
push
dec
les
ds
outsb
frstor
data16
add
jmp
mov
insb
pop
xor
call
fcoml
sub
sub
aad
inc
xor
das
pop
pushf
pop
mov
addr16
jae
xor
jg
pop
data16
repz
xlat
fsub
lahf
frstor
mov
xchg
call
lret
addr16
cmpsb
fisubs
lret
xchg
pop
int3
jo
xchg
pusha
sub
push
adc
sbb
pop
pusha
int3
pop
pop
mov
or
sbb
rcll
pop
adc
mov
repnz
add
pushf
in
cli
sub
pusha
popf
adc
cmpsb
push
fadd
repnz
stos
jns
or
mov
add
cmp
lea
incb
add
mov
insl
lods
cmp
or
pusha
xor
pop
inc
add
xlat
addr16
lods
ljmp
lea
pusha
cld
les
mov
and
mov
je
jns
cwtl
push
xchg
bound
push
push
insb
adc
addr16
popf
andb
jl
clc
add
mov
movsl
and
cmpsl
jl
mov
push
add
stos
test
pusha
adc
outsl
xor
jne
lcall
sub
sub
adc
outsb
or
push
stc
arpl
lahf
leave
dec
fstps
psrlw
mov
pusha
xchg
inc
ja
lods
jae
stos
jl
xchg
leave
test
mov
add
pop
pusha
dec
and
sbb
call
aad
xlat
adc
and
enter
daa
insb
hlt
cmpsl
push
pop
jns
inc
cwtl
dec
xchg
mov
lret
cmc
cltd
leave
loope
mov
push
pusha
and
insb
jmp
fs
sub
mov
xchg
bound
push
das
cmpsb
pop
lea
pusha
insl
mov
and
pop
inc
outsl
icebp
out
mov
push
fs
adc
pop
cwtl
rcrb
mov
cli
pop
sbb
test
je
jl
ss
test
or
les
bound
mov
pusha
dec
sbb
push
push
jno
mov
lret
pop
push
arpl
lret
cmp
in
frstor
ss
mov
ljmp
movsb
pusha
jg
lcall
div
pop
add
lea
push
inc
mov
sub
sbbb
xchg
push
xchg
inc
mov
push
and
or
sbb
sub
sti
fdivs
scas
das
popf
test
mov
inc
sbb
sub
pusha
mov
sti
pusha
pop
fistpl
jle
test
adcl
jne
cld
mov
add
mov
cmpsl
pop
push
xchg
or
in
add
fsubrs
dec
cmpsl
mov
pusha
fisubrs
xchg
adc
rcll
adc
out
ror
pusha
mov
and
and
fsubrs
fs
adc
inc
ljmp
ds
sbb
aam
push
dec
mov
int
xor
psraw
push
dec
bound
je
stos
stos
lods
or
test
ss
adc
inc
cs
sub
insb
fadd
pop
out
dec
or
inc
sub
std
insb
sahf
mov
gs
mov
int3
jge
and
sub
das
shll
punpckhdq
jle
jo
call
jno
jmp
jae
or
icebp
sub
push
mov
insb
loope
shll
out
sub
lret
mov
int3
repnz
mov
inc
nop
lret
arpl
fcoms
test
sub
js
popf
ja
mov
mov
push
dec
adcl
xchg
push
nop
cld
stos
and
push
and
cmp
ja
jl
out
test
loope
movsl
add
xchg
sahf
insb
push
sub
xor
or
shlb
mov
dec
xchg
fnstcw
daa
mov
lahf
dec
jo
xorl
ret
aad
push
repz
hlt
aas
out
and
out
adc
les
rcrb
call
lock
add
jge
mov
ja
mov
cmp
cmc
jecxz
test
out
mov
cmp
rcrb
in
daa
scas
lahf
js
push
nop
test
mov
inc
mov
sar
fldenv
repnz
jb
je
testb
arpl
xchg
inc
xchg
mull
ret
pop
out
or
mov
outsl
add
mov
nop
sbb
cltd
xchg
insl
mov
cmp
fwait
in
fnstenv
loopne
out
add
mov
sbb
mov
loope
stc
inc
mov
push
and
xor
scas
inc
mov
shll
add
dec
fwait
movsb
sub
int3
mov
repnz
jle
jp
outsb
loopne
nop
push
dec
adc
stos
shrb
dec
fs
adc
mov
inc
out
jno
xchg
stc
sub
fisubrs
xor
ret
lock
stos
inc
jmp
loope
mov
push
clc
or
bound
nop
pop
sbb
xchg
orb
add
lret
or
inc
ror
mov
xor
loopne
mov
lahf
pop
xor
bound
jp
xchg
add
xchg
fisubl
std
jle
pusha
fdivrl
fnstsw
jno
sti
imul
jns
mov
dec
das
pusha
jo
xor
icebp
insl
mov
pusha
mov
inc
dec
not
xchg
pop
nop
mov
data16
icebp
jecxz
xor
sub
nop
push
adc
adc
or
mov
lock
cltd
pop
pop
fwait
push
dec
arpl
shrd
push
mov
out
mov
adc
out
pusha
push
call
scas
fistpl
imul
add
outsb
dec
xchg
popa
xor
dec
arpl
cmp
pop
pusha
mov
lcall
mov
xor
pusha
stos
ud0
lea
pusha
neg
je
lret
jle
pusha
adc
xor
jl
outsl
sti
mov
xor
or
pusha
negb
fwait
jns
cmc
movsl
popa
push
rorb
adc
mov
pusha
ja
add
movsb
jge
pusha
das
mov
popa
mov
pop
and
jg
test
cmp
pusha
mov
xor
or
cs
repnz
iret
dec
push
xchg
ficomps
bound
dec
mov
in
fnstsw
sbb
popa
cli
stos
clc
pusha
pop
iret
push
aad
int3
enter
pop
bound
inc
icebp
loope
jg
cmp
dec
fs
fists
sbb
lock
pusha
jl
in
js
adc
ret
mov
gs
pushf
syscall
int
sbbl
and
icebp
jle
pusha
dec
in
adc
push
mov
repnz
cld
dec
mov
dec
pusha
in
inc
cmovno
arpl
jge
aas
fsts
icebp
xor
pusha
clc
inc
jbe
aaa
push
daa
in
mov
jnp
push
adcb
pusha
cmp
in
pusha
mov
pop
mov
repz
sub
arpl
pusha
pop
xor
sahf
add
fadds
pusha
cmp
sub
cwtl
jmp
pusha
repz
sub
pusha
arpl
addl
jbe
pusha
loopne
jo
push
mov
daa
cmp
enter
add
lcall
adc
push
mov
mov
pop
mov
xor
cmp
cmp
arpl
dec
pop
and
call
pusha
cmpsb
and
and
pusha
popf
xor
cmp
jl
fwait
outsb
cmp
or
mov
mov
imul
daa
stc
sbb
and
pusha
popa
pushl
cmp
pusha
push
aam
push
dec
andl
xchg
loopne
xlat
mov
pop
fidivrl
rolb
inc
leave
jno
aaa
addr16
and
les
ljmp
push
fdivs
mov
stos
mov
in
pusha
lahf
sbb
xlat
je
sbb
fisubs
std
rol
dec
movsl
cmp
inc
jb
jg
popa
in
outsl
mov
xchg
imul
push
mov
cmp
xchg
pop
adc
scas
dec
fcoml
xor
pusha
repnz
dec
sbb
mov
in
adc
pop
pop
cmp
sbb
sbbl
andl
repnz
xor
pop
inc
pusha
xchg
add
lods
les
push
pusha
inc
call
int
pusha
xor
jne
xchg
shlb
mov
xor
pusha
imul
pop
movsl
andl
das
pop
icebp
or
and
sub
test
push
jl
pop
pop
jg
mov
pusha
fmull
adc
and
or
js
pusha
fs
daa
jle
sub
cltd
mov
pusha
scas
call
pop
jmp
dec
jb
add
arpl
and
jmp
test
loop
nop
test
adc
hlt
xchg
xor
or
clc
call
fxch
pop
sub
pop
inc
cmp
shr
test
sub
sub
addr16
and
jl
scas
inc
shl
in
cld
or
mov
pop
pop
pop
scas
cmp
pop
clc
mov
jecxz
add
dec
or
mov
dec
xchg
fwait
pusha
in
int3
jno
jae
mov
jge
cmc
push
mov
lods
cmpsb
push
sub
jecxz
mov
pusha
scas
fnsave
cmc
adc
mov
mov
lods
pop
cmp
pop
mov
pusha
sub
jge
pusha
ds
out
repz
jae
mov
jno
mov
or
lcall
sbb
insl
pusha
nop
movsl
jle
test
cltd
inc
sarl
mov
mov
or
outsl
xor
and
outsb
leave
sub
mov
scas
daa
add
fxch
fwait
bswap
pusha
xchg
int
fnstsw
shlb
dec
sub
xor
fstps
push
xchg
pop
sub
sti
fstpl
mov
popa
push
inc
xlat
and
test
or
xor
bound
pop
xor
fwait
cmp
mov
pusha
dec
fstpl
shll
fmull
js
cmc
fsubs
out
int3
mov
lods
dec
mov
xor
loopne
repz
xchg
into
std
mov
leave
jg
sbb
les
xchg
pusha
ss
adc
cmp
push
sbb
mov
fcomps
popa
shl
ret
ss
cmp
jae
mov
pusha
bnd
cmp
mov
lret
pusha
jp
cmpsb
inc
scas
sbb
cmp
mov
frstor
fldcw
stc
in
pusha
xchg
aam
add
pushf
aas
pusha
insl
mov
adc
and
int
sub
scas
into
xchg
jecxz
cmp
pusha
mov
lret
pop
lcall
mov
cmp
and
jo
cli
sbb
and
add
dec
fs
je
xchg
push
ret
pusha
or
addr16
inc
xor
and
cli
scas
ds
js
aad
inc
adc
pusha
xor
jnp
push
jl
push
jg
mov
popf
jmp
repnz
test
loopne
jp
aam
dec
mov
sub
bound
inc
dec
add
test
inc
repz
adc
rcrl
pusha
sbb
push
xchg
test
stc
fbstp
loope
jp
arpl
cmp
cwtl
insl
xor
add
lods
jnp
mov
adc
dec
lods
pusha
ds
test
and
je
or
addr16
cmp
pusha
divl
sub
data16
or
push
xor
pushf
fbld
shlb
push
movsb
sbb
sbb
and
pop
push
popa
sub
lods
shrb
nop
jmp
cmpsb
pusha
push
jbe
popf
fldl
mov
in
jl
fs
cld
add
cmp
pop
scas
pusha
nop
xchg
xor
repz
mov
and
das
sub
pop
test
cmp
aad
test
mov
pusha
loope
add
mov
adc
outsb
xor
insb
adc
dec
push
stos
rcl
arpl
into
cmp
pop
cmpsl
cmpsl
lret
xor
cmp
dec
aas
pusha
std
or
push
pop
jl
push
lds
push
jae
jg
pop
adc
inc
shl
pop
pusha
cli
inc
lock
out
cld
dec
fs
cmp
and
inc
and
dec
lock
cwtl
pusha
repz
pop
shl
add
mov
pop
outsb
and
pop
pushf
xor
and
push
pusha
push
mov
add
imul
mov
movsb
cmpsl
push
fs
or
and
adc
add
dec
arpl
es
mov
mov
pusha
inc
ret
mov
shlb
dec
sub
ficoml
and
fidivs
pop
mov
pop
in
jge
mov
popa
lods
test
das
pusha
push
and
mov
pop
mov
add
push
jl
out
shlb
push
sahf
add
push
adc
mov
xchg
mov
ljmp
fs
dec
out
inc
jo
jae
mov
aaa
mov
mov
cwtl
sub
push
push
jecxz
jle
gs
out
and
ret
insl
sbb
mov
arpl
test
fsubs
inc
lock
insb
loopne
ds
ret
sbb
in
xor
inc
fs
aad
or
mov
outsl
insb
jnp
sub
pop
out
sbb
sbb
mov
jg
or
loopne
test
bound
repnz
mov
in
xor
mov
test
repnz
sbb
mov
aaa
cwtl
mov
in
pushf
add
jmp
imul
insb
xorb
mov
lahf
mov
ret
mov
popa
add
adc
xchg
add
cmp
xor
push
or
sub
dec
push
cli
and
bound
mov
pusha
enter
or
jne
cmp
sub
ret
cmp
pusha
sbb
push
mov
pop
push
xchg
pop
jo
aam
or
arpl
es
daa
aas
sar
pop
dec
xchg
andb
fwait
jle
jbe
iret
ret
sub
mov
ja
mov
push
insb
pop
js
xchg
loope
arpl
pop
jg
pusha
fists
sahf
adc
pusha
sub
outsl
mov
ficompl
mov
inc
je
jl
aaa
push
push
and
aas
push
or
jl
add
lahf
mov
outsl
jp
pop
pop
arpl
mov
arpl
rcrl
icebp
test
and
popf
pop
pop
mov
sbb
mov
xor
cmp
pusha
test
pop
js
pusha
jl
shll
cmp
ja
call
push
push
add
xchg
pusha
clc
fnstcw
mov
cmc
mov
adc
lea
stc
sub
aam
fnstcw
fwait
jmp
inc
inc
push
inc
stos
pusha
and
ljmp
sbb
test
add
fbld
insb
sbb
push
je
cmp
test
aas
fs
pop
jne
shl
inc
ja
jae
frstor
leave
mov
jl
inc
pop
arpl
pop
pusha
or
mov
fisubl
xor
jne
mov
call
jg
cmpsb
call
loop
fstps
aaa
sub
mov
adc
fwait
pusha
push
ficoms
pusha
push
jge
xchg
movsb
lcall
sahf
addr16
sti
inc
pusha
ds
sub
mov
bound
movsb
ljmp
es
inc
or
xchg
add
mov
sbb
ljmp
mov
xor
cmc
ss
test
or
ss
test
repz
fadd
dec
enter
push
dec
outsb
mov
insb
or
test
mov
loop
bound
sub
push
ret
negl
adc
cld
dec
pusha
test
outsl
pop
jle
push
push
mov
pusha
mov
pop
lahf
mov
adc
mov
arpl
ds
jg
int
insb
mov
addr16
cmp
pusha
jecxz
lret
mov
xor
lret
es
sub
cmpsb
adc
loope
jne
pusha
in
loop
in
cld
in
sub
decb
xor
pusha
je
xor
and
stos
jmp
adc
or
sub
loop
out
jle
pop
sbb
fldenv
mov
mov
lds
pusha
je
lock
xor
int3
fs
mov
inc
push
mov
les
hlt
adc
and
scas
out
call
pop
dec
bound
pop
cmp
cmp
fwait
sti
adc
popa
loopne
dec
xchg
out
cmpb
sbb
mov
mov
iret
cld
mov
add
ret
or
and
xor
movsl
lahf
je
mov
pusha
xor
jne
mov
mov
mov
je
into
insb
daa
xchg
jbe
orl
pusha
or
sbb
sahf
fidivrs
incl
push
jl
repz
fnstenv
icebp
cmp
cld
sub
mov
sahf
lcall
stos
pusha
fdivl
cld
fidivrs
jb
mov
jmp
inc
iret
and
adc
or
inc
pusha
cmp
or
push
jl
arpl
jmp
scas
add
mov
and
sbb
stos
inc
adc
ljmp
and
inc
and
rcrl
in
add
or
out
sbb
mov
sub
insl
push
xor
add
imul
repz
mov
mov
pusha
or
icebp
ret
xchg
pusha
ljmp
mov
sti
lds
pusha
xor
cld
stc
mov
push
jmp
cmpsl
mov
pop
push
add
pusha
xchg
cld
or
fmul
jnp
sub
pop
xor
mulb
in
inc
adc
xchg
cmpsb
gs
outsb
roll
xchg
or
imul
ss
mov
push
in
icebp
in
xchg
int
ljmp
aam
sub
shlb
pop
mov
add
push
fldl
inc
dec
mov
xchg
mov
xchg
bound
jns
ret
or
dec
or
pop
jnp
out
frstor
pusha
push
adc
sti
ljmp
jge
dec
sbb
push
inc
lahf
jae
inc
dec
push
cltd
gs
jo
push
insb
repnz
xchg
lret
mov
cltd
cmc
mulb
pop
sub
shll
mov
stos
fldl
jp
in
in
dec
out
out
push
cmc
rcrb
lods
test
jo
adc
sbb
shrl
cmp
mov
adc
outsl
insl
idivb
cli
add
and
nop
fmuls
add
idivb
or
jecxz
enter
mov
loop
cli
cmp
push
jno
lcall
pop
call
arpl
jp
xchg
jg
jno
imull
int3
jl
mov
jne
and
cmp
cmp
mov
mov
mov
cmp
aam
pop
pusha
fildll
xchg
push
dec
out
pusha
xchg
push
loopne
or
jmp
xor
jmp
sub
pop
inc
fcompl
mov
sti
mov
lea
insl
dec
sahf
cmpsl
push
mov
adc
and
cs
sti
mov
int
dec
xor
and
arpl
inc
orb
sahf
bound
ds
fs
add
xor
sub
pop
mov
nop
mov
sbb
pusha
mov
and
fs
mov
push
mov
pusha
add
cmpsl
and
cmpsb
inc
out
outsb
add
out
pusha
ss
lret
repz
pusha
cld
ja
xor
jmp
fdivrs
jae
sahf
fsubl
out
insl
xchg
cli
loopne
jg
cltd
pop
jno
lret
movsl
jecxz
and
or
mov
aas
inc
jmp
hlt
cmp
fs
cmpl
pusha
lock
jp
into
push
pusha
inc
xchg
mov
adc
fisttps
mov
ja
testb
fsubl
addr16
pusha
push
xchg
adc
pushf
movsb
sub
sub
cmc
loop
fildl
and
jo
add
es
outsb
jne
and
repz
sbb
sti
cmp
shll
ret
xor
inc
test
bound
aaa
cmc
outsl
push
mov
int
nop
imul
pop
pop
push
iret
xchg
mov
pusha
stc
add
mov
inc
in
sub
add
std
pop
clc
shr
jmp
pusha
inc
dec
iret
xchg
xchg
shll
divl
mov
jne
arpl
mov
jge
cmpsl
int
lcall
movsl
pop
adcb
jge
adc
popa
testl
pop
gs
lcall
loope
popa
movsb
test
into
mov
pusha
jns
mov
jo
add
xchg
sbb
dec
cmp
aam
mov
rorl
call
mov
roll
xchg
mov
ret
adc
jle
loopne
movsl
hlt
lods
mov
pop
ljmp
dec
mov
dec
sbb
pushf
out
popa
mov
xor
icebp
cmp
or
pusha
outsl
mov
leave
or
pop
gs
call
test
cmpsb
popaw
lcall
add
shll
aas
stos
out
aad
popf
sub
xor
dec
jmp
inc
and
pop
dec
fs
or
adc
cwtl
pusha
xchg
sbb
mov
pop
insb
pop
cli
xor
cmp
call
mov
jl
and
add
mov
shrb
inc
std
pusha
ja
pop
cs
xchg
pusha
cmp
jmp
insb
or
pusha
mov
mov
adc
sarb
loop
jp
push
xchg
mov
insl
mov
clc
or
dec
dec
flds
outsl
jns
dec
jp
stos
xchg
addr16
pusha
mov
sbb
addb
test
call
mov
mov
insb
dec
movmskps
std
ret
pop
adc
inc
aas
push
or
jae
mov
pusha
cmpsb
adc
sbb
pop
push
insb
je
cld
dec
mov
movsb
ja
mulb
test
pop
pusha
xor
xchg
and
pusha
sub
xchg
aam
fs
das
shl
stos
pusha
mov
or
jg
inc
iret
jne
pushf
push
cmp
mov
mov
fsts
add
fsubs
xchg
popa
mov
sub
cwtl
dec
lock
jno
xchg
pusha
xchg
push
xchg
fsubl
scas
hlt
push
push
xor
push
jmp
rcll
pusha
arpl
out
fs
insb
fucom
adc
and
mov
adc
imul
sub
hlt
enter
ss
jl
stc
cli
mov
xchg
repz
gs
insb
dec
hlt
jns
test
mov
push
imulb
add
xor
inc
mov
in
pusha
into
andl
pusha
scas
dec
mov
cld
pusha
mov
imul
nop
jae
aas
jge
arpl
xor
push
stos
push
pusha
add
mov
sbb
je
cmp
cmp
add
xor
mov
push
pusha
push
jecxz
jl
imul
mov
sub
mov
or
mov
popa
lock
mov
out
aas
mov
lcall
andb
push
mov
sbb
and
rcll
add
cmp
popa
and
stos
mov
jge
js
leave
shll
sbbb
sti
add
and
xchg
mov
inc
jae
push
mov
pusha
int
inc
add
pop
lods
xor
fucom
loope
or
push
and
xchg
test
les
adc
lea
imul
cli
cmp
push
jns
bound
xchg
leave
pusha
aas
mov
jnp
fs
push
insl
setae
xchg
out
pusha
inc
jne
gs
in
mov
pop
clc
cwtl
push
scas
mov
inc
mov
in
popa
insb
xor
or
repz
out
mov
fwait
pusha
jecxz
mov
dec
pop
or
dec
jl
popa
sahf
sub
xor
push
lret
mov
sti
pop
insb
bnd
out
cmp
mov
push
bound
adc
lods
sub
or
nop
dec
sbb
dec
out
pop
popa
mov
add
mov
imul
ljmp
cmp
je
lret
mov
imul
xorb
cmpsb
pusha
and
jbe
inc
inc
inc
je
popf
pusha
cmpsb
xchg
push
enter
sbb
arpl
fxch
xor
syscall
cwtl
fnstsw
add
xor
push
inc
data16
pop
fldenv
add
sbb
xchg
js
cmpsl
push
pusha
mov
pusha
xchg
sbb
pop
dec
ds
jns
sbb
pusha
ljmp
out
mov
pusha
pusha
lods
outsb
push
in
icebp
jmp
mov
sub
mov
shll
and
cli
std
xor
push
add
pop
fcomip
imull
repz
inc
outsb
fadd
ljmp
pop
mov
test
cmp
subl
jmp
mov
hlt
movsl
into
fdivrl
sarl
add
rcrl
inc
int3
pop
push
sbb
mov
lods
lds
and
addr16
xchg
ret
mov
pusha
lods
out
pop
and
sub
and
jne
push
fcoml
loop
push
and
mov
or
xor
test
xchg
enter
pusha
scas
iret
add
and
test
cmpsb
inc
pop
fcmovnbe
mov
add
xchg
imul
add
rolb
lods
les
ja
pusha
int3
iret
in
push
pop
or
pusha
mov
and
mov
fdivr
int
inc
ja
jl
cld
dec
js
dec
push
add
testl
push
out
mov
sub
into
sbb
mov
cmp
lods
fidivrl
and
ds
mov
jns
or
add
mov
jge
push
pop
push
pusha
push
aam
add
aaa
les
adc
mov
pop
cmp
dec
iret
pusha
dec
push
test
dec
ret
test
mov
outsb
aas
inc
or
dec
inc
ljmp
cmp
and
cltd
fstps
aaa
pusha
xchg
add
arpl
ljmp
or
mov
add
pusha
mov
push
dec
or
xchg
cld
call
sbb
adc
bound
mov
mov
inc
mov
lods
mov
call
or
subl
movsl
push
xor
je
ret
cltd
andw
roll
scas
insb
shlb
cltd
mov
ret
adc
push
je
add
test
push
adc
inc
xchg
add
inc
push
movsl
scas
daa
leave
xlat
pop
inc
pop
inc
dec
inc
mov
push
sbb
int3
shlb
xchg
push
hlt
jecxz
jge
mov
sub
jns
pop
bound
out
aaa
and
cmp
lea
xchg
mov
ljmp
rorl
mov
mov
and
nop
jo
and
and
pop
test
jo
enter
mov
inc
adc
cmpsl
mov
packuswb
pop
and
fisttpll
mov
pop
push
and
dec
or
xor
das
icebp
xchg
cld
adc
pop
inc
mov
out
xchg
sti
lock
or
loopne
mov
aad
pop
push
pop
jmp
stc
dec
adc
inc
cmp
add
pop
jno
xchg
nop
jae,pt
orl
push
out
cs
dec
ret
flds
mov
sub
add
and
cmp
inc
adc
xor
add
fld
aad
out
ret
out
aam
lcall
je
dec
lret
in
xor
dec
cmp
fmul
cmc
lods
xchg
sbb
and
pop
and
sub
xchg
ss
xchg
shlb
shrl
cwtl
push
int
xchg
add
repnz
imul
je
nop
push
mov
add
jno
sub
inc
repnz
and
fadd
pushf
add
push
adc
or
inc
or
mov
mov
inc
dec
mov
xchg
xchg
leave
out
enter
add
pop
push
addb
fs
ret
mov
outsb
adc
push
pop
inc
push
stos
lock
adc
out
sbb
das
lods
ret
sub
pop
mov
jo
dec
clc
inc
adc
push
cmc
sbbl
in
loope
jbe
mov
lcall
and
loope
aam
lds
dec
ret
push
mov
mov
int3
shl
jle
and
push
mov
mov
testb
mov
add
and
cltd
pop
mov
cld
adc
add
or
adc
adc
dec
fcoml
cmp
outsb
jo
cld
mov
rclb
sahf
gs
data16
xor
pop
add
loopne
int
jb
mov
jbe
mov
jne
test
cmp
xchg
minps
inc
aam
mov
add
jns
jno
fcmovb
mov
into
mov
nop
addr16
push
mov
rcrb
sub
aam
lret
iret
aaa
mov
in
mov
sbb
loope
inc
pushf
and
test
dec
dec
jg
stos
xor
inc
xchg
aas
adc
sub
scas
test
dec
jb
pop
rcrl
push
adc
xor
loope
adc
out
ret
mov
icebp
popa
scas
pop
xor
inc
mov
jmp
inc
mov
ret
adc
pop
cmp
dec
sahf
mov
and
sahf
push
shrl
xchg
push
pusha
sub
mov
cmp
ficomps
roll
jp
aaa
shlb
adc
mov
jl
mov
pop
bound
push
fcmovbe
pusha
push
rcrb
push
pop
adc
sbb
cmp
pop
xchg
jmp
daa
es
movl
popa
jle
jnp
adc
test
out
jns
xchg
mov
insb
call
cltd
pusha
mov
lods
add
dec
sbb
loop
cwtl
sahf
add
sbb
cltd
dec
sub
pusha
das
add
daa
mov
leave
pusha
mov
imul
and
pop
and
jmp
dec
pusha
mov
add
mull
add
pop
pop
xchg
aas
sahf
pusha
sub
mov
fs
or
cld
fisttpll
popf
insl
stc
push
pusha
jecxz
mov
lahf
pusha
cmp
mov
lcall
outsb
sub
add
mov
andb
setns
sbb
xor
cmp
sbb
adc
lds
nop
jmp
roll
ja
pop
loope
pop
add
jge
jl
cltd
and
mov
pop
stc
xorb
test
sub
pusha
fdivl
push
nop
cmp
and
shlb
sbb
fwait
mov
das
aaa
xor
jecxz
dec
mov
push
pop
mov
fs
xchg
push
jecxz
cltd
pusha
shl
nop
loop
lds
inc
mov
pusha
mov
sbb
pop
mov
jge
push
cltd
sbb
push
mov
dec
int3
xchg
dec
dec
lret
jmp
sti
out
lea
or
js
cmpb
mov
xchg
fldcw
aam
shl
inc
ss
test
jg
add
aad
xchg
pop
push
scas
fsubrl
ljmp
mov
sub
andb
jge
dec
lea
jle
lods
leave
ficoml
shll
jl
jbe
xchg
cmpsl
mov
loope
test
repnz
jecxz
pusha
push
imul
sub
rorb
xchg
xchg
out
xchg
pusha
int
insl
pop
cmp
add
mov
xchg
or
arpl
shrb
ja
xor
ret
jae
nop
sbb
or
loopne
jne
mov
jg
cmp
pusha
out
fwait
xchg
mov
testl
sarl
ljmp
jge
gs
lea
pusha
test
in
adc
rcl
stc
add
mov
test
insb
dec
mov
push
jmp
pushf
or
cmpsl
pusha
pop
out
daa
iret
fs
sbb
lods
mov
insb
mov
jl
pusha
or
cltd
or
pusha
mov
jne
cli
pusha
fcoml
dec
pushf
ror
cmp
cmpsb
jge
or
shlb
mov
fwait
sti
inc
xchg
xorl
notl
leave
push
jbe
xlat
fdivrl
push
bound
orl
into
xor
sti
mov
adc
mov
pusha
outsl
movb
pusha
movsb
sbbl
sub
and
push
mov
pusha
ret
jecxz
dec
pusha
es
fsubp
mov
push
subl
lds
cmc
inc
push
arpl
and
mov
fmuls
cmp
aas
aad
xchg
xor
adc
pop
xchg
add
sbb
lea
int3
dec
pusha
adc
dec
inc
and
or
sub
repnz
jbe
add
pop
insl
adc
jns
xchg
and
jnp
pusha
sub
enter
cmp
jb
inc
call
add
pusha
add
movsl
xchg
or
outsl
sti
push
xor
inc
pmaxsw
jo
push
movsl
in
popa
in
insb
das
enter
pop
bound
mov
and
jp
cld
inc
sbb
aad
mov
jae
jnp
rclb
jp
mov
cmp
lods
mov
and
mov
add
pop
data16
mov
pusha
movsl
mov
or
imul
arpl
jp
mov
pusha
lods
lret
cmp
dec
insb
std
xchg
add
sbb
loop
mov
int3
xorl
lret
inc
testb
test
fisttpll
mov
jmp
arpl
lods
sbb
and
out
sahf
mov
in
jno
inc
ja
sub
jmp
mov
aaa
jo
dec
pusha
insb
cwtl
cmp
mov
push
lods
insb
or
push
in
insb
repnz
xor
dec
pusha
jp
fsubr
xchg
lret
cwtl
add
inc
jbe
and
pop
lods
je
and
insl
mov
lea
clc
cli
jbe
or
in
stc
or
lock
jg
fmull
ljmp
getsec
jecxz
stc
je
ficompl
movsb
fwait
test
mov
and
out
pusha
int3
popf
push
fcomps
frstor
push
dec
inc
imul
xchg
ret
shlb
and
jge
out
sahf
fwait
mov
lahf
or
jle
add
xor
bound
xor
jl
mov
fsub
or
add
push
mov
fstpl
movsb
pop
aam
xor
push
mov
jcxz
mov
jl
scas
mov
jne
pop
imul
and
mov
mov
int
xchg
popa
pop
push
lds
psrld
popf
or
lret
push
test
inc
xchg
bound
jb
pop
mov
idivb
aad
jecxz
sti
mov
xor
ljmp
add
idivb
add
add
inc
ret
cmp
addr16
test
jge
mov
mov
sub
add
cs
dec
or
pusha
xchg
mov
fimull
push
and
inc
or
movsl
imul
push
sbb
mov
or
pusha
icebp
mov
pop
adc
jno
jo
mov
add
dec
mov
cs
xor
or
cmp
jmp
mov
pop
frstor
inc
pop
mov
ss
adc
cmpsb
outsl
push
add
orl
loope
or
push
push
cmp
pusha
and
and
js
test
adc
adc
pusha
cmpsb
dec
imul
push
fs
mov
stos
lret
sbb
cmp
cmpsb
int3
es
inc
jae
repnz
loope
call
test
and
xchg
ret
adc
sbb
or
sub
je
dec
mov
pusha
xor
xor
pusha
pop
push
gs
and
dec
inc
mov
and
sti
pop
mov
dec
cld
jle
loope
add
mov
sti
outsb
out
inc
xchg
lds
shlb
popf
and
fbstp
pusha
lods
or
mov
test
sbb
scas
loope
arpl
pop
push
in
jne
mov
fwait
sbb
mov
fildl
or
push
push
das
mov
scas
pop
out
sub
iret
addl
fsubrl
push
mov
mov
push
mov
sbb
mov
insb
dec
sub
aaa
pop
mov
and
outsb
cmc
xor
add
pusha
adc
push
sub
xchg
out
xchg
daa
outsl
xlat
subb
add
dec
pop
sti
std
pusha
inc
xchg
sub
mov
popf
xchg
pop
adc
dec
fists
and
aad
pusha
arpl
sub
or
and
mov
jo
pusha
and
and
inc
inc
pop
stos
roll
cmpsb
add
xchg
pop
jmp
bound
jg
adc
test
pusha
sar
push
call
xor
push
repz
pop
jmp
loope
or
stos
test
in
inc
lods
push
add
pusha
and
clc
aad
arpl
insb
and
inc
push
or
cmp
call
sbb
rclb
cwtl
mov
pop
pop
pusha
or
ds
dec
pusha
mov
ja
dec
pusha
add
xchg
mov
jge
test
dec
ljmp
inc
inc
nop
pusha
lahf
stc
push
ds
rcrl
pop
mov
jns
aam
loope
addl
cld
lahf
mov
fidivrl
lret
mov
pusha
and
outsb
sub
mov
aaa
adc
shrb
sbb
cmp
pusha
outsl
out
add
or
ret
bound
scas
sbb
push
cmpb
pusha
xchg
jno
cs
sbb
mov
pusha
into
and
sub
pushf
and
add
mov
push
add
ror
sub
pusha
nop
push
shll
fildll
push
es
test
pusha
imul
xchg
xor
mov
and
gs
jb
pusha
adc
arpl
mov
pop
push
xchg
xor
pusha
mov
lahf
fwait
and
icebp
bound
xchg
push
out
xchg
popf
add
push
jmp
add
popf
pop
adc
or
ror
pusha
outsl
fcoml
xchg
sub
pop
sub
lret
sbb
push
mov
dec
pusha
addr16
push
fimull
enter
inc
or
mov
pop
addr16
cltd
add
add
pop
jecxz
rorb
or
mov
arpl
ja
and
xor
int3
movsb
push
or
jle
in
mov
inc
test
xor
in
jo
bound
and
lret
mov
jns
fcmovu
sub
and
js
fildl
pusha
pop
movsb
ds
push
nop
adc
scas
and
lea
xchg
jns
aam
scas
dec
fistpll
cmp
shll
aam
inc
sbb
popa
sbb
add
adc
icebp
addr16
inc
xor
mov
mov
cmp
push
testl
fldl
and
ret
sbb
mov
cmc
lahf
lea
lret
push
hlt
dec
xor
jmp
call
lret
mov
push
xchg
mov
mov
sbb
mov
loopne
adc
loope
subb
in
je
ret
xchg
shrb
jnp
xor
fsubr
add
add
mov
int
dec
xorb
push
lahf
pextrw
mov
ds
mov
mov
aam
push
mov
in
dec
nop
xchg
cmp
add
jb
pusha
stos
fimuls
enter
dec
movb
nop
insb
adc
or
xchg
rcrb
inc
je
xorl
jb
mov
and
sbb
call
repz
mov
rcrl
or
das
sbb
dec
je
jl
ja
cmp
fidivrs
jbe
outsl
repnz
lods
dec
and
insb
paddd
pusha
lods
lods
scas
sbb
nop
mov
rol
loope
iret
enter
inc
ljmp
outsl
sub
stos
call
fnstsw
push
or
mov
mov
sbb
fdivl
xor
jo
aam
insb
jae
cmp
xchg
popa
or
pusha
pop
repnz
cld
jp
push
pusha
jae
aad
inc
icebp
mov
jnp
mov
ret
sahf
into
cmp
jb,pn
inc
sbb
or
xor
sub
or
fwait
aas
pusha
notb
lods
int3
jle
sub
pusha
daa
enter
aad
insb
pop
inc
test
cmp
movsl
sub
pushf
nop
mov
pusha
mov
dec
sysret
mov
daa
cmc
mov
pop
cmp
loop
sti
pusha
sbb
mov
lock
gs
sub
and
pop
rcrl
dec
pusha
xorl
xchg
popf
push
mov
push
popa
xlat
jae
fcom
arpl
mov
jl
lea
jo
mov
sub
pusha
divl
les
sbb
daa
gs
pcmpgtb
cmp
test
int3
jno
shlb
outsl
stc
cwtl
cli
stos
or
fs
jp
xchg
push
dec
push
cmp
cmpsb
sahf
fwait
add
cmp
mov
jg
pop
dec
jmp
mov
add
mov
fbld
lods
pop
inc
ljmp
pop
call
pusha
mov
sbb
push
inc
je
mov
or
cmp
push
ret
mul
stc
mov
pusha
push
adc
mov
lock
pusha
sbb
or
fdivrl
andl
ljmp
movl
sbb
lea
push
pusha
cwtl
fwait
cmp
pusha
cld
popa
inc
jl
push
fnstsw
dec
adc
jl
rcll
aad
test
orl
repnz
mov
lcall
add
add
inc
pop
jnp
mov
pusha
cmp
scas
mov
pusha
xchg
shlb
xlat
sbb
lock
jg
test
lahf
push
pusha
pushf
jecxz
xorl
push
into
xchg
and
mov
negb
push
mov
pop
push
loopne
je
dec
pusha
outsb
inc
scas
sub
pop
fs
xorl
sbb
push
pop
pop
loop
cmp
and
pop
pop
jmp
jl
mov
arpl
imul
popa
or
jae
jecxz
mov
test
sbb
jmp
ret
dec
sub
cmp
fs
mov
cltd
pop
cmp
push
loopne
lock
pusha
lods
cmc
fstpt
shl
jb
jl
cmp
shll
out
stc
sbb
ret
loopne
sbb
in
pusha
sti
call
fcomp
pusha
sbb
int
fcompl
gs
and
loope
push
jle
sub
addl
std
pusha
inc
lret
cmc
push
in
int
insb
es
int3
pop
cli
ret
daa
and
cmpsb
or
lea
notl
or
scas
inc
xorl
out
pusha
cmpl
xor
scas
mov
clc
jae
cmp
mov
xchg
ret
pop
insb
inc
stos
or
cwtl
ret
xlat
out
test
std
jge
sbb
inc
add
mov
pusha
fldenv
lret
pusha
mov
fwait
xchg
enter
mov
cmc
pusha
mov
add
pusha
mov
mov
call
js
lahf
push
sbb
pusha
dec
rorl
addr16
push
rcrb
pop
add
xchg
mov
inc
push
daa
dec
das
int
divl
iret
lock
mov
mov
bnd
stos
jbe
sbb
les
mov
xchg
sbb
sub
pusha
jl
mov
inc
and
jae
dec
dec
mov
pusha
xchg
repnz
bound
jge
insb
std
mov
push
lcall
sbb
sbb
pusha
jecxz
cmpl
and
xchg
pop
and
loop
mov
cmp
jo
pusha
xchg
mov
std
fwait
test
cmp
cmp
jno
mov
mov
dec
mov
mulb
test
aas
and
dec
icebp
sbb
cmpsb
jno
pop
mull
nop
repnz
fs
and
jp
adc
pop
pusha
test
in
out
jbe
sub
adc
mov
jle
mov
add
leave
push
popf
mov
repz
dec
fwait
iret
fs
pop
sbb
and
pusha
stos
into
decb
addr16
je
jp
jno
pop
clc
mov
dec
mov
arpl
mov
push
sbb
movsb
shl
mov
mov
jno
jl
mov
std
mov
pusha
or
bound
sahf
sbb
xchg
jno
xchg
add
lock
in
cmc
pusha
enter
sbb
mov
stos
xchg
sbb
test
lds
dec
add
pusha
xchg
test
pop
inc
es
jae
dec
orl
fisttpll
shlb
cmp
cmp
lcall
test
jnp
push
pusha
xor
out
mov
sbb
sbb
push
stc
arpl
pop
sub
push
call
pusha
lock
fwait
imul
jae
ja
sbb
popa
jmp
push
cmp
in
sti
ja
mov
lcall
and
push
dec
repnz
jns
ss
loop
in
pusha
xchg
or
int
pusha
sbb
ret
sahf
jle
mov
inc
and
or
add
bound
imul
jle
ffree
push
imul
cld
sbb
push
fwait
imul
ds
test
push
pop
jnp
xchg
mov
dec
pusha
lock
lds
clc
adcb
rorl
pusha
push
aad
push
push
jbe
cs
jmp
cld
mov
mov
out
outsb
pusha
out
jnp
or
add
mov
popa
nop
bound
pop
ds
jge
bound
jo
push
clc
sub
pop
pusha
or
adc
jl
push
inc
shrb
push
cs
scas
iret
inc
jge
pusha
and
cli
enter
mov
xchg
mov
mov
pusha
out
icebp
adc
fisubs
jl
inc
jb
aaa
and
adc
xor
je
rcrl
arpl
mov
cmp
adc
mov
pushf
andb
and
lock
lods
mov
push
movsl
pusha
and
out
fimuls
dec
jmp
xor
jb
mov
cmp
into
int3
cmp
fucompp
push
popa
jnp
pop
cltd
mov
dec
icebp
pusha
imul
jl
test
mov
xchg
arpl
loopne
enter
test
in
mov
or
rcll
movsb
mov
cmp
pop
loop
adc
lea
xchg
push
mov
rcrl
fmul
sub
popf
mov
repz
popf
stos
mov
push
jnp
inc
push
mov
pusha
xor
adc
sahf
pusha
sbb
cmpsb
cmp
push
pop
lds
sbb
iret
fcompl
fwait
pop
add
outsb
hlt
jg
mov
mov
and
ret
addr16
es
pop
mov
jb
arpl
in
jmp
int3
std
xchg
arpl
fiadds
dec
jg
cli
stos
pusha
mov
mov
ds
hlt
bound
out
lea
je
mov
jb
add
sub
dec
mov
cld
out
xor
pop
cmp
mov
into
jecxz
cli
push
fwait
divl
cmp
test
push
pusha
mov
fyl2xp1
cltd
fildl
pusha
adc
or
pop
sbb
aam
bound
notl
sub
divb
loopne
lock
push
mov
pushaw
test
inc
fwait
stos
pop
fs
xor
lret
aam
insb
test
sub
pusha
mov
psubusw
xchg
adc
out
jne
inc
sbb
mov
lods
insb
push
aas
movsl
lds
test
jae
scas
std
arpl
dec
cmp
pop
adc
and
mov
push
and
popa
push
jl
incb
pusha
jno
fsubrl
les
stos
pusha
xchg
or
add
lock
xlat
insb
sbb
xchg
mov
mov
mov
pusha
fistpl
cli
test
mov
pop
lea
loop,pn
dec
sti
add
adc
in
jle
sbb
sub
imul
jb
pusha
push
ja
frstor
xchg
cmp
jle
ret
add
sub
ljmp
pusha
cmpsl
cltd
and
pop
scas
or
xchg
xchg
loopne
adc
pop
pusha
iret
fs
aam
adc
add
movsb
xchg
stc
jge
add
sbb
push
cmp
lahf
cwtl
pusha
dec
mov
fdivs
test
inc
pop
fs
and
out
sbb
aaa
test
pop
mov
xor
sahf
push
add
inc
ret
lret
aam
mov
jecxz
inc
mov
aam
into
dec
jo
fstpt
pop
andl
imul
mov
ficoml
cltd
push
add
ljmp
test
insl
repz
rcrl
xor
jp
out
pop
in
int
daa
inc
or
add
mov
lahf
dec
xor
mov
sbb
in
push
mov
push
loopne
in
mov
xlat
std
lods
sub
sysexit
sahf
push
nop
loope
movl
rclb
mov
loope
or
sbb
out
jg
arpl
movsb
xor
ret
cs
mov
jno
dec
inc
mov
repnz
and
mov
jno
ret
movsl
subl
mov
jae
in
sub
data16
add
pop
icebp
loop
fiaddl
mov
lcall
and
dec
js
xor
push
mov
add
dec
rcrb
mov
cmp
add
mov
jmp
sub
mov
lock
inc
pop
push
imul
or
mov
scas
mov
fstpt
gs
fldenv
jno
jno
and
lods
pushf
mov
or
and
xlat
mov
bound
xchg
ljmp
repnz
jnp
cld
or
dec
pusha
pop
dec
sub
ret
sti
iret
sub
sar
shrl
mov
push
push
int
push
movsb
mov
inc
movsl
cmp
inc
lcall
jo
xchg
mov
sbb
inc
sub
sbb
push
cwtl
inc
push
dec
lret
and
mov
fs
adc
cwtl
shlb
and
mov
fists
mov
daa
lds
lea
dec
hlt
movsl
jb
pusha
xchg
mov
cmp
in
mov
xchg
aam
lahf
ret
add
and
adc
lds
inc
inc
xchg
int
aaa
stos
inc
or
arpl
test
hlt
jp
xor
arpl
out
push
mov
int
test
mov
popa
int3
inc
adc
shrl
loop
jns
sub
cmp
je
push
ret
fmul
xchg
loope
or
adc
xchg
outsl
and
xchg
rep
cmp
xor
arpl
hlt
adc
jns
mov
mov
push
xchg
and
ret
adc
dec
sbb
ret
jns
adc
mov
hlt
data16
cmpsb
mov
adc
repnz
sarb
mov
roll
outsb
stos
dec
cmp
ljmp
aad
data16
int
imull
dec
popa
popa
push
jl
add
fisubs
sub
push
stos
outsb
cmp
adc
add
add
push
adc
out
push
pusha
xor
mov
sbb
stc
or
repz
shrb
sub
pusha
sbb
int3
clc
mov
addl
push
in
outsl
xor
and
mov
pusha
push
push
rorb
mov
inc
and
adc
mov
xlat
movsb
mov
xchg
jp
pop
mov
adc
jle
call
pusha
mov
shll
pusha
aaa
adc
sbb
pushf
out
jmp
shlb
ret
sbb
pusha
jnp
pop
sbb
mov
das
and
cmpsb
mov
xchg
dec
mov
pusha
inc
push
loope
mov
add
insb
jp
dec
sub
inc
imul
mov
pusha
adcl
mov
adc
daa
adc
imul
or
les
adc
loope
shl
pushf
repz
arpl
jl
pusha
adc
dec
jle
mov
das
pusha
pop
mulb
adc
jbe
mov
or
lock
nop
into
stc
pusha
fs
and
shrl
pop
sub
pusha
bnd
mov
insb
and
adc
fwait
pusha
adc
mov
sbb
jb
jns
jmp
pusha
es
lea
test
mov
hlt
or
cmp
js
and
lahf
mov
pop
jmp
xor
test
pop
add
cmp
lret
add
mov
loop
es
pusha
daa
mov
aam
xchg
jno
pusha
xor
or
sbb
cmp
and
das
mov
rolb
mov
mov
rdpmc
mov
sub
xchg
cmp
imul
in
pusha
and
jp
adc
mov
and
stc
inc
cmc
jecxz
dec
gs
pusha
push
sbb
jne
arpl
insb
mov
lret
xchg
push
sar
mov
popf
cmp
jmp
add
cltd
jo
sub
dec
stc
cmp
pushf
pusha
std
bound
out
popa
xchg
jg
pusha
mov
jmp
lahf
dec
push
movsl
stos
addr16
in
or
push
les
arpl
pusha
mov
fcompl
jp
daa
xchg
shll
sahf
bound
jecxz
xchg
ret
dec
push
insb
cmp
inc
arpl
subl
cli
xchg
mov
xlat
std
adc
mov
inc
lret
cltd
ljmp
and
mov
xor
sbb
pusha
and
das
and
push
xchg
sub
mov
arpl
outsl
sbbl
pop
jmp
insb
and
xchg
movsb
mov
ret
or
dec
cmp
jp
cwtl
pusha
rcll
xor
lock
pusha
xchg
imul
mov
or
or
lret
add
in
in
push
bound
jmp
jo
fsubl
or
outsl
insl
pop
into
xchg
sub
xor
out
adc
push
ja
mov
jb
fs
andb
aaa
mov
lock
jb
pusha
les
mov
pop
xchg
enter
pusha
jg
outsl
xor
cli
inc
rorb
mov
and
jns
mov
in
adc
cwtl
xchg
fxch
cltd
sub
cmc
add
js
adc
lcall
adc
cmp
pop
mov
cmpsb
xor
sub
pop
mov
fsubrl
cmpsl
jmp
lret
pop
mov
push
pop
pop
testl
out
cmp
fstp
add
sub
cwtl
ret
nop
mov
mov
bound
or
andb
add
nop
jle
fstl
popa
sub
pop
xor
imul
dec
ret
fsubl
aad
cmc
jae
mov
out
xchg
sub
dec
adc
bound
xchg
add
inc
pop
fwait
jle
test
repz
fldt
jg
push
nop
test
mov
xorb
jp
cld
mov
or
adc
jnp
pop
dec
arpl
pop
pushf
sbb
pusha
jne
sub
pop
push
popa
fnstenv
insb
ja
mov
jb
cmp
in
push
add
shl
pusha
scas
adc
jo
add
hlt
jns
mov
jno
int3
push
mov
push
add
arpl
call
fs
inc
rol
mov
pusha
aam
mov
rcrl
stc
clc
lods
sub
pusha
stos
andl
xor
out
int
les
sub
and
sub
sbb
pusha
pop
lods
cmp
bound
mov
xor
les
stos
mov
or
xchg
lret
dec
sub
dec
enter
and
inc
nop
xchg
ss
sub
repz
sbb
inc
shlb
fists
stc
test
les
sub
jne
pop
pusha
lea
dec
inc
sbb
pusha
lret
lods
pushf
jmp
pusha
xchg
movsb
idivb
add
pop
pop
jle
or
push
pusha
mov
sbb
lods
popf
add
adc
int3
jg
push
pusha
pop
popf
das
loope
xlat
xor
movsl
cs
notl
and
pop
bound
xchg
cmp
aam
cmp
je
movsb
stc
sbb
fsts
mov
pusha
push
pushf
pusha
ret
ss
out
adc
je
fwait
mov
push
pusha
or
fimull
outsl
scas
cmp
cwtl
dec
add
push
push
out
and
pusha
lcall
movsl
jne
jb
pusha
scas
xor
das
jge
std
dec
pusha
call
stos
jp
adc
adc
pop
jae
bound
fs
sbb
test
push
pop
iret
pop
mov
outsb
pushf
mov
out
jae
push
jno
imul
ljmp
xchg
mov
pusha
cmp
lds
pusha
add
dec
inc
out
add
fs
pop
cmpsl
popf
cmp
adc
pusha
rcll
mov
les
into
hlt
stos
sub
pusha
data16
insl
pop
out
dec
jle
cmp
es
sbb
jne
lock
lds
rolb
fcomps
pushf
aam
xchg
loop
push
inc
shll
push
cmp
xchg
pop
in
fsubr
pop
push
clc
fdivs
or
cmp
pusha
repz
repnz
jbe
mov
cmp
insb
test
xchg
bound
pusha
cmpsl
adc
and
xlat
push
inc
clc
aad
push
loop
jecxz
aam
pusha
int3
jns
arpl
mov
mov
aaa
sbb
inc
nop
dec
dec
mov
repz
jnp
es
add
jl
inc
pusha
sub
pop
sub
pushf
pusha
movsb
aad
inc
and
push
jmp
mov
pusha
leave
test
xlat
jb
popa
inc
mov
add
mov
out
repnz
bsf
andb
cltd
pop
mov
jno
lock
shr
pop
je
mov
inc
jmp
mov
fwait
fs
enter
or
mov
pusha
ss
push
test
je
dec
pop
movsl
pusha
push
xchg
iret
sub
mov
pop
jmp
mov
cmc
ret
mov
inc
mov
pusha
inc
xor
enter
jo
jbe
add
adc
mov
sub
pop
push
mov
mov
xchg
cld
pusha
inc
roll
into
fwait
aam
pusha
xchg
xchg
hlt
xor
dec
pushf
pusha
xor
out
cmp
movsb
add
dec
pusha
adc
hlt
cmp
addb
pusha
add
je
cld
jmp
adc
mov
and
lahf
push
pusha
fldl
clc
arpl
adc
mov
sbb
sarb
pop
fsubr
mov
rorb
and
sbb
fstpt
sbb
inc
pop
xchg
in
adc
jb
mov
push
rorb
pop
cltd
cmp
mov
je
loopne
pushf
cmpl
inc
ss
stos
inc
jnp
and
jo
popf
and
das
or
mov
int
push
cs
sbb
sbb
pop
js
pop
movsb
adc
mov
cmp
out
inc
popf
scas
shll
xlat
pop
in
js
enter
imul
into
and
add
push
jecxz
fs
push
push
popf
fsubrl
pop
std
mov
mov
orl
dec
sub
inc
rcrl
test
jb
ret
xchg
cmp
push
aam
lahf
add
xor
and
adc
shll
je
test
jle
mov
mov
in
mov
outsb
rcll
jecxz
test
addr16
and
rol
sarl
pop
andl
xor
stos
adc
add
jno
cltd
inc
push
sbb
fsubrs
popf
mov
insl
inc
out
mov
adc
cmp
dec
out
in
test
lret
ljmp
and
nop
mov
imul
add
addb
adc
sub
xchg
xor
push
rcr
jmp
data16
mov
or
or
mov
loop
cmp
pop
cwtl
pusha
test
pop
inc
push
mov
jno
dec
cmp
sarl
fsubs
pop
push
pop
imul
jnp
ret
dec
push
sub
jl
pop
repnz
test
lea
push
sub
jg
shrd
mov
aam
fcoms
js
sub
xchg
xor
pop
aaa
mov
and
nop
mov
xor
dec
sar
outsl
addb
cmp
xchg
aas
sub
adc
dec
fs
push
jle
mov
orl
in
or
or
sbb
loop
xchg
int3
inc
out
js
iret
hlt
xor
or
ret
dec
shl
lcall
into
xchg
sarl
bnd
stc
ss
and
cmp
sbb
push
mov
adc
dec
dec
xchg
xor
push
bnd
or
jb,pt
sahf
test
into
adc
mov
pop
cmp
add
adc
xchg
push
fsubr
sub
das
lcall
scas
test
stos
push
or
mov
fiaddl
stc
dec
in
mov
inc
add
das
ret
lcall
iret
and
mov
lcall
and
sarl
sub
sbb
insl
hlt
ss
faddl
xor
pop
mov
inc
xor
push
cmp
mulb
adc
inc
outsb
or
lret
mov
fld
sub
loope
push
sahf
fmul
jecxz
mov
dec
out
xchg
loope
mov
aas
ror
xor
lock
sub
mov
push
ds
shll
adc
xchg
nop
loope
sar
inc
cwtl
gs
dec
mov
sub
pop
clc
dec
mov
loope
scas
and
loopew
mov
jl
mov
movsl
inc
shlb
jne
and
pop
cs
ja
mov
jmp
add
sarb
pusha
add
daa
je
vsubpd
fcomi
push
jns
sbb
jle
rolb
add
sahf
ret
mov
xor
cmp
and
movsb
pop
and
or
fadd
sbbb
cmp
popa
sbb
adc
loopne
rol
add
add
sbb
dec
loope
and
add
std
adc
divl
test
push
out
imul
sahf
and
lods
push
cli
bound
xor
mov
popa
mov
sub
movb
cmpsl
and
adc
adc
jne
mov
outsl
jecxz
mov
inc
mov
imul
mov
out
dec
mov
and
addr16
ja
stos
mov
inc
js
pop
mull
call
dec
inc
pop
call
mov
ret
cld
pusha
sti
or
test
call
cmp
jecxz
sbb
push
arpl
dec
jecxz
lahf
lock
outsl
push
pop
divl
sbb
shll
jmp
mov
ret
push
and
aam
jne
xor
mov
xchg
adc
pop
cs
ss
call
loope
sub
mov
loopne
add
dec
popa
adc
imul
fldl
fcom
jb
mov
rol
push
xor
and
movl
fcomip
out
sub
inc
dec
out
jecxz
shl
dec
pushf
mov
push
cmc
lock
push
pop
cmp
pop
inc
add
push
out
popa
pop
ljmp
out
dec
repnz
dec
add
outsb
push
rcr
mov
outsb
fisttpl
dec
shl
into
inc
or
sub
icebp
xor
push
stos
jns
xchg
fnstsw
cmp
cltd
shll
mov
jmp
inc
adcl
pop
ss
inc
or
cmp
inc
in
fcmovnbe
adc
lret
pushf
ss
addr16
dec
mov
push
jle
cli
into
icebp
mov
and
and
push
and
rclb
addl
subl
rcl
and
mov
aam
pusha
ret
jo
pop
inc
addr16
pusha
jne
push
mov
icebp
xchg
xchg
sbb
and
sub
scas
pusha
mov
cmpsl
pop
sub
inc
jns
jmp
dec
jb
or
mov
push
jl
hlt
or
xor
push
std
add
mov
mov
in
movsl
mov
gs
mov
ds
rclb
inc
cmc
pusha
xchg
nop
mull
dec
mov
mov
pusha
jmp
push
pusha
test
push
adc
lea
dec
add
es
and
mov
mov
rolb
ret
cmp
adc
pusha
sbb
scas
jp
insl
push
in
mov
and
cltd
pusha
movsb
pop
stc
sbb
inc
inc
pusha
jae
cmp
jbe
xor
sub
mov
dec
aas
cmpsb
add
mov
pop
int3
inc
lret
inc
out
lods
xlat
and
push
pusha
jo
or
pusha
sub
addr16
push
lds
inc
out
pushf
imul
cmp
push
stos
pop
pop
cmp
jg
dec
jl
pop
je
jmp
orb
cmpl
pusha
xor
inc
mov
fdivr
and
out
dec
pusha
mov
add
roll
rcrl
in
dec
in
add
sbb
push
cmp
add
push
inc
dec
jb
push
cmp
fnstcw
test
sub
mov
pusha
add
mov
mov
or
cmp
xor
mov
mov
in
es
pop
add
adc
icebp
or
mov
push
add
mov
xor
mov
pop
insl
fwait
mov
jge
mov
lock
add
ljmp
sub
imul
adc
dec
push
jo
gs
sbb
outsl
mov
pop
pusha
push
mulb
sahf
xor
bound
into
jmp
pusha
bound
mov
lret
rcll
in
and
mov
inc
fbstp
mov
pop
iret
xor
out
jmp
popa
inc
in
lods
pop
idivb
repz
gs
xchg
pop
jae
mov
fwait
inc
pusha
gs
mov
sti
fs
aad
fisttps
out
mov
mov
outsb
or
pushf
jl
fs
test
loop
and
pusha
cwtl
mov
pusha
jb
sti
cmp
sbb
or
cs
pusha
mov
pusha
adc
shlb
fidivl
mov
ss
mov
pusha
mov
insl
mov
push
shrb
in
add
sbb
push
adc
scas
inc
roll
fidivrl
mulb
arpl
cli
mov
fs
loop
mov
jl
push
mov
scas
cmp
scas
stos
inc
mov
sub
cmp
mov
pusha
cwtl
loope
or
mov
sbb
fdivr
aad
pusha
xchg
xchg
mov
aam
and
daa
aaa
push
mov
sub
and
movsl
pop
push
push
and
adc
inc
repnz
popa
pop
fnsave
sbb
pop
push
cmp
les
and
fmul
lea
ret
bound
mov
mov
jmp
jle
sub
adc
loopne
pusha
hlt
out
push
stos
shlb
push
fs
inc
inc
xchg
xor
push
push
xor
pop
movl
fs
ret
inc
in
movsb
adc
or
das
pusha
outsl
mov
or
aaa
and
pusha
test
pop
mov
fcoml
sub
jmp
jmp
into
adc
sbb
push
aaa
and
and
aam
andl
mov
pushf
inc
jecxz
pop
gs
lcall
inc
jnp
pop
hlt
jae,pt
shll
jmp
inc
int3
xor
pop
mov
inc
mov
xor
scas
add
frndint
inc
mov
incb
mov
ds
insb
into
mov
jg
dec
mov
loope
cmp
in
and
iret
cmp
sahf
mov
dec
rcrb
repz
jo
mov
jb
push
xchg
cltd
xchg
inc
push
cli
and
out
pusha
fs
xchg
inc
negl
cmp
jbe
bound
mov
js
mov
sbb
daa
gs
rcrl
cli
mov
in
movsl
hlt
pop
insl
and
adc
add
sub
inc
cmp
and
or
cmp
adc
pop
jge
out
jecxz
fildl
loopne
jae
fsubrs
jg
arpl
cmpb
iret
ds
adc
loopne
ret
push
mov
outsb
or
popa
leave
imul
arpl
sahf
mov
pop
je
mov
jecxz
inc
sub
cmp
aam
lock
jmp
jmp
shll
sahf
adc
imul
in
cs
jbe
nop
push
dec
imul
sarb
bound
mov
mov
jns
xor
xchg
sub
xchg
add
mov
sahf
and
mov
sbb
iret
cltd
lea
sub
dec
mov
pop
rorb
mov
push
mov
test
push
push
scas
lret
loope
sub
inc
sbb
mov
shlb
adc
sub
ret
negb
mov
cmp
gs
aas
push
sbbl
std
insl
out
pop
fsubr
mov
dec
jmp
addb
sub
ss
push
mov
sbb
dec
lahf
inc
xor
sbb
js
inc
xor
and
jmp
push
out
xchg
mov
mov
cli
movsb
and
sub
lahf
push
roll
sbb
bswap
xchg
adc
sbb
or
jp
testb
lcall
test
outsl
popf
inc
in
pop
ret
add
pop
js
or
dec
pop
sbb
iret
shrb
fistpll
pop
and
ret
leave
mov
fs
xchg
divb
fwait
add
sub
out
xchg
xchg
sub
divb
movsb
mov
lret
mov
jnp
cld
mov
hlt
jmp
lahf
and
dec
cmp
inc
add
ds
adc
inc
shlb
sbbb
int
jns
cli
idivb
jnp
mov
es
jbe
icebp
xchg
xor
pop
stos
sbb
jl
int3
clc
aas
sahf
in
dec
mov
leave
stos
ret
add
push
adc
into
cld
cmp
into
dec
jno
ret
aam
test
xor
mov
add
or
stos
dec
jl
jmp
cwtl
dec
bound
mov
mov
jae
jmp
add
jp
ja
sub
sbbl
cmpsb
jg
add
adc
cmp
cs
cmp
inc
test
ret
imul
pusha
bound
mov
outsb
push
adc
lcall
gs
jbe
loop
cmp
out
andb
pusha
dec
cld
mov
inc
fimuls
jmp
ds
lds
mov
pusha
adc
es
aam
andb
movl
out
xchg
loopne
pusha
loop
mov
push
pusha
and
int3
cltd
pop
jp
sarl
mov
andb
push
fs
sarb
jl
cs
xor
call
adc
sub
push
inc
loopne
in
xor
pusha
in
adc
inc
cli
fucom
dec
pusha
push
pop
arpl
gs
xchg
jne
mov
insb
mov
test
jae
jb
cmp
clc
jle
sbb
dec
xor
dec
push
pusha
xchg
jo
psubq
jmp
jg
stc
cmc
pop
dec
pusha
push
xchg
pop
rorb
dec
push
pusha
lret
fidivl
xlat
ss
pusha
out
pop
pop
or
pusha
add
jb
or
fstpt
out
jle
arpl
ret
mov
rorb
cmp
inc
dec
xchg
pusha
jmp
std
mov
test
dec
cmp
fs
stc
inc
fsubl
push
pusha
enter
andl
pusha
cmp
scas
les
pop
xchg
test
push
pusha
out
cmpsl
roll
pusha
pop
mov
dec
sub
enter
add
push
cmp
popa
jns
push
dec
iret
sbb
dec
mov
fs
leave
sbb
lds
test
test
pop
sub
pop
and
js
sbb
pusha
rolb
or
fs
push
cmp
sbb
bound
jno
dec
mov
jp
push
addl
popf
push
test
loopne
addr16
sub
pop
mov
add
pop
pusha
adc
repz
mov
mov
dec
lods
adc
sub
pop
sarb
adc
stos
scas
jmp
adc
mov
sbb
bound
sti
xchg
jecxz
jmp
pusha
pop
jne
add
push
push
lds
adc
daa
andl
pop
jecxz
pop
mov
add
jge
mov
mov
insb
pop
jbe
jo
and
xor
sbb
sbb
movsb
xchg
inc
mov
aaa
outsl
push
sbb
push
stos
pusha
jl
mov
addl
sbb
adc
cmpsl
push
scas
loop
sub
in
pusha
mov
out
std
xchg
pusha
inc
sub
mov
jp
jge
cmp
xor
push
and
pop
cmp
test
pusha
sub
inc
inc
in
pusha
xchg
fwait
xor
jbe
adc
rcr
popf
addl
xlat
and
roll
pushf
bound
das
cmp
mov
scas
mov
pop
and
movsl
xchg
pop
ret
sti
loop
and
xor
push
xchg
pusha
pop
mul
dec
iret
imul
cmp
sub
ja
in
test
outsl
push
pusha
daa
lret
fildll
pop
sti
sahf
pusha
fdivr
jl
pushf
aas
int
mov
pop
rorl
inc
ret
sub
push
pusha
movsl
xchg
push
cmpsl
pop
mull
pusha
aad
mov
int
in
arpl
or
jg
mov
sbb
adc
les
xchg
icebp
mov
stos
std
jbe
arpl
sub
xor
int3
adc
mov
aad
ds
dec
lock
jp
jl
mov
and
les
xor
add
and
mov
and
push
mov
or
sbb
ds
cmpsl
incb
or
pop
test
out
push
aas
loope
and
pop
or
inc
test
sahf
pusha
jge
fdivl
sbb
xchg
insb
pop
cmp
addr16
mov
sti
cmpsl
arpl
daa
out
ja
cmp
dec
insb
inc
ljmp
les
popa
loope
dec
xchg
push
fsubl
mov
call
lahf
lcall
movb
push
inc
push
sub
fisubl
int
mov
mov
imul
popa
xchg
pop
xchg
pusha
adc
or
mov
xchg
mov
sub
push
add
xor
lret
jbe
jnp
lcall
mov
pusha
and
leave
imul
insl
in
js
or
sbb
arpl
dec
shll
inc
pusha
jns
pushl
pusha
adc
inc
xor
test
int3
loopne
stc
sbb
inc
jl
minps
xor
pusha
cli
fldt
sbb
call
pusha
loope
pop
jge
out
push
cs
int
mov
incl
dec
pusha
or
cwtl
mov
inc
mov
faddl
mov
inc
mov
mov
stos
add
shlb
adc
push
xchg
dec
sub
mov
call
inc
and
jmp
popf
ja
or
leave
iret
call
push
mov
mov
jae
pusha
pop
push
ja
pop
jb
add
pop
lea
pop
and
daa
jne
outsb
sbb
jbe
jle
iret
lret
adc
push
jo
add
pop
lahf
add
ret
leave
loop
in
cld
gs
xor
insb
in
and
rolb
sbb
test
sar
or
mov
xchg
dec
loope
adc
movsb
pop
add
inc
add
nop
or
push
std
mov
mov
dec
ljmp
dec
and
pop
pop
je
fisttpl
xchg
inc
ljmp
fs
inc
or
into
push
fstpt
adc
adc
arpl
inc
stc
lahf
rolb
and
loope
pop
xchg
pop
push
stc
xor
fs
xor
mov
adc
adc
xor
test
push
dec
scas
ss
rcll
xchg
sub
repz
inc
push
mov
cmpsb
ret
outsb
and
xchg
xchg
loopne
jo
sub
ret
inc
adcb
cmpsl
movsl
sub
inc
idivb
adc
sbb
jns
mov
sbb
popa
push
mov
test
mov
sub
push
push
scas
cltd
out
iret
roll
inc
ja
push
sahf
sub
fidivrs
cltd
into
int3
jo
push
jle
out
xor
fwait
negb
bound
push
ficoml
pop
adc
adc
iret
lret
inc
sbb
daa
icebp
test
xchg
decb
sub
fs
fcom
or
add
dec
inc
dec
mov
inc
jae
jecxz
fiadds
jecxz
and
add
mov
fld
and
sbb
js
dec
dec
and
fidivs
bound
push
jp
jmp
mov
or
ret
test
or
enter
aas
insl
dec
ljmp
mov
or
or
out
arpl
pop
mov
lcall
daa
fidivs
pop
mov
fld
addl
out
popa
loop
mov
push
shlb
loop
aam
adc
pop
jo
cmp
xor
nop
xor
addr16
pop
es
mov
push
mov
adcb
adc
mov
sub
std
mov
sarl
mov
pop
inc
xor
sahf
sbbl
jae
and
loop
sub
inc
sub
pop
fbld
js
cmp
xchg
js
inc
loope
mov
ret
push
lahf
xor
jo
pop
out
ja
rorl
fwait
inc
adc
adc
mov
mov
xor
mov
or
dec
push
pusha
dec
and
bound
push
mov
sub
inc
dec
inc
mov
pop
mov
js
fidivrl
loope
lcall
ss
dec
jg
in
cwtl
mov
cwtl
jnp
push
cld
ret
cmpsb
cmp
inc
icebp
or
inc
mov
je
sbb
outsl
jo
pop
outsl
stos
addb
outsb
add
ret
jmp
rorl
sahf
les
cli
lahf
xchg
push
pop
lret
pusha
testb
shll
inc
flds
int3
and
jo
mov
push
mov
add
std
lcall
xchg
call
ret
es
outsl
push
push
loop
mov
fnsave
xor
outsl
inc
lret
in
incl
mov
jo
pop
or
pushf
bound
lods
sub
subl
ss
and
addr16
and
cmp
inc
push
shlb
mov
popf
insl
cld
jge
into
out
loope
cmp
adc
call
mov
shlb
stc
loopne
sbb
pusha
mov
rorb
lods
inc
movsl
pusha
std
and
mov
pusha
dec
out
lods
and
mov
mov
aad
and
inc
pusha
pop
rcl
rorl
push
pusha
repnz
cmp
mov
in
pusha
fstps
inc
push
mov
pop
jp
mov
mov
loopne
mov
popa
push
mov
ljmp
xorb
xor
nop
jl
and
cli
sub
arpl
lods
cmp
pusha
jne
cli
pop
adcl
loope
scas
inc
push
mov
pusha
cmp
xchg
hlt
xor
inc
movsl
sbb
jle
je
sbb
sub
int
push
icebp
adc
xlat
dec
fildl
enter
jns
xorl
push
push
cltd
popf
mov
add
xchg
dec
cld
pusha
or
loope
add
test
xor
xchg
xchg
aaa
jl
sti
pushf
sub
cmp
xchg
push
xor
or
push
jmp
sub
sbb
add
pop
pop
adc
jo
sub
push
sub
pop
jno
dec
add
testb
cld
push
inc
sub
cmp
xchg
adc
popf
and
popf
call
push
adc
rcrb
pop
cmp
jbe
sbb
lret
mov
push
xchg
xchg
out
fldcw
inc
xchg
adc
and
adc
adc
push
insl
sarb
xor
push
fstpt
jnp
sbb
or
jo
sbb
cmc
xchg
jae
ds
jmp
add
arpl
lret
jmp
inc
pop
ds
add
jae
addb
jmp
inc
mov
jmp
ljmp
in
push
and
scas
or
adc
inc
adc
sbb
je
sub
xor
xor
mov
dec
gs
push
icebp
mov
jo
inc
std
push
enter
aam
pop
jae
test
mov
sub
push
pop
pop
bound
adc
or
arpl
add
xor
pop
dec
push
cwtl
xchg
inc
inc
sub
bound
cmp
adc
sbb
push
dec
add
sbbl
es
ficoms
loopne
pop
or
mov
xchg
inc
or
adc
out
pushf
or
rclb
mov
ret
mov
mov
fxtract
cli
ja
mov
js
dec
or
sub
sti
insb
stos
push
mov
lds
or
stc
rorb
arpl
sbb
adc
bound
shrl
sbb
ficomps
or
adc
sahf
mov
cs
push
push
pop
mov
les
mov
cmpb
loop
sub
popa
loope
pop
pop
jb
add
int
jp
mov
int
xchg
clc
dec
push
push
aaa
and
fisubl
jecxz
adc
dec
sahf
mov
fldt
cmp
repnz
insl
push
inc
pop
insl
sahf
push
out
enter
ret
cmp
aas
ss
or
sbb
hlt
xor
shlb
iret
pushf
adc
dec
lret
sbb
je
xor
rcll
mov
and
stos
sbb
clc
dec
pop
xchg
mov
outsb
dec
icebp
and
mov
icebp
imul
js
hlt
xchg
insb
and
pop
mov
out
and
push
repz
jns
and
cmp
mov
xchg
jecxz
cld
call
insb
or
mov
lods
mov
dec
mov
xchg
loop
adc
movsb
adc
pop
push
test
sbb
sbb
sub
or
jo
aas
sub
sahf
gs
in
mov
add
popa
add
scas
sarl
inc
cmpsb
sahf
js
insb
or
jo
pop
hlt
adc
push
rcll
jmp
gs
xchg
je
adc
loope
and
ret
aam
jp
adc
in
and
cld
xor
push
mov
fldcw
test
xrelease
fldl2e
inc
gs
lret
in
lock
das
daa
popa
ret
andb
repnz
je
xchg
mov
cmp
pop
mov
jp
mov
in
dec
or
imul
daa
or
mov
and
add
dec
stos
fxch
addr16
and
jne
inc
add
pop
inc
or
mov
mov
mov
sbb
push
push
xchg
jbe
sub
mov
ret
std
divb
aad
add
insl
ret
push
les
xor
loope
sbb
repz
jbe
sbb
jo
hlt
clc
lahf
arpl
imull
mov
mov
xchg
clc
in
dec
iret
sub
cld
insb
adc
fldcw
insb
mov
int
insl
ret
sbb
movsl
adc
mov
outsb
cltd
mov
fdiv
pusha
jecxz
cld
jle
mov
ficomps
inc
scas
xor
hlt
movsl
inc
movsb
cmp
adc
inc
cmc
nop
pusha
mov
jmp
jl
adc
push
or
xor
enter
mov
movsb
cld
or
dec
pushw
fiadds
xchg
test
sbb
pop
pop
popa
fnstsw
push
test
aas
sub
xchg
lret
xchg
loop
mov
push
mov
and
xorl
outsb
cmc
popfw
xchg
jne
pusha
mov
pop
ss
cs
sub
or
aaa
xchg
cwtl
pusha
addr16
mov
add
mov
inc
add
dec
dec
lock
or
in
mov
insl
test
movb
dec
ljmp
xchg
jp
ret
mov
inc
stos
sbb
pusha
sbb
pop
adc
es
jo
sub
cmc
out
imul
xor
jl
xorb
out
test
es
mov
loop
pop
jb
std
pusha
sbb
fwait
xor
lcall
fdivr
jge
add
subb
pusha
outsb
pop
dec
idivl
stc
mov
pushf
outsb
enter
pop
and
aaa
push
popa
pop
inc
sub
das
fs
fmuls
enter
and
pop
mov
aas
popa
ja
insl
pusha
push
inc
negl
mov
outsb
mov
cld
arpl
pusha
adc
rol
dec
ret
std
pushf
jo
cli
neg
sub
arpl
ficompl
imul
test
jbe
mov
sub
adc
pusha
pop
adc
and
jl
cltd
or
xchg
and
jmp
movsl
mov
jecxz
loopne
push
pusha
ror
push
cmp
gs
jmp
mov
pusha
push
mov
icebp
jl
mov
xchg
test
push
jne
loop
add
mov
aad
fs
sbb
add
mov
jmp
fwait
mov
inc
xor
adc
mov
test
lock
movzwl
out
pushf
mov
sub
add
ljmp
add
hlt
fsubp
fs
jb
nop
stc
sbb
inc
das
js
push
dec
xor
pusha
xchg
cmc
pop
inc
jg
adc
pusha
jmp
mov
push
lds
and
pusha
cmp
daa
mov
pusha
lcall
mov
dec
jmp
jecxz
and
int3
fwait
inc
pusha
jo
cmc
imul
xor
mov
dec
pusha
xchg
mov
test
outsb
or
cmp
test
xchg
pusha
inc
in
inc
cmpb
sbb
pusha
mov
insb
dec
sub
shll
and
pusha
imul
out
xchg
fs
adc
dec
mov
jne
add
push
or
popa
adc
lcall
js
cld
or
sub
mov
repz
sarb
jl
out
jae
xorb
pusha
popa
or
dec
leave
jns
mov
mov
idiv
pusha
mov
xor
andl
and
mov
pusha
scas
or
dec
push
pusha
and
cld
movsl
mov
pop
clc
pop
mov
pusha
inc
clc
jp
sub
scas
jno
jge
and
pusha
addl
int3
cltd
mov
dec
sub
ror
cs
pusha
push
out
xor
cmp
int
cwtl
stc
pusha
outsb
popf
sbb
push
aam
fcoml
out
es
mov
push
jecxz
jl
mov
scas
and
xchg
stos
sbb
push
adc
mov
insb
mov
fbstp
test
aas
decb
fcoml
pusha
mov
cmpsb
cltd
std
push
pusha
aad
jnp
jmp
xchg
stc
xchg
pusha
jmp
movsb
dec
jno
rclb
loope
mulb
inc
jmp
xor
push
cwtl
in
adc
movsl
cmp
mov
dec
fcomp
pop
push
or
jecxz
pop
push
pusha
leave
lods
or
lea
sbb
test
jl
lock
aaa
jmp
add
andl
mov
pop
pusha
adc
idivb
ss
cmp
ret
stos
arpl
lret
pop
or
loope
or
mov
inc
ss
or
into
int
jecxz
xor
data16
movsb
lods
fs
lret
mov
dec
dec
mov
pusha
push
adc
sub
pusha
xchg
cmc
lahf
daa
add
pusha
push
in
mov
xorl
ljmp
pusha
and
loope
jecxz
sbb
clc
or
dec
pusha
rolb
push
mov
addr16
add
movsb
leave
dec
xchg
mov
sbb
fidivrs
aaa
cmp
jle
mov
and
out
adc
pop
sub
loop
pushl
popa
pusha
repnz
aam
ret
pop
push
mov
cmpsl
loop
pop
in
pop
cmp
pushf
aas
sahf
mov
jo
clc
ss
sbb
cmp
daa
sahf
fbstp
jns
inc
xor
pusha
insb
in
ret
cltd
jmp
out
inc
push
icebp
mov
out
jl
inc
mov
and
into
fmuls
fs
xlat
xor
xorb
outsl
mov
sub
dec
pusha
or
imul
sbb
inc
mov
outsb
pusha
mov
sti
imul
ss
pusha
xor
addl
ret
xchg
add
movsl
jnp
fs
jne
mov
push
pusha
sahf
jecxz
xchg
stc
add
push
pop
push
popa
mov
out
sub
pop
cmp
enter
adc
pusha
inc
filds
or
pusha
ret
loopne
adc
aaa
pop
fcmovnbe
aam
ret
mov
jp
mov
push
repnz
pusha
mov
fs
les
jl
repz
jb
pusha
push
jbe
aam
out
mov
jmp
xchg
idivl
sub
lret
mov
mov
jl
xchg
push
dec
mov
cmp
push
jecxz
mov
pusha
popf
inc
daa
ret
jl
ficoms
fdivs
dec
push
lahf
xchg
std
pop
jl
xchg
mov
pop
test
dec
push
pusha
xor
pop
xor
xchg
inc
xchg
xchg
adc
cwtl
pusha
test
test
jnp
sbbb
int
fistpll
mov
repz
adc
cmp
stc
imul
and
mov
pusha
pop
test
add
or
add
pop
pusha
cmp
xor
cld
mov
test
lret
or
testl
dec
jg
jge
pop
sbb
loope
mov
inc
push
xorb
mulb
pop
jno
or
fdivrs
jecxz
push
mov
and
sub
loope
movsl
mov
into
dec
aas
pusha
push
shlb
scas
pop
xor
push
inc
pop
jmp
nop
mov
mov
insb
js,pn
aam
mov
jp
ss
pusha
jnp
cltd
mov
imul
shl
repz
pusha
shll
sub
adc
clc
add
test
in
push
push
adc
dec
insb
mov
and
loope
sub
pop
mov
push
bound
mov
sti
xchg
add
mov
lock
roll
add
cmp
mov
jp
lods
mov
outsb
push
ficoml
sub
jge
jnp
out
pop
int3
hlt
and
imul
or
and
cmp
test
bound
dec
xor
imul
pop
cmc
dec
mov
popa
jl
inc
lds
dec
int3
into
pop
pusha
les
cs
repz
xor
aam
nop
jne
jge
ror
sahf
pusha
pop
add
mov
mov
pushf
adc
iret
arpl
call
insb
rorb
pop
cli
or
pusha
push
xchg
adc
pusha
inc
shlb
loopne
add
mov
popf
or
sub
aas
sti
aam
pop
negb
mov
lahf
out
fwait
mov
inc
cmp
push
gs
mov
int3
mov
dec
aam
pusha
adc
pushf
mov
add
shrl
pop
dec
cli
mov
shrb
pusha
out
out
shlb
xor
fcoms
filds
test
into
pop
inc
jg
jle
dec
sub
inc
jns
ret
adc
ror
lods
jo
pushf
popf
jmp
fsubrl
or
cwtl
std
shll
call
inc
pusha
cld
inc
pop
mov
sti
addr16
lret
iret
and
jb
add
dec
outsl
sahf
ljmp
pop
sub
mov
jno
pusha
insl
outsb
push
pop
imul
lods
lret
cmp
sub
pop
push
je
xchg
dec
cli
das
subl
negb
pusha
or
add
insb
hlt
sbb
inc
fidivl
jno
sbb
inc
int3
dec
push
jl
scas
mov
pop
ret
cmpsb
pusha
jmp
and
push
lods
push
sbb
mulb
ficompl
cmp
cld
loopne
out
ret
and
jae
rcr
dec
xlat
out
xchg
pusha
adc
cld
or
mov
sbb
xchg
pusha
insl
gs
jl
js
push
mov
test
mov
ss
imul
cli
dec
mov
aas
xor
lahf
push
lods
adc
pop
daa
loop
xchg
fisttpl
push
jmp
adc
lods
int
andl
testl
out
lahf
pop
pop
shrb
adc
jp
loope
push
mov
popf
mov
imul
sbb
scas
cmp
push
or
lret
ja
ret
mov
mov
cmp
adc
into
out
sbb
imul
push
mov
and
xchg
and
ljmp
jno
and
pusha
dec
mov
xchg
and
in
mov
sbb
int
pop
xchg
xor
mov
pop
imul
loope
inc
cltd
mov
and
push
jo
cld
cmp
push
pusha
jle
cli
or
out
roll
cmpsb
es
fldenv
stos
test
cmp
pusha
mov
mov
int3
pusha
sub
cld
inc
xor
loope
pushf
fbstp
inc
andb
std
mov
out
lahf
jecxz
cmp
mov
xchg
es
rorb
fwait
push
sahf
dec
pusha
and
les
pop
clc
mov
insl
pusha
shl
in
pop
mov
adc
cs
and
or
xchg
inc
lcall
cs
clc
ret
pop
jecxz
xchg
cwtl
popa
mov
jb
call
mov
pop
insb
push
mov
loop
adc
fucomp
sahf
addr16
decb
jl
movsl
test
adc
inc
push
mov
ss
xchg
js
repnz
in
stc
pusha
rcrb
cwtl
das
lods
pop
ret
mov
addr16
jmp
sub
outsl
mov
and
shll
inc
insl
xor
add
inc
pop
jmp
hlt
int3
loopne
xchg
inc
inc
add
xorb
ffreep
push
incl
jl
sbb
sahf
and
jp
aas
xchg
pusha
pop
xor
fs
sub
in
pusha
jmp
mov
roll
insb
xor
lods
xchg
inc
arpl
fdivrs
push
xor
lret
pusha
mov
lods
loopne
addr16
movsb
push
adc
test
popa
out
repz
push
pusha
mov
ret
inc
shlb
scas
das
fs
in
pusha
sub
pop
mov
mov
in
jmp
pusha
test
sub
sbb
push
xchg
rcl
out
pusha
dec
inc
ret
mov
in
cmp
loop
jnp
adc
repz
pop
inc
cmpsl
jecxz
xchg
lret
mov
xchg
mov
pusha
mov
icebp
pusha
call
in
pop
push
ret
iret
lods
pusha
cmp
orb
jl
inc
testl
insb
aad
pop
fiadds
or
dec
arpl
lahf
pop
xchg
adc
iret
daa
bound
jmp
and
arpl
pop
imul
fsubs
cwtl
out
fs
or
jae
mov
sub
jo
scas
cmpxchg
js
mov
inc
pusha
aam
int
iret
lcall
test
repnz
xchg
mov
jae
add
jge
pusha
in
adc
sbb
lret
jo
out
xchg
dec
jl
test
call
cmpl
push
mov
test
push
pop
mov
in
pusha
shlb
add
pop
fstpl
loop
xchg
insl
lds
push
loop
imul
into
mov
pusha
insb
pop
lahf
pop
mov
sbb
dec
add
adc
sub
arpl
xchg
aaa
je
pusha
sbb
cmc
repnz
pop
jns
inc
es
or
or
adc
pusha
lret
gs
mov
data16
sti
adc
in
dec
std
fdivrl
inc
inc
arpl
pusha
gs
cmp
outsl
mov
addl
adc
sbb
icebp
pop
ds
adc
ret
cmc
pusha
gs
dec
jl
pop
fsubrl
cmp
xor
daa
pusha
mov
dec
stc
push
test
ret
xchg
arpl
push
fsub
imull
jl
insb
pop
arpl
rclb
cmpl
loope
hlt
pop
icebp
addl
addr16
xchg
and
std
fs
in
js
mov
inc
mov
sbb
mov
jl
outsl
mov
sahf
arpl
push
or
lock
in
cltd
jo
xlat
pusha
mov
enter
aad
pusha
cmpsl
aaa
sub
push
hlt
sub
cmp
inc
or
daa
jae
cmp
stc
pushf
xlat
pusha
mov
push
rcrb
and
push
push
dec
loopne
pushf
inc
call
cmp
loopne
fistps
adc
mov
bound
sub
pusha
lret
xor
dec
cmp
jmp
sbb
cli
mov
iret
pop
jmp
jnp
int3
insb
jo
imul
push
int
pop
jmp
addr16
jl
test
cmp
popa
lahf
sbb
sbb
xlat
pop
pop
cmc
dec
sbb
pusha
pop
les
pop
into
mov
cs
dec
pusha
sbbl
and
es
jecxz
popf
cltd
cmp
mov
pusha
lret
xchg
mov
pop
loope
nop
xchg
mov
jnp
mov
pusha
pop
xchg
and
add
dec
pop
insl
add
lcall
cmp
lds
lahf
and
mov
sbb
mov
push
mov
add
pop
jo
les
out
bound
ret
repz
int3
movsb
xchg
aas
into
push
cmp
jecxz
xchg
in
adc
fcompl
jo
inc
jl
mov
or
mov
jge
jns
sub
pusha
out
inc
jp
xchg
sahf
pusha
repz
sub
pop
les
mov
mov
pusha
or
test
pusha
call
jbe
jle
xchg
mul
jae
mov
mov
iret
mov
pusha
mov
pop
jl
mov
cmp
mov
data16
mov
lods
out
push
add
inc
push
je
lods
sbb
xchg
pusha
ja
bound
gs
arpl
ficoml
lock
bound
pusha
cmc
sbb
into
pushl
adc
sbb
popa
mov
mov
add
stos
lea
fs
ret
pop
mov
add
lret
pop
dec
aad
pusha
adc
int
mov
add
mov
cmp
mov
mov
into
mov
and
and
push
xchg
pusha
hlt
es
add
popf
push
insb
push
xor
ret
jo
mov
jp
ljmp
mov
fs
xor
and
push
xor
xchg
pushf
cmp
sub
jecxz
add
jne
xchg
push
orb
inc
sti
int3
pop
mov
inc
scas
pop
rcrb
rcl
cmp
cmp
out
aam
int3
xchg
hlt
out
mov
js
push
into
repz
sbb
aad
mov
adc
in
sbb
sub
test
adc
popa
push
les
lea
inc
fldl
shll
push
rorb
pop
jne
inc
mov
hlt
pushf
aas
jecxz
sbb
dec
or
cmpsl
cmp
jne
jnp
jb
nop
lods
xchg
pop
faddl
mov
xor
add
popl
mov
adc
arpl
stos
aaa
mov
xchg
shlb
add
mov
loope
sbb
cltd
mov
out
imul
mov
sbb
lahf
ret
sbb
push
or
sbb
inc
popa
or
mov
dec
ljmp
mov
push
mov
push
adcl
or
lret
mov
iret
out
adcb
rcll
movsb
or
push
jb
cmpsl
xchg
dec
lds
jl
fbld
xor
lea
lret
int3
mov
mov
xor
add
ret
dec
lret
insl
ds
cwtl
add
or
movl
rol
xchg
dec
xchg
add
jmp
xchg
xchg
jo
cld
pop
mov
and
add
cwtl
rorl
push
jbe
push
mov
loopne
cwtl
nop
test
aas
icebp
push
pop
or
jnp
int
cltd
push
push
imul
arpl
roll
pop
imul
xor
stos
rclb
aas
jl
sub
and
popf
push
xchg
call
mov
inc
fwait
xor
arpl
rorl
dec
sub
or
ret
pop
dec
mov
mov
sarl
mov
jnp
ficoml
or
sbb
fbstp
pop
jp
jmp
mov
xchg
jle
ss
fdiv
adc
das
roll
pop
sbb
mov
dec
leave
mov
adc
cmp
icebp
shl
push
std
and
popf
bound
bound
insl
dec
jae
out
push
fldt
mov
ret
sti
mov
xchg
push
fdivrl
cwtl
adc
dec
xchg
inc
mov
mov
je
mov
push
inc
lods
sti
fwait
jnp
arpl
rcll
mov
xchg
ljmp
pop
add
test
aaa
out
mov
mov
dec
cmp
jmp
lret
and
xor
in
sub
sbb
rcr
mov
mov
mov
repz
lcall
jl
or
jns
cmp
into
addb
aas
stos
fisubl
movl
lods
daa
loopne
inc
lock
mov
xor
int
fs
and
mov
repnz
pop
inc
add
add
push
mov
sbb
loope
push
movsb
clc
push
shrb
insb
ljmp
aaa
dec
ret
add
cld
aas
sub
add
mov
lret
xor
xor
cld
cmp
sarl
lock
cmpsl
hlt
cli
cmp
aaa
add
cli
aaa
push
bound
mov
jnp
adcb
xchg
push
pop
movsb
sub
in
lods
test
mov
cmp
xchg
pop
loope
mov
fmull
popa
shll
in
pop
subb
xor
lock
cmp
xor
fstpl
push
bound
pop
pop
add
testl
xor
push
dec
fcmove
add
or
icebp
daa
popf
dec
xor
push
ret
inc
dec
ret
cmp
push
les
adc
das
inc
adc
xor
loopne
sbb
mov
ffreep
sarl
ja
sub
fxch
lds
and
and
mov
and
mov
inc
jecxz
pop
inc
adc
xor
test
ret
shll
dec
in
mov
mov
or
push
das
test
nop
out
push
test
mov
inc
sub
inc
push
mov
sub
loop
mov
sub
sbb
adc
clc
xchg
mov
ret
fs
rolb
push
xor
lock
shl
fbld
adc
stc
movl
inc
es
dec
into
push
push
dec
pusha
imul
inc
ret
rorl
ror
fstl
adc
mov
into
out
pusha
lret
mov
adc
adc
jo
cmpsb
push
mov
cwtl
mov
fsts
sub
mov
pusha
jae
jp
fdivl
add
imul
fcmovnb
cwtl
mov
ljmp
mov
lcall
mov
cmpb
pushf
cli
gs
and
loope
dec
push
xchg
pusha
iret
adc
daa
lcall
inc
jle
pop
push
loopne
enter
stc
cmp
mov
hlt
jge
stos
add
sub
pusha
pop
out
xor
sbb
mov
or
add
ret
mul
call
loope
push
dec
lcall
jge
jb
stos
mov
pusha
pop
pop
rcr
push
mov
xchg
pop
inc
je
cmc
call
push
xor
shll
ja
hlt
pusha
maxps
inc
and
dec
pusha
jle
movsl
lret
xchg
pusha
fistpl
inc
fadds
xlat
and
and
das
aas
push
adc
adc
xor
pop
mov
pusha
in
mov
push
add
pusha
jno
outsl
loop
pop
ljmp
mov
loop
sahf
pusha
enter
orb
pusha
sbb
mov
out
xor
push
push
cmpsl
jecxz
jns
insb
js
xor
mov
pavgb
lcall
out
inc
in
xchg
jne
mov
sti
ds
pop
xchg
nop
data16
es
stos
dec
xchg
punpcklbw
stos
int3
push
divb
loopne,pn
je
jns
pop
bound
dec
pusha
mov
test
mov
enter
and
icebp
pusha
push
data16
sub
mov
xchg
cmp
jl
fdivrs
push
sub
pop
das
jecxz
cmpsb
das
mov
mov
daa
pusha
jle
pop
les
fdivr
sbbb
mov
or
stos
sbb
and
mov
cmp
arpl
dec
stc
aas
pusha
and
pop
out
push
cmp
rclb
outsl
and
lret
pusha
push
and
pop
leave
mov
mov
sub
mov
mov
or
pop
push
push
fcoml
imul
andl
mov
rclb
lods
pusha
xorb
or
add
in
and
dec
test
xchg
adc
sarl
roll
inc
or
pusha
jo
mov
fsubl
sub
xchg
sub
and
pop
mulb
andl
inc
mov
xor
pusha
mov
inc
daa
pusha
loopne
scas
nop
lds
jnp
popa
lea
pavgw
js
test
in
jg
pusha
adc
sbb
xor
xchg
xchg
and
iret
cmc
cmp
bound
outsb
dec
mov
inc
fs
xchg
push
jae
shrb
lds
xchg
xchg
icebp
pusha
sbb
aas
and
iret
pusha
inc
cmpsb
cwtl
pop
and
jnp
hlt
mov
cmp
cmp
pusha
cwtl
jns
movsl
jl
pusha
mov
fsub
loope
insl
iret
pusha
scas
in
cwtl
sbb
icebp
ror
mov
jo
fnstsw
bound
ja
faddp
cli
dec
in
adc
out
insb
popf
bound
pop
jno
bound
or
jns
ret
or
push
pusha
sub
test
push
jnp
cs
or
sub
das
insb
cmp
fistps
sub
fs
daa
fs
std
bound
xchg
xor
inc
subl
mov
jbe
pop
fbld
in
decl
sub
fidivl
xchg
jae
cmp
call
subb
dec
mov
inc
bound
inc
jl
outsl
dec
addr16
and
jno
testb
pop
fcmove
in
xchg
mov
jg
inc
icebp
inc
sahf
mov
dec
sahf
inc
in
or
inc
or
push
scas
das
or
fs
adc
jecxz
outsl
enter
pusha
mov
je
jne
hlt
repnz
pop
jae
pop
aas
lcall
pop
add
cmc
sbb
fisttpll
lret
cmpsb
mov
dec
dec
mov
push
ficoms
or
pop
addr16
and
pop
fisttpl
or
adc
inc
dec
rcrb
pop
faddl
out
sahf
jo
push
mov
mov
jmp
lcall
xchg
jl
fwait
jns
or
stos
mov
outsl
xor
cltd
sub
dec
dec
pusha
sbb
jp
mov
mov
enter
in
and
mov
outsl
out
pusha
fs
ret
xor
incl
push
push
test
and
dec
pop
pop
pusha
pop
dec
xor
fs
xchg
test
pusha
sahf
or
push
cltd
andl
xor
and
adc
mov
imul
mov
sub
scas
out
mov
cs
cmp
dec
pusha
sti
mov
mov
pusha
or
add
in
out
push
test
addr16
jo
lret
jg
lock
mov
add
xchg
mov
ret
jae
push
sbbl
xor
dec
or
pusha
push
sub
ljmp
pusha
pushf
lea
rclb
cmp
andb
pop
pusha
add
jbe
inc
add
add
add
ss
leave
mov
jo
xchg
xchg
std
clc
lds
pusha
mov
mov
dec
sub
xchg
faddp
dec
pusha
or
mov
inc
pop
sti
popa
add
jl
bound
fistpl
xchg
and
pusha
out
mov
inc
cmc
pusha
jle
or
and
test
mov
dec
dec
sbb
or
push
mov
pop
jecxz
xchg
clc
hlt
jl
mov
icebp
push
pusha
pop
in
inc
pusha
sbb
jnp
add
adc
mov
arpl
pusha
and
add
pusha
adc
mov
je
mov
mov
jmp
insb
sbb
and
icebp
lods
push
adc
clc
lret
sub
xorl
pusha
adc
xor
push
adcl
fs
xlat
lcall
hlt
pop
cmpsl
mov
push
loop
inc
sti
je
pusha
cwtl
loope
aaa
int3
cmp
pop
jnp
pop
mov
fistpl
cmp
add
repnz
cmp
arpl
cmp
lods
pop
outsl
ficoms
push
inc
shlb
scas
cmpl
jle
mov
in
add
add
pusha
ret
xor
push
pop
or
pusha
cmpsb
clc
dec
repnz
inc
pusha
out
inc
daa
fwait
enter
mov
pop
pop
push
repnz
clc
xchg
pusha
push
lea
fs
push
cmp
rcrb
arpl
mov
pusha
dec
sub
jns
sbb
fs
xor
dec
jmp
subl
in
in
mov
mov
dec
jl
inc
cmp
sbb
aaa
shll
add
jb
faddl
mov
lds
pop
lock
fs
sahf
and
inc
or
sarl
push
loopne
ret
loope
adcb
inc
in
jl
xchg
sbb
inc
mov
and
xor
jecxz
sbb
cltd
adc
sub
sbb
sti
popf
lss
or
fs
mov
and
xor
fisttpl
mov
sub
ljmp
and
ja
hlt
pusha
fwait
shlb
mov
cmp
orb
fst
stos
jle
adc
shll
movsl
xchg
adc
mov
arpl
xchg
loope
xor
xchg
popa
or
rcll
mov
arpl
and
arpl
push
imul
lret
les
mov
push
imul
lahf
rcrb
test
adc
out
mov
mov
jmp
add
xor
jns
dec
pop
pop
inc
je
sbb
push
cmp
in
adcl
lods
repnz
pusha
mov
jnp
dec
xlat
sub
xchg
pusha
bound
lret
cmpsb
xorb
push
jecxz
pusha
rorl
les
sbbl
dec
sbb
imul
jp
popa
cld
pop
or
movsb
pusha
mov
addr16
sub
and
scas
mov
test
inc
sti
ret
data16
xor
ret
ficomps
enter
roll
mov
inc
into
sub
fwait
xor
and
add
sbb
movsb
jecxz
fiadds
and
push
aaa
inc
insb
daa
push
lds
inc
dec
cmp
int3
pop
cmc
xor
cmpsb
sub
aas
test
mov
sbb
adc
div
jb
lahf
pusha
fcompl
push
shll
fs
sbb
inc
jge
mov
cld
jmp
js
fdivrl
cmc
lea
adc
test
add
enter
testb
dec
outsb
xchg
jecxz
xor
les
ja
pusha
or
cmp
cmp
mov
push
mov
cmpsl
repz
mov
and
adc
mov
out
mov
jmp
jbe
adc
pusha
mov
xchg
out
sbb
dec
fldcw
daa
mov
push
movsb
sub
push
dec
pop
out
jle
addr16
add
sbbl
aas
loope
cmp
xor
sbb
fcmovb
mov
and
and
inc
jp
sub
cs
dec
pusha
mov
test
cmp
imul
and
test
jecxz
iret
xchg
shll
in
dec
je
repz
out
leave
pusha
shr
cmp
arpl
jo
dec
ja
xor
lahf
push
cltd
testl
fs
repnz
ljmp
cmp
js
daa
xchg
loope
xor
stos
lret
xchg
xchg
pusha
movl
xchg
mov
repz
pusha
and
pop
sub
shrb
jl
sti
fistpl
cmp
arpl
stos
sub
out
xchg
scas
jb
cmp
mov
xor
ljmp
orb
adc
mov
or
cmp
lret
dec
dec
jl
cmc
gs
inc
es
pusha
int3
in
add
xchg
sbb
ja
mov
aaa
dec
stos
shlb
insb
lret
jns
push
dec
jge
scas
loope
pusha
xchg
add
sub
xlat
pusha
rorl
int
int3
and
jg
test
and
mov
adc
or
dec
in
and
pusha
sbb
pusha
lahf
and
and
gs
mov
pop
insl
bound
mov
movsb
mov
pusha
stos
sub
mov
mov
sbb
imul
mov
sti
stos
inc
lock
adc
cmc
cwtl
or
jmp
insb
cmp
cmp
jle
jp
insb
outsl
xor
and
mov
bound
xor
popf
mov
hlt
insl
insb
out
cmp
ret
mov
sub
cmpsb
cs
std
stos
push
loop
pusha
hlt
xchg
rolw
push
push
test
popf
in
pop
cs
notl
fwait
sub
xchg
shr
ret
into
jl
add
lock
sbb
insb
jl
movsl
xlat
xor
test
bound
push
in
add
scas
cltd
into
push
sub
cmp
lcall
push
push
jle
sbbb
stc
fwait
xorl
es
xlat
dec
cld
fbld
shlb
inc
out
push
out
std
lret
mov
insb
ss
jge
arpl
pop
pop
call
dec
dec
lods
mov
pusha
in
inc
scas
insl
push
fnsave
and
push
or
inc
stos
xor
jmp
shll
or
pusha
clc
addr16
enter
subl
sbbb
aas
mov
lret
idivb
pusha
sub
pop
dec
cmc
sahf
pusha
icebp
pop
cli
inc
repz
push
enter
mov
mov
mov
out
jle
mov
dec
mov
pusha
mov
hlt
test
fs
nop
stos
lods
out
ljmp
push
pop
pop
push
jl
dec
loopne
fstpt
dec
pop
xchg
dec
outsl
jno
jb
adc
and
push
mov
add
jle
sub
loope
jae
push
add
push
jo
adc
imul
inc
mov
inc
push
jnp
jo
pop
outsb
dec
mov
jle
mov
jo
ret
aaa
call
inc
mov
sti
lods
sbb
hlt
icebp
mov
and
and
aas
int
jl
add
dec
bound
lds
push
divb
test
inc
loope
and
out
xor
hlt
dec
cld
test
loopne
cld
aad
cmp
xor
pusha
sbb
stos
cwtl
or
aas
cs
cmp
fucomp
fcomi
add
mov
std
roll
insb
jb
xchg
push
insl
jle
cltd
jmp
jmp
pop
jae
add
iret
pusha
test
test
outsb
pusha
fists
xchg
jge
std
cmp
pusha
push
mov
sub
sbb
jl
fnstenv
sbbb
pusha
leave
mov
jo
pop
push
sub
cmpsl
xchg
jmp
pop
fucomp
pusha
dec
add
iret
inc
jle
sbb
fisttps
sti
cli
repz
sub
outsb
push
xchg
es
xchg
pop
and
pop
mov
dec
sti
xor
pusha
cmp
xor
ret
mov
pop
dec
fdivr
sti
shlb
in
stc
xorb
pusha
arpl
add
pop
and
or
movsb
push
mov
jns
jp
les
out
incb
or
jo
bound
hlt
arpl
pop
fsubl
jl
ficompl
loope
dec
gs
pusha
jge
adc
scas
jb
dec
out
movsb
pop
lea
or
inc
in
jecxz
lahf
loopne
test
adc
repz
nop
dec
fistpll
pop
stos
pusha
dec
pop
outsb
pop
scas
mov
xchg
adc
movsl
mov
aad
sbb
sbb
stos
dec
xor
ret
mov
stc
push
mov
mov
pusha
inc
jbe
nop
test
jb
and
jns
adc
lds
pop
jne
sub
ret
pop
je
xchg
sub
jmp
mov
push
add
insb
jb
push
fwait
sbb
pusha
adc
and
sub
out
pusha
xchg
sub
bound
xchg
xor
imul
repz
mov
push
and
fsubp
mov
mov
pusha
out
aas
loope
cmpsb
fdiv
fistpl
int
push
jecxz
dec
xchg
adc
pusha
rolb
mov
dec
pusha
dec
test
rcrl
pusha
lods
sub
cltd
cmp
pop
stos
imul
decb
inc
adc
in
ja
fadds
popf
into
push
mov
fisubrs
sub
fucompp
xor
js
mov
mov
in
fstpt
movsb
sbb
je
and
ficoml
sub
add
je
dec
in
xlat
push
xlat
jmp
mov
loope
mov
rcll
lods
xchg
xchg
mov
mov
gs
xor
outsb
add
mov
sub
mov
imul
addr16
xlat
aam
and
push
sub
cmp
pop
mov
out
inc
push
xchg
pusha
mov
pop
inc
lret
cltd
xor
dec
jo
ljmp
hlt
xor
add
cmp
shlb
and
in
aaa
insb
outsl
push
mov
cwtl
mov
sbb
ret
fninit
hlt
lea
outsl
add
push
iret
rclb
sbb
jecxz
ret
jbe
jmp
data16
mov
mov
scas
rorl
pop
xor
or
aaa
sub
enter
lcall
xor
rol
test
cld
fwait
jo
mov
cli
pop
sub
push
ss
and
leave
jge
mov
movl
mov
jl
loopne
cli
mov
or
mov
mov
mov
inc
call
inc
nop
int
push
fistl
and
jp
test
xchg
outsb
dec
push
pusha
gs
push
rclb
outsl
pop
mov
pushf
stos
mov
roll
dec
xchg
mov
and
add
mov
faddl
ret
bound
mov
push
pusha
mov
aas
mov
dec
movsb
loope
push
and
xchg
or
dec
ficoms
out
dec
jnp
inc
outsl
and
inc
sub
fcomi
mov
and
scas
cmp
testl
mov
push
std
sbbb
hlt
daa
fildll
pop
pushl
pop
sbb
add
push
movsl
add
in
fs
testb
les
repnz
push
les
mov
ret
pop
cmc
cmp
call
push
jle
sbb
enter
pusha
rol
mov
adc
cmc
lret
dec
sub
cmp
sub
hlt
jl
hlt
or
or
or
mov
scas
movhps
loope
mov
imul
xor
pop
out
rcll
fcmovne
sbb
push
popa
mov
mov
ret
cltd
mov
push
bound
push
clc
sar
mov
mov
jp
xor
dec
test
mov
in
sub
push
dec
aaa
push
icebp
cmp
popa
into
adc
imul
sbbl
dec
lahf
sti
or
inc
stos
bound
add
cmp
dec
into
push
neg
rcr
push
adc
push
daa
into
adc
push
xchg
outsl
addr16
cmc
or
aas
ljmp
test
cmp
push
sub
xchg
arpl
and
ret
iret
out
cmp
add
aam
push
lock
push
icebp
mov
push
and
push
sub
jg
inc
mov
cmp
mov
addr16
frstor
push
xchg
iret
cli
mov
test
shll
or
aad
pop
inc
sbb
loopew
or
and
and
sbb
and
xor
outsb
adc
add
addr16
mov
test
das
popa
xchg
adc
js
mov
mov
dec
scas
test
cmpsl
leave
xchg
lahf
push
aam
leave
push
jbe
xor
pop
push
pop
clc
dec
in
outsb
idivl
ret
mov
fsubp
sub
push
call
xchg
test
sarl
add
sub
mov
adc
cmc
mov
data16
dec
sahf
add
jae
loopne
and
lea
cmp
jns
jnp
pop
lods
hlt
and
sbb
or
or
lcall
push
insb
jg
cs
adc
arpl
jo
push
fnstenv
xor
mov
jbe
lahf
sub
lret
rcrb
inc
mov
push
add
and
pop
cwtl
sbb
scas
adc
or
imul
loope
or
cmpsl
add
jb
addb
repnz
mov
push
movl
pop
push
sub
adc
data16
inc
xchg
inc
jecxz
popa
rorb
cmp
insb
je
add
add
repz
rcll
stc
jbe
mov
sub
les
out
push
mov
push
mov
scas
test
loope
mov
sbb
stos
pusha
xchg
add
roll
xor
int3
push
popa
jno
ret
mov
and
mov
lea
andl
repnz
out
sahf
mov
popa
dec
ret
ret
sti
or
jge
scas
aaa
repz
fimull
push
xchg
pop
lret
cmc
cmpsb
loopne
sub
pop
data16
and
mov
pop
and
stc
jnp
or
out
cmp
xchg
or
aas
outsl
dec
ret
cld
mov
test
dec
xor
in
mov
mov
push
xor
lcall
mov
add
mov
pop
lretw
jecxz
fsub
popa
sahf
addr16
stos
lcall
push
xchg
lock
test
mov
jno
xchg
sti
aaa
mov
imul
hlt
pushf
clc
jb
dec
mov
jo
sub
fistpll
fwait
aaa
stos
xor
mov
sahf
inc
aas
popf
jae
mov
fsubs
adc
loopne
cli
in
mov
repz
push
mov
sub
filds
mov
out
add
sbb
jno
fcmovbe
loope
mov
scas
and
fdivrl
xlat
ret
insb
ret
xchg
cmp
push
jnp
push
daa
mov
inc
loopne
cmp
jo
repz
mov
jl
out
outsl
sbb
out
stc
xchg
push
fdivs
xchg
dec
test
dec
cs
imul
orb
popa
dec
sarl
loopne
stos
fadd
popa
or
scas
xor
jo
cmp
lahf
mov
jb
icebp
roll
adc
cmc
je
ret
xchg
xchg
push
ljmp
loopne
sub
daa
aaa
jnp
fmull
cmp
mov
dec
and
xchg
loope
cmpsb
ret
gs
test
lods
mov
pop
pop
enter
or
pop
in
mov
push
imul
push
insb
jne
xchg
xchg
push
mov
push
mov
sti
mov
pop
out
ror
lods
je
jecxz
fisubrs
in
sub
push
popa
jmp
adc
mov
movsl
dec
jle
lahf
loop
inc
outsb
mov
testl
insb
and
lea
loope
jae
inc
push
push
lods
mull
les
sbb
je
sbbb
push
leave
iret
cmp
imul
repz
outsb
outsl
out
imul
add
xor
je
mov
lods
cmp
jle
xchg
jl
inc
lcall
arpl
lahf
xchg
icebp
insb
xchg
sbb
xor
sarl
movsl
js
lods
xor
xchg
mov
and
pop
je
push
dec
push
mov
adc
js
xchg
jl
mov
sub
mov
fs
leave
insb
add
gs
mov
xor
arpl
push
xor
cltd
lret
pop
test
cmp
aam
mov
lcall
jle
push
flds
pop
ss
sbb
addr16
aas
and
mulb
ljmp
aad
hlt
or
sbb
jae
into
std
jo
xchg
or
jmp
adc
sbb
push
scas
lods
or
sub
lahf
jnp
into
push
sub
jecxz
xor
es
cli
loope
jp
pop
mov
inc
fisttps
cli
xchg
mov
and
insl
data16
je
mov
movsl
andl
shll
iret
aam
shr
hlt
fs
es
pop
clc
mov
jb
push
data16
shrb
js
sbb
pop
and
xchg
cmp
mov
lret
mov
cmp
mov
add
push
inc
push
jmp
out
fildll
cmp
push
jo,pn
fsubp
mov
sbb
clc
loopne
roll
repnz
mov
repz
jle
sahf
jnp
or
daa
in
xor
mov
rolb
dec
ljmp
mov
stos
or
popf
mov
xchg
sbb
rorb
or
or
out
or
dec
mov
pop
mov
loopne
sub
cli
push
mov
or
scas
lea
adc
and
inc
popa
push
call
fdivrl
sub
inc
rolb
dec
mov
lock
subb
jg,pt
lret
movb
rcrb
out
jo
push
push
jmp
mov
ror
or
mov
add
imul
stc
xchg
test
loope
xchg
push
stos
enter
xchg
sbb
sub
insb
daa
fwait
repz
loopne
out
mov
lret
jecxz
ret
pusha
inc
xlat
and
imul
ljmp
sahf
push
jp
pop
and
rclb
adc
mov
jo
rcll
mov
mov
push
stos
inc
mov
je
shl
xor
out
subl
adc
xchg
int3
sub
inc
adc
xor
and
ret
aaa
iret
and
push
mov
pop
push
neg
cltd
jmp
iret
pop
add
or
repnz
sahf
mov
cmp
and
add
mov
pusha
imul
pop
out
sbbb
push
lock
xchg
inc
push
mov
lcall
ds
jb
lret
and
sbb
mov
loopne
mov
adc
add
push
jp
push
cmpsl
mov
mov
ss
dec
sahf
push
movsl
jo
inc
inc
cmp
mov
repnz
sar
inc
arpl
cmp
bound
or
rdtsc
enter
idivl
pop
ret
sub
or
das
xchg
jp
cmp
je
pop
lods
and
sub
rclb
test
push
dec
hlt
jns
out
cmp
lcall
jle
jl
gs
out
dec
arpl
and
add
adc
sub
mov
mov
inc
sbb
lock
xchg
xchg
push
pop
and
movsl
fcom
nop
mov
xor
sub
lcall
ret
loope
aas
ret
inc
fnstsw
fidivl
push
pop
sahf
mov
popa
mov
rcrl
lds
mov
jno
cmp
mov
in
scas
fsin
mov
dec
incb
push
inc
mov
inc
dec
jmp
movsb
push
lret
jecxz
mov
and
dec
mov
adc
jae
gs
sbb
mov
adc
mov
clc
into
fiadds
mov
fadd
in
and
jne
xor
mov
sub
and
dec
jnp
xor
inc
inc
push
les
cmp
aaa
add
dec
rcrl
pop
scas
mov
push
and
jns
sti
roll
das
lret
cmpsb
fbld
ss
pop
dec
enter
pop
cs
mov
cmp
pusha
stos
push
xchg
test
dec
outsb
gs
loop
fdiv
xor
and
movsl
sti
xlat
adc
cmp
push
and
out
repz
or
movsl
popa
push
test
sub
inc
inc
mov
mov
jo
fdivrl
adc
and
jl
jecxz
sbb
push
mov
push
xor
dec
stc
push
jl
bound
test
fsubr
adc
mov
popa
aam
out
xchg
sahf
loopne
push
cmp
cmp
cmc
xor
lret
imul
enter
sub
add
inc
into
popf
orb
arpl
jle
cmp
ja
icebp
dec
mov
mov
mov
jmp
je
aaa
cmc
fs
loop
and
dec
push
dec
push
repz
inc
cmp
in
shll
sbb
xchg
cmp
pop
mov
les
jmp
and
idiv
shl
shll
popa
popl
dec
test
mov
ljmp
mov
cmp
pop
or
lods
jb
jmp
ss
rorl
and
inc
dec
sub
mov
js
fcomps
daa
add
rclb
cmp
pop
mov
ret
jg
div
inc
dec
mov
sbb
xor
std
and
inc
fnstsw
js
in
adc
aam
daa
clc
xor
popf
cmp
or
pusha
push
sub
pop
neg
sbb
repnz
out
cmc
out
shll
les
imul
or
mov
test
pusha
mov
out
pop
cmc
jl
xchg
jl
add
xor
adc
adc
jo
dec
push
jae
pusha
call
cwtl
out
sbb
dec
movsl
gs
cmp
lret
pusha
int
jecxz
shll
pusha
dec
int
mov
pusha
push
leave
fistps
insb
into
push
and
dec
inc
add
je
pusha
push
in
push
push
mov
sahf
std
fs
divl
mov
mov
sbb
mov
sub
std
sub
loope
adc
arpl
adc
fsubs
out
in
pop
insb
adc
leave
imul
mov
inc
jnp
jb
arpl
sti
jge
jecxz
out
mov
pushf
push
xor
out
pusha
xchg
mov
jne
loope
pop
lea
aaa
cwtl
or
pop
pusha
adc
popf
xchg
mov
inc
faddp
lcall
cmp
add
push
inc
divl
test
push
pusha
es
cmp
dec
mov
lds
mov
jbe
pop
and
leave
pusha
jecxz
pop
mov
pusha
fidivrs
mov
arpl
xchg
fs
push
push
fldl
add
out
test
xchg
daa
pop
xorb
fiaddl
arpl
in
push
test
clc
cmp
leave
mov
in
mov
rcll
cmp
outsl
dec
cmp
insl
sub
aam
mov
fmull
jno
and
cltd
xorl
aaa
out
cmc
loopne
jmp
jbe
pusha
xor
ja
jl
cmp
mov
and
stos
fwait
lods
test
push
adc
jge
dec
shlb
insl
sbb
ret
or
divl
mov
pusha
scas
and
das
dec
outsl
shll
jle
loopne
xor
jl
fdivl
push
out
pusha
pop
lea
inc
and
ret
frstor
xlat
test
fs
jb
and
inc
pusha
sbb
mov
lock
jne
pop
pcmpgtb
ret
loop
lret
popa
pusha
add
mov
mov
push
add
stos
pusha
andl
lods
jae
mov
xchg
jnp
fnstenv
inc
inc
xchg
ja
mov
nop
aas
in
jmp
jnp
and
push
jecxz
dec
inc
pusha
sub
push
push
push
and
pop
mov
adc
call
xchg
mov
push
cmpsb
pusha
bound
aad
leave
mov
push
out
xor
mov
jge
fisttps
xchg
iret
pusha
out
xchg
loop
ret
ljmp
test
pusha
push
pop
xor
test
inc
fsubs
shrb
mov
inc
in
or
fs
inc
test
aad
pop
xchg
out
pop
clc
lods
jp
into
cmp
lcall
shl
pusha
inc
xlat
mov
leave
cmp
pusha
push
lret
lds
pop
pusha
push
cli
std
mov
stc
sbb
sbb
sti
stos
pusha
mov
xchg
ret
and
add
pusha
aam
or
xlat
inc
fidivl
dec
mov
jl
mov
mov
out
sti
shl
pusha
or
jmp
mov
sub
addl
je
gs
or
pusha
repnz
push
lea
pusha
stc
cmp
add
addr16
out
mov
out
mov
jl
out
sub
sub
xor
mov
mov
mov
jbe
scas
nopl
push
xor
pusha
adc
mov
pop
push
aaa
insb
mov
and
fstl
xchg
mov
and
sbb
push
imul
jl
xchg
movsb
add
arpl
inc
shl
loop
add
arpl
pusha
mov
mov
dec
jns
pusha
dec
sub
clc
insb
outsl
mov
loope
mov
jmp
xor
inc
das
pusha
mov
and
sub
jg
aam
inc
mov
call
repz
push
push
mov
cmc
or
in
pusha
mov
into
adc
jno
and
xor
cmp
fistps
iret
test
mov
pop
test
jmp
out
jle
mov
bound
rclb
imul
cs
nop
mov
pop
mov
sub
lahf
scas
lret
pop
push
jg
inc
push
ret
and
sbb
cmpb
rcr
add
imul
nop
jae
nop
loopne
sub
push
fwait
repnz
sbb
push
das
fwait
gs
sti
ja
dec
inc
enter
xlat
mov
popa
je
or
pop
push
inc
loop
bound
dec
push
jmp
inc
sbb
popa
test
pop
cmp
aad
shll
dec
rcll
adc
fucom
push
fs
sub
cltd
dec
inc
cltd
mov
pop
pushf
shrl
sbb
xor
iret
inc
inc
mov
sub
pop
fldcw
hlt
out
xchg
xchg
mov
popf
push
mov
adc
xor
sub
push
ret
dec
sti
xchg
mov
into
mulb
and
insl
ficomps
add
orb
sbb
pop
out
cmc
lock
rclb
sti
ds
pusha
roll
push
pop
xchg
push
xchg
loop
ret
insb
or
rcrl
outsl
fsubrs
sar
leave
sub
push
push
xlat
pop
push
xchg
pusha
xor
ja
push
in
negb
inc
daa
adc
jae
jo
pop
pop
ljmp
aaa
loope
cltd
or
sbb
das
loopne
xchg
dec
dec
inc
jo
enter
into
out
and
push
xorb
pop
rclb
xor
out
scas
and
adc
jge
loop
xor
mov
xorb
xchg
pop
arpl
sbb
jbe
pusha
sti
adc
cs
dec
mov
adc
jl
xchg
and
cmc
add
rolb
insb
push
sbb
inc
xlat
arpl
sub
or
loop
mov
xchg
sbb
in
sub
pusha
jecxz
scas
aad
inc
jmp
cltd
mov
pop
pusha
inc
push
jnp
lods
dec
xchg
pusha
enter
push
xchg
std
mov
int3
sahf
and
pusha
xchg
jne
jae
daa
mov
pusha
add
lods
xchg
sar
fbld
push
stos
inc
dec
sbb
repz
pop
sbb
sub
test
popa
push
push
nop
cmp
jle
pusha
mull
sub
outsl
push
mov
mov
in
movsl
lret
mov
dec
add
dec
lods
pusha
mov
cld
sbb
and
cltd
fs
aaa
mov
mov
gs
outsb
pop
aad
adc
jne
popa
and
push
pusha
xlat
jp
xor
sub
push
inc
sbb
repz
xchg
pusha
pop
push
mov
cmp
movsl
call
lahf
loopne
insl
mov
mov
aas
and
repz
xchg
pusha
xlat
and
out
pop
jl
je
adc
or
lret
loope
sar
pop
dec
rol
mov
ficoms
mov
or
xor
out
dec
dec
push
mov
nop
adc
call
push
dec
add
mov
popa
incl
mov
icebp
xchg
add
test
ljmp
leave
scas
shl
pusha
sub
fs
push
xor
and
pop
and
repz
popa
aad
adc
ljmp
and
xchg
mov
int
pop
inc
xor
add
cld
ja
aaa
add
test
sar
mov
shlb
xchg
lahf
ljmp
xor
or
addr16
cmp
and
cli
ret
and
stos
sbbl
xchg
lret
inc
faddl
dec
mov
outsl
sbb
ret
das
imul
and
cmp
popa
test
cmp
dec
int
or
or
gs
arpl
xor
xchg
ss
inc
push
cmpsl
movsl
fsubl
dec
stos
mov
pop
mov
negb
lock
push
scas
out
cld
add
mov
cmp
stc
std
mov
mov
lahf
rorl
sbb
mov
mov
push
inc
xorb
loop
mov
add
movsl
popa
jae
repnz
or
add
adc
mov
sbb
pusha
cmp
xlat
push
pop
cwtl
fnstsw
inc
jge
pusha
enter
or
sti
aam
jbe
or
sbb
jmp
inc
in
pusha
jmp
sbb
addr16
pusha
add
xchg
mov
pusha
xor
out
dec
stos
pop
adc
ficoml
mov
or
and
push
out
and
xchg
xchg
xchg
fsubrs
or
cmp
push
dec
jbe
or
pop
xchg
push
pop
dec
fcompl
pusha
out
pop
push
clc
or
fwait
jbe
roll
pusha
adc
cwtl
pusha
ss
mov
addr16
pop
cmpl
mov
sbb
mov
loopne
jl
lods
sub
rcr
pusha
sub
mov
fisubs
pop
daa
test
or
pop
ja
mov
jge
jle
push
add
test
dec
fwait
mov
xchg
pusha
push
pop
lahf
cmp
ljmp
inc
push
pop
fcomip
xchg
mulb
sub
inc
lods
int
push
dec
in
pusha
dec
dec
push
inc
aaa
xchg
xor
clc
sbb
mov
aam
pop
adc
int3
and
cmp
pop
sbb
xchg
pop
dec
insb
bound
je
push
pusha
mov
jle
cld
into
jb
pusha
jns
loop
xchg
pusha
inc
jl
mov
or
mov
pusha
fwait
in
sub
aam
es
push
pop
adc
inc
mov
pusha
in
xor
xor
test
pusha
mov
push
test
nop
loop
pop
push
cs
sbb
popa
roll
orb
xor
sbb
cmp
pop
ss
ds
xor
jle
jae
pusha
out
dec
lahf
test
xor
fs
inc
and
mov
pop
pusha
lock
mov
dec
push
pop
mov
add
cmp
ss
dec
lret
push
cmp
pusha
lret
test
add
pusha
push
rcrb
mov
pusha
push
sub
lods
insb
dec
pop
aad
add
loop
adc
in
jge
stos
dec
arpl
adc
xchg
repnz
pusha
jg
sbb
les
cmp
idivb
popa
cmpsb
mov
add
cwtl
sbb
cmpsl
imul
clc
mov
add
addr16
dec
fidivrl
lods
lcall
test
push
out
xor
pop
sub
push
xor
enter
mov
xchg
xchg
sub
xchg
pop
arpl
lods
pusha
loop
sar
push
mov
aad
inc
repz
int
adc
jnp
jecxz
bound
mov
mov
pop
rcll
xchg
jg
popa
xor
fwait
das
cmp
push
mov
int3
pop
jl
aam
push
mov
or
pop
jecxz
aad
sub
pusha
fcoms
decb
insb
cmp
mov
and
test
fsub
pushf
popa
lds
mov
xor
lea
xor
fsubrl
pusha
cmp
aam
jmp
gs
xchg
mov
mov
mov
xchg
fs
inc
jmp
jmp
fcoml
jae
mov
fs
jne
jbe
pushf
cli
or
push
mov
imul
sbb
adc
cmp
fwait
sbbl
leave
sti
neg
insl
stos
and
pop
cmpl
aas
and
fbld
loop
xchg
js
pusha
cmpsl
ss
add
sahf
cmpsb
and
adc
adc
lahf
test
in
pusha
add
fdivrs
push
mov
pusha
dec
xchg
scas
mov
pop
mov
mov
pusha
loopne
ja
dec
inc
sahf
fs
jno
loopne
adc
aaa
jg
mov
xor
pusha
cmp
pop
lcall
sub
push
dec
push
sbb
ret
das
mov
pusha
idivl
jnp
add
jae
inc
push
stos
cmp
add
std
or
daa
into
inc
imul
adc
test
mov
aaa
cmpsb
jge
loopne
sbb
mov
pushl
jo
pusha
adc
fwait
sbb
outsl
cld
daa
loopne
aad
dec
pusha
dec
scas
jle
pop
lahf
shl
in
sbb
add
ja
outsl
adc
inc
pop
arpl
add
clc
loopne
aad
jmp
mov
mov
sbb
dec
shr
sti
pusha
dec
cli
xchg
xor
jl
push
popf
push
loope
dec
sub
push
pusha
jmp
dec
bound
add
xor
clc
fbld
repz
scas
in
fs
sbb
adc
and
scas
dec
cmp
inc
sub
pusha
nop
xor
and
rolb
pop
cmpxchg
arpl
pusha
cs
inc
and
ret
xor
sbb
jle
pop
or
fildll
jnp
mov
fs
mov
stos
pusha
xchg
or
dec
ljmp
orb
mov
addb
ret
sub
pusha
imul
addr16
dec
in
andl
mov
or
stos
lods
aas
adc
pusha
bound
mov
mov
mov
jecxz
insb
insl
unpckhps
repz
lods
in
pusha
sub
jl
jp
adc
and
scas
outsb
cmp
icebp
loope
pusha
les
orb
insb
push
mov
idivb
inc
pop
imul
aad
aaa
jp
mov
repz
pop
pop
pop
push
mov
dec
imul
pusha
int
insl
xchg
adc
js
pusha
loope
movsl
sbb
mov
sbb
stos
hlt
inc
loope
lods
pusha
xor
push
dec
out
jg
pop
xchg
fwait
pusha
nop
xchg
dec
pusha
inc
push
iret
cmp
mov
mov
loopne
ret
cmpsl
mov
out
adc
lods
jbe
gs
or
mov
sbb
dec
mov
and
arpl
mov
or
fsubs
mov
pop
arpl
or
loope
cmp
pop
leave
adc
adc
cs
call
push
pusha
xlat
fisttpl
inc
out
pop
outsl
mov
jo
xor
push
in
arpl
xor
scas
mov
or
cs
icebp
mov
nop
arpl
int3
jb
notl
jg
out
daa
xlat
pop
jl
lfs
pop
mov
cmp
mov
inc
add
pop
pusha
add
or
call
cltd
imul
mov
js
fld
hlt
lock
ret
and
inc
xor
in
pusha
and
test
mov
icebp
jno
sti
or
mov
adc
mov
adc
xchg
pusha
inc
lds
fs
pusha
iret
sbb
aaa
push
mov
sarb
fadds
push
fstpl
inc
mov
xor
mov
popa
xlat
mov
jmp
xlat
cltd
loop
push
push
add
jbe
mov
mov
mov
daa
xor
mov
int
arpl
add
fstpt
arpl
jmp
icebp
sbb
pop
cmpsl
lcall
mov
adc
andb
or
mov
adc
pop
fsubp
xor
mov
frstor
rcr
sub
mov
lods
pusha
cmpsl
dec
jmp
fldenv
mov
or
pusha
inc
add
pop
jae
stos
or
aas
and
hlt
pusha
aad
and
adc
mov
popa
shrb
pop
filds
jecxz
xor
mov
sahf
jg
jge
sub
xchg
xchg
pop
dec
aad
push
xor
pusha
pop
pop
jp
enter
mov
adc
hlt
outsl
or
imul
dec
jmp
test
xchg
bound
das
fwait
pusha
int3
mov
daa
pusha
out
jge
lock
loopne
adc
into
mov
jmp
xchg
in
bound
mov
adc
addr16
loopne
cmp
push
fcoml
inc
popa
xorl
mov
int3
jo
mov
popa
andl
inc
push
add
insb
jb
cmp
mov
xor
les
daa
xchg
mul
fs
cmc
inc
add
rorb
mov
hlt
mov
ret
or
push
jne
push
int3
xchg
sbb
and
int
cmp
push
loope
popa
ret
gs
sti
cltd
loopne
lret
xchg
ds
mov
xorb
push
inc
fsubrp
cli
or
rcrl
inc
fcoml
mov
loop
test
jne
loope
jno
iret
cmp
or
xor
mov
nop
stos
pop
sahf
pop
rorb
mull
call
jmp
mov
mov
jo
cld
jle
fdecstp
mov
jl
inc
xchg
stc
mov
pop
inc
pop
aam
pop
xor
sbb
xor
dec
andl
adc
jmp
and
shrb
pushf
scas
dec
je
or
iret
popa
sub
dec
ja
cmpsb
stos
pop
adc
pop
push
leave
mov
dec
dec
bound
dec
dec
xor
andl
mov
lea
and
sahf
sub
adc
add
insb
mov
pop
enter
test
pusha
in
rcr
or
cld
test
test
int
xor
pop
sub
xor
outsl
or
enter
jg
sbb
sahf
repnz
inc
int3
push
movsl
data16
das
xlat
gs
aas
mov
aas
ret
clc
cmp
push
adc
je
sbb
jp
push
rolb
into
add
or
cwtl
out
hlt
inc
sub
lock
mov
inc
xchg
mov
mov
repz
inc
shrb
mov
dec
lcall
fs
jb
push
daa
loopne
loopne
push
pop
lock
cltd
aam
les
shll
std
loopne
dec
cld
scas
ss
es
sub
push
shl
movsb
rol
push
and
std
lcall
ret
cltd
inc
icebp
lahf
pop
imul
enter
push
mov
in
enter
popf
xor
lea
mov
add
divb
les
lea
pop
pop
ficoml
dec
sbb
inc
add
push
sbb
mov
inc
push
sbb
adc
arpl
lds
fsubrs
es
add
mov
jns
mov
out
jp
lret
scas
loop
push
enter
inc
mov
push
sub
ljmp
lret
pop
lahf
idivb
jne
ret
lods
adc
loope
push
shr
orl
leave
lods
dec
hlt
movsl
pushf
cmp
and
shl
adc
fcomps
arpl
jo
dec
data16
addl
insl
cmp
ret
jae
pop
ja
sbb
cmpsb
clc
ss
push
loope
xchg
inc
and
jl
xchg
arpl
sbb
ret
push
ss
and
aam
iret
xchg
ret
push
pop
lock
rorl
movsl
push
fsubs
rol
cli
mov
adc
push
scas
test
aaa
jbe
push
push
fmull
out
mov
imul
sbb
out
pusha
sbb
push
dec
inc
sbb
cmpsb
dec
xorl
out
xor
mov
cwtl
xchg
xor
mov
bound
js
loop
repnz
mov
mov
aas
sub
sarl
xor
push
inc
ficomps
inc
inc
jno
mov
test
adc
or
pushf
test
lahf
in
xchg
movsb
mov
test
pop
push
outsb
inc
mov
cwtl
mov
stos
bound
add
stos
sbb
inc
test
aad
insl
push
pop
jbe
sub
jl
xchg
out
sarb
jns
push
or
pop
cs
xlat
test
jo
and
shll
jne
adc
popa
loopne
nop
stos
das
lock
cmp
ret
out
loop
add
cmc
in
xor
ja
and
aas
mov
dec
out
pusha
push
sub
inc
pop
mov
pusha
bound
sbb
mov
push
shll
pop
daa
adc
int
jl
sub
sbb
push
lret
std
mov
add
scas
insb
cwtl
rcrb
out
shlb
xchg
repz
mov
mov
stc
fadd
mov
mov
pusha
push
dec
cld
sahf
adc
cmp
test
mov
jl
pop
icebp
ret
ja
jecxz
push
es
mov
fs
dec
mov
rcrb
sbb
jmp
stos
xchg
push
pusha
adc
or
add
pop
addps
dec
pop
into
loope
dec
xlat
mov
or
jp
daa
mov
adc
icebp
sbbl
fldl2t
pusha
cld
js
sub
jl
nop
pusha
push
inc
test
cmp
or
outsl
les
sti
lret
mov
pusha
mov
adc
dec
pusha
into
insb
cmpsl
push
xor
pop
mov
inc
dec
out
mov
pusha
sbb
cld
lret
notb
add
lds
movsb
mov
push
xchg
pop
pusha
jae
popa
add
mov
pop
pop
mov
sub
jbe
lret
pusha
mov
xor
sbb
fadds
add
nop
fistl
xor
into
pusha
push
cmpsb
inc
not
mov
push
pusha
add
or
push
xor
pusha
cmp
shlb
pusha
aas
mov
pushf
das
xlat
xchg
frstor
push
pop
lods
inc
sbb
mov
fists
or
ret
mov
lret
xchg
mov
enter
pusha
movsb
sub
cmp
xchg
pusha
add
pop
jecxz
mov
pop
pusha
imul
or
push
jns
jecxz
stos
pusha
mov
movsl
jle
fs
sub
shll
mov
mov
pop
add
test
movsb
outsl
mov
inc
xchg
pop
orl
jg
pop
mov
xor
mov
xchg
mov
push
adc
push
cmp
lods
sbb
loop
aaa
cmpsb
or
sti
mov
pop
sahf
ret
dec
dec
mov
inc
popa
and
stos
pusha
int3
icebp
cmp
outsl
push
or
xchg
xchg
add
xor
arpl
pop
jns
lret
push
fbld
stc
pop
sub
popa
pusha
xor
enter
cmp
or
push
xchg
cmpsl
or
hlt
pusha
push
daa
ficompl
dec
push
push
fs
sub
and
xor
pusha
xor
add
enter
mov
jbe
cmpsb
popf
test
or
int
inc
loopne
and
shlb
mov
jne
mov
pusha
pushf
dec
push
in
inc
out
ss
cmp
xor
js
repz
test
gs
cltd
fcoml
lods
popa
lea
and
scas
push
fs
xorl
cmp
fistps
arpl
outsb
xor
dec
pusha
gs
cmp
pusha
mov
and
adcl
push
popa
push
inc
and
xor
hlt
insb
push
adc
fs
add
mov
sbb
pusha
xchg
adc
in
xor
or
jb
sub
ja
ficoml
std
push
pop
adc
and
pusha
xchg
loop
fsubrs
inc
pusha
jbe
out
je
data16
add
rcr
sub
aad
arpl
sub
and
add
stc
sub
sbb
dec
add
sub
push
js
aam
jmp
lret
cltd
aad
aaa
incl
inc
popa
inc
adc
xor
rcrb
dec
cs
testl
cmp
or
hlt
adc
popf
cltd
jge
pusha
mov
lds
xor
daa
js
lock
sarb
mov
xchg
cld
in
pusha
mov
or
pusha
mov
xchg
faddp
mov
sbb
std
adc
jns
jmp
scas
in
xchg
mov
pop
jne
lahf
jecxz
jbe
pusha
je
loope
lret
in
insb
mov
rclb
mov
scas
pop
cmp
call
loope
dec
sbb
addr16
pusha
cmp
mov
cmp
out
mov
jl
rcrb
adc
jecxz
sbb
cmp
adc
cs
sarb
sbb
stos
jl
iret
xchg
pusha
xor
xchg
add
push
mov
mov
mov
scas
xor
xlat
divl
in
pop
out
fs
aas
mov
fldenv
pop
test
iret
and
pusha
mov
es
sbb
mov
shl
dec
outsb
pushf
leave
jl
pop
lock
xchg
adc
xchg
movsb
popa
ja
test
outsl
jmp
xor
pop
jno
jl
hlt
push
sub
scas
inc
mov
jge
cld
aad
sbb
fiaddl
cmp
mov
push
loopne
bound
pusha
push
test
push
sub
lods
push
fsub
dec
cli
jecxz
cmpsl
popf
and
loope
scas
pusha
popa
dec
or
andb
cld
mov
pusha
push
cs
rcll
in
pusha
inc
cwtl
cmpl
leave
into
inc
test
sti
mov
cld
cs
mov
pusha
enter
jp
shrl
leave
pop
mov
and
lods
int3
pusha
popa
ret
pushf
or
jb
sahf
cmp
test
int3
pusha
mov
mov
and
lock
aaa
pop
sub
mov
icebp
inc
bound
and
dec
daa
movsb
push
ja
mov
pop
addb
adc
cmp
dec
rcr
and
mov
dec
mov
shll
push
iret
pusha
sbb
loope
aad
mov
cmp
gs
fs
xor
fiadds
pop
scas
sarb
ss
shlb
daa
inc
fbld
or
ds
push
dec
pusha
mov
jle
mov
movsl
push
cltd
and
cmc
sbb
xor
ret
pusha
movsl
mov
or
pushf
dec
outsl
pusha
jl
aad
fidivrl
cs
or
pusha
cmp
push
sub
loope
mov
cwtl
or
pop
scas
lds
andl
fs
rorb
cmp
fs
push
mov
and
nop
leave
in
mov
mov
cmp
pusha
dec
dec
sub
jg
lret
mov
out
inc
cmpsl
out
loope
std
cmp
imul
loopne
mov
pusha
addr16
aam
outsl
xchg
aam
aad
cli
pusha
jmp
push
fists
pop
fmuls
arpl
xor
pusha
arpl
jecxz
test
insl
pusha
or
xor
or
ficoms
pusha
mov
shrb
push
xor
mov
loopne
lods
dec
divb
repnz
push
movsb
mov
xor
inc
jmp
fistpl
sub
cli
movsl
enter
sbbl
mov
add
pop
jg
mov
aas
or
fcomp
loopne
andl
mov
subps
mov
out
scas
adc
inc
jge
in
mov
xchg
or
dec
inc
ret
mov
fsubs
mov
pop
cli
jnp
sbb
jae
fisttps
sub
pusha
xor
outsb
ss
dec
sbb
adc
test
repnz
jg
sahf
pusha
mov
int3
or
add
xchg
push
xor
pusha
xchg
jb
jno
or
xchg
iret
jo
push
push
arpl
in
shll
cli
xchg
add
insb
pop
mov
xor
xor
bound
sub
pusha
add
lcall
push
lcall
xchg
out
cmp
fisubrs
mov
push
cli
pusha
mov
ljmp
pop
movsl
pop
sub
inc
add
clc
lock
pusha
fldenv
aaa
lret
sub
jno
out
mov
xor
mov
mov
pop
mov
mov
push
std
icebp
hlt
jg
mov
fcomps
sbb
add
mov
sbb
mov
leave
dec
cmp
lea
mov
in
into
pusha
fistpl
dec
ffree
outsl
nop
mov
adc
add
sbb
popa
xchg
cwtl
inc
cmp
push
or
mov
mov
and
and
out
push
fstpt
push
jo
mov
fldenv
pop
mov
arpl
shrl
and
inc
cmpl
inc
jp
orl
add
popf
xchg
xor
cwtl
inc
xchg
xor
xor
es
push
sbb
xor
dec
ja
sbb
iret
push
inc
mov
or
fs
xchg
dec
xor
insb
dec
push
push
ret
adc
subb
jbe
loopne
push
add
cmc
rclb
js
push
in
mov
testl
jae
rorb
dec
adcb
jp
and
xchg
push
movl
mov
sti
rorl
push
xchg
nop
xchg
mov
adc
pop
repnz
rcrb
xchg
lahf
popf
mov
cmp
inc
idiv
mov
adc
aas
mov
mov
in
push
sbb
out
dec
repz
je
mov
repz
pop
push
lret
push
add
bound
xor
or
push
lods
shlb
shrl
loope
sahf
mov
or
adc
insb
cld
shlb
loope
mov
fmul
fucomi
int
rcrl
xor
sahf
out
ds
loop
shlb
mov
adc
adc
adc
push
xchg
dec
add
addr16
or
dec
add
adc
jb
out
xchg
mov
dec
xchg
inc
dec
mov
jle
xchg
mov
xbegin
jo
daa
mov
es
cs
adc
int3
pusha
lahf
out
das
insl
outsb
sbb
pusha
sbb
mov
add
fdivr
enter
outsl
pop
mov
in
test
mov
pusha
push
push
movsb
out
sbb
jp
call
cwtl
pop
cmp
sub
fildll
fs
sub
incb
push
dec
pusha
aas
test
push
xor
das
xor
jmp
outsl
test
mov
lahf
sbb
je
fs
or
add
pusha
mov
inc
cmpsb
or
pop
push
sbb
outsl
insl
cld
stc
pop
cmp
mov
cmpsb
mov
mov
aam
scas
mov
pusha
test
mov
negl
pusha
jp
dec
dec
sbb
jae
andb
mov
icebp
push
mov
hlt
mov
sub
mov
inc
fsubs
pop
cmpsb
arpl
sti
jmp
sub
xlat
cmpl
xor
insb
dec
imul
popf
push
fcmovne
pop
fs
sub
or
gs
cmp
mov
mov
xorl
xorb
xor
add
fsubrs
cmc
bound
pusha
pushf
scas
add
xor
aaa
insl
loop
mov
inc
dec
int3
lcall
push
mov
fistl
incb
mov
adc
in
jg
sbb
cmpl
les
vcvtsd2si
pusha
loopne
dec
sahf
mov
ja
fwait
clc
pusha
sbb
fdivrs
jg
dec
fstps
mov
stc
test
mov
scas
sub
xchg
mov
cmp
int
pusha
out
cmp
or
xor
adc
and
push
dec
rcll
pop
or
pop
ret
xchg
movsb
pusha
pop
push
push
test
xchg
shrb
cmp
xor
xchg
jecxz
cltd
cmp
int
leave
fmuls
jnp
shll
and
out
jle
add
in
cmp
adc
call
jl
sarl
repnz
dec
pusha
daa
popf
jge
and
js
aam
in
stos
ret
fwait
pop
xor
and
stos
sub
call
mov
fs
xchg
cmp
inc
ret
shrl
push
sub
mov
das
jg
mov
les
dec
pusha
repnz
imul
scas
pop
push
push
mov
insb
inc
sub
mov
sub
adc
jmp
jl
addb
mov
cs
pusha
push
in
lahf
and
cli
jge
sbb
and
adc
pop
push
bound
jns
stc
cli
sub
sub
push
push
jnp
add
mov
cli
fidivrl
dec
daa
arpl
lock
and
rcr
scas
mov
xchg
bound
pop
daa
shrb
lods
test
xchg
inc
inc
aaa
ret
in
and
stos
and
into
mov
push
out
and
mov
and
dec
lret
xlat
popf
shrl
rcrb
into
enter
mov
mov
sbb
push
inc
es
adc
out
xchg
jl
jg
cmc
jp
xor
or
add
fnsave
jae
adc
ret
cld
pop
push
inc
mov
lret
xchg
inc
and
les
and
pusha
add
notl
lods
pop
inc
pop
jg
sarl
es
arpl
pop
scas
int
sbb
ffreep
loopne
imul
mov
jo
vmovlps
call
sub
cmpsl
icebp
pop
mov
mov
inc
cwtl
fstps
pusha
leave
stc
jmp
pop
pusha
mov
xchg
pop
ret
in
mov
lcall
add
adcb
sub
dec
mov
data16
data16
mov
ret
out
inc
ret
add
cli
ss
or
sub
leave
hlt
inc
shll
pop
push
mov
mov
mov
mov
mov
popa
out
in
lods
pop
adc
cli
das
ja
pop
ss
add
test
push
shl
xchg
lea
cld
dec
add
push
nop
ret
or
sub
add
jmp
lret
js
loop
adc
call
imul
adcb
pop
sub
push
out
mov
loopne
xchg
mov
imul
int
aam
cmp
pusha
test
cmp
pushf
stos
lock
loop
add
fnstsw
jne
loopne
aam
sti
out
lds
xor
test
mov
in
cwtl
xor
pop
jg
adc
arpl
out
pusha
sbb
mov
or
insb
sahf
pusha
push
outsb
jle
mov
fldt
movsl
add
addb
push
fildll
sahf
pop
stos
pop
dec
and
pusha
cmc
imull
movsl
cmpsb
dec
jo
inc
das
sbb
addr16
push
adc
pushf
push
test
outsl
bound
cltd
xor
lock
popa
nop
add
or
mov
mov
mov
fsubs
ror
push
adc
jg
mov
fs
and
xchg
shr
dec
je
imul
fisttps
pusha
lock
mov
bound
push
clc
sub
adc
jo
xlat
mov
dec
clc
stos
in
sbb
addl
loop
es
popf
fisubs
int
das
adc
out
stos
adc
and
mov
aam
sbb
push
fmull
push
push
push
mov
pop
nop
loopne
filds
mov
popa
int
dec
scas
repz
push
push
cmpsl
cld
lea
jmp
test
push
inc
test
pop
mov
clc
adc
sub
shl
sbb
loope
cwtl
jo
cmp
mov
shrl
inc
rcll
sub
pusha
arpl
push
cwtl
mov
daa
lahf
push
int3
or
dec
sbb
int
das
test
imul
fisubl
jge
loop
xor
popf
pop
scas
mov
mov
lods
aas
cmp
int
fwait
adc
xchg
lods
leave
mov
test
xor
sahf
mov
mov
inc
xchg
or
sbb
cmpl
and
insl
xchg
andl
push
lcall
pusha
fwait
inc
aaa
movl
lods
testb
pusha
ret
jecxz
pop
in
pusha
aaa
fisttps
xchg
xor
pusha
jno
add
je
leave
xlat
daa
std
addr16
adc
mov
popa
data16
popa
fdivrp
les
sbb
jae
mov
repz
fstpt
into
lods
pusha
cmpsl
shll
aad
dec
mov
mov
aaa
push
mov
idivl
dec
sub
loop
add
or
or
inc
mov
add
bound
push
outsl
mov
dec
icebp
out
repz
mov
xor
in
test
add
xor
fisubs
cmp
and
shll
sti
jmp
movsb
mov
and
addr16
jl
gs
arpl
pusha
out
inc
testb
enter
jo
jne
sbb
lods
pusha
data16
lock
xchg
cmpsb
sbb
std
or
es
dec
mov
sbb
pusha
pop
or
outsb
mov
xor
je
or
icebp
popfw
lret
leave
mov
adc
dec
test
xor
and
jl
xor
insl
les
and
insb
daa
xchg
pusha
lods
call
push
sbb
or
sbb
pusha
jbe
or
and
push
mov
ja
and
popa
add
cld
clc
andl
jo
gs
xchg
lcall
psubb
or
lds
testb
imul
std
and
xor
pop
pop
sbb
jecxz
jle
xchg
cmpb
sub
mov
out
lahf
sbb
outsl
mov
cmp
or
loopne
ret
loope
js
jl
inc
sbb
call
cmpb
mov
daa
mov
cs
push
pop
subb
bound
sub
movb
dec
arpl
int3
gs
imul
clc
fcompl
ljmp
and
mov
sub
adcl
fisttpll
adc
mov
enter
pop
insb
int3
mov
lahf
lea
ss
pusha
ret
clc
aas
inc
xchg
mov
cmovl
out
shl
roll
push
pushf
insb
sahf
jp
bound
repnz
nop
dec
xchg
shrb
dec
mov
adc
xchg
or
pop
push
jnp
add
shlb
inc
mov
xchg
cmp
das
pusha
or
push
popa
pushf
inc
add
cmp
xchg
sub
jl
scas
fbld
pusha
jne
xor
xchg
mov
xor
shll
je
test
outsl
in
and
cmc
out
incl
mov
xor
daa
mov
cmp
pop
sar
or
pop
scas
pusha
lahf
rcll
lods
pusha
movsl
mov
es
mov
mov
pusha
jle
dec
jnp
push
jmp
pop
lds
xor
in
push
imul
jg
fs
add
jp
mov
pusha
int3
push
shl
or
mov
pop
pushf
dec
or
lods
and
jne
rorb
into
pop
cmp
bound
arpl
mov
loop
out
test
andl
orl
pusha
cmpsb
jecxz
mov
stc
pop
js
jg
jae
pop
sbb
ss
punpcklbw
sub
inc
sbbb
mov
aad
sbb
test
mov
sub
lcall
ret
pushaw
aad
popf
push
mov
insl
movsb
insb
je
or
xchg
and
ds
aam
mov
lods
mov
mov
in
sarl
lea
sub
pop
and
sbb
push
mov
sbbb
cmp
xlat
cmp
push
dec
cli
arpl
inc
loop
repnz
pusha
call
std
sahf
jbe
xor
dec
adc
sbb
nop
out
pusha
in
pop
lea
stc
movsl
lahf
aaa
mov
pusha
repz
arpl
mov
mov
call
mov
mov
or
mov
jmp
fs
lods
mov
push
orl
test
pop
lret
mov
pusha
negl
mov
mov
outsb
jecxz
arpl
test
jl
pusha
dec
stos
loope
inc
js
pusha
adc
sub
pusha
jne
mov
lret
pusha
dec
jnp
xlat
push
mov
lods
lods
cltd
mov
jb
xchg
lret
pop
bound
xorb
pop
sub
mov
rcll
pusha
add
fistpll
or
shlb
pushf
jle
push
xchg
loopne
mov
pusha
in
into
pop
hlt
out
fsubrs
mov
dec
repnz
pusha
and
hlt
ds
enter
mov
push
push
push
dec
nop
loope
xchg
push
pusha
jl
sbb
xor
lret
jnp
fisubs
sub
mov
fmuls
shlb
sbb
mov
in
dec
xchg
xchg
sub
fwait
or
add
inc
js
hlt
adc
jl
aad
and
cmpsl
xor
jb
inc
inc
leave
xchg
gs
aad
dec
jg
pusha
sub
push
sahf
or
adc
and
es
and
in
and
adc
orl
sub
xchg
sbb
sub
cmpsl
movb
pop
cltd
mov
pusha
dec
jmp
pop
xchg
add
cs
push
aad
arpl
stos
leave
ret
in
shlb
push
lods
mov
mov
push
xchg
cmp
push
adc
scas
sub
pusha
scas
xchg
aad
push
sub
pusha
in
into
lods
test
push
pop
pusha
out
and
adc
push
push
mov
dec
jb
mov
cwtl
insb
mov
aaa
mov
xor
add
inc
adc
pusha
jae
lahf
aas
jecxz
or
hlt
stc
or
mov
sbb
mov
lds
nop
pop
mov
pusha
subb
out
xor
push
push
cmc
jl
aam
add
loopne
movb
ss
aaa
xor
cld
dec
sub
jp
adc
pop
cmp
cmp
pop
popa
mov
imul
mov
lahf
mov
xchg
in
loopne
and
loop
pushf
pusha
dec
xchg
addl
xor
add
jo
jecxz
call
sti
cmp
mov
xchg
and
insb
int
xor
mov
imul
idivl
inc
addl
ror
adc
gs
xchg
cmp
dec
mov
mov
pop
push
xor
jbe
inc
cmp
mov
ficoml
mov
adc
shl
mov
push
shlb
push
pop
inc
ret
push
cmp
sub
addl
jne
clc
cmp
mov
mov
lcall
sbb
imul
mov
jns
pop
andl
or
into
inc
lods
xor
xchg
out
lds
fucomp
push
mov
cwtl
int
and
aaa
andb
lcall
inc
xchg
ret
lea
sub
lods
mov
adc
xchg
mov
xorl
dec
mov
ret
pop
sbb
fisubs
dec
dec
cmp
sbb
lahf
pusha
push
stos
mov
daa
call
mov
lea
inc
mov
arpl
jbe
xchg
mov
cmp
and
pop
sub
daa
inc
ret
mov
dec
sbb
dec
inc
iret
cltd
hlt
mov
cmpsb
mov
stos
or
lret
leave
mov
push
pop
in
loope
jle
inc
mov
fs
fsubs
cmp
sub
mov
loop
or
mov
or
call
jmp
and
and
rcr
stc
cmp
ret
inc
or
fs
xor
mov
in
push
xor
or
imulb
mov
xchg
js
and
enter
adc
pop
ret
jae
xor
cltd
push
aam
popa
add
fs
addr16
jecxz
movsb
add
ss
and
dec
test
xor
pop
pusha
leave
push
int
pusha
jb
and
cwtl
xor
pop
ret
mov
clc
add
mov
lret
into
or
pusha
push
je
shlb
and
dec
pusha
dec
cli
mov
es
xchg
inc
imul
pusha
jnp
fsubrl
insb
scas
nop
pop
and
and
or
mov
ret
ds
lock
je
aas
mov
stos
add
sbb
jmp
or
pop
adcl
les
idivl
es
xchg
add
jae
mov
pusha
mov
int3
mov
loopne
arpl
sbb
pusha
pop
sarb
ror
bnd
cltd
fimull
pop
movl
or
int
pusha
subl
sbb
pop
inc
clc
push
inc
sub
or
xchg
adc
cmc
pusha
xor
xchg
mov
pusha
xor
pop
sahf
aas
fisttpll
mov
shlb
outsl
mov
scas
into
bound
dec
popa
jo
inc
lcall
xor
pusha
inc
shlb
pop
pop
fsub
pusha
sub
jb
ja
xor
jl
fs
pop
xchg
movsb
pusha
jl
shlb
mov
pusha
stos
dec
enter
ret
xorb
std
test
fisubl
shl
or
pop
push
ljmp
imul
jp
lcall
dec
fcmovb
pop
sbbl
xchg
jl
js
ljmp
testl
sub
xchg
ret
jle
jg
mov
pusha
fdivp
dec
xchg
push
or
pusha
fistpll
mov
mov
loopne
pop
pusha
xchg
jge
cmpsb
cmc
ret
xor
pop
aas
inc
push
or
mov
dec
xor
idivl
pop
shlb
cmpsl
pusha
js
xchg
arpl
shll
lock
clc
pop
jo
fdivrs
or
ret
sbb
std
add
mov
jle
rcr
lcall
rcr
pushf
mov
scas
in
sub
xchg
lret
arpl
xlat
pop
xor
fldl
xchg
roll
xor
in
sub
inc
and
arpl
lods
shl
movsl
add
and
cmpsl
adc
lcall
lcall
lea
inc
fs
adc
shll
les
int
dec
cmpsl
adc
jp
pusha
inc
jns
add
subb
and
pop
pusha
xchg
ja
fcmove
ss
pusha
jne
push
jl
mov
aaa
int
nop
loop
xor
cmp
pop
xchg
push
mov
movsl
roll
popl
loope
pusha
out
mov
mov
add
andl
enter
pusha
inc
cmpsb
outsl
shll
xor
inc
jmp
push
inc
pusha
sub
into
ret
xchg
xchg
jl
loope
add
inc
arpl
jbe
hlt
mov
lods
and
popa
insb
shlb
adc
idivb
pop
loop
leave
fistpl
lahf
mov
cli
dec
pusha
lock
cld
movsl
dec
cmp
fbstp
loop
mov
outsb
pusha
nopl
loopne
loope
adc
mov
cld
mov
jmp
pushaw
and
and
push
mov
pusha
loope
icebp
popa
shr
into
lea
sub
and
xchg
fdivr
nop
sub
adc
out
bound
push
pusha
gs
xlat
insb
add
pop
jl
push
xchg
cmc
aaa
daa
inc
xor
jmp
pop
push
mull
xchg
mov
push
adc
shlb
rolb
shl
leave
fwait
mov
sub
andb
xchg
xchg
mov
mov
pop
loope
loopne
pop
ret
addb
bound
pusha
divb
mov
pusha
or
int3
pop
decb
aaa
addl
add
mov
pusha
shll
pop
aaa
xor
fs
mov
mov
pusha
pop
cltd
pop
std
repnz
test
and
scas
movsb
sti
xchg
jb
out
jo
mov
pop
mov
cmpsl
adc
inc
loop
aas
pusha
mov
clc
mov
pusha
scas
lods
out
bound
js
sub
cmc
out
xor
dec
sbb
jo
clc
xchg
inc
push
pusha
mov
movsb
jmp
in
sub
loope
xor
pusha
xchg
pop
mov
jae
and
xchg
mov
int
push
test
push
inc
inc
mov
or
adc
cmp
iret
arpl
call
jl
xchg
insl
mov
sbb
mov
mov
and
addl
xchg
bound
mov
jl
out
sarb
loope
or
push
jo
arpl
xchg
and
mov
mov
cwtl
test
push
mov
bound
es
pusha
xchg
push
mov
inc
insb
mov
push
xchg
sub
mov
pusha
mov
test
add
jb
lcall
or
lahf
loope
push
lods
xor
sub
loop
ljmp
dec
pusha
ss
jbe
fs
insb
pusha
sahf
pop
sbb
mov
push
dec
ficompl
pop
jecxz
xor
mov
push
pop
pusha
insl
lret
mov
pusha
xchg
movsb
inc
xlat
jns
push
movsl
or
inc
mov
fwait
push
adcb
xor
pmaxsw
cmp
xchg
pop
pusha
jo
ds
aaa
xor
add
loope
iret
inc
popf
in
jl
or
mov
int
pusha
ret
shl
movsl
mov
inc
not
outsl
push
fisttpl
fs
cmp
fwait
xor
negl
outsb
movsb
iret
lret
out
in
xchg
pusha
repnz
ds
jmp
xor
sar
xor
dec
sbb
sub
cmp
pusha
les
fwait
push
pusha
or
or
cmp
add
jo
out
xchg
push
jl
mov
mov
fisubl
shrl
lcall
adc
dec
fldcw
xor
pusha
sub
jle
and
mov
jecxz
add
jb
bound
popa
pusha
jo
jge
push
stc
test
rol
pusha
xor
pop
imul
and
fstl
fsubs
push
adc
scas
dec
mov
adc
xor
push
dec
dec
jb
inc
and
shlb
movsl
xor
popa
popf
add
pusha
pop
pop
xor
leave
jecxz
lret
scas
mov
push
pusha
jns
shll
pusha
pop
aam
ret
fmull
push
ret
sub
xor
insb
popf
mov
jl
xlat
cmpsl
jl
cmp
pusha
pop
iret
pop
out
mov
nop
push
or
pop
loope
xchg
test
mov
shll
cmpsb
in
push
mov
fxch
repnz
das
addr16
ret
mov
inc
sub
jecxz
cld
jmp
cmp
sbb
les
mov
cmpsb
jbe
imulb
mov
pusha
cmpps
nop
mov
into
push
bound
rcrl
pusha
add
xor
sahf
rclb
cmp
adc
jmp
push
orb
jl
cmpsl
dec
pop
lahf
and
adc
pusha
lds
xor
pusha
enter
inc
fwait
ds
pusha
inc
xchg
mov
int3
sub
inc
pop
or
jne
lock
stos
cmpsl
xchg
push
push
fsubs
clc
adc
ljmp
mov
or
mov
loopne
jp
ds
cld
lahf
add
pusha
inc
sbb
in
fsubp
jmp
cmc
inc
test
jle
fsubrl
stc
mov
hlt
sub
mov
addb
pop
aas
fs
ret
jae
imul
xor
pusha
mov
mulb
cmp
jmp
arpl
push
sbb
insb
and
je
mov
stos
xor
jg
dec
bound
insl
jle
and
xchg
add
inc
sbb
cld
sbb
inc
test
xchg
adc
test
pusha
rcrl
sbb
shrb
pop
cmpsl
and
pusha
xchg
mov
out
sbb
rorl
pop
and
pusha
xlat
js
cmp
inc
add
or
aam
and
ss
int3
scas
out
pusha
aas
lods
or
dec
sbb
scas
jns
push
ret
inc
and
lcall
lret
add
test
pop
sub
out
mov
int
mov
adcb
das
sbb
mov
arpl
sbb
or
pop
out
iret
outsl
test
pop
pop
dec
jmp
and
std
add
ror
scas
xchg
test
cs
loope
stos
test
pushf
mov
aas
and
gs
push
pop
rolb
ja
adc
fisubs
or
push
dec
cmp
fcmovnu
fsts
push
pusha
inc
and
mov
test
adc
shlb
ss
pusha
or
push
mov
pusha
jnp
lock
loop
nop
adc
push
push
mov
insb
insl
sbbb
incb
test
roll
xchg
xchg
je
pop
xchg
stos
inc
movsl
fsub
push
push
pusha
xor
xor
mov
jle
insb
cmp
addr16
pop
cmc
and
sbb
xchg
je
rcll
adc
cltd
or
or
push
fs
pop
popa
nop
add
ljmp
mov
je,pn
pusha
mov
std
lock
test
bound
movsl
cmpb
subl
xchg
mov
xchg
fs
mov
bound
xor
lret
xchg
in
jo
push
jecxz
cmp
pusha
mov
adcl
mov
sbb
in
lcall
dec
lock
xor
mov
mov
jp
out
xchg
ss
pusha
dec
ljmp
fs
shr
inc
sbb
pusha
jb
dec
cli
mov
mov
push
mov
xor
dec
xor
out
lcall
xchg
mov
push
insb
test
sub
imul
mov
roll
test
and
insb
mov
pop
out
mov
arpl
outsb
pusha
sub
push
push
mov
mov
bound
sbb
ja
pop
push
or
xchg
adc
call
pusha
pop
jae
icebp
test
in
adc
rcl
pusha
sbb
pusha
cwtl
les
dec
pusha
cmpb
sbb
inc
in
inc
mov
xchg
pop
sbb
cmc
pusha
lret
sub
insb
ret
pusha
sbb
sti
lea
jnp
cmp
jo
stos
int
out
testb
add
loop
cltd
xchg
clc
fwait
pusha
in
xchg
outsb
insb
ret
lret
add
inc
push
repnz
mov
dec
outsl
mov
std
pusha
test
push
call
ds
xchg
in
test
xor
xchg
aaa
aam
cmpsb
mov
lea
dec
cmp
push
and
dec
and
idiv
aad
mov
xchg
dec
pop
push
mov
push
inc
mov
mov
repz
sub
jl
shrl
mov
adc
test
sub
sbb
mov
xchg
mov
mov
fisubs
shll
fisttpl
jno
and
dec
sahf
push
outsl
scas
pop
ret
daa
cmp
xchg
dec
andb
jae
sti
adc
shlb
mov
jo
pop
ret
pop
int
xchg
or
rclb
xchg
jno
push
push
test
add
gs
insb
jo
jl
inc
ret
or
dec
loope
and
pop
lea
inc
add
fistpll
xor
outsl
mov
xchg
xchg
adc
scas
xchg
ljmp
dec
mov
popa
in
rclb
push
pop
mull
clc
dec
mov
sub
adc
xor
jo
push
sub
imul
push
mov
daa
cs
iret
das
out
test
sahf
mov
cmc
shl
jno
pop
jae,pt
jo
sbb
pop
xor
mov
inc
sbb
cwtl
cmpsl
test
fcmovnb
movl
outsb
mov
jae
inc
loopne
ljmp
mov
repnz
mov
loopne
and
pop
arpl
adc
inc
add
inc
ja
loope
dec
shll
and
ret
aam
cmp
pop
mov
in
dec
cltd
test
inc
js
pop
ss
shr
ljmp
bound
mov
jmp
sbb
bound
mov
lahf
inc
int3
lret
sub
dec
fwait
xorb
sub
jl
or
mov
inc
pop
out
js
pushf
xchg
xor
dec
adc
pop
es
adc
enter
inc
int
mov
fdivrl
push
fisubrl
jns
scas
shlb
in
test
and
xchg
mov
repnz
dec
sub
mov
cmp
add
test
or
sti
adc
and
xchg
mov
aam
cmp
xchg
xchg
add
loope
mov
shl
ljmp
sub
sbb
popf
insb
enter
test
es
and
cmp
mov
enter
repz
lock
xor
je
ret
inc
mov
ljmp
popa
cmp
inc
push
mov
mov
mov
out
cld
loopne
adc
ret
icebp
push
inc
loope
scas
sbb
mov
mov
dec
jo
pop
or
jns
dec
adc
inc
stc
cmp
aam
lret
andb
mov
cs
jo
adc
aas
popl
shrb
sbb
mov
xor
jl
pop
pushl
loop
out
xor
adc
stos
mov
jecxz
dec
adc
fcmovu
cwtl
add
sub
dec
popa
sbb
push
mov
loopne
inc
push
mov
stos
xchg
cmpsl
lret
cmp
fsubs
pop
scas
mov
pop
xor
inc
aaa
out
jl
add
loopne
and
add
pusha
fsubrs
xchg
push
and
pop
mov
scas
ds
push
push
jns
and
cmpl
into
std
or
sbb
leave
pusha
stos
sub
fimuls
push
xor
test
dec
in
daa
mov
pop
pusha
out
pushl
loope
or
adc
shll
and
js
dec
outsl
push
je
inc
mov
sub
mov
push
mov
ljmp
sub
imul
mov
pop
stc
push
pusha
out
fwait
xchg
ret
shlb
sub
out
lds
pop
pop
in
iret
jl
dec
add
cmpsb
push
adc
leave
stos
lcall
sub
test
pusha
aas
pop
inc
roll
shll
xchg
pushf
add
cwtl
pusha
test
sbb
shlb
clc
lock
cmp
push
and
push
pusha
data16
bound
sti
jge
mov
cltd
and
mov
pusha
xor
xor
fbstp
cmp
stos
arpl
arpl
add
inc
cwtl
cmp
mov
rclb
xor
pusha
mov
jbe
clc
xchg
mov
pusha
aam
and
push
imul
pop
push
xor
pop
push
or
fisubs
add
or
gs
push
out
or
rcrb
shll
pusha
loopne
std
sbb
inc
movsb
pop
push
ds
stc
add
xchg
and
sti
pushf
pusha
inc
cmpsb
xor
pusha
lods
dec
adc
bound
sub
push
leave
repnz
xchg
dec
test
aaa
fs
pop
jg
push
cwtl
or
pusha
xlat
test
int
mov
flds
stos
enter
pusha
add
push
pop
mov
mov
xor
int
xor
pusha
jecxz
imul
out
into
fsub
mov
sub
dec
lahf
pusha
popf
invd
push
pop
pusha
sub
test
je
cmp
jb
gs
ror
pop
jnp
inc
add
adc
les
jae
int3
iret
es
cld
adc
sbb
gs
aad
mov
xor
add
sub
pop
scas
lock
shll
shr
cmp
outsl
adcb
push
fiadds
pop
mov
cwtl
or
push
pop
fs
dec
in
inc
fs
imul
adc
lret
mov
mov
dec
dec
out
adc
lcall
movsl
mov
xchg
pusha
or
mov
mov
outsb
loope
and
cmova
sbb
pop
jmp
xchg
ljmp
dec
scas
shll
dec
cmp
cld
push
lret
fistpll
mov
fdivrl
mov
jge
movsb
fsubp
fldt
sbb
xchg
insl
push
adc
fbld
cld
inc
lcall
dec
sub
and
adc
mov
fs
sub
jae
aam
inc
jne
pusha
iret
push
mov
jnp
pusha
shll
movsl
icebp
jl
ret
movsbl
mov
pusha
push
mov
and
inc
clc
jl
dec
imul
inc
dec
mov
into
cmpl
or
in
sub
repnz
cwtl
mov
scas
and
lea
ss
pop
popf
pusha
sti
jg
pop
enter
je
jl
xor
test
pop
out
xchg
cmpsb
icebp
jecxz
and
sahf
cs
shl
inc
and
push
rcr
inc
loopne
or
adc
mov
lret
test
pop
push
inc
mov
mov
in
and
lret
inc
out
mov
pusha
mov
mov
mov
shrb
xor
es
pusha
pop
jno
fnsave
inc
jg
mov
aaa
pop
lods
cmp
gs
sub
imul
jl
xor
xchg
bound
jecxz
or
punpcklbw
les
mov
sbb
xchg
bound
sub
mov
push
push
int3
in
xchg
insb
xchg
fdivrl
sbb
push
cmp
sbb
push
in
mov
fisubl
scas
push
es
jbe
inc
xchg
adc
test
xchg
pop
cmpsl
fs
rorl
int
pusha
adc
stc
pop
pop
ja
sbb
loop
fisubl
lods
sahf
cli
sbb
dec
pusha
mov
fwait
push
pusha
adc
push
aam
add
gs
xchg
dec
icebp
mov
pusha
sub
or
es
push
push
jle
add
hlt
push
addr16
fs
lret
imul
inc
pop
fs
add
mov
jp
faddl
pusha
lds
jns
jle
jnp
insb
sbb
aam
je
imul
pusha
xlat
stos
pop
scas
arpl
aas
pusha
push
int
sbb
inc
sti
jns
pop
jae
fiadds
jl
cmp
inc
sub
lcall
inc
inc
xor
mov
loop
out
add
or
addr16
ror
arpl
jbe
sub
push
inc
outsb
inc
xchg
pop
pusha
or
in
repz
mov
test
lcall
daa
xchg
arpl
push
in
pusha
stc
sub
jnp
adc
pusha
jg
mov
mov
mov
mov
inc
loop
inc
sbb
pusha
pop
aas
dec
inc
loopne
ret
es
ret
cmp
pusha
xchg
xor
mov
lret
and
out
out
stos
pusha
dec
mov
push
aad
mov
inc
and
mov
shll
pop
aam
fstps
and
dec
pusha
jnp
inc
pop
loopne
imul
clc
loopne
adc
and
push
adc
popf
out
mov
mov
ret
inc
hlt
aaa
xchg
sub
and
mov
and
lcall
fldcw
cltd
cmp
jl
inc
or
fwait
arpl
ja
mov
std
sbb
fimull
je
sub
insb
sub
inc
mov
mov
andl
adc
mov
push
icebp
jbe
sti
fistpl
outsb
ljmp
insl
xor
sarb
insb
pop
inc
ljmp
push
cs
les
out
popf
push
ficompl
dec
inc
push
addr16
pusha
dec
xor
fisttpll
lahf
add
pusha
popf
sub
mov
stc
mov
ds
enter
xchg
test
std
xchg
lret
ret
loope
xchg
loop
xchg
insl
pusha
add
shrb
jmp
mov
imull
arpl
insb
cs
bound
xor
sbb
loopne
add
sbb
sahf
push
xchg
lods
xor
aaa
std
push
pusha
push
les
mov
mov
sub
mov
push
fists
iret
fs
gs
sub
arpl
adc
xchg
pop
xchg
mov
add
fsubl
lret
mov
loopne
pop
pusha
add
inc
adc
or
mov
adc
add
fsts
jle
mov
dec
js
shlb
repnz
faddl
mov
pusha
mov
or
pop
xlat
sub
inc
aad
popa
lret
inc
lods
and
shll
cmp
and
rorl
fs
jmp
sti
insl
fistpl
inc
cmp
pusha
addr16
movsl
inc
inc
ss
movsl
mov
jae
push
jecxz
push
pop
add
jb
adc
cmp
push
sahf
pop
pop
dec
in
sbb
insl
and
inc
rcrb
rcr
inc
push
fs
push
push
push
inc
cmp
bound
sub
xor
and
cs
pop
out
out
ss
ds
jbe
gs
jae
rcrb
aaa
sbb
hlt
ficomps
inc
sbb
pusha
data16
add
pusha
mov
cmpsb
daa
xor
jo
xlat
pusha
and
ja
fisubs
aaa
xlat
lds
je
inc
aad
hlt
ss
add
push
pop
cmp
inc
dec
frstor
cmp
popa
imul
sub
cs
cmp
xchg
mov
cmp
scas
mov
out
mov
push
cmp
inc
popf
icebp
fld
add
pop
rol
dec
pop
ret
push
dec
lcall
jno
stc
jns
xchg
nop
cmp
jecxz
xchg
xchg
hlt
or
sub
and
sahf
mov
sti
testl
lcall
pop
clc
jne
hlt
aaa
std
outsb
jb
add
dec
dec
in
xchg
push
mov
push
in
pushl
cltd
jo
shlb
lret
jae
sub
inc
push
inc
ja
and
mov
stos
nop
stos
negb
cmp
rcrl
ja
repz
stc
cmpsl
mov
lret
enter
scas
dec
inc
lahf
lods
inc
sbb
adc
cmpl
shl
std
pop
jl
adc
lcall
dec
rcr
aaa
std
clc
jl
push
gs
daa
out
orl
stos
jnp
inc
mov
roll
jns
mov
cwtl
pop
cmp
jg
call
in
shll
or
cld
adc
outsb
push
xchg
lahf
sub
mov
dec
inc
addl
bound
mov
cmp
mov
enter
sub
mov
mov
leave
outsl
fs
cmpsw
or
and
shll
scas
jmp
mov
add
pop
popa
adc
loop
mov
pop
hlt
roll
add
xor
insb
shrl
call
jno
cmp
lock
sub
aas
cmp
lods
test
adc
mov
mov
pop
lcall
data16
jne
push
push
adc
inc
rorl
in
loop
mov
sbb
aas
mov
sti
ficompl
jns
test
test
sbb
inc
mov
ret
popf
sbb
filds
inc
and
loopne
loopne
notl
add
stc
insb
or
test
enter
sub
fnstenv
outsb
and
cmp
addr16
mov
dec
rcrl
xchg
or
push
fldt
mov
and
mov
add
cltd
mov
cmp
sbb
adc
mov
outsl
movsl
inc
mov
shll
iret
getsec
pop
mov
pop
push
outsl
lds
push
push
push
push
inc
decb
sbb
mov
xchg
xchg
jo
xchg
mov
jg
add
fisubs
adc
and
clc
adc
sub
and
jne
ret
cwtl
push
sub
jmp
mov
fldenv
inc
and
je
and
push
jo
aaa
sub
push
mov
dec
movsb
outsl
xor
inc
mov
loope
jg
lret
push
shll
pop
and
or
add
ret
and
cmp
sti
mov
leave
outsl
insb
enter
mov
push
fadd
clc
pop
in
dec
mov
dec
int
cmp
push
push
aaa
pop
push
cmp
in
inc
sbb
pusha
movsl
popa
mov
pusha
xorb
andb
pop
jne
mov
add
xchg
ljmp
aad
pusha
imul
aas
sarb
in
cmp
dec
fisttps
not
leave
mov
pusha
sub
sub
mov
mov
sub
imul
or
les
outsb
test
ret
jo
fs
xlat
xchg
jl
sub
mov
repz
cmp
lods
mov
pop
jl
and
cmp
mov
pusha
mov
and
mov
outsl
imul
mov
adc
xlat
and
adc
jo
les
and
fs
jmp
or
movsl
xor
fdivr
pusha
andb
subb
pusha
pop
lcall
pusha
inc
mov
cmp
pusha
loopne
jg
dec
pop
mov
xchg
ljmp
pusha
push
icebp
sub
adc
daa
xchg
or
fcomps
bound
and
cmc
jge
das
cmp
stos
mov
pop
test
bound
xor
faddl
sti
clc
mov
pusha
test
jnp
dec
sahf
fs
jbe
adc
and
pop
cmp
dec
sbb
int3
sub
out
mov
xchg
xor
cmp
pusha
lahf
jno,pn
fisubl
and
out
xchg
insb
fsubr
les
mov
scas
mov
pusha
aad
push
add
push
outsb
adc
adcb
mov
out
insb
and
push
adc
jnp
lods
jmp
lret
add
imul
inc
mov
inc
mov
ljmp
cmp
push
mov
push
lcall
mov
xchg
push
fs
cmpsb
dec
or
pop
leave
ja
popa
out
sub
pusha
shrl
sbb
dec
arpl
out
scas
pop
jmp
addr16
jecxz
pusha
mov
lahf
lods
xor
fdivr
pusha
lret
and
pop
inc
pusha
mov
fistl
pop
sahf
and
push
sti
js
test
mov
jno
and
mov
fsubl
inc
pop
fists
je
shlb
adc
xchg
rcr
cmc
pop
pop
insb
xorl
icebp
dec
mov
xor
ds
std
or
xchg
movsl
pusha
dec
daa
inc
push
je
jmp
fnstsw
sbb
fs
fs
arpl
insl
mov
jae
xchg
pusha
ss
fildll
xor
data16
or
jge
insb
fstl
and
addl
bound
cmc
popa
scas
ret
pusha
mov
mov
rcrb
adc
scas
pusha
pop
fldenv
inc
sahf
cmp
into
fisubs
push
dec
push
jae
mov
stos
xchg
mov
inc
pop
loope
pusha
nop
jnp
xor
add
mov
dec
pop
cs
lret
adc
sti
sbb
arpl
pop
ljmp
sbb
pusha
push
or
cmpsl
loop
mov
xor
jl
xor
mov
pusha
mov
mov
lods
push
rcrb
mov
mov
lock
sub
pusha
cmp
xchg
sbbb
xor
sbb
xlat
mov
add
mov
xor
inc
mov
push
int3
rcrl
inc
les
xchg
shlb
dec
and
pop
jb
pusha
pop
xlat
inc
jle
in
std
fs
cmpsl
pop
andl
pop
test
xchg
dec
inc
xchg
dec
in
xchg
jb
pop
fwait
adc
pop
jae
adc
test
sahf
rorl
lods
pop
bound
aaa
add
push
xchg
cmp
sbb
mov
std
arpl
cmp
in
dec
pop
cmp
push
insb
inc
popf
cmpsl
mov
fcompl
cmp
imul
sub
aam
push
lds
pusha
xlat
data16
iret
fdivl
lock
rcrl
lods
pusha
xchg
pop
and
or
aaa
imul
fdivs
pop
jnp
test
loop
into
cli
dec
push
xchg
out
dec
stos
jo
sub
dec
lret
pusha
cmp
fnstenv
ret
jne
pusha
push
pop
mov
pusha
sarb
enter
cld
bound
xchg
aam
ss
push
pop
insb
add
fwait
add
cld
push
sub
mov
mov
mov
dec
and
bound
test
mov
cmp
xor
mov
or
fcomps
sub
pusha
repz
mov
jno
and
lods
mov
lcall
loopne
add
int
fwait
push
mov
mov
pop
sbb
ljmp
or
push
loop
dec
outsl
dec
and
aam
mov
test
mov
sti
add
mov
pusha
in
dec
adc
pop
inc
stos
rcll
loope
sbb
dec
or
sub
add
cmp
jae
add
out
pusha
jnp
add
push
mov
pusha
pop
mov
inc
pushf
fmull
xorl
jp
mov
jmp
jecxz
lret
sub
mov
dec
sbb
loope
push
pop
outsl
add
jecxz
ja
xor
test
mov
inc
pusha
sbb
mov
cmp
or
sbb
push
sub
push
nop
rclb
jl
mov
mov
jae
lds
lea
cwtl
enter
jne
andb
lods
fs
mov
mov
imul
data16
enter
je
ret
mov
jge
sub
jecxz
movsl
push
dec
pusha
jb
mov
pop
jae
in
popa
cwtl
fdivrs
aad
pusha
xor
cli
add
lods
lock
out
roll
test
pusha
mov
and
cmp
xorl
push
daa
dec
mov
push
int3
dec
adc
xor
std
sbb
mov
pusha
popf
xlat
scas
and
out
mov
cli
rcrb
pusha
dec
add
pop
mov
lret
push
xor
cltd
movsl
xchg
pusha
cmp
lea
xor
mov
das
pusha
test
test
jb
adcb
mov
jle
aad
or
outsl
insb
dec
add
arpl
rorb
addb
adc
sbbl
out
mov
pop
sbb
mov
sbb
inc
lds
inc
cmpsb
scas
jo
mov
fs
or
pushf
push
xchg
js
decl
lds
or
fnstenv
jl
orl
add
aas
mov
push
add
cs
scas
inc
pop
divl
adc
cmpb
xchg
cmpsb
mov
sbb
push
addr16
das
push
ret
push
adc
repz
mov
loop
dec
pusha
add
jbe
ja
sahf
es
or
dec
fidivs
xlat
jae
cltd
mov
pusha
xchg
stc
cwtl
testl
add
mov
cmp
jb
jl
fldcw
mull
gs
add
insl
imul
cmp
clc
out
inc
insb
in
sbb
push
loop
mov
xor
inc
movsl
mov
cmp
or
aam
fsts
push
inc
stos
mov
gs
fistpll
mov
sahf
jg
dec
test
aaa
sti
mov
in
cmp
ds
push
adc
cld
add
addl
mov
pop
ret
xor
das
pop
jg,pn
add
loopne
frndint
loope
sbb
je
mov
rorl
mov
fadds
inc
push
inc
pop
imul
push
dec
jno
xchg
addr16
push
cmp
mov
daa
addr16
push
jp
lcall
repnz
and
xchg
pop
int
outsb
push
pop
or
or
ret
out
xchg
les
shll
adc
loopne
xor
cmp
push
mov
into
inc
lret
add
push
pop
sub
leave
mov
xorb
inc
lahf
ret
fsubr
lret
jb
ja
inc
adc
mov
sub
xor
mov
mov
bound
imul
cmp
and
leave
dec
pusha
stos
fwait
testl
addr16
xchg
push
mov
outsb
test
insb
outsb
pop
pop
call
sub
shlb
pop
pusha
loope
jnp
addr16
inc
cmpsb
dec
inc
jecxz
mov
lret
xlat
mov
add
mov
push
push
xchg
pusha
inc
and
out
or
pop
sbb
lret
xchg
cmpsl
pusha
dec
icebp
jae
push
push
inc
add
pushf
dec
cmc
in
gs
xchg
pusha
stos
clc
mov
cmp
sbbl
outsb
loopne
popf
sarb
cwtl
loop
mov
push
mov
out
fistl
dec
cmp
jecxz
out
adc
sbb
fistl
sbb
jl
dec
pusha
and
test
pusha
xchg
push
call
push
mov
add
pusha
addr16
push
or
les
add
sbb
xor
js
add
mov
cmp
mov
xchg
pusha
jnp
or
add
into
insb
pop
cmc
push
test
rolb
jo
insl
sbb
lahf
pusha
mov
mov
ret
mov
je
and
out
mov
pusha
push
insb
mov
jge
js
fs
ret
pop
enter
xor
add
jno
pusha
popf
faddl
xor
lods
fwait
lods
pusha
test
das
daa
pusha
cld
out
enter
push
popf
mov
in
loope
sub
mov
mov
bound
add
and
fcmovu
pop
or
aaa
out
inc
out
sub
pusha
call
fisttps
imulb
std
pusha
dec
jns
jno
jnp
mov
pop
in
pop
or
push
xlat
adc
dec
pusha
jns
addr16
les
sub
adcl
pusha
test
fidivrl
pusha
lahf
xchg
popa
and
xchg
pusha
cmp
rclb
pusha
jl
mov
lret
pusha
lcall
mov
jnp
mov
pusha
mov
scas
xlat
push
popa
repnz
pusha
lock
outsb
mov
xchg
bound
cmc
and
pusha
cwtl
pop
clc
pop
jp
dec
js
mov
pop
data16
shr
push
gs
xor
inc
pop
popf
and
imul
xor
mov
sbbl
jl
fidivrs
outsb
les
ret
popf
mov
pop
xor
mov
mov
pop
cwtl
lret
roll
sbb
repz
sbb
mov
pusha
in
ljmp
xor
mov
repz
or
jo
movsb
mov
mov
inc
pusha
ftst
add
ljmp
jmp
popa
mov
cli
stos
pusha
psllq
push
popf
sbb
fdivrs
mov
sub
fcomip
mov
mov
arpl
das
adc
out
or
xor
pusha
mov
jg
pusha
adc
je
call
std
jl
gs
dec
add
add
test
out
push
sub
sbb
pusha
fdivrl
dec
mov
pusha
jno
pop
pop
adc
push
or
js
sbb
or
cli
popf
hlt
sub
jl
addr16
cwtl
and
enter
jo
jno
int
jg
mov
pusha
daa
insb
rcrl
xor
ss
mov
mov
lds
or
lock
pusha
jecxz
pop
loopne
clc
sub
test
pusha
xor
bswap
mov
push
mov
in
pop
adc
pusha
adcl
rclb
sbb
inc
xor
cmp
leave
inc
and
nop
shlb
xchg
inc
pusha
ja
and
daa
insb
jecxz
js
cmp
inc
inc
mov
pusha
cwtl
xor
out
jb
into
sahf
pusha
cmp
adc
es
dec
pusha
fwait
out
mull
lea
pusha
test
dec
ret
lahf
jns
imul
out
pop
clc
fldt
pusha
xchg
ja
cld
xor
mov
add
inc
mov
mov
push
movsl
xchg
mov
push
dec
in
push
pop
sbb
add
mov
cli
addl
mov
pusha
filds
in
cmc
cmpsb
and
dec
in
arpl
cs
stc
pop
lret
fisubrs
adc
fs
push
dec
test
pusha
add
lods
and
push
rolb
push
jno
lret
roll
pop
fimull
iret
pusha
addr16
test
push
add
lods
xchg
fsub
pusha
arpl
inc
push
pushf
clc
mov
test
push
xor
cmp
fs
enter
jbe
sub
add
inc
mov
test
dec
push
repnz
pop
sbb
loope
das
pop
pop
repz
pusha
lea
andb
add
mov
mov
lods
jl
cwtl
test
lds
ficompl
ss
bound
fwait
jns
scas
push
mov
inc
lock
pusha
push
sbb
fsubs
sbb
ror
mov
mov
scas
inc
ja
pusha
lcall
out
pusha
test
dec
add
lret
pop
subl
push
inc
cmp
dec
add
mov
xchg
cmp
aam
add
fs
pop
cmp
and
pop
hlt
cmp
pop
push
popf
xchg
ds
jecxz
adc
pusha
cmp
sub
adc
call
add
push
iret
jecxz
dec
adc
xor
adc
ret
add
cli
call
and
jno
add
pusha
jnp
ret
add
xchg
aam
bound
into
subb
push
jo
adc
das
arpl
jne
clc
pusha
pop
data16
js
scas
ficoms
add
mov
loope
sbb
leave
fldcw
pushf
add
push
pop
adc
shlb
mov
and
test
lret
outsb
loopne
sti
popf
xchg
fs
loop
mov
outsb
je
insb
mov
pusha
dec
cmp
inc
repz
es
dec
cmp
pop
aas
xchg
sbb
push
mov
faddp
and
push
lods
adc
jnp
clc
pusha
fmuls
sbb
mov
inc
cmp
or
cmp
push
ret
lea
jle
inc
rcrl
xchg
mov
cld
add
push
dec
ret
sbb
repz
push
enter
xchg
and
jae
ss
and
pusha
mov
sbb
sub
xchg
adc
popl
mov
orl
mov
xchg
pusha
lret
rep
xchg
sbb
addr16
and
jl
push
in
hlt
in
pusha
out
jp
popf
das
sub
mov
dec
out
mov
popf
dec
mov
punpcklbw
mov
testb
bound
ret
cmp
mov
in
pusha
jge
push
xor
xorl
std
arpl
mov
mov
jl
mov
in
shll
out
sub
and
loop
ds
rorb
pop
jmp
call
fwait
pop
movsl
inc
insl
pusha
ret
test
push
adc
imul
iret
dec
dec
cs
arpl
inc
mov
ss
or
xchg
aas
sbbl
inc
pop
adc
and
inc
jb
cmp
or
shlb
imul
sub
inc
add
ja
or
aaa
push
pusha
inc
add
adc
int
add
pop
ret
std
fucomi
adc
adc
or
mov
sub
and
pusha
mov
fstps
add
aam
xchg
sti
pop
sbb
leave
push
inc
les
xor
and
aam
into
pop
xchg
xchg
enter
dec
push
add
pusha
bound
insl
sarb
sub
cs
mov
add
jge
mov
dec
addr16
mov
scas
jbe
lds
sbb
sbb
loop
cld
daa
jo
dec
jge
mov
jl
push
cmc
xchg
pop
and
xchg
popa
lock
in
shlb
enter
jo
cmp
fsubl
mov
cmp
push
add
aam
imul
or
cwtl
std
xchg
out
loopne
jo
mov
gs
push
mov
cwtl
pop
aam
and
jp
push
jge
cmpsl
inc
loop
hlt
xchg
gs
xchg
add
lea
dec
sbb
fdivl
fs
in
inc
sub
bound
sbb
sarb
mov
dec
jp
into
ja
ficoml
mov
insb
pusha
test
nop
mov
stc
sbb
repnz
andl
repz
adc
xorb
mov
and
adc
ret
fidivs
adc
leave
int3
push
lock
push
pop
push
push
and
fldt
lret
pop
repz
sub
test
ret
cmpsl
cwtl
inc
ds
sti
push
cld
stc
inc
aas
and
inc
sub
or
shl
xor
fwait
js
cmpxchg
lret
mov
sub
stos
xchg
inc
sub
xchg
bound
jmp
loop
cmp
mov
or
rcr
fcoml
fsin
and
pusha
and
sbb
rol
out
mov
lods
mov
push
bound
push
sub
cwtl
mov
or
addr16
inc
insb
jl
push
xchg
adc
int3
dec
mov
js
loopne
xchg
sbbl
or
sub
out
enter
loope
cmpsb
xchg
or
out
ja
jno
fwait
mov
inc
and
out
mov
enter
xor
xchg
jo
xchg
fmul
and
inc
add
lahf
fwait
sbb
mov
mov
ja
pop
push
mov
pushf
enter
adc
jl
loopne
and
popa
pop
js
xor
dec
xchg
inc
ret
xlat
sbb
mov
shr
clc
sbb
lret
fistps
ret
push
shll
lods
loopne
sahf
cwtl
pop
test
inc
xor
and
loope
icebp
or
loop
add
inc
out
lahf
pusha
sahf
divb
xor
jnp
pop
loope
sbb
insb
js
cmp
mov
lcall
cwtl
or
movsl
adc
adc
pop
loopne
sub
and
cmp
stos
mov
mov
je
push
ret
nop
popf
inc
push
jmp
pop
inc
addr16
or
icebp
push
cli
daa
fcmovne
jbe
xor
jecxz
shll
int3
pop
dec
bound
inc
leave
xor
inc
inc
mov
das
movb
push
mov
mov
mov
out
adc
xorl
cmp
xchg
lds
std
jno
sarl
and
mov
cmp
shl
lret
popf
hlt
mulb
in
inc
sti
out
xlat
stos
icebp
fisubrl
or
in
sub
push
es
filds
loope
orb
pushf
jge
cmp
addl
sub
or
inc
adc
mov
sub
pop
lahf
mov
fldcw
mov
add
ret
adc
fisubs
cmp
xor
sub
jecxz
mov
out
ljmp
mov
cmc
or
jb
inc
mov
cs
sub
sub
sub
fwait
adc
nop
sub
scas
mov
sbb
or
xor
je
mov
inc
cld
ret
push
jno
push
cmp
das
adc
and
je
fwait
mov
inc
xchg
ja
cld
ret
adc
pop
inc
add
popf
cmp
mov
inc
lahf
inc
test
aam
test
adc
das
pop
and
mov
ja
push
dec
fimull
push
mov
lcall
mov
add
cmp
lcall
cli
mov
adc
scas
push
xchg
mov
scas
sbb
mov
addr16
iret
add
jnp
inc
shrb
fwait
in
push
lods
pusha
push
mov
popa
pop
pop
shl
lahf
cmpsb
gs
sub
mov
xorb
and
push
data16
mov
out
leave
scas
addl
pop
pop
lock
mov
div
les
and
decl
in
push
cltd
xor
ja
iret
adc
jo
pop
xchg
into
push
mov
xor
call
adc
cmp
icebp
lret
lock
subb
dec
lahf
mov
inc
iret
popa
xor
mov
movsb
push
roll
addr16
loopne
sbb
fprem
test
push
jecxz
hlt
xchg
and
vunpcklpd
add
jge
or
pusha
rcrb
jp
bound
xchg
in
movl
es
add
sub
or
inc
daa
push
fucom
or
hlt
dec
movsl
call
scas
sub
pop
sbb
inc
ret
adc
fstl
in
dec
sbbb
cwtl
mov
sub
mov
pop
pop
aaa
inc
or
or
add
mov
lods
mov
stos
inc
sub
add
negb
pop
sub
sub
adc
fcompl
ljmp
movsb
sbb
pop
xlat
sub
mov
xchg
and
pushf
inc
xorl
out
fs
fistpl
inc
pop
loop
mov
ja
mov
inc
jnp
pop
loop
repz
xor
jo
aaa
push
lock
push
xor
xchg
repnz
jno
jmp
aas
cmp
icebp
and
xchg
pop
and
jno
sarb
pop
je
pop
adc
lahf
lock
iret
pop
sub
daa
lods
stc
xor
insb
pop
pop
or
fs
ljmp
xchg
xchg
mov
rcrl
dec
pop
mov
xor
je
mull
sub
mov
inc
cmp
or
pop
pusha
imul
or
popa
pop
jno
loope
sar
push
out
pusha
popa
jle
xor
xor
clc
mov
add
ja
fsubs
jbe
mov
mov
or
cli
push
mov
std
in
xor
das
test
adc
sub
imul
push
ljmp
jl
pusha
sub
or
in
pusha
js
outsb
lss
cld
inc
test
or
or
adc
loopne
rcr
xor
movsl
pop
addr16
or
int
iret
imul
jecxz
adc
mov
mov
adc
pop
sub
hlt
add
adc
sbb
out
push
pusha
jb
xchg
cmp
cmpsb
pusha
adcl
jmp
icebp
stos
mov
mov
push
ljmp
mov
mov
xchg
pusha
xchg
mov
pusha
mov
sahf
cwtl
mov
ret
xor
andl
js
fwait
cmp
mov
shrl
jnp
push
inc
pusha
nop
sbb
loopne
in
pop
xor
cmpsb
fstps
pusha
inc
xlat
fadds
rcrl
cmp
pusha
or
fs
pop
dec
adc
sbb
pop
and
mov
lods
pusha
jae
and
cwtl
xchg
pop
jp
push
sbb
xor
fldenv
add
or
fdivrs
sub
js
mov
pusha
dec
cli
cmpsb
int3
mov
andl
in
mov
stos
faddl
dec
sbb
ret
pusha
andb
fisttps
movsb
add
jl
loopne
repz
pusha
cmp
xor
movl
ret
pop
and
sub
lahf
out
outsl
jmp
cwtl
pusha
int3
arpl
test
push
insb
or
mov
add
rcl
adc
nop
jne
cmp
pusha
mov
xchg
fsubs
test
push
bound
sub
aad
sub
jnp
andb
add
loopne
dec
sub
pop
enter
adc
pop
mov
lods
push
in
adc
pusha
dec
xor
sub
pusha
lret
push
prefetchw
hlt
out
outsl
icebp
lods
pop
jnp
faddl
repz
pusha
stos
mov
divl
pusha
xchg
jb
mov
sub
rolb
sub
insl
mov
cld
aam
fists
mov
fcoms
pop
jle
pusha
ss
loopne
ljmp
fldcw
cmpsl
rcl
inc
sahf
dec
fwait
inc
pusha
push
xchg
enter
std
adc
ret
pusha
pop
cmpsl
jge
iret
in
mov
adc
pusha
add
push
rol
fcoml
int3
ljmp
mov
push
sbb
lock
mov
orl
dec
jb
push
cltd
std
mov
and
mov
bound
out
pusha
xchg
push
sahf
jb
and
jno
shrb
inc
mov
lods
mov
mov
aaa
mov
sub
pusha
xor
adc
inc
cmp
mov
push
mov
mov
dec
in
jnp
jle
xchg
nop
outsb
test
xor
gs
cltd
xor
mov
mov
ja
mov
pushf
mov
push
bound
adc
or
ret
test
lods
cmpsb
test
jp
push
cmp
cmp
pop
sti
lds
sbb
jle
arpl
mov
pusha
gs
jmp
add
and
scas
shlb
rclb
pop
push
pusha
je
jno
ja
cs
dec
in
ja
bound
add
loop
sub
pusha
jne
pop
out
push
aaa
fistl
mov
cwtl
mov
pusha
dec
mov
pop
fsubrs
and
pusha
sbb
mov
pusha
es
inc
jmp
jl
pop
pop
jae
xor
push
stos
stos
aaa
inc
mov
push
vsqrtsd
jg
lahf
pusha
stc
mov
pop
bound
ja
jp
cmp
xchg
pop
pusha
jl
jnp
imul
cwtl
mov
pop
pusha
and
jnp
pop
fcmovnbe
popf
pusha
jecxz
ds
insb
mov
xlat
repnz
mov
pusha
sti
mov
fldt
adc
ljmp
add
fs
jo
add
movsb
imul
push
sub
push
bound
sub
ret
xchg
hlt
cli
aad
pusha
gs
fldt
lock
dec
mov
fcmove
dec
jp
scas
pop
rdmsr
add
push
inc
and
aad
pop
lods
xor
jne
lcall
or
out
clc
cmp
sbb
loope
and
inc
pusha
add
dec
sbb
movsl
push
ljmp
pusha
mov
das
or
lret
jae
mov
push
jecxz
inc
sub
test
push
and
adc
jge,pt
cmpb
xchg
cmp
fstpl
loopne
mov
in
or
push
pusha
jns
rcrb
sti
pop
shll
ja
les
push
mov
mov
pop
push
dec
or
cs
and
add
cmpsb
shll
stos
mov
stos
xor
je
mov
das
scas
sub
pop
pop
xchg
arpl
sub
and
pop
pusha
aam
dec
push
adc
jb
xchg
loopne
dec
mov
xor
cmpsb
mov
push
test
enter
and
les
test
js
and
jle
and
push
outsb
inc
pusha
idivb
adc
or
aam
dec
hlt
lock
lods
sub
pop
fisubrs
loopne
inc
push
pop
sbb
and
nop
shlb
xchg
push
add
mov
frstor
int3
shlb
add
push
push
std
fwait
movsb
mov
cmp
xor
pop
das
shrl
mov
push
dec
punpcklbw
loope
adc
mov
and
sub
sbb
pusha
jp
fdivrs
rorb
sub
xor
test
or
cmp
cmp
addr16
pop
bound
pusha
loop
lock
stc
insb
ljmp
inc
sti
lcall
mov
les
daa
add
repnz
cmpsl
or
jecxz
pushf
xchg
mov
pusha
xlat
shlb
cmp
xchg
into
sbb
push
repnz
mov
fs
aas
xor
xchg
inc
jl
pop
loop
popa
sub
xor
pusha
test
jb
xlat
pusha
add
or
pusha
cmc
jno
cwtl
fnstsw
add
data16
pop
mov
ret
divb
pop
bound
stos
test
mov
push
sti
lea
fsubrs
gs
insb
int3
xchg
adc
out
jecxz
in
lock
fcmovnu
inc
xor
jnp
cwtl
inc
cwtl
jb
push
xchg
fisubl
mov
sbb
pop
insb
jmp
xchg
jmp
or
jg
nop
push
inc
rclb
pop
test
jecxz
jl
inc
movsl
adc
sub
pusha
mov
cmp
push
rolb
stos
fisttpl
pusha
or
inc
mov
cmp
cmp
pusha
test
jle
or
rcl
pusha
sbb
out
mov
das
in
xchg
daa
jnp
sbb
movsl
imul
dec
sti
xor
mov
loop
lods
lahf
fbld
idiv
out
inc
ss
inc
loope
pop
adc
adc
jne
roll
aam
add
add
getsec
push
inc
lods
push
pop
inc
lahf
dec
fldenv
push
les
pop
loope
mov
cmp
jecxz
in
lret
ret
sbbl
gs
or
pusha
dec
ficomps
jle
cmp
aas
loop
push
pusha
adc
flds
pusha
testl
jecxz
dec
inc
mov
ss
movsl
iret
femms
dec
outsl
arpl
jno
pusha
xor
sub
int3
pminsw
fs
adc
imul
aad
xchg
cmp
cld
out
adc
push
and
mov
fwait
inc
pusha
aam
stos
push
dec
icebp
dec
add
mov
mov
arpl
mov
add
pop
push
xchg
loop
shlb
int
inc
push
mov
aad
sti
or
popf
adc
mov
xor
loope
out
das
jle
adc
and
push
out
adc
cmp
mov
cmpsb
shll
ret
sti
sub
add
pusha
imul
cmpsb
add
jle
xor
or
into
outsl
mov
pusha
lea
iret
sbb
lahf
dec
inc
add
data16
ret
vunpcklps
mov
cwtl
jecxz
sub
ficoms
dec
inc
dec
sub
movsb
xor
dec
es
and
popa
adc
push
pop
rcll
pushf
xchg
inc
aas
mov
fsubl
sti
sbb
dec
aas
mov
inc
add
jl
or
shlb
sbb
jg
pop
scas
fdivrl
stos
pusha
mov
daa
pusha
test
sub
cmp
xor
stc
ja
pop
aaa
add
enter
rcr
sub
pop
arpl
and
pusha
shll
lods
cmp
cmp
pusha
pop
mov
out
loope
fs
jb
xor
sub
mov
push
ret
lret
mov
andb
sbb
dec
inc
sub
jo
push
pop
jnp
dec
mov
mov
sub
and
lds
lahf
mov
mov
pusha
pop
shl
adc
sbb
loope
or
test
sbb
jecxz
pop
push
sub
xchg
inc
pusha
xchg
adc
jmp
shrb
arpl
mov
leave
xorl
jecxz
mov
sbb
dec
into
in
arpl
mov
or
fwait
loopne
or
jg
loope
orb
mov
push
jbe
fmull
insb
pop
mov
pop
inc
jecxz
insl
mov
mov
out
xchg
fwait
inc
jp
mov
bound
mov
pusha
lods
fists
je
nop
int
adc
pusha
sahf
aaa
xchg
cmpsb
popf
dec
fidivrl
dec
lret
icebp
loopne
pop
xor
cld
jl
les
jns
iret
outsb
pop
mov
in
lea
bound
pusha
mov
adc
jl,pt
push
push
xchg
cmc
sbb
sub
lret
loop
dec
xchg
sbb
fs
and
aaa
adc
ret
and
cmp
or
inc
ja
adc
imul
jecxz
mov
in
fmull
test
jl
xchg
inc
dec
mov
pop
mov
mov
out
pusha
enter
jbe
add
pusha
shll
arpl
rol
xor
addl
inc
mov
lods
xor
scas
sub
jle
mov
push
xlat
push
aam
inc
mov
daa
outsl
cmp
mov
sub
and
pop
pop
in
xor
mov
daa
jo
mov
jmp
js
or
nop
lret
jns
jge
pop
fsub
xor
fs
cmp
jo
mov
mov
dec
andl
popf
sbb
stc
hlt
inc
jno
sbb
and
sbb
add
inc
sahf
lods
bound
out
cli
adc
sub
dec
push
xchg
sub
dec
mov
jae
fistps
mov
mov
out
fmuls
adc
addr16
inc
shrb
add
dec
mov
cmp
sbb
scas
mov
stc
js
pop
dec
pop
dec
push
inc
xchg
inc
lcall
adc
sarl
addr16
enter
jno
mov
push
adc
mov
aam
jmp
movsl
in
push
test
or
add
add
out
scas
mov
mov
in
sahf
add
pusha
fldenv
outsl
push
adc
mov
inc
or
icebp
je
js
dec
ds
fldenv
ret
pushf
mov
sub
fidivl
mov
je
jo
pop
jp
xchg
ret
ror
add
out
or
js
mov
lret
popf
icebp
jl
adc
add
and
cltd
push
sahf
adc
das
xor
push
inc
mov
adc
pop
sub
or
dec
jmp
mov
setae
xchg
ljmp
and
ds
testl
sbb
rcl
inc
stc
in
jno
mov
adc
enter
mov
fwait
loope
adc
dec
aas
insl
rorb
not
sti
pusha
inc
jmp
dec
aad
and
nop
pushf
data16
pextrw
mov
pusha
stc
add
mov
pop
jbe
in
push
cld
cmp
xchg
dec
xchg
cltd
xchg
mov
push
scas
jl
aaa
out
xchg
cmpsl
add
lock
insl
into
sub
and
pusha
fisttpll
mov
dec
push
pop
pop
cmpsl
lea
dec
xchg
popf
sub
push
sub
nop
loop
pusha
sbb
shll
and
test
jl
lret
pop
js
lcall
ret
push
push
bound
cwtl
into
inc
pusha
mov
pusha
repnz
pop
nop
mov
pushf
lods
mov
std
cmc
xor
pop
mov
pop
add
xor
mov
pusha
les
push
pusha
faddl
mov
aas
in
jo
lods
lahf
adc
fimuls
and
test
loop
icebp
std
loope
stos
insb
adc
jecxz
mov
pop
shl
cmp
loopne
loope
add
or
mov
fisttpl
xlat
adc
xor
cltd
jmp
and
rol
pusha
dec
jg
push
cmp
xchg
imulb
cld
arpl
cwtl
sub
pusha
or
jne
mov
dec
pusha
or
mov
pusha
aaa
xor
cmp
mov
fs
aas
inc
jne
dec
popa
out
pusha
movsb
add
scas
divl
push
pusha
mov
sub
jmp
pusha
shl
insl
mov
imul
cmc
pusha
lds
arpl
js
lahf
push
testb
subps
and
mov
outsb
push
mov
push
jae
fnsave
jo
sahf
in
mov
shll
or
mov
pusha
je
cmp
cmp
lahf
sbb
test
ja
iret
pusha
outsl
jge
daa
push
add
insb
inc
xchg
shll
mov
lcall
and
outsb
mov
rcr
sbb
lea
out
popf
iret
inc
andl
mov
sub
mov
lcall
ljmp
in
adc
pop
jns
push
hlt
inc
pop
test
cmp
xchg
aas
push
mov
sbb
imul
daa
addr16
loope
insl
mov
rorl
lret
pusha
add
loop
icebp
add
mov
pusha
in
sub
pusha
pop
xor
mov
ja
loop
fimuls
inc
ds
gs
dec
mov
mov
dec
lahf
outsl
pusha
call
test
pusha
dec
mov
mov
dec
jnp
add
mov
lea
pop
in
bound
jae
sarl
pusha
cwtl
jg
gs
test
ljmp
jle
fisttpll
bound
add
cmp
inc
sahf
pop
pusha
or
mov
test
and
cmp
addr16
popl
into
mov
push
dec
and
xor
imul
mov
shll
shlb
js
mov
jb
push
bound
jmp
dec
fsubs
mov
sbb
mov
popa
add
ja
jmp
cmpl
fisubrl
mov
add
and
lods
lock
mov
gs
loopne
adc
xor
imul
pusha
lock
addr16
pop
jmp
push
sarl
pusha
push
inc
je
dec
sub
call
sub
and
fbld
jp
adc
pop
outsl
jle
mov
repnz
ret
iret
pop
fs
lret
or
dec
bound
std
jnp
pusha
cmp
dec
pusha
shlb
rcrb
pushf
scas
xor
repz
xor
mov
xchg
inc
mov
lds
jbe
pusha
lea
int
pop
aas
mov
or
pushf
roll
pusha
dec
xlat
mov
mov
loop
push
jecxz
enter
shrl
fcmovnbe
pusha
mov
idivl
mull
add
cmovge
mov
cld
sub
jbe
sub
gs
or
mov
pop
pusha
inc
cmpsl
and
xor
mov
js
add
xchg
daa
les
mov
clc
xor
sti
add
mov
sub
les
dec
xchg
mov
mov
pusha
add
out
push
or
shrl
test
and
icebp
lods
movsb
cltd
adc
pushf
aas
popa
push
jmp
xchg
shlb
lahf
popf
loope
test
pop
pusha
adc
push
sbb
aam
mov
testl
xchg
lret
ret
bound
xor
pusha
adc
icebp
mov
pop
into
lods
ret
out
aas
es
out
nop
inc
or
jge
mov
push
mov
push
fdivrl
mov
pusha
into
imul
cmp
push
sub
insb
and
sbb
ljmp
add
mov
cmp
cmc
test
cmpsb
sub
movsb
and
arpl
adcl
roll
jp
dec
jmp
pusha
aam
mov
mov
dec
jg
fcoms
and
adc
push
pop
cld
push
ds
mov
or
loop
lock
test
ret
jmp
push
out
dec
insb
addb
fistpl
adc
int
bound
mov
sub
sbb
jo
sub
movsl
arpl
repnz
mov
add
fs
loop
adc
push
psrlw
sbb
fisubs
aad
xorb
pusha
subl
cmpsl
dec
mov
fidivl
cmpsb
mov
cmp
orl
xchg
pop
add
aas
pop
add
push
aam
pusha
cmp
stc
lock
rcrl
xor
arpl
hlt
jl
inc
push
stc
and
xchg
jbe
pusha
insb
outsb
lahf
mov
lea
and
movsl
and
mov
pop
fisttpl
insb
loope
xchg
xor
stc
test
popa
mov
popf
ds
mov
lock
incl
notl
inc
ljmp
add
mov
mov
repz
pop
xor
mov
pop
addr16
pusha
or
dec
mov
xorl
stos
fcomps
xchg
mov
fs
pop
mov
arpl
repz
sub
sub
mov
and
mov
shl
ljmp
test
xchg
xor
nop
rorb
dec
sub
pop
fistpll
lcall
clc
sbb
pusha
fiaddl
mov
mov
push
pusha
jns
and
mov
pushw
clc
push
in
or
mov
pusha
fmulp
mov
das
sbb
dec
pushw
sbb
xor
stos
out
scas
sbb
aas
loop
or
dec
dec
sub
mov
adc
xor
cwtl
lahf
pushf
xlat
insb
push
xchg
rcll
xchg
cmc
pusha
add
in
popf
jecxz
pusha
push
sub
push
sub
shrl
pop
fimull
dec
adc
push
dec
jle
adc
shll
int3
iret
dec
add
mov
cld
mov
cmp
lods
or
sub
dec
push
mov
out
scas
addr16
sar
jle
ret
ss
jns
adc
cmpsl
push
ret
pop
pop
fidivs
pop
mov
fs
test
dec
aaa
bound
dec
out
or
mov
sbb
sub
aam
lods
ret
sub
je
fistl
stos
cmp
fidivrl
mov
xor
xchg
pusha
xchg
lahf
dec
push
je
jl
in
insb
xchg
push
xor
mov
xchg
aam
aam
jo
int
inc
fiaddl
shll
jge
or
fstpt
xor
jne
test
pusha
and
repnz
xor
repnz
mov
sub
aas
test
sub
repz
add
fucom
mov
pop
sahf
dec
scas
jbe
jne
xor
cltd
pop
aas
mov
pop
cli
int3
pop
loopne
and
ret
rcrb
rcrl
stc
jmp
jecxz
insb
scas
dec
rolb
mov
sbb
xor
mov
inc
insl
add
inc
mov
xor
adc
movsl
ret
sbb
jo
ret
cld
xchg
daa
lds
in
cltd
popa
lods
rclb
shrl
mov
or
xchg
and
stos
popa
sbb
push
scas
adc
xchg
lret
shlb
dec
jno
xchg
add
dec
es
scas
or
jo
sbb
aam
adc
push
push
scas
rcl
and
inc
sti
gs
mov
arpl
insb
add
cmpsb
inc
mov
je
rcll
cld
inc
and
sub
cs
sbb
jle
enter
jae
loope
mov
sub
mov
pop
xor
shl
clc
jle
mov
cmp
or
cmpsl
push
xchg
nop
pusha
and
mov
subb
ret
scas
dec
inc
aaa
mov
push
stos
in
jle
js
addr16
sahf
jns
add
fcmovnb
xchg
xchg
fisttpll
popf
ret
nop
scas
pop
inc
int
es
adcb
xchg
cltd
sbb
cmpsb
ret
mov
lds
fidivl
sbb
jnp
dec
pop
insl
pusha
mov
ret
xchg
push
ss
dec
lahf
jecxz
jae
ss
push
sbb
in
popl
and
ret
push
outsl
mov
pusha
add
rorb
shlb
push
mov
adc
sahf
ret
mov
aas
ficoml
cmpsb
xor
xor
lcall
cmp
xor
jb
stc
inc
xor
decl
rorb
mov
pop
mov
jl
rcl
inc
enter
ja
ss
cmp
stos
ljmp
sarl
xor
pusha
data16
inc
ja
lret
andl
in
rcrl
inc
loop
fs
daa
outsb
add
aas
inc
xor
sbb
int3
pop
mov
xor
push
and
cmp
dec
stc
mov
data16
pusha
arpl
add
icebp
leave
mov
cmc
addr16
test
push
lods
mov
hlt
shrl
insl
sub
pop
sbb
stos
inc
jmp
mov
dec
jo
xchg
jbe
pusha
testl
dec
pusha
ret
push
add
add
in
push
cwtl
das
shll
fiadds
mov
cwtl
mov
pop
hlt
aad
pop
test
int3
jae
mov
cmp
aaa
inc
fisubl
mov
fs
popa
andb
lds
ss
shlb
inc
push
mov
pop
xchg
dec
xor
xor
or
pusha
les
movsl
popa
xor
mov
test
scas
jp
jecxz
sti
or
xor
jns
sub
jae
je
ret
jl
in
outsb
daa
push
in
mov
pusha
xor
stc
dec
loope
aaa
inc
pusha
push
js
add
rclb
bound
enter
dec
pusha
adc
and
jp
outsl
lea
loop
dec
frstor
xorl
adc
shlb
arpl
mov
inc
adc
ret
ljmp
jl
sar
popa
sahf
mov
pusha
addr16
inc
sbb
lcall
pusha
mov
loope
sub
fcmovbe
jo
mov
and
aam
jle
insb
popf
outsb
loop
inc
pop
out
ret
cltd
loop
shll
repnz
inc
sbb
ss
bsr
add
loop
insb
xchg
jne
sub
jo
fldl
mov
arpl
inc
mov
inc
dec
xchg
arpl
lret
mov
pop
int
xor
mov
mov
call
cmc
cli
fisubl
ret
sub
movsb
movsl
lret
push
pusha
jb
mov
pop
pusha
lock
and
dec
in
stos
pusha
xor
lds
mov
popf
iret
repz
mov
add
and
dec
jl
aam
pop
xchg
jle
push
dec
fs
pop
lahf
push
cli
mov
sub
cmpsb
sub
in
pusha
add
cmp
test
arpl
pusha
stos
test
jle
jp
adc
add
push
mov
idivl
pop
popa
xlat
sbb
push
aad
lahf
inc
pop
testl
sub
std
xor
cmp
fstps
pushf
dec
mov
push
iret
jg
je
arpl
cs
mov
mov
mov
cli
dec
and
lods
lods
shlb
out
pop
leave
cmpsb
ss
push
es
jmp
mov
stc
pushf
push
xchg
sub
and
xor
xchg
jbe
pop
push
rcl
pushf
pusha
adc
pusha
stos
aad
test
imul
jmp
ja
mov
lahf
fs
je
test
or
pusha
pop
sub
mov
pusha
sahf
fisubrs
fnstcw
ss
jbe
mov
pop
mov
mov
mov
dec
xor
or
lret
loope
and
pop
mov
mov
push
repz
cmp
or
pusha
bound
shl
push
cmc
pop
sarl
loopne
xchg
loopne
jae
lock
loope
xor
arpl
mov
in
popf
subb
mov
push
sahf
scas
loope
add
arpl
xlat
aam
lahf
loope
sti
pusha
fstps
xchg
mov
iret
xchg
push
fs
jne
sub
fwait
and
pop
test
jg
inc
call
pop
cmp
lock
xchg
lds
in
jbe
jl
mov
xor
sub
out
andb
mov
jl
fs
mov
dec
rorl
jecxz
adc
xor
push
pusha
jmp
mov
lock
jp
mov
lret
mov
insb
add
ret
push
adc
repz
test
xor
pusha
push
jo
cld
bound
sub
cmp
cmpsl
jl
mov
or
pusha
sahf
push
or
mov
pop
pop
and
add
sub
cmp
xchg
or
int3
pop
rcrb
mov
mov
or
mov
les
rcrb
adc
scas
pop
jo
jl
jmp
into
bound
push
and
lock
xchg
adc
cld
add
mov
hlt
xlat
loope
iret
pop
cmc
pusha
dec
insb
dec
mov
sti
fstl
ret
repnz
add
shl
jne
nop
push
sub
popf
das
sbb
int
insb
jo
mov
jns
orb
cwtl
lcall
sbb
or
mull
pop
sub
jmp
ds
cmc
into
cmc
loop
stos
and
add
aas
jae
ds
loope
je
inc
cmc
adc
dec
push
movsl
int
psubusw
mov
mov
pushf
hlt
push
push
mov
fwait
pop
inc
addr16
clc
ljmp
xchg
mov
mov
dec
sbb
daa
adc
inc
inc
movsl
repz
rcrl
sbbl
inc
shl
pop
cmp
pop
ffreep
or
adc
pop
sbb
mov
jb
stc
ss
fs
cld
imul
jne
xchg
test
sub
mov
xor
mov
out
lds
insl
cmpsb
xor
inc
loope
fcmovnb
cli
sbb
daa
mov
mov
mov
or
fiaddl
cs
push
jae
pop
xor
push
dec
shll
rol
dec
ret
pop
movsb
lahf
lret
cmp
aas
movsl
push
pop
cli
inc
and
mov
loopne
inc
nop
aas
mov
cmp
in
and
loopne
jle
jecxz
jae
dec
mov
fcoml
std
hlt
rcrb
pop
jge
cs
test
testl
ja
push
and
mov
xor
cltd
sbb
out
xchg
jl
mov
lea
jbe
jmp
sahf
push
call
mov
push
inc
mov
ror
cmp
mov
cld
xor
mov
popa
nop
jmp
or
aad
nop
mov
mov
mov
cmc
cmp
and
ljmp
add
lret
rorl
dec
rcl
and
push
lret
hlt
or
inc
xchg
sbbb
sbbb
ret
adc
int3
jl
pop
ds
dec
or
mov
cmp
sbb
ja
shll
pusha
or
pop
xchg
fisttps
mov
outsb
sub
adc
addl
pop
add
cmpl
jl
inc
or
push
inc
dec
sbb
sub
loope
ja
sbb
in
sbbb
les
testb
cld
arpl
sahf
fwait
arpl
push
pop
out
mov
fxch
inc
push
or
xchg
xchg
mov
adc
popf
pusha
bound
cmp
sub
mov
clc
mov
mov
scas
fs
mov
or
push
mul
mov
pusha
fdiv
push
xor
cmc
addb
icebp
xchg
dec
adc
mov
dec
scas
push
notl
cmpsb
test
or
hlt
push
cmp
loop
adc
jb
arpl
scas
ss
push
dec
mov
pusha
sar
xor
stos
fsubrs
push
xchg
bound
lcall
cmp
faddl
add
lret
cwtl
cltd
movsl
insl
loopne
push
jmp
fs
cmpsb
shl
in
xor
add
sub
sbb
fs
mov
flds
adc
movsl
shll
hlt
pop
mov
cld
lea
punpcklbw
fstpl
mov
pusha
insb
xchg
aam
and
or
popf
jecxz
jmp
imul
stc
xchg
xor
jg
aad
loopne
and
pusha
pop
aam
test
cmp
sti
addl
inc
cli
cmp
mov
xlat
shll
mov
pusha
mov
push
mull
aad
inc
add
cwtl
dec
pop
sub
loop
adc
inc
push
inc
sub
sbb
imul
cmp
shll
jecxz
pusha
shll
pusha
sub
mov
pop
and
sti
pop
jo
jnp
arpl
pop
pop
push
pusha
adcb
mov
push
cli
shlb
pop
adc
shl
and
sbbl
xchg
stos
or
aad
jecxz
jbe
data16
adc
jg
sbb
je
into
pop
bound
cmp
mov
cmp
imulb
rclb
xor
pusha
and
push
add
inc
pop
mov
lfs
test
mov
push
mov
jmp
xchg
pusha
lds
dec
les
stc
ret
pushf
outsb
scas
mov
nop
enter
pusha
mov
negb
mov
pop
and
outsl
fstpl
andl
subl
pusha
aam
ds
mov
sub
fimull
pop
ljmp
lods
inc
repnz
testb
push
bound
inc
xor
shl
pusha
sti
lcall
pusha
in
push
iret
fsts
fs
pusha
ret
mov
inc
mov
cli
sub
loop
mov
mov
pop
dec
sub
cli
outsb
pop
aad
mov
xorl
sub
dec
xchg
pusha
pop
cli
sbb
nop
stos
repz
push
call
shll
lock
pusha
sbb
pop
push
pop
outsl
fs
cmp
in
dec
in
ret
mov
pusha
mov
mov
mov
insl
xchg
mov
push
sbb
inc
icebp
ljmp
mov
mov
inc
pusha
test
imul
pop
decl
pusha
jecxz
jb
cmp
xchg
add
test
movsb
pusha
dec
adc
sub
push
test
mulb
mov
aaa
mov
push
ret
in
pusha
repz
dec
nop
mov
imul
jae
cltd
sub
push
cmp
xchg
or
mov
or
push
imul
and
pusha
add
add
adcb
pusha
and
ds
mov
jp
js
nop
pusha
lea
jle
cmp
push
scas
mov
add
nop
jmp
push
xor
cmp
mov
dec
test
fldt
push
pop
pavgw
sbb
jno
repz
addl
pop
inc
mov
arpl
dec
lcall
pusha
out
loopne
or
lock
adc
and
insb
mov
sbb
xor
fimull
data16
add
sbb
je
xchg
fs
stos
inc
cmp
adc
xor
mov
in
jns
movsb
bound
pop
and
push
fisttpl
in
mov
lods
jecxz
jl
cmp
xchg
add
adc
xchg
fstps
les
into
mov
inc
mov
or
xor
imul
jnp
xor
jmp
push
or
add
mov
mov
lods
and
aad
sub
lods
add
xchg
xor
sub
dec
push
and
pop
mov
pusha
mov
mov
out
sub
fidivrs
enter
jg
lods
mov
shlb
das
andb
xchg
int
mov
mov
xchg
insb
cmpsb
insb
int3
inc
test
mov
pusha
push
pop
jmp
pop
pusha
mulb
repz
mov
xor
test
ret
test
les
mov
adc
jo
pusha
shrl
test
cmp
pusha
xor
clc
sbb
adc
je
mov
insl
xchg
out
fisttpl
fs
inc
jmp
sub
icebp
pusha
aaa
ss
fistl
jge
pop
into
cs
mov
pop
or
insb
das
gs
imull
mov
mov
pusha
fs
mov
loop
daa
jmp
jb
loopne
mov
xlat
out
push
dec
push
cmpsl
pusha
xor
ss
arpl
or
or
sub
dec
lods
jae
inc
dec
inc
int
xor
pop
scas
leave
test
push
pop
inc
shll
out
pusha
dec
ja
add
add
jne
sti
fdivrs
leave
sub
dec
insb
dec
mov
add
pusha
xchg
adc
das
scas
cmp
sbb
push
mov
xchg
pusha
mov
nop
mov
push
jmp
mov
cmp
movsb
jo
movsl
push
fisubrl
bound
fwait
mov
jge
aad
gs
inc
iret
xchg
push
bound
mov
pusha
cmp
shll
inc
pusha
jle
outsl
incb
pusha
fdivrs
and
mov
pusha
xlat
jge
test
sbb
pusha
pop
sti
jnp
push
cmp
je
jg
decl
ss
aas
fs
or
scas
inc
imul
cltd
or
xor
jbe
bound
dec
sbb
and
pop
dec
fcmovb
xor
pop
iret
push
clc
mov
test
in
mov
pusha
test
push
jmp
pusha
push
cmp
arpl
mov
or
cltd
pusha
sti
ficoml
sarl
ret
popa
mov
cld
das
xchg
jmp
mov
jnp
cwtl
dec
movsl
bnd
pop
hlt
pusha
dec
dec
or
sbb
popa
pop
bound
sub
mov
sub
gs
jno
dec
xor
push
and
inc
fdivrl
repnz
int
jnp
xor
adc
test
out
sub
popa
mov
mov
sbb
pop
lret
stos
nop
pop
in
movq
fs
or
xchg
push
int3
ljmp
fmulp
cmc
pusha
sub
pop
dec
pusha
push
mov
and
inc
int3
fstpl
push
idivb
data16
sub
lahf
mov
jbe
ja
xchg
aaa
push
xchg
in
jb
bound
add
out
fs
hlt
out
pop
nop
cmp
inc
dec
inc
xchg
mov
mov
mov
or
imul
push
sub
xchg
gs
cmpsl
adc
mov
xchg
loop
pusha
jmp
leave
pusha
stc
jl
rclb
add
and
pusha
clc
scas
sub
pusha
lahf
loop
pop
dec
pop
sub
sbbb
sub
shl
dec
cmp
popa
jp
lcall
inc
pusha
jbe
inc
xlat
movsl
xchg
sub
xchg
je
jl
pusha
std
jbe
pop
mov
loopne
dec
or
mov
popf
pusha
lea
mov
stos
fisubrl
pushf
xchg
xor
cwtl
mov
mov
sti
stos
aaa
movsl
ja
clc
jge
push
or
cmp
mov
lds
stos
mov
xchg
and
jns
sub
mov
and
cmp
cmp
movsb
mov
sbb
aam
les
pusha
fsubp
push
cs
pop
add
inc
inc
pop
fs
jae
jg
sti
loope
inc
pusha
pop
jne
jns
lret
out
cmpsl
dec
js
sub
fnstcw
pusha
popf
mov
out
pusha
inc
icebp
xchg
add
jecxz
inc
je
cld
fistps
bound
dec
sub
loopne
fwait
jle
out
ss
push
sub
das
mov
sub
cltd
iret
mov
clc
mov
or
stc
adc
aaa
xchg
adcl
inc
in
mov
negb
push
enter
or
loope
test
mov
cmp
xor
out
test
fs
ret
add
fmuls
lret
std
xchg
fisttpll
popa
addr16
or
push
imul
notb
pop
pushf
out
jo
popa
cmp
jp
test
out
out
jle
mov
pusha
adc
add
insb
cmp
cmc
xor
aas
fwait
pusha
pop
or
pop
inc
mov
pop
imul
xchg
bound
pusha
mov
adcb
xor
lahf
testl
addl
jge
int3
cmp
push
push
imul
mov
mov
add
pusha
or
pop
movsb
sub
xchg
hlt
mov
int
fldenv
push
mov
xchg
push
mov
sub
jb
loopne
xchg
pop
sub
jmp
loopne
dec
pusha
push
cmpsl
es
test
ret
mov
adc
pusha
cmpsb
pushf
shrl
aad
addr16
bound
xor
or
popf
loopne
andb
aad
sub
adc
pop
ret
mov
or
inc
mov
adc
les
pop
int
jecxz
pusha
lods
in
and
ficompl
out
mov
sbb
pop
aad
scas
pop
fs
mov
pop
push
insb
and
and
testb
adcb
pop
pusha
aad
ss
out
sahf
ret
mov
dec
xchg
add
jge
push
mov
insb
pop
out
inc
repnz
push
inc
pusha
mov
je
adc
out
rclb
xor
pop
dec
mov
nop
mov
pop
test
cmp
mov
arpl
loop
push
mov
bound
inc
jo
mov
fistl
icebp
and
mov
sub
sbb
lcall
mov
xor
shrl
inc
xor
loop
frstor
push
fsubl
loope
addr16
push
sahf
imul
push
outsb
js
lcall
pop
sbb
es
mov
jnp
or
inc
cmc
les
pusha
push
push
loop
xor
or
daa
push
mov
mov
pusha
movsb
stos
and
pop
jnp
pop
loop
dec
fsubrl
pop
push
adc
pusha
mov
mov
jmp
push
mov
ret
jne
stos
mov
pushl
imul
ret
iret
fdivrl
insb
outsb
push
scas
popf
lods
sub
in
cmp
mov
jae
mov
mov
push
push
adc
out
out
and
xchg
jno
xrelease
pusha
sub
addr16
lret
out
and
lahf
cwtl
sub
pop
sub
and
sbb
ss
cwtl
and
lods
leave
pop
or
aam
and
cmpl
jo
shlb
test
add
mov
hlt
add
rcrb
mov
and
sbb
popa
or
pop
inc
or
je
adcb
mov
popf
jg
data16
test
lcall
stos
dec
inc
fidivrl
jecxz
out
mov
cmp
lret
pusha
imul
pop
add
cld
cmpb
test
mov
or
fdivrs
nop
adc
pop
pop
xlat
icebp
shll
rolb
jbe
fsubp
fs
leave
xor
daa
ja
jecxz
dec
sub
pusha
adc
add
pusha
add
and
xchg
aam
xor
xchg
pop
enter
cmp
lods
lds
jae
mov
sbb
into
inc
clc
push
jl
insb
sbbl
xchg
pop
adc
push
cs
push
into
mov
in
pusha
xlat
sahf
pop
jle
mov
jb
loopne
jecxz
push
sub
test
daa
pusha
ret
and
or
das
dec
jge
std
mov
outsb
jl
xor
sbb
daa
lods
fwait
dec
gs
jmp
and
cmp
jbe
repnz
and
adc
or
pusha
push
in
jecxz
loop
xchg
add
push
mov
xchg
and
mov
icebp
lcall
mov
or
je
rolb
aaa
pusha
ss
xchg
dec
dec
mov
shrl
leave
pusha
sub
xchg
dec
mov
add
sbb
xchg
bound
cmp
mov
dec
dec
insl
ljmp
loope
sbb
dec
xor
daa
pusha
sbb
push
lock
pop
mov
sub
add
jo
repz
fisubs
in
pusha
sub
shll
clc
or
pusha
fimuls
mov
cmc
pusha
mov
fsubl
enter
sar
repnz
call
test
mov
pop
cmp
mov
out
or
mov
nop
jmp
and
pusha
int3
dec
icebp
sub
jge
cmpsl
dec
xchg
out
mov
or
add
mov
xor
and
mov
push
jl
jge
push
sti
ret
pusha
popa
repnz
into
dec
iret
cmc
push
push
push
mov
mov
arpl
pop
int
pop
jnp
mov
pusha
mov
jle
xlat
pusha
mov
ss
out
frstor
push
movsl
ficoml
add
gs
pop
dec
inc
aad
loopne
mov
popaw
movsb
jle
pop
lods
mov
inc
pushf
lahf
out
dec
in
stos
push
test
pusha
jmp
jae,pn
iret
dec
pop
sub
push
fs
bound
dec
inc
lret
sub
xchg
pop
push
loopne
rcr
or
and
or
out
bound
mov
mov
adc
int3
push
into
mov
aam
inc
imul
ss
pop
jbe
jle
pusha
cmc
test
rcll
or
sahf
add
inc
jl
jnp
test
inc
jb
test
les
addb
cmp
dec
pop
sarb
and
adc
cmpsb
jbe
mov
mov
push
pop
cmp
es
pusha
popf
jno
out
jmp
or
inc
push
outsb
xchg
inc
cs
in
dec
adc
js
adc
jbe
sbb
sub
and
gs
popf
lods
mov
shlb
cmp
push
pusha
test
mov
xlat
pusha
stc
pop
xor
sub
push
mov
add
dec
outsb
mov
stos
or
xor
mov
pusha
out
sbb
inc
xchg
sti
dec
pusha
scas
cli
and
xor
pusha
int3
xchg
and
loopne
add
int
in
jae
movsl
pusha
stc
leave
mov
nop
cmpsl
sub
out
ja
and
pusha
aaa
outsl
mov
lods
ret
les
sub
in
sbb
jl
stos
dec
pusha
push
push
clc
jge
sbb
jno
inc
xchg
mov
pop
sbb
pusha
movsl
push
int
mov
cs
jo
ljmp
mov
jmp
addl
jecxz
nop
andb
cltd
test
pusha
mov
jno
fbld
daa
aam
ror
dec
lock
in
pusha
inc
jae
cmpsl
jne
adc
fnstcw
fucomi
add
loope
pop
sub
mov
jecxz
cltd
pusha
stc
mov
pop
repz
mov
int
mov
sub
stc
cld
fdivp
jne
pusha
ljmp
adc
pushf
bound
jb
push
lahf
or
inc
jbe
inc
mov
shl
cmp
pusha
cmpsl
xchg
xchg
adc
xchg
fstpt
mov
jbe
inc
mov
bound
repz
lret
xchg
cmp
imulb
out
fxch
iret
push
cmp
stos
push
mov
pusha
adc
pop
xlat
xchg
fildll
outsl
in
or
je
sbb
xor
popa
mov
sub
cli
push
add
lret
clc
outsl
int3
jg
enter
adc
dec
mov
sbb
dec
fcoml
jl
dec
movb
sahf
loop
jp
push
xchg
or
rcr
pusha
inc
insb
fildll
mov
iret
pusha
fnsave
pop
aaa
jp
jae
bound
shlb
inc
ret
inc
nop
xor
out
mov
dec
mov
mov
lock
inc
pop
mov
stos
mov
push
repnz
push
xchg
bound
lock
ja
mov
cmc
jg
push
imul
dec
loopne
aad
mov
push
mov
popa
inc
fidivrl
xchg
xor
pop
pop
xchg
jne
mov
test
cmp
adc
inc
outsb
push
cwtl
xchg
cmp
mov
sbb
push
frstor
cmp
jo
ret
dec
pop
std
xchg
xchg
popa
test
jne
pop
jae
ds
insb
les
adc
fldt
add
ds
push
stos
insl
in
mov
repz
adcb
rclb
xchg
inc
adc
in
daa
movsb
aas
push
mov
push
mov
cmpsl
loop
jl
gs
sbb
pusha
sti
push
inc
dec
mov
stos
mov
pusha
jbe
cmpb
movsb
cli
clc
pusha
scas
pop
adc
pusha
das
pop
sar
jp
or
idivb
enter
adc
push
xchg
push
pusha
lret
or
je
xchg
and
sbb
cmp
lods
mov
and
test
mov
mov
adc
push
jl
stc
pusha
mov
adcb
fs
movsl
adc
addl
adc
lcall
pop
jne
lds
repnz
sbb
push
pusha
xchg
stos
add
aad
mov
les
test
lea
fs
adcb
pusha
or
fistpl
rorl
adc
jb
ret
fmuls
fildll
addr16
cs
sub
out
movsb
les
fs
mov
js
xchg
sbbl
cltd
in
das
mov
jp
mov
outsb
pop
je
lcall
xor
dec
gs
les
jmp
pushaw
sbb
repz
js
popf
and
andl
imul
sub
cmpsl
loopne
lods
dec
xchg
test
addr16
aad
jne
negb
jg
inc
mov
lcall
sbb
or
rcrl
jne
popa
fs
xor
sub
movsl
cmp
into
mov
cmp
pusha
xchg
in
gs
jl
pusha
out
fs
movsb
inc
jecxz
andl
das
daa
lret
scas
mov
sub
fbld
lcall
cmp
cmp
fcmovnbe
add
pusha
repz
out
jmp
pop
push
adc
jne
xor
dec
jb
repz
dec
pop
and
ret
loop
jl
pop
jae
sahf
call
testl
enter
in
and
icebp
andl
ljmp
lret
movsl
fisubs
mov
movq
fsubs
aas
and
adc
cmp
test
pusha
fsubrs
push
mov
push
and
push
pusha
stos
push
pop
dec
pop
popf
dec
inc
je
leave
pop
mov
sbb
cmp
lea
or
jle
cs
jno
arpl
inc
pop
push
test
notl
ja
loop
repz
adc
xor
repnz
bound
or
dec
lds
sub
lahf
pusha
inc
mov
xchg
outsw
fldl
pusha
das
movl
dec
xlat
clc
lock
add
inc
fldt
ret
mull
pusha
pushl
mov
jo
rorl
lods
fbld
dec
jns
pusha
clc
sub
pushf
mov
adc
sahf
cli
imul
pop
hlt
scas
dec
pusha
jo
aam
jmp
mov
or
pusha
into
inc
cs
enter
sub
mov
lcall
add
lret
fdivrl
pusha
repz
ret
fs
clc
pusha
pushf
dec
xchg
pusha
icebp
adc
inc
pop
mov
pusha
pop
scas
inc
mov
sbb
sub
das
iret
pusha
fs
data16
pop
push
ds
sbb
xchg
mov
pusha
add
lret
dec
inc
test
fisubl
adc
pop
lahf
popa
movsl
jae
pop
adc
cwtl
cmp
fisubs
dec
cld
lret
xor
dec
cmpsl
mov
or
mov
mov
pusha
mov
repz
add
adc
xor
cltd
inc
pusha
int3
enter
mov
push
and
xchg
scas
mov
mov
pusha
fisubrl
js
jae
fisttpl
mov
daa
pusha
sbb
shl
mov
pop
aad
mov
mov
xor
push
cmp
or
sub
adc
or
jae
hlt
and
insb
mov
in
nop
cmp
les
mov
pusha
mov
jne
cmpsl
sbb
cld
aad
mov
mov
xchg
pusha
xchg
cltd
push
jge
test
fwait
mul
mov
mov
int3
jecxz
sub
xchg
xchg
inc
adc
cmp
pusha
movsl
push
inc
add
mov
call
sbb
out
pusha
or
ljmp
popa
pop
daa
test
jl
sub
push
shl
jecxz
or
pusha
jmp
push
sbb
and
cmpsb
ret
or
adc
repz
stos
pop
pusha
arpl
pop
cmp
dec
push
xchg
pusha
xor
divb
cltd
outsl
jle
mov
xchg
sbb
test
pusha
jmp
adc
pusha
cmp
xchg
mov
sbb
call
pusha
lahf
dec
test
les
add
jns
andl
jno
int
mov
aad
fs
or
jge
xchg
leave
and
add
fsubl
fs
fstpl
repz
jp
dec
jns
mov
insb
jne
out
rcl
ss
idivb
cmpsb
das
int3
aaa
lret
inc
xor
mov
ja
mov
push
jb
xor
push
mov
pusha
repnz
sub
xor
es
jp
sbb
pop
pusha
das
xorl
inc
adc
xor
push
jo
enter
add
pusha
fstps
dec
dec
mov
xchg
xor
pusha
add
cmp
sbb
push
xlat
pusha
iret
idivl
xchg
sub
rcr
and
xor
aas
icebp
rep
mov
pop
pusha
cmp
push
cmc
out
mov
popa
and
dec
mov
fstpt
mov
sub
negl
xor
fs
add
aam
nop
popa
popa
sbbb
or
cwtl
inc
xor
mov
loope
mov
shlb
out
and
stos
stc
ljmp
pusha
mulb
cmp
pusha
aaa
fwait
insl
and
sub
cmp
fidivl
inc
stos
pusha
pusha
xor
inc
pop
jge
mov
sti
rorb
mov
mov
pop
cwtl
lock
cmp
xor
pusha
jmp
xchg
outsb
adc
inc
jne
pusha
popa
ret
sbb
in
pusha
jbe
push
adc
out
roll
xor
aas
pop
cmpsb
and
mov
pusha
lcall
rcrb
mov
loope
and
jbe
pop
mov
sarb
xchg
or
in
jecxz
mov
pusha
mov
inc
pop
fdivr
sbb
jge
int
dec
cmp
lret
cmp
push
scas
aam
pusha
stos
xchg
xchg
nop
lds
andb
and
ret
pop
movsl
rol
mov
call
xchg
cmc
sbb
data16
cld
push
xorl
test
jle
mov
fsubs
pushf
xor
nop
std
xor
mov
lods
fsubl
xchg
mov
scas
insb
lock
roll
sub
push
imul
les
push
outsl
and
adc
cli
pusha
mov
js
pusha
push
std
pop
cmpsb
xor
lcall
cmp
dec
bound
push
jle
push
sbb
pusha
jp
add
sub
dec
lds
stos
jns
dec
xor
xlat
repnz
imul
inc
cmp
mov
jg
scas
xchg
xchg
outsb
and
adc
shrw
jp
sbb
sub
dec
test
mov
loopne
ret
aam
aam
mov
repz
xchg
aaa
sub
mov
aas
stc
lods
xor
sbb
push
cld
enter
cwtl
sub
xchg
out
dec
shlb
mov
fdivrl
ds
and
psadbw
loopne
scas
inc
pusha
bound
adc
hlt
xchg
jmp
or
push
arpl
sub
pusha
mov
ss
stos
push
jo
negb
js
mov
arpl
ja
and
xchg
jne
xor
fiadds
mov
sbb
ret
sub
int3
mov
movl
mov
xor
xor
cmp
ret
cmp
pop
mov
jns
fildll
dec
rol
mov
jnp
clc
lock
outsl
xor
mov
outsb
test
pusha
lock
sbb
je
pop
mov
lret
pop
rcr
int
fbld
add
insb
in
dec
inc
xchg
and
or
popf
aam
rclb
mov
addl
sub
out
sub
adc
inc
inc
dec
mov
inc
pusha
jnp
sbb
xchg
and
pusha
scas
les
jns
cmp
pop
cmp
and
xor
xchg
daa
sub
jle
cmp
push
and
push
pop
mov
mov
pop
inc
call
fidivrl
jno
xor
pop
dec
pusha
lcall
dec
cmp
fisubrs
loope
ret
adcl
cwtl
dec
andb
pop
ret
push
pop
paddw
loopne
and
aam
movsb
add
into
cltd
fmuls
insb
test
mov
fisttpll
mov
dec
sub
mov
dec
pusha
push
or
pop
sub
aaa
pusha
mov
mov
nop
pusha
inc
jnp
sub
add
sbb
popf
push
push
rclb
pusha
ds
cmpsb
inc
aad
clc
jl
add
mov
rclb
stc
lret
int3
mov
les
lods
cs
imul
insb
pusha
int
das
js
xor
or
jns
arpl
fwait
mov
iret
andl
and
pusha
mov
ljmp
xlat
mov
push
dec
lock
pusha
jl
sub
cwtl
mov
adc
repz
lods
fadds
out
lods
pusha
leave
insl
mov
aad
addr16
in
mov
mov
out
bound
test
pusha
inc
cmpsb
fidivrs
pusha
push
pop
int
fists
into
cs
xchg
mov
mov
adc
outsb
jmp
arpl
or
imul
bound
dec
pusha
cltd
js
xor
pop
scas
pop
mov
pushf
pop
loopne
xchg
sbb
jb
adc
and
std
mov
std
dec
fs
mov
and
push
aaa
loope
pushf
jecxz
lods
xchg
popa
push
fnstsw
hlt
pusha
lea
pusha
data16
out
jge
mov
int
mov
adc
leave
jl
add
xchg
and
ss
sbbb
test
out
ret
pusha
and
or
rorb
and
sub
xlat
loopne
jl
xorl
loopne
mov
fs
out
pop
rorb
or
inc
xorl
push
pop
dec
mul
pusha
push
push
mov
sbbb
and
bound
aad
mov
out
adc
pusha
test
xlat
les
fdivr
daa
pusha
movsl
loopne
sub
scas
adc
xchg
cs
fs
push
int
xchg
andl
jnp
sub
pop
xor
fisubrs
ja
mov
pusha
lcall
pusha
fldl
dec
lock
movsb
ds
pusha
les
das
xor
pop
test
fwait
addl
xlat
xchg
cld
insl
fmull
pxor
push
cmp
xor
mov
pusha
lret
jno
cmpsl
mov
fs
sbb
lahf
add
pusha
adc
fidivrs
cwtl
std
cld
and
imul
cmp
lods
mov
loopne
xchg
xchg
idivb
in
jae
xchg
scas
push
pusha
in
mov
pusha
pushf
or
les
xlat
mov
adc
xchg
fisttpll
bound
push
sbb
aad
fs
adc
xor
es
jp
hlt
mov
sbb
pop
andl
pusha
clc
add
and
mov
add
sub
or
pop
mov
mov
pop
icebp
push
into
xor
lret
mov
mov
popf
dec
insb
leave
stos
add
loop
adc
mov
xacquire
mov
push
push
and
jmp
add
pusha
jbe
inc
and
into
pop
jb
and
pusha
and
cli
dec
pop
adc
mov
popa
cmp
pusha
movsb
imul
pop
xchg
mov
jecxz
inc
adc
cmpsl
jmp
pusha
in
dec
in
in
ljmp
jno
jl
push
and
subl
push
mov
inc
inc
enter
das
inc
mov
cmp
mov
scas
sbb
push
push
scas
mov
ret
fmull
addr16
xchg
xchg
xor
lock
mov
loopne
loope
roll
dec
push
out
mov
jg
xchg
mov
mov
add
arpl
dec
xchg
mov
popf
lock
sbb
xor
stos
push
xorb
pop
lret
sub
sahf
sub
sbb
jo
cli
sub
rorb
test
iret
pop
dec
sbb
data16
rcl
inc
outsb
pusha
mov
pop
insb
lret
outsl
push
or
dec
dec
jae
add
push
ficomps
arpl
adc
add
repz
xor
sub
bound
jb
mov
push
jl
sbb
jge
pop
aad
aam
in
mov
push
daa
repz
fsubl
scas
pushf
fs
pushf
loop
and
loop
inc
inc
out
inc
int3
arpl
jnp
arpl
xchg
dec
fisttpl
pop
fcomp
jo
inc
cld
lret
daa
mov
ret
mov
loopne
sbb
out
testb
in
push
pop
lahf
cmp
lods
jle
sbb
and
call
repnz
pop
ret
scas
cmp
xor
adc
ja
pop
push
icebp
sub
mov
hlt
xchg
lahf
mov
sub
fnstsw
add
ret
or
fidivrs
les
mov
push
in
clc
inc
pop
pop
jg
dec
sbb
inc
sbb
and
adc
into
push
jns
dec
test
push
fistpl
inc
add
stos
mov
shll
or
sbb
add
cmpl
pusha
adc
jbe
push
pop
xorb
fstpt
pop
jo
jns
xor
pusha
pop
inc
mov
and
mov
and
jl
pop
mov
mov
inc
add
orb
subb
popf
pop
inc
xchg
xchg
popf
es
xor
gs
ljmp
and
pop
dec
mov
sahf
jo
pop
push
xor
sbb
mov
in
pop
sti
mov
and
dec
mulb
dec
je
mov
push
push
or
sbb
stc
inc
push
sbb
fs
incb
push
int
mov
xchg
sub
or
loopne
js
es
test
outsb
push
push
lods
sub
push
mov
out
push
cmp
roll
jae
mov
push
sub
in
mov
xor
add
clc
mov
pop
imul
lds
cs
faddl
pop
add
pop
inc
int3
mov
out
and
add
insb
xor
mov
dec
mov
repz
push
xchg
jo
imul
jg
jmp
mov
jno
fidivl
push
cmp
enter
fsubrl
cmpsl
inc
jnp
test
cmp
or
jp
add
xor
add
push
ds
sub
dec
and
mov
xor
mov
pop
xchg
shrb
les
lcall
xchg
loopne
push
xchg
arpl
ret
movsl
add
xlat
xor
outsl
push
adc
cmpsl
sbb
roll
out
mov
and
jge
out
pop
std
lods
fmuls
xor
mov
cltd
sbb
aaa
fiadds
mov
pop
fcomp
rolb
fcompl
push
adc
test
repz
xchg
push
mov
push
ficoms
jo
cld
insl
jge
ret
pop
out
stos
add
xor
add
outsb
iret
loopne
jo
xchg
add
lods
jmp
xor
xor
iret
inc
gs
loope
call
loop
imul
call
cmp
test
test
add
and
into
ret
lock
stc
or
jae
sbb
xchg
mov
mov
sub
insb
mov
sbb
add
mov
lods
sub
sub
out
mov
xor
lods
push
adc
pusha
or
push
fldenv
fidivs
popa
out
xor
movsb
data16
out
in
inc
stc
aas
mov
jo
mov
je
pusha
outsb
xchg
mov
sbbb
imul
pusha
mov
sub
push
incb
stc
inc
xchg
mov
loopne
ss
xor
or
stc
xchg
repz
out
outsl
insb
pop
dec
or
std
clc
xchg
xchg
in
mov
daa
loopne
popf
cli
js
fstpt
call
aaa
dec
call
stos
cmpsb
mov
test
dec
std
sbb
or
pushf
add
lods
pusha
mov
sub
ja
fs
gs
push
stc
cwtl
xchg
sbb
add
xchg
cli
testl
mov
in
or
pop
test
dec
ret
cli
lea
mov
jno
scas
sub
rclb
add
mov
cld
ficoms
and
pop
pop
js
cmp
fmull
pusha
push
mov
aaa
jle
jno
push
lret
cmp
iret
adc
mov
ljmp
jb
out
lret
jmp
sbbb
xchg
mov
push
add
pop
sub
inc
cwtl
shll
bound
inc
fisubs
movsb
or
mov
hlt
pusha
push
lret
jg
mov
or
enter
insb
sub
sub
mov
sbb
jo
ljmp
pop
cwtl
mov
push
dec
movb
adc
out
dec
subb
les
aas
pop
outsl
sub
dec
fisubrs
lods
stos
inc
adc
cmpsl
out
jecxz
pop
and
pusha
or
adc
sti
call
mov
popa
jl
notl
mov
mov
sbb
pop
mov
push
adcb
dec
pusha
sbb
cltd
mov
add
fwait
cld
outsb
dec
mov
xchg
pusha
gs
in
out
orl
loope
mov
sub
mov
aam
outsb
std
jo
lcall
push
daa
xlat
shl
cmpsb
fs
pop
xor
out
bound
fsts
pop
popa
js
sbb
fdivr
add
mov
cmp
hlt
dec
pop
sbb
push
fwait
testl
pusha
imul
xchg
add
mov
not
push
aad
cmp
and
mov
rolb
aam
xchg
xor
dec
pop
mov
mov
fidivrl
xchg
imul
test
cmp
das
jp
mov
xchg
mov
mov
pusha
jecxz
lds
dec
lods
mov
andb
int
testl
pop
or
mov
pop
sub
inc
out
movsl
jl
cmp
test
push
mov
pusha
lods
cmpsb
sahf
add
and
mov
pusha
fld
xchg
sbb
test
adcb
mov
sbb
repz
ficoml
inc
mov
mov
sub
outsb
sahf
jae
push
pusha
mov
and
pop
fdivs
mov
aaa
div
ret
roll
xchg
sub
mov
and
jno
xor
pusha
enter
cli
and
pusha
es
ficomps
and
out
inc
in
repnz
clc
pop
fwait
and
fsubl
mov
mov
cli
lret
adc
add
sbb
and
pop
jne
adc
mov
adc
fldlg2
pop
enter
cmpsl
bound
push
dec
pusha
jge
mov
adc
cmpsl
addr16
test
pop
pop
loop
mov
add
inc
iret
cli
push
jecxz
movsl
jmp
test
cwtl
loope
jle
out
xchg
adc
push
add
mov
pop
loope
pusha
shlb
mov
push
xchg
in
hlt
rcl
jae
mov
add
push
loopne
mov
or
dec
cmp
push
push
cmpl
dec
mov
lcall
sarb
scas
nop
pop
dec
in
mov
pusha
out
mov
outsb
jb
mov
sub
loope
imul
jno
sbb
enter
dec
loopne
xchg
sub
test
dec
xor
jo
xchg
rcrl
cmp
enter
adcb
mov
adcl
clc
mov
and
daa
ret
shlb
pusha
aas
push
ffreep
cmpsl
sub
fwait
loope
sahf
add
push
jbe
loope
mov
movl
push
mov
add
pusha
sub
mov
inc
orb
jmp
cwtl
daa
out
dec
push
call
ret
roll
fstl
pusha
iret
popf
cmp
pop
or
nop
pop
pop
mov
mov
mov
lds
jle
dec
cmp
pusha
xlat
mov
pop
imul
ds
push
and
repnz
js
pop
adc
push
test
das
sbb
cmc
mov
pop
fstpl
mov
mov
rolb
stos
cmp
xor
pop
lods
cmp
pusha
addr16
jecxz
inc
pusha
mov
xadd
jmp
adc
pusha
add
les
jg
stos
pusha
sbb
jmp
je
sahf
jl
xchg
mov
pop
sub
mov
orl
frstor
xlat
jnp
mov
pushf
faddl
dec
notl
test
lahf
pslld
stos
xchg
inc
mov
lahf
push
pop
fs
sahf
bound
lods
sub
inc
andl
ret
mov
cmp
ss
xchg
jl
mov
push
cmpsb
inc
imul
sub
push
pusha
test
pop
leave
fwait
ja
loopne
movl
jns
mov
test
xor
lret
jle
pusha
adc
pop
xor
xor
pop
into
mov
or
loope
adc
test
bound
aaa
pop
adc
sbb
loop
bound
sub
push
xchg
lock
pusha
repz
jg
xchg
mov
adc
push
insl
pusha
repnz
data16
pop
fldt
rcll
test
mov
sbb
pusha
loopne
lods
mov
pusha
push
xor
mov
fs
enter
sbb
cmp
lock
pop
push
jo
test
into
icebp
ds
lds
cli
mov
mov
loope
mov
push
add
lock
jecxz
or
in
push
loop
xor
xchg
pusha
sbb
mov
dec
add
dec
int3
call
mov
pusha
stc
imul
insb
fidivl
xchg
jge
pop
sub
aaa
loope
inc
dec
pusha
xor
aam
jo
in
mov
pop
addr16
loop
mov
pusha
inc
mov
fsubrl
cmp
int3
jl
push
test
sbb
push
push
and
push
lods
mov
test
out
pop
add
ret
lock
inc
ljmp
pusha
dec
enter
mov
pushf
mov
popf
pusha
push
outsl
jg
add
pusha
sub
or
pusha
sbb
scas
outsb
push
cwtl
pusha
aas
cli
clc
fldt
das
stos
inc
mov
jmp
adc
push
daa
mov
sti
ficoml
sub
mov
or
outsb
mov
xor
or
lods
inc
adc
sahf
into
xchg
les
insl
add
in
mov
stos
jecxz
and
imul
daa
add
xchg
mov
mov
adc
lret
mov
in
clc
dec
cmp
xchg
dec
inc
daa
pop
gs
cmp
or
outsb
js
pusha
stos
int3
mov
call
cmp
arpl
xorb
imul
imul
or
in
jl
pop
xchg
jae
sub
pusha
aad
sbb
push
jo
and
in
dec
fsubr
mov
fimuls
ds
add
cmp
in
sbb
stos
out
scas
push
mov
dec
or
cli
js
stos
jp
test
pusha
or
and
fs
push
jb
mov
das
push
mov
je
mov
adc
inc
sub
loopne
cmp
les
mov
mov
push
test
bound
add
insb
es
jne
sahf
fwait
xchg
lcall
jmp
imul
dec
das
ds
loope
in
iret
sub
add
mov
sbb
inc
stc
inc
sbb
divb
stos
jns
sub
dec
je
rclb
pop
fistpl
pusha
add
push
lock
sbb
ljmp
jb
loope
stos
imul
sbb
xor
lods
xchg
and
sub
sahf
and
in
gs
push
adc
mov
cwtl
mov
push
and
ficoml
ret
add
mull
and
out
ds
les
xchg
inc
inc
jo
mov
mov
sahf
sub
cwtl
sbb
cmp
mov
rorl
mov
pop
dec
xor
into
inc
dec
sub
push
in
push
shll
pop
push
mov
sub
ljmp
sbb
pop
pop
jno
mov
xchg
pop
lahf
lods
cmp
movsb
cmp
dec
inc
pop
popa
sub
icebp
or
adc
fistpl
add
xor
cld
sub
sub
repnz
lea
outsb
xor
ret
shl
ret
xor
xchg
add
dec
cmp
mov
or
into
stos
xor
pushf
pop
mov
cmp
lods
mov
int
fiaddl
inc
mov
rcrb
sahf
rorb
pop
pop
xor
pushf
rclb
pop
orb
mov
push
dec
repnz
mov
xchg
dec
je
mov
mov
mov
mov
pop
dec
push
pop
push
ss
add
push
lret
inc
xor
mov
adc
push
xor
adc
aad
fwait
add
push
repnz
sbb
outsl
sti
adc
sbb
addb
dec
inc
fs
push
add
mov
mov
out
jo
xor
aam
leave
pusha
mov
insl
hlt
sub
pop
js
bnd
xor
pop
movsl
loope
bound
ret
pop
push
subl
fidivl
sti
add
mov
push
jbe
push
aas
jb
popf
scas
shrl
pop
idivl
mov
inc
pop
jnp
inc
push
stos
test
sub
fmuls
push
pusha
xor
cmp
insl
fldt
fs
sub
scas
push
hlt
loope
dec
sbb
lahf
pop
mov
ja
pop
jno
push
mov
pusha
and
inc
in
lahf
pusha
out
popa
stos
outsl
fisttpll
push
dec
add
jne
xor
out
ds
jge
pop
adc
adc
loopne
xor
outsb
setb
rolb
mov
cltd
sub
insl
gs
xor
pusha
mov
add
test
test
pusha
cmc
call
mov
lea
cmp
adc
lods
push
insb
aam
sbb
ret
jp
test
mul
dec
pusha
push
mov
mov
sub
pusha
xchg
ds
adc
pop
cltd
cmpsb
lret
xor
lods
std
xor
mov
hlt
mov
inc
inc
aaa
adc
insb
movsb
test
xchg
or
mov
pusha
mov
sbb
int
outsb
mov
add
leave
pusha
dec
mov
pushl
mov
insb
mov
push
imul
inc
and
jl
jae
mov
leave
fwait
push
or
cmpsb
dec
push
popa
xchg
mov
sbb
sbb
arpl
lahf
outsb
sub
mov
dec
insb
in
jmp
pop
fwait
int3
push
sti
jecxz
pop
dec
fistl
push
sbb
fs
cmp
jecxz
dec
insb
fs
jle
fildl
lods
in
pusha
mov
mov
pop
in
clc
push
out
pusha
sti
jecxz
scas
cltd
pop
ret
rclb
jge
cmp
jns
vpshuflw
pop
adc
pusha
mov
clc
aaa
mov
cmp
insl
bound
cmpsb
das
orl
adc
xchg
lock
insb
jp
dec
adc
sub
fcom
inc
dec
jne
dec
in
pop
iret
push
pop
ret
jge
pusha
pop
js
cli
cwtl
subl
sbb
insb
int
lahf
nop
insl
das
dec
jle
punpckldq
clc
mov
jo
jne
clc
aam
xor
push
cmpsl
mov
mov
addl
push
push
je
xor
lret
neg
call
mov
lods
or
shlb
pusha
mov
ja
and
xchg
cmp
test
adc
repnz
mov
xchg
jb
xchg
mov
shll
mov
movsb
dec
ja
jo
outsb
int
rorb
xchg
test
mov
hlt
rclb
jae
and
or
ss
cmpsb
sbb
fs
adc
or
jae
xchg
in
dec
arpl
sub
jp
and
scas
rorl
pop
cld
rol
add
ss
adcb
mov
popa
push
adc
cli
pusha
mov
xor
aaa
popa
insb
xchg
out
pop
mov
les
push
lret
test
fistpl
ss
jl
adc
add
imul
xchg
popa
enter
mov
xor
ret
inc
icebp
and
rorl
stc
cmp
push
int3
aad
adc
jbe
mov
iret
inc
xor
sarl
mov
lock
jno
pop
xchg
std
popf
jne
xchg
repnz
push
enter
push
rcl
js
in
sub
pop
movl
popf
lret
rol
in
mov
data16
inc
movsl
lods
cmpsb
cmp
sub
mov
mov
add
jmp
test
push
push
cwtl
in
lahf
into
or
aas
mov
and
pop
lock
push
mov
and
cltd
mov
jb
sbb
das
xor
xor
push
cmp
test
xchg
xchg
repz
xor
pop
into
imul
xor
test
sbb
fwait
jno
test
add
pop
int
jp
jle
sbb
lahf
repz
push
scas
mov
pushf
xchg
pop
das
je
jbe
lock
and
push
ja
cmc
enter
bound
out
sub
ret
shrb
ljmp
fs
mov
call
insb
popa
stos
fldenv
shll
push
inc
jo
inc
jns
insb
or
aas
and
ja
into
mov
adc
xchg
fs
dec
or
ds
pop
mov
sub
loope
sbb
jmp
jne
add
sub
fstps
pusha
jl
test
cmpsb
cmp
loope
add
inc
lds
jl
mov
fdivrs
clc
cmc
jne
je
jg
leave
xor
mov
and
popa
and
mov
xchg
pusha
in
and
cmp
xchg
jl
out
cmp
pushaw
adc
jge
repz
shlb
push
xchg
mov
addl
mov
pop
xor
xchg
pusha
dec
sbbb
call
jnp
aad
js
inc
je
stc
movl
adc
push
xor
xchg
cmp
add
dec
fdiv
dec
push
arpl
lods
pusha
das
jl
in
adc
xchg
jae
movsb
pop
xchg
lret
xchg
sarb
lods
cmc
arpl
roll
loope
sbb
sub
dec
lds
push
jge
mov
scas
push
insb
sti
outsb
push
mov
shll
icebp
add
adc
loop
jl
adc
cmpsb
jg
mov
fwait
gs
push
jo
xchg
inc
jb
pop
xchg
xchg
lahf
mov
mov
xor
xchg
dec
sub
or
push
mov
pusha
out
daa
mov
push
mov
push
sub
movsb
sbb
out
fisubrs
bound
cmp
inc
popa
cmp
jae
call
iret
hlt
xchg
icebp
pop
insb
push
jns
mov
mov
adc
imull
fildll
ret
popa
fdivl
mov
in
loope
inc
pop
jp
enter
mov
pusha
orb
inc
mov
xor
pop
nop
mov
inc
add
movb
push
mov
rorl
or
outsb
mov
push
repnz
cmpsb
adc
ret
in
jge
mov
int
xchg
movsl
testb
es
ret
rcll
push
sbb
arpl
cmp
mov
in
clc
dec
dec
cmp
not
dec
xor
dec
mov
stos
rclb
das
pusha
data16
out
push
adcl
mov
and
andb
test
mov
test
inc
fstpt
mov
lret
push
cmp
scas
lcall
xor
mov
sbb
adc
xchg
sarl
fisubrs
adc
xchg
sbb
inc
jns
jb
inc
jns
shr
xor
cltd
jae
push
lahf
pop
mov
stos
sbbb
mov
fcmovu
mov
mov
popf
add
aaa
mov
aam
jmp
mov
aas
push
test
lret
lahf
cmp
mov
lret
bound
jbe
sub
xor
repz
outsl
js
pop
loope
loop
add
hlt
jle
push
cmc
push
hlt
jecxz
aaa
mov
movsb
jecxz
push
mov
faddl
push
cmp
push
bound
jo
dec
jmp
testl
xchg
loopne
or
inc
call
push
sub
rolb
xlat
and
popf
insb
sahf
pusha
mov
insl
lods
scas
mov
insl
jecxz
out
int3
inc
gs
cmpsb
sbb
popa
js
jne
pusha
or
pop
bound
cmpsb
xor
push
inc
aad
mov
sub
in
mov
mov
frstor
sbb
xchg
aad
and
bound
mov
pusha
push
add
adc
and
sbb
lret
sbb
pop
push
jnp
pop
daa
out
test
jne
push
or
insb
mov
dec
out
data16
mov
xchg
mov
ds
lcall
pusha
xor
fsubr
fst
cmpsl
pusha
inc
shlb
push
pusha
xchg
xor
lcall
scas
sbb
mov
xchg
mov
inc
ja
ror
pop
sbb
test
dec
inc
pusha
jge
out
pop
push
gs
pusha
arpl
or
mov
fnstsw
ja
push
xchg
inc
loop
jnp
movsl
inc
mulb
test
dec
loopne
sarb
cltd
adc
push
stc
insb
nop
pop
icebp
bound
cmp
or
scas
lods
repz
pusha
imul
in
popa
loop
pop
shlb
imul
test
pusha
in
or
subl
pop
cmp
xlat
lds
das
adc
mov
les
pop
mov
arpl
sbb
lret
test
pop
mov
jns
sbb
out
lods
inc
inc
div
fs
lods
pop
dec
xor
cmp
inc
stc
cmp
pusha
dec
xchg
pop
sbb
sbb
in
out
std
adcl
jo
popf
add
mov
rorl
aam
fst
imul
mov
pusha
dec
imul
call
xor
std
pusha
nop
jl
imul
sub
push
lods
popa
mov
push
scas
mov
jg
out
pop
cmp
imul
mulb
push
sbb
das
sub
pop
scas
daa
dec
xor
xchg
dec
lret
sub
ffreep
ret
ja
add
out
and
pop
or
mov
pusha
ret
or
mov
popa
inc
es
xchg
dec
pop
dec
addr16
mov
push
and
sarl
sahf
mov
jns
fsubrs
gs
in
push
lar
insb
in
jae
inc
enter
mov
pop
inc
repz
or
or
jecxz
push
pop
pop
pusha
jge
mov
pusha
pop
stos
ss
hlt
push
fiadds
outsl
adc
inc
clc
jl
lock
loop
jmp
imul
mov
mov
pop
jo
inc
cmc
mov
stos
ds
repnz
sub
test
cltd
daa
fmul
mov
popa
cmp
in
xor
adc
or
int3
insl
and
add
aad
popf
fisubl
cli
xor
jns
jno
sahf
push
mov
je
sub
mov
lock
or
sub
xchg
ret
adc
lret
insb
pop
shrb
imul
pop
bound
shl
jl
outsb
dec
and
sub
mov
movl
out
add
pop
sub
stos
test
jle
stc
imul
mov
add
jl
inc
jne
loope
stos
out
out
mov
lods
jo
cmp
pop
jg
bound
data16
loop
jmp
adc
mov
xchg
add
pusha
sbb
jp
pusha
adc
mov
das
or
shll
xorl
dec
mov
sub
sbb
mov
loope
ret
cmpsl
sbb
mov
testl
hlt
inc
insb
add
mov
shlb
sbb
ret
jecxz
bound
clc
mov
cmp
lock
push
xor
push
jo
mov
mov
sub
xchg
sub
sbb
xlat
pop
mov
leave
ljmp
add
cltd
ret
xlat
xchg
mov
sub
sub
cmp
mov
test
rcll
fistl
jnp
mov
pop
mov
leave
ljmp
scas
bound
cmp
mov
pause
mov
rcll
es
cwtl
stos
ret
push
and
out
aam
mov
dec
jae
pop
inc
mov
add
mov
ds
fwait
in
mulb
mov
and
out
pop
push
dec
lock
sub
dec
and
outsl
push
js
les
sbb
xor
sbb
lahf
and
daa
adc
mov
add
pop
sahf
xor
pop
dec
pushf
jl
inc
mov
mov
xchg
pusha
mov
add
loope
test
pop
ficoml
sbb
imul
jb
repz
ficompl
pop
jl
xor
loope
pop
sub
add
scas
popa
pop
push
or
adc
adc
dec
mov
stos
jmp
push
or
xor
cltd
cmp
aad
cmpsl
push
jmp
mov
jns
dec
add
cmp
fs
rolb
repz
fsubl
mov
jmp
mov
mov
ret
sbb
mov
cmp
pop
cmp
push
adc
iret
jecxz
mov
sbb
pop
aam
adc
xor
lds
aas
shlb
in
xor
pop
mov
sbb
loope
fisttpl
bound
pop
adc
lea
add
arpl
mov
addr16
jle
dec
pusha
or
mov
mov
inc
mov
xchg
sbb
push
pusha
push
mov
mov
pusha
loop
lods
rorl
inc
call
cwtl
mov
pusha
mov
dec
cmp
pusha
ja
out
dec
out
pop
push
pop
add
mov
popa
imul
frstor
mov
xor
xor
ret
mov
push
jge
gs
cmp
mov
xchg
mov
ds
mov
popf
inc
lock
lret
xchg
xchg
cltd
outsl
xor
pusha
or
xorb
adc
movsl
outsb
inc
ret
sub
cmp
imul
add
xchg
adc
sbb
pop
push
scas
sbb
in
pusha
xchg
mov
cmp
jo
bound
in
nop
out
bound
adc
pusha
fwait
mov
icebp
jle
jge
pusha
mov
loope
aaa
movsl
pop
bound
or
cmp
rcr
xchg
inc
inc
pusha
mov
add
or
dec
sub
pushf
push
mov
inc
mov
mov
mov
jmp
sbb
lea
inc
popf
nop
mov
testb
cmc
dec
xchg
hlt
je
cmpsl
fwait
inc
sbb
or
pusha
ja
sub
out
pop
jle
mov
pusha
pop
insl
int3
xor
mov
scas
arpl
pop
mov
add
xchg
pop
imul
jbe
mov
ljmp
inc
iret
jge
out
pusha
mov
add
loop
andl
mov
lods
rcll
xlat
mov
pop
sub
in
or
xor
or
jl
inc
xchg
outsb
sub
repz
call
cld
jl
out
mov
push
mov
pop
arpl
lcall
pop
rcrl
sub
mov
push
pusha
fsubrl
out
mov
lret
mov
pusha
xchg
fiaddl
pusha
iret
dec
xor
popf
outsl
adc
dec
andb
cwtl
repz
lods
sbb
mov
mov
jmp
jl
lea
sti
bound
sbb
xor
xor
ret
ds
cwtl
mov
jo
sub
and
into
bound
pop
pusha
sahf
insb
pop
push
not
push
pusha
jmp
dec
leave
mov
in
repnz
rdtsc
inc
pop
mov
or
jecxz
inc
jge
sti
mov
aaa
pop
gs
div
popa
jp
cmp
push
inc
lcall
fistps
pop
inc
dec
or
out
xchg
mov
push
jbe
push
xchg
repnz
and
pop
int
add
cld
pusha
out
iret
cmp
aam
mov
and
xchg
mov
subl
ret
cmp
add
cmp
enter
ss
or
xlat
mov
pop
jp
jo
mov
js
fldt
push
out
test
inc
aam
pop
cmc
leave
mov
adc
xor
sarl
arpl
lret
inc
jne
dec
sahf
pusha
shl
jno
pusha
aas
lock
imul
stos
je
cmp
xor
mov
jae
mov
and
into
push
add
push
push
int3
scas
fs
sar
divl
imul
and
mov
jg
fdivrs
add
pusha
outsl
mov
rcrb
sbb
pusha
test
clc
dec
sub
out
sbb
adc
push
inc
out
mov
pusha
push
mov
pusha
add
mov
xchg
andb
out
ss
mov
jg
xchg
pusha
adc
lahf
shrb
cmpl
push
jl
gs
add
testb
sub
test
into
push
jl
mov
cmc
pusha
add
insl
movsl
lahf
add
or
jbe
mov
pusha
ds
push
cmp
jno
and
mov
xchg
sbb
out
bound
cmpsl
lcall
clc
rcrb
popa
mov
push
rorb
or
inc
sbbl
push
loopne
cmp
sub
test
pop
ljmp
mov
test
insb
pause
jl
jnp
iret
pop
pusha
mov
fwait
aaa
lds
loop
movsb
stos
insb
cli
adc
xor
mov
out
sbb
xor
jmp
dec
in
cmp
add
stos
out
lcall
mov
mov
stc
sbb
add
daa
insb
adc
icebp
pop
pop
and
je
sbb
lret
cmp
bound
je
dec
cmp
pop
in
pusha
movsl
cmp
mov
lcall
pusha
pop
adc
addb
pop
sub
push
fsubr
jl
and
das
cmp
jne
jle
inc
adc
sbb
fisubl
jg
xor
add
pop
adc
jle
pusha
dec
sbb
test
into
test
or
pusha
fidivs
mov
pop
test
mov
inc
idivl
shll
cmc
mov
rcrl
cwtl
and
addr16
cld
or
xchg
int3
adc
inc
xchg
xor
mull
fsubrs
movb
bound
rorl
lret
mov
jns
dec
test
sub
es
pusha
loop
jge
popf
or
cmc
in
inc
xchg
data16
push
test
and
push
lcall
shll
pusha
aad
inc
jl
shl
mov
sbb
cmp
jecxz
sbb
andl
lret
or
jmp
mov
mov
xor
xor
mov
enter
add
sbb
shrl
lret
cmp
mov
inc
mov
inc
sub
pusha
fcom
arpl
jno
cltd
pop
shlb
jno
sub
pusha
push
imul
mulb
sti
mov
mov
mov
add
stos
add
outsb
fmuls
fs
mov
inc
mov
outsb
popa
mov
or
loop
and
fs
das
cld
xor
sahf
fwait
popf
mov
inc
pop
push
dec
xorb
xor
pusha
lods
xchg
cmp
jle
stc
insb
push
inc
or
mov
mov
out
test
or
sbb
sbb
jo
or
adcl
aas
ds
ljmp
xchg
dec
inc
mov
mov
lret
adc
fistl
leave
sbb
mov
mov
and
lods
cltd
shrb
les
cmc
xchg
pusha
rcrb
jno
sub
fisubl
movsl
stc
dec
icebp
rorl
pusha
in
inc
or
pusha
loop
cmpsl
add
adc
test
mov
push
xor
adc
mov
imul
jo
mov
cli
xor
mov
les
js
jmp
bound
and
cmpsl
out
faddl
jo
mov
outsl
jp
push
push
movsl
jo
ret
jnp
push
outsb
addr16
mov
out
sahf
and
lahf
jl
jg
and
dec
in
and
sub
dec
dec
outsl
mov
fdivp
addr16
xor
mov
mov
out
fptan
fcoms
adc
xchg
divb
out
mov
jbe
maskmovq
testl
or
ret
sub
sbb
jbe
insb
adc
and
loope
test
xor
mov
stc
dec
imul
outsb
cmp
fs
cmp
adc
dec
roll
into
pop
xor
and
mov
test
das
mov
mov
loop
add
leave
fdivrs
rcr
pusha
ja
push
adc
in
test
or
add
sub
iret
in
ret
daa
int3
pop
inc
mov
xchg
cwtl
or
fisttpl
filds
fmull
lock
push
pop
and
pop
movsl
enter
insl
inc
fisttpll
ret
sbb
pushf
aam
je
in
mov
adc
lock
push
ret
sbb
sti
xor
xchg
adc
xor
mov
shl
popf
cmp
sbb
cwtl
loop
dec
mov
pusha
cmp
push
pusha
fbld
jg
pusha
sbb
xor
dec
lret
js
jl
test
xorb
pusha
inc
mov
ds
cmp
mov
and
les
sbb
loopne
pusha
xor
pusha
std
adc
fstpt
push
cli
pusha
sub
cmp
dec
xchg
aaa
call
xorl
mov
aas
pusha
mov
clc
addr16
mov
dec
lods
int3
cwtl
out
inc
sbb
xlat
out
jmp
adc
repnz
jge
arpl
movsl
dec
stos
pop
loop
mov
loope
bound
mov
mov
push
dec
loop
cwtl
cli
dec
sub
outsb
test
ljmp
inc
and
fs
inc
jp
jle
clc
sbb
sub
repnz
sahf
push
mov
outsb
adcb
push
dec
insb
mov
rolb
cmpsb
jmp
pusha
push
mov
in
into
lea
cmp
sub
xchg
arpl
jns
in
push
insb
fildll
stos
or
mov
popf
xchg
pusha
jno
adc
pop
orl
sub
pusha
imul
aas
adc
in
sub
xchg
shll
clc
mov
sub
int3
sbb
ds
test
fdivrs
inc
pop
and
clc
fwait
jno
xchg
arpl
jl
jmp
sub
sbb
dec
sti
jo
pusha
sub
aad
jnp
in
pusha
std
inc
xor
pusha
add
dec
jp
add
ret
push
push
dec
jl
jnp
jo
push
cmc
sub
add
pop
pusha
cmp
lds
sbb
andl
fdivrp
cmp
jecxz
mov
fcmovu
and
gs
pop
loopne
sbb
mov
sahf
into
rolb
fwait
inc
mov
adc
test
cmp
stos
mov
js
fcompl
fsubs
jecxz
lock
adc
pusha
sbb
daa
inc
mov
jle
mov
in
mov
mov
sti
lods
inc
dec
or
das
inc
add
int
clc
js
mov
in
push
fsubl
adc
xor
shr
mov
xor
xchg
cmp
sahf
and
insb
dec
fldl
fwait
mov
jno
push
lret
and
mov
cmc
test
cmpsl
mov
rorl
push
pop
pusha
mov
jo
adc
sbb
xchg
in
inc
nop
adc
lret
mov
shll
sbb
pop
ja
sub
stos
sbb
enter
je
cwtl
xor
arpl
mov
mov
rclb
shll
push
mov
aad
daa
cs
jl
and
mov
imul
xchg
mov
cmc
stc
cmp
inc
and
pusha
adc
lods
and
lds
or
cmpl
fistpl
jbe
and
pop
pusha
xchg
inc
jb
mov
lret
cmc
xor
fistl
ror
push
push
mov
mov
inc
inc
lock
loopne
sbb
mov
fcomip
adc
and
stos
aaa
xchg
pop
pusha
or
inc
movsb
add
dec
cld
mov
dec
pop
pop
and
fcomi
pusha
pop
scas
int
std
fstps
and
incl
clc
in
data16
jne
inc
pusha
xor
and
jmp
xchg
adc
sbb
stos
lcall
call
xchg
pop
pop
test
mov
gs
ret
cmpsl
or
js
sub
sbb
pop
bound
mov
push
arpl
xchg
stos
fimull
or
sub
jle
or
xor
pusha
dec
out
scas
mov
jl
iret
and
mul
mov
pop
cmp
add
pop
lret
jl
fisubrs
arpl
repz
inc
mov
into
jle
jp
dec
fdivr
mov
jl
xchg
es
out
cmp
insb
pusha
fistpll
fldenv
dec
outsl
pop
daa
sub
jns
xor
or
imul
sub
and
jl
mov
pusha
mov
xor
dec
leave
mov
or
sub
aam
fcom
mov
pusha
ficomps
imul
sub
pop
mov
sub
repz
mov
and
mov
lret
out
pusha
shrb
fcomps
fdivr
or
cmpsl
lahf
hlt
dec
test
dec
aam
jl
scas
pusha
arpl
cmc
and
inc
in
sbb
mov
lcall
adc
adc
outsb
pusha
shl
xlat
pop
jmp
ss
add
je
sub
cmp
cltd
stos
push
incl
in
movsl
arpl
aam
les
lret
jecxz
xor
arpl
dec
cmp
pop
ret
loope
jmp
xchg
lods
pusha
jae
dec
pop
cs
arpl
mov
xchg
testb
and
incb
call
jns
fs
mov
out
jno
cmp
je
and
mov
icebp
sub
pop
cmpsb
les
outsb
pusha
xchg
push
cld
and
dec
sbb
lahf
cs
fstl
popf
pusha
lds
jg
sbb
in
xchg
std
pop
and
pusha
aas
cmpsl
in
shrl
icebp
pop
sbb
fsubp
and
dec
iret
xor
leave
jo
shl
scas
mov
nop
ss
dec
adc
xor
lods
jl
and
es
bound
pusha
das
idivl
js
cmp
xorl
push
cmpsl
mov
lods
sbb
popa
insl
stc
sbb
je
pusha
data16
out
mov
popa
test
xchg
dec
pop
popa
push
lds
je
adc
data16
cmpsb
ret
xor
mov
or
test
dec
pusha
sub
nop
adc
push
andb
rclb
mov
cs
inc
push
pop
xchg
xchg
push
daa
xchg
sub
cmp
insb
out
std
jno
mov
pusha
push
sbb
add
pushf
es
adc
jno
scas
test
pushf
mov
mov
out
iret
mov
push
or
es
pusha
call
scas
das
adc
fs
hlt
icebp
and
xor
repnz
pusha
testl
lahf
mov
shll
xchg
or
xor
sbb
pusha
dec
arpl
pop
loope
adc
push
pusha
out
lahf
imul
test
shll
mov
ds
leave
cmp
jl
out
push
add
push
mov
mov
xor
mov
push
add
addr16
jns
sub
pusha
adc
enter
inc
jl
jno
xlat
mov
movsl
shr
jmp
pusha
lock
test
hlt
push
je
dec
in
insb
rorb
and
xchg
and
daa
xor
test
add
push
jle
and
sub
pusha
scas
xchg
jb
and
jns
pop
int
data16
sub
mov
roll
xchg
pop
bound
push
mov
and
mov
loope
mov
pop
lret
xor
inc
mov
mov
cmc
and
outsb
nop
pusha
adc
fwait
adcb
ds
lret
mov
bound
adc
sub
rorb
xor
pop
rorl
out
ja
insb
and
or
inc
and
nop
sub
pop
cmp
cmp
pop
mov
stos
jl
mov
das
and
cmp
cmp
lods
repnz
jle
bound
loop
add
xchg
dec
jge
stos
sub
fs
out
leave
pop
rorl
fidivrl
jg
aam
out
popa
dec
es
popa
scas
jb
inc
mov
aaa
jg
mov
rol
dec
or
jnp
inc
movsb
es
mov
sbb
mov
adc
or
push
pusha
lret
dec
sub
fistl
lret
jg
movsl
sahf
xchg
and
push
int3
dec
sub
sahf
out
stos
bound
inc
sbb
mov
pop
enter
inc
xor
push
pop
push
leave
les
cs
xor
jno
mov
mov
addr16
push
mov
or
add
loopne
mov
jl
or
pusha
mov
jge
mov
add
xor
adc
xchg
pusha
stos
lods
sbbl
popa
pusha
or
xor
xchg
ret
pop
sbb
and
popa
lret
pusha
inc
pop
jp
mov
push
dec
or
cs
fnstenv
fistpl
pusha
xchg
pextrw
mov
outsb
pop
test
mov
jecxz
sbb
mov
cmp
int
andl
mov
adc
lock
push
xor
xchg
in
push
lret
push
sbb
fwait
xor
into
out
pusha
call
sub
mov
jp
add
pusha
mov
jecxz
and
mov
sbb
pushf
inc
pop
push
sub
icebp
mov
xchg
xchg
adc
mov
jb
xchg
cmp
push
mov
fs
pop
xlat
sub
popa
out
pop
ss
mov
pop
inc
jp
popf
pusha
mov
test
mov
lret
push
mov
sub
fwait
ss
bound
or
adc
pusha
enter
push
ret
clc
or
insl
xor
xor
xchg
pusha
imulb
cmp
daa
loop
test
inc
bound
mov
mov
dec
insl
test
fisubrl
adc
jl
or
push
xchg
mov
mov
mov
fnstsw
je
icebp
xchg
pop
andb
mov
and
pop
pusha
cmpsl
std
int3
ds
xor
rolb
pusha
dec
dec
cs
pop
loope
shlb
std
lret
pop
xlat
pop
or
dec
bound
add
lea
jge
scas
cmp
fwait
aaa
pusha
add
mov
cltd
loope
xchg
sub
add
pop
insl
xor
loope
dec
add
cltd
pusha
fcompl
inc
movsl
outsb
filds
cmp
pop
xchg
gs
push
adc
jmp
pop
sbb
add
popf
sbb
enter
push
fiadds
addr16
insb
pop
cmp
adc
add
bound
pusha
push
call
cmp
sbb
fcomp
or
pusha
adc
rorb
and
jmp
insb
push
fadd
push
aam
bound
inc
lea
sub
js
fs
push
or
ja
adc
ss
jno
stos
push
test
push
xchg
out
adc
mov
or
in
pop
xchg
xchg
add
push
arpl
into
adc
dec
cmpsb
mov
pusha
fistpl
pop
clc
pop
pop
repnz
inc
cmp
in
negb
mov
bound
mov
dec
pop
cmp
push
test
jb
mov
xchg
pusha
xor
jp
jo
ret
test
sbb
dec
sub
pusha
mov
mov
pusha
mov
addr16
ljmp
fnsave
lea
jno
fistl
mov
mov
popa
mov
rclb
movsl
fisubrl
cmp
pusha
fwait
lds
stos
push
xor
inc
mov
sub
in
jg
mov
mov
sbb
dec
push
je
out
ljmp
stos
inc
adc
movsl
xchg
leave
dec
test
sub
push
and
mov
sub
bound
adc
pusha
in
lods
out
pop
daa
pusha
jle
pop
add
jno
mov
rolb
push
mov
aad
and
or
mov
pusha
push
xor
mov
xchg
push
bound
xor
fisubrl
inc
cmp
shll
mov
in
aas
mov
push
mov
adc
pusha
cld
jbe
rcrl
sub
daa
inc
mov
xor
cmp
pusha
lock
inc
rcl
sub
mov
and
jl
mov
fwait
int
xchg
mov
adc
rorb
ja
dec
mov
mov
xchg
test
push
xor
lods
incl
test
pusha
fs
rorb
mov
pusha
mov
scas
mov
cmpsl
inc
pop
push
cltd
rcrl
cmc
jne
inc
pop
mov
es
fs
xchg
dec
test
or
fidivl
mov
popa
insb
scas
dec
nop
mov
push
add
mov
test
out
mov
lods
outsl
mov
or
mov
test
cwtl
xor
cmp
bnd
dec
test
pusha
out
and
lock
pop
push
mov
or
imul
jnp
inc
jge
cmp
and
and
bound
out
clc
pop
arpl
nop
leave
jmp
dec
pop
push
mov
add
scas
xor
gs
in
mov
xor
sti
out
repnz
jp
mov
inc
scas
sbb
cld
arpl
test
xcrypt-cbc
cmpsl
xchg
repz
push
pusha
repnz
xchg
push
sbb
mov
fsubs
sti
lods
int3
pop
pop
cltd
fwait
test
rorl
fs
pop
xor
adcb
mov
lret
adc
jl
sbb
bound
jae
test
push
mov
cwtl
ret
mov
jl
push
jle
je
mov
adc
jl
sarl
and
js
pushf
add
bound
lret
sbb
xchg
mov
dec
popa
lock
cli
xor
outsb
iret
sbb
hlt
jbe
or
fbld
lahf
int
pusha
mov
add
shlb
outsb
pusha
adc
pop
pusha
cmp
inc
pop
mov
lock
jp
and
pushf
leave
pop
bound
call
adc
mov
lds
sub
pusha
call
xchg
int
pusha
sbb
lods
faddl
ljmp
mov
nop
and
loop
in
mov
js
pusha
pop
filds
xchg
sub
jl
mov
xor
bound
js
pusha
movsb
and
aam
xchg
pushf
es
clc
inc
gs
mov
or
xchg
mov
mov
sub
cmp
ljmp
ret
xor
arpl
leave
insl
stos
sub
subb
pop
insb
fimuls
xor
leave
arpl
xchg
fcoml
jns
popa
fistps
sahf
enter
pop
or
ljmp
pusha
jae
cli
das
xchg
and
roll
adc
nop
call
xor
shl
mov
pusha
shlb
add
in
cmpsb
cs
add
into
fstl
sub
adc
stc
test
mov
cmp
pusha
cltd
pop
inc
push
mov
jge
fstl
loope
cmc
popf
shr
pusha
xchg
or
out
or
clc
out
jl
cmp
gs
add
jo
repz
xor
lcall
push
xchg
adc
cld
in
pop
call
jne
mov
and
or
and
mull
push
pusha
jnp
xchg
data16
mov
add
pusha
pop
and
bound
sbb
jecxz
or
jns
mov
jge
jo
inc
xchg
bound
adc
movsb
stos
test
push
ret
shll
pop
inc
ja
daa
dec
and
cmc
mov
push
hlt
xchg
jl
and
lods
iret
mov
sbb
jb
dec
out
mov
and
push
ljmp
add
sub
stos
xor
sahf
mov
xchg
cltd
xchg
inc
xor
fsubrl
push
cmpsb
pusha
stos
in
ror
bound
pop
lahf
int3
push
push
jg
jo
push
jae
sub
sahf
bound
inc
push
inc
sub
bound
mov
xchg
push
popf
or
test
hlt
dec
xor
push
imulb
mov
jle
xorl
pop
xor
dec
aam
mov
inc
popa
cltd
dec
sub
sub
add
sbb
fidivl
cmpsb
movsl
xlat
pop
das
addr16
ret
mov
pusha
mov
cmp
imul
mov
out
pusha
xchg
adc
mov
pusha
subl
mov
enter
lahf
pop
sbb
es
adc
std
mov
cmp
mov
xchg
imul
pusha
adc
dec
mov
pusha
jmp
cmp
shlb
imul
dec
cli
add
pop
inc
fiadds
pusha
or
mov
sub
sahf
push
scas
mov
push
and
pusha
xor
lcall
pop
or
popf
ja
bound
push
lahf
pop
pusha
lret
fisubrl
and
fadds
mov
int
out
arpl
xor
pusha
push
ss
pop
xchg
stos
pusha
jb
ja
xlat
out
scas
pusha
lock
jbe
aas
inc
pusha
xor
pop
jle
push
cmc
push
xchg
cli
pusha
ja
add
scas
addl
push
aad
dec
mov
xlat
loope
mov
add
jge
sahf
add
or
out
xor
lock
hlt
sbb
add
add
sbb
jecxz
fstpl
lods
adc
pusha
mov
icebp
or
jg
gs
sbb
pop
ja
mov
pusha
push
stc
push
pusha
cmp
xchg
pushf
pop
insl
nop
ret
jg
fsubl
xchg
arpl
test
mov
add
inc
xor
xor
add
jns
loop
clc
popa
popf
and
data16
dec
mov
repnz
mov
adc
shlb
cwtl
xchg
stos
adc
or
pusha
mov
adc
push
insb
ficoms
push
pop
mov
sarl
out
pusha
and
push
js
push
pusha
add
imul
outsb
pusha
cmp
out
outsl
cmp
pop
pusha
mov
lret
jb
adc
push
push
repnz
pop
rcll
push
pusha
rep
jp
add
call
sbb
mov
adc
sub
bound
test
mov
inc
lods
aaa
dec
fdivrp
lods
mov
and
in
fcomps
mov
nop
sahf
pop
lods
pop
sub
jbe
mov
adc
jp
jl
jno
adcb
test
add
jbe
in
fwait
dec
dec
adc
lea
and
es
popf
sbb
pusha
sbb
jg
or
fisttpll
push
aas
mov
cmpsb
xchg
push
dec
loop
call
fnstenv
pusha
jne
jae
shl
mov
sub
ror
cmp
pusha
jmp
jl
andb
cmp
pop
fnsave
pushf
shlb
out
stos
sub
xorl
xchg
imul
loopne
xchg
insb
adc
test
mov
dec
test
enter
scas
outsl
push
sbb
shll
dec
mov
std
clc
cs
fdivrl
pop
sub
fnstenv
jae
jmp
iret
out
pop
lock
out
insb
cvttps2pi
lcall
jge
mov
xor
repz
stos
cltd
pop
and
js
jnp
push
inc
pusha
icebp
xchg
cmp
out
cwtl
andb
fwait
jg
dec
rcll
xchg
nop
inc
into
and
mov
arpl
push
fmuls
je
push
push
mov
adc
test
js
inc
dec
cmc
outsb
call
ret
fs
cltd
jl
xchg
cmpsb
sbb
int3
movsb
adc
arpl
mov
scas
hlt
in
jl
jle
pop
iret
and
dec
lods
scas
mov
cmp
dec
add
roll
push
jl
std
aas
pop
outsl
pop
dec
jge
out
sbb
pushf
repz
faddl
ror
inc
pushf
jb
xchg
mov
cmp
out
rol
insb
imul
fimuls
mov
mov
repz
mov
mov
fs
jne
mov
push
mov
rcll
xor
rclb
mov
sbb
mov
inc
push
add
pop
add
imul
fisubrs
jg
bound
and
andb
adc
mov
mov
push
lea
mov
mov
or
out
mov
and
js
daa
xchg
and
push
lret
movb
loope
mov
dec
xorb
xchg
sub
xor
stos
loope
je
in
mov
in
xor
pop
pusha
stos
xchg
push
and
add
ret
ja
testl
and
shlb
mov
imul
clc
std
adc
push
movsl
xor
bound
in
push
lcall
pop
or
les
sub
cmpsb
dec
cmp
push
dec
pusha
mov
aad
or
je
hlt
aaa
enter
mov
ss
ja
push
push
iret
insb
add
aam
sub
sti
push
frstor
enter
cltd
sub
mov
pop
push
pusha
inc
xorb
push
das
sbb
jmp
lea
loope
xor
fdivl
repz
pusha
or
inc
xor
testl
mov
jl,pn
xor
mov
pop
push
shll
lret
or
jne
cs
mov
push
ficoml
fcoml
cwtl
mov
mov
mov
adc
clc
insb
cmc
aas
cmp
pusha
adc
push
mov
repz
not
xorl
adc
scas
xchg
sub
cmpsb
cs
jne
add
mov
orb
outsb
xchg
ss
cmc
cmpsl
sub
ja
fstpt
icebp
pusha
mov
cmp
xlat
lea
pop
xchg
mov
cltd
lret
or
outsb
fists
mov
cld
cmp
fnstsw
dec
loopne
push
xor
je
rcrb
mov
ljmp
out
arpl
sbb
shr
sbb
pop
jl
gs
inc
and
cmp
and
mov
loopne
lret
lds
stos
icebp
mov
mov
aas
xchg
mov
mov
cld
scas
insl
jl
xorb
and
dec
cmp
sub
dec
sub
xor
aad
fucomp
sub
fists
inc
movsb
jl
pusha
insl
inc
clc
or
inc
or
movsl
bound
sbb
fbld
imul
pop
mov
pop
or
mov
or
cltd
out
mov
inc
insb
push
or
sbb
movb
icebp
repnz
add
push
xchg
bound
fsubr
sub
xchg
iret
jne
push
daa
pusha
test
dec
cmp
cltd
cmp
ljmp
fxam
pusha
or
xchg
mov
push
imulb
pusha
mov
je
cmp
cmp
es
add
jo
and
les
or
xchg
add
pop
data16
outsb
shll
out
mov
pusha
addr16
mov
lods
imul
add
pusha
mov
adc
add
mov
pusha
adcl
lods
pusha
cmpsb
sbb
pushf
adc
shlb
aad
sti
and
or
xchg
pop
pop
arpl
pusha
mov
fnstcw
pop
mov
jge
or
pusha
cltd
add
dec
push
push
andl
cld
adc
adc
and
add
and
test
je
push
mov
popa
testb
outsb
std
cli
and
mov
stos
mov
push
pop
rcrb
sub
sub
pop
out
jl
xlat
pop
push
and
add
test
fdiv
ret
movsb
xchg
loopne
jb
cmp
inc
inc
cmp
in
mov
mov
cmp
mov
leave
lds
pusha
mov
mov
scas
mov
inc
cmpsl
lds
mov
or
addr16
rolb
inc
pusha
lock
cld
xchg
mov
xchg
pusha
mov
cmp
inc
fwait
loope
adc
es
mov
mov
test
cmp
pusha
ja
push
es
mov
in
adc
mov
push
cmp
in
fwait
pusha
pop
xor
icebp
in
push
inc
add
lahf
sbb
and
das
cmp
cli
pusha
jge
sub
cmc
pusha
pop
jb
xchg
xor
fimull
insb
mov
jae
pop
stos
repz
arpl
mov
pusha
movl
daa
sbbl
je
subb
xlat
add
push
sub
jg
cmp
fisubs
push
cld
adc
mov
repz
fmull
leave
andb
jle
insl
jecxz
or
mov
out
dec
rcrl
xchg
push
pusha
rcl
pop
int3
pop
mov
test
xor
mov
popa
or
pop
inc
jae
bound
mov
dec
pusha
scas
pop
stos
clc
pop
aaa
cmp
andb
lods
mov
repz
sub
mov
pop
pusha
or
aam
pusha
add
pop
cwtl
inc
loop
sub
insl
clc
mov
fdivrs
inc
negl
lcall
repz
jl
push
jmp
lret
cmp
lods
adc
add
lods
cli
inc
mov
imul
pusha
inc
xchg
inc
push
ss
lds
call
push
pop
jge
aaa
pusha
in
push
push
dec
std
xchg
fwait
pusha
pop
js
adc
lods
jo
jl
enter
outsb
sahf
ret
imul
hlt
ret
addb
cmp
loop
mov
lahf
dec
das
mov
mulb
dec
fucomp
jl
push
sub
fwait
jg
pusha
mov
mov
repz
js
adc
pop
cld
mov
sbb
stc
rcll
shll
das
xchg
leave
jl
shlb
outsl
mov
jmp
mov
pusha
loop
addl
jmp
aaa
adcb
pusha
cmp
sbb
cmp
mov
dec
inc
cltd
sti
sub
mov
mull
popa
sub
fs
inc
xchg
popa
xlat
mov
and
add
xor
inc
negl
and
out
push
pusha
jae
lahf
mov
insb
push
mov
jl
movsl
pushf
daa
call
sbb
and
xor
mov
pusha
mov
das
sbb
lds
je
jno
fstps
aas
insb
insb
jge
lds
jae
adc
bound
inc
or
bound
adc
cmpsb
add
add
es
pop
mov
loope
add
flds
js
or
andb
jle
test
add
push
subl
lahf
xchg
cld
insb
jle
test
push
mov
push
in
nop
inc
fsubrs
sbbl
jae
adc
scas
loopne
insb
loop
mov
outsb
pop
popf
add
sti
cmp
inc
into
jne
std
or
mov
add
adc
and
dec
dec
test
and
lods
jp
push
xor
enter
popa
mov
mov
sbb
dec
pusha
pop
ret
pusha
xchg
add
mov
or
jle
push
sbb
notl
movsb
cmp
mulb
add
fsubrl
je
pop
cld
arpl
mov
insb
insb
mov
jle
ret
push
push
loopne
mov
andl
pop
stos
push
push
cwtl
loop
bound
xor
sub
push
lods
add
popf
mov
pop
inc
mov
gs
push
imul
mov
loope
fildl
xor
out
imul
out
arpl
mov
jmp
aad
ret
pop
or
sub
cmp
stos
mov
popf
fidivl
loope
icebp
xor
jl
addr16
addr16
inc
cmp
or
push
jl
xchg
adc
aaa
inc
insb
sub
pop
repnz
outsb
pop
fwait
in
int3
jmp
sub
xor
dec
je
dec
fwait
mov
jl
pop
fwait
jecxz
and
jo
sub
test
into
scas
cmp
mov
mov
fidivs
rorb
dec
pop
mov
ret
jb
je
loopne
cmpsb
ss
add
pop
dec
inc
test
adc
shrb
dec
insb
gs
push
dec
hlt
incb
sbb
imul
add
mov
test
test
xchg
dec
or
js
push
mov
out
int3
mov
and
xor
add
icebp
xchg
jbe
lret
jmp
push
pusha
and
mov
adc
test
sbb
sarl
mov
stos
loope
add
inc
cwtl
dec
sub
xchg
out
inc
lds
push
test
loope
sbb
adc
adcl
mov
clc
nop
inc
xor
cmc
inc
imul
push
cmc
mov
xchg
insl
es
xor
adc
mov
loopne
inc
adc
xchg
lods
pop
sbb
shrl
call
adc
je
cmpsb
inc
inc
mov
ss
ror
stos
fldt
xorb
push
add
mov
push
out
and
jns
add
pop
pop
in
aaa
dec
adc
nopl
dec
lahf
pop
mov
mov
cmpsl
stos
shrb
jmp
fs
add
ret
adc
dec
jne
and
imul
cld
pusha
shr
insb
and
rolb
andb
xchg
xor
lea
jno
sarb
dec
nop
xchg
repz
mov
shl
loop
dec
addb
js
jno
data16
insl
mov
mov
icebp
and
and
push
mov
stc
inc
jno
out
sub
call
icebp
cmp
inc
lcall
scas
push
adc
ror
int
pushf
pop
cmpsl
rcrl
addr16
ret
in
jp
push
xorl
sbb
out
and
and
call
fnstsw
add
adc
lock
fucomip
jp
jecxz
int3
outsl
sbb
cli
push
sarl
and
int3
pop
fsubrs
testl
pop
test
jb
cmpsb
push
fmul
pusha
sbb
in
aam
scas
cmpl
sub
imul
push
pop
int3
adc
lock
stc
inc
push
push
popf
adc
mov
xor
adc
and
stos
dec
int
daa
incl
in
stos
in
stos
inc
mov
popf
aas
js
xor
sahf
sbbl
aaa
movsl
arpl
aad
jmp
ret
xlat
fldt
std
in
xchg
test
arpl
out
inc
rcrl
dec
rol
test
fwait
stc
xor
xchg
loopne
daa
mov
xchg
fwait
jmp
testl
inc
push
add
add
xchg
mov
and
pusha
sub
mov
pusha
movsb
fs
mov
cmp
pop
mov
pop
cmp
ret
and
xchg
test
sbb
call
push
mov
push
pop
aad
push
or
imul
gs
cmp
mov
sbb
pushf
xchg
mov
fs
aam
mov
lahf
pop
loop
iret
orb
pusha
jle
stc
xchg
push
imul
cmp
mov
sub
stos
test
push
pusha
flds
adc
pusha
sub
out
xchg
push
pusha
add
sahf
xor
mov
dec
inc
lea
pusha
xor
jno
mov
int
dec
loopne
push
add
sahf
aaa
adc
lret
dec
fsubrs
outsb
out
in
pop
popa
sbb
movsb
xchg
jmp
xchg
out
cmpsl
dec
rorb
fdivrs
in
inc
pop
jns
aaa
and
shll
clc
xor
test
dec
xchg
jo
xchg
test
xor
pusha
bound
mov
popa
outsb
aam
push
inc
pusha
dec
dec
lock
jne
cmp
sbb
cmp
xchg
pusha
aaa
mov
pop
jnp
inc
jbe
sub
sub
cs
pop
mov
xchg
jns
inc
and
mov
sbb
xlat
iret
add
aas
jo
push
push
aaa
arpl
mov
jns
cmp
rcrb
xchg
mov
arpl
fmuls
xchg
loope
xchg
inc
pusha
push
imul
cmpsb
add
pshufw
jl
test
push
pushf
fisubs
adc
xchg
xor
pusha
mov
icebp
mov
fs
cli
adc
in
jae
push
fs
mov
insb
std
arpl
mov
loop
push
dec
pusha
outsb
push
xlat
mov
pusha
inc
cli
add
call
adc
and
mov
jl
mov
in
jmp
sub
out
mov
jp
or
pop
loopne
xor
in
rcll
pusha
es
xchg
jmp
out
push
pusha
hlt
and
insl
jl
scas
push
jns
loopne
push
add
and
pusha
ds
mov
sub
mov
inc
dec
arpl
jmp
mov
pusha
jno
cmpsb
cwtl
and
lea
shll
cmpb
mov
ret
stos
data16
gs
shll
pusha
push
inc
push
fmul
popf
fisubs
jo
push
fmul
cmpsl
imul
adc
daa
add
pusha
mov
lcall
mov
shll
cmp
mov
hlt
and
popa
fstpt
add
imul
gs
arpl
dec
sahf
insl
adc
test
jecxz
mov
andl
mov
ds
pop
mov
push
xchg
inc
xchg
sti
sbb
inc
fwait
dec
mov
mov
repnz
clc
loop
out
nop
cmp
pusha
sarl
fbld
mov
cwtl
or
je
in
fdivrl
pop
jb
es
jnp
inc
bound
arpl
rcrb
dec
dec
jecxz
aam
pusha
push
nop
data16
dec
frstor
fmul
cli
int
or
sbbl
movsl
xor
loop
dec
adc
fbld
adc
cmp
xor
sbb
sbb
dec
xchg
add
jo
xchg
mov
outsl
aam
jle
add
mov
add
nop
add
std
aas
addr16
imul
ja
mov
in
dec
jmp
sarb
xor
sarb
cmp
clc
fcoml
in
xor
and
xchg
jmp
xchg
out
dec
inc
repz
outsl
pusha
outsb
mov
pusha
or
imul
sahf
inc
movq
pusha
out
jmp
js
sub
adc
bound
pusha
loopne
jl
xchg
iret
lock
movsl
cltd
arpl
xlat
pusha
xchg
and
jb
daa
or
test
push
aaa
jecxz
dec
dec
xlat
mov
outsb
negl
mov
lods
push
xor
push
lods
xlat
pusha
cli
arpl
pop
insb
mov
shrb
cmp
xor
add
mov
shrb
pusha
xlat
mov
xor
pushf
adc
in
mov
popa
jb
sub
popf
xor
adc
xorl
or
repz
jl
push
mov
pushf
push
and
jecxz
xchg
cld
in
add
arpl
filds
push
adc
pusha
dec
xor
cltd
pop
gs
push
inc
push
daa
push
fdivrl
das
shlb
fdivrs
popf
repz
jbe
cmp
pusha
fwait
int
fidivs
insb
lcall
pusha
cmpsl
dec
sti
adc
imul
pop
imull
out
gs
mov
inc
aaa
pop
bound
imul
cltd
pop
ret
inc
push
fs
push
pusha
ja
cmc
icebp
stos
fcmovnb
push
pusha
adc
lret
enter
call
ret
push
test
rclb
xor
mov
subb
xchg
dec
gs
popa
out
inc
pop
pusha
xchg
mov
pop
jl
outsb
mov
push
int3
loop
sbb
mov
test
cmc
fcom
movsl
mov
xor
test
pusha
sbb
adc
fsubr
pusha
insb
jbe
mov
sbb
mulb
mov
push
loope
lret
pop
jae
and
mov
loope
and
mov
testb
test
adc
mov
mov
in
xor
test
nop
inc
iret
in
push
insl
sahf
repz
push
pusha
pop
mov
mov
mov
fiaddl
jmp
addr16
cld
mov
repnz
push
sti
gs
inc
test
mov
pusha
or
xor
pop
inc
and
or
mov
or
call
jg
xor
pop
mov
cmp
push
das
inc
jl
add
xchg
imul
shrl
lahf
sti
sbb
push
mov
fldl
jo
insb
add
mov
fadds
lahf
push
leave
or
mov
pop
dec
call
cmp
mull
cwtl
dec
add
adc
in
sub
push
bound
ret
inc
test
mov
pusha
jno
int
pop
inc
test
pusha
hlt
lock
movsb
pop
lcall
aam
mov
jmp
or
xchg
pusha
jge
cs
xlat
add
push
mov
es
or
cmp
popf
pusha
loope
insb
jp
sbb
roll
imul
push
mov
pusha
in
inc
mov
push
jl
sbbl
sbb
je
out
clc
sub
pusha
cmp
ss
fiadds
inc
mov
xrelease
xor
pop
xor
xchg
and
in
bound
cmp
js
inc
fxch
pusha
test
or
cli
sub
cmp
dec
je
lcall
lods
lahf
insb
and
inc
or
pusha
fcoms
rcrl
jecxz
pop
dec
iret
jno
pusha
xchg
out
fdiv
sbb
or
iret
je
sbb
dec
pusha
stos
daa
push
out
cmp
scas
dec
sbb
xchg
test
pop
dec
lea
inc
inc
cmp
add
fistpl
iret
adc
dec
clc
jne
das
pusha
dec
addr16
hlt
push
jl
jae
cmp
jecxz
test
es
sahf
movsl
sub
pop
loop
jmp
mov
insb
int
lahf
cmpsl
or
ret
xor
mov
push
cs
inc
lea
jae
rcrb
inc
and
aas
fsubrl
aam
enter
sti
fldl
fcompl
fwait
rsm
popa
out
mov
inc
insb
andl
mov
pusha
out
push
pop
das
or
add
jns
ret
inc
jo
hlt
int3
andb
outsb
icebp
sbbl
cmpb
add
cmp
je
xchg
bound
push
push
xchg
hlt
imul
lret
sub
lods
xorb
mov
cld
dec
stos
sbb
cmp
sbb
dec
xor
add
pop
dec
das
pusha
loope
sbb
pop
pusha
mov
es
jbe
out
lock
sahf
fldcw
pop
jl
adc
cmc
mov
outsb
xchg
and
sbb
push
xor
jbe
push
rcl
mov
shll
jle
outsb
xor
mov
lcall
push
in
cmp
pusha
or
popa
pusha
lret
std
mov
stos
sub
loopne
sub
mov
push
ret
pushf
push
jmp
pop
jo
mov
loope
loope
mov
outsb
lss
push
push
mov
mov
pusha
cmp
dec
ja
fnsave
sub
test
movsl
cmpsl
pop
lret
push
mov
mov
push
or
and
lock
imul
cltd
data16
js
lock
lods
rcll
jne
call
ret
sub
push
movsl
jle
loopne
and
imul
xchg
dec
lahf
dec
das
pop
push
aad
addl
hlt
rorl
and
adc
inc
xor
xor
mov
jne
dec
cmp
jp
push
test
lahf
mov
xchg
icebp
popf
out
cli
fstpt
lahf
hlt
cmc
filds
ljmp
aam
das
loope
sahf
xchg
lods
push
outsl
sub
pop
insb
call
ret
dec
int3
popf
dec
mov
mov
inc
sbbl
rcrl
sti
sbb
pop
push
inc
ds
lock
jno
idivb
lret
mov
xchg
jae
or
outsb
test
xchg
sbb
loope
sbb
xchg
test
inc
xchg
xor
adc
jmp
adc
std
sbb
jne
lahf
adc
mov
ret
daa
mov
sub
in
fucomp
aas
mov
enter
aam
add
and
adc
dec
push
jae
add
mov
add
pop
mov
popa
cltd
lcall
sub
pop
xlat
push
inc
cltd
adc
cmp
inc
mov
loop
clc
fcoms
xor
shlb
icebp
aad
mov
sub
cmp
jle
push
loope
movsl
ret
sub
cmp
or
aaa
loope
cltd
ljmp
sbb
push
fildll
in
arpl
icebp
or
push
adc
mov
adc
and
faddl
aaa
mov
inc
or
xchg
in
adc
cmp
lea
mov
subl
je
mov
fadd
js
lret
lock
cmpsl
push
jge
cwtl
jbe
pop
popa
lea
and
scas
ret
cmp
pop
fs
sub
lock
ss
and
fildll
rolb
and
jns
mov
adc
clc
arpl
dec
inc
xlat
xchg
mul
out
jmp
popf
mov
fs
xor
sti
jbe
mov
dec
inc
les
sub
sbb
fidivrl
dec
shll
add
and
test
insb
push
ss
and
inc
sbb
mov
push
dec
insb
enter
ret
jge
and
aam
inc
outsl
jbe
inc
out
mov
aad
in
call
mov
clc
mov
and
mov
sbbl
xor
cmp
ret
stos
sahf
dec
sbb
or
inc
add
fnstsw
inc
mov
loope
loop
xor
cmp
add
fbld
mov
or
push
mov
jne
lret
call
pop
add
or
lock
xchg
push
lods
push
xchg
icebp
push
pop
arpl
scas
pop
jl
dec
in
jne
jmp
sub
cltd
leave
mov
mov
sub
dec
sub
ss
in
daa
stos
fdiv
dec
or
stc
lcall
repnz
mov
dec
repnz
push
in
int
and
xchg
outsl
mov
mov
push
cwtl
ss
rcll
inc
xor
xchg
cmp
and
pop
cmp
push
ja
pushf
sbb
je
daa
aaa
fbstp
adc
loope
and
push
aam
and
inc
push
decb
fcompl
inc
sub
ret
fidivs
and
loop
ret
cmp
push
jmp
inc
imul
gs
stos
sbb
shll
in
xchg
mov
rcrb
hlt
outsl
notl
ffree
mov
ja
fists
imul
add
inc
jb
adc
cli
rorb
ljmp
adc
dec
jmp
iret
call
ret
jne
pop
mov
push
ljmp
fidivrl
mov
lcall
notl
mov
pop
push
testb
fisubrs
inc
push
pop
rcrl
sbb
iret
adc
lock
xor
outsl
arpl
mov
cmp
jle
mov
lahf
push
nop
xchg
ficompl
mov
imul
testb
add
inc
repz
push
loope
jl
out
push
das
ja
pop
loopne
ljmp
dec
dec
out
jecxz
cmp
jae
insb
xchg
inc
orl
xchg
adc
loopne
rcrl
imul
test
stos
inc
mov
jecxz
call
mov
mov
lock
pop
hlt
icebp
std
ss
adc
test
sbb
lock
mov
sti
pcmpeqb
stos
inc
in
add
dec
inc
in
mov
lcall
rcrb
xor
inc
lret
push
repnz
cmp
push
jne
roll
loopne
push
push
aaa
and
fisttpl
xchg
push
loope
pop
sahf
and
jmp
fidivrl
shrl
push
jecxz
out
mov
mov
or
test
sbb
dec
xchg
pop
add
test
mov
push
ss
push
lods
jo
scas
aas
jp
push
pushf
pop
push
mov
jbe
bound
int
mov
fmull
mov
aam
arpl
pop
mov
std
insl
xchg
scas
icebp
xor
lcall
add
scas
iret
popa
aaa
inc
repz
popa
test
and
push
mov
sbb
aas
mov
pop
mov
add
and
cmpsb
jle
push
fs
popa
dec
jg
repnz
push
mov
mov
dec
jp
movl
push
mov
sbb
mov
fsubs
fidivrl
lret
loopne
lcall
mov
aas
jl
adc
adc
dec
and
add
push
lea
js
adc
stos
xchg
inc
in
enter
div
jle
ljmp
jns
jmp
xchg
jno
mov
pop
outsl
inc
fnstcw
inc
dec
xchg
fmulp
mov
aam
cs
imul
adc
and
je
adc
jl
cli
cmc
push
and
in
and
xchg
out
or
fisubl
enter
ret
aas
adc
loop
inc
adc
lcall
cli
sub
ret
repz
aaa
or
loope
mov
das
andb
inc
ret
adc
jb
xchg
xchg
mull
loope
and
xchg
mov
inc
stc
sbb
ds
jmp
push
sbb
ret
xchg
dec
jl
jae
pop
cmp
data16
jo
xchg
test
and
cmp
add
mov
cli
jno
dec
xchg
pop
mov
repnz
insb
or
ret
clc
or
loope
frstor
dec
dec
xor
mov
or
jecxz
push
sbbb
pop
cld
pop
push
xchg
clc
jo,pn
scas
mov
pop
loop
imul
push
mov
repnz
ljmp
inc
sbb
das
frstor
pcmpgtb
hlt
clc
sahf
les
cmp
jmp
cld
mov
jno
dec
clc
ret
push
lds
xor
jo
dec
inc
sub
cltd
loopne
rol
dec
mov
inc
push
push
ret
mov
inc
fldt
es
push
jg
inc
test
bnd
add
cmp
mov
lret
xchg
or
in
pop
lret
gs
loope
ss
pop
jno
out
mov
mov
aaa
ret
scas
sbb
fidivl
mov
cmp
push
gs
mov
mov
sbb
or
aad
pop
sub
xchg
fsub
adc
ss
push
and
dec
push
jle
and
inc
add
push
mov
subb
mov
mov
sub
inc
mov
and
adc
push
clc
push
mov
mov
popa
sub
add
pop
jle
pushf
add
lods
mov
stos
rcll
jo
inc
mov
mov
push
dec
pop
fs
xlat
insb
sbb
mov
lock
lcall
jg
scas
xor
add
inc
inc
dec
addr16
ret
jmp
lahf
jnp
in
pop
sub
sub
add
ret
out
roll
gs
mov
lock
int
je
xchg
xchg
sub
jmp
fisubs
push
jo
out
dec
mov
orb
cmp
mov
fistpl
xchg
stos
xor
xor
pop
sbb
mov
mov
pop
dec
leave
mov
mov
pusha
xor
fmull
fs
or
jae
jno
jecxz
rolb
cmc
pop
jg
pop
mov
hlt
sub
mov
dec
movb
xchg
add
xchg
push
jb
cli
pop
xchg
pusha
mov
xlat
outsb
aad
imul
and
pusha
out
int
xor
dec
daa
fnstcw
arpl
popa
add
pusha
lahf
test
xchg
aam
pusha
inc
pop
dec
push
into
aas
or
shll
mov
or
mov
out
mov
in
push
cmp
lcall
pop
xchg
xchg
inc
or
movsl
pop
push
bound
cwtl
add
dec
in
lock
sbb
jl
scas
mov
xchg
sub
out
xor
les
add
mov
fwait
addr16
into
in
fistpll
cmp
cwtl
jo
inc
out
sub
pusha
jbe
xor
movsl
ja
rol
mov
into
jle
xor
test
cltd
adc
mov
mov
js
jb
mov
push
outsb
cmpb
dec
jl
and
dec
mov
sub
test
int3
lods
pusha
arpl
imul
lcall
clc
leave
and
mov
pop
pusha
pop
cs
aam
divb
mov
mov
jp
test
xchg
fcmovnbe
popf
bound
xor
ljmp
pop
ret
mov
xchg
pop
adc
out
cld
pusha
jns
js
jp
add
push
inc
call
mov
and
or
rcl
addb
jb
andb
bound
jl
jp
inc
and
movsb
mov
out
push
mov
mov
xor
jl
lods
or
ret
lock
add
cmpsl
lahf
leave
sub
pop
pusha
and
daa
in
jl
outsb
add
jecxz
mov
cmpsl
bound
clc
orps
xlat
jp
fs
push
aaa
hlt
mov
jecxz
out
in
mov
arpl
xchg
xchg
pusha
repz
inc
andl
and
inc
add
push
mov
or
loopne
pop
xor
nop
jbe
rcrl
inc
add
ds
mov
dec
js
jle
outsb
stos
xchg
or
pusha
and
les
cmp
xchg
dec
jo
cmpsb
pusha
arpl
push
cmpsl
adc
jb
fs
dec
sbb
sub
mov
inc
sbb
jecxz
dec
push
and
push
push
adc
cltd
repnz
mov
xor
push
fnstenv
lds
cmpb
pusha
iret
dec
push
mov
fcompl
push
mov
inc
jge
cs
mov
or
data16
imul
dec
cmp
rcrl
call
hlt
jb
jo
xor
mov
pop
jae
outsl
addr16
and
in
add
les
jbe
sub
inc
repnz
movsl
popf
or
es
mov
cmp
cs
out
aam
rcrb
popa
loopne
push
mov
cmp
in
dec
mov
adc
xor
sbb
and
lret
add
and
sbb
arpl
mov
sub
lea
push
loope
popa
sub
shrl
shr
pop
or
jmp
sbb
jo
sbb
insb
or
ffreep
popw
ficomps
lds
jnp
add
adc
cmp
or
loopne
leave
dec
rorb
fisubl
repz
mov
enter
sub
adc
xor
retw
hlt
pop
in
hlt
or
jp
or
jae
lar
repnz
clc
js
or
cmp
mov
mov
rorb
mov
ret
cmp
jmp
loop
rcrb
mov
cld
push
dec
push
mov
fidivl
sti
mov
jg
sub
mov
xor
push
push
mov
inc
pusha
inc
rcrb
jne
jmp
xchg
cmp
mov
imul
aam
ljmp
movsl
negb
or
std
jae
fs
or
push
adc
inc
mov
scas
mov
sti
inc
bound
imul
shl
sub
lret
sub
fistpll
jb
daa
sub
leave
mov
lea
push
ficoml
jg
mov
addr16
mov
fmuls
fwait
gs
lret
mov
je
pop
outsb
mov
xor
ficoml
inc
pop
inc
and
cmp
imul
xor
mov
test
jae
out
rcrl
dec
aas
lcall
jbe
push
push
push
cld
cmpsl
enter
or
mov
push
ds
pop
sub
sbb
or
jbe
out
cli
jmp
push
repnz
and
push
ja
cli
and
mov
mov
shll
and
fldcw
cmp
xor
and
xchg
mov
push
test
movsl
in
sub
lret
mov
pop
mov
dec
ret
and
icebp
inc
fidivl
cmp
inc
dec
orl
stos
cs
fmull
bound
sub
inc
add
rcrl
stos
jb
aam
mov
pop
cld
cmc
in
inc
fwait
call
loope
push
out
push
mov
inc
xorb
jae
xorl
daa
rorb
mov
jae
add
jae
or
gs
mov
push
data16
add
jp
call
mov
adc
cmpsb
jge
add
mov
cmc
jno
mov
popl
jne
fninit
loop
inc
sbb
iret
bswap
movsb
push
or
or
and
mov
jo
call
ret
je
dec
add
mov
negl
mov
ljmp
and
and
jno
jecxz
mov
shlb
xorl
xchg
and
mov
push
cmp
lret
inc
jae
outsb
insl
jns
mov
aam
inc
add
and
fcmovnu
inc
stos
cmp
adc
pop
mov
repnz
xor
jo
cmp
popa
xorl
push
shl
inc
add
sub
arpl
push
xor
mov
and
and
rol
ficompl
repz
dec
fwait
mov
xchg
jo
lods
into
pop
jns
xorb
and
jmp
sti
inc
sub
sar
xorl
jb
test
mov
mov
aas
neg
loope
lcall
inc
loope
ds
dec
out
daa
popa
lock
xor
push
add
add
add
addr16
imul
jb
out
ficoml
loope
repz
dec
inc
mov
arpl
jmp
mov
jno
movsl
jo
adc
jecxz
push
sub
mov
inc
or
push
rolb
popf
jne
fbld
in
jl
jl
loopne
fwait
iret
out
inc
inc
vcmpps
and
push
sbb
xchg
mov
lock
inc
inc
inc
jecxz
pop
mov
jns
fsubl
popf
insb
inc
rcll
inc
enter
cld
lret
jmp
loopne
fidivl
inc
and
mov
jno
xchg
les
xchg
out
push
or
test
mov
add
bound
mov
adc
arpl
inc
dec
jmp
sub
movsb
loopne
ret
mov
arpl
divl
jae
jmp
int3
sbb
push
cmp
cmpsl
cmp
mov
mov
xor
jl
push
add
jno
push
push
cmp
fsubl
fldenv
into
pop
lretw
sbbl
addr16
cli
or
xor
mov
loopne
das
call
rclb
in
inc
cmp
adcl
out
xchg
jno
and
inc
ret
js
int3
int
pop
call
sbb
ja
push
mov
cmc
pop
mov
js
mov
xor
jo
push
mov
shrl
or
jno
cmp
js
pop
in
out
mov
inc
jnp
add
loope
push
inc
and
shll
dec
insb
xchg
push
jb
xchg
fadd
ljmp
pop
jb
cmp
outsb
sub
mov
out
jb
xchg
mov
or
enter
movsb
add
mov
into
leave
adc
jp
dec
fwait
add
clc
dec
and
and
addl
je
jb
lock
push
daa
sbb
ret
inc
add
lret
scas
imul
insb
movl
xor
and
add
jno
icebp
xor
int3
inc
out
mov
mov
int3
mov
frstor
cltd
jecxz
and
mov
xchg
cmovp
adc
and
cli
in
dec
cmp
inc
xor
mov
pop
imul
rol
jno
mov
adc
ret
add
in
cld
mov
daa
and
arpl
jno
dec
xchg
adc
push
fwait
push
add
push
and
mov
xchg
subl
cld
push
idiv
jnp
mov
sahf
and
pop
push
sub
incl
sbb
jmp
cvtps2pi
mov
jecxz
fs
stos
mov
in
mov
xor
sbb
xor
loope
mov
and
pop
push
dec
loope
xor
jno
sub
cli
outsl
cld
mov
imul
comiss
fsubp
call
aad
dec
xlat
jo
and
mov
inc
ficoml
addb
mov
dec
dec
jae
mov
cmp
les
push
add
sub
ret
and
movsl
pop
icebp
jae
xchg
stc
jge
je
add
loope
sbb
pop
int3
clc
xchg
jle
jo
xor
popa
xchg
mov
inc
lods
pop
mov
jle
mov
jnp
stos
in
add
orl
cmpsl
xlat
outsb
mov
std
int3
xchg
sub
je
cmpl
test
jo
mov
xor
cmp
add
les
mov
jb
mov
sub
movsb
inc
xor
adcl
mov
ret
je
loop
cmp
cmp
jnp
jge
add
pop
clc
subl
inc
or
push
cmp
inc
dec
outsb
dec
mov
sub
test
rclb
pushf
dec
jecxz
xchg
int
mov
inc
and
push
stc
sbb
dec
inc
xchg
nop
clc
adc
and
sub
mov
or
fs
and
rcrl
lcall
dec
inc
push
pop
adc
mov
add
xchg
arpl
popf
sub
push
jle
repnz
shll
and
add
ss
in
jo
in
mov
ja
movsb
loope
push
and
mov
loop
inc
rcll
and
and
mov
lret
xlat
xchg
push
out
sbb
pop
add
lods
data16
push
lret
ss
loope
mov
and
cmc
and
inc
add
fsubl
aad
rcr
and
xchg
push
inc
gs
cmc
call
mov
ret
int3
add
cmp
and
pop
pop
xchg
addb
lock
adcl
sub
sbb
jge
push
pop
daa
loopne
xchg
mov
jmp
jnp
and
add
movsb
out
add
xchg
and
sbb
cmpsl
lret
xchg
rorl
inc
movl
scas
jle
repz
jne
cmc
lea
push
scas
mov
loope
dec
jp
call
mov
ja
and
mov
add
call
loopne
mov
add
icebp
lea
xchg
cmp
icebp
mov
mov
shr
loopne
test
data16
in
adc
inc
add
push
mov
mov
cwtl
add
mov
add
sub
and
loope,pn
fsubl
decl
test
mov
mov
and
shrb
mov
or
and
scas
jmp
jb
jno
xchg
dec
inc
push
pushf
ret
repnz
subb
mov
inc
xchg
jne
pusha
mov
jae
xchg
fsubs
out
shrb
or
push
xor
pop
adc
push
data16
test
in
xchg
inc
and
dec
data16
sbb
call
inc
adc
push
mov
imul
lock
sarb
addb
cmpsb
cs
xor
jo
adc
popa
cmp
mov
cld
stos
popa
jmp
cmp
mov
add
sub
push
jo
fistl
popa
sub
mov
nop
pop
test
cmp
cmpsl
loopne
repz
jno
bound
sub
and
cmp
jb
jo
inc
jmp
xchg
or
aaa
call
cwtl
popa
xor
popa
pop
stos
insb
jmp
ja
lock
fnstcw
xor
icebp
dec
jo
mov
insl
loopne
ret
inc
mov
push
sub
imul
sar
pop
and
mov
mov
lds
fucomp
nop
add
loope
jmp
leave
dec
adcb
pop
les
sbbb
pop
cmpsl
clc
xor
adc
jno
inc
inc
push
ror
aad
loope
data16
inc
imul
push
popa
lods
sub
jo
sbb
mov
loopne
cwtl
adc
into
loope
pop
dec
fs
call
xchg
loop
mov
and
js
popf
dec
movsl
add
imulw
or
sbb
in
fsubrl
adc
add
inc
js
mov
sub
and
xor
mov
cmp
and
mov
pop
add
movsl
adcb
ljmp
push
push
inc
sbb
sub
push
jo
int3
inc
popa
idiv
add
jecxz
xchg
inc
orl
push
push
sub
inc
in
and
cmc
insb
sbbl
shlb
push
inc
and
arpl
pop
add
push
push
dec
call
jno
mov
lea
add
jns
adc
sbb
dec
ret
xchg
xchg
icebp
dec
in
mov
sbb
jae
cmc
inc
popa
xlat
sbb
add
inc
out
aam
and
jno
test
sbb
xchg
sub
int3
call
ja
andl
cmp
repz
shlb
popa
jbe
push
mov
fisubl
xor
add
mov
push
pop
mov
push
out
mov
cld
or
mov
mov
test
aaa
and
xchg
cli
jb
push
sbb
es
js
ja
mov
sbbb
xchg
call
sub
popa
iret
push
pmuludq
loope
mov
fwait
or
fwait
sti
inc
xchg
add
adc
mov
lret
mov
test
js
or
ret
mov
push
loopne
xchg
cmp
js
loopne
mov
inc
cwtl
test
xor
mov
pop
pushf
mov
inc
scas
push
mov
sbb
xchg
bound
xchg
fisubs
outsl
jae
aad
gs
mov
iret
lcall
fidivrl
add
adc
mov
inc
dec
movsl
cmpsl
scas
xor
mov
inc
loope
push
fisubl
mov
xchg
sahf
enter
call
mov
xor
and
ret
rcll
repz
mov
cmp
cmp
jecxz
inc
mov
add
jns
add
inc
mov
lea
hlt
xor
mov
arpl
mov
addl
cmp
push
test
xchg
jmp
mov
and
and
and
movsb
pop
add
sub
cmpl
and
arpl
mov
aas
sti
pop
xchg
subb
xchg
xchg
push
and
rclb
inc
scas
add
call
loopne
sub
xchg
inc
andl
mov
push
daa
lock
mov
loope
mov
out
xor
ss
movsb
jle
mov
xchg
fwait
loopne
call
pop
scas
imul
out
cmp
jb
inc
xchg
in
pop
xchg
movsb
jmp
loopne
popf
test
inc
pop
bound
fidivrl
xchg
stos
push
or
push
jne
idivl
and
push
subb
add
jmp
and
and
mov
jp
subl
sbb
push
add
loopne
push
add
icebp
xchg
inc
enter
nop
jecxz
xor
push
mov
mov
lcall
ret
add
sub
jb
and
orl
mov
xor
and
mov
iret
daa
xchg
push
imul
stc
call
mov
ret
cmp
mov
sbb
movsb
xchg
adc
cld
xor
mov
jl
and
adc
inc
jle
cmp
push
test
sbb
int3
push
call
jns
mov
xchg
call
and
lods
stc
gs
jl
andb
sahf
jecxz
xor
jbe
fcomi
icebp
xorb
dec
fwait
ss
insb
loope
or
cmpsl
mov
sarb
mov
inc
pop
xchg
inc
sub
mov
adc
faddp
jo
jmp
mov
hlt
aaa
ret
jo
je
popa
and
xor
jno
jecxz
arpl
inc
insl
cmp
aam
sahf
cmp
mov
je
push
mov
adc
add
addr16
std
jb
or
loopne
add
adc
xor
lods
jo
std
ds
mov
adc
or
push
addr16
sbb
into
inc
push
mov
in
iret
pop
popa
sub
inc
pop
mov
mov
sub
inc
iret
pop
sub
stc
xor
outsb
loope
add
mov
subl
jmp
jle
cmpsl
cmpsl
sbb
cltd
and
imull
mov
mov
imul
addr16
mov
inc
arpl
cmpsb
pusha
mov
out
lret
iret
push
mov
ret
data16
clc
and
loope
lret
mov
repnz
loop
repnz
popf
and
cmp
inc
pop
out
test
mov
mov
sbb
and
pop
loop
sub
jno
mov
fwait
push
mov
add
cmpb
rorb
flds
jg
int
popa
pushl
sbb
and
lret
insb
cmp
lcall
push
rcr
cmpb
mov
xchg
and
mov
adcl
mov
dec
add
fisubs
in
adcl
jb
jecxz
mov
in
in
add
frstor
lret
mov
adcl
xor
lods
push
imul
jg
loope
pop
add
fld
add
nop
mov
roll
push
adc
jo
jg
call
mov
mov
fwait
add
in
arpl
aam
aas
std
push
out
sub
sub
mov
adc
shll
loope
fucom
aas
or
inc
leave
and
std
insb
mov
cmc
xchg
cld
loope
jne
loopne
call
sub
arpl
jo
add
pop
xor
aas
mov
adc
push
jns
popa
mov
imul
push
jo
pushf
push
inc
xchg
mov
rcl
fisubl
aam
pusha
fwait
adc
inc
ds
push
inc
insb
mov
mov
dec
or
mov
cltd
inc
sub
les
add
mov
and
ss
pusha
jo
pop
stos
je
pop
lods
movsl
push
les
nop
and
insb
mov
loope
jne
lcall
movsb
sbb
add
mov
xorl
pop
clc
sbb
jo
dec
mov
mov
mov
and
inc
or
add
movsl
mulb
movsb
mov
xor
ljmp
inc
nop
test
shr
dec
stos
push
mov
popf
popa
mov
or
jmp
jnp
push
inc
jo
and
enter
mov
mov
jo
loopne
and
movsb
test
and
cmpsl
jae
inc
stos
lock
or
sbbl
jle
popa
mov
and
mov
pop
xchg
jb
xchg
jo
jnp
icebp
adcl
out
in
fptan
sub
in
insl
in
ljmp
pop
add
or
jle
add
arpl
or
loopne
aaa
sbb
mov
push
cmpsl
jns
nop
adc
call
inc
dec
inc
lcall
lock
out
inc
aaa
jecxz
xchg
call
add
adc
inc
out
data16
mov
mov
movsb
mov
xor
inc
mov
mov
dec
mulb
in
jno
addl
inc
push
adc
inc
daa
popa
std
fidivl
push
push
les
test
mov
sbb
sti
add
stos
pop
xchg
sub
mov
mov
and
jno
iret
dec
pop
call
mov
bound
dec
inc
arpl
mov
mov
jbe
jmp
xor
inc
xor
xor
andl
push
lods
and
lcall
adc
out
jae
mov
popa
xchg
xchg
pop
test
jb
loop
fwait
sahf
or
imul
mov
lock
loope
out
inc
neg
and
pop
pop
and
xchg
jo
jmp
lock
into
ljmp
dec
adc
ret
pusha
mov
das
aam
dec
cmp
test
movsb
push
jae
icebp
arpl
enter
bound
and
test
and
jmp
xchg
xchg
mov
inc
lret
aam
movsl
pop
fbstp
fldt
sub
pop
in
ds
inc
sbb
scas
ret
loopne
mov
sub
mov
inc
xchg
mov
mov
iret
lcall
mull
ficomps
cmpsb
pop
add
insb
inc
push
pop
shll
jno
pop
pop
and
lea
inc
and
cltd
mov
inc
arpl
inc
sbb
and
jno
jo
les
inc
jmp
dec
mov
and
psrlq
out
push
imul
xchg
mov
sub
lds
cmp
dec
mov
xchg
arpl
inc
jl
inc
data16
imul
loope
shll
cmp
sbb
call
ret
cmp
dec
push
inc
mov
pusha
fwait
out
jnp
pop
bound
aad
sbb
dec
jae
fnsave
xchg
xchg
adc
pop
xchg
jae
jmp
add
lcall
cmc
jl
jmp
scas
sahf
test
xchg
jae
sbb
xor
lret
pop
fwait
hlt
hlt
jmp
dec
bound
pop
lods
mov
sub
call
mov
cli
test
fstpt
icebp
scas
arpl
roll
arpl
repz
inc
cmc
xchg
jl
mov
push
imull
dec
addr16
jp
callw
mov
xor
sub
inc
mov
or
inc
push
movsb
or
and
lahf
loopne
mov
sub
jge
jae
sarb
inc
mov
mov
ret
xor
mov
sub
cmp
push
cltd
scas
movsb
in
arpl
and
fwait
mov
push
outsl
push
jmp
add
data16
adc
icebp
adc
fucomip
bound
add
test
cmpsl
out
and
jle
loopne
fistps
addb
stc
mov
jg
lods
xchg
add
sti
rolb
pop
add
in
andb
inc
dec
xchg
inc
ret
push
pop
scas
inc
lret
out
jp
xchg
add
fdiv
fs
lea
sub
and
scas
adc
or
mov
in
iret
dec
pop
insl
ret
sub
pop
loop
fsts
stos
and
jno
sti
push
popa
fwait
out
inc
inc
add
fisttps
jg
ret
fiadds
loopne
outsb
jp
push
inc
ret
push
mov
daa
inc
dec
xor
adc
cmpsb
push
pusha
cmp
inc
in
sbb
and
pop
shlb
fnstcw
push
mov
cs
jb
inc
loope
mov
mov
lock
inc
and
fcmovbe
dec
fnsave
leave
stos
xor
xor
mov
push
aaa
ljmp
repz
xor
jno
loope
mov
and
mov
jo
es
loop
sarb
andl
inc
sub
orb
cmpsl
jno
addl
clc
repnz
popf
push
sbbl
add
out
jno
mov
cli
add
inc
std
jo
xchg
sub
movsb
pop
inc
xor
insl
lock
stos
mov
xor
add
std
dec
add
popa
add
inc
movsb
mov
arpl
inc
and
test
loopne
lcall
dec
mov
pop
repnz
and
pop
loopnew
xchg
jno
mov
xor
cwtl
lods
inc
in
pop
xchg
lock
imul
jge
jl
hlt
rcrb
jl
nop
mov
xor
xchg
or
inc
addr16
push
push
int3
sub
bound
stos
inc
pop
shrl
pop
inc
sbb
bound
hlt
mov
rcl
out
mov
js
kandw
inc
call
into
aad
sbb
imul
xor
adcb
fildl
mov
xchg
jp
and
adc
mov
add
mov
js
aam
mov
adc
and
fistl
push
mov
and
pushw
xchg
fdiv
push
cmp
fwait
push
roll
movsl
jbe
cmc
fsubl
das
add
gs
sbbb
pop
rolb
fstps
scas
jne
add
data16
arpl
xor
lds
mov
stos
adc
sahf
and
je
out
and
push
bnd
mov
pop
mov
ret
xor
xchg
ljmp
jo
or
cmpsb
fs
sarl
mov
pop
test
fcompl
dec
data16
ficomps
icebp
pusha
fwait
and
add
jge
loope
roll
push
or
pop
mov
mov
loopne
xlat
jle
push
shlb
fs
pop
pop
mov
sub
inc
xchg
mov
pop
mov
mov
xchg
dec
push
jmp
xchg
lock
aam
loope
mov
inc
or
push
sub
inc
cmpb
fistpl
dec
ret
mov
or
sub
mov
cltd
addb
popw
add
les
aaa
test
mov
fistps
into
repz
fs
ljmp
insl
mov
inc
mov
mov
inc
data16
xchg
popa
and
pusha
xchg
add
add
into
jmp
loopne
pop
jmp
test
adc
ret
add
inc
mov
fldt
fsub
test
add
addw
adc
pop
dec
pop
loopne
and
cmp
rcrb
in
loope
and
popa
stos
push
insb
sbb
rolb
cmpsb
sub
pop
mov
mull
pop
movsl
inc
adc
xchg
xor
xchg
out
pusha
sub
clc
inc
mov
add
loopne
add
mov
popa
nop
das
mov
xchg
adc
int
mov
ret
xor
inc
push
xchg
add
addl
or
icebp
inc
jb
cmp
xchg
ljmp
mov
andl
and
test
mov
mov
out
push
cld
and
jae
loopne
rcl
insb
iret
insl
xor
xchg
push
jecxz
push
stos
and
stos
mov
xor
sbb
arpl
sub
xor
mov
out
pusha
fwait
test
jo
sti
dec
dec
xor
sbb
icebp
imul
loopne
mov
orl
sbbl
push
out
bound
and
rorb
insb
js
mov
in
and
xor
xor
popa
rolb
je
inc
bound
lcall
sub
add
in
out
mov
adc
push
cmp
cmp
stos
xor
jo
enter
stos
jmp
inc
pop
ret
push
xor
fs
stos
mov
pop
mov
add
cli
jo
cmpsl
loopne
pop
mov
loope
jns
ret
movsb
xor
ret
and
mov
xchg
mov
add
enter
loope
xor
add
xchg
mov
push
and
mov
aad
gs
and
xor
lcall
and
sbb
sub
inc
push
push
loope
mov
adc
popa
adc
mov
add
das
scas
hlt
fcmovb
in
popa
mov
adc
cmp
outsb
fdivr
xor
dec
jecxz
adc
call
mov
call
mov
dec
add
inc
add
lods
data16
ja
sti
cs
mov
movsl
jle
and
movsb
sarl
gs
ret
subb
popa
movb
pop
arpl
mov
xor
fchs
iret
cltd
xchg
lods
and
pop
jno
rcll
gs
mov
mov
mov
inc
add
inc
jo
and
and
pop
push
imul
mov
in
inc
add
popf
nop
dec
jae
icebp
push
ret
shlb
push
shll
and
inc
test
loopne
repz
push
push
and
add
fstps
das
les
loop
add
ret
xor
pop
xchg
js
nop
pop
cltd
add
push
and
xchg
mov
jno
cmovo
xchg
mov
outsl
xchg
mov
cld
js
mov
mov
add
jl
in
push
ret
xor
jg
jo
stos
les
ret
or
mul
cmp
icebp
mov
rorl
inc
mov
xor
fistl
and
data16
and
fs
dec
and
out
pop
add
adc
dec
lea
add
insl
dec
shlb
mov
pop
sub
test
pop
rclb
mov
mov
adc
sub
out
lock
popf
inc
sbbl
or
and
mov
mov
subb
cmp
popa
dec
cmpsl
and
mov
ja
call
xorl
dec
popa
or
cltd
ss
sti
ret
adc
cmc
xorl
push
mov
movsl
dec
adcb
jb
mov
cmc
and
cwtl
dec
xor
imul
repz
fsubr
call
pop
stc
fnstcw
mov
leave
subb
mov
mov
push
adc
mov
mov
dec
sub
lret
nop
mov
dec
aam
lcall
cmp
and
pop
hlt
push
xchg
arpl
xchg
jg
mov
add
add
fwait
rolb
clc
jbe
xlat
xor
call
dec
cmp
addr16
and
roll
adc
push
xor
cs
test
std
inc
sbb
jp
scas
fcomps
add
cmpl
adc
dec
jo
xlat
and
adc
fs
loop
or
jecxz
add
aaa
inc
cli
xchg
cmp
or
mov
hlt
sub
inc
je
add
xor
xlat
cmp
sub
jmp
pop
cmp
xchg
sbb
add
scas
inc
or
push
xchg
jl
aad
inc
icebp
mov
negl
sbb
jno
scas
push
jmp
std
sbb
aam
das
aas
inc
js
push
push
push
push
mul
fidivl
in
jmp
pop
cmpsb
push
loop
add
add
in
mov
out
out
pop
cmp
loopne
out
rclb
inc
hlt
inc
dec
dec
dec
rclb
xor
mov
rclb
jno
xchg
mov
jmp
mov
bound
pusha
xchg
mov
mov
xlat
jmp
ret
inc
lcall
and
pop
mov
inc
jo
scas
pop
data16
sub
mov
xchg
dec
test
sub
aam
inc
xchg
andb
xchg
pop
icebp
inc
mov
roll
pusha
fwait
je
cmp
dec
add
sub
js
popa
add
cmp
sbb
add
add
bound
insl
pop
push
adc
stos
cmpsb
jge
pop
imul
scas
popa
leave
add
inc
mov
adc
add
jb
jo
mov
cmpb
cmpsb
and
div
lret
mov
jecxz
inc
clc
enter
and
jge
pop
adc
lods
push
jmp
popa
enter
mov
adc
push
push
inc
pop
sub
dec
popl
icebp
push
bound
loopne
roll
bound
xlat
cmp
inc
mov
popa
loopne
mov
add
push
out
cmp
repnz
icebp
and
xor
out
rolb
sahf
pop
and
fsubrl
arpl
mov
arpl
shlb
xor
or
dec
cltd
int3
sub
adcl
lods
jo
mov
xchg
jmp
add
movsl
test
xchg
mov
inc
jno
inc
sub
mulb
xor
fxam
in
fdivrl
subl
es
add
push
jecxz
jo
sub
inc
xchg
mov
inc
cld
jecxz
push
pop
enter
lods
jecxz
loopne
pop
mov
xor
xlat
and
sti
popf
dec
out
test
test
inc
cmpsl
test
out
in
mov
rclb
in
jbe
ja
push
lods
rcr
push
mov
ds
xor
nop
inc
out
out
add
hlt
mov
or
sub
fneni(8087
mov
out
inc
clc
andb
fisubs
arpl
loopne
adc
idivb
loopne
jne
ds
inc
shll
nop
mov
xor
inc
cmpsb
jno
repz
insl
adcl
idiv
sbbl
cld
push
scas
inc
xchg
repz
popa
pop
pop
jno
ret
mov
xchg
mov
xor
and
push
jo
pop
inc
int3
roll
andl
daa
jl
dec
mov
jl
sbb
test
inc
add
sub
or
imul
xchg
pop
sbb
jno
jle
cmp
sbb
adc
fdivl
popa
jp
mov
and
xchg
or
mov
mov
adc
mov
mov
adc
stos
les
jno
bound
dec
int3
pop
in
xor
mov
jl
mov
ret
mov
cmp
mov
bound
pusha
dec
cld
inc
insb
out
sbb
pusha
xchg
xchg
pop
and
mov
add
addr16
mov
mov
push
andb
add
pop
dec
inc
fdivl
lret
loopne
mov
xchg
mov
call
inc
data16
fsubr
mov
inc
je
mov
adc
adc
or
call
push
mov
sti
and
pop
mov
jge
push
pop
adc
insb
mov
ret
std
push
sub
xchg
mov
and
loopne
inc
jne
adc
jecxz
pop
dec
aas
inc
mov
mov
inc
add
test
iret
mov
dec
inc
daa
mov
mov
adc
call
lret
mov
mov
add
pop
in
add
cld
testl
adc
inc
or
dec
and
add
lcall
sarb
sti
dec
rcr
loopne
pop
cmp
sub
repz
je
scas
jle
subl
pusha
mov
push
mov
nop
test
push
data16
aam
mov
xlat
jecxz
mov
aas
and
sub
hlt
jno
pop
loope
mov
iret
add
mov
cld
pop
xor
loopne
imul
in
arpl
or
fimull
hlt
dec
mov
push
iret
xchg
test
and
push
or
inc
imul
mov
mov
mov
arpl
pop
inc
and
mov
fwait
repz
add
fs
cmp
dec
push
popa
mov
jo
jae
scas
push
gs
or
stos
mov
sub
cmp
mov
gs
xlat
and
jae
push
aas
popa
subl
push
out
adc
nop
sub
inc
push
shl
and
dec
icebp
andl
xchg
and
xlat
sub
xor
inc
jnp
xor
pop
loopne
inc
adc
sbb
addr16
xor
add
mov
je
sbb
fsubrl
pusha
mov
mov
test
andl
mov
inc
lock
ret
adc
fbld
outsb
orb
pop
pop
mov
call
adc
jmp
sti
inc
loope
cmp
nop
je
imul
fidivrl
jno
jmp
mov
call
inc
jnp
and
mov
hlt
in
push
aam
and
out
add
add
dec
bound
pop
pop
mov
dec
add
dec
jne
mov
xor
xor
push
aam
mov
dec
lds
or
inc
inc
arpl
dec
dec
mov
sti
ficoms
iret
push
mov
jl
pop
mov
jb
pop
bound
cmp
ret
cmpsl
inc
icebp
mov
xor
jo
dec
mov
sub
pop
or
xchg
rcll
lds
xor
mov
movsl
loop
inc
push
fdiv
push
repnz
stos
pop
push
and
flds
jo
mov
adc
popa
ja
test
dec
and
sbb
mov
fsubs
je
and
loopne
sub
iret
jmp
loopne
jnp
outsb
sbb
outsw
cmp
sarl
dec
int3
and
xor
loope
mov
clc
pop
pop
icebp
sub
loopne
lret
movsb
leave
mov
popa
sub
and
cwtl
mov
adc
mov
loop
xchg
roll
inc
inc
add
cmp
loope
shlb
cmpl
jmp
inc
add
mov
cmp
negl
in
and
pop
ss
pushf
mov
inc
sarl
xchg
jo
or
or
sti
ljmp
pusha
xchg
xlat
add
test
dec
lcall
je
mov
mov
bound
loopne
and
fwait
test
lret
lock
loop
testl
loope,pt
xchg
sarb
test
inc
frstor
push
repz
mov
arpl
mov
leave
xchg
repnz
inc
andl
add
adc
jb
call
mov
dec
or
pop
add
pop
andl
push
dec
lods
pusha
xchg
push
out
dec
loopne
adc
iret
sub
xchg
subb
sbb
xlat
push
movsl
into
add
fldt
and
movsb
and
cltd
insb
sbb
jmp
inc
mov
jno
adc
sub
stos
aaa
mov
aam
data16
enter
sbbl
cmp
bound
jb
push
mov
xor
sub
mov
das
push
xor
add
loop
cmp
iret
out
xchg
rcrb
xor
xchg
in
and
push
lods
mov
add
add
adc
adc
jmp
mov
data16
xor
std
or
movsb
mov
and
and
jmp
push
pop
jno
xchg
xor
xchg
out
push
push
gs
les
jo
jae
cltd
mov
lock
popf
jo
clc
mov
push
pop
loopne
pop
pop
fadds
ljmp
icebp
enter
dec
add
std
xchg
popa
adcl
stos
xchg
out
loopne
push
repnz
clc
jo
and
inc
call
mov
out
push
shrl
int3
loopne
inc
jo
cmp
cmp
and
icebp
and
add
xor
cltd
push
xchg
pop
dec
pusha
andl
adc
popa
adc
loop
ret
sub
adc
fsts
add
aam
gs
arpl
inc
orl
cmc
xchg
lods
pop
popw
and
shl
cmp
mov
dec
inc
mov
aaa
add
xor
subb
xchg
iret
push
ljmp
dec
jo
xor
dec
mov
mov
cmp
and
divl
popa
dec
pop
dec
andb
dec
lea
mov
outsl
mov
orl
and
mov
add
leave
popw
jp
cmp
loop
push
movsl
cld
mov
popf
in
sbb
cmpsb
dec
mov
mull
movsl
xchg
xor
xor
cmp
ja
call
nop
jmp
rorl
fsub
cmp
mov
aas
lcall
call
je
and
iret
adc
jmp
and
shl
fnstenv
xchg
xor
add
and
stos
cli
add
and
add
loopne
jp
adc
scas
xorb
in
nop
jbe
mov
mov
dec
loop
add
lret
mov
out
add
mov
mov
xchg
cmp
mov
add
in
cmp
add
cwtl
mov
jno
mov
inc
test
pop
cmpl
push
gs
push
dec
xchg
popa
mov
pop
loope
fsubrl
sahf
sbb
inc
insb
xorl
and
mov
fldcw
add
call
or
push
cmp
sbb
movsb
hlt
sub
repz
pop
push
inc
push
movsb
add
jecxz
iret
orl
add
scas
arpl
xchg
dec
shll
jmp
sbb
lock
dec
ret
xchg
jno
jmp
mov
push
int3
and
mov
clc
sarl
data16
jno
push
gs
mov
test
test
sbb
cmc
ret
ds
loopne
pop
mov
jo
jbe
dec
cmpb
mov
imul
xrelease
cmpsl
and
adcl
das
and
imul
adcb
insb
mov
xchg
mov
inc
data16
dec
test
insb
add
ret
loopne
mov
hlt
jmp
in
mov
mov
xchg
jmp
xchg
and
in
add
std
xor
or
pop
fsubl
xor
push
inc
outsl
cmp
dec
pop
and
call
push
jns
mov
xchg
mov
aam
mov
arpl
xor
je
mov
imul
fistpll
xchg
icebp
push
fildl
jl
fs
addb
cmp
out
ja
xchg
insb
add
popf
outsl
js
jne
mov
mov
fwait
loope
and
add
movb
jmp
xchg
movsb
jp
ret
test
add
rcl
push
mov
xor
lret
pop
mov
loop
fiadds
inc
ret
cmp
movsb
mov
and
xchg
or
mov
and
test
adc
shrb
scas
repz
xchg
jb
pop
xchg
and
sti
jno
and
pop
cmp
imul
push
xor
mov
dec
lods
sbb
popl
shr
mov
pop
ret
mov
rolb
cmp
rorb
and
add
push
inc
and
add
out
mov
fsubrp
mov
inc
cmp
mov
inc
jmp
loopne
mov
sbbl
negl
jb
sbb
insb
dec
jnp
loop
das
pop
fstl
inc
add
pusha
xchg
jo
fldt
mov
pop
dec
stos
rcrb
inc
cmpl
aas
push
or
cmp
adc
test
push
inc
dec
jno
in
xchg
inc
sysexit
movsb
cld
mov
popa
adc
cmp
add
xchg
data16
mov
call
das
and
loope
mov
pusha
jecxz
fwait
in
sub
icebp
jmp
pop
jo
pop
repz
push
dec
add
xlat
jg
sub
insb
adc
mov
jl
insl
cmc
push
jmp
jo
fcmovb
inc
mov
sahf
jns
out
outsb
mov
fsubrs
cmp
or
add
adc
xchg
ret
mov
call
out
and
mov
or
loop
and
push
dec
inc
out
inc
pop
cltd
data16
mov
out
jb
movb
jmp
clc
rolb
add
cmpsl
mov
test
or
pop
test
out
xor
pop
mov
adc
and
mov
rcr
and
pop
inc
xchg
int
popa
push
paddq
ljmp
inc
adc
pop
inc
sbb
ja
mov
insl
jl
and
mov
adc
pop
sub
mov
xor
mov
movsb
bound
aam
and
rorb
xor
test
iret
movsb
int
arpl
and
out
jmp
mov
jo
mov
ja
sbb
sub
mov
adc
pop
loopne
and
scas
push
push
sbb
or
pop
leave
rclb
sbb
call
sub
int3
ja
loopne
jmp
ljmp
nop
scas
add
push
dec
mov
add
add
dec
xlat
cld
insl
pop
repnz
ja
push
jne
rclb
shlb
testl
adc
inc
fistps
add
lods
and
inc
mov
popf
and
xor
nop
call
xor
cmp
xorl
imul
xchg
mov
adc
jmp
pop
pop
ret
mov
shlb
adc
fwait
stos
sbb
push
imul
arpl
insb
dec
in
movsl
mov
add
inc
js
sub
sbb
call
out
jge
roll
cmpsl
inc
inc
lea
sub
data16
jle
fdivrl
pushf
hlt
xchg
add
add
fwait
int3
jle
les
add
nop
sub
arpl
lock
dec
or
inc
movsl
orl
addr16
cltd
mov
inc
jno
add
rol
leave
jae
pop
mov
arpl
sarb
push
test
lea
xor
inc
xorb
sahf
loope
imul
inc
decl
repz
test
fbld
loopne
xchg
arpl
imul
je
fsts
dec
sti
push
sbb
addr16
hlt
and
testl
shll
fwait
pop
scas
inc
mov
insb
mov
jno
mov
and
mov
add
adc
add
jmp
hlt
ret
xor
sbb
call
call
inc
ror
pusha
mov
mov
popa
movsl
das
mov
ja
inc
pop
lret
xchg
jae
inc
inc
mov
push
jns
inc
and
in
xor
adc
stc
push
fisubrl
inc
mov
movsb
lock
add
and
add
nop
sub
popa
mov
inc
mov
jae
cmc
sbb
xchg
inc
xchg
cmp
fidivrl
push
and
jb
in
push
add
shl
out
flds
out
dec
add
shrl
mov
enter
arpl
in
xchg
push
jmp
fs
popf
and
addb
xor
dec
data16
sub
daa
adcl
lods
gs
adc
sub
movsb
and
dec
aam
jge
and
in
jmp
and
mov
loopne
mov
arpl
adc
mov
xchg
mov
insb
repz
mov
jnp
inc
add
and
push
pop
pop
and
cli
stos
sub
je
mov
xchg
lock
push
push
loopne
adcb
jle
xchg
and
das
lock
adc
xor
jb
and
fs
mov
mov
adc
and
jno
mov
js
mov
sub
andb
and
adc
sbb
test
push
inc
xor
mov
mov
add
subl
mov
sub
ret
xchg
inc
mov
fmull
xchg
cmp
jno
loopne
jmp
ss
loopne
push
jo
sti
xchg
jb
outsl
and
jge
jmp
xor
shlb
cmp
mov
sbb
es
sti
adcb
es
dec
rclb
cmpsb
jae
pusha
fwait
and
push
sbb
mov
inc
sub
or
stos
adc
into
dec
mov
inc
hlt
xor
mov
fcmovnb
imul
dec
test
jo
jae
les
ds
shl
mov
jbe
xchg
push
inc
sbbl
dec
loopne
loope
scas
icebp
jecxz
movsb
cmp
add
jne
enter
test
arpl
adc
cltd
xchg
ja
lods
popf
pusha
nop
xchg
ss
add
out
outsl
cwtl
mov
call
push
out
aad
arpl
orl
sub
andl
pop
and
xchg
jle
and
jne
lea
inc
orl
insl
dec
mov
jnp
add
aas
sub
dec
out
popa
sbb
mov
insb
mov
rolb
adc
xor
jge
add
clc
inc
vpmuludq
push
in
jo
gs
add
dec
shrl
xchg
imul
mov
outsb
pop
rol
mov
dec
mov
cmp
jp
mov
mov
popa
mov
in
lock
bound
hlt
push
gs
ret
mov
inc
ret
mov
mov
test
notl
push
and
mov
loop
xor
roll
push
sbb
scas
sbb
pop
jno
xchg
and
pop
sarl
jb
sahf
js
adc
push
ret
xchg
adc
xor
cmpl
popa
aam
or
and
mov
cwtl
shrl
insl
stos
dec
mov
andl
mov
xor
jg
and
inc
data16
sbb
imul
sti
jne
adc
or
sub
pop
adc
inc
dec
lods
shl
out
sbbl
repnz
mov
and
pop
sub
or
jnp
popa
mov
cmp
out
add
xchg
pop
arpl
call
mov
lods
and
inc
jns
mov
xchg
loope
into
jne
mov
out
jno
push
xchg
push
idivl
pop
xor
mov
loopne
cmp
inc
inc
das
push
push
dec
sbb
adc
fdivrs
dec
shll
push
cmp
cmp
in
lods
mov
dec
xor
adc
insb
movsb
mov
mov
and
sub
pop
shll
jmp
in
stos
loope
popa
lock
dec
xor
sbb
push
jnp
dec
cmp
outsb
insb
xchg
ret
sub
xor
mov
fbstp
mov
mov
mov
bound
arpl
mov
mov
xor
imul
test
mov
imul
xor
mov
add
jb
rcrl
jmp
loopne
and
mov
loopne
loop
cmp
push
sbb
push
mov
add
fs
mull
pop
push
dec
ret
xor
inc
push
imul
loopne
and
cmc
add
and
or
cmc
adc
inc
testb
repnz
push
add
loop
fsubl
out
mov
loope
daa
xor
cmpsb
loope
add
add
pop
xlat
pusha
jl
push
or
xor
and
xchg
stos
xor
inc
rol
push
ret
pop
aas
aas
pop
rol
mov
mov
and
mov
fistps
push
mov
fcoml
mov
sbb
andl
and
lods
dec
mov
call
and
fistl
lret
adc
popf
fsubl
pop
insb
jle
push
clc
sub
sub
mull
in
jecxz
mov
or
jmp
jbe
or
dec
mov
loop
add
add
pushf
stos
mov
inc
fsub
add
mov
jge
sbb
ja
xchg
adc
in
call
xchg
mov
popa
and
or
push
adc
mulb
mov
push
jae
unpckhps
cmp
mov
popl
fdivl
repz
fimuls
loopne
jbe
fs
inc
sbb
hlt
sti
adc
addl
inc
mov
lods
das
mov
and
std
xchg
sbb
or
loope
aaa
and
push
adc
insb
add
mov
mov
inc
xchg
jno
idivl
jge
ss
scas
mov
add
mov
add
mov
sbbb
jnp
jg
call
clc
call
mov
push
je
pop
inc
repz
das
sbb
mov
and
xchg
shll
shll
sub
popf
jae
loop
cmp
cli
lock
cmp
xor
je
in
ret
popf
push
js
pop
movsb
js
xor
push
sub
repnz
xor
inc
dec
iret
sbb
ret
mov
ret
cltd
sub
and
lea
push
pushf
add
dec
inc
and
icebp
adc
inc
enter
loopw
dec
and
jge
pop
jp
loopne
jle
mov
mov
notl
fiadds
mov
sti
std
loope
nop
jmp
adc
scas
mov
enter
mov
mov
ret
mov
jo
mov
push
sub
xchg
jo
sub
push
daa
mov
inc
xchg
ret
sahf
push
mov
jmp
inc
lcall
cmp
inc
push
and
mov
xor
jns
fldt
ret
movsb
inc
add
sti
jecxz
and
cmp
and
sub
or
and
fisubrl
xorb
movb
push
mov
jecxz
jge
inc
cli
or
loope
jmp
iret
dec
add
nop
inc
dec
roll
cmpsb
mov
mov
movsl
arpl
jae
mov
gs
ret
gs
andl
inc
add
insl
inc
hlt
lock
loop
inc
cwtl
stc
add
sbb
cmc
roll
lock
mov
sbb
out
pop
sbb
outsl
popf
jno
or
sbb
push
arpl
push
xchg
and
mov
add
xchg
and
call
sub
imul
and
xchg
jge
iret
pop
add
jbe
ret
cmp
jge
add
loop
push
cmp
and
subl
icebp
sahf
stos
loope
adc
mov
shlb
xor
lock
xor
inc
mov
jne
hlt
push
daa
adc
mov
dec
inc
cmp
int
lock
push
push
adc
fcompl
ja
xor
shr
and
fsubrs
shlb
clc
sbb
inc
daa
xchg
jo
adc
pop
or
xlat
clc
loopne
rcll
mov
sub
addb
cmp
cmp
dec
push
out
iret
and
icebp
fistpll
cmp
adc
or
fcompl
sub
out
jl
fadds
subb
into
add
enter
mov
jecxz
xorl
dec
mov
ret
inc
and
leave
insb
push
push
in
jmp
addr16
aam
push
xor
add
je
ds
xor
sub
cwtl
xor
xor
or
fsts
les
mov
push
inc
aam
popw
int
fwait
mov
sub
push
inc
jmp
testl
fisttps
enter
xchg
push
push
icebp
inc
je
xchg
leave
mov
out
test
cwtl
fmull
and
loopne
inc
insb
fildll
and
and
push
pop
push
ret
sbb
and
psadbw
and
xor
insl
dec
enter
xchg
push
call
mov
dec
fidivs
push
gs
cli
pop
adc
fs
fsubrs
fs
pop
fnop
shrb
fsubrs
xchg
jecxz
add
xchg
lods
jmp
inc
jnp
pop
jecxz
jo
jo
mov
jge
cltd
in
inc
stos
lea
xchg
imulb
mov
xor
arpl
xor
jmp
add
jecxz
mov
in
insb
outsl
mov
ret
xorb
jb
aas
or
or
popa
shll
dec
inc
or
mov
out
adc
gs
les
push
mov
add
xor
lret
imul
pop
push
out
mov
or
mov
fcompl
add
cltd
inc
mov
inc
jo
mov
and
jno
push
push
stos
int3
gs
test
pop
repnz
je
sub
mov
jg
scas
push
or
bound
or
cs
subb
div
test
mov
ffreep
push
bound
and
mov
subl
daa
xchg
inc
rep
inc
movl
inc
add
dec
shlb
xor
daa
andb
xchg
in
mov
push
data16
and
sbb
je
push
mov
ret
push
xor
sbb
ljmp
inc
cmp
mov
shlb
popf
mov
or
ret
inc
push
faddl
and
fcomi
shll
jne
and
movsb
outsl
ljmp
add
loope
rorb
mov
int3
fcoml
xchg
cmp
mov
mov
adc
pop
pusha
mov
adc
push
inc
mov
mov
aaa
outsb
jne
xor
xchg
je
mov
bound
das
adc
dec
inc
sub
icebp
and
lods
mov
roll
inc
iret
sbb
mov
iret
xorb
shll
inc
add
sbb
lods
bound
pop
pop
push
and
xchg
push
mov
fsts
mov
in
xchg
mov
push
jecxz
jbe
inc
xchg
loopne
jmp
mov
je
adc
icebp
std
inc
arpl
popw
sbb
xchg
push
inc
jno
push
lock
ljmp
stc
pop
xchg
lea
inc
and
nop
push
push
push
sahf
dec
push
cld
outsl
push
std
add
jle
mov
mov
mov
arpl
shlb
and
or
adc
enter
inc
mov
ds
mov
mov
roll
mov
jmp
std
jo
jne
mov
ljmp
call
ret
sbbl
int3
push
shlb
bound
loop
jne
movsb
sub
xchg
and
and
je
xor
or
mov
shrl
adc
lods
pop
push
mov
sbb
idiv
pop
or
pop
aam
cmp
loopne
xchg
jbe
ja
les
arpl
or
in
add
enter
fnsave
and
repz
test
xor
inc
inc
mov
sbb
jmp
mov
out
fidivrl
jns
stc
cmp
rorb
xchg
call
xlat
sbb
add
call
inc
stc
add
add
js
arpl
int
cmp
adc
push
fs
pop
inc
add
mov
mov
mov
in
popa
mov
xchg
sub
iret
in
mov
ja
add
out
outsb
and
inc
add
add
repz
and
xchg
mov
or
dec
shrl
gs
into
xchg
and
loopne
xchg
call
sub
or
push
mov
xchg
arpl
adc
loopne
sub
push
push
xor
test
rol
cmpsl
repnz
insl
xchg
jno
add
roll
fsub
sbb
rcr
loopne
xchg
dec
mov
ret
pop
arpl
dec
sbb
adc
mov
lret
mov
adc
jo
or
cmp
addr16
jle
pusha
fwait
push
mov
add
aam
insb
mov
add
sbb
mov
inc
shll
insb
and
ret
adc
jecxz
jnp
imul
add
adcl
popa
sub
arpl
mov
jns
les
outsl
adc
mov
in
aam
xorb
sub
lods
pusha
cmpl
cltd
fldcw
mov
movsl
push
pop
sub
les
pusha
stos
test
sub
dec
mov
mov
icebp
jae
add
fistl
jae
mov
mov
push
shrl
add
jno
andb
mov
dec
jns
mov
dec
stos
rolb
movsl
ret
cmpsb
daa
xor
sub
mov
add
cli
add
jb
iret
jno
ror
pusha
jmp
pop
icebp
mov
lods
pushf
cmp
xlat
in
adc
loopne
pop
adc
add
xchg
subl
add
fcoml
jo
leave
dec
loope
outsl
dec
shlb
adc
ret
add
jne
inc
sbb
mov
xor
js
push
or
add
fstpt
or
shll
push
js
dec
jl
sub
shl
pop
inc
inc
loopne
dec
out
sbb
jb
hlt
mov
pop
inc
popa
aaa
lods
and
cmp
aas
pop
into
popa
inc
stc
cwtl
sbb
inc
pop
and
out
pop
sub
xchg
and
sahf
add
fsubp
mov
jmp
fwait
das
aad
test
push
add
cmp
in
lds
mov
sub
imul
adc
xor
jae
adc
cmp
call
or
cmp
je
call
ret
addr16
je
lds
mov
ret
pop
dec
mov
je
jge
add
and
dec
xor
mov
inc
stc
sbb
inc
adc
divl
mov
and
popa
fistps
ret
mov
cltd
mov
bound
mov
dec
popf
movsb
addl
dec
ret
mov
stos
lock
push
cmc
inc
jge
and
xchg
dec
roll
add
pop
push
jg
adc
push
test
sbb
push
mov
js
push
cmp
xchg
loope
mov
cs
sahf
inc
xchg
cli
sahf
jl
push
int3
lods
push
inc
or
cmp
xchg
adc
popf
cmp
sub
adc
xor
push
mov
clc
int
loopne
popa
hlt
jmp
loopne
adcb
and
stos
adc
sbb
sti
rclb
scas
jmp
xor
cmp
mov
arpl
mov
ret
inc
inc
shrl
out
jo
ret
and
adc
divl
jb
imul
movsl
sbb
ret
inc
dec
test
cmp
mov
xchg
iret
mov
xor
mov
outsl
sub
mov
std
js
addb
pushf
fimuls
cmc
roll
cmp
popf
lds
test
in
sahf
insb
repz
std
add
add
pop
cmp
sbb
pop
and
loop
push
adc
sub
fildll
dec
adc
mov
rcll
inc
arpl
in
sub
fs
test
pop
mov
sbb
sarl
inc
loopne
sub
xchg
neg
sbb
jne
mov
int
cmp
sub
mov
jo
andb
inc
xchg
add
mov
adc
cmp
ljmp
daa
jecxz
adc
xchg
adc
loopne
out
lds
lods
loope
and
xor
lock
fisubrl
xor
lahf
and
xchg
sbb
lret
je
push
xchg
inc
mov
push
popa
push
xchg
sub
in
sbb
shl
cmp
mov
cld
loopne
outsl
scas
add
jmp
and
pushf
int
nop
jg
add
pop
mov
dec
adc
loop
xor
lods
dec
jae
push
je
xchg
cltd
movl
loope
push
inc
scas
add
idivl
push
aad
mov
jle
sarb
mull
sar
nop
push
arpl
mov
adc
jae
mov
push
mov
jae
xchg
fisubs
jl
adc
fstl
jecxz
shlb
leave
push
xchg
aad
daa
add
or
pop
ljmp
pop
add
out
jo
test
ret
and
inc
jno
and
fs
aam
repz
mov
and
or
es
pushw
arpl
lods
mov
push
and
jecxz
jo
xchg
pop
mov
and
ret
or
mov
ljmp
data16
repz
mov
loope
je
inc
fcmove
add
hlt
inc
movl
pop
jl
inc
jle
xchg
sbb
shr
test
stc
in
push
mov
stos
ud0
popa
stos
loopne
mov
nop
aam
loopne
and
jmp
leave
xor
lret
js
movsl
jo
mov
mov
inc
mov
in
pop
pop
sahf
sbb
js
test
es
iret
adc
in
fnstenv
das
es
les
xor
data16
pusha
fwait
negl
adc
and
mov
lock
push
inc
pop
jo
push
gs
lret
fsubs
cmp
lret
loopne
add
xor
sbb
das
loopne
and
cmpsb
adc
fldl
das
add
sub
sbbl
push
inc
ds
cmp
mov
gs
add
incl
fldt
xor
pop
scas
loope
and
test
push
jo
cmp
loopne
out
jb
add
aad
mov
cmp
adc
inc
movsb
cmpl
sub
loopne
fdivrs
jns
inc
ret
loopne
fildl
imul
add
xchg
push
insl
ret
ret
inc
push
std
inc
out
jle
movsb
popa
or
sbb
pop
mov
fdiv
adc
ss
insl
cld
xorl
xchg
mov
into
sahf
std
push
mov
adc
jmp
roll
sbb
iret
aaa
test
out
lcall
mov
loopne
stos
nop
jle
xor
loopne
mov
jecxz,pt
outsb
pop
inc
lret
mov
ja
inc
mov
data16
push
stc
dec
fsubrs
push
loopne
or
pop
sub
aam
dec
cmp
call
mov
lods
cmp
js
mov
jmp
push
xchg
fmuls
es
jecxz
test
xchg
jb
aas
sub
iret
mov
loop
dec
mov
inc
jns
xor
add
inc
inc
bound
cmpsb
mov
inc
add
popf
jb
popa
stos
xchg
dec
dec
mov
xchg
loopne
and
jge
mov
and
repz
pop
repnz
mov
icebp
inc
or
call
jl
xchg
mov
addr16
mov
inc
mov
or
loopne
ss
je
pop
jmp
mov
mov
xlat
jmp
xchg
pop
out
inc
inc
mov
jo
cs
mov
mov
xchg
or
add
aas
pop
inc
add
sti
and
loopne
inc
loope
pop
push
and
add
jns
fs
sub
repz
or
sbb
xchg
mov
shl
fisttps
xor
xchg
dec
xor
js
rcll
sub
cmp
xchg
cmp
jecxz
push
and
popf
cltd
movsb
jle
add
add
xlat
xchg
push
test
push
and
cmpsl
xor
inc
mov
inc
test
lds
cmp
out
ret
cs
inc
out
inc
jb
or
stos
jmp
push
jae
pop
loope
jge
imul
mov
sti
filds
bound
inc
inc
xor
cmc
scas
jno
popl
in
and
scas
pusha
sub
sub
and
jecxz
push
icebp
pusha
aaa
jno
cmc
push
or
outsb
xlat
and
xor
loopne
jg
sbb
je
imul
fldcw
ret
jo
sbb
mov
push
mov
cmp
mov
aam
fmull
hlt
and
jecxz
and
bound
pop
inc
rol
xchg
imul
lret
adc
push
mov
data16
rorl
out
mov
dec
jmp
lock
xchg
cwtl
mov
sbb
adc
sbb
int3
roll
inc
xor
iret
popf
movsl
and
aaa
add
mov
xor
bound
aam
roll
and
lock
in
loopne
mov
mov
lea
push
dec
sti
sub
mov
adc
pop
and
enter
loop
inc
test
inc
add
scas
mov
cwtl
dec
arpl
mov
imul
aas
loop,pt
bound
das
sub
and
xchg
pushf
lods
test
shrb
test
jmp
cmp
nop
loopne
loope
cmp
and
dec
inc
mov
jns
insb
lret
popf
sbb
inc
cmc
lods
jl
adc
in
push
ret
pop
fldt
testb
insb
out
pop
outsl
sti
mov
stos
push
jno
or
jo
imul
push
cmpsl
ret
inc
xchg
adc
ljmp
jo
fcom
popa
andl
push
test
cmp
mov
loope
sbb
movsb
xor
push
frstor
mov
xor
popa
mov
bound
or
ja
push
jmp
xlat
bound
xchg
dec
jmp
std
movsb
and
dec
cwtl
loopne
cld
hlt
subb
call
ffree
jb
add
leave
js
gs
adc
add
popa
clc
mov
mov
rcrb
stc
push
adc
loopne
mov
mov
mov
push
ret
pop
mov
sub
loope
aas
inc
mov
movsb
shll
mov
cmpl
loopne
cmpsl
inc
test
insb
faddl
add
insb
insb
imul
jge
and
call
mov
dec
mov
lcall
jnp
mov
aam
mov
cmp
in
and
bound
jl
loopne
jno
notl
mov
jno
out
sub
and
popa
jo
movzbl
arpl
popl
push
mov
jmp
push
jp
push
arpl
mov
mov
mov
hlt
insb
cmp
push
xor
icebp
push
fstpl
popf
xor
mov
sbb
mov
jmp
jae
pop
popa
mov
loop
jae
inc
lea
xchg
and
xlat
insb
aaa
pop
cli
dec
lock
cmpsb
shlb
jne
jb
push
popa
mov
data16
xchg
loopne
dec
sbb
mov
les
mov
ss
bound
test
adc
add
movsl
inc
loope
jns
fwait
mov
pop
and
mov
popa
shll
mov
xchg
icebp
jl
pop
cltd
sub
mov
test
and
loop
mov
jnp
inc
test
adc
lea
enter
inc
pop
ficomps
jno
out
push
mov
mov
pusha
xchg
iret
es
pushf
mov
je
push
hlt
int3
mov
mov
xorb
xor
inc
cmp
sbb
mov
mov
call
push
mov
insl
stos
xor
add
fwait
nop
xchg
dec
inc
loope
cmp
push
fsub
adcl
rclb
mov
call
repz
pop
add
or
add
popa
pop
popa
pop
cmpsl
dec
roll
mov
imul
push
adcl
ret
popa
stos
dec
cmc
inc
in
xor
xor
mov
sbb
pop
push
mov
dec
loopne
cmp
call
rol
pushf
cmpsb
cmpl
xchg
sbb
and
pop
ret
ret
mov
popw
insb
pop
push
jnp
and
sti
imul
add
aaa
ljmp
and
fld
pop
gs
and
inc
push
xchg
push
fs
icebp
adc
mov
mov
jae
out
popa
dec
xlat
movsb
js
out
push
jmp
in
data16
sti
xchg
push
inc
gs
mov
adc
add
je
add
mov
ficoml
xor
add
aas
ret
xchg
fwait
andb
mov
aad
mov
adc
mov
adc
xchg
mov
pushl
repnz
loopne
shlb
ljmp
mov
inc
add
fs
aaa
lcall
mov
lret
fldcw
ret
loopne
push
divb
inc
mov
stc
popf
cmp
push
push
int3
ljmp
push
outsl
push
mov
in
and
int3
jno
sbb
xbegin
jne
movsb
add
jecxz
rcll
out
movsb
jo
orl
pop
push
ret
pusha
fwait
inc
fdivrs
data16
fsubrl
mov
mov
popa
mov
add
ror
lock
icebp
sub
add
inc
mov
scas
mov
testl
pushf
mov
jl
movsb
mov
lds
mov
movsl
pop
and
imul
dec
or
mov
push
pop
mov
and
sbb
call
push
loop
and
fwait
lods
inc
xor
and
mov
repnz
jp
and
inc
and
inc
cmpsl
push
cmp
dec
dec
jb
cmp
icebp
dec
mov
jb
nop
roll
fldl
adc
mov
lea
inc
xchg
enter
cmp
adc
jmp
insb
gs
test
jmp
pop
loopne
mov
adc
xor
loop
xor
ffree
jo
mov
inc
int
loopne
fsubs
mov
pushf
xorb
ss
jae
repnz
nop
mov
mov
cmp
or
xchg
push
and
inc
leave
dec
mov
dec
pushf
and
leave
mov
fwait
xor
sub
sbb
sub
add
add
adc
popa
xchg
xchg
in
xor
loope
xchg
mov
pop
lcall
xchg
pop
mov
and
out
test
sahf
adcl
clc
cmc
dec
inc
mov
jbe
push
rcl
mov
mov
fisttpl
loop
ffreep
stc
rolb
push
inc
xor
loope
add
dec
subl
and
call
push
clc
xlat
mov
push
inc
jl
pop
repnz
mov
inc
sub
dec
aaa
popa
mov
xchg
sub
out
js
push
add
add
scas
ljmp
pop
into
or
dec
and
cmp
adc
nop
push
insl
jbe
jl
lea
shlb
add
add
lds
out
xor
adc
aas
shlb
jl
mov
add
xlat
jge
inc
out
adc
jl
push
cmp
inc
in
insl
and
xchg
pop
rolb
sub
lcall
mov
xlat
movsb
hlt
cmp
loopne
insl
fwait
jae
fistps
sub
loop
rorl
inc
test
hlt
jo
jecxz
and
leave
dec
cltd
inc
push
mov
jo
dec
cwtl
cltd
daa
je
mov
popa
mov
loop
and
inc
aaa
add
push
jmp
loopne
mov
rorl
mov
dec
sub
sub
add
cmp
fsubs
pop
out
mov
xor
add
dec
xchg
inc
pushf
push
mov
pop
test
sub
or
aaa
icebp
aam
mov
sti
inc
inc
mov
sub
adc
xchg
repz
fucom
jae
mov
call
loope
push
jmp
add
sbb
shl
lock
xchg
jmp
dec
pop
pop
mov
and
push
stos
push
movsb
inc
mov
jmp
addr16
fwait
jno
in
jmp
adc
mov
adcl
div
mov
mov
jmp
and
mov
xor
jg
jb
inc
pop
rol
sub
imul
adcl
sbb
clc
pop
loope
jne
add
inc
jae
jb
or
pop
ljmp
jg
sub
loope
es
sub
jp
and
ljmp
xchg
mov
xchg
push
call
divb
lcall
inc
in
sub
js
dec
mov
jo
fsubr
push
jae
int
hlt
xchg
xchg
jmp
mov
and
out
sahf
lock
push
aam
inc
rcll
xchg
bnd
in
adc
notl
sub
je
dec
mov
adc
pop
js
sbbl
stc
add
inc
dec
dec
xchg
loope
ja
pop
mov
lea
and
repz
adc
into
pusha
mov
jo
mov
iret
sahf
xchg
jno
ret
and
in
nop
outsb
mov
cmp
mov
mov
mov
push
cli
inc
call
or
aas
insl
dec
lods
and
sub
mov
push
adc
rcrl
lret
in
and
xlat
sbb
jns
mov
jnp
mov
loopne
in
and
xchg
sbb
jne
call
inc
mov
mov
xchg
mov
mov
call
inc
in
fldt
gs
push
movsl
je
fiaddl
loopne
out
jno
icebp
div
nop
shlb
or
mov
data16
nop
add
movsb
jg
js
and
je
sub
sbbl
cmp
push
and
adc
hlt
mov
or
push
jo
ss
scas
adc
add
ss
push
gs
sarl
jo
pop
mov
push
jo
xchg
les
in
mov
fadds
aad
jmp
loopne
jo
arpl
arpl
add
xor
xlat
cltd
inc
pop
jp
in
xchg
out
loopne
cli
mov
mov
loopne
inc
mov
subl
jno
and
xor
mov
dec
cmp
mov
xchg
dec
arpl
mov
jno
movl
mov
fcomps
movsl
je
add
pop
filds
and
pop
xchg
outsb
adc
jg
call
adc
movb
arpl
xchg
negl
jle
mov
dec
dec
jo
fldenv
leave
mov
neg
and
cmp
mov
int3
in
outsl
push
dec
mov
push
insb
xchg
mov
dec
aam
outsb
loop
pop
mov
jecxz
cmpsl
inc
lret
iret
pop
xchg
in
dec
and
movsl
xchg
stc
cmp
add
mov
outsb
iret
popw
cmpl
fdivrs
add
leave
nop
pop
cmc
jo
mov
in
mov
xorb
ret
push
and
pop
in
gs
xlat
clc
gs
and
mov
fildl
jae
test
gs
aas
adc
mov
fwait
iret
dec
and
mov
movsb
out
repnz
cwtl
add
mov
add
stos
jecxz
lds
add
scas
xchg
les
jno
loopne
in
je
dec
add
mull
inc
dec
repz
push
dec
icebp
xchg
sub
add
mov
bound
popa
xchg
addl
mov
and
jo
js
mov
lea
loope
aaa
outsl
je
inc
jnp
mov
jb
cld
gs
push
call
mov
adc
sbb
shl
jmp
or
rolb
adc
loope
pop
dec
fs
ret
xchg
or
hlt
mov
jno
fwait
or
push
sbb
pushf
and
jg
test
add
jg
inc
xchg
and
or
loopne
in
popa
xlat
dec
ds
out
iret
adc
daa
sub
shlb
adc
inc
sub
xchg
call
xchg
and
pop
and
insl
push
mov
jbe
jno
jo
dec
xchg
sbb
adc
inc
inc
jge
sub
nop
js
jae
fs
imul
push
pop
and
adc
jo
cmc
pop
rorb
popa
inc
add
inc
popf
dec
add
bound
jno
mov
jns
cmpsl
in
gs
xor
cwtl
addr16
rcrl
mov
and
jecxz
dec
mov
sbb
jae
or
bound
roll
dec
sub
mov
sbb
xorb
mov
sbb
add
adc
call
jle
leave
stc
arpl
jge
mov
int
lret
add
loopne
in
jp
add
mov
jecxz
add
inc
pop
add
and
int3
stc
bound
xor
dec
add
jle
out
inc
sbb
lock
inc
popf
push
leave
mov
add
addr16
add
mov
xor
ret
data16
xor
fsubs
data16
jl
call
add
jae
ljmp
ret
pop
jbe
imul
mov
inc
imul
shlb
mov
addl
or
sub
inc
pop
insl
fwait
push
jae
cmp
push
call
jmp
lods
xchg
jae
int
add
mov
enter
push
cmp
push
loope
rcrb
inc
jl
and
xchg
xchg
test
arpl
push
fdivl
mov
jno
mov
js
adc
icebp
cmpsb
jl
xchg
xchg
mov
inc
cmp
data16
daa
cmpsl
xchg
mov
movsl
pop
sub
jae
inc
mov
fwait
adc
and
push
dec
add
loope
xor
test
jecxz
mov
add
jmp
jmp
lret
je
sub
inc
add
data16
xchg
push
push
pushl
xor
nop
jne
adc
jne
xchg
push
or
outsl
icebp
jl
push
sub
loopne
inc
mov
and
lock
aaa
cmpsl
rol
ljmp
jp
or
mov
push
out
pop
and
lods
movsb
cmp
mov
jmp
movsb
lock
test
add
shl
fldt
nop
jb
sub
add
dec
imul
and
iret
pop
xor
andl
push
loope
sbb
pop
xchg
pusha
cmpsl
cltd
in
xchg
jo
sbb
insl
pop
sbb
xchg
and
and
mov
add
cmc
or
loop
mov
inc
movsb
push
pop
ret
dec
loope
fiaddl
and
icebp
jno
pop
push
sbb
jno
call
out
pop
movsb
rolb
mov
xorb
arpl
sub
add
mov
inc
in
xor
xchg
inc
aas
pop
cwtl
js
push
loope
push
ljmp
add
in
mov
xchg
sahf
js
mov
xlat
xor
fwait
mov
pop
xchg
xor
or
int3
andb
ret
loopne
push
mov
and
clc
inc
js
cmp
fldt
addr16
iret
push
lods
adc
mov
in
dec
gs
dec
inc
nop
adc
incl
inc
enter
testl
dec
sub
mov
rorl
push
ljmp
mov
ret
lds
cmp
dec
popa
std
movsl
add
andl
imul
adc
add
cltd
fs
outsl
and
jnp
jns
push
inc
sub
mov
stos
jmp
mov
and
add
push
inc
js
mov
shrb
ljmp
inc
fdivr
loop
pop
pop
or
inc
mov
xchg
scas
jmp
loopne
mov
mov
ret
or
inc
push
repnz
pop
mov
mov
pop
mov
iret
into
mov
adc
adc
xor
shrb
popa
int
add
stos
andl
ror
xor
loopne
mov
jg
inc
cmpsl
add
imul
int
xor
ret
dec
shr
add
adc
adc
arpl
or
jb
mov
and
sti
mov
les
shll
dec
lret
mov
fpatan
jge
jmp
loopne
pusha
add
stc
mov
outsb
sub
sub
js
push
sub
nop
cpuid
ret
cmp
test
jns
dec
pop
in
and
call
push
pop
arpl
inc
xchg
jge
lea
lods
clc
aad
inc
call
adc
insl
data16
movl
lods
and
jno
fldt
inc
mov
fwait
loopne
in
out
jmp
loopne
pop
roll
jg
mov
mov
mov
cs
stc
or
popa
jae
pop
inc
xlat
rol
out
push
orl
inc
xor
popf
jne
inc
icebp
mov
add
popa
mov
inc
jb
fucomi
xchg
jo
dec
inc
in
ret
and
lods
mov
inc
mov
rcll
outsl
faddl
sub
jae
js
daa
pop
and
mov
and
and
add
pop
jge
xchg
adc
loop
inc
fimuls
mov
into
push
shll
and
fcompl
jecxz
test
push
mov
cltd
popa
inc
sbb
push
lret
add
dec
xor
inc
sahf
sbb
mov
or
push
sbb
xchg
jmp
fucomip
andl
push
dec
popa
rcrl
dec
jecxz
out
mov
mov
pusha
push
cli
xor
cmc
call
popa
adc
mov
inc
ds
inc
dec
in
ljmp
jle
add
addr16
lods
addr16
mov
jo
cmp
xchg
pop
insl
mov
add
mov
jae
inc
mov
push
sub
jno
inc
sbb
ljmp
xor
into
pusha
stos
sti
mov
cmp
test
mov
aaa
mov
mov
and
push
lea
xlat
insb
fists
addl
jge
sbb
orb
call
loopne
les
dec
push
sbbl
add
and
jae
pop
fwait
pop
pop
push
add
and
pop
popa
mov
push
andb
and
roll
icebp
mov
and
pusha
shr
cmp
sub
popa
lcall
add
hlt
push
mov
loop
mov
push
bound
and
mov
dec
mov
jp
in
cld
inc
call
das
ret
testw
stos
jb
repnz
jbe
mov
mov
xchg
push
inc
sti
int3
repnz
adc
or
cld
or
outsl
loopne
jecxz
sub
xor
repnz
in
ja
fmull
or
inc
adc
fmull
in
popa
ss
xor
daa
sahf
mov
popa
jae
cmpsl
faddl
dec
dec
cmpsl
inc
enter
lret
inc
push
cmp
fldenv
inc
test
xchg
nop
hlt
clc
cmc
mov
mov
mov
xor
and
and
js
mov
cmp
cmp
loopne
mov
mov
add
mov
push
jbe
and
mov
inc
inc
orb
mov
or
rorb
jb
in
data16
pop
das
loopne
pushl
adc
ss
lock
and
inc
sub
cmp
sub
jb
jg
or
jbe
mov
test
inc
and
jno
mov
outsb
jle
dec
adc
rcrl
aaa
jnp
mov
inc
call
push
sti
mov
lea
push
popa
sahf
add
and
pop
lock
fcmovnb
inc
adc
rolw
cmp
and
xchg
lock
mov
imul
repnz
xor
insb
push
pop
test
cld
mov
hlt
loope
add
je
pop
ret
mov
mov
add
hlt
popa
mov
in
cld
or
and
xor
lods
in
ret
jge
and
push
push
popa
jecxz
mov
shr
and
insl
insb
out
push
sub
shrl
call
push
pop
shll
push
jb
mov
cmp
add
and
sbb
inc
loope
notl
loopne
xor
add
cmp
xor
jl
insb
inc
imul
cld
loope
adc
inc
xchg
or
xchg
xchg
loope
or
sbb
inc
push
addr16
rolb
out
inc
outsl
jno
jmp
mov
cmpsl
push
andl
rolb
fcomps
xchg
and
mov
dec
mov
inc
cltd
xorb
xchg
data16
popa
cmp
jo
out
je
push
lahf
dec
jo
rorl
cmp
push
std
ljmp
loop
mov
ltr
mov
or
aam
movsb
mov
and
fistpl
movsb
or
and
movsb
jae
out
pop
inc
in
insb
push
adc
add
push
popf
insb
xchg
outsb
mov
mov
sbbb
sti
sarb
mov
push
out
les
cmc
mov
cmp
inc
outsl
xchg
jo
lods
pop
xor
shlb
and
scas
dec
xchg
ret
and
lds
sar
xor
add
stos
mov
into
xchg
add
mov
ss
call
into
sub
stos
jo
pop
lods
adc
rclb
inc
mov
scas
shlb
push
jg
cmp
loopne
retw
xchg
mov
sbb
pop
and
mov
js
mov
aam
xorl
cwtl
imul
push
sbb
xor
mov
xor
roll
popa
add
sahf
push
arpl
test
sbb
and
push
sar
pop
xor
jp
loope
xchg
inc
inc
adc
incb
testb
insl
fsubs
push
add
inc
sub
dec
pop
jmp
loopne
jle
xor
adc
aaa
inc
loopne
test
ret
loopne
sar
and
and
loop
dec
sarl
adc
call
jmp
out
push
mov
dec
push
hlt
iret
sarb
dec
stc
jnp
aas
mov
mov
loopne
jge
addr16
ror
ret
mov
mov
xor
je
imul
pop
je
mov
sbb
aad
and
push
mov
inc
mov
jge
mov
ja
movb
hlt
and
test
pop
adc
push
insb
push
into
inc
mov
and
mov
pop
dec
aas
pop
cmp
movsl
mov
push
fs
push
dec
icebp
loopne
fwait
push
sarl
pop
sub
lods
mov
adc
jno
xor
and
jo
cmp
jno
fists
and
add
jnp
pop
jmp
xor
add
bound
lds
arpl
imul
mov
sub
iret
sahf
mov
popa
ret
sub
mov
andb
arpl
dec
mov
push
addr16
call
jge
lods
loope
xchg
leave
cmc
mov
push
sub
cmp
inc
xlat
jmp
xchg
shll
pop
add
js
jge
sub
repz
inc
out
inc
inc
dec
in
jle
out
fs
jo
jns
rcr
cmc
xor
pop
outsb
jge
pop
lods
adc
loope
inc
sbbl
ret
fsubrs
cmp
sub
arpl
mov
xchg
cmc
pop
inc
xchg
jmp
loope
leave
push
fldenv
stos
xchg
jnp
jnp
dec
fldenv
mov
pusha
mov
adc
jno
xlat
mov
mov
xchg
inc
mov
xlat
or
mov
pusha
fwait
mov
and
stos
sti
lock
in
inc
imul
dec
ficoml
repz
enter
addr16
test
push
loopne
inc
push
mov
ss
loop
jo
pop
mov
jno
pop
and
mov
iret
and
push
lcall
and
mov
add
adc
mov
push
ret
sti
xor
jno
mov
pop
mov
ds
and
fisubl
decb
dec
iret
cmp
cld
jl
loope
data16
cmp
push
sbb
and
aas
imul
daa
jbe
lods
mov
jnp
loope
xor
push
hlt
pop
xlat
loope
dec
cwtl
mov
or
fs
adc
mov
mov
jo
popa
mov
fstpl
sbb
shll
std
lock
jns
mov
and
pop
aam
hlt
faddl
scas
fs
sbb
repnz
dec
ficoms
loope
add
pop
ret
xlat
push
divl
arpl
icebp
cli
add
xchg
push
push
inc
je
lret
aam
jne
movsb
mov
or
mov
and
rol
fs
fdivrs
mov
sub
in
mov
in
fwait
inc
jecxz
add
popf
inc
cmpsl
jp
mov
loope
das
mov
add
xchg
movsb
lret
add
js
test
mov
inc
dec
or
mov
and
pop
orb
adc
jno
sub
adc
lret
inc
es
dec
mov
popa
dec
xchg
inc
push
sub
jae
jo
jecxz
sub
dec
push
mov
cmpsb
jb
mov
pop
xor
rcll
call
cwtl
pop
lock
in
or
pop
jge
sub
xor
outsl
and
and
movsb
jo
mov
ret
loopne
in
fildl
outsb
and
in
mov
loopne
and
mov
shlb
add
fidivrl
repnz
push
sub
and
mov
mov
repz
outsb
inc
lock
and
jnp
lds
dec
and
icebp
hlt
xchg
xchg
pop
sub
mov
pop
push
mov
fidivrl
imul
hlt
add
popa
stos
je
bnd
mov
mov
push
neg
je
loopne
aam
es
dec
mov
sub
and
mov
xchg
test
loope
xor
mov
add
add
cmp
int3
sub
cli
dec
rolb
stos
lods
cmc
shrb
mov
adc
data16
lret
xchg
cwtl
stos
test
xchg
or
outsb
and
adc
push
inc
test
mov
sub
mov
js
inc
or
data16
jo
inc
js
add
cli
and
inc
dec
pop
cld
mov
pop
cld
xlat
mov
bound
loopne
call
inc
adc
rclb
inc
ja
add
adc
inc
mov
and
rorb
mov
daa
jo
jo
loop
and
outsb
mov
or
jo
shll
dec
pop
shr
aad
dec
hlt
mov
xchg
jp
inc
fimull
movsl
pop
ja
cmp
dec
ret
lock
popa
xchg
pop
lods
jmp
loope
mov
sub
insb
addps
sub
fcoml
jmp
gs
mov
inc
xor
stos
or
inc
jae
mov
cwtl
cmp
out
dec
loop
jb
jb
jmp
pop
popa
popf
cmpl
xchg
cs
pop
bound
mov
inc
pop
sti
and
cmp
cld
jge
add
in
sbb
add
cmp
stos
es
repz
mov
and
mov
ret
dec
fwait
mov
mov
pop
xlat
xchg
and
loope
or
shlb
jno
fistpl
jno
cld
loopne
mov
and
jmp
stos
xor
mov
and
push
jns
or
and
hlt
sbb
and
enter
mov
xchg
rolb
jmp
and
inc
iret
jo
out
aaa
in
shll
and
fisubrl
push
mov
inc
dec
notb
dec
fimull
and
dec
adc
cmp
jb
ret
addr16
mov
loopne
ljmp
fildll
in
ljmp
mov
mov
dec
cmpsl
sbb
call
pop
cld
lcall
jmp
cmp
fldcw
imul
and
ficompl
popa
inc
jo
mov
mov
xchg
stos
inc
xlat
je
and
sub
push
sbb
jl
jae
add
and
subl
outsb
sub
fisubrs
inc
call
add
sahf
sbb
addl
cwtl
popa
divl
mov
mov
cmpsb
int
mov
loope
enter
ss
mov
je
mov
push
mov
cmpsl
add
add
loop
xchg
jge
sub
and
jg
or
int
loopne
test
sub
xor
dec
movsl
inc
xlat
xor
jne
scas
add
popf
inc
xchg
fucomi
lds
or
inc
inc
ss
and
stos
test
arpl
clc
inc
xor
push
jo
xchg
pop
gs
xlat
aaa
nop
adc
sbb
popa
jg
cld
jno
bnd
nop
out
popa
cmc
lods
adc
loop
es
inc
out
inc
fnstsw
repz
movsl
pusha
std
sub
aaa
adc
mov
bound
stos
outsb
mov
adc
and
ss
push
or
dec
enter
xor
inc
xchg
xorb
dec
push
lea
jecxz
adcl
mov
subl
fs
mov
adc
push
pop
sarl
lcall
ds
xchg
mov
lock
scas
adc
mov
inc
mov
data16
test
dec
popa
mov
stos
push
mov
add
push
xor
iret
mov
push
inc
sbb
cld
ret
loop
jl
data16
add
xor
and
mov
adc
rcr
inc
iret
pop
cld
mov
adc
ret
inc
lret
add
inc
popa
mov
cmpsl
mov
mov
sti
mov
and
jns
cmp
push
add
add
imul
arpl
inc
movl
sbb
bound
mov
jne
loopne
jl
mov
push
insb
pop
push
adc
adc
pop
sar
gs
test
pop
cmp
push
mov
xor
roll
js
sbb
mov
ja
test
lcall
mov
sbb
rolb
xchg
sub
pop
cmp
sbb
sub
mov
fstpt
mov
and
add
rcrb
mov
sbb
movsl
pop
popa
nop
mov
ret
movsb
ja
add
and
rclb
loope
cmp
sbb
add
roll
mov
inc
loop
addr16
xchg
int3
inc
pushf
jno
ret
mov
cmp
xlat
imul
mov
adc
mov
loopne
cmpsb
mov
inc
pop
arpl
inc
inc
push
xchg
call
or
insb
je
mov
mov
sub
push
mov
bnd
or
pop
cltd
jo
cmp
loopne
jo
add
or
loopne
je
sub
in
pop
test
rclb
jno
stc
dec
mov
fwait
mov
xor
pusha
lock
shll
xchg
gs
add
out
push
les
push
adc
test
ja
push
jle
add
push
iret
push
add
movsl
mov
add
sarb
shrl
jmp
xor
add
sbb
sbbb
fwait
and
mov
nop
xchg
pop
into
andl
mov
pop
lea
lods
js
lds
outsb
mov
add
cmpl
mov
fs
add
pusha
sub
loop
add
popa
mov
jae
pop
pop
popa
sub
add
cwtl
insl
scas
out
outsb
mov
and
sub
add
or
mov
xlat
add
repz
icebp
pusha
fwait
xor
popf
loopne
adc
jmp
cli
scas
jo
jmp
jg
lds
out
inc
data16
inc
pop
cwtl
filds
ds
data16
jnp
xchg
inc
mov
mov
popa
pop
mov
roll
dec
and
sbbb
xor
pop
jns
movsb
jmp
sbbl
cld
mov
dec
loopne
filds
repnz
loopne
es
push
sahf
jbe
imul
inc
sbb
out
and
addb
xor
push
sub
mov
cmp
nop
jbe
scas
and
call
int
jp
add
mov
subb
pop
sti
je
dec
mov
jno
fcmovnu
fmull
repnz
jo
fdiv
popa
sbb
adc
xchg
adcb
es
ss
jo
pop
xor
and
femms
rclb
call
mov
int
add
fistps
pop
mov
xorl
lock
sub
or
cli
and
cltd
divb
scas
sbb
and
popa
mov
adc
loop
push
xchg
cmpsb
pusha
pop
pop
jge
and
xlat
sub
popa
inc
fwait
js
cwtl
mov
pop
add
xchg
imul
in
test
dec
repz
and
andb
sbb
das
inc
mov
jb
jo
add
xchg
and
pop
pop
push
lock
out
or
mov
ret
cmpsb
je
mov
mov
inc
mov
cwtl
xchg
loope
fbstp
out
jmp
loopne
xchg
scas
and
dec
or
pusha
ret
sbbb
enter
loope
roll
adc
aad
out
push
leave
scas
and
inc
mov
xchg
add
jae
add
shrb
in
jo
xor
fwait
sbb
mov
and
xchg
das
les
int
dec
inc
inc
sbb
outsl
inc
xchg
push
movsb
xlat
nop
es
hlt
and
ds
pushf
popaw
insb
clc
and
dec
aam
jge
xchg
xor
mov
jns
gs
lret
cmc
fcmovb
sbb
add
loopne
aas
sbb
pop
repz
inc
jns
outsb
cmp
add
daa
loopne
ret
mov
sub
movsb
mov
mov
mov
xchg
jae
jecxz
push
fsts
repnz
inc
mov
cmc
in
push
lds
call
lea
or
imul
cmp
push
loop
xchg
inc
add
dec
mov
js
imul
nop
dec
adc
push
test
jb
sub
add
sub
jg
loopne
pop
aad
ds
xor
fists
and
pop
push
inc
pop
cmp
adc
hlt
pop
inc
add
mov
or
jo
fcoms
popa
lock
movsb
testb
mov
or
call
xor
inc
pop
jno
leave
pop
jno
pop
push
jecxz
jno
mov
divb
imul
push
out
scas
pop
cld
jecxz
jno
fwait
mov
pop
add
jno
sub
xor
mov
fwait
jge
cmp
sbb
inc
mov
pushl
les
and
push
insb
mov
insl
hlt
and
push
test
outsl
pop
push
ss
loopne
shll
ficoml
insl
cmc
ret
loopne
xor
je
push
shll
pop
push
xchg
pop
bound
dec
push
ja
add
shl
xor
aas
popa
mov
jne
lea
loopne
ljmp
xchg
clc
jo
iret
and
shl
movsb
and
mov
popaw
pop
icebp
dec
fstl
add
add
xchg
ret
sub
pop
inc
lods
pop
lds
sub
ret
push
mov
das
sub
push
cli
arpl
sub
jge
cmp
xlat
adc
lahf
jb
xor
xor
push
clc
push
mov
push
mov
cmpsl
pusha
inc
xchg
jp
movsb
jb
mov
push
vpperm
mov
into
test
mul
and
iret
jae
in
inc
mov
ds
les
inc
arpl
inc
pushw
cmp
in
pusha
fwait
xlat
xor
xchg
popa
aaa
jl
sahf
rcpps
cmpsl
xchg
mov
mov
insb
inc
pop
gs
cmpsl
mov
ficompl
repz
and
jle
or
adc
and
inc
dec
inc
aam
mov
and
aam
sub
lods
stos
mov
lock
jecxz
mov
hlt
inc
mov
ret
popa
add
inc
mov
adc
roll
inc
and
jmp
cmp
aam
push
inc
inc
subl
push
mov
and
iret
and
jmp
sub
inc
fldt
dec
and
mov
int
das
jno
lea
sbb
inc
mov
stos
xchg
aaa
cmpsb
xchg
xchg
and
xchg
or
sarb
pop
sub
lret
pop
inc
adc
inc
xchg
push
repz
js
cmp
pushf
sub
jae
mov
mov
bnd
sub
inc
cld
andb
push
incb
push
sub
mov
sbb
mov
les
jl
frstor
jg
push
jo
hlt
popa
icebp
mov
xor
fistl
add
ja
test
xor
nop
pop
add
jge
loope
mov
xchg
clc
fldln2
mov
and
jo
aad
gs
sarb
mov
and
sub
insb
scas
fnsave
adc
test
out
push
repz
test
sbb
nop
insl
sub
jo
cmp
lret
push
pop
dec
loope
test
jb
lods
imul
push
cltd
jo
adc
mov
aaa
ret
fsubr
jne
jnp
icebp
call
mov
les
call
in
fwait
out
push
adcl
scas
inc
sub
les
mov
fcmovnbe
mov
shll
popf
bound
adc
push
mov
outsb
test
cmp
mov
mul
mov
sbb
push
ja
andl
pop
push
cwtl
pop
ret
sub
cmp
adc
push
idivl
add
inc
fildl
fisubl
or
xor
cmp
push
push
add
popf
or
inc
push
pop
xchg
inc
fwait
jno
das
dec
xor
fsubrl
pusha
fwait
out
sub
popa
pop
loope
cmp
bound
xor
test
jmp
dec
inc
and
test
mov
repnz
inc
rclb
mov
shll
sbb
aas
ret
jecxz
repz
and
pop
mov
xchg
push
aam
mov
xor
movsl
inc
and
mov
fisttpll
iret
data16
pop
and
outsl
pop
mov
shl
jmp
dec
add
adc
jne
das
sti
push
push
adc
sbb
iret
mov
inc
mov
push
dec
xor
adc
outsb
pop
mov
mov
repz
dec
xchg
insl
ds
push
and
rorb
nop
adc
imul
loopne
adc
push
inc
mov
fdivrl
adc
pop
lret
rol
cmpsl
sub
xchg
lock
push
adc
push
jno
ret
inc
xchg
imul
loopne
out
and
insb
loope
inc
adc
and
dec
je
add
sahf
mov
pop
inc
pop
repz
push
outsb
loopne
stc
mov
sub
or
mov
push
push
call
insl
pop
lds
cmp
jmp
jecxz
fstpl
sub
ljmp
mov
and
and
inc
jmp
mov
jo
sub
jb
loope
and
popa
les
adc
bound
pop
sbb
adc
gs
call
test
shlb
mov
xor
and
sbb
bound
mov
xchg
xchg
cmpsl
inc
jmp
icebp
test
jnp
jbe
cmp
push
sti
push
xchg
fimull
aam
shll
xchg
inc
cwtl
dec
mov
and
shl
repnz
call
lcall
and
test
lock
data16
mov
dec
jecxz
ret
xor
popa
sti
lock
jo
mov
mulb
fsubs
in
cmp
sahf
inc
cmp
out
repz
cmpsl
adc
inc
cmpl
add
loope
aas
push
loope
mov
addr16
in
inc
repz
outsb
sbb
clc
sub
scas
add
jno
and
xchg
je
jp
push
xor
mov
jo
jmp
mov
data16
out
sti
or
mov
add
inc
sbb
inc
mov
sub
inc
mov
popa
push
inc
pop
push
jae
les
roll
jns
mov
shll
daa
inc
sbb
sub
cmc
loope
jecxz
loop
xchg
adc
or
adcl
gs
mov
cmp
loop
cld
push
lock
fdivl
mov
cmc
and
pop
adc
int3
jecxz
add
or
adc
push
scas
shrb
clc
and
imul
mov
adc
loope
andb
js
mov
sarb
mov
addl
add
push
push
xor
cmp
and
dec
inc
and
xchg
add
xor
clc
gs
addl
nop
mov
push
xlat
or
into
add
stc
lock
stos
and
cwtl
and
push
je
aam
inc
daa
xor
movsl
and
and
xlat
ret
pop
dec
and
inc
addr16
shll
jno
inc
inc
push
popa
pop
and
and
mov
dec
push
outsb
rol
add
dec
in
sti
mov
js
sahf
cmp
call
xor
pop
int3
sub
loopne
bound
pop
test
mov
mov
inc
mov
push
jl
imul
add
jne
loopne
ja
aas
xchg
mov
movsb
jl
and
insl
and
push
movsb
repz
and
js
mov
dec
cmp
jne
int
adc
mov
lds
xchg
int3
xchg
add
pop
inc
cli
pop
and
pop
and
aas
or
sub
hlt
sub
scas
mov
movsl
stos
fsubrl
mov
not
mov
in
push
pushf
mov
pop
inc
es
outsl
in
cltd
fiaddl
nop
xor
js
xchg
push
or
and
push
imul
xchg
push
js
pop
inc
mov
inc
pop
jb
nop
popa
mov
ljmp
fwait
sahf
jg
xchg
arpl
loope
pop
insb
mov
enter
and
sbb
daa
repnz
rolb
mov
push
mov
inc
iret
pushf
sub
mov
cmpsw
out
xlat
push
inc
mov
sbb
aad
push
mov
fxch
add
decl
mov
stos
and
xchg
fistpl
addb
fwait
repz
mov
fcoms
scas
bound
mov
cs
dec
ljmp
iret
shll
ret
arpl
and
stos
add
arpl
ret
loope
mov
lea
cld
cmp
cmp
loopne
pop
sahf
add
pop
andb
insb
dec
div
in
and
cmp
push
jne
mov
outsb
adc
pop
push
inc
jno
sub
cltd
jbe
adc
fisubl
pop
cmc
shl
mov
and
subl
add
jle
adc
lcall
cmp
jo
es
fdivrs
jmp
sub
mov
jae
jno
pushl
adcl
cmp
sub
and
pop
mov
daa
loope
sub
xor
ds
stc
cwtl
add
dec
mov
mov
and
outsb
fwait
dec
in
scas
sbbl
mov
mov
pop
xchg
in
push
xchg
jae
inc
fldenv
pop
data16
jae
imul
sub
inc
add
icebp
pushl
inc
popa
addr16
add
into
pusha
jmp
add
xlat
mov
sub
notl
imul
psllw
add
mov
and
loopne
cmpl
jno
movaps
les
fneni(8087
inc
xchg
movsb
cmp
and
leave
movsb
arpl
shll
movsb
mov
loopne
jmp
jne
jo
cli
and
bound
pop
mov
jae
pushf
sti
push
mov
sbb
cld
popa
out
mov
add
es
pop
add
js
fistpl
js
inc
jecxz
pop
mov
mov
or
mov
dec
xchg
jno
mov
inc
outsl
pop
add
stc
ja
and
sub
dec
jae
aaa
popa
mov
mov
add
and
lcall
sahf
fcoml
jecxz
dec
bound
jae
popf
mov
out
and
dec
orl
sahf
mov
add
mov
imul
pop
iret
lock
mov
lret
inc
insl
adc
pop
cltd
jo
xor
popa
jnp
dec
cld
stos
data16
dec
inc
jmp
dec
inc
gs
inc
and
retw
and
test
pop
rcl
rcl
fcomip
push
add
ret
inc
negl
aam
sbb
loopne
jae
jno
addr16
push
xchg
sbb
xchg
cmp
push
add
scas
xchg
sub
mov
data16
xchg
xchg
push
js
and
sbb
mov
cwtl
jmp
jl
sub
jecxz
push
pop
and
dec
mov
outsl
gs
int3
les
and
gs
push
test
setne
and
and
cltd
cs
ret
xchg
push
push
pop
insl
cmp
inc
or
jno
xor
movsl
sub
and
jno
mov
jno
mov
popa
mov
add
cmc
or
lock
jp
xchg
dec
mov
in
mov
leave
push
add
dec
and
mov
inc
mov
pop
mov
inc
fs
inc
and
xor
jg
and
mov
cmp
xor
xchg
shr
xchg
inc
push
es
aas
cmp
call
mov
and
pop
aaa
push
inc
mov
popa
call
ret
popf
xchg
jg
add
xchg
pop
dec
lods
jo
push
popa
cmp
push
je
pop
lret
cmp
jle
inc
add
xor
je
adc
les
sahf
xor
push
insb
cmp
sub
mov
bound
in
addr16
sysenter
and
insl
mov
sbb
dec
popa
rorl
aam
adc
mov
cmp
adc
mov
xor
dec
bound
add
stc
movsb
fs
mov
push
inc
loop
scas
test
jle
repz
add
insb
popa
mov
jae
inc
mov
inc
bound
nop
and
loop,pt
xchg
jno,pt
incl
xor
jp
stos
flds
sbb
push
rolb
jb
notl
mov
insb
ds
push
sbb
add
xchg
mov
cltd
test
arpl
mov
movsb
adc
pop
ljmp
and
js
xor
repnz
shr
mov
lea
mov
imul
outsl
jecxz
jmp
loopne
mov
xor
push
jbe
mov
jmp
sbb
jmp
test
sahf
sti
dec
jl
dec
mov
and
jns
sub
lods
or
xorl
cld
sti
movl
fstpt
and
out
jo
jae
je
fisubrl
sub
jae
xchg
aam
sub
pop
jo
push
jl
test
iret
jle
nop
mov
ds
xchg
rcrb
arpl
je
inc
sahf
cmp
flds
les
popa
sub
cmp
lcall
sti
rcll
dec
bound
xor
decb
mov
xor
bound
adc
sbb
cli
add
in
dec
xchg
cmp
xchg
pop
mov
mov
xchg
enter
mov
and
jl
loopne
imul
mov
or
dec
ret
jae
add
jno
pop
daa
jne
loopw
mov
mov
flds
add
xchg
mov
loope
mov
jns
and
push
xchg
xchg
andl
sub
call
cmpsb
or
push
mov
fisttpl
lods
addb
loopne
in
aas
push
pop
mov
sti
add
sti
mov
and
mov
rolb
call
imull
ds
mov
mov
hlt
or
jecxz
and
xor
insb
ljmp
jns
push
adc
xor
loopne
cmpsb
std
mov
loopne,pt
pop
cmp
into
jmp
int3
xor
nop
and
sub
cld
sbb
jno
mov
sbb
add
jecxz
sub
jge
pop
xchg
fcmovu
decl
adc
arpl
dec
sahf
adc
lcall
ffreep
hlt
inc
xor
xor
jo
cmpsb
sub
int
shl
jae
mov
insl
sbb
and
pop
out
push
ds
shll
mov
add
rorl
push
mov
or
mov
loopne
call
fs
mov
dec
jb
mov
adc
loope
filds
loope
pop
cmc
dec
mov
and
xor
loopne
xorl
jb
mov
insl
and
jae
outsl
mov
addl
dec
and
sarb
loope
and
sahf
xchg
add
fisttpl
mov
jmp
aas
loope
movsl
loopne
push
xor
mov
mov
jbe
call
and
fcoml
add
and
adcl
iret
jno
mov
loop
mov
cltd
shrb
popa
daa
pusha
jmp
arpl
lcall
add
jno
outsl
inc
or
mov
mov
xchg
or
dec
cmc
lock
and
aas
insb
mov
add
sbb
inc
xchg
mov
mov
jl
inc
out
xor
jecxz
dec
bound
mov
inc
cmpl
dec
xchg
popa
push
arpl
push
push
call
aad
outsl
jno
gs
arpl
or
scas
hlt
ret
push
push
sti
pcmpgtb
bound
sub
pop
pop
outsb
lods
es
inc
add
and
ds
jge
nop
inc
push
int3
data16
push
mov
mov
loope
xchg
mov
jno
gs
inc
jl
mov
shll
ret
bound
in
fsts
bound
inc
push
dec
rcrb
pop
adc
sbb
add
and
aaa
push
test
mov
or
insb
shll
cmpsb
push
ja
inc
call
xor
xchg
es
pop
arpl
sub
fsubrl
pop
cmp
mov
scas
and
pop
adc
shlb
mov
push
fisttpll
out
and
pop
push
popf
hlt
pop
adcl
sbb
xor
xchg
xlat
gs
mov
mov
sub
xlat
xor
loopne
cltd
sbb
iret
jb
test
xchg
inc
psrlq
sti
mov
popa
sub
pushw
popa
inc
mov
xchg
pusha
aam
dec
and
and
andb
or
movsl
inc
and
or
aas
loopne
and
mov
mov
int3
mov
test
and
ds
jae
add
jae
mov
sub
cwtl
push
sub
sbb
popa
sub
xor
inc
addl
sub
nop
inc
push
jne
mov
jae
push
lods
gs
xchg
xchg
cmp
shll
cltd
mov
movsb
cld
add
xor
ret
aaa
jno
jae
andl
orl
dec
stos
in
in
inc
arpl
rcrw
andl
out
frstor
inc
mov
add
sti
mov
call
dec
mov
bound
sbb
nop
cmpsb
xor
inc
xor
sub
js
lret
jmp
faddl
scas
rcrb
outsb
popf
xchg
mov
push
andl
out
xchg
push
inc
loope
xchg
add
add
inc
mov
sub
shlb
sbb
loopne
or
in
adc
xchg
jno
out
cmpsl
mov
mov
pop
dec
jo
mov
dec
pop
inc
add
shll
and
aaa
test
andb
inc
fstpl
jnp
ficoms
pop
arpl
mov
and
jmp
aaa
shll
mov
push
cmp
movsb
inc
xor
mov
mov
arpl
jge
inc
mov
fcmovu
push
jae
fs
out
sbb
dec
rcrl
loope
jae
scas
cmpl
xchg
out
aas
andl
push
ret
inc
pop
push
add
shll
push
aad
jmp
loopne
jg
and
mov
insl
arpl
in
inc
loopne
mov
fsubp
aas
fbld
cmpsb
xchg
push
jmp
aas
out
mov
popa
xor
jae
rcrl
inc
inc
add
loopne
sti
je
push
popa
shlb
push
cmp
inc
fwait
scas
xchg
or
pop
cld
add
iret
loopne
rcr
loope
notb
dec
xor
lock
xor
push
pop
and
inc
push
movsl
inc
push
pop
sub
pop
push
ds
lods
sub
fdivrp
inc
ljmp
aad
push
mov
cmc
and
call
shlb
jo
push
testb
jecxz
cmp
jmp
loopne
mov
add
mov
imul
repnz
mov
push
pop
and
dec
xchg
movsl
dec
and
daa
cmp
dec
data16
mov
movsb
cmc
test
mov
repz
daa
jae
or
popa
mov
jae
in
iret
shlb
inc
addr16
sahf
shlb
js
dec
movsb
dec
add
mov
add
xor
dec
jg
cld
scas
mov
loopne
loop
outsb
mov
jo
hlt
dec
ret
nop
test
inc
pop
test
sub
mov
pop
stos
ret
mov
movsl
pop
jae
cmp
je
jae
in
popa
push
andl
call
xor
mov
inc
fiadds
mov
cmp
es
loopne
xor
btr
call
and
loopne
mov
mov
mov
mov
pop
and
lret
inc
hlt
push
rcrl
pop
pop
adcl
jno
jg
mov
icebp
in
loopne
ljmp
hlt
inc
dec
xchg
add
xor
into
xchg
push
mov
in
loope
bound
inc
jcxz
cwtl
and
push
add
test
jecxz
lea
mov
mov
loop
in
aam
cmp
lock
test
gs
inc
and
shlb
jne
jmp
xor
mov
aam
je
int
ja
lock
das
movsb
faddl
sub
and
imul
pop
inc
and
cmc
lock
cltd
pop
loop
or
add
fstl
js
ror
jno
imulb
scas
mov
mov
dec
std
pop
aad
mov
aam
xchg
mov
add
ret
push
jne
test
dec
jno
ja
jae
daa
mov
jecxz
mov
add
and
and
imull
or
dec
add
sti
dec
pop
mov
lock
fnstenv
xchg
mov
and
xor
mov
mov
call
cli
mov
mov
jmp
xchg
inc
xchg
call
popf
dec
mov
push
jo
negl
adc
xor
xchg
iret
gs
fs
and
fisubs
fmull
xchg
hlt
mov
mov
cld
inc
or
xchg
dec
fstl
jo
and
bound
mov
sbb
dec
xchg
popf
div
push
mov
add
push
je
mov
sub
iret
cmp
popf
cltd
and
xchg
and
sbb
adc
icebp
std
in
subl
xchg
shl
mov
outsb
jnp
adc
mov
aam
pop
stos
and
mov
cld
iret
add
inc
push
bound
mov
and
shll
add
stos
nop
in
pusha
sahf
mov
arpl
outsb
daa
mov
lret
or
arpl
fbstp
mov
add
mov
xchg
xchg
xchg
xor
sub
pusha
adc
mov
call
fisubs
mov
mov
push
push
pop
mov
mov
jecxz
movsl
pop
dec
push
xchg
mov
outsl
cld
add
adc
pop
cmpsl
cli
dec
xor
ret
insl
bound
loop
fwait
pusha
mov
sbb
mov
cmp
fistpl
push
cmpsl
notb
jg
lods
mov
cmp
pusha
lret
out
jns
leave
xchg
dec
cmp
push
mov
ds
pusha
and
add
sti
pusha
out
lods
fistl
pusha
mov
push
push
pusha
mov
push
jne
sbb
push
xor
lahf
neg
outsl
mov
xchg
int3
bound
adc
pusha
stos
or
cmp
jl
jns
inc
shl
mov
test
bound
popa
in
push
pushf
lcall
xchg
inc
jl
cmp
popa
popf
xchg
xchg
js
bound
stc
sbb
pusha
clc
xchg
push
sti
cli
cmp
pusha
dec
adc
xchg
dec
mov
add
aam
popa
cmp
sbb
and
icebp
loopne
xchg
and
insb
mov
fldl
dec
push
pusha
mov
sahf
mov
pusha
pop
ds
stos
pusha
nop
ficoms
popf
movsb
jecxz
lret
rolb
sub
jl
xchg
push
imul
pusha
pop
shrb
into
xor
cs
lcall
test
jno
cmc
sbb
mov
fcom
dec
inc
pop
out
pusha
xchg
xlat
enter
aas
mov
aam
jns
xchg
adc
pusha
or
scas
gs
xorb
pop
pop
xor
imul
and
sub
lret
in
inc
fcoms
rcll
xchg
sbb
dec
or
pusha
xor
in
push
rcll
fs
lds
jge
out
arpl
arpl
cmpsb
lock
pushf
ja
ss
or
dec
jne
movsb
mov
in
rdrand
mov
fsubs
sub
dec
sarb
mov
xor
sub
xchg
pop
in
mov
insb
xchg
lahf
jl
in
xor
ljmp
icebp
sbb
mov
aaa
stos
mov
bound
pop
mov
fdivs
cli
cmpsl
loop
sbb
ss
gs
incb
xor
or
sar
sub
cmp
outsl
dec
test
xor
pop
pusha
les
or
aas
loop
and
arpl
push
add
push
mov
xchg
jae
xor
test
dec
ds
xorl
xchg
insb
cmp
insb
pop
scas
aaa
mov
push
push
pusha
xchg
repnz
pop
xor
cmp
push
jle
mov
inc
pusha
into
jo
clc
adc
mov
aaa
or
jae
inc
pusha
ret
cmp
insb
jp
les
out
repnz
notb
inc
adcb
test
fsubrs
ljmp
inc
je
pusha
das
mov
jbe
pop
push
ss
movsl
es
adc
test
dec
inc
mov
in
add
and
mov
mov
negl
mov
es
and
filds
inc
arpl
mov
mov
cmpb
dec
lret
rcr
jae
test
dec
popa
mov
xchg
pusha
std
sbbb
inc
mov
and
dec
sti
cmp
insb
outsb
pop
pop
xorl
pop
cs
pusha
sub
add
adc
in
nop
xchg
cltd
pushaw
fmuls
fs
push
sti
in
loopne
lret
jns
cmp
in
data16
cmp
cmp
les
lea
bound
ret
inc
mov
pop
push
test
arpl
ljmp
jecxz
lret
adc
mov
ret
aas
or
adc
arpl
and
lcall
fsubrl
in
inc
ret
dec
pusha
mov
fwait
pushf
inc
mov
push
pusha
stos
mov
imul
jl
ja
int
sbb
ds
or
mov
jp
pop
dec
cli
outsl
fcom
mov
lods
roll
in
insb
pushf
mov
into
mov
pusha
bnd
test
jae
push
fsubp
mov
mov
mov
xchg
pusha
pop
ljmp
pusha
xchg
fsubp
movsb
movsl
out
mov
mov
mov
daa
mov
lods
pusha
xlat
sbb
arpl
pop
insl
sub
xor
int
arpl
rcll
fsubrs
jge
clc
xchg
pusha
fs
lods
add
insl
pop
xchg
cwtl
lret
aad
pusha
mov
rclb
pusha
push
add
sarl
cmp
pusha
lock
subl
pusha
push
inc
cmp
pusha
arpl
push
cmp
mov
mov
fwait
pusha
or
add
and
pusha
xor
fprem
pusha
lods
int3
xchg
nop
pop
adc
mov
arpl
adc
pop
mov
movsb
push
jb
js
pusha
sub
out
roll
loopne
stos
jle
or
sahf
fists
bound
arpl
xchg
sbb
pusha
imul
push
daa
pop
jnp
addr16
loop
dec
push
xchg
sbb
data16
fs
aad
and
pop
xchg
mov
icebp
into
arpl
rorl
jmp
inc
pusha
cld
fldl
roll
pop
mov
jge
nop
or
inc
jmp
mov
popa
pusha
dec
test
psubw
xor
cmp
lds
pusha
xor
adc
fmuls
pop
mov
loopne
xchg
sarl
jnp
mov
aam
test
unpcklps
sub
dec
jnp
scas
insb
and
jae
or
pop
dec
loopne
xor
push
mov
jecxz
and
test
and
mov
dec
iret
cmp
std
jmp
and
pop
or
enter
sahf
cltd
jge
ret
sbb
fwait
push
mov
sti
pop
pusha
out
pop
dec
mov
sbb
inc
cmpsb
mov
icebp
pusha
nop
popa
mov
ret
pusha
xchg
xchg
push
fwait
adc
add
das
push
sarl
and
pusha
dec
push
or
mulb
and
push
sti
dec
pusha
cmpb
pusha
xchg
addl
fs
dec
fsubl
es
mov
xchg
pop
bound
loopne
dec
push
add
cltd
cmpsl
push
iret
shll
inc
aas
cmp
cmp
pusha
clc
add
cmpsb
cmp
jmp
sub
popa
jae
loop
pusha
test
lcall
mov
iret
sbb
rcrl
and
testb
lds
pusha
pusha
fnstsw
xor
cmp
mov
mov
push
pop
mov
xchg
and
cmp
ss
scas
fildl
out
imul
push
lahf
hlt
pusha
test
mov
jl
jle
cmc
cs
mov
push
andb
daa
or
out
scas
pusha
jl
mov
jmp
sub
lahf
int3
subb
adc
je
mov
dec
push
push
jae
mov
xchg
jns
gs
movsb
dec
xchg
loopne
stos
add
and
add
js
jl
mov
pop
repz
inc
cmpsb
insl
jmp
push
mov
insb
mov
dec
sbb
dec
add
fisttps
mov
mov
lret
int
aam
mov
sti
add
push
pusha
outsb
push
jmp
jecxz
jbe
adc
arpl
enter
sahf
pusha
loope
clc
jle
shll
pusha
cltd
repnz
scas
lea
pusha
mov
push
lret
mov
cmp
sbb
xchg
push
xchg
lock
pusha
int
lods
sbbl
test
imul
gs
and
xchg
dec
pusha
xor
and
insl
adc
xor
or
int3
jge
jne
leave
rcll
in
push
test
mov
jns
daa
or
ds
mov
jb
addl
jg
xor
arpl
movsb
cmc
ja
rcll
or
pusha
out
fs
mov
pusha
push
jecxz
mov
insb
fadds
cmpb
mov
repnz
and
inc
cmp
call
sahf
lds
cltd
std
xchg
mov
jmp
jbe
popa
inc
adcl
icebp
movsl
addb
mov
clc
aas
cld
cmp
sub
jbe
es
adc
out
push
in
out
push
or
in
pop
inc
jae
loopne
adcl
dec
les
sbb
sub
mov
pop
mov
cmp
andb
adc
xchg
pusha
inc
xchg
lods
push
jge
jo
adc
and
movsl
lret
push
ret
xchg
inc
pop
out
xchg
bound
mov
rclb
pusha
adc
imul
and
jl
pop
push
shlb
repnz
cwtl
int
in
mov
mov
lcall
xchg
stos
nop
mov
pusha
popf
lea
lds
pop
cmp
xchg
pusha
or
orl
addr16
or
dec
jo
nop
push
xchg
arpl
pop
jl
fdiv
fwait
icebp
and
lods
xchg
pusha
addr16
jmp
call
clc
andl
pop
adc
pusha
cmp
movsb
pop
adc
mov
jmp
inc
inc
stos
pusha
sub
loopne
push
stc
or
mul
arpl
inc
mov
nopl
fdivl
je
mov
mov
sub
jbe
inc
adc
mov
pop
bound
adc
mov
xchg
sbb
pusha
cmp
ja
pop
pusha
out
loopne
fcoml
pop
push
dec
cwtl
imul
inc
out
sub
fsubrs
pop
iret
jns
add
adc
into
gs
pusha
add
jg
pop
xlat
mov
into
test
in
outsb
out
sbb
pop
mov
test
shl
cmpsl
ret
ficompl
and
adc
bound
imul
lret
mov
pop
pop
dec
sub
cmp
mov
dec
aaa
jmp
fdivrs
out
mov
lock
xchg
loopne
stc
imul
mov
sbb
pop
mov
push
cmpsb
in
frstor
xchg
mov
pop
mov
and
mov
clc
adc
pop
pusha
outsl
rcr
xor
add
js
outsb
stos
hlt
sbbl
pop
add
lcall
iret
pop
rclb
pusha
in
push
or
ds
or
fwait
sbb
mov
popa
cmp
push
or
mov
push
mov
or
sbb
daa
sub
push
loope
ss
pop
pusha
fisttpl
add
adc
jp
icebp
or
xchg
jle
cltd
pusha
mov
ret
and
push
lahf
das
jecxz
push
pusha
mov
xchg
or
mov
mov
bound
cmp
and
xor
lock
pusha
gs
das
dec
fnsave
pusha
mov
or
add
mov
cs
fisubs
test
sarl
test
movsb
imul
pusha
in
inc
jge
xchg
or
shlb
pusha
loope
std
mov
cltd
sub
dec
sti
adc
xchg
movsb
xchg
ja
xchg
sub
pusha
mov
jns
out
loope
pusha
xor
neg
leave
sbbl
in
inc
sarl
ror
in
inc
jnp
fistps
cmp
pop
jge
pusha
push
repnz
out
lods
and
aad
sbb
into
pusha
imul
inc
pusha
and
loop
pusha
fisubrl
mov
pusha
adc
adc
es
repz
pusha
or
mov
fwait
cmp
into
cmpsl
push
push
cmpsb
scas
jns
pusha
das
push
in
cli
and
pop
sbb
inc
stos
or
insl
je
sub
xor
pushf
jns
add
fistps
cs
pop
or
push
gs
fs
mov
fnstcw
cmpsl
pusha
xchg
movsl
mov
jl
sub
lcall
jb
lret
pop
pop
ficomps
pusha
adc
mov
outsb
cwtl
pop
xchg
jae
lods
jl
je
sub
adc
cld
bound
imull
mov
shrl
pusha
clc
dec
xor
or
movsb
sub
pop
push
fldcw
int3
xchg
loopne
iret
sub
cwtl
mov
aad
pop
shrb
pusha
arpl
pop
jle
leave
sub
cmp
imul
inc
mov
cmp
push
pusha
shll
push
ds
push
insb
das
pop
imul
inc
mov
jns
or
dec
adc
stos
pop
and
outsl
dec
loope
jl
fld
sarb
xor
stos
out
bound
in
dec
pusha
ret
push
mov
lret
loopne
popf
or
bound
cld
jbe
dec
stos
bound
mov
dec
arpl
push
push
addr16
xchg
push
mov
add
jp
xchg
mov
push
repz
add
xchg
pmuludq
pusha
fdivs
fnstsw
and
jl
popa
pop
int
pusha
enter
pusha
xorb
mov
mov
mov
and
subl
dec
stc
sbb
and
lds
push
jl
and
fisubrs
cmpsl
cmc
lods
or
rorb
sbb
jno
pop
mov
vmwrite
adc
frstor
scas
fidivrl
jae
xor
pop
xchg
mulb
inc
enter
mov
jo
aaa
mov
pop
jl
cmc
jns
iret
pop
bound
adc
ret
or
sbb
xchg
jg
pop
dec
ret
xor
movsl
stc
jnp
sbb
out
aam
xor
mov
lods
rolb
test
test
ljmp
add
xlat
mov
cmc
ud1
clc
push
imul
popfw
nop
fwait
dec
jbe
xchg
mov
jge
jns
dec
iret
push
and
mov
or
mov
jo
les
ljmp
pushf
mov
mov
adc
add
pop
mov
xchg
or
cmpsl
mov
test
mov
loopne
xor
push
gs
in
xor
sbb
mov
dec
pop
jl
cmp
dec
sub
ja
cltd
pop
or
mov
lods
sahf
pusha
lcall
adc
push
in
xchg
push
fmul
dec
xchg
call
or
and
cs
imul
roll
jno
pop
test
mov
mov
pusha
fistl
out
into
daa
mov
pop
adc
mov
pop
shlb
xchg
jl
jle
inc
jno
sub
bound
fimull
pusha
add
out
daa
aaa
je
ret
dec
inc
push
sbb
cld
fcompl
sub
and
sbb
dec
pusha
push
call
adc
mov
fmuls
jge
mov
aaa
pop
popa
das
xchg
pop
loopne
mov
cs
xchg
repz
xchg
jmp
cmc
cltd
mov
mov
adcl
pusha
pop
stos
adc
dec
mov
jne
bound
setae
fiaddl
outsb
lret
lea
sbb
adc
mov
pusha
xor
xor
sub
mov
loope
ds
out
lret
lret
fidivs
and
mov
in
test
sbb
xorb
pop
pusha
push
dec
repnz
mov
test
mov
aaa
pushf
or
and
push
pop
lds
jns
das
pusha
xor
cmp
pusha
int
insb
popf
adc
int3
adc
sub
hlt
sub
adc
pop
sarl
push
pop
inc
push
bound
loopne
mov
lret
or
popf
in
aad
mov
sbbb
jg
arpl
sbb
pop
lock
push
mov
pusha
add
dec
popf
mov
lret
mov
adc
sbb
mov
sub
inc
mov
test
int3
mov
fisubs
das
lea
dec
outsl
pop
loope
nop
sti
lods
insb
fs
clc
fs
call
push
test
xor
cli
loopne
adc
pusha
inc
push
xor
mov
pop
daa
add
sub
xlat
and
sub
sbb
add
stos
cwtl
mov
pusha
je
adc
ret
gs
addr16
mov
leave
ja
pusha
inc
cmp
add
outsb
loop
adc
cmp
mov
xchg
jo
inc
loop
outsl
in
hlt
push
sub
out
mov
mov
fstps
inc
outsb
int3
inc
aad
dec
push
pushf
sbb
pusha
inc
push
popa
or
xchg
jb
shl
cmp
out
insb
sbb
mov
addr16
or
inc
add
cltd
jl
jmp
in
mov
jl
lods
jbe
ret
and
pushf
jo
pusha
or
jge
jo
and
cltd
dec
bound
mov
add
pop
sbb
mov
push
pop
inc
adc
push
lds
es
jmp
pop
add
fnsave
loopne
mov
mov
pop
adc
enter
frstor
nop
or
pusha
push
jp
mov
jmp
mov
jl
in
pop
insb
and
xor
imul
aaa
insb
out
sbb
dec
loop
sub
mov
clc
cld
jge
std
fiadds
pusha
sarl
aaa
shll
subb
test
out
adc
sub
cmp
xchg
pushf
pusha
jae
fisubrs
subl
in
add
inc
inc
and
pusha
mov
cmpsb
iret
lock
mov
adc
fcmovb
and
mov
pusha
repz
cmp
sbb
nopl
stos
mov
out
nop
es
mov
or
test
pushf
gs
cs
jns
dec
sbb
out
mov
and
mulb
mov
data16
das
dec
adcl
pop
dec
add
xchg
iret
loope
mov
das
pushf
inc
add
xchg
scas
aaa
ljmp
mov
jp
pusha
imul
nop
pop
xchg
dec
lret
pusha
xchg
out
xchg
ja
cmp
and
in
pusha
xor
icebp
inc
jge
loop
aad
je
clc
jmp
shlb
jp
add
cmpsb
sbb
adc
push
lods
adc
gs
sbb
into
popa
fwait
sbb
adc
adc
insb
mov
stos
cmpsb
popf
in
fs
fwait
pusha
pop
js
clc
xor
and
dec
test
inc
bound
repnz
push
pop
jb
pop
dec
jge
sbb
arpl
pop
pop
daa
pusha
popf
jg
xor
pusha
cltd
mov
into
arpl
push
adc
pusha
sub
and
hlt
jle
pusha
loope
ret
bound
insb
es
jp
imul
inc
jecxz
outsl
pusha
mov
ljmp
test
getsec
lahf
inc
rorb
jae
pusha
xchg
adc
pusha
push
and
adc
pusha
adc
imul
ds
mov
and
out
mov
js
jb
mov
scas
jl
mov
and
mov
pusha
jmp
jno
jnp
mov
sahf
or
lods
stos
dec
cli
mov
sub
pop
pusha
int
std
mov
and
clc
pusha
jge
aam
inc
xor
ljmp
bound
mov
sub
mov
bound
loope
notl
adc
lcall
in
int
fbld
cmp
sbbb
push
stos
mov
cmp
pusha
pop
jno
adc
add
test
inc
mov
pop
push
xor
outsl
lcall
lcall
mov
jge
insb
jmp
dec
add
jp
adc
mov
mov
pusha
pop
filds
jg
stos
arpl
sahf
and
ds
xchg
pop
dec
popa
jnp
dec
ljmp
jmp
jecxz
test
sti
sub
add
rcll
mov
pushl
repnz
aad
mov
fld1
and
jo
adc
mov
mov
or
add
imul
movsl
xchg
jecxz
mov
xor
inc
jno
popa
xchg
xlat
pusha
outsb
out
lret
je
pop
pusha
xor
std
call
subl
sub
fcomip
sbb
sbb
dec
inc
into
rol
cmp
out
and
leave
adcb
cmp
movsl
sbbl
clc
cmp
lods
xchg
jmp
dec
jl
dec
aaa
add
loop
and
lret
pusha
xor
xlat
sub
stos
repnz
int3
andb
pusha
and
les
adc
rclb
pusha
push
loopne
mov
pusha
in
ret
imul
insb
inc
pop
dec
leave
stos
mov
movsl
popf
add
nop
bound
int
pusha
sbb
ror
or
stos
inc
pusha
push
xchg
pop
aas
addr16
xlat
push
idivb
add
push
repnz
inc
lret
xor
clc
jns
sub
dec
in
icebp
aas
push
bound
xor
xchg
mov
mov
cmc
pop
js
cmp
dec
sbb
pop
nop
jp
test
inc
mov
ljmp
sbb
aaa
push
loopne
repz
stos
call
xor
sbb
jg
gs
lock
cmp
sbb
jecxz
ljmp
pusha
pop
and
jmp
call
addr16
jmp
pusha
bound
adc
push
or
cmp
cmp
jae
pusha
sbb
pop
cld
test
fsubl
push
xor
jb
aaa
outsl
push
push
fmul
fsubl
adc
pusha
and
into
or
pusha
jg
and
ret
dec
cli
cmp
or
daa
jnp
scas
pop
pusha
out
dec
and
stos
push
test
jecxz
jns
popa
in
repz
cs
sbb
pusha
pop
fimuls
xor
push
push
add
dec
data16
in
dec
int
fisttpll
ja
mov
pusha
xchg
sub
and
das
pusha
xor
or
mov
ljmp
aad
mov
mov
push
mov
dec
add
adc
cmpsl
rcrb
pusha
xor
js
pusha
imul
xor
pusha
cmc
sub
outsl
xor
popa
xor
jbe
les
sub
mov
and
out
popa
repnz
out
rclb
mov
adc
pusha
ds
fstl
pop
loop
pop
fsubl
cmp
icebp
cs
scas
jecxz
add
pop
ss
push
pop
mov
or
xchg
fs
out
add
fisubs
dec
adc
pop
sbb
dec
jl
jbe
insb
imul
sbb
pop
jp
cli
loope
out
fildll
mov
popa
xchg
inc
dec
arpl
lahf
jmp
jle
shl
shll
adc
push
jmp
push
scas
popf
mov
lods
inc
fisttpl
ret
sarb
add
aas
xchg
adc
mov
imul
cltd
test
pusha
shrb
jmp
in
pusha
shll
jp
cwtl
loopne
adcl
cltd
cmpsb
loopne
push
mov
fwait
in
std
scas
sub
mov
sti
hlt
lret
and
outsb
pop
mov
push
in
sbb
pop
out
pusha
sbb
loope
add
jb
lcall
fldenv
dec
and
fisubrl
cmp
andb
bound
sbb
lods
mov
pop
jno,pt
mov
std
insl
flds
imul
aaa
push
and
shlb
adc
sbb
adc
adc
fisttpl
or
adc
lea
roll
pusha
push
pop
jnp
jns
es
pusha
in
das
enter
mov
dec
inc
inc
stos
lods
mov
pusha
inc
sahf
ficomps
arpl
aad
ja
jns
sbb
int3
ret
mov
push
cltd
push
pusha
fsubl
ljmp
negb
xchg
pusha
stc
shrb
jl
mov
repnz
imul
fimuls
inc
mov
add
xor
and
mov
or
jp
sbb
mov
cld
sub
pushf
repz
and
loop
cli
sbb
imul
enter
pusha
test
sahf
mov
sub
mov
push
cli
loopne
loopne
testb
nop
rorl
pusha
pop
out
push
mov
into
and
cmp
pop
push
addl
inc
arpl
pop
jo
and
jmp
pop
insb
sbb
inc
xor
inc
int
lret
dec
pusha
sub
mov
mov
in
das
jl
ja
cmpl
enter
arpl
test
mov
mov
mov
pop
pop
stos
inc
dec
pop
popf
popa
push
mulb
out
insb
shlb
and
loop
add
and
sub
test
bound
mov
fadd
push
pop
pop
mov
lcall
icebp
jmp
insb
or
jmp
jecxz
push
mov
sub
ss
pop
xchg
xchg
push
nop
es
cmpsb
jge
movsb
lret
lret
andl
dec
test
test
iret
fs
sbb
mov
xchg
scas
cmp
je
inc
insb
in
lret
mov
adc
out
loop
sub
lods
dec
cmp
bound
add
inc
jg
fwait
gs
leave
mov
ja
add
push
pop
sub
adc
jl
mov
addl
pusha
jl
cmp
add
into
in
or
loope
movsl
imul
cmpsb
and
dec
pop
loope
pop
es
pusha
iret
push
fs
and
test
or
jecxz
jg
pusha
pop
xchg
ret
jne
loop
pushaw
adc
jnp
dec
outsb
out
or
xor
jo
jp
test
popf
xchg
xor
xchg
dec
xor
arpl
pop
pusha
mov
cmp
pusha
adc
dec
sbb
mov
lret
add
and
mov
pop
repz
test
addr16
and
fmul
pop
fcmove
mov
mov
adc
pusha
inc
or
popa
cmpsl
lahf
addr16
jno
outsl
test
arpl
cmp
mov
movsb
outsl
repnz
dec
xorb
pusha
cmpsb
les
and
mov
jg
xchg
daa
hlt
lret
into
sbbb
and
pusha
jo
in
mov
xor
ds
sahf
cmpl
sti
pop
cmp
adc
enter
fiadds
jb
pusha
popa
push
push
ret
std
sti
inc
cwtl
pop
pop
push
and
dec
cltd
popa
stos
jns
fs
adc
shll
jmp
sbb
mov
mov
xor
jb
cli
pusha
push
mov
jp
or
pusha
out
fwait
inc
out
inc
add
jl
push
jecxz
lahf
jns
cmpps
xor
dec
insb
sbb
jecxz
push
sbb
mov
dec
or
test
js
sbb
mov
outsb
xor
cld
imul
insb
jmp
push
pusha
mov
jbe
pop
or
jb
adcl
pusha
mov
mov
pusha
imul
sti
ret
outsb
rcrl
xor
movl
std
dec
pusha
pop
imul
pusha
testl
jl
lea
mov
pop
ja
inc
ss
cmp
andb
popa
sarl
mov
lods
outsb
add
jno
push
jo
add
dec
pop
sbb
mov
pop
xor
pushf
fwait
nop
int
pusha
jne
adc
packssdw
add
push
or
cwtl
jge
adc
stos
shll
push
mov
and
gs
mov
jmp
mov
inc
pushf
pusha
imul
pop
pusha
enter
fpatan
ja
pusha
orb
popf
inc
or
push
add
xchg
in
dec
add
mov
adcb
mov
shll
sbb
test
jae
pusha
call
or
lods
pusha
mov
push
mov
add
dec
bound
pusha
xchg
cmpsb
ja
movsl
iret
inc
or
in
inc
cld
sub
fisubs
mov
xlat
inc
pusha
out
cli
mov
inc
arpl
aam
push
add
test
push
lret
jmp
sbb
aad
adc
mov
sub
jl
lret
int3
cmp
sbb
mov
fsubr
xorl
dec
and
ds
jo
add
add
pusha
add
push
mov
dec
adc
xorl
flds
cmp
adc
sti
mov
bound
pop
fwait
imul
mov
push
fistpl
js
adc
push
in
popa
xlat
jb
fcmove
loopne
inc
xchg
cmp
out
pusha
popf
cmp
pop
bound
mov
or
sahf
push
sub
pusha
and
mov
add
in
xchg
cmp
rcrb
sub
pusha
push
aad
xlat
sub
xchg
mov
neg
test
xchg
add
sub
mov
fs
xchg
sbb
nop
adc
pushf
push
mov
mov
and
leave
inc
push
pop
add
out
popa
sbb
lret
test
pusha
insb
mov
scas
mov
pop
sub
mov
mov
ds
mov
pusha
fwait
icebp
test
mov
pusha
roll
in
pusha
enter
aas
scas
push
xchg
fwait
out
pusha
mov
cmp
pop
js
scas
lret
arpl
stc
addb
ss
sbb
sub
jl
mov
xor
aaa
and
cmpsl
call
iret
pusha
or
mov
and
rcll
or
jne
pusha
jg
daa
cwtl
ret
arpl
shll
jnp
ds
out
lds
push
stc
inc
incl
ljmp
cmp
cmpl
insb
jns
fstps
les
dec
and
insl
or
add
fs
mov
add
or
xchg
leave
pusha
ljmp
push
pusha
mov
push
mull
lret
dec
mov
jns
xchg
mov
loope
and
sub
clc
int
and
lods
push
ret
pop
jl
les
mov
jge
jmp
cmpsl
push
pop
lcall
fcom
insb
scas
iret
push
in
ret
cmp
out
cmpsb
test
daa
cs
popf
xchg
pusha
movsl
cmp
outsb
ss
cltd
shlb
jb
sub
insb
push
push
and
mov
fs
lods
adc
insl
push
dec
xlat
push
adc
xchg
adc
daa
test
fwait
jle
xchg
jne
pusha
call
jo
out
xchg
push
ljmp
test
mov
mov
es
jp
sbb
xchg
jecxz
pusha
sbb
addr16
inc
imul
gs
out
pop
dec
fdivs
mov
add
cwtl
xchg
lock
adc
fisubl
ret
stos
cmpb
fs
filds
les
mov
mov
aam
dec
scas
mov
xchg
cmpsl
or
shlb
and
jecxz
scas
std
stos
mov
dec
cs
loope
sti
pusha
int3
jno
outsb
mov
neg
xlat
pop
andl
jmp
testl
push
push
pusha
sbb
fcmovnu
jge
adc
lods
lret
sarb
jecxz
rcll
pusha
std
xor
hlt
lods
pusha
sub
imul
jae
pop
imul
sbb
loop
testl
rorl
ljmp
or
sahf
and
daa
ficomps
orl
pusha
lock
cltd
popf
test
adc
icebp
jl
cmpsl
mov
mov
cwtl
dec
inc
mov
xchg
lcall
repnz
addr16
pusha
push
cmp
imul
dec
pusha
xor
push
in
pop
sub
mov
dec
dec
sub
mov
add
call
addr16
mov
xor
push
pusha
repnz
testl
xchg
mov
loop
movsl
fidivl
pusha
jg
dec
fildll
xchg
adc
xchg
movsl
imul
cmp
insb
enter
ja
mov
rclb
insl
xor
in
sub
inc
jg
loopne
pop
adc
divb
xor
mov
bound
rol
pop
mov
fs
fstpl
lods
repz
sbb
or
cmp
sub
inc
dec
pop
sub
push
stos
call
es
adc
and
xchg
mov
or
cpuid
ret
popf
and
adc
ljmp
imul
scas
xor
js
pusha
jno
in
xor
add
inc
mov
or
popf
mov
xor
jno
pusha
jbe
dec
xor
pusha
or
pop
jg
cwtl
cmp
sub
or
cli
bound
sbb
xchg
fwait
pusha
lock
sub
pusha
aaa
lahf
icebp
subl
in
frstor
subb
pop
fsubp
ja
dec
int3
jg
nop
jl
xor
add
cmp
mov
xor
dec
dec
adc
aad
jl
pushf
mov
jl
dec
data16
popa
testl
sbb
mov
cmp
xchg
push
in
jp
shr
arpl
enter
je
stos
sub
adc
dec
sarl
sbb
jnp
jae
movsl
in
pop
pop
push
arpl
cwtl
jecxz
pusha
sub
enter
pusha
add
push
iret
pusha
jecxz
rclb
imulb
and
or
and
add
popa
sub
popa
adc
out
add
roll
stos
cwtl
fldt
xchg
test
pusha
stos
mov
jne
xchg
fcompl
pusha
xor
pmulhw
inc
push
fs
cld
movsl
add
pusha
mov
add
lea
jle
add
mov
mov
sub
sub
call
mov
pusha
inc
gs
pop
inc
mov
sub
jg
pop
xchg
jge
cmpsl
sub
mov
out
jmp
inc
and
pop
aad
fcoms
clc
fnsetpm(287
pusha
xlat
outsl
imul
xor
cmpsl
sbbb
mov
in
add
pusha
pop
loop
rcll
aaa
lcall
pusha
dec
rcrb
cmp
push
cltd
xchg
loopne
pusha
rcll
ds
push
xor
repz
push
xlat
divb
jl
push
pusha
mov
jecxz
jo
push
and
arpl
dec
fisubs
push
cs
xchg
popa
cmpsb
adc
pusha
jmp
and
mov
adc
adc
sti
xor
mov
push
pop
inc
jl
jp
in
out
adc
sub
mov
pushf
mov
pop
jb
sub
add
sbb
nop
push
push
pusha
int3
mov
cmpb
into
mov
xchg
fs
dec
mov
fsubrl
mov
xchg
pusha
cmp
cmp
fs
in
mov
sets
pop
in
sub
jo
mov
insb
add
pop
std
mov
sub
aam
fcoml
push
mov
inc
pusha
xor
mov
rcrl
pusha
xchg
lods
testl
std
lea
loopne
add
scas
loopne
lret
sub
orb
scas
cmp
sbb
in
js
mov
ret
data16
fs
cld
rcrl
jge
and
repnz
xor
je
cs
int
jne
adc
pusha
sub
es
dec
or
push
or
jge
adc
xchg
insb
cmpsl
push
insb
jecxz
jns
in
repz
movl
outsl
inc
aam
cmp
sahf
push
int
arpl
rcl
ja
imul
or
push
pop
enter
cwtl
pop
in
dec
push
bound
jmp
test
pop
dec
mov
in
sub
sub
repnz
dec
roll
pop
outsb
scas
add
jecxz
out
fsubs
pop
mov
enter
xchg
cld
xchg
pusha
jl
mov
mov
xchg
test
adc
inc
mov
pop
clc
cli
fidivs
jl
insl
dec
movsl
cwtl
loope
ljmp
sub
cld
push
pusha
ror
loopne
jne
mulb
sbb
cwtl
push
jle
mov
xor
sub
lods
jo
push
cmp
fwait
pusha
dec
out
adc
cmp
pop
lods
mov
lahf
add
mov
dec
pop
xchg
insl
mov
pusha
fimull
fdivr
sub
test
icebp
cltd
adc
xchg
or
jl
or
shlb
push
xchg
mov
or
sbb
bound
into
mov
stos
pusha
dec
ficompl
mov
pop
hlt
jbe
adc
es
mov
cmp
dec
or
mov
mov
xchg
mulb
mov
sub
loope
icebp
pusha
insb
roll
mov
es
mov
scas
pusha
dec
mov
int3
sbbl
insb
pop
dec
or
xor
pusha
fnstsw
mov
fcoml
cmp
movsl
push
fs
mov
push
popf
xor
in
xchg
imul
into
xor
pusha
and
andb
lret
sub
pop
decb
out
cltd
jecxz
enter
aas
movsb
pop
pusha
sub
call
jl
push
jae
jmp
leave
jg
lea
pusha
xchg
pop
mov
sbb
je
pusha
lods
aaa
pop
lret
mov
pop
sbb
adc
stos
xchg
sbb
imul
jp
mov
mov
push
inc
out
mov
and
loopne
cmp
test
pushf
adc
fs
push
shll
jne
push
gs
pusha
push
jno
inc
inc
adc
je
mov
sub
add
pop
push
xor
mov
das
dec
aad
lock
xchg
pusha
xchg
shll
mov
mov
push
jns
into
cmp
dec
fs
adc
out
cmpsl
jb
mov
loope
pop
pop
mov
cld
adc
dec
popf
clc
movsl
pusha
repz
xor
pusha
sarl
addr16
inc
and
sbb
xchg
xchg
loop
jecxz
hlt
lahf
cmp
bound
jl
mov
push
inc
pusha
rolb
loope
lock
clc
sub
and
cmpl
es
dec
ljmp
adc
or
push
movsl
mov
pop
rorb
fnstenv
daa
mov
adc
fstpl
into
int
mov
push
jmp
cld
or
inc
sbb
mov
lea
rcrb
out
pusha
test
out
int3
loop
mov
pop
fiaddl
pop
sbb
cmp
pop
pop
in
pop
dec
fs
lock
rorl
push
pop
nop
mov
push
popa
cmc
daa
gs
stc
pusha
pop
dec
xor
pusha
lock
pusha
mov
cs
sahf
insb
push
repz
out
test
dec
jmp
fistps
push
mov
mov
cmpsb
jge
pusha
jo
addr16
daa
and
cltd
loopne
or
push
std
pop
fmulp
add
pusha
jg
aam
out
pusha
push
movsb
pop
lret
pushf
pusha
fbstp
lea
fs
sub
std
int3
pop
sbb
iret
loope
dec
pusha
cli
mul
aam
cltd
xchg
dec
insb
jae
enter
mov
out
pusha
scas
lret
mov
daa
lods
mov
sbb
mov
jle
jo
pusha
mov
mov
out
or
pusha
lea
jo
lcall
out
mov
pop
xor
pop
rorl
xchg
bound
test
mov
mov
pusha
mov
jmp
leave
mov
es
in
pop
or
cmp
repnz
out
stos
pusha
sbb
sub
arpl
movl
sbb
test
or
pusha
test
fs
out
push
movsb
add
add
pusha
fistl
jo
sbb
sub
dec
fwait
incl
filds
fidivrs
xchg
loopne
leave
pop
mov
mov
pop
pop
push
xor
push
jecxz
test
je
pusha
mov
mov
mov
dec
xlat
cltd
xchg
mov
into
insl
add
js
mov
push
pusha
mov
push
mov
pusha
loopne
jae
imulb
pusha
dec
cwtl
hlt
xchg
out
mov
lahf
test
fsub
pusha
cmp
mov
int3
pop
lods
xor
cld
out
loope
scas
lods
nop
jo
scas
jl
and
add
cwtl
arpl
mov
stos
loopne
inc
mov
xor
mov
dec
cld
jge
pusha
in
lea
adc
iret
inc
and
pusha
ret
jl
pop
push
cmp
ret
clc
js
iret
sti
je
pusha
lret
lea
pusha
call
adc
popf
pusha
lods
xor
jbe
dec
das
mov
and
cld
or
jmp
enter
das
sbb
sbb
xor
ficoms
pusha
leave
mov
cli
fsubl
icebp
pop
mov
pusha
xchg
lods
pop
add
pop
mov
dec
pusha
push
popf
dec
mov
and
pop
xchg
mov
bound
int3
nop
adc
jns
cmp
clc
inc
jl
fmuls
cli
loope
test
scas
je
lods
lret
push
insb
pusha
adc
add
pusha
test
into
sbb
jecxz
pop
mov
pusha
repnz
push
sbb
mov
test
out
cmpsb
lods
enter
and
mov
inc
pop
jae
inc
loop
cmp
popf
in
cmp
mov
mov
imul
fbld
and
in
aaa
clc
xchg
pusha
test
or
iret
lcall
ss
punpcklbw
jg
cmpsl
pusha
test
movsb
mov
push
adc
pusha
sbb
scas
xchg
cmp
mov
movsb
mov
ret
imull
pushf
jp
popa
pusha
ret
fcoml
sbb
or
lods
rorl
add
insb
xchg
data16
dec
inc
enter
mov
in
sub
outsl
adc
das
add
pop
pop
lock
mov
cmp
ljmp
pop
pop
mov
cmp
pusha
ret
jb
je
jg
fdivl
mov
outsl
punpcklbw
pop
cmp
inc
les
inc
push
bound
pusha
ljmp
cmp
in
xor
or
push
sbb
sbb
jbe
sbb
hlt
js
sbbl
push
in
shlb
mov
lretw
mov
loop
flds
pop
stos
jmp
add
scas
iret
mov
leave
fs
popl
ret
push
pop
dec
shl
and
pusha
loopne
fldt
xchg
ret
into
or
xchg
adc
je
je
push
arpl
mov
mov
or
sarl
xlat
or
sbb
xchg
test
add
lds
pusha
pop
adc
je
pop
xor
sbb
xor
push
jl
popfw
push
dec
and
add
mov
stos
mov
adc
cmp
arpl
push
mov
xor
test
rcll
pusha
fistps
push
lahf
pusha
mov
inc
pop
decl
in
xchg
test
dec
notb
std
fcmove
xchg
inc
jae
cld
pusha
aam
lea
sti
mov
mov
mov
jns
sub
mov
into
mov
inc
andl
call
sbb
jae
fcoml
mov
lret
or
and
pushf
andb
scas
cmp
mov
lods
sahf
jno,pt
sbb
pusha
add
cmp
push
pop
pop
push
pusha
fs
fimull
push
int
and
adc
add
es
les
pop
fsubs
insb
inc
fcmovnb
fistps
bound
shlb
push
lods
sub
sbb
pusha
mov
in
inc
or
push
pusha
stos
stos
rclb
sahf
dec
xchg
push
pusha
arpl
sti
adc
into
xor
xlat
pusha
push
lock
mov
orl
push
popl
addr16
inc
sbb
jge
xchg
sub
repnz
test
int
pushaw
ljmp
cmpsb
jo
mov
adc
pop
pusha
bound
dec
nop
cltd
cmp
movsl
jge
aad
xchg
aam
hlt
cld
pop
cmp
pusha
jnp
cmc
push
mov
mov
pusha
sub
xor
sub
mov
jle
stc
xchg
jns
add
testb
cwtl
inc
pop
xor
leave
out
jns
mov
inc
cmp
adc
loopne
fs
js
clc
cmp
jae
lods
or
ret
mov
pop
pushf
pusha
push
int3
mov
cmp
icebp
movsl
sbb
pusha
mov
insb
int3
sub
inc
adc
pop
sub
jecxz
or
mov
daa
pushf
push
adc
cmp
fcomi
mov
pusha
mov
mov
loope
stos
cld
out
sub
bound
dec
xchg
jbe
fiaddl
imul
shrb
js
dec
bound
mov
add
inc
xchg
scas
in
es
mov
mov
shlb
push
add
jmp
loope
fstp
inc
insl
pusha
mov
push
pop
aas
pusha
pop
add
or
hlt
push
movsb
adc
push
mov
aam
or
jbe
lcall
mov
pusha
adc
shr
push
lds
or
enter
roll
call
push
pusha
mov
cmp
out
mov
ficoms
mov
mov
ret
scas
clc
jo
mov
cld
movsl
bnd
imul
out
pop
mov
mov
aaa
aad
fcoms
scas
loopne
xor
and
loope
in
shlb
mov
lret
ret
adc
push
jb
pop
jnp
adc
mov
loop
inc
cmp
adc
arpl
insb
dec
movsb
jne
shll
sbb
iret
cmpsb
pusha
push
or
mov
nop
dec
adc
mov
sbb
mov
cmp
das
pusha
test
insl
xchg
pusha
test
fdivrl
fmuls
mov
lea
pushf
in
pusha
ret
stos
in
adc
jnp
pusha
push
test
fwait
aad
dec
arpl
ja
pusha
outsl
xor
pop
arpl
fcmovne
sbb
add
push
jno
pusha
lcall
shlb
push
daa
leave
in
aaa
es
lret
in
mov
ds
stc
insl
jl
xchg
push
add
loopne
jnp
xchg
push
scas
mov
jb
pusha
dec
mov
push
pop
xor
out
sbb
in
mov
adc
lahf
pusha
mov
ss
mov
sti
jle
mov
mov
pusha
lcall
out
pop
inc
fisubrl
inc
xor
daa
test
lahf
in
jmp
xchg
outsl
je
cmp
sbb
and
or
pusha
popa
push
mov
pop
gs
push
pusha
std
dec
mov
mov
xlat
add
jp
xchg
jns
pusha
loop
add
sti
pusha
sahf
repz
lret
test
adc
lcall
mov
mov
outsl
dec
addr16
dec
xchg
bound
orb
push
lahf
inc
cmpsb
inc
mov
test
fstps
mov
scas
mov
pusha
pop
outsb
lods
sbb
and
insb
imul
adc
sub
addr16
pusha
adc
xchg
vhaddps
lea
cltd
push
fcomps
pusha
or
in
das
or
loop
cmp
shr
cmpsb
push
pusha
insb
jns
cmp
mov
sbbb
jno
fists
push
inc
mov
enter
in
jne
pusha
les
xor
pusha
fadds
inc
int
insb
sub
lret
mov
xor
data16
dec
jge
sbb
ror
test
adcb
loop
aam
mov
test
into
fs
je
mov
pusha
arpl
loop
ja
aas
dec
mov
pop
aad
or
pop
pop
insb
cmp
dec
cmp
fstpt
xchg
xchg
xchg
pusha
and
inc
mov
sbb
sbb
test
xor
and
mov
pop
mov
mov
movsl
xchg
in
dec
pusha
ret
dec
into
jae
xchg
inc
dec
cltd
xchg
xchg
test
cltd
push
pusha
movl
push
clc
popa
insl
mov
lock
movb
sub
jbe
stos
adc
pusha
and
cwtl
mov
xor
shlb
adc
leave
movl
sbb
ljmp
or
xchg
mov
cld
mov
add
lea
push
or
insb
push
push
pop
and
adc
int3
gs
adc
jae
test
addr16
or
pusha
jg
mov
mov
les
cwtl
stos
js
add
in
shlb
lock
out
pop
pusha
push
popf
cmpsb
fdivr
bound
pop
rcll
and
stos
jo
push
lret
push
fs
addr16
sbb
dec
lods
loopne
mov
add
inc
xchg
pusha
or
leave
mov
test
icebp
repnz
mov
insl
dec
inc
jmp
cmp
fstl
mov
daa
mov
pop
mov
push
jl
scas
imul
push
mov
jl
push
sbb
mov
test
pusha
clc
iret
cmp
test
mov
push
loopne
and
or
aad
negb
jecxz
aaa
sub
stos
aam
in
fwait
sub
insb
pop
adc
rcrl
pop
out
ja
xor
add
pusha
aas
fldt
cmc
orb
je
jno,pt
cmp
push
pusha
jae
cmp
or
es
and
inc
jl
cmp
adc
jecxz
out
int
adc
add
dec
nop
and
adc
or
fistpll
or
pop
ret
cld
mov
iret
cwtl
jge
daa
pusha
sbb
out
mov
add
cmc
inc
pop
leave
int3
test
pusha
test
loop
sbb
jb
sbb
xor
unpcklps
shlb
cmp
pop
daa
bound
repnz
add
mov
dec
xchg
in
in
pusha
adc
pusha
or
xchg
pusha
gs
ljmp
jle
mov
mull
pop
xor
jl
jmp
jl
bound
xchg
loopne
inc
sbb
test
aad
test
ret
pusha
fidivl
inc
ja
les
pusha
sub
cmp
ss
pusha
loop
mov
hlt
xor
in
lcall
scas
rorb
push
pusha
in
mov
jl
sbb
inc
andl
ret
pop
popa
pusha
test
xchg
arpl
out
bound
loop
cmp
ja
pop
inc
or
aam
test
enter
adcb
fldenv
test
or
mov
jle
jl
pop
ret
push
hlt
xchg
mov
shr
add
pop
mov
pusha
jns
push
gs
jl
lock
dec
lahf
insb
inc
mov
cmpsl
pop
sti
push
shlb
add
jmp
push
loope
dec
pusha
xor
mov
pop
enter
jle
xchg
jg
mov
pusha
cs
test
lds
push
push
jmp
nop
pop
jecxz
mov
mov
mov
cmpsb
sbb
pusha
xchg
sbb
cli
mov
std
sarb
pusha
cmp
or
testb
adc
call
repnz
pop
pusha
pop
loope
test
addb
cmp
mov
je
dec
in
push
repz
mov
add
enter
push
cmp
lods
adc
xor
jae
cwtl
insb
imul
and
shrb
add
or
mov
adc
sbb
arpl
jno
or
mov
cmpsl
shl
mov
test
das
xchg
in
insb
nop
inc
fwait
mov
cmpsb
and
sub
stos
rolb
stos
pusha
inc
sbb
int3
add
ja
sbb
sbb
dec
ds
pusha
mov
jle
or
dec
out
adc
mov
add
in
xchg
mov
push
sahf
cmpsl
sub
repnz
mov
popf
call
xor
pusha
mov
inc
les
out
dec
or
xchg
scas
mov
movsl
mov
adc
cld
push
hlt
pop
inc
adc
nop
cli
mov
scas
addr16
adc
pusha
testb
int3
out
cli
push
insb
repnz
jecxz
sbb
cwtl
pusha
pop
lahf
orb
sub
out
or
leave
jo
add
cmp
push
push
cmp
scas
lods
movsl
pusha
or
js
out
add
pusha
and
mov
jnp
or
insb
xor
pusha
sbb
or
mov
loop
andl
jl
pusha
test
shl
sub
jl
enter
lahf
loop
dec
mov
pop
inc
insb
mov
pop
popf
and
bound
pusha
add
pop
mov
mov
or
scas
pop
push
aaa
pop
push
popa
pop
pop
mov
mov
popa
cltd
push
pusha
xchg
gs
xchg
pusha
sub
mov
icebp
fsubrl
mov
jmp
lahf
fcmovnu
shlb
loopne
sbb
push
mov
sbb
movsl
pop
pusha
inc
jp
cmp
insb
nop
sbb
sbb
dec
add
pusha
mov
mov
lea
aad
push
xchg
jp
xchg
pusha
fidivrl
xor
test
lds
mov
push
push
sbb
xchg
push
adc
loope
add
pusha
pop
push
push
rorl
or
enter
pusha
aas
aam
mov
jne
inc
jl
lcall
scas
jae
cmpsb
sti
ret
and
pop
fldenv
rcrl
add
and
jge
fsubrs
pop
pusha
iret
dec
aas
xchg
adc
mov
andb
repz
mov
scas
sti
mov
ret
ljmp
pusha
jnp
in
xchg
outsl
out
mov
inc
jne
out
push
outsl
and
add
pop
popa
test
inc
sbb
or
xor
pusha
data16
cmp
dec
insb
cmp
sbb
xor
dec
insb
xchg
dec
je
mov
js
jle
lock
pusha
xlat
test
movsl
dec
out
jno
repz
shlb
mov
sub
xchg
ret
xchg
inc
imul
mov
rep
pop
decb
pop
jecxz
xchg
aad
adc
inc
clc
bound
mov
jl
xchg
loopne
sub
pusha
mov
loop
fs
hlt
or
fistps
mov
mov
push
in
pusha
outsl
out
inc
xor
adc
lods
gs
pop
std
pusha
or
cmp
fs
jb
pushf
fwait
push
in
aaa
push
pop
rolb
and
lods
pusha
xlat
mov
sbb
cld
scas
xchg
adc
adcb
scas
cld
mov
ret
lahf
push
push
repnz
pusha
jp
fwait
jo
std
push
lods
pusha
mov
pop
je
insl
repz
mov
lcall
je
cli
rcrb
fwait
jnp
push
andl
dec
xor
ja
dec
jecxz
pop
mov
add
loopne
xchg
xor
mov
mov
mov
scas
pusha
repz
jae
adc
fsubl
mov
sarb
cmpsl
mov
icebp
aaa
pop
and
arpl
faddl
fisubs
pop
pusha
jmp
std
into
push
inc
xchg
aam
push
mov
or
and
pusha
lret
mov
sub
pusha
iret
and
push
push
mov
dec
pusha
xchg
and
xchg
add
cmp
sbb
mov
stc
sub
or
push
push
daa
sub
pop
jecxz
cmp
pusha
cmp
mov
lods
rclb
mov
push
sbb
and
push
push
pop
sbb
push
dec
push
nop
movsb
xor
mov
cmpsl
int
insb
into
in
mov
es
xchg
das
or
ljmp
shl
ret
js
pop
jns
daa
or
dec
dec
pusha
loop
inc
andl
stos
into
and
jno
jns
nop
ja
imul
xor
cwtl
fcoml
push
andb
dec
pusha
xchg
sub
mov
pusha
stos
adc
xchg
sbb
test
ret
mov
xor
lret
call
fisubrs
dec
dec
mov
jne
pop
sbb
cmc
lret
bound
xchg
xchg
sbb
or
jnp
pusha
pop
cld
dec
sub
cmp
fs
xlat
or
repnz
cwtl
mov
insl
pusha
xor
pop
out
pop
mov
sbb
loopne
dec
xor
sbb
cwtl
pusha
cmpsb
xchg
inc
mov
into
pop
out
mov
leave
repz
sbb
ret
fistl
cmp
and
inc
icebp
add
outsb
bound
adc
push
stc
xor
std
stos
aam
pusha
pusha
sbb
add
dec
and
mov
pusha
xor
push
sbb
adc
mov
fdivrs
or
in
pusha
fstpl
cmpsl
mov
jp
inc
pusha
fwait
sub
fstpt
lock
dec
je
jo
sbb
insb
push
cltd
and
mov
test
pushf
dec
add
rcll
int
ret
cli
pusha
mov
sub
xor
icebp
mov
push
xchg
popf
adc
fisttpll
out
mov
mov
dec
mov
fs
decl
gs
inc
out
sub
jb
jmp
mov
pusha
mov
pop
stc
popf
add
insb
fs
in
in
push
add
outsl
clc
imul
and
jecxz
add
arpl
pop
fwait
pusha
add
popa
loope
pusha
hlt
cmp
out
lds
enter
dec
aas
rcll
andb
push
pusha
testl
test
jae
inc
push
pusha
cmp
imul
pop
add
aaa
mov
pusha
sbb
mov
iret
mov
pusha
push
adc
or
add
test
ret
ret
adc
pusha
push
xchg
mov
or
xchg
data16
test
mov
xor
sbb
das
jle
cwtl
repz
lods
mov
dec
mov
xchg
aam
add
jl
xchg
movsl
pop
or
cwtl
xor
mov
xchg
ljmp
jne
mov
mov
orb
insb
out
popa
fldenv
cmpsl
pusha
mov
mov
pusha
dec
mov
inc
xor
es
pop
rorl
clc
fs
in
adc
dec
xor
lods
pusha
les
and
sbb
stos
out
push
or
hlt
call
add
mov
add
jecxz
pusha
mov
mov
mov
hlt
sbb
and
pusha
pop
sbb
cmp
cs
pusha
cld
js
jb
mov
pusha
push
push
jle
pusha
frstor
out
in
and
mov
fmuls
into
cmp
xchg
stc
daa
or
or
rorl
cld
dec
ret
sub
push
scas
fstpl
test
mov
pusha
cmove
dec
sub
cwtl
addb
je
sbb
sbb
adc
push
cld
test
fldenv
mov
dec
in
push
jbe
sbb
sbb
xchg
mov
cmpl
repz
cltd
clc
test
inc
sbb
fisttps
cli
cltd
mov
mov
mov
xchg
and
loope
push
out
push
adc
lret
inc
mov
mov
shrl
arpl
dec
je
test
pusha
les
xchg
push
mov
mov
adc
outsl
sbb
int
push
pop
lea
in
jae
wrssd
lret
dec
cmp
xchg
cltd
xchg
xorl
jl
lods
mov
or
add
in
pusha
and
pop
cltd
or
mov
xor
inc
pusha
mov
cmp
stos
repnz
adc
add
es
and
jle
or
jge
stos
scas
jmp
bt
aad
jp
add
or
bound
pusha
mov
add
sahf
cwtl
jns
jle
in
scas
and
xor
sbb
sub
lods
push
and
add
pop
dec
mov
adc
and
shr
xchg
fs
lds
xchg
inc
pusha
aad
imul
pusha
push
call
sub
dec
mov
jae
pop
pusha
push
aam
sbb
xchg
pusha
inc
cmp
in
mov
xor
cld
dec
insb
ss
pusha
sub
xlat
xchg
pusha
insl
repz
jg
jbe
cmp
fldenv
sub
pop
jl
jl
and
loopne
das
std
testb
cwtl
insb
xor
add
test
out
mov
leave
mov
xchg
inc
repnz
jle
pusha
out
sbb
lods
pop
push
sbb
adc
fisubrs
inc
test
and
ror
xor
sub
xchg
fldenv
cltd
adc
pop
leave
fs
adc
xor
or
repnz
inc
shrb
dec
aad
mov
mov
mov
mov
pusha
scas
stos
lods
jae
popf
pop
cmp
inc
lret
test
fldenv
sbb
fcompl
or
mov
test
pusha
clc
xchg
in
dec
push
add
fiadds
add
pop
or
jae
inc
sub
movsb
cmp
jne
clc
xchg
daa
jmp
inc
leave
arpl
sub
pop
sti
jno
and
mov
mov
pusha
test
inc
jmp
push
lock
movsl
add
pusha
rsqrtps
stc
push
shrb
add
test
sub
sub
sbb
jecxz
sub
negl
sarl
icebp
out
test
xchg
push
aas
into
fldenv
pusha
mov
adc
jmp
mov
jbe
jae
popa
pusha
out
pop
push
inc
mov
cltd
pop
fcoms
fwait
and
scas
xor
adc
jb
dec
cmpsl
arpl
dec
and
xchg
pop
decb
mov
pop
jg
cmpsb
mov
ret
add
popa
jnp
jge
out
pusha
out
test
xchg
insb
pop
test
jl
pop
outsb
popa
fucom
jle
mov
inc
gs
popa
lret
push
jnp
pusha
cmpsl
cs
mov
xchg
dec
push
sub
mov
xor
into
pop
daa
fs
loop
cs
jg
dec
arpl
mov
lret
pusha
mov
xchg
inc
xor
jmp
aam
sbb
mov
incb
mov
aad
mov
and
outsl
into
pusha
push
xor
xor
lret
shlb
mov
sti
sbb
fcoml
push
hlt
shlb
bound
dec
mov
gs
fildll
ds
prefetchwt1
add
jg
pushf
mov
cmp
scas
mov
out
jle
mov
cld
sub
fwait
pop
sti
sbb
lcall
mov
lret
adc
inc
daa
cmpsl
shlb
fs
nop
xor
ret
enter
sbb
jp
adc
out
inc
jbe
add
movsb
xor
test
insb
rcrl
cld
and
in
fisttpll
pusha
pushf
dec
push
in
mov
gs
cs
pusha
mov
push
inc
mov
mov
cs
std
fs
xchg
out
test
mov
lods
filds
scas
xor
arpl
mov
cmp
pusha
cmp
dec
int
xchg
pop
inc
repz
cmpsb
loope
mov
std
cli
lret
inc
fisttps
pusha
pop
aam
pop
stos
sti
insl
and
outsb
fstl
xor
bound
xchg
pop
pop
cmp
loope
pop
push
mull
jg
cltd
pop
mov
lea
xchg
ret
sarl
shl
xor
and
xchg
pusha
or
andb
xchg
push
mov
pop
push
lods
arpl
shlb
lea
or
jnp
imul
loope
and
outsl
or
pusha
mov
movsb
int
out
adc
shlb
pusha
std
jbe
or
jge,pt
movsl
add
out
fs
xor
inc
adc
pusha
das
in
lds
push
mov
bound
ftst
inc
stos
cmpsb
cmp
cwtl
iret
pusha
daa
arpl
scas
inc
dec
sbb
sub
mov
add
pushf
test
inc
sub
adc
pusha
add
and
xchg
sarl
mov
sub
pusha
push
faddl
in
rcr
cmpsl
push
jle
xorl
insb
adc
jp
xchg
subl
pusha
mov
mov
adc
cld
pusha
inc
andb
sub
xlat
pusha
ret
xchg
fdivr
jno
push
insl
dec
lods
pop
imul
cmc
cmpsb
mov
inc
push
and
inc
stc
pusha
pop
not
test
cmp
call
mov
insb
xchg
leave
les
add
pop
pusha
dec
cmpl
pusha
lock
imul
dec
pusha
dec
jo
loopne
cmp
or
mov
xor
jl
and
push
xchg
mov
inc
scas
int
int3
xor
out
test
pusha
adc
orl
pusha
movsb
lcall
pusha
push
roll
in
mov
and
jmp
stos
jnp
add
out
repz
jbe
cmpsl
adc
outsb
ja
lahf
jecxz
ds
jmp
fsubs
add
jl
sub
rcr
test
sbb
fwait
lahf
loope
popf
aaa
ss
mov
adc
in
sub
popf
addl
icebp
movsb
sahf
ret
test
lahf
pop
sbb
lcall
jg
inc
loope
inc
push
lea
mov
outsl
or
xchg
loope
pop
mov
push
push
push
in
mov
add
pop
mov
dec
adc
cmpsl
icebp
bound
rclb
mov
loope
nop
scas
mov
aad
push
add
pusha
xor
ror
pusha
mov
xor
in
cmp
jl
sti
jg
fisubl
mov
cmp
pusha
dec
lea
js
xchg
mov
out
insb
xchg
mov
jnp
aas
sub
push
aad
dec
pusha
sub
xor
sub
jbe
adc
lea
xchg
lret
lds
push
jns
jb
mov
rcrb
cs
and
pusha
xor
or
push
in
mov
insb
inc
arpl
insl
push
push
xchg
xchg
and
inc
shlb
arpl
pusha
repz
push
jp
pop
clc
cmpsb
pusha
adc
outsb
divl
pop
pushf
mov
cmp
sub
clc
subb
fdivs
leave
mov
xchg
mov
mov
icebp
ds
cltd
pop
ljmp
jg
xchg
int3
mov
daa
dec
mov
pusha
push
jae
jo
dec
ds
mov
pusha
xor
add
fcmovu
adc
inc
jae
push
pusha
jle
movsl
cwtl
nop
in
fcomps
sub
loopne
jnp
fimull
mov
pusha
jne
and
sbb
pop
sbb
push
cmp
insb
mov
movsb
inc
mov
ljmp
jl
pop
mov
popa
les
pusha
test
cmpsl
std
iret
pusha
in
stc
fistpl
in
and
stos
cmp
jl
pusha
fs
cmp
inc
insl
pop
aam
sub
ret
jge
add
call
test
pop
or
out
es
bound
mov
ficompl
stos
lret
movsb
aas
pop
rcrl
dec
pusha
sahf
je
clc
cmp
cmc
scas
pusha
add
adc
xor
or
out
add
clc
stos
mov
adc
insl
shlb
jg
push
pushf
sbb
pop
mov
jge
pusha
mov
jmp
mov
fldenv
mov
daa
aad
outsb
xor
adc
jmp
pop
cld
lret
sbb
addr16
aaa
int
and
pop
or
std
loopne
cwtl
xor
lret
in
add
xchg
pop
mov
and
lret
fwait
aas
hlt
push
pusha
loopne
xor
pop
gs
jmp
sbb
dec
in
popa
pop
sbb
stc
push
out
push
stos
adc
pusha
int
pop
xchg
add
mov
xor
lcall
in
adc
popf
mov
pop
ds
and
lods
sbb
pop
jmp
hlt
shlb
adc
mov
rclb
jl
icebp
jge
jno
jecxz
sub
xor
jle
pop
pusha
fs
mov
lea
inc
xor
aam
push
push
mov
pop
cmpl
jbe
in
cs
lods
fs
imul
fbld
cmp
adc
icebp
or
pusha
test
pushf
jns
ret
add
pusha
inc
out
jp
adc
call
push
pop
xor
pusha
adc
cmp
cltd
or
dec
sbb
add
pop
mov
xchg
sbb
andps
inc
cmpsb
pusha
push
pop
add
std
dec
pop
xchg
pusha
xor
pop
in
add
push
loopne
pusha
stos
cmpl
insl
nop
push
xchg
lret
push
pusha
lcall
pop
mov
push
mov
cwtl
sub
jp
mov
push
inc
cmp
pop
push
ja
dec
sub
bound
pusha
xor
shll
adc
pop
fs
sbb
in
mov
pop
pusha
cmp
mov
js
insb
mov
std
jle
enter
arpl
jae
add
jmp
cmp
rorl
movsl
pop
pop
ret
mov
pusha
xor
fs
lret
adc
sbb
sbb
jo
xor
scas
sub
and
and
adc
in
shll
push
mov
pusha
sub
mov
adc
stc
lcall
sub
sarb
jg
jbe
jae
arpl
xor
movsl
fdivrs
cmp
jg
mov
repnz
out
pusha
ret
mov
dec
sbb
jb
bound
dec
push
add
daa
call
xchg
jl
adc
ja
and
popf
push
dec
jle
cli
mov
enter
shrl
pop
pusha
lea
add
pusha
push
xchg
stos
pop
xor
or
mov
lea
jae
lcall
push
pusha
add
mov
pusha
adc
ret
fs
pusha
aaa
mov
add
xorl
and
cmp
loope
inc
fiaddl
icebp
jb
jno
call
adc
add
cmp
pusha
dec
addr16
push
push
mov
gs
sbb
xor
out
arpl
mov
jmp
jp
cmp
mov
pop
mov
pusha
bound
ljmp
and
fmull
dec
std
mov
mulb
jecxz
ss
insl
arpl
push
mov
and
xchg
sbb
mov
popf
xor
cmpsl
pusha
out
movzwl
fcomps
das
out
inc
xor
pusha
sub
in
ret
pusha
xchg
sbb
add
dec
sub
enter
call
leave
push
ss
or
test
fs
lock
sbb
pusha
and
das
pop
aaa
push
jbe
jl
nop
pop
jmp
sbb
push
dec
pusha
clc
fidivl
xchg
add
insb
out
mov
cwtl
in
movsb
pop
cli
pop
aas
xchg
xchg
insb
mov
cld
mov
jno
add
fiaddl
sbb
out
scas
jle
add
pusha
sub
mov
shrl
daa
pusha
and
mov
or
push
hlt
mov
xchg
and
insb
push
loopne
int3
sub
jne
in
addr16
je
jns
cmp
sahf
or
inc
jno
mov
xchg
xor
jge
dec
pusha
in
push
xchg
jl
std
push
push
pusha
sub
cmpsb
pop
jbe
jne
inc
mov
pop
test
mov
int
inc
sti
in
bound
loope
imul
mov
jns
xor
rolb
addps
sti
sbb
ret
out
jl
decb
jecxz
jnp
xor
xchg
pusha
movsl
lock
push
push
dec
test
das
sbb
xor
mov
or
add
mov
lods
pop
mov
insb
xchg
sub
pop
ret
icebp
mov
pusha
pop
fstpt
mov
or
addb
in
mov
or
shll
pop
sbb
stos
adc
sub
mov
mov
xor
dec
inc
inc
outsb
pusha
out
dec
insb
pop
push
and
xchg
ret
push
in
add
das
pop
leave
dec
push
outsb
arpl
sub
cmp
sti
out
lcall
fst
inc
xchg
xchg
push
sub
jnp
pusha
clc
and
push
mov
clc
mov
pusha
nop
hlt
pop
ljmp
dec
xchg
data16
cld
pop
mov
dec
iret
test
add
imul
cmpsb
and
popa
je
insl
outsl
popa
cwtl
and
and
push
sbb
pusha
mov
in
or
aam
repz
std
jl
popa
xchg
sbb
je
pusha
jb
in
mov
addr16
pusha
jp
mov
je
mov
pusha
subl
sbb
rcl
pusha
je
mov
jb
pusha
ret
jge
or
push
pusha
lds
xchg
int
mov
sub
mov
aas
mov
loop
jbe
pusha
addb
call
adc
faddp
pusha
aaa
dec
sbb
and
mov
pusha
ja
std
fbld
push
es
or
push
ficompl
sbbl
mov
jne
jno
bound
push
xor
loopne
pusha
test
out
in
test
or
fnstcw
adc
aaa
jecxz
push
rcrl
sti
pop
leave
jge
jg
xchg
data16
pusha
adc
xchg
push
lods
pusha
pop
push
daa
adc
icebp
jmp
pusha
sbb
fimull
sbb
ret
fwait
pusha
test
mov
and
insl
cmp
movsl
cs
int3
gs
push
push
int
jecxz
lret
in
pusha
repz
pop
mov
dec
pusha
inc
sub
stos
mov
ret
xorl
pusha
scas
lret
push
mov
stc
xor
popa
out
int
mov
mov
filds
stc
xor
and
push
push
push
rcl
iret
arpl
popl
insb
loopne
dec
dec
inc
inc
add
aam
scas
fsubl
add
pop
lods
cmc
pop
dec
xchg
out
inc
xor
in
iret
pusha
outsl
into
je
jp
cmc
andb
stos
adc
pusha
movsb
fldt
inc
fwait
cwtl
div
shlb
pop
loope
lret
mov
cmp
dec
in
stos
inc
dec
or
test
fs
test
and
lret
cmpsb
push
mov
xorl
jge
pusha
sti
lcall
xchg
cli
pusha
testb
or
nop
jl
add
add
inc
sbb
loopne
imul
test
jo
pusha
es
mov
cmp
fidivl
int
sub
pusha
std
jnp
icebp
popa
test
aas
mov
mov
imul
nop
sub
shr
frstor
fsts
mov
std
insl
fdivr
jb
fs
lret
xchg
cmc
cmp
fs
movsb
std
pop
pusha
mov
insb
jmp
add
or
mov
cmp
pop
mov
mov
pusha
adc
xchg
jb
popa
jmp
loop
inc
push
pusha
addr16
sub
sbb
mov
in
sub
mov
sub
add
adc
mov
bound
cli
pusha
jmp
shll
xor
out
adc
jp
in
pusha
es
nop
out
adc
out
in
xor
lea
pop
pusha
icebp
sarl
call
mov
test
jge
dec
mov
xor
lea
bnd
or
out
sub
pusha
repz
mov
cmpsl
xchg
add
gs
sbb
js
mov
fwait
leave
je
jns
loope
idivb
mov
pusha
cmc
xchg
mov
daa
pusha
jne
push
fcoml
pop
pop
push
push
xor
pop
sub
mov
andb
jnp
int3
pusha
iret
xchg
cld
and
out
out
mov
jle
sub
out
rcrb
pusha
mov
mov
pop
xor
or
mov
inc
shll
dec
mov
pop
mov
pusha
push
fsubr
and
jge
pusha
cmp
daa
andb
lock
pop
pop
test
add
lea
mov
pushl
add
inc
inc
out
sub
pop
ds
push
sbb
mov
test
dec
dec
aas
lods
imul
fisubs
int3
jno
sub
jmp
jg
aas
push
adcb
movsl
pop
mov
push
arpl
jl
loopne
test
subb
dec
into
addr16
int3
lea
or
les
inc
xchg
push
andl
dec
mov
popf
pushf
jmp
xchg
leave
push
add
pusha
hlt
inc
popf
fisttpl
mov
cld
mov
and
pop
jl
sub
ljmp
or
rorb
shlb
sbb
cld
decl
xor
push
sahf
vphaddbq
fs
shrb
mov
pusha
xchg
in
dec
out
pop
neg
pusha
mov
sub
lret
jmp
add
test
fs
je
stos
out
fldl
adc
repnz
mov
bound
xchg
test
dec
lock
outsb
int
outsl
dec
add
xor
pop
pusha
in
rol
mov
cwtl
cmp
bound
cwtl
test
adc
shl
cwtl
inc
mov
lret
cmc
pop
out
out
stos
pusha
inc
inc
imul
dec
jge
insb
pop
dec
std
cmp
dec
jecxz
or
pusha
lock
mov
inc
xor
mov
adc
dec
imul
arpl
xlat
cwtl
out
insb
lods
pop
lcall
scas
pusha
jg
lock
rclb
fimuls
cmp
loope
cmp
rorl
insl
cmp
cmp
push
xchg
mov
xchg
fidivrl
leave
pop
adc
std
fiadds
sbb
push
jnp
jge
mov
mov
cld
push
rclb
sbb
or
inc
sbb
adc
insb
add
adc
sub
data16
push
jmp
bound
and
push
ss
dec
push
xor
fiaddl
outsb
jl
push
fidivrs
push
es
cmp
push
bound
jno
mov
gs
jnp
mov
nop
add
xor
dec
mov
adc
and
loopne
nop
ja
popa
jbe
inc
rorl
shlb
xchg
daa
fs
mov
out
xor
fwait
mov
out
sub
cltd
stc
xor
mov
cmp
shlb
fs
in
pop
popa
divl
jp
fdivr
loop
mov
aaa
adc
push
inc
or
ret
or
pusha
jle
cmpsl
inc
arpl
cmp
xorl
mov
inc
scas
sbb
scas
pushf
insb
mov
stos
aad
js
repz
imul
adc
jbe
inc
fisttps
loopne
mov
cmp
jecxz
inc
inc
clc
insb
dec
bound
inc
js
pause
shrl
inc
shrl
dec
and
sub
mov
fcompl
xor
or
imull
mov
push
mov
lock
dec
mov
rorb
xor
nop
push
mov
inc
dec
adc
mul
out
mov
pop
push
ret
and
xor
lods
sub
fcoml
and
mov
inc
cmp
inc
jge
inc
lock
fs
int
jg
sub
mov
adc
inc
sub
loope
rol
sub
test
push
inc
daa
mov
pusha
shrl
push
ds
test
stc
push
mov
lods
stos
xchg
xor
insl
js
and
xor
add
mov
mov
adc
dec
sbb
add
inc
andb
inc
cmp
mov
sub
dec
scas
or
pusha
or
jecxz
jo
cltd
pusha
mov
sbb
cmp
push
dec
pop
sbb
stos
add
adc
cmp
mov
jge
repnz
pop
into
inc
cmp
movsb
push
pop
lock
pop
stos
push
mov
pushf
popa
xlat
mov
pusha
std
sahf
ja
outsb
fbld
repnz
pushw
mov
fs
loope
sbb
fwait
jnp
jl
shll
add
xchg
lds
xlat
inc
aad
dec
mov
sbb
inc
repnz
and
dec
and
fcmovne
enter
out
pop
sbbl
pusha
jmp
jmp
rolb
lea
loopne,pt
pop
mov
ljmp
andb
aas
jl
xor
or
mov
in
pushf
xor
mov
loop
loope
int
jb
in
pusha
pop
leave
inc
jbe
ss
push
popf
xor
inc
mov
andl
push
aaa
push
push
pusha
pop
push
cmp
and
rcr
push
lock
std
xchg
fwait
dec
adc
int
popa
in
push
sub
bound
cs
mov
cmp
out
jl
pop
out
adc
dec
pusha
sti
lock
sahf
in
sub
push
mov
shrb
pop
push
pusha
cmpsb
xor
sar
xlat
xchg
lods
push
bound
lods
sub
xchg
cmpsl
mull
mov
test
pop
xchg
in
or
test
jne
push
mov
pusha
mov
faddl
pop
or
inc
shl
fsubs
cmp
test
xchg
xor
jecxz
cmp
sbb
lods
in
pop
pop
xchg
jae
cmpsl
cmc
xchg
roll
and
push
test
pusha
cs
jns
jmp
incl
sahf
cld
loope
test
fs
sbb
mov
shll
inc
mov
lret
pusha
xchg
jp
cmp
dec
inc
xchg
pusha
mov
jns
pushf
inc
stos
pusha
pop
sub
in
cld
cwtl
es
pusha
rcll
out
cltd
dec
adc
adc
pop
adcl
stos
pusha
or
cmc
rep
sbb
xor
adc
andl
loope
in
jl
mov
sbb
rcll
loopne
sbb
lcall
pusha
dec
pop
xor
clc
das
aas
mov
ljmp
lods
mov
mov
xchg
loopne
xor
xor
shll
fwait
bound
and
cmpsl
pop
jp
inc
lock
roll
pusha
or
into
add
pusha
aaa
mov
xor
jp
pusha
adc
mov
mov
mov
aaa
insb
imul
sti
inc
xchg
inc
adc
shll
inc
aam
mov
inc
xor
imul
jo
and
mov
movsl
pusha
test
push
in
lret
pusha
add
outsb
std
dec
jge
ds
lds
adc
aas
xchg
dec
int3
pusha
fiadds
enter
mov
push
leave
das
fmull
pop
add
push
dec
loope
cltd
inc
pop
bound
jecxz
nop
pusha
fcmovu
mov
sbb
mov
mov
scas
xor
pusha
jae
cmpsb
cmp
test
je
pop
sti
cli
xchg
scas
mov
cmp
push
iret
xchg
pusha
push
pop
ret
fdiv
pusha
movsl
shrb
push
out
test
dec
pusha
sub
scas
fs
xchg
cmp
sub
movsl
pusha
xlat
arpl
pushf
mov
adc
and
shll
lock
stc
jl
mov
call
dec
push
dec
pusha
stc
mov
cmc
mov
mov
popa
test
xorb
xchg
xchg
xchg
jg
sbb
or
pop
pusha
inc
jne
out
jmp
push
mov
and
test
ljmp
dec
enter
aas
pushf
xchg
fstp
ret
loopne
push
fadds
loop
jne
xchg
cmp
xor
push
inc
fisubs
dec
icebp
xorl
jge
sub
in
push
xchg
pusha
test
jno
out
cwtl
arpl
out
jge
push
mov
pop
outsb
jmp
sub
popf
or
pop
pop
pop
dec
pop
sub
mov
mov
cmpsb
insb
pusha
sub
jo
mov
ret
pop
pop
cmp
shlb
fwait
xchg
cmp
cltd
push
adc
xchg
lret
pusha
lods
mov
push
fdivs
je
pusha
mov
sub
or
outsl
xchg
adc
mov
pusha
stc
mov
jl
into
fsubrs
loope
stos
inc
jmp
pop
mov
pop
fs
or
es
pusha
push
imul
jne
aam
leave
shll
lock
nop
pusha
out
shll
lods
jo
sbb
dec
add
sqrtps
mov
dec
mov
pop
pusha
popa
daa
xchg
std
cld
mov
clc
pusha
bound
xlat
dec
ret
add
push
add
pop
sbb
xor
test
xorb
sti
lret
mov
das
sub
pop
jl
mov
lcall
movsb
test
pusha
cmpl
xchg
push
jecxz
mov
pusha
sbb
loope
iret
das
cmp
pusha
test
adc
int
push
pusha
in
clc
stos
sub
shlb
jp
mov
add
jo
jmp
pusha
and
arpl
dec
lret
jle
push
iret
pusha
fldenv
loope
push
rcl
pop
jno
andb
sahf
imul
jle
dec
or
pop
sub
dec
mov
mov
xor
sbb
xchg
jecxz
pop
pusha
test
rcll
test
cmp
xor
cmpsb
cwtl
mov
lds
xor
mov
lret
add
inc
inc
pusha
les
out
int
in
xchg
lret
push
and
fwait
cld
add
pusha
jl
cmp
jnp
pop
mov
sub
pusha
and
dec
or
ljmp
mov
out
xor
shl
nop
loopne
inc
and
or
test
pusha
mov
pop
dec
in
loope
fwait
call
and
mov
sbb
stc
pop
mov
movsl
dec
popa
xchg
sub
ficoms
imul
inc
sar
push
shll
or
imul
jbe
xor
fsubs
mov
je
pop
add
sbb
xor
mov
mov
orl
adc
test
pusha
stc
loop
xchg
push
fsubs
loope
fcmovnu
cmp
sbb
ja
out
pop
adc
pusha
sub
inc
insb
jle
jne
in
jb
pusha
jmp
in
imul
push
jg
enter
pusha
into
addr16
mov
imul
mov
cmp
and
mov
mov
mov
pusha
mov
push
ss
loope
pusha
mov
adc
enter
sbbb
lds
and
push
push
sub
mov
jecxz
pusha
sub
lret
gs
rcl
pusha
pop
mov
in
insb
jnp
mov
ficomps
lods
push
xor
pusha
popa
mov
and
loope
jne
call
sbb
sub
dec
pop
inc
bound
mov
das
fs
or
push
int3
add
sbb
cmp
xor
sub
dec
mov
push
fs
inc
ljmp
pop
pushf
adcb
rorl
mov
lock
mov
add
insl
push
shll
inc
cld
negb
inc
pop
mov
incb
cmp
pop
pop
push
mov
sub
jmp
mov
ret
leave
and
pop
cli
xchg
data16
adcb
pushf
xor
inc
daa
inc
xchg
pop
and
aam
rorb
leave
rcll
js
loope
bound
xchg
add
push
inc
jnp
xlat
fs
mov
rcrl
jo
push
iret
or
fs
push
fs
push
jae
andb
and
pushf
dec
bound
pop
dec
cld
fidivrs
mov
adc
adc
rol
xor
aam
and
jb
dec
rcr
xlat
dec
pusha
push
jbe
lahf
subb
loope
lret
jbe
test
dec
xor
dec
mov
fs
movsb
xchg
stc
orl
sarl
hlt
mov
mov
push
ja
jo
lock
pusha
jl
mov
test
scas
sbb
xchg
adcl
add
push
sub
xorb
sbb
stos
xchg
imul
popa
sbb
fcomps
push
ljmp
dec
and
mull
push
mov
fnstsw
jnp
sub
lds
ret
ret
cld
xor
sbb
push
push
xlat
aas
ss
sbb
fs
jns
cmp
loop
jp
adc
push
jns
push
loope
insl
sub
mov
pop
mov
sarl
push
sub
jg
out
scas
shlb
jl
popf
stc
push
mov
xor
call
pusha
shl
cwtl
mov
xor
repz
stos
xchg
dec
inc
loope
adc
pop
scas
out
mov
mov
sbb
sbb
mov
dec
push
ror
and
fisttps
jl
xchg
push
insb
cli
sbbb
mov
fldt
sub
pop
dec
leave
loop
imul
xchg
pushf
push
xor
cs
es
xchg
inc
dec
cmp
sub
sbb
xchg
test
shr
adc
add
insl
fbstp
mov
inc
mov
xchg
mov
dec
lret
xchg
dec
rolb
push
push
add
je
sub
push
xor
pop
data16
jp
push
jbe
mov
mov
repnz
pop
xor
xchg
shlb
jmp
inc
dec
in
imul
iret
inc
mov
adcb
rol
pop
ret
adc
xor
pushf
adc
jnp
sub
les
sbb
sub
iret
rcrb
std
and
cmp
jg
enter
push
icebp
inc
mov
and
movl
pop
je
mov
call
imul
fwait
adc
pusha
sub
xor
testl
pop
rorb
cmp
mov
lcall
in
jo
pusha
pop
inc
dec
xor
xchg
pop
pop
bound
shll
inc
repz
xorl
and
and
mov
setp
xor
test
xchg
jl
pushw
pushl
adc
lahf
pusha
cmpsl
inc
ret
mov
fadd
ds
stc
movsb
in
sbb
aam
pusha
or
loope
jb
dec
pusha
cs
popf
ret
pusha
int3
ds
cmpsb
mov
jne
repnz
shlb
out
hlt
loopne
pusha
scas
sbb
xchg
insb
add
pusha
inc
push
lods
and
xor
ljmp
or
push
xchg
pusha
push
loope
icebp
or
es
mov
add
or
jmp
adc
cmpsl
mov
sub
movsb
hlt
mov
sarb
jmp
aas
out
mov
pop
sbb
out
xor
jp
jg,pt
repz
inc
jecxz
pusha
cmp
fistpl
mov
outsb
mov
ds
mov
push
adc
adc
cmp
popa
push
lahf
mov
jmp
push
loope
sti
dec
pusha
out
leave
fstps
sar
pusha
and
into
dec
xor
add
fbld
xor
shl
shll
pop
jecxz
mov
cmp
push
mov
xor
ss
int
lcall
sub
clc
pop
mov
fsubs
pop
inc
jmp
push
in
mov
in
cmc
lods
stc
pop
inc
pop
push
add
inc
mov
xor
lahf
imul
jl
fchs
das
inc
js
mov
push
xchg
pop
jbe
xchg
out
pusha
add
fnstenv
loopne
fldl
jmp
cmp
cmp
out
fwait
cld
sub
outsb
imul
xchg
xor
push
mov
sub
xchg
call
or
adc
imul
pop
adc
enter
inc
clc
faddl
les
and
repz
sbb
mov
lret
or
enter
add
mov
insb
movsb
lcall
sbb
sarb
sub
out
loopew
bound
arpl
inc
cmpb
cmp
mov
fistl
aaa
mov
adc
and
mov
sub
and
jo
push
and
ret
ret
icebp
cmpb
test
xchg
jle
cmpsl
stos
bound
decl
jp
fmuls
daa
dec
shlb
mov
xchg
stc
jbe
das
lahf
sar
push
sbb
fwait
push
xchg
adc
popa
push
loopne
jbe
gs
push
sbb
or
rcrb
pop
dec
xchg
daa
gs
jp
outsl
push
xchg
inc
adc
mov
push
pop
cwtl
ret
notb
jae
imul
stos
int
stc
mov
bnd
pop
lock
or
sahf
cmpsb
out
sbbb
in
cmpsl
dec
mov
sbbl
lock
xchg
dec
xor
sub
outsb
xchg
shlb
dec
mov
cmp
adc
shl
lds
shlb
bound
shll
and
fists
test
test
test
iret
stc
add
out
in
push
out
or
pop
das
ret
mov
push
cli
add
xor
lock
add
dec
adc
pusha
pop
cld
xchg
cmp
fs
pop
clc
inc
in
push
sbb
pusha
sub
cmp
pusha
bound
xor
insb
rcll
fs
sbb
push
pusha
cld
inc
mov
sbb
testl
fists
jecxz
jnp
pusha
mov
sbb
add
add
repnz
push
fidivrl
cmpsb
lret
mov
dec
aas
mov
loopne
inc
pusha
sbbb
mov
adc
xchg
in
jecxz
jl
and
jno
and
mov
repz
xchg
mov
jg
sbb
into
mov
lret
lock
ficoms
pop
int3
pusha
dec
int
jle
out
enter
push
test
imul
xor
pusha
dec
stc
imul
cltd
cmp
and
ror
jl
popa
mov
movsb
jge
scas
jb
movsb
pop
cmpsb
bound
mov
and
pop
inc
pusha
icebp
xchg
enter
iret
sub
outsl
pop
xchg
fwait
stos
inc
inc
pusha
orb
shll
test
mov
pop
adc
dec
lret
jno
mov
mov
sbb
into
les
cmpb
lods
sbb
xchg
xchg
jl
cwtl
push
inc
je
stc
fidivl
dec
jl
jae
repz
mov
mov
dec
scas
lahf
and
ret
iret
mov
xchg
loopne
xor
aaa
jmp
sub
or
and
push
andb
out
cs
sub
aas
into
shll
in
pusha
and
inc
inc
cld
sahf
in
ficoms
cmp
fs
and
es
loope
xchg
adc
pusha
sbbl
lahf
pusha
pop
xchg
test
sti
inc
inc
sub
mov
push
shll
jbe
aas
cli
btc
sbbb
and
fsubl
dec
add
pusha
inc
push
mov
add
jae
cmp
jmp
jl
ss
jno
jecxz
int3
int
mov
cmpsl
and
out
test
xchg
cmp
pusha
enter
in
std
push
movsb
sub
pop
sub
mov
inc
jecxz
jmp
leave
pusha
stc
lods
sub
mov
lcall
rcrl
sbb
push
sub
aas
fdivl
xchg
data16
pusha
or
sbb
test
dec
pop
arpl
pusha
outsb
xor
mov
adc
loope
int3
lret
ret
xor
and
repz
div
pusha
inc
mov
jecxz
out
lea
mov
insb
cmp
dec
cli
xor
les
fstl
jge
xchg
divl
jle
or
rol
dec
int
pusha
xor
and
cld
pusha
out
jns
cmp
jp
and
jge
mul
jae
daa
lret
jl
shl
out
fidivs
pop
pusha
cmp
inc
push
fs
mov
xor
pusha
fcomps
pusha
leave
jecxz
jp
xchg
jl
or
imul
sub
bound
je
fs
sub
and
loopne
cltd
pusha
cmpsb
ja
add
ss
sbb
pop
outsb
scas
out
dec
pop
pusha
mov
adc
jecxz
push
fbstp
sub
xlat
les
pusha
push
mov
mov
add
clc
inc
inc
pusha
ss
adc
std
cltd
cs
xor
jmp
or
mov
insb
push
shlb
imul
icebp
dec
inc
shlb
idivb
adc
pusha
push
adc
mov
push
jne
pusha
add
or
lret
jae
mov
mov
pop
pusha
add
xor
iret
paddd
xchg
negb
imul
jnp
jecxz
jbe
xchg
mov
mov
shlb
jl
push
cmp
inc
loopne
adc
pusha
jmp
fnstenv
and
test
mov
subb
andl
mov
jecxz
leave
lret
sbb
fnstenv
adc
mov
js
ds
lods
cmc
mov
mov
clc
pusha
outsl
imul
push
cmp
pop
dec
roll
mov
mov
movsl
pusha
xor
jae
sub
xchg
cwtl
sub
lret
test
adc
pusha
push
xor
add
jno
fldt
cmp
add
adc
or
faddp
add
addr16
pusha
cmp
mov
pop
mov
adc
fnclex
gs
or
adc
loope
jecxz
and
cli
cltd
in
test
cmp
jl
leave
enter
gs
push
mov
pop
jg
outsb
jbe
call
pusha
stos
xchg
dec
pusha
sbb
mov
dec
pusha
mov
push
mov
pusha
xchg
out
insl
popf
mov
js
push
add
pusha
dec
sbb
bound
cmpl
pusha
dec
pop
mov
sti
stc
lcall
pusha
or
pusha
xchg
xor
jl
dec
dec
sub
imull
cmc
jmp
arpl
cmp
push
lahf
aas
pop
aam
into
mov
rclb
loope
jecxz
nop
pop
mov
jmp
mov
jge
fildl
adc
jg
pop
sarl
shll
dec
jl
cmp
sub
ljmp
pusha
ljmp
je
pop
sub
or
push
out
sub
int
or
xor
bswap
inc
fistpl
sbb
out
pusha
jmp
mov
or
stos
adc
lds
cmpsb
xor
pusha
sub
gs
inc
pusha
ret
out
mov
add
andl
inc
fwait
cmp
test
das
pusha
or
xchg
cmpb
xor
lods
je
push
roll
pusha
mov
out
arpl
insl
ret
outsb
stc
out
mov
data16
mov
lret
xchg
xchg
lds
sub
adc
cmp
pusha
push
mov
lret
insb
mov
add
mov
lea
xlat
in
pop
pushf
arpl
jp
pop
lcall
in
mov
jg
sbb
pusha
stos
rolb
mov
dec
pusha
inc
movsb
adc
punpcklbw
aas
aad
mov
pop
pusha
addb
or
pusha
popf
sbb
push
dec
pusha
ffreep
lret
push
movb
cmp
add
lock
hlt
jge
push
mov
and
inc
xor
jmp
je
out
xchg
mov
adc
aam
lods
pusha
loopne
sub
push
gs
mov
xchg
jge
imul
fs
ja
mov
movsb
pusha
xor
adcl
pusha
out
sbbl
ficomps
scas
sbb
push
mov
ss
je
rcll
out
loope
pusha
popf
pushf
outsb
dec
fsubrs
pusha
int
addr16
mov
cwtl
jl
lock
ds
ljmp
ror
sarl
add
dec
sub
push
pop
mov
cld
nop
sbb
mov
sbb
cmpsl
add
imul
push
test
pusha
insb
scas
repz
cmovnp
and
xor
and
les
arpl
in
fsubrl
int
mov
mov
movsl
and
pusha
adc
outsb
mov
pusha
enter
mov
adc
dec
dec
das
push
pusha
cwtl
fwait
jmp
jecxz
inc
shrl
loope
cmp
jae
dec
add
negl
pop
frstor
xor
inc
push
lods
mov
xchg
adc
call
rcrl
adc
mov
jmp
pusha
sbb
push
out
out
pusha
int
mov
imull
repz
xchg
aas
cmc
mov
jb
mov
insb
push
inc
push
cmpsl
into
mov
cmp
xchg
subl
dec
mov
add
fsubp
jns
pop
pop
leave
mov
out
mov
and
pusha
ljmp
jne
hlt
xchg
aam
jbe
loope
jb
push
jmp
les
mov
dec
incl
pop
dec
and
lock
mov
pop
inc
arpl
xchg
test
and
mov
ret
jae
fistps
xrelease
inc
cmp
add
mov
shl
inc
pusha
imul
stos
rcll
stos
lcall
cmp
add
sbb
ja
gs
and
pop
pusha
adcb
inc
inc
xor
xchg
lds
pop
push
shlb
jge
fbstp
roll
int3
pop
insb
std
scas
mov
pusha
cld
fstpl
lods
sbb
add
sar
test
cmp
mov
ret
dec
mov
bound
adc
mov
stos
cmp
and
ret
insl
dec
mov
jl
sub
sbb
and
mov
pop
sub
mov
shll
hlt
imul
iret
jg
mov
lods
push
pop
shlb
sbb
test
out
mov
adc
pusha
xchg
xchg
in
out
dec
bound
mov
pop
lret
aam
inc
lcall
jl
mov
pushf
pop
aam
pusha
push
xlat
fadd
mov
mov
daa
ja
arpl
andb
test
pop
xchg
xchg
pusha
les
push
lea
lods
stos
pop
testb
mov
jns
xchg
mov
subl
pop
inc
cs
push
fidivrs
mov
repnz
pusha
loop
lock
adc
clc
or
out
cld
mov
xchg
dec
pop
cmpsl
pusha
inc
cmc
jmp
lahf
scas
pusha
mov
add
push
pop
outsb
rcrb
loopne
popa
mov
into
jl
add
inc
add
pop
lret
stc
pusha
movl
push
andl
adc
dec
mul
pusha
or
insb
pop
and
inc
andl
mov
and
and
push
mov
das
cmc
repz
stos
mov
and
mov
iret
pusha
aas
popa
cli
rolb
repnz
pop
cs
cmp
pop
xchg
dec
hlt
pusha
or
push
fcomps
or
mov
pusha
push
cli
xor
fmul
mov
in
out
mov
lcall
xlat
xor
ss
cwtl
fistpll
push
pusha
fstl
clc
push
fs
xor
lcall
sahf
mov
mov
mov
push
sbb
pusha
jnp
in
mov
inc
lahf
pusha
xor
popf
jo
rclb
test
mov
push
fistps
pusha
xchg
aad
outsb
jns
adc
sbb
lahf
inc
jo
push
imul
push
adc
call
xor
cld
js
adc
mov
or
pusha
cs
xchg
daa
lahf
mov
sub
mov
xchg
pusha
push
dec
scas
js
inc
fwait
sub
iret
orb
bound
xor
pusha
call
enter
mov
cmp
push
xlat
pop
push
pop
ret
jne
sub
jg
jb
pusha
pop
fwait
dec
loop
mov
lock
scas
bound
ss
cmpsl
add
push
lahf
jecxz
bound
add
aas
test
mov
pusha
add
adc
sti
pusha
inc
test
imulb
aas
in
cltd
loope
mov
popf
xorl
mov
mov
sbb
test
stos
out
pusha
pushf
pop
stc
push
loope
sahf
push
mov
dec
stos
mov
xchg
pusha
jp
mov
jle
test
inc
in
je
ja
movsb
dec
add
cli
adc
sub
mov
mov
sub
loopne
sbb
pop
xchg
jecxz
aam
xor
in
inc
mov
mov
movsb
pusha
iret
xchg
mov
xchg
pusha
ss
sub
cmpsl
dec
dec
cwtl
pusha
mov
sbb
repnz
je
stc
std
mov
hlt
cmp
sub
xor
pusha
mov
mov
and
les
orb
insb
inc
inc
shlb
roll
lret
pusha
push
pop
cmp
cmp
xor
push
push
popa
mov
mov
cmp
popf
pusha
pusha
adc
pusha
sbb
push
dec
cld
aas
mov
xor
jecxz
hlt
dec
pusha
inc
loop
mov
test
or
sub
cwtl
jl
add
dec
mov
orb
xor
les
pusha
jle
jo
adc
jecxz
inc
sbb
jle
push
mov
adc
sbb
dec
popa
lea
mov
clc
mov
js
push
or
pop
int
orl
int3
pop
adc
jge
cmpsb
popa
loop
jg
pusha
addr16
adc
dec
push
mov
inc
popf
js
xor
push
popa
scas
pop
inc
add
inc
jns
ret
sbb
dec
scas
jg
pusha
cwtl
xchg
sti
cli
les
inc
call
jl
push
dec
loope
adc
push
pusha
adcl
xchg
push
call
mov
imul
pop
adc
sub
mov
test
cwtl
sbb
insb
ljmp
xchg
ret
jmp
insb
in
sbb
pushf
push
pusha
repnz
mov
pusha
hlt
and
inc
dec
aas
mov
lcall
and
adc
xor
push
xor
imul
mov
or
pop
insb
icebp
xor
movsl
pusha
and
push
xchg
pusha
enter
popa
sub
inc
mov
stos
pusha
mov
and
cld
fstpl
outsl
test
cs
cmp
jge
xor
sbbb
pusha
imul
cmpsb
xlat
mov
ret
jae
mov
mov
test
aas
pop
movsb
xorb
mov
mov
pop
aaa
scas
lds
daa
sbb
shrb
mov
sbb
cmp
pop
or
xor
add
inc
xchg
mov
adc
cmp
dec
mov
mov
ret
mov
add
and
xor
jle
cmp
dec
jge
scas
sub
inc
insb
pusha
ss
push
jne
or
arpl
inc
mov
cmpsl
js
mov
cwtl
dec
xor
mov
add
test
mov
pop
out
xchg
pusha
or
lahf
pusha
jne
add
sub
jo
cli
xchg
pop
dec
mov
or
mov
fldt
scas
insb
ds
push
xchg
cmpsl
insl
xchg
aam
pop
pop
ret
test
inc
shlb
inc
in
cmpsb
repnz
push
add
repz
adc
cmp
sbbb
add
js
iret
push
ss
mov
mov
pop
adc
xor
jne,pn
cmp
jo
push
data16
arpl
cmp
loopne
and
jle
jne
jl
test
pusha
int
cmp
xor
sub
pop
out
mov
cld
lods
int
inc
and
pusha
pandn
or
arpl
mov
inc
push
orb
lods
sub
push
in
xor
and
cmp
imul
lock
inc
push
cwtl
ljmp
jle
xchg
pop
sbb
fwait
mov
adc
push
repz
pop
rcll
jge
lods
arpl
mov
jbe
sub
aaa
and
and
movsl
gs
aas
mov
jne
xor
in
cmp
xchg
pusha
ljmp
lods
pop
lret
shlb
inc
xchg
and
cmp
cmp
in
pop
dec
xor
repz
push
insb
aad
paddq
mov
and
out
outsl
jecxz
sbb
jle
icebp
mov
loop
adc
mov
mull
mov
cmpsb
xchg
pusha
nop
loop
in
ljmp
cmp
inc
pop
add
addr16
mov
arpl
ds
jle
sbb
pusha
or
cmpsl
fs
or
insb
or
mov
hlt
insl
add
xchg
mov
or
in
incl
mov
adc
pop
int3
fs
push
push
shll
mov
stc
dec
data16
pop
pusha
fsubrp
mov
pusha
push
iret
sbb
pop
pusha
pop
ja
or
mov
sub
pop
cli
in
and
leave
loop
loope
ret
shr
sub
adc
fs
xchg
cmp
cmp
stos
es
pusha
outsb
and
orb
fisttps
rclb
pushf
pop
popa
arpl
sbb
pusha
xchg
cmpsl
ljmp
pop
sbb
fbld
sti
add
test
test
pusha
pop
out
subb
cs
push
pusha
ret
subl
xchg
xor
shll
add
xchg
sar
push
addl
adc
cmp
icebp
orb
push
loopne
add
insl
mov
and
aam
imul
rcll
ret
dec
cwtl
into
in
inc
inc
push
mov
jne
or
divb
nop
or
in
and
xor
movsl
mov
lea
dec
mov
and
out
pusha
dec
das
mov
sub
fstp
pop
xchg
mov
push
insb
xor
fs
sub
xchg
lahf
cmp
int
mov
or
push
loope
outsl
sbb
cmp
mov
cld
push
ret
shll
imul
push
cs
loope
cmovle
das
sbb
popa
movsl
rol
mov
aam
mov
rorl
lods
cmp
adc
sahf
int
add
pop
pop
ja
mov
adc
xchg
mov
dec
and
divl
mov
cmp
jnp
or
pusha
ja
lods
cmp
pop
test
add
sahf
inc
pusha
gs
in
jge
repnz
dec
dec
pop
adc
adc
sbb
aam
mov
jp
or
pop
stos
pusha
pop
test
subl
push
and
enter
arpl
in
notb
and
cmc
mov
push
cltd
movsl
mov
insb
pop
testl
repz
sti
imul
data16
push
in
imul
mov
or
test
stos
jbe
mov
pusha
rolb
pop
fldcw
and
nop
mov
lods
push
cltd
xchg
fsubs
pusha
rclb
mov
add
into
test
aad
inc
mov
pop
cmp
jle
pop
stos
lods
pop
pusha
jl
sahf
mov
push
jg
pusha
enter
mov
pusha
xchg
dec
inc
sub
adc
cmpl
xor
insb
scas
mov
jl
pop
test
aam
test
inc
xor
sub
pop
sub
xchg
jbe
push
dec
and
add
xor
pusha
lock
insl
xor
pusha
stos
dec
aam
and
sub
jl
in
xchg
mov
jg
cltd
mov
mull
xchg
addl
lcall
enter
mov
mov
jecxz
mov
or
mov
mov
jb
ret
and
imul
fnstsw
jns
cmpb
xchg
pop
inc
sub
xlat
xchg
mov
sbb
dec
push
pusha
daa
testb
fdivrs
adc
mov
stos
pop
push
jecxz
mov
shlb
cmc
cmp
ljmp
pusha
lods
push
add
adc
xorl
shll
jl
mov
cmc
pushf
pusha
outsb
lahf
mov
jo
xchg
push
mov
lds
mov
insb
pop
insl
mov
mov
movsl
push
iret
sbb
jae
xor
sbb
sbb
pushaw
sub
aam
ja
push
sub
pop
in
pusha
sbb
sbb
ljmp
popf
pop
sub
and
rorb
push
roll
bound
std
add
repnz
outsb
inc
fcomi
sub
pop
cmpsl
inc
sub
add
out
cld
mov
jle
jmp
sbb
int3
lods
inc
jne
frstor
movsb
mov
lea
pop
xchg
dec
ljmp
add
fdivp
pop
cmp
insb
jbe
cld
into
xchg
jne
arpl
out
aaa
pusha
push
rcr
fstps
mov
pop
and
scas
jl,pt
aas
pop
push
cld
and
pop
lret
mov
dec
cmp
mov
jbe
out
frstor
fisubl
fldenv
mov
popf
sarl
hlt
imul
cltd
ret
jmp
pusha
popa
and
stc
loope
test
addr16
or
pop
xor
mov
lea
popa
je
xor
sahf
sbb
mov
gs
pusha
les
mulb
mov
repnz
loope
pop
adc
and
mov
loop
loopne
shll
xor
jecxz
push
arpl
sbb
popa
push
dec
cmpsb
cmp
repnz
sub
push
sahf
fisubs
lret
pop
insb
cmp
hlt
loopne
ror
aas
leave
ss
pushf
xor
mov
sbb
bound
cmp
leave
xor
adc
mov
add
aad
push
dec
out
rcrl
inc
pop
and
cmpsb
aad
add
sbb
or
outsl
sub
addr16
mov
pop
add
gs
sbb
xchg
cmp
out
lods
mov
mov
pop
icebp
sub
mov
jmp
enter
fsubrs
push
xchg
or
xchg
lods
int
and
cli
mov
add
jae
int3
sbb
nop
mov
in
push
cmpsb
jg
loope
es
mov
int3
or
pusha
int
xor
or
divb
stos
mov
in
pop
push
and
push
scas
or
std
ljmp
jb
push
inc
in
jecxz
inc
pusha
ret
mov
sbb
jo
scas
out
ljmp
jne
mov
jecxz
inc
aas
pusha
cmp
push
jmp
sbb
mov
lea
frstor
pop
adc
pop
in
divb
testb
mov
std
sbb
adc
test
mov
bound
lds
sub
push
xchg
push
mov
push
adc
lret
pusha
mov
push
sub
mov
enter
jns
sbb
sub
repnz
lahf
jp
cmp
fpatan
pop
sbb
arpl
add
push
adc
pusha
movsb
inc
rclb
lcall
daa
out
dec
in
jb
sub
mov
dec
mov
mov
imul
jp
movsb
es
pop
lock
fildl
fistl
pusha
inc
sbb
push
popa
repnz
iret
call
ret
jnp
adc
pusha
xchg
push
movb
out
xchg
test
popf
push
stos
mov
repz
pusha
ds
sub
out
sub
push
dec
andb
aam
lea
mov
dec
inc
repnz
ss
addr16
loopne
mov
roll
push
pop
decl
repz
les
fwait
aaa
ficoml
mov
push
iret
popf
ss
int3
sbbb
xor
js
add
aam
testl
mov
out
adc
adc
and
jmp
pusha
pop
cltd
jb
or
lea
cmc
pop
mov
fimuls
sbb
dec
das
incl
ret
push
adc
lds
push
popa
sbb
mov
adc
popa
rolb
stc
cmp
cs
movsb
cmpsb
outsb
sahf
gs
out
aam
popf
push
push
addr16
in
mov
jae
adc
fstps
push
out
or
pop
pusha
not
int
repz
jl
xchg
add
movsl
pushl
movsb
ljmp
in
ficompl
addr16
xor
out
add
in
sub
adc
mov
or
pop
lahf
or
cs
loopne
call
cmpb
sti
outsb
pop
and
pusha
jne
insb
mov
mov
pusha
aaa
inc
jmp
inc
hlt
add
add
out
rorl
pusha
pop
loopne
idiv
hlt
fwait
push
data16
fsubrl
inc
or
pusha
xor
aad
pop
cld
fisttpll
pusha
iret
adc
jo
insb
out
filds
push
arpl
and
out
add
sbb
jmp
adc
push
xchg
popa
pop
pop
test
push
add
sub
aad
mov
xchg
sbb
xlat
push
pusha
and
add
pusha
push
push
addr16
mov
pushf
pusha
sbb
mov
or
jo
out
pusha
rorb
loopne
xchg
outsl
scas
pop
push
std
bound
xor
jnp
and
sub
pusha
add
push
mov
mov
idivl
arpl
outsl
xor
pop
repz
push
dec
fs
int3
mov
dec
push
loopne
pcmpgtb
pop
out
xchg
push
add
jae
decb
jbe
mov
xchg
pop
mov
lcall
inc
loop
out
mov
pusha
pop
outsb
add
fs
pop
jmp
mov
adc
cmp
ss
mov
lock
inc
fs
or
das
pop
pusha
mov
xor
add
pusha
xor
cwtl
cmp
loop
push
scas
into
sar
pusha
popa
mov
jp
sub
repz
pushw
int3
pusha
in
or
pusha
idivb
fstpl
insb
jbe
pusha
pop
push
arpl
shl
mov
movsb
pop
mov
adc
jo
and
popaw
sbb
pop
fcmovne
pusha
dec
test
push
push
repnz
mov
xor
mov
xlat
dec
mov
gs
inc
pop
jle
in
jp
lcall
imul
jno
in
dec
cmp
jo
and
dec
sahf
mov
push
cmc
push
arpl
test
cmp
imul
enter
sub
pop
loope
and
add
mov
mov
je
loope
adc
fdivrs
testb
add
mov
push
pusha
js
ljmp
mov
std
xchg
sub
and
jbe
mov
adc
insb
mov
addr16
fsubs
aam
jne
in
pop
pusha
or
rclb
fs
js
test
andb
pusha
in
insb
mov
pusha
mov
loopne
repz
in
dec
popa
jl
outsb
xor
cltd
out
pusha
arpl
movsb
push
xchg
shlb
or
or
mov
sbb
jo
inc
sbb
xchg
push
cwtl
jmp
mov
cwtl
push
fwait
popf
subl
popa
jbe
rclb
shr
fdivrl
dec
push
mov
pusha
popf
scas
dec
pop
aaa
clc
cld
and
jmp
adcb
jl
incl
inc
frstor
jne
lret
cwtl
pusha
movsl
dec
mov
cs
sub
in
mov
cmp
pusha
mov
add
test
mov
je
xchg
fistpll
push
or
loop
repz
pusha
xchg
addr16
arpl
pop
insl
mov
lock
mov
in
xor
add
dec
rolb
pusha
push
mov
in
cmpsl
cli
adc
push
cltd
mov
xchg
loope
pusha
xor
ljmp
xor
std
ss
leave
dec
pusha
in
adc
dec
sbb
inc
mov
and
sarl
stc
std
cwtl
pushf
ljmp
sbb
pop
stos
loop
dec
and
jl
sub
adc
std
jne
pusha
adc
das
dec
out
rolb
les
or
add
xor
push
sbb
clc
adc
adc
dec
fistpll
or
je
pusha
inc
mov
stc
pusha
data16
orl
add
fcmovnu
js
clc
mov
pusha
and
sbb
pop
xchg
pusha
nop
dec
mov
jp
push
adc
stc
aam
cmp
sar
and
pop
pop
outsb
jbe
dec
pusha
dec
adc
out
push
adc
imul
lods
pusha
popf
jns
xchg
out
js
jl
in
sub
and
testb
push
dec
jp
and
out
dec
adc
sbb
xchg
pop
xchg
mov
jne
inc
pop
nop
ret
sub
in
cmpsb
xchg
inc
adc
insb
jne
push
jbe
mov
xchg
pusha
mov
out
mov
imul
adc
fists
shr
adc
cmp
dec
dec
jg
loop
sbb
xchg
and
push
notl
push
or
jbe
pop
cld
xor
orb
jg
push
mov
add
fsubs
push
jge
loopne
ss
shll
sbb
shlb
sbb
test
sbb
lods
jecxz
iret
shll
push
ret
xor
fsubl
xchg
xor
push
aas
loop
iret
pop
popf
dec
and
inc
popa
pop
push
filds
xor
movsb
divl
aam
shl
lret
xor
add
cmp
lahf
push
or
pop
inc
push
mov
aaa
xchg
mov
popf
adc
mov
scas
push
xchg
xchg
ljmp
mov
jmp
cmpsb
jl
enter
cltd
or
add
stos
jle
dec
addr16
push
out
out
push
pop
jp
push
xchg
mov
sub
stc
inc
sbb
ss
js
cmpsl
push
bound
ret
loop
jecxz
sub
hlt
roll
inc
fcomps
jae
into
jp
insl
clc
mov
sbb
inc
iret
inc
cmp
loopne
lods
arpl
mov
sti
fs
xchg
scas
xchg
pop
lahf
push
mov
dec
pop
int
xor
push
popa
mov
outsl
mov
pop
push
les
mov
jae
sahf
xchg
add
mov
pusha
ss
inc
lret
shll
add
mov
int3
insl
mov
arpl
xchg
xchg
cltd
pusha
jp
lret
mov
es
jl
adc
dec
pusha
add
pushf
fistpl
jne
push
push
cmp
aaa
cmp
xorb
loop
cmp
into
pop
push
cs
push
icebp
test
scas
repnz
pusha
or
mov
jl
leave
jmp
lret
arpl
scas
sahf
jl
pusha
daa
pop
mov
das
pusha
jg
movsb
add
cmp
jp
repnz
out
outsl
push
add
call
add
in
and
loope
js
lods
psubsb
and
xor
cmpsb
iret
out
popa
sahf
movsb
add
xchg
int3
mov
aam
push
inc
pop
cmp
fs
es
das
mov
dec
jecxz
sub
lods
int
xchg
cs
loope
jmp
push
xchg
xchg
xor
and
jecxz
sahf
xor
jmp
mov
enter
and
dec
jl
pop
loope
and
xchg
mov
dec
mov
pop
loopne
pusha
pop
ss
push
jmp
jl
std
xlat
arpl
repnz
test
mov
mov
dec
in
xchg
pusha
int3
inc
adc
pop
ficompl
dec
sbb
pusha
inc
xchg
into
cwtl
enter
pusha
aad
xchg
jne
inc
rol
shlb
cmp
push
and
outsl
pop
loope
dec
pop
inc
cmpsl
inc
adc
pusha
cmpsb
push
inc
jle
pusha
orl
cmp
pusha
wrmsr
adc
push
shlb
jnp
lahf
xor
jns
or
cmpsb
xchg
repnz
push
cltd
iret
pop
fldenv
inc
add
imul
push
ljmp
dec
or
lret
int3
pop
test
xchg
pusha
cld
push
mov
movsb
fs
mov
das
mov
out
and
insl
mov
popa
or
lea
les
mov
mov
push
in
popa
pushf
mov
mov
inc
scas
ret
out
pusha
add
lods
std
movsb
frstor
pop
mov
adc
jno
dec
mov
xor
pusha
mov
mov
cmp
fdiv
jbe
dec
bound
or
dec
or
pop
das
jl
inc
shll
fimull
jl
jnp
mov
out
iret
movsb
mov
int
sbb
arpl
pop
dec
pusha
jno
mov
cli
sub
loop
sbbb
pop
insb
inc
ror
out
xchg
mov
sub
arpl
sub
push
lods
lret
mov
pop
inc
xor
into
pop
jno
xor
test
xchg
out
popa
loop
into
cmpsb
push
outsb
jge
jge
xor
pusha
adc
dec
lods
mov
cmp
pusha
xchg
movsl
dec
call
jp
cmpsl
aad
cld
mov
ret
pusha
jle
cmp
dec
fs
add
cli
pusha
add
pop
push
jne
sbb
mov
subl
fbstp
mov
movsl
mov
int
mov
adc
dec
mov
loope
mov
leave
mov
mov
popf
mov
daa
add
shlb
sub
lret
fs
shll
loop
das
js
mov
test
testl
cmpb
int
sub
pop
mov
iret
ret
cs
icebp
add
popf
pop
add
mov
int3
decl
stos
and
dec
rcrb
popf
jl
lcall
inc
movsb
pop
stos
aas
dec
mov
fstpl
insb
cli
ljmp
sbb
jmp
popa
push
in
les
fildl
xchg
pusha
popa
insb
or
sbb
loopne
jno
xorl
jb
mov
test
dec
sbb
push
add
outsl
add
inc
pusha
jnp
cmp
mov
or
shlb
sub
mov
xchg
je
dec
xor
arpl
dec
icebp
addr16
cmp
pusha
sub
enter
cmp
dec
or
sbb
fisubrl
outsl
pusha
sti
sbb
inc
je
jb
jl
cmp
hlt
inc
bound
mov
out
je
stos
fsubs
pusha
push
negl
push
pop
add
mov
bound
sahf
xchg
jno
repnz
push
dec
pusha
and
inc
orb
xchg
fwait
pusha
or
arpl
pusha
xchg
adcl
pusha
insl
mov
sub
aas
jl
fstl
and
in
pop
pop
pusha
ljmp
jg
sub
sub
pusha
pop
mov
push
sbb
into
mov
adc
cmp
out
push
inc
fcompl
cs
push
movsb
movsl
sbbb
xchg
add
cmpsb
repnz
fistpll
xchg
pop
cmp
pop
rcll
outsl
mov
iret
aas
js
mov
and
xor
sbb
jle
xchg
mov
loop
add
pop
fwait
dec
lahf
sbb
push
pusha
mov
sbb
dec
imul
pushf
cmp
rolb
ss
push
xor
shll
inc
into
pushf
in
test
mov
lret
fisubs
inc
sbb
jg
stos
xchg
pusha
imul
aam
xor
loope
xor
fadd
imul
sahf
popa
mov
loope
sbb
sarl
ljmp
out
push
add
mov
insb
cmp
inc
cmc
and
sub
pusha
and
xchg
dec
xchg
mov
pop
loopne
xor
shrb
movsl
in
mov
int
cli
mov
push
lret
arpl
ljmp
jo
test
jbe
pop
add
sub
jge
repnz
popa
xor
xchg
jae
xor
rorb
js
dec
enter
pop
aam
push
mov
lcall
mov
mov
jns
in
loop
xlat
pusha
addl
lret
and
cmp
jbe
pusha
lcall
and
test
cli
sbb
fimuls
mov
cmp
rolb
pusha
enter
push
push
pusha
mov
xchg
gs
pusha
ljmp
jbe
mov
orl
enter
popf
dec
pusha
loop
stos
into
sbb
dec
les
je
pusha
cwtl
test
mov
cmp
xor
sbb
ret
pop
pusha
mov
cmp
cli
pusha
cmpsl
out
dec
cld
mov
sbb
test
icebp
fdiv
mov
cwtl
ja
arpl
ljmp
decb
dec
sti
or
push
lods
ficoms
jne
pop
callw
cmc
in
loope
mov
in
shlb
inc
xchg
dec
xor
es
push
sbb
sub
xchg
pusha
addr16
or
test
fildl
mov
test
cmp
fimull
push
aad
fs
clc
hlt
insb
add
mov
pusha
fildll
popf
jl
scas
inc
test
arpl
sub
sbbl
fdivl
xor
out
cmp
je
mov
bound
ds
mov
pop
cwtl
jo
dec
xor
and
inc
jno
jecxz
test
stc
mov
rcll
pusha
fisubl
add
mov
test
js
xchg
push
mov
or
sahf
insb
outsl
mov
inc
push
lock
clc
pusha
adc
inc
jne
push
jns
mov
push
repnz
pusha
sahf
push
cmpsl
mov
and
xor
push
cmp
pop
iret
in
scas
adc
cmp
inc
repz
pusha
dec
dec
or
jecxz
jnp
fcmovb
loopne
fstl
cwtl
mov
int
jns
imul
jl
leave
dec
add
mov
mov
cli
fildl
leave
popa
mov
inc
sbb
jecxz
inc
fwait
jle,pt
shl
mov
sbb
insl
dec
in
or
xchg
dec
out
jno
xchg
xchg
cld
xchg
lahf
mov
add
movsb
loopne
push
sub
jbe
jbe
xchg
jnp
sub
xor
fisubrs
mov
push
cmp
test
ljmp
addr16
sbb
sub
mov
and
and
ret
ret
mov
jg
sub
andl
jl
push
jbe
mov
mulb
shll
cmpsl
ficoml
xor
pop
adc
cmpsl
xchg
inc
outsb
scas
jnp
js
mov
ss
mov
inc
push
je
xchg
gs
and
and
adc
andl
add
mov
arpl
push
dec
push
out
xor
xchg
rorb
jmp
and
mov
sub
cmp
push
push
mov
movl
sar
lret
jmp
icebp
lret
fists
popf
inc
mov
mov
pop
push
cmpsb
and
lret
pop
pusha
lret
push
push
xchg
ret
and
pushf
leave
aam
outsl
or
and
sub
and
loope
jne
pop
insl
repnz
ljmp
add
sbbb
push
popf
sbb
sbb
push
push
fnstenv
js
cmp
inc
rcll
pop
push
cmp
out
xor
outsl
faddl
push
scas
imul
pop
mov
mov
pusha
jmp
push
insb
out
stos
and
cmp
push
jb
xchg
enter
nop
or
sbb
pop
loopne
inc
pop
or
pusha
cmp
ja
mov
int
jmp
aad
jne
xchg
mov
pop
fildl
je
stc
lods
push
repnz
mov
out
push
mov
adc
ret
push
jmp
out
push
mov
push
adc
push
mov
xchg
push
mov
xchg
ret
xchg
mov
mov
inc
or
and
jnp
cmp
push
inc
scas
push
sbbb
inc
stos
out
test
xor
xlat
loopne
inc
inc
rcrb
mov
add
xor
insl
test
test
loopne
movsl
outsl
jl
rorl
aas
add
mov
dec
ret
mov
mov
inc
pop
mov
mov
test
test
xor
push
outsb
int
xor
cld
in
pop
xor
dec
inc
push
xchg
int3
push
sbb
mov
pop
pop
fsubl
inc
dec
jg
sub
push
mov
imul
lods
dec
pusha
mov
inc
lahf
push
fmul
popa
out
bound
jb
jge
lahf
adc
out
pop
inc
pusha
push
lock
sub
xchg
add
xor
ds
xlat
arpl
in
pusha
add
jne
lock
and
bound
loop
pusha
imull
add
add
iret
xchg
fs
insl
loope
adc
in
xchg
je
add
cmp
inc
aam
in
pusha
xor
ret
test
adc
inc
pusha
and
pop
inc
sarb
xor
stos
popf
xor
dec
mov
cmpb
frstor
jmp
inc
sbb
push
insl
loopne
mov
xchg
xor
test
out
je
and
hlt
fisubs
ror
testb
lods
and
inc
cwtl
arpl
mov
loopne
int
sub
bound
sbb
sub
sub
push
pop
dec
push
fst
cli
scas
mov
mov
in
negb
push
outsb
adc
lods
and
jecxz
sub
xor
loop
inc
inc
out
pusha
aad
aaa
mov
xchg
sahf
push
add
pop
jno
mov
cwtl
out
aam
sub
cmp
and
dec
rcrl
test
add
clc
cmp
push
sahf
mov
mov
pop
outsb
cmp
jp
pop
inc
scas
push
pop
or
ja
dec
lea
insl
adc
imul
push
mov
lret
icebp
loop
fisubs
mov
sub
jno
rcrb
mov
aaa
stos
mov
push
pop
cmovs
rcrb
bound
ret
jl
push
mov
addr16
rcll
push
sub
cwtl
popf
sahf
iret
addr16
addb
mov
push
imul
lret
sub
and
xchg
sbb
or
fs
inc
xchg
dec
loope
addr16
sbb
cmpsb
aam
xor
adc
and
shll
mov
xor
je
push
jne
mov
rolb
loope
push
xchg
sbb
pop
sub
and
mull
inc
cltd
in
sub
xchg
push
inc
mov
leave
add
mov
jmp
or
adc
loope
js
and
adcb
stc
ret
hlt
mov
add
out
pop
mov
mov
push
mov
mov
pop
call
sub
push
fs
cmp
insl
xchg
xchg
dec
loope
rolb
cmp
and
rcll
clc
loope
xchg
pop
sub
xor
ret
clc
adc
inc
dec
ret
ljmp
dec
lock
xchg
les
pop
mov
mov
in
das
arpl
adc
xor
add
test
aas
cmpsb
cmp
pop
xchg
sbb
lds
arpl
push
sub
adc
test
pop
sahf
xchg
in
arpl
je
cmp
insl
and
rcl
xchg
mov
pop
popw
lock
arpl
pusha
pop
enter
cmp
pusha
inc
int3
xchg
push
es
or
repz
mov
mov
jl
pop
lods
inc
imul
mov
gs
adc
inc
mov
in
ret
pop
fwait
lock
xor
stos
shll
xor
lock
cmpsb
ret
inc
movsb
dec
and
jecxz
cltd
int
hlt
aad
lock
ljmp
push
mov
push
imul
cmp
sahf
jl
int
adc
inc
js
pop
pop
loope
mov
mov
pop
jbe
insb
mov
sub
cwtl
xorl
cmpb
cmp
xlat
push
insb
sahf
mov
xor
lret
mov
in
lock
pop
lock
lds
mov
cmc
add
aas
dec
mov
ja
jb
loope
mov
mov
jns
movsl
loop
xchg
ret
cmpsl
sbb
insb
jg
test
xchg
jae
mov
je
mov
mov
jb
shll
outsl
fdivrp
jge
loop
fwait
xor
repnz
bound
jbe
inc
ds
in
sub
push
movsb
bound
mov
negb
bnd
shl
cmpsb
jmp
idivl
in
call
das
sbbb
testb
mov
jb
arpl
je
imul
movsb
loop
mov
add
cli
add
dec
or
inc
sub
push
push
push
pushl
popf
ret
mov
mov
adc
iret
bound
push
mov
fstpl
ss
jo
cmp
ljmp
sbb
fdiv
pop
mov
rcrl
ret
cmpb
testl
pop
dec
rorb
pop
sbb
push
cmp
in
pop
std
mov
mov
jo
mov
add
jecxz
rcr
fidivl
xchg
sub
rolb
push
sub
xchg
push
xor
pop
and
add
ljmp
mov
call
jb
xorl
push
inc
fcoms
xor
stos
mov
aas
mov
cmc
lock
std
bound
js
cltd
data16
inc
iret
loopne
cmpsb
cmp
scas
add
into
in
fldenv
jo
inc
mov
testb
push
pusha
jg
ss
mov
mov
arpl
xchg
pusha
outsb
aam
xchg
out
adc
sbb
pusha
cmpsb
jbe
and
add
lods
or
and
and
hlt
ss
xchg
rorl
and
arpl
pop
mov
jge
and
inc
and
dec
ds
and
sbb
push
jg
xchg
dec
outsl
pusha
sbb
jnp
push
fwait
leave
jp
mov
pusha
cltd
add
lods
pusha
jae
or
pusha
pop
xchg
add
andb
sub
cmpsl
ds
pusha
mov
mov
icebp
pushf
loopne
push
pop
pusha
arpl
mov
dec
insl
enter
pusha
dec
pop
cltd
and
mov
fnstcw
scas
repz
loope
pop
add
nop
in
daa
inc
orb
out
cwtl
js
mov
sub
inc
pusha
aas
loopne
or
dec
ljmp
add
pop
sbb
out
dec
push
pusha
mov
jne
cltd
sbb
lcall
sub
inc
cmp
out
fs
insb
add
aad
jl
cmp
xor
shll
mov
lods
shlb
push
aam
stc
add
popf
pusha
cwtl
push
test
pop
in
fdiv
inc
popa
push
popl
pusha
loopne
call
aas
loop
jb
mov
cmc
in
call
or
pusha
dec
jb
sahf
es
jmp
sti
shlb
andb
lret
out
mov
test
pusha
xlat
xchg
xchg
pop
pop
dec
mov
bound
cmp
dec
mov
jb
add
pusha
jo
jl
nop
outsl
or
mov
sbb
xchg
test
and
ret
mov
enter
fs
lods
aam
push
stos
xlat
sarl
add
mov
out
sub
ss
xor
push
pusha
cs
push
pusha
mov
pop
ljmp
imul
mov
test
fcompl
fwait
mov
ret
sub
pusha
pop
xchg
jp
repz
dec
mov
fcmove
or
pop
pop
cmp
sbb
ficoml
jae
and
dec
sahf
xor
fs
pop
bound
dec
mov
add
outsl
push
jp
inc
cmpsb
pusha
movsl
or
pop
pusha
pop
lods
sbbb
loopne
leave
pusha
add
pop
add
cmpsb
cli
popa
mov
std
pusha
ja
push
lahf
push
outsb
dec
pusha
stos
inc
mov
jecxz
mov
pusha
out
pop
lret
push
notb
pusha
leave
das
inc
inc
dec
lods
arpl
stos
or
popf
repz
sub
mov
pop
cli
push
fcmovnu
jnp
push
jge
popa
jecxz
into
pusha
mov
je
jb
add
push
mov
or
ja
shlb
push
data16
and
add
sbb
pusha
push
test
sarb
xorl
xchg
cmp
inc
pusha
popa
movsl
push
adcb
iret
jae
jl
scas
sbb
inc
mov
xchg
push
repz
mov
jecxz
fndisi(8087
add
aaa
inc
and
popf
mov
mov
cli
pop
mov
mov
pusha
push
das
push
jg
rclb
bnd
loope
in
pusha
jo
fisubs
xchg
dec
xor
icebp
fs
and
cltd
jl
xchg
and
mov
vmovsd
adc
inc
push
pusha
and
xchg
pop
lods
pop
aas
pusha
rcrl
fs
mov
ret
daa
out
inc
inc
add
pusha
mov
stc
add
lret
pop
andb
xor
pusha
aaa
cmc
out
mov
mov
mov
or
mov
mov
dec
gs
clc
jbe
popa
xchg
dec
rol
popf
xchg
stos
or
and
bound
call
pusha
mov
dec
pop
repnz
mov
fst
pop
pop
pusha
mov
xlat
movsl
mov
faddl
sbb
adc
mov
negb
aad
fs
pop
and
stos
rcrl
call
mov
mov
jl
xor
arpl
inc
add
fisubl
or
out
push
insb
sbb
inc
mov
jbe
sti
arpl
jle
nop
pop
jl
aam
mov
mov
ljmp
pop
pusha
clc
jl
in
insb
rolb
into
in
lods
push
pop
popf
lcall
push
mov
xchg
outsl
les
iret
add
arpl
repz
pop
mov
cmovnp
lds
or
cli
pop
cmp
inc
jmp
sub
cmp
stos
mov
jmp
cwtl
fcoms
add
lods
inc
out
faddl
mov
insb
cmp
push
nop
cmc
adc
dec
dec
pushf
cwtl
pusha
std
mov
pop
and
int3
into
dec
fwait
pop
addl
inc
loop
adc
in
movsb
pusha
sbb
in
pushf
decb
data16
sbbb
add
cmp
mov
jp
movsl
gs
jno
or
in
cmp
je
and
add
cli
insb
inc
pop
mov
sub
sbbl
mov
bound
and
fs
pop
inc
jecxz
mov
pop
sbb
sbb
jecxz
out
das
fs
or
ja
repz
mov
fwait
aaa
pusha
sub
inc
cmp
xchg
pusha
lods
int
cmp
mov
mov
jle
dec
movsb
insl
xchg
shlb
jecxz
inc
pusha
mov
int
xor
pop
cmp
inc
ss
sbb
ret
add
and
pusha
lods
icebp
jne
push
cwtl
mov
xchg
and
cmp
lcall
xchg
scas
inc
jl
xor
sahf
pop
das
push
pop
lahf
pusha
ljmp
in
pusha
out
je
pop
aas
loopne
pusha
testl
fcompl
into
xor
fs
dec
insb
xor
adc
pop
pusha
inc
xlat
jl
hlt
mov
pusha
cltd
ja
fstpl
adc
xchg
bound
out
jge
mov
dec
sbb
pop
loop
pusha
mov
push
out
pop
cmp
pop
lock
and
sub
xchg
add
push
push
fwait
or
frstor
jmp
xor
lret
jp
pusha
jo
loope
and
lock
mov
dec
sbb
adc
pusha
and
lea
push
sub
fisubrs
and
ljmp
and
sbb
mov
into
in
sbb
jns
push
sbb
test
cwtl
mov
out
add
jae
sbb
or
push
inc
out
xor
mov
arpl
loop
inc
pop
adc
stos
inc
ja
pusha
adc
movsl
outsb
pusha
cmc
stos
in
xchg
sub
sbb
mov
mov
pusha
cltd
cmp
jg
or
dec
mov
out
pusha
enter
out
or
xchg
push
pusha
add
mov
fstps
fsubrs
jecxz
movsl
jl
testb
bound
xor
mov
jecxz
in
sub
subl
pop
inc
rcrb
xor
jp
pusha
xchg
repnz
adc
popa
cmpsl
xlat
jo
int3
xchg
sub
pop
adc
js
popa
jnp
scas
mov
pop
fldenv
sbb
cmp
sbb
adc
dec
pusha
push
lods
mov
idivb
in
push
mull
push
add
inc
dec
lods
mov
and
pusha
push
sahf
mov
test
fdiv
pusha
loop
adc
loope
test
pusha
ljmp
je
aaa
repz
jae
jo
jle
shrl
xchg
into
lcall
jmp
adc
push
shlb
nop
and
enter
stos
int3
jae
pusha
cmpsb
xlat
push
add
mov
jecxz
lock
and
inc
loop
popf
and
xchg
das
xor
pusha
out
stos
out
inc
jg
dec
pusha
ficomps
mov
unpcklps
and
pusha
push
insl
cmpl
jge
jl
repnz
adc
xor
in
ja
out
xchg
inc
pusha
rcl
inc
test
adc
lock
das
mov
outsb
push
je
popf
sbb
loopne
lret
nop
cmp
push
jg
loope
inc
cltd
push
jo
pusha
bound
aad
sahf
jae
sbb
into
dec
sub
xor
cmpsb
test
pushf
push
pop
dec
push
rcrl
lea
stos
mov
ret
test
mov
dec
data16
push
imul
int3
cmp
and
test
sub
mov
dec
mov
push
std
or
adc
stos
lea
push
or
xchg
mov
gs
pop
out
int3
in
dec
push
and
out
stos
loope
andl
push
mov
sbb
daa
aas
push
pop
cmc
and
dec
movsb
jae
iret
jb
add
mov
repnz
xor
push
inc
xor
arpl
loop
scas
lds
fdivr
nop
cmp
mov
bound
ror
hlt
cwtl
inc
push
popf
cmp
sub
and
je
mov
mov
pop
inc
dec
sub
jecxz
pop
fnsave
jns
or
add
imulb
mov
jbe
jge
push
lret
data16
aaa
xchg
stos
xchg
and
sub
pop
inc
rcll
xchg
out
jnp
mull
cmp
popf
outsb
jmp
and
inc
and
or
rep
mov
popa
outsb
adc
rcl
inc
pop
loop
xor
xchg
mull
inc
xor
mov
fisubl
out
mov
cmpl
jge
jecxz
push
mov
push
movb
xor
adc
dec
adc
mov
inc
sub
addb
pusha
jmp
push
negl
loope
pusha
loop
repnz
sub
rorb
xor
pushf
adcb
and
pusha
mov
pusha
cld
jge
xchg
into
out
xor
popf
int
or
push
aam
xchg
jnp
push
and
pusha
fmul
outsl
cli
insl
imul
dec
mov
dec
addb
jmp
sub
push
pusha
xchg
js
sti
push
and
push
lea
xchg
add
scas
icebp
outsl
jle
je
pusha
shll
data16
push
loopne
stc
jmp
pop
loop
test
sbb
push
leave
out
sbb
roll
roll
imul
aaa
pusha
iret
jl
adc
pusha
mov
sbb
mov
lret
inc
jno
sub
ret
test
mov
out
imul
inc
mov
je
cmc
push
shrl
dec
jnp
test
push
mov
loope
and
mov
pop
sar
popf
out
cltd
mov
mov
push
adc
test
adc
mov
pusha
std
lea
gs
and
test
ss
arpl
jns
xlat
out
jae
adc
pop
fcoml
fwait
jg
or
aaa
sbb
mov
js
imul
pusha
mov
ja
mov
or
add
xor
pop
pusha
mov
xchg
pusha
push
fcomps
mov
xlat
pusha
inc
scas
push
fsin
push
shlb
add
pop
xchg
mov
mov
jno
lcall
movl
inc
out
pushf
pop
xor
insb
mov
fdivs
rcrb
dec
imul
add
push
movsl
xor
pop
pop
loop
xchg
xchg
addb
add
scas
mov
pop
sbb
sub
or
cmp
fisubrs
mov
out
dec
stos
daa
dec
gs
pusha
xor
adc
pop
test
push
add
pusha
mov
lods
mov
insb
sbb
xor
fmul
inc
loop
and
fidivrs
js
mov
inc
inc
rcr
pop
mov
add
pusha
sbb
test
loop
push
aam
push
fisubs
sbb
out
and
jne
pusha
jmp
std
inc
xchg
and
arpl
test
repz
jg
sbb
jb
cmpsl
stos
fldl
mov
mov
roll
pop
mov
popa
sbb
adc
fs
jo
xor
adc
jne
mov
imul
or
pop
dec
inc
inc
pcmpgtd
pusha
lahf
mov
xchg
aaa
or
add
popa
in
pusha
lea
test
int3
nop
daa
hlt
negb
lods
out
gs
add
jp
sahf
clc
push
sbb
mov
outsb
insb
inc
ja
push
call
mov
pop
adc
adc
and
and
out
sar
mov
cmp
lods
jecxz
inc
fs
mov
daa
ja
mov
movsl
imul
jbe
mov
adc
pop
push
sbb
and
ds
inc
jmp
sbb
lds
or
push
mov
push
add
fldcw
mov
rcr
mov
and
xor
movsl
ds
outsl
lret
inc
dec
iret
and
stos
push
jmp
gs
out
pop
lds
movsl
arpl
mov
lods
inc
mov
imul
mov
mov
cltd
and
push
andb
jle
mov
push
andl
movsb
mov
mov
cmp
lret
adc
sub
ret
adc
xor
addr16
fs
mov
insb
shr
popa
mov
mov
cli
mov
leave
cmpb
cmp
adc
or
sbb
dec
mov
pusha
lea
test
inc
stos
jnp
je
ret
insb
push
nop
jmp
imul
lds
add
lahf
cmp
xchg
insl
cli
mov
pusha
xlat
mov
ret
into
cmp
mov
xchg
pusha
xlat
in
sub
pusha
lock
test
jo
insb
idiv
fldt
and
jle
push
dec
jecxz
pushf
push
cmp
in
inc
cltd
pusha
xor
cmp
cs
lock
popf
pusha
mov
inc
pusha
mov
stos
pop
dec
pusha
inc
andb
pusha
daa
js
mov
pop
jmp
cld
pusha
adc
fdivs
jmp
pusha
mov
dec
clc
rcrl
pusha
fcmove
sub
outsl
sub
add
into
xchg
cmpsb
dec
jl
sbb
add
mov
leave
nop
adc
das
or
sbbb
rorl
imul
pusha
or
cwtl
push
andl
mov
fsub
push
inc
fnstenv
popa
xlat
repnz
pop
clc
in
test
int3
xchg
xchg
hlt
mov
rol
and
mov
shlb
xchg
or
pop
xchg
xchg
cmc
mov
xor
pusha
sbb
out
bound
dec
pop
pop
sub
xor
add
pusha
push
push
imul
fmuls
out
pusha
repnz
cmp
les
cmp
push
dec
push
sub
xchg
inc
xlat
mov
lahf
and
pusha
js
in
incl
aad
push
pusha
mov
dec
fadd
dec
or
nop
jo
bound
adc
pushf
arpl
pop
fiaddl
shrl
jns
adc
loopne
cmp
and
jnp
mov
pusha
xor
ret
push
dec
pusha
cmc
sahf
imulb
repnz
add
jns
adc
out
push
subl
bound
movsl
dec
loop
push
cmpsb
into
adc
loope
sbb
js
jg
ds
mov
cmp
add
mov
aas
outsb
sbb
pusha
push
cli
xor
test
test
mov
outsb
add
lret
bound
ret
cmp
outsb
nop
loop
cld
sub
mov
arpl
mov
xchg
popa
xor
mov
stos
popf
sbb
sti
inc
fdiv
ja
mov
mov
add
dec
sbb
mov
push
jle
jns
insb
jo
jl
add
das
and
ret
insb
insl
lahf
pusha
pop
sbb
incb
scas
rcll
pop
mov
pushf
cld
and
clc
push
mov
jg
lcall
fcmovbe
mov
jno
add
hlt
push
xor
add
pushf
pop
cld
and
mov
adcl
repnz
dec
imul
push
dec
mov
or
jo
orb
pusha
mov
inc
popa
jno
in
dec
pop
adc
sub
notb
call
pop
ret
xor
test
bound
pusha
mov
xor
cwtl
mov
cli
dec
cmpl
stc
ficoms
push
dec
subl
inc
out
pop
dec
cmpsl
mov
divl
push
popa
adc
add
mov
hlt
rorl
cwtl
mov
mov
add
or
mov
dec
xchg
xchg
mov
int
sahf
jno
mov
push
ret
ljmp
loope
ds
insb
leave
adc
je
addr16
fisubs
aad
insl
mov
pop
mov
arpl
adc
ret
adc
push
pusha
je
xchg
es
icebp
mov
nop
pop
out
or
jae
push
scas
cwtl
loop
add
lret
loope
and
movsl
jecxz
xlat
nop
mov
dec
andl
mov
or
ds
repz
hlt
fnsave
fldenv
xor
push
cld
sbb
sub
in
repnz
aam
out
jle
cmpsb
xor
movsl
xchg
xchg
push
dec
and
mov
arpl
outsb
std
out
and
pop
pop
imul
mov
push
rcll
cmp
aam
pop
dec
fnstsw
loop
sarb
push
push
sbb
and
inc
ret
pmuludq
lret
jbe
xorl
add
mov
and
lahf
push
sbb
loopne
push
lret
add
xor
negb
enter
xorb
cld
popa
cmpsl
mov
xchg
jnp
js
and
scas
and
aam
sub
hlt
inc
rcl
jne
aaa
push
in
push
sarl
jnp
push
cld
mov
popa
stos
fwait
orb
rcrl
push
addr16
ffreep
outsb
in
push
pop
push
outsb
sub
daa
repnz
push
adc
or
and
in
cmp
frstor
rcrb
sub
leave
loope
or
adc
jno
pop
sbb
shll
sbb
ret
xchg
mov
mov
push
aad
jno
shrb
pop
add
jnp
xchg
iret
scas
test
daa
rorl
adc
inc
mov
lahf
fidivrs
lret
stc
loope
ljmp
mov
xor
mov
loop
popa
cmpsb
xchg
bound
and
ret
outsb
or
cmp
rolb
inc
test
popf
xor
adc
shr
sbb
ficomps
inc
xchg
add
fcmovnb
and
pop
data16
call
mov
xlat
and
sub
in
and
int3
fs
and
add
cmpsb
add
leave
add
cmp
dec
mov
and
dec
inc
mov
out
mov
int3
pop
push
inc
dec
pop
aam
sub
andl
aas
mov
in
jno
jo
imul
sub
in
xchg
sub
clc
sbb
stos
lcall
repz
mov
jne
je
hlt
and
shll
pop
mov
mov
subps
lahf
ret
shlb
scas
ret
lret
add
into
shr
inc
pop
arpl
ficompl
sbb
cmp
mov
push
pop
shl
inc
cmp
and
jmp
jl
mov
addr16
shll
inc
mov
pop
out
repz
popf
jo
push
cmp
lods
pop
pop
dec
xor
mov
shrl
mov
les
inc
jo
push
ret
testl
test
int
in
and
push
imul
movsl
sub
repnz
xchg
jae
pop
rcll
mov
add
push
adc
sub
outsb
pop
jmp
aam
mov
lcall
inc
mov
xor
xchg
add
fistpl
shlb
dec
shrb
pop
cli
adc
pop
cltd
mov
out
out
sarb
mov
push
pop
in
scas
fdivs
xchg
pop
push
and
arpl
sub
lcall
lret
in
jne
or
int3
mov
daa
ret
jmp
in
push
js
sti
push
fadd
ret
sub
sub
jle
cmp
mov
push
push
fs
mov
data16
rolb
test
sub
lret
mov
dec
mov
ret
ja
iret
loop
push
mov
adc
and
cld
stos
fldcw
insl
or
stc
pop
cmpsl
inc
inc
pusha
movsl
inc
push
mov
ja
std
pusha
sbb
dec
out
insb
int
sub
pop
adc
cmp
pusha
xor
adc
sub
xor
subb
pusha
jmp
push
mov
add
pusha
adc
jg
fisubrs
lret
adc
insb
dec
pop
jo
inc
push
and
arpl
sub
inc
dec
inc
push
in
fs
popf
cltd
test
jae
into
jl
cmpsb
push
ja
mov
mov
adc
pusha
insb
dec
into
xchg
push
xchg
out
or
pop
stos
sub
sbb
sbb
pusha
nop
and
daa
xchg
scas
mov
xchg
popa
sahf
push
xchg
mov
enter
inc
js
pop
mov
sub
leave
sbb
jl
dec
pop
sbb
jecxz
int
pop
pusha
xor
mov
and
test
push
movsl
xlat
add
pushl
sub
outsl
in
test
rcrb
mov
pushf
bound
imul
insb
imul
mov
pusha
pop
sbb
inc
xchg
arpl
lcall
jl
xor
cmpsb
loope
push
insb
sub
jl,pn
dec
sbb
test
orl
or
add
cmp
int3
out
xchg
dec
lret
sub
out
inc
push
stos
push
aaa
xchg
pusha
xchg
push
fcmovnbe
adc
jl
or
leave
mov
pusha
adcl
sbb
clc
xchg
pushf
push
pusha
push
xchg
testl
hlt
movl
sbb
lds
mov
scas
les
scas
sub
aaa
push
ds
mov
out
jns
out
pusha
sub
daa
add
sbbl
out
test
fisttps
fisttpll
shlb
xchg
and
mov
pusha
testl
push
jp
out
movsb
ja
jp
push
sbb
pusha
mov
jne
xchg
sbb
es
loop
sub
push
rcrb
mov
repz
push
fdivp
pop
cwtl
das
shlb
add
mov
xor
dec
push
push
in
mov
popa
or
pusha
pop
loop
or
fstl
and
push
movsl
push
jno,pn
jo
cmp
int3
fisubl
adc
cltd
dec
test
cli
mov
push
std
add
mov
jae
pop
inc
inc
daa
neg
jg
arpl
inc
fs
stos
repz
jbe
gs
sub
xor
sbb
loopne
ljmp
insb
movsb
call
cmp
mov
mov
into
add
mov
in
jl
sbb
das
je
pusha
jo
in
lret
xchg
out
je
mov
jp
jp
imul
outsb
adc
les
adc
inc
cmp
sbb
stos
pop
mov
jmp
andb
pusha
mov
xchg
xor
lahf
jl
vpunpckhdq
loope
push
xlat
pusha
push
lret
sub
jb
xchg
xor
cmpsl
add
sbb
out
into
rcl
cs
pop
cmc
sub
mov
gs
mov
adc
pop
push
pusha
xchg
test
xchg
int3
in
sub
je
cltd
lock
std
in
push
sbb
sbb
adc
xchg
cmc
sarb
adc
lock
pusha
lods
int3
not
pop
gs
pusha
imul
adc
and
fwait
arpl
add
arpl
lods
pusha
call
fnstenv
pop
or
outsl
loope,pt
stos
mov
cld
shlb
adc
in
pusha
push
pushf
push
shll
leave
int3
stc
pusha
mov
gs
in
pusha
xchg
mov
out
mov
jno
inc
pusha
test
jns
ficoml
in
xchg
xchg
push
pop
stos
popa
in
fmuls
dec
pusha
scas
xchg
test
out
data16
cmp
int
inc
or
xor
into
popf
push
js
and
addr16
repz
cmpsl
and
push
mov
xchg
and
sub
add
stos
adc
scas
or
sbb
pusha
xchg
add
mov
jns
js
loope
mov
mov
mov
insb
jae
inc
add
loopne
addl
lds
divl
pusha
jnp
je
and
push
fadd
pop
popa
cmp
js
out
in
out
jge
cmp
pusha
fwait
mov
gs
sahf
sbb
mov
jo
pusha
dec
fcoml
sub
sti
outsb
push
push
mov
pusha
jae
shrb
iret
test
mov
jmp
rcll
pusha
sub
movsl
test
xor
jo
ljmp
imulb
mov
pusha
jns
inc
std
popf
mov
xor
mov
mov
jecxz
mov
ret
xor
or
or
mov
sub
adcl
bound
jecxz
push
lods
dec
sub
pusha
mov
in
addr16
loope
pusha
dec
outsl
popa
xchg
mov
aaa
jge
test
fldenv
pop
inc
cmpsl
lahf
pusha
lock
fcmovnbe
and
sub
enter
outsb
loope
out
ljmp
cltd
add
ret
push
jmp
pusha
jb
jno
mov
add
pusha
mov
out
test
popf
lea
andl
jae
popa
repnz
cmpsb
stos
cmp
pusha
mov
fwait
out
inc
adc
sbb
jle
inc
test
mov
loop
xchg
xor
hlt
ja
ret
sbb
pusha
rol
popa
leave
in
mov
insb
in
nop
xchg
mov
iret
pusha
movsl
ja
es
fwait
shrl
adc
sbb
fwait
cmp
insb
or
pop
stc
adc
mov
fnstenv
int
pop
mov
mov
jecxz
clc
push
mov
cmp
and
int
jbe
mov
mov
insb
inc
xor
push
pusha
jnp
mov
xlat
pop
inc
cld
pusha
gs
jmp
nop
jp
push
repnz
popa
sbb
movsb
xchg
xor
sub
andl
lcall
push
mov
push
in
lret
xor
in
push
lcall
push
movsb
lret
pusha
aas
pop
int
push
gs
pusha
pop
inc
mov
xchg
sbb
ret
pusha
jp
inc
into
add
lods
lea
cltd
cmp
mov
jl
sbb
pusha
add
lcall
push
pusha
hlt
stos
notb
pusha
lret
iret
sub
jno
popa
xchg
pop
jb
push
mov
loop
sbb
or
adc
mov
pusha
pushf
rclb
out
jl
fsubl
inc
es
dec
repz
cmc
lahf
lea
xor
add
mov
inc
hlt
bound
cli
shrb
mov
mov
test
outsb
das
pusha
dec
fcmovne
sbb
pusha
stc
inc
cmpsl
test
mov
outsb
loopne
add
es
cld
pop
pop
aad
pusha
fidivl
cli
dec
fs
or
push
add
add
nop
sub
push
push
or
push
in
aad
sub
test
insb
test
jl
ficoms
xchg
loop
sbb
shlb
mov
and
test
inc
xchg
mov
mov
rcr
adc
adc
and
test
push
jb
lahf
push
loope
jl
pusha
sub
pushf
out
mov
rol
mov
inc
pusha
mov
push
dec
addr16
xchg
sarl
outsl
test
push
add
xchg
mov
cmp
push
fdivr
lret
pop
fs
daa
jno
icebp
dec
and
dec
leave
in
mov
inc
inc
addb
xchg
jae
fildll
inc
pusha
mov
xchg
int3
cmp
mov
aaa
jmp
notl
xchg
adc
adcb
pusha
mov
pusha
mov
aad
jp
jns
jae
shll
mov
xor
mov
scas
push
lds
stc
sbb
mov
insl
mov
xchg
fs
ja
cwtl
leave
sbb
or
dec
pusha
nop
adc
outsb
fs
pop
jg
shlb
sbbl
add
pushf
mov
xorl
shl
imul
xchg
push
mov
test
pop
lods
mov
mov
je
sub
ljmp
pusha
int
and
adc
cmp
jle
mov
stos
repz
ljmp
bnd
insl
fcompl
lcall
pusha
push
test
xchg
pop
push
dec
movsl
rcrl
lea
pop
pushf
push
les
int
fbld
push
lahf
daa
pusha
adc
fwait
sbb
imulb
xlat
and
pop
shl
aaa
subl
or
pusha
test
sbb
lret
sub
orb
push
ret
pop
pop
popa
ds
aad
add
sbb
cli
push
scas
xchg
jo
xchg
sbb
jge
jne
clc
pop
or
insb
aas
ljmp
loopne
roll
iret
inc
mov
lret
movsb
pop
jo
xor
push
stos
sub
cmpsl
pop
cmp
pop
lret
mov
andb
movsb
mov
in
jnp
adc
pusha
lret
inc
int3
push
pop
frstor
cwtl
je
lock
xchg
mov
sub
mov
aaa
dec
ret
pusha
fwait
sti
in
es
enter
xor
mov
push
xchg
mov
insb
stc
mov
xchg
pusha
movsb
fwait
add
out
jo
pusha
aam
push
fs
pop
pusha
add
cmp
loopne
pushf
setnp
jbe
pusha
xchg
jle
arpl
xor
dec
sub
clc
mov
add
popf
imul
ret
push
divb
lcall
inc
xchg
ljmp
arpl
inc
and
jno
mov
sub
adc
dec
push
adc
pusha
mov
sbb
clc
cmpsb
pop
sahf
add
movsl
imul
pop
mov
lods
and
out
push
pusha
xchg
jp
cmp
in
mulb
or
je
mov
pop
push
mov
pusha
mov
sar
insb
inc
jo
test
shll
pusha
pushf
in
xchg
pop
jge
cmp
push
and
mov
fldenv
popa
or
add
rcll
fs
sti
jp
or
cmpsl
xlat
ja
and
adc
clc
outsb
movsl
or
lret
test
push
lods
fadd
push
sbb
mov
adc
add
mov
add
add
aad
mov
add
pusha
fdiv
and
imul
int3
cld
lahf
add
adc
pusha
subl
loop
ljmp
xchg
mov
inc
les
mov
add
xor
scas
pusha
push
push
mov
idivl
adc
pusha
inc
popf
loope
cmpsl
ljmp
addl
pusha
es
dec
jecxz
gs
test
pusha
jmp
sti
sahf
add
cmp
add
pop
pop
outsb
bound
test
cmp
pop
sti
pusha
jle
jnp
aas
cmpsl
pusha
cli
sahf
mov
dec
pop
mov
int
rcll
sbb
mov
lods
hlt
idivb
mov
or
adc
fiaddl
push
or
push
lds
push
ja
stos
ds
cwtl
inc
sbb
aam
sub
js
in
pop
ss
loope
bound
aad
insb
mov
leave
add
loopne
inc
xor
cmp
js
cmpsl
cltd
mov
adc
jle
pop
push
adc
rcll
xor
cmpsl
xchg
mov
mov
dec
sub
nop
push
addb
pusha
stc
push
pop
add
lret
cmpsb
mov
pusha
and
mov
jp
xchg
push
mov
ja
sbb
xor
dec
sub
arpl
dec
test
pusha
adc
lods
fiadds
movsl
dec
sbb
sub
roll
or
fistps
adc
jl
pop
mov
lea
xor
gs
movsb
push
mov
mov
mov
sub
movsl
push
add
test
repnz
jg
cmpsl
inc
dec
pusha
sub
mov
and
cmp
or
ret
inc
adc
mov
imul
jmp
sahf
pop
out
fldl
push
jo
jnp
loopne
sub
ret
shrb
adc
fcomi
dec
lods
cmp
leave
jbe
xchg
jge
popa
shll
xor
in
mov
lahf
pop
push
push
cmp
jo
aad
push
jmp
in
xor
rolb
cld
xchg
push
pop
add
push
mov
or
and
sbb
fsubs
shrl
jle
gs
and
mov
xchg
cmp
add
mov
cwtl
jmp
pop
inc
inc
adc
jno
ss
lea
lret
hlt
or
push
push
jl
fs
push
imul
fildl
test
add
sbb
sub
loop
sub
faddl
jo
movsl
faddl
sbb
jb
mull
pusha
inc
stos
push
cmpsb
dec
in
dec
gs
xor
imul
mov
xchg
and
jecxz
aas
iret
mov
outsl
push
cmpsl
daa
js
fdivr
jb,pt
data16
push
push
jmp
jo
in
dec
xor
out
fs
aaa
adc
sbb
mov
cmp
mov
iret
cwtl
fbld
outsl
sbb
sub
inc
adc
sbb
xchg
mov
in
xchg
xchg
jle
rol
jae
fwait
mov
mov
sub
dec
mov
xor
ret
aas
sbb
rcl
xlat
push
imulb
lcall
pop
out
cld
xor
mov
ret
enter
mov
arpl
or
mov
je
jge
stos
adcb
xchg
ret
loopne
pusha
xchg
icebp
popf
shll
cs
push
and
sbb
pushf
xchg
pop
cli
adc
pushf
dec
stos
mov
inc
shll
out
aaa
mov
jnp
mov
and
test
loope
and
lcall
jb
imul
gs
icebp
std
mov
cmc
cmp
or
jbe
faddl
shl
lock
test
cmp
dec
push
jmp
add
sbb
sbb
adc
and
jecxz
insb
insl
xchg
sarl
decb
dec
shlb
pusha
sbb
mov
fs
inc
sahf
xchg
mov
dec
std
fiadds
jmp
inc
popa
push
scas
pop
popa
xor
lret
xor
sbb
cmp
in
ret
sbb
sti
call
inc
and
insb
push
shl
pusha
in
adc
add
xchg
scas
arpl
mov
mov
jbe
pushf
mov
loop
add
pusha
cs
into
addl
dec
mov
push
clc
pusha
pop
fistpll
rcrl
dec
int3
arpl
outsb
lods
mov
and
pop
or
shrb
cmc
xor
std
xchg
pusha
cmp
inc
leave
add
sti
pusha
ret
pop
jmp
lcall
popa
jl
rcll
arpl
outsb
int
xor
popa
inc
inc
mov
pop
std
lods
cmp
cli
xor
adc
pusha
mov
push
adc
xchg
or
out
in
add
loope
insb
test
sub
in
ret
mov
movsl
std
mov
push
and
stos
int3
pusha
daa
jo
xor
add
pusha
mov
mov
stos
pop
xchg
cmp
aad
out
dec
orb
mov
into
and
jmp
cltd
arpl
pop
sub
pusha
rcll
je
mov
inc
mov
xor
lods
pusha
ss
jecxz
mov
sub
and
cmp
pusha
inc
xlat
xchg
addr16
enter
out
dec
inc
lods
in
cmp
je
fisttpll
sbb
pusha
dec
fwait
pop
mov
es
mov
sarb
pusha
mov
cltd
mov
and
push
repz
inc
xor
mov
inc
pusha
cmpsl
inc
pop
out
lods
and
adc
jl
mov
mov
leave
enter
sti
outsl
mov
pushf
push
mov
jae
lea
pop
enter
stos
dec
ds
arpl
push
pop
pusha
mov
sub
shll
xchg
sub
test
dec
add
fs
rclb
aad
iret
out
xor
jb
mov
mov
adc
repz
stos
push
sub
movsl
sbb
in
sbbb
pusha
xchg
jb
lret
mov
xor
cmp
sbb
cmp
cwtl
shll
push
test
jbe
out
orb
fldenv
inc
mov
xchg
pusha
or
fwait
push
jge
lods
pusha
enter
xor
mov
sbb
jmp
arpl
out
cmp
mov
pusha
add
sbb
mov
lea
sbb
and
aam
pusha
cmpsl
cmp
dec
mov
pusha
test
add
aad
in
xchg
daa
inc
stos
das
inc
repz
ja
jl
inc
loope
mov
movsb
cwtl
ret
fisubs
popf
fwait
mov
cmpsl
pusha
sbb
rcrl
pusha
push
jo
adc
leave
cmp
dec
xchg
xor
mov
inc
mov
jbe
cmp
test
inc
jae
movsl
sub
repz
insl
insb
dec
addb
lea
cmp
jle
lret
and
xlat
mov
jno
sub
cwtl
mov
pusha
mov
sbb
push
mov
push
mov
movsl
push
or
or
add
int3
mov
inc
bound
mov
pusha
sbb
dec
sub
pusha
out
mov
popa
out
pop
pusha
aad
xor
add
cmp
cmp
pusha
sti
push
xor
jno
mov
imul
pusha
rolb
pop
mull
fcompl
inc
out
adc
int3
es
mov
xor
jnp
pusha
mov
inc
inc
and
insb
or
loop
mov
pusha
xor
test
add
repnz
test
push
mov
rol
sahf
cmpsb
inc
fwait
mov
addr16
negl
add
adc
leave
add
imul
pusha
add
adc
cmp
pop
pusha
insb
js
fcmovnbe
add
pusha
sub
mov
andl
push
repnz
cmp
xchg
push
jbe
pusha
mov
or
push
pop
mov
cld
mov
add
ja
fdiv
gs
test
push
nop
arpl
fs
lock
adc
in
pusha
je
cmp
dec
xchg
cmp
xchg
and
es
xor
xchg
test
lahf
in
jge
add
loop
pop
adc
imul
xor
testl
and
aam
pusha
sbb
cmp
movsl
push
adc
jmp
pusha
pop
mov
fcoms
xchg
nop
int3
jmp
orb
sub
mov
add
subb
loop
add
sbb
test
bound
outsb
sub
push
mov
mov
mov
jp
mov
xorl
shr
addr16
repz
inc
roll
mov
fmull
imul
add
jl
jecxz
cmpsb
ja
inc
sub
mov
jg
or
je
sbb
mov
jl
aam
mov
fmuls
test
inc
cmpsl
scas
punpcklbw
mov
pusha
sub
in
add
push
mulb
out
lret
push
imul
mov
cmp
test
push
lret
xorl
xor
xchg
jecxz
ds
and
imul
hlt
ficomps
gs
jle
call
loop
sub
add
cmp
dec
push
arpl
pusha
xchg
movd
lcall
loopne
xor
ja
jae
pop
pop
filds
imul
inc
mov
xchg
outsb
xor
pop
popf
mov
pusha
cmp
adc
lret
mov
sub
or
xorl
mov
cli
out
sti
fwait
outsl
pusha
pop
loop
inc
cmpsl
xor
mov
and
stos
and
pop
push
ja
fcomip
cmp
pusha
cli
inc
mov
cmp
sbb
imul
pop
insb
int
roll
jge
movsb
pusha
or
push
fildl
movl
push
mov
iret
cmp
arpl
add
add
jmp
mov
mov
cmp
adc
je
icebp
push
repz
es
inc
stos
insl
dec
out
imul
cmpsb
xor
push
mov
sahf
add
rclb
loope
mov
jl
adc
hlt
mov
pusha
leave
scas
out
cmp
in
fs
lret
sbb
mov
shl
aad
loopne
addb
dec
data16
pusha
jo
push
aaa
fildll
pusha
ljmp
mov
lea
add
adc
cmpsl
inc
arpl
cmpsw
and
mov
push
xchg
int3
ja
loop
xchg
pop
mov
mov
jae
popa
xor
dec
ret
rcll
jecxz
pop
mov
push
jo
ret
pop
pusha
lret
jae
mov
movsb
pusha
xor
xchg
dec
call
fdivl
xchg
hlt
enter
and
add
xor
movsb
xchg
bound
push
imul
sbb
push
dec
js
push
pop
movsl
ret
sbb
mov
mov
jbe
adc
and
je
bound
sub
pusha
cmp
sbb
pusha
jbe
or
pusha
lods
sub
push
sbb
jo
xlat
imul
adc
pop
std
mov
sub
add
lock
jge
out
popa
push
add
enter
add
or
cmp
clc
fdivs
je
inc
push
pop
dec
lret
aad
xor
pop
movsl
mull
js
call
cmp
jge
jns
push
test
test
call
decl
pusha
inc
and
inc
in
jns
gs
adc
adc
mov
jl
jb
or
pop
push
stc
mov
loop
sub
cs
dec
scas
jge
pop
test
or
bound
dec
insb
cs
dec
push
inc
jo
mov
or
lea
jb
xchg
fmul
mov
xchg
mov
daa
lahf
and
dec
test
popl
lea
sbb
ffreep
insb
fwait
jmp
mov
jns
std
lods
jbe
cmp
jo
sub
mov
pusha
in
es
xchg
pusha
sbb
leave
outsb
pushf
scas
adc
mov
mov
mov
dec
pushf
pusha
hlt
sbb
inc
push
pusha
jns
pop
test
jle
add
ss
js
jnp
cwtl
pop
bound
add
dec
sbb
inc
pop
jg
dec
push
out
out
jae
fisubs
movl
lcall
or
add
xchg
adc
cltd
sbb
fwait
mov
rcll
arpl
rolb
inc
xchg
addl
ret
js
insb
test
daa
mov
loopne
ret
and
or
dec
dec
lods
jg
iret
je
and
into
xchg
nop
rol
hlt
adc
push
js
lret
mov
loopne
cs
pop
cmpsb
inc
dec
stos
jp
or
bound
inc
movsl
xor
mov
insl
pusha
push
dec
shlb
push
out
sub
mov
cmp
cmp
pushf
punpcklbw
xchg
push
roll
mov
adc
arpl
mov
xor
dec
fs
jmp
and
ljmp
movsl
or
sub
daa
pusha
rcrb
test
mov
out
std
jo
pop
test
in
loopne,pn
das
push
cld
mov
mov
xor
pusha
shll
mov
cmp
sub
leave
cmp
pop
adc
aam
add
in
and
mov
dec
mov
nop
rolb
fdivrs
pusha
xor
push
xchg
nop
fs
cmpsl
sahf
xor
xchg
xor
es
outsl
adc
bound
inc
add
pop
ficomps
pusha
push
adc
mov
mov
test
or
adc
xor
movsb
jl
addr16
mov
loop
call
push
int
adc
mov
pusha
mov
jl
das
jo
inc
xchg
sahf
arpl
sbb
pop
pusha
sbb
xchg
xchg
push
arpl
das
mov
xor
jl
sbb
mov
pusha
int3
fsubrs
push
jl
pop
das
movsb
pop
bound
enter
push
cli
sbb
mov
push
aas
pusha
jg
idivb
out
ds
push
loope
popa
pusha
fiadds
mov
mov
xchg
xor
fwait
add
pusha
and
pop
cmpl
pop
insb
pusha
int3
adc
movl
fs
fadds
mov
mov
cmpsl
test
std
cli
pusha
imul
popa
pusha
sahf
mov
nop
call
sbb
dec
movsb
add
out
shll
xchg
pusha
pop
jmp
movsb
pop
pop
push
test
push
push
enter
mov
xor
jle
mov
and
add
fs
je
repz
pusha
int
cmp
pop
jp
loope
in
aaa
fsubl
jbe
cld
pusha
adc
fs
mov
out
xchg
pusha
push
test
loope
lea
rclb
mov
adc
aaa
arpl
lods
or
pop
fs
nop
push
inc
xor
push
incl
pusha
and
sub
push
or
mov
out
xchg
xchg
dec
dec
in
mov
cwtl
cmp
in
inc
xlat
aaa
pop
jl
popl
push
outsb
das
ds
push
sub
adc
sbb
fwait
jnp
pushf
js
xor
xlat
xor
fidivrs
pusha
inc
jne
fs
mov
pusha
sub
pushf
ds
push
add
outsl
orb
fcom
outsb
nop
ds
aas
mov
mov
push
mov
divl
push
out
es
mov
pop
sbb
inc
xor
pop
dec
mov
fsubs
fstpl
sti
loope
push
add
imul
pusha
imull
ss
push
fdivrp
jecxz
jb
push
pop
into
out
pop
sub
sahf
aas
pusha
mov
scas
in
sub
sbb
sbb
dec
inc
jg
mov
pop
bound
mov
clc
scas
dec
sbb
outsb
sti
pusha
xchg
insl
aad
stc
leave
cmp
popf
pop
testl
ret
pop
lods
rol
test
or
xor
push
dec
xchg
fsubrl
ljmp
lret
bound
add
fwait
jne
and
pusha
add
imul
inc
add
cmp
hlt
push
loop
mov
or
outsl
mov
adc
pusha
xchg
push
sti
mov
and
mov
sbb
xor
mov
pusha
outsl
shll
jp
imull
xor
lock
loopne
and
fs
test
xchg
xchg
sub
add
pop
lock
mov
pusha
mov
mov
lret
mov
pusha
pop
adc
int
push
jno
cs
mov
adc
sti
test
fsubr
push
mov
pusha
push
addr16
pusha
cmp
outsb
inc
cmp
loopne
das
adc
sub
popa
or
sub
jle
popa
pop
pusha
pop
xchg
push
or
mov
jmp
pusha
pop
outsb
inc
in
movsb
out
push
inc
fsubrs
pusha
cmpsl
pop
iret
aas
cmp
outsl
sahf
js
daa
rclb
stos
nop
lret
cmc
test
pusha
lret
roll
test
pusha
sbb
mov
xchg
lcall
jl
mov
push
popa
mov
fistpl
add
ret
lea
mov
pusha
add
mov
xchg
cmpsl
cmp
dec
in
sahf
or
adc
and
insb
push
ljmp
stos
cs
mov
inc
cmpsb
loopne
cmp
das
insl
lods
bswap
mov
sarl
cmp
cwtl
pop
pop
pusha
and
jnp
in
fs
xor
mov
push
sarl
xchg
sub
pop
xchg
adcl
insb
sub
or
mov
pop
jmp
loope
pcmpgtw
and
xchg
clc
push
pop
push
jecxz
jl
es
pusha
aas
push
mov
pop
jge
addr16
arpl
push
leave
frstor
aam
and
push
iret
pop
lods
push
sti
dec
loop
xchg
lock
jge
aam
andl
lret
jo
mov
fwait
and
arpl
into
dec
and
mov
cmp
jge
movsb
pop
mov
pusha
repz
fwait
pop
js
jo,pt
cmpsb
jbe
sub
das
lds
or
clc
jecxz
hlt
or
popf
std
sub
loope
fs
movsl
dec
cwtl
bound
icebp
cmp
insb
cld
jmp
pop
mov
mov
xor
jo
les
jl
sbb
or
inc
aam
xor
inc
rol
lock
mov
shrb
test
xchg
push
std
xor
pusha
xchg
or
ss
mov
fwait
pusha
jle
push
adc
bound
shll
bound
cmpsl
cltd
sbb
pop
pop
sbb
js
les
mov
js
stos
inc
sti
jmp
mov
dec
pop
sub
xrelease
ss
inc
loopne
aam
scas
sbb
andb
dec
adc
dec
mov
mov
test
into
movsl
adc
push
jmp
push
cld
bound
in
popf
dec
jae
xchg
add
push
ror
test
or
fisttps
adc
cmpsl
test
jnp
fwait
inc
pop
push
adc
mov
pop
push
add
push
addl
mov
add
push
fs
arpl
inc
stos
pop
lcall
mov
cmp
mov
cwtl
ret
sub
push
std
ds
push
popf
push
dec
clc
adc
sub
cmp
nop
and
inc
adc
mov
or
addr16
call
inc
mov
jns
and
shl
ds
mov
sub
repz
inc
pushf
mov
fbld
fmull
mov
add
pop
ljmp
je
repz
nop
xorb
jg
pop
pop
sahf
jae
jno
es
push
dec
dec
dec
and
xchg
jmp
or
xor
xchg
hlt
dec
push
lret
cmp
cmpsl
outsb
clc
aas
insb
lret
dec
xchg
and
leave
mov
mov
pop
and
sti
add
mov
pop
dec
jo
push
insb
dec
cmpsb
pusha
lret
mov
push
xchg
movsl
sub
stos
cmc
out
pop
push
mov
and
mov
das
fwait
cmpsb
mov
sub
sub
mov
adc
sub
adc
xor
push
loop
stc
lcall
adc
loope
idivb
faddl
leave
add
jmp
arpl
andb
sbb
addl
outsb
adc
mov
push
jg
sub
push
jmp
pop
mov
fnstenv
data16
outsl
mov
jae
push
nop
sub
inc
nop
sub
popa
lds
imul
dec
fidivrs
xchg
mov
rclb
mov
inc
jp
or
imul
push
pop
leave
in
pop
ret
aam
push
mov
add
dec
push
nop
loopne
mov
sahf
sub
sub
js
push
adc
sub
loopne
push
sbb
xchg
mov
pop
sahf
notb
mov
mov
loop
mov
inc
jle
gs
and
frstor
loop
ss
mov
jmp
xchg
daa
inc
pusha
popa
shll
cmp
dec
lcall
xor
jl
cmp
add
inc
hlt
pop
out
xor
ret
repz
mov
std
sbb
jmp
ret
popa
mov
add
adc
shrl
sahf
ret
js
stc
jbe
dec
jmp
cmpsl
test
stos
jl
push
mov
arpl
outsb
xorb
in
outsb
scas
ljmp
popaw
mov
cwtl
imul
lahf
xlat
pop
int3
repz
or
xlat
addr16
int3
mov
xor
cmp
iret
xor
push
mov
stos
inc
sub
hlt
sbb
cltd
repnz
popa
inc
ret
lods
sub
js
cmp
xor
bound
sub
dec
mov
sbb
imul
push
mov
mov
bound
addl
in
dec
lea
stc
cmp
mov
jmp
shl
add
outsl
push
inc
xor
mov
adc
push
pop
sub
ss
fmuls
sub
jle
cli
mov
hlt
inc
adc
mov
lcall
push
aam
adc
imul
dec
sbb
scas
mov
pop
mov
aaa
xchg
xchg
jmp
xchg
sti
hlt
orl
ret
ss
jbe
movsb
pusha
loopne
mov
dec
xor
cmp
or
sbb
xor
adc
mov
jne
sahf
fmul
adc
cmp
aas
or
bound
aaa
bound
mov
mov
sub
xchg
sbbl
inc
hlt
jo
jo
cmp
enter
cmp
ljmp
dec
cmp
jns
test
dec
dec
test
sbb
out
push
imul
xorb
sbb
es
sbb
xor
pop
sub
test
mov
out
addr16
arpl
aam
push
loope
push
stos
xchg
jle
nop
dec
xor
inc
adc
push
cmp
fcmovnbe
adc
popf
clc
movsb
in
xchg
hlt
cmp
push
push
mov
mul
mov
shr
cmp
movsb
xchg
cltd
pop
sub
jbe
push
inc
nop
inc
cltd
aam
daa
lds
rcr
movsb
xor
add
fwait
sti
gs
sbb
jle
sbb
and
add
push
int
shr
sub
pusha
lds
inc
lret
and
call
xchg
push
ds
adc
out
pusha
stos
into
mov
cmp
adc
ret
push
fsubs
loope
push
mov
out
in
dec
cmp
clc
outsl
add
rcrb
jno
repz
loopne
outsb
cmp
cmpsb
sbb
stos
jb
ljmp
push
inc
fisubrs
stos
push
mov
jne
mov
xchg
xchg
daa
mov
push
outsb
sbbl
idivl
aam
les
pusha
shlb
cltd
dec
sbb
sub
lods
dec
decl
and
ret
fsubr
xchg
xor
rcll
sahf
xchg
dec
nop
pop
sbb
cld
imul
xchg
imul
cmp
sub
jo
push
in
and
push
or
dec
mov
jo
xor
inc
sub
dec
and
clc
add
xor
in
sub
fs
sbb
hlt
inc
int
and
xchg
out
movsb
dec
mov
sbb
cmpsl
test
test
gs
pop
aas
or
jle
je
ret
shll
push
or
addb
sub
and
mov
push
push
testb
or
pusha
shl
add
push
je
js
sub
cmp
insb
jo
jmp
jmp
shlb
cltd
push
imul
in
pop
push
add
adc
outsb
add
call
cmp
xor
iret
gs
lea
pop
pusha
or
icebp
outsl
xchg
mov
xor
clc
dec
scas
insb
shrl
and
mov
add
dec
std
gs
mov
lods
cwtl
enter
mov
cmpsl
mov
add
js
repnz
cltd
orl
xlat
lret
popl
cmp
inc
add
cmc
xor
data16
sub
sbb
inc
lcall
xchg
and
cmp
addr16
push
adc
jns
add
popa
scas
cmp
imul
aas
outsl
and
loopne
mov
jl
push
aad
inc
add
pop
dec
cld
pop
jmp
mov
iret
pop
push
arpl
stc
data16
mov
ret
pusha
fwait
mov
jl
mov
int
daa
mov
popa
icebp
cmp
pusha
push
dec
jmp
xor
sub
popf
jo
pusha
rcrb
sbb
jb
mov
pop
jp
testb
lock
push
inc
dec
pusha
adc
inc
xchg
hlt
xchg
and
outsl
fsts
cmpsb
xor
jo
sub
bound
mov
xor
sub
jl
call
adc
pop
hlt
test
pop
push
mov
sub
std
xor
das
test
aas
out
pop
jg
inc
sub
pop
loopne
push
mull
dec
nop
pushf
fildll
sub
mov
pusha
lss
int3
pusha
xor
and
ja
stc
daa
into
sub
leave
xor
movsl
in
dec
pusha
pop
arpl
pop
iret
shr
cmp
jle
lret
mov
fs
xchg
xchg
mov
adc
dec
sbb
loope
and
jae
adc
das
mov
xlat
lcall
xlat
mov
repz
adc
and
mov
in
into
inc
sbb
es
sub
in
mov
outsl
imulb
shlb
mov
shl
sahf
mov
inc
pop
lods
push
lds
orb
fildl
adcb
inc
imul
push
push
push
adc
sub
hlt
icebp
rclb
fcmovnb
dec
popa
rcrl
sub
xchg
movsb
int3
mov
push
int
pop
fimull
mov
ds
inc
cmp
out
cmp
adc
imul
push
pop
sbb
ljmp
add
mov
push
nop
mov
scas
fistpll
repz
and
rclb
inc
jbe
push
dec
notb
ja
jbe
fs
add
mov
cld
push
sub
adc
ds
mov
xor
shrb
insb
mov
scas
sbb
loop
or
mov
mov
pusha
cmpsb
cltd
add
pusha
shll
add
ficomps
inc
roll
push
insl
fcoml
loop
sub
sbbb
xor
push
aaa
ja
roll
cld
pusha
add
into
inc
jg
outsl
lods
pusha
sbb
arpl
in
out
xor
fs
test
in
push
push
jb
xchg
jl
adc
dec
dec
mov
cld
sbb
shld
test
xchg
popf
xlat
adcl
add
js
in
test
push
adc
pusha
xor
inc
cmpsb
fildl
pusha
and
mov
stos
push
inc
mov
daa
inc
mov
jl,pt
and
jo
jecxz
repz
addr16
push
daa
jno
stc
aaa
iret
mov
pop
push
cmpsb
into
in
ljmp
or
sbb
sbb
and
sbb
pusha
in
jmp
pusha
outsl
xor
mov
pusha
loop
test
pop
pusha
add
lock
pusha
rcr
jp
gs
test
stos
push
pusha
mov
mov
mov
xchg
pusha
sub
xchg
cs
pusha
sub
cld
stos
leave
dec
dec
aas
pusha
clc
les
fldcw
aaa
mov
pusha
pushw
je
rorl
jl
pop
mov
fyl2xp1
ret
popf
in
lods
push
aaa
pusha
xor
sbb
fbld
mov
cmp
out
sahf
data16
mov
pop
xorl
test
bound
shlb
or
lcall
push
test
mov
loope
outsb
popl
and
insl
fidivrl
ret
adc
inc
push
test
out
gs
es
push
dec
xchg
inc
fwait
adc
cmpsb
sub
dec
ja
out
fwait
xor
popa
add
add
test
fadd
lret
sub
scas
call
and
and
test
mov
neg
int3
sub
sbb
ret
cltd
sub
ret
ror
jmp
imul
jmp
test
loope
mov
cmp
test
loope
mov
cltd
adc
pop
mov
and
ret
push
mov
xchg
inc
loopne
rol
in
loop
sub
insl
imul
push
popf
fdivrp
jbe
rcr
in
ja
out
sahf
in
jp
xor
bound
jecxz
inc
push
cmp
sbb
stos
hlt
sub
test
out
jecxz
push
movsl
stos
lret
jg
add
pop
lahf
aad
outsl
mov
cmpsl
imul
mov
mov
js
bound
xor
inc
xchg
scas
cmp
push
loope
movsl
scas
mov
lods
ret
xchg
xchg
jnp
sub
pop
cmp
jae
lds
cltd
je
loop
sub
fcompl
rorb
bound
sbb
sbbb
jo
add
pop
add
fstpt
les
insl
and
dec
jp
sub
sub
jnp
loopne
cs
cli
sbb
stos
push
push
and
stc
repz
sbb
out
mov
xchg
push
and
sub
pop
push
push
stc
and
cli
xor
ret
popf
mov
jae
adc
xchg
add
dec
sub
jns
bound
lcall
sbbl
test
lods
push
and
js
cmpsl
ret
ss
sub
mov
repz
ja
push
ret
and
sbb
or
in
repnz
subl
loope
xor
jmp
lods
dec
inc
push
inc
inc
pop
loop
inc
xchg
cmp
pusha
ss
xchg
add
xchg
push
jp
xor
repz
dec
dec
fs
fidivl
push
test
jo
jb
pop
aaa
and
cld
jle
std
gs
and
in
lret
dec
sahf
inc
and
xchg
dec
push
push
out
std
push
clc
pop
arpl
inc
test
test
inc
shl
mov
mov
clc
mov
or
andps
loop
int3
ret
jle
repnz
xor
push
fadd
enter
into
cmpsb
subb
sub
loop
pop
popf
popa
ror
dec
fisubrs
adc
call
cmpsb
loop
pop
scas
jb
pop
pop
pop
or
out
mov
or
or
mov
dec
sub
add
push
add
xor
sub
fs
loop
shrb
sbb
cmp
add
mov
lock
test
mull
mov
sbb
inc
loop
sbb
imul
imul
mov
shll
mov
lcall
sub
jb,pt
loope
dec
addb
mov
das
xlat
push
div
sahf
rclb
inc
jle
sub
dec
loope
push
pusha
inc
jmp
and
lods
testl
pushaw
push
icebp
ror
xchg
mov
xchg
jno
stc
jbe
pop
shl
push
xor
mov
ret
aad
sti
mov
scas
pop
mov
dec
sti
int3
pop
mov
mov
adc
cmp
je
mov
xor
mov
adc
pop
push
pop
dec
pop
mov
xchg
push
dec
sub
jge
movsb
adc
ljmp
clc
sahf
mov
jmp
addr16
adc
clc
lods
jecxz
jle
mov
ss
test
notl
out
xor
adc
xchg
mov
mov
mov
loope
dec
lock
xchg
nop
je
cmpsw
ljmp
pop
mov
dec
shlb
xchg
out
and
lcall
add
mov
mov
arpl
in
test
icebp
mov
jno
inc
divb
int
loop
cmpsl
mov
xchg
jo
adc
mov
mov
pop
jecxz
cmpsl
mov
mov
stc
aaa
add
iret
into
lahf
pop
addb
test
popf
inc
pop
and
cwtl
mov
sub
lahf
clc
icebp
adc
pop
stos
inc
sub
sub
inc
outsb
and
data16
enter
inc
inc
add
pushf
sub
fidivrl
dec
push
call
and
inc
push
das
jge
rep
dec
mov
sbb
inc
pop
sbb
xchg
pop
pusha
or
lock
pusha
xchg
mov
fistpll
negl
cmp
and
mov
mov
insl
dec
int
xor
jbe
pusha
xorb
cs
dec
sub
fidivrl
jmp
mov
shll
cli
sub
iret
inc
xchg
gs
and
pop
mov
or
cli
and
push
add
xor
pop
adc
icebp
ret
movsb
in
data16
sbb
mov
pop
push
pop
mov
imul
testl
pusha
mov
sub
into
pusha
xchg
imul
or
adc
cltd
out
imul
xor
pusha
dec
pop
ja
jno
pop
or
ss
pusha
mov
fistpll
lret
je
popf
pusha
test
lds
sbb
dec
adc
scas
lret
mov
loope
inc
cmp
mov
sub
xchg
mov
jp
test
fisubs
jo
mov
inc
mov
into
lret
pop
nop
xor
jge
xor
out
je
lea
shll
mov
cmp
mov
loope
das
loop
js
push
inc
jb
lea
mov
lcall
sub
push
test
mov
xor
pop
stos
in
or
aam
sub
loop
add
fisttps
mov
loop
cmpl
in
mov
pop
insb
dec
jb
arpl
popf
shlb
pusha
out
push
push
xor
stc
fisubrl
jp
popa
push
insl
pop
add
shrb
push
mulb
pusha
js
imul
repnz
fldenv
push
cwtl
sub
aaa
pop
jle
cmc
dec
mov
adc
les
fidivrs
arpl
int
mov
ret
cltd
dec
leave
sbb
cmpsl
xchg
movsb
sub
in
loopne
xor
fidivrl
cli
or
cld
shl
sub
pop
adc
cltd
adc
jbe
bound
int3
and
push
lea
jo
pop
jle
jns
push
cltd
pusha
cmp
push
outsl
sahf
mov
inc
pusha
decl
repnz
sbb
add
xlat
pusha
push
inc
cmc
fdivrs
pop
xor
faddl
mov
sti
cmpsl
pusha
popf
xor
mull
push
jge
and
pusha
sbb
pop
push
cmp
push
pusha
mov
inc
xchg
dec
dec
xchg
mov
cmp
adc
pop
cmpsl
mov
add
mov
lea
pop
and
hlt
mov
iret
pusha
lret
xor
add
int
cmp
jmp
cli
sub
sarl
xor
and
lds
adc
stos
pop
pusha
push
mov
push
xchg
pusha
cmc
daa
pop
xchg
add
andb
into
pop
dec
jmp
hlt
mov
cmp
daa
push
mov
xchg
pusha
ss
movsl
sbb
pusha
fisttpll
add
pusha
adc
in
fstps
pop
pusha
cmpsb
fs
repz
fs
pop
dec
mov
out
push
mov
mov
jo
fsub
push
imul
sub
mov
mov
stc
rorl
inc
out
mov
mov
pop
fldl
pusha
jns
cmp
into
and
push
mov
jmp
addr16
jg
push
xchg
popa
leave
sub
dec
pusha
adc
lret
push
fnstcw
xlat
xor
push
jmp
xor
andl
adc
loope
fisttpl
fidivl
popa
cli
xor
cmp
movsb
jg
in
cs
dec
xor
xorl
repnz
sbb
test
stos
mov
lret
scas
cmp
xor
popf
pop
pusha
jae
gs
imul
insb
and
push
loope
inc
push
pusha
fsts
xchg
xorl
jmp
sahf
andl
aaa
inc
dec
xchg
jp
jl
lret
mov
pop
xorl
rolb
mov
xor
sti
adc
test
cmp
insb
pusha
mov
and
std
mov
popa
out
mov
aam
xchg
mov
or
jnp
pusha
sub
int
movsb
call
dec
iret
push
xor
jl
push
out
sub
jo
lret
in
xor
lods
stos
pusha
pop
fcmovnbe
push
jbe
xor
mov
sbb
pushf
bound
outsb
imul
add
jmp
push
cld
sub
mov
dec
das
les
movsl
in
pusha
push
orl
std
ss
inc
negl
pop
shl
in
mov
and
ret
mov
fldcw
sarl
outsl
adc
xchg
popa
mov
test
mov
inc
xchg
int3
xchg
mov
jg
insl
mov
test
jnp
hlt
xchg
mov
nop
jb
lock
call
or
out
add
sbbb
push
test
xor
insb
shll
rcr
test
cmc
pop
push
add
adc
rclb
push
push
mov
sbb
das
mov
roll
xchg
jl
pop
fimuls
js
sub
mov
xchg
adc
loope
and
sbb
mov
sbb
popa
fimuls
aad
fs
ja
test
sub
stc
or
cmpsb
xchg
sbb
xor
jle
pushf
adc
mov
jg
stc
mov
pop
pusha
sarl
add
rcll
pusha
lds
xchg
jnp
mov
mov
sbb
mov
cltd
arpl
je
sbb
leave
movq
testl
pusha
dec
pop
shll
xor
cmp
loopne
addb
bound
roll
inc
inc
cld
pusha
xor
aaa
mov
mov
inc
add
and
inc
and
mov
movb
adc
xchg
dec
jno
push
pusha
sub
arpl
add
mov
lock
inc
lods
mov
jno
sbb
mov
repz
pusha
xchg
rcrl
fisubs
pusha
movsb
push
roll
pusha
push
mov
sub
insb
add
jae
inc
into
lahf
fsubp
xchg
mul
mov
in
inc
std
icebp
pusha
subb
cmp
pop
adc
xchg
or
xlat
inc
aaa
sti
mov
pusha
mov
mov
dec
xchg
pop
loope
mov
inc
pusha
inc
dec
ret
sbbl
jb
cmp
jnp
jmp
insb
jle
cmp
sub
jmp
dec
nop
add
insb
bound
jns
in
ljmp
or
in
mov
ss
dec
sub
aad
pop
test
or
cmp
pop
lea
cld
mov
cmp
shll
xor
jl
scas
adc
jle
pusha
push
push
pusha
das
xchg
mov
incl
fwait
jmp
in
stc
cmp
repnz
xor
dec
mov
pusha
and
and
into
cld
dec
jns
cmp
pusha
mov
les
cmpsl
and
jne
out
jl
pop
dec
shr
mov
cmp
pusha
mov
add
lret
pusha
imul
aas
fmull
mov
cld
mov
sub
fwait
dec
pop
in
push
nop
xlat
add
inc
aam
adc
cmp
cs
aas
push
pop
daa
inc
lcall
pusha
rcll
les
pop
out
adc
jecxz
mov
arpl
push
rorl
cmp
sub
sarb
push
sub
dec
pop
lret
sbb
ret
pop
jmp
jl
popf
test
test
fisubrs
notl
popf
inc
jg
and
and
add
out
push
mov
xchg
shll
push
jl
adc
push
dec
sbbb
aas
dec
bound
mov
mov
pop
lahf
push
xchg
xchg
sub
jl
lahf
add
mov
rclb
js
and
je,pt
loopne
bound
xor
cld
inc
jecxz
mov
js
outsl
mov
lret
inc
push
xorl
dec
fbstp
daa
sbb
insb
push
mov
pushf
pop
insb
jns
ret
pusha
push
mov
add
jl
mov
out
sbb
jnp
stos
cmp
test
loopne
push
push
lock
hlt
xor
lcall
pusha
sub
mov
sub
lcall
adc
sub
cmpsb
cwtl
cmp
test
stos
inc
mov
inc
fs
or
ret
scas
arpl
xchg
repz
sbbl
xor
pop
inc
mov
js
pop
addr16
repnz
mov
sub
cmp
dec
cmp
xchg
sbb
je
mov
dec
dec
daa
aaa
dec
test
ret
xor
cmp
sti
cmp
push
jb
cld
punpckhbw
lret
shlb
in
adc
dec
push
test
ret
movsl
mov
xchg
lds
in
jns
push
sub
cmpsl
sub
mov
jbe
xchg
pop
addb
or
iret
test
into
daa
lods
gs
pusha
xorl
mov
or
call
cld
fidivs
rcl
sahf
fildll
pop
dec
outsb
or
mov
sahf
mov
and
roll
or
push
cmpsb
push
sbb
insb
xchg
sbb
xchg
push
or
push
xor
push
cwtl
pushf
sbb
xchg
sub
adc
popa
mov
push
adc
cmpsl
adc
subl
loop
cmp
or
pusha
mov
inc
jle
sub
stos
aam
stc
cmp
lcall
mov
xor
mov
and
aam
xor
sub
loopne
xor
mov
insb
and
fwait
ret
push
jecxz
cmp
lock
mov
xor
sti
cmp
mov
leave
mov
or
arpl
shrl
cmp
xchg
ds
pop
jecxz
and
popa
pop
es
iret
lds
inc
dec
inc
in
rcrl
loopne
dec
cmpl
add
nop
repz
sbb
jno
es
nop
xor
jnp
fs
fistl
push
cmpb
sub
cmp
call
arpl
ja
and
sub
sub
jmp
inc
ret
cmp
les
jp
sub
ffree
pusha
and
mov
add
mov
ficoms
rolb
lahf
push
inc
ret
out
cltd
dec
popa
dec
jle
imul
and
jne
mov
push
cmpsl
sbb
cmp
ret
or
and
or
inc
pop
pop
push
outsl
push
cs
mov
mov
and
lahf
and
jae
inc
push
sbb
imul
push
inc
push
cmp
and
or
xor
sbbb
mov
add
or
bound
sahf
in
xor
shl
inc
pop
mov
repnz
pcmpgtd
rorl
cmpsl
jle
inc
stos
sub
lcall
testl
adc
push
sbb
push
outsb
add
inc
xchg
cmp
push
lds
and
pushf
mov
test
jle
adc
lods
dec
rcrl
inc
hlt
jb
repz
xlat
js
pop
mov
imul
xor
inc
push
push
les
sbbb
add
cmpsb
mov
xor
inc
insb
popf
push
imulb
out
mov
fidivrl
outsl
addr16
xchg
mov
pop
jg
loope
cltd
mov
bound
push
mov
xchg
add
inc
lods
push
cs
or
lret
or
sbb
xor
xor
out
pusha
and
stc
sub
xchg
adc
aad
jmp
xchg
add
sbb
in
mov
and
outsb
jle
mov
lock
mov
movsb
xlat
pop
mov
pusha
jge
pop
mov
mov
sub
pop
and
pusha
xchg
or
clc
cmpsl
push
and
jl
mov
out
bound
test
ja
addl
or
jmp
xor
mov
fbstp
sub
popa
insb
test
mov
jne
jecxz
sbb
fstpl
mov
outsb
insb
or
iret
fbld
push
ljmp
xchg
or
dec
loopne
fnstenv
and
das
imul
clc
inc
mov
adc
pusha
std
jge
lahf
mov
pusha
stos
xchg
inc
mov
add
or
inc
pop
rcr
pop
inc
fwait
xchg
pusha
lahf
int
jns
mov
push
cmpsl
push
and
lret
pop
cmc
mov
and
pop
fs
stc
out
test
adc
loop
dec
xchg
bound
mov
push
push
fs
arpl
cltd
xor
lea
aas
cmp
aad
xchg
nop
cmp
push
mov
ja
mov
test
in
pop
outsl
pusha
stc
cwtl
fwait
mov
pusha
dec
dec
in
testl
inc
mov
mov
xchg
adc
out
pop
push
imul
loopne
mov
push
lods
outsl
fld
mov
shlb
ljmp
adc
xchg
popa
aam
sbb
cwtl
pusha
decl
jns
repz
loope
fisubl
cs
mov
dec
jo
add
mov
sub
lret
test
xchg
xchg
pusha
shld
jae
inc
fiaddl
iret
jecxz
ds
mov
test
popf
and
addr16
das
sbb
xor
dec
scas
pusha
notb
bound
pusha
decb
fsts
insb
mov
movsb
xchg
imul
jl
mov
mov
fdivrl
sub
pop
pusha
invd
and
mov
inc
add
mov
stos
xchg
xor
iret
movsl
popf
shll
pop
sub
das
pusha
lds
in
loope
mov
jns
pop
cld
push
pushf
push
xchg
pusha
inc
imul
aaa
and
shrl
pop
push
push
pusha
lret
iret
bound
pusha
cmp
dec
movl
cmp
rcrb
loopne
pop
push
test
movsb
bound
push
xchg
mov
je
fsubrl
flds
pop
dec
pusha
out
aam
mov
std
pop
pop
or
dec
nop
lods
int
add
jp
push
or
imul
xchg
and
punpcklwd
in
lods
int
in
ret
push
cltd
hlt
mov
ret
push
mov
je
inc
lret
add
shll
movl
daa
pusha
cwtl
push
mov
sbb
aas
test
pxor
lea
mov
mov
xor
fs
sbb
ljmp
aad
jg
sub
or
cmp
aas
orb
popa
pusha
push
ret
test
sbb
push
pop
dec
dec
in
mov
sarb
scas
pusha
jne
jge
cmpsl
clc
lahf
mov
sbb
xchg
scas
andl
xchg
inc
ljmp
bound
outsb
pop
mov
jle
orl
pusha
xchg
je
and
and
pusha
xor
mov
aad
add
pusha
stos
lcall
imul
pusha
cwtl
out
push
mov
mov
popa
cmp
xor
popf
loope
enter
sbb
jecxz
leave
pop
mov
pusha
xchg
aam
stos
xchg
outsb
clc
fwait
sti
test
or
pusha
iret
fsubs
dec
out
xchg
pop
fsubrl
jne
clflush
adc
repz
bound
bound
pop
push
stos
sbb
mov
stc
cmp
pusha
es
ror
adc
pusha
push
or
in
hlt
mov
mov
cs
incl
xor
pusha
aam
sub
imul
fs
sbb
cltd
insl
pusha
adc
or
mov
je
out
into
or
cmp
jnp
sbb
cmc
push
mov
sub
pop
and
popa
push
and
mov
pop
xchg
lds
fs
inc
cld
out
insb
jg
adc
jno
adc
ds
sahf
insb
sahf
xlat
pop
and
dec
ss
lods
jno
lret
adc
jne
adc
pusha
or
aad
pushf
cmp
push
stos
pusha
sub
test
adc
outsl
out
pop
or
add
loope
or
mov
pop
scas
cmpsb
loop
pop
push
pusha
icebp
fwait
or
pusha
les
hlt
fcomps
mov
ja
pop
pusha
outsl
push
xchg
je
jo
outsb
insb
mov
subb
xorl
repnz
fldenv
jl
jo
cmpsl
mov
add
mov
sbb
pop
fbld
rcl
in
xor
out
mov
dec
mov
or
fildl
dec
int3
mov
mov
lds
xor
pusha
ljmp
xchg
pop
or
insb
inc
pop
insb
dec
inc
adc
fld
mov
push
out
mov
push
inc
je
add
jl
push
call
xor
sbb
and
and
cwtl
call
sbb
test
popa
pop
fcoml
fs
xchg
sbb
pusha
aaa
test
insb
mov
stc
pushf
stos
adc
je
sub
jb
test
mov
mov
pusha
and
mov
or
arpl
hlt
les
push
jl
xlat
dec
repnz
mov
pusha
jnp
aas
movsb
or
stos
sbb
pop
adc
dec
lock
fs
or
mov
mov
inc
aam
dec
and
inc
cmp
sbb
arpl
jnp
lret
ss
bound
push
mov
xchg
inc
pusha
pushf
cld
mov
int3
inc
mov
fs
sar
ljmp
push
or
mov
lea
cmp
adc
xor
push
dec
and
sti
sbb
repnz
jle
push
jl
in
repz
loop
push
aad
push
adc
insb
lods
bound
cmp
test
jle
hlt
mov
call
mov
or
or
ja
jno
iret
in
xor
lahf
pusha
xchg
xchg
jbe
negb
lds
mov
or
fldt
mov
ret
dec
mov
inc
pop
pusha
pop
cs
adc
icebp
xor
jl
mov
xchg
shll
jmp
pusha
push
push
push
lock
sti
mov
dec
inc
sbb
cwtl
cltd
ret
xorb
adc
inc
adcl
jo
enter
lret
xor
icebp
pop
aaa
mov
dec
jecxz
jecxz
cmpl
rol
cwtl
xchg
sbb
test
add
mov
dec
xor
lahf
lds
mov
and
mov
jg
mov
mov
mov
lea
in
xchg
shrl
rorl
sbb
addb
gs
jb
andb
outsl
lods
inc
and
ret
cld
sbb
and
das
mov
xchg
gs
mov
or
fdivl
xchg
out
mov
aam
push
jl
loope
pop
push
pop
inc
ret
fcmovb
cmp
jmp
push
lds
xchg
popf
mov
in
data16
outsb
xchg
add
into
inc
mov
mov
testl
lds
jp
cmp
lcall
sub
es
xchg
xorl
sub
pushw
popa
xchg
addl
xor
adc
dec
xor
mov
dec
jo
xor
loopne
cmpsl
nop
stos
inc
sub
shll
scas
stos
xchg
and
push
jp
jmp
ret
clc
inc
adc
hlt
sub
out
out
mov
divl
cli
loop
xor
outsl
sub
xor
in
sub
push
sub
push
jbe
lea
pusha
inc
loope
outsl
push
cli
push
ret
hlt
ljmp
or
loope
adc
and
int3
jmp
xchg
and
mov
jg
out
mov
jno
lahf
pop
add
lock
sbb
push
aam
rcrl
aas
and
in
push
test
mov
inc
push
inc
and
push
dec
in
ljmp
addr16
pusha
insb
mov
insl
lahf
lods
aas
scas
pusha
lds
cmp
inc
pop
xchg
aad
pusha
and
out
mov
jnp
jp
shlb
arpl
push
xor
fucomi
les
add
outsb
jne
lea
and
lods
pusha
in
inc
adc
pusha
or
push
mov
mov
pusha
outsl
sub
mov
sbbb
scas
bound
dec
xchg
jne
test
lret
jle
bound
push
push
pusha
sbb
jmp
push
pop
xchg
and
clc
cld
mov
sbb
lea
pop
mov
fcompl
jne
xor
cmpsb
leave
mulb
mov
push
sbb
mov
cli
jl
xor
mov
ljmp
repz
fisubs
shlb
xor
inc
cmp
lret
xchg
shlb
test
sbb
icebp
pop
es
into
cli
pop
cmp
repz
out
cmp
pusha
jmp
insl
test
rcr
pusha
pop
mov
or
adc
cmp
cmpsl
or
pop
stos
ficompl
pop
or
adc
roll
xchg
jecxz
add
repnz
insb
mov
cmpsl
xor
mov
cli
push
pusha
out
inc
or
dec
fs
mov
and
stc
lods
aad
xchg
popf
cmp
pushf
pusha
inc
cmp
stos
cmc
fdivs
ret
pusha
jne
in
fmull
icebp
or
fiadds
and
or
pop
cmc
aas
mov
xor
stos
pop
xchg
inc
sub
mov
aas
pusha
es
loop
jg
sub
xorl
inc
dec
cmp
xchg
les
or
mov
xorb
daa
sbb
mov
scas
or
bound
push
aam
test
mov
pop
repz
in
negl
mov
and
jae
ja
xchg
arpl
addr16
outsb
or
mov
or
inc
gs
cmpsb
jbe
mov
inc
push
xor
xlat
push
movsl
pop
pusha
out
cmp
mov
add
xchg
orl
sti
insb
pusha
jp
push
cmp
ds
aaa
repz
sbbb
jne
lods
adc
sub
xor
add
inc
xor
inc
pop
xchg
dec
movsl
mov
in
mov
xchg
mov
dec
or
mov
subb
pop
lcall
scas
in
in
inc
stc
push
loope
xchg
pop
divb
or
sahf
and
les
push
sbb
jecxz
test
lock
arpl
jno
pop
pusha
push
aad
sbb
addb
lock
call
or
hlt
mov
pusha
push
sub
push
scas
pop
cld
mov
or
fimuls
xor
fs
xlat
mov
sub
arpl
insb
in
and
fwait
mov
and
ret
adc
inc
addr16
mov
sub
pusha
rcll
insb
pop
fimuls
nop
dec
pop
ds
adc
call
fldt
lret
lahf
mov
xor
add
push
sti
adc
pop
mov
xchg
rolb
xor
pusha
adc
fidivs
or
pusha
loope
mov
sahf
jl
jle
bound
mov
js
sub
popf
mov
xchg
and
aaa
dec
je
jmp
push
xor
xchg
mov
enter
adc
out
mov
adc
cmpsb
mov
outsb
pop
sbb
mov
popa
jecxz
fcoml
leave
cmp
fs
or
fucomip
xor
inc
test
outsb
mov
jp
cld
arpl
jb
pusha
mov
push
and
push
jecxz
add
stc
cmp
loop
std
dec
out
or
sbb
cmpsb
sub
test
bound
lds
pushf
fs
push
negb
notb
inc
nopl
pop
rclb
or
pop
in
inc
push
out
test
sub
sbbl
out
pusha
pop
ds
or
fisubl
inc
in
cmp
adc
ret
push
push
jb
mov
inc
ss
mulb
mov
sub
ss
and
stc
pusha
dec
dec
popa
mov
in
pusha
dec
mov
cmp
test
je
sbb
pop
js
loope
out
xor
adc
mov
cmp
or
sub
pusha
stos
daa
in
xlat
pop
push
pusha
and
xchg
rcll
sub
xorb
pop
arpl
xchg
orb
pusha
aaa
cmpsb
xchg
inc
add
cltd
or
adc
icebp
jbe
adcl
pop
into
pop
or
sub
test
sbb
in
inc
pop
out
mov
sbb
mov
cs
xchg
shll
adc
daa
mov
fbstp
int3
cmp
ret
mov
jle
cwtl
fisttpll
jnp
lock
mov
test
mov
push
shr
insb
shlb
jmp
xchg
orb
pusha
adcb
int
sbb
inc
clc
push
jbe
pop
inc
cmp
mov
gs
jns
popa
adc
adc
pop
xchg
bound
mov
pop
pop
sbb
test
adc
adc
out
test
imul
pop
cmpb
and
xor
lret
dec
fwait
cmp
sbb
notb
adc
pusha
fs
mov
sub
iret
test
sub
imul
adc
mov
or
push
jo
leave
cmp
in
add
mov
stc
mov
sub
fsubrs
cmp
dec
rcll
mov
stos
fs
mov
pop
pop
add
cmp
jbe
jmp
sbb
dec
arpl
add
ja
xchg
je
movsl
mov
xchg
rol
fidivl
outsl
adc
das
pop
mov
insb
xor
mov
add
mov
fsubs
mov
sahf
pusha
xor
and
in
lds
pusha
imul
add
pusha
push
loopne
shll
xor
lea
rdtsc
pusha
repnz
in
nop
adc
mov
int
xchg
data16
dec
pusha
xorl
shlb
push
add
pop
jnp
mov
pop
icebp
ljmp
xchg
cld
loopne
dec
insb
test
pusha
sbb
inc
mov
xor
lcall
mov
stos
jl
subb
xor
xor
jp
cmc
popa
popf
subl
out
cmp
out
jae
arpl
ljmp
test
cs
icebp
lds
pop
or
push
pop
pusha
jg
loop
sbb
xchg
movsb
jns
jp
pusha
repz
es
xchg
lret
fs
sti
or
inc
movsb
push
pop
pushf
sbb
test
movsl
pusha
es
dec
cmc
shrl
mov
ret
sti
sbb
dec
jbe
sub
test
sub
pusha
dec
push
fnstenv
push
xchg
jnp
pusha
dec
ja
adcb
shlb
fimuls
xchg
jae
lret
xchg
mov
pushf
dec
adc
push
std
cli
push
add
repz
and
lret
mov
aas
addr16
jno
mov
shlb
in
inc
repz
cmp
clc
ficomps
push
arpl
cmp
add
loop
adc
fidivrs
stos
lcall
adc
sbb
pop
and
fsubp
pusha
ss
mov
js
xor
cwtl
movsl
sbb
adc
cwtl
pop
rcll
pop
mov
movsl
xchg
push
push
jl
or
sub
and
sti
out
loop
push
gs
out
pop
pop
and
sbb
pusha
incl
xor
andl
out
sti
jg
mov
loope
adc
xor
in
adc
jmp
cmp
pop
cmp
cli
pop
js
stc
fwait
loopne
push
xor
dec
bound
cmpsb
lods
enter
cmp
add
addr16
nop
js
decb
pop
gs
mov
and
shrl
hlt
mov
into
sub
ss
mov
cld
dec
in
inc
jg
inc
mov
iret
sar
inc
cmp
cmp
jae
sti
ds
xchg
push
ror
mov
pop
push
xor
ret
jno
mov
jge
jecxz
ss
and
jl
mov
loopne
xor
cmp
rolb
into
into
jl
jns
insl
add
or
fs
xlat
sub
int
test
inc
fnstenv
or
sahf
cld
call
mov
push
inc
sub
fstpt
dec
dec
fwait
mov
jmp
dec
inc
cmp
aaa
jmp
cwtl
insb
outsb
pop
dec
mov
lret
loopne
pop
enter
out
mov
mov
jnp
adc
stc
cmp
pop
or
orl
adc
jb
inc
xchg
sub
ret
imul
int
sub
fsts
pushf
aaa
mov
push
or
add
loopne
dec
sub
pop
cmp
clc
jl
ds
mov
xchg
pop
pop
addr16
push
js
adc
push
movsb
mov
pop
jl
jbe
js
xor
add
sbb
shll
andb
lret
stos
push
xchg
add
mov
aas
push
imul
xlat
jae
mov
xchg
fs
sub
repz
outsb
imul
xor
mov
fidivs
mov
dec
std
stc
or
mov
xor
ret
and
pusha
imul
xchg
dec
insl
bound
sbb
loope
mov
jl
dec
arpl
ret
enter
fcoml
add
or
push
dec
xor
push
or
pop
mov
add
mov
addb
out
cmp
adc
sub
lcall
arpl
sarb
nop
dec
loope
cmpsb
push
push
sbb
frstor
out
xor
xor
ret
enter
pop
ss
mov
push
xchg
cwtl
fsubs
push
sub
jge
mov
jmp
push
and
hlt
xor
jmp
mov
sub
rorb
mov
and
ret
adc
sub
jae
push
ret
inc
xor
and
push
imul
jmp
add
dec
lds
push
push
popa
inc
inc
cmp
push
movsl
je
dec
or
pushf
imul
push
jge
pop
cmp
jmp
or
pop
addr16
test
jecxz
jg
fdivrs
or
sub
addr16
jb
push
mov
cwtl
pop
bound
dec
cwtl
stos
shrl
js
fmuls
jo
inc
int3
push
mov
sub
push
xlat
jns
jo
mov
or
daa
clc
ret
or
dec
rcrl
jp
and
mov
enter
fwait
and
pushf
or
out
cmc
cmp
cltd
imul
dec
mov
dec
and
push
jo
xor
mov
push
fdivrl
dec
outsl
fucomi
or
loope
push
sar
jbe
stos
dec
lcall
cmpb
mov
roll
in
inc
cld
imul
hlt
xchg
gs
mov
insl
shrb
push
cmc
inc
ret
inc
dec
xchg
imul
and
and
xchg
mull
imul
xor
bound
adcl
push
int
jge
pushf
fnstsw
je
cmp
shlb
inc
enter
adc
add
push
mov
push
data16
data16
repz
jnp
push
fs
fsub
xor
ret
pop
cmp
xchg
mov
ret
popf
outsb
xchg
push
sbb
jae
pusha
nop
pop
ss
push
adc
dec
and
inc
adc
insb
sub
xchg
out
lods
sbb
mov
imul
popa
push
fsubs
cs
loope
aad
push
cmp
and
pusha
test
xor
orb
ret
out
loope
inc
xchg
sub
inc
jge
mov
sbb
sub
or
mov
cmp
in
movsb
call
dec
addr16
cltd
xchg
in
mov
xchg
fnsave
push
sbb
dec
mov
outsl
dec
mov
xor
cmp
dec
gs
mov
xchg
mov
out
or
xchg
cmp
cmp
decb
sbb
rorl
sbb
neg
hlt
outsb
mov
pop
mov
xchg
scas
and
ds
ret
lcall
jl
sub
mov
loopne
dec
ja
or
clc
imul
ret
xor
dec
repz
test
adc
push
cmp
sub
rclb
mov
sbb
xor
mov
daa
hlt
inc
adc
dec
and
dec
mov
cltd
pop
cld
test
loope
addr16
jle
loopne
fwait
jl
cmp
stc
jbe
jg
jge
pop
dec
imulb
cmp
data16
xor
xchg
loop
xchg
icebp
mov
mov
dec
sbb
nop
inc
adcl
xchg
icebp
scas
jno
add
sbbb
stos
sbb
aam
out
fldcw
loope
dec
or
push
lret
jbe
lret
pop
dec
jg
in
icebp
pop
sbb
stc
xchg
cwtl
cld
and
jno
ds
xchg
push
int
mov
pop
mov
popf
stos
nop
and
hlt
fdivp
adc
fs
inc
mov
insl
ret
jo
pusha
push
cmc
in
pop
add
icebp
push
mov
push
xlat
fimull
iret
lret
pusha
loop
out
pop
mov
mov
mov
push
pusha
inc
adc
mov
or
inc
pusha
loopne
aas
jne
sarl
test
mov
sbb
fimull
jmp
clc
mov
cld
mov
pushl
mov
add
out
push
fisubrs
xchg
pusha
push
or
negl
mov
add
mov
mov
adc
popa
outsb
push
mov
addr16
sub
jmp
dec
cwtl
jnp
scas
mov
adc
xchg
push
pusha
test
cmpsb
dec
cmpsw
dec
jl
js
jb
bound
dec
sub
and
loop
mov
jbe
das
mov
mull
pusha
js
popa
mov
sbb
push
add
pushf
pusha
xchg
out
dec
xor
xchg
mov
mov
mov
or
into
arpl
pop
xor
push
mov
pop
fs
push
xchg
jno
inc
in
repz
pusha
jecxz
inc
adc
xchg
hlt
adc
add
sbb
int
loop
dec
mov
and
mov
bound
xchg
cmpsl
leave
fs
push
cmc
jne
fists
sub
sbb
mov
cmp
in
inc
loop
cmp
mov
andl
inc
jle
pusha
inc
mov
mov
cmpsb
ja
popf
nop
in
jl
pusha
sub
movsl
mov
jmp
inc
rcll
mov
dec
mov
mov
jl
pusha
push
out
sub
sbb
pusha
mov
inc
jns
andb
xchg
lds
mov
push
add
push
lods
and
pusha
out
gs
or
add
pushf
jp
xchg
and
add
jno
test
aad
in
adc
mov
out
jne
enter
sbb
jle
xor
arpl
test
mov
pusha
int
pushf
roll
cld
dec
mov
insb
popa
loop
mov
mov
pusha
fistps
xchg
popf
jne
xchg
lods
mov
es
adc
int
in
pusha
stos
jno
in
inc
mov
pop
pop
cld
pop
ja
cmc
pop
push
stos
lds
mov
test
test
in
bound
cwtl
sti
jns
fmul
pusha
xchg
mov
xchg
xor
pop
jge
cmpl
adc
ret
loope
add
mov
lahf
bound
in
loopne
push
dec
sahf
loope
add
lret
jmp
cld
jl
bsf
icebp
inc
fildl
add
insl
rcl
xchg
test
sbb
jl
jo
inc
iret
xchg
bound
or
test
adc
pop
mov
es
idivb
pusha
push
push
sub
mov
cmpsb
mov
sbb
xchg
and
mov
xchg
shll
jb
imul
popa
jno
mov
cwtl
mov
jecxz
fs
dec
mov
popa
fistpll
sub
aam
mov
jle
shl
mov
pusha
sbb
mov
jbe
xchg
cmp
pusha
push
adc
ds
aad
ss
pusha
in
sub
test
jb
pusha
fs
sbb
je
sub
int
pop
cmpsl
pop
lret
ret
in
lea
mull
gs
sbb
mov
ss
sahf
movsl
pop
stos
lods
push
mov
ja
jl
pusha
xchg
and
sub
pusha
push
addr16
outsl
stc
clc
pushf
stos
sub
push
pop
and
loopne
xor
std
loope
movsb
cld
adcb
fwait
sarl
fldenv
popf
aaa
cli
adc
in
adc
add
clc
pop
pop
pusha
iret
ud2
in
pop
xor
addr16
scas
adc
and
mov
jl
dec
lock
mov
jbe
loop
repz
pusha
push
shrb
push
push
adc
nop
add
mov
inc
bound
cli
adc
mov
dec
mov
sub
fmuls
pusha
pop
push
jnp
jecxz
imul
adc
fsubl
cltd
or
inc
sbb
mov
pop
in
into
xchg
inc
pusha
xchg
movsl
pop
jae
pusha
mov
adc
fs
lods
les
decb
pop
sub
insl
jmp
push
or
insb
jae
in
jbe
ret
div
push
pop
jnp
popa
push
fs
cmp
inc
pop
pusha
ss
arpl
sti
sbb
sub
outsl
lret
xor
dec
icebp
push
adc
adcl
les
push
test
mov
ret
xchg
pusha
or
fwait
lret
cmp
arpl
into
iret
add
cmp
sub
ret
sbb
or
into
gs
jecxz
lods
pusha
cld
pop
mov
inc
mov
aaa
into
cmc
je
xor
mov
dec
inc
movsb
and
aaa
mov
push
pusha
shlb
push
dec
cmp
ficoms
mov
stos
jns
mov
ds
mov
fidivs
pusha
push
pop
inc
shll
cmp
bound
lret
hlt
push
aad
loop
mov
xlat
mov
notl
xchg
aam
das
test
cwtl
js
sbb
addr16
pop
cmc
pop
jecxz
xor
andl
push
cmpsl
je
rcll
mov
fsubs
cmpsb
pusha
idiv
clc
xchg
or
mov
pop
shl
in
lret
pop
or
jns
adc
insl
and
shll
inc
and
icebp
mov
xchg
push
sbb
mov
jbe
pusha
pop
call
mov
mov
mov
out
fcmovnbe
pusha
jl
add
pop
xchg
and
pop
dec
inc
es
insb
mov
inc
call
stc
pusha
into
adc
sub
jno
pusha
shlb
ficoms
push
jmp
stos
cwtl
sub
stos
sub
popf
jbe
xor
repz
cmp
cmpsl
adc
push
test
sbb
xchg
insb
dec
cmc
push
mov
pop
int
mov
pusha
inc
xor
sti
mov
jg
jmp
pusha
jge
rclb
stos
sbb
test
sahf
sbb
loope
mov
es
pop
adc
pop
mov
sub
sub
aaa
push
pusha
out
ljmp
sub
scas
imul
sbb
push
inc
andb
pop
xor
mov
fwait
icebp
jmp
pusha
lods
fisubs
outsl
lds
pop
hlt
jecxz
push
fbld
orl
pusha
lods
mov
and
sbb
in
es
push
mov
fildll
jge
pusha
jb
lds
pusha
mov
xchg
xor
pusha
jno
lcall
dec
mov
inc
sub
sar
lret
pusha
cmp
pop
test
loopne
pusha
stos
jns
aad
mov
mull
aam
out
call
xchg
dec
das
scas
jle
bound
pusha
sub
pop
xor
xchg
stc
dec
cmp
push
pop
pusha
sbb
pusha
inc
mov
lret
andl
sar
cmp
cmp
mov
ljmp
rsqrtps
pusha
xor
jo
sbb
sti
popa
xchg
fsubrp
xor
subl
mov
jge
xchg
mov
xchg
push
adc
cmpsb
mov
loopne
pusha
xchg
rolb
adc
mov
sbb
test
pop
push
aaa
shrb
xor
mov
pop
cli
and
add
and
pusha
push
jbe
mov
rcrb
mov
outsl
adc
lret
xchg
or
std
jno
pusha
fidivrl
cltd
dec
lods
test
mov
aad
psrlw
mov
outsl
dec
mov
xor
sub
pusha
mov
scas
cltd
mov
bound
call
pusha
es
cwtl
adc
ja
pop
ror
lahf
lds
mov
clc
mov
jecxz
shrl
lret
ja
xor
inc
insb
repz
push
arpl
dec
mov
pop
mov
mov
pusha
jl
and
pusha
mov
movsl
sti
test
test
outsb
add
push
xchg
sub
fs
jno
mov
xchg
mov
lcall
sub
loop
inc
adc
cmpsl
aad
and
jmp
cmp
in
jnp
inc
sub
pusha
xchg
leave
ja
push
inc
pusha
xor
std
add
sbb
sub
push
shl
cmp
icebp
pusha
adc
out
xchg
xchg
or
iret
bound
sarl
bound
lock
inc
jne
stos
push
loopne
pusha
lock
or
jb
pusha
icebp
push
leave
dec
pop
repnz
stos
jno
out
dec
insl
mov
ret
pusha
jp
add
addb
in
pusha
mov
jbe
lock
neg
cmpsl
lds
iret
arpl
pop
or
pop
jns
imul
popf
inc
pushf
pushf
rcl
push
cmpl
aaa
cmp
xchg
js
test
outsl
push
fmull
addr16
or
and
repz
rol
push
stos
ljmp
mov
int
bound
pusha
out
adc
cmp
aad
or
and
pusha
fisubrl
fstps
js
cmp
sub
and
adc
push
xchg
push
pusha
inc
subb
mov
mov
out
cwtl
add
ror
je
mov
out
and
cmp
jo
in
pusha
add
stos
dec
pop
dec
fistl
insl
mov
popf
mov
lret
std
pusha
jg
adc
jecxz
mov
xor
aam
mov
jl
rclb
inc
out
sbb
dec
push
ja
pusha
andl
outsb
stos
cs
enter
pop
pushf
sbb
pusha
idiv
out
adc
jae
push
xor
or
shl
nop
pusha
shlb
jecxz
andb
mov
sub
pop
mov
out
mov
pusha
or
mov
jae
adc
mov
pusha
test
out
jge
push
pop
fnsave
jle
jne
pusha
inc
push
xchg
pop
jmp
mov
dec
in
mov
push
fs
sbb
stos
inc
out
fdivr
pusha
pop
rorl
xchg
sbb
push
inc
inc
movsb
in
mov
stos
dec
nop
lods
push
pusha
push
sahf
dec
mov
daa
and
push
xor
push
or
adc
add
int3
cwtl
popa
pushf
bound
push
jo
adc
xchg
lock
popa
mov
sbb
orl
cld
pusha
xchg
xor
add
mov
ret
push
scas
psraw
mov
xor
pusha
cmpsl
icebp
leave
addr16
dec
ret
pusha
sbb
aam
fs
push
add
push
xlat
adc
cwtl
xchg
jnp
sbb
sbb
or
cmpsl
test
into
fmull
lock
and
cmp
bound
push
sar
xor
pusha
test
pusha
jo
jp
es
cli
dec
add
ret
pusha
cmp
insb
fwait
pop
loopne
inc
mov
adc
mov
popa
imul
add
xor
loope
or
insb
jae
in
xlat
jl
mov
sub
out
or
and
push
pop
pusha
in
aad
stc
ja
mov
inc
aam
shlb
pusha
je
loop
mov
push
jmp
mov
test
adc
add
stos
push
dec
jnp
xor
insb
lock
bound
pushf
sahf
test
daa
lahf
mov
cmp
dec
adc
dec
adc
mov
mov
dec
inc
lret
add
dec
es
cmp
cld
add
jecxz
dec
cwtl
addl
scas
xor
insl
loop
sbb
add
arpl
stos
or
dec
ficoms
mov
loope
xchg
jl
xor
and
add
push
push
fmuls
pop
inc
pop
adc
dec
bound
popf
xorb
mulb
clc
push
pop
pusha
popa
add
aas
pushf
mov
jb
xor
pop
inc
lcall
xorb
jl
mov
aaa
jns
inc
fdiv
mov
xchg
xchg
in
xor
aam
lahf
mov
dec
mov
adc
adc
lret
test
pop
out
mov
jns
pop
mov
shll
mov
andl
xchg
mulb
fisttpll
mov
sbb
nop
into
decl
mov
and
loopne
pusha
dec
cmp
fbstp
das
lods
sbb
pusha
push
jp
pop
inc
clc
imul
push
jg
pop
sbb
aaa
arpl
sbb
and
lds
lret
mov
and
xor
or
add
mov
rcrl
pusha
nop
imul
push
add
xor
push
pusha
test
and
mov
xchg
xchg
movsb
or
add
xor
inc
iret
pusha
int3
js
movsl
sti
sbb
mov
or
mov
sbb
mov
iret
in
jno
and
dec
mov
mov
mov
inc
ja
loopne
push
mov
fs
test
dec
jo
mov
in
sub
mov
mov
push
rorb
mov
iret
mov
sub
add
arpl
xchg
or
andb
push
sbb
cmpsl
and
test
aad
xor
xchg
jbe
shlb
pushf
mov
sbb
or
jmp
dec
mov
pop
cli
cltd
jl
loop
inc
jnp
imul
adc
and
mov
pop
pusha
xchg
or
leave
adcb
in
pop
out
fidivs
pusha
fsubrl
dec
into
addr16
mov
je
xor
popa
bound
jne
lds
jae
xchg
jmp
pop
stc
push
add
in
mov
cld
mov
fidivl
out
loop
inc
fists
bound
jp
gs
mov
sub
pop
and
jne
jge
adc
push
gs
jg
or
ja
scas
lcall
nop
outsb
mov
lea
pop
cmp
cmp
mov
or
call
aam
outsl
incl
xchg
popa
xor
pusha
pop
xor
andl
jmp
jb
shll
scas
jl
mov
in
push
popa
dec
mov
andb
loope
mov
fdivrl
xor
out
stc
jne
cmp
fcom
scas
mov
not
pusha
pop
outsl
xchg
out
test
inc
popf
sbb
fs
lret
xor
stc
add
push
mov
pusha
sub
shlw
push
aam
push
ficomps
cld
adc
lds
inc
jne
mov
aam
xchg
pop
shll
mov
dec
nop
test
cmp
xchg
push
popf
dec
insb
andl
lea
add
rcll
pop
mov
mov
jmp
mov
test
test
fmull
xchg
jl
pop
into
add
psllw
test
push
xlat
iret
xchg
mov
pusha
push
mov
sbb
mov
lret
pusha
mov
test
jl
arpl
sbb
adc
push
sbb
mov
movsl
rcr
cmp
aad
outsb
add
pop
pushf
fiaddl
pop
mov
add
stc
lret
fs
add
jb
loope
inc
ja
adc
push
test
movswl
xchg
inc
pusha
jle
mov
sarl
scas
test
and
sub
std
jp
or
mov
xchg
roll
push
cltd
pusha
daa
addr16
movsb
jl
ret
push
inc
int3
sahf
bound
subb
push
xor
cld
popa
pop
je
scas
push
inc
mov
rcrb
andl
pop
inc
sub
push
repnz
mov
mov
cmpsl
mov
bound
inc
adc
icebp
test
popa
xor
mov
test
jns
sti
test
jle
loop
mov
gs
repnz
filds
leave
push
in
add
mov
stc
nop
jo
sti
in
or
bound
xlat
ja
pusha
js
and
xor
add
fs
pop
lea
inc
xchg
adc
push
hlt
scas
cmp
cs
ss
jns
aas
scas
lock
pusha
repnz
pop
les
add
jb
lahf
mov
jge
cmpsl
xor
lret
push
xchg
fdivr
lret
cmp
inc
sarb
scas
and
loop
aas
fsubl
aaa
inc
ret
lds
dec
xchg
pusha
mov
inc
inc
mov
lahf
pop
xor
jmp
add
mov
pusha
and
xor
xchg
leave
fwait
mov
jl
ret
push
gs
loopne
mov
adc
dec
sub
jb
adc
aaa
mov
outsb
fimull
mov
pop
dec
enter
push
pusha
loope
lret
lds
mov
dec
ds
jo
js
and
push
pop
mov
call
ja
out
orl
mov
pop
push
rcll
stc
fucomi
out
ret
xlat
out
cwtl
fisubs
dec
fisttps
mov
adc
pop
xor
nop
sbb
pusha
mov
testl
xor
push
aam
inc
repnz
jo
aaa
push
xor
or
add
bound
les
adc
nop
pusha
cmp
lods
mov
jl
fsincos
decl
fimuls
mov
jl
mov
out
or
scas
into
push
icebp
jle
fldcw
pusha
shll
or
les
out
sub
cwtl
jns
push
mov
jge
ljmp
pusha
loopew
dec
and
lock
repz
fwait
dec
fidivl
shld
dec
pusha
sti
addb
call
inc
push
int3
stc
sbb
xchg
mov
pusha
xlat
inc
sub
cmp
sub
andb
js
inc
jle
jb
jns
pusha
popa
mov
jecxz
xchg
sahf
aad
in
xor
push
jo
lahf
bound
cltd
fists
aaa
inc
js
jl
xchg
jp
adc
xor
jg
adc
mov
jns
icebp
jo
xchg
xor
mov
stos
or
add
mov
mov
pusha
andb
adc
push
ds
cmp
shl
pusha
hlt
or
sub
xor
cmp
dec
popf
adcl
imulb
inc
inc
out
adc
cmc
lea
dec
push
dec
loope
ret
mov
sbb
mov
outsl
sbb
insb
popf
pop
dec
divl
mov
adc
loope
pop
push
push
shlb
mov
push
outsb
jecxz
outsl
test
mov
ret
call
jbe
or
push
pushf
je
data16
sbb
fs
es
mov
pusha
cltd
or
daa
ja
sub
loopne
adc
and
frstor
shll
pop
lret
repnz
inc
sbbb
loope
cmc
icebp
mov
dec
dec
xor
in
js
stos
imul
add
fisttps
sbb
dec
or
sbb
fists
inc
and
dec
arpl
adc
push
scas
popf
ds
scas
lret
push
ds
jp
xor
pop
into
dec
jmp
loop
dec
fsubrl
dec
push
push
test
bound
sub
mov
push
cld
sub
xor
loop
mov
aam
xchg
fsubrl
add
mov
mov
sahf
repz
dec
and
mov
dec
cld
dec
jl
sub
in
pop
loope
dec
add
inc
fsts
dec
adc
andl
ret
and
push
loope
mov
shrl
cmc
xchg
mov
enter
pusha
cmp
cmpl
out
jp
xor
repz
out
aam
lods
xchg
or
stos
mov
sbb
je
jg
aam
jo
add
lea
and
lret
dec
loope
dec
fstps
push
and
mov
inc
and
gs
inc
js
mov
inc
xor
sub
lret
inc
add
repz
push
int
scas
cmp
int3
lahf
fdiv
pop
cmpsl
imul
mov
add
out
in
scas
cld
dec
shrb
insb
add
cmp
jae
adc
or
sbb
jl
out
dec
xchg
scas
cmp
daa
fwait
and
dec
jmp
inc
loop
mov
imul
cmp
shlb
out
push
mov
sbb
rolb
jp
scas
outsl
test
arpl
loope
hlt
ss
icebp
mov
dec
adc
pop
push
cltd
arpl
and
add
adc
scas
mov
pop
int3
shr
les
inc
addr16
out
lock
rcr
stos
mov
jb
add
jl
imul
jnp
fidivs
cld
fldenv
jecxz
or
pop
popf
adc
mov
xchg
in
pop
pop
inc
lock
xor
aas
shlb
push
jp
cmp
push
adc
xchg
insb
sbb
or
mov
out
ja
or
bound
orl
iret
adc
add
push
dec
sub
and
aas
fldt
adc
mov
inc
aas
inc
in
andb
push
mov
inc
ljmp
xor
arpl
test
call
lret
mov
and
and
jo
push
inc
xchg
inc
xor
lahf
negl
popa
sub
xchg
sub
or
xor
inc
jne
sub
sarb
inc
mov
sarl
pusha
mov
mov
mov
sbb
outsl
ror
jb
dec
push
imul
push
mov
adc
sub
fucomi
out
test
sub
mov
add
dec
xchg
push
or
subb
fnsave
jmp
test
icebp
inc
lret
icebp
pop
arpl
ljmp
dec
bound
enter
push
pop
lahf
jmp
cmp
fwait
lahf
push
in
add
addr16
xchg
xorb
jecxz
jno
clc
in
push
push
mov
or
mov
jno
aas
in
cmp
bnd
imul
cmpsl
xchg
lea
ret
inc
rcrl
and
movsl
and
subl
sub
lods
adc
fwait
cmp
sub
push
sub
loope
mov
sub
mov
fsubp
into
xor
xchg
and
jnp
sbb
push
out
inc
xchg
icebp
mov
jmp
fwait
push
push
xchg
insb
sbb
repnz
loopne
dec
bound
cmp
in
cmpsl
stos
and
cmp
xchg
es
call
pop
fcmovnbe
sbb
lahf
das
xchg
dec
push
inc
incl
xor
sbb
ljmp
push
loop
mov
popf
jge
xor
in
enter
pushf
xchg
mov
aad
shlb
out
loopne
pop
repnz
mov
or
pop
arpl
inc
and
mov
and
imul
roll
mov
subb
lret
sbb
adc
and
fwait
mov
frstpm(287
xor
xchg
and
xor
mov
loopne
ds
loopne
add
mov
iret
and
scas
push
mov
adc
mov
push
pop
mov
sub
mov
add
mov
scas
out
clc
es
dec
icebp
mov
int3
into
sbb
ja
ficoml
out
popa
cmp
mov
mov
stc
roll
xor
fwait
andb
jb
rorb
int
sub
pop
test
loopne
mov
cmp
int3
push
pop
jae
loop
loope
icebp
push
mov
xor
andb
pushf
in
pop
pusha
psubq
mov
pusha
scas
xchg
pop
pop
mov
fcoms
in
or
bound
cmc
stos
pop
ffree
xchg
pop
out
shll
scas
aas
push
and
mov
stos
push
popa
xchg
adcl
pusha
inc
add
jne
mov
sti
mov
push
imul
stos
bound
data16
xchg
or
mov
cmp
mov
je
inc
negb
aaa
xorb
loopne
mov
mov
mov
push
pusha
and
inc
push
repz
push
lret
inc
mov
movsb
xchg
pusha
xor
xchg
fwait
add
push
xchg
push
lods
addr16
xor
lret
dec
stos
loopne
rolb
fdivl
sbb
lret
push
cmp
pop
in
pop
jmp
xor
mov
pop
mov
pop
fs
mov
hlt
fsubrl
shr
cmp
jo
cmp
inc
sbb
push
mov
lcall
pusha
jns
mov
mov
mov
test
sbbb
adc
roll
cwtl
add
outsb
push
jnp
mov
fs
push
scas
lds
jp
js
xor
mov
dec
ror
in
fwait
xor
cmp
shll
push
mov
xchg
jo
stos
mov
iret
ret
cld
cli
xchg
ret
sarl
shl
imul
in
cs
jle
cwtl
hlt
mov
fsts
jp
mov
test
push
jb
mov
mov
pusha
lods
mov
dec
cmp
pop
insb
and
lret
and
std
jle
hlt
mov
sub
push
and
cmpsb
js
xchg
andl
stos
inc
bound
fsubl
inc
sbb
sti
sbb
jnp
mov
lret
adc
ja
popa
mov
dec
pop
outsl
es
pop
in
mov
aam
lods
sarb
inc
mov
nop
stos
lret
movsb
in
and
push
adc
pusha
es
frstor
push
jae
subb
cwtl
lods
mov
push
fs
pop
ret
call
fs
movsl
jbe
mov
scas
pop
jl
push
jecxz
fdivs
aad
adc
adc
cmp
fcoml
cmp
mov
jl
les
or
cmpl
pusha
in
outsb
insb
je
pop
lock
pusha
add
scas
inc
popf
loopne
out
cmpsl
sbb
xor
mov
push
aam
dec
mov
iret
xor
xorb
xchg
shlb
in
mov
movsl
xlat
pop
call
push
dec
fbld
ss
leave
call
aam
cs
sarb
fisubrs
jnp
dec
dec
pusha
lods
fildll
lret
pusha
sub
jmp
push
aas
push
pusha
scas
das
call
icebp
inc
pop
es
push
dec
loop
bound
fs
and
repz
jmp
sub
jo
push
jl
pop
xor
mov
sub
insb
int3
jl
pop
pop
and
stc
sbb
mov
test
imul
ret
dec
and
sub
cmp
movsl
sbb
mov
popf
pusha
dec
cmp
jmp
push
int3
out
imul
sahf
jnp
sbb
sbb
lods
or
xchg
pusha
jmp
insl
test
sub
jns
aas
cmpsb
cld
mov
fs
les
aad
sub
inc
cwtl
fsubs
mov
clc
jecxz
jmp
sub
sub
pop
xor
pusha
push
in
sbb
push
sub
lea
outsl
jns
enter
and
stc
dec
xor
pusha
jle
adc
pop
rcrl
scas
pop
mov
xor
pop
dec
ss
shll
fdivrl
ret
xchg
sub
dec
xor
mov
pop
pop
mov
dec
fcompl
cli
imul
insl
xor
leave
jb
sub
lods
xchg
or
notl
pop
adc
loopne
xor
mov
outsl
pusha
sahf
insl
enter
mov
add
mov
pusha
pop
sub
test
xchg
cmp
mov
sub
mov
bound
pop
pusha
push
outsb
mov
pop
insb
mulb
sub
addb
loope
xor
mov
cwtl
fidivs
bound
jge
mov
mov
rclb
scas
pop
or
rcl
mov
bound
pusha
mov
enter
subl
sahf
mov
cltd
idivl
xchg
int
xchg
je
sub
rcr
loop
addb
pop
leave
repnz
mov
mov
xchg
xchg
xchg
pusha
sbb
call
icebp
mov
adc
pusha
xor
push
in
fisubs
push
add
aaa
pusha
rcll
xchg
cmpl
xor
mov
cmp
arpl
loop
xlat
xchg
jl
insb
mov
inc
xor
pusha
inc
sub
add
js
outsl
fsubs
mov
clc
inc
pop
cmc
ja
addb
pusha
cmp
fsubrs
mov
pusha
xor
jl
push
mov
xchg
adc
ja
adc
out
sub
mov
cmp
cmc
cltd
sbb
xchg
imul
inc
xor
cltd
adc
mov
lea
or
fucomp
xchg
pop
xchg
jmp
arpl
dec
fcmovnu
push
out
int
or
pusha
add
sbb
dec
pusha
mov
fsubl
shlb
inc
xchg
jle
and
pop
mov
iret
xchg
fldenv
push
and
add
and
sarl
mov
ljmp
xor
test
jbe
jns
lahf
popa
pushf
dec
jno
lahf
xchg
test
test
inc
ret
in
aad
xchg
repz
pusha
mov
inc
imul
subl
outsl
cld
cwtl
dec
mov
fmuls
mov
cmp
pusha
jae
dec
cs
mov
cmp
jp
or
dec
ljmp
lcall
dec
call
out
clc
ds
sub
lret
popa
inc
outsl
fsubrp
push
popf
bound
rorl
jmp
add
scas
mov
pusha
negb
push
cltd
mov
in
pusha
xor
pop
aas
sub
stos
mov
dec
cmp
pop
roll
into
outsb
aaa
in
xchg
cmc
xchg
test
jecxz
cmpsl
pop
fucom
es
xor
loope
leave
pop
cmpsb
pusha
mov
cmpl
lret
jmp
sbb
pusha
sbb
divl
adc
int3
iret
arpl
out
mov
xor
fidivrl
popf
inc
loope
mov
xchg
push
push
fsubs
int
std
adc
negl
arpl
arpl
jae
nop
sahf
out
adc
testl
stos
pop
int
js
add
mov
ljmp
insb
mov
jo
inc
mov
repnz
fsts
dec
push
xchg
dec
mov
adc
popa
scas
dec
pop
lock
inc
pusha
mov
jbe
dec
sti
sahf
mov
cmpsl
imul
fcmovnb
andb
ret
test
mov
jl
hlt
nop
xor
mov
pusha
mov
xchg
mov
pop
jecxz
inc
out
jl
sbb
and
arpl
sub
push
fdivrs
inc
je
and
xchg
mov
sbbl
jge
les
jb
mov
pusha
sub
inc
pusha
mov
push
cld
add
and
clc
stos
mov
xchg
popf
mov
imul
shlb
pop
gs
jne
inc
orb
dec
cmc
insl
mov
notb
stos
pop
call
jo
lret
addr16
push
jne
pop
ret
cmp
repnz
xor
jno
add
cmp
aaa
fildll
jl
and
push
cmc
mov
sbb
bound
pusha
jmp
mov
sub
push
mov
xchg
lret
dec
lea
shl
cwtl
push
pusha
out
enter
sbb
push
bound
dec
insb
cmp
pop
xor
daa
movsl
push
pusha
ds
inc
mov
orb
xor
popa
inc
pop
bound
icebp
loop
pop
jmp
into
das
daa
adc
add
pusha
faddl
xor
cmc
inc
or
fld
std
mov
xlat
cwtl
ret
arpl
dec
pop
out
xchg
rcll
add
std
lods
jmp
imul
pusha
pop
out
loopne
mov
ret
push
adc
pusha
mov
and
jmp
cmp
xchg
roll
popa
inc
insb
pop
aam
mov
addr16
lahf
pusha
dec
push
sub
adc
sahf
xchg
push
scas
dec
js
jl
inc
inc
jecxz
cmpsb
xor
and
arpl
mov
adc
in
fmul
sbb
mov
pusha
xor
je
ja
out
insb
jl
daa
add
test
sub
das
xchg
cmp
stos
pop
push
dec
or
pop
sbb
in
lcall
je
xor
xor
decb
iret
pusha
xorl
sub
pusha
inc
push
iret
mov
jl
cmp
aam
pop
sahf
xorb
or
sbb
xchg
gs
push
pop
cs
jne
pop
ss
lds
cmpb
pusha
or
addr16
pusha
cmp
sti
push
inc
mov
sbb
roll
push
sub
mov
cmpsl
adc
jl
in
cmp
push
jmp
mov
fnstcw
cmp
test
pusha
push
sbb
in
movsl
ret
pusha
inc
repz
mov
pusha
jmp
inc
jno
adc
je
jb
popa
int3
movb
leave
lea
pusha
aad
mov
shlb
pop
adc
dec
adc
pushf
pop
fdivs
lea
sub
jo
cmp
lock
pusha
sbb
jo
sub
xchg
xor
icebp
or
cli
cmp
and
subl
fstl
pusha
in
sub
push
sbb
je
jo
xchg
into
cmp
cmp
clc
xchg
test
mull
mov
xchg
pushf
cld
outsb
jmp
cltd
lds
mov
adc
jecxz
lods
push
les
xor
adc
inc
loope
outsl
rolb
incl
fmulp
pusha
or
movsl
js
cbtw
mov
psubd
pusha
sbb
push
ds
push
mov
mov
pop
adc
cmp
dec
push
lret
out
out
pop
mov
sbb
es
into
pusha
pushf
aaa
add
mov
pusha
lea
pop
adc
add
jmp
shrl
pusha
inc
add
pop
pop
mov
or
inc
fsub
mov
nop
mov
and
ds
or
mov
out
pusha
mov
dec
adc
mov
lods
cmp
pusha
call
fisubrl
pusha
sub
pop
mov
pusha
sub
mov
mov
inc
mov
xchg
sub
loope
mov
loop
bound
cmp
or
add
xor
cmp
roll
sub
lock
bound
sbb
jecxz
pop
pusha
lret
inc
dec
iret
les
add
xchg
adc
push
mov
cld
sub
pusha
xchg
es
andb
pusha
imul
in
setae
mov
addb
sub
jecxz
mov
and
jl
in
sarl
or
rolb
cmp
inc
aaa
mov
sbb
inc
or
push
popf
pusha
add
push
push
testb
gs
loopne
aad
loopne
xchg
mov
dec
mov
enter
or
push
popa
insb
iret
mov
inc
dec
scas
jl
mov
imull
pop
int3
mov
mov
or
dec
pushaw
int
xchg
or
jge
mov
fld
xor
mov
sub
mov
pop
cmove
push
jecxz
fistpl
lds
stc
aam
out
jl
cmp
add
movsb
andl
pop
mov
sub
mov
pusha
out
push
add
push
mov
pusha
cmp
lods
mov
out
cld
icebp
insl
jle
mov
push
pusha
mov
outsb
loopne
push
jae
loop
lcall
insb
lods
dec
jg
xor
fs
xchg
out
clc
pop
mov
mov
dec
loopne
into
sbb
adc
inc
lds
cld
subb
push
dec
inc
xchg
scas
mov
mov
dec
enter
pusha
xchg
sub
and
les
jno
add
pusha
orl
lahf
pop
imul
jp
pop
lds
push
xchg
pop
jl
dec
divl
scas
cmp
pop
scas
andl
inc
pusha
es
rolb
inc
cmpsb
daa
pusha
mov
dec
fwait
sti
ret
movsb
add
sub
mov
pusha
stos
mov
sub
repz
pusha
lea
inc
push
mov
fidivrs
jl
loop
rcl
jo
mov
xor
push
ss
pusha
pop
push
sbb
or
mov
push
cmp
push
aas
fs
and
mov
lods
adc
out
pop
inc
adc
pop
lods
push
fistpl
sbb
pop
xchg
andl
add
dec
jecxz
adc
inc
cltd
sbb
vpunpcklbw
shll
inc
mov
shlb
mov
adc
jno
sti
pusha
es
orl
xchg
fwait
jns
mov
push
or
pusha
imul
or
lret
insl
dec
andl
stos
ljmp
xor
andb
cmp
test
out
and
sub
arpl
sbb
inc
sub
flds
xchg
sub
ret
adc
bound
fstpl
clc
xorb
and
pusha
cltd
dec
int3
test
js
push
ss
int
daa
aam
inc
sub
jge
pusha
inc
movsb
mov
pop
mov
push
dec
in
cli
sub
or
jmp
pusha
nop
xor
pop
pusha
and
pop
pop
fs
rcll
xor
add
insb
lret
push
cmpsl
add
sti
adc
movsl
jl
ds
aas
fs
dec
dec
or
inc
mov
lds
aas
int
xchg
pushf
jle
sub
jbe
pusha
sub
movsl
aaa
popa
js
jp
adc
xchg
jge
dec
xchg
and
and
out
sub
and
loope
in
inc
pop
cmp
xchg
mov
xor
aam
sub
fcom
adc
decb
xor
pusha
and
jl
and
lds
jnp
xchg
mov
popf
stc
mov
push
in
fs
push
inc
je
std
stos
adc
arpl
inc
xlat
pusha
inc
lock
mov
fnstsw
pusha
mov
jb
push
aam
hlt
add
dec
popf
pusha
and
jae
jo
out
pusha
nop
push
mov
cs
scas
jne
mov
movsb
negb
cmp
mov
pusha
mov
js
loope
dec
mov
pusha
insb
outsl
stc
xor
pusha
mov
pop
inc
sbb
cmp
pusha
loop
xor
mov
mov
pusha
xchg
adc
mov
xchg
cmp
cmpsl
mov
rcrb
sahf
xor
pusha
lret
les
sub
fwait
cltd
xchg
pop
cwtl
jle
xchg
mov
xchg
loope
adc
pusha
fisubrs
push
cld
dec
sbb
dec
loopne
mov
or
and
push
cli
pusha
mov
dec
push
daa
and
popf
mov
jle
adc
mov
jecxz
xor
pusha
or
cmc
and
adcb
push
mov
lock
jecxz
sub
movsb
push
pusha
push
int3
stc
test
xchg
mov
lea
mov
push
cli
or
jae
das
loop
shl
pusha
movsl
push
cmovno
dec
jbe
cmpsb
mov
xor
dec
cmp
adc
add
in
jo
rolb
xchg
ss
add
mov
hlt
ficoms
mov
shll
xchg
cld
inc
pusha
xchg
ret
fidivrl
movsl
popf
adc
jg
popa
ja
cmp
sub
lahf
pusha
xor
inc
clc
add
inc
fldenv
dec
nop
fwait
pusha
and
jmp
adc
xchg
push
loop
add
xlat
add
mov
and
cmp
subl
lcall
push
mov
pusha
pop
je
sbb
lcall
xor
sub
movl
scas
hlt
aas
insb
jbe
ret
cs
lock
mov
xor
dec
dec
test
or
mov
stos
in
fidivrs
push
jb
iret
dec
into
dec
pusha
add
daa
sbb
cmpsl
jl
mov
js
add
or
shlb
push
loope
jb
and
inc
push
or
sub
cld
jo
jae
movsb
popa
gs
leave
xlat
mov
aad
std
jg
bound
nop
xchg
popa
mov
pusha
repnz
xor
stos
stos
cmp
out
pusha
shr
cmp
add
je
rol
inc
sbb
enter
std
cmpl
scas
nopl
mov
pusha
scas
in
fidivl
movsb
adcb
dec
cltd
sbb
jg
popa
into
add
sbb
jge
inc
xchg
test
mov
mov
pusha
xchg
adc
es
mov
xchg
bound
movsl
mov
imul
aas
scas
lods
mov
repnz
loopne
js
or
push
je
add
push
mov
mov
xor
repz
lcall
cmp
push
out
add
mov
push
aad
pusha
pop
mov
stos
enter
movsb
mov
shlb
or
fsubs
jecxz
insb
adc
inc
out
pop
scas
xchg
sti
jl
ret
pusha
xor
stos
pusha
test
cld
fbstp
push
das
pusha
adc
xor
pop
imul
adc
pusha
mov
fadds
shlb
int
xor
push
pop
jmp
mov
push
sahf
cld
arpl
pop
pusha
cmpsb
xor
enter
add
jne
rcrb
cmp
add
xchg
dec
or
js
lcall
pop
dec
lret
sbb
xlat
mov
enter
mov
sub
pusha
mov
mov
jg
push
inc
mov
sbb
pop
jno
enter
mov
loope
xor
xchg
sbb
xor
je
daa
sarl
jae
pop
pop
fsubl
arpl
fwait
mov
xchg
mov
sub
dec
inc
cmc
pop
fs
pop
push
adc
and
push
inc
dec
and
jecxz
movsl
punpcklbw
and
jmp
push
pusha
lock
xchg
or
push
pusha
and
lods
imul
in
popf
adc
pop
mov
sahf
xchg
movsb
jl
jb
into
jnp
sbb
xor
data16
mov
pusha
stos
stos
popa
or
outsb
loop
adc
mov
pusha
std
dec
rclb
or
popa
cmp
daa
lds
repz
add
jo
add
pop
xor
js
xchg
mov
mov
add
add
andl
push
addb
pop
insb
cmc
sbb
cmp
pop
add
xchg
jle
loopne
sub
mov
iret
pusha
popf
add
out
lods
fdivl
addr16
lret
scas
outsw
test
push
mov
and
aam
add
aas
and
pusha
pop
pop
inc
jns
fwait
es
pusha
lcall
push
movsb
inc
jnp
sub
jecxz
push
ljmp
inc
not
mov
mov
push
popa
push
jb
jp
mov
pop
les
push
leave
enter
mov
add
shlb
add
pushf
es
sbb
out
pusha
stc
cmp
fwait
xlat
mov
lea
xorb
mov
loopne
push
mov
jge
xor
pusha
mov
or
insb
mov
mov
imul
fwait
adc
insb
jle
jae
fdivrl
and
pop
popf
pcmpgtw
pusha
les
test
push
mov
mov
and
lods
and
loope
aaa
pop
jmp
add
inc
inc
sti
jo
loop
sbb
dec
lea
xchg
aaa
pusha
xor
mov
pusha
lcall
add
popf
push
sub
cmp
daa
adc
filds
hlt
inc
push
leave
xor
pop
jg
add
aam
adc
movsl
sbb
inc
xor
nop
mov
iret
loop
xchg
ja
mov
sahf
pushf
cmp
rcr
iret
pusha
xlat
jbe
push
mov
pop
icebp
shll
mov
dec
sbb
je
and
or
fbld
imul
xor
in
fmull
inc
pusha
pop
push
xchg
pop
mov
mov
sub
bound
jne
inc
insl
push
and
lret
lods
lret
adc
jno
negb
sub
ds
jmp
ljmp
pusha
loop
cmp
cmp
outsl
cltd
push
inc
pop
negl
mov
imul
and
adc
push
jbe
loopne
pusha
or
sbb
incl
shl
xchg
aam
jl
mov
das
and
mov
sbb
pusha
inc
xchg
mov
imul
mull
jbe
and
xchg
lods
jg
and
mov
dec
filds
rolb
pop
jmp
ret
loopne
cld
les
pusha
in
push
lcall
test
dec
jmp
arpl
pop
test
cld
mov
das
pop
aaa
jnp
pusha
and
mov
jns
sub
shlb
icebp
leave
push
add
arpl
out
pop
scas
sahf
jmp
mov
lcall
lret
test
stos
aaa
mov
pusha
mov
popf
or
add
fsubl
imul
pusha
dec
sub
addb
scas
sti
ret
pusha
lahf
ss
cmp
das
mov
pusha
push
cmpsl
inc
and
mov
pusha
popa
mov
test
pusha
and
mov
pusha
xor
ss
icebp
inc
xor
pusha
cwtl
mov
lcall
data16
aaa
pusha
mov
dec
sub
sbb
xchg
shll
mov
scas
loopne
nop
mov
sub
mov
std
pop
sub
loop
dec
lods
idivl
outsw
lods
adc
pop
sti
mov
fiadds
and
lods
jg
ret
filds
fs
pop
inc
push
test
mov
mov
dec
jae
iret
shll
out
push
mov
mov
shlb
xchg
or
stc
pusha
jb
push
ja
nop
rcrb
jmp
popa
mov
jl
lahf
jnp
pusha
or
test
dec
std
or
movsl
push
pusha
clc
jp
push
inc
cmpsl
stos
pusha
stos
addl
pusha
incl
cltd
lahf
mov
popa
pop
cwtl
inc
sub
lret
jbe
mov
sbb
adc
pusha
xor
popf
pushf
xor
imul
popl
sub
inc
jb
pop
inc
sti
jne
push
jno
push
or
xchg
bound
push
jl
je
imul
jecxz
andl
les
pop
or
std
scas
jl
jno
cmp
jp
xor
inc
lods
inc
xor
pusha
cmp
test
pusha
fdivrp
jg,pn
insb
mov
xchg
sub
test
test
sbbb
in
adc
pusha
jae
lods
dec
push
or
xchg
cwtl
lret
bound
fs
mov
icebp
movsb
pop
mov
outsb
lods
cmc
fisttpl
addr16
adc
sbb
outsl
cmp
imul
int
sub
fcompl
aas
mov
iret
or
dec
lcall
sahf
jne
cld
test
jbe
dec
mov
movsb
add
jbe
adc
cmp
push
cmpsl
mov
test
cs
pop
jge
hlt
mov
mov
mov
push
adc
adc
pusha
data16
int3
fs
sbb
push
jo
mov
mov
aam
cli
mov
shl
mov
pop
pusha
jle
cmpsl
adc
pusha
jno
add
adc
sub
xchg
clc
lea
push
pop
pop
add
jbe
pusha
in
jb
lock
inc
loopne
mov
sub
push
lahf
dec
lods
cs
sti
sbb
push
scas
cmpsb
pusha
leave
sbb
mov
in
and
jns
adc
jecxz
pop
sub
dec
movsb
pusha
iretw
ret
mov
or
sub
adc
ret
and
insb
xchg
dec
jnp
cmp
in
mov
lahf
setnp
rcl
pop
mov
ss
cmp
andb
pusha
nop
into
pop
arpl
push
fnstenv
bound
insb
in
js
shll
lds
adc
push
mov
xchg
lea
movsb
call
pusha
sbb
or
add
pop
ds
outsb
js
dec
mov
mov
fwait
xchg
push
xchg
mov
fstpt
push
ss
pusha
movsb
dec
dec
lock
icebp
fldl
fs
xor
xlat
aad
cs
jl
sbb
jg
into
in
pusha
dec
sbb
and
pusha
lds
loope
mov
dec
lea
jge
popa
icebp
cmp
mov
lock
pop
stc
insl
and
rcl
pusha
aad
mov
pusha
jmp
out
and
add
push
lret
mov
popa
xor
jae
mov
jecxz
clc
fcomps
jbe
cmpsb
stos
add
pusha
cltd
mov
sbb
add
inc
orl
cmp
jnp
jo
pop
outsb
push
and
arpl
rclb
mov
mov
loop
pop
sub
nop
push
mov
mov
mov
pusha
int3
cwtl
mov
lcall
push
lahf
das
cmp
or
adc
loope
pusha
out
inc
mov
add
pop
mov
mov
loop
cmp
inc
cmpsb
inc
pusha
shl
mov
pusha
in
gs
pusha
add
mov
stos
push
mov
push
xor
sbb
cmpsb
in
sub
loopne
pop
cltd
xchg
and
xorl
jl
xor
inc
fldt
pusha
cld
shl
stc
enter
sti
mov
cmp
adc
pop
adc
ds
ss
mov
out
cmpsl
arpl
and
jns
mov
xchg
outsb
fisttps
push
mov
ds
aad
repz
and
push
mov
subl
sbb
int3
inc
mov
inc
and
scas
mov
mov
daa
push
sub
shll
out
mov
inc
inc
scas
jp
mov
adc
aaa
loop
xchg
and
mov
jne
mov
jl
xor
adc
mov
shlb
pusha
inc
test
or
in
dec
dec
add
sbb
test
xor
aas
scas
and
jl
aaa
fwait
mov
jle
das
or
rep
adc
decl
jecxz
insb
cmp
fadds
push
iret
popa
mov
mov
insl
bound
call
fwait
sbb
andb
push
mov
sub
adc
sbb
jo
out
wbinvd
mov
stc
out
mov
mov
int
push
stos
jnp
out
pop
pusha
test
mov
cmp
and
mov
stos
mov
xor
mov
cwtl
pusha
sub
nop
repz
xchg
jb
dec
test
xor
repnz
pusha
fistpll
jne
lahf
pusha
cmp
mov
movsl
adc
xorb
dec
bound
sbb
ficoms
bound
xor
push
xchg
out
lret
xchg
lods
mov
adc
mov
cmp
pusha
fisubrs
sbb
roll
fsubr
mov
and
dec
pusha
mov
jge
cmc
lea
lret
sahf
mov
mov
loopne
cwtl
push
test
pusha
fistl
ret
or
xor
pusha
dec
roll
adc
jl
mov
addr16
shr
pop
es
add
inc
add
dec
xchg
pusha
adc
xor
mov
fcomp
jecxz
js
and
movsb
bound
xlat
adc
out
dec
sbb
dec
aas
and
pusha
pop
stos
sti
add
cmpl
sbb
in
adc
stos
pusha
imul
loope
cmp
movsb
test
inc
pusha
insb
push
mov
jecxz
inc
pusha
or
rcrl
iret
out
or
out
xchg
popf
arpl
pop
pop
pusha
and
mov
mov
pusha
or
sub
cmpsl
fcoms
lahf
mov
pop
cmp
pop
xchg
mov
repnz
xchg
pusha
movsl
adc
jns
xchg
lea
pop
dec
jno
test
mov
into
inc
sbb
jnp
pop
sarl
and
movsb
xchg
or
jecxz
push
adc
xor
jno
pusha
dec
xor
mov
and
mov
cmp
mov
test
adc
xor
xchg
popa
inc
lods
mov
pusha
dec
nop
pop
add
sahf
scas
test
das
mov
notb
mov
pusha
aas
je
or
add
iret
das
mov
cmp
xor
stos
add
cwtl
xchg
lret
shlb
addr16
cmc
ret
add
cmp
dec
push
xchg
adc
and
pusha
adc
inc
adc
pop
out
std
mov
in
movsb
pop
dec
cmp
sbb
lds
ret
rclb
mov
pop
mov
je
ds
and
rclb
insb
das
lret
mov
push
and
adcb
lahf
sub
jecxz
stos
notb
adc
pusha
or
sbb
cwtl
inc
jns
and
insl
bound
pushf
pop
jl
xor
mov
jns
aam
fdivs
aad
filds
jmp
cmc
pop
movsl
lret
inc
in
pop
jecxz
cwtl
add
pusha
adc
daa
lret
dec
add
cmp
call
push
jecxz
gs
mov
clc
scas
add
xor
shll
jle
mov
xchg
addl
ret
sub
jne
dec
gs
mov
mov
lods
sahf
pusha
mov
mov
inc
popf
cltd
pusha
and
outsb
adc
pop
leave
mov
test
in
cli
pop
cmc
adc
shl
outsb
xchg
stc
sub
mov
in
loopne
xor
std
pop
aam
fidivs
lea
mov
sbb
into
ret
jg
pusha
xor
ljmp
cmp
popa
mov
mov
mov
call
cmp
insb
dec
xchg
jno
and
add
into
push
fs
xchg
sbb
xor
es
jbe
dec
cld
bound
ret
in
xorb
xchg
cmpsl
add
fyl2xp1
jl
pusha
arpl
pmaxub
xchg
es
dec
mov
lcall
ret
sbb
pushf
cmp
mov
add
pusha
test
cmp
dec
or
push
pop
push
pusha
out
addb
pusha
and
mov
lahf
fs
popf
push
lea
sub
pusha
stos
cmp
aad
sti
popa
lea
or
and
pop
xchg
mov
lods
cmpsb
fsubs
repnz
lock
cmc
push
pusha
inc
inc
jge
stos
inc
fwait
push
pop
xor
jne
iret
pusha
cmpsb
mov
dec
outsb
int3
repz
ss
nop
mov
cld
mull
jecxz
sub
mov
push
mov
data16
xchg
je
push
ljmp
pusha
popf
or
mov
out
push
negl
add
pop
sti
popl
daa
cmpsl
pusha
jg
mov
loop
sbb
xor
jae
data16
cmpsl
pusha
add
dec
adc
xchg
lds
push
mov
pop
pusha
inc
loope
jbe
sbb
adc
mov
push
insb
insl
scas
mov
sbb
mov
or
mov
mov
pusha
into
push
ds
pushf
or
enter
loop
jecxz
addb
ds
cld
jo
call
pop
cmc
xlat
jno
lods
rcrb
sub
mov
pusha
inc
repz
imul
jg
test
ja
daa
jne
xchg
jb
xor
cmp
jmp
cmc
mov
adc
adc
ret
jge
andl
outsl
adc
pusha
out
cmp
add
dec
xchg
pusha
lahf
ffree
les
xchg
in
in
bound
pop
scas
mov
inc
inc
and
jo
xchg
push
imul
cmpsl
outsl
fisubs
ds
mov
pusha
xchg
mov
mov
rorl
stc
sbb
data16
out
aas
xlat
cmc
andb
add
sub
dec
sbb
cmp
pusha
cmp
pushf
ja
std
inc
pusha
add
ss
add
jo
leave
pop
fisubl
add
sbb
and
shl
and
mov
add
dec
in
and
leave
jmp
pusha
stc
push
adc
lea
shll
cli
mov
dec
mov
sbb
bound
stos
mov
dec
cmp
adc
push
jb
pusha
lock
lock
lcall
pushaw
jecxz
sub
out
add
movq
pusha
jbe
cltd
dec
pusha
icebp
xchg
push
dec
jge
jns
pusha
add
mov
pusha
cmp
jg
cmpsb
xor
mov
mov
pusha
or
push
rcrl
or
fimull
stc
mov
out
sbb
xchg
cld
je
icebp
subl
adc
fsubs
pop
mov
mov
fwait
mov
daa
push
jg
ret
cmp
pop
frstor
loopnew
pop
cmpsl
cmp
daa
outsb
lock
push
inc
adc
mov
xchg
xchg
pusha
out
pop
push
es
pushf
mov
bound
cmp
pusha
lahf
xchg
and
mov
lods
in
push
fcomps
pop
es
shll
mov
sub
bound
push
jnp
fstpl
mov
insb
fidivrl
insl
mov
mov
inc
sub
enter
mulb
sub
cli
nop
add
lret
pop
loop
hlt
push
pusha
mov
fs
xchg
push
rcr
je
mov
bound
cmp
mov
pusha
imul
movsb
xchg
xor
pop
xchg
test
loope
jp
xor
push
stos
or
xchg
mov
mov
fs
or
loopne
bound
jle
out
cltd
mov
jae
jecxz
mov
in
cwtl
cli
stos
bound
mov
shl
stos
add
cmp
adc
dec
lahf
and
pusha
mov
std
dec
test
das
ljmp
mov
in
movsl
and
sbb
xchg
sbb
out
jno
cmp
out
scas
xor
and
inc
andb
incb
fs
mov
jmp
sar
dec
cmp
dec
frstpm(287
hlt
mov
cmpsb
adc
mov
fnstenv
loope
pushf
jne
into
cltd
xor
mov
jge
scas
mulb
fwait
in
pop
fsubp
pusha
adc
cs
stos
iret
pop
jne
mov
fildl
push
mov
popf
mov
mov
ret
pavgb
push
test
pop
out
lods
sbb
xchg
push
out
jl
inc
pop
pusha
or
mov
fs
scas
ds
pusha
scas
sub
outsb
jmp
aam
mov
fmul
ss
in
cmpsb
pusha
xchg
jb
scas
cmp
pusha
shl
lahf
andl
imul
mov
pusha
testb
jg
aad
lret
addr16
xchg
nop
ja
mov
sbb
cmp
or
mov
mov
sub
test
sahf
xorl
aaa
adc
or
orl
ljmp
lcall
ds
or
ret
scas
push
fsubl
cmp
loop
xor
icebp
pushf
ret
inc
sub
mov
cmp
inc
aas
repz
ret
mov
xchg
lahf
sti
push
xchg
movsl
xor
loope
pop
lds
adc
mov
shlb
mov
andl
cmp
iret
stos
mov
dec
inc
fnstenv
sub
fdivs
ds
fs
mov
imul
mov
movsw
pop
mov
sub
fwait
cld
cltd
push
or
data16
sarb
sub
cmp
jp
shll
imul
cmp
pusha
inc
adc
mov
andl
push
pop
int3
loopne
hlt
rcrb
adc
es
insb
xor
dec
mov
scas
push
mov
imul
jae
insb
inc
nop
pop
jl
and
pushf
and
cmpsb
fsubs
enter
ja
jo
push
scas
jne
mov
cmp
stos
and
adc
dec
pushf
pusha
lods
cld
out
pop
xchg
and
pusha
mov
mov
cltd
pusha
gs
cs
fs
aas
cld
mov
push
push
loope
shlb
lret
test
xchg
jb
xchg
inc
xchg
fs
arpl
mov
out
aaa
sub
ds
mov
test
leave
orb
cmp
movsl
mov
in
jp
pop
mov
and
fsubl
push
sub
sbb
repz
inc
mov
shlb
ret
push
xor
or
test
arpl
mov
pop
pop
cmpsl
aam
imul
push
xor
icebp
out
lret
adc
nop
sbb
adc
lea
jne
inc
frstor
ficoml
stos
pusha
xchg
test
adc
shll
fnstcw
sbb
push
jbe
es
popf
outsl
pop
stos
clc
fwait
jp
push
xchg
dec
jl
iret
test
xchg
arpl
pusha
xchg
cmp
lahf
mov
sub
in
orb
movsb
pusha
pop
xchg
inc
jnp
or
out
mov
lret
mov
lods
mov
iret
mov
inc
and
divb
cmp
jmp
push
push
fwait
out
dec
pusha
jle
je
jbe
in
dec
xlat
fs
cmp
ds
sbb
mov
cmpsl
popa
jne
popa
inc
xchg
mov
inc
bound
popl
jno
cmc
fxch
xchg
mov
in
mov
jne
xor
repz
push
pusha
fildll
not
mov
out
pusha
push
adc
leave
es
test
mov
adc
addl
jbe
push
in
lea
cmp
insb
lret
rorb
pop
dec
adc
fcomps
pusha
insl
dec
add
divl
or
and
xchg
pusha
mov
pop
push
insb
fwait
mov
popa
lock
or
mov
loope
and
mov
scas
mov
insl
lods
inc
test
in
sub
mov
push
bound
dec
pop
pusha
popf
mov
les
in
mov
repnz
hlt
and
gs
pusha
ja
lret
dec
bound
push
jo
xorl
mov
cltd
inc
loop
aas
pop
sub
imul
out
push
pusha
sti
rcll
mov
sub
push
imul
leave
or
pop
lock
rcrl
sbb
mov
adc
lret
lcall
cmpsb
inc
andl
push
xor
shl
push
push
cmp
pusha
mov
pop
xchg
xor
cmova
push
mov
mov
sbb
jno
mov
mov
popa
jae
fisubs
inc
in
insb
pop
stc
daa
mov
ret
mov
lahf
pusha
push
jae
inc
and
int3
lret
enter
pop
mov
movsb
loop
bound
add
pusha
ja
cld
pop
insl
jmp
pusha
xchg
push
addr16
mov
sbb
mov
inc
pop
cltd
jecxz
dec
stc
stos
dec
pusha
add
jl
push
enter
imul
mov
cli
scas
stc
insb
ja
outsl
pop
jns
fdivl
sahf
jg
sbb
and
or
cmpl
loope
ds
xchg
jnp
jecxz
dec
ja
jo
pusha
lea
fdivs
repz
jb
mov
test
inc
loop
inc
adc
jg
shlb
jge
mov
stos
mov
arpl
mov
mov
inc
dec
mov
fsubs
addr16
add
cli
pusha
xor
push
in
pop
pusha
inc
mov
push
scas
inc
shrb
dec
mov
mov
jo
push
cmp
mov
jp
popa
and
addr16
lret
pusha
shlb
ret
cmpsl
jnp
push
sbb
adc
js
and
sti
pusha
adc
sahf
imul
fsubrl
push
xchg
mov
js
pusha
mov
cmp
jbe
mov
stc
fsub
sbb
jne
cmp
or
sub
mov
jmp
xchg
xchg
movsl
lcall
sahf
dec
cmp
je
fs
fnstenv
cmp
sbbl
pusha
cmpsb
clc
sub
dec
js
push
iret
test
roll
and
or
pop
pusha
add
jle
mov
leave
cwtl
pusha
sub
daa
pusha
dec
sbb
inc
xchg
push
ficoms
ds
clc
jge
push
aam
add
inc
cld
aam
fsubr
test
jge
add
insb
fisubrs
in
ret
jno
push
out
push
add
lds
test
push
mov
xor
inc
and
pusha
imul
mov
pusha
cmp
mov
pop
lret
fcomps
cmp
sbb
clc
mov
pusha
xchg
jp
mov
mov
loop
pushf
pusha
fcomp
dec
xchg
data16
out
dec
test
add
mov
sbb
add
sub
jl
fmulp
out
pushw
mov
jecxz
adc
lret
sbbb
and
icebp
and
js
adc
mov
cmpsb
inc
gs
fcoml
xchg
add
jle
pusha
mov
repnz
stc
mov
xor
lea
add
adcl
test
enter
cmp
stos
mov
vinserti64x4
leave
fs
or
xor
cmp
in
xchg
int
xchg
pusha
dec
insl
popa
movsb
dec
fs
jb
mov
add
mov
mov
push
pusha
imull
adc
pusha
xor
fidivrs
jge
mov
xor
pop
inc
sub
mov
pusha
inc
xor
dec
cmpsl
pop
inc
imul
xchg
mov
xor
fsubl
imul
adc
fwait
aam
test
out
fisttpll
pusha
test
push
mov
jecxz
fs
repnz
cmpsb
dec
add
arpl
add
jg
mov
pusha
stos
cs
push
add
fadds
fidivrl
pop
ds
sub
sbb
ret
pusha
sahf
mov
jnp
xor
cmpsb
ss
or
pusha
insb
popl
sbb
jns
pop
aas
lahf
pop
xchg
mov
add
inc
pop
mov
in
and
dec
pop
das
loopne
insl
lret
mov
movsb
xlat
sbb
pusha
lock
leave
test
int3
adc
dec
pop
in
mov
and
push
xchg
sbb
loope
add
pusha
ds
daa
lds
test
and
dec
andb
mov
shll
mov
push
dec
xchg
mov
lcall
pushf
test
bound
mov
sub
mov
xchg
cmpsb
jg
pusha
lods
pop
jae
repnz
pusha
jmp
add
das
mov
ja
sub
adc
push
add
shrl
lock
push
xchg
mov
or
inc
or
cmpsl
pusha
adc
mov
adc
inc
pusha
cltd
jl
inc
movsl
pop
sbb
pop
sbb
cli
mov
pusha
cmp
xchg
add
movsl
bound
pop
mov
pop
jp
mov
push
inc
es
add
mov
pop
sti
dec
inc
popf
sub
mov
sub
xor
lret
imul
enter
outsb
imul
inc
inc
ret
cmpsl
cmp
dec
mov
adc
mov
mov
aaa
inc
push
pop
popf
aas
int3
push
inc
mov
pop
mov
in
xchg
andl
jl
and
push
mov
xchg
mul
inc
movl
aas
scas
sbb
pusha
cmpsb
pop
jle
imul
ds
pop
pusha
xchg
dec
cli
cmpsl
out
int
xchg
pusha
push
cwtl
leave
pusha
add
imul
pusha
lods
dec
sub
add
rcrb
or
xlat
mov
sbb
jl
mov
pusha
xor
fistpll
dec
inc
pusha
stos
pop
and
mov
bound
pusha
cs
outsl
cmp
enter
fwait
test
xor
test
push
je
xor
pusha
mov
lcall
rclb
mov
push
sbb
rcrl
popa
call
in
pop
fs
cmpb
icebp
shlw
jne
sbb
pusha
clc
insb
sub
fcoms
lcall
shll
sub
rorl
fucomip
inc
fwait
push
xchg
ss
ret
adc
dec
imul
adc
fs
push
sub
pusha
pop
push
mov
jge
test
scas
sbb
dec
pusha
xchg
mov
lret
mov
into
push
adc
repz
addl
ret
pop
fwait
jp
pop
stos
inc
or
pop
andps
sbb
cwtl
and
pop
pusha
in
jae
inc
push
addb
mov
test
test
push
fs
std
outsb
dec
das
inc
bound
dec
mov
popa
jo
out
pusha
lods
or
push
ret
int
adc
inc
cmc
inc
cld
xchg
mov
pusha
jnp
cmp
pop
xlat
fildl
das
in
mov
dec
pusha
mov
int
mov
pusha
adc
xor
stc
orb
addr16
pop
or
adc
push
push
push
idivb
xchg
addr16
cld
movsl
mov
pushf
mov
add
je
add
test
mov
leave
dec
fldenv
push
je
or
mov
pop
pop
add
insl
pusha
cld
xchg
scas
push
push
lods
sub
mov
sub
cmp
fldt
bound
lret
dec
scas
inc
out
or
cwtl
jns
ret
push
fidivrl
sbb
adc
and
cli
pop
bound
add
pusha
inc
cmp
int
mov
addr16
aam
jmp
gs
push
mov
repz
iret
int
addr16
scas
xor
js
mov
adc
push
mov
ret
movsb
add
inc
adc
movsl
fwait
inc
jo
cmp
xor
cs
mov
inc
bound
cmp
xor
pop
xor
xor
es
and
pop
sub
jo
sub
lahf
and
pop
inc
pop
je
cld
xchg
inc
sub
cwtl
pop
mov
movsl
jmp
cltd
pop
repz
jl
add
push
es
pop
mov
in
imul
sub
movsl
adc
push
fs
je
ret
and
xchg
mov
sbb
ja
jl
or
popa
or
rcll
shl
pop
sbb
stc
mov
arpl
push
pusha
cld
sub
jmp
fs
mov
pop
repz
pusha
sar
jge
xor
sbb
dec
xchg
cmp
pusha
sahf
fcmovne
dec
sub
repz
inc
adc
jge
mov
pop
decl
lods
jl
out
bound
cmp
test
insb
std
mov
bound
xor
pusha
out
add
into
test
sub
sbb
or
leave
sub
push
dec
arpl
pop
aas
pusha
in
shll
mov
bound
andl
jb
mov
dec
fsub
je
sbb
scas
inc
stos
iret
sti
xchg
sbb
cmp
daa
or
pop
loop
lock
pop
xchg
daa
xchg
rolb
jp
mov
loop
push
jbe
and
jnp
test
or
fisubrs
push
dec
cmp
sbb
icebp
push
adc
int3
mov
outsl
out
fildll
mov
pop
xchg
shlb
xchg
push
fnstenv
cmp
loop
divl
mov
push
lods
mov
push
nop
scas
or
fcom
dec
aad
outsl
test
pusha
sbb
push
cmc
aad
jne
add
push
lds
cmpsb
push
sub
test
add
lods
pusha
jo
jne
andl
pusha
movsbl
scas
into
inc
and
pusha
out
mov
aam
push
testb
pop
lds
sbb
mov
mov
dec
mov
pusha
stc
imul
mov
and
call
jle
aaa
push
inc
out
pusha
leave
sbb
pop
insb
cmp
jne
cltd
mov
fs
jge
out
pop
cmpxchg
inc
pusha
and
pusha
ret
daa
lret
ja
jmp
mov
cmp
mov
push
std
pusha
push
aaa
inc
int
pusha
jecxz
outsl
mov
jo
sbb
out
fs
sahf
repnz
das
stc
ret
sub
pop
arpl
sub
pop
stos
outsl
adc
popa
add
jmp
pusha
imul
stos
jnp
outsb
cmp
dec
cmp
push
stos
pusha
scas
mov
jle
jbe
push
daa
in
pop
sub
xchg
xchg
sub
repnz
mov
loop
xchg
test
jecxz
clc
pusha
ja
lods
cmp
mov
cwtl
es
and
fsubr
rclb
pop
popa
testl
xchg
jae
aas
rcrl
mov
mov
imul
push
or
pusha
dec
aam
es
pop
mov
cmc
out
faddl
imul
stos
or
mov
setp
add
add
je,pn
movsb
adc
jne
jle
xchg
add
imul
mov
and
rcll
ljmp
ja
xor
sbb
not
xchg
and
mov
push
aaa
ficomps
xor
sub
and
mov
and
pop
sub
push
jmp
loopne
js
jo
sub
sub
and
or
sbbb
aad
stc
sahf
pop
dec
roll
adc
pop
add
mov
and
push
movb
mov
pusha
jnp
mov
mov
cmpl
inc
xor
scas
jo
add
icebp
xchg
inc
jmp
js
adc
xchg
xor
and
mov
andb
jbe
pop
push
stc
xchg
dec
ss
sbb
ret
jg
mov
push
xorb
cmp
loop
lret
mov
sub
mov
inc
orl
rorl
aaa
je
xchg
insb
and
aad
dec
sbb
sub
inc
add
push
dec
sub
push
orb
xlat
mov
mov
push
xchg
sub
mov
aam
out
mov
fs
jb
inc
xor
mov
mov
mov
in
mov
fsubs
ds
subb
add
cmp
adc
push
jo
je
add
in
data16
push
mov
jmp
movsl
mov
loope
imul
ds
xor
sbb
push
aad
fidivs
out
push
lock
mov
imul
mov
data16
mov
rorl
das
inc
sbb
pop
int3
and
data16
sub
fiaddl
aas
shll
sbb
push
clc
cwtl
push
adc
push
mov
pop
xor
loope
adc
add
push
jle
shrb
in
fisubrl
mov
dec
add
xlat
xor
or
xchg
mov
jl
pusha
cmp
pop
jns
add
mov
dec
pop
je
mov
pop
dec
cmp
in
and
out
scas
pusha
mov
pop
jmp
sbb
lods
or
fstps
jno
out
adc
nop
ja
mov
rcl
pop
mov
es
fsubrl
jae
jo
xchg
arpl
or
pusha
decl
data16
pop
ss
dec
pop
loopne
sub
xchg
sti
cmp
in
xchg
and
bound
out
or
xchg
adc
and
mov
jae
dec
pusha
sub
mov
ljmp
sub
add
aas
fldl
and
cmpsl
sub
mov
inc
addr16
jne
mov
pop
into
lea
fcompl
ljmp
das
data16
xor
rcrl
sub
insb
fstl
cmp
add
jle
adc
or
in
adc
push
fldl
jb
inc
or
sbb
mov
ret
inc
add
test
cmp
popa
jg
rcl
jecxz
cs
cwtl
test
pop
out
sub
jmp
mov
outsb
inc
mov
stc
rcrl
and
push
das
jae
mov
divl
and
push
jmp
clc
mov
lea
jno
push
sub
das
push
and
ss
mov
mov
popa
sub
inc
jnp
sbb
orb
imul
or
rcrl
xor
or
cmpsb
lret
sti
push
aaa
fimuls
pop
int3
mov
jp
and
jmp
outsl
push
mov
jp
jle
cmpsb
jge
inc
sub
dec
arpl
cmp
xchg
shll
outsl
stos
add
pop
dec
xorl
call
xor
notb
cli
or
inc
pop
mov
bound
adc
rol
mov
arpl
scas
js
iret
jnp
roll
dec
mov
cld
adc
mov
push
imul
loope
and
mov
push
movsl
fmull
sbb
dec
inc
mov
fistpll
or
push
adc
jno
cs
pop
mov
jge
ss
sti
mov
icebp
mov
mov
push
pop
pop
sarb
push
aam
fcomps
mov
ja
daa
xchg
mov
fwait
xchg
push
js
cmpsl
ss
mov
loope
xchg
inc
jno
push
mov
ljmp
cmp
sbb
sahf
and
int3
nop
inc
sub
ret
out
push
add
cmp
inc
dec
pop
lret
push
mov
movl
sahf
mov
in
lret
or
popa
sub
adc
inc
leave
mov
and
nop
dec
out
shlb
lcall
sahf
loopne
ds
xchg
mov
or
mov
popl
mov
stos
cltd
cmp
mov
lods
test
jmp
loopne
xor
das
xor
xor
add
js
add
mov
or
mov
mov
ret
cmp
inc
lret
imul
jb
pop
xchg
jno
lock
push
xor
aas
cmpsl
dec
leave
push
popa
fs
js
out
push
dec
pushf
out
xchg
bound
push
sbb
lock
push
ljmp
and
sub
push
enter
sbb
loopne
pusha
inc
cmpl
add
lock
sahf
dec
sub
arpl
jp
mov
test
pop
xor
rcl
xlat
dec
sbb
pusha
std
xchg
pop
arpl
xor
pusha
ds
lock
and
xchg
icebp
xchg
leave
sbb
push
fsubrl
jbe
mov
ljmp
popa
rcrb
std
sbb
dec
jl
das
test
mov
dec
repnz
jl
and
push
iret
and
cwtl
imul
sub
lss
pop
mov
jge
jl
out
shlb
pop
rorb
or
shlb
call
iret
ret
xchg
cmp
xor
lock
aaa
xchg
lods
pop
mull
adc
dec
push
call
lods
es
les
jecxz
cli
loope
js
sub
loopne
add
pop
adc
push
in
mov
dec
mov
inc
push
adc
ret
push
imul
aam
inc
fdiv
and
out
push
and
stos
pop
jp
aam
loope
xchg
notl
jae
push
or
adc
ret
ss
fs
fstpt
pop
dec
mov
or
int
and
lahf
mov
mov
cmp
add
xchg
dec
cld
lods
rorl
sub
sub
sub
jp
sbb
inc
cld
sub
icebp
vmovaps
push
sbbl
lock
mov
inc
fs
out
pusha
xor
pop
jge
adc
cmpsb
ss
mov
aad
sbb
orl
pop
bound
adcb
push
xchg
data16
rol
loop
fstps
sbb
xorb
add
jmp
loope
sbb
lock
and
adc
sbb
inc
and
mov
mov
inc
dec
adc
xchg
dec
mov
sarl
out
int3
ss
stc
iret
and
xchg
loope
dec
adc
lods
xor
push
cli
and
inc
ffreep
xchg
and
mov
push
into
insl
push
bound
movsl
dec
nop
push
imul
std
push
movl
adc
std
inc
fstpt
outsl
cmpsl
jecxz
mov
inc
adc
cmp
xor
cmp
js
sub
sub
push
cmp
dec
cmp
jle
jb
mov
mov
cmp
inc
fadds
and
cmc
cmp
pop
cmp
mov
inc
bound
stos
dec
mov
lret
mov
dec
cwtl
bound
rolb
aaa
loop
xchg
ror
adc
outsl
mov
pop
outsb
jle
aas
ja
movsl
inc
pusha
mov
out
xchg
sub
xor
insl
out
jns
not
mov
loop
xchg
dec
lret
arpl
sbb
pusha
mov
cltd
ja
adc
jl
stc
adc
pusha
testl
sahf
or
cmp
push
cmc
pusha
pop
hlt
push
jo
iret
pop
scas
pusha
sub
adc
stc
pop
cld
loope
pop
lcall
andl
xor
pusha
mov
mov
sub
pusha
mov
jne
stos
jo
xlat
test
loopne
pusha
sbbl
daa
adc
js
stos
mov
orl
jl
popa
outsb
mov
mov
lods
addb
mov
sub
lcall
test
adc
jge
push
loop
mov
subb
pusha
mov
inc
orl
jno
pop
xchg
xor
push
pusha
cmp
outsl
mov
popf
es
pusha
push
xchg
mov
and
adc
mov
fst
nop
fidivs
pusha
mov
jecxz
pop
insb
or
inc
jb
xchg
pusha
mov
push
pop
xchg
sub
mov
insb
inc
xor
cmp
arpl
pusha
in
into
in
pop
pushf
pop
pusha
lea
sub
mov
test
les
mov
scas
push
andl
push
pusha
addl
pop
cmc
cmpsl
pusha
push
sti
outsb
push
loop
insl
outsl
out
ret
cmp
movsl
stc
dec
icebp
mov
dec
push
loop
mov
insl
pushaw
mov
jne
in
mov
outsl
sti
lcall
pusha
jnp
ja
faddp
mov
pusha
mov
mov
clc
gs
xchg
pop
fwait
lret
push
jbe
pop
cmp
ret
mov
arpl
je
test
lcall
insb
ds
mov
inc
inc
and
pop
jae
xchg
jecxz
nop
repnz
in
inc
add
outsl
scas
arpl
add
out
mull
fs
mov
xchg
int
pusha
insl
push
lret
mov
pusha
lds
cmp
pusha
add
and
dec
jle
fsubrs
mov
mov
xchg
addb
pop
cmpsb
push
pop
outsb
pop
cmpsl
and
xlat
pusha
out
negl
pusha
fcoml
add
hlt
pusha
push
out
lea
jmp
push
daa
mov
popa
pusha
pop
mov
add
push
push
mov
pop
pop
mov
repnz
mov
inc
cmp
in
inc
clc
sbb
lds
mov
sub
fnstsw
inc
push
pop
int
test
cmpl
les
xchg
pusha
push
jno
cmp
lds
loopne
xor
push
pusha
in
fdivrl
jl
out
dec
jge
fiaddl
call
insl
outsl
pop
loop
adc
sub
fdivl
adc
lret
mov
jae
dec
push
gs
dec
cmp
push
xchg
pusha
xchg
shlb
jb
push
in
leave
insb
xor
popf
sub
pusha
adc
xchg
xor
jmp
loopne
outsl
loope
arpl
nop
scas
or
sub
mov
into
xchg
movsl
mov
dec
jmp
adc
test
nop
xlat
pusha
shlb
loop
xor
movsb
lods
inc
add
ja
test
pop
sub
xor
test
and
lret
push
pushf
xchg
imul
in
mov
nop
mov
test
jns
push
stos
repnz
inc
mov
and
test
fstpl
pop
jecxz
inc
jns
fs
pop
mov
cli
cltd
push
sarl
dec
mov
adc
dec
add
fimull
sub
xchg
mov
out
add
xor
bound
lods
addl
xor
xor
mov
sbb
push
nop
bound
mov
outsl
les
pop
xor
mov
aam
jle
adc
imul
and
xor
shl
adc
pusha
mov
cmpsl
dec
aas
addb
adc
sub
lret
dec
in
dec
sbb
subb
pop
cmpsb
les
into
sub
fisttpl
pop
sbb
mov
popa
xor
mov
dec
push
int3
pop
fldt
xchg
sub
adc
mov
fnstenv
push
pop
pop
outsl
pusha
push
or
adc
mov
push
pop
fdivl
pusha
mov
enter
adc
mov
adc
dec
icebp
cmc
cmp
int
shll
pop
mov
mov
push
push
inc
imul
pop
insb
mov
lret
mov
push
pop
and
pusha
fisubrs
rcrb
cmp
adc
mov
iret
push
mov
lret
into
arpl
lods
lea
popf
pusha
cmpsb
scas
stos
enter
pusha
loope
lcall
mov
and
xorl
in
ljmp
dec
test
xor
dec
loop
enter
cmpsl
filds
in
aas
push
movsl
mov
shl
ljmp
das
mov
ds
into
andb
jbe
out
jmp
sbb
push
outsb
inc
in
punpcklbw
inc
mov
cmp
xchg
and
call
add
pusha
inc
bnd
notl
cmpsb
mov
sahf
pop
xchg
xchg
push
pusha
adc
loopne
mov
push
pop
aad
enter
pop
bound
pusha
xchg
or
xchg
pop
sbb
aas
push
jecxz
pusha
dec
in
mov
stc
mov
and
in
pusha
inc
out
mov
icebp
pusha
dec
iret
rol
jb
aas
mov
aad
lahf
pop
inc
pusha
test
push
jb
xor
adc
xlat
mov
cmp
dec
shll
lcall
jns
jbe
push
bound
mov
cltd
out
ljmp
mov
mov
std
pop
scas
nop
dec
test
ret
loope
fs
and
cmc
test
xor
dec
out
test
aas
subb
movsb
pusha
adc
push
jmp
data16
xor
bound
cld
xchg
mov
jmp
push
mov
arpl
push
sarb
add
arpl
lods
sbb
out
cmp
cmpl
cmp
aaa
andl
flds
mov
mov
ret
loopne
jb
pop
or
dec
push
xchg
inc
stc
rcrb
mov
popa
fneni(8087
arpl
inc
or
cmc
xchg
loop
aad
shlb
mov
test
fsubrs
and
cmpsl
std
loop
es
fwait
push
xlat
in
cmc
mov
fsubs
or
lock
pusha
arpl
shll
in
jnp
xor
out
fildll
add
in
xlat
nop
xchg
data16
clc
jae
fimuls
test
cmp
scas
ret
xchg
mulb
aam
enter
imul
in
jno
push
sbb
xchg
sub
sub
push
jecxz
inc
add
jae
stos
insl
jno
pop
lds
adc
cmp
aad
ret
mov
dec
push
in
cltd
push
push
jno
xchg
sbb
insl
cmp
icebp
rcrb
subb
sbb
shl
sub
fs
test
orb
cs
jecxz
iret
pusha
xchg
jo
or
push
mov
and
aas
lds
mov
cs
mov
inc
jb
dec
jnp
shll
inc
popa
in
mov
sub
dec
aad
std
inc
cltd
rcrb
pusha
cmp
xchg
cs
call
scas
sub
inc
outsl
pusha
mov
push
push
pusha
ror
mov
dec
outsl
ds
inc
aas
xchg
push
dec
bound
xorl
add
mov
pusha
inc
enter
fcmove
push
adc
movsl
jg
push
pusha
popa
mov
add
jb
and
mov
testb
dec
test
mov
push
mov
inc
dec
pop
dec
add
push
pop
xchg
jo
and
hlt
push
out
cs
xor
sub
or
bound
push
mov
fcoml
push
xchg
push
loopne
mov
push
or
bound
cmp
fnstenv
imull
jnp
bound
inc
bound
jg
cmp
fwait
addr16
dec
movsl
xor
daa
inc
iret
arpl
clc
fs
and
lcall
inc
pop
scas
dec
inc
xchg
out
push
adc
fwait
hlt
loope
ja
pop
insb
sbb
xchg
mov
add
jno
sub
or
xchg
outsl
and
rcrl
movsl
shrl
jmp
adc
clc
push
pop
loope
jnp
test
and
arpl
stc
sahf
mov
repnz
shrb
push
aad
in
push
push
ret
aas
test
outsb
sub
sarl
inc
mov
mov
leave
int
int
stos
cmpsl
mov
jae
xchg
push
fs
add
dec
and
inc
arpl
mov
push
outsb
rep
xlat
inc
dec
jp
xchg
data16
fldcw
pop
or
mov
mov
cmc
adc
loop
push
mov
cmp
popa
cmpsl
inc
jg
mov
pop
insl
jne
out
push
insb
push
cwtl
jecxz
insl
shl
dec
push
iret
jno
and
jb
rcll
filds
dec
pop
sub
addr16
and
pop
or
cld
inc
xor
rol
and
xchg
mov
sub
loopne
leave
inc
cmp
repnz
sbb
imul
or
lahf
sub
xor
add
adc
mov
pop
clc
mov
pushf
jecxz
cld
lret
in
repnz
pop
addb
xchg
loop
dec
ljmp
xchg
roll
insb
insl
cmpsb
and
mov
hlt
mov
stos
pop
pushf
inc
mov
mov
add
xor
adc
push
stos
test
ret
imul
xor
shrl
rol
rclb
ret
dec
add
push
fldt
jmp
outsb
sti
mov
std
push
pop
cwtl
xchg
and
adc
fistpl
test
pop
mov
ret
or
pop
mov
or
push
fbstp
out
int3
sub
fbld
icebp
push
rcl
pusha
sbb
ret
fisttps
jbe
sbb
cs
loop
shrl
and
xchg
inc
push
push
xor
in
mov
sub
fstl
inc
arpl
mov
mov
xor
and
mov
jns
popa
nop
lea
add
pusha
xchg
ftst
push
sbb
mov
xchg
fistps
inc
pop
jbe
add
test
sub
dec
push
cmp
pop
sub
dec
repnz
pusha
dec
out
out
repz
insb
push
adc
pop
flds
mov
ret
adc
aam
movsl
pushf
out
jmp
clc
pusha
mov
pop
jg
adc
adc
test
mov
mov
jnp
cvtps2pi
cmpsb
pusha
pop
testb
test
and
or
xor
sub
mov
bound
repnz
fs
push
mov
std
pop
fsubp
pop
clc
mov
sarb
jmp
hlt
xchg
xor
pusha
lcall
jnp
in
or
out
ds
and
sbb
insb
hlt
js
ja
std
mov
mov
inc
pusha
push
cs
pop
dec
jl
jnp
mov
rcrl
xchg
stos
xchg
ja
cmp
push
adc
sbbb
sbb
fldenv
and
mov
aam
cmp
sub
adc
daa
xchg
lds
pusha
lods
mov
test
sbb
js
out
fsubrs
add
leave
pusha
jmp
add
mov
sub
cmp
push
movsl
cmpb
jns
xchg
adc
mov
and
cmc
adc
stos
js
in
ud2
in
push
imul
adc
mov
pusha
inc
cmpsl
lea
push
cmp
jecxz
mov
push
pop
add
jg
daa
and
rolb
push
mov
pusha
push
enter
and
pusha
popa
aam
dec
in
sub
pushf
add
mov
jae
xchg
movsl
sti
cmp
or
mov
pusha
enter
lret
mov
xchg
sub
or
pusha
mov
push
cs
push
xchg
mov
lock
lea
adc
lret
rclb
dec
inc
mov
fwait
pusha
or
adc
mov
xor
lods
into
lret
sbb
sbb
push
sub
dec
inc
daa
push
imulb
mov
fcmovnbe
and
je
aaa
repz
xchg
adc
mov
mov
in
xchg
cmp
mov
aam
pusha
movsb
and
mov
bound
mov
adc
push
lods
scas
pusha
add
imul
xchg
and
dec
insl
and
aam
pushf
cmpb
bound
fstpl
pusha
fxch
mov
fidivrl
ja
out
std
inc
pusha
mov
cmp
insb
in
mov
push
sbb
enter
pusha
and
out
mov
adc
ret
mov
hlt
pusha
addb
pushf
adc
loopne
pusha
sub
dec
mov
fs
daa
loop
cmp
pop
mov
shll
andl
jae
gs
addr16
sbbb
dec
nop
mov
jl
push
mov
inc
add
stos
sub
pusha
inc
adc
nop
cmp
loopne
lahf
jl
jne
pop
cld
test
xor
andb
out
dec
movl
jb
pop
inc
xchg
scas
fs
inc
insb
outsb
fistpll
add
pushf
loopne
fistpl
mov
xorb
or
inc
cmp
jg
outsl
dec
pop
push
pop
fildl
xorl
xor
mov
inc
pop
pop
sbb
out
sbb
scas
pusha
cmp
jno,pt
jl
cltd
std
dec
and
sub
ss
lds
xchg
jb
pusha
shll
mov
xchg
pusha
push
pop
mov
pusha
jo
inc
iret
call
outsl
jns
clc
add
pusha
imul
in
mov
add
movsl
fs
sbb
and
cmp
cmpsb
push
add
cmc
aam
insl
dec
addr16
sahf
pusha
mov
faddl
xchg
fs
scas
and
inc
sbb
mov
push
aaa
bound
add
cli
cwtl
bound
inc
rcrl
push
xor
out
or
push
aam
mov
xchg
jne
and
cli
dec
push
xchg
cmc
pusha
and
or
pusha
xor
add
pusha
cmp
add
sub
int3
hlt
inc
lea
fsubl
test
inc
pusha
jns
inc
jg
mov
mov
add
push
out
enter
pusha
inc
and
push
cltd
pusha
imul
add
pop
dec
scas
lods
jmp
xchg
repz
outsb
frstor
cmp
inc
es
inc
pusha
add
mov
mov
dec
in
incb
mov
push
clc
int3
xor
pusha
lock
xchg
or
lcall
lea
adc
jb
aad
arpl
jae
lahf
bound
jns
outsb
test
sbb
shll
scas
add
mov
clc
jbe
popf
cltd
aad
rcrb
pusha
jbe
std
mov
lret
mov
dec
andb
out
call
push
out
jmp
hlt
xor
ret
cmp
ljmp
pop
and
or
into
push
jmp
loope
sahf
push
mov
adc
cmp
sar
pusha
leave
fimull
cmp
xlat
dec
cmc
loope
sbb
inc
enter
daa
jl
js
loop
inc
dec
xchg
cmp
or
pop
jmp
fs
notl
das
mov
xor
inc
xchg
and
push
jg
pop
bound
adc
cmp
pusha
inc
xor
arpl
xchg
mov
add
add
add
sbb
in
inc
pusha
adc
pusha
sbb
addr16
inc
pusha
rcll
xor
jo
cmp
mov
xor
push
xchg
jp
pop
pusha
push
jecxz
xlat
call
fdivl
aam
nop
and
pushf
std
dec
pusha
sub
les
out
repz
stc
pusha
cld
xchg
push
pop
rcr
xlat
pusha
clc
and
inc
jl
std
lret
pop
jnp
inc
push
jle
insb
and
push
mov
mov
vmovlps
cwtl
lea
pusha
sub
push
push
mov
je
sahf
shlb
loop
sub
jg
aaa
test
lea
jns
mov
sub
pop
and
outsl
pusha
cltd
cmp
inc
sarl
out
add
fs
fists
add
andl
out
jo
arpl
insl
out
xchg
test
mov
out
mov
std
mov
xor
ja
pop
xor
mov
and
bound
push
and
scas
sbb
sahf
inc
mov
xor
and
add
aam
sub
jb
sub
push
sahf
xchg
push
lret
imull
decl
out
inc
rclb
cmp
and
cld
pusha
xor
imul
leave
scas
lods
push
jp
jmp
pop
pusha
ja
loop
out
stc
pusha
dec
jnp
push
cmc
mov
mov
in
call
aas
push
jb
std
jl
in
sahf
or
iret
push
or
jecxz
xor
mov
lea
shlb
jbe
in
roll
jle
xchg
pusha
jae
loop
pusha
dec
movsb
test
dec
lock
and
pop
and
push
xchg
push
dec
pusha
dec
std
jge
sub
loop
jo
sar
fdivrp
imul
out
ret
loopne
mov
sbb
dec
dec
int
and
pop
dec
fsubrs
xor
mov
mov
cmp
lret
dec
imul
std
and
in
pop
testl
stc
inc
in
or
cltd
pop
leave
xlat
and
and
enter
xor
arpl
jmp
jg
fadds
pushf
loopne
shlb
mov
push
cmp
dec
mov
xor
sub
pusha
fistpll
adcl
pusha
int
lds
pusha
rclb
daa
mov
mov
popf
jae
and
add
arpl
pushf
jecxz
scas
adc
lret
lods
addps
mov
dec
loop
lahf
addb
push
and
mov
jae
mov
jmp
jnp
mov
lcall
movsl
aam
repz
fbld
ret
out
mov
stc
and
mov
dec
dec
sahf
daa
cld
lods
xor
xchg
mov
jmp
loopne
add
xor
add
ss
arpl
jle
fwait
add
push
mov
jno
sbb
enter
dec
push
mov
sbb
lock
and
lds
pusha
imul
loopne
bound
sbb
cld
xor
sbb
mov
adc
loope
sub
xchg
push
cmc
or
scas
and
or
xchg
inc
push
mov
cmp
divb
lods
arpl
loop
jmp
js
ret
ljmp
ret
and
fmull
push
inc
mov
aas
add
adc
adc
orb
jno
ret
movsb
sbb
add
int3
xchg
mov
mov
pextrw
pop
push
sar
xchg
cli
enter
lods
fwait
jle
pop
hlt
and
mov
loope
and
cmp
lret
and
dec
or
fwait
sbb
push
popa
pushf
enter
and
sub
xor
inc
pop
xchg
mov
xor
scas
push
cwtl
mov
adc
fdivrl
iret
jb
sub
cmpsl
jo
add
repz
lods
pop
ds
dec
mov
push
xchg
mov
push
mov
sar
mov
sbb
pusha
rol
pop
cmp
dec
fsubrl
pusha
call
sbb
or
adc
xor
dec
dec
arpl
ret
mov
mov
icebp
mov
inc
pusha
xor
mov
pusha
and
hlt
in
push
push
aaa
lods
sbb
jmp
cmp
cli
mov
mov
lea
and
mov
cmp
jo
xchg
arpl
add
popf
insb
adcb
mov
inc
jge
fsub
add
pusha
adc
pop
aam
push
mov
and
push
sub
mov
sbb
cmp
dec
push
mov
mov
dec
arpl
mov
int3
repz
xor
xchg
and
xchg
mov
pusha
incl
daa
pusha
mov
gs
lcall
jg
scas
out
sti
orl
hlt
xchg
mov
js
repnz
mov
and
insb
test
fdivp
xchg
mov
loope
sub
pushf
dec
xchg
ja
and
roll
outsb
arpl
int
loope
in
jle
and
mov
loope
ss
jle
test
ret
mov
pusha
add
rcrb
pusha
push
push
cli
lret
pusha
jo
pop
xor
and
frstor
xor
adc
pop
pusha
into
and
add
and
call
daa
pusha
xor
mov
adc
icebp
pusha
inc
lcall
pusha
jecxz
test
dec
cwtl
in
and
dec
dec
dec
mov
daa
sub
bound
mov
pop
outsb
sub
notl
jb
insb
pop
ds
ss
ljmp
mov
fldenv
mov
sub
loopne
ror
mov
xorb
sub
pop
xchg
pop
sar
push
lahf
fs
cmp
shlb
push
in
int3
adc
ret
mov
loope
cltd
stc
stos
push
pusha
aam
lods
pop
dec
rclb
mov
pop
mov
sbbb
xchg
push
stc
mov
sub
jne
mov
and
dec
mov
popa
mov
insb
loope
add
xor
and
adc
mov
fcmovnu
push
inc
mov
xor
mov
fbld
lods
pop
movl
mov
rolb
rcrl
shl
xchg
leave
mov
or
xchg
es
popa
mov
or
and
xlat
xchg
xchg
fwait
pop
and
mov
mov
test
clc
stos
jle
sbb
ds
flds
out
push
mov
fwait
mov
ret
mov
ret
ds
mov
xchg
jecxz
xor
fs
and
jae,pt
add
and
cmp
loopne
inc
lods
mov
je
and
dec
push
jle
mov
adcl
fiadds
jp
pop
jnp
and
jno
out
or
orl
cmp
bound
fwait
dec
xor
mov
push
cli
aas
mov
mov
or
push
shlb
pop
loop
xor
enter
dec
and
mov
inc
mov
xchg
push
push
xchg
push
fs
jmp
add
push
test
fmull
fwait
push
int3
push
pusha
xlat
mov
sbb
dec
ret
and
sbb
pusha
push
xchg
out
mov
xorb
das
xor
outsl
enter
adcl
pop
sarb
jo
pop
inc
mov
xchg
jo
inc
bound
mov
je
stc
movb
jbe
cmp
and
cmpsl
pop
adc
mov
ljmp
mov
fsubrl
fisttpl
cmp
lcall
cltd
mov
roll
sahf
in
mov
cmp
shl
mov
xchg
stos
bound
popa
xor
roll
mov
mov
pop
xor
mov
and
data16
xchg
dec
sahf
sub
arpl
push
out
dec
test
add
sub
pop
nop
ljmp
fldl
js
dec
stos
pop
fwait
arpl
cmp
sbb
stc
popa
rcll
inc
clc
testl
in
test
sbb
fldt
je
sub
mov
jb
adc
push
and
xor
sub
jecxz
and
push
adc
fs
or
inc
xchg
icebp
sub
js
jno
cli
adcb
in
xor
and
jmp
popa
xchg
cmpsl
jae
xchg
pop
rclb
inc
mov
cld
xlat
inc
add
mov
ss
repnz
sub
into
ret
aam
in
xchg
les
and
push
add
sub
xor
ret
in
add
push
xor
mov
jmp
les
dec
inc
cmp
andb
lods
xchg
arpl
xchg
loop
rcll
popl
sbb
push
cmp
dec
fisttpll
lds
lods
lock
push
dec
cwtl
stos
or
loopne
outsl
push
loope
push
popa
dec
sbb
inc
or
cltd
add
push
push
dec
xor
cld
movsl
lea
pop
add
pop
leave
jecxz
mov
jmp
clc
jae
ss
jae
sub
push
dec
pop
pop
sub
loopne
sub
adc
inc
hlt
sub
jp
jge
lret
cmp
lock
bound
outsb
or
fimull
push
hlt
movsl
loopne
mov
push
mov
and
jbe
add
cmpsb
cmp
int
jo
cmp
dec
shll
pop
repnz
push
push
jo
cld
inc
xchg
ja
xchg
iret
stos
popa
jo
addr16
dec
sub
and
movsb
ss
lcall
push
inc
aad
sub
sub
popa
shr
in
add
inc
jl
leave
shl
arpl
jo
mov
ds
ja
push
inc
inc
mov
rorl
je
inc
dec
sahf
jb
lret
mulb
cltd
mov
popa
mov
sub
outsb
int3
xor
dec
cmp
into
pop
notl
mov
pop
int3
add
or
dec
inc
xchg
mov
mov
xor
rcl
jp
fldl
jnp
add
insl
jp
inc
dec
push
push
cmp
dec
inc
shld
and
xchg
call
cmp
and
pop
xchg
jle
negl
jne
xchg
cld
bound
mov
push
and
push
sti
sbb
je
jmp
mov
mov
dec
pop
inc
and
jae
dec
pop
mov
mov
sub
jb
add
loope
ds
incl
pop
cmpsl
bound
les
mov
cwtl
fadd
dec
repnz
inc
fists
pusha
sbb
notb
xor
jo
ret
cld
int3
xchg
xor
out
mov
sub
hlt
mov
cmp
mov
jle
xchg
inc
in
in
mov
rcrb
adc
adc
mov
sub
push
mov
push
lahf
or
pop
iret
push
incb
cwtl
mov
lret
sub
add
pusha
mov
ret
jne
xor
imul
in
xor
pop
push
pusha
mov
push
pusha
cli
stos
aaa
test
adcb
mov
push
ret
andl
pop
sti
xchg
loope
lods
lds
arpl
pusha
push
fstp
xchg
mov
lret
data16
sti
aam
pusha
lds
insb
sbb
js,pt
cmpsb
mov
dec
jl
hlt
pop
cltd
loope
insl
xchg
pop
add
jno
add
jl
lret
jle
jnp
mov
shr
dec
stc
inc
xchg
add
dec
bound
mov
add
mov
fisttpll
pusha
cmp
shrl
les
in
es
dec
cmpsl
jl
outsb
push
xchg
sub
jb
fwait
or
movsl
jle
es
ret
mov
call
and
pusha
pop
stc
inc
add
inc
or
insb
dec
adc
sbb
sub
pop
fs
out
cmp
mov
test
iret
lock
and
pushf
popf
pusha
mov
lahf
or
pusha
mov
or
push
sbb
xor
mov
loopne
dec
jl
popf
jl
je
sub
mov
jne
arpl
cmpsl
shll
bound
loopne
loop
pop
pusha
jmp
rcll
movsl
pushaw
cs
sahf
lret
mov
pusha
dec
mov
int
jl
mov
push
mov
ljmp
mov
cli
test
psubw
push
fdivrl
cmp
rclb
mov
test
mov
data16
mov
fcomps
mov
xlat
ja
mov
pop
pusha
xchg
and
leave
adc
out
push
imul
and
jmp
jno
in
or
push
rcll
mov
imull
mov
mov
movsb
push
cwtl
pop
sbb
push
sbb
xlat
lret
xor
adc
jne
pop
cmpsl
loop
lret
jb
push
or
pop
imul
add
sti
inc
adc
push
in
out
xchg
push
test
mull
add
movb
jae
fsubs
push
xchg
pop
mov
popa
insl
andb
pop
pop
jno
and
mov
jnp
push
imul
add
or
mov
pushw
sbb
in
pusha
fstps
js
mov
cmc
jp
lret
adc
and
cmpl
xlat
or
aad
loopne
aam
fiadds
sub
dec
lds
mov
or
jb
scas
jg
jecxz
sbb
sub
test
dec
push
pusha
pop
aam
rorl
cmp
inc
mov
dec
mov
sub
bound
insb
adc
std
bound
pusha
pop
mov
pop
and
bound
stos
mov
pusha
sub
sbb
data16
dec
pusha
wrmsr
xor
add
add
jp
mov
xchg
push
ljmp
into
gs
sti
cmp
cli
insb
loopne
test
add
roll
dec
repnz
cmp
lret
inc
xor
mov
testl
sarl
stos
jb
push
xchg
jecxz
insl
cmp
in
lret
iret
jl
jecxz
sub
dec
sub
mov
mov
pop
pop
inc
int3
push
jmp
mov
in
aad
lods
sub
fs
jbe
push
enter
or
pusha
in
mov
lcall
insb
pop
pop
sarb
pop
xchg
and
push
lahf
js
mov
fstl
fidivs
jb
inc
ret
loop
jae
hlt
mov
push
add
inc
cwtl
push
data16
pusha
push
adc
jns
ret
mov
pusha
xchg
out
add
repnz
cmc
cmp
cmp
test
push
pusha
or
jmp
push
sahf
testb
sbb
mov
inc
inc
aas
pusha
inc
addr16
mov
xchg
xchg
loope
mov
in
lock
pop
insb
popa
shll
in
ja
bound
jne
das
decb
jl
repz
shlb
popa
push
xor
test
dec
pusha
lcall
xchg
in
shr
jmp
jae
add
shrl
jecxz
cmp
pusha
jnp
cmpsl
movsl
fcmovne
enter
out
pushf
mov
xchg
adc
mov
fwait
jg
add
test
push
insb
daa
dec
and
scas
xchg
andb
mov
push
fiadds
fs
cld
filds
and
stos
arpl
dec
sub
cmp
insb
repz
pusha
shlb
int3
mov
in
jl
sbb
and
insl
xor
pusha
addr16
cmp
lret
inc
pusha
scas
pop
jne
xchg
les
sub
imul
jnp
mov
inc
les
popf
mov
add
cmp
and
fs
repz
mov
mov
cmp
pusha
jle
ja
hlt
mov
vpacksswb
in
xchg
cs
sbb
test
push
lahf
push
sahf
push
loope
mov
lods
cmp
mov
sub
xor
push
jecxz
or
or
loop
sub
mov
xchg
add
adc
inc
cmp
imul
push
ss
add
pop
xchg
pusha
and
cmpsb
ret
mov
or
sarl
cli
sahf
mov
addr16
or
out
xor
jle
add
pop
cmpsl
mov
jne
mov
insb
addb
les
in
mov
pop
push
das
pusha
xchg
mov
sbb
shl
add
cmc
popf
xchg
push
test
movsl
sub
and
cmp
lcall
addr16
scas
fs
push
repz
xchg
sub
les
and
cli
jbe
pusha
ret
dec
xor
pusha
fs
xor
out
mov
add
or
xlat
and
and
in
jecxz
pusha
cld
inc
clc
call
adc
add
pusha
mov
cld
pusha
jl
mov
sub
sub
mov
mov
mov
fs
push
mov
xor
sbb
rolb
sbb
ret
mov
add
push
dec
push
stc
pusha
arpl
inc
pop
jnp
es
pusha
mov
aas
mov
jl
mov
fsubl
sbb
shrb
addb
jl
cli
pop
mov
lock
je
call
ja
arpl
add
cmp
mov
xorl
and
pop
les
pop
ret
sub
loop
cmp
outsb
or
in
and
lahf
sahf
jl
loop
ljmp
clc
cs
ret
pop
pushf
mov
sbb
mov
fadds
mov
dec
pusha
mov
stos
ret
pusha
ret
insb
lret
test
mov
adc
jge
iret
inc
bound
ret
and
sub
insb
xor
pop
sub
dec
or
vmwrite
in
sbb
pop
jo
mov
je
loop
ss
xchg
into
adc
and
mov
cmp
shl
mov
sbb
sbb
mov
outsb
mov
out
loope
cmp
push
fsubp
lock
imul
add
shlb
mov
dec
mov
cmp
movsb
in
lahf
pusha
test
aas
push
pusha
orl
aam
jge
xchg
in
scas
jb
push
jp
cwtl
push
mov
lret
jo
push
rcll
pusha
push
mov
lcall
mov
and
roll
loopne
adc
andl
ret
sar
cltd
inc
xor
stos
enter
cltd
ret
fnstcw
insb
or
and
pop
mov
int3
mov
mov
stc
movsb
xchg
lahf
in
pop
cltd
ret
out
ljmp
bound
mov
dec
xor
mov
pop
fstpt
mov
add
xor
mov
dec
xor
mov
dec
jno
sub
mov
and
jne
inc
add
aad
xor
fidivl
xor
jbe
sbb
inc
lcall
xor
mov
xchg
nop
insb
shll
stos
inc
push
jb
pusha
shrl
pushf
jbe
pop
xchg
leave
andl
pushf
add
bound
xchg
mov
dec
xor
mov
push
push
dec
pop
dec
rorb
sub
in
aad
xor
push
and
push
jo
dec
mov
push
addb
cld
ret
in
in
cmp
xor
cmpl
xchg
cltd
push
scas
fcoms
rorl
and
inc
jno
lcall
sbb
sbb
loope
fnstsw
test
mov
cld
jo
rol
pop
mov
inc
pop
and
pop
ret
mov
loope
pop
xor
cld
push
adc
add
and
push
sarl
push
es
adc
inc
sub
jno
and
mov
push
ds
aas
xor
xchg
imul
push
xchg
sbb
xor
and
mov
lea
or
decb
ds
push
es
adc
inc
push
js
leave
lods
mov
test
inc
ds
in
out
or
inc
push
sub
rorb
andl
jnp
stc
ror
aam
cmp
js
inc
es
mov
ljmp
cmp
sbb
mov
scas
sbb
and
and
mov
sbb
pop
mov
add
inc
inc
push
add
cs
iret
loope
mov
stos
repz
mov
push
fsubl
adc
inc
repnz
lcall
mov
fisubrl
cmc
sbb
lock
pop
push
je
or
push
mov
add
mov
jae
cmp
inc
dec
pop
dec
aam
loop
sub
outsb
repz
jae
out
xchg
aas
sub
xor
or
sub
pop
mov
dec
push
jo
or
cs
xchg
loop
popa
clc
sub
add
loopne
dec
inc
xchg
popa
or
imul
and
push
bnd
mov
cs
jb
jmp
test
andb
jg
enter
fwait
scas
pop
mov
xchg
stos
shll
add
push
xchg
xchg
dec
popf
pop
inc
fnsave
mov
call
sar
sub
shlb
mov
push
nop
dec
xchg
jns
mov
jnp
pop
add
jl
mov
inc
jo
and
lock
addl
mov
add
sbb
push
icebp
icebp
cs
fs
mov
scas
and
loop
lea
sub
xchg
ret
or
push
pusha
out
pop
xchg
repnz
bound
sub
in
jl
adc
adc
add
mov
dec
imul
test
sbb
ja
decb
mov
jg
mov
sub
mov
pusha
xor
in
jmp
addr16
mov
arpl
test
hlt
cwtl
nop
popf
loop
push
idivl
arpl
or
pusha
inc
stos
loopne
jne
scas
cmp
movb
xor
imul
das
pusha
shrb
mov
fbld
jo
mov
fstps
cmp
shlb
hlt
ret
push
fsubrl
pusha
adc
int
in
inc
pusha
popf
xor
mov
in
pop
lods
add
add
pusha
repz
cltd
sbb
xchg
lret
pop
movsl
pusha
test
je
pop
das
sti
xor
pop
mov
out
fdivrs
pusha
xchg
push
in
paddusw
pop
lds
inc
cwtl
pusha
cwtl
mov
pusha
and
into
icebp
pop
jae
pusha
leave
jmp
jp
adcb
and
pusha
dec
cmp
xor
test
pop
lods
mov
hlt
cmp
andb
fisubl
dec
daa
push
mov
xchg
add
jnp
mov
push
lock
push
adc
shr
mov
insb
sahf
dec
cmp
xchg
pusha
das
jl
out
std
movsb
xlat
insb
out
and
in
cmp
mov
bound
sarb
adc
pusha
xchg
push
mov
cli
adc
mov
push
mov
add
sbb
adc
test
shlb
cmpsb
lret
xchg
and
mov
icebp
loope
iret
sbb
mov
iret
jg
into
mov
pop
andl
push
andb
mov
sbb
jo
push
xchg
loopne
sub
adc
ss
lods
adc
pusha
pop
push
pop
popf
cs
roll
lret
jns
xchg
push
adc
mov
mov
dec
jecxz
xor
roll
lcall
pop
jg
pop
lcall
inc
mov
jno
xlat
jbe
test
xchg
mull
fistpl
pop
icebp
xchg
and
and
sbb
loop
pusha
repnz
add
inc
inc
push
out
mov
add
jo
jne
arpl
bound
mov
sbb
dec
icebp
dec
mov
shll
addr16
inc
int3
insb
out
xor
clc
xchg
loop
mov
cltd
mov
pop
or
lahf
mov
pusha
es
adc
in
and
pusha
scas
int3
push
xlat
sbb
outsb
mov
cmp
xor
shrl
ja
mov
pusha
loop
inc
ljmp
sbb
insb
in
or
jecxz
add
and
cmp
fwait
pop
stos
insb
jbe,pn
sbb
push
add
mov
cmp
out
cmp
and
std
adcb
dec
pusha
clc
push
or
bound
test
push
loop,pt
xchg
aad
adc
loop
xchg
sub
fsubr
sbb
sub
sub
loop
fldenv
add
imul
rorb
lret
lods
jg
loopne
cmp
pusha
mov
int
xor
add
leave
repz
out
jns
mov
pusha
addl
pusha
andnps
sub
pop
popa
stos
dec
je
lret
je
add
sbb
inc
jo
movsb
leave
lcall
imul
sti
ljmp
daa
addr16
jno
or
icebp
pusha
insb
es
cmp
inc
loope
or
jg
sub
jns
sbb
inc
xchg
jg
mov
inc
and
pusha
addb
int
enter
js
bound
in
lock
mov
adc
lret
mov
mov
jmp
std
pusha
lahf
jo
cmp
pusha
push
notl
cld
outsb
pusha
clc
sbb
pop
mov
mov
inc
shlb
outsb
lahf
cmpsb
pop
push
adc
stos
dec
inc
inc
movsl
testl
iret
mov
stos
cmp
mov
push
pusha
push
cwtl
fists
pusha
xor
ficomps
ror
lea
sub
mov
adc
clc
or
cltd
push
mov
jle
jbe
pop
push
pop
dec
vunpcklps
sub
sbb
inc
mov
pusha
imulb
sub
loop
xchg
hlt
aaa
jecxz
cwtl
rolb
xor
pop
pusha
int
hlt
dec
sbb
xchg
adc
add
dec
test
xor
repnz
fsub
jg
dec
movsl
es
fwait
jno
xchg
lock
out
xchg
mov
xchg
ljmp
push
push
mov
icebp
mov
aas
jmp
ds
mov
imul
jecxz
leave
jmp
pusha
fcmovnu
lcall
cs
dec
push
dec
add
or
adc
in
xor
mov
in
add
outsl
fcomi
push
lret
bound
gs
aas
dec
addr16
ds
hlt
je
int3
outsl
sbb
pusha
add
jo
mov
popa
pusha
movsl
cmp
sub
inc
pop
dec
pusha
rol
xchg
mov
jl
jo
add
scas
jge
test
add
in
js
inc
pusha
lods
xchg
adc
fs
imul
popf
jnp
pusha
nop
imul
pusha
mov
dec
add
pusha
pop
fsub
femms
sbb
xchg
xor
aam
popf
je
imul
inc
into
jg
mov
pop
int3
adc
outsb
out
mov
add
inc
add
jae
pop
int3
mov
inc
js
jg
push
test
dec
je
aaa
jp
imul
push
or
or
and
fisubl
aaa
sbb
dec
adc
mov
lret
lret
pop
xchg
jecxz
fucom
jl
das
jne
push
mov
mov
ds
imul
pop
mov
mov
scas
cmp
pusha
pop
mov
or
leave
sbb
lret
pusha
arpl
inc
jb
hlt
bound
mov
bound
mov
jmp
mov
pusha
icebp
nop
dec
sti
xchg
pusha
push
jge
fidivrs
push
adc
cmp
adc
out
xchg
fnstenv
mov
loope
pop
js
or
cmp
subl
mov
xchg
arpl
mov
fwait
mov
push
pusha
inc
dec
fsub
mov
aad
insl
in
adc
dec
jecxz
pusha
fdivs
or
inc
add
add
cmp
xor
loopne
lret
jle
test
pop
cli
mov
das
mov
inc
pusha
fs
pop
dec
mov
push
ret
jmp
pusha
adc
mov
outsb
pusha
mov
enter
inc
stc
fisttps
mov
fldenv
mov
test
jl
int
aad
sahf
bound
insb
adc
cltd
pop
lds
and
fwait
cmp
add
hlt
pusha
sbb
dec
mov
sub
jle
popf
cmp
lea
out
jbe
repnz
repz
and
aaa
or
fsubr
mov
mov
aas
xchg
dec
mov
inc
adc
test
pusha
jl
mov
jl
cmpsl
dec
inc
andl
scas
dec
andb
pop
push
xchg
fcomip
in
pop
xchg
cwtl
leave
mov
loope
dec
aaa
mov
test
pop
arpl
jg
mov
pusha
pop
fmuls
jae
pop
frstor
aaa
movsb
out
xchg
cmpsl
lds
loop
sbb
mov
mov
mov
dec
mov
pop
mov
cs
adc
adc
out
in
or
addr16
pop
pop
xchg
cmp
les
xchg
add
neg
loope
push
push
dec
ljmp
xor
aam
adc
mov
rorl
cmp
dec
jl
cmove
rcr
inc
push
cwtl
andl
test
inc
js
lea
and
divb
hlt
dec
aaa
aas
out
mov
dec
je
cmp
add
fnstcw
jb
mov
fdivl
or
jo
movsl
mov
in
int3
pop
inc
scas
mov
xchg
loop
ret
and
jp
adcl
outsl
loope
fld
mov
ljmp
gs
or
enter
ret
xor
outsb
add
xor
push
pop
in
pop
cmp
cmp
repz
add
sub
nop
jb
orl
pusha
popf
jg
out
data16
push
xchg
and
cmc
push
and
scas
out
adc
xor
mov
je
movsl
aaa
sub
pusha
add
sub
dec
mov
jnp
xor
push
inc
add
repnz
mov
sbb
popa
in
cmpsl
test
and
pop
int3
stos
lcall
sahf
pusha
and
push
mov
les
test
fs
lods
xor
cmp
imul
xlat
shl
xchg
inc
popa
pusha
xor
rcrb
pop
push
mov
inc
jno
and
jbe
icebp
jp
jle
repz
pusha
js
adc
adc
mov
sub
mov
cmp
in
rclb
fidivrs
sbb
sbb
or
mov
pusha
imul
fdivrl
sbb
or
jmp
fsub
pop
pop
shlb
jl
decb
add
xor
xchg
xor
mov
cmpsb
pop
jae
push
andb
xchg
jne
inc
shl
lcall
cld
xchg
pusha
add
jo
fs
stos
sub
ret
pusha
pop
rol
repz
jns
pusha
mov
imul
mull
cltd
sub
dec
cmp
cmp
aaa
clc
into
xor
stos
fldt
add
and
dec
sub
nop
out
cmpsb
pusha
aaa
mov
ror
sub
mov
mov
push
iret
js
jl
arpl
sbb
popa
xchg
andb
je
jge
mov
jmp
scas
dec
inc
mov
testb
xor
test
icebp
mov
scas
xchg
mov
in
je
shll
out
dec
and
das
xor
movntps
fwait
jp
fidivrs
mov
mov
cmpsl
add
inc
fwait
rclb
pusha
pop
sti
sbb
xlat
xor
repnz
adc
xchg
cmc
in
fisttpll
mov
daa
xchg
mov
jl
adc
add
stos
dec
pushf
cmp
fwait
or
lea
lahf
sub
cmp
mov
enter
gs
xchg
in
dec
adc
xor
pop
and
or
mov
clc
mov
bound
lcall
ret
mov
push
sub
inc
subl
pusha
lret
add
in
mov
lea
shlb
sub
fcomp
pusha
adc
mov
movsl
pop
fs
or
mov
pop
pop
sub
jno
cmpsb
push
ja
and
loop
inc
inc
ss
int
gs
xor
pop
mov
push
clc
pushf
inc
daa
cmp
pusha
jecxz
orl
mov
or
addr16
insb
andl
mov
pushaw
jecxz
enter
cwtl
stos
pusha
jo
outsb
xchg
push
mov
test
and
or
jo
or
mov
icebp
pusha
xchg
std
cwtl
mov
pusha
divb
jae
sub
lods
movsl
insb
inc
add
jmp
sahf
jle
daa
pusha
pop
dec
notb
jnp
pusha
mov
mov
pop
aam
jp
out
bound
dec
ror
lret
jecxz
cli
sbbl
aas
pusha
shlb
daa
out
fsubrs
decl
mov
pop
and
dec
in
add
andl
sbb
xchg
pusha
adc
repz
jg
fs
cmp
inc
sub
sub
mov
cmc
xor
and
cmp
and
pusha
jl
rcll
je
sub
add
bound
cwtl
dec
fldenv
pop
sbb
sbb
xor
scas
jle
testb
dec
les
repnz
fs
lds
orl
popa
inc
addb
cmp
jl
add
adcb
pusha
sbb
sub
addr16
mov
testl
add
jle
gs
sbb
xchg
jl
outsb
inc
jecxz
and
pop
mov
stos
int3
pusha
jl
fucomi
xor
jl
hlt
cmp
xchg
cmp
push
cmp
add
daa
fnstsw
xchg
je
jl
and
pop
and
push
aaa
mov
mov
or
adc
mov
pusha
popa
stc
sub
test
cmp
adcl
je
inc
lods
aas
pop
mov
pushf
xor
iret
dec
push
pop
std
mov
ds
mov
mov
and
xor
jecxz
cld
fists
sbb
sub
outsl
insb
push
xlat
ret
add
mov
cmc
pop
repz
das
aam
cs
insb
dec
pusha
and
movb
test
hlt
pushf
xchg
out
mov
mov
cmp
daa
mov
push
out
add
and
xchg
and
push
sbbb
inc
or
nop
pusha
jmp
or
rolb
movsl
imul
jbe
cli
js
and
cltd
notb
dec
iret
pop
rolb
pop
pusha
lea
into
int
leave
adc
pop
lds
mov
insl
pusha
jnp
mov
cmp
out
inc
lds
lahf
pusha
out
mov
out
pusha
outsb
add
into
bnd
test
adc
fidivs
aaa
pusha
lods
adc
insl
mov
mov
dec
shlb
and
inc
lock
cmpsl
fs
pusha
push
nop
xor
lea
push
aam
insb
lea
sbb
icebp
and
lods
pop
shlb
outsl
pusha
test
mov
push
mov
mov
jno
loopew
lret
in
push
xchg
nop
jl
movzwl
mov
imul
stos
xchg
fmuls
std
mov
xor
jecxz
sarb
push
mov
repz
cld
or
jbe
xor
movb
jecxz
stos
cmp
push
adc
jle
inc
fs
ret
sbb
mov
sub
mov
fdivs
cmp
das
pop
xchg
pop
fbld
mov
pop
pusha
push
pop
bound
adc
push
inc
jno
jnp
stos
shlb
rcll
outsl
adc
pushf
pusha
push
cmp
lods
mov
addr16
orb
jle
add
pusha
andl
sub
test
pusha
push
testl
push
dec
add
jmp
push
and
dec
fs
ss
xor
adc
pusha
lret
ljmp
push
sbb
inc
push
pusha
and
sub
push
js
or
pusha
mov
and
pusha
test
push
movsb
xlat
loope
clc
imul
ficoml
mov
fsubs
cmp
faddl
shlb
pop
xor
repz
pop
aas
dec
cmp
lcall
sti
pusha
inc
js
or
mov
call
insb
add
inc
cmp
repz
add
xor
dec
les
sub
lcall
and
int
popa
xchg
movsb
loope
pusha
test
jo
movl
push
leave
bound
jg
and
inc
pusha
mov
mov
loope
add
insl
inc
xchg
fwait
or
int
xlat
and
cmp
dec
adc
mov
shl
sub
int
or
lds
xor
dec
pusha
lods
add
addb
xorl
and
add
mov
inc
mov
aas
mov
xchg
iret
fildl
fwait
aaa
cmp
cmp
xchg
pop
bound
pop
mov
inc
mov
js
add
iret
stc
aaa
dec
inc
clc
sub
mov
and
sub
fs
jno
jmp
inc
push
loope
mov
jo
in
stos
sbb
ja
mov
repz
loope
mov
stc
dec
cwtl
jo
jecxz
out
je
mov
movl
aad
and
fwait
test
rol
ds
repnz
jo
test
test
lock
aam
inc
pop
ds
adc
mov
fldenv
pusha
push
jmp
push
cltd
sub
sub
cmp
mov
pusha
xor
xchg
sub
mov
ret
repz
jmp
out
push
jae
jecxz
adc
repnz
lret
and
dec
pusha
fsubrl
mov
stos
lea
test
ja
sbbb
pop
mov
lcall
les
popf
jl
pop
pop
ret
sbb
push
pusha
dec
xor
std
int3
lods
add
pusha
stos
lcall
xor
std
fld
push
lods
adc
clc
xor
cmp
jl
jle
stos
popa
shl
leave
add
pop
lock
shlb
repz
mov
xchg
push
sbb
pusha
dec
fmul
dec
addr16
enter
dec
xchg
mov
pusha
mov
imul
aad
mov
push
jl
loopne
sbb
add
jecxz
xor
mov
int
repz
nop
adc
xchg
insl
bound
shll
mov
mov
ds
scas
dec
loope
dec
xchg
fldt
nop
ja
fs
rcrl
pusha
sub
lock
and
sarb
stc
xor
jle
mov
dec
adc
shrb
sbb
inc
pop
xchg
jno
add
dec
inc
arpl
popa
xor
lcall
push
mov
jne
sbb
sbb
cwtl
add
dec
data16
jge
ja
stos
stos
mov
jl
xor
fisubl
or
mov
in
loopnew
fisubrl
jae
adc
pop
xchg
sbb
jp
jno
and
push
adc
sub
mov
loopne
add
mov
push
xlat
push
cltd
cmp
lahf
mov
ret
mov
pop
popf
sbb
add
leave
push
jo
push
cmp
cld
xchg
sahf
xchg
and
ret
xchg
pop
nop
inc
hlt
push
dec
and
cmc
mov
mov
ret
pusha
push
fmuls
ss
or
je
jb
sahf
sbbl
jp
icebp
xchg
pop
dec
inc
and
movsl
ret
rcll
sub
xor
iret
ja
rorb
push
loopne
in
dec
jp
add
jo
or
inc
push
xchg
pop
push
adc
roll
xchg
jle
jp
inc
add
xchg
pushf
cmp
pop
aad
sar
test
fwait
and
lods
insb
inc
ret
sub
jmp
mov
ljmp
xchg
and
pop
int
push
xor
shrb
insb
pop
out
fbld
mov
movsl
call
lods
xor
lock
enter
cli
or
dec
adc
jno
cwtl
jno
push
and
push
insl
xor
push
sub
clc
ret
fsubrl
lock
je
pusha
shl
pop
inc
and
rcrb
sub
or
into
dec
sub
and
adc
jmp
cmp
push
out
bound
mov
pop
add
sbb
lock
mov
add
leave
pop
and
dec
jle
cmpsb
movsl
inc
inc
cs
lock
mov
mov
scas
cs
int
fsubrl
retw
jb
xchg
incb
repz
or
and
mulb
fs
fwait
cltd
daa
pusha
xor
push
jmp
in
rolb
push
mov
push
mov
push
lahf
jp
decl
and
clc
in
and
sbb
jo
ss
popf
sub
mov
cmc
loope
daa
bound
ficoms
pop
mov
sub
decb
jle
xor
stos
push
iret
jg
and
jb
pop
sub
ret
lock
loope
push
ret
loopne
and
aad
jne
or
ja
f2xm1
xchg
adc
sti
jno
add
fs
fildl
mov
lahf
dec
inc
xchg
rorb
sahf
inc
adc
lock
lcall
jge
stos
repnz
jo
adc
xchg
movzbl
fidivrl
in
add
jb
or
mov
and
dec
adc
pop
pop
je
pusha
sarl
and
cmp
mov
and
dec
mov
aam
mov
xchg
sub
add
adc
sub
inc
mov
xchg
leave
push
mov
loopne
scas
addl
mov
jno
inc
sub
in
mov
ret
mov
in
add
je
js
sub
lea
jp
lret
loope
fwait
and
addr16
xchg
insl
adc
pop
idiv
out
adc
inc
mov
loopne
adc
mov
and
iret
or
in
lret
adc
xor
jb
ficomps
cbtw
and
cltd
ret
mov
or
arpl
lock
aaa
call
and
dec
cmp
sbb
push
xchg
add
xchg
push
sahf
and
ret
pushf
inc
or
push
sbb
pop
repz
sarl
mov
dec
push
cmpb
jo
sbb
push
adc
loop
jg
dec
sbb
repnz
add
test
shl
sbb
pusha
mov
mov
pop
out
mov
sub
fstpl
cmc
ret
test
mov
scas
iret
loopne
call
mov
ret
rclb
sarl
sub
mov
outsl
stos
and
sbb
pop
test
sub
cld
bound
mov
ret
ljmp
xor
dec
hlt
mov
jle
in
repnz
xchg
pop
add
sub
mov
bswap
fidivl
addb
das
xor
jle
xchg
push
loope
xor
imul
popf
aaa
ljmp
inc
jo
sbb
mov
lret
lret
test
test
inc
push
fwait
sbb
lret
jle
pop
test
cmp
xor
movsb
add
jo
loop
rolb
jmp
into
jg
in
dec
das
ds
pusha
cmp
pop
arpl
test
pop
popf
add
pop
xlat
into
jge
stos
mov
mov
roll
and
xor
dec
out
pop
and
pop
cltd
cmp
jns
fwait
pusha
ss
or
jbe
jmp
icebp
sbb
or
pop
inc
loope
in
pusha
sbb
ja
hlt
and
cwtl
add
xchg
cmpsb
leave
lret
jo
mov
dec
movups
cld
sub
in
and
sbb
hlt
mov
pusha
mov
push
push
xor
cltd
iret
cmp
int
fildl
sbb
add
out
les
repnz
std
pusha
pop
pop
push
jae
add
lea
and
mov
sub
imul
xchg
sbb
mov
pinsrw
pusha
inc
sbb
cmp
cmp
inc
pusha
xor
jb
add
mov
dec
shll
push
int3
das
outsl
jecxz
mov
xchg
pop
pusha
mov
imul
jl
movsl
cmp
or
dec
pusha
imul
stos
pusha
ljmp
fwait
and
mov
cli
xchg
cmp
add
jge
xlat
pop
mov
sub
lds
push
leave
dec
pusha
scas
icebp
out
lods
or
inc
dec
pusha
cs
or
jl
sarb
movsb
and
jmp
adc
xchg
jns
sub
ja
stos
dec
loopne
add
mov
cwtl
loopne
sbb
roll
jne
shll
add
push
inc
test
cld
addr16
inc
call
test
mov
popa
fs
lods
faddl
push
add
addr16
fwait
test
and
int
pop
jo
rcl
pusha
adc
mov
push
pusha
negb
outsl
outsb
xchg
sub
cltd
aas
adc
sti
out
incl
fxch
insb
or
test
xor
xchg
pmuludq
pause
jmp
xor
xchg
pop
sub
js
test
pop
mov
push
or
test
push
xchg
pusha
jns
xchg
xor
scas
or
and
cmp
fwait
mov
fcos
add
xchg
test
dec
pusha
lret
xlat
out
sbb
mov
in
lcall
hlt
mov
insb
js
pop
fwait
daa
fs
rclb
fdivrl
sbb
into
mov
mov
push
iret
ret
lahf
pusha
add
int3
insb
xchg
inc
add
pusha
data16
pop
jno
shll
cmpsb
out
ret
pusha
in
inc
jns
mov
and
cwtl
lcall
pusha
fwait
mov
lock
jge
cld
fimull
int3
and
jo
jno
mov
cli
test
ret
push
jmp
enter
fadds
sub
fwait
jns
jp
movsl
daa
adc
sbb
mov
push
xor
jp
pop
loopne
mov
cmp
aaa
bound
cmp
pusha
je
dec
sub
xlat
jg
aas
mov
add
mov
pusha
sysret
hlt
push
push
nop
test
pushf
scas
push
bound
cs
loop
pop
loop
test
pusha
daa
filds
aas
pusha
push
fstl
sarb
subl
loop
es
int3
xor
pop
lods
pop
pusha
test
sub
cmpsl
scas
pop
clc
int
decl
mov
ficoml
or
fs
cmp
aaa
pop
pusha
dec
mov
xor
test
pusha
xchg
std
lds
mov
sbb
pusha
inc
mov
fidivl
jo
sub
icebp
enter
shlb
ds
adc
inc
xor
sbb
push
bound
dec
aad
and
sbb
pop
ja
mov
dec
sub
mov
push
pop
jnp
mov
mov
test
bound
xor
iret
fadd
xor
inc
arpl
ds
das
cwtl
scas
pusha
aam
push
stos
ljmp
daa
loope
xchg
test
iret
pusha
mov
insl
mov
and
popa
mov
in
xchg
push
mov
movb
test
gs
and
xor
jnp
loope
mov
jmp
jle
outsb
mov
push
dec
aas
add
enter
loope
inc
mov
push
jno
out
push
adc
mov
mov
popf
cli
adc
and
rorb
add
addb
dec
mov
inc
mov
xor
sub
sbb
out
fadd
jae
loop
hlt
icebp
adc
outsl
ret
mov
movsb
fsubrs
in
jo
xchg
pop
jl
inc
hlt
roll
popa
inc
inc
xchg
pusha
xor
adc
push
add
dec
push
aaa
shrl
push
jl
xor
xlat
sbb
mov
xor
dec
pusha
insb
arpl
out
pop
push
xchg
pusha
inc
lahf
iret
test
and
or
ja
rorb
mov
nop
in
fsubrl
mov
inc
pusha
push
mov
clc
fstpt
shlb
inc
mov
jns
in
dec
jl
add
adc
mov
pusha
mov
push
push
test
stc
xchg
lds
in
mov
popa
add
pusha
iret
fnstcw
adc
mov
shll
cmp
jp
mov
je
xchg
fiaddl
jae
adc
loop
xlat
aad
push
hlt
movsb
pusha
jmp
sub
push
lcall
jns
xor
xlat
stos
icebp
fisttpl
jle
add
testl
pop
sbb
cld
add
dec
popa
inc
xor
leave
test
push
jecxz
outsb
mov
push
cmp
in
cmc
pop
mov
jo
jge
lea
out
add
sub
imul
and
pusha
in
cmpsl
test
xchg
xchg
pusha
sti
cmp
rcrb
sbb
fcmovnbe
test
jg
clc
mov
daa
flds
fidivrs
xchg
xchg
not
in
mov
pusha
mov
test
sub
clc
dec
lahf
mov
jne
mov
jns
mov
dec
mov
jno
es
mov
sub
push
mov
pusha
inc
dec
into
add
pop
add
shl
shr
xor
inc
xor
pop
mov
insb
ds
add
repnz
adc
xchg
test
and
sub
ja
sub
test
push
xor
push
aad
ret
sbb
push
jl
ljmp
jo
jb
iret
sahf
add
std
in
jecxz
sahf
mov
loope
xor
lock
divl
lods
je
cmc
pushf
xor
pusha
repnz
std
push
push
pop
jl
cmp
cwtl
outsb
mov
cwtl
imul
jb
inc
pop
mov
mov
pusha
dec
xor
sbb
pusha
sub
jne
sub
arpl
xchg
cmp
out
jae
mov
add
nop
add
hlt
jge
pusha
scas
inc
mov
add
push
push
pusha
jo
dec
cli
orb
mov
cmp
mov
movsl
push
sub
cmc
mov
aaa
push
pusha
and
es
pusha
and
jmp
sub
imul
arpl
cmp
or
repz
xor
aad
inc
das
es
nop
add
jl
sbb
xchg
test
sbb
pusha
int
push
js
in
lock
cmp
jecxz
mov
out
pop
loope
mov
xor
je
sbb
sub
mov
adc
push
insl
mov
iret
leave
ret
testb
fbld
adc
ds
jo
aaa
mov
xor
xchg
repz
push
mov
sbbl
lock
mov
xor
sbb
mov
jp
hlt
sub
mov
stos
test
xchg
loopne
inc
lock
mov
outsb
sahf
in
pop
jbe
aad
fisubrs
jmp
inc
adc
pusha
dec
lret
cmp
xchg
push
dec
mov
add
jmp
pop
mov
add
or
lds
jae
sar
cmp
cmpsl
pusha
pop
shrb
les
jo
xchg
not
andl
inc
in
inc
ret
xchg
rorb
dec
pusha
int3
xchg
push
sbb
daa
dec
gs
pusha
jnp
aaa
movsl
jecxz
pusha
push
aam
or
cmp
dec
stos
sub
dec
sarb
jns
inc
movntq
out
jae
bound
cltd
mov
popa
mov
add
or
lods
push
dec
pushf
arpl
enter
cmpsl
xchg
mov
adc
or
cmpsb
inc
aaa
jne
mov
enter
pop
cmp
push
xchg
sahf
and
add
pusha
inc
pushf
xchg
xor
xor
popf
push
inc
pop
pushf
dec
jbe,pn
pop
dec
outsb
js
pop
mov
sub
sub
fnstcw
sbb
mov
mov
leave
mov
add
pushf
push
xchg
insb
inc
mov
sbb
and
jmp
xor
xchg
mov
mov
fmuls
mov
or
aam
and
pusha
inc
and
push
subl
pusha
inc
jmp
insl
pusha
es
or
push
lods
jnp
adc
push
adc
mov
cmpsl
pop
cltd
jmp
pusha
jb
faddp
jns
cmp
test
gs
sub
pop
jo
adc
mov
adc
outsb
pop
dec
sub
lahf
sbb
pusha
or
or
fs
stos
imul
add
pop
call
sbbb
jl
sbb
dec
scas
and
cmpsl
add
ficompl
add
pop
pusha
loop
fcoms
cmp
or
sbb
push
xchg
jne
inc
and
outsb
leave
mov
sbb
push
mov
imul
xor
iret
xchg
out
pusha
mov
mov
out
bound
fs
shrb
in
jg
mov
pusha
test
inc
icebp
push
mov
push
cmp
movsl
ret
lahf
in
iret
add
push
adc
inc
xor
pusha
adc
mov
pusha
fdivrs
mov
xlat
xchg
jp
loope,pt
mov
inc
enter
sbb
mov
jecxz
int
and
mov
stos
mov
mov
jmp
lods
cli
jmp
cmp
or
push
jbe
popf
sbb
hlt
mov
mov
inc
mov
jl
ljmp
in
sbb
mov
push
mov
inc
int3
pop
movsb
fs
or
or
sub
frstor
les
cmc
ret
and
pusha
cs
shlb
push
mov
insb
pop
arpl
orl
push
es
jp
or
jne
loop
push
lmsw
outsb
bound
pusha
xor
pop
mov
sbb
aaa
ficoml
popa
outsl
pusha
dec
ffreep
dec
cmp
into
push
pusha
fwait
sbb
daa
mov
mov
arpl
push
or
pusha
mov
cmpsl
xor
xor
inc
mov
jl
stos
mov
pusha
repz
dec
pop
pusha
mov
call
jmp
push
push
pop
std
cmpsl
sbb
adc
das
pushf
lret
pop
dec
pop
inc
insb
pusha
mov
mov
push
cs
icebp
xor
push
sbb
mov
arpl
and
es
xlat
mov
add
addl
fnstcw
sub
add
lea
mov
push
fldl
and
insb
icebp
lret
andb
xor
out
fs
mov
cmp
lods
nop
lock
leave
pushf
lahf
add
or
das
cmp
clc
adc
xchg
pusha
cmp
jl
xchg
lock
push
mov
int
adc
jnp
sub
inc
popf
mov
adc
int
mov
arpl
xor
sbb
and
daa
or
pop
fs
xor
ss
inc
jmp
jnp
insb
into
rclb
sub
mov
xlat
inc
lods
mov
add
adc
pop
lahf
push
shll
adc
je
xchg
dec
push
inc
addr16
push
push
lods
xchg
dec
xchg
mov
xor
pusha
nop
jno
jns
sbb
add
cmp
pusha
pushf
cld
xor
push
dec
popf
pusha
sbb
pop
aaa
mov
ds
rcll
inc
insb
int
xor
inc
aaa
xor
adc
popa
push
push
bound
sub
sub
jl
or
loop
jecxz
push
les
inc
mov
shr
fs
iret
mov
movsl
push
mov
mov
dec
xchg
arpl
inc
rcrl
scas
stc
insb
daa
jb
mov
loope
cmp
inc
in
pusha
movsl
filds
pusha
les
lahf
fwait
movsb
mov
sub
or
into
inc
adc
jmp
inc
pop
mov
mov
adc
fsubl
sbb
rorb
mov
cmp
push
add
pusha
lods
push
sbb
mov
jl
sub
adc
insb
lret
cld
repz
push
nop
sahf
pusha
jle
loop
or
dec
push
pusha
insl
and
les
rcrl
stos
fs
int3
roll
daa
jmp
add
outsb
xchg
pusha
xchg
jl
xor
xchg
out
insl
ljmp
notl
mov
popa
pusha
fcomps
xorl
stc
pop
fabs
inc
jmp
test
mov
gs
push
adc
addl
jo
xchg
adc
sbb
sub
roll
sbb
adc
add
scas
or
pop
add
sub
pop
push
and
hlt
aas
ss
pop
out
dec
bound
jns
mov
inc
pop
subl
xor
adc
inc
jo
xchg
bound
repnz
inc
loope
arpl
mov
pusha
mov
dec
dec
jo
sbb
or
mov
add
push
lea
jno
pop
pop
pop
or
mov
ret
fisubs
hlt
das
mov
aaa
popa
mov
cmpsb
sbb
sbb
popf
mov
idiv
rolb
cli
popl
shll
adc
pop
pop
cli
and
or
cmp
push
imul
mov
faddp
enter
push
xchg
movsl
adc
push
mov
iret
cmpl
loope
adc
or
push
inc
inc
xchg
add
shll
outsb
leave
push
out
insl
testb
and
cld
inc
dec
mov
mov
xchg
push
or
ret
xchg
add
pop
mov
in
fildl
out
ss
pop
bound
in
and
inc
adc
cmp
push
mov
xchg
jmp
movsl
mov
push
jb
jno
aaa
lods
cmp
paddb
jecxz
icebp
pop
push
jg
mov
push
test
jo
xlat
or
add
je
cmp
fdivrl
cmc
es
clc
push
dec
pop
adc
fsubl
cwtl
add
shrl
arpl
push
fwait
xchg
inc
push
inc
out
xchg
sarl
sbb
add
repnz
ret
or
sbb
dec
xlat
inc
ret
fsub
arpl
xchg
test
xor
sbb
mul
xchg
pop
ljmp
mulb
mov
cmc
stos
imul
mov
fidivl
pushf
addb
data16
sub
mov
mov
adc
adcl
inc
sbb
and
cmpsl
in
fnstenv
std
push
call
es
mulb
lea
jno
icebp
outsb
jle
xchg
pusha
std
adc
and
loop
js
flds
lods
sub
outsl
pusha
jae
loope
push
sub
pop
push
push
ret
pop
xchg
pusha
xchg
jmp
mov
in
jo
mov
push
pusha
int3
mov
jno
jge
mov
xor
pop
fs
ficoml
cmpsl
pop
mov
iret
inc
adc
insb
jge
data16
out
sub
int
leave
and
mov
pop
ret
insl
pop
imul
mov
mov
xor
aas
xor
lock
je
jns
out
mov
clc
mov
pusha
outsb
cmp
jb
xor
pusha
pop
push
sbb
mov
mov
lods
aas
idivb
push
shlb
arpl
push
pusha
xor
mov
pop
push
jl
dec
pop
or
fwait
jmp
rolb
mov
pusha
sub
xchg
test
bound
insb
xor
loop
or
mov
mov
mov
pusha
sbb
mov
mov
pop
cmpsl
pop
pop
dec
push
repz
mov
and
inc
daa
inc
adc
addb
data16
push
push
mov
jge
pop
push
out
mov
addb
sub
mov
loopne
jl
mov
lret
xchg
jecxz
dec
iret
xchg
pusha
loopne
sub
and
test
incl
pusha
add
push
mov
mov
push
pop
int
pusha
pop
mov
pusha
sbb
cmc
cmp
inc
aas
pusha
jmp
push
jo
cmp
sub
inc
cmp
leave
aas
je
add
call
sub
inc
fwait
pusha
sub
push
push
rol
fstl
pop
xor
adc
xchg
push
cs
pusha
testb
in
in
jmp
roll
shll
rcrb
mov
adc
popa
cmp
jo
out
push
clc
sbb
loope
push
cmc
cmpsl
movsl
insb
mov
and
or
repz
push
xorl
out
pusha
aaa
mov
es
dec
pop
mov
fmul
sbb
mov
ds
push
jnp
add
mov
pop
daa
popf
arpl
jg
pop
add
cltd
sbb
xlat
aam
imul
and
ret
jl
mov
push
das
mov
mov
sub
enter
xchg
add
scas
int3
fimull
pusha
js
xor
popa
in
sub
andl
xchg
loopne
shlb
jecxz
pushf
mov
adc
sbb
popa
inc
push
pop
scas
mov
xchg
aad
bound
sbb
das
xchg
jecxz
push
inc
inc
mov
inc
xor
dec
packsswb
pop
pop
cwtl
movsl
jo
add
pop
mov
repnz
xchg
xor
jp
rclb
and
ds
lret
mov
clc
fsubp
add
jle
pop
mov
into
lock
sub
repnz
sbb
mov
cmpsb
dec
add
mov
pop
pop
add
loopne
xchg
fisubl
pusha
rolb
cmp
pop
insb
jno
pop
gs
arpl
ficomps
ja
scas
into
rclb
sub
mov
or
popl
or
fbstp
pusha
out
outsl
nop
bound
push
and
mov
sbb
mov
sbbb
mov
bound
or
mov
jns
loope
dec
sub
outsl
and
jbe
loopne
sahf
sbb
and
push
cmc
dec
cmpsl
adc
fimull
sub
and
ret
jp
addb
push
test
add
pushf
fmuls
popf
ja
push
or
pusha
pop
inc
inc
sub
clc
in
arpl
lds
aam
leave
sbb
adc
fs
dec
ljmp
ficoml
xchg
pusha
loopne
pop
or
stos
and
mov
jne
daa
insb
mov
mov
mov
sbb
xor
inc
push
fstps
mov
insl
adc
add
bound
test
sti
dec
mov
fcomps
das
pop
pop
mov
xlat
out
push
add
pusha
jle
hlt
into
xchg
dec
jl
sarb
cmp
jl
loopne
call
test
pop
pusha
lcall
test
jns
sub
leave
push
and
cmc
daa
cmpsl
jo
and
in
arpl
loop
inc
mov
add
mov
xor
pusha
or
sarb
or
fwait
and
dec
mov
out
call
divl
outsb
aaa
push
mov
insb
push
adc
pusha
ss
cli
jge
mov
xchg
mov
mov
fsubl
pop
mov
shlb
ret
cmp
jb
movl
mull
xor
and
inc
clc
mov
sti
xor
dec
pop
mov
mov
js
out
pop
pusha
mov
inc
sub
pusha
pop
jnp
mov
pusha
movsl
or
add
add
xchg
call
ror
jge
fwait
insb
cmp
scas
das
lods
stos
loope
bound
sbb
insb
cmc
lock
add
test
loope
sub
sub
mov
jbe
jg
pop
mov
scas
xchg
xchg
das
lea
jbe
bound
cli
xlat
repz
outsw
scas
movsl
in
bound
leave
add
dec
pusha
dec
out
sbb
cmp
push
mov
cmp
and
and
mov
lock
out
frstor
push
shrb
lods
in
xor
dec
jge
mov
push
push
loop
icebp
ljmp
add
xchg
mov
mov
sbb
jg
fldenv
inc
cmp
push
xor
and
lahf
mov
mov
or
cmp
aaa
pop
ja
xor
popa
das
push
or
mov
lahf
mov
shll
inc
cld
pusha
je
rorb
pop
mov
inc
jl
test
les
decb
out
push
bound
cmp
fwait
andl
pusha
or
adc
setge
pusha
pop
ret
loope
leave
cmc
mov
add
mov
xchg
pusha
pop
ficoms
dec
pusha
cmp
aaa
push
xchg
gs
dec
push
popa
aad
insb
xor
inc
fwait
mov
mov
push
adc
and
testb
in
lock
fwait
rol
pusha
xchg
daa
dec
sub
adc
pop
leave
imul
aaa
jle
decl
xor
mov
jo
fldcw
hlt
ss
xchg
adc
jg
outsb
into
and
dec
divl
mov
bnd
xchg
scas
xchg
and
arpl
mov
mov
adc
and
aam
mov
adc
pusha
jg
mov
int3
stos
mov
adc
fnstenv
sbb
push
add
fbld
sbb
push
xlat
lret
test
pop
push
stc
xchg
pop
mov
je
lock
sbb
push
fucomi
pusha
add
das
xor
pusha
es
mov
hlt
mov
lea
dec
out
gs
pusha
imul
popa
test
mov
mov
mov
pusha
add
mov
arpl
xchg
gs
jnp
fcoml
repz
hlt
sbb
pusha
push
xchg
shll
sbb
push
mov
push
add
dec
mov
xchg
cmp
test
xor
adc
in
fldenv
movsl
xor
sti
xchg
pop
ficompl
loopne
inc
dec
pusha
mov
lret
cli
jl
imul
popf
insl
sbb
pusha
sbb
mov
cli
mov
jmp
test
mov
fs
loop
cmp
dec
or
in
jle
std
stc
pusha
pop
aas
or
pusha
jnp
testb
sbbb
mov
in
js
loope
stos
lret
imul
fmulp
pop
mov
dec
or
sbb
mov
xorl
into
repz
push
adc
in
rcrl
and
rcrl
pusha
dec
aam
adc
aaa
jg
je
jnp
mov
xor
je
pop
cmp
push
insl
and
push
je
xchg
push
xor
mov
lret
adc
push
adc
or
scas
and
mov
and
push
stos
adc
push
jbe
lea
insb
mov
pop
push
pop
cmpsl
nop
inc
inc
out
popf
iret
call
push
decb
mov
push
rcrb
shll
mov
push
cmp
inc
daa
and
pop
in
lret
iret
push
push
les
xchg
addr16
add
loopne
pop
jmp
mov
dec
and
and
out
mov
popf
sub
pop
pop
mov
addr16
rolb
sbb
sbb
fisttpl
test
jmp
bound
cs
push
pusha
test
inc
bound
pusha
stc
xchg
jae
jno
ret
dec
and
loopne
fs
popf
shrl
push
or
xchg
pop
jb
callw
jae
mov
mov
adcl
shll
adc
lret
mov
mov
dec
fistl
sbb
lahf
adc
inc
inc
movsb
jns
mov
push
loop
sub
push
xchg
xchg
jmp
shl
adc
in
out
add
cld
mov
dec
cmp
push
pusha
addr16
sub
jb
mulb
pusha
lods
or
test
xchg
cwtl
dec
jecxz
ffreep
pusha
loopne
inc
repnz
pop
add
js
mov
hlt
lret
adcl
ss
lods
int
outsl
push
arpl
pop
sbb
imul
xchg
test
bound
pop
lahf
nop
mov
jecxz
dec
or
push
dec
addr16
nop
lcall
cmpsl
inc
fsubl
andl
rol
shl
dec
or
mov
fcompl
int
pusha
and
fcomp
js
or
cmp
out
iret
inc
push
pop
jg
sub
and
dec
mov
or
mov
sbb
outsb
xlat
call
repz
inc
clc
push
test
adc
mov
loop
dec
add
arpl
add
test
jo
dec
inc
call
enter
es
pop
inc
mov
clc
inc
mov
data16
stos
stc
cmpsl
inc
and
inc
xchg
pop
dec
outsl
fdivrs
xorb
leave
mov
data16
xchg
push
jp
clc
mov
lock
dec
push
pusha
adc
test
iret
pop
dec
cmpsb
arpl
outsb
lea
sub
mov
call
jnp
cwtl
nop
je
mov
jnp
push
xchg
aaa
sti
fs
jns
das
push
pusha
jno
aaa
inc
xchg
loope
or
jmp
mov
xchg
loop
add
ss
outsb
jbe
push
and
icebp
dec
jo
les
std
mov
adc
in
add
inc
and
out
dec
in
xor
inc
call
or
xchg
pop
sbb
repnz
sub
loop
imul
jns
push
std
sbb
dec
fwait
ds
test
and
sub
mov
push
and
ss
push
and
lcall
or
sbb
in
pop
sub
stc
dec
nop
scas
ret
imul
mov
pop
xor
cli
jno
inc
and
mov
sahf
dec
insb
and
je
insl
dec
jns
mov
cmp
push
cmp
pop
cmp
fisubrs
lret
push
sub
repz
inc
add
push
xchg
lret
sub
cld
sub
pop
icebp
mov
dec
bound
mov
cmp
inc
mov
or
loopne
lods
enter
sbb
insb
roll
lahf
out
mov
push
rcrl
loopne
in
sbb
cmp
mov
cmp
mov
dec
imul
xchg
add
inc
mov
inc
mov
sbb
pop
in
lock
xor
mov
and
add
addl
fisubrs
inc
imul
dec
cmp
sarb
inc
push
and
and
je
mov
out
jnp
mov
jne
mov
inc
inc
clc
je
fstpl
mov
sbb
adc
xchg
cmpb
gs
or
loopne
mulb
mov
aam
push
xchg
in
mov
lret
add
and
xor
jmp
inc
inc
cmc
call
jae
xchg
xchg
or
or
inc
xchg
fisubs
xchg
add
aas
data16
ljmp
inc
popa
adc
daa
inc
adc
stc
pop
imul
scas
xlat
test
daa
sti
or
add
xchg
inc
lods
mov
frstor
test
push
xor
sahf
xor
push
jmp
sbbl
sbb
push
hlt
or
jecxz,pt
shrl
movsl
xchg
aad
jmp
cwtl
shrb
gs
imul
ds
hlt
pop
sub
ds
stc
mov
pusha
rcr
pop
int3
adc
test
mov
mov
push
mov
and
imulb
jno
rcrl
mov
pop
or
or
pop
push
add
mov
adc
push
pop
xchg
fistpll
sbb
xchg
pop
dec
mov
aad
mov
dec
loope
test
dec
jbe
inc
mov
addr16
aas
aam
sub
fwait
and
aaa
sbb
mov
pop
bound
adc
pushf
xchg
outsl
inc
pop
testb
mov
cmp
dec
inc
addr16
andl
push
fidivl
cmp
sbb
addr16
and
das
add
lods
clc
loope
fistps
rcr
sbb
mov
dec
filds
mov
sbb
subl
pushf
jb
orl
cmp
pop
les
push
imul
pop
addb
xchg
and
or
jbe
push
shl
and
stc
cmc
dec
xor
fnstcw
cmp
loop
jb
fimuls
faddl
push
and
mov
lds
push
mov
jmpw
mov
jno
add
mulb
or
ss
popa
fstl
scas
sub
data16
inc
sarl
adc
inc
pop
inc
jl
popa
repnz
sbb
arpl
lret
movsb
aad
icebp
mov
mov
sub
mov
jne
scas
out
adc
sub
add
sahf
outsl
or
mov
sub
xchg
pop
mov
in
push
push
repnz
cld
sbb
lds
cltd
and
mov
mov
jo
movl
adc
pop
aad
and
push
bound
or
sbb
aas
cltd
daa
aam
and
les
jg
movsl
sub
pop
sbb
jne
arpl
xchg
mov
imul
cmp
inc
hlt
mov
dec
lahf
pop
rsqrtps
enter
add
xchg
dec
sub
mov
mov
dec
int
mov
pusha
pop
divl
data16
int3
lods
pop
pusha
jle
xchg
sub
jb
sarb
dec
shll
testl
mov
cld
dec
cld
add
lea
adc
mov
stos
pusha
enter
adc
jne
pusha
inc
xor
cmpsl
pusha
ja
aas
mov
add
iret
pop
pop
scas
and
push
cs
sbb
movsl
addr16
adc
arpl
popf
addb
rcrb
ficomps
frstor
mov
sub
jnp
mov
rorl
push
flds
xor
lea
jl
je
popf
jle
cmpsl
arpl
jb
pop
nop
pop
cmp
mov
jnp
repnz
xor
add
ss
icebp
outsl
fnstcw
lret
pop
cmp
cmp
loope
repnz
pusha
sub
add
outsb
scas
rcrb
imul
sub
lds
fcomps
pusha
push
xor
inc
xor
nop
pusha
icebp
pop
dec
mov
xlat
in
shl
mov
ja
pusha
mov
jno
xor
out
cmpsl
pusha
in
fisttps
sbb
ficoms
pop
inc
aas
imul
sub
jl
adc
jg
test
lcall
andl
xor
mov
fildll
js
add
inc
popf
les
fs
loope
xlat
aaa
mov
mov
mov
pop
or
add
repz
sub
lds
xor
inc
ljmp
cs
repz
inc
mov
std
mov
push
cli
pop
test
adc
push
xor
mov
insl
lods
rcr
loopne
inc
xchg
xor
outsb
pop
pop
push
jl
stos
cld
mov
pop
sub
test
cmpsl
mov
shlb
pop
sbb
les
inc
or
xor
jp
test
cli
push
pop
iret
xchg
sub
adc
and
es
inc
orb
sub
and
xchg
mov
je
mull
cmpsb
outsl
sub
pop
pop
stos
mov
inc
loop
test
jbe
es
cmpsb
push
ja
sbb
push
pop
andl
lods
outsl
sub
pusha
adc
ss
jg
pop
add
ret
xchg
insl
mov
popf
cld
jle
loopne
mov
shlb
pusha
bound
cmp
xchg
pop
inc
test
add
test
sub
pop
imul
ss
into
mov
adc
lea
add
xlat
in
pusha
push
shl
dec
mov
stos
sub
xor
movsl
mov
lods
insb
sti
xchg
rolb
outsb
pusha
xor
aad
pusha
and
xor
add
stos
jl
push
or
popa
movsb
adc
lods
pusha
inc
xor
xchg
cwtl
out
shlb
push
test
and
test
bound
mov
insb
dec
jge
cmp
and
xor
insb
ja
add
arpl
push
adc
arpl
ret
adc
stos
hlt
add
xor
mov
jo
arpl
data16
mov
add
fmull
dec
arpl
sbb
xchg
or
lods
sub
pop
out
sbb
mov
fidivrs
cwtl
stos
mov
xchg
cmpsb
push
je
arpl
inc
jp
dec
mov
and
xchg
pusha
das
int
insb
cmp
push
movsb
mov
cmp
je
int
into
in
in
cmp
stc
cwtl
addr16
inc
out
jae
mov
lea
int
xlat
pop
mov
in
mov
push
jl
ja
and
pop
mov
daa
adc
fiadds
pusha
cmp
dec
popf
aam
xchg
add
pop
pop
arpl
in
jmp
pusha
cld
inc
js
rorl
mov
jne
pop
jl
jbe
adc
fs
roll
mov
jmp
pusha
fwait
sub
push
pusha
je
pushf
inc
adc
or
movq
mov
mov
loope
dec
outsb
dec
pusha
addr16
mov
loopne
stc
mov
pushf
add
pusha
xor
mov
into
pusha
jb
or
imul
mov
cmp
add
rol
mov
fs
and
mull
xchg
jae
lea
aad
mov
pusha
imul
lret
fisubl
xchg
clc
outsb
push
cmc
pusha
and
jecxz
add
movsl
movsb
pusha
jge
inc
test
insb
cwtl
push
mov
repz
out
xsave
adc
mov
popa
jnp
std
jo
sti
sub
bound
mov
and
bound
pusha
adc
lds
sbb
adc
bound
lcall
pusha
xor
pop
lahf
xor
into
sar
ss
lods
mov
cli
js
push
addl
fs
test
in
outsl
int3
sub
fnsave
out
fwait
cmpsl
pusha
pop
pop
cmp
ljmp
gs
mov
loop
xchg
adc
jae
std
push
rcr
fstpt
jge
mov
int3
scas
test
das
ja
sarl
jg
pop
jl
push
mov
std
movsb
mov
pusha
es
lret
or
fs
pusha
ljmp
jp
in
scas
pusha
lret
loope
pop
mov
clc
jg
in
and
xchg
mov
ret
jmp
stos
rcr
mov
outsb
sbb
push
xchg
push
imul
arpl
mov
into
test
notb
sti
mov
mulb
mov
xchg
aam
sbb
jne
mov
stos
adc
dec
in
mov
mov
xchg
call
insb
xchg
movsl
idivb
jnp
jecxz
dec
mov
add
insb
adc
sbb
pusha
lret
add
push
mov
xchg
in
cmp
fs
clc
adc
pusha
xor
pop
pop
mov
sbb
test
cmp
sbb
andl
push
test
in
outsl
push
pop
bound
fwait
mov
popa
cltd
pop
pusha
jecxz
aam
pusha
dec
fldenv
push
xlat
sbb
mov
push
insb
add
sbb
jne
into
stos
mov
je
nop
cmc
mov
jbe
test
and
mov
pop
pusha
mov
add
insl
cwtl
mov
lods
pusha
push
adc
ja
bound
add
fnstcw
in
test
std
fimuls
and
lcall
cmp
call
sti
rolb
mov
or
and
push
jmp
xor
pusha
push
inc
xlat
in
dec
pusha
cmp
mov
add
outsb
adc
mov
fidivrs
cli
mov
pop
fcmovu
jecxz
daa
ds
lcall
jp
push
dec
xor
lahf
mov
lret
add
and
jae
and
daa
xchg
scas
pop
jo
mov
leave
ret
movsl
fwait
xchg
pusha
cmpsl
mov
stos
cwtl
insb
cmp
arpl
add
popa
mov
xchg
stos
loop
jecxz
pusha
out
and
inc
mov
xchg
repz
fs
les
sub
mov
icebp
jo
sub
jecxz
dec
jne
paddusb
es
sbb
jmp
daa
push
or
mov
inc
dec
js
add
enter
mov
and
rcrl
mov
push
and
sbb
push
aad
stos
sti
orl
mov
or
add
dec
rcrl
mov
adc
and
insb
sub
js
cmp
insb
jmp
jne
adc
ret
mov
mov
or
in
mov
cmp
pop
es
loope
adc
ret
sub
das
inc
or
bound
divb
mov
nop
or
adc
in
ret
call
loopne
pop
jo
mov
je
add
inc
mov
dec
sub
stos
daa
jo
inc
mov
inc
mov
jnp
or
outsb
jo
xchg
xchg
push
popf
fimuls
hlt
xor
popa
cmc
pop
repz
shrl
mov
pushf
loop
push
cmp
insl
lds
divb
or
daa
imul
sbb
xchg
sbb
push
rcrb
sub
nop
test
sub
pop
inc
iret
in
insb
lret
push
ret
adc
fs
sbb
xchg
xor
inc
mov
pop
xchg
sub
cmpsb
gs
sub
cli
gs
jo
loope
ret
pop
sbb
pop
lcall
aas
inc
loopne,pn
mov
pushf
mov
test
mov
data16
inc
mov
inc
mov
inc
popa
pop
inc
jbe
outsl
sub
dec
mov
data16
dec
jne
inc
sbb
and
xor
push
push
insb
push
rol
push
mov
jo
mov
roll
mov
loope
addr16
push
loopne
push
add
xchg
aaa
nop
and
pop
sub
scas
lret
cmp
pop
sbb
mov
imul
mov
fistpl
nop
or
stos
xlat
shrl
outsl
mov
mov
mov
and
cmp
loopne
rclb
add
bound
rolb
call
aas
pusha
ja
push
mov
push
cltd
pusha
cwtl
cmpsb
xchg
hlt
dec
inc
pusha
movsl
mov
mov
push
cli
and
xchg
out
aas
ret
cmp
les
cmpsl
aad
stc
lods
repnz
out
and
mov
sbb
popa
push
ret
dec
rcrb
das
xor
mov
pusha
jl
cmp
mov
and
pop
pusha
aad
cmp
ficompl
ja
dec
pusha
adc
adc
and
sbb
notb
pusha
xlat
xchg
movsb
pusha
ja
jl
add
jo
insb
test
imul
fisubrs
sbb
fs
sbb
mov
adc
sbb
xor
and
sarl
adc
cmp
ja
dec
cltd
or
mov
pusha
xor
insb
push
lods
inc
pop
daa
icebp
xabort
arpl
popf
pop
push
in
sahf
aam
xor
cld
das
mov
pop
sti
mov
pusha
rcll
out
movsl
pop
xchg
stc
cmp
dec
cli
fisttpl
jnp
pusha
pop
repz
push
inc
xchg
test
lds
fldenv
pop
push
scas
pop
push
xlat
lods
pusha
sbb
mov
jl
sbb
cmp
pop
fsubrl
xchg
pop
dec
jmp
les
mov
mov
sbb
int
push
fs
pop
push
shll
fcomi
loope
pusha
mov
xchg
sti
lahf
pusha
xchg
push
adc
gs
popf
push
pusha
repz
pushf
xchg
in
bound
dec
cmp
sbb
jg
pop
addr16
clc
adc
xor
fprem1
sbb
jle
pop
xor
jg
pusha
add
and
or
lds
jo
dec
lea
inc
bound
cmpsb
rolb
or
pcmpeqb
lea
fsts
and
loopne
mov
pusha
cmp
imul
pushf
jp
test
jae
sub
xchg
push
fsubrs
pusha
and
cltd
pusha
sbb
cmp
pusha
push
pop
imul
mov
push
lahf
aas
pusha
rcll
outsl
pop
loopne
dec
outsb
data16
mov
pusha
test
cmpsl
inc
push
imul
bound
pop
pusha
xchg
aam
addl
pusha
std
inc
mov
sbb
shlb
pop
lods
cmpsb
repnz
push
jae
pusha
movsl
sbb
das
adc
xchg
icebp
mov
or
mov
push
mov
jecxz
adc
out
inc
cmpsl
mov
xchg
pushf
jl
pop
add
sbb
inc
sub
add
rorl
dec
out
pusha
pop
pop
xor
test
sbb
sub
mov
call
sbb
icebp
andl
imul
aaa
ss
and
shlb
mov
into
mov
adc
add
mov
lods
pusha
test
mov
xchg
jo
ret
mov
inc
stos
in
imul
pusha
ficompl
or
or
sub
xchg
daa
mov
pusha
or
push
pusha
add
loope
pop
pusha
notrack
xor
mov
nop
pop
pusha
mov
hlt
test
sub
push
jecxz
and
and
pop
add
pushf
and
cmpl
lds
adc
jns
pusha
adc
int
das
js
push
leave
aaa
out
mov
jl
lret
aad
jne
or
shll
mov
pop
hlt
push
ljmp
std
pop
fmuls
cmc
adc
popa
das
shll
shrb
xor
gs
js
cli
pop
push
pop
fsubrl
shr
fstpl
sbb
jnp
pusha
out
adc
gs
int
shrl
pushf
lret
or
je
adc
jge
test
mov
js
cmc
xor
mov
push
gs
inc
mov
out
mov
adc
lret
lea
sti
mov
rcrb
sbb
andl
pusha
sbb
mov
push
shll
ret
fmull
push
imul
or
mov
and
lea
divb
cmp
leave
test
xchg
mov
fs
pusha
out
mov
ja
decb
aaa
fcompl
lds
mov
sub
push
jl
adc
call
pusha
adc
aad
sbb
pop
cmp
mov
push
pusha
mov
inc
jl
lods
jp
das
pusha
jg
popf
iret
sub
push
pusha
sbb
cmp
add
cmpsb
fs
repz
imul
mov
shr
pusha
int
cmpsb
mov
shll
stc
loope
mov
push
add
mov
push
mov
dec
shl
aam
mov
dec
pusha
jle
mov
ss
arpl
pusha
inc
jnp
loopne
dec
shlb
pop
arpl
arpl
push
adc
mov
or
mov
xchg
stos
popf
pop
and
mov
inc
call
jge
adc
pop
jo
cs
sti
pusha
stos
shll
xor
lahf
mov
mov
clc
or
out
movsl
cld
out
and
mov
lods
ret
mov
les
cs
imul
adc
fmull
call
push
mov
adc
rcrb
adc
in
push
pusha
fs
cmpsb
fmull
ds
jle
push
data16
jge
sub
mov
repnz
out
inc
sub
mov
sub
enter
xchg
xchg
pusha
push
dec
cmp
lds
mov
pop
inc
lods
mov
loope
add
cs
xor
mov
push
shl
lock
shlb
imul
jl
outsb
sub
bound
insb
sub
movsb
jns
arpl
addr16
popf
push
call
cwtl
pusha
stc
ljmp
pusha
cmp
push
adc
and
pusha
cmp
dec
das
lahf
mov
pusha
and
push
daa
popa
jecxz
sti
test
bound
jmp
lret
mov
xor
sahf
sub
sbb
fsubl
popa
cs
and
gs
pusha
adc
xchg
in
dec
std
fs
add
push
or
outsl
into
xchg
les
gs
jo
xor
stc
xlat
ficompl
mov
inc
dec
jmp
sbb
fwait
loopne
into
pusha
in
out
pushf
cltd
leave
inc
das
ds
lock
push
scas
cmp
pusha
adc
dec
lcall
aad
pop
sbb
mov
push
outsb
or
and
pop
pusha
lahf
mov
xchg
mull
fst
rcll
xchg
fcomps
popf
mov
lock
test
sbb
or
push
cmp
dec
loope
sbbl
xchg
pusha
movsl
leave
dec
dec
pop
inc
push
or
pop
or
push
add
or
loopne
enter
cmp
call
mov
insb
jmp
imul
addb
fisubs
add
mov
pusha
aad
push
int3
mov
push
xlat
mov
mov
lcall
fmul
inc
add
sub
push
mov
adc
inc
sahf
pusha
cmp
pop
adc
scas
and
adc
inc
stos
popa
and
iret
rcl
add
repnz
test
cli
adc
mov
icebp
push
or
adc
mov
mov
xor
and
pop
push
mov
mov
leave
jp
mov
cmp
mov
mov
add
imul
pusha
lods
outsb
pop
jp
or
pusha
lret
mov
cmp
xchg
das
popa
xor
inc
pusha
in
dec
jo
js
push
aam
inc
fldt
in
out
push
popf
jbe
scas
xor
andl
add
dec
xor
popa
ror
add
xor
mov
clc
mov
sub
outsl
movsl
fadd
icebp
add
sbb
push
aad
mov
inc
pusha
sbb
scas
cmp
jb
into
popa
ret
add
or
pop
add
scas
mov
or
sub
shr
pusha
aaa
mov
and
and
pusha
mov
jp
push
test
adc
jge
into
and
xor
sbb
aad
daa
adc
jne
bound
mov
ret
dec
jo
filds
inc
mov
sub
and
pop
pusha
dec
push
in
jnp
adc
fcomi
mov
sub
or
pushf
rclb
bound
sub
lahf
push
jo
popa
cmp
or
mov
movsl
xor
inc
pusha
mov
ds
pop
and
pop
inc
fs
sub
sub
loopne
ss
xor
ret
mov
lock
inc
mov
pop
xor
test
mov
loop
or
pusha
cli
lcall
adc
jne
add
pusha
xchg
cmp
sbb
idivb
mov
rcrl
lods
mov
add
fabs
lcall
sub
pusha
lea
sbb
push
test
in
mov
or
ljmp
scas
mov
sub
roll
outsl
adc
loope
jecxz
andl
xchg
lods
fbld
sub
in
mov
jl
mov
outsb
mov
jbe
ret
mov
cmp
pop
lahf
xchg
fwait
cmc
mov
jnp
xchg
nop
repz
jnp
mov
cmpsl
xchg
popf
arpl
xor
ret
jmp
int
sbb
mov
lea
xor
mov
xor
and
push
pushf
xchg
mov
insb
movl
fcompl
pusha
aam
pop
xchg
cmovg
mov
push
js
in
mov
lds
and
fstl
mov
repz
push
jo
dec
or
sub
jge
adc
xlat
lods
inc
pusha
xor
dec
dec
stos
cli
cmp
jmp
cs
dec
cmp
fcmovu
cmc
adc
pusha
adc
mov
sub
movsb
add
insb
cmp
sbbb
test
call
stos
and
pop
popf
inc
fidivrl
sti
pusha
xchg
adc
rorb
or
pusha
js
inc
pop
pop
jns
or
andl
dec
out
mov
add
sbb
pop
pop
cli
dec
fs
sub
and
cmpsb
xchg
cwtl
push
cmp
pusha
mov
pop
insb
clc
ljmp
inc
jmp
xor
fs
fisubl
push
orl
xchg
add
pop
fdivrs
add
jecxz
lds
sub
stc
lahf
cmpsb
pusha
push
inc
out
outsl
dec
dec
adc
fwait
aad
in
cmp
sti
insl
das
ja
pusha
mov
outsb
nop
jecxz
pusha
mov
mov
xlat
mov
insl
loop
pop
cmp
pop
lahf
mov
and
adc
mov
outsb
insl
ss
mov
pusha
jo
sub
push
dec
hlt
popf
pusha
loopne
ss
pusha
scas
aaa
out
xlat
sarl
fs
push
je
loope
xchg
lret
sub
in
jle
xchg
mov
fs
inc
test
mov
jle
xlat
fistpl
push
les
jmp
sub
inc
es
addb
sahf
sub
sub
cmp
dec
es
int3
or
shlb
adc
addl
clc
cmp
arpl
push
inc
mov
mov
sub
inc
and
push
adc
jl
pop
cmpsl
and
sarl
inc
cmp
insl
ret
pusha
and
sub
aad
pusha
cmp
push
fstpl
loopne
xor
jl
clc
dec
lcall
pop
outsl
mov
aaa
loope
push
int3
fwait
pusha
or
out
sbb
cmp
mov
jne
add
or
icebp
adc
jmp
je
popa
pushf
arpl
pop
pusha
xlat
fs
mov
sbb
and
xchg
ljmp
xor
or
not
enter
or
mov
pushf
cmpsb
jne
push
movsb
fwait
mov
pusha
pop
clc
mov
sub
xor
add
dec
out
mov
popa
and
pop
pop
push
cmpsb
mov
nop
lret
stos
push
ret
push
insb
jge
inc
xchg
lret
xchg
xor
bound
jo
adc
mov
aam
bound
and
pusha
gs
scas
and
mov
xchg
fistl
popf
inc
cmpsl
dec
xor
lahf
and
pcmpgtb
dec
das
shll
pop
ret
or
stos
push
xchg
and
aad
jl
std
movsl
add
outsb
sub
xchg
and
fs
push
ret
jecxz
outsl
xor
sub
lods
sub
fwait
mov
xchg
pop
jae
cmp
mov
mov
adc
adc
aad
into
and
xchg
scas
sub
xchg
sbb
aad
fistl
loop
pop
je
cli
ds
push
mov
push
es
mov
test
clc
or
sub
pusha
stos
jp
cmpsb
hlt
inc
jae
pusha
fsubp
sub
pusha
add
lahf
ret
mov
jo
xchg
fildll
outsl
pop
pop
jecxz
lret
insl
add
lods
add
xor
cmp
and
in
pusha
daa
xchg
lret
adc
aam
out
sub
std
andnps
leave
pop
mov
push
inc
shl
mov
stos
sbbl
inc
jl
mov
test
add
xchg
push
pusha
mov
pop
lahf
mov
xchg
hlt
test
stos
je
adc
jne
bound
iret
sub
or
push
test
pushf
push
push
loopne
ret
pop
mov
ds
es
and
rcll
dec
push
fildll
imul
pop
pusha
cltd
or
or
bound
cmp
push
sti
mov
push
out
test
xchg
arpl
mov
mov
lahf
add
imul
mov
jae
arpl
fmuls
mov
pusha
in
sub
or
pusha
popa
jmp
imul
adc
mov
clc
or
icebp
out
int
dec
fs
pusha
push
add
add
jl
pop
outsl
adc
arpl
and
rcrl
and
mov
jg
jmp
xchg
jle
test
scas
add
ds
movsl
lods
hlt
jnp
mov
pusha
add
jae
clc
mov
sti
mov
sub
add
leave
inc
xchg
pusha
loope
test
xchg
loop
dec
out
jb
mov
fs
out
sar
pop
sbb
xchg
lods
outsl
add
rcrb
popf
jp
adc
mov
add
dec
pop
jp
pusha
in
xchg
add
fnstsw
bound
dec
and
adc
pop
jl
fwait
dec
xchg
repz
mov
lret
insb
daa
lds
popa
cli
xchg
push
mov
xor
loop
add
mov
adcb
fs
push
scas
jp
pushf
xor
xor
ret
dec
stc
pop
pop
fcmovne
xor
bound
data16
xchg
and
lret
push
dec
inc
push
pusha
stos
push
pop
or
mov
jge
sti
jnp
call
sbb
roll
dec
and
xchg
lock
adc
mov
pop
adc
and
jge
xor
sub
pusha
stc
insb
jmp
loope
rep
jmp
sub
inc
add
enter
mov
incl
jp
mov
mov
add
sub
xchg
scas
imul
enter
pusha
into
cld
dec
test
jl
dec
mov
mov
mov
push
add
cli
xlat
cltd
push
testb
pusha
cmp
mov
lods
jl
je
cmpsl
or
xchg
pop
mov
daa
and
rcrb
movsl
or
nop
mov
adc
sbb
cmp
lcall
pop
adc
xor
add
pusha
sbb
cmpsl
fisttps
add
mov
pop
mov
fwait
popa
sbbl
pusha
jo
out
out
jbe
jle
addl
cmp
iret
jmp
je
sub
push
fcompl
arpl
jl
xor
fs
je,pn
fadds
mov
push
imul
or
push
push
insl
xor
add
fists
pop
jmp
lods
push
pusha
pop
sbb
fcoms
cltd
push
nop
bound
xchg
sub
lock
pop
arpl
jp
aaa
xor
cmp
sub
push
lcall
pusha
gs
add
out
dec
insb
in
mov
ret
pop
cmp
addb
xchg
and
sub
dec
pusha
mov
loope
leave
cwtl
mov
inc
bound
jg
pop
scas
in
pusha
out
xorl
pop
stos
xor
je
jecxz
pusha
adc
cltd
cwtl
imul
inc
dec
mov
push
mov
xchg
pop
loope
sbb
jnp
rorb
push
pusha
mov
pop
mov
out
sub
dec
ret
std
jnp
xchg
lcall
cmp
cmpsl
xchg
mov
or
lock
pusha
stc
ss
dec
fsubrl
stos
pusha
arpl
cmp
ds
fstpl
into
jg
lods
insl
outsb
std
loopne
pop
push
cld
rcr
cwtl
popf
add
imul
rcll
dec
cld
and
stos
and
adc
dec
mov
push
xchg
lahf
xor
and
popf
fidivl
mov
bound
sub
pop
mov
cmp
push
bound
ss
lahf
pusha
inc
mov
out
lds
lods
aaa
scas
jne
pop
and
adc
loopne
push
jecxz
inc
repz
aaa
bound
cmc
pop
pusha
pop
js
add
fistl
jecxz
mov
push
pushl
out
adc
push
cmp
daa
stos
ljmp
je
mov
or
or
cmp
jp
bound
sahf
adc
mov
das
dec
xor
arpl
pop
jno
pusha
cli
in
imul
xchg
xchg
mov
call
pop
push
push
pusha
icebp
shll
mov
pusha
inc
cmc
repz
push
clc
js
cmpsb
stc
sub
xchg
aad
aam
hlt
xchg
or
out
pusha
ficomps
xchg
xorl
test
call
hlt
inc
add
add
xor
xchg
shl
sbb
mov
add
loopne
sub
sbb
shl
cmp
in
sahf
fs
int
add
rcrl
ret
mov
mov
xchg
mov
sbb
push
aaa
arpl
inc
out
test
mov
xor
add
mov
rcll
insb
pop
cmc
hlt
inc
lods
push
xchg
mov
lahf
xchg
std
pusha
dec
jge
or
xor
adc
lods
arpl
mov
ja
mov
xchg
push
and
std
cmc
push
mov
testb
jecxz
push
push
mov
pusha
mov
mov
xchg
cmp
pop
inc
inc
mov
fcomip
push
rcrl
push
push
jecxz,pt
pop
jl
aaa
lds
das
add
rcll
pop
pusha
smsw
fdivrl
aad
pusha
dec
popl
jecxz
push
dec
jae
or
mov
clc
addr16
jecxz
cwtl
mov
pusha
mov
insb
out
insl
pushf
jp
shl
in
fmull
sahf
and
sub
cmp
jns
pusha
or
sahf
hlt
dec
pusha
rcll
jl
stos
out
mov
andl
push
jae
loope
fwait
xor
nop
jmp
pop
bound
sbb
inc
mov
popa
or
mov
jnp
or
insb
sbb
shr
fisubl
imul
cmc
cld
mov
in
mov
mov
pusha
and
xor
jmp
lret
adc
in
aam
out
lods
jbe
pusha
testl
lcall
addr16
and
arpl
pusha
mov
sub
ds
repz
pusha
lret
leave
adc
fs
pop
jmp
arpl
pusha
push
xor
adc
rolb
jge
sti
pusha
push
cmp
pop
insb
popf
pop
lcallw
xchg
jmp
cmp
sahf
call
pusha
mov
aam
xchg
pusha
mov
push
and
subl
mov
xchg
push
add
je
test
scas
js
pop
lea
cmp
jecxz
repnz
cltd
fs
inc
test
insb
outsl
mov
xor
daa
and
ljmp
adc
orl
stos
cltd
sbb
inc
or
inc
add
mov
pusha
movsl
xchg
fwait
pop
popa
xor
lock
out
lcall
jne
add
shrb
ror
test
nop
sahf
dec
add
jl
mov
xchg
loop
mov
pusha
add
inc
inc
xchg
pushf
inc
cmp
add
fs
push
jnp
cs
cltd
icebp
pusha
fistpll
pop
jno
in
pusha
std
mov
fsubrl
popf
rorb
pusha
lea
icebp
test
push
xor
call
pop
sub
std
jmp
call
pusha
add
jle
sar
jbe
cmpsl
decl
or
aam
dec
add
xchg
mov
jb
jae
and
js
inc
xchg
mov
adc
incb
mov
pusha
out
cmp
mov
push
ficomps
jo
pop
incb
add
loope
xor
pusha
in
test
add
and
insb
lea
inc
mov
loope,pt
pop
lcall
pop
movsb
mov
pusha
sarb
inc
movsl
out
cs
pop
ss
add
int
incl
fsubs
cmp
inc
pusha
and
div
mov
cmp
add
sub
lcall
subl
dec
adc
adc
dec
pop
sbb
adc
call
jg
jo
mov
test
add
jb
insb
out
cltd
pusha
push
cmp
sub
fwait
jecxz
sub
mov
outsb
popa
loop
test
mov
mov
in
mov
test
pusha
xchg
push
dec
std
stc
mov
inc
pusha
jle
popa
sti
test
mov
dec
out
ret
daa
cmp
iret
inc
cld
popf
loop
jns
shlb
sub
mov
adc
dec
ret
jl
sbb
inc
mov
xchg
inc
out
pop
cmc
mov
dec
cmp
repz
jl
sti
cli
fnsave
bound
lods
pusha
fsubrp
push
fimull
popa
rolb
xchg
xor
jb
mov
jb
out
iret
repnz
pop
loope
out
inc
jl
insl
rolb
jecxz
jbe
jmp
js
fmuls
loope
pusha
fisttps
scas
int
mov
sub
pusha
mov
dec
imul
int
sbb
xor
rorb
jmp
and
insb
pop
aas
arpl
mov
addl
inc
cmp
jl
out
adc
rol
ljmp
popf
popa
mov
push
cmp
inc
pusha
jmp
cmp
and
xorl
pop
call
xchg
sub
pusha
and
scas
lods
fstpt
push
pusha
cli
sahf
or
inc
shlb
mov
adc
mov
pusha
jo
and
outsl
push
leave
gs
adc
nop
data16
adc
fdivl
dec
fisubl
addr16
jae
out
inc
mov
inc
loop
pusha
jle
adc
int
mov
loopne
and
out
cwtl
mov
pop
push
adc
fiaddl
ss
cmpsl
movsl
lds
mov
aam
dec
iret
adc
pop
sub
fwait
scas
mov
jl
ja
adc
add
pusha
adc
or
pop
pusha
int3
and
fnsave
mov
cmp
and
xchg
push
sub
mov
xor
out
inc
int3
xor
sub
sub
pop
sub
xchg
loope
sbb
pusha
cwtl
ja
inc
sahf
das
push
sub
xorb
sbb
dec
jb
pusha
fwait
push
mov
aas
dec
cmp
jmp
cmpsl
pop
add
sbb
cmpl
repnz
fadd
cmpsl
push
dec
mov
xor
dec
out
stc
lret
jmp
scas
push
push
mov
imul
mov
lret
mov
or
dec
pusha
dec
inc
sbb
mov
icebp
xchg
pusha
in
mov
and
xor
mov
sub
mov
xor
xor
jg
inc
dec
adc
popa
push
xchg
fistpl
mov
jle
lcall
mov
dec
stos
ret
xchg
inc
adc
fidivs
xor
ret
xchg
pusha
sbb
pop
adc
push
pusha
mov
icebp
mov
adc
mov
rcr
xor
add
pop
ret
lods
mov
pusha
int
mov
lods
and
jle
pop
mov
add
ljmp
pusha
insl
jmp
pop
dec
stos
or
mov
jg
insb
insb
sahf
ficomps
scas
cmp
outsb
lock
ret
xchg
cld
xor
subb
and
mov
inc
jp
arpl
outsl
cmpsb
inc
dec
or
mov
dec
mov
mov
sahf
fs
add
ret
mov
fwait
imul
aam
jp
cmpsl
outsl
das
mov
out
sbb
xchg
or
mov
mov
fs
hlt
nop
mov
push
xchg
xchg
push
or
inc
or
js
add
stc
inc
lcall
cltd
inc
fwait
dec
push
sahf
push
das
js
or
int3
xchg
loop
sub
push
xor
and
shlb
je
sti
lret
ficompl
add
je
lods
ret
xchg
adc
dec
adc
in
pop
sbb
xor
adc
xchg
scas
popa
adc
out
pop
add
out
das
mov
lea
add
hlt
xchg
sbbb
popf
inc
xchg
cmp
mov
push
fisubs
popf
scas
rorl
aaa
mov
jle
mov
sub
adc
or
jmp
jl
data16
pop
push
mov
arpl
push
shll
inc
add
mov
je
aad
cld
xlat
pop
popf
pop
adc
lods
jp
mov
pop
inc
fisttpll
xchg
pop
testb
dec
outsb
sbb
mov
mov
and
popa
or
shll
and
jb
cmp
mov
push
jne
lock
inc
push
data16
add
and
xchg
arpl
aas
sub
int
jne
jecxz
dec
pop
xor
lods
adc
xor
pop
inc
rcrl
jnp
inc
dec
repnz
pushf
xchg
mov
insl
push
fmul
dec
mov
fadds
js
push
jmp
mov
push
stc
or
dec
sub
dec
lcall
in
pusha
jge
inc
cmp
pop
mov
ss
icebp
les
mov
sub
lcall
insb
shl
cmpsb
cmpsl
and
push
dec
js
insl
inc
ret
movsb
lods
dec
sub
xchg
sbb
notb
inc
and
pusha
jle
xor
pusha
in
mov
push
fwait
insb
xchg
xor
pusha
jns
repnz
sub
inc
setnp
lods
test
mov
cmp
sub
daa
andb
data16
xchg
xchg
sbb
adc
add
pusha
pop
ret
and
xchg
aaa
adc
cmp
jb
and
fidivrl
mov
mov
pusha
pop
inc
ss
mov
shlb
xchg
or
mov
mov
mov
cmpsb
jg
fnsetpm(287
pusha
cmp
inc
std
orb
jmp
mov
pop
cmp
in
jl
pop
loop
mov
shll
inc
xlat
dec
subb
arpl
lcall
sbb
fimuls
lods
addr16
sbb
mov
dec
in
pop
into
inc
getsec
lods
insb
pusha
cmp
loopne
pusha
jo
stos
repnz
in
pop
jmp
clc
xchg
icebp
addl
or
cltd
lea
push
mov
jo
stos
sbb
shlb
into
push
cmp
add
popf
jnp
push
insb
mov
mov
mov
mov
insb
mov
cld
push
pop
inc
ret
sbb
movsb
pusha
in
pop
sub
pop
and
outsb
add
dec
and
arpl
ret
mov
pusha
push
jmp
mov
stos
push
je
sub
pusha
ja
pushl
je
mov
mov
pusha
pop
xchg
and
add
push
xor
pop
push
pusha
push
jae
jmp
sti
out
scas
sub
adc
aas
loop
pop
int
pop
mov
icebp
pop
pusha
gs
add
jl
lock
add
adc
ds
outsb
daa
push
mov
bound
cmpsb
and
push
pusha
mov
inc
jae
pusha
or
in
loopne
mov
cwtl
repnz
or
pop
inc
mov
dec
fadds
fucom
dec
xchg
scas
aas
pusha
lods
add
mov
mov
leave
fnsave
push
clc
cmp
sub
test
testl
lcall
lods
sbbl
cld
scas
mov
cmovne
and
jl
jmp
pop
out
sub
pusha
mov
movsb
sub
jl
or
jle
outsl
fbld
push
adc
jmp
addb
pusha
enter
pop
sahf
pop
inc
pusha
xor
mov
mov
test
enter
xchg
pushf
loop
hlt
pusha
xor
std
outsl
sti
pusha
xlat
push
mov
cs
test
aad
out
shll
add
add
pusha
hlt
xchg
aam
fstpt
push
inc
add
inc
imul
jo
das
fmuls
inc
pusha
rcrl
inc
mov
mov
inc
arpl
popa
inc
or
mov
nop
arpl
fldl
ret
mov
hlt
add
jl
test
fistps
and
jb
arpl
rcrb
in
stos
pop
adc
inc
dec
int
pusha
ljmp
fisttps
pop
mov
xchg
pusha
mov
adc
adc
pusha
cmc
sub
dec
pushf
mov
pushf
je
in
fs
lahf
mov
jg
and
pusha
adc
push
call
pusha
dec
push
rcr
pop
inc
bound
push
jo
push
insb
jmp
mov
gs
pop
clc
mov
insb
xchg
mov
arpl
rol
mov
sbb
les
xchg
pop
cmp
stos
jge
fcmovne
out
adc
push
xchg
js
push
movsl
adc
or
negl
test
lods
inc
xor
jg
and
pusha
push
sbbb
add
rcll
jg
jmp
cltd
jmp
and
insb
mov
jbe
shl
mov
or
and
push
push
mov
pusha
xlat
in
sbb
xchg
pusha
pop
mov
fs
pusha
ss
in
push
ret
hlt
arpl
push
ret
por
add
xchg
in
pusha
movb
mov
pusha
push
push
adc
jbe
sbb
bound
inc
mov
lcall
and
add
imul
push
bound
push
inc
rcrb
mov
and
xchg
pusha
insl
mov
in
jmp
rorb
out
and
lods
jne
lods
dec
mov
ljmp
push
fcompl
pusha
xchg
outsl
mov
fwait
pusha
div
loope
sub
mov
sub
fidivrl
pop
outsb
adc
adc
test
mov
pusha
out
or
cmp
jne
xchg
or
jmp
sub
xchg
push
xchg
inc
pusha
add
push
push
cmp
cli
negl
das
call
xchg
xchg
movsl
pushaw
push
lea
rcll
xchg
fsubl
stos
imul
insl
mov
insb
pop
stos
jp
loope
mov
or
test
push
adc
mov
jne
jbe
sub
lock
sub
pop
jnp
arpl
jb
sbb
pop
adc
pusha
xchg
lods
fs
rcrl
cmpsl
xchg
cmpb
and
and
pushf
aaa
mov
imul
sub
inc
cmp
xchg
jnp
push
jne
jns
pusha
arpl
pop
sbb
fldenv
sbb
sar
inc
mov
pusha
in
inc
mov
les
lods
adc
je
adc
adc
arpl
fs
sbb
loopne
dec
scas
jae
jmp
pusha
jl
or
addl
mov
loope
mov
out
cmp
stos
adc
jl
jl
inc
data16
lret
cmp
lahf
add
inc
pop
in
fcmovbe
push
fdivrs
hlt
xor
adc
ret
scas
pusha
outsb
adc
cltd
jl
mov
and
fs
and
in
in
push
les
pop
sbb
adc
adc
inc
fisubs
mov
xchg
push
pusha
mov
push
sti
dec
repnz
mov
pusha
jae
pop
bound
fwait
push
test
insl
frstor
call
cld
mov
pop
arpl
jecxz
mov
push
mov
jo
lret
out
js
push
dec
loope
nop
stos
sbbb
insb
das
xlat
jp
xorl
jecxz
mov
sti
pusha
cmp
sbb
and
int3
xchg
stc
mov
pusha
adcb
daa
mov
in
jl
inc
sbbl
pusha
cmpsl
mov
dec
shlb
sub
jecxz
loopne
lds
cmpsl
aaa
jl
es
xchg
jecxz
pop
cwtl
mov
ds
and
mov
incl
icebp
push
addr16
hlt
push
mov
int3
dec
out
mov
out
mov
loopne
push
stos
in
pusha
add
add
leave
out
xchg
push
popa
movsl
inc
cli
das
int
push
sbbb
and
in
aas
pop
cwtl
lahf
or
dec
xchg
mov
ja
shrl
mov
sub
insb
xchg
pusha
dec
cli
pop
sbb
sbb
dec
add
mov
addl
add
pusha
clc
or
addr16
outsb
push
repz
out
pop
pusha
arpl
jg
stc
push
push
pusha
mov
sub
push
clc
icebp
mov
popa
adc
inc
stos
inc
jmp
cmpl
lret
push
mov
jle
test
cmp
leave
cmpsl
mov
xor
loope
fs
lds
aad
mov
mov
andl
fwait
push
out
call
je
orb
adc
push
sbb
mov
stos
leave
xlat
adc
pusha
push
xchg
cli
jmp
scas
jb
cs
lcall
add
out
xor
movsb
fadd
push
pusha
push
push
and
and
add
xchg
add
fbstp
xor
xchg
xchg
pop
pop
sbb
sub
es
mov
cmp
fs
sti
andb
xor
pop
shlb
ret
sub
or
add
pop
push
jae
pushf
popa
mov
insl
xor
pusha
inc
lods
add
inc
pusha
sbb
or
inc
in
pusha
fstpt
js
sbb
arpl
mov
pusha
cmp
icebp
aaa
adc
adc
sub
bound
adc
lea
cmp
pusha
or
add
scas
jbe
adc
fwait
add
or
inc
aam
jg
pop
jno
adc
cld
mov
sub
mov
pop
test
arpl
jae
shll
or
xorb
int3
adcl
inc
push
pushf
mov
inc
out
mov
sub
lea
insb
and
and
js
jl
xchg
mov
int3
mov
and
xchg
adc
int
inc
sbb
sbb
loopne
dec
jnp
mov
inc
sbb
or
ljmp
inc
dec
pop
rclb
adc
dec
dec
lret
movsb
xchg
inc
mov
pop
arpl
ret
loopne
fwait
popf
lahf
add
repz
inc
mov
lret
push
fisttpll
repz
pusha
in
dec
lcall
jle
mov
cmp
and
insb
or
movswl
pop
mov
push
test
pusha
stos
in
hlt
negb
fs
adc
clc
pusha
mov
mov
xor
mov
daa
ja
mov
shl
loope
es
pusha
jg
and
icebp
pusha
cmp
jp
inc
ret
sub
add
pusha
aad
andb
lret
insl
lahf
stos
pop
fmuls
out
fisubl
xor
jp
rol
dec
dec
sub
fisubl
sub
dec
adc
cmp
mov
sahf
setl
in
data16
jb
mov
add
jns
imul
push
mov
xorl
inc
pusha
or
dec
repz
mov
xor
pusha
pop
xchg
popf
dec
cld
jb
and
jmp
call
sbb
popa
pop
fsubl
loop
outsl
out
bound
cmpsb
jg
repz
and
mov
or
adc
jae
lods
push
imul
out
jne
pusha
sub
in
pop
lods
cmp
adc
test
xor
and
decb
loopne
shlb
jg
jl
and
adc
test
mulb
mov
repz
mov
mov
push
scas
das
pusha
out
out
fwait
pop
filds
mulb
int
xlat
rdmsr
push
inc
insb
adc
scas
shlb
jnp
mov
lret
outsl
push
das
mov
loop
cmp
xor
outsb
dec
std
pop
push
enter
xchg
mov
loopne
cmpsl
mov
nop
push
and
add
stos
pusha
addr16
adc
lret
mov
pop
mov
fnsave
sbbb
cmp
ret
loopne
pusha
aas
scas
daa
sub
pusha
dec
sub
sbb
shlb
and
mov
xchg
push
mov
loope
test
cmp
mov
push
adc
mov
dec
inc
add
rorb
iret
mov
out
aas
sub
popa
dec
gs
xchg
and
mov
loop
ds
loop
and
rorl
dec
lret
xor
sti
fidivs
fistps
xchg
pusha
add
xor
mov
xchg
addr16
or
int3
pusha
daa
popa
mov
movsb
pusha
jbe
xchg
inc
dec
xor
adc
shrb
jecxz
or
sbb
adc
pop
pusha
les
cmpsb
dec
cmp
lds
mov
dec
leave
sub
movsb
insl
nop
outsl
adc
adc
and
jns
or
xchg
pop
mov
push
pushf
jbe
and
pusha
ret
sub
cmp
mov
adc
stos
dec
mov
fdivrs
push
push
sub
xor
ret
insl
lods
lret
jns
outsb
dec
or
adc
call
push
or
push
jno
adc
lea
cli
xor
and
jo
js
jb
arpl
fcomps
nop
push
fwait
adc
dec
add
cltd
mov
sub
mov
push
sbb
popa
flds
xchg
or
pop
sub
jp
sub
aam
les
or
cmp
cwtl
cld
xchg
pusha
scas
inc
movsb
push
push
mov
enter
notb
and
adc
imull
inc
subb
jb
cwtl
mov
adc
pushf
pusha
aaa
repnz
scas
int3
ret
pop
je
in
addl
shll
mov
lahf
add
leave
push
push
hlt
cmp
rcl
loope
pop
cmc
inc
in
and
cmp
sub
mov
scas
shrl
ljmp
pusha
mov
movsb
test
mov
adcl
jle
sbb
pusha
cltd
add
jp
sar
xor
mov
or
nop
sahf
pop
fwait
xchg
add
mov
ds
movb
jp
adc
push
mov
inc
fstl
mov
out
repz
pop
pushf
cmp
bound
in
xor
scas
pusha
movsb
push
jae
shll
sbb
mov
cwtl
sub
cmp
mov
cmp
sbb
test
push
pop
popf
pop
pusha
outsb
rclb
sub
out
mov
andl
mov
rclb
shll
dec
in
pop
movsl
popf
mov
jecxz
in
jl
jmp
adc
mov
adc
repnz
mov
rorb
pusha
adc
fwait
cmp
mov
fdivs
mov
xor
sbb
xchg
push
jp
pusha
xchg
movsl
fcom
fs
sub
je
inc
add
notb
outsb
imul
mov
xlat
pusha
mov
inc
sub
outsl
sarb
pushf
enter
sub
inc
pop
xchg
adc
je
jmp
std
shll
pop
mov
fdivl
ss
out
pusha
bound
lret
lods
popa
pusha
push
in
stos
dec
adc
outsl
fwait
pusha
andb
incb
ficoml
bound
pusha
popf
fcompl
cmp
adc
aaa
jo
pusha
data16
adc
pusha
sub
cmp
pusha
inc
fwait
push
or
insb
inc
pop
mov
jae
loope
adc
test
mov
push
scas
je
pusha
in
sub
mov
cltd
fdivs
outsl
ror
xor
dec
lea
mov
mov
pop
hlt
insl
ds
es
arpl
shrb
mov
scas
es
mov
cmp
pop
mov
xchg
dec
aam
addr16
arpl
mov
pop
je
lods
jbe
or
cmp
shlb
cwtl
sub
clc
pusha
sbb
mov
stc
pop
jge
movsl
testl
rcrb
jge
pusha
xor
dec
inc
fistpl
pusha
js
test
repnz
fcompl
push
das
out
adc
inc
xlat
lret
inc
adc
pop
fwait
push
push
inc
pusha
sub
ja
fs
call
jne
mov
mov
inc
popa
jl
aam
mov
pop
pop
sti
leave
pusha
dec
loop
mov
pusha
jge
loope
jns
cmp
div
fwait
rorb
mov
cli
stos
outsl
jl
cmp
loopne
rolb
push
jle
pusha
add
repnz
fs
push
add
lods
fcomps
xchg
loop
mov
sub
xchg
and
popf
add
ret
test
cmp
jae
pop
add
sbb
in
in
inc
pusha
xor
je
movsl
xlat
inc
sub
push
pop
mov
bound
in
pushf
inc
rorl
rep
nop
stc
mov
je
jle
mov
fldz
loope
xor
int3
fsubl
das
push
out
shlb
mov
pusha
cmpsb
inc
push
jno
mov
sub
outsb
lock
adc
xchg
outsl
add
mov
inc
lret
inc
push
int
popa
jl
pop
xor
pop
sbb
cmp
pusha
in
inc
cmpsl
mov
jo
mov
es
das
iret
fucomip
cmp
lcall
jo
fs
and
xor
pop
fisubrs
xchg
xchg
sbb
xchg
ror
or
pushf
push
cmp
mov
pusha
and
dec
pop
mov
pusha
and
repnz
dec
je
sbb
sub
addr16
fstpt
jns
xchg
loop
rcll
pop
or
cmpsb
cld
xchg
pop
aam
lcall
pop
fs
sbbl
movsb
icebp
push
and
dec
mov
ljmp
pop
and
int3
cmc
cmp
mov
sahf
and
roll
push
leave
scas
nop
xchg
jp
orl
sbb
insl
mov
cmpsb
add
shll
orl
adc
sbbb
fs
mov
push
cmpsl
mov
mov
ret
pushf
add
lret
sub
pop
in
rorb
push
jl
call
sub
pop
clc
mov
jecxz
xor
pushf
jmp
nop
inc
xor
sub
mov
popf
movb
inc
mov
cwtl
js
hlt
lods
jno
ds
xchg
test
adc
outsb
and
lahf
call
dec
inc
jae
add
cld
dec
xchg
icebp
pop
cltd
shlb
mov
adc
and
adc
pusha
or
scas
sahf
mov
jno
aaa
add
sbb
jne
add
fwait
jno
mov
lret
cmpsb
xlat
cwtl
jne
outsb
jae
js
shll
stos
fs
adc
jnp
sub
dec
push
jecxz
mov
lods
mov
jno
xor
inc
adc
add
cmpl
sbb
sbb
adc
dec
out
sub
scas
or
addr16
ja
nop
xor
sbb
aas
clc
fwait
xor
xchg
push
ja
loopne
ret
or
loop
shll
ss
dec
test
mov
shll
int3
xchg
imul
fildl
lahf
test
add
sahf
pop
scas
cmc
data16
and
es
andb
inc
fnstsw
iret
leave
pusha
pop
pop
xorl
mov
mov
addr16
sub
test
pop
mov
inc
clc
outsb
shll
ss
in
and
or
inc
fsubrl
ret
and
xor
fisubl
sub
dec
and
fists
add
jecxz
icebp
jl
mov
stos
mov
mov
xor
shlb
clc
and
pop
jecxz
xchg
pop
or
lret
rcrl
pop
add
das
cltd
out
cs
orl
lahf
push
adc
out
xchg
pusha
inc
roll
or
inc
lret
pop
insl
ja
push
mov
sub
inc
jo
cli
lds
ret
push
inc
inc
sub
xor
popa
insb
jmp
jmp
fs
shrl
sbb
jmp
ret
xlat
push
sahf
test
jbe
pop
xor
imul
addr16
loope
cltd
push
in
in
loop
movsl
push
adc
and
out
lods
in
or
fisttpll
sbb
push
repnz
mov
rorl
push
jnp
xor
movsl
mov
xor
mov
inc
mov
inc
outsl
mov
sub
mov
mov
sub
add
mov
popa
ds
add
outsb
fadds
jp
sbb
xor
mov
dec
cmp
lods
insl
jae
inc
push
push
mov
push
sbb
mov
inc
inc
outsl
mov
sbb
fidivrs
mov
mov
imul
scas
jbe
mov
gs
jle
xchg
icebp
push
add
sub
jbe
fs
mov
lret
dec
push
inc
hlt
cmp
push
and
scas
rorb
lock
clc
popa
jo
push
pop
mov
lods
xchg
test
xor
xchg
xor
xchg
push
push
popa
test
scas
pop
mov
pop
adc
and
and
loope
mov
orl
add
rcrb
sahf
insb
mov
call
xor
cmp
loopne
push
mov
and
adc
sub
add
shll
cld
leave
out
out
popf
and
and
mov
xor
ret
mov
mov
push
and
ss
lds
imul
aas
mov
mov
cwtl
pop
fldenv
aaa
xchg
cmpb
loop
std
cwtl
adc
xchg
inc
jnp
ljmp
jmp
popl
loopne
and
mov
shll
lcall
ficompl
push
call
lahf
int3
iret
movsl
mov
aad
mov
xchg
data16
pusha
add
pusha
cli
iret
jb
xchg
pop
dec
pusha
notb
and
pusha
aam
add
icebp
or
inc
bound
lods
cmp
outsb
dec
push
xchg
out
fisttps
in
inc
and
pop
xchg
test
mov
stos
insb
popf
fcom
outsb
pop
test
xor
lcall
mov
pop
xchg
push
sub
mov
mov
adc
fwait
xor
or
cltd
dec
push
cmpb
lcall
test
mov
and
ret
xlat
test
mov
insb
pusha
lods
lcall
icebp
pusha
scas
jbe
inc
ret
mov
loope
inc
push
std
cmpsl
rcll
insl
sub
sbb
xchg
adc
cmp
push
andb
lret
add
push
insb
sbb
mov
push
mov
pop
into
pop
pop
dec
cmp
push
shll
xchg
xor
mov
and
ss
add
jecxz
insb
inc
lret
pop
push
mov
lcall
push
and
inc
shlb
push
dec
sahf
arpl
ljmp
leave
sub
pop
dec
aam
mov
dec
movsb
enter
and
or
addl
out
inc
and
or
adc
add
test
fs
dec
dec
jnp
xchg
adc
or
call
xchg
int3
inc
xlat
cld
dec
mov
mov
ret
jecxz
pusha
sub
xchg
pop
mov
call
mov
test
sbb
mov
mov
in
out
dec
add
nop
adcl
inc
and
lret
jnp
gs
xchg
pusha
sub
pusha
mov
fucomp
inc
popf
pushf
pusha
jl
in
scas
sahf
mov
cmp
inc
bound
mov
sub
data16
pop
pop
mov
dec
pop
loop
cli
pusha
stc
mov
dec
mov
add
arpl
std
mov
push
ret
mov
add
enter
jge
mov
push
insb
out
pop
push
pop
fimull
pusha
test
addl
sub
lods
nop
xlat
push
pop
not
test
notb
arpl
cld
add
push
scas
pop
jnp
sbb
loope
or
shlb
insl
les
sbb
addb
pusha
out
loope
sti
push
rorl
lahf
loop
xchg
lea
hlt
sbb
loopne
ds
jns
cmpsb
in
mov
nop
pusha
sbb
ja
jmp
lret
mov
popa
adc
pusha
xor
ret
push
push
pushf
pusha
addr16
mov
pop
jl
mov
mov
aad
pop
xchg
cld
pusha
add
and
xchg
ds
mov
dec
mov
push
pusha
int3
out
xchg
insl
repz
inc
rclb
dec
jmp
pop
repnz
js
jge
pop
pop
push
pusha
sbb
and
cmc
lahf
xchg
mov
jg
mov
push
inc
cwtl
pusha
fsub
xchg
loope
inc
dec
pusha
ss
xor
adc
in
pop
les
lods
sbb
ret
insl
out
xchg
jg
dec
pusha
lret
sub
mov
les
stos
and
push
das
lahf
xor
or
xchg
sub
add
shl
sub
sbb
out
popa
push
cmpsl
insl
push
iret
pusha
je
xor
ljmp
popa
repnz
out
shrl
pusha
idiv
xor
pop
pusha
cmp
sti
sbb
inc
es
int3
cld
outsb
push
hlt
daa
insb
sbb
fwait
inc
mov
add
pop
repz
scas
pushf
loopne
push
add
pop
xor
sbb
jb
jl
scas
hlt
and
xorl
mov
lret
add
aam
xor
std
xor
mov
xchg
sbb
leave
xlat
adc
mov
ret
cli
pusha
jb
pop
int
mov
jl
pop
mov
loopne
pusha
lds
jg
pusha
sbb
call
xchg
aam
push
orl
pop
pusha
add
rorl
stos
jns
sub
out
jecxz
pusha
push
call
sbb
lods
xor
sbb
lret
or
mov
loope
jecxz
xlat
pusha
inc
mov
or
cmp
adc
lods
lds
sub
pusha
fcoms
jmp
leave
jae
andb
addr16
mov
push
into
dec
pop
test
or
adc
xor
xchg
sub
loop
cmp
inc
xor
imul
pop
fs
adc
mov
sbb
xchg
inc
shll
mov
pusha
test
test
shlb
push
mov
call
xchg
mov
pop
je
xor
dec
hlt
fs
dec
jo
loop
inc
clc
jle
lock
sub
pop
pusha
dec
jns
fisubl
push
les
test
dec
into
sbb
sbb
pop
cmp
mov
or
push
mov
shlb
negl
pop
jg
xchg
inc
and
fstpt
cmp
cwtl
push
mov
mov
adcb
adc
fisubrs
xor
add
outsl
xor
adc
sub
pusha
icebp
movsb
mov
and
cld
adcl
push
ljmp
testb
add
pop
sbb
pusha
cmp
sub
pusha
and
push
popf
mov
or
clc
jmp
mov
pusha
lret
sti
movsb
out
shl
pusha
xchg
mov
pusha
adc
bound
ret
mov
adc
je
and
imulb
mov
jae
repnz
mov
fs
clc
mov
mov
mov
dec
inc
hlt
jnp
xor
js
push
jl
cmpl
dec
pusha
loope
je
outsl
out
mov
inc
lea
mov
cld
movsb
repnz
fldenv
fwait
or
jp
in
jbe
mov
xchg
nop
pusha
enter
movsb
push
add
punpcklbw
cwtl
cli
lods
pusha
outsb
lcall
xor
lock
fidivl
out
pusha
jl
pop
jecxz
loop
sub
fs
scas
push
enter
jecxz
aad
leave
jmp
in
iret
loope
test
jl
fcomi
daa
cmp
lret
and
xor
cmp
fimuls
outsl
loop
ret
mov
push
out
jmp
stos
dec
in
cmp
inc
enter
add
jle
push
sbb
iret
sahf
rorl
pusha
mov
stos
test
pusha
ret
and
mov
ja
push
sub
ja
pop
jl
xor
mov
mov
push
sahf
inc
mov
mov
dec
and
inc
ss
movsl
ja
mov
imul
loopne
ja
xor
cmpsb
test
fwait
and
pusha
xchg
loopne
icebp
inc
out
leave
fildl
cwtl
xor
pusha
repnz
fildll
and
cmp
std
pop
negl
push
les
bound
dec
andl
push
fs
cmp
xor
pusha
push
pop
dec
paddb
push
lea
outsl
test
bound
icebp
clc
cmp
push
shl
adc
pop
ret
and
outsb
jl
lret
fadds
and
shl
inc
or
dec
and
cmpsb
cmp
rorb
rcl
test
mov
cmp
push
cmpb
xchg
dec
repz
addl
fstl
adcl
jno
insb
dec
sbb
outsl
hlt
and
cs
fmulp
xchg
arpl
pop
mov
out
pop
mov
ss
pop
xchg
in
adc
mov
or
insb
mov
jno
adcb
scas
stos
mov
fstpl
mov
sahf
add
out
addl
adcl
mov
cmp
mov
pop
or
mov
repnz
jmp
cwtl
dec
or
out
fistl
mov
or
movl
ret
jno
mov
xchg
sbb
scas
pop
rol
std
sub
and
jno
jl
ret
pop
xchg
xchg
iret
popf
or
pop
outsb
fisubl
lret
outsb
in
cltd
add
dec
and
fstp
mov
loope
push
push
jno
sti
cmpb
lret
imul
dec
rorb
xchg
fwait
dec
test
ret
out
imul
aaa
pusha
clc
ret
sbb
or
pusha
xor
mov
pusha
cmp
or
mov
mov
cmpl
xchg
push
xor
push
inc
pop
sub
jmp
cmp
pusha
rorl
sub
es
and
sbb
shlb
or
ja
sbb
dec
shlb
mov
leave
gs
inc
xchg
loope
xor
pop
mov
cmp
jmp
mov
pusha
inc
shll
call
cmc
adc
sbb
mov
pusha
fldt
push
stc
das
lea
je
fdiv
jle
popa
or
xchg
pop
push
add
cmp
jecxz
inc
or
pusha
mov
lods
repnz
imulb
fs
seto
cmp
adc
cmpsb
pop
frstor
jmp
bound
cwtl
cmp
pusha
mov
aad
lcall
inc
push
cld
add
cmp
pusha
orl
jle
in
pusha
das
pop
jp
mov
or
inc
inc
rcll
shlb
push
cwtl
cmp
pusha
insb
push
daa
ds
pusha
mull
jb
setg
out
out
pop
fwait
pop
mov
and
sub
insb
clc
stc
cmp
mov
or
push
mov
push
adc
in
jp
xor
cmpl
incb
ds
fisttpl
repz
test
hlt
mov
cmp
cmp
sbb
jle
mov
gs
cmc
fs
xchg
js
xchg
inc
cmc
push
adc
dec
aaa
sbbl
cld
push
add
pop
pushf
push
pop
or
add
xchg
cld
test
outsb
cmpsb
nop
rorl
xchg
ds
in
ja
jmp
pop
inc
aad
dec
lods
and
arpl
loop
lret
aas
jbe,pn
add
shrb
loop
jp
jae
sub
ret
jl
pop
jl
dec
inc
dec
and
sbb
jle
popa
and
pop
xchg
repnz
xorl
shrl
xor
cmp
push
scas
mov
cmp
lea
mov
pushl
mov
jg
dec
mov
pop
xchg
sbb
sub
testb
std
dec
mov
movsl
jo
push
cmpsl
pop
out
stc
push
iret
dec
dec
push
in
jecxz
push
add
in
push
pop
imul
sub
sbb
ret
cmc
inc
es
movsb
mov
push
inc
mov
inc
or
fdivl
xor
push
xchg
mov
sub
aas
inc
jl
push
js
std
ja
cltd
pushf
inc
inc
ret
sub
incb
mov
popa
sahf
stos
pop
or
jecxz
or
xchg
jmp
xor
mov
in
cld
aas
pop
jne
shll
add
mov
jecxz
hlt
jo
mov
push
adc
test
fwait
adc
mov
push
mov
xchg
lcall
stos
outsl
pop
into
mov
xor
shlb
dec
rcr
dec
mov
lcall
and
cld
sarl
adc
popf
inc
repnz
mov
stc
lock
xor
bound
cmp
cmp
ds
out
mov
xchg
cmc
iret
frstor
sbb
stos
jle
jecxz
mov
cld
nop
inc
sbb
jmp
imul
scas
pop
cs
push
clc
hlt
xlat
cmp
lret
pop
out
and
or
loope
imul
and
ret
sbb
bound
add
xchg
stc
dec
mov
enter
cld
dec
repnz
push
push
inc
mov
subb
add
push
imul
outsb
clc
ret
loope
or
and
or
popa
cltd
shll
lea
cmp
cs
insl
bound
js,pt
loope
adc
stos
push
pop
in
push
inc
jo
hlt
dec
and
push
adcb
inc
lods
ret
add
in
fiadds
mov
notl
aam
enter
mov
push
add
gs
jb
adcb
mov
scas
dec
imul
push
sbb
mov
xor
aas
mov
popa
mov
mov
push
sub
push
xchg
sub
mov
pop
xchg
mov
jnp
add
lods
loopne
dec
shlb
pop
cli
mov
push
adc
in
inc
push
ret
sbb
jb
push
xchg
jb
inc
mov
adc
or
repnz
popa
xchg
mov
jo
aaa
fcomps
inc
bound
cmp
ret
aas
mov
jmp
push
fisubrs
loop
out
cwtl
mov
cs
push
arpl
and
sbb
add
test
ret
mov
jno
mov
lcall
add
mov
in
loope
je
test
outsl
shrb
int
mov
mov
je
fcmovnb
inc
sub
sub
mov
mov
icebp
outsl
into
into
arpl
leave
inc
inc
loopne
andb
mov
loopne
mov
and
pusha
mov
into
push
std
pusha
fiaddl
lea
aam
xchg
nop
stos
dec
cmp
jle
fidivrs
fisttpll
lret
sbb
add
cmpsb
pop
call
ss
std
ljmp
push
and
mov
push
fldenv
dec
sub
call
push
mov
bound
pusha
mov
movsl
aad
loope
push
xor
xor
out
sub
xchg
or
pusha
lahf
out
mov
push
insb
fsubrp
jne
dec
mov
hlt
jb
mov
pop
mov
adc
sbb
aad
les
inc
sbb
jmp
js
mov
cmp
arpl
mov
sbb
and
push
out
sub
push
into
in
cli
sub
out
rclb
bound
pusha
aam
add
sbb
pop
pusha
push
repz
mull
xor
jmp
adc
sbb
mov
test
pusha
xchg
cs
leave
mov
ret
push
nop
sub
jnp
pusha
mov
inc
loopne
pop
fwait
mov
les
push
pusha
cmpsb
fs
jo
test
adc
mov
push
in
mov
filds
mov
insb
inc
enter
or
lock
fldl2t
andb
mov
mov
pop
pop
mov
mov
xchg
popf
pusha
pop
fucomip
fidivs
rcll
mov
jne
mov
pusha
lahf
scas
dec
pop
xchg
sub
hlt
mov
mov
lret
pusha
and
mov
mov
sbb
sub
popf
movsb
pusha
decl
les
xchg
clc
xlat
sub
scas
adc
into
fistpl
sbb
or
imul
sbb
lock
mov
ds
and
pop
push
pusha
inc
les
in
mov
cwtl
sbb
aad
es
sub
or
xor
or
xchg
push
icebp
loope
pop
mov
jmp
sbb
fdivrs
inc
push
add
imul
test
push
jb
cld
das
xchg
mov
pusha
mov
xchg
cmc
or
repz
add
add
mov
dec
sahf
cmpsl
pusha
adc
ja
dec
lock
adc
push
or
addl
into
fmuls
pusha
gs
xchg
pop
inc
or
mov
gs
cmp
pusha
in
jae
xor
lods
cltd
pop
jns
and
mov
pusha
push
mov
sbb
das
aaa
fs
sbb
pusha
mov
faddp
dec
fcompl
mov
pop
nop
loopne
call
shl
aaa
sbb
pop
pusha
pushw
inc
sbb
push
mov
loopne
int3
xchg
addr16
add
pop
add
mov
adc
ror
test
pusha
shll
mov
pusha
pop
ja
mov
mov
repz
mov
inc
xchg
std
fld
ret
jl
adc
ds
mov
addr16
test
jecxz
pop
fwait
iret
add
popa
out
sbb
xchg
pusha
adc
push
jno
std
js
pop
pop
fdivp
je
lods
nop
cmp
jbe
push
movsl
xchg
int3
outsb
pusha
dec
sub
ja
lock
jl
pop
popf
test
adc
pop
push
mov
sub
xchg
inc
mov
pop
and
cmpsl
cli
pushf
adcl
lock
pop
cld
adc
mov
and
xor
insb
jge
mov
lea
test
mov
jg
outsb
push
sbb
js
add
push
pusha
in
rorb
not
mov
aaa
adc
jb
sbb
dec
cmc
lock
stc
sub
sti
loopne
push
arpl
xchg
lock
arpl
pop
or
sub
divb
add
xor
dec
pop
fstl
hlt
sbb
sub
xor
mov
mov
cmp
clc
push
add
jecxz
or
mov
sub
out
and
arpl
xchg
push
pop
add
sbb
inc
dec
aas
fstl
xlat
push
pusha
andl
mov
int3
fbld
mov
arpl
pusha
scas
pop
clc
loop
addl
xlat
pusha
inc
and
enter
cwtl
jns
mov
aam
fstpt
inc
pusha
sbb
nop
mov
std
je
pusha
cld
cmpsb
outsl
push
das
sub
mov
mov
outsb
icebp
mov
movsl
cmpsl
pop
push
inc
arpl
out
dec
xchg
filds
mov
je
outsb
lods
mov
push
sub
pusha
mov
andl
mov
iret
pushf
inc
mov
pop
std
pop
sub
jmp
inc
movsb
adc
sub
test
lret
xchg
jb
dec
movb
pop
mov
pusha
xchg
xchg
pop
out
stos
pusha
sub
int
jae
cmp
loopne
xor
es
ret
pop
and
add
testl
insl
jno
dec
out
xchg
push
pusha
mov
jbe
sti
sbb
pusha
inc
sahf
into
lea
mov
inc
xor
dec
dec
sub
adc
imul
adc
pusha
push
dec
sbb
mov
dec
push
pop
call
fsub
dec
adc
daa
fcmovu
loop
cltd
push
pusha
push
rol
fisubs
repz
js
xchg
andl
aad
out
arpl
jl
and
out
stos
jge
cmpsb
imul
out
pop
lcall
andb
jl
add
in
sbb
loop
push
out
aas
in
and
mulb
sti
pop
das
orl
inc
cmp
arpl
push
in
xor
mov
pusha
jmp
mov
push
pusha
dec
outsb
outsl
rclb
mov
and
out
xchg
cmpsl
jmp
fisubs
test
push
jno
dec
xchg
in
push
pop
mov
jbe
test
mov
jl
or
sbb
sbb
or
pusha
adc
and
add
xchg
push
and
fcoml
insb
cmp
jae
pop
andb
jne
or
mov
je
pop
out
jns
push
jl
sbb
xchg
mov
bound
scas
pusha
jge
mov
xor
int
fimull
mov
xchg
jg
jmp
add
mov
adc
sti
lahf
pusha
mov
sbb
jmp
fidivl
fdivrp
mov
pusha
push
pop
test
adc
xor
sub
pusha
push
sbb
mov
movsl
leave
mov
cld
pusha
and
xchg
fisubs
mov
mov
jge
sub
mov
sub
pusha
cld
push
ds
push
sub
popa
push
mov
and
cmp
pop
in
stc
mov
pop
mov
push
outsb
cmp
dec
jbe
mov
bound
sub
pushf
inc
jg
jo
add
or
icebp
sub
inc
fcomi
adc
loopne
jb
ds
cmp
arpl
shlb
and
pusha
xor
lahf
adc
and
add
mov
insl
xor
sub
and
or
call
mov
fsubp
repz
pusha
into
icebp
mov
flds
aad
mov
sbb
enter
popa
std
mov
pusha
stos
cli
and
aam
cmp
dec
xorb
arpl
jecxz
sbb
dec
or
and
adc
sbb
pusha
outsl
insb
out
lret
cmp
pop
sub
sahf
bound
test
push
xor
cmp
shlb
mov
maxps
jl
jb
cmp
daa
lret
aaa
pop
xchg
addr16
fbld
cmpsb
rcl
pusha
sub
adc
and
xchg
movb
js
dec
inc
sbb
dec
sub
ss
jnp
add
pop
jl
lahf
cmp
lds
out
shll
mov
ficomps
inc
rorb
cmp
js
ret
daa
add
jne
pop
inc
js
mov
outsb
sub
jbe
xor
pop
pop
cmpsb
cwtl
imul
or
sbb
hlt
pop
in
jbe
mov
jecxz
out
xlat
lahf
push
inc
fdivrs
push
jb
inc
push
or
and
mov
mov
loop
rclb
mov
js
dec
mov
mov
mov
sbb
xchg
aam
inc
add
mov
inc
xchg
adc
mov
mov
insb
sbb
orl
bound
andl
pop
jnp
pusha
dec
inc
or
jp
int
push
mov
insb
and
xchg
mov
mov
addr16
adcb
add
xchg
jl
and
int3
aaa
scas
inc
into
sbb
sub
pop
movb
add
fidivl
leave
pusha
clc
adc
in
xchg
ret
add
or
fcoml
dec
sar
push
mov
shrl
mov
daa
hlt
xchg
xchg
pusha
sub
cmpsl
mov
dec
outsl
mov
jae
or
jb
dec
loop
shrb
pusha
sub
and
outsl
dec
push
lods
imul
pop
lret
leave
sarb
cmp
popf
cmp
push
shrl
outsb
xchg
into
pusha
sub
jbe
dec
or
fabs
arpl
push
pusha
nop
jmp
hlt
mov
or
das
dec
pop
add
clc
xchg
repnz
into
hlt
pusha
flds
mov
lret
xchg
fldt
inc
jne
aaa
loop
fwait
mov
popa
push
cmp
popa
jae
mov
sbb
mov
inc
clc
addl
pusha
cmpsl
sub
nop
ret
popa
fwait
mov
jno
and
and
dec
daa
adc
push
xchg
inc
sarl
in
in
divb
ret
and
ffree
addr16
sub
mov
repz
cld
movl
inc
bound
jg
jg
xchg
mov
push
cs
pop
pop
jbe
xchg
rcr
mov
and
lods
or
dec
inc
push
mov
mov
aad
inc
pop
push
clc
jmp
sbb
bound
push
or
scas
push
and
out
jno
pop
mov
loop
sbb
rep
into
out
push
or
sti
call
and
push
movsb
popa
sti
and
sahf
and
cmc
loope
movl
xchg
push
fwait
movsl
push
inc
aam
lret
dec
cltd
push
fadd
lods
ds
imul
dec
mov
shlb
mov
rcrl
aaa
sbb
adc
pop
mov
inc
adc
je
xchg
lahf
lahf
stos
inc
jo
dec
sub
ret
and
xchg
out
push
jns
pusha
sarl
and
push
inc
add
or
jns
jge
add
out
not
push
mov
push
xchg
rcl
xchg
jo
adc
inc
addl
inc
or
mov
add
sub
xchg
out
mov
push
leave
fldt
out
or
dec
mov
xor
clc
mov
and
subb
push
repnz
cmc
mov
cmp
loop
jge
sbb
xor
bound
push
outsb
push
jl
clc
daa
in
push
shlb
pop
fimuls
arpl
pusha
push
popa
or
jno
sub
push
ja
pusha
bound
adcb
addb
lock
and
mov
mov
arpl
sti
cmp
cmp
inc
fsub
push
push
in
sbb
pop
or
in
scas
sub
xor
push
mov
push
push
aas
sub
fs
mov
push
sub
roll
push
pop
inc
out
xor
mov
bound
lods
bound
mov
ja
and
cwtl
popf
or
int3
push
pushw
mov
push
push
jbe
xor
xor
push
jle
push
jmp
loope
xchg
pop
jge
into
mov
inc
stc
push
pop
loop
scas
testl
imul
mov
xchg
invd
popa
rep
aaa
loope
fdivl
cs
inc
jbe
and
sub
shl
or
sbb
out
shll
inc
inc
lcall
shll
inc
cmp
pop
push
imul
sahf
out
jmp
out
jnp
popf
xor
xor
xchg
sbb
bound
inc
lahf
test
outsl
dec
lods
xchg
push
jbe
ret
cmp
push
scas
scas
xchg
das
pop
jae
imul
add
inc
xchg
orb
cmc
push
test
mov
outsl
icebp
scas
repnz
hlt
and
shrl
or
bound
rcll
loop
sub
scas
xchg
inc
and
test
mov
into
inc
std
loope
cmp
push
pop
inc
jne
in
and
inc
ret
sub
pop
hlt
fs
insb
fisttpll
sbb
sarl
outsb
and
dec
jg
loope
xor
cmp
pop
inc
cli
in
sub
movsb
and
mov
xchg
insb
dec
mov
cli
imul
movb
jb
das
fs
test
scas
mov
enter
and
xor
push
out
adc
jecxz
dec
popa
mov
stc
dec
rcrb
and
sub
in
xorl
in
and
in
hlt
lret
shlb
inc
in
sub
stc
xchg
add
xchg
xchg
dec
ret
mulb
mov
fistl
mov
and
mov
mov
add
adc
pop
mov
cmp
loope
mov
pop
fldenv
sub
xchg
mov
outsb
add
arpl
mov
jns
xor
ret
stos
out
sub
xlat
mov
pop
xorb
outsl
fisttpl
jp
aam
repz
rolb
cld
cwtl
loopne
inc
sub
inc
dec
pop
loope
cwtl
fildl
and
hlt
into
ljmp
sahf
xor
ficoml
jnp
sub
and
lds
jae
dec
adc
movsb
push
and
push
cmpsb
adc
sub
push
xchg
icebp
dec
lret
and
and
dec
push
outsl
pusha
sbb
lret
or
lahf
mov
or
insb
push
sbb
lahf
add
xchg
xlat
pusha
pop
stc
lcall
lcall
push
scas
vcmppd
movl
je
and
mov
xor
jne
in
icebp
insb
xchg
mov
or
inc
mov
xor
inc
cwtl
or
fucomp
cmp
lds
push
data16
cltd
loope
in
xchg
add
pusha
ss
inc
add
pusha
mov
xor
dec
aaa
pcmpeqb
lret
xchg
pop
inc
add
loope
repnz
jle
pusha
outsb
dec
push
adc
pusha
mull
jne
insl
faddl
stos
fidivl
push
movsl
shll
inc
movsl
addr16
cld
xchg
add
dec
pop
jnp
sahf
stos
mov
sbbb
sub
bound
mov
rclb
out
jmp
outsb
les
mov
jmp
and
jl
movsl
add
ss
adc
and
push
and
jle
fucom
js
dec
aam
notb
hlt
pusha
cmp
dec
loopne
mov
pusha
stos
dec
lret
sbb
pusha
push
test
sub
and
cld
xor
sub
sbb
jp
mov
ja
pusha
ss
mov
add
pop
add
arpl
xchg
iret
jl
mov
or
xor
sti
jmp
cmc
int
push
or
std
push
lcall
mov
stc
jbe
es
mov
xchg
sti
cltd
pop
xor
xchg
xor
add
mov
cmpsb
adc
lret
sub
in
out
sub
stos
sub
mov
push
xorl
out
enter
push
pop
pusha
in
aad
dec
pop
in
cltd
sub
rol
jecxz
out
jmp
pusha
jnp
jne
xchg
pushf
push
inc
fs
movsl
jns
lcall
pusha
gs
cmc
xor
xchg
push
pusha
inc
pop
incl
fisubrs
xchg
cmp
push
xchg
inc
cmp
jo
push
push
cmpsl
sub
bound
or
fstpt
mov
popa
lret
pop
add
int3
pusha
cmp
cld
adc
xor
inc
into
in
push
mull
scas
mulb
mov
fs
mov
lods
mov
lock
pop
fs
fwait
mov
adc
add
fs
dec
xchg
aaa
pop
fists
movsl
aam
inc
xor
jp
insb
inc
and
test
arpl
loop
fists
cwtl
xchg
bound
aas
ds
bound
pusha
xor
xor
mov
aad
shr
pusha
push
inc
dec
xchg
shlb
xchg
test
gs
lret
xorb
fdivr
popa
mov
sahf
addr16
shll
sarb
push
pusha
sub
leave
mov
cs
sbb
stc
pusha
aas
pop
addl
pusha
cmp
xor
call
ss
jl
sub
pop
sahf
leave
mov
popa
sti
inc
cmp
stos
jp
test
pusha
mov
std
inc
ret
push
pusha
es
mov
mov
push
sbb
pusha
push
add
daa
pusha
es
cmp
lods
insb
leave
lret
jne
loop
in
pusha
xor
pushl
sub
or
and
xlat
pusha
sbb
mov
movsb
pusha
loopne
xchg
cmp
test
pop
xchg
xor
push
inc
mov
push
pusha
aam
mov
out
push
arpl
ret
imul
leave
jns
je
inc
sbb
stos
lcall
lret
push
bound
jp
xor
add
pushf
inc
push
or
ret
pop
mov
pusha
xor
jmp
popf
pusha
iret
xor
xchg
dec
xchg
add
mov
rcl
push
ror
xchg
lods
insl
sbb
pusha
cs
insb
inc
xchg
push
dec
out
int3
push
cltd
inc
pusha
push
pop
jg
jmp
xchg
jns
cmp
push
in
fbstp
mov
les
kmovw
mov
call
mov
fstp
pop
mov
addr16
test
lock
inc
bound
and
fcomip
aad
inc
out
xchg
pusha
cltd
fdivr
fidivrs
sti
cmpsl
popf
pop
enter
or
jecxz
test
testl
leave
jle
pusha
push
xor
addr16
sahf
inc
andb
out
popf
sbb
dec
les
sub
push
lea
cltd
mov
bound
jo
negb
jno
push
adcl
xchg
mov
shl
cmpsl
dec
inc
mov
mov
mov
sub
jnp
pushaw
mov
je
pusha
addb
mov
pusha
inc
xchg
out
push
fs
gs
stos
cmp
pop
push
pusha
cmp
cmc
xchg
into
popf
fwait
dec
fistpl
lcall
mov
xor
pusha
iret
pop
mov
test
ljmp
pusha
push
fdivr
mov
sahf
imul
jmp
adc
push
inc
pusha
adc
dec
outsb
scas
pusha
sub
pop
or
or
je
pop
lea
xchg
lods
sysenter
data16
push
pop
aaa
adc
inc
add
cwtl
cmp
ret
loope
pusha
idivb
add
jne
push
fcomip
daa
mov
xchg
inc
fcomps
stos
mov
xlat
pusha
mov
cmp
jae
sbb
fsubl
pusha
mov
and
orb
test
cmp
fwait
jecxz
in
sub
lds
jmp
mov
pusha
bound
outsb
aas
jge
jnp
jecxz
loop
insb
fsubl
ss
mov
pusha
push
dec
in
popa
mov
stos
mov
test
pusha
test
dec
push
pusha
cmp
xchg
sub
sbb
in
mov
lods
push
pop
pop
dec
adc
jmp
iret
loopne
dec
js
shl
shl
fisubrl
in
push
sub
scas
inc
add
xor
jl
addr16
mov
jecxz
test
and
lret
stos
es
pop
bound
xchg
arpl
jl
popl
mov
mov
shrb
xor
sbbb
stos
imul
sub
xchg
sub
outsl
lock
push
pop
pusha
sbb
out
mov
sarl
vxorpd
lods
int3
dec
fs
mov
add
enter
or
dec
xor
mov
mov
sub
mov
push
xor
xchg
in
bound
ret
or
pusha
leave
cmp
xchg
insb
pop
fwait
mov
cmp
int3
mov
insb
push
es
bound
bound
pop
pusha
adc
popf
push
fcmovne
shr
mov
out
andl
xchg
pusha
std
mov
in
cmp
push
cltd
ret
inc
insb
xchg
dec
scas
out
stos
inc
jns
add
fmuls
pop
adc
andl
push
popf
arpl
cmp
mov
add
dec
push
decl
rorb
adc
out
cwtl
cltd
lret
fcmovb
cmc
daa
in
pop
sub
push
addr16
adc
mov
sbbb
add
add
mov
mov
or
enter
test
fs
adc
fnstsw
loopne
lds
adc
in
pusha
cli
sub
sub
dec
pusha
ss
pop
in
xchg
and
test
mov
or
sub
xor
mov
test
outsl
mov
jmp
iret
mov
mov
and
mov
in
lods
aaa
pop
pusha
jnp
jo
dec
xor
pusha
mov
xchg
add
pop
jnp
clc
pop
ret
adc
stos
mov
add
push
xchg
loop
xchg
pop
pusha
adc
mov
sarb
and
shll
adc
out
in
push
push
mov
cmpl
mov
pusha
leave
xor
or
dec
mov
sbb
test
ja
shrl
cmpsl
jbe
sti
scas
pusha
push
and
out
enter
mull
stos
push
or
int
bound
arpl
pusha
and
nop
jmp
dec
out
add
clc
pop
jnp
and
pop
inc
popf
jl
bound
or
pop
int3
iret
pusha
dec
push
cmpsb
add
xchg
pusha
pop
mov
in
in
sbb
pusha
adc
inc
aas
addr16
and
pusha
outsl
lea
push
pop
xchg
aaa
pop
movsb
xchg
out
arpl
and
shlb
f2xm1
jo
fistl
jl
jne
inc
cmp
sahf
sub
cmp
push
shlb
cs
enter
push
cltd
sub
loopne
fs
adc
push
mov
out
test
mov
cli
data16
and
xchg
xchg
jbe
arpl
pusha
or
divl
dec
je
insb
jl
mov
loope
pop
or
aam
lods
inc
push
and
dec
lret
repnz
or
push
loope
je
adc
or
test
iret
lret
sub
pop
cmp
or
pusha
test
sbb
mov
outsl
lcall
push
xlat
cld
pop
and
cli
xchg
lds
lock
jb
pusha
mulb
push
inc
je
sbb
pop
andl
add
inc
in
mov
jl
lods
daa
cmc
push
or
pusha
decl
leave
or
dec
loope
pop
mov
lahf
add
adc
adc
and
xor
loopne
inc
rcrb
mov
mov
jb
insb
sti
lret
pusha
pushf
add
dec
lahf
int3
andb
dec
pop
int
test
in
popa
inc
out
push
dec
jl
mov
rolb
inc
xor
xchg
xor
dec
in
add
je
out
pusha
mov
add
adc
xchg
in
inc
hlt
mov
add
subb
pop
leave
add
fldt
xchg
lret
jnp
jp
hlt
lock
shlb
cmp
or
jnp
pusha
sbb
mov
test
push
shl
mov
subb
lahf
xlat
in
loopne
cmp
push
and
int
push
xor
jmp
adc
inc
dec
scas
pusha
into
mov
dec
pop
fadd
push
mov
pop
mov
bound
mov
mov
mov
push
mov
mull
add
aas
push
sbb
es
pusha
adc
jo
xchg
sub
push
pusha
nop
pop
adc
mov
push
movsb
mov
push
adc
lock
ss
and
push
mov
loope
inc
sbb
daa
adcl
mov
cmp
arpl
insl
bound
pusha
jno
shl
dec
lret
mov
lods
xor
test
sahf
imul
dec
fucom
mov
add
dec
ja
pop
int3
hlt
shlb
stc
xchg
add
push
jge
lahf
lea
ja
pusha
lods
pop
test
mov
insb
je
push
adcl
mov
int
pusha
bound
jmp
dec
outsl
xor
pusha
aad
ss
in
cmp
test
nop
jae
dec
scas
fdiv
pusha
push
xchg
js
jecxz
xchg
sbb
or
inc
pusha
cmc
enter
and
pushl
xor
add
push
pusha
imul
mov
fisttps
out
sti
fsubs
jno
frstor
mov
dec
or
sub
sbbb
adc
in
mov
pop
imul
mov
sbb
scas
popa
and
call
fsubs
jo
popa
pop
fwait
addr16
or
les
pop
cmc
pusha
dec
popf
loope
push
sub
xlat
cltd
dec
std
mov
cli
pop
add
and
aam
lcall
mov
xor
or
mov
mov
rcl
pop
xor
popf
and
mov
mov
pusha
cli
ja
adcl
pusha
dec
cmpsb
inc
push
mov
aas
pop
pusha
adc
cmp
cld
pop
insb
fwait
stos
dec
cs
ret
aad
cwtl
inc
in
pop
sti
adc
adcl
fsubs
add
push
out
pushl
pusha
add
aad
push
mov
sub
or
pop
fldt
push
pusha
fadds
mov
xor
test
aas
aam
clc
jecxz
or
sbb
fs
and
into
inc
cmp
mov
push
arpl
lea
adc
daa
push
mov
and
sbb
ret
jo
jb
mov
jbe
mov
adc
iret
adc
inc
xor
pusha
icebp
jecxz
mov
xchg
dec
insl
mov
pusha
pop
divb
mov
pop
jp
and
stc
cld
test
jle
add
enter
jmp
in
sti
pop
cli
pusha
cmp
xchg
xchg
call
imul
pusha
pop
and
mov
pmaddwd
cmp
pusha
shll
test
out
dec
fs
mov
scas
popa
test
cmp
mov
lea
fists
in
pusha
testb
frstor
and
mov
fs
jbe
adcl
mov
mov
pusha
dec
add
add
insb
bound
push
roll
cmp
jns
push
std
add
xchg
pusha
arpl
sub
mov
pop
pusha
fistps
fldpi
in
and
push
push
pusha
push
cmpsl
dec
push
in
adc
pusha
stos
mov
repnz
lock
stc
fsubs
jle
push
andl
cmc
pop
dec
jl
cli
pop
mov
jl
shlb
cmpsb
mov
jns
xchg
repz
into
pop
bound
add
insb
popf
mov
pop
inc
push
test
xchg
mov
in
dec
push
inc
mov
out
lea
xchg
repnz
sub
into
lods
orb
int
stos
sbb
adc
fidivl
aad
leave
adc
gs
insb
or
test
mov
ljmp
xchg
cmp
mov
or
sbb
and
dec
mov
push
scas
ret
sub
movb
or
push
pop
bound
mov
insb
pushf
xchg
call
dec
orl
mov
mov
and
dec
insb
fsubs
xor
mov
ror
call
movsl
ret
sub
imul
cmp
repz
jecxz
dec
sub
insl
mov
mov
shrb
xchg
pop
aad
mov
movb
mov
stos
or
loop
fidivl
cmp
sahf
cmc
cmp
fistpl
mov
pop
mov
jne
mov
cmpb
andl
sbb
xchg
imul
add
bnd
subb
push
adc
jl
mov
add
out
sahf
lret
mov
xlat
sbb
add
pusha
inc
roll
xchg
movsl
push
pusha
add
mov
cmp
aam
pusha
insl
and
sbb
add
mov
pusha
jne
sub
jbe
pusha
cmp
loopne
pusha
adc
push
jo
and
or
outsl
pusha
adc
push
rcrl
mov
ja
lods
adc
imul
test
sub
cmp
mov
pusha
mov
inc
je
fstpt
fdivrl
fsubs
sbb
and
jbe
mov
cmp
pusha
xchg
ror
std
add
jne
jnp
add
or
mov
add
jns
add
test
push
xor
adc
lret
pop
in
jmp
xor
cmp
inc
sti
pusha
sahf
mov
push
mov
and
fdivrs
push
cmp
jge
adc
ljmp
add
test
bound
testl
pop
jl
insb
dec
lock
bound
and
fs
inc
pop
dec
push
jne
fwait
loope
mov
movsl
in
sub
stos
ljmp
fstl
stos
adc
mov
push
incb
pop
or
pusha
insb
loop
iret
frstor
nop
rcrb
sub
inc
pusha
sub
je
sahf
jl
jle
xor
outsb
mov
inc
fnstcw
clc
jmp
pop
push
add
and
dec
minsd
dec
xchg
adc
and
ret
cmp
loop
iret
adc
inc
inc
insl
jnp
pop
dec
and
and
loope
cld
in
mov
outsb
mov
jnp
or
push
cmp
mov
bound
mov
aam
adc
inc
icebp
jl
push
mov
rcll
popf
mov
or
mov
and
mov
dec
cmc
ds
rcrb
cs
ds
loope
xchg
dec
inc
adc
push
push
jo
ret
xchg
jg
inc
and
test
mov
add
jne
pushf
xchg
out
mov
xchg
popf
movsb
subl
das
sahf
sti
add
dec
std
test
push
and
jne
adc
push
sub
push
cmp
sbbb
xchg
jp
ds
push
hlt
xchg
xor
and
jl
mov
gs
nop
fldl
popa
add
test
inc
inc
pushf
aas
test
cld
sub
and
pushf
mov
push
popf
mov
ret
pop
in
bound
fildl
and
dec
js
ret
shl
icebp
jecxz
mov
inc
adc
subb
aaa
mov
pusha
enter
sbb
sub
ljmp
insb
dec
mov
in
dec
addr16
sbb
outsb
xorl
aaa
inc
jmp
pusha
mov
mov
jo
inc
les
test
bound
pusha
sub
jns
mov
insb
push
scas
sbb
push
jne
mov
fstl
or
cld
push
pop
lods
lahf
rolb
dec
add
sbb
cmovbe
mov
cmp
inc
xchg
fbld
dec
mov
push
pusha
daa
sar
arpl
jne
aam
adc
lcall
mov
mov
and
xor
mov
fstpl
pop
sub
aad
xchg
div
insb
aam
ficomps
scas
in
sbbb
aas
cmp
int
fwait
pusha
adc
gs
ja
and
xor
fcompl
cltd
fistpl
cli
mov
jbe
enter
dec
jns
sbb
cmpsl
repz
xchg
pusha
mov
push
addr16
pusha
sbb
xor
mov
fisttpll
andb
adc
cmpsb
pusha
xchg
push
sub
mov
pop
jge
aam
mov
bound
mov
mov
inc
test
rclb
pusha
aaa
xchg
mov
test
pusha
jne
arpl
dec
xor
fs
aad
jno
add
xchg
jbe
test
mov
cmp
daa
pusha
xor
inc
push
test
cmp
jae
and
scas
repnz
cmc
jp
leave
insb
mov
cmp
sti
or
mov
in
xchg
fs
repnz
cmpsb
cmp
bound
fstp
dec
popf
mov
mov
xor
sbb
mov
in
popf
dec
adc
lret
sti
pusha
mov
mov
pusha
outsb
xor
lea
mov
mov
cmp
aad
push
fldcw
push
dec
dec
cmp
pop
pusha
arpl
cs
imul
stos
and
adc
and
inc
vmovupd
xchg
mov
subb
js
stos
cs
or
jmp
pop
pop
sbb
inc
sbb
or
lret
lahf
popf
popa
stos
inc
loop
dec
subps
sbb
pop
cmp
test
stos
jo
push
shll
mov
cmpsb
bound
sub
inc
lcall
ret
sub
lods
add
vmovsd
adc
jno
xchg
arpl
js
pusha
xor
imul
jl
xor
jb
popa
in
scas
out
inc
jge
add
and
rolb
pusha
dec
sub
ljmp
xchg
fsubr
mov
pop
push
leave
fsubrs
jecxz
sbb
mov
pusha
sub
hlt
jmp
insb
dec
fcomps
lcall
cmp
stos
mov
jbe
xor
ret
dec
sub
pusha
shrl
fcoms
pusha
pop
arpl
mov
jge
push
scas
jae
push
je
fsubs
sbb
inc
pusha
lahf
aad
cli
mull
andb
mov
adc
shrl
mov
pop
cmp
into
pusha
imul
push
sbb
aas
test
jle
adcb
ficomps
add
std
mov
mov
adc
push
mov
or
and
icebp
inc
mov
out
test
pop
iret
adcl
jnp
jns
popa
and
pusha
sub
clc
fisubl
sbb
out
outsl
jns
cmp
inc
cmpsb
jbe
addl
pusha
bswap
jmp
cli
dec
scas
rol
lahf
xchg
dec
inc
inc
insb
dec
loop
jle
add
pop
pusha
push
movsl
stc
leave
mov
and
add
push
cmp
fsubrl
fdivs
test
dec
xchg
lds
nop
int3
ret
bound
mov
mov
sub
in
jle
xor
add
dec
mov
or
jno
gs
faddl
mov
or
pop
fldcw
aam
jbe
xchg
pusha
in
inc
pop
jg
cld
hlt
dec
pusha
and
ficomps
cmp
les
lcall
pusha
outsb
lods
mov
pop
inc
into
xchg
repnz
and
or
imul
mov
popf
aas
pusha
dec
dec
lds
pop
popa
loop
jo
adc
mov
fdivs
iret
shl
cltd
pop
pusha
sbb
andb
dec
into
xchg
push
jl
pop
xlat
cmpb
sbbl
pusha
or
push
shlb
cwtl
sub
icebp
insb
pop
gs
stc
dec
inc
xor
sbb
mov
shll
pusha
cli
or
push
inc
mov
insb
sub
repnz
cmp
scas
sub
rorb
int
jle
mov
pusha
fisttpll
aad
sub
mov
xor
pop
pusha
or
cmp
sub
lahf
pusha
enter
mov
xor
movsl
and
jns
lret
lahf
dec
ds
cmp
sub
adc
jl
gs
test
sarb
cld
int3
ljmp
pop
jno
loopne
pusha
out
xchg
cmp
add
dec
pusha
es
xchg
lods
leave
outsb
scas
insb
or
adcl
sub
pusha
enter
xchg
stos
mov
cltd
mov
repnz
mov
adc
cwtl
cli
pusha
mov
pushf
int3
mov
push
icebp
xchg
inc
shl
and
jge
stc
xor
mov
mov
dec
andl
push
dec
cmp
dec
mov
xlat
and
mov
test
push
pop
inc
xchg
xchg
fsts
pusha
or
out
loope
pop
test
lret
jle
inc
cs
pop
jmp
into
and
cmp
mov
scas
pusha
mov
into
or
mov
bound
cmp
andl
fs
das
mov
mov
mov
mov
dec
out
push
lret
inc
pusha
out
push
sbb
adc
pusha
add
lods
int
push
sub
sub
pop
fistps
popa
push
xchg
ret
mov
jge
sbb
pusha
push
jp
out
jno
test
mov
cs
frstor
outsl
dec
out
dec
jmp
aad
cmp
jp
mov
bound
inc
icebp
mov
repz
add
lock
add
sub
movsb
inc
nop
sub
out
mov
mov
mov
pusha
push
aas
lret
xchg
scas
insb
roll
scas
adc
xchg
adc
sbb
jl
scas
pusha
mov
test
or
mov
sub
bound
inc
inc
aad
add
dec
fcoms
jmp
mov
mov
mov
pop
arpl
or
jecxz
and
pusha
add
xchg
jmp
rolb
push
or
test
push
pusha
xchg
inc
add
test
inc
pusha
cltd
or
loope
and
pop
fs
pop
lret
or
pusha
xor
rcl
call
nop
leave
clc
lcall
js
mov
inc
rcrb
and
ljmp
xchg
aas
ss
ret
out
jb
sbb
jae
andl
mov
ja
gs
aad
pop
cmpsl
arpl
xor
mov
pop
jb
mov
hlt
adc
lret
loopne
mov
sub
xchg
shll
std
xor
stos
arpl
pop
and
in
hlt
fcomps
inc
arpl
sub
xor
loope
push
popa
jle
xchg
ret
sub
mov
loope
mov
push
fdivl
out
cmp
fsubl
shll
arpl
xchg
xchg
cmp
outsb
mov
mov
jecxz
cld
cmp
popa
mov
loop
inc
lret
test
xlat
testl
call
mov
adc
pop
mov
jecxz
push
push
jbe
push
or
mov
and
pop
sbb
jae
lock
repz
push
je
mov
dec
or
stos
pop
jle
mov
push
cltd
lcall
movsb
cmp
mov
xchg
jmp
push
aam
pusha
repnz
test
xor
mov
adc
ss
jmp
pusha
xor
xor
push
loope
mov
dec
mov
sbb
jl
leave
xchg
mov
shll
push
cltd
sbb
enter
test
test
cmpsb
lods
pop
sbb
in
das
test
sub
out
dec
dec
jl
xchg
push
xchg
popa
pop
cmp
out
imul
pop
jge
jmp
ja
jno
shr
clc
pusha
enter
cmpsb
test
cmp
mov
pusha
jne
leave
loop
or
adc
dec
pop
mov
xchg
mov
pop
and
or
fisttpl
push
jp
fwait
xchg
cli
stc
push
daa
jmp
scas
inc
mov
or
pop
cld
and
loop
movsb
sub
pusha
ljmp
imul
sbb
pushl
cmp
clc
pop
add
push
xchg
jmp
dec
pusha
mov
add
pusha
inc
shrl
and
jg
pusha
inc
cmpsl
xchg
imul
cmp
dec
xchg
inc
stos
aaa
sbb
scas
stc
lahf
pusha
mov
jmp
dec
mov
mov
xchg
jge
daa
and
or
nop
insb
sahf
outsl
jno,pt
add
fiaddl
addb
call
xor
jl
mov
clc
pusha
aad
insb
jp
fstpt
je
add
cli
xchg
sbb
cmp
dec
gs
out
pusha
out
inc
cmp
fsubl
in
push
adc
xor
dec
incl
push
xchg
mov
or
pusha
xlat
mov
ficoml
mov
jns
jae
pushf
out
insb
out
lahf
movsb
in
mov
pusha
mov
push
jb
and
sbb
rcrl
and
pusha
bound
adc
stc
inc
or
mov
dec
push
dec
mov
jl
and
in
std
andl
iret
add
dec
add
mov
push
xchg
adc
sbb
jge
arpl
mov
fs
loope
sub
lock
cmpsl
pusha
insb
or
movsb
int3
gs
insl
push
jmp
loope
repnz
jns
xchg
push
lods
test
repz
pusha
cmp
xor
add
inc
inc
pusha
mov
jmp
mov
push
pusha
dec
iret
loope
fcoms
xchg
dec
ss
pusha
arpl
test
rcrb
arpl
or
and
pop
dec
pusha
sbb
dec
in
aaa
cmpl
and
pusha
mov
xchg
pusha
mov
sar
sbb
ja
insl
out
outsb
mov
pusha
fimuls
sbb
add
pusha
negl
pop
ficompl
push
xchg
sub
les
out
jo
orb
pop
stos
pusha
jne
xor
outsl
adc
xchg
sti
sahf
push
lret
sub
daa
inc
rcll
xor
scas
inc
jl
fdivrs
pop
cmpsb
push
xor
mov
aaa
pusha
leave
in
xor
loop
pop
insb
inc
inc
push
jnp
fs
fbld
add
and
pusha
push
out
lock
mov
or
ja
dec
nop
jle
mov
push
icebp
test
rcll
push
xchg
inc
stc
lods
push
fdivl
dec
adc
mov
orb
out
mov
sub
aam
setp
mov
xor
aad
dec
pushf
and
fwait
dec
ret
cltd
mov
jbe
push
push
xchg
shll
pusha
inc
lret
gs
cmpsl
xchg
cmp
cwtl
addr16
pusha
sbb
or
inc
adc
cld
das
hlt
cmp
data16
sbb
pusha
fldcw
stc
dec
push
inc
fwait
sbb
xor
in
cmp
std
pop
and
sbb
adcb
ss
imul
pop
int3
sub
push
loope
fsubs
and
mov
ficomps
or
inc
pusha
ljmp
js
arpl
jl
and
add
push
pusha
push
movsl
mov
push
in
add
es
outsb
pusha
mov
lods
pop
sbb
lret
add
repnz
fstp
cmp
aaa
pusha
fwait
mov
xchg
fisubrl
loope
daa
xlat
and
sbb
add
std
mov
mov
cmp
loope
pop
sub
xchg
pop
int
inc
mov
and
insb
fidivrs
and
cmp
jb
jbe
mov
sbb
or
or
xor
popa
shll
sub
out
mov
sbb
and
addr16
add
adc
adc
sbb
dec
mov
pop
adc
sbb
xor
test
lcall
adcb
push
inc
fisttps
popa
loop
pusha
iret
lock
pusha
idivl
clc
sbb
xlat
push
dec
mov
loope
ja
loopne
or
xor
jae
dec
cld
lds
sti
jp
jne
in
jmp
leave
xchg
pusha
or
fwait
inc
rolb
lds
xchg
imulb
cli
in
test
jae
arpl
mov
shlb
inc
inc
dec
mov
pusha
push
pop
or
aam
jae
cmp
jl
xchg
jg
sbb
sbb
push
and
call
lea
cmp
inc
adc
mov
pop
popf
push
lcall
addr16
jb
pop
mov
push
pop
sbb
jl
mov
or
notb
cmp
js
inc
loopne
ficoms
out
mov
sub
popa
jb
test
and
and
stos
pusha
jmp
xorl
xor
sbb
fistpl
int3
dec
dec
cmp
pusha
or
adcb
insl
adc
inc
loopne
ret
xchg
pusha
icebp
stos
xchg
xchg
sub
pop
pushf
pusha
adc
rcr
lods
jle
adc
sti
icebp
cld
mov
push
daa
push
jecxz
in
out
inc
insl
loopne
mov
pusha
pop
call
xor
dec
into
pusha
ja
mov
or
push
dec
adc
cmc
fs
mulb
je
cmova
jnp
push
xchg
test
pushf
xchg
lock
pusha
inc
dec
imul
lods
lds
pusha
inc
xor
pop
push
stos
sarl
cmc
pop
push
mov
lods
jno
mov
and
pusha
jns
cmpsb
cmpsl
mov
sbb
pusha
insl
jecxz
xor
sbb
orb
jbe
lahf
cwtl
dec
mov
pusha
mov
scas
lods
sbb
pop
dec
test
mov
adc
cmc
mov
fdivrl
xor
dec
data16
arpl
mov
push
in
push
cmc
and
dec
xor
mov
mov
int3
xchg
int3
pop
cmp
inc
leave
es
jnp
mov
pusha
or
jp
mov
lahf
stos
sub
xor
jb
popf
jle
push
movsl
mov
pop
int
insb
negb
ret
lea
imul
xchg
pusha
lahf
out
dec
adc
cmp
inc
push
bound
pusha
in
ljmp
decl
adc
sub
popa
xorb
gs
andl
sbb
imul
hlt
push
add
or
mov
mulb
inc
push
pop
lods
or
mov
iret
pushf
mov
stos
cmp
out
add
mov
mov
sub
data16
les
pop
push
clc
test
movb
pusha
out
mov
pop
jl
or
lock
mov
pusha
cmp
jmp
mov
or
enter
fistpl
roll
jo
pop
lods
jne
xchg
xlat
cld
lcall
in
xchg
mov
push
xchg
es
or
data16
lret
repz
mov
and
ret
xor
inc
mov
in
mov
pop
test
pusha
mov
pop
pushf
push
pusha
jns
ja
mov
inc
or
pop
sbb
pushf
call
mov
adc
test
lea
pusha
mov
mov
punpcklbw
lret
or
stos
mov
in
rolb
add
aaa
test
stc
xor
popf
js
shll
jne
inc
jl
mov
pusha
inc
inc
fmulp
rcl
cld
pusha
mov
push
adc
sub
mov
lahf
fwait
sub
fidivl
mov
lea
adc
pop
dec
and
pusha
xchg
lcall
or
lea
pop
xor
popf
nop
mov
cmp
sahf
mov
or
dec
lcall
pusha
mov
scas
aaa
cltd
pusha
sub
or
pusha
outsl
repnz
and
jne
pop
lea
bound
pusha
je
int
fisubrl
mov
mov
repnz
jl
mov
dec
outsl
pop
popa
add
loopne
pusha
out
jno
dec
popa
xchg
ljmp
push
lds
pusha
aas
roll
mov
gs
xchg
orb
jo
cmp
pop
sbb
push
sub
push
sbb
test
bound
xor
pusha
popf
in
sub
jnp
out
out
sbb
adc
repnz
rcr
scas
mov
pusha
pop
inc
scas
cmp
sbb
cmp
addr16
sbb
sahf
jg
cmpsl
push
xor
jno
mov
jecxz
loop
in
pusha
inc
add
mov
adc
lahf
das
pop
pop
sbb
xor
test
dec
sub
sub
das
xchg
or
mov
xchg
bound
jne
ss
pop
sbb
das
int3
pusha
jbe
repz
lret
sti
and
xchg
sbb
add
pusha
mov
mov
and
fcmovne
lret
jnp
or
or
adc
mov
mov
pusha
lea
out
push
pusha
xchg
in
pop
mov
insl
jmp
orl
into
imul
cmpsl
nop
fcomi
pop
lret
xchg
out
pop
frstor
in
xchg
sbb
mov
cli
in
push
and
sti
lea
pop
pop
arpl
hlt
insb
xor
jp
scas
out
rcll
loop
dec
arpl
pusha
jmp
movsl
cmp
mov
adc
jae
arpl
pop
pusha
mov
std
fimuls
push
cmc
pop
dec
roll
and
xor
and
lcall
cmpsl
aam
fs
paddsw
and
add
movsl
cmpb
adc
cmpsl
mov
int3
pop
idivb
pusha
cmp
add
inc
jae
das
pusha
adc
inc
and
out
mov
js
data16
scas
test
xlat
mov
or
repnz
bound
lods
add
inc
pusha
and
lds
sub
pusha
rcll
aaa
iret
in
sbb
fnstcw
loop
es
icebp
cld
xchg
sbb
pop
bound
xor
lock
pusha
lea
push
mov
call
pop
pop
dec
nop
adc
push
ds
out
movsl
xchg
inc
lret
fs
icebp
or
lcall
imul
in
pusha
mov
jmp
repz
mov
cmp
jmp
pop
int
sub
mov
xchg
daa
cli
xor
jns
xor
cmp
lds
and
in
add
lret
sbb
mov
mov
dec
cmc
sahf
adc
jb
test
movsb
push
mov
cmc
pop
lods
pusha
daa
inc
out
cmp
mov
pusha
insl
mov
adc
pusha
incl
loopne
sbb
mov
popa
notl
pushf
xorl
push
jns
testb
popl
jecxz
fs
mov
pushf
xchg
xchg
lods
andl
jnp
gs
lret
and
and
ret
mov
pusha
popa
mov
int
dec
jmp
outsb
jge
aaa
je
lods
idivb
push
pop
call
outsl
pop
je
pop
pushf
mov
push
aad
push
imul
movsb
mov
popa
mov
lods
pusha
out
pop
rorl
hlt
pop
pusha
cltd
fimuls
pusha
lret
jb
mov
cmp
mov
lods
test
jle
ret
shl
pusha
roll
mov
pusha
push
push
or
pusha
sahf
aaa
xchg
and
mov
nop
pusha
and
mov
aam
pop
arpl
push
loope
lock
es
cltd
mov
cmpsb
ss
pusha
movsl
shl
xor
cmp
dec
pusha
mov
jns
enter
mov
repnz
cmpsl
addr16
sarb
sarl
adc
push
sub
stos
sub
cmp
mov
je
mov
jle
in
js
test
pop
adcb
popa
add
aas
pusha
and
dec
push
test
sahf
mov
stc
mov
push
ljmp
pusha
ret
or
mov
pusha
cmpsb
push
mul
cmpsl
and
dec
std
jge
adc
pop
popf
in
sub
arpl
mov
pop
or
xchg
andb
pusha
dec
xchg
and
pusha
mov
and
out
repnz
pop
shlb
test
xchg
pop
sbb
pusha
es
lcall
mov
push
mov
push
jg
dec
fcmove
xor
call
shll
dec
sub
xor
incb
and
sbb
cmpsl
jmp
les
pusha
pop
into
stos
arpl
cwtl
ljmp
dec
add
bound
repz
ret
pusha
mov
cmp
shlb
les
xor
data16
jl
loope
lcall
cmp
ficomps
outsb
or
insb
adcl
out
repnz
divl
mov
push
cmpsl
insb
add
mov
cmp
imul
addb
pushf
mov
add
hlt
add
cwtl
dec
pusha
or
push
call
sbb
outsl
pusha
and
jns
andl
scas
xor
cmp
jl
mov
into
cwtl
mov
mov
push
and
int
pop
in
in
in
fwait
repnz
jecxz
lret
lea
stos
pusha
in
cmp
cmc
mov
mov
pusha
subl
pusha
jge
loope
cld
mov
movsb
xlat
pop
ret
lahf
je
sar
pop
or
push
jl
imul
sub
fs
dec
mov
mov
adc
in
int
adc
and
addb
push
test
loope
outsl
insb
pusha
lahf
jo
mov
pusha
xor
and
out
pusha
mov
out
std
lret
pop
dec
pusha
push
add
ficompl
xchg
pop
test
lahf
mov
and
cmpsb
je
loope
popf
pusha
insl
and
scas
cmp
sub
lea
or
or
jnp
pop
es
scas
stc
fldcw
xlat
addr16
mov
rep
pushf
mov
and
ljmp
js
into
outsl
adc
or
shll
pusha
lock
pop
adc
push
loopne
jno
or
dec
outsb
pusha
aas
loopne
add
pusha
mov
mov
push
push
insb
jl
dec
push
and
mov
test
pop
sbb
punpckldq
es
loopne
pusha
clc
ljmp
mov
pusha
aas
mov
sbb
out
cmp
test
add
pusha
mov
in
cmp
add
shr
outsl
bound
pusha
lea
cmp
cltd
mov
test
in
outsl
sbb
dec
add
fs
xchg
xchg
ja
out
mov
pop
mov
mov
mov
bound
fwait
jmp
pusha
div
loop
into
insb
dec
lahf
pusha
fisttpll
jb
push
arpl
popf
imulb
inc
xlat
adc
cld
js
lods
push
sbb
fcomip
xchg
ja
ret
stc
scas
movsl
cmp
adc
and
jnp
rorl
inc
fwait
loopne
ljmp
add
ret
and
or
xchg
popf
movsl
pusha
in
pop
push
pusha
push
pop
lods
or
or
inc
cwtl
pop
data16
call
jecxz
dec
movsl
pusha
mov
leave
sub
fdivrl
mov
xor
jge
aas
add
mov
stos
pusha
shufps
jo
sbb
in
stc
mov
ljmp
sahf
ror
les
push
pusha
add
mov
mov
pusha
adc
es
stc
mov
and
imul
fidivrl
mov
loope
pop
scas
stos
jnp
aam
cmc
test
mov
sub
insb
sahf
fwait
sti
mov
cli
mulb
rorl
js
mov
mov
pushf
pusha
xchg
ud2
insb
cs
cmpsl
xchg
cwtl
popa
mov
mov
aam
sarl
repnz
insl
xchg
jecxz
pop
mov
dec
imul
in
jecxz
and
test
imul
es
add
mov
std
out
add
pusha
lret
sub
aaa
adc
pcmpgtb
xor
mov
mov
loop
sub
popa
or
pusha
dec
jmp
cli
mov
pop
dec
jnp
cmc
repnz
or
cmp
movsb
inc
imull
in
jb
pusha
out
rolb
fldenv
sar
cmp
jae
adc
adc
inc
sti
mov
fdivrs
lcall
js
adcb
imul
aad
jae
fs
jmp
mov
jae
mov
push
pusha
test
jnp
mov
lods
loop
or
call
shr
dec
cmp
pop
sbb
dec
mov
or
imull
fsubrs
iret
sub
adc
movsl
aas
and
add
cmp
jp
imul
in
int
push
mov
dec
adc
inc
les
pusha
lea
pusha
in
jl
or
mov
adc
fs
mov
jno
mov
loop
jp
les
mov
sbb
push
call
push
bound
stc
movsl
xchg
or
sbb
int
inc
pusha
add
jbe
mov
out
pusha
xchg
ss
add
pusha
dec
insb
dec
pop
cs
sbb
lods
fstpt
insl
fdivrl
inc
popf
dec
or
xor
mov
adc
push
pop
pushf
xchg
jo,pn
movsb
jno
and
push
pusha
mov
jno
dec
mov
mov
fimull
pusha
or
cmp
pusha
int
nop
mov
fdivr
fs
ret
faddl
loopne
pusha
push
popa
jno
push
repz
mov
add
push
dec
popf
pusha
mov
jle
lock
addl
das
into
scas
mov
dec
insb
pusha
jo
mov
pusha
xchg
test
jmp
or
mov
lock
mov
sub
mov
call
icebp
xor
push
xlat
clc
mov
sub
stos
xchg
andb
jae
dec
pop
mov
inc
ja
cmc
arpl
inc
stc
ja
jne
and
fcomp
in
sar
pusha
mov
aad
push
xchg
pusha
sub
and
jl
push
jge
arpl
xchg
jl
out
pop
push
andl
push
adc
imulb
popa
mov
push
pop
and
lods
sbb
mov
or
pusha
out
popfw
add
push
ds
ss
cld
sub
aam
sarb
xor
adc
pusha
mov
cld
fimuls
int
push
xchg
loope
add
push
push
jb
xor
flds
stc
mov
iret
mov
outsb
loopne
xchg
pop
loop
nop
xchg
gs
push
and
addr16
mov
push
pusha
cmp
sub
jne
ficoml
in
fidivs
nop
icebp
jp
push
jb
out
adc
push
adc
fs
loope
sbb
sti
pusha
pop
arpl
je
std
insb
stos
xorl
jge
pop
popf
outsb
stc
and
add
dec
push
psrad
jg
inc
sub
aad
imul
fisubl
push
sub
test
xchg
or
sub
cmp
inc
les
loopne
push
adc
out
pop
pusha
mov
and
bound
pop
xchg
jecxz
add
adc
sti
aas
pop
cmp
cmc
mov
jecxz
decb
mov
rcrl
movsl
incl
in
sbb
jl
jecxz
xchg
fsubs
pusha
clc
inc
movsb
push
add
push
test
mov
test
mov
sub
aam
jbe
mov
in
xor
test
mov
lock
iret
movsl
pop
test
jne
inc
je
add
cltd
scas
mov
jno
push
jbe
les
orb
imul
xchg
inc
hlt
add
pop
mov
jmp
fildl
pusha
data16
enter
sub
pusha
fdivrs
cmp
pusha
ds
jl
sub
pusha
mov
out
add
add
mov
fiaddl
pusha
jb
mov
xchg
sbb
pusha
outsl
das
cli
icebp
fbld
out
pop
add
xchg
sti
call
mov
iret
pusha
popa
sub
cmp
sub
and
pusha
inc
dec
push
sub
inc
nop
dec
xor
pop
bound
cmpsl
lret
jae
jbe
lods
or
push
xchg
cmp
pop
pusha
add
repz
xchg
cmc
pop
jg
sbb
pushf
arpl
dec
rcrb
adcl
ret
inc
xchg
bound
lock
sbb
scas
out
scas
cmpsl
bound
xchg
ret
and
inc
repnz
test
fs
insb
add
mov
mov
pop
lods
inc
hlt
and
add
dec
clc
les
push
pop
cld
xchg
push
or
lcall
stos
ljmp
mov
pusha
fadds
mov
pusha
xchg
dec
int
mov
insl
subb
adc
repnz
xor
cmpsl
icebp
bound
adc
lds
push
fiaddl
pusha
push
aam
ret
pop
jmp
push
cmp
xchg
cmpsb
jae
sbb
jb
and
sbb
mov
gs
pop
xor
mov
addr16
sar
pusha
scas
xchg
cmp
inc
cmpsl
pusha
mov
push
enter
icebp
lea
push
xchg
call
pop
inc
ret
into
xor
pusha
shlb
add
leave
gs
inc
mov
fwait
mulb
sub
cltd
leave
jecxz
sbb
sub
loop
stos
fnstcw
push
test
clc
outsl
sahf
loope
out
push
xor
hlt
pop
adc
mov
cs
pop
inc
pusha
pop
fcmovne
jno
popf
dec
add
test
ficoml
xor
jg
pusha
mov
push
or
inc
insb
leave
push
mov
jbe
inc
mov
addr16
inc
outsb
out
mov
mov
xchg
test
mov
mov
fs
adc
cmp
pop
dec
lcall
sbb
loop
not
adc
pop
push
dec
out
addl
into
push
clc
mov
pusha
mov
dec
sbb
add
dec
orb
mov
lret
inc
cmp
lret
insl
movsl
xchg
sub
iret
inc
jne
pusha
rolb
in
pop
pusha
fdivp
cmp
lahf
cmpsl
ret
xor
xor
or
push
aam
dec
inc
push
cwtl
fbld
insb
push
rolb
std
jnp
ret
jo
mov
and
int
fldln2
xor
insl
pusha
cmpsb
testb
pusha
push
xchg
dec
inc
dec
ljmp
shrl
pusha
into
mov
mov
mov
arpl
pop
fildl
fmul
mov
insl
add
pusha
dec
jb
nop
push
out
sub
xor
test
gs
jo
clc
pop
loope
or
xcrypt-ctr
cmpsl
pop
aas
leave
mov
dec
ret
jmp
js
pusha
dec
sahf
loopne
or
das
mov
xchg
pusha
xchg
jne
dec
decl
divl
adc
xor
jecxz
sbb
pusha
outsl
repz
mov
mov
mov
pusha
loope
push
pusha
dec
insb
stc
repz
pop
mov
clc
or
mov
sub
sub
mov
stos
sbb
mov
pushf
rcr
jns
pusha
bound
cs
ss
rcll
aaa
test
clc
jno
mov
pop
mov
cmp
cmp
adc
out
inc
add
adc
jns
loop
xlat
adc
data16
lahf
jl
and
pusha
or
mov
loope
push
ss
or
pusha
notl
pop
mov
cmpsl
aam
inc
addr16
inc
out
pusha
pop
popf
mov
aad
gs
nop
pop
push
loop
ja
sbb
xor
pusha
add
cmpsb
and
les
rclb
sbb
dec
outsb
pop
ja,pt
repnz
push
aas
lods
pusha
mov
fstpl
insb
cmp
enter
loop
inc
bound
lds
mov
push
xchg
jae
jo
sbb
sbb
jg
js
jns
and
bound
or
pusha
adc
push
or
mov
pop
jg
add
ret
jle
rcll
cwtl
jl
fisttpll
data16
or
inc
push
movsl
lahf
pusha
ret
in
pusha
sub
xor
dec
in
mov
mov
jae
cmp
je
jl
xchg
jp
push
xor
mov
nop
xor
cmpb
cwtl
mov
insb
mov
js
jbe
bound
adc
adc
aam
pop
cwtl
popa
out
sub
mov
pop
lret
mov
pusha
sub
enter
icebp
adc
pusha
sbb
add
mov
insb
repz
xchg
out
inc
ret
hlt
fisttps
add
out
jg
mov
in
mov
pop
push
cld
and
push
add
and
cli
sub
jge
push
addr16
pusha
dec
jns
enter
add
add
int
lock
je
cmp
fs
pusha
ja
jae
aam
icebp
dec
jo
pop
xor
inc
bound
pop
aad
daa
in
fs
es
test
add
and
or
mov
push
adc
mov
xchg
pusha
das
in
xchg
lahf
ss
jbe
addr16
jo
mov
scas
jnp
test
jg
push
xchg
and
or
xchg
mov
ds
arpl
loope
push
dec
ds
fs
mov
adc
fs
flds
xor
mov
sub
mov
adc
xchg
inc
and
push
out
sbb
pop
xchg
adc
cmpsb
imul
addb
or
sbb
inc
mov
popa
sub
add
lahf
fs
lahf
adcb
fldenv
mov
ds
pusha
ljmp
jecxz
xchg
stos
fxch
ret
add
mov
imul
pusha
xchg
add
pusha
mov
mov
cwtl
je
adc
lds
pop
pushf
jg
repz
inc
stos
fstp
sti
outsb
out
sub
jns
push
jg
cltd
mov
ljmp
test
adc
cmpsb
push
xor
cwtl
sahf
jno
jmp
push
andb
movq
sub
mov
push
pop
arpl
nop
sbb
je
add
ror
sahf
insl
loopne
xchg
adc
mov
sub
sar
xchg
notb
xorl
dec
push
aaa
xchg
jecxz
push
mov
pop
shl
mov
call
or
test
mov
pusha
outsb
fidivs
xchg
or
lea
xlat
and
in
popl
xor
dec
out
sub
mov
adc
bound
or
loope
pop
push
or
pusha
cmp
jnp
gs
popf
jmp
mov
cmpsb
xor
mov
pusha
pop
into
xlat
xchg
insl
sbb
andb
mov
and
sbb
popa
cmpsb
jg
fstl
mov
cli
sbb
jge
jno
scas
dec
into
outsb
addr16
inc
jne
stos
je
sbb
pusha
dec
cmp
dec
jl
jmp
out
arpl
or
movsl
mov
jg
loopne
jl
sahf
inc
xchg
or
bound
lcall
lds
pusha
pop
movsb
jne
dec
xor
pusha
or
addl
pusha
out
push
and
pusha
pop
aam
cmp
mov
cld
fs
dec
test
loopne
fiaddl
inc
repz
dec
jb
xor
leave
pusha
movaps
fcoml
shll
aaa
mov
pop
adc
mov
cmp
xchg
andl
mov
push
dec
mov
adc
pusha
and
or
jmp
sbb
ret
jl
sbb
arpl
mov
sahf
popa
sub
cltd
jmp
adc
xor
xchg
mov
scas
add
push
nop
xor
insl
mov
out
cmc
xchg
inc
xchg
add
cmp
pusha
mov
iret
mov
mov
je
mov
insb
jecxz
in
mov
mov
mov
pushf
pushf
fimull
pusha
in
sti
sbb
scas
cwtl
push
jb
into
insb
jns
stos
mov
add
stc
push
fwait
xchg
cmpb
pop
nop
jbe
fs
push
jmp
lret
negl
in
lahf
dec
sbb
push
gs
imul
push
xchg
mov
inc
insl
push
adc
xor
mov
inc
push
mov
or
insl
nop
mov
or
mov
sbb
mov
insb
jne
jno
pop
std
inc
popa
cmp
dec
mov
mulb
andl
pusha
mov
ja
ds
pop
out
pusha
xchg
dec
lret
push
in
cmp
pusha
arpl
into
push
popa
loop
cmp
lcall
xchg
das
push
ret
pop
sahf
push
inc
cwtl
sub
lret
test
arpl
sub
jecxz
pusha
xor
fisubrl
and
movsl
fs
nopl
mov
cmp
rcrl
mov
sub
inc
and
fisttpll
adc
dec
insl
out
dec
imul
es
inc
sbb
xor
mov
sti
icebp
pusha
in
mov
das
pusha
ljmp
rcrb
push
mov
pop
arpl
sahf
sub
fsubs
addr16
rorb
push
pop
popa
mov
out
lea
pusha
dec
call
lock
js
popa
mov
mov
movsl
lds
test
rcrl
sbb
test
mov
outsl
pusha
loop
inc
dec
aas
inc
sub
addr16
cli
ss
jge
lcall
call
repnz
xchg
push
xchg
xchg
cs
jnp
mov
pusha
jb
repnz
jp
in
mov
add
in
pusha
stc
jecxz
cmp
movsb
fwait
jnp
ret
sbb
xlat
fadds
ss
faddl
pop
nop
push
pusha
mov
hlt
xchg
inc
into
xlat
negl
or
pusha
fcomip
in
sub
in
xor
pop
test
imul
mov
pusha
popf
cmc
int
bt
pusha
cmp
push
test
bound
imul
jp
insb
mov
pusha
lds
filds
jmp
sub
ds
sahf
mov
add
xor
add
out
ja
cmc
lea
sub
loope
xchg
sbb
negl
test
push
out
loope
mov
jb
adcl
adc
mov
mov
rcr
ss
push
lods
in
jno
imul
loop
outsl
aaa
jns
mov
gs
xchg
ret
arpl
mov
push
inc
aas
mov
stc
sbbb
in
jecxz
nop
mov
sarb
test
pop
in
mov
aad
mov
pusha
div
adc
jo
outsl
jge
inc
bound
pop
int3
mov
sbb
arpl
jno
in
mov
cmc
gs
mov
inc
or
not
and
adc
in
jecxz
xchg
bound
push
loope
xchg
pop
xchg
mov
pusha
loop
xchg
sub
leave
jns
ret
xor
cmp
hlt
lods
andb
lods
push
push
cmp
and
xchg
add
or
bound
test
and
mov
inc
cli
stos
imul
xchg
enter
jp
mov
arpl
push
and
cmpsb
cmp
ss
pusha
loope
and
pop
and
sub
sbb
add
sub
lods
cmp
fdiv
inc
or
iret
inc
xor
leave
data16
jle
arpl
idivl
call
test
arpl
push
stc
mov
dec
pushf
mov
jo
pusha
test
dec
xchg
sbb
imul
pop
push
nop
jg
mov
mov
cmp
outsl
rcrb
repnz
ss
add
ljmp
scas
sti
jb
movsb
pusha
and
xchg
fisubrs
pushf
mov
push
xlat
pop
daa
cmpsb
lcall
punpckhbw
push
push
in
loope
jns
pusha
xchg
add
add
inc
andl
movsl
xchg
add
push
jg
add
mov
pusha
dec
call
scas
vprotw
and
mov
out
mov
and
sarb
push
fildll
negb
pop
in
loopne
fwait
or
das
loop
mov
sbbb
pop
sbb
pop
cmpsb
hlt
inc
fisubs
mov
les
sbb
inc
pusha
sub
loope
dec
or
insb
ret
bound
mov
enter
cmpsb
xor
repnz
dec
jecxz
test
les
push
xchg
xchg
bound
lahf
shlb
mov
nopl
dec
jnp
ja
add
fiadds
loopne
xor
fisubl
jp
pop
pusha
lahf
int
std
push
lods
test
pusha
dec
mov
mov
adc
or
enter
pusha
test
movsl
sbb
jne
or
mov
sti
ficoms
sub
xchg
cmp
push
sbb
cmc
call
loop
adc
rcll
lock
xchg
insl
into
add
hlt
fistl
inc
ret
loopne
pop
lods
pop
mov
mov
clc
dec
push
sbb
add
mov
cld
add
cwtl
cld
lahf
fs
push
push
ja
cmc
inc
ret
mov
pop
ja
and
pushf
loope
mov
cmpl
xlat
arpl
scas
dec
inc
adc
push
pusha
push
mov
jmp
lea
xchg
cmpsl
inc
pop
mov
cmp
mov
dec
mov
ret
push
filds
jo
mov
dec
aaa
and
js
clc
dec
outsb
loope
xchg
cmp
popf
jge
flds
adc
or
out
loopne
mov
jbe
mov
lea
addr16
add
shlb
es
sti
dec
mov
arpl
xor
and
mov
jno
dec
jecxz
mov
dec
sub
mov
mov
cld
mov
push
xchg
movsl
sbb
test
inc
dec
stos
lds
lahf
icebp
repz
mov
cld
push
inc
and
pop
stc
cmp
xor
mov
inc
fs
cwtl
mov
outsb
push
xor
dec
sub
pop
dec
aas
leave
cld
aaa
jecxz
shrb
test
pop
push
bound
fwait
xchg
xchg
jae
arpl
push
daa
xor
test
loope
push
fisubrs
bound
inc
ret
rorb
xor
sti
or
cltd
arpl
fstps
mov
and
dec
inc
sbb
dec
pusha
ret
inc
push
insl
sub
inc
jecxz
mov
cvttps2pi
mov
mov
sub
and
out
mov
or
lods
or
lretw
repnz
pushf
orb
mov
push
mov
mov
mov
xor
outsb
test
xchg
jne
and
pusha
mov
add
inc
push
enter
and
data16
lahf
ret
lret
sbb
rorl
jl
mov
jge
shll
push
pop
mov
pop
bound
push
jo
ret
adc
adc
add
and
repz
leave
cli
jmp
xchg
inc
pusha
xor
imul
cmp
int3
inc
outsl
xchg
jne
mov
movsl
push
xor
jle
ret
mov
addr16
push
inc
and
in
dec
mov
pusha
cmpsl
or
je
and
mov
sbb
cmp
rcr
lret
pusha
scas
lcall
pusha
xchg
jo
jnp
movsb
xchg
shlb
mov
cmp
dec
pmulhuw
mov
lock
in
dec
dec
pop
mov
sub
pushf
sahf
dec
push
in
add
divl
sub
push
mov
hlt
pusha
sbb
inc
and
sbb
jecxz
out
outsl
mov
ja
sub
or
repz
push
movsl
dec
pusha
inc
lret
adc
cwtl
jg
es
xlat
mov
aam
xchg
pusha
jb
fcmovne
sbb
std
mov
enter
shlb
ja
dec
dec
cmc
lret
mov
arpl
dec
movsl
gs
xorb
je
pusha
repnz
xchg
xor
mov
adc
mov
xchg
insb
jg
clc
stos
ss
inc
stc
mov
pusha
ret
cmp
adc
push
sub
mov
arpl
push
outsb
pop
jnp
mov
bound
and
sahf
test
das
jbe
aad
jl
jns
mov
inc
out
icebp
shl
ficompl
xor
inc
inc
out
pusha
push
test
add
mov
xor
es
sub
add
iret
movsl
cmp
test
xchg
cmpsb
lcall
aad
add
loop
imulb
ds
das
lret
leave
sti
stos
pop
push
scas
mov
aas
sbbb
sub
inc
mov
lcall
ljmp
pop
outsb
popa
mov
leave
mov
and
mov
and
and
and
pusha
xchg
shrb
sbb
jno
push
lock
mov
pusha
adcl
jg
push
stc
jb
mov
leave
insb
sub
stos
sub
ljmp
sub
leave
in
xor
rcrb
popf
push
pusha
adc
push
pusha
fmuls
cmp
mov
sbb
je
out
add
loop
fidivrl
jl
mov
rcll
out
xchg
mov
pushf
push
and
insb
pop
cmpsl
lcall
mull
cmp
dec
add
arpl
and
pop
sub
and
es
lock
shrb
cmp
and
insb
push
shll
pusha
add
shrl
lret
pop
adc
mov
mov
movsb
sbb
inc
fs
dec
nop
mov
cs
and
movsb
outsl
mov
out
sbb
add
push
jmp
pusha
xor
repnz
fwait
rclb
aas
push
addr16
mov
pushf
adc
cli
mov
inc
pusha
cltd
pop
int3
push
imul
ror
pop
push
sbb
xchg
cmpb
mov
dec
cmp
mov
test
mov
xor
pusha
adc
add
pusha
sub
push
push
jl
push
adc
xchg
pop
pusha
test
out
mov
fs
movsb
add
cmc
imul
mov
aam
incl
loop
pusha
xchg
test
jne
push
and
dec
jge
fs
cld
adc
pusha
inc
cwtl
sub
bound
or
sahf
pop
sbb
push
inc
outsb
ja
pusha
and
mov
push
rcrb
pusha
add
mov
scas
out
sbb
sub
sub
fistpll
or
mov
push
out
call
iret
push
lahf
push
repnz
xchg
adc
jb
andb
test
mov
push
mov
mov
sub
ret
ljmp
pusha
dec
movsl
mov
ds
bound
sti
mov
fs
aaa
adc
loope
xor
ljmp
pusha
push
inc
and
pop
push
fcomip
mov
mov
pop
pusha
mov
lock
aam
adc
push
ret
jae,pn
repz
lea
mov
xchg
loopne
xor
jp
hlt
and
pop
rol
ja
popa
ret
fdivl
cmpsb
jp
out
pusha
or
addl
sub
add
inc
loopne
mov
insl
scas
in
stc
or
loopne
subb
jg
push
add
cmpsl
xor
aas
sbb
imul
push
fs
loope
sahf
lods
sbb
jo
popa
push
mov
shll
mov
cwtl
test
adc
sub
sub
loop
adc
pop
or
jecxz
in
repz
repnz
pusha
popf
push
sbb
in
xchg
pusha
pop
fdivrs
pop
or
rcll
pusha
push
mov
mov
push
cwtl
adc
xchg
loope
movsl
sub
push
mov
mov
mov
daa
pop
mov
cmp
and
stc
cmc
pop
loopne
adc
je
dec
outsl
push
pop
jp
pusha
or
pop
inc
cmp
mov
pusha
cmp
jbe
pusha
inc
nop
xlat
int3
sbb
pusha
test
popa
cld
cwtl
and
call
sub
cs
roll
or
pop
adc
dec
fcoms
pusha
dec
setg
pusha
stos
cmp
inc
fldenv
in
xchg
mov
push
pusha
dec
mov
in
cmpsb
lods
xlat
fcompl
sbb
xchg
push
loopne
out
mov
call
cld
pusha
cli
sbb
jp
and
arpl
pop
xchg
xchg
mov
pop
pusha
mov
sub
pusha
loope
movsl
lret
mov
pusha
out
mov
fs
adc
movsb
negb
daa
jnp
sbb
add
pop
xchg
xchg
adc
gs
push
outsl
fisubrs
and
cli
pusha
lock
fcompl
xchg
push
jmp
shll
push
xchg
arpl
push
insb
in
jp
mov
mov
push
mov
sti
frstor
or
pop
ret
push
add
xor
js
lret
sbb
mov
addr16
arpl
pushf
pusha
jo
sbb
pop
aas
or
and
pusha
imul
adc
add
cmp
adc
js
dec
repz
jmp
jmp
fstl
sarl
test
addr16
jl
xchg
lds
loope
jb
or
pop
sbb
pusha
push
cmpsb
sub
adc
orl
push
jmp
sub
jecxz
pop
pusha
pop
mov
adc
pop
popl
push
dec
in
jne
jae
test
out
xrelease
sub
mov
pop
jbe
int3
sub
push
add
lods
popf
xchg
sbb
mov
stos
sahf
xchg
sub
sti
add
mov
xchg
insb
pop
inc
mov
scas
sar
aaa
xchg
cmp
sub
push
pusha
ss
mov
cmc
mov
imul
fidivrl
push
push
aad
bound
arpl
add
js
mov
cmpsl
push
out
push
pop
xor
pusha
push
jo
jmp
sbb
and
mov
inc
mov
stos
and
cmp
hlt
pusha
cmc
xor
cmp
pusha
bound
and
shrl
call
ds
cmp
into
pop
dec
fistpl
pusha
inc
daa
mov
ds
mov
cltd
fs
in
mov
pusha
repz
or
aaa
test
mov
loope
push
lcall
insb
pop
jns
adc
int3
and
adcb
mov
mov
mov
pusha
arpl
mov
pusha
dec
out
inc
adc
out
in
inc
xor
push
out
pop
mov
call
pop
mov
das
scas
int
cmpb
pusha
stc
add
sub
pusha
jg
mov
adc
jmp
push
pop
cltd
mov
cmp
cld
pusha
add
outsl
xor
test
imul
insb
xor
xchg
loope
jbe
pusha
sbb
les
mov
fs
add
arpl
pop
xor
mov
jo
int3
jb
mov
add
scas
lret
push
add
pusha
inc
insb
fistpll
push
add
out
negb
pushl
xlat
es
hlt
pusha
lock
xor
jbe
enter
fisttpll
bound
xchg
dec
arpl
aam
ret
shl
mov
pusha
xor
or
mov
inc
xor
adc
iret
inc
push
xor
pusha
inc
mov
pusha
fisttpl
fdivs
mov
insb
testb
hlt
fisubl
rep
push
ret
int
and
sbb
je
cmp
fsubr
arpl
sbb
adc
popf
jo
les
js
sti
or
fs
xor
arpl
jecxz,pn
and
rcrb
jp
pusha
add
cmpsl
sub
iret
enter
xchg
sbb
pusha
cld
in
scas
repnz
lea
xor
push
push
or
insb
adc
fcomps
inc
cs
jle
popa
or
mov
pusha
push
mov
lods
sub
mov
mov
sub
cmpsb
insb
test
inc
pusha
test
cld
mov
mov
dec
adc
fcmovnu
stc
clc
mov
xor
cltd
push
cmpsl
jl
cmp
fucom
pop
sub
jae
andb
dec
pop
packsswb
pop
jno
popa
test
adc
xorb
and
pusha
adc
sbb
jl
rep
jb
push
lret
mov
mov
pusha
in
rcll
adc
mov
loopne
fiadds
mov
cmp
lret
add
push
xchg
xor
addr16
push
fcoml
mov
adc
xchg
add
shlb
xchg
xchg
push
mov
daa
dec
test
and
xchg
loope
xor
das
ljmp
outsb
xor
xorb
dec
adc
push
pop
pusha
mov
in
fiadds
out
outsl
sub
jle,pn
mov
pusha
mov
and
test
xchg
clc
jo
pusha
push
add
jl
loope
aad
and
sahf
and
jl
repz
loop
lret
jle
pusha
jns
in
ljmp
out
insl
sub
adc
adc
push
cld
mov
add
jns
rcrl
cmc
wbinvd
jl
jo
out
ret
push
movb
movsb
in
test
outsb
pop
mov
fsin
dec
je
sub
or
pusha
push
and
pusha
mov
aas
aaa
xchg
sub
xor
cwtl
sub
mov
add
mov
dec
sbb
mov
jmp
sub
cltd
xor
mov
jmp
in
mov
roll
push
dec
jnp
loope
iret
stc
jl
xchg
decl
mov
mov
mov
jne
mov
or
mov
push
sbb
scas
jns
addr16
out
and
cld
sbb
scas
xor
push
pop
sti
pushf
es
inc
jp
push
adc
insl
push
or
shll
push
pop
pusha
std
loop
shl
sbb
pusha
mov
jno
aaa
jecxz
pusha
in
sbb
mov
loopne
mov
lahf
add
sub
in
or
mov
xchg
xchg
jp
js
push
outsb
std
stc
fisttps
les
andb
popa
inc
or
lcall
add
inc
nop
lock
xchg
fildl
loope
or
rcll
mov
and
push
mov
push
add
push
test
pusha
aad
xchg
pop
add
aam
mov
stos
insl
jo
loop
cld
mov
dec
lods
ljmp
outsl
adc
inc
push
jg
and
bound
xor
cwtl
dec
js
adc
jbe
mov
mov
bound
rol
bound
int
adc
dec
mov
pusha
push
pusha
mov
mov
pop
sarl
mov
lods
xchg
dec
pop
insb
lcall
ja
push
iret
fisubs
pop
mov
out
fbstp
popa
xchg
subb
dec
cmp
inc
push
in
jbe
imul
pop
dec
sar
cltd
push
bound
jnp
ds
mov
or
mov
dec
cmp
pop
bnd
inc
sub
rcrb
loope
inc
setne
push
lahf
les
rorb
cltd
jno
pushf
pop
loopne
sub
lret
inc
aas
inc
push
mov
sbb
push
dec
inc
rcll
and
adc
scas
sti
add
test
sahf
sbb
dec
jle
icebp
pop
pop
mov
aad
aam
jae
and
mov
xor
ret
enter
push
pop
popa
dec
lcall
inc
cmp
test
sub
cmpsb
ljmp
adc
lods
inc
movb
mov
pop
inc
push
push
xchg
adc
shrw
outsl
je
mov
mov
jle
lret
rorl
mov
cld
test
inc
pop
test
add
inc
cmp
pop
and
shll
into
push
imul
in
pusha
aad
cmp
ss
dec
lock
into
fists
fs
shl
mov
push
adcl
mov
xor
sub
mov
adc
jecxz
je
mov
punpcklbw
add
inc
fmull
nop
push
push
jle
fcomps
fnstsw
rcll
mov
and
or
adc
cmp
repz
xor
pop
push
mov
mov
cld
pusha
sub
lea
icebp
mov
insb
pusha
out
sbbb
xchg
bound
push
mov
mov
out
dec
stc
outsl
mov
mov
pusha
das
fdivrl
jae
bound
sub
pop
in
add
adc
jmp
ficompl
jmp
je
lea
sub
and
lds
into
sahf
ret
pusha
and
mov
insb
nop
loopne
mov
pop
cmp
adc
es
lret
cmp
arpl
add
cltd
sbb
sbb
das
movsl
fdivrs
pusha
mov
jp
cmp
aas
mov
jge
jo
and
push
loop
orb
shlb
cmc
lea
cmpsb
test
xchg
add
mov
scas
mov
sbb
mov
or
fimuls
sub
das
push
insb
mov
mov
and
pusha
addr16
sahf
loop
insl
push
pusha
into
cmc
adc
pop
mov
adc
or
sbb
dec
push
mov
loopne
mov
rol
lret
lods
jb
out
les
mov
pusha
or
mov
ss
adc
lret
aam
jno
sbb
popa
movl
shll
adc
fisttps
sub
hlt
mov
jo
jbe
shl
loopne
sub
xor
inc
cli
jno
or
pushf
xor
inc
aam
push
movsb
pusha
dec
repz
popf
jge
popa
push
lods
lahf
sbb
mov
add
enter
lret
sub
pop
hlt
pop
xchg
loopne
cmp
mov
int3
imul
dec
pop
xchg
adc
lret
pop
pusha
jo
sub
push
pop
xlat
repz
adc
rorb
sub
loopne
push
pusha
mov
data16
pusha
rclb
xlat
push
or
arpl
insl
adc
mov
ja
les
adc
mov
addl
popf
push
aad
movsb
test
popa
cmpsb
lods
mov
push
xchg
mul
cmp
pushaw
psubsb
add
xchg
inc
cmp
pop
arpl
or
sbb
sub
test
sti
pusha
sar
mov
lds
mov
ror
movsb
xor
testb
cltd
outsb
xor
pusha
cmpl
sbb
add
push
cli
sbb
xchg
jbe
jl
xchg
jl
mov
cld
mov
pusha
jecxz
push
jbe
lods
dec
inc
pop
movsl
scas
mov
dec
jge
push
insb
inc
xor
ret
dec
mov
pusha
sar
out
in
jle
je
push
mov
jmp
mov
or
pusha
fwait
xlat
ds
xchg
mov
dec
out
pop
leave
dec
pop
pusha
mov
adc
enter
outsl
jp
js
mov
in
shll
mov
mov
jae
inc
arpl
jmp
push
outsb
and
pandn
int
push
addr16
sub
dec
mov
fwait
out
sbb
aad
mov
or
aam
mov
mov
loop
cltd
xchg
mov
pop
les
hlt
and
nop
pop
mov
fmuls
push
sbb
inc
pusha
push
mov
jbe
or
icebp
adc
sbb
jo
pusha
mov
outsb
mov
dec
ficoml
jb
aam
pusha
xchg
ret
lahf
setae
mov
adc
sbb
sub
insb
cld
and
shl
sub
jle
js
add
nop
out
xor
leave
pusha
or
fistl
out
cli
pushf
fstl
mov
lret
mov
or
imul
loope
repz
nop
sbb
lcall
int3
jo
pop
mov
and
mov
adc
jno
ret
mov
stos
lret
jecxz
lds
repz
mov
into
icebp
bound
pop
popf
int
ss
scas
pusha
inc
xchg
je
mov
int3
xlat
mov
pusha
cltd
push
pop
adc
enter
or
mov
loop
push
fs
je
dec
sub
sub
mov
pusha
out
push
adc
fnstcw
push
mov
xor
imul
pusha
push
fs
lods
cmp
mov
inc
imul
out
rcrl
xchg
pusha
or
cld
sub
aas
popa
inc
pusha
out
pushf
dec
lahf
iret
scas
xor
lea
test
cmp
sbb
jne
jno
pop
xor
insb
pop
xchg
jl
push
lret
mov
pusha
andb
xor
pop
pusha
out
int
cmp
jl
dec
cmp
shlb
xchg
or
jno
mov
stos
pop
testl
sar
ja
and
jo
jle
push
and
call
int
bound
mov
rclb
es
arpl
out
add
ret
popf
in
nop
fcmovbe
fst
addr16
int3
rcrl
insb
add
pop
sahf
mov
pusha
xchg
lcall
shll
lock
popf
scas
sbb
fs
pop
jl
dec
daa
mov
dec
cli
lods
data16
arpl
icebp
jmp
and
in
int3
lock
outsb
fs
testb
pop
sbb
mov
or
cmp
aas
jg
movsb
cmc
xor
arpl
test
clc
insb
scas
sahf
aaa
inc
jmp
pusha
cmp
test
movsb
pusha
aad
xchg
arpl
add
or
mov
pusha
outsb
cli
or
pusha
testb
pop
in
lods
and
pusha
mov
inc
into
movb
lea
movsl
aam
ret
jl
pop
imul
loopne
ficomps
or
push
or
pusha
xchg
ret
dec
enter
fs
loopne
test
push
mov
pusha
popf
in
daa
sub
bound
sub
xchg
xor
repnz
add
pusha
or
and
faddl
inc
rcll
outsb
jl
repz
test
inc
dec
mov
cmp
and
shr
cmp
shll
test
push
popa
test
out
hlt
icebp
mov
push
mov
outsl
enter
adc
lods
and
addl
lea
and
jbe
nop
adc
cmp
fnstenv
bound
and
jg
jge
test
jl
mov
scas
scas
xor
jp
adc
clc
dec
fsubs
loopne
jl
insb
dec
inc
stos
mov
pusha
dec
fwait
jmp
mov
cwtl
sbbb
push
xor
bnd
push
lahf
mov
pop
jb
jmp
pusha
xchg
and
xlat
out
pusha
outsl
dec
fisttps
jg
jle
sub
loope
jno
pop
mov
mov
pop
iret
pop
dec
lret
enter
jnp
sti
xchg
add
mov
lahf
mov
jbe
cmp
sub
fldenv
scas
inc
je
mov
outsb
std
rcrb
out
jl
pop
mov
jge
ljmp
jg
out
enter
aas
mov
js
lret
int3
fwait
jo
adc
push
or
idivb
rcrl
sbb
ret
sarb
or
repnz
inc
stos
mov
jmp
inc
sbb
arpl
outsl
mov
jp
mov
imul
movsb
cld
outsb
or
dec
std
inc
push
fiadds
popf
cmc
dec
pop
rorb
adc
xor
sub
mov
mov
ficomps
mov
inc
subb
mov
mov
pop
mov
mov
outsb
push
cld
jge
data16
pop
loope
xor
cmp
pop
divl
or
dec
adc
mov
repz
loop
xchg
stos
pop
loope
xor
out
cmp
notb
dec
cmp
ret
inc
loope
dec
jno
sbb
sbb
push
test
stos
push
pop
pop
mov
loopne
subl
rcl
subl
hlt
adc
pop
aas
push
xchg
mov
imull
stos
scas
inc
or
nop
push
shrl
sbb
xor
cmp
jbe
enter
pop
and
jp
mov
push
fstps
mov
out
hlt
imul
push
fmuls
out
cmp
dec
loopne
xchg
pop
adc
add
sub
xor
pop
lods
mov
ret
fcoml
mov
daa
mov
xchg
jle
cmp
pop
lret
sbb
int
xchg
cmp
and
sbb
push
popa
cld
repnz
mov
jnp
fwait
test
mov
mov
sub
shll
sbb
out
add
jbe
inc
push
xor
pop
mov
sbb
jo
pop
dec
rep
and
xlat
mov
aad
sarl
jne
dec
push
and
xor
popa
lods
fst
gs
cmp
cmpsl
mov
gs
in
pusha
inc
dec
add
lcall
push
divl
subb
stos
inc
rcrl
cmp
jo
sbb
ret
adc
jb
sahf
pop
fidivrs
aad
inc
cmp
cli
ret
pop
in
dec
call
icebp
xor
sub
dec
ret
pop
xor
inc
cmc
mov
loope
mov
or
and
push
pusha
imul
and
ds
dec
dec
or
pusha
les
lock
pop
popf
push
pusha
and
xchg
addr16
dec
pusha
pop
dec
rclb
adc
or
push
lret
push
adc
or
lahf
add
mov
inc
and
mov
pop
mov
cli
xor
cmp
inc
jp
outsb
push
pop
pop
into
cs
out
mov
dec
mov
les
int
arpl
jg
cmpsl
mov
fs
mov
jp
add
fadds
sbb
pusha
int3
and
pusha
xchg
or
or
arpl
add
pop
or
cmpsb
aad
mov
decl
les
xchg
cmpsl
mov
mov
ret
pop
out
pusha
and
stos
push
mov
add
xchg
xchg
jle
adc
dec
fcmovnbe
test
xchg
dec
dec
ud1
sbb
bound
hlt
inc
pusha
popf
insb
mov
adc
aam
out
int
xor
movsb
fwait
sbb
sub
lret
icebp
pusha
inc
and
mov
loop
pusha
mov
adc
test
jl
int3
aas
sub
or
imul
fildll
mov
xor
add
sbb
bound
fsubrp
jno
lods
adc
fnstcw
xor
inc
movsb
xchg
pusha
outsb
aad
cmpsb
xor
sub
sbb
je
mov
dec
pop
jmp
cmp
sahf
fdivl
sub
insb
arpl
scas
cmp
fst
repz
push
and
lock
pusha
gs
jae
fcmovb
pusha
sub
or
push
adc
test
add
jmp
fidivl
add
sarb
xchg
divl
bound
outsb
xchg
mul
cmp
inc
mov
movsb
jno
mov
lret
data16
add
cmc
sti
sahf
pusha
insl
aas
add
stos
dec
nop
or
xor
pop
outsl
jmp
and
sub
pop
aad
jne
xchg
jl
shll
movsl
popa
stos
sbb
cld
dec
das
mov
jg
sbb
mov
scas
pusha
fcoml
rcl
pusha
ss
mov
xrelease
fs
aaa
je
cli
xchg
push
out
icebp
loope
pusha
repz
stos
jnp
mov
mov
fbld
decl
and
push
pusha
dec
mov
lods
mov
push
imul
xor
fldcw
int3
mov
dec
add
xor
add
pusha
cmpsl
bound
pushf
mov
js
xchg
ss
cmp
pusha
cmpsb
jmp
mov
in
inc
insb
mov
dec
arpl
jle,pn
mov
popa
dec
jecxz
push
cmp
sti
sub
mov
pop
ja
inc
movl
pop
fbld
sub
mov
out
pusha
stos
xchg
cmp
mov
gs
mov
sbb
jle
psubb
pusha
jno
push
or
inc
inc
mov
push
enter
cmp
pushf
hlt
cwtl
js
xchg
insb
xchg
orb
mov
sub
sbb
jns
mov
cmp
js
rcll
fwait
xchg
insb
cmpl
loopne
pusha
mov
rclb
in
out
imul
pusha
cli
pop
adc
mov
pusha
sbb
jbe
aaa
xchg
mov
popf
inc
sbb
mov
shlb
jl
cmp
mov
mov
xor
xor
ret
out
rolb
xor
sbb
adc
xchg
adc
mov
pop
push
outsl
ds
cmpsb
loop
mov
pusha
push
lcall
nop
push
xchg
bound
push
pusha
inc
jmp
arpl
add
pop
cmpl
mov
mov
jmp
inc
popl
xchg
push
sbb
adc
in
cmpsl
fistps
rcrb
dec
nop
cmp
inc
insb
cmp
pusha
or
imul
out
xchg
adc
cmpsb
mov
xor
and
push
outsb
in
adc
fstpl
std
add
pusha
sbb
loopne
cmp
lcall
jge
or
jle
jnp
adc
mov
inc
cltd
insb
pop
adc
cld
pushl
std
arpl
icebp
fistpl
in
adc
cmc
cmp
mov
jbe
sub
pusha
xchg
add
movsl
or
jb
rorb
out
cwtl
cmp
xor
adc
bound
call
enter
jo
inc
shlb
mov
roll
in
add
int3
inc
jg
leave
sub
mov
jns
sbb
pop
xor
stos
pusha
push
add
lcall
enter
scas
cs
push
imul
ds
dec
int
dec
test
test
movsb
ss
mov
or
pop
pop
push
lret
push
pop
clc
add
sbb
add
mov
pusha
pop
scas
popf
xor
test
lret
adc
fbstp
addr16
cmp
mov
fwait
sbb
jno
and
in
pusha
stc
pop
ljmp
cmp
jb
iret
dec
out
mov
stc
push
inc
cmp
icebp
repnz
fsubr
jae
pusha
ljmp
sarl
stos
clc
je
sbb
test
pusha
push
add
data16
pusha
xchg
jge
loop
inc
aad
pusha
jg,pt
andl
dec
fisttpl
insl
jnp
pop
mov
out
sub
insb
ljmp
sbb
out
scas
pusha
inc
xor
mov
pop
jmp
jb
push
dec
std
shll
fwait
cwtl
pop
adc
cmc
int
ljmp
jne
jmp
loope
inc
add
adc
pop
pushf
cmp
bound
mov
sub
cltd
stos
jb
ret
push
jbe
pusha
pop
jle
repz
nop
push
mov
pusha
sbb
pop
out
pusha
pop
mov
std
jecxz
mov
sbb
pop
lods
mov
rolb
cmp
fidivrs
mov
pusha
jp
ss
mov
roll
cltd
push
pusha
xor
gs
push
mov
xlat
aam
inc
dec
mov
cmp
leave
jo
aas
add
pusha
fisubrs
imul
push
sbb
aas
pusha
fldenv
in
pusha
orb
rorb
inc
subl
push
sub
inc
adc
pusha
arpl
sub
pop
aaa
pusha
imulb
pop
dec
repnz
jl
or
inc
popa
lahf
and
mov
dec
and
daa
cmp
pushf
cmpl
nop
shrb
test
push
int
mov
mov
jp
xlat
cmp
jns
xchg
adc
adcl
jne
test
ljmp
pusha
ss
sub
push
pusha
lret
xchg
gs
shll
pop
sub
xor
xchg
sbb
jl
incb
shr
into
repz
lret
and
ficompl
jmp
dec
mov
inc
cmpsl
addr16
nop
aas
xchg
bound
sarb
rcll
jno
roll
jb
in
outsb
gs
mov
and
and
jmp
and
loope
dec
cld
adc
push
sbb
sbb
inc
xor
les
into
das
adc
fisubs
sub
imul
in
popf
stos
fistl
pusha
repz
idivb
xchg
adc
loop
lds
cmp
add
in
data16
movb
add
adc
popa
cwtl
enter
jmp
outsb
sar
push
addr16
pusha
es
test
daa
jl
lds
aaa
add
add
lret
xor
mov
mov
sbb
xlat
and
mov
cli
mov
dec
jecxz
pop
inc
xorl
sarb
sbb
jnp
pusha
cli
mov
fimull
mov
stos
sti
inc
jl
inc
xchg
push
inc
and
pushf
dec
popa
mov
sub
pusha
in
loop
mov
push
mov
lds
sub
rcll
hlt
push
hlt
sti
adc
repz
dec
push
and
std
and
cmp
push
jo
test
adcl
and
mov
fbld
push
xchg
fs
orb
dec
cltd
jecxz
xor
cmpsb
mov
loope
in
sbb
negl
lahf
jmp
sbb
cmpsl
ss
push
pop
adc
bound
ret
cwtl
mov
int
pusha
in
ljmp
adc
pop
and
ds
stos
iret
or
push
mov
add
faddl
xabort
xorb
cmp
inc
adc
shrb
push
test
addb
scas
or
or
dec
or
cmpsb
and
cmp
iret
gs
adc
xor
dec
push
sbb
negl
mov
or
sub
xchg
pop
out
fstl
mov
xor
into
ret
aad
fidivs
and
jp
and
cmpsb
stos
jle
cmp
loopne
add
xchg
lret
pop
mov
ljmp
sub
enter
sub
fistl
lock
cmp
ja
sti
jle
rcrb
hlt
cmp
loopne
shll
and
mov
fidivrs
dec
inc
push
out
lods
pushf
inc
and
shl
div
pop
cmpsl
jl
jle,pn
push
xor
fs
cmp
cmp
fbld
movsl
dec
repnz
push
jmp
sbb
jmp
inc
out
adc
lcall
popf
pusha
mov
rep
jge
adc
clc
or
ja
loopne
daa
lea
dec
lret
jmp
fbstp
mov
push
cmpb
push
popa
cmp
push
pop
push
cmp
fs
test
jae
fcoms
gs
sub
xchg
mov
pusha
push
jg
sub
adc
lcall
cmp
push
add
in
jb
xchg
pusha
outsl
loope
lea
jae
jl
fmul
lret
mov
push
pop
push
mov
loope
leave
and
and
stc
add
xor
lcall
jo
loop
mov
mov
lret
sbb
jnp
or
jmp
mov
mov
xor
loopne
outsl
dec
xchg
scas
dec
jle
inc
jl
test
test
xor
lock
pop
jns
and
push
pusha
pop
mov
call
bound
shrb
add
add
out
adc
xchg
adc
int3
pusha
fistps
cmpl
xlat
clc
hlt
iret
in
das
pusha
adc
xor
dec
mov
pop
pop
adc
push
xchg
lcall
std
bswap
pusha
ficoml
or
add
pusha
ljmp
dec
xchg
fwait
sti
pusha
bound
pusha
stos
pop
ret
ljmp
cmp
loop
xor
in
push
insb
jecxz
insb
push
push
pop
bound
shll
inc
and
les
dec
ficompl
and
rorl
je
or
pusha
fistl
xchg
insb
jg
testl
xor
inc
mov
adc
pop
inc
bound
leave
xlat
aaa
add
dec
rcrb
pop
jle
sub
in
pop
mov
dec
aam
hlt
lret
mov
out
pusha
xlat
mov
jns
bswap
mov
xchg
andb
jge
and
je
jl
sbb
popf
mov
sahf
js
inc
cwtl
loop
pop
addb
or
push
pusha
pop
and
fs
mov
inc
test
push
push
int
arpl
test
mov
sub
call
mov
fdivl
and
dec
pop
push
ret
pusha
xchg
dec
test
sti
and
push
ds
bound
xchg
scas
pop
clc
mov
int3
es
rorb
inc
lea
xchg
push
inc
cwtl
cld
adc
and
fistpl
in
arpl
out
sahf
mov
dec
pop
push
and
inc
mov
stos
xchg
and
mov
jp
mov
ret
mov
xchg
xlat
pusha
shrd
mov
pop
dec
test
push
arpl
mov
pusha
loopne
or
sbb
mov
adcl
sub
pop
jp
shlb
dec
and
xchg
ljmp
dec
repnz
and
cmp
adc
jae
loop
adc
fs
das
aas
fistpll
idivb
popa
xchg
sbb
pusha
cmpsb
es
test
inc
pusha
cmpsl
xor
mov
sbb
cli
call
ret
mov
adc
dec
pusha
bound
mov
mov
and
and
pusha
and
or
pusha
scas
call
sub
inc
test
data16
jl
pusha
rclb
sbb
sbb
xchg
in
dec
call
inc
jecxz
dec
mov
jg
sbb
inc
mov
sbb
sbb
inc
ret
mov
mov
cmp
jp
outsb
pusha
divb
pop
test
mov
dec
data16
insl
jmp
xchg
fbstp
push
dec
nop
in
cld
add
adcl
aam
jge
xor
mov
jnp
in
dec
pop
inc
pushf
cld
lahf
fs
out
cli
pop
pop
xchg
stc
test
fs
cmpsb
mov
rolb
dec
push
negb
popf
xchg
icebp
repz
mov
loope
nop
ljmp
mov
cmp
fcmovnb
pop
push
add
shrl
cwtl
int
sub
adc
xchg
fdivrs
frstor
les
sub
mov
cmc
add
adc
stos
mov
popa
nop
inc
push
pop
cmp
loop
in
add
mov
mov
and
cmp
pusha
adc
xor
mov
xor
pusha
fwait
xchg
into
popf
add
repnz
loope
addb
test
inc
mov
lock
pop
shlb
sbb
je
sub
ret
dec
pusha
xlat
popl
test
jl
xchg
orb
popf
pusha
adc
mov
jl
add
sub
push
mov
pushf
pusha
jmp
sbb
test
cmp
mov
jl
insb
and
cmp
lock
pop
fwait
pusha
inc
faddl
shrb
lcall
inc
sbb
int3
pusha
xchg
pop
ret
jb
push
inc
or
pop
idivb
data16
pop
inc
pop
loopne
fisubs
ljmp
pusha
sub
test
pusha
sarb
push
pusha
mov
cs
out
xor
fnstcw
and
xchg
outsb
arpl
movsl
decb
pusha
hlt
subb
push
pusha
cli
mov
cld
loopne
and
cmp
fs
jb
sub
lcall
mov
adc
mov
jbe
orl
clc
nop
dec
pop
or
mov
lret
add
push
popf
bound
sbb
cmp
pop
jle
fnstsw
dec
add
jecxz
cmp
push
pop
fidivs
mov
ret
shlb
jo
arpl
nop
pop
mov
pusha
sub
pop
mov
hlt
pop
add
test
mov
pop
dec
jmp
nop
lahf
lods
stc
pusha
popf
push
adc
bound
xchg
rol
mov
pusha
rclb
insb
lea
adc
dec
enter
sbb
iret
outsl
stc
or
or
aas
in
pusha
push
jbe,pn
js
and
mov
and
and
leave
pushaw
xchg
mov
aam
push
or
faddp
push
hlt
mov
fistpl
xor
popf
ss
pop
insb
insl
push
dec
rcll
addps
loope
inc
arpl
pushf
and
mov
sub
pop
xor
in
cmpl
clc
sbb
push
pusha
ret
dec
jb
test
inc
aam
shlb
mov
and
rorl
mov
ljmp
mov
test
adc
je
and
mov
jle
loope
mov
and
test
adc
and
mov
cltd
dec
sub
push
outsb
gs
roll
mov
pusha
leave
mov
mov
push
and
mulb
jns
xchg
mov
pop
pusha
xchg
and
repz
inc
frstor
scas
or
pusha
adc
out
pusha
xchg
and
outsb
test
add
data16
aas
jecxz
aam
sbb
or
mov
cmc
pop
inc
test
loop
out
inc
hlt
push
pop
movsb
mov
fisubrs
adc
stos
pusha
cmpsl
cmp
push
mov
pusha
and
popa
mov
outsb
loope
pusha
xchg
pop
mov
nop
ret
pusha
xor
addr16
into
pusha
mov
jb
out
pusha
hlt
sbb
arpl
inc
inc
xor
out
jb
xchg
mov
cmp
dec
fcmovbe
idivl
loope
and
adc
popl
sahf
jecxz
push
and
sub
insl
cmp
out
pop
in
cld
or
mov
mov
sub
jmp
mov
push
push
adc
mov
adc
xchg
cli
jle
jl
mov
fsubl
and
dec
sub
aas
je
lahf
jl
int3
jne
fadd
imul
lahf
and
jle
bound
shrl
jbe
push
push
sbb
xor
ret
pop
mov
rclb
inc
jmp
mov
jae
sub
test
sbb
and
lods
inc
int
or
ret
inc
jbe
mov
ret
out
mov
inc
dec
bound
dec
sbb
fwait
and
rolb
mov
xor
mov
mov
in
ljmp
js
inc
cmp
xor
and
cld
mov
pusha
push
sub
pop
xor
ret
daa
or
lock
outsl
xchg
addr16
enter
outsl
pop
dec
loope
fnstsw
int
aas
mov
push
cmp
ret
sahf
scas
bound
jno,pt
push
dec
or
loop
cltd
xor
int
loope
sahf
repnz
xchg
xchg
xor
dec
sbb
mov
loop
push
mov
inc
and
or
push
sbb
notl
filds
adc
cmpb
xor
push
ss
out
leave
mov
push
pushf
je
fisubs
jbe
loope
pop
fiaddl
sbb
or
sar
jle
dec
int
test
push
or
test
mov
mov
mov
inc
and
and
loopne
lret
ret
lods
lds
stc
pusha
call
adc
adc
xor
lret
mov
xchg
xor
inc
cmpsb
cmpb
and
not
and
stos
dec
mov
jns
out
out
sbb
lods
outsb
xor
mov
and
fs
stos
inc
jnp
and
sarl
cs
pop
or
sub
test
outsl
adc
mov
cmpsl
imul
jle
shll
mov
cwtl
xchg
aaa
and
add
and
clc
lcall
rol
fnstenv
cmp
inc
xor
and
xor
xor
push
pop
testl
adc
inc
insb
sti
or
mov
dec
and
push
sbb
ljmp
jmp
stc
ret
or
repnz
mov
scas
repnz
push
inc
shr
mov
ds
mov
ja
pushf
lahf
out
shlb
xor
fs
mov
cmp
sahf
push
insb
ret
mov
pop
mov
lret
jae
pop
dec
inc
add
testl
mulb
cmpsl
pop
xlat
fdivl
xor
pop
outsl
outsl
dec
adc
pop
sub
das
mov
rcrl
ljmp
push
inc
out
dec
adc
mov
addl
cs
jo
sub
stos
sar
out
xor
repnz
xchg
jo
lret
popa
pop
jp
mov
sahf
into
inc
mov
xchg
xchg
cmp
xorl
sbb
enter
add
ret
cld
dec
xchg
movl
es
sub
xchg
jo
mov
hlt
je
add
rorl
test
mov
hlt
ss
pop
xor
add
ficomps
rorb
jnp
fldcw
cmp
inc
lock
sub
add
or
dec
sbb
dec
fsubp
or
mov
dec
cmp
repz
loope
fmuls
fcompl
inc
cld
xorb
loop
sbb
jne
cmpsb
mov
stc
jae,pt
mov
jno
xchg
jmp
mov
dec
inc
inc
or
gs
sub
stos
loope
push
ret
add
mov
mov
jo
dec
dec
addl
outsl
sbb
inc
pop
aas
push
movsb
push
sub
call
jo
loop
es
ja
pusha
jb
data16
cmp
aas
rorl
ret
icebp
iret
mov
daa
inc
jbe
mov
punpckldq
stc
xlat
cmp
inc
lret
sbb
in
repz
jno
stos
js,pt
stc
fstpl
cmp
mov
xchg
fldt
andl
loope
inc
enter
and
cltd
idivl
and
sub
mov
inc
mov
mov
lret
rcll
dec
mov
push
jno
xchg
dec
xchg
lahf
inc
or
fsubrl
cli
adc
cmp
ret
pop
das
jmp
adc
pusha
sarl
pop
jno
lock
lds
jb
cmpsb
sub
dec
mov
jns
pop
inc
mov
stos
add
mov
mul
mov
ret
add
inc
loope
shlb
out
add
loopne
inc
inc
fdiv
cmpsl
repz
jl
stos
lcall
push
loopne
pusha
mov
fsubrl
add
loopne
mov
and
push
and
mov
xchg
fistps
push
add
or
imul
inc
data16
push
xor
pusha
jbe
mov
outsb
pop
dec
xchg
imul
mov
ds
push
sbb
fbstp
into
ret
iret
mov
lods
lcall
rclb
xchg
pop
inc
incl
cmp
repnz
pusha
pop
cmp
sub
cli
sbb
shrl
push
xor
mov
pusha
cs
fldt
ret
cli
inc
cwtl
and
inc
jno
inc
mov
pop
inc
out
mov
scas
xor
inc
pop
pop
jns
ds
lods
push
add
xor
mov
dec
pop
and
popf
ret
imull
ret
lcall
dec
sahf
xor
inc
xlat
add
daa
dec
inc
and
lods
and
cmp
fdecstp
cltd
loop
popa
adc
or
js
cmp
insl
push
mov
pop
fdivrl
and
or
jg
or
int
inc
stc
in
jle
aam
and
or
gs
cmp
dec
sbb
in
into
sub
fnstenv
jmp
loope
jg
mov
pop
and
adc
lock
mov
repnz
push
std
cmc
jp
cmp
in
ret
scas
pusha
in
icebp
scas
movsb
mov
pusha
jnp
mov
push
pusha
cmpb
lcall
dec
mov
loopne
mov
cmp
test
or
adc
inc
push
jl
ficoml
push
repz
jmp
jne
or
arpl
data16
das
imul
push
push
inc
pusha
xchg
lds
pop
pop
xchg
pusha
scas
test
pop
pop
cmpsl
mov
mov
mov
push
cmp
sbb
dec
sbb
cmc
jecxz
pop
pusha
insl
jecxz
mov
pusha
and
ds
jo
cmp
add
jp
inc
movsl
bound
and
lcall
and
test
mov
adc
pop
add
jle
or
rcll
dec
sti
popf
bound
pusha
adc
mov
pusha
in
mov
pushf
mov
mov
adcb
and
pushf
sbb
pushaw
shlb
jl
push
pop
out
and
daa
aas
pusha
mov
cmp
sub
hlt
pop
mov
mov
icebp
fsubs
pop
mov
mov
hlt
test
pusha
shll
aas
sbb
sub
cmc
pop
add
cmpsb
jae
mov
fdivs
sub
jne
stos
pop
ss
pushaw
cwtl
push
mulb
mov
pusha
loopne
mov
and
pop
call
ds
in
add
aas
push
xchg
nop
ja
xchg
inc
pop
sbbb
cld
sbb
bound
fimuls
xchg
pusha
popa
ljmp
sbb
push
cmp
mov
mov
in
and
add
in
movsb
xchg
sub
or
cmp
in
notb
inc
stos
and
sub
enter
in
test
dec
aaa
push
mov
aas
sub
add
fldl
add
jmp
cs
cmp
test
mov
jne
add
mov
jo
mov
mov
mov
std
arpl
pusha
add
mov
pusha
lret
out
or
out
push
sbb
sahf
mov
push
lods
mov
sub
gs
bound
sti
pop
es
jo
je
jne
xlat
pusha
push
outsb
xor
rcrl
xor
lcall
popa
sbb
stos
sti
dec
call
and
rcr
iret
out
pusha
cmp
testb
xor
sbb
imul
dec
lods
jl
mov
iret
shll
cmp
mov
insl
icebp
mov
lea
mov
out
cmp
xchg
fisttps
sbb
out
scas
arpl
mov
xchg
cmp
add
iret
cltd
repz
sub
cmp
xchg
aaa
subl
mov
mov
js
adc
add
cmp
adc
sub
lahf
pusha
or
pop
xchg
pusha
scas
nop
test
xor
mov
inc
pop
in
ss
lahf
je
shll
movsl
mov
data16
pusha
rorb
mov
filds
inc
and
pop
mov
pusha
sbb
fwait
in
test
dec
jae
or
cmp
pusha
ja
mov
repz
pusha
addl
dec
inc
pop
mov
inc
lods
and
mov
pop
and
mov
ljmp
shlb
in
mov
outsb
cwtl
sbb
movsl
daa
add
std
add
sahf
fisubrs
ret
push
cmpl
fdivrs
mov
testb
cmp
mov
jle
jg,pt
filds
movsb
hlt
xchg
pusha
xchg
jecxz
jno
popf
pusha
add
out
mov
int
pusha
je
rorb
dec
sub
push
sbb
out
pop
inc
sub
loope
cltd
jl
mov
addr16
adc
mov
imul
fmul
ret
mov
jecxz
adc
test
addr16
cwtl
pusha
mov
jmp
xchg
arpl
pusha
add
test
sarl
inc
pusha
and
dec
pusha
cmc
jnp
push
pop
ret
mov
pusha
arpl
add
jl
push
test
inc
sbb
cmp
add
inc
mov
loop
lods
fisttpll
or
pusha
jne
xchg
repz
add
fwait
pop
loop
test
pusha
int3
and
jl
fs
sti
cli
cmc
push
movb
pusha
repnz
mov
inc
jge
ja
jbe
outsl
push
xchg
in
xchg
jb
mull
mov
cmp
add
pusha
jecxz
pop
cmpsl
inc
jbe
mov
fisubrl
in
pusha
xchg
rorl
shlb
adc
pushf
pusha
lahf
jns
or
addr16
outsl
jne
pusha
xor
and
push
lret
xchg
mov
xchg
pop
adc
pusha
lret
aaa
je
fs
ds
adc
jo
stos
enter
or
dec
mov
mov
dec
call
inc
inc
cmpsb
cmc
shl
adc
data16
sub
xchg
sub
cld
stc
imul
shrb
push
outsb
mov
jl
pop
jne
jmp
xor
fwait
aas
ret
adc
or
inc
je
lret
push
pusha
movsl
add
mov
adc
in
outsl
inc
jns
push
add
cmpsb
pop
dec
xor
add
test
and
pushf
xorl
jl
fmul
dec
sti
ljmp
inc
outsl
loope
cltd
test
ret
dec
fwait
sbb
les
lret
insb
sub
adc
pop
repz
pusha
cmp
lods
ret
ds
pusha
sbb
mov
xor
sbb
add
mov
scas
sub
mov
jl
mov
inc
push
fs
mov
mov
mov
nop
push
in
insb
pop
pusha
cmp
lock
mov
cltd
mov
lahf
push
idivb
mov
cmp
sub
ljmp
push
pop
jns
call
rorb
push
sbb
sub
or
insb
fwait
inc
les
inc
jp
xor
push
divb
lahf
pusha
shlb
inc
dec
xchg
adc
mov
pusha
out
rcrl
push
add
mov
jecxz
pusha
xchg
jae
sub
push
ret
add
or
pusha
mov
ss
mov
leave
pusha
mov
es
mov
call
sub
pusha
inc
insl
pop
scas
mov
push
enter
jp
gs
cbtw
mov
call
jno
in
or
pusha
mov
sbb
data16
push
jl
xor
shrb
repnz
in
popa
mov
jl
push
sar
sub
xor
shl
rol
or
dec
push
adc
jge
aam
in
sbb
xlat
push
bound
mov
inc
or
cmpl
pop
xor
sbb
pusha
cmp
dec
jo
push
int
pusha
scas
mov
jecxz
mov
pusha
xor
pop
dec
jle
out
pusha
xchg
daa
push
and
inc
jmp
gs
fs
add
add
xchg
imul
cmp
out
adc
jbe
jo
outsb
pusha
std
xchg
mov
mov
lretw
cmp
mov
in
mov
fsts
loopne
xor
and
mov
fs
push
aad
andl
loope
cmp
mov
xchg
insb
stos
pop
jg
sbbl
pop
pusha
nop
bound
or
mov
rcll
and
fwait
in
push
mov
mov
loope
int3
fdiv
push
addr16
mov
jmp
sbb
shlw
fsts
pop
sbb
push
popf
sbb
lock
xor
xchg
mov
ret
js
inc
pop
push
pusha
mov
pushf
cwtl
outsl
xchg
xchg
xchg
sbb
cmp
sbb
pusha
imul
cmp
popa
pop
pop
std
lcall
add
mov
data16
ljmp
xlat
dec
mov
pop
add
push
arpl
lods
mov
out
sbbb
push
cmp
mov
je
pop
dec
enter
xor
fdiv
mov
cmp
int3
out
sub
xchg
outsb
stos
push
cmp
in
mov
mov
test
js
sbb
daa
cmpsl
mov
hlt
repz
cld
jl
jbe
mov
mov
push
int3
jge
jnp
imul
arpl
lds
enter
les
jge
ret
push
movsb
xlat
add
stos
ret
dec
xor
rcrl
outsb
sub
fld
inc
imul
mov
and
sahf
jmp
xor
sti
push
jo
mov
adc
out
divb
aam
imul
movsl
imul
rcll
test
cmpl
rcrl
mov
dec
sbb
jo
mov
pop
xchg
push
addr16
or
jmp
inc
decb
repz
mov
and
fwait
jb
fs
loope
jmp
xor
cmp
pop
xor
mov
sbb
inc
xchg
dec
shld
add
and
push
pop
cmp
repnz
add
and
fists
pop
test
pop
pop
adc
push
mov
ret
push
arpl
jo
xor
lahf
pushf
icebp
push
sub
sub
lret
cmp
iret
and
out
addr16
shrl
lret
mov
ljmp
xor
xlat
gs
xor
clc
call
mov
xchg
jns
inc
nop
mov
mov
jno
popa
jb
adcb
jecxz
ror
pusha
cli
int
cmpsl
or
pop
mov
in
jns
pop
scas
ret
dec
xchg
insb
dec
bound
loope
add
ret
out
sbb
rorb
lret
add
xchg
into
dec
or
push
dec
mov
outsl
cmp
xor
jno
jle
pusha
sbb
xor
inc
cmc
jle
ds
xchg
and
cltd
cmp
xchg
cmp
xchg
loop
mov
imul
invd
inc
aam
adc
les
mov
sbb
jns
imul
sub
pushf
sbb
insl
mov
adc
and
cmp
nop
and
and
add
fnstsw
jns
push
pop
xchg
test
fwait
pop
aaa
dec
adc
pop
push
in
adcb
daa
mov
adc
addr16
cmp
popa
iret
mov
push
mov
adc
push
popa
pop
das
minps
pusha
popf
sahf
ds
mov
jnp
or
aas
fucomip
data16
pop
popf
leave
jecxz
sub
cmpsb
pop
add
push
cwtl
divl
mov
shll
test
fisttpl
mov
pusha
mov
mov
push
loope
xchg
bound
fisttpl
pusha
xchg
mov
or
ss
mov
mov
pop
push
add
pusha
mov
loopne
shlb
mov
jo
jmp
add
pusha
loopne
in
and
gs
shl
mov
rcrb
jns
fpatan
push
test
hlt
xchg
adc
add
pusha
scas
shlb
decb
xchg
insb
inc
js
push
inc
ds
out
mov
rorb
in
pusha
cmp
popf
push
dec
xchg
orl
adc
jl
sahf
lds
and
add
dec
in
pusha
and
call
adc
mov
stc
xor
mov
mov
dec
xchg
fcom
xor
push
dec
shlb
push
add
pusha
cmpsl
gs
mov
pusha
mov
andb
movsl
or
sbb
xchg
push
adc
popa
idivb
pusha
arpl
push
sbb
cmp
shl
xchg
bound
push
pop
xchg
cmc
outsl
fs
addr16
daa
jnp
adc
mov
das
or
jb
mov
clc
add
aad
add
fisubl
mov
mov
insb
push
aam
cmp
xor
dec
arpl
popa
mov
fneni(8087
mov
dec
pusha
insb
sahf
ret
mov
test
mov
jmp
or
pop
pusha
add
add
imul
pusha
sub
dec
jg
outsl
mov
aas
sbb
mov
ret
adc
mov
sub
push
in
push
pusha
mov
ja
test
and
dec
jle
outsb
shlb
push
cmc
inc
xor
xor
outsb
lcall
or
fs
cmp
stos
insb
cmp
test
call
loope
sub
frstor
jne
xchg
sarb
lahf
daa
inc
rolb
xor
cmp
mov
push
sub
adc
ret
dec
sbb
push
add
bound
mov
mov
in
call
test
sbb
pop
shll
xchg
daa
dec
arpl
and
dec
cmp
cmp
loop
xor
dec
and
jle
mov
push
jnp
lds
test
in
sti
enter
xor
cli
pop
call
and
outsl
jne
arpl
in
pandn
test
cltd
gs
push
lcall
sarl
loope
jle
adcb
mov
jg
dec
mov
dec
adc
inc
inc
shr
xor
pop
aaa
mov
mov
mov
in
or
outsb
insb
inc
sbb
jecxz
add
ret
push
xlat
xorl
dec
jmp
sub
dec
loope
jge
add
iret
hlt
xchg
mov
sbb
mov
ret
mov
adc
cmpb
pop
cs
sub
cld
jnp
bound
dec
daa
int3
or
pop
lret
xor
xchg
aad
dec
ds
js
jl
arpl
inc
xor
bound
ret
aad
push
ficompl
add
xchg
xor
iret
jb
ficoml
in
jg
shll
mov
mov
dec
ret
jbe
jne
sub
sahf
sbb
call
fwait
push
sub
push
outsb
mov
shll
pop
leave
xchg
push
mov
mov
insb
ja
inc
gs
aas
pop
leave
push
and
hlt
push
jno
shrb
sti
test
xchg
mov
cmpsl
sahf
insb
imul
push
inc
xchg
pop
outsl
and
mov
pop
jg
xor
sbbl
nop
xlat
mov
or
xor
lret
xchg
test
cwtl
insb
inc
lret
jle
ja
stc
test
loope
test
mov
ret
ja
inc
pop
sub
adc
fmul
arpl
jg
or
cwtl
xchg
dec
lods
mov
movsl
pop
mov
and
push
adc
cwtl
lea
fst
and
inc
inc
push
push
dec
inc
cmp
arpl
lcall
into
push
xor
aas
and
pusha
and
fucom
lret
icebp
push
jb
lahf
jecxz
and
pusha
in
inc
xlat
xor
loop
push
cld
lea
adcl
pusha
sub
xor
xor
addb
test
mov
xchg
push
jbe
andl
scas
mov
sbb
push
adc
dec
push
mov
outsb
loop
fs
enter
pop
repnz
je
insb
loopne
push
lods
lods
scas
and
aaa
pusha
aad
push
adc
hlt
jl
ljmp
or
pop
dec
pusha
mov
stos
jnp
es
pusha
push
add
adc
in
adc
insl
pop
lahf
xor
pushf
orps
fwait
sbb
or
mov
jno
popa
cmp
lds
xor
sbb
pusha
jne
dec
jecxz
inc
pop
adc
mov
mov
or
cmp
xor
xor
popa
hlt
xchg
pop
pusha
or
and
gs
xlat
push
and
cmp
aad
insb
rsqrtps
pop
inc
add
adc
dec
jl
cmc
mov
pusha
data16
jbe
fnstsw
mov
pusha
pop
pop
mov
fsubl
push
call
inc
adc
and
pop
shlb
daa
test
jp
pop
lcall
lea
mov
js
mov
xor
add
pusha
mov
loop
or
mov
insb
adcb
sbb
xor
test
inc
xchg
xchg
shll
lret
cwtl
mov
push
sbb
retw
inc
sarb
pop
sar
dec
je
aas
sbb
jo
jae
and
inc
mov
or
fildll
hlt
ficompl
pop
mov
sbb
inc
inc
bound
bound
ja
xor
rcrb
daa
sub
stos
dec
cld
fnstenv
pusha
jb
sti
cmp
mov
push
push
jno
rolb
pop
scas
pusha
nop
dec
int
dec
pusha
mov
sbb
out
pusha
or
notl
and
inc
cli
push
xchg
add
and
sahf
cwtl
xor
jno
xor
in
pop
leave
jb
mull
mov
adc
adc
xchg
outsl
dec
ds
push
lret
gs
cwtl
or
or
sub
mov
lret
adc
lock
fnsave
movsb
in
jl
cmp
js
push
rol
pusha
cltd
xchg
xor
mov
adc
push
insb
addr16
push
pop
iret
jae
pushf
insb
mov
inc
push
xor
loop
insl
or
pop
xlat
shll
sub
cld
adc
ljmp
mov
pop
rclb
cmpsl
mov
xlat
cli
fldt
pusha
xor
inc
sbb
xchg
jb
pop
cmp
pusha
shll
adc
pusha
mov
sbb
push
test
mov
sub
xchg
cmp
sbb
testl
mov
mov
jno
xchg
sub
mov
xchg
pusha
cmp
jb
and
add
scas
mov
pop
pusha
push
push
mov
or
jne
ficomps
les
push
fs
dec
insb
mov
aaa
jae
in
add
fcompl
aam
sub
arpl
gs
notl
int3
outsb
movsl
leave
mov
mov
fwait
jae
hlt
jge
popa
xor
dec
adc
sub
inc
dec
lret
mov
insl
loopne
add
push
xor
mov
jo
in
or
push
pop
or
xor
xor
bound
dec
aam
in
pusha
test
lret
and
stc
fdivrs
jecxz
adc
lds
adc
xchg
cmpsw
push
and
xlat
xor
jo
sbb
aam
lahf
pusha
jbe
mov
adc
push
jecxz
mov
cmpl
fs
jne
out
insl
and
push
sub
add
xchg
pusha
arpl
pop
mov
testb
sub
jle
andb
arpl
push
adc
xchg
roll
jns
mov
fwait
xor
xor
jae
inc
mov
pusha
mov
ss
lods
bound
jo
dec
imul
or
jbe
repnz
gs
adc
cmpsl
xchg
testb
cmp
loope
or
mov
movl
sub
sub
lcall
mov
lcall
mov
mov
scas
push
outsl
and
out
pop
dec
and
stos
aaa
loope
fsubrl
sbb
pop
jbe
aam
iret
inc
shrl
jo
mov
pop
add
sbb
inc
adc
inc
es
add
ret
nop
xor
dec
or
test
shll
int
sbb
scas
das
mov
mov
mov
sub
sub
cwtl
outsb
icebp
cld
xchg
loopne
leave
imul
fwait
ret
aam
xor
push
push
xchg
mov
and
xchg
jo
inc
mov
jno
add
or
dec
rep
loope
mov
daa
cltd
repnz
xor
sub
je
and
xor
pop
ret
es
jmp
call
mov
clc
mov
mov
jbe
fs
sub
cwtl
test
imul
jb
bound
cmpsb
sub
imul
dec
push
jge
push
outsb
cmpb
mov
jmp
cmp
xchg
lock
fs
push
cmp
mov
fildll
movsb
mov
pushf
adc
mov
inc
ss
pop
testl
adc
push
mov
inc
daa
je
jae
jmp
scas
enter
mov
inc
cmp
add
ja
xchg
xchg
dec
sub
pop
jae
cmpsl
clc
push
sub
arpl
test
enter
adc
and
jne
mov
sub
icebp
jle
mov
cmpsl
movsb
ret
sbb
data16
inc
rolb
add
sbb
jp
sub
into
in
test
shr
cs
or
xor
int3
sub
push
mov
dec
fst
add
sub
and
into
add
jae
dec
ret
iret
mov
inc
dec
mov
into
sahf
test
pop
or
mov
adc
scas
adc
fidivl
and
adc
mov
add
xchg
fwait
cli
enter
aaa
or
cmp
jmp
test
xchg
xchg
adc
and
popa
or
ret
xlat
add
xchg
lret
jo
xor
xor
aad
fbld
jbe
repnz
jg
pusha
sahf
ds
mov
inc
dec
in
add
stos
xchg
cmp
xor
sub
shll
inc
outsl
faddl
cmpsl
pop
mov
bound
cmc
mov
pusha
mov
cli
mov
mov
bound
fnstenv
icebp
int
inc
lea
or
mov
dec
insl
push
je
call
cmpsl
test
inc
repz
out
arpl
xorb
or
add
jl
js
out
jl
sbb
lods
dec
clc
lcall
push
or
lea
dec
mov
xchg
add
data16
les
cli
test
in
out
lret
mov
jp
add
and
inc
jae
fisttpll
loop
push
iret
rcrb
test
push
arpl
ds
jno
mov
adc
pusha
mov
lret
inc
add
ja
jl
stos
int
sub
test
imul
jnp
mov
xchg
or
in
jno
mov
cmc
cmp
test
jg
mov
pushf
pop
bound
add
test
cmp
pop
mov
dec
lock
inc
adc
xchg
lea
fnstenv
insb
push
sti
pop
leave
popf
clc
pusha
cwtl
mov
mov
pusha
sbb
cmp
push
leave
push
arpl
lds
push
or
jmp
pusha
mov
jecxz
iret
ficomps
imul
push
shlb
fidivrs
aas
movsb
fists
pusha
pop
jmp
dec
adc
and
inc
pusha
test
je
adc
lret
jo
sbb
loop
sbb
adcl
jl
test
sub
dec
ljmp
pop
pusha
and
lahf
adcl
bound
push
jecxz
aaa
add
out
test
cmpsl
pusha
sub
mov
push
pusha
lcall
push
pop
sbb
fbld
inc
andb
push
dec
mov
ret
xor
repz
mov
outsb
mov
cli
cmpl
xor
sbb
arpl
xor
mov
fildl
add
mov
xorl
inc
imulb
pusha
add
pop
into
or
dec
ret
sahf
pusha
lods
int3
iret
lcall
jge
jle
add
outsl
xor
inc
sub
fcmovnb
loop
sbb
loope
adc
mov
inc
mov
icebp
inc
hlt
jle
jae
ss
cmpsl
xchg
aad
loop
nop
ret
xchg
jb
or
xor
pop
stos
pop
mov
and
sbb
shrl
cmpsl
jge
pusha
addr16
jbe
mov
add
mov
arpl
stos
cwtl
pusha
push
push
mov
jnp
or
fs
dec
xchg
shl
ret
arpl
pop
xchg
push
loope
icebp
repnz
xor
pusha
xchg
lahf
addb
mov
movsl
pusha
mov
loopne
punpcklbw
pop
sbb
add
push
mov
ret
adc
ss
out
aam
ret
clc
lret
pop
fisubrl
push
movsl
jg
pop
loopne
cld
pusha
in
popa
imul
push
js
outsb
adc
leave
or
pop
pusha
or
roll
dec
fwait
mov
loope
cltd
pusha
xor
leave
movsl
sahf
jl
mov
aas
push
shr
sbb
xorl
xchg
pop
scas
int
mov
or
xchg
jo
iret
insb
push
ss
mov
addr16
adc
pusha
movsb
mov
bound
hlt
xchg
xchg
ss
xor
sbb
push
pusha
shrl
loope
pusha
jecxz
lahf
mov
xchg
sbbl
add
fs
sbb
sbb
fsave
pusha
std
sbb
into
jo
test
push
mov
inc
pop
jns
rolb
mov
xlat
pop
cmp
loopne
pop
movsb
stos
mov
mov
ret
xlat
pop
mov
bound
cmp
das
or
inc
jno
pushl
and
lods
shrl
repz
xchg
pop
inc
or
xchg
lret
dec
stc
and
adc
inc
lea
psubusw
xor
pop
xchg
lahf
fwait
sub
fnsave
data16
popa
fnstcw
push
push
stos
aaa
popa
call
sbb
adc
push
adc
test
sub
sbbb
sbb
arpl
xor
jae
dec
sub
out
pusha
fmuls
xchg
push
push
sub
and
and
mov
ss
inc
out
jo
es
lahf
mov
cmp
mov
loopne
lds
mov
sbb
mov
addr16
push
outsb
shl
outsb
fisubl
sbb
movsb
repz
mov
add
pusha
or
xchg
sbb
pop
addr16
adc
jne
xchg
test
std
addl
mov
stc
test
insb
xchg
in
sub
addr16
add
cmc
jae
and
mov
sbb
rcpps
cmp
dec
scas
nop
lcall
cmpsl
inc
fs
iret
js
fidivl
orl
xor
out
insb
xchg
add
dec
dec
pusha
mov
mov
enter
pusha
sti
mov
jmp
pusha
inc
cld
data16
kmovb
mov
cltd
add
pop
insb
adc
notb
push
xchg
pop
push
or
movsl
inc
rcrl
insb
mov
idiv
scas
iret
adc
sarl
leave
aad
into
and
pusha
pxor
dec
mov
repz
pusha
rcl
or
xlat
jmp
sub
into
mov
pusha
fdivl
mov
jno
dec
insb
lods
fldenv
sub
pusha
movsb
aad
and
ret
inc
mov
insl
in
pusha
xchg
and
jp
clc
jl
xchg
mov
push
pop
iret
mov
enter
test
pop
andl
jmp
xor
xchg
xchg
aaa
pop
xchg
test
bound
push
push
dec
mov
dec
aad
insl
mov
mov
out
mov
mov
je
sub
sub
mov
outsb
idivb
cltd
xchg
lods
pusha
dec
es
push
sub
pusha
fcomi
ja
and
sbb
mov
pop
add
sub
jp
adc
sbb
sub
fwait
cmp
push
fistpll
pusha
push
pop
push
aaa
subl
and
pusha
int
cmp
xchg
adc
stc
jg
add
pusha
push
call
push
pop
pushf
cmp
jbe
and
fisubs
pop
xchg
or
dec
jo
cmp
jnp
fldenv
and
or
fs
or
pop
mov
imul
les
push
nop
pop
and
xchg
into
push
bound
arpl
ret
in
mov
xchg
out
loopne
outsb
orl
out
jns
jecxz
push
push
mov
add
pusha
out
or
lock
mov
out
inc
ret
push
adc
add
jne
sbbl
in
or
mov
mov
das
rcrb
rcll
push
hlt
pop
push
fs
xchg
sub
int3
sub
test
xchg
sti
faddl
pusha
cmpsb
sbb
notb
scas
dec
fs
fisubrl
insl
fndisi(8087
adc
pop
xorl
add
sub
xor
mov
pusha
and
pop
inc
aam
pusha
call
xchg
mov
push
sub
aad
xor
insb
pop
pop
dec
pop
mov
jl
movl
pusha
xchg
push
sbb
daa
in
lods
xchg
push
out
jo
and
fbld
add
dec
xchg
cmpsl
cmpsb
push
fwait
pop
lea
pusha
dec
std
inc
mov
jmp
lahf
int
sub
push
hlt
std
adc
insb
movsl
mov
jae
int3
pusha
jmp
sbbl
cwtl
dec
rep
cmp
inc
jl
test
lcall
fs
orl
or
shlb
add
in
jl
es
mov
pusha
outsl
dec
insl
in
out
lods
cmp
mov
fs
pop
push
push
je
loope
movsl
aaa
std
pusha
xchg
inc
shl
push
and
int
outsb
push
push
scas
jbe
lods
xchg
pusha
cmp
lock
mov
sub
popa
cmp
or
dec
sub
addl
js
jns
pusha
dec
loop
add
inc
div
jo
rorb
nop
in
outsl
jl
mov
jno
iret
ret
sti
cltd
cmp
ret
mov
inc
mov
icebp
lahf
out
ss
ret
es
sbb
pusha
dec
add
sub
pop
aas
addl
int
leave
sti
andb
jg
stos
pop
lcall
pop
add
daa
pusha
dec
lock
scas
mov
pusha
clc
cmp
inc
gs
insb
inc
xor
add
fisubs
shl
xchg
sbb
mov
das
mov
pusha
mov
es
lcall
stos
dec
daa
xchg
insb
das
int
repnz
ret
icebp
pusha
std
adc
push
imul
jl
fistps
xor
popf
dec
insb
in
mov
adc
mov
mov
sahf
cmp
xor
pusha
stos
cli
nop
xchg
loope
repz
mov
jo
adc
movsl
std
and
and
lods
scas
sbbl
out
test
mov
mov
les
aas
loope
mov
test
insb
out
in
mov
outsl
cmp
cmp
jl
ds
mov
pusha
je
cmp
fs
cmpsl
adcl
fidivrs
pusha
cwtl
pop
in
push
jb
outsl
adc
adc
and
nop
inc
cltd
imul
or
scas
loope
push
adc
jb
pusha
js
xchg
and
mov
push
aam
lret
and
lods
imul
adc
pop
jle
aas
pusha
pop
setbe
dec
push
push
test
or
and
jne
movsl
xor
inc
data16
jo
enter
xor
pop
mulb
and
sub
add
pusha
push
pop
dec
sbb
dec
pushf
ret
scas
add
push
pusha
jge
sub
add
leave
dec
sbb
and
dec
imul
repz
add
repnz
inc
cmpsb
ret
mov
popf
sti
pop
lret
call
fistpl
pusha
cmp
enter
pop
lret
sbb
insl
das
iret
test
call
pop
sub
loopne
je
inc
popa
add
cmp
les
mov
pop
jns
sbb
out
pusha
xorb
jg
pusha
jmp
dec
out
pop
pusha
mov
adc
repz
mov
push
test
sbb
bound
cmpsb
pusha
add
adc
stos
sbb
jne
popa
fstpt
fisubl
dec
pusha
mov
mov
lock
and
jecxz
push
fxch
and
pusha
not
dec
lcall
pushf
mov
pop
mull
dec
xchg
dec
mov
sbbb
or
xor
xchg
stos
lds
sub
mov
inc
mov
and
mov
aas
fisubs
aam
out
lea
fistl
pusha
add
mov
xchg
cli
subb
repz
xlat
adc
xchg
hlt
ss
in
adc
lods
popa
shlb
popf
or
pusha
jo
and
adc
daa
mov
mov
cltd
loopne
pusha
mov
sbb
xor
pusha
test
push
inc
or
je
pusha
mov
adc
or
push
or
dec
mov
imul
mov
outsl
test
pusha
xor
ret
negl
mov
out
sub
xchg
shll
or
push
inc
dec
sarl
outsb
sub
xor
sub
adc
dec
dec
add
inc
mov
shl
call
mov
jg
cmpsb
add
and
sbb
cltd
sub
out
addr16
fldcw
loope
jecxz
test
push
inc
lret
and
jb
pop
push
loope
and
cmpsb
inc
data16
nop
popa
gs
or
insb
and
aad
xchg
sbb
addr16
jnp
arpl
sbb
xor
inc
pop
mov
arpl
fisttps
adc
xor
daa
dec
xor
fists
mov
into
xchg
faddl
mov
mov
repz
ret
aam
out
jns
mov
test
lahf
popa
jp
dec
push
lret
dec
bound
push
xlat
mov
stos
inc
popa
pop
lret
or
push
adc
sub
adc
mov
pop
mov
mov
mov
ret
sub
mov
mov
or
sbb
jne
dec
dec
xlat
xchg
or
jge
sti
les
cli
mov
adc
cmp
sub
or
stos
inc
pusha
pop
and
ljmp
pusha
je
jp
push
xchg
sahf
add
jns
mov
jo
sti
sbbb
mov
sub
push
nop
xor
bound
xlat
jns
pop
jg
xchg
iret
add
sbb
lock
aam
stos
or
les
dec
enter
jbe
mov
fs
sub
std
xchg
fwait
scas
dec
fwait
das
test
jle
inc
mov
nop
pop
push
imul
push
repz
mov
pusha
lret
fidivrl
outsb
lss
sub
mov
dec
pusha
pop
fidivs
fstl
divb
jb
aad
repnz
mov
xchg
iret
hlt
push
sub
repnz
sti
aaa
dec
clc
xchg
ja
hlt
lds
inc
dec
push
cmc
xchg
sub
jne
sub
xchg
cld
je
ret
xor
jecxz
pop
out
ftst
mov
mov
lds
inc
push
xor
mov
sub
pop
adc
inc
test
or
xchg
ja
in
xchg
cmp
inc
push
adc
inc
mov
icebp
pop
pusha
lahf
bound
outsb
dec
mov
nop
adc
pop
mov
jmp
pop
das
stos
ret
mov
cmc
and
adc
loope
cwtl
jb
daa
inc
sbb
cmp
dec
sub
mov
or
insb
sarl
pop
inc
out
push
and
mov
jns
test
jecxz
jbe
pop
jp
sub
fwait
dec
sbb
add
jne
cmpsb
sub
hlt
pop
jae
dec
mov
popa
test
add
fcomps
mov
ljmp
sub
scas
pusha
mov
fists
push
inc
cmp
xor
pusha
or
cmp
push
sbb
clc
cmp
jmp
adc
insb
inc
in
test
and
pusha
int
or
cs
mov
add
sub
and
mov
imul
into
rorb
ret
cmc
cmp
xchg
sub
or
xchg
and
sbb
dec
enter
arpl
push
clc
dec
ds
fs
daa
dec
and
mov
pop
xor
xchg
jg
dec
sbb
cmpsl
ljmp
fs
mov
dec
leave
mov
mov
mov
outsb
hlt
ret
sbb
movsl
mov
lds
ret
loope
pusha
filds
fdivr
xor
bound
scas
pusha
pop
sbb
sub
pop
push
xchg
jge
loope
stos
popf
dec
xchg
cld
fldenv
pop
movsb
int
fildl
shrb
push
mov
jne
xchg
pop
pusha
cwtl
lret
jp
imul
mov
mov
pusha
xchg
sbb
sbb
pushf
inc
test
sub
aaa
push
pusha
loopne
or
push
lret
cmp
adcl
je
cld
jg
mov
pusha
pop
out
jmp
fisubrs
das
pushf
jle
out
iret
sbb
pusha
pop
or
stos
inc
push
inc
outsb
mov
inc
sub
adc
pop
xor
xlat
inc
lcall
jl
xchg
lahf
sub
arpl
fsts
xor
ljmp
mov
imul
inc
mov
lret
inc
outsb
insb
scas
and
sbb
andl
cmp
sub
push
xchg
les
or
shlb
sti
dec
nop
lahf
mov
aaa
push
iret
loope
or
rol
shr
cltd
mov
or
inc
fsts
cld
mov
and
dec
fwait
pop
xor
inc
dec
sbb
sbb
enter
aas
loopne
jl
sub
repnz
popf
outsb
loop
stc
ror
jle
loop
jne
je
lret
cld
add
lahf
stos
ja
aam
test
and
repnz
rorb
push
and
pop
addb
push
ret
test
inc
dec
daa
xchg
mov
ret
mov
dec
mov
inc
add
loopne
sbb
sbb
and
mov
push
mov
mov
add
mov
scas
in
dec
popa
dec
cld
hlt
es
add
ficompl
mov
dec
scas
gs
lock
and
pop
or
adc
cli
mov
lret
pop
jecxz
mov
incl
mov
rcrl
push
adc
cli
cli
adc
push
in
mov
addr16
bound
ret
or
cmp
push
mov
pop
mov
jge
pop
in
daa
xor
divl
cwtl
jnp
adc
sbb
lods
mov
in
enter
into
jmp
aam
scas
xor
xchg
fistl
mov
shll
inc
popf
sub
cmpsb
dec
mov
jb
popa
sub
scas
fs
orl
cmp
and
fisubl
aaa
push
ret
ja
mov
jp
pusha
pop
iret
jns
loope
cmp
dec
ret
xchg
xchg
insb
shll
retw
mov
fdivrp
dec
mov
hlt
jae
mov
mov
push
aaa
outsl
out
popf
nop
push
pusha
in
dec
test
fcmove
clc
sbb
push
sahf
pusha
jns
mov
in
cld
popa
cwtl
pusha
call
dec
inc
mov
dec
pop
pop
cs
jecxz
ds
cmp
pusha
daa
pop
mov
jmp
sbb
rolb
pusha
xchg
and
inc
pusha
aad
out
shrl
adc
cmpsb
xchg
add
test
pusha
rol
and
int
fsubl
jnp
pushf
sub
sbb
paddw
aaa
sbb
jl
jmp
pusha
stc
loope
xlat
movsl
sub
js
xchg
pop
xor
cs
pusha
mov
stos
sbb
pusha
jp
loopne
jno
pop
sbb
jl
adc
pusha
push
stos
cld
or
fwait
daa
pusha
ljmp
in
pop
pusha
ja
xlat
data16
cmp
fwait
into
inc
inc
mov
clc
inc
and
add
out
mov
fs
clc
lock
fdiv
mov
jns
cmp
or
std
pop
lahf
pop
aam
test
pop
dec
dec
mov
pusha
cs
notb
mov
lret
sub
cmpsb
cmp
sbb
fwait
xchg
pusha
and
into
cmp
push
sub
or
jo
dec
or
pusha
jmp
aam
mov
xor
mov
pop
push
mov
popf
push
mov
lcall
insb
push
faddl
fdivrl
xor
shl
sbb
repnz
sbb
mov
shl
mov
addl
imul
call
lahf
into
cs
and
add
int3
pushf
scas
xor
inc
add
arpl
sbbl
adcl
nop
insl
inc
pusha
fsubs
xlat
pop
inc
push
pop
pusha
dec
fxch
jmp
fisubs
adc
mov
negl
popa
out
loopne
cli
fcompl
popf
sbb
das
outsl
xor
inc
or
xorl
cld
mov
clc
jmp
ficoml
loopne
cwtl
pusha
lret
pop
or
cmp
xor
cmpsb
loop
mov
popa
push
cwtl
push
ds
in
in
cmpb
stos
sub
add
enter
cld
pop
cmp
rcrl
pusha
adc
xchg
dec
xorb
cwtl
inc
xchg
and
mov
lcall
inc
shll
shlb
xchg
jno
adc
fdivl
mov
ds
ret
je
into
jmp
inc
aam
sub
pushf
inc
xlat
add
cwtl
jae
adc
ret
into
mov
insb
pusha
adc
xchg
xchg
fbld
and
aas
and
jb
pusha
jnp
dec
aam
mov
nop
adc
pusha
fimuls
jp
frstor
or
mov
add
mov
cltd
mov
shl
lea
xchg
repz
insb
aaa
mov
sbb
jge
pop
dec
icebp
cmp
mov
sahf
pop
mov
sti
sbb
aaa
xor
xchg
add
int
mov
mov
lret
clc
mov
out
aam
test
hlt
pusha
in
loopne
pop
lods
fildll
jae
fcoms
aam
pusha
cs
stos
loop
loopne
aas
sbb
or
scas
lock
int
ljmp
bound
and
test
push
pop
jecxz
shll
enter
lods
mov
movsb
das
jnp
aam
push
cmpsl
pop
lea
fisubs
gs
xor
jg
lea
arpl
pusha
test
addr16
sbb
jnp
fnsave
adc
aad
pop
shll
mov
or
jb
fidivrl
test
xor
test
add
lret
mov
push
push
sub
int3
maxps
cmpb
lahf
xor
xchg
pusha
mov
clc
cmp
push
push
fs
mov
dec
inc
xchg
aas
popf
add
sub
scas
popa
into
scas
and
test
stos
fcmovnu
mov
pusha
shlb
insb
js
repnz
arpl
std
mov
lret
jecxz
mov
test
idivl
je
sbb
repnz
mov
arpl
std
cld
dec
jnp
mov
pop
ljmp
out
add
sub
or
pusha
gs
lock
ljmp
and
jecxz
pop
cmp
mov
pusha
outsl
jo
mov
pop
sbb
push
insl
arpl
adc
push
mov
or
dec
and
jp
mov
outsl
outsb
clc
mov
fsubrs
xchg
xor
inc
lahf
sub
cmp
outsb
pop
lret
push
adcb
pusha
add
sbb
cmp
pusha
mov
push
cmpsb
or
insl
sbb
adc
pmulhw
cwtl
cld
pusha
dec
adc
frstor
xchg
push
iret
aaa
push
es
test
out
xor
test
mov
cmp
pusha
pop
das
inc
xor
loop
pusha
fildll
fstps
in
mov
xorl
xor
imul
xor
xor
cmpsl
pusha
cmpsb
pop
fimull
pusha
add
mov
outsb
movsb
aad
mov
mull
or
jns
mov
push
pusha
jne
mov
xchg
sbb
popa
jo
add
lcall
hlt
js
lahf
loop
cmp
into
fimuls
imull
cwtl
outsl
shrl
mov
test
lock
push
cmp
pusha
and
pushf
movsb
sub
mov
aam
add
pusha
or
push
movsl
push
cld
iret
pushaw
and
adc
xchg
fidivrl
mov
outsb
pop
or
cmp
mov
adc
xchg
pop
bound
mov
sub
int3
dec
insb
andb
xchg
pusha
jg
fcmove
rclb
popf
repnz
notb
mov
xchg
adc
sbb
pusha
xchg
or
mov
sbb
mov
cmp
dec
lods
adc
jmp
sahf
imul
push
cmp
jno
scas
pop
ret
test
pop
xor
stos
pop
pusha
stos
gs
out
cmp
pushf
pusha
pop
xchg
movsb
sub
xor
pusha
cmpsl
push
xor
ret
lea
xorb
push
into
dec
nop
xchg
loop
bound
enter
or
and
push
mov
mov
adc
cltd
sub
test
shr
jmp
out
sbb
cld
loope
cmp
push
dec
fisubs
push
add
sbb
inc
loope
pusha
jo
inc
js
pusha
mov
pop
jae
add
push
lea
lock
jl
inc
mov
repz
xor
cmc
pop
js
hlt
push
pop
pusha
add
dec
scas
cmpsl
fwait
jg
mov
inc
lock
insl
adc
ret
ljmp
mov
xchg
int
pusha
inc
cmpsb
mov
pop
ds
test
xchg
loop
jl
mov
mov
data16
pusha
mov
jns
xchg
ja
mov
insl
pop
mov
lret
mov
fucom
push
ret
pusha
lcall
xchg
inc
in
dec
xchg
shlb
mov
pusha
jns
mov
pop
xchg
push
mov
add
fs
repnz
sub
jl
add
dec
pop
ja
sbb
cltd
adc
aad
pop
jns
in
jecxz
loope
xor
pusha
mov
push
and
imul
das
shlb
imul
jl
roll
dec
push
je
cmp
jle
loop
jnp
mov
fadd
sbb
or
pusha
cld
icebp
int
ja
les
adc
popa
out
xchg
jb
pusha
jno
js
bound
mov
push
xchg
test
pop
and
jge
mov
iret
xlat
or
cmp
sub
cwtl
dec
sub
mov
cmp
mov
add
push
ret
sub
pop
inc
movsl
into
aam
and
ds
add
jo
in
mov
push
das
inc
fidivl
mov
or
lahf
cmp
and
mov
sub
cmpsb
xchg
ret
dec
mov
push
insl
scas
ret
fwait
outsl
or
add
pop
cmpsl
int3
aam
mov
frstor
daa
sbbb
cmp
lods
mov
add
fld
mov
scas
je
inc
adc
je
add
loopne
adc
popa
inc
or
loope
lahf
icebp
sbb
sbb
rcr
mov
inc
push
sub
xchg
inc
inc
and
aad
pop
push
cwtl
insl
inc
mov
clc
sub
shll
xchg
cltd
xchg
cmpsb
mov
push
pop
sbb
pop
sbb
mulb
adc
imul
daa
pop
sub
dec
push
iret
in
cmpsl
pop
mov
adc
scas
into
or
sahf
pusha
hlt
rcrl
pop
cmp
out
jl
shlb
pusha
jge
scas
cmp
sbb
jae
or
imul
lret
repz
testl
xor
scas
xchg
aaa
pusha
in
movsb
push
std
mov
sub
sti
js
jge
and
ror
sbb
sbb
bound
ficompl
les
pop
cwtl
mov
cmp
sbb
daa
lret
fdivs
jmp
inc
sbb
push
jno
jae
rorb
jl
mov
jle
aas
test
inc
pop
das
test
push
mov
mov
out
add
cmpsb
add
mov
stc
pusha
push
shll
fsubrl
mov
popa
mov
push
clc
pushf
loop
sbb
rcl
pop
adc
and
adc
popa
stos
jns
adc
ja
cltd
pop
lods
pop
mov
fcmovnb
popf
negl
ret
outsb
lret
push
std
movsl
xlat
ffreep
mov
mov
push
and
pusha
lcall
push
cltd
inc
pusha
outsb
sub
jns
xor
cltd
ja
jb
jno
inc
cmpsl
add
shrl
stos
push
xchg
pusha
repz
pop
sub
inc
negb
pusha
in
jno
insb
cwtl
cmp
pusha
fs
jns
adc
shll
cmp
mov
and
lret
sub
mov
jns
pop
fisttpll
mov
movsb
jl
hlt
push
mov
pusha
lcall
cmpsl
pusha
xor
fldcw
insb
lea
xor
sbb
xchg
test
mov
adc
pop
dec
dec
mov
popa
bt
ret
adc
sub
push
or
jp
pusha
mov
rcl
inc
ret
ja
push
pop
loop
inc
fwait
mov
pusha
lods
inc
inc
scas
cltd
arpl
jbe
loope
mov
push
ja
mov
enter
push
scas
repz
sti
or
mov
call
addb
in
insl
popa
clc
xchg
pop
push
pusha
and
test
sub
ja
pusha
push
push
shll
push
dec
fnstenv
cli
lock
pusha
jne
psllw
jg
mov
mov
mov
mov
and
jmp
enter
imul
int3
push
inc
mov
mov
push
insl
test
xor
pop
or
dec
loop
insb
nop
mov
test
cltd
jnp
sub
add
lods
fldl
pusha
xlat
shll
sahf
bsr
insb
in
push
stc
push
outsl
pop
pusha
repnz
add
lea
in
adc
xchg
mov
add
push
pushf
jbe
negb
cmp
mov
xor
scas
pusha
addr16
xchg
add
in
dec
pusha
dec
stos
hlt
fisubrs
addb
pusha
add
push
pusha
pop
icebp
mov
cmp
leave
imul
fwait
cltd
pusha
push
sbb
pushf
push
js
ret
popf
mov
adc
in
mov
push
jle
adc
pop
iret
lods
mov
test
xchg
cmp
repz
cli
dec
cmpsl
aam
mov
pop
jle
arpl
fwait
lods
jne
mov
inc
jecxz
dec
jmp
scas
mov
xchg
cli
pusha
jns
lods
sub
js
inc
xchg
and
pusha
jno
loope
xchg
fcoml
pusha
lret
rcrb
lds
addl
cmp
mov
jecxz
dec
jnp
cs
sbbb
mul
jecxz
dec
sbb
enter
aaa
pusha
daa
jns
test
loop
fiadds
bound
outsl
enter
mov
and
shl
xchg
sbb
cltd
lods
add
aas
fistl
and
push
ljmp
and
xor
sub
icebp
bound
or
test
mov
or
fsubs
sbb
push
ret
das
add
dec
fdivl
insb
bound
pusha
imul
sub
test
daa
xchg
ret
fwait
mov
and
cwtl
sub
mov
fistl
cmp
pusha
xchg
mov
ss
mov
pushf
sbb
es
xchg
jno
xor
push
icebp
lods
cmpsb
pusha
sbbl
repz
pusha
call
pop
or
int
int3
movsb
dec
pop
pop
std
pusha
dec
cli
jnp
push
faddl
pop
nop
jge
jecxz
inc
rcrb
pusha
and
dec
pop
fistps
popa
aaa
jbe
dec
pusha
out
mov
cmp
dec
xchg
aas
je
call
jp
and
cmp
xor
dec
lcall
push
adc
shll
inc
inc
les
test
push
xorb
sbb
cmpl
pusha
pop
cltd
lock
push
inc
dec
movb
mov
repz
adc
pushf
jmp
xchg
push
bound
fsubs
scas
iret
jno
pusha
into
test
mov
pusha
dec
daa
and
mov
iret
jge
cmp
ret
push
sti
call
insb
mov
into
add
dec
sub
shll
mov
jbe
or
fidivs
das
aam
push
sbb
jl
addr16
push
xor
inc
push
gs
inc
scas
iret
pop
repz
pusha
mulb
sub
mov
jb
mov
sbb
pusha
xor
mov
iret
mov
fidivrs
vfmaddsub213ps
pop
fldl
xchg
fsubp
sub
aas
xor
adc
pop
mov
loopne
divl
pusha
loope
std
stos
ja
fs
pusha
sub
movsb
add
sub
sbb
mov
out
push
jo
jp
pop
movsb
out
rorl
sbb
mov
outsl
mov
and
imul
jmp
rol
stos
into
pusha
push
add
sub
cld
sbb
sub
icebp
mov
out
gs
jne
inc
sbb
mov
mov
rcll
lret
mov
je
fs
lcall
int3
fisubs
scas
das
sbb
mov
push
push
or
cmpsl
mov
push
sti
push
fisubs
pop
loop
jns
push
xchg
aaa
pusha
in
cmp
pop
xchg
sbb
stos
push
out
xchg
ss
test
push
jnp
out
xor
lcall
push
shl
stos
lock
outsl
pusha
jae
cmc
sbb
mov
pusha
fcoml
insl
or
cwtl
sbb
dec
mov
add
pusha
and
stos
test
cmpsl
and
dec
jl
jmp
push
xorb
jmp
ret
inc
mov
mov
jl
xor
cmp
mov
push
sub
in
sti
arpl
xchg
clc
out
mov
pusha
ja
dec
dec
xchg
sahf
pusha
int
jl
in
shlb
pop
dec
add
lret
dec
jae
pusha
cmpsl
push
loopne
stc
add
pusha
jno
aaa
jmp
ret
dec
xor
mov
lods
data16
push
bound
pusha
aam
sub
sti
pusha
outsb
in
jp
mov
decl
fsubs
jmp
es
je
ret
inc
mov
adc
jnp
call
scas
inc
pusha
xchg
std
xchg
jne
repz
add
push
pusha
mov
jno
int3
outsl
cmp
cmpsb
dec
ljmp
mov
cmp
jbe
push
adc
rcll
pop
pop
xor
and
mov
xchg
push
jle
mov
popf
mov
in
add
mov
push
dec
mov
cmp
outsb
sub
dec
add
mov
jb
mov
scas
frstor
ret
mov
pop
out
jg
outsb
pop
sub
lds
fsub
sar
pusha
cmc
vmovups
movsb
cli
inc
push
sbb
push
mov
jl
sti
test
lret
ds
mov
lds
cmp
mov
fs
cmpsl
jl
or
jae
jb
mov
mov
sub
jb
subb
pop
sahf
mov
adc
mov
jmp
mov
inc
sub
popl
int3
mov
mov
push
bound
jecxz
mov
aaa
xchg
fdivrl
and
out
cmp
jmp
arpl
dec
xchg
add
sub
jg
xchg
push
add
sub
subl
pop
push
mov
pushf
fwait
sub
cmp
add
lret
dec
add
scas
bound
lods
dec
mov
mov
jmp
mov
pop
arpl
ret
dec
mov
insb
add
sbbb
and
int3
scas
sbb
adc
imul
int3
jbe
sbb
pop
out
fldt
inc
roll
sbb
xor
loope
sbb
pop
stos
pushf
dec
ret
movsl
push
addr16
jg
sub
lods
mov
pop
dec
push
ljmp
pusha
scas
scas
cmp
stos
mov
ds
rcrl
scas
jp
jle
push
popa
or
adc
ljmp
sbb
arpl
fadds
mov
mov
push
stc
jbe
mov
mov
mov
test
dec
and
lretw
pop
ret
jns
mov
dec
xchg
dec
and
sbb
daa
lcall
jl
push
xlat
aas
ss
loop
inc
out
dec
add
jmp
inc
aaa
movsl
aam
call
cmp
adc
dec
loope
sub
ss
jo
sub
ja
ficoms
insb
mov
jl
add
mov
mov
invd
shrb
mov
fistpll
das
sbb
xchg
enter
insb
sbb
aam
je
imul
inc
cmp
mov
bnd
fstps
or
push
in
lahf
pop
and
adc
lcall
push
or
ret
cld
mov
imulb
jbe
mov
xor
adc
cmp
inc
insl
and
xor
es
in
cmp
cld
icebp
ja
ret
pop
mov
cmp
or
repz
inc
js
push
mov
popa
in
test
into
fwait
mov
rcll
add
jl
fildl
sub
aam
roll
fsubp
cmp
pop
dec
pop
xor
out
shll
xor
sahf
out
cwtl
fidivrl
fcoms
dec
sub
xchg
shlb
xchg
repz
ret
xchg
pop
xchg
mov
movsl
and
sarl
les
stos
xchg
jmp
mulb
sbb
adc
fstpt
pop
inc
popa
mov
and
and
dec
xchg
fmulp
repnz
dec
gs
jp
into
mov
lahf
call
loop
inc
push
lahf
hlt
repz
sub
lret
and
or
or
aam
pop
inc
dec
jae
or
outsl
loop
lahf
out
fsubr
mov
mov
jnp
push
pop
mov
mov
xor
repnz
rcrb
adc
inc
cmp
enter
mov
loopne
push
inc
adc
das
inc
mov
xor
xor
jb
stos
je
subl
aam
cmp
add
and
jmp
sbb
dec
stos
aad
loope
pop
add
imul
add
push
xchg
xchg
mov
imul
xor
mov
xchg
jb
pushf
addr16
repnz
jnp
addr16
push
imul
jl
pop
rorl
xorb
pusha
insb
std
sar
shll
pusha
test
mov
adc
adc
and
fdivrl
movsb
roll
sti
pushf
adc
andl
push
or
ljmp
pusha
mov
push
test
and
inc
pop
pop
mov
push
sbb
das
add
sbb
jbe
sbb
sahf
loop
pop
cwtl
inc
jecxz
movsl
inc
sbb
mov
ja
arpl
and
pusha
gs
loope
dec
int
sti
cmp
addl
pusha
inc
inc
rolb
and
mov
mov
lret
add
repnz
pusha
call
xchg
xchg
jb
fsubrl
pusha
mov
lret
or
mov
sbb
fsubl
xor
mov
scas
dec
cmc
pop
push
sbb
lds
nop
fwait
cwtl
sti
outsb
out
nop
sbb
inc
ret
aam
jae
cwtl
jmp
mov
sbb
xchg
jmp
pop
arpl
mov
aam
ds
or
push
pop
pop
dec
inc
sub
shlb
jl
or
ds
mov
in
jp
push
notl
insl
xchg
mov
and
adc
bound
xchg
add
iret
xchg
push
push
mov
jo
fucom
mov
movsl
js
xor
stc
out
rolb
pop
pop
or
bound
or
shrl
push
sbb
icebp
pusha
ss
xchg
push
push
and
pop
stos
mov
popa
sbb
sbb
xchg
fisubrs
sub
cmp
pop
pusha
xchg
sbb
and
mov
cmpsb
gs
testl
mov
xor
lds
and
aas
insb
shl
cmpsb
adc
flds
push
les
insb
and
sbb
stos
call
lods
lcall
repz
pop
mov
xchg
cwtl
shlb
xlat
cld
push
pop
insb
xor
and
mov
pop
mov
faddl
lret
loopne
pop
adc
push
leave
push
xchg
pop
pusha
cs
arpl
movq
or
loope
pusha
leave
js
mov
fists
lods
pusha
in
xchg
mov
cmc
adc
or
dec
add
insl
add
sub
sub
xlat
or
xchg
adc
add
xor
bound
hlt
cmpsb
data16
and
cltd
data16
inc
jae
or
mov
pusha
xchg
test
clc
in
leave
aam
shlb
mov
mov
shll
dec
mov
jl
mov
lods
scas
popa
inc
inc
into
sbb
jl
sub
je
pop
punpcklbw
int
adc
jnp
arpl
jl
mov
insb
mov
pusha
mov
stos
inc
adc
not
jno
adc
cltd
mull
stos
out
pusha
pop
adc
fiadds
push
push
lret
adc
pop
inc
cmp
mov
lods
inc
mov
cmp
mov
fiaddl
xchg
test
xor
sbb
lar
addr16
sbb
les
lods
pop
adcl
adc
movsb
xchg
jle
pusha
imul
mov
clc
test
pusha
loopne
add
xchg
negl
sub
push
jecxz
popf
rcrl
pusha
and
cwtl
filds
adcb
sbb
shr
xorb
cmc
dec
lock
out
add
mov
adc
adc
or
jl
pusha
std
dec
outsl
ss
in
cld
into
arpl
lock
xor
xchg
aas
out
pusha
dec
insb
or
cmp
movl
xchg
pushaw
repnz
loope
int
sarl
jmp
pusha
pop
add
dec
push
fcomps
cmc
sbb
fs
and
add
pusha
lret
jae
pop
fists
sub
enter
push
cmp
arpl
hlt
pusha
push
pop
sbb
shrl
cmpsb
mov
scas
push
adc
xor
lds
pop
fs
jp
jge
push
add
mov
xor
fwait
mov
mov
ja
sbb
jl
jb
ljmp
pusha
pushf
mov
daa
sbb
pusha
and
fnstenv
pusha
out
popf
ss
push
sub
jnp
in
insl
fwait
xchg
mov
cmp
pop
out
and
pop
and
inc
data16
inc
leave
fcom
cmp
mov
xchg
pop
push
cmpsl
sti
fs
int3
imul
xor
mov
mov
clc
xor
mov
pop
xchg
dec
xchg
addr16
xchg
loopne
js
cmp
cmpl
xchg
out
jmp
add
frstor
lods
lahf
dec
pusha
fldt
dec
es
cmc
mov
pop
mov
in
sbb
and
rcl
xchg
icebp
lret
aas
cmp
pop
xchg
sub
pop
adc
mov
adc
jge
mov
pop
xorl
mov
nop
inc
push
xchg
sbb
and
out
scas
pop
mov
pop
dec
push
jb
xchg
scas
jl
arpl
adc
andl
std
mov
bound
jbe
add
sti
fsub
jecxz
jo
push
insb
out
les
je
sbb
rorb
jmpw
push
mov
pusha
mov
popf
insb
mov
add
mov
pusha
mov
mov
add
rolb
dec
pusha
xor
insl
xor
fs
lods
decl
mov
loope
outsl
pusha
mov
adc
push
add
pusha
or
add
fs
pushaw
idivl
or
imul
cmp
sti
dec
fistl
add
and
dec
fs
in
dec
in
cmp
sbb
repnz
xchg
adcl
jno
cmpsl
dec
mov
cmp
loope
dec
jl
sub
leave
cmp
pusha
outsb
sbb
sbb
in
pusha
cmp
movsl
xchg
push
repnz
pusha
jp
xor
sbbb
xchg
bound
nop
insb
cmpsb
cmp
jl
mov
pusha
fcoml
add
pusha
add
stos
xchg
test
adc
or
dec
lds
xchg
push
xor
lcall
mov
lods
pop
adc
out
bound
ret
sti
dec
or
add
loop
jl
inc
adc
test
sub
inc
or
xchg
pusha
and
in
iret
dec
jmp
cwtl
jno
mov
mov
cmp
int3
mov
repz
sub
mov
pusha
push
ret
loop
pusha
ds
mov
add
sbb
fmuls
xor
mov
pusha
pop
lds
pop
inc
xor
push
dec
pusha
fstpt
int
pusha
nop
aam
addl
inc
adc
mov
pusha
xchg
pop
mov
add
addl
ss
mov
pushf
pushf
mov
lret
movsl
jbe
sti
mov
aad
and
les
mov
loope
prefetch
or
add
clc
fs
es
and
xchg
jp
pusha
cmp
cli
fldt
push
inc
push
xor
dec
mov
flds
ljmp
pusha
mov
pop
lret
dec
inc
imulb
test
mov
add
jb
xchg
jle
xchg
lret
cmc
push
lahf
subl
mov
js
mov
and
fadds
xchg
lahf
sbb
pop
faddl
or
sbb
mov
and
dec
adc
loopne
fisttps
xchg
xor
pusha
sbb
das
ret
cmpsl
or
sub
mov
or
xchg
fcmovnb
mov
adc
into
jmp
imul
or
sub
push
adcl
xchg
cmp
inc
enter
xchg
es
inc
sub
into
lock
or
fs
outsb
dec
push
in
mov
mov
shrb
imul
arpl
jb
lods
dec
mov
and
mov
dec
repz
cmp
scas
int3
cmp
gs
inc
lods
add
mov
push
lcall
pop
lea
or
push
dec
jnp
fisttpl
cwtl
pop
and
add
cmpsl
sbb
jle
push
mov
pop
stos
and
mov
imul
xor
push
push
test
ja
nop
ror
movsb
adc
dec
sarb
ss
ljmp
pushf
into
dec
push
insb
mov
insl
pusha
mov
add
stos
push
add
pusha
mov
ret
jnp
push
pusha
or
sbb
dec
pusha
popf
inc
mov
icebp
sbb
inc
push
ljmp
scas
clc
ja
addr16
test
jno
andb
cmp
insl
mov
fists
cmpps
inc
int3
andl
mov
test
add
xor
rcrb
cmp
into
fisubl
scas
and
cmp
or
cld
lds
mov
lret
je
cld
jl
or
jns
add
or
jb
ficoml
push
xor
arpl
popf
lods
ljmp
mov
jo
xchg
shlb
mov
sub
enter
pusha
cmp
aaa
adc
aas
sub
fs
les
call
pop
sub
and
fcmovb
test
xchg
jmp
xchg
pop
jecxz
mov
loope
in
mov
shrd
cmp
cmp
dec
jno
cmpsl
stos
sbb
pusha
push
lret
popa
addr16
daa
out
pop
mov
pusha
fwait
jo
adc
jb
loopne
pop
shrl
sbb
inc
sub
and
test
imul
popa
addb
mov
bound
xchg
loop
fcompl
cmp
rcrl
popa
xchg
jo
pop
mov
push
ficomps
out
lds
inc
ret
jmp
popa
data16
in
sbb
out
hlt
clc
scas
add
outsb
mov
xchg
lods
maxps
jne
adc
and
pusha
inc
rcrl
andl
mov
xchg
ja
lret
push
push
loope
mov
stos
xchg
nop
jle
sbb
cmpsl
sbb
ss
mov
repnz
das
mov
jl
sbb
xchg
jecxz
cmp
cmp
decl
imul
add
aas
jg
fsubrl
jnp
dec
cmpsb
test
jae
pusha
cli
popf
sahf
ret
hlt
mov
or
push
cld
enter
jge
pop
repnz
es
addr16
push
pusha
xor
test
not
cmpsb
push
arpl
nop
and
push
adc
sarl
xchg
inc
pop
cld
leave
and
popa
sahf
pop
sub
icebp
mov
jbe
mov
loopne
mov
imulb
ljmp
in
ret
adc
es
ret
inc
fsub
add
sbb
scas
ss
into
aaa
cltd
push
sbb
scas
dec
xor
xor
or
andl
fidivl
mov
cmp
stc
sahf
in
bound
bound
fs
and
sahf
mov
mov
pop
imul
stc
pop
mov
sub
mov
mov
cmp
icebp
sahf
popf
sub
test
cld
shl
sub
pop
jl
mov
sub
shll
cmp
enter
jp
aaa
xchg
sub
hlt
leave
xchg
ret
mov
lock
js,pt
repnz
movsl
cmp
gs
jne
lret
outsl
xchg
outsb
add
sbb
ret
xor
sub
and
cs
xor
pop
pop
dec
scas
jae
cmpsb
pushf
or
dec
arpl
mov
mov
ljmp
scas
sub
loop
add
scas
jp
sahf
mov
lret
jnp
cltd
enter
inc
outsl
js
ljmp
fstl
stos
loopne
mov
les
movl
into
bound
mov
div
aas
mov
in
addr16
add
jo
sbb
inc
in
rclb
and
ljmp
and
sub
cmpsl
sahf
gs
pop
pop
mov
sbb
add
jne
int
mov
es
inc
test
ja
jno
sub
lret
mov
cmp
inc
cmp
add
out
or
andl
sahf
shrb
insl
cmp
cmc
or
sahf
or
and
test
test
lahf
push
testl
push
adcl
sbb
jge
adc
mov
xchg
ds
in
imul
loope
jb
hlt
push
rcll
dec
jno
sbb
adcb
out
jne
loope
add
hlt
push
xor
dec
orb
std
mov
ret
mov
mov
dec
mov
cmc
mov
rol
xchg
push
stc
fisubrl
insb
sahf
adc
cmp
xor
out
ret
nop
pop
outsb
xchg
add
in
lret
jecxz
cmc
pop
and
and
bound
push
orl
mov
fisttpll
lcall
mov
xchg
push
cmp
cmp
mov
mov
pusha
es
cmc
int
test
pop
aaa
insb
fadd
xchg
dec
add
lahf
sbb
adc
adc
jo
pop
insl
adc
repnz
mov
sub
push
xor
add
pop
das
xchg
incl
pop
mov
fs
jecxz
out
cmpsb
or
out
push
or
jl
shll
pop
sub
inc
sbb
cmpsl
lods
inc
loop
xchg
popa
js
fimull
add
or
inc
pop
loope
add
aam
hlt
movsb
jae
data16
and
popa
lds
add
jae
adc
xchg
popf
mov
push
push
and
jae
lcall
hlt
in
and
in
add
jno
xor
ror
and
insl
adc
pop
clc
jp
push
jl
push
push
mov
or
ret
push
ss
and
add
mov
jne
ficoml
rol
cltd
push
dec
ret
jmp
sub
mov
repnz
mov
cld
inc
test
das
clc
je
cmp
andl
or
filds
jno
in
rcr
stc
jo
ret
fdivrl
es
lods
jl
mov
popf
jmp
mov
jb
sahf
fwait
sub
lock
cltd
call
jns
cmp
mov
cmpsb
mov
sbb
arpl
add
clc
inc
rclb
popa
push
cmp
loope
popf
and
fldenv
ficoms
pop
inc
test
cmpsl
arpl
adc
popa
arpl
ret
jbe
jnp
stos
mov
test
adc
repnz
sti
sub
iret
jmp
cld
insl
repz
div
mov
mov
push
scas
mov
lods
repnz
nop
pop
lds
faddl
push
inc
data16
mov
mov
test
or
and
outsl
nop
jle
orps
pop
push
xor
add
sbb
shl
out
inc
ja
loop
inc
mov
jbe
hlt
in
in
inc
inc
dec
ret
stos
or
mov
mov
js
ret
lods
fs
fisttpl
mov
adc
cld
adc
fcomip
or
scas
sub
hlt
movsb
push
in
sub
hlt
std
and
jge
repz
dec
jge
addr16
clc
mov
mov
jae
sti
daa
inc
cmp
out
rolb
adc
pusha
cmpl
inc
aas
and
fs
mov
pop
fdivrl
push
dec
fcoms
insb
xorb
ret
dec
mov
cwtl
cmp
jecxz
stos
leave
arpl
mov
lret
scas
push
sti
mov
test
shll
mov
loope
add
js
leave
dec
aas
add
fwait
push
cltd
shlb
outsb
jo
fs
adc
and
loope
xchg
push
test
xchg
xchg
and
mulb
xor
and
inc
mov
sbbb
sbb
dec
repnz
ljmp
fs
hlt
aam
imul
fwait
in
push
jecxz
push
mov
add
or
lahf
fstp
lret
pop
int3
dec
pusha
add
xchg
decb
fstpl
dec
call
sbb
into
dec
pusha
pop
jo
icebp
testl
push
fwait
adc
mov
aam
sbb
pusha
stc
push
mov
out
fnstcw
sub
fcmovne
xchg
lcall
adc
adc
lahf
sbb
pop
mov
pusha
mov
popf
push
inc
cld
add
xorl
xchg
scas
cmp
pop
and
data16
jg
subb
clts
lcall
frstor
push
inc
add
fistps
sbb
jb
rcrl
inc
jecxz
fs
dec
dec
repnz
stc
fs
mov
pop
data16
inc
jecxz
iret
popa
push
cmp
xchg
jmp
nop
clc
mov
jmp
or
adc
mov
cmp
fisubs
adc
add
push
push
jecxz
mov
pusha
ret
jnp
jge
std
and
inc
sub
nop
mov
pusha
bound
adc
or
fadd
out
pop
push
push
arpl
movsb
ja
adc
cmpsb
popa
out
push
jno
mov
inc
inc
popf
inc
cmc
fnstsw
pop
in
enter
pop
popa
mov
lods
mov
fiadds
cltd
shrl
sbb
xor
jg
daa
je
fdivrl
add
mov
filds
and
jecxz
xchg
sbb
scas
packuswb
or
adc
xor
pusha
push
movsb
dec
sbb
inc
xchg
js
xor
lods
insb
mov
push
inc
push
mov
mov
lret
stos
dec
pop
lods
push
fs
popa
mov
out
push
pop
pop
cmpsl
lcall
scas
outsl
xchg
adc
add
pop
xor
dec
jecxz
mov
cld
arpl
sbb
jae
clc
dec
lret
mov
pusha
mov
mov
in
pusha
in
cltd
ljmp
pusha
mov
rcr
adc
xchg
jmp
imul
push
testl
andb
pop
push
add
mov
pusha
or
mov
lods
inc
bound
out
xorl
popf
push
aam
jmp
pop
mov
repz
into
xchg
jecxz
pushf
aas
pusha
lahf
fwait
lret
jno
xor
sbb
aaa
bound
push
jbe
lcall
das
mov
inc
lods
ss
jno
js
shll
xor
das
adc
pop
xor
not
pop
or
pusha
add
out
in
push
sbb
and
mov
fwait
cltd
push
test
mov
scas
pusha
xchg
pop
fsubrs
addb
pusha
lret
cld
or
and
rorb
pusha
outsb
pushf
mov
dec
loopne
addr16
jns
mov
lret
jne
pop
sti
inc
jbe
arpl
xsave
dec
jmp
xlat
push
loope
pusha
cmc
push
rcrb
les
cmpb
lcall
ret
jecxz
jl
and
xor
adc
add
inc
push
add
mov
dec
xchg
cmp
fildll
jae
mov
bound
pop
jo
dec
lret
outsb
mov
cmpsb
mov
rcrl
xchg
push
mov
fsubl
jae
cmp
sub
sti
inc
pusha
push
push
pop
xor
mov
pop
push
mov
add
adc
stc
add
ret
mov
pop
fwait
push
push
ficompl
arpl
xchg
pop
mov
cmp
notb
push
je
test
dec
xchg
sub
loopne
inc
adc
push
adc
push
pop
xchg
pop
jnp
or
mov
adc
mov
sbb
mov
std
push
sahf
jl
sub
xchg
and
call
mov
lcall
push
push
xchg
ja
lock
popa
xchg
sbb
push
rcr
idivb
inc
out
xor
or
xchg
push
lcall
ret
repz
fbld
pop
lahf
lret
mov
daa
sbb
mov
aam
in
fsubs
sub
ljmp
push
loope
sbb
jo
cmp
fisubrl
dec
sbb
add
inc
xchg
je
ljmp
xor
repnz
cld
leave
sub
popf
sub
int3
popa
mov
jge
and
add
loope
scas
adc
lea
in
dec
arpl
lret
test
stos
ret
adc
das
inc
into
mov
popa
jp
dec
push
inc
xchg
inc
push
dec
pop
cmp
loop
pop
aaa
xchg
xchg
pop
or
mov
push
xchg
adc
repz
mov
mov
testl
jmp
jbe
mov
cmp
ds
lds
scas
ss
mov
sti
push
dec
push
cmp
stc
jge
and
movsl
xor
sub
xchg
inc
inc
pop
adc
push
jo
mov
mov
fcom
cwtl
addr16
ret
test
cmp
push
stc
jbe
push
fildl
pop
jae,pn
imul
int
pop
imul
add
cmp
push
cmp
inc
lods
xor
lcall
fstpt
aam
xchg
into
inc
shr
jle
cmp
cli
jmp
je
stos
mov
and
cltd
pop
sub
cs
pusha
pop
arpl
cwtl
insl
lret
movsb
aaa
cmp
inc
pop
xor
rorl
out
fdivr
mov
inc
mov
jp
fnstsw
loope
rcr
lock
sub
js
pop
add
jae
inc
inc
pusha
rol
cmp
daa
inc
sahf
shll
repz
fstpl
sub
and
cmp
mov
add
jge
cld
xor
adc
cs
inc
daa
push
and
sub
inc
push
inc
dec
add
cld
lock
adc
addb
imul
xchg
ret
aad
sahf
pusha
sbb
das
ljmp
dec
mov
popa
out
bound
pop
iret
sbb
xchg
jns
popf
jg
scas
pusha
mov
icebp
aad
test
outsb
lcall
out
mov
je
loopne
mov
pop
out
mov
add
jecxz
adc
pusha
jbe
out
and
js
cmpsb
pusha
inc
addb
pop
pusha
sub
test
cmp
sbb
pop
loopne
sbb
mov
cmp
andl
and
ja
add
rcrl
push
mov
out
iret
insb
add
pusha
and
cmp
pusha
data16
jno
cmc
sbb
sub
pop
xor
jg
adc
stc
mov
dec
movsl
cmpsb
sub
popa
scas
mov
push
cmp
xor
cmpb
jmp
in
dec
std
test
cmp
fs
jl
jl
mov
cmp
cmpsl
lcall
pop
loope
ds
sti
fldenv
hlt
mov
mov
fnsave
lcall
mov
mov
jge
push
xor
lods
fs
jbe
test
cmp
push
jl
dec
pusha
lock
lods
pusha
mov
dec
mull
push
push
xor
adc
mov
bound
jno
shlb
adc
pushf
add
int3
leave
dec
adc
repz
lcall
arpl
scas
icebp
out
jle
cld
pusha
pop
out
pop
push
aad
outsl
pusha
in
int
arpl
imul
xlat
mov
nop
mov
mov
push
inc
cli
push
adc
aas
fs
daa
lock
mov
or
mov
mov
jl
aaa
jp
hlt
jl
pop
pop
mov
dec
mov
sub
dec
pusha
mov
push
mov
pusha
sbb
andl
pusha
pop
mov
pushf
mov
hlt
cli
mov
mov
cltd
jg
into
mov
sbb
mov
or
pusha
stos
mov
inc
push
mov
imul
mov
xchg
adc
loope
and
icebp
shlb
pusha
xor
inc
mov
pusha
lret
push
lret
push
add
pusha
outsb
rcl
fnstsw
xor
jg
cmp
sbb
mov
sub
and
push
or
jno
fidivs
je
pop
mov
sbb
adc
push
or
loopne
popa
adc
aas
pop
mov
addl
inc
cwtl
rcll
adc
mov
aad
outsb
jge
pusha
or
fnsave
pusha
pop
test
xchg
pusha
add
call
lahf
pusha
aas
popf
out
xchg
mov
push
hlt
ss
xorl
fbstp
jb
pop
ret
shrl
pop
iret
jnp
fs
push
mov
mov
je
fisubrl
xchg
shll
icebp
leave
mov
mov
cli
enter
orl
jns
outsl
cmp
xchg
pop
cs
daa
shlb
fmull
add
ds
pusha
mov
inc
lods
lahf
lret
js
fwait
jmp
xchg
std
je
and
mov
addr16
mov
inc
mov
mov
data16
lret
lods
rep
pusha
dec
xchg
mov
jmp
stos
inc
call
cmpl
lahf
movl
push
jle
and
test
stos
dec
and
andl
adc
cltd
jp
mov
xchg
adc
sub
dec
lds
xor
xchg
mov
cs
sub
push
push
adc
mov
add
or
lret
pop
js
movsl
test
popa
pusha
push
lds
push
xchg
addb
and
sub
pop
xor
popa
das
inc
es
test
aas
or
adc
cmpsl
out
mov
mov
jno
data16
out
mov
fs
or
cmpsl
or
adc
shlb
jo
mov
add
mov
xor
cld
fs
mov
in
push
mov
dec
jno
push
popa
mov
mov
pop
mov
ror
jg
jo
cmpsb
dec
sub
sti
jl
sbb
add
loop
bound
jl
xchg
movsb
cld
and
enter
pop
cmpxchg
popa
arpl
sahf
loop
jle
mov
xorl
push
pusha
addr16
out
xchg
aad
mov
adc
cmp
jne
and
int3
xor
insl
or
call
push
mov
nop
neg
jl
push
mov
arpl
xor
pusha
sub
xor
pusha
cmp
js
lret
mov
test
ja
pop
cmpsb
rorb
add
stos
fsub
xor
std
and
pusha
lds
mov
cmp
cmp
jo
and
popl
iret
bound
inc
movsl
pusha
shll
frstor
mov
mov
pusha
adc
or
fiaddl
pushaw
mov
mov
int
or
pusha
or
inc
inc
adc
jl
mov
pop
sbbb
sar
cmp
jecxz
jecxz
jno
mov
mov
inc
out
lods
arpl
and
or
add
pusha
dec
ljmp
pusha
inc
xchg
jg
leave
divb
pusha
jno
movsb
jae
imul
arpl
mov
jnp
push
add
mov
cmp
sub
xchg
popf
pusha
dec
adc
in
mov
imul
fidivl
xchg
imul
fstl
loop
mov
or
mov
cld
add
mov
and
ret
movsb
test
pusha
xor
fidivrs
sbb
push
frstor
add
adc
decl
sub
fs
arpl
and
into
outsl
pop
jns
cltd
jae
lea
lret
enter
pusha
or
dec
and
pusha
test
divl
sbb
or
hlt
sub
test
sbb
fistpl
adc
out
loop
cwtl
xchg
pusha
rcr
cmp
je
and
pusha
outsb
push
pop
dec
and
daa
sti
mov
push
insb
js
sub
inc
call
scas
push
and
ds
stc
notl
dec
mov
sbb
fstp
jno
fimull
sub
sbbl
mov
mov
pop
adc
cld
sbb
icebp
adc
mov
xor
or
test
mov
popf
bound
aam
test
rclb
outsb
nop
push
pop
pusha
cltd
mov
mov
or
mov
test
jbe
push
pop
dec
pusha
mov
pop
adc
jns
sbb
test
movd
sbb
sub
push
or
js
adc
inc
push
push
in
inc
cmpsl
xchg
mov
sub
iret
fldenv
dec
sahf
add
fdivrs
mov
jnp
sti
fdivr
repnz
push
pop
fwait
outsb
mov
pusha
popa
inc
xchg
pop
lahf
and
mov
out
incl
in
loopne
pop
cmp
test
and
add
pop
popa
pop
ficompl
test
and
push
pusha
out
adcl
pusha
or
std
pop
lea
sub
sbb
fdivs
sub
mov
jle
xchg
out
ds
cs
in
sahf
popa
nop
arpl
testb
or
mov
or
xchg
xor
je
movsb
adc
daa
gs
add
aas
mov
add
mov
je
add
aam
pushf
in
mov
cmp
mov
pusha
rol
fisubrs
nop
lret
xchg
cmp
and
jmp
push
push
jo
push
sub
jne
rcll
sarl
dec
mov
cmp
inc
dec
bound
xor
outsl
pop
in
lret
int
sub
mov
fiadds
jg
cmp
insl
dec
add
jo
sahf
cmp
insb
push
jb
lcall
xchg
fadd
sub
mov
sub
add
negb
sti
xchg
nop
loopne
test
sbb
arpl
scas
push
scas
xlat
and
mov
sub
bound
sbb
or
imul
sbb
fisttpll
pop
jno
jo
pop
pop
xchg
cli
sub
stos
fs
mov
jo
std
xchg
pop
dec
jae
mov
lock
jnp
push
jecxz
and
ljmp
sub
ficoml
sub
mov
loope
sbb
xor
push
shlb
add
xor
cmp
pop
and
dec
in
xlat
push
mov
jns
iret
in
or
rcll
adc
mov
push
insl
cmp
mov
cmp
xor
loope
jae
mov
jl
inc
push
outsb
dec
vmovups
mov
pop
stos
in
pop
xchg
ficomps
xor
repz
xor
aam
shll
jb
and
repz
adc
xchg
add
loop
lcall
inc
ret
cmp
repz
rorl
add
pop
mov
and
sbb
sub
loope
adc
jmp
pop
out
mov
lret
popa
shll
and
inc
sahf
ret
ljmp
xchg
int3
dec
cmpsl
jb
sbb
mov
ja
cmp
subl
or
pop
cltd
mov
popa
shl
lcall
mov
lea
and
lock
cmp
pop
and
adc
rorb
jnp
dec
fsubrl
popa
roll
das
pushf
cmp
cmpsb
lret
cmp
jg
sub
mov
or
es
imul
pusha
repz
pusha
or
fstps
pop
fstl
push
popa
shl
mov
mov
add
insb
add
outsl
adc
jnp
mov
pop
in
dec
xlat
inc
pusha
jo
pop
fsubs
push
cmp
mov
rcrb
in
loopne
sbb
or
pusha
shlb
in
nop
inc
adc
jo
and
test
xchg
loopne
je
sbb
pusha
lcall
mov
dec
int3
ret
jo
xor
or
icebp
cmpsl
insl
xchg
je
popa
clc
jns
pusha
mov
cmp
sub
into
add
imulb
xchg
gs
push
inc
sti
sbb
xchg
sbb
data16
imul
in
pusha
push
mov
xchg
jo
add
rcrl
arpl
push
push
pusha
fldl
inc
cltd
stc
lret
mov
out
push
mov
dec
or
movl
stos
andl
pushf
xor
xchg
jae
dec
sbb
pusha
and
stc
fldcw
je
pusha
inc
mov
pusha
cs
fstpl
stc
cmp
insl
pusha
dec
aad
jg
sbb
lods
mov
pusha
test
inc
push
dec
dec
lret
jno
pusha
lods
scas
repz
mov
mov
dec
test
mov
into
stos
mov
pusha
sti
call
ror
test
cmp
addl
and
cmpb
pusha
enterw
leave
cmp
push
test
dec
sbb
pusha
popa
cmpsl
mov
xchg
and
nop
mov
and
mov
sbb
insl
pop
adc
pop
fmuls
xchg
xchg
pusha
xchg
hlt
fs
jl
push
add
push
sub
pusha
push
inc
mov
push
pushf
adc
imul
aam
push
and
ds
ret
xchg
inc
sub
divb
lcall
adc
mov
lods
dec
xor
sahf
pusha
movsl
pop
shlb
cmp
scas
push
loope
mov
aam
mov
dec
jle
aam
outsb
mov
xchg
cld
out
adc
cmc
pusha
and
jge
mov
fidivl
pop
sahf
sub
out
shll
rcr
sbb
je
scas
mov
add
push
xchg
sub
adc
hlt
cmp
pusha
xchg
mov
das
pusha
pop
daa
jle
xchg
out
into
fsubs
ja
iret
push
ficoml
pop
mov
ljmp
mov
ds
ret
pop
jle
add
sbb
nop
je
bound
test
shl
xlat
sbb
push
int
scas
punpcklbw
neg
push
adc
mov
dec
out
jno
pusha
sahf
mov
and
rol
push
cltd
jb
mov
fnstcw
or
jecxz
je
cli
inc
push
dec
fisubl
push
sub
xchg
pop
imulb
aam
add
inc
fadds
lds
jecxz
frstor
sub
cltd
cwtl
repz
sti
sub
filds
inc
stos
sarl
xor
rclb
mov
ds
xor
inc
cld
dec
mov
test
and
jnp
mov
pop
daa
inc
mov
inc
clc
bound
ja
inc
fs
lods
sysenter
js
push
dec
mov
push
xchg
std
pop
xchg
adc
pusha
jo
or
cmp
fwait
es
and
mov
scas
movsb
pusha
pop
mulb
pushf
add
dec
pusha
lock
fsts
jo
icebp
or
lret
adc
add
add
insl
insb
mov
push
push
sbb
iret
addr16
jnp
adc
push
das
movsl
pop
xchg
or
rorl
xchg
cwtl
andb
mov
push
sbb
add
dec
jl
xchg
xchg
pusha
mov
sti
jns
enter
inc
and
rorb
push
mov
mov
std
pusha
push
jns
inc
xchg
or
enter
mov
cli
pop
adc
jae
mov
mov
scas
fstpt
int
mov
insb
sbb
outsb
imul
push
in
iret
adc
pop
scas
out
das
sub
test
pop
pop
mov
out
rclb
jo
sbb
xor
movsl
bound
int3
xor
mov
mov
pushf
orl
and
jbe
test
push
mov
ss
and
enter
jb
ret
mov
outsb
movsl
pusha
jbe
dec
pop
stos
insb
inc
inc
mov
mov
add
pop
fwait
pop
jmp
popa
sbb
or
xchg
add
insb
scas
lods
push
and
sbb
outsl
mov
pop
lds
pusha
push
jmp
shll
pop
push
and
pusha
insb
int
lods
cmp
fadds
cltd
or
pusha
fstl
ret
repz
nop
and
pushf
lea
int3
mov
dec
sbb
pop
lods
dec
xlat
repz
adc
push
or
jge
loop
add
pusha
stc
sub
jg
mov
rcl
mov
ret
inc
xor
int
mov
fwait
push
pusha
sbbl
cmp
loop
cmp
pusha
lock
les
outsl
imul
daa
pop
mov
fdivrl
mov
sub
fsubs
mov
cld
inc
rorb
scas
cmp
sbb
jmp
pusha
icebp
push
mov
iret
daa
dec
outsl
es
pusha
cmpsb
bound
xchg
popf
lret
lret
frstor
aad
shll
jns
pusha
mov
inc
sbb
pusha
idivb
mov
addr16
push
test
daa
loop
lahf
pop
mov
mov
and
and
cs
adc
scas
bound
lods
pusha
fdivrs
jae
mov
add
mov
pusha
or
sbb
mov
pusha
xchg
es
jb
orb
inc
add
out
push
arpl
shll
cmc
push
outsb
fcompl
lcall
dec
arpl
das
push
pusha
outsl
sti
lret
aam
mov
pusha
dec
dec
lods
or
dec
mov
addr16
adc
in
inc
out
xchg
cmp
loopne
inc
faddl
cs
imul
mov
pusha
ds
dec
pop
pop
mov
rcll
sub
cs
sbb
pop
xor
jns
or
push
pop
xchg
test
lret
shlb
iret
jmp
repnz
pop
jb
jle
pop
imul
pusha
dec
cwtl
movsl
shlb
and
xor
rol
es
dec
addb
pusha
cmp
adc
or
leave
mov
hlt
jl
push
xchg
and
cmpsb
add
dec
inc
fisttpll
pop
push
lcall
ret
leave
cmpsb
imul
cli
jl
popf
jns,pn
and
insl
negl
pop
int3
cmp
lret
jae
mov
pusha
sub
sub
ret
loopne
das
xlat
sarl
fs
js
leave
xchg
orl
cmp
cwtl
jg
xchg
ss
insl
mov
outsb
mov
push
pop
popa
xor
sbb
popf
testl
inc
xor
sub
pop
std
in
sbb
sub
xor
loop
lcall
mov
popf
sub
lods
data16
lea
ljmp
shlb
adc
mov
push
movsb
fwait
les
jp
pusha
dec
inc
incb
push
rcrb
jnp
mov
sbb
mov
popf
xchg
inc
addr16
mov
dec
scas
and
pop
out
in
arpl
cmp
jl
jle
dec
or
adc
lahf
scas
rol
movsl
mov
xchg
jmp
pop
test
pusha
je
outsl
in
mov
pop
pusha
xor
fsubp
fwait
adc
mov
das
aam
or
sbb
pusha
call
fs
testl
pop
sahf
inc
fst
loop
adc
inc
xor
mov
cwtl
pusha
insb
imul
ss
outsl
adc
sbb
pop
sub
xchg
je
pusha
inc
push
jnp
insb
clc
lret
mov
pop
mov
pusha
inc
jmp
cli
or
mov
fildll
data16
sub
mov
jae
jnp
mov
xor
add
inc
adc
mov
sbb
sub
push
mov
adc
arpl
adc
sbb
lret
fildl
jge
repz
pop
ja
push
cli
lcall
sub
sahf
adc
cmp
insb
insb
shrb
push
les
insb
mov
jmp
repz
pusha
ljmp
mov
call
inc
mov
cmc
je
xchg
xchg
xor
repnz
adc
sbb
outsl
stos
pusha
out
pop
cld
push
pop
outsb
lahf
sbb
dec
dec
fsubl
pop
push
or
ret
push
popa
xchg
adc
jmp
sub
repnz
mov
ljmp
and
mov
mov
scas
xchg
xor
xchg
pusha
cmpsb
cld
mov
mov
movsb
cmp
rorl
test
iretw
push
pusha
sti
xor
lds
pusha
scas
aaa
xchg
mov
leave
cltd
xchg
das
sub
xchg
cmp
sbb
xlat
pusha
cmp
jbe
rcrl
pusha
mov
adc
addr16
jno
rcll
pusha
mov
sub
jge
nop
mov
inc
push
sbb
mov
mov
jnp
shrb
xlat
sub
out
pop
test
pusha
repz
in
ds
or
movsl
sbb
push
lahf
pusha
xchg
mov
dec
mov
jae
pmaxsw
fsub
pusha
push
and
addb
lahf
rol
and
pusha
inc
mov
pusha
mov
add
sbbb
pusha
inc
pop
cli
fnsave
sbb
sub
xor
mov
jl
mov
and
jge
sub
popa
inc
insb
gs
sub
mov
push
not
cwtl
mov
incb
add
mov
and
push
jecxz
shlb
pusha
inc
stos
int
pusha
jne
fwait
in
dec
out
arpl
cmp
mov
mov
xchg
icebp
mov
mov
out
push
sub
hlt
jle
fldcw
lahf
pusha
inc
mov
adc
hlt
mov
in
sahf
bnd
cmp
mov
in
subb
shlb
test
nop
roll
ds
push
lea
adc
adc
sbb
dec
pop
lock
push
mov
push
ret
das
sbb
inc
std
bound
int3
subl
lcall
imul
cwtl
scas
cmp
lahf
xorl
loop
adc
adc
jg
xchg
cmp
int
jns
mov
add
sbb
test
jle
and
push
in
pushf
loop
rorb
add
mov
sarl
push
cli
xor
into
push
and
xchg
jno
pop
xor
scas
mov
inc
mov
sub
fdivrs
cmc
outsb
xor
sarb
in
jno
xchg
mov
inc
adc
daa
jl
je
xor
shlb
sar
repnz
mov
inc
jb
test
mov
clc
arpl
inc
mov
cli
jge
daa
pusha
stc
jle
jp
mov
pop
repz
dec
adc
out
popf
sbb
in
lods
xor
mov
mov
pusha
in
fs
sub
imul
enter
jl
test
in
and
cmp
stc
push
push
inc
cmc
lds
clc
mov
loop
push
xchg
gs
bound
cmpsb
pop
decl
xchg
popa
lret
inc
inc
stos
lods
pusha
sbb
out
push
aam
repz
icebp
fchs
lds
or
sub
aaa
jbe
stos
sbb
test
loop
or
dec
pusha
sub
inc
stos
lcall
push
sahf
out
in
pop
sbb
dec
mov
adc
in
push
add
bound
das
pop
mov
jp
adc
jmp
sbb
dec
int3
adc
push
and
mov
pop
pop
mov
pusha
jno
loop
push
adc
sbb
sub
jl
ss
xor
adc
adc
loopne
and
jae
in
outsb
pop
and
ret
inc
jp
pop
jo
dec
pop
mov
ret
out
add
movl
cmpl
decb
scas
and
push
push
bound
mov
or
jle
mov
cmp
dec
sub
mov
fdivl
jge
or
inc
jle
mov
xchg
mov
push
test
adc
imul
pop
pop
bound
fsubrl
mov
or
cmpsb
std
jns
and
ret
push
loope
lcall
into
and
faddl
sub
dec
adcl
xchg
ret
inc
mov
nop
out
das
jle
fs
movsl
mov
push
or
pop
bound
mov
cmp
outsl
add
fiaddl
stos
inc
sub
incl
jno
ljmp
push
dec
inc
xor
mov
enter
pusha
loopne
dec
mov
push
xchg
xchg
sbb
in
pop
fdivrl
mov
roll
dec
test
jns
insb
xchg
ret
cli
sti
mov
dec
xchg
fisubrl
or
mov
in
xchg
adc
call
dec
push
fdivl
xchg
pusha
mov
add
fidivs
ret
leave
ret
and
push
cmp
mov
adc
pop
dec
movsb
lea
fdivrl
xchg
pop
sub
loope
mov
cs
ljmp
or
push
jnp
push
mov
cmc
xchg
pop
orb
imul
inc
dec
adc
pop
mov
pusha
sarl
jae
cmp
pusha
invd
and
xchg
xchg
cmc
pusha
jo
imul
loope
jl
inc
pusha
jnp
cld
jmp
lods
in
mov
sub
pusha
test
or
aaa
pusha
inc
adc
mov
add
adc
scas
or
divb
and
jle
xor
pslld
lds
add
arpl
jae
in
inc
lahf
cmp
es
pop
adc
or
pusha
push
lret
add
dec
jmp
mov
cmpsl
mov
push
dec
pop
mov
in
pusha
lahf
cmpb
pusha
adc
xor
cmp
inc
dec
xor
xchg
add
jecxz
sbb
fidivrs
arpl
sub
sbb
es
add
arpl
roll
lock
inc
fs
out
pop
mov
jecxz
fistpl
lret
bound
test
jecxz
xor
cwtl
lcall
pop
or
fldenv
jne
xor
inc
mov
std
lcallw
mov
int
pusha
shrb
aas
and
jl
js
jecxz
rclb
movsl
arpl
jmp
cmp
cmc
rorb
sub
movsb
xchg
mov
in
mov
pop
mulb
xchg
movswl
mov
sbb
push
sub
pop
xor
rolb
pop
xor
repz
pusha
sbb
sti
fwait
cmp
add
mov
mov
pusha
inc
jo
push
shrl
sbb
sahf
bound
lret
orb
mov
xorl
es
shlb
mov
outsb
lahf
sbb
xchg
mov
mov
jbe
mov
lcall
pop
pusha
test
rorl
std
mov
cltd
insb
mov
xchg
jae
xor
sub
dec
cmp
mov
cmc
dec
subl
sub
cmp
fstpt
adc
xor
sub
sub
sbb
sub
cmp
pusha
xor
in
push
pusha
cwtl
xchg
and
out
fisttpll
test
pop
pusha
adc
add
xchg
sub
sbb
sbb
sub
jb
inc
adc
push
mov
enter
xor
and
push
jecxz
loopne
pusha
nop
pop
fistl
sbb
clc
shlb
push
call
pusha
and
mov
mov
push
jge
mov
std
ret
fnstcw
testl
cmpsb
mov
std
pusha
fisubrs
or
pusha
rolb
and
xchg
popf
insb
xlat
aad
out
xchg
imul
sub
cmp
mov
nop
orb
mov
iret
pop
mov
add
mov
xchg
mov
inc
jecxz
cltd
aam
mov
mov
inc
movsl
addr16
jmp
cltd
jnp
flds
xor
sbb
pusha
inc
jb
movsb
lret
dec
in
cmp
shrb
das
pushf
jno
gs
add
testb
dec
dec
xchg
adc
mov
jb
jns
add
arpl
scas
pusha
push
imul
pop
leave
mov
popa
mov
xchg
push
mov
addr16
lahf
lahf
pusha
push
repz
mov
sahf
enter
sbb
add
push
inc
lret
arpl
push
inc
out
mov
inc
leave
jo
andl
mov
out
sbb
repz
fstps
loope
jecxz
popa
sub
or
xchg
bound
arpl
hlt
push
dec
inc
int3
test
fldl
cld
fsub
rcll
mov
pusha
pop
stos
lret
xchg
iret
pop
fdivl
mov
sub
andl
xor
sbb
mov
inc
out
push
or
andl
or
add
out
test
pusha
cmpsl
push
in
mov
pop
out
and
cmp
mov
call
loop
or
push
test
and
pusha
push
cld
push
dec
pop
pusha
sub
clc
pusha
nop
ret
xchg
repz
sub
mov
push
pop
test
dec
pusha
aad
test
adc
bound
dec
addr16
mov
pusha
xor
mov
lock
mov
aaa
pop
shll
sahf
cld
ss
out
es
push
or
or
and
pusha
icebp
test
add
jns
pusha
lret
mov
bound
out
xchg
fldl
jge
mov
jp
fs
cmp
or
lret
loop
mov
pusha
ficomps
jg
mov
call
sub
bound
fldenv
cmp
arpl
cmp
test
inc
mov
jb
cmpsb
cmp
inc
pusha
mov
lea
pusha
and
fbld
scas
adc
xchg
bound
cmpsb
mov
xchg
xchg
pusha
stos
pop
cmp
shll
jno
outsb
loop
call
mov
adc
int3
adc
mov
orb
push
lock
inc
sti
lahf
jl
inc
repnz
fldenv
jmp
test
inc
cmp
stos
cmp
jne
js
inc
arpl
xor
cld
mov
outsb
mov
cmp
xchg
jl
enter
mov
jp
cltd
xor
push
rorl
mov
roll
stc
sub
push
and
cld
jg
jae
and
jo
js
bound
out
dec
mov
push
repnz
shlb
pop
and
and
jmp
push
cmc
fs
cmp
das
shrb
pop
sti
jl
add
adc
in
push
mov
cltd
pop
fwait
cmp
stc
jl
pop
mov
ss
cltd
pop
shrb
sub
pusha
push
inc
pop
xor
icebp
jl
shl
aam
jl
mov
xchg
inc
lods
mov
repnz
jmp
sbb
mov
enter
mov
pop
stos
mov
fs
in
mov
or
aaa
int
insl
pusha
mov
fldcw
add
xchg
xchg
sub
insb
ds
inc
pusha
mov
fwait
cltd
jmp
mov
push
lcall
sub
ret
xor
and
add
das
jl
insb
pop
movsb
adc
cmpsb
clc
arpl
daa
mov
gs
pop
int3
cld
mov
scas
xchg
test
lea
dec
mov
fs
cmp
push
insl
mov
fdiv
xchg
mov
pusha
outsb
jae
imul
dec
mov
cmp
push
mov
bound
das
out
pusha
jnp
mov
setns
mov
stos
jle
repnz
test
popf
lahf
fwait
sbb
xchg
leave
jmp
js
lock
cltd
inc
pusha
xchg
sbb
sbb
test
mov
arpl
push
test
lock
bound
dec
mov
pop
cs
icebp
sbb
dec
adc
pusha
test
sub
and
mov
shlb
lcall
rcr
push
mov
push
jecxz
shll
repz
jmp
clc
imul
rol
jmp
or
add
int3
cmpsl
inc
inc
and
insb
inc
cld
out
mov
sub
or
jl
ds
cmc
stos
and
sbb
or
pop
insb
js
incb
test
adc
out
pop
mov
imul
sub
shlb
jecxz
inc
insb
pop
pop
popa
mov
xchg
andl
clc
cwtl
repnz
ljmp
jo
pop
shr
bound
cltd
stc
pusha
sbb
aas
outsl
pop
add
fidivrs
adc
stos
jmp
fs
jnp
mov
fcomps
pop
mov
and
pop
mov
mov
divb
pusha
aad
xchg
daa
jne
and
movsl
addr16
add
inc
sbb
into
cld
cltd
mov
int
mov
cmp
add
rcrl
adc
bswap
fwait
lahf
cmp
jecxz
fsub
fisttpll
ret
xchg
and
sbb
mov
push
daa
fidivs
adc
lret
fnstenv
fcom
push
loope
xchg
aaa
cmpsl
push
jns
inc
push
idivl
sub
gs
adc
rol
dec
aaa
pusha
push
in
push
lret
sbb
jno
mov
push
lret
scas
jb
and
shrl
mov
popl
inc
mov
push
sbb
rorl
lods
or
mov
iret
js
adc
xor
insb
adc
fwait
ja
incl
int
das
dec
fists
pop
out
cmp
jle
xchg
je
pop
bound
and
xor
mov
xchg
fisttps
push
ret
xchg
stos
xchg
fiaddl
insb
je
movl
sarb
das
xor
fcompl
jo
js
pusha
loopne
clc
xchg
lret
stos
sub
adc
ds
xor
mov
lods
repnz
jle
add
imul
inc
lock
fs
mov
shlb
mov
or
mov
fs
into
scas
loopne
clc
or
dec
and
js
data16
or
jecxz
xor
cmpsl
sub
inc
inc
push
into
xchg
xor
sub
push
sbb
inc
adcb
xchg
push
fs
loope
pop
cmpsb
mov
es
mov
adc
pinsrw
and
push
bound
jle
sub
mov
adc
sub
sbb
orb
hlt
imul
jo
dec
or
lret
and
mov
add
dec
push
pop
or
push
sti
mov
mov
add
or
dec
int3
fwait
pop
jg
fcompl
je
loope
sarl
push
mov
cmpl
xchg
lds
add
cltd
loopne
dec
leave
jnp
push
xor
jle
mov
inc
inc
and
push
jecxz
pushf
mov
mov
mov
mov
sahf
outsl
jnp
repz
dec
orb
push
gs
pushf
lock
ret
mov
xor
adc
pusha
mov
addr16
int3
mov
push
xor
inc
test
inc
pop
and
sub
and
xchg
inc
and
push
arpl
insb
scas
lret
iret
jg
loopne
sti
dec
data16
xor
push
mov
pop
loopne
xchg
sub
xorb
cltd
in
sbb
mov
pusha
add
addr16
addl
icebp
adc
arpl
sar
lods
xchg
jae
push
lret
mov
inc
xor
stos
pop
pusha
cmp
xchg
test
cli
je
push
pop
inc
inc
shl
ja
pusha
sar
xchg
out
push
mov
pusha
paddw
into
ljmp
inc
jl
call
mov
adc
add
das
insb
dec
or
fisubl
and
or
lcallw
add
pusha
pushf
pop
adc
nop
mov
insb
push
cli
xlat
and
nop
cmp
pusha
test
push
sbb
jle
aas
lcall
xchg
inc
fwait
outsl
pusha
ss
mov
or
movl
jae
jle
dec
push
jmp
push
test
add
mov
lret
shlb
movsl
mov
repnz
addb
xor
lock
mov
or
test
mov
insb
cmp
inc
and
pushf
ret
lahf
and
pop
std
inc
mov
xor
pop
shl
lods
popa
sahf
imul
rolb
jbe
inc
pusha
inc
sub
xchg
outsl
pusha
jle
or
std
cltd
loop
xchg
mov
stos
fstpl
inc
pusha
ss
popa
adc
pop
aaa
or
push
loopne
mov
and
pusha
or
int3
ret
arpl
push
jl
push
aaa
mov
adc
js
lods
pushf
mov
sbb
bound
and
outsl
dec
add
fs
pop
jo
ds
pop
add
das
push
pop
div
jmp
xchg
lea
sbb
repnz
jl
sahf
cmpsl
iret
pusha
fiadds
into
aam
add
sbb
das
shl
insb
in
jnp
ljmp
xchg
dec
jle
out
pop
out
pusha
fists
or
test
dec
jno,pn
pusha
scas
adcb
clc
test
aam
jo
sahf
es
bound
push
mov
jnp
sbb
cmpsl
dec
mov
xor
addb
adc
lret
mov
xor
mov
dec
xor
mov
dec
gs
movsb
popa
psubusb
aam
stos
bound
sbb
pusha
les
cld
mov
repz
movsl
ret
cltd
or
das
xor
sbb
in
pusha
inc
xor
fsub
xchg
adc
out
insb
push
or
inc
fistl
pusha
mov
inc
push
cmp
in
push
push
loopne
mov
iret
stos
xchg
cmpsl
adc
pop
mov
cltd
sbb
adc
or
jne
mov
pushf
push
mov
aad
pusha
cmp
xor
mov
aam
pusha
frndint
xchg
enter
pusha
add
shll
xchg
int
fsubl
xor
adc
loopne
jge
fnstcw
dec
std
cmp
jecxz
jnp
mov
sbb
mov
cmc
out
mov
int
inc
lret
jecxz
jl,pt
loopne
ret
jo
mulb
sbb
fcmovbe
insb
dec
fs
xchg
jne
cwtl
cltd
andl
jg
repnz
test
jae
xor
mov
xchg
lret
insb
pop
add
mov
mov
xlat
add
roll
sbb
mov
loope
sub
lds
or
pop
pusha
out
inc
pop
jo
rol
push
cs
mov
arpl
pusha
neg
sub
bound
sbb
int
adc
mov
pusha
pop
cmpsl
adc
lcall
sahf
popf
arpl
inc
or
sub
adcb
inc
xor
lods
sub
je
dec
shll
jo
xor
xor
mov
inc
mov
imul
jl
mov
pop
pop
sbb
shlb
pusha
setns
cwtl
frstor
push
jmp
pusha
dec
add
call
dec
pop
rclb
aaa
mov
push
and
test
aas
into
add
pusha
mov
or
cmp
pop
mov
sbb
movsl
stc
sub
dec
and
in
pusha
into
push
cmp
fwait
mov
test
andb
in
sub
mov
mov
popa
roll
sbbl
test
adc
mov
push
add
push
cmpsb
call
push
lds
pusha
inc
les
sub
pusha
mov
adc
mov
je
sub
mov
mov
pusha
es
jno
sub
popf
stos
cmc
sti
cmpsl
jo
xor
cltd
pusha
into
sbb
jl
int
sahf
inc
mov
cmp
sbb
sub
sbb
outsl
or
fsubrs
out
xchg
jo
cmp
roll
sahf
aaa
fwait
fs
inc
and
jge
fs
cmpsb
js
xor
dec
rclb
fcoml
pop
jne
jecxz
sti
repz
mov
bound
rol
jl
jl
adc
xchg
mov
in
sahf
subl
cmp
mov
notl
pop
cwtl
or
ljmp
pusha
mov
inc
ss
rclb
and
cli
dec
pusha
push
lods
cmp
pop
push
shlb
dec
push
repz
call
testb
mov
popf
push
popf
push
jle
sarl
mov
or
push
test
and
int
inc
push
add
stos
pop
mov
sbb
mov
jl
adc
pusha
inc
mov
mov
push
mov
dec
fcmove
push
sub
lret
and
imul
jne
mov
xor
and
push
inc
and
sbb
or
popa
je
pop
mov
add
pushf
sub
jmp
ret
arpl
int3
std
fs
xchg
pop
pop
xor
dec
lods
subl
adc
js
outsb
mov
inc
adc
sub
ljmp
add
pop
add
mov
mov
push
repz
pop
fs
clc
push
mov
lret
aad
or
mov
mov
xchg
jns
les
dec
gs
push
adc
jl
push
bound
jecxz
ds
push
jecxz
rep
dec
icebp
rcrl
inc
rorb
fldt
lods
fnsave
mov
mov
and
pusha
mov
and
out
sarb
aas
loope
cmpsb
ret
mov
mov
sub
ss
imul
test
repnz
cmp
test
gs
mov
add
jmp
in
sti
lret
mov
jno
mov
lods
or
add
shlb
int3
jge
movsl
pop
lods
pop
pusha
push
xchg
mov
adc
sub
pusha
inc
or
sarl
out
push
xor
and
dec
stos
pop
xchg
mov
mov
addr16
ljmp
rolb
jae
es
jbe
xchg
shlb
mov
or
xor
pusha
popa
and
sbbl
sti
push
cli
sahf
inc
lahf
in
mov
pop
ret
xchg
mov
in
mov
sub
xor
aas
pusha
popa
sub
cmp
shlb
adc
inc
pusha
sub
lods
add
push
add
ds
arpl
js
mov
out
shrl
movsl
pusha
inc
mov
enter
mov
popa
jp
jns
bound
out
ss
pusha
xchg
push
movsl
mov
je
imul
add
pop
cmp
scas
pusha
test
add
mov
movsl
gs
shl
xlat
ljmp
lds
add
xchg
fs
loopne
sbb
mov
xchg
and
rsm
nop
pusha
fcoms
sbbb
push
shl
jmp
xor
out
movsl
sbb
mov
out
and
in
cmc
and
add
mov
mov
nop
mov
cmpsl
sub
dec
ja
xchg
aaa
xchg
adc
adc
jp
sahf
mov
push
jo
xchg
jnp
dec
aam
insb
or
pusha
shl
jno
sarl
jo
daa
lods
pusha
lcall
out
push
loop
cmp
mov
jo
adc
and
or
daa
mov
sub
pop
push
out
pop
loop
sub
adc
lahf
jno
mov
sbbl
fcoms
rorb
ret
mov
jecxz
cmp
out
sbb
insl
push
adc
jecxz
push
mov
loopne
and
divl
inc
mov
pop
inc
mov
hlt
out
xchg
clc
ret
xor
dec
je
adc
aas
cmp
imul
frstor
addr16
ljmp
inc
push
subb
bound
je
addr16
outsb
in
fcomps
push
pop
dec
jb
push
mov
mov
jbe
cmp
push
and
add
or
jne
sbb
cmpb
xor
rcll
xchg
or
je
orb
xor
pushf
and
js
ret
xchg
inc
sub
jbe
sahf
pop
test
push
stos
sub
inc
out
pop
xchg
and
push
cmp
adc
jmp
fs
xor
pusha
nop
ja
and
cmc
inc
loopne
fldenv
pop
push
ret
pusha
xor
push
jge
fwait
adc
rclw
je
push
sub
and
icebp
mov
fs
xor
xchg
pop
loopne
jne
jbe
lock
jle
ljmp
call
push
cmp
jmp
push
inc
imul
inc
xor
cmp
dec
ja
and
push
fists
pop
mov
inc
loop
push
cli
mov
pusha
aam
test
addl
je
shll
push
xchg
xchg
in
inc
and
jg
in
ret
and
popa
jae
mov
dec
cmp
in
mov
imul
test
jmp
arpl
push
in
jmp
pop
push
sub
dec
dec
std
pusha
loopne
ficoms
jo
data16
push
xchg
jb
or
xchg
add
rcrb
jle
ret
mov
jecxz
insb
jne
jo
jns
mov
cli
into
repz
mov
insb
aas
popa
jle
ret
add
xor
jne
dec
push
xor
pop
hlt
inc
inc
xchg
xor
clc
sub
sbb
stos
mov
test
cmpsl
fstpt
sbb
or
mov
inc
and
hlt
mov
arpl
sub
jnp
movsl
rcrb
xor
in
out
es
ss
data16
daa
pusha
gs
cmpl
push
movsb
outsl
mov
jae
pushf
pusha
add
mov
cmp
imul
mov
pusha
je
loopne
inc
sbbb
pusha
mov
ds
outsl
add
jo
cmpsl
or
pusha
aad
push
push
adc
js
in
sbb
inc
outsb
jp
cltd
test
imul
jae
and
lods
ficoms
fildll
pop
fistpl
mov
orb
je,pt
aas
cld
fstps
inc
jmp
mov
insb
mov
xor
and
xor
cld
and
fisttpll
sbb
mov
int3
addr16
icebp
adc
sub
lds
sbb
outsl
inc
inc
push
andb
jbe
mulb
int3
mov
push
xchg
pushf
lcall
pop
sarb
xchg
in
jne
dec
insb
loop
fwait
pusha
lret
aas
jg
sub
clc
test
call
mov
and
jecxz
inc
mov
ret
push
and
shrl
aad
pusha
xor
xor
pusha
push
xchg
fs
inc
push
dec
jl
jne
mov
ss
dec
jmp
or
mov
adc
mov
push
inc
xor
dec
dec
pusha
mov
arpl
andl
mov
adc
mov
ss
push
out
adc
loopne
pusha
out
jns
and
cmpsl
rcrl
sbb
sbb
loopne
ja
inc
jecxz
push
bound
sbb
daa
cld
pop
mov
insl
rcll
fmulp
dec
loopne
or
mov
aad
fisubl
lods
xchg
and
std
nop
pop
bound
dec
cmpl
iret
je
loopne
test
pop
mov
dec
cmpsl
cmp
fwait
xchg
das
in
mov
lea
and
insb
pop
xor
cli
stos
and
push
pop
dec
fucomip
inc
repz
dec
sbbb
fwait
lret
clc
sbb
cmp
mov
clc
arpl
or
orb
pop
int
cmp
push
pop
cmpsb
cmp
xorl
xchg
xchg
rclb
jb
push
lret
mov
xchg
mov
pusha
mov
push
push
jbe
inc
pusha
jmp
insb
lret
lret
adc
mov
adc
pop
faddl
std
inc
sbb
arpl
xor
fwait
mov
mov
test
mov
out
dec
jge
dec
sahf
shrd
sbb
push
bound
enter
add
enter
shrl
fs
pop
jge
add
jne
pop
scas
shll
sub
add
xor
insb
rep
and
int
mov
pusha
sbb
jg
int3
pop
cld
push
mov
pusha
repz
or
push
lcall
sub
fistpll
mov
pusha
push
das
fcomps
jg
push
cmp
inc
mull
pop
enter
callw
icebp
add
pop
pusha
cmpsb
jg
sub
fadd
gs
les
ret
xor
xchg
pusha
arpl
ja
repz
dec
lret
js
mov
in
jmp
sub
divb
fcomps
add
pusha
mov
aas
in
xchg
add
pusha
sbb
aad
addr16
push
int3
cld
pop
in
rorb
pusha
iret
test
fmuls
sbb
es
mov
lret
xchg
mov
cmp
scas
sbb
iret
imul
push
pusha
outsb
dec
sub
mov
stos
into
mov
cmp
lds
inc
ss
pusha
jg
ret
mov
jp
daa
pusha
push
add
loope
loop
pusha
sahf
into
xor
lea
fs
push
xchg
es
xchg
cmp
pop
outsl
push
mov
push
bound
outsb
fsubrs
xchg
jbe
in
push
ret
pusha
xchg
fisubrl
stos
les
lcall
push
lods
xchg
jbe
bound
push
add
outsl
cmpb
mov
test
aaa
add
dec
add
xchg
xchg
pusha
stc
daa
lret
mov
mov
pop
mov
es
in
out
pop
out
lea
pop
push
repnz
push
mov
add
test
pop
mov
rclb
jg
mov
cmp
lock
fwait
pop
pusha
pop
std
cmp
pusha
ret
add
adc
xorb
sbb
mov
ja
push
out
ljmp
sbb
bound
or
pusha
push
clc
mov
push
and
insb
insb
imul
mov
imul
in
shrl
pop
lods
sbb
insb
ds
xlat
mov
pushf
adc
pusha
sbb
jo
and
add
push
mov
out
cli
push
pop
das
jb
add
lock
adc
mov
movsb
mov
fisttps
sub
lods
adc
sti
sbb
in
stos
jo
xchg
mov
jmp
sub
inc
xchg
orl
sti
hlt
mov
sbb
ret
sbb
mov
mov
fs
call
push
mov
xor
sbb
into
fdivrs
push
mov
xor
cli
sbb
pusha
push
repnz
fsubp
add
pop
les
sarb
xor
pusha
dec
stos
rcll
mov
imul
mov
pusha
loop
cs
aas
hlt
lds
adc
mov
xchg
movsb
push
mov
inc
lock
dec
mov
xlat
pop
xchg
xor
xor
jns
lcall
call
xor
and
inc
adc
imul
shll
jp
dec
lret
xchg
cwtl
mov
jl
nop
push
in
mov
cld
adc
inc
push
fisttpl
dec
lcall
and
je
repz
mov
sbb
aam
std
push
fwait
adc
shlb
push
pusha
add
xchg
sbb
pusha
imul
dec
fcoms
adcl
mov
mov
shl
in
das
dec
jae
mov
add
dec
xor
pusha
inc
adc
mov
rcll
xor
mov
add
cmc
mov
ljmp
mov
sti
xor
repz
sub
mov
pusha
loope
xchg
mov
test
cltd
loopne
cmpl
cmpsb
shll
cmp
hlt
repnz
push
andb
mov
popa
mov
imul
test
pop
dec
sub
and
lock
and
add
cmp
and
or
test
jecxz
fmul
xor
sub
mov
inc
orb
pusha
jge
push
shrl
frstor
sub
cwtl
dec
adc
out
cmp
jb
insb
iret
fcmovnu
and
pusha
and
jb
mov
and
or
pusha
movsl
inc
xchg
cmp
adc
pusha
scas
sbb
cld
mov
repz
pusha
icebp
mov
fimuls
dec
test
test
cmp
bound
hlt
pop
lret
hlt
insb
fbld
xor
adc
fwait
and
fmuls
add
adc
adc
gs
lret
and
xor
into
inc
repz
pusha
inc
add
je
xlat
jl
js
jl
dec
and
mov
xor
pusha
jmp
mov
inc
pusha
xchg
pop
xchg
lea
add
nop
sbb
xor
out
out
mov
mov
sbbb
fs
add
pop
daa
in
pusha
fiaddl
sub
push
and
pop
pusha
mov
shll
xlat
cmp
lods
icebp
pusha
or
cltd
sbb
jmp
mov
lret
loop
pop
imull
addr16
scas
cmp
rcl
pusha
test
das
ja
inc
inc
sbb
arpl
popa
xchg
and
insl
cmp
push
add
aaa
sub
insb
pop
xchg
bnd
add
add
jle
xor
jae
inc
pusha
mov
lods
sti
xchg
mov
js
adc
gs
sub
out
mov
lret
into
popf
mov
and
add
dec
ret
paddd
pusha
mov
sub
mov
cmp
sub
addr16
notl
xchg
pusha
loope
outsb
add
mov
jecxz
and
cmp
pop
jmp
pop
pop
aaa
pusha
subb
mov
pushf
jmp
cmp
ja
lcall
fsts
mov
sbb
pusha
sub
or
aaa
movq
xor
push
pusha
subb
insl
pop
add
sub
mov
xor
adc
pusha
in
sarl
cwtl
pop
decl
pusha
call
lahf
into
adc
jno
sbb
jmp
movsb
outsb
iret
pop
in
push
aad
andl
lahf
insb
dec
arpl
adc
pusha
xchg
popa
cli
hlt
xchg
mov
outsb
and
in
fisubrl
mov
gs
inc
xchg
repnz
insb
pushf
push
sbb
sbb
imul
mov
cmp
pusha
cwtl
ficoml
xor
push
jecxz
sbb
inc
cli
pusha
pop
lret
movsb
dec
clc
pusha
add
shl
push
icebp
pusha
jle
iret
popa
les
dec
mov
mov
add
mov
sbb
mov
repz
imul
pusha
xchg
nop
cld
out
f2xm1
insb
mov
lret
ret
add
pop
rcr
sub
repz
nop
mov
push
mov
push
push
into
addr16
pop
daa
pop
mov
insb
cmpsl
psrad
cltd
cmpsb
and
mov
subb
or
sub
int
bound
les
cmpb
add
sbb
popa
scas
idivl
jg
test
jb
lahf
sbb
jl
jl
loope
pusha
mov
xor
pusha
inc
dec
lods
jo
sub
std
test
ds
leave
scas
mov
mov
imul
mov
lret
aaa
test
sbb
sub
xchg
pusha
dec
lea
or
insb
jnp
mov
movsl
jle
xchg
stos
pusha
fiaddl
scas
dec
in
outsb
cwtl
xchg
bound
mov
shlb
mov
std
pop
dec
fdivr
pusha
dec
adc
stos
inc
and
cmp
mov
je
inc
mov
addr16
mov
pusha
cmp
insb
scas
xor
and
push
jns
cltd
loop
out
pop
mov
mov
jg
lea
popa
scas
jns
ja
pusha
mov
iret
inc
pusha
test
aaa
stc
sahf
rorl
pusha
push
cltd
mov
mov
sar
loop
mov
ss
sub
xor
xchg
pop
pushf
add
sub
pop
loop
rcrb
stc
xacquire
mov
pop
adc
pusha
lahf
lods
test
fwait
pushf
fs
inc
xchg
xchg
popf
push
lods
inc
pusha
pop
cmp
jno
push
fdiv
insb
pop
jg
int3
leave
mov
push
mov
std
divl
pop
cmc
pop
inc
std
xchg
mov
out
mov
dec
in
shll
and
in
lods
imul
pusha
cmpsb
xor
pop
jne
hlt
push
add
pusha
pusha
out
repnz
les
jp
loope
movsb
test
pusha
xchg
lods
scas
sub
add
push
std
stos
cli
imul
mov
lds
sub
ja
aam
sbb
inc
jmp
or
add
loope
xor
mov
cltd
xchg
pusha
sti
jbe
jg
shll
test
jno
std
sarb
daa
shlb
pop
ss
push
insl
clc
out
pusha
mov
or
pop
int
jnp
mov
pusha
dec
cmp
cli
repz
pop
repnz
mov
fs
jo
or
pop
pop
mov
fidivl
ljmp
and
outsb
mov
lahf
push
adc
outsb
mov
out
mov
push
mov
and
dec
es
iret
pop
add
imul
sbbl
in
lods
iret
js
rcll
ljmp
scas
mov
in
clc
mov
mov
aaa
pop
sbb
loop
push
jno
mov
pop
loopne
xchg
jo
test
xchg
mov
ds
out
bound
jle
ss
adc
shr
loop
imul
lret
cld
xchg
js
pusha
stos
dec
xchg
hlt
push
jo
pusha
out
out
ret
popa
nop
loop
pop
dec
mov
pusha
repnz
test
pop
jo
sarb
dec
sub
sti
pusha
lock
addr16
mov
jecxz
in
add
pop
pusha
mov
sub
and
inc
bound
push
lock
sbb
ds
pusha
dec
push
lret
adc
add
in
pusha
jecxz
enter
subb
push
ds
in
sub
xchg
bound
movsb
inc
dec
imul
ret
dec
test
add
insb
push
inc
and
mov
dec
ja
lods
sbb
mov
adc
test
sbb
pushf
cmp
test
mov
mov
gs
inc
lret
ret
pop
call
adc
clc
lcall
mov
mov
leave
inc
sbb
test
pusha
xchg
rorb
loop
shlb
gs
sbb
push
push
fnsave
mul
lock
rcr
jl
mov
inc
movsb
mov
jne
or
icebp
mov
pusha
test
add
pusha
je
push
mov
mov
pop
fisubl
shr
sbb
cs
cmpsl
insl
inc
xchg
ret
sub
and
cwtl
bound
movsb
xor
dec
insl
jecxz
mov
and
int3
decb
fistl
dec
lret
cltd
stc
inc
lds
out
test
and
popf
ja
cs
sub
cld
sub
pop
stos
stos
pusha
or
out
push
add
cmp
push
pop
jecxz
stos
sub
cli
fisubl
sbb
jp
pop
cs
mov
and
sahf
xor
pusha
rcr
in
ds
frstor
lret
dec
mov
jb
popa
inc
das
jge
adc
hlt
jecxz
arpl
push
sbb
dec
pop
push
sarl
sbb
xor
std
pusha
pop
cmc
fs
jmp
pop
pop
push
hlt
cmpsb
inc
or
xchg
xchg
pusha
xor
jno
pop
xchg
inc
mov
jecxz
cld
fcomps
jmp
add
jle
cmp
movsb
movsb
dec
adc
arpl
into
ja
xor
jno
fs
std
bound
mov
test
ss
sub
inc
and
add
jns
inc
mov
pusha
and
mov
js
mov
sbb
loop
pop
or
imul
sbb
je
mov
mov
add
fisubs
sbb
iret
pusha
into
cmp
pop
or
sahf
sub
fsubrl
test
pusha
jae
jnp
push
mov
mov
jl
int
mov
mov
pusha
lret
add
adc
cltd
ds
cmp
xlat
jb
and
cwtl
mov
jl
addr16
mov
pop
xor
scas
adc
ljmp
pusha
jno
cmp
pusha
bt
call
xchg
shll
add
or
lods
dec
cli
out
arpl
inc
or
hlt
shrl
xor
inc
mov
xchg
fisttpl
pusha
lods
cmp
jle
pusha
or
lret
push
mov
lahf
cmpsl
mov
jae
cmpb
push
stos
and
xchg
popa
inc
repz
out
iret
dec
lcall
mov
test
es
sub
nop
loope
call
and
xlat
pop
jecxz
cmp
repz
sarl
clc
xchg
pusha
leave
sub
mov
or
adc
neg
jecxz
lcall
and
pusha
mov
inc
jo
pusha
jl
sbb
shrl
sub
lret
adc
lea
iret
andb
pop
ret
push
pusha
inc
xor
xchg
dec
scas
cmpsb
pop
daa
je
idivl
dec
arpl
jne
repz
movsl
std
fildll
or
pop
arpl
movsl
pusha
jecxz
push
jae
add
fisubrl
pusha
fdivl
add
int
xchg
pusha
adc
add
clc
pusha
popa
or
jnp
xor
gs
es
inc
push
call
pop
xchg
and
mov
mov
push
pop
leave
jmp
cmp
or
mov
inc
pop
pop
fnstcw
in
popf
movsb
mov
pusha
or
out
cmp
adc
enter
mov
cmp
orl
sub
int3
add
mov
pusha
shlb
in
xor
notb
lods
scas
cmp
mov
xchg
jbe
pusha
mov
pusha
pushf
enter
mov
or
mov
mov
jmp
add
cmpb
scas
dec
pusha
mov
xchg
mov
and
je
push
cmc
pusha
ja
xor
clc
push
pop
pusha
jnp
lods
popf
cmpsb
aam
mov
sbb
cmp
je
icebp
sub
sti
inc
test
mov
into
mov
push
xor
mov
das
cmc
sbb
mov
sub
mov
and
pop
push
inc
pop
outsl
inc
sbb
and
mov
pop
std
pusha
push
iret
dec
movsl
adc
insb
sbb
sub
jl
pusha
addb
cmp
push
push
test
test
notb
and
push
movsl
hlt
lods
adc
dec
pusha
clc
xchg
fwait
pusha
stc
sbb
imul
into
pop
pusha
or
and
adc
iret
push
js
arpl
mov
mov
pusha
xchg
incl
jno
mov
leave
dec
cltd
pusha
and
mov
nop
insl
xchg
adc
jo
outsb
pusha
or
xor
nop
jmp
pop
and
icebp
fwait
jmp
pop
mov
jo
int
daa
out
sbb
arpl
mov
xchg
outsb
and
out
movsb
jae
jecxz
dec
pusha
pop
xlat
lret
dec
jo
jl
mov
mov
imull
mov
pusha
into
push
hlt
push
mov
jg
clc
icebp
mov
pusha
mov
int3
imulb
mov
xchg
repz
or
pop
xor
cmpsb
movsl
aaa
dec
mov
cmp
dec
and
mov
xchg
jne
pop
sti
int
mov
mov
pusha
push
in
jo
cmpsb
xor
jo
sub
rcll
inc
es
cmp
sub
pop
and
ds
int
out
or
mov
xchg
pusha
inc
inc
idivb
push
insb
cmc
mov
jecxz
inc
mov
out
mov
adc
pusha
movsl
and
test
mov
sbb
cwtl
dec
ret
filds
ljmp
loop
ret
insb
or
cmp
pop
jae
jnp
pusha
ss
mov
fimuls
inc
lds
and
lahf
jl
xchg
add
pusha
sbb
adc
adc
loop
mov
stos
and
aas
in
xchg
hlt
mov
jo
aaa
add
mov
out
frstor
in
sbb
ret
stos
fld
and
push
pusha
pop
hlt
int
fisubrl
add
stos
frstpm(287
movsl
ljmp
icebp
jne
pusha
xlat
pop
mulb
int3
iret
pop
add
mov
jl
pop
sbb
into
rcll
xor
es
inc
subl
or
pusha
xchg
pop
aam
data16
pusha
enter
cmp
lds
sti
mov
pusha
add
aas
pop
out
cld
jae
sub
in
ret
adc
ret
sbb
and
popf
cltd
pusha
out
dec
out
aaa
pop
shr
jmp
mov
pusha
out
jecxz
dec
mov
std
xchg
popa
imul
or
adc
jns
lcall
test
pusha
jbe
sub
sbb
jp
pusha
stos
cli
push
out
je
ss
add
test
movsl
cmc
xor
pop
mov
rclb
int
leave
mov
pusha
dec
mov
repz
lret
mov
bound
pusha
push
pminsw
adc
xchg
arpl
mov
popa
and
jno
jp
into
cwtl
adc
jle
xor
stos
xchg
push
adc
sbb
and
int3
inc
xlat
push
push
je
popf
test
cmp
gs
cmpsb
cmpsl
jb
mov
push
jle
aas
or
pop
imul
xor
mov
ret
mov
ds
popa
sarl
jmp
loope
js
orb
adc
or
shll
cmpb
leave
dec
loope
push
jg
fdivrl
loopne
and
fbld
rcrl
out
push
inc
pop
cmp
xchg
fwait
cmp
xchg
mov
add
loop
mov
data16
bound
xchg
js
mov
jbe
sbb
xchg
inc
js
pop
rorb
daa
xchg
fs
push
mov
cmpsl
out
dec
mov
stos
test
push
dec
xchg
js
loope
sbb
sahf
arpl
jb
push
sahf
testl
jbe
xor
fsubl
adc
adc
push
push
lock
rclb
fistpll
or
aas
cmp
adc
subb
in
inc
push
andl
mov
ret
in
sbb
cwtl
sub
shll
lahf
lods
sbbb
push
mov
addr16
movsb
xchg
arpl
jns
inc
inc
repnz
jne
sahf
xchg
aam
rolb
and
mov
pop
sbb
sbb
xchg
out
or
leave
shl
add
pusha
push
iret
xor
cmpsb
inc
pop
ds
jg
ficoml
lret
xor
sub
dec
adc
or
inc
arpl
ja
rorl
insl
add
hlt
ret
addl
add
test
cmp
adc
sub
pop
xchg
enter
mov
or
bound
jb
outsl
mov
mov
push
adc
xchg
jecxz
stos
out
je
push
mov
jno
inc
mov
bound
ret
mov
push
mov
fcmovne
icebp
inc
insb
cmpsl
ret
jl
shrb
ret
mov
pop
and
mov
adc
jmp
loopne
pop
xchg
cmpsl
and
ret
xchg
push
add
mov
inc
outsl
inc
sarl
push
leave
inc
sbb
mov
lcall
and
xor
fwait
push
daa
jge
and
mov
jle
sbb
push
movsb
jecxz
and
in
xchg
add
xor
push
dec
jo
fbld
mov
rclb
mov
fldt
rcrb
sbb
fnstenv
inc
jle
sub
pop
and
shlb
mov
cmpsb
or
pop
xchg
xchg
jg
add
cmp
mov
roll
sub
lods
push
jmp
dec
insb
test
adc
bound
decb
pop
lods
and
pusha
sti
unpcklps
ss
iret
pop
xchg
xchg
jecxz
loopne
sub
pusha
or
es
subl
jns
sti
or
dec
fs
loope
inc
cmpl
ret
adc
mov
sbb
inc
inc
cmp
pusha
dec
jns
imul
fisttpll
and
mov
into
cs
movsb
stc
pusha
pop
sub
mov
addb
push
out
jns
andl
inc
dec
xchg
sub
push
mov
push
inc
ret
sbb
pop
pop
pop
mov
ss
cmp
fdivr
inc
mov
jnp
pusha
xchg
ret
xchg
outsl
mov
pusha
int3
jo
xchg
dec
popa
or
cld
enter
cmpsb
jg
ljmp
movsl
mov
leave
pop
fsubp
push
popf
cmc
pusha
inc
in
aaa
add
mov
mov
jge
aas
xchg
nop
sahf
add
imul
scas
mov
adc
lret
xlat
and
and
mov
ret
sbb
cmp
mov
mov
cld
pop
mov
cmp
sub
push
and
jg
popa
test
xchg
pusha
sti
aam
and
add
clc
pop
sbb
or
push
jmp
call
test
jo
cwtl
or
jle
in
cmpsb
les
inc
jnp
pusha
push
scas
xchg
out
loope
dec
aam
movsl
xor
test
pusha
addr16
pusha
jmp
lds
pusha
adc
insb
push
mov
decl
cltd
lcall
ljmp
faddl
xchg
leave
jl
call
mov
sub
inc
push
dec
xor
cwtl
sbb
jb
cli
test
xor
jmp
sbb
test
adc
dec
insb
xorb
aas
lcall
sbb
fwait
jmp
jl
mov
push
pop
bound
aaa
dec
pop
pusha
test
sbb
movb
pusha
dec
ljmp
pusha
or
pop
dec
leave
xor
mov
push
loop
push
pop
pusha
cld
push
add
lods
xchg
sbb
inc
jg
mov
fstp
adc
push
arpl
popf
andb
cmp
ret
fwait
sbb
cmpsb
pusha
test
or
pusha
jns
cmpsl
or
push
leave
xor
popf
mov
pop
sbb
mov
notl
je
jne
pop
frstor
or
js
mov
inc
pusha
in
gs
push
add
pusha
cmpsl
jg
outsl
jle
movsl
mov
test
sbb
push
add
insb
es
out
imul
mov
jg
xor
movsb
pop
pop
sahf
pop
xchg
push
xchg
mov
andb
or
js
push
pusha
lods
cmc
xor
pusha
sub
and
gs
push
sbb
cli
push
imull
pusha
cmpsb
daa
movsb
mov
pop
test
xchg
es
not
sbb
loopne
cmp
bound
and
push
and
push
xor
hlt
push
lahf
mov
movsb
imul
xor
popa
sbbb
xchg
out
cwtl
mov
sbb
arpl
fisubs
adc
push
imul
shlb
lret
mov
fisubs
ret
dec
mov
push
loopne
xlat
jnp
push
dec
mov
ljmp
sahf
cltd
les
xchg
data16
jae
stos
inc
mov
scas
add
pusha
aad
roll
int3
out
xchg
into
pushf
aaa
clc
ret
lea
lock
sbb
xchg
testl
adc
shll
andb
daa
ss
cmpsb
mov
inc
psubsw
xor
pop
movl
mov
or
in
fidivl
stc
sbb
out
daa
fsts
test
mov
mov
aad
sbb
cltd
inc
pusha
movsb
add
adc
mov
inc
jnp
pop
xchg
adc
sub
insb
sub
gs
aam
aas
imul
or
xlat
cmp
popa
and
ljmp
push
std
xchg
sbb
fucomp
jp
mov
loopne
mov
lods
cmp
imul
test
outsl
pop
push
cmp
dec
and
ds
ja
pushf
mov
push
and
enter
pusha
or
shrl
and
inc
mov
pusha
pop
ret
mov
dec
jo
aas
test
lods
arpl
lods
pop
mov
pop
fs
fstps
mov
push
arpl
shlb
fucomi
test
sub
push
jae
jo
xchg
cld
fsubrl
add
cmp
cmp
test
lods
ja
push
mov
jmp
push
jo
pushf
push
lahf
popa
addb
dec
mov
das
notb
test
mov
xchg
movsb
pusha
xor
stc
mov
div
out
outsb
adc
loope
jmp
lds
sub
lsl
sub
cld
orb
aad
pusha
xchg
negb
xchg
pusha
sub
popa
or
xor
mov
pusha
jnp
arpl
incl
push
adc
insb
xor
sbb
xchg
xchg
arpl
rcr
jns
mov
shrb
andl
cmp
jae
or
pop
loop
into
dec
xchg
scas
pop
mov
push
jecxz
mov
xor
shl
in
decl
pusha
fadd
and
mov
cmpsl
fcoml
popa
sub
mov
movsl
inc
scas
push
xchg
fwait
sub
push
jecxz
mov
lods
test
jg
cmp
andl
sbb
ljmp
pop
lret
and
arpl
inc
ja
jbe
mov
pop
lods
xchg
push
loop
aad
out
pusha
inc
shr
fbstp
rcrl
loop
cmpsb
push
pusha
inc
sbb
add
mov
fwait
push
outsl
pop
and
jge
adc
aad
mov
mov
xchg
xchg
jecxz
in
andl
xlat
xor
popa
repnz
jb
ret
push
mov
sub
insb
insl
adc
cli
xor
test
sbb
cmp
pop
or
out
enter
pop
fcomps
pusha
scas
lods
into
jb
jle
pushaw
push
mov
and
xchg
fwait
ds
sarb
add
add
sar
sub
or
je
fisubrs
out
adc
mov
pusha
add
push
or
pusha
call
das
push
mov
sub
xor
pusha
addl
mov
lcall
es
mov
mov
cmp
jl
or
pop
pushf
pusha
or
dec
or
mulb
pusha
mov
nop
arpl
stos
or
lods
push
sub
mov
js
aam
sarb
popf
std
dec
lret
fs
cwtl
hlt
push
in
test
mov
pusha
or
mov
pusha
dec
inc
or
mov
lcall
xor
sbb
xchg
adc
cmp
out
mov
aad
push
jmp
test
int3
mov
jge
pusha
add
cld
xchg
dec
pop
cmpsl
cmp
repz
int
andb
add
mov
adc
lret
mov
mov
insb
cmpl
rcrb
pusha
mov
xor
pop
inc
inc
arpl
pusha
fwait
in
les
call
test
loopne
push
mov
inc
pusha
inc
fwait
sub
pop
pusha
sub
push
adc
lods
pop
push
fstps
push
ss
pusha
hlt
popf
in
xchg
pop
cmp
int
jo
inc
daa
pusha
jl
rcl
loopne
bound
inc
stos
xor
or
mov
sub
pusha
lock
popf
mov
pushf
push
sarl
movsb
jp
or
inc
pusha
arpl
or
sbb
mov
dec
shll
push
ret
shlb
or
jg
mov
lahf
mov
pusha
nop
jle
pop
stc
mov
pusha
loopne
push
add
adc
pusha
or
jmpw
add
lret
das
pusha
cmp
cmc
xor
sub
outsl
adc
fcomps
push
imul
pusha
adc
push
push
fs
jbe
lods
out
fcoml
mov
mov
arpl
clc
jge
std
cli
cmp
ret
jb
outsl
iret
mov
jae
push
xor
push
addr16
das
xor
mov
cmpsb
xchg
rolb
push
stos
arpl
mov
xchg
icebp
pusha
pop
adc
pusha
xchg
repz
dec
stc
clc
mov
and
mov
cmp
fisttpl
xchg
sub
adc
movsl
aam
lods
add
pusha
sbb
rep
fwait
and
in
stos
mov
fwait
cwtl
and
cmc
pop
loope
adc
aaa
mov
push
push
and
orb
or
ljmp
mov
lcall
pop
inc
in
and
cld
sub
or
sub
pop
cmp
sbb
jecxz
cmp
cwtl
pusha
mov
roll
gs
repz
lock
cmp
out
lret
mov
cwtl
outsb
push
aam
sub
pusha
sbb
lahf
bound
idiv
pop
seta
push
lods
icebp
mov
push
ret
orl
push
or
mov
jb
ret
ja
mov
mov
ss
out
jecxz
out
rcrl
int3
or
iret
je
adc
xchg
xorb
or
jmp
hlt
sbb
push
adcb
das
das
xorb
sub
adc
sahf
inc
pop
dec
adc
jno
movsb
imul
repz
mov
add
fbld
pop
mov
mov
jecxz
cmp
pop
jge
divb
jp
lcall
dec
mov
pop
clc
adc
nop
adc
shl
jb
push
mov
repz
cs
mov
arpl
je
rsm
cmpsl
out
pop
aaa
push
push
xchg
fs
or
mov
inc
push
cmp
adc
dec
insb
das
sahf
xor
call
nop
in
pop
std
repnz
jb
push
scas
lock
in
arpl
mov
pusha
gs
ds
ficomps
pusha
addr16
dec
and
cwtl
sub
ror
push
notl
mov
jmp
push
mov
and
movsl
out
sbb
sub
inc
pusha
push
out
jne
imul
fcmove
std
fidivs
cs
inc
sbb
ljmp
loop
mov
and
pop
jle
sub
shll
mov
push
pusha
mov
jecxz
pusha
outsl
push
inc
in
sbb
call
in
push
pusha
ds
inc
push
jle
outsl
pusha
daa
movsl
jnp
pop
xor
in
pusha
rorb
stc
es
icebp
inc
adcl
and
pop
pop
sbb
loope
popa
lcall
bound
xor
jle
inc
pusha
cmpsb
ja
mov
push
stc
sbb
rorl
push
push
add
inc
lahf
insb
sbb
cmp
push
cwtl
loope
pusha
push
call
mov
pusha
pop
sbb
mov
or
lea
push
vpavgw
jmp
mov
sbb
push
lahf
out
pop
imul
or
sub
jg
jno
push
dec
ja
fiadds
mov
cli
cmp
or
pop
jae
jo
outsb
fistl
into
and
push
jg
mov
arpl
and
mov
lcall
sub
daa
inc
insl
test
inc
dec
aas
stos
lock
insl
ja
shll
dec
arpl
into
sub
dec
lret
adc
rclb
jle
xor
dec
inc
adc
push
jo
xor
sub
pop
and
movsb
jbe
mov
pop
mov
mov
lods
dec
loope
xor
inc
shll
pop
sbb
xchg
mov
int3
jge
mov
in
lods
in
or
and
rcrb
lods
ret
test
dec
add
mov
xor
out
xchg
xor
push
sub
rorl
xchg
jo
and
repz
iret
push
pause
loop
jnp
dec
dec
cmp
out
mov
dec
mov
cli
xchg
add
push
xor
dec
add
inc
inc
das
push
test
mov
fs
ljmp
adc
movsb
fldt
pop
stc
inc
or
lcall
xchg
cmp
std
movsb
mov
imul
and
fistl
mov
cmp
shl
icebp
imul
inc
dec
jnp
fsubrs
and
cmp
scas
mov
cli
mov
ret
fldl
lahf
flds
int
daa
in
enter
movl
inc
or
test
dec
outsl
fs
mov
sahf
inc
sbb
lret
in
pop
mov
daa
lea
jg
pop
xchg
xor
xchg
sbb
test
mov
aam
addl
rorl
addr16
es
das
fstps
jb
mov
loop
sub
mov
xor
push
shlb
add
xbegin
mov
les
add
and
movsb
inc
stc
pusha
dec
js
loopne
out
inc
jno
fldt
mov
mov
xchg
push
fnsave
pop
mov
xchg
das
adc
xchg
imul
mov
dec
cmp
cs
sub
aaa
rcrl
and
add
jmp
sbbl
decb
xor
mov
xor
and
pop
add
push
test
inc
xchg
mov
mov
insl
push
adc
cs
inc
scas
rorl
not
pop
cmp
push
dec
sbbl
flds
ds
in
jmp
mov
pop
sub
imul
fstpt
mov
lods
adc
add
ret
movb
adc
mov
dec
invd
sub
inc
fcmovnb
and
or
xor
pop
sbb
mov
test
data16
adc
jmp
stos
cmpsb
cli
repnz
aas
xchg
and
mov
pop
and
mov
mov
xchg
clc
pop
xchg
test
repz
jno
and
jbe
pop
xchg
fisubs
dec
inc
jge
aam
xchg
jne
lods
dec
mov
loopne
and
pusha
imull
insb
adc
xchg
push
rol
inc
xchg
aas
sub
loope
cmc
jo
vpshaq
out
push
jno
icebp
mov
push
pop
jle
lds
incl
sub
arpl
out
ret
repnz
and
xchg
sti
aaa
adc
aas
xchg
sub
scas
add
add
sbbl
pushw
addl
fnsave
pop
lods
arpl
dec
mov
not
sahf
loop
inc
push
push
or
inc
stos
jo
push
pop
dec
cmpsb
aad
jo
and
insb
jb
fstps
add
loope
mov
mov
ds
test
pusha
fwait
xchg
sub
sbb
into
push
popa
lds
imul
add
pusha
pop
fidivrl
dec
push
adcl
mov
and
fs
mov
lret
stos
pusha
adc
fucomi
test
mov
sub
pusha
adc
mov
jp
cmpsb
and
aad
test
sarb
adc
out
or
xchg
and
scas
inc
movsb
sbb
lahf
pop
bound
mov
dec
inc
fs
jge
xchg
add
dec
push
loope
add
jg
icebp
out
sahf
int3
sub
lods
pusha
nop
jmp
dec
cwtl
cmp
xor
aam
cmp
imul
std
lea
mov
xor
and
pop
ljmp
into
push
dec
jle
pusha
aam
dec
push
mov
adc
out
jbe
or
push
pop
and
pushf
mov
pusha
movsb
sbb
fs
dec
xor
or
mov
and
pop
loopne
cli
pusha
fcomps
xor
pusha
mov
out
mov
jne
mov
pushf
mov
pusha
sbb
pop
cltd
mov
xor
popf
mov
and
pusha
adc
sti
ds
cld
sahf
in
pop
out
sbbl
pusha
add
xchg
inc
std
into
and
pop
xchg
adc
pop
push
pop
pusha
mov
pusha
inc
cmpsb
push
icebp
xchg
add
int3
pusha
add
lea
jbe
popa
bound
mov
test
cld
and
inc
aad
inc
rcrl
mov
pusha
clc
add
loope
fs
adc
cwtl
rcl
jl
mov
rorl
push
or
sub
push
std
cld
das
mov
dec
les
and
ucomiss
cmp
in
mov
mov
pusha
mov
cmp
hlt
jbe
mov
xchg
mov
clc
cmpsb
mov
add
daa
xchg
pop
jo
xchg
fsubl
jl
mov
loopne
fistl
pop
sahf
mov
sbb
pop
sbb
out
fsubl
inc
pusha
mov
jbe
or
adc
pop
fwait
arpl
mov
pusha
fcompl
mov
movsl
push
and
push
pop
in
mov
pusha
ret
lods
icebp
outsl
mov
adcl
sbb
mov
adc
mov
js
pop
cmp
lods
in
xchg
pusha
mov
test
dec
cwtl
xchg
jno
pusha
loopne
cmp
aaa
pop
jl
data16
outsb
xchg
mov
imul
bound
jp
ljmp
pop
lahf
jo
mov
gs
pop
arpl
inc
sbb
pop
insb
dec
adc
lret
sarl
inc
test
stc
or
jns
rorl
pusha
pop
mov
ds
lods
push
jne
mov
xlat
or
fldenv
and
and
mov
stc
daa
xchg
fldt
jbe
bound
clc
adc
stos
les
or
shll
cmp
adc
xchg
sub
or
data16
clc
mov
pushf
and
cwtl
adc
pusha
cmp
xor
int
sub
pusha
mov
pop
in
mull
sbb
jl
cmp
push
insb
cltd
mov
push
lcall
arpl
stos
fistpll
cmp
cmp
test
insl
loop
test
pusha
stc
push
cmp
idivl
add
sbb
adc
pusha
dec
pop
inc
repnz
roll
mov
lahf
pusha
scas
adc
cmpb
stos
mov
ja
jmp
insb
push
cmp
add
insb
clc
test
nop
shll
mov
in
dec
jo
lret
cs
push
sub
pusha
sub
rorl
fsubs
enter
mov
pusha
or
xor
and
dec
xchg
add
cs
push
fwait
mov
inc
loop
push
inc
adc
mov
push
fstps
movsb
mov
dec
mov
dec
pusha
adcb
pop
jmp
sbb
inc
test
push
inc
hlt
jle
xor
je
int
xchg
and
add
clc
pusha
out
pop
mov
xchg
out
shrl
dec
repnz
mov
mov
add
pop
cmp
aaa
pop
pop
xchg
ds
nop
mov
pusha
into
addb
and
lds
xor
dec
test
and
push
fs
mov
jecxz
inc
mov
pusha
cmc
in
sti
jnp
pushf
and
add
lods
popf
lahf
arpl
addr16
sbb
push
popa
mov
sahf
jg
push
xchg
push
shlb
inc
fwait
pop
faddp
dec
loope
fdivrs
popa
mov
or
jle
stc
sbb
add
and
pusha
out
jnp
outsl
pop
add
iret
cmp
in
push
push
insl
inc
fwait
xlat
pusha
xchg
cli
push
and
pusha
in
test
lret
jmp
pusha
lea
ja
pusha
repnz
ljmp
mov
inc
sub
pusha
xchg
add
sti
dec
aad
in
pusha
dec
or
xchg
in
fcomps
es
scas
mov
pusha
stos
sub
xchg
push
push
pusha
jmp
sbb
or
mov
cmp
mov
dec
sub
outsl
and
movsl
hlt
fs
and
loopne
xchg
cltd
loop
jmp
pop
out
test
pusha
mov
bound
pop
dec
sbb
mov
lret
ret
movsl
mov
out
bound
subl
pop
sub
insb
stos
lahf
or
ret
ret
xor
xchg
xor
fistpll
addr16
dec
push
sti
push
jecxz
mov
inc
fsubs
lds
pusha
push
les
nop
int
pusha
subb
add
jl
lods
std
loope
pop
dec
sahf
roll
dec
jmp
add
cld
sbb
leave
mov
cmp
pushf
push
insb
xlat
dec
jg
sub
mov
cwtl
test
dec
jle
mov
jns
push
sub
pusha
jmp
inc
push
popa
pusha
sbb
add
or
rcr
mov
xchg
jns
adc
scas
add
sub
add
aas
mov
mov
cmpsl
cmp
pop
mov
lds
scas
sub
or
inc
test
pop
outsb
adc
add
sbb
and
repz
pop
addb
mov
inc
dec
pushf
inc
and
call
popf
popa
addb
add
xchg
mov
inc
sbb
outsb
leave
pop
cmpsl
inc
and
jbe
shll
mov
lods
insb
pusha
mov
data16
pusha
dec
mov
adc
add
ja
mov
pop
inc
mov
lahf
loop
mov
or
loop
ds
out
cld
mov
divl
fistpl
inc
in
out
pusha
xchg
mov
mov
enter
bound
ja
dec
add
or
stos
mov
fnstsw
jecxz
movsl
arpl
or
shll
add
ds
jae
cmp
jb
push
inc
insl
mov
imul
dec
xchg
mov
nop
xor
dec
insb
push
lds
dec
loop
add
adc
subb
aaa
into
mov
loop
xor
adc
cld
dec
imul
pusha
scas
or
add
pusha
jmp
rcrl
call
mov
jl
or
sub
mov
dec
jle
pop
add
arpl
add
sub
shll
push
mov
pusha
mov
cmp
sbb
mov
test
pusha
xchg
jo
adc
ss
insb
mov
push
scas
rcr
pusha
cs
adc
jl
test
std
cld
adc
pop
je
pusha
xor
dec
in
add
or
test
or
pusha
cld
loopne
mov
pusha
imul
rcrb
cmp
add
pusha
iret
out
xlat
ficompl
cwtl
sub
push
pusha
fld
sar
divl
sahf
loope
cmp
rcr
js
les
mov
dec
jle
jge
fs
and
xchg
out
push
in
adc
nop
jmp
lea
mulw
test
add
mov
jno
cmp
daa
pop
dec
pop
inc
ret
sahf
arpl
jns
mov
cmp
sbb
push
sbb
mov
mov
cmp
xor
fistpl
jecxz
xchg
pusha
adc
repnz
cmc
dec
mov
rcll
test
outsb
mov
icebp
adc
fadd
clc
loopne
cwtl
mov
jge
mov
jne
cmp
ret
call
add
xor
cmp
lods
jge
rcrb
sbb
push
xchg
inc
roll
push
pop
mov
pop
push
jb
inc
leave
or
pusha
test
dec
fwait
shll
xor
mov
loop
loopne
dec
adc
lock
orl
pushf
pusha
rorb
adc
cmc
test
or
adcb
fs
scas
setno
sti
ret
xor
fwait
scas
pusha
inc
xor
mov
pusha
cmpsb
mov
popa
xchg
or
das
icebp
sub
add
mov
in
inc
nop
ret
pusha
dec
push
fwait
and
repz
jne
xchg
sti
movsl
pusha
push
ret
sbb
hlt
ljmp
sbb
jne
mov
sub
popa
movsl
out
xchg
xor
mov
push
add
jl
mov
inc
loope
outsl
push
mov
andl
mov
mov
ljmp
sbb
fsubl
sbb
xchg
fs
push
pusha
pop
xchg
mov
inc
pop
jae
mov
mov
insb
repnz
dec
shlb
cmpsl
mov
pop
dec
icebp
jle
mov
inc
and
popa
test
sarl
cmp
or
stos
mov
jbe
mov
sub
jb
loopne
pusha
dec
in
jecxz
xchg
cltd
pusha
aad
xlat
aam
insb
sbb
pusha
mov
daa
mov
mov
adc
sub
pusha
adc
addr16
test
popf
pusha
push
adc
lret
dec
mov
test
shll
negl
and
fidivs
push
loope
das
icebp
dec
add
and
iret
pop
add
mov
pusha
into
jge
mov
pusha
inc
int
sbb
mov
pusha
jbe
pop
in
xor
xchg
cmp
shufps
scas
clc
adc
and
or
push
pop
sbb
pop
test
pusha
push
mov
push
repnz
sbb
pop
pop
movsl
mov
push
xchg
xchg
rclb
push
insl
add
xor
mov
outsb
fs
sbb
enter
mov
sub
rcll
pop
pop
mov
pop
mov
pusha
test
sbb
out
cmp
lcall
mov
pop
loope
xchg
mov
iret
faddp
inc
ljmp
mov
repnz
test
add
xor
loope
unpcklps
fcompl
fwait
dec
push
lds
pop
lods
mulb
jg
lahf
mov
jl
loope
mov
imul
clc
insb
adc
jo
rorb
push
cwtl
pusha
es
sbb
ret
loopne,pt
cli
cmp
fcmove
mov
cmpsb
aas
aad
xchg
mov
sub
lds
loopne
insb
xchg
aas
sbb
pusha
dec
jb
mov
pusha
pop
aam
lret
cmpsb
sbb
sub
mov
pusha
mov
clc
es
nop
int
pusha
lret
adc
daa
js
push
and
jge
pusha
stc
pop
leave
pop
push
pusha
pop
inc
pop
int3
lods
inc
cmpsl
in
add
lods
fmuls
fcmovne
pusha
mov
xchg
outsl
insb
popf
stos
pusha
cmp
insl
sub
adc
pusha
pop
mov
inc
js
loope
pusha
and
sub
pop
dec
std
xchg
movsl
pusha
gs
and
pop
pop
test
pusha
dec
cmp
push
mov
ss
and
push
mull
iret
or
ds
int3
fsubl
lahf
ss
pushf
push
push
adc
or
pop
mov
lcall
insb
cmp
xchg
repz
mov
mov
xchg
add
shl
dec
outsb
lret
movsl
mov
mov
lock
mov
add
push
xor
dec
pusha
outsl
push
daa
push
dec
push
test
xchg
pop
xlat
fisttps
adc
pop
xchg
pusha
ja
data16
rcrb
dec
loopne
and
mov
add
arpl
adc
dec
cmp
rorb
adc
xchg
mov
pushf
add
mov
adcb
cmp
jae
sarl
inc
mov
sub
movsl
xorb
mov
aam
cld
add
push
ds
test
jb
xor
mov
sub
hlt
xor
inc
sbb
test
ja
push
cmp
pusha
and
mov
fdiv
pusha
xor
jb
inc
sbb
loope
pop
out
imul
es
or
ret
cmp
add
aaa
jo
mov
fdiv
add
pop
jmp
xchg
lahf
bound
div
not
push
fs
cmp
add
andl
or
add
mov
pop
fsubl
xor
jne
xchg
movsl
xchg
sub
xchg
fwait
mov
push
pop
cmp
shl
jp
dec
sbb
lea
mov
ljmp
ss
sbb
int3
lret
aaa
fsub
pusha
cmc
xor
cmp
mov
out
in
add
sub
pusha
jo
xchg
mov
pusha
inc
mov
shlb
rcll
lock
arpl
jl
icebp
add
in
fisubl
pop
loop
pusha
cmp
xor
daa
xor
sarb
jg
pop
cmp
fidivrl
fdivrs
stos
test
sub
stc
dec
cmp
xorl
adc
in
xchg
push
roll
sti
fwait
sub
scas
int3
xor
sar
outsb
mov
rclb
imul
push
lcall
int3
mov
int
pop
sbb
arpl
xchg
sub
div
imul
lea
jle
ffreep
xor
lahf
mov
jb
push
jbe
arpl
test
and
pusha
les
cmpsb
mov
bound
adcb
cltd
push
testb
test
dec
loop
je
push
mov
shrl
cld
sub
sbb
dec
xchg
pushf
aaa
xchg
adc
iret
popa
inc
loopne
ds
ss
seto
push
add
rorl
xchg
ret
or
adc
int
fisubrl
sub
pusha
mulb
mov
and
fs
pop
pop
pusha
lahf
out
pop
dec
inc
dec
lea
fs
stos
jl
mov
or
movsb
sub
pusha
ret
es
pop
mov
jb
mov
lods
jecxz
pop
in
ds
sbb
push
popa
cmp
andl
pop
or
mov
fstps
push
push
lock
cmp
pusha
arpl
stos
add
pusha
stos
inc
in
or
leave
adc
mov
push
scas
out
mov
pusha
xchg
lock
test
scas
xchg
icebp
and
adc
pusha
xlat
shll
int
mov
test
out
inc
push
adc
adc
fpatan
adc
movsl
into
pusha
or
mov
js
pop
aas
pusha
dec
add
dec
insb
leave
mov
cli
insl
dec
sahf
iret
enter
je
cmp
jbe
outsb
xchg
mov
jb
nop
pusha
mov
and
and
les
ja
push
mov
fbld
shrl
frstor
mov
fsubrs
pop
addr16
repnz
mov
pop
push
sub
push
and
ljmp
push
mov
ds
gs
adc
pusha
push
pop
jnp
les
jp
vphaddwq
xlat
add
sbb
inc
pusha
xor
ffreep
dec
and
stos
pop
cmpsb
xchg
push
pusha
adc
dec
lods
sub
mov
lret
out
jb
aam
pusha
sub
lds
pop
pusha
popf
push
jl
loop
addr16
outsb
icebp
mov
lods
loope
addr16
mov
arpl
dec
mov
cli
inc
push
test
mov
push
sub
mov
enter
and
cld
iret
pop
inc
cmc
insb
daa
or
jge
cmpsb
int3
imul
adc
test
push
mov
or
and
dec
fcmovne
repnz
mov
bound
adc
fsts
or
add
push
mov
pusha
pop
mov
int
or
pop
arpl
ret
fwait
jno
adc
cli
movsb
pushf
adc
dec
pop
add
nop
test
push
insl
pop
mov
pusha
dec
dec
mov
test
cltd
mov
dec
into
jecxz
sahf
hlt
dec
mulb
les
in
xor
test
out
pop
arpl
punpcklbw
rcl
fstps
dec
inc
lret
arpl
mov
mov
mov
ljmp
in
pusha
pop
push
push
xchg
lcall
add
movsb
pop
dec
sub
mov
push
cwtl
mov
xchg
stos
inc
xor
dec
pop
lods
idivl
jns
sbb
xchg
pusha
mov
xchg
addb
loopne
sub
js
mov
push
repz
pusha
inc
dec
test
push
pop
cwtl
arpl
in
xchg
and
and
bound
dec
pusha
jno
test
shlb
dec
repz
mov
pusha
sub
pusha
in
inc
inc
fidivrl
push
dec
inc
pop
shrl
pusha
stos
insb
test
adc
mov
pusha
loopne
pop
inc
icebp
or
loope
pop
dec
sub
mov
sub
inc
jl
xor
mov
cmpsb
pop
mov
je
leave
jecxz
jl
inc
sub
mov
pusha
mov
pop
adc
insb
stc
cmpsl
mov
scas
ret
push
les
es
adc
mov
fs
push
push
xchg
push
inc
mov
repnz
xor
xor
test
ljmp
pusha
xor
push
adc
pusha
insb
mov
xor
pusha
daa
lock
stc
push
ret
loop
jbe
xchg
jl
fwait
or
lret
pop
sub
mov
es
adc
sbb
lea
data16
jecxz
roll
or
jge
dec
mov
imul
stos
popf
clc
arpl
cmc
cmpsb
mov
pusha
cmpsl
repnz
pop
mov
gs
mov
pusha
inc
sbb
jae
pushf
shl
push
mov
adc
jmp
sub
dec
aaa
in
xor
lods
out
imul
mov
xor
in
popa
mov
out
inc
test
mov
push
iret
jecxz
data16
mov
out
rcrb
xchg
outsb
lcall
xchg
divl
push
movsl
inc
sbb
mov
pusha
sub
pop
frstor
dec
int
loope
jns
pusha
cli
push
jmp
mov
or
pop
stc
sbb
pusha
add
int3
xchg
sub
stos
cli
xor
fwait
or
mov
mov
in
cmp
ljmp
loope
andl
pop
out
mov
sbb
mov
bound
popa
mov
fwait
push
pusha
jbe
movsb
or
push
das
out
lods
inc
cmpsl
xor
sti
xchg
fwait
add
push
cmpsb
jbe
cmp
cld
aaa
jno
xchg
mov
jle
mov
add
and
dec
push
sbbl
dec
sahf
iret
cltd
dec
pop
jp
dec
call
jecxz
movsb
or
mov
mov
or
add
add
loope
jecxz
xchg
popa
dec
add
roll
push
negb
test
stos
fstl
adc
pop
jmp
sahf
outsl
cs
test
xrelease
fwait
push
pusha
or
call
test
xorl
int3
sahf
lea
outsb
pop
push
int
and
cli
push
pop
mov
addl
sbb
pop
clc
cmp
mov
xor
test
sbb
cltd
mov
pop
adc
and
push
jb
outsl
dec
repz
out
pusha
shl
xchg
shlb
es
adc
sub
mul
cs
outsb
mov
dec
inc
pop
xchg
pusha
lret
movsb
inc
add
sahf
jbe
fs
mov
sub
cmpsb
je
popf
xchg
pushf
dec
pop
xchg
pop
adc
jno
jl
mov
sub
inc
push
mov
inc
pusha
mov
sbb
mov
repnz
push
ss
loop
enter
fsubrs
xchg
sub
leave
mov
xchg
iret
pusha
test
mov
push
pusha
mov
js
andl
adc
mov
pusha
mov
or
negb
sub
lahf
jl
cmp
scas
xor
add
jle
cs
mov
aaa
pop
mov
inc
xor
test
rorb
inc
push
and
stos
pop
jl
push
cmp
mov
stc
jmp
adc
push
or
mov
je
in
pmuludq
jecxz
in
scas
sub
dec
mov
add
sbb
repz
xor
mov
jg
mov
insb
jg
aad
inc
mov
out
das
inc
push
adc
sbb
loope
xchg
in
into
add
shll
scas
fcmovbe
sbb
pusha
xor
fstpl
in
push
mov
inc
fidivrs
push
mov
frstor
call
adc
test
pusha
cmpsb
xchg
jge
out
adc
or
movl
cmp
popf
cltd
lds
pusha
jl
psubq
jp
inc
fsubl
jnp
arpl
pusha
xchg
dec
pusha
xchg
sbb
addb
outsb
cmp
mov
mov
mov
je
testb
push
adc
in
inc
pushaw
xchg
fs
adc
add
test
jns
sub
out
aas
jg
jmp
arpl
fdivr
insl
mov
xchg
dec
xchg
bound
bound
insb
into
clc
xchg
ss
fs
pop
jl
arpl
xchg
xchg
xor
aaa
push
daa
insb
cs
push
pusha
jbe
lock
mov
mov
mov
lds
adc
add
bound
loop
popa
jo
fs
jl
mov
jne
add
mov
aam
pop
loop
stos
movsb
xchg
ret
insb
pusha
subb
pusha
cmp
and
mov
xor
sbb
clc
dec
pop
jl
rcrl
bound
shrl
scas
pusha
notl
fstpl
dec
xlat
shlb
jge
and
push
and
arpl
mov
cwtl
in
push
jae
pushf
fldenv
add
sub
subb
pop
cli
stos
ds
mov
pusha
sub
add
or
mov
adc
xchg
cltd
ja
pushf
imul
pusha
mov
outsb
mov
jo
sbb
shrb
ss
or
mov
arpl
and
dec
scas
cmpsb
jne
ljmp
pusha
or
pop
or
mov
jmp
test
pusha
inc
xchg
imul
pop
adcl
sbb
popf
scas
cmp
je
adc
pusha
and
mov
dec
sub
popa
push
std
mov
ljmp
ret
add
push
cwtl
dec
push
loope
das
in
sub
leave
push
test
popf
pusha
adc
xchg
fildll
or
jmp
add
dec
mov
lods
sub
push
rcrl
ljmp
in
shlb
sub
adc
loopne
push
es
repz
jg
sbb
repnz
cmp
stc
enter
adc
inc
shll
pop
pop
sbb
loope
insb
dec
icebp
lods
push
sub
pusha
rorb
xor
mov
and
and
negb
scas
pop
mov
sub
popf
fwait
xchg
pusha
les
pushf
mov
sbb
mov
add
and
mov
stc
cmp
mov
addr16
push
sub
int
dec
push
or
cmp
icebp
or
cmpl
fwait
pop
adc
jg
and
cmp
out
gs
dec
inc
push
and
pop
pusha
in
jmp
fs
pusha
pop
je
mov
fs
insb
push
xor
pusha
adc
jmp
dec
jo
in
out
cmpsl
out
out
arpl
pusha
jge
xchg
dec
mov
xchg
les
jl
adc
lock
pusha
mov
and
pusha
push
jmp
mov
jmp
pusha
aaa
xor
roll
lret
outsl
and
inc
pop
roll
sub
dec
dec
add
sahf
ds
cmpb
cld
dec
aaa
popa
inc
and
adc
mov
pusha
int
shl
ja
push
pusha
mov
adc
insl
fsts
mov
adcl
lahf
bound
pop
sub
mov
les
pop
or
bound
or
sbb
gs
sbb
xchg
repnz
mov
rolb
fimull
jns
fsubs
les
loope
pop
movsb
call
adc
mov
insb
xor
push
and
in
mov
mulb
es
leave
loope
sub
push
roll
dec
repz
lret
sbb
shlb
fidivrs
in
pusha
lret
decb
aad
pusha
sahf
mov
cmp
pusha
lcall
dec
pusha
inc
jl
stc
adc
sub
rclb
add
xchg
sbb
jnp
popa
dec
cmc
cmp
inc
add
ja
out
and
pusha
add
stos
int
sub
ja
jmp
adc
mov
cmp
aam
mov
mov
popa
lahf
adc
sti
out
pusha
scas
jle
jbe
pop
mov
insb
add
adc
pusha
jbe
jo
sub
pusha
and
addb
adc
mov
xor
mov
inc
data16
ret
lret
inc
fbld
out
or
add
mov
add
js
leave
sbb
popa
jle
xor
pusha
mov
jecxz
mov
stos
mov
sbb
stos
mov
sub
lret
mov
adc
xor
roll
dec
push
xorl
inc
mov
xor
sbb
lock
pusha
icebp
push
jb
pop
or
add
cltd
fucom
pop
and
dec
mov
nop
pop
andb
bound
mov
les
bound
xor
jb
rolb
sbb
cmp
add
pusha
adc
push
sbb
xor
jecxz
push
bound
test
jo
xor
and
pop
dec
jmp
dec
xchg
pushf
in
dec
pusha
rclb
aaa
ja
shll
sahf
in
xchg
xchg
inc
mulb
outsb
mov
pusha
cs
add
add
jp
loop
fs
sub
mov
pop
cltd
or
push
mov
in
fiadds
xor
lahf
nop
fistpll
movsw
jle
push
daa
aaa
les
ljmp
in
lret
pop
lods
test
pop
push
adc
popa
cmp
aam
mov
jnp
mov
mov
cld
adc
call
jno
insb
aaa
loope
out
outsl
sbb
dec
pushf
jecxz
bound
lea
test
pop
lds
fdivl
arpl
pop
push
sbb
inc
xchg
lea
aam
inc
stos
aam
xchg
pusha
std
cmpsl
aad
dec
bound
add
imul
pusha
push
data16
xor
inc
add
sub
popa
push
and
ljmp
into
addr16
xchg
pop
enter
pusha
push
aad
das
sub
mov
inc
fisttpll
xchg
and
pusha
int3
jle,pn
scas
out
lahf
lret
insb
pusha
fstl
lds
adcl
gs
int3
sti
mulb
mov
div
movsl
rcll
cmp
xchg
sbb
jns
and
pop
cwtl
outsb
rol
jmp
fistps
or
rcrb
sbb
aam
pusha
stos
fnstcw
adc
xchg
pop
loop
jnp
negl
sub
mov
inc
stos
fiaddl
mov
jmp
mov
shr
and
je
loopne
xchg
arpl
mov
in
mov
inc
xlat
mov
and
pushf
call
dec
xchg
popa
adcb
adc
ret
xchg
mov
lret
enter
fdivrs
cmp
xchg
repz
mov
popf
adcb
mov
mov
xor
inc
push
sub
stc
inc
jmp
push
test
xchg
adc
ljmp
mov
sbbl
testb
mov
jns
mov
xor
testl
dec
fdivrp
cli
xchg
xchg
loope
mov
testb
inc
or
aas
sahf
mov
movsb
sbb
sbb
fwait
aas
and
pop
jle
cmpsb
je
push
jns
push
movl
and
cmpsb
jecxz
js
cmp
inc
or
mov
movl
je
andb
inc
jl
mov
sahf
lret
and
pop
adcb
push
adc
pusha
rol
je
dec
bound
sub
sub
loop
pop
adc
popa
gs
sbb
and
adcl
lods
and
adc
cmc
sarl
jae
mov
or
or
stc
adc
dec
mov
mov
lock
mov
adcb
push
pusha
mov
hlt
out
or
add
adc
stos
enter
mov
mov
push
push
push
mov
inc
push
sub
pusha
and
push
mov
fbld
jo
xchg
cltd
xor
sub
je
testl
pop
push
add
xor
pusha
nop
sarl
mov
xchg
push
ja
pop
adc
mov
or
out
pop
pusha
mov
lret
pusha
xor
xlat
test
push
mov
pusha
pop
lock
scas
push
and
leave
pusha
mov
jp
aam
aas
mov
mov
mov
mov
jmp
pop
and
out
pusha
jge
cmpsl
mov
adc
aad
pop
aaa
xchg
mov
into
ja
pusha
test
sti
icebp
fs
fisubrs
and
andl
adc
inc
xchg
lret
sahf
cld
add
cmp
add
cs
sbb
andb
mov
cli
sbb
aas
enter
xchg
test
ljmp
rcl
pusha
cmp
es
mov
repnz
icebp
add
pusha
ret
sbb
cltd
push
pop
sahf
outsb
pusha
push
insl
mov
sub
mov
pusha
scas
mov
test
push
mov
loope
jbe
pusha
std
xchg
dec
lcall
inc
and
adc
dec
or
adcl
mov
repnz
jno
pop
cmp
pop
ror
jmp
gs
inc
mov
aad
pusha
jl
or
fs
add
cmpsb
mov
bound
inc
and
fwait
stc
dec
imul
jne
pusha
pop
xlat
push
es
jns
hlt
pusha
push
adc
arpl
jecxz
insb
cmp
pop
aaa
pop
xor
push
mov
dec
and
cmpsb
movsb
push
mov
xor
pop
push
add
mov
repz
loope
and
pop
dec
pop
sti
adc
arpl
xchg
add
pusha
lock
cwtl
addr16
das
pusha
xor
std
fmull
dec
inc
dec
add
popa
mov
xchg
pusha
push
cmp
mulb
and
sub
shlb
adc
insb
pusha
out
and
inc
and
jecxz
fstps
mov
or
xor
aas
sbb
ja
inc
mov
cmc
aad
scas
iret
pusha
add
hlt
jp
push
pusha
dec
cwtl
lods
lods
popf
popa
mov
add
es
push
mov
dec
mov
out
pop
roll
pop
xor
pusha
fcompl
mov
pusha
cld
lret
jbe
cmp
xchg
vpmaxsb
pusha
add
push
pop
adc
fwait
jmp
xchg
in
pusha
rcl
mov
punpckldq
or
pusha
lret
cmp
fidivrl
and
sub
push
mov
cmpsb
bound
pop
enter
movsl
fs
mov
bound
fdivrp
push
int
pusha
mov
sbb
cmp
mov
pusha
stc
mov
jno
jl
ret
sbb
shrb
xchg
ret
cmp
sbb
addb
stos
pop
imul
pop
ret
jge
ficompl
cmp
inc
and
xor
out
xchg
pusha
push
fists
dec
ficomps
lea
es
xchg
push
add
jecxz
in
sub
enter
mov
sbb
testb
out
adc
mov
rcr
jnp
adc
lds
into
shll
sub
add
mov
pop
jno
xchg
stc
fmuls
sahf
mov
adc
and
pop
cs
add
xchg
xor
pop
in
outsb
inc
fs
shl
pop
adc
pusha
inc
mov
jp
or
pop
sbb
frstor
pop
adc
in
or
or
inc
jmp
mov
jno
and
sbb
pusha
fstpt
test
fldl
sub
cmp
mov
pusha
clc
cmc
adc
xchg
mov
pop
cld
and
popa
andb
dec
pop
jno
outsb
fs
mov
mov
inc
loop
cmp
add
lcall
leave
out
cmc
ret
andl
lock
mov
fwait
and
xor
push
test
mov
pop
sub
test
popf
ss
push
mov
test
pusha
clc
loop
lret
aaa
push
add
rcll
out
ja
out
pusha
mov
pushf
dec
repz
xlat
mov
fstpl
shll
add
out
mov
inc
pusha
push
fnstenv
add
lea
dec
lret
bound
mov
cmpsb
lret
push
je
movsb
mov
and
lret
jl
sti
push
lahf
shlb
shlb
ret
movsl
xor
orb
pusha
es
dec
outsl
xchg
mov
rolb
icebp
stos
sbb
sbb
sub
push
push
mov
jmp
iret
sbb
in
cmp
sbb
loop
js
jbe
mov
verr
mov
insb
fwait
xchg
push
insb
dec
data16
dec
or
hlt
cmp
aam
inc
pushf
pusha
enter
maskmovq
notl
test
inc
mov
pop
or
sub
stos
pop
mov
pusha
ret
mov
pusha
mov
and
mov
mov
insb
shll
das
sbb
fmull
pusha
shl
fsubl
pop
cwtl
pusha
sub
pop
lock
jp
jbe
loopne
shl
pusha
xchg
push
addl
int
rclb
jge
lret
and
jle
pushf
adc
sbb
fisttps
sarb
adc
push
iret
out
mov
stc
cmp
xchg
pusha
aas
sub
mov
arpl
test
enter
dec
pusha
je
fsubrl
jnp
inc
and
ret
mov
mov
test
push
ds
mov
sbb
das
jg
imul
sbb
dec
cmp
hlt
mov
inc
xchg
push
xchg
push
jo
xchg
rcrl
mov
push
xor
adc
nop
mov
add
pusha
add
xchg
frndint
cmp
mov
cltd
in
cs
or
scas
mov
and
or
pusha
shll
pop
decb
jmp
pusha
push
pop
push
adc
pop
sbb
cmpsb
mov
dec
jnp
pusha
out
xor
xchg
ja
pusha
fs
shll
inc
xchg
ds
or
lret
xor
test
push
bnd
test
push
lds
bound
pusha
inc
add
stc
and
pusha
jl
pop
xchg
iret
pop
fwait
mov
pop
fs
or
cld
ret
aaa
pusha
pop
jl
sub
insl
bound
sub
data16
clc
std
cmp
lea
lahf
add
inc
out
jecxz
imul
adc
pusha
add
mov
mov
jnp
pop
lock
dec
sbb
loope
pop
push
sub
aam
loopne
lea
jns
shll
pusha
cmpsb
xchg
int
dec
ljmp
xor
cmp
addr16
mov
add
sub
dec
sub
xor
push
scas
cwtl
and
xlat
sbb
mov
pusha
xor
push
jnp
aam
cmp
dec
pusha
sub
adc
out
adc
insb
cs
hlt
mov
push
fcomps
lahf
add
and
xor
adc
bound
pushf
xor
int3
pusha
push
xchg
or
dec
ret
jb
bound
js
inc
add
pusha
test
fs
orl
test
shlb
jle
mov
jmp
inc
pusha
xchg
fstps
xchg
pusha
cmp
sbb
pusha
je
fcoms
fcompl
inc
jo
push
jmp
pusha
daa
xchg
pop
faddl
les
dec
mov
daa
ret
std
nop
mov
data16
cmp
insb
popf
jno
sbb
inc
mov
pop
sbb
mov
adc
sub
fistpl
loop
sbb
fldenv
mov
add
sbb
loope
inc
shll
bound
fisubs
in
inc
pushf
mov
and
stos
pusha
addr16
mov
lret
mov
mov
call
mov
out
pusha
fistps
jp
xor
dec
pusha
outsb
inc
and
adc
jb
push
jg
pop
ret
xchg
xchg
and
mov
dec
inc
push
pusha
insb
int3
mov
or
add
and
pusha
cmp
stos
push
jecxz
pusha
jmp
lret
pusha
insb
in
cld
mov
pusha
xchg
jo
sub
rorl
fisttpl
adc
lret
dec
pusha
movsl
push
jmp
repnz
push
mov
pop
fs
jp
cmp
add
pusha
icebp
sti
adc
jno
xchg
inc
fs
fwait
loope
fnstcw
inc
daa
push
adc
dec
cli
push
test
jl
int3
lret
xor
push
pusha
jp
and
pop
pop
xchg
bound
cli
daa
xlat
cs
cmp
lods
nop
push
adc
or
aad
ror
cmc
fisubl
insl
out
push
in
bound
dec
clc
mov
pusha
imul
pusha
outsl
int
push
daa
inc
sub
pusha
scas
das
out
mov
sbb
outsl
dec
sbb
div
pop
push
data16
pop
popa
add
fldcw
push
cmp
cmp
xchg
pusha
pop
adc
ljmp
xlat
arpl
inc
fs
gs
mov
dec
lret
test
test
fildll
pusha
cmpsl
jno
aad
and
add
out
pushf
add
and
scas
insb
mov
xlat
hlt
sbb
int
lods
jl
xchg
sub
daa
mov
jl
andb
push
mov
cld
rolb
pusha
and
sub
add
cmp
mov
out
mov
jno
pop
insl
fadds
and
js
clc
pusha
fwait
pushf
mov
loop
sbb
pusha
pop
mov
pop
xchg
dec
pusha
mov
push
sub
nop
mov
bound
xchg
pusha
cmp
clc
push
cmpsb
sbb
lret
pusha
push
sbb
adc
addr16
scas
fs
add
xchg
arpl
inc
pusha
jmp
aaa
jnp
xchg
xchg
lock
xor
adc
dec
or
lretw
pop
inc
fs
push
mov
push
pusha
scas
adc
add
jo
or
pop
mov
je
inc
push
xor
arpl
xchg
aas
mov
or
popf
sahf
mov
pusha
fnstcw
bound
xchg
sub
mov
nop
cmp
insb
sbb
ret
and
arpl
in
mov
int3
lock
pop
mov
in
adc
mov
js
mov
sub
mov
fdivrs
imul
mov
pushf
outsb
int
lea
fwait
jmp
icebp
rcll
xchg
mov
ja
andb
bound
ret
cmc
pushf
sbb
adc
out
in
adc
sbb
test
inc
sbb
cwtl
cmpsl
and
add
pusha
sub
pusha
in
sub
sbb
cmp
repnz
pop
test
push
dec
imul
and
xor
or
out
mov
movsl
je
xchg
mov
mov
pop
out
pusha
xor
push
test
pusha
loopne
cmp
cmc
lcall
dec
cs
movsb
pushf
cmp
and
lock
pusha
jp
cmp
jae
sub
pop
hlt
dec
ljmp
push
mov
xor
mov
or
jl
sbb
or
or
fwait
lret
stos
jecxz
xchg
daa
ds
jge
cmp
loop
mov
jne
pusha
mov
sbb
pusha
and
aas
adc
pop
cmp
pop
jecxz,pt
daa
sub
ret
shll
mov
loope
inc
imul
imul
inc
sahf
mov
cmpsb
cwtl
mov
xor
movsl
mov
cmp
sbb
rclb
adc
pusha
mov
test
jl
cli
fadds
arpl
dec
shlb
aas
test
in
pusha
xor
add
pusha
loopne
in
std
out
movsl
xchg
sub
mov
pusha
mov
in
lcall
out
testl
add
addb
iret
scas
fcomps
fstpt
jecxz
jmp
sub
lcall
dec
push
mov
mov
adcl
fs
jnp
leave
outsb
xchg
xor
mov
mov
pusha
cli
pop
cmp
clc
pusha
outsb
push
mov
pusha
enter
mov
cmp
pop
jmp
in
arpl
fstpt
add
pusha
insb
sub
xor
jle,pt
pop
dec
pusha
mov
int3
lret
test
fsqrt
mov
xor
imul
pop
cmp
push
enter
lea
dec
pop
in
bound
mov
or
mov
xchg
mov
and
fbld
push
ficoms
jo
lods
sub
mov
sbb
je
xchg
dec
dec
jl
jbe
lahf
out
incl
push
ja
pusha
cmc
into
dec
pop
and
les
jnp
aam
fmull
push
popa
jb
cltd
es
cmpl
dec
pusha
xor
pusha
out
xchg
aam
mov
ja
pusha
mov
or
andb
cs
pusha
xor
adc
cld
jmp
xor
pop
int
mov
fsubrs
and
xchg
pop
mov
pusha
push
jecxz
rorb
repnz
pusha
xchg
je
mov
lock
pop
mov
sahf
mov
pop
sub
ds
mov
mov
orb
sub
repz
popa
ret
out
scas
aaa
jo
add
enter
adc
push
cli
mov
arpl
xor
pusha
fisubs
lods
popf
add
stos
hlt
cmp
test
pusha
sub
cmpb
pusha
push
fisttps
mov
push
rcll
jns
xchg
bnd
out
pop
ds
cmpsl
pop
lahf
mov
in
stos
test
test
arpl
mov
aad
pop
pusha
andl
pusha
adc
loop
push
add
mov
xchg
xchg
xor
mov
pusha
push
inc
in
jl
mov
xchg
adc
push
pusha
into
dec
fwait
and
ja
pusha
js
xor
mov
dec
movsb
bound
and
xchg
fsubs
ret
ds
mov
sahf
mov
lods
mov
rcrb
mov
inc
lcall
and
and
pop
mov
pusha
inc
ja
outsb
xorl
dec
das
imul
cmp
pop
out
or
out
xor
sti
and
jns
pop
push
pusha
sahf
cmp
in
bound
cmp
or
push
inc
ret
adc
dec
nop
and
call
push
jge
stc
loopne
pusha
out
adc
divb
add
pushf
sbb
and
jae
mov
sbb
movsl
pusha
sahf
movsb
js
out
mov
gs
bound
mov
js
jne
hlt
das
pusha
and
test
insb
dec
sub
je
int
aaa
cld
popa
pusha
ljmp
stos
fistpl
jl
cmp
adc
dec
js
inc
pop
lret
pusha
pop
add
in
fiaddl
and
hlt
push
and
inc
mov
push
fs
sub
ja
bound
mov
jg
pushf
cs
js
push
aam
xor
dec
add
jg
scas
jbe
enter
repnz
je
jns
test
sbbl
inc
cmpsb
outsb
jge
das
pusha
push
lods
movb
icebp
cmp
sarl
xchg
adc
outsb
xchg
sub
ljmp
add
mov
lods
mov
nop
outsl
xor
sub
inc
int
xor
pop
add
jbe
arpl
fdivl
lea
pop
leave
push
fistpl
arpl
push
aad
outsl
imul
jo
mov
bound
jmp
mov
mov
aam
inc
xorl
mov
and
mov
stc
lret
pusha
dec
shlb
insb
cs
out
ja,pt
sub
mov
cld
sbb
dec
test
sbb
and
sarb
mov
push
xchg
adc
inc
xor
jle
or
push
jne
mov
lock
mov
dec
sbb
test
add
insl
popf
adc
pusha
mov
xchg
loope
mov
jns
xchg
dec
test
pusha
dec
mov
or
push
adc
loopne
daa
xchg
mov
pusha
aam
aas
pop
cmpl
sahf
jb
mov
push
cmp
bound
adc
icebp
je
cli
imul
xlat
xchg
addr16
pusha
mov
sbb
cmpsb
pusha
sub
aaa
push
adc
jae
out
adc
pop
mov
jg
adcl
aaa
ss
loopne
push
jmp
sub
inc
dec
push
ds
xchg
sub
sbb
cmp
in
pop
imul
aaa
sti
out
insb
add
mov
xchg
sbb
xchg
pop
shll
pusha
test
push
push
jne
add
push
fidivrl
popf
adc
negl
dec
jp
push
pusha
push
outsb
cmp
jle
aas
cmpl
fmull
sub
add
pusha
addr16
adc
mov
mov
hlt
out
rolb
jns
sub
mov
mov
lds
lret
bound
daa
sub
dec
aad
add
movl
fmull
nop
xor
cmpsl
rclb
xorl
jns
call
loopne
sbb
push
cwtl
add
mov
cmp
fadd
and
scas
into
pusha
push
adc
or
sbb
jl
pop
push
mov
lds
push
inc
ret
loopne
mov
push
pushf
lods
bound
in
aaa
test
pusha
jg
xor
push
xlat
mov
mov
bound
mov
pusha
cmp
lods
or
jecxz
nop
in
jl
cmpps
cs
fs
leave
outsb
out
loop
out
cmp
sbb
cmp
ljmp
mov
jl
dec
mov
jae
adc
adc
sub
aam
fs
mov
push
loopne
jecxz
xor
jnp
shlb
loopne
stc
andb
pusha
xchg
aam
mov
fs
cmp
mov
jbe
inc
jo
cmp
push
sub
imul
setle
add
mov
pusha
mov
inc
cmp
xor
subl
adc
push
gs
push
imul
pusha
lea
outsb
mov
adc
push
lods
int
sti
xchg
inc
pusha
mov
std
stc
pop
insb
fisubrs
pusha
lahf
jmp
mov
lret
push
aaa
sbb
jae
jle
and
mov
cmpsl
jmp
inc
fdivrs
fnsave
dec
into
pusha
nop
dec
fsts
leave
mov
pop
sarb
fsubr
sub
bound
aas
cmpsb
sub
xor
cmpsl
inc
pop
or
cmp
mov
jmp
mov
fs
out
pusha
jo
outsb
mov
sbb
mov
ja
adc
sbb
mov
sahf
cld
pop
pusha
fidivs
loopne
sub
dec
xchg
inc
jae
pusha
and
stc
icebp
adc
jae
cmpsb
pop
adc
push
mulb
mov
rcl
out
fidivs
data16
outsb
pusha
js
mov
xchg
sub
mov
adc
xchg
movsb
fmuls
cld
or
pusha
cmp
test
ljmp
xor
stos
cltd
in
stos
sub
jl
and
je
mov
addb
cli
rcrb
mov
push
cltd
fpatan
inc
xor
pusha
push
adc
scas
jnp
xlat
dec
jl
incb
xchg
stos
js
cmp
cmp
sbb
xchg
sbb
pusha
mov
jecxz
test
sti
pop
aas
mov
xor
cmpsl
and
and
cwtl
push
jo
mov
mov
bound
out
das
pusha
cmp
push
add
mov
inc
cwtl
or
pusha
xchg
fsubs
inc
adc
xor
and
into
xchg
push
pusha
mov
movsb
push
jecxz
in
data16
pop
call
cmpsl
jbe
andl
mov
pop
cmp
xor
add
orl
popa
pusha
xchg
ret
pusha
xlat
mov
xchg
cmp
xor
ret
adc
jne
stos
test
arpl
pop
push
xor
cli
jl
mov
loop
ljmp
pusha
int3
leave
mov
inc
or
mov
inc
test
sub
pusha
fstpt
fs
push
sub
hlt
imul
loope
jns
xchg
insl
sbb
push
mov
fs
es
dec
xchg
loopne
xor
out
jmp
or
aam
mov
mov
add
sub
xchg
shll
frstor
mov
jo
shl
xor
pusha
cmp
stc
xchg
pusha
fwait
pop
inc
daa
push
adc
rcrb
filds
inc
mov
ficoms
or
xor
pop
in
and
jae
mov
or
sub
sahf
sbb
cld
and
xchg
fsubl
lea
push
daa
pusha
int3
inc
shll
fdivrs
ret
addr16
xchg
stos
loope
mov
jmp
pop
testb
jecxz
push
daa
pusha
in
fcompl
lret
inc
pusha
xchg
and
daa
pusha
insb
jp
test
bound
std
dec
das
popf
mov
pop
jmp
fisubs
and
dec
xchg
or
and
cmp
mov
inc
movsb
sub
sub
insl
into
pusha
shll
lret
mov
inc
mov
pusha
icebp
mov
push
dec
sbb
mov
jl
cltd
jp
test
mov
sub
enter
pop
sbb
mov
cld
pop
jp
inc
mov
lds
pushf
in
cmp
adc
cmpsl
fsubrl
pusha
dec
mov
es
pusha
xchg
jne
loop
add
and
rcr
pusha
cmc
daa
cmpsl
fxch
pop
lret
mov
xchg
gs
scas
out
pop
rcll
xor
sbb
fwait
xchg
pusha
jg
sub
inc
cs
shrb
xchg
pop
mov
arpl
sub
pusha
jg
test
pop
std
mov
popf
bound
es
mov
lods
inc
repz
loope
rcrl
mov
outsb
sbb
test
pusha
add
popa
xor
xchg
aam
arpl
pusha
shlb
sbb
xchg
pop
mov
cli
sbb
mov
inc
and
fsubl
lds
shll
mov
enter
mov
fldt
int
adc
xor
jl
imul
cmc
fndisi(8087
inc
mov
pop
arpl
push
mov
sbb
pusha
pop
cld
fnstenv
ror
outsl
sbb
pusha
sahf
mov
mov
or
sbb
sbb
fistpl
xlat
pop
sbb
mov
in
mov
push
aaa
inc
cmc
sbb
neg
sub
shll
or
cmp
inc
cmp
fwait
pusha
bound
dec
or
pusha
psubb
cmp
xchg
push
pusha
int
inc
pop
adc
ds
sbb
movb
fsubrl
imul
jne
es
pusha
and
pusha
mov
cmp
jl
sti
and
mov
pusha
int3
mov
jl
push
push
pop
pusha
into
addr16
loope
mov
dec
mov
and
and
dec
stos
jle
jbe
pop
fstl
arpl
sub
mov
push
mov
aaa
out
loopne
push
test
sub
add
fsubs
dec
icebp
xchg
lret
repnz
fsubl
nop
ret
loop
mov
movsb
add
mov
push
and
mov
repz
fwait
andb
jecxz
les
dec
pusha
add
push
insl
cld
dec
data16
xor
mov
loop
cwtl
iret
insb
mov
push
pusha
out
decl
inc
lret
or
test
mov
inc
pop
inc
js
sbb
pop
loopne
xor
pusha
in
adc
adc
sahf
and
and
push
xchg
push
jae
iret
pusha
shrl
sub
sbb
mov
jbe
fwait
xchg
lret
bound
ds
hlt
mov
lret
pusha
fcoml
shl
jmp
pop
add
mov
aaa
cmp
in
push
ret
push
adc
andl
int
pusha
adc
sub
pusha
xor
jo
aas
sbb
inc
test
imul
je
lahf
cmpsl
dec
out
jns
xchg
scas
jle
out
repnz
push
push
adc
fsubs
add
add
divb
ret
int
jl
jb
jnp
pusha
mov
cs
push
cmpsl
pusha
in
lret
push
stos
lds
inc
xchg
jp
lahf
and
scas
scas
xor
pop
adc
dec
add
scas
ljmp
push
fbstp
test
pushf
jno
mov
test
jmp
ss
lret
ffreep
pusha
cmovno
jecxz
lret
in
push
stc
add
ja
add
pusha
xchg
jne
loopne
loope
cmpsb
pusha
das
popa
addl
sub
add
inc
aad
push
cmp
add
pop
movsb
daa
xchg
subb
hlt
pusha
in
add
in
sub
cmp
mov
arpl
lods
loope
mov
inc
rcl
inc
das
pop
dec
inc
movd
ljmp
push
fwait
lea
fcoms
insl
xchg
cmpsl
jae
pop
adc
loop
xorb
popf
add
sbb
test
mov
pop
jo
into
push
pop
sti
xchg
mov
xchg
adc
mov
xchg
jne
xor
lahf
sahf
adc
loope
into
pop
lahf
push
add
test
sbb
push
scas
push
stos
mov
loop
ss
hlt
jmp
mov
sub
fwait
sarl
je
mov
mov
ret
test
jnp
sub
dec
dec
inc
push
mov
and
xchg
outsl
nop
jb
jb
cmp
or
in
cmp
push
push
addr16
push
addb
pop
arpl
push
mov
lock
lret
pop
sub
lea
dec
int
mov
cld
sbb
xchg
loop
jo
les
fwait
push
adc
dec
in
ret
sub
xchg
test
and
lods
mov
push
mov
scas
pop
ret
dec
rcrl
aad
sub
addr16
hlt
imul
imul
shll
cltd
movsb
insl
xor
cmp
lret
rclb
je
mov
mov
and
hlt
ss
mov
xchg
rcrb
mov
cld
movsb
fildl
sbb
js
loopne
fsubrl
add
loopne
mov
mov
jmp
sub
mov
aas
mov
mov
xor
push
hlt
sbb
loope
shl
sahf
and
sub
sub
cmp
jl
into
inc
push
pop
sub
rol
gs
dec
push
mov
push
inc
ret
xorl
data16
sahf
loopne,pn
loope
rcrl
clc
je
fdivp
imul
mov
in
inc
mov
xor
addl
adc
mov
and
mov
sub
mov
sub
mov
mov
mov
mov
dec
dec
cmp
push
push
pop
sbb
adc
loop
xchg
xchg
mov
gs
dec
loopne
pop
jo
inc
ficoml
sub
mov
idiv
add
popa
in
inc
pop
inc
popf
sub
pop
jbe
sti
ret
mov
ret
sbb
jno
int
dec
push
fsubp
jl
cmpsb
inc
lcall
dec
ret
push
push
inc
cmp
sub
in
test
stc
roll
adc
xchg
or
xchg
mov
pusha
addl
les
loop
jle
inc
mov
arpl
addr16
pop
pusha
mov
mov
rep
cmp
mov
xorl
cmp
xlat
lret
sti
dec
push
dec
insb
add
add
add
inc
push
or
mov
mov
add
aam
pop
adc
lods
cmp
mov
sbb
pop
adc
pusha
lcall
ret
adc
into
inc
popa
cmc
daa
pop
mov
imul
mov
pop
xchg
adc
bound
adc
add
call
push
mov
stc
sahf
pusha
xchg
pmaxsw
aas
mov
shll
mov
mov
mov
icebp
punpckhdq
jmp
fcoms
lock
or
sub
out
call
cmc
pusha
ret
and
push
sahf
add
in
jl
jbe
sub
gs
mov
clc
fisubrs
cmp
jnp
inc
xchg
xchg
jno
sub
pusha
loope
sbbl
xchg
sbb
test
dec
call
loope
ljmp
mov
outsl
push
jmp
pusha
sub
dec
mov
outsb
mov
pop
loopne
sbb
pop
ret
mov
cmp
pop
mov
test
mov
rclb
add
insl
jl
sbb
insb
daa
test
xchg
push
adcl
pop
push
add
xor
cmpsl
movb
xor
lahf
out
stc
test
pusha
mov
mov
iret
pusha
enter
xchg
cmpsb
push
shlb
fmull
and
mov
sbb
cmpl
mov
mov
stos
imul
jle
mov
jno
adcl
mov
mov
add
imul
adc
fwait
mov
xchg
movsb
dec
push
mov
pusha
les
and
pusha
imul
jae
out
hlt
pusha
and
sbb
mov
movsb
mov
rcr
ret
outsl
mov
sbb
sbb
nop
jecxz
pusha
imul
pusha
add
pusha
fs
cmp
lret
jp
add
aad
bound
push
test
pusha
mov
insb
aaa
xchg
mov
adc
pusha
add
mov
xchg
cmpsb
adc
ljmp
cmc
ret
mov
push
sub
mov
loope
jg
mov
fs
dec
movsl
popf
test
inc
lods
subb
push
mov
dec
gs
mov
mov
xor
mov
push
aaa
xor
lsl
push
enter
daa
popf
lock
sub
jl
pop
xchg
mov
pop
mov
jb
jecxz
icebp
push
xor
inc
push
adc
andb
jp
adc
clc
fsubs
or
pop
fchs
inc
xor
stos
test
mov
aaa
cld
push
push
outsb
popa
sub
ds
dec
outsl
stos
cmp
bound
stc
addr16
repz
add
dec
lret
jecxz
insb
out
scas
or
enter
jl
and
sub
mov
add
adc
xor
pop
pusha
xchg
iret
std
fidivl
xchg
lret
test
shrl
jne
pusha
subb
pop
addl
call
pusha
js
sub
pop
push
pop
mov
cmp
rcrb
push
orl
addr16
and
cwtl
bound
sub
jl
and
fisubl
mov
pop
arpl
mov
daa
and
or
dec
pusha
cltd
jmp
pop
leave
outsb
decl
jl
pop
repz
aad
loopne
dec
popa
rcl
insb
fdivrs
inc
cli
xor
test
xor
mov
sbb
rcrl
daa
aam
jecxz
mov
stos
cltd
pusha
pop
test
sub
xor
arpl
cs
jl
insb
mov
dec
jl
and
or
jns
stc
adcb
hlt
imul
out
hlt
adc
jg
mov
pusha
push
adc
in
jge
lret
and
out
into
movsb
or
jnp
pusha
mov
je
je
xchg
dec
out
arpl
outsl
add
pop
bound
sub
mov
sbb
push
aaa
faddl
int3
pop
ja
jp
insb
lahf
lock
mov
addr16
movsl
popa
add
js
stos
xorl
pusha
or
and
inc
fs
pop
cwtl
and
mov
les
shrb
insl
jno
inc
jle
loopne
mov
sub
adc
mov
pop
loope
sbb
jb
out
pop
jmp
adc
dec
lea
je
aaa
icebp
popa
out
cmp
fwait
sti
jne
xchg
je
decb
mov
or
and
scas
lods
clc
xor
xchg
daa
push
hlt
jae
add
inc
bound
das
mov
cmp
rol
add
fsubs
in
jg
sti
test
or
push
test
int3
fbld
ljmp
insb
cmp
inc
or
fucom
ja
rcrl
xchg
push
push
stos
ficoml
subb
pop
jecxz
mov
sub
into
adc
pusha
lret
repnz
pop
nop
push
mov
clc
lods
jge
xchg
jb
dec
cmp
adc
test
push
mov
fnstsw
movsb
adc
dec
fdivrl
pop
lds
imul
jl
push
or
popa
es
add
jo
cmp
push
loopne
pop
jo
in
jno
fwait
cs
movsl
arpl
pusha
and
mov
ret
mov
repz
ds
push
out
jl
or
pop
movsl
out
jmp
dec
push
ret
inc
xchg
xor
inc
pusha
xor
mov
fs
add
mov
inc
push
mov
loope
pusha
repnz
mov
and
fnstenv
xor
adcb
outsb
cmc
pusha
xchg
xor
jge
fmul
iret
je
adc
add
cmpsb
test
jbe
fs
inc
imul
cmp
leave
dec
jb
jmp
bound
fdivs
pop
vcvtsd2si
push
iret
arpl
sub
pusha
jmp
adc
test
pop
xchg
push
adc
popa
daa
cmp
inc
test
jbe
lret
or
ss
push
cmp
outsl
mov
mov
es
jg
sub
cmp
and
jle
sbb
ja
aam
notb
out
in
xchg
aaa
int
inc
pushf
dec
mov
loope
dec
insb
repz
jle
bound
fnstenv
int3
pop
mov
mov
push
fistpll
cmp
hlt
push
andl
pop
in
shlb
push
andb
jge
dec
imul
enter
ret
pop
pop
xchg
add
push
std
dec
push
sbb
idiv
lea
imul
ss
out
push
xchg
pushf
or
negb
xchg
sbb
pop
jl
adcl
xor
pusha
shlb
fsubl
mov
sbb
stos
jl
xchg
mov
or
pop
xchg
fs
pusha
mov
add
cltd
adc
imul
mov
cmp
add
and
adc
or
enter
clc
hlt
pop
pusha
cli
scas
push
ds
xor
mov
add
lock
xchg
pop
jo
arpl
and
mov
mov
and
pusha
aad
xchg
push
jl
divl
out
fs
fdivrp
fcompl
fsubrl
jl
mov
adc
scas
fs
int
pop
or
shll
lea
dec
xchg
mov
or
jp
jnp
mov
test
jmp
cmp
sub
rol
mov
cmp
xchg
push
stos
popf
mov
xchg
lods
cwtl
pusha
imul
inc
pusha
clc
int
xchg
and
std
popf
xchg
out
mov
in
lock
hlt
mov
inc
addr16
call
pusha
lods
adcb
popa
inc
push
cwtl
dec
dec
arpl
pusha
jl
ja
inc
repz
dec
and
pusha
dec
outsl
jo
push
loope
lock
mov
dec
test
cltd
jge
movl
psubd
and
rcr
test
pop
int
iret
nop
pop
movsl
mov
push
inc
and
fcoms
add
dec
mov
inc
xchg
into
add
mov
inc
jo
xchg
dec
xor
xchg
jecxz
push
inc
xchg
and
xor
dec
fsubrl
call
mov
ret
orl
loopne
rorb
cld
sbb
jge
add
cmp
cmp
icebp
cmpsb
adc
and
mov
mov
mov
and
mov
pop
pushw
mov
filds
faddl
xor
xchg
jmp
or
ljmp
ror
aam
pop
aam
dec
inc
xor
sub
test
out
push
scas
rcrb
xchg
loop
loope
push
xchg
jne
out
dec
jl
lcall
adc
ret
test
rolb
add
jp
mov
cmp
inc
les
sbb
pop
push
je
inc
mov
lock
test
and
inc
pop
cmp
xorl
pop
or
fcmovnbe
dec
add
xor
cmp
stos
mov
in
jo
in
fisubl
fiaddl
jl
sahf
pushf
and
adc
jg
repz
ret
mov
sub
dec
push
icebp
clc
bound
pop
js
test
in
adc
dec
jmp
cs
icebp
xor
leave
mov
xor
arpl
fsubl
in
pusha
sub
and
mov
pusha
mov
stos
push
cmpl
sahf
cwtl
pusha
cmp
jbe
inc
cmp
and
mov
or
lahf
and
addr16
xchg
xchg
xlat
arpl
adc
push
xchg
sbb
mov
adc
out
ret
insb
and
mov
and
andl
push
loopne
insl
push
and
sub
push
pop
push
addr16
push
pop
jns
sahf
cmp
xchg
pop
and
mov
loope
xor
and
scas
adc
ret
stos
into
test
dec
and
xor
mov
push
pusha
mov
out
add
popa
sub
push
pop
xor
jo
roll
push
dec
fsubrs
mov
inc
ja
dec
insb
sub
cmp
and
loopne
mov
fs
and
ret
incl
push
repz
xchg
aaa
cmpsl
add
jp
pop
pop
mov
xlat
pop
mov
xor
xor
les
inc
pusha
mulb
ret
xorl
andb
fcmove
scas
xchg
xchg
mov
pusha
mul
movsl
pop
in
push
fs
jns
adc
mov
xchg
test
lods
dec
cld
repz
jno
or
xor
and
aaa
repnz
or
shlb
das
out
dec
xlat
scas
inc
jge
pusha
pushf
push
jmp
sbb
ja
insl
cld
dec
ljmp
cmp
add
out
xlat
push
sub
pusha
in
pushf
mov
shrb
insl
fildl
sub
adc
sub
mov
mov
and
jno
pushf
clc
imul
std
loop
sbb
lcall
arpl
add
out
loope
inc
xor
pusha
shlb
jo
scas
pushf
or
sbb
sub
cwtl
mov
pop
pop
mov
jecxz
xchg
outsl
sub
pusha
mov
pusha
inc
lret
inc
rol
ret
pop
repz
jbe
push
mov
call
jnp
xor
pusha
sbb
fadds
sub
jne
cmp
aas
xchg
push
insb
adc
cmpsl
rcl
leave
outsb
pushaw
and
shrl
pusha
mov
adc
test
xlat
ja
shrl
jg
xor
xchg
push
xor
frstor
into
jecxz
pusha
jmp
scas
hlt
popa
shlb
fmulp
gs
out
cs
mov
shll
pusha
add
cmp
pusha
cmp
inc
xchg
test
mov
mov
jle
jo
fs
pop
ret
push
adc
push
fs
cwtl
repnz
ss
and
sub
in
es
fs
cmp
jnp
pusha
jo
jbe
cltd
mov
clc
dec
fs
out
ror
jae
mov
xchg
dec
in
pusha
xor
cmp
fs
or
dec
mov
mov
mov
jae
in
scas
pusha
cmpsb
dec
sub
xchg
jl
icebp
pusha
inc
pop
xlat
out
add
outsb
and
mov
idivb
loopne
jp
sbb
cmp
inc
nop
arpl
loope
leave
in
mov
js
sub
pusha
mov
push
movsb
enter
push
add
movsl
jne
mov
lcall
xchg
pusha
fsubr
inc
in
mov
fcoml
aaa
pop
push
bound
pusha
add
cld
xchg
pusha
imul
jle
jne
mov
sti
sbb
jbe
xchg
cmp
movsl
cmc
ret
xor
lods
cmp
jl
loop
mov
cli
lahf
in
std
fwait
pop
pop
cmp
or
dec
repz
repnz
pusha
jg
popa
cltd
dec
pusha
cwtl
divl
sbb
jecxz
popa
sbb
loopne
ds
clc
jg
add
in
mov
ret
adc
cli
jns
clc
ror
int3
repz
pusha
xchg
xor
dec
dec
insl
fldenv
loope
mov
pusha
ret
fsubrl
pusha
pop
mov
out
push
mov
push
cmp
bound
js
cli
aas
dec
movsb
outsl
pusha
fmuls
mov
lcall
aam
and
adc
enter
pushf
add
pop
in
shll
repz
cwtl
mov
mov
adc
cmpsb
jecxz
test
bound
test
test
pop
dec
ret
fwait
sbb
repz
or
pop
and
cmpsl
push
jno
imul
rorb
negb
xor
and
dec
cmp
push
je
sub
mov
in
mov
fwait
mov
pusha
aam
jmp
ret
pusha
fisubs
sbb
jge
outsb
pusha
lea
movsb
stc
sbb
shll
or
pusha
cmp
push
ja
lcall
xchg
insl
add
xor
xchg
pusha
jne
shl
adc
jno
mov
cmpsl
lcall
pusha
sub
nop
stos
xor
mov
mov
xchg
pop
pop
cmpsl
dec
push
icebp
out
lods
lods
pusha
push
adc
in
pusha
jae
loopne
ljmp
xchg
jnp
inc
jecxz
stos
jl
push
repz
aam
movsl
cwtl
jmp
nop
and
iret
arpl
mov
pop
cs
insl
mov
orb
pusha
das
xchg
lcall
or
xor
mov
shlb
pusha
jo
mov
in
jo
in
pusha
push
std
mov
add
lahf
mov
cmp
dec
and
sti
xchg
in
bound
aam
and
jo
roll
sbb
test
xchg
push
pusha
mov
ss
nop
cmpsl
into
jl
not
mov
and
xchg
adcb
iret
pop
dec
pop
lret
outsl
rcll
xchg
shlb
into
test
xor
xchg
pusha
sub
in
aas
addr16
dec
pusha
movsl
icebp
test
imul
cmc
mov
jecxz
into
inc
call
addr16
adc
orb
pop
ljmp
pusha
mov
dec
mov
cmp
mov
jbe
pusha
rolb
decb
xchg
les
push
mov
daa
pusha
sbb
leave
cmp
ret
jmp
repnz
arpl
nop
pop
sbb
in
mov
sub
xlat
mov
mov
jecxz
out
fs
sti
stos
iret
arpl
sahf
stos
cmp
in
xchg
push
inc
test
or
mov
push
fdivl
data16
lea
out
sbb
imulb
dec
push
mov
mov
rdpmc
mov
sbb
lock
pusha
rcl
adc
pop
push
inc
push
ss
dec
fldenv
aam
mov
fsubrl
xchg
pusha
test
and
lods
jge
pusha
mov
fisttps
add
cld
fs
pop
xchg
aas
cmp
lcall
xchg
shr
mov
call
and
pop
xchg
add
cmp
adc
lret
push
pusha
dec
setae
pusha
in
jne
adc
push
ss
negb
xor
push
insb
ljmp
sbb
movsl
mov
pop
pop
loop
adc
sarb
jecxz
or
and
das
pushf
pusha
mov
pusha
popa
fdivr
xlat
xchg
adc
jg
in
int3
jbe
xchg
movsb
add
mov
adc
ds
in
pop
lods
and
imul
dec
hlt
add
xchg
adc
stos
cmp
cltd
jns
je
fldt
outsb
sbb
dec
sahf
cmc
adc
or
and
repnz
xchg
jl
mov
cmpsb
data16
mov
and
in
pop
mov
push
push
inc
ffree
inc
pusha
mov
or
adc
push
pause
push
dec
lock
addr16
inc
lcall
jno
xorb
cmp
insb
stos
lret
add
cmpsl
dec
bound
mov
pop
xor
lock
jb
dec
xor
scas
pop
sbbb
jno
ds
test
pop
test
clc
loope
inc
rclb
insb
cmp
filds
and
bound
in
cmp
imul
roll
fisttpl
jmp
in
cmp
lock
jp
inc
int
popf
push
pusha
sbb
inc
shrl
cmp
push
movsb
xor
jge
js
pusha
out
mov
xchg
pop
mov
in
xor
lret
dec
cmp
test
fdivr
pop
pusha
mov
js
mull
fstpl
insb
cmp
sbb
fsubs
clc
sbb
repnz
jp
sbb
xor
push
pop
add
xchg
pusha
aam
dec
mov
jnp
fsubs
loope
data16
in
mov
xchg
and
jmp
add
adc
fs
pop
xchg
add
push
and
xchg
pop
gs
pop
fs
add
mov
xchg
xchg
lea
test
imul
pop
les
rcr
xor
icebp
rcr
pusha
or
xor
in
in
cmp
push
push
loope
or
mov
mov
push
arpl
cmpsl
pop
lods
sub
jne
jb
scas
jl
stos
mov
shll
pop
cwtl
lahf
std
sbb
cs
and
pop
push
int
mov
mov
repnz
lock
pop
push
fstpt
imul
loop
nop
mov
jbe
mov
jb
ret
inc
rcrb
lcall
pop
xor
mov
push
out
dec
xor
lcall
cmpl
pop
cmp
cwtl
fimull
lods
cld
je
pop
and
ret
lahf
data16
cld
fisttpll
xchg
mov
subb
imul
decl
jno
jns
push
jo
jp
cmp
pop
dec
sarl
mov
mov
dec
sub
push
mov
mov
cmpsl
cltd
cwtl
in
mov
lret
cmp
push
cmovs
dec
and
dec
jno
mov
push
and
mov
cmp
push
insb
push
andb
das
push
jle
mov
maxps
adc
hlt
cmp
cmp
xor
aas
xor
out
mov
jecxz
es
lret
cmp
push
mov
add
add
sbb
fbstp
sub
xor
pop
sbb
inc
or
pop
sub
sar
into
in
cmpsl
std
dec
cmp
jno
fistpll
mov
popa
push
inc
scas
or
popf
inc
lcall
loopne
cmc
push
loope
xor
jns
jmp
dec
lcall
or
dec
seta
rolb
push
mov
dec
icebp
lods
loopne
mov
cmp
inc
mov
scas
insb
stc
xchg
dec
loop
adc
movl
sbb
outsb
mov
loope
in
in
mov
cmp
jp
insb
mov
sbb
sub
add
jae
loopne
jg
addr16
ret
es
lock
aam
cmpsb
or
addr16
inc
jb
fadd
bound
sbb
xchg
push
rcl
cmp
pop
shll
movsb
xchg
sub
jle
adc
ret
cli
lcall
mov
ret
add
ss
and
mov
xor
js
sbb
xor
shrb
pusha
mov
aaa
dec
add
test
lock
fs
leave
outsl
imul
push
sar
xchg
push
jb
push
adc
push
mov
xchg
xor
sahf
jno
mov
or
sbbl
sti
fcmovbe
and
jl
test
mov
arpl
ds
int3
and
inc
pop
clc
lcall
sbb
mov
es
cmp
sub
add
sbb
jle
mov
cs
divb
stc
adc
ret
fildl
jbe
stos
xchg
iret
jne
push
ret
sub
repnz
loopne
inc
rcll
fsubp
inc
adc
jo
dec
arpl
or
jno
and
roll
call
xlat
int3
das
sahf
inc
jecxz
mov
dec
sub
add
sar
push
adc
jb
pushf
stos
lret
sbb
jo
pusha
push
xor
cmp
jns
mov
sbb
shrl
xorl
add
jbe
sbb
filds
into
mov
push
add
clc
mov
popa
jle
shll
xor
mov
lret
mov
jae
fwait
scas
add
and
testb
xor
ret
push
bound
xor
rolb
lods
insl
fucomip
sbb
es
and
add
sub
adc
lcall
adcb
sub
jo
sti
divl
and
das
push
jp
shlb
adc
stos
cmp
sub
xchg
sar
push
inc
push
test
popa
sarl
and
data16
cltd
addl
push
push
ret
sarb
cs
sub
mov
adc
mull
bound
pop
dec
add
sub
lds
cmp
repz
mov
push
push
roll
paddusb
scas
insl
sub
test
or
xor
cs
pop
shr
pop
xchg
or
and
movl
jg
scas
pop
xchg
push
orl
movsl
inc
movsb
call
mov
pop
fdivs
not
outsl
gs
lock
push
cmp
and
js
dec
xor
fdiv
push
jno
push
loop
and
push
int3
out
pushf
subb
outsl
jecxz
ljmp
lret
cmp
popa
pop
sbb
push
pop
rol
jo
jnp
cld
fcoml
test
in
push
int
ds
mov
cli
push
jae
jno
mov
mov
xchg
xor
dec
adc
imul
fsub
pop
lea
mov
add
push
inc
ss
xor
je
xorb
inc
dec
pop
or
jmp
push
adc
lods
xchg
lds
mov
mov
mov
sbb
push
ss
push
pusha
shl
mov
fsubl
aaa
mov
add
aas
pusha
arpl
lahf
pusha
out
lods
out
fldenv
fbld
push
aas
cld
sub
xchg
xchg
xlat
push
add
iret
inc
lods
movsl
lea
sub
mov
dec
popa
repnz
mov
push
sbb
inc
ret
mov
and
idivb
addr16
mov
out
jmp
mov
std
imul
loop
loopne
cmp
lock
sbb
add
xchg
and
inc
adc
xchg
ds
sbb
repnz
jg
lcall
pusha
out
imulb
call
or
sub
pop
into
int3
repz
mov
outsb
ljmp
jns
and
loopne
loopne
lea
nop
scas
test
lods
cmp
testb
xchg
daa
push
pusha
ficoms
mov
imul
sub
loope
pusha
sub
adcb
shll
arpl
cmp
pusha
sbb
lea
adc
push
xchg
inc
stos
dec
bound
jno
pusha
xchg
or
iret
lods
jne
cmp
mov
negl
add
pop
test
and
mov
ret
scas
pusha
inc
test
lods
xchg
push
push
sub
jle
jo
ds
xchg
pusha
mov
aad
mov
jecxz
or
jno
xor
flds
cmp
je
jbe
mov
pusha
or
leave
daa
cwtl
aam
dec
loop
sub
pusha
mov
sar
mov
loopne
and
push
pusha
out
fsubrs
or
adc
sbb
test
sub
push
adc
mov
repnz
jae
fnstcw
mov
in
iret
pusha
testb
sahf
jl
pusha
lods
mov
ja
jl
xchg
clc
or
xor
inc
xchg
mov
nop
sbb
mov
push
and
movsb
lret
and
test
pusha
xchg
inc
in
pusha
or
cmp
pusha
mov
xor
sub
cmp
jmp
mov
fucom
mov
and
test
xchg
xchg
xchg
fisubs
mov
and
popf
decb
out
xor
push
or
mov
push
pusha
add
in
or
fmuls
cmpsl
and
pop
push
xchg
aas
gs
imul
and
pusha
jns
call
jbe
dec
insl
into
lods
arpl
fsts
movsl
pusha
push
add
sbb
arpl
fucomi
jbe
pusha
in
dec
or
fmulp
mov
cmp
mov
imul
and
jno
pop
mov
sbbl
pusha
or
cwtl
jg
lcall
repnz
mov
pop
mov
pop
lahf
and
mov
mov
xor
dec
pusha
stos
jp
xchg
jmp
divl
fidivrs
fs
cmp
mov
ret
push
pusha
rcll
mov
pusha
rclb
mov
dec
stos
in
jne
pusha
sbb
and
mov
mov
mov
lods
dec
ret
int
pop
sub
loopne
mov
arpl
ljmp
jo
cwtl
mov
jge
mov
fstl
mov
adc
pusha
mov
outsb
gs
cmpsb
pop
pusha
fnstcw
pop
in
pusha
dec
push
or
fs
cmp
lods
lahf
fisttpl
jle
loop
cmc
dec
jo
ss
lds
adc
mov
gs
fs
sub
outsl
xchg
orb
xchg
shl
sub
lods
dec
cs
das
je
mov
pusha
shl
jns
inc
jl
popf
call
aad
push
adc
add
outsb
pop
fbld
lods
imul
sub
popa
mov
mov
pushl
and
mov
fwait
sbb
cltd
push
or
rcr
sub
sub
push
xor
arpl
clc
pusha
lret
dec
cli
jl
insl
jge
pusha
mov
test
cmp
bound
mov
add
pusha
push
jno
fidivrs
fdivrl
ljmp
add
xchg
inc
cmp
mov
pusha
push
jmp
arpl
pop
mov
das
scas
aaa
cltd
cmp
insb
and
hlt
les
adc
mov
jl
pusha
pop
xchg
dec
pop
cmpsl
or
xorb
ljmp
shlb
cmp
test
dec
xor
push
and
sub
mov
into
test
jl
inc
insb
fdivrs
movsb
pusha
cli
dec
lock
mov
xchg
inc
sub
cmp
jl
insb
and
addb
cmp
lods
sbb
dec
imul
das
jo
insl
dec
push
bnd
loop
insb
pop
stos
test
dec
out
xor
pusha
pop
pop
cmpsb
push
sbb
pusha
stc
lea
inc
dec
mov
cmp
push
mov
sti
sbb
pop
lds
pop
out
jae
lcall
rcrb
mov
xor
mov
repz
jmp
into
ret
inc
xchg
cmp
push
cmpsl
xchg
pusha
xlat
jne
fcmovb
cli
add
add
sub
pusha
es
push
mov
jmp
mov
fs
inc
xor
push
jae
pusha
ffree
push
cmp
cmpl
dec
inc
adc
mov
pusha
push
push
cmpsb
call
insl
lea
cmpsl
jo
pop
lcall
mov
mov
xor
dec
adc
jae
add
push
rcrl
and
inc
fs
and
lret
imul
lods
pusha
push
or
ljmp
dec
adc
jl
pop
mov
adc
outsl
dec
xor
test
stos
data16
lds
pusha
xor
inc
fs
inc
movsl
pop
lock
icebp
xchg
jbe
mov
jecxz
cwtl
pusha
pop
dec
cmp
ret
pop
ret
and
daa
push
out
clc
jg
fs
fstpt
xchg
adc
push
cwtl
dec
stc
push
dec
jp
adc
adcl
pop
orb
mov
aad
lods
xchg
push
in
xchg
push
cmp
mov
dec
jecxz
insb
shlb
insl
and
rclb
std
jmp
jl
movsb
add
js
sbb
outsl
xor
add
adc
and
xor
ficomps
push
repz
mov
add
in
push
pusha
mov
or
sub
dec
adc
jo
lret
fs
imul
lea
daa
add
mov
fnsave
jnp
push
push
inc
and
pusha
aam
push
and
inc
mov
jo
leave
sbb
shl
xchg
pusha
test
adcb
insl
and
fcomps
hlt
fstps
out
js
mov
dec
mov
inc
inc
cld
pop
push
mul
popf
pusha
inc
jbe
in
call
mov
fistpl
repnz
mov
add
iret
in
jno
arpl
adc
pop
repnz
and
cmp
mov
lods
pop
cli
cmp
ja
mov
inc
pusha
inc
jle
pop
rcll
cmp
jmp
pop
cmp
pusha
test
mov
popf
mov
xlat
sbb
int
imul
fnstenv
sahf
adc
push
jle
arpl
jg
out
cmpsl
mov
adcb
pusha
repnz
in
dec
test
inc
lods
inc
aas
cwtl
int3
pop
push
pop
mov
pusha
mov
aad
andb
imul
lds
pusha
push
sbb
cmp
pop
mov
ret
lcall
leave
lds
shll
pop
mov
test
lret
or
jge
sbb
lcall
cmpsb
in
xchg
aad
aam
push
push
add
xchg
jge
mov
inc
push
add
and
push
jns
je
xchg
insb
into
mov
dec
outsb
daa
repz
gs
pop
mov
in
jno
adc
nop
rorl
mov
jecxz
inc
jo
add
mov
pop
enter
mov
fs
inc
jo
xchg
mov
out
test
mov
dec
std
mov
add
xchg
fs
and
mov
iret
sbb
dec
ret
xchg
cli
xor
dec
adc
mov
xor
cwtl
daa
and
xchg
std
fwait
push
push
push
aad
lock
cmp
or
popa
bound
lods
add
xchg
cli
outsl
cmp
mov
es
jge
jbe
into
mov
and
and
jae
loope
std
adc
leave
out
jp
sub
push
xchg
cli
mov
lock
xchg
call
sbb
mov
jae
out
clc
pop
push
mov
lcall
mov
xor
mov
sbb
xor
lret
adc
outsb
fdivl
jbe
cmp
mov
pusha
xchg
out
sub
popf
adc
mov
cmp
aad
scas
dec
and
dec
jbe
push
jecxz
mov
scas
dec
sub
loopne
fs
xlat
adc
orl
pop
repnz
cmp
mov
sbb
jmp
sbb
push
add
sysenter
sub
cmp
mov
xor
pop
adc
xor
sub
out
lea
adc
xchg
adc
or
fs
sbb
adcl
pop
mov
push
loope
and
or
cmp
ret
dec
movsl
push
test
push
psubq
stos
call
cli
sub
xorb
rorl
mov
repz
rcl
dec
mov
out
leave
jns
hlt
inc
rcrl
call
jmp
cs
divl
aaa
and
jnp
test
jp
enter
fwait
addl
mov
or
dec
push
or
push
dec
add
adc
ror
out
pop
mov
repnz
repz
xor
cmp
mov
mov
adc
cmp
sbb
fcomps
imul
loop
nop
or
fsubl
fidivs
xchg
ret
icebp
mov
fbstp
xor
mov
push
jb
jnp
mov
rcl
dec
out
mov
orl
and
mov
and
pop
push
loop
xchg
xchg
sbbl
fidivs
stos
lcall
add
mov
fisubs
push
adc
sbb
inc
std
adcb
mov
cmpsl
movsb
out
stos
mov
sub
dec
pop
mov
jae
bound
sub
outsb
xorl
stos
ja
add
inc
push
xor
mov
pusha
pop
push
cmp
add
fs
mov
pop
out
jae
aad
pusha
aas
shl
loop
jo
push
xchg
or
pusha
adc
cltd
aam
lods
xorl
push
lret
fisttps
mov
loopne
jno
push
subb
movl
push
filds
idivb
cmp
shll
mov
dec
out
and
imul
out
mov
mov
add
fdivl
and
aam
xchg
int3
sub
jl
cli
push
stc
in
fs
sub
sub
inc
pusha
mov
arpl
pusha
pop
mov
stos
push
adc
push
xchg
fldl
mov
out
or
jmp
pusha
push
nop
xchg
sahf
sbb
hlt
dec
popf
int3
mov
mov
adc
ljmp
or
hlt
lock
mov
mov
xchg
mov
and
idivb
insb
xor
ret
sub
in
sbb
mov
ffreep
call
pusha
cmp
pop
jg
insb
cmc
gs
jecxz
fwait
ja
mov
repnz
iret
popf
popf
pusha
mov
jns
lock
pusha
into
jno
push
and
clc
fs
lods
cmp
adc
arpl
aas
popf
or
addr16
sub
push
arpl
mov
inc
pusha
call
xor
enter
push
fsubl
sub
lods
icebp
or
xchg
sub
movsb
sbb
lahf
in
pusha
nop
dec
push
jle
mov
pusha
push
iret
jb
fstpl
adc
xlat
mov
ror
pusha
xor
mov
jno
scas
outsb
xor
or
aad
or
jnp
xlat
and
repnz
pop
pusha
or
fwait
or
pusha
mov
out
enter
pusha
out
push
xor
pusha
repz
jns
pop
stos
pop
jl
inc
inc
or
pop
popa
pop
add
out
cld
popf
fs
mov
add
mov
cwtl
sbb
cltd
stos
sub
fcmovnu
cld
inc
xchg
pusha
cmp
and
inc
es
arpl
cwtl
sti
cli
loop
and
ficoms
in
mov
pop
int3
sub
sbb
cld
scas
and
mov
pusha
or
repnz
inc
push
fistpl
mov
push
test
dec
pop
push
pop
test
adc
das
adc
push
sti
pusha
push
ret
dec
outsb
pop
sub
loopne
les
and
mov
stos
mov
sbb
mov
sub
push
pusha
xor
xor
inc
cmp
pusha
mov
fnstsw
pusha
lret
adc
shl
movsl
in
push
mov
mov
ret
das
or
ficomps
mov
fdiv
dec
inc
and
notl
into
dec
sub
arpl
sub
pusha
test
sub
or
push
addl
jne
into
cld
cli
mov
pusha
pop
add
enter
fldenv
scas
sub
push
jl
xchg
mov
pusha
movsl
in
mov
pusha
fidivrl
fnstcw
dec
test
cs
loop
testl
ficoml
inc
negb
push
aam
mov
imul
loopne
mov
mov
adc
mov
imul
pop
fbld
xchg
xor
std
loope
dec
repnz
xchg
xchg
popa
push
ds
mov
out
inc
xchg
pusha
sub
idivl
insb
and
out
loop
xorb
sti
popa
fldenv
sub
lock
scas
dec
rcrl
or
or
jle
call
loop
lcall
pop
inc
mov
xchg
dec
xchg
je
jmp
mov
lds
add
bound
ds
pusha
adc
pop
mov
cmpsl
mov
pusha
orl
mov
aam
ds
mov
push
pusha
aad
fcomi
subb
xchg
pusha
cmpsb
jmp
sub
call
fldt
pusha
xchg
cmp
lret
sbb
in
bound
inc
inc
stos
scas
mov
push
fwait
cmp
inc
incl
pop
jne
or
shll
jo
xor
jbe
shlb
ds
pusha
es
pop
jae
inc
push
lcall
cmp
cmc
lea
aaa
inc
and
fldenv
pusha
cmp
in
pusha
add
and
sbb
pusha
xchg
or
dec
pop
aad
daa
sbb
pop
xorb
push
pusha
cmp
xchg
xor
mov
mov
loopne
push
fs
push
bound
sub
pop
gs
add
lock
pusha
gs
cli
js
aad
ss
cwtl
rol
jb
mov
call
insl
mov
or
in
repz
adc
inc
bound
cmp
pcmpgtw
push
bound
or
pop
fmull
or
cs
sbb
dec
sbb
pusha
mov
leave
jg
pusha
out
inc
aam
stos
daa
inc
lcall
loope
sahf
mov
test
or
dec
out
push
not
out
lahf
loope
imul
cmc
stc
cmp
mov
or
push
sbb
out
pop
icebp
pushf
and
fs
pop
scas
jbe
push
shll
lea
mov
pusha
cli
push
pop
jns
mov
pusha
sub
int
adc
xor
pop
dec
push
mov
lock
pusha
movsl
lods
xor
sub
gs
pusha
and
mov
xchg
aad
ds
mulb
insl
fsubrl
pusha
lahf
inc
movsl
dec
xchg
or
xchg
ljmp
cwtl
movsl
and
cmp
subb
jo
pop
mov
add
mov
xchg
cmp
mov
daa
iret
mov
aas
movsl
xor
shlb
dec
pusha
adc
push
pcmpgtw
pop
push
add
jl
push
fimull
mov
adc
enter
rorb
xor
cmp
je
mov
mov
in
repz
and
sub
mov
adc
fsts
jae
sahf
shll
movsl
addr16
adc
sbb
addr16
dec
mov
insb
sbb
imul
clc
test
pusha
enter
pop
ljmp
lods
cmp
cmp
mov
or
and
out
cmp
sub
ss
jle
mov
cmp
xor
shlb
lods
xchg
dec
int3
sbb
mov
mov
aaa
pusha
gs
mov
pusha
loop
xchg
xchg
mov
lea
cmc
movsb
xor
adc
sub
cmp
push
pusha
in
mov
enter
out
pushf
hlt
fcmove
adc
sub
jnp
xor
bound
lcall
enter
sbb
adc
fs
cmp
movsl
test
imul
mov
pop
bound
lods
test
cwtl
lret
test
popa
fcomps
jecxz
jmp
sti
jne
in
into
je
push
cli
xlat
pusha
pop
mov
mov
add
mov
sub
mov
movl
mov
pop
movsl
mov
jge
cmp
mov
sbb
fs
cmp
dec
or
pusha
nop
subb
dec
push
mov
and
push
xor
ss
sahf
ret
daa
dec
cmp
subb
dec
mov
adc
adc
lret
out
adc
mov
mov
in
hlt
aad
les
outsl
pusha
add
dec
pop
cs
sbb
xchg
dec
mov
xor
adc
inc
pusha
inc
mov
add
in
xchg
xor
loopne
cmp
bound
outsb
fdiv
xchg
adc
pop
xchg
es
cmpsl
or
in
sub
dec
xchg
lahf
shrb
xchg
daa
mov
xchg
aad
mov
dec
pop
inc
mov
mov
or
mov
pop
inc
adc
jne
daa
lret
ret
pop
sahf
cmc
add
pop
mov
pop
sbb
in
je
lods
xchg
test
cmp
add
icebp
out
ficoms
sbb
ss
sbb
jl
fwait
js
in
mov
pusha
dec
cwtl
repz
in
mov
es
testb
pop
pusha
dec
in
inc
push
insl
lock
sahf
ljmp
mov
sbb
jae
in
out
cmp
cs
jecxz
rclb
pusha
cltd
jp
xchg
xchg
adc
pusha
inc
out
pop
lods
push
insb
aas
mov
pusha
pop
jae
in
dec
adc
jecxz
loopne
xlat
push
jp
adc
and
xorb
xor
imul
pusha
int3
mov
fwait
sbb
icebp
pusha
sbbb
shlb
pop
push
mov
pusha
cmpsl
cmc
inc
bound
pop
dec
or
sbb
cmp
fistps
xor
out
xchg
cltd
jle
aad
mov
outsl
cmp
fwait
mov
dec
repnz
cmp
lods
mov
dec
mov
dec
in
sub
mov
sub
add
loopne
loop
fisttpl
insb
add
add
not
and
out
mov
or
jno
stos
pop
bound
push
enter
mov
pop
jecxz
loope
aas
xchg
pusha
aad
push
add
adcl
insb
mov
pusha
scas
nop
rorb
xor
std
aaa
pusha
lods
das
add
je
cwtl
inc
ja
xorl
mov
sahf
add
add
call
push
mov
push
dec
stc
arpl
in
popl
add
jb
bound
cmp
inc
mov
loop
mov
test
add
inc
push
orl
xor
mov
adc
push
fdivrs
mov
call
sbb
pusha
popf
push
inc
out
or
addb
gs
movsb
cmp
enter
in
jbe
imul
ret
pusha
mov
fiadds
pusha
ljmp
mov
xor
push
popf
fwait
pusha
sbb
nop
in
xor
aaa
addr16
sbb
ds
pusha
gs
imul
pusha
cmp
insl
sub
in
rclb
xchg
fmuls
and
adc
xor
stc
stos
imul
popa
fstpt
mov
inc
add
fs
repz
addb
sbb
sub
mov
dec
pop
clc
pop
inc
hlt
mov
dec
iret
jo
adc
jae
out
push
shll
sub
sbb
pusha
nop
fcomp
call
arpl
push
jno
cmp
cli
mov
and
adc
jae
pusha
sub
sbb
pusha
dec
inc
mov
pop
movsb
jnp
push
jecxz
ret
pop
mov
sub
push
or
inc
inc
pushl
fmuls
xor
rcll
push
pcmpgtd
std
lds
jmp
mov
sbb
mov
and
cmp
add
shll
pushf
iret
insb
adc
push
push
cwtl
adc
mov
mov
imul
or
pusha
jo
dec
int
lcall
pusha
imul
inc
add
roll
das
out
ret
sbb
adc
insb
xor
inc
sbb
addr16
cmp
jo
loop
daa
push
hlt
sub
push
sub
insb
rol
inc
dec
mov
adc
and
popl
lds
mov
pop
jmp
adc
int3
jecxz
xchg
jl
cmp
test
cmp
ss
mov
clc
call
or
mov
mov
xchg
and
data16
loopne
mov
rcll
pop
stos
and
mov
ja
jmp
jno
inc
pop
inc
xchg
dec
es
pop
sbb
pusha
jl
int3
insb
fildl
int
loop
jle,pn
mov
dec
fidivs
mov
pusha
and
inc
subl
test
je
stos
dec
or
fildll
fcompl
loopne
push
cmp
add
sbb
pop
mov
int3
sbb
push
cmp
cmp
mov
int
dec
test
add
ss
sbb
loope
arpl
mov
stos
pop
sbb
mov
dec
enter
test
sbb
push
aaa
mov
test
fs
cmp
inc
int3
pop
jge
xchg
adc
sbb
out
pusha
test
cwtl
fistps
pusha
pop
loop
lret
ficoms
mov
mov
sti
ret
pusha
leave
stos
daa
fldt
push
outsb
pusha
add
push
xchg
jmp
out
aaa
sbb
mov
stos
pusha
push
lea
repz
test
pop
mov
push
cmpsl
xchg
bound
and
dec
jmp
in
daa
ret
repz
mov
mov
push
pusha
mov
add
mov
pop
in
int
pop
fldcw
cmpsl
insb
test
push
loop
add
imul
insb
jmp
adc
enter
clc
je
fcompl
movsbl
mov
jmp
mov
pop
and
arpl
lods
pusha
xchg
mov
dec
addb
test
insl
pusha
sti
sbb
out
pusha
push
add
aas
sbb
fstpt
ljmp
xchg
outsl
mov
pusha
insb
lds
hlt
and
pusha
xor
sti
das
push
inc
jno
jl
negb
mov
outsl
pusha
subl
pusha
add
es
je
mov
iret
arpl
adc
into
pusha
lea
mov
add
js
in
and
andb
mov
push
jnp
out
scas
pop
sbb
pusha
das
mov
in
or
and
pop
or
fbld
inc
mov
ret
xor
pop
pusha
mov
xchg
repnz
outsb
lock
inc
push
mov
mov
or
pop
ds
mov
push
jmp
in
and
int3
or
adc
out
jge
addr16
dec
jg
ret
insb
repnz
int
ja
lcall
jp
xlat
ss
stos
repnz
mov
pop
faddl
inc
inc
loopne
mov
inc
ret
or
and
or
jnp
mov
push
fs
and
xchg
xchg
add
mov
pusha
and
faddl
jns
push
stc
cmp
loop
and
movsb
jg
fiadds
sub
lret
out
aam
dec
ss
pusha
and
push
push
add
mov
pusha
js
test
jecxz
lods
into
pusha
mov
dec
lahf
add
scas
fidivs
sub
insb
sbb
add
xor
pusha
jge
jbe
jle
sbb
test
add
or
cmp
popf
mov
jmp
fnstcw
cmp
mov
push
push
repz
sahf
xor
iret
out
dec
pusha
or
lret
xlat
ret
sub
das
mov
call
sub
in
add
out
mov
or
fsubs
xchg
sub
or
fwait
sub
and
mov
lret
incl
sbb
lds
add
sub
pusha
jns
fimuls
pusha
jae
std
cltd
push
mov
cvtpi2pd
imul
clc
mov
outsl
jl
bound
adc
movsl
iret
mov
test
andl
pop
add
cmp
xlat
vmovapd
xchg
jecxz
pop
clc
pop
jmp
pop
aas
ret
mov
nop
loope
es
pusha
adc
fsubl
je
xor
in
mov
mov
sbb
adc
xchg
stos
pop
loope
lret
inc
enter
jno
test
out
xor
arpl
jge
ret
leave
insb
fs
pop
xchg
std
out
lea
sub
loopne
rcl
pop
ret
ret
inc
pop
inc
and
loope
clc
jp
mov
adc
adc
inc
mov
sbb
stc
and
pop
dec
pop
enter
mov
and
sbb
pusha
cmp
loopne
cs
je
inc
fucom
pop
xor
push
dec
mov
pusha
cmp
mov
jl
cwtl
imul
xchg
lock
nop
cmpsb
in
jp
call
dec
mov
ss
adcl
lods
push
loopne
cmp
add
sub
mov
shrb
and
roll
ds
insl
dec
bound
and
pusha
roll
adc
hlt
and
imul
pop
jle
fwait
jno
outsl
loope
xchg
loop
xor
lock
jno
pusha
icebp
sub
mov
xchg
push
cmp
leave
inc
es
or
out
int
add
aaa
mov
out
bound
daa
jl
push
mov
ret
and
jmp
xorl
jmp
outsb
mov
dec
push
adc
dec
add
mov
pop
add
imul
inc
xchg
sbb
dec
sbb
ror
rcrl
add
fwait
cld
clc
loope
inc
xor
mov
int
and
stc
enter
cmp
cmp
push
ret
jb
loopne
lret
sbb
inc
xor
loop
sub
cmp
jmp
int
aas
push
movl
cli
cmc
and
sub
cmpsb
cmp
sub
test
lret
inc
cmp
out
mov
push
pop
push
popa
insb
xor
loope
cld
sbb
jno
mov
inc
imul
push
mov
xchg
fldcw
mov
xchg
popa
xor
add
inc
clc
mov
loopne
xchg
push
leave
inc
into
ret
pop
lret
cs
lods
lea
sahf
test
inc
inc
cltd
mov
push
fiaddl
inc
out
jno
in
cmp
pushf
or
inc
push
adc
or
inc
loopne
xor
ret
xchg
sub
fistpl
xchg
loope
jecxz
lds
repz
jmp
pusha
pop
les
inc
pop
jb
mov
mov
pop
out
and
outsb
fneni(8087
hlt
mov
rcll
cmp
fmulp
daa
inc
jae
sub
mov
les
imul
jmp
cmpsb
jo
sub
and
add
repnz
das
or
adc
lods
inc
fs
mov
cli
push
cltd
jb
or
and
stos
add
pusha
push
cmc
fidivrl
mov
andb
scas
lret
inc
imul
roll
sbb
test
cltd
sbb
jecxz
push
lahf
je
push
ss
bound
cmpl
call
sahf
pop
jge
nop
pusha
rolb
pusha
mov
and
in
pusha
adc
dec
push
ljmp
pusha
in
mov
ds
cmp
adc
pop
fldenv
push
jl
pop
adc
out
testl
xchg
sti
cmp
jecxz
mov
push
push
or
shrb
mull
fisubrs
xchg
sub
ljmp
popa
daa
mov
push
int
ret
rorb
bound
cmp
pusha
test
cmp
ret
add
mov
sub
icebp
shrb
mov
shrl
popa
xchg
inc
cli
pusha
notb
jecxz
jl
sahf
pop
and
lds
loope
inc
popa
ljmp
arpl
gs
pusha
cli
fstpt
pusha
push
inc
pop
cmp
sbb
adc
mov
mov
pusha
lea
stos
mov
pusha
xor
sbb
pusha
pushf
push
subl
xchg
in
es
mov
jl
pop
dec
out
pop
loope
pushf
dec
pop
jl
mov
ret
ret
aad
adc
sti
stos
xchg
jl
sbb
and
pop
cmp
pop
in
rcl
push
pop
lock
cmc
pop
sbb
inc
jbe,pn
mov
pusha
loope
test
xor
bound
test
mov
les
pusha
test
mov
cmp
mov
popf
and
movsb
jae
xor
imul
popf
mov
adcl
push
es
inc
gs
shrl
ljmp
mov
out
lea
aad
push
out
push
andl
fstpt
sub
pusha
ret
in
sub
mov
pusha
push
mov
push
fsubl
leave
enter
inc
inc
insb
adc
dec
and
xchg
insb
push
add
lods
pushf
xor
inc
fisttps
fs
mov
arpl
jo
cmpsl
clc
dec
int3
outsb
inc
push
and
dec
pusha
fldt
pop
loope
loopne
pusha
mov
inc
cmp
ja
jl
aad
out
hlt
das
pop
stos
loop
xchg
xlat
insb
ds
je
movsl
bound
fistpl
sbb
push
inc
stos
fisubl
jmp
pop
xchg
sbb
inc
arpl
bound
ret
push
mov
sbb
or
stc
mov
flds
out
lret
loopne
int3
fistpll
pop
inc
mov
bound
out
mov
xor
adc
mov
andb
xor
pusha
arpl
or
pop
pop
jne
imull
aas
pop
sub
jl
in
ficompl
leave
insb
xor
inc
sbb
int
ja
out
push
sbb
je
xchg
cmp
push
mov
shlb
adc
sbb
adc
jmp
sub
sti
mov
fildll
test
pusha
xchg
mov
daa
iret
cmpb
lods
sub
in
pop
cmc
and
sti
mov
mov
arpl
xchg
arpl
pusha
jg
lods
les
sbb
inc
mov
adc
bound
sub
adc
fcmovu
fnstenv
movsb
jge
cmpsl
pop
and
gs
pusha
mov
ret
sub
out
sbb
xor
loope
shrb
cmp
add
out
pop
hlt
jecxz
test
call
push
add
inc
sbb
pop
bound
movsl
mov
iret
std
pusha
dec
cltd
mov
lret
mov
je
cmp
lds
arpl
adc
inc
and
fisttps
mov
pusha
ret
xchg
fs
popf
xorb
pop
shll
stc
mov
push
hlt
mov
sbbb
add
adc
add
lock
pusha
rcrl
pusha
pop
xchg
add
mov
jg
subl
arpl
and
pusha
xchg
sub
dec
iret
jo
test
cwtl
sub
inc
push
pusha
jb
int3
or
push
movsb
pusha
lahf
jb
inc
addr16
fs
mov
icebp
sbb
fs
hlt
inc
out
cmp
pop
jecxz
xchg
dec
fs
jnp
icebp
mov
pusha
notl
push
out
into
inc
pop
lds
cmpsl
loop
pop
or
jne
arpl
mov
addr16
jg
dec
dec
fists
ss
cmpsb
sub
aam
daa
cmp
mov
pop
xchg
mov
xlat
cmp
lcall
mov
test
lods
je
push
pusha
or
mov
scas
outsl
movsb
add
and
adc
arpl
negb
xchg
test
pusha
xor
lods
notl
or
mov
jge
lock
sub
jmp
loop
cmp
inc
insb
daa
test
ja
sub
test
insb
enter
mov
and
xchg
cld
iret
mov
mov
cwtl
pusha
call
je
ficompl
pusha
leave
add
pusha
test
stc
mov
pusha
push
push
orb
jae
imul
and
mov
andl
fcmovnbe
shlb
lods
inc
adc
dec
mov
int
pusha
inc
jo
jecxz
stos
orl
loope
jb
popf
nop
fs
shll
stc
mov
test
rol
push
add
pusha
adc
cmpsb
sbb
pushf
adc
and
decl
rclb
xchg
aaa
jl
fdivrs
fldcw
int
xchg
in
add
add
je
dec
and
std
dec
ljmp
pop
scas
inc
lock
jle
stos
insb
jg
sbb
popf
fsubrl
leave
in
arpl
lock
adc
mov
stos
aas
pop
adc
push
pop
pop
outsl
dec
sarb
inc
and
sbb
push
cmpsb
xor
loopne
ficoml
ljmp
mov
imul
mov
fs
dec
jecxz
and
jae
jb
test
add
icebp
xchg
pusha
mov
inc
lods
pusha
in
dec
fistpll
pusha
inc
sbb
fs
or
stos
stc
pusha
jg
stos
fcomps
push
jae
je
jle
pop
jmp
mov
add
pusha
mov
in
push
arpl
test
cmp
dec
or
call
popa
cmpb
out
loopne
out
pusha
ret
push
mov
push
insb
loop
loope
leave
sti
arpl
insl
inc
mov
pop
mov
mov
push
in
clc
pop
cmp
not
loope
xor
dec
insb
stc
cmp
mov
ljmp
pusha
sahf
daa
pop
or
cmpb
jl
mov
outsb
arpl
adc
mov
mov
fs
aas
mov
mov
mov
sbb
pop
sti
stos
inc
adc
xor
adc
pusha
ret
cmpsl
xchg
sub
shr
add
mov
icebp
nop
pusha
dec
icebp
roll
mov
loopw
mov
push
adc
mov
inc
mov
pusha
sbbl
shrl
mov
out
cmp
mov
jb
loopne
lret
bound
pop
pusha
fbstp
es
ljmp
lcall
sahf
push
mov
in
xor
insb
sub
mov
adc
sbb
xchg
gs
stos
adc
sub
adc
mov
dec
adcl
jmp
rolb
aam
xor
mov
pusha
add
in
fistpl
jb
pusha
repz
adc
cs
mov
xchg
into
pusha
aaa
cmp
xor
pop
push
arpl
rclb
mov
jmp
adc
push
mov
cmp
jnp
dec
insb
lcall
imul
adc
ret
cmpsb
mov
lahf
and
pop
je
inc
push
cmp
mov
dec
xor
ret
jae
out
pop
cltd
aas
jecxz
pop
xorl
notl
sub
xchg
je
sub
hlt
jo
and
orb
push
in
cmp
insb
add
mov
or
inc
mov
or
inc
pop
jb
sti
xchg
aad
jl
pop
inc
fwait
dec
xchg
repz
mov
xchg
push
or
add
sub
cmp
in
bound
and
xor
sbb
mov
enter
add
mov
shrl
shl
push
cmp
jp
jnp
shr
dec
pop
loope
inc
mulb
cld
testb
pop
mov
inc
jmp
and
inc
movsl
shlb
xchg
pop
and
mov
fwait
pusha
mov
shll
sub
push
xchg
lcall
cmpsb
inc
aas
push
push
push
pop
jge
lods
mov
adc
scas
or
imul
out
aaa
and
xchg
mov
add
sti
lret
and
push
nop
push
fsubs
and
jb
fcom
inc
loop
iret
movl
xrelease
ja
dec
loope
mov
xlat
fildl
push
int3
int3
mov
and
cmp
push
pop
xchg
adc
shl
or
stos
add
jecxz
dec
lock
outsb
cmp
lahf
rolb
inc
xor
out
pop
lds
fwait
fwait
es
jno
xchg
sub
or
inc
ret
outsl
loopne
sub
inc
sub
mov
mov
sbb
add
or
mov
andl
add
mov
pop
ret
xor
sarb
flds
mov
sub
mov
push
xchg
or
xor
xchg
adc
sar
and
sbb
mov
ss
cwtl
xorl
inc
mov
and
push
insl
inc
jb
inc
push
mov
or
test
xor
jo
jp
ret
int
mov
popa
xor
notb
fimull
ret
ret
adc
fwait
stos
jmp
popf
mov
int3
pop
mul
jge
xor
inc
push
mov
mov
xlat
jecxz
fbld
popf
aad
orb
mov
out
xchg
jo
jl
xchg
aad
lahf
popa
not
data16
adc
mov
pop
adc
jnp
test
data16
roll
ret
pusha
cmp
cmp
push
aaa
cwtl
pusha
xor
pop
jl
pusha
pop
add
mov
arpl
adc
pusha
xor
cmp
pusha
push
mov
xor
movsl
add
inc
xor
adc
sbb
rorb
lods
pusha
push
push
mov
hlt
pop
push
cltd
icebp
pusha
add
mov
test
dec
push
push
sbb
and
pop
out
sbb
mov
or
sub
sti
pusha
xchg
xor
jno
push
mov
or
add
pop
push
repnz
mov
orb
and
je
in
loope
mov
cmpsl
insb
push
dec
jb
inc
out
pusha
dec
cltd
mov
arpl
inc
lcall
inc
lret
or
adc
test
and
in
iret
subb
andl
out
mov
popf
or
dec
arpl
or
pusha
jecxz
lret
cltd
pusha
xchg
imulb
mov
pop
test
in
cld
dec
pusha
and
outsb
push
movsb
jge
or
aad
aaa
insl
mov
dec
repnz
sub
inc
xchg
movsl
aas
mov
pusha
jo
mov
jne
nop
inc
pusha
jmp
pop
fdivs
or
jo
shrb
bound
pushf
adc
jg
rcr
das
mov
inc
adc
push
adc
mov
and
adcl
jecxz
pusha
filds
jo
add
lret
sbb
insb
aaa
xor
pushf
rolb
andb
and
int3
mov
push
ds
dec
pusha
jae
xor
dec
scas
in
inc
ss
int3
notb
cli
dec
mov
pusha
cmpsl
iret
fisttps
fs
pop
mov
mov
ss
call
add
sbb
popf
scas
test
pop
test
hlt
in
add
ljmp
clc
pusha
je
ss
sub
cmp
lret
add
div
xor
or
mov
pusha
out
dec
push
push
cs
and
pop
adcl
sub
outsb
adc
iret
pop
aad
sbb
mov
repz
add
sub
mul
aas
pusha
inc
xchg
jb
or
pusha
inc
push
mov
in
inc
inc
inc
jle
pusha
out
pop
jno
xchg
shll
cmpsb
jle
pusha
push
and
pushf
add
enter
popf
push
ss
popa
dec
jmp
pusha
cmp
jo
les
adc
loopne
mov
pusha
pop
adc
cltd
cmp
mov
aas
adc
sti
popa
std
mov
jle
clc
lret
in
inc
es
ja
rol
mov
mov
pop
scas
fs
pusha
jb
inc
push
sahf
pop
test
dec
fbld
stos
sti
cmc
mov
rolb
jno
clc
xchg
shl
xchg
pusha
add
hlt
cmp
aam
cmc
subb
data16
pop
xchg
loop
xchg
scas
pusha
imul
adc
pusha
icebp
flds
jae
frstor
sub
test
aaa
cmpsl
pusha
mov
adc
cltd
and
add
lss
sbb
addr16
xchg
xor
popf
pusha
std
or
aas
and
adc
adc
jns
pusha
je
cld
and
mov
js
pusha
ljmp
mov
nop
inc
sub
sbb
fwait
inc
loopne
pop
or
sbb
push
adc
pop
pusha
cmp
sbb
test
dec
cmp
jecxz
cmpsl
xchg
add
pusha
fsubr
iret
in
cmp
insl
mov
or
and
pop
jp
add
fs
popf
test
sbb
loope
sahf
imul
int
cmp
mov
bound
loope
ficoms
and
xor
call
push
jnp
pusha
sub
push
pop
bound
enter
bound
sbb
scas
out
out
decb
sub
xchg
jnp
push
sub
pop
bound
das
and
pusha
mov
pusha
lret
jl
or
cmp
lret
loopne
popa
lods
cld
stos
jmp
in
fimuls
insl
mov
mov
pusha
sub
repz
lret
adcb
cld
lahf
jge
imul
mov
xchg
mov
pusha
inc
clc
call
xchg
popf
loop
mov
cmc
lods
imul
adc
sbb
add
stos
in
hlt
push
xor
pusha
into
jle
mov
mov
test
lahf
xchg
cltd
xchg
into
mov
push
or
pusha
jo
xchg
xor
or
pusha
push
lea
lods
pop
rcr
popf
xchg
mov
push
xlat
mov
pushf
lahf
pusha
xchg
pop
mov
lock
clc
mov
mov
es
dec
cs
testl
loope
and
mov
or
inc
adc
lods
int3
jl
loope
sbb
pusha
mov
inc
inc
in
nop
and
push
ret
test
pop
add
pusha
shlb
mov
pusha
rclb
sti
fstps
jns
inc
push
xchg
fiadds
mov
fisubl
xchg
ss
imul
pusha
adc
nop
sahf
pop
fldl
in
sub
push
dec
mov
dec
bound
std
loope
mov
loope
push
imulb
pop
sbb
or
xchg
popf
xchg
sub
jns
dec
dec
sahf
popa
pusha
adc
mov
addr16
sbb
out
popa
push
inc
pop
aas
popf
add
xchg
dec
sbb
mov
lcall
mov
pusha
push
cmp
fdiv
and
lods
mov
pusha
in
movsb
cmpsl
mov
xor
pusha
lea
mov
xorb
mov
mov
and
rorb
pusha
inc
inc
idivl
jbe
jae
ret
and
xor
adc
sbb
out
mov
bound
rsqrtps
out
int3
xorl
lds
pusha
add
jns
fisubs
sbb
pop
lods
pusha
scas
out
inc
and
pop
jne
fucomip
loopne
adc
ror
frstor
hlt
mov
lods
test
gs
daa
movb
adc
inc
out
cmpb
sub
outsb
rorb
int
jne
dec
roll
insl
cwtl
js
push
loopne
ret
jl
cmpsb
inc
in
frstor
mov
pusha
fmuls
pop
stos
fwait
push
adc
leave
imul
lock
ss
sbb
sbb
xchg
cwtl
roll
jge
out
lods
or
pusha
cmpsl
popf
loop
mov
mov
pop
jno
fwait
popa
push
sbb
out
xchg
scas
dec
pusha
pop
test
movl
xchg
and
mov
lea
iret
push
adc
bound
sub
or
and
inc
aad
xor
sbb
test
and
xchg
ljmp
cltd
stc
pusha
lods
into
mov
js
enter
xor
xor
pop
mov
sbb
mov
sarb
mov
cmc
aam
adcb
cmp
fldcw
cmp
pop
mov
xchg
gs
xor
outsl
or
jmp
sub
sbb
push
pusha
mov
dec
mov
pusha
lret
sbb
jbe
jp
jl
rclb
inc
into
repz
sbb
in
xor
lahf
outsb
movsb
insb
add
mov
fistl
xchg
mov
pop
fs
inc
ss
flds
cmp
push
pop
pusha
stc
pop
lahf
push
sbb
sbb
mov
jl
ror
ret
add
insb
mulb
loop
lret
or
cltd
in
filds
and
into
cld
mov
pusha
jne
or
bound
stos
sbb
pop
adc
jns
fstpl
cmp
sub
cld
das
imul
jle
fwait
sub
pusha
mov
push
popa
cmp
pusha
inc
ret
test
clc
dec
fisttpl
pop
jno
icebp
pusha
in
push
xchg
test
jo
mov
jle
arpl
ficompl
aas
inc
je
loop
das
pop
pusha
push
xor
sub
jecxz
nop
pop
call
fcomps
ss
pusha
lea
fisubl
or
pop
pusha
lods
shll
dec
xchg
mov
cmpb
push
jge
sbb
jg
jmp
out
dec
clc
or
lock
fs
or
or
xor
xchg
jb
lock
push
pusha
adc
add
call
lret
sub
nop
arpl
or
push
rclb
roll
and
add
inc
xchg
call
andl
xchg
idivl
sub
xor
popl
andl
mov
mov
adc
push
lret
xor
xchg
sub
add
and
sbb
or
sar
adc
ror
loope
mov
lea
pop
lret
arpl
push
and
cmpsl
pusha
mov
mov
lret
sbb
pusha
subb
stos
mov
sarb
pop
scas
pop
out
into
scas
shl
test
ret
into
inc
push
popa
xor
sarl
xor
test
mov
sub
xchg
xchg
xlat
cmpsb
in
push
lds
fisubrs
dec
adc
pusha
and
adc
ja
bound
nop
add
outsl
push
aam
inc
inc
pop
pop
clc
jno
mov
sbbb
xor
loope
xchg
xchg
pusha
hlt
in
iret
dec
andb
pop
sbb
pop
das
pop
pusha
clc
mov
les
loope
mov
push
popa
mov
mov
aaa
push
fs
aam
and
idivl
adc
cmp
mov
shrl
inc
push
arpl
mov
insl
aaa
lods
pusha
das
adcl
cli
enter
test
pusha
int
movsl
pop
aad
push
pop
and
test
inc
pusha
cmc
imul
mov
and
sub
xchg
test
arpl
clc
jo
test
call
jmp
or
and
cmc
jo
movsb
icebp
bound
pop
lcall
mov
push
pop
pusha
xchg
gs
inc
pop
addr16
mov
aad
out
mov
pop
push
fsubrl
lahf
mov
fnstsw
leave
mov
mov
adc
pushf
mov
scas
int
mov
push
or
imul
fwait
loope
jg
ret
mov
pusha
sub
loope
sbb
fdivrl
add
pusha
shrl
push
pusha
insl
dec
add
cmpb
mov
xchg
push
ret
xor
pusha
int3
leave
fwait
and
lock
pop
adc
mov
je
outsl
loopne
add
repz
int3
push
pop
addr16
pusha
adc
sub
pop
adc
mov
mov
cld
lret
imul
xchg
jmp
test
xor
sub
push
bound
rorl
mov
jle
xchg
aad
or
popf
xchg
and
cld
adc
cs
cmp
and
insb
jno
int
aad
arpl
clc
loop
mov
in
add
rorb
mov
stc
data16
jp
sbb
lock
mov
lcall
xor
jl
shll
mov
cmp
cld
or
je
or
in
fldt
movl
arpl
cmp
pop
push
jle
aas
test
dec
aad
flds
out
gs
outsb
cwtl
mov
mov
hlt
xor
or
roll
jl
inc
sub
rorb
popa
out
aas
mov
dec
ljmp
and
cli
fwait
sub
fwait
pusha
jae
mov
andl
lret
mov
push
frstor
mov
shll
xchg
mov
int
icebp
inc
sbb
pop
jle
jae
pop
adc
out
xchg
dec
or
pop
outsl
push
leave
hlt
int3
and
lcall
lds
cmp
xchg
sub
sub
xchg
and
cmpsb
mov
lods
jbe
jne
cmpsl
loope
xor
outsb
cmp
mov
inc
incl
pop
sbb
imul
stos
mov
fdivrl
or
xchg
push
cwtl
adc
push
inc
lea
dec
sub
jo
ret
enter
pusha
xchg
aad
lret
cmp
ds
sbb
cld
sbb
pusha
lods
repz
adc
stc
pusha
add
mov
mull
and
scas
jno
shll
daa
xchg
cs
push
mov
nop
xor
mov
pusha
jg
jo
scas
inc
cmp
fs
push
addb
dec
loopne
or
lods
rorl
pop
pop
imul
mov
xchg
push
jmp
bound
lods
orb
stos
outsb
xchg
jl
pusha
fs
cmpsb
mov
loopne
cltd
add
fstpt
gs
sub
add
cmp
fdivl
outsb
pop
sti
in
pusha
jo
mov
mov
jmp
mov
andl
mov
je
add
mov
mov
insb
xlat
out
dec
in
sti
outsl
mov
pop
cmpsb
loope
stc
pusha
pop
faddl
bound
enter
add
into
jne
lcall
mov
xchg
push
jl
or
mov
add
dec
sub
push
int
pop
push
aad
dec
popf
cs
data16
xchg
adc
xchg
bound
pusha
jbe
mov
fcmovnu
out
inc
xchg
add
ja
pop
pusha
mov
pop
xlat
xchg
fistl
ljmp
scas
mov
or
or
dec
fists
jae
imul
or
cs
loop
jmp
fwait
inc
fs
cld
adc
scas
loop
stos
push
movsb
pusha
fldl
lods
mov
mov
dec
aaa
mov
or
fldcw
jno
xor
pusha
or
sbb
pusha
jecxz
jnp
rolb
cmp
jl
repnz
fisubrs
jbe
bound
rcrl
xchg
mov
cmp
shl
mov
inc
mov
pusha
ljmp
addr16
jecxz
jge
xchg
jo
sbb
outsb
popa
sbb
pop
scas
insl
out
add
mov
test
sub
je
dec
adc
add
and
lods
mull
test
fbld
pop
scas
mulb
sub
xlat
pusha
jno
hlt
cmp
add
je
mov
push
mov
and
sub
aas
fs
int3
lcall
push
mov
dec
clc
stos
daa
push
das
inc
or
in
mov
bound
xor
jl
cwtl
push
rorb
addr16
pop
lods
out
jmp
sbb
ret
lcall
mov
sbb
aam
jno
mov
scas
fisttps
xchg
and
scas
mov
xor
pusha
test
inc
enter
pusha
pop
add
movsl
sbb
and
sbb
sbb
icebp
pusha
jb
sbb
test
repz
in
loope
popf
je
in
js
and
pusha
popf
aas
cltd
dec
fs
js
push
pop
xorl
pusha
insl
in
pop
sarl
xchg
and
pop
xor
sbb
fsubl
aad
cmp
pop
jmp
notl
xor
ja
jmp
in
test
adc
scas
pusha
lret
sahf
dec
pop
cmp
test
mov
jecxz
pusha
lahf
in
out
inc
mov
pushf
fwait
adc
insb
enter
jno
or
mov
movsl
add
or
outsl
mov
xchg
push
mov
leave
push
jp
popf
imul
cmp
hlt
sti
fdivs
xlat
out
sbb
sub
mov
push
push
dec
data16
repnz
gs
inc
pusha
in
push
or
xchg
cmp
out
mov
rcrl
bound
pusha
mov
movsl
dec
lret
jnp
jne
bound
idivl
pusha
xchg
dec
out
mov
sti
adc
push
jp
jne
movsl
lods
pusha
mov
cld
or
push
add
pusha
in
mov
ljmp
cli
mov
pusha
in
mov
jne
hlt
add
rclb
ljmp
lds
iret
in
mov
sbb
outsb
mov
ficomps
add
mov
pusha
xor
xchg
repnz
mov
pusha
out
pop
and
sbb
and
mull
fidivrl
jmp
add
lcall
das
xchg
add
loope
bound
adc
mov
fstpt
pusha
mov
inc
popa
inc
fs
out
push
popf
and
bound
jnp
fs
jbe
enter
leave
mov
push
xchg
arpl
jmp
push
addl
mov
lods
dec
addr16
int
dec
mov
outsb
std
xor
xchg
lds
jl
clc
xchg
pusha
push
outsl
sarb
xchg
sub
jp
and
push
fs
fs
mov
xor
pusha
fwait
and
insl
ja
cmp
and
dec
lods
inc
xchg
add
mov
pop
lret
ret
mov
push
lahf
mov
adc
arpl
jle
lds
jg
sub
xchg
pusha
repnz
sub
pusha
or
mov
and
ljmp
fldcw
mov
hlt
xor
mov
cli
jne
mov
inc
flds
sbb
repnz
inc
insb
shlb
push
push
mov
int
fildl
loop
pusha
cltd
insb
lret
jge
pusha
stos
push
jl
xor
lahf
adc
divps
pusha
xchg
ret
out
clc
xor
insl
pusha
cmp
test
int
repz
fs
rcll
rcll
xchg
pop
push
cmpsl
add
in
jns
das
jmp
pusha
xchg
je
fstl
nop
adc
xchg
pop
shll
adc
mov
das
pusha
out
mov
cmp
dec
icebp
mov
into
in
bound
sub
xchg
inc
pusha
xchg
stc
or
xor
add
jne
mov
xor
mov
addr16
push
daa
mov
sbb
fldcw
pop
push
or
jmp
sbb
jnp
pusha
fs
iret
push
cmc
adc
movsb
mov
pop
pusha
repz
push
xchg
push
movsl
sbb
stc
test
ror
lds
pusha
ret
add
sbb
pop
mov
pop
daa
test
arpl
cmp
pusha
xchg
out
add
jle
sub
icebp
ja
imul
test
dec
xor
inc
or
pop
test
pusha
fildll
xchg
aam
test
lcall
rclb
mov
cmc
pusha
je
dec
cmp
mov
push
and
xor
cmp
pusha
ss
scas
test
ss
adc
arpl
lea
add
bound
mov
repz
popf
movsb
xchg
out
jno
jae
dec
pop
adc
arpl
xchg
loope
cmpl
cwtl
js
fisubl
adcb
push
insb
dec
mov
and
mov
xchg
test
push
mov
in
test
jnp
adcl
xor
mov
xchg
pop
pusha
add
jbe
push
xor
mov
mov
xlat
ficoms
inc
in
lahf
mov
insb
outsl
mov
sub
cmpsl
clc
inc
pop
mov
flds
mov
xor
add
pusha
call
mov
xchg
hlt
cs
pop
ljmp
and
pop
add
or
pop
or
pusha
loopne
dec
hlt
stos
xchg
adc
pop
outsb
inc
sub
in
push
call
dec
insl
pop
dec
std
aaa
jb
lods
outsb
push
and
nop
sub
fdivp
inc
sahf
inc
adc
jo
popa
fidivrl
cmp
orl
dec
hlt
sbb
popa
stos
loope
mov
loope
cmp
xchg
jbe
xchg
rclb
add
in
xor
ret
daa
mov
mov
jo
loope
inc
in
aam
adc
and
or
popa
pushf
clc
out
stos
cmp
push
or
and
jmp
mov
or
jmp
inc
stc
test
jb
andb
and
enter
ss
cmp
xchg
add
inc
cld
loop
adc
or
xlat
mov
xor
fildl
jge
push
and
jo
pop
or
lcall
pop
out
in
insl
mov
cli
xlat
les
inc
aad
xor
xchg
xor
mov
push
test
dec
pop
mov
adc
and
mov
int
jmp
jae
mov
lea
shlb
arpl
scas
cmp
push
sub
pusha
ljmp
cmp
jge
mov
std
out
jbe
aas
ret
push
test
lds
add
sti
cmp
pop
nop
adc
mov
lret
stc
inc
jmp
cli
sbb
repnz
loop
inc
test
lods
bound
out
icebp
mov
aad
add
mov
cmpsl
pusha
mov
jo
mov
loope
dec
inc
jp
mov
xchg
shl
outsb
mov
scas
scas
lods
pop
mov
inc
out
setb
mov
test
jo
jle
rorb
fs
or
cwtl
mov
xchg
adc
fbld
mov
push
pop
fmull
pusha
mov
mov
stos
and
in
lret
dec
sbb
dec
mov
push
mov
popa
push
inc
dec
enter
push
adc
mov
repz
xor
cmp
and
adc
mov
loopne
pop
shr
pusha
scas
loopne
jae
jb
mov
gs
out
and
xchg
bound
mov
mov
sbb
test
stc
fnsave
pusha
int3
push
out
outsl
mov
pusha
out
xchg
add
loop
arpl
clc
push
pusha
mov
into
std
scas
pusha
and
inc
push
mov
cld
add
loop
test
pop
pusha
or
enter
jnp
jbe
cmp
jecxz
jns
addr16
out
push
pusha
test
mov
dec
mov
js
adc
dec
pop
stos
stos
mov
bound
push
fsubl
dec
outsl
jp
out
mov
pusha
fldt
adc
mov
fs
sub
enter
and
mov
addb
adc
cmp
out
mov
mov
lds
xlat
icebp
sbb
jno
cs
inc
xor
rcll
fs
ret
loope
nop
sub
sub
mov
inc
je
jne
and
fwait
aas
inc
popf
icebp
sub
adc
ds
aad
or
push
fisubl
dec
sub
jmp
adc
mov
pusha
pop
je
lret
xchg
add
ret
loope
cmc
adc
and
je
jne
bound
jl
loopne
push
mov
js
imulb
cld
pop
mov
xchg
pusha
shlb
repnz
or
inc
mov
in
inc
dec
mov
push
gs
insb
ljmp
inc
sub
pop
cmp
lods
stc
mov
fsub
or
out
cmpsw
xor
fdivs
inc
push
in
aad
jbe
mov
cmpsl
fs
mov
outsl
cmc
push
sbb
mov
int
mov
sub
inc
mov
jecxz
push
push
mov
in
movsb
test
cwtl
mov
cmp
inc
pusha
sbb
cmp
pop
mov
outsl
rol
mov
jns
shl
sub
aas
mov
mov
push
cmpsb
cmp
xchg
inc
push
loopne
pusha
pop
bound
xor
and
js
sub
inc
sub
sahf
mov
popa
mov
loop
rcll
sbb
xchg
jecxz
int3
bound
push
ret
mov
jnp
cltd
cmp
mov
inc
pop
push
pusha
jl
int
mov
imul
popa
xchg
mov
hlt
loopne
gs
pusha
cld
cmp
jb
mov
pop
xchg
lea
inc
pusha
pop
gs
and
xor
aaa
shlb
push
cmp
aad
movsb
insb
mov
cli
enter
out
xor
ja
push
jg
push
popa
and
cmp
xor
sbb
inc
sub
push
popf
stc
xchg
jns
sub
movsb
es
inc
into
mov
or
adc
add
fsubrs
stos
out
in
and
push
inc
mov
fwait
and
xchg
leave
mov
fstpl
xlat
jecxz
repnz
rcrl
add
sbb
pop
add
orb
cmp
xor
notb
cmp
aas
ret
dec
mov
lcall
mov
imul
pusha
xchg
lahf
cwtl
imul
and
adc
xchg
test
outsb
add
pop
pop
mov
mov
xchg
icebp
loope
cmpsb
push
stos
dec
out
inc
sbb
xchg
mov
ret
or
lea
lods
mov
cmp
mov
leave
pop
pop
xchg
outsl
fwait
subb
pop
hlt
xchg
add
stc
lock
inc
lods
call
cmc
push
or
adc
xchg
mov
lea
mov
xchg
xchg
sub
out
sbb
cmpsl
out
jnp
dec
inc
dec
test
rol
add
cltd
daa
repz
xor
lods
pusha
std
out
loop
push
xchg
adc
scas
fdivrl
leave
cmp
movsl
pop
stos
or
adc
mov
pusha
leave
stos
in
sub
mov
add
daa
mov
or
sbb
in
in
shrb
fwait
loopne
xlat
and
shll
pusha
pushl
test
lret
mov
dec
push
lahf
jecxz
mov
pusha
dec
sbb
xchg
shlb
int
or
js
lret
dec
stos
xchg
das
shl
pusha
xor
rol
rclb
ror
pusha
mov
loopne
inc
pusha
xchg
rolb
adc
adc
sbb
out
out
xchg
loope
mov
adc
fs
jbe
fs
mov
or
pop
popf
push
and
aas
jecxz
es
popa
sub
pusha
imul
in
sub
sbbb
aam
mov
push
or
outsb
f2xm1
jecxz
cmc
jecxz
jns
lea
into
mov
xor
inc
push
decl
mov
repz
cli
mov
push
mov
ficomps
pusha
xchg
pop
js
les
push
inc
push
sahf
aaa
xchg
jb
mov
pusha
pop
inc
jmp
add
fsubrp
mov
adc
fimull
imull
xor
sbb
fwait
xor
sbb
imul
sbb
movsl
cmpsl
paddb
mov
call
repz
loopne
fisubl
mov
rcrb
nop
push
jmp
insb
shll
push
frstor
ror
je
clc
pushf
jmp
fwait
jmp
insb
orb
or
pusha
or
mov
sbb
int
fwait
lods
pusha
fdiv
sub
mov
loopne
fisubs
mov
neg
dec
xchg
push
fs
and
mov
fucom
cmpsb
xchg
xchg
and
pop
inc
imul
repnz
push
shld
inc
outsl
ja
aaa
or
data16
cmc
pop
add
mov
pusha
out
in
les
fs
pop
and
lods
mov
or
lods
pusha
sbbl
enter
gs
hlt
jno
popa
sar
pop
pop
imul
out
mov
jp
rclb
xchg
iret
fsubrl
pusha
or
je
mov
cmpsb
mov
out
shll
mov
xor
rclb
mov
push
mov
ja
sti
das
repz
mov
fsts
fiadds
test
mov
xchg
add
outsl
push
mov
fidivrs
xchg
jecxz
sub
lea
in
fsubs
leave
clc
lahf
je
xor
repnz
mov
inc
std
mov
xchg
jecxz
dec
je
sahf
jl
fisttpl
inc
ljmp
add
jno
in
xor
mov
pusha
fmull
pop
xor
mov
fmuls
cli
push
inc
cmp
inc
xchg
and
adc
ds
or
fistpl
mov
jae
lea
les
lret
sahf
jecxz
inc
push
ljmp
or
popa
mov
mov
cs
sahf
into
pop
pusha
fidivrl
or
sub
loopne
pusha
cwtl
cmpsl
cmpsb
clc
lret
ret
jg
xchg
pop
loopne
mov
movsb
jg
insb
and
xchg
add
push
pusha
ljmp
mov
pusha
xor
inc
lahf
cmpsb
pop
jmp
lds
jge
rcll
into
ljmpw
in
pusha
or
push
aam
stos
mov
inc
inc
mov
outsb
adc
negl
int3
faddl
daa
pusha
ret
lret
dec
mov
dec
lret
repnz
adc
inc
jno
inc
and
pusha
in
mov
and
jae
pop
out
popf
loope
aad
pop
movsl
pusha
jl
mov
dec
pusha
outsb
wrmsr
js
add
dec
push
push
in
out
inc
mov
pusha
cs
in
pop
sar
arpl
jne
arpl
xor
cli
mov
sbb
insl
mov
pop
hlt
addr16
pop
jl
mov
loope
xchg
pop
add
lea
adc
mov
fildll
loop
loopne
ret
xor
sbb
xchg
out
leave
dec
iret
jbe
pusha
adc
xchg
fnstcw
cltd
test
les
iret
and
call
sahf
adc
or
pusha
mov
pop
pusha
xor
rorl
mov
cmp
loope
lods
mov
and
leave
fimuls
ret
loope
pusha
mov
test
push
pop
jg
pusha
nop
test
ficoms
or
inc
pop
inc
mov
adc
movsb
cmp
loopne
adc
jecxz
int3
test
add
roll
jp
imul
pusha
mov
das
out
subl
pop
out
bound
xchg
pop
fidivs
mov
je
mov
pop
pusha
sarl
sub
ret
sbb
push
aam
jmp
or
mov
insb
sbb
andb
jecxz
push
ja
clc
pusha
mov
add
xor
popf
pop
sbb
mov
cmp
rcl
add
aad
and
xchg
pusha
mov
les
lahf
ret
fidivs
jbe
dec
lahf
es
jbe
dec
inc
je
ret
xchg
std
cld
and
ret
cwtl
pop
xchg
sti
cli
inc
bound
jo
es
js
lret
pusha
popa
test
in
xor
lret
cli
mov
jo
adc
imul
inc
pusha
adc
mov
arpl
pop
push
xorl
sarl
daa
jmp
jb
aad
pusha
push
test
push
loope
push
dec
xor
mov
in
jns
xchg
add
jg
pushf
push
mov
pusha
jb
lods
fs
imul
sbb
movsb
out
stos
mov
roll
pusha
loope
out
sbb
std
fcomp
ja
jl
push
or
mov
shrl
jle
pop
sbb
fs
clc
mov
adc
xchg
and
subb
adc
fdivrl
mul
inc
daa
fwait
pusha
push
or
jns
and
mov
lock
sbb
shrb
or
and
push
rorl
pusha
lods
daa
ret
inc
and
lock
clc
sub
inc
jl
ret
mov
or
sub
mov
fwait
pop
xor
shlb
arpl
xor
sbb
dec
dec
pop
push
mov
pop
in
mov
mov
push
je
das
xor
arpl
in
inc
pusha
xor
xchg
shll
loopne
nop
pop
out
mov
mov
pusha
push
cmp
mov
xor
call
cmpsl
les
ss
subb
xlat
xor
sub
sub
test
cmp
inc
pushf
jb
sub
loop
mov
fs
mov
inc
mov
imul
adc
jl
fwait
scas
jl
and
mov
ja
cmp
loope
mov
cmpsl
out
jp
test
push
pushaw
popf
xchg
nop
pop
pushw
adc
enter
and
je
jae
clc
movsb
bound
xchg
dec
lods
pop
notl
push
je
sub
xchg
out
sbb
int
jo
icebp
xchg
jl
cs
mov
aas
push
pop
jmp
or
rcr
or
push
fwait
pusha
xchg
cli
pop
xor
xchg
sbb
cld
push
lcall
fmul
cmp
outsb
loopne
shll
mov
mov
mov
adc
int
or
cmp
lods
mov
mov
pusha
fcom
into
xor
mov
jns
add
sub
pop
mov
add
adc
popf
xchg
pop
out
sub
sub
sub
and
mov
in
daa
popa
arpl
xchg
dec
stos
push
fs
pusha
popa
adc
bound
loop
sbb
sub
xor
mov
fs
insb
mov
mov
iret
in
rolb
mov
sbb
mov
inc
in
icebp
sub
rcr
jmp
cmp
cmpsb
fistl
leave
and
test
lret
mov
in
xchg
mov
mov
inc
fldt
je
push
xor
cmp
push
mov
or
sbb
jns
lock
out
sbb
out
xchg
sub
xchg
adc
adc
fisubrs
sbb
lcall
loope
mov
and
jp
lret
stos
loope
jl
pop
dec
pop
daa
mov
mov
inc
push
aad
add
mov
lcall
xchg
aas
sub
cld
cwtl
sub
cmp
mov
hlt
stos
mov
ret
and
aas
xor
cmp
arpl
adc
xor
jmp
mul
ret
test
push
inc
bound
andl
lods
in
loope
mov
cmp
xor
xchg
ss
and
mov
sub
fstps
das
adc
dec
pop
or
adc
and
sarl
addb
cmp
pop
test
mov
and
xchg
xor
fs
xchg
adcl
pop
pop
mov
cli
xchg
mov
inc
push
test
data16
mov
mov
mov
pop
add
cmp
mov
cmp
test
or
jo
mov
ds
leave
cld
dec
loope
jno
sahf
in
push
or
sub
inc
push
fstpt
jbe
loop
lret
sarl
jmp
loope
or
push
and
bnd
rorb
cmpsl
add
push
xor
jb
adc
adc
pusha
loopne
xchg
xchg
insl
popa
jb
xchg
sub
or
jne
push
repz
iret
shlb
pop
lret
ds
jae
in
dec
or
icebp
xor
jb
rclw
ljmp
inc
hlt
xor
and
inc
push
and
lret
push
push
jle
adc
adc
nop
cmp
push
or
dec
sahf
repnz
adc
mov
sub
nop
sbb
push
nop
sbb
std
inc
xchg
inc
cmc
fcomps
pop
imul
mov
repnz
iret
pop
jle
inc
in
fcompl
rolb
arpl
daa
movsb
adc
and
lcall
mov
adc
arpl
repz
mov
mov
jbe
add
dec
pushf
xchg
mov
adc
push
mov
sub
push
jo
or
mov
ret
mov
pop
dec
mov
in
mov
xchg
mov
hlt
bound
lds
ljmp
ret
adc
xor
ja
aam
cli
pop
orb
rolb
pop
sub
sbb
push
roll
icebp
inc
loopne
out
xchg
jle
rorl
pop
div
cli
xor
rcll
and
pop
dec
mov
lds
int3
sbb
stos
test
push
sti
out
pop
loope
lret
pusha
loopne
leave
repz
sbb
mov
das
cwtl
into
jne
inc
push
fisubl
repz
das
sub
xchg
insb
sbbb
lea
lcall
lea
jno
dec
pop
push
dec
xchg
popf
sar
dec
mov
xor
out
mov
mov
scas
inc
or
iret
cmp
sub
cmpsb
adc
sahf
jbe
mov
mov
ds
lret
or
mov
lret
movsb
mov
push
mov
push
mov
jnp
inc
in
xchg
rol
loop
mov
jns
or
scas
rol
mov
or
push
pop
aas
jnp
sub
nop
mov
add
xor
rcrb
rcl
int3
jl
and
jle
push
and
mov
shrb
xor
sar
jl
and
dec
cmpsl
jae
arpl
ss
and
and
inc
and
xchg
sbb
jno
or
mov
fsub
cmp
mov
testb
push
js
lock
dec
dec
or
loopne
mov
xchg
stos
mov
adc
pop
mov
lds
add
rcrl
sar
add
cld
sbb
gs
or
inc
ret
mov
ljmp
inc
jg
jno
sub
aaa
dec
sub
daa
push
mov
lcall
popf
xchg
pop
dec
mov
fbld
and
rcrl
shl
je
arpl
sbb
into
inc
js
stos
popf
ret
subb
and
sub
cld
nop
daa
add
mov
pop
pavgw
inc
stos
adc
jnp
sub
daa
sub
push
pop
jecxz
and
xchg
mov
inc
sub
inc
jg
add
popf
jnp
xchg
loope
xorl
ljmp
xor
and
loope
sahf
js
jg
enter
push
sub
mov
push
xor
cltd
pop
ljmp
lret
adc
or
roll
iret
xor
fidivrs
lea
popa
das
loope
jne
push
or
pop
vmptrld
xorb
arpl
push
add
mov
lret
and
cmpl
xlat
stos
out
ret
xorl
mov
rorb
cs
and
out
in
dec
sbb
mov
fistps
bnd
lea
dec
cwtl
sub
pop
push
repnz
adc
rol
mov
fildll
imul
shrl
inc
mov
add
mov
jns
loop
or
sub
cld
jmp
adc
inc
add
pop
int3
fwait
sub
and
pop
fbstp
cmp
cmp
push
and
add
push
and
sub
add
cmp
xchg
jno
xor
mov
push
rcrl
push
xor
jbe
dec
jb
dec
lock
mov
pop
jle
or
add
sub
dec
and
adc
rcrb
mov
push
mov
test
sbb
or
xchg
push
or
loopne
adc
dec
or
stos
scas
ror
fmuls
xchg
ret
inc
arpl
mov
jbe
or
mov
push
pushf
xor
enter
stos
sahf
arpl
rcll
sub
in
movsl
mov
orl
lock
repnz
mov
outsb
or
pop
xor
adc
or
and
fcomi
decb
mov
lcall
inc
fldenv
movl
jg
sub
cmpsl
rcr
aam
mov
fisubrs
int
mov
clc
and
shrl
dec
inc
adc
mov
sub
lds
xchg
mov
jl
or
fistpll
clc
test
leave
pop
dec
push
aas
loop
ret
and
xchg
xor
xor
cmp
push
lcall
cltd
test
push
adc
mov
pop
dec
jns
add
pop
aaa
cmp
arpl
mov
ret
js
sub
pusha
xor
cld
or
pusha
cwtl
sbb
mov
stos
sbb
movsb
out
lret
pusha
sbb
sti
fwait
pusha
sub
and
shll
pusha
cli
inc
inc
xlat
outsb
or
cmpsl
pusha
dec
icebp
cmp
notb
sbb
mov
loopne
pusha
or
adc
pop
fs
inc
test
and
mov
sbb
sub
gs
xchg
cwtl
and
ss
push
jl
int3
sti
sub
mov
nop
loop
pop
call
and
mov
cmpsb
mov
sub
sub
push
popa
mov
cmp
repz
cmpsl
jl
mov
int
xorb
jle
js
inc
movsb
imulb
sub
popf
call
pop
or
push
scas
fsubrp
cmpsl
and
mov
adc
dec
dec
ficoml
fstpt
outsb
add
pusha
mov
and
lret
daa
fwait
xchg
insb
test
faddl
clc
mov
mov
insl
aaa
xchg
sub
ret
jmp
adc
cwtl
je
aam
xor
and
jnp
dec
pusha
mov
sbb
mov
loope,pt
jmp
adc
xchg
stc
mov
mov
out
outsb
lea
mov
mov
pop
notrack
pop
xchg
mov
ss
enter
out
lret
or
mov
mov
jo
mov
pusha
mov
arpl
push
xor
inc
pusha
xchg
adc
or
or
ret
loope
pusha
testl
arpl
mov
mov
fs
push
mov
jbe
jmp
sbb
lahf
adc
dec
ljmp
pop
bnd
mov
push
push
jle
test
bound
xchg
cli
pusha
dec
insb
jle
mov
das
cs
xchg
arpl
cmp
sbb
mov
mov
out
test
push
out
mov
xor
adc
jge
push
adc
inc
popf
sub
pusha
adc
cmp
sub
dec
fadds
pop
bound
jl
mov
loop
jnp
pusha
mov
imul
sub
pusha
out
jbe
cmpsb
jne
insb
xchg
lea
adc
jo
rorb
sub
xorb
popa
dec
in
mov
bound
xchg
adc
addr16
inc
xor
subl
ljmp
bound
inc
pusha
mov
lcall
pushf
data16
cwtl
pop
pusha
addr16
out
push
jmp
cmp
add
mov
xlat
lret
jecxz
adc
xchg
xchg
jecxz
leave
pusha
jmp
ss
push
pusha
shll
inc
jl
pop
call
jb
hlt
sub
in
pusha
mov
rcr
mov
mov
cltd
pop
pusha
jbe
call
andb
add
inc
pusha
jbe
ret
adc
xor
cwtl
dec
push
mov
arpl
sbb
jg
xchg
cmpsb
add
fsubs
mov
dec
je
mov
outsb
shld
pop
xchg
or
test
inc
clc
fs
in
xchg
inc
adc
icebp
mov
mov
loope
xchg
inc
loope
stc
pusha
in
out
push
dec
mov
add
popf
inc
pushf
adc
sub
ds
xchg
cmpsl
inc
jne
push
stos
add
loopne
adc
lret
sbb
in
bound
inc
aad
sahf
fcoms
sub
xor
pop
loope
mov
push
mov
js
inc
test
push
mov
cmp
sbb
pop
shrb
push
es
xchg
addr16
repnz
sub
sbb
inc
jae
inc
pop
cli
xchg
jecxz
pusha
or
addr16
add
jns
dec
jmp
lods
or
sbb
push
dec
jg
pop
rorb
arpl
lret
sub
or
pusha
fcmove
dec
lret
and
adc
std
gs
lea
loop
pop
xor
mov
push
dec
scas
mov
and
popa
sti
testl
mov
push
enter
lds
loope
nop
mov
mov
inc
addl
cmc
jl
shlb
dec
pop
mov
pop
xchg
fs
pusha
xchg
and
xor
pusha
inc
ja
je
roll
sub
xor
pusha
es
es
lods
idivb
jecxz
and
pop
pop
int3
jl
leave
jecxz
xchg
sbb
punpcklbw
stc
pop
push
adc
mov
mov
sahf
mov
adc
les
sbb
mov
adc
iret
jmp
inc
inc
adc
movsb
stc
data16
add
xchg
test
popf
fs
testl
arpl
fs
fmuls
shlw
jae
xor
or
pop
call
fnstcw
pusha
enter
sub
fldl
pusha
cmp
xor
dec
pusha
into
inc
add
stc
push
cmp
xchg
nop
out
pop
push
fldl
jns
arpl
shlb
into
or
daa
ljmp
stc
ret
idivb
ret
sarb
out
pop
or
sub
lret
cmp
mov
or
sbb
push
sub
arpl
aas
in
movsl
pop
es
mov
dec
jle
repnz
cmp
enter
lcall
je
mov
mov
jmp
cltd
aad
jae
push
lea
adc
or
imul
fdivrl
cltd
ljmp
sub
je
inc
imul
insb
mov
std
and
and
fs
das
xchg
pushf
ret
cmp
mul
gs
cmp
mov
fadds
xchg
pusha
aaa
sti
pop
adc
pop
clc
pop
pop
pop
ret
rol
shrb
sub
lret
pop
add
bound
cmpsl
xchg
loopne
icebp
lods
loop
adc
rclb
int3
jmp
pop
pop
out
jnp
js
aam
xchg
pusha
and
test
addr16
add
mov
ds
add
movsl
pusha
pushf
or
mov
adc
lcall
mov
mov
add
cmp
jo
ja
mov
addr16
xchg
out
shr
in
pop
add
pusha
mov
or
fwait
ror
jne
xor
aad
decb
push
rcl
mov
pusha
cmp
fwait
int3
jno
adc
in
popa
xchg
and
pusha
mov
adc
ds
sbb
outsl
insb
mov
pusha
mov
mov
sahf
jle
cmc
ret
aas
mov
jecxz
lcall
hlt
arpl
lock
add
push
push
mov
lret
dec
std
inc
insb
repz
jo
mov
int
movsl
mov
mov
cld
fs
xchg
dec
mov
shr
leave
test
adc
shll
or
pushf
jmp
movsl
push
pusha
inc
cltd
ret
sub
fldcw
or
sub
scas
clc
pop
and
pusha
jle
jmp
in
xchg
or
fbld
lahf
lret
push
pusha
out
push
imul
or
pusha
inc
mov
adc
pop
pop
bound
jg
mov
pusha
push
std
loope
incb
add
sub
xchg
aaa
fwait
sbb
pop
pop
jo
cwtl
cltd
loopne
in
call
push
pop
sub
adc
jo
and
inc
mov
data16
stc
jnp
popf
mov
add
addr16
sbbl
mov
or
clc
loop
test
jmp
xchg
sbb
pop
enter
sub
pop
inc
sub
adc
pusha
pop
imul
mov
dec
add
xchg
andl
xlat
pop
es
out
pop
push
in
into
push
pushf
mov
gs
imul
imul
test
or
lock
cwtl
xchg
pop
in
inc
lret
arpl
xor
bound
cmp
cmp
ja
scas
adc
mov
sbb
jae
mov
lret
mov
jno
aam
lcall
xchg
cmc
insb
mov
ret
xchg
loopne
xor
insl
sahf
pop
out
in
adc
daa
push
pop
fbld
shrb
lock
out
pushw
mov
sti
js
ja
das
sub
jp
xor
lret
xchg
pop
mov
or
arpl
push
push
ficompl
lock
push
ffree
sub
cmp
push
ds
adc
and
call
imul
fbstp
xchg
push
inc
in
inc
sub
xchg
jb
sbb
fcmovne
jl
mov
pusha
stos
push
cs
push
cmpsb
outsb
xchg
shl
subl
loop
mov
push
or
xor
out
and
stos
iret
inc
bound
xchg
cmc
mov
pusha
fdivrs
leave
nop
push
xchg
in
jo
xchg
mov
sbb
ds
cltd
out
xchg
ss
lahf
lods
fwait
je
ret
jl
enter
pusha
inc
push
dec
enter
les
lret
popa
pusha
andb
pop
lds
sbb
mov
mov
pushf
loop
stos
pusha
daa
outsb
jle
testb
xchg
pusha
pushf
xchg
fadds
jne
pusha
xchg
shlb
mov
aam
jnp
leave
dec
push
inc
incb
insb
xchg
ret
fsubl
xchg
aas
lods
insl
daa
xchg
shlb
sti
ja
out
xlat
mov
xchg
jmp
popa
enter
mov
mov
mov
cmp
jb
insl
lods
xchg
aad
pusha
cmp
subl
cmpsl
and
mov
leave
test
inc
cmp
xchg
bound
fisubrl
stos
bound
lods
sbb
cwtl
sti
lahf
and
or
nop
add
mov
jbe
jne
cmpsl
jmp
aaa
fucom
jecxz
mov
movsl
pop
pusha
mov
data16
shlb
jne
faddl
adc
inc
ja
mov
into
or
pushf
mov
dec
sub
or
nop
pop
lret
jp
mov
daa
mov
pusha
mov
sbb
cwtl
xor
outsb
imul
fisubl
inc
iret
pop
or
pusha
mov
xchg
adc
mov
cmp
cmp
repnz
pop
int3
jmp
je
cmp
add
pop
ffreep
xlat
mov
es
adc
adc
add
lret
jo
popf
std
add
mov
mov
test
or
pusha
lock
lods
std
jo
cmp
push
int3
xorb
jl
pop
push
mov
or
pop
test
sbb
fs
ds
loope
mov
sbb
cmp
pusha
call
and
mov
cwtl
pop
pop
hlt
icebp
frstor
or
xchg
mov
push
mov
cmc
outsb
lods
mov
mov
in
lods
pop
and
dec
imul
testl
fnsave
call
mov
pusha
sub
cs
sbb
cmp
lods
inc
cmpsb
jmp
outsb
dec
jnp
xchg
lock
sbb
outsl
mov
fdivs
pusha
ss
mov
call
xchg
nop
testl
jnp
call
adc
ds
mov
sbb
pusha
lahf
int
outsb
pop
jge
pop
jmp
loopne
les
test
pop
add
or
icebp
cld
popa
insl
and
jbe
xor
aaa
fs
fstps
lahf
cmp
adc
sbb
loope
loop
xor
lea
pop
scas
adc
jae
xchg
sub
xor
mov
popa
inc
cmpsl
fisubl
sub
jae
sbb
sbb
test
out
xlat
enter
cwtl
dec
fcomps
sub
mov
mov
cmp
loopne
imul
inc
icebp
les
push
sub
push
jb
sti
sub
cmpsb
int3
mov
push
sub
xor
sub
push
aam
fs
mov
movsb
es
aad
push
and
jge
lahf
dec
push
aas
jae
insb
xor
lahf
and
fidivl
fs
fcoms
ret
cmpsb
ffreep
jmp
fsubrl
adc
das
mov
lret
shlb
in
jge
out
sub
pop
adc
bound
xor
in
inc
mov
mov
dec
sarb
pop
dec
xchg
pop
and
xchg
mov
pop
in
mov
pushf
mov
das
psubsw
sbb
adc
jo
sub
lods
jle
movsb
inc
sbb
mov
in
lahf
push
xor
das
aaa
das
pop
jo
aas
ret
xchg
pop
repnz
lahf
and
dec
inc
nop
mov
pop
adc
into
repnz
mov
add
jle
lcall
adcl
mov
push
gs
sub
ficompl
and
popf
outsl
add
mov
mov
in
mov
push
mov
loope
xor
push
inc
inc
fadds
in
scas
dec
jb
ljmp
xchg
push
adc
mov
inc
outsl
mov
pop
push
lods
cmp
cli
xchg
ret
push
dec
jne
js
xlat
aad
inc
pop
in
mov
xchg
add
je
sub
addr16
mov
push
jo
pop
or
movsb
mov
cmp
gs
ret
imull
fs
mov
push
cmp
jecxz
or
popa
xor
iret
add
ret
pop
push
dec
sbb
popf
insb
rolb
and
aam
loop
loope
lahf
sahf
lock
xchg
movsb
jns
lock
cli
rclb
dec
push
sbb
xor
add
sbb
cmpsl
sar
mov
mov
push
mov
cmp
cmp
adc
shl
sahf
sbb
idivb
xchg
cs
loopne
gs
lahf
inc
lahf
in
mov
rolb
add
dec
mov
stos
lods
insb
and
ret
movsb
inc
hlt
int
dec
pushf
ret
sahf
cmpsl
out
stc
mov
push
ds
aad
imul
fcoms
or
fbld
jno
jle
sbb
jno
into
out
or
push
aaa
out
add
push
mov
mov
lods
jmp
mov
lds
mov
jecxz
imul
loopne
push
xchg
sub
ret
pop
cli
sbb
sahf
mov
lret
sbb
into
dec
add
sti
ds
imul
inc
aam
xchg
nop
inc
fucomp
jge
lcall
pop
jbe
lret
pop
xor
xchg
push
ss
or
ret
hlt
sbb
pop
lret
js
mov
jge
or
inc
orl
and
jbe
mov
inc
adc
movsb
cmpsl
mov
or
push
sub
xchg
mov
shrl
rol
sahf
add
aam
divb
js
ret
enter
loope
xor
mov
fldcw
addr16
clc
and
mov
push
push
push
push
clc
loope
daa
jl
sbb
psrlq
adc
in
mov
add
xor
fwait
pop
hlt
push
sbb
push
cld
sub
loop
rcrl
aam
mov
je
or
adc
sbb
sub
loopne
inc
adc
push
aad
aad
xorb
loopne
aas
pop
push
fcoml
scas
push
xchg
xor
push
mov
inc
adc
js
jne
call
lcall
in
sarb
mov
pusha
cltd
div
push
jne
xchg
pusha
movsb
movsl
cmp
pop
int
pop
int3
std
out
popa
and
and
insl
mov
xor
stos
pusha
imul
inc
mov
add
fs
into
add
inc
jl
pusha
cltd
es
cmpsb
mov
sub
inc
aaa
pusha
pop
mov
lock
jo
popf
loop
sbbb
push
dec
fmul
add
imul
and
jae
jno
fiadds
xor
xchg
mov
cld
mov
adc
xor
popa
push
add
xor
mov
mov
stc
in
sub
sbb
cmp
sbb
aad
cmp
arpl
mov
outsl
loopne
sbb
jbe
jno
push
shll
jecxz
jge
cmp
cli
pusha
sbb
jo
jae
cmp
fs
movsl
cwtl
out
lods
push
push
push
test
clc
inc
addr16
mov
enter
mov
jg
std
std
sar
jnp
adc
fs
pop
push
aam
jecxz
and
out
mov
sbb
jae
push
adc
xor
sarl
out
add
mov
mov
dec
adc
mov
pusha
outsb
fstl
sub
dec
inc
sbb
xchg
mov
xchg
or
shl
or
pusha
shlb
mov
andl
adc
loopne
jmp
sbb
lahf
daa
add
stos
pop
pop
lret
push
pusha
adc
mov
mov
pop
clc
xor
dec
pusha
ljmp
push
pusha
mov
test
movsl
pusha
popa
ret
out
lahf
or
pusha
cmpsl
daa
cmpsb
les
pop
inc
pusha
rolb
out
lcall
pusha
scas
xchg
xor
push
xchg
mov
cmpsl
cmp
add
mov
mov
dec
sub
ja
repnz
sar
mov
enter
mov
pop
repz
adc
jg
sub
cmc
add
dec
fimull
pusha
sub
sub
jp
pop
enter
mov
xor
lea
fistpl
in
mov
cmp
xchg
dec
fistpl
cmp
and
pusha
sub
int3
xor
mov
and
je
lahf
rcrl
fwait
popa
ds
xor
sbb
rclb
push
cmp
faddp
push
xchg
mov
pusha
jmp
movsl
fidivl
fs
xor
sbb
pop
add
ret
lret
push
mov
mov
in
pop
lock
pusha
jnp
push
hlt
dec
das
jne
pop
movsb
je
sbb
mov
mov
push
jl
xchg
sbb
out
cmpb
add
pusha
cmp
ss
loop
pusha
sbb
icebp
aam
or
jb
or
pusha
fsts
ja
test
mov
int
jo
out
es
pusha
arpl
jb
xchg
pop
leave
dec
and
push
rclb
push
push
aas
loopne
rcll
pusha
xchg
fwait
cmp
sbb
ror
sbb
or
adc
loopne
add
sub
jg
sbb
movsb
adc
inc
and
call
push
insb
aam
sub
mov
inc
outsb
test
adc
and
bound
xor
pusha
pop
out
xchg
push
mov
lock
inc
sahf
and
push
inc
mov
pop
dec
sub
push
pop
mov
sub
cli
xchg
arpl
sbb
add
jecxz
lock
pusha
insb
pop
fcmovb
fsin
outsb
dec
pusha
lcall
add
sahf
and
or
jno
pusha
pop
and
xchg
push
std
push
or
ret
shrl
out
fbstp
jmp
mov
sub
inc
cmp
pusha
outsl
pop
cmc
loopne
sarb
insb
or
pop
mov
lods
jl
je
push
add
dec
push
and
stos
or
cmp
pop
mov
rol
pusha
loope
adc
sbb
fs
mov
or
and
mov
ss
popf
rol
dec
fisttpll
cmc
addr16
adc
and
mov
mov
icebp
bswap
mov
scas
or
rcr
lods
je
cmp
movsl
add
popa
ss
clc
push
iret
sub
dec
cmp
lods
ds
outsb
aad
mov
mov
mov
mov
push
add
cmc
popa
loop
lret
insb
leave
jmp
pusha
cmp
adc
ss
push
fisubs
mov
push
add
je
std
inc
test
stos
add
add
sub
mov
loopne
jb
outsl
jns
push
add
push
test
sub
loop
setge
pusha
and
push
in
nop
xlat
mov
shlb
adc
pusha
ret
fstpl
jmp
mov
lret
gs
rcl
jl
insb
adc
pop
mov
xchg
xlat
gs
adc
test
jmp
and
pusha
shlb
mov
sbb
stos
sbb
popa
lock
divl
repnz
dec
out
xchg
jno
mov
xor
sti
adc
mov
ja
jle
mov
bound
scas
pusha
call
sub
jno
lea
mov
int
mov
inc
add
popf
imul
jmp
add
pusha
and
popf
push
pusha
pop
mov
mov
inc
cwtl
or
ror
jmp
xchg
mov
es
xchg
fwait
push
popa
test
imul
sbb
push
ret
jecxz
push
push
insb
mov
bound
adc
bound
cld
lahf
inc
repnz
jle
pusha
fs
out
test
adc
inc
and
cmpsl
outsb
cwtl
js
cltd
sbb
mov
fs
pop
daa
pop
cld
shlb
adc
idivl
pusha
enter
aam
jnp
pusha
and
neg
shll
pushf
sahf
sbb
pop
push
dec
mov
pusha
sub
dec
ljmp
sub
shll
push
outsl
arpl
mov
scas
stos
lods
ja
hlt
mov
and
daa
bound
ss
cwtl
push
ljmp
dec
stc
cmp
std
jno
pusha
push
lods
lods
pop
pop
dec
pusha
insl
xor
mov
pusha
and
cwtl
int3
jbe
sbb
popf
pusha
aas
sbb
stos
mov
cltd
clc
incb
sub
sbb
into
jmp
push
out
mov
lret
or
js
sub
mov
mov
sub
and
xchg
xchg
sbb
sbb
call
stc
scas
arpl
or
in
jl
mov
in
loope
leave
xor
mov
add
mov
mull
out
scas
mov
sbb
test
or
xchg
mov
popa
incl
out
repz
pusha
xor
repnz
dec
ficoms
bound
fldenv
fdivrl
add
addr16
adc
push
repz
inc
in
mov
and
mov
fcoml
jo
sub
dec
sbb
push
dec
pusha
cwtl
mov
orl
rcrl
pop
hlt
aam
fmul
out
sbb
lret
ljmp
jl
and
dec
pusha
enter
mov
mov
insb
adcb
out
iret
inc
in
push
cmpsb
mov
sahf
sbb
bound
je
mov
xor
jbe
jg
xchg
aad
and
jp
sub
sti
mov
out
push
rcrb
xchg
arpl
or
arpl
xor
jb
inc
fs
and
dec
lds
mov
lret
in
fs
xchg
fs
jle
jb
leave
stc
lods
xchg
adc
les
ds
shll
js
dec
data16
or
stos
jmp
dec
mov
arpl
mov
mov
cli
pusha
gs
push
jmp
sbb
pusha
inc
rol
mov
pusha
sub
pop
mov
into
dec
in
scas
or
pusha
sbb
and
jl
popf
ficompl
sbb
stos
sbb
jb
push
xchg
into
in
aam
dec
leave
inc
mov
inc
cmp
adc
xor
out
or
rorl
std
ds
and
pop
xchg
jnp
or
inc
clc
dec
push
andb
fwait
lahf
pushf
add
sub
add
mov
push
jae
mov
xchg
pop
fadd
dec
xor
loopne
cltd
ljmp
je
add
je
out
xlat
xchg
jns
cwtl
sub
fadd
clc
loope
mov
pop
daa
loop
je
xor
mov
push
shlb
fildl
fwait
fwait
dec
inc
stc
push
rolb
mov
add
sub
jmp
stos
sbb
push
rcl
outsb
mov
xchg
lods
std
insl
es
js
xor
inc
xor
testb
movsb
inc
out
ss
ret
and
mov
psubsw
inc
mov
and
dec
pop
and
movsb
jmp
ds
sub
adc
pop
lods
push
stos
loopne
faddl
out
xchg
xchg
and
or
sub
arpl
jecxz
xchg
ss
jnp
icebp
mov
jae
loope
arpl
loope
ret
and
out
inc
push
out
jbe
loop
lea
hlt
lahf
pop
sbb
jle
xor
pop
nop
and
pop
cld
cmp
sahf
inc
xchg
repnz
inc
inc
shrb
mov
jb
arpl
ja
testb
pusha
pop
shll
adc
loop
and
bound
sbb
fadds
adc
add
xorl
add
adc
ret
cmp
cmpb
xlat
fisubrs
and
notl
dec
add
loop
jmp
pop
jb
lret
push
sti
loope
add
adc
pusha
rolb
lock
pop
mull
adc
cmpsl
add
add
pusha
jne
sbb
insb
nop
dec
nop
sbb
frstor
dec
ds
fidivrs
mov
mov
insb
xchg
test
and
data16
pop
cmp
in
add
pusha
add
push
mov
jmp
dec
iret
sub
das
pop
pusha
sti
test
fidivrl
pusha
jle
popf
paddsw
lea
mov
bound
jg
pop
insb
push
test
jae
ret
jmp
loope
adc
mov
and
mov
xchg
add
je
jo
inc
in
inc
int3
sbb
pop
enter
jbe
popa
mov
aas
sub
je
inc
and
std
jle
stos
pusha
in
imul
dec
jl
popa
arpl
aaa
arpl
sub
scas
cmp
xchg
icebp
pusha
stos
mov
and
push
pusha
push
xor
and
fs
pop
adc
xchg
pusha
adc
pushf
sub
bound
jmp
nop
sahf
in
push
push
test
mov
mov
mov
jmp
test
dec
pusha
sub
pop
lods
dec
pop
nop
pusha
mov
aam
imul
popa
lcall
push
add
pushf
mov
jns
loope
push
and
push
shlb
out
pusha
push
xchg
subb
lock
outsb
int3
push
daa
mov
js
inc
jmp
jecxz
cwtl
ljmp
insb
hlt
pop
ret
dec
loop
sbb
inc
shl
adc
jne
cmp
aaa
and
cld
jge
jbe
repz
jae
stos
adc
int3
xchg
lds
insl
or
std
pop
lock
mov
jecxz
mov
insb
enter
fldcw
or
loope
mov
gs
hlt
div
push
lds
insl
sbb
xor
mov
into
or
pusha
mov
imul
imul
fs
push
fistpl
roll
cli
in
jmp
jbe
test
lods
xor
push
not
test
cltd
mov
insb
iret
jg
mov
loope
mov
push
pop
enter
arpl
cltd
mov
pusha
dec
sbb
mov
sub
xchg
popf
pusha
pop
push
xor
push
insb
fldenv
xor
and
xor
frstor
mov
and
jecxz
test
bound
outsb
js
lret
fistl
fisubrl
shll
jae
cmpsl
rolb
adc
mov
pusha
mov
out
and
in
pusha
jbe
jo
mov
fstps
insb
sbb
mov
mov
xor
inc
and
notl
lods
lcall
aam
cld
cmp
push
jl
xchg
shll
sbb
test
ds
push
xor
cmc
mov
adc
arpl
dec
jno
jnp
adc
shll
arpl
insl
lods
nop
pop
aad
mov
dec
pop
jl
mov
sub
loope
jmp
cmp
mov
pop
jge
jecxz
ret
xor
pusha
in
xchg
jl
cwtl
repz
mov
mov
pop
xorl
mov
rorl
adc
scas
jl
pop
popf
xchg
pop
fmulp
mov
bound
mov
das
out
aaa
pop
sub
xor
mov
pushf
pusha
cwtl
mov
jl
add
repz
pusha
out
loopne
lods
cmp
xor
and
pop
inc
mov
sub
jo
and
int
sbb
cmpb
shrb
jle
adcb
mov
lcall
sbb
sbb
jns
pusha
jne
das
xchg
xor
jmp
mov
jg
mov
lahf
pop
pop
or
and
hlt
mov
mov
xchg
scas
cmp
mov
pusha
mov
pop
pushf
push
pusha
push
icebp
aam
mov
test
stos
adc
ja
fsubs
rolb
jecxz
fucom
dec
push
idivl
jg
rol
pop
pusha
or
push
lret
mov
ret
adc
notb
dec
jle
fsubrp
cli
dec
mov
mov
adc
pusha
jbe
xor
sub
out
mov
adc
dec
mov
mov
clc
add
cwtl
xchg
shl
inc
pusha
pop
push
test
cmpsb
idiv
add
cmp
push
cmp
xchg
dec
add
jae
mov
clc
mov
jns
jmp
lods
int
mov
or
sahf
add
inc
mov
stc
xor
xchg
xchg
fs
cli
adc
push
mov
mov
lret
jbe
jnp
cli
lods
hlt
imul
mov
bound
inc
repnz
sbb
lea
xchg
notb
jl
popa
xor
adc
loopne
cmp
clc
jbe
mov
cmc
pusha
push
in
pop
int3
das
dec
popf
push
jecxz
push
popa
bound
hlt
sbb
push
fwait
inc
imul
mov
rcll
orl
outsl
mov
pusha
and
fdivl
fisubrs
iret
stos
dec
push
adc
and
in
and
pop
pop
mov
cld
outsl
sub
ret
mov
in
xor
test
cmp
jnp
xorb
je
xor
cmp
jg
clc
aad
cmp
fwait
pop
cmp
popa
xor
cli
lahf
xorl
aam
add
inc
pop
sbb
sub
push
stc
dec
inc
lods
inc
pusha
shl
dec
aam
or
push
cmpsl
cmpb
pusha
ret
jecxz
stos
repnz
in
les
mov
xchg
pusha
jb
and
loop
mov
jle
mov
xchg
shll
in
testb
or
dec
push
push
dec
fwait
loope
shrb
or
xchg
mov
ficoms
or
lock
mov
sbb
fcompl
insb
jl
inc
test
movsb
aad
sbb
mov
or
sbb
test
mov
pusha
jno
sti
fisubl
stos
mov
jns
rclb
imul
push
rcll
xchg
fstpt
mov
pusha
adc
xchg
insl
pusha
push
xchg
adc
mov
pushf
sub
mov
loope
mov
jne
pusha
xlat
lahf
test
cmp
outsb
fs
mov
jae
imul
movsb
ss
cmpl
shl
pusha
movsl
out
jo
adc
push
insb
hlt
jns
push
es
bound
out
rcrb
rol
pusha
mov
cs
icebp
jb
int
jns
xrelease
jle
jl
scas
mov
sub
pop
xchg
inc
xor
fs
sub
test
jle
loopne
movsb
push
fmulp
out
mov
jmp
ljmp
sarl
lock
pop
pusha
mov
iret
xchg
es
pop
jbe
pop
or
or
clc
lock
pop
arpl
and
cmpsb
mov
dec
pusha
jns
loopne
fisubrl
xorb
mov
mov
mov
xchg
jl
dec
or
pop
cld
int3
add
in
mov
sub
xchg
call
or
mov
data16
mov
repz
daa
jl
mov
stos
pop
hlt
xor
or
ret
xor
mov
pop
dec
sub
or
popa
pushf
xchg
jne
xchg
or
adc
fadd
xchg
mov
mov
mov
and
sti
repz
div
xchg
sbbb
fwait
stos
dec
arpl
aad
pop
fldenv
scas
sub
sbb
pusha
jle
jno
and
jl
inc
push
les
jne
hlt
push
pusha
xor
sub
sbb
xchg
aas
inc
mov
xor
stos
dec
loope
addr16
pusha
lcall
out
pusha
cld
aas
push
inc
dec
sti
cltd
mov
repz
insl
pusha
push
fcomps
pusha
addr16
cmc
fistps
pusha
mov
je
subl
in
jbe
jmp
repz
pusha
add
js
mov
or
jmp
cmpl
or
pop
pusha
mov
cli
mov
out
push
and
mov
jmp
fisubs
shlb
lds
mov
stos
mov
cmp
adc
xchg
jl
lods
push
test
aaa
int
rclb
pop
jns
adc
popa
idivb
sub
dec
es
jo
mov
inc
adc
dec
mov
jg
mov
jl
adc
inc
lret
and
pop
and
outsb
xor
jo
lahf
nop
pusha
sub
insb
mov
pusha
add
loopne
int
pushf
and
test
cmp
xor
in
ljmp
testb
repz
pusha
sub
lods
aad
in
pop
fs
lahf
or
je
xor
not
rol
repz
cmp
out
pusha
cld
dec
out
mov
movsb
cmp
sub
iret
pusha
inc
cmp
or
ficomps
nop
pusha
repz
and
xor
mov
add
pusha
push
fisttps
pushaw
add
pop
pop
mov
fldcw
jns
cmp
pusha
pop
add
cmp
mov
pusha
mov
inc
lret
bound
cmp
cmp
movsl
dec
pushf
stos
cmp
or
sub
outsb
ficoms
push
inc
loop
mov
push
jae
arpl
sbb
pusha
cmp
loope
mov
pop
in
and
pusha
leave
outsb
mov
fwait
pop
pop
lods
push
imul
call
jae
mov
out
les
test
sbb
aam
out
test
and
outsl
jno
jecxz
fiadds
pusha
scas
mov
insl
mov
int
cmp
jbe
and
pusha
les
lock
sahf
mov
or
mull
mov
mov
ret
arpl
jle
repz
test
and
xchg
aas
mov
into
enter
test
sbb
aas
mov
rcl
popa
je
imul
adc
icebp
leave
test
ja
jge
xor
fcomps
xchg
sti
call
inc
mov
movsl
dec
and
punpckldq
adc
rcrb
cwtl
rolb
daa
jmp
pop
outsl
dec
arpl
mov
jl
pop
lds
or
cld
sub
fdivr
ret
adc
pusha
push
callw
aaa
push
pusha
sub
jmp
and
mov
mov
insb
out
add
mov
popf
inc
and
sub
mulb
mov
cs
inc
fs
adc
jae
pop
pusha
jl
inc
add
sbb
jmp
cwtl
lcall
aam
mov
lds
insl
pusha
lahf
xchg
imulb
pusha
ljmp
arpl
dec
pusha
popa
push
xchg
inc
push
fidivrl
jge
cmc
dec
sub
cmp
lods
dec
push
jnp
ds
cmpsb
cli
xchg
jge
andb
xchg
mov
dec
shlb
cltd
or
sbb
out
popa
jnp
jne
fwait
aaa
fstps
clc
adc
jl
mov
mov
loop
pusha
xor
sti
cmpsl
xlat
xchg
bound
sbb
adc
sub
jno
push
jne
xor
rclb
xor
ljmp
test
push
int3
arpl
adc
mov
inc
lahf
iret
shll
or
insl
adc
call
ds
pusha
xor
out
sub
sbb
pop
cmpsl
push
loop
lret
pusha
sub
int3
cmp
mov
pop
les
outsb
sub
bound
and
jmp
insb
jmp
movsl
loopne,pn
inc
dec
or
scas
iret
pop
js
andb
ja
dec
push
test
push
cmp
testb
add
and
mov
mov
jae
sti
or
sbb
sub
insb
push
mov
dec
cmp
bound
pop
inc
or
fcom
and
pusha
jl
test
cmpsl
aad
pusha
jo
das
adc
or
xor
jg
arpl
loop
pusha
fsubl
xchg
pusha
xchg
add
cmpsb
pusha
pop
sbb
pop
aad
mov
sub
fs
adc
enter
lods
lods
pusha
lock
pusha
jb
aas
cmp
lret
ficompl
sub
in
jo
lods
aas
movsb
stos
cmpsl
pusha
js
and
add
mov
flds
inc
mov
nop
insb
retw
sbb
jl
pusha
push
insl
lods
outsb
xor
test
or
add
scas
pushf
pop
add
adcl
bound
pusha
int3
mov
insb
pusha
pushl
mov
repnz
cmpsl
sub
xchg
in
iret
std
pop
dec
push
mov
xor
sub
aas
imul
loopne
enter
mov
sti
mov
xchg
lock
fs
mov
sub
pusha
dec
push
xchg
jae
mov
and
lea
scas
pop
push
clc
ficomps
gs
cmp
ret
jg
xchg
cmpsb
mov
jne
cmc
pop
imul
xlat
cs
sub
sbb
stos
push
cwtl
cli
lahf
pusha
js
outsb
or
mov
icebp
dec
imul
pop
jl
shlb
sbb
or
adc
and
jnp
cmp
or
das
stos
mov
xor
pusha
clc
cmp
jg
insb
sahf
add
xchg
in
test
cwtl
pusha
sub
fisttpll
stos
xchg
xlat
aaa
add
xchg
cmpsl
mov
sbb
cmp
sbb
incb
xlat
adc
mov
pop
loope
push
pusha
loop
scas
pop
sbb
mov
xchg
ja
daa
aad
lahf
jns
int
xchg
mov
dec
pop
shl
fucomip
or
adc
shlb
cli
pop
shll
ds
mov
xchg
sub
jo
stos
pusha
add
push
add
lods
cmp
insb
sbb
out
inc
and
fs
cmp
push
nop
add
adc
iret
jl
mov
and
test
fs
dec
lock
es
push
sbb
shr
fmull
pop
fisubrs
inc
mov
pusha
sbb
test
int
xchg
inc
scas
xchg
fdivrp
cld
mov
adc
icebp
insb
lods
dec
data16
xchg
jl
lods
icebp
pop
outsb
pop
clc
jno
incl
push
jl
cmp
leave
cmp
test
pop
or
pusha
pushf
add
push
add
jp
rcl
mov
sbbl
iret
mov
outsl
ss
jne
ret
mov
xchg
or
mov
popf
mov
adc
pushf
and
ret
aam
xor
insl
cld
sub
add
dec
adc
das
iret
push
std
jnp
jl
add
pop
loopne
add
xchg
mov
lea
sub
test
jge
arpl
test
shlb
jno
popa
jo
add
jmp
xchg
sbb
push
cmp
mov
mov
pusha
mov
xchg
add
sub
xor
mov
ret
iret
mov
xorl
adc
sub
in
aas
xchg
cmpsl
fcomi
pop
jle
aam
mov
pusha
mov
js
add
push
aaa
mov
test
insb
mov
push
insb
dec
and
mov
in
jmp
xchg
nop
push
pusha
ret
mov
push
xchg
mov
pusha
push
sbb
mov
insb
int
cmp
sub
jp
fmuls
aad
hlt
imul
mov
ja
int
pusha
mov
and
addr16
jo
ss
mov
and
cmp
shll
mov
and
das
inc
outsl
dec
xchg
pushf
adc
int
mov
iret
mov
sub
adc
pop
cs
fwait
loopne
ret
stc
daa
fbld
lret
pop
dec
loopne
mov
xchg
cmp
sub
popa
dec
stos
and
das
adcl
out
pushf
addr16
pop
int
mov
sbb
adc
sub
and
pop
push
fistpl
sahf
ret
xchg
mov
addr16
mov
push
addr16
rcll
pop
arpl
inc
and
dec
out
and
aam
xchg
cltd
and
je
addr16
jnp
push
mov
jl
jmp
add
data16
dec
jnp
aaa
pop
popa
shll
loopne
mov
xor
adc
xchg
inc
jnp
imul
fnstenv
mov
inc
and
jecxz
pusha
or
and
dec
or
repnz
jae
fs
je
jl
and
mov
fwait
das
popf
mov
repnz
inc
add
sub
add
lea
push
mov
cmp
inc
xor
push
ds
xor
andl
jle
cmc
xchg
arpl
ret
cmp
fistpl
dec
mov
sub
adc
jecxz
mov
inc
ss
cli
sub
and
dec
inc
mov
negl
ja
dec
test
pop
push
mov
out
mov
mov
popf
sti
or
push
incb
push
jle
ror
dec
xor
push
ja
pop
insb
mov
jp
dec
ret
test
xchg
pop
ljmp
and
dec
jmp
ljmp
push
jb
bound
dec
mov
add
and
sti
or
push
in
mov
lods
in
and
cmp
les
dec
mov
jnp
es
cltd
sarb
aaa
negl
dec
pop
outsl
mov
jne
inc
or
in
cmpsl
inc
addr16
mov
xchg
pop
mov
mov
or
daa
push
inc
andl
mov
mov
inc
repz
jmp
xchg
out
mov
insb
xchg
sbb
daa
sbb
fisubs
fwait
pop
jp
cmp
pusha
mov
or
hlt
pusha
pop
jns
mov
and
cld
mov
enter
sbb
lret
loop
ds
pusha
out
add
adc
xor
adc
je
in
pusha
data16
add
imul
fstpl
enter
pusha
push
pop
bound
push
add
bound
inc
test
loopne
fcmovb
jge
fcom
pop
and
scas
add
cmpsb
pushaw
push
jnp
xor
movsl
std
pusha
sahf
lock
mov
fstps
sbb
movsb
push
leave
push
jl
xlat
mov
jo
arpl
repnz
rclb
call
cmpsb
dec
insl
clc
loopne
hlt
xor
inc
ret
push
ljmp
pop
and
data16
xchg
arpl
sub
mov
adcl
or
jg
pusha
icebp
enter
jecxz
pushw
add
xchg
imul
mov
fisttpll
pop
icebp
add
rclb
pop
gs
push
dec
cld
jecxz
add
test
popf
push
cmp
std
cmp
pusha
in
mov
lahf
addl
or
out
out
xabort
pusha
xor
ds
jle
repz
hlt
cmp
cmp
aas
and
xchg
sbb
sbb
jae
adc
repz
jbe
popa
sub
roll
push
gs
adc
push
mov
or
push
or
loop
lcall
ret
adcb
aad
sbb
jne
jecxz
pop
inc
pop
enter
adcb
outsb
pop
mov
das
mov
decb
pop
ds
rcrl
push
push
add
bound
imul
popf
fdivr
add
sub
pop
jl
test
and
shr
mov
arpl
mov
js
rcrl
mov
shrb
loope
shll
or
mov
mov
xchg
cmp
pop
mov
lcall
mov
sbb
out
sub
ret
gs
fcoml
outsb
mov
sbb
pop
rcrl
sahf
dec
inc
jae
sub
fucompp
cmovno
sarl
xchg
loopne
mov
ret
lods
popa
xchg
out
inc
loop
or
mov
cwtl
lds
cld
bswap
nop
pop
mov
rcrl
jle
inc
test
shl
cmp
imul
xchg
jo
or
xchg
add
cld
cmp
aaa
dec
lret
in
xchg
cmp
das
pop
cmp
add
fbld
push
inc
dec
bound
lds
mov
jnp
mov
add
mov
ret
dec
add
imul
push
lcall
rorb
cmc
cmp
dec
test
push
jnp
mov
std
push
dec
inc
add
sbb
inc
inc
shlb
movsb
gs
lds
in
notl
pusha
xlat
aaa
addr16
cmpsl
push
hlt
pusha
mov
cmovno
mov
lds
and
mov
outsb
add
xor
inc
xor
pusha
out
pop
stos
mov
pusha
sbb
xchg
and
jge
pusha
cmp
dec
sti
or
pop
pusha
inc
test
cli
cwtl
push
jl
mov
ljmp
rclb
sub
out
imul
jge
rolb
cmpb
and
test
xor
xchg
std
sub
neg
pusha
loope
and
dec
xchg
push
xlat
cmc
mov
and
insb
jle
inc
cltd
test
cld
or
pop
and
out
mov
or
mov
sub
mov
stos
mov
pop
cmp
xor
scas
lock
outsb
sbb
and
pusha
aam
xor
xor
pop
arpl
mov
pop
out
in
mov
pop
outsl
cmp
xchg
vmwrite
inc
sbb
test
stc
insb
jmp
movsb
je
repnz
pop
pusha
lock
daa
mov
pusha
inc
push
lcall
call
out
mov
push
inc
pusha
and
jg
int
fisubrl
hlt
mov
and
sbb
cmp
inc
roll
and
sbb
hlt
xchg
sbb
push
andl
or
pusha
out
mov
pusha
inc
jno
outsb
mov
push
adc
arpl
adc
jge
pusha
mov
cmc
cld
movsl
repz
xorb
loopne
shrl
popa
pop
cmp
std
pop
mov
fs
scas
out
loope
xchg
fmull
sub
cmp
adcl
aas
lock
lret
xchg
pusha
insl
xchg
ja
xchg
rolb
sub
fldcw
sbb
lahf
fbld
mov
or
pop
rcrl
jp
mov
inc
adc
pop
add
lcall
int3
add
xor
nop
sbb
in
mov
int3
std
test
xor
sbbb
adc
pusha
cmpsl
rcrl
jo
rcrb
pusha
xchg
xlat
aad
sub
jg
pusha
add
shll
mov
ret
lret
sbb
pop
pop
push
je
in
pusha
lahf
mov
xlat
mull
loopne
repnz
stos
pusha
mov
subl
ss
mov
cmovbe
sbb
outsb
and
loopne
push
mov
push
xchg
mov
in
pusha
sbb
sbb
decl
out
mov
jae
and
dec
mov
bound
or
mov
repz
ret
jno
dec
leave
scas
adc
sub
push
jl
lret
fidivs
and
insb
xor
add
movsl
jg
nop
xor
cmp
aad
mov
jbe
mov
mov
jns
pusha
into
arpl
cmp
out
outsl
pusha
jl
nop
mov
sub
inc
inc
or
pop
lods
arpl
xor
or
push
cmp
pop
pusha
cmc
lret
sbb
sub
sbbl
pusha
push
ljmp
pusha
xchg
adc
cwtl
repnz
je
gs
ss
outsb
aam
add
hlt
mov
add
cs
mov
out
aad
sub
inc
ds
incl
xchg
and
pop
in
ss
cs
inc
cld
dec
in
cmp
fimuls
sbb
xchg
shlb
adc
imul
cltd
adc
pop
aas
ret
int
out
push
fimull
dec
mov
test
mov
mov
push
sub
push
push
adc
js
sub
enter
inc
jmp
test
adc
outsl
push
cmp
shl
in
xchg
mov
into
push
sahf
stc
lret
fimuls
inc
cltd
jle
adc
pop
inc
push
data16
pop
adc
lds
adc
aaa
dec
lahf
call
pop
push
push
jbe
dec
enter
sub
das
js
fbld
sub
pusha
push
add
and
xchg
insb
xor
aaa
lds
xchg
stos
pop
pop
mov
jo
shrl
jl,pt
mov
cmpsl
inc
xchg
cmp
adc
cld
ret
addr16
enter
stos
sbb
mov
jl
inc
cmpsl
sbb
sbb
mov
adc
add
push
repnz
inc
fcmovu
mov
inc
iret
jb
pop
and
imull
xor
xor
and
adc
sub
xchg
and
dec
daa
mov
jbe
mov
ja
add
xchg
test
loop
outsl
add
add
popl
xor
add
and
xchg
mov
shll
sbb
scas
mov
inc
mov
leave
fucomp
test
push
pop
pop
push
mov
adcl
xchg
sbb
jmp
sbb
jns
fcomip
dec
lea
and
inc
push
xchg
cmpsb
aam
ljmp
cmc
pop
in
movsb
int
dec
lock
ret
enter
dec
shrb
xchg
stos
lcall
jmp
mov
mov
data16
aas
mov
imul
movl
pop
mov
cmp
add
pop
lahf
mov
insb
mov
inc
mov
sub
iret
pop
sbb
rcrb
mov
cmp
lods
sbb
popa
andl
jg
stos
mov
mov
sarb
adc
insb
or
les
xchg
xchg
or
and
loop
and
mov
push
cmp
ljmp
xor
lock
adc
jecxz
mov
sahf
xor
fildll
pusha
lock
fisttpl
sub
mov
xchg
ret
push
mov
aam
mov
into
js
xchg
add
mov
push
shlb
add
jg
xchg
and
adc
loope
mov
mov
fnstsw
xorb
ret
pusha
loop
xor
lds
inc
jno
loop
jnp
divl
imul
push
mov
shlb
xor
xor
adc
loopne
arpl
shlb
push
jae
mov
in
loop
sub
pusha
movsl
movzwl
jl
inc
roll
gs
ficoml
inc
xchg
mov
jge
mov
jnp
jl
test
or
or
iret
mov
add
insb
and
push
dec
or
fs
fnstenv
enter
mov
pusha
ret
xchg
scas
in
dec
pop
fmull
clc
movsl
scas
xchg
fs
shrl
arpl
pop
js
mov
jno
lahf
mov
mov
jae
cs
sti
xchg
inc
push
jl
cmp
mov
incb
pop
hlt
into
pusha
jae
add
add
or
xchg
jecxz
mov
pusha
imul
push
xchg
push
push
or
out
cld
pusha
add
mov
repnz
mov
pop
jle
bound
and
mov
leave
movups
mov
jmp
xchg
inc
sti
pusha
mov
in
jg
pop
inc
cwtl
insb
or
hlt
ss
adc
adc
lahf
dec
sarl
cwtl
cmp
fcoms
insb
cmpsl
int
mov
fldl
add
xchg
and
push
movsl
xchg
mov
pusha
loope
mov
xor
fwait
movsb
in
ret
add
shll
popa
je
les
lock
mov
mov
cs
jl
rcrb
pusha
xchg
lahf
insb
jno
mov
xor
nop
arpl
ret
mov
pop
into
add
loop
lods
xor
jl
mov
lcall
adc
cwtl
fs
shlb
xlat
cmpps
mov
inc
cmpsb
xor
dec
pop
mov
lods
pop
mull
pusha
popa
cmp
and
stos
adc
and
push
mov
sub
mov
pusha
push
add
xchg
int3
jno
jmp
cmp
cltd
inc
lahf
popf
mov
test
add
shlb
dec
inc
mov
xor
mov
cs
pusha
mov
mov
stc
insb
push
inc
jns
lret
sbb
push
mov
mov
insb
jp
ret
repz
stos
xor
sub
stc
loope
and
scas
rcrb
imul
ret
je
leave
sbb
jecxz
pop
fisubs
sarb
addr16
dec
ret
and
stc
jae
cmp
mov
test
dec
push
jecxz
mov
sbb
jo
int3
in
test
xor
xor
and
stos
mov
sbb
fisubrl
and
dec
dec
sub
mov
mov
loop
mov
ret
sub
jmp
mov
cmp
sarb
pop
lahf
loopne
popa
rcll
xor
inc
jb
fcoml
pop
movsb
popa
cmp
cmp
out
ds
insb
cltd
inc
dec
push
ss
imul
fwait
in
ret
adc
push
mov
mov
inc
dec
xchg
push
mov
and
mov
and
jo
test
lahf
add
das
inc
xchg
dec
repz
inc
std
popa
mov
add
pop
mov
aaa
iret
xchg
mov
inc
shrl
and
pusha
in
ret
xchg
xchg
and
jno
fsubrs
dec
push
sbb
add
faddl
sbb
imul
mov
imul
mov
rolb
add
mov
xchg
cmp
xlat
adc
mov
jmp
push
dec
push
ret
adc
mov
mov
lods
jecxz
push
mov
push
push
dec
sbb
aad
xchg
jl
push
stos
in
rclb
in
mov
imulb
adc
inc
xor
fsubs
and
fsubl
mov
cwtl
xchg
adc
popf
imul
testl
add
push
data16
sub
pusha
mov
aas
orb
rorb
pop
xor
out
stos
movsbl
fucomip
mov
sub
int3
outsl
mov
fbstp
sbb
jmp
sub
dec
test
cmp
cmp
sahf
cmc
dec
cmpsb
ds
sbb
rorl
lds
xor
cltd
mov
fistl
lahf
dec
loop
sti
jae
xchg
push
loop
cmpsb
popf
sbb
rcr
xchg
js
cmp
lods
insb
rolb
rorl
xchg
out
cmp
jb
xor
pusha
push
pop
mov
dec
movsb
pusha
push
pop
aaa
xchg
cmp
pop
push
pop
inc
and
popf
loope
pusha
xorl
paddusb
cmp
lahf
pusha
cs
fs
xor
inc
incb
mov
sub
jne
rolb
pusha
rcrl
add
inc
jp
jo
dec
cmp
push
lret
add
pushf
push
outsb
xchg
pop
xor
cmp
stc
pusha
jmp
mov
or
xchg
pusha
mov
sbb
sahf
pop
or
sbbb
in
pushl
fimull
xchg
and
and
jle
push
and
mov
fs
jo
arpl
cmp
pop
cmp
pop
bound
int3
in
pusha
cmp
out
and
push
or
xchg
jecxz
lds
mulb
push
ss
sbb
and
inc
mov
cmp
repnz
fiadds
push
jg
sub
repz
jl
in
push
xchg
cmp
lods
or
push
jecxz
dec
mov
sti
gs
shll
shll
sbb
push
js
jecxz
mov
adc
pop
and
pusha
pop
pop
xlat
pop
push
popf
lds
dec
into
rcr
or
xchg
pusha
push
dec
push
mov
and
data16
or
scas
jecxz
imul
and
aam
sbb
std
in
xchg
imul
ret
add
movsl
pusha
add
imull
call
int
aas
inc
xor
orl
ffree
mov
push
out
out
rol
jbe
cmpsb
pusha
ss
stc
aam
test
sub
hlt
mov
cwtl
sahf
ds
pop
ja
pusha
in
fmull
or
lcall
pusha
and
inc
cs
sub
add
scas
cmp
mov
imulb
add
mov
push
rcrl
outsl
pop
and
add
insb
cmp
mull
push
popf
ja
and
test
ret
outsl
pusha
aam
mov
jo
ljmp
pop
std
cltd
xchg
push
shll
repz
add
adc
movsb
dec
sub
pusha
fmull
pusha
or
jae
xor
add
adc
pop
imul
loop
push
mov
push
arpl
cmp
pop
ss
or
and
mov
popf
fnstsw
lret
in
add
fmull
fisubrl
jl
mov
in
movsl
sbbb
pusha
cmp
nop
loope
sbb
cld
mov
pop
pusha
gs
rclb
adc
lahf
push
pusha
push
inc
adc
and
ds
es
or
mov
or
inc
cmpsl
add
cmp
fdivs
jb
mov
pusha
cs
out
call
dec
and
mov
cmp
cmp
sbb
pop
sahf
jl
sbbb
jecxz
cmpsl
movsl
pop
and
repz
sbb
icebp
hlt
pusha
inc
pop
in
mov
aam
adc
js
loop
fcom
pop
mov
pusha
into
lret
jo
push
sub
loope
fs
jg
jmp
shll
rolb
dec
jo
aaa
fs
enter
push
popf
mov
js
ds
mov
and
mov
je
pop
sar
pusha
fcomi
lea
sub
iret
inc
rorl
sahf
sub
lcall
lods
mov
ds
out
out
shlb
dec
jo
jbe
mov
stos
stos
aaa
lds
add
push
jne
sbb
fnstsw
fists
sbb
shl
or
in
lea
stos
cld
xlat
sbb
daa
pop
sbb
stc
rcll
dec
pop
mov
jecxz
inc
mov
jge
loopne
adc
notb
mov
adc
sbb
lds
cmp
pusha
mov
xor
popa
aam
adc
dec
and
fxch
adc
pop
pusha
mov
loope
cmp
std
jecxz
lret
mov
pusha
adc
fdivs
jmp
jp
sbb
or
repz
in
out
pusha
cmp
fwait
xchg
pusha
xor
loop
and
jne
sub
mov
fdiv
test
pusha
icebp
sub
pusha
fstps
adc
pusha
mov
cmp
ss
cltd
push
es
jb
jecxz
push
push
insb
fists
mov
iret
mov
stos
dec
or
aas
cmp
add
xchg
xchg
ret
dec
sbb
pusha
and
imul
das
or
and
cmp
push
xor
xchg
xchg
jecxz
adc
aas
int3
arpl
scas
xor
cmp
fsubl
cmpsb
imul
and
push
mov
or
pusha
mov
mov
add
aaa
xchg
sbb
js
inc
pusha
xor
jb
shrl
lods
in
and
cli
fs
adc
xchg
pusha
pop
cmp
pusha
lds
xor
sbb
std
fldenv
mov
pusha
push
mov
pop
ret
je
gs
push
xchg
pusha
sub
idivb
rcll
shrl
cmpsl
mov
dec
adc
jle
xchg
fsts
add
dec
lods
nop
xor
sbb
mov
lret
jle
push
shll
jp
xor
mov
pusha
sar
push
int3
fstpl
mov
test
insb
lock
pop
pop
mov
pusha
fdivrs
xchg
jmp
mov
xchg
sub
xchg
gs
ss
or
in
xchg
dec
mov
jno
subl
pushf
xor
push
push
inc
pusha
sub
pop
inc
cmpsb
dec
mov
xchg
xor
das
fcomps
and
push
mov
or
jbe
xor
xor
jecxz
insl
pusha
lods
aas
xchg
pusha
adc
test
pusha
xchg
repz
fdivl
push
mov
es
lret
lea
xchg
nop
inc
pop
pop
xor
out
mov
loope
push
pusha
lret
les
ret
in
sub
and
jle
sub
jecxz
movsb
adc
lods
pop
jae
sbb
insb
cmpl
mov
divl
jne
dec
call
test
mov
add
mov
shll
mov
xor
and
cmpb
mov
push
pusha
punpcklwd
scas
inc
inc
lock
jle
sbbb
insb
mov
pusha
lret
cld
or
lret
mov
sub
inc
xor
pop
lcall
cld
cmpsb
in
mov
daa
sbb
inc
jnp
ljmp
pusha
xchg
mov
inc
ja
push
jns
xchg
mov
xor
xchg
push
cwtl
xchg
lret
dec
pusha
jns
mov
js
xlat
push
ret
frstor
add
fistpll
sbb
lock
out
into
scas
add
sbb
andl
xlat
fisttpll
mov
pusha
leave
cmp
push
mov
mov
pusha
xor
jo
xchg
dec
sub
bound
dec
sub
push
push
jl
jl
inc
inc
mov
fwait
jae
shll
push
fs
push
or
dec
jg
mov
mov
out
int3
mov
loopne
outsl
sbb
push
rsm
xchg
pusha
shlb
lds
pusha
xor
cmp
mov
enter
or
sbb
pusha
sub
xchg
pusha
out
push
decl
aas
mov
scas
jbe
fsubrl
adc
divb
sahf
mov
or
mov
jecxz
dec
cltd
mov
shlb
das
cld
mov
jl
sahf
push
or
mov
mov
mov
in
jp
and
add
lret
xor
in
mov
addr16
lds
sub
loope
mov
andnps
mov
jnp
adc
mov
cmpsb
jbe
pusha
push
in
inc
bound
xor
sbb
push
fs
loope
leave
cmp
xor
aaa
mov
push
cmp
mulb
rcl
or
push
mov
clc
pop
push
sub
gs
pusha
xchg
cmc
adc
jge
inc
aad
cmpsb
popa
and
sarb
cmp
and
popa
cmp
test
xchg
sub
sahf
adc
sub
sarl
nop
sbb
imul
xorl
outsl
and
and
sub
hlt
or
test
sub
jno
or
or
or
pop
testb
mov
mov
hlt
ret
in
arpl
rorl
insb
mov
iret
loope
outsb
out
sbb
mov
cmp
xchg
lods
mov
les
or
jecxz
pop
inc
ds
fs
lds
mov
in
xchg
push
pop
sahf
mov
movsl
sbb
lcall
in
inc
sub
cmp
das
rcl
dec
dec
inc
dec
jo
sub
loope
stos
jmp
adc
push
jmp
or
sbb
lret
dec
loop
roll
filds
mov
add
cs
scas
xchg
fidivs
mov
lahf
idivb
xor
ja
pusha
cmp
sbb
ds
push
mov
pusha
test
enter
fildll
lret
mov
dec
xlat
sahf
shlb
mov
and
adc
mov
mov
xor
out
fildll
roll
call
inc
dec
movsl
mov
fsubrl
inc
mov
xchg
or
jmp
adc
nop
xchg
add
mov
dec
in
cltd
insl
lret
je,pn
ret
shrb
imul
in
cmp
mov
jae
xorb
jno
ljmp
xor
inc
ret
je
mov
and
dec
adc
lret
mov
nop
arpl
call
cwtl
push
popa
jae
outsl
xchg
stc
xor
cmpsl
jno
pop
popf
les
aas
ret
xchg
insl
push
mov
repz
pusha
lcall
fs
push
and
jl
stos
ret
ret
sub
in
cld
jecxz
adc
sti
enter
popa
xor
in
loopne
pop
sbb
stc
push
jbe
je
fisubrs
jnp
ret
adc
imul
iret
insb
dec
lds
adc
and
jl
pop
cld
xor
cli
jp
iret
test
fists
jbe
fwait
cmp
loopne
bound
je
sbb
repnz
add
sahf
pusha
sub
out
insb
in
adc
ret
cmp
in
pusha
cmp
aas
mulb
jns
int
jecxz
sbb
repnz
cmp
jne
pusha
xor
sbb
sub
out
repnz
inc
pop
jmp
pop
mov
sbb
pusha
sub
scas
mov
pusha
arpl
mov
cmp
test
sub
insl
push
arpl
dec
es
mov
or
ja
int3
xchg
jbe
jle
fisubs
pop
xchg
paddusw
das
addr16
shll
andb
inc
adc
dec
jl
testb
icebp
xchg
sti
shll
mov
lods
lahf
pusha
ljmp
out
pusha
xor
daa
pop
dec
sub
xchg
and
call
ret
pusha
push
movsb
movsl
cmp
shl
sbb
js
arpl
lahf
mov
fisubl
mov
inc
pop
pusha
nop
pop
ret
and
sbb
repz
rorl
js
mov
cltd
xchg
add
xlat
and
and
jl
add
pusha
bnd
movb
jno
inc
xchg
pusha
mov
lret
mov
mov
pop
es
push
rcrl
movsb
aad
add
pusha
lods
cltd
mov
jns
adcb
cmp
mov
imul
inc
fbstp
lahf
xor
xchg
ss
mov
bound
sub
fstp
sub
dec
enter
sbb
fcmovu
xchg
sbb
mov
lods
mov
sub
jne
pusha
mov
sub
arpl
sti
or
dec
repz
cmpsb
xchg
xor
insl
les
sbb
enter
jle
imulb
push
nop
jo
cmp
dec
clc
or
xchg
sub
cs
xchg
lahf
popa
xchg
in
and
pusha
push
into
fcompl
pop
insb
xor
fimuls
dec
ss
hlt
inc
pusha
xchg
inc
sbb
push
aas
cmpsl
dec
mov
pop
jl
out
popa
sbb
and
scas
push
add
fsub
jl
push
insl
add
push
popa
push
jbe
pop
jno
pop
shlb
add
data16
mov
and
xor
out
push
add
sbb
test
loopne
mov
dec
fldcw
popf
dec
loope
in
mov
popa
movsl
fisubrs
push
aas
pop
arpl
arpl
shrb
xchg
fs
mov
pusha
in
inc
inc
into
sbb
andb
aad
aas
pop
push
pusha
or
shlw
lret
jmp
repz
push
and
or
out
mov
adc
inc
arpl
push
fcoml
mov
xchg
bound
outsb
dec
fs
push
cmp
xchg
cmpsl
mov
adc
push
gs
loop
add
xchg
adc
inc
fisubl
pushf
cmp
ljmp
int
adc
or
or
ss
loope
jmp
xchg
mul
stos
shlb
ljmp
mov
mov
int3
push
ljmp
mov
adc
fdiv
push
arpl
popa
adc
call
imul
inc
xchg
jbe
shll
leave
movsb
push
mov
xchg
test
outsl
pop
fldcw
imul
xchg
xchg
arpl
pusha
pop
jge
lods
out
xchg
jmp
pusha
xor
inc
scas
out
pusha
in
mov
ja
jae
jl
jg
movl
xchg
xlat
shll
sub
aad
js
fs
ljmp
lods
jg
aaa
lea
jno
lds
inc
je
loop
inc
in
push
sbb
cmp
movsb
ss
in
jmp
push
jmp
hlt
cwtl
mov
gs
jae
addr16
jbe
adc
in
sahf
add
icebp
mov
cmp
stos
sub
dec
shll
enter
pusha
adc
scas
cld
sub
dec
xchg
pusha
sbb
add
cs
ja
xchg
rcrb
loopne
pusha
cmpsb
outsb
mov
repz
mov
pusha
stc
jnp
push
push
rcl
add
dec
aam
xor
addl
xchg
pusha
lods
setp
aaa
ja
insb
orb
nop
ret
insb
xchg
in
cmp
inc
push
inc
sahf
sbb
xor
out
rorb
pusha
cmp
mov
popa
shll
imulb
pusha
scas
lods
and
lcall
push
and
call
nop
xchg
test
lcall
mov
popf
addb
lret
scas
insb
push
cmc
lds
jbe
mov
test
xchg
xor
adc
push
xchg
mov
rcrb
sbb
in
aaa
loop
add
pop
in
mov
lock
push
clc
sbb
pop
pop
fs
ret
lods
xor
jae
lret
fs
fldenv
scas
sub
test
pop
fcomi
addb
mov
add
lods
loope
scas
xchg
pop
pusha
sbb
cltd
xchg
push
popf
lcall
rcr
fsub
push
and
jo
popa
pusha
aam
in
xor
cli
stc
pop
sbb
add
jmp
lock
mov
pop
jbe
and
ljmp
repnz
dec
ja
cltd
psrlq
pop
stos
mov
je
push
push
imul
jl
mov
cs
pusha
ds
cmpsb
lret
push
ja
pop
add
dec
movsl
pop
popa
imul
rcrb
pushf
outsb
pusha
cltd
push
xchg
pop
sbb
pusha
cmpsl
ja
and
movsb
push
pusha
repz
test
mov
aad
or
pusha
popf
repnz
stos
dec
fcmovbe
sbb
fbld
and
mull
ljmp
jle
mov
cmc
and
inc
rclb
push
push
xor
jl
out
jmp
pusha
std
shrb
pusha
inc
inc
ds
xlat
inc
int3
mov
pop
push
in
arpl
pusha
iret
mov
dec
dec
stos
test
pusha
add
faddl
fsubrs
lret
pusha
cmp
sbb
push
jl
add
fldt
bound
dec
and
repz
ljmp
lods
jo
or
jmp
fwait
sub
xchg
add
popf
movsb
sub
pop
fs
inc
push
sbb
jecxz
fidivl
divl
lahf
bound
fisttpll
cmpsb
hlt
pusha
je
pop
pop
sbb
and
sub
xchg
inc
pusha
fidivl
xor
nop
js
fs
cld
scas
and
pusha
mov
jl
cs
jns
xchg
out
arpl
pusha
ss
pop
mov
pusha
add
andb
fisttpll
lock
shlb
jecxz
or
cmp
pusha
shl
dec
push
icebp
pusha
adc
jnp
mov
dec
loop
imul
fstpl
dec
bound
pusha
adc
mov
shlb
push
es
inc
sti
xchg
jl
pop
xor
cwtl
cmpsl
mov
add
add
pusha
mov
add
cmp
inc
pusha
inc
and
enter
imul
adc
or
dec
jo
cmp
lods
mov
pusha
cmp
sbb
sahf
pusha
nop
cmpsl
dec
xchg
mov
fildll
cmp
jnp
xor
loop
loope
movsb
dec
imul
dec
and
add
pusha
fbstp
jge
inc
pop
inc
dec
add
jecxz
push
pop
out
and
xchg
lds
daa
inc
sarb
sbb
jl
jno
and
jnp
push
mov
pusha
jns
aas
mov
sub
js
jp
popa
add
pushf
dec
inc
hlt
adc
shrl
xchg
ror
outsb
push
push
cmpl
lods
xchg
pushf
call
jl
mov
adc
push
les
ds
sbb
jnp
jmp
loope
loope
ja
pusha
push
out
roll
mov
stc
mov
sbb
test
push
sahf
sub
or
sub
inc
adc
je
loope
mov
mov
inc
cmp
stos
pusha
adc
xchg
shll
push
pop
push
inc
xchg
adc
imul
ret
xchg
inc
fwait
jl
mov
testl
cwtl
cli
xlat
loopne
clc
repz
js
mov
mov
sub
cld
fstpl
cmc
add
ja
mov
add
cmp
and
gs
test
shll
mov
add
pop
gs
mov
daa
ss
lock
cwtl
push
xchg
jne
jge
mov
push
ficoms
cmp
pop
mov
sbb
mov
inc
notb
pop
test
cmpb
fwait
inc
insl
xchg
pusha
cmp
cli
pushf
mov
mov
cs
mov
shlb
scas
lret
and
xchg
pusha
inc
xor
and
aaa
or
pop
cwtl
jp
mov
sbb
xorb
adc
inc
mov
mov
fs
jns
shufps
bound
dec
or
pusha
daa
outsl
push
mov
ds
clc
pusha
enter
in
gs
ss
cld
je
mov
dec
pop
bound
adc
mov
jl
sub
dec
sbb
push
mov
sbb
int
loopne
insl
out
mov
into
cmpb
push
xchg
xor
sahf
xchg
pusha
add
sbb
sbb
lods
bound
sbb
pop
pop
pop
sbb
push
and
ljmp
sti
orb
mov
lods
clc
or
add
shll
mov
xlat
jp
xchg
inc
pusha
sarl
gs
mov
stos
fs
orl
data16
divl
adc
insb
jle
cmp
add
push
fbld
cmpsl
dec
adc
mov
sbb
imul
push
and
stc
add
pusha
pushf
out
pop
int
insl
cmpsl
add
pusha
in
loop
scas
and
mov
loopne
outsb
jae
adc
push
mov
sbb
ret
sbb
daa
mov
cwtl
add
rclb
and
xchg
pop
cltd
andb
mov
xchg
inc
or
pop
nop
cs
push
adc
test
ja
pusha
ljmp
mov
push
push
cmpsb
popf
dec
insb
pop
push
push
xchg
push
or
pusha
sti
imul
jge
jne
test
cmc
pop
xor
add
out
fisubs
push
mov
bound
cmpsb
testb
out
xor
adc
lea
mov
test
mov
lea
pusha
cwtl
enter
lret
iret
xor
pop
pushl
jno
or
sbb
adc
imul
js
mov
into
sub
and
repnz
xchg
mov
or
pusha
mov
xor
xor
add
mov
sbb
int3
or
lcall
arpl
xor
dec
ret
sbb
xor
jae
mov
pop
mov
pop
pop
sub
xchg
or
jo
data16
pusha
shlb
xor
push
fs
aad
cmp
ret
add
xor
pusha
jnp
sbbb
fldenv
shlb
ljmp
pop
pushf
jmp
jp
enter
xor
jbe
cmc
adc
loope
push
imulb
pop
jle
out
loopne
cmp
push
mov
add
cmp
pushf
outsl
push
or
addr16
shll
xchg
mov
sbbb
mov
repnz
push
mull
jae
xor
inc
pop
int3
aas
dec
pusha
add
ror
pusha
ljmp
es
mov
ret
in
sbb
dec
int
pusha
es
inc
punpcklbw
push
sbb
and
sti
dec
dec
cwtl
cmp
mov
into
arpl
fnsave
pusha
pop
test
cli
sub
sahf
sub
xor
je
mov
enter
inc
cmp
cltd
add
iret
sbb
pusha
cmpsb
lea
jecxz
ret
fbld
fwait
popa
fnstcw
jae
punpckhbw
out
int
ja
pop
pusha
xchg
test
aas
mov
stos
push
fiadds
add
mov
cmp
inc
xor
mov
mov
notb
insb
out
dec
add
mov
or
ds
mov
loopne
sub
xor
pusha
fwait
leave
and
mov
inc
pop
imul
pusha
xor
fsubrs
loope
jle
insl
lods
out
pop
das
es
and
in
sbb
popf
lahf
xor
pop
pusha
pop
arpl
andb
xchg
push
push
xor
sbb
push
pusha
xchg
adc
sahf
push
cmc
jecxz
push
inc
popf
inc
sub
or
add
mov
mov
insb
xor
dec
dec
dec
andb
pusha
jle
loope
std
jg
fs
or
movsl
into
cltd
xor
frstor
pop
xchg
jecxz
stc
cld
ret
jl
inc
sbb
test
dec
ficoms
pop
cmp
fcomip
push
pop
lds
adc
js
pusha
push
roll
cmp
rolb
imul
loope
inc
in
stos
pusha
iret
nop
or
sub
mov
fwait
pop
pusha
repz
or
fidivrl
adc
add
mov
pusha
dec
and
inc
sub
out
sti
xchg
xchg
inc
ss
pop
sbb
pop
clc
les
popf
mov
andb
inc
bound
jbe
cs
shlb
sbb
or
aaa
add
pop
pusha
imul
pusha
roll
out
test
ret
hlt
jns
clc
xchg
xor
nop
out
bound
jns
pusha
outsb
movsb
inc
addb
repz
pushf
insl
xor
sbb
shr
insb
and
fsubl
in
out
fisttpl
mov
int3
push
mov
movsl
sub
pop
dec
push
je
bound
cmp
mov
push
outsb
flds
lahf
adc
pushf
inc
mov
push
push
push
and
mov
lret
xchg
mov
clc
cmc
aad
xchg
sbb
andb
out
xor
add
imul
dec
dec
fstpt
orb
movsl
or
push
mov
in
push
xchg
inc
loope
inc
rcrb
mov
pop
ds
jecxz
shrl
std
pop
into
jl
ss
and
rolb
shll
jmp
and
xor
inc
scas
addr16
jg
jo
lods
mov
cmc
hlt
les
test
push
call
mov
pusha
nop
mov
insb
fildll
pusha
shl
gs
xchg
jnp
inc
or
mov
cld
fs
xchg
push
ret
push
fsubl
int3
scas
jmp
pop
pop
jecxz
xchg
ss
push
les
repnz
pop
popa
cmp
rclb
or
pusha
daa
xor
jae
cld
inc
push
add
pusha
outsb
out
iret
adc
cmpsl
xor
jb
push
xlat
pop
bound
xchg
adc
mov
icebp
push
jmp
cmpsb
xor
or
dec
dec
call
push
hlt
sbb
or
adc
popa
adc
add
mov
pusha
pop
push
and
test
mov
add
mov
daa
hlt
cwtl
fists
xchg
aaa
sbb
rclb
lret
pop
pop
sarl
jl
add
negb
sbb
cltd
arpl
jbe
lds
ret
pusha
dec
lea
adc
jns
movsb
in
fsubrs
movsl
mov
cltd
sti
sbb
fidivrs
in
dec
jg
mov
dec
or
mov
lds
adc
popa
inc
stos
test
jbe
cwtl
or
fnstcw
jns
enter
push
enterw
jo
push
stc
mov
dec
sub
pusha
adc
mov
and
addr16
dec
cmp
jg
jne
add
pushf
jl
fidivrl
cli
mov
js
sbb
stc
test
push
test
shrb
push
rol
dec
sbb
dec
nop
adc
mov
cmpsl
mov
inc
mov
dec
das
cld
add
and
fwait
out
fs
inc
test
ja
mov
bound
xchg
dec
sub
mov
in
icebp
leave
loop
lahf
clc
int3
je
pop
arpl
lds
add
add
enter
ret
rcll
insb
iret
jbe
loope,pt
jmp
je
and
ja
into
sub
out
or
push
popf
stos
sub
dec
push
push
call
push
push
je
aaa
mov
cld
sti
mov
dec
xchg
jae
dec
dec
lahf
addr16
nop
cmpsb
cli
test
das
push
mov
xchg
nop
sbb
inc
xchg
lahf
xor
out
mov
cmpsb
cmp
push
rcr
xor
addr16
loop
ficomps
dec
loop
ret
sahf
or
repnz
lcall
mov
lret
dec
out
les
cwtl
loope
data16
xchg
add
std
daa
or
mov
bound
mov
mov
gs
dec
push
scas
scas
stc
dec
xlat
repnz
push
xor
sub
or
push
mov
xchg
push
rep
addr16
and
je
notb
sti
scas
insb
xor
mov
xor
ss
jbe
lret
scas
js
movsb
sbb
popa
test
mov
leave
jecxz
subb
les
sub
pusha
test
and
andl
xor
loopne
insb
jecxz
arpl
lock
or
cmp
int3
aaa
out
jl
pop
dec
add
xlat
pusha
fs
andl
xor
mov
int
mov
jbe
pop
das
and
adc
pusha
mov
jge
pusha
pop
ret
and
loopne
test
pusha
ljmp
sub
dec
loop
cmp
js
addr16
mov
pusha
das
or
and
pusha
cmpsb
std
lahf
mov
pop
sahf
or
clc
imul
cld
lea
cltd
and
rclb
sahf
arpl
cmp
mov
repnz
add
pusha
int
cmpsl
push
pop
mov
sbb
and
or
mov
dec
push
in
jo
xor
and
sbb
xchg
dec
sbb
pusha
inc
mov
inc
xchg
sahf
fs
jmp
pusha
lahf
or
sbb
add
popf
mov
jmp
add
pusha
jb
out
js
cmp
or
sbb
adc
mov
stc
mov
sub
sbb
inc
push
jle
flds
ffree
lods
fbld
mov
mov
fcmovne
xchg
sub
adcl
pusha
dec
cmp
sbb
mov
bound
mov
outsl
jnp
test
shll
into
pusha
mov
xor
pop
scas
mov
adc
pop
sub
movsb
push
pusha
xchg
cld
in
out
lret
cmp
mov
xor
shrb
sbb
sti
bound
mov
aad
mov
cmp
push
je
inc
fldt
les
jp
fnstsw
mov
pusha
push
or
sbb
outsb
push
add
int3
fbld
inc
adc
cmp
outsl
fimuls
inc
cwtl
ds
mov
pusha
ss
das
ljmp
add
orb
push
mov
xchg
jecxz
jo
mov
push
lea
inc
add
mov
movsb
inc
sbbb
aam
push
cs
adc
pusha
aad
pop
xchg
push
cld
push
pusha
popa
fidivrl
mov
or
pop
cwtl
mov
push
jne
dec
frstor
jbe
or
mov
in
push
xor
dec
aas
pusha
mov
scas
mov
pusha
rol
or
shlb
cli
mov
inc
push
lock
outsl
outsl
lock
in
add
mov
aad
sbb
and
shlb
sbb
mov
test
and
add
xchg
pop
fstl
xor
push
xchg
in
jo
and
bound
sbb
pusha
outsl
xor
pop
cmpsb
add
insl
cmpsl
pop
popf
in
iret
movsl
insb
sbb
ret
jp
sub
shrl
rep
ret
inc
xlat
pusha
pop
lahf
and
call
pop
sub
out
jae
xor
test
fcoml
jns
aas
jnp
or
xchg
pop
and
mov
jmp
aaa
bound
testl
ljmp
xor
popa
inc
sahf
lds
xor
je
adc
out
and
mov
hlt
pusha
mov
mov
inc
jo
test
cmp
or
mov
pusha
cltd
test
into
sub
enter
arpl
fwait
mov
sbb
andb
in
push
pop
pop
incl
pusha
aas
mov
jge
cs
clc
mov
mov
pop
sbb
push
ss
dec
xchg
mov
int
cmpl
pop
outsl
lahf
jns
push
add
push
js
test
hlt
pusha
push
mov
clc
loop
lock
int3
arpl
pop
pop
adc
push
out
jmp
xlat
add
mov
or
es
lret
add
sbb
add
or
add
jg
in
add
mulb
pop
shr
push
cwtl
stos
pusha
mov
clc
movsl
mov
add
pusha
mov
fisubs
push
pop
pusha
aas
mov
cwtl
pushf
dec
xchg
aad
loopne
inc
jns
add
push
xchg
mov
insb
and
out
jl
jo
cmp
xorb
lret
xchg
das
sahf
fsubl
mov
mov
sub
es
imul
js
sub
dec
hlt
xlat
mov
fstpt
cli
push
loop
bound
dec
mov
into
outsl
cmp
push
mov
dec
std
cmp
pusha
cld
add
faddl
bound
cmpsl
push
add
jmp
subl
fstps
push
cmp
dec
xor
dec
lcall
sub
nop
mov
sub
bound
lods
fs
shll
pusha
push
inc
gs
lods
int3
in
in
aad
loopne
jnp
push
sbb
out
test
inc
ret
push
mov
cmpsb
je
ss
movsb
xchg
loop
inc
out
jg
popf
addl
call
cli
sub
mov
lea
imul
jmp
pusha
dec
bound
xchg
pusha
mov
ficompl
js
and
xchg
jns
in
push
loopne
popa
scas
jl
dec
fnstenvs
xchg
mov
rorb
call
leave
mov
or
sarb
add
pusha
xchg
and
jno
cmpsl
dec
add
mov
inc
insb
rcr
repz
testb
divps
cld
andl
pusha
push
cmp
inc
addr16
stos
mov
fsubrs
cmp
or
sbb
lock
xor
jp
call
js
int
push
addr16
pop
fdivs
xor
pusha
out
mov
sbb
pop
jmp
ljmp
fsubp
adc
jl
inc
push
adc
loopne
outsl
xchg
scas
sbb
call
pop
fs
ss
lods
mov
cmp
lret
inc
gs
pusha
and
dec
shrl
push
adc
dec
push
mov
adcl
inc
jns
clc
sti
data16
dec
shl
lea
cmpsl
xchg
add
pop
shll
ret
sub
pop
jb
test
jmp
fldenv
daa
jecxz
jl
aad
jg
and
pop
dec
or
pop
xor
sbb
push
jge
out
test
arpl
jbe
pop
aaa
std
loop
gs
ljmp
adc
cld
and
jge
fwait
mov
cmp
pop
stos
inc
outsl
add
sub
mov
inc
add
push
xor
or
jb
mov
pop
enter
arpl
lahf
sbb
pop
repz
xor
xorl
pushf
nop
in
sub
and
cmpb
or
pop
pusha
cmp
mov
sbb
fadd
movsb
repz
adc
fs
cmp
leave
repnz
xlat
xchg
int
cwtl
mov
insb
xorl
loope
arpl
mov
push
pop
ss
imul
into
sahf
and
dec
in
rclb
pop
loop
mov
fwait
jbe
iret
repz
inc
sbb
mov
sbb
inc
ret
push
mov
popl
leave
sbb
fucomi
popf
cld
push
jo
adc
cmp
cltd
pop
aam
xor
inc
fwait
test
adc
or
pop
cmpsb
push
jo
mov
insl
mov
sbb
inc
or
push
xor
pushf
js
xchg
jnp
or
sbb
icebp
pop
arpl
test
or
xor
jb
pop
mov
xor
cltd
je
insl
mov
out
mov
mov
ret
add
faddl
cld
mov
or
sarl
loopne
pop
in
call
inc
gs
dec
jl
movsb
or
xchg
jle
or
mov
jbe
lahf
mov
bound
push
xbegin
pop
inc
out
lock
bound
pushf
movzwl
xchg
jle
cmpsl
es
mov
and
pop
je
aad
and
andl
mov
push
push
fsubp
jecxz
ret
lea
xchg
mov
scas
fisttpl
push
sub
aas
das
xchg
and
imull
and
push
ds
mov
jns
adc
sbb
sub
mov
mov
push
repnz
jns
add
jne
pop
ret
inc
mov
inc
inc
add
movsl
dec
or
sub
lock
sub
outsl
mov
mov
iret
jbe
xchg
jns
xchg
shlb
test
mov
sub
into
jae
dec
inc
dec
addb
mov
lahf
cs
js
pop
or
dec
cmp
cwtl
cld
fwait
mov
mov
pop
das
mov
test
in
or
jl
cwtl
stos
cmp
arpl
mov
or
dec
icebp
faddp
jno
pop
ja
dec
js
add
punpcklbw
cmp
sbb
nop
stos
mov
fdivrl
and
jle
mov
cltd
aas
inc
mov
cli
xor
out
in
jmp
pusha
mov
xchg
mov
test
nop
pusha
sub
jno
and
andb
add
pop
je
push
pop
inc
popa
sti
pop
mov
push
fwait
jecxz
stc
push
repz
push
fisubs
push
ret
loope
cmp
pusha
outsb
nop
jnp
pop
aad
notb
adc
movl
pop
fisttps
pop
push
out
dec
test
movsb
ja
adc
dec
test
fs
loopne
dec
adc
rol
sub
pop
popa
mov
jns
mov
imul
mov
and
jge
and
loop
sbb
icebp
fcmovb
test
dec
mov
hlt
imul
add
sbb
push
sbb
push
jl
ret
iret
jbe
mov
cmp
vpmacsww
adc
sub
mov
lods
mov
loopne
iret
repnz
sahf
out
bound
and
das
enter
mov
jle
cmp
ret
je
cmp
f2xm1
push
dec
pop
xchg
fistpl
mov
shl
out
dec
sub
les
scas
sbb
lods
int
lock
dec
sub
cmp
push
out
sub
mov
mov
mov
rorl
je
hlt
ret
test
fs
pop
push
addl
and
push
fsubrl
cmc
inc
jb
push
jnp
hlt
mov
popf
stc
imul
push
shlb
in
inc
int
pop
arpl
pop
sub
in
clc
cmp
gs
popf
es
mov
aam
sub
fdivs
xchg
sahf
icebp
jmp
fsubrl
dec
mov
shrb
das
ret
icebp
add
pusha
into
shlb
test
pusha
pusha
sub
fidivrl
mov
mov
bound
pusha
out
fwait
mov
adc
dec
mov
inc
pop
fsubr
in
push
dec
pushf
pusha
push
loopne
mov
and
shl
xchg
fs
mov
ret
lahf
mov
ss
inc
mov
or
pusha
fwait
jp
mov
nop
mov
out
ja
xlat
pop
add
fwait
xchg
jecxz
andb
push
xchg
punpckhdq
push
call
push
aad
bound
in
pusha
push
test
pop
adc
dec
sbb
xchg
mov
aad
out
fbld
inc
out
jbe
add
mov
xlat
xchg
subb
adc
bound
lret
pop
inc
and
popf
arpl
push
je
jp
mov
sbb
testl
mov
mov
ljmp
xor
pop
outsb
push
adc
add
fnstcw
out
and
mov
std
fistpl
fbld
mov
mov
sbb
or
call
mov
inc
outsb
outsl
repz
pusha
movsb
adc
enter
or
arpl
imul
loopne
test
aad
loop
shlb
pusha
or
or
in
int
mov
xchg
pop
push
negb
insb
lret
xor
fimuls
imul
sub
shll
jbe
popf
ljmp
insb
loopne
pop
shr
mov
add
scas
inc
mov
in
popa
mov
xor
mov
test
ljmp
xor
std
scas
adc
push
in
jae
popf
pop
dec
jnp
shlb
and
notb
pusha
xchg
add
pop
mov
aaa
push
je
sub
push
mov
mov
cmp
push
in
push
inc
or
sbb
pop
jne
inc
mov
push
lea
or
lahf
pusha
filds
call
cmp
iret
ljmp
fs
xor
in
mov
add
pusha
and
xor
pusha
pop
fwait
in
mov
sbb
dec
cmpsl
xchg
cmp
pusha
movsb
jl
cmp
int3
inc
div
in
out
and
or
popf
inc
xchg
clc
jne
dec
lret
or
repz
enter
imul
fcmovnbe
lret
xlat
xor
and
xor
idivl
pop
pusha
jle
es
xchg
enter
pusha
out
rorl
outsb
xor
lods
pusha
jnp
out
pop
push
clc
mov
push
test
pusha
dec
mov
jno
xchg
std
rcll
clc
cmp
popf
add
mov
pusha
mov
cmp
sub
cmp
pushf
pop
js
mov
sbb
lahf
lds
jl
bound
pop
shll
sbb
sbb
cwtl
pusha
cmp
pop
push
lds
rcrb
es
dec
push
xor
push
lcall
mov
add
sub
push
push
push
ret
mov
sbb
pusha
cld
cs
cmpsl
adc
out
outsb
gs
push
lcall
je
out
mov
pusha
mov
jo
int
leave
jmp
push
mov
mov
and
jle
fdivs
test
adc
xchg
add
sbb
adc
pmuludq
iret
pusha
into
cmp
mov
pop
pusha
leave
scas
hlt
jb
loope
xchg
mov
ds
lds
insb
pusha
aam
cmpl
xor
push
pop
push
mov
dec
mov
pusha
sbb
ja
dec
jns
cmc
mov
mov
dec
xchg
or
jo
into
sbb
outsl
bound
pushf
or
test
cmp
push
inc
inc
popf
pop
jle
add
addr16
sahf
mov
lds
pusha
xor
xchg
xchg
adc
xchg
cltd
mov
fbld
sub
dec
push
test
loope
pop
fbld
jae
cmp
add
push
cmpsb
cltd
dec
xchg
add
movsb
cld
mov
insl
and
xchg
ds
jecxz
test
mov
inc
mov
bound
data16
sahf
inc
xlat
pop
and
push
movsb
mov
lock
push
pop
mov
inc
leave
fsts
insl
and
dec
mov
movsb
hlt
jmp
out
cli
test
fs
mov
loop
and
out
pusha
sbb
in
cltd
cs
or
aam
sub
lea
mov
repnz
cli
jl
add
inc
es
sti
mov
pop
mov
jp
jecxz
int
jbe
dec
pusha
add
ja
cld
push
sbb
cli
sub
lcall
js
xchg
inc
pop
mov
call
frstor
inc
mov
sub
mov
cmpsb
pusha
xchg
mov
popf
dec
pop
mov
test
scas
roll
cmpsl
dec
jo
pop
ret
aad
arpl
fisubrl
negb
pop
pop
clc
nop
inc
popa
jae
cmp
dec
pop
sub
jecxz
arpl
lds
add
jb
leave
pusha
dec
jnp
ret
fmul
shlb
mov
add
into
mov
in
mov
sahf
fwait
dec
lods
add
and
push
xchg
xchg
mov
pusha
clc
or
pop
push
mov
pop
in
mov
lea
loopne
int3
pusha
sbb
push
sbb
push
sti
pop
jle
mov
out
pop
insb
cmpsb
lods
sub
mov
mov
jns
lods
lock
pop
popa
jle
fs
push
push
ficompl
cli
xlat
mov
rorl
pusha
fmuls
cmc
add
pusha
xor
sub
fistpl
xchg
jle
mov
sti
cmp
in
aad
mov
or
jmp
pusha
mov
pusha
add
jle
adc
insb
repz
pop
lret
adcl
cmc
jmp
pusha
pop
fnstsw
dec
xchg
xchg
and
xchg
pusha
ja
roll
in
mov
adc
fbld
and
ja
jbe
mov
shlb
aam
jle
std
popa
jns
inc
xchg
jb
xchg
mov
and
cmpsb
fnsave
mov
test
sub
xchg
mov
xor
repnz
std
push
pusha
add
rol
or
outsl
pusha
scas
xchg
mov
cmp
xchg
jge
sbb
mov
and
mov
push
cmp
adc
ds
frstor
and
xchg
xchg
xor
iret
andl
shll
daa
cmp
jl
pop
sub
arpl
lock
cmp
movsb
dec
sahf
dec
bound
xchg
inc
scas
add
push
imul
aad
adc
icebp
jmp
dec
mov
scas
pop
andps
fs
popaw
sub
out
lea
pusha
dec
add
jno
inc
nop
sbb
cmc
inc
adc
sbb
cmp
shrl
xchg
dec
outsb
or
adc
scas
ja
pusha
xor
or
inc
push
pusha
mov
sbb
or
sub
push
xor
pusha
sub
rcrl
jnp
in
test
fstpl
pusha
stos
fwait
sbb
mov
out
cmp
test
mov
pop
jg,pn
push
shr
inc
test
mov
dec
cmp
jmp
sti
nop
orl
dec
jb
leave
sub
aam
pusha
push
mov
cmpsl
lcall
icebp
xchg
inc
adc
andb
or
movsl
pop
test
and
xchg
scas
push
mov
jno
sahf
sbb
fwait
jbe
push
mov
popf
dec
idivb
mov
xchg
pusha
movsb
add
sub
outsb
pop
bound
fs
pop
lret
test
inc
xor
les
add
mov
pop
pusha
bound
xchg
hlt
out
int3
bound
mov
das
ss
xor
jnp
jp
loop
add
jbe
sub
cmpsb
or
stos
inc
jl
loope
rolb
adc
sti
aam
lret
int
xor
xchg
adc
scas
inc
arpl
mov
mov
fisubs
jp
add
pusha
lret
cmpsb
ret
push
jge
lahf
sbb
dec
rcr
pop
push
cmp
xchg
mov
push
add
ret
popa
mov
jge
lcall
jecxz
fs
or
dec
js
xor
cmpsl
pusha
outsl
xchg
push
out
int3
test
cli
or
in
movsl
inc
cmpsb
dec
pop
jle
or
xor
mov
xchg
sub
jne
pusha
adc
popa
xor
jo
dec
push
js
sahf
mov
mov
std
ret
dec
xchg
out
jmp
adcl
mov
gs
cmp
and
rol
out
mov
divb
or
pusha
js
sbb
mov
int
jb
shlb
and
add
daa
jl
cmp
mov
add
gs
je
xor
outsl
sbb
pop
push
subb
cmp
cli
insl
sbb
insb
and
or
or
and
mov
jecxz
xchg
insb
int
sub
or
xor
fcompl
mov
sbb
insl
arpl
lret
in
pop
lahf
xor
pusha
xchg
test
adc
sbb
dec
popa
pop
test
jecxz
xor
dec
dec
in
and
outsb
and
insb
mov
cmp
popf
repnz
push
add
bound
imul
sbb
cli
xor
scas
insl
pusha
xchg
inc
add
imul
dec
fwait
push
daa
out
ret
orl
shufps
push
idivb
inc
adc
sbb
sahf
dec
jnp
pusha
shrl
sarl
push
inc
lahf
xchg
pusha
cmpl
test
stos
sub
pcmpgtd
test
jae
enter
sbb
pusha
adcl
call
push
pop
sbb
sbb
xor
aaa
pop
test
addr16
xor
dec
mov
pushf
jl
mov
int3
lods
fcmovnu
pop
mov
ljmp
in
arpl
mov
xchg
loope
mov
jp
jae
fstpl
adc
jb
or
loop
mov
call
adc
inc
dec
mov
push
jbe
ds
sahf
bound
pop
andl
mov
sub
test
pusha
inc
cmp
dec
out
push
sub
pusha
jne
xor
mov
lcall
test
jo
xor
in
scas
mov
fwait
dec
mov
fsts
jo
jb
sti
ja
arpl
out
cmp
mov
add
lds
xchg
jl
cld
scas
pop
in
pusha
call
adc
sahf
pusha
and
lea
pop
test
xchg
jae
push
out
lods
xchg
pusha
hlt
clc
mov
mov
mov
pop
ret
rcrb
movsl
push
arpl
mov
sub
pusha
roll
sbb
out
xchg
fcmovnu
bound
shlb
dec
pop
clc
sub
jns
push
lock
arpl
add
add
stos
xchg
addr16
xor
sub
fnstsw
sahf
lea
push
xchg
mov
adc
pusha
ret
stos
cmp
sbbb
lods
push
xchg
xchg
xchg
test
pusha
xorl
in
mov
mov
push
ljmp
and
fs
dec
cmp
xor
pusha
adc
push
jbe
pusha
shl
xlat
dec
ret
mov
sbb
loope
dec
cwtl
and
xor
daa
jge
das
pop
icebp
insb
out
push
cmpb
xchg
aam
jbe
mov
pusha
nop
sahf
fidivrs
loope
cwtl
mov
fs
jae
cmpsl
aad
adc
std
insl
pusha
repz
inc
addl
jne
push
cli
addr16
mov
xchg
es
push
roll
jle
push
cwtl
popa
pusha
notl
xchg
mov
lret
jl
mov
cwtl
pusha
cmp
mov
pop
xchg
ss
pusha
cmpsb
hlt
shlb
scas
lahf
sahf
pusha
push
cwtl
mov
les
into
pushf
jecxz
sbb
out
cmp
roll
fs
pusha
outsb
insl
jnp
inc
sub
pusha
shlb
and
call
gs
inc
push
mov
pusha
cmp
mov
mov
cmp
pusha
adc
lods
lahf
fnsave
pusha
out
fmull
in
mov
push
mov
dec
and
fs
bound
inc
mov
mov
xor
xor
insl
addr16
pop
mov
mov
call
shlb
fs
xlat
outsl
int
divl
push
pop
dec
xor
outsb
push
adc
push
inc
cmp
lcall
insb
outsb
sti
int3
mov
rcrb
fildl
sahf
jecxz
imul
mov
sbb
or
mov
jl
aad
xchg
xchg
loopne
insl
es
push
jle
ret
dec
or
xchg
stos
mov
mov
mov
jl
cli
jno
xor
outsb
fimull
pop
push
mov
nop
mov
arpl
out
push
popf
inc
pusha
inc
ljmp
dec
jl
mov
or
and
mov
push
loope
mov
mov
js
pop
pusha
das
and
xchg
std
cld
pop
pop
push
sbb
jl
inc
and
loope
jo
fistpl
mov
ret
cmp
push
xchg
fists
fnstsw
sub
push
mov
xor
dec
lods
ret
mov
add
fs
sub
test
push
lahf
jne
cmpsb
dec
cmovl
and
js
xchg
movsb
mov
rol
or
pop
mov
popw
rdpmc
rclb
stc
movsl
insb
in
out
xor
pop
mov
sbb
dec
push
insb
out
jo
adc
bound
repz
push
std
cltd
xchg
cwtl
pushf
aam
xchg
das
shlb
push
inc
gs
leave
stos
sub
loope
xchg
out
jno,pn
int
pop
xlat
mov
lret
sub
loop
pusha
xorl
inc
ljmp
pop
ret
mov
cmpsb
fwait
jg
jnp
imul
ret
adc
pop
stos
push
pusha
inc
mov
mov
inc
negl
imul
or
push
xor
pusha
scas
mov
pop
mov
dec
clc
dec
leave
dec
cwtl
bound
cmpsb
add
cmp
out
jbe
insl
js
push
fisubrs
add
loope
repz
daa
jle
sbb
mov
pushf
push
movsb
push
mov
std
popa
and
sbb
dec
cmp
xor
push
cmp
fs
out
pop
mov
sahf
mov
cli
lret
pop
test
adc
clc
sti
dec
cmp
dec
jo
xchg
mov
push
adc
lcall
pop
rcl
pusha
clc
stos
inc
icebp
mov
add
inc
pusha
test
add
pusha
pop
xor
inc
xor
das
jecxz
jnp
rorl
jno
or
pop
cmp
fisttpll
xchg
xchg
pusha
push
aam
inc
pop
adc
add
in
xchg
ljmp
insb
cmpsl
ljmp
lret
mov
mov
pusha
rorl
pop
je
and
sub
icebp
ret
movsb
push
scas
mov
pushf
int
sbb
mov
mov
fcom
movsb
xor
jns
cmpsb
fs
lret
pusha
push
fwait
sti
bound
aam
popf
dec
dec
fdivrl
movsl
push
xchg
pusha
and
fcmovnu
roll
into
cld
dec
cli
loopne
pusha
adc
push
push
mov
fs
or
xor
mov
or
rorl
sbb
and
xchg
aaa
mov
dec
pusha
or
rolb
jo
pop
lcall
push
mov
xchg
jl
xor
sub
and
je
add
cmpsb
bound
daa
pusha
les
push
adc
jp
aad
mov
out
stos
divb
pop
ja
jle
mov
xor
push
pusha
mov
cwtl
aaa
cmc
popf
lea
in
xchg
push
push
sahf
pusha
mov
xchg
fwait
loop
in
outsb
pop
fistpll
test
pushf
fsubl
repz
pusha
roll
or
adc
or
enter
cmp
xchg
pop
sbb
sub
scas
pop
std
addr16
mov
fdivl
or
push
ss
lret
ret
cmc
bound
push
cmpsb
add
fsubrs
sti
sbb
aam
stos
jle
pop
loope
inc
inc
adc
push
test
ret
add
push
mov
out
insb
cltd
sahf
sub
add
add
nop
shrb
dec
bound
cmp
dec
cmp
lods
popa
fstpl
or
jl
mov
hlt
adc
and
inc
lcall
dec
sbb
jle
or
aas
sub
js
lods
sub
rdtsc
dec
imul
push
dec
push
sahf
repz
cmp
dec
test
xor
filds
pusha
aaa
out
pop
or
and
jnp
mov
punpckhbw
pop
dec
fdivr
xchg
cmp
inc
push
addb
repz
divb
fwait
mov
push
cmp
clc
aam
jle
cmp
test
scas
mov
and
jbe
adc
insl
or
push
xor
push
ds
test
cltd
inc
cmp
xor
xor
add
inc
dec
inc
xchg
jns
sbb
pop
sub
out
ret
jmp
popa
jp
mov
xchg
mov
fisubrl
cmp
cmp
xor
stos
mov
dec
sbb
clc
mov
hlt
pop
xchg
bound
sub
dec
jb
mov
pop
mov
pusha
out
mov
mov
inc
adc
mov
mov
js
fcomps
dec
and
inc
mov
jo
inc
xchg
mov
loopne
hlt
inc
insb
lahf
repz
or
popa
loope
add
test
pop
mov
push
xor
imul
pop
shl
mov
push
pop
mov
push
inc
testb
inc
test
cltd
mov
rorb
pop
or
js
jle
sub
ds
in
or
or
fwait
ss
mov
leave
test
mov
sbb
dec
scas
fcoms
pop
loopne
mov
subb
das
incl
mov
insb
or
call
je
popa
fldl
push
xchg
and
mov
push
adc
bound
or
ss
pop
mov
xor
sub
adc
push
mov
shrl
std
mov
icebp
rorb
and
pusha
bound
pusha
xorl
sahf
inc
inc
dec
lods
sub
gs
mov
push
lcall
fwait
out
pusha
int
mov
pusha
push
or
push
nop
pusha
lcall
pusha
adcl
pusha
bound
xchg
push
jo
sbb
inc
lea
cmp
and
xchg
lock
aas
add
lea
xor
loopne
clc
pusha
hlt
cmp
push
and
xchg
add
mov
loop
pusha
jle
in
cmp
andnps
loope
pop
pusha
iret
sbb
xor
nop
mov
pusha
push
mov
test
jns
sti
insb
rolb
stos
sbb
add
scas
test
xchg
xorl
pop
cmp
popa
inc
into
push
idivl
loopne
mov
xchg
ds
mov
add
cwtl
cmp
inc
xchg
dec
adc
arpl
jnp
xchg
orl
stos
ja
leave
mov
jae
jo
xor
rcll
shld
ror
pusha
loopne
cs
cmp
pusha
pushf
negl
jne
psubw
cwtl
mov
data16
mov
xchg
sbb
mov
shll
dec
push
xlat
pop
mov
xor
sar
pop
add
mov
addr16
fstps
or
lcall
sbb
rcr
mov
pusha
cmp
or
mov
out
jbe
in
mov
sbb
arpl
sub
cltd
xor
leave
jmp
pop
cmp
fcmove
inc
les
cmp
xlat
jecxz
mov
cmp
pusha
out
add
ss
hlt
pusha
xchg
push
lds
dec
scas
xchg
pusha
pop
aas
and
fcomps
jns
pusha
push
xchg
xchg
outsl
shll
pusha
int
sbb
xor
hlt
inc
leave
sbb
cmpsl
xchg
daa
pusha
aam
call
cwtl
pusha
pushf
mov
inc
sub
fbld
out
sub
cmp
popa
pusha
sbb
movsl
push
in
xchg
ja
cmpb
std
ficoml
pop
lock
adc
pop
push
pop
outsl
fdivrl
dec
push
das
out
inc
movsl
fs
or
xchg
imul
xchg
fisubs
or
cmp
loope
enter
push
and
pusha
sub
nop
mov
movsb
mov
aas
pusha
cmp
push
pop
sub
and
or
lea
stos
adcb
jecxz
lahf
pusha
mov
ja
jecxz
jae
pusha
popf
dec
mov
fsts
xor
xlat
pop
cmp
cmpsl
inc
std
addr16
cmp
repz
pop
inc
push
mov
lahf
mov
shll
out
bound
xchg
into
fs
adc
xchg
add
lret
inc
ljmp
rorb
xor
outsb
fimuls
push
rcrl
and
xchg
leave
sti
lcall
aad
sub
ud2
popa
test
push
mov
mov
fldt
and
into
mov
dec
enter
jmpw
clc
push
js
mov
mov
jae
xor
aas
sbb
xor
arpl
push
lock
mov
pop
adc
push
loope
out
hlt
cmpb
lcall
mov
pop
sub
xchg
push
ljmp
xor
sbb
les
rol
lock
dec
add
stos
inc
and
dec
sub
fs
lods
jle
pop
insb
std
daa
sub
outsb
ret
lret
popf
xor
dec
push
cmp
jae
pop
pusha
fsubr
add
repnz
and
mov
push
das
or
mov
push
shll
and
add
pusha
cmp
stos
stos
sub
xchg
pusha
orl
or
inc
std
cli
mov
pop
cmp
pushf
test
bound
sbb
push
lcall
add
das
bound
mov
ret
arpl
pop
inc
pushf
jle
push
je
icebp
loope
imul
aad
pop
sahf
xor
jecxz
insl
subb
pop
fimuls
lds
xchg
test
pop
mov
xchg
insb
jecxz
scas
jb
mov
loopne
dec
sahf
cli
sub
xchg
and
repz
xchg
rcll
int
dec
adc
xor
jge
inc
es
jno
mov
dec
out
test
sub
adc
sti
pop
pushf
sbb
mov
repz
dec
scas
adc
sbb
jl
js
mov
cld
xchg
and
sbb
stos
pusha
add
push
std
loop
jbe
insb
lcall
pushf
popa
cmc
or
and
pusha
imul
add
pusha
xor
push
adc
ret
sbb
sti
test
xchg
je
ret
out
clc
nop
cmp
lahf
mov
dec
push
xchg
pop
or
mov
mov
out
push
ljmp
popa
sub
inc
shl
cmpb
dec
sub
mov
jmp
bnd
loopne
data16
nop
or
test
xor
sbb
pop
and
push
loop
xor
pushf
inc
push
jae
xor
push
mov
and
inc
lret
xchg
addr16
add
xor
fs
or
lcall
imulb
pop
iret
pop
inc
shrl
iret
in
jo
ret
andl
scas
mov
into
mov
nop
push
dec
movsb
xchg
push
imul
jmp
sub
and
and
sub
inc
cmp
inc
sub
shlb
fdivrs
or
mov
andb
stos
rcr
in
imul
stos
push
dec
pop
ja
push
inc
push
sub
loop
xchg
icebp
xlat
or
mov
xchg
adc
out
mov
enter
bound
loope
pop
push
shl
pop
ja
lahf
dec
pop
dec
ret
dec
jb
pop
inc
push
lds
or
cwtl
and
mov
mov
dec
cmp
inc
bound
push
xor
jle
lahf
hlt
and
and
sub
or
cwtl
xor
adc
lods
cmp
in
in
sbb
jecxz
push
lcall
outsl
jl
and
into
mov
pushf
daa
mov
in
push
and
aas
cmp
cmp
test
add
fwait
push
sub
sub
jecxz
inc
xchg
ja
into
loopne
xchg
mov
mov
dec
popa
int
nop
in
shll
js
mov
loope
popa
mov
divb
shrl
outsl
xor
dec
pop
rol
movsb
jecxz
int3
jo
cmpb
sbbb
mov
sbb
and
pop
pop
call
lcall
and
xor
mov
arpl
sar
pop
test
push
sub
movsl
imul
inc
pop
xchg
and
popa
adc
xchg
in
ljmp
adc
mov
sub
repz
dec
mov
std
xchg
leave
pop
and
rcrl
loop
pop
bound
xor
and
icebp
pusha
shlb
addr16
xchg
filds
inc
jl
in
mov
icebp
ror
inc
pop
ja
sub
daa
jmp
cld
xor
ljmp
outsb
mull
in
fsubrl
test
lods
pop
jg
dec
lea
pusha
loop
lds
adc
pusha
mov
dec
gs
roll
push
mov
outsl
pop
add
adc
iret
pop
pusha
inc
or
call
dec
fwait
jns
jecxz
sub
inc
ja
jle
loope
cld
outsb
pusha
mov
fisttps
sbb
cmp
stc
fdivrl
cmp
int3
sbb
jns
clc
jp
lods
mov
pusha
push
add
inc
testb
push
inc
xor
repz
pusha
xor
sub
inc
pusha
jbe
push
sbb
jno
sahf
pusha
mov
or
or
pusha
cmc
or
jge
stos
lods
mov
dec
mov
add
push
lds
testl
loop
call
lret
and
sti
sbb
push
mov
test
rcl
pop
int3
jne
xor
xor
inc
inc
ss
cld
pusha
xorb
shlb
lahf
push
mov
pop
mov
sbb
and
jo
add
xchg
orl
fstpt
sar
dec
ror
out
xchg
or
adc
xchg
pusha
push
clc
mov
mov
jl
or
lcall
mov
ret
ret
sbb
jbe
sub
iret
jae
mov
adc
pusha
mov
cmp
jne
pusha
insl
mov
mov
pusha
scas
hlt
jbe
xchg
add
leave
stos
shrl
push
aaa
push
ja
aam
or
pusha
in
xor
fstps
push
lret
stos
pusha
scas
ret
jb
clc
push
sar
jl
adc
ftst
es
pusha
iret
loope
xchg
hlt
fwait
push
pop
arpl
lahf
xlat
ficompl
jmp
mov
mov
jo
mov
in
mov
insb
mov
mov
imul
adc
sbb
push
jl
fs
cmp
xor
mov
test
push
imul
pusha
leave
xor
jae
jmp
fs
mov
push
mov
popa
testl
and
and
add
add
cmp
mov
xor
dec
out
and
enter
insl
pusha
fdivs
pop
aas
fnstsw
imulb
mov
pusha
or
rclb
mov
andl
mov
or
adc
adc
outsl
js
and
fs
mov
lods
mov
aad
aas
cmp
jno,pn
cmp
les
loopne
ret
orl
push
xchg
mov
clc
lret
mov
sub
add
adc
mov
imul
pusha
out
cltd
adc
addr16
leave
pop
test
pop
sub
jne
cmp
faddp
pop
or
push
and
pusha
inc
fdivrs
lock
xchg
insb
xor
mov
cmp
fs
lcall
sbb
pop
mov
int3
sub
popa
add
div
sbb
jl
push
mov
add
xchg
add
pusha
and
or
stc
pusha
or
cmp
mov
lcall
leave
jmp
mov
pop
mov
arpl
and
lahf
xchg
ficoml
sub
mov
mov
and
and
xchg
dec
leave
jg
repnz
sbb
xchg
enter
or
iret
push
sbb
hlt
repz
mov
test
mov
mov
movsb
rorb
xchg
gs
mov
xor
dec
push
inc
movntq
mov
jge
lret
jecxz
je
idivl
lods
xor
rcll
test
pusha
and
int3
cld
in
subb
fisubl
in
mov
es
jg
mov
adc
mov
in
pop
adc
jo
pop
jbe
lret
jl
cmpsb
insl
fisttpll
push
nop
sarb
push
sti
fcomi
es
dec
pop
loope
ljmp
push
les
lahf
xor
jmp
je
loope
mov
xchg
push
cwtl
or
mov
pop
pop
xor
mov
lahf
xor
push
hlt
rorl
test
std
add
sub
mov
xor
push
int3
outsl
and
pusha
adc
push
jb
fistl
push
xchg
jecxz
stos
frstor
lcall
inc
lret
js
or
imulb
cld
push
mov
lds
ljmp
lcall
mov
aaa
mov
xlat
xchg
pusha
push
or
aam
mov
nop
xorb
shl
jge
jg
arpl
das
push
mov
dec
cmp
jp
dec
fisubl
mov
movsb
jo
push
xchg
clc
scas
mov
jae
mov
cmp
loope
adc
jns
jl
push
loope
lahf
or
fadds
jecxz
shrb
clc
cmp
mov
je
fs
cld
sahf
daa
dec
out
test
rcrl
push
imul
push
pop
mov
iret
sbb
mov
int3
int3
imul
jecxz
clc
pusha
jbe
push
fidivs
arpl
inc
cmpsb
in
inc
sbb
add
mov
mov
mov
dec
call
inc
mov
xor
mov
sub
xchg
loope
mov
icebp
jl
xor
xor
mov
inc
and
ret
push
or
stos
xchg
push
mov
sbb
sbb
jnp
jge
clc
jl
xor
dec
aad
mov
pusha
repz
out
mov
outsb
pop
xor
xchg
jnp
inc
jl
pop
scas
pusha
nop
push
popf
jne
test
dec
pushf
xchg
int3
mov
outsl
insl
sbb
pop
jecxz
push
int
inc
pusha
jecxz
cmp
shrb
push
mov
setb
sub
pop
xchg
sbb
dec
cld
sub
sub
xchg
roll
mov
adc
mov
or
mov
imul
mov
dec
xor
outsb
mov
push
lret
fstl
mov
cld
lods
jae
or
fs
mov
xor
sbb
fwait
into
pusha
xchg
in
push
sbbb
aas
dec
rcr
pop
std
adc
xchg
jg
mov
bound
fs
dec
and
mov
cltd
mov
push
add
jo
aam
popa
jmp
mov
pop
imul
in
sbb
pop
adc
cmp
sub
jbe
dec
and
test
xor
sub
in
lret
adc
idivl
movsl
push
pusha
sub
clc
hlt
pusha
mov
push
jg
pusha
cld
daa
repnz
jp
mov
pop
pop
movsl
mov
cmpsl
xchg
mov
aas
movb
sub
ret
and
pop
lods
pop
dec
and
movsl
popa
cmp
fs
push
mov
test
stos
cs
add
push
push
test
add
lods
fstpl
pop
popa
clc
and
mov
pusha
arpl
mov
les
test
xlat
jle
fs
shll
add
dec
pusha
push
icebp
ret
dec
pusha
sub
into
pop
enter
sbbb
xlat
jge
insb
lods
sub
pop
add
out
pusha
and
jnp
push
mov
add
ljmp
testl
cmc
sahf
pop
out
pusha
push
push
cwtl
and
pusha
loope
dec
jg
inc
div
fs
into
orl
mov
mov
sub
test
mov
pop
sbb
dec
push
pop
mov
pusha
rclb
mov
insb
jge
xorl
mov
nop
ret
xchg
sbb
adc
orl
mov
test
mov
push
cmpsl
jle
add
cmp
sub
stos
out
test
dec
pop
push
pop
add
mov
in
repnz
pop
or
insb
fdivrl
cmp
jl
popf
std
mov
lea
popa
bound
jecxz
and
fisubl
mov
pop
mov
mov
inc
les
and
sbb
pusha
lahf
in
sub
nop
or
notb
in
add
negl
pusha
dec
inc
hlt
push
and
test
mov
cmp
jecxz
ret
lcall
cltd
gs
aad
pop
lods
xor
mov
iret
pop
hlt
jbe
mov
sub
push
imul
loope
roll
and
outsl
ret
inc
rcl
inc
loope
jbe
push
pop
mov
xor
xor
sub
cmpl
popf
out
jg
adc
push
out
sub
and
xchg
cmp
mov
mov
cmp
and
xlat
bound
xor
test
pop
pusha
stc
adc
popa
xor
pop
jmp
movsb
cmpsl
add
psubq
fs
mov
outsl
scas
je
push
pop
pop
dec
or
fdivrl
mov
lods
mov
cmc
push
push
jno
stc
movsl
mov
bound
sbb
pusha
add
cld
jae
cmp
loop
test
pop
mov
pop
or
xchg
test
aam
xchg
bound
xchg
inc
into
jno
pop
hlt
mov
mov
mov
fstpl
lret
movsb
push
jb
pusha
enter
or
iret
inc
xchg
xchg
mov
hlt
pusha
pop
enter
inc
jae
mov
pusha
cmpsb
or
sub
and
lahf
jle
mov
imul
pusha
sub
or
jo
iret
jl
add
das
mov
pop
jae
adc
iret
jmp
dec
or
into
mov
pusha
popf
jae
fwait
int
sti
pusha
add
cmp
mov
push
mov
call
cmp
jno
cltd
pushf
mov
outsb
sub
scas
add
xor
pusha
sub
aad
or
pusha
add
xchg
into
cmpb
lock
sub
fsubl
punpcklbw
or
push
or
sbb
push
xlat
xchg
mov
pusha
mov
add
sbb
pusha
mov
js
mov
and
loop
inc
mov
ficoms
pusha
inc
sbb
cli
mov
int
arpl
fldt
mov
inc
mov
sbbl
pop
xor
out
and
and
dec
in
or
push
xor
out
push
mov
and
adc
movsb
bound
mov
jbe
ss
stos
mov
std
mov
or
cs
jl
out
and
and
fs
mov
aam
push
clc
sbb
pushf
inc
outsl
mov
push
xchg
jle
movsl
cld
add
popf
pop
add
adc
movsb
xchg
insl
or
jmp
pusha
aaa
test
pop
sbb
mov
push
jnp
inc
stos
sub
adc
or
pop
pop
iret
jbe
fwait
loop
mov
repz
test
in
cs
lahf
cltd
int3
icebp
mov
pusha
sbb
push
xor
push
testb
dec
call
adc
sbb
test
jns
push
lods
jbe
jns
and
roll
fs
scas
mov
loopne
stos
sub
pop
inc
sahf
pusha
or
pusha
shlb
push
and
add
insb
jg
dec
mov
pusha
pop
push
and
xchg
push
mov
pusha
shl
lea
dec
lret
lcall
loope
leave
jecxz
jae
push
ficoml
jl
xchg
dec
push
mov
ss
cmpsb
add
test
lods
push
test
jnp
stos
movsl
jno
out
and
sub
pusha
test
movsb
movb
sti
roll
psubsw
stos
jecxz
lea
fldt
fisubl
clc
dec
aam
into
lret
add
mov
push
lock
add
inc
int
pop
jg
lea
jb
jg
insb
lea
inc
popa
mov
in
in
adc
jecxz
fstpt
cltd
adcl
jl
jl
jae
clc
xchg
xchg
arpl
loop
ljmp
pop
dec
inc
push
or
mov
add
into
sub
xchg
out
je
fldt
sub
jmp
leave
push
mov
push
add
cmpsb
jge
mov
mov
pusha
cli
hlt
cmp
imul
mov
pop
push
out
shlb
and
lahf
add
pusha
mov
scas
roll
xor
imul
out
cmpsb
leave
push
loope
lret
sti
pusha
scas
cmp
mov
repz
addr16
sbb
sub
je
sbb
loop
shr
add
pusha
jp
jbe
sbb
mov
jo
mov
ja
enter
add
pusha
lods
adc
stc
cmpsb
ret
pusha
rol
into
pop
jle
cwtl
mov
jge
popa
in
pusha
clc
sbb
lds
loop
sbb
sbb
test
mov
pushl
bound
movl
sbb
pop
mov
inc
push
mov
test
xchg
nop
sub
test
in
andl
and
add
cmp
mov
sub
icebp
and
inc
pusha
call
push
les
inc
pop
cwtl
in
push
aas
jecxz
xor
cmp
lds
sub
jo
pop
popa
adc
andb
mov
push
aas
push
fimuls
insb
mul
jae
lret
call
mov
jp
dec
pusha
mov
mov
dec
pop
mov
pusha
fcmovne
xchg
inc
outsl
mov
and
mov
mov
bound
xchg
addr16
insb
pop
or
inc
mov
ret
mov
inc
dec
insl
xor
push
jae
lahf
loop
or
sbb
add
mov
sbb
add
sub
push
pusha
sbb
push
bound
ror
jge
lock
pop
sub
insb
iret
bound
adc
lea
hlt
mov
scas
outsl
pusha
outsl
xchg
jbe
aad
mov
imul
pusha
jae
cmpsb
rcr
inc
out
mov
jle
data16
adc
shlb
xchg
pop
cmc
xor
jne
lea
aam
popa
sub
inc
cmp
cmp
in
lret
cmp
pop
sub
push
xchg
add
mov
enter
pop
adc
pusha
adcl
shrl
push
nop
enter
pusha
cmp
dec
pop
in
in
fisubs
imul
jns
push
pusha
cmpsl
push
mov
repnz
mov
sub
out
mov
and
leave
fs
aas
ds
ret
int
mov
sub
es
rcll
pusha
or
les
jge
cwtl
adc
xchg
sub
mov
mov
pop
lcall
cmc
and
sti
cltd
mov
xchg
pusha
push
inc
push
cld
mov
pusha
mov
in
xchg
pusha
cli
sbb
inc
cmc
jl
push
mov
mov
xchg
pusha
lahf
lds
ljmp
fsubs
jl
movsb
les
dec
es
xchg
out
mov
pusha
cwtl
jg
stc
scas
push
jge
into
in
push
jns
mov
std
push
pop
and
repz
pusha
movsl
mov
push
pop
xchg
inc
pusha
out
push
loopne
popa
fsubs
aam
das
daa
test
clc
push
in
mov
ss
aad
adc
loope
sub
cwtl
mov
fs
lcall
jl
aad
sub
inc
cltd
push
neg
jle
loop
mov
cld
dec
js
negb
dec
ret
sbb
push
sub
sti
loop
not
lcall
les
adc
icebp
pusha
in
hlt
loopne
pop
mov
insl
outsb
mov
mov
cmp
aad
add
es
cmp
xchg
mov
mov
jp
jecxz
mov
lea
sahf
fcom
loope
push
jb
or
bound
xchg
xchg
pop
fsubr
pusha
push
add
and
mov
pop
jnp
lahf
mov
das
pusha
loop
mov
jbe
movsb
data16
aam
and
push
cmp
je
pusha
or
xchg
in
mov
push
and
mov
xor
rclb
add
xchg
xchg
fs
xor
xchg
mov
sub
into
stos
add
mov
orb
testb
xor
lret
inc
out
sbb
and
xor
loopne
rol
popa
cld
mov
bound
mov
popa
mov
jbe
sti
ret
ret
loope
leave
sub
dec
xor
mov
add
push
jecxz
adc
and
lea
ret
push
push
dec
cmpl
aam
mov
and
add
inc
and
retw
push
dec
outsb
xor
in
jl
jmp
bound
sarl
into
mov
and
sub
sub
dec
sub
mov
add
lret
daa
aas
pop
cmp
or
outsb
filds
jb
aam
lcall
bound
mov
and
stos
out
dec
push
sub
dec
scas
pop
mov
mov
or
pop
hlt
jle
mov
jmp
inc
sub
push
cmpsb
xchg
push
mov
leave
repnz
adc
adc
sarl
shl
bound
clc
sub
into
fidivrs
cwtl
or
jae
roll
add
sahf
popa
xlat
mov
jo
mov
jbe
xor
mov
xor
dec
cwtl
pushf
movsl
add
sub
lret
shlb
dec
repnz
lods
push
adc
mov
adc
xor
ret
xchg
lea
cmp
scas
sti
mov
cmp
push
dec
ret
ret
iret
mov
adc
pusha
nop
xchg
mov
sbb
lret
sub
std
popa
xchg
push
mov
pop
fs
mov
loope
call
popa
xlat
lcall
sub
inc
pop
sub
cmp
loope
and
rol
loopne
sbbl
mov
hlt
pop
int
and
add
xchg
fiaddl
push
pusha
int3
pop
imull
dec
cs
and
dec
mov
mov
adc
in
iret
cmp
sahf
ljmp
popf
lret
pushf
pusha
xchg
adc
flds
leave
jo
and
test
and
jge
push
push
pusha
push
aam
sub
cmp
sub
jo
ja
lret
stos
dec
fs
jns
xchg
cltd
sub
mov
leave
shrl
add
lods
roll
rorl
cmpl
xchg
frstor
pushf
push
push
mov
ja
sub
popa
mov
pushf
clc
and
lcall
je
test
push
xchg
mov
outsl
mov
stos
xchg
movsl
leave
cmp
lods
inc
adc
or
mov
rcrl
leave
mov
inc
out
pop
orl
pushf
es
lods
dec
mov
dec
mov
jae
outsb
adc
int
add
in
in
adc
add
add
sub
ss
ljmp
mov
and
rorl
mov
sub
sub
aas
or
cwtl
fisubrl
outsb
loopne
sub
mov
outsb
mov
cmp
add
rcll
mov
pop
or
push
fs
hlt
mov
aaa
icebp
loope
rol
outsl
rcrb
mov
and
popa
dec
lcall
insl
mov
xor
testb
inc
sbb
lcall
cmp
xor
mov
ror
mov
dec
scas
mov
pop
shlb
push
adc
dec
gs
es
movsb
push
addr16
jge
scas
xchg
shlb
xor
jecxz
data16
pop
xchg
cld
mov
icebp
pop
push
pop
inc
nop
push
pop
dec
sbb
xor
push
mov
in
adc
mov
and
outsb
and
inc
in
mov
pusha
ret
popa
dec
push
ret
fscale
xchg
rorb
adc
cltd
cmp
aaa
movsl
sub
mov
clc
cmc
push
fwait
lods
and
pop
pop
insb
mov
out
cs
subb
mov
xchg
test
jno
pop
js,pt
inc
loope
and
adc
lods
sbb
pop
xchg
pop
cs
negb
pop
push
arpl
repz
mov
cld
pop
add
pop
push
jge
sub
jmp
testl
sbb
mov
fistpl
jle
movsb
int3
cld
sarb
std
mov
js
mov
test
insb
ljmp
out
jno
shrl
loop
mov
mov
lods
ret
inc
shl
mov
into
xchg
jnp
adc
mov
cwtl
mov
cwtl
loop
mov
nop
adc
lods
pop
pop
pop
icebp
pop
popf
pop
ss
mov
pop
mov
cs
out
add
das
imul
mov
jl
adc
add
rol
mov
mov
xchg
xchg
xchg
sub
sbb
negb
sub
jl
call
sbb
sbb
or
push
dec
ss
pop
pop
cmp
aam
in
pop
lods
outsl
das
test
sub
pop
and
xor
ficompl
pop
pop
cmpb
test
mov
mov
pop
insb
mov
pop
repz
xchg
outsl
std
mov
mov
insl
xor
imull
mov
in
js
inc
subb
pop
mov
out
ret
xchg
mov
mov
das
xchg
mov
xchg
jle
mov
mov
std
inc
jbe
dec
mov
xor
repnz
and
dec
cs
out
xchg
adc
dec
gs
pop
pushf
out
mov
dec
test
push
adc
mov
push
pushl
loop
push
mov
cwtl
loop
push
pop
add
test
mov
rcr
mov
inc
test
pop
insl
mov
ja
dec
popa
loopne
mov
push
mov
imul
mov
ds
imul
mov
stc
lret
mov
test
nop
pop
xchg
ds
loop
ret
pushf
xchg
scas
repz
shrl
push
mov
lock
mov
nop
push
xor
mov
sbb
pop
les
pop
movsb
xor
pushf
test
push
jb
push
sub
xor
in
cmc
xchg
push
sub
mov
pushf
bound
inc
pop
js
mov
dec
mov
pop
leave
mov
popa
sub
mov
jl
test
mov
cld
loop
frstpm(287
dec
mov
inc
sti
and
test
adc
cld
xchg
pushf
in
fisubrs
and
imul
mov
test
push
dec
adc
lods
loope
int3
mov
and
ret
sbb
arpl
sub
xchg
xchg
push
lock
ret
mov
nop
mov
arpl
scas
adc
subb
roll
nop
xor
rclb
mov
pop
sbb
lret
cs
dec
mov
sub
mov
push
adcb
and
adc
sbb
pop
rcrb
dec
xor
mov
inc
mov
or
arpl
sub
mov
adc
push
loop
sbb
sub
pusha
jp
je
sub
test
sbb
in
mov
xchg
int3
cltd
fcompl
push
jge
dec
pop
pop
pop
sub
pop
sbb
add
cld
dec
lods
mov
outsb
scas
jle
dec
scas
pop
scas
cs
ds
pop
pop
push
pop
out
pop
pop
into
pop
ficomps
dec
mov
outsl
jg
dec
repz
das
dec
aas
scas
imul
scas
out
scas
ljmp
scas
scas
mov
mov
dec
ret
pop
shrl
cmp
or
sbb
in
xchg
cld
xchg
int3
xchg
fsubrl
mov
mov
cltd
pop
cltd
sub
cltd
sbb
mov
mov
inc
or
fnsave
cltd
adcb
pushf
jecxz
xchg
jne
insl
mov
mov
loop
nop
inc
repnz
xchg
add
test
test
sub
mov
rcll
xchg
push
xchg
xchg
cmpl
push
mov
mov
sbb
cli
push
ret
push
popa
inc
dec
jecxz
sub
scas
ja
mov
cs
xchg
scas
jbe
dec
inc
sbb
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
inc
test
jecxz
cwtl
test
pop
fsubp
pushfw
inc
push
adc
and
add
fcomps
push
lcall
test
lods
imul
mov
fdivs
jo
fwait
mov
mov
mov
popa
adc
jle
subb
outsl
jmp
mov
mov
loop
ss
pop
bound
inc
inc
jecxz
jmp
mov
jns
insb
adc
sub
pop
jecxz
pop
fcompl
pop
mov
pop
push
pop
cmc
pop
mov
gs
out
inc
lods
adc
popf
mov
lds
test
and
sbb
sbb
jle
mov
hlt
outsb
adc
repz
enter
mov
fsubs
stc
jb
test
loop
fdiv
mov
pop
shrl
adc
mov
push
jp
xchg
sub
push
rclb
fs
test
xchg
pop
in
in
inc
push
daa
lds
pop
out
movl
testl
mov
or
mov
sub
lock
sub
add
mov
xchg
mov
mov
adcl
enter
or
fbld
mov
adc
mov
push
mov
inc
mov
mov
mov
mov
xor
lock
push
adcl
out
pop
mov
pop
xor
pop
jecxz
mov
fdivrs
outsl
icebp
das
inc
jmp
shrl
fnstenv
push
jb
test
insl
out
arpl
lahf
lods
mov
mov
ds
jge
sarb
push
mov
stos
out
test
add
outsl
lea
shl
push
mov
lds
add
mov
and
imul
test
clc
mov
test
and
pop
sti
add
mov
inc
cwtl
add
test
rcll
movsb
in
cmpxchg
jp
xchg
pushf
mov
mov
dec
adc
mov
jle
mov
loopne
mov
mov
test
add
or
call
fdivr
test
mov
imul
in
xchg
xchg
xchg
xchg
xchg
xchg
pushf
cltd
pushf
outsb
pushf
dec
pop
test
push
inc
jle
and
popa
and
cltd
test
jmp
cwtl
fmuls
push
sbb
ret
xor
adc
repz
cmpl
popa
mov
pop
cmpsb
pop
xchg
pop
pop
inc
push
gs
inc
dec
orb
cmp
and
cmp
and
test
and
loopne
cld
mov
pop
ror
adc
test
or
jl
hlt
cld
cmpl
andb
out
xchg
leave
inc
xchg
mov
test
xchg
pushf
jmp
cmp
mov
rcrb
sub
pop
popa
push
inc
jae
imul
push
cmpsl
outsl
or
test
ds
jae
icebp
mov
xchg
push
test
sbb
dec
pop
pop
pop
sub
pop
or
pop
ljmp
pop
stos
dec
mov
imul
decl
pop
ljmp
cmp
or
sbb
repnz
and
icebp
stos
push
pushf
jle
xor
das
and
scas
or
aaa
scas
out
stos
xchg
dec
dec
gs
shll
pop
mov
sub
ss
outsb
mov
repz
dec
sbbb
pop
xchg
out
inc
dec
in
sub
cmp
adc
xor
popa
pushl
adc
adc
push
inc
daa
lcall
clc
mov
mov
cli
pushf
inc
cld
xor
stos
sar
add
inc
outsl
daa
sub
mul
iret
mov
sbb
insl
inc
daa
sarb
xchg
xchg
push
pushf
das
pushf
or
pushf
mov
lods
pop
pop
or
sub
jecxz
clc
gs
push
stos
adc
or
inc
fadd
mov
xchg
jno
aad
cs
pushf
sbbb
inc
pushf
push
pushf
and
pop
mov
pop
cmp
inc
xchg
stos
inc
call
and
cmpsl
repz
add
adc
sbb
sub
imul
outsl
pop
scas
mov
scas
jae
inc
add
adc
adc
sbb
hlt
and
mov
outsl
in
das
out
inc
scas
push
scas
and
imul
xchg
jb
sub
push
scas
outsl
add
adc
iret
adc
mov
outsb
xchg
shrb
andb
inc
popa
add
adc
xchg
cld
adc
push
sbb
out
imul
push
loop
out
and
rolb
dec
jb
sub
inc
js
xchg
jle
and
lcall
mov
xchg
stos
and
push
mov
mov
test
lea
xchg
mov
push
mov
mov
loope
lret
cwtl
out
loope
push
dec
mov
adcl
cli
sbb
sbb
push
add
jecxz
mov
mov
jecxz
aad
mov
rorl
adc
imul
cs
outsl
repz
out
ljmp
or
fcoms
dec
pop
pushf
test
mov
stos
pop
inc
jnp
and
hlt
cmp
jns
inc
hlt
int
mov
lcall
mov
sbb
sub
test
ss
mov
cld
mov
push
adcb
add
xor
xor
loopne
rclb
sbb
dec
sub
pop
fcmove
pop
mov
pop
cs
stos
pop
addr16
aaa
inc
andl
addl
adcb
mov
out
add
mov
inc
add
cltd
ljmp
sbb
pop
iret
inc
cmpsl
lret
sub
inc
adc
repnz
inc
test
rcrl
or
mov
dec
cld
out
rcll
fbld
lret
sbb
inc
imul
mov
test
imul
push
sub
add
xor
pop
cs
outsl
sbb
jno
mov
cld
push
jle
mov
imul
xlat
xchg
push
cld
pushf
jge
shl
sub
adc
pop
add
pop
out
ret
cmpsb
push
test
xor
ret
lock
mov
icebp
xchg
movsl
xchg
test
xor
xor
pop
mov
xchg
outsl
jo
push
sub
or
cmpsl
dec
xchg
fsts
cs
sbbl
cmp
outsl
repz
imul
and
test
rclb
dec
adc
jle
sub
cltd
popa
inc
mov
and
adc
and
xor
sub
pop
imul
sub
xchg
lods
fiadds
movsl
sub
push
pushf
add
mov
add
nop
movsl
push
daa
push
mov
mov
sbb
cmp
scas
test
sub
jae
popa
jecxz
outsl
pop
test
jp
mov
add
popf
shll
cmp
xor
shlb
in
cltd
mov
add
jle
adc
idiv
cmpsl
call
pop
ret
sub
cmp
jmp
sbb
jl
nop
gs
push
cld
add
icebp
pop
ret
dec
inc
adc
adc
cs
dec
mov
mov
mov
inc
sbb
mov
inc
inc
dec
lock
inc
push
loopne
clc
sub
ficompl
pop
pop
mov
and
repz
arpl
jnp
pop
mov
xorl
mov
movsl
and
and
data16
icebp
cli
and
cwtl
pop
shll
test
repnz
movsl
mov
inc
adc
sbb
ds
add
mov
nop
lahf
inc
cmp
jecxz
push
cmpsl
pop
pop
add
pop
call
frstor
hlt
and
jno
mov
inc
jl
jle
repnz
loop
push
xchg
push
mov
pop
pop
stos
cmp
pop
jg
cwtl
sahf
sub
sbb
out
jl
popa
in
xchg
xor
push
fsubl
and
leave
dec
mov
andb
xchg
adc
fwait
aam
jl
gs
sub
fldenv
mov
dec
push
test
mov
sbb
jge
std
and
cmp
adc
sub
loop
cli
or
dec
sub
sti
scas
mov
pushf
or
scas
lcall
xor
or
nop
enter
sti
hlt
andl
inc
fcom
cmp
inc
sahf
xchg
jecxz
test
xor
push
popf
out
fisubl
stos
xchg
mov
xorb
mov
fistpl
push
mov
xchg
or
ret
popa
ret
cmpsb
aam
in
jb
gs
cmp
mov
jl
dec
jg
out
mov
inc
push
enter
and
mov
mov
lret
addb
bnd
bound
test
sar
imul
shll
mov
and
add
clc
outsl
clc
jmp
push
and
and
aad
lods
pop
mov
mov
ret
shl
mov
adc
sbb
sub
insb
mov
outsb
mov
xchg
shl
pop
ljmp
push
jl
movsb
ds
jmp
sti
mov
stos
jle
testb
js
dec
jns
or
mov
shlb
ljmp
aas
mov
sbb
sbb
cmp
lcall
mov
scas
mov
nop
xchg
or
std
pop
lods
pop
and
mov
hlt
lret
je
and
shl
fildll
sarb
fistpl
pop
lahf
push
push
cmp
es
pop
push
mov
out
mov
and
pop
cmp
test
adc
push
sbb
sbb
cmp
inc
inc
icebp
mov
xlat
imul
and
dec
adc
sub
pop
outsb
dec
sahf
cmp
pop
xorb
and
outsl
cmp
leave
cmp
test
leave
mov
sbb
xchg
dec
jl
and
ret
pop
mov
test
mov
aam
jl
xchg
jge
std
pop
jle
repnz
gs
lds
jp
jge
push
pushf
add
jb
jp
repz
ja
sti
pushf
pop
pushf
aaa
pushf
pop
clc
pop
xor
ret
xlat
inc
add
movsb
js
icebp
dec
jmp
in
aam
ret
mov
jge
mov
sbb
mov
lods
jl
xchg
repz
cltd
push
xchg
out
xchg
into
xchg
cmpsb
cmp
mov
sahf
push
inc
adc
das
push
add
pop
xor
sbb
rcrl
arpl
xor
pop
sbb
movsb
xchg
mov
cltd
jne
dec
mov
add
xchg
scas
jle
ss
loop
arpl
push
xchg
cs
inc
xchg
pushl
rcrb
push
mov
cld
adc
cld
fstpl
in
rcll
lea
push
jp
push
outsl
lret
lret
scas
lcall
scas
ljmp
mov
loop
xor
adc
fstps
pop
adc
xchg
xchg
repnz
ret
mov
out
add
xrelease
in
inc
mov
and
sbbl
xor
loope
icebp
push
rcrl
mov
ret
scas
subl
xor
mov
outsb
jo
scas
mov
andl
push
cltd
and
adc
repnz
ret
scas
mov
stos
xchg
daa
sbb
repz
cmp
xchg
jecxz
mov
xchg
sub
pop
or
xorl
adc
pop
xchg
inc
arpl
push
rcrb
jecxz
repz
or
cmp
mov
loope
aas
pop
iret
jo
pop
imul
pop
xor
pop
adcb
loopne
jns
rcrb
mov
shl
mov
jle
pushl
inc
call
and
rcll
adc
loop
push
ret
and
sbb
andb
inc
mov
xor
jecxz
push
or
pop
icebp
mov
inc
xchg
cmp
mov
xor
loopne
lock
rclb
cltd
adc
popa
divl
jnp
push
jle
xor
add
or
pushf
mov
xor
push
inc
shll
mov
loop
repnz
ret
outsb
mov
sub
mov
and
adc
ret
cltd
rcrl
outsb
imul
jo
inc
out
push
scas
and
das
add
adc
push
mov
mov
addb
popa
jle
inc
call
and
xchg
loope
icebp
xchg
rcll
sbb
sub
inc
xchg
push
xchg
and
xchg
add
cwtl
push
repz
xor
add
lock
shlb
sub
cld
popa
jle
inc
call
and
xor
inc
adc
sar
repz
pushf
xchg
pushf
fdivl
rclb
and
xor
sbb
ds
mov
xor
pushf
xor
gs
adc
mov
pop
sub
pop
xchg
adc
jo
mov
jbe
mov
push
jle
xchg
pushl
call
out
movsb
adc
loop
push
leave
sbb
jae
jl
mov
loope
mov
adc
mov
cmp
pop
imul
add
addr16
lock
fdivl
ret
subb
mov
ljmp
inc
out
push
stos
and
rolb
cmpsl
adc
mov
mov
sbbb
pop
jno
inc
mulb
jmp
repnz
pop
loop
mov
rclb
subb
outsb
mov
scas
add
mov
jae
loop
mov
pop
add
inc
roll
mov
adcb
push
jl
push
repz
xchg
or
mov
xchg
mov
pop
sbb
adcb
jo
loopne
lcall
and
adc
push
rcll
inc
sbb
sub
jb
shll
dec
ret
mov
xchg
rol
shll
and
mov
sarb
ret
incl
inc
push
daa
and
xor
add
adc
mov
xchg
mov
pop
mov
adcb
inc
sub
repnz
add
mov
ret
mov
sbb
cmp
jo
inc
ret
push
shll
mov
adc
lock
rcrb
push
mov
push
nop
push
popa
push
jno
inc
push
push
cli
bound
shrb
icebp
clc
roll
outsl
leave
xchg
stos
lds
inc
xchg
xchg
mov
loop
repnz
sub
dec
sbb
push
inc
cli
pushf
xor
ret
push
rcrl
mov
in
arpl
jo
jo
inc
add
mov
sub
pop
loopne
lock
rcl
push
das
sub
pop
and
push
fbld
pop
loope
mov
popa
cld
inc
arpl
cwtl
sub
ret
push
xchg
cmp
adcb
xchg
mov
shlb
ficompl
rorb
sub
cmpb
jno
inc
jge
icebp
and
roll
out
adc
mov
or
lock
xchg
push
jb
inc
sub
fwait
pop
loop
repnz
inc
shl
mov
mov
jecxz
and
fs
shrb
pop
jno
inc
mov
xor
shl
roll
push
xchg
bound
inc
add
cltd
and
lock
mull
arpl
and
add
fninit
mov
pop
pop
test
test
adc
cmp
loop
inc
ss
and
xorl
jb
xor
fdivl
push
adcb
jecxz
repnz
sti
loopne
fstps
inc
push
or
xchg
cltd
inc
inc
loop
aaa
icebp
pop
xor
or
cmpsb
push
loopne
popa
lock
push
add
fistl
cli
mul
sub
cltd
jae
push
pop
add
sub
inc
cmp
dec
bound
cld
mov
mov
mov
add
cmc
push
sub
jnp
push
pusha
sub
pop
mov
shll
push
xchg
ret
mov
jecxz
test
push
inc
xor
loopne
adc
icebp
aam
inc
mov
divl
hlt
repz
inc
inc
loopne
xchg
loop
jno
inc
xor
mov
sti
icebp
xchg
repz
rcrl
add
jae
inc
pushf
push
fsubl
jo
add
and
xchg
repz
shr
cmp
shl
jno
inc
cmpsl
loope
repz
xchg
pop
xor
sub
sti
inc
add
and
xor
cwtl
hlt
cmp
pushf
mov
push
loopne
les
mov
lret
mov
mov
xor
cwtl
inc
pushf
push
fcoml
jl
icebp
call
divl
js
lods
pusha
subb
push
subl
imul
test
pushf
pop
dec
sti
inc
and
cltd
and
pop
repz
dec
xor
lret
sbb
inc
add
je
xor
xor
inc
inc
pop
imul
lock
arpl
jecxz
ret
roll
jo
jo
lock
enter
cmp
call
dec
add
icebp
lock
cld
sub
movsl
sub
adc
cmp
sbb
sub
inc
shlb
mov
cmp
sub
mov
out
sub
inc
es
xor
js
inc
in
mov
inc
scas
push
mov
loopne
jb,pt
and
shlb
in
sbb
inc
and
mov
adc
dec
or
mov
jo
cld
lock
cltd
stos
adc
xor
pushf
xchg
fdivs
test
lods
loope
or
dec
adc
inc
push
imul
xor
adc
cld
xorl
sub
icebp
rclb
mov
imul
insb
insb
mov
adc
xchg
jmp
inc
jnp
loop
rcrb
xor
adc
adc
inc
adc
jb
push
repnz
sub
mov
xorb
ja
mov
test
lods
inc
sub
lds
mov
inc
clc
mov
cs
inc
stc
shl
icebp
xor
push
jo
mov
adc
sub
mov
popa
dec
mov
addr16
xchg
mov
mov
xchg
inc
jecxz
cmp
push
jb
mov
test
jb
loope
lds
repz
and
pop
loope
xor
jb
pop
repnz
xor
or
jno
pop
lock
push
mov
mov
xor
dec
rorb
lahf
nop
loopne
xor
icebp
dec
es
cld
loop
xorl
push
push
test
adc
sbb
inc
or
andl
mov
mov
add
cld
mov
stos
loop
fildl
enter
adc
xor
xor
arpl
ret
and
stos
jo
sub
fcoms
adc
inc
dec
add
repnz
fstps
cli
rcrb
and
in
ret
xchg
adc
sbb
cs
dec
sub
loopne
jno
and
mov
lcall
push
ror
je
adcb
sub
xchg
sbbb
lock
inc
fmull
lret
sub
cltd
mov
or
lret
cmp
mov
add
xor
loope
cmp
cmpsb
inc
sbb
and
fcoms
push
shrl
ljmp
cmp
dec
enter
inc
repnz
inc
sti
or
in
inc
daa
xor
inc
shlb
fdivl
pop
jecxz
dec
xchg
ror
mov
sub
dec
pop
and
add
aam
jb
loopne
inc
push
hlt
xchg
cs
stos
rolb
rorl
push
shll
mov
jo
nop
xor
adc
lock
icebp
jecxz
xchg
jno
inc
adc
dec
mov
sti
jb
jmp
xor
sub
sub
inc
jae
lret
cmp
push
mov
dec
add
shl
push
dec
and
repz
sti
mov
icebp
repz
stos
push
repz
lock
subb
shll
outsl
sbb
and
push
jno
cwtl
hlt
shlb
ds
xchg
loope
jnp
das
jae
sub
loop
push
ret
shll
loope
xor
cmp
inc
rclb
sub
dec
call
loop
adcl
mov
dec
repnz
repz
cmc
xchg
sub
lock
rclb
xor
adc
loope
mov
sti
mov
mov
and
and
and
aam
and
loop
jno
cs
cwtl
addr16
fwait
lds
rcrl
icebp
in
mov
inc
pushf
jb
push
imul
push
adc
dec
inc
mov
mov
xor
add
jb
inc
cs
outsl
subb
or
addl
inc
dec
das
dec
and
ret
push
fmuls
ljmp
jo
shlb
dec
rcll
andl
cmp
jb
ret
xor
sarb
shl
adc
xchg
inc
loope
xchg
cld
cmp
jb
xchg
roll
cld
shlb
loope
xorl
xchg
adc
pop
jl
je
push
gs
mov
push
add
mov
js
adc
pop
roll
xorl
adc
dec
bound
sub
sub
pop
xrelease
je
js
inc
jge
xchg
les
loop
sbb
fs
mov
mov
dec
sbb
push
mov
inc
mov
dec
cmpb
shlb
push
sbb
inc
inc
mov
xchg
cwtl
popf
pushf
ss
inc
and
mov
sbb
rcll
js
mov
mov
push
cmp
mov
shll
stos
nop
sub
mov
mov
push
adc
adc
push
ds
dec
cld
pushf
mov
push
movsb
testl
test
xor
clc
mov
mov
addb
je
test
test
fmull
cmp
jb
loopne
dec
popf
test
pusha
pop
xchg
sub
jae
ret
jl
arpl
movsb
out
and
inc
rclb
loopne
dec
addr16
inc
jmp
outsb
test
dec
jecxz
cld
repz
ret
push
inc
inc
icebp
inc
adc
test
mov
jbe
xor
bound
cmp
jb
loope
pop
sub
mov
pop
outsb
push
mov
pop
xor
sbb
mov
rcrl
push
mov
bound
data16
cmp
sbbb
adc
test
sub
shll
inc
nop
imul
and
cmp
push
xor
jb,pt
data16
outsl
adc
sbb
mov
pushf
cmp
add
mov
fsubrl
ds
cltd
jmp
jo
lds
jecxz
jno
cmpl
movsb
imul
mov
std
adc
or
hlt
add
xor
test
dec
mov
push
inc
xor
clc
lods
push
cmp
fadds
stos
nop
inc
add
mov
sub
nop
and
in
inc
push
insl
mov
xorb
mov
fs
inc
lcall
mov
jo
out
sub
test
outsl
sub
test
pop
inc
lds
inc
out
inc
push
cmpl
mov
or
lock
nop
mov
daa
repz
mov
in
pop
and
mov
outsb
jecxz
mov
adc
call
movsb
cld
mov
shrb
pop
pop
adc
mov
mov
sti
cmp
jb
insl
sub
stc
mov
sub
les
bound
loope
lock
sbb
sbb
roll
mov
adc
stc
pushf
inc
arpl
cmp
js
test
mov
jbe
and
in
dec
mov
fs
inc
cwtl
les
mov
pop
xorl
movsb
ret
mov
add
fsubrs
or
ret
jecxz
mov
cmpsb
mov
jecxz
insb
add
mov
test
xor
sub
cmp
cmpsl
clc
jno
call
lock
jecxz
or
mov
dec
add
inc
mov
xchg
jecxz
add
jge
mov
or
xorb
and
test
loope
aad
clc
mov
mov
xor
in
faddl
cli
xchg
mov
mov
movsb
push
fsub
imul
push
imul
int
rcrb
inc
add
push
shlb
cli
add
mov
repz
movsb
mov
fsubrl
fbstp
mov
and
rorb
add
loopne
mov
subl
mov
call
insb
cmpl
jle
pop
dec
andl
push
inc
mov
mov
and
stc
mov
cltd
mov
cmpsl
test
inc
xor
cmp
lock
add
inc
inc
mov
cmp
movsl
adc
popf
pop
mov
and
push
mov
loop
cmp
call
cs
loop
test
inc
lods
mov
test
repz
push
shll
loope
adc
cmp
js
dec
push
dec
cli
pop
shlb
adc
xor
test
jnp
mov
sub
cmp
push
orl
inc
mov
imul
dec
mov
std
pop
pop
bound
push
subb
xchg
xorb
or
pop
mov
call
shlb
and
pop
add
cwtl
inc
sub
mov
popa
push
arpl
pusha
movsb
adc
sahf
xorb
add
mov
cwtl
jl
nop
push
mov
xor
loope
push
outsl
sub
xor
repz
addr16
inc
xchg
push
in
inc
out
movsb
test
mov
sbb
bound
lds
shlb
mov
or
gs
inc
out
xor
add
xorl
xchg
cld
jl
orl
hlt
and
loopne
lock
push
je
ds
adc
les
pop
test
dec
mov
jae
outsb
mov
je
movsb
and
pop
xchg
jecxz
bound
add
enter
sbb
and
or
mov
jl
mov
sub
mov
cmc
test
mov
adc
into
jb
addb
int3
dec
sti
push
andl
inc
daa
inc
or
and
subl
and
mov
xchg
je
push
mov
inc
icebp
mov
dec
push
and
and
jno
jg
loopne
cwtl
movsl
pushf
pop
out
and
mov
xchg
mov
inc
adc
inc
pusha
fsubrl
or
mov
shlb
test
mov
lock
adcl
add
sbb
mov
dec
jns
andb
inc
test
test
sub
lods
mov
push
xor
data16
or
mov
jmp
aam
and
cmp
mov
mov
ljmp
int
mov
hlt
xchg
adcl
mov
fsubrs
shrl
cwtl
dec
insl
arpl
jne
loop
lret
xchg
xchg
push
mov
inc
adc
sbb
push
fsubs
adc
mov
inc
data16
mov
bound
hlt
sub
sbb
movsb
test
aam
mov
xchg
pop
dec
push
sarb
mov
in
mov
push
mov
outsb
add
sub
push
push
loopne
cmpsb
shlb
popa
mov
cmp
bound
xchg
ljmp
push
adc
mov
push
dec
out
jo
imul
jb
and
xor
jb
dec
pop
cmpsl
fchs
xor
lret
ret
hlt
push
dec
xchg
movsl
mov
mov
add
adc
mov
movsb
cmp
test
mov
add
test
hlt
outsl
div
and
shl
lock
sbb
dec
mov
sub
adc
mov
dec
in
adc
sbb
cmp
imul
jns
adc
mov
mov
push
inc
xchg
pop
cwtl
xchg
or
and
dec
mov
jg
lds
cltd
and
pop
clc
and
in
mov
fs
mov
mov
inc
mov
xor
inc
xchg
push
jb
repnz
fs
mov
loopne
xchg
sub
cwtl
add
mov
call
mov
add
test
push
in
or
ds
inc
test
xor
arpl
repz
push
nop
scas
adcl
movl
sarb
aaa
and
inc
jno
cmp
mov
mov
leave
mov
jle
mov
jecxz
mov
pop
push
inc
mov
test
add
jl
mov
mov
fmuls
xor
movsb
addr16
pusha
xor
test
lods
jg
push
push
adc
mov
mov
and
xor
mov
repnz
pushf
ror
mov
neg
push
setae
pusha
xchg
bswap
bsf
xchg
movsbw
push
bts
mov
call
js
lahf
ja
cmp
pop
xlat
mov
inc
or
jmp
arpl
cmp
mov
in
xor
lcall
or
repnz
push
and
out
push
out
dec
into
mov
data16
out
and
mov
push
test
lods
stos
aam
pop
adc
sbb
xchg
mov
dec
xchg
and
push
cli
mov
aam
mov
stc
leave
adc
lea
insl
pop
lahf
movsl
mov
cli
inc
add
lods
addl
es
ds
out
mov
ss
sbb
loop
pop
xchg
jmp
jecxz
and
or
jl
inc
sarb
outsl
adc
pop
add
repz
cmpsb
arpl
cmpsb
out
jmp
lahf
decl
add
jmp
and
add
cmp
ss
push
dec
mov
out
stos
outsl
xor
pop
fisttpll
lock
pushf
loopne
nop
loopne
mov
ds
xchg
cmpsl
fnsave
adc
xchg
inc
cwtl
jnp
xchg
mov
pop
lahf
fwait
xor
add
inc
pop
lahf
movsl
mov
and
movsl
mov
mov
mul
push
hlt
cmp
sbb
cmp
lcall
jg
mov
repz
mov
mov
movsl
mov
popa
mov
cmp
mov
jmp
fisttpll
jmp
shrb
in
push
les
add
hlt
pop
lahf
movsb
dec
fcomi
xchg
inc
ss
mov
fbstp
pop
jae
sub
pop
sbb
jae
fldt
push
or
daa
dec
outsl
shr
dec
in
out
int3
loop
cltd
popa
sub
sbb
ret
mov
loop
jbe
jl
mov
enter
sbb
xchg
inc
daa
in
mov
sub
adc
and
pop
lahf
movsb
xor
andb
mov
setp
neg
mov
stc
sub
pusha
mov
stc
pusha
cmc
pushf
mov
call
lea
jne
pushf
lea
ja
bt
imul
bt
cmc
pushf
add
movb
movw
movw
pushl
lea
jmp
ds
test
hlt
push
out
loopne
jo
xor
nop
add
pop
js
pop
rolb
cmp
mov
jmp
jo
dec
sbb
out
add
dec
pop
cmp
xchg
xchg
pop
aas
lods
and
movsl
inc
mov
jp
mov
lock
lds
inc
pop
in
jb
jns
cmpsb
cli
pop
cmp
loop
int3
cwtl
push
call
into
popf
push
push
push
lcall
scas
repnz
pop
lahf
cmpsl
xor
scas
cmp
mov
xor
lea
push
and
cmc
lds
sub
push
stos
mov
pushf
sub
pop
das
fwait
xor
jne
pop
sahf
cs
lcall
dec
int3
cmpsb
sub
and
and
push
out
jb
mov
add
leave
sub
sub
jmp
pop
scas
aas
xchg
mov
lret
pop
lahf
cmpsl
shrb
pusha
jmp
sub
call
pop
jle
es
push
dec
cs
ficompl
jo
add
icebp
ret
jno
mov
jne
lret
xor
add
out
dec
orb
xor
or
lret
ljmp
fnstenv
mov
pop
loopne
out
jb
popf
xor
mov
push
push
outsb
mov
mov
push
out
adc
xor
sahf
mov
int
hlt
inc
mov
mov
jb
filds
mov
dec
je
mov
mov
les
sbb
jmp
adc
popf
add
xchg
push
and
sti
xchg
cmp
shlb
xchg
adc
loopne
xor
ja
mov
sbb
bnd
jge
sahf
lahf
fwait
add
test
dec
in
dec
iret
rcrl
and
cltd
lea
arpl
fsubl
int3
int3
loop
iret
xchg
ja
mov
scas
sahf
push
mov
loop
mov
std
test
insl
inc
stos
lcall
into
push
mov
xchg
inc
sub
pop
lahf
mov
stc
adc
add
daa
mul
stos
lods
inc
into
xchg
neg
ret
mov
scas
xchg
add
addr16
push
leave
dec
mov
jle
pop
push
xor
xchg
dec
into
scas
out
mov
ret
out
loopne
xchg
test
popa
icebp
xlat
jp
daa
popa
scas
mov
mov
pop
adc
test
shlb
cmp
or
push
rorb
or
add
mov
dec
pop
jne
pop
lahf
mov
fs
ja
not
dec
dec
call
pusha
push
mov
not
mov
lods
pushl
push
dec
bt
xor
jmp
outsl
loop
lret
fwait
jl
sub
add
dec
mov
lret
repnz
mov
or
scas
jbe
out
ljmp
adc
out
mov
mov
rcrb
jp
aaa
mov
push
jp
mov
sahf
xchg
adcl
add
outsb
mov
push
fs
mov
or
outsb
mov
jb
inc
mov
ret
mov
cs
es
jbe
push
ss
out
inc
outsb
xchg
out
mov
sub
sub
dec
mov
bound
icebp
loop
ds
or
insl
push
adc
mov
adc
xchg
pop
lahf
mov
std
fpatan
repnz
imul
pop
repz
bound
sub
ret
addb
cmp
dec
addl
dec
mov
add
icebp
fldenv
push
dec
push
jae
mov
scas
fwait
xchg
mov
dec
cmp
jl
sbb
leave
jbe
rcr
leave
lea
cwtl
adc
mov
lahf
pop
enter
xor
or
jle
adc
or
lcall
lock
pop
push
mov
jns
push
mov
insb
fsubl
xchg
or
cltd
mov
ljmp
cmpsb
mov
mov
nop
test
repz
shlb
fldcw
mov
add
mov
inc
scas
cmc
gs
in
adc
test
movb
or
push
inc
pusha
dec
cwtl
data16
pop
jle
mov
push
shll
icebp
pop
daa
cwtl
idivl
ja
mov
rol
lods
in
aad
dec
fnsave
cltd
movsl
in
dec
movsb
mov
cli
sub
sbbb
dec
fs
pop
lock
icebp
xchg
movsl
xor
xor
push
cmpl
or
shlb
cmp
dec
arpl
add
out
fistps
movsl
addl
mov
sbb
dec
mov
inc
arpl
pop
push
mov
mov
jo
dec
and
popa
jno
add
sbb
jno
test
jno
cmp
xor
lea
jae
jmp
push
movb
lea
call
pusha
pusha
push
mov
pusha
lea
jmp
not
seta
mov
jmp
pop
mov
repz
icebp
sub
jle
xor
sub
mov
repnz
pop
push
ret
xor
pop
sahf
inc
adc
outsl
xchg
pop
sbb
mov
pop
jle
outsb
in
mov
loope
out
xchg
ret
test
lret
rcrb
icebp
xchg
out
add
and
add
cmpsb
pop
push
sbb
repz
xchg
sbb
push
scas
sti
imul
jmp
stos
mov
adc
pop
lahf
lods
pop
icebp
or
lock
je
sub
sub
add
in
les
fcoms
push
movsb
aaa
jbe
sub
aas
and
aaa
pop
fdivrl
and
ret
inc
sub
les
fldl
dec
pop
jle
pop
pop
outsl
inc
test
dec
xor
in
pusha
mov
testl
subl
pop
jge
mov
aad
arpl
aaa
es
push
jbe
out
insl
popa
insb
in
out
push
mov
loope
pop
or
ljmp
mov
ljmp
in
push
shl
mov
les
hlt
loopne
inc
scas
stos
icebp
insb
in
xor
aaa
lds
jg
mov
mov
dec
aas
daa
pop
das
outsl
cmpsl
add
imul
data16
daa
ja
jmp
cli
xor
jno
and
pop
lahf
lods
push
in
mov
jle
cs
jp
mov
imul
add
lods
xor
out
movsb
sub
pextrw
mov
and
inc
pop
inc
jl
loope
jecxz
mov
push
jne
sbb
add
les
dec
and
insb
or
or
insb
je
mov
or
hlt
insl
pop
das
lea
xchg
nop
and
mov
xchg
sbb
lahf
in
mov
rcrl
test
fyl2x
dec
aad
adc
aam
xchg
add
push
mov
movb
push
lea
jmp
push
inc
mov
bswap
inc
pop
ljmp
out
lret
push
sbb
inc
xor
out
inc
adc
push
out
inc
cmpsl
lahf
xchg
cli
stos
lret
sbb
repz
outsb
inc
fsubl
adc
mov
arpl
data16
jge
or
iret
repnz
mov
inc
dec
sbb
dec
jo
roll
test
mov
mov
fsubs
and
and
push
scas
adc
lahf
add
movl
pusha
movl
movl
pushl
pusha
pushl
lea
jmp
mov
movl
pushl
jmp
inc
rclb
jo
sub
xchg
cmp
outsl
aaa
sbb
shll
add
jecxz
jbe
inc
arpl
mov
andl
push
cmp
ficoml
mov
mov
std
jmp
or
pushf
push
ljmp
and
dec
mov
inc
inc
pushl
jg
lods
xchg
and
dec
cmp
mov
jmp
mov
dec
cmpsb
stos
cmpsb
repnz
lret
pop
lahf
scas
inc
roll
pushf
stos
push
pushf
lea
jmp
cld
out
cmpsl
cmpsl
addr16
xchg
out
and
pop
test
dec
aas
add
mov
outsl
fstp
test
jb
inc
push
adc
repnz
test
xor
push
mov
aaa
mov
and
mov
enter
push
jb
push
movsb
sub
inc
mov
cs
mov
cmp
xchg
shlb
je
pop
je
mov
and
jl
sub
pop
lahf
scas
xor
pop
adc
jb
shll
jg
jg
xchg
jg
aaa
add
jno
clc
insb
mov
ja
aam
push
out
movsl
fiadds
outsb
cmp
inc
loope
jno
sti
xor
mov
je
fdiv
mov
xlat
imul
lock
push
xchg
in
movb
xor
mov
add
mov
cmp
pop
lahf
test
pusha
and
in
or
imul
sbb
leave
xor
cld
sub
lcall
cmp
mov
and
pop
sbb
int3
push
ret
jg
jne
jb
adc
lods
ss
inc
pop
push
cmp
xchg
sub
and
pusha
push
bound
inc
je
xor
lock
cmp
inc
jmp
mov
lods
fsubr
sub
mov
test
mov
xor
mov
cmc
stos
mov
imulb
leave
lds
cltd
cltd
pop
lahf
test
jmp
ljmp
mov
in
mov
jecxz
aaa
and
into
sbb
mov
xlat
push
dec
mov
out
push
sub
mov
dec
inc
lods
nop
and
test
push
lods
adc
lret
xor
mov
cmpl
cmpb
cwtl
xchg
nop
in
aam
inc
pop
lahf
test
lret
movsbl
clc
mov
pushf
clc
cmpb
pushl
jmp
ja
push
xor
mov
jnp
push
xchg
mov
fcmovnb
dec
comiss
push
jp
cmp
pop
lcall
mov
xchg
std
dec
push
mov
mov
and
loop
cmp
cmpsb
xor
outsl
pop
push
adc
add
jnp
in
mov
iret
jb
ficompl
int
daa
xor
out
imul
cmpsl
sbb
bound
inc
rcpps
bound
test
into
dec
insl
nop
jns
movsl
mov
mov
sbb
sub
loope
test
je
test
sub
jmp
in
pop
ret
aas
sub
cmp
in
cwtl
add
cmp
nop
and
lods
xor
out
sub
adc
pop
sub
cs
xchg
sbb
jno
mov
add
loopne
mov
push
imul
je
lret
sbb
mov
add
pop
sub
cs
sub
cmp
and
adc
pusha
idivb
ret
data16
aam
mov
add
enter
jnp
out
lcall
jp
pop
push
out
lahf
stos
and
scas
cmp
sahf
push
push
mov
adc
push
loop
mov
add
xchg
push
mov
loop
push
xor
loope
mov
mov
inc
inc
lcall
psubq
push
test
ja
lcall
loopne
ret
mov
pop
and
cs
imul
sbb
cld
call
inc
call
daa
jnp
iret
jecxz
dec
inc
sub
jae
mov
lahf
stos
repz
fsubl
addr16
mov
mov
pushf
push
les
mov
pop
iret
inc
adc
dec
in
stos
sahf
cmpl
xchg
jmp
movsl
fsubr
subl
clc
xor
shlb
pop
add
cli
insb
lods
lcall
jge
outsb
pop
mov
out
jg
jns
sar
das
cltd
arpl
mov
in
cld
sub
jae
xchg
mov
jnp
mov
adc
test
ret
jmp
push
cmp
lds
stos
xor
jbe
adc
pushl
pushf
lea
jae
push
movb
lea
jne
push
jmp
lea
call
push
push
lea
jmp
push
or
pop
call
sbb
adc
xor
nop
or
in
shlb
cmp
sub
fisubs
stos
jecxz
popf
xlat
mov
pushf
mov
das
icebp
aad
ljmp
jbe
jb
loop
pop
lahf
xchg
mov
inc
and
cmp
xchg
mov
adc
sbb
cmp
fpatan
rcl
dec
loop
push
jnp
out
fwait
sti
pop
movsb
cmp
std
je
cmp
mov
cltd
scas
aaa
mov
xor
mov
sbb
jno
push
je
cs
sahf
and
bt
add
push
enter
push
pop
in
sahf
mov
jl
xchg
fnstenv
repz
sbb
cld
repnz
andl
push
sub
push
jae
inc
mov
arpl
pop
add
gs
sub
cmp
stc
repnz
pushf
movb
lea
jne
jmp
mov
stos
mov
add
push
insb
loopne
mov
xor
push
push
ja
push
pop
sub
pop
jnp
in
and
notl
ja
jo
stos
insb
jp
fistl
sub
dec
into
mov
xor
mov
imul
adc
in
je
mov
inc
mov
adc
mov
mov
push
dec
cwtl
push
jmp
and
sbb
fwait
out
pop
dec
inc
sti
aas
cmpsl
mov
xchg
imul
xchg
mov
lret
jge
jge
push
dec
and
in
lea
ljmp
cmp
adc
in
fists
push
int
andl
lahf
sbb
dec
out
adc
test
adc
xor
scas
shlb
movsl
jl
and
xor
int
mov
pop
cli
push
mov
push
lahf
xchg
mov
cmp
or
jp
enter
ret
fwait
imul
add
jmp
jnp
shlb
cmp
push
sub
lds
lods
pop
jae
clc
pop
pop
push
mov
or
out
jo
xchg
push
loope
clc
in
sub
adc
in
pop
jle
movl
push
mov
mov
fmuls
aaa
mov
bound
out
cmp
xchg
push
ret
scas
push
bound
sahf
fmulp
loop
pop
lahf
xchg
pop
adc
add
push
gs
outsl
jb
addr16
jne
fs
imul
xor
pop
icebp
sbb
cmc
fstl
fstl
aad
jge
lds
pusha
mov
inc
cmp
sbb
ja
out
add
xchg
test
or
dec
xchg
in
xor
push
andl
jo
stc
jbe
int
sbb
inc
loopne
fidivrs
inc
sub
bound
or
jb
or
rorl
add
xor
rcrl
iret
arpl
shll
in
mov
gs
push
orb
loop
in
and
pop
mov
popf
add
in
loopne
push
cwtl
pusha
pop
lahf
xchg
mov
out
fiadds
insl
cmpsb
subb
out
data16
lcall
mov
mov
out
imul
inc
or
mov
pop
inc
popa
jge
subb
std
rorl
cmc
adc
test
ljmp
xchg
test
ljmp
dec
sarb
push
out
dec
mov
jle
pop
lahf
xchg
sbb
dec
mov
call
push
lea
ja
jmp
aaa
dec
loop
inc
test
add
add
inc
sub
add
sarl
mov
inc
lret
sub
xorps
dec
dec
lock
inc
lods
imul
out
push
jmp
xchg
iret
cmpsb
mov
and
aam
mov
jmpw
adc
test
and
lods
loop
dec
inc
inc
pop
cmp
test
test
dec
mov
xor
xchg
lea
or
cli
into
push
out
ljmp
cli
sbb
pop
xchg
add
sub
subl
pop
and
mov
in
sahf
mov
or
adc
jb
mov
pop
push
sbb
idivb
and
mov
or
jle
xchg
cmp
xor
rol
dec
les
xor
xchg
jle
rclb
pusha
lea
jae
push
pushf
jmp
int3
mov
out
sbbl
mov
jns
cmp
and
jns
or
mov
pop
movsl
adc
in
inc
adc
push
or
xchg
cmp
test
fnsave
ss
push
push
mov
mov
mov
lds
mov
lods
js
mov
sub
dec
aas
dec
inc
sub
clc
add
arpl
push
shlb
les
pop
sub
push
mov
pop
into
stos
sub
cmpsl
xchg
jg
xchg
in
mov
xor
scas
cmp
or
fmull
loop
mov
cmpsb
mov
xchg
outsb
icebp
jge
pop
adc
out
daa
lds
jecxz
stc
mov
lahf
xchg
fimuls
sub
scas
int
add
sub
add
or
and
pop
cmp
ret
jge
pop
xor
adc
xchg
sysret
ljmp
push
icebp
mov
mov
lcall
push
dec
xor
adc
ficomps
daa
jno
lret
inc
subb
ja
js
je
push
lahf
or
sbb
insl
push
imul
in
adc
pop
js
enter
pushf
lcall
pop
std
pop
sub
test
cmpsb
hlt
andb
lcall
mov
bound
jmp
xchg
mov
lds
shlb
add
pop
lahf
xchg
jnp
and
enter
cmc
int3
in
pop
cmp
pusha
and
js
enter
je
pop
xchg
cmpsb
sbb
jmp
push
adc
cmpsl
xchg
jg
rorb
sbb
mov
repnz
jae
or
pop
cmp
test
adc
push
pop
push
jecxz
pop
repnz
and
mov
gs
call
lret
push
cli
bound
mov
ss
lea
jmp
mov
lcall
xchg
sahf
pop
ret
mov
out
jnp
jp
mov
xor
outsl
fpatan
jb
jnp
pop
xor
popa
push
fadd
mov
sub
push
push
ficoml
mov
std
aad
inc
xchg
mov
and
jno
and
mov
jle
clc
pop
jne
adc
push
dec
xchg
out
add
pop
jae
pop
pop
lahf
xchg
push
loope
dec
ja
shll
adc
pop
shlb
and
push
mov
xor
jbe
sub
cmpsl
mov
imul
dec
in
or
xchg
mov
xor
mov
sbb
xchg
jmp
jge
fsubr
push
and
outsb
repz
mov
push
out
leave
or
push
test
push
mov
roll
sub
popa
jne
mov
xchg
aam
jbe
add
mov
fidivs
push
negb
loop
mov
ljmp
shlb
push
hlt
ficoml
outsl
push
out
dec
ds
dec
cmpsb
fildll
adcl
fwait
mov
insb
bound
test
shll
repnz
ljmp
inc
push
fsts
add
jl
xor
into
push
rclb
dec
mov
add
pop
movsb
adc
pop
lahf
popf
dec
fdivp
sub
cmc
stc
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
sub
out
fsts
xor
jne
push
xchg
imulb
dec
dec
inc
push
scas
and
stos
js
pop
sbbl
nop
scas
xlat
pop
aas
movsl
cmc
cmp
xor
ficoms
cmpsl
pop
sub
inc
mov
pop
in
jb
in
sub
jge
leave
insb
pop
sbb
pop
pop
scas
insb
test
cmp
stos
xchg
jne
sbb
xor
cmc
lods
jecxz
push
shll
push
aam
xor
jae
stos
jmp
aaa
das
adc
popf
loopne
xchg
and
sahf
lret
sub
subb
dec
xor
add
mov
enter
imul
jmp
mov
movsl
or
mov
mov
je
movsb
cwtl
and
in
push
mov
fs
xchg
sub
inc
inc
movb
fisubl
ficomps
imul
jne
cmp
pop
lahf
pushf
imul
mov
iret
out
aas
add
jmp
mov
or
jle
pop
das
jae
push
cmp
fisubrs
mov
mov
xor
stos
jo
int3
xchg
xor
mov
insb
and
mov
dec
pop
push
push
test
or
mov
mov
bound
je
mov
xchg
push
idivb
mov
pushf
loop
sub
rorb
pop
ret
mov
scas
ret
cmp
aaa
pop
lahf
pushf
mov
out
dec
mov
inc
mov
das
mul
imul
stos
addr16
add
pop
pop
notl
jmp
inc
jg
xlat
push
out
mov
sbb
pop
dec
xchg
xor
mov
mul
in
repnz
lods
xchg
and
pop
sub
xor
and
scas
push
insb
aam
das
pop
xchg
and
xchg
fldenv
out
aas
cmpsl
jmp
mov
pop
addps
pusha
push
pushf
lea
jne
push
setbe
pushl
pushfw
popw
cmc
mov
stc
call
fwait
cmpsb
jle
sub
or
dec
les
je
js
pusha
pop
push
fwait
call
or
push
addr16
out
insb
movsb
jmp
daa
jg
mov
cs
mov
jle
jo
adc
mov
loope
inc
icebp
or
add
push
xor
xchg
mov
je
jo
int3
faddl
ds
enter
rcll
add
add
adc
inc
push
subb
or
je
sub
xchg
pop
add
les
inc
cmp
inc
add
inc
xor
or
ja
pop
subb
in
test
mov
std
and
pop
mov
data16
faddl
data16
inc
xor
and
in
in
rcr
icebp
dec
out
or
push
adc
inc
std
call
shll
push
xchg
loop
lock
xor
xchg
xchg
pop
imul
xchg
push
mov
ljmp
bound
js
test
fidivl
and
es
mov
jb
cmpsl
loop
mov
aam
test
hlt
call
mov
xchg
cmpsl
daa
cmpl
outsl
aaa
sbb
ljmp
sahf
adcb
cmp
outsb
stos
or
cli
bound
cmp
outsl
movsl
stc
cmpl
daa
or
jae
push
xor
aas
and
mov
in
or
mov
loop
loop
test
pop
mov
sub
mov
dec
cmpsb
push
xchg
outsb
decb
out
cmp
les
clc
adc
lahf
imul
rcrl
jg
xchg
lahf
cltd
push
loop
cmp
mov
cmc
stc
cmp
add
mov
test
jmp
lea
jne
btr
mov
bswap
bsf
sub
neg
push
sar
lea
cmp
sub
test
movw
pushl
popl
pushf
clc
call
gs
rclb
test
adc
lea
jne
sub
mov
add
fmull
cmp
lret
push
jg
mov
add
imul
icebp
mov
mov
xchg
jle
xchg
and
cmpsl
add
scas
inc
mov
mov
aas
pop
das
scas
adc
shrb
xor
and
inc
xchg
clc
push
and
cmp
pop
dec
mov
cltd
jmp
pop
lahf
cwtl
test
aad
stos
pushl
pushf
pusha
movb
lea
jmp
jl
ss
repnz
adc
out
dec
and
out
mov
jne
ja
jg
bound
sti
lock
mov
mov
ja
pop
jl
jle
add
jnp
les
dec
loopne
or
xor
pop
dec
fisubrl
nop
idivb
cmp
stos
inc
ljmp
mov
gs
jp
popa
xchg
add
repz
dec
inc
push
repz
cwtl
aaa
inc
andl
ljmp
pop
and
call
shr
cmp
cmp
push
push
pushf
lea
je
call
mov
dec
btc
mov
push
sub
pusha
rep
bswap
movw
mov
pushl
lea
jmp
pusha
movb
mov
lea
je
cmc
cmp
pushf
cmp
jmp
sub
sub
sub
mov
sbb
cmp
jnp
loop
pop
mov
mov
loopne
and
lret
jp
xor
push
xchg
in
jle
fisubs
stos
shrb
dec
push
cmpsb
and
test
pop
jg
mov
cmp
sub
xchg
and
mov
xor
pop
pop
inc
loope
jno
int
xor
mov
pop
push
mov
cmc
jg
lea
call
push
jmp
aaa
icebp
cmc
jmp
jbe
orb
test
les
mov
sbb
ret
aaa
cs
xchg
jl
ss
pop
lock
dec
sbb
xor
xchg
adcl
push
outsl
jmp
mov
inc
aaa
xchg
inc
out
stos
dec
das
lret
dec
cmp
mov
fstps
das
mov
jmp
or
popw
popf
lea
sbb
cmp
cmp
pop
lahf
lcall
scas
mov
or
push
lret
outsb
jp
ss
sbb
les
in
popf
xor
xlat
lds
dec
fildll
mov
pop
popf
scas
addr16
lahf
xchg
sub
inc
cmp
pop
sar
mov
das
test
jmp
into
or
push
fstpt
xchg
xchg
scas
sti
jecxz
lahf
lcall
scas
popl
pushl
pop
xor
pop
jg
das
ljmp
push
bound
mov
ss
cmp
pop
pop
push
or
push
jecxz
and
mov
std
or
inc
mov
jns
arpl
push
pop
test
mov
pop
jecxz
sub
lds
scas
and
xor
mov
sarl
and
or
jge
add
mov
negl
lret
mov
pop
pop
lahf
test
sbb
imul
xchg
sti
xchg
das
data16
scas
inc
push
mul
dec
out
dec
ret
push
or
jbe
lcall
cmpl
dec
pop
scas
neg
mov
push
add
push
imul
imul
out
jecxz
shr
fsubrs
xor
mov
add
and
shl
xchg
and
cmp
pop
ret
icebp
xchg
stc
inc
lods
add
or
inc
cltd
sbbl
repz
pop
mov
xchg
daa
movhps
stc
mov
rclb
fdivrp
aad
push
cwtl
pusha
sub
jl
cltd
insb
cld
add
mov
movsl
insl
inc
sub
cmpb
scas
push
daa
mov
clc
and
leave
add
stc
insl
lock
mov
jb
pop
xor
lcall
adc
inc
inc
xchg
sbb
push
dec
das
inc
lahf
or
xchg
pop
lahf
test
sbb
add
jecxz
inc
sbb
enter
dec
aad
imul
xor
pop
bound
inc
xchg
inc
add
xor
repnz
jg
pop
pop
push
mov
out
xchg
sar
rcll
sub
sub
cmp
fs
push
scas
xor
push
shlb
cli
and
adc
adc
hlt
sub
inc
mov
pop
sbb
dec
jmp
push
pop
lahf
test
mov
sub
fdivrs
and
xor
sub
adc
fcomp
notl
data16
sub
cs
mov
and
cmp
arpl
out
push
and
push
int3
mov
popf
mov
ss
repz
xor
iret
dec
mov
pop
sub
mov
sub
cmpsl
daa
out
mov
mov
mov
inc
icebp
scas
xor
dec
mov
aaa
push
ror
ret
and
mov
fwait
cmp
xchg
mov
cli
idiv
test
sub
pushf
push
lea
call
pusha
call
cmp
pusha
push
mov
jmp
pushf
lea
je
shl
cmc
stc
add
add
shl
shl
sub
bsf
or
push
shr
dec
bsr
neg
mov
sub
add
movzbw
jmp
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
daa
xchg
mov
add
cmpsb
negl
push
lret
addr16
out
fwait
imul
mov
cmpsb
cmp
js
mov
dec
jge
sbb
mov
das
outsb
test
in
call
repnz
mov
shll
loopne
add
or
iret
cs
adc
decl
mov
xchg
bound
out
cmpsl
daa
xor
ss
xor
sub
mov
fcompl
fdivl
mov
aam
pop
outsl
mov
aaa
test
repz
adc
jae
repz
cmp
lret
mov
aaa
xchg
fs
or
out
adc
push
cmp
and
sbb
cmpsl
fnstsw
or
push
add
mov
push
test
lahf
andl
jne
aam
cmp
cmp
cli
mov
push
cmpsb
xor
xchg
mov
mov
mov
shr
pop
inc
std
jge
xor
mov
stos
pand
test
push
leave
out
sub
jle
push
mov
cmc
imul
insl
aas
dec
popa
lret
dec
xor
lahf
fwait
cmpl
mov
pop
lahf
subl
and
push
lahf
cmp
mov
add
sub
mov
mov
push
push
idiv
rcrb
inc
push
mov
add
xor
cmp
xor
xchg
inc
sahf
scas
xor
imul
dec
stc
sbb
adc
call
mov
dec
rclb
jecxz
mov
and
es
icebp
int
jmp
and
xor
mov
shl
jmp
fs
jne
jmp
test
cmp
test
pushf
jmp
pusha
pushl
lea
jae
push
sub
movl
pusha
call
inc
pusha
mov
jmp
lea
call
jmp
pushf
jmp
pusha
pushf
lea
call
push
pushl
pusha
pushl
lea
jae
setne
sets
jmp
or
test
aaa
testl
ret
das
xchg
fidivrl
dec
pop
pusha
lret
cwtl
scas
lcall
inc
stos
out
js
mov
jmp
fnstcw
and
jns
add
jno
clc
in
xlat
fcoml
xchg
sbb
mov
fildl
fwait
inc
sbb
stc
and
adc
mov
jecxz
xchg
stos
out
mov
lret
mov
sar
mov
pop
jae
inc
xchg
pop
pop
movl
lahf
adcl
add
xchg
not
mov
not
mov
lea
pusha
mov
pushf
mov
bswap
pop
pusha
push
pushf
mov
pushl
ret
pusha
mov
pushl
pushf
lea
jae
cmc
clc
bt
add
jmp
and
aaa
popa
xlat
insl
enter
and
add
pop
jo
loopne
pop
mov
xchg
cmp
fidivs
or
adc
sahf
insl
insl
popa
cmpsb
cltd
insb
add
inc
out
jno
xchg
mov
pop
shl
dec
lds
cmpsb
sub
cli
insb
mov
push
adcl
lahf
es
aas
xchg
and
mov
arpl
stc
jmp
mov
push
jb
outsb
push
out
out
mov
ss
lahf
andb
shll
outsl
out
aas
iret
jmp
rcrl
push
jmp
ffreep
add
push
jg
sbb
inc
mov
push
pushf
mov
rcll
xchg
jne
cmp
mov
xchg
cmc
addr16
fiaddl
testb
lods
mov
ret
cmpsl
and
out
cmpl
cmp
xchg
out
push
pop
iret
pop
lahf
adcb
inc
call
add
inc
gs
outsl
fs
gs
imul
add
mov
out
push
sub
add
mov
out
cmpsl
lahf
out
jns
push
inc
sbb
repnz
andb
stc
push
jb
jns
and
jl
cmp
into
or
les
outsb
lret
pop
pop
adc
add
nop
es
cmp
ds
aam
pop
xchg
das
mov
into
sbbb
popf
xor
dec
xchg
stos
mov
cmpl
inc
fldenv
inc
lahf
and
mov
fbstp
xchg
outsl
pop
lahf
lea
and
add
add
add
add
cmp
pop
dec
add
add
fwait
js
add
add
add
add
add
add
add
pop
add
pop
add
add
add
rcrb
add
add
add
add
pop
add
js
add
inc
jb
popa
je
push
jb
arpl
jae
inc
jne
add
je
bound
add
je
outsl
imul
inc
inc
outsl
fs
insb
add
add
mov
mov
mov
mov
ss
and
scas
xchg
jle
dec
sbb
into
mov
jp
and
int3
inc
popf
cmp
push
jno
loope
popa
imulb
push
mov
es
filds
imulb
push
ljmp
loopne
das
mov
jno
pusha
out
push
inc
mov
imul
cmp
in
mov
dec
pop
dec
imul
pop
jbe
xor
loopne
and
or
pop
lahf
mov
push
cmp
out
out
mov
bound
adc
jle
data16
ds
scas
xchg
push
mov
xchg
dec
inc
jecxz
cmovo
rol
xchg
pushf
scas
mov
and
mov
into
cmc
push
or
test
cld
mov
xor
stos
cs
lret
gs
or
sbb
jb
and
fiadds
cmp
inc
cmp
xchg
mov
xchg
sub
popa
leave
or
mov
jnp
lea
jne
call
pushf
pushf
push
lea
je
cmc
pushf
cmp
add
call
lret
xor
pushf
rorl
inc
cmp
cs
xchg
push
lret
ljmp
out
into
fwait
shrl
or
fcompl
icebp
jmp
jge
sbb
cltd
jns
pop
lods
mov
stos
mov
shl
iret
add
mul
add
ljmp
xor
xchg
dec
inc
sub
mov
xor
scas
xor
cmpb
aam
mov
in
sub
je
mov
pop
push
cmpsl
xor
adc
mov
jns
or
stc
addl
mov
mov
or
mov
add
jo
in
andb
test
fnstcw
or
push
lods
pop
roll
sbb
cmpl
adc
sti
inc
push
outsl
xchg
mov
mov
xchg
pushf
aas
cld
movsb
cmp
jp
mov
sarb
dec
sbb
jle
xlat
and
in
popf
fildl
ljmp
xchg
mov
add
mov
mov
jns
cld
mov
and
xchg
addr16
pop
and
stos
mov
ret
mov
mov
int
or
pop
imul
in
in
add
std
sbb
dec
inc
adc
cmp
test
je
inc
shll
and
sbb
lock
test
xor
dec
icebp
add
or
and
in
stc
cmp
int3
jp
mov
nop
test
dec
cmp
int3
pop
cmp
pop
pop
in
pop
lahf
mov
cmp
outsl
das
adc
nop
push
popf
das
bound
mov
ret
stos
mov
dec
push
xor
push
push
pop
mov
sti
out
das
mov
cwtl
ss
lods
xchg
scas
inc
in
ja
mov
lcall
jl
jae
add
add
fs
mov
jb
pop
push
pop
ja
cmpsl
lret
aas
jle
adc
out
movsb
add
cld
pop
test
sub
pop
mov
mov
mov
lret
inc
sbbl
jmp
dec
pop
sbb
jmp
pushl
mov
ljmp
icebp
lcall
adc
sub
hlt
sbb
mov
imul
jmp
xor
lods
ret
inc
or
insl
pop
out
xchg
aas
cmpsl
mov
push
imul
or
pop
fisttps
and
rcrb
mov
mov
fcom
loopne
mov
sub
adc
cld
fsubr
fistpll
and
pop
shll
iret
mov
daa
mov
adc
cld
int
jg
pusha
pop
jecxz
mov
inc
adc
inc
outsb
cmp
jb
insl
jne
sbb
cmp
out
test
fmuls
push
addr16
sub
mov
add
addr16
maxps
adc
lahf
mov
push
push
fs
ss
outsl
sti
xchg
imul
iret
stos
jnp
pop
pop
cmpsl
mov
adcb
fildl
xchg
adcb
xchg
mov
sub
leave
push
or
hlt
fisubl
loope
ret
fldl
jp
cwtl
mov
repnz
inc
xor
cmp
mov
rorb
push
imul
data16
xchg
lret
ss
sub
pop
lahf
mov
inc
pop
clc
shrd
btr
push
mov
bt
pusha
and
cmc
movb
add
pushf
pushf
lea
jmp
jmp
call
push
or
xchg
dec
sar
pop
sbb
dec
adc
add
or
jno
inc
pop
lahf
jns
cmc
mov
aad
add
xlat
push
mov
jno,pt
cli
lods
gs
push
addr16
mov
dec
cmp
pop
jae
bound
fidivrs
cltd
mov
repz
lods
push
sub
out
push
push
add
xchg
out
or
pop
lahf
mov
popa
leave
pop
ss
outsl
mov
popf
sub
cmp
jmp
je
cli
xchg
addr16
mov
or
rorb
fnstsw
out
stc
xor
and
pop
in
xchg
andl
popf
push
in
adc
movsl
leave
add
inc
addr16
fiaddl
cmp
push
xchg
and
hlt
in
cli
cmpsl
outsl
popa
cmp
dec
ret
pop
jae
mov
ja
dec
sub
jp
das
mov
into
pop
adc
loope
or
jns
mov
and
repnz
push
fcoml
jno
jo
ja
and
cmpsb
repz
rolb
cltd
xor
pop
lea
sbb
sub
dec
cmp
out
inc
bound
xor
loope
and
jno
add
sbb
in
pusha
pop
cld
dec
xor
insb
mov
pop
lahf
mov
and
aam
mov
cmc
arpl
leave
xchg
popf
cltd
insl
icebp
imul
cmp
cmpl
adc
and
nop
shlb
jbe
fdivl
es
rcrl
jl
std
out
xchg
scas
jg
pusha
cmp
push
pop
test
push
pop
daa
xchg
test
mov
fsubrl
shlb
mov
shll
or
mov
sbbl
mov
mov
jmp
shrl
mov
mov
cld
mov
xor
sub
jp
cld
lret
pop
out
mov
lret
pop
loop
inc
cmp
push
xchg
adc
arpl
subb
cld
loope
mov
push
ja
cmp
int3
sub
js
bound
out
xor
push
push
lahf
jg
jno
cmp
mov
pop
bnd
and
inc
pop
jb
rolb
add
enter
sbb
cld
hlt
mov
nop
xchg
xor
pop
lahf
jne
repz
cmp
mov
pushl
pushf
push
lea
je
pusha
test
cmp
movb
jmp
jno
dec
push
dec
repnz
mov
mov
mov
arpl
aas
pop
inc
das
fwait
loop
cmp
xor
inc
dec
add
ret
or
imul
popf
push
jnp
xchg
jns
arpl
sarb
cmp
fdiv
subl
inc
inc
sub
adcl
mov
aam
cmp
or
xor
sbb
arpl
das
jae
dec
das
daa
xchg
fisttpl
lahf
jne
stos
nop
pop
out
fistpl
add
xchg
push
dec
push
es
mov
push
cmc
jo
aad
inc
xchg
mov
adc
dec
jmp
xor
movsl
test
jae
incb
arpl
push
test
mov
cli
add
fldenv
mov
cmp
add
mov
sub
or
fildll
shll
mov
pop
mov
gs
pushf
test
pop
adc
movsl
mov
leave
push
dec
inc
test
js
jno
add
fdivrl
or
xchg
cmpsl
pop
lahf
je
jno
xor
test
inc
cmpsl
insb
and
out
into
mov
ds
jp
fwait
push
xchg
pop
mov
or
int3
imul
add
fwait
jo
sub
lea
frndint
out
imull
adc
aam
iret
jne
cmp
pop
mov
push
sbb
hlt
xlat
adcl
mov
cmp
or
movsb
test
inc
xor
adc
push
addr16
nop
pop
dec
sub
mov
mov
jecxz
fwait
repz
das
pop
pop
lahf
ja
std
adc
sar
ljmp
mov
pop
dec
cmp
jbe
cli
adc
lock
jbe
sbb
adc
fxch
push
fdivr
xor
xor
out
andb
push
xchg
jo
mov
ljmp
inc
xchg
mov
xor
stos
xor
mov
aas
rorl
pop
mov
cli
jo
rclb
adc
ja
dec
inc
cmp
pop
pop
lahf
ja
push
or
pop
xorl
into
dec
sbb
mov
mov
lods
lahf
mov
cld
rorl
jg
gs
or
lahf
jns
mov
rcll
push
sbb
loopne
push
jb
add
fidivs
xchg
and
pop
and
out
scas
xor
int
loopne
jl
xchg
sbb
into
sbb
mov
jbe
fcoml
sub
mov
adc
mov
sub
popf
inc
push
sti
scas
jl
xor
pop
jg
lock
mov
cwtl
fisttps
or
icebp
lea
orb
gs
inc
xlat
cld
xchg
sub
mov
push
pop
stc
test
bound
push
cmpsl
jbe
xchg
jg
clc
push
pop
shlb
mov
cmp
xor
movsb
xchg
pop
lahf
jbe
jb
add
inc
js
je
jb
arpl
jae
mov
test
mov
cmp
pusha
pushf
lea
ja
jmp
scas
jno
and
das
les
inc
add
or
jns
jns
aad
mov
std
iret
cmp
lret
popf
cmc
dec
adc
mov
loop
in
xor
repnz
fmull
sub
adc
push
jle
lret
add
dec
mov
int3
fsubr
dec
xchg
ret
and
and
mov
push
lahf
nop
xchg
data16
loop
mov
into
inc
mov
lahf
jno
in
mov
sub
fidivrl
xchg
jne
mov
cmp
sbb
inc
sub
push
repnz
fimuls
repz
daa
jg
xchg
das
fs
aaa
mov
lds
lea
push
lea
stc
int3
test
push
dec
rcll
loopne
in
adc
jo
sub
fadd
arpl
fwait
and
pop
lret
or
pop
lahf
jno
cwtl
scas
addr16
cs
and
mov
push
cmp
out
jnp
pop
push
xor
dec
clc
inc
sub
sahf
and
cmp
xor
stos
sub
and
outsl
pop
jne
shll
in
sub
adc
js
ja
das
insb
add
inc
sbb
lods
lcall
push
push
cmp
push
inc
add
and
inc
es
pop
inc
popf
jbe
scas
imul
test
insl
push
jmp
sub
fstl
outsl
sti
out
xor
int3
loope
mov
das
repz
fsubrl
aam
mov
cmp
daa
cmpb
jae
pop
lret
jecxz
jmp
fcompl
push
and
js
cmp
jns
test
or
cmp
daa
sarl
adc
mov
adcb
pop
sub
cvtps2pi
repz
pop
fwait
cmp
fidivrs
das
std
or
jge
xor
cmp
cs
inc
loope
pushf
fwait
inc
nop
mov
repnz
stc
neg
aaa
fdivr
mov
shlb
sbb
sub
imul
js
or
push
and
ds
adc
push
xchg
push
pop
ljmp
mov
xchg
stos
repz
xor
shll
cmp
adc
sbb
lahf
jae
divl
jl
ja
cmpsl
cmp
inc
ja
mov
incl
fwait
xchg
loope
das
jo
mov
mov
xchg
and
aad
push
mov
pop
out
pop
sbbl
inc
adc
fimuls
data16
aad
int3
adc
out
cltd
xchg
dec
sbb
jmp
mov
leave
in
sbb
scas
and
in
and
sti
repz
filds
and
imul
jae
mov
mov
orl
mov
bound
mov
mov
stos
jecxz
cmpsb
jae
add
cmpsb
mov
push
shrl
test
outsl
pop
andb
dec
adc
and
push
pop
xorl
xor
mov
jnp
iret
inc
nop
repnz
dec
mov
push
jecxz
jae
sub
sub
das
pop
lahf
jb
or
pushf
call
push
in
shrb
in
and
push
dec
rolb
nop
cld
adc
js
enter
es
test
sti
mov
pop
repz
out
or
ds
sub
mov
sub
dec
sub
cmp
aaa
iret
lods
scas
aam
mov
xchg
out
ret
or
neg
mov
mov
inc
jp
jno
adc
es
aas
jle
push
sub
cli
out
push
lret
cli
push
push
pop
scas
ds
fisubl
lea
lea
ja
rol
ror
test
sub
clc
clc
cmp
add
neg
rol
sub
mov
cmp
test
mov
pushf
pusha
pusha
test
repnz
call
xchg
pushf
movl
call
mov
xor
jecxz
lock
outsb
test
jo
push
sbb
enter
js
push
or
scas
mov
cltd
sub
fcomip
push
adc
fwait
aas
and
lahf
inc
and
test
stc
fimuls
pushf
test
enter
lds
xchg
adc
aam
add
mov
cmp
mov
cs
jp
stos
ret
loop
sahf
push
cli
jbe
lahf
jge
pop
xchg
push
mov
aad
or
add
rol
xchg
jge
and
in
out
sub
pop
sub
pop
mov
sbb
data16
mov
cmpsb
sahf
idiv
jb
into
dec
das
shrb
xlat
dec
lea
cmp
inc
ja
inc
fnstenv
fdivs
push
mov
adc
xchg
lock
sarl
ret
das
and
and
or
notl
mov
lea
jne
mov
dec
ss
call
xorl
das
daa
pop
ja
mov
lahf
jl
sbb
jmp
jne
insb
call
push
dec
ret
shrb
int3
inc
xor
jo
pop
push
and
out
inc
adc
xchg
or
jne
das
aaa
aam
inc
lret
bound
sti
dec
jge
push
test
int
test
orb
icebp
mov
sub
neg
and
insl
cmp
pop
shll
xchg
jns,pn
and
outsl
stos
daa
pop
shrl
mov
xor
fsts
mov
icebp
inc
lea
jns
lahf
jl
push
push
push
call
push
pushf
movl
pushf
jmp
es
mov
popa
movsb
out
mov
mov
cmp
imulb
xchg
add
push
adc
movsw
cwtl
outsl
xor
xchg
pmaxub
add
aad
jo
mov
out
loopne
aas
in
xor
jo
jmp
pop
cli
mov
add
sub
bound
fnsave
mov
inc
dec
mov
es
lret
jg
and
dec
inc
pushf
pushf
dec
inc
sub
xor
push
xchg
lea
rol
adc
rcl
bt
mov
ror
sub
mov
jns
clc
pushf
xchg
btr
ror
jmp
lds
mov
pushf
out
test
mov
sub
dec
pushf
call
jnp
xorb
neg
push
decl
fldl
ds
pop
xor
dec
fsubl
imul
mov
inc
lock
lret
pop
loop
add
mov
insl
jne
cs
jno
inc
or
mov
mov
pop
cmpsb
mov
mov
jle
jmp
gs
jne
jb
push
popa
insb
jne
inc
js
add
adcl
xor
push
jmp
jle
or
rol
imul
pop
cmp
sub
clc
pusha
aam
aam
mov
popf
or
mov
sbb
mov
pop
xchg
ja
fisubrl
cmpsb
mov
sbb
push
pusha
arpl
filds
pushf
std
arpl
iret
sbb
loope
lret
repnz
pop
adc
in
mov
xor
sahf
xchg
cltd
xor
xor
aad
cltd
std
inc
sub
pop
push
in
push
rcll
xchg
lea
call
push
mov
pusha
pushf
lea
jmp
lea
je
stc
push
cmp
cmc
add
call
xor
in
leave
inc
jp
cmpb
push
jle
adc
cli
cmp
inc
xor
jno
pop
push
insb
mov
xor
xchg
orb
adc
imul
xchg
cmp
repnz
dec
xchg
cs
xor
adc
mov
inc
inc
jl
add
pop
sub
mov
cmp
adc
xchg
jmp
pop
lahf
jns
push
aaa
pop
rorl
movsb
jmp
or
pop
jg
pop
jmp
dec
sub
pop
out
jecxz
jp
divl
dec
ret
nop
cmpsb
xacquire
lret
rcrl
pusha
sub
mov
stc
push
dec
out
lock
ffree
pop
dec
and
cli
mov
fsin
shlb
dec
dec
mov
std
aad
cmp
lret
lock
xchg
and
sub
fimuls
push
xchg
push
jp
pop
lahf
jns
vcvtps2dq
into
sbb
gs
inc
adc
cmc
loope
xchg
add
or
inc
and
jnp
mov
clc
sub
aaa
in
in
gs
inc
jmp
movsl
jo
push
dec
cwtl
push
movsb
cwtl
push
push
push
jbe
out
or
jbe
ljmp
inc
jg
shll
hlt
mov
adc
xor
cmc
icebp
dec
int
jns
leave
loope
inc
cmp
lahf
js
sbb
push
repnz
mul
stos
pop
sub
push
fbstp
xchg
js
pmaxub
scas
pop
xchg
add
arpl
cmpsb
mov
scas
idivb
sub
and
ret
mov
pop
adc
jle
xchg
icebp
fcmovne
fldl2e
outsl
imul
pop
inc
push
mov
push
jno
push
arpl
xor
bound
clc
loopne
fcoms
insb
xor
aas
clc
imul
or
outsb
sbb
cmp
adc
icebp
jne
cmpsl
or
bnd
ret
test
aam
je
aaa
mov
popf
or
fldenv
add
sbb
cmp
mov
aad
ror
adc
add
enter
int3
bound
lahf
insb
lods
je
jnp
cmp
push
test
hlt
push
dec
pop
out
mov
call
dec
mov
popf
jle
pop
cmp
test
loop
fs
push
xchg
ds
push
push
ja
das
xor
out
out
jo
sbb
pop
mov
mov
xor
arpl
mov
jnp
xor
gs
adc
ljmp
data16
insb
sbb
data16
pop
cwtl
lock
div
or
push
sti
lret
pushfw
data16
and
xchg
ja
inc
mov
lea
imul
mov
adc
mov
sbb
test
jae
mov
rolb
mov
repz
cli
jp
mov
lock
mov
stos
js
test
je
xchg
outsb
or
inc
adc
sbb
adc
movsb
push
enter
icebp
out
popa
sub
adc
dec
push
cmc
pop
imul
ret
mov
lods
test
or
push
mov
cmpsl
pushl
pop
pop
pop
lahf
jp
loope
lea
call
test
jmp
rcrb
in
leave
sbb
xchg
pop
jnp
dec
xor
lahf
mov
emms
ficomps
lea
jne
outsb
fcmovbe
or
pop
cltd
loopne
xchg
xor
int
inc
cmp
cmp
loopne
sbb
and
and
mov
cli
jae
push
cmp
cltd
pop
xchg
and
push
jmp
scas
jmp
sbb
or
mov
cltd
sbb
inc
mov
jg
ror
adc
pop
scas
enter
ljmp
dec
sub
sbbl
or
pop
lahf
gs
mov
cmpl
pop
adc
movsl
jno
in
sub
cmp
pop
jbe
cmc
lcall
imul
inc
jbe
ror
lcall
in
pop
adc
ret
jnp
adc
add
testl
add
in
jbe
outsb
shrl
cmc
lods
push
cs
jmp
sahf
in
nop
push
fmulp
es
bound
push
or
mov
pop
lahf
fldcw
pusha
dec
bt
cmc
shl
pusha
setne
push
lods
push
jmp
call
int3
xchg
into
pop
and
hlt
or
inc
sub
fsubrl
mov
inc
adc
sub
test
push
outsl
or
das
pop
jmp
in
xor
cmp
clc
jnp
imul
pop
aad
sbb
enter
fbld
jmp
adc
push
pop
dec
loop
push
pushf
out
std
loope
outsl
test
or
mov
js
test
je
popf
adc
push
cmp
fxch
mov
pop
lahf
fs
out
sub
jg
xchg
inc
push
and
pop
outsl
das
mov
roll
sti
or
sbb
notl
lods
and
ret
cmc
jmp
ss
rorb
insb
cmp
sub
or
shll
mov
fmuls
mov
rol
and
jmp
call
not
mov
cmp
pusha
and
cmc
clc
add
sub
push
stc
jmp
ret
repnz
jne
push
jmp
jne
sub
adc
dec
sbb
sbb
pop
adc
cli
aam
popa
lret
mov
mov
shlb
outsb
gs
into
pushf
ret
push
out
sbb
xchg
out
jnp
filds
sub
pop
jecxz
inc
data16
or
sub
pusha
cmp
dec
aas
cmp
xlat
xor
dec
and
addr16
and
stc
repz
cmp
push
insb
jl
in
mov
xor
ss
fwait
bound
cmp
sub
notl
mov
mov
sbb
test
ffreep
dec
clc
enter
icebp
lds
mov
and
mov
lds
or
addr16
test
xchg
mov
push
popa
jge
pop
push
xchg
and
pop
loopne
repnz
hlt
mov
add
out
insb
test
cmpsb
data16
fsubrp
cmp
sub
cld
xor
ret
add
test
dec
pop
xchg
xor
lds
cmp
gs
pop
lahf
xchg
mov
psubq
sbbb
mov
jbe
fisubrl
add
int3
cli
ss
jecxz
leave
pop
imul
dec
push
hlt
cli
decb
push
or
dec
or
ja
adc
add
and
incl
imul
lret
jge
aas
aad
repnz
pushw
aaa
jnp
jo
xchg
arpl
mov
ficompl
mov
pop
pop
push
mov
mov
sbbb
enter
loope
call
mov
xchg
fstpt
divb
sahf
and
mov
jns
dec
sbb
jno
mov
xor
jmp
cmpsl
fs
mov
xor
mov
rclb
data16
leave
jnp
sti
xchg
adcb
shlb
fldl
cld
xchg
and
add
push
adc
leave
mov
out
rorb
mov
ljmp
popa
mov
cli
adc
push
pushl
lea
jae
jmp
movzbw
bsr
sar
add
add
and
rcl
rcr
mov
add
neg
neg
mov
push
repnz
pusha
pusha
pushf
push
lea
jne
not
movb
lahf
push
mov
lea
lea
jmp
mov
pushf
orb
lea
lods
cwtl
pop
in
push
shl
mov
pop
mov
lcall
jmp
test
movsl
mov
out
mov
lds
int3
mov
cmc
mov
es
sub
out
enter
and
movsl
stos
repnz
es
out
xor
mov
fnstsw
fs
or
repz
aaa
or
cmp
mov
mov
jno
test
js
dec
movsb
lods
inc
inc
lods
adc
pop
lahf
pusha
dec
fdivp
mov
data16
xor
jns
dec
data16
subb
xchg
stos
lret
jbe
bound
jge
mov
rorl
lock
std
leave
sti
ja
inc
adc
adc
sub
popa
clc
rorb
dec
orb
sub
jg
imul
popf
testl
mov
scas
aaa
add
mov
mov
ds
repnz
lcall
adcb
xor
mov
call
lock
fcmovne
ret
inc
xchg
ret
aas
push
shll
xlat
ret
mov
mov
stos
jl
int3
and
arpl
das
imul
mov
test
pop
bnd
popf
sub
pop
push
and
imul
in
cltd
jae
mov
or
adcl
hlt
nop
lods
hlt
loopne
out
repz
adc
outsb
fiaddl
xchg
and
sahf
cli
ficomps
arpl
pop
push
pushf
movl
pushl
ret
xor
jp
ljmp
sub
lcall
mov
loope
loop
pop
rcrb
fcmovnu
lock
jge
fsub
xor
sbb
popl
add
mov
add
test
ret
stc
mov
sbb
mov
cmp
lds
vpmacswd
out
mov
mov
pop
jae
adc
cmc
jno
xor
cmp
mov
rcrb
movsl
jns
xor
les
int3
call
push
js
icebp
inc
or
mov
sub
lahf
cmp
xchg
mov
js
ljmp
xchg
popa
aad
push
push
int3
or
fldt
jmp
sub
lcall
cld
xchg
push
in
lret
test
bound
ret
lds
icebp
push
sbb
data16
or
cmp
stc
nop
add
cli
jecxz
cltd
pop
and
xchg
ja
adc
sbb
add
pop
lahf
bound
dec
pop
lea
call
jmp
sub
das
adc
mov
btc
xchg
mov
cmc
adc
btc
shr
setp
sub
stc
bsr
mov
call
mov
jmp
out
mov
mov
jb
fsubp
sub
sub
fstl
vsqrtpd
mov
dec
pop
mov
pop
mov
out
fucomip
test
cltd
sbb
mov
fstps
mov
jecxz
or
scas
call
jp
mov
rcll
dec
sub
call
addr16
sub
sti
inc
stos
sti
inc
mov
push
out
lcall
sarb
icebp
insl
push
pop
xor
gs
add
dec
loopne
test
or
nop
scas
add
fmuls
pop
inc
pop
loopne
mov
aam
mov
lahf
bsf
jmp
loopne
mov
jb
test
into
mov
popf
adc
movsb
jle
pop
movsb
aad
sahf
ret
fstl
or
sbb
cld
mov
xchg
mov
xchg
addr16
jbe
jno
xor
push
pop
dec
mov
xchg
mov
jge
pop
cmpsl
cmp
test
xchg
adcl
jmp
aas
cmpsl
out
push
out
out
mov
loopne
or
push
adc
es
lds
sbb
add
mov
enter
gs
mov
shrl
lods
mov
in
loopne
or
push
jo
mov
mov
subl
xor
loop
divb
mov
push
pop
lahf
insb
arpl
or
mov
and
mov
lret
mov
mov
mov
aaa
xor
rolb
daa
js
pop
pusha
xchg
or
pop
scas
sbb
mov
fists
mov
ljmp
movsl
in
test
and
or
push
inc
sub
pop
outsl
mov
shl
jmp
pop
lahf
insb
sbb
pop
sub
shrb
ss
cli
lret
jbe
ficoml
fisubs
xor
mov
mov
or
fs
in
clc
in
adc
call
and
in
ficompl
fwait
adc
mov
int3
icebp
gs
cmp
lahf
dec
and
adc
arpl
test
inc
xor
cs
int3
adc
adc
in
jo
shr
fs
fs
lahf
outsl
mov
and
lea
jae
pushf
jmp
push
inc
jl
or
adc
sahf
add
or
in
mov
sbb
cmc
push
and
cmpsb
push
jmp
lahf
xor
pusha
ss
lcall
aas
push
imul
lea
stos
mov
fs
jle
jp
std
nop
ret
mov
xor
cld
pop
and
lds
into
push
xor
popa
sbb
push
mov
push
popf
inc
sbb
cmc
enter
inc
sahf
and
cli
lcall
push
pop
lahf
outsl
xchg
mov
jo
outsb
push
jb
outsb
je
jb
add
xchg
cwtl
insb
push
fbld
sahf
sbb
mov
jbe
dec
push
lcall
adc
jbe
jl
pusha
inc
jle
pop
ja
inc
fidivrs
jle
adc
fcomps
jae
mov
dec
daa
or
lahf
inc
ds
xchg
and
test
jnp
sub
jno
pop
std
test
pop
jmp
inc
cmp
notl
pop
lahf
outsb
push
jle,pt
imul
mov
and
add
lods
jnp
int
sub
outsb
and
xchg
aaa
in
in
or
jg
jecxz
add
xor
sbbb
pop
imulb
xor
std
and
sub
and
xor
cmp
inc
pop
jge
cmpsl
xlat
sti
adc
or
jp
ret
outsb
movsb
add
xchg
cli
nop
icebp
push
dec
add
test
std
pop
popf
add
movsl
mov
adc
std
mov
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
notl
add
dec
pushf
movw
pushf
call
inc
dec
and
or
dec
ret
or
adc
fidivl
addb
icebp
or
cmpsl
xchg
cmp
xchg
nop
jl
pop
pop
adc
push
into
and
jno
push
ret
adc
dec
sub
sub
adc
popa
shll
iret
push
bound
inc
aam
sub
and
sbb
mov
rcrb
lahf
imul
test
add
test
pushl
clc
push
xor
movw
inc
lea
jp
pusha
stc
mov
cmc
add
jmp
mov
sbb
cs
shrb
ss
outsb
scas
and
add
cmp
fmul
mov
sbb
sub
leave
popa
mov
cmp
fucomip
scas
lret
fwait
mov
pop
test
rcr
jo
cltd
xor
daa
cwtl
fwait
aad
negl
xchg
pop
leave
mov
lods
rcl
sbb
cwtl
xchg
or
sub
pop
fs
push
ljmp
lcall
push
xor
jno
xor
cmpsb
lock
je
int3
pop
lahf
push
sub
add
sub
call
add
inc
jecxz
mov
mov
shrl
push
fdivl
cmpsl
in
mov
and
mov
cmp
shll
dec
sbb
loopne
in
cmc
out
iret
sbb
imul
jmp
sbb
xor
outsl
inc
push
imulb
xor
lods
iret
imul
loop
out
adc
in
das
jns
popa
cli
sahf
jb
nop
fstpl
lahf
inc
loope
adc
xchg
and
jo
int3
cwtl
fs
ss
jo
sbb
jmp
addr16
jecxz
mov
div
fistps
imul
cmp
cmp
push
pushl
pushf
call
and
mov
inc
mov
lcall
cwtl
jl
clc
nop
jo
loopne
and
jns
jp
mov
xchg
cmp
xor
sub
jns
pop
std
enter
push
loopne
mov
nop
and
cltd
mov
repnz
and
xor
cmpsb
fcoml
sbb
insl
int
cld
addb
push
andb
adc
cmp
imul
bound
pop
and
adc
mov
test
test
in
xlat
hlt
mov
pop
jecxz
fbstp
enter
pop
push
inc
in
pop
rcr
stos
sbb
push
scas
mov
jl
jmp
aad
fsts
leave
add
int
enter
out
and
cld
xlat
dec
add
xchg
sbb
xchg
jno
xchg
pusha
mov
jge
loope
pop
push
mov
insl
mov
imul
movsb
mov
setp
cli
lret
les
jno
pop
mov
fwait
outsl
pop
daa
or
aaa
lret
aas
xor
and
sbb
stc
mov
test
cmp
jne
loope
fidivs
daa
inc
jge
rcrl
into
jnp
sub
push
stos
or
fimuls
cwtl
xor
mov
mov
ret
arpl
int
lock
les
and
adc
insb
fs
in
pop
lahf
push
dec
arpl
icebp
mov
xchg
mov
fnstenv
mov
shll
rol
jne
push
push
xor
sti
ficomps
cs
mov
out
mov
mov
sub
pop
push
jmp
mov
jns
mov
inc
lods
into
xor
js
scas
out
fisubs
jno
lods
jo
in
xchg
lods
sbb
sbb
mov
mov
sub
xchg
and
jl
shlb
sub
adc
adc
test
pop
lahf
push
jns
and
shr
cmp
incl
pushf
pusha
call
adc
pusha
push
mov
lea
jmp
jmp
mov
sti
sbb
xor
in
lds
mov
jne
fstps
xchg
adc
lahf
mov
jecxz
rolb
aad
aas
or
and
imul
mov
mov
stos
xchg
cmpsl
imul
sub
or
popa
push
imul
mov
mov
pushf
xchg
and
call
arpl
ss
xor
enter
sbb
fsubs
mov
and
adc
add
jge
scas
xchg
pop
aas
pop
xlat
ret
cmpsl
jae
fwait
das
aas
pushf
pop
loop
dec
mov
stos
hlt
and
push
fisubrs
add
add
andb
and
add
scas
xor
mov
mov
dec
loope
xchg
and
outsl
test
in
ljmp
add
add
lods
sbb
test
mov
or
and
je
jmp
jno
cmp
std
sarl
adc
std
sbb
pop
fnstsw
dec
sbb
xlat
repz
insb
pop
pop
mov
int
add
std
mov
push
enter
sarb
xchg
inc
jb
pushf
cmp
sahf
add
mov
mov
adc
dec
das
adc
jo
mov
lods
popf
sbb
jns
cmp
lods
std
imul
cwtl
into
lea
jae
call
nop
aas
pop
add
pop
jns
icebp
adc
pop
fstps
or
inc
inc
loope
bound
ja
xchg
jmp
repnz
cmp
lret
mov
test
dec
xorl
lock
repnz
pop
dec
mov
push
mov
adc
pop
lret
pop
in
add
lods
cld
add
mov
add
or
push
push
cs
cmp
fisubl
outsl
mov
cmp
ret
jp
push
mov
data16
dec
iret
mov
nop
cmpsb
ss
push
std
movsl
sub
xlat
movsl
xchg
add
xchg
pop
cmp
mov
enter
imul
mov
imul
jbe
jle
sbbb
inc
xchg
jle
fiaddl
sbb
loope
pusha
cmp
xchg
pop
repz
inc
cmp
adc
push
adcl
inc
push
mov
xlat
jae
sub
ja
and
hlt
mov
dec
ja
daa
jl
push
roll
cmp
scas
jns
xchg
jns
data16
out
je
rclb
or
fldpi
ffree
pop
frstor
in
pushf
movsb
fistl
sub
push
inc
mov
mov
fildl
jne
mov
mov
jno
xchg
mov
jns
inc
cmpb
mov
pop
jp
les
xchg
inc
cmp
mov
push
push
in
and
jnp
test
xor
fiaddl
add
xchg
nop
add
lahf
inc
test
movsb
out
xlat
and
and
mov
jo
addb
and
push
mov
faddl
imul
mov
cmpsl
repnz
and
in
roll
loopne
inc
leave
push
shlb
or
ret
push
sub
and
mov
popa
jo
dec
and
repz
and
imul
ja
xchg
stos
stc
shl
dec
and
jo
test
sub
iret
mov
mov
and
sub
shlb
add
lock
mov
andl
inc
mov
inc
mov
ljmp
loop
popa
fs
incl
inc
gs
mov
xchg
pop
and
cli
and
ljmp
push
adc
rolb
in
in
xor
mov
mov
test
daa
mov
and
xchg
cmc
repnz
adc
mov
add
xor
add
shlb
shl
push
mov
stc
pusha
xorl
les
jne
jmp
shlb
and
adc
sub
inc
and
aam
add
ljmp
arpl
jb
push
stos
loopne
adcb
xor
adc
sub
imul
push
and
ret
or
loopne
xor
xor
loopne
inc
inc
push
scas
push
imul
test
mov
clc
and
xor
jecxz
out
negl
scas
pop
stc
aam
mov
rol
xor
mov
lock
mov
cwtl
aaa
add
lods
cmp
into
sub
mov
mov
loope
mull
pusha
sub
lock
sub
movsb
fwait
jge
xchg
stc
mov
mov
outsb
dec
inc
leave
inc
jne
inc
nop
mov
pop
xchg
xchg
add
outsl
xor
jecxz
loope
mov
rcll
fwait
inc
shll
bound
inc
pop
loopne
adc
cwtl
inc
push
jno
loope
jns
addl
adc
rol
and
inc
andl
ja
push
ret
cld
mov
stc
in
mov
sub
sub
add
nop
cmp
mov
sti
adc
std
push
mov
push
in
jbe
popf
dec
loop
mov
addl
std
and
shll
jg
mov
adc
mov
stos
jb
push
and
fmull
jle
mov
xorb
gs
testb
pop
push
cmpsb
ret
sbb
cmpsb
sub
ljmp
jo
data16
push
rclb
enter
add
jp
pop
adc
insl
push
loopne
ja
xor
dec
aad
popa
rol
cltd
add
stos
repnz
push
and
out
cmpsb
popa
mov
ret
aad
cmp
dec
push
xchg
loope
adc
sub
ret
push
fwait
lahf
bound
lock
dec
ret
xchg
push
fsts
pop
arpl
mov
loope
pushf
sub
jb
dec
hlt
xor
pop
xchg
and
xchg
jnp
xchg
aaa
inc
pushf
jmp
lock
mov
push
js
jnp
stc
add
jnp
movl
out
mov
add
jo
test
adc
lea
ret
inc
popa
cli
mov
pop
pop
loope
sub
loope
mov
push
adc
push
mov
add
imul
add
outsl
adc
mov
cltd
sbb
bndstx
push
or
jno
lahf
push
fucomp
mov
dec
lret
jae
mov
cld
stc
dec
jp
loope
rcl
push
mov
mov
test
arpl
sbb
stc
jbe
les
cli
jl
lahf
js
jne
sub
addr16
push
data16
lock
sahf
fcompl
les
pop
push
ja
lcall
inc
jae
push
nop
aaa
sti
outsl
pushf
pop
insb
inc
ret
mov
pusha
xor
lock
inc
fcoms
inc
ja
add
mov
mov
pop
aad
dec
popa
pusha
mov
in
fisubrl
jno
and
mov
xor
mov
mov
shlb
sub
loopne
inc
pop
mov
test
dec
cwtl
bound
jnp
ret
xchg
cmpsl
sbb
fadd
jns,pn
dec
add
push
and
and
push
loope
jbe
inc
addl
mov
lcall
push
ja
jp
ret
hlt
xor
rcl
mov
in
cmp
fsubrs
ljmp
lock
ret
clc
imul
cmp
shll
dec
mov
enter
insb
adc
repnz
jo
in
add
push
out
mov
stos
lea
xchg
int
sarl
sbb
rcll
pop
sar
jl
mov
shrb
adc
and
adc
aaa
loopne
jo
aas
rclb
sub
stos
and
cli
mov
mov
inc
int
sub
pusha
rol
int
rcrb
push
imul
loope
jl
icebp
cmpb
sahf
jle
jmp
ret
xor
mov
nop
adc
popa
dec
mov
sub
adc
xor
cvtps2pi
lods
adc
xor
xor
rclb
mov
rclb
pop
ja
xchg
jecxz
lret
push
xorb
sub
adc
xchg
sub
outsb
lds
add
cld
add
sub
jl
jl
adc
cmp
popa
test
bound
inc
call
mov
test
sahf
js
jno
mov
mov
lahf
push
push
stos
movsb
or
add
fs
rclb
add
xor
xchg
add
sub
sub
inc
and
adc
push
outsl
inc
call
ljmp
jb
out
push
pop
sub
cmpl
test
insb
icebp
ret
push
pop
enter
cmp
inc
inc
mov
mov
inc
push
outsb
nop
mov
push
clc
mov
push
dec
xchg
fldenv
mov
inc
arpl
sub
jo
pushf
xchg
jl
mov
pop
out
sub
std
mov
xchg
xor
call
inc
inc
sbb
imulb
es
inc
movsb
mov
rcrl
inc
pop
sub
flds
sub
push
cmc
cmp
imul
mov
ret
gs
xor
push
jge
jge
lds
mov
fs
nop
xchg
and
inc
icebp
imul
cmc
xor
sub
mov
ljmp
pop
ds
sbb
dec
mov
call
adc
sub
stos
and
cld
out
mov
repnz
icebp
or
js
jp
iret
hlt
push
stos
out
ret
outsl
inc
scas
inc
mov
inc
push
inc
shrb
jne
leave
add
movsl
push
call
call
or
inc
sarb
icebp
es
adc
data16
xchg
in
pop
loope
fdivp
adc
in
data16
push
jp
into
jp
arpl
add
mov
push
adc
mov
andl
lret
jmp
in
lahf
dec
add
stos
push
bound
and
test
push
mov
ret
lret
lret
pop
add
inc
bound
outsl
and
inc
insb
inc
adc
sahf
aam
push
inc
pop
jo
testb
int
outsb
sub
imulb
les
sbbb
jl
movsb
dec
pop
mov
jne
dec
jge
xchg
rcll
popf
into
xor
sbb
arpl
cwtl
ljmp
pop
repnz
outsb
into
fdivrl
popaw
mov
cmp
xor
dec
ja
cmpsb
or
nop
add
cli
pop
mov
bound
adc
in
cmpb
arpl
mov
push
inc
adc
outsb
jb
mov
add
gs
iret
inc
ret
jg,pt
movsl
loop
add
adc
jo
sti
jl
test
js
mov
inc
mov
push
lcall
out
stc
ljmp
pop
test
mov
dec
jne
mov
push
sub
fistpll
pop
xchg
pusha
dec
nop
adcl
mov
movl
sahf
xor
xchg
jo
sbbl
fs
shrb
pop
sbb
or
cmp
pop
out
stc
pop
jge
mov
test
xor
xor
mov
jecxz
fidivs
push
push
test
jb
cltd
xor
mov
fbld
clc
push
push
mov
fs
mov
andl
loop
inc
mov
mov
mov
xor
sbb
inc
dec
aaa
out
add
push
repnz
shl
cs
hlt
and
mov
out
cmp
cmpsl
cwtl
adc
inc
bound
cld
shlb
jmp
int
das
xlat
popf
xor
incl
pop
arpl
mov
inc
bound
scas
dec
push
jo
pusha
movb
add
xchg
xor
pop
jb
adc
jmp
ret
ljmp
or
lret
sti
lret
push
daa
insl
cmp
fs
cli
xor
mov
decb
sub
fs
xchg
jo
popa
int
xchg
mov
push
jle
mov
xor
mov
insb
inc
je
hlt
and
xorl
movsb
loop
int
xchg
ljmp
rol
sub
pushf
inc
push
push
int
cli
jb
pop
dec
repz
cld
pusha
xchg
mov
push
xor
xchg
test
js
icebp
pop
add
js
bound
mov
inc
ret
sub
xor
mov
push
push
jo
dec
ret
mov
xor
fsubs
pop
pop
es
sub
lds
inc
adc
lret
xor
roll
cli
adc
shl
mov
add
hlt
jp
push
rcrl
loopne
rcll
cld
jl
ret
or
sub
add
inc
cli
dec
sub
insb
mov
pop
cmp
add
and
js
leave
xchg
movsl
and
mov
jo
test
stos
cmp
aam
sub
ljmp
cwtl
pop
loopne
mov
rorl
imul
loope
adc
ret
mov
add
paddusb
in
add
mov
push
jbe
test
adcl
xlat
testb
push
ret
lret
dec
fcmovnb
inc
inc
inc
sahf
adc
push
xchg
push
inc
or
cmp
loope
lods
imul
and
sarb
mov
hlt
or
lret
pusha
popa
dec
pop
test
ss
imul
jo
push
xchg
push
movl
jmp
daa
dec
and
sub
dec
jo
push
jp
dec
jns
push
cs
divl
ljmpw
enter
ljmp
pop
sbbl
push
xor
dec
inc
lcall
hlt
ret
fistl
push
inc
ja
lock
negl
jns
bound
xchg
push
addr16
pop
sbb
mov
push
inc
adcl
mov
das
pop
bound
xchg
test
dec
cmp
rolb
inc
loope
ja
jmp
mov
daa
cmp
jle
pop
sbb
add
rol
cmpsb
adc
push
add
cmpsb
test
test
inc
ret
gs
inc
std
adc
gs
adc
jl
adc
addl
cli
scas
cmp
pop
popa
movsl
rcrl
inc
das
and
mov
dec
shlb
nop
lock
sub
shr
cmp
sub
les
ret
jmp
in
mov
or
and
loopne
inc
scas
call
xchg
jle
test
inc
loopne
or
lock
out
ljmp
xor
stos
jnp
lcall
inc
loop
xor
repnz
shl
cmpsb
mov
xchg
pop
push
popf
jb
cli
fsubs
or
lock
add
inc
mov
push
mov
mov
sub
jp
shlb
mov
lea
xchg
sub
lcall
mov
nop
ret
mov
bound
xor
cmpl
xor
daa
mov
sub
xor
push
fidivrl
mov
push
pop
enter
dec
nop
inc
les
mov
les
ss
inc
shr
cli
xchg
loopne
dec
push
push
lahf
sub
xchg
inc
dec
jle
and
mov
cmp
inc
sub
mov
inc
in
push
imulb
shlb
divl
adcl
jl
adc
sbb
rol
push
and
loopne
lock
hlt
sub
dec
xchg
mov
insb
adc
stc
test
arpl
sarl
adc
adc
repnz
mov
inc
je
dec
in
ficompl
sub
insb
fidivl
popa
movsb
xor
mov
sarb
sub
imul
jbe
repz
les
dec
cpuid
out
sub
dec
fs
jmp
test
repnz
out
outsl
push
or
test
gs
sbb
pop
push
repnz
into
jle
add
mov
repz
cltd
popa
js
pop
arpl
inc
nop
mov
ret
mov
mov
and
outsl
mov
push
add
cld
sbb
arpl
push
imulb
popa
xchg
mov
and
mov
cmp
icebp
mov
stos
xchg
push
aad
inc
sti
xor
or
adc
push
mov
adc
movsb
jne
fs
cmpsl
dec
lock
loope
movsb
cmp
xchg
sub
lds
in
pop
movb
loopne
dec
jecxz
fdivs
and
jo
and
movsb
sub
loop
push
and
insb
pop
arpl
loopne
imul
or
imul
xchg
push
aam
mov
popa
shl
in
pop
inc
sbb
adc
pop
jns
xor
dec
hlt
xchg
xchg
sub
sbb
xchg
sbb
inc
cmp
xor
inc
push
movsl
push
and
stos
xor
inc
das
jb
inc
pop
shlb
stos
cs
mov
test
daa
mov
shll
inc
aaa
dec
lock
ret
mov
test
aam
dec
dec
ss
push
or
ret
mov
sub
loope
or
stos
mov
push
add
mov
inc
stc
subl
sahf
cwtl
in
cmp
mov
sub
dec
jb
sti
enter
and
btc
inc
stos
outsb
sub
ss
loopne
dec
and
mov
mov
rolb
mov
push
push
sub
mov
jnp
ds
lods
call
icebp
push
pushf
inc
pop
cli
scas
and
pop
testl
push
rcll
xchg
pusha
sbb
sbb
shll
fucom
rcll
mov
rorb
jb
and
push
hlt
and
mov
in
std
fwait
mov
adc
roll
and
sub
mov
mov
sub
jns
push
ret
xchg
mov
mov
dec
jle
ljmp
nop
stos
pop
mov
sbb
pop
out
rcrb
jg
rcrb
lds
adc
push
sbbl
sub
jle
push
lock
mov
and
ret
adc
inc
jge
addr16
imul
push
inc
dec
test
leave
pop
jb
ret
inc
js
sbbl
ss
test
jae
sbb
push
xchg
adc
pop
popa
shll
fucom
pop
jne
adc
arpl
xlat
push
scas
test
adc
dec
repz
inc
leave
out
pop
outsb
jb
and
popa
xorl
mov
cwtl
out
rorl
lods
dec
sub
dec
inc
arpl
icebp
add
xor
mov
loope
clc
push
pop
mov
and
test
push
ret
pop
hlt
adc
or
sbb
shrb
pop
loope
push
mov
fsubr
or
push
addl
in
adc
arpl
pop
jl
insb
loope
out
adc
shll
pop
roll
jg
jp
adc
cmp
sub
or
rclw
cmpsl
cld
shlb
mov
add
or
or
repnz
jle
out
repz
repnz
insl
pop
dec
fwait
scas
jecxz
ja
mov
out
insb
arpl
sarl
loop
and
sub
pusha
jb
ret
cli
mov
xchg
jmp
gs
je
popf
mov
sub
sub
je
mov
cld
xor
pusha
jbe
pop
sub
fdivrl
xor
push
or
fidivs
enter
jb
sub
test
sub
movl
sub
imul
arpl
shrl
jae
mov
xchg
cmp
mov
inc
mov
inc
add
outsl
pusha
jnp
cli
out
shll
mov
cmpb
xchg
cmp
pop
cmp
test
je
nop
fidivl
jno
leave
xor
fdivrs
and
sub
push
xchg
stc
lea
add
mov
push
pop
adc
adc
add
add
mov
add
ret
mov
xor
adcl
mov
mov
xor
jnp
ret
add
fld
mov
inc
push
loope
push
ret
cmp
pop
push
sub
test
mov
test
pop
sbb
sub
je
les
iret
call
add
mov
mov
mov
xchg
push
fcoml
mov
loop
adc
insl
shl
jno
xor
inc
fs
add
cmp
add
in
insb
dec
adc
test
adc
arpl
add
and
mov
push
stos
inc
pop
dec
pop
sahf
shrl
dec
es
or
or
mov
ljmp
inc
sub
lret
jo
imul
notl
jb
daa
mov
inc
ret
fiadds
repz
pop
sbb
mov
cmp
cs
dec
push
inc
sahf
pop
jbe
leave
std
mov
jl
je
sbb
lret
mov
hlt
xchg
cmpsb
mov
mov
sub
loopne
mov
jecxz
xor
nop
int
mov
aas
push
mov
dec
mov
add
scas
addr16
movsb
out
sarl
pop
shlb
rcrb
add
or
arpl
mov
xor
inc
sub
pop
gs
pushf
sub
aam
pop
jecxz
aas
or
cmp
xor
push
mov
jbe
loope
frstor
sub
mov
das
xchg
inc
rclb
lods
jl
shrl
mov
jle
add
xor
dec
shlb
cltd
mov
or
daa
inc
cmp
push
add
loopne
int3
jne
out
sbb
and
xchg
aam
dec
and
mov
xlat
popa
in
sub
xor
in
lcall
outsl
or
cltd
push
aam
push
xchg
push
outsl
pop
push
and
lret
xchg
jb
pop
ja
test
dec
xor
pop
inc
pop
xchg
mov
outsl
mov
out
xchg
call
push
cmpsb
mov
call
jle
lock
adc
cltd
cmp
xchg
inc
xor
insb
add
sub
out
psubsb
js
sub
jno
gs
sahf
out
nop
stos
add
cmp
or
jle
mov
or
aam
mov
or
adc
and
inc
pop
push
shll
mov
ja
cmp
inc
test
and
icebp
sbb
pop
push
es
pop
out
jno
inc
xchg
into
out
bnd
stos
shlb
loopne
push
sub
push
xor
fcoml
sti
mov
add
or
daa
push
orl
push
inc
push
icebp
mov
mov
and
push
lret
add
lock
jle
ret
xchg
fdivrs
xor
lods
inc
out
inc
jae
xchg
sbb
mov
scas
stos
inc
jno
add
push
xor
sub
test
arpl
fwait
dec
js
imul
lods
inc
test
cli
ret
insb
cmpl
or
pop
fcomps
leave
stos
mov
aam
mov
inc
mov
xchg
and
push
dec
loope
and
arpl
xchg
jbe
push
dec
loopne
jmp
adc
dec
xchg
xchg
jne
xor
pusha
xchg
push
das
fistps
movsl
and
int
mov
xchg
mov
dec
jp
adc
movsl
cmp
and
push
pop
mov
mov
adc
fidivrs
xchg
fwait
xlat
mov
loope
sub
loopne
and
dec
enter
fadds
int3
pop
movsl
cmp
pusha
adc
test
mov
repnz
xchg
adc
adc
and
mov
dec
test
jbe
pop
push
and
ljmp
hlt
scas
fwait
mov
outsl
js
xor
enter
das
mov
hlt
mov
testb
push
jl
imul
subb
push
cmp
call
push
decl
arpl
mov
mov
push
pop
test
add
mov
mov
xchg
or
or
push
sub
mov
pop
leave
mov
lea
insb
push
ret
pop
loopne
mov
mov
popa
xor
testl
cmp
ds
pop
push
fwait
gs
inc
rcrl
insb
clc
test
push
xlat
mov
dec
and
ret
popl
jp
das
pop
xchg
fstp
jae
pop
jmp
xor
sbb
fstp
pop
sbb
insl
in
cmp
fs
and
cwtl
popl
or
pop
mov
enter
add
cmpb
sub
insb
xchg
mov
ret
test
lods
inc
fs
dec
xor
jl
push
sti
add
jb
shl
mov
fcoms
dec
outsl
aam
scas
jl
addr16
push
mov
cmpsb
mov
mov
insb
cli
rorb
sub
mov
scas
sub
jo
jns
fidivrs
fadd
cmp
mov
add
mov
xchg
shrl
enter
push
jb
or
push
push
roll
arpl
xor
push
fcom
in
movsl
clc
pop
gs
jl
fisttps
stos
or
and
jl
fldenv
cli
das
mov
jbe
movsl
and
adc
xor
je
jl
jg
dec
inc
jo
ljmp
roll
ret
movsb
mov
xchg
out
mov
inc
fcoms
stos
pop
das
add
mov
ljmp
add
ja
jge
dec
push
xor
fs
cmp
mov
and
bound
mov
popa
fs
jle
mov
push
loopne
mov
hlt
add
dec
fs
ret
mov
xorb
orl
jge
adc
sarl
cs
sub
inc
inc
movlhps
sub
ret
sbb
adc
rcl
daa
sub
mov
jne
xorb
pusha
mov
loopne
roll
popa
pop
shr
dec
repz
cmp
or
xor
lahf
mov
popa
fisubrs
repnz
loope
mov
dec
xor
jmp
sbb
and
loopne
sahf
and
aas
mov
dec
pop
lcall
mov
adc
add
mov
mov
imul
xchg
push
je
loopne
in
js
mov
sub
mov
inc
imul
popa
loope
cmp
pop
adc
loop
es
push
pop
scas
adc
xchg
mov
xor
cmpl
or
sbb
jae
mov
lcall
or
dec
mov
xchg
inc
add
add
outsb
inc
ret
lcall
inc
add
fdivs
fsubl
xchg
fistl
mov
xchg
mov
sub
and
shrb
imul
dec
in
jo
push
or
xchg
add
dec
jp
dec
fiadds
dec
fs
inc
mov
cltd
mov
xchg
divb
stc
xchg
jb
sub
mov
das
mov
add
cmovbe
push
jo
cmpsl
ss
data16
aas
and
loop
or
pusha
es
jle
lahf
ja
test
add
lea
pusha
mov
movsb
dec
fwait
pusha
pop
jno
dec
or
mov
mov
jge
in
test
inc
movsl
inc
cli
pusha
movsl
add
fisttpl
mov
xor
inc
push
pop
pushf
pop
or
mov
fs
pusha
xlat
ss
call
cmp
rolb
lcall
arpl
sub
ret
xchg
mov
lret
insl
pusha
jge
push
add
sub
test
ret
lods
dec
xchg
aad
dec
jge
pusha
lea
xor
repnz
inc
ljmp
jl
shlb
fldcw
lret
js
aaa
sbb
inc
push
pop
cmpxchg
mov
pusha
ljmp
pop
add
mov
out
pusha
fldenv
pusha
cmp
adc
leave
arpl
call
push
mov
push
popa
orb
jbe
mov
jae
shlb
sbb
clc
sbb
arpl
daa
mov
inc
lret
xchg
and
mov
testl
repnz
mov
aaa
xchg
jo
adc
fcompl
pusha
inc
jge
mov
pusha
or
mov
ret
fiadds
pusha
fcompl
dec
xchg
push
add
int
andl
das
insl
lock
push
mov
sahf
cld
jae
loopne
out
push
cmp
inc
sub
ds
cmp
jmp
pusha
lcall
push
push
pop
sub
pusha
loopne
insl
adc
jl
icebp
arpl
lods
add
aaa
push
mov
pop
icebp
xchg
push
cmp
dec
lret
mov
xorl
xchg
jge
jp
or
icebp
pop
sbb
mov
add
pop
mov
insb
movsb
fsubrs
fstpt
adc
jae
arpl
jnp
push
pop
adc
mov
pusha
pop
andb
outsl
test
adc
les
jecxz
xchg
cmp
shl
pop
xlat
pop
sbb
mov
sub
push
pop
popf
mov
jl
or
movsb
shl
bound
test
add
movsb
fs
add
adc
xchg
rol
roll
out
test
push
jle
mov
mov
fistpl
ja
loope
sub
push
push
and
mov
mov
push
imul
mov
and
or
add
aas
cmp
data16
inc
out
or
sbb
inc
in
push
cmpsb
or
das
flds
cli
jnp
dec
and
and
arpl
ret
je
pop
jge
rcll
adc
inc
fbld
lods
jno
add
dec
in
ficompl
arpl
jo
mov
inc
lods
mov
and
inc
jb
bound
hlt
pop
xlat
je
and
aam
js
data16
movsb
movsb
and
sub
ja
lret
gs
movsb
imul
cmp
js
or
rol
jmp
ja
cmp
xor
arpl
or
movsb
jnp
mov
add
shlb
pop
mov
ret
sub
dec
jl
sub
sbbl
out
jle
sbb
sub
jecxz
pusha
xchg
loope
push
fidivrs
inc
lods
jp
and
sahf
cmp
test
cli
mov
rcrb
ds
jae
subb
xor
int3
fs
popf
mov
pusha
pop
out
xchg
arpl
cli
loop
mov
ds
jbe
push
inc
dec
mov
je
ds
arpl
or
dec
jno
enter
dec
leave
popf
cmp
movsl
repnz
outsb
mov
mov
test
aad
and
sbb
lods
pop
sub
add
lock
popa
pop
popa
testl
lea
or
or
test
lahf
ss
fcoms
cmp
mov
stos
adc
xchg
out
push
mov
mov
repz
xchg
fidivl
fwait
mov
pop
repz
jp
adc
pop
test
call
inc
jle
cmpsl
aas
les
lock
cmp
sbb
icebp
mov
mov
pop
test
rolb
cmc
dec
inc
xchg
frstor
filds
sti
aas
stos
add
pop
lahf
xor
and
adc
outsb
adc
adc
outsb
xchg
sub
mov
sbb
outsl
adc
pop
cmpsb
rcrl
pop
cmp
shll
and
call
jmp
lea
ja
push
sub
call
sbb
mov
mov
nop
lods
shl
cwtl
pop
inc
xor
push
lret
dec
test
cmc
ss
test
dec
std
mov
jecxz
insl
push
insb
test
cmp
and
xor
das
cmp
cmp
dec
aaa
mov
xchg
out
inc
call
in
aaa
sbb
insl
repnz
xchg
add
pop
into
mov
rorl
outsl
cmc
movsl
std
add
movsl
mov
xchg
xor
pop
lahf
xor
ja
insb
ljmp
mov
or
out
jle
pop
mov
fsubr
rcrb
setae
push
mov
pop
mov
test
xchg
sbb
int3
cli
inc
sbb
pop
inc
fs
xchg
sub
cld
call
push
mov
add
mov
lcall
mov
or
fwait
out
push
inc
dec
std
shrl
mov
testl
aas
xchg
mov
lahf
xor
sbbl
orl
mov
int
sub
shr
aaa
ficompl
mov
sbb
cltd
sbb
xchg
fwait
idivl
in
mov
xchg
mov
adc
add
push
mov
aaa
cmp
inc
mov
mov
xor
popa
mov
cmp
test
cmp
fidivrs
xchg
cmpb
sbb
xor
or
bt
bt
rcr
ror
push
jmp
in
mov
arpl
and
loope
loop
add
mov
mov
pop
ud0
sti
jl
in
std
add
popf
cmc
test
out
cmpsl
mov
fs
test
xor
sbb
int
cmp
subl
ljmp
xchg
push
leave
or
nop
sbb
fiaddl
iret
pop
xor
andl
dec
in
fldl
sbb
lods
sbb
std
jne
pop
lahf
xor
call
orb
ljmp
fs
lods
inc
sbb
mov
push
or
popa
pop
mov
mov
aas
daa
les
pop
sbb
popa
dec
fwait
lret
and
inc
stc
xor
clc
pop
push
cmp
xchg
mov
inc
gs
pop
cmpb
sub
mov
dec
push
jecxz
xchg
and
fisubl
repz
popa
xchg
mov
testl
sbb
mov
ficompl
xor
xor
shr
hlt
insl
idiv
mov
cmc
cli
popf
ljmp
mov
sti
xchg
inc
mov
fdivrl
pop
jge
cmp
lahf
dec
pop
stc
sub
inc
and
fistps
push
sbb
and
xchg
rcl
cltd
shlb
mov
in
push
stos
outsl
add
cmpsl
xchg
test
mov
push
mov
mov
repz
mov
shlb
sbb
test
hlt
pop
lahf
cmp
stos
sbb
inc
enter
push
fwait
pop
test
bt
cmp
xor
jmp
movb
test
pusha
lea
je
cmp
test
sub
call
add
test
cmc
mov
rcr
bswap
bt
inc
mov
pusha
cmp
pusha
lea
jbe
rcl
mov
btr
stc
add
xor
shl
movsbl
rol
mov
push
bsr
movw
add
jmp
imul
bt
add
mov
push
pusha
lea
jmp
jmp
jmp
not
setno
jmp
pushl
push
lea
jae
rcr
shr
sar
mov
clc
sbb
cmp
setno
mov
pushf
sbb
test
mov
test
call
sarl
inc
sbb
push
rol
movb
xchg
or
movsl
or
neg
dec
and
lds
push
mov
lea
cmc
cs
pushw
lcall
or
cs
inc
sar
xor
mov
xchg
repnz
cmc
jl
mov
cwtl
lock
pop
lahf
cmp
sti
mov
dec
fistpl
adc
insl
mov
adc
pop
cmp
fldt
push
jle
pop
enter
or
outsl
pop
jne
das
dec
jecxz
mov
mov
je
outsl
repnz
mov
jmp
jmp
movsb
or
test
sahf
xchg
add
cld
mov
mov
sbb
pusha
and
imul
push
stos
repnz
loop
xchg
add
pop
lahf
cmp
aam
mov
pusha
call
call
movw
call
loop
test
dec
out
sahf
lret
mov
test
xor
push
imul
jp
xchg
call
outsl
mov
cmp
sbb
sbb
roll
mov
mov
fcomp
je
int3
lcall
mov
add
std
mov
xchg
pop
and
loopne
pop
lahf
aas
or
sbb
shll
icebp
and
push
inc
shrb
mov
les
jmp
adc
imul
mov
cmp
jne
fisttps
dec
shrb
jp
push
je
dec
push
stos
cs
rorl
push
sub
add
es
push
sub
push
nop
fsubl
xor
pop
push
pusha
pop
lahf
aas
stos
mov
and
lea
jmp
add
or
inc
push
dec
and
cmp
test
cwtl
fdivrs
jg
sbb
pop
xchg
push
or
fnstsw
inc
cmpsb
mov
dec
cs
mov
cld
dec
cltd
aas
jmp
cwtl
or
lcall
rolb
push
or
filds
call
imul
dec
negl
cltd
sbb
in
loop
sub
leave
inc
jmp
stos
xchg
and
addr16
aaa
jle
sub
push
mov
and
rcrl
mov
and
loop
icebp
fdivr
cmp
in
lret
jno
aas
sti
repz
push
push
scas
cli
ljmp
adc
pop
lahf
ds
inc
cli
out
shl
mov
stc
insl
lea
inc
mov
inc
mov
push
loop
icebp
push
outsl
mov
in
lret
jno
pop
xchg
out
out
dec
sub
les
xchg
pusha
jns
out
cli
sbb
out
notb
dec
mov
mov
xor
lock
jno
sbb
sub
into
sbb
pop
lahf
cmp
push
movsb
repnz
data16
push
mov
ds
cmp
jg
scas
mov
int3
inc
xor
jo
negl
in
dec
sbb
add
xchg
cwtl
xchg
add
cmpb
mov
mov
pop
sub
ds
scas
mov
jp
lahf
cmp
push
addr16
jmp
dec
xor
cmp
cs
mov
adc
xor
cld
pop
sub
mov
sbb
fsubl
add
out
inc
dec
out
out
pop
lahf
cmp
inc
sti
adc
sub
sub
push
xor
outsb
ljmp
arpl
mov
jmp
push
int
nop
cld
repnz
inc
fidivrs
sub
mov
mov
cwtl
sbb
push
mov
xchg
xchg
repz
pop
and
je
mulb
shrl
int3
mov
adcl
add
cmp
or
les
sti
mov
dec
push
xor
or
mov
insb
ljmp
lcall
test
ljmp
cmp
inc
mov
xor
mov
dec
xchg
fcomps
test
ret
jno
shrb
outsb
stos
adc
jge
loope
nop
lret
adc
jg
inc
inc
xlat
iret
adc
pop
mov
lahf
cmp
cmc
jno
and
mov
cs
es
lret
outsb
ds
ret
push
fcmovnb
add
adc
dec
mov
push
aam
int
nop
inc
mov
sub
push
lret
jbe
ss
sub
scas
push
out
inc
xorl
notb
push
dec
dec
pop
lahf
cmp
mov
add
or
push
mov
cli
outsb
jbe
push
mov
cmp
mul
sbb
xchg
lret
out
pushf
mov
inc
aas
pop
imull
cmp
push
data16
rcll
lods
fisttpll
test
bound
cmp
push
sub
je
and
and
adc
lods
cmp
out
dec
inc
mov
mov
clc
jl
pop
rclb
pop
call
push
push
rclb
sub
divl
jnp
fistl
das
cmp
sub
mov
ljmp
xchg
movsl
mov
jl
sub
inc
mov
cld
sbb
mov
cmp
jbe
lcall
pop
sub
clc
jo
cmp
fsubrs
hlt
pusha
mov
xchg
mov
xchg
pop
jecxz
add
or
fldl
in
sub
ret
pop
inc
bound
call
insb
mov
dec
shlb
mov
cmp
mov
gs
sar
lds
rclb
cmp
mov
les
mov
and
jmp
dec
push
int
aaa
add
aas
mov
roll
pop
negl
cmp
inc
sti
ror
jmp
fisttpll
insb
sub
dec
dec
js
int3
movsb
je
push
sub
fsub
pop
lock
push
les
sub
mov
sarb
mov
hlt
gs
enter
mov
add
mov
cmpsb
stos
cmp
xor
mov
outsb
jge
in
rcrb
jle
jns
imul
inc
mov
mov
jle
sub
sbbb
cmp
adc
sti
test
shll
fnstcw
inc
jbe
push
mov
pop
mov
rcrl
mov
daa
gs
xchg
sti
fdivp
cmc
xchg
mov
adc
mov
lret
cmp
jo
xchg
dec
call
pop
movb
mov
mov
adc
mov
sahf
mov
jne
cmc
push
inc
xchg
inc
xchg
movsb
in
nop
jg
int
scas
cli
enter
push
dec
pusha
out
stos
and
sbb
outsb
outsb
add
mov
inc
mov
roll
jns
adc
cwtl
or
push
sbb
fsubs
mov
mov
sbb
icebp
shrb
mov
lods
jl
icebp
mov
inc
int
mov
inc
pushf
inc
icebp
or
bound
mov
popa
test
addr16
imul
das
orl
adc
repnz
xchg
pop
xor
outsb
fcompl
rolb
data16
scas
testl
pop
mov
clc
loopne
mov
push
jnp
dec
sbb
mov
xchg
arpl
inc
in
add
cli
dec
mov
imul
xchg
jbe
in
inc
cmp
and
mov
inc
and
sub
pop
cmp
pop
lods
sub
and
cltd
dec
loop
call
push
aad
mov
jbe
mov
jecxz
scas
xchg
dec
scas
outsb
and
inc
lret
xchg
inc
not
call
aas
or
xor
shll
mov
mov
push
iret
repnz
fadd
cmp
out
dec
sbb
mov
mov
cli
leave
cltd
mov
or
cmpsb
adc
in
or
popf
imul
pop
stc
roll
sub
sub
or
dec
scas
rcrl
call
pop
popf
cmp
loopne
dec
icebp
sbb
cmpsb
jbe
push
push
negl
data16
je
push
addr16
mov
imul
jne
or
inc
cmp
sub
cmp
mov
xor
dec
aam
pop
mov
sar
fbld
sub
in
in
addr16
jecxz
clc
adc
or
mov
inc
and
lcall
mov
xchg
xor
std
shr
fisubl
cmp
cli
repnz
push
setp
adc
cwtl
ret
jg
testl
sbb
and
popf
sbbl
scas
cwtl
sub
mov
into
lcall
ret
sbb
fdivrl
inc
gs
loop
lods
or
pop
in
mov
jbe
ret
pop
test
mov
dec
je
in
aam
add
and
or
icebp
sti
cmp
or
loopne
sub
or
sub
lahf
addr16
pop
je
test
nop
pop
or
push
mov
cltd
mov
idivb
repz
sarl
xchg
adc
mov
fnstenv
pop
and
fdivrl
sahf
jb
push
xchg
pop
push
jge
add
sub
test
dec
push
push
add
push
inc
mov
ret
or
mov
stos
push
and
sub
mov
ret
push
gs
lcall
add
mov
jbe
jle
xchg
push
cltd
push
imul
sbb
je
push
stc
lret
nop
aam
movsl
aad
mov
mov
movsl
xlat
std
xchg
or
cmp
jno
jo
shll
dec
jg
adc
inc
inc
fidivl
sbb
enter
not
leave
stos
rclb
lcall
push
cmp
push
adc
pusha
fimull
lret
mov
dec
mov
scas
aad
insl
dec
int3
push
push
das
fildll
dec
xor
jo
push
inc
lahf
or
in
and
popa
fnstsw
jns
dec
lods
lea
jae
xchg
mov
push
mov
ret
add
out
idivl
mov
xor
cmc
xchg
hlt
les
das
fwait
data16
push
inc
ret
mov
fiadds
cmc
mov
movsl
or
push
xchg
arpl
xchg
mov
add
fldt
sbb
xchg
subb
sar
cwtl
loope
cli
mov
lds
add
mov
jp
cmpl
xor
jno
cmp
ss
mov
in
test
mov
negb
mov
ret
clc
nop
scas
lcall
pop
jecxz
cmp
adc
pop
pop
stos
dec
xor
out
mov
loope
loop
pop
jne
sub
and
insl
push
ret
shl
shrl
push
aad
and
and
dec
sbb
adc
xchg
push
mov
xor
clc
cmc
sbb
sbb
mov
popa
dec
sbb
popf
in
ret
cmpsl
and
es
xchg
js
xchg
dec
mov
test
stos
pusha
jl
xchg
pop
cmpb
push
scas
lock
jmp
jae
out
mov
lcall
mov
ss
das
dec
pop
arpl
in
rcl
out
jmp
sbb
call
adc
or
arpl
xor
movq
sub
ljmp
inc
and
xchg
arpl
lcall
cli
fimuls
pop
jae
cwtl
adc
in
mov
out
inc
and
psubq
inc
daa
stos
lods
xchg
add
out
add
push
pop
enter
out
cmp
cmpsb
add
jbe
xor
xlat
xchg
scas
inc
les
cmp
sbb
cli
adc
and
outsl
leave
mov
adc
inc
lds
cmpsl
ret
mov
lahf
and
mov
xchg
lods
lods
sub
mov
mov
repnz
imul
fwait
mov
insb
add
out
mov
xchg
sbb
inc
mov
dec
mov
push
out
scas
dec
psllw
mov
inc
int
dec
sbb
clc
pusha
pop
mov
lret
scas
scas
sub
inc
sub
out
lock
xchg
or
mov
mov
and
mov
lret
cmp
es
mov
test
or
cmpsl
test
lds
pop
ljmp
sbb
out
add
rorb
jg
shlb
sbb
in
cli
adc
xchg
jns
adc
rorb
popf
cltd
aam
mov
mov
das
daa
mov
mov
sub
scas
push
dec
jb
jae
das
inc
xor
inc
and
int3
loop
ds
outsl
fidivl
dec
je
mov
xchg
jae
clc
leave
xchg
jecxz
xor
lods
mov
loope
mov
rcrb
jl
add
repz
sti
xor
sbb
or
cmp
insl
push
dec
sbb
jge
insb
xchg
pusha
sbb
ret
lahf
dec
sahf
into
and
cli
push
adc
out
jg
jns
push
out
dec
test
cli
or
pop
in
add
mov
ret
mov
pop
jge
and
mov
mov
aaa
adc
xchg
add
les
or
rcl
push
and
add
shr
inc
mov
hlt
jno
pop
je
cs
mov
loope
enter
add
fs
orl
leave
outsl
out
xor
insl
xor
mov
insl
jmp
in
mov
xor
add
fisttps
add
or
arpl
inc
cmp
loop
loop
and
inc
cmp
movsl
pop
fdivs
add
stos
xlat
in
mov
fs
inc
cmp
fsubs
add
cmp
xor
mov
adc
or
inc
push
cmc
ret
pop
in
mov
enter
cwtl
js
icebp
movsl
movsb
jl
filds
add
orl
mov
and
shrb
jg
and
loop
cmp
push
cmp
and
pop
lods
pop
cmp
out
sub
push
iret
xchg
dec
sbb
cmp
xchg
pop
loop
fsubs
daa
pop
push
js
test
push
mov
aam
jl
scas
vmovdqu
pop
fcmovnu
lahf
mov
push
aad
pop
jmp
push
out
cmp
sbb
push
and
adc
jg
push
jmp
in
sub
es
xchg
adc
push
js
in
fsubl
jecxz
iret
aaa
add
sub
push
imul
mov
lret
insl
xlat
enter
sub
mov
mov
loopne
cmp
fisubrs
cmpsl
outsl
sbb
push
push
jnp
test
or
dec
fnstenv
dec
jo
in
adc
jecxz
sti
ret
daa
xchg
adc
fidivrl
jle
mov
imul
pop
push
pop
fistpl
enter
in
lock
enter
mov
int
bound
loope
ret
push
fwait
inc
xchg
xor
hlt
or
scas
sub
sub
addl
iret
push
fwait
push
xchg
aad
pop
mov
pop
and
jae
fwait
pop
lcall
imul
lods
movsb
mov
sbb
push
cmpsl
and
xchg
jne
fs
into
movb
inc
sbb
inc
jle
jge
pushf
mov
lret
xor
lods
cmpsb
ret
mov
fsubl
je
pop
andb
mov
add
popf
cmp
sbb
xchg
xchg
or
sub
mov
jecxz
mov
sub
or
mov
aas
pop
sbb
or
lock
ret
sub
fmul
gs
fiaddl
sbb
add
and
or
mov
outsl
loopne
jo
fs
push
mov
sbb
scas
cmpsb
sbb
jge
lcall
and
inc
pop
sub
cld
adc
cmp
popf
and
leave
mov
jb
jp
in
push
cltd
inc
jb
add
push
sbb
int3
js
andb
mov
pop
sti
push
shll
pop
lret
cmp
inc
negl
clc
les
jo
mov
cmp
out
out
dec
inc
cmp
mov
in
xchg
mov
mov
jnp
out
ljmp
mov
fdivl
les
addr16
xor
add
cmp
xchg
pop
daa
outsl
xor
cli
and
je
inc
out
adc
mov
mov
and
or
add
mov
and
pop
push
rcrl
push
xchg
jnp
shll
add
leave
ffreep
daa
shld
ss
stos
lcall
cmpsb
repz
push
and
ret
fwait
cmpl
cwtl
jl
fstl
maskmovq
divl
cwtl
or
pusha
inc
pop
dec
sbb
aam
pop
addr16
or
inc
bound
push
xchg
mov
out
sub
cltd
jge
mov
mov
addr16
je
dec
push
stos
jmp
jmp
dec
mov
sub
inc
pop
pop
mov
lahf
stos
cmpsl
add
dec
xor
in
aad
ss
sub
push
clc
int3
sub
sbb
into
mov
aad
dec
dec
xorb
inc
add
xchg
mov
loopne
ffree
and
cmpsl
bound
mov
mov
insl
cmpsb
and
iret
mov
fsub
je
lcall
dec
lcall
int3
adc
notl
pushf
mov
jle
clc
adc
cmc
jb
pop
sbb
cmp
mov
in
and
jp
popf
out
enter
ret
adc
sahf
vmovd
fiadds
cmp
adc
sbb
cmp
push
call
mov
xor
cmc
mov
xorb
xor
lods
xchg
scas
cmp
das
xor
scas
into
lcall
shrl
mov
mov
fists
loop
rcll
jle
insl
out
rcr
in
or
xchg
stos
jae
aam
pop
cs
mov
ljmp
int3
idiv
clc
lahf
shll
inc
movd
mov
stos
xchg
adc
rol
xor
push
or
fld
mov
xchg
adc
cs
nop
fcomi
fdivrl
sbb
andb
adc
clc
in
sub
mov
das
inc
and
movsb
pop
sti
jg
jle
js
jl
test
jl
addr16
scas
sub
aad
or
cmpsl
je
push
xchg
jns
mov
add
mov
cmp
xor
enter
lock
mov
cld
in
sbb
int3
orl
outsl
in
fucomip
pusha
jl
test
out
xor
dec
gs
ljmp
pop
inc
and
subl
sbb
mov
push
cmp
and
dec
mov
imul
inc
fwait
sub
dec
jle
movsl
jl
cmp
mov
lret
jmp
push
and
xor
stos
outsb
icebp
sahf
mov
sbb
dec
jb
push
rorb
fadds
inc
lods
and
je
andb
xchg
xchg
sti
repz
add
xor
repz
aas
lcall
ljmp
inc
loop
push
lock
mov
cmc
jg
fwait
mov
xchg
add
dec
sbb
sti
in
xchg
xchg
fsubrl
pop
fcompl
mov
or
aas
daa
out
jmp
push
ja
ds
popa
cli
mov
inc
sbb
dec
mov
add
push
cmp
pop
outsb
pop
ds
dec
fcompl
bound
add
adc
loop
imul
add
loop
adc
imul
mov
mov
call
cmp
stos
add
ss
dec
iret
scas
aam
in
push
push
insl
pop
and
mov
inc
xor
mov
int3
push
xor
inc
fldcw
xchg
jbe
add
icebp
add
xor
lea
dec
inc
sbb
sub
out
push
mov
mov
shrl
fsts
rclb
cmpsl
add
fucomip
cmp
mov
mov
cmp
fsubrs
push
mov
jne
repnz
stos
es
fstp
pop
es
cmp
push
lock
lcall
and
jl
jbe
inc
push
daa
loopne
adc
add
ja
mov
fsubrl
mov
sub
ficomps
push
push
sub
shl
in
movsb
and
repnz
adc
fildll
es
pop
pop
push
and
ja
hlt
cmpsb
add
mov
fidivrs
js
xor
scas
pop
icebp
lea
popa
mov
int
jb
mov
or
jne
push
imul
fbstp
or
lds
imul
xchg
push
sub
pop
xchg
scas
xchg
xchg
adc
mov
or
andl
mov
aas
fsubl
add
pop
test
das
xchg
outsl
jmp
dec
das
das
lods
mov
into
cmc
add
xchg
imul
push
mov
insb
call
shll
push
pop
into
or
jmp
inc
fstl
gs
ret
pop
sub
cs
cwtl
cmp
ds
or
add
fs
pusha
sbb
jmp
ljmp
lods
inc
cltd
xchg
in
adc
sub
in
and
jnp
mov
xchg
jecxz
dec
xchg
xchg
insb
pop
loope
scas
jmp
lret
cli
jo
cmp
fistpll
aad
scas
mov
xor
insb
cmp
scas
pop
out
xor
xchg
data16
aas
mov
loop
in
pop
cmp
ffree
and
cwtl
adc
enter
ja
pop
and
pop
cmpsb
pop
dec
sar
mov
stos
int
andl
dec
push
push
lods
xchg
xor
popf
xor
sbb
mov
mov
jae
mov
pushf
mov
lret
push
add
push
mov
test
sbbb
in
or
jnp
fsubs
adc
or
cld
lock
fcmovu
shll
sahf
lcall
push
mov
loop
nop
xchg
mov
dec
sbb
sbb
and
outsl
lcall
imul
push
call
rorb
ror
inc
lret
xchg
adc
popa
mov
mov
push
cmp
inc
and
popa
fstps
movl
cmp
scas
push
fbstp
test
jecxz
aas
pop
jo
adc
test
push
fwait
jg
fistpl
and
push
fisubl
ljmp
data16
jnp
data16
mov
adc
ss
cmp
dec
jmp
fsts
lods
movsb
fcmovbe
int3
mov
outsl
pop
es
mov
imul
cmp
call
imul
iret
mov
xchg
scas
shrl
lods
jl
mov
or
pop
loope
lret
mov
out
lret
pop
jbe
pop
pop
repz
mov
sbb
in
out
mov
mov
mov
stos
ja
fdivrl
sbb
fnstsw
sbb
add
cmp
imul
sarb
inc
push
sti
repz
pushf
mov
sarb
jg
mov
xchg
jge
loop
es
xlat
lret
push
repnz
mov
dec
adc
push
dec
jmp
xchg
xor
shrl
push
mov
in
dec
or
out
imul
loopne
loop
stos
sub
push
fcmovb
inc
cmpsb
in
xor
arpl
bound
and
test
aaa
leave
jns
test
mov
shl
sbb
mov
and
add
loopne
stos
or
mov
cmc
lea
jb
pop
dec
das
xchg
ja
mov
and
cmpsl
mov
ror
inc
mov
cmc
fnstcw
adc
add
push
mov
dec
dec
rcrl
rcl
fidivrs
add
enter
leave
lods
lods
dec
xor
mov
push
sbb
stc
pop
jecxz
popa
cmp
add
or
jp
or
xor
push
mov
in
mov
dec
jns
arpl
loope
jbe
jo
jbe
mov
mov
push
rorl
add
outsl
cmpsb
lret
loope
and
sbb
mov
xlat
mov
cltd
test
mov
inc
pop
sbb
jbe
cs
push
sub
faddp
cmc
iret
jmp
loope
mov
in
rclb
push
mov
pop
fcoms
dec
jnp
cmc
cmc
jb
jo
pushfw
fildl
cwtl
ss
pop
jb
sub
scas
dec
iret
fs
adc
mov
ss
cmpsb
xchg
es
hlt
or
lahf
xor
lods
test
jno
pop
and
roll
push
packssdw
sub
push
cmp
mov
mov
push
mov
mov
cs
xor
and
scas
jmp
xorb
int3
mov
jp
pop
xor
lock
leave
inc
or
aad
or
pop
daa
inc
or
jo
sbb
lret
test
mov
sbb
push
or
cmp
rolb
in
les
cmpsb
test
js
rcl
mov
mov
sbb
inc
insb
add
inc
sub
leave
sub
xor
clc
fsubr
jg
mov
loop
push
and
daa
repz
pop
lods
test
imulb
add
mov
dec
adc
movsl
pop
sub
cli
fimull
andl
cld
push
cld
or
mov
rorb
xchg
jg
scas
cmpsl
sbb
sbb
sbb
pop
jle
or
push
sub
add
loopne
mov
es
pop
shrl
in
cld
addl
lea
xchg
jno
push
loopne
or
add
insb
inc
xor
cmpsl
int3
fs
jecxz
outsb
xchg
mov
push
in
sbb
mov
mov
in
mov
xorl
imul
repnz
dec
in
adc
jg
sub
cmpsl
mov
push
out
mov
push
sbbl
ret
call
scas
jl
jle
mov
push
lahf
xor
pop
pop
cmp
push
sub
mov
test
add
jns
jle
es
and
add
mov
sbb
xor
sbb
int3
xor
nop
push
push
mov
sub
fdivs
ds
cwtl
insb
mov
dec
outsl
rolb
adc
jp
xor
push
scas
jnp
pop
les
data16
pusha
std
rcll
mov
pop
jno
jns
mov
ds
push
scas
lret
inc
push
adc
clc
mov
pusha
jbe
jp,pn
shrl
or
out
xlat
in
push
mov
cld
orl
repz
stos
faddl
rcll
aas
cs
push
jne
sbb
push
or
jle
imul
repz
sbb
xchg
push
sbb
cltd
pop
mov
xchg
lods
movsl
test
lcall
repnz
cmp
pop
sub
orl
mov
xor
andb
pop
mov
leave
rcrl
jb
jl
cmpsb
lret
mov
lret
lret
leave
xchg
lods
cltd
popa
test
or
dec
pop
jl
jp
in
pop
add
add
sub
fstpt
cld
xchg
imul
pushf
pop
cmp
rcl
outsl
addr16
fisubrl
ja
jno
ret
mov
adc
in
shr
push
setge
jmp
dec
dec
sbb
sbb
add
mov
push
cmp
cs
sbb
lea
or
and
jae
inc
jl
and
xor
xor
lret
ret
lret
loope
iret
pop
ja
outsl
repnz
dec
push
movsl
lea
repnz
dec
aam
lahf
and
xchg
add
inc
adc
adc
and
jns
or
es
inc
pop
out
mov
ror
fwait
mov
and
fldenv
jo
mov
mov
clc
cltd
push
mov
sub
xchg
xor
xor
or
outsb
in
push
sub
pop
ja
mov
fstps
pop
cmp
call
lods
xchg
sub
bound
sbb
mov
ss
std
xchg
loop
shlb
mov
fsts
mov
push
add
imul
jnp
pop
mov
sub
inc
out
out
lahf
and
xchg
je
mov
test
cmp
xchg
push
inc
inc
fwait
in
int3
pop
es
inc
fs
pop
push
push
dec
cmp
mov
mov
xor
push
pop
add
loop
in
sub
jae
xchg
mov
mov
int3
mov
cmp
shlb
jecxz
cwtl
faddl
movl
outsl
addr16
pop
ret
nop
cmpsb
xchg
jbe
sahf
sub
js
mov
popf
jecxz
xor
icebp
call
push
jmp
in
mov
pop
sub
das
dec
jecxz
inc
pop
cld
mov
inc
jae
push
and
sub
aam
repz
mov
jge
cwtl
lock
add
xchg
mov
sub
add
add
add
fs
jg
clc
adc
adc
lds
cmp
insb
call
jle
orl
icebp
sub
jl,pn
jbe
repz
insl
xchg
orl
mov
jle
dec
mov
cmp
call
xchg
lret
insb
jb
outsb
xlat
lret
dec
adc
arpl
test
call
push
push
mov
push
jnp
xchg
dec
adc
mov
dec
pusha
pusha
popf
xor
rcll
cmp
and
in
or
mov
inc
repnz
jae
addr16
shl
and
mov
incl
mov
mov
fcomi
mov
sti
mov
lea
popa
jge
inc
adc
sti
push
leave
mov
in
bound
jecxz
sahf
mov
jno
pop
inc
or
sbb
push
push
push
mov
xor
movsl
imul
ror
enter
dec
and
dec
addr16
les
in
dec
rcrl
test
inc
or
je
dec
sbb
cs
psllq
insb
outsl
adc
sub
arpl
lea
ror
incb
push
pop
mov
aas
loope
movsl
mov
lahf
or
mov
sub
xchg
push
inc
shl
repz
fldenv
lods
jge
ja
mov
pushf
push
outsb
push
mov
incb
test
enter
movsl
loope
pop
push
movl
jle
and
fldl
ja
pop
pop
add
push
push
ljmp
xchg
test
mov
out
filds
cmc
fsubrl
cmpsb
lahf
mov
push
loopne
ret
test
sub
adc
je
add
and
pushl
cmc
mov
jl
pop
mov
push
pop
div
scas
lret
dec
rdmsr
clc
repnz
jns
fadds
test
jb
mov
mov
xchg
fisttpll
mov
addr16
sarl
fistpl
ljmp
pop
dec
and
in
leave
pop
xor
fbld
jge
leave
pushf
pop
add
insb
orb
ret
or
stos
jns
pop
inc
adc
and
fiadds
shr
pusha
sub
sub
std
push
pop
cmp
ror
sbb
out
cmp
push
adc
mov
loop
in
mov
dec
gs
lcall
call
test
jnp
sub
mov
outsb
xchg
arpl
jno
stc
loop
sbbl
in
xchg
mov
out
and
lds
dec
je
push
adc
inc
pop
testb
hlt
sti
jg
fstp
inc
xchg
lret
jle
cli
cmpsl
xlat
pop
sbb
jg
outsb
hlt
sub
cmp
mov
inc
ja
dec
addr16
jmp
dec
and
inc
daa
movsb
insb
sub
out
inc
in
push
pop
popa
cmp
add
rcrb
das
inc
sub
mov
mov
add
insb
cmpb
and
fcmovb
ds
adc
push
pop
cmp
outsb
adc
rcr
int
fldl
and
dec
push
icebp
loope
lea
lahf
sbb
rclb
out
addr16
fistpll
arpl
mov
xor
push
iret
mov
push
xchg
shr
push
pop
jmp
aam
pop
lret
je
xlat
cld
sbb
inc
outsl
pushf
sarb
fiaddl
add
cmc
xchg
xchg
mov
scas
adc
in
cmp
push
jo
ret
pop
sar
adcb
testb
dec
mov
mov
fldt
test
pushf
pusha
mov
call
inc
dec
and
leave
sbb
mov
xchg
cld
xchg
hlt
adc
in
push
adc
cmp
in
loop
mov
sub
lods
in
fcoml
addb
jno
sub
dec
lahf
out
pop
movsb
fsubrl
call
imul
or
rorb
mov
jl
mov
or
sub
push
xor
icebp
pop
lahf
sbb
jne
bsr
xor
rcl
mov
ror
mov
ror
add
mov
rcl
bt
mov
test
pushf
jmp
in
fadd
lods
mov
ret
dec
add
je
loopne
push
sbb
test
jl
push
push
subb
sbb
add
xchg
jle
popf
fucomip
test
mov
sti
femms
popa
cmp
cmp
mov
mov
and
jp
jns
pop
mov
ficoms
aaa
mov
int
add
xchg
and
pop
in
inc
push
xchg
push
mov
sbb
fstpt
mov
out
and
test
cld
xor
jmp
out
popf
cltd
jno
nop
ret
or
mov
out
fsubp
mov
pop
leave
stos
inc
add
dec
lret
add
int3
mov
dec
adc
jb
fistpll
pop
jno
out
scas
pop
sbb
daa
add
mov
mov
push
cmp
dec
mov
cmp
dec
xchg
xlat
push
and
mov
inc
pop
push
push
xchg
jle
lcall
sbb
pop
add
xchg
cmpl
loop
inc
dec
movl
mov
pop
aaa
cmpsl
adc
imul
test
cmp
js
mov
pop
push
dec
pop
fcom
cmpsl
dec
scas
xor
xchg
cmp
sub
insl
push
idivb
lods
das
idivl
inc
js,pn
adc
mov
mov
sub
in
and
pop
cltd
icebp
sbb
sbb
imul
cmp
dec
lret
and
mov
fsubr
inc
fwait
cmp
xor
ret
sub
push
xchg
bound
push
rol
cmpsb
sahf
jle
xchg
mov
out
fistps
into
xchg
je
cli
aam
inc
adc
in
mov
mov
jl
jecxz
test
arpl
pop
or
cmp
clc
je
jae
xor
in
xchg
or
cmp
adc
cmpsb
pushw
xor
test
push
xchg
jecxz
adcl
sbb
lahf
xorl
daa
pop
lahf
add
lea
jle
push
pushf
pushf
dec
movb
push
cmc
pushl
shl
setns
jmp
push
lea
jae
test
test
pusha
cmp
jmp
mov
sti
movsl
std
in
ljmp
mov
jnp
arpl
mull
push
mov
sbb
xchg
mov
pop
sub
mov
jnp
pop
mov
fdivrl
add
aas
mov
xor
dec
or
iret
jae
jne
jl
dec
inc
or
sbbb
xor
xchg
fstps
bound
cltd
ffree
pop
mov
push
xlat
pop
jmp
jns
xchg
adc
mov
sarl
jecxz
sub
out
jbe
insb
jb
mov
je
dec
sub
jg
aad
sub
lock
push
cltd
mov
loop
daa
dec
or
repz
jbe
lea
and
jmp
add
adc
xor
jo
add
or
mov
or
leave
in
insl
push
dec
scas
pop
push
lret
leave
lcall
pop
push
leave
lret
dec
pop
fwait
out
fsubl
ja
xchg
mov
orb
pop
xor
pop
lahf
jmp
add
out
or
mov
adc
inc
xor
push
jp
inc
into
dec
mov
lahf
add
rcl
rcrb
and
idiv
pusha
call
call
mov
stos
out
fists
pop
xchg
mov
jmp
mov
daa
outsb
into
pushf
js
dec
mov
fwait
sbb
ror
nop
cmpsb
adc
loope
add
and
aad
popa
std
dec
and
stos
in
in
enter
adc
orl
inc
mov
add
rcll
scas
pop
and
in
push
out
idivl
rol
add
testb
jb
jle
inc
test
xchg
ljmp
mov
inc
and
jo
lahf
pop
int
insl
add
inc
gs
inc
push
add
mov
mov
scas
adc
add
xlat
mov
repz
xchg
std
into
xchg
cld
mov
pop
xor
adc
xchg
cmpsl
popa
bound
iret
jae
movsb
sub
lahf
cmc
orb
shrl
xchg
enter
mov
mov
call
xlat
pop
inc
ds
mov
inc
scas
ss
ficomps
lahf
push
cmpsl
mov
add
cmpsl
xor
daa
cmp
mov
test
hlt
pop
add
dec
inc
jl
movsb
mov
pop
jae
roll
fnstenv
mov
xorb
jae
lea
push
std
xchg
loope
and
call
sbb
dec
ljmp
push
mov
mov
pop
sub
sahf
sbb
add
xchg
or
inc
out
add
pop
out
lods
rcrb
fsubrs
adc
lcall
loop
jle
into
pop
lahf
push
adc
and
fisubl
dec
push
sarb
dec
cmp
mov
je
sbb
int3
scas
mov
lock
add
ret
adc
adc
and
into
cld
and
mull
sbb
mov
fidivrl
cld
sarb
sbb
ret
bound
cmpl
jno
outsl
scas
xchg
mov
mov
dec
pop
lahf
idivl
mov
jmp
mov
jmp
pop
lahf
add
ljmp
lea
in
je
pop
push
sub
in
adc
ficoml
pop
mov
dec
pop
aam
cmp
or
xchg
pop
lret
pop
jne
add
stos
lcall
ds
cs
jne
mov
inc
mov
aaa
test
mov
lret
fidivl
push
mov
loop
push
cli
mov
add
insb
cmpb
mov
sbb
bound
stos
imul
add
shll
jae
or
insl
cmc
or
scas
pop
pop
inc
mov
push
pop
shll
push
mov
int3
sub
int3
movsb
daa
outsl
add
mull
xor
cmpsb
mov
inc
aas
cltd
jns
lock
adc
imul
inc
mov
imul
lock
dec
inc
inc
push
push
xor
cs
insb
add
jecxz
ret
test
cmp
cmc
cmpb
jmp
rcrl
rorb
adc
xor
rcl
mov
cwtl
cld
jecxz
pop
out
mov
hlt
fsts
xchg
neg
outsl
lea
jmp
movsb
mov
insb
lock
push
js
ret
xchg
ficoml
loope
out
mov
push
mov
shl
fsubl
and
inc
arpl
in
jne
xchg
pop
sbb
shr
sub
scas
dec
xlat
sub
pop
lahf
add
push
xchg
into
test
cwtl
jo
out
les
dec
xor
imul
aas
dec
lret
and
sbb
pop
or
outsl
add
test
fcompl
or
pop
ret
xchg
fcompl
pushf
pusha
push
push
lock
loopne
mov
inc
xor
loope
sbb
mov
push
fsubrs
xchg
and
jmp
push
xchg
mov
shrb
repz
sub
mov
lock
les
push
fists
xchg
popf
cmp
das
dec
xor
das
daa
xchg
xchg
adc
scas
jnp
pop
pop
mov
aam
icebp
loop
and
cmp
in
loope
outsb
push
sbb
or
loope
test
pushf
test
pop
shrl
sbb
scas
and
pop
sbb
pop
test
add
sbb
push
dec
xor
adc
cmc
jmp
dec
loope
lahf
add
cli
jbe
int3
adc
loope
mov
push
xchg
push
and
add
cmp
jno
hlt
lods
and
inc
bound
adc
xor
fucomip
and
xchg
add
in
cmp
mov
out
cmpsl
adc
cltd
pop
popf
inc
xorl
xchg
lret
in
stc
inc
mov
fwait
out
mov
dec
cmpsb
push
jle
into
data16
repnz
push
pop
lahf
add
and
pop
lock
popf
sub
clc
lock
xor
aaa
pop
nop
sub
jl
test
addb
lock
and
stos
inc
mov
movsl
shrl
adc
ss
gs
push
mov
sub
pop
je
inc
or
loope
mov
inc
push
nop
inc
cmp
cmpsb
sub
fwait
int3
aam
jle
in
jge
inc
mov
outsb
cmp
out
jbe
data16
xor
es
xchg
lea
sti
jle
add
pop
fs
lods
inc
sbb
or
mov
pop
hlt
out
push
jl
or
rcrl
mov
sbb
mov
es
jns
push
mov
rcll
inc
ja
idivl
push
sarb
mov
jae
bound
mov
inc
xor
jecxz
jnp
ja
pop
shll
das
daa
ja
push
ret
sub
scas
mov
and
test
idiv
clc
cmp
cmp
pushf
mov
pushl
lea
je
push
movb
mov
pushf
lea
jmp
scas
push
test
push
mov
pushf
pusha
dec
sub
je
rcrb
push
das
jnp
pusha
inc
adc
sarb
mov
mov
mov
mov
pop
cmpl
leave
out
in
adc
sbbb
jnp
pop
or
cmpsl
popf
das
mov
inc
es
push
pop
sub
iret
ret
or
cmp
sbb
out
inc
lock
add
and
repz
in
loop
cwtl
ficompl
push
xchg
sub
or
dec
inc
inc
daa
pop
outsl
xlat
pop
mov
lahf
or
mov
mov
out
adc
leave
lea
and
add
jne
mov
arpl
loopne
inc
pushf
rolb
mov
mov
and
sbb
clc
adc
test
inc
jne
sub
xor
hlt
dec
sbb
sub
call
orb
xor
sub
stos
and
repz
pop
lods
mov
mov
jle
cltd
cmp
repz
dec
mulb
push
aas
inc
pop
ret
fwait
mov
and
adcb
shlb
pop
lahf
or
push
insl
popf
sub
fmul
outsl
jle
stc
adc
lods
insl
xor
adc
test
popa
mov
pop
es
sbb
out
movsl
cltd
sar
ss
scas
adc
xlat
lahf
mov
cmp
mov
lret
sbb
faddl
sahf
xor
imull
repz
aad
in
addl
adc
jmp
dec
into
xchg
inc
lea
xor
xor
jl
cltd
jge
mov
mov
and
lds
ret
fstpt
mov
mov
clc
mov
pop
lahf
syscall
add
cmc
mov
rcl
btr
lea
sub
sub
movzbw
mov
call
push
dec
dec
push
inc
push
dec
cs
insb
add
xchg
cmpsb
or
mov
lods
inc
sbb
cwtl
adc
dec
or
pop
dec
in
ret
sub
sub
inc
mov
cli
fstpt
enter
mov
mov
stos
ret
add
xchg
int
fsubrl
xlat
pop
sbb
ss
xor
ds
xor
mov
xchg
mov
add
add
int
mov
dec
lods
or
icebp
add
push
pop
lahf
shrd
insb
out
popa
mov
sbb
jbe
pop
bound
push
ljmp
rcll
cwtl
addl
nop
add
sbb
or
push
movsl
mov
mov
jge
jecxz
push
mov
movb
jb
mov
pop
test
mov
out
add
sub
outsb
sar
xchg
insb
and
mov
or
hlt
adc
das
cld
int3
sahf
push
mov
lods
adc
mov
xor
mov
sub
lahf
push
jno
mov
aas
add
out
repnz
rclb
adc
outsb
add
jae
shrl
stos
mov
out
movsl
mov
rorb
stos
sub
fcomi
push
ret
xchg
sub
adc
insb
sub
je
int3
jno
mov
mov
mov
mov
cwtl
mov
jno
sub
rorl
mov
or
lea
cmp
inc
bound
popl
and
jp
sub
sbb
out
inc
lods
lods
xor
fwait
mov
or
movsb
mov
xchg
stos
out
shrb
das
sbb
fs
inc
sbb
sbb
sahf
sub
out
out
adc
outsl
hlt
les
push
xchg
xchg
cmp
lea
insl
fmul
imul
lahf
cmp
pop
les
pop
jp
ljmp
enter
mov
adc
push
lcall
ss
stos
dec
xor
data16
or
xor
jmp
sub
sub
js,pn
add
mov
out
arpl
pop
repz
mov
or
push
mov
loopne
or
cld
fs
bound
les
mov
out
jae
jne
push
cmp
outsl
mov
mov
cmpsl
pop
jne
stos
push
jmp
xor
inc
push
nop
in
rolb
fisttpl
testl
js
adc
cwtl
pushf
pop
lahf
or
push
inc
sbb
data16
xor
arpl
xlat
jecxz
adc
adc
popa
clc
leave
loop
push
pusha
xlat
in
dec
add
and
adc
inc
xchg
cmp
cmpsb
jae
sub
xlat
jmp
aas
fsubs
sti
inc
mov
sub
xor
out
inc
sti
and
xor
push
add
mov
mov
push
sbb
sbb
and
push
lock
shrb
nop
add
pop
lahf
or
aaa
push
out
xchg
addl
push
sarb
mov
repnz
cli
inc
test
mov
cmp
dec
or
jae
jl
or
imul
insb
adc
aas
cmp
fbstp
mov
enter
inc
jb
and
mov
mov
fnstsw
imull
push
ret
fstl
fsubs
ret
cmp
mov
cmp
dec
fldenv
sbb
clc
pusha
les
loopne
sbb
pop
lahf
or
cli
add
movb
shr
add
mov
pushf
clc
cmp
test
call
jne
push
stos
movb
lea
jmp
lea
je
test
sub
bt
cmc
clc
call
shr
shl
or
not
shl
mov
stc
bsr
add
bswap
not
mov
lea
jmp
movw
lea
jle
call
jmp
inc
inc
push
inc
push
dec
xor
cs
insb
add
dec
ss
pop
mov
xchg
mov
shl
push
repz
mov
test
mov
mov
cmpsb
loop
and
or
adc
push
imul
jb
rcrl
xchg
sbb
fyl2x
sahf
ss
shll
push
push
sbb
lock
int3
icebp
gs
sbb
insl
or
mov
cmp
cmc
testl
outsl
pop
jae
stos
adc
lahf
or
leave
xchg
jne
imul
cltd
adc
or
cmpsb
add
sbb
xchg
or
mov
push
mov
cmpsb
enter
mov
ficompl
inc
mov
sub
lea
pop
add
pop
cmpsl
xor
andb
loope
or
adc
xchg
dec
xor
cs
dec
mov
stos
stos
pop
lahf
or
mov
mov
xchg
scas
cltd
int
jns
or
jno
pop
fsts
inc
add
popa
xor
sub
std
pop
ja
pop
fsubl
cmc
rcrb
shrl
push
rolb
pop
xchg
cmp
adc
inc
lahf
cmp
scas
xchg
iret
mov
jno
inc
sub
xchg
xchg
sbb
xchg
cs
repz
mov
pusha
out
adc
push
iret
pop
and
pop
mov
lahf
daa
fwait
xchg
xchg
mov
sbb
push
pusha
jmp
cmc
clc
cmp
cmp
pushf
call
js
jnp
sub
mov
mov
dec
outsb
push
inc
xor
out
add
inc
das
gs
aaa
pop
imul
xor
mov
mov
lods
sbbl
jmp
add
sub
mov
scas
cwtl
push
xchg
rclb
jnp
xor
int
lods
xchg
rol
xor
cltd
test
cwtl
lods
lds
push
lcall
mov
pop
dec
and
add
rol
add
sbb
arpl
dec
mov
adc
pop
jae
sti
fidivrs
test
xor
mov
pop
dec
jns
or
popf
adc
pusha
xor
insl
dec
in
xchg
xor
pop
cld
fdivr
lret
cwtl
loop
leave
hlt
dec
loop
arpl
jl
inc
and
aas
gs
lahf
jnp
fs
ret
andb
pop
shl
cwtl
mov
mov
pop
and
scas
insl
ds
push
sub
incb
mov
pop
jo
ficomps
bound
mov
test
and
pop
nop
hlt
add
int3
xor
ss
jo
ss
or
mov
push
in
fs
or
insl
mov
sti
nop
aad
fdivl
add
xorb
mov
push
aad
ret
sub
enter
out
mov
repz
test
pop
mov
lea
stc
lea
pop
nop
hlt
mov
pushl
mov
lea
je
pusha
lea
jno
pusha
pusha
or
push
movw
lea
je
aas
xor
lea
xor
bts
xchg
xadd
mov
movzbw
pushf
adc
bsr
mov
shrd
bsr
shr
sub
not
mov
cmp
pushf
stc
mov
or
pushf
push
jmp
dec
inc
push
inc
push
dec
xor
cs
insb
add
fcmove
mov
mov
xlat
mov
inc
and
fnstcw
dec
push
xor
inc
int3
aaa
into
lahf
fldt
xor
mov
testb
pop
jb
mov
sbb
out
adc
jge
adc
add
in
xor
mov
enter
or
and
jmp
sti
fsubl
xchg
push
sub
sahf
push
sbb
bound
sahf
pop
push
pop
nop
negl
dec
outsl
arpl
inc
jb
add
loop
int3
xor
push
ljmp
push
cmpsb
push
pop
int
sub
dec
xchg
pop
ds
sbb
xchg
lods
leave
popf
sub
xor
push
addr16
in
test
out
sbb
mov
cmp
xor
je
inc
int
aad
inc
or
mov
nop
testb
add
clc
pushf
sub
adc
stc
sar
setg
shr
pushl
bts
bt
mov
not
stc
add
pusha
xor
sub
add
lea
shl
movsbw
mov
clc
clc
shr
pusha
cmc
cmp
pushl
mov
pushf
push
lea
je
cmc
pushf
pusha
cmp
jmp
xor
inc
pop
in
pop
or
push
sub
mov
xor
adc
add
jge
or
add
stc
jmp
xor
mov
outsl
dec
mov
adc
mov
and
pop
mov
push
sbb
lock
cltd
lods
jge
mov
cld
test
outsl
sarl
push
push
lret
aaa
sti
push
test
lcall
sbb
mov
push
test
xor
cmp
mov
inc
lods
nop
test
fstpt
mov
icebp
cli
mov
jb
lock
movsl
call
ret
lcall
test
cmp
outsl
pop
jne
sub
leave
enter
pop
cs
adc
jge
jo
xchg
xorl
cmp
mov
cmp
cmp
mov
and
scas
negl
pop
nop
icebp
scas
mov
and
pusha
movb
mov
mov
push
call
cmp
push
lea
jae
cmp
bt
cmp
call
pushf
test
cmp
jmp
jg
into
xor
inc
sahf
les
adc
ds
adc
add
outsb
out
add
add
hlt
cmc
push
or
hlt
adc
clc
pop
dec
pop
insl
dec
mov
into
les
sbb
or
jnp
mov
sub
and
add
push
mov
push
hlt
xor
dec
dec
in
cmp
test
lock
add
dec
outsl
popa
fs
imul
add
xchg
jle
jb
jge
mov
enter
mov
mov
ret
mov
aam
lret
in
movsb
cwtl
dec
ja
insl
aad
fcompl
lock
out
mov
push
and
pop
dec
into
add
adc
outsl
and
or
jmp
xchg
add
insb
cmp
mov
rclb
jp
xor
outsl
dec
rorb
popa
jno
mov
cld
mov
lock
cmp
cld
dec
or
nop
repz
jecxz
pushf
jmp
adc
sub
je
sub
test
sub
mov
jge
mov
mov
sub
dec
cmpsl
sub
and
cmp
dec
ja
mov
push
inc
dec
adc
addb
orb
adc
pop
aad
jo
mov
mov
out
jmp
adc
rolb
jge
icebp
in
mov
fucom
mov
les
add
repz
xor
sub
dec
dec
ret
pop
mov
push
iret
inc
dec
pop
sbb
aas
mov
cmp
mov
dec
xchg
xorb
sbb
faddp
out
xlat
push
and
dec
iret
ret
cmpsl
into
punpckhbw
imul
loopne
cmp
adc
xor
jge
negl
fistps
mov
mov
adc
fwait
mov
pop
push
clc
aam
cmp
jno
push
xchg
adcl
repnz
add
mov
xor
mov
in
sbb
dec
mov
jge
and
outsb
mov
and
scas
jmp
popa
pop
dec
rclb
jp
rclb
inc
cmp
adc
mov
jmp
pusha
out
xor
int3
xchg
lods
sub
mov
out
mov
jbe
sbb
sbb
loopne
test
push
mov
cwtl
in
shl
cwtl
mov
mov
subl
xchg
nop
xchg
scas
pop
mov
or
lret
test
sub
nop
push
andb
popf
sub
cmp
jne
popa
push
push
lcall
xchg
cmpsb
loop
pop
mov
xchg
and
in
aaa
or
or
dec
pushf
jg
fwait
arpl
jle
cwtl
clc
fsub
out
jl
or
das
mov
push
rcrb
mov
mov
push
movsb
xchg
and
cs
jno
int3
inc
scas
imul
xchg
test
test
aad
push
rcrl
pop
lods
jge
jge
cmp
mov
push
aaa
enter
lcall
mov
mov
sub
xor
pop
mov
mov
xchg
mov
aam
and
mov
in
xor
add
int3
xor
loopne
nop
std
cmp
fistps
or
xor
pushf
mov
lock
adc
jl
jl
mov
adc
pop
sub
push
mov
cmp
or
xchg
jb
call
mov
das
repz
int3
add
incl
inc
adc
cmpsb
xlat
sti
xchg
sub
push
mov
inc
inc
jp
sub
popa
rorl
testb
bound
mov
jle
pop
nop
cld
scas
mov
or
lahf
jle
ljmp
outsl
pop
rorl
fcmovne
mov
mov
or
or
mov
vcvtsi2ssl
fldt
fisubrl
fistps
or
mov
repz
adc
cltd
das
mov
scas
pop
fs
and
mov
int3
adc
or
movsb
enter
xor
lds
cmpsl
sub
mov
imul
out
fwait
pop
jge
sub
cld
enter
jl
jmp
sbb
xchg
jnp
xor
fcmovne
out
addr16
pop
nop
cld
xchg
mov
dec
and
pop
je
jl
dec
adc
adcb
in
add
fs
loopne
in
add
imul
add
mov
inc
pop
pushf
pusha
and
cmc
xchg
sbb
sbb
cltd
dec
xchg
and
test
push
in
pop
aad
pop
cmp
jmp
inc
sbb
addr16
fldt
jp
dec
bound
test
lods
js
or
or
icebp
sahf
mov
xchg
or
or
sbb
sti
push
in
enter
mov
add
repnz
roll
enter
adc
inc
fsubl
scas
and
shr
fs
lods
inc
xor
and
lcall
hlt
xor
test
mov
xor
aam
lock
mov
fldcw
pushl
mov
pushl
movl
pushf
pushf
pushl
ret
enter
mov
and
or
pusha
andb
push
int3
loopne
jo
pop
pop
adc
mov
pusha
cmp
mov
fstl
sti
popf
lods
jl
test
sahf
mov
add
fistps
pop
jg
xchg
daa
lods
xchg
and
test
or
nop
jmp
test
jecxz
fdivrs
mov
or
lds
jne
adc
mov
pop
nop
jo
and
movsbl
mov
pushf
pushl
lea
jmp
movsl
xor
clc
enter
adc
jp
cs
mov
cs
aad
aas
hlt
repz
fwait
addr16
dec
cld
ja
add
jp
enter
cmp
test
lret
inc
adc
loope
bound
sbb
inc
fiadds
and
mov
hlt
push
in
xchg
sub
mov
cmp
scas
out
ficomps
xor
and
fwait
aaa
ja
xlat
pop
mov
xlat
iret
lret
pop
pop
nop
xchg
movsl
fdivrp
mov
outsl
push
pushf
gs
cmp
shl
jne
in
ret
mov
fldenv
xor
mov
add
push
and
xor
leave
cmc
in
mov
push
add
shlb
in
es
pop
fnsave
lea
addb
mov
daa
test
pushf
sarl
cmc
aad
test
loopne
push
ret
pushf
push
inc
fs
xor
and
in
mov
fsubrp
in
push
iret
inc
hlt
es
xor
jmp
ret
ja
sbb
vpaddw
fsubrp
in
cmc
and
cmc
stc
sub
nop
xor
adc
sub
push
ja
imul
fyl2x
add
adc
loopne
in
std
in
cmc
or
fldln2
pop
adc
adc
cmc
lods
mov
std
and
lock
int3
xor
outsl
adc
inc
mov
lods
sub
es
fnstenv
roll
sub
lock
es
call
push
and
lock
inc
es
jno
adc
sub
lock
or
inc
loope
xor
add
in
push
call
insl
cmp
in
leave
sbb
js
clc
sbb
lods
xor
aad
in
dec
adc
add
sbb
pop
inc
xor
pop
jne
and
sub
mov
mov
scas
mov
xorl
lods
xor
stc
or
lock
jnp
and
inc
js
popa
adcl
aad
inc
and
adc
lds
roll
sub
fnstsw
out
subb
repnz
stc
jns
imul
mov
or
and
xor
insl
pushf
popa
jnp
sub
xor
test
lahf
pop
aas
inc
cwtl
and
xor
imul
xor
popa
cmp
adc
or
and
jge
vpsllq
mov
jge
inc
mov
and
inc
and
call
shlb
shlb
jo
push
jno
repz
loopne
xor
pop
arpl
inc
in
clc
xor
test
jns
out
es
sub
pop
xor
jne
jno
stos
jle
loopne
push
push
jne
clc
out
shlb
aaa
and
lods
mov
push
in
dec
cmp
dec
stc
fldcw
mov
call
popa
test
scas
mov
shll
pushf
dec
rcrl
je
jne
lret
ret
xchg
aam
mov
test
jecxz
or
adc
ret
sbb
out
andl
fidivrl
jl
mov
sbb
pusha
iret
dec
mov
ds
xchg
pusha
int3
jne
mov
ret
pusha
das
xor
and
sub
pusha
ds
push
outsb
mov
and
jo
jb
insl
mov
mov
addb
push
int
push
cmp
cmpb
push
frstor
push
inc
repnz
gs
popa
dec
xor
movsb
imul
dec
fnsave
xchg
jmp
test
icebp
and
dec
gs
test
push
add
mov
jns
mov
add
xchg
dec
movsl
es
arpl
fs
shlb
test
mov
or
cli
jo
shll
inc
push
movsl
adc
js
shrl
icebp
ret
inc
repz
jecxz
adc
add
push
inc
jae
xchg
lock
call
inc
jb
lock
inc
andl
rol
inc
icebp
sub
lock
es
nop
mov
jno
add
inc
jo
xorl
repz
and
jae
inc
adc
ret
arpl
mov
add
addr16
inc
pop
mov
jl
cmpsb
add
jno
ret
andb
push
inc
jo
add
je
push
js
inc
sub
inc
inc
repz
test
pop
les
nop
loop
sub
xor
and
sub
add
les
mull
test
sub
add
loope
add
es
loopne
mov
sarb
mov
inc
xor
inc
outsb
divl
inc
lock
and
out
and
push
mov
loop
pop
loopne
aas
sub
inc
xor
sbb
push
mov
and
test
add
cwtl
loopne
mov
fs
push
popa
inc
xor
inc
test
and
fsubl
data16
mov
sub
es
icebp
jno
rolb
sub
or
jnp
or
xor
adc
sbb
sub
ret
ja
ret
and
and
jae
call
es
test
mov
jno
repz
xchg
sub
lock
pop
and
out
lock
les
fs
jb
loopne
cmpb
in
in
icebp
cmc
pusha
stc
std
rol
int
aad
mov
mov
mov
inc
loope
imul
inc
inc
dec
dec
push
pusha
push
pop
pop
and
xor
or
call
dec
lcall
push
arpl
test
in
in
cli
pop
imul
mov
xchg
je
cltd
bound
ret
test
or
ret
fwait
les
xor
es
pop
or
pop
ret
inc
or
and
inc
or
add
out
dec
bound
add
jecxz
bound
and
mov
xchg
lahf
inc
add
ja
xor
pop
gs
das
inc
inc
ret
jp
loopne
push
dec
inc
rorl
nop
les
inc
inc
mov
and
ret
xor
jno
mov
loopne
adc
xor
jbe
dec
pop
and
dec
add
mov
pushf
or
inc
nop
sbb
mov
inc
andl
xor
mov
aad
mov
mov
add
es
call
faddl
sar
mov
bound
adc
mov
lcall
cmc
stos
aas
cmp
repz
pop
or
inc
mov
stos
cmpsb
inc
fs
add
cmp
popa
xchg
shl
and
in
xchg
in
insb
fiaddl
ljmp
data16
dec
dec
jo
popf
add
xor
xor
xor
push
inc
loop
sbb
faddl
inc
add
movsb
adc
xchg
addb
and
pop
and
push
push
inc
and
sub
fsubl
lcall
pusha
std
push
dec
sti
arpl
inc
and
call
inc
xor
inc
pop
xchg
xorl
ret
sub
out
popa
sub
mov
inc
cmp
jecxz
call
add
es
hlt
jno
clc
inc
arpl
cli
sbb
popf
inc
sub
popf
xchg
stos
bound
pop
shlb
jbe
cs
jae
repz
fs
xchg
adc
push
insb
inc
push
and
push
inc
inc
loopne
inc
movsl
dec
loope
jo
add
loop
cmp
les
push
imul
outsl
pop
cmp
lock
loop
cmp
imul
add
jo
sahf
inc
or
mov
out
push
lea
imul
pusha
loopne
sbb
ja
lds
adc
or
add
outsb
mov
ss
pop
je
ficoms
loop
xlat
data16
push
xchg
pop
lahf
inc
sbb
lcall
bound
jge
cs
jbe
pusha
xor
mov
pusha
pop
pop
sbb
pusha
lret
out
mov
fdivl
clc
jno
and
adc
sbb
out
ja
mov
iret
xor
dec
mov
pop
jne
pusha
push
jg
pop
cli
add
out
out
jns
loop
push
mov
jp
mov
add
cs
mov
lods
ja
dec
pop
sbb
or
loopne
pusha
xor
push
mov
test
adc
lret
subl
pop
bound
push
inc
push
loopne,pt
push
hlt
mov
push
push
out
fs
pushf
movsl
xchg
dec
aas
shr
je
andl
mov
pop
push
fstps
outsb
mov
outsl
das
shl
add
jl
cmp
daa
cmpsl
arpl
pop
in
jb
jge
jl
ja
cli
mov
je
mov
xchg
pusha
xchg
imul
imul
mov
pusha
fcoml
out
jae
xor
sti
inc
sbb
pusha
sub
xor
sbb
mov
test
sbb
in
jnp
xchg
mov
xchg
mov
xor
cmpsb
sub
sbb
push
js
sub
xor
jno
mov
cld
pop
lret
popf
ret
xchg
shl
repz
pusha
icebp
xchg
jns
pop
xor
js
in
xor
xchg
arpl
hlt
pusha
insl
movsb
arpl
nop
in
daa
jl
push
andb
mov
pusha
inc
add
cmpsb
ret
out
jp
cli
insb
pusha
jnp
jne
jl
push
pusha
mov
psubusb
sub
pusha
test
inc
and
test
fs
arpl
ljmp
and
sub
pusha
jno
mov
repz
aam
mov
sub
pop
pusha
add
imul
sbb
inc
or
and
add
dec
cmc
jmp
js
xchg
loope
adc
push
pop
sub
jo
cli
add
mov
ffreep
fdivrl
int
loope
xor
test
adc
xchg
xor
sub
mov
mov
lea
jp
testb
cwtl
mov
pop
push
dec
add
fnsave
inc
mov
mov
movsb
mov
int3
stos
vmulps
xchg
and
mov
adc
jo
xchg
loopne
je
cmp
or
hlt
cld
aam
cld
pushf
cmpl
data16
pusha
sbb
or
ljmp
push
movsb
mov
lods
mov
mov
mul
mov
xor
in
shl
icebp
sahf
xor
div
push
pop
xchg
lea
cmp
outsl
jnp
add
jns
outsl
add
inc
iret
dec
mov
jmp
xlat
pop
nop
loop
int3
or
add
jmp
stos
lea
call
push
jmp
sub
push
jmp
push
mov
and
idivl
ret
out
aas
sub
popf
outsb
test
inc
in
mov
cmp
xchg
xchg
loopne
out
jo
and
sti
mov
push
push
loopne
incb
xchg
scas
sti
addr16
jmp
insb
js
aam
xchg
pop
jae
int
xchg
int
push
or
pop
pop
inc
jg
sti
fwait
out
mov
out
pop
nop
loop
dec
or
and
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
jmp
mov
xchg
pop
inc
xor
sbbl
icebp
jb
pop
xor
add
lret
or
mov
int3
xchg
inc
sub
mov
movsb
xor
push
arpl
imul
faddl
push
shll
sub
jno
or
cmp
imul
xor
inc
sub
cli
xchg
cmp
pop
nop
in
aas
dec
orb
and
jae
pushf
mov
mov
inc
mov
jmp
into
pop
cltd
jne
in
mov
icebp
loope
fnstsw
insl
fstpl
sub
and
es
inc
inc
xchg
frstor
push
das
lcall
lock
int3
inc
shlb
lret
xchg
call
inc
xor
and
sub
pop
xor
and
xchg
lods
test
lea
insb
out
ljmp
pop
gs
loope
xor
in
nop
in
push
in
clc
sub
pusha
movb
rep
lea
call
cmp
pushf
lea
jae
pusha
lea
jmp
icebp
cld
fsubs
sti
cld
adc
aaa
stos
daa
adc
scas
xchg
divl
inc
inc
sbb
into
or
xor
mov
cmp
addl
ljmp
es
mov
dec
jl
fwait
cmp
inc
mov
lds
hlt
xor
popf
stos
cltd
jnp
out
pop
jge
add
ret
and
scas
movsl
jg
fidivs
ret
push
inc
xchg
ret
pop
ja
pop
nop
in
inc
iret
in
outsl
add
sbb
sbb
jl
adc
int3
mov
pop
push
xchg
jecxz
std
outsb
cmp
shl
jg
add
mov
fstps
sbb
andb
arpl
cmpsl
sub
movb
adc
ljmp
and
sub
jns
xchg
repnz
push
repnz
repz
jmp
and
xor
ficomps
cwtl
or
xor
inc
sub
rcrb
sbb
cmp
stos
inc
or
cmp
jmp
lahf
outsl
pandn
inc
xchg
test
or
pop
xor
xchg
sti
cli
cmc
jne
sar
sub
lret
out
mov
or
or
repz
lret
dec
popa
jmp
pop
xor
ret
sub
outsb
shrb
and
pop
mov
jo
xor
xlat
xchg
adc
fmull
inc
out
fimull
inc
shr
add
sbb
ret
push
ficomps
sbb
sbb
inc
mov
xchg
and
mov
fimuls
xor
mov
add
jno
push
dec
jge
movsb
pusha
aad
stc
sbb
test
das
push
jg
mov
pop
mov
ds
andps
dec
dec
shll
dec
out
xchg
add
push
stos
add
out
pop
jmp
pop
repnz
std
adc
sbb
int
out
mov
mov
imull
loop
dec
shll
ljmp
add
aas
cmpsl
mov
xchg
pop
int3
sbb
lock
aam
adc
mov
xor
call
daa
movsl
dec
jno
dec
xchg
js
xchg
orl
push
xor
sahf
sub
xchg
lods
xchg
gs
and
and
jnp
jae
pushf
insl
and
das
xor
dec
fdivr
ss
adc
inc
mov
lret
jbe
popa
aad
inc
test
adc
sbb
xor
push
ja
or
je
scas
mov
lds
jb
sub
sub
jbe
in
std
stos
xchg
icebp
lds
xor
sub
push
push
mov
negb
jmp
shlb
test
aaa
insl
int
push
lds
dec
dec
cmp
decl
dec
or
push
bound
pop
imul
sbb
shrb
mov
std
int
out
adc
insl
inc
jnp
mov
inc
xor
fidivs
lret
inc
xchg
cltd
outsl
jne
mov
out
fdivl
paddd
adc
into
pushw
adc
dec
sahf
ljmp
nop
jmp
add
pop
push
movl
pushf
push
pusha
pushf
lea
jmp
push
pushf
stos
pushf
pusha
lea
jmp
jmp
push
lea
je
btr
xor
jmp
je
xchg
das
out
jb
cmpsl
ret
pop
mov
fwait
xorl
daa
xchg
or
jecxz
aas
fwait
pop
mov
push
fdivrl
inc
cmpsl
mov
mov
mov
ds
pop
mov
xchg
mov
clc
fnstenv
push
out
push
xchg
sub
rcrl
fs
adcl
repnz
mov
out
xchg
sbb
icebp
jne
sbb
dec
mov
jns
mov
nop
call
mov
clc
sub
mov
call
lea
jae
push
pushl
lea
jne
call
cmp
jmp
ds
int
mov
sbb
inc
push
jle
mov
jbe
fidivl
jns
cmpsl
test
add
adc
sub
sub
test
daa
pop
xor
mov
bound
adcb
repz
scas
sti
out
loopne
or
daa
sahf
xchg
out
mov
mov
cmp
insb
adc
push
daa
repz
sub
adc
fistpl
bswap
pop
nop
jmp
fstpl
sbb
sub
jmp
jge
stos
mov
mov
decl
addr16
mov
ficomps
inc
ljmp
inc
or
in
inc
pushl
or
in
inc
out
mov
add
lcall
nop
loop
mov
sub
in
insb
inc
decl
cmp
inc
iret
call
cmp
insb
inc
std
ljmp
outsl
inc
adc
mov
mov
lcall
pop
push
sbb
sbb
mov
outsl
push
adc
pop
loopne
frstor
insb
inc
jmp
or
in
inc
pushl
sbb
inc
inc
adc
xor
jmp
lock
shlb
incl
mov
sub
in
inc
pushl
or
in
inc
mov
flds
jg
fistpl
inc
pushl
or
in
inc
pushl
ret
sbb
jmp
jp
shr
sbb
ljmp
sahf
cmp
inc
cmpsb
lcall
ficompl
dec
sbb
jmp
lods
insb
inc
mov
sti
xor
jp
in
inc
pushl
sub
cmp
fucomi
inc
pushl
or
in
inc
pushl
outsl
je
mov
je
ret
testb
lods
inc
stc
jmp
std
dec
jle
add
insb
inc
idiv
stc
ljmp
inc
out
decl
rcrl
inc
hlt
call
sbb
in
inc
pushl
or
in
inc
pushl
or
in
inc
pushl
nop
loop
mov
mov
pushf
shll
pushl
fdivs
pop
mov
ss
push
cltd
adc
sbb
in
stc
in
cmc
loop
xchg
fwait
outsl
or
adc
out
pop
jp
xchg
outsl
or
inc
cmp
enter
in
gs
sbb
stos
mov
das
lods
orb
add
mov
imul
jbe
pop
sub
lea
je
push
lea
je
shr
setl
add
cmc
sbb
bt
sub
add
dec
bsr
adc
shr
shrd
or
btc
mov
shl
movsbw
add
or
stc
jmp
pusha
jmp
xchg
neg
xchg
rcr
add
mov
sbb
mov
pushf
mov
test
clc
mov
call
fisttps
xchg
jb
movsb
and
shl
jae
jg
cmp
xchg
das
or
mov
pop
data16
imul
fsubrs
movb
jbe
push
imul
scas
fcom
test
jnp
jbe
stos
pop
jne
int
insb
dec
pushf
into
or
aad
xchg
stos
loopne
jnp
xchg
fcmovb
adc
or
pushf
idivb
sub
stos
outsb
aad
xchg
sbb
dec
fdivrl
mov
mov
xor
adc
pop
nop
aam
mov
not
lea
pusha
movl
pushf
movw
mov
pushf
pushl
ret
call
lea
jae
cmp
bt
cmp
xor
pushf
call
ss
mov
sbb
cltd
hlt
stos
ljmp
lret
adc
int
call
popa
mov
testb
inc
sub
cmp
dec
loopne
xor
xchg
and
xchg
sbb
xor
add
pop
jle
lea
add
lcall
xchg
xor
inc
xchg
and
shll
mov
mov
lods
jns
jns
aam
into
in
xor
add
aam
xor
clc
clc
adc
adc
sbb
push
sub
sbb
mov
pop
nop
xlat
repz
dec
imul
ret
arpl
or
jl
hlt
xor
fldt
mov
ds
aas
or
hlt
rorb
dec
mov
nop
xlat
loope
xor
notb
loop
cmc
xchg
mov
xor
jae
xor
mov
inc
add
mov
cmpsl
arpl
daa
sub
test
mov
add
lcall
push
aad
aad
loope
cmc
jns
xchg
cmp
mov
push
push
cs
cmp
daa
mov
lock
sbb
jecxz
xor
pop
bt
pop
nop
das
cmp
test
add
mov
inc
ds
lcall
push
or
jl
stos
mov
push
mov
jecxz
arpl
outsb
arpl
iret
mov
cmp
mov
dec
push
popl
push
fcmovnbe
sbb
addb
in
push
cmp
mov
aas
pusha
ss
push
push
mov
sub
mov
push
mov
add
mov
jle
add
jl
and
jmp
xor
in
fadds
mov
or
xor
cmp
cmpsb
mov
sub
sbb
ret
jecxz
mov
popa
cli
arpl
out
je
xchg
pusha
repnz
mov
nop
data16
xor
aam
pop
inc
lods
test
iret
stos
shll
fnstsw
jmp
clc
rorl
rorl
add
push
enter
outsb
ror
jge
xor
icebp
mov
outsl
mov
dec
inc
sub
sub
lea
mov
insl
pop
icebp
pop
nop
shll
js
pusha
andl
int3
aas
cmc
xchg
gs
cmp
shll
jge
jmp
roll
iret
jg
pop
push
adcl
std
jmp
imull
in
gs
shll
notl
push
cmpb
hlt
cs
out
pop
sahf
xchg
nop
rcrl
and
jne
rcl
not
shrd
sbb
mov
cmp
cmp
bt
add
bt
movzwl
stc
clc
mov
clc
pusha
add
pusha
mov
pushf
add
jae
cmc
push
test
call
jbe
add
cmp
sub
and
mov
push
leave
cmp
popf
xchg
mov
sarl
push
rcr
clc
inc
stos
inc
mov
xor
lods
mov
fwait
ja
dec
and
cltd
jb
sbb
call
mov
jmp
adc
test
cwtl
sbb
sbb
cmp
pop
ficompl
jne
sub
mov
and
pop
stc
clc
lock
add
loopne
mov
loope
lods
xorl
faddp
and
lea
pop
fbld
mov
sub
outsl
in
test
sbb
mov
fcomps
and
jecxz
popa
int3
push
daa
sub
mov
pop
mov
add
test
push
lret
sub
cmp
mov
jle
sub
jecxz
imulb
popf
inc
pop
mov
popa
in
pop
daa
sub
adc
push
push
and
bound
mov
xchg
into
pop
nop
rcll
and
fidivrs
in
and
fcoms
in
pop
int3
pop
je
rolb
ja
inc
lea
ds
or
mov
cmc
xchg
bnd
test
xor
out
mov
loop
insb
popf
subl
push
jae
push
mov
push
pop
inc
frstor
movsl
sub
out
cmp
loop
and
mov
or
push
sub
imul
cmc
cmc
inc
add
icebp
mov
push
notb
mulb
sub
push
pop
nop
shrl
fs
call
push
mov
pusha
jmp
sub
mov
push
int
dec
lcall
dec
scas
pop
mov
dec
adc
sti
inc
xchg
stc
add
add
out
jb
sub
call
mov
jae
jl
arpl
cli
mov
aam
ds
jp
sbb
xchg
sbb
add
sbb
js
sub
mov
aad
jmp
push
imul
shlb
daa
pop
xchg
aas
inc
pop
pop
cmpsl
stos
inc
pop
mov
pop
nop
rcrb
sub
mov
pushf
seta
pushf
mov
jmp
cmc
test
lea
jno
pushf
pushl
lea
jne
call
leave
pusha
lahf
roll
out
insb
and
bound
insb
and
xor
mov
mov
cmc
jg
adc
and
sub
inc
mov
and
imul
arpl
lcall
in
rcrb
inc
mov
shll
ret
andl
repz
jmp
cltd
arpl
rcrb
jae
popa
jbe
mov
lods
pusha
arpl
pop
dec
jg
and
inc
popa
jb
xchg
and
sub
ret
xor
pop
jae
dec
jnp
push
incb
push
cmpb
sbb
push
cmpsb
dec
fs
jae
cmp
mov
pop
mov
inc
inc
inc
push
outsb
add
jl
insb
andl
outsb
and
and
add
dec
dec
loope
cwtl
dec
dec
ret
popa
sarl
xor
mov
mov
cs
inc
dec
test
jp
cs
jbe
xchg
popa
shrb
pop
sbbl
sub
jnp
cmp
sbb
or
jl
inc
mov
jo
andl
mov
jae
imul
push
mov
or
inc
pop
jns
xchg
js
outsl
dec
lahf
cmpsb
in
icebp
incb
je
shlb
shrl
sbb
sub
js
sub
jge
pushf
loopne
repnz
push
cmp
xor
jb
sbb
xor
test
cmp
je
xchg
hlt
inc
sti
jl
sub
lahf
in
pushf
sub
sub
pop
mov
fsubr
call
rcrl
inc
ror
xor
out
outsb
xor
scas
sub
in
mov
sub
loope
pop
ret
lret
pop
add
and
sbb
data16
cwtl
inc
popf
addr16
mov
adc
lock
inc
xlat
cs
push
mov
mov
ret
aad
push
sub
and
dec
inc
test
add
cmp
dec
lret
and
mov
pop
push
aas
fbld
jnp
outsb
out
mov
bnd
mov
fs
mov
push
js
sbb
clc
inc
mov
fnstsw
mov
imul
stc
push
loope
addr16
and
outsb
push
inc
leave
js
jmp
or
lea
shl
icebp
lret
ret
push
adc
push
and
inc
ret
leave
out
push
insb
popa
sub
loopne
imul
sub
mov
fbstp
insb
jae
jge
jbe
and
and
push
popa
xor
loop,pn
notl
xor
fwait
je
subl
call
xor
mov
push
insb
ret
test
shll
sub
popa
inc
add
add
insb
sbb
subb
xor
push
add
xchg
jno
data16
pop
aas
add
push
aas
push
dec
dec
cmpsl
adc
xor
xchg
jne
jl
imul
arpl
ret
loopne
jno
pop
cmc
pusha
in
test
mov
call
jns
mov
cmp
cmpsl
bound
mov
fcomip
mov
and
jo
push
outsl
aas
inc
mov
push
outsl
es
inc
jo
mov
outsb
call
lret
jb
loop
cmp
loopne
jne
movsb
adc
pushf
popf
and
jmp
inc
fsubl
ret
adc
dec
pop
inc
jo
push
mov
cmp
sbb
popa
out
ja
pop
adc
xchg
lods
ret
enter
ss
inc
xchg
jo
stc
movl
add
sub
mov
loopne
stos
bound
pushf
cmpsb
popa
iret
dec
in
pushl
into
call
mov
push
out
vcvttps2dq
mov
mov
cmp
bound
pop
inc
pop
or
scas
in
dec
inc
loopne
mov
shll
sub
js
inc
cmpsl
and
sets
aam
push
inc
adc
mov
in
inc
repz
outsb
test
mov
push
push
adcl
sbb
sbbl
repz
test
js
push
sti
bound
inc
lahf
mov
inc
pop
rcrl
and
test
jo
mov
aaa
rcl
pop
xor
movsl
jp
jnp
xchg
push
mov
fucomi
cmc
stos
fimull
data16
jo
lahf
sub
shll
leave
ret
add
dec
mov
in
je
shl
sub
iret
push
jne
negl
and
dec
pop
les
shlb
jo
cmp
inc
loop
push
xchg
mov
mov
add
inc
les
bound
mov
inc
xchg
inc
xor
xor
mov
inc
test
test
imul
clc
mov
dec
mov
jb
cmp
call
inc
cmp
push
mov
mov
cltd
jl
loop
iret
push
or
inc
icebp
jno
mov
sub
dec
jmp
pop
cs
test
icebp
loop
adc
mov
aaa
push
inc
cmp
hlt
shlb
push
jns
aas
jmp
dec
ret
add
std
inc
dec
shr
xor
stos
mov
std
jl
xor
push
int3
sbb
gs
fildl
inc
jo
jle
sarl
jecxz
xchg
mov
push
dec
subb
rcrb
iret
dec
cli
mov
mov
mov
inc
adc
scas
pushf
gs
mov
mov
mov
mov
dec
pop
sbb
mov
mov
xor
xlat
sub
jo
pop
addl
fmull
add
and
nop
pop
ret
fldt
stos
and
pop
sub
lret
and
popa
adc
out
addr16
lahf
daa
mov
in
ret
arpl
or
or
in
inc
lods
xor
out
pop
hlt
mov
jns
xor
cmpsb
dec
rcll
ret
cmp
shlb
clc
je
rclb
js
inc
fwait
cmp
xlat
mov
pop
jo
sub
cmp
gs
ret
jl
jo
jge
push
popa
sub
outsb
jnp
mov
inc
jge
clc
push
shlb
test
das
push
leave
pop
es
cltd
xor
mov
ftst
dec
dec
and
mov
push
pop
rorl
lods
loopne
mov
and
sbb
loope
stc
inc
clc
mov
jecxz
mov
imul
jbe
out
inc
inc
stos
adc
in
cmp
inc
jl
push
xor
xor
pop
xchg
nop
dec
dec
cmp
mov
lret
mov
sub
sarb
fildl
lret
sub
and
xor
and
mov
push
scas
fadds
aad
dec
inc
xchg
movsl
xor
fisttpl
and
and
popf
xor
pop
and
icebp
sbb
mov
xor
dec
pop
testl
int3
ljmp
cmp
hlt
mov
jb
and
loopne
jnp
shr
push
xor
aam
adc
arpl
jp
dec
push
inc
cmp
push
jp
or
pop
mov
hlt
in
mov
xor
iret
dec
cmp
mov
imul
sub
and
add
jmp
inc
mov
in
adcb
pop
fsub
in
cmp
xor
push
jp
mov
cmp
fs
rcl
jl
call
js
je
arpl
mov
repz
fwait
ret
cmp
lahf
mov
inc
mov
dec
add
std
xor
push
loope
sbb
push
stc
adc
jmp
dec
xorl
pusha
mov
in
test
ss
stos
jo
repz
xor
sarb
mov
add
add
push
lret
cli
pop
adc
pop
mov
jl
mov
add
mov
mov
dec
dec
xor
adc
mov
cmp
mov
dec
pop
mov
push
xor
nop
adc
inc
pop
jle
push
into
arpl
mov
inc
jmp
sub
ret
dec
jg
arpl
sub
pop
or
rcll
int3
dec
xorb
mov
ret
jmp
pop
xchg
enter
arpl
dec
rclb
push
push
add
mov
ret
xor
stc
mov
add
mov
ret
jo
lock
and
push
jnp
cs
pop
call
sub
sub
lods
shl
ret
out
sbb
adc
lahf
cmp
jg
xor
xchg
cs
mov
push
fstpl
xchg
lahf
movsb
mov
mov
mov
push
mov
addr16
orl
loope
sbb
test
jl
lea
jae
pop
movsb
imul
mov
pop
cmp
inc
jae
xorb
jg
addl
movsb
jns
and
aaa
inc
xchg
stc
int
pushf
addr16
jecxz
ret
or
xor
gs
push
cmpsb
mov
cmp
out
imul
adcb
adc
aad
and
mov
ret
mov
sbb
adc
loope
lahf
movsb
stos
js
jb
xor
pop
jns
cmp
loop
jo
inc
in
fs
inc
fcoms
imul
insl
data16
orl
loopne
sub
lcall
imul
test
outsl
adc
mov
ret
cmpsl
mov
js
dec
inc
xor
aaa
je
add
mov
fists
fcoml
push
loopne
xor
leave
rcr
sub
les
cmp
mov
bound
rcll
aam
mov
stos
inc
lahf
inc
pushf
fwait
jl
std
rorb
aad
xchg
xchg
arpl
loopne
insb
test
adc
sub
shlb
jmp
cmpsb
ja
push
cmp
inc
mov
adc
push
stos
cltd
dec
and
insb
and
jo
lahf
xor
ljmp
and
pop
shlb
rcl
push
adc
adc
push
sbb
inc
clc
popa
repnz
notl
cmp
jo
js
sub
cwtl
mov
popa
pop
andb
inc
es
push
inc
rcrb
stos
loopne
push
fnsave
push
adcl
out
or
push
jo
shl
inc
fs
xor
cld
mov
testl
cmp
push
lcall
inc
inc
dec
dec
sub
or
pop
imul
test
rcll
in
das
not
in
xor
push
jbe
push
es
inc
and
ret
adc
push
iret
inc
add
adc
jbe
insb
dec
in
test
sbb
push
push
das
leavew
add
and
pop
or
icebp
daa
push
xchg
sub
ja
jge
ffreep
and
jae
nop
jnp
adc
loopne
lock
mov
outsb
jg
cmp
xor
ret
jmp
rcrl
or
push
add
decb
data16
orb
fs
ret
test
imul
mov
ljmp
lods
mov
jae
addr16
jno
cwtl
jg
and
dec
xchg
inc
xor
jae
inc
and
cmpsb
sub
push
inc
jo
mov
cmc
mov
adcb
and
js
mov
imul
ret
mov
or
jbe
mov
and
cmp
sub
icebp
adc
dec
mov
sub
dec
pop
inc
fwait
and
inc
loopne
dec
push
and
je
dec
mov
ds
in
inc
cli
push
stc
mov
sub
rorb
cmp
outsl
cmp
push
das
xchg
test
hlt
test
and
and
mov
sub
sbb
mov
iret
imul
xchg
ljmp
cmp
shl
or
gs
jle
lods
cvtps2pi
xchg
and
adc
ret
inc
cs
mov
js
adc
out
lock
repnz
shl
inc
mov
subl
mov
pop
jb
mov
testb
fcmove
dec
xor
adc
pushf
add
xor
cli
and
ret
ja
pop
jmp
repnz
sub
js
inc
out
cld
mov
lahf
mov
pushf
fs
nop
out
dec
xchg
ret
inc
insb
or
sti
mov
data16
insb
pop
and
mov
and
dec
fnstcw
xchg
imul
ljmp
shrb
dec
add
xor
jmp
pop
movsb
shrb
and
lcall
ljmp
lea
lea
jmp
das
sub
js
loop
inc
and
xor
shl
bound
ret
hlt
mov
and
xor
jns
mov
js
add
jl
xor
and
jecxz
xor
jae
mov
test
dec
lods
inc
insb
outsb
cmp
insb
lret
arpl
add
inc
mov
cmpsb
push
mov
mov
and
cwtl
inc
gs
dec
es
call
inc
cmc
sub
call
fisttpl
inc
pop
inc
or
dec
js
test
mov
sbb
lcall
push
imul
lock
inc
and
arpl
dec
cmp
outsl
push
push
sub
out
and
jb
sub
lock
add
and
inc
loope
in
jmp
and
sub
and
inc
leave
jb
rcl
jb
inc
mov
inc
mov
movsb
mov
and
lahf
and
cs
repnz
frstor
mov
sub
adc
push
imul
push
je
rolb
sub
push
loopne
insl
push
inc
in
and
loopne
adc
dec
cmp
xchg
pop
jb
fildl
cmp
mov
jmp
xor
add
cmp
xchg
push
icebp
fs
jl
call
insl
mov
cmpsl
ljmp
jo
loopne
es
data16
movsl
cmp
mov
loop
sub
nop
mov
hlt
xchg
mov
addl
lods
fs
inc
sbb
mov
fstpt
sub
clc
sbb
add
test
lret
push
hlt
movsb
and
adc
loop
mov
ja
jne
in
and
xor
rorl
rol
mov
dec
sub
movsb
loopne
fisttps
out
aad
push
test
cmp
in
arpl
and
js
add
pop
jne
jl
fcomps
dec
inc
jle
mull
dec
push
jnp
sub
mov
hlt
gs
enter
jmp
ljmp
popa
fiaddl
dec
xchg
fs
mov
lahf
and
ret
push
jmp
xlat
lcall
jecxz
sub
dec
and
sbb
bound
inc
rcrl
mov
xchg
rorb
sub
dec
sbb
aas
inc
bound
cmp
subb
and
loope
jle
shrb
push
dec
inc
pop
push
pusha
fsave
push
ret
testb
xor
mov
and
jp
sahf
pop
xor
imul
jg
leave
mulb
inc
xor
xor
inc
shll
and
jmp
fdivrs
inc
movl
adc
or
addr16
adc
fsubrs
push
push
loope
xchg
xor
xchg
jne
movsb
outsb
js
lahf
mov
lds
mov
das
push
mov
shrb
bound
stc
dec
jo
repnz
loope
nop
sub
adc
shll
and
hlt
outsl
jne
movl
and
cmp
add
fldt
mov
outsb
xlat
jo
pop
and
dec
sub
push
pop
inc
sar
push
jle
lods
jp
enter
pop
jb
jge
mov
je
cmp
js
mov
xor
inc
cmp
jno
pop
mov
arpl
mov
aas
xchg
bound
rcll
leave
int
fwait
inc
and
mov
outsl
pop
out
and
and
enter
adc
cmpsb
xchg
sbb
mov
sbb
imul
or
xor
add
mov
icebp
mov
clc
jbe
cld
call
pusha
sar
flds
mov
or
sub
inc
ret
pop
jo
mov
or
incb
inc
imul
sub
jnp
mov
insb
rcrb
xchg
ret
shlb
rcrl
and
or
jp
std
out
sub
sbb
or
fs
push
add
push
pop
test
out
imul
mov
mov
imul
ret
jg
dec
mov
or
nop
mov
xchg
in
scas
repnz
das
sbb
xor
sub
jg
stc
jmp
and
in
inc
in
xchg
pop
rclb
dec
adc
and
push
dec
jo
jnp
loopne
push
pop
mov
mov
aas
loope
jnp
add
jae
jle
jne
sub
out
xor
sub
xor
or
cmp
inc
jo
fsubrl
aad
shl
adc
orl
pop
sbbb
or
popa
mov
loop
adc
push
jb
cltd
aas
dec
jo
xchg
or
cmp
and
clc
shll
or
imull
popa
dec
js
adc
dec
add
int
adc
mov
dec
xor
mov
aam
xchg
cmp
sub
incb
dec
mov
mov
addr16
xor
push
inc
icebp
and
cmp
loop
xor
fs
xor
cmp
rcrb
pop
mov
lds
or
loope
add
loopne
jnp
push
stos
mov
dec
cmpb
and
mov
inc
and
lods
mov
dec
lahf
mov
cs
ja
pop
js
inc
adc
fwait
inc
jno
pop
dec
push
inc
cmp
cmp
and
or
mov
pop
sub
fwait
imul
movsb
push
add
jl
arpl
inc
pop
loope
xchg
mov
mov
add
add
pop
push
lahf
mov
sti
loope
push
loope
shr
jl
ja
scas
fwait
jl
outsl
mov
mov
out
push
dec
movsb
outsb
in
call
out
mov
arpl
pop
dec
push
outsb
clc
movsb
fisttps
subb
add
push
shlb
xor
mov
rcl
dec
repz
subl
fisubs
iret
scas
scas
inc
enter
jl
das
xor
mov
dec
andl
inc
imul
loop
mov
push
or
cld
and
xchg
xchg
fs
out
ja
lcall
jmp
lcall
push
mov
mov
mov
loope
pop
sbb
dec
mov
shlb
xchg
adc
mov
sar
jmp
and
ret
lds
outsl
and
cwtl
arpl
inc
iret
mov
inc
or
xor
movsl
leave
sub
xchg
sbb
push
or
ret
dec
sub
xor
gs
mov
pop
push
popf
das
xor
lods
pop
cld
pop
dec
push
xchg
out
rolb
fdivrl
bound
pop
xchg
jo
sub
push
xchg
pushf
or
sub
sbb
jno
addr16
test
out
push
mov
pop
inc
jb
pushf
xor
push
pop
inc
fs
add
jns
jbe
push
cmpsl
stos
hlt
dec
mov
xor
push
ss
jne
stos
imul
jb
addr16
or
xchg
mov
jb
popa
repz
adc
imul
mov
fdivr
and
shrw
dec
jne
inc
xchg
push
test
cmp
inc
test
mov
fistpll
and
adc
ret
cmpb
hlt
test
add
mov
rep
add
popa
push
lea
out
mov
add
pushf
inc
repnz
jns
test
and
sbb
popf
jmp
cs
sub
test
int3
sub
xchg
adc
shll
jno
mov
push
mov
mov
rcl
hlt
xor
mov
pop
sbb
mov
pop
jge
jg
push
push
xchg
xchg
jecxz
les
in
mov
lcall
jae
mov
sbb
mov
test
jg
dec
loope
into
jb
inc
pop
pop
pop
xor
push
push
mov
rcl
sub
inc
xor
rcll
push
dec
ret
push
mov
mov
outsb
push
inc
orl
lock
sub
add
mov
faddp
inc
xchg
pushf
sti
ret
dec
cmp
arpl
aam
pusha
pop
fildl
push
cmpsl
cwtl
mov
inc
dec
mov
shll
sub
cli
outsb
cmp
icebp
mov
jecxz
sub
enter
pop
inc
jno
fidivl
xchg
insb
xor
test
fs
mov
loope
cmpsl
bound
xor
loope
fs
and
fld1
out
ja
xchg
sub
aam
or
pop
fadds
shrb
sub
loop
dec
jle
in
insb
jge
ret
idivb
sbb
in
lods
psubb
ja
push
loop
loopne
insb
add
lods
jb
repz
js
shll
xor
add
loop
sub
popa
xchg
push
rcrb
adc
ret
mov
aam
clc
aam
add
sub
lods
mov
xor
sub
jae
gs
rclb
sub
nop
and
sbb
insb
les
popa
push
mov
dec
and
rorb
mov
push
sti
or
ds
cmc
and
xor
jne
jmp
aas
jbe
mov
jecxz
subb
adc
imul
mov
jmp
dec
aad
scas
jo
cld
int3
jne
movsb
lcall
mov
mov
and
adc
shlb
jo
jno
aad
icebp
or
fmull
push
pop
dec
jmp
cmp
bound
cmp
cmpsb
ss
js
push
jl
push
jno
xchg
jg
xor
cmp
add
scas
fs
in
scas
ret
scas
jb
stos
aas
and
shll
lock
ret
lret
adc
and
adc
shl
js
lods
aam
fisttpll
sbb
pop
jb
insl
xor
cmp
icebp
and
shlb
ss
jmp
xor
in
test
stc
xor
mov
es
shrl
wrmsr
imul
stos
jo
and
ljmp
inc
das
js
jmp
add
add
repz
jno
movsl
shl
sub
imul
lret
or
enter
inc
dec
jmp
sti
lock
pop
jbe
sbb
push
pop
imul
inc
push
testl
repz
enter
pop
movsl
arpl
sub
cmp
ljmp
inc
mov
and
pop
mov
jae
insl
or
or
movsb
inc
and
xchg
call
jo
inc
jmp
sub
cmp
movsb
repz
sub
inc
call
and
cmp
movsb
jb
cmp
testl
jb
pop
add
enter
cmp
and
insb
stos
outsb
xor
in
and
stos
outsl
xor
sub
add
sub
in
and
inc
xchg
jno
shl
jbe
mov
xchg
jno
or
inc
mov
or
and
movsb
fistps
ja
dec
or
movsb
jae
test
in
repz
call
adc
cmp
and
jge
movsb
push
jle
push
ljmp
adc
int3
cmp
jge
in
sbb
shlb
xor
dec
ljmp
and
push
jbe
in
inc
jno
rolb
lcall
jbe
call
rol
jbe
mov
add
in
mov
and
aaa
xor
out
aaa
push
test
sahf
cmp
dec
mov
inc
clc
repz
call
pop
and
inc
adc
imul
rcl
push
jno
rol
imul
xor
enter
dec
dec
call
inc
sbb
cs
arpl
adcb
dec
pop
fsubr
add
jb
loopne
ret
dec
clc
cmp
pop
popa
adc
test
mov
push
rclb
add
movsl
imul
mov
mov
adc
scas
dec
sub
gs
xor
xchg
in
mov
shlb
xchg
lahf
cs
sub
test
inc
incb
mov
sub
xchg
les
shl
jge
mov
add
and
inc
loope
pop
pop
nop
push
inc
jbe
add
xchg
add
dec
jge
movb
jae
inc
out
outsb
sub
mov
out
inc
dec
hlt
xor
adc
jl
cltd
imul
mov
push
in
scas
and
adc
mov
sub
dec
pop
sbb
xor
dec
inc
dec
inc
inc
push
je
mov
pop
xor
jb
mov
add
rcll
loopne
sbb
arpl
xchg
cs
outsl
cmp
add
inc
gs
mov
push
fistl
jns
push
or
in
fs
iret
cld
fwait
out
lds
push
cmp
sub
xchg
popa
dec
cmp
mov
mov
sbb
dec
push
xchg
sbb
mov
dec
mov
or
pop
xchg
inc
cltd
jne
mov
xchg
adc
mov
add
add
mov
mov
push
enter
sub
jnp
dec
roll
xchg
sub
mov
ds
data16
cld
mov
in
movsl
inc
sub
push
out
jnp
cltd
xchg
sub
clc
pushf
mov
pop
les
decl
out
sahf
sub
sahf
push
mov
cmp
test
mov
sbb
and
inc
lock
sub
xchg
push
or
cs
repnz
sub
rcr
dec
shll
or
cli
mov
mov
xorl
jb
add
lahf
leave
cld
ret
inc
sub
in
mov
in
fwait
das
ret
jp
mov
fsubrp
out
ret
movntps
jge
ret
pop
orb
sub
xor
sub
xor
popa
inc
inc
mov
test
lcall
xchg
inc
jno
jp
adc
outsb
xor
jg
repz
popa
ret
dec
lock
dec
inc
loop
jne
add
xor
ret
std
jg
xchg
inc
sub
jne
mov
mov
loopne
divl
mov
jle
jns
mov
lahf
shl
inc
lock
ds
adc
outsl
inc
add
aaa
and
cmp
fs
pop
adc
adc
push
xchg
push
bound
rorb
mov
push
pop
scas
mov
cmpsl
cmp
sti
xchg
jle
lea
xchg
gs
shrb
aam
test
mov
mov
rcr
fs
push
and
call
mov
rol
add
inc
jl
rol
outsl
push
out
adc
addr16
jae
and
icebp
push
bound
sub
leave
sar
push
adc
pop
xchg
pop
push
xorb
xlat
and
inc
test
dec
jno
mov
and
hlt
lods
fdivs
into
mov
inc
inc
dec
fs
and
add
out
je
outsb
jp
jne
fcoml
dec
lcall
push
pushf
outsb
dec
ret
xlat
js
xor
outsb
mov
es
push
jge
test
in
adc
cli
and
adc
add
push
mov
cld
outsb
imul
jo
fnstcw
push
pop
cmpsl
lahf
inc
or
inc
push
mov
inc
inc
jno
enter
outsb
inc
shrb
pop
jle
inc
aas
ja
sub
enter
xor
ja
dec
lret
lea
pop
les
lods
inc
rclb
pop
fwait
das
scas
int
dec
inc
cmc
fisttps
sbb
inc
sub
and
adc
inc
lea
and
rorb
pop
stc
jae
or
mov
inc
in
and
jne
push
popa
inc
xchg
pop
pop
and
in
sbb
dec
mov
cltd
stos
xor
arpl
fsub
dec
cmp
jo
arpl
sub
out
xchg
inc
push
jns
mov
push
js
ret
mov
sahf
cmp
enter
loopne
movsb
shl
adc
or
fcomi
loopne
fwait
sbb
cltd
fmul
push
inc
inc
leave
pop
jnp
pop
arpl
xchg
stos
rcrb
cltd
inc
jge
adc
sbb
xchg
shll
int
hlt
pop
out
sbb
xor
sub
gs
inc
sub
dec
xor
lock
pop
inc
mov
pop
cmp
sbb
jge
adc
int3
dec
pop
movsl
loopne
ljmp
push
pop
movsl
loopne
cmp
cwtl
jae
outsb
adc
test
aam
das
loope
subl
pop
lds
arpl
jb
subl
and
sub
test
jo
insl
lods
movq
cltd
aam
push
lock
jl
push
arpl
jg
mov
mov
aaa
rcrb
ret
xor
sub
or
js
enter
push
pop
jbe
loopne
mov
pop
pop
les
js
mov
mov
insb
lmsw
xor
pop
jle
xor
adc
mov
pop
fwait
or
adc
lock
sbb
rcr
mov
cmp
mov
cli
in
pop
insb
stos
popa
wrmsr
jne
fists
or
pop
push
cli
push
cmp
ret
lock
pop
pop
jnp
std
inc
cmpsb
jg
int3
rolb
test
inc
jo
fbld
cmp
dec
push
push
sub
dec
sub
int3
cmp
push
dec
btr
jp
popf
ljmp
pusha
shlb
xlat
mov
ret
shrl
std
jne
into
popa
pop
insl
mov
les
stos
inc
mov
int3
jg
sbb
movsb
and
loopne
lock
cld
int
mov
jne
int3
pop
pusha
mov
idivb
les
je
mov
pop
push
push
jecxz
jl
imul
cmpsl
push
jo
mov
adc
sbb
je
push
jmp
inc
mov
xchg
sub
dec
ljmp
cmpsb
mov
insb
dec
mov
bound
insb
sub
sub
ss
int
inc
xchg
pusha
pop
jg
addr16
mov
and
jecxz
jbe
inc
mov
loopne
cltd
xchg
aaa
jbe
push
jno
sub
push
mov
or
lcall
rcrl
aam
mov
dec
or
clc
mov
pop
sub
in
inc
xor
in
jbe
movsb
pop
jne
lret
jo
sbbb
clc
je
add
addr16
jae
mov
dec
data16
addr16
jns
testb
pop
and
dec
jo
adc
cld
add
cmp
loope
mov
gs
addb
mov
pop
cli
cmpb
stos
lods
cmp
push
andl
je
cmpsl
ret
adc
push
adc
lret
loop
xchg
jb
sub
add
add
sbb
ret
dec
jbe
lea
outsb
cltd
and
xchg
in
mov
sub
fdivrl
mov
sbb
add
bound
add
loope
mov
dec
push
in
or
fists
lahf
jg
ret
stos
nop
in
jbe
test
bnd
mov
mov
push
cmp
mov
test
mov
inc
dec
rcr
add
jmp
jns
js
xchg
xor
aaa
pop
and
jnp
or
js
push
or
mov
pop
xor
add
inc
out
fnstenv
popf
jb
push
loopne
cmpsl
xlat
mov
jge
and
in
jnp
mov
dec
lret
ret
sub
sub
insl
nop
loopne,pn
sub
cmp
pop
cmp
out
iret
xchg
imul
mov
pop
adc
sub
cmp
xchg
push
subb
and
xor
arpl
dec
int3
pop
xor
and
cmp
mov
popa
insb
aaa
imul
nop
and
je
jmp
rorl
jmp
lahf
imul
pop
sub
aam
mov
bound
ret
gs
stos
push
divl
popa
cmp
inc
insb
jnp
adc
adc
mov
arpl
cmp
push
pop
dec
xlat
shrb
push
jp
jnp
pop
dec
negb
insb
inc
jno
cltd
sub
mov
sub
mov
fistpl
ja
push
adc
jnp
call
lahf
outsl
int3
jge
sar
xlat
loope
lock
and
insb
inc
push
sbb
pop
and
ret
mov
inc
and
lret
xchg
pop
xchg
sub
mov
pop
lcall
or
loopne
loop
cmp
loop
add
sub
sub
sub
jne
push
rcll
icebp
rcrl
pop
fcomps
sbb
mov
add
inc
das
iret
add
xchg
jbe
xchg
popa
jne
xor
dec
mov
push
loop
and
dec
jno
cmp
sbb
jmp
out
sbb
loop
fnstsw
outsl
sbb
outsb
shlb
adc
incb
repz
mov
or
xor
call
in
xor
sbb
sub
sbb
leave
push
inc
call
and
bound
push
and
xor
adc
add
icebp
adc
adc
push
outsb
and
xchg
bnd
sbb
test
stos
adc
jnp
test
jo
adc
inc
pop
xor
insl
xchg
mov
leave
ds
xchg
or
repz
andl
aaa
outsl
ret
or
je
add
adc
and
mov
and
push
sbb
hlt
repnz
push
loope
fsubl
mov
add
in
ret
fs
cltd
sub
stc
loope
out
arpl
das
ret
sub
mov
orb
inc
fldenv
add
adc
dec
sub
adc
adc
nop
iret
sub
adc
pop
repnz
roll
inc
xchg
push
ret
fiaddl
loope
clc
popa
mov
lds
xor
cs
mov
pop
clc
lret
xlat
and
mov
mov
mov
addr16
jmp
call
stc
jo
and
insb
cmpb
cmp
mov
sbb
je
and
add
aam
popa
lret
andb
shrb
stc
lahf
imul
sub
int
dec
jl
aad
mov
ret
rcrb
insl
cli
daa
xchg
push
idiv
xor
hlt
adc
lock
dec
pusha
push
and
in
mov
jmp
lock
jb
cli
push
mov
fadd
andb
lods
dec
bound
and
dec
mov
insl
dec
xchg
stos
outsb
xchg
push
lods
push
ficomps
adc
insb
and
insb
and
cmp
mov
fistl
or
mov
sbb
lea
hlt
repz
xchg
movsb
xchg
add
mov
mov
pop
xchg
test
adc
lock
cmp
cmpsl
pop
cld
push
inc
loope
ss
xlat
addr16
xorb
js
jl
pop
bound
sub
mov
in
xor
xchg
cld
loopne
jp
cmp
and
ds
xchg
dec
adc
inc
js
pop
mov
push
imul
out
mov
and
shlb
mov
jl
inc
xlat
xchg
rol
loopne
lcall
addb
push
pop
sbb
fadds
add
jno
int3
mov
and
push
xchg
inc
and
ljmp
pop
sub
nop
lods
mov
cmp
data16
xor
add
fsubrl
and
inc
mov
flds
dec
or
hlt
lcall
dec
sbb
mov
imul
jge
lock
hlt
addr16
mov
stc
inc
mov
cmp
out
push
push
sub
je
inc
inc
jb
js
popa
push
inc
adc
pop
jae
adcl
cmp
cmp
mov
mov
lret
xor
mov
push
push
std
loope
lods
nop/reserved
scas
jp
mov
dec
dec
xorb
mov
aaa
mov
pop
push
cmp
add
mov
das
dec
dec
insl
and
sub
es
shl
mov
nop
iret
sub
jmp
fs
push
in
sbb
pop
hlt
cwtl
data16
iret
sub
mov
popa
fsubrl
mov
sub
incl
mov
cs
inc
or
aad
xor
xchg
imul
cli
dec
push
aad
inc
jb
jo
repnz
sub
out
dec
loopne
inc
lods
inc
cli
clc
bound
dec
je
filds
push
out
popa
test
and
jo
add
cmp
repnz
pop
push
and
aad
push
mov
sbb
enter
sbb
jmp
dec
mov
jno
and
adc
pusha
mov
mov
mov
push
push
fs
or
stos
xor
and
push
jmp
inc
outsb
dec
stos
rcr
and
dec
sub
adc
cmpsb
idiv
inc
mov
mov
leave
push
jo
fisubl
ret
lock
add
mov
jne
add
push
mov
mov
mov
adc
outsb
lahf
xchg
inc
sbb
jp
and
lcall
dec
and
lds
add
push
or
jle
movsl
sbb
dec
mov
mov
mov
inc
jmp
imul
ret
jo
mov
lock
xorb
xchg
cmp
xor
pop
pop
and
add
stc
aam
iret
mov
pop
jl
xlat
sub
mov
lret
fildll
add
push
fwait
repnz
subl
mov
inc
cld
clc
and
mov
iret
adc
dec
movw
inc
ja
dec
mov
inc
add
or
in
xchg
mov
or
push
ljmp
popf
repnz
sbb
jl
loopnew
mov
stos
inc
cmp
lods
push
cmp
sub
ss
in
and
xor
sarl
xor
cmp
fs
int3
hlt
in
mov
incb
xchg
cmp
imul
add
xchg
and
mov
jo
push
xchg
dec
repnz
xorb
mov
in
jae
call
test
push
xchg
push
sub
daa
repnz
in
adc
movsb
push
jg
out
clc
jb
pop
fwait
jnp
add
mov
add
das
mov
addb
mov
jle
inc
aam
xor
xor
sbb
cmpsl
aam
ret
sbb
push
adc
iret
push
sbb
sbb
repz
cmp
push
loope
inc
dec
sbb
jecxz
cmc
fimuls
inc
add
jne
aam
inc
add
addr16
icebp
subb
and
push
scas
and
mov
es
xchg
js
xor
sub
pop
push
lods
adc
cmpl
jo
js
push
je
jbe
push
sbb
mov
cmp
gs
fs
xchg
movsl
out
sbb
sub
enter
lcall
mov
je
xor
dec
js
inc
lea
fidivrl
cmp
xchg
push
sub
and
pop
loop
imul
jg
aam
in
add
sbbb
test
push
adc
pop
in
push
nop
push
test
and
sub
mov
bound
cmp
jle
clc
mov
xor
push
push
or
roll
clc
ret
pop
mov
jo
mov
add
hlt
mov
clc
dec
icebp
mov
insl
inc
or
cmp
inc
cmp
push
sbb
lock
insl
sub
push
fisttpl
xor
xchg
insb
cmp
mov
ret
repnz
jbe
adc
sarl
sbb
imull
adc
shll
and
ljmp
gs
inc
enter
mov
cld
popf
fdivr
mov
and
pop
add
cmpsl
fwait
iret
pop
test
icebp
loopne
inc
cwtl
or
icebp
stc
mov
lock
data16
scas
pop
addr16
sub
pop
cltd
lods
js
iret
inc
hlt
rclb
pop
outsl
mov
jb
and
imul
push
movsb
ss
fs
add
es
dec
jnp
popa
dec
sub
lods
pop
fdivs
jl
pusha
movsb
outsb
xor
fwait
add
mov
test
push
jae
sub
sbb
mov
in
inc
addb
sub
popf
es
and
into
and
inc
lea
shlb
imul
scas
cmp
jmp
sti
data16
outsl
add
shll
subb
icebp
and
xchg
inc
daa
imul
popa
dec
sahf
jne
pop
push
cli
pop
and
andl
dec
mov
repz
xor
jbe
push
lcall
jnp
lahf
shlb
push
or
cwtl
insb
leave
sub
rcl
loopne
clc
js
fwait
and
and
loopne
call
jmp
xchg
jge
pop
cli
test
lods
pop
mov
es
in
mov
and
popa
sbbb
scas
or
pop
cld
and
ljmp
mov
inc
jecxz
insl
iret
and
and
sti
lock
xor
adc
jnp
outsl
jne
inc
shlb
je
ds
sub
mov
or
in
repz
and
cli
call
outsb
and
xor
adc
test
movsb
mov
rol
popa
mov
std
mov
int
pop
jns
mov
and
daa
loop
dec
pop
popa
mov
cmp
test
adc
test
mov
hlt
dec
movsb
cmc
xor
cli
mov
into
or
insl
add
mov
sbb
hlt
daa
loopne
push
rcll
popa
cmpb
ret
inc
jle,pt
test
lock
jne
mov
jo
shlb
adc
lea
adc
xchg
mov
sub
xchg
xchg
inc
xor
lea
pop
fidivs
dec
repnz
inc
and
icebp
test
inc
cmpb
cld
fisubs
mov
mov
dec
test
sbb
push
pop
in
adc
and
les
andl
pop
dec
inc
push
push
xchg
or
cld
call
push
stc
es
xor
lods
sub
cld
and
jle
and
jmp
sub
mov
dec
jecxz
nop
ret
xchg
sbb
dec
push
icebp
dec
loopne
lret
sbb
jo
inc
sbb
sarl
loope
inc
pop
cmp
dec
mov
mov
sahf
popa
andl
sub
jmp
dec
adc
mov
pop
mov
jmp
outsb
fs
je
inc
mov
pop
inc
adc
movsb
ret
dec
fadds
rolb
gs
jo
loop
js
pop
jge
imul
and
mov
stos
insb
addr16
orl
rorl
les
gs
xor
nop
pop
cmp
jbe
loope
push
mov
mov
and
movsl
ljmp
xor
mov
mov
sbb
js
aaa
mov
cmp
fistps
hlt
leave
dec
repz
xor
and
xor
ret
int
inc
cltd
outsb
mov
cmp
ret
iret
sbb
js
and
adc
cmp
jns
popa
outsl
js
sbb
xor
data16
in
stos
js
cmp
mov
jo
xchg
sub
sar
inc
inc
lock
push
and
mov
mov
cmp
dec
jl
inc
jle
insb
outsl
outsb
test
push
cvtdq2ps
and
pop
shl
dec
in
test
inc
inc
jne
mov
fs
and
mov
mov
outsl
mov
xor
and
adc
jbe
xorl
loope
jne
imul
js
xchg
adc
rcll
inc
dec
mov
xchg
jns
lock
jno
les
inc
pop
insl
ror
dec
scas
mov
inc
jno
repnz
inc
sub
subl
ss
jg
and
cmp
mov
adc
inc
or
stc
mov
ljmp
outsl
mov
addb
movsl
push
js
data16
xchg
in
cmp
rclb
fcomp
movsb
and
mov
test
ret
xor
mov
cmp
test
inc
ja
sub
dec
sbb
jne
lcall
pop
je
mov
outsl
sub
lock
xchg
sbb
jg
test
and
mov
sub
mov
add
pop
iret
push
ret
lcall
add
outsb
pushf
mov
lds
jno
movsb
jne
cmp
aas
scas
pop
mov
xor
sub
cs
movsb
sbb
outsb
fcompl
mov
push
xchg
rclb
sti
js
and
sub
inc
fs
movsb
adc
sbb
push
xchg
cmpsb
xor
and
add
sub
push
xchg
repz
dec
pop
xor
negb
sub
jbe
mov
ret
push
pushf
sub
fildll
dec
add
push
outsb
cmpsb
je
lods
mov
jle
insl
xor
push
inc
jl
dec
add
dec
jle
or
inc
fs
movsl
js
adc
sub
aas
fisttps
decb
xor
mov
ret
jp
mov
jnp
and
outsl
sarb
sub
dec
sub
lock
xor
loopne
push
ret
lock
pop
cs
sbb
roll
push
popf
jns
cmp
ljmp
ret
fdivr
mov
dec
push
jnp
lret
loopne
sbb
hlt
data16
leave
insb
adc
sarb
push
movsl
pop
cmp
lahf
loope
cld
push
arpl
cmp
and
dec
sbb
jp
bound
sub
and
and
sahf
fdivrs
sub
and
popa
sbb
inc
in
dec
xchg
mov
dec
and
inc
mov
dec
addr16
sbb
test
mov
dec
mov
mov
bound
cmp
int3
jnp
adc
dec
aam
idivb
aas
movsb
pop
in
ret
imul
mov
imulb
sbb
mov
dec
shll
cmpsb
fisttps
sahf
dec
arpl
loopne
aam
jne
inc
lea
aaa
mov
jns
pop
cwtl
shlb
lahf
and
sub
test
lahf
pusha
insl
lock
mov
mov
pop
dec
pop
iret
aam
test
xlat
icebp
cmpsl
test
mov
jg
push
fprem1
insb
add
notb
enter
lock
fs
or
xchg
push
push
fsub
and
xor
out
fsubrs
jb
iret
inc
push
cmp
mov
jo
mov
pop
mov
js
popa
mov
and
out
rcll
pusha
or
pop
pop
sbb
jmp
adc
dec
cmp
insl
add
push
xor
loope
cli
lods
imul
xchg
lahf
inc
in
pop
loop
xchg
jns
ljmp
inc
and
or
testb
inc
iret
roll
loopne
dec
in
jecxz
sbb
loopne
int
stc
jp
inc
cmp
roll
in
or
jp
sbb
sbb
nop
push
fs
aad
add
sub
cmc
add
dec
add
stos
loopne
push
outsb
pop
jns
adc
mov
and
pop
jo
jp
lahf
xchg
out
and
sub
and
push
jno
cmp
xchg
inc
test
pop
adc
or
push
adc
popa
add
and
lock
and
inc
inc
push
xor
adc
dec
loope
cmp
jl
clc
xchg
cli
inc
sbb
and
inc
movsl
ret
push
daa
mov
gs
xor
mov
pushf
push
cmpsb
pushf
loop
mov
ret
out
jne
cmpsb
sbb
cld
insl
in
int
jae
sub
cmp
icebp
cld
roll
pop
insb
sti
popa
loopne
icebp
adc
xchg
call
icebp
repz
dec
add
xchg
mov
inc
dec
aam
mov
or
rep
adc
ret
or
adcl
lret
dec
lahf
and
andb
sbb
adc
adc
mull
dec
lret
mov
outsl
xor
sbb
ds
shll
stos
mov
mov
ret
dec
or
lahf
jp
ss
outsl
cmp
insb
adc
fdivs
sub
sub
push
dec
stos
mov
testb
jecxz
sub
jmp
loope
sbb
adc
inc
roll
jno
sub
inc
push
lock
inc
gs
push
mov
push
fidivrs
xchg
cmp
cmc
arpl
cmp
int3
outsb
adc
lret
movl
push
scas
js
jg
inc
ret
sub
cmpsb
push
inc
push
xlat
jno
call
inc
sbb
or
push
int3
mov
or
jg
call
xchg
mov
es
dec
inc
xchg
jmp
or
lahf
or
add
jle
mov
in
dec
rorb
xor
adc
repnz
jbe
test
cmp
movsb
test
dec
imul
movsb
cmp
cmpsb
or
pop
and
mov
add
in
fwait
jle
iret
mov
add
xor
adc
jl
mov
cs
mov
add
shll
dec
push
inc
jno
es
ja
popf
push
scas
push
call
jl
dec
and
dec
hlt
cltd
es
scas
push
xchg
or
push
mov
adc
mov
mov
or
mov
outsl
xor
pop
sub
sbb
jbe
je
js
out
and
fwait
sbb
pop
aam
add
sti
cs
fwait
movsl
or
arpl
cmp
lds
shrl
stc
shl
andl
push
and
roll
push
test
jge
in
inc
sub
inc
cltd
jg
je
dec
gs
outsl
inc
adc
data16
inc
xor
jb
jo
sub
or
hlt
jne
pop
xor
mov
ja
dec
js
cltd
or
mov
inc
cmp
adc
fdivr
sub
cmpl
inc
leave
fs
jo
xchg
mov
subb
sub
addb
into
xor
pop
scas
push
cmp
xor
dec
or
mov
and
mov
push
and
pop
pop
and
mov
push
in
mov
je
mov
jo
ret
dec
xchg
in
dec
mov
sub
pop
xorl
mov
nop
test
lods
mov
xor
test
lret
leave
sbb
dec
jge
cld
jge
out
lods
jo
js
out
add
or
pop
sti
insl
cmp
orl
pop
insb
xchg
jns
mov
push
lock
aam
xchg
outsl
flds
shl
cld
xlat
hlt
lods
or
call
dec
jno
mov
and
or
or
adc
call
mov
lock
inc
mov
test
sub
jne
lds
pushf
lods
pop
add
stos
lahf
cwtl
push
mov
pop
jge
test
mov
daa
int3
add
jcxz
jl
dec
lock
xor
cltd
lret
aam
shlb
inc
mov
outsb
or
xchg
jg
js
or
mov
out
jecxz
push
add
aam
and
loope
push
push
je
sub
or
mov
add
push
adcb
pop
das
mov
data16
sub
xchg
sub
mov
ss
rol
pop
icebp
fsubrl
sbb
jl
xchg
stc
jecxz
insb
ret
loopne
sub
or
mov
aaa
ss
test
aas
stos
mov
push
cmp
mov
add
or
dec
cld
jae
insb
mov
out
xor
add
ljmp
mov
adc
and
stos
jno
int
or
xchg
adc
sub
inc
cmp
adc
fildll
mov
mov
dec
push
mov
push
call
out
jns
add
cmp
sub
mov
fxch
sub
cmp
data16
push
jmp
addl
int
xor
lret
push
ret
and
inc
ljmp
xor
loop
inc
fs
imul
ja
lds
jnp
dec
push
outsb
jge
inc
sahf
sub
insb
in
push
xchg
dec
pop
pushf
inc
lods
fisubl
or
jno
fisubl
jno
lock
clc
in
ret
and
dec
adc
or
xchg
push
mov
add
mov
jb
adc
iret
sbb
mov
push
je
int3
bound
jl
idivb
fcoms
lock
xor
sbb
popa
rolb
call
sti
xchg
jge
ret
nop
mov
inc
int
in
mov
lock
jge
push
lret
push
lock
in
aam
mov
jb
cltd
gs
mov
inc
sarb
sub
fs
jo
push
in
cmpl
xchg
fldenv
and
jg
clc
push
push
jmp
or
dec
and
xor
lock
mov
pop
test
movl
mov
divb
adc
and
xchg
dec
sub
jg
scas
dec
iret
lods
bound
jmp
cwtd
mov
lcall
ljmp
inc
pop
mov
sbb
ja
movsb
lret
inc
leave
dec
clc
int3
add
sub
ret
or
repz
in
sub
push
jae
push
test
es
pop
mov
imul
or
push
dec
es
and
or
dec
sbb
arpl
cmp
mov
or
mov
insb
and
notb
xchg
jns
dec
jp
hlt
push
adc
inc
fs
inc
jo
outsb
adc
data16
push
test
stc
mov
insl
mov
repnz
addb
dec
stos
pop
mov
inc
rorb
jg
push
rcr
arpl
jns
xchg
and
jl
cmpsl
notb
out
flds
lock
js
inc
popa
and
inc
popa
push
and
inc
jmp
mov
and
mov
scas
nop
loop
sbb
sbb
jno
fsubrp
sahf
push
in
inc
fdivrl
aam
stos
loop
iret
sub
xor
lret
jg
fwait
sbbb
gs
daa
xlat
jmp
push
inc
mov
js
int3
mov
outsl
sub
pop
add
js
jmp
mov
ljmp
cmp
bound
shrb
pop
jo
fs
lock
sbb
loop
adc
pop
ret
cmp
dec
jo
fbld
cmp
cmp
gs
xchg
sbb
insb
leave
inc
lods
sbb
fsubr
jne
ret
sub
xor
xchg
fistpl
mov
outsl
add
cmpsl
repz
push
dec
inc
test
movsb
roll
iret
je
or
je
and
and
insl
push
test
faddl
pop
cmpb
fs
ljmp
inc
fadds
ljmp
xchg
ret
fidivrl
enter
sub
fs
sub
test
pop
adc
je
sti
mov
inc
or
cmp
push
mov
popa
andb
fdivl
movsl
mov
push
aad
cmpl
rcrl
inc
fiaddl
ficomps
xorb
outsb
sub
sbb
jne
push
xorb
sahf
jb
jno
leave
xchg
inc
sarl
sbb
xlat
test
cmp
xor
loopne
inc
sti
inc
out
cmp
push
adc
lock
xor
stos
sarb
fadds
adc
xorb
mov
xchg
in
test
push
push
shlb
ficoms
jno
dec
cmc
lock
mov
nop
and
imul
in
and
inc
xchg
lea
inc
add
jb
loopne
adcb
cmpsb
lods
ret
sbb
jns
and
push
outsb
jno
push
loope
cltd
jbe
inc
pop
out
and
dec
and
fwait
jns
cs
pop
jo
dec
outsl
dec
leave
nop
outsb
jecxz
cmp
mov
xchg
push
dec
ret
and
or
pop
inc
inc
fcompl
push
icebp
mov
addb
fs
shl
sub
and
stos
sbb
jecxz
mov
pushf
stc
cmpsb
ret
mov
jnp
call
sub
xchg
jb
arpl
mov
dec
lock
nop
and
jecxz
inc
mov
jne
mov
mov
daa
mov
push
shll
cmp
dec
jae
sub
inc
jb
pop
ret
dec
cmpsl
cmc
dec
and
adc
cmpb
out
cmp
fsubs
and
pop
rol
rcr
xor
pop
and
adc
inc
push
inc
je
mov
xor
push
xchg
dec
jge
jp
lret
xor
ret
adc
xor
sbb
xlat
icebp
popa
xor
in
sbb
icebp
cmp
fisttpl
jo
push
sarb
data16
mov
fidivrs
ficoms
and
shrl
les
dec
ficoms
cmp
cmp
ljmp
loop
xor
xchg
jo
imul
inc
arpl
and
mov
outsl
pop
in
mov
andb
je
inc
dec
roll
push
in
sti
jmp
inc
dec
adc
inc
popfw
mov
std
and
inc
idivb
roll
inc
movsb
xchg
dec
sbb
outsl
jg
cmp
jp
lock
call
mov
push
sbb
test
mov
std
cwtl
jno
mov
inc
mov
pop
pop
popa
sub
adc
shlb
push
sub
mov
jns
bound
mov
jo
and
mov
push
jle
adc
adc
push
mov
mov
mov
sahf
arpl
mov
inc
jle
int3
lea
cmp
mov
jge
dec
adc
dec
sbb
mov
clc
dec
mov
and
sbb
adc
int3
and
cmp
jae
fstpl
arpl
loopne
pop
and
inc
fs
mov
pop
loopne
inc
stos
pop
cwtl
dec
mov
int
push
and
les
cmc
cld
lods
stc
xor
lahf
inc
jecxz
sub
mov
dec
adc
and
movsb
add
inc
out
enter
rcrb
das
mov
sub
add
shrb
cmp
ret
cmp
mov
fwait
xchg
and
push
popl
dec
push
ret
popf
loope
sbb
fistpll
dec
arpl
inc
xlat
ret
rorb
cmp
fldt
popa
js
lds
add
fwait
scas
popa
outsb
adc
inc
lahf
adc
pop
add
ss
std
jl
dec
repnz
inc
sub
sub
clc
iret
push
pop
jne
in
and
es
enter
inc
inc
dec
push
mov
mov
mov
sbb
scas
dec
call
shrw
and
or
loope
mov
pop
cmp
faddp
inc
mov
shll
mov
mov
cld
xor
popa
xor
ret
subl
pop
das
cmpsb
subl
and
ljmp
dec
pop
inc
lret
call
and
jp
rclb
xchg
and
pop
inc
mov
lock
lret
mov
ds
xor
imul
mov
sbb
xor
stos
daa
popa
adc
mov
ljmp
push
xchg
mov
jb
fmull
in
add
pushf
inc
add
mov
loop
fwait
xor
jns
jae
and
repnz
and
ret
jno
mov
dec
and
jmp
xor
sub
sarb
inc
sub
in
mov
mov
push
jge
inc
cmp
jge
ljmp
cmpsl
nop
dec
inc
jo
loopne
mov
xor
cmpsb
pop
sub
sub
cmp
pop
pop
jmp
or
shll
or
insl
mov
lea
mov
sbb
inc
stos
mov
repz
and
and
cmp
or
in
pop
pop
inc
or
pop
or
cmp
push
stos
mov
or
sbb
mov
xchg
add
test
xor
mov
jle
sub
add
sub
in
or
ret
xor
mov
inc
adc
shlb
xchg
adc
sbb
ret
jns
in
and
stos
in
cmpsb
pop
movl
insl
adc
jno
xor
dec
dec
subl
push
sbb
jecxz
dec
mov
add
imul
in
xchg
dec
icebp
cmp
mov
mov
in
cmp
jb
jb
pop
movsb
mov
or
pop
dec
inc
stos
cmp
insl
ds
jp
aad
in
and
dec
out
sbb
in
and
xorb
push
lahf
stos
ret
adc
lret
push
jmp
and
sbb
lcall
cld
cmp
fistpll
roll
sbb
andl
or
jmp
aam
dec
or
xchg
xchg
mov
push
inc
xor
mov
jmp
test
je
outsl
iret
mov
repz
mov
mov
mov
imul
mov
popf
cmp
fs
enter
push
mov
sub
cmp
inc
and
xchg
das
push
dec
pop
mov
sub
mov
adc
in
and
jl
mov
xchg
shlb
mov
fwait
jge
test
loop
inc
out
jecxz
add
push
jge
sbb
pop
jae
xchg
xor
dec
inc
ret
dec
iret
cmp
or
rcrl
push
enter
sub
add
sbbl
adc
dec
les
adc
sub
mov
sub
sbb
dec
push
jecxz
sbb
and
inc
insb
pop
addr16
int3
imul
pushf
pop
jg
pop
xor
xchg
popa
xor
int
inc
adc
jb
mov
daa
fwait
jns
inc
mov
fucomip
adc
xchg
dec
dec
push
ret
or
jne
jnp
xor
fcmovne
push
xor
fstpl
cs
xor
lahf
or
and
adc
or
movsl
jno
dec
int
cltd
inc
js
jecxz
or
xlat
xchg
xchg
clc
and
jb
jg
lock
ret
lds
xchg
dec
dec
out
aaa
dec
jb
adc
aad
cwtl
inc
sbb
dec
jno
cmpsb
dec
push
xchg
mov
shll
fdivs
add
dec
mov
lahf
dec
loopne
or
pop
or
inc
test
and
bound
shll
icebp
fidivrs
or
sub
fcoml
fwait
inc
jno
mov
mov
shrl
sub
subl
call
cwtl
adc
imul
or
push
and
cmp
and
jecxz
shl
sbb
jle
and
inc
add
cld
in
fisttpll
push
add
ret
sub
jge
mov
jmp
xchg
dec
and
cmp
pop
jb
cli
lods
inc
mov
pop
lret
mov
and
cmp
inc
cmpsl
push
or
sub
add
inc
jecxz
cmpsl
push
fiaddl
loope
mov
mov
add
popa
orl
xor
fildl
scas
or
jl
nop
lods
jp
sti
cltd
shl
pop
adc
jl
inc
addr16
and
test
mov
ja
sbb
icebp
xchg
shlb
lods
cli
inc
and
inc
js
icebp
dec
cmp
loope
mov
into
icebp
out
subb
inc
mov
ja
hlt
sarb
mov
and
mov
dec
rcll
mov
ja
leave
mov
test
pop
or
ja
or
push
cmp
dec
and
in
cwtl
push
pop
mov
sub
inc
ja
sbb
pop
dec
sbb
cltd
sub
jp
mov
pop
inc
imul
inc
mov
push
sub
addl
push
mov
sbb
repz
cmp
sub
stos
lods
dec
rolb
jbe
mov
dec
das
add
mov
fidivrl
dec
sub
rorl
inc
adc
stc
scas
inc
and
stos
dec
cmp
jae
test
push
test
dec
mov
shll
sarb
sub
gs
mov
inc
xor
mov
and
jg
adc
test
push
sub
and
push
addr16
rcl
mov
dec
adc
mulb
xor
hlt
or
sub
mov
cld
ret
or
add
movl
xorl
jbe
or
mov
push
sbb
mov
mov
loop
inc
mov
outsb
pushf
pop
sbb
xor
insl
sbb
sub
jb,pn
nop
addl
jg
dec
add
popf
cwtl
bound
insl
xor
inc
dec
mov
pop
movb
fcompl
inc
ss
push
jae
std
jg
rclb
adc
pop
inc
pop
xor
leave
xchg
fsubrs
sub
or
cmpsb
jb
loopne
pop
push
adc
sub
xor
sbb
js
jne
imul
jl
inc
fiaddl
xor
out
inc
push
test
ret
mov
insb
arpl
movsl
jecxz
inc
push
mov
cmp
shlb
add
dec
inc
inc
iret
pop
pushf
pop
or
xchg
cmp
cmp
mov
leave
pop
lock
dec
mov
jg
mov
mov
aam
sub
leave
fwait
dec
jge
mov
call
sahf
les
jno
xchg
bound
cltd
lock
inc
fists
pop
fsubrs
sub
imul
fsubrs
leave
sbbl
jl
adcb
pop
xor
add
iret
add
fdivrs
dec
pop
leave
push
mov
add
out
sbb
test
imul
mov
scas
and
sar
sub
jg
or
mov
aaa
div
enter
iret
mov
out
lods
and
std
fstl
fs
cmp
lods
pop
xor
movsl
pushf
mov
lods
mov
mov
jbe
pop
cmc
and
or
test
icebp
adc
ret
jne
sub
jmp
cwtl
jns
mov
pop
mov
jb
xchg
leave
jb
cmp
and
sbb
and
xchg
out
loop
movsl
sub
xchg
xchg
cld
aaa
mov
or
mov
bound
call
mov
lret
lret
roll
xchg
jo
iret
pop
ss
xchg
aam
and
jecxz
pop
cltd
jne
leave
pop
cmpsl
pop
xor
imul
sti
arpl
lcall
pop
jp
out
jns
sub
pop
cmpsl
mov
jbe
sti
inc
into
enter
jle
mov
or
dec
ror
xchg
xchg
and
mov
dec
add
andl
clc
mov
mov
cs
jns
iret
in
xchg
hlt
adc
mov
jmp
test
iret
jg
xchg
leave
push
std
movsb
jne
jg
xor
insb
mov
jne
mov
mov
in
push
popa
pop
push
inc
sub
xor
aaa
push
jo
addr16
mov
mov
mov
mov
fmul
repz
xlat
inc
in
and
mov
stc
out
lock
xor
addb
lcall
imul
testb
ret
push
imul
dec
addr16
insl
add
push
mov
cmp
movb
adc
push
insl
loope
add
icebp
imul
push
pop
test
push
ret
in
push
dec
shlb
andl
jmp
daa
iret
clc
mov
lds
xor
cmp
xor
mov
inc
fwait
push
iret
les
outsb
arpl
jo
inc
ficomps
sub
aam
test
cli
into
arpl
cmp
dec
loop
push
gs
push
push
jb
mov
xchg
xor
data16
push
mov
test
cmpl
cmp
fists
imul
sub
mov
scas
jae
xchg
mov
push
mov
hlt
sub
fwait
loop
popa
test
and
lea
push
jo
hlt
jo
push
mov
push
sahf
mov
loopne
sbb
imulb
cld
aam
xchg
adc
into
cltd
clc
dec
loop
clc
mov
jnp
test
outsb
fcompl
push
es
jmp
leave
fcmovne
loopne
sahf
fmuls
and
pop
mov
dec
cmc
sub
dec
jo
and
ficomps
mov
inc
in
inc
data16
loop
jmp
lds
int3
aad
add
mov
adc
loopne
cld
add
std
cmpsb
mov
mov
mov
data16
leave
filds
xchg
les
and
and
loop
push
aad
shl
mov
arpl
iret
xchg
js
add
cs
inc
pop
scas
push
xor
jo
xor
inc
lahf
dec
scas
pop
in
inc
dec
in
lock
outsl
sub
iret
sbb
repnz
pop
mov
xor
xchg
addl
add
scas
add
xor
sbb
fadd
sub
cmp
test
push
cmp
sub
sub
jno
mov
mov
sub
or
push
mov
sub
dec
mov
mov
outsl
ret
aas
mov
and
inc
lock
data16
lret
add
push
loop
daa
aad
iret
mov
cmp
cmp
arpl
cmpsl
loop
push
xchg
push
pop
dec
sbb
pop
adc
sbbb
adc
xor
xor
mov
out
mov
jge
and
leave
ret
add
sbb
mov
mov
mov
iret
add
out
clc
dec
push
orl
cld
sbb
icebp
loopne
fisubs
call
xor
aad
orl
add
in
rcrb
xchg
pause
lock
mov
sbb
cmp
inc
sub
and
jno
lea
in
push
mov
adc
xor
lods
mov
cmp
in
addr16
sub
cmpsb
mov
jp
and
popa
filds
mov
cmp
out
pop
repz
hlt
xor
rclb
es
xchg
sbb
gs
sbb
xor
and
outsb
out
cmpsl
xchg
decb
inc
icebp
cltd
or
or
jno
hlt
xchg
in
mov
mov
insl
in
pop
in
jle
push
sub
inc
mov
pop
and
xchg
ss
adc
xchg
push
xchg
xabort
push
clc
mov
mov
sbb
pop
jnp
sbb
rcrb
mov
cmpb
ret
fstl
adc
push
mov
in
xchg
fildll
fldt
sbb
call
imul
nop
lods
push
cmp
mov
dec
in
mov
nop
cmp
push
ja
inc
mov
adc
and
mov
xor
rcll
sub
out
aam
push
shlb
popa
dec
outsb
pop
call
ljmp
sbb
iret
or
enter
jge
test
nop
or
dec
jg
fisubs
mov
fldt
add
cmc
leave
push
push
xor
xor
add
fs
inc
xchg
add
cmpsl
fnstsw
pop
xchg
push
movsl
jns
inc
loope
roll
xor
outsl
jno
mov
fwait
jns
loopne
das
sub
jp
jnp
mov
cmc
into
les
clc
cmp
sbb
sub
cmp
cmpsl
nop
inc
adc
inc
sti
hlt
std
sbb
scas
xor
mov
ja
loopne
movsb
out
mov
ret
ss
mov
hlt
leave
xchg
inc
iret
jb
xchg
push
sbbb
imul
push
icebp
or
jne
xlat
and
bound
or
mov
jl
or
jbe
mov
push
sub
push
dec
cmp
int
hlt
xchg
call
iret
push
dec
push
push
mov
js
outsl
sarl
dec
dec
pop
inc
mov
xchg
bound
aam
test
sub
xor
clc
dec
scas
mov
popa
fs
pop
bound
xchg
pop
cmc
loopne
enter
mov
ljmp
cs
js
sub
xor
jnp
and
jbe
jae
jne
jle
or
test
inc
sbb
ds
arpl
js
ficoml
inc
sub
sub
ret
and
sbb
rclb
mov
ss
and
and
inc
jo
cs
test
gs
xchg
repz
inc
push
ja
mov
out
test
scas
out
movsb
xchg
xchg
stc
addb
mov
cltd
ss
pop
test
push
and
xor
repnz
and
jbe
gs
xor
and
and
cmp
fsubrl
ror
and
stos
cmp
push
xor
sarl
jecxz
out
hlt
jmp
sbb
mov
fimull
mov
inc
jae
pop
loopne
fnstcw
xchg
cmp
jnp
imul
scas
mov
dec
push
lock
jnp
aas
sub
mov
jge
mov
fs
gs
adc
arpl
sbb
push
pop
dec
daa
stc
or
decl
dec
out
inc
inc
fimull
ljmp
add
sbb
aam
sahf
std
xor
fisubs
and
lea
mov
mul
test
cmp
adc
inc
imul
push
or
insl
add
mov
icebp
scas
and
out
add
sbb
aas
jnp
and
pop
jne
add
enter
cmpsb
repnz
in
xchg
rcr
cld
orl
adc
fldcw
lods
ret
sub
dec
push
inc
lret
fwait
cmp
fs
sub
jb
inc
jo
mov
push
inc
sbb
cwtl
test
cwtl
xor
gs
push
int3
cli
addr16
les
mov
lock
mov
cmp
addr16
and
mov
xchg
push
repnz
leave
inc
sbb
adc
mov
adc
adc
push
inc
push
xor
mov
cmovbe
push
out
add
or
and
sbb
jbe
push
pop
shl
xor
testl
test
rcrl
mulb
ret
loope
adc
lret
in
sub
dec
lret
insl
xchg
fcmovne
int
inc
adc
inc
leave
xchg
cmp
fiaddl
out
jecxz
dec
mov
pop
mov
jge
addr16
pushf
xor
xor
addr16
pop
sahf
mov
repz
iret
dec
addr16
outsl
iret
std
or
dec
mov
cmp
jge
arpl
repnz
push
test
mov
push
add
cmp
andb
xchg
push
test
or
ret
inc
adcb
mov
shll
cltd
mov
inc
fdivrp
lds
dec
inc
mov
mov
imul
mov
inc
xor
es
cmc
push
ret
cmp
dec
cmp
ret
shr
sub
push
stos
adc
dec
cwtl
xor
dec
int
push
pushf
rcll
jb
adc
fdivr
pop
call
scas
cli
js
xchg
inc
bound
and
sub
sub
outsl
mov
push
push
rclb
je
out
ret
call
jne
mov
xor
jne
cmp
pop
mov
adc
stc
addr16
adc
jecxz
push
dec
sub
or
xchg
and
lock
cmp
imul
push
fisubrs
movsb
push
shrl
dec
xor
mov
subb
aaa
xor
sahf
and
lea
mov
mov
or
int
out
cmpsb
inc
pop
jno
push
cli
ret
mov
add
and
inc
leave
jecxz
sub
dec
aam
js
imul
mov
mov
iret
mov
push
jb
ret
cmp
stos
je
pop
fsub
sub
cmp
decl
mov
cmp
test
addr16
pop
push
sbb
rol
in
mov
shlb
ja
ret
les
or
xor
mov
ljmp
fsubrs
shll
je
insl
mov
mov
xchg
and
leave
popf
insb
fdivrs
adc
bound
mov
test
ss
xlat
or
cmp
sub
daa
mov
into
mov
test
adc
mov
call
lods
pop
xchg
mov
stc
in
gs
cmc
pushf
jae
jmp
mov
mov
inc
and
and
jmp
pop
push
insl
xchg
rolb
popf
push
lret
test
xor
cmp
repz
lock
jecxz
shl
xchg
shlb
ret
or
add
mov
test
dec
or
icebp
xchg
pop
xchg
cmp
mov
cmpsl
inc
add
js
push
jecxz
repz
popa
shll
fs
ret
out
xchg
sub
repz
pop
dec
decb
ja
inc
mov
cmp
rcrb
cmp
jae
cmp
cltd
mov
test
inc
adc
sbb
pop
fcomip
leave
sbb
dec
out
xchg
sub
push
xlat
xchg
dec
push
lods
mov
pop
xorb
int3
xchg
jmp
shl
pusha
sub
fisttpll
jl
pushf
lds
test
repz
jb
ret
adc
pop
mov
popf
stos
adc
lret
add
inc
sbb
adc
mov
sub
cmp
add
pop
mov
xor
push
test
dec
je
push
xor
push
pop
shll
xor
mov
icebp
js
gs
xchg
pop
jmp
loopne
lcall
jnp
mov
sahf
xchg
mov
adc
and
and
push
outsb
add
ds
push
inc
inc
mov
jg
inc
dec
push
outsb
popf
xchg
bound
andl
adc
mov
or
cmp
jbe
xor
cld
jnp
or
xlat
loop
push
and
stos
and
ret
push
call
ja
outsw
mov
in
enter
sti
outsl
stos
inc
dec
inc
addr16
jo
movsb
adc
cmp
testb
test
loope
xchg
adc
jo
test
in
sarb
jo
popa
xorl
pop
mov
gs
bound
add
inc
aaa
imul
pop
sub
jg
mov
adc
shll
iret
or
insl
insl
std
test
je
mov
or
mov
sub
jg
pop
mov
or
sub
cmp
shll
mov
test
and
jne
in
loope
cmp
dec
dec
pop
fildl
and
outsb
cs
pop
mov
scas
pushf
xor
cmp
inc
pop
inc
ret
imul
push
inc
mov
movsb
mov
sub
cmp
iret
incb
pop
mov
fs
mov
mov
ret
hlt
popf
pop
sub
push
out
sub
adc
stos
inc
repnz
xchg
insb
cmc
dec
lahf
push
jb
test
outsb
cmc
adc
jl
bnd
or
bound
ret
les
std
mov
pop
test
es
push
jp
push
dec
mov
xor
jne
xchg
iret
inc
mov
jb
out
jecxz
push
cmp
movl
and
gs
ds
and
fldenv
and
aas
scas
je
mov
mov
and
fs
iret
fstpt
add
scas
arpl
inc
jl
xor
loopne
xor
or
xchg
add
sub
sub
xchg
xchg
imul
mov
and
push
jb
stos
pop
fistl
mov
jae
test
and
iret
jb
pop
jp
daa
addr16
in
dec
inc
ret
xchg
enter
inc
pushf
aam
dec
mov
and
jae
scas
lret
adc
xchg
iret
mov
jo
cmc
mov
subb
rorb
imul
ror
and
scas
jp
adc
mov
popf
push
inc
xchg
gs
fwait
or
ret
out
mov
xchg
inc
cmp
ja
mov
test
in
sub
les
adc
jbe
push
add
mov
dec
or
inc
xchg
mov
sub
aaa
inc
dec
sbb
mov
adc
mov
icebp
cmpsb
inc
push
es
pavgb
inc
cmpsb
push
add
popa
mov
inc
dec
es
inc
addr16
push
and
call
mul
icebp
adc
lock
icebp
in
inc
aam
imul
in
fisttpll
rclb
call
stos
cmpsb
jb
dec
and
xor
pop
loop
stc
roll
sub
cli
add
insl
inc
pop
sub
rol
sub
sub
hlt
mov
and
push
int3
les
xor
cmp
mov
aas
je
pop
push
mov
repz
mov
pusha
pop
mov
lods
dec
dec
xor
and
movsb
dec
push
xor
mov
icebp
aam
push
inc
xor
xchg
dec
pusha
cli
mov
jl
sbb
inc
aas
in
mov
pop
and
inc
fs
in
movsl
xlat
test
pop
mov
cmp
mov
add
push
mov
adc
mov
mov
js
fisubrs
jnp
dec
outsb
and
ret
mov
pop
mov
add
imul
out
sub
mov
je
and
ror
and
test
pushf
pop
xchg
stos
out
cmp
sbbb
lret
sbbb
push
and
test
leave
sub
inc
cwtl
jae
fwait
xor
push
sbb
shll
pop
mov
cmp
iret
add
mov
sahf
push
jecxz
sbb
jbe
adcb
inc
cmp
xor
xor
inc
pusha
js
sbb
jo
or
repz
inc
or
rclb
in
add
repnz
loop
dec
dec
and
push
sarl
inc
imul
mov
xor
mov
in
and
fildl
jb
adc
inc
jne
mov
call
icebp
int3
pop
mov
push
pop
das
pop
scas
mov
pop
adc
sbb
ljmp
xorb
ljmp
outsl
jl
cmpsl
in
rcr
xor
dec
gs
xor
jp
jns
and
dec
mov
daa
out
ret
aad
lahf
mov
inc
adc
sbb
test
xor
dec
jp
ficomps
push
jnp
pop
je
sbb
jno
and
into
and
popa
iret
adc
add
call
jb
push
lret
js
fdivr
cwtl
jno
mov
pop
push
data16
dec
jns
hlt
push
cmc
xchg
push
imul
xchg
int
pop
push
lods
fmull
ss
mov
outsl
jg
xchg
loopne
push
cmp
push
inc
test
lret
std
rol
imul
xchg
fs
adc
sub
aad
adc
mov
xchg
adc
std
jbe
mov
notl
stos
lahf
sub
and
in
inc
int3
push
inc
xchg
inc
fwait
push
insl
mov
shrb
sarl
mov
fadds
push
or
stc
mov
scas
pushf
loopne
les
push
pop
pop
movsb
jecxz
adc
xlat
push
gs
lea
mov
fsubp
sbb
shl
xor
dec
in
push
cmp
lock
xchg
xchg
stos
push
mov
lock
ffreep
das
shlb
push
sub
inc
je
or
xor
inc
dec
loope
popf
out
sub
mov
mulb
mov
scas
test
inc
sub
lret
adc
push
push
leave
rolb
cwtl
orl
clc
out
xor
ret
lea
movsl
testb
xor
add
sub
mov
adc
and
inc
dec
fsubl
dec
jae
repnz
xchg
jnp
lods
fs
loopne
sbb
out
inc
imul
insb
outsb
pop
loopne
push
outsl
pushf
cli
shll
jbe
ret
repnz
xchg
in
cld
es
shll
repz
movsb
adc
xor
jb
inc
jecxz
shll
hlt
mov
jbe
incb
outsb
xor
aam
push
and
xchg
shrl
push
call
in
rorb
fs
mov
arpl
out
xlat
divb
shl
mov
adc
cmp
cmpb
dec
add
jbe
jno
pop
and
adc
or
lret
push
add
push
insl
sub
aad
call
jo
jne
sub
test
fs
push
sahf
jecxz
inc
xchg
sub
sub
cmp
call
sbb
bound
dec
popa
lret
fs
or
bound
pop
imul
push
pop
in
dec
ret
mov
pop
cmpsb
stos
fs
jo
shll
pushf
add
inc
mov
or
xchg
inc
mov
mov
mov
inc
mov
push
inc
add
test
sbb
inc
mov
inc
cmp
jnp
sbb
ror
sub
das
loop
fbstp
adc
icebp
aam
lea
ds
cltd
mov
jns
xchg
cmpl
lea
aas
sub
xchg
popa
aad
cmp
lds
popf
push
push
rol
pop
inc
and
push
pop
push
es
mov
out
loop
mov
push
repz
ror
frstor
pop
jb
and
xor
inc
xor
add
pushf
jns
mov
cmp
in
mov
adc
jecxz
sub
and
loopne
iret
sbb
add
xor
in
add
pop
ret
mov
and
out
sub
lahf
es
scas
call
or
int3
es
call
inc
xor
ficomps
ret
and
jo
fadd
popa
lock
jge
push
outsb
mov
popa
dec
nop
adc
fidivs
lea
addr16
xchg
cmp
mov
call
lock
pop
jge
fcoms
sub
or
cmp
cmp
lods
jo
insl
fwait
popa
dec
mov
and
adc
fmull
lcall
or
jns
and
xor
lea
cmp
out
cwtl
out
fsincos
cmpsb
or
pop
mov
sbb
std
fwait
ret
pop
fisubrl
fildll
jle
cmp
sahf
xor
xor
or
cmp
addb
arpl
div
enter
and
ss
mov
push
adc
xchg
inc
iret
pop
mov
addl
stos
mov
jge
bnd
hlt
ret
cmp
leave
cli
pop
cmpsl
lret
sub
loopne
jbe
ret
adc
lock
inc
idivl
add
shll
inc
loop
xor
jmp
and
scas
inc
loopne
inc
loopne
or
xchg
movntps
adc
sbb
sbb
dec
mov
mov
jno
dec
push
sbb
cmp
dec
aad
scas
dec
inc
add
loope
jns
lret
push
dec
mov
rorl
test
add
sbb
adc
push
fadd
lds
mov
not
and
imull
enter
cmp
cmc
clc
sbb
insb
dec
mov
loope
and
imul
stc
pop
add
xor
pop
sub
xchg
in
insb
dec
les
aam
addr16
lahf
fs
gs
xor
movsb
sarb
pop
dec
jmp
xchg
adc
adc
adc
sub
popa
sbb
dec
jg
ret
sub
in
ret
adc
lock
inc
mov
popa
jne
nop
inc
aam
pop
icebp
xor
push
stos
imul
dec
and
sbb
inc
xchg
xor
adc
sub
in
mov
jge
mov
shll
stc
or
dec
pop
jns
adc
das
inc
cmp
and
stc
std
arpl
out
mov
loopne
jmp
sarl
ret
adc
and
es
mov
sahf
push
fadd
hlt
fsub
sbb
inc
and
pop
test
ss
xchg
sub
inc
push
xchg
sub
cltd
je
lods
sbb
nop
loopne
inc
leave
ljmp
fnstsw
mov
and
loopne
daa
pop
jnp
roll
pop
push
cltd
pop
leave
push
sbb
sub
in
jbe
dec
pushf
ja
pushf
push
push
jbe
insl
mov
data16
fidivrs
repnz
jne
mov
mov
je
inc
rorl
mov
pop
das
out
imul
dec
pop
mov
push
inc
add
inc
fs
and
mov
inc
add
ss
and
mov
ret
mov
jb
movsb
shr
and
shr
or
int3
dec
nop
dec
jne
fucomp
sbb
mov
js
jg
fadd
test
aad
and
push
mov
inc
dec
out
xchg
jmp
mov
mov
negb
fwait
in
mov
mov
add
inc
xchg
mov
arpl
jp
dec
mov
outsb
call
movsb
mov
jl
insl
xor
int3
pop
mov
aad
nop
scas
mov
in
jge
call
ficoms
jns
stos
adc
dec
mov
cmp
jae
sub
mov
push
sub
stc
jle
jne
lret
push
jmp
add
inc
sub
dec
adcb
fisubrs
pop
jbe
inc
jge
icebp
mov
test
xchg
js
xchg
imul
sbb
xchg
mov
test
sbb
xor
or
push
fucom
or
xchg
jns
loopne
xor
push
add
rolb
inc
jno
inc
xor
mov
cmp
out
cmp
push
lods
imul
push
push
es
cs
out
jne
fsubrp
mov
icebp
jae
xor
cwtl
inc
pop
mov
sarb
daa
fidivrl
sub
and
sti
stc
outsl
mov
movsb
outsb
mov
mov
jl
jo
sbbb
outsl
jo
cmp
std
add
fwait
push
movsb
jno
imul
and
lock
cmp
ja
xor
cmp
test
addl
mov
mov
jge
jb
insb
js
jb
aam
cmp
pop
lods
sahf
inc
shll
mov
inc
dec
in
inc
es
mov
and
out
orb
add
gs
pushl
roll
push
jne
test
lcall
mov
sbb
std
mov
inc
ret
cmp
pop
outsb
outsl
jno
mov
mov
mov
or
push
ret
enter
aaa
je
add
xor
fldl
jnp
dec
and
out
xor
jnp
push
xchg
mov
and
aam
dec
jp
dec
dec
jge
sbb
lods
ret
jp
fdivr
xchg
inc
and
inc
es
mov
stc
push
mov
andl
imul
and
pop
jl
xor
les
dec
test
lret
movsb
rclb
pop
xor
mov
pop
inc
stos
int
sub
sub
xchg
insb
cli
add
push
ja
pop
js
mulb
adc
jle
popf
nop
or
out
cmp
popf
xor
sbb
nop
mov
fistpl
dec
lcall
pusha
pop
inc
test
push
lcall
or
push
adc
shll
mov
pop
movsb
sub
mov
leave
push
ret
lods
cmp
xor
lea
and
nop
cmp
iret
xor
inc
and
xchg
popf
xchg
inc
ret
test
mov
pop
mov
cltd
add
call
and
les
sub
call
push
fs
iret
dec
outsb
mov
jb
out
adc
or
aaa
scas
and
mov
jno
sub
push
and
orb
inc
and
insb
inc
and
sarb
inc
push
push
ret
cmp
fs
cli
jns
xor
stc
or
inc
inc
cmp
sub
sub
and
inc
push
fsubp
add
dec
pop
add
xchg
cwtl
mov
sbb
into
mov
addb
fimull
sbb
sub
popa
sub
and
pop
out
fdivrl
push
out
cmp
lds
sbb
push
xor
add
mov
dec
loop
cmp
and
sti
insb
xor
dec
sub
shrl
dec
fldenv
sbb
sub
mov
fldl
lcall
pop
add
test
fidivrs
ljmp
in
mov
lahf
mov
jno
sbb
add
sbb
adcb
rcr
fs
sbb
rcll
aas
xor
cmpsb
jo
push
push
icebp
or
outsb
sub
and
add
ret
mov
loope
add
jle
push
xchg
add
push
xchg
stc
push
call
inc
xor
xor
rorb
push
dec
inc
test
ret
pop
and
in
in
mov
and
aas
xchg
add
sub
pop
push
adc
mov
imul
and
push
cld
dec
jge
adc
in
jo
ret
push
adc
js
gs
ljmp
sbb
icebp
and
xchg
push
stos
xchg
xor
mov
pop
jno
jb
mov
ds
pop
into
outsb
inc
pop
dec
dec
xor
shlb
dec
or
bound
inc
pause
loopne
and
xchg
jecxz
js
cmp
cmp
in
pop
je
shll
mov
inc
popa
push
repnz
clc
mov
idivb
add
mov
leave
jbe
mov
or
sahf
iret
and
push
addl
dec
cmc
adcl
inc
sbb
stos
cmpsb
clc
push
add
sub
in
pop
push
insl
fidivrl
and
inc
xchg
and
stos
and
jns
and
mov
cmp
pop
cmc
push
mov
jl
shr
je
xor
ret
xchg
repnz
outsb
insl
stc
xor
int
or
fidivrl
push
fld
out
in
test
orb
divl
jg
sub
je
dec
lcall
xorb
inc
shll
inc
sub
insl
cwtl
sub
inc
ret
loopne
outsl
push
psubsb
add
out
out
pop
aaa
push
jnp
xchg
leave
jg
xor
js
mov
call
xor
mov
and
adc
jb
sub
fldl
int3
jb
test
popf
int
sbb
je
push
in
cltd
clc
stos
imul
and
js
jno
ret
add
lock
jns
sahf
in
xchg
or
cmpsb
dec
jb
jae
movsl
pop
ret
pop
jmp
test
jbe
jo
xor
mov
jo
push
loope
dec
mov
sbb
cltd
lods
xchg
in
dec
fdivrl
push
xchg
loope
rcll
xchg
les
ret
int
bnd
faddl
xor
sbb
je
ja
inc
aam
inc
lock
jle
fldt
ds
or
jg
mov
mov
jno
jo
sub
adc
iret
insb
rcrb
out
add
mull
push
nop
dec
mov
out
lods
and
filds
ss
push
mov
shlb
test
sub
mov
jp,pt
cmp
jne
push
pop
jno
xchg
push
xor
dec
lcall
add
stos
idivb
inc
add
ss
loopne
inc
sarl
add
movb
test
jb
add
push
das
cmp
adc
xchg
sbb
dec
xchg
cmc
jge
pop
cltd
imul
popf
push
pop
fsubrs
dec
push
inc
jp
mov
inc
adc
sbb
in
adc
loop
outsl
jb
test
mov
hlt
cli
je
mov
stc
hlt
jl
push
jne,pt
jo
xor
sub
cmp
pushl
or
outsb
sub
std
inc
xor
gs
jmp
or
cmp
lcall
nop
loope
js
icebp
dec
scas
int
sbb
and
sbb
inc
sbb
aas
add
xor
in
jecxz
cvtps2pi
sbb
and
insb
and
mov
hlt
xchg
jo
insl
repnz
push
push
sub
jl
push
push
push
add
jb
fidivrs
ja
dec
push
jbe
sbb
in
fwait
imul
add
mov
pop
out
dec
cmp
nop
mov
push
add
call
jb
cwtl
pop
cmc
mov
cmp
sbb
dec
insl
xor
aad
pop
dec
mul
fadds
push
ret
test
nop
pop
and
pop
movsb
xchg
xor
int3
inc
loop
jmp
icebp
mov
rcll
or
push
repnz
mov
sbb
bound
inc
iret
pop
sub
shll
rcl
jno
mov
sbb
lea
gs
mov
sbb
add
out
xor
push
push
insb
imul
fcompl
ljmp
mov
dec
inc
jne
mov
mov
push
mov
mov
add
clc
dec
bnd
outsl
stc
sbb
hlt
es
clc
incl
jno,pn
sub
cwtl
inc
addb
jecxz
sbbb
dec
enter
mov
and
lds
ds
imul
sub
cwtl
sub
lock
sbb
aas
hlt
loop
cmpsl
adc
lret
in
pop
xchg
sub
lock
cld
lret
mov
enter
shlb
mov
xchg
testb
sbb
pop
jb
push
cmpsb
push
xor
shr
mov
inc
push
stos
lret
jno
sub
mov
jbe
pop
call
jno
and
dec
das
inc
call
imul
cld
fisttps
mov
gs
or
out
pushf
insl
add
test
xchg
bound
loop
outsb
ret
xor
pop
sbb
push
hlt
cmp
lret
jle
out
iret
inc
out
xchg
and
mov
fidivrl
jmp
push
mov
dec
test
push
pop
das
subb
js
cmp
push
inc
adc
dec
les
clc
dec
outsl
xchg
mov
leave
das
rorl
dec
xor
xchg
xchg
cltd
cwtl
daa
xor
icebp
movsb
loope
ljmp
xor
lahf
mov
adc
fld
inc
mov
add
dec
jo
inc
jp
cmpsl
leave
loop
mov
lret
mov
mov
xchg
sbb
pop
ror
loop
popa
pop
outsl
dec
sub
cli
push
ret
data16
jmp
notl
in
insl
jb
adc
mov
mov
xchg
cmp
enter
push
and
mov
add
mov
out
hlt
sbb
popa
xchg
je
gs
jo
mov
inc
sbb
call
pop
sub
xchg
xor
cmpsb
jl
test
rcrb
jbe
push
sti
roll
and
lock
test
insb
mov
lods
sti
push
sub
mov
cmpsb
dec
test
cmp
pop
xchg
fimuls
sub
pop
dec
sub
shl
fnstcw
cld
adc
lock
add
add
imul
inc
jp
test
ss
icebp
aas
xchg
sub
negb
out
stc
lods
test
imul
into
xor
push
inc
mov
and
das
outsb
movsl
mov
stos
fwait
outsl
lcall
jno
mov
push
mov
cmp
mov
xchg
push
pop
mov
and
ret
inc
and
hlt
mov
inc
fs
sbb
dec
addr16
mov
ss
leave
dec
imul
jmp
cmp
jg
lea
in
ret
clc
dec
add
adc
jno
cmp
inc
push
in
dec
mov
leave
fs
and
ret
sub
cmp
rcrl
hlt
sarb
mov
and
adc
mov
add
mov
xor
dec
outsb
push
insb
push
mov
adc
pop
inc
cmp
gs
push
lcall
roll
mov
mov
shlb
pop
mov
and
mov
push
inc
jo
mov
jno
in
dec
push
push
push
jbe
sahf
inc
fs
inc
or
jo
inc
vcvtsd2si
jb
cli
sarb
jno
mov
xchg
ffreep
or
popf
push
out
stos
ficoml
adc
cmpsb
test
out
enter
in
lds
insb
add
dec
inc
cmp
fwait
aad
xchg
sub
dec
or
sbb
and
xchg
popa
xchg
push
adc
fdivrl
mov
inc
pop
mov
mov
fisttps
xchg
stos
mov
mov
mov
loopne
jns
mov
jg
ret
aam
int3
test
cld
mov
repz
pop
jge
data16
jno
fsubp
push
test
lods
pushl
xlat
xor
push
and
in
inc
out
loopne
dec
shrl
lock
and
mov
dec
pop
sub
loopne
sbb
jecxz
inc
clc
lahf
add
lock
xor
rolb
fdivrl
xchg
jnp
ret
lea
jb
sub
outsb
nop
fimull
xor
push
std
lahf
push
mov
cmpsb
sti
fwait
inc
cltd
inc
xchg
dec
push
jne
inc
xorl
sbb
jle
add
push
sub
lds
ret
pop
mov
xor
enter
jno
and
mov
stos
mov
xor
inc
test
lock
hlt
ret
ljmp
adc
sub
es
shrb
hlt
jl
cmp
push
sbb
push
or
into
lock
dec
mov
stos
adc
lea
das
rcll
cmp
stos
mov
lock
js
jnp
push
push
mov
push
lock
dec
and
into
or
jns
inc
icebp
insb
jb
lcall
int3
lcall
add
pop
test
cmp
fsubrs
fdiv
push
inc
push
lea
dec
in
add
mov
or
push
icebp
adc
out
cmpb
or
cmp
ljmp
push
cmp
sbb
stos
mov
jne
or
fiaddl
adc
js
sub
aam
cltd
in
sarb
outsb
shll
lahf
inc
push
push
cmp
cmp
sar
scas
or
dec
mov
aas
out
cld
cltd
mov
icebp
dec
adc
js
cltd
sbb
inc
inc
rcl
dec
add
sub
fs
cmp
or
in
pop
dec
jns
jne
call
ficompl
add
test
lods
shrl
jl
es
pop
or
or
hlt
loope
aas
xor
push
adc
xor
enter
and
ret
xor
pushf
mov
jnp
or
fadd
xchg
push
bound
lcall
icebp
mov
xchg
mov
dec
xor
cmpsl
jp
inc
xor
mov
aad
or
jle
push
pop
mov
add
jno
inc
cltd
and
add
rcrb
popa
adcb
inc
jo
inc
and
add
test
sar
add
mov
mov
xor
sub
jmp
pop
xor
js
repnz
inc
shl
mov
push
xchg
jp
arpl
jae
inc
inc
push
icebp
and
adc
jecxz
repz
inc
shl
mov
push
xchg
jp
fs
jo
inc
and
and
xor
loopne
insl
lock
and
inc
mov
add
push
popa
jp
jno
inc
and
and
xor
loope
insl
icebp
in
and
inc
mov
add
push
bound
jb
pop
fdivrl
out
outsl
test
jb
mov
loope
fcomps
in
xchg
add
lods
jb
adc
jno
sub
sub
lahf
mov
notb
inc
lock
mov
adc
dec
and
rolb
pop
insl
xchg
jb
adc
leave
push
push
orb
mov
lahf
jns
roll
outsl
push
sbb
ret
sbb
xchg
cmpb
outsb
pop
and
lods
dec
mov
mov
cmp
std
rolb
cld
xor
aam
add
and
cmp
push
xchg
cld
popa
insb
iret
in
cmpsb
xchg
inc
adc
cmp
pop
sbb
or
popf
and
shrl
ss
sbb
jp
pop
mov
mov
lock
xor
sti
out
icebp
inc
fidivs
insb
push
jl
int3
ja
push
or
leave
icebp
inc
imul
ret
loop
icebp
je
enter
xor
add
test
inc
inc
jbe
push
lret
scas
mov
movl
dec
adc
pop
and
adc
popa
lods
shll
lret
or
pop
outsl
rolb
gs
sub
sbb
and
jb
mov
outsl
push
inc
xchg
inc
ljmp
mov
ss
sub
insl
adc
xchg
dec
mov
inc
pop
bound
inc
sub
xchg
lds
adc
enter
lods
sub
pop
mov
jp
and
inc
inc
data16
cld
push
jns
rol
ljmp
jmp
mov
imul
pop
popf
mov
in
cltd
sarb
js
xor
add
or
clc
cmp
jne
loop
add
sbb
mov
mov
jnp
push
sarb
and
sbbb
ret
sub
add
adc
shrb
sub
cltd
aas
dec
add
and
inc
ret
fsubl
push
fdivrs
dec
hlt
adc
repz
test
cmpsl
mov
mov
dec
lret
insl
test
arpl
dec
pop
ss
pop
imul
jmp
shlb
xchg
popf
and
test
test
ss
xchg
sub
mov
andl
cmp
imul
dec
mov
cmp
orl
and
fs
pop
xor
fmul
inc
pop
call
dec
outsl
mov
int3
mov
adc
lahf
xor
lret
mov
ljmp
adc
mov
andl
jp
lcall
push
jp
push
leave
mov
add
mov
push
mov
pop
insb
xchg
dec
inc
or
xor
push
pop
ror
cmp
xchg
in
push
adc
ret
cmp
dec
aaa
jl
int
inc
in
xor
jp
or
daa
xor
add
dec
dec
insl
mov
lahf
not
mov
pop
bound
test
imul
loop
ljmp
inc
fisttpl
sub
mov
out
add
and
lahf
push
sub
and
ss
aam
push
sbb
shrb
sbb
xor
or
decl
insl
cltd
lock
inc
cmp
repz
sbb
rcl
cmp
xchg
jg
lea
mov
xchg
popa
push
pop
ss
fs
cltd
add
sub
inc
enter
or
sarb
pop
lods
xchg
fisttpll
ret
mov
loopne
pop
mov
testl
xchg
popf
jp
pop
adc
mov
add
test
jg
insb
addr16
iret
shlb
push
pop
sub
add
jge
pop
mov
push
insb
int3
dec
cmp
jno
shrb
cmc
inc
mov
sarl
cmp
ret
push
popa
inc
mov
sbb
je
mov
rolb
test
or
and
aas
sahf
and
mov
outsb
lcall
jno
push
cmp
xchg
push
stc
inc
fdivrs
popf
cmp
xor
and
jo
rcll
rclb
and
mov
popa
dec
and
insl
jno
inc
lcall
rclb
popl
and
push
and
inc
and
iret
lret
gs
inc
push
mov
bound
and
popa
sub
sub
cmp
fs
inc
cmpb
ss
and
adc
sub
push
dec
lds
mov
aam
mov
pop
and
xor
arpl
xchg
pop
lods
dec
daa
mov
scas
push
imul
dec
xchg
lcall
call
inc
adc
inc
pushf
jg
lods
js
mov
push
add
ret
mov
mov
loop
test
jl
xchg
in
jae
dec
test
xchg
pop
gs
mov
ret
add
pop
mov
mov
fwait
xchg
jae
xor
dec
shll
add
dec
out
jle
xor
pusha
cwtl
data16
xchg
and
cmp
stos
cmpsb
and
data16
jno
jo
in
jne
sar
ja
inc
lods
pop
sbb
cmpsl
negl
mov
cmpsl
test
mov
cmp
jmp
cld
cmp
and
fdivrs
jl
lock
xor
fnsetpm(287
repnz
cs
jbe
fildl
ret
cld
sbb
adc
mov
sahf
sbb
sub
mov
push
andb
push
sbb
and
mov
popa
lods
std
lock
imul
pop
mov
pop
dec
lahf
cli
or
add
pop
dec
in
jb
jb
mov
or
push
sahf
mov
inc
pop
dec
and
pusha
or
push
test
inc
repnz
mov
mov
mov
cmpsb
scas
hlt
rcrb
and
hlt
or
inc
and
insl
sbb
stc
mov
scas
sub
ret
maxps
fs
subl
push
jmp
dec
ja
ret
jb
pop
iret
mov
jno
sub
jmp
mov
cmp
jmp
lods
or
cmp
stc
lds
test
and
ret
inc
clc
dec
cmp
cmpl
mov
cmp
fwait
push
fbld
pop
and
jg
sahf
pop
cld
push
or
sbb
mov
jae
in
lds
inc
xchg
dec
dec
mov
sarl
test
pop
inc
xor
sbb
movsl
insl
cwtl
add
leave
push
push
pop
hlt
out
int
movsl
mov
test
sub
ss
jmp
pop
inc
push
popa
stos
mov
mov
add
mov
adc
jns
pushf
cld
mov
jecxz
mov
ret
sub
add
aam
or
fisubrs
mov
popf
mov
jae
mov
mov
jb
scas
mov
lds
jg
adcl
fiadds
mov
ljmp
cmpsl
and
rorl
xchg
inc
andl
add
cmpb
jo
faddl
push
gs
lahf
add
xchg
clc
and
int
inc
jmp
and
ljmp
ret
fcomps
cmpsl
xchg
xchg
jno
inc
insl
sbb
imul
inc
fistps
add
jnp
push
loop
xchg
movsl
js
cwtl
test
insl
mov
inc
pop
inc
subb
icebp
mov
mov
aaa
jl
push
jns
pop
mov
movsl
mov
in
xchg
into
add
push
mov
dec
ja
ret
pushf
mov
sbb
daa
es
or
xor
pop
ffree
in
and
ficomps
adc
push
mov
mov
pushf
sub
push
shll
addr16
lret
inc
cmpsl
pop
cmpl
cs
xchg
fidivrs
cmp
jo
cmp
cld
mov
xor
push
push
adc
inc
mov
sub
addb
movsl
outsb
repz
test
xchg
ret
cli
sub
fwait
xor
xor
pop
or
lcall
jae
scas
das
aaa
mov
nop
outsb
jns
roll
adcb
leave
mov
insb
in
test
hlt
iret
dec
or
mov
adc
sbb
xor
xor
cmpsl
xor
pop
lea
test
adc
sub
or
out
int3
imul
and
inc
push
sbb
adc
dec
inc
aam
jl
dec
cmp
scas
in
lahf
jge
xchg
int
call
imul
imul
hlt
xor
xchg
add
fs
xor
cmp
sub
cld
sub
imul
cmc
dec
shlb
ret
add
test
or
out
xor
cmc
iret
sbb
test
and
or
test
ljmp
jno
rolb
flds
icebp
shlb
jo
arpl
cmpb
add
inc
fdivl
mov
push
push
nop
bound
fsubrl
mul
fadds
add
ss
mov
dec
arpl
mov
push
mov
push
arpl
pop
and
inc
iret
mov
and
stos
adc
fbstp
loopne
xor
sahf
icebp
sbb
fs
iret
xorb
add
insb
in
mov
loopne
inc
jae
aam
or
or
add
cmp
andb
stc
popa
inc
dec
inc
xor
mov
fdiv
imul
sub
and
dec
fwait
push
xor
inc
sub
mov
jbe
adc
in
mov
out
sbb
push
rcrl
xor
adc
xor
addr16
or
cmp
shr
jne
adc
and
loopne
cmp
dec
sbb
mov
mov
les
mov
mov
xor
dec
and
fcom
insb
inc
inc
mov
mov
in
and
ret
dec
jle
movsl
add
je
push
jae
popa
xlat
nop
adc
int
mov
sub
pop
mov
out
sbb
rcr
call
int3
inc
fsubs
cmp
jmp
mov
ds
fisubrs
xchg
call
sub
sub
sbb
int3
negl
add
or
cmc
ret
xchg
clc
rcll
test
sbb
inc
add
not
je
sub
push
jge
inc
fiadds
fmull
xorb
mov
add
mov
sar
xchg
jecxz
dec
inc
pop
sub
outsb
cld
ss
outsl
loopne
dec
int
imul
andb
jne
mov
bnd
mov
cmp
mov
dec
int3
leave
fwait
loop
xor
cmp
sub
lods
ficoms
rcll
cwtl
faddl
cwtl
or
lds
xorb
popa
cmp
orb
sub
addr16
sbb
inc
les
pop
xchg
mov
inc
sbb
leave
test
sahf
push
push
js
and
int3
sub
dec
pop
fisubrs
xchg
sub
sub
inc
pop
inc
aas
jnp
sbb
test
push
and
addl
jecxz
or
ret
cmp
hlt
adc
rcrb
pop
repz
mov
mov
loopne
cwtl
ficoml
loop
mov
movsl
in
sbb
xor
stos
mov
push
in
pop
inc
push
mov
test
pushf
sub
add
std
out
inc
inc
sub
mov
pop
shl
mov
shl
lret
and
lcall
mov
sub
mov
dec
cmc
rorb
sbb
test
and
nop
jmp
adc
inc
push
cltd
sbb
sub
and
push
dec
and
sbb
jl
mov
dec
adc
pop
pop
iret
mov
sbb
cmpsb
or
push
shrb
sub
cmpl
hlt
pop
pop
push
push
dec
mov
dec
jge
pop
jo
clc
xchg
inc
lahf
pop
jne
outsl
jo
or
loopne
add
mov
dec
or
mov
xchg
or
sbb
sub
jno
mov
add
leave
shrb
ja
push
pop
ret
and
aam
or
addl
mov
or
mov
cmpsb
in
cmp
jo
push
sub
adc
inc
pop
sbb
and
fadds
gs
pop
xor
scas
mov
mov
xchg
ds
push
pop
mov
test
push
xchg
ret
xor
add
je
vcmppd
scas
imul
sub
adc
mov
pusha
imul
mov
or
adc
dec
cmp
jmp
adc
call
adc
push
jo
xabort
sub
jb
mov
cltd
icebp
inc
sub
mov
adc
addl
les
ffree
mov
cwtl
dec
add
mov
call
int
scas
mov
xchg
cmp
add
fisubl
lahf
ret
addr16
gs
add
daa
cmp
cmp
pop
adc
xchg
adc
jb
cmc
or
sbb
clc
mov
pop
cmp
repnz
rorl
sub
sti
or
outsl
in
mov
xor
mov
dec
ror
inc
mov
cmp
mov
cwtl
inc
hlt
mov
scas
lea
sbb
inc
lods
andb
sbb
out
popf
data16
inc
or
inc
dec
stos
inc
sub
adc
cmp
test
or
sbb
mov
out
and
and
add
jecxz
fsubrl
jecxz
repz
and
pop
adc
jno
fstl
jns
push
xor
and
add
jbe
popa
push
push
mov
add
gs
in
andl
mov
loop
dec
push
inc
xchg
sub
bound
mov
add
dec
hlt
loope
pop
insb
loopw
xchg
movsb
cli
or
cmpsl
mov
and
jb
push
mov
cmpsl
sbbb
cmp
mov
inc
dec
cmp
mov
push
and
push
into
inc
pop
das
in
addr16
xor
adc
or
sub
jecxz
pop
inc
sub
cmp
movsl
sbb
xchg
jp
data16
mov
inc
pop
inc
push
jmp
sub
inc
ret
test
and
xor
jbe
popf
jno
sbb
subb
xchg
sbb
ljmp
es
push
sub
sbb
push
xor
inc
or
leave
insb
inc
outsl
or
in
imul
es
jno
mov
sbb
pop
dec
mov
jg
std
lret
inc
push
push
jmp
dec
shlb
test
add
in
sbb
push
dec
dec
mov
push
ret
jl
and
jg
push
mov
dec
aas
push
jp
mov
cld
mov
cmpsb
pop
out
loopnew
xchg
add
cmp
lcall
ss
fnstcw
push
in
and
js
inc
jbe
pop
and
and
dec
dec
mov
js
push
and
mov
inc
out
vcvttsd2si
add
les
out
push
push
stos
fnsave
push
push
inc
clc
in
popa
push
dec
pop
sbb
sar
repnz
mov
sbb
leave
rcll
inc
or
or
adc
mov
outsb
jno
jge
cmpsl
cmp
jno
add
call
lahf
cltd
clc
cld
mov
call
out
cld
cmp
lret
js
nop
xorb
mov
sti
idiv
inc
into
inc
jl
pop
inc
pop
adc
faddl
gs
pop
sub
push
gs
filds
adc
jo
mov
insl
dec
mov
mov
movsb
mov
cmp
hlt
xor
jno
sahf
stos
scas
add
inc
sub
and
adc
dec
cmpsl
xchg
push
cmp
in
or
lahf
lock
mov
cmpsb
push
or
jmp
fcompl
or
call
xchg
mov
mov
or
js
hlt
inc
iret
inc
cmp
imul
jmp
scas
add
les
mov
add
insb
cmc
sbb
cmc
mov
pop
lcall
and
cs
mov
xchg
jns
fcoml
push
int
ljmp
jns,pn
shl
data16
mov
imul
sti
outsl
inc
mov
sub
mov
add
into
icebp
pop
jno
or
in
push
jns
mov
and
cltd
sub
xchg
push
pop
mov
lcall
cltd
or
mov
jge
push
pop
xchg
scas
inc
mov
cld
mov
xor
add
push
xchg
pop
not
fisttps
sbb
iret
enter
sti
sub
das
jmp
loope
shrl
data16
ljmp
insl
js
xchg
in
dec
mov
pop
cmp
test
stc
xor
shll
add
pushl
and
add
nop
or
int3
daa
addr16
sub
or
or
rcll
into
sub
popa
jnp
js
jge
sbb
enter
and
inc
and
cld
inc
fistps
add
xor
dec
push
xor
aad
aas
fwait
fwait
sub
hlt
xchg
cltd
cmp
rorb
js
repnz
inc
pop
arpl
adc
inc
xchg
ret
stos
lret
add
mov
lea
iret
sbb
sub
xor
scas
fildl
add
outsb
lock
add
cltd
pop
sub
data16
iret
fs
movsb
pop
push
jo
lret
out
daa
inc
imul
cmp
sub
mov
sub
out
fcmovnb
add
push
aaa
icebp
out
test
push
stos
sub
mov
cmp
lcall
test
pop
fldt
or
test
inc
add
and
and
adc
fnstsw
js
adc
xchg
je
mov
push
pop
add
icebp
inc
js
ret
int
iret
mov
pop
cltd
push
fsubp
xchg
push
cmpsl
cmp
jl
mov
pop
imul
loopne
cmp
mov
xor
repz
xor
scas
xorl
punpckhbw
js
inc
arpl
xchg
lret
call
subb
ret
jnp
cmp
dec
sub
xchg
lret
pop
outsb
xor
push
mov
push
pop
or
jae
sub
xchg
mov
xchg
cwtl
sub
mov
sub
imul
imul
add
and
outsl
aaa
outsb
nop
add
roll
imul
jb
jae
enter
push
sbb
out
imul
pop
xchg
fcomp
pop
inc
cmp
les
xchg
xor
test
pop
push
repnz
jno
sub
ret
popa
add
sub
enter
adc
or
hlt
iret
adc
push
xor
and
in
fdivrs
push
rcrl
frndint
stos
mov
das
push
inc
cmc
and
jbe
sahf
sub
hlt
cltd
bound
mov
xchg
inc
sub
test
xchg
dec
cld
mov
cs
repz
ret
lret
xlat
js
mov
xacquire
xchg
inc
sub
sbb
cs
fldt
and
mov
and
or
clc
hlt
sbb
inc
jnp,pt
cmp
leave
out
cmpsl
mov
ret
ds
icebp
shrb
movsb
cmp
test
inc
hlt
into
inc
or
popf
mov
dec
cmpb
push
test
out
popa
inc
or
adc
outsb
xchg
fcomp
inc
mov
jbe
je
mov
rcrb
pop
cmp
add
and
outsl
in
bound
mov
fsubp
cltd
and
jg
pop
cmpsb
and
insb
sub
dec
pop
out
in
lock
mov
adc
pushf
je
ret
subl
aas
lcall
and
mov
sub
iret
and
dec
jo
ret
repnz
pop
sahf
xchg
outsb
fisubs
cltd
push
adc
in
ds
push
mov
daa
ljmp
das
push
shlb
int
add
and
mov
out
ja
cmp
cltd
int
add
adc
cmp
mov
and
sub
gs
xor
test
mov
sub
mov
stos
push
loopne
leave
popa
jg
adc
fs
pop
push
ret
add
subl
dec
mull
fwait
cmp
mov
mov
fnsetpm(287
jp
cmp
push
roll
mov
and
jl
fwait
stos
pop
xor
push
popa
and
outsb
push
inc
add
xor
pop
jle
push
inc
int
or
mov
stc
pop
and
ljmp
nop
xor
xchg
clc
add
test
adc
andl
push
pop
push
dec
xlat
pop
roll
outsl
inc
cwtl
dec
push
adc
adc
inc
out
inc
adc
cmp
movb
arpl
addb
std
ljmp
adcl
push
pushf
jae
test
jbe
pop
sub
mov
or
cmpb
lret
inc
mov
xor
mov
jle
adc
fisubrl
dec
stos
pop
sub
sub
sbb
out
jge
cmp
pop
fucomi
daa
cmpl
dec
xor
xor
mov
dec
push
lea
stos
scas
inc
pop
cli
mov
dec
jo
cli
pop
fcomip
cli
insl
jo
lods
mov
xchg
aas
mov
popf
jbe
test
push
mov
imul
xchg
xchg
nop
pop
jo
popf
xchg
dec
je
loopne
pop
inc
mov
xor
inc
stos
sbb
inc
lock
xor
dec
shr
mov
scas
ljmp
dec
lods
in
pop
ds
xchg
enter
add
cmpsl
lods
dec
outsb
sahf
out
inc
jp
sub
sub
jns
xchg
enter
std
test
jg
mov
movsb
or
inc
inc
mov
and
dec
mov
and
test
sbb
sbb
sbb
adc
inc
dec
lds
add
push
inc
mov
inc
pop
insb
add
cmp
push
adc
sub
arpl
push
lret
sub
outsb
add
mov
ret
aas
jbe
mov
test
test
push
dec
xor
xorl
xor
sbb
stc
shll
hlt
aam
lahf
ljmp
pop
shrb
add
fs
cmpsl
cmp
movsb
push
sbb
mov
orb
mov
sahf
sbb
js
jg
mov
mov
jno
cs
cmp
jl
or
loope
jo
loopne
dec
lret
popf
push
aas
pop
int
mov
and
jae
clc
lcall
aam
jae
or
ret
xor
jp
in
sub
out
and
imul
scas
add
push
movsl
adc
js
mov
test
push
test
add
jo
mov
shr
pop
insl
inc
xchg
dec
or
inc
dec
add
pushf
popa
jo
popa
ret
leave
movsb
pop
je
repnz
dec
ret
xchg
or
mov
movsb
aam
pop
xchg
pushf
stos
add
mov
adc
idivb
inc
xchg
aam
test
jl
or
xor
mov
jns
adc
sti
fdivs
push
add
lcall
xchg
fisubl
popa
iret
pop
sub
lds
movsb
jnp
dec
mov
mov
pop
push
or
cli
jge
mov
inc
orl
inc
push
mov
mov
outsl
jno
ret
adc
dec
mov
jo
in
mov
fadd
mov
sbb
inc
mov
add
test
enter
mov
push
aam
mov
cmp
addr16
nop
sbb
dec
ret
adc
add
loope
jne
push
test
lods
mov
rolb
jecxz
outsl
mov
dec
jne
xor
iret
insb
xor
popf
xchg
pop
mov
bound
and
icebp
cmp
dec
ror
dec
rcrl
rcrl
and
mov
pop
addr16
xchg
and
mov
mov
xor
jp
jp
icebp
mov
dec
mov
test
mov
inc
mov
test
popa
mov
aas
hlt
sub
push
shll
lock
lods
sbb
rorb
mov
dec
push
mov
bound
and
inc
inc
movsb
xchg
ret
loopne
push
and
pop
xor
cmc
cmp
cmp
cld
roll
xchg
hlt
inc
cs
mov
jne
hlt
mov
or
xchg
and
xor
and
add
inc
add
repz
pop
xor
sub
stos
add
ficomps
mov
mov
jno
mov
loopne
outsl
sub
loopne
and
test
cs
mov
outsl
adc
or
dec
mov
inc
and
enter
push
jle
sbb
pop
data16
iret
fwait
cmp
outsl
test
push
mov
and
mov
pop
jbe
out
jle
outsb
cmp
push
fs
call
icebp
or
inc
adc
mov
inc
imul
iret
movsl
mov
pop
sub
clc
or
fldcw
sahf
push
andl
cmpsb
or
push
mov
testl
xor
fsubl
rolb
push
js
jnp
cmc
cwtl
shlb
inc
in
xchg
shrb
inc
mov
gs
mov
addr16
dec
pop
jg
xchg
jns
jbe
jo
lods
mov
mov
mov
es
fldl2e
mov
push
and
das
popa
dec
in
cmp
bnd
mov
test
cmp
or
inc
leave
mov
cs
movsl
pop
jb
lret
lea
stos
repnz
fsubrs
add
add
das
adc
das
sahf
pop
popf
je
idivb
xchg
inc
repz
adc
arpl
push
dec
and
adc
or
stc
jnp
ret
lea
push
leave
pop
mov
adc
sub
shl
sub
js
mov
ret
inc
mov
and
xor
popa
lock
ljmp
imul
dec
push
shrb
push
imull
xor
adc
call
enter
mov
mov
push
add
add
or
lea
jns
adc
adc
push
add
scas
bswap
rcrl
lock
jns
add
xchg
shrl
sbb
jg
inc
loopne
xor
add
push
add
and
dec
lds
popf
add
jnp
dec
addr16
adc
sub
xchg
arpl
gs
xchg
jo
dec
mov
insb
out
jnp
cwtl
test
jnp
dec
add
fwait
shlb
loope
inc
jo
rcll
ret
adc
push
fwait
test
movsb
sbb
test
leave
xor
daa
push
das
fiadds
xchg
push
data16
or
pop
sahf
sub
iret
cmc
dec
js
fnstenv
cwtl
in
testb
mov
and
andl
cltd
stc
jl
and
out
and
jo
jecxz
les
movl
cmc
dec
add
sub
int3
and
ret
xor
dec
mov
xchg
in
loop
mov
sub
iret
dec
mov
fs
or
inc
mov
int3
xor
mov
mov
je
jno
gs
inc
fisubs
fwait
jle
testb
fs
pusha
or
sub
fistl
xchg
mov
sub
loopne
orb
bound
dec
push
add
xor
mov
daa
lock
orl
int3
cmpsl
dec
cmp
inc
xor
push
xor
dec
and
inc
and
jns
outsl
ljmp
sub
pop
jg
stc
jnp
ds
daa
pop
push
in
dec
inc
xor
shlb
xlat
xlat
push
mov
sarl
and
ds
add
mov
je
imul
test
jle
call
ss
lret
sub
and
push
add
mov
jno
and
nop
imul
shl
sub
and
pop
out
mov
cmp
cmp
pop
jae
leave
adc
gs
outsb
and
lods
nop
frstor
mov
mov
aaa
mov
popa
adc
gs
fcomip
xchg
and
dec
mov
leave
dec
loope
out
push
ja
sahf
mov
mov
pop
test
mov
cmp
sbb
je
iret
adc
xor
add
mov
mov
push
mov
repz
insb
loop
outsl
lods
popa
lods
inc
mov
inc
insb
aaa
ljmp
inc
cmpb
inc
push
repz
shrl
fsts
xchg
dec
movb
inc
cmp
mov
cmpsl
popa
int
loope
addb
popf
dec
dec
aaa
int3
sbb
and
cmp
mov
leave
test
aaa
pop
add
aas
push
rolb
xor
sub
jns
ret
mov
je
movb
pushf
sub
inc
or
push
icebp
jle
lret
pop
jno
imul
and
cmc
leave
inc
adc
sbb
std
jne
leave
inc
std
sub
sbb
test
punpckhwd
or
pop
fildl
push
aaa
imul
mov
push
mov
jno
jp
and
out
pop
mov
sbb
clc
jno
ljmp
jg
and
jns
stc
stos
pushf
mov
jecxz
sub
sub
shl
addr16
mov
xor
mov
inc
lea
ss
cmpsb
dec
fsubl
add
stos
sub
aam
fcomps
pop
pop
pushf
mull
inc
jo
fimull
mov
stos
les
adc
aam
xor
stos
lods
or
add
mov
lock
sbb
add
inc
ret
jno
loop
and
test
gs
repz
cmpsl
out
lds
and
xchg
dec
iret
add
shlb
cmpsb
out
and
push
pop
inc
mov
repnz
cmp
leave
mov
or
adcb
rcrl
mov
add
out
dec
cmp
and
adc
data16
xor
mov
mov
hlt
sbb
sbb
dec
xchg
inc
loope
cmpsb
movsb
rolb
mov
icebp
pop
int3
push
sbb
jecxz
cmp
xchg
adc
xchg
push
mov
push
jo
in
popf
adc
fidivrl
pop
into
mov
loope
iret
test
and
ljmp
jns
mov
inc
insl
into
xchg
fwait
into
mov
and
sub
arpl
push
adc
pop
andl
sub
enter
add
je
adc
inc
ffreep
hlt
fxch
inc
mov
hlt
test
das
xchg
push
dec
xrelease
inc
xchg
inc
loope
cmp
out
pop
dec
outsl
mov
mov
xor
dec
inc
imul
es
iret
pop
pop
mov
pop
mov
push
lahf
stos
and
jp
xchg
push
aam
nop
add
sub
dec
mov
mov
mov
jno
jmp
mov
or
inc
mov
nop
mov
mov
add
xor
sahf
and
std
sbb
inc
sub
jle
cli
xchg
movsb
dec
inc
mov
jo
dec
push
push
cmp
xlat
or
adcb
arpl
mov
ficoms
cwtl
push
pop
repz
aad
mov
push
imul
pop
pandn
imul
inc
ret
ja
mov
jl
jae
and
push
push
dec
mov
movsl
gs
cmpsl
gs
cmp
mov
ja
std
mov
popf
sarl
out
and
mov
and
mov
sub
jne
xchg
ret
test
inc
xor
mulb
loop
inc
push
fldcw
fisubrs
cwtl
gs
xor
out
andb
xlat
lock
test
loopne
sub
das
fisttps
hlt
mov
sahf
pop
push
inc
int
shl
adc
insb
leave
and
sbb
mov
lock
inc
data16
jnp
jmp
pop
and
pop
dec
pop
pop
push
into
mov
inc
add
test
popa
mov
and
push
sub
mov
mov
lret
adc
nop
sbb
xchg
sub
stos
in
xchg
lahf
push
sbb
mov
mov
lret
lea
iret
jl
cmpsl
sub
xchg
pop
sub
cmp
cmpsb
dec
mov
nop
hlt
cmp
leave
in
cmpl
push
js
xor
popf
popa
mov
sub
jbe
clc
int3
jmp
inc
cmp
mov
mov
inc
aam
or
dec
stos
sub
push
push
daa
cmc
inc
in
push
jg
mov
push
imul
push
std
mov
ret
mov
mov
mov
cmp
clc
and
mov
add
jge
popa
decl
xlat
hlt
push
popf
inc
xchg
rol
fsqrt
jp
add
mov
lods
xor
inc
cli
inc
and
das
or
movsl
push
and
lcall
out
sbb
das
into
jmp
cmp
loop
popf
loope
dec
add
dec
mov
jl
fxch
addr16
add
jg
fs
cld
insb
fwait
or
imul
ret
leave
mov
dec
daa
int
push
inc
bound
jno
mov
call
jle
stos
outsb
ret
ret
xchg
mov
add
mov
inc
and
fsts
fadds
mov
faddl
mov
xchg
rcrb
xchg
xor
lcall
insl
jmp
sti
movd
sarl
xchg
aam
sbb
and
in
idivl
xchg
inc
div
js
sbb
loope
pop
sub
adc
or
sub
inc
mov
inc
dec
xchg
test
xchg
sub
mov
add
stos
test
xor
ds
in
sbb
lret
or
ljmp
pusha
pop
dec
xchg
bound
inc
xchg
iret
pop
insb
lcall
mov
addr16
inc
xchg
or
and
mov
lahf
or
adc
insl
xor
mov
dec
shl
mov
push
add
pop
mov
call
aas
fnsave
jecxz
mov
js
cmp
ret
cld
mov
cltd
cld
inc
hlt
sbbl
push
outsb
nop
pop
enter
xorb
gs
data16
add
sub
xor
pop
xchg
xchg
loop
xor
inc
inc
call
repz
pop
cmpsb
pop
xor
and
push
add
iret
test
dec
add
sub
cmp
cmpsb
push
inc
mov
inc
fmuls
lahf
push
xchg
push
and
xchg
dec
sub
repz
inc
and
test
outsl
in
dec
xchg
push
push
hlt
cwtl
loop
dec
or
pop
mov
dec
mov
cmp
clc
xchg
xor
xchg
add
rcl
sub
adc
mov
inc
mov
sbb
lahf
adc
rolb
in
cs
les
push
add
push
ret
push
dec
shl
mov
sbb
jg
jne
and
out
xor
gs
push
mov
movsb
dec
xlat
outsb
mov
outsb
nop
ss
inc
stc
adc
dec
fucomi
adc
xorb
xchg
inc
sub
mov
mov
imul
push
lock
repz
nop
iret
add
xchg
cmp
xchg
scas
cmp
mov
or
inc
movsb
mov
mov
dec
aam
sbb
insl
dec
sub
xchg
cmp
jnp
stos
and
adc
dec
jb
jecxz
hlt
or
mov
leave
add
dec
sbb
sub
xchg
adc
clc
imul
push
xor
cmc
pop
mov
popa
outsb
fisubl
enter
mov
jp
iret
cli
xchg
mov
cmp
popf
mov
mov
mov
fs
ret
push
stc
dec
roll
dec
mov
add
xor
sbb
push
orb
icebp
mov
loop
cmp
xchg
aaa
jb
pop
fidivs
pop
cmp
imul
push
pop
popf
jle
ret
loopne
mov
mov
aas
mov
cmc
push
test
mov
push
sbb
cmpsl
jecxz
sbb
pop
leave
je
in
iret
popa
mov
sub
push
and
dec
and
sub
xchg
movsl
add
lods
popf
and
adc
sub
addr16
push
inc
and
push
mov
xchg
iret
hlt
mov
psubq
idivl
push
shrl
mov
int
in
mov
rolb
sbb
push
mov
out
add
or
outsb
dec
xchg
gs
outsl
or
xor
lret
jo
ja
pop
mov
shll
xor
rcrb
xor
push
jb
cmpsb
notl
mov
sub
lds
fwait
inc
iret
and
cmc
and
sbb
mov
xor
shrb
dec
mov
ret
cmp
pop
insb
and
inc
mov
add
push
jo
adc
pop
jne
imul
je
pop
fimull
fcmove
pop
jge
push
stc
lock
enter
fucomi
out
mov
jne
push
dec
lock
lock
out
pop
cmp
sahf
roll
and
cmp
xchg
xor
ret
push
sbb
aad
sarl
loop
fidivl
fstpt
and
test
push
dec
cli
dec
movsl
cltd
clc
jnp
push
xor
movsl
cmp
cmpsb
mov
inc
mov
lret
cmc
push
mov
shrb
inc
mov
in
sarb
je
in
mov
je
pushf
inc
push
in
es
sub
insl
jne
add
dec
ljmp
inc
inc
mov
je
mov
jg
inc
aam
clc
testl
ret
rcl
ja
inc
mov
pop
sbb
xlat
scas
sbb
sarb
inc
or
fistps
in
push
fs
push
mov
adc
in
shrb
sbb
test
and
jb
stos
lret
fdivl
je
dec
rorl
adc
negb
mov
jb
int3
inc
xor
loopne
js
and
andb
inc
ret
and
xor
and
pop
xor
adc
inc
in
cmpsl
sub
adc
and
int3
stos
sub
loopne
incb
fcoml
xchg
dec
mov
ficompl
push
sahf
imulb
cmp
out
fistpll
mov
jo
scas
es
js
dec
imul
xchg
adc
sub
ljmp
lods
out
mov
inc
shlb
stc
sbb
stos
fildll
mov
sbb
movsb
jne
mov
pop
and
or
mov
lock
dec
lret
adc
sbb
loope
ret
out
xchg
xchg
adc
push
sbb
mov
mov
stos
and
or
test
mov
hlt
xor
pop
int
pop
cmp
xchg
cmp
daa
add
mov
aad
mov
xor
pop
fmuls
inc
push
mov
jle
inc
mov
hlt
cmp
sahf
push
mov
loopne
xchg
bound
mov
pop
pop
imul
stos
int
push
and
xchg
pushf
outsb
sub
lods
xor
jmp
pop
ret
add
bnd
addl
jns
push
ja
mov
push
sarb
xor
inc
mov
jge
sbb
cmp
inc
orl
in
dec
cmp
ret
hlt
loopne
loop
and
push
fsubs
cmp
ret
cmp
or
or
aam
xlat
mov
cmp
inc
mov
and
addr16
imul
fildl
into
inc
fbstp
das
xchg
inc
and
sub
add
ret
cld
movsb
xor
jg
mov
inc
adc
dec
cmp
mov
icebp
mov
mov
dec
mov
aas
in
xlat
bound
in
pop
in
hlt
mov
adc
pop
nop
movsb
xchg
jo
test
mov
imul
lcall
out
inc
movsb
jge
bound
xchg
clc
cwtl
dec
jo
mov
call
aaa
adc
cmp
cmp
lret
inc
sti
in
mov
bound
cs
add
ret
inc
cwtl
jmp
and
sub
dec
out
jmp
sub
push
pop
xchg
out
jl
jge
adc
pop
dec
mov
jae
jmp
adc
xchg
jnp
sbb
jmp
xchg
cmp
arpl
or
loopne
and
sbb
inc
dec
insb
inc
jl
jge
lahf
push
push
movsl
inc
bound
movsb
push
int3
test
out
fwait
sahf
ljmp
mov
mov
sahf
les
inc
sbb
pop
lock
aas
ficompl
xor
loopne
mov
rclb
jae
fs
mov
lods
cld
decb
pop
lret
push
sbb
in
mov
movsb
xor
ret
addr16
imul
out
jno
pop
inc
fidivl
je
sub
gs
movsb
mov
pop
lock
cmpsl
ds
faddl
addr16
jle
and
lods
cmpsl
in
sbbl
out
dec
add
dec
mov
lods
pop
add
push
sbb
inc
sbb
movsb
mov
ret
insl
jl
stos
out
jl
or
lods
cld
mov
mov
and
or
xchg
or
movl
loope
pop
leave
inc
lret
dec
xchg
gs
ret
in
cmp
dec
mov
jbe
loopne
pop
movl
cmp
push
iret
xchg
insl
xlat
push
and
push
and
mov
int
iret
mov
rcr
pop
sub
hlt
inc
rcl
pop
mov
inc
jp
or
je
mov
iret
cld
loopne
and
movsl
fidivrl
sti
add
repnz
jbe
sub
dec
add
pushf
xchg
ret
push
mov
mov
push
or
xor
out
call
sbb
imul
imul
mov
push
bound
push
ss
testb
or
fs
add
es
mov
stos
fwait
push
nop
inc
xchg
sbb
cmp
aad
ret
mov
imul
aam
or
mov
clc
addr16
lock
push
sub
ja
or
sbb
insb
dec
and
ja
call
cmp
add
pop
int3
andb
inc
mov
mov
push
and
mov
fisubl
or
test
test
sbb
jo
mov
cli
add
andb
xchg
pop
add
inc
push
in
xor
dec
test
loopne
push
jne
fnsave
mov
daa
fimull
inc
insb
dec
inc
jmp
out
in
mov
dec
jge
push
jecxz
hlt
add
pop
cltd
cmpb
subl
inc
cmp
insb
outsl
xor
lock
jecxz
fisubrl
and
fldenv
push
mov
pop
cmpsl
jbe
sbb
imul
mov
adc
pop
shrb
xchg
mov
sbb
mov
shlb
xor
xchg
pushf
cmp
lods
insb
jp
pop
adc
mov
loope
and
inc
mov
dec
rolb
mov
cltd
fldcw
repz
add
push
jl
out
push
jns
dec
add
mov
aaa
loope
daa
pop
insb
imul
idivb
push
cmp
loop
cmpsl
outsb
xchg
sub
adc
pop
and
fisttps
xchg
bound
enter
jg
popa
cmp
stc
call
mov
xchg
lock
ret
mov
lock
addr16
push
in
mov
pop
cmp
lock
hlt
jb
sbbl
jl
push
stos
sub
cs
test
xor
in
sbb
fwait
sub
bound
and
in
lcall
inc
fnstsw
sub
hlt
sbb
pop
mov
mov
mov
lret
dec
cltd
stos
adc
aam
and
int3
adcl
ljmpw
sub
mov
jl
das
sub
pop
test
jecxz
or
add
insb
frstor
and
loop
cs
adc
es
fmuls
in
jno
sub
push
cmpsl
sbb
fwait
adc
popf
loopne
add
insb
push
or
mov
adc
loopne
in
call
and
sbb
sarb
sbb
and
sub
dec
in
loopne
in
sub
insb
addr16
shlb
pop
sub
adc
repz
add
mov
shl
scas
and
dec
and
sbb
js
mov
xchg
andl
pop
mov
mov
or
adc
ja
popf
mov
addr16
pop
bound
negl
dec
mov
mov
mov
sub
aam
shrb
and
scas
int3
sbb
cmc
and
mov
std
out
fwait
push
dec
mov
sbb
jb
mov
loope
imul
pop
mov
jno
inc
jb
jge
xor
add
sub
add
sub
or
inc
inc
icebp
xor
arpl
add
repz
lock
lock
push
dec
shlb
and
addb
push
sbb
cmpl
cmp
xchg
pop
push
adc
aam
and
mov
andl
mov
xor
sbb
pushf
mov
mov
mov
inc
stos
xor
rorl
mov
sarl
loope
sub
addb
adc
movsl
out
jmp
pop
cmp
push
and
mov
scas
inc
outsl
movl
add
push
mov
sahf
call
sahf
sub
xorl
mov
leave
cmp
inc
shlb
cmp
jne
xchg
mov
loop
test
and
in
and
jno
jae
adc
mov
enter
pop
ret
sbbl
push
call
iret
mov
adcb
mov
jge
and
sbb
les
xor
in
jmp
and
push
sub
in
cmc
addr16
add
ret
push
dec
jb
repz
mov
call
or
add
shr
das
cmp
dec
add
inc
push
push
lods
outsl
dec
cmp
pop
movsb
dec
outsb
fwait
push
fidivrl
inc
sub
xchg
jmp
jbe
add
aad
mov
or
inc
adc
rorl
pop
lret
jo
inc
or
mov
hlt
mov
jo
sub
cmp
nop
mov
pop
test
mov
jne
mov
mov
fcomps
sbb
jno
cmp
dec
std
push
loop
ret
repnz
lods
mov
idivb
xor
xor
jp
sub
mov
jecxz
inc
mov
sub
mov
out
loopne
xor
jmp
dec
push
ds
sub
mov
pop
pop
cs
pop
popf
dec
outsb
xchg
repz
repz
mov
add
mov
jb
add
adc
mov
leave
and
js
xor
data16
outsl
test
push
mov
and
jl
gs
cmc
in
ret
sbb
ds
in
mov
je
inc
rcll
cmp
nop
push
iret
and
out
bound
inc
mov
jmp
stc
mov
push
test
xor
shrb
roll
aam
popa
mov
outsb
rolb
dec
fs
add
xor
arpl
sub
pop
jnp
jnp
dec
cmpsb
fldl
enter
test
xor
jne
inc
mov
sub
int
sti
movl
hlt
insb
sub
adc
imul
imul
push
icebp
repz
xor
mov
xchg
mov
push
add
shrl
add
ret
cltd
add
xor
pop
movsb
cli
mov
xorb
sub
add
and
stos
or
dec
adc
je
mov
gs
jl
cwtl
lahf
pop
push
incb
test
roll
inc
push
imul
arpl
push
mov
and
iret
mov
shr
jecxz
pop
gs
xor
push
iret
call
test
and
and
mov
mov
loope
mov
jmp
or
cmp
cmp
aad
ficomps
mov
sahf
ret
xchg
dec
or
addr16
pop
out
jge
in
jmp
mov
aam
adcb
in
jl
push
sbb
and
call
xor
jl
adc
cmp
dec
seta
ror
and
das
dec
or
repz
jge
cli
or
lret
loopne
inc
in
lock
call
add
in
imul
adc
fisubrs
xchg
in
xchg
mov
in
test
and
icebp
push
insl
lock
ret
push
popa
jmp
inc
jno
xor
fwait
jnp
pushf
sub
or
fisttpl
loop
mov
sbb
dec
inc
pop
out
jb
add
jle
insb
cltd
jo
adc
push
stc
push
rol
jg
lret
pop
cmpsb
rcrl
add
and
xchg
and
mov
inc
push
lods
clc
mov
and
sbb
pop
mov
mov
mov
lods
mov
fmull
mov
xor
addr16
mov
dec
inc
cld
lods
inc
or
movsb
pop
arpl
jns
sbb
das
jae
xor
jecxz
loopne
std
imul
mov
pop
mov
into
add
dec
sbb
cmp
inc
add
fwait
mov
iret
mov
inc
jg
pop
mov
cwtl
adc
sub
iret
sub
roll
add
push
fsubs
mov
jb
sub
inc
stc
xor
int
push
mov
sub
into
cmp
mov
jge
in
xor
push
jp
xchg
mov
cmp
jne
repnz
xor
popf
shrb
dec
insl
pop
loop
lods
cmp
ret
cmp
mov
les
fwait
add
add
ljmp
int3
int3
push
fs
pushf
dec
cmp
inc
inc
inc
xor
and
rclb
xorb
mov
gs
adc
add
movsb
push
push
bound
fs
out
jge
mov
out
js
sbbb
ja
mov
lds
adc
icebp
add
out
dec
xchg
push
inc
xchg
and
adc
aam
sub
cmpsb
sub
addr16
mov
or
int3
add
push
lods
cmp
cmp
and
popf
out
mov
nop
add
mul
inc
cmc
jne
dec
loop
bound
and
adc
inc
jge
test
push
les
inc
shlb
or
in
mov
adc
outsb
add
int3
pop
push
insl
jo
add
cmp
mov
lods
inc
andb
inc
mov
outsl
lret
pop
nop
fucomi
jb
mov
xchg
push
sti
aam
jp
adc
leave
addr16
push
mov
ret
sub
xor
out
jbe
out
jno
int3
loop
jnp
out
test
add
sbb
push
mov
lret
ljmp
imul
leave
add
loop
clc
sbb
lock
loopne
repz
mov
sarl
lods
ds
cmp
test
pop
test
and
fisttps
imul
mov
xchg
mov
xor
mov
push
mov
sbb
lock
inc
adcb
pop
xchg
mov
xor
mov
mov
rcrb
pop
popf
js
sub
sbb
or
or
inc
xchg
mov
mov
fs
dec
mov
mov
push
out
push
and
cmpsl
xor
or
aaa
jno
inc
test
cmp
int3
sbb
pushf
xchg
insb
js
icebp
rorb
int3
subl
xchg
sub
add
fwait
dec
sbb
pop
sahf
or
sbb
ss
add
mov
hlt
jae
test
pop
mov
push
and
sti
ds
mov
xor
stos
mov
call
push
sbb
imul
or
or
xor
or
dec
ja
pop
or
scas
or
movsb
sbb
fstpl
scas
clc
fstps
xchg
dec
in
adc
mov
lahf
push
adc
sbb
xchg
clc
insb
std
enter
repnz
lods
icebp
enter
or
and
inc
inc
and
jns
loopne
rol
mov
cmpsb
in
pusha
inc
jbe
xchg
int3
popf
outsl
mov
cltd
add
jl
pusha
sbb
push
inc
cmp
xchg
dec
and
mov
and
filds
jno
mov
clc
cld
loopne
enter
sub
aad
mov
pop
cmp
inc
xor
push
jo
and
push
dec
fs
outsb
xchg
jecxz
and
adc
out
roll
ficoml
lock
jno
inc
hlt
bound
cmp
fs
pop
nop
lock
dec
jo
inc
outsb
jecxz
pop
subl
mov
jbe
add
iret
jl
cmp
shlb
cmp
and
lods
and
inc
xor
add
and
dec
movb
lahf
out
inc
xchg
xchg
sbb
scas
dec
inc
test
sbb
cmpsl
cmp
push
push
and
push
outsl
jle
fcomps
insb
inc
and
push
imul
inc
pop
inc
jo
xchg
inc
ret
add
daa
movsb
call
cmp
addr16
insb
clc
hlt
mov
jb
and
std
pop
push
je
int3
jp
imul
fnstsw
mov
fdivr
fcoml
sarb
mov
add
cli
movsl
iret
je
pop
ret
pop
xchg
and
and
lret
loope
mov
imul
lock
cwtl
sarb
fwait
sub
add
js
jns
push
mov
mov
or
leave
insb
cmp
stos
out
leave
mov
and
sti
add
sbb
cmp
cwtl
imul
inc
das
ljmp
jno
lret
imulb
xor
popa
push
je
sub
iret
cmp
nop
fsub
outsl
daa
adc
push
push
xchg
iret
js
push
cltd
fs
mov
xchg
sub
sbbb
fmul
add
mov
push
xor
fidivrl
and
fmul
inc
inc
popf
ret
filds
xchg
adc
and
xor
fcmovnu
lods
or
xchg
repz
rcl
in
pop
jo
call
call
rorl
inc
jns
jo
mov
es
mov
adc
jns
in
loopne
lock
shlb
pop
popa
dec
inc
mov
xor
test
mov
mov
notl
addr16
adc
cmp
jae
js
clc
push
es
pop
mov
subb
and
xor
or
xor
push
shll
popa
aam
and
push
mov
cmpsl
test
push
repnz
pop
out
jne
pop
movb
mov
sbb
xchg
gs
pop
push
cmp
iret
gs
mov
test
inc
or
dec
and
cwtl
cmpsb
hlt
cmp
sub
dec
dec
mov
iret
adc
daa
xlat
xor
rcrl
lock
mov
pop
out
cmp
je
into
mov
inc
or
aad
cmp
sub
dec
xchg
fs
sbb
cmpsb
jno
xor
je
mov
shr
push
movsb
push
bound
fstl
jb
lahf
cmp
push
jle
inc
mov
inc
shl
adc
adc
dec
cltd
jns
add
mov
pusha
fs
inc
pop
and
xor
pop
jb
sbb
fstpl
cli
xchg
test
sar
sub
jno
mov
divb
mov
mov
jne
push
xor
fs
imul
gs
icebp
mov
pop
rol
jae
add
inc
mov
mov
jl
jmp
daa
idivb
in
adc
fs
and
repz
insl
jp
les
jp
mov
add
pop
fidivrs
adc
mov
sub
xchg
adc
enter
dec
add
mov
dec
push
push
movsl
inc
push
nop
lock
sub
cmp
mov
pop
jne
jo
int3
and
add
das
ljmp
inc
ret
add
insl
mov
popf
popa
ret
sbb
iretw
mov
or
ds
pop
mov
repz
cmp
je
ret
jecxz
cmp
enter
mov
jl
or
int3
aaa
hlt
xchg
es
ret
mov
lea
repz
push
pop
rorb
bound
shrb
icebp
and
pop
addb
mov
mov
push
loopne
jnp
jl
movsb
jb
add
int3
xor
push
ljmp
sub
xor
arpl
and
mov
mov
jp
std
sbb
and
mov
inc
nop
xchg
daa
jl
dec
leave
icebp
push
hlt
pushf
fistpl
pusha
dec
xor
adc
dec
sbb
xchg
inc
inc
loope,pt
jo
hlt
in
jne
into
rcl
adc
dec
xlat
call
jl
xor
subl
mov
lret
cmp
cmp
cmp
hlt
push
add
sub
lcall
adc
iret
dec
mov
or
and
pop
rol
mov
xor
cmp
xchg
push
test
xchg
loopne
sub
xor
dec
lahf
je
dec
vcmpsd
testl
dec
xorl
dec
add
icebp
adc
cmp
cwtl
sbb
lea
orb
pop
es
leave
cmpb
jnp
in
push
and
sbb
xor
hlt
jb
pop
idivb
push
adc
ret
iret
adc
inc
popa
cmp
outsb
pop
inc
fldenv
push
insl
mov
repz
inc
shr
out
mov
fdivr
imul
aaa
pop
fstpl
jge
sbb
sbb
mov
push
stos
mov
add
sub
xor
xchg
ja
push
adc
fwait
bnd
out
outsl
fsubrp
bound
fldt
pop
inc
and
cmpsb
hlt
ret
test
xor
jae
je
daa
out
lock
add
les
push
sub
in
dec
js
call
push
call
sub
lds
mov
test
ds
iret
adc
outsl
push
ds
inc
cltd
mov
sub
dec
cltd
ficoms
adcb
inc
jmp
pushf
xchg
fistps
jne
fcoml
not
in
sbb
and
jecxz
mov
test
sti
jb
add
and
mov
push
repnz
jl
dec
mov
and
outsb
mov
jo
outsb
fs
popw
insb
aam
xchg
mov
shrb
adc
pop
and
push
gs
int3
test
outsl
xor
xchg
sub
outsb
arpl
adc
test
int
ja
movsb
aad
sbb
inc
lahf
jecxz
and
add
add
stc
mov
aaa
into
sub
sbb
and
scas
pop
sub
pusha
es
popa
jo
outsb
jecxz
xchg
test
cmp
mov
lret
fstl
sub
xchg
xchg
int
mov
push
mov
cwtl
sbbl
mov
idivl
jno
pop
mov
test
xchg
mov
sbb
cmp
rclb
xchg
inc
in
mov
sub
adcb
xchg
mov
js
adc
repz
and
pop
lds
adc
sub
es
cmc
mov
lds
push
aad
icebp
out
add
add
rcrb
loop
fs
cmp
rclb
and
and
idiv
adc
bound
enter
push
and
ret
cmc
inc
mov
push
ja
aam
gs
and
push
add
std
sub
jno
push
xor
stc
in
sbb
jnp
adc
pushf
movsl
xchg
lahf
mov
leave
lods
inc
dec
mov
in
pop
andl
xor
shr
ret
out
in
adc
call
clc
int
aam
pop
test
cltd
push
xchg
jnp,pn
cld
movsl
addr16
aam
xor
cmp
pushf
in
cmp
jnp
arpl
xor
sbb
jle
cltd
or
adc
ljmp
ss
dec
sbb
xor
mov
sbb
movsb
scas
mov
or
daa
push
inc
popf
icebp
test
mov
push
cmpsl
loope
mov
lock
out
xor
mov
cmp
mov
enter
cmp
or
popa
push
and
and
ret
dec
cmp
inc
scas
cmpsl
mov
mov
cltd
cmp
faddl
test
sub
xlat
rol
mov
daa
lods
popf
xchg
add
inc
mov
xor
add
dec
ret
movb
ret
pop
movsl
cmp
mov
sbbl
push
sti
insl
je
or
jle
int3
push
inc
and
rorb
mov
adc
mov
lods
xchg
and
cmp
cmpsl
rcrl
das
jb
fcmovbe
mov
fildll
mov
aam
push
pop
cmp
sbb
loopne
cld
pop
cmp
adc
cmp
xor
adc
or
mov
jl
xor
fs
and
fnstsw
ret
or
jo
dec
insl
push
shr
imul
or
inc
push
inc
int3
jecxz
aaa
movsb
iret
movsb
mov
ja
fadd
mov
aam
push
pop
shlb
repnz
jno
je
dec
mov
add
pop
cmp
clc
mov
xlat
sub
lea
push
shrl
js
push
add
popf
aas
or
stc
imul
push
mov
dec
push
inc
sysexit
ret
adc
xchg
dec
inc
je
jp
sbb
jo
inc
push
jp
pop
popf
inc
and
movsl
inc
cmp
pop
aas
ret
mov
sbb
popa
popf
jge
movsl
add
mov
iret
mov
lock
and
addr16
ret
mov
or
xchg
mov
data16
lods
pusha
aad
mov
outsb
xchg
ret
push
or
mul
rcrl
scas
pop
outsb
jae
jo
into
xor
lahf
xor
add
xchg
push
sub
and
mov
inc
shrl
das
push
ret
cmp
cmp
jno
mov
cs
inc
sbb
inc
cli
sub
mov
sub
cmp
mov
mov
inc
int3
inc
cmp
out
insb
ds
dec
loop
mov
movsb
cwtl
cmp
jl
icebp
dec
aaa
adc
add
and
mov
pusha
outsb
xchg
test
xlat
and
add
xorb
sub
inc
leave
pop
add
arpl
pop
int3
aam
orb
pop
mov
js
adcl
pop
clc
jl
in
xchg
cmp
shlb
stc
or
mov
add
pop
iret
mov
push
dec
dec
adc
subl
and
add
push
jge
clc
mov
inc
or
nop
imul
shl
das
call
inc
mov
es
repz
push
fs
xchg
xlat
sub
xor
icebp
js
jmp
movsb
lods
repz
repz
aas
adc
sbb
mov
rclb
jecxz
jg
in
sbb
imulb
cmp
xchg
xor
pusha
mov
inc
adc
and
insl
into
fdiv
sub
pop
mov
xchg
mov
movsb
repz
jne
stos
loop
aam
sbb
test
push
cli
sub
sub
sub
outsb
xor
call
cmpsl
mov
xchg
mov
leave
test
adc
mov
adc
test
mov
xchg
jcxz
mov
ret
mov
test
or
inc
jbe
js
sahf
jbe
test
cmp
out
lods
lods
sahf
push
add
jo
imul
fdivp
dec
mov
jae
int3
cmp
bound
ret
mov
and
push
pop
iret
sub
dec
sub
xchg
inc
mov
mov
mov
lods
fildl
sub
pop
mov
lock
push
fnstenv
lea
adc
ss
xor
cmp
jnp
js
bound
and
add
sahf
test
push
or
dec
bound
lret
inc
jb
sar
mov
lock
imul
jae
pop
cli
sahf
loopne
xchg
jo
test
add
mov
popa
jno
jl
jg
lods
shlb
shrb
and
outsb
jmp
push
push
xor
push
outsl
sbb
xor
icebp
xchg
mov
rol
xor
ds
inc
mov
das
dec
cmp
stos
mov
add
push
jmp
iret
and
mov
inc
sbb
dec
stos
test
das
repnz
daa
mov
lahf
lcall
inc
popa
imul
add
pop
sahf
or
fistl
and
inc
sub
jl
adc
add
cmpl
xchg
inc
cld
mov
repz
dec
mov
xchg
cmpsl
sub
loop
negl
scas
imulb
in
add
mov
mov
mov
loopne
test
mov
xor
int3
pop
shlb
xor
push
adc
pushf
fistpll
lds
andb
in
inc
jae
adc
insb
dec
repnz
and
popf
leave
mov
hlt
cmpsl
pop
sahf
outsl
shlb
or
inc
pop
insb
icebp
je
in
addb
dec
repnz
ds
mov
and
test
sbb
xchg
jle
inc
jmp
rclb
sub
jl
dec
mov
jmp
call
jmp
push
roll
repnz
pop
sub
mov
and
icebp
and
out
add
sbb
call
inc
inc
jae
adc
jp
sub
mov
inc
imul
out
sub
push
jae
adc
add
dec
repnz
cmp
and
test
add
sbb
pop
inc
inc
jae
adc
add
cmp
mov
dec
test
sub
loopne
sti
mov
test
mov
mov
and
loope
sbb
mov
insl
sbb
negb
imul
int3
mov
outsl
sahf
pushf
jg
pop
mov
repz
push
jnp
pop
adc
and
test
stos
scas
js
int3
mov
imul
sbb
push
aaa
mov
mov
cmp
repnz
push
jne
sub
rolb
and
and
out
outsb
push
mov
add
lock
and
push
adc
add
dec
repnz
push
and
mov
pop
jmp
jl
sub
fwait
inc
xlat
mov
sbb
in
cmp
mov
or
add
mov
shll
adc
jnp
imul
icebp
scas
adc
xchg
jb
mov
jae
movmskps
xlat
fcompl
loop
mov
mul
repz
std
ret
stos
sbb
insl
test
cmp
sbb
in
and
push
xchg
fsub
and
insl
stos
pop
movsb
cmp
pop
cmp
lret
jcxz
fstl
cmp
lea
mov
call
or
or
fwait
mov
sub
pop
out
iret
mov
popa
jbe
and
addr16
jbe
arpl
push
push
gs
fwait
adc
stc
mov
dec
or
xor
jl
mov
lods
testl
in
adc
les
inc
push
xchg
les
imul
mov
repz
fnstcw
int
and
xchg
sarb
and
jl
xchg
jl
sub
mov
mov
inc
lcall
pop
xchg
in
mov
fildll
and
mov
pop
mov
pop
pop
jb
xchg
scas
pop
mov
xchg
pusha
xchg
xchg
xchg
mov
push
sbb
pop
orl
jmp
cmpl
and
jl
xor
pop
dec
ljmp
in
dec
xor
jno
cmc
dec
push
insl
pop
jmp
cli
hlt
inc
inc
adc
jb
popf
scas
cmp
pop
xor
test
xlat
aam
and
or
or
jo
sti
adc
pop
and
jmp
shlb
mov
insl
pop
out
mov
lret
pop
mov
das
sbb
cmp
aam
es
pop
adc
fistpl
xchg
jno
fisttps
aam
in
cmpsl
xchg
push
out
mov
fwait
pop
mov
mov
mov
jbe
jno
cmc
push
aam
lods
mov
pop
pop
inc
pop
frstor
ja
adc
hlt
mov
mov
inc
orl
xchg
int
and
inc
sbb
inc
mov
test
jno
cmc
push
aam
and
call
fwait
jge
pop
pop
jb
mov
add
loopne
push
jmp
lcall
xor
in
scas
dec
mov
fisubrs
sarl
lds
and
lods
es
pop
scas
lds
fildll
xchg
out
rcrl
or
pop
xor
pop
lea
aas
popf
imul
pop
xor
push
std
push
out
or
inc
xchg
cmpsl
pop
mov
jne
adc
cmpsl
fists
insl
xlat
mov
insl
and
adc
gs
jne
cwtl
insl
cmpsb
jo
xchg
lea
in
fldt
mov
xchg
xchg
mov
mov
pop
imul
jbe
mov
in
add
das
cld
ret
xchg
push
incb
arpl
int3
xor
arpl
fistpll
xlat
daa
inc
add
cmp
ds
push
inc
push
movsb
insb
insb
pop
repnz
pushf
mulb
jge
inc
inc
and
mov
jbe
adc
dec
in
pop
out
sbb
pop
jne
into
stos
insb
sbb
scas
sbb
inc
int
in
adc
loope
fldenv
xchg
movsl
inc
inc
mov
pop
aad
popa
test
mov
inc
pop
lock
jecxz
jo
fnsave
lods
jo
mov
call
popa
leave
ljmp
push
pushf
in
sub
or
cmp
jne
and
push
insb
rol
xor
fdivrs
in
adc
xchg
or
mov
mov
fs
test
loope
push
lock
adc
push
mov
out
cltd
outsb
xchg
popf
fcomip
cmp
aaa
subl
push
ret
sub
ss
mov
inc
in
ja
outsl
add
cmp
outsb
jecxz
and
iret
jg
aam
xchg
gs
loopne
je
cmp
aad
int3
fcoml
dec
outsb
xchg
mov
xor
lock
pop
jne
sub
mov
loope
dec
mov
jl
nop
andl
sub
in
dec
sbb
xor
pushf
mov
jge
cmpsb
repnz
mov
lahf
insb
xor
inc
pop
push
dec
push
push
pop
xor
mov
push
or
push
ret
out
pushf
movsb
dec
sahf
bound
movsb
mov
loope
inc
mov
enter
push
loope
xchg
test
dec
mov
mov
arpl
ret
loopne
pop
mov
fidivrs
or
fisubs
insb
pop
inc
out
push
dec
lcall
or
fs
xchg
cltd
aad
aaa
je
xchg
jge
bound
test
ds
fldenv
iret
add
mov
push
iret
pop
hlt
push
shl
sub
inc
pop
andl
rolb
or
iret
add
lock
sbb
add
cmpsl
test
lea
ret
nop
adc
jecxz
fs
xchg
mov
sahf
pop
imul
or
sbb
jecxz
shlb
rcrl
mov
sbb
shrb
sarb
pop
lret
mov
and
push
or
push
dec
add
xor
xchg
and
xchg
dec
in
jle
adc
sub
inc
mov
mov
stos
emms
sub
adc
subb
out
or
fsubrp
test
aam
je
sub
xchg
call
inc
daa
jp
push
test
repnz
mov
ret
mov
cltd
test
dec
es
xor
sub
mov
stos
pop
push
xor
cmp
xchg
bnd
out
mov
mov
mov
loopne
push
js
push
mov
jg
lock
in
in
add
insb
pusha
add
inc
ret
sub
leave
into
cmp
mov
inc
sbb
bound
leave
pmulhuw
lock
test
sbb
add
add
loopne
ljmp
push
adc
mov
addl
adc
mov
mov
jo
bound
test
mov
dec
or
pop
js
add
inc
pop
inc
js
lahf
aas
xor
push
call
je
mov
bound
mov
out
xor
mov
cmp
push
shl
hlt
xorb
rcl
and
inc
pop
jb
xchg
sbb
and
inc
cli
out
inc
xorl
fistl
insl
in
pop
lods
into
inc
outsl
fistpl
push
ds
mov
mov
out
ret
scas
and
dec
xchg
jbe
mov
movsb
push
jg
js
in
and
imul
jb
fldt
shl
sub
fwait
cmp
pop
mov
and
pop
and
cmp
push
inc
or
pop
inc
mov
sahf
and
inc
lea
js
push
in
cltd
or
test
push
pop
popf
rcrb
sahf
sub
lahf
cmp
in
test
jbe
add
or
and
dec
add
inc
dec
dec
pop
inc
add
int3
test
push
fimuls
sub
jmp
stos
cwtl
jns
mov
arpl
add
call
fldt
in
lret
jg
push
xlat
mov
int
sarl
sbbl
leave
mov
push
or
and
cwtl
mov
orl
adc
dec
stos
mov
mov
pop
out
pop
fsubrs
push
fs
dec
cmp
cmpsl
ds
cmp
xchg
test
in
or
imul
ret
xor
and
adc
and
in
mov
and
inc
loopne
pop
mov
xor
fstps
inc
push
jno
call
test
dec
cmp
imul
ret
and
in
jbe
sub
bound
int
shlb
jbe
int3
stos
adc
andb
ret
jno
fidivs
loopne
ret
popl
mov
lods
lods
adc
dec
sub
icebp
push
ds
jae
sub
add
rorb
sbb
and
jl
js
jnp
mov
jno
sub
mov
cld
nop
iret
jb
xchg
lahf
sub
into
bound
test
push
cmp
loopne
ret
cld
and
movsb
std
sub
rorb
jnp
lods
cmp
jns
mov
sub
add
dec
inc
inc
pop
repnz
call
xchg
xlat
add
push
fsubs
pop
popa
and
dec
ret
sbb
call
jg
sub
inc
jnp
add
out
out
mov
ret
fsubrl
sub
test
or
cmp
sub
ret
fcoml
xor
adc
xchg
sub
mov
clc
push
mov
int
jb
sbb
cmp
repz
inc
stc
mov
mov
hlt
or
cwtl
shlb
or
and
mov
mov
inc
xor
or
push
inc
hlt
ret
shrb
xchg
add
enter
call
sub
pop
jbe
and
in
dec
gs
add
dec
push
xchg
inc
pop
jg
xor
dec
mov
jb
sarl
lcall
fildll
mov
mov
ret
aas
pop
lcall
sub
push
cs
imul
cltd
inc
and
push
sub
hlt
cmp
sub
inc
enter
mov
pop
xor
and
lcall
mov
xchg
mov
shll
outsb
fildl
repz
xchg
frstor
xchg
and
jle
and
ficompl
pop
ss
shrb
jp
in
cmpsb
adc
cmpsb
add
les
jb
xchg
sbb
mov
testb
leave
push
add
fdivrs
xchg
jb
add
push
cmp
pop
ret
in
stos
jno
mov
mov
dec
stos
rorb
dec
mov
ret
in
mov
and
out
push
mulb
pusha
adcb
lds
jbe
gs
jb
aaa
fsubl
movsb
je,pn
mov
mov
das
es
mov
sbb
imul
pop
jle
dec
ret
pop
sbb
and
je
lahf
das
pop
jo
push
mov
stos
xor
lock
add
dec
xor
xor
call
and
in
es
inc
xor
lock
fwait
sub
pop
int
sub
shlb
imul
ss
or
test
sahf
fwait
pusha
adcl
lock
pop
shlb
jno
in
adc
mov
mov
and
aam
loopne
mov
lock
xchg
daa
and
mov
inc
dec
add
dec
add
mov
sbb
or
push
hlt
cmpsw
dec
mov
xor
outsb
and
pop
in
sub
aaa
sar
sbb
jns
loopne
iret
gs
mov
addb
adc
jo
inc
ficoms
hlt
mov
jno
and
ds
push
add
in
mov
pushf
test
mov
out
das
or
jmp
jge
mov
dec
arpl
sbb
stc
or
sbb
adc
insl
add
sahf
iret
mov
repz
xor
xor
das
iret
gs
or
mov
iret
cld
pop
jge
in
dec
shld
adc
inc
arpl
sti
insb
daa
test
mov
add
or
repz
mov
mov
jmp
fs
jge
pusha
mov
cmp
lock
pop
insb
lods
sub
je
mov
jecxz
jecxz
outsb
sti
sbb
mov
jnp
push
loopne
mov
xorb
mov
cwtl
int3
dec
mov
mov
push
sub
aaa
mov
lods
ds
mov
mov
mov
iret
sbb
and
xchg
cmpsb
inc
add
ficoms
sahf
sbb
fsubrl
inc
mov
cli
out
or
in
push
push
push
cs
dec
push
cltd
adc
pop
cmp
sub
and
out
out
int3
in
cmp
cmp
scas
mov
xchg
outsl
pop
fs
leave
dec
ret
call
and
loop
das
aas
imul
xorb
inc
fucom
mov
and
mov
jp
jno
test
nop
dec
fiaddl
inc
dec
aas
dec
xchg
cmovb
add
xchg
andl
in
cwtl
xor
sub
rcrl
jmp
adc
dec
or
sbb
jno
filds
dec
fwait
or
adc
mov
mov
mov
imul
std
movsb
roll
outsb
adc
jb
push
push
xor
cld
push
pop
add
push
orl
add
lods
mov
dec
in
subl
dec
outsl
mov
inc
mov
outsb
push
repz
xor
test
cmpsl
stos
sub
loop
add
mov
dec
push
aam
adc
loop
hlt
pop
sub
xchg
stos
je
iret
aaa
cmc
sahf
mov
mov
bound
pop
sar
xchg
popa
movb
mov
xor
push
mov
cwtl
int3
mov
scas
and
inc
pop
add
cltd
js
sbb
pop
movsl
jb
mov
inc
xor
out
sbb
aaa
loopne
mov
lods
lahf
and
inc
js
out
or
mov
sahf
movsb
iret
fsubrl
xchg
lahf
cmpl
mov
lods
test
in
das
and
dec
and
inc
enter
and
sub
xor
popa
adc
aam
out
push
stos
inc
cmp
mov
insl
pop
pop
push
outsb
inc
dec
out
push
loop
jo
test
imul
jns
es
loope
imul
dec
sti
inc
and
addr16
faddl
xchg
sub
xchg
addr16
xor
push
pop
and
add
jne
xlat
ret
cwtl
imul
repz
inc
dec
mov
call
fs
test
outsl
xchg
adcb
inc
iret
xor
andl
inc
popa
lods
xor
dec
loopne
js
imulb
jecxz
jne
and
ljmp
xchg
xchg
cmc
jae
xchg
ret
enter
push
addr16
xor
in
fcompl
mov
jnp
nop
lock
movsb
out
mov
jg
jno
inc
imul
push
int3
dec
push
sub
xor
mov
pushf
adc
and
mov
xchg
push
xor
repnz
and
call
ret
jge
jb
js
and
mov
aaa
loopne
push
ret
add
xchg
mov
sbb
std
pop
or
xorl
adc
scas
mov
mov
nop
punpckhwd
int
and
pop
rorb
mov
dec
scas
xor
ret
or
mov
insl
pop
nop
cmpsl
inc
clc
loopne
cltd
insb
mov
mov
pop
call
cmp
call
outsl
mov
inc
push
push
hlt
ds
add
add
data16
and
mov
cmp
xor
into
iret
sbb
loopne
mov
adc
aam
or
test
xor
outsl
mov
popf
jbe
mov
jnp
popa
insb
out
andl
js
imul
shlb
stc
push
xor
add
push
and
jae
repnz
hlt
loop
aam
adc
pop
je
and
fidivl
jae
jo
inc
dec
gs
out
imul
cmpl
jns
xor
insl
es
jmp
arpl
xchg
mov
or
leave
jb
adc
mov
sbb
lock
mov
pop
popa
mov
daa
mov
pop
and
mov
rcll
test
test
add
pop
out
and
pop
inc
lret
cmp
xor
jb
and
jl
jnp
fwait
mov
push
and
cmp
adc
sbb
das
call
dec
cmpsl
dec
sbb
movl
stos
aam
mov
add
scas
negb
and
dec
jg
popa
sbb
jo
test
in
test
xorb
pop
rclb
pop
and
cmpsl
lods
inc
dec
mov
inc
add
das
scas
jl
jns
cmp
sub
mov
push
jbe
mov
clc
mov
loop
inc
cli
jbe
and
or
mov
or
pop
inc
inc
jb
andl
inc
ret
sub
lock
jno
repz
ret
pop
es
mov
sarl
mov
inc
xorl
jo
adc
adc
inc
jle
jns
inc
jno
adc
in
inc
jbe
and
ljmp
xor
aad
xor
push
mov
jg
xchg
test
jbe
pop
xor
movsb
xchg
cmpsl
arpl
inc
mov
mov
inc
xchg
in
ss
arpl
xor
addl
adc
stos
jecxz
fstpt
insl
ffreep
stos
or
pop
sarb
stos
and
shlb
mov
fcmovnb
xchg
fildll
cli
out
adc
pop
icebp
xchg
inc
jb
push
es
adc
mov
adc
es
fsubs
call
fsubs
call
ss
and
inc
ret
es
sub
and
jne
sbb
xor
xchg
mov
jge
out
adc
rolb
aaa
negl
mov
sub
scas
das
iret
dec
iret
pop
mov
add
xchg
push
fsubl
rclb
and
adc
in
xor
and
push
int3
push
jl
roll
push
inc
jp
shr
jl
arpl
xchg
dec
imul
push
stos
sahf
test
lret
cmpsb
fisubrs
and
xchg
inc
sub
xor
dec
cmp
mov
jae
push
sub
xor
adc
js
cli
xchg
xor
sahf
hlt
out
jbe
push
mov
es
pop
mov
and
loop
jp
fdivs
loop
cmp
popf
dec
push
xor
daa
dec
in
push
or
sarl
cwtl
adc
sti
jge
adc
jb
lea
aaa
inc
dec
xor
in
push
addl
in
jo
xor
lods
add
inc
shll
mov
mov
sub
iret
push
pop
add
inc
lock
mov
sbb
mov
push
inc
jno
rorb
and
in
push
std
popa
cmpb
xor
inc
and
push
repnz
es
mov
insl
push
ret
push
push
adc
pop
push
inc
xor
sub
lock
es
and
ss
loop
ret
andb
add
fisubrs
fildll
mov
add
cs
sbb
inc
addb
cmp
ret
shlb
jns
fwait
lock
sub
lret
sahf
xor
iret
cmpsl
cmp
or
cmp
test
out
push
mov
jle
adc
add
fwait
mov
adc
sbb
pop
enter
in
gs
sbb
mov
aam
ret
dec
push
sub
cld
and
and
stos
jg
fildl
repz
movsl
out
ja
pushf
ljmp
out
jae
movsl
push
mov
cmpsb
test
mov
mov
add
cmp
jae
jne
inc
iret
and
mov
rclb
sub
sti
ja
cmp
mov
mov
int3
in
cld
dec
dec
cmp
imul
dec
jg
repz
adc
jmp
adc
ret
call
leave
and
ror
jecxz
sbbl
imul
push
adc
mov
int
adc
mov
arpl
inc
int3
push
and
mov
dec
test
mov
cmp
pop
xchg
mov
fwait
int3
test
fistps
fadd
inc
aaa
data16
push
fs
mov
shrb
add
push
xchg
mov
sbb
sub
sub
adc
push
adcl
mov
mov
dec
outsb
jl
mov
dec
dec
cmpsl
mov
mov
imul
dec
das
iret
jl
push
push
adc
mov
xchg
data16
adc
jecxz
or
mov
imul
ss
insb
push
sbb
stc
or
xor
push
or
cmp
mov
nop
mov
out
and
mov
pop
out
int3
mov
push
hlt
addr16
jo
cltd
arpl
dec
sbb
cmc
and
mov
hlt
pop
imul
sbb
mov
xchg
lcall
dec
das
fstpt
mov
mov
ss
iret
or
jecxz
add
mov
jl
inc
sub
cs
push
sbb
ds
and
insl
sub
outsl
addr16
push
outsb
jno
push
push
daa
mov
pushl
sbb
push
adc
mov
mov
loope
xor
inc
push
pop
fwait
addr16
sub
pop
bound
dec
push
cmp
inc
add
cli
sbb
pop
les
hlt
and
cmp
pop
inc
in
push
lret
mov
cli
adcb
orb
lahf
xchg
xchg
lods
scas
aam
mov
fmull
push
sbb
sub
repnz
addr16
inc
push
mov
sahf
cmp
inc
lods
out
jbe
and
pop
out
inc
adc
mov
inc
or
add
xor
pushf
sbb
ret
ret
xor
jo
sub
cmc
sub
mov
lahf
mov
mov
and
sbb
inc
aas
push
push
mov
mov
mov
xor
out
aad
dec
jne
push
inc
xchg
sub
adc
push
xor
shlb
add
mov
cmp
and
hlt
cmp
outsb
je
movsl
push
add
xchg
inc
mov
jae
inc
mov
test
es
jo
dec
loopne
inc
push
loope
adc
mov
hlt
sub
lcall
outsb
int
jb
nop
xchg
pop
outsb
dec
je
add
jb
imul
aas
imul
decl
movups
inc
arpl
and
lds
jnp
jb
lock
orl
popa
leave
inc
js
adc
jbe
mov
jo
dec
fwait
mov
addr16
ljmp
push
xchg
lea
mov
jbe
sbb
std
mov
mov
ds
or
mov
int3
pop
addr16
push
mov
outsb
inc
mov
aas
dec
scas
and
and
mov
popa
xchg
mov
nop
and
shlb
mov
dec
pop
fstps
xchg
mov
jp
sub
jo
ds
sbb
repnz
cmpsl
test
pop
dec
jns
lds
xchg
fwait
push
push
pop
cld
loope
xorl
lret
mov
inc
out
xchg
sbb
adc
xor
iret
mov
aas
fmul
and
lret
inc
dec
mov
pop
xchg
data16
inc
mov
sbb
xchg
arpl
xchg
mov
outsb
sub
pop
mov
stos
lea
xchg
jo
adc
add
out
lods
insw
mov
or
inc
xorl
push
out
jb
clc
inc
sbb
addr16
imul
pop
stos
push
inc
push
inc
js
xchg
test
sbb
or
pop
fistl
testb
ljmp
pop
dec
movsb
andl
nop
and
or
cwtl
bound
sub
xchg
sti
push
mov
fdivs
in
nop
arpl
jno
js
lock
adc
pop
pop
xchg
les
mov
dec
jno
xchg
adc
fldcw
or
and
hlt
mov
call
nop
xor
sbbb
fcoml
les
mov
jno
pop
fsts
lods
sub
addr16
jo
cmpsb
cwtl
sbb
outsb
das
jle
mov
es
lret
inc
sbb
dec
adc
mov
xor
lock
mov
stos
pop
add
in
aad
adc
mov
fisttpll
dec
insb
adc
mov
pop
push
cmpsl
inc
test
scas
stos
les
cmp
loope
es
push
jb
sahf
test
and
in
cmp
and
imul
pop
sub
gs
xor
add
dec
imul
cmp
mov
sub
cmp
pop
lahf
das
fldt
sub
into
sub
mov
mov
xchg
sub
lods
lock
fwait
dec
aas
mov
outsb
outsl
xor
data16
mov
test
rorb
jle
icebp
pop
adc
pop
cmp
icebp
mov
nop
adc
dec
je
xor
loop
enter
add
inc
xchg
jge
ret
mov
xchg
cltd
scas
adc
ffree
add
adc
testb
outsb
sarl
and
inc
push
call
jge
push
loopne
pop
mov
ds
sahf
into
test
inc
dec
adc
lahf
push
jecxz
es
fmull
mov
dec
mov
and
cmc
in
xor
sub
dec
sbb
jbe
add
adc
sbb
sub
cltd
icebp
sub
or
jmp
in
push
push
or
addr16
pop
jmp
add
ret
fs
adc
pop
js
fwait
pop
mov
mov
in
iret
shlb
cwtl
in
push
inc
push
xchg
xor
jp
dec
jnp
mov
dec
pop
cmp
les
jmp
out
sub
popf
out
push
imul
or
and
push
push
imull
gs
hlt
cmp
push
xor
bnd
filds
negb
dec
xchg
dec
iret
in
cs
and
add
icebp
fcomps
mov
xchg
push
mov
inc
cli
sbb
add
add
pop
xchg
test
cwtl
pop
rorl
mov
xor
lods
inc
and
outsb
and
aas
inc
push
imul
ds
pop
fdivs
sub
and
adc
mov
es
fdiv
cs
xchg
push
cmp
and
inc
cltd
lods
imul
xchg
jnp
aaa
push
loop
insb
mov
push
outsb
xlat
dec
mov
cwtl
xor
ret
add
mov
rclb
ret
xchg
cmp
in
outsl
lahf
dec
pop
hlt
inc
dec
loopne
or
dec
mov
xchg
and
mov
lds
and
fistpl
dec
pop
sub
ret
int
addr16
mov
and
or
push
ss
push
data16
xchg
mov
mov
inc
imul
sahf
andb
ret
jecxz
mov
sarb
xor
adc
and
xor
sub
pusha
mov
xor
fneni(8087
out
aaa
jp
clc
shl
lret
pop
js
cmp
mov
add
jno
orb
nop
mov
rcr
mov
insb
jnp
add
adc
dec
fwait
aas
sti
mov
add
mov
jle
test
out
mov
add
and
out
rcll
sbb
add
orl
loopne
daa
cmp
outsb
fbld
xchg
je
lods
ds
push
mov
pop
subl
xor
mov
cmp
addr16
fcmovu
in
ds
subb
pop
aaa
int
fbstp
xchg
mov
and
ss
sbb
mov
shll
ret
les
fidivrs
add
lahf
push
xor
push
bound
or
fdivrp
movsl
sbb
inc
repnz
sbb
inc
dec
cmpsl
push
sbb
inc
push
inc
pop
out
mov
sbbb
pop
and
and
pop
mov
mov
jns
xlat
or
orb
mov
repnz
addr16
fstpt
out
cltd
dec
cltd
push
lret
into
ja
xchg
or
test
loope
and
js
mov
mov
sub
pop
loopne
data16
adc
aaa
jo
push
jbe
mov
ret
cmc
bound
sahf
dec
add
xor
inc
je
sbb
mov
jbe
cmp
loopne
fildll
push
fists
pop
mov
mov
cmp
addr16
inc
xor
leave
loopne
sub
arpl
insb
decl
mov
sub
std
fstps
sbb
inc
xchg
and
adc
jnp
cvtps2pi
adc
sub
pusha
jno
in
or
and
sub
in
push
jne
std
ret
mov
shll
and
je
cmp
pop
xor
and
push
cs
pop
repz
fmul
xor
jnp
inc
mov
inc
cmp
push
jbe
es
ret
inc
xor
push
dec
and
js
shlb
nop
insb
and
or
insb
jbe
mov
push
daa
mov
iret
fisttpl
imul
add
pop
test
or
xor
and
push
xor
repz
shrl
cmp
mov
sti
loopne
js
daa
fsubl
int3
mov
out
fildll
in
mov
inc
mov
jmp
movsl
xchg
or
adc
or
outsb
or
lahf
jno
sub
data16
hlt
fisubl
cmp
cmp
out
hlt
inc
jge
dec
into
fsubr
frstor
jb
xlat
jno
push
rep
ret
ds
add
mov
loope
pop
inc
adc
inc
bound
jmp
xor
jg
dec
sub
xor
inc
pop
jne
iret
nop
mov
in
sub
icebp
adc
pop
jge
iret
psubusb
popa
jo
adc
iret
jae
cmpsl
ret
aam
mov
mulb
rcr
gs
xchg
mov
fwait
mov
push
mov
push
pop
imul
and
repz
es
and
mov
test
xchg
sub
jp
icebp
add
loop
inc
in
pusha
mov
hlt
mov
test
mov
les
notb
inc
adc
add
mov
sub
int3
loop
pop
lods
pop
test
pop
jp
stos
lods
pop
insb
xor
mov
dec
pop
das
inc
call
add
imul
test
dec
pop
int
mov
cmpsb
lds
inc
jp
rol
fstpl
outsb
jecxz
bound
js
inc
jno
adc
mov
cmpl
bound
jo
outsb
jnp
aam
jo
outsb
test
push
jb
inc
push
cltd
std
or
js
lods
push
mov
es
stc
dec
movsb
gs
fldenv
mov
in
ret
aas
sub
mov
adc
insb
dec
addr16
and
in
sbb
jmp
cmp
mov
lahf
js
ret
sub
sub
cmpsl
xchg
in
jge
or
imul
out
and
outsb
inc
fwait
dec
inc
and
xor
inc
insl
pop
mov
xchg
push
jecxz
cmp
lock
fisubrl
neg
inc
mov
repz
inc
cmp
les
popf
rolb
int
das
mov
testb
int
lods
mov
mov
xchg
add
shll
hlt
jnp
sbb
mov
dec
cs
sub
fbstp
js
mov
je
or
inc
dec
pop
cli
sbb
shll
popf
data16
mov
aad
nop
inc
enter
push
jne
lea
je
mov
cmc
push
pop
push
roll
fsubl
iret
ret
or
bound
fcoms
inc
call
movl
pop
sub
stos
imul
add
or
mov
dec
roll
adc
push
and
mov
sbb
hlt
dec
loopne
mov
inc
add
fildl
gs
rorb
fdivp
notb
into
leave
xchg
ret
cmp
out
add
icebp
sub
sarl
xchg
imul
xchg
out
or
mov
test
mov
adc
jo
ljmp
or
imul
mov
sbb
test
jno
popa
adc
aam
push
inc
xchg
dec
call
bound
add
push
pop
adc
push
arpl
dec
xchg
leave
mov
stos
popa
je
jl
ret
ja
les
cmp
pop
cmp
mov
inc
push
cltd
and
js
mov
xor
inc
outsb
dec
lret
ja
xlat
sbb
jge
jo
inc
fisubl
jg
add
lahf
pop
cmp
test
lea
mov
sub
cmp
inc
cmp
or
ljmp
sbb
inc
dec
iret
push
adc
popf
push
dec
into
jns
les
stos
outsb
xor
je
sub
adc
fldenv
add
gs
jg
jae
fwait
cmpsb
std
and
xchg
data16
cmp
stos
or
sbb
mov
scas
loopne
add
xchg
cmp
cmp
ret
loopne
fmulp
sarb
or
jns
call
ret
xor
cmp
xchg
in
ss
inc
mov
jge
jle
ret
jns
dec
mov
addl
push
mov
aad
sbbb
sub
push
idivb
add
pop
imul
cltd
enter
adc
fcomp
inc
movsb
mov
pop
iret
cld
lcall
in
jbe
mov
cmp
pop
inc
out
mov
mov
mov
ss
push
ffreep
mov
cmp
jle
test
lea
fmull
bound
or
jecxz
or
ds
fs
mov
or
push
sub
add
ret
cmc
sahf
mov
movsl
in
loop
jnp
out
cmp
jno
loop
enter
lcall
push
loopne
pop
pop
jns
daa
mov
negl
pop
inc
and
push
sahf
arpl
xchg
jo
jecxz
jl
jg
mov
ds
loop
adc
cmp
lock
or
fistpl
lock
mov
mov
inc
and
sti
xchg
clc
sbb
call
rorl
add
idivb
out
dec
inc
imul
and
inc
dec
rclb
mov
mov
mov
sahf
icebp
dec
ret
fs
pop
pusha
jae
adc
outsl
push
dec
shlb
hlt
testl
das
cmp
je
cmp
nop
es
mov
add
pop
leave
mov
cs
add
cmp
getsec
jnp
hlt
add
in
ja
repz
dec
sbb
into
pop
jo
push
mov
cmp
stos
xchg
push
jmp
adc
mov
inc
dec
sub
mov
sbbl
jns
dec
icebp
mov
dec
rcrb
lret
movsb
adc
nop
push
jns
in
popa
and
inc
jno
test
add
inc
xchg
dec
dec
call
faddl
repz
xor
cltd
rcr
or
push
fcmovnu
movsl
sub
xchg
stc
clc
lock
dec
mov
xchg
add
ds
xor
jno
scas
mov
int3
mov
fst
xor
xor
outsl
dec
xchg
loopne
dec
pop
cld
push
push
into
push
mov
add
push
push
jnp
fdivrl
pop
inc
xchg
jae,pn
dec
fcomi
jbe
cmpsb
repnz
sub
mov
les
mov
sbb
adc
or
push
sbb
inc
and
or
fnstcw
xor
xor
mov
jb
sbb
cmp
pop
jmp
and
inc
out
shlb
test
add
jp
adc
jo
dec
pushl
jnp
shrb
jbe,pt
adc
jo
lock
cmp
lret
jae
sarb
cld
push
mov
ljmp
push
mov
ds
into
mov
fsubl
call
cmp
mov
mov
pop
pushf
push
in
lret
repnz
call
loop
imul
jae
cwtl
cs
xchg
sub
shll
and
adc
jbe
inc
ja
adc
icebp
mov
aaa
mov
or
test
in
dec
test
sbb
mov
sbb
and
repnz
fdivrl
jle
repz
cld
test
sbb
inc
and
gs
xchg
stos
les
mov
mov
add
faddp
out
popl
push
mov
ljmp
outsl
mov
dec
stos
notb
inc
rcrb
pop
push
push
ss
inc
pop
icebp
addr16
les
and
push
mulb
jle
stos
loopne
lds
icebp
xchg
xchg
leave
pop
push
and
bnd
mov
pop
and
sahf
and
mov
adcl
test
icebp
add
in
aad
or
sbbb
icebp
loop
jno
ret
sbb
jmp
jae
or
rol
add
ljmp
add
js
push
add
push
pop
or
xchg
xchg
cmpb
xchg
popa
add
fisubrl
sub
pop
cli
into
inc
mov
pop
aad
loopne
jge
inc
sub
mov
push
adc
mov
ja
xchg
mov
xlat
stc
ret
shll
ret
mov
lret
mov
insb
call
add
sarb
lock
mov
lret
jbe
popa
mov
adc
xchg
cmp
out
clc
sbb
jne
mov
pop
mov
add
stos
imul
and
call
lret
stos
xor
ljmp
and
rol
repnz
je
hlt
mov
popf
je
inc
gs
push
call
int
nop
nop
sub
stc
test
or
mov
dec
xor
jl
sub
imul
push
adc
je
subb
js
es
fs
sub
lods
lahf
mov
gs
push
inc
sub
loop
test
mov
gs
bound
pushf
andb
dec
sub
cmpb
pop
ds
dec
inc
mov
xchg
imul
mov
inc
dec
aas
fbstp
xor
popf
repz
and
inc
or
add
fbstp
jmp
add
leave
insb
lods
cmp
popa
dec
xchg
cmp
inc
lahf
cmp
aaa
dec
int
dec
cld
and
cmp
aam
mov
jmp
pushaw
add
pop
dec
jne
fwait
insb
fcmovne
mov
loop
xchg
xor
test
jns
fisttps
push
and
adc
outsl
mov
icebp
or
hlt
push
call
je
jl
dec
lods
mov
add
out
adc
ret
mov
repz
in
test
adc
in
push
cmpsb
faddl
fsubrp
xor
bound
xor
inc
and
or
xor
mov
repnz
rorb
mov
orb
daa
sahf
ds
andl
xchg
cmc
popa
lret
mov
mov
push
or
inc
sbb
or
mov
ljmp
loopne
shrl
les
xlat
mov
or
fs
sbb
and
jns
add
mov
dec
outsl
push
adc
xor
and
or
lret
push
mov
aas
cmp
aas
lds
aad
xchg
loopne
outsl
pushf
push
jb
hlt
adc
and
int3
imul
xor
insb
push
xchg
push
xor
jo
sub
mov
imul
lock
xor
dec
enter
mov
outsb
fstpt
or
cmp
mov
lods
stos
jl
sub
lea
int
push
js
lcall
adcl
jmp
iret
int
add
xchg
inc
ret
in
mov
jg
dec
jecxz
lea
shl
pop
shlb
test
inc
mov
lahf
push
popa
adc
add
push
xor
inc
cltd
lahf
lret
push
ss
add
scas
lods
mov
mov
andb
repnz
test
fs
dec
cmp
mov
push
lods
add
mov
fwait
idiv
add
adc
pop
and
cli
inc
imul
mov
call
or
dec
sub
push
lods
inc
add
repnz
inc
cmp
inc
sub
jb
pop
mov
mov
call
test
xchg
pop
scas
pop
sarl
or
iret
xor
int
and
sti
push
dec
cmp
xchg
jo
test
dec
in
dec
rcrb
jne
push
loopne
out
pop
cmp
dec
jne
xor
cmpsl
pop
jl
dec
add
cmp
push
and
out
cltd
sub
cmp
and
loopne
xchg
or
add
xchg
mov
cltd
inc
das
and
mov
mov
mov
sbb
nop
pop
rclb
addr16
loopne
imul
call
push
ljmp
enter
hlt
sbb
enter
sub
dec
ret
xchg
out
in
jo
mov
lods
outsl
in
aas
enter
add
push
ror
push
sbb
inc
xor
push
dec
mov
icebp
cs
dec
addr16
inc
cltd
popf
cmc
inc
lret
or
fdiv
lret
aad
jge
pop
cmp
adc
fcoml
mov
xchg
inc
dec
xchg
mov
jno
ret
cmpsl
ret
push
test
nop
adc
loope
ret
sub
rcl
ljmp
mov
add
pop
loope
outsb
jecxz
fwait
inc
pop
xor
stc
cmp
orl
mov
sbb
push
jae
cmpsb
arpl
loopne
sbb
push
xor
push
loopne
ljmp
iret
push
push
push
mov
cmp
lret
insb
cwtl
push
inc
fs
and
int3
addl
popl
pop
dec
cltd
adc
and
cld
loop
iret
push
inc
shl
ljmp
and
mov
dec
and
inc
cs
lods
je,pt
sarl
ss
dec
ror
push
cmp
cmp
loopne
xor
sub
cmp
imul
sub
hlt
xlat
pop
or
iret
cmp
call
iret
imul
sarb
xchg
hlt
inc
inc
sbb
andb
lock
inc
jo
orl
adc
cli
or
fucom
pop
mov
movsb
loop
outsl
scas
adc
mov
add
ss
arpl
data16
andl
mov
repnz
cli
in
adc
insl
mov
inc
and
arpl
xchg
int3
lret
pop
scas
mov
jecxz
into
dec
xor
nop
jae
and
sub
shrb
cwtl
es
test
dec
xchg
inc
lret
mov
and
lock
mov
cmpsl
pop
or
sub
imul
sbb
in
mov
push
lock
mov
rolb
xor
push
clc
sub
ret
pop
jbe
sahf
and
pop
add
loope
xor
sub
push
mov
cmp
push
ret
xchg
inc
call
sub
out
insl
outsb
xchg
jne
push
push
mov
pop
push
dec
les
push
mov
js
bound
adc
iret
jo
inc
jecxz
lcall
jl
xorl
jbe
fstp
adcb
stos
mov
adc
mov
push
ljmp
inc
mov
js
ret
loopne
dec
dec
mov
popa
mov
inc
xchg
xor
adc
mov
mov
push
cwtl
jo
pushf
std
fs
inc
lds
dec
mov
xchg
cmpsl
add
bound
outsb
jg
loope
dec
popf
xchg
aam
fwait
daa
push
push
push
xchg
sub
incl
dec
add
add
push
jno
and
mov
addr16
add
push
stos
sarb
cmp
and
lea
inc
mov
xor
pop
roll
xor
and
pop
and
mov
mov
insl
test
and
imul
cmp
and
call
nop
mov
fsubs
xor
mov
out
fwait
jl
nop
lods
repnz
test
sub
imul
aaa
inc
loopne
imul
mov
xchg
loopne
imul
push
jbe
adc
imul
inc
ret
sbb
push
mov
push
mov
shlb
data16
insl
inc
mov
shrb
test
push
jl
les
xorl
pop
ret
fs
add
sub
inc
push
ret
sub
mov
push
xchg
add
push
sub
push
mov
clc
fwait
cmp
sub
mov
adcb
jbe
repz
loop
inc
add
hlt
jg
rorb
stos
negb
mov
out
mov
dec
sbb
mov
mov
or
dec
lods
push
adc
sub
leave
mov
dec
popa
shrl
loopne
loopne
jo
popaw
dec
out
lds
jbe
xor
inc
xorb
and
xor
roll
adc
mov
mov
push
push
cmp
pop
shll
sbb
add
iret
sub
sbb
icebp
enter
test
cmp
mov
das
dec
jl
jo
mov
fists
or
pop
or
pop
sahf
or
dec
mov
sbbl
pop
mov
divl
cmp
arpl
mov
jmp
mov
out
jne
cmc
mov
std
repz
mov
and
movsl
dec
mov
gs
jns
test
mov
jno
mov
in
daa
xchg
je
xor
ret
hlt
sub
daa
adc
fwait
movsb
out
rolb
push
stc
dec
test
dec
mov
addb
cli
jo
and
inc
dec
and
icebp
stc
sbb
sub
jo
xor
and
adc
sub
push
cltd
js
pop
data16
in
mov
data16
sub
xlat
in
mov
xor
pushf
loop
dec
add
inc
lods
mov
imul
push
adc
scas
shlb
add
xchg
cli
rolb
push
sub
mov
in
ret
pop
incl
lock
adc
cmpsb
jmp
mov
add
sub
sub
lods
push
imul
adc
xor
jb
mov
imul
test
fbld
inc
mov
cmp
lock
and
pop
jb
lcall
lods
jg
mov
mull
push
sub
dec
xor
and
mov
fsubl
popf
add
jne
fwait
mov
and
dec
or
or
sti
insb
sub
stc
or
adc
lock
shlb
jo
jno
cmpsl
xchg
loop
xor
insb
cmp
sub
fs
cmp
jnp
lods
and
data16
mov
or
inc
xchg
dec
or
mov
mov
arpl
or
push
mov
insb
dec
jg
outsl
mov
in
mov
imull
xor
js
sbb
aam
movsb
xchg
sub
sar
mov
addr16
test
loop
shll
pop
inc
pop
sbb
xchg
data16
int3
jnp
adc
inc
cmp
or
pop
pop
bound
xchg
or
jnp
mov
inc
stc
movsb
js
into
pusha
pushl
add
aaa
iret
rolb
jl
clc
bound
in
mov
imul
in
push
test
jno
fildl
insb
aam
add
xchg
in
push
int3
iret
dec
iret
push
pop
and
dec
adc
inc
js
bnd
push
mov
xlat
mov
imul
nop
xchg
pop
mov
pop
mov
in
pop
pop
ret
xor
shlb
and
jb
push
jo
sub
vfmaddpd
imul
jl
cltd
jmp
jp
js
bound
scas
leave
push
add
add
and
stc
xor
addr16
test
xor
push
sbb
inc
arpl
ret
cmp
jae
xchg
cwtl
sbb
adc
repnz
ja
lods
dec
pop
add
shl
mov
loopne
pop
mov
xchg
sub
sahf
xor
movsl
fdiv
ljmp
dec
insb
inc
jmp
dec
out
sub
test
adc
dec
and
out
mov
and
jne
inc
and
dec
fs
push
inc
stos
cmp
inc
inc
adc
std
call
cmp
arpl
sub
je
outsb
popf
ret
leave
bound
js
int3
ljmp
ret
imull
daa
mov
fildll
enter
mov
lods
mov
popf
cmp
sbb
and
jge
stos
ret
xchg
movsl
inc
push
xor
pushl
xchg
ljmp
mov
cmp
mov
sar
iret
inc
and
loopne
add
shll
sub
dec
loopne
xchg
fdivrl
pop
inc
dec
lds
jns
int
inc
clc
jb
std
popa
leave
loope
ret
jo
repnz
in
gs
jl
orl
xor
sub
icebp
stos
mov
cmp
xor
xor
pop
mov
int3
mov
sbbl
int
das
inc
mov
ja
iret
jmp
orl
and
addb
cmp
pop
jge
in
push
es
xchg
repz
ror
loopne
arpl
pop
inc
inc
loope
mov
jmp
loop
in
mov
repz
mov
call
xchg
xchg
movsl
lret
push
mov
test
xor
fwait
jmp
add
sbb
out
sbb
jg
lea
insl
aaa
inc
clc
repz
jae
loope
ret
movsb
sbb
popf
nop
jmp
fdivl
mov
lahf
jae
call
in
jno
shrb
and
out
mov
aad
sarb
jns
in
adc
inc
idivb
fwait
dec
jge
add
inc
stc
test
or
mov
sarb
inc
pop
xchg
in
add
xchg
ljmp
adc
sub
pop
in
mov
dec
add
rdtsc
cltd
jbe
hlt
and
push
cmp
push
xchg
inc
je
cmp
cmp
repnz
xchg
mov
dec
ljmp
icebp
repnz
in
repz
lea
mov
xchg
loop
faddl
test
dec
stos
jmp
pushf
insb
outsb
xorb
scas
cmpsl
mov
pop
out
das
stos
inc
xor
ret
loop
outsl
push
and
ret
ret
aam
mov
xor
daa
and
fildll
inc
and
and
adc
jg
xchg
adc
mov
aaa
dec
test
dec
test
imul
outsl
jmp
cmpsl
mov
add
cmpsl
pop
pushf
in
mov
enter
inc
xor
mov
push
fmuls
mov
mov
xchg
adc
xor
popa
xor
jae
dec
aaa
inc
cmp
jmp
test
fs
and
jge
pushf
inc
cwtl
adc
xor
push
test
in
es
in
and
inc
xor
pop
sbb
sahf
mov
and
cmp
or
jne
rcll
fwait
cmp
loop
arpl
scas
je
inc
xchg
js
iret
xor
loopne
rcrl
xorl
lds
repnz
addb
popa
popf
jecxz
mov
lcall
push
xchg
fs
inc
push
push
fimuls
repnz
dec
popf
jae
or
out
mov
sbb
push
mov
push
clc
mov
xor
cmp
es
incb
cmp
lret
pop
addr16
cltd
insl
leave
jecxz
movl
test
inc
xchg
out
mov
sub
lcall
mov
imul
jo
adc
mov
addr16
jecxz
xchg
nop
mov
cwtl
xor
and
pushf
leave
xor
out
mov
ret
out
pop
dec
and
inc
and
inc
push
out
dec
fcoms
mov
cld
mov
xchg
mov
jns
push
sub
pop
ds
inc
mov
dec
cltd
cmp
in
and
adc
out
leave
jg
sahf
dec
sbb
dec
iret
or
imul
gs
les
ret
sub
inc
js
dec
call
mov
pop
iret
js
xlat
rorb
sub
cmp
fistpll
and
mov
add
cmpsl
mov
stc
mov
mov
inc
xor
ret
add
fcmovnbe
mov
jno
mov
mov
ret
jo
xor
ret
mov
add
insb
xchg
adc
cmp
push
in
pop
mov
cltd
xchg
lret
mov
inc
cltd
sub
jg
in
cmp
add
sub
inc
mov
or
xor
mov
test
hlt
lahf
aas
mov
loopne
rol
jp
push
fadd
mov
cmp
sbb
in
popf
ret
inc
outsb
or
xchg
cmpsl
jo
test
inc
repnz
loop
and
imul
or
jmp
lock
push
cmc
jecxz
jae
lahf
pop
xchg
lahf
movsb
sub
and
sarl
ret
dec
shr
hlt
loopne
repz
mov
jo
or
inc
mov
nop
jecxz
mov
push
dec
sub
hlt
push
mov
addr16
and
add
and
insb
sbbb
mov
andl
jecxz
pop
mov
gs
dec
push
ljmp
filds
int
mov
stc
dec
lods
addb
aam
imul
sub
inc
lcall
lea
push
xchg
pusha
jo
sub
fs
push
mov
cmc
mov
cmp
dec
js
push
dec
fs
loopne
sbb
push
stos
push
in
jo
in
jb
xchg
shrb
jae
lcall
push
stc
lahf
out
xchg
call
icebp
push
dec
imul
mov
pop
or
lea
into
inc
subw
pop
test
aas
sbb
cmp
out
ret
mov
into
inc
cmp
pop
stos
dec
dec
sbb
push
in
sbb
rorb
push
mov
lret
inc
add
sub
iret
jmp
mov
mov
cmp
push
popfw
test
mov
push
and
mov
and
sbbb
iret
cld
or
xor
int3
sbb
fmul
jp
mull
outsb
out
stos
mov
xor
pop
jne
inc
iret
jo
xlat
mov
or
out
sub
cmp
fiaddl
inc
cmp
mov
lods
fnstsw
pusha
inc
cmp
lock
hlt
push
popf
les
lahf
stos
cmp
xor
xchg
inc
rolb
mov
inc
clc
repz
inc
iret
add
outsl
enter
pop
imul
adc
arpl
pop
xchg
ljmp
push
in
inc
xor
cmp
xchg
xchg
gs
sbb
fwait
cmp
inc
pop
stos
xchg
mov
jnp
dec
push
and
xchg
sahf
lock
sbb
inc
jno
test
inc
xchg
addr16
and
push
xor
xchg
imul
pop
je
gs
bound
dec
fwait
repnz
jae
jo
push
data16
fs
aam
xchg
xchg
adc
lcall
test
push
cwtl
sbb
jno
fists
jp
mov
or
ret
jg
das
leave
bound
sub
xchg
mov
mov
adc
sbb
sub
mov
inc
sbb
sub
je
outsb
inc
xchg
gs
push
pushw
sub
mov
inc
mov
rcrl
xchg
sbb
in
gs
out
test
mov
leave
cmp
mov
jns
jecxz
mov
cmp
inc
push
or
inc
xor
hlt
mov
mov
adc
je
sub
arpl
push
adc
push
xlat
inc
jl
pop
and
jo
lret
xor
mov
ja
inc
add
add
jae
iret
or
add
cli
mov
cmpsl
jb
fsubrs
loop
ret
adc
repnz
int3
pop
sbb
xlat
cwtl
fwait
pop
aam
in
in
add
out
inc
push
movsl
and
jns
test
sub
xor
jne
lahf
cmp
mov
or
pop
lods
imul
pop
iret
sub
scas
add
fwait
shll
inc
add
dec
dec
xor
nop
insl
sub
mov
or
adc
or
ljmp
pushf
inc
inc
in
and
js
popa
mov
jo
jo
test
mov
pop
les
push
or
jl
and
push
cli
sbb
push
pop
pop
mov
xor
in
add
sbb
dec
daa
push
gs
roll
pop
xchg
and
je
div
inc
and
cwtl
mov
lods
cmc
jne
inc
outsb
xor
lock
insb
in
adc
push
and
jl
push
add
adc
insb
push
ret
sti
js
dec
mov
out
and
ret
fcmovne
enter
int3
adc
mov
push
jo
cmp
ret
mov
adc
test
leave
add
call
or
push
test
add
push
xchg
xorl
mov
or
loopne
mov
sti
sub
push
aad
and
call
xrelease
dec
movl
pop
ret
orb
mov
data16
addr16
testb
mov
mov
repnz
loop
inc
ds
call
movl
movsb
ror
imul
mov
cmp
test
push
fs
adc
js
and
hlt
pop
jne
inc
sbb
arpl
lret
jp
lcall
sub
lock
cmp
insb
movb
inc
outsb
hlt
popf
ret
imul
out
cmp
xchg
adc
iret
imul
or
and
ret
rolb
loop
inc
add
mov
popf
fwait
xor
stc
orl
cltd
aam
dec
mov
or
mov
ss
in
or
xor
test
cmp
in
adc
je
mov
mov
push
adc
mov
adc
xchg
into
data16
subl
mov
fs
jecxz
jae
mov
jbe
inc
andl
outsl
loopne
xlat
dec
add
gs
je
mov
mov
adc
xor
push
imul
adc
dec
in
push
jcxz
xor
mov
dec
dec
repnz
stos
pop
cwtl
jb
and
add
dec
insb
outsl
addr16
and
subl
or
dec
mov
imul
jnp
jo
out
cmc
mov
hlt
adc
das
jl
fwait
mov
sti
push
bound
sbb
shlb
imul
pop
out
dec
cld
gs
inc
dec
icebp
clc
xor
adc
js
xor
cmp
add
aaa
fwait
iret
aaa
inc
jl
jae
lock
add
mov
dec
dec
popa
pop
orl
iret
mov
aam
jecxz
or
and
outsl
mov
sub
or
mov
in
adcb
or
test
inc
cmp
mov
xchg
cmp
xchg
dec
push
rcrl
call
jo
roll
xchg
dec
loopne,pn
push
jne
cltd
and
clc
push
dec
xor
hlt
loopne
movsl
and
push
movsl
mov
sbb
xlat
mov
push
push
or
pop
iret
mov
dec
sbbl
pop
je
inc
andl
sbb
xorb
ljmp
pusha
es
stc
test
lret
mov
and
adc
push
add
popf
mov
jl
xchg
push
jecxz
xor
or
push
iret
push
loopne
push
cmp
cmp
push
fisubs
sub
loopne
and
and
mov
bound
loopne
jbe
xor
insb
cmp
imul
js
xor
into
pop
pop
aad
dec
lods
pop
inc
mov
cmp
and
dec
ret
inc
mov
std
imul
rolb
repnz
jns
mov
mov
test
filds
fiadds
mov
cmp
pop
je
fimull
scas
imul
sbb
bound
jnp
data16
xorl
leave
mov
fidivl
adc
jnp
rcr
cmpb
in
xor
insl
pop
mov
pushf
cmp
push
inc
imul
sub
popa
iret
inc
cmpsb
fists
cmp
sub
mov
lock
insb
pop
push
popf
sbb
stos
enter
push
inc
iret
and
jmp
lea
jp
xor
jle
icebp
or
sbb
jge
pop
or
js
adc
jg
jmp
subl
push
pop
and
jecxz
inc
lcall
je
xor
inc
mov
bound
sub
pop
iret
lock
loop
push
jge
repnz
rorl
inc
pop
dec
mov
jo
jge
mov
push
inc
xchg
jb
sub
dec
and
iret
icebp
imul
insl
jmp
xchg
add
out
inc
stos
adc
pop
leave
repz
in
and
cli
or
test
out
ret
mov
xor
out
out
enter
add
jb
ss
push
fs
iret
repz
and
mov
jge
jg
adcb
add
jo
pop
sub
jno
cld
call
xor
jns
iret
nop
lahf
loop
sub
push
inc
mov
sbb
cmp
cmp
icebp
imul
fs
outsl
pop
jb
mov
test
pop
mov
bound
dec
inc
push
push
ss
jnp
mov
sti
mov
fsts
cwtl
insb
jns
scas
pop
or
repnz
sub
out
and
jle
mov
in
jns
mov
inc
and
lret
sbb
std
mov
mov
lds
and
jg
ja
jae
aaa
add
inc
xchg
push
fwait
mov
cmpsl
push
xor
fists
inc
outsb
dec
jl
jge
xchg
pop
lcall
mov
sub
xchg
xor
stc
pop
xchg
jle
mov
xchg
or
sbb
sub
fisttpl
out
test
movsb
and
pop
adc
sbb
jno
aam
sbb
test
jbe
jb
aaa
lcall
loopne
inc
adc
inc
dec
aas
pop
adc
mov
lret
mov
cmp
fistps
stos
xchg
pop
inc
adcl
dec
fwait
cmp
enter
pushf
lods
dec
out
mov
adc
imul
push
mov
jae
mov
les
push
inc
xchg
xor
out
andl
lea
fwait
push
push
sub
lcall
lods
setbe
pop
cld
mov
jnp
ljmp
inc
iret
push
xor
repz
push
iret
je
inc
stos
mov
mov
inc
mov
cld
fs
test
pop
popa
jg
pop
movl
je
in
mov
jg
daa
andl
cmp
add
jecxz
jnp
scas
or
cmp
push
push
mov
mov
dec
js
xchg
and
cmp
adc
push
jnp
pop
push
in
jno
jbe
bnd
push
sbb
or
je
mov
pop
out
lods
xchg
push
sub
imul
jne
shll
or
mov
dec
sahf
push
push
cmc
orb
je
cmp
pop
fdivrl
jae
insb
fwait
test
push
jb
sbb
pop
cmp
icebp
mov
imul
ret
cmp
dec
out
cmp
dec
subb
int
push
outsb
lods
insb
insb
or
nop
sub
inc
lods
inc
mov
mov
inc
ds
jp
ret
xor
mov
lret
test
pop
loope
out
pop
inc
or
sbb
mov
dec
jbe
add
scas
add
xchg
inc
imul
icebp
test
and
imul
xchg
jmp
outsb
ljmp
cltd
icebp
xchg
pop
and
inc
xchg
jg
mov
xchg
cmp
and
data16
xchg
shlb
cwtl
xchg
cs
inc
push
sbb
pop
xchg
sub
jl
dec
jge
mov
das
jnp
stos
iret
jl
or
inc
jns
cmp
cmpb
sbb
aam
inc
lock
mov
lds
int
adcl
insb
cmp
mov
sahf
sub
push
jbe
imul
iret
loope
cmpsb
cmc
movsb
dec
shrb
loopne
lods
pushl
mov
repz
jp
mov
push
mov
add
lds
lock
scas
cmp
pop
mov
dec
mov
mov
lret
cmpsl
sbb
ja
mov
pop
sbb
dec
fidivrl
mov
imul
inc
loop
lods
jbe
dec
pop
mov
and
pop
mov
mov
add
movsb
ljmp
mov
popf
mov
cld
mov
jo
cmp
pop
rcrl
and
in
mov
cmp
jge
sbb
dec
or
notl
cmp
popa
insb
popa
add
and
jne
mov
mov
push
pop
addl
stos
daa
sbb
fistps
jno
movsb
mov
dec
test
lods
jmp
sbb
loop
cld
mov
leave
and
mov
js
inc
xor
add
or
nop
xor
or
testb
fs
sbb
inc
adc
xor
loop
and
push
adc
in
roll
and
jl
iret
icebp
cmpsb
inc
int3
pop
loope
push
pop
outsb
jns
jb
adc
insb
mov
or
ret
hlt
jg
push
enter
jle
cmp
push
sub
push
xchg
sbb
and
addl
dec
rcrb
js
out
cwtl
ret
xor
je
cmp
dec
imul
mov
cmp
in
cmc
fwait
stos
sbb
out
push
and
pushf
push
adc
xor
inc
and
mov
sahf
gs
lock
xor
stos
out
push
mov
pop
dec
repz
cmp
adc
idivb
adc
pusha
xchg
push
pop
insl
jecxz
mov
mov
ret
jg
lock
loop
fdiv
insb
sub
xor
ret
mov
cltd
push
push
ret
out
push
mov
push
mov
sub
into
adc
jo
sarl
pop
lcall
lcall
lods
sahf
lock
adc
xchg
and
cltd
mov
lret
mov
cmpsb
sbb
daa
inc
movsb
xchg
stc
pop
add
outsb
hlt
test
add
push
shrl
gs
fwait
insl
jo
dec
dec
jbe
inc
notl
push
aam
and
add
push
jnp
iret
dec
cmp
mov
daa
add
out
push
inc
in
outsl
xor
je
sub
dec
fldcw
data16
outsb
sbbl
xchg
je
add
mov
and
jno
inc
call
adc
cmp
or
lahf
in
inc
push
push
mov
sub
clc
out
xor
xchg
and
xchg
adc
idiv
xor
arpl
lahf
movsl
cmp
ret
inc
and
out
mov
jbe
shll
imul
adc
push
fs
call
and
mov
push
pop
insb
dec
inc
addr16
nop
repnz
dec
ret
push
pop
mov
dec
dec
pushf
lahf
and
scas
push
insl
clc
cmp
adc
js
je
mov
lods
lock
gs
mov
stos
add
mov
lds
push
sbb
loop
outsl
jnp
or
cs
loope
aad
jl
cmpsb
mov
pop
dec
cld
jmp
in
xlat
aad
jno
xor
sub
or
fcomip
jmp
shl
xchg
mov
imul
push
enter
jno
push
icebp
std
pushf
pop
fwait
jae
mov
test
pop
push
sub
outsl
hlt
jne
adc
adc
loop
lcall
push
fwait
mov
hlt
and
pop
in
push
and
jmp
and
gs
and
mov
fdivrp
test
push
loope
loope
shl
stc
mov
mov
pop
xor
jle
lods
push
push
push
shlb
jo
pop
inc
xchg
sbb
fwait
loope
mov
cld
lods
add
xchg
stos
mov
cltd
mov
sbb
popf
fsubrl
daa
xor
mov
sub
in
repz
sbb
and
data16
lea
pop
cmp
pop
sub
iret
stc
sub
xor
inc
jge
popa
xchg
dec
popa
sbb
xchg
loopne
jp
xor
pop
and
lret
clc
cbtw
in
outsb
cltd
mov
nop
jae
xor
xor
outsb
xchg
push
push
inc
add
inc
cwtl
dec
lret
dec
inc
and
mov
in
arpl
mov
arpl
xor
adc
jb
push
andb
shrb
mov
clc
nop
inc
popf
inc
ret
or
push
orl
ret
adc
mov
loope
stos
push
sub
jne
mov
inc
xchg
test
dec
xor
js
dec
jbe
xchg
xchg
pusha
lahf
mov
inc
xor
and
dec
lret
sahf
test
push
aam
test
push
mov
loope
xor
shlb
xor
xchg
ss
aam
iret
mov
test
add
in
push
mov
cs
dec
clc
imul
and
and
push
int3
icebp
les
ret
cltd
mov
mov
pop
inc
outsb
add
xlat
sarb
in
pop
lods
ret
mov
icebp
adc
dec
dec
mov
js
dec
cmp
pop
adc
in
xor
mov
xor
inc
cmc
and
outsl
inc
mov
add
push
data16
dec
jbe
fwait
out
flds
xchg
test
add
xor
inc
push
test
xor
push
and
out
dec
or
sub
cmp
dec
add
xchg
mov
insb
cmp
add
std
imul
xchg
mov
ss
or
xchg
jb
lods
dec
ret
jb
shlb
add
adc
and
push
insb
or
jmp
jno
sbbb
fists
or
pop
xchg
test
mov
dec
sbb
in
xor
loop
dec
add
jle
addb
xor
aaa
lds
cmp
cmp
adc
cmp
or
stos
xchg
adc
mov
or
xchg
jge
adc
inc
pop
and
insb
sub
mov
js
bound
push
add
call
aam
mov
iret
enter
dec
jb
jmp
in
incb
shlb
lahf
mov
push
xchg
and
cmp
icebp
inc
clc
dec
ss
pop
imul
mov
jecxz
es
ds
inc
int
loop
mov
icebp
lahf
add
fs
inc
lahf
dec
pushf
push
je
dec
lds
adc
mov
push
mov
jg
inc
sbb
xor
dec
imul
jo
cmp
dec
ret
clc
sub
dec
xchg
ss
outsb
fnstsw
loopne
fscale
lods
dec
dec
leave
movsb
xor
hlt
mov
test
xchg
and
mov
mov
and
push
pop
mov
adc
xchg
push
insb
je
sarb
add
ret
ret
lds
icebp
sbb
ror
dec
mov
mov
push
jge
pop
push
outsb
or
fs
xor
push
enter
cmc
enter
sahf
lahf
sub
repz
mov
ror
xchg
xchg
in
int3
mov
hlt
ds
xchg
jg
mov
orb
xchg
popf
xchg
lcall
push
ret
addr16
shl
cmp
add
mov
hlt
outsb
cmpsb
mov
mov
loopne
ret
daa
mov
pop
nop
or
push
xor
outsl
jo
dec
mov
pop
cmp
addr16
int
sahf
pop
ljmp
adc
cli
jecxz
or
mov
jb
inc
roll
into
lds
repz
inc
bound
mov
mov
mov
and
hlt
xor
lahf
imul
sub
mov
xchg
dec
arpl
push
leave
roll
adc
cld
xor
mov
cmp
lock
and
leave
sub
xor
divl
xacquire
pushf
clc
ljmp
ja
subl
add
sub
stos
pop
lea
mov
sbb
ret
mov
xchg
scas
pop
adc
das
push
in
sub
sub
sbb
mov
bound
mov
jo
or
clc
repnz
xchg
and
cmp
fsub
fs
sub
and
stc
cmp
outsb
or
mov
and
sbb
leave
iret
notb
or
xor
sbb
test
mov
pusha
inc
sub
xchg
push
and
mov
imul
mov
iret
sbb
xchg
div
rorb
inc
addr16
fisubl
and
push
mov
inc
xor
aad
ret
fsubs
and
les
sbb
ret
ret
cmp
rcrb
fcoml
lods
pop
sbb
xor
rcl
push
cmp
jae
adc
inc
icebp
sub
mov
rcrb
outsb
movsl
fwait
lods
mov
inc
mov
mov
sub
push
lcall
movsb
inc
inc
nop
lea
mov
jb
outsl
jae
mov
xchg
call
mov
cmp
or
fidivl
outsb
data16
hlt
add
mov
out
lods
inc
mov
mov
mov
jo
ret
cwtl
lret
jne
and
push
outsl
push
cmc
push
in
out
and
dec
rol
xor
lret
xor
aam
cmp
ljmp
addr16
js
lea
gs
sti
roll
mov
jb
jl,pn
ret
adc
inc
pop
pop
mov
sub
sub
sbb
mov
in
inc
dec
pop
shll
xor
test
gs
insb
data16
lock
fildll
xchg
adc
add
imul
xchg
addr16
mov
inc
pop
mov
push
movsl
cmc
js
cmp
jbe
mov
adc
test
jb
imul
dec
shl
jmp
jmp
and
shll
in
mov
mov
sub
roll
dec
imul
adcl
sub
inc
xchg
sbb
dec
lods
roll
jns
xchg
mov
xor
sub
or
jo
insb
lock
sbb
and
das
fimuls
pop
fcomi
testb
inc
xchg
mov
arpl
jbe
int
ds
jb
je
cmpsb
aam
lret
mov
stos
cltd
faddl
push
lock
mov
sbb
cmp
cmpb
xchg
test
xchg
cmp
inc
mov
jne
inc
sub
faddp
adc
leave
or
out
popa
pop
cmpsb
jnp
cli
lea
xor
repnz
cmc
mov
cmp
lret
push
int
pop
icebp
movsl
inc
fists
cmp
mov
cs
fildll
in
lahf
scas
mov
dec
and
add
push
and
pop
xlat
hlt
lods
loope
frstor
jl
pop
pop
fbld
sub
call
adc
and
inc
mov
and
inc
mov
inc
mov
dec
xor
idivl
fsubl
lods
mov
testl
es
daa
outsb
jmp
mov
dec
mov
int3
dec
xchg
shl
sub
loop
int3
imul
fldenv
xor
scas
loope
test
fdivrs
scas
mov
cmpsl
jge
pop
cltd
test
and
int3
and
sub
inc
cmp
pop
xchg
jne
sarl
into
je
push
imul
jo
iret
cmpsl
popf
push
lahf
dec
js
loope
jnp
shr
lods
cmpsl
push
jns
push
loopne
mov
jp
out
stos
pop
fisubl
mov
push
dec
jne
xchg
adc
xchg
sbbb
sahf
push
sbb
cmp
mov
push
ja
and
popa
mov
xchg
icebp
pop
movsb
inc
dec
jnp
insb
insb
daa
iret
jge
add
hlt
mov
fbld
xor
add
addr16
lods
or
xor
hlt
push
scas
or
dec
pop
das
dec
pop
shrl
sub
mov
adc
fs
mov
fndisi(8087
inc
add
mov
inc
andb
popa
hlt
shlb
xor
fistps
mov
or
push
xchg
sbb
inc
add
ss
ljmp
negb
and
push
aas
or
jne
pop
ja
xor
inc
add
jo
iret
add
movsb
push
push
clc
shrl
popf
push
inc
xchg
dec
jle
sbb
mov
cmp
ret
mov
int3
xor
imul
dec
and
pusha
fsubl
xor
push
out
pop
es
pop
mov
jg
adc
out
add
push
lret
adc
mov
push
inc
add
xchg
ret
push
dec
popf
mov
cld
sub
xor
aaa
inc
stos
lds
pushf
and
push
and
cmp
gs
ljmp
aam
ret
mov
enter
mov
lahf
mov
cmp
adc
dec
add
adc
aam
enter
cmp
mov
mov
sbb
cmp
ret
jle
insl
dec
stos
xchg
mov
jo
iret
jbe
lret
scas
enter
pandn
cmp
dec
mov
and
cmc
pop
shr
or
and
lock
aas
and
fwait
jb
adc
mov
jo
push
mov
cmc
movsb
in
cli
dec
jg
fcoml
sahf
sbb
test
lock
xor
ret
imul
jbe
iret
push
mov
sti
cmpsl
int
mov
arpl
jnp
rorl
sbb
ja
lods
je
sbb
inc
push
lahf
mov
jno
mov
loopne
roll
adc
xor
incl
add
pop
insb
dec
popf
push
mov
cmp
gs
addr16
es
inc
loopne
dec
mov
ret
inc
pop
inc
pop
mov
out
int
ret
and
les
push
adc
ret
cmp
mov
and
pop
mov
pop
dec
mov
int3
inc
sbb
dec
stc
and
inc
jp
iret
ficompl
cwtl
cwtl
cmp
mov
ljmp
push
dec
enter
rcl
push
stc
adc
fsubl
stc
test
hlt
mov
push
or
dec
push
imul
add
dec
cmp
push
adc
jae
xor
popa
adc
bound
jg
or
xchg
push
push
test
adc
adc
lret
xor
nop
add
call
dec
inc
aas
cmp
and
or
ret
xor
fcomi
aad
pop
xchg
popa
jns
and
push
shlb
daa
ljmp
test
mov
pop
push
sub
cmp
out
js
cmp
pop
icebp
push
jp
jmp
aad
xchg
shlb
and
sub
sub
arpl
mov
sub
mov
sbb
xorb
xchg
cmp
cs
xchg
data16
pop
adc
sbb
jo
xchg
dec
dec
sbb
ret
inc
cltd
repz
mov
inc
adc
pop
add
inc
loopne
adc
dec
add
xchg
mov
ljmp
aas
dec
sub
test
fadd
cmp
mov
fldenv
and
lea
and
jp
movsb
jmp
pop
lret
add
adc
mov
adc
sbb
cmp
int3
xchg
fucomip
je
xorb
sbb
adc
and
xchg
imul
fcoms
addr16
iret
jl
sub
mov
movsl
sbb
sarb
jecxz
inc
jo
add
ficomps
mov
shlb
mov
mov
pop
mov
sbb
dec
call
pop
push
mov
and
rclb
jbe
inc
inc
xchg
cltd
mov
pop
nop
ret
clc
js
std
repz
lock
adcl
and
jno
pop
sub
bnd
push
and
jb
sarl
loop
xchg
and
ljmp
add
mov
push
or
push
jl
ret
ja
shlb
inc
jb
ljmp
sub
out
enter
lret
sub
mov
cld
dec
aas
mov
out
mov
int3
mov
push
repnz
ds
pop
mov
push
dec
and
movsb
dec
and
jns
stos
pop
cli
sub
call
mov
int3
push
xchg
daa
jo
lods
pop
jae
lahf
mov
and
outsl
repnz
in
jp
dec
mov
movsb
inc
test
popf
push
ljmp
lds
test
fmuls
xor
cmp
pop
push
cmp
ret
lods
jbe
add
in
fcoml
sub
sbb
add
mov
lods
out
add
mov
cs
loopne
jns
mov
pop
jne
testl
jns
mov
sub
fdivl
xor
sbb
dec
lods
jb
fdivs
je
sbb
sbb
cmp
test
fldenv
mov
bound
cmc
fistl
dec
jne
arpl
dec
and
sbbb
push
sub
or
je
popa
imul
sbb
jp
fcmovne
cld
adc
sub
fsubs
cmp
xor
dec
in
lds
add
sbb
mov
movsb
gs
inc
addl
and
out
ret
and
pop
jno
and
push
test
leave
orb
jae
sahf
cmp
jo
sbb
and
insb
mov
sbb
sbb
mov
cmc
fwait
pop
imul
xchg
lds
imul
aam
push
fmull
leave
cmp
sbb
xorl
in
dec
fs
dec
add
mov
cltd
je
sahf
mov
dec
repz
lahf
insl
sub
jno
iret
mov
add
sub
add
and
inc
outsb
hlt
mov
in
subl
ret
rcrb
pushf
xchg
aam
scas
mov
jnp
movsl
push
lods
mov
scas
cltd
adc
movsl
sub
and
sbb
bound
push
imul
sub
cmpsb
rolb
insb
repz
incb
adc
sbb
push
push
inc
or
imul
inc
in
popf
loope
pop
push
jo
jnp
jne
shl
jns
jns
sub
test
sub
aam
fs
xchg
dec
push
cwtl
cmpsb
add
imul
popa
cmp
xor
mov
pop
leave
cmp
lcall
dec
out
sti
cmp
mov
cmp
int3
mulb
repz
and
div
mov
push
and
adc
jb
inc
mov
dec
stos
addr16
aam
aam
out
or
push
mov
mov
add
pop
int3
add
mov
cmp
and
dec
sub
xchg
movsb
or
jg
inc
gs
test
inc
repz
movsl
cmpb
pop
jbe
sub
lahf
repz
das
and
xor
push
sbb
xor
sbb
aam
adc
mov
adc
addr16
insb
xor
mov
jo
jle
in
insb
inc
adc
adc
jge
movsl
out
cltd
mov
repz
and
and
clc
popl
push
cmpsb
adc
mov
frstor
out
jl
jl
jo
inc
addr16
xor
in
dec
loopne
mov
mov
cld
stc
sbb
sahf
xchg
lock
dec
iret
adc
sub
sbb
cs
adc
iret
adc
add
bound
pop
jb
push
sbb
dec
add
mov
jo
mov
mov
leave
cmc
popa
sbb
push
xor
popa
cmpsl
out
stos
icebp
mov
fisubrs
out
push
mov
xor
gs
test
mov
dec
loopne
dec
enter
push
inc
out
sub
cli
jbe
ficomps
in
out
xchg
out
adc
cld
xor
dec
or
mov
or
test
pop
in
push
fs
je
xor
mov
dec
pop
into
movsb
cmp
stos
mov
pop
cmpsb
in
rcll
ret
popa
arpl
imul
and
xor
and
es
mov
lods
mov
pop
sahf
mul
mov
test
push
xorb
gs
mov
addl
jge
xchg
jo
xchg
pop
rolb
inc
loopne
ds
enter
xor
push
les
push
addl
data16
xchg
fneni(8087
xorb
iret
cmp
sub
mov
add
inc
fwait
xor
mov
fsubrp
cli
leave
mov
cmpsb
xor
insb
xchg
xchg
push
or
inc
mov
dec
sbb
mov
cmp
mov
icebp
mov
pusha
cwtl
sub
cld
push
popf
mov
gs
jns
dec
call
sub
pop
or
xchg
lock
test
test
out
dec
mov
repnz
pusha
cmp
das
loop
dec
jbe
xchg
aam
popf
movsw
icebp
test
icebp
push
idivb
inc
sbb
dec
test
jns
sarl
gs
insl
inc
fs
xor
sbb
adc
and
cwtl
add
lods
xor
xchg
pop
ret
pop
pop
cld
fistps
aam
jno,pt
outsb
adc
mov
fadds
push
in
cld
out
movlps
push
mov
bound
mov
test
insb
jnp
mov
lcall
cld
jl,pn
push
mov
pop
clc
jge
push
popf
push
jb
sbb
jae
inc
ja
scas
pop
adc
jno
insl
int3
xchg
dec
sahf
addl
pop
mov
mov
xchg
push
mov
cmp
es
stc
jns
or
cltd
insl
adc
mov
dec
or
xor
test
xchg
jo
insb
pop
out
sub
fisubs
nop
inc
xor
add
fsubl
lods
xchg
mov
cmp
mov
cmp
mov
pop
in
aam
scas
mov
subl
sbb
inc
mov
imul
add
xchg
mov
xor
inc
testb
and
push
nop
add
push
int3
inc
mov
pop
sub
adc
out
iret
add
test
jle
jo
xchg
aam
sub
mov
fisttps
jl
sahf
bound
inc
sbb
and
sub
jb
xor
add
jnp
add
ret
xor
call
cmc
mov
sbb
inc
stc
mov
cmp
pop
pop
xchg
fwait
jb
xor
in
sbb
gs
add
arpl
call
add
mov
jae
subl
int3
cmp
adc
mov
cmpsl
lods
mov
inc
mov
mov
add
xchg
insb
fldcw
and
pop
jne
adc
aad
add
pop
adc
dec
lock
je
inc
aam
mov
popa
andl
or
mov
mov
je
cli
and
push
and
sbb
sub
iret
addr16
cmpsb
fisttpl
sbb
js
jnp
xchg
je
out
js
leave
jo
hlt
sahf
or
notl
sbb
cmp
push
ret
cli
sbb
mov
cmpsl
js
add
push
popa
cmp
je
push
insl
or
xchg
lret
leave
fwait
sbb
jne
add
sahf
gs
fadds
filds
push
jl
inc
cli
inc
jne
mov
push
imul
xor
imul
bound
sbbl
mov
xor
jne
out
bound
jmp
jmp
out
shlb
repnz
mov
or
xchg
addl
jbe
and
jo
jb
lcall
arpl
xchg
mov
inc
mov
loopne
sub
imul
movsl
add
push
int3
testb
jno
push
mov
popf
push
nop
jecxz
int3
clc
je
push
push
adc
sub
and
dec
sbb
sub
imull
push
leave
adc
out
jno
cmpl
dec
adc
pop
cltd
cld
popa
jno
out
leave
push
ret
adc
pop
pop
lcall
mov
inc
dec
lahf
jns
push
inc
dec
sub
rorb
adc
sub
out
pop
pop
push
jnp
mov
mov
cwtl
bound
mov
faddl
mov
jnp
add
mov
sbb
jle
pop
and
dec
jle
xchg
inc
mov
push
test
insl
sub
mov
cmp
jmp
inc
inc
dec
xchg
jle
adc
push
fsubl
pop
pop
lcall
sub
sahf
add
cmp
pop
call
clc
mulb
cmp
test
and
mov
inc
ret
mov
lahf
mov
push
pop
repz
inc
stos
js
or
push
jo
loop
repz
lds
fnstenv
aam
adc
dec
jbe
testl
mov
leave
inc
outsb
ja
jo
mov
xor
loop
fsincos
cwtl
jae
mov
in
mov
cmp
xchg
push
or
jg
add
push
lcall
push
bound
push
hlt
mov
pop
loop
clc
ret
jecxz
ss
aas
jae
sbb
stos
lods
jnp
insl
daa
mov
sub
and
stos
push
sub
dec
pop
and
movsl
push
inc
push
push
jl
call
dec
je
popa
rorl
push
jbe
push
push
cmpsl
and
mov
add
loopne
ret
mov
xchg
jne
ljmp
inc
lock
sbb
insb
fisttps
es
gs
pop
aaa
push
nop
and
push
je
jp
je
mov
jecxz
jno
std
fs
dec
dec
mov
xchg
std
outsb
cmp
faddl
and
push
mov
ret
hlt
cmp
rorl
movsl
lahf
jb
mov
mov
int3
dec
insb
push
les
movsb
mov
mulb
xchg
jbe
movsb
sub
cld
stos
mov
fwait
add
cmpsl
push
inc
iret
or
hlt
and
stos
push
call
mov
mov
test
insl
cwtl
push
add
mov
cmp
cmp
in
leave
jecxz
cli
dec
repnz
xlat
imul
cmp
stos
cwtl
dec
inc
test
dec
pop
dec
xchg
loop
jno
insb
inc
test
faddl
imul
loopne
sub
mov
mov
and
out
jnp
add
mov
pop
push
jbe
add
enter
pop
gs
jl
mov
push
outsb
ss
ss
xchg
arpl
lods
mov
stc
icebp
enter
insl
cmp
push
push
jp
popf
sub
xor
jl
shrb
dec
cmpsb
rol
xor
mov
leave
push
add
inc
ret
or
inc
call
cmp
pop
push
xchg
push
ds
gs
xor
sub
inc
xor
adc
pop
adc
div
insb
jb
inc
loop
dec
mov
jp
ljmp
inc
push
sbb
loopne
std
iret
js
dec
inc
adc
outsb
test
clc
int3
adc
jns
inc
mov
dec
les
nop
sub
js
dec
sub
mov
pop
movsb
loop
arpl
cmovs
inc
jmp
push
sub
popf
loop
add
jns
int3
cmp
rorb
sub
clc
sub
sub
fisttps
imul
movsb
jl
lret
mov
test
mov
push
imul
clc
scas
fidivs
sub
das
incb
daa
jno
nop
jle
jns
sbb
push
and
inc
out
push
cmp
rolb
push
or
out
ficomps
and
jecxz
les
jl
jnp
dec
jo
in
fs
pop
or
in
dec
popa
fs
aaa
sbb
ret
sbb
nop
push
inc
ja
mov
inc
insb
pop
cli
dec
cmp
cltd
icebp
jnp
nop
and
imul
imul
hlt
sahf
out
jae
xor
mov
fs
addr16
adc
out
sbb
ret
aam
inc
hlt
aad
dec
and
outsb
dec
outsl
int3
jnp
imul
xchg
mov
dec
sub
aas
je
insb
mov
les
jecxz
pop
dec
aad
inc
inc
xlat
imul
lret
and
addb
and
in
add
inc
xor
xor
in
in
mov
jecxz
gs
in
push
mov
sub
mov
mov
ljmp
adc
rcrl
jecxz
lcall
mov
inc
mov
push
bound
loopne
lock
mov
popf
inc
outsb
loopne
jno
les
inc
cs
test
sbb
ret
cmp
pop
movsb
inc
xor
dec
test
rclb
orb
mov
fcmovnbe
iret
and
in
cmp
sbb
push
mov
or
movsl
cld
cmpb
inc
dec
sub
in
lock
cwtl
sub
xor
movsb
mov
ret
iret
in
jnp
cmp
and
jmp
lock
test
push
lret
jl
push
js
movsb
call
xor
es
ss
cwtl
sub
lret
pop
cmp
cmp
test
mov
ret
sub
inc
adc
lret
mov
je
hlt
and
imul
mov
adc
and
mov
stc
pop
fnstsw
inc
movsb
pop
and
and
mov
jb
cmp
dec
lret
inc
mov
lods
std
mov
dec
sub
push
mov
scas
test
jmp
adc
mov
jle
sub
out
popa
lea
pop
ljmp
push
dec
aas
mov
jp
and
inc
push
mov
jl
sub
dec
fwait
sub
sarl
lret
xchg
mov
xor
daa
mov
pop
push
inc
mov
jnp
scas
repnz
pop
mov
mov
cmp
jne
nop
filds
cwtl
cmp
jno
sub
and
iret
inc
or
push
enter
imul
scas
cli
push
push
jle
fucomp
xchg
arpl
jp
jle
jbe
xor
xor
fistl
lahf
sub
mov
ret
fdivrs
pop
push
xchg
inc
cmc
aaa
add
xor
aam
loopne
jp
jg
lock
std
cmp
inc
enter
test
test
add
jp
inc
call
and
test
nop
push
add
push
inc
out
je
sub
pop
test
nop
test
mov
fmuls
pop
lock
ret
out
and
mov
xor
push
cmp
out
cmp
and
inc
push
fs
dec
jne
out
data16
outsl
jbe
or
test
sub
test
loop
lcall
sub
out
es
push
xor
loopne
mov
xor
add
sbb
daa
sub
iret
sbb
lds
ljmp
arpl
dec
mov
out
sarb
xor
push
push
add
jne
aad
adc
mov
sub
cmp
push
das
testb
mov
inc
add
outsl
inc
xorl
in
sbb
aaa
rcrb
lret
xor
mov
out
sub
mov
pushf
adc
jge
xorb
nop
nop
call
xchg
xor
movb
inc
push
push
mov
test
inc
xor
cld
inc
add
test
jmp
lock
loope
imul
shll
inc
fbld
inc
nop
mov
mov
cmpsl
std
xorl
shrb
jnp
pusha
cmp
in
and
test
and
push
xor
adc
add
es
adc
test
and
push
bnd
mov
xchg
lock
mov
xchg
and
imul
arpl
sub
and
mov
mov
sub
cmp
sbb
jne
cltd
cmp
mov
xchg
and
jns
jge
lret
sub
xor
and
add
and
inc
jnp
adc
repz
loopne
adc
jo
jecxz
and
imul
shll
xorl
and
and
mov
jo
pop
push
push
cmp
repnz
in
mov
stos
sbb
cmc
or
rcrb
cld
out
cmpsl
int3
sub
dec
and
dec
addr16
gs
scas
fcomps
sbb
lods
jecxz
scas
and
insb
pop
fwait
inc
cmp
jmp
fidivrl
dec
inc
inc
mov
subb
mov
in
mov
leave
push
sbb
call
inc
adc
loop
xor
mov
inc
xlat
loop
mov
mov
nop
adcb
jne
sbb
xor
cmp
xorb
xchg
adc
add
inc
andb
insl
sub
mov
rolb
mov
mov
pop
fwait
mov
icebp
cli
data16
cmpsb
js
mov
iret
push
cld
lods
loope
add
outsb
push
je
jo
shlb
mov
outsl
cld
adc
les
xorb
repz
inc
xchg
and
ret
sbb
inc
cmp
xor
inc
push
xchg
and
addl
daa
mov
adc
fisubl
lock
cmc
cmp
mov
push
hlt
push
xchg
fistl
cld
lods
push
dec
and
cmpsb
shrl
bound
inc
adc
and
mov
cmp
cld
pop
stos
arpl
test
xchg
aam
in
push
adc
ret
xchg
ljmp
inc
pusha
test
imull
negb
sub
adc
aas
dec
mov
cld
and
cli
gs
xor
adc
cmpsl
sub
stos
mov
push
and
sub
xchg
fwait
scas
pop
hlt
sbb
call
gs
mov
cmp
push
stc
loopne
fs
int3
dec
fsqrt
imul
add
int3
jp
xchg
pop
inc
into
jmp
imul
gs
sbb
leave
fcoml
push
xor
pextrw
lock
fwait
inc
fnstenv
pusha
jnp
jecxz
or
cmp
mov
adc
insl
push
test
fists
xchg
cmp
add
sub
dec
mov
inc
sti
sbb
lds
adc
gs
and
inc
push
mov
or
and
and
xor
mov
imul
in
gs
fs
and
pop
ret
adc
enter
pop
lcall
cltd
pop
enter
rcll
in
repnz
in
mov
xchg
jno
sbb
popa
sub
fisubrl
add
ret
bound
xchg
ss
mov
push
push
pop
outsb
into
icebp
inc
fidivrs
in
lahf
data16
mov
xor
loope
pop
cli
mov
ret
dec
push
into
add
adc
or
mov
addr16
add
dec
cmp
shlb
dec
push
les
bound
sub
pop
mov
mov
mov
ret
test
xor
in
loope
add
test
sbb
js
mov
jg
pop
xor
in
repz
mov
inc
adc
aas
sub
pop
mov
sub
ret
mov
add
lods
xor
sbb
mov
and
movsb
pop
cwtl
mov
mov
jno
mov
push
jecxz
sbb
jmp
and
xchg
cmp
xchg
adc
dec
or
jo
mov
fwait
gs
ret
cmpb
test
sbb
push
inc
lods
lods
pop
bnd
mov
sub
stc
imul
out
add
and
dec
repnz
loop
push
push
test
js
xor
sbb
push
lods
fimull
cld
loope
cmp
adc
icebp
fimuls
outsb
xchg
push
scas
jb
mov
ss
sub
jne
cmp
mov
stos
outsb
fwait
push
aaa
add
addr16
cltd
or
or
and
push
cld
imul
adc
cmp
or
mov
das
xchg
adc
outsl
inc
andl
inc
das
sbb
rcll
xchg
aaa
test
mov
push
jo
and
data16
mov
push
aad
and
dec
adc
adc
lds
sub
jo
out
inc
and
add
or
xlat
and
cmpsb
add
inc
mov
out
ret
in
int3
ret
daa
pop
test
jge
xor
cmp
jbe
data16
int
lods
popf
icebp
loop
jb
je
mov
lahf
dec
jb
push
insl
jb
cltd
lods
imul
xchg
clc
jl
sbb
inc
les
shlb
cmp
iret
in
das
cmc
aam
scas
pop
mov
lret
adc
pop
insb
lods
mov
add
dec
or
fisubrl
adc
dec
in
mov
cmp
push
mov
mov
and
ljmp
pop
mov
jbe
orl
mov
mov
adc
aaa
inc
iret
repz
sahf
sub
inc
and
and
xorl
rclb
pop
push
js
and
xor
rorb
lock
inc
jo
cld
cs
dec
add
sbb
out
es
dec
call
xor
insb
out
mov
mov
jne
insb
inc
mov
movl
xorb
dec
hlt
fcomip
mov
adc
add
push
xor
ret
push
xchg
mov
in
dec
sbb
loopne
js
and
orl
addr16
lods
lahf
mov
popa
push
mov
bnd
out
in
and
fwait
ret
inc
push
push
pop
xchg
cwtl
dec
dec
shlb
insl
insb
xchg
pushw
call
iret
or
incl
mov
frstor
mov
mov
xchg
sbb
loopne,pn
test
mov
outsb
loope
out
add
adc
loopne
loope
mov
out
pop
jl
sbb
iret
mov
inc
loopne
out
repnz
dec
mov
pop
fmuls
les
lds
sahf
les
shrb
mov
inc
mov
jno
inc
jo
mov
jb
and
pop
dec
fs
add
push
lahf
scas
sbb
sbb
shll
call
js
lahf
lea
sub
aas
addr16
jp
fnsetpm(287
cmp
addr16
push
mov
mov
js
shl
sarb
imul
sub
insb
cwtl
mov
ficompl
pop
gs
sbb
je
xchg
stos
ret
mov
ds
cmp
jae
and
inc
xor
mov
xchg
inc
xchg
add
mov
cmp
scas
ret
in
inc
or
stc
lods
pop
mov
inc
xor
lods
leave
and
jne
and
inc
mov
pop
fildl
pop
jecxz
je
adc
lea
iret
inc
cmp
and
rorb
iret
test
out
sbb
mov
jp
cmc
pop
fiaddl
ljmp
mov
push
ljmp
rorl
sbb
adc
es
imul
subl
mov
jno
stos
xchg
xchg
dec
xchg
push
pop
out
out
adc
sti
sub
jno
add
das
sub
xchg
stos
cwtl
fisubs
and
inc
jp
subb
mov
xchg
mov
cmp
jp
xchg
lcallw
fbld
inc
jo
jecxz
cmp
mov
and
add
xor
fstpt
mov
stos
xchg
adc
inc
sub
sub
dec
mov
or
fbld
cmpsb
jecxz
mov
add
cltd
sbb
popf
add
ret
scas
loopne
xchg
sub
sub
cwtl
dec
inc
pop
aas
jbe
and
je
iret
cmp
xor
push
push
outsl
mov
popa
or
cmp
insl
push
loopne
daa
push
ja
inc
mov
loopne
mov
icebp
popa
outsb
adcl
inc
xchg
loope
sbb
bnd
inc
push
xor
shl
add
adc
loopne
in
lock
cli
push
shlb
push
pop
cmp
jl
ret
arpl
pop
loope
inc
jb
ja
dec
out
push
test
ret
jecxz
jl
cs
loopne
movsbl
xchg
xchg
or
jl
test
adc
in
fistpl
sub
outsl
cld
fcoml
pop
pop
and
inc
xor
xchg
or
and
push
outsb
repz
int
inc
shl
ja
pop
fisubl
loop
lods
loopne
push
insl
add
pop
insb
cs
shlb
xchg
lret
fwait
out
cmp
inc
and
adc
jne
iret
xor
add
movsb
mov
mov
clc
jge
out
pop
sbb
pop
mov
fadd
js
add
arpl
rcl
push
lods
add
lahf
pop
cwtl
jle
sub
or
loop
xchg
push
add
sarb
pop
movsb
je
adc
adc
out
jmp
dec
cli
and
fwait
shl
data16
xchg
icebp
out
sub
mov
fldt
add
lods
jb
jns
inc
mov
push
popl
cwtl
mov
loopne
insb
cld
iret
lret
adc
inc
pop
cmp
mov
adc
cmp
hlt
aad
iret
pop
push
testl
push
push
mov
jl
movl
dec
inc
mov
int
and
cmp
lock
dec
rolb
xor
cmc
push
sub
test
outsb
add
frstor
dec
je
pop
bound
cmp
stc
in
mov
inc
xorb
ljmp
sbb
in
iret
call
call
lret
gs
cmp
repz
push
mov
fs
pop
sahf
movsb
inc
dec
xor
adc
push
pop
lock
test
in
outsb
cs
adc
mov
lods
aad
les
and
xchg
adc
ret
push
sbb
inc
sub
fdivp
inc
adc
and
ret
rcrb
mov
adc
jecxz
iret
or
cmp
inc
scas
sbb
popf
jbe
je
sub
popa
movsb
inc
adc
adc
pop
fisubl
iret
fdivs
mov
sahf
dec
in
inc
pop
iret
aaa
and
ret
das
dec
dec
outsl
mov
pusha
xchg
nop
pop
push
cs
jecxz
xor
fwait
push
mov
fsubrl
jmp
push
xchg
out
std
pop
data16
fadd
fsts
mov
js
sub
mov
jp
push
jo
mov
push
cld
jnp
repz
pop
adcl
in
clc
stc
mov
mov
mov
dec
jnp
adc
jg
xor
movsl
jo
in
loopne
lds
insb
add
dec
push
nop
and
add
mov
inc
out
xchg
icebp
mov
jne
in
arpl
stos
test
xor
jb
fwait
lock
ret
and
sub
stc
and
inc
adc
ja
xchg
orl
add
jo
mov
lds
xorl
rcrb
js
and
mov
dec
push
scas
inc
jge
add
lret
mov
cmp
jle
inc
dec
inc
icebp
sbb
mov
test
mov
test
jb
jo
and
test
sbb
inc
mov
push
inc
dec
imul
sahf
pop
int
xor
andl
jbe
xor
adc
sub
inc
sbb
fstpl
sub
mov
mov
int3
in
mov
inc
hlt
mov
mov
insb
sub
dec
push
dec
pop
and
xchg
leave
pop
or
push
inc
rolb
xchg
fs
hlt
rorb
push
inc
pop
sub
imul
mov
mov
sub
ffree
adc
and
and
bound
hlt
jnp
mov
lds
mov
mov
pop
leave
inc
and
flds
mov
xchg
divb
push
lret
testb
dec
pop
adc
sub
mov
rolb
je
and
xor
outsb
jecxz
cmp
jo
sub
sbb
mov
popa
or
pushl
inc
xor
movsl
jge
call
repnz
sbb
lcall
je
and
data16
jo
aam
and
mov
xchg
cmp
sbb
psraw
fsub
mov
jns
std
out
int3
inc
and
inc
popf
insb
inc
lods
sbb
sbb
hlt
inc
mov
je
dec
testl
cmp
sub
lret
sbb
pop
int
popf
mov
cmp
pop
rcrb
inc
mov
aam
lea
jbe
into
jnp
insb
std
cmp
std
ret
dec
stos
push
sbb
add
das
mov
sarb
filds
and
lahf
ret
lret
nop
in
iret
mov
or
xorl
lret
icebp
push
sbbb
lcall
add
jmp
sub
in
pop
mov
idivl
mov
rol
test
into
jne
and
dec
popa
adc
aam
ljmp
cmp
mov
inc
sbb
and
popa
test
push
mov
aas
daa
sub
popa
mov
xor
nop
cltd
mov
dec
pushf
jb
xorl
leave
mov
in
dec
mov
add
mov
push
mov
addb
movsb
addr16
gs
push
xor
cltd
lock
pop
mov
or
shlb
imul
adc
sahf
add
inc
rorb
icebp
sub
iret
repz
mov
mov
mov
add
sub
aas
inc
lcall
sbb
dec
cwtl
sub
mov
dec
stc
xchg
shrl
jo
add
fdivrl
dec
dec
adc
pop
jecxz
fadds
or
adc
out
loope
pop
mov
andw
adc
insb
sub
mov
aam
jg
push
jbe
movsb
mov
out
dec
pop
insl
xchg
popf
loope
or
mov
stc
and
add
push
pop
cmp
fwait
add
lds
pusha
cwtl
mov
dec
xchg
movsl
imulb
add
insl
fstpt
cmp
inc
or
push
xor
mov
icebp
push
pop
push
jmp
jl
inc
lods
push
sbb
push
pop
mov
mov
and
xor
mov
mov
cs
and
xlat
enter
cli
push
sarb
test
cmp
mov
inc
dec
add
push
and
push
hlt
test
xor
push
pushf
xchg
popa
jecxz
and
popa
lret
imul
popf
andl
das
jmp
clc
push
les
mov
icebp
lret
pop
xchg
mov
inc
ds
aam
jo
inc
rorb
enter
test
adc
adc
and
inc
mov
je
and
test
inc
andb
iret
xor
cmp
pop
fcoms
mov
inc
mov
push
sub
loope
test
aam
jno
push
mov
pop
pushf
mov
jecxz
xor
xchg
sar
dec
jo
fwait
push
cli
mov
enter
mov
hlt
push
mov
and
cmp
mov
dec
hlt
jbe
sub
add
push
int
and
test
xchg
cmc
andl
in
mov
jne
sahf
inc
adc
mov
aas
inc
lds
frstor
dec
je
loop
std
and
xchg
add
je
ret
adc
dec
ds
mov
and
mov
xor
hlt
mov
outsb
ret
mov
ret
and
enter
xchg
ljmp
popa
les
sub
sbb
xor
fwait
inc
jg
ljmp
ljmp
mov
movsb
adc
imul
inc
cmp
ret
mov
sbb
inc
subl
sbb
dec
lcall
rol
mov
orb
mov
jnp
fwait
cld
and
mov
inc
cld
jno
jecxz
iret
mov
add
mov
xchg
inc
lock
idivl
pop
xchg
jge
bnd
inc
outsb
cltd
jo
mov
aam
xchg
testl
cmp
mov
push
mov
fs
nop
in
jge
inc
rcrb
mov
or
clc
or
iret
pushf
mov
push
sub
add
push
hlt
mov
icebp
mov
jbe
inc
shll
mov
in
loopne
jp
pop
popa
ds
xorb
test
sub
and
mov
leave
repnz
cmpsb
cmc
jle
pop
je
sub
dec
sbb
dec
xor
mov
lods
xchg
in
insl
sbb
sarl
push
stos
js
dec
cltd
clc
iret
push
ret
and
ret
cmpsl
cmp
mov
cmp
out
pop
sbb
xor
mulb
inc
in
in
fwait
dec
data16
or
ss
jae
jo
xchg
ljmp
pop
test
xlat
mov
cli
sub
or
pop
ror
jbe
xor
inc
jecxz
imul
out
ret
faddl
cmp
inc
out
mov
fwait
js
push
jecxz
push
test
mov
xor
jbe
js
arpl
mov
pop
aam
or
jbe
push
cwtl
push
dec
xchg
sub
jl
push
xchg
jecxz
add
jo
add
ss
in
xchg
rclb
jnp
xor
push
dec
add
fsubl
jb
sbb
je
daa
data16
test
pusha
test
dec
jecxz
push
in
xchg
mov
add
xchg
xchg
dec
vmwrite
dec
insb
jmp
sub
sbb
iret
je
sub
std
scas
mov
outsl
sti
push
dec
flds
data16
add
fsub
jns
pop
int3
jecxz
sub
imul
inc
stc
mov
test
or
in
int3
jno
pop
sbb
jnp
fs
lods
lret
adc
inc
and
fmuls
inc
inc
push
popa
loop
or
push
dec
pop
add
push
sub
out
shll
int3
sub
mov
dec
mov
cs
xor
mov
add
inc
and
dec
mov
or
pop
lock
xor
xchg
cs
xchg
and
inc
push
das
ljmp
loopne,pt
les
js
rclb
mov
mov
sub
dec
mov
lahf
mov
rorb
cwtl
je
mov
cmpl
imul
and
ss
cmp
jo
sub
dec
fidivl
or
sub
fwait
hlt
sub
sub
je
aam
add
mov
inc
mov
inc
imul
sbb
scas
sbb
sub
cmp
movsb
dec
pop
cmp
sbb
xchg
popf
dec
xor
jmp
negb
les
inc
movsb
add
adc
adc
lret
push
pop
push
mov
jge
push
rcll
imulb
inc
add
adc
pop
out
and
jecxz
rep
add
rolb
sub
adc
dec
xchg
push
shlb
pop
in
lret
hlt
dec
add
pop
xchg
and
fdivrp
andl
lcall
add
out
sub
fisubl
iret
bound
jg
xchg
mov
jecxz
xchg
or
mov
add
dec
lock
mov
fwait
add
and
mov
and
icebp
pop
ficompl
lcall
jns
hlt
mov
lahf
inc
rcll
lods
pop
btc
movsb
inc
add
mov
and
stos
jo
push
outsb
pop
add
jo
inc
loop
adc
mov
pop
sbb
repz
test
js
jle
inc
movsb
rorb
frstor
out
lea
push
mov
subb
scas
mov
dec
pop
jle
fsubl
lock
jmp
jecxz
dec
pop
inc
movsb
in
inc
mov
ror
scas
lods
lock
inc
xchg
dec
test
adc
mov
push
sbb
jo
iret
ficompl
bound
ljmp
push
xor
ja
ret
xchg
and
nop
mov
rorb
sbb
jl
pop
pop
push
push
jecxz
cltd
xchg
and
in
add
shlb
js
dec
aaa
dec
lea
pop
jp
shr
jns
cmp
int3
stos
sbb
stc
enter
or
adc
test
add
dec
insl
fwait
mov
jl
cmp
inc
mov
jmp
inc
jne
sub
inc
in
loope
or
add
js
xor
iret
popf
js
push
mov
mov
push
dec
jbe
sbb
iret
mov
call
rcr
mov
fbld
push
dec
cmp
adc
call
inc
dec
jle
fcompl
rorb
outsb
push
add
jl
add
pop
outsl
jp
xchg
movsb
nop
and
inc
addb
into
fdiv
xchg
into
daa
sub
lret
lahf
cltd
cmc
imul
ret
and
pop
and
insb
je
add
test
arpl
mov
fwait
mov
inc
lock
mov
iret
sub
leave
dec
sub
adc
popf
dec
lcall
fimull
int
shlb
mov
xchg
inc
add
xchg
leave
dec
sub
aaa
jmp
mov
insl
les
pushf
cli
or
mov
test
adc
es
add
icebp
and
loop
imul
add
data16
jecxz
xchg
out
ror
lret
mov
sbb
jae
xchg
xchg
and
mov
sbb
insb
xchg
push
push
bound
les
in
stc
adc
cmp
jns
sub
dec
cli
push
mov
shlb
push
insb
outsb
aaa
xor
jb
dec
mov
or
dec
add
cmc
std
test
outsl
divb
mov
inc
pop
mov
mov
js
test
mov
lods
mov
dec
data16
add
xor
sub
mov
scas
outsb
shl
xchg
sub
add
xchg
dec
jb
aas
outsl
fmuls
adc
out
je
mov
js
pop
fsubl
bound
mov
xchg
sbb
test
jae
dec
push
aaa
pop
xor
iret
addb
inc
push
cmp
test
lods
add
js
cmc
add
or
ljmp
mov
pop
stos
sbb
add
jbe
cltd
sub
jno
jae
repnz
push
jl
shlb
lock
bound
push
inc
mov
mov
mov
push
cld
jbe
xchg
mov
outsl
mov
push
psrad
adc
mov
sbb
jo
xchg
andl
xor
push
sub
fistpl
mov
and
daa
lods
cmc
push
add
mov
dec
mov
sbb
mov
add
or
je
push
cmp
cmp
imul
mov
push
mov
or
adc
jcxz
mov
mov
out
ret
loop,pt
fidivrs
movsb
pushl
mov
stc
mov
jae
inc
jp
add
mov
shl
sub
daa
add
push
mov
out
cmp
cli
jmp
xor
punpckhdq
fwait
jl
mov
pop
mov
pop
push
inc
dec
or
hlt
fldt
and
inc
sub
fldl
fwait
dec
enter
mov
orb
dec
sarl
iret
mov
xor
icebp
imul
loopne
sub
sbb
jbe
mov
adc
inc
dec
inc
hlt
mov
je
std
sbb
inc
push
out
shl
and
nop
xchg
cmpsl
push
icebp
je
push
push
inc
xchg
xor
iret
fsub
xor
xor
pop
inc
mov
push
cmp
mov
push
inc
popa
test
dec
jne
push
lret
pop
js
jge
adc
gs
push
cmp
adc
mov
push
inc
inc
sub
call
inc
xchg
es
jno
dec
jb
xor
test
pusha
stos
adc
cmp
cltd
aam
lret
cmp
push
in
inc
data16
mov
js
jne
push
inc
jno
sub
sub
lock
inc
cmp
aas
call
popa
cmovge
and
stos
dec
insb
jnp
push
push
loopne
mov
out
hlt
shl
mov
int3
ja
dec
mov
imul
jo
loopne
sub
inc
and
insb
frstor
mov
sbb
dec
outsl
and
popa
xor
loope
mov
and
jnp
adc
jo
shll
insb
test
fwait
sbb
cmpsl
sub
mov
mov
lods
push
sbb
or
cmp
int3
or
push
cltd
mov
mull
iret
enter
shlb
or
in
int
push
movsl
jl
popa
repz
dec
pop
lds
and
addr16
mov
xchg
insl
outsl
mov
jb
push
xlat
xchg
push
shll
and
dec
xor
jecxz
les
int3
sub
dec
ror
sbb
jae
andl
lock
xor
cmp
dec
dec
loope
jl
movsb
insb
jbe
jb
inc
cmp
adc
inc
xchg
xchg
xchg
rolb
jns
mov
or
rolb
xchg
dec
fwait
and
lods
inc
shl
js
gs
mov
lods
cmpsl
rcrb
sub
pop
inc
cmp
fwait
stos
in
bound
outsb
rol
rolb
out
in
lcall
mov
icebp
ret
js
fs
das
fs
pop
and
ret
jno
call
insl
push
cmp
inc
jl
test
mov
ret
sbb
adc
sub
xchg
mov
mov
push
push
jecxz
or
push
xor
stos
les
sti
push
scas
js
cwtl
cmp
or
sub
dec
mov
adc
addr16
push
fildll
add
push
mov
xchg
jns
mov
mov
jns
xor
sbbl
mov
adc
cmc
push
and
pop
adc
push
inc
hlt
xchg
nop
xchg
lret
fnstsw
into
imul
popf
dec
je
push
sub
cmp
lock
mov
aam
cmp
sti
daa
test
xor
jp
dec
cmpsl
sahf
mov
pop
xor
jne
inc
out
xor
xchg
xchg
outsl
pop
in
imul
or
inc
mov
or
jge
shr
mov
cld
pop
push
adc
shlb
repz
jecxz
ret
push
or
xchg
icebp
pop
loop
and
stc
dec
inc
adc
les
mov
jmp
or
inc
fdecstp
lods
pop
jg
in
out
push
jae
or
mov
movsl
xchg
and
push
lcall
add
sbb
mov
jo
dec
mov
add
movl
sub
add
cmpl
push
xchg
xor
lock
repnz
sub
loope
ret
adc
pushf
adc
cmc
push
xor
inc
push
mov
dec
push
inc
stc
ds
or
or
mov
inc
dec
and
and
adc
inc
in
shlb
push
cmpsl
add
xor
pop
inc
jmp
mov
push
xchg
mov
cmp
cmp
inc
pop
jno
std
subl
lds
inc
xor
es
data16
mov
sub
in
mov
inc
sbb
mov
jnp
adc
sti
push
jae
shlb
dec
xchg
adc
mov
inc
shlb
repnz
jp
repz
jecxz
or
sbb
xor
push
insb
and
int3
fst
adc
jnp
insb
fs
out
sbb
or
jmp
popf
fcoms
in
cltd
insb
leave
daa
sbb
fildl
shlb
dec
aas
cs
mov
jo
adc
daa
lret
sbb
je
cmovl
adc
mov
inc
mov
mov
and
mov
dec
cltd
shlb
mov
mov
dec
mov
dec
add
jge
push
or
arpl
mov
dec
pop
mov
and
xorb
jl
dec
cltd
lock
push
lock
popa
and
fldt
sub
cmp
dec
je
inc
add
fdivs
fists
daa
xor
push
hlt
repz
mov
add
jnp
pushf
idivl
sbb
or
popf
pop
in
mov
push
xor
cmp
sub
push
fsts
push
inc
jnp
lret
fsubrl
pop
add
pop
mov
test
jg
repz
iret
out
dec
cmc
inc
and
fistl
gs
jno
mov
stos
inc
pop
jnp
mov
lods
stos
sub
gs
jo
movsb
clc
arpl
bound
pop
lcall
jmp
ljmp
mov
jbe
mov
nop
cmc
fadds
int3
pop
and
fwait
dec
jmp
lcall
gs
and
lret
fcomps
sub
outsl
and
xchg
push
int
dec
inc
jo
and
pushw
fs
loopne
mov
dec
je
dec
dec
mov
lcall
addb
dec
cmp
dec
xor
push
mov
stos
test
sub
or
mov
or
dec
jnp
push
add
push
and
xor
rorl
or
xor
inc
push
push
push
xor
cli
mov
sahf
push
mov
jg
dec
lcall
xor
dec
dec
repz
loopne
xchg
insb
sbb
mov
xor
fisubrs
mov
push
jno
sahf
jle
popa
pop
adc
cmp
pop
sub
scas
repz
call
add
lock
and
imul
js
sub
add
sbbb
lcall
imul
lds
aas
jnp
sbb
mov
sbb
xor
jecxz
push
xor
jns
je
sbb
push
cld
inc
jo
and
insb
hlt
pop
lock
and
add
mov
sub
mov
rclb
sarl
cmp
arpl
cmp
lds
jae
imul
pop
test
sar
sar
lds
push
sub
stos
sub
mov
js
pop
inc
xor
mov
push
aas
pop
mov
mov
xchg
sub
inc
mov
push
in
in
enter
test
adc
push
arpl
pop
mov
inc
jno
inc
jo
sbb
ret
mov
push
or
and
jne
xor
lahf
sub
inc
mov
push
imul
mov
mov
out
repz
sub
add
stos
je
jb
loopne
or
jbe
cmp
fucomip
cmp
ret
cmp
xor
lcall
pop
outsl
cmpsl
lock
mov
hlt
pop
repz
mov
in
loope
outsb
loop
adc
iret
adc
adc
mov
imul
mov
jp
mov
inc
push
popf
and
insb
push
jl
cld
popa
aaa
adcl
out
stos
inc
shrb
add
push
xchg
lret
aas
shlb
fwait
mov
adc
shrl
or
sub
inc
mov
mov
clc
popa
jnp
gs
scas
or
clc
dec
repz
cld
adc
pop
xchg
out
lods
lods
jg
mov
test
push
xor
inc
jnp
mov
js
lods
inc
cmp
inc
xchg
inc
pop
cmp
or
add
xor
icebp
js
mov
dec
inc
int3
addr16
adc
xor
popf
cmpsl
dec
adc
xchg
xchg
adc
mov
leave
cmpb
test
je
mov
cmpsl
negb
push
adc
dec
call
in
outsl
ret
fisttpll
xor
cltd
sbb
repz
sub
leave
insl
lods
in
clc
iret
sub
cmp
imul
lock
mov
mov
nop
mov
and
inc
add
add
or
push
or
inc
jge
pop
shlb
and
faddl
wbinvd
push
jo
pop
aad
test
cltd
push
mov
sub
inc
sub
rol
dec
ret
push
popa
mov
fs
dec
and
pop
and
dec
mov
test
cmpsb
popa
push
and
ret
iret
in
xchg
adc
cltd
xor
lods
inc
int3
push
sahf
sub
pop
ret
sbb
push
inc
lods
xor
mov
out
je
iret
pop
mov
cltd
cmpsb
and
jp
inc
pop
add
mov
jge
iret
test
inc
fs
jecxz
popa
ss
add
ss
prefetch
cwtl
inc
iret
fwait
inc
jbe
and
fwait
jbe
arpl
jbe
into
stos
pop
imulb
sub
adc
outsl
cmp
pop
xchg
cld
fwait
mov
aam
push
mov
cltd
imul
cmp
lds
andb
or
sbb
jb
outsb
sub
movsb
sub
xorl
inc
cwtl
loop
jbe
lahf
clc
jne
add
xchg
lods
mov
sub
sbb
and
push
xchg
adc
adc
mov
mov
outsb
leave
dec
aaa
mov
rorl
cld
xor
cmp
add
inc
lea
sbb
cld
in
and
inc
add
lock
push
sub
int
sub
cmc
jg
jne
mov
cmpsl
movsb
test
loope
shrb
mov
inc
add
imul
xor
loopne
cwtl
scas
add
ret
loope
mov
lret
pop
ljmp
jno
int3
in
in
lret
fwait
or
and
xchg
xor
cmp
xchg
out
loopne
iret
dec
dec
mov
pop
and
mov
mov
sub
push
out
in
add
xchg
mov
adc
cld
or
in
fwait
cld
sub
or
push
mov
inc
xor
notb
cmp
pop
xchg
fnstenv
dec
jo
nop
xchg
mov
xchg
jb
add
mov
je
movsb
xorl
aaa
in
lds
xchg
lret
sub
pop
rol
test
sahf
jl
addr16
pop
mov
test
stc
cmp
mov
adc
xchg
lock
pop
xchg
mov
arpl
js
mov
gs
cmp
mov
repnz
mov
fists
test
dec
sbb
fucomi
ror
pop
mov
cmp
inc
sub
xor
fwait
int3
xchg
lock
mulb
xor
fs
out
out
outsl
mov
push
mov
ret
fnsave
lock
loope
jge
sub
in
ret
cmp
fsubr
test
sub
sub
xchg
jae
test
gs
add
les
popa
lock
std
ror
loopne
jno
mov
int3
mov
and
jmp
pusha
add
mov
clc
push
mov
push
dec
je
dec
fstl
mov
in
jns
gs
mov
sbb
ret
mov
pushf
lods
leave
xchg
or
mov
mov
iret
pop
ret
movsl
or
push
jge
fnstcw
push
mov
loopne
int3
push
pop
and
gs
jecxz
sub
ret
cmp
inc
and
in
int3
mov
add
div
lock
sub
iret
sbb
popa
add
sbb
adc
das
je
mov
dec
rolb
ljmp
insb
je
roll
popa
xchg
out
sbb
shlb
je
fmuls
pop
bound
push
mov
lahf
sub
sti
fwait
xchg
add
ror
les
cmp
mov
xor
cmp
push
addr16
push
fstpl
jg
ret
pop
mov
test
jo
inc
aas
inc
push
jp
daa
test
sbb
jno
divl
nop
sub
xor
daa
sahf
stos
jns
scas
das
xor
jmp
int
cmpl
or
hlt
ss
cmp
outsl
adc
lods
add
icebp
sbb
cmpsb
and
icebp
cmp
jno
call
cmpb
mov
cmp
add
insl
lret
jo
gs
pop
fwait
xor
and
imul
mov
loopne
add
fdivl
popa
inc
push
fs
je
pop
adc
nop
sbb
test
movsb
inc
mov
inc
mov
in
mov
dec
shrb
xchg
popa
sti
push
pop
ss
pop
inc
xchg
mov
insl
test
mov
lock
pop
loop
iret
clc
push
or
lret
insl
ja
out
mov
mov
pop
mov
sub
mov
test
sub
add
mov
gs
lret
cmp
ja
cmpsl
aas
adc
dec
push
sbb
dec
mov
xchg
adc
sarb
adc
int3
mov
pop
into
jle
sbb
aad
add
push
mov
cmp
inc
push
adc
xor
sarl
xchg
inc
mov
cmp
fcomip
dec
ss
mov
idiv
add
je
mov
iret
sbb
cmc
cmp
repz
mov
mov
and
pop
xor
inc
jns
sarb
push
mov
push
adc
fisubs
sbb
mov
xchg
in
add
imul
das
shlb
push
xchg
jg
xorb
daa
xchg
rcll
or
pop
and
sub
sbb
repnz
cmpsb
mov
add
in
pusha
xchg
and
enter
loope
or
add
loop
xor
in
mov
and
jno
mov
js
pop
xor
insb
and
and
inc
outsb
lahf
cmp
das
add
lock
adc
inc
imul
clc
mov
in
and
addr16
outsb
daa
push
into
test
xor
jl
xchg
test
xor
push
mov
cmp
cld
and
cs
subb
int3
outsl
jg
mov
and
inc
fsubrl
ret
rorl
push
xor
push
ljmp
jl
and
icebp
dec
movb
mov
and
xor
and
std
fst
pop
sbb
xor
popa
lahf
pop
push
push
xchg
and
into
sub
notl
outsb
gs
and
dec
cli
adc
loope
lods
adc
out
cltd
inc
xchg
cmpsl
adcb
aam
insb
pop
scas
pop
pop
inc
xchg
ret
jl
push
mov
loope
cltd
add
add
leave
test
scas
test
mov
push
dec
push
adc
jl
jl
cmp
ljmp
sub
xchg
js
sbb
mov
dec
loope
cmp
nop
insb
sbb
or
test
mov
xorl
fs
dec
dec
jbe
js
jle
ret
mov
xchg
sbb
jge
les
push
inc
mov
popf
cmp
add
dec
sub
pop
add
xchg
jno
outsl
adc
mov
rcll
or
jo
mov
iret
xor
lock
gs
rcrl
xorb
popa
loope
mov
pop
mov
andb
xchg
fwait
sbb
imul
cltd
ds
sbb
in
dec
jecxz
hlt
sub
sub
and
inc
sbb
cmp
out
cmp
inc
jecxz
or
and
jge
and
fwait
jae
arpl
xchg
cld
and
and
push
jmp
ljmp
or
ja
das
jns
jmp
push
and
movsl
cmp
and
push
repnz
push
jb
jno
jne
insl
mov
ret
xor
in
push
pop
icebp
jge
xor
cwtl
and
jb
popf
rolb
xchg
mov
in
and
jge
call
xorl
inc
pop
loop
sbb
shr
adc
inc
lock
or
cwtl
and
in
xor
cwtl
ret
mov
stos
ret
sahf
jbe
xor
pop
and
push
sub
lock
xor
inc
dec
out
int
in
and
inc
xor
adc
insl
push
ljmp
clc
fnstsw
jmp
imul
and
shlb
nop
sbb
dec
xor
push
jb
add
add
push
in
fistpl
xor
xor
lock
adc
xor
subb
ret
fwait
in
fstps
xorb
push
je
jno
jne
or
in
sti
xchg
ja
jo
xor
inc
pop
dec
cld
bswap
imul
adc
repnz
jne
inc
cwtl
xchg
jne
test
adc
in
out
jecxz
dec
cmp
sub
fwait
test
cmp
in
inc
dec
aaa
jno
call
push
jp
sbb
sub
xchg
inc
inc
jge
shll
jno
outsb
clc
addr16
dec
cmp
orl
xor
movsb
call
out
lock
fadds
shll
mov
daa
mov
jmp
stc
sarl
repz
in
in
push
es
and
jb
xor
xlat
test
cmp
pop
int3
in
inc
addl
les
and
clc
es
jo
ret
addr16
xchg
fwait
call
inc
lock
cmc
testl
dec
sub
push
cmp
cmp
cmc
dec
stos
clc
and
jb
xor
hlt
xchg
loop
jne
adc
dec
pop
jb
arpl
jnp
xchg
dec
inc
icebp
ss
cmpsl
mov
mov
jbe
cwtl
insl
in
mov
in
xor
xor
scas
scas
in
jmp
push
rorb
push
sub
dec
push
xor
scas
sahf
adc
and
out
ja
dec
and
pushf
std
stc
rolb
fwait
push
adc
xchg
sub
xchg
call
mov
cmpsl
dec
sub
roll
inc
roll
xor
into
rcl
aas
add
movsb
int3
add
into
push
jo
adc
es
inc
inc
nop
mov
inc
fnstsw
or
rclb
sub
inc
repnz
jno
adcl
inc
int3
loope
hlt
in
mov
jp
dec
rclb
daa
loopne
jecxz
clc
jns
inc
xor
add
and
pop
in
adc
and
inc
sbb
int3
imul
or
shlb
imul
jae
in
mov
sub
negb
add
pop
sub
add
xchg
add
imul
daa
add
aaa
or
out
inc
inc
pop
es
test
int
in
jg
ja
nop
sarb
and
mov
push
adc
dec
repz
mov
mov
hlt
test
inc
and
mov
and
mov
mov
cmc
xor
ret
jmp
gs
inc
mov
loop
imul
jne
xchg
mov
xchg
shl
and
aaa
pop
and
ret
xchg
dec
setg
mov
and
ret
and
cmpsb
outsb
lock
imul
xchg
rclb
in
mov
pop
push
mov
mov
insl
and
inc
and
in
cmp
fcoml
rclb
lock
xlat
inc
enter
int3
and
mov
rcl
and
pop
xor
add
es
inc
mov
cmp
inc
dec
shll
jb
mov
push
push
adc
add
jnp
loopne
jno
outsl
dec
cmp
and
pop
inc
loop
andl
shll
jecxz
bound
mov
add
push
ss
lods
dec
sbbb
dec
inc
and
mov
and
ljmp
fistpll
mov
xlat
cli
inc
jge
in
pop
es
inc
push
repz
xchg
test
imul
push
es
push
repz
xchg
test
cmc
in
adc
es
xchg
repz
aam
hlt
adc
jge
in
push
es
es
inc
mov
xlat
test
aaa
pop
jge
in
ja
xchg
inc
mov
mov
repz
inc
mov
dec
imul
or
lret
inc
loopne
jno
cs
mov
or
push
les
and
and
mov
inc
inc
bound
leave
aam
mov
jno
push
dec
xor
shlb
std
dec
inc
dec
lods
stos
push
and
inc
mov
imul
inc
push
frstpm(287
push
arpl
push
jmp
jbe
loop
ret
dec
and
push
dec
inc
je
sub
dec
push
or
dec
cltd
xchg
dec
inc
je
movsl
in
dec
adc
stc
sub
add
fldcw
mov
or
pop
xor
xor
inc
nop
repz
movsl
xchg
add
mov
sbb
rcll
sbb
insl
xchg
and
leave
jo
ret
sub
hlt
mov
cs
cmpsb
and
out
xor
pop
mov
nop
data16
or
or
shrl
xchg
int3
ret
rorb
mov
test
jno
insl
mov
inc
call
jmp
call
mov
jo
imul
insl
out
cmp
push
int
mov
shlb
ljmp
int3
and
push
addr16
loopne
stos
xchg
cmp
pop
xor
add
add
push
ret
dec
mov
rcrl
ret
je
push
rolb
and
into
jno
push
mov
sub
jae
dec
imul
jecxz
repz
mov
test
mov
cmpl
rorb
add
or
ljmp
mov
andb
inc
popa
jno
call
mov
aad
jp
mov
or
mov
lods
and
jb
ljmp
inc
je
push
in
and
inc
add
call
es
ret
sub
ss
add
inc
push
call
dec
xor
mov
sub
lock
je
jno
sub
mov
jg
xchg
imul
inc
inc
adc
dec
rorl
and
sub
add
inc
repz
outsb
pop
outsb
hlt
mov
imul
sbb
inc
mov
rcrl
and
popf
inc
lret
cmp
xorl
mov
bound
lock
jmp
pop
mov
inc
int3
cs
dec
sub
mov
bound
sub
inc
jb
out
loopne
sbb
xchg
xor
cltd
insl
das
enter
mov
loopne
lods
cmp
mov
push
js
pop
jecxz
andb
mov
push
inc
addl
call
in
and
dec
nop
test
ljmp
nop
bound
mov
mov
inc
dec
test
fs
loope
sub
pusha
call
dec
faddp
lcall
inc
cld
xchg
push
aam
inc
fdivrl
mov
sti
or
repnz
ret
dec
adcb
das
ffreep
nop
jbe
iret
outsb
cmp
cmp
mov
mov
mov
dec
adc
adc
enter
stc
push
daa
pusha
mov
aaa
xchg
jb
pop
push
add
dec
pop
in
mov
je
push
mov
jns
repz
push
jecxz
dec
xchg
mov
aas
das
pop
pop
das
out
arpl
mov
aas
ret
ss
mov
cmpsl
je
cmpsb
push
and
xor
push
dec
xor
aas
cmp
mov
addb
lods
mov
clc
pop
xchg
jns
inc
jnp
movsl
dec
cmp
mov
push
sub
pushl
pusha
pushf
test
pushl
popl
call
je
jnp
and
mov
sbb
dec
mov
and
in
outsb
mov
popf
xor
cmpsb
inc
mov
insb
cmp
in
movsb
cmp
cmp
and
sub
cmc
mov
sub
iret
xor
sbb
lock
sub
lret
dec
mov
cmpsb
or
mul
push
pop
xchg
js
icebp
sub
cli
or
fidivrl
xchg
cli
cmp
push
fsubp
cmp
mov
xchg
cmp
xor
xchg
test
pop
call
xchg
and
or
jbe
sbb
and
pop
loopne
data16
scas
sub
sub
andl
xor
sub
inc
out
mov
xorb
es
cmpsb
insl
cmp
js
jns
or
xor
insb
int3
test
xchg
js
jbe
cwtl
or
repnz
pop
mov
lret
fcmovb
mov
xchg
arpl
pop
js
push
addb
fsubrs
inc
cmc
pop
dec
jp
sti
aam
mov
or
sub
es
movsl
mov
mov
es
pop
jnp
testb
sub
or
pop
xchg
jnp
mov
or
fbstp
xlat
cmp
sub
mov
inc
test
add
inc
fmul
adc
add
adc
clc
call
lea
icebp
mov
leave
aad
out
inc
mov
fstpl
fisttpl
imul
xchg
cs
or
fsub
jl
xchg
das
lock
imul
int3
or
popa
mov
ja
jecxz
aas
pop
fists
xchg
xor
adc
jnp
xchg
jnp
push
jb
lea
push
pusha
pushf
lea
call
pusha
push
adc
jmp
outsl
pop
dec
and
mov
xchg
ljmp
lcall
stos
dec
inc
sub
jl
dec
inc
xor
push
xor
cld
fcompl
rol
inc
xchg
push
test
stos
xlat
lret
xchg
pop
sub
dec
sbb
xchg
or
fldcw
dec
mov
lret
xlat
or
inc
in
or
loop
cmc
gs
icebp
pop
inc
cmp
icebp
cmc
or
jecxz
mov
out
fcomi
or
mov
adc
jp
sti
aaa
subb
pop
jl
pop
adc
test
or
shrb
imul
stos
dec
inc
xchg
jno
std
icebp
pop
js
imul
sti
pop
sub
mov
mov
ret
mov
adc
pop
mov
jne
mov
ret
jle
enter
cltd
sub
adc
popf
jp
push
mov
ret
out
mov
xor
dec
stos
mov
scas
mov
pop
xchg
jp
nop
test
mov
jne
scas
jp
dec
mov
adc
std
popa
movsb
out
gs
addb
xchg
mov
cmp
fisttpl
repz
stos
lret
xchg
les
cmp
mov
pop
sti
enter
cmp
in
lock
loope
enter
inc
or
sti
jecxz
inc
mov
mov
dec
fistpl
ljmp
pop
jecxz
out
mov
dec
pop
push
and
cmc
jmp
inc
adc
inc
roll
cmp
inc
cmc
stos
jns
stos
sbb
adc
xchg
xor
sbb
and
popf
and
and
xor
data16
mov
stc
pop
sbb
aam
add
negl
pop
xor
lcall
add
gs
cmpsb
leave
ret
inc
cs
sti
sbb
inc
xlat
xchg
call
pop
adc
fistl
jg
test
mov
add
mov
inc
jg
iret
jmp
add
sub
js
mov
adcl
insl
cmp
cmp
push
adc
shl
rol
ja
outsb
add
push
add
sub
dec
push
movsb
je
sbb
xor
inc
nop
cmp
inc
mov
dec
rolb
ss
xchg
fistl
fwait
push
daa
dec
aam
pop
mov
dec
xor
addb
cltd
clc
call
jmp
pop
push
subb
mov
push
loop
cmpsb
push
push
lcall
xlat
hlt
out
ljmp
and
lcall
pop
xchg
adc
add
xor
mov
or
pop
mov
stos
jae
xor
out
not
push
jae
pop
push
cmp
jecxz
mov
or
mov
mov
shrl
cmp
cmc
insl
inc
mov
mov
sbb
lcall
andb
fsubrs
or
ret
sub
jne
ret
dec
sbb
mov
mov
dec
push
pop
xchg
addr16
lods
bound
fcmovbe
loop
cli
mov
shrd
or
shl
shr
add
stc
clc
shl
mov
cmp
stc
bt
jmp
cmpsb
xchg
popa
imul
inc
push
ret
mov
and
scas
das
xchg
push
xlat
inc
adc
pop
push
sbb
sti
cwtl
xchg
cwtl
repz
xor
pop
test
test
jp
test
dec
out
push
dec
stc
cmovns
int
sub
mov
arpl
push
test
and
jmp
scas
dec
int3
pushf
cmp
js
push
sub
and
add
xor
xchg
sbb
adc
mov
mov
insl
std
jae
in
adc
lock
rcll
dec
lahf
addl
xchg
pop
jnp
xchg
xchg
data16
mov
test
sbb
in
fwait
pop
add
sbb
movzwl
add
sbb
fstpt
push
add
pushf
sbb
int
add
sbb
mov
mov
add
pushf
sbb
cmpsl
pop
add
mov
add
pushf
sbb
pusha
cli
pop
add
mov
add
pushf
sbb
adc
pop
add
mov
add
pushf
sbb
arpl
push
add
mov
add
pushf
sbb
jne
sbb
in
push
add
pushf
sbb
rcr
add
mov
add
popf
sbb
in
fwait
pop
add
mov
add
inc
incl
pusha
cwtl
mov
bswap
jmp
jmp
add
lret
push
mov
mov
mov
movsl
in
cmp
push
dec
das
mov
jg
jnp
cmp
xor
jo
enter
pop
rcrl
cmp
shr
mov
std
mov
in
xlat
jp
nop
inc
cmp
sbb
fsubrp
dec
test
jnp
jbe
xchg
adc
mov
mov
incl
sub
or
in
or
pop
xchg
popa
shlb
sbb
mov
sahf
mov
adc
aaa
sbb
rcrl
pop
pop
out
fbstp
fwait
js
ss
jae
out
int3
adc
das
jg
sbbb
cli
mov
call
push
aas
mov
ret
lcall
mov
test
mov
in
jo
sub
out
inc
fwait
test
int
outsl
mov
xlat
mov
xor
iret
push
out
sub
jg
or
dec
aaa
dec
addps
jmp
adc
jcxz
mov
fwait
imul
fildll
fcmovne
cmpsl
mov
inc
inc
cwtl
fildll
ljmp
outsb
mov
ror
or
not
jae
add
cmp
inc
stc
xor
xchg
daa
lods
je
imul
cmc
mov
cs
xor
and
inc
jle
in
mov
xor
ja
xor
sbb
imul
aam
adc
fsub
test
rcrb
pusha
sub
cmpl
movw
pushl
lea
jb
jmp
push
or
push
arpl
sbbl
inc
cmp
mov
insl
aam
sbb
adc
cmp
pop
aam
adc
pop
js
xor
fldcw
push
insl
cmp
lcall
jns
mov
scas
jb
mov
ds
movsb
lea
movsl
sub
cwtl
cld
inc
add
sahf
xor
mov
or
leave
aas
sub
mov
adc
sub
mov
les
pusha
sub
xchg
arpl
mov
or
pop
jns
jge
xor
test
sub
repz
mov
mov
push
jbe
xchg
in
gs
cs
scas
pop
sub
pop
sbb
ret
cmp
push
jnp
xor
mov
aas
cltd
sbb
insl
jno
jae
jecxz
rcrl
mov
out
clc
sub
or
imul
dec
in
cmc
cmp
xor
arpl
and
jae
not
mov
mov
jp
pushf
setns
not
inc
pusha
setne
not
mov
jmp
dec
fsts
pop
jae
add
fstpl
add
cmc
push
icebp
xchg
fsubs
mov
and
xor
arpl
in
cmpb
les
loop
ss
push
lret
and
jns
aaa
icebp
lea
ss
mov
add
aaa
scas
xor
aas
pop
stos
les
data16
mov
movsb
lods
in
loopne
fdivrl
js
xchg
lds
lea
call
jbe
pusha
lea
jae
mov
push
mov
pushf
inc
setne
call
pusha
jmp
aaa
add
sarl
ror
mov
das
pop
scas
ret
aas
lret
das
in
xor
push
mov
xchg
es
orb
dec
or
movsl
xchg
push
jbe
stc
int3
ja
xlat
fildll
xchg
outsb
or
les
mov
cli
pop
adc
inc
fnstcw
lock
ret
xchg
push
ljmp
ja
iret
or
pause
out
xchg
je
cwtl
and
or
push
adc
je
int3
mov
pop
xchg
insl
or
std
lcall
aam
mov
mov
popf
sbb
leave
mov
xchg
or
pop
mov
push
fsts
fstps
jno
pop
pop
push
mov
adc
mov
std
lcall
fs
rcll
pop
mov
xlat
addr16
cli
imulb
cld
movsb
fidivl
mov
in
xor
inc
dec
xchg
sub
fisttpll
ret
stos
aas
mov
lcall
sbb
dec
int
pop
xchg
insl
clc
mov
divl
sub
popa
mov
in
mov
stc
lds
push
lahf
out
xorl
pop
ret
or
push
and
outsb
jnp
xor
mov
pmullw
shlb
lret
ret
add
mov
int3
or
or
fcoms
loopne
js
enter
push
push
pop
lret
pop
pushf
xchg
sub
bound
mov
aas
add
xchg
jmp
outsl
mov
daa
sbb
pop
xchg
insb
cmp
pop
ss
sbb
imul
pop
mov
sub
lock
and
dec
rclb
movsb
ljmp
aam
fsubrl
movsb
mov
cmp
movsb
and
push
out
inc
adc
lods
out
adc
mov
xlat
fdivl
in
lods
inc
lret
pop
jno
mov
cli
inc
ficoms
jle
lods
insb
cld
clc
dec
mov
xchg
clc
and
inc
pop
xchg
insb
mov
jno
mov
cmpsl
adc
cmp
push
xor
ljmp
jo
sbb
dec
add
bnd
mov
lods
cwtl
sub
mov
gs
cs
xor
ss
ret
adc
outsl
outsl
stc
adc
dec
ds
jo
add
xchg
data16
inc
push
repnz
xchg
fcmovb
mov
and
fstl
dec
jmp
push
add
in
mov
clc
add
jmp
jmp
xrelease
mov
add
adc
push
cs
jae
xchg
xchg
lods
adc
bound
test
imul
add
cmpl
test
cltd
pop
xchg
outsl
in
ja
bt
pusha
call
xor
pusha
ror
jmp
adc
push
movl
lea
jae
pushf
lea
jne
jmp
push
cmp
xor
mov
jo
int3
in
rcrb
mov
out
lods
mov
pop
pop
je
stc
fstpl
xor
push
daa
mov
test
sahf
xchg
xchg
push
fadd
add
or
sbb
cmpb
xchg
sub
pushf
push
sbb
cmovle
je
pop
loopne
xor
add
jo
xchg
call
xchg
outsb
cmp
adc
xchg
fwait
popl
cmc
mov
icebp
rorl
leave
lods
or
pop
movsb
pop
mov
mov
inc
ds
rolb
mov
icebp
packsswb
in
call
pop
xchg
imul
xor
dec
pop
dec
xor
add
push
mov
mov
fwait
testl
mov
das
daa
imul
mov
loop
mov
call
in
add
std
gs
mov
xchg
add
jb
lahf
or
shll
mov
shl
out
int
das
mov
push
test
test
pop
mov
mov
adc
xchg
adc
sahf
data16
and
stc
mov
iret
ret
scas
adc
mov
int3
mov
iret
or
sub
push
aas
fisttps
pop
cmpsl
lahf
cmp
pop
out
pop
xchg
imul
pop
add
add
add
pop
add
add
add
push
add
add
add
push
add
add
add
lcall
push
mov
add
add
add
mov
add
add
add
add
addb
add
in
push
add
add
add
jmp
add
pop
mov
add
xor
add
ss
stc
add
add
pop
add
add
add
mov
dec
testb
in
lods
jne
push
leave
inc
xor
hlt
xor
cmpsb
push
push
and
mov
sar
mov
mov
outsb
xor
lahf
sbb
sahf
mov
and
cmp
or
jp
push
push
jno
add
sbb
or
mov
push
rcrl
mov
les
aas
sti
pxor
das
sbb
das
mov
repz
xchg
push
mov
sub
push
data16
lret
xchg
ds
ror
adc
pop
mov
leave
test
xchg
cmpsb
lea
push
xchg
stos
fisubrs
stc
xchg
mov
or
into
jge
ret
dec
adc
or
ljmp
testl
push
dec
mov
xor
push
fistl
out
mov
jecxz
xchg
imul
jns
cld
loopne
jle
lds
mov
ss
and
out
out
mov
bound
xchg
push
push
icebp
sub
mov
adc
push
dec
sbb
cmp
ret
pop
cmpsb
xor
stos
int
pop
in
mov
push
sub
jmp
add
jae
sbb
jle
shl
jne
xchg
imul
and
mov
push
mov
div
mov
imul
push
pushl
pushl
adc
mov
movw
lea
jmp
pusha
cmp
mov
sbb
push
bsr
inc
mov
and
mov
adc
xor
lea
mov
lods
stc
xor
rcr
setge
ror
pushf
adc
jmp
jmp
scas
pop
mov
cs
rorb
lods
mov
sub
or
mov
arpl
into
out
mov
jecxz
aam
xor
ljmp
pop
fsubp
pop
adc
aas
aad
xor
add
loope
dec
icebp
leave
jne
jge
mov
inc
fwait
push
in
xchg
sub
mov
jno
and
fcomps
mov
mov
leave
xor
pop
xchg
push
pushl
jp
bound
mov
clc
enter
jbe
test
orb
incl
and
mov
bound
mov
inc
jge,pn
scas
aam
aam
leave
das
bound
xchg
das
jge
or
inc
xchg
and
loopne
mov
add
insl
or
sub
xchg
add
mov
inc
lods
mov
shll
nop
mov
shl
push
adc
xchg
xchg
int
popf
dec
in
ret
add
arpl
sbb
std
cmc
jb
and
inc
jns
push
or
faddp
pop
popa
fsubrl
popa
jno
into
pop
jo
imul
cmc
cmp
mov
xchg
ret
and
xor
jno
cmp
jns
pusha
and
fwait
or
xor
pop
pushf
or
push
adc
xor
mov
jno
ret
xchg
push
mov
dec
in
js
je
cmp
or
pop
xor
aam
mov
mov
push
sub
nop
js
fsubrs
js
in
xor
test
push
lret
notb
fmulp
mov
xchg
xchg
jne
add
dec
push
sub
sahf
jae
inc
sub
xor
imul
xchg
mov
in
push
and
mov
pop
mov
lcall
daa
mov
decl
repnz
pop
js
pop
shl
je
arpl
adc
pop
mov
or
adc
and
or
cwtl
sub
pop
in
dec
inc
mov
add
aam
and
xchg
push
jns
and
shlb
and
loop
adc
call
mov
test
xchg
add
ss
lret
jp
inc
fwait
out
ss
inc
and
lock
sha1msg2
mov
xchg
mov
test
push
fidivs
std
cmp
add
or
push
pop
leave
dec
test
pop
arpl
jl
xor
dec
nop
lods
lret
jp
cmpsb
jmpw
cs
jecxz
sahf
push
imul
fcmovbe
ss
sub
and
sahf
pop
xchg
push
in
js
lea
jae
push
cmp
call
movzbw
pushf
btr
mov
shr
aam
btr
mov
lahf
sub
bt
dec
push
rcr
dec
shl
shrd
push
sbb
push
aam
aaa
pusha
mov
jmp
dec
ja
ret
mov
push
inc
rcll
repz
stos
xchg
imul
mov
mov
loop
xlat
mov
ljmp
iret
cmpsl
je
or
stc
rcl
inc
dec
es
push
nop
insl
inc
sti
jae
outsb
sbb
xor
xchg
das
aam
sahf
mov
adc
lret
mov
mov
push
push
mov
enter
mov
mov
js
dec
mov
pop
xchg
push
bound
loop
cmc
push
mov
or
push
lcall
mov
inc
sub
add
jmp
jbe
jns
mov
push
repnz
jbe
xchg
xor
lds
lret
add
shll
outsl
jae
xor
dec
sub
js
xlat
dec
adc
xchg
lret
cmp
mov
hlt
lea
sub
nop
jne
loop
jge
fstl
push
es
xor
leave
mov
inc
dec
xchg
cltd
cmp
fcompl
inc
stos
and
fcomip
inc
mov
xchg
push
mov
adc
mov
scas
and
daa
xlat
movsl
or
inc
outsb
xchg
gs
ds
ljmp
sub
rorl
dec
pop
xor
xchg
xchg
incb
cmpsl
pushf
movb
jb
aam
xlat
jbe
and
ss
jge
fidivs
es
mov
lock
jbe
pop
cmp
stos
ljmp
out
inc
and
push
movb
mov
mov
mov
mov
lea
jmp
movw
call
mov
call
mov
push
mov
call
call
jmp
add
add
jmp
call
cmc
mul
jmp
setle
lea
test
sub
btc
lea
push
adc
shl
add
and
btr
shl
sub
pushf
lea
jb
pushf
movsbw
mov
push
lea
pushf
call
call
bt
pushf
add
bt
not
clc
jmp
push
add
stc
pusha
pushf
add
cmp
cmc
test
test
add
lea
je
not
pushf
push
dec
stc
pusha
push
cmc
add
stc
cmp
bt
test
sub
pushf
call
pusha
mov
pushl
lea
jg
pushf
mov
push
pushf
pushf
jmp
pushf
pushf
call
mov
movl
pushf
pushl
movb
lea
jmp
movb
pushf
popl
pushf
call
pushl
popl
pushf
lea
jmp
pushl
popl
mov
pushf
push
lea
jmp
mov
pusha
pushf
popl
pushf
movb
pusha
pushl
mov
lea
jle
push
pushf
pusha
call
pushf
cmp
cwtl
test
push
jmp
call
bt
cmc
push
cwtl
pushl
cmp
test
test
sub
push
movb
jmp
pushl
dec
rcl
cmp
test
xor
bswap
inc
test
shr
call
xchg
bt
pushl
cmp
sub
test
jmp
mov
movb
push
jmp
or
movzbw
movzbl
btr
sub
call
jmp
call
jmp
call
jmp
das
mov
stc
mov
pushf
add
pusha
movb
call
pusha
push
mov
push
pushf
pushf
popl
pushf
pushl
movb
mov
jmp
jmp
push
pusha
mov
dec
push
mov
call
mov
mov
pushf
call
call
jmp
mov
pusha
pushf
movb
call
btr
mov
xor
adc
add
push
push
mov
push
movw
mov
push
lea
jmp
mov
mov
jmp
mov
mov
call
shl
ror
shld
bt
mov
pusha
pusha
mov
add
pushf
pushf
pushf
popl
call
pushf
call
call
jmp
call
pushf
push
mov
push
pushl
ret
mov
pushf
movb
movw
movw
lea
jmp
rcl
mov
rcr
test
mov
pushf
sub
clc
pushf
stc
cmc
shr
push
jmp
pusha
pusha
sub
call
mov
push
pushl
lea
jmp
dec
call
or
bsr
mov
stc
sub
movsbw
inc
not
btc
mov
rol
sbb
jmp
mov
call
sub
jmp
jmp
call
mov
mov
mov
pushf
mov
mov
push
lea
jmp
push
call
shl
movzbw
shld
mov
bt
and
mov
pushf
test
test
sub
test
clc
bt
shr
jmp
mov
pusha
push
pushf
popl
push
jmp
pushf
pushf
mov
pushf
pushf
pushf
pushf
mov
push
lea
jmp
call
clc
call
aad
adc
shld
das
mov
pusha
pushf
pushf
xchg
call
movl
mov
pushf
movb
lea
jmp
mov
movb
push
pushf
pushf
popl
jmp
call
pusha
mov
mov
call
call
pushf
pushf
dec
bt
push
push
ror
pushf
mov
inc
jmp
jmp
mov
movw
divl
mov
pushf
mov
call
mov
push
mov
call
pushf
popl
jmp
mov
mov
mov
push
mov
jmp
pusha
movb
mov
mov
push
mov
jmp
pushf
pushf
popl
pusha
jmp
call
jmp
pushf
mov
pushl
popl
push
push
lea
jmp
stc
cmc
test
not
pushf
test
cmp
not
push
clc
lea
jae
and
jo
pushf
mov
pushf
jmp
pushl
push
pushf
mov
pusha
pushl
pushf
popl
jmp
mov
pushf
call
movzbw
shl
mov
setb
sar
rcr
mov
cmp
stc
add
call
clc
bt
sub
jmp
push
jmp
pushf
call
pushl
popl
pushf
lea
jmp
movsbw
bswap
setae
pop
pushf
pushf
lea
jmp
pushf
call
pushf
pushf
popl
pusha
movw
push
mov
mov
movb
mov
jmp
not
shl
mov
test
bswap
push
bt
bt
bt
xor
pusha
cmp
pushl
sub
jmp
cmp
pusha
and
jmp
call
call
mov
push
pushf
mov
pushf
jmp
jmp
movl
jmp
test
rcr
bsf
mov
test
setns
mov
mov
pusha
jmp
jmp
clc
clc
bsr
mov
test
clc
push
sub
call
movzbl
mov
pushf
pusha
pushf
lea
pushf
jmp
lea
jne
shr
seta
mov
cmp
pusha
pusha
bt
and
push
mov
cmc
cmp
jmp
pushf
pushf
mov
movb
push
pushf
lea
ja
push
push
lea
jmp
push
call
mov
mov
call
shld
shr
bsf
rcr
mov
pushf
dec
mov
pushf
mov
pushf
add
stc
pushl
shrd
jmp
not
push
clc
not
bt
call
mov
pushl
pushf
call
clc
clc
add
cmp
cmc
add
call
movb
pushf
mov
movw
pushf
pushf
mov
jmp
mov
movw
lea
jmp
push
pushf
cmc
pushl
popl
pushf
cmc
add
movl
pushf
pushl
popf
pusha
lea
jmp
call
bswap
add
lea
cmc
cmp
jmp
pushf
popl
jmp
call
mov
mov
jmp
mov
call
call
mov
pushf
pushl
mov
pushl
lea
jmp
jmp
clc
bt
cbtw
call
mov
call
call
mov
pushf
push
lea
jmp
call
mov
jmp
movl
mov
call
shr
test
and
bts
mov
bsr
mov
call
movzbw
stc
test
xor
bsf
clc
and
shr
mov
cmp
bt
add
jmp
sub
test
add
push
clc
cmp
bt
add
test
call
sub
test
stc
add
mov
pushf
popl
pusha
pushf
pushl
popl
movb
lea
jmp
cbtw
call
push
sub
push
pushf
mov
pushf
push
mov
pushf
lea
jmp
call
pushf
pushl
popl
mov
pushf
pushl
pushf
lea
jmp
jmp
mov
cmp
sub
push
push
div
movb
mov
call
pushf
lea
ja
rdtsc
sub
and
cmc
mov
aaa
shl
call
jmp
pusha
movb
mov
pushf
lea
jmp
call
xor
mov
neg
pushf
cmc
cmp
and
add
push
pushl
pushl
pusha
dec
jmp
lea
jne
test
clc
pushf
stc
sub
call
push
jmp
dec
movzbl
bswap
xor
bswap
shld
rcr
add
stc
pushf
xor
cmc
test
setb
and
neg
mov
jmp
shl
pushf
jmp
cmc
add
mov
add
pushl
pushf
jmp
pushf
jmp
push
lea
jb
push
jp
pusha
pushf
popl
mov
mov
pusha
mov
jmp
movw
mov
pushf
pushf
push
lea
jmp
jmp
mov
mov
push
push
call
pushf
pushl
mov
pusha
lea
jmp
pushf
jmp
sub
clc
cmp
bt
shr
jmp
cmpl
pusha
pushl
jmp
call
pushl
popl
pushf
pushf
movb
push
lea
jmp
call
jmp
movzbl
setae
movzbw
mov
pusha
jmp
dec
inc
cmp
mov
stc
rcr
mov
rol
xchg
cmp
mov
not
mov
call
mov
pushl
pushf
pushl
ret
mov
pushl
movl
pushl
ret
call
pusha
xchg
mov
call
pusha
mov
push
lea
jmp
pushl
mov
mov
mov
mov
pushf
jmp
push
pushl
mov
pushf
lea
jmp
test
sub
pop
pusha
inc
inc
dec
bswap
movzbl
bswap
lea
call
movw
pushl
popl
movb
lea
jmp
jmp
push
jmp
push
pushf
movb
xchg
push
pushf
jmp
pushf
mov
pushf
mov
pushf
popl
mov
mov
jmp
mov
mov
jmp
pushf
push
pushf
mov
pusha
mov
mov
mov
call
add
mov
stc
add
pushf
mov
lea
jns
pusha
push
pushl
mov
pushl
push
lea
jmp
jmp
neg
and
lea
movzbw
mov
bswap
mov
sub
mov
cmc
pushf
jmp
push
movw
mov
movb
movb
pushf
pushf
lea
jmp
pushf
mov
call
mov
pushf
movb
call
lea
jns
pusha
mov
jmp
mov
mov
call
clc
test
sub
pushf
pushf
movb
jmp
mov
call
test
call
jmp
pushf
mov
mov
push
push
movw
lea
jmp
push
movb
jmp
push
lea
jae
pusha
pushf
mov
pushf
lea
jmp
add
call
mov
pushf
mov
movb
mov
jmp
mov
pushf
mov
pushf
pushl
lea
jmp
or
mov
jmp
mov
jmp
lea
je
bt
clc
clc
sub
clc
cmp
xchg
jne
push
call
mov
pushf
pushf
popl
movb
pusha
mov
mov
jmp
pushf
lea
jne
and
xorb
movzbl
seto
pop
pushf
pusha
pusha
lea
jmp
pusha
push
push
not
pushf
dec
movb
mov
pushl
dec
mov
add
pushf
clc
cmp
stc
cbtw
bt
jmp
pushf
mov
pushl
push
pushf
lea
jmp
or
sar
bt
lahf
notl
movsbw
lahf
mov
cmp
pusha
test
sub
cmc
mov
clc
and
call
mov
jmp
pusha
mov
mov
not
jmp
jne
clc
test
xor
jo
pushf
pushl
pusha
xchg
movb
call
xadd
rcr
mov
inc
dec
xor
test
mov
bt
stc
sub
jmp
jmp
movzbw
xor
pushf
rcl
mov
jmp
rol
cmp
add
cmc
cmp
bt
cmc
not
stc
push
pusha
stc
sub
cmc
clc
test
mov
bt
bt
stc
call
btr
mov
movsbl
btr
or
mov
cmc
cmc
call
mov
movb
xchg
jmp
mov
call
pushf
popl
lea
jg
pushf
pushf
pushf
pushl
popl
pushl
lea
jmp
jmp
pusha
pusha
mov
call
mov
jmp
mov
push
push
pushf
mov
pushf
mov
mov
movb
lea
jmp
movb
mov
pushf
movb
push
lea
jmp
inc
pushf
jmp
pusha
pushf
jmp
pushf
mov
movw
jmp
jmp
movw
pushl
popl
mov
movb
mov
pushf
lea
jmp
push
pushf
movl
mov
pushf
push
mov
mov
movb
movw
pushl
ret
push
movb
pushf
popl
pushf
call
mov
call
pusha
pushl
popl
pushf
movb
pushf
mov
lea
jmp
pushf
mov
jmp
mov
push
mov
push
call
jmp
push
mov
mov
mov
call
push
call
mov
push
pusha
mov
mov
pushf
popl
jmp
jmp
pushl
popl
movb
pushf
lea
jmp
push
mov
pushf
mov
call
mov
movzbw
call
lea
jge
mov
push
mov
movw
lea
jmp
mov
mov
mov
push
pushl
lea
jmp
movb
movw
dec
bt
pushf
movl
add
call
mov
pushf
push
mov
movb
lea
jmp
push
lea
jne
sar
bts
mov
cmp
and
stc
cmp
pusha
call
push
mov
pusha
call
pusha
shl
mov
mov
dec
setae
dec
mov
pushl
cmp
pusha
pushf
add
movb
call
cmp
pushl
popf
push
push
mov
mov
lea
jmp
jmp
jmp
push
xor
pushf
pusha
test
pushf
add
call
test
cmpl
call
pushf
popl
movb
jmp
mov
movb
pushf
pushf
movb
lea
jmp
pusha
jmp
pushl
pushf
popl
call
jmp
pushf
mov
movw
push
mov
push
lea
jmp
push
not
pushf
dec
test
pusha
add
mov
pushf
cmp
sub
push
mov
push
lea
jmp
mov
jmp
jmp
shl
lahf
mov
adc
sar
mov
push
clc
add
jmp
mov
pushf
push
mov
push
mov
push
pusha
mov
movw
jmp
pusha
mov
pushf
pusha
pushf
pushf
lea
jmp
sub
jmp
btr
push
push
mov
ror
movzbw
and
mov
call
lea
pushf
mov
pusha
push
push
lea
jmp
movb
cmc
or
jmp
mov
mov
pushf
push
pushf
lea
jmp
push
pushf
popl
lea
je
push
pushf
mov
jmp
mov
pushf
jmp
stc
stc
bt
add
push
pushl
lea
jmp
push
rep
pop
rcr
rcr
rol
mov
inc
mov
movb
cld
cld
pushl
popf
mov
movb
movb
lea
jmp
push
mov
pushl
pushf
popl
pusha
jmp
call
mov
pushf
call
jmp
movb
movb
lea
je
mov
pusha
pushf
popl
pushf
jmp
pushl
popl
pushl
lea
jmp
add
bt
cmc
pushf
movl
cwtl
push
pushf
sub
bt
sub
jnp
mov
call
pushl
popl
movb
mov
lea
jmp
pushf
popl
push
pushl
pushf
pushl
popl
pushf
movb
mov
mov
lea
jmp
cmp
xor
setbe
rcr
movzbl
cmc
jmp
mov
mov
movb
pusha
lea
jmp
pushf
pushf
mov
movb
jmp
sub
sbb
and
mov
add
mov
pusha
push
bt
cmc
sub
stc
pusha
cmc
mov
shl
movw
pushl
movb
call
mov
pusha
lea
jmp
pushf
pushl
popl
push
mov
lea
jmp
pushf
popl
pushf
mov
mov
pushf
pushf
call
jmp
bt
test
push
jbe
clc
cmc
sub
jmp
mov
pusha
mov
movl
call
mov
push
movb
mov
call
lea
mov
push
jmp
mov
call
jbe
setbe
mov
seta
mov
bsr
bsr
mov
pusha
clc
add
push
mov
movl
pusha
pushf
lea
jmp
pushl
pushf
mov
push
lea
jmp
bsf
bt
mov
rol
stc
stc
sub
add
add
pusha
xor
and
xor
add
shl
setb
not
mov
call
not
movzbl
xor
add
cmc
stc
stc
setge
add
bswap
inc
not
not
dec
dec
clc
lea
not
movsbl
rcr
adc
add
cmp
sub
rcl
movzbl
pusha
test
push
jmp
pushf
call
pushf
pushf
popl
mov
pushf
pushl
call
jo
cmc
pusha
cmc
mov
clc
add
movb
movw
pusha
pushf
lea
jmp
pushf
push
pushl
pushf
popl
push
push
call
mov
mov
pushf
push
push
pushl
ret
pusha
bsr
mov
bsf
shrd
mov
bt
cmc
add
call
test
ror
mov
clc
aam
aas
rcl
mov
cmp
pusha
sub
bt
jmp
dec
test
add
call
pushf
mov
pusha
lea
call
sub
call
mov
pushf
pushf
movb
movw
lea
jmp
pushf
popl
call
mov
push
lea
jns
pushf
movl
pushf
popl
pusha
pushl
pusha
call
mov
jmp
mov
jmp
decl
lea
ja
pusha
mov
lea
jne
jmp
mov
pusha
mov
push
pushf
lea
jmp
sub
pushf
call
jmp
jmp
mov
jmp
bt
lea
mov
call
mov
pusha
push
call
sub
call
mov
pushf
movb
movb
mov
lea
jmp
sub
dec
mov
aam
btc
mov
jmp
stc
jmp
jmp
cmp
add
bt
shld
push
pushf
pusha
mov
pushf
jmp
pushf
popl
jmp
jmp
jmp
mov
mov
movw
jmp
mov
pushf
pushf
lea
jmp
call
stc
add
pushf
movb
push
pushf
lea
jmp
stc
test
sub
pusha
mov
push
lea
jmp
pushf
pushf
call
call
test
cwtl
cmp
cmc
jmp
not
jmp
jmp
btc
ror
push
sar
test
xor
bsf
bsr
test
or
mov
pushl
mov
add
movl
push
pushf
mov
pushl
pushf
lea
jmp
or
push
adc
shl
mov
cmc
call
pushl
popl
pushl
mov
movb
movb
lea
jmp
movb
lea
jne
xor
xorb
jmp
pusha
call
movb
movw
mov
push
push
mov
pushl
push
mov
pushf
call
shl
mov
cmc
cmp
sub
call
mov
mov
push
mov
push
mov
movb
mov
mov
mov
jmp
push
lea
cpuid
jmp
movb
cld
pushl
push
pushf
rep
shr
mov
adc
mov
clc
cld
call
bt
clc
sub
call
push
not
not
pop
mov
jmp
push
push
movw
pusha
mov
mov
pusha
call
mov
push
jmp
aaa
adc
movzbw
mov
rcl
btr
sbb
ror
mov
jmp
mov
movzbl
lea
bswap
movzbl
lea
call
call
pushf
popl
jmp
call
mov
jmp
bt
mov
cmp
stc
jmp
pushf
jmp
mov
bt
call
lea
jne
jmp
mov
mov
pusha
pushf
pushf
lea
jmp
mov
push
mov
mov
push
pushf
mov
lea
jmp
push
mov
push
pushf
popl
jmp
movzbl
push
mov
push
not
pushf
popl
movzbw
call
jmp
pushf
mov
pushf
lea
jmp
pusha
push
mov
pushf
jmp
cmc
shl
call
rcl
bts
mov
aaa
mov
pop
sar
pop
pusha
and
neg
mov
rol
rdtsc
inc
lahf
mov
call
pushf
popl
call
pusha
pushf
movl
mov
pushf
push
push
mov
pushf
push
movw
mov
mov
jmp
dec
xchg
xor
lahf
rdtsc
pushf
sub
jmp
push
pushf
mov
movb
mov
pushf
movb
mov
call
jmp
jmp
mov
call
cld
pushf
call
jmp
push
call
pusha
mov
pushl
call
jmp
cmc
xor
clc
test
cmc
push
sub
jmp
rol
sar
call
pusha
pusha
mov
pushf
movw
pushf
popl
pushf
push
mov
jmp
mov
pushl
mov
lea
jg
push
mov
pusha
movb
movb
mov
call
call
xor
mov
inc
call
mov
push
lea
jmp
shl
pusha
shr
movb
or
push
pushf
call
clc
xadd
call
mov
pusha
pusha
pushf
pushf
lea
push
call
lea
cpuid
stc
bt
push
sub
cmp
jmp
pushf
mov
mov
pusha
pusha
movb
pushl
lea
jmp
mov
pushl
call
bswap
movsbw
mov
jmp
movsbw
mov
jmp
pushl
mov
movw
movb
mov
pusha
lea
jmp
pusha
jmp
pushf
pusha
xchg
jmp
push
mov
movw
pushf
popl
push
pushl
popl
pushf
push
mov
lea
jmp
pushl
pushf
pushl
popl
mov
push
pushl
push
lea
jmp
add
pusha
jmp
clc
jmp
pushf
mov
pusha
jmp
pusha
pushf
popl
jmp
cmp
pushf
pusha
add
lea
jno
pushf
pushf
not
pusha
pushf
pushf
call
mov
call
push
pusha
mov
pushf
jmp
jmp
ror
test
adc
movzbl
stc
jmp
not
sbb
sub
pushf
bts
mov
test
call
jmp
jmp
pusha
add
movb
pushf
lea
jmp
pusha
pushf
movb
movw
mov
pushl
jmp
call
pushf
mov
pusha
mov
lea
jmp
dec
dec
add
bsr
mov
cmp
adc
ror
ror
add
not
call
xor
stc
neg
clc
add
call
mov
jmp
pushf
popl
not
lea
xchg
bswap
pushf
lea
pushf
mov
bswap
lea
pusha
pushf
push
pushf
mov
call
push
mov
mov
jmp
push
mov
pushl
pusha
lea
jmp
movw
mov
pushf
jmp
ror
movzbw
mov
or
mov
stc
add
call
push
mov
pushl
lea
jp
push
pushf
jmp
mov
pushl
inc
stc
jmp
mov
push
lea
jmp
pushf
mov
push
jmp
mov
pushf
lea
jmp
mov
pushf
mov
jmp
lea
jle
mov
pushf
movb
pusha
lea
jmp
pushf
mov
call
pushf
mov
call
mov
call
pusha
jmp
pushf
pushf
jmp
push
push
mov
movb
lea
jmp
jmp
pushf
ror
movw
stc
cmp
xor
pushf
pushl
stc
movl
sub
push
clc
mov
movw
cmc
pusha
bt
sub
mov
jmp
add
pusha
mov
movb
pushf
lea
jmp
cmp
and
pusha
jmp
mov
call
pushl
cmp
jmp
movb
pushl
popl
pushf
pushl
pusha
movw
lea
jmp
pushf
pushf
popl
pushl
push
pushf
pushf
pushl
popl
mov
lea
jmp
rcl
stc
and
daa
mov
bt
cmp
bt
pusha
sub
test
add
pusha
movw
jmp
mov
movb
push
movl
lea
jmp
mov
pusha
call
pusha
mov
pushl
mov
lea
jmp
pushl
popl
pushf
push
mov
lea
jmp
setno
push
jnp
lahf
mov
mov
call
pushl
popl
pushl
movl
mov
lea
jmp
jmp
jl
sbb
pop
int
adc
sbb
into
cmpsb
sbb
pop
int
adc
scas
sbb
adc
test
adc
scas
sbb
mov
sbb
jecxz
sbb
push
mov
adc
mov
sbb
mov
sbb
insl
mov
sbb
adc
sbb
adc
sbb
popf
mov
adc
cmpsb
sbb
push
mov
adc
lret
sarl
sbb
sub
ret
sbb
jmp
test
sbb
jmp
cmpsb
sbb
jmp
mov
adc
scas
sbb
mov
sbb
popf
mov
adc
sbb
mov
sbb
into
cmpsb
sbb
pop
rcrb
mov
sbb
popa
ret
sbb
mov
sbb
jl
sbb
cld
mov
sbb
pop
int
adc
mov
adc
lret
adc
mov
sbb
outsb
mov
sbb
adc
mov
adc
mov
sbb
stos
mov
sbb
and
sbb
mov
mov
adc
sbb
ret
adc
rcrb
bound
sbb
jnp
sbb
adc
sbb
stos
mov
sbb
or
sbb
or
sbb
jle
sbb
dec
mov
sbb
push
mov
adc
sbb
mov
lret
sbb
dec
mov
sbb
bound
sbb
cmp
ret
bound
sbb
pop
lret
dec
mov
sbb
outsl
mov
adc
sbb
jle
sbb
bound
sbb
jmp
mov
adc
sbb
adc
sbb
das
mov
adc
sbb
adc
sbb
outsl
mov
adc
sbb
xchg
lds
adc
rcrl
bound
sbb
outsb
mov
sbb
lds
sbb
mov
sbb
mov
sbb
jl
sbb
adc
rcrb
inc
sbb
into
cmpsb
sbb
inc
sbb
or
sbb
jnp
sbb
jp
sbb
mov
sbb
adc
sbb
adc
stos
sbb
bound
sbb
pop
lret
jp
sbb
bound
sbb
lds
sbb
bound
sbb
cmp
ret
popf
mov
adc
mov
sbb
push
mov
adc
sbb
mov
sbb
dec
mov
sbb
dec
mov
sbb
pop
int
adc
cmpsb
sbb
cld
mov
sbb
into
cmpsb
sbb
popa
stos
sbb
stos
mov
sbb
das
mov
adc
sbb
cmp
sbb
adc
sbb
into
cmpsb
sbb
jmp
cmpsl
sbb
ret
adc
sbb
pop
rcrb
cmp
sbb
sub
cmpsl
sbb
sarl
sbb
sub
test
adc
sbb
mov
sbb
sub
movsl
sbb
mov
lds
adc
mov
adc
sbb
popa
stos
sbb
sub
stos
sbb
inc
sbb
and
sbb
popf
mov
adc
sbb
dec
mov
sbb
mov
cmpsl
sbb
adc
sbb
into
cmpsb
sbb
stos
mov
sbb
sub
stos
sbb
push
mov
adc
sbb
sub
stos
sbb
cmp
mov
sbb
push
mov
adc
cmpsb
sbb
insl
mov
sbb
mov
sbb
into
rcrb
sarl
sbb
inc
sbb
pop
lret
dec
test
adc
rcrb
pop
rcrb
pop
int
adc
rcrb
push
mov
adc
mov
adc
lods
sbb
pop
lret
push
mov
adc
das
jmp
decl
insb
add
add
insl
and
mov
mov
push
mov
call
mov
pushf
call
shl
pusha
xchg
btc
stc
xadd
xchg
add
xor
bsr
pusha
bts
pushl
popl
shrd
pop
btr
test
movl
dec
bt
xadd
mov
dec
sub
sbb
not
setp
or
sub
or
sbb
lea
rcl
bsf
sub
bswap
clc
mov
mov
adc
mov
shrd
xor
shr
add
shl
mov
dec
clc
sub
call
pusha
mov
mov
push
lea
jmp
call
mov
jmp
cmc
sbb
stc
rcl
movzbl
pusha
lea
js
push
add
call
mov
jmp
mov
jmp
cmc
shld
aaa
mov
cmc
cmp
xchg
call
lea
jnp
pusha
mov
pusha
pushf
pushl
push
lea
jmp
clc
test
add
jmp
jmp
cmp
cmp
add
pushf
pushf
pushf
lea
jmp
pushl
mov
pushf
push
mov
call
mov
jmp
pushf
pushf
jmp
xchg
pusha
mov
push
lahf
jmp
pushf
movl
jmp
movzbw
cmp
mov
shrd
bts
mov
inc
pushf
add
movsbw
mov
rcl
pop
shl
mov
pop
pushf
mov
shl
pushl
popf
movzbw
movw
pushf
cwtl
mov
pushf
movb
pushl
ret
add
push
not
movw
pusha
clc
xchg
movb
pushf
jmp
call
call
shl
mov
mov
mov
jmp
not
jmp
mov
mov
push
lea
jmp
lea
jne
jmp
mov
pushf
mov
push
push
jmp
pushf
pushf
call
mov
movb
mov
push
call
jmp
pushl
mov
mov
mov
mov
push
pushl
lea
jmp
push
call
pushl
mov
pusha
mov
pushf
mov
jmp
bt
cmp
sub
jmp
sub
mov
btc
movsbw
mov
call
sub
pusha
push
call
mov
push
mov
pushf
pusha
push
mov
call
mov
mov
mov
pushf
pushf
pushl
lea
jmp
add
add
add
dec
add
add
into
sbb
push
add
add
add
mov
add
add
in
push
add
clc
inc
add
cmp
add
addb
add
addb
and
add
addl
add
addl
add
addb
addb
push
addb
cltd
addb
mov
addb
adc
add
aaa
addl
push
addl
js
add
stos
addl
fildl
add
push
test
add
test
add
test
add
add
jbe
add
pushf
test
add
test
add
test
add
xchg
add
xchg
add
xchg
add
add
cmp
add
push
xchg
add
xchg
add
xchg
add
add
sub
add
mov
add
loopne
add
adc
add
pop
mov
add
mov
add
mov
add
mov
add
add
stos
mov
add
mov
add
mov
add
add
mov
add
lock
add
mov
add
add
jmp
add
and
add
mov
add
inc
popl
add
add
stos
popl
