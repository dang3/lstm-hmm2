push
call
ret
ret
adc
jle
inc
and
sahf
insl
inc
daa
popa
mov
or
popf
jb
jecxz
jecxz
pop
sub
int3
scas
xchg
int
pop
iret
add
jbe
sbbb
cltd
inc
outsl
and
or
or
popa
dec
adcb
push
xchg
testl
xchg
adc
fs
addl
ds
dec
lahf
adc
insb
adc
jl
fmulp
bound
call
gs
nop
call
adc
outsl
mov
aaa
pop
inc
xchg
cld
pop
lds
push
xorl
adc
adc
mov
das
lock
push
push
adc
cld
sbb
or
test
sti
mov
add
int
lods
in
fcmovbe
in
pop
jg
negl
test
push
cmp
leave
cmp
loope
sub
arpl
orl
fcoms
rorl
daa
data16
push
mov
or
sti
xchg
stos
fwait
pop
xchg
push
jmp
push
adc
call
loop
test
ret
andl
sti
ror
push
sub
jge
ficoms
ret
mov
cmp
pop
add
push
pop
inc
ljmp
or
aaa
xchg
inc
pop
jns
loopne
aam
addb
or
jae
loope
sub
mov
push
or
jnp
sbb
mov
dec
mov
cld
push
sub
in
sub
or
jge
sbb
mov
lret
lret
mov
xor
mov
mov
out
lds
sbb
push
dec
inc
filds
cmpsl
mov
sahf
adcl
adc
lret
xchg
mov
sbb
mov
out
orb
pop
imul
in
std
sub
call
jae
test
ds
mov
test
shll
sti
adc
jns
test
jl
push
lods
int
xor
ja
gs
popf
aas
sbb
inc
mov
adc
adc
sarb
dec
gs
addr16
outsl
fisubl
jno
popf
xchg
dec
jae
ret
mov
cmp
and
push
lods
add
xchg
push
sbb
fdivrl
sti
mov
mov
mov
lret
xor
ja
jp
xor
mov
mov
lock
ds
add
push
shl
loopne
into
jecxz
inc
xchg
cltd
loopne
fsubrl
ret
std
and
lret
xor
push
decb
arpl
add
shll
int
nop
cmp
lods
or
cli
mov
mov
fucomip
add
cmp
push
scas
inc
xchg
in
or
sub
cmpsl
jne
mov
jne
dec
xorl
das
fwait
cwtl
mov
mov
sbbl
les
sahf
xor
mov
sub
mov
daa
nop
stos
cmp
mov
fstps
repz
inc
mov
gs
pusha
jmp
int
push
and
and
add
addr16
call
mov
fdivrl
jp
and
push
bound
into
xchg
cmp
add
aam
leave
cwtl
inc
leave
xlat
or
imul
dec
add
jl
inc
inc
cmp
pop
dec
nop
movsl
arpl
jo
lret
cli
xchg
mov
mov
pop
cmc
les
fs
std
cs
sbb
shll
das
cmpb
in
push
lret
rclb
es
mov
call
mov
lcall
push
mov
mov
cmp
mov
ss
sub
in
jbe
push
dec
lret
mov
xchg
inc
dec
shl
aas
imul
cmpsl
shll
inc
xchg
push
sbb
into
mov
shl
add
jl
mov
fiadds
rcrb
cmp
mulb
inc
push
cmp
and
pop
xlat
xchg
outsb
cmc
lret
or
mov
popf
popl
mov
xchg
hlt
pop
lret
leave
mov
inc
dec
sar
and
pusha
jmp
sub
fcoms
pop
sub
cs
xor
lods
jle
data16
lea
leave
sub
xchg
fimuls
inc
arpl
add
mov
outsb
ljmp
push
lret
cmp
mov
jnp
add
stos
cwtl
cli
inc
or
cmpsb
mov
inc
scas
leave
xor
pause
cmp
pusha
sub
loope
mov
dec
inc
imul
lods
pushf
sub
cmp
mov
icebp
into
shrl
sahf
fstps
mov
push
cmp
jae
cmp
invd
in
leave
stos
adc
mov
gs
adc
jne
fs
pop
fdivrl
aaa
and
mov
mov
push
dec
mov
push
cmp
shrb
icebp
imul
clc
stc
fcomps
adc
imul
and
fmuls
dec
push
sti
cmp
mulb
sub
lock
mov
sbb
cmp
aas
push
cmp
sarb
inc
popa
adc
mov
cmp
mov
addb
sub
jne
and
stos
mov
aas
push
into
adc
jl
mov
imul
lea
dec
popa
ss
lahf
ret
adc
mov
cld
sbb
xchg
xchg
lods
stos
mov
cmp
hlt
test
imulb
andb
or
fs
add
jne
sahf
dec
xchg
jns
sub
andb
js
les
pop
pop
divl
jmp
add
dec
testl
inc
sti
cmp
jg
adc
xor
sub
sbb
cmpxchg
push
data16
test
mov
push
xlat
mov
sub
lahf
ret
jo
jp
pcmpgtw
jmp
aad
out
in
outsl
cli
dec
fbstp
sti
fstps
xor
bound
clc
fistps
pop
xchg
aas
cli
dec
dec
cmpsl
std
xor
data16
push
movl
push
push
shl
sbb
dec
into
or
inc
mov
add
lods
movsb
iret
cmp
cmpsl
cmp
test
popa
frstor
ret
stos
xor
or
mov
popa
dec
aad
aam
shll
sbb
inc
std
icebp
jbe
pop
andl
jnp
xchg
mov
cmp
xor
les
cli
push
add
mov
lock
test
jle
in
dec
or
mov
xor
into
jns
xor
jecxz
jb
popa
lret
cmp
cwtl
icebp
jbe
lahf
cli
sarb
inc
and
mov
sbb
loop
jmp
xchg
outsl
cmp
dec
subb
or
inc
mov
add
rcrb
add
rcr
pop
out
mov
test
add
rol
les
and
push
ljmp
xchg
inc
pusha
jno
into
jno
int3
xor
add
xchg
ret
loop
loope
or
cmpsl
cmc
call
lods
shll
cmp
adc
pop
std
sti
mov
in
xor
ret
push
decb
inc
aas
cmp
mov
repnz
in
xor
mov
sbbb
jg
mov
lock
mov
repz
subb
sub
into
shll
jmp
popl
pop
or
pusha
lods
je
pop
xchg
xor
push
xchg
je
ret
movb
decb
nop
xchg
push
jle
push
loopne
or
cmp
and
repnz
outsb
add
pop
popf
cmp
or
in
pop
mov
pop
dec
outsb
out
mov
fcomps
hlt
sahf
scas
imul
inc
lahf
xor
jns
xchg
sbb
sub
jge
out
xchg
jl
and
push
inc
or
jnp
outsl
dec
or
out
aas
sub
jnp
mov
in
lcall
adc
mov
adc
xchg
mov
ret
imul
sub
add
mov
icebp
pop
inc
dec
les
int
test
movsb
das
ret
pushf
mov
xor
sbb
std
pop
in
lock
int
cli
push
icebp
jo
mov
int3
dec
rol
outsl
out
ss
adc
inc
lea
clc
setl
jae
inc
cs
sub
test
repnz
xchg
das
mov
stc
cli
dec
push
gs
or
add
xor
daa
mov
pop
repz
jno
sbb
lea
sbb
and
stos
imul
jmp
jecxz
inc
sub
mov
xchg
mov
pushf
xor
nop
xlat
mov
xchg
mov
inc
fwait
fwait
add
dec
xor
shll
outsb
xchg
mov
je
out
sbb
jo
sbb
cmp
in
cmp
call
das
adc
jge
fisttps
push
mov
out
nop
out
std
cmpsb
inc
dec
mov
leave
cli
mov
mov
mov
jge
cmp
test
push
sub
pop
dec
sbb
pop
xchg
push
loope
xchg
inc
mov
mov
adc
jecxz
int3
mov
idivb
xchg
mov
add
mov
pop
sbb
orl
mov
adc
pop
pop
or
xor
push
call
fistps
mov
and
push
cmp
enter
lods
sti
ja
popf
les
cmp
jl
je
jp
mov
push
cmp
push
std
ss
or
push
insb
ja
sbb
aaa
cld
pusha
xor
repnz
leave
fcmovbe
enter
shll
rcrb
or
pushf
jg
bound
xchg
adcb
jb
sub
mov
sub
hlt
and
adc
das
icebp
shll
in
and
add
nop
call
sub
mov
cli
imul
cmp
add
mov
arpl
sub
mov
xor
xchg
fistl
lea
shr
imul
rcll
enter
mov
xor
mov
adc
add
hlt
insl
ja
push
out
repnz
arpl
popf
dec
push
pop
iret
mov
imul
and
xchg
shlb
xor
add
arpl
paddw
ljmp
sarl
in
sub
popf
mov
sarl
test
jno
xchg
in
cmp
lret
pop
sub
out
rclb
imul
sbb
out
jb
int
push
jae,pt
xor
inc
lcall
push
and
and
cmp
add
bsf
enter
xor
cmpb
enter
out
jne
dec
out
xor
shrl
mov
jne
enter
adc
adcl
dec
pop
inc
mov
xor
mov
lret
push
jecxz
and
mov
inc
xchg
dec
roll
insb
stc
insb
fisttpll
lret
mov
aam
mov
rcrb
sbbb
stos
daa
test
or
int3
insb
int3
and
cmp
loopne
dec
jne
pop
jnp
and
stos
gs
stc
push
push
daa
int
adc
test
cmp
sti
repnz
pop
xchg
mul
mov
psadbw
lock
xchg
or
add
in
popa
ret
lods
lock
adc
push
inc
push
push
mov
pop
fisubrl
je
wbinvd
push
mov
xchg
imul
mov
loop
add
ja
subl
xchg
or
movsl
cmc
mov
dec
push
pop
popf
sbb
das
pop
lret
cmp
sbb
adc
cwtl
imul
xor
inc
sub
pop
jg
and
cmp
and
xchg
and
rorl
loopne
imul
stos
jae
xchg
inc
push
cmc
sub
inc
and
cmp
add
jle
mov
aaa
movsb
mov
sbb
loopne
jne
fisubrl
cwtl
idivb
lea
push
dec
rclb
jg
movsb
adc
clc
out
fsts
xchg
lds
push
cmpsb
sti
jns
mov
jp
pop
shll
int
jae
mov
cld
sub
loop
fnstcw
mov
cmp
and
out
loopne
dec
insb
pop
dec
pop
jge
pop
push
cmp
cmp
dec
int3
xor
pusha
testb
mov
in
jae
xchg
lods
xor
or
scas
aaa
fwait
daa
lea
not
mov
mov
cmp
push
add
inc
xchg
mov
inc
xchg
add
and
in
sahf
sbb
aad
fsubl
lods
js
or
mov
notl
sub
loope
mov
sbb
lods
add
mov
sbb
inc
sub
in
lret
movsb
mov
and
scas
jmp
xchg
jae
push
xlat
push
and
stos
cmp
cmp
xor
cmp
inc
dec
sahf
cmp
xchg
sti
xchg
xor
and
xchg
jmp
jne
ret
mov
push
sub
outsl
cmpsl
lea
icebp
add
xchg
pop
mov
jg
mov
or
incl
dec
decl
or
dec
icebp
dec
out
pop
inc
xor
repz
jmp
ja
js
xchg
push
sarb
mov
add
rorl
pop
jo
push
mov
leave
aad
movsb
popa
in
pushf
jns
mov
test
call
sbb
or
push
lods
push
call
dec
or
mov
xchg
cmp
psrld
mov
leave
and
stc
inc
mov
inc
or
mov
add
ljmp
add
movsl
inc
dec
or
cwtl
cmpb
mov
ds
int
aad
xchg
jmp
or
cmp
rolb
add
push
sbb
pop
xor
pop
push
fstpt
inc
add
cmp
xchg
push
mov
add
jae
sub
push
jecxz
cmp
pop
lods
negl
stos
lea
loope
sub
mov
push
or
outsl
xchg
pop
notb
insb
shrb
and
inc
pop
cs
and
test
movsl
mov
cld
xchg
push
dec
ror
mov
dec
xor
out
imul
push
dec
mov
fcmove
fimuls
dec
lock
pop
push
mov
mov
mov
das
cli
inc
movsl
fldl
in
jmp
popa
movsl
fdivrl
aad
push
pop
and
mov
sbb
and
sub
adc
lahf
pop
cwtl
or
ror
out
adc
xchg
adc
outsl
dec
lret
add
loop
lods
call
repz
fmuls
cli
jnp
inc
mov
mov
mov
int3
out
inc
fst
mov
pop
xchg
popa
cltd
bound
stos
adc
mov
daa
hlt
push
xchg
stc
or
adc
push
mov
sub
in
ud2
sbb
fsubrs
addr16
hlt
out
in
mov
pusha
mov
inc
pushf
pop
call
dec
and
gs
sbb
movsb
cmp
sbbl
pop
lcall
add
lods
lahf
push
push
jae
push
pop
filds
xor
add
push
fmull
fs
jp
jne
in
push
mov
mov
hlt
or
or
sub
or
movsl
pop
push
xorps
arpl
jecxz
inc
lcall
jno
sub
and
push
incl
fildl
in
pop
int
pop
fs
outsl
xchg
outsb
movsl
lret
aam
enter
outsb
subb
clc
mov
jo
dec
repnz
out
or
sarl
pushaw
and
in
dec
jp
rolb
fsub
pop
pop
ja
xor
out
add
mov
add
jl
sbb
mov
ljmp
inc
into
inc
ret
icebp
dec
and
xor
sahf
imul
jns
sti
dec
rolb
out
and
push
fiaddl
xor
lods
or
mov
inc
movsl
pop
push
jmp
pop
pop
push
push
loopne
jmp
jmp
fwait
mov
xor
xorl
push
pop
dec
or
inc
or
cmp
imul
sbb
loope
jl
adc
cmpsl
pop
movsl
lods
and
inc
inc
mov
pop
dec
clc
shll
je
and
lret
push
rol
arpl
xor
testb
cmp
jb
ficomps
mov
and
lcall
push
cltd
or
adc
popa
push
cmpsb
mov
mov
hlt
ss
stos
lret
fwait
dec
push
xchg
push
mov
mov
inc
jns
add
fwait
mov
sub
int
ret
rorb
lret
mov
cmp
sub
andb
pushf
xchg
inc
xchg
jbe
and
add
or
cmp
cmc
ret
and
pop
movsb
scas
dec
outsb
adc
mov
mov
sti
push
sub
loop
xchg
adc
leave
jecxz
sbb
lock
push
arpl
dec
rcrb
mov
add
mov
inc
xchg
in
repnz
dec
fwait
lahf
sbb
sub
jae
test
iret
pop
sub
negb
fs
fistpl
std
jb
outsl
pop
add
das
loope
lods
push
mov
cmpsb
sbb
and
cli
xchg
and
loope
es
incl
das
or
subb
jne
cmpl
push
adc
xor
popa
ror
addr16
dec
sub
mov
adc
aaa
icebp
shlb
outsb
ja
sub
aam
push
mov
inc
mov
data16
sub
je
icebp
les
jno
test
sbb
and
jne
xor
push
cmp
push
in
enter
clc
fisttpll
divps
jb
and
jmp
pcmpeqb
mov
xchg
xor
pop
bound
mov
inc
push
mov
adc
or
popf
xor
push
push
push
in
mov
mov
push
test
test
jle
and
shll
mov
stos
mov
addr16
dec
call
orb
rorb
mov
push
jmp
es
jb
aas
xchg
std
loope
sub
push
xchg
out
xor
add
add
in
inc
cs
mov
sub
fnsave
xor
push
stos
loope
inc
lds
pusha
ret
shrb
fistl
sub
icebp
add
lret
mov
dec
cmp
fists
ret
dec
adc
out
test
movsl
jge
andb
test
addl
pop
dec
pop
push
in
pop
and
pop
sub
jb
lcall
or
test
lret
jle
xchg
aas
push
push
jmp
rcll
jno
xor
dec
jbe
ds
call
sahf
jmp
emms
xor
insb
gs
repnz
cld
pop
sub
clc
out
negb
pushf
jmp
leave
lods
dec
imul
cmc
inc
push
sti
xlat
movsb
mov
push
xorb
push
or
dec
nop
xchg
mov
cmpsl
add
sub
insl
std
je
mov
aad
cwtl
call
test
shl
lds
stos
xchg
stc
cmpsb
fnstsw
aas
lcall
cwtl
shlb
dec
mov
pop
aam
and
adc
sub
mov
movups
test
outsl
gs
cwtl
xchg
lods
mov
xor
push
xchg
adc
push
leave
pop
sbb
pop
sbb
inc
imul
xchg
into
sbb
sbb
adc
cmpsl
fcoml
xchg
data16
cmpsb
and
ficomps
std
push
mov
xorl
insl
div
insl
inc
mov
mov
dec
ret
xchg
xor
lock
pop
mov
test
cs
and
mov
lods
movsl
outsb
mov
lods
movsl
or
ret
out
stc
jecxz
arpl
in
stc
gs
push
sbb
sub
fs
sbb
jno
enter
cli
test
lods
mov
lret
mov
dec
mov
mov
and
jle
xorb
mov
fsubl
sbb
mov
add
xor
lret
lods
cld
cli
outsb
test
addr16
mov
icebp
mov
ljmp
ret
popf
popf
imul
lds
fwait
dec
jno
imul
dec
call
gs
xlat
xchg
inc
xor
test
cmp
dec
in
push
pop
push
pop
mov
insb
call
outsl
push
adc
push
test
pop
pop
out
xor
lret
imul
push
dec
das
cmp
daa
sub
adc
jle
jae
adc
iret
xchg
call
mov
rcll
cmp
inc
pop
inc
dec
mov
fst
outsl
mov
jp
ljmp
add
inc
sub
cwtl
sbb
daa
adc
adc
test
inc
mov
or
mov
repnz
inc
fmulp
push
dec
lret
mov
sbb
rcl
and
mov
data16
pop
aam
ljmp
sub
loop
xor
pushf
and
jbe
ret
xor
adc
lret
dec
sbb
push
xor
dec
aaa
ret
jae
adc
icebp
ljmp
push
cmp
jbe
and
idivl
mov
nop
jle
xor
push
jae
push
mov
cmp
push
jb
stos
aaa
add
xchg
mov
pop
jb
int
pusha
lods
sub
cmp
dec
mov
cwtl
dec
loope
lods
mov
or
cltd
inc
xchg
icebp
inc
lea
stos
or
xor
push
adc
cwtl
js
cmp
adc
inc
mov
popf
cmpsb
xchg
sti
jg,pn
shl
dec
enter
popa
push
sub
sub
pop
adc
lret
cli
add
and
inc
leave
mov
mov
imul
test
push
cmp
sbb
or
add
xor
cs
or
mov
pop
icebp
out
adc
push
jg
jno
out
bound
popf
add
adc
xchg
mov
dec
and
sahf
sbb
mov
sub
insl
dec
push
scas
das
addr16
aas
cs
jg
push
cmp
mov
cld
cltd
jne
cmp
cmp
xor
hlt
fcoms
add
mov
dec
mov
jbe
dec
push
mov
daa
in
roll
je
xor
pop
hlt
mov
loopne
ja
or
sub
aad
imulb
shrb
push
aad
pushf
test
popa
outsl
lock
add
js
xor
pop
push
and
ljmp
shr
sbb
das
stos
test
dec
inc
push
adc
mov
jnp
or
inc
insb
sti
sti
and
mov
bound
ret
or
cmp
gs
xchg
je
push
imul
rclb
int3
cmp
cwtl
bound
fidivl
stc
sahf
adc
dec
div
push
jno
ret
fbstp
mov
aas
jnp
in
repnz
mov
std
push
incb
pop
popa
outsl
push
sbb
push
mov
mov
inc
mov
aam
out
sub
lds
ljmp
dec
cld
jp
arpl
inc
fst
and
jg
jb
xor
push
mov
sbb
orl
inc
repz
leave
inc
pop
fiaddl
or
push
and
mov
jle
aad
jo
sub
inc
out
mov
decl
movsl
sahf
scas
jne
rcl
jnp
out
adc
cmp
arpl
fdivrl
dec
pusha
fwait
icebp
sub
add
mov
ret
or
mov
testb
das
idivb
fiadds
ljmp
jmp
test
scas
in
stos
push
xor
dec
ja
or
and
cmc
inc
xor
out
push
push
pop
xchg
jg
loop
in
cmpsb
adc
aad
rclb
mov
sbb
ja
jmp
sbb
or
enter
test
clc
mov
popf
mov
out
div
repz
in
adc
cmpsb
int
sub
movsl
fwait
mov
sbb
mov
pusha
cld
das
fs
mov
cwtl
ja
pop
push
push
ljmp
push
js
jae
outsb
push
jg
sbb
les
push
mov
clc
js
lret
pop
leave
sarb
push
and
jne
repnz
xor
lea
cwtl
pushf
mov
mov
lret
stc
outsl
push
scas
push
sub
pop
insl
xchg
imul
or
mov
adc
inc
mov
add
insl
inc
cld
fnsave
push
dec
mov
xor
imul
cmp
xor
jg
bound
sub
cltd
dec
push
cmp
push
imul
sbbb
je
adc
aam
imul
cmpsl
inc
push
jmp
cmp
sub
xchg
xlat
cmp
divb
pop
mov
iret
push
xchg
sbb
mov
and
sub
sub
jnp
cmp
inc
jg
inc
lea
mov
jns
addl
movsb
fwait
or
mov
or
sbb
shll
add
in
out
inc
bound
mov
nop
mov
hlt
push
xchg
xlat
test
ret
ljmp
pop
and
loop
aam
add
jmp
fnstsw
in
fbstp
or
scas
insb
mov
and
mov
fisubrs
and
cmp
mov
pop
add
mov
ja
mov
in
xor
ds
clc
cmp
notb
xchg
and
or
inc
or
pop
popw
mov
jmp
out
pusha
push
int
lret
or
adc
pop
jecxz
sahf
movsb
cmpsb
push
mov
out
add
sub
lret
inc
mov
add
jne
clc
xchg
sbb
dec
mov
cld
inc
repz
in
xor
push
call
xor
jge
dec
sbb
data16
stos
int3
loope
sub
adc
movsl
out
ret
call
inc
daa
es
and
fbstp
sti
mov
sbb
sahf
mov
lret
lods
call
dec
dec
push
ljmp
scas
imul
iret
sbb
adc
jne
mov
icebp
cmc
adc
in
push
xchg
mov
insl
mov
xchg
or
rorb
lret
inc
int
mov
cmp
sahf
mov
popa
push
xchg
cli
ds
jnp
add
jmp
pop
push
push
jl
insl
into
notb
gs
pop
enter
or
test
push
xchg
dec
aam
push
into
inc
xor
or
jb
lret
inc
xchg
loope
fwait
mov
inc
cmpsb
push
stos
push
negl
jp
inc
clc
mov
scas
sbb
rolb
movsl
stos
dec
nop
xchg
inc
fsubs
shlb
incl
inc
lods
jg
test
push
or
lret
jns
or
mov
aaa
jl
leave
add
or
sub
adc
sarb
fcmovb
aaa
or
into
or
in
addl
or
imull
lret
iret
pop
shrl
hlt
xchg
std
sbb
pavgw
addr16
xchg
hlt
sub
lret
xor
aaa
xor
fcompl
lods
and
dec
fisttpll
addr16
ficoms
inc
jle
hlt
push
xor
pop
jbe
repz
dec
mov
xchg
das
mov
xor
lods
sbbl
cmp
adc
jo
dec
push
adcb
nopl
and
jne
jmp
shrb
and
jge
mov
push
fs
enter
insb
lds
and
mov
popf
mov
iret
push
adc
test
mov
xchg
shlb
dec
aas
cs
lahf
out
movsl
data16
adc
add
jg
mov
dec
add
mov
mov
lods
xchg
xchg
pop
neg
stos
loope
jg
mov
cmp
jmp
sbbb
push
push
pop
dec
mov
adc
mul
push
lods
shrl
stc
or
inc
out
mov
inc
lea
ret
jl
out
mov
pop
xchg
mov
inc
push
mov
push
repz
mov
inc
out
dec
imul
fsubs
fdivrl
and
scas
pop
loop
cmp
shl
xor
popa
dec
mov
xchg
add
inc
out
out
pop
adc
and
mov
aam
outsl
aaa
testl
call
test
scas
lahf
dec
fisttps
cmp
push
inc
mov
pop
loope
mov
and
scas
jns
pop
fsqrt
outsl
cmp
xchg
fwait
aaa
lahf
aam
roll
movb
xchg
pop
jbe
lahf
xlat
inc
mov
andl
dec
mov
std
push
std
sbb
xor
push
cmc
js
mov
xor
inc
imul
jle
pop
mov
jmp
fdivrs
stos
xor
test
out
mov
jne
daa
dec
sbb
fimuls
cmp
lret
adc
push
inc
push
insl
popa
sub
add
dec
outsb
movsl
pop
enter
mov
cld
sbb
and
jae
lcall
cwtl
pusha
dec
sub
adc
adc
sub
ja
cmp
push
dec
pop
js
or
std
sub
test
xor
imul
insb
cli
add
mov
or
jae
sub
push
icebp
cwtl
lea
mov
lds
xchg
sub
adc
aaa
pop
sbb
jnp
dec
xchg
and
idivb
inc
pop
and
bound
and
push
mov
xchg
mov
inc
add
mov
dec
pushf
stos
stc
mov
idivb
or
and
stos
sub
cli
pop
xor
mov
imul
lahf
mov
loop
pop
xchg
adc
pusha
daa
gs
loopne
xor
adc
inc
loope
xchg
mull
sub
es
adc
shl
imul
in
lret
mov
roll
and
push
fsubr
pop
clc
mov
clc
sub
adc
mov
xlat
mov
icebp
lret
in
pop
jnp
cmpsl
cwtl
dec
stc
bound
xchg
fldcw
cmc
mov
inc
ret
cmp
mov
fsubs
inc
sarl
adc
scas
incl
cmp
mov
shrl
pop
outsb
jns
pop
pusha
cs
jge
enter
jno
shrb
inc
xchg
out
lret
pop
xor
mov
je
roll
insb
cmp
push
ret
inc
push
and
inc
mov
sub
cwtl
pushf
mov
jae
cmc
adc
adc
mov
testb
mov
or
fmull
jnp
std
int
fisubrl
jmp
pop
jae
xor
cs
ds
pop
roll
call
pusha
adcl
es
push
out
or
add
push
scas
pop
mov
bound
pop
pop
scas
sarb
pop
mov
push
xchg
outsb
push
adc
mov
incb
adc
jb
int
int3
push
adc
xor
std
xor
sbb
negl
push
dec
mov
adc
mov
ret
fwait
xchg
mov
lahf
mov
iret
jo
push
sbb
in
pop
ss
rorl
shl
cltd
loopne
mov
pop
jg
icebp
xchg
jns
jnp
mov
cltd
xchg
push
dec
cmp
pop
out
cli
xor
and
dec
mov
inc
adcb
scas
xchg
xchg
cmc
or
icebp
daa
mov
push
test
out
fcmovu
cmp
jns
fcoml
push
imul
pop
mov
lcall
outsb
ret
push
lods
data16
insl
lds
repnz
nop
add
jns
push
sbb
inc
cs
fcoms
ss
mov
xor
mov
xchg
mov
mov
or
push
popf
leave
insb
pushf
pop
xor
inc
add
cmp
mov
nop
cmpsb
or
js
sbb
and
dec
clc
mov
sub
sub
movsl
mov
push
sub
movsl
push
roll
mov
jp
dec
or
rorl
jo
mov
lret
mov
jle
mov
lret
or
into
addl
daa
jns
insl
jg
fsubrs
mov
inc
inc
test
inc
cli
test
adc
inc
stos
xchg
data16
lcall
sub
add
jp
pop
imul
mov
movb
dec
cwtl
imul
push
subb
negb
adc
imul
adc
dec
dec
push
cltd
cmp
subl
xor
jbe
repz
orb
mov
inc
sarb
out
outsl
push
pop
inc
sub
xorb
cmp
lods
stos
faddl
dec
xor
in
inc
mov
movsl
je
mov
das
jmp
aaa
imulb
or
add
mov
imul
clc
insb
arpl
mov
jo
fwait
or
push
test
add
pop
jle
mov
cmp
int3
mov
jo
ret
dec
fildl
arpl
jbe
mov
push
movd
das
adc
sbb
inc
adc
mov
das
push
xchg
pop
add
xchg
mov
push
andb
into
daa
nop
push
out
sbb
daa
int
push
cli
fimuls
add
aaa
shll
fnstenv
mov
int3
xor
xchg
ret
inc
push
das
fsubr
imul
dec
xor
sbb
nop
jb
imul
add
test
pop
out
vcvttss2si
int3
xchg
push
inc
xchg
gs
fs
ss
leave
pop
in
std
sbb
pushf
les
mov
mov
xchg
mov
xchg
xchg
inc
push
ret
inc
mov
adc
ret
stos
popf
pusha
cmp
cmpsl
dec
lcall
outsb
jne
adc
out
imul
sub
aas
xor
psllq
xor
pop
push
lea
jl
pop
stos
add
lods
pop
shl
sbb
push
cmc
mov
dec
adc
setle
enter
jo
stc
cmp
pop
mov
sbb
enter
add
minps
aam
fs
mov
inc
mov
gs
cli
stc
push
mov
pusha
mov
add
int
jae
jnp
out
scas
outsb
mov
cmp
mov
fucomip
xor
and
dec
imul
jp
in
leave
cmp
nop
cmp
adc
loope
inc
xor
ss
push
push
push
rolb
push
in
xor
jae
fwait
dec
jb
in
movsl
fwait
scas
xor
imul
testb
cmp
sahf
or
add
test
pop
push
mov
cwtl
call
sti
or
enter
gs
adc
or
and
cmp
shll
push
adc
scas
push
das
insb
adc
inc
lret
movsb
cltd
pop
or
jmp
aas
dec
movsl
je
jge
in
cmp
fwait
std
mov
xor
push
pop
sbb
inc
adc
cmp
inc
add
int
ds
fldcw
and
add
add
lret
xor
xor
jae
jmp
jb
pop
push
loopne
repnz
push
push
jp
fdivrl
idivl
rcrl
and
sahf
xor
mov
push
and
nop
ficoms
loopne
repz
pop
lea
fsubrs
stos
testb
leave
xlat
jbe
or
dec
fisubl
dec
cmpsb
push
aam
and
pop
push
popf
add
push
jb
rorl
mov
or
and
xchg
in
inc
jmp
je
ret
mov
or
push
cltd
inc
or
dec
js
fs
scas
pop
pop
xor
inc
dec
mov
xor
push
or
movsb
push
jae
insl
cmp
ret
ret
or
jge
fwait
iret
in
ret
shlb
inc
sub
in
shll
mov
inc
mov
sbb
mov
stos
repnz
lahf
shrl
cmp
add
fcmovnb
sbb
aad
icebp
rorl
adc
fimuls
fwait
mov
jne
cmp
dec
xchg
lock
pop
pop
cmpsl
pop
rcrl
push
cli
sbb
dec
push
int
pop
pushf
push
in
cmpsl
sub
stos
adc
and
mov
dec
ret
out
sbb
pop
lahf
xchg
enter
sub
jge
mov
jbe
push
scas
sbb
jg
sub
or
sub
jp
adc
andb
cmp
mov
and
jl
push
cmp
jmp
fsts
xchg
mov
push
mov
xor
andb
pusha
insl
outsl
sbb
out
dec
ja
jg
scas
or
int
mov
or
stos
dec
test
lret
popf
sbb
loope
fldenv
push
call
subl
loope
in
ja
adc
xchg
andl
out
int
cmp
pop
sahf
push
pop
arpl
fsubs
addr16
int3
test
popa
sbb
jl
pusha
fisubrl
add
and
out
ret
hlt
lea
mov
shr
daa
xor
testb
mov
jb
push
xchg
loope
pop
mov
pop
add
ljmp
jo
mov
mov
inc
stc
repz
lock
sbbl
hlt
mov
cmpsl
les
enter
pop
call
fcomp
sub
pop
mov
int3
dec
fistps
aas
mov
adc
sbb
sbbb
inc
jmp
sub
cmc
and
sbb
std
lods
push
jae
scas
cmpsb
aam
jmp
jmp
imul
cmp
test
nop
add
lret
pop
push
jg
cmp
in
leave
cmp
cmpsl
cmp
xchg
popa
pop
push
pushf
call
adc
nop
and
xor
lock
stc
jge
lods
adc
add
icebp
sub
sub
fcmovb
inc
mov
rorl
push
mov
push
dec
les
inc
push
pusha
call
movl
pop
sbb
test
cwtl
xor
pop
jmp
mov
into
adc
dec
arpl
xor
or
mov
sbb
loope
stos
test
sub
push
fwait
in
and
push
push
lret
jo
sub
push
stc
sti
lods
ret
sbb
cmpsb
dec
fadds
sub
cmp
mov
cmp
lock
test
lock
sbb
leave
daa
mov
into
test
hlt
mov
test
out
or
jp
roll
inc
pop
mov
cmp
xchg
or
xchg
mov
cmpsl
inc
sbb
push
jl
sahf
adc
idivb
ja
ja
fistl
mov
bound
inc
lea
das
and
fs
push
push
pushf
sbb
cmc
gs
mov
test
mov
inc
lds
jge
push
mov
pop
mov
mov
ret
sub
xchg
or
or
lret
sbb
xorl
mov
cmpsl
inc
pop
pushf
repz
scas
cltd
cmp
stos
mov
jbe
sub
push
push
cmp
cmp
in
stos
test
mov
into
jnp
out
cmp
mov
aad
fsubr
ds
jo
popf
adc
or
mov
insb
fstpt
je
cmp
adc
mov
mov
push
mov
cltd
or
push
test
pop
dec
js
hlt
and
cwtl
leave
cld
imul
cmp
stos
dec
xor
dec
jmp
fcoms
cmp
jg
push
push
mov
nop
adc
cmp
popa
or
fs
dec
sub
in
xchg
insl
imull
mov
mov
lcall
or
cmp
ljmp
out
jns
rcll
test
pop
jmp
in
and
imul
shlb
sahf
sahf
divl
sub
xor
jle
les
test
daa
push
iret
test
loope
mov
gs
lods
mov
xchg
xor
cmp
or
clc
das
test
fwait
inc
mov
leave
fstps
fwait
ret
dec
jge
mov
push
sbb
repz
xor
mov
mov
mov
cld
sbb
jae
out
and
pop
sub
mov
mov
xor
jl
rorl
mov
xor
lret
xor
fldl
cmp
sbb
sahf
pop
pop
cmc
push
or
das
xor
inc
cs
sbb
add
and
pusha
adc
jecxz
orb
andl
iret
in
stos
mov
adc
clc
xor
dec
addr16
inc
xor
sbbb
aas
or
or
mov
repz
negl
push
pusha
push
xor
stc
lret
xorl
lods
negl
test
scas
cmp
stos
roll
adc
inc
sub
popf
call
iret
jno
add
mov
ret
imul
mov
mov
cmc
lods
push
loop
inc
pop
push
imul
sub
idivl
inc
js
insb
hlt
les
push
out
test
xchg
inc
inc
mov
fadd
faddp
and
jp
out
xchg
in
call
sub
xor
pop
insb
outsl
adc
and
out
out
cmc
aas
fwait
mov
push
dec
jae
lcall
in
cli
andl
jg
xchg
loopne
cmpsl
jge
sbb
scas
cs
sbb
outsb
imul
inc
dec
jo
mov
out
inc
imul
pop
push
outsl
jo
cwtl
cmp
dec
mov
inc
out
pop
xor
sti
into
aad
mov
in
adc
sbb
add
adc
jg
jmp
jbe
cld
shl
test
pushf
in
cmp
jno
ljmp
or
adc
push
dec
js
js
imul
mov
dec
mov
adc
mov
add
je
jg
lods
jl,pt
adcb
inc
xor
jno
add
sbb
inc
hlt
mov
or
and
hlt
xor
rcrb
jbe
into
call
jg
cs
pop
je
cmp
cmpsb
aas
loop
add
repnz
mov
add
sahf
ljmp
cmc
leave
std
or
repz
test
outsl
int
test
sub
mov
sti
push
or
fsubrp
inc
pop
sahf
sbb
cld
sbb
fs
das
push
out
sub
add
lock
inc
inc
mov
rorb
fwait
cmpsb
pop
or
std
jae
or
es
sbbl
fstpt
dec
jmp
sbb
mov
idivb
mov
mov
mov
sbb
or
std
jb
imul
mov
cmp
mov
stos
fwait
js
mov
dec
add
mov
sahf
mov
mov
mov
rol
lds
repz
subl
dec
dec
data16
ds
iret
cmpsl
mov
pop
les
jns
inc
lcall
xor
push
xor
and
mov
stos
mov
and
or
mov
push
pop
push
dec
sti
cmc
lcall
in
push
pushl
sub
call
loopne
inc
sub
mov
sahf
dec
mov
ret
int3
mov
repnz
sub
into
jbe
cld
push
pop
popa
std
mov
push
imul
lret
push
cmp
xchg
repz
test
enter
cmp
cmp
shlb
sbb
jge
cmpsl
lock
inc
adc
mov
xor
mov
sbb
xor
mov
sub
push
or
sti
adc
leave
lods
dec
jbe
fimull
xchg
sub
cli
mov
adc
xor
test
xchg
add
es
popf
imul
push
jle
fistpll
push
rorl
out
cwtl
jp
clc
insb
sbb
fisttpl
stos
inc
cmpb
hlt
aaa
inc
xchg
aam
out
xchg
mov
adc
enter
push
mov
mov
sub
mull
push
sti
subb
cli
adc
testb
out
in
mov
ljmp
pop
out
ja
enter
cmp
imul
push
shlb
pop
lcall
lock
push
mov
dec
or
jg
sarl
subl
mov
sbb
int
daa
mov
xchg
pop
insb
ret
mov
dec
cmp
pop
dec
xchg
cmpsb
mov
xchg
mov
xor
inc
aam
enter
ds
adc
adc
ds
cmp
fadds
ss
in
mov
xorl
call
xchg
dec
sahf
out
das
clc
inc
imul
vpsllq
cmp
inc
sub
mov
jmp
ftst
mov
test
push
sbb
cmpb
aaa
mov
jo
enter
clc
into
nop
shlb
mov
int3
push
es
popf
push
test
cmp
jmp
aam
loop,pt
mov
iret
pushw
xchg
add
push
in
cli
jbe
push
mov
ss
mov
push
sar
das
pop
popf
arpl
addl
sub
mov
fmul
jmp
push
fimuls
leave
repz
mov
repz
mov
push
xor
jge
pusha
arpl
mov
add
xlat
xchg
mov
daa
mov
xchg
leave
mov
repz
jle
pushf
aas
push
mulb
and
xchg
out
xlat
mov
inc
add
jb
lea
adc
out
andl
and
xor
and
mov
jb
call
or
xchg
cmp
pop
mov
orl
sbb
push
cmc
mov
insb
cmp
mov
loop
pop
sbb
sbb
test
clc
jnp
mov
je
add
jno
aas
dec
mov
sbb
lret
repnz
shrb
shl
stos
sti
pushf
mov
sar
aas
push
dec
pop
sub
pop
jecxz
push
cld
fisttpll
scas
jmp
inc
dec
inc
mov
sub
mov
enter
bound
cwtl
add
popf
out
stos
icebp
inc
idiv
aad
mov
mov
mov
mov
push
adc
mov
or
rcrb
xchg
dec
jno
mulb
je
cmp
or
int
movsl
mov
or
leave
push
mov
ljmp
push
mov
push
js
cmp
inc
pop
ret
ss
xchg
fwait
pop
cmp
xchg
rcr
and
push
mov
sub
std
int3
dec
push
sub
leave
jmp
mov
xchg
fnstsw
out
negl
daa
scas
xchg
testl
xchg
test
stos
add
and
xor
sbb
mov
mov
push
test
std
inc
pop
imul
xor
dec
test
scas
cmp
dec
add
stc
pop
test
xor
in
adc
adc
jp
cmpsb
fisttps
inc
js
clc
in
popa
mov
notl
sbb
fwait
movsb
dec
inc
clc
loope
mov
pop
or
fcompl
shlb
lret
xlat
movsl
sub
or
sbb
es
inc
sbb
pusha
sbb
popa
cld
jae
add
lods
push
fcoms
das
lock
cmp
shrl
addr16
or
xor
xor
sbb
ret
push
push
dec
jg
int3
pop
xchg
fmuls
mov
push
mov
xchg
sub
iret
loope
sarl
fistps
pop
xchg
jae
cwtl
outsl
pop
nop
push
inc
das
adc
testl
in
iret
imul
inc
sbbl
xchg
loop
out
jmp
out
mov
mov
jecxz
mov
ja
mov
sti
add
push
cmp
push
inc
or
mov
fstl
outsl
xchg
in
push
push
push
adc
mov
or
cmp
loop
movsb
cmp
add
pop
pop
mov
or
inc
daa
insl
ret
dec
adc
js
mov
or
dec
lea
push
jns
dec
mov
stos
mov
in
dec
adc
jecxz
xor
cmp
jb
dec
cltd
mov
lea
jno
out
cmp
jns
in
aam
rclb
nop
xor
jecxz
sub
cmpsb
pop
out
das
jp
jno
xchg
xor
push
mov
lea
scas
fiadds
aas
adc
scas
fsts
xor
and
mov
jne
push
repz
in
mov
les
lret
pop
js
mov
and
sub
jbe
push
xchg
mov
cltd
mov
call
iret
clc
lret
pop
jae
iret
cmp
pop
inc
jecxz
rcll
xchg
mov
xchg
repz
mov
adc
loop
mov
imul
cmpsl
pop
xchg
sti
es
sub
repz
nop
pop
sub
pop
loopew
js
stos
or
inc
test
scas
adc
nop
or
jae
inc
in
dec
sbb
ja
stc
push
and
cmpsl
adc
stc
rcpps
clc
ret
daa
cmp
lea
add
xchg
pop
add
in
in
push
ret
mov
out
sbb
repz
add
addl
adc
insb
dec
lret
loopne
pop
or
dec
cmc
or
bound
xor
into
jl
repnz
xor
adcl
pop
outsl
andl
sti
les
mov
ret
and
cltd
jg
sub
cmpsl
por
push
jmp
imul
mov
test
pop
jmp
push
mov
cwtl
pop
int3
dec
das
bound
xchg
or
scas
aaa
icebp
arpl
xor
mov
xor
cmpsl
fisubl
pop
xor
fisttpll
add
int
jne
xor
loopne
push
sub
jge
cwtl
mov
js
sbb
cmp
adc
stos
mov
cs
notb
sbb
add
dec
test
cld
mov
sub
mov
mov
jbe
out
cwtl
lret
neg
repz
in
jbe
pusha
xchg
push
sbb
jl
les
xlat
jl
xchg
enter
inc
in
and
shrb
push
mov
rolb
mov
xlat
decl
mov
ja
jo
add
mov
or
fisubl
adc
in
pusha
sbb
pop
xor
stc
push
mov
test
scas
cmpsl
jg
sbb
push
out
mov
loopne
das
jmp
jmp
push
js
mov
lret
push
or
ljmp
jp
ja
incb
int3
ds
sub
jne
cmpsl
xorl
iret
lock
ja
push
aam
dec
push
add
popa
addl
jns
jae
bound
add
or
loop
jle
outsl
sbb
test
sub
ret
movsb
xchg
stos
xchg
inc
imul
jmp
in
sub
lock
jno
and
dec
xchg
xchg
lock
push
jg
jbe
stos
rclb
add
leave
add
and
pop
adc
push
insb
mov
les
mov
pop
sub
sbb
cs
cwtl
sbbb
cmp
mov
xchg
push
int
je
cmp
nop
push
adc
or
add
cmp
push
inc
sub
imul
aad
add
pop
sarb
enter
lock
cmpsl
cwtl
xor
out
xchg
adc
jo
lcall
xorb
jle
fdivrs
inc
cmp
out
sbb
mov
or
leave
fucom
pop
mov
enter
pop
adcl
and
mov
loopne
cmpl
xchg
push
pop
dec
mov
mov
clc
mov
sbb
pop
mov
mov
repz
outsl
sbb
ljmp
add
cmp
pop
ljmp
rcl
mov
inc
rcll
mov
mov
je
es
mov
movsb
xor
loop
arpl
push
xor
sub
pop
push
sub
pusha
fsubrl
jb
mov
sub
daa
sbb
rclb
pop
shrb
push
mov
imul
in
test
and
shlb
lea
jb
cmp
dec
dec
jge
pop
xchg
repnz
cld
push
test
or
dec
stos
add
add
push
mov
shrl
pop
aad
insl
jae
jne
in
jl
push
mov
out
dec
push
mov
mov
in
aad
cmp
mov
adcl
test
fildl
shl
dec
push
mov
dec
lret
fbstp
mov
sbb
scas
cmp
mov
or
rolb
push
mov
aas
and
or
daa
cltd
sbb
xor
hlt
lds
or
sbb
aaa
int
jecxz
add
mov
ds
mov
out
repnz
test
jmp
dec
adc
adc
mov
fldenv
and
imul
xchg
loopne
daa
push
loopne
std
cmp
clc
cltd
lret
lcall
fstpl
inc
test
decl
or
aas
or
fists
scas
addr16
loop,pn
mov
jnp
gs
imul
mov
psubd
xchg
and
mov
dec
xchg
aam
mov
or
or
shrb
outsl
mov
push
lret
je
in
mov
mov
call
in
cmc
sub
lret
int3
cmp
cs
in
add
cmp
xor
movsl
lods
repnz
fiaddl
jg
lahf
mov
cld
add
in
sbb
rcr
pop
or
test
dec
xorl
pop
push
stc
jb
rolb
sbb
movsb
js
push
pop
and
lds
scas
fdivl
movsb
mull
inc
cmp
pop
add
inc
push
fmull
lods
mov
push
push
movsb
js
adc
fs
test
push
sub
xlat
aad
mov
cmp
in
xchg
test
pop
daa
mov
push
jb
mov
xor
xorl
inc
push
test
cltd
mov
sbb
shl
xchg
mov
xchg
ds
cld
xchg
adc
rcrl
and
xchg
das
mov
into
cmp
mov
or
adc
xchg
scas
cli
aaa
inc
inc
push
int3
jo
mov
pushaw
sbb
inc
cmp
popf
mov
or
mov
test
adc
adc
dec
mov
decl
mov
or
cmp
pop
inc
jmp
dec
lea
test
out
in
popf
adc
ds
sti
incl
mov
or
fisttpl
push
lcall
hlt
xlat
xchg
andl
stos
push
scas
pop
push
fistpl
shll
jge
sti
and
xchg
into
sbb
hlt
jle
adc
es
cmpsl
push
cmp
js
pop
xchg
jnp
cmp
pop
test
aaa
xor
mov
mov
dec
into
in
mov
das
ret
cwtl
outsb
sub
fsubl
push
movsl
sti
inc
fiadds
fmuls
popa
or
mov
xorb
xor
or
or
js
and
lahf
sub
mov
cmp
loop
mov
ret
clc
imul
ljmp
push
cmp
repnz
ja
dec
push
sar
mov
pop
or
aad
mov
sub
dec
pop
daa
pop
sub
inc
jmp
les
jmp
fsubrs
daa
je
stos
mov
add
jo
sub
clc
inc
and
shrl
mov
hlt
mov
dec
and
aad
push
mov
int3
or
cwtl
icebp
pop
pop
fldenv
adc
adc
mov
pop
push
lret
insl
lret
repz
push
dec
or
sub
sub
cmp
pop
fnsave
aaa
inc
adc
lcall
dec
mov
pusha
popf
dec
mov
mov
mov
insb
sahf
test
popa
ret
arpl
inc
cmp
test
dec
stos
addl
lods
insb
or
sbb
dec
jp
enter
dec
sbb
cmp
cltd
add
in
in
jecxz
fdivr
lcall
in
js
insl
jb
das
sbb
repnz
or
adc
ljmp
lahf
out
pop
cmp
into
inc
imulb
lahf
jp
cmpb
xchg
das
int
mov
out
sub
call
icebp
or
xorl
mov
jae
and
inc
inc
push
adc
jns
test
pop
cli
ja
xlat
repz
iret
in
sub
rcll
minps
dec
add
adc
cmp
mov
mov
jb
lcall
cmpsb
xor
mov
sub
icebp
pop
shlb
cmc
or
cmp
ficomps
fdivs
stos
int3
subb
call
xchg
and
jno
lcall
sbb
cld
sbb
fcompl
jnp
insl
mov
and
fyl2x
gs
mov
sti
lcall
cltd
testb
sbb
pop
mov
out
push
mov
aam
mov
rcrl
mov
jl
add
aad
and
ficoml
outsl
fwait
decl
add
cli
nop
inc
test
and
jp
add
pop
test
cmp
sbb
dec
ret
mov
test
out
repnz
pop
mov
xlat
in
adc
sub
subl
xchg
inc
fsts
push
repnz
mov
dec
xor
mov
popl
insl
xor
xchg
in
dec
test
mov
mov
jmp
mov
jne
xchg
and
movsb
pop
adc
icebp
pop
sti
or
rclb
daa
clc
fsub
jae
inc
sahf
jnp
jbe
jbe
mov
mov
mov
nop
mov
mov
cmpsb
push
push
sub
scas
push
xor
mov
adc
insl
mov
dec
repz
sti
inc
push
pop
daa
in
pop
jo
jmp
fsubl
mov
inc
push
push
dec
pop
mov
aam
aad
adc
insl
hlt
icebp
push
ljmp
aad
inc
je
ret
popf
movsl
div
dec
inc
sbb
pop
ljmp
mov
inc
std
call
sbbl
push
bswap
mov
adc
fisttpll
sti
sbb
outsl
stos
fdivrl
fnstsw
inc
shlb
scas
test
test
fsubs
sub
fcmovne
psubusb
push
mov
cmc
incb
adcb
ret
adc
push
lods
or
mov
mov
stc
js
imul
xchg
or
push
cmp
cmp
test
in
and
call
loope
xlat
jmp
mov
or
inc
or
sub
cwtl
push
sub
and
mov
imul
pop
mov
and
sahf
iret
out
and
xchg
jp
cwtl
dec
adc
sbb
aad
shrl
scas
sbb
pop
cmpsl
aas
jl
jecxz
fbstp
push
movntq
out
dec
jae
lods
out
out
jmp
in
sbb
xorl
das
mov
cmpsb
xor
lahf
lret
in
add
inc
and
fimull
jnp
roll
inc
out
xchg
shr
addr16
sub
jnp
add
xchg
outsb
std
rolb
or
jae
pop
mov
jo
popa
fisttpl
mulb
add
outsl
xor
movsb
in
daa
lcall
adc
es
and
cmp
and
pop
in
lahf
push
bound
loope
rcll
inc
jae
neg
mov
rol
idivb
push
mov
mov
pop
sahf
scas
ret
mov
xchg
nop
dec
subl
ja
js
cmc
fs
cmp
cmp
push
adc
dec
mov
movsb
test
inc
into
out
rcrl
mov
lds
push
notl
dec
mov
int3
push
cld
mov
add
add
ret
imul
stos
cmp
sbb
call
pop
adc
sti
mov
outsb
lret
mov
ljmp
orl
sbb
xor
mov
cmp
push
aaa
js
pusha
fnstenv
mov
lahf
cld
fisttpll
mov
mov
add
mov
int
jnp
lods
negb
xor
out
jp
xchg
xor
mov
mov
cmp
loopne
or
inc
mov
or
inc
jecxz
dec
mov
aaa
lret
xchg
or
nop
adc
fcoms
xchg
int3
push
nop
xor
adcl
push
mov
jno
insb
out
dec
adc
fsts
notl
pop
xchg
push
popf
xchg
mov
andl
mov
ss
enter
cmc
mov
mov
inc
xchg
fcmove
out
out
jg
jns
hlt
add
push
fisubs
jo
dec
pusha
dec
cs
push
adcl
gs
ljmp
in
out
mov
inc
add
sbb
cmp
cmp
pop
jnp
dec
adc
sti
cmpsb
push
and
adc
jmp
xchg
scas
leave
test
ja
sbb
push
xchg
mov
or
cmpsl
mov
sbb
in
je
mov
shl
push
sub
cmp
xor
inc
inc
fsubrs
rcrb
xchg
pop
cmc
scas
mov
xor
stc
fdivrl
popa
sub
push
lcall
ja
jno
dec
and
xorb
jno
mov
imul
mov
movsb
rcrl
lods
sahf
sub
lock
mov
jmp
sbb
dec
enter
shrb
push
push
jns
or
mov
push
push
add
mov
insl
push
and
xor
push
xor
sbb
jbe
rcll
in
mov
ljmp
or
cmc
test
or
xchg
pop
inc
sbb
mov
xchg
dec
insb
sbb
mov
stc
pop
sbb
pop
add
test
sti
mov
test
inc
dec
sub
pop
aas
inc
xchg
fdivrp
dec
lock
js
mov
sub
inc
push
icebp
adc
pop
dec
or
and
lds
mov
inc
xor
subb
hlt
pop
xor
fs
test
sub
mov
push
sbb
push
add
das
frstor
daa
xor
scas
in
es
cmp
push
inc
js
cmpsb
jb
jge
sub
xchg
pop
repnz
mov
or
mov
sbb
dec
fbstp
ret
sbb
jae
xlat
push
push
jmp
jo
pop
mulb
ret
adc
inc
xchg
orb
nop
shrb
sub
xchg
out
into
dec
insb
cmp
shll
out
inc
in
mov
dec
das
xor
push
add
push
pusha
mov
sbb
dec
insb
mov
lret
xor
ret
adc
imul
iret
add
dec
psubq
or
cmp
mov
jecxz
addr16
stos
les
in
enter
dec
leave
std
mulb
push
adc
lods
sub
sbb
xchg
stos
pop
mov
mov
or
inc
imul
push
cmp
sbb
pop
roll
mov
ja
insb
pusha
rorb
shlb
pop
test
xchg
cmp
adc
leave
pop
push
sub
inc
xchg
scas
in
imul
add
jg
test
lea
cmc
jnp
dec
jo
repnz
pop
jecxz
testl
repz
movsb
or
rcrb
loopne
push
pop
jl
jecxz
pop
fwait
and
and
cmc
jnp
sub
push
out
int
add
dec
js
cmp
inc
xor
xlat
inc
adc
mov
pushf
or
pop
lret
outsl
int
sbb
lods
cld
in
aam
pop
push
or
addl
push
inc
dec
data16
sti
dec
cltd
pusha
sbb
jecxz
jmp
adc
sbb
adc
sub
xchg
ds
hlt
push
xor
imul
ja
xchg
add
dec
enter
cmp
cmpsb
out
in
aad
rorb
xchg
fsubrl
imul
inc
pushf
jne
and
popa
cmp
jb
shll
pop
mov
jle
std
sahf
test
or
mov
inc
testb
sbbl
pop
add
fcmovnbe
mov
cmp
pusha
fs
or
sbb
adcl
push
imul
sbb
ljmp
add
or
pushf
push
sbb
mov
push
mov
insb
xchg
xchg
inc
test
xchg
les
push
cwtl
inc
xor
xchg
les
dec
fistpll
lcall
jno
outsl
mov
cmp
xor
lea
inc
mov
mov
add
sub
movsl
push
xor
mov
sub
ret
push
add
filds
add
shl
mov
mov
and
push
sub
add
push
dec
iret
sub
stos
cmpsb
test
or
clc
mov
mov
jae
mov
mov
clc
aas
xchg
mov
pop
cltd
cmp
jmp
pop
lret
cmp
test
lods
inc
sti
pop
or
adc
mov
test
dec
fmuls
push
test
test
mov
enter
push
jle
adc
mov
scas
ficomps
sub
push
xchg
rcrl
jp
aad
enter
sub
xorl
adc
push
cmp
mov
inc
fmuls
out
pop
mov
out
mov
mov
mov
ret
popf
inc
popf
pop
inc
pop
mov
push
pop
xchg
sbb
xor
xchg
inc
lcall
gs
clc
jge
sub
lret
repnz
sub
imul
push
or
dec
aas
xchg
je
mov
stos
push
inc
sub
in
push
sti
dec
cmp
test
es
mov
cld
test
jae
cmpsb
sub
add
or
fs
imul
out
pop
cmc
jp
mov
dec
sub
rcl
xchg
mulb
xchg
push
movsb
scas
xor
mov
xchg
dec
loope
and
addr16
daa
jl
sahf
aas
adc
aam
gs
add
outsb
pushf
stos
or
les
outsb
and
push
lods
push
mov
sub
jo
in
out
dec
outsl
int3
or
push
fld
add
xchg
xchg
adc
aad
jmp
loop
mov
das
xor
jg
lret
mov
mov
jg
xchg
mov
jg
jno
loope
ja
push
mov
add
fisubrl
loopne
in
push
and
rcr
xchg
lock
scas
adc
xor
out
iret
fcoms
jg
push
cmp
adc
aam
push
jne
mov
scas
in
inc
rcrb
mov
cmp
dec
dec
sub
add
pop
mov
lcall
ja
push
call
mov
jecxz
test
mov
mov
or
out
ljmp
fs
jmp
and
pop
inc
mov
sbb
repz
je
jle
jge
fwait
mov
mov
mov
aas
jns
push
pop
movsl
pop
xchg
mov
incb
ret
pop
inc
ja
ret
pop
lahf
ja
bound
push
out
pop
in
and
mov
fistl
std
or
mov
shl
stc
add
stos
sub
fwait
lock
clc
mov
push
repz
sub
or
pop
mov
sbb
xchg
jae
out
mov
push
xchg
mov
and
addw
icebp
jge
jo
loopne
jae
jbe
imul
xchg
mov
into
push
xorb
pop
push
add
cmp
xchg
lock
push
ss
aad
sahf
mov
dec
int3
inc
cs
bound
mov
cmp
dec
je
fadd
repnz
xchg
push
dec
dec
sub
loop
dec
inc
movl
sub
dec
jp
bound
sub
arpl
push
xchg
imul
push
cmp
je
icebp
call
js
fmulp
add
mov
lret
fimull
shrb
lcall
iret
mov
sbb
sub
mov
inc
test
xchg
or
inc
pop
adc
data16
ret
xor
js
xchg
mov
jmp
xchg
sub
xor
mov
cmc
xchg
dec
out
mov
and
pop
out
xchg
movsb
dec
push
filds
add
mov
mov
xchg
movsl
xor
xchg
mov
sar
xchg
inc
out
int3
jo
icebp
jbe
fneni(8087
xchg
xor
inc
popf
fstps
aaa
jae
out
arpl
cs
add
and
cmp
push
ret
push
mov
lea
mov
and
pop
into
mov
dec
out
adc
int
ljmp
cmp
push
fs
mov
mov
test
push
scas
dec
add
enter
out
pop
cs
sbbb
les
jle
fistl
pop
xor
cmp
jmp
mov
fwait
ret
xor
cmc
inc
jne
and
push
mov
cltd
sbb
mov
xchg
jge
movsb
test
mov
push
cmp
inc
inc
jecxz
je
mov
mov
scas
cmp
fisttpll
popa
loop
ret
xor
fdivrs
cli
ja
dec
adc
jb
mov
lods
ret
jecxz
add
loope
sahf
fwait
addb
in
jg
lds
movsb
sbb
mov
enter
pop
jb
stc
mov
sbb
pop
inc
jno
mov
mov
xchg
sarl
fbstp
les
sub
sub
cs
and
dec
rcr
iret
push
pop
or
fnstsw
aam
clc
mov
push
bound
push
sub
clc
inc
enter
inc
push
push
fistpl
mov
movb
push
mov
arpl
in
mov
xchg
inc
test
enter
lea
lahf
std
lahf
ds
dec
es
fdiv
dec
or
and
jno
mov
or
sbb
lods
xchg
inc
rcl
lret
pop
daa
inc
ss
dec
cs
mov
fcoms
shl
stos
add
xchg
out
mov
and
sbb
inc
fs
lods
sahf
sti
cmpsl
mov
out
hlt
cmpsb
adc
outsb
outsl
xchg
out
pop
movsl
bnd
lcall
push
add
rcr
xadd
movb
jbe
addr16
lret
jae
mov
and
dec
cmp
mov
xchg
mov
xchg
jae
and
or
xchg
jnp
shll
mov
pop
gs
inc
stc
insb
hlt
sarl
repz
mov
push
inc
jnp
loopne
pop
pop
cmp
inc
jmp
mov
mov
xor
int
rcrl
pop
cld
adc
xor
sub
pop
es
push
inc
icebp
aas
loope
popa
mov
inc
cmp
cmp
mov
out
lcall
int3
sub
movsl
sahf
test
adc
fstpl
popa
and
mov
sbb
fcoms
ljmp
xor
mov
jbe
mov
nop
xor
push
popa
adc
push
sbb
insb
sbb
addl
mov
push
cmp
add
and
sti
pop
cmpsl
cmp
out
les
pusha
call
jo
push
outsb
dec
add
lcall
mov
or
imul
sbb
in
mov
das
cmc
lea
jns
cmpsl
and
xchg
mov
dec
fdivr
insl
jp
icebp
pop
or
mov
int3
adc
ret
push
js
lahf
mov
dec
pop
pop
mov
pop
negb
mov
mov
call
stos
fmuls
shr
mov
fistpll
or
mov
cmp
or
inc
repnz
dec
or
outsl
adc
jb
jecxz
adc
enter
fcoms
gs
inc
ds
or
sub
jge
repnz
mov
aaa
mov
fstps
fnstsw
test
xchg
cmp
aad
call
sub
xor
sbb
dec
pop
cs
pusha
mov
cmc
add
fldt
std
jae
cmc
jge
mov
cli
aad
lret
arpl
xchg
std
xchg
mov
mov
mov
or
adc
sbb
pusha
mov
test
ljmp
pop
lcall
cmp
ljmp
adcb
mov
xchg
xchg
test
jmp
push
aad
pop
and
sub
sub
clc
sarb
sub
add
sahf
insb
add
out
pop
sbb
add
pushf
mov
xchg
and
es
mov
dec
sbb
movb
push
mov
scas
in
adc
mov
xchg
lods
aam
lods
and
pop
cld
mov
push
inc
inc
cld
stos
or
lds
mov
imul
xchg
jmp
push
push
sub
jmp
jge
fwait
stos
dec
fs
repz
into
in
fimull
out
repz
xor
cmp
in
mov
mov
movsb
push
cmp
jle
cld
test
inc
sbbl
add
mov
les
fs
imul
iret
leave
into
pop
jbe
xchg
adc
imul
adc
push
vpshlb
ds
js
jnp
push
xchg
lods
push
mov
or
bound
push
sbb
sahf
jmp
sub
adcb
xchg
fs
pushf
sbb
clc
or
pop
mov
xchg
lret
or
call
and
xchg
jle
xchg
cli
cltd
loopne
lds
insl
and
shrl
loop
push
cmpsl
push
push
cld
es
mov
rclb
ja
cmp
xchg
xor
shrl
pop
js,pt
dec
insl
rorl
jle
lock
fildl
xor
fsubrl
push
clc
xor
and
mov
fnsave
andl
jno
pusha
jae
mov
sbb
mov
mov
loope
addr16
mov
test
jbe
push
push
pop
mov
shrb
fwait
test
sub
jbe
xchg
loop
inc
adc
je
fstpl
mov
fidivs
xchg
push
inc
xchg
mov
push
sbb
rclb
mov
mov
jns
cmp
mov
dec
int3
jo
or
inc
cwtl
in
lcall
lea
xor
inc
adc
lahf
sub
push
enter
and
ret
das
shrl
sbb
shrl
xchg
dec
cmp
aad
cltd
cmp
pop
mov
icebp
inc
outsl
ficomps
xor
inc
mov
or
or
and
sub
repnz
call
movsb
xor
jne
sahf
sub
insl
pop
scas
sub
push
int3
data16
jae
pusha
push
push
aam
or
xor
cmp
pushf
jns
pusha
das
clc
leave
les
icebp
fs
adc
xchg
jo
dec
lret
ret
ss
cmp
adc
fldcw
iret
mov
imul
jnp
pop
ds
sub
xchg
rcll
scas
mov
loopne
mov
test
inc
adc
iret
mov
inc
hlt
push
inc
and
push
xor
xor
hlt
popa
aam
sbb
mov
outsl
sbb
mov
clc
stc
out
xlat
les
inc
lcall
sahf
xchg
fs
push
xor
fmul
into
jmp
scas
in
mov
ljmp
push
lds
add
mov
mov
adc
push
adc
pop
mov
cli
cmp
or
lds
dec
or
jp
jge
fistpl
cli
bound
enter
dec
or
mov
loope
and
test
negl
dec
addb
arpl
and
mov
jb
es
mov
mov
aad
lret
stos
mov
inc
scas
mov
ss
outsb
cmpsl
cwtl
andb
adc
jnp
or
mov
jg
mov
mov
andb
popf
xor
sbb
adc
femms
pop
jb
and
pop
pushf
xor
pop
cmp
sub
xor
mov
pop
jle
std
push
shlb
sbb
mov
popf
pop
pop
clc
lods
pop
jbe
aad
lahf
xor
cmpsl
fistpl
fdivrl
loop
nop
addl
pop
rcrl
mov
arpl
jo
leave
sbb
mov
adc
mov
outsl
adc
or
or
mov
xor
and
pop
mov
mov
into
cmp
stos
iret
cmp
sub
pop
xor
test
mov
pop
pop
or
mov
push
int
lret
mov
dec
pushf
inc
pop
lods
sub
hlt
ret
cld
adc
inc
xlat
ret
imul
push
std
lahf
push
ja
dec
int
in
icebp
inc
in
sub
sbb
imul
sbb
mov
popl
adc
adc
gs
dec
xchg
sbb
std
int3
ja
ljmp
fwait
or
repz
mov
int3
insl
into
vmovaps
lcall
mov
ja
addl
arpl
mov
sub
mov
ret
mov
xchg
pop
mov
dec
xchg
xlat
xchg
cli
adc
cmp
dec
xchg
sbb
scas
push
inc
sbb
out
cmpsb
roll
scas
in
jl
jl
pop
rorb
inc
mov
push
nop
mov
stos
out
xchg
movl
lods
jnp
clc
cmp
jmp
lds
sub
push
jno
daa
ror
add
and
pusha
xchg
ret
inc
cltd
ljmp
call
dec
xchg
out
lret
xor
cs
in
push
lods
inc
fidivs
sahf
add
push
cs
xabort
insb
imul
popf
fldt
popf
loop
std
pop
add
pusha
mov
xchg
stc
pop
push
jg
pop
loopne
call
ret
movsl
mov
add
popf
rcr
mov
or
and
jne
or
lret
clc
dec
jecxz
add
aam
mov
xchg
push
mov
enter
fstpt
jle
xor
test
aaa
sbb
loop
mov
mov
mov
adc
jp
dec
jmp
fsubl
cltd
cmp
cwtl
fwait
push
jo
fstpt
mov
ljmp
pop
int
adc
shll
shrb
fisubrs
mov
sub
stos
nopl
shll
and
sbb
aam
mov
imul
cld
movsl
js
push
flds
out
leave
xchg
inc
dec
xchg
cwtl
add
call
mov
jp
mov
loope
popf
movsb
nop
in
int3
jg
stos
sbb
shrl
aaa
arpl
mov
sub
je
das
cmp
or
shl
jg
in
adc
or
xor
jae
mov
sub
sbb
sbb
sub
pop
jns
dec
cmovge
add
xor
scas
sub
mov
ret
ss
dec
sub
inc
je
inc
pop
dec
test
addr16
add
ljmp
inc
jmp
lds
cltd
xchg
cwtl
add
xor
pop
xchg
hlt
pop
and
adc
and
adc
push
pop
gs
mov
testl
rorb
inc
and
push
xchg
js
adc
inc
scas
stc
enter
pop
fiadds
sbb
fcmovnb
mov
xchg
cmp
out
int3
mov
jne
jle
xor
movsb
jl
mov
sbb
xchg
lret
in
or
add
xchg
js
in
je
fwait
lods
sbb
rcll
push
xlat
insb
add
xchg
adcl
popa
jbe
shll
fs
imul
cmp
les
filds
add
popa
fstp
fldl
test
aam
xor
add
icebp
icebp
xchg
aaa
cmp
sub
jno
out
imul
dec
insb
cmpsb
fistpl
shl
aad
dec
xchg
mov
inc
outsb
jnp
and
or
mov
jnp
fistpll
out
adc
xchg
sbb
rolb
out
cmp
mov
mov
iret
scas
sub
into
out
add
mov
movsl
jnp
mov
inc
add
cwtl
push
scas
mov
sub
test
add
inc
sub
sub
daa
stos
repnz
fwait
aam
mov
and
mov
scas
dec
dec
out
je
xchg
ret
gs
ret
dec
cltd
movsl
loopne
lcall
push
cld
xorb
shrb
mov
sbb
xchg
jle
lcall
jecxz
push
mov
lcall
xorl
movsb
xor
fmul
add
bound
loopne
add
mov
mov
dec
and
jne
inc
mov
out
loope
push
int3
mov
hlt
out
adc
lds
jbe
repz
shl
push
aad
rol
aad
xchg
lods
out
lock
jle
xchg
adc
dec
sarl
xor
or
daa
sub
je
mov
jle
and
in
xlat
sahf
mov
cmp
stos
sbb
pop
mulb
dec
out
or
adc
pushf
add
mov
cmp
das
fwait
mov
int3
iret
jbe
mov
scas
popf
mov
lahf
arpl
fldcw
sub
test
dec
pop
dec
dec
dec
push
push
xchg
xchg
int
inc
sti
dec
std
cwtl
push
jle
incb
loop
sbb
int3
sub
pop
adc
add
je
fdivs
das
shrl
jb
inc
cltd
test
add
cmp
mov
lret
sahf
push
fstpl
jg
xchg
lods
pop
pop
xchg
add
jp
xchg
mov
hlt
ret
arpl
leave
ljmp
and
sahf
mov
push
or
add
inc
cmc
jge
mov
sbb
into
pop
cmp
call
dec
in
test
jno
orb
inc
test
rclb
dec
xor
adc
and
mov
jns
je
imul
repnz
outsl
pop
cmpsl
jns
push
and
call
shrb
repnz
ljmp
lds
clc
add
inc
gs
outsb
aaa
pop
enter
jmp
mov
pop
es
dec
xor
call
das
or
add
insl
hlt
push
frstor
mov
das
ret
and
popf
call
push
xlat
je
or
ds
mov
ds
xor
mov
fisttpl
dec
xchg
xchg
inc
push
leave
stos
mov
pop
leave
ja
lret
pop
leave
ret
cmpl
push
js
into
jnp
inc
sbb
cltd
dec
das
mov
sbb
jle
call
inc
xchg
pop
fdivr
cmp
mov
sub
push
shlb
mov
loopne
movsl
addl
call
mov
add
or
dec
and
aas
pop
daa
lea
jp
lock
aas
sub
push
clc
jno
les
inc
or
cmpsl
addr16
xchg
jno
lods
orb
cwtl
mov
jns
mov
push
enter
cmovns
sahf
daa
in
mov
mov
stos
inc
adc
paddusw
push
mov
add
jno
stos
sbbl
cli
push
mov
inc
daa
repz
arpl
push
imul
cld
lcall
fwait
adcl
int
bound
mov
fimuls
test
pop
dec
push
xchg
test
sbb
data16
xlat
sbb
jno
out
mov
in
imul
stc
pop
fsubrl
mov
mov
popf
pop
arpl
xchg
pushf
int
jge
in
xchg
enter
mov
jo
test
ficompl
loope
jne
lcall
ret
lret
fiadds
sbb
repnz
movsl
pop
mov
mov
divl
stc
outsl
das
fcomp
xchg
jl
mov
dec
or
dec
shr
fwait
xchg
xchg
out
in
and
xchg
dec
clc
push
xor
xorps
xorl
dec
lcall
or
pop
mov
fldenv
test
cmc
jns
xlat
add
jns
pop
icebp
xchg
ljmp
adcl
jo
sub
pop
adc
adc
stc
lcall
jne
lea
and
xlat
hlt
in
jb
sbb
pop
xor
ret
out
and
push
dec
in
cmpsb
mov
cmpsb
cld
cmp
addr16
sbb
sub
and
push
stos
fs
out
jne
jnp
addr16
out
cmc
jae
out
mov
pop
enter
push
sub
or
ljmp
gs
mov
lret
adc
loopne
lods
adc
andl
mov
push
inc
call
mov
iret
cli
jecxz
push
jl
mov
push
inc
cld
add
out
out
in
mov
ret
gs
add
fbld
ficomps
jno
rorl
cmp
icebp
out
adc
lret
call
mov
lock
shll
jns
imul
pop
or
sbb
xchg
sarl
loope
or
out
addb
lds
mov
mov
in
adc
cmp
xchg
jne
xchg
sbb
out
cs
jmp
bound
jne
out
icebp
orl
pop
cmpsl
pop
orl
jns
pop
xchg
pop
xchg
cwtl
xor
dec
and
stos
inc
jb
lret
mul
in
cmp
push
adc
int
ss
iret
gs
mov
fnsetpm(287
mov
mov
or
shlb
mov
shr
mov
cmpb
insl
ja,pt
dec
or
sub
xchg
ljmp
mov
mov
dec
push
iret
sub
xchg
mov
lahf
xchg
inc
xor
inc
push
js
stos
push
push
adc
cs
fstpt
aaa
sub
add
jecxz
test
xor
ljmp
fmuls
xchg
ret
mov
sbb
pop
pusha
fistpl
int3
movsl
xchg
jb
es
jmp
sub
cld
push
push
popa
outsl
pop
jo
out
in
imul
clc
add
lods
js
sti
or
dec
jae
and
imul
or
lcall
mov
sub
out
aaa
add
mov
push
mov
adc
pop
test
movsl
invd
stos
inc
out
mov
out
cmpb
call
mov
cmpsl
sub
fisubs
test
das
jmp
hlt
into
fbld
in
mov
sahf
push
call
pop
sahf
sahf
lret
rcrl
cltd
daa
sbb
push
pop
mov
arpl
or
push
test
xor
jno
adc
ja
pusha
repnz
scas
push
in
test
daa
mov
mov
int3
ljmp
cli
mov
aam
mov
popa
mov
imul
loope
aam
ja
sbb
mov
sbb
cmpsl
xor
les
sub
mov
lcall
jne
adc
pop
xor
push
and
jle
pop
jno
xor
subl
lods
xlat
aas
cmpsb
stos
orl
or
popa
or
add
pusha
scas
xor
outsl
in
inc
xchg
insb
je
jo
test
out
pusha
xchg
imulb
sbb
mov
cmp
mov
mov
repnz
in
in
popl
mov
dec
xchg
inc
pop
or
dec
js
inc
cmp
adc
mov
mov
pushf
inc
cmc
mov
enter
and
jle
sub
hlt
jl
flds
test
es
out
pop
jnp
mov
sti
jns
sti
xchg
cmp
jo
aad
add
cmpsb
push
repz
and
xchg
shrl
dec
mov
jg
mov
jo
test
loope
repz
mov
scas
inc
lea
xor
jge
xlat
in
ljmp
int3
jns
in
orl
mov
movsb
push
mov
shlb
sti
xchg
push
mov
xor
out
jge
repz
shlb
rolb
leave
inc
sbb
loope
and
xlat
push
mov
jb
movsl
mov
shlb
pop
popa
ja
inc
mov
test
push
movsl
add
lock
jo
in
adc
and
int
out
mov
dec
insl
sti
ja
das
cmp
dec
jbe
mov
shlb
jmp
inc
mov
js
insb
pop
daa
jo
incl
cwtl
inc
test
push
push
repnz
sbb
mov
push
movsl
mov
add
push
add
dec
ljmp
fdivr
inc
imul
jp
push
inc
mov
lock
cmpl
loop
cmp
dec
xor
je
lods
cmpsb
pop
adc
mov
push
push
push
inc
add
mov
sti
and
xchg
insl
fwait
or
pop
movsl
dec
sti
in
sbb
and
jp
pushf
push
mov
pop
xor
mov
jnp
or
mov
inc
adc
or
fsubp
shr
push
lods
les
scas
outsl
orl
inc
aam
pop
adc
lret
loop
cmp
or
or
push
ret
out
fimuls
and
adc
hlt
fstl
inc
inc
mov
lahf
lahf
loop
movsl
mov
jo
ret
and
sbb
xlat
sbb
enter
sarb
mulb
cmp
shrl
mov
push
scas
dec
xor
std
popf
sub
jae
adc
jb
add
rcrl
iret
push
mov
or
xchg
mov
mov
lock
push
in
je
push
dec
push
jb
sub
lret
adc
mov
rcrl
inc
pop
mov
sub
or
push
test
xchg
sti
jl
inc
testb
add
lcall
or
scas
sub
push
loop
sub
xor
push
lret
and
shl
mulb
aad
push
daa
xor
scas
xor
sub
and
mov
sbb
rcll
pop
nop
rorb
mov
xor
inc
xor
push
push
mov
insb
sti
mov
push
inc
inc
adc
loop
cmp
stc
mov
xor
rol
fimull
inc
out
add
and
popf
mov
rcll
jecxz
sub
mov
cmp
ljmp
mov
lock
adc
sub
and
push
lret
mov
mov
sub
lahf
imul
mov
popf
lods
stc
outsb
and
push
jl
cmp
add
sub
std
pop
shlb
push
arpl
adc
sbb
test
xlat
and
lods
xchg
test
add
nop
dec
fisttpl
mov
test
sbb
sub
outsl
cmp
shrb
inc
repz
sub
rcl
xchg
xor
pop
movsl
call
test
xor
out
stos
jae
push
decb
jno
mov
dec
fiaddl
pop
fistpll
inc
faddl
in
aam
mov
inc
jle
mov
dec
negl
xchg
insb
insb
mov
outsb
mov
dec
jbe
test
mov
cwtl
add
push
pop
ja
movnti
pop
inc
insl
push
cmp
inc
mov
std
out
sub
inc
cmp
mov
or
xorb
imul
pop
gs
add
bound
outsb
pop
out
pop
mov
test
rclb
jbe
mov
xchg
cmpb
bound
mov
aam
cmp
lahf
leave
stos
add
js
inc
insb
xchg
xor
cmpsl
dec
mov
jecxz
jecxz
mov
or
mov
ljmpw
movsb
les
push
mov
dec
leave
fucomip
out
out
inc
pop
ja
ss
les
in
daa
mov
or
adc
test
ret
pop
cmp
and
gs
sti
aas
popa
lret
lea
lea
pop
sbb
movsb
pop
inc
mov
push
inc
jbe
in
fsubrs
pop
test
or
lahf
ss
sbbl
add
ret
sub
pop
or
loop
xlat
scas
pop
pop
fs
daa
lea
aam
mov
dec
push
mov
call
lods
lahf
dec
cmp
call
fisubrl
repz
xor
gs
test
add
and
leave
push
pop
mov
lret
test
mov
insl
std
cs
insb
adc
xor
or
push
push
fists
aaa
mov
out
shlb
xchg
inc
adc
ret
cmpsb
dec
push
adc
inc
std
pop
aas
jns
mov
scas
ljmp
mov
mov
mov
dec
out
mov
xchg
adc
pop
inc
loop
stos
jmp
push
scas
repnz
mov
mov
lock
in
sub
outsb
stc
movb
or
jns
dec
xchg
sub
adc
and
int
sbb
xor
movsl
pusha
sti
out
cwtl
pop
loope
sub
stos
sbb
push
mov
ret
fcmovnb
fs
ret
dec
dec
into
cmp
xor
push
or
mov
dec
or
aam
fsubrs
or
scas
pop
loope
xor
aad
mov
pop
xchg
jb
stos
rcll
mov
or
mov
fwait
je
pop
inc
loop
dec
out
mov
addb
adc
and
mov
clc
xchg
mov
mov
int3
orl
pop
popf
mov
or
push
sub
gs
loop
add
lret
inc
inc
pusha
jge
pop
repz
mov
adc
xchg
cld
aam
mov
shr
mov
repnz
minps
sbb
cmp
jmp
testb
mov
add
cmp
jge
les
push
jbe
jmp
mov
add
enter
mov
mov
fstpt
daa
test
nop
lock
push
xlat
push
cmp
sbb
or
push
imul
filds
jns
jmp
js,pn
ljmp
loope
repnz
pop
inc
dec
cmpsb
out
xor
pop
mov
in
jg
xchg
or
push
push
loopne
inc
adc
pop
mov
push
sub
cmpsb
cmp
shll
and
push
mov
lods
jl
add
hlt
jl
fsubl
sub
push
cwtl
stc
lret
std
icebp
sbb
fldcw
and
push
jl
cmp
lods
bound
inc
xchg
into
stos
insl
mov
adc
jb
mov
mov
rorb
sbb
js
mov
into
cmpl
repz
nop
scas
inc
cli
jne
in
enter
das
enter
inc
out
push
jg
rcrl
icebp
aam
inc
inc
gs
pop
hlt
test
scas
xorl
lret
mov
std
sub
or
daa
adcb
inc
bound
sub
pushf
add
nop
test
jns
jecxz
leave
xor
xor
testl
or
push
dec
loop
inc
sar
mov
nop
cmp
xor
mov
out
jecxz
dec
push
push
push
xchg
xchg
data16
xchg
mov
sub
mulps
push
pop
ja
fidivs
inc
stos
inc
and
xchg
sub
loope
adc
jbe
outsl
shll
and
subb
mov
and
cwtl
and
sub
in
mov
in
mov
add
cli
or
cmpsb
pop
sub
shl
sbb
paddb
lods
loopne
jnp
jp
jbe
adc
test
dec
xchg
imul
mov
or
mov
in
sbb
cmp
fmuls
mov
js
test
mov
repnz
scas
push
call
ss
in
inc
enter
shlb
stc
jbe
scas
clc
mov
jne
sti
imul
addr16
repz
pop
jp
subl
lret
in
pop
or
xchg
loopne,pn
fildll
sar
adc
les
xchg
ret
stc
xor
jle
xor
negl
jno
shrb
sbb
aad
shrb
cmp
sub
mov
mov
dec
pop
rcll
movsb
jecxz
cmpsb
adc
ret
and
jp
fistps
add
add
add
and
adc
mov
pusha
out
fs
xor
jmp
in
rcr
mov
add
xchg
add
xchg
jnp
aad
je
cmp
pop
lea
fidivs
mov
inc
jmp
jmp
jno
xor
mov
pushf
xor
adc
in
sbb
into
insb
xchg
data16
cmp
push
sub
and
xlat
addr16
rcr
xlat
pop
test
out
push
and
sbb
out
push
scas
lods
addl
jo
fmul
mov
int
pop
es
test
std
movsl
cmp
test
call
dec
xor
pop
shrl
adc
roll
sbb
cmpl
lea
rcll
lds
call
fdivrs
es
mov
jecxz
mov
mov
inc
imul
xchg
mov
cmpsl
mov
adc
int
sub
lahf
mov
mov
in
or
dec
jae
cmpsb
stc
fiadds
cmp
add
insl
sbb
repnz
cmc
out
mov
sbb
push
in
stos
push
xchg
in
sbb
push
adc
out
mov
movsl
fs
push
push
lret
les
mov
xor
mov
mov
addb
out
sti
in
and
test
inc
inc
jge
insl
sub
jg
cltd
jecxz
cld
pop
iret
lcall
jp
out
push
repz
out
mov
js
repnz
lcall
add
das
add
sysexit
addl
mov
imul
mov
or
push
push
pop
mov
mov
pop
ror
cmpsb
mov
mov
lcall
loopne
push
daa
pop
daa
push
cmc
xor
cltd
dec
sbb
lcall
fiaddl
fidivrs
mov
imul
mov
pop
frstor
sub
fisttpl
adc
repnz
inc
or
cmpsb
sahf
jle
sbb
test
cmp
outsb
mov
jne
pop
pop
es
mov
sub
es
cmp
cli
mov
adc
xor
mov
push
or
xchg
bound
movl
shll
fsubrs
sbb
jg
add
insb
jge
into
cmpsb
jecxz
mov
nop
mov
dec
cmp
jno
cli
dec
dec
mov
add
aad
pop
and
shr
ficoms
dec
or
out
inc
mul
outsl
and
decl
lret
jo
dec
lods
pop
cmc
jecxz
cmp
dec
in
xor
mov
fcoms
xchg
std
into
outsl
int
test
cmp
push
mov
int3
sub
scas
jne
lahf
mov
loop
imul
pop
add
push
pop
sbb
push
pop
rdmsr
out
xor
cmc
push
push
ja
fisubl
push
out
jae
inc
mov
jecxz
dec
mov
xor
nop
cmpsb
and
insl
add
ret
loop
and
das
popf
hlt
push
push
mov
gs
daa
jno
xchg
jb
mov
ror
orps
xchg
pop
jp
pop
mov
cli
jg
movsl
xchg
fnstenv
leave
and
mov
cld
into
mov
jecxz
jne
pop
dec
ret
rorl
xor
sub
cmp
jne
rcr
jae
notl
in
ds
xor
cmpsb
push
mov
fildll
sbb
lods
aam
sub
cmpsb
iret
push
dec
ret
push
push
loope
cmp
mov
cmp
cmp
cmp
dec
jg
inc
lret
jecxz
test
cmp
ss
push
test
xchg
mov
xor
jge
cld
xchg
mov
pop
aaa
cmp
mov
jge
outsb
out
repz
fldt
xchg
dec
out
aam
cwtl
push
jle
jno
push
inc
add
push
hlt
stc
jb
pop
dec
mov
scas
enter
add
icebp
mov
inc
sub
sti
inc
scas
jl
test
cmp
xchg
mov
jg
add
inc
xor
addl
leave
mov
addr16
jb
mov
add
insl
cli
lret
sub
movaps
es
mov
xor
push
inc
loop
mov
mov
adc
mov
and
jmp
cmpsl
aam
mov
into
jl
cmp
mov
hlt
add
ret
cli
aas
adc
int
inc
mov
fmulp
addr16
je
add
push
mov
outsl
pop
sbb
adcb
mov
out
data16
out
div
xchg
in
aas
inc
cltd
lods
xchg
jae
inc
lock
ret
cwtl
cwtl
ret
mov
push
stos
test
sub
dec
mov
jnp
mov
cmp
in
andl
push
imul
xchg
fiadds
into
stc
inc
jno
in
jb
mov
mov
or
iret
enter
and
outsb
jae
and
or
ljmp
mov
jmp
enter
lret
jg
lahf
jmp
ret
sarl
push
ss
ja
dec
imul
pop
pop
iret
or
popa
dec
dec
call
pop
fidivl
jge
pushf
mov
mov
int3
jno
mov
jns
insb
xlat
dec
xor
test
adc
or
outsb
mov
add
xorl
test
test
inc
fcompl
test
mov
adc
push
out
mov
pop
inc
jg
ret
mov
xchg
rcrb
dec
pop
jmp
dec
out
ss
and
mov
or
pop
dec
pusha
jp
imul
lods
cltd
mov
jp
test
iret
and
fwait
jmp
inc
pop
lret
jp
in
pop
and
loopne
jge
mov
mov
sbb
cwtl
pop
imul
mov
adc
cmp
xchg
shll
mov
push
in
imul
and
in
and
cli
sub
aam
cltd
hlt
add
sub
dec
flds
adc
andl
push
jno
mov
out
fistpll
inc
movsb
fnstenv
int
stos
mov
mov
jne
ret
in
fstpt
adc
nop
dec
cmpsl
aam
stos
adc
stc
sbb
mov
add
movsl
scas
mov
inc
xchg
jge
leave
jecxz
adc
dec
pop
stos
test
pop
aad
ja
out
mov
sbb
cmp
mov
mov
xor
cmpsb
ds
sbb
ss
es
jecxz
dec
aad
adc
sub
clc
dec
fucomi
daa
aas
orl
jb
and
jbe
mov
sbb
pop
pop
add
inc
in
mov
sti
xor
cli
push
sub
mov
push
test
ret
jge
lods
cmp
sub
jnp
outsb
pop
mov
sbb
adc
test
cmp
clc
in
push
lods
sbb
push
test
dec
cmc
xor
inc
xor
mov
inc
mov
mov
lret
repz
xor
into
repz
jne
mov
and
sbb
push
xchg
adc
inc
lods
sbb
jnp
test
repnz
pop
loope
sub
cmpsb
cmpsb
adc
and
and
outsl
cmpsb
push
lea
pop
fs
outsb
mov
in
inc
sub
cmp
dec
out
sbb
mov
pusha
adc
inc
andb
fwait
mov
stos
mov
movsb
lds
mov
out
int3
ja
or
je
and
sbb
cld
push
mulb
mov
lock
lods
jns
cmp
and
inc
push
or
lret
fldl
stos
icebp
lret
mov
xor
insl
add
test
lcall
dec
pop
ret
push
mov
fucomi
mov
pop
push
sub
inc
arpl
mov
jb
pushf
in
add
dec
jns
pop
inc
push
inc
pusha
push
std
insl
enter
and
test
add
add
pop
cmp
adc
in
stc
mov
cwtl
cld
popa
cmpsb
or
mov
xchg
sbb
pop
test
mov
cwtl
in
inc
out
cmp
inc
mov
inc
adc
mov
add
mov
test
xor
jp
leave
rol
cmp
mov
lret
icebp
cs
pusha
or
pop
or
pop
add
mov
or
fisubs
sub
pop
sbb
mov
sar
adc
fxch
mov
test
sub
cmp
rclb
xor
scas
and
push
adc
mov
ljmp
adc
clc
pop
popa
or
cmp
movsl
mov
adc
les
mov
test
in
call
mov
test
adc
fwait
divb
xor
ljmp
fsubrl
aam
jo
jne
xor
add
std
add
loopne
xor
adc
or
and
fucomp
ret
sub
push
mov
inc
enter
bnd
push
out
dec
outsl
leave
sbb
jg
mov
xor
je
ret
lods
mov
jmp
fbstp
xor
mov
addl
ja
scas
mov
scas
push
std
lock
into
lret
push
sbb
les
mov
add
adc
lcall
pop
daa
movsb
mov
inc
jb
xor
sub
in
das
cmpsb
xchg
xchg
add
mov
adc
mov
adcl
ss
push
rorb
scas
jp
mov
popa
enter
fwait
sub
out
xor
negl
outsb
dec
jne
sub
ljmp
loop
mov
jmp
leave
lcall
and
je
jg
std
jecxz
fcmovnbe
call
cli
popa
sarl
pop
jl
and
cmp
pop
sbb
fiaddl
cmp
nop
fs
sub
loope
pop
mov
mov
sub
nop
out
and
call
fs
lret
popa
pusha
jno
aaa
leave
out
loope
dec
stos
pop
cmp
lods
xor
add
or
sbb
push
inc
hlt
out
adc
xchg
sub
jnp
mov
aam
imul
or
vmread
mov
push
insl
adc
jmp
pop
push
addr16
mov
mov
mov
into
aas
cmp
rclb
movsb
fcomi
or
jnp
repnz
fmul
jle
lock
jns
fldcw
hlt
fnstcw
sub
mov
mov
test
out
shl
je
rcr
cmpl
lods
adc
imul
mov
jecxz
jnp
data16
or
push
push
sub
fs
nop
lods
xorb
scas
cmp
push
adc
clc
cli
mov
mov
jp
aas
out
out
xor
and
cmc
loopne
sub
xchg
pop
testb
dec
fldcw
pop
repz
mov
xor
sarl
xlat
fsubl
cs
shlb
lret
testb
jg
fsubs
fldl
cmp
movsl
leave
pop
sbb
gs
inc
sbb
cmp
adc
iret
stc
out
scas
jne
pop
sbb
fdivrl
xchg
mov
test
add
jl
cmpsb
test
insl
pop
into
sahf
int
push
or
xor
insb
adc
scas
mov
jbe
ja
gs
shrb
divl
cmc
or
mov
repz
mov
out
icebp
sbb
test
clc
in
clc
cmp
pusha
inc
fwait
into
and
test
outsl
enter
movsb
and
loop
ret
out
inc
inc
add
cmc
inc
lds
dec
fidivrs
push
or
rorb
sbb
fdivrs
mov
fsubp
sbb
arpl
mov
aaa
or
mov
jecxz
lock
xchg
pushf
loopne
jecxz
inc
xlat
mov
cmp
jns
lret
mov
or
lods
pop
sbb
lds
inc
mov
pusha
subb
imul
testb
int
lcall
lahf
add
stc
pop
negb
rcl
jne
test
sub
inc
sti
call
sbb
lods
push
push
adc
jmp
les
inc
pop
jl
movsb
mov
and
add
std
std
lods
in
lret
imul
rol
cwtl
jae
jmp
int3
into
or
sub
pop
pop
add
jnp
cld
sti
push
repnz
add
mov
cmp
sahf
scas
mov
lds
xchg
push
add
xorb
sbb
sub
movsb
outsl
cmpsl
pop
jbe
ljmp
stos
test
xchg
sarl
imul
loopne
inc
push
inc
jl
out
nop
jp
pop
lret
test
sahf
shlb
mov
shlb
mov
add
insl
test
dec
roll
mov
aaa
xlat
daa
push
jp
push
sbb
xchg
sub
pop
cwtl
test
and
jb
arpl
lods
mov
push
jl
lds
xor
pop
mov
pop
xchg
dec
xlat
cmp
mov
outsl
fnsave
sbb
dec
mov
fistpll
outsb
icebp
cmp
dec
ss
gs
adc
or
int3
test
mov
inc
inc
fmuls
lock
pop
sbb
movsb
adc
mov
push
pop
ljmp
outsb
std
inc
sub
dec
cmpsl
mov
jb
push
xor
jle
cmp
sub
pop
pop
and
test
popa
xchg
loop
leave
idivb
lret
lea
andl
addr16
adc
and
push
cmpb
or
pop
push
dec
fcomip
repz
testl
dec
dec
lea
or
xor
sbb
add
push
fxch
cs
popf
bnd
dec
xchg
push
mov
add
cmp
das
imul
int3
xchg
and
lods
cmp
mov
mov
int3
mov
jl
outsl
fisubl
fidivs
xchg
dec
xchg
add
mov
jb
sbb
jb
out
lcall
lods
rcrb
scas
icebp
push
inc
dec
or
sbb
jb
push
outsb
out
fcoms
sbb
or
xchg
out
ret
loopne
cmc
rol
xchg
dec
jbe
jae
add
jo
dec
imulb
mov
arpl
outsb
ds
rcl
pusha
mul
xchg
jnp
test
sbb
push
lods
inc
outsl
nop
mov
jle
mov
popa
filds
enter
aam
cwtl
cmpsl
ds
adc
inc
pop
dec
movsb
mov
rolb
aam
icebp
mov
push
sbb
sub
mov
in
xchg
insb
aas
mov
and
cld
leave
outsb
movl
mov
and
jecxz
mov
inc
fs
insb
dec
out
stos
fidivrs
dec
mov
js
cli
data16
and
add
ficoms
call
push
fucomip
inc
and
mov
enter
dec
mov
int3
cli
sbb
sbb
pop
push
rcl
arpl
add
stos
mov
in
sbb
mov
addr16
decl
xor
or
jmp
sbb
xchg
sahf
mov
xor
xchg
sub
xor
xor
mov
push
cmpsl
cmp
pusha
into
xor
xchg
data16
xchg
sub
or
les
or
lret
cmpsb
inc
aam
xchg
dec
xchg
je
lds
push
ja
je
aas
push
out
loopne
mov
subl
aaa
mov
insl
push
xlat
call
xchg
jecxz
fcomps
xor
lea
cmc
je
lret
enter
mov
add
adc
or
icebp
ds
stos
cmp
and
xchg
inc
lret
cmpsl
into
push
sbb
out
mul
push
or
ss
lcall
jmp
lock
into
and
push
inc
adc
inc
or
cld
or
lcall
or
jb
sbb
jne
sbb
into
ja
in
mov
lret
cmp
push
or
mov
add
negb
data16
rol
insl
xorb
testl
xchg
xchg
lea
rorl
stos
leave
vpcomd
fs
fidivrl
inc
mov
mov
cld
cmp
and
cmp
mov
sbb
push
jne
mov
out
sbb
add
push
test
jge
sub
pushf
cmp
push
jno
add
mov
pusha
and
fcoml
dec
aad
mov
push
scas
out
cs
xchg
jmp
cmp
sbb
adc
push
mov
push
pop
in
sub
sub
daa
test
je
xor
jmp
add
popl
in
cmp
cmp
imul
sub
cmpsl
sbb
data16
movsl
xor
cs
jle
pop
lods
sub
leave
pop
and
xor
and
push
sbbl
cmpsl
xchg
inc
lcall
loope
mov
jne
pop
fimuls
mov
pop
imul
jnp
mov
fwait
xorl
mov
subb
add
out
xor
inc
sti
pop
dec
pop
in
mov
sbb
pop
shlb
jge
fsubs
xchg
cmp
aaa
mov
mov
adc
mov
sti
cmp
ja
pop
pushw
sti
js
inc
dec
faddl
insb
mov
add
addb
add
jmp
rol
or
cld
dec
ja
push
pop
mov
cmpsl
in
mov
pop
cli
movl
inc
or
mov
mov
daa
iret
aaa
mov
jp
movsl
cmp
jbe
dec
aad
mov
mov
xor
cld
and
daa
dec
les
xor
std
aad
pop
int3
mov
xchg
add
imul
jbe
mov
push
std
add
insl
popa
mov
test
mov
jp
sbb
mov
into
outsb
add
mov
sbb
lods
cmp
mov
jae
cmp
jg
lods
inc
sbb
mov
loop
mov
out
inc
cmp
adc
jp
mov
add
xchg
pop
pop
pop
mov
jnp
pop
outsb
sbb
das
xlat
pop
mov
jnp
jne
std
bswap
jge
inc
jae
sub
loop
push
cltd
cmpsl
push
aaa
xor
idiv
test
jae
pop
fidivs
cmp
pusha
lret
push
rol
and
and
je
lods
dec
out
popl
pusha
jbe
or
and
mov
in
jae
pop
sub
aad
ja
lret
mov
or
sbb
sti
das
std
xchg
ja
stos
cmp
jb
jecxz
in
out
das
enter
push
repz
cmpl
push
lahf
xchg
adc
push
imul
xchg
stc
sahf
fistl
cmp
jae
cmpsb
les
pop
inc
movsb
cli
adc
inc
cwtl
mov
jno
outsb
mov
aaa
mov
xchg
aas
mov
or
ja
shrb
push
insb
xchg
lock
push
xor
push
ret
pop
ljmp
ret
adc
subb
mov
stc
mov
xchg
push
outsb
dec
mov
push
movsb
mov
push
dec
cmp
sbb
into
nop
push
mov
insl
fdivl
xor
xor
aas
mov
inc
xor
fcmovb
test
rcr
xlat
nop
cltd
dec
jae
adc
adc
cmp
lcall
mov
outsb
adc
jecxz
cli
xlat
add
das
jbe
in
push
cmp
outsl
xchg
mov
out
mov
mov
lret
aam
pop
call
jnp
addl
adc
leave
stos
je
mov
cltd
add
fdivp
cs
mov
fwait
dec
insb
mov
mov
repnz
inc
add
aaa
jne
ss
shll
ret
subb
into
iret
jb
lock
lea
pop
fidivrl
pop
lret
dec
inc
sbb
arpl
gs
and
repnz
icebp
aas
inc
out
outsl
pop
test
addl
es
pop
std
mov
int
aaa
mov
lret
add
or
xchg
xor
mov
bnd
jmp
jnp
popf
xlat
sub
dec
rolb
loope
mov
test
dec
cmpsb
stos
inc
sub
fwait
sub
jne
cmpb
pusha
or
cmp
iret
mov
cmpps
and
scas
in
sub
insl
mov
orb
adc
popa
arpl
push
int
lcall
cmp
mov
sub
ss
jb
inc
rorb
aas
in
insl
push
rorl
cmp
aad
loop
testl
xor
xchg
dec
je
inc
shrl
inc
sahf
popf
xchg
aam
pop
test
mov
pop
repnz
loop
xor
test
sbb
adc
in
insl
aas
sub
ds
adc
adc
sub
cmp
shlb
outsl
ficompl
jg
hlt
stos
mov
xchg
gs
dec
cmp
lahf
scas
dec
js
jbe
std
arpl
push
jmp
pop
test
push
bound
push
jl
dec
dec
arpl
bound
lret
icebp
ja
jo
cli
bound
outsl
std
outsl
hlt
or
sbb
push
iret
imul
pop
pushf
loopne
insb
add
or
xchg
cltd
push
ss
cltd
lcall
push
or
push
mov
inc
mov
fldt
cltd
cmp
jae
ljmp
push
rclb
jb
mov
mov
xchg
jg
cmp
mov
sub
inc
cmp
xor
xor
repnz
push
stc
test
jp
pop
mov
mov
pusha
sub
inc
push
mov
shll
loop
mov
pushf
pusha
xor
mov
cmpsl
cmp
stc
scas
jp
and
clc
sbb
lret
sbb
add
mov
inc
pop
xor
cmc
cmp
jns
inc
pop
and
fstp
dec
shrb
test
in
stos
jbe
aas
fsubl
arpl
pop
test
mov
mov
in
fisttps
outsb
lret
cmp
mov
mov
mov
pop
jmp
mov
out
xor
in
mov
test
cltd
mov
mov
or
shll
popa
jl
or
fsubrl
pop
push
gs
shrb
xor
adc
mov
cltd
sti
fsubrp
and
loopne
xchg
mov
cwtl
mov
loop
mov
xlat
sub
arpl
mov
sub
jmp
test
add
leave
mov
push
test
test
add
imul
rclb
jne
mov
jle
dec
mov
push
push
dec
dec
test
repz
sti
and
cli
xor
les
jp
and
mov
inc
mov
rorl
in
scas
fs
icebp
int
dec
sbb
fdivrs
sbb
push
jl
js
loope
cli
adc
mov
lds
mov
stc
das
xchg
add
fs
sub
mov
fnstsw
ds
cmp
mov
and
sbb
and
xchg
dec
sub
add
ror
jmp
fdivs
pop
push
dec
es
inc
arpl
sbb
sub
stos
rol
mull
or
sarb
jecxz
hlt
dec
mov
sti
add
xchg
mov
mov
push
dec
inc
adc
scas
call
in
imul
sahf
repnz
sbb
arpl
sbb
js
rcrl
lret
ficomps
adc
xchg
loop
cwtl
fwait
inc
sbb
mov
movnti
int3
dec
or
mov
insl
sbb
xchg
aad
shll
cmp
test
jge
inc
mov
sar
fmuls
sbb
jp
cmpsl
add
xchg
pop
adc
arpl
xor
and
and
inc
int3
xchg
stos
fstl
xor
test
mov
push
call
mov
mov
fistpll
xor
insb
or
cmp
dec
fisubs
mov
adc
add
setb
mull
adc
lock
pop
repnz
in
int
shrb
push
decl
cmp
stos
sub
jnp
sahf
sti
inc
stc
andnps
mov
xor
fstpl
jo
fists
sub
or
jl
sub
hlt
cs
sbb
sbb
cmp
or
outsb
fistps
addb
xchg
add
stos
xchg
jmp
test
xchg
add
or
imul
lods
sahf
sub
lods
sbb
mov
in
push
or
xor
shrb
or
and
sbb
or
pop
and
popf
imul
loope
cmp
stc
cmpl
mov
mov
mov
add
mov
push
outsl
xchg
test
inc
mov
push
sub
imul
cltd
cmc
pop
xor
mov
pop
sub
mov
lahf
rclb
cld
mov
lahf
in
sub
cwtl
std
fs
sub
das
das
xor
sbb
inc
push
mov
sbb
sbb
shr
shrb
scas
out
mov
jmp
adcb
mov
cmp
or
stos
push
push
inc
shrl
test
daa
mov
inc
aaa
cmp
in
cmp
fimuls
jp
into
lock
push
xor
orb
les
test
rcrl
test
imul
xchg
mov
dec
mov
lods
mov
repnz
test
aad
xchg
inc
push
lahf
pop
bound
hlt
and
sbb
mov
xchg
xchg
std
mov
jnp
push
mov
icebp
xchg
jb
jnp
xchg
sub
outsl
or
les
movb
or
mov
pop
cmp
fldenv
les
stos
fsts
xchg
jecxz
fnsave
lods
fnstsw
mov
pop
sbb
std
aas
adc
ret
lahf
mov
cltd
and
rol
add
fadds
iret
inc
aaa
push
pop
xchg
xor
add
fsubs
loopne
fs
mov
cmp
mov
fidivl
add
out
push
dec
aam
mov
pusha
icebp
clc
cmpsl
or
xorb
daa
mov
sbb
cs
add
loopne
jno
movsl
mov
cmp
mov
and
jg
int
test
mov
jge
adc
and
pop
add
cs
test
cmp
adc
adc
mov
lock
mov
jae
call
ucomiss
sahf
pop
mov
pop
test
xchg
mov
jge
lock
out
popf
aas
rcrl
lret
insb
mov
inc
xor
push
xor
lcall
cmp
test
mov
sub
imul
jb
fsts
adc
aaa
and
into
and
inc
ss
push
pop
push
inc
jmp
inc
dec
cmp
lcall
mov
push
mov
mov
sbb
mov
hlt
outsb
pop
daa
in
add
xor
push
lahf
scas
arpl
dec
enter
jmp
lods
aaa
call
ja
sbb
xchg
sub
stc
mov
bt
xchg
mov
adc
jo
in
jmp
sub
hlt
push
mov
adc
push
dec
loop
imul
mov
xchg
xchg
sbb
dec
imull
sbb
lds
sbb
lret
mov
insl
add
mov
xchg
les
jno
sub
cmc
imul
xchg
xorb
or
cltd
int3
stc
mov
popf
push
pop
fimuls
mov
cmpsb
into
add
insb
push
inc
push
xor
rcll
add
orb
cmp
scas
pop
mov
lahf
push
or
out
inc
test
push
sahf
cmc
jl
daa
sub
movsl
xchg
notb
xchg
fldl2e
xchg
push
mov
pop
sbb
outsl
or
mov
loope
xchg
and
mov
icebp
cmp
rclb
jo
dec
out
cmpsl
fimull
push
or
lock
xor
lcall
push
ss
mov
mov
add
cwtl
add
inc
cmp
mov
inc
negb
cli
repnz
fs
aaa
pop
push
mov
lahf
lahf
out
nop
ror
push
int
dec
inc
mov
add
aaa
enter
pop
cli
addr16
fimull
mov
dec
xor
enter
sti
pop
out
add
cmp
stos
out
iret
cmp
iret
mov
mov
loopne
mov
add
sbb
jb
or
mov
mov
xor
bnd
jnp
out
std
adc
bound
aas
mov
ljmp
xchg
loop
pop
pop
jmp
bnd
adc
dec
pop
icebp
out
mov
pop
adc
sbb
jle
jle
pop
sti
push
es
dec
inc
mov
cltd
and
out
test
mov
les
sub
clc
and
jmp
sub
call
pop
xor
dec
test
add
rcrb
iret
pop
push
add
mov
lock
pop
mulb
out
push
popf
mov
pop
les
negb
push
addb
inc
pop
push
xor
mov
hlt
call
es
sarl
cltd
mov
dec
outsl
lds
cld
fdivs
jne
push
pop
popa
mov
pop
mov
dec
mov
out
xchg
and
or
stc
and
stos
add
xchg
and
sub
rolb
xchg
adc
adc
and
and
inc
xchg
inc
popf
push
cmc
insl
xchg
cmp
lds
inc
inc
aam
mov
adc
jo
lahf
insb
jmp
mov
fldt
rcrb
ljmp
add
out
nop
test
pop
jg
jo
rorb
mov
scas
scas
popa
lahf
inc
lock
into
adc
xlat
lods
fisttps
in
sbb
and
xlat
pop
pop
mov
decb
out
scas
call
and
jbe
fdivp
jecxz
icebp
cmpsl
push
jp
jle
mov
std
or
push
aad
call
ds
jno
ljmp
fmull
mov
in
or
push
cmc
mov
xchg
lea
mov
mov
shlb
in
sbb
xchg
fcoms
and
or
and
jae
stc
add
lcall
fldz
leave
mov
push
cmp
in
popa
out
scas
repnz
adc
sub
cmp
push
leave
cmp
stos
idivl
aam
imull
roll
je
add
mov
inc
or
jle
xchg
jl
jae
push
mov
sub
rcr
mov
xchg
jmp
gs
call
lahf
mov
sbb
es
insl
addr16
daa
mov
lds
xor
push
mov
outsl
stos
mulb
sbb
mov
mov
lcall
mov
mov
or
aaa
jmp
xchg
dec
push
out
sub
fwait
mov
jae
push
mov
mov
xor
mov
es
gs
xchg
je
rolb
dec
cld
decb
push
cwtl
lahf
push
jle
jmp
popf
cwtl
jnp
lock
push
mov
and
sub
xor
stos
shl
andl
cltd
jo
fistps
mov
stc
sub
push
cmp
or
cmpsl
adc
out
push
cwtl
shrb
dec
and
ret
lea
pop
push
add
dec
push
ficoms
inc
es
stos
push
lea
sbb
xor
hlt
pusha
setae
repnz
sub
test
fxch
cmp
push
subl
adc
fs
ret
mov
lret
int3
scas
and
mov
mov
loope
sbb
movsl
ret
add
sub
jl
inc
cmp
outsb
xchg
inc
mov
jmp
shrl
hlt
adc
jmp
outsb
mov
rclb
jge
mov
lods
mov
lods
push
lret
repnz
gs
dec
jbe
test
fs
mov
scas
jne
int3
dec
frstor
pop
fbstp
shlb
insl
push
in
and
dec
imul
mov
mov
movsl
mov
out
mov
insb
mov
cmp
in
inc
lahf
pop
lret
jno
loop
stos
inc
xchg
sbb
mov
rolb
fimuls
jecxz
test
out
xchg
sbb
fmull
ja
es
xchg
lods
jbe
repnz
pop
hlt
jae
lods
mov
dec
mov
loopne
enter
stos
inc
xchg
jl
rclb
inc
aas
xchg
push
outsb
adc
push
cli
cmp
add
sti
and
lret
fs
shlb
sti
aad
std
pop
jg
adc
pop
ror
test
mov
cmp
mov
aam
dec
notl
or
repnz
adc
ds
or
push
je
add
fwait
xchg
mov
or
add
pop
dec
or
mov
dec
js
mov
pop
xchg
rolb
inc
cli
leave
jmp
sub
and
in
filds
or
das
fwait
inc
adc
pop
cmp
das
loop
test
in
cmp
mov
decb
cmp
jbe
adc
or
xor
pop
xor
push
or
xlat
sub
jnp
mov
xchg
pop
dec
sbb
popf
sbb
mov
inc
aaa
mov
hlt
out
jno
mov
shll
scas
jbe
jl
jmp
sub
daa
arpl
insb
call
dec
and
decl
int
fwait
invd
cs
ds
sbb
mov
pushf
pop
int3
xchg
nop
rolb
popa
xor
dec
insb
fsubs
lret
xchg
lds
inc
cwtl
adc
pop
jbe
cs
test
adc
lods
sarl
fdivrp
jl
dec
out
inc
jo
and
and
cli
mov
mov
pop
data16
push
cmpsb
xchg
ret
add
jb
push
pop
xlat
pop
notb
ja
jp
sbb
out
movsl
iret
mov
mov
push
push
stos
loop
mov
cmc
ficompl
lock
scas
cmpsl
je
push
or
rolb
cltd
xchg
mov
stos
movb
adc
sub
jbe
mov
mov
out
fists
shl
pop
popf
cwtl
pcmpeqd
cmpsb
popf
pop
dec
and
call
pop
cmp
push
inc
inc
push
insl
dec
add
ficompl
dec
dec
jb
stos
cmp
push
imul
repnz
cmp
pop
lea
imulb
cmp
cltd
mov
mov
xlat
mov
out
adc
and
jle
cwtl
mov
lea
jmp
xor
mov
mov
mov
push
add
ret
xchg
mov
adc
mov
jbe
out
fdivr
sti
cmp
aam
xor
outsb
push
cmp
inc
mov
fisubl
aaa
fimuls
movsb
sub
aaa
andl
push
inc
sub
mulb
test
lods
cmc
pusha
hlt
xchg
xchg
popf
adc
add
cltd
add
add
lds
mov
or
lahf
imul
mov
imul
pop
into
or
push
je
push
sbb
or
jecxz
bound
std
push
push
out
jne
mov
js
psubb
adc
sti
jecxz
mov
jae
pop
lds
stc
sub
rcrl
test
xchg
and
imul
subb
xor
ror
push
in
fdivl
pop
or
xchg
lcall
daa
test
pop
cmp
push
in
and
popa
pop
rcll
mov
sarl
jp,pn
ret
dec
nop
sti
inc
dec
data16
cmp
cmp
mov
sbb
mov
cmp
idivb
pop
sbb
or
lahf
inc
test
xchg
inc
adc
insl
lahf
mul
xchg
les
lods
test
adc
loop
inc
mov
lods
or
mov
shll
das
adc
pop
loope
push
sbb
sbb
dec
and
jp
outsl
fimull
mov
cmp
xchg
inc
fstpl
push
push
jg
insl
mov
stos
out
xor
push
inc
inc
lds
nop
jge
sbb
icebp
pusha
aaa
test
sbb
mov
push
cmp
ss
or
xor
lods
fcomps
in
inc
cmpsl
add
push
icebp
scas
xorl
incl
or
sbb
scas
mov
sub
fwait
and
loop
rclb
inc
or
fsubp
pop
and
xchg
pop
push
in
aas
cmpsb
xchg
iret
in
mov
and
or
sub
and
mov
sbb
int
push
sbbl
dec
jbe
fadd
push
pop
xor
push
mov
aaa
push
enter
ljmp
mov
test
pop
push
jmp
fcmovb
fs
lods
jb
inc
int
push
push
dec
xor
mov
dec
sub
int
and
rorl
mov
and
mov
test
sub
inc
dec
adc
cmpsl
xchg
xor
lret
cmpsb
or
fcmovbe
or
bound
test
mov
outsl
sbb
sbb
push
cwtl
add
shll
and
push
dec
mov
movsl
lods
xchg
out
or
adc
imul
arpl
inc
out
xchg
insl
outsb
aad
mov
jae
add
xchg
sarl
mov
ds
loopne
in
mov
in
mov
sbb
imul
and
cmp
xchg
ljmp
imul
or
mov
pop
pop
dec
pusha
stc
xchg
icebp
ss
and
pop
addr16
mov
adc
mov
add
mov
pop
pop
inc
mov
out
inc
jb
out
stos
jg
lods
ss
xchg
cltd
pop
add
fidivl
shrb
mov
mov
sbb
jl
jp
movsb
push
dec
xor
dec
cmp
scas
jp
pop
cltd
cmp
inc
rolb
push
pop
dec
pop
repz
movsb
sahf
mov
mov
pushf
test
jno
and
pop
hlt
out
xchg
xor
fcoml
adc
dec
xor
mov
test
ret
fs
xor
outsl
sub
cs
icebp
fnstsw
mov
mov
adc
pop
jecxz
jg
pushf
jb
xchg
adc
jne
out
adc
dec
jnp
push
xlat
stos
sbb
cmpsl
or
or
lret
ror
mov
.byte
and
add
jns
mov
lock
icebp
jne
enter
nop
in
imul
and
mov
loope,pn
sbbb
dec
fidivrs
sub
mov
xchg
push
neg
cmpsb
pop
mov
mov
outsl
movsl
shrb
enter
and
scas
xchg
adc
sub
dec
clc
pusha
add
ja
pop
xor
xor
mov
fsubs
cs
les
mov
push
int
xor
pop
jg
add
xlat
adc
repz
mov
jae
iret
rcr
push
repz
jp
imul
stos
xor
das
mov
mov
sub
jmp
sahf
xchg
aaa
cmpsl
push
cld
xor
into
test
rcrb
out
cmp
pop
jg
or
shl
loopne
mov
ljmp
push
adc
push
lret
lds
fimull
jnp
out
nop
fwait
in
fidivrs
orb
setae
sbb
dec
mov
subl
mov
ljmp
aas
sub
loop
lcall
call
fiadds
rol
mov
nop
mov
adc
cmc
rclb
lods
mov
or
bound
push
popl
inc
rcr
dec
jno
add
sahf
inc
hlt
jl
xlat
sbb
leave
mov
fdivp
jl
jae
jge
movsl
cmp
jl
push
sbb
icebp
nop
xor
sbb
mov
mov
push
adc
and
shl
inc
popf
repz
dec
pushf
cld
sbb
leave
pop
lock
push
and
aam
xor
icebp
xchg
jmp
and
dec
xor
push
and
push
mov
stc
sbb
roll
push
icebp
pushf
daa
into
aam
push
pop
and
es
out
mov
add
inc
xchg
sbb
push
sti
or
inc
popa
test
pop
push
lret
jmp
pop
jbe
mov
sbb
movl
shlb
out
mov
call
bound
jp
gs
push
dec
rcl
or
dec
and
sbb
jg
mov
adc
iret
lea
mov
insb
sub
inc
in
cmp
shl
xchg
pop
mov
jle
sub
divl
test
in
xor
xchg
cmp
loope
add
rol
and
testb
int
ficompl
mov
stos
mov
xchg
and
jecxz
mov
mov
dec
sub
sub
fisttpl
cmpsb
stc
xor
stc
ficoms
sub
pop
mov
out
sti
mov
cli
xor
sub
shrb
adc
in
xchg
cli
aas
fcoml
xor
cmpsb
xor
lahf
jl
jge
loop
in
xchg
xchg
inc
adc
mov
dec
sub
or
int3
cs
jle
test
fisubl
jle
popl
leave
mul
fmull
sbb
dec
stc
xchg
jp
mov
pusha
ja
jl
xchg
aaa
fistps
xchg
scas
out
enter
imul
jecxz
inc
cmpsb
mov
cli
sbb
pop
mov
andl
mov
pop
add
popa
jbe
dec
mov
push
push
imul
dec
xor
and
cmc
jecxz
movsl
or
push
and
dec
test
cmp
push
or
jl
stos
sub
mov
adc
daa
xor
dec
icebp
jmp
jnp
jg
shrl
mov
push
mov
es
decb
insb
adc
and
inc
es
dec
mov
imul
out
push
jecxz
mov
testl
sti
mov
pop
out
rcl
lret
inc
cmp
ret
add
sbb
repnz
cwtl
dec
cwtl
add
inc
aas
out
adc
nop
cltd
fs
mov
push
pushf
testl
or
sbb
xchg
jne
mov
into
in
dec
subl
xchg
stos
psrlw
cli
arpl
mov
int
repz
adc
pop
inc
xor
mov
divl
mov
pusha
popf
mov
addr16
popf
arpl
sbb
mov
insb
fcompl
fisubl
and
outsb
add
adc
insl
cmpb
jl
mov
pop
and
outsb
push
sub
xor
inc
jle
lods
lea
pop
sbb
addb
adc
adc
les
mov
test
int3
mov
inc
repnz
andl
popf
scas
fdivr
out
mov
mov
fldcw
icebp
xchg
lret
sti
pop
inc
fmuls
push
jae
lea
flds
mov
xor
add
mov
jmp
jns
stc
nop
loop
rcr
lods
mov
icebp
repnz
sbb
sbb
mov
shl
enter
test
sub
sbb
push
inc
imul
aam
sbb
add
pop
push
or
or
sub
dec
jl
pusha
int
push
sub
dec
shl
pop
test
dec
lea
pop
add
inc
mov
iret
fistpll
adc
lock
or
mov
hlt
sar
jmp
cmpsb
mov
adc
inc
in
mov
cmp
lahf
xor
nop
in
cmc
push
dec
jecxz
mov
out
stc
push
dec
mov
loop
add
test
dec
outsl
add
popa
xchg
insl
test
loopne
add
sbb
into
jge
sbb
push
mov
das
xadd
push
ja
pop
pop
xor
stc
inc
pop
stc
mov
fs
shll
and
lahf
cltd
out
test
aam
xorl
inc
fists
movsb
lock
push
pop
dec
xlat
repnz
xchg
dec
xchg
cltd
or
hlt
in
arpl
subl
cmp
pop
pop
orl
dec
es
cmpsb
pop
or
hlt
sbb
lds
ret
frstor
jno
jb
js
push
nop
xchg
push
ret
mov
fwait
loopne
add
mov
sbb
xor
stos
xchg
jmp
fistpll
loop
cltd
dec
je
je
mov
adc
jae
pop
jne
shrb
dec
xchg
adc
js
ss
adc
push
bound
fmul
pop
xor
jno
fldt
in
sbb
nop
int3
xlat
dec
std
pop
out
hlt
mov
mov
mov
mov
rorl
mov
inc
xadd
mov
or
fs
push
sub
testb
jge
sbb
lcall
inc
xchg
out
popa
and
mov
or
lcall
sub
movsl
xchg
popa
fstpl
aas
push
push
lret
fwait
popa
stc
xchg
vpxor
dec
inc
xchg
xor
cmp
and
or
movb
sbb
ret
lea
loope
push
jns
sbb
imul
sbb
and
enter
or
sbb
add
popa
or
pop
sub
fs
loope
mov
adc
ret
mov
xchg
aam
jmp
mov
jnp
mov
ja
stc
or
dec
aas
ja
lahf
jne
iret
or
rcrb
add
sub
mov
bound
jge
sbb
pop
mov
mov
test
xchg
leave
or
mov
dec
jnp
xor
mov
lcall
cmpb
inc
add
mov
fdivrl
lahf
sti
and
popa
xchg
ss
mov
mov
mov
cs
lret
adc
and
jp
repnz
and
iret
xlat
pop
mov
jg
into
repz
pop
lods
lds
imul
jno
dec
iret
xchg
testl
call
addl
inc
sbb
out
sub
inc
jnp
or
or
imul
mov
xor
adc
cltd
outsb
xchg
dec
push
lret
fsin
xor
orb
sub
cmp
lret
dec
xchg
jge
aaa
ds
mov
gs
xlat
loopne
jle
imulb
scas
dec
out
es
mov
mov
in
lret
xor
jo
push
enter
mov
xor
loopne
jge
mov
clc
addr16
jb
insb
lahf
xor
mov
xchg
lret
jecxz
in
ret
or
nop
mov
cmpsl
mov
push
and
adc
mov
aaa
cmp
and
sbb
out
into
into
dec
test
ret
lock
mov
pop
or
cwtl
faddp
fldcw
aas
mov
cwtl
xchg
aas
xor
test
push
in
bound
mov
push
mov
aas
jle
fwait
out
js
ljmp
in
push
aam
mov
dec
push
out
in
notb
or
loopne
fimuls
adc
popa
imul
jg
fsts
xchg
jae
divl
inc
call
pop
cmpsb
rorl
push
lds
aaa
cmp
push
mov
adc
inc
inc
movsb
into
sbb
int
jmp
cli
mov
ss
movsb
lock
das
jno
xor
xor
xchg
push
subl
mov
cmp
fwait
out
dec
adc
test
movsl
aam
fwait
stos
pop
jge
or
inc
enter
inc
sarb
mov
test
add
lock
or
insl
cmp
scas
test
es
sbb
into
jmp
sarb
and
fidivrs
cmp
repnz
shlb
xor
and
iret
add
xchg
stos
xorl
jo
mov
in
pop
notb
push
push
fsubl
mov
test
sahf
cmpsl
lods
cld
idivl
inc
add
mov
mov
mov
stos
das
lret
je
cld
mov
inc
adcb
insl
loopne
imul
lock
leave
dec
shrl
cmovs
xchg
mov
add
pop
sbb
or
adc
cmp
mov
loopne
jo
aas
add
sub
add
inc
inc
push
iret
adc
mov
repz
mov
push
popf
cli
ds
fistpll
mov
jl
aam
cli
leave
mov
pushf
mov
sahf
ret
int
pop
stos
jp
mov
mov
mov
int3
xchg
outsl
dec
dec
arpl
jle
hlt
mov
ljmp
inc
iret
push
cmp
stc
adc
push
popf
std
adcb
and
fucom
pop
push
push
mov
call
lea
ja
push
gs
cmp
sub
scas
and
lock
arpl
xor
movsb
mov
sub
testl
dec
jmp
les
ss
lock
imul
ret
jns
shll
out
lcall
cmp
dec
call
pop
jb
rorb
mov
repz
cmp
mov
lar
fcompl
and
pop
adc
cmc
loopne
xor
nop
push
add
enter
mov
add
scas
adc
jg
sbb
fs
in
mov
lods
mov
into
xlat
repnz
daa
clc
dec
scas
jp
adc
dec
dec
inc
cwtl
push
jecxz
dec
pop
jge
out
shrl
outsb
xchg
or
sub
and
orb
stc
out
arpl
mov
jmp
push
outsb
popf
clc
iret
pop
sub
sbb
push
xchg
mov
das
repz
outsb
and
ret
pop
cs
lock
out
test
mov
rcl
or
mov
and
mov
sub
push
add
rcr
hlt
iret
jmp
xor
jg
mov
inc
ljmp
ret
xor
arpl
mov
mov
icebp
imul
push
pop
pop
pop
stos
sub
pop
push
mov
in
jns
scas
shll
mov
add
leave
movsl
nop
repnz
push
dec
mov
test
aad
mov
ja
lds
hlt
mov
test
mov
cmp
test
ret
loop
inc
es
inc
repz
pop
sahf
adc
adc
ja
in
pusha
mov
xor
jbe
sub
xchg
pop
add
pop
cmc
sti
sbbl
jbe
cmc
gs
fisubl
jo
cltd
sub
add
add
pop
shr
push
jmp
lret
cmp
je
fldl
cwtl
and
fsubl
sub
jns
add
repnz
adc
fnstsw
cld
push
fisubs
mov
notb
out
pop
xchg
ja
.byte
.byte
add
inc
add
inc
add
add
nop
jge
xor
add
add
addb
addb
add
pop
add
addb
add
js
add
rolb
orb
add
loopne
add
clc
add
addb
add
nop
jge
xor
add
add
push
add
adcb
add
nop
jge
xor
add
add
add
add
sub
add
inc
add
addb
add
nop
jge
xor
add
pop
add
sldt
pop
add
cmp
add
jo
add
mov
add
mov
sldt
mov
sldt
rolb
add
call
add
add
add
add
add
add
addb
add
sbb
add
nop
jge
xor
add
add
addb
xorb
add
nop
jge
xor
add
add
add
add
dec
add
addb
add
nop
jge
xor
add
add
add
add
pusha
add
add
add
add
add
add
add
add
add
jo
add
add
add
nop
jge
xor
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
nop
jge
xor
add
add
add
add
xor
add
xchg
ret
add
add
add
jl
add
call
add
add
add
add
add
add
add
add
pushf
flds
add
add
add
add
sbb
add
add
add
add
xor
add
in
add
sbb
add
pop
add
add
add
mov
add
and
add
adc
add
xor
add
call
add
add
add
add
add
and
add
cmp
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
dec
add
dec
add
dec
add
dec
add
and
stos
cltd
adc
pop
xchg
sbb
outsl
outsl
js
inc
into
push
gs
inc
cmpb
mov
dec
cli
cs
push
leave
je
mov
fwait
rol
or
lds
call
js
jno
sub
push
enter
mov
leave
movsb
scas
inc
cmp
imul
loop
inc
pusha
jp
mov
xchg
mov
sbb
mov
mov
repz
stos
cmc
adc
adc
shrl
test
sti
fcmovbe
cmp
pop
sbbl
sub
fistpll
lahf
addl
jge
loope
sbb
lea
or
sub
mov
cmpl
pop
cltd
fs
bound
inc
js
es
xchg
cmp
ljmp
sub
lret
test
push
dec
addb
jae
ja
cli
xchg
clc
sub
icebp
popa
or
push
std
test
mov
xchg
xchg
and
mov
add
inc
and
pop
cmc
insl
mov
ret
jmp
jne
cmp
mov
setnp
inc
sub
xchg
pushf
loope
mov
dec
pop
int
cli
aad
xchg
push
xchg
jmp
test
adc
insl
jle
fimull
sub
leave
xchg
repz
sub
sbb
js
dec
xchg
sub
jg,pn
sbb
test
sbb
cmp
jno
jo
aad
sub
sti
add
repnz
fdivs
movsl
cmpsb
sbb
int3
jle
xchg
xor
js
dec
stos
dec
xchg
sub
test
sbb
inc
pop
scas
pop
pop
repz
push
cs
idivb
xchg
pop
test
adc
adc
sbb
iret
iret
add
inc
outsl
mov
and
push
pop
adc
adcl
jnp
nop
inc
insb
jo
fistl
push
ret
shll
cli
rcr
and
negl
rorl
outsb
sub
std
add
push
loop
ret
cwtl
test
addr16
popf
outsb
mov
mov
in
add
and
stos
or
dec
call
jo
jae
jl
or
and
rcrl
or
pop
rclb
mov
aaa
popf
push
test
test
and
ds
push
arpl
mov
inc
int3
aam
xor
popa
inc
xchg
pop
subl
pop
loopne
cmp
or
ret
xor
pop
pop
xorl
mov
jle
xchg
int3
and
popf
test
daa
int
cmpb
pop
xchg
xor
in
call
cltd
int3
fs
xchg
shrb
and
aad
in
enter
mov
ret
pop
fdivs
repz
sbb
lcall
movsb
xor
push
aaa
idiv
xor
mov
inc
andl
sbb
rorb
or
out
jne
and
cmp
test
adc
cs
lods
mov
sub
jne
mov
add
lret
mov
or
mov
popa
int
mov
scas
dec
inc
stc
clc
add
lods
enter
cmp
sbb
and
xchg
or
dec
sub
scas
xchg
fwait
mov
stc
sbb
addr16
sub
cli
xorb
repz
lock
into
nop
sbb
or
pushf
pop
andb
jb
inc
mov
xlat
gs
push
enter
cmp
mov
js
xchg
pop
sahf
cltd
xchg
mov
jae
pop
leave
mov
xchg
ljmp
mov
xchg
dec
or
xchg
jns
lods
movsl
stos
sbb
out
dec
popa
sub
testb
xchg
pop
dec
out
pop
sub
sub
mov
push
jae
push
sub
dec
jecxz
xchg
movsb
roll
push
fnstsw
xchg
imul
iret
sub
cli
addl
push
push
in
inc
xorl
cmp
sahf
cmpsl
jle
cmc
cmc
pop
dec
mov
pop
mov
and
dec
dec
xchg
test
lahf
ret
pop
and
aad
js
jle
test
mov
xor
inc
bound
mov
int
fnstsw
jge
jns
movsb
cli
sub
cmp
push
jae
xchg
jle
sbb
cltd
add
adc
insb
out
mov
into
lret
push
sahf
fidivl
jb
repz
jbe
sbb
rorb
jnp
mov
or
cmp
inc
push
lcall
stos
pop
dec
insb
mov
lcall
fmull
mov
cmpsl
les
add
daa
dec
push
fcompl
stos
cmp
cmpsb
scas
addb
pop
ss
out
lcall
mov
popa
ds
test
push
cli
call
clc
sub
inc
jl
cmp
or
push
loopne
in
out
arpl
aad
test
popfw
jno
pop
mov
andb
adc
adc
xor
push
mov
out
push
xchg
icebp
add
lahf
dec
rcr
ss
std
cmpsb
in
scas
jns
cltd
fldenv
in
xor
pop
clc
xchg
push
cld
push
sub
cli
jp
movsl
sbb
outsb
or
call
push
mov
adc
lea
test
sub
out
int3
adc
lock
xor
dec
pop
cmp
adc
andl
push
and
andl
jns
jb
xchg
jo
fldl
bound
cs
testb
test
mov
jmp
jo
ret
sub
mov
sub
sub
int
pop
pop
call
inc
mov
testb
mov
cld
mov
leave
clc
cli
rorb
das
add
cwtl
cmp
xlat
xchg
js
insb
js
xchg
pushf
rolb
stos
adc
dec
mov
push
insb
ret
jnp
incl
sbb
dec
daa
xchg
xchg
sbb
leave
fs
insl
fsts
or
inc
fmul
mov
hlt
loopne
mov
and
aas
jno
shlb
cs
and
loop
cmp
cli
cmpsl
clc
mov
rolb
in
sub
insb
cwtl
lods
add
push
push
inc
push
stc
cmp
xor
cmc
icebp
jo
inc
out
jp
jnp
es
xor
jge
or
mov
sub
movsb
adc
add
pushf
fsubrs
in
ficoms
jecxz
mov
test
call
jno
test
jne
pop
xor
out
mov
mov
xchg
in
push
enter
xor
sahf
stos
ret
jbe
rep
cmp
pop
xchg
fldenv
mov
popf
adc
lret
push
loope
adc
cs
mov
jl
push
sar
test
adc
push
xor
lods
and
clc
repz
cld
or
out
and
xchg
or
mov
push
out
or
popf
or
xchg
sub
js
in
int
rcrb
popa
outsl
xlat
imul
sub
rol
adc
dec
pop
cmpl
out
testl
add
sahf
add
test
jmp
sub
test
lds
cwtl
xor
mov
or
popf
mov
xor
jg
fimull
divb
dec
jnp
mov
sahf
and
out
stos
push
mov
fdivr
adc
aas
or
movsl
xor
dec
mov
lds
leave
xchg
repz
ss
push
cmp
pushf
push
dec
nop
out
or
test
adc
imul
add
dec
int
jne
pop
inc
push
test
inc
int3
adc
shrl
xchg
stc
lret
aas
inc
repnz
dec
out
ret
aaa
call
outsl
stos
dec
ret
sub
outsl
sahf
dec
subb
mov
stos
add
rorb
jne
push
fnstsw
lret
adcb
push
or
fistl
push
mov
jbe
adc
dec
inc
push
pop
cld
lods
and
push
push
arpl
and
cmp
andl
pop
icebp
mov
inc
out
lahf
add
mov
ret
aad
xorl
mov
xchg
mov
push
sub
pop
adc
mov
lret
pop
jns
mov
daa
movl
adc
pop
cmc
popa
jb
ss
xchg
fwait
cmpsl
cmp
ss
call
pushf
sub
dec
scas
mov
push
in
fsubrl
cmc
mov
adc
adc
ret
sbb
shl
out
or
and
les
push
mov
sbb
fwait
movsl
fcmovnu
sarl
pop
inc
sub
cmp
cltd
fs
xor
dec
popa
les
insb
dec
lret
in
repz
or
out
leave
cmpsl
icebp
test
xor
ljmp
mov
mov
fxch
adc
pushf
sub
outsb
cltd
out
sbb
sbb
rol
sbb
jmp
imul
xchg
into
rol
xor
iret
sbb
mov
stos
orl
xrelease
pop
adc
push
cmp
cmp
push
ss
dec
jnp
xor
aam
xor
mov
mov
sbb
inc
sub
cld
jne
insl
mov
push
inc
add
loopne
xor
leave
stc
in
jns
into
or
mov
jnp
movsl
mov
push
or
jmp
jmp
mov
das
adc
sbb
aaa
fcoms
jbe
sub
jno
data16
or
jne
pop
imul
sub
inc
adc
in
xchg
xchg
loope
aam
test
add
jl
push
sar
data16
push
cmp
lea
loope
cltd
xchg
mov
inc
movsl
shll
gs
mov
or
jnp
pop
jae
iret
mov
pcmpgtw
icebp
push
shlb
loopne
cmp
inc
jmp
sti
out
cwtl
xchg
add
push
push
add
mov
xor
sarb
out
inc
push
and
xor
orb
push
adc
fnstsw
inc
incl
fwait
xchg
jb
ja
pop
mov
add
cwtl
push
gs
in
scas
dec
imul
popf
int3
sub
jmp
and
aaa
cmp
das
out
out
or
or
mov
push
sahf
test
push
xor
rorb
lret
push
sbb
xlat
or
mov
leave
push
pop
xlat
inc
aam
cmp
mov
and
negb
push
mov
hlt
lret
or
mov
cmpsb
xorl
stos
adc
scas
adc
and
inc
call
inc
add
ds
sbb
stos
fcoml
pop
and
xlat
ret
pop
adc
repnz
cld
or
xchg
rcl
stos
jbe
leave
xlat
xchg
jo
faddl
mov
cmp
or
mov
int3
popf
sub
inc
call
sub
cmp
inc
cli
sub
dec
imull
pop
ljmp
pop
insl
andb
and
test
sbb
push
mov
xchg
imul
cld
out
push
lock
clc
ret
ret
nop
sbb
fisttpll
data16
repnz
xchg
push
push
imul
mov
adc
pop
inc
nop
and
sub
pop
or
xor
xor
and
push
xchg
mov
sub
leave
mov
out
mov
icebp
iret
add
fwait
cli
lcall
sbb
mov
jno
or
pushf
mov
jns
pop
xchg
add
mov
dec
dec
aas
addr16
in
mov
add
test
leave
mov
rolb
jmp
adc
lahf
rcr
or
push
mov
fstp
cmc
pop
pop
mov
and
inc
mov
out
mov
adc
pusha
sarb
aaa
adc
add
cmp
inc
xor
ljmp
mov
loope
mov
or
dec
jns
jmp
dec
cwtl
pop
insertq
scas
mov
ret
pop
rclb
in
push
enter
popa
icebp
das
xchg
cmpsl
cmp
dec
mulb
sbb
push
fcomi
orl
mov
push
cmp
cld
test
jl
push
lcall
cmp
sub
fwait
jle
jle
pop
ljmp
data16
dec
push
jmp
jbe
sub
dec
repz
cmp
pop
loope
push
in
adc
mov
dec
cli
faddl
cmp
pop
xchg
mov
cmpl
mov
rol
xchg
jbe
or
push
pop
mov
xchg
fstl
push
jno
fdivrl
adc
mov
test
lea
repnz
jo
sub
inc
movsl
inc
dec
and
inc
mov
or
cmp
add
mov
adc
ja
pop
sbb
ljmp
dec
movsb
jno
into
push
cmp
mov
push
push
shl
sub
push
cmc
movsb
out
and
fcmovne
into
daa
xchg
stos
push
out
mov
jg
sbb
orb
in
push
sahf
sub
cmp
jecxz
lods
inc
insb
push
xlat
jecxz
pop
mov
jl
and
mov
stos
ss
stc
pop
in
fistl
mov
cmpsb
mov
mov
xchg
movsb
xchg
xchg
loopne
push
xchg
xchg
insb
pop
mov
std
movsl
add
or
push
aam
movsb
addr16
mov
xlat
or
push
inc
js
pop
add
repnz
pop
lret
das
dec
lock
lods
jae
loop
imul
inc
into
lods
add
jle
adc
push
shl
adc
push
pop
sbb
xchg
jns
in
or
cmp
sahf
icebp
inc
call
lods
adc
mov
and
rcll
es
mov
je
mov
aam
cmc
mov
jns
cmp
int
dec
push
or
cli
ret
es
inc
cmp
outsl
fdivrl
xor
cmp
xor
mov
or
or
popf
push
add
fs
shll
loop
push
dec
xor
push
cmp
and
std
mov
cmp
xlat
sub
mov
fcmove
dec
stos
and
movsl
xchg
out
xchg
dec
in
shll
xor
adc
lahf
mov
into
xchg
cmp
adc
push
jg
mov
into
cli
aas
xchg
ljmp
sbb
cmpsl
push
mov
sbb
sbb
mov
and
mov
sbb
outsl
mov
mov
or
adc
sub
jg
mov
or
fs
mov
pop
push
lret
xchg
jl
jge
idivl
adc
xchg
test
add
or
stc
sbb
out
aad
push
pusha
in
scas
dec
int
xlat
jo
iret
sub
inc
fcmovnbe
out
insb
cltd
xchg
and
jge
arpl
or
cmp
lock
out
xor
cmp
loop
insb
add
cmc
cmpsl
push
enter
or
js
incl
xor
ja
fcmovu
sbb
mov
ja
sbb
jo
sub
fdivrs
and
lret
push
xchg
loopne
inc
fldcw
jne
add
mov
xchg
cld
ss
mov
sahf
ret
fdivl
stos
xchg
es
sub
sbb
sub
mul
out
push
cwtl
stc
icebp
test
fnstenv
xor
fsub
stos
mov
outsb
ja
dec
arpl
xor
mov
adc
and
jo
das
icebp
scas
sbb
aad
push
or
dec
aas
loop
mov
hlt
pop
decl
mov
sbb
leave
or
jle
adc
mov
xor
fdivr
and
fcomps
lods
stos
push
lcall
gs
and
and
push
iret
fucomip
mov
inc
jo
iret
addr16
add
xlat
mov
or
or
pop
push
ja
inc
or
xlat
dec
mov
daa
sub
int3
push
mov
les
push
inc
mov
adc
add
mov
push
ficoml
lcall
push
cmpsb
xchg
call
sbb
nop
aaa
rcll
insb
adc
iret
pop
inc
rorl
iret
push
sbb
jle
mov
aas
mov
mov
call
cmpl
cmp
test
and
fimull
xchg
push
gs
insb
mov
test
push
pop
jne
test
popf
cmp
test
dec
cmp
jo
rol
or
sub
fistpl
xchg
inc
xor
popa
jo
cs
pop
ds
dec
pushf
jns
xchg
or
sub
pop
mov
sub
xchg
jae
push
mov
movswl
lret
mov
dec
push
das
sub
sbb
pop
arpl
pop
push
popa
mov
popa
dec
pop
cwtl
or
push
cmp
xor
nopl
add
pushf
xlat
jl
pusha
pop
loopne
test
insl
push
fsubp
and
mov
lds
adc
push
cmp
jno
or
ja
popl
fbstp
fs
repnz
stc
in
in
call
xchg
push
mov
aaa
dec
inc
pop
cld
push
jecxz
xor
xchg
popf
loopne
std
iret
inc
test
inc
ds
or
push
dec
int3
ss
stc
cmp
divb
mov
mov
lods
add
inc
inc
outsb
stos
ret
lock
jecxz
pushf
les
push
add
jb
jb
call
xchg
pop
nop
lret
mov
mov
enter
jge
mov
sbbb
cmpb
or
in
push
inc
insb
js
dec
sbb
or
mov
mov
andl
div
data16
xchg
or
fisttpll
in
test
push
mov
mov
outsb
add
push
inc
mov
cmc
cmpsb
cs
xchg
shlb
jno
sub
mov
enter
dec
fisttps
and
pop
inc
mov
xor
test
in
leave
adcb
push
add
pushf
jge
mov
or
imul
or
dec
subl
sub
cwtl
outsb
sbb
mov
daa
fadds
int
lahf
sar
pop
out
sub
mov
ja
jo
sub
inc
xchg
sbb
cmp
in
std
lods
push
xor
cmp
xchg
mov
stos
jle
ljmp
leave
xor
add
enter
sub
lods
ret
push
push
push
mov
cwtl
jecxz
ds
into
lahf
aad
cmp
loop
and
xchg
pop
fptan
andl
pushf
test
push
je
mov
cmpsb
sub
xchg
or
push
cld
movsb
call
popa
cld
xchg
dec
fisubs
xchg
sti
jno
rcrl
lea
jo
ss
lret
jmp
ja
sahf
mov
mov
test
test
push
sub
jl
cmp
jmp
sbb
sbb
rorl
adc
mov
jmp
sbb
loopne
pushf
loop
push
or
cmp
sub
lods
sahf
mov
pop
movl
xchg
sub
inc
jb
mov
aad
and
in
sub
std
mov
fisttpl
sbb
imull
dec
fnstsw
dec
loope,pn
sbb
jb
lret
mov
xor
incb
inc
xchg
add
inc
xlat
mov
jb
adc
inc
and
or
imul
add
xchg
movsb
or
push
mov
sbb
test
in
cmpsl
jge
mov
repnz
xor
mov
sahf
push
mov
sub
shlb
rorb
add
sbb
fwait
xchg
ja
in
sub
pop
jbe
sub
scas
pop
sbb
pop
ret
ss
sbb
xor
adc
rorl
mov
push
popa
aaa
ret
in
pop
ljmp
rorb
pop
xchg
mov
imul
dec
ss
jmp
sbb
imull
mov
clc
cmpsb
fimull
arpl
cli
stos
mov
enter
sub
sub
lods
sbb
leave
sub
mov
add
cmp
stos
xor
fsub
push
pop
or
xchg
imul
call
fs
jg
sbb
leave
loop
and
sub
jno
mov
xlat
loopne
mov
and
cmp
mov
sar
clc
xchg
fwait
mov
dec
aad
and
or
pop
clc
xor
int3
nop
jns
jns
mov
adc
jnp
add
les
xor
popa
fcoml
lock
pxor
dec
faddl
mov
cmpsl
rclb
mov
or
cmp
data16
cld
mov
pop
dec
jecxz
ja
jecxz
sub
or
jmp
lock
cmpl
push
xchg
xor
mov
loope
lods
loopne
push
mov
cwtl
paddd
fidivs
imul
push
and
aas
imul
jl
mov
mov
and
mov
in
mov
inc
jmp
mov
mov
mov
adc
scas
add
repz
pop
mov
movsl
jl
imul
dec
outsl
ret
adc
cwtl
cmp
mov
mov
xchg
cs
pop
dec
loope
sahf
lret
cli
push
adc
andl
jecxz
stos
push
lcall
es
sub
aas
mov
sub
fcmovbe
or
sbb
repnz
repz
rclb
adc
push
fstps
sub
xor
push
sbb
xchg
dec
je
sub
and
sbb
out
mov
lods
mov
inc
clc
popf
sbb
pop
gs
push
xchg
sarl
sbb
js
xchg
mov
xor
dec
jmp
outsl
cmc
lret
cmc
push
jns
loope
jecxz
mov
xor
jge
add
jbe
roll
jno
adc
ret
push
sarb
add
xchg
push
jno
orl
xchg
sbb
push
mov
sub
lods
sbb
mov
insl
shrl
loopne
pop
pop
test
shrb
sub
outsb
sub
mov
popf
shll
push
adc
insl
in
sti
mov
repz
fucomp
test
sbb
cmp
inc
xor
jp
aaa
ret
test
shlb
nop
stc
imul
lods
orl
mulb
sbb
in
sarb
int3
push
stc
sub
mov
mull
pop
jb
ret
jge
nop
popa
dec
pusha
sub
std
add
add
jmp
outsb
lret
mov
mul
adc
out
adc
in
lcall
add
js
sbb
sub
gs
jns
sub
mov
les
jl
xor
sbb
pop
mov
fistl
movsb
mov
test
xorl
adc
mov
test
inc
mov
mov
adc
inc
add
pushl
nop
mov
jmp
je
sbb
add
sub
inc
cmp
jle
test
sub
fmulp
jnp
mov
pop
mov
cltd
mov
sbb
cmpsl
push
and
cmpsl
push
xchg
cli
push
dec
pop
decl
jge
or
cmp
stos
sub
insb
cmc
mov
jno
push
in
mov
and
orl
push
jb
jmp
lods
inc
xchg
rcl
test
mov
and
mov
sub
xchg
stos
push
gs
int
cmp
mov
ja
jecxz
push
cmpsl
xchg
imul
sub
xor
orl
fcmovnu
aam
repz
lcall
jbe
sbb
outsb
in
fcmovnu
fstl
adc
loop
mov
ds
dec
xor
jp
mov
shll
dec
adc
mov
jns
cmp
fildll
idivl
jmp
mov
pop
movsb
out
xor
rolb
pushf
cld
jmp
shlb
add
xlat
push
imul
int
xlat
test
popf
je
mov
sbb
lods
add
fidivrl
insl
cmp
mulb
testb
pop
push
jbe
xor
dec
lret
bound
and
adc
shlb
and
fs
stc
xor
dec
outsl
mov
push
pop
cmp
bound
imul
pop
scas
pop
imul
push
add
cld
push
xchg
adc
push
gs
push
lods
jl
arpl
dec
jmp
cmp
sbb
lahf
mov
or
loope
mov
dec
xchg
mov
loop
push
sub
daa
push
pushf
pop
clc
sub
and
pop
fimull
jg
jle
bound
int3
popa
pop
pop
push
pop
sub
cmp
subl
lret
adcl
incl
cmp
jae
rcll
or
hlt
in
xlat
pop
jae
mov
push
cmpsl
xchg
iret
and
movl
ss
loope
ja
pop
add
pop
test
add
dec
xor
push
adc
cmpsb
or
fs
lcall
pop
pop
xlat
adc
cwtl
js
ljmp
inc
inc
pusha
and
cltd
jne
adc
jns
or
adc
xor
and
shrb
repnz
cmp
js
leave
int3
jg
jl
int3
repz
movsb
push
test
out
inc
jge
adc
outsl
ljmp
inc
jno
sub
out
jl
scas
fs
mov
sti
jb
ja
push
scas
cmpsb
sub
mov
fisubrl
adc
adc
aas
pop
mov
sti
aad
mov
imul
mov
gs
mov
arpl
cmp
inc
adc
test
add
out
pop
and
cmp
gs
arpl
jl
arpl
push
lret
adc
stos
add
adc
fsts
mov
push
cmp
mov
adc
outsb
and
arpl
sbb
jmp
repz
mov
loope
mov
enter
dec
iret
dec
fwait
xor
dec
pop
cmc
movsb
lods
jge
xchg
xchg
jl
or
push
push
movb
fidivs
imul
xchg
cmpsb
mov
dec
popa
mov
mov
jno
loop
in
sar
xor
js
leave
mov
jle
fnstcw
addr16
inc
faddp
push
inc
pop
push
scas
push
jns
daa
xlat
adc
shll
mov
sahf
xor
push
in
scas
xor
cmpsl
arpl
push
rcr
je
pop
push
imul
or
lahf
or
cmp
fidivrl
dec
add
jb
push
xor
jnp
xor
out
lret
push
pop
mov
arpl
jecxz
push
sbb
movsl
fnstcw
cmp
add
dec
lock
inc
and
fmull
aam
out
pop
aad
sub
cmp
jecxz
adc
pop
test
mov
mov
ror
jne
icebp
sbb
out
jae
std
push
loope
dec
outsl
fidivrl
adc
xor
fistps
jb
mov
aaa
adc
xor
fimuls
dec
scas
adcb
aad
leave
sahf
aam
cmp
or
je
mov
fsts
jecxz
push
fstps
xor
dec
testl
mov
popf
dec
lods
leave
add
jecxz
sbb
insb
and
mov
xchg
in
cld
cmp
hlt
incb
jl
cmp
sarb
jne
sub
aam
sub
fstps
mov
sub
scas
adc
inc
in
es
pop
mov
sbb
or
sub
lcall
cs
int3
insb
and
xor
cmp
jmp
pop
mov
mov
and
jmp
daa
dec
jno
xchg
xor
js
xchg
cmp
js
test
leave
inc
dec
xor
cli
ljmp
sbbb
push
xchg
loop
mov
push
inc
xchg
jno
test
mov
cmp
out
lahf
pushf
imul
dec
mov
clc
lods
iret
xchg
dec
mov
das
sbb
cs
mov
pop
sti
fcmovbe
out
or
xorb
dec
pushf
add
loope
pop
scas
push
cmp
or
sbb
push
dec
and
fucomi
jge
es
pop
mov
push
loope
andb
xchg
cmp
aas
out
adc
sahf
aam
xchg
push
cmpsb
out
push
pop
mov
or
mov
shrb
fs
pusha
sub
dec
push
xor
ret
xchg
jno
outsl
shll
fnstsw
std
mov
mov
adc
fisttpll
and
fs
xchg
repnz
xchg
insl
mov
ret
outsl
mov
cmpsl
mov
mov
shrl
xor
cwtl
and
jbe
and
jae
or
cmp
aas
gs
xorb
sbb
das
movsl
adc
sbb
and
arpl
adc
pop
out
push
movaps
cmp
cmc
adc
addl
in
cmpsb
fstl
adc
iret
xchg
xor
inc
testl
dec
push
add
jno
or
jnp
pop
pushw
out
cmpsl
pop
adc
scas
popa
sbb
stos
or
mov
mull
jp
stc
sbb
ljmp
sub
inc
cmp
mov
xlat
mov
jo
xlat
cmp
mov
mov
jecxz
leave
mov
imul
in
ret
push
and
scas
jle
les
arpl
int3
fwait
fwait
aad
jo
addl
and
sbb
orb
jecxz
sbb
outsl
push
dec
aas
jg
dec
gs
inc
push
notl
outsl
mov
rolb
ljmp
xorb
sahf
ss
cltd
sub
aam
pop
pop
dec
or
nop
orb
fisttpl
and
pop
or
les
mov
shl
push
repz
repz
sbb
sub
in
aam
pop
repnz
push
je
push
pop
pop
and
stc
out
sub
push
sub
mov
flds
dec
hlt
cmp
sub
sbb
mov
lods
rol
jecxz
and
inc
aaa
mov
or
subl
out
repz
in
jbe
outsb
pushf
sbb
pushf
jb
daa
mov
xor
xchg
inc
pop
inc
sahf
in
cmp
loope
jo
xchg
js
and
sub
push
fs
insl
push
pop
push
push
ss
add
into
push
cmpsl
adc
mov
ds
and
mov
ret
or
insl
and
shll
fistpl
add
das
or
movsl
mov
fwait
js
dec
pop
test
insb
arpl
xor
aaa
push
cmp
addr16
add
test
gs
cmp
sub
inc
jle
mov
pop
outsl
push
loop
push
shl
xadd
mov
push
cld
jecxz
sub
ficoml
or
xchg
dec
fwait
jl
add
mov
je
cld
sub
add
imul
sbb
repz
stos
push
push
repnz
add
enter
lret
or
mov
cld
fwait
xchg
pop
xchg
add
and
lret
cmp
dec
mov
fidivs
in
mov
movsb
jne
xchg
pop
fwait
roll
inc
dec
xchg
and
out
add
xchg
sbb
mov
in
dec
xchg
outsb
loopne
lahf
sahf
inc
cwtl
int
or
loope
lods
xor
pop
js
inc
jl
jle
orl
adc
xchg
callw
push
add
mov
sbb
add
add
xor
cmpsl
jmp
xor
add
add
xor
dec
popf
or
fcompp
add
sub
pop
sub
shlb
shrl
scas
push
leave
xchg
out
xchg
scas
or
pop
jmp
inc
cmpsl
inc
add
fstp
decb
mov
push
inc
das
test
inc
xchg
dec
ja
xchg
lods
mov
jle
sub
or
add
imul
mov
push
sbbb
jg
cli
mov
jbe
fs
andb
leave
sub
out
sub
dec
sbbl
out
lods
push
movsb
lret
jmp
or
and
xlat
mulb
loop
div
push
iret
add
into
fistps
sub
rolb
mov
pop
jl
es
insl
jns
out
les
call
xor
sbb
std
aas
test
adc
dec
shlb
jge
and
lcall
and
inc
sarl
rcrl
sbb
push
mov
dec
out
mov
test
cwtl
cmp
negl
jbe
adc
hlt
ret
in
jg
sub
fdivs
in
cmp
push
xchg
lods
sbb
xor
lahf
sti
in
stos
push
jge
lea
fidivrs
imul
jo
and
mov
iret
push
nop
mov
mov
aam
int
jo
popa
ret
xlat
cmp
rclb
mov
cltd
pushw
ja
xor
dec
es
pop
xchg
push
mov
add
decl
jbe
adc
lcall
xor
pop
xchg
add
push
rcrb
and
arpl
daa
mov
stc
adcb
jle
scas
jae
add
fsubl
cmpsb
jmp
clc
cltd
cmp
mov
xchg
mov
mov
sbb
in
flds
mov
xchg
sub
pop
or
mov
mov
fildl
push
orl
inc
roll
jns
mov
pop
mul
sbb
pop
add
mov
negl
or
out
pusha
popa
into
fstp
push
insl
xchg
adc
scas
into
cmpsb
xlat
mov
xchg
xor
pop
test
xor
dec
and
or
data16
jecxz
inc
fsubr
mov
xor
data16
int
in
jno
jle
dec
scas
sub
mov
jmp
imull
ret
cwtl
das
stos
lea
test
nop
loope
cwtl
jno
or
push
xchg
pop
aas
sub
movsb
jnp
ja
dec
xor
add
pop
mov
push
fsts
push
and
scas
mov
aad
sub
jae
push
jns
and
mov
idivl
rcr
dec
negb
in
ret
xchg
lahf
cltd
xchg
push
push
jo
mov
mov
xchg
popf
pushf
jo
fwait
jae
ljmp
push
data16
add
adc
test
hlt
inc
and
mov
mov
mov
movsb
ror
jge
sbb
pop
ljmp
popf
movsl
outsl
bound
or
and
sbb
inc
loopne
repnz
fistpll
inc
cld
jmp
push
int
movb
jne
add
lods
adc
lcall
adc
mov
stos
cmp
xchg
jb
and
pushf
movsb
or
subb
shrb
xor
or
push
cmc
cmp
push
aaa
ja
mov
fldenv
jge
dec
stc
dec
lock
xor
mov
loop
das
mov
inc
inc
aas
xchg
lea
push
pop
out
and
int3
mov
push
sbb
mov
cbtw
call
lcall
xchg
or
add
cmp
sbb
cs
fistpll
pusha
cmp
jns
aaa
xchg
cmc
push
xor
inc
jge
test
daa
int
add
out
inc
sbb
and
insb
jb
or
stos
cmpsl
adc
ljmp
loope
ret
mov
gs
sbb
mov
iret
lcall
jbe
push
inc
add
pop
sahf
dec
xchg
test
in
inc
cmp
or
mov
insl
stos
lds
cli
and
sbb
xchg
xchg
adc
call
pop
adc
loopne
adc
jp
dec
mov
sbb
cmp
imulb
mov
inc
clc
adc
mov
xor
shlb
sub
pop
fistpll
push
jae
jl
movsb
popf
leave
pushf
ret
inc
and
lds
and
inc
cmpl
mov
jp
mov
pop
or
loope
inc
mov
adc
jae
stc
mov
fidivs
jne
push
jge
mov
das
nop
xchg
mov
sbb
sub
sbb
jnp
out
or
bound
adc
sub
xchg
sbb
and
mov
fcoml
cmp
pop
shr
in
push
xchg
cld
imulb
sub
popa
cmpsl
and
stc
jmp
jbe
imul
rcll
jb
leave
jge
sbb
jnp
inc
mov
out
loopne
lods
movups
clc
cmpsl
ja
lods
stos
push
jge
dec
shlb
cmp
dec
cmp
mov
ds
cli
repnz
fwait
adc
outsb
inc
imul
sub
aaa
cwtl
or
testb
dec
leave
roll
into
push
test
fs
movsl
in
push
and
fldl
adc
mov
fs
movsl
add
cmpsl
add
xchg
repnz
fildll
sbb
or
push
cmc
push
xor
imul
xchg
in
adc
jle
pop
cmc
push
pusha
jnp
sar
lret
das
mov
fildl
xabort
sub
and
arpl
pop
imul
sbbb
and
cwtl
loopne
pop
std
xor
lret
or
movsb
cmp
push
pop
repz
in
jno
popa
pop
mov
leave
das
or
iret
xor
push
lret
sub
dec
movsl
iret
insl
cmp
push
jo
xor
lret
dec
pop
or
test
xchg
dec
sub
scas
and
cmp
mulb
dec
lods
stos
scas
test
fsubl
and
pop
mov
shlb
lock
xchg
dec
scas
out
mov
sbb
mov
cmp
movsb
fidivrl
xchg
shl
stos
or
push
or
push
sub
shl
sub
adc
mov
xchg
sti
stos
push
je
ljmp
movsl
jl
test
testl
fs
ficoml
xchg
and
out
cmpl
lret
and
call
scas
aaa
add
hlt
cmp
fwait
dec
in
add
icebp
pusha
mov
pop
cmp
enter
dec
into
cmp
sub
xor
pop
mov
jae
ja
bnd
jl
push
mov
jo
push
mov
jmp
sti
ds
lods
sub
or
arpl
xchg
dec
dec
addr16
adcb
rcrl
dec
stos
leave
pop
xlat
or
add
test
add
das
nop
lods
test
icebp
pop
xchg
gs
adc
dec
push
test
bound
loopne
arpl
imul
inc
outsb
jo
jne
scas
fcmovnbe
or
mov
xor
fisubrs
movhps
outsb
orl
in
xor
inc
xchg
out
lret
jno
movsb
arpl
adc
adc
xchg
sub
inc
sti
xor
mull
mov
movsl
into
pusha
int3
dec
test
in
xchg
pop
sarl
xor
adc
jb
pop
in
aam
mov
scas
outsb
jle
or
std
mov
mov
decl
adc
and
push
je
push
or
scas
arpl
add
repz
out
roll
push
frstor
ret
loopne
sbbl
mov
aaa
outsl
jne
xchg
or
mov
ret
loope
inc
jns
sti
call
adc
loop
loope
push
xlat
das
int
mov
xchg
fcomp
adcl
ja
rcll
insl
in
lahf
cli
aam
aad
push
test
cmp
into
mov
sbb
dec
or
movsl
jns
cmp
or
rcl
inc
and
cmpsl
lods
sbb
fs
in
xor
cmpsb
jne
es
int
inc
push
xor
fwait
pop
sub
pushf
and
dec
test
pop
bound
add
pop
push
cmp
dec
int3
int3
mov
out
mov
daa
mov
xlat
cli
lret
lea
arpl
push
inc
sbb
test
testb
adc
adc
setge
xchg
mov
fs
mov
aad
xchg
fidivrs
mov
jmp
xchg
clc
bnd
jp
std
jp
xchg
insl
adc
pop
pop
subb
sbb
js
cmp
dec
leave
mov
pop
leave
bound
das
stos
cltd
sub
mov
xchg
mov
sub
out
mov
cld
fsubl
pop
insb
lret
imul
pusha
scas
pop
xor
sub
adc
dec
lock
hlt
es
sahf
mov
scas
cmpsb
imul
shlb
call
mov
sub
or
mov
jne
or
xorl
movsb
dec
push
dec
bound
in
shrb
dec
mov
stc
out
xchg
inc
fwait
out
mov
subl
clc
fisttpl
cwtl
mov
sub
cs
inc
mov
fsts
xlat
xlat
jle
xchg
fmull
mov
repnz
xor
imul
stos
xrelease
shr
pop
rolb
xchg
adc
jbe
xchg
leave
imul
pushf
fstps
fs
aas
cmpsb
mov
mov
mov
push
xor
fistpl
cmpsb
mov
add
push
fcom
in
mov
mov
fwait
mov
jp
jne
xchg
mov
addl
jge
ja
fs
mov
ds
xchg
jo
bound
and
cmc
std
imul
pop
push
inc
push
push
pop
or
jb
inc
jp
shlb
add
mov
aam
bound
xlat
pop
jl
cmpsb
jle
daa
and
hlt
arpl
inc
icebp
jb
imulb
jmp
mov
outsl
jae
out
mov
mov
cltd
sarb
lods
xchg
xor
imul
mov
inc
cwtl
cmp
sahf
sbb
jns
jecxz
data16
outsb
cmp
dec
shl
rcll
jae
data16
dec
adc
leave
mov
and
dec
div
stos
repz
cld
rcr
out
inc
outsb
fld1
stos
xor
mov
mov
fmuls
ret
arpl
mov
xchg
test
icebp
aas
mov
or
sub
pop
shll
push
or
dec
push
ret
out
movsb
push
aam
mov
sbb
lcall
jnp
callw
out
or
dec
cmp
inc
fcomps
std
xlat
inc
testb
scas
mov
adc
cmp
mov
clc
xchg
cmp
fldcw
scas
mov
sti
cmpsb
mov
mov
sahf
and
cli
pushf
add
stc
xchg
cld
mov
cmp
xor
lock
xor
xor
jne,pn
ret
inc
xchg
jns
fsubl
pop
and
ficoms
leave
sbb
jecxz
imull
cltd
shl
test
sbb
popf
push
xchg
or
lods
mov
imul
xchg
cmp
jge
jle
das
sub
push
mov
or
xor
int
fstpl
sti
out
idiv
mov
arpl
js
and
out
mov
mov
push
lea
cmpsl
xor
stos
push
xchg
cltd
jo
lea
scas
push
push
shll
ljmp
sbb
sub
mov
ljmp
mov
leave
jmp
push
lahf
lahf
add
stos
lods
movsb
lock
loop
mov
dec
test
inc
pop
mov
jmp
push
adc
aaa
lock
xor
push
mov
aaa
sbb
mov
cmp
mov
adc
out
push
xor
and
call
inc
test
jnp
lahf
sti
sbb
pop
popf
imul
add
pop
dec
dec
and
cmp
arpl
lahf
cli
sbb
sub
inc
scas
fs
xor
outsl
cmp
mov
loop
inc
addps
mov
test
or
mov
sub
dec
pusha
dec
xor
pop
jno
lds
js
adc
add
or
push
xor
in
xchg
and
pop
sysret
jb
les
xchg
jge
cld
nop
mov
mov
dec
sti
jp
dec
popf
in
and
push
out
sub
add
cmp
jbe
test
shll
and
xchg
cmp
and
shr
aam
push
movsb
shll
out
mov
repnz
lret
or
rcll
outsl
lods
sahf
xchg
inc
fmull
sbb
cs
dec
addr16
mov
add
bnd
or
mov
jecxz
push
xchg
je
sub
or
repz
std
or
sbb
in
stc
mul
leave
pop
jl
mov
ret
enter
out
or
and
mov
insl
sbbl
addr16
push
push
add
sahf
scas
jo
sub
repz
pop
jmp
psubsb
sti
rolb
cmc
mov
insl
push
fcmovne
rcr
xor
xchg
xor
dec
out
push
rolb
rorb
xchg
mov
ficomps
jo
add
xchg
mov
pop
sub
mov
stos
cltd
pop
push
rcr
xchg
jne
mov
inc
insl
mov
fidivs
imul
jp
or
nop
mov
mov
push
fmuls
daa
fbstp
push
fsubrs
out
lret
pushf
xchg
cmp
cmp
fld
pop
loope
fbld
mov
jecxz
or
xchg
jae
fnstcw
addr16
mov
mov
push
cmp
inc
cmp
adc
jl
pop
xchg
icebp
lahf
insl
push
test
int
sub
mov
mov
dec
mov
push
jl
jge
pop
mov
mov
inc
shl
cmp
mov
aam
xchg
sbbl
xchg
cmp
add
push
fwait
mov
mov
test
sarl
sarb
sbb
and
cli
mov
or
sub
popa
mov
icebp
add
pop
aaa
xchg
cwtl
mov
pop
jg
loopne
pop
sub
mov
icebp
jl
int
ret
bound
inc
into
js
inc
pop
lahf
scas
ljmp
mov
fnstenv
insl
mov
insl
xor
jle
je
mov
or
inc
adc
fisubrl
out
in
adc
or
outsb
add
in
loopne
cmp
xor
or
add
adc
fcom
ret
dec
push
mov
out
and
mov
lods
movsl
jnp
xor
decb
adc
mov
sbb
mov
mov
push
outsb
pop
lock
push
lcall
push
test
sbb
int
inc
xlat
push
dec
cmp
xlat
and
or
adc
dec
rcrb
adc
ret
xor
pop
cmp
arpl
and
out
stos
hlt
daa
sti
out
xchg
je
dec
mov
jno
sti
test
jg
adc
pop
push
movsb
mov
rolb
ja
add
push
and
out
jo
lea
add
shl
mov
andl
aad
inc
test
lea
cs
scas
mov
les
rolb
or
pop
mov
jnp
in
mov
ja
lock
or
sbb
dec
jecxz
xchg
pop
inc
ficoml
insb
int3
inc
mov
outsb
hlt
rorl
add
repz
sbb
xor
xorb
inc
psubb
outsl
adc
out
aam
pop
testl
dec
roll
mov
xchg
sub
add
dec
mov
add
mov
pop
mov
cmpsb
in
mov
jo
imul
mov
xchg
pop
mov
sbb
js
jmp
or
lahf
mov
xor
xchg
or
mov
sahf
mov
ljmp
sub
sub
sahf
push
jns
mov
es
test
dec
lock
fs
sub
or
fsubs
cmp
nop
ljmp
mov
movsl
pop
xorb
sbb
jmp
cs
ja
movsl
imul
sbb
insb
out
jbe
cli
movsb
inc
push
sahf
leave
sbb
sub
mov
pop
or
in
cmp
mov
pop
paddsw
loopne
stos
mov
pusha
sub
adc
dec
mov
mov
stos
bound
scas
xchg
sbb
push
sbb
cmp
and
adc
js
roll
jne
mov
jle
repz
sbb
sbb
pusha
repnz
mov
repnz
mov
push
call
mov
sbb
adc
cmp
lahf
mov
inc
mov
xchg
sti
hlt
and
scas
jp
in
sub
popa
data16
jge
ret
pop
inc
lock
lea
jnp
jle
in
inc
push
ljmp
mov
xor
fs
inc
cli
jl
xchg
pop
bound
xchg
int
lret
pusha
sub
fidivrl
out
jns
push
mov
mov
xchg
pop
adc
aaa
bound
inc
pop
dec
cld
mov
sbb
push
bound
mov
cmc
repnz
jecxz
add
mov
out
push
mov
push
lods
adc
add
xchg
mov
ljmp
lret
movsl
jle
inc
stos
add
and
dec
rcrl
pop
out
jnp
bound
andl
sub
push
jmp
arpl
cmp
or
mov
int3
scas
fxch
mov
mov
aam
push
ret
jb
jg
mov
xchg
push
cmp
inc
mov
pushf
adc
mov
mov
xor
add
jp
pushf
mov
hlt
jle
fs
push
imul
bound
in
iret
adcb
and
sti
cmp
adcl
mov
idivb
xchg
push
adc
pop
inc
mov
mov
jg
fisubrs
jl
ret
sub
jb
pop
movsl
test
lret
dec
test
movsb
sbbb
jmp
fnstcw
ret
cmp
and
push
ds
jbe
not
les
test
pop
enter
shlb
mov
push
adc
stc
cld
clc
jno
scas
xor
sbb
cmp
cmp
mov
in
movsl
xchg
test
gs
and
popf
mov
pop
inc
xor
mov
sarl
push
sbb
outsl
push
enter
loopne
jnp
xor
xor
mov
test
jns
adcb
aaa
mov
rcrb
fisttps
lcall
aaa
push
adc
sub
test
dec
popf
sub
int
inc
jo
xchg
lds
adc
pop
fsubrs
add
loopne
ret
aad
je
sub
ret
add
push
fsubrs
cmp
nop
dec
mov
mov
aad
jne
jmp
xor
mov
add
dec
mov
pop
xchg
jmp
hlt
push
inc
push
lret
test
cmp
mov
movb
dec
sub
test
jecxz
push
in
xchg
dec
adc
and
adc
js
adc
push
daa
in
cmc
push
inc
mov
sbb
shll
call
cmpl
stc
cli
xchg
inc
stc
cli
ret
call
mov
sub
ss
jbe
test
mov
lret
adc
and
notb
and
push
sub
pop
outsl
xchg
xlat
cmpsl
jmp
push
mov
lahf
mov
adc
inc
pop
dec
in
mov
and
push
push
or
pop
out
pop
and
or
jne
pop
and
lods
cmp
test
bswap
jle
lcall
mov
xchg
xchg
xor
pusha
and
inc
fadds
pop
push
hlt
jno
iret
pop
mov
pop
sbb
jl
lock
scas
dec
cmp
sbb
dec
cmpsb
mov
cmc
cli
mov
dec
loope
enter
lcall
insl
scas
call
adc
js
jo
leave
loope
adc
sbb
and
jge
mov
inc
dec
sahf
jbe
or
sub
fistps
mov
aad
jns
mov
arpl
xorl
cs
bound
jb
sbb
push
jge
lods
mov
icebp
mov
push
clc
cmp
call
pop
push
cmp
mov
test
addr16
push
lock
pop
mov
push
mov
inc
data16
aam
sbb
incl
mov
movsb
jne
pop
ss
sbb
repnz
inc
push
test
jbe
das
clc
mov
fxch
out
lahf
sbb
mov
xor
test
xchg
jae
pushf
in
scas
in
add
jns
dec
mov
cmp
repnz
xor
ret
jecxz
push
push
bound
popa
xor
fwait
push
sahf
lods
jmp
or
cmc
jb
add
mov
mov
jno
sbb
xlat
lahf
add
in
push
loopne
nop
rcll
cmp
inc
fdivrl
int3
scas
sbb
pop
push
mov
shr
arpl
inc
mov
ja
push
mov
lahf
jp
xchg
pop
jle
loopne
inc
push
cmp
clc
jo
cld
enter
fwait
xor
loope
out
ja
jle
lcall
xchg
loop
adc
push
daa
stc
out
aad
jge
fcomps
fbstp
sub
add
adc
or
ficomps
icebp
stc
fstpt
push
mov
and
inc
stc
roll
ljmp
ljmp
sti
rcrb
out
cmpsl
sub
fistl
in
push
bnd
mov
push
les
test
xchg
jns
arpl
adc
ja
xchg
xorl
adc
ret
inc
xchg
and
pop
jae
mov
sarl
xchg
inc
or
test
jg
and
mov
jle
mov
test
or
lea
xchg
push
jo
fmull
mov
or
in
mov
call
mov
icebp
sbb
pop
test
mov
sub
or
rcrb
ss
test
jge
sub
mov
fcmovnb
jo
mov
mov
inc
mov
fsub
add
les
pop
jl
mov
or
hlt
sbb
insb
shll
loop
sbb
dec
add
add
mov
lods
sbb
fsubr
fisubl
mov
cmp
test
jns
out
inc
mov
bswap
mov
clc
push
ss
push
repz
or
adc
mov
xchg
fisttps
cwtl
mov
filds
xchg
jle
in
movb
movsb
mov
sub
fs
lods
lcall
mov
and
call
gs
outsb
cmpsb
xchg
mov
adc
mov
mov
xor
inc
loop
in
sbb
inc
and
test
mov
mov
rcrb
and
jle
popf
pop
shlb
and
add
leave
add
or
leave
lock
or
idiv
iret
inc
sub
popf
sbb
xchg
push
test
dec
bswap
ds
mov
cs
cltd
xchg
fdivrs
jle
jae
mov
ja
cli
stc
push
ja
int
iret
inc
out
add
cltd
sbb
xor
mov
xchg
or
push
jo
rcrb
pusha
daa
pushf
jo
sub
into
daa
sub
cmp
in
adc
rcl
sbb
into
inc
test
mov
sbb
lods
shr
cmp
dec
roll
pusha
push
rorb
dec
pop
jecxz
inc
ret
arpl
test
inc
jmp
cmp
jecxz
in
push
movsl
std
cs
pop
xor
inc
aaa
sbb
cld
lahf
inc
jns
lds
and
mov
mov
mov
lahf
lret
repnz
mov
jne
bound
test
xlat
hlt
mov
stc
daa
xor
popa
add
ret
push
push
mov
addb
mov
jl
or
call
ret
icebp
leave
lds
pop
sbb
mov
es
scas
xchg
mov
and
inc
xor
pop
mov
push
push
shl
stc
repz
and
sbb
push
bnd
push
cld
es
add
and
inc
rorl
nopl
pop
cltd
mov
fldl
jp
or
mov
movsl
js
lret
repnz
xchg
sbb
in
fs
test
imul
cmpsb
mov
adc
lds
inc
popf
aaa
arpl
add
mov
xor
fistpll
add
mov
sub
or
lcall
dec
pop
jmp
mov
dec
dec
pop
push
insb
imul
jg
add
out
or
sbb
or
jecxz,pt
mov
mov
sbb
nop
sbb
adc
add
mov
and
cmp
xchg
dec
sub
idivb
xchg
test
push
lods
or
arpl
and
or
je
mov
outsl
shlb
add
sti
adc
xchg
jl
push
push
xchg
aaa
mov
mov
sti
movsb
das
fcomp
mov
sti
div
movsl
cmpsb
mov
rorb
int3
mov
xor
dec
dec
mov
push
ret
dec
dec
mov
loope
inc
jge
outsb
inc
adc
add
insl
pop
sub
popf
ret
push
arpl
imul
lods
jb
imul
cltd
ja
jns
xchg
xchg
add
dec
cmp
dec
nop
push
das
xor
subl
ficompl
pop
mov
bound
jo
out
mov
lret
dec
aam
adc
mov
xchg
or
dec
mov
aas
inc
test
push
ja
sbb
roll
mov
jns
mov
mov
xor
push
mov
lock
xchg
or
mov
in
dec
xlat
filds
cmp
out
cmp
pop
or
sub
enter
out
mov
mov
movsb
jbe
nop
je
pusha
inc
fsubrs
dec
in
notl
rolb
fidivrs
jle
sbb
cltd
hlt
cmp
outsl
mov
cmp
lret
dec
lret
cmpsb
std
inc
dec
leave
jno
push
xor
jne
push
insb
push
sub
stc
es
mov
sub
fldcw
aas
sub
sub
pop
jle
lahf
aad
iret
scas
adc
andl
and
inc
inc
mov
and
das
xor
xchg
xor
inc
hlt
enter
dec
push
inc
adc
sti
sbb
dec
mov
shrl
and
insl
inc
mov
push
outsb
adc
les
fwait
sub
fsubs
rcrb
iret
mov
xchg
je
jne
movsb
in
sqrtps
xchg
pop
push
xchg
adc
push
mov
mov
jne
inc
adc
je
mov
inc
js
pushf
or
andb
push
call
loopne
lea
sarl
loopne
inc
pop
jp
iret
and
xor
mov
mov
jbe
mov
xchg
push
out
mov
mov
out
push
xchg
xchg
fs
inc
test
or
sahf
jno
mov
xchg
jnp
ret
dec
mov
or
inc
cld
mov
ds
cmc
sbb
adc
lahf
add
call
hlt
fsubl
xlat
call
enter
fstp
pop
in
leave
imul
les
push
jae
add
lock
int3
int
xchg
lock
add
popa
pop
enter
mov
mov
lds
sub
pop
jp
fdivs
mov
loope
popa
test
stos
jge
orb
int3
dec
mul
pop
cmpsb
repz
and
pop
jge
mov
push
mov
nop
push
outsb
jge
add
push
or
adc
hlt
fwait
mov
xchg
dec
mov
sahf
sbb
add
cld
sbb
sub
inc
pop
dec
push
cwtl
inc
cld
jg
int3
insl
aad
movsl
incl
xchg
or
int3
xlat
mov
shll
jo
pop
stos
int3
adc
leave
inc
cmp
es
mov
sbbl
movsl
dec
push
nop
call
sub
dec
push
dec
and
mulb
shl
in
repnz
push
repz
or
cmp
add
stos
xchg
xor
xchg
je
clc
les
adc
arpl
cmc
lret
pop
and
mov
stos
cmp
ror
int
inc
push
jo
mov
mov
std
mov
mov
or
add
ljmp
jmp
daa
push
adc
aaa
and
mov
sbb
mov
jmp
rorl
jp
cmp
sub
jecxz
mov
fidivs
lret
mov
int
daa
lcall
outsb
leave
adc
negb
xor
adc
mov
lret
xor
mov
iret
int
repz
insl
inc
mov
sahf
cmpl
ss
xlat
sub
fsub
cmp
mov
mov
fistpll
call
push
fnstcw
cmp
dec
ljmp
enter
xlat
and
xchg
pop
mov
std
mov
test
xor
pop
dec
pop
cmpsb
arpl
pop
mov
pusha
push
mov
sbb
jbe
push
or
call
lcall
cmp
test
cmp
shll
scas
push
pop
cmp
push
push
jnp
scas
sub
mov
ret
sahf
push
add
sbb
aam
iret
jl
mov
fs
push
iret
in
cmp
adc
outsb
cmc
rcr
lods
sahf
xchg
movsl
or
js
cmp
cmp
enter
out
bound
mov
mov
and
arpl
ret
dec
xchg
es
shr
sti
in
imul
dec
lds
pop
ljmp
mov
mov
jle
ret
mov
fldcw
in
xchg
push
push
cli
push
popf
push
lret
xchg
sbb
mov
loope
adc
jno
inc
add
xchg
test
push
cwtl
outsb
cmp
pusha
jns
inc
insb
sbb
aad
jo
iret
repz
stos
movl
scas
adc
out
out
int3
cmpl
mov
jecxz
pop
add
out
sub
cmp
bound
stos
jg
into
orb
add
mov
jnp
cld
ret
cmp
jg
ret
pop
inc
xorl
bound
or
std
jae
mov
cld
add
addb
je
cli
lods
fistl
push
and
dec
cmp
mov
add
mov
jo
push
xor
xor
out
add
sub
bound
push
sbb
outsl
sub
nop
adc
push
stos
or
add
loope
in
jne
xor
sub
pop
les
dec
out
xor
rcrl
jp
jnp
out
inc
cli
je
aaa
dec
int
lds
ljmp
lret
and
fnsave
dec
lods
pop
shrl
xor
mov
push
adc
dec
mov
adc
xchg
test
sub
in
pop
xor
add
pop
add
repz
out
sbb
ficompl
xchg
cmp
sub
mov
adc
cwtl
sub
hlt
inc
sbb
mov
pop
cmp
test
ds
jnp
pop
loopne
jnp
sub
stos
and
jae
jae
mov
mov
pop
test
cli
adc
push
mov
xlat
mov
sub
jno
sub
xor
pushf
mov
inc
imul
mov
jg
or
sub
aam
daa
push
test
nop
push
jle
jno
lods
aad
mov
jmp
ss
xchg
inc
daa
sbb
aaa
or
insl
scas
xor
dec
cmp
and
adc
or
xchg
jne
sub
popa
sbb
jnp
xor
aam
shll
sub
dec
dec
test
or
cmpsb
jo
pop
jle
enter
or
out
shlb
out
fidivs
arpl
add
rcrb
fs
cld
adc
andb
mov
mov
popa
cmp
xchg
xchg
mov
hlt
xor
fidivl
adc
int
mov
fidivrl
inc
cmp
scas
fcomp
pop
adc
and
lock
stos
lahf
cld
ficomps
lds
pusha
addr16
in
jo
xchg
les
lahf
loopne
pop
lret
daa
cmp
arpl
call
in
mov
and
dec
adc
enter
shlb
jecxz
inc
es
shlb
cmp
shrb
aam
or
repnz
icebp
sub
daa
dec
aaa
movsb
pop
push
mov
xchg
pop
jl
rcr
test
xchg
jecxz
std
test
sub
ds
add
cltd
fyl2xp1
push
mov
push
fdivrs
aam
xor
data16
add
std
jmp
sub
and
xchg
int
mov
sub
std
loope
sub
imul
cmp
sbb
pusha
adc
dec
nop
aaa
cmp
adc
mov
sbb
fwait
cmpl
lods
rcrb
stos
push
mov
cltd
fwait
pop
lods
leave
push
mov
std
push
dec
sbb
mov
loope
mov
lret
dec
pop
dec
push
outsl
adc
ret
call
jge
jle
xor
xorb
stos
shrl
cs
mov
out
out
and
xchg
mov
stc
push
ficompl
cmc
in
adc
push
leave
cmpb
test
or
in
xor
cltd
mov
and
xor
push
iret
scas
jbe
xor
out
cwtl
loope
xor
cmp
sarb
lea
test
lcall
insb
dec
push
mov
lcall
sar
mov
cmp
push
and
adc
sub
jbe
sbbb
or
mov
mov
insb
pushf
cmp
push
imul
xchg
pop
inc
adc
lret
or
mov
notl
cs
shrl
mov
xchg
mov
rcrb
jno
cmc
ret
cld
dec
jge
mov
outsb
sbbl
inc
and
jbe
xchg
cwtl
add
adc
data16
xchg
pop
mov
sti
mov
xor
cmp
xchg
inc
aam
jbe
mov
cmp
xlat
jno
insb
fstpl
pop
sub
mov
inc
test
mov
mov
fistps
sbb
nop
pop
inc
stos
flds
xchg
test
shlb
ljmp
sbb
mov
push
popa
jge
xor
pop
xor
fcompl
rcl
clc
sub
inc
lcall
inc
mov
jmp
test
cmc
push
and
dec
push
cltd
jl
push
popf
jne
mov
xor
push
inc
testb
int
mov
jle
fimuls
dec
icebp
leave
mov
cmp
mov
aas
les
adc
jecxz
xor
adc
cmc
pop
imul
subl
std
in
in
lods
fs
popf
sub
cmpsb
lods
dec
pop
xchg
mov
pop
out
push
or
notb
popf
or
lods
sti
test
push
in
cld
gs
call
sub
movsl
xor
push
xchg
enter
test
fdivrs
popf
imul
xor
and
inc
sbb
loope
out
jo
adc
sub
cmpsl
sub
mov
out
add
das
rolb
mov
mov
xchg
gs
mov
loope
jp
mov
and
ficomps
sub
lahf
or
mov
cmc
mov
insb
out
push
je
das
scas
add
xchg
cld
call
push
es
loopne
sti
imul
out
mov
cmc
cmp
push
xchg
loopne
outsl
js
dec
cwtl
test
shrb
lea
sbbb
popf
cmpsb
je
les
inc
push
cmc
arpl
jae
push
xchg
addr16
adc
shrb
or
shrl
mov
aam
lods
dec
ss
xchg
pop
test
sbb
lods
lret
repnz
je
cmp
sbb
push
decl
inc
mov
loop
cmp
insl
sub
jnp
stc
jmp
fwait
lods
cld
and
lea
pop
jnp
xor
cmp
cmpl
stos
les
pop
add
xchg
cmp
lret
xor
aad
std
es
adc
xor
mov
xchg
or
mov
dec
ljmp
add
lahf
push
mov
inc
or
in
or
dec
mov
scas
or
inc
mov
xchg
mov
xchg
adc
ret
push
inc
ret
stc
pop
push
rcll
dec
loop
and
pop
pop
call
pop
dec
popf
iret
stos
aas
and
pop
add
and
test
gs
mov
sbb
sarb
dec
stos
pop
push
rcll
mov
fsubrp
mov
or
dec
jl
pop
pop
jnp
and
dec
cwtl
and
hlt
pop
jecxz
in
fisubrl
ds
loope
sub
rorb
popf
leave
ficomps
sahf
pop
jns
mov
imul
or
test
sahf
ss
adc
push
xor
es
jo
fstps
jne
mov
add
lods
xchg
jmp
sahf
iret
push
mov
and
fucomi
in
popa
into
or
dec
mov
jne
inc
pushf
repnz
loopne
out
lret
fs
xchg
stos
scas
add
push
sub
aad
lcall
dec
and
movsl
and
push
ss
es
push
rolb
push
fsubl
jg
fstl
idiv
aas
leave
cmp
fcoms
adc
aam
pop
pusha
dec
sti
rolb
cmp
fidivrl
rcl
movsl
adc
dec
fwait
or
out
scas
testl
and
es
lcall
aas
mov
add
and
sub
pop
pop
cs
les
adcb
mov
lods
dec
and
das
jns
adc
jno
adc
lods
xor
xor
cwtl
jmp
lea
loop
fldz
xchg
ss
out
fmuls
xor
lods
dec
pusha
stos
sbb
xchg
outsb
mov
jl
pop
inc
jl
jecxz
push
sbb
dec
fwait
nop
lock
mov
adc
psraw
and
stos
sbb
adc
push
jnp
pop
or
sub
sub
inc
xchg
cmp
call
mov
repz
out
sub
pushf
repnz
cmp
ds
jbe
sbb
icebp
cltd
scas
jge
mov
fildl
dec
lcall
xchg
hlt
mov
push
inc
ja
cld
inc
pop
jmp
loop
pop
lock
pop
cmc
mov
push
inc
lcall
push
int3
cmp
fiaddl
fs
andl
cmpsl
adc
mov
mov
mov
jae
inc
out
mov
cs
ret
cmp
cli
repz
stos
jmp
mov
push
jecxz
push
js
or
lret
lods
add
insl
out
xor
out
ja
sub
mov
inc
adc
ret
lahf
adc
gs
insb
mov
iret
inc
pop
leave
jb
lea
jmp
pop
nop
cmp
push
loopne
subl
ljmp
cwtl
mov
dec
pop
jl
sbb
fisubl
xchg
add
dec
loop
mov
inc
cmp
jb
xchg
xor
subl
and
insl
sbb
sbb
in
jp
lret
dec
jbe
sub
xchg
sahf
mov
daa
mov
sbb
repz
int
xchg
nop
sarl
and
aad
push
jae
inc
and
lock
into
lahf
inc
xchg
test
sub
push
mov
and
sbb
xchg
mov
jnp
xchg
sub
xchg
sahf
stc
in
fldenv
mov
cmp
mov
mov
cmp
mov
add
mov
jecxz
pop
lods
xor
xor
inc
repz
xor
rcrl
mov
outsl
dec
xor
mov
repz
dec
cmp
sub
daa
ret
mov
push
push
test
sbb
stos
mov
ret
fcomps
test
mov
or
repz
xor
pushf
lret
xchg
cld
mov
and
in
jl
ss
inc
xchg
ret
cmp
testl
or
jge
dec
cmp
pop
mov
add
movsl
pop
nop
jb
ja
aam
cmp
push
rcll
mov
rol
push
pop
mov
mov
test
insl
inc
movsb
inc
subb
fiadds
pop
cltd
cmovs
add
xchg
adc
lretw
xlat
jecxz
out
aad
add
icebp
mov
cmp
or
pop
xor
pop
nop
jecxz
lods
mov
pop
jmp
jmp
xor
add
fwait
test
push
dec
repz
lret
movsb
mov
clc
xor
mov
or
adc
test
fwait
sbb
repnz
in
sub
lods
mov
insb
xchg
lock
mov
ljmp
dec
mov
movsb
ss
ds
xor
add
sub
add
lock
xchg
or
fwait
int3
jecxz
mov
jb
pop
inc
inc
jno
pop
sub
xor
frstor
jl
sub
mov
sti
mov
cmp
sub
xchg
jg
add
popa
push
add
xchg
sub
jmp
add
sbb
sbb
pmuludq
add
inc
and
loope
push
in
or
insb
add
fisubl
pushf
jge
dec
lcall
mov
cmp
mov
mov
test
or
push
xchg
mov
sub
or
dec
cmp
aad
mov
mov
pushf
fldt
dec
sti
cmpsb
push
test
mov
sub
mov
loop
lds
mov
pop
jo
cmp
lahf
sub
mov
jb
inc
push
xchg
pop
cld
ss
loope
pop
mov
stos
add
movsb
insl
imul
pop
lds
fcomi
lahf
xchg
mov
xchg
inc
repz
pop
jl
push
mov
dec
cwtl
adc
pop
lcall
push
jno
xlat
add
jae
loope
cmp
cmp
jmp
into
mov
lret
outsb
xlat
andl
dec
add
pop
inc
lock
stc
pop
das
jmp
xchg
repnz
mov
sarl
lods
imul
sti
xchg
jecxz
adc
cmp
testl
int3
cmpsb
mov
stos
and
push
flds
mov
xor
mov
cmp
andb
inc
data16
cs
mov
inc
notb
sti
mov
hlt
jae
movsb
pop
sahf
mov
adc
jl
xchg
jmp
mov
and
cltd
int
or
sbb
mov
test
aaa
mov
repnz
iret
loope
insb
jmp
stos
xor
aad
iret
sbb
mov
sub
push
xor
insl
out
xor
mov
in
mov
clc
mov
inc
aam
addr16
adc
shl
std
int3
jo
sbb
push
cmp
setg
or
pop
push
xchg
mov
aas
in
inc
in
gs
shlb
pop
pop
add
sub
and
xchg
fcomip
pop
into
rcr
push
and
mov
out
cmp
mov
std
aam
popf
pop
iret
nop
in
fsubrs
imul
ret
cmp
cld
cmp
insl
push
mov
pop
fidivs
push
out
jns
dec
add
jp
cmpsl
imul
push
mov
sbb
iret
inc
xor
pop
xor
ret
push
gs
cmp
mov
fwait
bound
cli
mov
fldl
mov
jp
iret
mov
fcomi
into
mov
shlb
or
fdivrs
xor
jecxz
sub
fisubrl
mov
arpl
out
imul
test
jnp
inc
adc
fbstp
cmpsb
cmp
cmp
in
push
xchg
clc
jp
rol
push
lret
or
gs
std
cmc
or
xchg
ja
mov
xchg
rorl
out
dec
fdivrs
loopne
lea
pop
aas
or
repnz
add
outsl
adc
cwtl
pop
ljmp
or
pop
mov
sub
and
xor
movsl
hlt
shr
shlb
jl
sub
add
inc
xchg
js
out
dec
hlt
aam
jns
pop
pop
and
jbe
xchg
pushf
adc
pop
inc
rorl
stos
loopne
jns
popf
sbb
cs
push
push
loopne
inc
cmc
outsl
sarl
hlt
mov
mov
lds
mov
xor
aad
enter
aam
decb
jno
inc
rolb
addr16
lret
xor
lods
inc
out
mov
aas
mov
mov
push
cltd
sbb
xor
or
pop
les
and
jne
orb
and
stos
xchg
fstpl
and
cmp
jne
inc
sub
jge
ror
add
pop
pop
into
push
cwtl
and
mov
in
repz
cmp
xor
cmp
shrl
insb
fildl
daa
pop
cs
pop
mov
add
loop
mov
xchg
push
stc
dec
jg
jge
mov
rorb
add
dec
dec
pushf
lea
xchg
cmp
pop
xor
test
push
mov
push
mov
into
cmp
pop
xchg
mov
mov
in
imulb
dec
jle
aam
or
lds
mov
sti
jl
jne
andl
jl
dec
fmull
inc
dec
insb
add
mov
outsl
shll
ljmp
scas
cmp
fsts
std
cmp
faddp
dec
subb
push
xchg
sub
sbb
inc
mov
ljmp
push
or
and
or
adc
and
add
incb
mov
sti
aad
shll
ja
mov
sbb
in
mov
repz
sbb
and
aas
xlat
in
aam
pop
jle
shlb
sub
sbb
mov
jnp
jmp
repz
xchg
xor
mov
and
xchg
mov
ja
dec
ss
fwait
cli
andl
adc
out
paddsw
pop
adc
es
movsl
shl
in
daa
int
or
fcomps
jp
add
adc
popf
stc
mov
loop
push
jmp
fidivrs
adc
pop
xor
testl
imul
dec
push
push
je
sub
sub
fcoml
call
add
ret
and
cmp
popa
push
pop
cld
movsl
sbb
clc
mov
and
sarl
rorb
lahf
xor
jns
imul
pop
pop
pop
ja
cld
sti
pmaddwd
cmp
jo
daa
sub
in
shlb
outsl
inc
push
mov
imul
mov
jb
lds
iret
mov
sbb
cmp
mov
cmpsl
notl
movsl
pop
stc
add
inc
shlb
mov
push
sub
divb
or
mov
cmpsl
outsb
jne
xchg
xchg
pop
lret
and
fs
leave
cwtl
fildl
mov
lock
and
sbb
push
mov
dec
outsb
mov
out
add
push
fnstcw
je
mov
in
addr16
push
lock
or
paddw
in
ret
inc
jno
repnz
inc
cmpsb
leave
repz
sbb
test
test
pop
js
push
and
and
jo
xchg
js,pn
push
scas
inc
xchg
faddl
adc
data16
sbb
stos
mov
pop
mov
inc
push
pop
jnp
fnsave
mov
aas
iret
and
jge
loopne
jns
test
stc
dec
loop
jg
sub
jmp
sub
push
out
sub
add
pushf
add
loop
lret
jg
loop
xor
lock
and
and
loopne
or
mov
dec
lret
push
rcr
xlat
inc
jmp
popa
stos
cmp
or
daa
and
mov
inc
dec
pop
cmp
push
or
in
test
lahf
sub
or
lcall
jecxz
test
adc
mov
pop
jp
mov
adc
cmp
add
shlb
aaa
into
test
mov
xor
mov
sbb
jl
sbb
int3
cmc
daa
lods
rdtsc
push
inc
fwait
pop
arpl
inc
js
and
pop
sti
fwait
les
sbb
jbe
xor
insb
mull
mov
addr16
sbb
jge
xor
push
inc
mov
iret
inc
cmc
loopne
mov
shl
fbld
adc
js
clc
je
in
iret
jge
orb
cmp
icebp
iret
dec
cmp
xchg
sahf
push
loopne
xchg
movsl
cmc
jbe
add
sti
jge
mov
in
and
arpl
mov
test
pop
cmpsl
iret
and
inc
cltd
insl
add
dec
cmp
mov
aas
sub
into
xlat
and
mov
jb
test
lods
mov
rorl
add
mov
cmc
mov
mov
out
iret
addr16
int3
mov
dec
addb
cmp
xchg
insb
rcrl
lods
xorb
dec
jbe
hlt
mov
jbe
mov
sub
or
dec
filds
out
in
or
stc
sbb
popa
add
ds
loope
int
call
jae
fisubrs
jno
sbb
push
push
add
dec
pop
jnp
fisttps
mov
sub
out
push
inc
cmp
clc
or
pop
insl
std
aam
dec
ja
cmpsb
mov
fnstsw
mov
scas
adc
gs
lahf
icebp
xchg
sub
in
andl
hlt
sbb
mov
push
inc
cmp
lea
lea
push
lcall
xor
pushf
cli
cmp
mov
lcall
scas
inc
stos
movsb
mov
push
pop
lods
popa
mov
stos
mov
xlat
or
add
sbb
pop
enter
mov
fcomps
lcall
cmp
stos
dec
mov
mov
mov
pushf
cltd
push
xchg
scas
xchg
and
pop
std
dec
mov
fisttps
xchg
iret
or
into
add
cmp
mov
sbb
repz
inc
mov
push
rorl
shlb
pop
dec
inc
dec
test
in
sbb
fldenv
mov
data16
loopne
add
mov
xor
movsl
jnp
and
das
std
xor
inc
mov
in
fldl
or
sub
xchg
and
test
jnp
out
in
push
adc
addr16
inc
lahf
inc
ds
inc
jnp
mov
dec
jmp
xchg
mov
call
add
addr16
cmpl
fwait
jmp
sbb
bound
lods
inc
inc
xchg
nop
cmp
cs
addr16
and
cmp
test
js
and
fs
and
pop
js
lds
into
or
dec
mov
movsb
aam
ljmp
sub
jg
fisttps
mov
add
inc
or
in
cwtl
jp
repnz
sbb
ds
int3
jo
sub
jle
test
cld
mov
movsb
bound
jecxz
or
cmp
jae
dec
sarb
and
xor
aaa
inc
clc
push
inc
adc
mov
pushf
rorl
lret
mov
inc
mov
mov
push
out
lds
push
fiaddl
dec
jle
dec
cmp
xchg
xor
pop
lret
cmp
pop
xor
push
loop
add
sbb
adc
ljmp
push
mov
adc
xchg
cld
es
popa
adc
popl
inc
adc
xchg
out
jl
adc
mov
in
stos
add
or
xchg
sbb
push
pop
mov
xlat
mov
sbb
mov
or
inc
dec
and
mov
xor
repnz
jp
popa
imul
pop
push
and
repnz
fwait
je
cmp
add
jl
dec
add
data16
mov
arpl
sub
insb
dec
add
push
in
lret
pop
ret
cmpsl
test
rolb
or
gs
ret
js
push
shlb
movsb
mov
out
das
and
xor
loope
popa
or
mov
fdivrs
or
pop
adc
call
out
push
or
in
sub
ds
pop
int3
das
sub
in
add
or
jno
jae
outsl
cmp
outsb
cmp
mov
and
pop
mov
pop
push
stos
or
aad
adc
stos
and
jb
movsl
insl
fstpl
cmc
nop
sub
push
inc
pusha
movsl
mov
cs
inc
call
testl
pop
aam
push
mov
in
shlb
into
mov
sbb
loop
test
push
adc
in
xchg
mov
xor
xor
cmp
mov
jo
sub
inc
xor
fwait
sub
xchg
pslld
pop
lahf
push
push
lret
sbb
subb
jbe
sbb
push
push
je
adc
inc
les
dec
dec
mov
mov
daa
andb
data16
sub
mov
push
loope
mov
push
out
lock
push
xor
xchg
bswap
shl
mov
fldcw
inc
mov
enter
out
xchg
pop
pop
adc
push
addl
repnz
xchg
jae
fdivrl
add
arpl
mov
push
mov
sbb
bnd
enter
jl
bound
lcall
into
adc
push
mov
mov
sbb
rcrw
ljmp
push
xchg
arpl
mov
and
ja
mov
orb
fst
jb
sbb
xchg
mov
sti
loope
iret
sbbb
insl
fsin
jmp
scas
inc
cli
ja
inc
int
scas
movl
mov
dec
inc
push
add
or
push
insb
scas
addr16
sub
pop
mov
cli
sub
aad
xchg
mov
jo
jmp
adc
mov
add
or
dec
xchg
sub
inc
in
frstor
mov
fistps
pop
xor
xchg
movsb
test
ds
add
pop
adc
and
mov
pop
pop
decb
cmp
popa
push
scas
inc
lods
stos
jmp
inc
lahf
and
mov
pop
cld
test
push
lcall
es
test
data16
sub
shrl
dec
dec
pop
bnd
xchg
lods
xchg
fists
lret
aas
mov
mov
cmp
mov
xchg
mov
push
fsubs
mov
mov
jp
int
jl
cmpsl
fstpl
mov
mov
inc
adc
pop
cmp
insl
cmp
xlat
add
mov
incb
fistpl
mov
test
je
jbe
rcrb
sbb
mov
xorl
jp
mov
cmpsl
sti
push
mov
cmp
js
pop
jp
loope
shlb
mov
push
addl
xchg
inc
or
fildl
repnz
fcomps
push
out
mov
cmp
dec
data16
dec
lds
shl
sbb
mov
rorb
fimuls
xor
hlt
sahf
pop
pushf
cmp
aas
dec
bound
int
in
fstpt
scas
mov
or
cwtl
push
jp
stc
jp
sbb
or
jg
push
jge
pop
push
adc
jge
adcb
jge
lods
mov
sar
cmp
fiadds
mov
test
add
cmc
jle
jge
sub
pop
lcall
aad
aaa
cmp
stos
in
je
mul
decb
mov
popf
lods
xchg
das
stos
movsb
sarb
inc
cltd
mov
jmp
or
ljmp
add
cmp
mov
or
subb
out
dec
push
dec
enter
sub
push
xchg
ja
push
cli
lock
ret
out
dec
add
andb
or
movsl
mov
lahf
or
jbe
mov
push
xchg
jnp
fildl
cli
xor
insb
les
inc
aaa
data16
jle
push
xchg
pop
adc
cmp
jb
fcomps
out
or
push
repz
xor
out
lret
xor
out
loope
test
mov
sub
fists
aad
cmp
cmp
in
xchg
lds
cmp
ret
cltd
ret
push
mov
adc
mov
dec
popf
and
adc
popa
dec
cltd
out
adc
out
in
mov
shrb
out
cmc
out
add
fisubrs
lea
jns
mov
cmp
dec
add
sub
add
outsl
and
popa
lock
cmp
dec
adc
popf
in
jno
inc
arpl
or
inc
shll
pop
sub
outsl
bound
mov
imul
data16
mov
push
cltd
and
sub
mov
imul
mov
xor
js
int
clc
dec
aaa
dec
or
faddl
cmp
xor
mov
adc
mov
jno
mov
in
arpl
incl
push
mov
jb
push
outsb
jg
inc
call
fsubs
addr16
sub
in
add
pop
cmp
mov
ljmp
dec
pusha
lock
scas
jmp
je
mov
out
and
stc
sub
mov
es
inc
idivl
xchg
movsl
sarb
ret
or
or
clc
push
repz
xchg
fistps
sti
mov
mov
bound
dec
jg
outsl
out
rcrb
popa
and
lods
popf
adc
lea
cmpsl
pop
push
ljmp
adc
outsl
aam
fisttpll
cmp
push
pusha
jns
dec
mov
out
push
xor
mov
ja
adc
push
mov
xlat
and
mov
popa
jmp
out
xchg
add
mov
mov
fnsave
inc
sbb
outsb
add
in
adc
ds
into
testb
mov
pop
add
jb
lods
and
xlat
push
cltd
adc
jmp
mov
or
sbbl
test
out
mov
mov
cmp
and
orl
mov
pop
pusha
ficoml
jle
and
fists
sarl
lret
xchg
scas
lods
dec
sarb
es
fidivl
push
imul
cltd
shl
lea
jge
jb
lods
ret
inc
daa
andnps
jge
mov
pop
mull
stos
push
pop
cmpsl
pop
dec
jne
outsb
or
hlt
push
test
sbb
sti
mov
sti
les
cmc
out
pop
mov
int
loop
inc
aam
leave
mov
add
ret
roll
les
xchg
adc
leave
xor
dec
push
ds
mov
jmp
lret
aam
mov
aam
inc
push
mov
out
test
fbstp
jns
nop
and
pop
adc
dec
mov
addb
xchg
lcall
adc
les
or
inc
xor
insl
jge
sti
stos
lods
sbb
mov
sbb
cli
aad
jle
roll
ss
cmp
js
mov
push
add
sub
sbb
mov
xchg
das
fwait
daa
pop
add
mov
ret
cmpb
shl
mov
test
sub
dec
pop
dec
mov
ds
arpl
aas
les
sahf
add
mov
imul
and
fninit
xchg
mov
xor
clc
mov
add
adc
or
scas
add
pop
popa
arpl
dec
push
pop
fwait
lods
push
js
add
mov
jle
sub
dec
imul
push
sbb
sbb
rol
pop
neg
in
test
sbb
into
mov
mov
aas
pop
addr16
adc
ds
mov
ret
aas
int
mov
xchg
xor
cwtl
jmp
xchg
add
es
push
outsl
mov
add
lret
roll
mov
sbb
loope
ja
pop
and
xchg
dec
push
or
or
mov
jg
scas
or
pusha
lcall
dec
cs
pop
iret
xchg
push
jp
pusha
cmc
jg
jo
mov
pop
sbb
mov
inc
scas
sub
lds
mov
sub
jecxz
cs
inc
ret
mov
cmp
sbb
test
orb
loopne
adc
stos
mov
jle
out
jmp
push
test
mov
popf
push
ficoml
add
imul
sub
scas
test
test
cs
mov
xchg
adc
xchg
mov
mov
push
cmp
xor
into
xor
xchg
leave
push
ret
add
sub
pop
mov
das
lds
sbb
aas
and
mov
daa
aas
sbb
movsb
js
push
add
sbb
insb
inc
mov
fneni(8087
pop
popf
leave
add
dec
aam
ret
pop
sbbb
push
loope
lds
fnstsw
roll
xor
fcoms
inc
addb
and
andl
xor
popf
cmp
imul
in
push
cld
dec
xchg
cs
cmpsb
sub
into
leave
mov
mov
push
lock
inc
sar
popa
lret
outsb
pop
push
icebp
pop
insl
movsl
outsl
call
push
mov
test
pushf
cmc
ss
lcall
xchg
imul
inc
mov
fld
lret
das
push
pop
dec
xor
stc
xor
mov
imul
jge
fiadds
pop
and
jmp
add
in
dec
test
je
sbb
decb
mov
jbe
mov
inc
andl
sub
iret
cmpsb
cwtl
sbb
dec
outsl
add
insl
inc
das
pop
dec
dec
popf
cmp
mov
mov
sub
mov
dec
lods
call
out
and
mov
mov
mov
cmp
push
cmp
mov
repz
imul
leave
outsl
cmp
adc
and
xor
test
mov
scas
or
or
fdivrs
push
aam
pusha
inc
adc
push
adc
imul
adc
insb
aas
enter
push
inc
sub
and
pop
adc
mov
dec
mov
dec
outsb
sub
test
jl
test
cmp
cli
push
sub
jns
shll
sarl
pop
sbb
sbb
cmpsb
pushf
push
rcl
cmp
jmp
mov
jmp
decl
push
push
xchg
dec
cmp
loopne
sub
es
out
lret
ror
and
fcmovnu
jae
pop
add
lret
into
adc
fcoml
and
je
mov
out
lahf
jg
js
xor
idiv
pop
loopne
divl
add
adc
hlt
push
jnp
out
rolb
jle
inc
xchg
cmpsb
mov
mov
stc
popf
ja
jp
push
pop
stos
aad
into
daa
lods
sub
in
ret
jnp
lds
or
push
loop
test
inc
cwtl
xchg
push
lock
loop
cmpsb
dec
xor
lods
jmp
xor
mov
sub
movsb
jl
out
mov
loop
in
out
mov
pop
mov
inc
sbb
or
cmpsl
xchg
in
pop
sti
xlat
push
push
mov
aam
ret
mov
pop
outsb
imul
sahf
aad
outsl
sub
loope
mov
imul
ret
ja
decb
stos
add
stos
sub
sbb
ret
xchg
mov
lock
jnp
inc
add
gs
aam
pushf
fcomps
mov
je
enter
je
fiadds
mov
cltd
stos
push
dec
out
out
sub
pop
ds
cmc
jl
cwtl
mov
pop
popf
lahf
mov
int3
mov
push
gs
inc
or
mov
inc
shr
pcmpgtd
mov
jb
repz
xlat
push
jns
fisubrs
sbb
pop
mov
xor
mov
mov
adc
clc
shlb
stos
outsb
popa
adc
jnp
jl
jo
stc
xor
pop
dec
iret
mov
addr16
ret
sti
mov
out
push
mov
xchg
jno
nop
fcoms
ret
mov
cmc
push
dec
mov
mov
xlat
push
rorb
lea
cmpsb
sub
mov
test
aaa
pop
int3
mov
mov
sub
into
daa
add
jle
dec
add
push
xchg
inc
jge
inc
fdivl
orb
jbe
dec
sub
sbb
mov
in
jo
fiaddl
shrl
ficoml
popa
inc
sub
cmp
lret
outsl
scas
dec
into
scas
insb
in
rcl
test
out
movsb
xor
pop
sbb
mov
test
jnp
xor
dec
cmp
jle
outsb
in
dec
push
mov
pop
movsl
mov
cmp
xchg
pop
andb
mov
in
leave
pusha
sbb
out
or
ret
xchg
or
adc
repz
in
subl
out
push
int3
jo
lret
rclb
push
cwtl
das
jne
mov
xchg
and
daa
int3
dec
scas
and
fistl
bnd
pop
xor
push
add
push
add
mov
mov
jbe
pop
dec
xchg
rorl
push
jnp
repz
inc
test
sub
and
or
daa
mov
push
dec
bound
xchg
cmc
sub
inc
lret
xchg
mov
adc
push
je
and
push
mov
stc
insl
test
std
shrl
lea
cltd
lret
pop
divb
pusha
jmp
fdivrs
arpl
push
loope
sub
jo
in
popf
xor
addb
pop
jns
pop
jmp
fimull
imul
fwait
adc
xchg
or
pushf
push
push
or
cmp
push
and
or
mov
outsl
ds
movsl
adc
into
dec
fs
lahf
dec
sbb
cmc
cmc
fs
mov
shrl
inc
sub
outsb
sbb
stos
jb
pop
pop
mov
push
jle
jne
xor
dec
test
xor
insl
imul
les
fwait
jae
sahf
sbb
daa
jns
mov
cld
loope
in
hlt
sub
and
xchg
nop
sub
rcrb
xchg
arpl
inc
mov
cmpsl
enter
movsl
test
add
cld
xchg
popf
repz
pop
jno
xor
out
shlb
xchg
jp
jbe
jmp
mov
sub
push
mov
add
inc
icebp
xchg
jmp
sub
repz
mov
pop
loopne
clc
mov
arpl
sbb
inc
insl
sbb
pop
sub
mov
push
xchg
xlat
sbb
fwait
add
nop
imul
pop
aad
push
lret
ja
adc
pop
outsl
xor
or
xor
popa
dec
leave
push
xchg
jecxz
add
sti
repz
repnz
mov
inc
hlt
imul
add
out
ja
or
loop
inc
test
les
lahf
lahf
sub
fstp
leave
or
inc
cmpsb
test
dec
test
stos
mov
or
pop
ljmp
arpl
fsubl
add
push
cmp
xor
cmc
mov
push
daa
insl
push
xor
cmp
scas
adcl
pop
push
mov
sar
sarl
leave
push
cmp
lea
pop
sti
sti
xor
int3
ror
mov
xchg
shrb
sahf
arpl
inc
hlt
ret
fcompl
fcomp
xchg
inc
jge
jge
lcall
xchg
stc
ficomps
hlt
add
mov
xchg
outsl
sub
test
subl
add
xor
pushf
mov
das
xchg
popa
and
and
or
push
and
pop
out
outsl
sbb
adc
xchg
jne
dec
dec
pop
stc
add
aad
lods
mov
inc
das
lods
adc
aam
push
jp
sbbl
mov
mov
fstl
pop
xor
andb
pop
sub
jmp
lcall
lds
sbb
sahf
cmp
out
rclb
mov
repnz
ds
xchg
add
aas
stos
out
hlt
std
jo
inc
or
sbb
lods
jno
add
sbb
inc
in
add
test
std
imul
dec
call
mov
scas
scas
xchg
sbb
xchg
fcmovne
sub
jb
gs
movsl
lods
inc
dec
add
mov
push
faddp
test
clc
es
jns
sti
packuswb
or
imul
cmp
in
sub
fsubl
push
sbb
xor
repz
test
jmp
out
icebp
insl
mov
and
loope
cmpsb
aam
mov
pushl
cli
aam
dec
pop
mov
daa
jne
push
outsb
jb
les
xchg
clc
lds
fstps
rclb
xchg
xchg
xor
dec
scas
or
js
addr16
xchg
int3
das
sub
cmp
push
stc
mov
sub
ja
add
nop
pop
cld
adc
xor
cwtl
insl
and
call
pop
fcmove
fbstp
nop
mov
pop
pop
out
xchg
lret
mov
inc
push
push
dec
loop
mov
lods
fisubrl
outsb
je
push
outsb
js
fsts
fisubl
je
cmpsl
sbb
js
and
mov
jmp
leave
cmp
lret
xor
test
push
shld
add
daa
ds
jmp
lea
test
lahf
scas
mov
pop
shll
mov
fwait
leave
push
in
sub
lcall
jg
adc
push
mov
ljmp
adc
adc
lea
adc
cmc
inc
xchg
std
test
stc
mov
push
cld
fistpl
lcall
out
mov
sbb
rclb
jle
jne
gs
jl
sub
cmc
icebp
inc
or
xchg
mov
cmp
iret
mov
adc
jle
cmp
mov
das
scas
out
nop
mov
repnz
lods
pop
cmpsl
into
xor
ret
jbe
xor
fwait
mov
test
dec
xchg
ds
cli
std
imul
cmc
lcall
mov
push
pop
out
daa
sub
jno
and
mov
fcoml
jle
dec
pop
or
push
cmp
add
adc
xor
stos
iret
pop
inc
xor
lds
xchg
mov
sbbl
mov
pop
fsqrt
mov
fldenv
bound
and
sub
stos
xchg
jae
xchg
xor
loope
sub
andb
and
mov
js
popf
testb
call
sub
mov
push
inc
push
ja
fdivp
jl
cmp
pop
sub
jmp
nop
push
pop
inc
mov
mov
aad
shlb
push
in
lret
cwtl
mov
dec
mov
mov
imul
out
cmp
xor
es
mov
rclb
cs
subl
or
adc
out
mov
pop
pop
sbb
lret
inc
adc
sbb
adcb
int3
outsb
dec
sbb
jnp
add
mov
fsub
je
add
fmul
jge
inc
aas
std
lea
xor
dec
push
pop
xor
icebp
dec
stos
pop
lock
sbb
icebp
or
stos
mov
sbb
aam
inc
in
xchg
cmp
mov
xor
add
ljmp
mov
aas
fidivs
pop
mov
pop
idivl
sbbb
test
jno
mov
insb
das
popa
cwtl
sub
sub
cmc
in
in
mov
subb
mov
inc
rorb
fistl
inc
rorl
or
mov
xchg
aad
in
sub
or
xchg
out
push
mov
daa
loope
andb
sub
lret
jmp
sbbl
inc
hlt
and
add
xchg
adc
xchg
xchg
pop
push
fcoml
in
cmp
mov
jge
inc
jns
test
jbe
lock
sahf
lea
dec
and
outsb
imul
mov
and
addr16
scas
dec
leave
push
inc
mov
pop
mov
mov
cmp
nop
xchg
or
pop
ds
out
or
popf
xchg
inc
shl
aad
sbb
add
xor
push
xor
insl
loope
sbb
adc
into
mov
pop
aas
mov
int3
leave
mov
xchg
fwait
inc
mov
mov
push
fcmovu
andb
outsl
cmpsw
inc
hlt
jge
fdivl
shlb
stc
pop
push
mov
iret
cmp
es
in
scas
sub
add
outsb
push
pop
add
push
xor
push
bound
aaa
das
and
adc
out
jle
pop
mov
lret
in
sbb
jne
jb
mov
movsb
and
dec
lahf
pop
in
std
dec
rcr
je
movsb
and
rcrl
callw
sbb
jle
push
fcoms
lcall
sbb
scas
push
xchg
mov
ljmp
sbb
jle
mov
or
pop
stos
pushf
scas
xchg
add
es
xor
jmp
out
js
push
mov
push
insl
jnp
dec
mov
sbb
jo
lea
stos
outsb
sbb
sbb
xor
adc
sbb
xor
repz
push
lret
sti
sbb
xchg
fiaddl
mov
push
sahf
jo
push
or
cmp
sub
xchg
pop
adc
jb
cmp
addr16
mov
inc
leave
or
or
mov
fisubs
icebp
pop
in
psrlw
rcl
andl
and
shrb
mov
insb
xor
pop
sbb
es
cmp
ss
aam
push
mov
sub
or
rclb
xor
out
sub
mov
mov
cmp
xchg
mov
push
jp
jb
mov
idivl
jle
mov
jne
addr16
lods
inc
adc
push
xlat
fwait
xor
push
mov
out
add
push
pushf
sbb
int
das
adc
cld
stos
jecxz
dec
addb
in
and
rcll
add
or
inc
or
je
aad
pop
cmp
stos
fimull
xchg
push
and
sub
or
mov
sbb
push
push
push
xor
repz
test
mov
test
sub
pop
pop
hlt
loope
xchg
arpl
fcompl
rorl
mov
nop
cmp
rcll
addr16
push
rclb
es
out
sbb
mov
adc
push
xor
dec
dec
dec
and
fs
or
jge
out
fnop
loop
jl
jmp
mov
mov
stc
mov
mov
jae
aam
xchg
dec
dec
aam
aaa
mov
lods
dec
add
add
outsl
aaa
enter
jo
xor
in
int3
xchg
lds
inc
sbb
orl
xchg
and
or
arpl
test
loope
xchg
push
out
jb
dec
mov
arpl
out
cmc
fwait
sbb
insb
sub
xor
sub
loopne
sub
and
fnstsw
cmp
dec
xchg
mov
clc
mov
pop
push
or
push
stos
clc
xor
xorl
or
hlt
dec
pop
enter
repnz
add
inc
dec
mov
jne
add
xor
xchg
cmpsl
into
mov
bound
std
pop
push
add
cld
xchg
clc
and
xor
xorb
and
cmp
sahf
mov
imul
xor
insb
adc
push
sahf
jo
es
adc
cli
jle
ljmp
call
std
nop
mov
or
dec
ret
pop
pop
arpl
pop
fisubs
daa
pop
mov
sub
jne
fstpt
aaa
imul
mov
jo
or
jns
and
mov
stos
xchg
cmpsb
cmp
mov
jge
loop
les
sbb
movsl
lret
fcomps
js
mov
jnp
inc
in
cld
push
lahf
mov
sub
outsb
aas
jb
adc
add
in
cmc
pop
fldl
hlt
mov
push
adc
les
mov
sbb
addr16
popa
pop
imul
data16
test
addb
shll
adcb
sub
jmp
or
es
inc
nop
add
addl
mov
sub
inc
mov
inc
cmc
enter
test
xlat
push
sbb
clc
sbb
mov
jmp
cmp
rorb
inc
je
xchg
or
or
insl
ror
dec
pop
test
and
adc
lret
pushf
pop
rol
dec
and
adc
sahf
pop
test
mov
push
inc
add
dec
in
sub
and
or
mov
fists
sbb
mov
jns
jne
arpl
jno
and
testl
sarl
jns
cmpsb
loopne
push
mov
xor
inc
or
dec
dec
xchg
or
fiadds
scas
mov
cmp
add
sbb
inc
cmc
jno
dec
xchg
lret
shlb
icebp
shll
mov
int3
nop
sbb
ror
adc
scas
out
lods
xor
sbb
mov
sbb
icebp
lcall
mov
xchg
movsb
cmc
das
mov
in
sbb
or
test
cmp
jmp
scas
push
fbld
pop
mov
jecxz
jmp
inc
push
add
shr
inc
fwait
pop
cmpsl
adc
mov
push
sub
xor
adc
and
inc
cmp
or
xor
adc
popf
pop
pop
push
loope
popa
and
inc
ja
mov
fcmovne
movsb
push
lods
int
cltd
int3
mov
mov
sarb
mov
mov
movsl
add
xor
xor
push
xchg
dec
push
xchg
repnz
or
xchg
inc
pop
cmp
add
test
pop
ret
in
outsl
xchg
fistl
fcoms
iret
adc
jecxz
loop
cli
out
jnp
mov
jns
std
stc
call
lret
adc
xchg
ss
orl
pusha
inc
jno
in
mov
leave
sti
repnz
mov
inc
lods
push
aaa
jecxz
sti
jmp
ja
sub
aas
in
mov
hlt
lods
jecxz
in
xchg
stc
pop
ret
popa
mov
cld
out
cli
leave
xor
push
fstpl
mov
and
mov
aaa
sti
ficoml
pop
pop
sti
in
lods
in
sub
dec
je
push
lods
mov
or
inc
adc
fnstsw
enter
imul
mov
in
mov
es
addr16
sub
push
add
cmp
pusha
mov
mov
rcll
xchg
inc
scas
out
aaa
mov
jnp
fidivrs
dec
inc
outsb
sbb
xchg
xchg
xor
aam
xchg
jg
icebp
jle
push
mov
cld
lret
clc
add
adc
in
stos
lods
pop
lock
mov
xrelease
push
mov
cltd
sti
ss
call
das
in
mov
stos
rclb
jmp
movsl
cmp
pop
fs
lods
sub
mov
aas
jp
ret
xor
dec
fsubrp
iret
xchg
sbb
imul
imul
imul
sbb
cmpsl
xor
je
mulb
loopne
ss
sub
imull
adc
ja
push
cmp
lret
inc
les
imul
mov
jg
arpl
aam
ds
rcl
daa
sahf
adc
cmc
mov
and
xchg
sub
punpcklbw
cmc
out
push
push
mov
dec
call
jns
popf
and
mov
mov
popl
nop
ss
jae
xor
popa
dec
fldcw
push
stos
lea
jne
pop
inc
pop
insb
adc
ret
cmp
into
inc
inc
bound
mov
fidivrl
cmp
add
cld
and
fidivs
mov
push
jl
aaa
js
sub
lcall
fcomp
pop
call
lret
or
cmp
mov
clc
movsl
out
push
push
jecxz
mov
ret
negl
mov
cli
fcoml
xor
pop
cmp
mov
and
ja
fs
pop
ror
repz
je
jg
mov
insl
pop
cmp
clc
iret
or
mov
loope
scas
or
pop
enter
je
inc
add
dec
in
jb
xchg
rcrb
fadds
out
dec
in
sbb
in
push
inc
push
xor
out
ljmp
mov
xor
aad
jmp
roll
pop
je
insl
mov
push
repz
inc
xchg
jp
dec
jnp
popf
mov
stos
fldl
addr16
or
iret
lods
lahf
pop
repnz
jmp
dec
jae
xor
mov
mov
jg
jae
roll
mov
pop
xchg
pop
imul
shll
fsubl
inc
lcall
inc
push
ss
cmc
push
jp
add
push
or
into
and
fs
pop
fistl
mov
mov
nop
js
xor
roll
sbb
test
ret
dec
jnp
add
xor
mov
stos
fcomps
inc
sbb
mov
mov
insb
jno
and
dec
sbb
bswap
jb
jl
out
xchg
mov
sub
ret
ret
jecxz
add
xor
adc
lcall
mov
imul
mov
dec
out
repz
mov
inc
dec
ficompl
jecxz
repz
cli
in
xchg
sub
test
pusha
insb
xchg
or
xor
pop
mov
sub
stos
ds
xor
test
xor
out
mov
or
jb
insb
cmp
mov
xchg
jns
or
mov
sbb
jno
adc
mov
call
adc
cltd
imul
xor
cmp
inc
push
fs
inc
mov
shl
adc
add
ud1
stc
out
ds
loope
scas
icebp
imul
mov
sbb
add
fsts
lods
imul
in
mov
mov
fst
cmp
loopne
and
push
push
fmuls
in
jb
sub
in
lods
in
pause
jnp
or
hlt
push
aas
cmc
out
rorb
repz
cmp
jmp
xchg
jnp
push
cmp
mov
and
adc
inc
orl
or
pop
repnz
iret
dec
ja
and
flds
xor
jge
lods
mov
test
into
hlt
out
in
and
ljmp
int
call
loope
sub
call
adc
push
shll
lock
jg
arpl
cmp
pop
jmp
mov
jg
fwait
sbb
inc
xor
fwait
or
cld
dec
cli
jne
xor
test
push
push
push
lahf
mov
les
outsb
jg
jbe
je
into
pop
aad
mov
cmp
out
scas
fimull
or
divb
mov
rolb
cs
pop
or
js
cmp
dec
test
scas
nop
mov
fnsave
les
inc
insl
flds
int
inc
jns
cmc
adc
inc
and
fistps
in
jno
pusha
inc
andb
cmp
push
loopne
dec
pop
mov
shll
or
movsl
xlat
push
or
add
xor
out
jecxz
and
es
sti
inc
js
xchg
inc
fs
sub
test
xchg
xchg
cmc
cmp
rcrb
jae
push
and
outsb
in
and
stos
insb
test
mov
dec
or
sbb
jae
pop
or
sahf
xchg
add
push
push
jae
dec
mov
sub
mov
ret
cmpsl
mov
pop
ss
rep
out
addr16
inc
add
sarl
and
ficoms
in
xchg
out
pop
xchg
mov
xor
and
cmp
movsb
mov
or
std
cwtl
add
sub
lea
test
frstor
mov
xchg
sub
ja
insl
out
cli
dec
int
test
or
cmp
inc
jl
add
daa
shlb
jl
outsl
stc
add
jb
mov
jb
jmp
cmpsl
jg
std
orl
shrb
sbb
mov
dec
xchg
fistpl
jnp
mov
adc
and
sarb
dec
loop
clc
shlb
mov
mov
js
pop
push
out
jbe
loope
ja
daa
cs
in
fstl
out
xchg
stc
xchg
dec
inc
imul
push
add
xchg
cmpsl
fsubp
jo
dec
push
cmp
push
cltd
jg
in
cmp
xchg
imul
fs
popf
shrl
aaa
hlt
jnp
xchg
and
loope
lret
xchg
addr16
iret
cmpsl
stos
rolb
arpl
push
cwtl
sbbb
fdivrl
test
fistl
test
orb
sbb
mov
push
xor
cs
jne
mov
push
inc
sub
dec
mov
rorb
mov
cltd
insl
adc
jle
cmp
and
outsl
pop
mov
mov
adc
pusha
fwait
mov
fnstenv
push
jae
jg
jecxz
dec
rorl
xchg
mov
inc
popf
push
mov
cmp
in
xchg
pop
and
les
stos
xchg
add
and
sbb
popw
popf
adc
adc
xchg
mov
mov
xlat
out
or
pop
frstor
repz
jmp
push
int3
and
pusha
lods
mov
stc
mov
sub
pop
fs
repnz
cld
fnstsw
mov
and
into
repz
popa
lds
jg
aam
adc
lsl
sbbb
inc
scas
cli
jl
sbb
xchg
loopne
inc
out
ds
in
mov
mov
xor
mov
jo
nop
aas
cmp
sarb
jno
dec
dec
xorl
xchg
dec
inc
inc
fisttps
push
add
fwait
dec
mov
ds
sbb
popf
jae
data16
ret
in
dec
push
cmpsb
sahf
ret
mov
inc
xor
xchg
sub
xchg
lods
js
pop
test
notb
loopne
cli
outsl
iret
xor
push
pop
xchg
jbe
mov
jo
arpl
mov
xor
adc
aad
adc
outsl
movsl
cmp
add
repz
ja
aad
and
push
sbb
clc
sub
sub
and
dec
dec
adc
and
mov
pop
lcall
loope
das
jbe
lcall
es
cmp
sbb
rcrb
mov
xlat
xchg
fs
mov
addr16
mov
push
push
mov
jmpw
push
orl
or
popf
inc
dec
xchg
sbb
out
xor
inc
xor
arpl
mov
into
or
mov
push
xchg
mov
repz
cmp
mov
sar
ds
dec
push
daa
pop
test
xchg
xlat
xchg
dec
inc
push
je
cmp
mov
loop
ror
loopne,pn
xlat
lret
lahf
into
stos
pop
mov
mov
inc
lock
mov
sub
adc
cmpsl
xchg
sbb
iret
mov
or
nop
sbb
adc
cwtl
ss
mov
mov
aam
dec
ljmp
dec
ss
mov
inc
jle
dec
fdivp
and
mov
and
fsts
int3
rclb
mov
cmpsl
jno
push
fsub
add
cltd
icebp
xchg
pop
mov
ret
rcr
push
xchg
andl
test
lcall
mov
xchg
pop
pop
cmp
adc
aad
xor
in
mull
push
cmp
jle
sub
int3
incl
pop
add
scas
adc
dec
and
push
inc
ret
sub
or
leave
fistpl
sbb
aam
gs
cmc
inc
jmp
mov
dec
inc
cmp
cmc
sub
jmp
movl
movb
popa
pusha
mov
sahf
mov
or
es
push
add
sbb
mov
pop
add
and
in
pop
or
cmp
bound
enter
loope
lea
inc
adc
popa
aad
outsb
test
dec
clc
adc
cmp
cmp
jbe
jg
pop
lods
scas
add
ss
insb
add
mov
pushf
sbb
iret
pop
sub
test
cli
inc
insb
out
lea
push
into
cmc
xchg
shrl
xor
mov
bound
mull
dec
mov
jae
addl
mov
pop
mov
jge
pop
lahf
mov
push
inc
xlat
cmpsb
or
pop
shrl
aaa
push
push
xor
cmc
das
pop
sbb
xchg
and
push
dec
xchg
dec
pushf
scas
push
push
xchg
push
inc
dec
ss
fistl
jns
inc
repnz
shrb
stos
sbb
cli
sbb
push
loop
and
fcompl
and
pop
xchg
sub
mov
lret
idivb
push
sbb
fadds
iret
fnstsw
jns
or
xor
aaa
pop
in
mov
xchg
loope
jno
sub
xor
orb
push
loope
fstps
loopne
add
bound
mov
jb,pn
inc
inc
mov
push
aad
ret
imul
lds
pop
nop
sbb
push
test
jbe
loopne
xchg
cmp
sub
push
push
mov
mov
in
pop
shlb
lahf
scas
lret
call
int
xor
test
mov
mov
sub
stos
push
xor
adc
mov
lods
add
pop
mov
cmp
jge
daa
sub
mov
push
xor
mov
pop
lahf
jmp
out
xchg
push
ror
inc
xchg
stc
mov
and
out
sbb
dec
outsb
rcr
icebp
add
sbb
pop
in
lret
or
push
inc
sub
ror
lds
sbb
jmp
inc
mov
mov
les
sarl
ljmp
xor
cmp
fs
lret
bound
jecxz
pop
pop
xor
mov
pop
fcmovbe
jle
add
dec
push
mov
xor
mov
lds
and
ds
jge
adc
std
mov
add
jl
call
cli
jg
xchg
push
mov
int
xorl
mov
in
xchg
xor
push
push
ret
arpl
inc
push
dec
xchg
lods
dec
and
mov
leave
add
cwtl
xor
aam
xchg
movb
jle
pop
adc
xchg
mov
add
ja
xchg
js
cmp
adc
ret
pop
pop
add
jae
xor
mov
es
and
or
adc
rcrb
fidivl
fmuls
ljmp
or
pop
pop
ficompl
pushf
insb
xor
xchg
adc
shlb
daa
adc
add
jmp
cmc
outsb
test
aad
xlat
int3
cmp
sbb
jae
xor
and
lret
inc
hlt
sbb
test
cmpsb
out
std
in
inc
pop
xchg
lcall
xchg
addr16
mov
cmp
fdivl
or
lret
pop
mov
mov
lret
or
imul
adcl
int3
push
jmp
inc
adc
pop
add
push
jb
cmp
mov
nop
inc
sti
cmp
addr16
flds
xor
add
push
mov
cmp
ds
cmpsl
jnp
dec
cmpsl
inc
lahf
cmpsb
xor
and
mov
pop
mov
push
fsub
fistps
lcall
jp
push
popf
add
adc
mov
lea
pop
jmp
test
in
inc
insl
xor
and
xor
cmp
xor
lret
push
repnz
mov
pushf
loop
sbb
jns
nop
mov
jl
sar
add
mov
jno
pop
popf
sbb
dec
push
les
sarl
enter
int3
jmp
push
mov
mov
sbb
iret
xor
add
xor
and
dec
jp
dec
sub
aas
mov
test
pop
bnd
adc
add
cmp
into
lcall
scas
mov
test
push
cmp
mov
xchg
repz
pusha
push
sbb
and
leave
dec
sub
dec
stos
fs
cld
xchg
xor
and
aam
gs
push
clc
and
lock
les
pop
iret
cli
adc
mov
xor
mov
dec
pop
imul
cmp
push
in
dec
outsl
lds
push
dec
movl
mov
out
cld
mov
lret
mov
xor
xlat
std
pop
lds
fwait
push
shlb
sbb
lcall
and
stos
mov
scas
adc
xor
xchg
xchg
jecxz
add
mov
cmpsl
push
and
fwait
pop
sbb
int
cs
sbb
mov
adc
and
or
addr16
sarb
test
xchg
rclb
push
data16
or
or
fisubs
addr16
pop
inc
cmp
clc
xor
push
popa
call
dec
push
pop
test
movlps
cmp
imul
inc
cltd
cmp
es
sarl
shl
aad
push
sbb
pop
jnp
push
into
sahf
and
bound
mov
pop
movsl
push
mov
aaa
jl
xchg
mov
xor
cmc
adc
jg
push
int3
out
test
mov
sub
sub
int
mov
dec
int3
pop
and
outsb
sbb
fstpt
mov
inc
or
mov
mov
inc
not
inc
and
cli
inc
jne
xchg
or
push
dec
sbb
stc
push
leave
rcrb
iret
xchg
adc
mov
lds
in
je
xor
jge
rorl
cwtl
iret
lods
xchg
mov
loopne
jae
sub
push
xchg
xor
shr
inc
sti
or
xor
dec
mov
bound
ljmp
test
nop
clc
test
xchg
xchg
call
pop
xor
faddl
inc
or
mov
aaa
shl
hlt
xor
jb
arpl
jns
call
cmp
inc
pop
ret
sub
jae
lret
aam
inc
lret
add
lret
xor
cmp
ljmp
jg
and
pop
in
mov
mov
push
fnstcw
call
and
sbb
lock
shrl
sbb
test
imul
repnz
dec
cmc
aam
adc
stc
or
iret
sub
sbb
aaa
call
pusha
aas
add
les
xchg
dec
int
mov
rorl
push
inc
xchg
add
jnp
insl
shll
fwait
out
sub
outsl
add
mov
adc
movsl
sub
mov
fimuls
cmp
sbb
push
arpl
push
mov
hlt
or
movsl
add
movsb
lock
mov
bnd
push
pop
inc
lcall
pop
fdivs
sub
xchg
ret
pop
push
dec
jo
sahf
je
lret
sti
cmp
xlat
shlb
fstl
fdivl
push
pop
sahf
cmc
adc
subl
xchg
cmp
movsb
out
clc
or
and
cmpsb
lret
pop
xchg
or
mov
shlb
jne
bound
cmp
daa
mov
in
rcr
lahf
icebp
je
lahf
test
sbb
pop
ljmp
mov
popa
adc
pop
mov
dec
jne
clc
hlt
or
push
ret
enter
mov
lea
mov
popa
jge
add
jecxz
fisttpl
add
adc
outsb
imul
into
mov
ret
xlat
aam
or
and
jbe
scas
movb
je
mov
imulb
movsb
adc
mov
adc
mov
mov
adc
push
out
pop
je
loopne
xlat
cmp
pop
dec
in
imul
cmp
cltd
xchg
sub
jl
fbstp
lods
pop
lods
adc
pop
pop
sahf
dec
pop
aad
mov
xchg
inc
mov
xchg
les
addr16
icebp
leave
inc
and
xor
insl
push
add
xchg
mov
jns
sub
in
cmp
mov
or
sub
mov
rcr
xor
mov
jno
add
test
jle
out
pop
loope
or
dec
lock
push
add
sti
daa
jo
hlt
mov
push
call
icebp
stc
mov
and
and
sbb
insb
in
sti
fbld
jmp
mov
pop
mov
jne
int
and
mov
popf
nop
adc
cmp
jge
sub
ret
mov
aaa
and
mov
rclb
lcall
inc
popf
mov
add
iret
mov
ljmp
add
add
call
test
fmuls
inc
fsub
push
push
pop
xchg
xor
sbb
ljmp
xchg
xchg
jno
test
das
popa
popa
jge
mov
jp
out
sbb
testb
adc
pop
dec
xor
and
xchg
fwait
add
mov
pop
cld
scas
cmp
cli
aam
outsl
ds
push
scas
enter
scas
divl
pop
repnz
fcmovnbe
mov
inc
adc
es
outsl
push
push
xor
in
mov
cmp
in
stos
int
cld
outsb
popa
lret
cmp
int
inc
push
dec
out
push
jbe
mov
imul
xor
mov
sub
sbb
and
pop
dec
mov
std
iret
lds
ffree
add
ds
jnp
or
lea
fmull
cmp
xchg
adc
loop
lcall
lods
int
pop
jle
repnz
daa
ficompl
push
xchg
cld
js
add
add
scas
mov
xchg
pushf
inc
and
mov
xlat
pop
jns
jg
bsf
jb
mov
outsl
int
or
and
out
ret
mov
iret
mov
scas
sbb
push
lds
and
and
in
nop
iret
xlat
add
sar
xor
xor
fscale
cs
sbb
dec
icebp
sbb
xchg
xchg
xchg
out
dec
je
hlt
sbb
xor
int
cmpsl
dec
push
outsb
push
aad
lcall
dec
dec
aas
jb
popa
jne
outsl
xchg
mov
pop
sbb
or
push
pcmpgtb
dec
mov
push
pushf
add
cmp
and
push
out
jns
push
pushf
lret
mov
pusha
jmp
xor
fnclex
mov
or
mov
je
jecxz
scas
rolb
jp
popa
imul
popa
pop
out
lods
add
repz
mov
xchg
ss
inc
pop
sbb
andb
adc
inc
cli
inc
out
inc
cmpsb
xchg
pop
stos
bound
cmp
or
nop
jnp
and
out
fsubs
xchg
push
mov
lret
cwtl
xchg
jno
cmp
or
push
sbb
orb
adc
loop
jbe
scas
pop
pop
adc
sarl
push
out
jnp
cmc
push
shlb
lods
jecxz
or
push
fisttps
jge
adc
xorb
fsub
int
xchg
add
rcr
sti
lds
ds
push
mov
fsubr
stos
pop
out
cli
scas
std
test
call
std
xor
jne
push
pop
ret
lret
or
jb
mov
mov
xor
mov
mov
or
jo
fisubs
and
jecxz
mov
mov
scas
sub
adc
enter
lret
dec
adc
adc
out
sahf
pop
lods
xor
push
xlat
pusha
fisubrs
repz
push
popf
notb
or
adc
sbb
jp
or
lods
cmpl
lods
mov
push
mov
out
mov
icebp
push
sahf
jl
in
add
jl
loope
fisubs
and
imul
jo
mov
push
and
ds
push
xlat
pop
repz
cmp
ss
mov
dec
jp
popf
test
dec
mov
xlat
pop
les
ss
and
or
adc
push
js
inc
inc
mov
xor
gs
push
mov
push
scas
sbb
pop
cmp
mov
cmp
adc
mov
xor
push
sbb
cmp
mov
mov
mov
pop
cld
or
dec
popa
insl
push
pop
add
jg
pop
add
fistpll
pop
ret
xor
rolb
sarb
fimuls
aas
adc
sbb
dec
xchg
int3
cmpb
int3
dec
mov
sti
dec
idivl
movsb
push
jne
jne
pop
cltd
aam
fimull
loop
mov
mov
push
aas
cs
jns
loope
push
push
pop
je
xor
insl
and
cmp
mov
push
mov
stos
jge
lret
jecxz
lret
push
out
repnz
dec
mov
std
add
shrb
dec
push
push
mov
je
and
sub
and
ja
shl
out
hlt
bound
adc
xchg
int
enter
inc
mov
out
jl
lods
lods
ljmp
xor
dec
popf
or
adc
les
pop
adc
push
cmp
xor
xchg
sti
bound
test
jbe
fisttpll
cmp
pop
inc
loopne
sbb
adc
mov
fnsave
mov
dec
or
push
les
cli
sub
push
fistl
and
ficomps
dec
add
inc
sar
imulb
out
je
mov
insb
mov
call
inc
sub
outsl
push
int
lcall
sti
push
xor
sub
ljmp
les
pop
fs
push
popf
mov
daa
sbb
and
or
int3
jno,pt
out
or
js
mov
lock
imul
lret
aad
sti
testl
lea
or
shlb
jae
xlat
in
out
dec
test
jo
dec
add
decb
push
loopne
nop
clc
sti
xchg
mov
cmpb
jae
scas
popf
ljmp
mov
stos
pop
outsb
mov
jle
push
lods
push
dec
jnp
enter
lcall
sbb
adc
adc
push
xchg
adc
sub
push
out
movsb
roll
jno
in
sahf
pop
data16
push
es
rorb
mov
rep
mov
cli
push
or
in
push
in
cmpsb
mov
mov
bound
inc
cs
sub
aam
push
inc
subb
popa
push
sbb
js
pop
xor
inc
ds
outsb
xor
out
out
fbstp
fistps
loopne
sub
sarl
add
call
inc
fldpi
mov
cli
daa
loopne
cmp
into
inc
mov
pop
adc
sti
mov
cli
loop
imul
jne
pop
or
xor
outsb
out
cs
dec
xor
and
out
xlat
lret
and
push
cmp
dec
inc
loop
inc
fmuls
cld
in
fst
pop
jns
dec
in
or
and
sbb
and
jb
mov
fs
sub
and
or
xchg
std
pop
pop
dec
push
int3
mov
ja
shl
xorb
out
aad
adc
jnp
mov
adc
pop
sbb
pop
clc
mov
dec
adc
scas
fnstenv
aaa
cmp
xor
mov
scas
aaa
cli
xchg
mov
cmp
or
inc
jmp
and
aam
loope
js
sub
mov
mov
sbb
sti
lar
push
test
test
enter
sub
or
mov
jl
ficoms
popa
inc
shr
lret
in
arpl
mov
fsubrl
xor
jmp
faddp
cmp
sub
jecxz
dec
pop
mov
std
lret
cmpsl
sub
adc
mov
test
pop
rcrb
inc
mov
cmp
adc
mov
pop
mov
sbb
sub
xor
movsl
cmpsl
jnp
push
cmp
test
or
js
jo
shlb
or
ss
cmpsb
xchg
inc
xor
mov
arpl
in
scas
adc
das
inc
daa
jge
cwtl
mov
ljmp
push
mulb
addb
loope
and
jo
add
sti
movsl
add
jp
jne
jne
xchg
mov
testl
cmp
and
or
xchg
and
mov
sub
repz
pop
test
popa
and
dec
mov
lds
int
cs
jmp
movsl
jne
fs
jg
sub
sub
or
ret
unpcklps
call
cmp
cmp
aam
notl
test
ljmp
xor
mov
aaa
stos
jmp
ret
out
aaa
fdivl
push
mov
cs
xchg
das
leave
push
cwtl
movsl
push
stc
jb
cmp
pop
jno
lock
call
dec
sbb
dec
and
insl
mov
xor
adc
sbb
mov
lahf
shll
jns
inc
jae
loope
sub
mov
and
outsb
lods
cmpsl
cmpsl
xchg
pop
xor
push
gs
cmp
in
inc
pop
outsb
jbe
in
test
add
mov
scas
in
sub
dec
push
xor
dec
aas
dec
push
mov
shl
arpl
push
jecxz
xchg
lahf
aaa
or
xchg
stos
stos
cmc
xlat
adc
js
pop
cli
std
sub
cmp
out
mov
pop
shrl
and
add
iret
fwait
sub
inc
mov
adc
popf
and
arpl
pushf
mov
xchg
add
cmp
mov
xor
sti
roll
cmp
jne
jne
aas
sub
pop
or
push
mov
adc
adc
and
lods
mov
out
add
in
xor
xor
ja
sbbl
mov
leave
dec
sub
jle
jnp
push
aaa
pop
je
hlt
jmp
out
xchg
mov
movsl
inc
movl
insb
adc
mov
fcompl
pushf
loopne
mov
pop
xor
je
subl
adc
imulb
cmp
out
or
mov
inc
push
dec
mov
mov
ret
inc
pop
sbb
cmpsb
push
icebp
xor
and
insb
sahf
sbbb
jae
mov
mov
cmp
mov
test
pop
fwait
jno
mov
jno
pusha
sbb
outsb
push
out
adc
mov
fdivrs
mov
cmp
aad
inc
mov
xchg
in
ds
mov
sub
ret
sub
cli
push
push
sub
in
fisttpll
mov
push
imul
xchg
add
cmpsl
stos
mov
push
ror
jp
je
popa
adc
aas
data16
adc
shl
dec
cmp
sarb
push
outsb
sub
into
inc
xchg
lahf
loope
in
stos
sub
adc
fsubl
jbe
es
call
cltd
mov
into
cmc
xchg
outsb
arpl
sub
dec
icebp
xchg
lahf
call
stos
aad
gs
leave
scas
jns
fldl
jmp
cld
idivl
mov
add
les
out
imul
scas
unpcklps
lahf
cmp
aad
rcrb
pop
lahf
mov
cmp
lea
adc
jne
push
loopne
jecxz
inc
fldl
insl
and
mov
sub
les
jae
sub
fisubrl
adc
sub
push
cmp
mov
inc
ljmp
inc
jle
xor
in
fisubl
xchg
cltd
mov
pusha
rcrl
pop
mov
mov
jnp
and
or
sbb
push
mov
mov
jge
pop
adc
jne
jns
mov
sahf
push
enter
jge
adc
pop
pop
andl
mov
popf
out
mov
xchg
and
sub
sub
cmp
adc
mov
mov
sbb
pushf
sti
arpl
push
addb
push
popa
jge
mov
dec
mov
cwtl
adc
push
js
add
fdivrs
sti
and
dec
fxam
stc
jmp
movl
cmpsb
xchg
xor
lods
jae
push
inc
add
pop
and
leave
push
adc
sub
add
cmp
es
lahf
cwtl
pop
popa
bound
push
push
call
push
out
cltd
jge
push
insl
inc
xchg
and
jnp
sub
fistpll
imul
ljmp
push
add
mov
js
sub
dec
lods
sub
inc
pusha
cmp
dec
scas
push
add
ret
ja
cmp
push
out
les
sub
dec
aas
sarl
push
jmp
push
lret
dec
pop
outsb
in
scas
pop
scas
fwait
in
push
inc
lods
cwtl
int3
lock
jmp
fwait
jg,pn
lds
jmp
outsb
mov
in
jae
jb
xchg
pushf
pop
addr16
push
cmp
mov
lods
ret
push
mov
mov
push
xchg
in
adc
and
jae
inc
stos
out
push
or
adc
mov
test
fcmovbe
push
loop
mov
jnp
adc
xchg
push
hlt
pop
lods
sub
dec
mov
mov
and
fs
cmp
fisubrl
pop
pop
push
cmp
lahf
jg
xchg
ljmp
cmc
fcompl
or
pop
jmp
push
sub
pop
pop
sub
inc
loopne
sub
mov
mov
rorb
cs
or
cli
inc
cmc
ds
inc
fs
movsl
mov
sub
loope
dec
lods
mov
push
movsb
pop
and
adc
mov
test
pop
xchg
push
shll
inc
icebp
add
jo
ljmp
mov
mov
aad
mov
sbb
jecxz
push
xor
push
cwtl
js
push
imul
pop
mov
jp
jns
nop
mov
sbb
cmp
jae
repz
cmp
insl
inc
stc
sub
inc
push
sar
push
pop
xor
icebp
popf
fdivs
mov
xor
cmp
cs
mov
mov
xor
push
jae
sub
and
leave
adc
add
in
ret
clc
out
pushf
scas
pop
add
iret
mov
sbb
xchg
cmp
lods
xlat
or
inc
and
sahf
inc
imul
xor
dec
lods
xor
pop
adc
cmp
outsl
loopne
lock
adc
lds
test
cmpsb
adc
sub
xchg
cmpsb
outsb
cli
mov
test
cmpl
pushf
mov
leave
rolb
and
fdivs
mov
lods
cmp
sub
pop
clc
loopne
aad
push
xchg
sub
sbb
stos
cld
sbb
pop
ret
data16
mov
icebp
sbb
push
test
testb
and
ja
dec
and
mov
imull
arpl
xchg
inc
cld
and
mov
addr16
popf
test
lea
sahf
mov
mov
mov
iret
mov
mov
int
enter
mov
push
and
pop
push
insb
inc
dec
mov
or
or
xor
adc
pop
sbb
adc
jg,pn
loopne
outsb
mov
mov
pop
cmp
sti
outsl
clc
pop
inc
jno
pop
inc
push
pop
clc
sub
mov
mov
dec
adc
pop
sub
and
ret
lea
cltd
mov
roll
mulb
fsubrl
lret
inc
flds
or
sbb
in
push
lods
aaa
or
pop
imul
lods
cld
mov
stc
rcrl
pusha
aaa
dec
bound
dec
hlt
testb
jp
inc
jno
sub
xchg
and
subb
lret
push
in
jbe
aam
out
and
cmovle
dec
jmp
xor
xor
or
push
pop
pop
int3
adc
pop
cld
lock
test
testb
test
aaa
jnp
xor
dec
mov
sub
pop
hlt
xor
int3
imul
bound
sbb
jns
mov
popa
push
jp
push
das
mov
mov
dec
cmp
inc
xor
mov
cmpl
sahf
mov
xor
in
inc
gs
pop
xor
loopne
mov
sub
lea
pusha
repz
insb
mov
adc
sbb
insl
cmp
mov
mov
cmp
cmpsb
pop
stos
dec
jg
jno
shll
ret
push
repnz
lret
fadds
jnp
iret
into
jns
subb
dec
daa
mov
out
movsb
repz
add
cmp
test
mov
shlb
lret
mov
jg
dec
popf
xchg
mov
fmul
push
jge
add
mov
xlat
mov
pop
fs
in
ficomps
xor
stc
pop
cmpsb
mov
cmp
shrb
mov
lret
push
lock
jmp
mov
popf
test
int3
jae
nop
mov
mov
mov
mov
int
in
and
push
pop
dec
mov
mov
sub
imul
das
loopne
mov
jns
push
mov
call
xchg
pop
fsubl
sub
push
stos
stc
pop
test
mov
cmp
dec
add
mov
mov
aam
and
sbb
fidivs
jle
test
sbb
xchg
pushf
out
cs
inc
inc
pusha
jae
jl
xchg
inc
push
mov
popf
push
call
push
clc
orl
js
pop
out
popf
jno
loope
lea
push
cmpsb
mov
xchg
cltd
ds
xor
arpl
mov
subl
inc
jg
xor
aam
sub
push
rcr
mov
jge
push
ljmp
repz
sbb
push
xchg
dec
inc
repz
pop
insl
bound
pop
pop
pop
int3
movsl
ss
push
ja
jne
lret
jecxz
pop
mulb
sbb
fwait
aas
shrl
mov
sub
pop
in
test
push
jmp
stc
cmpsb
repnz
lock
xchg
outsl
xchg
arpl
pop
or
mov
jo
outsb
pop
sti
outsl
int
lods
xor
sarl
cld
push
sbb
sti
cmp
pop
mov
pop
scas
adc
test
lret
jne
xchg
sbb
push
add
das
lea
andb
push
or
int3
rcrl
push
jnp
xor
ljmp
leave
out
lret
mov
int3
and
push
sub
jmp
and
sub
jbe
pop
pop
movsb
in
mov
ret
sahf
sub
push
ret
cmpsl
je
xlat
insb
inc
std
mov
int3
call
pop
push
jp
dec
sub
xchg
enter
or
mov
je
xor
int
aaa
adcl
cmpsb
es
inc
lahf
addr16
sub
cmc
add
mov
pushf
fsubs
ja
add
sub
inc
sbb
rolb
cmp
cmpsl
stos
repz
addr16
xchg
scas
pop
xchg
jb
cmp
push
scas
divl
dec
cmpb
iret
arpl
call
test
sbb
or
xchg
push
pushf
cmp
shl
iret
aaa
xor
rcll
mov
cltd
mov
in
cwtl
call
sub
sti
lcall
mov
imull
adc
pop
and
mov
js
and
enter
pop
adc
test
mov
adc
cli
icebp
inc
mov
jle
fmull
sbb
push
or
pop
mov
je
test
or
mov
pop
out
aas
adc
popf
sub
jge
or
mov
ror
push
addr16
mov
mov
add
rorl
aad
scas
imul
cmp
addb
stos
sub
xchg
jmp
out
and
mov
scas
jns
jg
pop
test
ss
test
sbb
pop
mov
es
mov
pop
popa
ret
ja
sub
inc
xchg
add
mov
push
faddl
jbe
lock
adcl
iret
insl
jg
adc
int3
aam
fucomip
sub
fsubr
xchg
mov
jg
inc
daa
pusha
out
sbbb
lret
les
loop
jns
xlat
lcall
inc
and
cmp
dec
pop
scas
xchg
movsl
inc
adc
cmpsl
outsl
nop
test
ret
aam
adc
pop
inc
out
fldcw
ret
fwait
ss
sub
pop
out
add
jb
aas
pop
sarl
adc
xchg
shll
fdivrl
inc
gs
adc
fs
adc
shl
cmp
push
mov
mov
pusha
mov
sbb
cmp
adc
fcoml
es
and
xchg
lods
xor
inc
aaa
mov
repz
jle
and
jl
scas
jnp
push
mov
dec
mov
test
cmc
add
and
lahf
mov
ret
clc
mov
push
push
int
xchg
enter
push
sub
push
jl
das
mov
aaa
mov
mov
in
jb
cwtl
popa
shrl
stc
test
sub
lcall
mov
bound
test
ret
and
repnz
scas
pop
sub
adc
push
dec
push
rolb
xchg
jle
and
or
push
popa
jns
sub
sbbb
orl
test
aad
insl
mov
inc
inc
adc
sub
push
and
inc
clts
sbb
dec
add
outsl
sub
shrb
adc
cli
stc
lea
in
sub
clc
jge
dec
sub
clc
mov
rcrl
sub
fisubl
push
neg
xchg
std
gs
call
sahf
insl
mov
push
js
and
push
add
cmc
xorl
xor
xchg
mov
lea
sti
sarb
repnz
ror
push
pop
loope
iret
mov
xor
das
fs
fdivrs
aas
mov
push
mov
pusha
sub
or
andl
es
pop
subb
pop
or
lea
addl
mov
jl
adc
imul
rolb
inc
jecxz
sbb
or
push
mov
imul
dec
shrl
dec
jae
fldl
dec
insl
cmp
data16
loopne
mov
jmp
in
or
push
pop
push
xchg
inc
or
sbb
imul
dec
push
into
mov
cmpsb
ficompl
fmull
sbbl
dec
ds
push
sub
xlat
jbe
lds
and
and
outsb
mov
jecxz
inc
fnstcw
jge
jnp
cmp
jle
test
and
pop
enter
cmc
cmp
loop
sub
pop
sub
mov
mov
sbb
jb
push
sarl
jno
inc
dec
les
in
mov
aas
jp
js
pop
sbb
les
pop
jne
inc
fs
es
iret
inc
ss
mov
dec
jne
jbe
aaa
mov
shlb
loopne
lods
mov
mov
inc
cmp
pop
cmp
inc
inc
test
cwtl
mov
mov
push
push
inc
xchg
adc
fists
mov
sbb
fmuls
push
mov
mov
cmpsb
xchg
aaa
xchg
mov
add
cmp
fimuls
xchg
cmp
leave
and
sbb
or
ret
into
pop
rcl
sbb
xor
and
leave
and
dec
mov
loopne
mov
inc
xorl
das
jecxz
mov
call
fs
lds
xchg
mov
jbe
mov
mov
pop
xchg
out
sub
out
fimull
lods
fisubs
add
jo
add
addl
mov
test
loopne
adc
or
and
mov
cmp
dec
adc
pop
cmp
bound
sub
jmp
mov
push
adc
cmc
push
jp
test
aam
loopne
rclb
shr
ret
rolb
cmpsl
sbb
adc
xor
mov
dec
jmp
dec
mov
dec
mov
loop
mov
fdivrl
mov
jb
jmp
or
add
jns
sub
xor
mov
test
rcl
xor
or
outsb
mov
stc
aas
inc
notb
or
pop
sti
or
sbb
sti
cmpsb
push
cld
mov
fs
ljmp
xor
movsb
je
dec
dec
out
das
lahf
icebp
add
mov
cltd
test
add
push
fistpl
iret
dec
andl
jb,pn
add
fwait
insl
pop
jo
xor
xchg
negb
mov
popa
or
xor
xor
aad
pop
ret
sub
jno
jl
mov
adc
pop
rorl
mov
push
mov
push
imul
push
nop
mov
call
test
sub
cltd
add
pop
cld
xchg
jno
fs
popa
xchg
mov
pop
hlt
je
fisubrs
mov
xchg
stc
aas
fstpt
push
xor
xchg
jb
iret
fcmovnb
int3
loope
insb
icebp
cmpsl
pop
adc
shlb
pop
rcrb
adc
mov
xchg
ljmp
les
ret
subl
pop
pop
xchg
std
sub
add
or
pushf
pop
faddl
push
in
es
add
aas
in
popa
mov
push
jae
push
cmp
xor
aam
outsl
push
mov
pop
dec
inc
and
call
pop
ret
in
push
xor
xor
sub
mov
shlb
xorl
push
push
ficoms
jg
cmp
mov
sub
jge
lret
out
and
add
mov
mov
jns
xchg
aaa
mov
in
rcrb
inc
and
stc
fmul
popa
leave
test
push
jmp
xor
xchg
jle
cltd
leave
sbb
int3
dec
lret
mov
and
push
xabort
adc
cmp
loop
in
in
stc
xchg
mov
loopne
or
aam
and
repnz
xor
mov
xchg
into
mov
std
add
mov
xchg
sub
cmpsb
mov
push
dec
mov
insb
fistl
cltd
xor
lret
test
loop
ret
dec
repz
fptan
fildll
out
sahf
repnz
popf
inc
xchg
mov
jle
push
mov
out
js
ds
adc
sbb
ret
addb
daa
mov
scas
test
icebp
inc
cmova
xorl
je
cmp
stc
jo
ss
jne
sbb
jb
daa
jb
repnz
pop
clc
repz
mov
and
shl
sti
cmpsl
or
shlb
mov
lcall
fxch
ja
jno
ret
lds
movsb
lret
dec
xchg
out
mov
pop
lcall
jnp
xchg
arpl
or
jb
jns
insb
or
or
jno
inc
out
inc
inc
pop
jp
cld
dec
test
idivb
dec
or
int
add
push
out
jecxz
mov
pop
sti
pop
fidivrl
lret
cld
in
sub
mov
xchg
cmpsb
inc
fdivrl
hlt
xchg
add
push
js
cmp
sbb
mov
dec
cmpsb
cltd
mov
sub
sub
xor
add
ret
loopne
dec
inc
fnstsw
sbbb
scas
adc
test
repnz
and
lahf
pop
daa
mov
mov
call
pop
jmp
insb
pop
jb
adc
subb
loop
xchg
std
aam
std
pop
rcrl
add
mov
sub
mov
jns
lock
or
sub
dec
dec
scas
jecxz
mov
popf
popf
cmp
js
fildl
push
ret
fs
dec
addr16
daa
ret
mov
cmp
fabs
sbb
xchg
bnd
dec
int3
cld
movsb
popf
dec
mov
push
pop
dec
les
mov
inc
ds
enter
mov
test
sub
nop
mov
mov
add
scas
sahf
lret
add
jle
in
es
mov
sub
or
and
mov
hlt
movsl
and
mov
mov
loope
imul
rcll
sti
fs
repz
repz
or
ja
jne
cmpsl
jl
in
xor
pop
cli
lret
pop
push
mov
bound
lods
pushf
popf
mov
lret
push
test
cmc
mov
loopne
std
adc
jns
sbb
pop
es
or
pushf
mov
xchg
loop
sbb
subl
and
xchg
cmp
stc
mov
sub
mov
js
test
mov
les
or
jns
je
sbb
out
pop
sarb
jmp
push
idivl
iret
shl
xchg
cmp
cmp
scas
loope
sub
mov
xor
pop
jno
nop
mov
sub
ss
inc
and
sub
jb
push
bound
cmp
xlat
dec
fldenv
sti
dec
ja
ljmp
mov
hlt
add
and
sub
sahf
repz
mov
push
jo
mov
mov
loope
repnz
push
mov
push
and
repnz
jecxz
scas
mov
icebp
ljmp
or
cmp
ficomps
scas
sub
add
sub
sbb
pop
mov
loop
inc
ljmp
mov
mov
pop
push
xchg
push
movsl
fidivl
or
pop
push
popf
mov
icebp
nop
mov
pop
orb
sub
imul
into
mov
jae
sbb
xchg
popa
popa
jae
sarb
xlat
jb
and
pushf
lock
mov
jmp
aaa
fwait
into
mov
test
xor
bound
cli
repnz
test
or
into
lcall
outsb
enter
mov
xchg
inc
ficomps
dec
cld
fisttpll
movsl
cmp
push
mov
cmp
mov
jmp
pop
fiadds
mov
mov
loope
mulb
aam
pop
iret
xchg
cld
mov
mov
lcall
jo
pop
pop
pushf
pop
in
xor
xchg
or
inc
sub
clc
jg
stos
inc
fisttps
loopne
fidivl
inc
mov
xchg
sbb
dec
lahf
gs
nop
nop
pop
sub
sti
je
push
sub
push
add
dec
rorl
xchg
pushf
dec
ds
clc
pop
inc
int
xor
jge
push
mov
loopne
push
mov
jne
cmp
push
cmp
addl
in
jge
sti
sti
sbb
mov
addr16
mov
jne
adcl
push
fcom
scas
xchg
jmp
mov
aas
jmp
cwtl
repz
jbe
mov
add
adc
sub
lods
adc
push
roll
test
or
dec
xor
mov
pop
dec
jns
cmp
sahf
jo
fs
add
ljmp
arpl
sar
mov
mov
scas
dec
adc
mov
iret
es
dec
jne
popf
sarb
xchg
adc
test
cmp
pop
sub
mov
xchg
mov
rolb
add
adc
subb
dec
loope
mov
mov
mov
mov
insl
push
dec
test
mov
cmp
leave
adcl
or
sub
cmpsl
jg
in
add
imul
divb
cmp
pop
pop
xchg
stc
pop
filds
dec
iret
mov
xchg
jl
movsl
out
mov
bound
push
daa
push
pusha
aas
fildl
or
stc
sub
cwtl
mov
clc
jecxz
pop
dec
sub
stc
pop
cmp
push
cmp
fisubrs
sbb
aam
mov
je
js
cmp
jns
bound
jns
mov
jg
add
mov
fsubrs
daa
push
mov
inc
sub
mov
or
int
jne
mov
imul
dec
aaa
xor
in
sbb
cli
and
ja
out
out
xchg
movsb
fsubrs
rcrb
out
cltd
jmp
adc
test
nop
lret
mov
in
fwait
test
pushf
sbb
xlat
insb
lret
fisubl
pop
adc
movsb
sub
mov
push
fs
pop
jae
roll
mov
enter
jnp
inc
sub
xchg
cmpsl
dec
inc
scas
xchg
lds
cmp
and
fisubs
cmpsl
les
lea
arpl
adc
in
or
arpl
dec
pop
faddl
stos
imul
pop
xor
shl
and
dec
fmulp
push
outsl
dec
xlat
mov
mov
inc
push
jae
push
cmpsl
sarl
les
cmpsb
xchg
sbb
bound
mov
inc
cmp
cmp
out
pop
mov
sbb
cwtl
pop
int3
dec
sub
xor
pop
push
maskmovq
jmp
repz
inc
mov
mov
add
inc
xchg
xchg
cmc
push
cmc
mov
jnp
inc
xchg
mov
sub
jae
ds
push
push
movsb
xchg
mov
cmp
dec
aam
mov
add
cmp
pop
inc
cmp
cmp
sub
inc
adc
jbe
mov
es
xor
jo
lahf
ljmp
xchg
movsl
imul
xor
xchg
inc
out
dec
mov
mov
test
pop
scas
or
lock
cmc
and
movsb
enter
and
mov
mov
mov
nop
mov
jae
popf
push
push
lahf
sbb
push
int
mov
aam
ds
jge
imul
aas
pushf
xchg
cmc
bound
daa
mov
lds
adc
cmp
cld
fnsave
mov
pop
pusha
testl
incb
jnp
sub
push
xchg
pop
mov
jmp
xor
int3
dec
adc
mov
add
mov
jp
push
pop
in
xchg
xor
aad
fwait
cmp
xchg
cmpsb
ss
cmp
js
or
loop
shl
loope
test
fiadds
and
pop
fmuls
lods
jae
lret
aaa
shll
es
xchg
adc
dec
mov
lods
mov
mov
jle
inc
jmp
xlat
push
les
test
jecxz
scas
cmp
lahf
movb
roll
in
int
out
mov
test
and
pushf
addl
cmpsl
leave
js
stos
lods
add
jg
cld
push
scas
xlat
daa
mov
test
ds
lea
adc
jno
aad
push
mov
xor
pop
mov
and
pushf
or
xchg
hlt
pop
dec
call
imul
pop
js
xor
push
mov
lcall
mov
mov
shlb
xchg
sub
pop
hlt
cmp
loopne
fwait
jb
lods
cwtl
pop
or
out
aad
shlb
cmp
sbb
leave
cwtl
dec
cmc
imul
std
inc
sub
inc
negb
loop
fstps
call
shrl
or
pop
or
gs
sbb
mulb
sbb
mov
cwtl
sahf
add
pop
push
movsl
dec
cmp
push
cmp
std
outsb
push
add
mov
push
je
push
aad
dec
or
mov
mov
sub
and
pop
add
stos
mov
sbbb
pop
cmp
movsb
xor
lahf
sub
nop
mov
scas
mov
cwtl
pop
or
sarb
in
push
movsl
push
das
lods
xchg
pop
iret
stos
dec
addr16
mov
or
scas
push
cmp
mov
roll
adc
or
ficompl
cmp
cmp
dec
movsl
jno
sti
iret
stos
or
loope
ljmp
mov
xchg
cmpsl
ss
inc
daa
xchg
shlb
push
das
fnstenv
rclb
sbb
pop
adcb
daa
xor
addb
mov
int3
mov
adc
adc
lcall
ss
cmp
fisubrl
imul
adc
stos
out
mov
in
loope
arpl
cmpsb
and
icebp
fisttpll
sar
call
push
and
mov
lods
lret
test
mov
repz
xlat
mov
or
dec
insb
mov
jo
js
inc
nop
mov
in
shll
mov
inc
pop
add
adcb
sti
push
inc
js
lret
hlt
es
lds
xor
dec
movsb
sub
mov
inc
sbb
xchg
adc
stos
stos
push
in
dec
divl
dec
mov
xrelease
nop
cli
sub
clc
push
daa
mov
cmp
inc
pushf
scas
lods
or
fs
and
int
stc
jae
pop
or
imul
pop
mov
dec
popa
std
imul
inc
loop
and
cld
push
icebp
or
fnstsw
mov
and
pusha
int
daa
xchg
jmp
sahf
sbb
push
add
xchg
gs
stos
adc
test
xor
jb
add
lods
sub
pop
jo
lcall
adc
popf
adc
addb
push
push
scas
cmpsb
mov
lret
and
push
cmp
aas
pop
dec
and
mov
popa
mov
jae
and
pop
clc
fisttps
fcomp
push
call
mov
cwtl
lahf
sarb
enter
mov
inc
inc
mov
cld
pop
sbb
mov
dec
jae
adc
and
or
mov
clc
lret
mov
sbb
outsl
fnsave
int3
or
dec
shlb
add
jae
pop
mov
sbb
sahf
adc
into
mov
in
xchg
shll
mov
imul
orl
dec
inc
and
mov
jnp
clc
mov
inc
rcll
cld
or
mov
rcrb
push
xor
jmp
sub
xchg
loopne
int
insb
push
sbb
imul
pop
jp
push
and
adc
jns
dec
aaa
xor
inc
sub
rcrl
mov
lret
fimull
inc
fdivp
sub
mov
adc
int
xor
pop
lock
test
sub
mov
inc
add
fbstp
xor
pushf
adc
sub
es
jge
std
inc
mov
ret
insl
fisubrl
or
movsl
xor
and
roll
cmpsl
jns
pop
imul
sbb
sar
sub
outsb
and
add
add
shll
roll
jae
imul
sub
pop
jno
inc
cmp
ficomps
in
aas
dec
xor
addr16
movsb
mov
sbb
xchg
ja
pop
add
les
incl
jmp
neg
jne
mov
fistpll
mov
pop
pop
sbb
int
test
cltd
imul
jg
push
sbb
fisubrs
push
lds
sub
std
sti
push
je
adc
mov
dec
sub
add
or
lcall
adc
jo
sahf
inc
out
push
fistps
cmp
xor
sub
adc
mov
pop
loop
out
pop
sbb
mov
cmp
pop
dec
ret
and
sub
dec
push
inc
div
pextrw
adc
movsb
fsubs
mov
repz
pop
fisubrs
pop
fs
jge
inc
ds
es
nop
insl
pop
jne
fidivs
jg
mov
retw
hlt
push
mov
xor
out
jnp
xchg
cmp
je
repz
adc
sahf
pushf
xchg
out
inc
in
dec
cwtl
mov
cwtl
xor
dec
cmc
sti
lret
cli
mov
xor
xlat
ss
inc
mov
nop
dec
sbb
test
mov
sub
cs
and
pop
fldl
mov
mov
add
xor
jmp
adc
sarl
mov
add
ja
fstpl
pushf
cwtl
and
pop
or
popa
test
mov
rcl
lcall
dec
sub
adc
xor
repnz
in
push
les
shlb
xor
sbb
sbb
pushf
xor
fistps
in
addl
pusha
and
popf
pop
fsubrl
xchg
gs
jge
dec
mov
dec
lcall
mov
js
packsswb
out
test
fdivrs
ss
icebp
and
pop
lret
ret
inc
dec
lahf
notb
xor
jne
dec
cmp
loopne
jecxz
or
pop
hlt
cmp
gs
test
cmp
mov
adc
cmp
mov
push
and
dec
orb
scas
cltd
push
dec
fildll
cwtl
adc
stos
mov
call
aad
into
xchg
ror
cmc
xchg
cmp
mul
jae
gs
sbb
cs
scas
push
adc
jecxz
sub
mov
aas
outsb
repz
lcall
xor
xchg
jp
inc
push
movsb
lret
jmp
pop
not
xchg
out
pop
cmp
out
ds
pop
jnp
imul
sahf
jp
mov
jle
mov
mov
push
or
mulb
cli
pop
jmp
jno
mov
lret
mov
outsl
jae
rclb
fstps
lods
iret
mov
repz
mov
mov
or
out
clc
add
push
lds
insl
mov
popf
das
push
inc
pop
mov
leave
pusha
or
push
mov
or
xlat
sbb
sub
or
fcoml
fs
jecxz
insb
shll
push
mov
mov
jnp
mov
mov
scas
imul
jo
xchg
and
adc
sbb
jmp
adc
leave
dec
xchg
mov
jbe
out
call
jecxz
xchg
sbb
add
push
shll
or
loopne
out
shrl
aaa
adc
and
mov
rcl
scas
mov
dec
cmpsl
add
push
push
xor
ss
push
push
pusha
movsb
lret
add
pushf
xchg
lock
je
jg
pop
in
cmpsb
push
repz
mov
push
push
mov
sub
test
lock
jl
mov
adc
push
lods
lods
out
pushf
cmp
and
and
in
outsb
push
in
add
test
or
add
es
mov
ljmp
sbb
add
push
mov
dec
outsl
dec
jnp
and
out
inc
adc
jl
jae
test
call
inc
out
pop
xor
and
popf
push
ficomps
testb
xchg
negl
jb
cmp
and
dec
pop
pop
jmp
pop
sub
jmp
push
xor
das
sub
add
xchg
loope
add
or
ds
jle
sbb
push
insl
push
xor
enter
in
jo
sbb
sub
outsl
lret
sbb
hlt
sbb
icebp
in
sbbl
sub
mov
das
shl
repnz
inc
mov
sbb
enter
jecxz
cwtl
jecxz
xchg
jnp
push
into
xchg
js
gs
mov
clc
mov
xor
shrb
std
dec
test
pushf
pop
orl
adc
shlb
pop
cmc
xor
aas
mov
fstps
stos
es
or
dec
data16
mov
cmp
push
es
add
jne
ret
dec
daa
cs
test
or
ret
ds
jne
sub
or
jno
and
je
movsb
int3
fwait
std
inc
dec
or
int3
loop
lock
or
sbb
iret
jnp
jl
ret
adc
inc
addl
jg
scas
sahf
mov
int3
and
push
les
repnz
lock
fstl
pop
push
imul
arpl
out
adc
sub
push
lret
pop
or
shll
aas
mov
js
sbb
mov
imull
jbe
aad
mov
aam
aaa
es
push
jmp
ds
mov
scas
hlt
jae
lahf
cmc
hlt
jp
lret
pop
fdivrp
mov
inc
inc
lret
loope
fst
push
fisttps
into
aam
ss
imul
jp
xchg
aam
cwtl
add
leavew
add
dec
jmp
jcxz
mov
mov
test
cmp
xchg
fcoms
std
adc
enter
cmp
xchg
incl
faddl
push
andb
xor
insb
push
test
mov
sub
fistl
fstl
jp
arpl
jno
mov
adc
mov
cli
inc
adc
subb
mov
cmp
imul
inc
mov
sbb
pop
pop
scas
cmc
test
inc
jge
in
push
sbb
mov
sub
nop
out
push
jo
repnz
cmc
dec
add
ljmp
xchg
jb
hlt
pop
push
hlt
sub
push
mov
xor
popa
adc
test
pop
lahf
out
aaa
mov
ja
sbb
push
push
ficomps
ror
rcl
push
lcall
mov
dec
or
mov
mov
rorb
jmp
decl
out
lock
in
or
xchg
cmp
dec
fisttpl
loopne
jg
in
cmpsl
jb
out
call
les
lret
scas
push
daa
xchg
scas
lret
stc
cmp
add
xchg
jb
mov
inc
shrl
add
pop
and
sbb
hlt
mov
xorl
loopne
add
mov
sub
adc
insl
fwait
push
repz
xchg
addr16
in
mov
add
mov
pop
mov
mov
fisttps
lret
and
fsub
xchg
cwtl
incl
fsubl
sub
add
inc
inc
cmpl
sbb
outsb
mov
fnstenv
push
in
je
rcr
mov
sahf
cmpsl
movsl
mov
cmpsl
sbb
pusha
setns
pop
stos
stos
std
mov
outsl
out
out
popf
fidivrl
std
dec
jns
clc
mov
jg
repnz
add
scas
aaa
cmc
popf
sbb
sahf
jg
cmpsl
lret
aad
lds
adc
mov
rorl
sbb
mov
pmaddwd
cmp
into
pop
stc
adc
pop
sbb
push
mov
andl
xor
xchg
inc
insl
dec
pop
mov
pop
pop
mov
xlat
cltd
adc
inc
push
or
lcall
fwait
mov
inc
sbb
negl
mov
popa
pop
or
shlb
xor
jno
xchg
pusha
jnp
add
sbb
je
add
aaa
lock
push
scas
xor
aas
inc
pushf
ds
and
mov
or
xchg
push
and
orl
xchg
cmpsl
and
idiv
inc
sar
mov
imul
sbb
xchg
outsl
pusha
xor
mov
testl
shr
cltd
jecxz
sub
push
pop
out
xor
adc
aas
push
sbb
fstpl
adc
push
sbb
js
cmp
cmp
pop
mov
data16
sbb
mov
outsl
pop
test
xor
ret
or
in
sbb
push
mov
xor
push
cld
scas
jp
test
iret
mov
xchg
clc
insb
dec
lods
int3
fxch
fildll
pop
test
pushl
js
mov
and
cltd
fadd
repnz
lret
push
addr16
rorb
pop
dec
sub
lea
or
stos
adc
jge
pop
dec
push
ss
pop
xchg
jno
cmp
push
mov
mov
pop
leave
mov
pop
xchg
push
mov
xlat
imul
aas
insb
icebp
pop
cli
dec
movsl
inc
scas
pop
insb
xor
gs
xchg
fwait
mov
mov
dec
stos
scas
sub
push
test
or
push
jno
push
inc
sub
add
push
aas
insl
mov
mov
fidivs
mov
jmp
xor
sahf
and
mov
inc
or
inc
xchg
mov
and
icebp
call
xchg
imul
in
jae
push
pop
mov
fmuls
add
imul
push
outsl
cmpsl
or
repnz
mov
shll
into
mov
dec
sahf
cmc
sbb
pop
jns
aas
ficompl
shrb
sbb
in
inc
sti
add
cmpsb
loopne
sub
xchg
xor
dec
call
sbb
bound
mov
fisubl
stc
push
fdiv
popa
aas
ret
lret
insl
jae
pop
dec
test
stos
js
or
or
and
dec
cmp
scas
lock
mov
movsb
icebp
gs
dec
arpl
push
jg
push
ficomps
push
xchg
nop
mov
jns
mov
sbb
lds
sub
sbb
pop
dec
inc
jb
jo
fstl
sub
xor
pop
sub
mov
xorl
xchg
mov
jns
mov
loope
lahf
jge
mov
hlt
mov
push
cmpl
xlat
adc
and
leave
ret
mov
mov
mov
shlb
mov
pop
push
test
ret
xchg
mov
ret
hlt
cmp
mov
stos
and
xchg
lods
rcrl
push
imul
fists
mov
xlat
mov
jnp
mul
jno
jae
cmp
popa
in
pop
jo
and
loope
cmovp
jecxz
mov
push
pop
inc
pop
daa
bound
jl
xor
addb
sarl
jmp
mov
adc
fnstsw
mov
inc
in
sahf
sub
inc
mov
pop
lods
pop
inc
adc
mov
xor
xchg
int
loope
outsb
xor
xchg
dec
test
mov
push
add
mov
push
out
dec
dec
mov
pop
mov
adc
outsl
mov
xchg
test
movsl
aam
adc
fisttpll
xchg
insl
lods
cmp
xchg
or
cmc
outsl
test
shll
and
popf
loopne
and
clc
or
fnstcw
push
mov
jg
add
mov
mov
insl
sub
lret
mov
out
cmp
dec
aaa
mov
adc
pavgb
pop
hlt
xor
xchg
xor
sub
pop
xchg
in
pop
pop
xor
addr16
mov
mov
dec
sbb
and
rol
das
out
mov
fsubr
mov
mov
jbe
xchg
loop
lods
mov
adc
mov
stos
cmpsl
xlat
sbb
cld
mov
sbb
idivl
cmp
insl
repz
xchg
in
shr
lods
mov
sub
adc
mov
pusha
jle
sti
das
xchg
imul
dec
xor
inc
xchg
mov
mul
cmpsb
lret
mov
mov
mov
shlb
mov
loopne
mov
jle
ss
filds
dec
inc
ret
pop
aaa
jnp
lds
sub
push
inc
mov
mov
jns
or
cmp
and
ljmp
or
xor
fidivs
ss
sbb
fcompl
scas
inc
xchg
add
mov
sub
sub
mov
nop
imul
and
xlat
mov
jl
push
and
dec
push
xchg
dec
shlb
sbb
flds
out
push
adc
stos
fdivrl
fsubs
fwait
mov
inc
rcl
ficomps
sbb
je
lret
push
nop
adcb
jmp
mov
pop
mov
xlat
pop
jmp
or
lcall
enter
xchg
aas
outsl
iret
insl
mov
das
mov
mov
movsl
mov
push
lret
cmp
vpmadcsswd
dec
js
push
and
push
jae
push
adc
pop
lret
push
out
push
outsb
mov
inc
mov
sbb
lahf
push
rol
iret
mov
scas
mov
and
fs
or
ja
inc
and
sbb
imul
insb
test
inc
push
mov
cs
mov
xor
call
imul
mov
sbb
ret
jecxz
pop
pop
imul
adcb
fs
ficoms
cwtl
dec
sbb
xor
dec
aam
or
mov
insl
adc
in
xchg
push
mov
xchg
in
push
out
jo
jae
xchg
mov
fstpl
jno
adc
dec
aam
inc
sub
or
daa
pop
sub
clc
es
out
dec
cmp
xchg
mov
mov
and
ja
adc
stos
push
jno
jbe
fwait
pop
xchg
sbb
jne
inc
and
xchg
xchg
or
into
pop
arpl
push
lods
sbb
aad
mov
divb
in
cli
xor
mov
pusha
mov
sbb
add
not
mov
mov
cltd
mov
aas
pop
jbe
dec
stc
push
movsb
and
cmp
je
mov
push
mov
jo
mov
push
and
int3
in
mov
jno
xor
mov
push
outsb
call
rcr
or
ds
and
ljmp
mov
mov
iret
cmp
imul
mov
xchg
loope
cmp
add
in
cmpsb
outsl
pushf
xchg
xor
xlat
and
mov
xorb
add
add
pop
pop
pusha
rcrb
jno
xchg
lds
das
sub
fdivl
jnp
ficoml
jnp
into
mov
inc
loope
or
lds
ret
pop
ret
mov
pop
adc
ljmp
inc
mov
int3
push
loope
icebp
test
inc
arpl
xchg
adc
ret
mov
scas
jp
pop
mov
cmpl
xchg
cmp
rcrb
or
xor
inc
pop
sub
loop
push
cmpsb
push
clc
jne
and
jae
dec
addl
push
sbb
lret
push
dec
and
stos
pop
sbb
fdivrl
push
rcrl
sub
push
cmp
push
add
push
das
push
pop
sub
mov
ret
and
das
and
sahf
mov
insb
dec
sahf
xchg
mov
mov
ja
dec
lock
inc
maskmovq
jbe
jns
xchg
mov
jecxz
dec
add
or
push
sbb
testb
outsb
pop
and
cwtl
rcr
sbb
inc
call
xchg
or
dec
lcall
cmp
cwtl
mov
insb
or
aaa
jns
xchg
das
jns
std
sub
and
fdivrp
sti
or
pop
loopne
pop
mov
mov
xchg
add
cmp
push
sub
dec
pop
aad
or
out
mov
and
xchg
mov
xchg
pop
push
adc
mov
repnz
jp
sahf
lret
test
ljmp
popf
lea
out
mov
sub
jo
mov
inc
sub
adc
jne
mov
outsl
xchg
xor
sub
or
ljmp
es
fldenv
xor
or
jge
dec
push
iret
shrb
hlt
push
mov
ljmp
pop
jbe
lods
enter
or
xchg
push
pop
push
pop
in
inc
sbb
inc
cmpsl
data16
push
mov
lahf
pop
cmpsb
sti
xor
mov
sbb
cmc
lcall
in
pop
sub
inc
hlt
push
xchg
je
adc
mov
dec
es
outsl
add
xor
mov
inc
xchg
xor
shl
mov
push
cmc
sbb
xor
in
xchg
xor
cmp
mov
popa
testb
int
or
sahf
mov
js
push
add
push
sarb
dec
mov
cmp
pusha
jbe
shll
add
addb
es
mov
xchg
clc
pop
rcl
cld
and
in
ja
outsb
out
pushf
adc
xor
pushf
incb
js
aam
loop
sub
fcmovne
xchg
xor
dec
test
dec
mov
cltd
jns
push
in
nop
inc
es
xor
or
jns
out
cmp
lret
loop
jbe
sub
and
cltd
add
fcompl
xchg
xchg
mov
cmp
push
js
mov
test
pop
pop
jnp
mov
pushf
iret
fucom
rolb
loope
mov
cli
mov
or
jle
xchg
insb
lret
daa
jno
outsl
jns
addb
loop
sub
mov
xchg
cli
je
dec
sbb
push
ja
jp
ljmp
push
and
out
sbb
adc
aam
data16
fwait
aaa
pop
and
sti
iret
in
cmp
mov
xorb
push
push
adc
aas
dec
dec
enter
cmp
or
stos
dec
inc
inc
int3
lret
nop
ja
enter
jae
push
scas
imul
stc
jno
pop
and
mov
sbbb
aam
repnz
mov
icebp
mov
repz
fs
xchg
icebp
jnp
push
push
mov
outsb
or
and
pop
adc
jne
jle
stos
pop
enter
mov
adc
jns
inc
movsb
shlb
lock
cmp
mov
cltd
xorb
sbb
and
sub
mov
out
mov
mov
imul
xor
inc
pop
xlat
xor
cs
test
sub
mov
cmp
fcomps
sbb
push
addr16
arpl
fndisi(8087
add
rolb
adc
mov
sahf
addb
rolb
cmp
mov
leave
push
add
mov
mov
jbe
mov
xchg
xchg
adc
and
int
and
ret
fmull
add
es
insl
and
mov
xor
cld
mov
xor
pop
test
jge
sbb
rcrl
nop
add
je
jno
clc
cs
xor
adc
mov
adcl
insb
ret
mov
mov
and
mul
mov
repnz
pop
or
mov
push
pop
mov
mov
pop
imul
ret
imul
push
int3
popf
and
inc
cltd
mov
or
ja
push
push
ja
daa
data16
insl
jg
xchg
push
mov
fs
lea
cmp
adc
cmp
lahf
jb
loopne
ret
add
xchg
mov
mov
mov
stos
out
dec
lea
mov
je
xor
cmc
inc
push
imul
xchg
stc
movsl
cmc
loopne
int3
push
mov
ss
xor
in
mov
and
jnp
inc
mov
mov
lret
pop
lret
imul
ja
pop
xchg
in
out
filds
sbb
jno
cmpsb
inc
jb
xchg
mov
repz
and
inc
pop
aad
and
addl
or
into
fldenv
fisubrs
pop
cpuid
and
sbb
movsl
or
xchg
add
pop
iret
push
dec
mov
push
into
ficoms
jbe
inc
lret
sti
adc
sub
in
sbbb
adc
push
icebp
imul
in
mov
in
pop
xor
add
das
cmp
je
inc
pop
add
dec
inc
in
call
nop
arpl
movsl
sub
mov
mov
xchg
sbb
pop
add
bnd
shl
shlb
or
pop
jae
inc
pop
bound
dec
push
dec
jne
mov
or
cmpb
dec
and
cli
es
test
pop
cmp
mov
push
dec
test
ja
xor
push
idivb
adc
data16
int3
dec
jge
testl
dec
aam
push
push
in
jns
xor
rcrb
in
test
mov
fwait
mov
rorl
imul
cmp
mov
scas
icebp
sbb
in
or
sti
out
mov
or
xchg
aaa
clc
mov
std
dec
pop
orl
jmp
mov
cmp
out
xchg
mov
sub
adc
fnstcw
xor
loopne
daa
hlt
xor
sbb
das
ret
repnz
pop
add
dec
inc
cmpsl
test
mov
fcoms
imul
clc
inc
and
cmp
and
push
cmp
popf
notb
lods
decb
sbb
sbb
addr16
adc
stos
into
cwtl
push
fisubs
inc
mov
pop
jo
stos
out
arpl
lods
imul
pop
inc
pusha
cltd
leave
int3
cltd
jb
jae
push
cmp
xchg
sti
and
lahf
addr16
lock
push
push
mov
push
call
clc
mov
xchg
push
cmp
loope
mov
and
rcrl
test
mov
jae
adc
cmp
sti
lret
and
lods
sbb
dec
outsb
mov
mov
xchg
mov
out
addl
dec
mov
popf
lahf
mov
pop
scas
cmp
pushf
inc
andb
mov
pop
pop
ret
cmp
imul
pusha
xchg
push
xor
decl
jb
inc
jmp
cmp
pop
and
adc
push
xor
add
cmpl
xor
mov
mov
in
aad
mov
push
scas
jle
test
xchg
adc
or
push
adc
jns
xchg
cmp
lods
mov
cld
push
jb
cmp
movsb
std
fisttpl
hlt
pop
popf
sbb
fcoms
mov
mov
repz
add
cmpb
hlt
xor
mov
jl
mov
int
pop
scas
jae
shrl
push
cltd
cmp
sub
fs
lock
dec
int
inc
lock
dec
mov
mov
add
add
xchg
push
nop
xlat
test
popa
aaa
xchg
dec
in
sub
addr16
cmp
sbb
cwtl
lret
xor
dec
jno
fld
gs
cmp
mov
roll
jne
mov
lahf
repz
mov
mull
lcall
arpl
mov
mov
test
int3
sub
test
shrl
xchg
adc
lds
jle
shlb
mov
sub
lods
cltd
out
in
lock
dec
shrl
fisttpl
data16
mov
push
xchg
and
stc
cmp
sub
dec
loopne
scas
mov
test
test
cltd
push
popf
sbb
lods
mov
push
sahf
insl
xchg
movsb
jg
sub
std
push
loope
mov
loop
out
mov
cmp
or
cli
or
fadds
sbb
adc
mov
loope
scas
cmc
push
xchg
dec
xchg
cs
cmp
jg
hlt
pop
push
pop
jbe
aam
sub
push
std
dec
in
mov
test
fs
adcl
pop
jg
out
cwtl
cmp
out
jle
out
or
mov
push
mov
int
pop
das
push
lcall
mov
cltd
aas
sub
mov
add
fdivr
fldt
imul
mov
cwtl
jo
ja
mov
enter
add
jg
in
test
sbb
mov
int
or
adc
mov
stos
push
loop
jne
outsl
jecxz
add
cld
std
or
or
loope
dec
stos
gs
negl
adc
testb
ret
adc
bound
xchg
jge
sar
push
pop
fsubs
jnp
test
clc
in
cmpsb
ret
mov
roll
in
sub
xor
adc
sbb
mulb
inc
clc
jl
stc
jmp
fsts
stos
in
daa
pop
int3
div
bound
fs
mov
rclb
dec
pop
dec
out
pusha
std
or
cmp
add
push
jg
dec
fidivs
xor
pop
xchg
push
push
sbbl
sbbl
jno
jmp
jns
lcall
mov
stos
push
insb
clc
mov
int
rolb
xchg
out
loop
mov
jecxz
inc
and
or
xchg
ljmp
iret
ret
push
test
imul
ds
push
icebp
xchg
xchg
xor
arpl
cmp
sbb
and
adc
rcrb
idivb
dec
out
cmp
movsb
xor
lock
outsl
aad
push
mov
jle
xchg
mov
cmp
test
out
call
and
mov
push
inc
xor
test
fs
lcall
mov
sti
xor
lcall
xchg
jmp
test
push
sub
dec
shl
andb
sub
add
pushf
push
lock
sub
push
fwait
cld
filds
jbe
js
icebp
aaa
jo
loopne
cmpsl
clc
mov
dec
shl
sub
out
repnz
adc
xor
push
adc
add
xchg
loopne
add
pop
push
push
out
cmp
in
testb
mov
lret
mov
ficompl
sub
pop
arpl
inc
mov
jbe
pushf
aad
andb
mov
xlat
insb
fadd
cmp
sub
mov
jns
imul
js
pop
cmp
mov
mov
imul
xchg
sbb
or
cld
adc
pusha
and
or
mov
data16
dec
in
call
call
sub
xchg
or
hlt
dec
add
out
lret
pop
cmp
das
inc
adc
loope
pop
cmc
imul
jnp
mov
jp
lods
arpl
adc
push
fbstp
xor
incl
in
push
in
into
leave
sub
std
ds
cmp
inc
pop
out
push
jno
test
xchg
aam
mov
ds
sbb
and
mov
pop
aas
push
dec
aas
xor
adc
and
and
clc
xor
insl
loopne
por
jns
lods
jne
xchg
pusha
out
test
add
mov
pop
sti
daa
stos
daa
cli
data16
stos
movsb
testb
jg
pop
mov
cltd
gs
fisubrl
imul
fcom
mov
lcall
fadd
bound
mov
mov
iret
outsb
out
leave
xchg
dec
jmp
sbb
lret
adc
shll
inc
xchg
int
std
xchg
mov
fisubrl
push
inc
pop
add
ficomps
mov
inc
shll
sub
dec
aam
inc
add
sub
std
fmull
sbbb
faddp
out
and
leave
test
pop
or
add
ds
cld
out
push
js
jnp
mov
scas
dec
sub
out
or
mov
or
sbb
xor
int
inc
adc
scas
ljmp
addl
mov
push
in
sahf
in
push
lahf
mov
pushl
mov
sub
and
inc
push
dec
sbb
mov
inc
ja
bound
in
lods
jge
leave
xchg
cs
pop
pusha
jmp
and
fildl
add
stos
or
mov
jno
and
adc
jae,pt
lcall
hlt
adc
mov
insl
lahf
mov
cltd
stc
or
xor
jl
sbb
push
cld
sahf
adc
push
int
jge
jbe
js
lods
jno
scas
fs
xor
cmp
movsb
fimuls
pop
lods
leave
test
mov
mov
mov
popl
test
xchg
pusha
cmpsl
sbb
xchg
cli
popa
dec
dec
xor
movsl
xor
xlat
cmpsl
xchg
filds
add
ja
scas
add
push
push
mov
mov
imul
pop
cmp
adc
insb
inc
in
movb
pop
addr16
mov
ss
push
push
lods
testb
xchg
and
ja
inc
add
sub
add
pop
push
inc
inc
int
std
adc
cmc
in
addr16
jecxz
cld
into
dec
dec
sub
sbb
or
add
imul
push
dec
inc
pop
xorb
or
lahf
or
pop
xor
sbb
or
jp
adc
mov
es
repnz
xchg
loope
mov
xchg
pmaxub
leave
sbb
lods
mov
xchg
sub
xor
dec
lahf
xor
addr16
repz
test
popa
in
mov
int
xchg
pop
imul
add
cmp
sbb
call
xchg
in
repz
adc
leave
in
aas
add
nop
cld
or
pop
add
cmp
jg
and
dec
mov
pop
ja
out
dec
pop
cmc
mov
lea
out
in
sbb
lock
mov
arpl
or
aas
xor
mov
xchg
arpl
leave
mov
push
mov
mov
jecxz
cmpb
jbe
cmp
fmull
add
test
dec
pop
mov
jns
cmp
fsubp
cmc
lods
in
mov
jo
pushf
test
repnz
fdivs
pop
int
std
dec
leave
dec
push
jb
mov
mov
mov
out
xchg
adc
popa
scas
sub
or
mov
insb
loope
das
push
clc
fisttps
dec
mov
jae
aaa
insl
sbb
mov
cmp
movsl
jne
fstl
mov
mov
mov
mov
sbb
mov
mov
ljmp
call
cmc
in
xchg
mov
mov
outsb
xchg
scas
cmpsl
cmp
xor
mov
leave
push
lahf
xchg
orb
clc
xor
insb
or
mov
jno
ret
in
shll
inc
push
inc
mov
sbb
dec
push
pop
dec
add
out
je
mov
inc
xchg
push
fs
fwait
sub
lret
pop
test
pop
dec
cmp
add
sahf
aad
adc
add
or
xlat
sahf
rep
mov
cmp
inc
add
lret
in
and
xchg
add
inc
sub
cmc
ret
imul
movsb
or
fimuls
push
and
xor
stos
pop
mov
lods
cmp
leave
pop
mov
stc
or
call
jae
test
sbb
out
pop
dec
fsqrt
int3
mov
aad
add
jg
xor
mov
jp
ret
or
mov
push
mov
sub
inc
daa
cmp
inc
fwait
rcl
xor
push
fidivl
dec
les
out
mov
inc
leave
mov
test
subb
adc
jae
fmuls
mov
push
mov
xchg
lock
lock
in
mov
fildll
pop
cmpsl
push
shl
shrb
shl
lods
jecxz
or
inc
gs
ret
lock
push
lcall
jb
mov
repnz
and
sarb
cmp
pop
mov
mov
sub
insb
aas
addr16
and
push
das
xor
ret
inc
sbb
dec
sub
mov
or
push
stc
push
outsl
xchg
iret
pop
mov
jecxz
lods
lahf
push
inc
jle
cmp
jb
mov
adc
or
inc
xchg
stos
and
or
ss
push
stc
sbb
imul
sbb
lret
adc
xor
add
jae
and
cmp
cld
sti
cwtl
fiadds
jmp
pop
data16
push
sub
push
dec
sub
and
add
das
inc
dec
push
mov
jp
pop
mov
cmp
mov
cltd
sbb
push
cmp
or
jecxz
jecxz
dec
xor
movsl
xlat
sbb
or
lds
push
cltd
fnstsw
jmp
jae
test
pop
adc
stc
sbb
sub
mov
scas
sub
ss
cmp
mov
xchg
dec
nop
xor
sbb
int3
dec
lret
jl
movsl
xchg
and
enter
jmp
jp
jae
sbb
addl
bt
xchg
les
sub
int
stos
pop
in
int
inc
popa
icebp
out
and
sub
test
mov
out
in
cmp
add
mov
sub
pop
adc
les
icebp
insl
ss
outsl
testl
adc
cmp
xchg
stos
xchg
pop
rorb
cmp
xchg
jae
neg
mov
shlb
insb
jnp
adc
cmc
inc
int
sub
mov
mov
repnz
rolb
int
lcall
pop
out
adc
mov
or
mov
ljmp
mov
ja
jnp
push
lods
cmc
aad
fsubrs
fstps
mov
rorl
add
cmp
cmc
cmc
movsb
lahf
outsb
xlat
sahf
pop
fiaddl
lock
ret
bnd
xchg
test
cltd
xchg
ja
fsubl
mov
test
addr16
out
jmp
push
xchg
sahf
push
add
inc
mov
icebp
pop
mov
int3
or
push
into
jae
cwtl
xchg
subb
incl
pop
mov
jne
scas
push
xor
or
dec
xchg
int
imul
rorl
adc
push
call
cmpb
loope
mov
popa
add
dec
xchg
xor
cmp
mov
cmp
bound
adc
loopne
cmp
inc
outsb
inc
icebp
out
mov
sub
jl
dec
sbb
mov
das
lahf
leave
mov
cmp
push
mov
lcall
xchg
or
cmp
mov
lods
cld
scas
mov
outsb
les
imul
lods
cmp
push
mov
hlt
mov
pop
pop
cmp
add
or
mov
insb
fwait
mov
mov
mov
mov
aaa
lea
js
dec
jns
xchg
push
push
sub
push
dec
cmp
jb
fisttpll
dec
pop
ficoml
cltd
cmp
out
dec
ret
fdiv
pop
das
sub
scas
sbb
stos
popa
loope
shll
lcall
lds
je
orl
push
cltd
or
sbb
sahf
lds
pop
test
ljmp
sub
fstps
iret
sub
or
push
pop
fildl
xor
push
mov
xor
jmp
xchg
push
mov
ljmp
pop
or
ljmp
jne
rolb
jmp
sar
push
sbb
push
and
rsm
xor
inc
mov
pop
aas
mov
out
add
push
mov
mov
cmc
fnstsw
movsb
loope
scas
jle,pt
loopne
pushf
sbb
jl
jnp
iret
and
mov
dec
mov
sub
push
movsb
sbb
and
push
int
movsb
outsb
xor
movsb
mov
mov
jecxz
sub
push
nop
sahf
mov
xchg
fadd
nop
mov
scas
outsb
push
push
jno
sti
int3
add
push
imul
jg
test
in
xchg
imul
push
inc
mov
dec
sbb
cmp
xlat
jb
jo
sbb
popa
sub
push
adc
xchg
mov
scas
andl
icebp
out
int3
into
mov
dec
ss
add
or
mov
mov
sbbb
jnp
push
fiadds
ja
or
arpl
cmp
push
call
ret
sub
movsl
sub
pop
jo
cmp
cmc
mov
test
mov
int
push
insl
pop
dec
and
in
dec
push
adc
mov
mov
les
inc
lods
jecxz
jp
jl
mov
ret
loopne
mov
pop
js
xor
jg
dec
pusha
cmc
add
mov
xchg
mov
push
int
push
loope
aas
test
enter
add
loop
dec
pop
xor
dec
mov
sub
jl
adc
sti
loopne
mov
out
test
sti
cli
iret
pop
jge
out
mov
xor
xchg
shrl
add
inc
in
or
lahf
in
into
ss
jno
mov
mov
push
dec
pop
incb
cmp
fadds
ljmp
stos
pop
addr16
sahf
push
mov
rorb
xchg
in
sarb
roll
push
xor
xchg
mov
adc
cmp
xchg
cmpsl
testb
hlt
xlat
pop
lock
inc
cs
repnz
mov
or
call
push
movsl
dec
push
mov
fsub
pop
movsb
mov
pop
dec
icebp
aas
lahf
jge
mov
adc
ss
dec
xor
xor
mov
mov
dec
lock
imul
push
popf
sub
mov
icebp
xor
mov
adc
pushf
arpl
test
into
dec
sbb
dec
aad
cwtl
out
fiaddl
xchg
adc
fnstcw
xlat
mov
fwait
cmp
std
cmp
imul
jmp
sarb
mov
add
mov
sbb
cwtl
nop
cmc
jno
test
fcmovbe
mov
push
cmp
mov
out
test
pop
loope
dec
inc
pop
push
insb
popa
aad
call
cmp
loopne
shlb
pop
jno
cmc
je
pop
das
adc
fwait
mov
mov
mov
or
repz
roll
xchg
imul
add
jp
stc
popa
js
push
dec
pusha
notl
and
movsb
outsl
xor
dec
push
inc
out
loopne
cmpsl
das
push
arpl
mov
pushf
dec
and
ret
divb
pop
insl
jne
mov
push
test
unpckhps
pop
and
movsl
add
pushf
jb
and
xor
inc
xor
out
and
inc
shlb
lods
imul
pop
js
lcall
push
add
xchg
push
cmpsl
pop
mov
shl
es
sub
sub
or
les
fld
mov
push
jbe
cmpsl
lret
into
or
inc
push
dec
adc
repnz
xchg
dec
lahf
sarl
fs
pop
add
mov
in
fcomip
aaa
mov
or
jp
sbb
cmp
aam
cmp
sub
and
xor
sub
pop
lea
add
xor
jl
push
cmp
sbb
xor
add
arpl
lret
addr16
mov
lods
jo
in
mov
aaa
scas
pop
sub
fprem
inc
fs
mov
xchg
inc
test
pop
xlat
jle
pop
and
cltd
call
outsl
jmp
insb
dec
push
jle
shl
nop
sarl
lret
inc
jns
lds
mov
out
test
icebp
adc
movsb
cmp
test
mov
xchg
das
aas
adc
cld
mov
or
mov
cld
stc
fistpll
xor
repz
hlt
jmp
push
jne
pop
std
and
movsb
and
out
fisttpl
xchg
aam
loop
loop
push
mull
in
subb
and
jne
mov
pop
cmc
mov
sti
ficompl
mov
and
dec
jmp
mov
sbb
pop
in
sbb
roll
loope
xor
out
es
loope
adc
mov
xchg
ret
repz
mov
lock
cmpsl
aam
inc
mov
mov
add
inc
xlat
jg
fsub
and
jbe
pop
cmp
rolb
imul
mov
pop
cmc
icebp
jb
push
add
mov
out
addr16
push
outsb
int3
std
test
in
cmp
mov
xchg
adc
mov
imul
inc
lods
arpl
xor
xor
aaa
movsb
push
mov
fcom
jnp
cmp
popf
or
add
icebp
stc
outsb
test
fwait
and
mov
mov
add
fcoms
arpl
in
jno
sbb
cmp
ret
fiaddl
mov
xorl
sub
pop
xchg
cmpb
sub
fsubl
stc
ja
xchg
xchg
out
xchg
scas
xlat
push
call
mov
fadds
mov
negb
cmp
ret
in
xchg
mov
movsb
push
and
cwtl
mov
pop
pop
mov
sub
sbb
mov
xchg
ficoms
inc
int3
add
aam
push
mov
and
bound
lods
cmc
int3
ja
and
dec
add
pop
mov
mov
push
rcrb
lods
xor
push
xchg
aas
test
mov
pop
fstl
pop
mov
and
mov
outsb
push
adc
mov
xchg
stos
shlb
jbe
shlb
mov
or
add
jae
lods
xor
add
daa
jl
cmp
mov
stos
std
dec
pop
call
into
xor
adc
mov
pop
sbb
leave
dec
shrl
dec
mov
lret
cmp
jl
out
mov
out
into
or
insl
loop
and
out
dec
mov
mov
jmp
aaa
xor
push
xor
pop
push
inc
or
xchg
inc
mov
add
push
incb
sub
pop
js
popa
out
scas
fldl2e
lock
into
bound
lcall
xchg
jle
adc
jmp
xchg
mov
imul
jb
add
in
jne
pop
jnp
cmp
rorl
mov
ret
mov
pushf
xor
mov
ret
and
pop
icebp
pop
fcmovnu
lahf
test
loop
sub
arpl
and
loope
sbb
ds
mov
pop
or
jne
jl
and
jne
pop
xor
cld
fisubs
cld
dec
push
out
push
xor
outsb
mov
test
arpl
xor
sbb
out
mov
rcrl
mov
xchg
or
enter
clc
cmc
andl
stos
mov
dec
and
sub
into
fsub
std
je
jnp
sub
or
gs
insb
popa
in
inc
sbb
shrb
mov
adc
pop
cli
into
or
ror
outsl
sbb
pop
or
insb
movsb
fstps
adc
in
mov
jbe
pop
int3
adc
pop
out
fidivs
pusha
xor
rcl
repnz
jecxz
xor
dec
clc
inc
std
or
scas
push
xchg
jbe
lahf
sub
cwtl
dec
dec
adc
fcoml
dec
jne
nop
jns
lock
shll
xor
call
pop
cmp
cmp
mov
jge
mov
mov
push
cmp
add
sub
mov
aad
jnp
xchg
dec
mov
fbld
cmp
sub
sbb
push
inc
fisubl
lods
adc
mov
xor
rol
mov
shlb
icebp
mov
js
mov
pop
cmp
fcoml
sbb
xor
dec
push
xchg
pop
jnp
imul
push
scas
adc
cld
fnstenv
push
das
jo
dec
pushf
and
in
scas
mov
dec
stc
rclb
mov
or
roll
push
lret
jns
inc
leave
jb
mov
cld
inc
and
inc
dec
clc
das
mov
xlat
in
adc
dec
push
xchg
sub
pop
xchg
daa
mov
or
push
daa
ljmp
rcrb
enter
mov
push
mov
pop
addl
sub
mov
fldt
mov
outsl
adc
xor
push
pop
dec
mov
mov
decl
push
xchg
jge
pushf
sub
xrelease
aam
jmp
idivb
clc
jns
std
leave
int3
lods
es
mov
xchg
sti
inc
arpl
fcoml
cltd
adc
ss
sar
add
cmp
push
mov
arpl
stc
in
ja
jg
push
adc
stos
push
clc
add
ss
stos
xor
xchg
pop
out
push
xchg
int
mov
hlt
push
jno
push
rorb
inc
and
ja
pop
sbb
aam
mov
push
add
pop
in
lods
clc
push
iret
fistpl
shlb
rclb
cmc
mov
pop
or
iret
sbb
lock
pop
fidivs
push
pop
lret
jge
ret
sti
push
jg
xchg
fwait
adc
into
cmp
jb
xchg
mov
pop
add
adc
repz
sahf
sbb
enter
sbb
jle
dec
jae
mov
xor
lcall
stos
test
adc
sub
arpl
shlb
push
add
cltd
xchg
pop
dec
addl
sbb
ljmp
xlat
gs
insl
loope
and
sbbl
sahf
imul
cli
stos
sti
int3
aad
jnp
or
push
jnp
push
mov
or
adc
outsl
cld
push
movsl
sbb
inc
bound
adc
cmp
mov
int3
in
push
std
out
inc
in
lret
shrl
mulb
mov
je
outsb
hlt
adc
xor
or
jp
adc
lcall
fiaddl
pop
push
sbb
push
push
cmp
fldt
adc
std
out
jle
xor
in
rcrl
and
xchg
mov
in
mov
dec
sbb
cmpsl
fistpl
out
fs
ror
mov
bound
pushf
out
repnz
jnp
and
sub
fsubl
aas
sbb
push
dec
sub
mov
test
sub
sahf
jmp
popa
jmp
fisubl
pop
or
cmp
out
sbb
lock
inc
clc
rorb
arpl
jmp
jbe
sahf
sub
adc
sub
stc
inc
in
xchg
lock
sarl
out
adc
mov
cltd
ljmp
pop
add
or
shl
imul
mov
subb
and
and
jp
jge
push
sub
insl
pop
xlat
mov
push
jo
or
in
dec
stos
sahf
lock
nop
leave
cmp
inc
dec
jge
jns
and
or
in
fistl
mov
dec
push
lcall
push
test
pop
cmp
in
pop
or
xchg
jno
inc
and
out
mov
roll
xchg
movsl
nop
adc
pop
xchg
imul
jo
push
cld
cltd
xchg
dec
xchg
sub
push
sbb
cmc
add
or
psubsw
outsb
xchg
and
push
fsubp
add
addl
pushf
cltd
mov
cmpsl
jb
xchg
adc
cmpsl
adc
sbb
dec
imul
mov
sub
or
push
xchg
test
jae
sbb
and
rcl
icebp
aaa
xlat
andb
js
int
mov
xchg
out
inc
fs
dec
fs
or
in
xor
loopne
xchg
pop
dec
clc
mov
push
fsubrl
inc
loop
int3
loope
or
mov
and
push
outsl
rcl
inc
pop
outsb
pop
cmp
fdivs
pop
dec
push
call
and
in
movsl
xor
inc
test
fcoms
aas
cli
cmc
bound
test
sarb
cmpsl
les
inc
jne
inc
pop
mov
inc
fmuls
mov
stc
lret
js
or
inc
out
cli
bound
add
ljmp
inc
rcrl
push
pop
dec
in
clc
inc
out
mov
add
mov
cmp
add
cmp
jne
adc
test
cmc
loope
lahf
lret
pop
jle
mov
xor
sub
aas
jecxz
mov
and
cmp
pop
cmc
cmp
xchg
data16
adc
inc
das
xchg
loope
nop
jnp
loopne
stos
xchg
dec
push
mov
loope
adc
and
dec
or
test
test
ds
js
mov
xor
mov
xchg
cmp
jmp
cmpsb
ds
push
or
cmp
add
mov
loop
cmp
in
xchg
cmp
mov
xor
cld
mov
cmp
aad
mul
dec
bound
push
mov
test
pop
push
mov
int
sub
repnz
testb
lret
cwtl
mov
out
mov
mov
sub
mov
out
movsb
sti
jp
les
adc
in
aas
or
addl
xor
dec
int3
leave
mov
lcall
or
inc
mov
movsl
sub
vunpckhpd
lret
out
sub
and
jne
clc
pop
mov
iret
or
and
mov
mov
rorb
icebp
push
cmp
arpl
jb
push
sbb
push
jecxz
jbe
lret
mov
sub
xchg
pop
mov
cwtl
notl
in
out
mov
or
out
inc
insb
js
jge
xor
loop
sbb
or
add
ret
lods
or
jo
scas
dec
and
xchg
dec
iret
and
fisubl
pop
push
xchg
test
add
lret
test
imul
fwait
ret
add
in
jae
inc
mov
rcrb
jecxz
pop
negb
imul
sbbl
pop
jg
lock
lods
shrb
xor
jp
sub
out
add
pop
mov
push
out
mov
test
outsb
pop
adc
iret
js
test
cli
loope
cwtl
mov
dec
cmp
sbb
fidivrs
into
inc
sbb
cld
pop
int
lds
mov
mov
push
popf
push
xchg
icebp
jp
repz
test
sub
sub
rclb
push
adc
ss
jmp
mov
test
and
sub
mov
lea
loope
jbe
in
add
sub
mov
pop
ret
sahf
xchg
jb
aaa
ljmp
xchg
int3
dec
dec
loopne,pn
sbb
jge
inc
das
test
jl
push
lahf
lds
sub
jnp
pop
adcb
sub
enter
jg
fidivrl
push
push
lods
in
xchg
lret
pop
cmp
dec
pop
push
mov
stos
stc
out
outsl
cmp
xor
jmp
mov
std
mov
xchg
scas
imul
cwtl
lea
dec
out
in
adc
jns
sbb
sbb
cmc
mov
sub
mov
inc
push
cmpl
repz
or
into
mov
in
pop
pop
push
addl
subl
add
psubw
push
jl
xor
sbb
xchg
outsb
xor
sbb
shlb
scas
mov
fs
out
gs
pop
or
add
or
mov
outsb
push
mov
push
aaa
sbbb
stc
test
adc
enter
pop
or
mov
inc
mov
xor
or
popa
adc
shlb
fmull
dec
das
notb
mov
xchg
mov
push
imul
mov
cmp
jno
adc
into
sbb
stos
addb
icebp
pop
dec
lret
and
call
arpl
sub
push
test
add
pop
jbe
pop
pop
into
icebp
scas
movsl
add
adc
mov
rol
jle
insb
mov
outsb
push
cltd
int
mov
and
shl
cmpsb
stos
mov
push
pop
icebp
mov
pop
loop
inc
insb
adc
outsb
xor
mov
jp
leave
jbe
xor
xchg
fmuls
sub
shll
fbstp
add
in
enter
and
dec
sub
cltd
add
es
cmp
test
lret
or
jp
cmp
add
xchg
fcomi
pop
mov
lock
frstor
fisubl
stos
insb
xchg
inc
push
jmp
loopne
sbb
cmp
mov
ret
cmp
jbe
jge
add
iret
and
mov
fld
jp
fsubs
stos
arpl
div
mov
mov
test
insb
and
aad
lea
fsubs
xchg
pushw
aas
aaa
mov
jg
test
push
data16
xorl
add
hlt
mov
lret
xchg
out
test
jl
lods
and
or
popf
je
jnp
incl
out
dec
jl
fistpl
js
in
push
lahf
insl
scas
imul
movsl
popf
jo
clc
das
ja
movsl
test
stos
inc
cmp
scas
movsb
cltd
push
cltd
pop
push
xor
or
xchg
int3
cli
cmc
inc
push
das
rclb
push
cltd
pop
add
int3
mov
cmpsb
mov
cmpsl
inc
scas
dec
push
jnp
clc
xlat
lret
adc
sbb
mov
sub
or
addb
icebp
les
data16
lea
adc
iret
lret
into
cmp
aas
sbb
jo
jnp
daa
out
jecxz
sub
sbb
pop
clc
loopne
xchg
xchg
add
and
ja
xchg
mov
mov
scas
push
mov
push
fcmovbe
jle
rcll
push
dec
adc
mov
xor
shr
cmc
shlb
mov
faddl
cmp
pop
mov
das
dec
adcl
add
jno
sub
inc
mov
sbbb
push
bound
cmpsl
sarl
hlt
stc
add
cmpb
adc
xor
jg
fs
sub
scas
xchg
dec
popa
jbe
int
sbb
enter
jb
cmpsb
popa
add
loopne
inc
fmulp
repnz
in
fwait
cmp
shrl
jno
call
dec
aas
adc
sub
aad
or
call
scas
add
in
lods
jb
adc
repz
or
mov
movsb
subb
cmp
fidivl
dec
adc
decl
or
in
test
pop
push
sub
mov
and
arpl
add
pop
mov
or
pop
xor
mov
dec
ljmp
cmpsb
das
push
cmpsl
pop
mov
movsl
lods
xchg
stos
dec
je
jmp
and
push
xor
add
cmp
cmpsl
aaa
adc
jno
cmp
pop
jp
shrl
loopne
fisubrl
dec
cmp
repnz
jns
mov
out
cmp
xchg
das
adc
data16
and
dec
dec
push
outsb
hlt
mov
and
push
pop
shll
cmp
jae
ret
sbb
cmc
int
and
in
xor
les
ficompl
mov
push
fisubl
mov
outsl
inc
mov
ss
inc
mov
aad
xor
inc
iret
pop
mov
and
xor
mov
mov
dec
inc
int
mov
in
lods
push
sub
sbb
xor
xchg
adc
dec
and
xchg
inc
cld
aad
cmp
repnz
and
stos
cltd
rcrl
cwtl
mov
lods
leave
in
out
mov
out
adc
dec
and
cmp
arpl
mov
mov
icebp
addr16
xchg
fsub
div
mov
test
or
mov
cmpsl
jl
ds
call
inc
das
mov
and
in
push
add
clc
mov
mov
sbb
cltd
stos
xchg
add
xchg
mov
jne
pop
mov
lcall
insl
or
push
movsl
subb
dec
scas
and
nop
inc
out
jg
xchg
pop
in
xchg
cmpsl
pop
shr
insb
sbb
jbe
mov
clc
mov
jge
out
stos
cmp
inc
or
out
dec
mov
jnp
cmp
sbb
pop
fidivrs
sbb
add
and
stos
or
or
and
xchg
divl
sbb
inc
adc
imul
mov
mov
xchg
loope
lock
sahf
popa
pop
push
outsl
into
in
xlat
cmc
clc
sub
pop
push
xor
repnz
repnz
inc
cmp
or
push
mov
jle
dec
gs
out
in
xor
movsb
test
in
cmpsb
jns
mov
pop
push
adc
cli
pop
or
adc
fsubl
cmp
dec
xchg
dec
fwait
xchg
imul
lret
push
data16
adc
out
jno
xchg
das
cmpsb
mov
mov
.byte
scas
fmuls
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
call
xor
xchg
pop
add
and
pushf
movsl
push
xor
pop
pop
call
adc
div
fs
xchg
ror
into
out
cld
test
pop
sbb
add
mov
mov
sub
pushl
jmp
jae
test
pop
movzwl
sub
push
xor
pop
xor
or
sub
jb
mov
mov
push
and
pop
sub
mov
add
sub
jne
mov
jmp
xchg
sahf
jg
xchg
call
adc
in
add
push
dec
dec
outsl
jl
mov
pop
jmp
mov
pop
lods
jne
push
or
shl
mov
outsl
ret
mov
mov
pushf
xchg
fcomps
or
rcrb
data16
jne
inc
mov
dec
mov
mov
cmp
mov
leave
fimuls
daa
or
ror
dec
loop
daa
mov
rolb
mov
dec
ret
sarl
shlb
lods
dec
stos
fwait
bound
cmpsl
dec
adcb
cmp
add
scas
shlb
or
pop
mov
or
push
ds
mov
sub
ss
push
lret
jle
dec
pop
mov
push
daa
inc
scas
xchg
dec
add
pop
mov
popf
es
daa
or
push
ljmp
pop
xor
pop
das
es
jecxz
dec
fildll
xchg
mov
stos
jl
iret
daa
fiaddl
mov
in
and
lret
mov
lcall
cmp
test
dec
push
mov
imul
mov
dec
inc
push
insb
xor
push
insl
jne
xchg
loope
sub
add
mov
daa
pusha
mov
insb
std
int
or
cltd
jecxz
inc
mov
and
pop
outsb
pop
int
insl
mov
sub
rorl
pusha
mov
pop
in
push
inc
mov
test
and
push
fiadds
push
fwait
jecxz
movsl
in
das
cmc
cmpsb
and
data16
ljmp
in
data16
std
lods
je
xor
xor
insb
adc
cli
jb
cmpsb
and
jo
nop
into
lds
jae
dec
adc
mov
dec
insb
cmp
push
popa
adc
cmp
or
add
jne
cld
bound
lahf
ret
push
cltd
adc
dec
mov
cmp
xor
call
add
lods
pop
les
stos
negl
fildll
cltd
jns
les
xchg
test
sub
push
stos
popa
mov
in
or
shll
call
dec
insb
adc
pusha
sbb
push
imul
nop
dec
insb
test
push
jbe
mov
add
ret
mov
insl
pusha
mov
xor
mov
pop
int3
loopne
mov
push
aam
pop
int3
or
inc
data16
pusha
sub
inc
dec
fcmovnbe
incb
cld
add
imul
jle
pop
pop
rcl
std
add
inc
mov
imul
mov
fdivrp
pusha
int
add
push
push
fmul
outsl
stos
pop
gs
mov
shr
cmp
add
mov
lock
pop
int3
jge
cld
dec
test
stos
cld
xor
fisubrs
movsl
pop
mov
jge
movsb
mov
or
enter
mov
std
arpl
inc
stc
pop
xor
cmp
push
and
inc
sub
scas
mov
xor
mov
sub
mov
push
sbb
mov
stc
mov
aas
dec
sbb
inc
shl
mov
sbb
lods
dec
push
enter
mov
fwait
mov
sbb
fwait
inc
dec
lds
dec
insb
mov
push
inc
mov
sbb
cld
mov
fwait
mov
mov
pop
fwait
mov
sbb
mov
mov
and
jno
xchg
lods
sbb
dec
pusha
push
pop
stos
mov
notb
fwait
inc
sbb
stc
lret
fwait
sub
mov
sbb
lahf
cmp
xchg
hlt
adc
push
mov
shrb
mov
mov
scas
das
jo
push
fwait
sub
mov
sbb
add
pop
xor
daa
cmp
daa
outsl
pop
mov
sbb
scas
mov
lea
jnp,pn
scas
je
fwait
mov
xor
or
sub
cs
adc
mov
sbb
cmp
mov
xchg
or
adc
ljmp
jg
hlt
cld
pushf
sahf
pause
xor
daa
outsl
repz
sbb
fwait
mov
int3
mov
cmc
push
fwait
sub
mov
ret
cmc
push
fwait
sub
cmp
inc
mov
lods
and
sub
mov
fwait
mov
outsl
lock
sbb
cmpsl
lods
sbb
inc
inc
sbb
inc
and
inc
lock
dec
push
pop
sbb
sbb
push
mov
sbb
fwait
mov
gs
inc
pop
mov
test
ret
mov
sub
xor
sbb
aam
mov
es
into
test
loopne
in
sbb
aam
fstpl
pop
fwait
sahf
aam
scas
es
into
and
cmp
fidivrl
push
in
jle
sbb
sbb
aam
negb
mov
icebp
outsl
int
rclb
cmp
adc
jle
sbb
sbb
aam
int3
pop
shlb
fwait
mov
out
mov
push
in
jle
sbb
sbb
aam
int3
pop
lea
xchg
pusha
sbb
test
cmp
sar
mov
sbb
mov
jg
sub
mov
lds
adc
and
mov
sbb
fwait
mov
lea
xchg
and
fwait
mov
cmc
mov
cltd
xchg
dec
adc
cmp
mov
xor
fcmovnb
and
test
sarl
ret
data16
xchg
dec
adc
shlb
and
add
hlt
mov
sbb
mov
sbb
fwait
jne
pop
pushf
mov
dec
lret
fwait
mov
cs
fisubrs
cmp
pop
sub
cmp
lahf
sbb
outsb
jno
sbb
sbb
fwait
pop
jne
scas
pop
pop
pop
and
add
cmp
aaa
xor
andb
es
dec
aam
sbb
fwait
jecxz
imul
mov
adc
cmpb
mov
fnstenv
mov
lea
mov
sbb
lods
xor
ss
ljmp
xchg
movsb
push
add
leave
movsb
shll
sti
call
xor
mov
sbb
fwait
mov
sbb
fwait
mov
sbb
fwait
mov
sbb
fwait
mov
push
cmp
mov
sbb
fwait
mov
sbb
push
adc
pop
dec
mov
sbb
fwait
mov
sbb
fwait
mov
and
sti
inc
int3
lods
popf
lods
int
sbb
push
xor
xor
cmp
imul
mov
call
out
test
pop
mov
aam
mov
mov
sbb
push
pop
mov
ljmp
push
scas
sub
push
inc
mov
sbb
cwtl
cmp
sub
jge
mov
outsl
popf
jae
loopne
mov
mov
inc
mov
cmpsl
insl
addl
dec
sub
test
cmpsb
sbb
rcr
add
les
xchg
aas
xchg
lret
jge
outsb
mov
xchg
inc
popf
mov
out
jmp
loope
add
testb
mov
sbbb
add
lock
in
add
mov
xor
stc
cmp
nop
in
jo
dec
leave
cwtl
fcomp
mov
or
popf
jbe
mov
sbbl
adc
scas
xchg
pop
mov
cmp
lds
shll
iret
xchg
inc
jg
add
mov
loope
in
out
mov
adcl
dec
movsl
jl
and
sbb
out
repz
xchg
pop
fstpt
mov
aaa
pop
sbb
jnp
test
xor
push
pop
ja
gs
test
das
jle
mov
pop
sbb
fcomp
cmp
dec
push
or
js
and
stc
inc
call
in
incl
pop
mov
cld
xor
cmp
les
scas
xorb
and
dec
fdivrs
pop
or
pusha
xor
adc
and
es
pop
in
xchg
inc
lea
inc
inc
in
loop
mov
stc
mov
add
popf
test
popf
cwtl
out
leave
dec
xchg
jno
fstps
push
cltd
popa
and
and
ljmp
jno
sbb
add
arpl
mov
add
mov
cmp
pop
cwtl
nop
test
nopl
testl
inc
sub
inc
push
es
inc
repnz
test
add
push
sub
orb
in
sahf
push
repz
cwtl
or
scas
bound
icebp
push
inc
sbb
iret
push
sbb
dec
xor
rorb
mov
out
adc
call
xor
xor
mov
mov
jb
jmp
cmc
mov
adcl
lock
sbb
addb
std
mov
xchg
repnz
xor
push
lret
sub
xchg
cmc
push
in
mov
roll
mov
or
cmp
adc
mov
hlt
rclb
or
jne
fdivl
jle
add
add
or
add
add
inc
add
inc
add
cld
add
cmp
add
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
cld
add
hlt
sti
add
and
add
xchg
std
add
das
std
add
popf
std
add
cmp
add
movsl
std
add
dec
std
add
lods
std
add
push
std
add
mov
add
popa
std
add
mov
add
add
add
add
add
int
add
mov
add
aad
add
jne
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
std
add
add
add
out
std
add
add
add
add
add
add
add
adc
add
add
add
and
add
add
add
xor
add
add
add
inc
incb
add
add
add
add
add
add
insl
incb
add
add
add
add
je
gs
outsl
popa
jb
push
jns
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
jae
jb
gs
je
imul
gs
gs
popa
insb
jne
inc
js
add
add
jae
popa
addr16
outsl
js
add
add
popa
jb
push
gs
imul
push
popa
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
push
add
add
push
aas
add
add
add
add
add
add
add
adc
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
in
add
add
add
add
xor
cmp
xor
xor
inc
add
add
dec
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
sub
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
outsb
add
jb
imul
dec
add
jae
je
and
push
add
outsl
add
add
jae
and
data16
jb
and
push
add
outsb
add
add
add
add
add
jbe
imul
jae
add
cmp
push
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jo
arpl
jae
add
js
add
add
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
jb
jo
arpl
jae
add
js
add
add
add
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
and
add
add
call
add
adc
add
add
sub
add
add
in
sub
add
adc
add
and
add
add
add
add
add
rolb
add
add
add
mov
add
mov
mov
rolb
addb
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
incl
incl
incl
incl
incl
incl
incl
mov
inc
inc
lock
inc
addb
ja
mov
mov
add
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
mov
add
mov
mov
rolb
addb
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
xchg
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
mov
mov
ja
ja
ja
ja
ja
ja
ja
xchg
inc
inc
inc
inc
inc
inc
inc
add
add
addb
inc
inc
inc
inc
inc
jo
pop
jo
xchg
inc
inc
inc
inc
inc
inc
inc
jo
pop
jo
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
addb
ja
ja
ja
ja
ja
mov
mov
mov
add
incl
add
add
jmp
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
scas
add
clc
mov
push
push
add
add
add
inc
repnz
adc
mov
sbb
cmp
mov
mov
sahf
jl
leave
les
enter
or
sbb
inc
and
dec
stc
data16
int
rclb
push
fwait
and
sahf
sti
test
jl
mov
adc
arpl
mov
test
dec
pop
jnp
dec
dec
jge
ss
xor
repnz
data16
dec
inc
enter
ret
inc
adc
pop
mov
jl
scas
sub
sbb
into
xchg
test
je
jnp
stos
inc
test
fimull
insb
mov
mov
imul
cmp
test
rclb
dec
test
pop
or
out
mov
push
rclb
push
push
sub
addb
adc
repnz
mov
push
mov
lret
in
or
call
in
pop
push
in
scas
adc
fistl
mov
sbb
fisubrs
sbb
adc
push
pop
add
faddl
lock
adc
mov
cmpsb
pop
bound
sub
negl
and
sub
inc
xor
jbe
loope
cs
cwtl
push
jp
xlat
lret
fdivs
int3
leave
repnz
add
js
sbb
and
loop
jmp
aaa
jl
aaa
aam
mov
xor
push
push
nop
mov
sub
shlb
cmc
addr16
test
out
cmp
clc
push
push
test
or
pop
mov
arpl
sub
push
orb
adc
and
add
jno
es
mov
insb
jne
scas
pop
shlb
sub
mov
jp
pop
bound
std
loop
xchg
xchg
cmpsl
push
pusha
jle
je
hlt
stc
in
dec
sarl
mulb
mov
jnp
jge
lea
add
cmp
rcl
lahf
sub
xchg
jge
test
andb
pushf
int
jp
cmpsb
inc
and
dec
movsl
sub
int3
push
jno
push
or
and
push
push
xchg
fisubrl
hlt
sbb
adcb
pop
add
dec
fwait
or
ret
pop
lret
lret
dec
sub
out
adc
push
or
jae
push
sbb
pop
inc
dec
adc
cmc
xchg
mov
xchg
ret
lret
sub
out
xchg
adc
adc
push
pop
xchg
mov
and
mov
mov
adc
mov
fisttps
dec
das
test
mov
cmp
jnp
xchg
sti
es
add
xchg
jbe
sti
push
jl
or
sbb
sbb
out
jns
add
insb
mov
lea
nop
sbb
mov
ret
stc
int3
sub
jmp
xor
mov
std
sub
adc
mov
xor
aaa
or
sbb
pop
inc
push
xor
push
cmp
ljmp
scas
call
lods
orl
push
and
and
in
mov
pop
or
ljmp
mov
outsl
lods
and
mov
xor
jl
sbb
mov
xchg
ret
outsl
sbb
rcrl
dec
xor
test
insl
or
lods
movsb
aam
and
cwtl
imul
sbb
or
aas
in
jle
mov
inc
jns
and
jl
sarl
dec
xor
cmpl
lret
int
mov
aaa
cmp
adc
and
enter
jnp
pushf
stc
unpckhps
dec
pop
mov
popa
mov
push
ret
mov
aad
imul
call
divb
jle
outsb
aaa
mov
mull
adc
into
movsb
and
jnp
adc
paddsb
setne
or
adc
sub
lahf
in
sbb
daa
lret
pop
mov
dec
popf
dec
popf
pop
sbb
scas
inc
cld
xchg
push
inc
dec
pop
call
ror
aas
fstpl
sbb
nop
hlt
outsl
inc
pop
sbb
add
jns
dec
cwtl
jae
add
fs
cmp
mov
inc
lahf
aad
iret
popa
xor
ds
lock
cmp
sbb
call
push
or
subl
pop
mov
push
leave
jecxz
mov
int3
roll
sub
xchg
fisttpl
push
sbb
mov
shrb
gs
inc
lods
pop
je
std
shll
jg
roll
neg
leave
lea
push
lods
in
iret
shlb
in
sahf
xchg
pop
mov
clc
ret
adc
jg
ss
in
fs
into
mov
pop
in
jmp
jmp
mov
int
xchg
inc
jbe
xlat
add
jb
adc
cmp
out
movsb
inc
fcomi
in
jmp
cmp
fildl
loopne
dec
pushf
fstl
out
mov
gs
pushf
xor
rclb
test
mov
pop
cltd
cwtl
in
add
adc
arpl
push
dec
push
je
xchg
mov
in
lds
xchg
dec
mov
and
xor
jge
clc
lret
mov
hlt
rcrl
adc
cmpsb
out
dec
les
cmp
ret
mov
jl
lahf
leave
imul
bound
xlat
pop
mov
cmpsl
jnp
stos
mov
inc
sub
mov
mov
xor
in
idivb
inc
cltd
pop
filds
lcall
xor
cld
das
pop
xchg
mov
push
pop
push
pop
jo
mov
mov
pop
xchg
fsub
rolb
shlb
mov
push
jns
xor
push
scas
push
scas
icebp
inc
les
lret
cli
test
lahf
stos
add
loope
jecxz
jnp
aaa
jnp
and
inc
jge
mov
daa
lock
into
jo
mov
cmpsl
nop
insl
mov
out
mov
pop
jg
jno
inc
xor
dec
jp
xchg
stc
sbb
push
xchg
popl
lret
loopne
imul
jmp
int3
js
mov
mov
jb
push
in
out
pop
mov
lahf
fsubrs
pop
popa
jnp
xchg
push
enter
add
addb
push
fdivl
push
lea
or
sub
imul
add
fwait
mov
cmpb
bound
inc
repz
sbb
sub
test
inc
xor
jne
or
lea
lcall
sahf
jmp
iret
fldcw
pop
push
cmp
mov
pop
or
stc
aam
jg
mov
das
dec
pop
cmp
out
psadbw
jl
ss
mov
mov
pop
test
sbb
dec
mov
lods
lea
call
adc
sub
roll
rcl
pop
hlt
xor
outsb
jb
xor
sbb
or
in
inc
xchg
pop
aaa
ds
ret
push
lcall
lds
lret
jbe
aaa
cmp
dec
stos
test
das
clc
ret
mov
xor
out
inc
insb
rclb
dec
jnp
daa
popa
pop
ret
cmc
inc
cwtl
or
inc
jne
nop
xchg
cmp
add
and
xchg
inc
pop
dec
scas
out
or
je
leave
push
pop
xchg
push
mov
add
into
lahf
inc
icebp
outsb
out
sub
push
fdivr
adc
inc
lods
push
jne
scas
dec
test
in
xchg
loope
and
ret
dec
dec
je
cmp
mov
xchg
out
push
loope
jae,pt
rol
sub
ret
mov
mov
sub
lock
jl
imul
push
std
test
push
rcll
test
cmp
or
or
cmpsb
add
and
jns
lcall
mov
inc
push
aaa
pop
dec
push
or
mov
cltd
sbb
jb
testb
jno
out
sbb
loopne
dec
mov
fwait
repnz
push
lahf
add
lea
push
clc
js
iret
inc
data16
jl
dec
js
fnstcw
roll
ret
ficomps
and
xor
xchg
pop
cli
inc
jo
jmp
popf
jg
cmc
cmp
xchg
movsl
mov
xor
aaa
jb
movsb
jnp
popa
add
imul
lret
mov
or
insl
dec
or
out
sbb
loop
pop
push
cmpsl
inc
or
pop
pop
push
adc
pop
setnp
sbb
pushf
xchg
mov
daa
xor
adc
or
scas
into
mov
movsl
in
push
push
xchg
clc
loopne,pn
cwtl
jbe
aad
ds
dec
repz
lds
sbb
pop
mov
adc
sbb
hlt
dec
pop
pop
jae
cmp
mov
icebp
xchg
mov
cmp
mov
dec
arpl
add
outsb
into
xchg
jl
mov
ja
inc
inc
imul
daa
jns
xlat
shl
sbb
xlat
adc
in
xor
sub
bound
mov
add
or
nop
fstps
pop
pop
xchg
dec
fisubs
xchg
cltd
mov
mov
in
mov
lods
mov
das
push
mov
xchg
daa
cltd
jmp
adc
sub
arpl
xchg
scas
cmp
fnstenv
sbb
xchg
in
cld
les
mov
insb
outsb
shlb
xchg
fdivrp
or
jno
push
lods
adc
or
movsb
push
stos
jecxz
xchg
daa
mov
lcall
enter
ficoml
dec
fsubrl
arpl
mov
addl
mov
sti
notl
shll
sti
and
inc
and
ja
stos
fisubl
ret
lea
or
out
imul
xor
mov
xchg
sub
push
push
and
xchg
loopne
outsl
and
add
ljmp
aaa
xchg
sbb
in
push
sahf
mov
lods
push
das
pop
je
out
das
insl
sahf
dec
gs
cld
jae
movsb
or
cmpsl
subb
faddl
stos
movsl
cli
lcall
out
jb
insl
test
sarb
or
cmp
movsb
stos
int3
push
mov
arpl
pop
ja
push
xchg
cmp
mov
test
xchg
or
mov
outsl
stos
mov
enter
mov
lea
dec
bound
lods
nop
sbb
imul
mov
mov
xchg
dec
and
aam
cli
sbb
sub
aam
xorl
leave
mov
dec
aad
fcomi
hlt
jo
sub
inc
jb
xchg
icebp
xor
aas
lds
nop
outsb
mov
push
jle
outsl
imul
or
rcrb
lods
es
adc
push
pop
push
mov
jecxz
pop
and
cmp
pop
pushf
add
inc
outsb
sub
cltd
andl
cmpsl
lea
stos
mov
pop
fnstcw
ljmp
lahf
mov
dec
mov
arpl
or
movb
test
add
mov
scas
ret
inc
or
sub
mov
sub
sbb
jp
outsb
sub
inc
outsb
inc
and
jo
jl
push
xchg
sub
out
sbb
std
mov
mov
dec
pop
jne
dec
imul
rorl
test
or
jp
fbld
fwait
add
push
inc
idivb
pop
push
pop
std
jle
jge
mov
add
cmc
dec
cmc
out
insb
jl
sbb
pop
test
inc
push
jns
sbb
lods
mov
push
pop
xchg
xchg
out
adc
movsl
mov
xchg
addr16
and
std
and
fstpl
out
mov
sub
fdivrs
outsl
mov
pop
lret
pop
sar
jns
imul
pop
adc
leave
fidivs
test
rorl
test
pop
es
mov
cmp
xchg
lret
or
dec
push
push
repnz
lcall
out
cmp
shlb
stc
fs
call
push
pop
enter
jae
cmovle
roll
inc
in
mov
scas
fwait
push
insl
test
fwait
push
add
fdivr
bound
or
xchg
shl
cmp
jnp
mov
cmpb
jecxz
mov
adc
adc
mov
push
dec
xor
push
xor
je
xlat
add
xchg
push
mov
scas
pop
push
jb
jmp
dec
rcl
sbb
nop
mov
loop
mov
cmp
cmp
pop
or
shl
shlb
leave
out
sahf
mov
mov
std
and
idivl
cs
enter
adc
add
dec
popa
mov
inc
negl
jg
inc
xor
movsl
movsl
js
xchg
pop
bound
addb
js
jae
mov
fcoml
sbb
sub
inc
inc
je
mov
or
test
xlat
loopne
jle
lods
mov
call
insl
jo
lods
fcoml
cmpsb
mov
lods
test
xchg
pop
jp
cmc
jns
sub
xchg
jbe
jo
mov
and
jb
in
mov
xchg
inc
mov
mov
cld
jne
dec
enter
sbb
pop
lret
pushf
mov
xorl
mov
sbb
and
or
inc
sub
outsb
in
sahf
xor
inc
es
out
adc
dec
movsl
inc
push
cs
dec
pop
fstpl
sti
jp
adc
arpl
cs
adc
sub
push
out
daa
ret
cmpsb
mov
pop
iret
test
insb
push
sub
lods
xor
outsb
int3
jns
lcall
fmuls
fcmovnu
fdivrs
cmp
in
out
test
and
in
outsl
lods
mov
xchg
loopne
sub
dec
jae
mov
int
stos
lods
test
push
cmpl
adc
push
xor
orb
sahf
adc
icebp
inc
push
pop
and
inc
adc
rorb
daa
sti
or
sar
add
dec
divl
dec
pop
fcmovne
mov
fwait
negw
push
adc
xchg
into
push
or
ss
jg
fcomps
add
push
inc
mov
push
xor
add
addl
popf
pop
testl
sbb
cmp
adc
jmp
adc
inc
mov
shll
int
out
lock
push
je
adc
dec
icebp
and
add
cwtl
repnz
es
mov
jg
sbb
fiadds
add
dec
in
jp
xchg
or
jmp
cs
push
mov
decb
push
inc
gs
imul
adc
lea
sbb
retw
leave
addr16
xchg
push
sub
loopne
imul
mov
cmp
xor
fmull
fidivrs
sar
sbb
fcomip
jge
dec
adc
outsb
pop
lret
movsb
pushf
pop
jo
ror
lahf
fwait
movsb
add
in
add
icebp
pusha
bound
mov
cmc
lret
dec
out
loopne
push
nop
pop
sub
push
enter
and
dec
adc
add
adc
roll
or
aas
mov
sbb
enter
lods
add
fstl
imul
addr16
mov
inc
push
in
fidivl
cmp
inc
mov
lea
into
movsb
jne
ret
repnz
mov
push
pop
cli
push
dec
popf
jo
pop
sbb
lock
push
scas
fwait
jl
mov
test
mov
pop
xchg
push
cmp
mov
je
gs
cmp
mov
shll
popf
lods
lock
mov
dec
loope
repnz
fisubs
push
leave
xchg
sub
jp
gs
sbb
movsl
mov
mov
sbb
iret
push
aaa
pop
add
and
mov
xchg
test
xchg
call
loopne
lret
cmc
clc
pop
cmp
into
jmp
dec
cmp
fisubs
js
lret
jns
adcb
pop
mov
sarb
mov
xlat
imul
mov
dec
shrl
cmp
mov
mov
gs
mov
jne
mov
adc
push
sbb
push
inc
jmp
dec
jo
popa
jp
lods
mov
dec
mov
mov
push
push
push
add
popf
pusha
stos
or
inc
pop
or
sahf
xchg
shlb
aad
inc
mov
into
idivb
shlb
adc
lds
test
popf
jp
xor
sbb
fadds
mov
scas
push
sbb
cs
jne
xchg
and
xorb
inc
push
fwait
jmp
ficoms
and
inc
push
mov
xchg
dec
movsl
push
xor
sbb
jp
xchg
dec
jle
mov
mov
les
dec
mov
flds
loopne
stos
incl
mov
cmp
stc
mov
insl
orl
sub
shlb
into
push
jle
xchg
xor
outsl
sub
cmp
pop
in
pop
out
rcll
add
das
or
shll
add
xor
lret
adc
inc
pop
jmp
and
mov
cltd
cltd
mov
or
and
xchg
je
pusha
adc
dec
nop
ret
hlt
sbb
nop
push
mov
repz
cmp
jmp
mov
mov
sbb
fisubrl
inc
inc
inc
jae
cwtl
loope
scas
movsl
or
out
push
push
push
iret
or
mov
andl
and
inc
jp
fs
or
lret
shlb
sbbl
das
cmp
loopne
or
and
jle
mov
push
stos
lods
inc
xchg
lret
ds
and
in
push
inc
jecxz
add
clc
shl
dec
pop
dec
ss
in
sub
inc
sbb
mov
cmpsl
mov
adc
sbb
outsl
cmpsl
imul
lahf
sti
movsl
jne
cmpsb
fnstsw
nop
dec
movsb
lret
xchg
ljmp
adc
or
fisttps
loop
aam
mov
mov
mov
cmp
dec
inc
stc
adc
popf
faddl
ss
insl
or
pushf
mov
mov
pop
jae
or
fmulp
adc
pop
mov
popf
and
mov
mov
inc
icebp
mov
fwait
pop
add
test
outsb
jae
inc
outsl
cmp
pop
fmul
in
push
or
rolb
inc
jmp
test
outsl
sbb
fnsave
ds
xchg
inc
imul
sub
cltd
sub
xchg
enter
je
mov
test
or
pop
xchg
test
ret
insb
mov
cmp
cmpsl
cli
or
add
cld
out
xor
insl
insl
mov
outsb
xor
scas
rclb
test
sub
mov
jnp
in
mov
inc
mov
nop
push
aaa
sub
xorl
enter
sbb
xor
xchg
fisttps
mov
or
stos
pushf
lds
mov
push
notl
or
jnp
mov
fsubr
imul
aam
mov
or
loope
pop
rorl
jb
loope
insl
mov
sarl
sub
and
inc
pop
cmp
adc
push
sarl
mov
sub
jl
outsl
push
and
mov
sahf
iret
jmp
mov
lret
lock
cli
and
lods
dec
sbb
jle
xchg
xchg
push
pop
add
in
push
fiadds
ja
cmp
inc
mov
mov
mov
fstpt
ret
mov
jne
xor
pop
lea
icebp
xchg
ret
dec
psraw
insb
sub
test
pushf
sbb
jmp
sub
fistl
or
popf
icebp
sbb
fsubrp
mov
mov
out
mov
cltd
push
or
inc
xchg
push
test
add
int3
mov
imull
pop
jnp
cmc
je
sahf
rol
push
jbe
fdivrs
divl
test
lahf
andl
into
jg
aam
cmc
test
pop
mov
repz
notl
or
lea
stos
pusha
pushf
or
arpl
jge
xor
out
rolb
movsl
pop
cmp
and
fwait
sub
in
lea
test
inc
xor
pop
in
cmp
jge
std
lea
add
xchg
ret
cli
insb
mov
mov
inc
call
jp
cld
imul
jns
mov
mov
jne
cwtl
scas
loope
cmpsb
and
jg
mov
push
mov
jmp
add
loopne
and
js
fs
daa
jbe
xchg
out
xor
inc
insl
pop
push
subl
xchg
dec
dec
in
in
std
pop
clc
mull
push
push
gs
xchg
es
mov
add
xor
bound
cmp
addr16
xor
repnz
push
and
hlt
leave
cli
and
iret
cmp
out
cmpsl
adc
mov
ss
int3
sub
cwtl
sti
fnstcw
clc
jmp
add
lods
rcrb
mov
daa
fnsave
jle
ds
jo
aam
add
cmp
iret
inc
push
stos
sti
jecxz
push
and
mov
adc
xor
rolb
aaa
popa
imul
dec
jns
inc
sub
xchg
or
push
xchg
pop
jbe
jae
mov
pop
imull
xchg
mov
in
sub
lods
pusha
add
jae
pop
fs
pop
jmp
dec
xor
push
scas
lods
movsl
cmc
mov
adc
mov
cltd
mov
shr
pusha
shr
mov
ljmp
leave
fsin
js
iret
jnp
sub
paddsb
sbb
iret
sub
cmpsl
pop
sarb
stos
mov
out
ret
mov
js
jne
xor
out
icebp
inc
scas
mov
sbb
add
lret
mov
gs
push
jb
iret
push
loopne
mov
add
xchg
es
and
into
dec
das
mov
popa
addr16
clc
push
or
xor
pusha
push
pusha
ret
mov
dec
arpl
popa
int
cmp
push
icebp
or
sbb
add
mov
decl
pop
sub
xchg
mov
arpl
add
or
mov
xlat
outsl
sub
xchg
iret
out
inc
sub
out
sub
xchg
dec
rcl
leave
aam
fwait
pop
and
into
adc
cmp
dec
push
jp
out
xor
jge
mov
xchg
icebp
push
and
add
xor
shl
pop
pop
arpl
fcoms
sbb
lods
out
jl
int3
hlt
repnz
stos
daa
js
sbb
loop
mov
pop
xchg
sbb
fsubs
cs
pop
lea
mov
mov
ss
int
mov
add
lds
ja
popf
sub
sub
int3
imul
xchg
pusha
or
cmp
lcall
mov
mov
xor
insl
inc
arpl
mov
cmc
mov
ret
lahf
dec
loope
xchg
in
mov
adc
ss
insb
scas
push
imul
sub
fidivs
cs
mov
aaa
inc
jbe
repz
jg
sub
icebp
xor
and
hlt
mov
sbb
sbb
cld
ja
xchg
inc
and
adc
and
int
std
xor
sti
or
inc
push
mov
pop
fs
mov
ja
mov
mov
push
sub
imul
aas
xlat
sbb
call
or
adc
es
push
mov
aaa
out
das
hlt
sbb
xchg
push
sub
ljmp
leave
push
sub
out
cmpl
stos
or
add
jae
jb
cmp
rcr
push
or
add
add
leave
cli
in
aad
adc
imul
mov
mov
cmc
mov
bound
mov
jg
inc
ja
and
lds
jbe
test
and
repnz
add
inc
inc
test
sar
std
fwait
adcb
mov
or
push
add
test
xchg
mov
test
loop
and
xchg
es
and
mov
mov
sub
jg
adc
pop
or
rclb
adc
xchg
stos
out
fldl
fstpt
or
sahf
repnz
popf
pop
inc
lcall
sub
adc
xor
dec
pop
test
js
jns
out
roll
orl
xchg
movsb
xor
lods
sbb
pop
cmp
and
inc
xchg
dec
pop
popf
iret
mov
hlt
out
mov
subl
or
dec
mov
test
jp
push
out
inc
adc
test
das
out
adc
push
cwtl
rcrb
mov
push
cmc
xchg
xchg
mov
or
add
mov
xchg
mov
mov
loopne
out
test
mov
xchg
sbb
sahf
jno
sub
dec
adc
xchg
xchg
push
leave
fistpll
push
inc
and
bound
clc
loopne
and
mov
rorl
shrl
push
icebp
lret
jae
arpl
jns
mov
add
inc
fs
ljmp
dec
inc
daa
inc
mov
adc
add
inc
mov
mov
sub
daa
repz
mov
push
push
cwtl
das
jns
clc
sarl
adc
and
mov
sahf
add
lret
push
cmp
inc
popf
lcall
inc
xor
jae
mov
fwait
scas
push
push
pop
push
lock
xchg
enter
popf
iret
sbb
pop
jnp
sbb
nop
mov
mov
data16
out
mov
pop
add
jae
jl,pn
dec
cmc
mov
test
and
xor
sti
push
adc
cmp
add
adc
imull
mov
dec
ret
outsb
pop
popl
jl
mov
dec
mov
imul
xchg
xchg
xor
add
les
dec
pusha
mulb
jmp
lret
jb
pop
push
neg
ret
clc
cmp
pop
xchg
imul
mov
andb
ja
cmpsb
jmp
sub
jmp
shll
add
mov
sub
push
and
cmp
mov
mov
fists
xchg
js
jo
dec
mov
add
dec
inc
jb
and
test
inc
mov
sbb
aam
inc
pop
jp
mov
mov
push
loopne
stos
jl
lea
ret
hlt
pusha
push
dec
or
hlt
inc
add
js
lret
addr16
push
fwait
fwait
lock
clc
mov
add
push
sahf
pop
loopne
cltd
pop
inc
xchg
push
push
cmp
clc
bound
push
fldl
mov
lahf
sub
mov
test
xor
fildll
xor
aam
xor
outsl
insl
xorb
pop
repnz
pop
inc
enter
lcall
push
cmpsl
cmp
nop
add
icebp
out
and
aad
dec
mov
push
sti
push
or
push
push
addb
lcall
ret
xor
sub
mov
int
adc
lds
rorl
xor
xchg
insl
dec
arpl
fadd
jmp
jnp
out
lret
push
cmpsb
inc
cmpsl
paddsw
mov
repnz
inc
data16
sbb
aaa
fisubrs
stos
sub
sub
xchg
repz
in
cli
jl
mov
mov
inc
xchg
movsb
pop
insb
mov
aad
mov
stos
gs
push
mov
sahf
jmp
mov
mov
cmc
sbb
jnp
add
out
hlt
adc
in
mov
sub
mov
mov
popa
fld
test
mov
xor
pop
mov
stc
mov
sbb
jmp
cld
sbb
push
cs
mov
push
mov
jmp
stc
cltd
ret
fistps
mov
and
xlat
inc
test
sahf
roll
pushf
bound
pop
out
sub
cli
cmp
gs
push
lods
pop
mov
repnz
dec
addb
shll
xchg
xor
roll
push
inc
push
push
test
push
shrb
mov
dec
stos
sbb
idiv
jns
aam
jnp
pop
fcomip
pusha
pop
lods
les
scas
cwtl
ds
jo
lea
pop
dec
pop
ljmp
add
imul
insl
inc
adc
xchg
sbb
dec
stc
movsb
push
aam
push
and
add
or
inc
test
movsb
inc
pop
xchg
lret
std
or
xor
push
push
mov
jns
add
call
lods
sbb
bnd
aas
inc
test
sbb
outsl
cmp
rolb
lret
lock
mov
out
jge
or
ror
je
and
test
mov
mov
and
pop
orb
scas
lea
mov
mov
test
xor
cmp
cmc
add
xor
repz
ja
or
stos
or
jp
test
outsl
xlat
cmpb
subl
jo
adc
into
mov
stos
or
sar
lock
pop
test
shrb
or
je
adcl
sub
aam
shll
cwtl
mov
sbbl
jnp
xlat
sub
js
or
cmc
mov
lcall
jecxz
xorl
sub
or
pop
insb
bound
rorl
gs
pop
and
adc
and
mov
aaa
pop
xlat
mov
lea
ja
sahf
cli
pop
dec
popf
test
mov
jno
lcall
cmc
iret
roll
sbb
icebp
or
sarl
cmp
pop
cs
orb
outsb
sub
or
and
or
xor
out
xor
test
inc
test
push
xchg
cld
popf
cmp
pop
jbe
mov
lods
fwait
mov
arpl
pop
jae
jbe
jo
mov
repz
test
pop
cli
cmp
or
inc
sbb
out
int3
sub
loope
icebp
jns
loopne
and
aam
mov
out
lds
xor
inc
ret
pop
scas
push
cmpsb
cltd
mov
cld
inc
jne
cmc
pop
cwtl
add
repnz
dec
out
pop
hlt
test
mov
mov
mov
pop
cmc
fisttpl
mov
cmp
fcomps
push
xchg
sbb
push
or
pop
mov
lcall
jmp
sbb
mov
scas
lods
sbb
mov
mov
inc
or
xor
mov
xchg
in
outsl
xor
add
push
je
in
popf
neg
mov
aas
in
push
sbb
insl
insl
test
aaa
ret
enter
mov
push
sbbl
and
adc
sub
and
enter
add
mov
jp
ljmp
jns
or
mov
adc
jb
xorl
pop
pop
sbb
shr
and
pop
xchg
ljmp
in
fdivrs
shl
icebp
test
ret
inc
popf
hlt
mov
ror
stc
fs
xchg
pop
out
les
jmp
mov
fmuls
cmpsb
push
push
sub
scas
add
push
or
call
int
cmp
arpl
bnd
pushf
in
push
mov
lret
lods
xchg
in
addb
sub
fldl
call
mov
stc
cmpsb
sub
mov
gs
sbb
xlat
and
xor
jnp
shl
jl
xor
jno
xchg
lock
mov
pop
ret
add
aam
jbe
int
loopnew
mov
cmp
cmpsl
mov
lds
cmpsb
idivl
xchg
das
sbbl
pop
dec
mov
inc
dec
jne
mov
ljmp
cltd
add
and
mul
push
psubb
dec
arpl
fnsave
pop
mov
insl
fwait
sbb
pusha
add
pushf
test
inc
dec
add
fdivr
pop
aam
push
dec
mov
ljmp
fwait
push
mov
cmpsl
xchg
sub
cmp
mov
mov
xchg
ss
xor
cs
insb
push
lea
mov
xchg
pop
sbb
pop
into
js
push
push
cmp
cmp
loopne
jecxz
and
in
push
roll
shrb
loope
ja
cmp
xchg
mov
aas
or
in
imul
test
jo
mov
and
push
fcoml
jne
xchg
pop
lods
adc
fcomip
aam
dec
pop
add
mov
ret
fistps
xor
mov
dec
sub
mov
cmc
or
xchg
push
hlt
fidivl
or
lods
cmpsb
ret
aad
xchg
mov
fisubrl
dec
scas
ret
xor
sbb
mov
sbb
fisubrl
cmpsl
add
mov
scas
xor
dec
and
xor
cld
rcrl
jne
mov
loope
in
test
mov
lea
sarl
pop
mov
in
mov
push
stos
loope
jle
ss
ret
int
push
push
cli
inc
dec
bound
xchg
mov
xlat
sub
mov
sub
and
jbe
add
aad
dec
lret
popa
movsl
jae
or
addr16
mov
call
popf
arpl
push
int3
sahf
cmpsl
and
and
cmpsb
cli
icebp
dec
in
mov
dec
push
jge
add
cs
mov
dec
out
jb
sahf
cmp
mov
adc
xchg
mov
stos
popf
xchg
lahf
ljmp
pushl
jle
push
ljmp
jb
les
sbb
mov
and
cmp
mov
popf
add
sub
icebp
mov
push
lret
mov
push
lods
movsl
jge
mov
or
push
jae
pop
imul
sbb
mov
xchg
adc
mov
adc
cmp
popa
push
xchg
dec
xlat
push
fwait
push
jmp
or
jno
testb
push
jle
push
pop
aam
push
clc
mov
nop
sti
mov
dec
fidivrs
sbb
push
and
xchg
stc
cld
scas
dec
out
cmp
or
idivl
and
ror
std
pop
ljmp
push
std
pop
loopne
jns
test
sbbl
xchg
xchg
sahf
mov
push
stos
pop
inc
adc
jnp
pop
dec
jns
push
mov
push
mov
cld
out
push
jmp
lcall
push
sub
scas
mov
sub
out
scas
jge
loop
mov
int3
scas
inc
mov
cmp
sub
mov
gs
shl
sahf
cmpl
mov
pop
dec
mov
push
sbb
enter
ret
xlat
dec
or
je
mov
push
or
call
fsubrl
les
cmpb
mov
es
test
xchg
cmc
and
inc
repz
add
add
jae
out
popa
pop
mov
or
negb
daa
jbe
cs
cmp
cs
dec
xchg
push
and
or
pop
daa
push
data16
xor
jl
xor
pop
mov
arpl
cmp
pop
ds
mov
inc
xor
into
mov
dec
xchg
pop
imul
xchg
pop
cwtl
push
lea
aad
bound
repz
and
loope
sti
mov
mov
pop
dec
lret
lcall
xchg
mov
fs
jl
mov
ljmp
jno
lods
jp
loop
aaa
aaa
and
fstpl
or
mov
ret
stc
fisubrs
int3
add
out
int3
iret
adc
scas
dec
fwait
lods
ftst
jge
inc
out
lock
into
jo
pop
inc
inc
je
fs
rcr
push
jae
cwtl
push
push
std
gs
cmc
or
inc
and
add
pop
enter
dec
jo
jnp
pop
adc
ficoml
push
mov
xchg
cmp
lock
fildl
in
call
adc
jns
adc
stos
lea
mov
add
repnz
fs
lahf
int3
mov
inc
fisubl
in
shlb
inc
loope
int3
test
add
cmp
fstp
mov
and
dec
sub
jecxz
inc
and
pushl
lcall
addr16
repnz
movsl
lahf
adc
push
or
add
inc
pop
pushf
pop
adc
lcall
jl
push
outsb
cmp
mov
cld
inc
dec
xor
shl
ret
pop
mov
or
dec
dec
mov
test
pop
adc
std
ds
xor
sub
jmp
pop
and
icebp
lods
lret
lods
lds
jl
push
out
out
aam
cmpsb
cmp
mov
mov
pop
roll
adc
stc
mov
xor
mov
xor
insl
mov
cmpsb
inc
shr
xor
loopne
jne
or
xor
imul
fdivr
je
aas
bswap
pop
lods
push
dec
and
add
enter
sub
call
dec
cmp
dec
iret
hlt
loopne
out
inc
das
xchg
add
pop
mov
sub
mov
add
gs
ja
pop
cmpl
sub
sahf
popf
pop
fisubrs
loope
cmpsl
add
iret
sub
mov
mov
test
jne
test
cmp
mov
loopne
int
push
and
xchg
scas
xor
and
add
lcall
nop
mov
popf
int3
dec
loope
or
int
xchg
cwtl
divb
in
or
jecxz
push
in
mov
in
dec
add
fs
adc
and
movsl
inc
mov
mov
testb
ljmp
push
orl
inc
mov
leave
and
cmpsb
rol
push
cmpsb
and
dec
or
cmpsl
inc
push
inc
mov
push
mov
imul
lods
rclb
mov
pop
loope
loop
in
movsb
push
stc
decb
sahf
sbb
std
jne
cli
mov
sbb
ja
cli
mov
inc
vorpd
and
fcompl
dec
push
or
das
or
push
mov
mov
jb
pop
sub
mov
popa
cmp
mov
mov
sub
mov
cmpsb
add
inc
stc
mov
dec
and
mov
jbe
or
push
or
xor
jae
out
shll
pop
dec
insl
push
test
popf
cs
ljmp
daa
push
imul
push
loope
fsubl
sbbl
stos
out
xchg
bound
push
mov
add
sbb
push
pop
push
ds
in
lock
cld
sub
pusha
roll
in
inc
addr16
inc
fwait
nop
xchg
adc
mov
adc
je
cmp
mov
jle
add
data16
outsb
cmpsb
xor
std
aad
jno
fnstenv
stos
sub
leave
loope
cltd
push
push
xchg
loopne
mov
jp
out
stc
jnp
pop
mov
dec
add
cmp
and
rclb
ds
cmpsb
out
fs
test
loope
cmovo
adcl
sbb
or
stc
cmpsb
dec
hlt
sub
jne
dec
inc
ljmp
add
sar
repz
cmp
dec
push
pop
shll
add
add
or
sub
jb
xor
xchg
or
add
adc
imul
dec
mov
loop
or
jge
ss
lret
push
std
mov
out
sbb
sub
je
cs
iret
xchg
call
pop
dec
fldenv
mov
ja
push
cmpsb
pop
dec
mov
mov
jne
lds
adc
sub
movsl
loopne
out
sbb
pop
jno
iret
outsb
inc
fbstp
xor
and
inc
dec
mov
mov
sbb
cmp
outsl
xorb
and
or
jp
cmp
cli
mov
ss
lcall
push
out
jns
loope
adc
shl
addr16
mov
jle
loope
cmp
orl
int
xchg
pop
pop
lahf
mov
fdiv
or
adc
add
cli
pop
push
xor
in
pop
xor
mov
and
push
jmp
inc
mov
lcall
lods
jne
adc
outsb
lock
ficoml
or
adc
push
cli
xchg
imul
cmp
ds
je
jnp
pop
popa
mov
push
cmp
sub
pushf
scas
push
pop
xchg
inc
testb
call
lret
je
out
dec
shr
push
mov
std
xchg
sti
stc
and
xor
sbb
in
mov
jmp
dec
pop
mov
xchg
cwtl
push
inc
xor
cltd
mov
je
sahf
dec
and
shr
and
enter
add
cwtl
inc
add
cmpsl
leave
inc
repnz
mov
dec
cmc
repnz
outsb
iret
inc
rcrl
jae
jbe
dec
lahf
in
adc
fwait
mov
test
jle
filds
sbb
jle
inc
cli
mov
aad
pop
into
in
inc
daa
jns
push
mov
cltd
jno
lcall
cmc
sahf
pop
int
add
aas
fdivr
jno
jge
xor
and
lret
in
cli
jae
and
sub
push
push
dec
xchg
out
aam
fcoms
xor
push
cmpsb
mov
stc
cmp
mov
lret
rolb
adc
mov
call
ljmp
add
jecxz
rorl
inc
lret
ret
add
push
and
or
shrl
inc
arpl
stc
add
jg
mov
mov
inc
push
mov
push
cmp
dec
fldenv
or
dec
rcrb
aam
scas
adc
and
push
repnz
fmuls
jbe
ds
in
xchg
out
lcall
mov
cmp
jl
dec
cmc
and
push
pop
xor
sahf
daa
add
inc
adc
ja
scas
dec
jae
int
pushf
cmp
mov
mov
pop
pop
popf
pop
filds
inc
bound
lods
xor
jno
scas
daa
add
pop
ds
push
lret
cmp
pop
cmpsl
call
ss
rcrl
mov
and
testl
ljmp
and
iret
mov
pop
mov
mov
jmp
jecxz
fmull
add
pop
cmp
and
gs
rcll
fwait
jne
ss
out
das
inc
add
jp
ja
xor
in
sub
in
loope
mov
aas
fwait
popf
push
add
sbb
xchg
bound
hlt
fmuls
push
or
jmp
cmp
js
adc
ja
or
les
mov
out
int
das
ljmp
stc
loop
sub
cld
stos
cmp
in
sub
fisubrs
je
or
inc
mov
add
insl
cli
cld
call
fsubrl
sar
sar
movsl
cmp
or
pop
dec
push
imul
jbe
js
cs
mov
mov
cmp
sub
add
les
lods
imul
jnp
call
xor
insl
sbb
fs
inc
sbb
rcrb
lea
hlt
xchg
mov
add
mov
in
jl
pop
in
inc
js
aaa
icebp
or
xor
cmp
jmp
or
outsl
fwait
or
jae
inc
mov
cmp
leave
sbb
and
mov
dec
ret
xor
movsbl
xchg
and
xor
pop
cmp
lods
inc
push
and
sahf
sbb
sub
out
pop
mull
and
dec
xchg
sti
sub
addr16
je
jg
mov
lret
ret
add
in
xor
fnstenv
ud1
mov
lds
jae
and
push
bound
push
lea
pop
push
mov
mov
dec
rcll
mov
scas
jecxz
pop
ficoms
mov
mov
xchg
xchg
inc
aad
repnz
pop
cmp
push
xchg
fisttps
jmp
xchg
xorb
cmc
cmpl
inc
shll
xchg
int
lcall
xchg
inc
sbb
mov
mov
cmp
inc
out
not
enter
mov
movsl
lods
clc
xor
test
idivl
dec
and
or
testb
xor
mov
xor
nop
inc
cltd
jmp
push
ds
daa
jmp
fldt
and
xchg
add
mov
inc
cwtl
add
mov
and
dec
pop
cmp
push
sub
ljmp
jmp
lds
cmp
mov
push
push
lods
stos
mov
mov
imul
sbb
scas
ja,pt
push
hlt
cmpb
popf
ret
arpl
fsts
xlat
inc
sti
xchg
mov
shll
ss
cmp
popf
xchg
imul
ficoml
repnz
outsb
jae
addr16
pop
lahf
pop
or
lock
loopne
and
mov
cmp
jae
sub
pop
adc
or
mov
pop
aas
sub
sbb
out
cmp
aaa
fyl2x
dec
lods
pop
xchg
inc
mov
fadd
dec
pushf
cmpsb
add
test
pop
jo
lds
pop
xchg
dec
and
les
and
sbb
movsl
stos
lock
add
push
cld
jb
sbb
mov
cmp
testl
lret
cld
push
sub
popa
pop
cmc
lret
push
mov
add
cmpsl
or
ljmp
filds
cmp
xor
pop
xor
dec
sub
jp
add
out
mov
out
pop
push
hlt
ljmp
dec
mov
movups
adc
or
inc
movsl
mov
or
cmc
pusha
pop
es
fisubrl
push
xlat
jp
inc
mov
lcall
in
mov
pop
mov
ficoms
mov
xor
jno
inc
lods
cld
lds
fcmovne
out
or
adc
movsl
sub
roll
cmp
shlb
dec
insb
sbb
jbe
xchg
scas
add
dec
mov
lahf
out
ljmp
mov
add
lcall
cld
jne
sahf
cmp
rcrb
mov
repz
daa
sub
stc
lods
stc
sbb
mov
jmp
clc
fdivrs
adc
pop
mov
shlb
stos
jle
and
les
cmp
cli
ss
cmp
outsb
adc
outsb
orb
jo
icebp
and
mov
mov
mov
rcrb
std
gs
lcall
std
jnp
and
mov
into
aam
jae
fwait
rorb
stc
cmp
mov
push
mov
cld
mov
rcrl
jo
sub
addr16
mov
inc
loop
filds
inc
sub
aaa
push
sbb
fdivr
stos
scas
ja
xor
dec
lea
jle
fisttpll
or
fcoms
mov
rorl
push
cmp
pop
shl
xchg
into
sbb
jecxz
les
jnp
and
jb
dec
mov
add
jb
lahf
daa
les
enter
ds
push
jo
cmc
subb
fs
xor
lods
test
add
insb
and
out
int3
xor
pusha
sahf
fs
les
inc
add
inc
pop
jecxz
mov
test
mov
data16
fnstsw
lcall
outsb
jmp
mov
mov
daa
xchg
inc
stos
in
push
adc
bound
test
aam
fs
cmpsb
pop
mov
imul
aaa
cmpsl
xor
adcl
jbe
jl
xchg
sbb
xchg
fwait
sbb
dec
dec
in
push
xchg
icebp
adc
sub
dec
lock
int3
shrb
or
cmp
inc
sub
or
pop
xchg
popa
les
inc
inc
bound
adc
inc
scas
add
sub
in
xchg
mov
roll
jo
or
pop
xor
pop
fildll
sub
addb
mov
jnp
inc
xor
mov
xor
dec
arpl
icebp
repz
int
in
ljmp
mov
pop
push
push
insb
loop
int
aam
enter
push
sahf
mov
mov
adc
or
aad
or
in
sti
adc
push
jo
test
mov
lds
xor
outsb
js
shr
outsl
cmc
sub
pop
adc
push
std
lods
repnz
push
mov
arpl
adc
dec
sub
lock
cld
dec
push
sub
jecxz
push
addr16
addr16
push
add
jo
pop
cmpsb
cmc
dec
sub
add
pop
gs
add
inc
fs
add
sub
lcall
xlat
and
lds
ja
out
aam
adc
jg
ret
cmp
outsl
jo
vpcomd
add
das
add
enter
xchg
lret
cmp
jg
out
add
xchg
dec
mov
lds
mov
loop
sub
inc
mov
imul
inc
popf
xchg
arpl
pop
xchg
fst
and
les
pushf
std
xor
push
inc
pop
cmp
xor
addr16
ret
sub
xchg
or
push
jbe
mov
icebp
sub
imulb
xor
mov
dec
scas
pushf
pmaxub
mov
out
xchg
orl
rcrb
fldenv
enter
rcrl
mov
mov
int
mov
fistpll
fs
dec
cwtl
enter
sub
or
push
pop
call
enter
xlat
hlt
sarl
and
sub
subl
dec
popf
cmpsl
sub
cltd
es
jp
xchg
jae
cmc
jg
dec
cmp
std
xor
lret
xor
sti
mov
std
stos
dec
add
sub
lds
test
roll
jnp
aaa
pop
ret
mov
mov
cmp
cld
popa
ret
cmpb
push
popf
imul
sub
ret
push
pushf
hlt
fldz
ret
lock
pop
fisttps
inc
outsb
int
jne
mov
fimull
cltd
mov
movsl
xchg
mov
xor
jge
test
adcb
int
sar
cltd
pop
fdivr
pop
mov
fisubl
pop
jmp
inc
leave
cmpsb
daa
and
or
push
pusha
and
cmpsl
dec
cltd
push
xchg
push
xor
stos
xor
mov
rorl
cld
dec
lock
jns
mov
loop
outsl
cmp
add
loopne
add
jnp
pop
mov
sbb
jne
js
in
iret
mov
mov
movsl
mov
xchg
repz
setnp
pop
sub
loope
mov
inc
adc
lods
dec
sub
mov
mov
sbb
int3
test
adcb
popf
xchg
dec
mov
cmp
cmp
popf
out
aad
stc
push
add
xor
sti
jg
jno
pop
das
std
mov
mov
push
pushf
rcrl
sub
movsb
jmp
and
jno
ljmp
lcall
xor
adc
out
in
test
dec
shrl
push
cmp
mov
mov
push
pop
in
addb
pop
push
orb
push
movsl
inc
imul
mov
and
clc
xlat
adc
dec
mov
inc
xor
jle
mov
data16
lds
out
sbb
xor
xchg
outsb
or
dec
sub
ja
push
lret
daa
or
dec
iret
fiaddl
xchg
movsb
or
int3
inc
fnstsw
cmp
sub
pop
mov
lahf
mov
sbb
std
jmp
test
cmpsl
mov
push
movsl
fidivrl
pushf
popa
test
fs
ljmp
and
push
pop
int3
pop
int
cmp
aad
out
nop
cmpsl
shrl
sub
andb
cmp
pushf
dec
cmp
scas
lods
and
mov
insl
daa
pop
push
cs
dec
mov
sbb
aaa
icebp
add
cmp
xchg
jmp
mov
mov
adcl
lret
out
sub
pop
cmp
fs
mov
cmp
xor
imul
xchg
lret
xor
ljmp
jl
mov
lods
mov
sbb
mov
jmp
jmp
pusha
xchg
aaa
aas
enter
cmc
mov
or
imul
fndisi(8087
aas
loop
mov
lods
repz
outsb
dec
push
xchg
inc
jp
insl
cmpsl
inc
ror
inc
mov
mov
ret
xchg
push
cmpsb
aaa
sub
shrl
inc
orb
fisubs
ja
scas
pop
iret
push
fcmove
fwait
push
push
addr16
andl
test
jbe
aam
jg
imul
lock
jns
fcomps
rorl
sbb
adc
add
adc
push
sbb
pop
scas
mov
scas
js
out
popf
repz
pop
cltd
lret
sbb
ret
pop
xor
mov
dec
scas
ficompl
add
mov
ljmp
call
inc
ret
ds
cmpsl
adc
xchg
arpl
xchg
pop
xor
add
push
pop
push
std
push
mov
push
xor
adc
aam
adc
je
or
int3
mov
stos
js
or
cmpsl
cli
cwtl
or
mull
sbb
insb
jp
dec
sbbb
jp
jmp
test
lret
stc
add
xor
cs
movsb
pop
pop
mov
inc
push
adc
sti
push
or
stc
jbe
inc
xchg
jge
repz
push
leave
cli
stos
jo,pt
fiaddl
mov
inc
mov
push
xor
cmpb
sbb
pop
xchg
insb
add
std
sub
pushf
sub
imul
mov
repnz
push
decb
enter
ja
test
enter
or
mov
rol
xor
push
jecxz
mov
cli
add
arpl
mov
dec
test
ja
mov
mov
jno
aam
dec
push
jp
sti
xchg
clc
cmp
or
call
jle
pop
mov
cmp
mov
fstl
cmp
out
xchg
or
xchg
push
sbb
int3
aas
dec
push
and
es
cmp
lods
xchg
lods
fcoms
jb
loopne
test
push
gs
xor
mov
xchg
subb
js
vmovmskps
movsl
or
sub
pop
inc
jno
fs
fildl
out
cmp
popf
movsl
in
pop
sbb
push
and
dec
popa
adc
fisttpl
mov
mov
out
mov
out
mov
daa
mov
dec
daa
cld
sbb
mov
adc
jmp
inc
mov
sub
jecxz
add
xor
mov
roll
lret
or
add
fwait
jle
int
push
das
rcrl
push
and
ficoml
jg
das
cltd
sbb
loopne
icebp
pushf
enter
movsl
mov
inc
adc
mov
or
mov
add
in
inc
lret
iret
enter
test
jb
mov
fisttpll
adc
inc
cmp
inc
push
jle
loop
das
inc
std
dec
nop
fmull
fcompl
dec
cltd
fwait
push
add
es
call
or
mov
and
roll
add
out
loopne
out
and
push
dec
adc
fdivs
shll
and
das
mov
sti
xor
or
jl
pop
pop
test
cli
push
mov
pop
movsl
dec
dec
mov
fwait
shrl
and
cmc
arpl
adc
loope
adc
mov
lds
and
js
push
mov
mov
fildl
mov
inc
add
push
fists
and
mov
add
inc
test
cmp
jnp
out
xlat
inc
mov
stos
nop
push
movsb
imul
enter
and
arpl
mov
dec
call
mov
sub
cmp
xor
lods
xlat
xchg
in
nop
cmp
scas
xchg
out
sbb
dec
add
sbb
pusha
xchg
gs
mov
push
sbb
cmpl
popf
push
flds
hlt
push
cmp
int3
push
js
cmp
aas
cmp
sub
imul
in
outsb
pop
add
sub
dec
push
test
fxch
or
inc
out
mov
addb
mov
fwait
dec
inc
inc
inc
call
cmp
clc
add
cmp
mov
push
cmp
xchg
push
jnp
dec
dec
dec
cmp
mov
cmp
ljmp
out
push
mov
jl
fidivrs
cmc
or
pop
out
xchg
cli
or
incl
das
cmp
mov
mov
int3
dec
xchg
jmp
jecxz
jecxz
fistpll
pushf
imul
movsl
outsl
pushf
mov
sbb
mov
dec
imull
sub
cmpsb
jge
filds
and
dec
flds
nop
pop
xchg
lods
inc
inc
std
xlat
aaa
xchg
push
insb
dec
xor
cmp
and
cmp
mov
jbe
iret
dec
dec
xor
mov
leave
xor
mov
inc
jbe
push
icebp
call
negb
mov
cltd
mov
aad
inc
jae
insl
mov
or
jbe
pusha
and
pop
lods
adc
adc
jns
fnstenv
jne
add
xchg
ret
lea
jo
das
xchg
adc
xor
mull
mov
ret
jns
xor
popf
push
es
lock
pop
orb
push
sbb
pop
sub
mul
inc
bnd
push
rorb
sbb
pusha
sub
jns
hlt
lock
and
jmp
enter
adc
pop
in
lods
inc
xchg
adc
les
out
mov
mov
and
sub
push
mov
mov
repnz
cmp
lahf
pushf
lret
jg
cmp
push
pop
jmp
jno
pop
mov
fstl
in
lahf
jge
and
sub
xchg
fistpll
push
ds
sti
xchg
je
inc
add
out
lret
sbb
mov
data16
add
in
out
dec
arpl
add
jecxz
leave
icebp
inc
push
mov
pop
mov
ss
out
movsl
and
mov
stos
fs
push
stc
jnp
xor
subb
jb
mov
pusha
cmp
lret
jns
jp
mov
jno
sub
scas
mov
add
mov
pop
and
mov
int
cwtl
test
sbb
pop
lods
in
ret
lock
sub
xchg
loope
pop
pop
rorl
into
scas
inc
cmpsl
rorb
decb
xchg
in
lahf
sbb
arpl
dec
dec
fbld
cwtl
inc
in
inc
inc
cs
adc
shll
sub
sub
add
mov
xor
lret
add
xchg
mov
jo
mov
inc
shlb
push
sub
arpl
movaps
pusha
xchg
adc
shl
jge
mov
mov
mov
jnp
in
adc
pop
cmpsl
shr
daa
xlat
mov
xor
cmp
xchg
mov
or
enter
jb
lods
adc
lods
test
pop
loope
pop
sub
xchg
xchg
cmp
popa
push
and
inc
mov
insl
fidivs
mov
sbb
and
roll
mov
repnz
clc
lea
les
jmp
mov
xor
sbb
and
aaa
dec
jecxz
jae
xchg
mov
dec
fcmovbe
pop
inc
push
pusha
fiadds
mov
adc
mov
lods
cli
iret
mov
lcall
cmp
lods
das
sub
test
cltd
cwtl
hlt
sub
insl
xchg
inc
mov
mov
movsl
mov
jns
add
cmp
pusha
outsl
cld
xor
jno
pop
mov
rorb
ja
and
idivb
pop
aam
or
cld
movsl
test
repz
mov
adc
stos
pop
orl
rclb
pop
sbb
adc
or
sub
pop
push
mov
je
movsl
inc
xchg
mov
xchg
xor
lcall
out
out
fnstsw
dec
push
push
fbstp
mov
loope
xlat
lcall
sub
mov
push
or
adc
int3
cltd
nop
mov
lea
pop
jno
sbb
adc
adc
lods
fs
push
fyl2xp1
mov
lret
incl
jp
jnp
xor
push
out
sbbl
dec
cmp
push
rclb
push
push
cltd
lret
sub
addl
mov
sub
jmp
call
jmp
hlt
push
mov
xchg
jp
dec
out
adc
mov
mov
mull
xchg
imul
fcmovnu
ret
xor
shrb
and
addl
aam
cmpsb
jns
or
sbb
pop
sahf
adc
imul
mov
ljmp
mov
in
std
ror
nop
xor
seta
dec
cmp
xlat
loope
dec
or
vmovupd
scas
push
popf
cmp
mov
das
cmc
fsub
ret
lcall
mov
mov
or
pop
cmp
push
out
xor
nop
leave
jg
xor
out
push
adc
mov
pop
mov
push
jns
ss
shrb
std
addr16
jnp
push
movsb
aas
xchg
inc
or
shrb
dec
sti
imul
mov
lods
movsb
sub
sub
lret
insb
pushf
xor
sar
xchg
jno
adc
popf
pusha
int
mov
jp
mov
outsb
into
or
sbb
iret
movsl
fildl
les
xchg
mov
repz
pop
jae
push
xlat
popl
pop
clc
mov
std
inc
cmp
sbb
fidivrl
adc
stc
dec
and
jns
xor
daa
lret
push
pop
mov
jb
pop
neg
pop
iret
data16
gs
rol
test
inc
push
je
stos
sub
loop
jge
mov
or
push
or
gs
or
push
jg
lret
test
fildll
xor
lret
enter
sbb
sub
fisubl
jne
imul
dec
movsb
roll
cltd
and
mov
lds
xor
xor
test
xor
jmp
push
outsl
sbb
cwtl
daa
out
cwtl
adc
jne
inc
mov
lds
stos
test
loopne
mov
sbb
push
add
adc
push
retw
pop
dec
out
sub
jp
in
das
adc
gs
dec
mov
mov
jmp
mov
shll
flds
mov
pop
fsubrl
scas
push
enter
cld
ja
lcall
ds
pushl
sbb
mov
push
lods
pop
notb
jecxz
mov
cmp
iret
push
into
cld
stos
cli
sub
mov
jmp
pop
push
adc
ret
repz
test
jne
cltd
pop
mov
inc
adc
in
bound
mov
jns
out
adc
cmpsb
setns
mov
ret
daa
std
sbb
add
mov
cwtl
test
stos
mov
mov
jae
shll
cmp
leave
adc
shl
insl
pop
add
lret
cld
xchg
rcll
mov
sub
cmp
nop
imul
cmp
push
ljmp
dec
stc
outsl
std
inc
pop
shll
push
xor
push
mov
out
test
sub
shlb
xchg
scas
cltd
mov
gs
call
stos
stos
inc
cmp
enter
jmp
xchg
popf
adc
inc
cli
mov
cmp
mov
adc
repnz
jecxz
jnp
scas
pop
divb
aas
mov
push
jno
repz
dec
and
fisttpl
dec
mov
addl
test
out
cmp
dec
sti
mov
in
jp
out
adcl
and
xor
imul
xlat
fs
cmp
dec
jl
outsb
fwait
xor
pop
add
mov
sub
ss
loop
adc
rcrb
sbbl
cmpsb
in
sbb
adcb
cwtl
cs
adc
pop
add
test
cld
mov
pop
pusha
addr16
out
cmp
inc
in
int
enter
jecxz
lock
push
adc
mov
jns
cmp
enter
add
in
and
adc
jae
inc
and
mov
lret
mov
enter
jge
adc
movsl
ficoms
mov
jnp
aam
cwtl
adc
lahf
pop
test
inc
ret
sub
inc
sbb
inc
gs
mov
daa
and
cmpsb
xchg
cs
leave
data16
mov
out
clc
cmp
in
jl
push
xor
xchg
adc
dec
mov
inc
add
aas
sub
jnp
jb
lea
pop
popa
adc
mov
push
jne
sbb
cmp
mov
dec
loop
xorb
lock
mov
ss
imul
mov
mov
push
xchg
test
sbb
lahf
leave
mov
sub
inc
ret
jg
inc
dec
repnz
idivb
mov
add
dec
sbb
test
sub
imul
and
gs
das
add
pop
and
jne
pop
cli
adc
cmp
sub
mov
sub
xchg
cmpsb
das
arpl
ds
inc
push
cmp
sti
lret
gs
xchg
test
adc
cld
iret
stc
dec
dec
xor
inc
leave
adc
ret
fnstsw
mov
mov
pop
xor
xchg
mov
lea
fwait
mov
pop
inc
daa
add
pop
push
inc
in
mov
pop
loopne
adc
sbb
and
ret
xchg
sub
and
packuswb
cmp
mov
imul
sbb
add
lds
cmp
jnp
xor
jl
push
fnsave
mov
repnz
hlt
out
and
cwtl
dec
fsubrl
mov
mov
push
add
jg
xchg
jmp
movsb
inc
push
mov
test
dec
out
rcrl
dec
ffreep
pop
filds
test
daa
test
sub
shlb
movsl
pop
mov
pop
into
popf
push
aas
fldt
pop
lret
dec
xchg
jg
add
repnz
mov
imul
idivb
pop
sub
jge
jns
xor
arpl
sbb
pushf
adc
pop
dec
std
sub
icebp
and
stos
dec
xchg
push
test
je
xchg
adc
aaa
mov
stc
data16
daa
adc
xchg
push
icebp
jle
sbb
mov
add
fisttps
or
mov
mov
fiaddl
push
sbb
fwait
mov
insl
xor
popa
fnstsw
call
mov
sub
int
mov
pushf
ss
mov
mov
or
jge
jmp
insb
lods
pop
and
orl
shll
popa
add
cmp
out
mov
push
sub
mov
pop
xchg
sbb
adc
js
adc
add
loopne
daa
movsl
test
js
xor
lods
push
icebp
or
jecxz
ljmp
mov
jge
push
scas
fcmovbe
adc
fstps
fwait
mov
addb
call
mov
mov
lods
sbbl
cmp
adc
or
cld
pop
push
dec
addr16
xchg
sahf
std
push
pop
out
in
scas
pop
or
aaa
gs
jp
add
test
push
nop
gs
mov
leave
movsl
jne
inc
inc
sbb
stos
sbb
add
xor
or
dec
sub
rcr
mov
sub
scas
dec
xchg
sub
add
loopne
mov
fsubr
add
sub
scas
jnp
dec
popf
arpl
js
cmpb
sub
js
repz
pop
jl
shrl
mov
pushf
sub
lds
addr16
arpl
xor
jne
jp
add
or
jl
push
push
cmp
sub
das
sbb
in
popf
test
xchg
push
fs
xchg
stos
fisttpll
xchg
pusha
mov
xchg
and
jmp
add
repnz
imul
mov
negl
pop
or
outsl
repz
jecxz
cmp
pop
cmp
xchg
mov
aaa
mov
and
pop
fsubrl
pushl
dec
sub
xor
dec
and
gs
std
push
sarb
push
adc
sbb
aaa
push
inc
and
or
dec
mov
add
aam
and
inc
pop
in
in
jmp
sbb
adc
push
mov
imul
repz
mov
subb
das
pusha
adc
lock
ret
mov
lcall
pop
push
shlb
repz
adcb
xchg
inc
dec
xchg
jo
mov
leave
scas
and
push
and
sbb
in
stos
inc
xchg
dec
aad
xchg
out
sub
orl
in
cmp
push
jecxz
mov
imul
xor
add
cmp
sub
adc
testl
repz
pop
or
pop
jnp
lock
sti
mov
jmp
leave
cmp
push
or
daa
sti
call
push
leave
sub
sub
mov
push
test
out
mov
sub
add
add
mov
inc
das
cmc
pop
aam
or
aas
dec
sbb
fwait
test
sbb
pop
xchg
sub
push
pop
adcb
stos
dec
push
dec
dec
mov
push
fsub
loop
ret
pop
into
out
cld
ror
cmpsb
out
inc
rcrb
push
and
bound
dec
sahf
stc
bound
cmp
pop
cmp
xchg
pop
inc
aaa
sarb
les
je
cmp
pop
mov
daa
adc
lods
jge
movsb
dec
mov
sbb
mov
sub
popf
decb
sbb
adc
adcb
push
hlt
rcll
cmpsl
cmc
arpl
sbb
cmpsl
leave
mov
adc
pop
pushf
cmp
push
xor
test
mov
insl
xchg
adc
sub
mov
pop
sub
fisubl
adc
or
rclb
dec
lahf
in
out
jp
out
cwtl
sti
pop
xlat
xlat
dec
pop
sti
and
cmc
fld
pop
sbb
xchg
in
popa
cmc
and
je
sbb
adc
jo
push
iret
call
mov
cltd
repz
inc
xor
add
loopne
mov
stos
daa
ja
pushf
outsb
add
push
icebp
loopne
xor
push
dec
or
in
es
jnp
mov
iret
sub
sub
inc
sbb
arpl
pop
sbb
test
loop
sbb
divb
push
jo
js
sbb
mov
arpl
dec
scas
push
fnstsw
jne
mov
dec
movsl
adc
movsl
push
mov
dec
sti
jg
sbb
cld
jae
jp
movsl
mov
push
sti
pop
cli
enter
imul
mov
sbb
ds
jne
aaa
aaa
mov
lahf
out
jnp
lret
inc
xor
mov
repnz
div
mov
fwait
mov
and
rcrl
dec
cmp
pop
lock
mov
dec
sub
mov
pop
icebp
xor
dec
cmp
and
dec
les
mov
cmc
out
bound
test
cltd
ss
mov
adc
pop
int3
push
adc
dec
sbb
lcall
sub
repz
cmpsl
xor
ret
sbbl
mov
lea
sub
movnti
sbb
jmp
adc
inc
inc
rcrb
pushf
inc
cmp
call
mov
sub
cmpsl
lcall
rorl
rol
scas
jne
je
cmp
repnz
rol
int3
mov
cld
in
das
pop
or
out
fcomps
mov
push
add
push
xor
push
out
subl
push
add
jmp
or
adcl
xor
je
mov
xchg
incl
cld
pop
lea
mov
je
lcall
std
test
cs
stos
and
fsubrl
idivb
andb
jmp
les
ret
jnp
jl
mov
pop
lcall
jb
lea
pop
adc
mov
cmc
push
push
ljmp
inc
push
push
movb
push
cmp
xchg
sub
sar
lods
adc
fsubrs
popf
push
sub
ficoms
shlb
mov
mov
push
subb
aaa
mov
out
jle
mov
pop
pop
or
adcb
sub
cltd
or
pop
pop
stc
or
sbb
push
inc
lret
outsl
aam
add
push
cmp
mov
push
add
jg
call
inc
stos
daa
mov
and
popa
mov
shlb
neg
inc
pop
out
inc
inc
decl
test
inc
imul
sub
mov
lahf
or
mov
adc
mov
rcr
out
loop
push
and
pop
mov
inc
std
add
icebp
jl
push
inc
lcall
cmp
test
cmp
or
jmp
rorb
aam
pop
mov
cmp
ja
nop
pop
push
clc
repz
out
add
and
dec
dec
inc
mov
in
mov
ss
inc
add
mov
iret
mov
js
xchg
jmp
sbb
dec
orl
aam
dec
pop
pop
fwait
daa
out
ds
stos
loope
mov
movsl
and
fbld
push
test
ret
arpl
pop
pushf
sub
sti
push
loop
pop
mov
stos
in
xchg
sub
loopne
jo
jp
lret
push
sbb
lcall
sahf
lods
popa
fsubrs
push
xchg
add
cmpl
mov
movq
mov
and
mov
jecxz
leave
jnp
test
out
les
push
mov
sub
mov
pop
xor
xchg
stos
sarl
pop
dec
add
mov
mov
fisttpl
popf
mov
xchg
es
inc
rcl
mov
xchg
sub
xchg
xor
sbbl
gs
roll
mov
ror
mov
inc
aaa
nop
adc
insb
mov
cmovbe
xlat
dec
out
daa
xchg
and
outsl
cmpsb
mov
test
cmp
data16
hlt
cmp
fwait
adc
cmp
js
fsubp
ss
rcr
imul
mov
pcmpgtd
pushf
cwtl
adc
inc
inc
xchg
pop
mov
dec
pop
fucomip
dec
push
push
or
xlat
out
lcall
mov
push
sub
lahf
xchg
inc
repnz
stos
scas
rorb
fnsave
xchg
dec
jmp
sti
sbb
dec
fstl
add
sti
add
push
and
decl
arpl
xor
hlt
sbb
movl
adc
fs
sbb
mov
cmp
mov
adc
iret
loopne
arpl
push
into
es
fsubrl
sti
imul
mov
inc
sbb
cmp
inc
mov
and
insb
ja
loope
mov
jno
stos
cwtl
inc
pop
imul
jp
es
mov
sarl
sub
jl
add
push
mov
add
movsl
gs
xchg
pop
test
cmpsl
dec
or
fstps
jg
push
test
mov
jmp
out
push
sbb
and
xor
aaa
stc
pusha
pop
scas
cmp
xlat
jbe
icebp
jbe
or
pushf
scas
mov
sahf
stc
les
pusha
lea
test
loop
push
clc
inc
xor
mov
pushf
mov
outsl
fnsave
add
mov
pop
bound
or
into
cli
xchg
shlb
xchg
lds
jl
lea
cmpsb
adc
js
fidivs
xchg
push
xor
or
pop
fists
ljmp
lods
sbb
jno
subl
insb
xor
adc
add
pop
mov
sbb
or
and
scas
and
add
cld
lahf
jb
das
in
cli
mov
push
lahf
lahf
imul
sbb
loopne
popa
pop
mov
movsb
or
pushf
mov
push
in
xchg
adc
sbb
and
pop
push
dec
sbb
outsl
jnp
pusha
mov
lods
ficompl
int3
negb
popa
and
aam
loop
push
sub
clc
loope
adc
fwait
cmc
je
aam
jae
dec
popa
rcl
jb
outsb
stos
insb
faddp
and
and
sbb
jge
inc
xchg
push
jge
mov
mov
dec
mov
xchg
icebp
rol
jbe
sbb
out
addr16
mov
ljmp
xchg
imul
fst
pop
popf
inc
push
add
pop
mov
imul
dec
cltd
outsl
imul
loopne
cli
leave
in
sub
aas
decb
outsl
push
jb
pusha
test
sub
xchg
cltd
aas
loop
gs
inc
lret
xor
aaa
and
dec
sub
mov
test
mov
loope
enter
subb
ljmp
pop
or
cmpb
cmp
pop
jae
mov
lods
imul
push
jecxz
test
int3
jne
nop
or
push
aad
int
filds
shl
fdivrs
dec
sbb
mov
lcall
sarl
xor
jns
jp
insl
lods
jle
aad
push
inc
enter
lods
or
rcl
out
mov
cmp
mov
push
mov
mov
mov
das
mov
jnp
out
rorb
xchg
inc
pop
orb
pop
leave
jae
dec
sub
mov
inc
add
or
cmp
push
push
inc
ret
dec
ret
dec
test
sbb
testl
aad
and
rolb
mov
fnstsw
in
mov
and
invd
imul
xchg
fwait
and
sub
je
xor
mov
mov
cmpsl
jnp
inc
test
add
int
movsb
repz
push
das
add
push
mov
jge
sub
loopne
leave
dec
out
mov
mov
std
js
int
enter
jae
or
ficoms
bound
std
dec
xor
into
es
xchg
popf
xchg
jl
jnp
jecxz
outsl
sub
outsb
push
pop
pop
pop
bound
dec
das
or
xor
adc
insb
sub
mov
add
push
popf
loope
dec
addr16
or
push
mov
fs
dec
mov
stos
mov
shlb
mov
repnz
mov
lcall
test
jnp
sti
popa
push
test
adc
sub
dec
add
mov
jb
or
dec
adc
pop
adc
xchg
rol
out
pop
fsubrs
mov
jecxz
cs
mov
xor
jmp
push
xchg
mov
mov
stos
loopne
xchg
std
fyl2xp1
or
aad
shrl
imul
ret
mov
leave
je
movsb
xchg
or
xor
jns
inc
jmp
dec
cmpsb
add
push
jg
add
cld
sub
inc
fcomi
shlb
cmp
stc
jecxz
sbb
nop
pop
lds
popa
idiv
pop
outsb
ja
inc
sti
int
mov
inc
add
das
loopne
fidivrl
jp
lahf
pop
dec
cmc
repnz
mov
cld
mov
fsubr
inc
pop
subl
andb
pop
mov
repnz
in
adc
imul
and
push
andb
mov
jbe
cli
mov
ss
xchg
mov
sahf
add
mov
mov
pop
push
shrl
push
mov
or
xorl
out
lahf
aam
dec
cs
stos
push
cmp
ffreep
iret
lods
andl
js
xchg
lahf
adc
mov
pop
daa
pop
mov
push
pop
shrb
inc
hlt
mov
popf
cld
ret
fs
jmp
pop
adc
test
sub
jecxz
xchg
mov
sub
jmp
flds
cmpsl
adc
mov
xchg
in
jne
std
dec
lahf
push
jl
in
and
gs
sub
idivb
and
shll
push
lea
int3
push
jnp
ret
or
data16
jg
jmp
jns
scas
lock
loope
test
sub
aad
rcrl
aas
push
xchg
orb
popf
imul
imul
inc
add
arpl
push
jle
insb
mov
push
enter
shll
xor
nop
ljmp
dec
pop
dec
lahf
mov
cltd
jle
inc
out
mov
orl
lcall
stos
push
pop
out
push
enter
rcll
jno
loope
cmp
popa
das
test
subb
sub
fucomip
pop
dec
inc
dec
pushf
sbb
clc
lret
adc
cmp
or
popf
mov
scas
cltd
jg
or
scas
lock
pop
mov
test
jg
or
test
sub
repz
sahf
push
out
jae
inc
in
pop
lods
cmc
pop
pop
push
add
stc
pop
jo
cli
pop
xlat
out
sub
lods
mov
dec
xchg
aad
insb
mov
jo
addl
cmp
mov
mov
and
xor
lret
aam
or
sbb
jnp
pop
mov
xchg
adc
icebp
lea
mov
jae
imul
xor
cmp
lahf
ficoml
insl
pop
in
bound
mov
enter
push
in
xchg
push
adc
repnz
insb
insl
lds
or
jne
inc
inc
push
xor
sbb
repz
mov
jbe
int
inc
inc
cmp
sub
inc
js
fldt
stos
inc
sti
push
cwtl
jno
jbe
push
xor
sbb
push
cmp
adc
xor
jae
sub
sub
sub
cmpl
imul
aad
addr16
cltd
xchg
pop
inc
lea
pop
xor
jns
dec
repz
test
or
mov
test
sub
push
lret
hlt
insl
inc
mov
js
call
mov
mov
clc
mov
mov
dec
push
es
icebp
push
bts
imulb
xchg
pusha
out
nop
sbb
dec
and
push
ret
mov
mov
fiadds
ret
mov
sahf
imul
fstpt
outsb
or
xor
sahf
cmpsb
inc
ss
mov
stc
cmp
adc
xchg
repz
decb
ss
sbb
sub
inc
stos
pop
stos
xor
and
lret
fsubrs
push
clc
shlb
test
inc
out
mov
repz
rol
adc
jb
repnz
mov
test
and
out
rcrb
lods
ljmp
notl
sbb
lret
test
inc
pop
jno
pusha
lcall
push
ljmp
dec
add
inc
mov
aaa
mov
xor
fnsave
lds
imul
mov
xchg
inc
and
bnd
mov
dec
fdivrl
cmp
jl
sub
jne
test
fbld
cmp
int3
sbb
insl
mov
minps
xor
int3
sbb
outsl
aam
sbb
inc
push
mov
ret
and
ljmp
in
adc
push
sbb
mov
jl
arpl
pop
mov
scas
movsw
sub
ja
ret
jp
daa
mov
stos
xor
xchg
xorb
inc
iret
pop
movsb
andl
and
scas
fldt
in
mov
mov
pop
adc
adc
push
jge
sarb
rclb
je
cmp
jp
faddl
loopne
fisubl
loopne
xchg
fisttpll
mov
sti
shll
xchg
jecxz
mov
push
cmp
push
test
mov
leave
pop
and
fldt
popf
fists
movsb
and
in
add
pop
loope
and
or
jb
test
out
and
jbe
mov
fildll
add
mov
cmpsb
jg
jbe
xor
pop
icebp
adc
add
lock
outsb
adc
loop
xchg
shr
cmpsl
orb
pop
jl
cmp
test
xchg
mov
lds
test
mov
mov
xchg
sub
insl
and
movsl
mov
adc
xchg
jb
ret
pop
xor
movsl
push
aam
push
movsb
and
inc
sbb
or
xchg
popa
mov
xor
inc
push
jle
test
lret
lret
sub
mov
xor
dec
xorl
push
pop
repnz
jle
mov
mov
in
jae
shll
out
xlat
add
inc
lods
xlat
inc
sub
lds
adc
xor
mov
mov
push
push
mov
fwait
lcall
mov
xlat
adc
mov
and
mov
fsubs
rcrl
imul
ljmp
loop
mov
lods
sbb
push
or
mov
ret
jnp
out
lret
mov
iret
pushf
in
xchg
js
adc
mov
cmpsb
bndstx
jmp
es
cmpl
movsb
fwait
xsavec
cli
jae
mov
lea
push
pop
movsb
fs
mov
or
dec
ret
fbstp
cmc
mov
jecxz
inc
stos
jmp
aaa
adc
test
shr
sarb
scas
dec
cmp
dec
xchg
fiadds
ret
xor
fbstp
lods
fimuls
mov
xchg
das
inc
cmp
outsl
popa
pop
cmp
enter
cmpsb
cld
aad
loopne
sbb
lret
pop
dec
fcoml
pop
add
fmull
sbb
sti
mov
sti
jmp
lds
lahf
or
mov
shrb
adc
and
push
dec
mov
daa
or
dec
sahf
aam
cmc
dec
insb
dec
int
sbb
push
mov
outsb
lea
imul
mov
lods
shlb
push
xor
jg
movsl
leave
xchg
sub
and
out
bound
movsl
xor
pop
out
sbb
sub
mov
inc
pop
adc
adc
mov
clc
aas
jmp
data16
jns
adc
clc
xlat
pusha
xlat
mov
sbb
rcrl
dec
jmp
inc
jle
jb
xchg
dec
call
cwtl
orb
push
gs
and
cmp
cmp
dec
test
int
ret
push
pusha
mul
in
mov
mov
pop
push
inc
lahf
or
or
push
sub
and
popf
sahf
aaa
fcmovbe
hlt
ja
dec
nop
insb
mov
jl
xor
lods
jecxz
xor
adc
add
insb
pop
nop
stos
fmull
repnz
fmuls
jae
push
xchg
adc
cmc
inc
rorb
jl
rcrl
adc
adc
mov
inc
push
cmp
adcl
enter
loope
dec
cmp
fisttps
shlb
xchg
lcall
and
and
or
add
mov
mov
xor
hlt
arpl
shr
pop
sbb
inc
fisttps
dec
adc
or
nop
ds
scas
in
push
xchg
daa
mov
add
into
mov
loope
inc
jmp
insl
lock
aas
rcrl
cmp
fsubs
add
mov
cmpsl
scas
push
pop
iret
sub
loopne
pusha
mov
pop
dec
pop
enter
adc
movsl
pop
outsb
in
mov
in
xchg
jle
movsl
movsl
cmp
push
nop
out
clc
mov
or
xchg
mov
cs
or
xchg
test
leave
enter
call
stos
sub
inc
mov
test
repnz
sub
mov
mov
adc
dec
setb
lcall
jecxz
sub
fwait
cs
leave
lea
call
push
cmp
mov
mov
and
mov
sub
xchg
inc
add
dec
lea
xchg
pop
pop
pop
je
lahf
sbb
pop
mov
out
inc
jl
shll
xor
mov
cmp
mov
add
repz
xchg
adc
or
cmp
jne
outsb
add
dec
test
push
std
pop
cmp
lcall
xchg
sub
inc
das
or
or
lea
scas
push
pop
dec
sbb
cmp
jbe
cmpsb
mov
cmp
in
xor
mov
and
or
ficomps
test
mov
and
jnp
mov
add
rolb
lods
cmpsb
or
mov
data16
xor
scas
or
aas
lret
dec
mov
xchg
fimuls
int
xlat
popa
mov
pop
pop
or
ret
mov
in
jae
lds
lock
mov
xchg
mov
add
cmp
cmp
ficomps
push
icebp
shl
mov
sahf
jbe
pop
xchg
mov
test
inc
in
cmp
stc
xor
xor
inc
icebp
scas
or
lea
xchg
sti
pop
sbb
jbe
das
sbb
jp
add
inc
dec
lea
xorb
mov
loop
push
scas
fstpl
aam
dec
lret
push
loop
push
or
and
fcomps
mov
mov
addr16
pop
insb
dec
add
pop
mov
inc
cmc
mov
and
je
inc
jb
adc
adc
imul
out
xchg
call
in
add
push
pop
repnz
inc
xlat
cmc
cld
pop
mov
push
mov
jl
push
call
lock
enter
mov
scas
jb
stos
mov
lods
or
fsubrl
es
ja
icebp
mov
gs
in
mov
inc
cmpsl
jno
cld
inc
push
xchg
iret
mov
les
jecxz
inc
xchg
mov
cmpsb
aam
inc
subb
fidivl
jl
test
lock
repz
ss
adc
push
ss
push
sbbb
fistl
mov
push
je
inc
or
fidivrl
mov
dec
sbb
mov
imul
in
push
and
or
sub
xchg
aam
xor
in
ljmp
cmpsb
lahf
inc
das
out
enter
xor
cltd
cli
jmp
js
icebp
lahf
rorb
push
add
jne
xor
xor
stc
or
subb
lds
ret
rcrl
inc
cmp
jae
notl
push
sbb
testb
add
jmp
aas
mov
popf
rorb
adc
int
rolb
sbb
shl
sbb
jb
lcall
inc
mov
xchg
jno
mov
inc
test
dec
inc
xor
sbb
popf
mov
mov
daa
aad
insl
dec
adc
sub
add
and
fwait
je
mov
mov
jb
adc
insb
pop
stos
stos
sub
pop
jecxz
push
out
mov
cli
adc
sbb
lock
push
aas
aaa
fildll
notb
lcall
mov
pusha
cld
push
sbb
and
cmpxchg
mov
jb
fadds
mov
outsb
and
jb
or
test
mov
push
inc
or
dec
std
mov
dec
xorl
movb
and
imul
cmpsb
push
loopne
loopne
sarb
outsl
xchg
xor
xor
jmp
ficoms
insl
shlb
jbe
in
mov
in
int3
std
lahf
push
data16
dec
lds
inc
jbe
stc
dec
insl
shrl
ror
push
inc
dec
jne
outsb
pop
cmpsl
push
call
ficompl
pop
adc
adc
imul
in
sub
popf
xchg
inc
xchg
pop
lea
sahf
lods
aam
outsb
inc
xchg
testb
mov
repz
lds
jge
iret
adc
aaa
je
enter
push
mov
lods
stos
xor
aas
cmp
mov
or
idivl
stos
mov
loope
pop
xor
xor
and
dec
loope
je
add
repz
add
push
and
fmulp
mov
mov
jo
out
repnz
sub
jecxz
jp
mov
iret
pop
movsb
pop
or
or
push
sti
pop
sbbb
pop
stc
mov
fwait
inc
stos
push
mov
sarb
mov
push
leave
scas
mov
lea
inc
sub
in
and
hlt
clc
mov
aad
pop
pop
std
add
je
fwait
mov
xchg
clc
push
mov
mov
inc
ja
inc
sbb
sahf
push
lahf
jmp
adc
mov
inc
mov
cmp
inc
or
lock
std
inc
insl
pop
xor
mov
or
test
mov
pop
les
sub
and
mov
and
fwait
and
dec
dec
cld
inc
mov
je
iret
xchg
push
loop
cmp
loope
and
xlat
pop
sbb
insb
inc
loop
adc
nop
rcrl
cmpsb
or
mov
inc
push
sahf
xchg
je
pop
xorl
xchg
imul
adc
int
mov
scas
jl
enter
ljmp
sbb
mov
pop
in
std
nop
inc
outsb
inc
loop
insb
in
in
iret
stos
adc
adcl
arpl
xchg
push
insl
fst
push
fstpl
sub
shrl
idivb
lret
sub
mov
test
fdivrs
movzbl
or
aad
push
loopnew
sub
sub
jmp
mov
sub
mov
sub
dec
xorb
push
cmp
test
jg
adc
mov
jns
cmp
ss
clc
jbe
jne
mov
pop
stos
and
sbb
rclb
dec
fisubrl
sbb
mov
xchg
out
pushf
or
aam
inc
testl
ret
xor
xchg
movsb
cmpl
jno
rcrl
andb
and
es
jae
cmpsl
testl
inc
movsb
nop
lret
insl
inc
fistpl
and
pusha
xchg
scas
inc
mov
mov
lods
mov
in
push
rcr
sahf
inc
and
sbb
mov
nop
push
push
cmp
jb
pop
in
outsl
in
mov
mov
lcall
sub
data16
cs
cmp
push
and
sbb
dec
cmp
lods
dec
inc
popl
mov
mov
call
fwait
sbb
xor
in
mov
cmc
jle,pn
jmp
xor
dec
stos
in
test
stc
jne
or
xchg
cmpsb
mov
mov
xchg
pop
mov
inc
stc
mov
out
scas
xor
xchg
mov
stc
imul
clc
dec
ret
adc
mov
push
push
and
inc
jmp
jle
xor
sub
mov
cltd
inc
mov
insl
or
pop
mov
pop
fstps
sub
xchg
lods
int3
mov
pop
sub
out
push
int3
xlat
bound
mov
xor
es
cmpsb
fwait
dec
scas
int
cmp
xor
jecxz
xlat
sub
jl
popf
push
sub
push
xchg
adc
aad
cmp
ret
xchg
loope
sti
mov
mov
arpl
pop
mov
sbb
addb
push
icebp
pop
and
cmpl
je
pop
mov
mov
or
cmc
adc
jae
scas
mov
out
out
fnstcw
sti
fcmovb
sub
mov
push
push
push
mov
cmp
push
mov
mov
ljmp
popa
fld1
lea
push
dec
and
pop
dec
movsb
push
add
call
cltd
je
mov
int3
and
add
pop
push
mov
dec
cltd
sub
mov
dec
push
xchg
inc
adc
mov
add
mov
icebp
outsl
jle
xor
mov
mov
mov
lret
es
mov
arpl
call
pop
sti
push
mov
call
jb
pop
test
jp
add
pop
data16
lock
inc
idivb
cmc
inc
push
js
inc
sub
xor
xor
cld
loopne
jmp
and
jmp
sbb
mov
out
rorl
pop
andb
loopne
imul
sub
xchg
out
and
push
pop
test
insl
mov
cmp
out
loopne
sbb
into
out
xchg
pop
call
dec
pop
mov
movsl
iret
fisubrl
add
bound
or
lds
in
xchg
add
push
stc
xchg
mov
icebp
dec
imul
movsb
fdivs
mov
shl
fwait
dec
leave
into
cwtl
in
xor
popf
xor
es
mov
pop
push
call
iretw
inc
mov
add
mov
sbb
cwtl
cmpsl
ret
roll
push
jbe
and
sbb
jge
int
test
out
cmp
shll
jp
imul
mov
mov
and
pop
inc
loop
push
repnz
push
xchg
popa
or
or
pop
gs
cltd
jno
mov
mov
shlb
mov
lret
pop
adc
jl
inc
dec
in
xor
repz
and
dec
jns
shlb
loop
xchg
sub
cmp
outsb
aam
mov
sbb
repz
call
andl
mov
adc
mov
scas
xor
push
in
xor
shlb
xchg
push
dec
call
and
mov
repnz
or
lds
in
cmpsb
test
xchg
jg
in
fmuls
fldt
cmp
ficompl
and
sbb
insb
scas
jge
aaa
jmp
fwait
int3
sbb
out
ss
ret
dec
mov
mov
out
mov
outsb
jns
mov
jne
pop
jecxz
fldenv
rcrl
jno
loope
inc
push
mov
or
jg
lcall
in
subl
and
mov
pop
jno
sub
jge
mov
push
xchg
xchg
iret
mov
cld
push
dec
and
lods
xor
daa
in
shll
push
test
scas
pushf
sub
pop
sub
cmp
adc
cmp
int
idivl
mov
shl
push
outsb
xlat
lret
xor
scas
outsl
add
sbbb
rcrl
jge
mov
mov
pop
jo
sahf
add
test
call
xabort
or
adc
ds
mov
xchg
std
adc
mov
pop
jbe
jns
insl
pop
add
movsl
mov
mov
lds
jbe
sbb
gs
out
mov
lahf
sbbl
outsl
xlat
push
and
jne
js
inc
bound
das
sbb
jae
push
sbb
outsl
adc
icebp
jb
or
cltd
push
and
int
je
jno
sub
jle
jecxz
in
jae
jl
insl
scas
sub
inc
mov
xor
push
shrl
sbb
dec
pop
mov
mov
push
sbb
adc
push
shrl
mov
sbb
int
inc
stos
sub
dec
xchg
loopne
testb
scas
push
push
sub
aas
mov
iret
xor
and
sti
push
mov
push
push
adcl
push
outsb
pop
xor
cld
sub
jg
dec
dec
sbb
lahf
call
dec
or
into
sbb
mov
std
test
cld
pop
cmpsb
dec
xchg
popa
mov
jae
sub
ss
lret
xchg
in
lock
insl
aad
xchg
push
subb
fwait
xlat
rcrb
mov
lea
mov
in
sbb
test
push
sub
xorb
lcall
aad
stos
addl
imul
pushf
pop
and
test
cltd
sbb
outsl
test
je
jne
mov
cmp
mov
mov
add
pop
push
in
jne
shld
iret
loope
mov
aam
inc
adc
imul
adc
and
push
add
mov
add
lds
or
jbe
sub
xchg
movsb
shl
clc
pop
mov
xchg
test
xchg
mov
or
sub
fdivs
aas
je
call
loope
cmp
sbb
fistpll
aaa
repnz
jmp
xchg
inc
icebp
dec
lods
jae
and
mov
jecxz
sub
call
fiadds
loopne
cmpsb
jbe
test
and
adc
cpuid
xor
lds
pop
js
push
jl
dec
stos
lea
sarl
sub
addb
nop
sbb
or
insl
mov
inc
mov
push
orl
outsb
jo
jle
test
test
mov
jo
call
add
jo
popf
push
sbb
inc
push
insl
fldenv
sahf
push
iret
jge
mov
dec
xor
popa
xchg
xchg
sbb
dec
mov
pop
mov
mov
lahf
and
adc
mov
cltd
mov
repz
sbb
cmp
je
rcl
ret
pop
push
jo
dec
jecxz
and
jge
sub
imul
push
push
cmp
xchg
test
flds
sub
jo
add
xor
cmp
test
pop
jno
aam
push
in
ds
cld
adc
add
dec
sbb
scas
xchg
dec
ljmp
push
add
ss
xchg
mov
test
es
bound
lods
xorl
cld
movsl
jnp
or
mov
into
movsl
loopne
xchg
and
xor
pop
push
fcmovnu
mov
pusha
shlb
xor
mov
in
push
cmc
xorl
mov
cld
cli
xlat
les
push
fwait
lods
jno
ss
adc
cmp
lds
mov
aad
push
jl
sti
push
fsts
std
jecxz
pop
sub
dec
and
mov
loopne
xor
test
push
outsb
cmp
mov
int3
aam
dec
testb
mov
ss
push
aam
xor
pop
push
sub
and
and
pushf
fsubr
repz
jbe
fwait
ja
fnstcw
es
rcl
lcall
inc
cmc
sub
mov
out
gs
dec
inc
arpl
pop
imul
int3
rcrb
icebp
xor
cmp
je
and
adc
lds
data16
xchg
pop
dec
dec
mov
mov
into
inc
or
les
sub
and
popf
xor
leave
sbb
xor
into
nop
test
mov
fidivs
xchg
adc
add
push
jo
mov
popf
xlat
cmpsl
mov
pop
pusha
in
lock
inc
mov
notl
jnp
push
aaa
add
push
and
dec
scas
add
add
repz
popf
sahf
jns
adc
fldl
push
popa
adc
add
or
or
sbb
cmp
jge
mov
cld
cltd
enter
push
xor
loop
jle
cmp
or
cltd
movsl
xor
fdivrs
int
xchg
addl
lahf
xor
mov
roll
out
mov
mull
sub
jmp
and
fnsave
cmp
pop
sub
cmc
jge
das
adc
cwtl
sub
lret
mov
jbe
enter
inc
sahf
add
jge
leave
push
dec
jnp
sbb
xor
jns
push
pop
jmp
test
ljmp
adc
sti
add
scas
cmpsb
mov
sub
sahf
sbb
clc
mov
stc
stos
push
cs
rclb
in
lcall
sub
adc
add
lret
and
jae
fadds
pop
and
adc
mov
xchg
adc
ret
addl
xchg
cwtl
mov
fldt
dec
iret
cltd
add
pop
sub
jb
gs
mov
inc
roll
mov
lods
adc
int
outsl
dec
adc
shll
sub
cmpb
and
daa
mov
add
fadd
jmp
add
sahf
inc
test
clc
push
pop
cmc
fnstsw
out
pop
sub
jb
jno
mov
cmp
mov
inc
imul
cmp
pop
jg
insl
sahf
popa
xchg
xor
popa
pop
dec
inc
loop
sub
lds
clc
in
push
lds
stc
mov
test
data16
push
lock
hlt
cmp
ss
lret
test
out
jl
loopne
scas
mov
test
push
fidivl
dec
xchg
mov
test
sti
or
or
xor
out
cmpsb
aas
sub
cmp
decl
adc
dec
xchg
fisttpl
in
stos
cli
push
xchg
fwait
in
adc
out
test
mov
push
push
inc
out
lock
mov
xor
xchg
cmpsl
mov
push
xchg
or
es
aas
mov
jp
add
or
pushf
iret
fs
xchg
leave
push
adc
mov
cmp
mov
adc
xor
push
leave
sti
sbb
push
pop
in
lods
pop
jb
and
pop
faddl
stos
mov
jns
mov
mov
jge
pop
push
xchg
ja
push
pop
fwait
pusha
xorl
rcll
mov
fcompl
mov
add
or
xchg
int
arpl
addr16
cli
mov
mov
sub
ds
cltd
and
jb
mov
mov
pop
aad
mov
pop
sub
mov
push
roll
mov
pop
mov
rcl
jno
fcomp
sub
call
sbb
inc
clc
movaps
shrb
inc
jnp
pop
les
jno
jl
mov
and
adc
push
or
pop
inc
dec
in
xor
mov
fs
je
or
dec
push
mov
xchg
cli
pop
cmp
out
xchg
stc
int
cmpsb
mov
adc
or
mov
mov
mov
mov
iret
clc
ljmp
jp
mov
cwtl
sbb
push
test
mov
aad
popa
out
xor
ds
fcompp
pusha
mov
dec
fistps
in
divps
shlb
lock
popa
out
mov
adcl
fwait
mov
xlat
add
fidivrs
lods
and
mov
jne
int
lods
dec
test
mov
cmp
or
xchg
fcoms
adc
pop
popl
jno
sub
xchg
mov
jne
adc
cmc
dec
out
push
jge
sbb
cli
xchg
movl
mov
jne
das
cmp
ja
sub
dec
fwait
cmp
add
inc
rolb
mov
sbb
rolw
pop
or
lock
push
adc
xchg
pop
into
push
pop
lcall
mov
test
mov
mov
pusha
and
pop
cli
push
sbb
outsl
outsl
dec
les
cltd
xor
jns
rorb
in
and
js
iret
lods
dec
and
mov
andl
cwtl
cmp
addr16
mov
popf
sahf
out
frstor
pushf
push
ja
dec
sbbb
cmp
xchg
push
das
clc
stos
add
jb
movsb
addr16
cmp
inc
cmp
out
pusha
mov
fwait
xor
and
add
add
arpl
roll
xlat
or
mov
sub
jecxz
out
mov
fucom
xlat
adc
cmp
xchg
enter
xchg
add
pop
mov
in
imul
mov
push
jge
icebp
gs
adc
std
into
xor
hlt
flds
add
jmp
xor
pop
filds
out
lods
cli
add
mov
fwait
mov
pop
xchg
or
mov
adc
lret
xchg
push
sub
add
scas
lret
mov
adc
jbe
nop
addb
mov
jp
mov
mov
rorl
mov
or
loope
or
in
int3
mov
aam
xchg
mov
sbbl
cmp
jge
mov
jle
ficoms
outsl
insl
fs
ss
stos
movsl
and
aad
lds
cmp
adc
push
xchg
loope
bound
enter
mov
jge
fidivl
ja
add
insb
push
cmp
mov
inc
and
insb
jnp
mov
xchg
fistps
inc
insl
lds
outsb
icebp
jecxz
sub
mov
je
push
push
add
xor
mov
cltd
cmp
std
loope
int3
xchg
xor
xchg
sub
and
lret
inc
mov
insl
lods
dec
je
hlt
call
ret
pusha
sti
sbb
xchg
pusha
and
sub
xchg
jbe
loop
inc
xor
cmp
jne
mov
aam
scas
cmp
leave
xor
out
sbb
insl
push
cmp
leave
test
mov
sbb
push
das
mov
dec
in
loope
xchg
inc
daa
inc
inc
imulb
imul
and
cmp
lcall
sub
mov
sub
adc
mov
jno
lret
int
mov
jo
imul
negl
in
mov
adc
gs
adc
sub
jecxz
xchg
aam
mov
push
add
stos
pop
push
xchg
mov
jl
mov
out
aam
xchg
sbb
push
sub
push
xor
jmp
daa
inc
inc
mov
jge
cltd
out
jno
jnp
adc
jle
mov
mov
in
push
pop
aad
pop
arpl
and
pop
leave
cli
pop
xchg
jecxz
sbb
jno
pop
cmp
push
push
mov
loopne
hlt
in
push
jecxz
repz
dec
stos
xor
dec
sub
jmp
int
jno
jb
out
sbb
inc
mov
pop
and
dec
or
aad
jns
xor
cmc
push
xlat
mov
je
out
jns
stos
ljmp
mov
les
pop
cmpb
out
add
fdiv
aad
ret
cmp
pop
inc
sbb
lea
mov
movl
xchg
cmp
mov
cwtl
mov
push
shrb
cmpsl
leave
clc
stc
pop
cmp
xlat
int3
push
nop
clc
mul
in
adc
push
cwtl
push
add
mov
out
outsb
mov
ret
pop
and
insl
ret
in
fldl
es
pop
jns
gs
stos
andl
subb
dec
cmpl
test
and
pop
mov
sub
cmp
fwait
enter
jmp
aam
ret
pushf
or
fnstcw
lea
push
aad
jmp
push
dec
jg
repnz
mov
and
arpl
enter
lock
pop
mov
sbb
mov
cmp
xchg
sti
pop
pushf
pop
add
fistpll
and
push
mov
xorl
aaa
test
scas
pop
pop
icebp
xchg
jbe
ss
jmp
jne
adc
jmp
cmpb
cmp
inc
pop
les
in
cwtl
pop
xchg
scas
adc
stos
rcl
pop
jbe
fwait
mov
mov
cmp
jmp
mov
cmc
dec
rcr
xchg
jno
jecxz
jmp
into
inc
xchg
mov
fstpl
sub
lods
inc
in
and
pop
pop
cmp
dec
xor
push
xchg
movsb
outsl
jle
pop
mov
cmpsb
in
pop
pop
jp
lret
push
xchg
rolb
push
je
lahf
pop
rorb
or
and
mov
shll
push
mov
fwait
push
pop
push
scas
inc
aas
jo
mov
cli
jl
or
iret
lds
sbb
cmp
jp
lret
iret
cltd
hlt
divb
jnp
inc
pop
lods
mov
stc
xchg
xlat
insb
fdivrp
lock
mov
dec
xorb
je
ret
mov
lcall
inc
and
rcrl
xchg
cwtl
mov
mov
jecxz
fsubrl
subb
mov
in
adc
add
adc
add
inc
sti
dec
mov
fmull
clc
pop
mov
sub
push
adc
mov
adc
and
push
xor
push
lahf
fidivrs
and
push
sub
js
loopne
push
pusha
xor
mov
adc
dec
pop
sbb
mov
popf
adc
mov
test
push
mov
jnp
jnp
fidivs
sub
ret
cld
push
push
lcall
leave
clc
pushf
in
iret
daa
in
inc
hlt
push
pop
dec
xor
mov
popf
std
mov
ret
je
mov
mov
jl
adc
xor
js
xlat
dec
sti
pop
sub
sub
lds
notb
repnz
inc
mov
pop
cmp
add
mov
fstpt
jp
pop
dec
xor
cld
dec
sbb
push
cmpsl
dec
mov
xor
jge
and
adc
cmpsb
dec
sarl
fwait
push
adc
push
pop
or
pop
xchg
mov
stos
dec
sub
pop
mov
adc
imul
in
inc
push
pop
js
ja
push
clc
mov
add
push
mov
out
insl
cld
arpl
push
lcall
jne
mov
or
mov
dec
icebp
push
out
pusha
loopne
fdivs
out
enter
sub
and
fisttps
sub
cmc
ljmp
inc
or
lahf
aam
movsb
xchg
aad
sti
push
mov
data16
adc
fadd
insb
dec
dec
mov
cmp
or
cmp
pop
arpl
cmp
test
mov
inc
dec
inc
xchg
shrl
jae
mov
sbb
cmp
fwait
push
xchg
cmpl
xor
rorb
inc
sub
repz
sub
jp
int3
jae
and
lahf
movsb
das
fs
xchg
adc
inc
and
xchg
push
mov
xchg
ffreep
fstpl
mov
add
adc
and
push
sub
bnd
push
push
jo
xchg
lahf
movsl
xchg
or
hlt
sub
push
mov
add
sti
lds
mov
repz
and
dec
fsubr
push
or
rcll
pop
jae
and
cmp
mov
mov
dec
push
in
or
adc
add
pop
sti
xchg
sarb
sbb
jnp
inc
fisttpll
rol
into
clc
lahf
push
lea
jecxz
pop
pop
fistpll
mov
sbb
pop
mov
xlat
repnz
mov
mov
lcall
pop
stc
cmp
hlt
push
mov
loopne
and
out
sbbl
idiv
imul
out
outsl
jle
jb
mov
cmp
rcrb
mov
push
xor
xchg
sub
sbb
or
stos
mov
jae
out
out
pop
lcall
adc
and
fwait
shl
pop
push
push
scas
je
cmp
testl
call
sahf
or
ret
xchg
roll
enter
jmp
dec
cmp
push
into
shlb
xor
jecxz
fcomip
jl
rcrl
pop
jnp
and
test
mov
and
mov
sub
inc
sub
push
sti
mov
clc
xchg
mov
pop
int
sub
aas
dec
jmp
test
sbb
or
fisubrs
loop
sub
orb
and
popf
jnp
jmp
pop
push
aam
adc
cmp
push
inc
mov
aas
out
out
pop
mov
or
shrb
push
lcall
insb
xor
call
cmp
xchg
or
cmp
xchg
insb
insl
mov
or
mov
or
aad
xor
arpl
aad
sbb
ret
or
sahf
pop
mov
lds
push
mov
xchg
push
add
scas
push
cld
mov
inc
jge
jecxz
cmp
daa
inc
popa
cltd
push
push
add
outsb
fistpl
sub
xor
out
sub
addr16
nop
mov
ds
sbb
test
jns
popa
out
pusha
sbb
inc
repz
cmp
dec
xchg
lret
and
pusha
cmp
popf
inc
xor
mov
xchg
orl
call
loop
push
xchg
sub
and
pop
in
mov
jno
sbb
dec
xor
dec
lods
xchg
fbstp
lds
mov
aad
adc
mov
sbbl
cmp
xchg
pop
mov
sbbb
xchg
mov
popa
sbb
xor
sbb
pop
add
das
loop
or
push
les
das
mov
addr16
xchg
xchg
push
push
movsb
jns
ljmp
cs
mov
sub
pop
rolb
insb
pop
and
jb
sub
inc
push
stos
insb
add
gs
sbb
mov
push
adc
out
rclb
pop
adc
out
sub
push
jg
dec
or
mov
xchg
aad
xor
test
xor
and
or
and
dec
lcall
cmpb
jb
xlat
mov
lds
lods
insb
outsl
in
ss
add
arpl
pop
pop
stc
push
add
ss
sarl
addr16
cmpsl
je
pop
pop
and
std
outsb
sbb
cwtl
vmwrite
cmp
repz
or
stos
push
and
push
shll
cwtl
or
pop
loope
rclb
cmp
movsl
cmpl
jmp
pop
xor
mov
xchg
cltd
jle
sahf
imul
pop
jmp
paddq
ret
sti
rcrb
scas
in
sub
scas
xlat
cmpb
sub
mov
sub
out
aaa
subl
rol
cmp
cli
mov
or
aad
fiaddl
sub
push
mov
push
dec
scas
mov
jp
dec
imul
stos
sbb
xchg
cltd
into
inc
shrl
outsl
dec
xor
arpl
mov
fidivrl
out
lret
adc
jbe
sbb
cltd
cmp
cld
pop
jb
sub
sbb
xchg
push
aas
in
cs
jl
jg
adc
sub
aas
or
enter
xor
imul
xchg
xchg
insl
dec
xchg
add
add
pop
add
mov
rep
fucomi
mov
les
mov
aad
movsl
and
loopne
insb
dec
pop
sbb
sub
int
decb
sub
and
gs
and
aam
icebp
test
push
adc
fdiv
jb
dec
rcrl
jns
jmp
std
xchg
loopne
movl
es
mov
add
pop
jae
mov
loope
ljmp
mulb
inc
mov
fcomip
out
daa
inc
dec
add
fiaddl
or
pop
stc
lock
inc
movsb
add
pushf
push
pushf
repz
sbb
or
pop
insl
and
cmp
in
test
enter
cmpsl
sbb
jge
jl
push
es
ret
packuswb
jns
pop
andb
push
pop
out
xor
mov
xchg
je
sub
sub
leave
inc
out
pop
jb
lret
or
mov
faddp
push
fisttpl
lock
hlt
shrl
or
cmp
lods
loop
lea
add
jle
pushf
call
fldl2e
aas
mov
stc
xor
stc
dec
dec
cmp
cs
pop
stos
fdivs
cs
int
cld
and
xchg
jno
and
xor
or
mov
mov
scas
insb
sarb
add
add
and
aam
inc
adc
jmp
adc
sbb
in
pop
push
sbb
dec
sbb
dec
and
inc
add
mov
mov
orl
test
movsl
outsb
xchg
xchg
xchg
push
xor
dec
das
divl
lods
in
nop
movsl
bound
pop
rclb
ret
pop
cmpsl
stc
lret
cmp
dec
and
popf
cmpsl
mov
test
pushf
push
sbb
mov
pop
xchg
sbbl
je
fdivs
stos
jbe
push
push
gs
ljmp
mov
add
in
shll
sbb
xchg
mov
sub
mov
test
xor
cmc
jb
dec
mov
cmpsl
scas
je
xchg
push
xchg
andb
mov
insb
add
jo
adc
nop
mov
roll
ret
xor
pop
jecxz
pushf
aas
jge
xor
subb
adc
mov
mov
push
sbb
xor
int3
mov
sub
std
dec
dec
cmpsl
test
cmpsb
lods
insl
add
inc
add
lahf
sub
test
dec
jge
inc
mov
lds
cwtl
sub
mov
pop
jg
add
jge
daa
mov
lock
fdivrp
mov
mov
sti
pop
gs
cmp
jecxz
pop
adc
enter
gs
jno
cmp
and
xor
dec
mov
add
adc
call
sbb
xchg
inc
test
cmc
mov
lods
les
out
push
mov
int
sti
push
das
jl
xor
imul
sbb
ja
or
fsub
xor
lret
das
mov
jnp
aad
and
outsl
xchg
sub
inc
rcrb
cmc
lods
mov
mov
sub
cmpsb
push
dec
mov
xor
call
xor
cmp
pop
xchg
jae
mov
cli
sbb
rolb
inc
sub
or
and
int
inc
scas
data16
add
mov
std
sub
mov
cmp
mov
lcall
daa
mov
and
not
sbb
xor
clc
pop
cmp
and
push
and
jl
add
repz
aam
int3
mov
out
pop
mov
popa
movsl
fs
testl
fimuls
fcomps
leave
sbb
adc
sbbb
cli
mulps
imul
out
call
mov
push
fdiv
xor
orl
lret
mov
fs
jl
add
xchg
aam
test
fidivrs
sbb
mov
jecxz
inc
imul
cmp
cmp
xor
fimuls
jno
fcoms
mov
inc
mov
out
dec
ljmp
stos
mov
addr16
xchg
call
insb
pop
jge
imul
xchg
push
dec
in
fsts
shlb
cmpsb
inc
inc
xchg
jl
jecxz
repnz
inc
cmp
push
xchg
sbb
jae
les
and
cmp
and
and
mov
lea
stos
das
jmp
fimuls
rorl
inc
jle
sbb
sub
cs
inc
or
jne
cmp
fincstp
pop
mov
jno
repz
pop
jl
xchg
pop
fs
push
shrl
loop
shll
mov
mov
fsubrl
mov
vmovd
rorb
adc
jle
andl
mov
lahf
in
sti
jge
mov
jne
dec
dec
sbb
jmp
xor
daa
insl
mov
mov
lret
adc
push
mov
clc
sub
inc
insb
pop
stos
sub
idivl
mov
xor
sahf
sub
push
lret
push
stc
or
sub
and
and
mov
out
xchg
sarl
cmp
cmc
and
mov
xor
fsubp
into
and
jno
ret
add
movl
pop
enter
mov
sbb
mov
inc
stc
jle
mov
in
in
mov
sub
fisttps
xor
mov
test
lods
inc
test
mov
mov
into
jmp
fildl
pop
jg
call
mov
push
xchg
xchg
mov
imul
rcrl
inc
enter
ds
xchg
mov
aad
mov
sub
mov
stos
jg
iret
es
lea
rcl
les
xor
jne
mov
ftst
jnp
pop
mov
mov
je
outsb
pop
jmp
loop
lahf
inc
xchg
mov
sub
lods
xor
xchg
push
inc
fstpl
rcll
aad
mov
or
inc
fs
push
clc
mov
arpl
cmp
inc
ret
aas
in
cmp
mov
sbb
add
daa
jns
ja
shlb
or
inc
xchg
out
cmpsb
mov
ljmp
xor
lret
adc
mov
fld
in
push
movsb
mov
mov
sbb
call
fs
sub
ja
sbb
mov
pop
scas
or
inc
inc
adc
add
sbb
out
push
add
mov
push
mov
mov
and
scas
sahf
add
dec
inc
aam
add
mov
add
jmp
dec
xor
pop
movsb
arpl
adc
mov
inc
rcr
fstps
dec
scas
dec
mov
iret
push
add
mov
out
add
test
add
out
js
push
xor
ss
jae
cwtl
les
sbb
mov
test
mov
jbe
dec
cmp
jno
or
pop
or
nop
xchg
add
dec
int3
pop
cmpsl
cmc
cmp
dec
push
mov
loope
hlt
test
dec
dec
gs
xor
test
cmc
orb
dec
jbe
mov
fwait
xchg
aad
cmp
je
iret
sub
mov
nop
lods
mov
xchg
ficomps
jno
and
push
dec
push
mov
into
negb
out
inc
movsl
cli
daa
popf
or
daa
inc
jl
int
xchg
xor
outsb
ret
xor
push
mov
sub
xchg
popf
xchg
cmpb
cmc
movsl
js
inc
jne
fucom
pusha
mov
data16
jp
mov
adc
xor
xlat
lret
cmp
mov
cmpsb
cmp
adc
xorb
int3
jne
scas
ffree
cwtl
ljmp
dec
pop
faddp
or
ja
popa
mov
sti
lds
sbb
and
xor
or
and
sti
xor
push
addl
sub
or
push
aam
mov
mov
aas
xchg
xchg
sub
mov
sbb
dec
test
dec
imul
push
stc
xchg
cwtl
lret
mov
lahf
test
loope
pop
es
jecxz
mov
push
cmp
adc
out
mov
leave
push
fadds
mov
cs
mov
test
cmpsl
add
dec
ljmp
scas
pop
xchg
cld
mov
sbbb
je
mov
rol
std
cmp
mov
sahf
mov
mov
fwait
mov
inc
dec
cld
lea
pushf
dec
mov
aaa
xchg
xchg
push
mov
test
aad
push
or
aaa
outsl
clc
xchg
insb
adc
adc
jl
mov
ja
xor
das
mov
ss
mov
mov
push
xchg
mov
pop
int3
jle
scas
mov
jbe
ret
aaa
push
sbb
int3
popf
lock
enter
in
mov
jg
ret
lds
cltd
rolb
add
stos
and
jecxz
xor
outsl
or
sub
sub
push
ret
xor
aad
mov
std
mov
mov
repz
adc
pop
mov
shrb
xchg
mov
les
pop
mov
xor
sahf
jns
push
add
push
int
aas
cmp
jnp
mov
sub
xchg
mov
insb
jbe
out
sub
and
mov
mov
dec
mov
lahf
sub
dec
ret
mov
repnz
ljmp
addr16
leave
aad
pop
pop
lods
test
leavew
or
out
push
out
xor
dec
ret
sbb
ficoml
and
ja
xchg
daa
push
cmc
xchg
mov
sbb
mov
rorb
jne
sbb
cltd
scas
push
inc
fwait
sahf
pop
out
dec
adc
arpl
ret
or
sar
or
mov
mov
nop
pop
cmp
sti
xchg
sub
or
in
pop
xor
call
push
pop
cld
mov
pushf
pop
sahf
insl
sbb
cmp
mov
mov
pop
mov
sub
and
xchg
cltd
xor
lock
or
xchg
test
test
dec
mov
or
movsl
popa
fs
pop
mov
test
mov
movsb
scas
mov
ja
xchg
xchg
push
add
call
pop
jnp
cld
or
adc
dec
lret
inc
mov
mov
mov
add
int3
stos
out
inc
add
add
cs
out
mov
mov
mov
xchg
stc
push
push
or
xchg
stos
lods
stos
mov
add
push
push
pop
sarb
or
and
insb
dec
inc
dec
mov
lret
nop
fwait
dec
sub
xor
add
inc
lahf
mov
cmpsl
adc
dec
js
out
cmpsl
add
cmc
pushf
test
add
lret
adc
les
out
loopne
dec
xor
push
lds
addb
out
xor
clc
mov
sub
adc
arpl
ret
jae
jne
mov
loope
xchg
inc
xor
movsb
add
in
adc
notl
adc
xor
das
popa
mov
dec
movsl
in
or
xor
cmc
mov
cmp
ja
or
sub
jb
sbb
push
in
mov
cs
pop
jbe
xchg
xchg
cmp
fs
cmc
jmp
inc
in
mov
mov
add
fsubrl
cld
cld
in
sub
push
fdivs
push
popf
icebp
mov
scas
cmpsl
sub
sub
push
fwait
nop
adc
ja
jo
lds
movsb
inc
ror
fmuls
push
pop
mov
ja
jae
pop
loop
std
jle
insb
lcall
inc
lea
in
in
push
push
pop
jae
jbe
sbb
dec
add
pushf
sbb
fldt
cltd
and
idivb
aaa
jle
mov
mov
cmp
push
test
dec
and
push
jnp
cld
adc
push
jecxz
and
adc
loop
clc
add
xchg
cld
fbstp
pop
stc
mov
fstpl
gs
pushl
loopne
jbe
mov
std
mov
ret
fistpl
pop
xchg
dec
mov
rclb
lock
pop
inc
or
push
lcall
add
fs
dec
mov
or
dec
aam
and
dec
in
sbb
mov
js
inc
pushf
mov
mov
xor
cmp
imul
push
xor
and
dec
fsubl
inc
fucom
xor
sub
cwtl
adc
sbb
popa
push
xchg
sahf
dec
mov
lahf
loopne
pop
mov
jecxz
sub
jae
lret
inc
dec
or
dec
lds
xchg
cmp
fdiv
aad
decl
jge
sub
stc
push
xlat
jge
iret
mov
and
sub
cli
sbb
hlt
fisttpll
push
jbe
xchg
push
add
add
jae
or
or
cmp
loop
in
cmp
in
inc
pusha
loope
loope
mov
mov
pop
adc
es
lods
into
call
out
icebp
jae
lahf
mov
jb
dec
jbe
aaa
loope
adc
sub
lock
cmp
xor
xchg
xor
mov
sub
ja
ja
and
outsb
mov
test
stos
jo
fwait
inc
test
adc
inc
test
data16
dec
xor
les
lret
jb
push
std
adc
sbb
jecxz
and
pop
out
and
xchg
aas
fnsave
sbb
push
movsl
mov
fidivs
fadds
outsb
mov
inc
paddusw
push
or
std
cmpsl
pop
subl
lods
mov
pop
ss
and
pop
cmp
stos
mov
mov
scas
mov
adc
xor
in
loope
cmp
je
or
int
sub
xchg
xor
pop
push
sbb
mov
push
sbb
pop
adc
pop
into
xchg
adc
aas
and
add
test
mov
add
mov
pop
sbb
sub
adc
scas
icebp
ja
test
adc
sti
loop
lods
ret
mov
int3
push
cltd
cld
sbb
jle
pop
std
fistpl
lret
pop
dec
push
xchg
sbb
test
pusha
imul
xchg
cli
pop
sub
test
jmp
push
gs
shrl
push
sub
fildl
scas
push
lods
jae
adc
iret
inc
stos
test
push
fs
xor
cli
and
aad
sub
push
add
sbb
dec
sbb
or
aas
rcrb
rol
jae
pop
lahf
sbb
add
pop
mov
test
decl
push
jl
loop
decl
outsb
add
mov
xchg
xor
inc
push
sub
mov
outsl
clc
out
xor
loopne
mov
imul
enter
sbb
push
test
orb
or
paddusw
stos
xor
fisttpl
out
cmp
xor
imul
mov
loop
data16
out
and
fldl
ds
stc
xchg
push
cld
in
pushf
lds
xchg
lahf
cmp
ja
dec
test
sub
sbb
jecxz
shl
jmp
scas
push
notl
mov
mov
stos
sahf
mov
and
dec
or
scas
cld
outsb
fsub
in
enter
shl
pusha
movsl
lods
lock
iret
daa
mov
out
iret
cld
and
enter
pop
push
or
pushf
cmp
mov
cmpsb
test
xchg
inc
flds
fs
into
fdivs
jbe
leave
ret
pop
mov
sub
mov
insl
or
pop
mov
stos
std
or
ret
inc
add
pop
push
xchg
or
ljmp
fsubrl
arpl
fs
inc
pop
movsb
inc
hlt
stos
or
inc
test
fistpll
mov
mov
enter
push
call
and
push
clc
push
in
idiv
mov
in
inc
stos
jp
fnstenv
or
in
les
or
xchg
mov
stos
jmp
out
imul
rorb
xor
ds
jg
cmc
cmp
cmp
sbb
movsb
pop
sbb
idivl
xchg
push
sbb
orb
loope
adc
rclb
push
je
push
iret
lcall
cmpsb
pop
lods
push
pusha
mov
mov
addr16
shl
mov
test
jnp
jmp
cltd
mov
and
sbb
mov
adc
mov
inc
mov
push
mov
cs
imul
dec
xchg
stos
sub
sub
dec
lahf
dec
stos
and
inc
and
push
fstps
mov
dec
fwait
jmp
std
ficoml
jg
cmp
rcrl
pop
push
or
dec
mov
mov
push
or
js
jl
push
mov
filds
dec
popfw
or
cld
icebp
mov
jno
xchg
pop
idivl
adc
jmp
push
push
xchg
fs
icebp
pop
jl
cld
mov
add
push
rcr
pop
cmp
inc
push
mov
sub
push
sti
mov
cli
sub
pusha
push
jne
mov
mov
test
or
dec
test
or
jo
push
fucomp
or
cli
push
aam
fdivrp
mov
sub
mov
sub
xchg
mov
mov
movsb
test
lcall
ss
mov
cs
sbb
push
jge
lret
sbbb
std
imul
cmp
mov
mov
mov
jnp
imul
xor
sub
pop
xor
cmp
daa
xor
rcrb
push
xchg
pop
jbe
inc
mov
in
and
lcall
popa
mov
and
popa
xor
and
and
jns
add
sub
pop
xor
cmpl
arpl
lods
adc
and
das
andl
jl
push
jo
nop
or
mov
lahf
test
dec
adc
inc
out
pop
jne
aad
in
push
pop
repnz
stos
in
add
jle
or
cs
iret
aas
ret
loop
pop
test
dec
sub
xchg
filds
inc
repnz
aaa
adc
mov
jo
sbb
aaa
popa
xor
mov
sub
xchg
push
adc
fildll
mov
dec
bts
lock
adc
jnp
inc
mov
rolb
decl
push
stos
lcall
push
arpl
push
push
shrl
jge
daa
shll
jp
sub
int
jno
inc
cmp
icebp
pop
insl
jb
mov
sub
xchg
lret
ss
daa
xor
mov
mov
add
or
roll
mov
add
and
mov
push
rcl
inc
mov
sarl
jae
int3
add
daa
out
orl
cltd
enter
mov
imul
sbb
lock
call
out
ds
aad
daa
shrl
add
mov
adc
cli
add
stos
push
sbb
dec
lahf
sub
jno
shr
sub
xor
mov
fldenv
mov
and
shlb
popf
mov
das
push
outsl
hlt
dec
push
dec
cmp
ss
inc
ret
mov
mov
xchg
push
pop
pop
aam
xor
xorl
sar
dec
cmp
xchg
sahf
adc
out
dec
lods
call
mul
loope
sub
xorb
push
rol
or
shlb
es
pop
inc
jl
mov
sub
test
dec
jae
pop
pop
inc
add
clc
pop
cltd
xchg
int
sbb
mov
sub
or
adc
scas
stos
adc
lods
test
mov
push
mov
lea
push
in
out
inc
repz
and
cli
les
daa
push
out
xor
jbe
adc
pusha
inc
jo
push
or
out
dec
adcb
dec
mov
mov
movsl
les
arpl
jns
xchg
cs
andps
lds
add
adc
jge
jecxz
fwait
sub
add
scas
cli
mov
or
aaa
scas
sahf
push
sti
cwtl
sub
jp
lret
mov
std
or
sbb
mov
adc
jecxz
fs
or
out
cmpsl
adc
push
jbe
ret
aas
enter
test
ljmp
cmpsb
pop
jo
lods
push
aaa
stos
push
scas
in
dec
mov
or
or
pop
sub
push
fsubrl
or
negl
sub
fwait
xchg
or
pop
and
push
enter
push
out
stos
inc
cmp
inc
jbe
cwtl
les
push
lret
pushf
dec
adc
inc
data16
pop
lods
cmp
ret
xorl
mov
js
rorb
leave
cmp
cmp
sbb
mov
filds
dec
pop
ret
scas
mov
cmp
call
repz
loope
stc
xor
push
xchg
gs
mov
sar
mov
xor
mov
mov
negl
sbb
cli
cli
adc
ret
shll
sub
pop
push
push
jl
repnz
adc
data16
mov
cmpb
fnstenv
xchg
cmpsb
pop
ret
add
cmp
sub
stc
jbe
ja
adc
daa
jne
sub
jno
mov
or
adc
test
adc
xchg
jo
imul
inc
inc
fcompl
je
mov
pop
fwait
insb
sub
fistpll
push
outsb
xchg
sahf
xchg
cli
lret
imul
stos
jnp
pop
fwait
or
das
mov
rorb
jmp
jge
cmc
insb
lea
cmc
clc
lock
mov
rol
test
int3
pop
jae
neg
mov
bound
push
jmp
and
mov
inc
pop
cmp
lret
es
lret
sbb
cmp
scas
inc
aaa
stc
xor
aas
mov
cltd
call
sub
imul
sti
push
mov
fstpt
bound
inc
shlb
clc
jns
stos
xor
jecxz
sub
cmp
mov
push
mov
repnz
and
xchg
push
iret
dec
scas
ret
mov
in
mov
adc
cmpsb
mov
push
test
mov
inc
mov
fsts
pop
dec
test
test
test
pop
sahf
mov
and
mov
push
insl
jo
xchg
fbstp
fists
imul
mov
pop
dec
inc
pop
ja
js
dec
stos
push
sbb
ret
or
mov
ret
or
out
daa
xchg
jg
ret
leave
add
add
xchg
sub
add
into
cmpl
loopne
je
test
sbb
and
mov
test
imul
das
cmp
and
mov
lea
push
ffree
dec
xchg
inc
test
and
sbb
jne
aam
sti
enter
fcomps
or
and
lods
and
clc
push
or
add
insl
je
cli
arpl
xchg
adc
dec
jecxz
loope
rclb
jae
insl
shrb
jge
adc
push
jnp
lcall
fistps
xchg
xor
lods
sbb
jnp
xor
add
flds
gs
insb
jg
jae
aad
xor
pop
mov
aas
mov
loopne
lea
aad
lahf
and
cltd
out
ret
data16
movsb
lcall
aaa
in
insl
or
out
mov
cld
out
sbb
rorb
mov
jmp
fs
sbb
mov
xchg
int
sbb
mov
jmp
loope
cwtl
loop
sub
das
inc
loop
inc
aas
adc
jl
out
xchg
inc
addl
pop
popf
jle
mov
mov
repz
test
sub
push
ds
inc
xchg
xor
push
xchg
ror
mov
and
imul
sub
ja
ficoms
xchg
push
xchg
push
call
adcl
cmpsl
dec
clc
add
js
andb
cmp
mov
ret
add
or
push
stos
add
mov
jp
int3
sahf
test
adc
fdivr
pop
xor
hlt
in
jl
packssdw
inc
xchg
jg
pop
movsl
popf
out
test
inc
stos
dec
gs
sbb
inc
ret
mov
cli
shlb
and
es
jb
push
ds
and
push
out
add
mov
adc
nop
lods
and
mov
lods
sbb
lods
or
push
leave
pop
dec
inc
cmpsl
ja
out
jae
mov
mov
jbe
shl
xchg
lea
mov
aam
enter
dec
movsl
or
fs
push
jge
mov
add
xlat
leave
lds
mov
jmp
rorb
xor
outsb
jo
loopne
cmpsl
cltd
aaa
xor
scas
jge
push
xlat
aam
out
aas
stos
mov
lret
cmp
lret
popf
xor
cli
movsb
fstl
leave
iret
xor
sub
inc
pusha
orl
pop
js
in
sbb
push
adc
sbb
and
xchg
fisttps
fidivs
add
push
xchg
cmc
punpckhdq
imul
add
push
or
jmp
push
lds
dec
pop
insb
xor
push
test
sub
or
shrl
xchg
inc
je
xor
gs
dec
pop
sar
or
stos
fisubs
cmp
jns
jg
or
adc
aas
je
jecxz
mov
add
fwait
inc
dec
nop
leave
es
jl
ficoms
sbb
inc
sbb
xchg
jo
dec
rcl
sub
mov
and
cli
sahf
mov
jne
jecxz
mov
sub
cwtl
mov
jge
xchg
mov
hlt
pop
loopne
int
in
mov
pop
mov
pop
scas
push
inc
int
mov
pop
clc
and
cmpsl
and
pop
or
movsl
push
clts
jmp
fildll
xor
jge
cwtl
idivl
xchg
mov
mov
fstpt
dec
push
adc
stc
idiv
jnp
call
and
xchg
out
adc
mov
push
adc
mov
adcl
mov
or
or
pop
mov
cs
or
cld
mov
cmpsl
into
and
mov
iret
std
inc
or
stos
xchg
inc
aad
test
pop
mov
icebp
adc
jmp
or
mov
mov
or
cmp
fwait
dec
dec
cmc
es
fs
or
xlat
test
inc
nop
push
lods
arpl
psraw
push
inc
cltd
jg
sub
aam
mov
outsb
ss
dec
stos
dec
lock
cltd
push
xchg
shrb
jecxz
imul
call
push
fs
sub
sub
cs
mov
xlat
mov
lea
add
or
dec
aad
mul
pop
scas
cltd
xor
addr16
dec
clc
and
xor
sbb
into
cmpsl
or
sbb
arpl
and
sahf
xchg
iret
jecxz
push
movl
fstps
aad
mov
mov
lahf
cmp
in
cld
jl
xor
mov
sbb
es
inc
movsl
bound
stmxcsr
adc
cmp
or
lcall
xor
sbb
ret
in
sahf
pop
xchg
mov
arpl
daa
into
int
fnstcw
xchg
loopne
pop
mov
jns
xlat
and
jl
adc
jb
jle,pn
mov
shlb
inc
and
xor
push
xchg
ret
out
int
ds
jg
fnstsw
call
pusha
scas
out
sbb
dec
jp
mov
leave
mov
sub
sbb
hlt
lods
bound
aas
test
lods
jno
xchg
cmpl
js
clc
faddl
movsl
or
adc
mov
jp
or
add
xor
shr
fsubp
cmc
in
push
adc
dec
lcall
mov
mov
push
cmp
int
jns
push
mov
insb
dec
fs
sahf
and
clc
lock
in
in
insl
lods
jg
xor
inc
mov
ja
add
fmuls
and
xorl
popf
ret
inc
mov
lret
das
pop
loope,pt
nop
bound
or
push
ficoml
aad
mov
imul
repnz
out
mov
jno
pop
std
xor
adc
xor
pop
shlb
and
or
je
xor
mov
ss
adc
imul
cli
add
add
cmp
mov
mov
dec
jb
add
add
and
rcll
cmpl
sub
add
test
sub
clc
in
outsl
xchg
repnz
rcr
jae
add
xchg
inc
addr16
xorb
sbb
imul
aad
dec
insl
mov
or
lahf
aad
pop
out
xchg
add
in
cmpsb
repnz
sbb
jp
add
data16
fs
imulb
mov
mul
stos
jb
mov
dec
mov
or
xor
sbb
les
add
mov
rorl
inc
lods
clc
push
push
lds
roll
push
jp
das
dec
dec
xchg
aas
das
decl
pushf
jo,pt
movsl
add
xchg
leave
inc
xchg
fwait
stos
sub
sbb
inc
insb
mov
and
jo
stos
xor
push
insl
xchg
sbb
rcll
and
mov
icebp
repnz
adc
testb
inc
jl
pop
add
mov
inc
mov
push
popf
add
inc
cmp
ds
aaa
rol
or
xor
insl
fbld
push
push
or
mov
xor
sbbb
xchg
nop
pop
shr
and
and
xlat
sbb
xchg
leave
insl
sarl
ret
fadd
mov
inc
ss
xchg
inc
push
lret
rorl
cmp
jae
nop
mov
shll
inc
rorb
jnp
dec
ret
push
push
jmp
and
or
insl
and
sub
lcall
fyl2xp1
popf
or
mull
lds
push
inc
or
outsb
push
test
pop
pop
fdivs
insl
cltd
adc
or
fwait
sub
fs
dec
cmc
pop
fwait
jae
and
repnz
popa
nop
and
xchg
sub
xchg
cmp
popa
jns
outsb
add
outsb
sti
sub
jne
pop
and
mulb
sbb
loopne
pop
and
cmp
and
xlat
repnz
add
fnstenv
cmp
test
adc
mov
and
adc
ret
dec
or
cmpsw
sti
adc
or
cwtl
setne
out
test
xor
pop
loope
daa
lock
pop
inc
lods
push
xor
sti
repz
pop
push
idivb
cli
adc
jbe
push
and
out
cmpw
sub
or
pop
xchg
or
gs
shrb
ds
testl
sti
mov
dec
inc
pop
inc
out
enter
repnz
xchg
or
mov
addb
xor
sub
ss
cmp
repnz
scas
push
lock
stos
lods
xchg
mov
addl
outsl
mov
mov
or
cmp
mov
mov
push
daa
stc
es
inc
inc
dec
mov
testb
inc
fucomip
jno
jp
cmp
sbb
mov
in
in
or
jb
cltd
jge
xor
inc
jnp
jmp
add
popf
stos
inc
and
pop
clc
add
movsl
jle,pt
out
es
jbe
scas
xor
mov
fs
pop
push
pushf
push
and
ret
mov
fucomip
insb
in
enter
xor
jl
out
or
adc
xor
pop
push
push
dec
xor
mov
fsubrl
pop
and
xchg
movsb
cli
inc
and
xchg
lds
aam
jge
cwtl
outsl
sub
loop
inc
adc
pop
and
jle
mov
mov
addb
out
mov
jnp
dec
add
repnz
in
pusha
xlat
orl
sbb
rcll
les
les
in
mov
lret
jl
xor
pop
xchg
sub
dec
aas
scas
gs
sti
inc
fmul
fstps
sbbb
shll
fildl
arpl
hlt
mov
ror
in
sbb
rorb
pop
pop
inc
cmp
adc
push
rclb
jmp
addr16
inc
push
cs
cwtl
dec
pushl
jle
jge
test
jnp
loope
push
bound
or
jp
pop
or
sti
fs
push
cli
mov
mov
xchg
aad
or
fadds
loop
dec
lahf
movsb
scas
mov
fwait
and
xchg
divb
in
ret
dec
pop
gs
pop
xchg
repnz
cli
stos
mov
int
xor
add
jl
mov
mov
das
mul
adc
cmp
mov
stos
adc
popa
inc
dec
add
adc
stos
xchg
xchg
outsb
push
pop
sbb
push
iret
lds
hlt
andps
nop
bound
mov
jae
pop
aam
je
rorb
xchg
mov
repz
loop
jbe
pop
je
and
fisubl
or
scas
cmpsb
push
dec
sbb
jo
xchg
push
adc
cmp
xchg
addr16
scas
cmpsb
xchg
add
sub
or
push
adc
out
es
sarb
push
lods
les
hlt
popa
and
sub
push
cs
push
sub
push
subb
adc
or
and
repz
dec
and
adc
pop
cmpl
push
ss
gs
scas
scas
jge
dec
sahf
call
mov
std
push
sbb
push
movsb
push
jne
sbb
dec
incl
imul
mov
xor
arpl
data16
xor
add
xchg
shll
lods
mov
js
xchg
loopne
outsl
xchg
mov
cmpsb
iret
and
or
iret
jae
std
std
int
sub
cmp
xor
add
scas
push
popf
arpl
fstpl
or
pop
push
or
dec
shrl
dec
sbb
imul
ja
mov
mov
adc
lcall
mov
shl
stc
dec
ror
lock
repnz
jecxz
out
or
inc
loope
lcall
out
je
xchg
mov
arpl
test
loop
mov
fistpl
cmp
dec
scas
sub
push
scas
inc
push
or
xor
mov
xchg
ds
or
mov
lcall
jg
ret
clc
xor
sub
es
test
cwtl
iret
push
dec
pand
insb
mulb
mov
pop
jecxz
mov
fisubrs
sbb
clc
ljmp
test
dec
lds
jnp
jno
inc
push
loope
push
das
jns
cmp
mov
ret
inc
sub
mov
xor
das
rcll
mov
jb
sbb
sub
test
sbb
test
pop
out
add
or
xor
fistpll
xor
test
lea
mov
cwtl
and
mov
imul
mov
fistpll
jo
out
lock
je
in
sbbb
sbb
pop
test
jecxz
in
rclb
cld
xor
inc
or
int
int3
push
shl
sbb
bound
dec
adc
loop
test
loope
out
push
and
retw
test
add
push
int
pusha
xchg
shll
xchg
sbb
lock
add
xor
popa
cmp
jp
cmp
mov
arpl
test
jnp
cmpsb
push
sub
sahf
push
mov
xorb
mov
and
sbb
sub
dec
pop
les
add
mov
push
sub
xchg
and
flds
out
cmp
cmpsl
adc
js
outsb
scas
jbe
out
fcomps
fs
pop
and
or
fdivl
mov
mov
rcrl
dec
daa
icebp
dec
mov
add
sbbl
int
inc
fcoml
cmp
fcomps
push
mov
lods
std
test
nop
bound
lahf
add
adc
or
xor
pop
les
sbb
dec
test
rcrl
and
jnp
xor
mov
es
cmpsl
call
fwait
xchg
xchg
lea
or
addb
pusha
inc
outsl
ja
or
dec
ret
sub
mov
jae
fs
fildll
add
jmp
pop
jmp
imul
push
or
mov
sub
popa
xlat
pop
pop
mov
rcll
mov
dec
xchg
jo
jnp
push
loop
int3
cs
sbb
cmpl
adc
daa
aam
mov
inc
dec
mov
sbb
in
negb
fstpl
or
mov
mov
push
loop
movsb
addr16
adc
lods
push
rdseed
cs
push
fwait
stos
xor
jge
or
pop
outsb
movsb
cmp
roll
sbb
mov
jo
xor
ficompl
pop
adc
push
popf
out
add
mov
pop
es
cmp
daa
xchg
mov
cmp
sub
fisttpl
and
adc
inc
in
and
enter
or
push
iret
mov
inc
aas
lret
sar
inc
inc
cwtl
pop
add
inc
rclb
test
mov
pop
pop
jl
or
lds
ss
sbb
adc
fsubs
lock
inc
mov
push
js
lret
das
int
inc
sbb
push
addr16
cmp
xor
sahf
rorb
xchg
dec
push
cmp
movsb
sahf
mov
push
out
push
add
lods
ret
js
gs
and
lock
js
jae
scas
popa
lret
pop
inc
xchg
cld
sbb
std
xor
mov
data16
daa
lock
enter
add
add
loope
add
lret
mov
push
mov
out
repz
notl
stos
inc
ret
mov
jle
mov
leave
inc
add
xor
lods
push
inc
jl
movsl
cmp
in
cmpl
sbb
xor
fisubs
je
pop
aad
pop
pop
inc
jmp
ja
mov
test
mov
test
and
in
aas
mov
ss
push
es
push
insl
sar
xor
iret
or
mov
mov
daa
xor
sub
xchg
sub
outsb
rcll
mov
fs
popf
and
cwtl
aad
xchg
mov
jp
sbb
ds
jl
test
pusha
ja
adc
movsb
fwait
sahf
sbb
in
hlt
mov
les
stos
pop
dec
notl
fbstp
dec
adc
pop
pop
mov
jl
xchg
inc
xor
jno
bound
pop
mov
imul
mov
jg
xor
push
aas
mov
ret
push
fnstsw
pusha
or
call
sub
fsubl
fadds
test
jno
imul
imul
aaa
inc
lods
xor
cli
insl
lret
js
dec
mov
or
pop
arpl
test
mov
and
outsl
xor
jp
xorl
fs
jmp
xchg
cmp
faddl
out
stc
aaa
or
xchg
jecxz
ret
cld
xchg
dec
std
decl
aas
fidivs
inc
xchg
mov
in
and
sbb
adc
leave
in
lods
in
ja
adc
pushf
arpl
pop
movsl
sub
and
popa
jo
aam
sbb
data16
pop
test
xor
push
test
mov
or
fsub
out
subl
shll
push
push
imul
jne
sub
fmulp
mov
push
jno
js
or
add
test
pop
push
mov
sbb
jmp
xchg
add
ds
jecxz
cmc
subl
xchg
mov
shll
out
call
push
pop
jle
jge
push
push
and
je
test
adc
and
cwtl
mov
into
shll
inc
mov
jae
rorb
mov
xor
jl
sbb
mov
inc
ljmp
mov
es
xchg
pop
dec
mov
add
pop
in
xlat
and
hlt
mov
addr16
sti
cltd
adc
in
scas
jnp
mov
mov
out
addr16
lods
insb
or
into
mov
pop
or
adc
jp
imul
xlat
into
clc
aas
mov
daa
fs
pusha
add
xor
push
imul
std
addr16
pusha
outsl
bound
movb
dec
in
add
adc
mov
inc
push
aad
fwait
push
xchg
movsb
mov
cmp
xchg
je
jge
push
cmp
dec
repnz
stos
in
test
into
dec
test
popf
lods
ss
sti
sub
add
or
out
mov
dec
mov
sahf
in
and
or
xchg
inc
test
jmp
pushf
xchg
or
cmpsb
jl
mov
lea
gs
ja
cwtl
mov
sub
shrb
stos
pop
outsl
out
fistl
ds
ret
xor
scas
sub
clc
pop
push
cwtl
pop
pusha
adc
jns
repnz
pop
mov
push
jecxz
adc
sub
loop,pn
xchg
std
cmp
jl
ljmp
dec
ja
fisubs
mov
test
arpl
test
addr16
icebp
call
cltd
mov
sbb
mov
lds
stos
push
scas
jp
push
outsb
mov
cltd
push
repnz
sub
and
call
neg
push
rcrb
ret
xor
outsb
insb
mov
and
in
cmp
dec
mov
jb
push
pop
cwtl
mov
or
nop
scas
mov
mov
xchg
cli
push
cmp
cli
andl
cmp
stos
bound
push
push
mov
mov
push
ja
shll
imul
mov
es
and
test
add
jmp
aaa
add
mov
cltd
ja
cmpl
test
xor
pop
cmc
scas
inc
enter
add
sbb
xchg
repnz
inc
cld
push
mov
jg
ret
and
jnp
mov
xchg
out
and
lds
cltd
insb
cs
sbb
outsb
mov
das
in
xor
mov
adcl
ja
and
iret
add
jns
adc
push
inc
dec
xchg
jp
jbe
inc
inc
mov
pop
rol
lcallw
xchg
or
lahf
pushf
push
leave
adc
lods
xlat
push
loopne
xlat
adcb
and
and
cmp
or
sahf
cltd
jnp
insb
xchg
popl
gs
and
dec
mov
insb
movsl
dec
mov
mov
or
adc
xorb
mov
in
clc
jnp
adc
and
xchg
cmp
popf
jge
sbb
test
mov
xor
inc
inc
xor
xorb
adc
cld
xor
dec
cwtl
push
mov
or
add
xchg
sbb
push
idivl
ljmp
push
push
sub
into
in
pop
push
mov
in
pop
and
mov
adc
jb
cmp
aam
mov
jle
sbb
stos
int
mov
sbb
rclb
nop
mov
test
lcall
clc
in
xchg
and
les
push
jbe
xchg
sub
lods
sub
mov
or
ss
outsb
lahf
scas
lods
jg
ds
mov
cmpsb
sbb
repnz
and
imul
pop
pop
stc
xchg
sahf
pop
mull
adc
ljmp
cmp
iret
push
mov
loope
shlb
pop
bound
bnd
mov
mov
cmp
daa
add
fcomi
insb
and
repnz
sbb
jnp
mov
lahf
and
sub
jg
test
inc
arpl
adc
xchg
jmp
ret
mov
leave
jae
add
subl
xchg
shrl
mov
loop
xchg
add
sbb
or
jle
ja
or
or
adc
push
mov
test
push
out
std
jb
mov
and
jmp
fs
sarb
shrb
or
subb
lea
mov
jge
fidivs
jecxz
push
je
jnp
jl
loop
jg
cltd
pusha
dec
sub
fsubrs
cmp
and
xchg
jns
xchg
sbb
and
push
push
imul
dec
or
push
data16
bound
fmull
xchg
iret
loop
fiadds
xor
imull
jp
das
out
push
pop
dec
daa
add
idivl
cmp
xlat
fisubs
mov
jp
dec
aas
sub
add
fwait
imul
mov
ret
int
or
cltd
and
and
push
and
out
call
shll
insb
mov
pop
aam
cmp
lds
inc
xchg
push
or
or
testl
sbb
leave
cmp
mov
and
mov
inc
pop
popf
movsl
inc
addb
das
outsb
das
mov
mov
test
pop
cld
dec
cmpsb
push
push
in
mov
inc
pop
movups
pop
add
pop
add
fisubs
fcoml
inc
mul
adc
sahf
out
or
call
lcall
push
sahf
int3
pop
mov
out
or
mov
ss
sub
dec
cltd
repz
pusha
testb
stos
mov
outsl
mov
dec
out
testb
pop
xchg
and
and
mov
add
test
jg
daa
inc
xor
pop
in
dec
sub
cmp
jns
rcr
arpl
fsincos
push
out
jae
dec
in
sbb
call
into
cmpsl
andb
sti
pop
sahf
push
xlat
jmp
xlat
cmp
daa
inc
filds
cld
sub
push
ror
je
pop
sbb
dec
cmp
adc
test
push
inc
inc
cmp
pop
and
cld
xchg
aad
pop
push
sub
sub
imul
in
pusha
add
aas
testb
inc
pop
repnz
push
popa
add
jns
sub
mov
add
jl
clc
leave
lock
inc
mov
xchg
cmp
or
fdivrl
jae
cmpsl
xlat
rcrb
inc
cmp
push
mov
adc
jge
xor
or
outsl
adc
dec
fs
shll
push
jp
hlt
test
mov
mov
dec
int3
mov
sbb
sti
or
lods
pop
sbb
jno
cmp
pop
rcrb
and
inc
mov
mov
loopne
outsb
dec
test
sub
inc
out
push
ljmp
dec
dec
scas
nop
mov
sub
mov
xchg
cmpsl
xchg
mov
out
mov
and
addb
mov
push
mov
sbb
jns
ss
jge
lret
cli
pop
push
sbb
sub
push
lret
adc
or
fcmovb
or
or
lds
inc
pop
ja
fdivrp
sub
lods
mov
cltd
nop
gs
adc
addb
and
fadd
out
imull
js
xchg
and
cwtl
lahf
jo
xchg
incl
add
mov
bound
adc
lahf
mov
shl
cwtl
xchg
mov
cs
insl
push
inc
cltd
dec
jecxz
cli
scas
popa
pop
es
jbe
loop
mov
movlps
imul
aad
dec
sbb
out
mov
inc
popf
fdivl
stc
gs
scas
out
push
div
insb
aam
fcoms
scas
cwtl
mov
xor
jge
adc
add
inc
mov
lret
lea
add
sub
into
fisttps
mov
pop
addr16
orl
pop
dec
cli
xchg
mov
and
inc
int3
jb
ljmp
cmpsb
inc
mov
nop
aaa
adc
pop
cmpsl
adc
sbb
add
add
or
jae
jne
xchg
lods
pop
cmp
ret
repz
fistpll
jmp
cmp
aam
jb
xchg
enter
clc
fnstsw
incb
mov
adc
dec
jg
aas
fisubrl
add
push
lods
les
mov
cwtl
mov
pusha
movups
mov
mov
sub
inc
xchg
sbb
sub
mov
add
in
pop
or
mov
rolb
sub
int3
pop
xorb
lcall
loopne
sub
sub
xchg
scas
lret
outsb
outsb
cmp
dec
ss
inc
into
stos
pusha
mov
dec
popl
mov
cmp
mov
dec
dec
aam
inc
lds
sbb
gs
fisttpll
cmpb
xchg
pop
lret
push
les
outsl
ljmp
pop
xor
jg
and
repnz
pusha
jns
lods
xor
testl
inc
std
hlt
enter
lea
sub
sahf
ret
mov
addr16
aam
adc
mov
mov
add
ds
fstl
inc
xlat
adc
das
sarb
je
or
insl
cmp
jbe
subl
pop
sub
xor
dec
push
push
movsl
fisubl
xchg
push
ss
out
sti
das
jns
pop
scas
orl
sub
sti
lea
imul
inc
aas
aam
pushf
shll
outsl
jb
fdiv
inc
xchg
lret
sub
ds
mov
ds
lcall
mov
repz
xchg
add
pop
push
lods
daa
cli
sbb
xchg
out
jae
movsl
cltd
mov
push
inc
clc
mov
fists
rcl
sbb
xchg
add
hlt
inc
pop
pop
cs
out
cmp
rclb
rol
test
and
pusha
test
call
push
cmp
mov
mov
xchg
cmp
push
adc
shl
cwtl
push
push
push
pop
pop
sub
fldenv
fiaddl
xlat
mov
dec
scas
sahf
insl
lods
adc
sub
cmpsl
insl
or
lds
inc
inc
or
aad
pop
mov
mov
int
and
addr16
push
gs
sub
dec
dec
jl
hlt
stos
aas
int3
dec
iret
imul
sbb
mov
mov
jl
mov
mov
rcr
cmp
push
out
sbb
xchg
pop
test
cld
inc
mov
mov
repz
pop
inc
ljmp
ja
shrb
xchg
mov
pop
push
sbb
stos
xor
ljmp
outsb
leave
xchg
inc
push
les
test
dec
sbb
and
mov
aaa
pop
ss
call
mov
adc
lds
pushf
sbb
xchg
ret
gs
push
push
xchg
rcl
roll
sbb
jge
dec
jl
stos
subb
stos
mov
pop
xchg
mov
or
in
adc
push
mov
xchg
xchg
movsl
xchg
push
cmp
mov
pop
test
insl
sub
aaa
or
or
jp
adc
insb
imul
mov
sub
mov
out
add
lock
mov
add
popf
movsb
push
cmp
scas
jne
mov
std
in
mov
andl
jne
movsb
rcrl
inc
testb
adc
mov
movsl
lods
jl
push
sub
mov
fdivl
sub
ja
rcll
pop
mov
cmp
lahf
shl
dec
and
mov
cmp
rcrb
ja
or
jmp
jne
jp
jmp
sub
sub
es
pop
test
cmp
sbb
push
sbb
jbe
sub
pop
adc
mov
jne
dec
out
insb
push
mov
dec
insb
mov
cwtl
ret
ss
cwtl
lock
xchg
mov
js
mov
testl
sub
add
xlat
rcr
out
mov
loopne
shrb
push
sbb
into
fsubl
mov
cmp
std
xchg
dec
push
inc
movsb
lods
add
mov
lock
stc
stos
pop
and
sti
xor
test
push
adcl
or
dec
or
arpl
xchg
repnz
jmp
stc
imul
jle
shll
sbb
push
movsb
notl
test
sbb
mov
hlt
lods
xlat
aad
inc
popa
lds
cmp
push
and
ljmp
bnd
xchg
sub
inc
pop
sbb
mov
jnp
stos
mov
pop
jmp
xor
jno
xchg
adc
orl
fcoms
pop
enter
xchg
nop
mov
mov
in
rcll
jmp
call
jb
ds
or
sbb
mov
mov
data16
push
scas
mov
fnsave
decb
loopne
sbb
adcl
mov
clc
out
fidivs
pop
in
sub
lret
movl
test
pop
xchg
or
outsl
adc
add
les
xor
mov
mov
ja
add
fldenv
jge
repnz
out
xchg
xchg
mov
mov
jbe
sub
loopne
hlt
loop
out
cmp
fistps
jo
lods
mov
out
jmp
cwtl
outsl
popf
xor
inc
sarb
in
sub
and
and
ljmp
inc
cmc
gs
and
and
jp
inc
insl
cmp
aaa
stc
and
inc
inc
int3
in
xchg
fstl
subl
rorb
adc
add
ljmp
adcb
or
xchg
stc
dec
cmp
pop
and
xor
jmp
fucomi
add
rcrl
xlat
cmp
jle
flds
cmp
arpl
lret
icebp
inc
aam
pusha
lods
stos
pop
xor
xchg
outsl
mov
cmp
mov
cmp
loop
jl
movsb
roll
out
pusha
pushf
arpl
lods
pop
xchg
loop
stc
cld
or
push
cltd
ficoml
repnz
aaa
sbb
cwtl
sbb
fidivl
adc
shrl
out
out
mov
xor
xchg
leave
sarl
jno
pop
xor
add
xchg
test
fs
dec
sub
loope
nop
je
mov
add
out
add
adc
nop
jecxz
shrb
dec
inc
xchg
jae
cmp
pop
sti
icebp
push
lahf
andb
jae
pop
mov
mov
pusha
pop
mov
push
jo
in
and
mov
iret
jle
repnz
adc
push
jg
sub
scas
out
jg
inc
in
mov
cs
roll
pop
cmp
inc
aas
popf
cmp
mov
mov
fstpt
jl
cmpsl
stos
sub
dec
ficomps
jmp
xor
fcomps
and
aas
mov
insb
push
pop
lahf
cmp
jmp
cwtl
out
int3
or
lea
imul
mov
jns
les
fwait
jns
mov
out
out
in
and
pop
and
sub
xor
nop
cmc
movsb
mov
into
push
xchg
sub
cmp
fldln2
jmp
into
imul
adc
repz
dec
pop
das
notb
sub
xchg
xor
cltd
cmc
movsb
lret
push
mov
les
ja
mov
std
mov
movsl
es
scas
pop
add
cmp
push
outsl
sbb
cmpsl
push
pop
enter
jne
pop
sub
mov
ss
push
loope
adc
addr16
xchg
jp
push
fmuls
lea
dec
fsub
mov
inc
or
repz
ret
adcl
aad
orl
inc
inc
fnstenv
repz
jge
sub
stos
mov
gs
mov
test
add
jg
ljmp
ret
pop
imul
cmpsl
mov
mov
push
test
lods
lods
out
cli
scas
sbb
jns
jae
or
or
rcrl
fisttps
xor
pop
je
inc
loope
inc
insl
jbe
push
hlt
xchg
mov
mov
ffree
push
or
pop
jnp
mov
xchg
and
mov
imul
out
fdivrl
aad
lods
adc
xor
mov
push
adc
xchg
xor
sti
aad
sub
lret
addr16
jne
xchg
sarb
in
adc
imul
add
xor
repz
sub
imul
ficomps
and
adc
mov
out
add
inc
imul
mov
scas
mov
psubw
pop
cmp
jge
sub
inc
or
daa
pop
pop
mov
or
flds
rorb
imul
lds
aad
inc
push
mov
sub
xchg
xchg
loop
cmp
rcl
jbe
jge
cs
stos
sar
js
sub
arpl
fs
xchg
and
push
jmp
xchg
adc
pop
sub
in
mov
add
lods
testl
sub
push
inc
fbld
rcr
push
xchg
mov
dec
mov
or
sarb
scas
int
mov
adc
ljmp
gs
es
int3
fcoml
outsb
xchg
pushl
sub
xchg
int
and
call
mov
aam
jnp
xchg
pushf
adc
mov
mov
nopl
test
lret
xor
push
jnp
andl
inc
sbb
xchg
int3
popa
test
cwtl
maxps
jecxz
xor
push
push
in
pushf
add
pop
jg
adc
decl
jae
arpl
scas
out
in
jb
loopne
mov
stos
mov
ss
push
jae
jge
mov
sarl
scas
cmc
mov
or
or
mov
mov
sbb
movsl
mov
test
enter
test
adc
jge
mov
lock
js
sbb
push
out
je
and
adc
loopne
inc
int3
xchg
mov
call
dec
in
jp
sar
fs
mov
imul
call
pop
out
inc
in
mov
jg
push
sbbb
lods
fidivs
outsb
sar
aaa
movsl
xorl
inc
sbb
daa
mov
daa
xor
repnz
inc
pop
sti
adc
scas
and
mov
sub
insl
fnstcw
add
mov
and
and
mov
fisubrs
mov
mov
outsl
jae
icebp
aad
insb
mov
jne
and
mov
xor
pop
adc
add
cltd
pop
jbe
test
sarl
lret
mov
lea
popf
or
sbbb
push
push
jmp
arpl
in
xchg
ret
mov
mov
mov
or
adc
lret
sbb
cmpsl
out
pop
push
mov
rcrl
inc
xchg
push
xchg
mov
mov
insl
and
sub
pop
mov
sarb
xor
xor
jne
fisubrl
rclb
into
or
push
rcll
out
mov
test
push
or
prefetcht2
sub
pop
add
add
aam
mov
dec
jbe
popf
std
enter
pusha
xor
adc
and
lock
push
sub
iret
mov
sbb
sbbl
fstps
add
test
and
insb
mov
es
aas
inc
addr16
aam
push
sbb
dec
cs
movsl
sub
je
mov
xor
sub
sub
adc
xorl
lret
shl
xchg
jae
fistpl
out
inc
add
mov
and
loop
outsb
daa
pusha
pop
bound
mov
xor
xchg
flds
pop
jne
mov
fisttps
jp
mov
lock
jl
xor
js
shlb
xlat
ss
or
adc
or
cmc
and
outsl
and
test
orl
jb
stc
shl
mov
pop
pop
push
fstps
push
cmpsb
les
push
cltd
sbb
pop
add
lret
int3
fdiv
add
out
xchg
adc
movsb
lret
mov
aam
pop
fstpl
cmc
out
ja
leave
je
je
jnp
inc
in
insl
pop
inc
xor
mov
push
mov
and
roll
push
jo
push
push
sub
adc
js
xchg
std
imul
test
bt
sub
cltd
mov
call
std
jl
sahf
sbb
cltd
jo
aad
mov
mov
shrb
adcl
cmp
inc
out
nop
mov
push
add
push
cmp
mov
add
jecxz
inc
imul
sbb
outsl
sbb
fidivrs
lds
jmp
mov
in
fldenv
mov
mov
push
pop
arpl
sbb
add
xchg
std
clc
call
jp
clc
daa
sub
add
jg
dec
sahf
adc
shl
mov
fwait
pop
mov
inc
xorl
jl
lock
lock
out
pusha
pop
mov
cmpsl
pop
mov
and
rol
sub
out
cmpsb
lds
xor
or
insb
pusha
xchg
mov
xor
lahf
ret
mov
jp
andl
shll
pop
test
loop
enter
cld
scas
aad
cmp
popa
iret
mov
and
fstl
enter
dec
inc
fisubrl
push
mov
repz
mov
inc
mov
jae
lods
mov
stos
leave
inc
fwait
loope
or
push
je
call
es
inc
stc
add
jmp
fs
inc
xor
fisttpl
pusha
inc
iret
lds
int3
mov
or
inc
push
inc
xchg
dec
arpl
xchg
pushf
out
xchg
pop
jae
mov
push
push
aaa
icebp
sarb
fnstcw
xor
lahf
xchg
fwait
loope
leave
dec
mov
mov
push
jne
hlt
inc
jb
pop
jne
mov
or
clc
jecxz
jp
xor
nop
or
dec
adc
sub
call
cmp
xchg
fucomi
out
mov
test
adc
push
movsl
pop
out
enter
xor
lds
mov
das
mov
jbe
and
mov
dec
cmp
dec
xor
ja
or
sub
jno
roll
psrld
mov
mov
loope
fs
fcoml
pop
outsl
iret
pop
sahf
push
sbb
mov
inc
sbb
xorb
out
pop
call
push
adc
inc
subb
sbb
repnz
popf
cmp
dec
inc
repz
or
cltd
adc
aam
push
fidivs
lds
push
les
ss
movsb
sbb
mov
jb
jno
jb
adc
adc
mov
xchg
sti
pop
add
adc
and
inc
sbb
mov
test
fstl
lds
pushl
sub
inc
lock
sbb
cmpsb
test
push
xor
jo
in
cmp
or
xor
icebp
ds
out
push
icebp
mov
into
mov
pop
fnstenv
aad
outsl
fmul
dec
ljmp
push
lods
or
int
rorb
bound
aaa
fldl
lods
mov
ja
rcl
adcb
in
iret
mov
subl
xchg
test
xsha256
cmpsb
xchg
in
xorb
in
push
stc
sub
jge
sub
jns
xchg
aad
pop
dec
xchg
or
sti
fisttps
jbe
add
inc
and
xchg
dec
cli
fwait
push
xchg
mov
in
cmp
sbb
dec
je
mov
pop
mov
cmpsb
add
movsb
ja
xor
imul
jns
push
imul
fsubl
rorl
pop
fadd
cmpsl
cmp
adc
mov
jnp
adc
add
mov
addr16
add
mov
outsb
inc
xor
lret
sub
stc
mov
adc
ficompl
aam
je
adc
das
shlb
aaa
pop
es
inc
jne
enter
int
push
mov
mov
xchg
jg
fs
adc
dec
pop
into
cmp
xor
and
aas
sub
test
clc
dec
lea
rcll
and
inc
in
add
inc
mov
into
adc
pop
or
xchg
iret
sbbl
test
das
nop
inc
xor
nop
cmpsb
mov
jecxz
shll
cmp
sbb
mov
push
iret
bound
inc
mov
lods
aam
and
mov
mov
fistpl
cltd
aam
or
add
lds
daa
int
loope
push
je
ret
aas
sub
movsl
add
ret
sti
test
push
inc
push
xorps
imul
mov
flds
movsl
loope
jl
adc
xchg
fidivs
ja
js
inc
xchg
sub
scas
scas
enter
dec
xor
pusha
mov
cmp
xchg
scas
inc
push
lea
push
xchg
shll
sbb
lods
cmpsb
sub
je
dec
add
xor
es
mov
ret
stc
lret
test
mov
xchg
inc
inc
pop
or
in
sub
jle
divb
ret
ret
loope
jecxz
mov
push
push
push
rorl
addps
push
jge
add
mov
mov
outsl
subb
and
xchg
jns
sbbb
xor
sbb
push
xchg
and
push
xorb
fimull
mov
icebp
ret
jae
sbb
jmp
insl
icebp
mov
out
fsubrl
push
cmp
cmpsl
cmp
scas
push
or
inc
and
cli
sub
push
pop
adc
outsl
outsl
loopne
mov
inc
fidivs
ljmp
xchg
add
testb
addr16
mov
add
cli
sub
fidivs
lcall
xchg
jge
test
mov
xor
fisubrl
into
or
jb
nop
dec
sbbb
jge
popf
outsb
js
fstpt
push
xor
xor
pop
or
test
dec
in
lcall
imul
pop
cmc
or
push
dec
ds
xchg
inc
out
add
cmpsl
loopne
jg
inc
out
xor
shlb
orl
mov
cld
push
cltd
xor
scas
aaa
or
add
mov
dec
dec
cmp
inc
out
hlt
dec
mov
data16
mov
add
inc
or
jmp
lods
jbe
dec
mov
push
aad
popa
dec
mov
push
xchg
dec
ficoml
fwait
mov
jge
arpl
sbb
mov
jbe
call
cmpl
pusha
pop
aad
sub
cld
nop
dec
jo
dec
repnz
xor
pop
dec
out
cmp
adc
lods
sub
mov
cmpsl
mov
jns
in
inc
lahf
cmp
fiadds
repz
add
xor
mov
loop
jmp
test
push
incl
jmp
ficomps
sti
repnz
in
es
jg
inc
enter
fildl
xchg
add
sbb
pop
sahf
ds
std
add
xchg
rorl
lds
aas
dec
das
adc
jmp
pop
out
sub
insb
rorl
stc
out
loope
push
mov
jae
lds
inc
cld
lock
sub
loop
lret
testl
and
aad
mov
pop
cmp
jmp
cwtl
pop
push
adc
cmpsb
cltd
rdpmc
icebp
push
clc
mov
in
in
packssdw
cmp
add
ret
cwtl
cmp
mov
inc
test
stc
in
sbb
mov
cmpl
lret
sub
clc
fidivrl
popf
xchg
sub
push
jp
mov
mov
popa
mov
cltd
outsl
ret
or
adc
daa
push
dec
out
add
movsl
push
or
push
mov
lcall
je
adc
xor
mov
flds
leave
fldenv
lahf
lea
lods
jo
mov
jecxz
sbb
dec
sub
aam
outsb
push
stos
sbb
or
xor
xchg
out
or
mov
pop
test
fidivl
push
mov
mov
or
jge
cmp
sbbl
aas
sub
in
nop
and
js
cs
incl
iret
jno
push
loope
jae
call
xor
sub
push
dec
test
call
cmc
push
fucomi
mov
pop
adc
push
or
add
dec
lret
mov
scas
push
repz
adc
and
sub
fwait
pop
sbb
jmp
push
xchg
shlb
loope
mov
stc
and
dec
repnz
out
fstpl
and
roll
or
dec
out
xor
push
lea
mov
or
fnstsw
add
stos
iret
pop
pop
dec
mov
clc
imul
loop
xor
lret
sub
fwait
leave
inc
fmulp
ss
int3
and
pop
push
mov
xchg
out
or
mov
movsl
movsb
enter
inc
popf
dec
das
mov
xchg
ret
dec
lods
mov
pop
loop
mov
mov
ss
dec
cmp
sbb
sahf
aas
imulb
mov
shr
xchg
stos
rorb
mov
inc
sub
sub
or
ret
ds
out
inc
cld
ret
sbb
jnp
loopne
xchg
mov
nop
mov
subb
pop
xchg
jmp
cltd
aas
popa
lahf
jno
or
xlat
xchg
add
xchg
cmp
adc
popf
jbe
mov
pop
pop
scas
mov
stc
push
push
scas
ret
push
in
loopne
push
repz
jb
mov
push
push
cmpb
aad
shlb
cmp
sbb
outsl
movd
test
push
inc
jl
sbb
jo,pt
xchg
cld
lcall
popf
xchg
lds
cwtl
and
adcl
mov
cmpsl
and
sub
repnz
add
int3
sbb
jns
or
mov
stos
adc
cltd
sti
adc
xchg
and
xor
fstpl
pop
mov
cs
dec
jle
fimull
addr16
xor
ljmp
push
cmp
jbe
int
sub
in
mov
in
cmc
push
mov
push
cmp
or
and
pop
push
sahf
test
dec
xchg
pusha
jmp
push
jnp
xlat
aaa
outsb
xlat
add
movsb
pop
and
mov
mov
test
and
lcall
jge
fdiv
je
filds
popf
sti
sub
pop
push
pop
mov
pop
xor
push
dec
sbb
in
inc
in
cmpsl
pop
pushl
sbb
and
ret
add
xchg
dec
in
mov
and
rcll
mov
xchg
xchg
mov
aad
ror
std
dec
ljmp
xchg
pop
adc
fistl
pop
adc
popa
xchg
stc
pop
test
in
mov
ret
std
fldl
and
adc
push
adc
pop
xor
push
push
popa
mov
int3
pop
shrb
aas
jmp
sbb
rcrl
push
mov
sbb
sbb
pop
inc
push
lods
jo
mov
lds
jnp
push
jns
mov
push
sbb
adc
data16
sub
addr16
sub
cwtl
jp
mov
jns
sub
push
out
mov
movsb
stos
sub
pop
dec
sub
aaa
pushf
lcall
addr16
and
mov
movsl
sti
fsub
mov
andb
pusha
mov
inc
lods
rcrb
mov
subb
sub
jp
popf
dec
hlt
test
pop
cmpsb
or
lds
add
out
mov
push
xchg
sub
xor
out
into
sub
xchg
jbe
imul
push
push
mov
mov
push
rcll
inc
add
ret
lods
inc
out
cmp
inc
stos
push
dec
and
add
in
jbe
pushf
cmp
adc
iret
mov
popa
mov
jmp
push
ja
and
jp
dec
adc
fdivrl
orb
daa
xor
das
pop
int3
push
dec
icebp
mov
jb
inc
jge
sub
xchg
lods
pop
mov
fwait
mov
dec
nop
adc
mov
xor
aaa
rorb
outsl
aam
cmpsb
dec
js
or
in
sbbb
lock
jp
fwait
icebp
adc
cmpsb
push
lock
mov
xchg
push
bound
nop
mov
push
or
cmp
add
hlt
fs
dec
ds
gs
mov
jl
cmp
ficomps
jnp
jle
xchg
push
stos
lods
pop
and
test
lods
pop
add
in
mov
cmp
sbb
popa
adc
pop
jmp
and
push
jmp
out
je
out
or
push
add
jg
into
subl
push
pop
loopne
and
addl
push
imul
cmp
pop
std
cli
xor
sub
aaa
add
jae
mov
subl
outsl
in
mov
repnz
push
mov
idivb
xlat
aad
idivb
dec
in
inc
jb
mulb
cld
in
or
cmpsb
int
xor
pop
and
jle
sbb
adc
xor
mulb
cmpsl
lcall
add
sbb
sub
or
cwtl
dec
test
mov
daa
loopne
in
nop
adc
sbb
mov
movsb
xlat
cmp
movsb
gs
cwtl
std
sub
nop
std
add
push
rorb
testb
pop
inc
or
push
into
fstps
cli
repz
cmc
inc
js
xor
jns
test
jle
mov
rorl
out
popa
mov
push
loop
mov
in
and
jmp
xchg
ret
cmpsl
mov
lods
test
dec
pop
andb
movsl
push
dec
dec
fdivl
sbb
in
xchg
in
mov
nop
xor
jge
and
jo
ret
sbb
jl
scas
loop
push
inc
fsubrs
in
xchg
lods
adc
mov
add
inc
lds
add
sub
add
jecxz
push
adc
sti
rorl
or
imull
pop
lret
cmp
mov
jmp
inc
mov
hlt
adc
dec
stos
and
xorl
xor
xchg
lods
bound
and
jnp
mov
inc
mov
xor
or
ror
fstpt
or
mov
bound
flds
adc
cwtl
lods
xchg
sbb
cmc
mov
out
mov
fldenv
adc
ja
add
icebp
cmp
inc
and
stc
in
iret
jecxz
mov
movsb
dec
mov
cli
es
idiv
insl
scas
outsb
iret
jns
iret
or
xlat
adc
pop
push
cs
sub
add
test
out
add
int3
dec
das
cmp
std
ljmp
js
mov
mov
lret
test
pop
shl
jp
xchg
es
xchg
xchg
sahf
sub
mov
insb
mov
jmp
icebp
js
xchg
pop
jnp
or
sub
repnz
stos
mov
in
les
xchg
dec
jmp
stos
pop
cmp
xor
lea
stc
push
and
adc
adc
dec
jae
cwtl
shlb
enter
leave
or
add
mov
das
stos
push
sti
imul
push
shlb
mov
add
mov
cmpsb
mov
xor
cmc
lcall
lock
cli
aam
push
adc
sbbb
pop
cmp
pop
fucomp
popl
das
xchg
mov
pop
lahf
addr16
adc
scas
in
in
push
shrb
dec
fsubrp
adc
push
adc
pusha
cwtl
popa
mov
out
and
mov
in
cli
stos
movsl
pop
sub
mov
adc
add
xor
adc
add
mov
mov
imul
movsb
fcompp
cmp
js
iret
loope
pusha
cld
push
movsl
loope
jae
arpl
cmp
push
movsb
inc
rcrb
enter
cltd
mov
xor
repnz
pushf
pop
add
add
add
dec
mov
sarb
and
dec
hlt
fldl
cmc
push
rolb
cmp
jb
test
and
insb
invd
jl
out
test
cld
add
dec
stc
add
es
xchg
jmp
push
add
addr16
cwtl
push
pop
sub
punpckldq
mov
out
popa
adc
int3
adc
out
jp
or
stos
mov
mov
int
int
mov
or
ljmp
mov
mov
andb
repnz
sub
xchg
jb
enter
fcoml
lret
fucomip
sub
pushf
dec
pushf
insl
inc
pop
sti
push
ffree
mov
sub
mov
adc
arpl
gs
push
xchg
frstor
fdivrp
out
jne
incb
insb
push
and
scas
in
mov
or
adc
scas
cmpsb
inc
shl
fidivrl
pop
add
sub
push
lea
fs
sub
cmp
enter
pop
test
lret
dec
daa
ds
idivb
insb
mov
or
ret
mov
sti
loopne
stos
mov
inc
jo
fs
rorl
pop
inc
xor
cmp
xchg
or
add
addl
and
sbb
xchg
adc
push
lock
cltd
cmpsb
lret
sbb
xchg
shrb
stc
das
mov
loop
cmpsb
mov
jp
into
dec
fnstenv
repnz
rorb
jns
mov
mov
or
test
cli
mov
out
and
dec
sub
push
pop
cmp
mov
jae
dec
add
jo
mov
inc
subb
sub
ds
push
mov
inc
mov
int3
xor
pop
or
test
sbb
jecxz
jmp
scas
mov
mov
sub
xor
xchg
jno
jl
and
mov
adc
pushf
or
jmp
sbb
lods
xchg
or
insb
xchg
add
shrb
leave
out
jg
test
andb
subl
jns
jp
cmpsl
adc
in
lcall
xchg
in
xchg
aaa
jb
pop
sbb
push
adc
xor
iret
je
in
inc
jle
loopne
jae
mov
inc
dec
push
jecxz
mov
je
xor
cmp
push
int3
jbe
js
lods
divb
daa
cmp
and
pop
cmp
push
or
shrb
orb
dec
mov
in
cmc
and
push
cmc
jae
push
leave
dec
xor
jne
dec
pop
mov
lods
sti
das
insl
mov
and
pop
hlt
aaa
sub
sarb
add
push
mov
ds
cs
addr16
jbe
sub
cld
repz
mov
push
into
insl
mov
jnp
add
jns
push
mov
cmpl
mov
push
hlt
dec
sti
aaa
xorl
das
push
divl
out
lods
mov
out
and
mov
daa
test
inc
sub
sbb
mov
pop
lds
and
mov
lcall
arpl
sub
jns
leave
setp
inc
dec
xchg
stc
dec
dec
or
neg
sub
out
dec
sahf
inc
adc
inc
lock
insl
movsb
shrl
enter
out
mov
adc
dec
dec
cmp
xor
mov
movsb
es
sub
test
jge
movsl
arpl
dec
add
sbb
in
shll
jmp
push
xor
push
scas
sbb
adc
sbb
cmpsb
mov
and
mov
clc
pusha
inc
mov
mov
sti
push
sbb
test
hlt
add
xor
fisttpll
orl
mov
dec
mov
sub
dec
stos
sub
jecxz
ds
outsl
adc
sbb
mov
cltd
pop
sub
cmp
int3
dec
daa
imul
add
jae
dec
stos
and
mov
sti
jae
jge
enter
stos
cmp
pop
xor
gs
push
pop
inc
test
xchg
cmpsb
push
pushf
sbb
arpl
xchg
mov
shr
jl
movsl
out
cmpsl
pop
pop
jno
mov
test
out
mov
stos
gs
ss
mov
aad
les
xlat
cmpsb
out
inc
enter
mov
push
lcall
rorb
sahf
xor
xor
imul
test
jle
sub
jns
test
and
xchg
fdivrl
push
mov
push
or
sub
neg
scas
leave
outsl
xchg
leave
fcmovu
pop
ljmp
sub
mov
mov
sti
add
push
push
mov
test
jnp
addr16
xchg
pop
xchg
ss
adc
call
pop
sub
add
mov
jp
pop
enter
cltd
popf
lods
cmpsb
clc
loope
fwait
pop
test
add
aad
and
loop
sarb
push
mov
dec
test
pop
aam
sbbb
pop
push
shll
xchg
lods
dec
xchg
and
pushf
pop
ret
cmc
repz
aas
fdivrl
nop
xchg
out
aam
mov
out
imulb
and
xchg
popa
cmpb
out
and
xor
sub
in
arpl
nop
add
inc
stc
arpl
mov
fistpl
push
adc
cmp
and
cmp
insb
shrb
ss
dec
pop
push
adc
into
inc
add
jle,pn
out
push
rcll
in
cs
fldenv
dec
sbbb
popl
cmpsb
add
das
int3
xchg
ret
and
xchg
pop
xor
clc
jle
jle
jmp
lods
scas
mov
decl
jecxz
repz
adcl
xlat
popf
out
adc
xchg
movsl
inc
jg
repnz
mov
lea
sub
sbb
ds
imul
jbe
negl
testl
mov
lret
ss
scas
pop
add
aaa
mov
inc
push
mov
inc
repnz
jbe
mov
add
fbld
idivl
jl
mov
cmp
inc
push
enter
ret
sub
adc
dec
and
inc
pop
out
push
mov
divb
iret
mov
cwtl
cmp
ljmp
adc
in
pop
dec
pusha
cmp
fwait
push
jb
mov
das
xchg
out
jge
push
mov
in
add
repz
sbb
daa
in
and
push
lods
ret
inc
mov
pop
xor
sbb
fiadds
jecxz
vmovapd
and
hlt
in
out
cmpsb
daa
xchg
dec
mov
or
lods
and
lret
mov
cmp
xor
jl
shlb
lcall
cmpl
aad
jmp
dec
xlat
popf
sahf
mov
dec
aam
fistl
push
daa
inc
mov
call
in
dec
gs
cmp
inc
adc
jb
mov
cld
repz
jbe
pop
test
dec
pop
test
stc
cmc
inc
jbe
sti
mov
pop
jle
loop
lods
and
jp
test
jne
out
pop
cld
mov
and
std
sar
iret
lcall
sahf
pop
stos
and
hlt
mov
mov
inc
mov
int
icebp
mov
cmp
dec
push
mov
popf
dec
mov
rclb
mov
add
xchg
fisubrl
ds
daa
add
test
filds
xchg
das
sub
add
movsl
push
or
push
ficomps
fldt
add
add
lds
jle
mov
loopne
xor
shr
filds
pop
xchg
arpl
lods
and
sbb
pop
xchg
cmp
adc
leave
sbb
sub
in
ljmp
sti
dec
cmp
pop
int3
dec
jl
inc
mov
std
inc
mov
adc
cmp
jecxz
add
stc
into
clc
sub
jae
xchg
aad
push
push
test
fisubl
or
test
jae
mov
mov
xor
inc
int
aas
stos
insb
pop
fnstsw
pop
repnz
fdivrs
stos
jecxz
imul
cmc
sbb
test
sbb
sahf
cwtl
in
lahf
call
jecxz
xchg
ja
mov
adc
push
repz
insl
sub
and
mov
stos
cwtl
out
pop
push
jbe
jmp
sub
ss
xor
inc
adc
push
xor
nop
pop
test
jecxz
push
sub
out
pusha
out
jp
dec
inc
push
cmpsl
pop
cmpsl
lods
or
xchg
repz
jne
inc
adc
pushf
icebp
inc
mov
ds
cld
nop
push
xor
mov
inc
push
pop
fcomps
mov
loopne
je
in
sub
push
and
imul
in
xchg
call
add
sub
hlt
add
into
jge
jnp
call
gs
daa
and
in
add
out
out
mov
je
mov
mov
or
pop
xchg
addr16
stos
mov
out
ret
or
mov
cld
loopne
mov
push
mov
dec
dec
jmp
mov
jne
cld
mov
pop
add
dec
jbe
xchg
not
cs
mov
sub
rclb
jecxz
je
cli
and
xor
push
loope
mov
lea
lock
mulb
dec
js
js
inc
jnp
in
sti
int3
xchg
push
adc
inc
mov
mov
dec
mov
out
mov
fmuls
aaa
add
es
mov
jno
mov
mov
aam
mov
std
sbb
and
pop
jl
mov
in
and
xor
out
ja
pop
cmp
push
cmp
je
pop
pop
jbe
push
mov
popa
add
aas
sub
sbb
and
bnd
mov
shll
cmp
dec
stos
gs
int3
mov
aam
lcall
xchg
xor
and
mov
mov
push
fbstp
pop
jmp
mov
xor
pop
push
sahf
mov
xor
gs
rcrb
xchg
mov
outsb
daa
js
mov
mov
xchg
and
adc
push
test
pop
cwtl
adc
jno
iret
pop
lods
mov
push
mov
dec
imul
sub
aas
out
stc
inc
cmp
aaa
xor
xor
dec
mov
jge
ret
push
aaa
pop
out
in
xlat
imul
xlat
and
mov
icebp
cmp
or
fimuls
jo
aad
sub
mov
shlb
push
call
in
jg
loopne
movb
in
testb
cmpsl
dec
jnp
and
cmpsb
mov
mov
pushf
gs
ds
outsb
adc
faddl
repz
add
cmp
dec
loopne
fistps
add
push
aad
dec
clc
sbb
mov
data16
cmpsl
loopne
mov
rcl
addr16
sarl
test
lods
pusha
xchg
scas
lds
mov
add
scas
mov
cmpsl
pop
lea
fwait
lcall
dec
dec
lds
inc
mov
icebp
pop
push
xchg
inc
imul
leave
sbb
push
les
push
cmpsl
frstpm(287
inc
pop
je
cmp
shrl
push
mov
mov
jle
xchg
shll
jle
inc
inc
loop
xorl
jne
imul
bound
pop
cld
les
into
aaa
jnp
jbe
movb
inc
in
mov
arpl
sbb
wbinvd
pop
es
adc
xchg
mov
icebp
adc
xor
cli
insl
scas
cld
addr16
addb
or
jmp
mov
movsb
and
add
jbe
cli
sbb
mov
pop
ljmp
sbb
clc
cld
sub
jnp
push
cmpsl
les
cmc
daa
sub
fnstsw
sub
adc
ffree
inc
in
jp
and
rolb
ljmp
daa
loop
xor
lret
and
js
xor
mov
jae
jl
or
lods
sub
inc
das
outsl
pop
pop
mov
mov
js
xor
and
mov
ss
lcall
dec
sub
je
push
pop
rolb
fyl2x
adc
cmp
push
sbb
dec
or
int
insl
movb
mov
adc
add
jp
aam
push
and
mov
add
inc
out
mov
sub
mov
pop
cmp
adc
add
das
and
ficomps
bound
sbb
jb
cmp
and
fwait
dec
out
adc
sbb
add
sbb
or
movsb
mov
sbb
push
dec
test
shl
dec
lahf
incb
jl
push
jp
adc
sub
mov
or
cmpsb
loopne
cli
push
cli
mov
xchg
mov
movsb
adc
pop
sbb
push
outsb
lock
insl
sub
sarb
mov
inc
in
sbb
sbb
loop
lret
out
xor
xlat
scas
inc
jle
fwait
pop
nop
ret
in
into
mov
outsb
inc
es
fdivl
mov
xor
cli
mov
filds
movsb
mov
daa
inc
fiadds
push
test
push
shrb
add
movsb
mov
cmp
dec
adc
dec
push
sbb
fs
and
test
decl
rorl
js
inc
daa
inc
inc
xchg
lock
addr16
mov
fisttpll
mov
sarb
lcall
pop
push
loop
test
movsb
enter
jmp
xchg
fsubs
fstl
andps
stos
cmpsl
popa
jbe
andb
pop
pop
iret
adc
dec
mov
jg
adc
pop
loope
icebp
lahf
adc
mov
mov
inc
popa
jae
inc
pop
add
jns
mov
sub
pop
int3
out
sub
lahf
mov
fidivs
cmpsl
mov
mov
jno
bound
mov
xchg
dec
pop
jae
idivl
xchg
dec
movl
daa
pop
adc
data16
lcall
jnp
out
push
jg
sti
or
xchg
xor
cmp
rclb
ret
fsubl
dec
xor
mov
jmp
and
xchg
pop
pop
cwtl
gs
out
sahf
mov
and
xor
fidivrs
testl
jp
ror
adc
xchg
xor
dec
das
add
adc
pop
mov
xchg
push
clc
repnz
xor
jne
jg
xchg
fdivs
jo
daa
movsb
xor
cmc
subl
mov
imul
dec
cmpb
aad
xlat
loop
xchg
bound
gs
loopne
aas
mov
jecxz
mov
int3
popf
mov
mov
add
inc
loope
fistpll
push
inc
je
mov
lret
lret
cmpsl
mov
xor
xor
sti
lods
pop
cmpsb
adc
mov
dec
mov
mov
arpl
cmp
mov
lahf
into
out
fiadds
mov
lahf
aam
push
or
mov
cwtl
inc
cmpb
mov
aas
sub
outsl
pop
dec
cmpsb
mov
dec
loop
cmp
fcomp
hlt
pop
push
sbb
movsb
mov
in
mov
mov
rclb
adc
dec
shrb
test
scas
cmp
pop
lods
xor
imul
mov
mov
jb
and
addb
sub
cli
adc
pop
mov
pushf
pop
jnp
push
imul
loope
push
jbe
pop
mov
dec
aaa
in
jg
popf
add
out
push
fcmovnb
stc
jg
lahf
iret
jmp
leave
push
scas
xchg
dec
add
xor
adc
fistpll
add
and
in
lods
push
jb
out
dec
jno
lcall
incl
mov
adc
add
shl
inc
shrb
or
inc
pop
subb
mov
in
xlat
pop
mov
cltd
lods
fcompl
dec
out
sub
cs
imul
inc
out
pop
or
pushl
popa
les
pop
mov
and
in
mov
iret
or
ljmp
cmp
lahf
mov
mov
xor
fldl
iret
shl
call
flds
inc
gs
sbb
subl
xor
in
sub
sbb
loopne
ficomps
jns
add
cmpsl
jo
shl
jmp
popa
and
mov
out
pop
out
pop
outsl
nop
mov
scas
mov
inc
or
imul
test
push
call
inc
mov
cwtl
inc
dec
adc
lret
sti
in
pusha
sub
mov
adc
inc
mov
inc
repnz
add
pop
imull
jbe
cmpsb
repz
aaa
sbb
cmp
inc
shrb
push
iret
adc
cmp
pop
xlat
loope
test
movsl
mov
clc
add
lock
out
lods
inc
shlb
push
stos
mov
in
clc
lret
xor
sbb
sbb
sub
aaa
lods
scas
xchg
pop
cmpsb
jg
loope
adc
fnstsw
rorl
cmpsb
movsl
clc
ss
mov
adc
sti
sbb
pop
outsb
faddl
cmp
aad
and
sbb
sbb
push
jb
push
mov
enterw
clc
je
sub
pop
cmp
data16
outsl
cmc
ja
aad
roll
dec
mov
fwait
and
icebp
push
or
loopne
inc
inc
or
in
add
jnp
cli
sarb
pop
add
pop
iret
inc
enter
clc
aad
mov
scas
mov
fists
dec
cmpsl
rolb
lret
pop
push
shl
lea
outsl
add
push
mov
pushf
mov
pop
sahf
jmp
add
fdivs
ficoml
xchg
sbb
sbb
idivb
inc
scas
add
in
inc
test
jp
xchg
mov
fxch
cmp
adc
inc
out
cmp
sbb
mov
push
jle
pop
out
je
adc
xor
or
mul
fsts
cmpl
lret
add
xchg
outsb
jle
sbb
xchg
outsl
and
loop
ljmp
mov
mov
test
lcall
mulps
aaa
fiadds
xchg
sbb
or
cltd
dec
rorb
push
add
insb
lcall
cmp
adc
hlt
subl
arpl
jnp
inc
fwait
mov
mov
dec
data16
std
fxch
cmpsl
cmp
imul
cmp
or
stc
add
addr16
push
mov
scas
loope
mov
sbb
jg
jns
idiv
popa
lock
sub
shrl
or
mov
repnz
mov
inc
jmp
ljmp
enter
sbb
xor
inc
add
std
sbb
bound
xchg
adc
mov
push
sbb
nop
lock
pop
ror
cmp
xor
movsl
dec
push
sub
jle
dec
mov
stc
pushw
mov
push
jne
cs
mov
add
mov
jmp
pop
pop
loop
push
mov
fsubl
cmp
pop
mov
daa
scas
jge
enter
and
test
push
adc
or
push
fldcw
push
outsl
mov
pusha
sbb
xchg
adc
insb
dec
and
aam
pop
push
jmp
dec
or
mov
cs
adc
jb
loopne
lock
icebp
pop
xchg
lcall
sti
repnz
inc
and
cmpsl
sarl
cmp
sbb
mov
ljmp
inc
jnp
sbb
lods
mov
add
push
orl
inc
push
push
fucomi
cmpsb
popf
mov
jp
mov
jns
adcl
inc
add
mov
jbe
and
leave
mov
pop
insl
or
mov
popf
pop
loop
xorb
fldln2
dec
in
lock
leave
jne
jg
lcall
jecxz
xor
enter
lea
scas
pop
xor
adc
js
cld
jmp
cmpsb
loop
lock
inc
div
jp
int
xor
xchg
stos
inc
je
cmovae
xchg
dec
icebp
shl
mov
xor
fsubrp
test
movsl
mov
adc
xor
outsl
in
mov
mov
xorb
mov
sbb
xchg
or
fildll
int3
iret
jns
cmpxchg
and
sbb
leave
mov
iret
les
in
sub
xor
xchg
ljmp
jmp
cmp
cmpsl
cmc
and
ss
push
push
xchg
fs
mov
jmp
enter
mov
and
pushf
mov
lahf
mov
fst
add
xor
sub
divb
clc
pop
xrelease
pop
pop
dec
fldenv
sub
rorb
sub
idivl
xchg
dec
push
mov
add
cltd
jmp
xchg
xchg
gs
movsb
cmp
xor
mov
xor
add
mov
scas
adc
adc
jl
push
mov
mov
sub
pop
lahf
bound
mov
or
push
into
in
psubsb
xlat
les
daa
xlat
push
arpl
sbb
dec
inc
and
stos
or
pusha
add
dec
xchg
clc
hlt
lds
pop
jne
outsl
arpl
daa
mov
jecxz
mov
rcll
cmpb
push
inc
imul
ljmp
xchg
out
adc
xor
xorb
stos
jns
sub
pusha
movb
xor
mov
mov
fstl
cmp
ffree
cmp
mov
xchg
ss
or
pop
jnp
cmp
mov
and
and
orl
loope
and
mov
sbb
mov
ljmp
dec
leave
and
and
negl
push
xchg
push
pop
pop
xchg
push
jo
adc
dec
xchg
movb
cmpsb
mov
xchg
sub
icebp
sbb
push
adc
mov
push
pop
dec
and
rorb
dec
cli
lret
lea
jp
fildl
outsl
xchg
xor
mov
jl
insb
sub
dec
sub
push
ja
movsb
and
in
sahf
enter
in
mov
bound
mov
adc
dec
lds
int3
stos
scas
lret
push
mov
hlt
adc
ljmp
movsl
sbb
lds
push
stos
xchg
inc
rcl
and
add
pushf
sbb
mov
or
pushf
sub
aad
call
mov
xor
rcr
push
repnz
ret
icebp
dec
data16
mov
pusha
mov
je
cld
sbb
xchg
out
ds
add
scas
ljmp
iret
testl
pop
cmpsb
in
cmp
jo
adc
pusha
push
and
ret
or
cmp
sub
cwtl
in
dec
lret
xchg
add
loopne
xchg
rcr
jl
push
fisubrl
loop
repz
hlt
pusha
inc
mov
in
add
addl
adc
insl
mov
sar
fnstcw
pop
mov
adcb
sarl
ja
das
mov
in
mov
adc
rolb
mov
std
inc
in
sahf
sysret
mov
out
in
mov
xor
or
mov
sub
mov
sbb
pushf
out
mov
and
xor
mov
stc
repz
out
jbe
ljmp
mov
movb
cwtl
fidivl
or
mov
pop
insb
cmp
sbb
out
jne
je
leave
dec
aam
fdivr
repnz
sbb
in
or
sbb
pop
cmp
add
or
pusha
and
add
add
icebp
and
jae
aad
sbb
xchg
push
sub
and
aas
dec
stos
rolb
pusha
subb
cmpsl
adc
jns
sub
inc
insb
mov
dec
daa
xchg
mov
jl
push
jne
das
and
lea
xor
xchg
aaa
in
adc
icebp
lock
adc
xor
popa
js
inc
pop
xchg
dec
dec
shll
roll
ror
jecxz
insb
xchg
fs
add
int3
push
andb
ret
jmp
inc
ds
bound
inc
inc
or
pushf
aam
ficoms
pop
jmp
arpl
add
loopne
or
ds
and
mov
push
test
cltd
in
push
rclb
sbb
ret
jl
xor
mov
icebp
mov
or
data16
mov
daa
aad
xorb
sbb
inc
fisubs
lcall
or
adc
mov
mov
clc
jae
loop
dec
mov
dec
notb
std
sti
rcll
mov
jno
pop
mov
out
sbb
pop
mov
adc
int3
mov
popf
xchg
sbb
and
in
xchg
cmc
xchg
repnz
cmp
cltd
push
push
call
adc
xor
movsl
in
cmpsl
and
fdecstp
xor
adc
and
mov
scas
add
sbb
fwait
mov
xchg
adc
in
pop
dec
and
dec
stos
rcrb
mov
fldenv
xor
int
mov
fs
in
aas
mov
adc
lret
xchg
ljmp
add
pusha
int3
adc
sbb
fs
popf
negb
scas
decl
ret
jo
repz
fsubl
mov
shll
mov
sti
imul
cld
pop
sub
and
and
aaa
mov
push
pop
sbbb
in
add
adc
fadd
imul
mov
repz
and
imul
jp
mov
rcr
push
mov
data16
roll
adc
test
mov
mov
into
cmpsl
xor
xor
cli
xor
mov
cmp
into
sbb
mov
cltd
dec
or
popf
push
rorb
fisubl
add
enter
lock
push
decl
jnp
lcall
pop
inc
add
dec
dec
outsl
loop
imul
sub
mov
pop
shl
dec
jecxz
lret
out
pop
mov
es
mov
push
je
pop
popa
lret
push
sub
inc
add
cmp
fistpl
sub
fwait
imul
push
rclb
xor
fyl2x
cmp
frndint
aaa
jp
insl
or
sahf
data16
jp
andl
daa
inc
push
push
fdivrp
sub
push
aad
mov
xchg
add
incb
mov
xchg
mov
iret
arpl
test
cmp
fidivrs
sbb
jmp
jns
xor
mov
aas
fldenv
cs
cmpsb
fadd
loop
fildll
sbb
scas
or
movsl
sbb
outsl
jge
xlat
fwait
or
call
cmp
lret
out
jae
pop
les
outsb
pop
jp
cltd
out
les
pop
cmp
ljmp
mov
insw
add
sbb
daa
outsb
movsl
jle
sbb
xchg
addb
cld
cmp
iretw
mov
clc
mov
js
rcr
mov
cmp
stc
xchg
loope
mov
rcl
fwait
sarb
scas
mov
mov
cmpsb
xchg
je
and
into
sub
cmp
push
and
mov
clc
xor
push
aaa
mov
fs
sti
pop
pushf
dec
mov
ljmp
cmc
int
mov
inc
jmp
xchg
out
xor
mov
dec
out
mov
dec
loopne
shrl
inc
sub
ficoml
pop
arpl
adc
lods
shlb
cmp
sub
xchg
je
loope
mov
idivb
cmpl
sub
shr
jb
push
loopne
sbb
jns
pusha
fnstcw
test
sbb
ljmp
or
mov
dec
push
mov
mov
icebp
xchg
pop
loop
mov
fdiv
xor
push
add
pop
fistpl
aam
mov
cs
adcl
jae
and
inc
sar
icebp
jne
sbb
jb
scas
mov
adc
push
dec
inc
seto
xchg
aad
in
xorb
mov
xor
xor
push
adc
out
mov
lcall
loopne
xchg
sbb
add
hlt
xchg
test
fsts
testb
push
inc
add
aad
arpl
xchg
aam
pop
adc
in
shll
idivl
pop
ffree
xchg
in
sbb
pop
lock
ja
cltd
repz
insl
mov
sub
cld
mov
mov
ud0
inc
sub
imul
fildl
andl
add
cmp
xchg
lcall
ds
mov
sbb
jbe
bound
mov
popa
mov
cmpsb
div
aad
dec
iret
push
int3
sub
mov
add
add
lock
jp
in
mov
jo
pop
loop
popf
jbe
into
push
cs
xchg
cmp
or
xchg
fidivs
fs
lds
filds
push
inc
push
or
push
nop
insl
sbb
mov
jge
cmp
popf
dec
outsl
movsb
pop
xor
js
cmpb
fcomip
inc
jmp
push
mov
shl
jg
imul
icebp
or
mov
add
or
fwait
xlat
rcl
xchg
sbb
jle
cwtl
nop
in
je
mov
push
hlt
sarl
rcrb
jbe
and
xor
mov
pop
lods
xchg
sahf
mov
adc
push
movsw
out
push
mov
pop
jmp
xchg
xor
shrb
and
mov
inc
dec
cld
push
push
icebp
stos
xchg
xor
mov
out
and
pop
negb
rol
adc
sbb
pop
mov
and
mov
leave
nop
pop
dec
iret
sbbl
repz
out
jl
daa
aad
in
sar
inc
mov
das
jge
dec
and
scas
sbb
jns
inc
call
cld
pop
ret
mov
xor
ljmp
inc
sbb
outsl
mov
daa
fstpt
sbb
or
ja
xor
or
int3
repz
ds
lret
and
push
dec
sti
push
ficoms
scas
test
jge
mov
push
lock
sbbl
imull
add
lahf
icebp
imul
push
int3
repz
or
mov
sbb
shl
xor
ljmp
adc
enter
loop
ja
mov
jecxz
das
inc
dec
fimull
xor
lock
sub
mov
jnp
cmp
cmp
mov
imul
sbb
leave
push
or
and
xor
pop
andl
nop
pop
in
jns
jg
mov
je
adc
mov
xchg
loope
fs
mov
or
cwtl
sbb
out
iret
test
fstps
sahf
loopne
mov
fldcw
xlat
or
out
jp
cmp
mov
sbb
mov
inc
sub
xchg
and
push
mov
inc
pop
mov
hlt
adc
or
out
test
roll
shlb
cltd
or
dec
lock
cmp
sbb
xchg
repnz
in
add
or
xchg
out
movsb
nop
aad
cltd
ljmp
sti
sub
je
pusha
stc
lahf
cmp
add
movsb
ds
fs
jo
and
jne
subl
loopne
add
push
shlb
stos
test
test
movsl
mov
sbb
add
inc
out
jo
mov
pop
cmp
push
jae
repz
std
fcoml
pop
sbb
pop
scas
in
xchg
mov
cmp
cmpsb
xor
lret
push
and
add
lret
xor
fldt
aas
pop
pop
adc
mov
mov
sub
sub
aad
out
and
cwtl
inc
ror
mov
adcl
inc
sbb
jnp
xor
jge
rcrw
sub
call
lods
jno
scas
add
nop
mov
push
push
sahf
movsb
xor
call
addr16
or
mov
mov
movsb
pusha
in
sub
mov
repnz
pop
mov
fs
sbb
imul
mov
push
mov
sbb
and
lret
mov
mov
dec
jecxz
pop
aas
xchg
cmc
push
int3
and
aam
adc
jl
add
mov
das
mov
mov
add
stc
icebp
sahf
cmp
adc
mov
leave
daa
sub
fistl
and
fdivr
lcall
adc
les
lods
mov
inc
xor
dec
jcxz
sub
cmpsb
es
sbb
mov
lahf
das
and
add
cmpsb
xchg
scas
dec
add
inc
mov
inc
sub
iret
mov
fnstcw
dec
dec
or
cmpl
popa
jns
ljmp
inc
fwait
in
es
cs
popf
imul
inc
mov
in
pop
cmc
out
mov
or
test
lahf
cld
mov
pushf
cmpsb
sub
dec
jle
movsb
jns
divl
jno
xchg
rol
jo
cld
in
test
jle
out
lds
aam
ficomps
lea
rorb
and
clc
xchg
xchg
loope
pop
sbb
mov
cmpsl
stos
xchg
add
xchg
mov
cs
imul
pop
jbe
add
movsl
stos
add
or
adc
fucom
jns
test
test
scas
cltd
cmp
mov
mov
icebp
mov
adc
and
push
iret
fsts
cli
icebp
out
inc
aam
aaa
mov
int
xor
imul
push
push
jnp
push
insl
adc
fistpll
or
fcmovne
and
push
lret
clc
stc
mov
das
sbb
lods
dec
shrb
or
xchg
addl
test
push
stos
jmp
lcall
idivl
jne
repnz
add
cmp
cmp
fnop
xchg
sbb
bound
test
push
push
xchg
addr16
shll
je
sarl
stos
leave
data16
pop
lods
ret
lret
hlt
push
mov
push
outsb
outsb
in
movsb
mov
out
into
imul
movsl
scas
fcomip
in
addl
inc
dec
std
mov
mov
cmp
jmp
bound
dec
mov
xchg
negb
mov
stc
push
out
mov
dec
fidivrs
or
insb
cmpsb
jne
stos
testl
gs
pop
adc
jo
icebp
jne
push
xor
lcall
jl
test
inc
pop
ret
stos
sub
and
xor
inc
jnp
pushf
pop
daa
enter
pop
sti
scas
mov
mov
iret
xor
sub
fists
mov
jecxz
std
xchg
mov
imul
sbb
push
fwait
sub
nop
jg
sbb
jno
push
repz
cltd
neg
mov
xchg
scas
mov
xchg
sbb
dec
mov
imul
jge
inc
mov
cmp
inc
nop
xlat
fcmovnu
daa
addr16
jno
and
adc
push
rolb
cmp
loopne
movsl
cld
shll
adc
pop
or
cmp
jmp
push
jp
cmp
dec
jns
cmp
sub
fwait
movsl
in
aaa
and
cmp
add
sbb
push
das
pop
imul
ss
mov
cmp
inc
outsl
or
fdivrl
push
mov
inc
addr16
loop
add
push
sub
imul
cmp
cmp
inc
dec
pop
mov
test
push
ret
inc
or
adcb
add
pop
lock
aas
push
inc
shlb
ljmp
into
sub
clc
mov
cwtl
or
pusha
test
aam
adc
int
aad
int3
push
aad
jp
ds
loopne
repz
sub
mov
or
fists
sub
jno
inc
mov
push
shll
gs
sub
mov
outsb
push
stc
imul
jg
inc
inc
inc
scas
jle
or
and
sbb
iret
sub
push
sub
js
add
js
leave
adc
insl
and
xchg
mov
pop
cmp
ret
and
sahf
clc
push
jns
push
ja
pop
xorb
and
aad
pop
std
jbe
ja
push
into
in
or
sti
clc
movsb
fdivrl
mov
jl
movsb
pushf
sbb
xchg
adcb
mov
jne
out
subb
lret
and
repz
adc
mov
mov
lret
arpl
and
mov
jge
push
movsl
leave
xchg
movsb
and
xor
dec
adc
jp
jbe
add
xchg
fildl
lds
pop
jmp
pop
jns
repz
mov
pop
mov
dec
lods
mov
loope
sub
test
std
xchg
and
cwtl
push
bound
push
inc
cmpsb
add
arpl
out
rorl
fsubrl
and
mul
push
push
inc
inc
sub
aas
adc
pop
dec
push
sub
pop
cltd
repz
mov
or
or
cmp
movsb
punpckldq
inc
mov
ss
jp
mov
or
mov
decl
and
shlb
cmpsl
mov
loop
mov
sbb
push
imul
mov
ds
adc
xchg
nop
aaa
mov
clc
std
or
shll
lahf
inc
in
je
xchg
decb
dec
fcoml
mov
add
mov
stos
add
xchg
adc
mov
inc
dec
test
scas
cmp
loope
inc
push
ret
or
cmp
fcoms
int3
cmp
mov
adcb
jp
fmull
push
insl
icebp
xchg
mov
cmp
aam
notb
jle
or
aas
mov
xor
or
xchg
ret
in
pop
in
add
jo
fisubrs
andb
scas
leave
fisubs
fld
pop
jb
lods
arpl
lods
inc
sar
aad
push
sub
inc
or
ret
push
into
rorl
mov
xchg
les
inc
and
xchg
cmp
aas
push
mov
jno
push
jl
fsubrl
repnz
mov
pop
clc
mov
int3
or
std
sub
insl
fidivrs
inc
lods
mov
jnp
xchg
cli
inc
or
rcll
xchg
ja
icebp
out
aam
imul
pop
xchg
int3
add
stos
cltd
cli
xor
or
lret
pop
imul
andb
inc
and
shl
aas
imul
mov
and
les
ds
fistl
mov
inc
sbb
sub
cmp
mov
mov
test
cmpsb
pop
out
adc
xorl
out
call
in
jb
vpcmpeqb
adc
sbb
pop
xchg
roll
mov
xor
pop
std
inc
inc
jno
fs
jns
fsubrs
xchg
shl
mov
stos
xchg
lods
or
out
out
pushf
sbb
push
aad
and
movsb
add
pop
dec
mov
push
lock
xor
pop
mov
cmp
hlt
add
lret
xor
jg
sbb
push
icebp
inc
idivb
divl
xchg
into
or
mov
movsl
sbb
sbb
test
stos
and
orl
mov
push
call
aad
xor
ss
jp
ja
push
dec
sbb
or
icebp
mov
imul
fstps
inc
fistps
and
push
jae
or
es
ja
lods
sahf
mov
mov
fwait
movsl
cs
out
fstl
ror
test
dec
add
add
push
stos
and
push
call
mov
adc
mov
jl
in
or
inc
andb
push
into
dec
or
cmp
dec
pop
cmp
or
scas
and
push
mov
adc
mov
iret
cmc
int
fists
rcrb
movsb
push
jo
inc
dec
cmp
mov
out
pop
push
add
xchg
jecxz
mov
jmp
out
cmp
movsb
sub
cmc
cmpl
insb
fcompl
xchg
push
addl
or
dec
or
cmpsb
adcb
jns
cld
cltd
lds
in
adc
push
jo
pop
mov
pusha
xchg
mov
or
sub
into
xchg
dec
mov
out
mov
inc
and
mov
shll
xchg
cltd
push
jmp
pop
add
adc
js
add
pusha
cmp
or
inc
lock
add
movnti
ss
jb
insb
jg
cmc
dec
testl
aas
xchg
arpl
mov
jmp
and
jb
mov
imul
adc
xor
xlat
cmp
rolb
push
push
mov
cmp
insb
mov
outsl
dec
lret
mov
orl
push
mov
mov
shr
and
sub
fnstcw
jle
negb
mov
sub
push
filds
rorb
mov
cli
cmp
adcl
inc
imul
cmp
sub
inc
adc
jle
mov
cmp
add
iret
jbe
andb
xchg
sub
mov
xlat
inc
sub
jbe
in
xorb
sub
or
mov
addr16
leave
xchg
cld
lret
out
mov
or
mov
cmp
dec
push
adc
push
repz
xor
and
ficoms
mov
xchg
lods
mov
mov
in
test
out
jno
test
mov
xchg
and
out
daa
xor
mov
test
dec
cmc
xor
in
sub
push
or
lcall
lods
xor
arpl
jo
out
lock
cmp
xchg
sub
leave
mov
jb
pop
xlat
sub
xor
sub
pop
pop
xor
lds
push
mov
lods
mov
cmp
mov
xchg
dec
dec
push
mov
push
inc
scas
mov
jns
sbb
dec
shll
xor
push
add
cs
mov
repz
test
inc
mov
mov
mov
cmp
ds
mov
mov
xchg
outsl
sbb
popf
orb
insb
call
inc
into
fnstsw
jmp
add
lret
shll
push
int3
mov
xchg
jbe
subl
inc
xchg
mov
int
or
movsb
add
inc
inc
int3
pop
loop
push
cmpb
cwtl
push
inc
gs
mov
jne
loopne
sub
pusha
lods
push
fildll
push
insb
cmp
add
js
cmp
jne
jbe
mov
out
mov
xchg
mov
insb
sub
cli
clc
cltd
add
sti
add
inc
and
add
cmpsl
mov
mov
cmpsl
out
ret
cmp
outsl
inc
cmp
int3
adc
xor
sub
pop
in
mov
cmp
popf
lods
out
and
paddq
dec
jl
popl
dec
inc
push
dec
repnz
inc
dec
and
data16
inc
insl
sbb
sub
push
mov
gs
adc
out
inc
xor
jae
jb
data16
sbb
or
in
cli
aad
aad
imul
push
adc
pushf
mov
xchg
mov
xchg
push
push
es
repnz
xchg
imul
jbe
sbb
enter
into
push
xor
pop
push
aam
mov
adc
adc
sub
movsb
cmpsl
jb
jno
movsl
testb
scas
ss
aas
ret
lret
push
rorb
adc
add
xor
pop
outsl
inc
ret
push
mov
add
call
out
adc
jo
mov
repz
xchg
inc
and
movsb
sti
movsb
bound
mov
mov
jno
jb
sbb
cwtl
adc
push
cmpsb
test
sub
push
cwtl
and
movsb
jae
and
es
sbb
or
mov
mov
enter
aad
ljmp
roll
mov
push
xor
xchg
xlat
add
cmp
lcall
mov
adc
gs
inc
insb
je
push
mov
call
ja
imul
add
ret
pusha
push
arpl
add
and
test
lds
fdivrp
push
jl
daa
push
jp
add
or
lock
rclb
es
fldcw
pop
int
dec
pop
inc
lcall
mov
jne
ss
insb
loope
popf
ja
inc
adc
ljmp
mov
jne
clc
dec
je
pop
fidivrs
mov
or
enter
xchg
and
test
nop
mov
fdivr
mov
mov
push
xor
pusha
je
out
arpl
pop
outsl
outsl
pop
cmpsl
nop
fwait
rclb
sahf
out
push
mov
sub
sbb
or
out
fdivl
dec
mov
fisttpll
dec
lods
push
mov
sar
es
cmpl
lcall
nop
ret
pop
mov
lcall
in
lea
xor
xor
mov
mov
mov
push
rorb
inc
dec
pop
ss
jecxz
sub
pop
adc
sub
mov
outsb
je
insb
mov
movsb
jns
rcr
pop
mov
cli
pop
mov
lock
jge
xlat
imul
inc
jne
fadds
inc
loop
push
hlt
sti
hlt
jge
jle
fstpt
call
and
shrl
push
nop
dec
jmp
mov
dec
dec
clc
int3
mov
lret
mov
cmp
stos
outsb
out
add
add
test
adc
ja
in
fdivl
popf
add
cmp
sub
mov
fsubl
int
pop
fwait
inc
inc
mov
jne
or
lock
out
lock
mov
or
add
fildll
jp
lcall
aad
subb
adc
jns
jb
stos
je
jnp
mov
lods
fistl
and
aad
mov
cs
in
fs
push
lahf
push
xchg
mov
lds
movsb
aad
ds
xor
xor
xchg
sub
or
mov
iret
sti
je
mov
xchg
test
fs
add
and
add
mov
iret
xor
jecxz
mov
insb
and
sbb
cmp
icebp
pop
xor
sbb
dec
jno
call
aad
dec
cmp
lds
adc
push
or
arpl
xor
push
cmp
push
mov
cld
sub
jbe
add
pop
addr16
test
inc
adc
lock
sbb
pop
pusha
inc
push
adcl
cs
cmc
jne
gs
mov
roll
jmp
pop
and
push
or
cwtl
leave
cmp
add
cmp
in
jge
shrb
pop
push
adc
add
dec
fildll
pop
inc
int
cmp
sub
add
jo
dec
push
jno
mov
lahf
dec
cmpsb
test
fdivl
xchg
out
sub
mov
mov
fnstenv
push
lods
outsl
or
fucom
sub
xchg
leave
stos
inc
pop
mov
pop
add
gs
inc
and
sbb
inc
cltd
in
sbb
hlt
xchg
cmp
je
xchg
sbb
mov
mov
les
sub
in
rcll
pcmpeqb
and
dec
mov
jl
andb
jl
fs
dec
inc
and
ja
mov
and
sub
shr
inc
mov
sub
cmpsl
mov
xchg
cmp
stos
repz
bound
fisttps
lds
add
in
xchg
lock
xchg
xchg
dec
into
enter
mov
fdivrl
mov
mov
call
cmp
lods
push
lret
int3
add
mulb
xchg
lea
sbb
repnz
push
lods
push
mov
sbbl
shll
lret
inc
cmp
inc
out
xchg
neg
daa
je
and
pop
ret
xchg
stos
cmp
add
aam
xchg
bound
push
shl
inc
mov
fldl
jp
add
inc
jle
aad
in
imul
jns
insl
xchg
push
es
jnp
cmp
mov
mov
push
inc
insb
dec
sub
mov
pop
mov
enter
sti
int3
lahf
aam
xchg
aas
and
push
mov
push
ficoml
aam
icebp
sbb
push
lods
movsl
cmp
cltd
es
xlat
xchg
jbe
mov
hlt
mov
xor
jns
xor
divl
movsb
inc
sbb
dec
cwtl
or
pop
or
cltd
les
mov
sub
fcmove
cmpl
fidivrl
lret
data16
jl
cmp
cmc
aaa
outsb
lods
sbb
mov
aaa
js
icebp
leave
xor
jg
lock
lods
stc
adc
out
and
jne
nop
xlat
inc
xor
cwtl
fldl
or
xchg
imul
aam
xor
arpl
hlt
cmovs
inc
pop
test
mov
cli
cmp
lock
mov
cmp
in
faddl
dec
xchg
adc
aaa
cld
cmpsb
sbb
jbe
cmp
lea
je
in
loopne
jp
int3
ret
jmp
cmpsl
pop
out
pop
xchg
sbb
cmp
cli
stc
hlt
addr16
stos
add
sub
xchg
aad
ror
loope
push
xchg
mov
sbb
bound
outsb
clc
lods
int3
popa
das
subl
adc
sbb
test
sti
pop
int3
shlb
sbb
xor
mov
push
and
dec
push
lods
inc
repnz
sub
addr16
nop
xchg
bound
pop
inc
pop
push
mov
lcall
push
pop
ds
imul
sub
std
cmpb
cmp
arpl
or
pop
test
shlb
je
xchg
cmp
inc
lds
mov
dec
xchg
inc
sbb
pop
test
std
aas
add
outsl
scas
xor
xor
fbld
inc
nop
bound
loope
test
fimull
jns
jnp
mov
stos
xor
loop
addr16
gs
into
add
and
xor
nop
mov
cmp
clc
push
jae
ret
xchg
sahf
lea
mov
outsb
pop
aas
in
cmp
dec
mov
icebp
add
mov
cld
js
into
cld
mov
jmp
fiaddl
mov
dec
push
or
lea
push
sbb
loopne
jae
out
int
pop
jge
dec
in
movsl
xcrypt-ctr
cmpsl
pop
mov
and
lret
inc
sub
jp
pop
pop
arpl
rcrl
cs
rorb
cmp
cld
dec
jmp
add
mov
cmp
enter
sbb
stos
lcall
in
movsl
mov
jge
jo
dec
pop
xchg
jo
loop
lock
cmp
sbb
jae
jmp
in
jl
fisubl
aad
mov
and
cmpb
mov
pop
int3
test
mov
jae
movsb
inc
repz
push
cmp
dec
je
test
icebp
inc
jmp
jne
pop
ret
xchg
je
cmp
jle
sbb
push
dec
pop
enter
pop
fdiv
bound
and
rcl
adc
lret
or
adc
xchg
lock
push
and
scas
lret
test
scas
mov
inc
jns
sarl
bound
lock
inc
test
nop
and
data16
out
xchg
inc
fildl
add
mov
jle
sbb
push
add
sbb
inc
sbb
mov
cmpsl
push
push
divb
xchg
xchg
sub
daa
les
sub
push
mov
jnp
jo
mov
ret
pop
xchg
push
lcall
adc
adc
jle
inc
stc
fidivs
mov
or
jnp
out
pusha
dec
jno
pop
movsb
daa
ja
in
pop
mov
cmp
mov
lret
push
adc
andb
dec
push
lods
xor
mov
pop
adc
movsb
rclb
inc
lds
inc
xlat
cmpsl
fs
jge
mov
lcall
repz
or
add
pop
test
enter
lcall
cmp
add
jbe
pop
orb
flds
out
repz
or
dec
out
mull
icebp
es
frstor
fistpl
inc
test
jno
out
push
pop
in
ret
popa
jbe
jno
push
inc
jbe
pushf
loope
sbb
pusha
stos
out
and
mov
mov
xor
cmp
ds
mov
mov
shrb
imull
or
mov
out
jo
aad
mov
bound
test
cwtl
sbb
arpl
push
xorl
jmp
aas
leave
sub
in
out
xchg
adc
inc
pop
stos
lea
inc
jle
test
xchg
cmpsb
loope
mov
or
cmp
push
mov
sbb
push
add
cltd
outsl
mov
mov
inc
sbb
test
jp
stos
pop
int3
fidivs
out
cld
shrl
inc
aaa
jg
insl
loope
jg
addr16
in
xor
movb
ror
loope
enter
jno
out
int
call
popf
dec
int
jl
mov
mov
jge
cmpsl
outsb
outsl
pop
testb
push
jp
int
pushf
and
sbb
mov
push
repnz
scas
sahf
sub
mov
inc
call
shr
or
xor
xlat
mov
sbb
pop
mov
push
inc
inc
verr
xor
dec
push
xor
lret
fstpt
repz
in
inc
call
or
sbb
adc
das
pop
xchg
pop
inc
push
push
or
add
cli
sbb
and
lods
xor
fs
insb
fs
addr16
movl
xchg
mov
mov
cwtl
icebp
scas
aad
in
sub
cmp
inc
mov
mov
dec
js
loope
sarl
push
sub
add
iret
int
ffree
adc
loop
sbb
mov
popf
stos
cltd
std
imul
pop
shr
aam
dec
mov
pop
adc
notb
add
mov
sbb
loope
push
lock
movb
and
out
mov
xchg
and
add
std
shlb
or
mov
sbb
data16
into
push
xor
aas
and
sbb
fimull
pop
sbb
jae
push
xchg
gs
push
and
repz
adc
inc
das
mov
xchg
mov
push
sub
xchg
repnz
test
in
xor
jl
xchg
xlat
pushf
ss
push
mov
or
jg
arpl
movb
enter
mov
mov
std
adc
add
jge
jnp
cmpsb
cmp
rclb
scas
xchg
jb
xor
mov
sti
loopne
in
inc
mov
daa
dec
sub
stc
pop
sbb
jp
dec
pushf
dec
outsb
push
mov
and
or
cld
jne
jg
psubsw
mov
jmp
adc
inc
push
add
movb
adc
cmc
sbb
mov
fsub
xor
sbb
jl
or
adc
mov
inc
fisubrs
loopne
and
or
pause
xor
cld
cwtl
lods
cmpsl
call
add
scas
ds
xchg
inc
xchg
push
sti
pop
lods
sbb
sub
lea
test
cli
call
mov
xchg
mov
arpl
push
movsb
insb
repz
mov
xchg
lods
push
loop
push
int
sub
cli
xchg
jmp
test
and
mov
sbb
mov
dec
iret
fists
xchg
adc
mov
adc
adc
aas
in
cmp
insb
pop
lea
sti
mov
or
sub
dec
adc
mov
filds
lds
daa
lods
orb
mov
pop
out
cmp
mov
test
jl
daa
test
inc
hlt
sub
push
movsb
and
xor
sahf
out
ds
xchg
inc
aas
clc
add
inc
pushl
stc
aas
int3
sbb
sub
clc
add
pop
adc
push
mov
inc
insb
sub
jb
daa
sub
ret
sbb
jmp
xor
xchg
loope
xor
leave
pop
js
xchg
mov
outsl
fistl
and
and
test
or
jno
test
jae
enter
push
push
xor
aam
int3
or
out
ss
ds
dec
xchg
in
inc
iret
bnd
iret
sub
shrb
jns
xor
sti
dec
cmp
fcoml
jne
aam
aaa
cltd
dec
jp
std
sbb
sub
jnp
pop
std
sub
sbb
jle
xchg
add
adc
rcl
test
mov
stos
ja
sbb
mov
mov
addr16
stos
jae
cmc
cmpsl
mov
xchg
adc
xor
cmp
jnp
mov
sub
fwait
sti
sahf
sarl
sbb
jno
aam
sar
shr
or
dec
push
test
dec
mov
mov
jo
or
mov
xchg
scas
push
data16
jmp
pop
test
lock
je
push
jge
fwait
lods
mov
and
fcoms
int
iret
xchg
mov
adc
inc
pop
div
loop
ja
inc
dec
inc
push
cmc
inc
mov
orl
test
xor
lahf
scas
das
punpcklwd
xchg
lds
test
sahf
lods
dec
push
xchg
cmp
sbb
mov
xor
imul
mov
cwtl
and
lds
std
sbb
rolb
orl
xor
add
fistpll
cmp
lods
cmp
mov
jp
xchg
push
xchg
mov
pop
lods
aam
dec
lret
pop
mov
or
jp
cld
push
mov
dec
or
scas
stc
fs
xor
scas
test
pop
sbb
imul
mov
mov
add
sbb
mov
sub
movsl
lea
sbb
xor
addr16
mov
push
mov
sub
in
jp
bound
sub
jo
xorps
sbb
and
inc
lahf
enter
cli
xchg
cltd
stos
push
and
add
cmpsl
std
and
cli
sti
lods
xchg
movq
push
jg
push
or
cmpsb
add
imul
mov
pop
popf
ja
mov
in
push
jnp
in
in
fstl
sub
lret
xor
nop
add
rep
or
jmp
hlt
and
mov
xor
push
imul
imul
jb
fisttpl
movsl
push
in
mov
movsb
repnz
sbb
out
lods
mov
sbb
iret
xchg
mov
in
inc
scas
ret
lahf
or
sbb
and
inc
jmp
sub
in
inc
jo
inc
pop
rorl
cmp
pop
and
sbb
jg
gs
ja
mov
out
cs
mov
mov
cmp
pop
aas
mov
cmp
repz
pop
fcomps
xor
shll
pop
xchg
xchg
or
ljmp
dec
mov
rcll
decb
in
addps
xchg
add
mov
stc
es
ja
sbb
or
mov
jge
jbe
pop
jg
sub
hlt
mov
sbb
out
pop
insl
and
std
fcoml
clc
lock
dec
jp
orl
out
aad
mov
popa
lods
inc
cmp
lock
push
gs
inc
pop
mov
aam
clc
lods
xchg
in
mov
xchg
pop
pop
xor
lds
fists
jo
xchg
nop
ljmp
fucom
dec
movsb
mov
pop
sub
enter
shll
clc
dec
push
daa
and
jbe
cmp
xchg
cmc
sbb
je
jb
push
push
cmp
sarl
push
xchg
lods
push
push
fs
shll
mov
push
mov
add
test
sbb
pusha
xor
mov
mov
mov
out
mov
int
mov
test
inc
mov
pusha
jl
pop
inc
fistpl
jae
aam
imul
sti
cmp
dec
fcompl
mov
lcall
divb
jl
mov
insl
hlt
fnstsw
mov
jnp
mov
add
shll
fistpll
push
or
sahf
or
les
mov
pcmpgtw
mov
out
sub
adc
loop
dec
mov
inc
xchg
add
and
sub
mov
in
js
cmp
movsb
mov
lahf
sbb
push
dec
sbb
xor
clc
jmp
js
add
cmp
lret
jae
fcomps
scas
jecxz
mov
push
cmp
xchg
pusha
lea
pop
push
stc
ja
iret
pop
cltd
arpl
es
fsubs
inc
lret
mov
pop
lods
ljmp
out
dec
xchg
mov
es
subb
stos
popf
mov
push
push
aam
data16
mov
insl
adc
push
dec
lock
iret
adc
ss
std
stos
sbb
jb
jb
jg
mov
sbb
lods
jno
inc
ds
mov
repz
outsl
loope
lods
mov
add
insl
cli
ds
fisubl
jbe
cmp
mov
cmpsl
pop
inc
fadd
and
arpl
or
scas
push
dec
sub
add
adc
je
dec
xorb
mov
in
cli
mov
movsl
push
dec
jne
out
sbb
sbb
push
ss
mov
xchg
stos
push
mov
xor
push
je
xchg
jns
sub
sbb
xchg
adc
aam
and
or
lock
sub
fisubrs
cmp
add
mov
dec
cs
ljmp
and
dec
mov
jecxz
push
push
and
mov
cmp
cmp
lock
subb
movsl
jo
popa
outsb
shrb
in
mov
fs
insl
cmc
mov
pop
dec
push
inc
pushl
xor
xor
jg
shll
mov
dec
mov
movsb
lret
sbb
xchg
lcall
jne
cmp
cli
arpl
insb
and
loope
jmp
add
push
ror
and
in
lea
popa
push
xor
dec
jns
stc
sahf
sbb
outsl
fisttps
dec
xorb
and
cmp
stos
loop
and
xor
mov
insb
test
cmp
xchg
stos
ja
psllw
mov
push
in
sub
pushf
mov
xor
dec
sub
mov
stc
out
repnz
sbbb
dec
repz
add
xor
leave
into
pop
inc
lea
or
call
cmpsl
jge
pop
pop
dec
into
sub
cmp
mov
push
and
xchg
inc
leave
fcomps
push
adc
mov
mov
out
add
mov
out
into
xchg
inc
mov
rcrl
mov
rol
jge
fucom
scas
out
cmp
aam
xor
imul
lahf
jle
mov
adc
in
add
das
mov
adc
sti
push
sub
push
aaa
add
xchg
cwtl
add
push
arpl
outsl
repnz
xchg
mov
or
xlat
mov
int
push
lods
js
dec
and
in
into
imulb
aaa
mov
sub
jg
sub
sbb
push
scas
push
xor
pusha
andb
xchg
insl
lods
sbb
cmp
pusha
int
push
push
pop
jp
adc
into
jbe
arpl
in
mov
jle
pop
push
jmp
aad
xchg
push
imul
addb
inc
xor
addr16
xchg
lahf
jo
arpl
sbb
lock
sub
sub
mov
sub
dec
jecxz
cmp
or
mov
pusha
jl
push
les
cmp
xchg
ret
shr
cmp
jp
dec
dec
jmp
lds
pusha
jp
mov
xchg
movsl
aaa
das
xor
pop
cltd
loop
mov
mov
lock
sbb
pushf
sub
push
les
sbb
adc
cmpsb
jno
and
nop
rorb
xchg
es
dec
jl
dec
fwait
mov
mov
add
aad
ds
xlat
add
arpl
mov
dec
xchg
mov
clc
sbb
jl
add
pop
movntps
movb
mov
lret
outsl
ja
jmp
jecxz
jbe
negb
leave
inc
or
subb
movb
mov
push
add
jle
popa
repnz
pop
pop
xlat
jb
push
xchg
jne
fsubrs
jo
lret
mov
xor
fisttpl
mov
outsl
faddl
push
dec
test
mov
pop
bnd
add
daa
jnp
add
test
mov
push
sahf
jno
cs
adc
jne
mov
cmp
out
mov
adc
dec
ljmp
andb
push
sbb
cs
movsl
mov
adc
pop
sbb
lods
jns
push
outsb
jl
movsb
out
mov
push
inc
xor
je
push
out
shlb
push
shl
and
pop
mov
mov
mov
mov
inc
aas
imul
mov
scas
jb
inc
fcompl
adc
stos
js
dec
add
mov
inc
shll
sbb
adc
or
outsb
pop
jnp
mov
sti
mov
lcall
inc
repz
sbb
push
clc
mov
jg
cmp
adc
mov
es
setg
mov
add
inc
test
cltd
testl
scas
lds
and
es
std
sub
pop
mov
pop
xchg
inc
jle
add
pop
and
es
and
mov
jb
sarb
push
adc
lahf
outsl
lret
dec
or
dec
jle
adc
dec
push
push
dec
xchg
sub
clc
leave
mov
pushf
in
test
pop
mov
mov
subl
jb
test
je
bound
push
test
sbb
dec
das
cld
js
mov
lods
sbb
jge
imul
jge
add
mov
daa
fadd
jnp
nop
mov
mov
pop
outsl
les
fcmovnu
iret
insl
mov
test
shlb
adc
nop
fwait
cmpsl
out
xor
fwait
mov
push
xchg
in
jp
push
push
push
test
dec
repnz
xchg
mov
fcomp
out
lea
test
dec
jl
cmpsl
scas
in
scas
dec
and
mov
dec
les
push
xchg
sti
dec
enter
out
arpl
aas
and
mov
mov
in
shll
lahf
jne
jecxz
out
cli
jmp
stc
pop
faddp
leave
cmp
fwait
sub
mov
jecxz
mov
push
jo
cmp
inc
test
int3
fmul
dec
insl
sub
inc
mov
mov
iret
divb
icebp
xchg
frstor
and
mov
subl
imul
rcl
push
sti
std
in
jle
imul
icebp
mov
fidivrs
jo
loop
add
pusha
jb
jmp
les
shr
test
pop
push
adc
ret
xchg
xchg
adc
out
int3
cmpsb
jo
loopne
sarb
ret
cmp
cwtl
jnp
adc
or
cmp
cmp
shll
xchg
inc
or
xor
jae
sbb
mov
inc
xor
sarb
outsl
adc
mov
or
cmpsl
in
pop
movsl
inc
sub
addb
mov
dec
data16
scas
mov
icebp
cmp
jge
fdivrs
ror
pop
pop
mov
stc
xchg
and
sub
enter
mov
mov
push
shrl
imul
mov
xchg
ljmp
loop
mov
mov
arpl
xchg
das
orl
pop
mov
ja
mov
mov
mov
lret
cwtl
out
add
fisubs
lods
xchg
rcrb
sub
cmp
test
pop
and
push
andl
push
hlt
daa
lds
into
add
jo
xor
cs
cs
or
lods
cs
add
cmp
pop
jo
cmpsl
insb
js
imul
pop
enter
fstps
or
out
add
out
ja
and
fmul
arpl
ljmp
idivb
movsb
rol
loope
push
pop
scas
loopne
test
add
pop
bound
ds
adc
mov
inc
scas
sub
jl
stc
mov
ljmp
repnz
pop
sbb
es
push
mov
jle
ret
loope
ffreep
lock
clc
orl
stos
xor
fs
add
rcll
js
push
gs
xor
push
and
jle
iret
outsl
sub
mov
jnp
loop
and
outsb
mov
mov
sbb
push
ja
popf
mov
inc
mov
jle
push
push
sub
cwtl
sub
into
sbb
mov
mov
inc
sbbl
inc
gs
or
xchg
subb
pop
cld
cmpsb
mov
inc
xchg
pop
sbbl
jbe
sub
or
or
lcall
mov
loop
shlb
pop
mov
mov
or
jae,pt
push
lods
or
mov
inc
adc
cmc
arpl
xor
or
fs
sub
dec
ficompl
aad
pop
cmp
or
insl
mov
mov
arpl
fdivs
xchg
sub
xchg
lcall
push
add
lods
mov
dec
pushf
stos
mov
mov
outsl
cmpsb
dec
adc
inc
iret
fnsave
or
xchg
sahf
dec
popf
pop
sub
sbb
mov
xlat
mov
mov
sub
ret
dec
cmp
cmp
jbe
inc
sbb
rorb
xor
mov
cmp
xor
in
sub
pop
fcoms
fnstenv
mov
push
lock
jns
sbb
clc
test
ret
add
or
push
jne
outsl
lods
mov
std
add
xchg
or
pop
clc
jnp
inc
xchg
add
stos
out
cmp
and
stc
lods
fbld
xchg
lcall
xchg
jmp
mov
in
xlat
pop
xor
or
lods
xor
lahf
aaa
test
xchg
mov
adc
sbb
pop
scas
sbb
cwtl
push
mov
aad
ret
call
pop
mov
gs
push
xor
cmc
bswap
xchg
cwtl
test
and
icebp
push
xchg
fwait
ss
rcll
push
insb
cmp
stos
popf
dec
je
in
cmpsb
fisubs
mov
pushf
in
das
pop
popf
ret
xor
or
popf
jbe
cmp
sbb
xor
cmc
loopne
inc
inc
inc
jbe
add
xchg
je
mov
addr16
ficoml
ss
pop
push
decl
insb
push
xlat
and
sbb
mov
xchg
enter
jg
scas
push
scas
push
inc
popa
dec
pop
push
push
or
or
iret
mov
gs
xor
sbb
std
cmp
outsl
inc
push
mov
into
cli
push
fmuls
test
je
and
push
sub
rcrl
popa
jo
push
mull
out
enter
inc
pop
call
dec
aad
jmp
pushf
fcmovb
fxch
rcrb
or
roll
pop
mov
mov
ja
mov
mulb
imulb
insb
jle
xchg
jecxz
jae
cmpb
outsl
pop
dec
test
fmull
dec
cs
cmp
mov
jg
inc
sub
xchg
fnstsw
test
imulb
popf
iret
add
in
fs
lds
popf
rcll
pop
call
aas
mov
sbb
push
pop
rolb
mov
dec
adc
add
cld
cmp
je
sub
mov
jecxz
lods
std
les
adc
sahf
repz
jl
test
xor
jp
pop
bound
mov
cli
mov
dec
hlt
pop
pop
sub
mov
fwait
push
fs
mov
push
xor
out
or
leave
inc
add
mov
pop
push
insb
xchg
cmp
xchg
and
add
push
push
mov
mov
push
fisubs
push
jns
ret
or
roll
sti
data16
cmc
jg
adc
stc
push
loopne
add
addr16
sub
sbb
ret
add
mov
sahf
pop
inc
inc
pop
adc
loopne
mov
inc
dec
out
test
mov
outsl
cs
dec
mov
xchg
stos
rorb
mov
and
fbstp
sub
xchg
mov
jg
mov
add
sub
pop
add
ss
loopne
adc
xor
icebp
dec
rcrl
mov
out
ret
mov
insl
inc
sbb
and
shl
es
mov
jns
test
cmp
lods
dec
mull
xchg
jmp
mov
ret
fbld
repnz
or
mov
subb
out
mov
mov
xchg
mov
test
mov
mov
scas
rcrl
fildl
jmp
loopne
orb
test
ljmp
aad
mov
mov
loop
mov
push
aas
in
cmp
dec
push
adc
loopne
adc
xlat
cmc
xor
add
jnp
fstps
xchg
mov
and
or
and
adc
call
push
adc
loope
call
jg
xor
push
int3
lods
xchg
push
int
inc
loopne
loop
xchg
into
lock
push
test
jnp
mov
test
mov
inc
push
lods
cmp
cmp
add
xor
pop
loope
and
inc
fcomps
xor
test
add
das
or
adc
popf
jae
bound
das
jp
rorb
mov
mov
mov
lods
stc
inc
ja
das
in
push
test
xchg
sbb
mov
pop
jle
mov
outsb
pushf
inc
iret
mov
movsb
cmpb
mov
cmpsb
sub
cmc
jle
adc
jbe
mov
inc
jp
frstor
push
call
ret
xor
addr16
dec
loope
ds
adcb
push
adc
cmp
ljmp
mov
adc
jge
jecxz
sbb
gs
dec
in
jb
into
outsb
jp
lret
dec
mov
or
add
or
xchg
jmp
je
repnz
lret
movsb
ljmp
lret
lds
cmp
add
stos
cwtl
lea
cwtl
jp
mov
loop
sbb
test
clc
out
mov
aad
aam
jb
pop
lods
pusha
sub
cwtl
inc
dec
into
sub
cli
popf
clc
les
sti
xchg
sub
lret
and
std
inc
and
xor
sbb
movsb
sbb
jmp
adc
shlb
fldl
push
in
adc
stc
adc
neg
fdiv
jecxz
pop
and
mov
sub
stos
jg
jae
jl
push
xchg
push
push
std
fsubrp
ret
push
leave
push
mov
xchg
pop
push
mov
loopew
jbe
xchg
mov
push
sbb
inc
push
xchg
mov
ss
popa
xchg
insl
scas
inc
gs
mov
mov
pop
lods
fwait
and
arpl
jne
and
adc
sbb
sbb
aas
jb
cmovb
sbb
xor
and
xchg
pop
xchg
idivb
add
mov
cmp
cli
push
sbb
xchg
stos
jl
sub
push
pushf
dec
movsb
or
out
and
rolb
xor
xchg
popf
out
xor
pop
cmpl
lock
mov
xor
add
push
or
or
rol
jmp
daa
xor
mov
bound
add
mov
lret
outsl
mov
icebp
out
in
fnclex
fbld
mov
popa
xchg
dec
cmpsb
jg
cmp
jne
xchg
lret
scas
std
es
scas
push
jne
arpl
les
or
cmp
das
add
add
xchg
lods
lret
cmp
in
in
sbb
mov
fs
cwtl
int
and
fmull
out
lock
testb
sbbl
pop
mov
add
and
add
ret
adc
jg
adc
or
and
adc
sbb
gs
fs
cli
and
das
push
cmp
ret
ficoml
fistpl
pop
jmp
xor
xchg
jg
sbb
cltd
testb
add
xchg
mov
mov
jbe
or
pop
jns
insb
push
ret
inc
roll
pusha
and
cmp
jle
stos
repnz
fwait
rolb
pop
pop
out
cmp
lret
shll
dec
repnz
xor
push
cmp
cmpsb
shll
test
and
pop
insb
cmp
and
pop
or
test
stos
out
fcoml
jns
enter
mov
jo
pushf
ret
jnp
cmp
sub
push
sub
pop
shlb
sub
inc
and
aas
shrb
fwait
xor
jmp
incb
jns
call
xchg
or
pop
jnp
pop
test
frstor
add
dec
test
incb
mov
imul
push
sub
sbb
test
push
mov
sbb
sbb
sbb
loopne
xor
push
mov
lea
cmp
mov
movsb
jb
arpl
jb
add
cmpsl
or
out
lods
or
mov
mov
sub
in
adc
es
mov
sub
xor
sub
cli
push
jbe
imul
loop
add
andl
sub
stos
xorl
xlat
mov
popa
lds
cwtl
call
popa
jb
sbb
pop
pusha
stos
stos
push
push
push
sub
mov
into
imul
scas
call
xor
sbb
outsb
data16
sti
fwait
jae
arpl
enter
inc
jp
add
adc
sbb
jnp
and
fmul
cmpsb
push
add
imul
pop
mov
sub
mov
rcl
mov
fwait
in
sub
cmp
imul
pop
adc
mov
fmuls
jbe
mov
dec
jb
lods
fs
push
xorl
and
scas
pop
mov
scas
sbb
and
push
mov
push
filds
push
jge
cld
mov
cmpsb
fcompl
cltd
pusha
outsl
lods
cmp
cwtl
lods
push
cmp
arpl
xchg
pop
popa
sbb
cwtl
dec
add
or
add
inc
cmc
xchg
adc
inc
sub
mov
aam
or
mov
jp
sbb
xchg
mov
cli
ror
rcl
jne
sub
lea
cld
pop
cld
incb
addr16
daa
dec
pop
xchg
or
push
push
ret
lret
pop
or
pop
mov
out
ficoms
pop
push
xor
std
pop
test
ret
xchg
pop
jno
push
imul
sbb
testl
aam
popf
movsl
or
fadds
mov
scas
les
dec
cmp
dec
sbb
ds
fisttps
push
sti
sbb
push
leave
dec
mov
jecxz
push
ret
pop
int
repnz
fs
push
push
out
imul
bound
in
and
or
xchg
cld
es
arpl
pushf
lret
incl
dec
sti
movsb
xchg
aad
iret
addr16
cmpl
fsubrs
adc
ljmp
sub
jp
icebp
movsl
stc
jge
mov
xchg
out
inc
cmp
dec
test
mov
arpl
or
outsl
sub
gs
fbstp
ret
sbb
dec
and
add
ss
adc
aam
fwait
xchg
or
or
rcr
lea
mov
cli
xor
cmp
jns
dec
cmp
and
rorb
sub
movsb
or
jae
adc
xlat
inc
fisttpl
xchg
push
and
lock
mov
dec
ret
mov
popa
push
cmp
sbb
inc
lret
in
sub
push
lret
sub
sbb
ret
ret
lods
mov
ret
lods
dec
or
pop
mov
xchg
loopne
sbb
xlat
or
adc
dec
xor
sub
sub
xchg
mov
insb
xorb
mov
mov
das
filds
aaa
pop
test
rorl
jae
mov
loopne
push
pop
outsl
icebp
lock
push
mov
and
jb
xlat
aam
popl
cmpsb
or
fisubrs
push
dec
in
pop
xor
das
sub
leave
sub
testl
xor
in
cmpsb
test
jle
in
les
mov
push
movsb
lahf
in
ficompl
lahf
lret
mov
pop
pop
jg
stos
push
enter
arpl
mov
arpl
mov
insb
mov
dec
push
insb
fistps
xchg
lcall
outsl
xor
dec
cwtl
jae
mov
loopne
incb
mov
add
imul
cwtl
dec
bound
jmp
xorl
xor
leave
lock
dec
dec
sub
xchg
mov
push
shll
ficoml
pop
andb
xor
xor
pop
push
leave
es
ja
mov
mov
pop
mov
aad
lods
ja
sbb
cmp
outsb
xor
sti
dec
push
dec
mov
xlat
push
sti
mov
in
and
adc
stos
lds
and
push
iret
xorl
lcall
jns
cli
lods
lcall
scas
mov
je
mov
andb
aaa
xchg
sub
mull
adc
push
roll
mov
insl
or
xchg
jl
ret
xor
cli
dec
int
arpl
jmp
imul
rcrl
mov
std
or
shll
inc
cmp
lea
repnz
test
lcall
jbe
movsb
or
adc
dec
dec
pusha
shlb
add
scas
adc
testb
pop
jae
mov
insl
sahf
dec
xchg
adc
fsubrp
fidivrs
add
jb
jge
inc
arpl
inc
std
or
push
pop
xchg
mov
dec
cmp
sub
sbb
or
rcll
sub
ss
loope
jno
mov
lock
push
or
hlt
jg
jl
mov
pop
or
xor
jne
pusha
adc
mov
out
push
dec
push
push
xchg
dec
test
idivb
in
mov
xchg
mov
out
leave
mov
pop
mov
add
cmp
les
jo
loopne
in
movb
stc
mov
cmpsl
insl
sti
and
push
aad
pusha
inc
mov
outsb
es
movsb
adc
sti
test
pop
fstpt
das
lret
leave
cmp
ja
not
mov
mov
pop
call
std
sbb
adc
sub
out
jbe
jne
pop
mov
es
neg
cmp
mov
in
int
sub
mov
mov
dec
jmp
mov
shrb
out
inc
add
xorl
movsb
shlb
and
push
mov
pop
aad
add
ret
sbb
push
xorb
jmp
incl
loop
jmp
fs
pop
daa
xchg
pushf
mov
inc
xchg
inc
pushf
jl
push
ret
imul
scas
xor
test
outsb
js
mov
mov
adc
into
xor
xchg
fsubrs
pushf
xchg
gs
inc
xor
sbb
stos
add
stos
mov
pop
clc
xor
mov
adc
dec
mov
stc
daa
mov
jo
fldt
mov
nop
xchg
add
pop
test
imul
xor
jmp
mov
push
jecxz
or
mov
lods
mov
fcmovu
xor
in
push
outsl
pushf
cltd
mov
dec
fcoms
ret
icebp
jnp
ret
mov
sarb
pop
push
fdivrl
jnp
dec
aad
mov
push
pusha
popa
mov
ljmp
dec
inc
cmp
stos
jle
movsb
push
subl
xchg
adc
cmp
inc
loopne
les
or
shrl
lea
insb
jns
add
sub
and
pop
cmc
sti
popf
jle
inc
xor
xor
bound
mov
add
and
push
xchg
push
push
inc
orl
outsl
jge
mov
test
xchg
mov
sub
std
jnp
lret
push
incl
jl
pushf
pop
jno
rcr
mov
jge
and
lock
add
mov
fmull
scas
lret
jl
aaa
xor
stos
lods
mov
jmp
push
shll
pushf
inc
push
xchg
lret
jnp
into
cmpsl
aam
inc
in
add
int3
pop
jno
ficoml
xchg
imulb
lea
mov
sbb
xor
mov
ljmp
lods
inc
xlat
fucomip
mov
sub
scas
dec
push
je
cwtl
add
aad
in
inc
mov
jbe
jne
pop
addb
cmp
fstl
pop
jp
ljmp
dec
lret
pop
imul
jbe
jecxz
xchg
xchg
xchg
sahf
mov
sti
lock
enter
bound
inc
jmp
or
xor
loope
xor
test
xlat
dec
das
ret
sub
fldcw
cli
popl
loopne
inc
lea
ret
sbb
xchg
shlb
je
lsl
cltd
xchg
sbbl
dec
inc
out
and
jb
rcl
orb
fadds
test
push
and
sbb
clc
fistl
inc
loope
jno
pop
jmp
dec
popf
xchg
sub
push
sbb
imul
icebp
arpl
cmpsb
bound
imull
mov
add
shr
test
push
add
mov
dec
add
fsubrp
or
lock
fimull
enter
jno
push
loope
cmp
test
lock
inc
bound
popf
pop
xor
xchg
lcall
add
cmp
leave
leave
sub
xchg
jle
and
fwait
sbb
fisttpll
and
popf
mov
aas
aam
xchg
jle
dec
insb
rep
lods
pop
cli
mov
inc
sti
mov
fdivl
sub
inc
mov
nop
ljmp
jnp
loop
rcr
dec
mov
push
pop
mov
scas
mov
push
js
inc
stc
das
repnz
aaa
int
or
nop
movsl
movsb
adc
lea
or
dec
jmp
orb
mov
cmc
pop
shrl
sbb
cmpsb
inc
mov
xor
js
push
int
and
enter
bnd
push
fst
pop
pusha
xchg
mov
mov
out
lods
mov
jbe
aad
mov
cli
iret
inc
and
xchg
push
rorb
sbb
jecxz
push
inc
incl
mov
pop
gs
nop
jo
jle
pushf
push
rorl
xchg
repz
negl
pop
inc
mov
int
jnp
andb
adc
cld
mov
shrb
push
leave
ror
movsb
dec
inc
xor
scas
hlt
or
outsb
outsl
std
into
call
add
fcompp
xlat
nop
fildl
es
xor
adc
pop
fpatan
data16
dec
in
cmp
push
jae
mov
fnstcw
xchg
fcmove
insb
out
cmp
lock
adc
scas
push
add
pusha
addr16
and
sub
out
sarl
dec
insb
jno
sub
push
fstpl
or
cwtl
sbb
mov
cwtl
inc
pushf
clc
xor
cmp
nop
xchg
xchg
fsubrs
adc
dec
xchg
dec
xchg
cltd
test
notl
push
sub
addb
pusha
insl
mov
mov
movsl
lret
dec
push
mov
ss
xchg
lret
loop
push
in
mov
fiadds
jl
pop
leave
mov
xchg
and
cmp
dec
imul
inc
mov
cld
test
pop
sub
cltd
cmpsl
into
test
rorb
aad
bound
add
addb
or
lods
sub
add
ret
sahf
push
movsl
inc
das
sub
dec
pop
add
push
pop
sbb
xor
aam
add
lock
popf
push
jbe
inc
jp
mov
out
lock
jmp
xchg
test
xchg
sbb
add
test
mov
inc
sarb
pop
test
aam
pop
push
mov
ljmp
aam
xchg
inc
xor
sub
sar
fisttpl
arpl
dec
inc
iret
jnp
mov
jp
imul
movsb
idivb
lds
in
sub
cmpb
cmp
xor
dec
out
pop
push
fwait
leave
popa
lret
and
xchg
aam
mov
mov
cmpl
dec
xor
and
mov
lods
sbb
shlb
inc
fsub
mov
dec
in
int3
sarl
push
fimuls
sbb
xchg
or
xchg
or
out
aad
mov
push
jae,pn
cmp
jecxz
cmc
jg
popf
mov
mov
mov
push
aad
subl
jle
mov
and
loope
sub
arpl
roll
push
pop
cmp
ljmpw
lret
outsb
xor
or
ret
out
aas
pop
cmp
jge
xchg
cmovns
add
pop
mov
aaa
adc
lock
cld
or
sub
jmp
data16
cmp
pop
and
scas
and
xlat
dec
mov
inc
xchg
ret
in
inc
xchg
jne
xchg
jbe
popa
rclb
adc
sub
adc
scas
sub
scas
xchg
es
outsl
call
mov
push
sbb
es
push
sbb
ss
jb
nop
pop
inc
sti
lock
pusha
jecxz
mov
add
and
mov
stos
xchg
orb
dec
sub
vpsllw
movsl
sub
mov
sahf
mov
inc
and
xrelease
sub
stos
sub
jb
xchg
pop
push
xchg
sarl
jg
or
sub
adc
pop
mov
cmp
loope
pop
sub
jge
add
adcb
addr16
cwtl
jnp
sbb
test
adc
xor
sti
scas
shr
decb
xchg
icebp
jae
inc
cmpsl
pop
lods
push
dec
xchg
xlat
inc
daa
mov
in
and
fidivrs
outsl
or
mov
adc
mov
jge
in
or
decb
aas
mov
and
mov
mov
jge
fisttpl
push
rcll
mov
dec
clc
test
fwait
push
xchg
sahf
call
mov
or
je
pusha
cmpsl
cwtl
and
pusha
loopne
mov
iret
ret
mov
dec
mov
pop
mov
rcr
jbe
lret
out
popa
fstpl
sti
push
or
dec
push
rclb
in
cltd
xchg
lods
jne
mov
nop
sub
jmp
jl
jecxz
xor
call
inc
addr16
out
in
fsubrl
adc
add
adc
adc
mov
clc
int
xchg
xorl
or
mov
cmpsl
sub
add
das
je
or
sbb
push
les
insb
push
out
repz
push
jmp
push
fbld
shrl
push
fs
ret
iret
jmp
push
cld
adc
rcrb
jne
push
in
sub
mov
ljmp
jge
fs
cltd
xor
or
cmpsb
cltd
pop
pop
mov
mov
sbb
scas
cld
and
mov
jo
xlat
mov
pop
sbb
data16
mov
mov
stos
outsb
jmp
inc
mov
aam
ret
or
cmp
scas
push
adcl
add
add
push
or
pusha
adcl
xlat
outsb
test
cmpb
pop
pop
ss
nop
and
lea
cmpsb
enter
clc
add
xchg
adc
insl
mov
and
adc
jl
add
mov
aad
call
sti
in
aam
enter
adc
aam
xchg
pop
neg
std
xchg
pop
adc
fisubrs
dec
sbb
stc
and
mov
ja
lret
xor
push
stc
mov
push
loop
fidivrs
cmp
mov
adc
pop
xchg
inc
jle
jne
xchg
rorb
rep
jge
sub
fnstenv
nop
jle
sub
call
inc
cmp
repz
jge
mov
cli
movsb
lea
pusha
add
push
sub
and
push
pusha
pop
test
es
cmpsb
daa
popa
and
cltd
pop
lret
pop
push
fstpt
push
popf
dec
inc
push
mov
aad
jge
js
loopne
test
lcall
iret
jo
dec
cs
mov
mov
jle
xchg
je
scas
cmpsb
inc
jp
ljmp
push
mov
dec
aam
add
xorb
inc
lea
fmuls
inc
inc
mov
sub
pusha
fwait
outsb
insl
mov
mov
xor
mov
fiaddl
pop
push
call
sbb
sahf
leave
lock
and
jb
ret
cmp
sbb
mov
pmullw
sub
adc
pop
mov
sti
scas
cmp
sbb
jge
inc
or
test
outsl
push
inc
pop
es
cmc
xchg
jmp
xchg
and
and
aaa
inc
test
jmp
into
dec
aas
pop
scas
in
jae
mov
xchg
fst
jecxz
dec
push
dec
fcompp
in
inc
xlat
mov
sub
inc
outsb
les
push
adc
jp
clc
cmpsl
rol
loop
sarl
mov
xor
mov
mov
sbb
in
out
xchg
loopnew
fs
test
incb
lcall
push
nop
sbb
and
push
add
jns
pushf
mov
jnp
dec
ficomps
jp
adc
lahf
sub
xor
push
addl
les
adc
ja
inc
idivl
mov
and
pusha
lods
ja
mov
mov
ds
popa
pop
sbb
mov
jp
fwait
sub
and
pop
xchg
inc
mov
daa
mov
shr
and
sbb
fimull
sti
cld
sbb
out
aas
jne
sub
daa
and
in
sub
fisttpl
push
ds
mov
test
add
push
rclb
int
pushf
jno
lods
jp
out
test
imul
push
fnstenv
fstl
cmpsl
jbe
rcl
sti
xchg
ja
add
int3
xor
pushf
jns
and
jge
sbb
insb
or
inc
cwtl
xor
insl
movsb
jp
or
hlt
in
lds
shrl
movsb
in
pop
pushf
stc
dec
cmp
lock
and
lock
and
in
or
push
movsb
xchg
mov
add
inc
rorb
into
dec
push
push
outsl
cmp
xor
add
mov
rcll
repz
push
adc
rolb
enter
mov
pop
cmp
dec
cwtl
cmp
push
or
bnd
push
jo
fnstcw
fisttpl
test
mov
push
xchg
insl
out
shrl
outsb
into
cmpsb
test
rcll
sbb
mov
inc
cld
iret
xchg
and
daa
push
pop
sbb
push
mov
xchg
and
movl
call
mov
gs
adc
mov
mov
push
test
in
std
push
or
fs
adc
mov
sbb
or
ss
scas
pop
mov
dec
inc
test
or
insb
sub
insb
inc
ljmp
mov
xor
dec
inc
das
mov
push
jo
dec
jp
pop
jno
fistps
cmp
add
popf
ja
jbe
repnz
mov
or
and
mov
inc
add
adc
jo
push
lods
in
daa
fnop
sub
movsb
push
sub
fcomi
inc
rcrl
push
sarb
lcall
lret
jne
orb
jns
pop
push
es
dec
imul
cld
cmc
insw
mov
push
jns
pop
fisubrl
mov
push
dec
add
test
inc
inc
sub
pop
hlt
mov
std
sub
test
pop
sbb
xorl
xchg
mov
mov
mov
push
mov
shl
outsb
orl
in
xor
push
sbb
rcll
outsb
sbb
aaa
fsubrs
push
in
pop
or
xchg
int
dec
adc
xor
inc
xchg
lcall
daa
and
mov
out
mov
sub
jg
scas
into
mov
adc
sub
and
inc
jmp
jmp
aas
inc
das
lds
test
fs
mov
enter
sti
mov
inc
div
mov
insb
fcomp
mov
aam
ret
inc
xchg
mov
rclb
push
mov
fcoms
or
cs
adc
outsl
call
adc
aad
sti
xchg
loop
jp
or
sub
mov
xor
jns
dec
hlt
arpl
mov
add
sbb
sbb
or
push
pushf
push
cmp
push
pop
insl
sbb
and
dec
lcall
stos
cltd
repz
pop
clc
pusha
mov
cmp
les
or
adc
icebp
jl
ret
cmpsl
fs
shrb
shrb
into
dec
xchg
clc
dec
pop
pop
ret
cmp
shrl
cmpsb
scas
and
ds
movsl
cs
jl
incl
dec
push
icebp
and
in
aad
arpl
call
jb
mov
mov
jl
pushf
sarb
jge
sub
xchg
mov
iret
dec
push
adc
sbb
or
popf
movsl
fimull
addr16
mov
push
adc
or
sbb
movsl
mov
pop
nop
dec
mov
xchg
cmp
aaa
movsb
bound
outsb
hlt
jne
cmc
cmpsl
or
fs
aas
adc
and
js
sbb
xchg
lahf
mov
cmp
push
push
loopne
icebp
insl
sbb
jae
in
stc
dec
in
ret
mov
jb
fisttpl
in
je
adc
sahf
sbb
lcall
lock
jle
or
pop
lcall
sbb
loope
lods
loope
sti
div
jp
dec
orb
int
or
daa
stos
fimull
jge
repz
into
std
push
xor
rcr
mov
insl
pop
xor
sbb
sbb
xor
dec
lea
mov
clc
pusha
lcall
je
push
push
stc
and
fistpll
pop
repnz
lcall
movsl
mov
bound
subb
gs
aas
mov
shl
jle
xor
pop
cld
jnp
push
mov
repnz
mov
sbb
cmc
int3
mov
and
int3
jg
sbb
push
cmp
in
add
adc
jns
jno
adc
push
cmp
sbb
loopne
sub
push
je
je
dec
add
mov
or
sarb
fiadds
jno
sahf
jge
fdivr
outsb
jp
mov
ljmp
rcr
push
hlt
mov
xchg
xchg
dec
aad
mov
movsb
and
in
add
call
mov
mov
outsl
lods
inc
jo
mov
fcoml
or
or
fucomip
jne
inc
inc
push
outsl
ret
xchg
mov
adc
jne
fisubs
mov
xchg
mov
testb
dec
mov
cmpsl
inc
xlat
aad
inc
add
jns
fisubs
push
and
imull
ret
mov
sbb
adc
mov
or
mov
mov
pop
outsl
addb
add
adc
nop
fcomi
daa
popa
and
test
fsubl
lret
js
imulb
fsubrs
out
inc
xor
mov
or
jno
and
sbb
pminsw
movb
sbb
in
jae
pop
jnp
sbb
jns
push
mov
mov
add
add
inc
leave
xor
fstpl
lds
pop
fstl
xchg
push
imul
cmp
das
fs
inc
int
cmp
into
ja
xchg
leave
push
lahf
dec
enter
clc
jp
cmp
test
icebp
mov
mov
xorb
push
sbb
shl
cmp
and
out
fisubrs
push
push
in
jmp
push
dec
mov
or
leave
and
hlt
push
iret
mov
push
inc
aas
neg
xor
xor
loopne
outsb
outsl
into
testl
mov
inc
dec
jle
inc
jmp
inc
push
pop
loop
mov
mov
movsl
cmc
sahf
dec
pushf
xor
loop
and
cmp
push
dec
push
mov
mov
push
repnz
ror
lret
pop
mov
pushf
stos
inc
add
push
popa
std
int3
push
jp
out
nop
push
sbb
nop
cwtl
lea
lods
loop
pop
ret
imul
into
push
bound
xchg
inc
push
jnp
mov
pop
push
repz
or
sbb
push
xlat
jp
iret
inc
insb
rcll
loopne
cmp
andb
pop
lock
imul
push
imul
add
push
and
insl
lods
lcall
int3
push
or
into
sti
out
adc
adc
pop
jg
in
mov
outsb
xor
cltd
adc
adc
pop
dec
cwtl
dec
or
clc
and
adc
dec
sarb
sahf
mov
jnp
hlt
cmpsl
in
push
pop
cmpsb
xchg
jae
lods
cmpsl
popa
gs
scas
jae
rcr
fnsave
shl
in
cmp
inc
add
push
shl
sbb
out
hlt
cli
push
test
xor
aaa
cmpsb
arpl
js
xchg
jecxz
mov
repz
sbb
iret
or
les
add
lret
mov
add
or
sbb
sbbl
fistpl
inc
push
push
pusha
pop
xchg
jo
adc
popa
into
dec
mov
je
jb
divb
xorb
jnp
js
rcr
stos
sbb
sub
xor
fcoml
in
mov
jl
aad
ret
test
movsl
cmpsl
jbe
cltd
repz
cmpb
mov
std
mul
imul
adc
cwtl
icebp
pop
and
aam
jb
and
test
mov
lds
bound
push
popa
dec
jl
xchg
push
jle
xor
ret
rcrb
mov
jecxz
and
mov
icebp
xor
jl
popf
shll
in
out
popa
mov
inc
adcl
pusha
xchg
lret
ss
test
push
aad
mov
adc
ja
push
std
hlt
mov
in
ja
movl
mov
and
sub
jmp
loopne
daa
push
xor
dec
pop
mov
testb
or
in
xchg
cmpsb
leave
jg
jmp
fstpt
sub
jl
sbb
dec
xchg
jns
push
das
pop
jle
jl
xchg
subl
nop
sub
xchg
mov
gs
rcrb
aad
mov
cwtl
in
add
inc
cmp
int
sub
popa
out
cs
xor
and
mov
xor
fldt
outsl
jns
jbe
mov
sbb
pop
orb
iret
jmp
adc
dec
loop
pop
and
push
pop
cli
jle
dec
in
gs
fmulp
out
fdivrs
adc
xchg
jl
loop
push
jmp
fstpl
push
repnz
sub
icebp
push
inc
adc
mov
popf
add
pop
adc
xor
xorb
and
mov
cs
xorl
lock
icebp
inc
cmpsb
fidivl
gs
cs
or
bnd
jp
push
lea
popa
jo
fdivs
mov
mov
dec
les
add
daa
sub
les
xchg
movsl
inc
loope
out
push
jp
in
inc
sub
sbb
or
and
daa
adc
mov
subl
jle
mov
jg
daa
mov
cmp
cltd
add
push
nop
sbbl
cltd
jo
dec
ss
enter
jns
add
add
int3
push
lods
and
shlb
lret
cmc
cmp
movsl
popa
clc
int3
mov
xor
mov
outsl
jb
and
in
sbb
shll
xor
inc
enter
sbb
cmp
sbb
or
sub
dec
add
fistps
xlat
leave
int
idivb
in
mov
test
cltd
sub
or
in
dec
sub
add
dec
bound
nop
cmp
and
mov
fbld
pop
mov
movb
mov
neg
iret
call
das
push
and
xchg
add
pop
es
push
pop
loop
and
stos
stc
mov
call
cmp
sub
push
ds
stos
out
lahf
xchg
sbb
sub
pushf
cmp
inc
add
add
mov
push
jle
xor
outsb
std
xor
mov
shrb
xchg
pop
or
adc
xor
call
ja
aaa
int
call
ret
mov
stos
sahf
hlt
sbb
push
sarb
xchg
jmp
mov
mov
out
fisubrs
cli
out
lds
pop
nop
repz
mov
cmpb
pop
mov
ljmp
test
lods
and
and
lret
push
jl
pop
cltd
sbb
dec
scas
mov
push
xor
xchg
nop
in
das
xchg
mov
lods
js
fstpt
test
aam
lret
pusha
or
filds
cli
arpl
and
mov
int
shlb
sbb
push
movsb
and
jae
hlt
imul
fcom
pop
pop
sub
dec
loope
jmp
mov
adc
cmp
cmp
inc
scas
jbe
aad
mov
lret
ljmp
fnstcw
call
push
mov
inc
loopne,pt
push
cmp
sti
push
ss
into
pusha
aam
push
pop
push
faddl
cmp
int3
test
or
popa
and
mov
sub
call
push
xchg
stos
sbb
xor
test
xor
fsub
sub
repnz
out
ss
xchg
fstps
js
jmp
fsubrs
insb
bound
push
pminub
xchg
lahf
daa
inc
push
movl
push
cmp
fcomi
cmp
bound
cmp
fsubs
cwtl
pop
cmc
mov
mov
ja
mov
js,pn
mov
inc
jb
in
icebp
sbbl
mov
pop
mov
cmp
outsl
shll
iret
add
mov
jbe
xor
mov
pop
popf
mov
sti
mov
cmp
je
mov
jbe
mov
mov
mov
mov
or
mov
mov
call
push
mov
rorl
repnz
aas
sub
mov
sub
sti
repz
or
push
jp
cmpsl
cmp
out
xchg
mov
sbb
push
pop
or
push
inc
inc
sub
jo
mov
shlb
push
and
popa
movsl
or
pusha
sbb
repnz
dec
movsb
cld
dec
jns
and
adc
fstl
lods
fsubl
jns
adc
ret
pop
jp
mov
sbb
sub
lahf
sbb
sub
lret
cmp
popf
add
xor
je
lret
dec
push
sbb
cmp
es
test
pop
and
push
xchg
das
jp
mov
outsl
mov
repz
in
xchg
push
dec
dec
pop
mov
pushl
fistl
adc
mov
loope
loopne
in
cmpsb
xchg
push
ja
push
sub
sarl
sbb
lahf
scas
aam
pushf
inc
scas
movsb
jbe
cmc
lahf
icebp
push
xchg
cmp
ljmp
cs
lcallw
inc
xchg
jns
fildll
add
lea
jmp
clc
dec
push
xchg
dec
in
loope
or
shrb
notl
ficoml
das
lock
add
sbb
and
aad
cwtl
sar
sahf
out
bound
cli
and
cmc
in
mov
xor
xchg
push
sbb
dec
in
add
inc
xchg
int
jp
in
nop
sbb
jle
ja
lea
mov
jmp
iret
jl
add
add
push
adc
popf
shll
mov
frstor
enter
cmp
pusha
jae
push
out
lds
test
push
lods
jbe
mov
jo
cmpsl
xchg
and
sbb
add
loopne
add
outsb
sbb
jl
sbbb
ja
sbb
pop
cmp
jge
pop
push
sub
cmpsb
fldt
outsb
or
adc
subl
aad
es
mov
fsts
mov
test
aas
movsb
sub
ds
add
movsl
xchg
enter
cs
ss
int
imul
shrb
cmp
mov
mov
add
mov
adc
mov
xor
or
xlat
jg
add
mov
loopne
xchg
mov
fimuls
xorb
hlt
sub
icebp
mov
call
int
sbb
subl
insl
xchg
dec
sbb
mov
les
xchg
push
push
andb
jge
inc
das
sbb
outsl
lods
rclb
sub
std
sbb
xor
sti
hlt
cmp
daa
stos
clc
cltd
iret
jnp
cmp
aam
mov
out
iret
sahf
xor
fnstenv
cmp
hlt
cmp
jecxz
test
ret
dec
mov
pop
clc
dec
hlt
andb
dec
and
xor
lcall
roll
jecxz
or
inc
shrb
push
mov
enterw
scas
sbb
push
xor
add
sub
jae
scas
mov
lea
xchg
sar
push
mov
out
pop
cmc
pop
test
pop
nop
dec
sub
add
jne
jmp
cs
in
push
in
cmpsl
xchg
push
out
fldt
sarb
adc
inc
add
xchg
jne
adc
sahf
imul
push
cmp
mov
fcoms
inc
adc
add
faddp
mov
and
add
out
sbb
movsb
pop
fsubs
test
or
xor
fwait
dec
adc
pop
xor
loop
pop
loope
loope
lret
aam
fldcw
cmc
js
repz
in
and
mov
pop
imul
adc
gs
mov
lret
add
repz
psubsb
jle
scas
mov
mov
pop
pop
cld
and
ljmp
xchg
pop
je
pop
or
incb
aad
test
mov
cmp
test
rcr
mov
mov
push
or
nop
loope
adc
ljmp
nop
inc
in
or
ja
mov
mov
pusha
out
and
ss
addr16
xorl
mov
jnp
sbb
jns
cmpxchg
leave
addb
das
jle
add
int3
mov
dec
mov
xchg
push
mov
mov
mov
push
inc
xchg
call
mov
mov
adc
or
adc
and
xor
into
test
aaa
imul
xchg
lcall
out
inc
imul
fwait
push
in
mov
push
dec
dec
mov
push
popaw
ret
into
xor
cmp
imul
adc
lds
daa
ss
std
imul
push
mov
lfs
repnz
int3
loope
call
test
scas
lcall
dec
dec
imul
and
inc
cld
cmpl
enter
push
sub
popa
dec
lret
cli
clc
dec
adc
cltd
mov
out
out
fs
fisttps
jbe
fidivrs
loope
shl
andl
nop
outsb
lahf
inc
aad
jge
out
pop
or
sarb
add
stos
cmp
fwait
add
mov
lret
xor
xchg
push
out
outsb
cmp
inc
jb
stos
scas
cmpsb
outsb
in
add
repnz
shll
in
mov
adc
es
xchg
hlt
aas
fisttps
cmpsb
fadds
fstps
xchg
pushw
push
fwait
mov
fcmovu
in
lret
bound
and
mov
fistps
cli
lcall
jp
mov
pop
add
sbb
cmp
add
aaa
sub
shl
es
xor
adc
and
dec
xor
fdivrp
pop
add
push
xchg
fldenv
movsb
mov
push
mov
inc
fucomi
sbb
or
dec
bound
in
mov
lods
lock
loop
push
mov
aad
xchg
dec
fstpl
push
outsb
pop
test
jb
push
out
mov
popa
xorl
jl
int3
stos
xchg
ss
sbb
fcompl
imull
out
stos
inc
cli
cmpsl
push
mov
push
and
or
xchg
or
mov
cmp
push
pop
xor
fwait
addr16
imulb
inc
cmp
ret
notl
cmpsl
add
fisttpll
sti
icebp
fmul
jo
ja
in
pop
xorb
outsl
test
ret
movsb
xchg
mov
lret
cmp
push
push
enter
popa
repnz
hlt
cs
mov
add
ret
sti
loopne
popf
xorl
int
mov
cltd
sbbl
ja
js
in
push
sbb
pop
movsb
push
test
ja
stos
imul
mov
adc
vmread
jne
sub
aas
aaa
mov
popa
iret
mov
xchg
xor
push
rclb
cwtl
int3
pop
hlt
aad
pop
mov
xchg
test
scas
jmp
sahf
andl
inc
jmp
fldl
lea
pop
sbbl
push
loope
push
lret
pop
mov
sub
cmp
dec
add
nop
or
mov
daa
push
test
cmpsl
je
push
inc
mov
inc
push
cmp
stos
adc
loope
dec
idivb
or
cli
stc
jne
mov
xor
decl
jle
je
mov
adc
scas
xchg
jp
inc
inc
dec
shr
fwait
xchg
mov
push
add
cmpsl
push
xchg
mov
lret
pop
pop
and
jg
jbe
and
js
push
jl
sub
pop
or
mov
gs
lret
jbe
in
test
mov
cmpsb
add
inc
and
pusha
xrelease
jo
cwtl
pop
sbb
push
outsl
outsb
movsl
xor
xor
shll
add
outsl
into
push
stos
push
mov
dec
imul
and
mov
cmp
or
pop
dec
and
or
bound
sbb
and
add
xor
mov
cmp
xor
scas
mov
test
push
cmp
lock
test
xchg
lret
pop
ss
add
loopne
jmp
push
mov
xchg
adc
cwtl
repz
pop
dec
sbb
dec
call
push
dec
pop
cltd
mov
lret
lahf
icebp
mov
xchg
xor
xchg
push
cmp
cmp
daa
rorl
loope
jb
dec
in
and
mov
fcomps
jle
mov
mov
dec
push
mov
pop
and
dec
in
aaa
icebp
out
stc
and
cmpsl
lcall
jae
inc
cmpsb
ret
stos
nop
scas
cmpsb
cs
push
sub
xchg
and
mov
cmp
add
jg
mov
fbld
pop
jne
icebp
sqrtps
clc
push
adcl
mov
fldcw
je
pop
inc
dec
mov
decl
adc
jle
les
sti
sbb
adc
in
out
mov
jmp
adc
rolb
negb
pop
enter
mov
insb
daa
gs
jne
mov
insb
aas
push
mov
adc
mov
ljmp
std
xchg
mov
dec
arpl
inc
pop
fists
aaa
rcrl
imul
outsl
lahf
inc
add
insl
inc
mov
or
push
adc
in
jae
adc
dec
pushf
lea
push
fisubl
subb
lret
jmp
scas
push
and
pushf
js
pop
sarl
ja
movsl
movsl
jne
mov
xor
sub
inc
xchg
imulb
loop
jl
sbb
or
cmc
ja
adc
sbb
icebp
fdivl
dec
lcall
pop
mov
cld
mov
jg
xor
movsl
in
push
loope
fwait
mov
stc
cmp
cmp
movsl
sbb
mov
mov
ret
xor
push
sti
xchg
adc
mov
jbe
sub
scas
cmp
mov
aaa
in
jp
subl
and
sbb
fwait
clc
add
add
lahf
test
clc
cs
and
cmp
mov
iret
sub
xorl
pop
pop
add
or
hlt
std
hlt
inc
xchg
cmp
fistps
repnz
mul
pop
xchg
stc
std
mov
je
fdivrs
movsb
sbb
jecxz
pop
insb
ss
adc
adc
jg
data16
xchg
cmp
insb
and
mov
test
cmpb
jp
and
out
xor
dec
lcall
repnz
gs
pop
mov
fxch
rorl
dec
imul
dec
sbb
cs
hlt
int
bound
out
sbb
push
iret
mov
sbb
lret
add
in
and
dec
sti
bound
orl
lret
fcompl
shl
cwtl
sahf
mov
add
insl
and
js
mov
mov
sbb
push
mov
pop
mov
pop
cmp
addr16
xor
ficoml
jge
and
out
out
call
mov
push
lahf
fstl
xchg
dec
dec
jecxz
faddl
subl
jo
and
pop
inc
scas
mov
nop
lods
lcall
jge
test
js
sbb
mov
inc
outsb
mov
push
leave
jb
push
insb
jp
adc
xlat
jecxz
xchg
cmp
sbb
das
aad
mov
clc
jb
clc
fisttpl
repz
pop
mov
fwait
jp
pushf
insb
movsl
gs
push
in
push
popa
daa
sbb
sub
or
xor
push
fidivrl
xlat
rorb
in
pusha
ds
cmp
pop
xchg
mov
sub
scas
dec
std
adc
pop
test
ljmp
sti
sbb
shll
mov
ret
in
repnz
jae
push
or
mov
lcall
sbbl
es
adc
inc
and
sub
mov
push
push
scas
iret
or
add
or
fimull
mov
loop
sti
in
lret
cmp
cltd
call
sti
stos
lds
and
mov
xor
mov
xor
pop
adc
sti
sbb
mov
popa
mov
dec
test
mov
sbb
sbb
add
rcll
outsl
mov
jg
push
ss
jp
push
push
cmpsb
out
and
adc
movsl
mov
dec
fcmovnbe
or
pop
cmp
and
adc
stc
out
fs
js
ret
pop
sbb
push
sub
sti
xor
xchg
or
scas
dec
dec
in
shlb
cld
mov
inc
push
sub
sub
xchg
sub
sub
cmpsl
rclb
test
int
call
shl
addr16
jbe
enter
mov
addb
nop
xor
hlt
jne
xchg
cwtl
and
aam
sbb
call
clc
inc
cmp
into
push
aas
xor
mov
loopne
imulb
std
and
stos
outsl
jo
sbb
mov
xor
cmp
movb
or
loope
addr16
mov
dec
and
sbb
push
in
pop
or
lea
xor
or
mov
std
enter
sti
push
mov
cli
stc
test
popa
vprotq
push
mov
call
mov
movsb
add
and
inc
cltd
loopne
and
cmp
mov
inc
xor
scas
mov
inc
and
fstl
jge
inc
in
addr16
push
rcr
sbb
xor
xchg
test
sub
hlt
jae
icebp
ja
jp
push
ljmp
ret
ror
sub
and
stos
mov
aaa
std
imul
mov
flds
mov
xchg
stos
subl
aam
mov
fs
or
popa
xchg
cmp
out
xor
roll
bound
fwait
push
xchg
gs
mov
ss
nop
add
pop
repnz
setae
fiaddl
sbb
loopne
adc
dec
movsb
fidivl
shlb
push
cld
dec
add
jne
pop
mov
ret
adc
cld
gs
inc
cwtl
popa
std
cld
pop
push
insb
pop
push
xchg
xchg
jno
push
incb
jle
loope
outsb
inc
and
mov
pop
dec
cmp
insb
cld
lret
mov
mov
xor
in
lea
jl
stc
fucomi
push
int3
fistps
lods
lret
jg
outsl
dec
bound
jnp
pop
pop
mov
jp
add
inc
fistpl
insl
out
xor
adc
ja
mov
add
mov
daa
daa
add
stos
adc
add
mov
imul
mov
addr16
mov
sub
mov
xchg
scas
pop
xor
xchg
ds
mov
sub
andl
xor
pop
out
push
inc
bound
push
xor
or
mov
add
insl
repz
adc
mov
fs
sbbb
jge
fwait
loopne
fsubs
iret
add
inc
cmp
cmp
mov
add
xchg
sbb
add
xor
into
scas
in
sub
jne
ds
les
in
mov
adc
test
mov
int
mov
js
es
jmp
pop
jbe
insb
xor
add
ret
shlb
movsl
fidivs
dec
jnp
adc
fwait
jb
jae
scas
sub
sub
ljmp
mov
lret
and
pushf
sar
insb
xor
nop
cmpsl
adc
or
dec
mov
or
loopne
std
xlat
rolb
out
jns
cmp
push
fcmovne
pusha
and
hlt
ret
dec
jecxz
adc
xchg
sarb
call
sub
jmp
xchg
and
popa
sub
les
out
xchg
and
inc
out
jge
xor
jne
dec
les
mov
test
movl
cmp
or
nop
nop
js
and
popa
out
je
jge
jg
add
ror
pop
test
insl
notl
mov
stos
ret
fs
in
add
out
andl
xchg
movsb
mov
pop
add
lods
xchg
daa
repz
inc
inc
cmpsl
push
jnp
jnp
mov
inc
jg
dec
sbb
nop
dec
negb
lret
dec
pushf
lea
add
mov
adc
jns
lock
lfs
std
aas
sub
jge
sbbl
and
xchg
jbe
xchg
jbe
hlt
adc
push
add
lock
addl
ja
mov
xchg
mov
dec
jmp
stc
cs
cmpsb
inc
pop
loopne
xor
ret
dec
adc
gs
into
jb
fs
in
adc
dec
or
shrl
test
dec
fs
pop
fs
push
cmpsb
jnp
jle
bound
or
imul
cli
in
loop
sti
cwtl
stos
xchg
repnz
fwait
xchg
mulb
fimull
mov
mov
dec
cltd
in
notb
fildl
xchg
cs
adc
out
cmp
pop
fldl
loop
pop
lods
out
cmc
arpl
fwait
sbb
push
ljmp
icebp
pop
dec
push
pushl
loope
shll
sub
add
insl
cmp
adc
xchg
nop
lea
adc
cmp
sti
dec
xchg
shld
scas
sbb
push
mov
pop
bound
std
jne
stc
sub
jb
add
ds
es
enter
outsb
nop
lds
mov
add
jge
jecxz
jo
pop
jge
test
inc
jbe
xor
call
ljmp
push
or
sub
cmp
iret
aam
shlb
gs
icebp
test
pushf
and
mov
pop
lret
or
mov
xlat
and
test
mov
dec
mov
push
nop
movsb
push
std
mov
xor
lahf
ljmp
and
int
cli
stos
mov
iret
pop
mov
stos
sub
movsb
xchg
gs
stos
inc
nop
jecxz
ljmp
addr16
aas
mov
sub
xchg
repz
in
shr
add
push
pop
cmp
fsubrp
and
daa
lahf
les
and
and
cmp
mov
cmp
sub
call
cmp
xchg
aas
push
mov
jecxz
dec
imul
loope
int3
mov
xorb
cld
int3
sub
mov
lahf
fstpl
inc
push
inc
adc
xor
jmp
mov
adc
dec
shr
xchg
mov
pushf
fidivs
mov
xlat
gs
ficomps
int3
aam
orb
into
addr16
pushf
or
pusha
cmpl
mov
fnsave
push
stc
xchg
nop
cmc
daa
fsubrs
stos
icebp
fdivrs
ret
adc
int3
ficomps
sbb
fldcw
jb
decb
bound
ds
fadd
popa
sub
and
push
sbb
imulb
xchg
sub
aad
xchg
sub
jl
pop
inc
inc
jnp
ret
in
jbe
mov
cmp
adc
clc
aam
inc
pop
out
fnstenv
gs
push
aad
cmp
into
mov
sbb
out
mul
dec
xor
and
add
dec
mov
je
daa
cmpsl
pop
out
movlps
divl
jmp
call
aad
pop
xlat
sub
mov
pop
xor
and
inc
sahf
in
adcl
xor
stc
lret
ret
mov
pop
hlt
pop
jne
sub
icebp
and
mov
fisttps
jg
repz
jbe
pop
inc
lods
repnz
xchg
dec
fsubrs
je
out
out
xor
out
das
sbb
add
cmpsl
dec
js
jecxz
out
sub
jb
xchg
push
loop
outsb
ljmp
cmpb
xchg
inc
je
lcall
ret
add
enter
insb
and
mov
xchg
xchg
add
pusha
movsl
pop
mov
iret
mov
rcll
inc
push
in
cmc
scas
inc
xchg
mov
add
in
cs
lcall
mov
jge
xor
ljmp
xchg
leave
mov
popa
loope
adc
sub
frstor
or
lock
lret
mov
lds
imul
mov
inc
js
jnp
pop
xchg
jl
and
inc
rorb
jnp
add
in
hlt
in
dec
dec
hlt
and
nop
xor
stos
into
push
add
xchg
xor
mov
std
loopne
and
mov
je
std
in
into
add
or
das
lock
dec
pop
sub
mov
mov
sub
cmp
cmp
sbb
aaa
mov
inc
and
mov
dec
lea
lcall
dec
xor
in
popa
push
dec
inc
loope
shll
in
clc
movsl
stc
add
jmp
jg
daa
imul
pop
pop
dec
int3
daa
pop
and
pushf
or
cs
pop
lds
sub
cld
cmp
xor
push
cs
test
push
call
fiaddl
lcall
pop
inc
inc
ljmp
cltd
xchg
xor
mov
shlb
xlat
popw
sub
sarb
xor
fistl
xchg
xchg
out
fbld
mov
sbb
push
lret
xchg
mov
popa
pop
in
sbb
or
outsl
sbb
adc
sbb
or
js
push
pop
add
jb
lcall
sti
mov
fstpl
out
ja
push
or
mov
pop
popf
lahf
std
xor
test
push
mov
icebp
in
and
and
popa
out
add
fstpl
inc
push
mov
or
xchg
or
xchg
arpl
xor
lea
xor
setae
aaa
mov
inc
push
or
dec
rcrb
ret
cmpsl
jp
xchg
push
sub
jno
roll
daa
push
out
scas
inc
or
subl
pop
sub
and
jmp
adc
xchg
jle
inc
out
mov
push
loop
mov
xchg
push
pop
or
scas
sbb
fistpll
sub
push
ss
inc
mov
xchg
mov
mov
mov
shlb
adc
mov
stos
movsb
sub
scas
fidivs
adc
mov
ljmp
fsub
or
popa
in
push
mov
ljmp
dec
fs
lahf
cmpsl
paddd
out
frstor
mov
xchg
mov
pop
pop
cmpsb
roll
fbstp
and
push
jl
pop
add
popf
mov
inc
cld
lea
cmpsb
mov
adc
popf
in
xor
fidivrl
push
or
inc
cmp
push
xor
fstpl
jae
pop
adc
jge
mov
pushf
cmpsb
test
fucomp
fistpl
sub
mov
sbb
push
fidivl
lea
xchg
sub
iret
pop
add
pop
sti
mov
and
and
dec
or
cmp
popa
cmp
lahf
gs
gs
mov
out
arpl
outsb
cmp
idiv
int3
push
imulb
lds
cld
mov
and
mov
jo
jo
sbb
iret
sbb
fnstenv
in
ss
lea
clc
or
in
add
mov
shrl
repnz
xchg
cwtl
mov
xchg
sub
sarl
test
sub
data16
outsl
out
sub
inc
loop
mov
cmp
arpl
dec
xchg
mov
pop
rolb
into
aad
mov
xchg
xor
and
mov
jmp
ja
cmpsl
int3
mov
sbb
fsubrp
lock
in
pusha
stc
mov
adc
ljmp
testb
adc
cmpb
into
xchg
dec
int3
stos
jge
cli
stc
sub
mov
andl
adc
pop
pop
dec
pop
out
cmpsb
pop
inc
mov
inc
out
xchg
call
adc
fiadds
repnz
shl
mov
jns
sub
xor
dec
cmpb
inc
sbb
lock
incl
mov
popf
inc
outsl
pop
and
ret
pushf
and
out
fwait
adc
mov
sub
aad
hlt
push
xor
push
lods
mov
jp
sub
int
xchg
xchg
test
push
xchg
add
xor
test
adc
or
mov
sahf
jmp
sahf
push
scas
dec
in
fistpl
test
fiadds
fs
lods
mov
loop
or
or
cmc
lahf
lods
mov
sub
fcmovb
jne
mov
push
mov
les
nop
mov
pop
dec
mov
mov
add
mov
mov
mov
subb
add
out
or
mov
pop
jp
test
push
xchg
aas
pop
adc
insb
push
push
pop
test
gs
add
lret
sahf
push
dec
push
cmp
or
add
sub
sahf
dec
stos
xchg
xorl
mov
fiadds
cld
sbb
and
pop
inc
mov
js
nop
ds
fsubp
jle
xor
sub
adc
sub
scas
mov
call
inc
cmp
test
dec
in
mov
lock
fsubrs
sbb
stc
sub
pop
add
pop
push
mov
hlt
mov
shrb
jne
and
notb
cmp
lds
pop
std
sbb
jno
or
ffree
imul
xchg
push
xchg
inc
aaa
cmp
jne
mov
test
jmp
lods
fildll
lahf
cli
mov
xchg
popl
ret
or
loop
inc
mov
mov
push
and
and
pop
mov
rolb
pushw
loop
push
push
sub
xchg
mov
adc
test
fidivrl
enter
lahf
outsb
cmp
loop
mov
jmp
adc
daa
cmpsb
ficomps
inc
ret
lods
mov
pushf
inc
nop
pcmpgtw
imul
call
mov
jmp
jle
sbb
outsb
mov
xchg
dec
jmp
and
mov
mov
push
inc
and
jno
mov
xchg
ret
aad
push
xchg
add
test
mov
fsubrs
loope
dec
and
mull
sbb
mov
loop
movsl
push
shlb
pop
or
ds
mov
dec
orl
pop
std
es
out
xor
fldenv
in
xchg
mov
or
popf
mov
jo
ret
pusha
xchg
xchg
or
outsl
lea
test
ret
mov
xchg
in
mov
fcomip
dec
clc
decb
pop
mov
xchg
and
add
push
test
lret
fdivs
xchg
jge
nop
mov
int3
mull
out
lea
mov
pop
jo
pop
lock
mov
xorb
cmp
fsubl
aad
mov
test
jno
push
mov
dec
jp
push
cmp
pushf
ds
push
shll
cwtl
or
and
adc
lock
jmp
imul
add
mov
pop
mov
jg
dec
ret
loop
push
xlat
ljmp
popa
int
and
pop
test
into
sti
outsl
xor
outsl
mov
or
add
jl
push
lret
push
lret
fldenv
lods
ja
std
push
pop
pusha
dec
js
adc
pop
in
inc
xchg
jae
push
adc
xchg
mov
test
fucomp
dec
jg
leave
dec
cmp
or
add
or
hlt
dec
incb
cmpsl
sahf
sbbb
xorl
jg
cmp
mov
fsubrs
mov
pop
and
fmul
inc
sub
dec
jg
bound
xor
stos
adc
lret
out
sbb
cmpsl
adc
or
cmp
sbb
ss
je
push
lahf
and
adc
xchg
sub
inc
lret
inc
or
repz
add
push
adc
sbb
xchg
dec
inc
or
mov
xor
add
sub
loope
arpl
mov
mov
adc
fdivrl
imul
jns
pop
ljmp
pop
mov
in
pop
jo
insb
cltd
push
out
je
subl
lods
cmp
das
add
cmpsb
adc
sbb
stc
sub
pusha
or
pop
sub
addr16
bound
push
and
nop
adc
dec
negl
dec
sti
push
scas
or
add
and
pop
cwtl
into
add
jle
mov
out
jp
xchg
ds
div
movsl
push
fsubs
and
mov
je
repz
or
ljmp
jbe
or
sub
stos
clc
iret
push
bound
xor
add
cmp
cmc
mov
test
outsl
lods
xor
imul
call
and
mov
popa
movsl
cmpsb
fnstcw
pop
mov
jo
xlat
adc
fadds
cmp
dec
jmp
and
cmovno
std
mov
call
jns
into
icebp
pop
inc
mov
jns
lea
xchg
lahf
push
dec
stos
fbld
pushf
mov
mov
fidivrs
mov
push
push
fisubl
mov
loope
std
add
pop
insl
sbb
pop
pop
cmp
lret
adc
rolb
pop
or
gs
ds
test
inc
lock
dec
lea
mov
push
in
dec
ja
jmp
cs
std
cmp
out
test
xchg
pop
lahf
add
fdivs
movsb
dec
dec
mov
xchg
mov
std
dec
and
stos
mov
jne
xchg
xchg
mov
loope
ffree
push
jno
jbe
nop
xchg
or
add
push
xchg
cmp
fistl
pop
and
sarl
add
sub
lahf
shlb
movsb
outsb
cwtl
add
lock
xchg
enter
push
push
in
pop
sbb
xorl
lds
dec
test
lods
pushf
add
sbb
cwtl
in
faddl
lds
lahf
add
mov
add
loopne
dec
add
or
dec
loop
inc
pop
or
leave
push
insl
lahf
es
aam
stc
push
push
sbb
cmp
jns
jg
push
mov
iret
ds
mov
mov
xor
popa
pop
into
push
inc
inc
scas
dec
ljmp
jle
fisubrl
movsl
adc
cmpsl
jne
imul
fs
sub
mov
mov
and
fcmovnb
nop
and
outsl
sub
push
mov
push
ja
push
call
mov
pop
and
shlb
das
clc
pop
mov
fcoms
and
mov
push
lcall
pop
ret
jmp
repnz
test
sub
xchg
shlb
out
sbb
addr16
lock
xor
popa
ds
fwait
xchg
xchg
test
es
pop
push
push
popa
subb
xchg
int
push
xchg
sub
push
jns
mov
xor
fistl
mov
sahf
xchg
add
xor
cmp
mov
repnz
xlat
mov
jnp
cmp
test
cltd
shll
cmp
push
out
icebp
pusha
jo
mul
fdecstp
sahf
or
imul
rcl
loopne
movaps
mov
aad
lods
pop
orl
int3
mov
int
std
pop
sbb
cmp
add
mov
xor
push
scas
mov
mov
push
test
mov
rcl
cmc
sbb
jmp
xor
negl
addl
cli
lods
inc
mov
hlt
and
lods
aad
mov
jae
lea
xor
ret
sbbl
pop
and
inc
lret
gs
dec
bound
lods
inc
es
iret
pop
xchg
mov
cltd
or
cmp
cltd
sub
jae
subb
fnstcw
cld
jmp
inc
and
dec
ret
inc
out
test
test
pop
push
out
inc
mov
jmp
adc
mov
pop
and
sbb
in
add
dec
pusha
ds
sahf
xchg
push
xchg
scas
in
cmp
mov
add
inc
push
push
int3
in
inc
icebp
mov
data16
xchg
jmp
test
pusha
clc
sub
repz
jb
int3
fbstp
fcompl
rcl
add
outsl
jb
lods
imul
nop
andl
subl
pushf
pop
cmpsb
popf
inc
jp
mov
jle
cmp
jnp
sub
pop
cmp
leave
out
outsb
lret
adc
into
ss
cltd
add
pop
fisttpl
addb
pop
inc
dec
cmp
sub
cmc
cmp
loop
jns
push
pushf
popf
mov
in
pushf
cmp
jp
xchg
aam
aam
movsl
and
popf
jg
and
or
sub
shrb
and
test
out
or
sahf
or
add
loope
xchg
mov
cmp
fsubs
cltd
fs
and
and
or
nop
adc
or
push
lock
and
insl
dec
and
incb
dec
mov
xchg
dec
test
xlat
sub
sub
insl
lods
jg
lret
bound
push
push
int3
inc
insl
sbb
push
mov
les
sahf
and
test
fwait
xchg
push
dec
pop
jg
cmpsl
test
push
mov
movsl
lret
cmp
pop
pusha
ret
and
push
dec
push
mov
cmp
repz
ds
ret
test
mov
lcall
int
ret
pop
mov
mov
stos
daa
sub
xchg
int
mov
hlt
inc
mov
sbb
in
and
add
inc
sbb
fstpt
or
xchg
xchg
jae
lock
mov
decl
lds
jle
lret
lods
cwtl
call
sub
pop
cmpsb
fsubrs
mov
js
out
notl
lcall
mov
add
mov
pop
aas
pop
mov
push
mov
pop
pop
add
push
push
xchg
inc
fnstenv
in
push
mov
add
repz
rorb
cmp
aaa
repnz
pop
in
cltd
mov
fmull
pop
movsl
and
xor
pop
mov
imul
sub
sub
or
lods
imul
les
xor
sub
enter
ror
test
xor
jl
push
add
es
mov
inc
nop
dec
outsb
lret
add
outsl
cmpsb
addr16
shlb
out
ficoms
sahf
test
xor
sbb
mov
je
iret
dec
push
or
jae
in
mov
add
clc
lea
sbb
dec
push
push
mov
jl
jmp
into
jb
xor
jbe
mov
sub
clc
sub
imulb
fisttps
adc
xor
xchg
repnz
adc
jl
pop
sbb
xchg
cmp
sub
adc
cwtl
mov
jle
imul
xor
fnstsw
mov
fadds
clc
repz
sahf
mov
lret
cmpsb
push
cld
aam
cltd
repnz
negl
inc
aaa
scas
inc
adc
sti
pop
push
xor
mov
mov
jne
jns
cmp
cmp
arpl
das
lock
popf
cltd
cmp
incb
jns,pt
push
xchg
xchg
jmp
jp
es
int3
popa
outsb
pop
mov
popa
push
arpl
sbb
jecxz
pop
jecxz
cs
std
xchg
jbe
pcmpgtb
stos
sbbb
lea
enter
out
mov
fwait
push
adc
pop
mov
test
cmp
lock
inc
gs
out
inc
repz
in
lock
xchg
arpl
push
popf
outsl
shrb
ja
push
test
mov
jp
inc
jno
ds
jp
mov
imul
mov
sbb
pop
div
inc
lret
inc
aas
jo
and
mov
xchg
lods
clc
mov
gs
sub
stc
mov
and
push
cmp
stc
scas
lods
fcmovne
mov
ss
or
mov
dec
icebp
into
icebp
xchg
lods
xchg
fists
or
icebp
ljmp
cwtl
dec
stos
push
mov
mull
ret
adc
addr16
cltd
jmp
ds
xor
fmuls
mov
cmp
popa
jge
test
xor
sahf
dec
push
test
ss
or
adc
ficompl
mov
pop
xchg
mov
inc
jp
xorl
push
cmpsl
sub
mov
jge
cmp
mov
jns
add
mov
mov
loopne
push
sub
sar
and
fistl
enter
add
jo
int3
adc
rclb
or
add
aam
dec
sub
in
xchg
xor
out
push
psllw
cli
mov
lret
xchg
mov
lcall
seto
insl
sbb
jb
cmp
xchg
xlat
inc
xchg
jge
lods
insb
cmp
add
or
xor
dec
adc
in
mov
push
push
lahf
insb
add
cs
jmp
in
push
loope
jo
call
gs
popf
xor
loop
xchg
fildll
fisubs
sbb
xor
push
test
adc
hlt
xlat
mov
roll
test
cmp
divb
push
mov
dec
ficompl
pusha
fmuls
mov
ds
jp
mov
loopne
push
sbb
jb
std
pop
mov
roll
sub
jns
fimuls
and
test
mov
mov
push
cmp
and
pop
xchg
push
fsubl
outsb
pop
icebp
sbb
adc
pop
fcomps
inc
insb
and
push
and
pop
mov
push
lds
aad
pop
xor
scas
and
fildl
jb
lahf
xchg
push
jnp
sbb
les
lods
add
aad
jae
sbb
jnp
dec
pop
int
dec
mov
scas
je
jle
fs
inc
sub
xor
jl
pop
popf
sub
sti
nop
push
sbb
jg,pt
mov
mov
dec
and
sbb
mov
add
sbb
dec
mov
cmpsl
add
int
sbb
push
cld
ds
add
dec
shrl
xor
montmul
cmpsb
inc
iret
outsb
cmc
and
inc
pop
cli
xchg
fidivrl
ljmp
loope
pop
test
adc
pushf
rcll
jbe
outsl
aas
mov
pop
scas
lds
cmpsb
mov
jp
lods
leave
lods
lods
cmpsb
pop
out
inc
icebp
movsl
sarl
sahf
and
inc
not
pop
testb
sbb
or
xor
std
sbb
imul
or
lret
or
jno
sbb
mov
jl
or
lods
pop
mov
cmp
or
test
xor
and
dec
gs
pushf
cmp
adc
imull
scas
cmc
xor
inc
mov
sbb
das
push
pop
sbb
dec
push
push
add
dec
test
dec
rep
push
stos
or
out
mov
icebp
xchg
aam
popf
sahf
jp
enter
mov
insl
mov
bound
jp
int
rclb
aaa
jns
sbb
dec
scas
mov
push
pop
imul
aam
mov
and
out
int3
fcomps
ljmp
cmp
dec
into
addr16
jmp
in
and
orb
dec
test
stos
rep
mov
sbb
mov
fcompl
call
je
lock
mov
and
ficoml
adc
push
mov
mov
adc
ret
mov
lds
out
dec
repnz
stos
cmc
repz
je
push
jo,pn
jae
mov
xchg
mov
sarl
fldl
gs
mov
pop
gs
jae
lret
mov
cmpsb
repz
mov
mov
push
push
arpl
pop
xor
int3
in
mov
sbbb
fsubrs
add
or
test
and
repnz
jl
push
cmp
imul
in
adc
mov
mov
cwtl
sbbb
insb
add
cmp
add
pop
or
sub
in
rcrb
sbb
loope
gs
inc
push
push
push
clc
inc
xchg
inc
cmp
aam
and
scas
dec
outsl
fisttpll
jle
pop
shl
push
rcrl
xchg
adc
out
add
call
add
test
mov
cmp
add
or
je
bound
xor
mov
out
pop
shl
adc
shlb
inc
nop
lahf
and
call
aam
mov
repz
mov
addr16
rorl
mov
loopne
mov
cmp
push
inc
adc
ljmp
mov
movsb
and
xor
xor
mov
lret
xlat
inc
in
clc
scas
into
ss
js
dec
push
pop
adc
loope
das
sbb
mov
cmc
test
dec
jg
sub
filds
and
testl
and
popa
xchg
lahf
mov
sbb
push
cmp
rolb
out
popa
sub
test
and
adc
mov
scas
sbb
mov
add
inc
mov
push
lock
mov
je
and
cmp
sub
cli
xchg
mov
aas
cmpsb
push
lods
je
or
inc
testl
xor
jne
testb
dec
xor
stos
jecxz
outsl
fisttps
add
sahf
jge
sbb
arpl
add
dec
sub
sahf
xor
nop
out
mov
pop
push
clc
push
cs
aad
adc
push
imul
pop
mov
push
dec
stos
adc
int
out
lods
arpl
pop
sub
adc
addr16
outsb
jae
ja
adc
pusha
or
sub
adc
cmpsb
push
data16
clc
mov
testb
es
sub
sbb
jbe
enter
pusha
dec
and
incl
les
dec
subb
loop
mov
push
gs
fbld
pop
ljmp
aam
fcoml
add
xor
sub
or
lahf
fnstsw
and
leave
jl
mov
and
cmp
daa
push
or
inc
rcll
dec
hlt
cltd
jp
and
inc
inc
push
loop
enterw
les
sbb
stos
loop
leave
add
outsl
xchg
xor
adc
cmc
add
jp
dec
ret
orb
and
jbe
pop
js
mov
mov
cwtl
add
fiaddl
mov
in
cmp
cwtl
jp
xchg
jp
iret
cmp
rcll
sub
mov
jb
adc
lret
xchg
arpl
mov
je
hlt
dec
push
inc
or
add
jo
cmpsb
mov
pop
je
ljmp
dec
inc
mull
leave
lock
push
mov
push
push
xor
mov
xor
push
jb
add
nop
test
fcmove
inc
loopne
out
inc
sbb
loop
sbb
cmp
loopne
lret
dec
inc
inc
or
xchg
jg
test
ss
xchg
pop
xchg
xor
stc
sbb
jmp
into
cwtl
mov
jo
fisubl
and
testb
lret
and
cmc
cmp
add
add
xchg
addr16
repz
icebp
dec
iret
hlt
daa
shll
nop
xchg
iret
mov
lret
rorb
stos
stos
push
lret
xchg
jle
xchg
pop
rcrl
fstpl
push
inc
push
les
push
xchg
stos
dec
adc
fstpl
add
inc
test
mov
push
push
pop
jp
sub
adc
add
mov
mov
sub
pop
dec
mov
aam
in
pop
xor
mov
arpl
mul
jbe
jg
loope
daa
dec
dec
mov
test
sbb
sbb
or
push
add
mov
xlat
lahf
add
adc
mov
shlb
mov
push
sbb
sub
fisttpll
lahf
xlat
push
pop
lds
test
xchg
jae
fcmovb
push
cmc
dec
jae
into
cmp
mov
dec
add
inc
dec
call
rcrb
fcomps
xchg
cmc
shlb
call
adc
fsubrl
outsl
xor
leave
loop
cmp
mov
mov
aad
xchg
xor
call
repnz
jo
jg
lret
outsb
arpl
add
in
xor
rorl
jp
psubusw
ljmp
mov
shlb
mov
outsl
cmp
jg
xor
lods
xchg
and
lods
cmp
dec
adc
mov
xchg
js
pop
push
fisttps
addr16
inc
movsb
or
sbb
mov
fdivrs
pop
push
fadds
adc
cmp
inc
sbb
into
movsb
push
leave
push
sbb
xchg
ss
ja
sti
dec
mov
xchg
xlat
cwtl
sub
sahf
jo
push
mov
pop
dec
adc
push
ret
xor
fisubl
imul
repz
loopne
ret
push
pop
xchg
pushf
push
fsubrl
sti
stc
sarl
ror
inc
adc
movsb
xchg
out
bound
cld
push
cltd
dec
nop
pop
adc
push
mov
push
arpl
cmp
repz
addl
loope
mov
scas
test
add
movsb
lods
iret
inc
sub
push
arpl
push
in
std
in
and
adc
loopne
scas
dec
stc
movsl
inc
loop
rcrb
ja
fistl
test
nop
daa
xchg
adc
pop
push
sbb
pop
mov
pop
mov
aaa
pop
hlt
jle
push
push
cmp
inc
fstl
pusha
or
jb
jp
clc
stc
jle
fisttpll
sbb
js
scas
mov
loop
push
inc
push
jo
inc
add
fdivs
inc
mov
or
std
fistl
xlat
mov
mov
cltd
cmpsb
loop
shll
stos
mov
out
lods
outsb
icebp
outsb
cmpsl
dec
mov
out
xchg
or
bound
icebp
inc
mov
sbb
add
jg
loop
xchg
fs
dec
in
mov
mov
adc
push
mov
and
aad
inc
xor
scas
xchg
dec
lock
and
and
ds
jb
movsb
negl
add
pop
jmp
inc
adc
int
mov
aaa
bndldx
test
bound
sub
mov
xor
adc
mov
pop
out
call
cltd
mov
rcll
dec
sbb
mov
sarl
jo
cmpsb
je
mov
sti
add
stc
sbb
sub
cmpsl
addr16
test
out
insb
leave
dec
nop
movsb
cmp
fsubrs
adc
rcrb
nop
inc
cltd
ret
xor
bound
hlt
dec
push
aas
mov
aad
out
lret
js
int3
fidivs
mov
mov
aam
pop
fcmovne
nop
lahf
sub
xor
int3
dec
jmp
pop
mov
subl
dec
inc
test
xchg
jbe
scas
jg
addb
sbbl
fldl
jge
xchg
mov
lock
sbb
shll
mov
dec
add
xchg
or
pop
bound
fcmovu
jge
shll
xchg
push
push
loop
mov
cmp
cbtw
movsl
add
lods
movsb
test
cld
dec
adc
test
cmp
mov
mov
lods
roll
push
add
push
adc
xor
fcom
or
sub
test
mov
mov
adc
adc
jp
cs
sbb
insl
decb
inc
lea
popa
lret
cmp
xchg
push
cmpsl
inc
sub
mov
adc
loopne
loopne
cmp
cwtd
mov
mov
lock
sti
push
lea
cwtl
fsubp
hlt
std
into
and
sub
jmp
cmp
dec
dec
push
add
lods
ds
in
pop
aaa
subl
xchg
cmp
add
sub
imul
push
int
xor
inc
aam
pop
jnp
and
xor
test
and
jmp
jle
jne
mov
inc
aaa
add
ret
mov
stos
mov
lods
cmp
jne
pop
outsb
mov
jl
mov
sub
les
sub
xchg
notb
push
inc
mov
and
repz
inc
xchg
orb
stos
faddl
jmp
dec
fstpt
lods
in
add
sbb
lods
sbb
stos
ss
inc
pop
sbb
sub
pop
inc
repz
push
xchg
aaa
inc
add
idivl
mov
push
das
add
pop
cli
mov
fdivrs
jae
pop
aad
mov
or
je
out
sub
bswap
jne
in
push
mov
psraw
add
insb
cld
lock
jg
test
leave
adc
xchg
push
lret
insb
add
mov
les
es
xchg
jge,pt
mov
rorb
sub
repnz
dec
push
adcl
out
pop
push
mov
mov
mov
fstps
stos
or
aas
add
je
out
pop
cmp
xchg
push
ljmp
xchg
and
andl
xor
lods
insb
rol
divl
daa
inc
push
mov
add
enter
fwait
aam
push
ret
pop
sbb
lods
xchg
int3
mov
pusha
scas
mov
cmc
mov
and
push
insb
dec
outsb
aam
bound
mov
inc
cmp
xor
jbe
jnp
push
jg
lds
or
rcrb
push
es
das
adc
push
cs
shrb
pop
cmc
push
xchg
iret
stos
and
xchg
mov
cld
movl
testb
int3
cmpsl
aas
push
test
push
add
aam
lret
and
outsb
sbb
adc
or
aam
subl
push
inc
roll
push
pshufw
scas
push
mov
pusha
es
repz
rorb
xor
and
sbbl
jmp
mov
adc
jb
and
push
adc
xor
jp
test
mov
cmpl
sub
pusha
and
repnz
jb
xlat
orl
fs
mov
jg
pop
mov
lods
mov
jb
outsb
lds
popl
mov
jmp
ror
cmp
sub
dec
xor
ds
jae
icebp
out
fs
jg
fwait
or
cld
jge
push
pop
and
jl
and
mov
lods
and
popa
xchg
jo
cmp
jno
lret
loopne
lds
aas
js
and
push
out
mov
xchg
cmp
xor
jg
dec
mov
and
pop
pop
mov
aaa
push
xchg
mov
sbb
sarl
or
inc
pop
dec
scas
xor
popf
inc
cltd
sbb
jb
push
xlat
inc
outsl
popa
adcl
jle
push
popa
daa
test
imul
pop
push
push
lock
addl
aam
es
insl
push
out
int3
and
leave
pop
jae
rcl
cmpl
sub
sbb
mov
lret
repz
pop
jne
or
mov
xchg
xchg
mov
push
clc
outsb
aas
test
jmp
movsl
cld
pop
mov
daa
sub
pop
fidivs
jbe
movaps
cwtl
inc
sbb
inc
js
mov
out
mov
test
fisttps
mov
mov
add
inc
orl
lds
and
popf
jecxz
and
fs
shlb
jb
sub
dec
call
cmc
inc
push
jecxz
scas
mov
cmpsb
add
push
pop
test
sub
mov
pop
cmp
xchg
dec
dec
lcall
and
inc
fbld
dec
pop
addr16
jo
je
mov
inc
mov
push
outsl
jae
fcoms
xchg
in
inc
adc
insl
or
pop
repz
mov
inc
mov
scas
jo
hlt
pop
and
test
js
fimuls
or
add
mov
sbb
sahf
orb
aad
addl
mov
loop
roll
ret
or
xchg
or
jmp
fwait
pop
and
mov
sbb
mov
inc
jne
leave
scas
mov
sti
mov
inc
and
lcall
mov
cmp
push
pop
fwait
daa
test
mov
mov
cmpsb
mov
arpl
cmp
mov
repz
xchg
icebp
test
pop
jle
jns
daa
es
jge
mov
sbb
sbb
mov
and
addr16
stos
call
pop
xor
imul
je
sahf
aaa
mov
push
mov
je
xchg
into
add
add
je
push
xor
jno
add
xchg
inc
shlb
sahf
fcmovnb
push
pop
cmp
cwtl
fcomip
mov
fists
gs
jo
aas
testb
lds
xchg
or
mov
inc
dec
sbb
dec
mov
and
mov
stos
adc
pop
bound
xchg
xchg
stc
iret
lock
and
mov
cmp
imul
in
push
sub
fists
xchg
or
movsb
pop
jb
loopne
pop
mov
sbb
cwtl
xor
xchg
inc
xor
fiadds
mov
xor
push
loope
jne
mov
int
inc
inc
test
fucomi
mov
adc
ret
in
inc
xor
mov
inc
mov
pop
or
insl
mov
fwait
or
ficompl
out
pop
inc
iret
inc
in
mov
mov
out
shrb
nop
mov
pop
das
mov
or
loopne
pop
arpl
cwtl
dec
mov
arpl
cmp
and
cld
shl
enter
and
push
int3
jno
shrb
adc
push
mov
mov
loope
cld
movsl
sbb
add
ja
xor
cli
dec
push
inc
mov
pop
out
or
cmp
enter
fadds
mov
ja
outsb
dec
dec
or
fadd
lds
fwait
cmp
lret
push
sahf
cmp
cmpsl
xlat
mov
lods
mov
mov
add
jp
sub
push
jb
or
push
jecxz
dec
les
cwtl
scas
and
jmp
das
xchg
mov
add
sbb
outsl
xor
rcrb
or
lea
or
nop
push
jp
popl
roll
stc
out
push
sahf
pop
das
sbb
cltd
or
addr16
cmp
or
lcall
in
test
lahf
mov
xor
andl
or
xchg
dec
pop
aam
cmp
ss
fcompl
sbb
jne
sub
ss
pusha
push
aad
test
mov
mov
jmp
test
push
mov
inc
fdivl
add
negl
xchg
lock
mov
sbb
or
mov
lods
ss
and
scas
sub
mov
addr16
shl
mov
pop
mov
mov
mov
mov
movsb
sub
add
movsl
push
pop
call
pop
adc
cmp
lcall
sbb
enter
cwtl
rorb
test
lahf
movsl
sbb
cmpsb
or
inc
int
push
sbb
adc
inc
jp
mov
xor
rcrb
and
wbinvd
sti
adc
int
xchg
repnz
cmpsb
xchg
icebp
fisubl
jg
rolb
mov
jp
rorl
lea
and
mov
int3
cmp
lods
in
js,pt
frstor
loope
daa
int
inc
adc
and
cmc
in
jns
fstpl
xchg
mov
fldcw
ret
xor
das
xor
jmp
jecxz
in
cmc
das
int3
vandps
ljmp
add
jbe
push
neg
test
cmpsb
repnz
shrb
fsubl
pop
outsb
sbb
xchg
test
hlt
lods
push
cmp
push
inc
dec
dec
dec
inc
dec
push
mov
adc
out
xor
xor
add
xchg
shl
mov
stc
fstpt
mov
mov
dec
mov
fisubrl
sbb
mov
call
jne
dec
inc
sahf
mov
jns
jge
push
jge
inc
ds
movb
sarb
int
imul
ja
leave
outsb
test
push
mov
stc
jmp
rcll
loopne
es
bound
pop
mov
test
jecxz,pn
int3
mov
or
int
jns
dec
adc
sub
pusha
jnp
and
add
insl
hlt
xor
mov
mov
sub
stc
je
ds
adc
inc
jl
jle
xor
mov
cld
shrl
insb
imul
fbstp
xchg
movsl
add
outsl
xchg
ss
neg
bound
push
das
cmp
into
outsb
sti
mov
in
insl
ss
jge
sub
js
stc
sub
jo
inc
fstpl
push
jle
push
jecxz
inc
sahf
subb
popa
test
in
std
and
loope
bound
rolb
ds
mov
enter
ror
addr16
jp
xlat
push
mov
lret
out
mov
xor
pop
pop
lods
jecxz
xor
pop
cmc
mov
mov
aam
call
cmp
fisubl
dec
lock
push
mov
pushf
cmc
into
sub
pop
mov
es
arpl
out
sbb
inc
push
mov
sub
xchg
fildl
mov
add
andb
add
cmpsb
shrb
pop
jbe
xchg
push
mov
sbb
movsl
sub
adc
stc
or
leave
daa
add
imul
or
outsb
je
jnp
jp
mov
add
mov
xchg
jbe
cmp
aaa
mov
cwtl
and
mov
mov
xor
daa
testb
lret
xchg
dec
cmpsl
mov
mov
imul
mov
jl
das
inc
jl
movl
pop
cmpl
daa
push
test
lahf
or
and
inc
test
cmpsb
jle
xchg
ret
jmp
xchg
test
mov
ja
sbb
daa
mov
in
pop
insb
xchg
fucom
sub
pop
icebp
mov
mov
jmp
call
std
mov
aam
out
shrl
xor
clc
mov
xor
bound
lea
pushf
jno
aas
sarl
jb
rorl
xlat
sub
xchg
dec
xchg
hlt
addb
adc
lods
mov
fbld
jns
mov
mov
xchg
cmc
test
jmp
dec
fimuls
dec
push
rorl
mov
mov
sbb
pop
outsl
sbb
loopne
fnstenv
test
loop
sahf
fistl
dec
inc
push
inc
jg
loopne
xor
loop
mov
insb
sarl
add
jecxz
sub
mov
enter
fs
mov
addr16
pop
std
loopne
sub
scas
jb
mov
xorb
hlt
and
ja
xchg
js
imull
adc
out
fucomi
cwtl
addr16
cld
push
dec
movsb
inc
dec
or
mov
loop
cmpsl
mov
std
mov
jb
das
fbld
aaa
or
inc
cs
dec
mov
push
push
adc
mov
js
cmp
cmp
add
shrl
fucomp
pusha
rorl
jns,pn
test
test
lret
dec
push
push
mov
xchg
xchg
shrl
lcall
fidivs
adc
mov
jne
xchg
in
and
sub
xlat
inc
or
lahf
xor
call
push
mov
aaa
or
mov
jle
xchg
lahf
testb
movlps
mov
pop
dec
cld
aam
mov
hlt
jg
push
aad
rclb
je
es
pop
sahf
in
ja
or
sub
stc
imul
mov
jb
jl
negl
push
pop
rclb
inc
or
jbe
clc
inc
icebp
xor
or
shlb
lahf
out
rcrl
movsb
dec
cmpsb
imul
stos
pop
sahf
lods
cltd
pop
sub
push
push
addl
out
aam
loopne
jnp
lea
mov
imul
push
cmp
mov
loope
push
popa
or
jp
stos
mov
and
mov
imul
jno
push
cmp
adc
jg
rol
arpl
lcall
ds
pusha
xor
xchg
mov
inc
xor
mov
pop
outsb
jnp
mov
ficoms
stos
sti
ja
arpl
xor
mov
roll
aas
sti
jo
dec
adc
mov
cs
and
adc
ljmp
test
lret
xchg
cs
aam
xchg
stc
sbb
mov
push
inc
fs
mul
jns
inc
test
mov
sub
lds
frstor
test
inc
cmp
or
mov
fldenv
out
cmpl
or
in
in
fisubs
jns
sti
inc
cli
push
mov
leave
or
loope,pt
notb
mov
idivb
dec
push
pop
xor
push
lds
sarb
hlt
pop
lea
or
sbbb
and
loopne
ss
bound
pop
dec
mov
xlat
cltd
stos
sbb
ss
mov
in
jb
xchg
popa
popf
pop
dec
rcr
mov
xchg
sar
pop
lds
movsl
ret
std
incl
scas
sti
movsb
pop
and
aas
mov
adc
popw
mov
inc
lock
jmp
rcll
xlat
push
inc
inc
in
mov
daa
inc
fnsave
and
xchg
je
mov
mov
dec
sub
pop
cmp
pop
sbb
cltd
push
scas
cmpsb
push
gs
pop
test
sahf
rcrb
push
jge
cwtl
mov
leave
scas
add
aad
pop
push
add
push
push
dec
stos
setbe
dec
daa
imul
push
adc
mov
mov
jnp
icebp
shll
fildll
loopne
test
add
xchg
ror
dec
fbld
jo
sbb
mov
xchg
outsb
les
mov
push
shl
jns
or
call
adc
inc
adc
lods
jbe
lcall
lock
fprem
push
fldl
ds
mov
loop
into
cld
outsb
jp
ljmp
sub
sub
scas
in
pushf
mov
fcmovnb
xchg
pop
xor
add
or
adc
add
ss
mov
push
mov
jnp
addl
cld
inc
pop
aad
ljmp
clc
mov
sub
push
cmp
and
mov
mov
enter
pop
mov
mov
sahf
pop
loop
test
imul
mov
outsb
jno
ljmp
jns
loop
sub
push
jo
xor
inc
aam
dec
lahf
enter
inc
pop
sub
fstpl
fisttpll
push
mov
mov
push
aam
inc
out
push
aaa
xor
and
jnp
dec
sub
pop
test
mov
aam
pop
add
add
inc
icebp
sub
push
push
dec
mov
mov
push
lea
sbb
pop
adc
push
test
mov
fsub
xor
mov
and
loope
ja
inc
sub
in
xchg
subl
pop
add
into
mov
ffree
lods
ss
je
cld
push
fwait
xchg
hlt
and
repz
arpl
dec
popf
orb
jl
lea
inc
dec
sbb
ja
sbb
lods
data16
and
or
out
andb
or
jae
mov
popf
cmpsl
push
jns
cmp
nop
ja
push
bound
stos
xchg
xchg
lods
pushf
cmc
mov
and
pop
scas
and
push
pop
xor
xor
gs
inc
add
sub
push
lret
or
popa
inc
lods
add
shrb
in
in
popa
or
xchg
jle
inc
jo
lods
cmpsl
push
and
test
jle
lahf
mov
or
inc
push
out
mov
dec
mov
fnsave
mov
lahf
faddp
loop
mov
cli
lods
stos
sub
cmp
cmpb
sub
rorb
cmp
inc
sti
cli
cmpsb
push
jmp
fs
mov
dec
std
adc
scas
lods
jo
jbe
inc
or
pop
add
insb
adc
hlt
imul
daa
sub
mov
imul
or
addr16
sbb
cmp
ja
scas
and
mov
sub
push
cli
mov
lret
cmp
xchg
sub
adc
imull
shll
cmp
pop
out
cmc
dec
xor
or
fstpt
xor
fsubl
xchg
mov
jns
xchg
jns
aad
push
mov
fs
cli
iret
jo
push
out
pop
icebp
sbb
adc
int
push
inc
adc
rorb
jnp
cmpb
fdiv
in
scas
jnp
sbbb
xchg
sub
dec
lret
sub
scas
mov
enter
and
mov
repz
lds
mov
ss
sbb
insb
pop
lahf
inc
xor
in
sub
xor
dec
mov
sub
mov
push
xlat
stos
sbb
push
test
pop
rorb
inc
xorb
mov
das
loopne
push
sbb
roll
cmp
call
xor
pop
or
pop
adc
dec
stos
imul
xor
cmc
push
push
lahf
ret
ljmp
xor
pop
xor
add
aad
xchg
mov
cwtl
mov
adc
fsubrl
int
xor
and
aas
pop
mov
outsl
rcll
seto
mov
inc
push
mov
inc
dec
fsub
fwait
add
je
sub
xor
rcrl
loope
lahf
ret
adc
aam
xor
push
gs
fisubs
in
iret
mov
loope
and
das
in
std
enter
bound
sub
leave
cwtl
inc
js
pop
js
rcll
shll
sub
mov
push
jp
dec
ja
push
pop
push
push
push
sbb
fs
jns
repnz
mov
cmp
add
in
mov
int3
mov
repz
mov
js
pop
jbe
mov
adc
call
xchg
out
sbb
out
add
push
inc
jg
fcomps
hlt
in
cmp
sbb
stc
sbb
dec
push
sbb
jns
gs
cmp
rcrl
das
jl
repz
lds
aam
dec
xchg
adc
sbbl
mov
cmp
or
or
inc
adc
cmpb
pop
lock
sbbb
push
push
xorl
jae
inc
lahf
mov
add
es
sbb
aaa
iret
in
popa
dec
cltd
cmp
cli
clc
pop
cmp
fwait
inc
xchg
out
push
icebp
xchg
pop
sbb
sub
cmp
pop
inc
jg
push
mov
adc
cmp
rcrl
add
pushf
add
mov
jecxz
out
mov
xchg
aad
sub
lcall
fisubrs
mov
roll
js
cmp
std
xchg
add
outsl
outsb
imul
jb
in
scas
mov
jo
sub
leave
dec
mov
jo
mov
js
iret
icebp
stos
dec
mov
xor
fists
adc
add
pop
cs
mov
adc
and
dec
inc
pop
nop
xchg
ret
into
pop
repnz
scas
je
scas
sub
pop
out
pop
xchg
xor
mov
push
cmc
inc
gs
sbb
fsubrl
sbb
lahf
std
and
cmc
xchg
or
fxch
cltd
mov
clc
repz
push
mov
adc
out
mov
inc
adc
jne
clc
jnp
dec
pop
out
and
sarl
mov
pop
addl
mov
mov
icebp
andl
mov
pusha
fsubs
mov
in
subb
add
aaa
cmpsb
pop
int
scas
cltd
mov
cmpsb
jl
and
jo
inc
xchg
into
jp
cs
scas
dec
mov
inc
inc
aas
inc
mov
mov
nop
xchg
inc
sbb
dec
cmp
xchg
xchg
fldl
jno
jb
pusha
pop
sub
iret
pusha
test
clc
fimull
sub
push
ret
cli
xor
dec
imulb
sbbl
mov
mov
cmp
hlt
push
pop
in
adc
bnd
jp
arpl
mov
pop
fwait
xchg
lcall
out
inc
popa
xor
inc
iret
or
arpl
mov
pop
push
insb
stos
xor
shl
add
lahf
iret
inc
sarb
jl
cmpsb
js
or
fistl
dec
mov
add
push
jbe
ret
inc
pop
movsl
xchg
mov
dec
ret
loopne
roll
pop
mov
out
out
and
xor
aam
add
aam
out
fsub
and
add
lods
bound
xchg
adcl
in
xchg
xor
icebp
nop
or
sbb
cmp
push
sahf
cld
mov
mov
mov
fbstp
push
adc
cmpsb
repnz
pop
mov
outsl
orl
add
pop
mov
mov
lock
movsb
nop
or
loope
cmc
dec
and
jge
addb
ds
fistpl
jge
inc
jno
dec
pop
add
fadds
cmp
and
mov
or
nop
mov
mov
lcall
scas
leave
push
inc
or
sbb
xchg
add
mov
dec
out
cmc
in
repz
leave
jmp
jle
clc
push
fldln2
or
push
jge
inc
loope
jb
es
jnp
jne
jnp
outsl
cld
cwtl
cmp
movb
dec
lahf
add
insb
jnp
movsb
adc
and
sti
and
xor
sub
inc
test
or
mov
push
pause
fdivl
jbe
addr16
cmp
arpl
les
int
clc
push
loope
mov
mov
inc
jns
dec
or
out
add
subb
pop
lret
pushf
out
fimuls
les
dec
std
add
in
js
std
jle
adcl
loope
gs
scas
sub
in
and
daa
scas
lret
dec
pop
push
stc
ficompl
std
shlb
mov
notl
lods
sub
fistps
pop
push
cli
jmp
jno
fwait
les
into
push
adc
mov
push
inc
lret
xlat
movsl
and
fwait
dec
js
imul
iret
mov
mov
push
adc
dec
inc
push
dec
cmp
add
scas
push
cli
in
stc
gs
loope
mov
lahf
into
stc
fisubrs
ret
pop
add
sub
xchg
sbb
cld
daa
ljmp
jnp
xchg
mov
je
fs
mov
sarb
push
jmp
sbb
test
mov
imul
mov
jb
test
loopne
int3
push
mov
fdivrs
push
out
js
or
shlb
into
mov
orb
lcall
inc
test
cs
test
pop
jmp
pop
xchg
sub
cmp
cwtl
inc
fstpt
or
leave
adc
shlb
xor
popa
das
jg,pn
inc
mov
mov
jbe
sub
sub
pop
dec
xchg
mov
and
ss
in
lds
mov
es
aaa
data16
dec
jl
popf
lret
mov
es
imul
and
push
lcall
inc
mov
loopne
lock
push
add
insb
cmp
or
and
pop
adc
data16
cmp
stos
into
shlb
and
cmp
xor
js
clc
shlb
ss
outsl
daa
movsb
sbb
and
mov
sbb
mov
jnp
fs
fstps
lret
insl
add
or
mov
xchg
popa
sbb
push
hlt
sub
sahf
test
and
jo
hlt
push
outsl
andl
push
stos
jl
rcrl
jg
movsb
push
imul
pop
jae
push
mov
sub
pop
jmp
pop
add
pop
pop
or
jl
fcmovne
push
xchg
pushl
xchg
and
cmp
aam
cmp
aad
repz
movsl
mov
add
loop
std
stos
push
in
jle
pop
sbb
aam
pop
sbb
mov
push
movhps
dec
mov
cld
mov
cmp
ljmp
push
sahf
mov
pop
jb
push
jae
out
jecxz
xlat
sti
fsubl
lock
mov
out
lea
ljmp
mov
dec
test
setg
cwtl
adc
xchg
or
rcl
and
outsb
adc
ret
sarl
sbb
or
out
pop
xchg
js
push
sahf
out
mov
jnp
mov
rclb
push
mov
mov
je
add
repnz
loop
into
dec
movsl
xor
jae
push
adc
stc
repnz
push
mov
and
sub
rorl
sub
std
leave
adc
daa
popa
push
test
jg
and
pusha
sub
insb
call
shr
xchg
cmp
popa
cmp
xchg
mov
mov
add
cld
mov
aam
or
add
pop
mov
clc
mov
loop
sub
hlt
hlt
rorb
and
addr16
insl
and
push
test
mov
xchg
inc
scas
mov
enter
mull
aaa
mov
ds
xchg
imul
adc
jno
hlt
es
bnd
pop
fwait
and
xchg
jmp
mov
xor
mov
pop
xchg
popa
cmpsb
fnstcw
cmpsb
and
sahf
fsts
pop
push
aas
hlt
xchg
cmc
or
mov
inc
cs
fwait
mov
pop
frstpm(287
pop
xchg
scas
rcrl
scas
add
icebp
mov
cmp
sub
pop
es
insl
pushf
xlat
shr
add
push
adc
add
inc
outsb
pop
lds
pusha
es
push
hlt
dec
jno
inc
sub
sub
icebp
dec
fs
dec
sbb
mov
jg
mov
jge
cmp
sub
pop
and
insl
jno
in
cs
jbe
rorb
push
sbb
dec
scas
xor
outsb
outsb
jne
jg
fnstsw
xor
xchg
lds
popa
imul
xchg
xchg
vmovshdup
jl
mov
pop
pusha
loope
or
stc
aaa
sub
mov
lret
imul
ljmp
out
fiadds
lea
fcoms
push
movsb
ret
mov
je
out
mov
movsb
xchg
pop
testb
incb
inc
sbbl
stos
imul
mov
add
out
ficompl
loope
adc
fsqrt
cs
out
js
cld
mov
and
test
fsubrl
push
mov
in
inc
ja
mov
xchg
xchg
repz
push
xor
pop
hlt
call
push
mov
xor
inc
pop
pushf
ljmp
shl
orl
sub
pop
rclb
shll
in
add
dec
adc
sub
jle
sub
test
mov
push
rclb
enter
dec
in
xlat
and
imul
or
inc
pop
iret
sti
imul
aad
imul
mov
pushf
divl
arpl
or
jo
loopne
add
pop
sub
or
mov
outsl
mov
sbb
push
out
sub
inc
mov
stc
xchg
pop
idivl
nop
mov
xchg
lahf
lret
shll
lret
aam
lahf
stos
cmp
mov
cmpw
dec
std
pop
mov
jl
mov
fnsave
xor
lahf
and
gs
mov
lahf
pop
pop
cld
pushf
xchg
mov
jg
mov
test
mov
ja
leave
pop
imul
mov
mov
pop
aas
outsb
adc
pop
xor
adc
les
sbb
pop
out
push
fcompl
xor
mov
sbb
push
in
push
jno
enter
dec
mov
aam
ljmp
mov
push
mov
aaa
paddd
push
int3
out
lock
stc
or
jnp
inc
push
inc
aad
fisubrl
xor
xchg
fucomi
lea
mov
sub
push
stos
mull
add
leave
mov
ret
sbb
or
dec
std
orl
stc
enter
pshufw
jmp
mov
insl
mov
xchg
xor
fwait
xchg
std
cltd
pushf
and
ds
inc
adc
pop
js
and
adc
or
lock
pop
or
add
fisubs
and
cmp
dec
fcmovnbe
adc
aam
shlb
jl
aaa
std
lods
loope
clc
xchg
dec
mov
jl
push
arpl
sbb
inc
jns
dec
frstor
test
push
stos
mov
fsubrl
dec
xor
fs
and
inc
xor
add
adc
inc
jne
mov
push
nop
cmp
or
aas
mov
cmpsb
aam
inc
pusha
dec
rcrl
cli
push
clc
cmp
and
data16
sbb
fstsw
sbb
dec
ja
fs
sbb
mov
push
in
adc
sub
fmull
inc
sub
cmp
mov
jl
mov
ret
xchg
adc
fisubs
push
adc
dec
iret
pop
pop
lahf
jb
loop
icebp
out
push
nop
aas
icebp
cmpb
shll
sbb
hlt
call
push
fildl
inc
and
mov
enter
in
movsl
jl
jns
add
loopne
movsb
pop
cmp
pop
aas
addl
ss
xchg
mov
jl
pop
test
cwtl
and
xchg
push
cmpsb
div
mov
mov
int
cld
pop
adc
lea
push
xor
leave
rolb
fsubl
std
adc
jo
cld
jns
push
jne
lods
cwtl
dec
xlat
mov
fcoms
push
dec
adc
jnp
mov
ds
inc
cld
stos
cld
push
mov
mov
mov
out
inc
xor
push
jns
mov
dec
xlat
xor
aam
adc
xchg
add
mov
insl
jno
or
pop
mov
fadd
xchg
std
mov
lret
sti
jns
jmp
jle
adc
rorb
xor
cmpsb
inc
sahf
xchg
test
or
adc
dec
mov
std
fcoml
jl
fnstcw
adc
cmp
push
test
cmc
jmp
xor
test
pusha
movsl
mov
mov
xchg
int3
push
lahf
fwait
mov
xchg
push
sbb
sbb
jmp
xchg
fs
jmp
sbb
movsb
push
add
adc
notb
das
addr16
std
xchg
push
shll
faddl
cmp
lcall
popf
cmpsl
lret
mov
test
mov
popa
mov
ljmp
popf
icebp
arpl
lods
in
jo
mov
push
mov
xchg
das
push
and
jmp
aam
rcrl
jmp
add
popa
aas
pusha
cmp
std
cmp
cmc
sub
and
sub
dec
push
cmc
in
jp
movzwl
adcl
jns
cmc
push
ret
call
add
mov
lcall
js
cmpsb
sbbl
mov
repz
jno
lods
add
nop
test
data16
out
ficomps
mov
cmp
sbbl
fwait
lea
or
lea
call
add
int3
in
mov
add
mulb
popa
lret
loop
sbb
mov
xchg
sub
sti
adc
dec
fistpl
add
and
out
bound
stos
mov
xchg
xchg
pop
lcall
xchg
loopne
cmp
pop
xchg
test
mov
push
push
mov
call
dec
xchg
add
adc
sbb
jnp
pop
cmp
aad
pushf
mov
push
in
popa
in
and
adc
sub
loope
inc
sbb
test
xchg
call
testb
xchg
fwait
xchg
popf
test
flds
inc
add
lds
add
loopne
mov
stos
xlat
mov
jne
pop
roll
xchg
out
into
inc
push
mov
daa
sbb
fisubl
imul
daa
popa
stos
stos
mov
mov
repz
in
inc
dec
lock
jecxz
push
mov
pop
stos
jge
and
add
sarl
jp
imulb
js
fnsave
cmpsb
stos
adc
das
xor
sbb
adcb
pop
lahf
out
push
int
cmpsl
adc
aam
int3
xchg
push
addr16
cli
mov
mov
mov
je
push
mov
sbb
shr
stc
xlat
dec
xchg
pop
jmp
test
pusha
jl
xor
rorb
adc
lea
rcl
dec
addb
and
stos
call
cli
sbb
sub
fistpl
addr16
xor
popf
xor
and
fisubrl
out
into
add
jp
and
imull
and
out
popf
push
xchg
or
dec
sbb
mov
movb
movsb
xchg
pop
ret
xor
xlat
adc
sub
mov
mov
imul
ljmp
pop
or
dec
xchg
mov
hlt
and
scas
sbb
jb
dec
xchg
mov
outsl
adcb
loop
mov
inc
jecxz
cmpsl
or
push
adc
daa
aam
xor
or
sbb
jge
jecxz
data16
repz
stos
or
push
rclb
imul
cmp
add
test
adc
ret
pushl
adc
pop
mov
sub
arpl
scas
add
sub
rolb
mov
xor
mov
fwait
inc
ss
xchg
sbb
popf
adc
mov
flds
and
push
inc
adc
xor
sti
mov
aam
sbb
mov
add
fists
add
jo
push
lock
arpl
dec
push
push
pop
sub
mov
or
cmpl
aas
fwait
pop
mov
push
ret
sub
aaa
cs
icebp
into
dec
mov
and
sub
inc
fdiv
daa
incl
shr
in
jb
test
mov
icebp
cmp
sti
dec
es
xor
je
inc
int
test
imul
imul
and
add
pop
sub
mov
in
ss
cmp
jbe
pop
adc
or
ja
std
pop
sbb
or
test
or
rolb
orl
xor
jnp
pop
mov
insl
mov
inc
loopne
aas
xor
or
pop
loope
lahf
jecxz
iret
test
fnstenv
int3
and
pop
imul
xor
les
push
imulb
and
aad
xor
loop
cli
in
xchg
add
sub
fistps
inc
int3
jmp
test
jp
shlb
cmp
shlb
adc
xchg
enter
lcall
mov
push
cwtl
inc
adc
pop
stc
xchg
lahf
xchg
fimull
rorb
inc
jecxz
bound
and
repnz
push
shrl
loope
fisubs
xor
addr16
aad
jbe
add
nop
push
sahf
lcall
ret
jnp
cmp
aad
lret
jbe
in
mov
sub
lds
in
lahf
mov
add
out
jne
add
pop
push
enter
inc
ret
sbb
xor
sub
xchg
mov
fmull
rclb
sar
sbb
inc
lahf
sti
aas
dec
stc
in
inc
into
lret
sbb
aam
mov
dec
sarb
jg
cmp
jp
insl
dec
jmp
adc
icebp
mov
repnz
loopne
int3
cmp
jp
and
xor
fstpt
and
jp
pop
pop
pop
pop
push
push
cmp
dec
dec
aam
inc
das
jo
stc
test
filds
add
nop
xor
jl
cmp
inc
inc
sub
dec
bound
jecxz
push
ret
push
and
enter
dec
mov
mov
adc
lock
mov
lods
push
fisubrl
jg
add
xchg
mov
mov
push
ret
fbstp
mov
imull
scas
cmp
jecxz
sbb
das
inc
hlt
mov
dec
adc
xchg
mov
mov
xchg
in
add
fwait
push
jmp
hlt
in
sbbl
dec
subb
icebp
cmp
jmp
test
mov
loop
mov
je
fadd
dec
push
push
sub
cmp
fdivs
pop
mov
mull
push
cmc
iret
pop
xor
test
stc
je
stos
pop
lcall
adc
sbb
pop
or
jae
call
jp
add
sub
aad
adc
xchg
push
jns
mov
adc
daa
jb
dec
xor
cmp
xchg
xchg
cmp
scas
movsb
and
lea
add
daa
jmp
inc
ret
aaa
xchg
or
xor
sbb
les
fsubl
subb
fiaddl
addr16
aam
pop
sbb
pushf
pop
push
mov
roll
or
outsl
daa
mov
mov
mov
rclb
xchg
or
sub
add
lods
in
jmp
sbb
pusha
lock
mov
mov
mov
repnz
sub
xor
arpl
nop
xor
fs
popf
rcl
pushf
in
sti
inc
mov
push
inc
and
and
pop
xor
icebp
pop
xchg
xor
add
cmpsl
pushf
in
dec
das
cld
jge
pmaxsw
imul
outsl
sub
pop
test
aam
sub
and
popf
or
rorl
dec
jne
enter
stos
imul
pop
push
pop
push
jle
push
sbb
sub
out
sub
inc
xchg
aad
shll
fsubrp
mov
cs
jbe
push
lea
iret
into
in
test
mov
jle
jge
xchg
icebp
pop
andb
add
push
inc
pop
push
out
mov
jno
or
sbb
pop
pop
in
or
loopne
jns
fcmovb
bound
lock
pusha
in
sbb
stc
jne
test
jbe
jns
test
mov
or
inc
cmpsb
insb
mov
push
pop
push
aaa
sub
les
sub
out
push
pop
cwtl
and
push
or
mov
prefetcht0
push
sbb
add
cltd
mov
jle
adc
xlat
mov
xchg
sub
les
movl
test
push
aam
sub
fists
aad
mov
pop
sbb
push
fbstp
lods
inc
lret
outsl
xchg
ftst
add
jmp
xchg
ret
fs
xorb
mov
insb
imul
shrl
loop
xchg
lcall
xchg
xor
inc
and
xchg
movq
jo
xchg
js
das
mov
mov
into
sbb
xchg
pop
push
dec
out
mov
jne
mov
inc
les
aad
ds
or
and
mov
in
and
cltd
call
fldl
or
rcr
cmpsl
fs
scas
rcll
in
jmp
lcall
repz
arpl
sub
std
push
cmpsl
daa
mov
lds
mov
xchg
mov
jbe
jo
out
mov
push
cmpsb
xchg
pop
mull
or
sub
movsb
test
outsl
and
cld
and
push
or
sbb
outsb
jnp
sub
push
xchg
sub
lods
inc
push
inc
cmp
lcall
mov
or
loopne
mov
movsl
add
call
je
cmp
mul
cs
out
jle,pn
std
mov
adcl
pop
imul
les
mov
mov
les
mov
mov
aas
shll
and
inc
enter
test
pop
jp
stos
jmp
mov
jb
pop
mov
cmc
popa
aam
insl
lock
sbb
pop
ret
fisttps
mov
lret
shrb
test
mov
out
and
mov
test
and
dec
std
inc
sbb
push
or
and
add
xchg
ficoms
in
mov
fisubrl
sti
add
fnstenv
and
xor
ljmp
shll
std
inc
fprem1
fcmovnu
bound
adc
loopne
pop
les
pop
ficoms
bnd
sub
dec
enter
jmp
clc
loopne
xor
mov
test
mov
mov
int
sub
jge
xchg
fsubrl
sub
xchg
xchg
inc
notb
jmp
mov
repz
clc
flds
mov
ret
pop
sbb
mov
mov
jbe,pn
add
loopne
mov
jnp
ja
fstpl
cmpb
outsb
int
movsl
xor
jg
shld
shll
out
push
push
jge
es
out
sub
mov
sbb
rep
push
mov
pop
fstpt
xchg
shrl
dec
jl
jg
fsubs
ror
ret
jg
and
out
outsb
push
scas
imul
or
sti
mov
shll
loop
mov
bound
lods
outsb
loopne
or
stos
inc
arpl
test
lret
pop
out
je
stos
out
int
mov
adc
repnz
jg
mov
into
push
adc
ljmp
jae
mov
and
popa
stos
xchg
scas
inc
dec
sub
jbe
xor
aas
mov
xchg
xchg
push
inc
pop
xlat
mov
test
movsl
pop
dec
jecxz
ror
mov
mov
sub
cli
mov
add
inc
stc
je
push
arpl
and
cmp
dec
dec
xorl
pop
cmpsb
mov
shl
jmp
sub
mov
inc
test
not
sbb
lods
testb
rcrl
cltd
and
fs
mov
fstcw
ljmp
into
cmc
cmpps
sarb
test
sbbb
pop
pop
adc
lock
lret
jmp
iret
and
sti
popf
jne
mov
xchg
and
pop
jmp
hlt
call
rol
push
mov
inc
bound
add
cmp
mov
imul
int3
xorb
loopne
ror
dec
push
sahf
insb
rclb
jno
jbe
pop
shr
xor
add
adc
jmp
mov
ja
daa
xor
lock
dec
fs
jmp
jecxz
mov
mov
lds
lds
shr
fnstenv
pop
push
jle
sbb
or
lods
push
jnp
or
inc
xlat
push
pop
mov
xchg
test
or
mov
sbb
frstor
lods
std
cwtl
mov
mov
cmp
add
outsl
icebp
scas
cmc
cld
mov
lcall
adc
fsts
mov
std
push
scas
ret
adc
outsb
iret
mov
jge
pop
stos
push
es
ror
insl
push
rorl
imul
aad
mov
jl
std
cmc
mov
insb
outsb
rorl
jmp
inc
lods
outsb
stos
subl
sbb
jb
inc
mov
cmp
outsb
dec
xchg
lock
sbb
sbb
inc
repz
pop
inc
xchg
or
repz
cld
popf
mov
test
and
sahf
jecxz
sti
push
clc
shlb
lods
sbb
xchg
mov
arpl
cmp
pop
sub
sub
fs
cltd
dec
popa
push
sbb
shll
sbb
dec
mov
push
in
sbb
mov
ds
sbb
push
or
sbb
mov
hlt
das
or
add
xchg
test
add
sub
pushf
fs
cmc
jp
out
lds
test
push
iret
test
push
xchg
cmp
inc
mov
std
xchg
or
xor
lods
shr
aaa
test
and
or
jecxz
dec
movsl
ljmp
in
out
jo
push
pop
clc
mov
loopne
dec
cmp
xchg
sub
cmc
stos
xor
movsb
xor
inc
les
or
js
fcoml
fisubrl
stc
scas
xchg
pop
cli
clc
fisubrs
jbe
xchg
rolb
sbb
mul
mov
lret
push
adc
adc
ror
je
bound
dec
inc
aad
or
xor
shl
mov
xor
push
out
xlat
popf
push
xor
insb
pushf
je
test
hlt
jge
xor
mov
inc
mov
xchg
sbb
sti
in
ss
mov
fwait
pop
mov
inc
daa
mov
rolb
scas
xor
push
pop
in
xor
scas
dec
xchg
adcl
mov
pop
ljmp
cmp
jno
or
add
inc
mov
jne
sub
lretw
mov
lahf
mov
pop
sahf
jns
adc
mov
arpl
in
flds
mov
enter
sub
fiadds
sub
sub
push
sbb
xor
or
out
xor
cmp
bndstx
cwtl
ds
movsl
jg
sbb
xor
push
in
push
or
cmp
lods
or
clc
mov
mov
sbbl
icebp
mov
xchg
scas
mov
ficompl
imul
es
repz
pop
xlat
adc
int
ljmp
sahf
fidivrs
jl
lods
or
orb
jbe
mov
pop
lock
lahf
dec
add
sti
lahf
sub
sarb
subb
loopne
sub
out
mov
push
jbe
add
jo
adc
sarl
sub
idiv
ljmp
mov
cmp
inc
lea
mov
jl
xchg
stos
fwait
xor
inc
dec
movsl
cmp
adc
pop
mov
xchg
sbb
xrelease
lahf
adc
adcb
fmuls
and
push
scas
sbb
popa
fbld
test
and
sub
and
andb
mov
xacquire
fwait
popf
out
std
pushl
inc
lcall
or
xchg
shrb
mov
mov
lock
lret
movsl
mov
inc
rolw
mov
pop
fisttpll
xchg
cmpsb
inc
sub
les
sti
sahf
mov
sbb
or
imul
movsb
iret
aad
mov
test
push
lds
lea
sarb
repnz
pusha
dec
mov
pop
lret
testb
jg
lock
push
adc
mov
sub
and
sub
pop
inc
inc
or
mov
lds
shr
test
inc
jge
daa
subl
in
ret
inc
loop
mov
dec
cmp
das
sub
lcall
xor
and
pop
testb
adc
inc
roll
inc
in
push
bound
xchg
paddusw
or
ss
data16
mov
cs
sbb
sahf
xor
and
mov
mov
xchg
ret
mov
xchg
jp
xchg
outsl
nop
pop
aam
mov
aas
pop
dec
jbe
in
ret
test
dec
mov
out
ds
push
fbstp
inc
cld
rcrb
data16
cli
getsec
shll
nop
xchg
les
stc
int
dec
test
mov
pop
mov
sub
jp
sub
pop
push
addr16
xor
inc
sub
mov
add
mov
test
push
push
jge
sbb
insl
cli
inc
pop
jg
xor
sub
cmc
sbb
xor
inc
mov
mov
pop
xor
scas
out
inc
inc
inc
gs
imul
or
cmc
adc
push
push
fsubrp
shl
or
inc
cwtl
jge
cs
inc
sub
or
lcall
mov
or
pop
loopne
mov
or
xchg
sti
shrl
pusha
pop
adc
cld
mov
call
pop
adc
xchg
out
jns
xor
and
insb
adc
cmp
push
or
add
cwtl
flds
clc
std
test
test
addr16
xlat
out
push
ret
mov
sti
repz
addl
pop
add
loopne
mov
addr16
xor
das
and
mov
xor
xchg
mov
jp
sub
dec
fistps
xchg
lcall
enter
incl
mov
enter
mov
in
cltd
shrl
loopne
ds
mov
dec
push
sub
jns
sbb
adc
pop
mov
test
sub
clc
mov
cmpsb
repnz
mov
in
or
mov
sbb
addr16
jmp
mov
push
mov
in
lcall
jno
adc
dec
xchg
inc
lea
sub
dec
fdivr
aaa
or
jbe
mov
xchg
shrb
mov
jp
leave
sbb
je
insl
mov
inc
sub
int
push
popf
stc
sub
ljmp
popa
mov
cmpsl
xor
ja
mov
fwait
mov
xlat
pop
push
cmp
or
jg
push
push
add
dec
sbb
es
jae
sbb
das
ss
mov
hlt
cmc
repz
push
jb
lea
divl
adc
das
sub
leave
lods
cmp
stos
mov
mov
dec
dec
out
fcoml
mov
fs
mov
sbb
mov
xor
mov
push
cmove
mov
xchg
pop
lret
or
es
cwtl
jae
cmp
sarb
or
out
or
push
sbb
mov
ds
inc
add
push
pop
or
xchg
pop
testl
push
ds
jne
jno
nop
dec
push
jl
cmpsb
sbb
adc
out
sub
cmp
imul
daa
dec
push
mov
jns
mov
adc
jmp
loopne
outsb
out
ljmp
and
jbe
inc
sbb
and
mov
and
and
mov
xchg
testl
xchg
subl
hlt
mov
mov
or
mov
mov
mov
mov
dec
lock
lods
idivb
scas
dec
cld
dec
dec
cmc
scas
or
push
std
pop
cmpsl
inc
or
aaa
incl
sbb
sub
test
xor
push
mov
test
sbb
mov
xor
addr16
inc
and
cmp
fs
pushf
lcall
out
das
push
mov
daa
or
pop
cmp
ja
pop
xor
testb
sahf
mov
and
dec
pop
pop
sbb
mov
shlb
loop
and
push
data16
clc
ret
sbbb
add
ljmp
push
mov
es
and
leave
cltd
jns
push
shr
in
lock
mov
cmpsb
dec
imul
adc
add
adc
or
loopne
leave
subb
inc
xchg
out
jo
cmp
sub
shlb
mov
dec
mov
insl
xor
inc
out
jnp
mov
pushf
mov
dec
mov
pop
jne
sbb
sbb
jg
shl
movsb
mov
mov
jge
dec
insl
data16
lods
pop
or
movsl
adc
cmp
pop
inc
dec
ss
pushf
fnstenv
sbb
in
xchg
add
and
int3
cmpsb
movsb
inc
cmp
lcall
xor
inc
mov
idivb
rol
clc
scas
push
ret
mov
dec
sub
jge
and
loope
lret
dec
xlat
jmp
out
sub
jne
mov
sub
fcomip
push
stos
lock
add
push
aam
sub
leave
test
clc
add
xchg
mov
mov
and
test
xor
cmp
cmpb
test
movsl
repnz
jg
xchg
xchg
xor
int3
cmp
out
sbb
xor
repz
in
popa
nop
sbb
add
xlat
mov
lods
lea
mov
xchg
pop
mov
aam
push
imul
or
orb
dec
and
push
mov
xor
cmp
sbb
push
sbb
imul
cmp
repnz
insl
or
cmp
or
imul
ja
nop
rorb
inc
out
sbb
out
pop
outsb
push
rcll
icebp
nop
and
dec
mov
aad
and
hlt
mov
and
cmpsb
jge
jmp
adc
out
and
jl
rcl
scas
ret
or
sub
or
push
sub
push
xchg
mov
sub
das
popf
jo
iret
das
pop
cmp
jae
jns
shl
jb
leave
add
adc
into
test
mov
sbb
mov
xor
mov
fstl
sub
sub
jb
fisubrl
loope
or
mov
add
jg
sub
sub
fwait
icebp
mov
fdivs
lcall
ret
jae
push
cmpb
mov
outsl
outsb
push
rcll
call
inc
add
mov
jmp
cld
and
imul
out
aas
xor
loopne
or
mov
mov
jmp
cmpsl
adc
xlat
xor
mov
clc
sub
sbb
shl
sbbl
sar
cmpsl
in
pusha
and
mov
lcall
push
fsubl
jge
dec
divl
mov
aaa
inc
cmp
dec
jecxz
push
inc
movsb
adc
mov
mov
sahf
mov
test
arpl
adc
fsubrs
mov
jo
cli
data16
mov
mov
fsub
adc
icebp
jnp
dec
stos
pop
test
pushf
mov
outsl
cmpsl
icebp
or
into
mov
js
sbb
lods
out
inc
dec
test
loop
mov
popw
iret
jns
cmp
cmpsb
jl
shrb
repz
pop
in
cmp
cmove
addr16
push
and
sbb
into
xor
ds
scas
cmp
adc
aam
sub
pop
pop
cmp
mov
cwtl
mov
jmp
or
pop
mov
sub
mov
enter
aaa
div
lcall
pop
xchg
add
xchg
sbb
jle
mov
sbb
stos
shll
or
sarb
jne
push
cmp
fbstp
pop
dec
dec
daa
stc
add
pop
lret
mov
gs
xchg
cs
das
lods
xchg
xchg
sub
mov
xor
jnp
ret
pop
addr16
jae
lds
inc
add
mov
jle
lods
mov
mov
rolb
xor
insb
or
test
jno
icebp
filds
cmpsb
cwtl
pop
sahf
insl
lods
pushf
xchg
shrb
xchg
push
jmp
pop
xchg
push
pop
movsb
mov
imul
push
add
out
push
push
cltd
jns
mov
xor
mov
call
roll
nop
adc
add
out
inc
push
mov
cmp
pop
mov
jmp
and
in
push
mov
adc
leave
inc
cld
stc
pop
xchg
nop
call
out
cltd
stc
mov
lcall
in
or
mov
ljmp
gs
mov
loopne
dec
mov
lcall
inc
out
push
jo
adcl
mov
push
mov
cmp
jge
mov
cmp
fildll
aad
sub
out
and
jae
pop
mov
inc
jge
mov
pop
out
test
or
jmp
dec
pop
ret
and
cmp
ljmp
pusha
mov
jo
jo
test
cmp
aam
pop
mov
add
inc
fiadds
sub
and
add
add
add
nop
cmp
rolb
lret
xchg
add
aam
adc
pop
das
or
shrb
cli
pop
cs
mov
xlat
rcr
mov
inc
and
inc
sub
lods
cmpl
inc
aaa
sub
sbb
jmp
push
cli
das
dec
hlt
popa
in
dec
ficoml
sub
dec
fsubl
addr16
nop
hlt
mov
sub
mov
or
jl
push
mov
cltd
insb
xor
lahf
dec
xchg
rorb
das
jge
sbb
mov
dec
stos
jnp
push
mov
mov
cmp
cmpsl
pop
rcll
cmp
cmp
adc
mov
pop
sub
xchg
loop
es
les
gs
sbb
mov
clc
and
xchg
mov
xor
mov
mov
and
sbb
dec
test
and
aad
int3
rclb
push
pop
adc
sbb
shl
xchg
in
test
mov
or
ret
inc
cmp
cmpsl
jne
or
mov
arpl
outsl
popa
jg
push
pop
nop
sbb
cmp
xchg
and
outsl
dec
mov
in
movsb
and
mov
popf
inc
mov
push
xchg
daa
inc
fistpl
stos
push
push
aaa
test
inc
in
pushf
xchg
in
xchg
mov
dec
test
int
in
sbb
movsb
stos
lods
sarb
call
out
fisubl
arpl
adc
test
gs
fimull
fsubrl
pop
pop
jmp
sub
rolb
pop
jp
lock
mov
and
fcmovne
xchg
lods
leave
pop
dec
jg
fidivs
pop
xor
test
xchg
jno
std
lcall
jp
jne
xchg
leave
pusha
mov
fimuls
fiadds
xor
xchg
call
ja
inc
xchg
mov
std
pusha
mov
add
cwtl
out
sar
aad
cmp
xor
gs
mov
cmp
std
sbb
mov
adcl
dec
fwait
es
xchg
adc
push
pop
movsb
pop
push
orl
int3
sub
mov
outsl
mov
rolb
jle
sti
mov
outsl
scas
mov
stc
xchg
idivl
push
pop
pop
int
sbb
xor
lds
jle
das
jno
bound
cmp
inc
xchg
shll
insl
imul
mov
es
mov
push
imul
adc
mov
shrl
push
scas
add
sti
jno
sbb
push
out
cltd
adc
popf
int
aaa
divl
imul
and
clc
das
jge
mov
xor
add
and
mov
pop
mov
jne
mov
and
sub
imul
push
lret
sbb
mov
lock
imul
popf
adc
pop
call
jg
or
loopne
sbb
stc
adcb
dec
cmp
add
mov
ljmp
dec
ljmp
andw
shl
int
push
jno
fstps
push
push
push
push
mov
cmp
mov
adc
mov
mov
mov
ja
xor
cld
fisubl
pandn
mov
lock
or
call
or
stos
inc
fisubrs
mov
in
push
and
daa
fnstsw
ljmp
ljmp
loope
clc
mov
pop
xchg
mov
mov
in
cmpsl
jns
scas
cli
xchg
aaa
pop
cwtl
jle
and
xchg
and
outsl
xlat
inc
ret
pop
pop
mov
pop
xchg
decl
jbe
push
sub
imul
mov
cmpsb
cmpsl
decb
dec
mov
or
push
sbb
or
hlt
inc
pusha
mov
mov
imul
icebp
mov
cmp
ss
mov
lcall
xchg
fs
xchg
test
js
jmp
iret
add
xchg
sbb
fists
lods
ret
rcll
imul
sbb
jbe
mov
nop
adc
lcall
or
fucomip
in
into
dec
int
popl
push
cmp
sub
jmp
ret
leave
fistl
scas
pop
int3
loopne
xchg
lahf
jbe
sub
cmc
xchg
sbb
dec
cmp
push
cltd
into
jnp
es
xchg
push
add
mov
notl
ret
je
inc
dec
xchg
inc
ret
gs
dec
sub
mov
sbb
sbb
lahf
std
rclb
inc
mov
sub
sub
mov
sbb
xor
pop
mov
push
and
arpl
xlat
nop
into
lds
push
repnz
inc
cli
rorl
xchg
cld
ja
sub
push
or
addr16
leave
pop
mov
dec
mov
mov
push
push
outsb
inc
loopne
sbb
or
xor
add
pop
das
lret
jne
in
ret
jge
adc
mov
mov
pop
jp
aad
push
lods
jecxz
jae
ds
andl
cmp
shrb
mov
fildll
dec
in
push
arpl
mov
xchg
mov
jbe
mov
js
nop
pop
adc
rcrl
in
mov
shlb
push
jno
lcall
xchg
mov
mov
sbb
int3
mov
popf
and
cltd
icebp
hlt
test
testb
mov
push
push
mov
push
add
lret
xchg
mov
fucomip
cmpsl
scas
inc
daa
mov
bound
dec
mov
inc
inc
cli
jne
cli
push
adc
push
les
mov
popf
inc
xchg
xchg
inc
std
mov
dec
and
in
xor
lds
mov
adc
rclb
cwtl
out
dec
test
mov
popf
adc
pop
mov
repnz
pop
stos
dec
rclb
cmc
dec
inc
dec
cli
test
aaa
adc
push
xchg
fcom
rep
cmp
jne
lods
dec
push
pusha
jg
js
leave
xchg
in
inc
or
mov
push
insb
ret
pop
xor
cld
popa
jle
out
js
jb
sbb
xlat
and
icebp
mov
iret
out
add
mov
push
pop
psrld
stos
jne
enter
ljmp
fidivrs
push
shlb
aam
fsts
les
dec
mov
into
jo
stos
popa
adc
mov
hlt
loopne
sub
sti
or
fstps
mov
subb
je
sarl
sub
out
inc
popa
mov
pop
sbb
mov
in
mov
flds
ret
sbb
cld
adc
push
ficompl
out
dec
aam
jo
cli
lods
test
mov
out
fisubrl
dec
or
push
repnz
cmp
sarl
sti
inc
ret
setp
mov
cmp
cmpsb
add
rolb
or
mov
xor
pushf
jg
add
aaa
sbb
adc
dec
lock
sti
inc
jp
or
imul
cld
pushw
push
fs
inc
and
popa
add
es
mov
sub
sti
lret
jne
push
or
test
dec
xor
lahf
imul
out
ret
popa
pop
aad
mov
add
jnp
dec
repz
jb
cmpsl
notl
dec
ds
fsts
das
push
mov
and
mov
testb
xor
xchg
lret
aad
push
stc
add
or
jl
sbb
andl
lret
jo
out
jp
mov
in
or
cmp
out
sbb
jo
xchg
daa
aaa
dec
mov
or
leave
aas
icebp
pop
add
jne
stc
fimuls
and
and
add
dec
sbb
das
xor
inc
cmp
jle
lods
cli
loopne
sub
sbb
fistpll
scas
mov
add
or
push
lea
add
leave
push
fwait
add
aam
mov
fldenv
outsb
imul
xchg
jmp
inc
into
pop
sbb
or
fnstsw
sbb
fidivs
push
mov
addr16
test
or
cmp
insb
adc
out
mov
movsb
sub
ja
or
pop
inc
jns
cmp
aaa
jp
scas
fadd
or
lret
push
enter
or
and
es
aam
pop
inc
and
jl
jno
in
xor
xchg
aad
sub
mov
sbb
mov
scas
sub
and
mulb
aad
jle
ret
push
lock
cmp
mov
out
sbb
inc
leave
mov
jo
test
insb
jmp
dec
fsubl
sub
lea
insb
sbb
pop
cwtl
stos
leave
pop
repnz
lret
adc
xchg
gs
xchg
sahf
lods
dec
inc
mov
sbb
sub
fwait
lea
jmp
fnstcw
fisubrl
stc
or
push
fs
xchg
xchg
dec
mov
sub
xchg
add
lcall
jb
mov
icebp
push
enter
xlat
push
fsubs
scas
sbb
imul
pop
inc
xor
mov
xsavec
mov
mov
pop
pushf
lret
mov
mov
hlt
dec
into
lods
fiaddl
movsb
and
pusha
leave
push
dec
sub
sub
pop
jmp
push
add
clts
into
icebp
adc
stos
jb
sub
jo
or
inc
inc
push
cld
push
mov
fsubrl
aaa
ljmp
cli
push
sub
pop
sbb
outsl
test
or
mov
lahf
jae
int3
and
xchg
test
mov
inc
sbb
subl
add
push
xchg
mov
pop
xchg
mov
adc
push
push
xchg
push
push
mov
sub
pop
popa
add
adc
pop
arpl
xor
pop
and
in
or
into
add
xchg
xor
push
pop
xchg
adc
int
gs
mov
icebp
ds
xchg
cmp
lahf
mov
pop
mov
imul
iret
sub
mov
fwait
inc
push
pushl
js
sbb
bound
mov
inc
inc
pop
cwtl
mov
gs
inc
mov
mov
push
mov
fistpll
sub
test
mov
sbb
lods
lret
sub
insl
mov
push
outsl
push
xor
pop
fwait
mov
pop
es
repz
imul
sub
adc
or
outsb
loope
push
movsb
and
arpl
jne
aas
outsl
sub
leave
cmp
mov
andps
jo
lret
fnstsw
clc
gs
adc
add
lret
inc
mov
xchg
movsl
dec
dec
pusha
in
cld
adc
rcr
adc
in
xor
jns
ret
push
jl
dec
sub
mov
sahf
adc
cwtl
gs
sbb
and
leave
stc
dec
and
sbb
mov
insb
leave
sbb
push
cwtl
lahf
pop
jnp
xchg
xor
xchg
and
adc
cmc
mov
testb
adc
mov
insb
xor
les
pop
dec
aam
out
fldl2t
mov
dec
aaa
inc
std
mov
std
cmpsb
ret
adc
cmp
cmpsl
jecxz
or
roll
stc
sar
insl
in
jbe
sbb
jecxz
xchg
nop
jno
xchg
dec
lret
shll
pop
mov
fs
xchg
repz
pop
js
das
mov
loopne
xchg
test
jns
movsb
push
idiv
sbb
inc
imul
or
dec
xchg
mov
sbb
jg
or
mov
jns
inc
popf
cmp
ficomps
cwtl
cli
add
nop
data16
lcall
sbb
out
sub
sbb
fwait
out
cmp
dec
rorl
movsb
mov
mov
pop
gs
ljmp
push
lock
mov
push
pusha
stos
jecxz
in
not
fistps
mov
dec
adc
jg
cld
ret
add
loop
inc
stc
rolb
test
test
xchg
sub
enter
in
cld
sahf
xor
dec
and
scas
pop
push
roll
adc
insb
mov
shlb
out
add
test
mov
sahf
std
and
cli
jno
xlat
aas
js
stc
push
loopne
inc
inc
enter
sub
xchg
and
es
out
data16
mov
lods
iret
xchg
movsl
enter
imul
or
ret
dec
pop
mov
ret
icebp
push
push
sub
dec
pop
xor
cltd
es
mov
push
xor
test
and
mov
pop
xor
into
fisubs
xchg
xor
arpl
xor
ds
bound
dec
jl
adc
mov
dec
test
loop
shrl
pop
sub
in
push
mov
sahf
jmp
call
arpl
out
js
iret
pop
push
mov
mov
add
andl
sbb
adc
mov
ds
idivb
inc
add
ljmp
imul
aaa
mov
aam
push
mov
les
inc
pusha
movsb
imul
out
pop
jmp
jns
add
inc
bound
loope
scas
loopne
std
pop
inc
fs
sub
stos
daa
mov
cmp
sub
mov
enter
mov
shlb
out
hlt
pop
xchg
pushf
adc
ss
movsl
sbb
stos
push
cmp
pop
sti
ja
cmp
mov
stos
add
cs
jmp
js
repz
xchg
inc
jo
arpl
xor
xchg
mov
xchg
fs
movsl
outsb
nop
in
cmp
int
ljmp
push
push
out
dec
jmp
add
sbb
xor
cli
hlt
adcl
inc
push
and
adc
stc
leave
add
xlat
arpl
test
clc
inc
inc
jne
sbb
int3
mov
cmpsb
les
mov
sti
leave
jle
mov
mov
test
push
outsl
cmp
sub
test
jns
imul
add
call
push
pop
sbb
cwtl
mull
aaa
in
movsl
add
shlb
aad
lea
ds
in
fwait
test
sbb
in
adc
test
adc
xchg
scas
push
repz
mov
outsl
inc
insb
lahf
or
push
sbb
pop
fistpl
mov
cwtl
jl
cwtl
les
sbb
push
pop
jmp
inc
cwtl
mov
data16
aaa
or
out
stos
push
push
lods
bound
sub
mov
or
xchg
mov
mov
xchg
je
add
adc
cmp
repnz
cmp
fwait
clc
cmp
xor
test
rolb
inc
ljmp
je
xchg
out
and
sub
es
pop
in
jle
daa
push
andl
push
cltd
push
sub
pushf
sbb
pushf
or
xor
fmuls
adc
cmp
mov
sarb
rcrl
pop
lock
push
or
lahf
dec
pop
insl
inc
dec
xchg
jecxz
ret
pop
cltd
sub
jo
dec
in
aas
fildl
adc
lret
pusha
fstpl
inc
push
std
mov
pop
mov
fnstcw
push
shr
jle
fs
cmc
imul
add
mov
cmp
bound
fdivp
ss
icebp
and
jae
adc
mov
movsl
out
js
lods
ljmp
and
sub
sub
sbb
pop
in
mov
pop
dec
ror
pop
loope
sbb
fildll
cmp
es
fstpt
or
jae
adc
adc
pop
lock
mov
inc
fstl
mov
jle
adc
sub
enter
mov
and
inc
or
add
ja
cli
xor
jmp
cli
push
je
sti
dec
xchg
test
cmp
fidivs
sbb
pop
orb
xor
dec
orl
mov
mov
lahf
negl
fcompl
mov
jo
mov
cmp
pop
les
hlt
stos
aaa
sub
and
ss
mov
fldcw
stos
shr
push
iret
pop
fstpt
ja
scas
popw
clc
insl
lea
mov
outsb
cmp
inc
ds
sbb
mov
rol
insl
xchg
lods
push
fstpl
hlt
inc
fsubrl
xchg
inc
lcall
lcall
daa
dec
jb
icebp
mov
push
call
or
mov
fisubrl
sbb
in
cmc
stos
pop
or
mov
lods
mov
fmuls
loop,pt
mov
xchg
inc
and
mov
mov
mov
in
push
pop
lds
jp
rorb
cltd
jp
jne
jle
cmp
lods
ja
jbe
popa
pop
outsb
cld
cmp
pop
pop
inc
adc
adc
lret
aam
les
out
std
cmpb
cmp
xchg
fcomps
fstpt
pop
pop
sub
dec
stos
das
xchg
mov
pop
and
imul
loope
inc
cmp
mov
out
icebp
rcrl
or
inc
dec
shrl
cli
imul
dec
xchg
ss
push
jg
push
insb
sbb
mov
fsubr
mov
movsl
aas
jle
shl
sbb
xchg
pop
das
les
sub
adc
jp
les
inc
add
jge
push
mov
and
les
out
pop
cltd
std
icebp
push
orb
in
bound
xlat
lock
imul
int
xchg
aas
and
push
cmpsb
push
in
push
sti
out
inc
inc
mov
push
pop
movl
jb
lcall
notb
adc
xchg
and
jo
and
in
cmovl
mov
sub
mov
mov
mov
movsb
jbe
mov
int
adc
jl
sbb
aaa
loope
push
stc
call
adc
adcb
repz
dec
mov
dec
inc
push
xchg
add
aad
fidivl
push
xchg
ret
imul
jle
mov
out
xorl
lea
inc
push
gs
data16
movsb
mov
cmp
sub
mov
xchg
lahf
outsl
pop
idivl
xor
adc
xor
pop
pop
call
push
rcl
icebp
xchg
in
push
gs
lods
lret
sar
call
int3
sbb
xchg
mov
sub
das
cmp
shrb
out
and
mov
cwtl
in
push
test
pop
or
xchg
imul
cmpsl
rclb
jl
ja
out
push
add
notb
clc
or
out
aad
pop
rcll
insl
pop
andb
add
jecxz
add
mov
jecxz
xlat
and
loopne
fwait
movsb
sbb
pusha
mov
cmpsb
mov
jae
or
jecxz
jecxz
jge
push
xchg
push
cmp
std
insb
mov
imull
and
adc
out
jp
cltd
xor
mov
sub
nop
lods
adc
xchg
lods
dec
bound
inc
and
inc
outsl
scas
std
int3
aas
aas
stos
mov
shrb
or
divb
adc
imul
adc
xor
aam
add
xchg
xlat
sahf
pushf
or
push
lcall
jecxz
into
loop
xchg
repz
lds
jbe
sti
push
xor
fstl
mov
cmp
fildl
adcb
and
or
push
pop
sub
sbb
jnp
lahf
and
movsl
push
cld
stos
jmp
mov
cmp
out
mov
pop
das
movb
pushf
in
mov
dec
dec
adc
stos
pusha
in
inc
inc
out
stc
fwait
subl
in
sub
push
cmp
cmp
nopl
loopew
sbb
mov
push
jnp
push
mov
mov
xor
hlt
add
in
xchg
add
sbb
les
pushf
xchg
or
jge
rorl
xor
mov
aam
xor
push
jecxz
fisubrs
lock
out
xchg
sbb
add
adc
sub
mov
outsl
jmp
push
fnstsw
push
and
adc
mov
int3
cmpsl
jno
test
and
mov
rcr
in
idivl
clc
cmp
ss
jmp
sub
loopne
mov
xchg
xchg
push
mov
in
push
xchg
xchg
pop
cmpsl
mov
adc
out
mov
sbb
push
push
xchg
sbb
xor
or
fbld
mov
ret
add
loope
jmp
inc
pop
aaa
push
out
jbe
addl
cmp
adc
lss
cmp
push
cmpsl
push
or
mov
xchg
pop
outsb
inc
loopne
bound
mov
ja,pn
mov
xor
shr
inc
xchg
syscall
ljmp
loope
and
rcr
lods
call
imul
repz
pop
xor
inc
lock
jnp
xchg
mov
jb
int
rcl
adc
ljmp
inc
add
mov
add
pop
xchg
or
cmp
js
mov
mov
xor
sub
shrl
std
mov
mov
mov
xchg
imul
push
mov
pushf
dec
fcomps
cmp
and
and
dec
dec
cld
fwait
push
movsb
mov
cmp
xchg
fistl
into
or
mov
test
pop
out
sti
cwtl
push
mov
rcr
fsubrp
or
mov
js
test
dec
lock
in
mov
daa
adc
out
push
fwait
int3
jnp
in
jmp
std
or
ret
push
cmp
cs
dec
mov
mov
sub
sbb
push
and
loopne
or
or
fwait
push
or
scas
and
inc
ds
fcomip
inc
mov
xchg
sbb
sbb
pop
pop
add
mov
daa
js
dec
xchg
pop
pop
lret
addl
sub
cmp
add
lds
imul
dec
cmpsb
dec
data16
sub
pop
ror
in
in
incb
cmp
cmp
xchg
loope
daa
movsb
pop
add
and
hlt
mov
lcall
pop
stos
gs
mov
push
mov
add
sbb
outsl
sahf
sbb
pop
inc
sbb
xchg
xor
cmpsl
pop
test
jnp
ds
mov
aaa
js
jo
lahf
aaa
les
hlt
adcb
jnp
test
mov
ds
aad
cmc
repz
jbe
shll
xor
roll
xor
mov
pop
mov
lds
daa
mov
push
pop
fidivs
pop
sub
sub
inc
pusha
mov
push
inc
dec
test
aas
stos
int3
gs
jge
pop
js
xchg
cmp
jbe
mov
test
test
cmp
test
cli
add
insb
pushf
lcall
arpl
loope
cmp
push
xchg
insb
push
stos
pushf
jmp
aam
pushf
adc
pop
inc
insb
jp
das
nop
mov
and
subb
cmp
call
stc
push
int
and
arpl
push
xchg
mov
scas
aad
repnz
mov
fdivp
sub
adc
fnsave
dec
daa
push
xor
xorl
push
sbb
enter
inc
jge
ret
lea
xor
movsb
insb
lret
fwait
inc
arpl
dec
xlat
and
sbb
bound
movsl
aas
stos
pushf
mull
repnz
addr16
mov
cmc
mov
sub
sbb
pop
aaa
add
push
pop
inc
cmpb
fidivs
rorb
push
adc
jmp
push
push
xchg
add
cmpsb
mov
xchg
popa
adc
inc
aas
sbb
adc
jl
sub
and
dec
mov
popa
rolb
imul
ja
cltd
sar
out
pop
shlb
scas
addr16
data16
mov
cmp
insb
cmpsl
loope
arpl
das
mov
pop
or
das
mov
aad
jge
lret
ds
cmpsl
iret
and
lahf
fstpt
scas
pushl
ror
cs
fcomi
outsb
fistps
pop
mov
push
inc
jl
lret
test
xor
cld
mov
mov
push
es
bound
rorl
cmp
mov
dec
lret
and
add
fisubrl
ret
loopne
es
bound
mov
rcrl
fistl
mov
cmpsl
leave
shrl
sub
in
xor
inc
ss
inc
cli
negb
sti
cmp
sarb
movsb
adc
movsb
cmc
xor
sub
stos
sub
inc
je
lods
enter
mov
pop
xchg
out
jge
cli
sub
add
xchg
pop
and
xchg
mov
mov
jg
cli
fdivl
aaa
inc
dec
sbb
and
jno
or
mov
rcr
xchg
pop
mul
mov
xchg
mov
xor
cmc
cmp
mov
push
and
out
mov
sarl
xchg
fstpl
sbb
out
pop
rolb
addr16
push
xor
movsl
mov
sbb
lods
fisubs
popf
ljmp
stos
out
sbb
das
loope
imul
fdivrl
js
push
shlb
subb
mov
cmpsl
pcmpgtd
sahf
inc
in
faddl
jb
adc
scas
sbbb
sub
inc
add
decl
fnstenv
add
div
fcoml
pusha
pop
lahf
sub
pop
fadds
adc
mov
sub
or
mov
inc
push
xlat
lcall
xchg
fsubs
push
sbb
fwait
pop
pop
pop
arpl
mov
xchg
ss
jbe
mov
push
fcmovnu
xor
fs
sub
ljmp
mov
fldl
xchg
js
es
aaa
cmp
mov
hlt
xchg
jae
imul
dec
sub
mov
sub
lock
loop
test
xor
sub
push
lret
lahf
push
inc
ret
out
pop
mov
mov
shll
mov
les
or
jnp
sbb
jmp
lret
sub
test
sbbl
xor
sbb
or
mov
or
sbb
lds
cld
sahf
lahf
cmp
iret
sbb
push
dec
lods
xchg
ss
inc
xor
jb
adc
cmp
cli
mov
lock
inc
sbb
jg
cmpsl
daa
or
mov
shll
mov
push
xor
outsl
cmc
jbe
mov
daa
add
mov
sub
mov
and
cmp
daa
repnz
cmpsb
nop
and
dec
inc
testb
dec
xor
sub
mov
xchg
fdivs
inc
cmp
mov
out
je
mov
dec
jle
leave
mov
pop
je
cld
xchg
outsb
or
roll
pop
add
inc
cli
lahf
leave
push
stos
pop
xchg
pusha
icebp
jle
stos
jne
pushf
adc
jb
int3
push
mov
leave
repnz
mov
out
xor
loope
out
mov
repnz
imul
xor
shll
mov
jne
push
rclb
call
mov
int3
sbb
inc
andl
xor
mov
or
mov
test
xchg
mov
pop
add
add
aam
lcall
ja
cmp
sbbb
pop
cmp
push
lret
inc
test
stc
js
push
out
test
mov
mov
repnz
arpl
adc
push
or
enter
dec
fisttpl
sbbb
dec
call
insb
pop
adc
sub
pop
imul
dec
jb
sti
dec
dec
arpl
adcb
sub
lcall
jae
xor
testl
mov
cltd
sub
jge
insl
shl
pop
aaa
lret
and
and
and
and
sub
repz
sub
dec
icebp
pop
mov
pop
and
xchg
idivl
rcrb
icebp
pop
mov
sub
in
into
pop
cmpb
mov
adc
hlt
popa
fwait
adc
adc
imul
pop
test
sub
cmp
and
dec
mov
xchg
inc
subb
mov
shll
xchg
daa
out
dec
push
sti
jmp
xchg
outsl
dec
nop
push
imul
mov
int
cld
cmpsl
or
mov
pop
shrb
cmp
jle
inc
inc
stos
aam
rorb
mov
fs
pop
sbb
inc
jns
push
lcall
xchg
xor
andb
sbb
mov
rclb
ficompl
and
sub
out
or
dec
and
loop
xor
ljmp
in
or
shll
pop
imul
jmp
push
mov
push
mov
xor
mov
ljmp
xor
scas
pop
mov
or
and
clc
or
mov
cmpb
jge
xlat
add
jnp
aam
ss
mov
leave
rcl
push
insl
mov
mov
sahf
push
sarb
cli
mov
push
jbe
hlt
or
inc
in
or
xchg
ljmp
xor
out
test
pop
pop
jae
and
repz
cmp
xor
dec
mov
mov
fwait
js
rcrl
int
ficomps
xchg
lea
pop
cld
xor
fcomps
jmp
cmp
sar
lods
data16
cvttps2pi
out
imul
or
lods
dec
xor
hlt
push
test
pop
pop
push
inc
add
xchg
sub
in
dec
ljmp
les
lcall
stc
mov
cltd
loop
stc
scas
adc
sub
adc
push
cltd
lds
outsl
daa
mov
fmull
mov
test
int
sub
loope
push
fwait
push
mov
stos
loopne
push
inc
test
and
out
sbb
jae
cmp
adc
in
std
add
add
inc
sub
mov
mov
ja
mov
sub
mov
cmp
cwtl
and
add
les
movsb
cmpsb
stos
and
jecxz
andl
and
lods
in
xor
std
push
add
orb
sub
clc
push
mov
jno
push
sbbl
mov
jl
aad
mov
data16
outsb
adc
movsb
push
xchg
test
icebp
adc
dec
cmovne
lods
repz
scas
mov
add
inc
in
call
das
popa
stos
lahf
jecxz
cltd
sti
xchg
xor
sub
mov
ljmp
push
rcr
or
xor
xchg
pop
lods
mov
cmp
xor
mov
lret
out
sbb
jle
xchg
lds
sahf
push
je
push
stos
movsl
sub
lret
push
mov
inc
sbb
cld
test
in
sbb
stos
lret
xchg
in
leave
push
mov
mov
jnp
jno
ljmp
jnp,pn
jno
mov
mov
inc
lds
pop
mov
push
dec
in
push
mov
push
or
fpatan
clc
pop
cmp
in
or
sbb
mov
popf
push
fiaddl
nop
ss
fsubrp
push
int
mov
adcb
pop
sti
into
test
jle
sub
push
dec
loop
xor
icebp
pop
cltd
push
jnp
jne
push
loopne
cmp
inc
jbe
lcall
int
int3
jns
xchg
pop
test
sub
shl
adc
rorb
int
jecxz
stos
inc
int3
lea
jne
cmpsl
pop
add
jo
inc
jb
pop
xchg
pop
in
pop
or
rcrb
js
lahf
lds
pop
fldl
ret
jo
xchg
fmull
xor
test
sbb
inc
ret
sub
mov
dec
stos
scas
sbb
xor
in
gs
fwait
jnp
and
sbb
scas
mov
dec
outsb
outsl
es
mov
add
rcrb
or
inc
jno
mov
scas
cmp
pop
rcrl
cmp
ljmp
in
dec
mov
cli
push
fbstp
push
pushf
inc
js
lock
sbb
sahf
int3
outsb
in
xchg
mov
in
sbb
out
or
stos
mov
cmp
sub
ja
sbb
adc
mov
mov
adc
pop
mov
stc
mov
ret
incl
jecxz
push
mov
call
and
mov
fsub
sbb
sub
cwtl
push
fistl
push
lret
fisttpll
loop
cmovl
jbe
in
sbb
cmp
lcall
xor
push
cmpl
popf
cs
add
pop
stos
and
cmp
or
sbb
push
xchg
mov
mov
aas
push
dec
les
lahf
lcall
and
out
xchg
subl
roll
push
clc
ss
mov
pop
adcb
aad
pusha
xchg
sbbb
cmc
inc
iret
xor
int
push
data16
dec
sub
cmp
fldenv
cs
aad
and
out
and
and
fbld
pop
nop
fldl2e
lds
xchg
push
je
iret
stos
iret
jmp
push
dec
jae
fbstp
pop
jne
pop
imul
sbb
arpl
fsubl
fstl
repz
cmpsl
nop
jg
adc
adc
adc
fs
leave
mov
ds
scas
mov
in
in
leave
xor
mov
add
imul
mov
mov
ds
pop
les
daa
cmc
lds
dec
std
stc
xchg
test
std
lahf
adc
fisubl
adc
mov
mov
int3
enter
jge
mov
push
inc
repz
sbb
int3
imul
shll
sub
std
rcrb
hlt
mov
jecxz
pop
into
in
lock
lods
push
loopne
movsb
add
call
jmp
repz
sbb
test
das
push
push
sahf
aas
shrl
cmpl
out
pop
inc
jb
xlat
sti
xchg
push
cmc
popf
insb
and
std
cmp
sub
outsl
test
shl
aam
jmp
xor
sub
outsl
pop
movsl
jne
rcl
sub
inc
pop
rorb
jle
ret
or
out
daa
clc
in
push
imul
out
leave
loope
inc
add
popa
clc
shlb
mov
nop
push
jns
mov
std
stc
pusha
sbb
add
lods
or
ret
pop
push
cmpsl
inc
aam
push
sbb
pop
ds
inc
std
out
test
sub
dec
mov
jno
les
push
in
cmp
filds
mov
test
jbe
lea
dec
cmp
pusha
sub
aam
scas
and
fistpll
and
ss
sub
imul
dec
std
dec
into
nop
jb
xor
fcom
or
jmp
push
mov
inc
pop
movsb
mov
sahf
icebp
repz
das
mov
ja
mov
imul
push
or
rorl
jb
xchg
cmpsb
dec
push
andl
pop
xchg
sarb
popf
mov
jle
xor
pop
out
sbb
flds
sub
fsubrs
je
ret
pusha
add
push
add
std
sbb
push
jbe
sub
dec
mov
xchg
dec
into
jns
mov
nop
lcall
mov
aam
jl
ret
dec
loopne
push
adc
xchg
mov
rcll
xchg
sbb
sub
shr
test
xchg
or
loope
adc
aad
cmp
adc
fcomps
dec
pop
ja
mov
dec
fcmovne
jg
dec
lahf
loopne
jae
pop
xchg
mov
xchg
stos
fdivrs
mov
test
imul
mov
jnp
inc
lods
cmp
jno
push
fdivs
adc
push
into
in
fldenv
mov
outsl
in
push
jno
mov
jmp
popf
push
dec
sub
fsubrs
push
cmp
mov
scas
es
sub
mov
jo
loop
out
mov
mov
xor
in
push
xchg
adc
dec
dec
subb
negb
sbb
call
push
push
mov
jge
bnd
rolb
cmp
pop
ljmp
clc
xlat
jmp
mov
cmp
push
in
sub
int
dec
fidivrl
das
aam
rorl
xchg
xchg
fwait
mov
cltd
jmp
dec
lcall
adc
cltd
sbb
outsb
movsb
push
mov
push
pop
sub
and
inc
lahf
data16
fnstsw
cmp
outsl
or
cmp
pop
push
add
leave
aam
popl
fiadds
dec
hlt
into
add
ja
xchg
inc
std
sub
xor
cmp
push
in
out
imul
push
sub
adc
scas
outsb
xchg
cmp
popf
std
mov
fcomps
loop
rol
jnp,pn
mov
or
jp
sbb
sub
jnp
add
stos
cmp
mov
filds
jecxz
mov
and
xor
cs
jp
cltd
sti
inc
mov
cmpsl
xchg
jnp
push
jecxz
push
leave
sarl
push
mov
push
push
jmp
dec
outsb
inc
vstmxcsr
push
or
xchg
imul
cmp
enter
jno
mov
jo
stos
out
or
rorb
pop
adc
ljmp
and
sahf
lahf
testb
add
push
popa
movsb
pop
dec
xchg
imul
cmc
fcoml
pop
rol
xor
mov
inc
jae
bound
icebp
leave
pop
xchg
pop
add
sbb
into
push
adc
xor
push
push
cld
fsts
test
push
cmp
mov
pop
loope
push
das
loopne
cmp
fwait
mov
fucom
jle
repnz
lcall
and
fisubl
sub
repnz
mov
lret
repz
shrb
cmp
push
int
cmp
fsubr
fwait
stos
mov
clc
shll
lds
xchg
addr16
xchg
inc
imull
leave
lods
enter
lret
loopne
mov
andl
js
mov
xor
mov
inc
adc
movsl
out
cmp
shr
xchg
adc
cmp
aad
cmc
in
jns
mov
movsb
loop
xor
sub
pop
clc
lods
rcrb
mov
mov
scas
lods
subb
sti
bnd
lea
or
lds
mov
pop
repz
aad
mov
xor
mov
call
sub
xchg
inc
repz
add
mov
imul
xor
mov
and
adc
std
outsb
add
addr16
xchg
out
cmc
push
pop
pop
push
cmp
test
xlat
jp
dec
mov
sbb
sub
aaa
dec
sub
pop
add
push
stc
iret
push
enter
mov
std
loop
imul
jo
mov
xchg
mov
out
jnp
mov
sub
sbb
mov
pop
xor
rolb
mov
or
and
inc
insl
push
mov
pop
rol
cwtl
outsl
into
jns
and
add
in
test
mov
jge
lods
push
push
or
cmp
and
fisubs
xor
cmp
add
fisttpll
xchg
cmpsb
sbb
sbb
mov
iret
mov
fildl
das
outsb
int
lods
dec
jb
xchg
mov
lds
mov
cltd
push
lods
pop
mov
add
outsl
xor
mulb
loop
js
pop
into
std
outsb
stos
inc
ret
jnp
scas
jle
xor
fmull
inc
push
mov
fwait
mov
push
cmp
jne
outsb
ror
push
add
rcrb
fnstcw
mov
or
cmp
lahf
adc
movsl
xchg
into
mov
or
cmp
and
mov
and
xchg
pop
cwtl
fneni(8087
pop
lahf
mov
adc
es
hlt
push
ds
mov
mov
push
jne
pusha
dec
dec
mov
mov
xchg
repnz
xchg
je
data16
ret
mov
cli
fsubr
push
stos
sets
and
push
test
es
js
xchg
fimuls
out
dec
and
dec
cwtl
xor
xchg
push
add
movsb
clc
push
ljmp
ficompl
xchg
jg
push
sahf
sti
sbb
out
add
lds
dec
sub
jp
mov
inc
cli
sbb
cmc
inc
push
pusha
outsb
lcall
test
inc
pop
pop
pop
loope
mov
mov
test
jns
dec
test
js
dec
imul
push
push
test
mov
or
fadds
fnsetpm(287
mov
sub
fstpt
xor
fs
clc
mov
mov
ljmp
or
lds
pop
fsubrs
push
add
inc
hlt
lds
dec
xchg
aas
les
mov
mov
sub
call
je
aas
cld
sahf
pop
push
sti
pop
push
push
mov
orb
notl
xchg
mov
stos
insl
pop
into
int3
push
adc
mov
jl
pop
xchg
and
xor
pop
rol
pop
dec
in
mov
fistps
fisubl
dec
lods
dec
shrl
jmp
adcb
and
lahf
ret
cwtl
jns
out
fdivp
sub
mov
mov
lods
pop
inc
aaa
mov
ljmp
sub
rol
jb
cmpb
ud0
arpl
test
lret
imul
xor
inc
hlt
jne
orl
adc
mov
lds
mov
iret
lea
sub
mov
mov
pop
xlat
in
jle
jle
daa
inc
ja
pop
xor
xchg
or
arpl
add
or
jecxz
out
dec
das
sub
dec
jge
mov
cwtl
pushf
clc
enter
daa
adc
test
xchg
movsl
call
mull
adc
and
cltd
mov
sub
fcmovb
cmp
pop
inc
fisubl
xor
sub
xlat
aad
ret
pop
bound
subb
lcall
push
cmpsl
inc
add
ljmp
ss
gs
adc
aam
push
push
push
aam
push
mov
inc
mov
mov
test
in
mov
jg
sbb
orl
sar
das
subb
pop
jns
jns
or
sbb
and
jno
cmpsl
pushf
sub
mov
jae
shrl
inc
mov
rcrb
or
leave
dec
stos
out
test
mov
push
xchg
sahf
sbb
dec
lret
push
push
aaa
sbb
or
dec
insb
inc
mov
pop
mov
cmp
adc
outsl
pop
dec
sbb
int3
xchg
mov
xor
in
xor
add
ret
inc
enter
leave
fists
mov
or
fs
push
or
xor
push
fiaddl
inc
stos
push
imul
clc
lret
stos
fdivr
sbb
cmp
adc
popf
jnp
test
sub
mov
push
stos
int3
inc
repz
add
inc
inc
sahf
mov
and
fwait
les
outsb
lahf
inc
cmp
mov
movsl
imul
fwait
es
jg
shrl
push
mov
popa
mov
mov
cs
sahf
jo
loop
lret
aad
fs
stos
scas
sbb
lods
mov
xchg
imul
pop
testb
and
push
jo
test
popa
and
adc
test
dec
outsl
jbe
mov
in
test
adc
shll
inc
push
cmpsb
lcall
push
das
jge
sbb
adc
test
push
pushl
in
stc
sbb
mov
push
in
mov
pop
outsb
mov
mov
xchg
xchg
jle
jg
mov
jg
imul
add
popa
push
pushf
mov
ret
hlt
jbe
into
aam
push
cmpl
push
sti
int3
ffree
mov
movl
add
mov
mov
stos
jae
shl
mov
cmp
out
add
sbb
fs
in
or
mov
lods
pop
xor
jp
sbb
popf
and
test
mov
out
or
push
cmp
xorl
dec
inc
out
add
shll
jmp
jp
insb
fcoml
aas
mov
daa
pop
ret
xor
loope
cwtl
mov
cmp
cmpb
aas
popf
sub
cmpsl
out
and
lods
jl
fimull
xchg
add
js
sub
hlt
lret
lods
popf
add
xchg
pop
cwtl
or
loopne
mov
cli
inc
push
mov
jmp
movsl
adc
or
sub
xchg
in
mov
jl
mov
fsubrs
subb
xor
loop
stos
das
dec
xchg
clc
in
iret
dec
lret
into
jecxz
ds
xchg
xlat
cwtl
mov
fistl
mov
and
lods
mov
push
jp
dec
movsl
push
jle
adc
leave
iret
lods
call
iret
push
addr16
xchg
push
fsubrl
inc
das
je
push
or
mov
movsb
imul
movsl
push
mov
fcompl
jno
inc
push
push
roll
gs
aaa
leave
shll
lds
sub
cld
mov
xor
xor
outsl
mov
push
scas
and
mov
dec
cmpsl
scas
movsl
inc
negl
and
add
adc
fstps
aam
cmp
push
je
cmpsb
js
add
adc
xlat
pop
push
insb
jge
daa
bound
or
les
add
insl
add
cltd
aaa
cmp
aaa
jns
mov
movsl
push
cwtl
sarb
test
cmc
fisubs
pop
adc
and
inc
adc
push
aaa
xor
cltd
pop
movsl
das
mov
sbb
and
test
popf
mov
cmpsl
clc
setno
adc
rcl
and
or
jns
gs
call
push
mov
aam
jg
xchg
inc
scas
loop
loopne
insl
jb
inc
jmp
leave
fstpt
and
mov
mov
pop
adc
gs
push
sub
xor
dec
mov
cmp
dec
jb
sub
dec
or
inc
scas
dec
sbbl
xchg
xchg
rcl
hlt
nop
adcb
sub
into
pop
xor
mov
push
rcrl
mov
add
or
jnp
cmp
xor
or
cmp
das
lcallw
test
scas
mov
insb
or
dec
add
adc
out
int
jb
stc
dec
hlt
xor
mov
not
jecxz
outsl
test
jns
cmc
pop
and
jl
sarl
idivl
in
mov
cmc
sbb
popf
add
mov
fcmovnbe
dec
repz
jmp
fidivl
add
push
lret
jg
ret
mov
fmul
data16
push
stos
daa
cmp
xor
jecxz
jb
mov
mov
pop
pop
call
subl
int
sahf
cmpsl
call
sub
xchg
adc
push
mov
call
movsl
adcb
or
int3
dec
scas
add
cmp
cwtl
shlb
or
jg
andl
adc
mov
popl
jle
enter
popf
add
jl
ja
and
push
push
inc
lds
sbb
or
push
push
pop
loope
lods
daa
icebp
je
into
dec
outsb
icebp
sub
push
sbb
fxch
push
fs
out
xor
jnp
flds
mov
cld
dec
fcoml
popf
sahf
es
ss
bound
out
xchg
mov
into
in
mov
roll
aaa
in
lret
or
movsb
add
push
dec
sub
cmpsl
mov
mov
mov
shrb
es
push
stos
cmc
fsubrl
inc
pop
push
jns
mov
lods
minps
popa
je
push
mov
jge
xor
sbb
aas
lods
aaa
sbb
flds
imul
sbb
mov
push
stos
pop
repz
andb
xchg
push
push
daa
cmc
xor
imul
mov
cmpsb
loope
xlat
dec
pushf
xlat
sbb
das
mov
lods
push
aam
stos
je
incb
mov
fidivrl
push
mov
or
and
adc
sub
pop
adc
cmp
lods
mov
sub
das
imul
or
push
push
cmpl
addr16
mov
imul
sub
hlt
cmp
sbb
xor
movsl
push
ret
and
sub
inc
pop
sub
jecxz
lahf
fmuls
ljmp
mov
pop
dec
mov
add
out
fiadds
adc
movb
add
lds
pop
ss
push
xor
jo
mov
and
add
jle
inc
dec
push
mov
fstp
push
adc
addb
out
xchg
fsubl
push
pop
adc
inc
and
fisubrl
fwait
add
int3
mov
outsb
sbb
xor
pop
cmc
jmp
dec
popa
in
inc
bound
dec
cmp
out
cmovg
add
xchg
insl
lea
push
es
mov
xchg
sarl
add
ret
aam
enter
push
cmova
mov
pop
shrl
cmpb
ret
int
sbb
lods
stc
sahf
out
jnp
iret
xor
and
mov
popa
lea
pusha
out
leave
rcll
and
lods
ja
mov
xor
aam
hlt
inc
test
lds
imul
mov
inc
sbb
mov
sub
outsb
sbb
std
cmp
sbb
sahf
les
loope
in
xor
mov
xchg
pop
aaa
and
mov
xchg
cmc
gs
bound
dec
and
das
sahf
out
inc
and
cmpsl
sti
mov
jno
aad
inc
push
int3
sub
imul
jp
ret
ret
roll
mov
jecxz
mov
outsl
ret
pop
cmp
sarl
mov
mov
push
jg
out
mov
push
dec
push
sbb
pushf
xor
jle
in
fildll
rcl
mov
mov
out
stos
fsts
or
rclb
dec
jns
mov
sub
mov
mov
shl
push
icebp
outsl
inc
push
into
dec
push
push
mov
shrl
mov
cmp
mov
jmp
inc
icebp
movsl
loopne
inc
dec
mov
xor
or
add
mov
or
jecxz
or
out
add
imul
or
movsb
mov
push
cltd
dec
adc
sub
and
dec
adc
inc
sbb
movb
mov
adc
mov
sbb
insb
push
xlat
push
and
testb
cli
neg
stos
inc
mov
ljmp
dec
and
imul
ret
fnsave
pop
out
repnz
mov
sub
loope
pop
les
pop
lret
and
fstpl
sahf
sbb
lds
pop
imul
test
xor
and
dec
lret
std
push
jg
fwait
gs
xchg
imul
or
xor
in
aam
repz
lret
out
sub
mov
andb
imul
dec
dec
cmpsb
testb
arpl
mov
push
je
sti
xchg
jo
aas
xor
pop
sub
and
sub
out
in
inc
xor
mov
sbb
adc
dec
push
or
sahf
mov
rclb
sbb
sub
es
mov
xor
lea
outsl
aam
inc
roll
out
iret
outsb
add
int
mov
push
test
fnsave
testb
cmpsb
jae
hlt
shll
adcl
cmc
xchg
push
scas
and
sub
out
sub
out
jle
sub
loope
add
dec
fists
into
rolb
sub
scas
lcall
push
ficoms
shlb
jmp
lods
dec
adc
rorb
pusha
sub
xchg
mov
popa
sub
sub
jle
repnz
push
out
js
lds
das
dec
mov
out
imul
fdivr
daa
jns
jns
int
cmp
adc
jbe
arpl
xor
mov
aam
fsubr
gs
jno
cli
pop
mov
or
sub
mov
in
test
inc
int
or
adc
add
xorb
and
mov
divl
lods
incb
jae
and
dec
pushf
movsl
pop
lods
sahf
cmp
andb
mov
cmp
pop
int
cmp
imul
adc
in
mov
nop
jbe
mov
mov
mov
xchg
fisubrl
mov
jecxz
shlb
add
or
push
adc
dec
or
jo
sub
in
popa
mov
xchg
dec
repnz
rol
lcall
push
push
mov
mov
dec
jae
test
scas
scas
in
mov
mov
pop
test
dec
xchg
dec
mov
push
jl
xor
in
add
fcomi
mov
mov
lcall
dec
sar
pop
xor
pop
cwtl
sarl
pushf
and
sbb
flds
lock
adc
xor
insb
dec
mov
in
es
mov
pop
sbb
into
test
push
and
in
jno
lods
outsl
scas
in
lods
xor
mov
push
inc
or
lret
jbe
roll
inc
push
jnp
mov
xchg
add
idivb
les
sub
test
ds
xchg
into
aas
lahf
inc
imul
sbb
addl
dec
out
inc
lods
insb
movsl
shr
cmc
push
iret
sbbl
mov
in
mov
out
ljmp
jmp
dec
inc
xor
aad
adc
shl
imul
cld
rorb
sar
jo
cmc
add
xlat
sub
or
lret
adc
and
addr16
insb
and
call
clc
enter
shlb
loopne
sub
mov
jmp
popa
mov
leave
jno
je
or
sub
out
push
pop
movsl
lods
fs
insl
pop
xchg
sub
cmp
ljmp
lret
cmp
js
pop
dec
xchg
pusha
dec
cli
cmp
jecxz
mov
cli
xor
xor
sbb
lock
xor
fadd
mov
cmp
fisubrs
jmp
gs
leave
push
into
rol
loopne
or
lock
cmpsb
ffree
scas
adc
scas
adc
sbb
cwtl
push
sub
addr16
test
xchg
or
or
sahf
enter
jbe
or
mov
and
bound
pop
dec
xor
addr16
stc
cltd
lahf
sbb
stos
inc
imul
jbe
shlb
in
fsts
mov
hlt
jo
sbb
inc
in
mov
ds
scas
and
inc
push
or
sub
cmp
subl
outsl
mov
mov
and
mov
push
push
inc
jnp
int
std
in
shlb
jb
pusha
imul
add
xchg
cmp
ret
xor
lds
push
mov
lahf
push
out
movl
std
and
call
rorl
jb
mov
es
out
les
pop
shlb
xchg
inc
jmp
sti
icebp
mov
or
frstor
cli
js
outsb
popf
xlat
outsb
dec
sahf
mov
xchg
jge
sub
bound
xchg
or
ret
test
pusha
das
jae,pt
mul
mov
mov
add
lods
dec
jmp
sub
push
sub
aam
jb
or
pop
xor
sbbl
cmpsb
aaa
lahf
mov
sub
mov
sub
sbb
cli
test
cli
jmp
push
scas
sbb
js
sub
lret
mov
sub
jge
dec
mov
idivl
mov
pushf
cmp
mov
sahf
add
lea
jb
fdiv
fwait
es
and
sti
fdivrs
mov
inc
push
and
mov
inc
outsl
add
dec
int3
fisubrl
dec
inc
dec
add
frstor
mov
jo
in
jne
push
fwait
mov
mull
pop
jo
adc
mov
jns
push
movd
das
add
sbb
fistpll
sbb
xchg
leave
scas
sbb
loop
mov
es
jmp
cmp
mov
test
hlt
and
daa
or
push
dec
cmp
mov
or
or
dec
call
jmp
inc
inc
push
int3
mov
xor
bswap
or
lods
jmp
bound
leave
push
sub
mov
jmp
insl
iret
sub
fistl
fs
aaa
push
mov
sub
movsl
jno
rorb
lods
lods
cmpb
inc
dec
add
mov
enter
pop
xchg
fcmovbe
dec
pusha
out
testb
xchg
fstpl
into
cmp
push
cmp
stos
sub
movb
push
and
lcall
mov
stc
dec
lods
aad
lods
lods
dec
dec
inc
cld
out
xchg
adc
or
loopne
pop
and
outsl
pop
jl
cwtl
pop
cld
js
outsb
cmc
popf
mov
or
dec
dec
ret
and
sahf
push
outsb
pop
and
push
or
insb
je
pop
ret
insb
xor
mov
psubb
and
push
mov
cmp
fildll
push
jno
push
std
dec
inc
lods
mov
sbb
dec
sub
xor
aad
ljmp
and
dec
sub
jae
sbb
pop
lds
pop
jmp
mov
lahf
jecxz
test
mov
push
mov
jb
ret
mov
lcall
jge
cmp
int3
fdivrs
xchg
filds
jl
negb
jg
shl
or
sbb
sub
xor
test
mov
and
mov
jecxz
cmp
movsb
test
and
sbb
mov
jo
dec
pop
leave
lret
jb
xor
or
sbb
inc
in
out
outsl
cmp
push
lods
and
outsb
xor
and
mov
dec
movsb
and
mov
mov
add
addr16
sbb
push
mov
aam
mov
repnz
add
rorb
fcomps
sbb
jae
push
sahf
and
push
rclb
inc
cmp
loope
sti
pushf
movsl
push
add
sbb
push
mov
push
cmc
stc
or
mov
vshufpd
clc
ficomps
cmp
scas
cmp
insl
push
lret
sub
int
push
cmp
rcl
fidivl
cmp
test
mov
jbe
and
inc
in
cmp
push
jae
in
xlat
xor
pop
jbe
pop
xchg
xchg
loope
xorb
out
add
adc
xor
out
mov
popf
xorl
dec
or
nop
adcl
int3
mov
mov
push
and
mov
push
rclb
adc
pushf
clc
dec
sbb
in
pop
ja
mov
jmp
xchg
mov
andb
or
lods
imul
loopne
sub
lret
sub
dec
xchg
xor
test
outsb
fcmovne
and
fcompl
sub
xor
cwtl
cmp
inc
js
push
sti
xlat
mov
push
push
lea
add
push
ficomps
push
hlt
add
xchg
int
lock
adc
lcall
addb
pop
mov
aaa
cld
cli
sbb
push
addb
mov
cmp
dec
push
adc
xor
pop
shll
cmp
xorl
je
inc
pop
pop
jno
inc
cmp
cld
mulb
sub
addr16
cmpsl
cmpsl
mov
lahf
in
enter
jbe
mov
mov
mov
jno
inc
jae
mov
loope
movsb
xchg
sbbb
sahf
push
lret
jne
es
test
sub
sbb
cmp
mov
sbb
movsb
ja
enter
push
jo
std
stos
mov
push
leave
loopne
scas
iret
xchg
ljmp
sbbb
ret
add
in
test
repnz
jge
sbb
pop
jecxz
loopne
xchg
in
das
pop
mov
test
pop
push
inc
std
ljmp
imul
or
push
mov
rclb
mov
in
fmul
aam
adc
scas
add
jecxz
daa
int3
sbb
xchg
jp
add
dec
adc
jns
cltd
mov
and
inc
sbb
sbb
cmp
icebp
pop
ret
and
xor
pop
inc
push
ffreep
fwait
and
add
push
and
xchg
xor
hlt
aam
push
mov
in
jp
add
mov
mov
mov
mov
mov
cltd
fildl
testl
dec
jmp
insl
xchg
or
aad
inc
imul
push
or
stos
mov
bound
das
cli
mov
test
or
sub
adc
pop
push
xchg
sub
push
jmp
xchg
cmp
add
sbb
pop
pusha
lock
mov
sbb
cmp
inc
jmp
repz
mov
add
call
mov
and
testb
scas
rcr
xchg
lea
cmp
addr16
add
dec
incl
int
sub
mov
icebp
mov
inc
sbb
push
popa
cmp
test
ficoml
loope
insb
add
pusha
js
fwait
and
sub
dec
jo
cmpsb
add
mov
jmp
fcoms
int
flds
xchg
nop
add
into
jmp
mov
fyl2xp1
addr16
adc
arpl
xchg
movsb
add
sbb
cmp
sbb
jle
int
add
stos
enter
in
in
push
xchg
test
push
shlb
push
or
or
xlat
movsl
add
das
mov
dec
sbb
out
sahf
sub
test
dec
test
jmp
jns
jle
mov
inc
fisttpl
push
jecxz
adc
mov
mov
ficoms
xor
jmp
in
add
inc
push
jge
adc
out
inc
pop
add
sub
pop
cld
add
stc
mov
xchg
in
fistps
push
cmpsl
xchg
jp
push
cltd
cmpsb
fs
xchg
ljmp
pop
xchg
arpl
stos
lods
insb
stc
gs
inc
outsl
inc
fcmove
notb
xchg
std
jmp
adc
pop
fisttps
jae,pn
in
dec
push
and
mov
add
mov
imul
out
fbstp
cmpsb
mov
rcrb
adc
fldt
aas
xchg
sbb
mov
add
push
shrl
sub
adc
jg
pusha
sbb
ret
and
cmc
in
sti
push
mov
decb
mov
push
xchg
loope
les
inc
aaa
out
mov
xchg
pop
adc
cld
inc
pop
jnp
test
cmp
dec
mov
lret
ret
scas
mov
mov
xchg
pop
pop
push
fimuls
sub
jge
sarl
xchg
jnp
into
cli
in
mov
add
and
pop
ljmp
rolb
push
out
push
pop
inc
add
pop
daa
jb
xor
sbb
stos
xchg
pop
pop
fildl
sbb
sub
adc
pop
sbb
lcall
lds
mov
push
stc
popa
inc
mov
fwait
push
std
xchg
inc
push
scas
lahf
jnp
jne
addb
vpunpcklbw
xchg
icebp
shll
dec
hlt
or
lea
xchg
sbb
pop
ret
aaa
jp
sbb
and
push
fnstcw
pushf
lcall
or
inc
dec
add
inc
adc
and
icebp
jl
fwait
das
dec
je
frstor
frstor
mov
xor
xchg
or
jns
sbb
pop
insb
or
jne
outsb
mov
sbb
mov
add
xchg
inc
xchg
mov
lods
cmc
xchg
push
cmpl
mov
and
and
jbe
and
sar
cltd
fcmovnu
sbb
xor
mov
ljmp
or
jl
insl
push
fcom
dec
or
pop
xor
fwait
daa
outsb
xchg
pushl
cmp
testb
cmc
int
addr16
call
xor
ret
dec
iret
sub
cmp
dec
neg
sahf
xchg
test
mov
mov
lcall
fst
xor
test
push
cmpsl
inc
sbb
push
xor
lcall
stos
scas
adc
push
sub
lcall
mov
ret
pop
sub
sbb
jecxz
inc
pop
dec
ljmp
push
in
mov
xchg
clc
sbb
sarl
fdivrl
jle
or
in
sbb
int
inc
jle
sbb
mov
fldl
or
jge
bnd
fistps
jnp
test
dec
xor
inc
jae
mov
sbb
pop
and
pusha
push
int3
cltd
xor
notb
pop
test
fmuls
movsb
push
movsb
outsb
jo
shlb
adc
cs
xchg
in
and
in
adc
sub
add
test
push
adc
cltd
sbb
push
jg
mov
adc
xchg
mov
mov
inc
and
jo
ja
je
and
mov
jmp
arpl
roll
or
inc
fldl
cs
jne
in
cs
enter
mov
std
pop
inc
and
xchg
test
xlat
push
jp
mov
loope
push
mov
mov
fnstsw
mov
iret
call
pushf
dec
lea
pusha
outsl
xchg
add
inc
lock
repz
cmpsl
popa
aam
jecxz
xchg
sarb
sbb
lock
add
in
or
lea
in
mov
sub
push
sahf
cmp
imul
testl
xor
mov
in
mov
jl
pop
retw
rorl
lret
js
pop
and
sahf
das
outsb
sub
or
or
aaa
pop
pop
cmc
xor
outsb
inc
add
xchg
adc
pop
or
and
push
mov
inc
insl
mov
push
mov
xchg
stos
sub
lcall
pop
inc
lods
dec
sahf
and
inc
aas
lds
push
ffree
sbb
nop
lcall
cmc
sbb
cmpsl
jg
fbld
mov
dec
inc
movsl
push
test
insb
sbb
adc
cmp
mov
pop
adc
cmp
xchg
sbb
fnstsw
xchg
negl
xchg
push
pop
push
nop
popf
fisubs
jb
lcall
fiaddl
push
pop
cltd
mov
insb
or
aas
push
sub
scas
or
jno
pop
scas
xchg
movsl
stc
leave
pop
push
cltd
inc
pop
dec
jb
jge
test
sub
loopne
sub
in
push
scas
dec
mov
fsubs
mov
mov
enter
je
lods
sets
add
lds
iret
cmp
pop
popa
ret
je
sbb
inc
inc
addb
imull
in
push
lret
add
ljmp
push
mov
ret
sbb
lea
pop
nop
subb
dec
push
je
xchg
je
inc
popa
mov
inc
jae
and
adc
jae
inc
push
sti
xor
jne
movsb
jbe
jmp
sti
adc
fadds
and
inc
in
je
fwait
lret
mov
lea
xor
xchg
pop
inc
mov
add
dec
test
push
mov
outsb
sub
xor
sub
outsl
outsb
pop
xchg
sbb
jae
add
lcall
jp
push
mov
roll
imul
pop
pop
sbb
rcrb
pop
jae
inc
xor
xor
lock
jecxz
cld
shll
inc
jno
rcrb
movsl
jmp
sub
ss
jo
aaa
mov
xor
mov
cwtl
daa
inc
or
sub
insb
sub
jmp
adc
cld
loop
data16
jo
or
rclb
pop
fiadds
in
stc
pop
and
push
inc
andl
dec
es
or
xchg
push
jp
jle
mov
scas
test
dec
mov
cmp
stos
cwtl
adc
test
lret
fimull
jno,pt
daa
jb
push
xlat
cmp
ret
sub
mov
ret
push
adc
out
cmpsl
sub
dec
cmp
fbstp
iret
pushf
out
xchg
loopne
xor
flds
imull
dec
ss
loopne
cli
inc
push
xor
inc
jmp
lock
dec
icebp
sti
jae
inc
jg
cmp
add
push
adc
lock
ljmp
stc
outsl
xchg
mov
in
je
mov
iret
push
in
ljmp
stc
in
push
push
fidivl
adc
jb
dec
jb
fs
adc
cmpsl
mov
or
push
scas
scas
add
adcb
sbb
jmp
cmp
cmp
and
adc
push
shr
aam
xor
sbb
addr16
inc
insl
aam
movsb
enter
lock
dec
pop
add
xchg
jp,pn
lcall
push
divl
xor
in
cmpsl
sbb
leavew
pop
sbb
adc
repnz
adc
call
testl
jge
lret
pop
addr16
enter
jb
ds
push
scas
insl
cmp
mov
dec
inc
in
daa
fisttpll
sub
aam
fcmovb
fiadds
sbb
popf
sbb
dec
xchg
cmpsw
aaa
repnz
movsb
stos
sub
sub
adc
int
cli
jne
adcl
rcrb
in
pop
lcall
add
fstps
sub
ret
dec
pop
xchg
fimull
mov
push
mov
xchg
movsb
mov
aad
jg
push
push
xor
int3
lret
lea
sub
fistl
call
test
scas
add
repz
xor
pop
pop
pop
lods
ss
xchg
cmp
xor
les
cmp
mov
xchg
mov
call
pop
pop
fiadds
xor
fwait
aad
pusha
daa
loopne
aas
mov
sti
loop
xchg
adc
cmp
sbb
popf
adc
imul
in
fimuls
add
xor
sub
jge
ljmp
dec
and
rcl
mov
inc
mov
call
jae
push
icebp
push
es
mov
xchg
pop
into
out
pop
hlt
add
adc
sbb
cmp
mov
sbb
mov
bound
cmp
and
test
jp
lcall
icebp
orl
or
arpl
mov
and
aas
mov
or
rol
jnp
mov
lds
lock
pushf
cmp
aad
add
stos
cmc
cltd
jmp
inc
mov
jb
jne
lret
daa
frstor
sbb
xor
jle
cmp
lods
push
dec
pop
cmpsl
loopne
ret
ret
xor
in
or
mov
cltd
jno
push
and
mov
mov
std
movsl
add
cmp
mov
xchg
lds
sahf
sbb
popa
movl
aad
cwtl
inc
ljmp
mov
mov
prefetchnta
push
sbb
adc
ret
pushf
pop
jne
loop
mov
mov
mov
mov
sbb
movsl
or
push
loope
mov
dec
fdivrl
xor
dec
inc
out
cwtl
mov
adc
xor
std
xchg
push
mov
outsl
adc
jne
fwait
and
xchg
fldl
movsb
pop
iret
int
dec
adc
add
jl
xor
sbb
and
sarb
outsl
gs
jb
push
sti
testl
xchg
stc
push
ja
andl
push
hlt
aas
dec
das
xchg
fisubl
cmp
sub
fdivrp
push
dec
mov
insl
sbb
add
in
push
fisttpl
adc
jl
aam
cld
fwait
es
inc
lods
dec
adc
pop
mov
insl
sbb
aaa
inc
and
les
dec
test
pop
aaa
jmp
mov
and
xorl
xlat
insl
lss
inc
jle
lret
mov
repz
cmp
fcmovne
shr
iret
inc
mov
xchg
into
fcoms
in
iret
add
cmp
addr16
ret
mov
ret
push
mov
outsb
mov
xchg
sbb
add
jp
addr16
in
inc
aaa
dec
dec
push
imul
pop
ficoml
add
pop
cli
outsb
push
and
out
dec
xchg
js
cmp
sahf
shl
lods
sbb
loop
ds
mov
lea
sbb
and
ja
jl
xchg
pop
mov
repnz
sbb
outsb
incb
jns
add
sub
repz
mov
test
xchg
aas
add
xlat
addps
sbb
mov
sub
cmp
jns
inc
xor
mov
push
in
ja
mov
nop
lahf
lahf
inc
xchg
mov
popa
xlat
xchg
push
xchg
sbbl
lret
ret
fnstenv
ds
incb
lret
or
rclb
jbe
daa
movb
ds
and
jecxz
jg
mov
xor
lcall
mov
add
out
fildll
repnz
mov
je
fs
pop
mov
filds
add
add
xchg
push
pop
ja
xchg
sub
mov
xor
movsb
daa
push
fwait
jae
in
push
mov
inc
ja
dec
mov
sub
fmull
mov
mov
pop
out
pushf
sbb
mov
test
fwait
push
jo
repnz
cmp
cs
jle
pop
or
adc
outsb
mov
xor
dec
lcall
fs
and
popf
pop
rorl
mov
out
push
outsl
xchg
mov
pop
ret
add
adc
pop
leave
jae
push
push
scas
outsl
mull
adc
pop
adc
scas
cwtl
jmp
jl
movsl
cmpsl
inc
dec
ss
std
out
pop
inc
sub
inc
pop
pop
pop
inc
adc
or
stc
sub
mov
xor
xlat
or
daa
xchg
xlat
sbb
mov
add
fildll
cld
orb
shlb
pop
loope
push
pushf
leave
mov
mov
inc
loopne
outsb
outsl
mov
pop
scas
scas
cwtl
loope
and
sub
rclb
in
arpl
xchg
sarl
push
xchg
pop
cli
jmp
sub
in
adc
icebp
jmp
in
sbb
push
test
adc
xor
dec
jb
mov
subl
mov
adc
test
outsl
push
inc
loop
leave
lcall
mov
push
repnz
jge
or
repz
loop
sub
sub
inc
in
push
sub
aad
lock
enter
adcl
dec
mov
push
outsl
dec
push
in
popf
js
nop
test
sub
adc
jno
jmp
lcall
mov
and
aam
lret
adcl
cmpsb
push
mov
sub
push
push
data16
cmpsb
daa
cmp
add
adc
fstpt
add
cmp
data16
jns
sbb
stos
out
sub
data16
stos
fnstenv
iret
pop
sbb
mov
inc
pusha
fmull
fstpt
fwait
mov
push
fcompl
and
pop
inc
mulb
hlt
hlt
fwait
or
aas
push
mov
or
or
repnz
dec
or
movsb
lods
mov
das
adc
sbb
popf
movsb
sub
cs
mov
cmpsb
sbb
jae
out
lcall
fcmovnu
lds
jb
lcall
jg
fs
in
xor
xor
push
and
mov
lds
pusha
les
enter
scas
inc
jmp
roll
cmp
lods
movsl
or
xchg
lret
adc
cmp
pop
and
ror
push
sub
inc
outsb
xor
mov
sub
jbe
aas
dec
je
stc
pop
mov
jp
and
mov
adc
popl
out
mov
push
aam
out
imul
in
repz
or
dec
test
imul
fidivs
xchg
cmp
lahf
js
mov
xlat
push
push
cmc
dec
push
out
aas
add
mov
dec
cltd
mov
pop
ja
xchg
fistl
stos
mov
sti
add
rcr
nop
loope
movsl
mov
out
xor
ds
pusha
in
xchg
bound
outsb
xor
sbb
xchg
and
xor
xchg
sub
mov
or
adc
dec
mov
xchg
int
dec
jl
inc
sub
pusha
cmp
dec
inc
xchg
or
faddl
icebp
sub
push
lret
cmp
movsl
jns
mov
add
sub
in
jo
xor
lds
das
adc
jo
arpl
in
bound
scas
push
nop
outsb
lret
cs
ret
and
xor
divb
and
call
cmp
insl
sbb
dec
sub
and
loope
mov
mov
movb
cmpl
adc
mov
pop
mov
sub
sbb
inc
daa
push
or
or
push
pop
sub
or
in
inc
jae
and
cli
inc
lcall
inc
into
and
in
dec
add
pop
cwtl
shrl
pop
cltd
pop
js
cwtl
and
xchg
stos
dec
jle
cmp
mov
jecxz
movsb
and
xchg
and
inc
mov
in
int3
push
inc
into
add
movsl
jmp
in
repnz
xchg
mov
dec
cmp
and
lock
rcrb
pusha
js
inc
adc
jle
sub
xchg
inc
or
fwait
lea
pop
iret
and
add
orl
adc
lea
lret
imul
out
icebp
arpl
lods
loope
push
xor
enter
push
push
repz
es
sarl
loop
fs
frstor
and
mov
mov
sub
subl
outsb
push
ret
sti
fiaddl
push
test
adc
stos
insb
mov
outsb
fistpl
repz
sahf
jno
pop
out
fildll
pop
cmp
mov
loopne
les
lret
mov
cli
push
and
mov
lods
imul
sub
sub
ja
cmc
xlat
and
movsl
cmp
xor
sarl
int
aad
rcr
enter
fidivl
loop
enter
sbb
loopne
addr16
repnz
je
mov
sbb
gs
dec
inc
int
stos
dec
inc
pop
subl
jno
jp
cs
sbb
lds
jae
test
sahf
sbb
jo
push
adc
inc
lret
ror
xorl
jle
sbb
mov
jl
adc
sarb
lret
dec
mov
inc
js
mov
inc
push
pop
mov
sub
enter
cmpsl
push
icebp
push
mov
sbb
repnz
lahf
in
fwait
lahf
xor
xchg
sbb
or
int3
stos
xchg
aas
mov
movsl
in
test
fs
aas
sub
ss
pop
push
push
inc
loope
mov
pop
stc
int
int3
inc
mov
xor
pop
ja
mov
cli
daa
fwait
movsb
mov
pop
cmp
cmc
cmpsb
push
cmp
mov
dec
jns
aad
test
rol
shr
mov
mov
fmuls
aam
mov
cmc
sti
sbb
push
push
sbb
cmpb
mov
dec
dec
ss
imul
test
pop
pop
enter
in
popf
das
popa
cld
adc
addb
pusha
in
xchg
pop
test
loop
mov
pop
jae
add
mov
jae
mov
adc
in
outsl
add
jl
add
in
inc
orl
fs
imul
xchg
pushf
inc
repnz
xor
dec
aad
lock
cmpsb
mov
pop
push
and
and
jg
inc
insl
in
xchg
jae
test
dec
xor
mov
fmuls
or
stos
je
mov
adc
fisttps
hlt
lock
jae
outsl
out
mov
mov
fcmovbe
fbld
pusha
xchg
xor
xchg
rcl
xchg
jo
outsb
cltd
fsubrl
fdivrp
lret
cmp
cli
repz
sti
out
sbbb
aad
fdiv
or
adc
add
jge
inc
xchg
fsubl
cwtl
leave
int
jp
pop
loop
mov
sbb
mov
aam
dec
lds
or
inc
lds
mov
push
dec
mov
out
sub
dec
in
push
test
sahf
push
jl
insl
inc
mov
mov
xlat
jns
out
ss
push
fidivrs
xchg
jp
pop
xchg
jno
sub
hlt
shr
pop
pop
imul
dec
popa
fmul
mull
pop
jne
xor
push
test
out
rorb
pop
sbb
adc
xchg
aam
sub
cmp
and
cwtl
and
or
cs
jnp
mov
in
gs
and
jg
pop
imul
pop
push
lock
std
roll
inc
sub
ss
jmp
insb
cwtl
mov
insl
repz
adc
sub
adc
xor
sti
jnp
dec
ret
cs
pop
dec
inc
mov
mov
and
test
push
and
arpl
enter
roll
popf
sbb
adc
pop
cmp
dec
arpl
cmp
sub
mov
dec
xchg
scas
outsb
xor
mov
pop
addb
add
mov
dec
sahf
pop
cmc
sbb
sub
lret
mov
dec
divb
mov
cwtl
sti
xlat
sub
mov
cmp
mov
jle
add
movsl
inc
jp
addl
in
icebp
inc
dec
pusha
jecxz
mov
adc
sbb
inc
cmpsl
mov
icebp
mov
cs
sbb
fcom
push
sub
inc
fsubrp
pop
pop
inc
lea
fstl
mov
lcall
movsl
lods
mov
mov
mov
push
mov
push
mov
xor
jecxz
cmp
cltd
sub
cmpsb
mov
fwait
mov
cmp
jmp
out
scas
add
in
jo
cmp
dec
mov
jns
je,pt
jecxz
xlat
sub
in
icebp
mov
mov
shlb
leave
pop
xchg
hlt
jl
xlat
pop
daa
fidivrl
incb
and
das
sub
push
stos
repz
sbb
mov
stos
pop
push
ret
sub
popf
mov
mov
fdivrs
cmpsb
ja
sbb
mulb
inc
fnsave
insb
insb
hlt
xchg
popf
ja
popf
out
push
push
dec
dec
mov
nop
dec
negl
fldl
xor
lods
pop
push
ljmp
scas
inc
sbb
add
stc
popf
push
aad
jno
push
cli
mov
aas
add
jge
icebp
and
or
push
mov
pop
push
push
fwait
mov
popa
data16
iret
and
inc
lods
test
mov
mov
sbb
mov
pop
or
stc
or
lods
inc
out
mov
pop
and
test
mov
jmp
dec
lock
out
push
call
outsl
or
xchg
cmpsb
enter
in
pop
cmp
jle
inc
stos
jmp
aad
notb
shrl
sahf
and
cld
fwait
gs
pop
mov
mov
mov
mov
cltd
test
xchg
mov
fisttpl
push
sub
cmpsb
add
xor
pop
xchg
int3
mov
jl
lea
adc
fsubrl
mov
lea
ror
pop
pushf
js
add
xor
xchg
xchg
insb
mov
lret
mov
out
cs
push
mov
pop
add
mov
sub
jno
jge
push
cli
cmp
nop
adc
out
mul
inc
mov
ljmp
pop
jnp
mov
push
insl
filds
mov
lods
jmp
mov
cli
push
mov
lods
or
xchg
cmp
cmp
pop
int
js
hlt
inc
and
mov
adc
jbe
mov
cmp
sub
push
sub
sbb
add
cwtl
mov
inc
movsl
sahf
mov
das
int
mov
jae
cwtl
xor
sbb
pop
sub
mov
js
lds
rorl
ljmp
push
jge
dec
push
int
dec
lret
in
ja
push
pop
fdiv
lods
jmp
movsb
out
shll
cmp
push
daa
or
popf
cmp
or
adc
dec
and
xor
pop
pusha
push
and
jmp
cmp
fcompl
fdivrl
inc
xlat
out
enter
addl
jmp
out
stos
cs
in
sbb
xchg
mov
dec
cli
addl
int
push
cli
jb
ret
cmp
popa
mov
int3
push
sbb
fstps
and
pop
lds
sub
sub
int
cltd
cmp
cmp
imul
adc
push
lcall
inc
shll
stos
shlb
and
adc
push
or
addr16
jbe
cwtl
push
in
dec
pop
aaa
scas
lods
xchg
lret
fisubs
push
hlt
sbb
xchg
mov
outsl
inc
cmpsl
xchg
scas
mov
loopne
xlat
les
or
sub
bound
jmp
jl
sbb
je
or
add
push
sbb
psrlw
sbb
push
int
scas
mov
push
ret
mov
lret
popa
inc
adc
ss
aas
ds
mov
aad
xor
cmp
jmp
push
pop
popa
mov
outsb
cli
push
add
cmp
cmpl
xchg
xor
pop
mov
mov
xchg
push
sbb
loopne
pop
mov
jl
clc
iret
fnsave
pushf
fidivl
stc
adc
add
mov
mov
cmp
fs
cmp
xchg
pop
or
xor
pop
jg
mov
push
xor
pushf
mov
aaa
ret
cmp
sti
loop
jnp
cmpsl
mov
pop
or
lret
ss
mov
xor
add
movl
sti
inc
arpl
and
sub
adc
adc
or
inc
mov
rorb
add
test
sub
jge
fistpl
add
mov
sbb
xchg
push
dec
bswap
repz
popa
into
dec
testl
daa
je
mov
testb
mov
mov
sbb
or
aad
fwait
clc
xchg
xchg
xorl
movsl
pop
cmp
push
xchg
movsb
sbb
sahf
sti
repz
sub
out
pop
out
push
lcall
cmpsl
in
add
mov
mov
cmpsl
or
xor
mov
lods
lods
pop
imul
dec
iret
sbb
shr
push
pop
adc
fs
pop
pop
jge
loopne
in
test
mov
outsb
xor
loopne
push
sub
mov
jl
sbb
sbb
xor
and
stc
sbb
enter
mov
jge
dec
jns
inc
jle
lret
mov
pop
fwait
mov
jmp
cwtl
push
mov
xorl
jge
mull
and
pop
xlat
mov
sbb
push
cmpsb
cmp
lcall
and
mov
add
mov
lcall
mov
dec
lea
jb
imul
cmpsl
jno
lock
pop
aad
std
pusha
add
cmp
mov
arpl
mov
iret
test
insb
dec
mov
sti
insb
pushf
mov
cmp
je
mov
mov
and
mov
fdivrs
add
stos
pop
or
add
mov
mov
mov
cmp
jmp
and
loop
lock
cs
xor
cmp
pop
inc
cmp
mov
repz
aam
cmp
or
mov
enter
dec
inc
add
sub
sub
shrb
dec
pushf
cmp
pop
fisubrl
inc
sub
roll
mov
cmp
mov
mov
jno
inc
mov
popf
sbb
fcomp
xor
pushf
scas
aad
xchg
xor
test
xchg
bound
inc
xor
into
icebp
ret
xchg
mov
xchg
pop
pop
arpl
ds
sub
popa
mov
inc
mov
dec
outsb
and
mov
jl
shrb
repnz
pop
jmp
sub
rcrb
addr16
jno
pop
sub
mov
add
sub
cltd
lret
mov
xchg
shrl
xor
ds
pop
dec
test
xor
or
ret
lret
movsl
and
or
mov
jmp
dec
clc
xchg
das
fwait
mov
sti
iret
jmp
stc
lahf
mov
enter
rol
pop
aam
cmp
jmp
fcmovnb
adc
fisttps
xor
jl
jnp
jecxz
mov
mov
js
popf
scas
dec
stos
mov
or
and
xchg
dec
mov
sahf
call
cmp
push
out
loopne
sub
cmp
jo
adc
and
or
in
dec
pop
cli
sbb
and
enter
mov
insl
xor
xchg
mov
mov
loop
jmp
imul
jnp
adc
lods
mov
dec
xchg
push
pop
test
jl
icebp
add
mov
aam
dec
popf
js
mov
ss
cmp
rcll
jmp
loopne
pop
mov
pop
add
in
cmp
xor
mov
hlt
push
mov
sub
lds
mov
add
mov
mov
imul
jge
xchg
mov
in
repz
test
mov
rol
dec
inc
ds
mov
add
cvttps2pi
sbb
lret
js
mov
icebp
sbb
leave
rcll
js
add
and
sbb
scas
lahf
and
cmc
and
cmp
mov
xor
lods
hlt
mov
cli
popa
and
push
aam
into
xchg
ret
pop
mov
cld
js
mov
enter
int
add
ret
xchg
fsts
aam
adc
cmp
push
jmp
push
test
aas
fisubl
inc
xchg
inc
cld
add
adc
roll
mov
cli
mov
insl
into
pop
roll
sub
sar
and
mov
and
add
mov
xchg
outsl
addb
fmul
test
popf
popf
or
aad
xchg
iret
shrl
push
arpl
ds
mov
inc
popl
mov
insl
test
lret
cli
mov
lock
and
xchg
mov
cmp
jns
push
dec
mov
pop
add
adcl
mov
lock
sub
pop
pop
jp
stc
les
sub
sub
jmp
push
jge
cmpsl
cmp
lea
xchg
xchg
rcr
xchg
lcall
sbb
repnz
mov
mov
addr16
sub
mov
xor
pop
pop
call
out
aam
pop
lahf
mov
mov
aam
mov
fistps
push
and
ret
into
call
or
inc
push
push
jnp
js
jbe
or
cmpsb
xchg
insl
jnp
loopne
sub
in
stc
inc
push
adc
jle
popa
dec
jnp
dec
add
xchg
adc
loope
in
repz
mov
cmc
std
fdivl
es
sbb
pop
sarb
inc
cli
lods
or
lea
sub
mov
dec
mov
xor
repnz
shll
inc
cld
or
cmp
stc
test
shll
cmpl
gs
sub
mov
loopne
addr16
adc
pop
push
jo
add
xchg
fcmovnu
scas
lret
sub
lea
rclb
add
dec
mov
das
hlt
sbb
sbb
nop
and
movsl
mov
daa
dec
mov
cmp
adc
shlb
jl
lock
xor
enter
out
dec
jge
sub
popl
jae
mov
pop
js
push
loopne
arpl
or
frstor
fucomp
js
nop
or
sarl
dec
cmp
mov
sbb
mov
and
pop
sub
sub
adc
jns
jle
push
pop
add
testb
sbb
dec
lcall
and
cmpsb
dec
pop
or
clc
loop
dec
in
sub
pop
sbb
call
sti
sub
push
dec
mov
sti
aad
push
or
js
les
mov
inc
xchg
pusha
hlt
aad
xor
aad
or
inc
sti
idivb
xlat
sub
pop
push
lea
jge
lods
jge
faddl
add
bound
addl
jge
xor
xchg
je
jo
aaa
xor
and
sahf
cmp
sbb
je
dec
aaa
ljmp
cmp
mov
in
imul
je
andb
mov
stos
es
cmp
xchg
inc
xchg
fs
mov
in
insb
mov
mov
pop
repnz
and
add
divb
pop
xlat
mov
imul
and
movl
je
push
push
sbbb
sahf
hlt
xchg
pop
mov
test
inc
test
mov
dec
pop
int3
std
lds
pop
fwait
add
inc
addl
inc
insb
or
hlt
jg
cltd
dec
jo
or
pop
popf
cld
movsl
add
dec
xor
in
jmp
fstl
or
or
dec
movsb
jo
mov
jle
stos
stos
sbb
adcl
dec
cltd
leave
cltd
sahf
pop
add
gs
sub
rcrl
sbb
xchg
inc
and
rcll
mov
icebp
pop
popa
cmpl
shlb
adc
ljmp
imul
cli
pop
mov
inc
dec
movsb
popa
loope
dec
sbb
jle
xchg
sub
add
jl
push
cwtl
fwait
jae
stos
les
push
rorl
std
mov
sti
cmp
sbb
jne
push
sarb
dec
xchg
sub
out
call
xor
dec
cmp
dec
data16
push
and
ss
xchg
mov
in
cwtl
sbb
push
icebp
scas
or
ljmp
int3
push
outsl
sbb
jle
scas
in
mov
sahf
pop
imul
call
aad
cli
and
ret
imulb
lret
push
mov
lods
dec
push
insl
outsb
int
mov
imul
ja
pop
add
mov
pop
mov
sub
aam
inc
xor
sbb
mov
sub
jnp
add
push
dec
mov
ror
jb
dec
repnz
insb
in
cli
pop
mov
and
iret
push
sbbl
mov
les
and
lret
shlb
gs
push
lods
add
jg
std
sbb
and
stos
out
addr16
fldl
jnp
dec
sub
call
xchg
das
dec
push
in
mov
dec
movsb
lahf
or
jae
xchg
sub
inc
in
inc
xchg
outsl
jnp
mov
cld
push
jmp
dec
mov
aam
and
jnp,pt
adcl
add
jg
mov
mov
mov
in
inc
aas
inc
test
push
cli
ret
ss
or
mov
push
xor
jle
add
mov
stc
and
jae
add
mov
or
and
xchg
mov
push
sbb
cs
rcrl
push
mov
sbb
pop
sar
ret
inc
loope
mov
rcl
xchg
scas
xchg
outsl
inc
lcall
or
fldenv
mov
or
out
repz
adc
ss
jecxz
dec
int
in
insb
or
mov
mov
adc
xchg
cltd
mov
imul
mov
or
ds
jnp
int3
das
adc
aam
push
test
push
push
repz
mov
jecxz
pop
in
xor
sub
pop
lds
pop
cmp
xor
pop
or
xor
jecxz,pt
xchg
int3
and
mov
test
imul
mov
jmp
dec
fadds
rclb
cs
or
pusha
and
adc
and
fmull
sbb
or
lods
insl
scas
dec
xchg
imul
int
push
dec
adc
negb
and
pop
test
imulb
jns
mov
in
xchg
dec
and
add
pop
dec
mov
cmc
push
jecxz
in
test
jle
and
pushf
xor
xor
push
push
xor
dec
mov
add
lods
or
mov
mov
inc
adc
pop
xor
push
sub
jp
ret
add
push
stc
nop
movsl
das
xchg
lea
push
pusha
adc
dec
js
xchg
movsb
mov
jnp
pop
flds
cwtl
xor
test
cmp
scas
cmp
ret
mov
dec
repz
xchg
sbb
inc
push
or
sub
std
jae
push
in
mov
aad
lcall
ljmp
xchg
sbb
and
push
mov
mov
mov
xor
out
pusha
into
adc
cmp
in
incl
and
loope
adc
mov
add
inc
jne
fistl
in
mov
adc
stos
lods
adc
xchg
dec
mov
mov
int
adc
xchg
sbb
jge
fildl
loop
pop
xor
pop
out
sub
cli
sti
xor
cwtl
scas
cwtl
rorb
adc
int
test
jp
or
je
mov
cmp
fidivrs
jle
insl
xor
xchg
and
outsb
xor
pop
xor
stc
aaa
push
testl
push
dec
xchg
jbe
arpl
pop
dec
mul
scas
jo
scas
sub
fldenv
pop
icebp
cwtl
sub
jle
call
mov
sbb
push
sahf
imul
ljmp
test
mov
xlat
fadds
xchg
jge
push
fwait
iret
dec
ret
adc
popa
clc
fs
fwait
pop
push
jle
dec
jbe
repz
ss
loopne
ja
movsb
mov
pop
sub
mov
mov
out
add
mov
pop
sbb
cmpsb
cmp
test
add
insb
pusha
pop
outsl
jmp
lcall
sub
push
hlt
data16
pop
fwait
in
negl
sbb
mov
jl
shrb
in
in
jp
test
aad
push
push
xor
lret
pop
and
xchg
mov
xchg
rcrb
call
jp
cmpsl
ret
dec
sub
stos
jae
fdivrl
imul
push
cli
stc
mov
jnp
mov
data16
xchg
or
and
iret
push
imul
shrl
push
pop
arpl
cld
pop
jl
cwtl
int3
fimuls
enter
leave
xchg
mov
push
and
mov
stc
dec
push
loopne
out
xor
mov
xor
fsubrs
flds
or
lock
cmpsb
push
into
loop
js
pop
in
xchg
in
push
leave
popa
in
repz
xor
mov
xchg
xchg
jg
jns
mov
cmp
int3
adc
popf
mov
stc
addb
stos
sbb
cmp
jno
mov
dec
nop
and
push
xchg
ja
mov
mov
leave
inc
sbb
jge
daa
or
pop
out
aas
jmp
xchg
jmp
icebp
sub
stos
stos
lods
es
pop
and
insb
fistl
xor
fildll
jmp
jno
xorl
pop
mov
out
jg
sub
cmp
or
add
mov
jne
shll
jp
rolb
es
lret
in
fildll
sbbl
jle
mov
inc
push
pop
jl
jns
sub
cld
xchg
xchg
pop
inc
jnp
stos
ljmp
stc
inc
test
ss
je
xchg
jnp
aaa
sub
outsb
fs
cmovnp
or
icebp
cli
xchg
inc
push
mov
pushf
and
and
jbe
push
rcll
jecxz
add
sbb
aaa
cmp
xchg
pop
jae
sbb
cmc
xchg
xchg
dec
shlb
sbb
sub
mov
and
fs
sahf
inc
in
sbb
inc
leave
cmp
inc
loop
jmp
dec
sbb
xchg
bnd
fldt
push
fiadds
mov
jno
mov
stc
mov
lods
dec
ljmp
pop
stc
mov
xor
cmpsb
lcall
xchg
cmc
mov
cmp
ror
jle
test
sbb
fcmovb
je
jno
push
sbb
lods
aad
lea
imul
jae
fistps
imul
mov
adc
sub
mov
cmp
pop
loope
jmp
ret
flds
nop
cwtl
mov
pop
cmpsb
stos
xchg
idivb
ret
add
inc
xchg
jmp
gs
cmpsb
xchg
mov
mov
shlb
mov
stc
loop
push
mov
and
jg
jnp
cmp
or
push
xorl
and
imul
loopne
test
stos
mov
pop
stos
push
mov
mov
rcll
push
sbb
ljmp
xchg
xor
cmp
push
pop
pop
add
pusha
push
xor
mov
addb
stos
mov
imul
pop
pop
or
mov
xchg
cmp
lock
into
xlat
mov
int
lret
push
dec
out
mov
jl
cwtl
lock
push
adc
xor
imul
fdivs
icebp
sarl
or
scas
leave
loopne
push
mov
pop
jnp
xor
rorl
notb
std
sbb
fptan
fdivrl
cmp
jno
scas
cltd
lods
or
mov
movsl
mov
call
xor
xchg
dec
inc
imul
inc
xor
test
xchg
stos
sbb
xor
adc
sbb
jbe
jmp
pop
aas
or
xor
or
push
push
stos
push
sub
add
jg
and
sub
pop
aam
jmp
movsb
mov
sahf
sti
and
testl
addr16
lods
push
mov
xor
sbb
inc
add
inc
sbb
cmp
sub
adc
mov
fisttps
nop
shll
xor
inc
dec
jp
lretw
xchg
cli
ja
cmp
sti
addr16
add
mov
mov
pop
xchg
or
addr16
std
call
mov
lea
sbb
aas
and
xchg
xor
out
arpl
sub
push
sbb
lret
sahf
push
lahf
es
pop
lcall
es
pop
xor
jp
push
jb
cld
xchg
insb
dec
dec
adc
add
dec
or
test
mov
es
dec
mov
cmp
jnp
push
inc
es
cltd
pushf
xchg
dec
mov
stc
add
jge
adc
jb
mov
and
inc
in
push
xchg
loope
popf
pop
lock
jl
xorb
push
pop
std
mov
fstl
xchg
pop
outsl
fstpl
test
outsb
outsb
nop
pop
jl
xchg
cmp
test
and
mov
pop
jp
pop
mov
fiadds
shrl
fnsave
push
gs
push
cli
arpl
push
pop
in
adc
addr16
pusha
cltd
mov
imul
sahf
jae
mov
lods
mov
in
mov
and
add
dec
outsl
cmp
sarl
mov
mov
dec
fdecstp
lock
cmp
jnp
pop
jmp
in
test
jle
add
test
sub
mov
dec
rorb
mov
xchg
push
lcall
xchg
jle
mov
int
loope
push
outsl
mov
mov
push
popf
repnz
adc
sub
xchg
inc
jnp
fisttps
inc
stos
adc
mov
mov
popa
xchg
push
out
cmp
sbb
fistl
mov
jne
or
lods
dec
repz
andl
cwtl
cltd
push
dec
scas
inc
xchg
pop
or
pop
cmp
shr
sbb
jl
sub
inc
mov
dec
and
arpl
fmul
jmp
loop
inc
fdivrs
sbb
or
shll
fnstsw
sarb
pop
mov
mov
mov
mov
add
push
add
ja
icebp
pusha
das
adc
mov
add
loopne
pop
xor
pushf
xchg
sub
movsl
jge
mov
xor
leave
aas
js
jno
jmp
lods
mov
xor
jecxz
push
and
xchg
subl
es
js
inc
ja
testb
pop
mov
pop
jbe
adc
push
int3
mov
int
inc
fmul
cmp
sti
mov
leave
cs
jecxz
or
int
je
cltd
adc
adc
lea
test
fs
decb
dec
add
adc
pushf
rorl
test
sti
pop
pop
mov
aad
cmp
scas
sarb
add
pop
adc
xor
push
xchg
push
or
pop
adcl
push
xchg
push
outsb
nop
daa
pop
scas
pop
cmpsl
idivl
cmp
jae
stos
jbe
inc
dec
clc
lods
enter
mov
data16
add
fdivr
pop
pop
ret
dec
push
sbb
cmp
fidivrs
cmp
stos
in
sub
mov
leave
cli
cmpsb
adc
loope
adc
lret
stos
aam
or
cmp
add
test
pop
fildll
inc
or
addr16
roll
or
mov
xor
mov
loopne
ss
push
fisubs
mov
xchg
and
scas
into
mov
inc
ss
xor
adc
adc
pop
rorl
mov
fists
movl
mov
sbb
dec
sub
outsl
push
hlt
repnz
sub
pop
in
fwait
fsubp
mov
stos
sbb
mov
cld
cmp
push
inc
pop
cli
inc
fisttpll
aaa
gs
pop
xchg
or
pop
into
cltd
xchg
pop
decl
mov
mov
mov
or
dec
sub
cmpsb
mov
into
push
inc
arpl
into
in
subb
repz
and
xor
in
adc
sub
rdmsr
aam
cld
xchg
xor
mov
int
mov
pushf
out
pop
xchg
in
inc
mov
pop
daa
popa
inc
inc
in
mov
lds
movsb
addb
cli
dec
scas
testl
mov
and
push
fnstenv
mov
xor
mov
data16
pop
jnp
xor
lret
or
stc
nop
push
dec
pushf
push
das
pop
cmp
fcompl
xor
xor
cmp
repnz
in
sub
aaa
push
in
in
es
lahf
add
push
scas
add
pop
loopne
fisttpl
imul
stos
ret
jae
sti
les
fisubrl
push
dec
xchg
pop
xor
stc
into
mov
out
inc
push
xchg
repz
pop
pop
mov
push
mov
sbb
cmp
sub
or
mov
outsl
addl
in
sahf
repnz
sbb
sahf
bound
ret
out
shll
mov
aas
std
add
loopne
push
enter
test
jg
lods
orb
push
and
mov
lock
dec
pop
fistpl
sub
int
pop
push
add
popf
dec
and
ss
test
pop
mov
mov
jae
push
adc
xor
mov
rcrb
jae
nop
cli
cltd
negl
es
shll
imul
and
add
stc
ret
in
sub
pop
int
ss
jp
jno
imul
xorl
mov
mov
leave
outsl
sbb
mov
push
into
scas
dec
mov
lcall
orb
pop
add
and
inc
sub
inc
aam
jmp
lret
fidivl
xor
push
fcmovu
sar
mov
xchg
xchg
mov
or
cmp
inc
dec
and
fwait
adc
pop
in
push
mov
push
xor
xor
pop
xchg
pop
sbb
in
add
aaa
xor
xor
jecxz
jb
or
test
jnp
or
sub
idivl
aas
or
cmc
pop
test
cmp
inc
adc
mov
mov
pop
add
and
push
popa
rorl
inc
pop
pop
ret
pop
mov
adc
xchg
shrl
and
jns
iret
lret
repnz
nop
call
outsb
fwait
mov
xor
sbb
mov
ss
pop
mov
ljmp
mov
ret
mov
aas
leave
mov
shl
repnz
push
ljmp
push
mov
and
xchg
xor
xchg
cmpl
imul
faddl
sub
mov
mov
xlat
sub
pop
loop
cld
enter
js
mov
scas
xor
dec
sub
inc
sbb
aaa
jmp
or
jbe
ds
shl
lock
std
iret
negl
aam
pop
mov
add
pop
stc
test
cld
aad
or
ficoms
jne
bnd
pop
or
sbb
cld
jge
pop
mov
sbb
in
movsb
push
xor
les
popa
and
movsb
sub
test
xchg
mov
jo
jecxz
sub
jns
imul
icebp
xor
jmp
gs
lcall
adc
fcompl
cltd
inc
and
daa
lret
add
pop
jecxz
aaa
mov
pop
sbb
pop
jno
dec
inc
sbb
lock
into
lcall
je
xchg
data16
scas
push
cld
sbb
mov
nop
mov
dec
data16
sub
pop
incl
jmp
cmpsl
leave
sti
lret
or
mov
jmp
nop
add
cmpb
cmpl
pop
fwait
mov
clc
inc
lahf
shrb
mov
sbb
mov
xor
jb
pop
loop
inc
cmc
sub
das
imul
jne
outsb
jle
out
pop
popa
rcrl
fwait
mov
add
pop
sub
std
jecxz
jg
jnp
popf
push
mov
jl
fmulp
addr16
stos
aaa
rep
xchg
pop
sbb
add
lds
mov
xlat
or
jne
mov
mov
mov
scas
aad
adc
loop
dec
mov
test
dec
mov
adc
mov
jns
fists
fimull
es
pop
rcl
imul
mov
gs
sub
shl
cmp
cmp
addr16
dec
bound
aas
pop
mov
inc
dec
inc
lds
outsb
inc
push
jnp
and
jl
mov
into
inc
cmp
stos
push
mov
sbb
dec
jbe
adc
inc
mov
jg
out
clc
jo
pop
les
out
mov
jb
call
jg
andb
pop
into
sub
pop
es
xchg
mov
add
inc
jb
inc
fldt
outsb
fistpl
ja
inc
xor
push
or
add
push
push
orb
dec
fmull
into
push
xor
fcomps
or
repnz
clc
fisubrl
testl
sahf
cmpsb
outsb
mov
imul
aas
or
movsl
adc
bound
dec
les
sbb
dec
jp
imul
test
dec
xor
mov
dec
adc
shlb
ret
adc
xchg
pop
fcomi
xchg
loopne
inc
sbb
push
setnp
or
imul
sbb
popf
cmp
add
movsb
addr16
adc
dec
pop
mov
or
pusha
adc
sbbl
roll
mov
into
xor
push
and
xchg
hlt
cmpsb
rcr
xchg
jnp,pn
and
mov
adc
aad
lcall
cmp
lret
push
pop
sbb
sub
push
inc
pop
pop
lods
mov
sahf
mov
xchg
or
inc
add
jmp
or
push
push
fidivrl
mov
push
lcall
shl
mov
aam
adc
xor
push
push
push
cmc
not
loopne
fdivp
or
or
xchg
dec
xor
pop
cmp
cmp
adc
push
jl
xlat
jg
test
pop
mov
adc
cltd
jp
pop
or
pop
push
fucom
daa
outsb
cld
push
or
notl
fcomp
lret
mov
mov
repnz
mov
in
and
sub
add
aaa
or
test
cmp
pop
ds
leave
repnz
repz
lds
pop
shll
out
dec
cmpl
xchg
jbe
idivl
mov
mov
mov
test
sbb
push
jo
test
iret
push
sbb
pop
push
mov
jp
or
fs
jns
dec
inc
dec
sbb
mov
cmpsl
lock
test
jmp
mov
mov
mov
stos
xchg
das
push
sub
pop
sahf
dec
push
pop
xor
xor
push
gs
xchg
in
xchg
cli
adc
fmull
scas
inc
cld
std
inc
jp
add
mov
lcall
jmp
mov
cltd
rorb
cltd
outsb
push
imul
in
test
mov
in
inc
icebp
rcrl
cmp
imul
jmp
shll
mov
lret
loop
cltd
test
mov
dec
popa
xchg
fsubrl
and
push
in
ja
int
jb
mov
insb
icebp
mull
pop
outsb
arpl
shrb
add
hlt
je
or
sbb
out
cwtl
iretw
nop
movsl
mov
daa
adc
dec
nop
xchg
and
mov
jae
imulb
idivb
cs
out
lahf
ja
inc
out
stos
ret
mov
push
movsl
lret
arpl
inc
and
mov
and
adc
and
jp
repz
ss
ret
leave
cwtl
mov
push
mov
or
and
sub
inc
pop
push
pusha
dec
es
mov
sub
cmp
call
into
aam
cld
out
lea
ss
stos
push
aaa
mov
aam
xor
jecxz
or
out
gs
mov
pop
enter
mov
lret
dec
push
or
ss
lret
rcrl
fwait
mov
repz
mov
hlt
mov
decl
mov
pusha
std
inc
xor
jl
jbe
pop
xor
stos
in
popa
adc
cs
loopne
faddl
enter
cmp
mov
xchg
jecxz
in
jbe
inc
or
xlat
test
and
pop
sbb
add
xchg
lock
and
inc
out
insl
mov
pusha
adc
test
fsts
pushf
jecxz
jg
fsubl
out
fnstenv
shr
sbb
test
jno
mov
inc
lret
xor
scas
push
adc
or
xor
dec
mov
aam
bound
hlt
jg
filds
in
sub
rcll
or
pop
jge
les
cmpsb
jbe
add
xchg
adc
out
hlt
add
mov
pushf
or
jnp
test
lret
and
push
inc
in
shr
add
or
pop
ret
test
ret
mov
cltd
gs
xchg
mov
ja
pop
inc
lcall
idivl
sbb
test
xlat
in
cmpsb
movsl
cld
insb
or
lret
jge
data16
daa
push
into
mov
mov
adc
inc
adc
cmp
dec
xor
xor
test
adc
inc
inc
xor
or
mov
mov
icebp
shrb
mov
cs
test
fdivl
jb
leave
mov
arpl
lds
push
pop
adc
mov
dec
mov
jmp
jp
cmp
xchg
xor
popf
add
dec
sub
sub
rcl
loopne
sub
and
push
cmp
inc
jbe
mov
out
pop
mov
xchg
shlb
test
loop
mov
mov
cld
adc
xchg
xchg
jae
or
stos
mov
lahf
sarb
imul
fcmovu
jl
xlat
sub
add
sub
mov
pop
pop
cwtl
rcrl
push
mov
dec
pop
mov
and
nop
inc
ss
dec
out
sub
cmp
mov
mov
push
xor
pusha
lods
mov
inc
or
clc
shll
and
in
arpl
subb
shlb
iret
mov
je
push
inc
call
jnp
hlt
jl
jge
push
mov
sbb
lock
mov
test
clc
loopne
mov
cwtl
xor
fsubrp
dec
mov
insb
jne
clc
int
lock
jae
cmp
sbb
test
adc
sbb
mov
dec
insl
pop
ret
sbb
mov
push
leave
stos
pop
sub
jg
pusha
fucomp
fisttps
and
xchg
hlt
into
test
paddq
lods
fdivl
mov
mov
mov
into
or
cmp
sbbb
in
rolb
rcl
xor
jb
mov
fistpl
and
jg
cmc
xchg
int
pop
lahf
add
lock
stos
test
popf
ret
pop
pop
adc
sub
sub
mov
xchg
in
je
adc
lods
mov
mov
in
rol
push
pop
cmp
popf
lds
mov
push
sub
push
jg
fisubrs
ljmp
fidivs
fcmovu
jp
mov
lcall
sarb
cmp
push
aad
push
dec
and
aas
out
mov
inc
scas
enter
out
call
sbb
mov
xor
call
adcl
imul
xchg
pushf
pop
fisubl
add
icebp
push
aaa
push
pusha
xchg
pop
jp
and
add
movsb
push
fcomip
sub
std
sbb
cli
sbb
push
add
dec
sbb
pushf
and
adc
aaa
lret
pop
in
pop
mov
leave
inc
mov
hlt
push
adc
jno
mov
fisubrl
push
or
pop
dec
imull
jecxz
loopne
adc
stos
push
inc
xchg
push
divb
aad
es
push
movsb
push
xchg
out
jmp
inc
pop
push
js
jnp
push
inc
fs
enter
sbb
hlt
adc
xorb
xchg
adc
icebp
push
je
imul
dec
jg
test
jle
inc
jae
mov
cmpsb
lret
push
mov
sub
push
bound
xor
cmc
movsb
mov
fdivs
les
nop
stos
pop
pop
movl
jo
aam
aad
and
test
push
jno
int
fucomp
ljmp
leave
lahf
add
mov
mov
in
jl
xchg
adc
cmp
lods
lds
outsl
push
fmuls
sbb
pop
loopne
je
xchg
xor
sbb
mov
xor
addr16
rcl
js
stos
insb
sub
push
mov
jmp
dec
clc
cmp
mov
mov
xchg
mov
mov
stos
ja
ljmp
je
pop
and
mov
xchg
or
xchg
lahf
dec
push
mov
or
scas
cmp
sbb
cmp
xchg
mov
notb
rcll
fstl
ret
dec
cltd
ret
ja
mov
xchg
in
cmp
cltd
xchg
mov
rcrl
negb
xchg
pop
call
jge
lock
cwtl
js
repz
inc
ss
jno
sbb
pop
sbb
mov
jbe
jno
cwtl
cltd
aas
ds
leave
mov
outsb
dec
pop
xchg
jl
mov
fcomps
or
dec
mul
fsubrs
test
sarb
sub
in
sub
jecxz
dec
in
mov
sbb
sub
dec
cmpsb
popf
loopne
les
mov
stos
add
aaa
std
mov
push
pushl
enter
in
sub
fnstcw
push
cli
cs
sub
stos
adc
cmpsb
std
mov
add
mov
jle
and
loop
and
lock
pop
stc
mov
jp
adc
adc
jp
test
aam
adc
movsl
sub
jo
jo
or
mov
push
sahf
sbb
add
jne
push
cmp
sub
leave
cmpsb
mov
push
mov
xor
and
fwait
add
daa
cli
es
in
sahf
mov
not
add
push
xchg
jmp
mov
sti
jno
and
in
shlb
adc
in
sbb
int3
das
inc
xchg
bound
imul
cmpsl
mov
inc
pop
out
and
cmovbe
fcompl
mov
aaa
rorb
push
jp
or
movsb
and
bound
jmp
lea
mov
dec
jae,pn
xor
out
cmp
jae
sti
test
xchg
pop
mov
mov
lds
fwait
shrl
loop
jge
loope
rcr
jle
lcall
mov
and
lahf
sub
sbb
sub
popa
or
mov
int
pop
insl
cmp
pop
push
add
enter
mov
pusha
sub
pushf
dec
ret
cmp
cmpsl
jo
push
out
in
ljmp
jae
rorl
push
jne
xchg
mov
nop
test
dec
test
fisubrs
jp
push
sub
fcoml
repz
mov
push
fstps
aaa
cmp
and
mov
jp
dec
out
and
mov
add
mov
insl
mov
xorb
mov
mov
movd
xlat
test
push
sub
jae
popa
mov
rep
test
jle
and
out
leave
xorb
fisubrl
inc
xlat
je
mov
and
imul
test
cmpsl
cld
xor
mov
in
jb
pop
ret
add
mov
xchg
iret
pop
in
mov
je
dec
add
outsl
mov
insl
std
mov
push
icebp
jno
mov
jne
cmp
sbb
jo
sbb
sub
mov
call
xor
subl
imul
pop
addb
movsl
mov
ret
fildll
pusha
popa
jbe
and
jl
arpl
adc
mov
test
mov
leave
mov
shlb
pop
sub
and
pop
xor
dec
jns
mov
jge
out
pop
cmpsb
daa
mov
les
jg
ret
sti
mov
lea
cmp
popf
out
nop
cwtl
push
ret
mov
jno
or
iret
orl
out
ret
jo
cwtl
mov
lods
add
inc
out
adc
mov
jo
in
sbb
es
hlt
push
xchg
insl
jge
inc
mov
xor
xchg
ja
xor
adc
mov
xor
fcmovnbe
adc
cmpsb
int3
js
loope
into
inc
mov
idivb
scas
xor
sub
mov
pop
js
pop
cmp
fsubrs
lods
dec
jne
push
ja
es
test
or
ss
mov
lcall
dec
mov
shl
xchg
imul
scas
pop
mov
push
in
jecxz
adc
xchg
or
out
inc
jbe
mov
ret
aad
mov
imul
and
aad
data16
pop
pop
shlb
jl
mov
cmp
fwait
sbb
cmpsl
dec
cmp
jmp
and
aas
mov
pop
cltd
mov
mov
orl
orb
rcrb
mov
sub
dec
jmp
or
popf
call
das
jns
cli
or
int3
sbb
adc
loop
push
fdivrs
arpl
add
push
xlat
mov
sbb
scas
das
inc
sub
ss
sbbb
arpl
test
and
xchg
cmp
into
test
leave
pusha
push
inc
add
fildll
daa
mov
mov
outsb
ret
mov
es
push
cmc
xchg
push
mov
xchg
ja
xor
leave
jo
xchg
jne
adc
fbld
test
in
cmpsl
inc
jnp
or
es
popf
adc
insb
pushf
add
popf
inc
setle
and
in
or
mov
mov
loopne
cmc
cmp
loope
inc
out
rcr
arpl
push
std
dec
je
xchg
gs
inc
jae
out
pop
lret
popl
pop
xchg
ret
stc
xchg
pop
add
mulb
cmp
sbb
mov
pushf
das
adc
jnp
imul
not
mov
in
mov
lret
mov
daa
pop
popa
inc
repz
sub
and
mov
fcmovb
xor
insl
mov
push
mov
mov
dec
dec
push
and
and
lods
aam
out
xchg
mov
and
cmp
lds
adc
mov
add
das
loopne
out
push
add
jecxz
jmp
mov
jno
testb
js
or
nop
pop
stos
jbe
nop
xchg
inc
leave
test
fbld
dec
inc
mov
iret
sbb
ds
xor
sub
mov
aad
lcall
outsl
push
sti
mov
push
in
jle
xor
dec
in
adc
pop
jo
push
lcall
jmp
pop
or
push
cmp
sub
and
mov
sbb
inc
loopne
dec
fnstsw
mov
hlt
pop
clc
jge
int
repnz
pop
or
outsl
jl
dec
loop
rol
daa
sbb
cmc
fucomip
add
sbb
stc
dec
daa
std
cmpsb
insb
test
mov
mov
pop
mov
fdivs
xor
pop
jle
ja
adc
sub
or
pop
dec
and
xchg
lahf
lret
mov
iret
sub
pusha
aaa
icebp
rorl
inc
scas
int
xchg
sti
mov
arpl
and
lods
sarl
scas
mov
ffree
and
movsb
push
adcl
test
ret
or
dec
sbb
dec
xor
clc
popa
lret
pop
shr
push
call
clc
ret
sbb
mov
jecxz
enter
sbb
addr16
out
jmp
das
stos
sub
sub
movsl
mov
sbb
gs
xor
inc
jno
cltd
test
out
sub
push
mov
fcmovu
das
lret
popa
jnp
fst
aas
movsb
push
adc
idivw
mov
cli
lods
sbb
cmp
mov
mov
popa
inc
rolb
sub
inc
sbb
mov
jae
and
jp
jp
aam
rorb
imul
or
adc
mov
jne
sti
cmp
cmpsb
rolb
lcall
mov
sub
lea
dec
movsb
jbe
rcll
pop
daa
fisttpll
xchg
mov
pop
cmp
stos
ljmp
and
jmp
xchg
ficoml
push
pushf
jecxz
add
popa
cmpsl
les
jns
ja
mov
jmp
push
jecxz
mov
and
and
inc
popf
or
mov
cmp
enter
sbb
pushf
pop
ja
loop
jg
dec
leave
mov
pop
sub
int3
xchg
xchg
cmp
lods
mov
push
bound
stos
scas
push
cmpsb
and
stos
popf
scas
and
adc
cltd
aam
in
ret
pop
imul
push
and
sbb
imul
jmp
jl
mov
push
fdivrs
and
stos
shr
push
aam
movsb
add
repnz
push
mov
js
push
fwait
xchg
cmp
mov
testl
mov
fidivs
data16
test
cmc
lods
out
les
xor
or
dec
faddl
xchg
mov
pushf
cs
movsb
ds
or
aad
int3
es
insl
pop
add
lahf
insl
mov
enter
dec
mov
mov
xchg
cmp
and
xchg
pop
pop
xor
out
pop
aam
cwtl
aas
jnp
jp
xchg
in
imul
cmpsl
inc
pop
in
sbb
jl
rorb
je
cmp
cmp
lret
mov
jle
lea
adcb
lock
shr
das
lret
inc
push
imul
mov
sbb
push
push
daa
fsubp
pop
test
jbe
ds
lea
repnz
scas
jecxz
fisubs
xchg
cmp
rcrl
dec
std
sub
ja
fbstp
or
fisubs
dec
clc
popf
out
push
pop
sub
pop
shrb
lds
rolb
adcl
movsl
out
dec
int
mov
push
sbb
and
loopne
and
out
mov
mov
repnz
pop
es
out
mov
push
mov
pop
cmp
jae
cld
mov
inc
jg
xchg
test
popa
ljmp
mov
inc
jecxz
jg
clc
cltd
cwtl
mov
btrl
cli
mov
rep
sbb
aas
or
es
pop
loope,pt
adc
cmpb
nop
movsb
cmpsb
repnz
cmp
rorl
stc
cs
lret
mov
inc
add
dec
outsl
call
push
rorb
push
les
cmc
or
and
out
test
mov
repz
mov
jmp
sbb
xlat
cmp
jge
lahf
repz
shll
enter
lods
jnp
sahf
adcb
ficoms
lods
test
out
mov
jmp
loopne
adc
dec
jo
lock
fwait
ja
inc
outsl
mov
outsl
lret
jmp
jge
jns
mov
nop
mov
mov
add
or
xlat
out
cmp
mov
xchg
mov
xchg
mov
xor
sbb
jo
rorb
pop
sub
out
add
sbb
lahf
adc
dec
add
inc
sub
inc
ror
out
jnp
testl
enter
aas
fsts
and
popf
aad
add
out
lock
add
clc
xchg
stos
xchg
mov
add
mov
movsl
lahf
or
lcall
mov
inc
adc
mov
stos
in
and
inc
int
scas
movsb
fstpl
inc
cmpsb
sbb
js
shll
push
scas
das
fnstsw
inc
and
mov
divl
inc
dec
subl
xchg
js
xor
sub
loope
imul
push
inc
stos
rclb
jl
leave
lcall
repnz
stos
pop
push
inc
add
sub
nop
sub
clc
adc
das
sbbl
mov
inc
pop
push
mov
in
mov
test
data16
or
arpl
scas
push
data16
and
push
dec
mov
int
lret
hlt
inc
mov
xor
pminub
repz
inc
push
mov
pop
enter
int
adc
and
cmpsb
ljmp
das
pop
adc
imul
jae
gs
or
and
cld
aas
lret
daa
js
daa
jnp
bt
aam
xchg
lret
lret
mov
or
jo
in
jmp
cmp
ds
into
mov
jle
xchg
jne
std
push
sti
aad
sub
enter
sub
outsb
mov
mov
mov
adc
sub
scas
std
mov
je
adc
jmp
adc
xchg
sub
adc
mov
sbb
lea
addr16
xorl
inc
xchg
xchg
stc
jge
push
fidivrs
jl
std
ret
call
enter
push
mov
cwtl
inc
test
or
xchg
pop
push
cwtl
dec
push
faddl
mov
mov
decb
push
pop
adc
jae
dec
xor
je
stos
fistpl
in
push
lcall
xchg
mov
stc
popl
gs
and
sub
lahf
jmp
lar
xchg
mov
rcll
das
into
or
jge
pop
push
sub
mov
or
dec
gs
pop
cmp
sub
xor
xchg
pop
fistpll
xchg
cld
enter
mov
inc
sub
and
push
addr16
and
jo
dec
and
out
das
sbb
sbb
into
cwtl
adc
sbb
test
add
jp
sbb
sub
stos
andb
pop
lret
xor
jne
negb
ja
mov
mov
sbb
cltd
inc
negl
inc
sub
in
aaa
and
dec
xor
jl
out
dec
fadds
jno
jo
xor
dec
and
xchg
and
mov
out
push
aaa
stos
bswap
repz
hlt
cmp
cmpsb
jo
das
mov
mov
add
or
addr16
push
xchg
sbb
push
sub
cmpsl
je
shlb
lret
dec
out
add
jge
fnstsw
jb
cmpsl
mov
scas
out
mov
out
adc
mov
xchg
and
out
in
in
add
repnz
gs
movsl
cmp
mov
push
stos
repnz
ja
sarb
pop
xor
dec
test
pop
push
popf
icebp
dec
daa
jle
fs
push
add
jp
repz
pop
sbb
dec
in
xor
in
fdivrs
imul
es
xchg
add
cmp
inc
and
sub
xor
and
adc
cmpsl
rcr
out
dec
cmpsl
mov
xchg
push
mov
push
xor
pop
cld
jg
test
xorb
push
pusha
bound
sub
mov
sub
hlt
sub
xor
out
mov
leave
pusha
jne
lock
push
lods
mov
dec
pushf
dec
fimuls
das
aaa
or
mov
nop
push
ja
mov
adc
and
pop
jp
jge
loop
cmpsl
mov
mov
lock
cs
lret
xchg
bound
subb
pop
ja
xchg
or
aad
sub
lret
mov
das
les
sahf
pop
aas
aaa
mov
xlat
adc
test
xchg
movsb
xor
loop
add
inc
out
pushf
jg
or
pop
cmp
test
outsl
insl
push
sbb
insl
popa
jg
dec
ficomps
add
stc
mov
inc
add
push
fwait
adc
cwtl
rcr
popa
jns
and
push
icebp
mov
mov
xchg
loope
jbe
lds
dec
rcll
lahf
hlt
addb
mov
xor
jmp
xchg
jo
dec
pop
push
dec
les
shlb
adc
add
fsubr
pop
mov
mov
lods
mov
sbbl
scas
imul
sbb
cmp
jbe
xchg
push
pop
idivb
addl
cmpsb
out
ret
std
stos
sub
test
sub
sbb
ret
fwait
lret
fdivr
mov
int3
ficoml
xor
outsb
repnz
rcrl
inc
dec
popa
mov
insl
outsb
jg
fdivrs
sub
mov
push
test
inc
dec
sub
cmpsb
sbb
call
push
stos
lea
aad
inc
add
adc
mov
push
ljmp
pop
repz
dec
mov
loop
xchg
sti
jae
fsubl
ficompl
fwait
hlt
insl
xchg
mov
jge
inc
or
or
out
int3
repz
xchg
dec
fwait
mov
or
movsb
ret
adc
cmp
gs
mov
cld
pushf
repnz
lea
mov
outsl
ja
pop
rorl
addr16
sahf
inc
cmp
pop
xchg
mov
cli
push
ret
out
cmp
fnstcw
mov
in
ljmp
pop
in
rolb
test
movl
xchg
out
cmpsb
pop
push
lea
aaa
outsl
jmp
int
mov
mov
jo
in
adc
xor
push
fwait
sub
and
gs
add
jns
push
and
add
hlt
xchg
out
les
imul
xchg
and
jno
dec
pop
sub
mov
test
stos
test
mov
outsl
mov
xchg
rcrl
imul
mov
inc
test
add
fstp
lcall
cmp
repnz
adc
mov
pop
mov
sub
mov
fwait
jo
stc
popa
cmp
sarb
add
dec
enter
mov
push
in
es
push
lods
aas
cmp
push
mov
stos
adc
xorb
out
xchg
xchg
lret
pushf
int
or
iret
flds
stos
xchg
dec
ret
sub
jmp
push
push
popa
mov
dec
push
mov
mov
rcrb
push
pop
lcall
xchg
xchg
movsb
or
or
cmp
inc
sub
lods
or
jp
sub
jp
mov
fdivl
xlat
xchg
add
pop
cmpsl
mov
jp
insl
out
mov
cmpsb
pop
mov
div
sbb
cmp
cltd
sbb
sub
add
lret
mov
sbb
or
add
push
test
sbb
and
daa
push
bound
push
daa
mov
push
mov
dec
adc
or
and
mov
add
movsb
loopne
rcrl
jg
out
rclb
sbb
mov
mov
inc
mov
sub
in
mov
cli
mov
xchg
or
push
mov
movsb
and
mul
push
pop
clc
lret
push
cltd
mov
add
fmull
xchg
addl
xchg
mov
inc
jns
jle
test
into
cmpsl
pop
clc
cwtl
and
add
jnp
ss
cmp
xchg
add
push
rcl
lds
dec
fdivrl
cmpsl
jmp
mov
enter
mov
mov
int
inc
mov
push
pop
cmpsl
xchg
movsl
out
xchg
xlat
cvttps2pi
aaa
pop
cmpsb
inc
lret
xor
nop
mov
stos
addr16
mov
pushf
jne
das
xchg
jne
rcrb
js
lret
sbb
test
shl
lcall
pop
jg
movsl
ret
insb
int3
hlt
inc
je
test
cmpsl
xchg
pop
out
aas
movsl
cmp
test
and
cmp
sub
data16
cli
add
or
and
cmp
test
or
mov
fucomi
fmuls
scas
push
pushf
add
lret
movsb
push
es
dec
iret
scas
pop
inc
shrl
lcall
sahf
or
cmp
arpl
aad
add
xor
xchg
addl
xchg
push
roll
dec
lret
mov
sahf
xchg
in
or
xchg
or
rclb
jnp
pop
mov
cmp
inc
fldl
inc
cmp
mov
cmp
cmp
clc
mov
sub
adc
repnz
stos
cmp
les
gs
call
xchg
enter
es
ret
icebp
cli
sbbb
rcrl
inc
in
jmp
cld
fsts
arpl
mov
mov
push
xchg
int
fildl
jnp
jbe
xor
call
je
jne
cmp
lods
fstl
or
loope
xlat
hlt
mov
pop
push
leave
push
add
iret
les
orl
push
loopne
gs
insb
stc
nop
movsb
and
mov
lds
mov
int3
push
fadds
xchg
mov
fsubrs
mov
mov
jnp
xchg
mov
jbe
sub
divb
into
and
xchg
into
hlt
aas
xchg
and
inc
pushf
dec
or
popf
je
dec
iret
sbb
dec
loop
dec
in
xchg
enter
push
xor
outsl
mov
dec
les
ljmp
sub
jno
jne
sub
pop
sar
pusha
repz
mov
dec
in
adc
jns
filds
mov
jmp
xchg
jecxz
adc
mov
jmp
fdivr
testb
stos
or
push
add
cmc
lds
xor
popa
ror
clc
push
sti
sub
pop
clc
inc
lock
xchg
icebp
sub
xchg
adc
incl
push
call
sub
cmp
shll
add
jg
rcr
popf
mov
add
lahf
pop
mov
loopne
data16
xor
mov
and
scas
enter
cs
ljmpw
ljmp
test
iret
xchg
xchg
mov
mov
ja
dec
pop
adc
adc
ret
mov
add
jmp
push
mov
lock
xchg
or
mov
rcll
cmpsl
push
das
push
cmp
in
mov
pop
loope
add
mov
jns
out
jp
jnp
stos
aam
xor
adc
and
sbb
lods
mov
les
mov
fs
jno
push
xchg
mov
mov
cmp
jecxz
js
inc
mov
dec
gs
mov
xchg
rorb
ret
and
imul
fadds
call
cmp
test
lods
gs
xchg
movsb
arpl
pop
mov
or
xor
or
out
fiadds
das
cmpsl
push
bound
mov
add
in
das
and
int
pop
and
inc
dec
out
lea
mov
scas
jns
and
jecxz
sbb
jne
lret
or
popl
das
int3
lahf
pop
cmp
repnz
sub
std
pop
sub
xlat
mov
push
pop
sub
sbb
pop
inc
mov
add
in
ljmp
rcrb
lods
in
stos
movsb
cmc
pusha
xchg
fcomps
push
insl
in
and
lods
bound
dec
push
mov
sub
inc
push
adc
scas
mov
fcmovne
inc
inc
push
into
xchg
popf
or
push
jp
stc
test
xor
push
mov
in
push
mov
cmp
popf
sub
inc
cmp
sti
es
or
rcrb
jle
enter
loopne
repz
dec
fldenv
fwait
mov
in
lock
cmc
pop
call
dec
enter
sbb
hlt
lds
icebp
cmp
lret
into
sbb
aaa
mov
ljmp
xor
push
outsl
or
movsb
int3
es
pop
sbb
stos
jae
mov
jbe
cmp
lds
addb
popf
mov
mov
cli
pop
or
int
mov
mov
pop
test
and
or
lea
popf
shll
add
mov
out
sub
xchg
outsb
js
jb
add
sbb
lods
cwtl
dec
in
insl
xchg
adc
ret
inc
je
xorl
mov
fldt
js
push
cld
lcall
inc
push
rcll
pop
je
in
scas
mov
sbb
loope
pop
arpl
rcll
stos
aad
cmp
xchg
js
push
jp
aas
dec
aaa
dec
stc
ret
xchg
adc
imul
sub
xchg
mov
fbld
leave
inc
nop
rcll
ds
mov
fstl
scas
sti
push
clc
or
fadds
mov
aaa
sbb
cmp
insl
ljmp
mov
jae
imul
mov
adc
bound
jge
in
out
adc
add
rcll
jmp
iret
popa
pop
aad
xor
jbe
sbb
mov
jg
jle
clc
xor
add
adc
outsb
pushf
mov
out
inc
sub
sti
adc
push
push
xchg
sbb
sbb
cmc
dec
lret
mov
repnz
sub
arpl
in
je
jmp
dec
mov
push
pop
outsl
adc
jnp
outsl
imul
mov
test
and
in
cwtl
dec
in
dec
mov
aam
sub
scas
dec
lret
sar
sti
xchg
mov
add
or
loope
popa
fbstp
xchg
pop
loopne
or
jp
xor
das
add
mov
mov
out
mov
jmp
movsl
icebp
inc
inc
push
pop
xor
mov
cmp
cmc
ljmp
mov
inc
test
subl
and
mov
cltd
scas
sbb
movsb
sahf
aam
mov
test
push
in
cli
inc
cwtl
fistpll
mov
xor
stos
sub
cld
mov
lret
xchg
scas
cmp
call
popf
out
and
pop
or
pusha
inc
dec
ficoms
xchg
arpl
cmp
bound
mov
mov
imul
fs
jno
out
das
jge
aam
or
jge
mov
int3
fbstp
push
lahf
movsl
adc
xchg
test
mov
mov
or
xchg
jl
sub
inc
popa
mov
outsb
mov
xchg
lods
test
cmpsb
mov
and
bound
mov
bound
arpl
xor
xchg
test
das
icebp
inc
xchg
jne
hlt
push
jg
mov
sub
mov
mov
inc
hlt
lea
jg
jnp
cmp
movsl
dec
fs
add
adc
push
cmp
jns
in
dec
sbb
adc
and
lcall
xchg
inc
xor
aad
mov
cmpsb
ja
out
in
std
shl
fcmovbe
push
xchg
xor
sbb
addr16
mov
xchg
mov
cmp
dec
or
cld
arpl
enter
fmuls
jnp
imul
cmp
movsl
out
push
add
not
and
dec
sub
scas
loop
stc
rcrb
cli
sbbb
out
and
pop
inc
dec
data16
fdivrs
pop
ficomps
add
xor
leave
in
sbb
sbb
hlt
out
dec
sbb
repz
je
jle
and
mov
ja
lods
pop
push
loope
push
sbb
cmp
cli
dec
in
mov
push
push
test
sti
push
inc
dec
fnstenv
mov
pop
lret
inc
jg
inc
das
lret
lret
test
adc
std
add
paddq
bound
shlb
call
or
or
bound
lea
xchg
add
lea
arpl
or
ja
dec
fdivs
shll
lret
dec
pop
mov
mov
sarb
push
outsl
cwtl
mov
ja
out
jle
insb
mov
and
lods
push
shrb
cwtl
cltd
xor
add
roll
loope
in
xor
pop
pushf
mov
out
pop
xchg
mulb
adc
jp
nop
fabs
js
sbb
fsub
sub
mov
and
mov
insl
pop
push
and
int
aam
or
sahf
adc
xorl
cmovnp
hlt
arpl
xor
mov
stos
or
fwait
mov
jl
inc
roll
cmp
loope
mov
notb
mov
mov
nop
mov
imul
in
out
mov
in
mov
cltd
test
add
pop
push
mov
shrl
xchg
ret
ja
insl
sbb
pop
mov
in
adc
js
arpl
pop
in
xor
int3
xlat
inc
mov
xlat
inc
out
dec
dec
dec
sub
add
shl
inc
js
lret
sub
out
ljmp
jo
imul
inc
lret
inc
bound
sbb
sbb
adc
push
mov
pop
cmc
push
inc
push
rcll
dec
dec
sbb
mov
daa
out
xchg
cs
int
js
jle
inc
xchg
cmpsb
or
mov
and
push
jl
push
rcl
test
ret
pushf
out
xor
pop
int
pop
lock
xor
subl
or
mov
ljmp
aas
sahf
xor
inc
adc
cli
mov
mov
xchg
lods
jle
test
pop
je
in
clc
popf
daa
pop
ret
add
mov
scas
cwtl
testl
cltd
and
pusha
fcoml
add
or
add
add
loop
add
jp
mov
imul
push
insb
pop
hlt
jge
xorl
xorb
insb
xor
pop
dec
clc
cmc
les
cmpsb
in
fldt
mov
js
inc
addr16
mov
bound
les
cs
push
sti
fcomp
and
xor
sbb
mov
push
pop
fwait
adc
push
cmp
test
int3
and
lcall
into
push
ret
clc
es
adc
inc
outsb
ror
or
mov
clc
adc
xor
add
aad
xorb
push
repnz
mov
dec
filds
cmp
out
jno,pt
ffreep
mov
out
xor
divl
test
mov
stos
and
jno
pushf
mov
or
sub
je
daa
push
jl
xchg
cs
bound
push
aas
push
aad
xchg
movsb
cmc
int3
popf
fsts
xchg
mov
and
outsl
insb
stos
ja
xor
xor
outsl
aaa
dec
jmp
jl
stos
xor
icebp
fs
lods
mov
pop
pop
pop
jb
pop
ds
nop
push
call
mov
lock
push
ljmp
fistps
clc
enter
call
mov
iret
rorl
outsb
bnd
shll
shlb
jle
jae
mov
lcall
rcll
inc
lea
xchg
xchg
test
and
mov
jbe
ret
ljmp
mov
mov
pop
xor
sub
lds
add
cwtl
sbb
leave
out
fistpl
es
test
lds
add
insb
out
dec
mov
xor
fistpll
or
lods
sub
shl
lods
jp
pop
mov
add
cmp
frstor
or
push
push
insl
ds
xchg
jmp
add
push
push
inc
stos
and
mov
or
ucomiss
outsb
cli
out
popa
mov
xchg
cmp
mov
les
pop
imul
fidivs
sub
sarl
mulb
rolb
call
imul
jp
jb
and
fsubl
xor
sub
jmp
jl
scas
mov
sbb
dec
daa
ret
hlt
push
sar
repnz
test
cmc
leave
jle
pop
push
xchg
sub
out
sub
dec
and
leave
push
popf
stc
insl
jecxz
mov
gs
movsb
in
sbb
cmp
movsb
sub
das
lds
inc
xor
lock
jecxz
adc
jns
fisttpl
data16
mov
bnd
mov
mov
xor
gs
enter
rcr
loop
aad
fisttpll
mov
mov
mov
push
sub
jg
and
test
iret
lods
sub
inc
jno
ret
xchg
outsl
cmpsl
cltd
stos
or
mov
sub
hlt
sahf
pop
xchg
iret
dec
sbb
jge
sbb
adc
jecxz
rorb
movsl
imul
or
sbb
push
fdivr
movsl
ret
shlb
or
or
cmp
xchg
std
aam
aam
jb
adc
std
push
xchg
inc
sbb
ljmp
sub
ss
js
test
cmp
test
clc
sbbl
cld
hlt
out
pushf
aaa
les
stos
ror
sbb
cmpsb
mov
inc
xor
sub
jp
icebp
ret
mov
scas
and
adc
rcrl
push
js
and
gs
adc
test
xchg
lock
bound
test
fsubl
jle
mov
pop
negl
mov
rcl
xchg
mov
and
jl
pop
repz
sarb
mov
filds
add
ud0
mov
dec
pushf
xor
mov
jns
and
xchg
shlb
push
sti
mov
sub
mov
roll
cmpsb
int
nop
mov
in
xchg
repnz
inc
sbb
pop
inc
jle
cmpsb
pop
outsb
add
mov
push
cmp
mov
insl
fnstcw
push
mov
xchg
lds
in
jo
pop
add
push
inc
or
push
xor
or
fcoml
hlt
fdivs
lahf
inc
stos
dec
das
scas
loopne
imul
xchg
imul
imul
cld
and
cld
mov
sub
ja
inc
xor
and
movsl
out
rcrb
mov
movsb
testb
scas
mov
arpl
mov
repnz
and
xchg
xchg
imul
pop
std
mov
lahf
pop
mov
jo
scas
cs
rcll
fsincos
andb
fsubrl
hlt
xor
orl
cmc
sbb
inc
ds
sbb
pop
or
xor
scas
sub
xchg
xchg
fbld
scas
shll
and
pop
pop
cmpsb
inc
jle
repz
ja
xchg
cld
pushf
mov
shll
mov
jo
outsl
fildll
ja
add
mov
fnstcw
stos
jmp
pop
sbb
xchg
cltd
sub
fnsave
jno
dec
loope
cmp
mov
jmp
fistl
imul
out
sub
xchg
ficoml
fyl2x
inc
rcr
inc
outsb
mov
jne
outsb
cwtl
sub
fucomip
shl
mov
jb
out
sbb
arpl
mov
jg
insb
jecxz
push
sbb
shll
cmp
cld
mov
insl
fidivrs
sbb
mov
stc
shlb
inc
movl
jge
rcrb
sbb
mov
sbb
jge
mov
scas
jmp
add
mov
ds
mov
or
inc
fisubrs
dec
out
cmp
es
push
lock
or
jnp
sbb
enter
jb
enter
pop
fs
pop
sarb
popa
sub
clc
in
cmp
pop
outsl
or
and
fcmovnbe
and
sahf
aam
movsl
add
scas
in
xlat
test
rclb
pop
in
cltd
sub
pop
inc
gs
push
inc
outsl
dec
fisubl
xor
jmp
push
mov
imul
cmp
sub
jo
out
jae
or
shl
mov
iret
leave
imul
icebp
nop
or
add
orl
int
loope
sbb
jl
out
jb
lea
repz
lret
xchg
jmp
fidivl
mov
push
inc
xchg
in
fwait
mov
outsl
loope
cmp
clc
fisttpl
popf
out
sbb
inc
loop
mov
lds
loopne
clc
mov
test
faddl
aaa
xchg
cmc
add
mov
loop
adc
mov
ja
jns
call
mov
push
sbb
bound
int3
lock
sbb
dec
mov
sbb
gs
loope,pt
push
jl
mov
jecxz
pop
iret
mov
leave
lock
lds
lcall
cs
inc
dec
sbb
push
xor
mov
lret
sbb
xor
lret
ds
jge
jns
neg
mov
mov
rorb
test
ret
pop
xchg
xchg
stos
fstpt
jmp
xlat
pop
cs
dec
sbbb
xchg
call
aad
adc
push
push
daa
ljmp
sub
rcr
or
repnz
xlat
sub
and
dec
sti
xchg
fs
gs
mov
dec
cmp
pusha
xorb
xor
clc
lret
or
adc
stos
mov
rcll
lods
push
or
lods
vandpd
clc
jne
add
stos
loope
sub
mov
test
and
sbb
mov
jo
outsb
daa
add
int
sbb
popa
scas
pop
enter
imull
test
stos
jg
std
sub
ja
in
aam
push
ja
cmp
jmp
mov
gs
and
int
loopne
xchg
jbe
adc
jne
sbb
mov
or
ficompl
jle
adc
mov
push
jmp
jb
add
push
lds
inc
jge
xor
out
cmpsb
mov
sub
imulb
sbb
mov
iret
cmc
cmp
cmp
dec
lret
push
push
insb
testb
shl
jno
rcr
adc
dec
mov
mov
jle,pn
or
dec
sub
daa
mov
gs
sbb
mov
shlb
and
fs
leave
cmp
inc
stc
cmp
movsl
push
sub
xor
fbstp
iret
dec
push
or
or
mov
inc
mov
lds
negl
loope
xor
mov
cmc
int3
mov
mov
cmp
or
xor
mov
jb
xor
sbb
jns
daa
iret
jge
inc
xabort
lods
nop
pop
inc
push
aas
clc
and
or
cmpsl
mov
test
dec
outsl
in
aad
sbb
cmp
sbb
or
in
neg
lods
xchg
gs
out
push
adc
in
dec
jae
xchg
into
cmpsb
sub
shrl
jno
xor
cmovl
sbb
pop
lea
mov
ss
sbb
arpl
pop
dec
adc
int3
mov
daa
dec
movsb
lea
xchg
mov
adc
mov
xchg
inc
dec
inc
negl
pop
add
popa
mov
mov
mov
adc
outsl
or
neg
fiaddl
insl
clc
sbb
xchg
cmp
cli
movb
mov
pop
fldcw
push
loope
jb
mov
mov
jno
add
xchg
cwtl
negl
fisubs
fsubl
jnp
inc
adc
xchg
push
dec
leave
pusha
lods
lds
cmovbe
cwtl
inc
pop
add
arpl
xor
pusha
fs
push
xchg
mov
push
daa
nop
arpl
sub
cmp
add
push
jmp
and
dec
mov
jb
mov
loopne
xor
push
push
in
je
fistps
xchg
xchg
test
inc
mov
call
scas
and
cs
jb
cmp
dec
mov
push
into
adc
out
mov
xchg
sgdtl
dec
inc
mov
out
xor
mov
jp
pusha
push
fcmovne
dec
call
jmp
pop
repnz
xchg
enter
mov
ds
inc
push
xlat
mov
addr16
aas
mov
or
pop
sahf
mov
inc
dec
ja
ja
pushf
ja
daa
push
shl
mov
push
xchg
add
scas
pop
and
or
rolb
cmpsl
adc
ldmxcsr
xor
ds
jbe
mov
lods
mov
mov
scas
sbb
test
mov
jp
add
pusha
aaa
sbb
or
sub
repz
sub
mov
icebp
mov
mov
test
sbb
shlb
mov
in
cmp
in
cmp
sbb
mov
jmp
imul
push
cmpsb
lds
je
fs
nop
cltd
push
lcall
ret
push
inc
sbb
and
inc
outsb
loop
and
pop
outsb
jl
int3
inc
pop
fcoms
jo
cmpsl
or
mov
xor
mov
iret
jmp
ret
aad
xchg
sbb
popf
inc
jge
in
pop
idivl
mov
mov
push
add
xchg
lret
mov
insl
cmp
xchg
lds
xor
xchg
add
mov
push
push
mov
hlt
mov
fisttpl
fadds
mov
xchg
mov
mov
add
mov
and
sub
in
dec
and
xor
xlat
call
dec
imul
cld
rcll
inc
mov
in
xchg
xor
xchg
mov
adc
les
add
sahf
cmp
out
stos
andl
adc
dec
push
add
lcall
or
inc
fisubrs
ja
mov
test
pop
jmp
or
add
in
fwait
les
inc
mov
icebp
pop
jmp
fwait
pslld
lds
pop
xchg
jp
into
stos
push
ss
in
mov
sbbb
or
out
loope
jb
test
js
stos
dec
mov
repz
dec
sbb
imul
mov
dec
sahf
add
xchg
cld
mov
cmp
mov
leave
cmp
aas
ds
popa
cli
xor
dec
mov
pop
insb
ror
subb
xchg
xchg
mov
push
fwait
pop
js
inc
xor
xor
jmp
sub
das
movsl
xor
pop
pusha
cld
or
adc
push
mov
std
out
jns
call
inc
enter
mov
pushf
add
scas
sbb
fxch
movsl
imul
pop
enter
add
inc
xor
push
loopne
ret
aas
nop
or
fisttpl
scas
inc
sbb
or
jbe
out
out
pop
cmpl
in
int
ljmp
inc
mov
pop
mov
push
fwait
push
adc
je
xchg
icebp
sub
inc
cmp
je
cmp
jge
xchg
pop
clc
decl
scas
push
aam
popa
cmc
dec
xchg
adc
jg
sub
lock
mov
xchg
int
adc
mov
idivb
push
mov
jo
ret
dec
and
stos
xchg
stc
ret
hlt
lahf
add
ficomps
lds
jp
dec
sbb
ljmp
fistl
dec
sahf
xchg
ss
in
fsub
mov
pop
inc
lods
aad
lods
shl
xchg
jo
rorl
out
cmp
lds
addr16
bound
xchg
stc
xor
cmp
lods
cltd
mov
sub
test
jb
bound
xor
xchg
jne
loop
cmp
lret
pop
pop
pop
xchg
aas
fcmovnu
inc
sar
dec
mov
adc
dec
iret
jae
mov
ss
pop
dec
jecxz
jb
int3
push
lea
sub
jae
or
adc
xchg
dec
adc
repnz
aaa
lods
push
imul
fldl
mov
sbb
and
in
aaa
ja
hlt
insb
push
pop
push
cltd
adc
push
sub
jae
js
xchg
xchg
lret
test
mov
dec
das
mov
fnstenv
mov
sub
push
out
cwtl
out
ljmp
into
sub
ljmp
push
sbb
jmp
sbb
mov
insb
push
mov
mov
out
dec
clc
mov
loope
pop
insb
xchg
lods
out
mov
sub
cli
and
inc
fcmovbe
pop
inc
out
or
inc
xor
insb
fmulp
hlt
xor
push
and
ret
daa
movsb
enter
in
mulb
mov
gs
or
stos
mov
adc
fmulp
pushf
pop
mov
xchg
je
xor
cmp
lock
test
addr16
fcoml
daa
push
adc
enter
mov
jo
std
test
insb
nop
dec
xchg
jb
push
mov
in
mov
addb
rcrl
fidivrl
jnp
pop
sbb
lea
popf
sbb
mov
cwtl
mov
pop
xchg
pop
jns
ljmp
lahf
dec
xchg
dec
sbb
loop
xchg
jno
and
xor
push
sub
pop
add
mov
jmp
nop
js
ljmp
mov
push
and
adc
sbbl
fmull
mov
and
mov
rcrb
mov
das
pmaddwd
rorb
cmp
sub
imul
icebp
mov
pop
ds
pop
in
add
popf
jo
es
js
push
add
bound
mov
sub
jge
or
or
jne
pushf
cwtl
and
in
xor
xchg
std
xchg
fucom
cmp
cli
dec
insb
popa
adc
shrl
sbb
and
mov
int
aad
adc
cmp
test
jb
mov
out
stos
fs
out
pushf
add
inc
loop
inc
sub
pop
jns
lret
outsb
xchg
mov
push
stc
jbe
mov
negl
imul
sub
fmulp
lods
adc
cmp
inc
icebp
push
mov
push
faddp
test
pop
movb
shl
sbb
out
xor
adc
push
jbe
jo
mov
fidivrs
sbb
jae
ficoms
xchg
inc
sbb
pusha
xor
mov
xchg
enter
into
xor
idiv
test
mov
mov
and
into
mov
push
inc
pop
lret
sub
mov
iret
cmp
int3
outsb
xor
das
inc
sub
or
jae
push
pop
push
in
sub
adc
loop
dec
sbb
fs
das
xchg
cmpsl
stc
xchg
imul
cltd
lock
sub
add
xchg
jae
fsubrs
negl
adc
stc
inc
jb
fisubl
fists
stc
dec
cmp
mov
ret
or
cmp
fdivs
inc
movsb
lods
or
ljmp
jb
push
dec
add
jp
cld
scas
jo
pop
jb
mov
add
cmpsb
push
loope
int
push
jg
fisubrl
mov
push
sub
into
inc
dec
addr16
fwait
or
loop
stc
iret
xor
adc
mov
sub
xor
fldcw
enter
mov
int3
loope
fstpt
fsubl
dec
adc
mov
aad
xor
filds
out
mov
addr16
pop
imul
adc
ret
rcr
push
xchg
xor
sbb
sti
sub
scas
orb
jbe
lds
inc
mov
movsl
xor
or
or
dec
adc
call
mov
das
sub
pushf
and
push
mov
cld
pop
hlt
jnp
sub
es
mov
int3
or
fsts
adcl
sahf
xor
sub
add
inc
mov
aaa
lret
dec
jp
lret
testb
lcall
inc
jo
lahf
scas
adc
dec
sbb
testw
mov
filds
cmp
ret
movsl
addb
fisubrl
pop
in
cmp
lods
jg
test
test
call
in
jle
pop
lcall
xchg
cmp
sbb
adc
andb
xor
or
daa
push
jb
sub
in
inc
mov
jl,pt
shrb
test
cld
xor
call
ja
imul
in
jle
cmp
lahf
or
add
outsl
xchg
imul
push
test
or
add
lea
cmp
jne
loope
push
jl
mov
cmp
and
int3
or
or
mov
incl
pushf
pop
lcall
int3
and
ficoms
rorl
inc
adc
nop
jo
lret
lret
xchg
jge
out
scas
insb
ljmp
add
pop
or
cmp
mov
and
inc
xor
mov
xchg
dec
cld
mov
ret
lock
add
fnstenv
push
std
jmp
jnp
lds
pop
push
push
mov
mov
pop
jecxz
mov
jge
stos
mov
lock
sub
and
icebp
xchg
push
jno
xorb
adc
cmp
xchg
lods
shrb
cmp
int
daa
das
mov
cmp
shlb
jle
mov
sarl
mov
or
cmp
lods
sub
mov
pop
mov
mov
pop
sub
jmp
scas
and
xchg
cmp
fwait
xor
aaa
cmp
mov
lret
aas
insb
pop
mov
jne
push
and
xorb
sahf
jnp
ficoml
sub
movsb
mov
inc
inc
jno
or
iret
in
or
clc
cmp
cli
lcall
decl
mov
sti
aam
sbb
das
sbb
jne
jbe
jle
adc
sbb
lcall
or
loopne
add
xchg
sbb
jno
movsb
mov
xor
cmpsl
xor
xchg
or
imul
aad
xor
sub
xchg
mov
add
or
adc
xor
mov
xlat
roll
mov
push
mov
scas
or
jnp
in
les
sub
sbb
frstor
pop
mov
out
loop
stos
movl
in
enter
hlt
stc
or
rorb
xchg
jno
dec
push
xor
jb
ss
rclb
cs
bound
cmp
sub
inc
xchg
add
inc
mov
mov
je
dec
daa
into
cmp
sahf
rclb
icebp
push
sbb
pop
dec
ret
lock
or
mov
jae
add
sbb
sbb
ja
movsb
enter
cmp
mov
testl
into
xchg
xchg
pop
jmp
push
jmp
call
pop
mov
insl
fsubl
adc
les
scas
stos
pop
mov
lret
push
sbb
push
pop
jne
cltd
xor
dec
movsl
add
repz
push
cli
int3
mov
scas
push
in
xor
das
movsb
insl
xor
xchg
jno
sub
dec
fisttpl
mov
or
xchg
enter
mov
fistpll
fdivrs
ret
push
lods
movsl
nop
loope
enter
aaa
outsb
rorl
xor
jbe
sub
inc
adc
cmp
dec
jge
sub
xor
mov
push
roll
push
popf
flds
pop
inc
push
outsl
adc
ss
fst
push
test
push
jp
stos
xor
ret
dec
push
cmp
xchg
jmp
js
sub
jae
insb
inc
jle
mov
dec
push
notl
in
shll
aam
insb
mov
icebp
out
nop
push
out
rol
push
sbb
fst
pop
subb
and
outsl
iret
cmp
stc
stos
rol
ss
iret
dec
stos
cmp
cltd
and
mov
loop
leave
fldcw
sbb
sub
mov
mov
push
pushf
rorb
cs
push
inc
jnp
cld
ja
sub
lods
mov
dec
lret
shlb
push
repz
dec
or
pop
jns
std
sub
lret
pop
lods
pushf
dec
dec
shrb
dec
or
rclb
rcl
cmp
scas
fiadds
and
pop
stos
fiaddl
jae
jge
stos
xchg
lods
push
je
insb
pop
mov
mov
push
pop
mov
mov
and
dec
dec
hlt
jne
add
cmpl
loopne
pushf
cmp
push
mov
notb
rolb
xchg
sub
jno
sbbb
dec
inc
and
xchg
cmp
mov
adc
pop
in
fisubrs
stos
rcr
roll
enter
ficomps
pop
and
dec
push
xor
dec
dec
das
inc
xor
push
push
stc
xlat
outsl
imul
imul
jae
xchg
or
fsts
adc
add
repz
repnz
push
mov
pusha
mov
int
xchg
rcrl
mov
gs
loopne
pop
mov
adc
push
push
jg
jne
xlat
adc
cmp
nop
push
lea
xor
stc
scas
cmpsl
fnstsw
pop
push
fisttps
fcmovbe
imul
fcomps
push
adc
hlt
mov
and
out
jmp
sub
mov
jecxz
cs
or
subb
iret
outsl
loope
xchg
adc
test
sbb
inc
dec
xor
sub
mov
jg
ficoms
fs
das
sub
leave
in
mov
fistps
mov
adc
mov
xchg
mov
fmuls
std
gs
adc
loopne
repz
sub
cs
data16
mov
leave
nop
in
dec
inc
xchg
xchg
sbbb
sbb
fbld
sub
mov
xchg
mov
inc
push
push
incb
jae
sarl
lret
insb
rcrb
repz
sub
sti
int
push
adc
sahf
pop
arpl
inc
cmpsl
and
icebp
out
adc
cmp
out
jo
xorl
cli
std
adcl
jbe
pop
es
or
inc
ja
mov
sbb
pop
mov
roll
mov
outsl
out
pop
adc
nop
out
test
adc
mov
mov
sti
scas
lcall
movsb
cli
mov
jae
pop
sub
xlat
push
fnstsw
popf
imul
adc
pop
icebp
mov
xchg
xor
rcrb
dec
aad
scas
and
mov
mov
jl
jle
push
int3
push
icebp
pop
and
xor
out
mov
cmp
inc
dec
dec
mov
jg
jmp
out
jae
in
dec
cli
cmp
enter
test
addb
repz
add
icebp
mov
adc
sahf
mov
in
inc
loop
jecxz
xchg
out
pop
or
es
icebp
xchg
int
cmp
jb
adc
cmpsb
hlt
or
push
ljmp
pop
push
inc
or
stos
inc
push
xor
fisttpl
imul
adc
cmp
pop
lock
jno
loopne
adc
fidivs
mov
dec
push
push
dec
dec
mov
xor
add
mov
in
sbb
jg
loop
xchg
dec
in
jp
cmp
je
sub
and
sti
insl
insb
mov
jb
flds
mov
or
xchg
pusha
jo
sbb
cmp
sbb
jl
les
fisttps
popa
sub
xchg
dec
repz
push
xor
xor
jno
test
push
lret
jnp
data16
out
jb
inc
in
push
movsb
jb
leave
fisubl
out
imul
mov
imul
and
ret
add
jg
rcrl
add
stos
and
mov
repnz
sbb
pop
push
rcl
out
iret
repnz
xchg
into
dec
cmp
sub
inc
mov
xor
push
gs
aaa
pusha
mov
cwtl
inc
mov
sub
arpl
loope
ds
gs
push
adcl
shl
mov
jne
rolb
pop
xchg
mov
sub
mov
push
js
xchg
nop
outsl
dec
adc
pop
sar
in
push
std
mov
pop
movsb
popf
dec
data16
pop
daa
mov
jg
enter
mov
xchg
cltd
jecxz
xchg
add
rcrb
flds
mov
cwtl
jg
ja
test
sub
dec
inc
mov
fcmovne
pop
arpl
xor
mov
insl
fstpl
xchg
sbb
xor
inc
jno
movsl
fcmovne
fwait
jle
dec
dec
icebp
outsl
jg
or
outsl
rcr
sbb
pop
mov
push
sub
xor
pop
cmp
or
pushf
movsl
sub
mov
cmpw
out
sub
xchg
push
imulb
leave
les
cld
xor
outsb
stos
fcmovu
or
mov
sub
push
call
sbb
mov
or
inc
or
ja
stc
push
loop
hlt
cmc
rolb
jo
movsb
push
mov
inc
lods
or
aam
xlat
inc
out
and
ret
add
ja
cmp
lock
nop
ss
loopne
popa
andl
shll
push
or
jle
stos
jne
push
and
sub
jo
cwtl
mov
xchg
int
push
movb
pop
mov
cmp
add
push
lods
pop
stos
outsb
fnstsw
xor
stc
xchg
xor
vpsubd
xchg
unpckhps
mov
jno
clc
in
lcall
ret
lahf
add
mov
sarb
sbb
jp
jmp
test
sti
jp
mov
decl
dec
xchg
iret
cmp
outsl
xorl
sahf
and
aas
pushf
mov
sarb
testl
adc
mov
xor
mov
cmp
add
or
arpl
dec
loopne
add
xor
mov
ret
out
or
test
enter
or
lea
cmpsb
jb
movsl
inc
jbe
cmp
jbe
es
mov
mov
cmpsb
lds
dec
cmpsb
pop
out
popf
dec
xlat
xor
pop
stos
addr16
test
loop
sub
or
lea
loope
push
dec
pop
ljmp
push
xchg
ja
daa
loop
sbb
cmp
add
push
das
movsl
add
xchg
and
jg
and
test
cmp
dec
push
test
test
lods
sub
mov
add
das
dec
dec
je
push
aas
lahf
inc
push
pop
jmp
test
sbb
in
mov
mov
repnz
push
jbe
ret
mov
repz
and
inc
push
lret
sbb
push
and
adc
push
test
iret
pusha
sahf
popf
jb
jbe
jns
xor
cmc
int
jge
je
cli
sahf
stc
lcall
ds
out
xchg
push
popa
outsb
mov
pop
call
mov
js
movsb
outsb
xchg
push
mov
lea
addb
sbb
ja
bound
mov
mov
andb
dec
clc
xchg
sbb
dec
imul
cmp
jo
mov
ja
add
inc
fildl
inc
mov
insl
and
dec
mov
xlat
jns
divb
pushl
add
sub
adc
inc
jno
cmpsb
and
in
dec
adc
jb
push
push
jg
mov
sub
inc
jl
jl
fimuls
inc
pop
cld
jle
dec
push
sbb
cwtl
pop
or
adc
mov
in
outsl
mov
ret
inc
push
leave
or
out
sub
jle
lds
aad
ja
daa
stos
jmp
jecxz
ja
loop
movsb
into
jbe
repnz
imul
or
pop
inc
jno
test
stos
pop
enter
xchg
jne
xor
adc
ljmp
ret
out
inc
imul
xchg
stos
inc
sbb
jecxz
or
inc
insl
lods
ret
and
out
sbb
shll
outsl
push
fmuls
cs
push
data16
cmpsb
insb
sbb
int3
repz
xadd
cmpsl
pop
repnz
pop
repz
mov
mov
mov
xchg
push
or
add
call
pop
push
push
inc
pop
mov
ds
push
xchg
inc
inc
je
sti
adc
cs
cmp
lods
shrb
add
sub
xor
lea
push
leave
imul
das
or
add
sbb
fs
push
lcall
adc
or
sbb
push
push
hlt
out
mov
ljmp
xor
pop
pop
mov
push
fimull
mov
andl
xchg
dec
fmul
xchg
in
push
test
xor
adc
popa
cli
mov
and
and
adc
jmp
sbb
add
jne
das
outsb
sub
inc
mov
inc
pop
imul
mull
ja
push
out
mov
jmp
nop
cmpb
stos
iret
ret
repnz
push
cmp
aas
cmpsl
or
pop
mov
outsb
in
and
adc
jmp
cli
in
int3
jl
jb
test
inc
insb
inc
jle
jb
push
movb
or
push
ds
test
out
xchg
insl
and
xchg
ds
test
into
push
insb
out
and
or
popa
xchg
mov
mov
cwtl
sub
das
pushf
add
push
jge
mov
scas
inc
cs
ret
jo
scas
ficomps
jmp
pop
xchg
dec
sbb
imul
scas
adc
incl
aaa
adc
and
pop
dec
sub
test
addb
scas
sti
into
mov
insb
add
aas
cmpsb
jge
pop
mov
xchg
adc
push
les
cmp
or
jle
sub
das
or
and
push
popa
popa
out
je
or
push
jecxz
jl
mov
jae
stos
sub
jbe
lea
test
and
xor
cmp
lds
aad
lock
dec
pop
jg
aas
scas
ret
or
inc
mov
popf
cmc
lcall
ret
icebp
out
sub
ja
mov
xchg
push
sbb
ret
loope
les
cmpl
dec
xorl
adc
in
adc
mov
ljmp
add
aas
in
inc
mov
pop
into
cmp
xchg
movsl
xchg
je
xchg
stc
cltd
scas
mov
mov
js
loop
sbb
add
cmpb
scas
mov
into
xchg
aas
movsl
dec
incb
inc
pop
mov
cwtl
and
pop
sub
fcoms
xlat
mov
cmp
pop
mov
lcall
inc
stc
rclb
rolb
arpl
inc
cmpsb
dec
pusha
sub
push
repz
mov
mov
dec
daa
mov
stos
andb
aaa
jb
inc
sbb
sbb
dec
lret
add
push
xchg
push
shlb
cmp
les
xchg
and
stos
push
dec
mov
push
clc
xchg
xor
and
cmp
cmp
out
and
sub
in
iret
mov
push
test
test
dec
pushf
ror
jbe
dec
ljmp
xchg
mov
sub
dec
push
pop
pop
xchg
adc
jnp
movsl
nop
inc
out
decl
mov
fmull
out
adc
inc
fidivrl
pop
inc
ds
sbb
jnp
pop
or
dec
out
push
cwtl
adc
add
push
adc
dec
mov
test
and
stc
pop
mov
sbb
fsub
lds
push
dec
pusha
mov
mov
movsl
pop
stos
xchg
aas
cld
popf
pop
mov
ror
ljmp
ja
mov
jp
loope
mov
push
xchg
and
or
xor
nop
add
jl
les
inc
sahf
mov
ret
xor
loop
repz
pop
add
adc
pop
dec
movsl
popl
dec
and
push
dec
sbb
push
cmp
push
xor
sbb
lret
mov
and
xor
xchg
jmp
push
shlb
mov
aam
sub
ss
stc
sbb
ljmp
push
lds
aam
dec
xor
inc
stos
out
in
stos
inc
test
sbb
jo
add
movb
dec
mov
cmp
das
push
push
stc
and
jecxz
xor
sti
xlat
stos
cmp
push
lock
inc
jl
les
ret
lahf
pop
mov
shlb
sti
mov
adc
call
mov
stos
pop
xor
sti
mov
sub
cmp
out
repz
stos
jne
jecxz
cmpl
add
das
popf
pop
adc
fstl
jmp
nop
enter
lock
push
sub
or
add
dec
aaa
ss
pop
test
cmp
push
iret
cmpsl
loopne
ds
and
call
inc
mov
adc
inc
lock
out
in
push
adc
push
add
pop
mov
addr16
dec
jns
or
pop
enter
mov
stc
mov
jns
in
ss
mov
push
jbe
dec
adcb
xchg
data16
cmp
lret
jae
xchg
cwtl
sbb
mov
xchg
mov
sub
daa
adc
outsb
fwait
jne
fldl
jge
push
outsl
clc
les
xchg
sbb
fimull
popf
imul
dec
sbb
daa
sbb
xchg
cmpsl
dec
push
xor
mov
gs
adc
jp
or
mov
jno
mov
xchg
mov
adcb
out
mov
lods
jp
stos
pop
dec
mov
dec
ret
stc
jbe
sbb
out
xor
cmp
dec
pop
cmp
test
mov
sbb
scas
stos
pop
inc
inc
jge
insb
pop
fmul
ds
out
mull
mov
pop
fildll
test
incb
inc
cmp
movb
loopne
or
in
jmp
and
push
fmuls
loopne
shrb
or
repz
jl
loopne
jge
adc
push
test
sub
sarl
bound
mov
movsl
push
mov
pop
int
inc
sbb
rolb
loope
push
mov
cmp
sub
gs
xchg
push
mov
movsl
jl
imul
cmp
inc
xor
outsl
arpl
repnz
insl
ljmp
push
insb
lret
add
stc
out
sti
out
movsl
push
xchg
adc
mov
andb
int3
mov
aaa
popl
mov
xchg
add
leave
repz
cmp
push
lds
pop
xor
loope
mov
outsb
xchg
subb
mov
mov
pop
dec
cmp
sbb
push
push
jge
in
inc
mov
mov
add
dec
mov
mov
dec
add
fimull
nop
fs
xchg
pop
xchg
push
mov
es
lcall
std
fidivl
mov
push
cli
mov
mov
dec
inc
fisttps
leave
out
mov
mov
push
hlt
fdivrl
ret
jge
daa
xor
inc
int3
shrl
jae
nop
mov
mov
add
fistpl
xchg
pop
subl
inc
mov
pop
mov
imul
les
xchg
and
out
icebp
pop
adc
stos
dec
aad
mov
daa
test
out
idivl
incb
je
dec
and
sbb
or
dec
aad
loop
jp
stc
and
pusha
xchg
fdivr
into
jmp
repnz
sti
and
inc
adc
mov
fldt
mov
std
shll
adc
pop
xchg
xchg
sub
xor
mov
rcr
fists
jle
test
inc
cmp
call
dec
or
addr16
pop
xor
push
fadds
and
push
mov
cmp
mov
fstps
push
push
test
add
or
adc
jmp
mov
sbb
or
mov
mov
daa
sbb
loope
repnz
inc
cmp
test
in
aad
push
sub
ja
mov
sbb
mov
cmp
popa
outsl
mov
jmp
xchg
ds
cld
enter
movl
or
pushf
repz
enter
clc
jo
xchg
mov
xchg
lods
push
out
pop
inc
pop
fisubrl
push
jo
jns
mov
mov
les
push
pusha
lahf
in
jns
enter
mov
sbb
hlt
inc
fs
ds
jae
push
xor
jno
jecxz
adc
unpcklps
and
sub
push
leave
out
lcall
adc
pop
add
lock
add
adc
stos
mov
stc
lcall
imul
and
inc
fldl
mov
jae
in
xor
ror
push
fstl
ficoml
push
mov
lahf
adc
aad
fld
dec
sub
lods
out
scas
jne
imul
mov
fdiv
sbb
cltd
cmp
cmp
xchg
cmpsb
or
jle
and
stc
jae
pop
iret
dec
cmp
mov
or
mov
push
sub
lods
cmp
inc
in
mul
jmp
mov
xchg
jp
jae
iret
add
jb
xchg
jecxz
mov
stos
inc
adc
sbb
out
mov
mov
or
fcoml
adc
pop
dec
insl
ja
into
lcall
xchg
cmp
push
and
out
xchg
inc
sahf
add
and
pop
movsb
mov
mov
mov
fsub
xor
push
jno
xchg
add
jp
adc
repnz
inc
jbe
ret
dec
orl
popf
arpl
jge
jbe
sub
sbb
inc
mov
inc
es
rcrb
lods
pop
loope
xor
inc
imul
loop
insb
jecxz
cmc
dec
adc
mov
jnp
outsl
dec
and
icebp
sbb
and
mov
cmpsl
loop
pop
test
fxtract
or
fstpl
jmp
cli
int3
cmp
xor
cmp
pushf
dec
out
pop
ljmp
in
xchg
es
inc
cs
daa
lea
mov
jns
jle
ss
in
fstpl
mov
fsubr
ja
les
jne
ja
xchg
ret
mov
lods
cmp
idiv
lcall
adc
cmp
xchg
lods
jo
jge
scas
xlat
movl
fildll
nop
jl
dec
and
insl
xchg
or
shl
xchg
sbb
jl
dec
add
jbe
daa
out
jb
mov
sbb
dec
xor
out
daa
push
divb
push
aad
imul
mov
cwtl
rcl
pusha
dec
jl
xor
mov
lock
fbstp
push
rolb
adc
aas
scas
inc
xor
scas
inc
out
movsb
das
sbb
pop
popa
push
leave
cmpsl
mov
and
fnstsw
fsubs
jp
mov
xchg
lret
pop
inc
dec
popf
mov
aam
arpl
sbb
call
mov
sub
inc
dec
cmpsb
jae
pop
jle
push
out
inc
xorl
inc
orl
pop
or
mov
add
jmp
fwait
sub
sbb
push
das
and
jecxz
jae
xchg
mov
loopne
xchg
cltd
ljmp
xor
insl
rcr
sarl
js
xor
lcall
pushf
sub
and
cmp
push
dec
orl
push
cmp
jno
jg
test
ret
cmp
in
mov
pusha
and
ret
sti
repnz
shlb
jp
std
pop
scas
push
test
dec
lods
sub
inc
xor
inc
out
xchg
dec
pop
sbb
test
jb
cld
fucomp
xchg
or
fstpl
adc
incb
sahf
out
aam
mov
out
ja
repz
adc
call
sub
mov
inc
clc
xor
stos
call
pushl
int3
das
and
push
fadds
jmp
out
push
dec
insl
loop
mov
inc
cmp
rcr
movsl
subl
icebp
lret
mov
stc
out
xor
push
xchg
popf
les
lock
insb
cli
cmpsl
jbe
cmc
adc
gs
ja
cmp
mov
sub
cli
cwtl
mov
loop
cld
rolb
pop
xchg
in
ljmp
sub
sub
or
dec
xchg
loope
popf
daa
cwtl
mov
sub
rolb
dec
scas
fwait
test
xor
add
inc
out
dec
iret
mov
into
xor
jne
mov
fcmovnu
dec
inc
fidivs
out
and
adc
loopne
aaa
xorb
imul
repnz
adc
cmp
jge
push
xor
rcl
lahf
fdivp
lcall
int3
shlb
jmp
lret
cmp
xor
jb
mov
mov
pop
fiaddl
jle
rcl
punpckhdq
mov
repz
sti
in
mov
mov
inc
jae
inc
es
cmpsl
in
jge
push
inc
pop
cmpsl
dec
dec
addr16
insl
or
outsb
in
ret
addr16
fnsave
sub
mov
rorl
xor
push
stc
or
imul
fcmovnu
imul
in
lret
jno
cmp
dec
into
imul
mov
aam
dec
dec
or
ret
mov
inc
sbb
mov
cld
insl
inc
or
loope
mov
ss
xchg
jl
mov
add
std
lahf
aad
jae
push
insl
pop
sbb
cwtl
movsb
std
adc
mov
and
push
sbb
jne
fcomi
push
and
lock
and
in
insb
xchg
or
dec
cmp
sbb
sbb
mov
inc
sahf
sbb
into
daa
lahf
add
push
frstor
xchg
pop
fdivrs
imul
call
jne
push
repnz
xor
xchg
mov
inc
jno
jecxz
rep
and
cmp
enter
icebp
mov
jge
sub
adc
rolb
sar
mov
aam
addr16
stos
and
movsb
inc
adc
or
xor
cmp
aam
addr16
movsb
mov
test
jo
mov
subl
loope
dec
aad
jmp
nop
xor
mov
jns
inc
sbb
sbb
loop
pop
sbb
icebp
adc
mov
lock
rcll
rolb
mov
insl
pop
pop
and
ret
mov
lods
jne
sub
outsl
adc
adc
sahf
out
push
cld
cmpsl
xor
popf
inc
xor
mov
mov
int3
pop
gs
insb
jl
mov
mov
add
sahf
out
aad
cltd
jne
inc
dec
lds
xchg
das
adcl
cmc
mov
xchg
or
inc
push
jmp
stos
lock
sahf
adc
gs
push
mov
int3
fidivs
in
loopne
push
loope
js
mov
cmp
ror
jp
rol
push
ret
adc
xor
and
push
mov
loope
nop
add
sub
stc
jno
leave
test
pop
pushf
add
dec
outsl
mov
mov
or
std
lea
popa
mov
adc
push
xlat
dec
stos
imul
xor
jle
insl
enter
fwait
popf
sbb
cs
jp
xor
out
inc
xchg
jmp
or
arpl
jg
test
ja
or
pop
out
popf
lods
rclb
mulb
fwait
icebp
lcall
and
negl
xor
test
mov
xchg
push
add
xrelease
xchg
xchg
xchg
aas
xchg
rdmsr
int3
dec
stos
cld
jns
lods
pop
fidivl
ljmp
inc
sub
adc
xchg
data16
jns
out
xor
pusha
push
scas
or
jle
xchg
jns
pop
loope
sarb
and
mov
add
out
ret
push
out
jbe
popa
mov
and
lds
mov
jl
xchg
mov
ljmp
sub
sahf
sbb
js
out
test
stos
fistpl
jle
jmp
sbb
dec
push
mov
in
add
aaa
sahf
pop
test
scas
add
jl
adc
dec
jne
lcall
fisubs
outsb
cmc
cmp
std
sbbb
pop
out
jb
mov
or
cmc
jno
les
inc
xchg
xor
mov
mov
sub
fcoml
dec
pushf
pop
pop
sbb
push
jo
lahf
push
cmc
rcl
inc
adcb
push
dec
pop
call
sub
mov
or
outsl
add
push
in
inc
repz
mov
adc
sbb
loop
add
xchg
xchg
ss
and
push
adc
add
inc
pop
mov
add
inc
pop
shll
das
mov
sbb
mov
popa
push
sub
sbb
pop
adcb
int
push
jnp
fcoml
jecxz
das
inc
xor
shr
pop
or
xchg
jae
insl
push
push
call
dec
mov
jns
imul
insl
mov
jo
stos
lcall
and
mov
stos
insb
sti
sbb
fildl
mov
cmpsb
test
xchg
xchg
movsl
pop
lcall
sub
mov
xor
fdiv
mov
push
mov
sbb
outsb
add
popa
popf
ret
lds
pop
in
sar
or
imul
xor
popf
lcall
loop
cli
dec
cmp
loope
cwtl
mov
dec
out
jle
out
add
cli
pop
ss
inc
dec
adc
in
clc
and
inc
push
mov
nop
std
aam
scas
and
inc
ljmp
jns
int3
stos
insl
mov
stc
lods
imul
mov
jg
fwait
shrl
or
adc
push
push
ret
lret
stos
and
lret
mov
mov
jecxz
shll
or
aam
cmpb
cs
xor
jne
lea
adc
sbb
cmc
mov
arpl
mov
pushf
pop
and
xchg
xor
inc
sub
dec
jns
rolb
ss
cli
ret
pop
fimull
jmp
shll
pop
add
aam
push
xorb
xchg
les
iret
call
xor
rcr
insl
ljmp
mov
adc
mov
add
test
nop
cmpsl
out
cmpsl
cli
lahf
jne
jmp
leave
sarb
pushf
mov
shr
mov
mov
hlt
cmc
clc
cmp
lock
pusha
sti
pop
jno
cli
or
arpl
aam
mov
dec
cli
pop
mov
xor
xchg
shrb
push
out
lods
std
call
adc
dec
leave
imul
mov
test
inc
xor
mov
and
fdiv
andb
fcompl
les
jp
cmp
mov
outsb
mov
cwtl
add
sbb
xchg
push
movsb
push
jecxz
push
cmp
jmp
pop
mov
dec
stc
or
jno
jge
mov
ljmp
push
xchg
inc
add
iret
sbb
xchg
mov
xor
cltd
sbb
pop
ret
xlat
sub
scas
lea
scas
loop
mov
xchg
add
inc
stos
cmp
jge
cld
lds
idivb
pop
push
xor
jns
loopne
popa
sarl
imul
testb
push
add
or
jg
push
js
mov
repnz
or
sbb
aaa
xchg
repnz
pusha
xor
mov
shll
lret
lret
and
and
sahf
pop
inc
add
add
dec
lods
cmp
pop
xchg
or
xchg
push
icebp
sbb
mov
mov
aaa
jnp
adc
loope
adc
iret
iret
push
xor
sbb
mov
getsec
xor
sub
cwtl
repnz
in
jno
xchg
mov
sub
and
pusha
cmp
jnp
mov
sbb
dec
sub
pushf
jle
and
pop
idivl
ret
pop
cmc
cs
bswap
cmpsb
and
add
test
pop
inc
mov
mov
add
mov
sahf
cmpsl
xchg
addr16
fdivrl
sub
rcrl
cmp
imul
sbb
fidivrs
mov
jle
shrb
lock
jl
sub
rorb
add
pushf
cli
scas
adc
mov
mov
int
popf
xorl
fdiv
pop
ja
clc
ret
add
xchg
cmp
cs
call
imul
cmpsb
out
testb
in
push
xchg
xor
outsb
jecxz
lods
fs
and
xchg
add
outsl
jae
imul
into
push
xor
out
jge
push
cmp
xchg
or
jg
jne
push
sbb
jns
es
outsb
mov
sbb
dec
enter
or
in
pop
dec
xchg
mov
lock
dec
lods
dec
xchg
jb
pop
jmp
mov
scas
sub
mov
adc
fadd
jp
leave
out
mov
mov
outsl
mov
pop
nop
inc
fstl
sbb
test
jne
pop
lret
push
subb
int3
in
dec
xchg
test
bound
aam
pop
mov
push
mov
fs
adc
out
push
stos
fcoms
adc
xchg
mov
xchg
divb
fmull
jge
and
add
jle
fwait
jp
lret
stos
iret
or
sub
sbb
xchg
ds
gs
lret
adcl
cmp
mov
or
flds
rcrl
movsl
inc
cmp
add
inc
int3
dec
lods
stos
jbe
pop
inc
mov
gs
push
mov
push
aas
inc
jbe
cmp
mov
lret
loopne
bound
fucomip
cmp
xor
ret
pop
addr16
and
out
aad
jge
pop
and
xchg
xor
test
gs
push
in
cmp
jnp
jb
sarb
insb
stc
dec
mov
and
pop
test
sbb
mov
push
mov
imul
jecxz
cmp
clc
lds
xor
pop
cld
mov
pop
cmp
pop
inc
jo
aaa
mov
mov
jbe
inc
outsl
call
jle
lret
adc
add
add
scas
add
ljmp
das
imul
inc
test
mov
fidivrl
lock
adc
push
ret
push
jle
jge
jne
sub
sub
jge
xchg
imul
inc
insb
dec
movsb
lods
loopne
cmp
mov
aas
push
stc
mov
dec
push
dec
or
mov
push
jl
arpl
mov
ss
lods
call
sub
jne,pn
out
ss
clc
xor
out
jno
sbb
pusha
subl
jp
out
shrb
dec
cmp
jl
aaa
call
xchg
mov
mov
or
lret
jmp
xorl
push
inc
sbb
popf
lods
jg
inc
pop
sub
adcb
dec
cwtl
mov
cli
and
imul
mov
xor
jp
pop
es
rorb
mov
mov
mov
sub
faddl
mull
or
jmp
or
xchg
inc
ds
shl
xchg
inc
lds
in
insb
push
dec
mov
adcl
in
cmovbe
ficoml
adc
cld
orb
mov
cmp
outsl
push
les
adc
add
sub
movsb
xchg
es
xor
sti
cmp
stos
sub
pop
pop
mov
leave
jne
outsb
cmp
or
sbb
jg
pop
ja
xlat
pop
pushf
andb
pushf
pop
add
adcl
jecxz
pusha
out
add
out
push
or
mov
xchg
jl
mov
jno
ljmp
call
addl
icebp
loope
add
in
stos
sbb
jns
mov
lret
in
out
orl
push
push
repnz
sarb
cli
fdivrp
adc
push
jns
outsb
adc
inc
jae
push
push
mov
xchg
jno
xchg
mov
mov
sbb
loope
frstor
aam
shlb
push
sti
sub
mov
push
adc
dec
rorb
push
mov
mov
mov
fucomip
fimuls
test
push
ja
dec
pop
ss
aam
adc
cmp
jmp
mov
insb
out
cld
or
shrb
dec
dec
sbb
popa
dec
or
sbb
dec
daa
push
aas
cmpsl
out
