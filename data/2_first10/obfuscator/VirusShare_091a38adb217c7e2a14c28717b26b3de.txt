mov
cli
cltd
sar
adc
cmp
sbb
outsl
add
orl
faddl
ficoml
pusha
and
loopne
push
and
or
mov
mov
cmp
mov
inc
mov
pop
xchg
xlat
loope
roll
stos
cmp
test
xchg
jo
xchg
xchg
xor
cmp
int
mov
pushf
inc
jmp
enter
scas
sub
popa
mov
hlt
mov
sbb
and
xchg
pusha
arpl
stc
mov
push
or
rcll
cmp
pop
out
sbb
lods
outsl
push
or
jnp
aaa
pop
jns
dec
jnp
add
inc
es
iret
dec
pop
stos
scas
loop
stc
jb
mov
int
lock
xchg
push
cs
pushf
and
dec
push
mov
movsb
sub
jno
ds
sbb
mov
xchg
xor
push
add
push
dec
jns
leave
jg
dec
out
xchg
or
and
test
mov
and
bswap
cwtl
call
jmp
pusha
pushf
pushf
lea
call
test
test
cmp
sub
pushf
jmp
dec
push
lea
jne
call
dec
sub
icebp
jbe
sbb
in
mov
sbb
inc
sub
dec
add
outsb
mov
push
or
std
icebp
lock
psllw
xor
dec
jno
js
push
mov
stos
movsb
iret
cld
repz
or
sbb
call
bswap
pushl
popl
lea
cwtl
mov
movsbl
lea
movl
mov
lea
pushl
call
mov
call
lea
mov
rol
cmp
mov
cmp
sub
pusha
cmp
repnz
pusha
lea
jne
call
push
lea
jne
call
add
inc
js
je
jb
arpl
jae
lea
call
pushf
lea
jb
push
movb
pushl
ret
rol
or
clc
mov
clc
lea
shrd
mov
xor
rcr
pushf
mov
pushl
cmc
mov
clc
cmp
pusha
bt
xor
jmp
mov
iret
ror
aaa
loope
or
or
jne
push
data16
cmp
mov
jo
orb
mov
pop
cmp
cwtl
add
repnz
out
jne
iret
ss
pop
pop
and
ret
jle
cmpl
test
movsl
popa
xor
addb
inc
add
jmp
pushf
pushf
lea
je
cmp
test
cmc
add
pushf
pusha
lea
jmp
pushf
call
sets
inc
sub
cmp
xchg
test
test
sbb
mov
cmc
stc
mov
pushf
sub
jl
stc
cmp
push
rcl
mov
bt
pusha
pushl
movl
sub
jmp
jne
gs
xor
fs
insb
add
jle
add
movl
movl
call
jns
cwtl
out
jbe
lock
add
scas
adc
out
jp
data16
adc
stos
mov
jl
adc
stos
push
push
push
push
push
push
test
push
adc
dec
stos
cltd
stos
push
pop
xor
and
outsl
jno
add
jmp
mov
mov
leave
and
sub
leave
popa
and
ljmp
mov
orb
push
loope
mov
ja
pop
jno
sub
jecxz
daa
xor
adc
adc
fildl
daa
pop
jge
mov
popf
mov
leave
int3
push
lods
lods
xchg
icebp
cmp
mov
sbb
in
ret
orl
dec
dec
inc
add
mov
jno
out
insb
jp
sbbb
push
out
pop
inc
fs
into
jecxz
in
adc
shlb
and
fiadds
xchg
cmc
mov
add
xor
das
adcl
xlat
or
pop
adc
test
jo
pop
stos
sbb
fbstp
mov
pop
in
sbb
mov
out
cmp
imul
sbb
mov
add
mov
test
or
ljmp
adc
mov
cmp
sbb
push
push
subl
loopne
push
jnp
pushf
addr16
push
push
out
pslld
je
add
jge
in
fwait
jae
inc
inc
je
test
sti
mov
inc
scas
les
xchg
push
cmp
loop
push
push
stos
out
shr
lods
jmp
popf
fucompp
movsl
out
ffree
inc
xchg
jecxz
cmpsl
pop
pop
pop
push
add
int
or
pushf
pusha
lea
call
pusha
lea
jmp
pushf
jmp
call
jmp
cmp
pushl
push
jmp
pusha
push
lea
je
jmp
mov
inc
mov
test
cmp
jmp
xchg
xorl
out
out
in
jmp
jge
xchg
xchg
pop
lea
or
insb
hlt
push
xchg
xor
into
fsubrs
loop
jo
jae
mov
jbe
ret
sub
pop
adc
mov
add
cmpsl
mov
and
inc
rcrb
push
push
ljmp
cltd
popa
addr16
jb
xor
xlat
mov
mov
aam
mov
pop
xchg
jge
mov
dec
or
jb
jne
jno
je
sub
sti
enter
pop
push
mov
pushf
pusha
pushf
pushf
lea
jmp
inc
xor
jbe
mov
mov
lds
ret
mov
faddp
outsl
dec
insl
insl
imul
mov
xor
inc
bound
fmul
clc
dec
inc
xchg
adc
push
in
sbb
and
data16
lods
out
dec
and
in
sahf
out
sti
add
je
adc
lea
je
test
push
jmp
push
test
sub
call
jp
call
push
pusha
lea
jae
stc
test
sub
call
call
movzbw
sar
ror
mov
jmp
in
push
sti
add
pop
push
cli
std
add
or
or
loopne
into
mov
sbb
ffree
jle
add
aam
cmpsb
mov
and
mov
pop
cmpsb
cmpsl
fistpl
scas
ljmp
push
pop
insb
sub
sub
pushf
push
lea
jmp
movb
jmp
jg
lods
jmp
gs
frstor
cs
out
add
sahf
mov
into
lret
push
sub
es
xlat
fcomp
daa
sub
xor
les
data16
daa
add
lcall
cltd
dec
pop
xor
cmpsl
push
push
das
testl
popf
pop
scas
add
insl
push
ficoml
xchg
and
xor
jnp,pt
pop
pop
sbb
daa
dec
out
dec
push
push
jmp
mov
cmp
jne
js
add
cmp
cmpsb
insl
dec
push
mov
scas
pusha
lea
jb
push
pushf
movl
pushf
pushl
mov
pushf
lea
jmp
dec
and
mov
mov
inc
mov
push
push
sbb
jae
roll
xor
ror
xor
xor
iret
mov
and
sti
movsb
mov
or
daa
and
xor
jb
int3
scas
mov
shl
lret
jle
dec
dec
fcmovu
pop
mov
lods
repz
push
push
dec
das
insl
fsubl
addl
cmpsl
pop
mov
in
rclb
lods
iret
aas
lahf
inc
lcall
outsb
int3
add
push
lea
jb
jb
cmpb
pushf
push
lea
jne
bswap
sub
add
mov
cmc
pushf
add
bt
movzwl
sbb
add
mov
stc
pushl
add
test
jmp
add
push
pusha
rol
lea
shr
add
btr
mov
or
or
xchg
cmc
mov
btc
inc
shl
mov
xchg
inc
btc
xchg
xor
ror
movsbl
stc
mov
shrd
dec
push
jmp
cmp
pushf
movw
pusha
lea
jae
shrd
mov
bswap
sub
ror
mov
add
pushf
inc
not
mov
mov
push
jmp
inc
xor
jbe
sbb
jmp
out
out
in
lods
imul
or
push
out
xchg
int3
in
inc
dec
or
inc
out
and
bound
imul
cli
push
push
push
pop
push
int3
push
popf
mov
idiv
in
jmp
or
push
jecxz
or
and
fldcw
sub
sbb
xchg
aas
leave
iret
cmpb
dec
jne
xor
and
jns
rorb
out
sbb
sub
jns
mov
pushf
lahf
cs
cmp
into
fcoms
xchg
les
repz
out
sub
jg
call
mov
mov
mov
out
push
push
mov
repnz
sbb
lods
xchg
mov
out
mov
jns
xchg
pop
ds
push
or
sbb
pop
cs
xchg
das
lds
out
jo
jne
das
aas
or
xchg
cld
pop
loope
mov
fdivl
test
int3
call
dec
sbb
repnz
mov
add
add
xor
xor
xorb
adc
ror
ss
into
aaa
cmp
ss
xor
jle
jno
cmc
jmp
xor
into
iret
sarl
cmp
clc
js
jbe
pop
and
test
xor
jl
inc
out
jge
in
dec
jb
imul
das
xor
mov
dec
xchg
mov
cmp
pop
adc
pop
movsb
lcall
or
inc
push
inc
add
add
pop
adc
insl
nop
test
and
je
shl
add
mov
lea
mov
cmc
jmp
call
lea
pusha
push
mov
mov
mov
movb
pushl
xchg
lea
jo
pushf
not
movsbw
mov
lea
mov
lea
call
pushf
cmc
cmc
mov
lea
mov
test
sub
mov
pushf
pusha
movw
rep
pushf
pop
push
mov
pushf
pushf
lea
jmp
push
test
repnz
pushf
jmp
loopne
xchg
out
gs
or
push
or
add
cld
add
add
jbe
xchg
xchg
mulb
adc
pop
push
out
in
in
push
imul
loope
mov
pop
mov
mov
mov
fadds
mov
in
out
sub
fmull
pop
ja
int3
xchg
lea
cmp
jge
call
fisubrl
inc
movsl
adc
add
lahf
sub
stos
push
stos
jmp
inc
mov
jl
lahf
es
pushf
ret
cmp
lret
cmp
idivb
mov
push
push
and
daa
sbb
mov
pusha
pushf
lea
jmp
neg
mov
call
call
adc
in
out
gs
mov
mov
hlt
stos
xlat
cmp
cmp
mov
mov
sub
lea
pop
pop
push
movsl
mov
std
out
add
lds
xchg
nop
mov
std
or
ss
lret
cmp
pop
add
jae
dec
push
mov
mov
dec
cwtl
xchg
lods
std
or
cmp
lret
das
fldenv
xchg
insb
xchg
lcall
jnp
xor
stos
sbb
jb
stos
insl
ljmp
mov
nop
insl
push
or
or
fcmovu
adc
jmp
testb
cwtl
in
jns
rcrl
xchg
jle
lock
icebp
push
jb
mov
outsb
jo
rorb
in
pop
jecxz
mov
fwait
addr16
sub
adc
pop
sbb
pop
arpl
cmp
inc
mov
ljmp
in
gs
add
sti
stc
cli
add
adc
inc
inc
bound
dec
dec
push
mov
xor
psubw
mov
dec
dec
dec
dec
inc
dec
inc
pop
into
adc
out
sub
jo
ja
mov
mov
or
and
xor
arpl
cs
rclb
stos
movsb
testl
sub
jbe
add
or
push
pop
clc
push
inc
mov
outsb
xor
fsubp
cld
adc
mov
mov
mov
cld
mov
add
add
imulb
sbb
in
imul
jmp
sub
loope
in
sbb
add
sbb
jb
dec
out
out
ret
sarb
int3
sub
lahf
lahf
arpl
imul
pop
sbb
mov
rclb
add
inc
pushf
inc
pushf
pushf
pusha
pushl
lea
jmp
jmp
lea
je
cmp
sub
bt
cmp
jmp
cmp
add
test
xor
cmc
call
lods
lock
pop
outsb
sub
out
les
loop
push
rorl
call
jae
and
jmp
mov
adc
push
push
stos
into
jo
pop
insb
add
scas
je
xchg
mov
jecxz
add
das
outsl
icebp
add
xor
insl
mov
into
sub
add
mov
mov
sub
inc
mov
scas
stos
in
sbb
dec
aad
sub
bswap
mov
insb
jmp
cli
xchg
xchg
sub
xor
push
movsl
pop
and
mov
iret
push
jnp
pop
es
ficoms
adc
inc
add
dec
inc
ljmp
dec
mov
pop
and
cli
fsubrs
mov
nop
movl
out
mov
and
out
and
pop
into
xchg
adc
shl
stos
or
push
jnp
jge
mov
mov
cvtps2pi
push
arpl
into
ficoms
or
jmp
mov
loop
gs
frstor
and
and
es
pushf
popa
add
pop
inc
xor
adc
gs
pusha
jle
or
dec
js
or
add
push
xchg
jl
scas
jnp
mov
and
fdivrl
mov
int
cld
lahf
loop
jb
and
mov
sbb
sub
push
cli
out
scas
push
sbb
mov
in
loopne
sahf
movsb
out
or
add
sub
ret
cmp
cmp
xor
enter
daa
fsubr
mov
cmc
bound
cld
xor
ds
pop
mov
mov
cmp
aam
xor
or
mov
cmp
xor
xor
add
add
mov
aam
std
bt
pushf
xor
add
cmc
or
call
lods
lock
xor
nop
jae
jb
push
loop
xor
mov
mov
nop
int
adc
movaps
js
leave
jb
push
into
test
repz
jl
cmc
push
jnp
push
insb
or
mov
xchg
add
pop
scas
addl
jle
or
mov
sub
xchg
lahf
sbb
mov
cli
pop
lret
mov
adc
hlt
inc
mov
cmp
leave
inc
inc
aad
dec
mov
inc
andb
stos
fiadds
stc
loope
hlt
and
xchg
out
cmpsb
gs
aas
shrb
pop
sub
shl
inc
outsl
add
cmpsb
inc
rcrb
lret
add
adc
xor
mov
push
nop
pop
dec
fcomps
mov
rcl
and
sub
rcrb
xchg
mov
cmpsl
jnp
pop
adc
dec
fstl
cs
ficoms
clc
out
lea
call
call
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
dec
push
movsb
loopne
mov
jge
jbe
mov
pusha
ljmp
imul
js
dec
pop
pusha
jbe
cmp
enter
mov
pop
imul
cwtl
outsb
imul
pop
and
push
pop
adc
pushf
lahf
stos
push
lret
ret
sbb
sar
push
jmp
add
stc
jmp
fs
jle
pusha
movl
lea
je
bsr
bsf
add
bsr
sub
ror
and
stc
shr
bt
sar
rol
rol
mov
rcr
clc
pusha
movb
add
shrd
pusha
shld
add
lea
and
jmp
not
pop
pushf
pushl
ret
cs
fbstp
mov
stos
lock
sbb
cmp
ror
add
mov
push
jge
xchg
mov
cmp
ror
int3
inc
sbb
out
xor
cltd
pusha
stos
out
jb
cmp
jbe
push
in
call
nop
negl
jne
mov
sbb
mov
fistl
pop
push
vpunpcklqdq
push
push
push
push
movsl
mov
and
hlt
push
jbe
mov
testl
pop
cmp
add
mov
sbb
sub
push
pusha
call
stos
pusha
movw
lea
jmp
out
cli
fidivs
push
push
scas
cmpsb
mov
sbb
aas
jno
mov
dec
in
iret
jp
ja
orb
push
test
add
cmova
imul
leave
mov
mov
adc
push
loope
pushf
pusha
cmpb
pushf
jmp
xor
int3
fidivs
movsb
cmpsl
cmpsb
scas
movsb
push
stos
stos
push
push
push
stos
scas
push
adc
fwait
bound
jg
hlt
jb
xchg
xchg
mov
repnz
cmc
mov
into
call
cli
jbe
add
cmpsl
pop
mov
add
lods
jge
fcmovu
lcall
xchg
xchg
sbb
and
int3
ss
addr16
das
adc
mov
scas
daa
sbb
aam
lds
jmp
in
test
aaa
sahf
sub
sbb
and
sbb
je
xchg
lahf
test
outsb
push
ret
cli
lcall
jg
mov
cmp
leave
sub
xchg
aas
jns
pushf
fmull
push
pop
shl
mov
shll
mov
cmc
inc
mov
movsb
pop
or
nop
pop
mov
and
sbb
shr
push
stos
mov
je
bound
sub
fsubs
fsubp
cmp
jb
bound
sub
mov
cmp
in
shl
jb
adc
adc
sbb
fstps
adc
subl
dec
lcall
sahf
fadd
inc
out
adc
cmp
xchg
cmp
ret
das
loopne
push
icebp
xchg
push
pop
mov
sbb
fs
mov
stc
jecxz
stc
and
pusha
es
adc
jg
enter
ret
aad
jbe
ret
jecxz
in
sarb
fsubs
dec
xor
xchg
add
in
movsb
mov
mov
aam
xchg
insb
push
pop
jae
mov
idivb
test
cmpsb
mov
pushf
scas
mov
lret
es
inc
out
arpl
push
inc
addr16
lret
test
shll
jecxz
outsl
and
xchg
push
mov
lods
test
in
scas
lret
mov
int
pop
jns
xor
lea
mov
dec
add
sti
roll
es
push
stc
repnz
push
or
es
data16
cmpsb
loopne
jnp
xchg
inc
insl
bound
and
das
fcmovu
ret
enter
sub
sbb
add
inc
cmpl
ja
adc
add
xor
or
pslld
lds
mov
scas
xor
and
in
rclb
pop
fwait
scas
push
push
sbb
loope
mov
in
sbb
cmpb
jl
push
fwait
je
jne
mov
mov
adc
cltd
shll
nop
cmpsb
aaa
leave
mov
push
mov
aas
xor
js
mov
add
xchg
rcll
mov
mov
lods
movsl
adc
add
inc
add
test
bound
orl
movsl
insl
sub
push
adc
imul
sbb
outsl
xchg
jmp
outsb
jbe
pop
mov
idivb
jo
inc
int3
repz
outsl
xchg
gs
pop
sbb
repz
stos
cs
lods
xor
std
inc
jne
push
adc
movsl
pop
jae
fldcw
jecxz
or
mov
mov
outsl
cmp
fbld
movb
aam
adc
lret
dec
inc
mov
lea
and
in
jg
mov
imul
jno
xor
or
cmpb
testb
cmp
orb
push
fsub
fidivs
xor
cmp
popf
jno
jb
jle
mov
dec
pushf
andb
das
dec
dec
inc
mov
dec
mov
and
push
dec
addb
adc
jmp
inc
mov
sub
lock
xor
xchg
cmp
or
cld
xor
jecxz
jp
sub
push
push
add
xchg
sub
dec
std
push
stos
jmp
test
rcl
daa
adc
push
insb
and
pop
sbb
shlb
and
sbb
je
cmp
outsb
lcall
hlt
out
mov
adc
stos
dec
hlt
repz
and
sbb
hlt
out
ret
xchg
sbb
mov
jmp
sbb
hlt
inc
cmp
stos
mov
dec
hlt
xlat
ds
mov
xchg
dec
hlt
xorb
out
mov
dec
hlt
scas
cmp
mov
sbb
je
cmp
jne
xchg
dec
je
cmp
xlat
stos
dec
hlt
sti
ds
imul
cmp
sar
inc
sbb
je
cmp
push
mov
dec
je
cmp
sub
lret
sbb
hlt
in
cmp
add
dec
xchg
dec
hlt
out
cmp
stos
mov
sbb
hlt
cld
cmp
adc
loope
into
ret
sbb
je
cmp
adc
sbb
je
cmp
cmp
loopne
mov
int3
push
sbb
hlt
xchg
cmp
andb
pop
xchg
dec
je
loop
out
cmp
je
cmp
and
sbb
hlt
icebp
ss
sbb
sbb
hlt
test
cli
adc
jge
cltd
popf
mov
movsb
testl
cmp
mov
stos
dec
hlt
add
jecxz
inc
es
dec
hlt
loop
mov
int3
push
sbb
je
cmp
mov
inc
xchg
dec
je
xor
sub
xchg
dec
je
jb
ret
sbb
hlt
add
add
push
sbb
jmp
mov
stos
dec
je
cmp
fldl
mov
cmp
sahf
lcall
hlt
les
out
sub
int3
outsb
and
sbb
je
cmp
pop
ret
test
hlt
sbb
jge
call
xchg
dec
hlt
out
cmp
out
ds
jmp
or
call
push
pusha
lea
jne
call
stc
test
or
jmp
add
bt
mov
bt
mov
clc
bt
stc
test
pushf
jmp
mov
gs
iret
iret
into
leave
xor
xor
test
jnp
pushf
shll
xchg
xchg
insb
fldenv
and
and
fcmovbe
fcmovnb
push
sti
jb
inc
mov
cmp
sub
stc
mov
pop
mov
lcall
arpl
lds
enter
lods
shlb
arpl
sbb
jnp
jno
xor
or
or
xor
jno
mov
xchg
scas
scas
jbe
lret
shll
outsb
sbb
frstor
lahf
mov
out
in
in
les
loopne
leave
xor
sub
pop
add
mov
movsbw
pop
lea
not
bswap
mov
jns
pusha
pusha
movw
lea
call
jo
pushf
push
mov
lea
jne
pusha
call
pushf
jmp
pushf
pusha
movl
pushf
movb
movl
movl
push
lea
jmp
jmp
push
lock
std
std
xchg
or
dec
inc
sbb
int3
iret
pop
sub
pushf
mov
pop
ret
ss
cmp
mov
adc
dec
dec
add
cld
aam
pop
lds
ljmp
aaa
test
pushf
adc
cmp
cmp
inc
jbe
adc
xchg
push
push
mov
mov
add
adc
jmp
adc
dec
pushf
pushf
pushl
lea
jae
cmc
cmp
push
cmp
push
pusha
lea
ja
push
jmp
pushf
jmp
lea
jne
shl
movzbw
rol
mov
cmc
sub
xor
ror
test
not
mov
pushf
mov
mov
sub
cmc
test
cmp
pushl
popl
pusha
pusha
push
movb
cmp
mov
call
pushf
movl
jmp
jmp
out
outsb
jbe
in
in
in
call
call
mov
mov
jecxz
out
or
lods
or
xchg
rclb
addr16
test
in
ljmp
cld
bnd
les
outsb
inc
mov
pusha
lahf
xchg
xchg
jne
cmpsb
xor
iret
xor
or
dec
or
je
jns
cmpsl
test
int3
lock
cmp
call
movb
cmp
lea
je
pusha
pusha
push
lea
jb
pusha
cmp
push
mov
pushf
jmp
mov
push
clc
test
stc
or
pusha
call
stc
sub
movsbw
pop
sets
pop
jmp
inc
pop
mov
mov
mov
mov
and
jne
inc
mov
pop
shlb
add
into
pop
mov
lret
ss
pop
leave
xchg
pop
mov
inc
inc
mov
or
ret
or
out
and
aaa
mov
or
rolb
add
repnz
pushf
jmp
pushf
movl
push
jmp
push
test
and
rcl
shrb
xchg
sbb
hlt
scas
out
psubb
cmpsb
pop
test
sahf
xchg
gs
out
in
popf
aad
lret
xor
and
dec
pmullw
pop
cmp
push
or
pop
sub
or
ljmp
add
sub
data16
in
hlt
cmc
pop
jl
cwtl
pop
mov
jo
xor
out
out
xor
aad
out
out
arpl
popa
sub
out
cmpsl
sbb
add
loopne
and
and
jle
insb
sub
pop
data16
ljmp
inc
add
jae
stc
pusha
jmp
jmp
notl
add
cli
push
cli
stc
add
stc
stc
icebp
icebp
int
shl
jp
outsl
cld
adc
outsl
mov
mov
mov
outsl
xchg
xchg
loopne
nop
shr
js
mov
adc
andl
jbe
pop
cltd
jo
pop
mov
mov
lock
mov
testb
pop
sub
fists
ret
aas
mov
mov
test
lahf
fwait
ja
je
ja
jne
add
jae
or
cmc
adc
ds
imul
jmp
mov
lret
hlt
jle
sbb
sub
imul
push
jp
into
into
leave
xor
ds
into
rol
push
lcall
jb
and
jo
inc
push
cmpsl
out
inc
imul
sub
dec
in
adc
sbb
arpl
push
adc
and
cmpl
push
cld
add
cld
lock
inc
dec
rorb
sarb
inc
mov
xchg
nop
nop
mov
fisubrs
lret
ret
add
jne
sub
cmp
inc
ds
dec
push
mov
mov
hlt
lret
mov
lcall
pop
popa
xchg
insl
or
mov
sbb
inc
push
fiadds
cmpsb
adc
rcrl
and
shlb
ljmp
in
pop
movsb
les
in
cltd
fiadds
rcr
es
shrb
pop
cmp
or
fsubl
sbb
aaa
sbb
sbb
sbb
sbb
movsl
sarl
inc
and
jne
jnp
xchg
popf
mov
dec
jne
xor
incb
sti
loop
filds
xor
nop
outsl
daa
mov
push
call
mov
push
out
shrl
push
aas
test
pop
push
sub
mov
cmc
in
cmp
xchg
mov
shrb
sub
mov
mov
lea
js
fs
pop
push
or
testb
inc
or
jecxz
push
dec
iret
leave
lock
addr16
ret
push
jno
xchg
push
imul
popf
shl
in
pop
sbb
pusha
push
push
dec
mov
xor
dec
inc
repnz
xchg
in
cmpsb
cmp
sub
pop
push
insl
and
sbb
cs
or
vpcmpeqd
pusha
pushf
fwait
cltd
lahf
imul
push
leave
cmp
add
cs
mov
incl
push
incl
sti
ret
mov
add
jl
repnz
fadd
inc
push
jg
lcall
cmc
mov
clc
pop
sbb
mov
jmp
out
stos
jmp
out
rcrb
lret
mov
stos
jecxz
pusha
mov
mov
lea
call
pusha
pushf
jmp
movb
pushl
lea
je
clc
add
cmp
pusha
cmp
movb
push
pusha
lea
jb
cmc
call
lea
ja
sbb
cmc
ror
sub
shld
add
bsf
movzbw
sar
or
mov
ror
mov
clc
clc
bt
repnz
push
lea
jne
push
call
xchg
lea
jbe
js
addb
test
push
cmp
mov
sbb
out
out
iret
xchg
insb
sbb
cs
cmc
mov
sti
sbb
imul
movsl
fisttps
sub
pop
mov
or
ficoml
push
push
adc
jnp
adc
scas
mov
sub
fsubl
pop
sbb
push
and
jecxz
jnp
int
dec
sysenter
xchg
cmc
jmp
add
push
add
push
add
xor
xor
add
pop
push
mov
lea
jmp
lea
je
call
mov
pushl
jmp
not
movzbw
pop
not
lea
xchg
movsbw
pop
call
lea
jae
pusha
pushf
stc
cmp
jmp
pushl
popl
movw
pusha
pushl
ret
movzbw
mov
pop
pusha
mov
call
pushf
mov
lea
ja
pushf
mov
pushf
movl
pushl
pushl
ret
pusha
push
movb
call
pushf
lea
jne
pusha
mov
push
lea
jp
call
pushf
push
pusha
pushf
lea
jmp
and
mov
xor
into
lds
int
sar
mov
fidivs
cmp
out
and
test
test
pop
mov
iret
loopne
or
fisubrl
imul
push
sbb
push
push
gs
adc
mov
mov
add
inc
into
jbe
sub
roll
sbb
test
jbe
dec
xor
sarb
push
call
rcrb
sbb
lods
cmpsl
mov
pop
adc
sbbl
or
leave
mov
shl
sbb
mov
xchg
xchg
cmpsb
cmpsl
mov
and
xor
sub
and
cwtl
pop
xor
sti
or
ret
add
int3
mov
test
mov
add
int
mov
add
fmul
jbe
mov
mov
inc
inc
mov
inc
dec
mov
das
xlat
fadd
xchg
mov
xor
aam
mov
cmp
insl
jae
lds
inc
mov
add
sbb
scas
push
lods
call
stos
in
rclb
not
xchg
stos
cwtl
pusha
es
lea
push
push
pop
lea
push
pusha
movb
pusha
mov
movzbl
movsbw
setnp
cwtl
movl
lahf
lea
call
xchg
xchg
jbe
push
push
pop
pop
adc
jmp
in
adc
push
pop
call
in
fisubl
mov
mov
pop
dec
mov
push
mov
sub
mov
bswap
xchg
je
aaa
lds
les
mov
xorb
inc
arpl
sbb
or
add
add
add
cmc
jmp
int
gs
iret
xor
int
aaa
into
lcall
adc
imul
pop
sbb
in
jmp
jp
jg
jnp
jg
push
dec
or
dec
test
add
mov
call
lea
je
pusha
pushf
pushf
stc
cmp
lea
push
pushl
ret
xchg
lea
jbe
fcmovu
fisubl
daa
js
sbbb
mov
push
ljmp
in
push
cmpsl
mov
stos
push
push
lods
stos
arpl
outsl
insl
sub
nop
sub
mov
push
repnz
inc
dec
aas
mov
ja
xor
bound
rdpmc
cmp
call
fs
arpl
out
or
outsb
insb
adc
sbb
repz
dec
sar
daa
negl
pop
push
mov
ss
add
jg
jp
push
cltd
xchg
and
mov
fs
jae
dec
mov
pusha
inc
mov
mov
mov
pushf
lea
call
pushf
call
push
mov
push
pushl
movl
push
lea
jmp
not
mov
movl
movw
inc
jmp
movb
movl
push
push
lea
jmp
test
lret
jbe
push
push
scas
cmpsb
mov
stos
pop
jmp
or
adc
jl
into
lret
hlt
repnz
inc
inc
dec
dec
inc
mov
pop
out
test
mov
xchg
nop
sar
aaa
add
jge
lds
js
test
in
sbb
adc
sbb
mov
jnp
sbb
xor
push
popa
adc
fldl
and
mov
sbb
bnd
jbe
sub
push
sub
je
or
adc
jmp
gs
dec
in
clc
mov
aas
inc
jbe
dec
mov
jmp
int3
xor
shrb
and
das
sub
sti
xor
or
in
mov
push
sahf
sbb
mov
sbb
loop
sbb
hlt
lock
sti
lds
or
mov
or
or
inc
and
lret
clc
mov
idivb
jne
mov
xchg
mov
lds
shrb
mov
adc
xchg
mov
jbe
in
in
inc
pop
stos
xchg
jp
lahf
mov
fsub
fs
mov
lea
jne
jp
jnp
scas
xor
repz
push
and
cmp
lods
add
ljmp
cs
push
dec
push
lods
mov
mov
xlat
leave
xor
jae
or
stc
repnz
ret
imul
mov
test
movsl
repz
dec
push
fs
fmuls
into
mov
int
mov
mov
pop
xchg
stos
movsb
jle
aaa
xor
sbb
out
loopne
sbb
jecxz
out
pop
add
sub
inc
add
es
aaa
xor
insb
jl
dec
mov
add
push
push
push
cmp
sbb
push
push
sbb
scas
mov
mull
aas
fbld
push
pop
pop
lods
pushf
xor
aaa
je
pop
or
je
jns
push
jp
push
stos
mov
data16
add
iret
and
sbb
inc
ret
xchg
stos
movsb
jbe
mov
jbe
xor
ret
cmp
cmp
out
shrl
das
sub
push
jns
mov
pop
sti
add
dec
mov
mov
mov
aaa
cmp
insl
into
in
ficoms
jae
mov
or
sub
movsl
out
mov
gs
jnp
mov
mov
aam
xadd
mov
out
inc
into
fs
cltd
inc
outsl
mov
loop
rcl
scas
scas
push
push
jmp
lock
mov
loope
mov
orl
or
xor
add
cmp
sti
pushf
pusha
call
movw
pusha
movb
inc
jmp
test
enter
push
mov
cmp
cmp
out
shl
xor
mov
mov
inc
inc
mov
dec
cltd
xchg
mov
int3
cmp
rcl
xchg
sarl
cmp
xor
pxor
dec
iret
pop
mov
addl
xor
add
xor
dec
jo
jb
lea
je
pusha
sub
call
ja
pusha
lea
jns
stc
imul
clc
add
push
movb
lea
jmp
bt
stc
cmp
call
pushf
jmp
popf
rdtsc
nop
call
lea
jb
jmp
ret
dec
out
test
adc
mov
push
cmp
es
leave
test
iret
out
lea
fwait
es
and
cmc
pop
pop
jnp
sbb
pop
sub
repnz
orl
pusha
aam
test
data16
xchg
push
es
insl
int
cmp
add
scas
stos
xchg
pop
sub
test
push
or
dec
loope
pop
stos
inc
loope
lods
fsubs
sbb
and
inc
mov
jo
scas
jmp
out
pop
sbb
inc
pop
lea
sub
adc
xor
cmc
fidivrl
test
imul
cmp
and
mov
sbb
popaw
and
sub
xor
mov
mov
cmp
and
imul
cwtl
and
addl
les
in
mov
stos
sub
add
cld
or
mov
lea
movsb
testl
inc
and
adcb
dec
es
popf
or
push
jns
ret
or
stos
sbb
icebp
mov
pop
sti
fistps
out
int
and
add
lea
pop
cli
cmovns
inc
ss
inc
jmp
mov
fs
stos
mov
addl
lcall
fs
sbb
adc
jle
mov
cli
sub
mov
jge
or
sub
and
inc
sub
push
pop
test
jb
xchg
or
test
out
lret
fiadds
or
inc
xchg
push
ss
cltd
sub
ss
dec
jmp
stos
in
cmc
sub
mov
push
add
lea
ss
insb
cmp
cmp
dec
mov
insb
pop
in
test
pop
lea
pop
fsubrs
add
mov
idiv
mul
sub
ljmp
push
loop
mov
xchg
ds
cmc
ljmp
mov
adc
push
fiadds
xchg
cli
jge
data16
fisubs
sub
test
and
mov
dec
cld
stos
sarb
js
mov
jp
or
mov
mov
scas
addl
in
or
push
sbbb
adc
push
loop
xor
out
adc
lcall
xor
push
test
sbb
sub
cmp
push
mov
mov
inc
xor
cld
sub
fmuls
adc
lret
int
icebp
insl
sbbl
popf
lock
stos
mov
sbb
out
jns
xor
or
mov
add
das
icebp
adc
stos
dec
sbb
dec
icebp
data16
xor
inc
sub
stos
mov
lret
fmuls
hlt
pop
jmp
sub
fisubl
inc
lock
imulb
cmp
and
cmp
shlb
scas
jbe
jecxz
insb
sub
pop
jne
leave
dec
rclb
lret
mov
xchg
sahf
in
js
xchg
cmp
clc
inc
dec
dec
jge
imulb
adc
inc
lret
ljmp
mov
mov
lea
mov
scas
sbb
cmp
xor
fmuls
xchg
lret
pop
pop
and
lahf
icebp
jp
ss
xor
cmp
inc
gs
ss
icebp
popa
sub
lds
adc
inc
inc
sub
js
cmc
push
or
icebp
dec
dec
orl
jmp
insl
jmp
adc
cli
cmp
sbb
idivl
or
fsubrs
jp
adc
loop
lea
mov
test
xor
stos
jg
inc
push
loope
or
mov
cmp
pusha
fdivrl
mov
jecxz
inc
rcr
cmp
fcomps
fildl
or
in
inc
icebp
xchg
mov
jno
cs
imul
inc
sub
loope
sub
imul
inc
leave
rorl
mov
je
xor
push
iret
push
lods
push
mov
scas
mov
pop
push
mov
adc
test
jle
dec
sub
clc
adc
xor
cmp
add
out
int3
lods
jp,pt
add
mov
xor
mov
scas
adc
jmp
cmp
mov
scas
jmp
mov
leave
pop
pop
repnz
dec
pop
cmp
stos
addr16
xor
push
inc
mov
mov
test
or
dec
enter
lea
pop
mov
cli
cmp
dec
push
xchg
lea
push
lock
test
lock
xor
jo
sbb
dec
repz
mov
scas
ljmp
test
lods
xchg
mov
in
jns
pop
ficomps
stos
stc
sbb
adc
jp
or
fldt
js
pop
sub
add
mov
arpl
ss
mov
js
mov
cmp
ds
pop
inc
sub
jge,pt
sub
sub
js
and
es
sti
pop
icebp
sub
add
sbb
dec
pop
and
imul
inc
lods
push
lret
cmpsb
mov
cmp
sub
push
sbb
jb
push
mov
call
push
jmp
fs
lea
addr16
imul
insb
iret
xor
and
enter
add
sbb
sub
or
into
test
dec
sub
cmpsb
push
sub
das
sub
dec
cmp
inc
out
in
push
repz
in
xorb
xchg
lock
adc
and
clc
inc
mov
sub
out
fmul
jb
and
int
xchg
fimull
aaa
mov
inc
push
or
or
ret
cmp
sbb
mov
in
jae
clc
jl
repnz
scas
mov
fisubrl
scas
xor
push
std
jmp
lock
sbb
adc
fs
fcos
icebp
cmp
xor
imul
sub
jne
dec
cmp
loopne
repnz
cmp
lds
inc
sbb
pop
aad
fsubrl
add
shlb
call
and
out
fisubrl
je
mov
inc
mov
push
mov
push
stos
mov
xchg
mov
sbb
test
test
or
ret
cmpsl
mov
testl
cli
testl
inc
aam
push
enter
pop
and
jge
ljmp
sub
cmp
mov
dec
xor
mov
aad
cmp
sub
xchg
mov
outsb
pop
cmp
in
test
mov
enter
repnz
pop
test
pushf
jmp
mov
pop
mov
mov
mov
nop
fstpt
mov
es
jns
and
frstor
incl
xchg
pop
pop
inc
aam
xchg
add
sub
imul
mov
push
inc
fnstenv
pop
mov
lret
xchg
jmp
push
push
fimull
mov
mov
cld
dec
ret
adc
out
es
pop
mov
out
sarb
aas
dec
xchg
inc
test
mov
ret
mov
cmp
xchg
div
nop
pop
stc
jl
lods
push
cs
cmp
pop
leave
shlb
cmp
add
dec
icebp
sub
adc
or
stos
push
leave
testb
or
or
mov
pop
lahf
hlt
int3
cld
xlat
xor
mov
ret
and
jno
repnz
aas
jge
outsl
add
mov
fadds
or
cltd
sub
lahf
xlat
cmp
rol
aaa
out
rsm
adc
xor
jge
mov
iret
or
xor
dec
icebp
test
dec
or
in
mov
adc
aam
es
mov
sbb
cltd
lea
lret
push
inc
das
mov
lock
sub
mov
dec
cmc
lea
adc
adc
aam
scas
mov
notl
cmpsl
fwait
push
cmp
lcall
negb
jno
sub
jg
outsb
mulb
ljmp
iret
lea
stc
lcall
or
test
gs
scas
popf
jp
lret
jecxz
add
xor
mov
pop
or
in
push
cmp
lcall
imul
into
adc
ja
push
mov
sub
andl
les
cmp
cwtl
imul
decl
test
sahf
sbb
inc
cmp
inc
movsl
cwtl
lods
sub
int
lret
fidivrl
out
call
outsb
sub
into
sbb
sbb
mov
pop
xchg
lea
sub
in
sbb
pop
sub
cmp
rcrb
add
ds
cmp
mov
add
xlat
cmp
or
mov
jp
scas
or
aad
mov
push
or
mov
repz
outsl
stos
dec
jp
das
enter
int
test
push
or
lea
nop
stos
cmpl
jno
mov
lcall
pop
repz
in
out
cli
lea
xor
fucomi
test
lock
dec
or
in
jmp
nop
sub
mov
fst
push
adc
cld
cs
pop
pop
mov
mov
sbb
es
mov
and
lcall
or
sub
push
int
lock
cs
fmull
das
addl
and
mov
jge
shlb
pop
push
dec
add
mov
leave
push
xor
pop
mov
test
xor
cmp
fcoms
pop
mov
shrb
jmp
outsb
push
adc
shrb
xor
into
sti
adc
mov
ljmp
fiaddl
mov
xor
mov
jno
icebp
test
xor
das
das
mov
ret
pop
cmp
cmpsl
cmp
or
or
cmc
icebp
mov
push
inc
dec
or
mov
sub
rolb
push
pop
sarl
pop
mov
jo
cmpsb
sti
cmpb
ljmp
cli
call
cmp
mov
shrl
outsb
and
sar
push
rorb
lea
mov
fldenv
test
mov
arpl
fdivl
cmp
mov
shll
push
fimull
xchg
sbb
bound
dec
les
or
ret
and
lods
lea
push
xor
stos
xchg
flds
lcall
insl
sbb
cmc
push
sub
inc
cs
mov
push
ret
enter
and
mov
jle
adc
nop
movsl
inc
jmp
push
sbb
mov
addl
insb
mov
jb
ljmp
test
gs
test
cmp
shl
lcall
ds
xchg
dec
jp
or
sub
movb
mov
shlb
xor
adc
cmp
push
lea
sub
xchg
loop
jp
je
cli
inc
add
or
shll
lods
testb
fsubrs
cmpb
lock
push
cmpsl
jne
lods
stos
xor
add
pushf
mov
mov
fadds
add
int
sub
repz
mov
push
pop
inc
sub
stc
cmp
mov
mov
in
or
pop
cvttps2pi
mov
push
jnp
imul
enter
mov
stos
xchg
sub
in
sahf
stos
mov
addl
xor
mov
jb
ret
imulb
data16
sbb
xor
and
mov
adcl
out
std
loop
add
mov
or
jg
mov
cmp
dec
push
stos
lcall
scas
jns
nop
push
push
mov
pop
cmp
jecxz
jmp
mov
jmp
rclb
js
xor
cmp
test
fisubrl
push
jge
cwtl
and
or
jne
mov
int3
jns
mov
mov
sbb
jp
xchg
xor
imul
rcrl
jecxz
lcall
imul
cmp
shrl
ret
shl
push
repz
mov
stos
fists
add
sub
add
sub
add
xor
push
enter
sarl
dec
es
mov
adc
repnz
in
inc
stos
mov
jnp
push
push
cmp
sub
jp
fimull
and
sub
lea
int
add
pushf
stos
xchg
popa
sti
mov
sbb
out
xacquire
inc
lret
test
cmpl
sahf
mov
andl
mov
out
push
mov
sti
int
xchg
mov
fbstp
adc
mov
sahf
or
inc
or
xor
mov
mov
xchg
filds
pop
pop
sub
adc
xor
or
push
ret
mov
in
lods
lahf
xor
add
sbb
enter
jo
adc
cld
orl
jecxz
stos
push
adc
lock
stc
jp
pop
xor
jbe
jne
xchg
out
or
clc
mov
sahf
and
aaa
or
mov
fdivr
xor
jo
repnz
addr16
lret
jbe
cmp
sbb
xchg
scas
fbstp
dec
test
jl
cmp
inc
sbb
lahf
outsl
das
sbb
mov
and
cmp
jecxz
fisttpl
rcl
scas
fwait
sub
mov
dec
push
xor
xchg
mov
gs
mov
adc
sub
sub
jge
cmp
inc
lcall
mov
pop
fstpl
mov
mov
dec
es
cmpb
mov
stos
sub
mov
sbb
pop
jnp
or
dec
adc
xor
rcll
mov
dec
and
or
push
das
lea
popa
int3
pop
add
scas
inc
cltd
jnp
mov
aas
cmpsl
or
inc
push
dec
cmpsb
inc
or
or
and
ljmp
xor
cs
testl
int
ret
xorb
stos
mov
sub
int3
enter
out
xor
cmp
mov
mov
push
lock
loope
or
sub
mov
mov
aam
ja
push
mov
or
sub
sub
inc
mov
xor
outsl
repnz
fwait
or
lret
add
pushf
cmc
inc
jmp
sahf
jb
xchg
xchg
in
mov
repnz
push
pop
push
add
mov
mov
jl
fimull
jmp
popf
popa
cmp
cmp
sub
mov
es
in
xchg
dec
test
or
ret
pop
sti
and
push
movsb
loope
pop
sub
mov
mov
call
dec
lea
in
lret
pop
mov
test
or
pop
decb
repnz
pop
jb
lret
xchg
or
sbb
mov
ds
mov
cwtl
cmp
cmp
jmp
decb
adc
out
pusha
mov
sbb
push
push
adc
jge
inc
and
dec
lods
mov
gs
xor
xor
or
cmp
mov
fwait
int3
lcall
inc
mov
push
cmp
push
push
imul
and
data16
mov
and
push
hlt
fs
push
cld
pop
sbb
mov
dec
cmp
push
cmp
scas
lea
popf
sarl
and
mov
sbb
pop
inc
jne
jmp
push
lcall
imul
popf
stos
dec
push
and
decl
idivb
icebp
sti
lods
adc
push
inc
ljmp
jmp
mov
stos
jmp
popa
repnz
pop
inc
sub
bound
push
ss
cs
testl
push
imul
loope
sub
daa
cs
stos
dec
mov
mov
arpl
pop
pop
jns
pushf
add
cmp
call
sbb
sub
pop
sub
dec
pop
dec
inc
cld
cmc
add
leave
repnz
jb
inc
xor
lret
stos
jle
or
bound
xor
insl
ja
int3
pop
sub
pop
adc
sub
sub
jmp
or
mov
mov
lea
inc
add
add
mov
jl
ss
mov
sahf
adc
mov
cli
aad
cli
sub
outsb
jecxz
sub
lea
mov
repnz
mov
mov
jmp
push
js
push
mov
xor
sti
cld
aas
or
dec
dec
cmp
cwtl
pop
fisubrs
mov
lock
pop
lcall
or
enter
repnz
test
jmp
mov
adc
aaa
fiaddl
sub
shll
ficompl
insl
and
fdivr
xchg
mov
push
sub
popf
in
add
int
sub
dec
dec
xor
sti
mov
or
xor
cmp
adc
adc
sub
std
aas
dec
push
sbb
inc
sbb
sub
mov
jne
enter
inc
sbb
pop
dec
lds
out
mov
daa
test
fstl
or
and
adc
and
add
jle
push
repnz
cs
popa
ja
dec
xchg
add
inc
jle
mov
lock
lods
mov
mov
jb
cmp
mov
in
push
sbb
add
mov
lods
ljmp
mov
sbbl
push
mov
xor
popf
push
inc
xchg
pop
lods
test
cwtl
repz
push
inc
xchg
mov
pminsw
mov
or
push
lds
aad
push
mov
lcall
lret
mov
cmp
repnz
mov
sbb
or
or
sub
or
sub
xor
cmp
cli
cmpb
out
ret
lock
int
or
add
pushl
bound
cmp
dec
testl
push
xchg
mov
into
sti
sub
sub
sub
cmp
and
mov
jecxz
sub
punpcklwd
mov
mov
add
fdivl
movsb
lret
jp
push
or
out
nop
add
mov
movsl
sub
out
push
cmp
push
insb
xchg
je
dec
or
xor
mov
xchg
xchg
iret
nop
lock
mov
or
or
mov
scas
mov
push
out
ret
xor
mov
lret
push
aad
cli
fdivl
pop
pop
mov
mov
cmp
xor
mov
scas
mov
and
rorb
lea
es
cmpl
sub
fcoms
mov
xor
dec
mov
xor
push
xchg
shll
mov
push
sub
dec
xor
shl
loop
stos
inc
mov
inc
push
jnp
popa
xor
lcall
shl
push
and
jmp
jno
popw
jecxz
sbb
and
mov
xchg
repnz
popa
inc
mov
movhps
lea
stos
mov
mov
mov
arpl
mov
stos
sub
int
add
sti
iret
loopne
mov
cmp
mov
push
enter
mov
call
lock
dec
push
inc
mov
cs
ljmp
jecxz
fcomps
pop
repnz
cmp
fdivl
stos
or
mov
icebp
cmp
ljmp
inc
sbb
cmpsl
clc
cs
out
dec
in
test
outsb
ljmp
hlt
sub
and
repz
dec
push
out
cmp
mov
pop
mov
mul
popa
mov
and
mov
push
es
push
repz
xchg
xchg
cmp
subl
and
jp
icebp
pop
push
push
addl
inc
cmp
aaa
pop
sub
sbb
ja
arpl
addr16
mov
jge
adc
jmp
daa
stos
add
sbb
es
lea
data16
cli
dec
push
pop
and
or
and
stos
loopne
inc
xor
sahf
add
cmp
sbb
ret
outsb
mov
jnp
adc
cmp
xchg
sub
dec
and
jne
mov
add
loope
dec
adcb
sub
sub
addb
jmp
sbb
or
imul
into
or
xchg
stos
sbb
jo
mov
sarl
xchg
lret
and
call
enter
jmp
data16
or
mov
rclb
jae
lods
cs
stos
call
or
dec
dec
repz
fsubl
sbb
pop
mov
outsb
pop
xor
sub
pop
out
or
stos
popf
xchg
or
push
sbb
shlb
cltd
bound
negb
lret
xor
xchg
push
in
in
inc
or
sub
aad
or
xchg
or
jmp
pop
sbb
cmp
clc
pop
mov
int
scas
fcmovnbe
pop
aaa
cmp
and
loopne
rorl
inc
jle
add
or
out
icebp
adc
push
mov
inc
das
pushf
dec
and
sbb
insl
outsb
sub
cmp
leave
cmc
das
mov
pop
icebp
stos
push
testb
adc
mov
push
dec
ret
hlt
jmp
xor
inc
sbb
jb
ss
jb
nop
mov
nop
or
pop
jecxz
fmuls
sub
cmp
jge
inc
jns
adc
adc
cwtl
movsl
out
mov
repz
pop
mov
imul
lea
ds
inc
sub
cld
lods
jo
jecxz
stos
xor
cld
lock
sub
sub
pop
jle
jle
out
pop
inc
sbb
jle
and
dec
mov
sub
shrl
je
mov
stos
outsb
ret
adc
lcall
xorb
dec
stc
fsubrs
mov
inc
inc
lea
or
shrb
mov
stos
jmp
imulb
aaa
sub
mov
movsb
mov
rcrl
xor
xchg
fcmovb
loope
or
mov
push
dec
xchg
insl
lock
js
sbb
ljmp
sbb
jns
sbb
daa
pop
sub
or
mov
popa
fcompl
icebp
and
adc
test
clc
dec
cltd
or
or
add
cli
xor
mov
ljmp
mov
push
cmc
rcr
inc
aas
push
cmp
push
and
sub
in
adc
jge
adc
mov
push
es
cmp
cmp
push
pop
push
loope
add
sub
sbb
shr
jge
decl
cmp
adc
int
sbb
pop
jns
pop
enter
xor
bound
decl
repnz
into
repnz
pop
scas
jmp
xor
add
out
sub
xor
imul
ret
dec
pop
scas
cmc
or
xor
cmp
sbb
dec
sub
push
push
ds
fimull
add
movsl
data16
or
dec
shrb
dec
stc
lds
imul
adc
or
lea
jg
fs
xor
push
mov
mov
lcall
mov
jae
xor
out
mov
sbb
fistps
mov
orb
mov
or
das
stc
sbb
mov
jmp
jg
cmp
cwtl
stc
cmp
loop
mov
jg
sub
je
mov
adc
adc
xchg
scas
shl
mov
and
sub
pop
in
int3
or
loope
mov
in
scas
mov
add
std
ret
mov
outsb
jl
or
cmp
or
pop
dec
jl
cld
add
mov
dec
dec
dec
or
jle
aam
insb
or
ds
jp
loop
jge
pop
sahf
daa
loop
ss
jge
or
inc
lds
pop
cmpsb
aas
cmp
repnz
daa
push
xor
cld
mov
push
sub
xor
mov
jb
mov
xor
inc
jp
addl
out
jmp
enter
xor
cs
jle
cmp
cmpl
out
int3
stos
inc
xor
add
rorl
hlt
mov
icebp
iret
or
cmp
lcall
xchg
cs
cld
xor
leave
stos
out
lret
mov
lret
mov
sbb
and
stos
push
jns
pop
int3
cltd
outsb
iret
or
pop
aam
sbb
insl
add
sub
mov
cwtl
imul
stos
leave
mov
dec
data16
cmp
dec
sbb
dec
adc
call
xor
jge
xor
jge
loope
negb
ret
fcomi
push
dec
mov
lret
out
loope
ss
test
push
push
jnp
popa
push
stos
jp
jecxz
or
dec
movsl
stos
dec
gs
stos
repz
loopne
aaa
inc
sub
jge
stos
mov
std
in
das
fdivs
stc
inc
dec
mov
repnz
xor
mov
mov
int
nop
xlat
popa
fldt
ja
inc
js
lea
or
out
add
mov
dec
mov
push
pop
xchg
pop
sub
cli
lea
hlt
mov
push
cld
lret
int3
sbb
jle
xor
loope
or
lea
scas
paddw
jbe
call
mov
loop
sbb
add
in
mov
mov
lods
or
lea
dec
jmp
push
cld
ficomps
push
addr16
push
sti
jo
into
imul
mov
sub
fiadds
inc
fldt
fisttps
jae
enter
in
adc
stos
or
sub
or
popa
loopne
stos
lds
mov
inc
add
js
lea
jp
mov
mov
and
loopne
mov
cli
out
fs
sub
fmuls
mov
cli
ret
xchg
popa
jecxz
mov
lcall
push
add
adc
fcomps
addl
push
add
loop
push
sub
adc
stos
mov
add
inc
scas
sbb
and
sub
adc
mov
mov
jmp
shl
jp
lret
pop
test
sbb
lods
jmp
inc
movsl
sub
jge
movsb
mov
and
repz
fldenv
jge
dec
ficomps
cmp
in
jne
and
add
test
das
sbb
cmp
pop
in
sbb
out
fisttpll
lret
pop
stos
sub
decb
outsl
scas
dec
jp
or
repz
out
pop
fs
shr
sub
addr16
push
add
mov
ss
xor
jo
push
cmp
test
sub
lea
arpl
pusha
pop
daa
cmpsb
xor
jp
and
movl
push
insl
inc
xchg
jnp
or
add
jo
enter
dec
ljmp
mov
adc
push
repz
lret
xor
cmp
fdivrl
pop
ss
and
mov
repnz
jnp
mov
aam
in
lods
adc
cmp
imul
jne
xchg
ljmp
sbb
cli
add
cmp
add
jmp
inc
xchg
js
adc
sub
inc
ds
xor
out
loopne
outsb
daa
sub
imulb
pop
data16
push
loop
rorl
mov
int3
stc
mov
xchg
or
sub
and
out
clc
sub
jmp
aam
add
jecxz
popf
arpl
ret
rcrl
into
mov
ljmp
sbb
add
push
rolb
in
pop
sub
jg
cs
cmpsl
lock
repz
jle
sar
fcomi
pop
pop
xchg
or
dec
adc
icebp
sub
and
scas
dec
sbb
pop
sub
jns
shrd
jb
mov
sub
sub
dec
fistps
dec
repnz
loop
stc
xchg
daa
xchg
stc
or
sbb
add
les
cmp
fldcw
pop
mov
fdivl
jl
scas
sbb
xor
jmp
test
pop
and
stos
jp
call
cmp
mov
cs
dec
jno
dec
or
jecxz
scas
xorl
js
es
scas
add
sub
jne
sub
stc
adc
lods
sarl
movnti
pusha
in
cli
push
jmp
mov
pop
inc
fcompl
ret
push
inc
sub
push
push
pop
sarl
lock
mov
xor
mov
sbb
xchg
int3
push
sti
outsb
cli
mov
add
lods
pop
idiv
cmp
aaa
ljmp
cmp
dec
adc
in
pop
repnz
imull
out
inc
sbb
mov
iret
stos
sub
inc
movsl
mov
sti
cwtl
sub
stos
cld
fwait
push
or
gs
outsb
outsb
popa
iret
adc
lret
bound
add
lods
outsb
imul
flds
mov
sub
inc
dec
jbe
cmc
subl
push
or
or
sub
rorl
movsb
scas
gs
sub
sub
sub
scas
adc
repz
jge
cmp
adc
sub
mov
mulb
jnp
mov
comiss
or
stc
bound
and
aad
sti
test
jo
aam
and
pop
cli
or
pusha
insl
cmpsl
jnp
inc
in
or
pop
nop
sub
mov
sahf
sbb
mov
mov
push
push
repz
xor
ds
push
lea
test
pop
push
lret
cltd
jle
cli
adc
pop
shr
out
lea
mov
push
movsl
out
adc
push
cmp
test
out
notb
outsb
sub
push
inc
test
mov
add
mov
cmp
scas
repz
jmp
xorb
in
xchg
inc
fcoms
mov
shlb
mov
adc
cltd
enter
in
lock
mov
das
sti
mov
push
xor
jecxz
push
cli
mov
scas
jns
push
lea
repnz
frstor
stos
jle
mov
xchg
add
sarl
mov
repz
fiaddl
repz
jae
mov
or
dec
mov
cmp
inc
shl
lock
loopne
xor
insb
inc
add
lock
cmp
jbe
incb
or
rep
ret
or
ds
imull
cwtl
dec
test
cmp
sub
std
fneni(8087
shlb
mov
repz
sub
and
sbb
push
inc
jge
call
shr
movsl
and
stos
mov
push
jns
jne
and
adc
adc
dec
xchg
xor
outsl
movsb
scas
inc
jge
xchg
add
js
or
pop
je
int3
dec
jecxz
mov
hlt
or
mov
in
rcrb
inc
inc
pop
sbb
jp
sub
pop
mov
stos
fdivp
cmc
xor
and
shll
outsb
fsubrl
aam
in
out
mov
cli
call
pop
divb
cli
das
clc
out
push
sbb
jbe
push
or
mov
jmp
pop
ret
cmpsl
insb
mov
mov
scas
repnz
pop
jl
and
jns
sbb
or
xor
iret
mov
xchg
xor
push
int3
mov
insb
cltd
sub
lods
mov
xor
fcompp
mov
dec
xchg
icebp
mov
xchg
pop
jmp
pop
leave
cmp
pop
je
daa
ds
sbb
lret
xor
cmp
cltd
je
orl
cltd
out
cmp
sahf
icebp
jns
fmull
or
popa
jae
sbb
fcomp
leave
mulb
xchg
jl
dec
mov
cmp
sbb
dec
or
mov
lea
sbb
insb
das
cmp
in
loope
popf
push
out
mov
in
push
sti
insl
adcl
mov
pushf
or
sbb
cmpsb
test
lcall
inc
push
imul
lcall
inc
mov
push
int3
neg
dec
repnz
dec
inc
lea
sbb
out
fwait
stos
pop
inc
in
aas
gs
push
mov
call
xchg
pushf
inc
fcoml
pop
pop
and
add
inc
rorw
sahf
or
adc
sbb
insl
mov
dec
jp
pusha
xchg
ret
insl
inc
outsl
jnp
fistl
or
pop
lea
repnz
stos
push
sub
ja
push
cmc
cmpl
pop
test
cmp
in
in
push
mov
xorl
cmp
inc
rol
lret
adc
sub
call
dec
sbb
push
push
xor
mov
or
dec
lret
sub
or
mov
int3
lret
adc
fldcw
xor
mov
mov
in
inc
enter
sub
cs
test
pop
icebp
test
and
ds
cmp
cmp
inc
hlt
mov
or
shrl
stos
test
inc
mov
inc
aaa
arpl
inc
sti
lea
leave
cmp
cld
popl
std
dec
roll
rcrl
xor
pop
dec
repz
inc
dec
outsb
mov
jno
xor
sub
pusha
stos
push
dec
test
inc
mov
outsl
out
push
or
inc
sub
lea
js
pop
enter
icebp
imul
sti
rorl
jl
mov
dec
js
inc
mov
daa
add
cmpsb
sub
out
xchg
mov
mov
inc
fmull
in
pop
sub
xchg
pop
cmp
pop
pusha
inc
push
jne
push
or
subb
mov
fsubr
sbbb
and
pop
ret
fcmove
fsub
mov
hlt
enter
sub
mov
add
jo
xchg
fimuls
repnz
mov
into
lret
sub
mov
push
icebp
int
dec
cmp
sub
or
xchg
repz
adc
or
ljmp
mov
les
jl
cli
cmp
das
aas
sub
or
xor
jb
push
adcl
sbb
inc
andb
jmp
jae
inc
add
fdivrp
aaa
mov
sub
ret
pop
aad
je
xchg
mov
jne
xchg
cmp
cmp
lods
add
sbb
in
mov
sub
dec
pop
jecxz
idiv
xor
mov
fsub
stos
fmuls
xor
jns
cmp
lods
enter
jb
cltd
mov
sub
pop
mov
adc
pushf
push
mov
cmp
sbb
add
pop
jle
aas
jb
out
loope
xor
cmpsb
push
repz
cmp
repz
sub
adc
sahf
icebp
mov
xchg
test
dec
or
dec
or
leave
ret
push
icebp
push
add
in
adc
ds
popa
and
ja
xchg
fmull
fcomps
pop
inc
adc
and
cs
adcb
mov
mov
inc
sub
mov
mov
clc
lea
mov
jge
lea
pop
out
add
stos
jmp
xchg
cmp
push
mov
ffreep
jne
pop
and
arpl
cmp
jo
push
fadds
lret
mov
push
adc
add
jae
enter
cmp
xor
add
jae
mov
or
xchg
test
and
testb
mov
out
sub
mov
out
daa
adc
jne
inc
mov
jmp
inc
lds
mov
jb
repnz
and
add
sbb
add
cwtl
sti
jl
das
pop
or
jb
mov
pop
sub
sahf
or
mov
cmp
cmp
lock
stos
xlat
mov
scas
sub
sub
je
mov
dec
cmp
aam
mov
lea
sub
or
mov
test
fmuls
out
mov
sub
pop
cmp
clc
mov
cmp
push
pop
mov
sbb
js
sub
mov
sub
ljmp
push
pop
lea
sub
mov
in
mov
ljmp
movsb
scas
mov
lcall
pminsw
jge
push
dec
fsubrs
push
call
sub
cmp
mov
xor
push
imul
pop
mov
adc
push
es
test
sbb
neg
lea
xor
lret
mov
out
popa
sub
ficompl
outsl
fwait
jo
call
repz
cmp
in
xor
cmp
pop
dec
push
lea
cltd
push
mov
mov
data16
ds
sub
les
lods
scas
scas
stc
push
clc
push
nop
pop
fimull
dec
popa
add
aad
bound
je
in
aad
cmp
xchg
test
icebp
xor
jg
std
pusha
dec
andl
sub
add
fisttpll
sub
test
int
jp
cmp
inc
ret
xchg
std
fdiv
xchg
gs
add
push
mov
jecxz
ljmp
mov
out
xorb
push
mov
jecxz
push
imulb
mov
jne
hlt
mov
shll
adc
sub
subl
mov
mov
bound
mov
push
int3
mov
jle
cmp
push
popf
mov
xchg
std
xor
imulb
mov
mov
push
lock
and
push
or
cmpb
push
rolb
add
or
dec
shll
pop
push
cmp
popa
xchg
xor
pop
sub
cmp
sahf
pop
xor
mov
testl
add
das
jno
outsb
cmp
inc
lcall
roll
sbb
iret
cmpb
jl
jnp
andnps
cmc
loope
sub
mov
bound
sbb
pop
repz
sbb
adc
adc
cmp
jmp
xchg
mov
xor
repz
mov
lret
stos
fldenv
xchg
fwait
cwtl
and
jl
push
lret
lret
or
jb
dec
lret
add
mov
push
shl
inc
dec
mov
jae
insl
adcl
push
pop
icebp
dec
leave
add
add
xor
into
shr
cltd
data16
jp
inc
jg
aad
sub
mov
or
mov
xor
pop
jg
adc
sbb
cmp
mov
or
dec
cmp
inc
dec
icebp
sbb
mov
mov
lcall
dec
std
shl
inc
inc
repz
test
and
sbb
mov
stos
add
ret
stos
jne
adc
jno
mov
repz
mov
xchg
jecxz
ds
call
pop
aas
adc
dec
dec
push
xor
outsb
std
seta
and
ret
gs
xor
aaa
lds
insl
xor
add
call
iret
das
repnz
inc
sbb
sub
adc
loopne
add
daa
roll
pop
mov
andl
mov
les
dec
sub
fmull
repnz
cli
and
js
leave
daa
mov
mov
or
mov
andb
push
pop
or
stos
lock
fwait
sbb
jge
jmpw
cmp
or
pop
movsl
xchg
lcall
pop
fwait
mov
mov
gs
jl
lret
pop
enter
cmc
movsb
push
pop
adc
in
mov
rclb
rcrl
fsubr
lods
mov
adc
fiaddl
xchg
xor
clc
sub
push
jge
subl
push
and
int3
add
stos
cmp
push
xor
roll
out
add
nop
sti
push
or
xchg
insl
add
imul
sbb
pop
push
and
out
cmc
xchg
daa
jp
dec
or
or
xor
sub
lea
or
mov
out
sbb
mov
adc
aam
xor
jno
imul
in
mov
mov
or
add
cmp
or
xor
sbb
mov
and
add
mov
loope
add
arpl
sbb
inc
and
dec
mov
mov
ds
mov
rcll
sub
dec
mov
sub
pop
sbb
or
mov
pop
mov
inc
dec
leave
jb
adc
mov
push
or
push
stos
sti
xor
loope
in
push
in
mov
mov
enter
popf
into
xchg
cltd
sbbl
adcl
fbld
sbb
loopne
das
xor
cs
lcall
push
push
jecxz
cmp
leave
jae
push
push
jmp
xor
fs
cs
addr16
ja
mov
js
fwait
gs
fxch
mov
scas
repnz
into
fcoms
push
bound
cmpsb
cmc
mov
aas
movsb
jp
cmp
xlat
xor
xor
dec
sbb
and
push
cmp
fldenv
call
cmp
sub
or
sub
lret
pushf
shrb
mov
lock
in
cli
dec
cltd
dec
cmp
lret
lret
adc
adc
ss
pop
mov
dec
mov
js
mov
add
push
repnz
or
lret
ret
cltd
ljmp
mov
push
add
mov
int
inc
or
cli
mov
lret
loopne
cmp
or
push
mov
jmp
jp
stos
add
or
pop
xor
mov
or
test
daa
push
loopne
cs
jg
or
xchg
pop
dec
frstor
lea
dec
mov
pop
inc
mov
add
inc
mov
cld
sub
sbb
mov
mov
mov
psubusb
std
icebp
nop
pop
dec
cmp
dec
inc
or
cmpsb
sbb
or
ljmp
inc
iret
negl
mov
idivl
sbb
ljmp
cmp
add
hlt
out
stos
test
imul
dec
mov
loope
pop
xor
lcall
imul
sbb
outsb
loope
push
stos
inc
popa
sub
sub
push
andb
das
inc
sub
lods
pop
leave
mov
sub
push
sbb
mov
or
add
sub
ljmp
xchg
imul
sti
jl
nop
mov
jmp
lds
jecxz
imul
int3
xor
push
add
push
call
sub
into
xchg
lcall
xor
jge
addr16
icebp
cs
dec
sti
add
fcoms
repnz
inc
dec
stos
sbbb
dec
add
cmp
aas
xchg
pop
pop
sub
push
or
cmp
xor
jge
dec
imul
jbe
mov
pop
jo
lods
sub
addr16
push
fstpl
dec
lret
mov
fldl
std
jmp
push
pop
add
lea
movups
int
lods
jp
bound
mov
lea
mov
lds
cmc
pop
or
inc
push
jecxz
adc
and
shr
pop
and
dec
mov
or
cmp
aas
imul
mov
lret
imul
cmp
lods
cmpsb
jbe
push
jmp
scas
mov
pop
mov
cmp
in
mov
adc
ds
dec
inc
mov
aas
push
or
mov
imul
cmp
stc
stos
mov
add
out
in
sub
jae
lret
adc
outsb
lcall
cmp
xchg
mov
sarl
aaa
lea
sub
loop
int
jb
repnz
jle
cltd
xor
std
push
icebp
stos
jle
mov
cmp
push
push
outsb
add
dec
imul
mov
ljmp
and
gs
mov
ds
test
in
or
sbb
inc
pop
adc
push
xor
push
movsl
inc
xchg
or
addl
and
es
xchg
jp
pop
or
fdivl
sbb
sub
xchg
ja
mov
cmc
bound
lret
cmc
jecxz
les
push
or
push
mov
fdiv
fnsave
scas
xor
popa
add
mov
dec
lea
fs
icebp
ds
jge
mov
adc
jbe
or
jbe
imul
popa
cmp
mov
sub
fsubrs
jns
adc
mov
lret
mov
imul
sub
pop
mov
or
xor
mov
dec
mov
cmc
xor
cs
xchg
icebp
add
sub
adc
mov
mov
fldcw
rcrl
xchg
mov
test
xor
sbb
in
mov
mov
cmp
inc
push
shrl
leave
inc
add
popa
cmp
mov
pusha
cwtl
enter
inc
and
cltd
movb
iret
xchg
dec
jge
push
dec
pop
lock
dec
testb
jg
or
xchg
pop
jl
mov
mov
pop
sarl
xor
fmuls
cmp
rclb
in
rcrb
jno
ret
es
in
sahf
icebp
insl
mov
shrb
or
jge
test
xor
sub
xor
insl
push
cmc
xchg
insb
adc
aam
popf
add
mov
mov
pop
mov
pop
dec
adc
mov
xchg
in
cltd
dec
sub
sub
lret
pushf
pop
fdiv
push
xor
outsb
sarb
rdtsc
fnstenv
xor
les
lea
add
adc
les
pop
lods
push
add
mov
loope
jne
xor
fdivl
and
imulb
mov
lea
push
dec
cmc
fdivrs
push
jmp
sarb
cmpsb
icebp
jmp
mov
fcmovne
mov
int
push
fsubrs
fbld
jmp
in
mov
and
mov
or
fidivl
ljmp
test
fidivrs
mov
sbb
ret
sub
inc
dec
rcl
push
es
adc
les
inc
rcl
xor
jae
xor
add
lcall
pop
adc
pop
sub
cmp
fmull
inc
stc
adc
dec
cmp
add
cmp
pop
jecxz
lods
or
push
adc
je
inc
sub
cmp
rcrb
dec
push
cltd
jo
mov
push
je
dec
or
out
sti
outsl
add
adc
sbb
mov
sub
inc
inc
imul
or
into
push
xor
or
sub
dec
cmp
sub
fsubs
add
idivb
aaa
pop
cmp
das
movsl
dec
out
lock
neg
pop
shlb
out
mov
sbb
in
lret
outsb
cmp
loope
pop
and
push
add
adc
add
xchg
les
lods
bound
repnz
in
arpl
imul
mov
push
dec
push
loope
stos
adc
scas
scas
imul
sti
pop
push
sbb
adc
xor
push
icebp
repnz
pop
mov
mov
jecxz
nop
aad
loop
pop
push
mov
lcall
stos
xchg
and
pushf
aas
mov
pusha
mov
dec
pop
cmp
dec
cmp
jbe
mov
sub
jo
sub
mov
xor
arpl
push
pop
pop
lock
fcoms
outsb
xor
push
mov
repnz
into
pop
movsl
cmp
xchg
or
push
in
stos
std
lcall
sub
fimull
out
add
push
push
inc
fcomps
stos
mov
add
dec
push
xlat
jmp
pop
mov
fmul
fisttps
popa
sub
dec
sub
ds
pop
scas
das
lret
xor
or
jmp
int
adc
cmp
sbb
add
xrelease
mov
adc
xor
pop
jnp
mov
mov
jnp
mov
xchg
test
cmp
in
popf
mov
dec
fs
sub
cmp
rclb
cmpl
push
or
lock
xchg
insl
sub
dec
dec
ror
pop
jge
jae
cmpsb
pusha
mov
rcrb
mov
sahf
jle
pop
nop
pop
mov
insl
xor
and
mov
subl
loopne
hlt
lret
push
and
mov
push
add
or
jl
inc
mov
int
cmc
std
dec
sbb
pop
sbb
and
cwtl
cmp
push
mov
push
dec
and
cs
cmc
fisttpll
jge
pop
push
pop
clc
vpcmpgtw
jns
jecxz
xchg
sub
dec
pushl
rclb
dec
mov
mov
xchg
repz
mov
mov
js
add
sbb
mull
mov
mov
fidivrs
push
sub
dec
jge
dec
xchg
push
popa
inc
add
adc
lds
jmp
mov
daa
stos
pop
xchg
leave
dec
sub
lds
repz
jmp
xchg
test
notl
daa
lret
jmp
pushf
cmp
aaa
pop
rclb
cmp
jae
in
addb
mov
dec
push
out
sahf
js
sub
mov
mov
inc
xor
pop
sbb
das
or
and
nop
add
shlb
cmp
out
inc
mov
mov
mov
xorl
push
in
push
cmpsl
hlt
stos
adc
int
mov
xor
ss
xchg
or
imul
dec
dec
add
mov
popf
icebp
and
sub
pop
insb
movsb
in
jnp
repnz
sarl
popa
into
mov
jno
imul
xorl
push
push
and
sub
in
xor
inc
adc
cmpsb
push
add
push
lea
jae
fsubl
jg
and
ljmp
xorl
fdiv
sub
nop
xor
out
sbb
shll
mov
pop
fcoms
outsl
in
stos
int3
sarl
or
mov
div
arpl
insb
bound
inc
jge
pop
icebp
mov
sub
xor
jge
jp
dec
jo
cmp
add
mov
sbb
pop
je
stos
out
pop
out
mov
xor
push
add
negl
xlat
jmp
jmp
loope
mov
ja
cmc
sbb
mov
xchg
add
add
inc
imul
lea
xchg
xor
jae
pop
or
mov
mov
or
pop
mov
fsubl
jp
cmpsl
pop
push
into
aam
lret
and
jge
or
outsb
leave
mov
inc
xor
lret
xchg
call
push
popa
gs
push
sbb
xor
or
fwait
bound
mov
mov
or
loop
dec
inc
pop
inc
xchg
call
add
aad
cmpsl
pop
mov
repnz
stos
add
mov
dec
daa
dec
lods
shrd
sub
mov
xlat
cmp
cmp
mov
mov
push
lock
test
xor
sub
inc
sbb
lock
pop
push
xor
pop
or
jg
adc
or
ds
xor
icebp
mov
dec
adc
pop
and
dec
inc
shll
or
adc
mov
daa
jne
shrl
in
cli
push
pop
movsb
mov
je
rorl
cmp
mov
repz
clc
loope
push
rclb
enter
scas
inc
loop
pop
int
or
xchg
lds
mulb
push
sbb
cmp
xlat
or
inc
test
inc
xchg
push
je
mov
outsl
push
xchg
stos
add
dec
js
scas
in
movb
lahf
jg
dec
mov
inc
out
and
fildll
repz
add
sub
jge
fidivl
push
mov
add
xchg
push
imulb
out
cmp
jo
add
jg
jnp
call
mov
imul
out
dec
mov
out
add
inc
dec
ds
or
out
xor
dec
jmp
in
inc
cli
lea
adcb
stos
mov
jne
and
in
in
dec
sbb
loopne
mov
adc
mov
or
stos
inc
es
adcl
enter
popa
push
mov
out
enter
jl
fdivrl
jb
movsl
leave
movsl
cld
stos
outsb
dec
cmp
mov
aam
fcomp
out
push
scas
in
out
add
jno
add
dec
or
ja
pop
in
sub
test
scas
cmpsb
test
pop
not
sti
stos
push
adcl
or
lret
mov
in
jo
sbb
pop
ljmp
dec
nop
stos
sub
ljmp
in
mov
mov
jg
arpl
inc
arpl
push
ja
mov
cli
push
xor
pushf
push
mov
fdivrl
push
addb
adc
mov
cmpl
pop
cli
fiaddl
dec
add
je
and
cmc
leave
dec
add
imul
dec
loope
fsubrp
mov
or
pop
push
and
test
jbe
push
fdivp
xchg
lea
dec
insl
pop
cld
push
out
stos
imul
or
adc
jp
lea
arpl
cmpsb
push
jmp
cmp
insb
cli
add
xor
sub
jnp
inc
lea
subl
mov
push
cmpsl
lcall
inc
ljmp
js
scas
nop
pop
imul
xor
loope
add
push
iret
shr
clc
cmc
cmp
pop
dec
sbb
or
push
adc
mov
dec
imul
sbb
sti
mov
mov
push
push
xchg
jmp
mov
push
push
add
sub
mov
mov
cltd
mov
and
dec
dec
pop
shrb
inc
jbe
add
xchg
sbb
ret
push
sub
mov
inc
test
sbb
mov
or
aam
out
sub
add
out
mov
fisttps
sub
enter
jg
push
nop
cmp
mov
dec
xor
xor
lea
push
cmp
xor
cs
push
popa
mov
test
adc
xor
jmp
lea
addr16
fistpll
mov
imul
mov
mov
cmp
pop
ret
mulb
cwtl
sti
cmc
push
sbb
std
push
orl
add
lret
jns
jmp
mov
sti
shll
lock
imul
jns
lock
sahf
and
mov
test
cmpsb
adc
into
test
push
adcl
cmc
sar
push
lea
lea
xchg
stc
sbb
sub
push
pop
insb
pop
int3
gs
push
lods
stos
or
mov
jmp
mov
stos
and
sub
shr
and
xor
icebp
xchg
xchg
lretw
dec
pop
cmp
cwtl
les
jecxz
xchg
int
inc
mov
jge
cld
int
mov
movsl
push
inc
fdivr
in
ds
repnz
repz
jno
jge
push
imul
push
and
addl
in
mov
imul
and
fs
push
jmp
loope
vhaddps
int3
pop
and
sbb
js
push
lea
or
jp
lcall
insl
dec
mov
clc
and
sub
and
pushf
std
inc
hlt
or
lods
cwtl
inc
push
cmp
pop
xor
js
sub
pop
fucomi
or
cs
add
repz
sbb
loopne
pop
jecxz
cmp
jne
push
push
std
mov
mov
cmp
push
aam
jmp
lock
add
es
jns
push
mulps
cltd
lds
lret
lea
pop
test
mov
cmpsb
sbb
scas
mov
xor
lods
sub
ds
fcom
andb
pop
das
jecxz
push
push
and
dec
xor
mov
mov
push
mov
fsubrs
sbb
icebp
add
fsubl
test
loopne
push
pop
in
or
pop
mov
sbb
xor
sub
fnstsw
jecxz
aad
push
popa
rolb
fisttps
call
jo
arpl
popa
xchg
jp
or
cld
jmp
fdivs
mov
lods
jnp
or
stos
push
jo
dec
dec
aad
cmp
lock
push
fimuls
push
mov
lock
mov
mov
xlat
cld
fcmovnb
jmp
cmp
jge
cmc
or
repz
adc
outsl
push
dec
ss
dec
and
push
lds
gs
pop
jbe
pop
mov
lret
sahf
sub
daa
sbb
push
inc
adc
in
push
inc
mov
dec
lds
mov
cmp
cmp
push
ljmp
adc
sbb
sub
in
cltd
jmp
xor
popa
pop
test
mov
bound
in
sub
iret
lea
ss
icebp
inc
jecxz
push
mov
sar
jo
pop
in
push
pop
xor
mov
xor
mov
in
ds
adc
pop
mov
or
cmc
inc
pop
arpl
scas
lea
ja
dec
fmull
cmp
cmpsb
or
lcall
icebp
imul
fstpl
outsb
adc
punpckhwd
imulb
xlat
repz
mov
stos
mov
cld
aad
mov
leave
mov
das
add
insb
rcrl
sub
mov
jo
mov
or
mov
jne
mov
imul
or
enter
sti
mov
or
push
pop
scas
fnstcw
adc
pop
xrelease
movsl
mov
mov
dec
sbb
mov
ljmp
push
pcmpeqb
xchg
in
or
mov
pop
fmull
jge
in
and
xchg
jmp
pop
sahf
jp
leave
dec
lea
stc
mov
stc
test
stos
jge
icebp
cmp
jae
cmp
dec
sbb
xor
lea
sahf
jecxz
or
addl
xor
add
lock
sbb
int3
add
jmp
stos
sub
sub
inc
cmp
or
pusha
add
out
popf
sub
add
inc
mov
cld
xor
jmp
jno
push
mov
pop
cmp
push
shl
sbb
icebp
adc
outsb
bswap
xor
jno
ret
xchg
repnz
shl
dec
add
mov
sbb
stc
out
xor
cmova
mov
ret
or
mov
mov
ds
shl
inc
push
jp,pn
push
out
mov
das
mov
pop
clc
inc
push
sbb
loop
push
lods
bnd
jle
pop
fsts
jge
dec
stos
mov
in
insl
jecxz
lea
out
mov
lods
sub
pop
hlt
push
and
icebp
inc
mov
or
mov
xlat
push
popa
push
daa
iret
in
lock
lds
xchg
inc
xor
pop
mov
movsl
dec
xchg
add
in
lea
movsb
xchg
or
and
push
sbb
push
cmp
sbb
stos
inc
or
cmp
dec
inc
icebp
lods
cmp
push
sub
sbb
jge
icebp
imul
or
push
xor
std
sub
push
stos
lods
push
push
mov
xor
jge
lods
sub
outsb
in
mov
jmp
stos
cmp
dec
add
mov
icebp
mov
push
stc
lret
out
adc
mov
xor
inc
xchg
jae
jno
ja
pop
add
loopne
into
int
jle
movsl
lret
sbb
inc
pop
lods
int
cmpsb
cmp
inc
out
add
pop
outsb
push
dec
bound
popf
xor
jo
arpl
cltd
mov
sahf
xor
dec
fs
jp
sbb
ljmp
xchg
push
stos
movsb
and
push
cmpsl
and
popa
out
push
sbb
imul
decl
inc
stos
enter
pusha
mov
pop
jecxz
mov
inc
sarl
test
insb
loopne
pop
fsubl
and
mov
mov
mov
xor
jg
cmpsl
out
stos
fdivrl
lods
xchg
xor
js
sub
psubsb
dec
mov
imul
push
mov
lea
or
dec
sub
mov
xor
cmpl
sub
lods
and
imul
mov
shl
cli
add
dec
movsl
cmp
cltd
fcmove
in
sub
mov
push
jge
imul
add
repz
fnsave
lret
in
jmp
pushl
jle
xor
rolb
jecxz
cld
mov
cmp
sub
sub
inc
lods
stc
add
rcrb
in
dec
mov
out
push
es
popa
mov
jmp
ret
pop
das
mov
xchg
inc
dec
jno
ds
mov
adc
rorb
out
pop
inc
test
pause
push
repnz
insb
gs
xor
cmp
test
cld
push
jnp
or
push
mov
pop
jge
jnp
push
xor
jmp
ds
xlat
sub
je
mov
push
insl
mov
sbb
pop
jno
cmc
jp
outsb
xchg
bound
jo
or
pop
test
stos
push
into
test
or
push
xor
push
jmp
or
mov
daa
int
mov
jb
or
xor
fst
jno
or
mov
aaa
mov
mov
popa
cmpsb
adc
call
imul
aaa
xor
add
mov
adc
into
idivb
xor
rcr
popa
fiaddl
sub
sbb
repz
sbb
xchg
lret
imul
mov
dec
mov
in
lods
or
out
mov
add
cwtl
mov
sbb
push
ss
mov
cmp
jb
arpl
por
sahf
and
ret
jns
lcall
cmp
and
sbb
and
push
cli
adc
inc
not
lret
jp
fs
fcmovb
mov
cmp
mov
xchg
mov
lock
into
outsl
add
mov
or
mov
inc
dec
sub
and
push
test
mov
pop
dec
xorb
or
lods
push
pusha
cmp
xchg
add
movq
push
loope
mov
inc
fldcw
sbb
repnz
push
xor
ljmp
subl
outsb
mov
mov
lea
mov
pop
push
sbb
pop
inc
sahf
ljmp
pop
xlat
or
in
push
pusha
fs
add
mov
mov
jle
lds
divl
push
out
arpl
test
or
sbb
pop
jno
stc
lods
inc
xchg
movsb
enter
xor
mov
mov
mov
xchg
mov
in
nop
mov
sbb
addr16
rcr
and
jnp
dec
fmuls
imul
cmp
adc
or
sbb
sub
lea
ja
and
fbld
push
mov
jns
test
repz
pop
sub
mov
repnz
mov
xchg
or
mov
cmp
test
ds
pop
popa
xor
sbb
je
stos
lea
enter
jb
add
inc
pop
fwait
aad
mov
push
mov
cmp
arpl
jns
scas
push
add
repz
push
arpl
arpl
mov
sbb
pop
add
mov
mov
fs
sub
jae
pop
mov
jno
and
add
or
subl
fwait
test
mov
bound
xor
iret
stos
ss
scas
daa
jno
sahf
add
in
dec
in
lret
add
mov
adc
lea
rclb
aam
add
fcmove
insb
push
fdivr
mov
ss
cmp
jge
pop
fsubr
push
xchg
cwtl
in
sbb
push
stos
xchg
int
test
shrl
push
mov
dec
loop
push
repnz
loop
aam
xor
inc
jge
cmpsl
stos
addl
mov
mov
js
jg
push
mov
dec
testl
pusha
or
xchg
or
inc
or
push
cmp
shrb
sbb
arpl
fmulp
dec
out
push
insb
adc
sbb
jg
daa
outsb
imul
gs
xchg
push
jle
mov
out
mov
loope
sbb
dec
jle
pop
stos
in
pusha
cmp
sahf
bound
mov
mov
cs
xchg
scas
hlt
mov
pop
enter
cvttps2pi
xlat
mov
aas
inc
mov
pop
out
shrl
in
jl
sbbb
fists
sbb
mov
aam
call
stos
mov
sbb
jge
pushw
insl
ds
or
popf
aad
mov
sbb
mov
dec
mov
and
sub
mov
adc
push
xchg
into
mov
cld
adc
sbb
sti
dec
sbb
ds
dec
xor
mov
test
cmpsb
enter
mov
push
pop
popf
xor
fdivrs
in
adc
arpl
fistpl
sti
xor
pop
inc
and
aas
push
adc
add
pop
jb
nop
and
test
push
int3
bound
jno
dec
mov
push
gs
enter
jno
pusha
jle
mov
or
and
cmp
mov
mov
movsb
aam
cmc
sub
mov
mov
mov
gs
jnp
inc
mov
pop
lock
fisttpll
sub
jmp
clc
imul
xor
in
aas
sti
jge
divl
sub
mov
lret
mov
ds
ss
lea
out
adc
outsb
leave
jge
pop
sub
xor
push
incb
lret
imull
jmp
and
cmp
sbbl
popf
adc
add
cmp
cmp
addr16
inc
jnp
shll
mov
addr16
test
lods
add
xorl
or
sbb
test
jl
and
jo
sbb
jecxz
push
and
fdivrs
mov
outsl
jmp
cmp
add
lds
enterw
stos
test
decl
cmp
out
sbb
jno
sbb
stc
jb
xor
pop
call
movsb
mov
cmp
lea
bnd
fisttps
xor
xor
cs
cltd
lret
mov
test
push
mov
repnz
sub
push
out
cs
inc
sub
test
stc
mov
and
xchg
lea
pushf
rcrb
xchg
into
fisubl
dec
jge
push
lcall
jae
fnstenv
lock
mov
leave
inc
pushf
xor
test
cwtl
popa
adc
xchg
dec
in
cmp
es
jmp
fcomps
mov
mov
sbb
sub
stos
lods
out
fdivs
xchg
add
popf
mulb
jo
xor
pop
adc
mov
enter
add
icebp
stos
xchg
lahf
out
lds
icebp
add
mov
in
in
out
add
mov
adc
mov
ret
scas
sti
in
xchg
inc
mov
inc
rol
es
lea
push
mov
dec
les
cmp
add
loopne
aad
mov
ret
sbbb
push
xor
out
pop
aad
dec
adc
setle
enter
lret
pop
inc
inc
push
sub
and
mov
std
or
jnp
cmpsb
jmp
cltd
inc
mov
mov
dec
cltd
sub
mov
repnz
sbb
lock
jecxz
cmp
cmp
pop
or
adc
push
popa
sbb
test
mov
lock
jb
cld
call
mov
cs
test
cli
out
stos
lock
iret
js
imul
or
inc
test
sub
repnz
cmp
cld
pop
mov
sbb
push
push
mov
cs
cmp
fwait
cmp
sbb
and
mov
mov
scas
mov
push
push
pop
enter
fadds
pop
jno
sti
mov
out
gs
sti
jp
aas
pop
xlat
lods
xchg
or
outsl
sbb
push
dec
and
xchg
int3
repz
cmp
sbb
xchg
mov
cmp
mov
sahf
test
push
xchg
sub
inc
xchg
sbbl
push
and
pop
nop
push
sbbl
mov
fwait
out
xchg
shl
into
jbe
xor
mov
dec
in
std
xor
pushf
test
test
lret
cmp
pop
fwait
cmpsl
divb
add
xor
clc
scas
cmp
or
jae
push
push
mov
ret
lret
add
outsb
and
mov
test
pop
cld
mov
sti
push
bnd
mov
xchg
scas
cmp
testl
ror
push
add
bnd
repnz
jecxz
movsl
sub
pop
mov
loop
jecxz
jno
stc
jo
xchg
inc
xor
in
daa
sub
adc
mov
push
add
sbb
scas
dec
dec
outsb
jg
filds
mov
dec
sbb
fistps
mov
call
bnd
or
adc
scas
mov
xor
test
mov
mov
jnp
scas
add
cs
ds
add
pop
mov
xor
sub
mov
adc
popf
or
cwtl
nop
fisttpll
cmp
aaa
lock
inc
stos
loopne
andb
jbe
fsubrs
test
cmp
stos
sub
pop
lods
enter
fistl
cmp
test
sbb
sub
inc
pushf
dec
stos
ljmp
jecxz
mov
push
sub
jg,pn
aaa
pushf
adc
inc
ljmp
icebp
fstpl
or
shr
rorl
push
and
pop
popf
mov
outsl
mov
insl
cmp
dec
jno
jmp
adc
mov
inc
or
ds
cmp
push
sbb
mov
fsubs
inc
ljmp
dec
insl
iret
cs
test
mov
dec
and
or
or
adc
fists
rep
dec
mov
out
xchg
fisttps
adc
add
dec
push
repnz
sub
push
int3
fisubrs
cmp
jmp
xchg
sarl
pop
jmp
aaa
jl
mov
insl
push
push
adc
and
icebp
lcall
movb
loope
push
in
and
or
jmp
jle
and
stos
leave
icebp
and
pop
stc
adc
mov
cmp
dec
fdivrs
mov
xor
cmp
inc
stos
jb
sti
push
out
insl
xchg
push
push
daa
sti
out
mov
bound
cmc
mov
mov
aas
cmpsl
sahf
cmc
push
loope
or
push
mov
or
cmp
add
or
ret
sbb
iret
push
stos
fmuls
jbe
add
inc
js
cmpsb
testb
jmp
mov
dec
xor
inc
lock
xchg
aaa
popl
sub
in
sbb
mov
repnz
mov
js
inc
repnz
mov
push
stos
or
or
sbb
push
aas
fcompl
cmp
mov
cmp
cmp
mov
lcall
jge
jle
dec
xchg
into
xor
es
push
push
xchg
out
outsb
out
jge
add
call
lret
fadds
lea
scas
pushf
mov
pop
arpl
adc
mov
sub
shll
dec
add
loopne
sahf
sub
outsb
lods
or
push
xchg
call
aam
hlt
jo
jecxz
push
sahf
sub
into
inc
inc
add
add
mov
xlat
xor
mov
push
cmc
test
and
shlb
cmp
mov
jge
pop
inc
std
dec
sti
out
mov
repnz
sub
mov
sbb
xor
jecxz
mov
dec
stos
and
jae
inc
out
adc
pop
jns
xchg
ss
cmp
sti
cmp
bound
jmp
imul
repz
add
daa
pop
sub
pop
push
jmp
mov
jg
bound
jmp
fs
cmpsl
jge
in
jno
cmp
mov
xor
mov
xor
sbb
repnz
pop
sbb
mov
xchg
fisubl
pop
adc
mov
jbe
scas
cmp
sub
sub
mov
movsl
sahf
popa
xorl
adc
mov
mov
pop
test
push
or
into
pop
aam
or
sbb
fadds
rol
jns
std
lock
sbb
ljmp
aad
push
and
add
cmp
adc
sahf
insl
jb
scas
shll
mov
mov
mov
push
mov
push
mov
outsb
subl
rcrb
lea
pop
cld
cmp
cmc
lods
and
or
mov
fdivl
in
and
mov
cmpsb
mov
sub
push
sti
and
rcrl
xchg
mov
clc
shlb
pop
imul
cld
inc
xchg
in
cmp
pop
xchg
fldpi
mov
rol
rcr
jae
dec
daa
lock
cmp
out
int3
repz
mov
jp
xchg
push
dec
js
jecxz
outsl
pop
repnz
or
hlt
and
push
mov
mov
mov
push
mov
aaa
fsts
addb
dec
cmp
add
lods
std
lock
jb
stos
movb
mov
hlt
test
imul
jns
or
insl
mov
imul
test
and
sbb
jns
sbb
push
into
inc
stos
xor
cld
mov
rolb
bound
lea
cmpsl
pop
repnz
pop
call
pushf
outsl
insb
movsl
inc
mov
addb
cmp
clc
in
icebp
jb
adc
sub
add
sbb
outsb
lea
stos
add
mov
sub
insl
pusha
test
or
into
clc
das
mov
sbb
xlat
pop
mov
sub
jne
ss
les
jnp
aas
jge
jp
stos
gs
mov
mov
imul
inc
push
cmp
fcoml
stos
orb
adc
cmp
fildll
pushf
xchg
popa
data16
jns
jmp
rcll
in
push
jge
mov
push
push
pop
stos
pushf
pop
ret
fs
dec
cmc
icebp
inc
std
mov
inc
popf
popf
push
pop
ja
mov
jb
or
xlat
adc
out
iret
movsb
sbb
mov
add
movsl
mov
dec
enter
fucomp
pop
pop
ret
mov
mov
jg
pop
push
pop
xchg
lret
in
into
and
loop
das
popf
push
cmpsb
dec
sub
push
sub
add
orl
andb
out
mov
jp
stos
imul
test
xchg
out
pop
mov
int
mov
push
pop
xlat
arpl
inc
cli
cmp
mov
outsb
mov
pop
adc
mov
jl
dec
and
xchg
dec
jnp
lahf
or
xor
dec
out
xor
sub
add
sbb
inc
push
or
ss
cld
xchg
push
dec
outsb
mov
mov
daa
mov
icebp
movsb
inc
fsub
jl
pop
push
and
mov
fcmovb
xchg
mov
rclb
inc
lods
xchg
sub
cmp
sbb
rorl
sbb
insl
je
dec
cmpsl
popl
mov
xchg
test
out
pop
dec
mov
imul
test
stc
mov
hlt
sub
lret
or
adc
enter
inc
icebp
mov
inc
dec
xchg
or
outsl
outsb
int3
into
mull
or
outsb
fnsave
fistpl
xor
iret
xchg
inc
das
out
jmp
out
insb
fsubrs
push
pop
rorl
or
js
xorl
ret
decb
mov
xchg
pop
int
xor
leave
test
popa
scas
xor
sbb
out
leave
mov
mov
and
rcl
scas
cmp
pop
xchg
mov
mov
jns
pusha
jne
fdivrl
test
or
dec
add
bound
stc
in
add
fsub
fwait
mov
dec
popf
fwait
das
sbb
mov
loope
sub
out
push
cli
pop
lea
es
or
add
in
or
mov
fdiv
mov
std
repnz
push
push
into
imul
pop
cmp
aam
jns
popa
paddusb
aaa
in
in
data16
mov
and
or
push
pop
push
pop
xor
aas
out
ret
mov
ja
mov
and
add
mov
cmp
and
or
mov
inc
xor
fnsave
mov
ds
add
push
daa
mov
add
cmc
test
pop
movsb
or
lock
das
mov
xchg
or
ja
fildl
aam
fisttpl
cli
sbb
orb
lds
popa
mov
ds
mov
mov
pop
cmpsb
jne
push
lea
add
jno
shlb
jg
in
icebp
xchg
cmp
in
inc
jo
repnz
or
icebp
pusha
push
stos
lea
out
dec
mov
push
xchg
std
iret
push
enter
fimuls
pop
ljmp
cmp
jnp
adc
inc
pop
or
and
mov
jmp
jp
pushf
in
xor
cmp
xor
jge
scas
stos
inc
fistl
mov
pusha
jae
cmp
jecxz
pop
sarb
mov
jns
imul
out
icebp
fmuls
inc
mov
out
insl
aam
aad
inc
fstp
push
jne
push
sub
adc
outsl
hlt
push
in
in
andb
mov
pcmpgtw
add
mov
and
orb
mov
xchg
xor
push
mov
mov
cmp
stos
xor
sub
pop
pop
inc
push
mov
mov
mov
in
mov
jl
xchg
ret
enter
xchg
pusha
scas
stc
pop
outsl
mov
push
sub
jg
xor
pop
lcall
sbb
lea
es
pop
stos
or
icebp
popf
sti
sub
mov
cmp
pop
mov
test
rcll
or
mov
data16
add
inc
fmul
adc
add
nop
orb
into
in
idiv
aad
into
in
cs
pop
pop
sub
insb
sbb
fs
inc
ucomiss
sub
add
cmp
or
test
in
xchg
leave
in
and
push
cld
rorb
dec
dec
xor
std
sub
jae
aad
cs
jmp
lea
lods
addr16
rorl
fstpl
test
xor
cmp
imul
cmc
mov
aad
rorb
jmp
cmp
addl
xor
mov
sahf
dec
sti
cmp
xor
lock
cmp
cs
inc
xor
out
stc
xlat
jno
pusha
data16
sahf
jno
pop
xor
call
push
ret
and
in
ljmp
jle
aam
cmp
sub
fcmovnu
xchg
sarb
xor
ss
jbe
xlat
push
sbb
mov
push
repnz
add
mov
adc
ficompl
xor
pop
loope
sub
enter
push
adc
xor
loopne
int3
inc
pushf
add
and
shl
stos
sbb
lock
sub
xchg
push
icebp
inc
in
sub
sbb
jmp
sti
adc
in
sbb
ljmp
dec
lret
sub
sub
iret
in
xchg
lea
sub
nop
add
mov
pop
lea
ret
inc
ljmp
jmp
sub
lods
cmp
xor
mov
cmc
xchg
sub
std
inc
mov
xlat
les
push
popf
pop
lret
addr16
inc
call
div
jmp
ljmp
push
sbb
add
rcrb
cmp
andb
pop
cmpsl
sub
mov
add
inc
adc
mov
sbb
or
xor
daa
test
out
cmp
sub
sbb
sahf
dec
decb
inc
adc
inc
es
cmp
scas
mov
push
pop
sub
test
xor
pop
outsl
mov
push
stos
inc
fdivrs
dec
repz
ficompl
push
adcl
cmp
loope
bound
fs
jno
fwait
sub
jbe
ljmp
jne
cmc
sti
mov
repnz
mov
mov
add
sbb
cwtl
mov
pop
lea
sarb
adc
sbb
ljmp
adc
in
shll
push
int3
jb
arpl
sbb
mov
pop
in
push
mov
xlat
scas
mov
dec
andl
sbb
imul
insl
sub
dec
stos
cld
std
sbb
add
or
sub
pushf
xor
sub
xor
mov
imul
cmp
dec
sbbb
mov
lods
lock
mov
dec
xchg
daa
scas
mov
add
jmp
cmp
out
imul
inc
xlat
push
fcmovnb
ljmp
mov
sub
dec
sub
and
sub
sti
sub
pusha
mov
ds
dec
pusha
jge
pushf
in
inc
std
sub
div
dec
push
push
jg
dec
add
cmpsl
aas
xor
sub
cmc
sarl
sub
fwait
and
mov
jmp
enter
adc
xor
pop
jmpw
scas
mov
mov
jbe
mov
jge
sub
cwtl
pusha
or
pushf
mov
mov
stos
pop
shr
enter
stos
or
and
mov
jge
je
xchg
and
mov
jmp
jo
hlt
push
outsb
jbe
pop
fwait
movsb
xor
mov
ljmp
mov
hlt
xchg
sub
push
sub
sahf
test
xorl
ljmp
cmpsb
sub
cs
scas
add
mov
mov
mov
mov
sub
jne
test
test
sbb
fcoml
ljmp
int
add
test
mov
test
test
shr
jle
mov
loope
repnz
cmp
inc
mov
mov
push
cld
ds
aad
mov
cmpb
pop
cltd
or
pop
sbb
mov
fadds
and
mov
movsb
xchg
test
jge
xchg
lods
int3
sarl
cmc
lcall
sub
cld
pop
pushf
xor
out
add
jle
inc
push
push
outsb
xor
sub
ret
mov
aas
lea
enter
sbb
lret
cltd
jmp
cmpsb
es
lcall
inc
sub
sub
jnp
inc
xchg
adc
xor
sbb
imul
or
dec
sarl
xchg
iret
sub
and
add
or
rorl
xchg
scas
inc
adc
out
shl
fsubs
xlat
sti
xchg
xor
in
or
lock
das
pop
cld
sub
push
in
popw
fwait
mov
testl
mov
pusha
and
mov
push
int
jns
sti
mov
add
adc
or
mov
push
jecxz
dec
call
or
cmp
cmp
sbb
sub
push
nop
push
fnclex
jmp
cld
cmp
dec
cmc
cmc
xorb
stos
fmuls
sub
cmp
inc
mov
sbb
adc
std
add
and
adc
icebp
pop
negl
ret
test
dec
lock
ss
jmp
mov
lret
or
mov
cmpsb
divl
lret
icebp
mov
lods
pop
push
enter
sbb
jge
mov
push
sbb
loop
jecxz
adc
mov
xor
jnp
xchg
mov
pop
lea
stos
adc
rorb
rcll
mov
and
or
lea
sbb
xor
inc
cmp
jge
adc
mov
or
xor
xchg
mov
int
or
clc
jae
adc
add
lods
sarl
fcomps
jp
add
lods
cli
or
mov
data16
jns
push
andb
ds
imull
jo
out
faddl
stos
or
dec
inc
insl
cltd
push
adc
les
scas
popa
mov
imul
idivb
aas
dec
test
ffreep
inc
jecxz
testb
mov
dec
psllq
mov
mov
or
xchg
cmp
push
leave
mov
push
add
mov
hlt
rcr
mov
adc
sub
dec
hlt
test
sub
arpl
mov
mov
mov
pop
ljmp
lcall
push
sbb
pop
addl
lret
sub
xlat
ds
push
sub
cmp
mov
in
push
pop
outsl
outsb
loopne
lea
stos
jge
xchg
mulb
jmp
or
test
sub
sub
cmpsb
mov
jae
test
jmp
fcomi
mov
jne
or
mov
sub
cmp
insb
stos
cmpsl
sbb
jmp
shrb
popa
jo
jbe
add
inc
mov
int
inc
push
or
jne
roll
adc
cs
push
stos
or
mov
xchg
xchg
addl
push
sar
inc
icebp
mov
das
imulb
mov
xchg
mull
jnp
cs
repz
or
mov
mov
jmp
sbb
lahf
xlat
jno
cmp
sub
push
dec
and
cmp
rorb
mov
mov
xor
add
testb
cli
lcall
pop
clc
test
mov
add
lret
loop
clc
or
dec
test
xchg
or
cmp
in
rclb
cmp
xchg
ret
pop
aam
lea
mov
jmp
rcrb
mov
fisubl
or
xor
inc
lret
lret
jp
xchg
mov
xor
mov
or
in
adc
ds
adc
sub
or
jb
sub
mov
cs
inc
and
daa
and
push
stos
sub
lahf
mov
outsl
stos
jno
pop
push
mov
or
mov
fsubrs
lea
jb
ja
int3
fmull
ljmp
sahf
aas
or
arpl
repz
hlt
or
pusha
xor
cmp
xor
and
test
dec
inc
les
mov
leave
push
cmpb
jb
dec
bnd
or
xchg
or
and
stos
push
stos
les
je
jmp
cmc
bound
jecxz
lea
testl
psubsb
cld
xor
dec
lcall
pop
icebp
and
ja
push
sub
outsb
dec
mov
js
push
in
push
scas
lret
inc
mov
icebp
mov
jno
sub
mov
mov
sbb
xor
lea
scas
out
push
or
xchg
pop
aam
cmp
scas
sbb
fwait
mov
pop
add
das
add
cmpsl
cmp
xchg
push
xor
insl
cli
cmp
add
call
fbstp
jmp
xchg
rcrb
fsubp
adc
push
mov
movsb
ljmp
jge
mov
mov
cltd
inc
xchg
xor
test
das
hlt
jmp
mov
es
repz
inc
fs
dec
push
ja
add
adc
lods
sub
mov
pop
sbb
cmp
push
cmp
sub
sub
adc
es
cmpsb
call
adc
fnstenv
pop
mov
lods
sti
out
cmpsb
or
fwait
pop
xor
and
in
testb
pop
fwait
add
nop
dec
jbe
scas
mov
into
add
pushf
push
mov
cmp
pusha
or
jno
or
jp
stos
cmp
sub
mov
cmp
mov
xchg
xor
cmp
pop
imull
dec
jbe
repnz
push
aad
icebp
in
arpl
icebp
lock
rcl
add
sahf
leave
dec
mov
cmp
jecxz
pop
leave
ljmp
aam
push
add
xchg
sub
jecxz
cmp
mov
mov
cmp
dec
pop
lea
rcrl
test
lock
inc
negb
loop
test
mov
idiv
push
hlt
push
sub
adc
lods
jl
ret
test
sub
cmp
cltd
repz
fmull
jbe
cmp
aam
jno
outsl
xchg
or
mov
in
outsb
cs
add
hlt
or
pop
out
pop
and
cld
shl
add
or
or
mov
out
mov
cmp
xchg
in
sub
pop
xor
stos
dec
sti
and
lret
in
lea
cmp
push
popf
cmp
bound
inc
mov
nop
fisubrs
sub
or
pop
out
icebp
outsb
jne
jno
jnp
roll
lea
imul
ljmp
mov
call
xchg
mov
sub
loopne
pop
jmp
movb
lret
ds
sub
jl
sub
fimull
mov
push
mov
mov
lock
jecxz
cltd
push
daa
enter
jne
mov
fstps
jp
mov
pop
sub
dec
inc
lds
xchg
enter
xchg
movsl
cmpsl
or
mov
push
cmp
cs
out
pop
or
add
movsb
mov
fildl
xchg
mov
jb
std
repnz
adc
xor
std
es
xor
sub
mov
or
cmpsb
push
push
in
add
or
or
sbbb
test
sbb
mov
cmp
sbb
enter
insb
xchg
rcll
lock
jge
push
cmpsb
dec
imul
ret
mov
daa
cwtl
add
and
arpl
push
les
mov
int
cs
mov
cmpl
dec
jmp
mov
xlat
pop
mov
out
add
and
pop
jge
push
or
scas
lea
add
pop
outsl
mov
fwait
in
xchg
cmp
sub
adc
mov
pusha
xor
sahf
mov
and
fs
cmp
xor
sub
nop
mov
jg
push
sahf
fxch
out
insb
mov
stos
lea
jmp
xor
inc
mov
push
add
mov
cmpsb
cmp
in
sub
inc
xor
jmp
or
repz
mov
and
out
mov
cmp
mov
data16
ffree
sbb
inc
push
push
push
inc
mov
add
lods
sub
jns
cmpl
icebp
insl
dec
jno
adc
adc
inc
adc
inc
jmp
xor
icebp
sbb
cwtl
fcomps
ss
sarl
pop
or
cmp
in
ss
lods
mov
pusha
call
add
cltd
daa
lds
sbb
roll
lea
push
or
jmp
cmp
or
sub
pop
mov
sub
mov
mov
mov
out
addr16
aam
out
or
mov
je
stos
pop
pop
jbe
jae
out
push
sub
lock
cld
mov
out
xor
aam
pop
cmp
or
xchg
mov
dec
mov
push
jmp
hlt
push
cmp
or
mov
popf
xchg
sahf
scas
je
loopne
lds
push
jge
sub
jno
in
cmp
mov
mov
test
jmp
xor
cltd
sub
pop
inc
add
sub
jp
sub
pop
xchg
fsubs
ret
test
std
xor
sub
xchg
pop
cltd
sbb
es
dec
mov
inc
in
push
and
icebp
fidivrs
int3
adc
push
sub
mov
popa
loop
adc
xor
sub
and
mov
insb
fucomi
add
hlt
ret
mov
mov
xor
pushf
or
jne
je
pop
mov
bnd
cmp
push
jbe
cltd
cmp
and
xchg
mov
pop
inc
test
pop
and
popa
ret
sbb
lods
cmp
fistpl
inc
pushf
cld
inc
push
sub
xchg
push
xchg
movsb
mov
add
inc
dec
mov
cmp
lret
sahf
testb
jge
sbb
fisttps
jg
mov
fs
ror
sti
mov
or
outsb
imul
ljmp
movsl
std
mov
add
and
rorl
andl
sub
outsl
push
mov
lcall
fildll
dec
jge
adc
fs
pop
jge
cmp
stos
mov
xchg
xor
sub
jecxz
stc
testb
or
mov
enter
mov
dec
test
std
es
cmp
jno
xlat
sub
std
push
test
sbb
popa
xor
sub
push
fidivs
pop
mov
std
jmp
gs
jecxz
adc
sbbl
gs
clc
xor
dec
ret
pushf
add
lea
mov
jbe
iret
jae
jne
jns
sbb
lret
lea
sub
xor
sub
pusha
gs
lahf
adc
cmpsb
fcomps
mov
int
jl
or
lds
fisttps
bound
cmp
and
push
dec
jo
xor
lods
push
jmp
cmp
mov
cmpsb
jae
scas
lock
ror
mov
in
mov
cmp
dec
movsbl
iret
xlat
or
fidivrl
jne
sahf
cltd
sub
cmpsb
sub
cld
lock
call
pop
imul
cmp
mov
cmova
push
xrelease
xor
in
mov
mov
lock
scas
and
lea
pop
sub
mov
lcall
icebp
and
pop
mov
lret
lea
cmpb
add
pop
cmp
test
test
sub
imul
hlt
fadds
repz
push
std
lods
pop
mov
ljmp
and
rep
inc
mov
sub
int3
testl
add
pusha
or
and
push
jp
push
cmp
push
sub
out
xor
sbb
jg
cwtl
icebp
inc
popa
inc
icebp
lods
test
or
dec
xchg
mov
out
lock
cmp
movsl
mull
mov
mov
mov
loopne
ja
ret
cmp
push
mov
push
or
stos
mov
pop
xor
stc
into
syscall
lock
jge
mov
mov
jmp
sub
sti
jl
sbb
movswl
lahf
jne
stos
notb
mov
sbb
lret
cltd
push
push
mov
xchg
inc
cmc
mov
aam
mov
jecxz
insb
pop
jge
outsb
sub
icebp
dec
aam
outsb
loop
orl
sub
cmp
inc
in
stos
in
stos
push
dec
es
scas
sub
jmp
adc
cmp
cmp
jge
jo
inc
mov
popa
or
adc
sub
push
sub
out
stos
data16
push
enter
inc
add
sub
sub
imulb
mov
cld
jmp
adc
aam
mov
stos
xor
mov
cli
fs
jbe
out
std
cmc
jmp
push
out
jne
xlat
dec
shlb
jns
sub
stos
dec
xor
scas
addr16
out
or
or
pushf
rorl
mov
js
xchg
pop
or
mov
gs
mov
ljmp
mov
popa
js
cmp
jno
mov
dec
fsubl
sbb
stos
xor
ficoml
repnz
cs
mov
call
vcvtss2si
push
fidivrs
mov
and
mov
mov
lret
and
jo
pop
dec
out
pop
jge
pop
sub
or
aaa
push
xchg
adc
xor
lret
clc
loopne
pop
push
dec
adc
xor
stos
loopne
fsubrl
mov
in
imul
lea
adc
insb
lahf
pop
in
mov
pop
int3
adc
fidivrs
rcl
mov
adc
cmpsb
lods
pop
in
mov
fistps
pop
mov
push
jg
mulb
mov
push
insl
mov
idivb
mov
cmc
inc
int3
or
push
inc
les
loope
cmpsb
lret
sbb
icebp
test
xchg
push
enter
repz
push
arpl
dec
lods
pop
xor
jecxz
lea
mov
call
jo
mov
xor
push
xor
mov
push
adc
js
and
mov
pop
xchg
or
scas
xor
inc
lds
fadds
push
sub
pop
push
test
iret
sti
mov
roll
inc
xchg
nop
or
xchg
out
pop
dec
xchg
sub
pop
adc
push
push
jge
pop
insl
mov
and
sti
test
stos
jge
sub
mov
jg
jno
pop
or
arpl
xchg
leave
add
mov
movzbl
lock
gs
jecxz
mov
mov
jmp
push
push
inc
sbb
stos
outsb
xchg
mov
scas
xor
xchg
lahf
out
mov
adc
cli
adc
mov
dec
sub
imulb
scas
push
push
repnz
sbb
xlat
fistpll
dec
cmp
sub
lcall
mov
sbb
sti
cmpsb
icebp
in
enter
xchg
push
into
adc
sbb
inc
jl
push
sbb
sub
mov
out
inc
hlt
push
daa
dec
ljmp
fisttps
add
fmull
or
mov
fistpll
adc
je
sbb
idivb
xlat
push
mulb
inc
inc
ss
out
cltd
mov
and
sub
andl
cmp
rcrl
pop
icebp
rorb
mov
dec
fdivrs
dec
sbb
add
ss
lock
sub
loop
or
lret
nop
mov
rolb
or
cmp
cli
in
ljmp
cmp
lcall
ficoms
cmp
jecxz
cmp
ds
scas
mov
and
stos
mov
ljmp
adc
cs
shrl
pusha
insl
lods
sub
sbb
aad
sbb
stos
jnp
inc
stos
cld
push
or
cs
mov
lret
xor
stos
call
cmp
or
xchg
jmp
addr16
insb
sub
sbb
sti
rorb
popf
xor
jmp
xor
mov
mov
dec
add
stos
inc
jg
pop
or
test
dec
mov
stos
xor
sbb
cmp
lret
call
test
js
sbb
mov
sub
stos
mov
push
dec
out
jmp
repz
stos
das
clc
or
setb
inc
jmp
jo
ss
mov
mov
cld
out
cmp
js
clc
das
stos
or
sbb
fisttpl
ljmp
jp
sbb
enter
push
xchg
insb
jb
or
mov
push
xor
sub
cwtl
cmp
jmp
clc
mov
stos
out
jnp
cmp
sbb
lods
sarl
or
adc
or
dec
inc
stos
sub
or
sbb
sahf
cmp
sub
lret
and
into
dec
ds
ljmp
das
mov
fwait
xor
cmp
ret
pop
test
cmp
sub
repz
or
xor
shr
idivb
bswap
test
clc
lcall
sbb
sub
sub
cmp
enter
mov
cmp
nop
cli
xchg
sub
mov
mov
push
mov
cmp
ret
sbb
mov
add
xor
or
test
cmpsb
jnp
add
js
das
es
call
push
xchg
mov
sub
dec
mov
cmp
sbb
movsl
mov
adc
pop
dec
fwait
pop
dec
testb
mov
ljmp
mov
testl
ds
cwtl
cmp
out
inc
in
imul
add
fdivl
enter
int
lcall
dec
mov
jl
int
out
pop
shl
jmp
or
rorb
jl
mov
mov
jl
cltd
mov
sub
inc
inc
dec
cmpl
mov
pusha
jg
sub
sub
loope
sub
and
lock
sbbl
sub
push
out
lret
cmp
pop
add
outsl
pop
into
pop
pop
xchg
movups
pop
pop
cmp
fs
and
outsl
test
sbb
cs
or
xor
xorl
loop
add
or
icebp
enter
inc
jno
ficompl
outsb
arpl
fdivr
xor
mov
pop
pop
xchg
mov
pop
mov
movsb
rcrb
mov
or
movsb
repnz
and
jno
test
sbb
and
jmp
insb
loop
dec
dec
stos
loopw
movsb
mov
loope
sbb
cltd
sub
lods
icebp
cmpsb
leave
jge
stos
inc
mov
adc
push
cs
xor
adcb
xor
insb
cmc
sub
test
enter
sbb
adc
shll
xchg
inc
test
or
dec
xchg
stos
lock
imul
or
testb
sti
xchg
in
push
inc
jge
dec
data16
lea
xor
mov
lcall
jg
inc
mov
sbb
pop
xchg
jle
mov
pop
test
pop
push
xor
dec
mov
or
lcall
xchg
pop
jns
pop
scas
sub
push
mov
cmp
fsubs
mov
push
mov
fstl
xchg
and
out
dec
mov
loopne
jle
mov
sub
test
mov
xor
lock
or
movsb
sub
mov
jge
xchg
fisubrl
in
push
or
dec
jge
in
icebp
jno
xor
and
repnz
ljmp
dec
cmp
test
std
lea
cmpl
jg
inc
and
les
stc
add
jb
fwait
enter
pop
xchg
in
icebp
in
mov
sbb
sbb
mov
cmp
lods
add
pop
outsb
sub
insl
out
or
and
pushf
fsubl
rcr
mov
xchg
testb
addl
ret
sub
fmuls
ret
jmp
inc
arpl
pop
xlat
jno
mov
sbb
sub
sub
mov
inc
mov
lock
adc
mov
jmp
in
rorb
stos
or
push
xchg
iret
cmpsb
aas
stos
mov
cmp
sub
jmp
xlat
adc
sub
fs
or
or
in
inc
loope
out
movsl
in
int3
or
ficompl
lret
xchg
pop
test
ret
dec
clc
inc
test
and
xor
dec
mov
mov
fnstcw
add
dec
jne
xlat
popa
test
xor
stos
cmp
mov
bound
lock
sbb
xchg
repz
jecxz
xchg
cld
daa
stos
shrb
mov
cld
aaa
test
stos
lret
inc
and
push
mov
add
sti
aam
pop
in
jne
clc
cmpsb
ds
int
int
arpl
mov
push
sahf
fisubrs
arpl
pop
pop
mov
xor
sbb
in
xchg
int3
add
and
into
push
xchg
xchg
or
push
lea
ret
outsb
inc
mov
out
das
xor
dec
adc
sti
ret
pop
or
cld
jne
push
into
test
imul
or
icebp
into
popf
out
inc
data16
in
or
xor
in
lods
xor
pop
popa
test
les
fwait
or
fstpl
dec
cmp
rcrl
push
pop
sbb
icebp
test
inc
cwtl
int
mov
insl
inc
sbb
cld
scas
push
and
sahf
test
cmp
lret
bound
cmp
aam
cwtl
xchg
push
mov
daa
mov
jl
lret
sub
test
dec
daa
dec
das
and
cmc
movsb
push
mov
stc
cmpl
adc
leave
xor
xchg
stc
xlat
hlt
push
gs
bnd
in
outsl
enter
clc
jnp
out
add
movq
lret
mov
pop
in
mov
repz
or
xor
mov
sti
xor
ror
cmpl
pop
push
jmp
jne
mov
xor
or
fistl
sub
test
push
clc
lahf
xor
cwtl
mov
mov
xlat
stc
lods
pop
lcall
repz
fcoml
sahf
mov
xor
sahf
addl
scas
cmp
nop
ds
or
add
sbb
lcall
cmp
xchg
xchg
mov
enter
sub
xchg
repz
lea
adc
outsb
jp
add
adc
fcmovnb
push
stc
dec
jmp
inc
jge
or
negl
mov
adc
jmp
test
imul
sbb
xor
cmc
iret
inc
sbb
cmove
addr16
add
xchg
cs
sub
sbb
pop
addb
adc
inc
inc
push
jne
add
addl
pop
test
shrl
sti
mov
rcrb
in
jbe
fnstcw
std
xchg
xor
jmp
cwtl
sbb
lods
push
mov
mov
cmpl
jns
call
jnp
aaa
lods
push
mov
outsl
xor
adc
outsl
or
orl
inc
xor
cmp
mov
jge
dec
rcrl
fdivrl
adc
mov
mov
dec
jl
fstps
mov
dec
shr
bound
sub
dec
dec
add
xchg
addr16
out
fcomp
rorl
sbb
daa
cs
pop
sub
lea
loope
repnz
push
mov
sbb
pop
icebp
cltd
dec
in
dec
in
fdivrs
xor
mov
mov
inc
xchg
or
cmpsl
jns
popf
insb
xchg
sahf
mov
adcb
jo
push
lods
mov
movsb
push
addr16
or
mov
add
dec
in
pushf
mov
in
shrb
mov
push
push
iret
adc
sub
or
pop
push
es
sub
pop
out
fs
popaw
fdivrl
mov
mov
push
insl
push
into
ret
sub
xor
stos
jmp
xchg
lods
dec
cltd
xchg
out
inc
inc
xor
std
cli
sbb
arpl
add
sbb
xchg
mov
and
and
addr16
mov
pop
int3
jecxz
mov
out
lcall
sub
into
aas
loope
adc
inc
pop
dec
scas
ds
imul
jecxz
leave
stos
jb
rclb
pushf
lock
enter
inc
hlt
push
pop
fiadds
loopne
stc
sbb
push
lock
push
sub
add
inc
or
test
sub
jne
dec
xchg
lret
and
cmpl
mov
pop
pop
sbb
stos
sti
or
mov
mov
inc
loop
sar
loopne
lea
add
lock
cmpsb
mov
push
mov
testb
mov
data16
sar
dec
adc
pop
push
outsl
lds
roll
mov
mov
cwtl
lods
lcall
popf
push
jo
in
pop
in
movsl
lea
sub
inc
xorl
mov
mov
movb
sub
cmpsb
in
stos
cmp
push
sbb
mov
sub
rorl
call
xor
nop
jmp
sub
inc
pop
or
insb
lock
jg
dec
mov
sbb
pop
cmp
pop
dec
and
xor
stos
dec
int
xchg
push
mov
lea
jmp
pop
push
pushl
inc
in
cmp
rclb
and
pop
cli
xor
pop
cltd
inc
mov
clc
stos
daa
hlt
lret
jae
fsub
cmp
lret
stc
xor
jp
jle
jp
and
adc
fcmove
rcll
pushf
sbb
or
cmp
clc
sub
xor
push
mov
lret
push
pop
xor
repnz
dec
dec
lcall
xor
insl
xchg
cmp
jns
test
xor
jecxz
aas
xchg
fadds
fsubr
lods
sub
repnz
sub
cmpsb
cmpb
mov
add
aas
stos
lea
pop
push
adc
sub
addl
push
add
cmovle
loope
pop
cmpsb
add
add
push
jl
movsb
sti
jnp
inc
lea
adc
movq
mov
in
mul
je
jo
arpl
mov
into
sbb
lret
mov
mov
movsl
adc
lea
cmp
pop
add
decl
in
imul
into
cs
scas
insl
push
repnz
sbb
pushf
sub
dec
repnz
mov
mov
sub
and
daa
int
inc
push
in
sub
test
or
sub
shll
xchg
mov
fdivr
movsb
dec
lret
stc
mov
sbb
cmp
lret
inc
stos
mov
sub
cltd
xor
sub
cmp
stos
cmp
es
push
clc
lret
pop
outsb
rcrl
ljmp
or
popa
mov
lcall
adc
ljmp
mov
or
test
mov
lea
neg
cmp
cmp
scas
nop
mov
sbb
imul
cli
cmp
stos
mov
or
popf
lret
pop
dec
in
adc
jno
xor
imul
enter
dec
pop
xor
loop
test
dec
mov
sbb
sbb
imul
stos
inc
js
dec
stos
mov
mov
adc
push
test
inc
cli
xor
push
sbb
lret
xor
jns
or
lods
imul
mov
cs
cmp
in
sub
ror
repnz
cltd
sbb
out
inc
jmp
js
call
sub
dec
add
mov
jmp
popa
jno
mov
aam
add
pop
scas
imul
pop
sahf
sti
mov
cmp
stc
jo
or
pop
lret
iret
fstpt
mov
cwtl
shrb
sub
mov
int3
lret
rep
outsb
clc
lret
cmc
bswap
cmp
mov
in
jmp
sbb
in
fisttpl
or
clc
ljmp
shr
je
inc
ljmp
mov
jno
inc
fisttpll
mov
ljmp
ljmp
push
cli
xor
jnp
mov
dec
stos
or
cli
in
out
sub
int3
sub
or
mov
test
rorb
mov
pop
pop
mov
lret
imul
jmp
adc
hlt
nop
xor
inc
stos
int
aad
push
xor
loope
imul
sub
stos
cltd
cmp
cli
pop
adc
add
jl
mov
lret
repnz
xchg
mov
adc
xor
mov
scas
push
lea
mov
pop
and
mov
test
lods
mov
add
addl
jecxz
cld
outsb
sbb
scas
cmp
pop
and
adcb
xor
lea
fisttpl
push
in
adc
adc
mov
cmp
sbbl
ds
sub
pop
test
mov
leave
xor
pop
imul
add
cmp
ljmp
test
in
pop
mov
cltd
jge
scas
out
test
jb
xor
adc
in
jg
xchg
shll
cli
xchg
enter
lcall
jnp
jl
inc
dec
add
and
lret
fcmove
push
pop
push
test
xor
xchg
jmp
test
sub
ljmp
lds
mov
xchg
adc
mov
or
jne
pop
out
lods
push
sbb
sub
out
jecxz
lods
shrb
in
stos
dec
fdiv
stos
jge
jecxz
or
push
pop
ret
pop
inc
ljmp
and
fdiv
push
lcall
sbb
fcomi
test
shr
jg
sub
xor
repnz
pop
jbe
dec
xor
or
aam
aad
adcl
stc
xor
mov
adc
subb
adc
pop
inc
mov
cmp
mov
ja
cs
ds
cli
xor
inc
mov
pop
dec
add
lods
dec
shr
daa
loope
cs
mov
push
ljmp
push
jmp
sub
in
push
dec
inc
stos
aas
mov
mov
mov
mov
push
push
imul
stc
sahf
das
sub
popa
sub
inc
mov
inc
sbb
pop
mov
ficoms
adc
xchg
mov
dec
movsl
sbb
push
add
lods
mov
test
adc
push
jp
sbbb
repz
stc
loop
jecxz
jb
jecxz
repnz
insl
test
or
sub
or
imulb
sahf
lea
inc
sub
or
inc
or
out
and
mov
mov
ficoml
sbb
lea
or
or
mov
stc
xchg
fsubrl
mov
nop
out
add
dec
jg
cld
addl
mov
shll
movsb
loopne
in
dec
negb
fcomi
pusha
cld
cmp
inc
mov
cmpsb
push
mov
xchg
mov
shrl
popa
lret
inc
sub
push
push
rcll
loope
push
sub
mov
testb
jp
into
ss
pusha
loope
jmp
cmp
aam
test
add
lock
pop
insl
call
repz
mov
cmp
xchg
insb
and
outsb
mov
jl
dec
push
or
loope
repnz
test
push
hlt
cmp
dec
sub
mov
fwait
leave
cmpsl
ret
jecxz
mov
ljmp
and
xor
mov
mov
lea
shl
ret
loope
push
into
pop
add
negl
mov
repz
stos
cld
ljmp
in
xchg
xor
add
cs
jp
pop
test
ljmp
stos
pop
out
sets
dec
in
add
xchg
cmp
test
add
pop
jmp
dec
xor
dec
fdivr
inc
push
lret
cld
stc
add
cmp
mov
mov
xchg
xchg
pop
push
mov
inc
mov
xor
xor
mov
or
jns
jns
or
sbb
hlt
sub
fnstsw
jmp
lea
shrb
movsl
add
dec
call
popa
and
test
repz
imulb
bound
sub
daa
repnz
mov
adc
repz
fucomip
popf
or
sbb
and
inc
mov
xor
push
cmp
popa
dec
cmp
imul
enter
and
cli
and
cli
movb
aaa
pop
cld
jl
xor
jb
push
pop
ret
fbstp
or
mov
call
sbb
sbb
cmp
scas
sti
je
sarl
pop
das
shlb
mov
in
inc
mov
mov
fdivs
push
inc
out
dec
pop
ret
inc
and
push
jb
dec
xchg
dec
jg
cli
out
es
outsb
dec
add
push
push
movsl
mov
aam
adc
popa
mov
gs
scas
xchg
lea
sbb
mov
cmovnp
sbb
jmp
lea
sub
fcmovu
adc
xchg
and
sub
or
pop
fisttps
test
mov
pop
xor
jns
dec
sbb
cmpsl
fsts
xchg
stc
add
adc
dec
mov
sbb
faddl
icebp
cmpsl
xor
rcrb
cmp
xchg
xchg
pop
sub
mov
and
arpl
imul
mov
cmp
dec
sbb
aad
test
in
loopne
inc
decl
adcb
xor
ret
incl
enter
pop
sub
inc
scas
jl
loope
add
jns
xlat
insb
pop
enter
pusha
push
and
and
test
outsb
lock
aam
repz
sbb
push
mov
enter
mov
cld
outsl
data16
push
cmp
test
push
adc
xlat
in
xor
inc
pop
shrb
adc
dec
sbb
repnz
pop
aad
mov
ljmp
neg
jl
in
lcall
inc
dec
mov
imul
sub
jge
arpl
call
jp
cmc
movsl
dec
gs
sub
in
sub
or
andl
je
ds
xchg
add
ljmp
or
cmp
lods
or
out
js
loopne
adc
jmp
lock
push
xchg
fwait
sub
test
mov
std
movlhps
movsb
enter
imul
mov
cmp
mov
xchg
jmp
gs
pop
psubsw
rcrb
daa
fstpt
cmpsb
pop
imul
outsb
jecxz
jmp
sbb
mov
dec
xor
mov
jp
lock
cmp
dec
icebp
mov
fsubs
mov
repz
shll
jmp
enter
cmpsb
js
jmp
ficoms
xor
in
bound
icebp
xor
stos
shrl
stos
mov
arpl
pop
inc
inc
cmpsb
or
ja
mov
mov
mov
cwtl
aas
stc
push
pop
add
test
cmp
rcrb
cmpsb
and
add
iret
pop
repz
int
fcoms
iret
loop
inc
mov
shll
test
hlt
add
sbb
fistl
sub
mov
sbb
jnp
pop
pop
jb
out
or
pop
sub
lea
xor
inc
leave
pusha
iretw
sub
dec
mov
jl
sahf
iret
sub
mov
popa
xchg
xor
dec
pop
ss
popf
sbb
loopne
lea
xchg
pop
sub
cltd
jmp
push
nop
in
test
ss
dec
push
push
mov
cs
shll
sub
fcompl
test
adc
jecxz
in
add
out
rclb
pop
test
stos
mov
lahf
aaa
lea
pusha
xor
xor
push
push
adc
les
sbb
test
call
js
cmp
lock
insl
pop
ss
stos
mov
mov
xchg
sbb
cmpsb
dec
dec
insb
jne
bound
dec
jo
cmp
dec
cltd
loope
sbbb
jg
clc
stos
mov
and
push
mov
in
int
icebp
add
adc
xchg
negl
mov
xchg
shr
gs
pushf
pop
cmc
dec
pop
mov
push
cmp
mov
inc
mov
adc
leave
mov
adc
jp
and
add
js
mov
into
imul
or
hlt
pusha
dec
dec
sub
repz
int
fnsave
xor
scas
fadds
lea
call
push
and
xor
or
data16
mov
cmpsb
das
jge
adc
mov
int3
pop
xor
sub
js
fwait
cmpsb
sub
fwait
pusha
mov
dec
mov
mov
xchg
or
cmp
pop
dec
pop
mov
ret
cmp
ss
sub
sbb
xor
jno
push
fbld
mov
xor
loopne
inc
leave
jae
mov
or
or
lock
es
or
es
aaa
sub
xchg
jne
jae
mov
cmp
and
dec
aas
push
mov
lea
lods
call
nop
push
pop
lcall
mov
repnz
pop
inc
cld
ret
cmp
cmp
push
fmuls
cmp
jg
add
in
sub
xor
xchg
loop
mov
aam
insb
xchg
popf
xchg
jne
jecxz
scas
sbb
xlat
mov
or
push
adc
mov
inc
imul
addr16
cmp
rclb
out
sbb
negb
into
jl
xchg
fisttpl
mov
rorl
mov
pop
mov
lods
rorb
mov
push
pusha
in
push
push
mov
ror
cmpsb
lea
sub
andl
jae
aaa
popa
xor
dec
dec
cld
sub
lcall
je
sahf
push
push
pop
cmc
cwtl
cmpsl
push
xlat
rcl
sti
mov
push
aas
leave
xchg
call
imul
cmp
sub
cmp
shrl
out
iret
pop
scas
push
xchg
jnp
dec
ret
stos
push
shll
int
mov
inc
jbe
mov
sub
shlb
lea
cld
jnp
cmovns
jecxz
adc
divl
enter
jo
push
iret
add
and
pop
xor
in
push
int3
or
sbb
xchg
mov
sbb
mulb
sbb
in
pop
stos
loope
iret
dec
xor
shll
out
stos
imul
je
push
or
push
cmp
fs
inc
scas
sbb
inc
sbb
addr16
inc
pop
leave
cmp
or
das
imul
or
cmp
mov
in
addr16
ljmp
movsb
call
xchg
mov
jl
pop
lret
sbb
in
sub
ret
mov
and
add
sarb
jne
ds
sti
ss
sub
outsb
rcr
sahf
jmp
outsl
movsl
or
pop
mov
inc
test
mov
dec
and
sub
into
icebp
test
enter
push
mov
std
push
or
xor
addr16
lret
pop
mov
pop
rcrl
pop
jnp
jne
xchg
inc
xor
cld
aas
mov
mov
and
dec
mov
xchg
lret
mov
mov
add
lret
loope
or
stos
cs
pop
and
out
lds
in
add
arpl
ljmp
addr16
pop
ret
test
cld
leave
push
jecxz
mov
add
push
xchg
add
mov
rcr
popa
mov
int3
mov
dec
movsl
xchg
fcomp
pop
sub
push
or
lahf
mov
cltd
push
cmp
lods
sbb
nop
mov
mov
out
inc
dec
cmc
mov
sub
inc
ds
jle
or
and
fcompl
test
mov
call
loope
push
jmp
xor
cmp
adc
cmp
test
pop
ret
lret
pop
lret
icebp
mov
jno
inc
and
faddp
dec
xchg
mov
adc
or
mov
cs
in
test
pop
mov
jle
cmpsb
sbb
mov
push
outsb
and
fnstcw
mov
push
mov
xchg
roll
inc
cmp
mov
test
cmp
sub
sub
mov
push
in
repnz
xor
cmp
ljmp
sarl
mov
std
xor
jnp
ret
fmuls
pop
shlb
jge
jg,pn
mov
inc
stos
stos
pop
mov
out
adc
add
ds
and
jns
mov
adc
pop
cmp
or
and
cmp
pop
gs
jecxz
sub
cld
dec
mov
testl
mov
loop
xchg
mov
mov
jge
sbb
inc
adc
dec
sbb
hlt
in
xor
and
test
stos
dec
lcall
push
test
loopne
sahf
and
repz
sti
shlb
add
fsubrs
rcrl
call
add
adc
lret
daa
leave
mov
in
in
les
clc
repz
adc
adc
pusha
incb
insb
jmp
stc
fs
pop
jmp
fidivrs
iret
shll
add
enter
xor
cmp
push
dec
jge
jne
ret
loope
pop
and
xchg
sti
js
repnz
mov
push
mov
addb
sarb
mov
mov
inc
pop
push
lea
pop
cmpl
es
xchg
xor
mov
inc
push
inc
icebp
mov
pop
cwtl
jmp
xor
fsub
mov
xlat
vmaxsd
xchg
jo
mov
dec
dec
sbb
mov
push
lea
shl
push
std
xchg
inc
addl
mov
pop
add
outsb
dec
adc
pusha
sbb
cmpsb
add
push
dec
jnp
sbb
std
fucomp
dec
lds
cli
fistpl
xor
sbb
cmp
xchg
push
xlat
xchg
jp
outsl
xor
xor
dec
jmp
fs
cli
stos
sub
popa
cmp
pop
or
pushf
pop
cmp
pop
es
xor
cld
ss
daa
mov
and
sahf
dec
fs
xchg
popf
lock
xor
xor
mov
leave
mov
jp
or
add
fucomip
icebp
rcrl
jo
and
cmc
jo
jg
insl
mov
daa
xchg
scas
add
mov
pop
dec
mov
add
sub
mov
nop
or
lods
pop
insb
mov
arpl
xor
mov
std
cmp
jmp
fimuls
adc
out
stos
add
mov
xchg
loope
andb
js
rorl
lock
repnz
push
pandn
and
sub
add
lahf
or
fistpl
rcrb
adc
mov
insl
sti
jecxz
and
ud0
dec
leave
insb
push
mov
int3
inc
movsl
or
test
jl
xor
cmp
pusha
aad
sub
xchg
ret
scas
pop
sbb
push
xlat
dec
mov
dec
faddl
mov
out
jecxz
call
sub
out
sub
pop
add
cmp
nop
and
sub
dec
pop
mov
mov
lret
in
dec
repnz
add
cmp
mov
repnz
lahf
jbe
push
test
rorl
cli
movsb
fsts
lcall
add
xor
xor
or
mov
in
aad
jnp
bound
fwait
or
ret
mov
call
push
bound
ss
jo
aaa
ljmp
jl
cmpsb
idivl
lods
push
mov
sti
pop
mov
xchg
pop
sbb
je
push
movb
mov
jmp
shll
fs
loopne
sbb
stc
mov
xor
popa
xor
add
push
xlat
adc
sub
mov
xor
xchg
pop
sarb
aad
lea
and
push
idivl
or
rcl
dec
and
setle
add
dec
mov
or
pop
sub
xor
dec
mov
cmpsb
cld
push
push
xor
aas
mov
lret
je
cltd
test
xor
jns
add
mov
mov
or
cmp
lea
inc
or
ret
repnz
mov
das
fbld
ds
stos
mov
jno
ret
loop
std
mov
xor
inc
fimull
pop
mov
mov
xor
loope
fcomp
lahf
cmp
test
mov
pop
scas
adc
jmp
push
out
cmpsl
leave
sbb
lea
pop
movsb
scas
popf
mov
push
in
cwtl
dec
lea
or
cmp
jno
rorl
enter
dec
inc
outsb
lods
into
lret
cmp
data16
cmpl
popf
sti
inc
lea
ds
sub
push
ss
std
mov
mov
pop
cmp
cmpsb
push
mov
mov
jb
dec
std
rcll
mov
pop
sub
push
jg
mov
adc
mov
imul
xlat
or
lds
pop
jecxz
cmp
or
inc
lcall
into
dec
sbb
inc
inc
cmp
nop
mov
sbb
xor
movl
mov
fwait
insb
jmp
mov
cld
jb
rep
cld
inc
loopne
mov
push
fmull
cmp
cld
xchg
repnz
stos
inc
jb
pushl
mov
pop
push
jns
mov
xchg
add
lock
dec
mov
int3
xchg
jbe
stos
push
or
inc
dec
call
arpl
mov
dec
push
pop
leave
jae
jmp
inc
popf
sbb
xlat
mov
inc
cs
mov
in
sub
xor
fsubs
sub
sub
push
add
inc
in
xchg
jmp
xor
and
aas
es
addr16
push
sbb
cli
lea
jbe
icebp
cmp
adc
addr16
mov
into
fs
dec
out
cwtl
xor
daa
xor
stos
out
sti
leave
sub
je
dec
and
jmp
xchg
stos
mov
push
ljmp
xchg
es
ret
xchg
jecxz
test
mov
or
and
cmpsb
mov
jg
jmp
dec
pop
add
test
mov
or
sbb
inc
adc
pop
fwait
out
fisubl
sahf
pop
xchg
jecxz
and
dec
mov
add
cmp
cmc
adc
or
dec
aas
mov
and
xor
inc
cwtl
adc
mov
cld
lcall
fisttpl
mov
and
mov
dec
xchg
movsl
stos
cmp
dec
adc
sti
data16
adc
les
or
push
das
xor
stc
jno
inc
andb
dec
mov
adc
shrl
mull
stos
shl
cmc
lock
loop
or
decl
mov
sub
jge
outsl
sub
insb
cld
sti
addb
leave
mov
mulb
das
movsb
or
push
das
rcrl
cmpsl
sub
icebp
or
stos
popf
or
jo
inc
mov
push
js
dec
jp
clc
add
dec
testl
aas
rcll
sti
icebp
jne
sub
decb
add
inc
push
push
push
out
xchg
cmpsb
push
and
fucomip
inc
out
push
add
jecxz
cmp
mov
sbb
inc
sub
jecxz
cltd
mov
loope
mov
adc
inc
sbb
ret
xchg
add
pusha
jae
and
fs
ret
lods
lret
imul
rcrb
sub
mov
movsb
add
push
dec
push
test
sub
xor
xchg
mov
add
mov
cltd
xlat
sub
sub
les
cmp
fwait
lods
out
dec
sub
stos
test
sahf
cmp
iret
clc
mov
mov
data16
ljmp
push
sub
lds
adc
jae
mov
xor
jo
cmp
dec
push
add
cld
xor
out
inc
sbb
push
loope
jns
cmp
mov
xchg
mov
and
jae
sbb
mov
ds
movsl
or
addr16
lret
sub
adc
mov
xchg
mov
dec
test
add
in
int
stc
movsb
and
cwtl
adc
gs
push
mov
pushf
cmp
and
push
inc
sub
in
bound
lods
mov
pop
mov
mov
imul
inc
mov
add
push
stos
mov
aad
negb
ret
pop
idivb
jnp
mov
xor
push
add
out
outsb
sbb
fisubrl
testb
mov
arpl
lcall
mov
pushf
addl
cmc
sub
cmc
shll
jg
or
test
lea
das
add
scas
adcl
add
jge
test
lds
inc
and
cmp
in
mov
mov
sbb
jp
jle
cmpsl
push
in
mov
xchg
and
or
das
ret
enter
inc
add
daa
mov
xchg
inc
cmp
mov
push
testb
gs
sub
mov
aas
mov
fcompl
push
daa
insb
fistpll
lea
ret
add
push
push
add
call
mov
adc
outsb
xlat
mov
inc
mov
mov
push
push
xor
cmp
xor
jns
ljmp
movsl
push
movsb
xor
cmc
adc
dec
or
xchg
or
mov
mov
mov
std
cmc
movsl
adcb
xchg
popf
scas
xchg
xchg
mov
shl
imul
or
lret
icebp
testb
adc
sub
cwtl
lds
jnp
xor
xchg
push
dec
pop
mov
dec
push
push
or
xorl
out
mov
ret
pop
or
ljmp
loop
or
push
cmp
jns
jne
fistpll
dec
cltd
stos
mov
xor
repz
notb
test
call
repz
ds
icebp
pop
int3
mov
add
data16
pop
movsl
or
sub
xorl
adc
dec
fisttpll
or
mov
cmp
je
in
add
jae
mov
je
imulb
ficomps
or
push
out
data16
stos
cltd
mov
repz
cmp
mov
inc
inc
xor
idivl
sub
mov
push
xor
cmp
cltd
xchg
fmull
ja
int
lcall
xor
lea
add
in
rcrl
in
cld
add
jle
loopne
xlat
cmpsb
xor
xor
divl
xor
sub
cmp
sti
test
mov
or
sahf
lods
xchg
push
lcall
or
mov
ljmp
std
ss
push
ljmp
xchg
out
mov
sub
xor
jo
or
data16
xorb
xor
test
ss
mov
cmp
or
das
cli
and
inc
and
or
mov
xor
sbb
add
pop
or
jnp
sub
push
sub
clc
cmp
xor
jmp
call
scas
sub
into
mov
ljmp
ljmp
cmp
cmp
sti
ss
mov
enter
dec
dec
mov
sub
sub
dec
lods
jmp
or
cmpsb
sub
dec
pop
sub
fwait
in
sub
repz
add
xor
enter
ljmp
xor
data16
ljmp
pop
xor
stc
mov
cli
push
push
push
sub
push
pop
ds
cmp
sub
js
fwait
das
sub
jns
pop
daa
out
ret
sub
aas
fimull
mov
xor
repnz
call
or
or
sub
stos
jp
mov
push
sbb
test
or
inc
sub
mov
shrb
sti
ror
jo
xor
pop
jp
scas
call
or
imul
xor
sub
mov
ljmp
lock
xor
xor
mov
sub
das
jnp
dec
sahf
sub
or
test
cld
sub
test
dec
pop
call
fisttpl
mov
out
sbb
shr
imulb
add
jns
dec
jns
add
bnd
sbb
movsl
insl
mov
xchg
mov
adc
dec
cmp
mov
pop
mov
or
jmp
mov
add
popa
xlat
sub
mov
cwtl
mov
stos
push
cltd
jo
sahf
cmp
cmp
mov
xlat
sub
repnz
mov
pop
dec
dec
sbb
xchg
cmp
or
iret
sub
in
mov
jbe
pop
dec
repnz
mov
add
push
push
dec
mov
add
cmp
xlat
test
cmp
pop
mov
imul
push
loop
icebp
push
sub
lea
stc
lods
cmp
and
mov
jmp
sub
lea
sub
adc
das
push
std
mov
push
ja
rcll
decl
add
ljmp
popl
andl
pop
adc
ljmp
adc
shll
cmp
popa
or
sub
sub
ds
sub
push
lcall
lret
out
push
jecxz
xchg
mov
subl
fildl
std
ret
mov
ficoms
jecxz
or
push
lods
sbb
jno
adc
repnz
les
add
cmp
push
outsb
sbb
pop
fwait
jae
mov
repnz
push
je
daa
jge
or
sbb
xor
push
adcl
in
aam
pop
mov
leave
or
test
pop
push
pop
or
sub
xor
sbb
in
out
bound
out
inc
into
add
insb
stc
sti
test
ret
int3
jg
sbb
mov
es
fdivrs
xor
sub
ror
dec
out
adc
sub
imul
mov
and
cmpsb
and
mov
add
insb
aad
and
popa
ret
out
or
sbb
xor
cmp
push
sub
cmp
test
mov
ljmp
adc
pop
xchg
push
gs
jns
cmp
cmp
ret
push
cmp
out
andl
repz
lods
jbe
outsb
mov
data16
xchg
outsl
lahf
shrb
dec
dec
enter
push
andl
sub
push
cs
push
or
lcall
xchg
addr16
push
cld
xchg
fucomi
bswap
sbb
cli
in
fildll
dec
mov
loopne
shr
adc
arpl
push
xchg
jl
jns
pop
repnz
les
outsb
jo
add
adc
add
pusha
arpl
movsl
xchg
mov
mov
stos
test
xor
fdivrs
mov
pushf
lret
push
xor
jl
dec
testl
adc
mov
test
enter
inc
jne
arpl
aas
mov
jmp
call
mov
imul
imul
outsl
cmp
sti
sub
jp
icebp
in
xor
enter
out
push
or
outsl
xor
ret
cmp
pop
add
aaa
daa
sub
mov
pop
xacquire
cli
in
mov
icebp
mov
xor
call
das
in
lcall
xchg
sbb
pop
xchg
shll
out
jl
xchg
sbb
adc
cltd
mov
add
test
scas
pop
dec
mov
fsub
pop
lea
and
adc
imul
sub
daa
shll
lods
shlb
inc
cli
push
insl
cmp
adc
jge
add
xchg
repnz
dec
dec
imull
push
cld
in
cld
stc
xor
std
int3
imul
test
sbb
cli
ffree
xor
scas
adc
jne
in
push
jg
mov
imul
pusha
xorl
test
and
mov
push
lea
mov
cmpsb
pop
mov
jmp
mov
dec
cmpsb
cmp
jnp
outsb
mov
mov
pusha
mov
out
lea
add
sbb
and
fs
pop
pop
push
sarl
cmp
sbb
stos
daa
inc
or
sub
enter
jge
mov
mov
lock
jne
or
lret
inc
or
lret
and
mov
mov
push
shll
or
ljmp
call
or
stos
lods
cmp
cmp
imul
xor
ljmp
cmp
cmp
pop
or
bswap
insl
cmp
dec
loop
mov
sbb
data16
sbb
popf
outsb
push
or
shrl
push
push
add
int
or
call
xor
cmp
ret
or
test
sbb
repz
das
jmp
das
imul
mov
mov
or
adc
es
xor
cmp
jnp
pmullw
xor
ss
mov
test
imul
call
dec
cmp
int3
ljmp
test
shrb
pop
aaa
insb
pop
das
jp
mov
jp
cli
std
push
mov
sbb
cmp
mov
clc
jns
lret
xor
mov
mov
scas
cmp
cmp
sbb
or
mov
jmp
and
jp
mov
in
jp
mov
out
pop
iret
cmp
mov
bndstx
sbb
sub
out
sarb
jo
ljmp
ljmp
out
mov
lcall
insb
lret
popf
pop
inc
pop
out
insl
std
in
push
or
pop
cmp
xchg
out
dec
mov
sbb
or
je
xchg
push
inc
rorl
je
inc
push
das
imul
cltd
ljmp
leave
sbb
pop
dec
into
sbb
into
mov
iret
sti
scas
ljmp
cmp
int
cmp
int
cmp
test
xor
repz
inc
xor
inc
jmp
lea
int3
gs
mov
inc
sahf
sbb
ljmp
cmp
movsb
dec
ficoms
sbb
fbstp
not
push
jge
stos
lea
inc
mov
sbb
subl
cltd
jmp
inc
xor
push
xor
mov
cmp
test
aad
sub
ljmp
mov
xor
sub
push
popa
clc
sbb
adc
aaa
je
mov
mov
jge
sbb
gs
sti
cmp
push
pop
adc
cmp
out
inc
add
pop
inc
mov
cld
xor
jo
mov
loope
lcall
jl
xor
or
adc
mov
and
hlt
fadds
nop
sbb
mov
mov
out
test
fcmovnb
jne,pt
ljmp
sbb
pop
lea
xor
push
sbb
mov
xchg
adc
and
pop
cmp
inc
testl
push
pushf
leave
adc
xchg
popf
stc
jp
aaa
nop
mov
repnz
ds
cmp
adc
andl
and
imul
and
mov
dec
and
adc
push
mov
xchg
fcoms
ret
das
mov
jl
test
inc
xor
pushf
or
add
fcoml
leave
mov
jp
jle
mov
fs
stos
adc
xor
push
inc
repnz
jmp
mov
cltd
mov
push
dec
and
lods
lret
loopne
ja
or
leave
mov
daa
push
dec
mov
xor
jmp
and
pop
push
fs
push
dec
xchg
jmp
subb
pop
push
mov
call
push
xor
aas
in
rcr
add
lock
sub
inc
flds
out
ja
movsl
or
outsl
xchg
popa
inc
cmpsb
sbb
jecxz
mov
push
push
sub
sbb
ljmp
cmc
inc
dec
jl
mov
dec
push
sarl
xor
in
rorb
pop
xor
inc
in
out
fadds
xor
sub
sub
pop
mov
or
dec
xor
in
xchg
rorb
inc
inc
sub
cmp
mov
jge
mov
cwtl
lea
or
popa
push
popf
mov
push
adc
sub
leave
xor
mov
adc
pop
cmp
or
xchg
sahf
outsb
in
jmp
mov
mov
mul
sub
roll
adc
daa
lods
out
jns
sbb
mov
jo
cmp
arpl
fdivs
daa
dec
inc
fs
and
fdiv
xchg
lods
sbb
lahf
add
push
imul
popa
into
out
jle
into
or
pushf
jns
dec
pop
insb
shl
lcall
pop
ret
iret
stos
adc
lods
test
xor
adc
ja
sbb
or
shr
shrb
outsb
leave
dec
cmp
mov
fwait
shr
stos
pop
pop
lock
push
jle
lock
sub
mov
aad
pop
dec
push
es
sub
sub
enter
adc
push
stc
mov
loope
out
lret
rolb
arpl
sub
mov
or
add
in
scas
add
dec
add
iret
xor
jns
ja
popa
add
rcll
call
and
fdiv
lret
cmpsb
jecxz
sbb
iret
pushl
add
add
xchg
int3
mov
cwtl
mov
sbb
sub
inc
or
mov
cmp
stos
repz
or
cmpsl
test
popa
fcmovu
xlat
jmp
mov
std
xlat
in
mov
out
syscall
aas
xlat
jg
adc
mov
mov
or
ljmp
mov
stos
lret
xor
sub
xchg
icebp
in
push
pop
std
outsb
pop
or
into
lcall
fs
stos
cli
mov
mov
xor
sub
mov
sarb
lock
push
pop
push
es
mov
movsb
mov
push
jne
lcall
cmpsl
sahf
mov
jge
sub
mov
das
daa
cmpsl
in
seta
adc
or
subb
add
pop
std
andb
aaa
int3
jp
cmp
pop
in
les
xchg
adc
push
pop
sbb
adc
cmp
fcmovne
xchg
and
push
mov
hlt
pop
arpl
jecxz
mov
pop
push
lea
out
cmp
cmp
xchg
inc
popa
sub
insl
stc
mov
daa
sub
in
hlt
cmp
loope
fbstp
add
sub
leave
mov
add
push
call
pop
push
lods
jnp
mov
mov
mov
jae
adc
insl
pop
cmp
das
cmc
addr16
pop
push
push
lahf
sbb
push
mov
mov
popa
jp
ret
lret
adc
movsl
xor
add
scas
lock
loop
mov
fisubrl
jae
fcoms
in
add
jae
stos
jecxz
xor
iret
jecxz
xor
loop
out
fdivrp
repz
lret
sbb
mov
push
cmpsl
in
mov
hlt
stc
sbb
xchg
data16
add
mov
push
or
sub
mov
cli
cmpsl
add
pop
ret
sbb
mov
dec
jno
orl
xchg
ss
sbb
sbb
mov
inc
sub
mov
dec
popf
sbb
adc
push
lds
mov
lods
in
sub
insl
outsl
jge
mov
leave
push
jnp
or
mov
in
lret
dec
icebp
sahf
out
fsubrl
inc
test
cli
mov
mov
lret
add
outsb
add
aas
sahf
addl
repz
xchg
popa
scas
mov
push
mov
ds
idivb
out
push
and
push
out
mov
sbb
sub
std
stos
mov
loopne
mov
cmp
mulb
aas
push
outsb
pop
cmpsb
cmp
call
and
data16
mov
fimull
pop
test
lret
repnz
mov
mov
jo
mov
mov
test
pop
ljmp
std
cld
add
dec
call
mov
xchg
dec
cltd
xor
sbb
cs
stos
cmp
push
jnp
ds
or
popf
enter
fs
mov
stos
push
fistl
sti
mov
or
lods
inc
push
add
mov
gs
push
mov
out
xor
push
sub
std
jb
mov
mov
cmp
push
jg
add
jns
xor
fadds
dec
pop
inc
xor
es
jmp
sub
adc
aad
or
adcb
pushf
rcrb
lods
pushf
ss
push
cmp
jne
data16
test
or
mov
fistpll
outsb
pop
out
aad
sbb
pusha
or
insb
push
cld
shll
sbb
enter
inc
dec
dec
repz
or
add
mov
arpl
or
mov
mov
ss
leave
xchg
das
insb
mov
or
loop
scas
rcll
arpl
pop
adc
cmc
loope
dec
testb
outsb
sbb
inc
sbb
dec
jge
xor
call
icebp
fs
sub
push
dec
mov
adc
mov
push
or
les
cltd
lea
xor
jne
movb
dec
call
cmpl
and
frstor
addr16
mov
sub
push
imul
cmp
sbb
pop
pop
jecxz
in
cmc
stc
dec
and
cmp
leave
loop
ljmp
or
mov
mov
sahf
jg
inc
or
add
jecxz
dec
pop
sti
cmp
loop
sub
imul
sbb
or
adc
shlb
sub
sub
icebp
outsl
mov
add
cmp
push
xor
sub
std
xchg
mov
test
insb
ret
dec
mov
daa
out
mov
cmp
dec
ljmp
and
xor
fs
adc
xchg
iret
aaa
sbb
push
es
adc
clc
aas
iret
std
sub
lods
ficompl
cmp
adc
mov
mov
das
mov
xchg
xlat
or
and
test
mov
popf
cmp
mov
sbb
ficoml
stos
sbb
or
incl
pop
push
fmull
lock
sbb
mov
cmp
pusha
push
jle
jno
mov
test
mov
insl
dec
xchg
leave
lods
mov
leave
jb
add
mov
hlt
cmp
scas
push
outsb
sub
sub
out
mov
mov
sbb
sbb
mov
xor
cmp
push
jb
and
testl
fwait
mov
js
popa
cmc
lahf
sbb
push
xchg
jecxz
xchg
pop
xchg
sub
cli
fcoms
ja
mov
cmp
repnz
cmp
into
dec
add
cmp
or
jge
mov
inc
sub
cli
pop
xor
insb
lock
lea
mov
bnd
cwtl
cmp
popf
push
gs
nop
cmpl
push
pop
and
cmpsb
rcrl
fucomi
sub
dec
aaa
std
dec
inc
pop
adc
pop
push
xchg
push
mov
lock
mov
pop
movsb
cmp
shrb
shr
call
inc
push
cmp
lret
in
sbb
mov
xchg
sahf
and
imul
dec
jge
sub
dec
jns
test
jb
ds
addr16
fdivrl
out
add
gs
daa
add
data16
cmp
mov
xchg
fldz
mov
and
aaa
pop
add
pop
dec
mov
mov
or
mov
inc
dec
cwtl
test
xor
fbld
std
dec
xchg
mov
mov
lds
mov
mov
pushf
cmp
add
add
bound
rep
scas
gs
inc
cmpsb
jne
outsb
stos
xchg
inc
sti
dec
pop
jmp
sbb
je
or
cmpsl
xor
dec
push
lods
lds
add
sbb
es
cmp
icebp
or
push
adc
jne
mov
scas
mov
xchg
in
sti
in
xor
xor
or
mov
pop
aaa
pop
pop
push
pop
in
lock
hlt
or
pop
test
sub
ret
and
stos
lret
enter
movhps
loope
test
xchg
or
mov
das
xor
mov
outsl
shll
inc
out
test
loope
xor
or
push
push
sub
mov
mov
sbb
sbb
dec
xchg
and
dec
in
mov
dec
rol
adc
mov
movsl
add
mov
mov
cs
dec
push
push
addr16
add
rolb
rcrb
adc
or
fisubrl
jp
lahf
mov
add
xchg
outsb
or
insb
scas
mov
adc
ret
pop
sti
js
adc
push
test
in
std
jecxz
xchg
jo
rorl
aaa
pop
or
pop
dec
in
add
imull
ljmp
aam
movsb
movsb
push
mov
push
dec
and
jns
add
outsl
push
or
fisubrl
inc
ds
jge
pop
mov
rclb
shlb
or
pop
stos
inc
je
fcmovu
sub
lods
ss
sbb
mov
arpl
call
fildl
daa
fiadds
sbb
sbb
xchg
ja
or
jno
leave
mov
jp
sub
lea
lock
cwtl
out
or
mov
or
dec
cmp
fdivs
dec
imul
jmp
enter
dec
mov
jmp
mov
repnz
negl
stos
xor
jg
lcall
xchg
xchg
movsl
repnz
subb
pop
cmp
sub
pop
xchg
push
insb
out
lahf
cmc
in
push
sbb
jecxz
push
push
jge
fdivp
imul
out
dec
add
adc
lcall
mov
je
adc
faddl
cmp
outsl
and
cmc
gs
fimuls
jl
mov
test
push
jge
popa
mov
in
cmp
pop
out
push
sub
cmp
adc
push
jg
int
mov
je
sahf
aam
pop
insb
jne
dec
sti
fbstp
fimuls
xchg
in
dec
fs
sub
push
pop
mov
mov
les
inc
incl
mov
adc
xor
jge
scas
test
or
or
sub
aad
in
cltd
push
je
jb
outsl
dec
adc
jmp
icebp
dec
or
std
data16
sbb
or
es
sub
negb
dec
sub
mov
push
lea
or
pop
test
loope
push
cs
xchg
stos
xor
pusha
xor
loopne
pusha
xor
pop
pop
mov
ss
mov
test
dec
push
sub
or
pop
adc
mov
icebp
loope
lock
cmp
jae
lea
setno
arpl
lcall
or
mov
out
iret
jo
sub
sub
aam
push
les
jg
imul
or
mov
xor
ds
inc
mov
add
jno
or
xchg
sbb
xor
dec
jmp
lea
filds
mov
insb
in
and
cwtl
ja
outsb
sbb
into
adc
mov
push
daa
add
lods
mov
lea
mov
inc
in
stos
cmpsb
lea
outsl
pop
dec
ret
ret
or
stos
lea
xchg
shl
loopne
sub
dec
sub
les
mov
mov
nop
xor
addr16
dec
mov
mov
cmp
mov
hlt
dec
xchg
jmp
movzbl
dec
rcrl
xlat
mov
stos
jns
test
cltd
out
or
imul
sub
adc
shrl
adc
ret
gs
cmpb
jae
test
in
daa
add
adc
mov
rol
mov
loope
pop
stos
mov
call
dec
dec
cli
cmp
lea
jno
testl
xor
inc
mulb
in
mov
fisubl
adc
inc
scas
cmp
cli
cli
inc
movsb
jns
dec
cmp
push
movsl
push
sbb
mov
imul
mov
loop
jp
into
add
cmp
inc
inc
clc
ja
mov
mov
mov
xor
rclb
xchg
or
push
sbb
mov
xchg
fwait
movsb
lods
adc
xchg
testl
dec
stos
insb
sbb
jmp
inc
mov
or
xchg
fmuls
shl
pop
adc
ja
jo
and
adc
xor
pop
dec
cmpsb
rcr
iret
sub
out
imul
sub
jmp
add
fcomp
movb
out
cmp
xchg
pushf
adc
fs
mov
leave
repnz
jns
and
push
ret
adc
inc
xor
lahf
sub
or
dec
lea
call
or
daa
jle
inc
repz
and
mov
icebp
mov
jae
call
mov
inc
fwait
cmp
sub
js
stc
mov
xchg
push
and
xor
negb
push
push
add
cmc
add
scas
mov
sub
aaa
jge
dec
mov
in
out
mov
jnp
shlb
addl
loopne
loope
cs
rorl
stos
jge
xor
shll
add
test
repnz
pop
push
sbb
iret
aaa
pusha
xor
inc
push
ds
loopne
je
insl
mov
add
xchg
jecxz
push
pop
aam
mov
loope
cmp
cmp
sub
xchg
jge
mov
sbb
cld
pop
bound
xor
dec
mov
push
xor
mov
rorl
popf
fcompl
cmpsl
push
push
sub
jmp
lret
repnz
jo
pop
inc
hlt
outsl
jbe
mov
cld
int
push
stos
int3
and
scas
mov
or
cmp
adc
in
pop
push
and
add
mov
or
inc
dec
mov
ss
xor
das
in
sahf
lea
repz
push
insb
and
bound
xor
push
add
lea
sahf
xchg
jl
popa
in
test
jbe
rolb
out
stos
pop
ljmp
addr16
sbb
xchg
rcll
mov
xor
cmpsl
cmp
cmp
cmp
xor
in
fistpl
imul
out
inc
movsl
pushf
push
and
sbb
or
in
mov
or
aaa
sub
mov
ljmp
testb
cltd
mov
mov
sub
fwait
xchg
call
xchg
push
repz
fs
add
sub
or
sub
or
and
add
cmp
push
jbe
ds
std
into
push
in
xor
nop
xor
out
inc
pushl
inc
xor
inc
gs
mov
sub
std
pop
xchg
cmp
je
popa
repz
test
dec
inc
and
or
loope
notb
sub
insb
add
lret
inc
cmp
add
add
loope
inc
sub
je
add
daa
jae
lds
push
in
inc
push
fiadds
mov
push
fidivrs
push
scas
movsb
aam
jp
idivl
int
add
jge
pusha
inc
xor
pop
in
jne
sub
cld
pop
jbe
xchg
rclb
subl
inc
cltd
pop
sti
xor
popa
push
inc
rcrl
scas
loope
or
les
pop
push
sbb
imull
mov
das
adc
arpl
inc
pop
mov
sub
notb
and
mov
popf
movzbl
pusha
push
cmc
add
xchg
je
stos
fimuls
popa
mov
test
out
fucomip
cwtl
or
sub
adc
movsl
mov
lock
sti
add
pop
loope
mov
jne
sti
stos
mov
ljmp
and
out
xor
add
repnz
push
or
sub
in
or
rclb
mov
xorl
out
push
add
lea
imul
cli
pop
mov
or
fwait
pop
pop
cli
stos
addl
rcll
das
and
inc
insl
arpl
fcomps
jge
dec
pop
jmp
xchg
lcall
pop
dec
lock
iret
loop
cmp
adc
sub
mov
loop
push
adc
jne
jbe
pop
mov
aas
fimull
lahf
pop
int3
pop
imul
or
jbe
lret
ret
xchg
mov
out
lret
sub
sub
sbb
std
lock
lea
cli
ret
mov
jno
and
xor
aad
int
mov
mov
repnz
test
cs
mov
leave
cs
cltd
inc
lock
sahf
repnz
or
icebp
cmp
dec
push
stos
mov
jecxz
add
cld
or
mov
sub
aad
mov
jno
xchg
and
push
sahf
stc
jno
hlt
ds
out
and
fdiv
enter
push
pop
mov
mov
out
push
or
fldl
push
jle
loop
lcall
mov
adc
jns
rorb
sahf
leave
in
addb
test
pusha
mov
movsb
sbb
mov
jmp
into
xchg
or
inc
fcomps
xlat
in
mov
aaa
mov
mov
push
cld
or
dec
mov
pushl
icebp
push
pop
dec
es
sbb
sbb
imul
scas
jns
js
hlt
ds
rcr
xor
xchg
or
inc
sbb
adc
stos
pop
xchg
jecxz
movsl
mov
js
pop
sti
stos
js
and
call
test
or
rcr
dec
cli
mov
in
ljmp
in
xchg
movsb
or
pop
xchg
push
and
cmp
and
les
inc
jmp
and
fisubrs
add
sub
adcb
icebp
pop
stc
ss
and
cmp
in
mov
int
sub
loop
imul
cmp
adc
pop
push
int
data16
push
enter
cmpsb
dec
push
leave
std
cmp
cmpsb
push
repnz
cwtl
test
cmp
push
sub
lea
fiaddl
mov
lds
inc
repnz
test
scas
cmp
sub
xchg
ljmp
repnz
dec
repz
jle
xchg
mov
xchg
stc
std
insb
lahf
push
bound
mov
mov
cli
sbb
ror
aas
xor
enter
xor
push
jbe
idiv
mov
push
out
inc
jge
jg
gs
inc
in
sub
jno
lock
jb,pn
repnz
cmc
inc
ds
inc
in
stos
cmp
inc
push
dec
sub
pop
and
or
fisttps
aam
mov
inc
inc
dec
pop
jp
cltd
lods
addr16
mov
inc
dec
movsb
lret
jecxz
add
and
jge
inc
movsb
xor
jns
or
push
sub
outsl
cld
sbb
repz
mov
cmp
mov
lahf
cmpxchg
ljmpw
jmp
mov
lds
adc
mov
das
fstpl
mov
sbb
hlt
push
adc
mov
inc
ret
cwtl
push
lods
inc
cs
mov
push
or
mov
daa
sub
loop
mov
je
jle
icebp
in
ret
pop
stos
insl
or
bound
idivl
pop
fsubrl
inc
pop
sbb
xchg
ret
sbb
mov
es
xorb
aam
cmpsb
out
xor
jmp
scas
sbb
or
mov
stos
dec
out
lret
xor
rolb
mov
and
outsb
xor
or
fisubrl
rorl
sub
jmp
lret
and
cmp
aad
stos
jmp
push
or
fistl
lret
fmul
pop
or
in
pop
pusha
inc
stos
mov
jmp
add
fs
xchg
xor
rol
imull
and
ret
jp
add
xor
clc
sbb
ljmp
lods
scas
stc
and
nop
fidivrl
mov
imul
imul
mov
sub
adcb
jne
lock
mov
push
or
fdivl
repz
xchg
xor
shr
repnz
lock
adc
enter
mov
cmp
lret
stos
shl
iret
or
fmuls
or
rcll
adc
out
or
or
mov
jb
xchg
mov
lock
fcmovb
mov
rorb
dec
daa
lea
fnstenv
enter
invd
aas
push
fmuls
adc
push
cltd
adc
repz
push
cmp
fcmovnbe
sub
stos
call
lods
imul
mov
dec
mov
inc
dec
sub
jle
mov
pminub
mov
dec
hlt
sbb
js
jnp
flds
or
push
pop
adc
cwtl
nop
cmp
xor
mov
call
jnp
clc
mov
fldenv
lods
test
addr16
out
push
mov
mov
pop
ljmp
lea
pop
pop
jg
mov
test
ret
jecxz
bound
fldcw
xor
lea
loope
cmpsb
push
mov
stos
shufps
jmp
mov
xor
sub
pop
icebp
cmp
mov
jb
je
sti
fildl
cs
push
or
iret
clc
and
mov
in
mov
iret
js
stc
pop
lods
push
pop
jge
push
push
push
xor
in
sub
dec
dec
std
sub
pop
cmp
fisttpll
mov
pslld
sub
sub
mov
pop
pop
cmp
mov
movsb
sbb
or
sti
pop
and
int3
cmpsb
call
add
xchg
xor
dec
jl
sbb
std
mov
sub
push
rcrb
xor
mov
add
enter
sub
rcr
loope
xor
pushf
inc
cmpsb
pop
mov
repnz
jns
jmp
ljmp
cmp
push
pushf
adc
flds
sub
jle
stos
pop
bound
punpcklbw
mov
lret
push
mov
iret
mov
add
dec
sub
ljmp
xchg
out
dec
addr16
lea
movsb
or
cmp
push
or
out
sbb
mov
cli
lret
push
ret
xchg
adc
hlt
in
sub
mov
stc
bound
arpl
push
or
mov
aad
inc
sub
or
aaa
push
xlat
lock
mov
and
test
cmpsb
ret
lea
dec
stos
sub
push
xor
cmp
or
jl
std
pushf
lret
cld
pop
stos
cli
lea
in
adc
dec
mov
or
out
cmp
enter
xor
sub
dec
data16
push
push
aam
cmp
inc
repz
mov
ljmp
sub
fsubs
rcrl
ss
push
stos
sbb
mov
jb
mov
outsb
loope
leave
icebp
pop
mov
dec
repnz
xchg
push
lcall
and
add
cld
push
jno
lods
int3
jl
lock
or
pandn
mov
outsb
out
add
movsl
adc
dec
daa
and
dec
cmp
inc
push
xchg
sub
mov
pop
in
push
mov
stos
push
movsl
hlt
hlt
mov
sub
xchg
pop
dec
mov
jge
cmp
lods
scas
mov
repnz
jge
cmpsb
cmp
jge
xchg
jnp
mov
jae
aam
or
repnz
mov
arpl
or
out
pusha
jmp
push
and
sti
cltd
pop
pop
lea
dec
cmp
cmp
mov
rcrl
mov
fwait
jo
and
mov
addr16
mov
or
push
xor
imulb
pop
insb
in
lea
insl
repnz
jne
pop
xlat
or
mov
dec
pop
sub
stc
mov
push
and
jb
or
jl
pop
mov
nop
sub
cmp
mov
insl
repnz
jle
imul
fiadds
add
xchg
rorb
push
fstps
leave
ds
xor
js
stc
add
in
stos
add
loopne
add
cwtl
arpl
cmpsb
repnz
cmp
ljmp
gs
dec
mov
inc
pusha
or
push
add
sub
inc
out
xor
sub
test
sub
les
mov
inc
or
inc
cmp
mov
aam
sti
adc
pop
nop
cmpsb
adc
jg
xchg
push
push
adc
pop
in
mov
adc
aam
push
lock
add
sub
push
xchg
stos
cmp
xlat
mov
inc
ljmp
dec
dec
out
das
bound
sbb
arpl
pop
pop
fs
or
decl
ud0
sub
insb
ljmp
cmpsb
mov
mov
xchg
pop
call
xchg
sub
mov
lock
cmpsb
adc
jno
sub
mov
mov
lea
lahf
pop
dec
gs
dec
pop
xor
ret
imul
push
cmpsl
jle
imul
rcrb
mov
sbb
xor
dec
push
mov
sbb
gs
and
push
or
addr16
add
xor
fsubrs
mov
aas
jo
dec
lds
lret
ss
push
inc
enter
adc
xchg
dec
cmp
xor
sub
inc
cmp
xorl
movsl
or
sbb
imul
dec
add
mov
jg
or
mov
sub
mov
mov
lods
call
jge
inc
mov
repnz
ds
lret
icebp
out
pop
sbb
jmp
add
popa
or
mov
inc
cmp
imul
dec
pop
int
mov
lret
jmp
clc
idivl
push
xor
hlt
mov
repnz
fsubs
push
xor
add
cmp
add
xor
mov
fs
or
cmp
pop
push
push
icebp
bound
aas
jmp
shrb
pop
adc
mov
sub
pop
jb
or
xlat
fildll
or
jb
jle
out
jnp
mov
or
pop
xor
sbbl
pop
inc
inc
cmp
ret
jno
jae
mov
or
cmp
cmp
out
aad
cs
testl
add
jle
out
loop
ret
sbb
sub
mov
pop
stc
adc
xchg
sub
pop
xorb
popf
fdivs
repz
xchg
cmp
sub
clc
fnclex
cmovs
inc
and
dec
mov
xor
pop
sar
xlat
jle
push
jnp
les
stos
ds
push
push
xorl
lea
or
sbb
pop
rclb
sub
inc
and
sub
mov
sti
enter
nop
inc
pop
test
aad
lcall
mov
inc
cmp
jmp
or
imul
int
mov
lea
mov
dec
push
cli
in
lret
int
out
sub
xor
lea
push
mov
shl
or
inc
sbb
cmp
jmp
popa
aad
jne
jecxz
sub
mov
paddsw
lahf
mov
jp
mov
es
mov
stos
push
call
inc
xor
aas
add
or
dec
mov
outsb
retw
xor
xchg
cmp
es
mov
mov
add
mov
fdivs
sub
aas
clc
cmp
leave
sbb
sahf
cmp
mov
push
ss
pop
cmpsb
pop
cmpsl
mov
cmpsb
push
sbb
hlt
testl
clc
stc
xchg
stos
data16
enter
inc
pop
mov
sub
cmc
dec
mov
in
cmpl
loope,pt
cmc
push
dec
add
xchg
in
ljmp
ds
test
mov
push
lods
push
nop
or
enter
inc
mov
ret
mov
pop
lcall
sti
inc
or
ds
lea
nop
or
sbb
popf
icebp
daa
std
inc
sub
cmp
sub
jne
test
jns
daa
lcall
xor
mov
jp
pop
cmp
adc
fnstcw
and
cmpsb
cwtl
sarb
fcmove
in
fsubrl
xlat
push
das
in
sbb
popl
mov
adc
cld
outsl
rorb
lods
add
sub
jae
fimull
es
icebp
popa
int3
repz
filds
test
xchg
stos
xorl
sbb
mov
sbb
dec
cmp
imul
insb
mov
test
or
stc
dec
sub
ds
push
push
and
sti
stos
jle
pop
sbb
insl
mov
or
lret
mov
jbe
fdivs
daa
idivl
pop
out
aas
sahf
ret
ret
mov
dec
adc
cmp
mov
nop
add
mov
rorl
jge
ja
mov
xor
shll
movaps
sbb
mov
xor
pusha
repnz
jp
sub
mov
rcll
cld
jno
jmp
mov
dec
dec
pop
sbb
xchg
dec
movsl
cmpsb
push
mov
push
stos
ljmp
outsl
popf
mov
jb
jbe
or
loope
dec
cmpsb
cld
inc
jo
xor
call
mov
push
outsb
sbb
pop
jns
mov
xchg
mov
xor
pop
pop
xchg
sti
sbb
push
jp
das
mov
mov
cmp
inc
bsr
pusha
sbb
mov
mov
cwtl
in
mov
adc
punpcklbw
sbb
shrl
xor
stos
cmp
stc
and
loope
loop
cli
aad
or
push
mov
xor
mov
pop
aas
xor
xchg
add
lahf
lock
push
sbb
sbb
adc
int
mov
insl
push
xchg
cmp
xchg
or
pop
stos
push
pusha
or
mov
stos
inc
mov
jge
inc
push
push
rcrb
call
jne
pop
mov
inc
and
lea
rorl
cmp
dec
js
cmp
xchg
sub
leave
jge
sbb
std
repnz
stc
jecxz
dec
lds
xchg
aas
cmp
addl
nop
mov
push
sub
xor
movsb
in
test
push
xchg
push
jmp
mov
sub
sub
call
out
lret
cs
cmpsl
cs
into
or
stc
inc
or
xchg
or
or
or
cmp
mov
ljmp
lret
adc
or
cmp
adc
cli
mov
pop
int
and
or
jmp
xchg
repz
and
cmp
ljmp
adc
pop
xor
je
xor
or
mov
rorb
cli
or
xor
inc
data16
stos
sbb
pushf
sub
fcmovnu
sub
sub
call
or
lret
lret
add
das
push
push
mov
int3
cli
stos
clc
cwtl
or
test
mov
and
jp
mov
rorb
sub
or
das
lcall
scas
fwait
sub
imul
into
test
mov
or
push
pop
push
aas
mov
mov
sub
fmuls
or
mov
adc
lret
ljmp
mov
ljmp
or
sbb
or
or
dec
or
lret
aas
or
pop
cmp
pop
mov
out
movb
cmp
stc
inc
inc
mov
cs
pop
ret
or
dec
mov
imul
cli
or
xor
fists
repz
repnz
or
jp
sti
adc
jnp
ljmp
dec
mov
hlt
repnz
cmp
fucomi
mov
cmp
adc
cmp
sti
xchg
sub
imul
enter
aam
mov
cltd
sbb
pop
xchg
jnp
xchg
or
lret
sahf
or
or
or
fists
sbb
or
test
out
aas
mov
pop
ss
leave
call
std
adc
mov
adc
add
stc
or
pusha
dec
daa
jno
cmp
lea
aam
or
jns
andl
push
sbb
es
adc
outsb
fldt
stos
sub
fimuls
or
mov
mov
in
fcomps
dec
mov
sub
cli
mov
mov
aad
pop
popf
lret
lea
loope
add
push
mov
jne
daa
bnd
sub
mov
cmp
aaa
mov
jge
cmpb
pop
add
imul
or
fwait
ljmp
test
in
inc
push
jcxz
inc
movaps
cmp
loope
and
push
mov
cmpsb
fnsave
call
ljmp
arpl
in
pmullw
lea
jmp
icebp
test
mov
mov
mov
jmp
mov
pop
mov
cltd
stos
pop
lret
jge
test
roll
sub
enter
and
daa
dec
sub
movsb
cs
ds
dec
stc
in
or
cmp
cs
and
mov
push
stos
enter
mov
xchg
fiadds
push
mov
pop
or
jns
bound
mov
sbb
arpl
pop
inc
loopne
frstor
and
hlt
adc
movsl
lds
cmp
push
push
or
aad
les
push
sbbl
call
test
enter
cmp
mov
and
ja
lret
pop
jno
mov
mov
xchg
pop
or
cwtl
sub
sbb
xchg
xchg
cld
xor
xchg
lods
xchg
pop
popa
pop
cmp
mov
insl
sub
int3
xor
sbb
mov
add
dec
ror
loopne
or
lea
rep
jp
sti
mull
add
loope
sbb
push
test
dec
push
or
out
pop
jl
pop
cmp
cltd
push
push
imul
xchg
nop
dec
addr16
push
mov
cmp
sub
mov
inc
repz
mov
into
cmp
pop
sub
fsubs
cmp
jge
sti
or
jmp
ret
pusha
aas
xchg
push
sbb
mov
push
es
push
dec
movsl
mov
push
mov
cmp
xor
and
mov
popf
outsb
or
sub
push
das
xchg
cmp
int
jno
push
in
subl
add
adc
cmc
jge
push
repnz
ret
gs
enter
test
mov
add
mov
sub
in
imul
inc
push
or
push
cmp
repnz
mov
gs
lods
dec
pop
lock
xor
arpl
xor
xchg
push
sbb
sbb
stos
or
lock
or
cli
in
mov
bound
lock
pop
dec
sub
inc
pop
das
jp
dec
cmp
rcr
in
pop
sub
push
mov
in
add
push
push
lods
decl
and
xchg
xorb
adc
push
sbb
popf
cmp
fmuls
adc
lcall
inc
lock
push
add
cmp
in
ljmp
jns
pushf
cmpsb
cmp
cmc
test
add
dec
pop
xlat
adc
mov
cwtl
nop
fadds
sub
int3
or
add
cmpsb
popf
in
xor
add
and
sbb
xchg
sbb
loop
pop
mov
es
repz
jno
mov
scas
mov
pushf
das
adc
sub
mov
lcall
jb
subb
out
mov
jo,pt
ds
shll
cs
lcall
sbb
addl
push
std
mov
mov
lret
push
cwtl
mov
pop
push
mov
shlb
aad
lea
mov
push
les
test
lods
sub
cmp
fmuls
xchg
lea
lods
or
or
cmp
sub
add
mov
stc
subl
clc
pop
mov
and
and
lcall
into
pslld
shrb
stos
sub
outsl
or
cmp
shll
push
pop
scas
movsl
xchg
jmp
mul
push
cmpsb
dec
pop
mov
fstpl
and
inc
ja
subl
mov
inc
dec
fs
les
data16
fnsave
cmp
mov
mov
test
add
subl
push
or
fdivl
push
jge
addb
negl
pmaxsw
pop
pop
pop
dec
cmc
cmp
xchg
jp
out
ret
hlt
sbb
rcrb
lret
mov
or
add
pop
nop
or
lcall
cmpsb
loope,pt
repnz
jo
and
clc
lret
adc
dec
or
mov
mov
stos
mov
push
inc
scas
outsb
sti
out
jbe
ljmp
xor
dec
push
sbb
lea
insl
xchg
dec
fistpl
mov
scas
das
sti
jl
fdivr
mov
ljmp
mov
pop
addr16
mov
pusha
outsb
or
outsb
mov
cli
sbb
sbb
and
fs
rorl
add
inc
fisttpll
pop
mov
outsl
ds
loop
sub
push
mov
leave
pop
jge
daa
js
mov
sbb
in
cltd
xor
pop
outsl
xor
jnp
hlt
divl
sub
mov
add
adc
push
popf
add
cwtl
les
adcb
mov
lods
or
mov
and
popa
push
lcall
sbb
stos
dec
adc
cmp
sub
cmc
ss
jno
stos
sti
sub
pop
dec
add
movsb
mov
pushf
mov
fildl
jmp
dec
mov
sub
nop
mov
and
or
mov
pop
mov
adc
inc
movsl
push
push
push
inc
gs
mov
sti
jl
xchg
lret
inc
mov
fs
ss
push
push
std
sub
jl
pop
mov
imul
pushf
cld
add
or
repz
add
mov
test
push
push
js
push
mov
es
cmp
in
sub
adc
pop
dec
stos
or
fwait
iret
or
dec
sbb
test
in
or
inc
test
jne
cltd
sbb
jb
mov
xorb
pop
pop
das
cli
xchg
ss
mov
or
iret
jg
dec
sahf
fnsave
mov
or
cmpsb
push
adc
shl
pop
ss
ljmp
dec
andl
call
popa
or
pop
movsl
sub
fisubrl
shr
push
mov
leave
icebp
jno
outsb
fcoml
roll
cmp
xchg
nop
sub
jo
cmpsb
mov
add
mov
xchg
addb
cmc
push
mov
dec
inc
dec
add
data16
cmp
mov
xorb
stos
push
mov
cs
adc
inc
lea
loop
add
fmuls
clc
mov
dec
lock
mov
enter
out
cmp
xchg
shll
cmp
dec
cmp
push
add
out
sbb
inc
sbb
sarb
cmp
fdivrs
add
inc
cmpsl
in
sbb
mov
xchg
addl
dec
mov
fimull
movsb
popf
jne
mov
nop
std
xor
mov
repnz
xor
cwtl
jb
pop
sub
stos
pop
sbb
test
push
mov
fistl
loop
xchg
cwtl
push
adc
shll
add
enter
mov
popl
jge
sub
jb
int
cmp
pop
and
enter
mov
lods
in
add
mov
fstl
inc
movsb
stc
pop
divb
mov
gs
adc
popw
pop
sbb
dec
inc
pushf
icebp
ds
cmc
cmpsl
jl
add
notl
push
jmp
scas
add
test
mov
addr16
xchg
mov
push
inc
mov
mov
jge
pusha
sub
sub
mov
dec
mov
and
sub
mov
jp
sbb
pop
lar
and
jl
mov
cmp
das
addr16
ds
popa
or
insb
push
shrb
cmp
ja
dec
dec
int
cmc
and
icebp
cmp
jae
jmp
push
or
jnp
sub
icebp
mov
ljmp
and
push
add
mov
mov
fcom
cmp
cwtl
leave
ds
dec
imul
push
aad
inc
ret
jo
enter
cmc
mov
ss
xor
imul
or
jbe
xchg
leave
shrl
sub
ja
lods
call
cltd
and
ss
xorl
and
stos
loope
pop
mov
push
stos
push
clc
bound
pusha
cli
mov
ficoms
cmp
cld
add
jno
xchg
out
lret
sbb
inc
mov
add
jl
mov
iret
inc
lret
pushf
in
testb
or
dec
xchg
adc
adc
mov
popf
lahf
jno
cmp
mov
rcrl
and
and
inc
cltd
cwtl
push
and
xchg
dec
xor
inc
jb
roll
push
enter
and
mov
mov
jmp
or
adc
arpl
mov
sub
daa
mov
inc
leave
mov
mov
sub
dec
xchg
mov
sub
and
int3
adc
mov
les
sub
repnz
jecxz
cmp
scas
cmc
lcall
and
dec
jno
and
leave
in
sbb
cmp
std
mov
add
cmp
test
mov
mov
aaa
cmp
ret
enter
pop
sub
loope
inc
sbb
loop
leave
fisubl
and
xchg
fs
nop
repnz
xchg
sbb
shll
in
icebp
imulb
mov
ljmp
add
pop
insb
divl
push
jne
notl
mov
dec
push
sub
inc
sub
inc
adc
dec
lock
je
inc
sti
std
cmp
les
aad
pop
inc
rorl
rcrl
mov
push
xchg
mov
cmp
lods
or
xor
sahf
insb
cmovge
cmp
mov
scas
bound
push
sbb
ljmp
push
sub
fucomip
adc
sub
adcb
mov
mov
shll
add
mov
cmp
fsubrs
cmp
adc
add
lea
cwtl
sahf
adc
call
in
inc
stos
clc
cltd
sub
inc
aam
push
orl
jl
fldcw
push
xorb
add
or
lret
js
add
fsubrs
loop
pop
fbld
test
je
js
push
sbb
sti
sahf
fsubl
in
push
ljmp
pop
or
shrb
js
pushf
inc
push
ja
dec
or
mov
subl
xchg
push
test
repnz
pop
sub
inc
jns
in
stc
mov
inc
dec
fwait
loope
inc
cmp
sub
dec
sub
movsl
enter
jnp
in
test
push
mov
fwait
and
js
or
or
rorl
xor
sub
in
test
test
or
int
dec
add
mov
jle
xor
cli
sub
movb
cwtl
pop
das
inc
sub
in
push
mov
sbb
dec
pop
inc
add
mov
xchg
sbbl
imul
xchg
test
xor
inc
push
mov
or
mov
xor
sbb
sub
dec
idivl
jns
sub
pop
fimull
lahf
cli
arpl
or
inc
jmp
int
sbb
jge
in
sub
mov
into
add
das
jmp
cmp
lahf
cs
rorl
jno
jnp
fldenv
jmp
loope
fistpll
mov
sbb
xor
loopne
bound
sub
push
sti
pop
nop
bound
push
sbb
mov
out
ds
mov
das
sbb
inc
out
popf
mov
sub
cmpsl
push
cmp
jo
xlat
orb
cmp
das
push
lds
push
faddl
inc
mov
in
dec
adc
div
lahf
out
int
mov
mov
cmp
lods
das
xor
mov
sub
arpl
sti
inc
aaa
ljmp
das
xchg
push
mov
dec
lea
mov
popa
repnz
aas
insb
or
xchg
leave
mov
lret
addr16
xor
icebp
mov
shl
xor
xchg
fst
or
scas
adc
adc
imulb
js
scas
jmp
in
mov
add
mul
iret
fsubs
cmpsl
fistpll
clc
cmp
mov
xor
ljmp
jp
xor
iret
cs
pop
mov
mov
out
push
dec
clc
sub
rcl
cmp
inc
mov
mov
adc
push
fmuls
pusha
mov
and
mov
jecxz
sbb
or
or
ljmp
and
sti
ret
mov
rcrb
clc
push
cld
addl
sbb
mov
sti
les
mov
dec
add
test
repz
iret
ret
add
xor
jb
xor
les
out
cmp
mov
pop
fwait
lea
xor
push
call
es
sub
ds
inc
xor
sub
sbb
cmp
stos
mov
clc
into
inc
aas
call
enter
mov
std
push
aam
xchg
mov
or
leave
mov
insl
and
sub
icebp
push
push
mov
repnz
loope
lock
xor
pop
std
fmuls
mov
icebp
push
mov
test
scas
sbb
jecxz
das
sub
sbb
shll
dec
mov
xchg
cmp
mov
stos
repnz
pop
shrl
lods
out
inc
or
out
mov
push
adc
aaa
ret
ss
lret
push
dec
jmp
mov
iret
xchg
dec
shll
cmp
insl
cmp
popa
cmpsb
adc
cmp
xorps
pusha
or
dec
mov
ljmp
dec
xchg
sbbl
divb
ret
je
push
cmp
pop
inc
inc
stos
mov
mov
jge
ds
test
lods
mov
push
mov
sti
xchg
or
pop
jecxz
hlt
and
sbb
popf
insb
mov
jl
cmp
sbb
dec
cmp
lcall
loope
cmpsl
imull
sub
mov
scas
inc
lea
test
xor
dec
sub
mov
inc
repz
xchg
lcall
iret
mov
pop
pop
dec
cmc
fcoms
adc
les
sub
cs
inc
and
pushf
int3
in
stos
dec
repz
xchg
jo
pop
dec
les
gs
fcmovbe
fsubr
ja
das
test
mov
insl
push
or
sbb
lea
mov
lods
pusha
xor
push
xchg
fdivl
mov
mov
fdivl
aaa
out
lods
out
sbb
mov
cmpb
or
shrl
stos
and
sub
pop
dec
and
ss
add
cmp
imul
jb
lea
or
cmp
out
sbb
dec
sbb
sub
in
clc
push
pusha
jb
roll
push
lods
xchg
adc
rorb
xchg
sbb
dec
push
mov
or
ljmp
mov
xorl
and
pusha
or
inc
fsub
aaa
jae
sbb
das
jge
adc
or
dec
mov
jnp
pop
sub
cmpsl
jo
addr16
and
xchg
frstor
xchg
mov
pop
add
lock
mov
fwait
jb
mov
fs
add
xchg
test
sahf
mov
cltd
mov
mov
andl
push
cld
call
sbb
mov
xchg
arpl
jmp
sahf
fstl
mov
sbb
div
xchg
je
mulb
cwtl
mov
jge
icebp
ret
dec
lret
add
mov
out
cwtl
mov
fdivs
pop
imull
mov
mov
jb
in
lods
mov
add
popf
dec
daa
xor
mov
arpl
mov
addb
sub
imul
pop
xor
push
adc
icebp
jo
repnz
add
jae
or
cmc
movsb
adc
stos
and
pminsw
sub
sub
add
ljmp
xchg
movsl
sub
fsts
ljmp
or
sbb
stos
cmp
inc
cmp
xchg
mov
push
lods
mov
cmp
jmp
xchg
lret
pop
sti
xor
mov
or
sub
push
push
or
or
sbb
pop
test
aaa
lahf
push
lret
adc
pop
dec
xchg
xor
fisttpll
xor
int
bound
into
cmp
test
test
xor
and
xchg
hlt
sbb
imul
push
mov
repnz
or
pushf
mov
call
enter
aaa
ret
stos
lock
mov
add
fdivrp
inc
sub
mov
enter
jp
cmpb
cmp
cmp
clc
sub
push
mov
fdivr
cmpsb
mov
mov
mov
sti
fidivrl
ret
dec
push
idiv
sub
int3
sbb
out
sub
ljmp
call
cmp
repz
dec
jnp
jp
jns
shrb
or
leave
das
sbb
nop
sub
sub
test
fwait
xor
mov
mov
cltd
pop
sbb
stc
in
movaps
outsl
dec
out
sub
fwait
sbb
hlt
dec
stos
call
and
mov
decb
stos
call
jp
subb
push
hlt
cmp
stos
jle
dec
cmp
pop
xchg
sub
mov
clc
pop
xor
lock
lret
out
call
int
scas
jnp
sub
mov
pop
call
pop
lock
sbb
icebp
or
mov
test
lods
int3
cmp
sti
adc
or
imull
cmp
dec
xchg
sahf
cmc
subl
into
add
jb
adc
cmp
mov
mov
fistl
fdivl
popa
lcall
lea
jge
ret
or
or
add
gs
inc
push
rclb
adc
repnz
lcall
xor
arpl
dec
push
add
sarb
mov
and
dec
fistps
sub
lea
and
clc
rcll
pop
lods
pop
mov
lods
add
addr16
sbb
push
call
pop
inc
ds
sbb
es
add
test
out
stos
xor
pop
mov
pop
sti
add
mov
mov
adc
dec
inc
aad
adc
jo,pn
sub
jno
shll
into
or
mov
push
push
xor
push
push
mov
xchg
push
andl
or
mov
cmp
push
cli
divb
push
and
sbb
out
sbb
add
lret
mov
pop
jmp
mov
and
mov
fsubrl
lea
inc
push
inc
dec
add
and
outsl
imul
push
fmul
jmp
loopne
mov
push
aaa
or
mov
inc
rcll
adc
int
in
push
neg
int3
inc
sbb
pop
out
bound
fisubrl
sub
pop
cmp
incl
fidivrs
data16
or
push
mov
stc
push
mov
es
mov
add
lea
mov
outsl
lret
pop
cli
es
pop
imul
jmp
mov
xor
mov
hlt
add
xchg
cli
cld
xor
xlat
xor
xchg
sub
not
fadds
jmp
pop
pop
cld
adc
loopne
ss
decl
dec
adc
js
xchg
dec
cmp
sbb
mov
lods
das
dec
cmp
sub
xchg
push
insl
push
xchg
js
fwait
das
sbb
dec
jb
and
pop
test
loope
mov
mov
rolb
push
dec
fwait
cmp
jmp
pop
xchg
inc
sti
push
xor
mov
ss
cmp
loop
jp
ds
pop
sarb
mov
sub
and
cmp
hlt
sub
shl
imul
push
gs
pusha
aam
es
loope
or
xor
mov
test
enter
push
push
jge
repz
pop
sahf
pop
mov
loop
lock
xchg
notl
dec
divl
add
sub
ljmp
inc
sub
out
sbb
xchg
icebp
cmpb
pusha
mov
jge
push
lock
loop
mov
jmp
jmp
loope
addr16
or
out
xchg
mov
push
push
in
and
lahf
dec
stos
int3
adc
mov
push
push
adc
jmp
or
cmp
sbb
push
popf
fcmovnb
popa
mov
lcall
addb
cmp
jge
lret
in
dec
pop
pushf
pop
cmc
cmpsb
stos
lcall
xlat
mov
cmp
or
mov
je
add
add
iret
jge
lods
out
mov
in
jmp
mov
bound
enter
inc
mov
mov
repnz
jecxz
aam
or
jmp
in
loope
mov
mov
data16
repz
mov
sbb
outsl
xchg
pusha
jb
fildll
sbb
sbb
std
mov
cmp
jo
cmc
lods
mov
lea
adc
inc
mov
cmp
ss
pop
movaps
sti
call
add
and
jmp
cld
push
sbb
test
mov
subb
sti
and
adc
sbb
inc
and
lcall
xor
dec
jge
mov
inc
xchg
push
mov
xor
and
mov
addl
pop
push
push
or
out
push
sahf
pop
int3
sub
pusha
data16
add
push
dec
xchg
or
stos
fdivr
jle
lret
dec
xor
dec
push
xor
adc
push
mov
mov
mov
pop
outsb
mov
cmp
into
stos
jl
cmp
std
cwtl
xchg
inc
cmpl
int
mov
push
pop
jp
je
fsubrs
clc
and
adc
not
test
mov
insb
lcall
sbb
mov
mov
lods
pminub
dec
adc
cmp
rol
out
xchg
jno
inc
xchg
jne
push
out
and
add
sub
jge
add
loope
mov
flds
adc
jnp
cltd
pop
repz
cwtl
push
xor
push
incl
cmp
dec
push
insl
pop
add
sbb
sbb
out
imul
testb
push
icebp
jnp
adc
cmp
movsl
stos
mov
inc
insl
ss
dec
popa
push
test
js
push
fcompp
imul
jp
pop
repnz
lods
push
mov
into
cmp
add
sbb
test
roll
loopne
div
dec
out
into
pmullw
out
mov
bound
jl
pop
xchg
push
subl
in
movsl
mov
xchg
sub
lea
pushf
and
dec
jns
mov
call
mov
in
pop
mov
xchg
cld
pop
push
push
or
out
adc
mov
inc
cmp
popa
or
or
adc
mov
les
mov
sbb
or
dec
add
push
add
mov
mov
push
sub
xor
icebp
mov
stos
gs
cltd
das
cmp
mov
jl
inc
adc
jo
gs
sub
icebp
jmp
push
xor
scas
cmp
and
icebp
in
aad
or
adc
xchg
xor
and
sbb
jle
fcomip
orl
fimull
rorb
xlat
push
mov
popa
pop
cmp
or
mov
push
mov
ret
test
cwtl
stc
mov
xchg
pop
out
jmp
xchg
movsb
inc
sahf
mov
cmpsl
data16
cmp
sbb
lea
or
mov
test
add
pop
in
outsl
repnz
cmp
sbb
push
idivb
ljmp
add
enter
mov
and
mov
push
dec
insb
scas
mov
xchg
dec
ret
xchg
xor
jle
int
stos
jae
outsl
icebp
mov
das
mov
push
jns
pop
rclb
push
push
out
sbb
in
lods
or
sbb
imul
sbb
fsubl
sub
sbb
cli
mov
call
mov
fnstsw
pop
or
orl
cltd
or
out
mov
push
inc
and
lret
sbb
lds
jb
adc
arpl
jecxz
pop
cltd
lods
or
sub
das
scas
or
mov
push
mov
jb
shlb
sti
or
xchg
cltd
jge
mov
outsb
sub
adc
push
cmpsb
jg
cmc
push
jno
cs
xor
popa
and
sub
adc
push
push
stos
push
cmp
push
dec
xchg
ja
xchg
inc
xlat
xor
push
jae
loope
or
inc
cltd
pop
or
mov
stos
cld
xlat
outsl
dec
cmp
movsl
js
ret
insb
mov
push
sbb
addr16
psubsb
jb
jbe
dec
sub
daa
negb
mov
sub
rcrl
mov
push
ss
xor
loopne
lcall
xchg
mov
loop
fcoms
mov
mov
cmp
lret
cld
mov
xor
fdivr
jno
push
fwait
lahf
testb
xchg
test
pusha
std
sbb
xlat
imul
cmpsl
js
stos
sbb
mov
repnz
lods
sbb
test
xor
xchg
pop
inc
inc
les
push
jp
adc
andl
clc
dec
fsts
scas
addr16
jg
sub
push
repnz
cs
mov
cld
pop
cld
cs
and
dec
mov
lret
push
pusha
outsl
sbb
insl
adc
fsubrl
jge
lret
shl
test
push
fwait
xchg
xor
decb
add
int
out
cld
in
scas
and
test
sub
das
or
ss
mov
pop
lock
ret
cld
add
mov
outsb
lret
jnp
or
and
push
push
popa
push
fbstp
lea
pop
xchg
int
dec
cld
pop
out
or
enter
movsb
xor
push
sbb
jb
testb
dec
adc
pavgb
sub
sbb
out
and
xchg
jmp
adc
push
mov
mov
jmp
shlb
sub
scas
lret
lea
fwait
and
or
mov
test
mov
add
faddl
mov
xor
nop
mov
sub
pop
push
push
aas
cmpsl
or
add
push
dec
mov
pop
mov
adc
pop
repz
scas
sbb
rorl
or
jmp
mov
movsb
xchg
xchg
dec
inc
jl
and
sahf
pusha
mov
sub
test
mov
jno
arpl
push
mov
jp
movsl
sti
ja
push
lret
stos
mov
pop
cmpsb
jo
test
rclb
adc
and
pusha
insl
ret
cmp
cli
test
es
jae
push
test
cmpsl
ss
jns
repz
mov
lea
out
cmp
imul
in
daa
iret
push
sub
mov
sub
push
mov
sbb
outsb
shlb
insl
stos
data16
and
mov
push
pop
shlb
adc
fcoml
test
cs
icebp
or
xor
xchg
fbld
cmpsl
xor
jp
fldt
push
pop
imul
add
cmp
nop
insb
fisubrs
inc
shr
lods
sti
mov
xchg
in
int3
xor
cmpsb
sbb
pop
xor
mov
inc
cmp
fcomi
lea
fisubrl
sub
outsb
cld
pop
xor
sbb
ds
js
lcall
adc
pop
push
pop
repz
mov
push
scas
sub
call
enter
pop
or
aaa
imul
mov
mov
mov
addr16
inc
inc
pop
outsb
arpl
or
test
push
xor
and
sbb
adc
xor
fcomp
mov
icebp
mov
push
jbe
push
icebp
jns
stos
test
cs
out
cmp
inc
add
je
add
mov
mul
into
xchg
cmpsl
lea
inc
popf
fsubr
repz
ds
out
jge
pusha
mov
in
sub
pop
roll
and
push
jl
rolb
xor
fsubrs
lcall
shll
xchg
in
cmc
push
mov
jp
sbb
sub
xchg
push
popf
or
clc
je
test
mov
fsubr
out
test
jmp
xor
shlb
sub
inc
out
mov
add
mov
xor
idiv
lret
mov
sub
push
mov
mov
mov
out
sub
pop
adc
mov
loope
xchg
dec
mov
mov
xchg
dec
xchg
shll
dec
lea
ret
in
arpl
push
cmp
adc
loop
mov
test
mov
add
sub
movsl
jmp
popf
inc
out
add
cmp
aaa
cmp
call
xor
mov
fildl
stos
out
enter
or
cmc
push
sub
lods
cs
inc
aad
inc
add
fadds
test
cmp
mov
mov
jmp
fimull
pop
out
arpl
or
jmp
pop
mov
sahf
pop
ret
hlt
sbbl
lea
jge
xchg
fldz
mov
dec
adc
or
add
mov
lret
add
dec
jp
mov
or
inc
sti
xor
sbb
push
nop
addl
or
jge
pusha
mov
dec
cmp
pop
cmp
stos
mov
cwtl
imul
dec
and
pop
cmp
mov
lods
xchg
scas
mov
stos
push
clc
dec
or
mov
lea
cmp
jge
xchg
sahf
rcll
icebp
pop
rcll
imul
movsb
insl
fstps
test
rolb
das
sbb
cmp
or
and
mov
cli
mov
sbb
sub
mov
or
jl
jmp
mov
testb
ljmp
mov
adc
sbbl
cmp
jmp
mov
leave
sahf
lret
test
ljmp
sbb
or
lea
sbb
push
mov
popa
jns
xchg
or
iret
rclb
xchg
sbb
or
outsb
icebp
and
in
fs
cmp
aaa
and
das
adc
push
lock
push
int
xchg
cmp
dec
mov
popa
icebp
mov
jg
xor
bnd
sub
insb
idivb
test
pusha
push
testb
jl
push
cld
mov
das
dec
loope
and
or
or
mov
mov
jb
mov
mov
inc
push
inc
sub
inc
ljmp
dec
cmp
xor
fildl
sbb
adc
cmp
dec
aaa
and
lret
sbb
or
lret
push
inc
or
or
int
and
sbb
dec
ljmp
ljmp
dec
pushf
cmp
loopne
cwtl
or
lret
sbb
adc
mov
mov
sub
cwtl
or
leave
fmul
or
xchg
mov
lret
mov
sbb
lcall
xor
jbe
repnz
xchg
sub
lret
lret
cmp
cmp
pop
sbb
int3
cmp
ljmp
pop
sbb
dec
mov
ljmp
cmp
xor
repnz
stos
mov
sub
sbb
stc
je
xor
sbb
mov
stos
push
fstpt
sub
cmp
enter
mov
in
pop
cld
fprem
sbb
mov
cmp
arpl
cli
adc
pop
or
mov
fwait
sub
dec
repnz
sbb
or
or
pop
enter
sub
fidivl
enter
xor
or
data16
xor
enter
shrl
dec
cmp
mov
fwait
repnz
ret
mov
fidivl
cwtl
pop
mov
mov
sub
fmuls
jp
sub
sbb
mov
imul
pop
push
or
scas
jmp
mov
call
cwtl
sbb
mov
imul
sub
in
sub
cmp
sbb
sub
jb
or
or
mov
int3
call
cli
or
fdiv
out
js
hlt
mov
jp
cwtl
ret
pusha
sti
daa
dec
pop
lea
lods
cs
sub
stc
sahf
mov
stos
mov
cmpsb
sbb
rorb
cmp
loop
add
js
and
add
pop
and
dec
lea
inc
mov
push
and
mov
mov
sub
or
cmp
mov
in
lret
add
dec
and
adc
push
je
or
fisttpll
xchg
cmp
jge
loope
enter
mov
cmovae
movsl
outsl
push
stos
and
loopne
pushf
push
and
pop
xor
dec
stc
outsl
mov
lea
dec
xor
imull
popf
sub
cmp
lods
pop
push
sub
jp
sbb
sub
addr16
call
add
push
cld
pop
mov
xor
jae
sbb
out
outsb
mov
jbe
mov
push
sub
out
cmp
mov
mov
lea
add
and
cmpsb
test
popf
mov
pop
xlat
add
test
or
and
or
pop
jge
mov
inc
cmp
popa
cmp
enter
repnz
inc
jno
out
xorl
dec
jl
sti
push
es
cmp
dec
push
hlt
jp
repnz
push
sub
pop
sub
xchg
push
and
mov
sub
sbb
dec
bound
shll
or
in
push
adc
adc
dec
and
push
std
jmp
push
cld
inc
lds
je
push
pop
fbld
js
icebp
jmp
ljmp
mov
daa
rcr
xchg
pop
jns
aaa
sbb
out
and
sub
mov
shlb
and
mov
imull
dec
and
outsb
jmp
xor
mov
in
jmp
jecxz
daa
fdivs
insb
lret
in
mov
ljmp
or
xchg
outsb
push
jmp
inc
jne
stos
notb
cwtl
in
or
push
dec
das
hlt
insb
xchg
ds
or
scas
adc
bound
stos
mov
mov
hlt
mov
xchg
add
push
idivb
inc
and
out
push
push
pop
pusha
pusha
movsb
test
subb
into
add
sub
or
orl
mov
dec
fdivrl
mov
push
push
inc
stos
shll
cmp
dec
sub
scas
out
cld
cmp
and
sbb
leave
repnz
jge
stos
lret
data16
rorl
cld
or
push
push
sub
jnp
cmpsb
pop
cs
mov
mov
push
sub
mov
ds
add
movsb
mov
push
mov
ficoml
stos
mov
mov
mov
xchg
pushf
and
icebp
push
and
cmpsl
fnsave
adc
ret
lock
mov
mov
fidivl
jmp
shll
jge
sub
aas
or
mov
jne
inc
xor
lret
pop
ss
ficompl
call
rorb
jb
mov
push
clc
mov
jnp
fsubr
aad
dec
test
imul
xor
out
repnz
xor
es
or
mov
xor
push
add
fsubs
mov
dec
jge
xor
in
stos
out
dec
jl
into
pop
rorl
hlt
add
and
xchg
push
mov
in
mov
mov
int3
cmp
sub
cmpsb
ffreep
inc
sbbl
imul
add
adc
xor
jp
filds
test
stos
subb
leave
or
xor
sbb
mov
xor
inc
mov
lret
mov
xor
sub
sub
testb
jecxz
movsb
add
dec
push
cmc
mov
pop
jl
data16
sbb
push
sub
outsb
mov
and
mov
mov
out
out
ljmp
mov
scas
movsb
dec
lcall
or
fbstp
mov
dec
mov
cld
cmp
stos
push
jb
push
pop
popa
or
iret
pop
daa
jle
adc
sub
jp
inc
mull
fisubl
sbb
cli
cld
sub
iret
mov
stc
inc
pop
fchs
das
lea
lock
add
xlat
in
and
repnz
outsb
pop
cmp
sbb
mov
push
sbb
mov
out
add
dec
xchg
or
mov
jns
rolb
sbb
jne
out
js
sahf
fnstenv
mov
pop
es
inc
pop
and
push
xcrypt-ctr
cmpsl
pop
stos
or
das
lea
rclb
jno
pop
stc
scas
inc
fidivrs
mov
shrd
loop
lods
es
pop
fidivl
andb
and
stc
test
lods
std
push
inc
and
dec
or
xchg
rcrb
fistps
mov
test
aas
jbe
push
sbb
jmp
push
cli
lahf
es
xor
mull
pop
test
jmp
mov
ret
dec
stos
mov
loop
mov
add
jns
lea
sbb
mov
cltd
cmpsl
aaa
mov
in
jmp
add
pop
lcall
sub
out
sub
scas
pop
arpl
stos
stos
lea
cmpb
dec
popa
pop
fisttpl
scas
int
jp
dec
cltd
das
movsl
add
repnz
shrl
sbb
inc
arpl
add
out
mov
mov
ljmp
jp
add
cmp
das
popa
sbb
ljmp
popa
shll
pop
or
mov
movsl
adc
andl
pop
lret
mov
xor
movsb
jo
dec
mov
jge
dec
cmp
dec
sub
jns
lret
pop
push
out
jae
sbbb
loop
icebp
add
jnp
lds
bound
mov
pushf
cmp
lods
into
lea
sub
addl
out
adc
xor
lds
mov
pushl
out
cwtl
jle
mov
jb
cli
xchg
ss
lds
xchg
fdiv
xchg
dec
nop
sbb
icebp
stc
lods
sub
loop
mov
repz
jp
loop
mov
mov
push
jo
fiaddl
mov
push
or
jbe
fistpll
push
dec
jne
push
xchg
test
pop
out
nop
lret
cmc
cli
mov
mov
insb
and
cmp
sti
xchg
dec
fstpt
inc
dec
outsl
int
push
cmp
sub
std
sbb
pop
or
jno
sbb
add
xor
pusha
xchg
lret
jae
jecxz
lea
push
lea
pop
mov
mov
sbb
movsb
and
mov
or
rcll
jp
pop
push
adc
dec
repnz
jns
mov
ljmp
lea
push
stos
push
push
js
les
rcrl
lods
loope
xchg
push
stos
mov
add
jecxz
std
or
jp
add
das
daa
xchg
sub
sub
sub
cmp
or
stos
rcr
or
mov
data16
lock
xorb
subl
clc
mov
jo
push
test
cmp
and
nop
int3
scas
jge
sub
pop
mov
or
out
cmp
mov
stos
sbb
fisttps
ret
xor
ret
rcr
push
addr16
int3
stos
hlt
cmp
sbb
adc
insb
xchg
loopne
fnsave
dec
mov
addr16
xchg
sub
or
icebp
push
loopne
inc
sub
or
jo
sahf
gs
mov
imul
add
inc
daa
sub
lret
outsl
ret
and
dec
mov
lock
in
in
insb
imul
negb
sub
mov
jne
sub
test
out
adc
testb
lea
popf
push
or
pop
inc
dec
fadd
mov
cmpsb
test
push
xor
inc
xchg
out
or
sub
jbe
cmp
lds
sub
mov
mov
shlb
adc
xchg
test
or
ds
daa
iret
mov
mov
lock
or
fildll
push
jo
dec
ret
jp
xor
rep
fs
mov
lcall
in
dec
test
inc
test
mov
mov
test
stos
pxor
xlat
out
adc
pop
sbb
loop
popf
cmp
xchg
jae
push
popl
xchg
mov
imul
outsl
cs
sub
loop
mov
popa
push
pop
push
sub
cmp
inc
or
jp
leave
lock
scas
sub
mov
fidivs
out
addb
sub
xor
adc
sub
pop
stc
enter
or
mov
xor
dec
add
sub
inc
mov
xchg
sub
push
xchg
das
pop
sub
mov
push
sub
daa
das
and
stc
inc
xchg
popf
daa
push
mov
mov
stos
nop
xor
and
mov
ret
outsl
adc
jmp
xchg
fs
scas
test
pop
push
xor
mov
push
rcll
mov
jg
push
cmp
aas
inc
xor
pop
cli
lock
jg
call
jae
lock
lahf
xchg
pop
es
pop
jle
cwtl
pop
xor
mov
jge
aaa
jnp
cmp
jg
movsb
mov
push
jge
jns
and
out
mov
mov
negb
inc
sahf
stos
push
notl
adc
mov
mov
sub
sbb
nop
fdivrs
bound
add
or
iret
scas
arpl
dec
cld
sbb
xor
std
ss
sbb
jmp
add
fnstsw
arpl
sbb
insl
cmp
add
mov
cmpsl
cmc
out
mov
in
mov
cmp
fnstcw
xlat
ljmp
fildll
out
fwait
inc
mov
add
dec
pop
jecxz
xor
xor
ss
sub
lods
xchg
repnz
clc
xchg
sub
insl
add
jecxz
add
fdivr
lock
outsl
jmp
dec
fiadds
cmpsb
ret
add
and
mov
add
cli
pop
push
cmp
sbb
dec
mov
sub
push
cmp
and
mov
xor
pop
xor
inc
sub
and
js
lea
call
cli
xchg
pop
lds
add
iret
pop
mov
lcall
sti
popa
or
inc
pop
cmp
bound
dec
lea
or
xchg
test
repnz
out
fistpl
add
hlt
jne
lret
bound
push
dec
cmp
mov
mov
lcall
test
fisttpll
les
jge
sbb
imul
call
es
test
xor
or
dec
dec
cltd
and
bnd
xchg
sarb
hlt
ror
std
jnp
sub
sub
cwtl
in
inc
hlt
jle
push
pxor
cmp
andl
inc
mov
fists
orl
dec
clc
add
push
inc
lea
leave
repnz
insl
pop
cmpsl
sub
scas
or
dec
fdiv
out
stos
sub
push
and
cld
movb
sub
std
adc
jg
pop
mov
or
add
cwtl
lock
dec
push
scas
adc
mov
mov
mov
insb
mov
mov
jg
xchg
xor
jae
xor
bound
cmp
push
call
rcrl
in
xchg
lock
sub
xchg
cwtl
sti
stos
rclb
xchg
ret
mov
imul
xor
fwait
xchg
sarb
ret
in
push
jne
sbb
xlat
call
mov
mov
mov
mov
cld
xchg
shlb
stos
out
lcall
add
std
push
lock
setge
adc
sub
pop
daa
fs
cwtl
dec
ds
xchg
clc
sub
pop
jmp
popf
mov
mov
insl
loop
cs
push
repz
mov
lret
test
cmp
cmp
imul
jg
mov
push
cmpsb
cmp
les
arpl
xchg
or
outsb
dec
pop
repnz
xor
inc
movsb
jb
stos
jecxz
pop
cmp
jecxz
cwtl
mov
les
testb
or
cwtl
jge
push
cld
and
adc
or
into
fsubr
or
add
xor
dec
dec
adc
sub
push
xchg
jp
movsl
mov
pusha
mull
lea
inc
lcall
out
cmp
push
sub
xor
xchg
pop
std
xchg
int
sub
stc
addr16
add
push
cmp
mov
push
test
jmp
out
stos
push
cli
xchg
in
pop
xor
mov
sub
rsqrtps
and
or
ljmp
cltd
fcomps
pop
or
inc
xchg
add
mov
gs
sbb
cli
jge
mov
mov
cmp
push
xchg
rcr
pusha
adc
enter
or
push
adc
xchg
sub
push
push
ret
out
dec
cmp
jb
fsts
pop
mov
xor
test
mov
fnsave
jg
cwtl
sub
xor
cld
push
iret
jnp
xor
mov
aaa
clc
xor
xchg
icebp
sub
dec
add
jno
push
xlat
test
lcall
add
and
lcall
sbb
push
sbb
xchg
adc
jne
sub
push
sub
pop
push
test
mov
push
add
xchg
dec
lret
mov
jnp
mov
pop
mov
hlt
cli
les
stos
push
pop
push
pop
mov
dec
adc
xrelease
xor
jne
leave
cmp
and
pop
push
sbb
or
mov
into
fcoml
iret
bound
adc
fisttpll
jmp
inc
cs
mov
or
les
push
jmp
sub
scas
ret
inc
insl
pop
or
sahf
xor
movsb
addr16
repnz
sbb
xor
out
jecxz
or
movsl
add
cltd
sbb
rcrb
mov
mov
nop
lds
sbb
cs
stos
mov
pop
push
nop
xchg
jno
push
mov
ds
cmc
sub
and
inc
repnz
mov
mov
jbe
jmp
sub
std
out
ljmp
orl
scas
pop
cmc
jp
mov
mov
stos
inc
jns
aaa
imul
mov
out
in
sbb
enter
mov
push
jne
repnz
push
push
test
js
stc
fs
adc
and
dec
dec
jmp
adc
mov
fcompl
lret
ret
xchg
dec
mov
inc
insl
dec
scas
xorb
aad
or
sub
dec
xchg
bound
js
stos
mov
jp
cmp
cmp
movsl
lea
adc
mov
fsubrs
or
test
cs
xor
mov
fildll
pop
or
ss
ja
fmull
insb
out
cltd
mov
les
dec
cmp
popa
or
mov
mov
cli
adc
cs
cld
mov
push
test
dec
lret
pop
pop
test
stos
daa
repz
rorl
icebp
scas
loope
push
popf
mov
hlt
sub
aad
paddw
mov
push
or
push
hlt
daa
repnz
in
pop
ret
and
into
lds
mov
fidivs
cmp
lret
push
xor
cmp
es
mov
xchg
jne
sar
xchg
or
addr16
aad
in
pop
mov
stos
ret
das
mov
mov
mov
es
push
cmp
imul
jo
mov
je
pop
das
pop
inc
jo
lahf
push
push
pop
dec
dec
imul
push
in
push
jno
lcall
cwtl
sub
inc
and
cs
clc
mov
cmp
push
jo
test
hlt
lea
jl
sbb
movsl
repz
std
adc
test
imul
sub
icebp
pop
mov
jle
lret
data16
sub
dec
pop
jmp
test
xlat
enter
inc
lea
pop
xchg
sti
dec
xchg
lods
and
nop
jb
leave
gs
xlat
xor
xor
callw
xlat
add
mov
jno
in
mov
insb
pop
xor
xor
inc
hlt
pop
or
jnp
cli
bnd
fists
sbb
pop
xor
sbb
test
mov
insb
aas
mov
loope
or
and
or
cmpsb
jmp
shrl
jp
adc
lods
movzbl
das
out
int
push
mov
xor
insb
dec
aaa
pop
adc
lods
pop
sub
arpl
arpl
loope
jp
push
sub
xchg
jl
pavgb
fs
xchg
add
stos
fs
xchg
dec
sbb
iret
int
mov
fs
push
jge
dec
jns
fcompl
repnz
sbb
sub
fldl
insb
andl
int
or
xchg
mov
jb
ret
dec
aad
jge
das
jno
mov
pop
in
xor
pop
mov
pop
mov
repnz
mov
shufps
mov
mov
push
sbb
xchg
rorb
int
lahf
gs
inc
cmp
fdivp
pop
mov
sub
xor
mov
in
inc
dec
push
jmp
xor
inc
or
adc
xor
dec
insb
jnp
push
add
xlat
psubq
xchg
mov
sub
out
stos
pop
filds
enter
push
sti
fneni(8087
fistpll
xorb
push
fimull
es
jb
dec
je
push
xlat
dec
mov
xchg
mov
xlat
dec
xor
cmpsb
std
test
add
out
xor
mov
pusha
insl
jmp
xor
adc
and
and
lret
push
inc
add
fmull
rorl
jecxz
icebp
test
js
xorb
out
or
shrl
stc
mov
sub
rep
or
les
xor
lret
outsb
xlat
inc
push
mov
mov
jnp
fcomps
sub
push
push
lcall
jo
into
clc
adc
jmp
dec
shll
jbe
mov
mov
inc
push
cmc
sub
aad
xor
push
push
cmp
xchg
mov
and
mov
data16
mov
adc
mov
push
gs
dec
push
cmp
and
imul
adc
mov
daa
xor
mov
dec
into
sti
fists
push
xchg
jecxz
inc
stos
icebp
or
in
jge
or
push
arpl
cmp
or
add
in
testl
add
dec
sbbb
pop
xchg
cmc
adc
push
and
cmp
mov
inc
dec
lds
mov
popa
xchg
mov
lahf
adc
and
sub
in
xchg
jne
in
jecxz
cmpsl
stos
pop
adc
cmovae
cmp
push
outsb
sub
jle
mov
mov
jb
sbb
lret
pop
and
sbb
mov
push
jae
in
ret
cmc
jns
or
adc
daa
push
push
daa
std
sub
jmp
in
inc
fdivrs
push
or
inc
push
aas
aas
pusha
mov
inc
lea
aad
andl
push
push
or
outsl
cmp
xchg
jns
push
or
pop
out
inc
pushf
adcb
stos
cmp
lea
rcl
lds
mov
jne
push
popf
lock
sub
aas
js
sbbl
das
cmc
call
test
jno
dec
mov
jne
mov
lret
dec
mov
mov
mov
daa
dec
cltd
xor
loope
out
mov
xor
jmp
adc
pop
and
adc
mov
adc
and
repnz
cs
sub
stos
xchg
int3
cwtl
int
pushf
jnp
inc
xor
jecxz
loopne
mov
pop
nop
fdivr
movsb
stos
cmp
leave
mov
sbb
popa
mov
push
in
sti
push
cmp
xchg
enter
hlt
xor
and
cmpsb
gs
out
fmul
jnp
or
pop
jge
xchg
mov
jg
sahf
pop
mov
pop
and
pop
cmp
subl
xor
xchg
jg
fisttpl
out
pop
icebp
mov
and
adc
stc
adc
dec
adc
or
jnp
fwait
vextracti32x4
mov
sub
mov
test
scas
cmc
jmp
mov
imul
lock
sbb
dec
fdivrl
sar
test
lock
inc
std
aaa
sub
xor
sub
mov
mov
mov
leave
testb
or
out
movsl
punpckhbw
mov
in
test
xchg
or
or
int3
pop
jae
ds
xchg
jl
ds
mov
dec
lock
pop
fstpt
push
lock
mov
ljmp
xchg
adc
fldenv
adc
enter
sbb
stc
cmpb
add
mov
adc
mov
fs
test
push
mov
inc
aas
in
test
sbb
jbe
mov
sbb
pop
divb
add
sub
jno
cs
inc
loop
add
pop
into
adc
in
jmp
jl
rcrb
cmp
jmp
and
mov
test
adc
stos
xlat
push
outsb
or
test
outsl
lret
rcll
pop
adc
cmp
add
push
and
cs
push
push
or
movsb
xchg
cmc
rcrb
hlt
loop
enter
dec
sbb
xor
xor
popa
in
inc
into
sahf
loopne
stos
stos
pop
inc
ds
sub
or
int
sub
pop
xchg
mov
or
sub
inc
cld
sti
xlat
jne
js
popf
aaa
xchg
lret
fcomi
xlat
jno
in
mov
dec
inc
ss
jmp
dec
sbb
ret
or
sub
mov
daa
add
jnp
ret
rcll
dec
clc
out
dec
push
sti
out
push
pop
call
int
addr16
cltd
sub
popa
call
adc
mov
das
scas
inc
jns
sub
into
dec
sub
stc
mov
out
lock
cmp
mov
in
cwtl
data16
in
mov
std
ljmp
mov
lods
sub
std
or
shrl
mov
or
xor
pop
dec
cmc
xor
enter
pop
dec
xchg
lea
popf
gs
or
mov
dec
ret
jae
mov
int
push
push
sub
das
lcall
mov
sub
xchg
adc
mov
cmpsl
mov
push
mov
jge
fisubl
xchg
or
lcall
cmp
sbb
in
push
jp
das
gs
out
or
add
in
cmp
aas
mov
loop
repnz
int3
into
mov
pop
stos
idivl
pop
jmp
or
push
stos
jecxz
pop
mov
sti
xor
lret
mov
xor
loopne
fistps
dec
stos
inc
and
iret
push
sub
rolb
ret
push
or
out
cmpsb
jae
ds
mov
ss
das
pop
icebp
daa
movsb
scas
push
sbb
adc
cmp
stos
mov
ss
mov
movsl
in
mov
sub
repz
movsl
testb
in
clc
adc
out
inc
dec
stos
mov
mov
pusha
into
pop
stos
mov
insb
jb
ffree
mov
outsb
sub
arpl
adc
mov
or
fimull
mov
inc
decl
mov
mov
nop
adc
or
insl
add
cmpsb
mov
mov
jecxz
xchg
mov
mov
lds
outsb
mov
std
sub
mov
sub
lahf
inc
setle
or
cmp
or
adc
ds
dec
jno
testb
mov
lret
fsubl
sub
xchg
in
aad
int
ret
lahf
cmp
adc
dec
imul
das
ds
pop
adc
dec
push
sahf
stos
mov
imul
in
jl
ss
add
loopne
aas
xchg
sub
inc
fistpll
inc
push
cwtl
out
ficoml
xor
jecxz
jae
test
pushf
sahf
enter
push
sub
std
loop
sub
or
cmpsl
sub
mov
lods
sub
cwtl
jne
dec
lcall
in
outsl
int3
or
sbb
sub
cmpsb
sub
xchg
cmp
fisttpl
add
test
cld
std
fsubp
pop
int
in
aaa
subb
pop
cltd
pop
test
mov
add
mov
sarb
mov
enter
clc
pop
adc
ljmp
xor
aas
fsubrl
cmp
pushf
mov
subl
inc
and
dec
or
or
lods
test
cmp
mov
jmp
popf
hlt
jae
and
lock
xor
repz
inc
imul
push
movsl
and
stc
leave
movntq
pop
mov
sbb
and
inc
mov
js
cs
std
fsubs
and
lock
jno
popf
xchg
fdivrl
jge
jg
out
insl
fcomps
cmp
sub
mov
adc
pop
push
adcb
sti
test
dec
and
cmp
cwtl
xchg
adc
mov
xor
cmp
xor
dec
iret
lea
or
xchg
out
dec
cmpsb
stos
and
push
shr
subps
push
xchg
add
cmp
dec
sti
sti
stos
mov
sub
mov
sub
in
out
xlat
and
dec
xchg
and
mov
mov
sub
in
inc
outsb
push
dec
out
xchg
cmp
xchg
or
push
add
cmp
in
mov
sub
fcmovnu
and
jge
or
sub
bound
cmpsl
das
lea
cltd
adc
cmp
or
popf
lock
xor
outsb
ja
push
sbb
xor
or
push
cmp
add
lods
inc
pop
cli
scas
int
rorl
and
and
inc
sub
fwait
outsb
and
or
mov
pop
lret
stos
sti
add
and
cld
stos
ljmp
or
ljmp
ret
stos
push
fisttpl
fwait
sbb
mov
fimuls
test
lret
sub
hlt
lcall
or
mov
or
xor
push
sbb
jmp
inc
ljmp
mov
push
ljmp
sub
cmp
sarb
lock
in
mov
or
or
sar
stos
jp
mov
mov
pop
lock
cmp
or
clc
mov
dec
xor
loop
inc
xchg
sbb
lret
cmp
les
mov
sbb
or
pop
mov
xor
in
push
mov
cmp
hlt
fisubrl
pop
cmp
sbb
mov
lret
mov
jns
stos
mov
jmp
clc
enter
dec
push
mov
enter
sub
ret
lcall
mov
jnp
fwait
xor
or
mov
ljmp
out
cmp
dec
aas
mov
clc
or
push
iret
mov
mov
lret
decl
cltd
lret
dec
imul
pop
or
adc
cmpsl
imul
mov
xor
cmpsb
xor
push
or
dec
or
xchg
jmp
imul
fdivs
sbb
cmp
or
push
jmp
pop
mov
pop
push
push
stos
andb
xchg
sub
add
stos
jbe
ds
or
jne
cld
dec
lock
jle
lea
fdivrs
insb
ljmp
punpckhdq
cmpsb
mov
ljmp
gs
mov
push
mov
cmp
dec
xlat
add
xchg
in
push
xchg
loop
push
lea
out
insl
mov
out
xor
jne
loope
je
adc
xlat
pusha
jb
sbb
mov
in
push
jge
lea
mov
jmp
sbb
rorl
and
push
cmpsl
mov
ljmp
or
sub
adc
ss
push
lods
xchg
dec
lods
fmul
cwtl
sub
nop
popa
call
mov
mov
pop
jmp
inc
jmp
sar
sbb
cs
cmc
mov
pop
lock
jo
jbe
test
adcl
xlat
pop
xorl
sti
or
cs
add
adc
and
sub
mov
int
xchg
les
stos
mov
fcomps
mov
adc
or
pop
shll
pop
sub
pop
inc
and
in
xchg
inc
insb
cmp
cld
xchg
sub
add
out
mov
push
rcrl
shr
es
negl
xchg
js
fmull
cld
mov
cmp
cmp
testl
popa
mov
mov
outsl
push
inc
orb
jns
mulb
lds
mov
lret
and
xchg
xchg
scas
imul
xchg
fnstsw
jns
sahf
in
call
mov
mov
bound
adc
movsb
in
mov
jmp
dec
jecxz
mov
sbb
mov
das
jecxz
ds
adcb
cmp
repz
jle
cmp
pop
ret
test
sub
mov
and
mov
jmp
cld
push
outsb
mov
scas
in
cmp
dec
dec
lods
pop
cltd
push
lds
popa
xchg
jbe
jge
aaa
cmp
mov
lea
adc
dec
add
and
push
stos
pop
xchg
ret
cmp
dec
gs
sbb
add
stos
push
mov
inc
xor
mov
insl
xchg
test
cmpsb
and
orb
xchg
dec
sarb
popf
js
popa
mov
dec
addr16
mov
xor
xor
pop
sub
xor
std
adc
fidivrs
jae
les
push
mov
movsb
mov
jns
inc
mov
test
xor
pop
ljmp
loop
mov
cmp
std
and
daa
stos
mov
jnp
cmp
pop
popa
jno
push
xchg
push
xor
or
adc
pop
jecxz
push
jge
xor
jmp
adc
je
dec
daa
pop
in
pop
adc
sub
mov
and
jbe
lret
ret
repnz
repnz
sbb
dec
and
jo
pushl
mov
movsb
ljmp
movsb
rcl
or
adc
push
scas
scas
mov
sub
or
aas
jbe
mov
fdivrl
rcrl
pop
pop
icebp
gs
ja
aam
sub
dec
pop
mov
pop
xchg
mov
sti
insl
addr16
sbb
out
push
fistpl
add
mov
aaa
mov
xchg
cmp
fcoms
pop
mov
es
arpl
repnz
ss
and
inc
jns
shll
jnp
xchg
mov
ljmp
test
pop
dec
or
push
outsb
sbb
icebp
aas
cli
cs
or
mov
cltd
adc
jmp
addl
xchg
in
cmpsl
jecxz
sbb
notl
stos
pop
xor
aaa
test
ret
mov
mov
sub
jl
std
jno
mov
dec
notl
ljmp
test
sti
lret
xor
mov
fmulp
jnp
add
nop
stc
cmpsl
add
lods
xor
popa
cmpsb
enter
insb
stos
test
xchg
mov
movsl
sbb
pusha
fdivl
xor
dec
and
cmc
mov
push
dec
dec
add
sbb
loopne
lcall
cmpsb
or
add
push
lea
jns,pt
std
sbb
mov
push
mov
adc
pop
cwtl
sub
icebp
dec
in
mov
lret
lret
jno
and
cmp
mov
loop
jne
mov
test
sub
mov
fildll
dec
mov
cwtl
pop
cmp
ljmp
cmp
mov
push
push
adc
movsl
jp
pop
cwtl
in
sti
arpl
loop
jg
fcomi
cmp
or
jl
push
jp
decl
lea
push
idivl
add
pop
cmp
xor
cmp
mov
les
dec
stos
ss
decl
bound
push
add
test
mov
push
mov
fsts
inc
mov
jo
in
stos
in
pop
es
iret
xchg
dec
out
pushf
mov
fsubrs
cmp
push
inc
mov
sub
sub
cld
mov
lret
jne
in
cmp
mov
lods
jecxz,pn
sbbl
call
jo
addr16
sbb
sbb
call
lcall
jecxz
add
sbb
loope
scas
pop
aad
xchg
in
pop
push
loop
cs
repnz
mov
cmp
mov
xchg
imul
push
fdivl
mov
fcompl
sti
mov
cltd
ficoml
mov
mov
repnz
cmp
push
test
jne
hlt
fsubs
ljmp
pop
icebp
arpl
stos
cmpsb
popf
sbb
dec
sub
sbb
cld
call
icebp
dec
inc
mov
loopne
adc
sbb
shrl
shr
in
pop
cmp
cmp
or
sub
xchg
or
xchg
mov
cs
popa
dec
pusha
pop
mov
out
insb
sub
sub
push
sti
adc
inc
jmp
in
pop
imul
popa
ljmp
stos
leave
pusha
pop
lret
sahf
and
outsl
in
cmp
pop
mov
or
mov
dec
roll
ljmp
lea
mov
out
arpl
in
sbb
add
jp
sbb
roll
jno
add
daa
es
mov
repnz
loope
xor
pop
dec
xor
movsb
sti
pushf
mov
cmpsb
xchg
mov
cmc
sbb
pop
mov
sub
pop
xchg
repnz
imul
cltd
xchg
cmp
enter
xor
fwait
cltd
add
sbb
nop
pop
mov
mov
int
xchg
mov
call
jcxz
jecxz
pop
dec
cmpsb
test
push
scas
adc
cli
mov
add
jne
add
outsb
mov
sbb
stos
out
daa
jmp
mov
lock
repnz
xchg
imul
sbb
out
xchg
das
sub
mov
es
push
dec
jnp
sub
add
out
add
pusha
sub
stos
ljmp
or
fbld
sub
push
notl
insl
test
dec
jno
push
mov
lcall
xor
pop
mov
dec
imul
mov
adc
call
fsub
push
mull
nop
leave
cmp
loopne
inc
or
fimull
pop
adc
fsubrl
lea
lea
cmpsb
out
push
sahf
pop
scas
stos
or
shlb
lcall
aam
push
scas
mov
movsb
es
cli
xor
das
xor
cmp
xchg
mov
mov
pop
int3
inc
ljmp
in
pop
inc
xor
test
jge
aas
je
fsubrs
aad
xchg
pop
pop
jno
inc
mov
or
fs
ret
ja
xchg
stos
pusha
push
lea
sti
pop
adc
sub
orb
outsl
push
imul
insl
daa
cmp
jmp
mov
leave
dec
xchg
push
sub
push
push
push
push
mov
int
jge
mov
rorb
push
adc
push
cmpsb
je
pop
imul
jle
pushf
mov
push
scas
dec
mov
and
add
enter
sbb
xchg
adc
test
ret
mov
aad
ss
mov
cmp
jmp
add
in
in
or
movb
sub
push
shl
push
scas
sti
lods
jp
mov
jg
or
ja
sahf
stos
orb
movsb
xchg
xchg
pop
sahf
xor
and
pop
in
test
add
jp
push
jb
out
adc
jmp
adc
pusha
int
imul
leave
xlat
mov
xchg
in
out
mov
or
and
and
sbb
test
shlb
jg
push
js
les
pusha
cmp
adc
jmp
push
push
std
punpckhdq
xchg
dec
or
jns
leave
mov
add
cmp
cltd
pop
imul
pusha
dec
sbb
arpl
push
repnz
pop
jle
cltd
push
mov
sahf
or
fsubl
lcall
jle
inc
sbb
arpl
repz
scas
push
dec
mov
adc
mov
fldl
sub
sahf
mov
add
mov
imul
sub
bound
in
dec
int3
sbb
push
les
sub
cld
jl
sbb
or
clc
mov
pusha
cmp
push
push
and
push
or
ja
pop
fists
fsubs
jae
xchg
adc
lahf
lcall
jmp
enter
sub
pushf
in
leave
mov
dec
push
add
movsl
outsb
mov
popa
sub
jne
and
add
pop
stos
mov
sbb
and
sbb
sub
mov
pop
xchg
ret
daa
fdiv
xor
cmp
inc
ret
fidivs
aaa
jnp
js
cmc
iret
sar
push
lea
imul
cmp
cmp
sub
mov
pop
cmp
dec
lds
sti
ss
loope
enter
sbb
sub
sub
jo
mov
xchg
sahf
nop
push
mov
adc
lea
mov
or
loopne
mov
decb
ljmp
add
lods
xor
push
sub
div
outsb
dec
mov
enter
mov
std
movsl
repz
stos
mov
fdivrs
add
insl
adc
dec
in
mov
or
mov
mov
cld
xchg
and
daa
movsb
int3
mov
inc
bound
popa
cmc
test
ljmp
mov
inc
es
or
adc
aas
push
imul
les
dec
fnstsw
data16
in
mov
pop
mov
fstpt
push
mov
stc
outsb
mov
hlt
push
cld
pop
and
mov
dec
in
pop
icebp
dec
xchg
cltd
xchg
adc
icebp
int3
xchg
jo
repnz
push
xchg
out
sarl
push
repnz
fldenv
adc
aas
aaa
cmpsb
xchg
pop
pop
sbb
mov
mov
mov
cwtl
push
sbb
push
lods
pop
jns
or
cs
shl
aaa
xor
mul
sub
mov
stos
test
lret
and
pop
sbb
pop
lea
cmp
sub
loop
push
sbb
les
xorb
sbb
cmpsb
jbe
mov
rolb
pop
movsb
or
subl
pop
dec
xor
add
pop
mov
mov
insb
or
sub
and
jge
mov
notrack
inc
aas
vucomisd
mov
lcall
pushf
out
aas
repnz
lcall
fbstp
jnp
dec
movsl
stos
cmp
es
enter
sbb
roll
fdivs
std
jmp
in
pushf
or
xlat
lretw
loop
xor
push
mov
push
popa
stos
jmp
jne
jle
into
lret
gs
loop
sbb
ljmp
insl
fmull
lds
out
sbb
sub
dec
mov
mov
data16
mov
pop
fisubs
push
sub
setb
insl
into
lea
fdiv
aad
out
insb
jmp
and
mov
repz
cld
or
sub
sub
add
ljmp
pop
inc
aas
cmpsl
push
pop
mov
test
jp
push
je
push
cmc
adc
jbe
and
mov
shrl
adc
cmp
push
jnp
xchg
sub
jmp
jg
popa
mov
adc
test
iret
inc
adc
xor
mov
testb
repnz
int
jmp
sbb
std
mov
lcall
push
cmpl
mov
cmp
mov
out
or
add
push
xor
jns
iret
lcall
cltd
sub
lock
adc
mov
in
mov
add
jb
test
out
fwait
sbb
jp
rorb
repnz
cmp
popa
sbb
fnstcw
add
mov
lret
sahf
push
mov
mov
xor
fxam
imulb
test
add
ljmp
pusha
dec
es
mov
xchg
mov
jo
and
mov
mov
imul
jge
les
jae
sti
push
arpl
inc
sub
mov
mov
push
pop
push
mov
test
xlat
sbb
jns
xchg
cmp
ljmp
stos
pop
jle
cmp
xor
dec
shll
adc
push
dec
push
pop
call
lea
fsubrs
mov
imul
std
and
ja
lret
push
pop
sar
push
stos
div
popa
cmc
fs
add
daa
sbb
rol
enter
dec
jge
jnp
lcall
stos
loope
jne
xchg
scas
paddw
jbe
or
out
ljmp
inc
adc
cmp
inc
lea
mov
movsl
pop
or
or
dec
pop
in
mov
or
stc
ljmp
shlb
mov
lret
fs
jl
out
adc
sti
jge
mov
jg
mov
les
repz
push
shl
sti
enter
sbb
sub
pushw
sub
dec
daa
xchg
inc
add
jp
ljmp
mov
inc
cmp
pop
stc
inc
jecxz
bt
xor
enter
sub
sub
iret
mov
lret
decb
sub
xchg
ret
lcall
sub
shl
or
adc
sbb
push
stos
ljmp
fldl
sub
cmp
mov
cmp
mov
movsb
cmp
cwtl
cmp
stc
rcrb
mov
mov
jns
fwait
pop
repnz
out
jp
out
fdivrs
jmp
pusha
or
jmp
out
sti
jns
outsl
jge
lcall
sub
pop
ljmp
das
mov
mov
push
clc
mov
jbe
mov
sbb
cmp
lret
ljmp
repnz
out
imul
mov
call
dec
sub
mov
stos
pop
js
cmp
lcall
push
jnp
mov
call
cltd
test
or
out
cmp
shrb
sub
mov
sbb
pop
jbe
xor
ljmp
mov
mov
mov
cltd
scas
or
lods
packssdw
ret
iret
push
push
sti
mov
or
mov
sbb
imul
fcomi
scas
mov
mov
lret
or
aaa
pusha
lcall
into
dec
pop
cmp
push
jb
aas
cwtl
mov
jmp
js
cmp
stc
sub
fnstenv
or
cmp
sbb
fxch
or
test
imul
stos
sbb
ljmp
clc
test
cmp
arpl
and
jle
shrb
cvtpi2ps
add
adc
mov
sub
outsl
stos
jb
or
jmp
lahf
jns
xlat
movsb
dec
inc
sub
and
jge
aad
mov
cmpsl
jge
push
sub
jbe
pusha
inc
lea
imul
or
out
sub
push
xchg
mov
mov
or
mov
movsl
int3
cmc
xchg
push
shl
in
aas
cmpsb
mov
or
cmpl
mov
mov
xchg
movsl
lea
pop
sub
push
nop
or
cmp
stos
add
or
sbb
mov
ljmp
inc
mov
adc
or
sbb
jl
in
mull
loope
enter
inc
testl
mov
adc
jns
xor
pop
aas
xchg
enter
xchg
adc
orb
or
sbb
cli
push
xchg
clc
pop
call
add
mov
insl
fs
mov
adc
gs
add
jg
mov
ljmp
jns
jmp
or
push
add
dec
xchg
jae
addb
inc
sbb
xchg
test
sub
cld
fwait
sbb
jge
sub
lahf
mov
lcall
sub
mov
lcall
test
jp
cmp
sub
icebp
mov
adc
lea
inc
rorb
inc
mov
mov
test
popa
sbb
out
out
insl
dec
lea
sub
cld
push
xchg
and
and
jno
xorb
mov
into
int3
lcall
ljmp
jecxz
xchg
add
mov
cmp
fdivrl
fcomps
fstps
push
es
jmp
fcom
and
jo
cmpsl
fiaddl
pop
aas
push
into
and
imul
mov
scas
mov
or
out
ds
rcll
xchg
sub
sub
cld
jno
cld
enter
stos
sahf
fxch
mov
fistl
dec
es
sub
call
test
and
les
sub
stos
dec
sbb
jle
hlt
sahf
xchg
stos
jge
stos
test
xchg
jnp
inc
mov
mov
pushf
mov
outsb
dec
dec
sub
int
jnp
cmpsl
das
cli
enter
jmp
nop
rclb
mov
in
xor
sub
test
xor
sub
sub
xchg
jbe
pop
mov
fbstp
or
sub
hlt
fld
and
add
popa
xor
icebp
popa
pop
aad
sbb
pushf
movl
cmpsl
in
mov
sti
pop
fistl
xorl
cmp
or
fsub
test
repz
insl
imul
lock
inc
push
ljmp
ret
ljmp
adc
icebp
push
sub
fmuls
push
lea
cmp
sbb
mov
mov
in
js
sbb
push
adc
mov
mov
push
xor
sbb
and
fsubrp
jecxz
mov
xor
je
mov
movsl
cmp
sbb
xchg
mov
xor
dec
cmp
mov
dec
sub
test
push
xor
dec
dec
jmp
mov
sbb
adc
add
test
insb
jge
mov
mov
sti
jl
negb
ljmp
push
outsl
cmc
rorl
daa
inc
rcll
sub
dec
gs
in
add
outsb
push
in
rcl
sahf
jo
fmull
mov
mov
add
jl
mov
lcall
push
sub
mov
inc
and
loopne
mov
cmp
mov
xchg
pop
adc
ljmp
pop
inc
idivb
jecxz
xor
test
cli
or
push
int
stos
rcrb
cmp
mov
inc
jg
add
enter
xchg
addr16
in
orb
sti
add
in
divl
push
inc
dec
les
or
cmp
ss
cmc
test
stos
push
sahf
jno
test
test
out
lods
add
in
popa
lcall
cmp
in
pop
cmp
inc
cmc
add
jecxz
cli
sti
pop
fdivr
repnz
pop
xchg
xor
insl
add
sub
mov
cs
or
lds
hlt
mov
negb
lea
jnp
add
sub
idivl
cli
loope
jmp
ss
repnz
pusha
fcoms
ljmp
cmp
sbb
lea
sub
dec
pop
pushf
sarl
lods
enter
lods
mov
or
cwtl
test
dec
arpl
xor
nop
cmp
fdiv
pop
fdivs
ljmp
push
xchg
movsl
sbb
out
sub
sbb
xor
gs
and
xor
push
loop
arpl
sti
xchg
inc
mov
xor
inc
mov
cltd
cwtl
jecxz
xlat
stos
pusha
xchg
cld
add
push
push
mov
fiadds
jmp
mov
das
pop
xchg
repz
fsubr
std
push
sbb
mov
push
cld
xor
lret
lahf
js
sub
xor
jge
mov
stos
jmp
and
push
leave
xor
pop
or
out
push
aam
dec
push
sbb
notb
mov
in
xor
jle
or
insl
cmp
or
mov
dec
sub
and
jecxz
xchg
in
repnz
shll
push
pop
dec
cmpsl
mov
lea
fadds
ljmp
mov
insb
push
jge
repz
popf
scas
in
push
fdivrs
cmp
leave
pxor
jge
out
or
cmp
leave
daa
dec
adc
stc
pop
pop
and
jle
jp
xor
movsl
test
in
decb
test
add
mov
mov
ret
rcrl
jne
scas
in
out
adc
mov
stos
jg
mov
data16
movsb
mov
jg
lea
incl
negl
xchg
or
in
add
xor
add
lret
adc
or
test
xor
iret
pop
push
inc
jp
jns
ds
or
and
cmp
es
mov
imul
mov
pop
cmp
inc
cli
ljmp
inc
fmull
add
sub
loope
xchg
or
loopne
jecxz
mov
movsb
cmpsb
jle
or
and
adc
in
jae
xchg
scas
dec
cmc
sbb
xor
mov
mov
jae
and
mov
inc
push
add
dec
adc
adc
xor
adc
mov
sub
adc
std
jbe
js
mov
sbb
jmp
imul
mov
sbb
xor
xor
xor
cmc
jle
add
mov
dec
inc
outsb
leave
jmp
mov
sahf
leave
mov
xlat
andb
inc
lret
ret
inc
mov
sbb
inc
cs
or
test
sbb
mov
adc
or
dec
or
jns
shr
stos
ficomps
ljmp
jg
sub
jge
mov
cli
popa
insb
sub
cmp
pop
outsb
add
push
cwtl
mov
and
repnz
and
sbb
or
cmp
scas
mov
push
sti
push
mov
les
js
andl
dec
loopne
repz
enter
inc
inc
or
inc
int
or
jbe
ss
dec
lcall
pusha
scas
fsub
xchg
in
dec
loop,pt
testl
mov
lock
or
sub
cmp
lcall
paddsw
jle
sbb
adc
addl
cmp
std
enter
xchg
imull
xor
ret
fiaddl
inc
mov
jg
popf
push
pop
cmp
pop
xchg
cmpsl
and
or
xor
cmp
cmp
sbb
insl
fisubl
lods
stos
ret
pop
imul
lods
idivb
bound
cwtl
dec
dec
mov
outsl
add
pop
test
rcr
call
int
movb
lock
push
sbb
aas
sbb
mov
mov
ds
jecxz
stos
test
pop
popa
in
jne
sub
out
sarb
stos
data16
sub
sbb
xchg
adcl
push
xor
sub
xchg
test
xor
popf
push
jno
push
icebp
jnp
cs
test
inc
movsl
push
pop
fadds
andps
adc
cmp
mov
test
insb
movsb
xchg
gs
cltd
sbb
jl
sub
test
xorb
bound
popa
mov
xchg
gs
out
test
insb
dec
sub
jbe
jge
dec
sbb
xchg
sbb
pop
cmp
mov
fmuls
adc
stos
adc
mov
and
sub
ljmp
movsb
jb
cmp
inc
sub
insl
lods
jge
sub
test
movsl
add
inc
push
sub
dec
jmp
add
jno
fstpt
ss
ret
pop
sub
fimull
pop
dec
cwtl
in
adc
fdivr
xor
dec
cmp
std
push
xchg
fisubl
jp,pt
cld
cmp
and
div
add
adc
hlt
clc
dec
and
jnp
xchg
mov
jmp
push
pop
imul
stc
cmp
stos
call
ret
movsb
sbb
lds
mov
daa
mov
mov
imul
dec
repnz
mov
sbb
int3
outsl
xchg
imul
push
jle
mov
aaa
mov
sbbb
xor
sbb
mov
sub
mov
ljmp
dec
mov
adc
lea
cmp
sub
leave
sub
sub
test
push
pop
call
leave
mov
clc
and
loope
adc
mov
jmp
push
sar
inc
sub
xorb
jbe
repz
sub
pop
cli
in
fbld
ja
push
inc
rcrl
cwtl
mov
xor
mov
mov
mull
sbb
test
push
sbb
add
in
xchg
dec
notl
enter
dec
fdivrs
push
sarb
cmp
fisubl
push
jge
cmpsb
enter
out
cmp
adc
insl
lret
mov
mov
imul
lea
pop
movsl
ss
mov
dec
add
addr16
add
loope
jo
js
push
or
sti
cmp
mov
mov
or
dec
jo
mov
imul
lods
sbb
lahf
mov
cmpsb
sub
inc
and
mov
addr16
add
mov
and
movsl
xchg
jno
rcrb
pop
outsl
sbb
mov
xor
dec
loopne
inc
pop
inc
sbb
add
popa
inc
pop
push
or
adc
cmp
xchg
and
mov
mov
loop
insb
mov
fs
inc
fcoml
or
sub
shlb
adc
jge
in
repnz
push
adc
jns
mov
sbb
mov
dec
mov
sub
push
mov
adc
or
jne
pop
adc
in
insb
ds
fdiv
jecxz
fwait
jg
pop
test
cmovge
mov
insl
out
fadd
and
icebp
jmp
fimuls
clc
xor
and
jne
mov
jns
mov
hlt
add
lcall
and
and
mov
cmpsb
mov
cmp
sub
xchg
or
stos
sbb
shrl
imul
cmp
dec
xchg
dec
jl
sub
xor
jg
pop
repz
cmpsl
popa
js
or
flds
loopne
sbb
imul
sub
sub
inc
sbb
sbb
or
cmp
push
mov
dec
mov
stos
in
push
fiaddl
xor
fisubs
mov
aaa
movsb
sbb
sub
sbb
xchg
fcoms
lock
pop
mov
je
repnz
push
dec
sahf
xchg
push
sbb
inc
lods
push
xlat
xor
mov
lock
roll
cmp
dec
dec
insl
lds
adc
push
addr16
mov
mov
mov
jg
test
xor
jle
pop
sub
out
add
mov
mov
lds
outsl
fnstsw
hlt
mov
and
ja
add
ficomps
mov
jnp
icebp
mov
repnz
test
test
inc
sub
adc
cwtl
mov
test
push
cs
inc
push
xchg
mov
lock
add
arpl
loopne
sub
das
cmp
cmp
jg
test
mov
outsl
sub
into
adc
arpl
hlt
cmpsl
data16
stos
push
cli
loope
les
enter
jno
or
sbb
loopne
jns
stos
or
ficompl
or
mov
repz
push
fidivrl
or
mov
xor
popa
mov
stos
test
cmc
icebp
imul
push
ljmp
hlt
lret
cmpsl
ss
cmp
xchg
test
stc
lret
mov
and
subl
sbb
adc
hlt
jecxz
jno
pop
ds
bound
outsb
popf
inc
mov
in
cmp
pop
mov
jne
out
jp
outsb
xor
push
mov
cmc
jecxz
repnz
mov
pop
adc
cmp
out
sbb
pop
test
cmp
out
xchg
and
pop
psrlq
ds
fwait
roll
call
dec
fisttpll
mov
sbb
sub
mov
dec
fstl
xchg
lock
imull
jns
je
aaa
mov
test
pop
mov
mov
cs
jp
in
aad
outsb
adc
in
lock
sub
sbb
inc
add
jnp
stos
sbbb
test
jns
out
xchg
mov
loopne
dec
cmp
and
stos
cmp
mov
push
pop
lret
es
jbe
pop
lea
push
push
mov
push
in
jmp
dec
xchg
popf
aaa
movb
pop
shlb
and
test
add
mov
lods
and
mov
iret
xchg
adc
sbbl
cmp
idiv
int
or
cltd
inc
sbb
dec
push
imul
vmovaps
jecxz
lret
mov
mov
std
sti
daa
mov
stos
fisttps
ljmp
pop
inc
mov
push
push
pop
cmp
cld
mov
jae
jg
movsl
dec
cld
push
sub
push
ret
or
pop
push
jg
mov
in
movsl
or
push
add
cmp
and
sub
rcl
mov
xchg
sub
xlat
in
pop
mov
push
stos
inc
test
mov
test
outsl
pop
jo
xor
addr16
repnz
or
dec
cmp
xchg
sub
cwtl
jno
cmc
xchg
dec
push
mov
int3
fisubrl
push
fs
dec
stos
push
lea
in
push
jge
or
inc
aam
lret
sub
movl
pop
or
fcomip
fwait
jno
mov
cmp
add
push
or
xor
clc
outsb
lds
mov
sbb
scas
push
fsubs
jns
jecxz
js
mov
test
call
or
test
sahf
lret
in
cmp
and
xor
outsl
dec
jne
push
sub
outsl
sub
adc
xchg
push
cmp
mov
inc
cmp
js
mov
xor
pop
push
mov
dec
pop
jge
mov
mov
out
subl
adc
out
push
mov
ljmp
sub
adc
icebp
jl
and
sarl
xor
mov
mov
xchg
adc
fcoml
daa
jmp
adc
fucomip
leave
hlt
bound
adc
push
in
shrb
mov
dec
push
out
jge
data16
add
js
cmp
insl
mov
xchg
mov
mov
sti
jo
pusha
leave
fimull
cmp
test
or
pop
mov
mov
mov
dec
fsubrs
cmc
icebp
dec
fbstp
sub
pusha
sub
lret
scas
add
xor
stos
pop
jae
jl
add
mov
cmpsb
test
scas
rorb
ret
fidivrl
cli
fwait
ds
subb
push
sbb
out
mov
cmc
add
cltd
xor
dec
and
push
or
dec
out
xchg
mov
sub
rdmsr
mov
pop
mov
loope
sbb
imul
imul
mov
fdivp
cmp
sub
popf
xchg
sbb
loope
repnz
testb
fisubs
lea
add
and
cmp
or
mov
rep
push
push
mov
mov
movsl
jne
stos
mov
xchg
scas
adc
jne
xor
jecxz
xchg
jae
add
sub
mov
test
stc
out
jmp
repnz
aad
jne
sub
ja
add
mov
mov
push
sbb
stos
mov
dec
repnz
ret
in
cmp
repnz
cmp
outsb
ror
push
mov
jae
js
neg
or
into
add
adc
loopne
pusha
scas
xchg
fstpt
push
sub
sbb
xchg
mov
sar
pop
mov
ss
mov
pause
sbb
cli
subl
xchg
aas
jecxz
fwait
jmp
cmp
es
sbb
loope
pop
ljmp
cmp
mov
imul
inc
addl
dec
mov
and
popa
or
jne
push
sarl
xor
jp
mov
jns
mov
cmp
jecxz
sub
leave
lea
xor
loope
jns
leave
popa
sbb
mov
add
out
cwtl
arpl
cmp
xchg
mov
and
into
push
sbb
mov
inc
or
or
push
int3
sar
ja
adcl
jb
push
pop
mov
sub
fisttps
fmull
jmp
mov
in
movsl
mov
testb
repnz
out
mov
int3
or
jns
test
out
pop
sub
nop
sub
pop
jne
and
xchg
and
jmp
or
and
inc
sti
sahf
lret
test
or
jmp
dec
dec
std
pop
mov
dec
sub
jp
push
shr
mov
mov
cmp
ljmp
pushf
movsl
sbb
xor
mov
cli
jmp
pop
scas
push
sub
cmp
mov
clc
sub
or
fwait
pop
out
dec
or
xchg
jnp
mov
rorl
sbb
lea
mov
js
fsubp
clc
sbb
adc
jl
dec
pop
sbb
xchg
add
repz
push
jmp
fsubrs
outsl
cltd
in
mov
popa
shll
push
sbb
shrb
mov
and
mov
shlb
es
add
sbb
jno
scas
fstp
mov
mov
in
inc
xchg
push
dec
je
cmp
add
rcrl
add
pop
sti
lahf
ljmp
xchg
addr16
pushf
cmp
mov
jecxz
test
in
push
iret
cmp
xchg
jo
test
fcmovne
in
mov
sti
test
push
iret
adc
loopne
jb
mov
xchg
popf
adc
inc
out
or
cmpl
cmp
addr16
mov
enter
push
xchg
movl
sbb
adc
shlb
stos
dec
sub
imul
ret
fs
or
mov
sub
push
jne
push
push
sbb
mov
fadds
cmp
push
movsb
and
fmull
stos
fmuls
ss
mov
dec
mov
push
out
test
or
mov
sub
pushf
test
test
sbb
mov
adc
ljmp
jns
stos
cli
inc
sahf
adc
scas
and
and
jns
mov
shl
jne
lods
icebp
sub
jns,pn
cmc
lret
and
push
sub
ret
stc
sbb
clc
mov
push
inc
mov
xchg
stos
and
jl
hlt
mov
add
dec
and
adc
mov
popa
xchg
pop
sbb
icebp
sub
addl
sbb
ljmp
sub
ss
push
pop
and
loope
push
add
pop
mov
sub
pop
jae
scas
jb
mov
mov
dec
push
mov
xlat
out
mov
aaa
sarl
movsb
stos
pop
comiss
cmp
push
sub
inc
mov
scas
push
jno
cwtl
dec
test
adc
adcb
cmp
stc
lahf
popa
fs
mov
sub
and
sub
xor
in
push
notb
add
mov
lea
mov
sti
or
sub
es
xorl
aaa
lcall
addr16
ljmp
mov
jge
pop
adc
loope
cmp
push
mov
pop
imul
fsubr
and
popa
clc
out
lret
shrl
sub
pusha
in
ret
or
icebp
adc
mov
popa
jnp
jge
push
and
mov
shll
popa
lock
mov
mov
ret
push
dec
fdivrs
push
cmpsb
ret
std
shll
xchg
mov
fistpl
fcoms
negl
add
lods
sub
jo
mov
jb
add
sub
test
jbe
dec
sbb
or
and
stos
roll
fidivrl
cld
icebp
cli
mov
shl
and
jae
xor
mov
sub
push
out
sbb
lods
pop
out
movsl
push
test
mov
in
loope
cmc
insl
fcmove
test
jns
and
out
lea
dec
out
jmp
push
sahf
insb
push
lods
shl
bound
shl
dec
or
cltd
sbb
jge
in
js
jecxz
mov
inc
or
movsb
cmpsb
insl
jne
ret
in
data16
sub
adc
lahf
push
stos
mov
mov
cli
shrl
pop
cmp
or
movsb
mov
xchg
lods
add
mov
xor
ljmp
arpl
sti
mov
or
pop
adc
shll
mov
mov
mov
lret
insl
sbb
push
pop
mov
sub
nop
repnz
and
sbb
gs
jp
dec
ss
dec
data16
je
push
lds
mov
lret
lcall
add
stc
pandn
jmp
pop
fnstsw
push
inc
call
and
rcrb
mov
cmp
cmc
dec
scas
cmp
repz
add
sub
xchg
fnstcw
int3
das
or
xchg
fstpl
inc
jmp
dec
xor
mov
in
sahf
movsl
ss
mov
jge
add
push
sub
or
add
cmp
insb
loope
mov
cmpsb
or
lea
push
std
pop
es
inc
icebp
outsl
insb
scas
bound
lret
addl
lods
xor
sarl
loop
stc
stos
idivb
push
push
popf
xchg
out
sub
insl
icebp
cwtl
test
icebp
xchg
enter
pushf
push
data16
mov
cmc
adc
jno
xchg
test
mov
dec
sbb
dec
dec
lret
inc
cld
cmp
cmc
jo
ffreep
and
stc
test
xchg
sbb
aas
les
dec
xchg
dec
test
mov
ret
mov
hlt
xlat
insl
mov
mov
fmuls
in
dec
lds
push
out
cmc
add
xchg
pop
mov
test
add
pop
js
lods
mov
int
cmpsl
lock
std
test
loopne
sbb
mov
lds
push
jmp
push
cmp
mov
push
adc
mov
imul
das
in
sub
es
mov
ret
xchg
int3
sub
into
mov
fwait
and
jno
mov
or
mov
ret
pushf
mov
xchg
imul
in
add
pop
outsl
enter
push
sahf
xor
imul
test
jecxz
cld
loopne
int
arpl
sub
lea
xor
cmp
mov
sahf
lret
popa
cli
mov
or
push
xlat
subl
outsb
push
xchg
push
push
mov
add
and
or
ja
ret
iret
mov
dec
cmpsl
sbb
cwtl
fs
test
jns
sbb
fnstenv
aad
or
fcoml
pop
xchg
push
pop
int3
repz
rcll
in
fmull
inc
lea
sbb
lods
add
ficomps
sub
xor
imul
inc
mov
mov
lods
fidivrs
sbb
and
xor
mov
mov
mov
fisttps
sbb
xchg
or
jl
movsl
scas
into
sti
inc
push
add
push
push
outsb
pop
mov
cmp
es
sub
mov
nop
repz
sub
shll
pop
dec
pop
lock
push
aam
dec
popa
jae
xchg
inc
or
mov
loop
add
add
adc
lods
cmp
loope
lods
cmpsb
lea
stos
push
inc
sbb
test
je
or
mov
mov
push
sub
test
in
mov
mov
ror
pop
mov
out
subl
cmp
dec
fnstsw
in
mov
insb
shlb
sbb
sub
mov
mov
jno
xor
ljmp
cli
mov
xor
hlt
push
jno
lcall
cltd
add
movb
xchg
bound
in
enter
sbb
adc
mov
ss
int
repnz
shlb
mov
cmpl
mov
dec
mov
xchg
arpl
lcall
cmp
cwtl
movsb
xor
sub
aam
scas
in
or
pusha
fldt
mov
sub
mov
inc
enter
mov
stc
lock
hlt
dec
test
clc
les
fisttpl
enter
inc
int3
test
and
loope
in
inc
cs
arpl
popf
xchg
xchg
sub
insl
push
sti
sub
mov
lea
sbb
jmp
sub
jge
cmp
pop
xchg
in
fucomip
addr16
add
jns
div
mov
xchg
push
rcl
lea
sti
pop
or
cmp
dec
or
mov
test
pusha
scas
push
sbb
jp
pop
pop
in
rolb
lcall
xor
sub
sub
insl
cmpsl
sub
aas
std
xor
in
and
popa
inc
jmp
mov
cmc
push
xor
pushf
rorl
mov
sbb
push
fnsave
mov
pushf
ljmp
inc
test
push
sub
cmpsb
ja
xchg
inc
sub
mov
xor
push
jne
and
movsb
mov
or
jae
adc
xor
cwtl
sti
ret
outsb
jae
js
xor
or
scas
lcall
pop
add
dec
lea
cli
outsl
jo
jmp
inc
adc
rcl
push
xchg
ljmp
cmp
xor
inc
xlat
xchg
stos
out
lea
and
scas
test
cmp
stos
lods
dec
xchg
sbb
sub
popa
or
xchg
icebp
orl
outsb
lods
test
xor
dec
or
cmpsl
popf
add
lea
sub
leave
push
popa
aaa
ljmp
ds
adc
test
sub
xchg
add
icebp
ja
xor
pop
repnz
loope
pop
adc
dec
lock
dec
lds
jmp
popa
scas
sub
inc
nop
pop
std
push
mov
repz
ficoms
pop
push
dec
js
dec
adc
iret
mov
ret
adc
or
xor
sarl
jp
sub
dec
jno
mov
shll
testl
mov
sti
test
cs
or
sti
adc
stos
mov
sub
cwtl
hlt
xchg
outsb
mov
or
add
or
aam
gs
cmp
int3
lret
outsb
mov
lahf
mulb
fisubs
out
or
xchg
hlt
push
lcall
cmp
notl
stc
jmp
add
loope
pop
sbb
xchg
mov
cs
xchg
and
pop
mov
mov
cmc
bound
dec
xchg
iret
add
sarb
mov
seto
jne
jge
pop
jle
outsb
cmp
inc
mov
lds
cmp
dec
loop
test
or
outsl
mov
xchg
lods
and
test
xor
mov
or
cmp
repnz
fidivrl
rcrl
les
addr16
insb
test
decl
pop
cmpb
dec
stos
addr16
stos
mov
push
mov
int
mov
cmp
xchg
or
addl
xor
push
jnp
adc
mov
jnp
daa
cmp
mov
out
inc
nop
popf
rclb
xchg
mov
in
push
push
pop
stc
mov
inc
mov
pop
pop
sbb
inc
push
mov
mov
pusha
push
out
orl
mov
cmp
push
xchg
push
push
gs
cmp
jle
mov
cmp
push
push
sub
push
or
sub
aad
jge
sub
jno
stos
ret
xor
push
push
inc
xor
icebp
add
dec
push
scas
pop
mov
fisttps
jno
ds
mov
imull
or
lret
fistl
fwait
mov
lret
out
jge
popa
movsb
repnz
xchg
and
sub
insb
cwtl
test
in
outsb
shl
rorb
jmp
sub
xchg
dec
push
ret
cmpsb
scas
lds
out
cmp
mov
fldt
push
xor
adc
movsb
sub
lea
int
icebp
push
or
mov
jp
into
cld
push
inc
cs
cwtl
imul
das
stos
bound
ljmp
lea
daa
notl
sbb
pop
jbe
sub
cmp
mov
les
rcrb
push
aad
mov
add
pop
lock
dec
pop
adc
stos
mov
gs
push
xor
and
repz
enter
or
mov
scas
push
add
ja
into
sar
xrelease
jne
xchg
or
stos
push
ss
idiv
dec
mov
addr16
sub
call
popa
xor
ror
shrl
jbe
cld
jae
sub
and
pusha
and
mov
push
mov
ja
cmp
cmp
dec
sub
mov
jp
or
xor
mov
pop
push
cmp
ror
mov
cmp
in
mov
lea
inc
mov
outsb
ret
xchg
xor
addr16
xor
xor
mov
or
scas
mov
fcomip
or
ljmp
out
dec
cs
packuswb
in
jmp
or
and
sub
or
stos
cld
inc
dec
add
push
dec
adc
cmp
lea
xchg
fidivrs
dec
pusha
addr16
mov
push
rorl
or
pop
jne
mov
stos
mov
hlt
cmp
inc
push
mov
scas
js
jmp
and
push
or
adc
push
ss
jbe
inc
cmp
inc
sbb
in
or
lea
mov
in
mov
mov
xlat
inc
jle
jge
or
out
cmp
pop
xchg
push
pop
xor
xchg
fmuls
mov
dec
cmp
add
xor
mov
mov
rorl
pop
ret
or
inc
sbb
and
push
imul
lea
jbe
lods
jge
jmp
out
daa
pop
js
push
daa
push
xchg
or
dec
mov
cmpl
dec
mov
stos
mov
mov
movzwl
imul
es
jge
cmpsl
int
push
lea
sbb
ret
fucom
sub
push
pop
mov
mov
dec
dec
xchg
sahf
jge
jns
add
popa
sbb
mov
push
jl
dec
scas
cli
lea
mov
cwtl
sti
or
adc
mov
ljmp
add
lcall
push
push
fdivp
dec
mov
mov
sahf
jg
and
dec
pop
sub
icebp
test
dec
xor
xchg
stos
mov
sbb
dec
popa
xor
stos
push
push
pop
jl
repnz
push
mov
in
or
not
stos
pop
mov
adc
sub
int
lods
add
cmpsb
push
sub
lods
mov
enter
inc
push
xchg
xchg
jb
inc
add
jecxz
lods
daa
mov
sbb
stc
lret
or
lods
sub
popf
test
and
adc
pushf
mov
ja
adc
jecxz
jnp
imul
aas
push
xor
dec
movsb
lods
outsb
test
adc
mov
and
push
movsb
shlb
xchg
sbb
pop
out
sbb
dec
sbb
orb
mov
sahf
mov
fadds
jg
pop
mov
pop
imul
je
or
sub
hlt
sarb
mov
push
ret
inc
daa
repz
ficompl
pusha
xchg
notl
std
in
lods
xchg
imul
fsub
pushf
shll
cmp
mov
cmp
add
xchg
mov
enter
dec
lcall
popa
xchg
xchg
cmp
pop
xor
fs
mov
outsl
outsb
movhps
xor
repnz
xor
cli
push
or
pop
rcll
js
mov
out
add
leave
lret
pop
lret
lea
mov
jecxz
mov
sbb
sti
fadds
push
jp
aaa
testb
cmp
jge
and
mov
dec
mov
imulb
push
aad
jb
imul
inc
leave
inc
cs
sti
popa
xchg
mov
and
out
leave
in
out
push
inc
pop
icebp
sub
dec
adc
lea
cli
fbld
push
dec
mov
scas
jge
mov
loopne
loop
lret
lret
mov
or
xchg
jecxz
out
out
mov
cli
add
cmp
mov
mov
scas
dec
and
mov
nop
jge
push
dec
xchg
sbb
test
stos
lock
insl
data16
outsb
rcll
jge
mov
aas
lods
popa
mov
mov
pop
dec
pop
in
xor
cmp
dec
in
lret
mov
push
jno
push
icebp
adc
fdivrs
sub
rcll
xchg
cmpsl
or
and
lea
imul
or
adc
xchg
bound
or
push
addr16
mov
push
mov
fnstenv
or
stos
jmp
je
jp
lods
push
mov
sub
cli
pop
add
xchg
inc
shll
mov
out
mov
pop
add
mov
push
pop
jl
mov
std
fdivrl
sub
cli
fwait
mov
mov
cltd
sbb
mov
adc
leave
lret
insb
insl
sub
dec
fs
sub
push
insb
clc
xchg
mov
jge
in
pop
lcall
jo
fwait
scas
scas
cli
dec
jl
ret
out
jp
add
loope
push
cmpsb
add
xchg
sahf
cmp
pop
filds
fwait
mov
repnz
mov
fisttps
arpl
adc
xor
mov
mov
sbb
sub
mov
pop
testl
dec
cli
jno
and
jmp
daa
fwait
adc
daa
fwait
aam
lea
push
movsb
lret
scas
inc
jg
push
push
stos
pop
es
jo
mov
stos
mov
jae
mov
gs
divb
jbe
not
adc
sarl
push
push
or
jge
sti
xlat
cmp
hlt
push
mov
push
daa
cmpsb
call
cmp
mov
pushf
xor
cmp
mov
hlt
data16
sub
xchg
imull
int
inc
stos
cmp
lcall
scas
pusha
mov
int
sbb
popa
pop
fnsave
push
jg
inc
push
mov
mov
out
sub
cmp
sub
pusha
ds
and
mov
xor
dec
out
xor
dec
jge
push
or
push
sub
push
divl
push
cmp
xor
fs
sub
loope
outsb
inc
add
dec
xchg
loopne
fucomp
add
jbe
popf
adc
sub
cmp
test
inc
cmpsb
xor
fucomip
sbb
push
loop
cmp
sbb
pop
sbb
xlat
push
xchg
das
hlt
xchg
jmp
pop
mov
xchg
dec
jecxz
pushf
mov
popf
enter
sbb
cmp
outsb
sub
pushf
mov
jno
jl
fs
movsb
sbb
push
mov
push
push
push
sub
clc
push
cmp
mov
push
add
sti
jge
add
inc
jno
notb
or
jg
mov
int
jle
inc
aas
negb
mov
lcall
mov
shlb
or
sbbl
fcomps
jnp
aas
pop
insb
decb
sub
out
mov
inc
xchg
mov
xchg
mov
jmp
inc
cmp
and
mov
loope
mov
jge
xor
in
jnp
rolb
xchg
mov
pop
sbb
mov
jg
dec
hlt
push
pop
or
pop
jns
shlb
inc
cmp
cwtl
xchg
addl
push
pop
mulb
das
mov
das
pop
jno
jbe
mov
sub
mov
push
adc
or
pop
cmp
js
sub
adc
mov
leave
mov
stos
push
and
stos
sti
dec
outsb
sub
cs
cmpsl
lcall
sbb
mov
lds
mulb
and
xor
lea
cmp
cmp
hlt
lcall
cltd
dec
jnp
out
pminsw
push
iret
jl
mov
xor
mov
shrl
stc
sub
inc
icebp
xchg
lods
adc
imul
push
stos
sub
add
mov
mov
push
or
add
or
sub
lds
sub
push
in
fisttps
xchg
mov
push
repnz
imul
fstl
rclb
mov
fs
jg
xchg
push
lds
ret
addr16
push
add
xor
fs
lahf
bound
cmp
xor
cmp
xor
aas
iret
push
dec
cld
outsl
stos
in
inc
push
lea
xchg
mov
jb
int
and
clc
mov
mov
out
idivb
or
push
mov
push
add
mov
sbb
mov
dec
lea
scas
sub
loope
pop
mov
into
movsl
das
xchg
jle
bound
call
add
shl
sbbb
inc
push
xchg
repz
sub
xchg
inc
repnz
adc
mov
call
hlt
jns
lret
and
dec
jmp
and
jne
lret
insb
dec
stos
fdivr
cli
adcb
inc
popa
pop
imul
test
jmp
jecxz
lods
cmp
repz
cs
test
div
add
xchg
mov
sub
dec
aaa
pmaddwd
sub
mov
cmp
imul
push
loope
cli
cmp
movsb
cmp
push
addr16
gs
shll
bound
or
pop
dec
cmp
push
add
gs
or
push
push
cmc
popa
int3
sbb
adc
inc
out
sub
pop
stos
mov
or
repnz
mov
dec
xchg
adc
mov
je
lea
fcoml
mov
out
mov
mov
push
mov
ficompl
in
bound
shll
sbb
shll
inc
stos
mov
leave
imul
movsb
punpcklbw
clc
cmpsb
mov
sub
lret
enter
or
mov
cli
outsb
pop
inc
xlat
pop
xchg
subb
ljmp
dec
sbb
enter
imul
inc
outsb
int3
mov
and
inc
loopne
orb
jno
and
popa
mov
mov
inc
or
or
mov
ficoml
es
stos
in
xor
movsl
sbb
cmc
dec
pop
xor
adc
xchg
repnz
mov
push
das
fiaddl
xchg
cmpsl
xor
call
loop
xlat
sub
insl
sub
and
adc
pop
fsubl
imul
push
sub
inc
js
in
fwait
aaa
scas
push
loop
mov
ljmp
js
adc
int3
es
gs
clc
mov
lds
jo
imul
sub
insb
lods
les
imul
sti
aam
cli
in
daa
int3
loop
xchg
das
outsl
fdivrl
push
aaa
pop
pushf
or
sbb
lea
cmc
repnz
daa
mov
cmp
push
sub
jo
dec
fisubs
dec
subb
repnz
jb
xor
xlat
mov
test
push
cs
cwtl
inc
call
cmp
test
sub
adc
adc
pop
loop
das
inc
sti
xorl
cli
adc
test
loope
aaa
dec
test
dec
and
or
stos
xchg
dec
or
pop
cmp
sbb
mov
and
jp
es
cmc
push
push
hlt
and
clc
jns
inc
mov
sbb
and
mov
stos
xor
repnz
mov
dec
jbe
inc
inc
xchg
sbb
dec
std
stc
fimuls
xor
or
sti
testl
mov
test
mov
cld
int3
es
stos
cli
insl
stos
inc
mov
cmp
es
in
ret
add
xchg
dec
mov
out
pop
in
dec
xor
mov
outsb
jne
mov
stos
dec
inc
cs
call
popf
stos
push
sub
push
mov
jb
das
adc
add
das
les
push
fildll
ljmp
push
mov
or
add
xchg
adc
add
mov
pop
xchg
mov
insb
dec
es
stos
testl
clc
and
movsl
and
cmp
dec
les
add
das
and
in
ret
andl
or
stos
cmp
dec
adc
repnz
enter
adc
mov
hlt
xor
sbb
adc
jb
int
enter
xor
and
pop
xor
aaa
xor
repnz
fdivrl
test
and
bound
popa
outsl
mov
xchg
mov
cmp
mov
mov
out
sub
dec
push
imul
sub
jmp
dec
inc
xorb
push
leave
cmc
ficompl
xchg
pop
repnz
mov
sub
sbbb
mov
rorb
sbb
push
and
loop
and
inc
sub
test
inc
mov
fdiv
push
or
fnstenv
js
or
xor
mov
pop
dec
xchg
push
push
icebp
push
or
mov
gs
aam
xor
insl
or
cmp
jne
repnz
jno
stos
pop
pop
inc
mov
push
repnz
xor
inc
aaa
xchg
iret
xor
mov
jo
mov
and
adc
inc
cmp
repnz
stc
loope
repnz
sbb
imul
mov
jno
fisubl
loop
inc
ds
fistl
mov
fisubrl
lret
imul
dec
cmpsb
push
sti
sub
leave
std
es
stos
int3
js
xor
mov
arpl
repnz
xor
jne
cli
out
imul
jae
imul
inc
jno
imul
mov
imull
and
fnstcw
xor
fistl
jo
pop
sti
fwait
xor
addb
mov
dec
lret
sub
lret
dec
jno
push
mov
pusha
adc
neg
sti
xchg
push
jmp
jne
mov
test
jne
pop
loop
imul
shrl
nop
cmp
and
dec
imul
sub
push
mov
xchg
repnz
mov
mov
xchg
sbb
stos
test
pop
sub
cwtl
into
or
xor
xor
pop
sub
or
jno
and
xor
inc
cwtl
std
call
lret
cld
lds
mov
leave
leave
jns
push
push
xor
dec
jmp
out
inc
imul
jb
mov
inc
adc
push
lods
stos
pop
fwait
cs
add
pop
pop
cmp
mov
inc
repnz
jne
scas
jns
jno
sbb
mov
jno
push
or
repnz
mov
jle
inc
pop
ret
bts
stos
leave
repnz
xor
pop
inc
cmp
mov
ficoml
mov
inc
inc
push
hlt
cld
add
xor
and
or
jle
push
stos
loopne
dec
sarl
push
scas
jecxz
add
xor
push
mul
sbb
add
jne
lock
mov
call
in
jp
addr16
push
sahf
mov
call
lods
call
inc
rcll
test
negb
mov
or
out
stos
xchg
pop
xor
lock
and
add
inc
jl
pop
dec
rolb
das
into
bound
adc
xor
and
cmp
jnp
mov
xor
nop
mov
inc
jbe
sbb
cwtl
loop
jl
lcall
cmp
xor
or
dec
sbb
pop
adc
mov
and
and
mov
sub
push
xor
repnz
or
xchg
fisttpl
or
neg
mov
inc
pusha
mov
je
lods
push
repnz
xchg
lds
or
inc
inc
inc
pop
mov
fisttps
jne
pop
jge
sub
push
stc
push
mov
in
stos
or
stos
cli
sbb
mov
xor
mov
xor
bound
push
jnp
inc
in
cmp
call
jge
imul
in
sbb
mov
test
inc
jb
call
mov
test
mov
stos
pusha
aaa
cwtl
push
stc
and
pop
xchg
dec
inc
call
push
push
adc
or
push
mov
out
in
add
repnz
sbb
cmc
jbe
or
movsb
and
jp
scas
dec
pop
pop
ja
and
loop
sbb
sub
lods
aaa
xchg
pop
or
add
mov
sub
lret
and
shlb
xor
test
mov
test
push
xor
mov
push
stos
push
mov
cmpsb
mov
fwait
shrb
dec
call
push
scas
out
dec
xor
lods
or
or
imul
cmp
loopne
mov
xor
inc
je
or
fidivrl
or
and
pushf
loop
adc
sub
stc
sub
adc
or
push
repnz
jmp
int3
fisttpl
cmp
out
cmc
add
hlt
gs
es
jmp
pop
sub
mov
stos
cmp
mov
int3
pop
mov
adc
xor
cltd
shrb
inc
pop
mov
loope
pop
sbb
and
jno
sbb
sub
negb
in
int
movsl
call
movsl
sub
jns
xchg
push
mov
adc
dec
pop
imul
or
shl
gs
cmp
mov
int
mov
out
push
in
lret
mov
mov
fcmovnu
cltd
pop
and
xchg
stc
es
mov
bound
sbb
cmp
mov
loopne
das
push
xor
jg
fs
cmp
jno
repnz
xor
dec
popf
sarb
xchg
jbe
inc
or
or
mov
imul
ret
loopne
mov
outsb
lahf
call
stos
push
pop
dec
rcll
repnz
mov
adc
pop
loop
das
rorb
call
mov
mov
jg
mov
sub
int
mov
jae
dec
pop
cmp
mov
jns
or
ds
jbe
test
sub
inc
cmp
dec
hlt
daa
sarl
iret
es
stos
sbb
add
xchg
call
or
stc
xchg
mov
sub
outsl
dec
jno
or
cs
dec
das
xlat
icebp
addb
cltd
dec
sub
jne
stos
repnz
xchg
fldenv
dec
xchg
leave
inc
shlb
and
xor
dec
fnstsw
mov
lods
mov
ret
outsb
es
mov
aad
sarl
sarl
mov
sub
jl
mov
mov
pop
and
jb
or
insb
dec
les
enter
out
jo
int3
inc
leave
dec
mov
es
sbb
mov
push
xchg
mov
pop
push
in
out
xor
cmp
sub
sub
mov
sub
das
push
ds
gs
and
es
and
js
inc
or
pop
sbb
add
mov
sbb
mov
pop
out
dec
xor
test
ss
cmp
in
out
xchg
push
adc
nopl
pop
pop
lret
pop
cmp
cmpsl
pop
call
add
pushw
subb
ds
mov
scas
sub
push
fiadds
fldt
lret
aad
lock
stos
decb
sbb
push
into
cmp
imul
btcl
adc
sbb
or
out
inc
leave
in
call
imul
cmp
and
sbb
fdivl
push
imul
loopne
xor
xchg
js
xchg
add
push
je
ret
jb
js
push
push
nop
push
mov
cmp
sbb
imul
fbstp
shl
jmp
mov
dec
inc
push
mov
xchg
sbb
push
in
stos
xchg
jo
push
mov
or
adc
testl
pop
popf
jnp
pop
fmul
cli
icebp
test
sbb
popa
das
and
adc
or
xor
cld
mov
xor
rclb
loopne
cld
sub
jno
dec
dec
dec
sbb
loop
test
jl
ss
mov
jnp
dec
mov
mov
dec
aas
fcompl
aaa
push
xor
jbe
arpl
lret
push
bnd
cs
rcrb
or
das
mov
mov
stc
push
repnz
lahf
mov
imull
repnz
leave
xor
push
mov
test
pop
mov
repnz
out
mov
mov
call
cmp
js
jno
and
nop
loopne
inc
mov
shr
jg
xor
add
es
icebp
push
test
shrl
jbe
mov
pop
or
lea
repnz
in
aaa
lods
out
dec
push
jne
mov
lds
or
inc
adc
push
mov
jmp
call
mov
leave
imul
call
sbb
push
xor
push
pop
inc
scas
jb
inc
dec
dec
or
out
push
mov
repnz
sbb
mov
pop
in
mov
push
stos
lock
mov
fwait
fwait
cli
jl
lret
repnz
orb
cld
lret
mov
xor
mov
fwait
mov
scas
add
leave
adc
and
sbb
mov
jns
movsl
inc
int
xchg
outsb
mov
leave
sbb
dec
inc
int
or
xchg
ret
les
dec
pop
pop
into
inc
xchg
int3
xor
adc
add
sbb
dec
sahf
into
jle
and
test
dec
xor
pop
jp
push
pop
pop
xchg
int
inc
imul
adc
sub
xlat
enter
mov
mov
cwtl
cs
or
dec
in
cmp
sub
in
xacquire
jo
cmp
push
sbb
repnz
sti
xlat
cmp
or
sbb
rcr
lock
arpl
les
cmovbe
push
lret
aaa
repnz
mov
orb
ret
cmp
xchg
inc
fwait
sbb
test
mov
cmp
jb
sbb
subb
inc
mov
push
xor
in
and
movsl
dec
bound
aam
imul
es
cmp
or
pop
sub
clc
and
js
cmp
dec
cwtl
push
mov
js
cli
and
outsb
fwait
cmp
nop
mov
sbb
imul
movsb
xorl
sbb
imul
add
mov
ficoml
dec
pop
das
psubusb
dec
push
inc
hlt
or
das
xor
cmpsb
cmp
gs
sbb
cmp
push
js
or
push
lret
jg
in
xor
adc
test
xor
pop
hlt
movsb
ss
mov
mov
call
mov
push
ret
adc
js
push
fs
fiaddl
fsubr
dec
into
fldl
ds
in
mov
outsb
mov
lods
sbb
test
jmp
clc
leave
shl
mov
sbb
sub
aam
or
xor
or
repnz
aas
mov
mov
sbb
adc
push
inc
sub
adc
sbb
call
stos
rcr
lahf
or
imul
sub
outsl
xor
mov
fsubrl
ds
and
call
movsl
out
push
mov
fwait
push
imul
repnz
inc
subl
stos
das
and
aam
adc
aas
pop
inc
cmp
cltd
into
inc
stc
pop
rclb
call
lret
mov
imul
pusha
popa
arpl
pop
stos
loopne
jmp
call
sub
pop
orb
mov
orb
pop
mov
pop
dec
mov
lret
mov
aam
inc
icebp
loop
sbb
test
mov
ja
jg
lret
call
repnz
xor
ret
and
stos
pop
fucomp
push
test
fstpt
cld
dec
imul
or
xchg
push
pop
mov
mov
fsub
shll
int3
mov
push
inc
xlat
fildll
sbb
push
push
xor
in
lcall
imul
xchg
or
dec
pop
outsb
xchg
arpl
shll
sarb
push
je
pop
pop
push
add
scas
test
jns
sub
push
mov
and
sbb
arpl
outsb
leave
in
lcall
lods
outsb
stos
fdivrl
scas
rcl
mov
fadds
hlt
lods
mov
call
stos
xor
int3
or
lcall
jno
stos
pop
or
pop
mov
pop
stos
sub
mov
mov
fisttpl
mov
call
xchg
add
cmp
xchg
addr16
in
iret
inc
call
aaa
mov
sbb
mov
lcall
xchg
ss
jnp
push
push
outsb
fwait
cmp
push
jle
push
ds
enter
dec
or
in
or
xchg
pop
call
js
das
adc
xor
sub
aas
lods
jbe
add
cltd
call
data16
cwtl
scas
lahf
mov
mov
xor
test
xor
stos
scas
aaa
int3
xlat
popf
insb
pop
xor
pushf
and
sub
push
js
orb
push
sbb
daa
push
pop
adc
call
imul
and
xor
vunpcklps
pop
push
cmp
xchg
cwtl
int3
sbb
ror
mov
mov
or
mov
push
push
pop
int
testl
sbb
sahf
int3
push
dec
into
mov
mov
mov
mov
mov
pop
pop
xor
leave
lds
inc
addr16
enter
pushf
or
dec
lret
scas
sbb
xor
das
push
aam
repnz
in
adc
inc
in
mov
push
aaa
dec
enter
xor
les
cli
lret
add
xchg
push
mov
mov
or
and
repnz
jbe,pt
lods
fwait
dec
out
jecxz
mov
mov
pop
sbb
inc
pop
or
sbb
addb
xlat
jmp
inc
ret
sub
mov
pop
ucomiss
adc
mov
xor
sub
push
push
arpl
xor
xchg
and
ficoms
xchg
stc
mov
loope
dec
fnstcw
xchg
call
lods
pop
cmpsb
xor
cmp
push
add
stos
js
add
xchg
or
push
cmc
or
inc
iret
popa
xchg
data16
lods
in
sbb
inc
mov
or
outsl
xchg
outsl
mov
ficomps
jp
push
pop
stos
inc
arpl
in
lods
lods
push
xor
mov
test
adc
loopne
push
cli
cwtl
jae
int3
cli
adc
loop
cs
and
dec
mov
mov
mov
sbb
lea
rorb
popf
repnz
jno
push
adc
mov
test
fistl
out
pop
fsubl
lret
add
jmp
sub
sbb
and
inc
ja
xor
adc
test
lret
cmp
arpl
sbb
mov
repnz
enter
movlps
sub
mov
scas
xchg
fwait
pop
jge
mov
sbb
mov
ss
or
lret
fucom
mov
test
cmp
mov
stos
mov
dec
sbb
or
imul
loop
das
dec
insb
aad
sbb
arpl
pop
stos
repz
xor
jge
jbe
repz
sub
xor
arpl
sar
mov
cmpsl
pop
sar
mov
sbb
enter
out
repnz
movhps
jl
fwait
gs
fwait
lds
popa
sub
imul
or
pusha
scas
xor
xchg
in
adc
mov
cmp
and
pop
rcl
dec
mov
leave
sub
lcall
sub
bound
inc
mov
jno
push
in
push
sub
ror
cld
shll
out
mov
ret
decb
sub
mov
arpl
mov
fdivp
mov
call
jae
imulb
es
pop
scas
fimull
pop
das
xor
xor
cwtl
shll
pop
ds
filds
dec
or
sbb
shrl
addl
loop
rcr
cmp
push
xor
icebp
push
repnz
jge
ss
mov
sbb
cmpsl
lods
lods
shll
cwtl
repz
dec
imul
call
call
andb
cmpsl
movl
and
push
mov
inc
fwait
pop
jecxz,pn
dec
std
push
js
leave
je
mov
leave
loop
out
jbe
mov
and
test
push
sub
jl
orb
bndldx
subl
mov
inc
call
enter
clc
xor
mov
outsl
leave
or
std
pop
sbb
fwait
enter
dec
mov
cmpb
shl
es
sbb
mov
sub
mov
sahf
and
ss
out
pop
shrl
arpl
stc
mov
xchg
jne
or
je
mov
shr
push
mov
ljmp
repnz
jne
pop
xor
iret
push
mov
xchg
xor
lret
mov
xchg
jmp
leave
in
lcall
inc
xchg
into
dec
cmpb
cmp
out
add
fwait
xchg
inc
jl
jns
leave
scas
cmpsb
or
sub
adc
leave
repz
dec
push
jae
adc
fwait
inc
xor
pusha
cmp
inc
stos
ds
push
rcrl
xchg
add
pop
scas
push
js
mov
das
int3
jnp
xor
sub
cltd
sbb
popa
mov
and
adc
jp
repz
js
mov
aas
sbb
mov
dec
cmpsl
push
repnz
push
adc
andl
push
nop
test
imul
jno
push
xor
jne
jbe
mov
inc
mov
aad
bnd
pop
fisubrs
cltd
inc
adc
mov
mov
js
push
sub
xor
lock
jne
test
add
cli
repz
call
fcompl
sbb
xorl
cmp
jl
jg
pop
mov
sub
roll
jl
cltd
inc
mov
pop
lret
bnd
mov
arpl
dec
aaa
movsl
js
pop
push
sbb
xor
scas
cwtl
ja
inc
pusha
icebp
jno
push
jecxz
inc
ljmp
enter
add
xchg
loope
and
test
lahf
ror
enter
sbbb
or
mov
fwait
ret
adc
stos
push
and
dec
ficomps
pushf
pop
data16
pusha
ja
pop
dec
cwtl
lret
xchg
inc
arpl
sbb
repnz
adc
pop
lcall
inc
mov
lods
mov
inc
jp,pn
or
or
test
lock
shll
scas
push
cmp
hlt
jmp
inc
xchg
push
pcmpeqb
xor
xor
sub
mov
push
and
mov
loop
xor
gs
push
ss
lret
outsb
outsb
push
ror
cmp
mov
sbb
mov
cld
jge
xor
push
jae
test
pop
test
das
std
iret
arpl
inc
ljmp
notb
sub
xor
flds
pop
sbb
fldt
pop
adc
dec
hlt
shlb
lret
ret
or
cmpsl
mov
daa
push
call
push
mov
push
adc
test
stos
loopne
cmp
fsubr
stos
outsb
cmpsb
cld
loope
pop
xor
ljmp
mov
sbb
movsb
push
faddl
pop
push
bound
subl
or
sbbl
adc
ret
cmp
push
daa
outsb
push
out
mov
fisubrs
into
into
test
and
lods
scas
stos
imul
mov
inc
push
mov
sbb
or
jbe
int
push
jge
es
adc
lods
ljmp
add
es
xchg
mov
sbb
bound
sbb
shl
jo
es
sbb
or
adc
jbe
lea
nop
popf
loop
call
into
adc
cli
pop
movsb
cwtl
mov
rclb
push
push
in
adc
mov
popa
lea
and
jno
cmp
or
xor
int
ficoms
inc
sub
pushf
imul
jle
inc
push
into
mov
or
push
or
xor
imul
inc
sbb
int3
out
test
sbb
push
repnz
dec
mov
cmp
stc
stos
lcall
pop
fistpll
sub
sbb
stos
mov
sub
inc
imul
icebp
ss
and
or
lahf
xor
sub
dec
outsl
jmp
sbb
es
cmpsb
mov
out
roll
mov
subl
xchg
pop
cmp
mov
jno
leave
pop
stos
mov
into
loope
mov
test
xchg
cmp
enter
hlt
xor
das
stos
enter
bound
adc
mov
mov
insl
call
popf
outsb
int3
out
add
adc
or
xor
in
arpl
sub
insl
ss
sahf
cli
pop
lret
mov
jno
sahf
pop
jnp
or
or
pop
cmpsb
pop
add
rorl
xchg
jo
and
loope
stos
adc
jmp
or
dec
pop
or
xor
sbb
stos
fcomps
ret
bound
test
cmp
fs
sub
mov
adc
bound
lcall
push
mov
adc
dec
and
sbb
and
addb
xor
jmp
pop
push
and
inc
cmp
addr16
adc
sub
stos
out
daa
sub
stos
mov
adc
hlt
repz
sbb
jecxz
les
xor
inc
sbb
xchg
sub
push
cmp
xor
lods
xlat
sub
jecxz
lret
out
test
stc
sub
addr16
fists
xchg
bound
mov
nop
add
stos
and
repnz
mov
mov
sub
jl
lcall
inc
xor
sbbb
push
std
sub
test
shr
push
rcl
mov
sub
jne
inc
cmp
test
sub
stos
lock
inc
add
ljmp
pushf
dec
push
sub
rol
sub
enter
mov
pop
cmp
shl
jp
adc
ds
dec
out
pop
imulb
fucom
cltd
mov
mov
int3
outsl
mov
dec
bound
xlat
mov
aad
stos
mov
sub
out
in
adc
sub
inc
divl
arpl
je
xchg
pusha
pop
sub
pop
mov
ss
dec
and
push
inc
adc
jb
andl
cs
or
mov
sub
mov
aad
xor
add
sub
sbb
push
inc
fdivs
mov
test
and
mov
pop
movsb
sub
js
sbb
mov
sub
addr16
cli
outsl
lods
cs
push
js
adc
cmp
dec
scas
les
and
xchg
hlt
pop
xor
fldcw
jl
add
pusha
cld
cvtpi2ps
lea
cs
mov
jns
xchg
sub
repnz
sub
pop
push
cmp
and
inc
in
xor
xor
lds
adc
mov
push
cmp
sub
add
sbb
sbb
test
pop
bound
sub
cmp
xchg
lds
call
gs
mov
movsb
sub
lahf
cmp
push
mov
divb
push
dec
push
push
sub
data16
ss
xchg
sahf
loopne
icebp
or
insl
popa
sub
cwtl
xor
shrb
or
sub
dec
pop
jecxz
push
cmc
in
add
sbb
movhps
pop
dec
mov
or
and
movsb
dec
add
test
cmc
sub
les
fcomp
fidivl
call
lods
imul
sub
jno
mov
mov
inc
stos
repz
xchg
mov
dec
cld
and
cmpsl
fwait
lods
xor
insl
inc
pop
in
xor
dec
add
lods
fcmovb
imul
dec
scas
cmp
movsl
add
cmp
inc
cli
fcmovbe
loopne
sub
xor
mov
xchg
sub
or
push
pop
iret
lds
enter
scas
xlat
push
dec
sub
mov
push
cmpl
ret
pop
nop
lods
and
push
aas
pop
fdivrs
and
sub
xchg
pop
sub
mov
sub
jg
xchg
push
enter
rorl
das
pop
pop
push
xchg
sub
add
jmp
cmp
ljmp
sub
sub
cmc
lea
shl
movsb
enter
data16
sub
add
adc
shll
stos
xchg
lret
or
outsl
sub
mov
repnz
xor
push
lret
in
xor
lds
push
fisubrs
add
inc
stc
jmp
bound
xchg
aaa
jnp
or
lret
add
jg
sub
pusha
and
xchg
mov
sub
cltd
mov
into
ficoml
pop
xchg
sub
nop
push
js
sub
outsl
repz
push
popa
sub
and
dec
pop
pop
jecxz
jmp
ret
add
mov
xor
and
jne
ja
adc
xchg
cltd
lret
adc
cmp
inc
andl
and
lret
psubsw
mov
scas
mov
fs
pop
add
dec
pop
lahf
sub
popa
xorb
mov
pop
dec
es
adc
pop
sbb
jle
popa
stos
scas
mov
dec
stos
scas
out
rolb
sub
lcall
sub
das
adc
pop
and
ss
push
or
sbb
sub
enter
fldt
test
outsl
ss
jb
or
das
jecxz
xorb
fs
add
cmc
ljmp
push
adc
arpl
jb
js
sbb
or
mov
outsb
fcoms
push
dec
ja
dec
mov
into
xor
mov
dec
sub
jne
sti
in
mov
outsb
jbe
xor
js
ret
xor
test
outsb
sub
mov
adc
sar
adc
jmp
mov
push
mov
adc
outsb
js
ljmp
repz
cld
jge
adc
sub
dec
hlt
mov
sti
leave
push
add
pop
js
enter
mov
inc
push
cmc
xchg
mov
aad
mov
jge
ljmp
inc
jge
sub
nop
mov
mov
lock
push
outsl
into
daa
das
aaa
add
fwait
push
and
sub
movsb
outsb
in
adc
and
add
ret
and
stos
ljmp
dec
stc
repnz
xchg
ss
cmp
mov
fsubrs
jmp
subb
ja
xor
push
call
adc
or
in
jmp
inc
xor
sub
sbb
cli
mov
in
stc
mov
xor
adc
stc
sub
sub
in
call
js
lret
data16
js
mov
push
xor
fimuls
xor
xchg
sub
push
push
jecxz
fimull
mov
pushf
cmp
iret
ret
mov
sub
push
sbb
sbb
sub
cs
insl
aaa
lods
roll
cmp
sbb
stos
lret
mov
shll
outsb
mov
ds
push
cli
mov
mov
shll
mov
mov
sbb
sbb
aaa
in
xchg
inc
adc
addr16
loop
or
test
adc
fisubrl
dec
add
mov
xor
std
mov
mov
cmp
int
les
fsubrs
mov
icebp
leave
stc
rcl
xor
jge
lret
cmpsb
jmp
frstor
out
lds
ret
jle
shr
ss
push
lods
ljmp
sbb
fcom
push
insb
orl
or
sub
nop
fisttpl
jge
lock
test
xchg
xchg
sbb
mov
sub
inc
fidivl
lret
sbb
in
and
stc
or
dec
ljmp
es
add
mov
push
or
es
dec
js
dec
sub
pop
ja
mov
fisttps
leave
cmp
sub
jg
test
stos
jecxz
pushf
fildl
push
adc
rorl
dec
and
mov
ret
scas
stos
fs
repnz
xor
mov
cs
mov
int
xor
xchg
cmp
test
cmp
imulb
mov
cmc
repnz
in
add
inc
xchg
sbb
pop
xor
aam
in
int3
cmp
dec
or
sub
outsb
mov
test
shlb
add
es
cmp
inc
stos
xchg
je
pop
mov
mulps
fmuls
xchg
adc
cmp
lahf
into
push
fmull
fdiv
xchg
or
cmpsl
pop
sub
mov
cmc
aam
sbb
xchg
loopne
pop
call
cmp
dec
lods
or
ficoml
les
shlb
testl
add
lret
mov
push
mov
or
mov
push
adc
mov
xlat
lock
sar
push
iret
fsubrs
jmp
adc
add
es
xor
out
test
in
jecxz
enter
dec
adc
or
out
inc
mov
cmp
xchg
loop
decl
arpl
popf
faddl
or
dec
or
xlat
in
push
pop
sub
nop
lret
mov
push
enter
mov
into
xchg
push
je
push
adcl
cmc
mov
push
or
scas
stos
repz
stos
lea
into
cltd
inc
xchg
xlat
push
cli
aam
fldt
push
cmp
repz
jb
mov
sub
dec
subl
dec
cmp
sti
stc
mov
push
ljmp
jmp
xor
out
mov
pop
xor
lret
xor
je
or
mov
hlt
cs
xor
dec
ret
xor
xor
mov
imul
push
std
in
cmpsl
sub
mov
sub
inc
insl
shlb
xlat
das
shrb
aam
jae
lret
cmpsl
sbb
stos
sbb
add
fimull
stos
scas
lret
sbb
mov
das
adc
pop
scas
cld
add
xchg
mov
jno
addr16
and
push
jbe
ds
in
lock
xor
loop
sub
aas
push
shll
sub
push
or
stos
pusha
adc
pop
jne,pn
mov
xor
cmc
cmp
shrl
scas
push
cmp
je
and
push
ret
mov
es
into
jbe
in
lret
test
dec
hlt
xor
jmp
xchg
fsubrs
mov
sbbl
call
inc
fidivrl
popf
insl
mov
hlt
sbb
add
aam
jg
or
dec
dec
add
je
sti
or
push
cli
pop
lea
mov
push
adc
or
xchg
and
sbb
jb
repz
push
lea
xchg
sub
add
jae
cmp
cs
loop
push
dec
mov
sub
xchg
in
mov
sbb
sti
popa
imul
mov
jp
or
xchg
push
mov
jbe
mov
movsb
repnz
in
dec
ret
popa
adc
add
mov
mov
sbb
lcall
sub
dec
nop
mov
nop
cmp
clc
out
pop
dec
add
adc
add
rcrl
mov
inc
jg
mov
and
push
lea
mov
cmp
hlt
aad
in
cmc
push
push
pop
loope
jmp
or
sbb
jl
inc
xchg
sub
fs
movaps
mov
lea
or
sti
test
test
aam
add
sub
pop
fcmovbe
inc
bound
jo
call
adc
push
xchg
and
sub
push
sbb
push
jae
shll
ljmp
test
jnp
sub
or
sub
add
test
xchg
push
pop
fistl
into
das
pop
sub
imul
sub
cmpsb
xlat
fwait
mov
jecxz
dec
sub
pop
add
les
nop
in
repz
mov
in
aam
mov
and
lret
mov
or
pop
sub
mov
rorb
imul
sbb
movsb
inc
sub
sub
fsubrl
lahf
lea
mov
sub
scas
xchg
test
mov
mov
rcrl
rolb
xor
cltd
sub
mov
das
jp
sub
add
inc
jno
sub
imul
movsb
mov
ja
add
jns
loop
xchg
inc
sub
fwait
xor
out
sti
dec
dec
cmp
aaa
bound
mov
jmp
and
ret
ficomps
or
int3
aam
or
loopw
adc
fbld
in
rcrb
sub
dec
pop
sub
sub
rclb
push
jae
dec
mov
shr
jns
mov
mov
add
sub
or
divl
pop
in
sub
test
inc
js
jbe
in
dec
jl
es
sub
mov
sub
xorl
sub
xor
dec
jno
push
sub
push
push
sub
jo
in
mov
inc
cs
xchg
std
xor
imull
xchg
add
test
mov
dec
xchg
test
popa
and
sub
cltd
adc
sub
push
les
xchg
lret
insl
dec
jmp
jmp
int
or
inc
mov
cwtl
stos
nop
mov
stos
lahf
rolb
pop
jb
lcall
xchg
mov
sub
pop
js
sub
xor
xlat
sub
jle
fisubl
pop
xor
jb
sub
loop
in
insl
outsb
pop
sub
xchg
sub
adcb
ljmp
sub
dec
xchg
cmpsb
out
xchg
negb
pusha
sub
xor
lock
xchg
aas
fwait
pushf
sub
stos
ret
xchg
fsubp
imul
inc
or
rorb
in
inc
arpl
cld
jnp
xor
lods
cmc
test
lock
jecxz
movsl
lea
lcall
stos
addb
out
popa
jmp
mov
fsubrl
jnp
mov
pop
push
ret
jae
inc
sub
in
rcr
mov
ja
out
or
and
rorl
pop
fistpl
push
xchg
add
sub
in
fadds
fidivrs
in
sahf
sub
sub
push
add
and
scas
push
mov
rcrb
lds
jmp
fldt
icebp
cld
mov
mov
mov
lock
sub
sbb
inc
mov
test
push
jae
push
lea
mov
cmpsb
or
cmp
push
dec
xor
mov
aad
pusha
int
fadds
push
pop
pop
das
push
shl
out
or
adc
mov
sub
push
cmp
lock
aaa
or
lock
sub
aad
imul
mov
nop
mov
decb
inc
push
adc
fidivl
stos
mov
adcl
sbb
call
testl
leave
xchg
sti
fsub
mov
dec
cmp
mov
flds
mov
cs
mov
adc
stos
cli
mov
mulb
xor
mov
and
push
inc
das
and
enter
outsb
inc
mov
pop
dec
or
mov
mov
sub
daa
push
lods
insb
mov
les
and
inc
enter
cs
imul
cmpsl
stos
push
aad
adc
aas
sub
in
and
add
lret
in
adc
push
push
add
pop
jno
and
aad
sbb
fldcw
xchg
inc
adc
mov
pop
cmp
cmp
ljmp
leave
inc
outsl
fidivrl
and
sub
js
xchg
arpl
sub
or
mov
es
outsl
mov
xchg
aaa
dec
pop
dec
sub
jmp
out
iret
sub
adc
add
push
ja
sub
dec
pop
sub
and
cld
mov
cmp
loop
insb
push
add
in
rorl
divl
sub
daa
test
fdivrs
or
xor
jnp
enter
sub
sub
xchg
pop
in
imul
add
sub
mov
and
sub
pop
sbb
iret
push
push
mov
pop
jecxz
scas
sub
adc
call
in
pop
inc
jl
fldt
sub
scas
std
mov
xchg
sub
aas
inc
jae
scas
jmp
rol
cmp
lock
dec
loope
sub
clc
xchg
popf
testb
sub
sub
mov
cs
stc
int3
rcrl
cs
pop
dec
cmp
cmp
stos
mov
push
push
pop
out
cld
fistpl
push
push
mov
jge
repz
pop
nop
xor
arpl
push
push
dec
xchg
sarl
push
pushf
jle
sbb
arpl
sub
mov
sub
pop
movsb
sbb
cwtl
test
jle
shll
add
push
cli
xor
push
pop
dec
call
cmp
iret
mov
jno
or
push
stos
mov
add
push
lea
jge
adc
and
addr16
jmp
fcom
push
mov
mov
xor
mov
xchg
sub
mov
hlt
jno
mov
xor
testl
ds
mov
movsl
call
pop
mov
mov
idivb
sbb
cmp
cmp
xorb
jecxz
push
mov
push
sbb
inc
or
pop
repnz
or
xchg
mov
and
pop
mov
cmp
rcr
mov
mov
leave
movsl
call
lret
sub
push
stos
movsb
xor
pop
adc
mov
filds
push
pusha
mov
jp
sub
push
mulb
inc
lea
jg
aaa
sub
dec
mov
or
and
and
mov
hlt
stos
mov
daa
ret
addr16
or
cmp
pusha
xor
js
lds
in
xchg
stos
movsl
xchg
mov
jl
jg,pn
push
mov
or
jge
mov
gs
jp
jb
int
adc
xor
cli
xor
pop
fistpl
pop
in
xor
cmp
ljmp
lret
mov
test
fwait
cmp
xor
lea
pop
sti
cs
movsl
sub
stos
out
mov
jecxz
mov
movhps
pop
add
movsl
push
sbbl
sbb
cld
mov
int3
cmp
mov
cmp
push
call
mov
imul
test
rolb
int
push
mov
adc
hlt
or
push
imulb
sub
sub
dec
xor
sar
inc
pop
mov
out
repnz
test
scas
stos
cmpl
mov
rol
inc
lea
bound
sub
push
dec
inc
xor
std
push
jns
jp
push
out
cld
scas
insl
dec
sub
mov
mov
fisttps
pusha
dec
subl
pop
and
mov
cwtl
pop
xor
sub
jo
add
push
test
je
cmp
sub
and
dec
inc
mov
imul
pop
sub
cmpsl
cld
inc
push
sahf
inc
jns
jl
xchg
dec
enter
sub
mov
pop
dec
leave
sbb
lcall
call
rcrb
out
inc
cmp
sti
out
xor
adc
cmp
in
insb
sar
sub
xlat
iret
std
sub
je
inc
int
push
mov
xchg
sub
sti
movsb
les
fs
dec
call
pop
lahf
xor
mov
xchg
inc
fcmovbe
or
add
sub
cs
mov
push
cmp
es
adcl
xor
push
mov
xchg
out
rorl
inc
std
icebp
js
popf
das
jge
add
cmp
lcall
and
add
cmp
sub
cmp
mov
sub
sub
pop
mov
pop
mov
and
test
mov
adc
ljmp
in
push
cld
subb
xchg
pop
inc
pop
push
cmc
sarl
cltd
push
pop
out
sub
lods
cs
pop
inc
sub
push
loop
sbb
cmp
xchg
out
lods
push
mov
push
sub
xor
pop
sub
mov
sub
nop
hlt
adc
testl
or
inc
xor
jo
das
push
jmp
and
inc
mov
in
enter
push
stc
ljmp
test
lea
inc
lods
jns
cli
jno
out
sahf
fcom
sub
push
or
repnz
mov
cwtl
adc
push
loop
mov
inc
sub
push
sub
pop
push
and
data16
aam
sub
or
jmp
add
sub
fimull
ljmp
sahf
push
inc
sbb
nop
pop
xor
test
sub
push
pusha
inc
sub
mov
xor
inc
pop
fimull
dec
ficoms
ljmp
push
and
and
sub
dec
and
xchg
cld
inc
add
xor
aas
dec
divl
push
dec
dec
xchg
inc
sub
adc
les
out
pop
fisubrl
daa
push
dec
inc
mov
push
and
test
dec
pusha
dec
sub
jae
adc
sub
push
test
xchg
and
daa
pshufw
pop
cli
out
fildl
adc
int3
hlt
stos
aad
movsb
add
mov
fdivrl
test
inc
mov
pop
fimuls
mov
sbb
pop
inc
outsl
jae
xor
jp
ss
cltd
rolb
push
and
aas
scas
add
pop
sub
dec
cmpl
xchg
and
push
inc
arpl
or
fldcw
xor
pop
jno
sub
rorl
popa
nop
cmp
push
cmp
xor
sub
loop
adc
inc
dec
in
in
cmp
mov
adc
je
sub
stos
leave
shrb
xchg
dec
sbb
xor
dec
xor
int3
sub
rolb
dec
xchg
sub
add
xchg
mov
inc
or
mov
xchg
fwait
add
mov
rorl
and
jno
loop
dec
repz
ret
push
sarl
decb
sbb
subb
push
sub
aas
ja
fnsave
fidivrl
and
std
pop
xchg
cmc
push
jnp
cmp
pop
test
jecxz
or
ss
dec
jnp
cmpl
mov
rolb
xor
scas
loopne
sub
out
stos
ljmp
sub
lret
or
imul
repnz
sub
mov
xor
sbb
negl
imul
cmp
add
sub
dec
orb
shrl
shll
inc
cld
mov
cli
cmp
add
cltd
sub
dec
xchg
add
adc
sahf
ss
lods
loop
arpl
shrb
nop
adc
xchg
testb
push
lahf
mov
pop
sub
sarb
cmp
xchg
mov
das
daa
enter
in
pop
ss
jecxz
shrb
clc
push
int
push
or
mov
sub
getsec
push
sti
adc
addr16
cmp
mov
mov
adc
xor
sub
test
push
movsb
jmp
push
pop
sub
sub
int3
sbb
mov
lret
dec
jge
adc
sub
cli
push
push
nop
mov
inc
sub
lods
lret
arpl
outsl
or
and
movsl
stc
xchg
mov
add
pop
push
sub
je
xor
push
or
lods
imul
inc
xor
icebp
xor
and
out
in
ljmp
jl
inc
sarb
clc
js
sbb
cs
arpl
pushf
gs
mov
pop
cmp
dec
inc
popf
sub
iret
mov
gs
lret
movsl
pop
cs
mov
bound
sub
cmpsb
icebp
insl
outsl
sub
lcall
push
daa
sub
push
push
inc
jbe
imul
insb
dec
movsb
jne
jns
movsl
aas
nop
fcmovbe
sub
scas
outsb
cmp
inc
enter
scas
ret
jmp
cs
aas
xor
scas
and
out
ja
or
or
rolb
sub
sub
jae
inc
or
dec
aaa
aas
fisubs
pop
mov
jle
test
dec
sub
mov
fldenv
sbb
loope
dec
sub
add
inc
and
sub
popa
mov
jo
jno
loop
test
popf
sti
sub
xor
xchg
mov
into
mov
add
popf
xchg
cs
sbb
cmp
jp
test
pop
dec
call
sub
xor
push
dec
pop
pushf
fdivrs
sub
add
mov
sub
out
add
sbb
ret
test
and
sbb
sub
push
inc
xor
inc
sub
dec
pop
subl
cwtl
sbb
inc
inc
jne
sub
xor
scas
xchg
into
or
imul
sub
push
dec
xor
lcall
dec
sub
cmp
cs
test
adc
rorl
mov
xor
lahf
sub
aad
mov
mov
sub
scas
sbb
adc
push
mov
xor
scas
leave
mov
mov
es
pusha
and
pop
daa
fcompl
dec
notl
pop
sub
test
ss
std
mov
loop
xchg
jnp
fisubl
mov
std
jl
sahf
or
jle
out
icebp
fldcw
out
or
ljmp
mov
xor
es
sahf
push
mov
adc
inc
and
jg
inc
jg
pop
les
gs
xchg
into
pop
fwait
shll
or
popf
add
mov
cmp
push
and
adcl
bound
bnd
cmpsb
push
movsl
call
aam
mov
lods
movsb
sbb
mov
or
pop
push
cmc
loope
jg
lea
dec
adc
xor
dec
in
mov
jp,pt
mull
mov
cmp
cwtl
mov
fsubrs
inc
mov
dec
sahf
inc
cmp
mov
sbb
rcll
cmc
pop
mov
lcall
mov
sub
iret
xchg
dec
flds
mov
stos
mov
sub
cmp
pop
loop
xlat
mov
jecxz
jge
mov
fimuls
sbb
insl
leave
lods
les
mov
jnp
repnz
sbb
pop
aad
outsb
loopne
push
lret
es
fwait
aad
adc
dec
ds
mov
sub
pop
fdivs
jp
mov
out
and
push
stos
lea
std
shl
mov
sub
popf
adc
xchg
mov
or
jns
sub
jb
stos
jge
cmp
fmuls
xchg
pop
enter
pop
outsl
imul
cmp
pop
decb
or
add
mov
retw
out
and
loopne
mov
sbb
out
adc
or
push
push
inc
addr16
dec
mov
aas
pop
fdiv
sub
xchg
outsb
jb
imul
aam
lret
lds
push
xlat
cmp
sarb
leave
xor
sahf
add
cmpsb
add
nop
repz
dec
sub
xor
in
mov
xchg
imul
and
ucomiss
loop
or
xchg
test
loopne
and
and
sub
js
inc
enter
jns
or
push
shlb
addr16
add
fbld
dec
sub
dec
jecxz,pn
popa
or
daa
mov
pop
push
or
mov
lds
sub
call
push
addb
test
popa
daa
and
and
inc
xchg
jle
aas
inc
push
xor
pushf
bound
xor
test
in
stos
push
sbbl
inc
out
mov
movsl
lret
push
pop
pop
dec
in
cmp
pusha
cltd
push
dec
in
in
xor
mov
sub
shr
sbb
stos
push
leave
lea
xchg
pop
mov
aad
inc
test
adc
fmull
or
xchg
mov
cli
mov
push
inc
cs
mov
xchg
mov
lods
inc
xchg
mov
ret
iret
int3
mov
dec
jb
cmp
addr16
push
test
sbb
imul
repz
jmp
and
sbbb
cmc
sub
movsl
mov
lea
enter
fld
stos
push
mov
add
dec
add
loopne
xchg
dec
sti
jnp
pop
scas
push
or
frstor
fistpll
mov
mov
insl
xor
je
pop
mov
sbb
cmp
call
jns
lock
and
push
xchg
mov
jns
jle
mov
push
addr16
pushf
pop
mov
mov
mov
and
push
lret
mov
adc
stos
xchg
rorl
xchg
cmp
mov
in
dec
repz
fmull
shlb
xchg
out
mov
adc
xchg
lcall
jne
dec
out
lea
mov
das
pop
and
sahf
xor
sub
pop
or
pop
les
jno
in
out
xchg
mov
mov
stc
insb
bound
fisttpll
mov
dec
inc
out
aas
cld
xor
in
and
out
into
jo
mov
mov
sub
cwtl
adc
insl
ljmp
or
out
imull
or
stos
sbb
mov
mov
mov
popa
xor
das
inc
cltd
push
lods
shlb
rdmsr
cltd
mov
pop
lahf
jmp
pop
push
ss
mov
pop
cmpsl
fdivrp
outsl
cwtl
push
div
stos
xchg
std
push
cmp
movsl
cli
insb
stos
cltd
push
int
pop
mov
xlat
mov
xchg
pushf
sub
jmp
mov
out
mov
cltd
sub
pop
sbbl
sub
lock
rcrb
sub
decb
leave
test
int3
jecxz
push
xchg
or
jmp
dec
sub
xor
lret
and
aad
icebp
sub
addb
pop
bound
push
imul
lcall
loope
and
adc
push
adc
pop
in
sub
mov
int
mov
adc
jno
adc
push
and
xor
inc
sbb
sub
test
mov
dec
push
out
sub
cli
outsl
test
mov
xchg
sarb
stos
out
sub
lret
mov
cwtl
nop
mov
xor
fisubl
out
inc
sbb
or
neg
push
in
sub
dec
imul
and
and
ljmp
push
bound
adc
jno
and
test
arpl
rcrb
cmp
xchg
out
loop
sbb
and
inc
or
xor
subl
mov
jne
fisubrl
jns
dec
dec
ret
addr16
add
inc
sub
les
mov
arpl
jle
pop
stc
pop
dec
adc
and
mov
cmc
inc
ja
dec
adc
dec
pop
mov
movsl
pop
dec
cmp
test
mov
nop
push
shll
mov
xchg
bound
pop
fimuls
aaa
jle
sub
inc
sub
jecxz
xchg
lods
xor
cmp
test
scas
sub
int3
gs
xchg
cli
sub
pop
movsl
add
push
sbb
jecxz
scas
ficoml
icebp
push
xchg
mov
mov
stos
xchg
push
jae
sub
lods
test
push
sub
adc
xchg
in
push
cli
lea
push
lds
sub
addr16
sub
cld
add
pushf
inc
int
scas
cs
cmp
popa
push
dec
lock
sbb
in
fucompp
mov
sub
out
clc
xchg
fwait
pop
or
cmp
add
lcall
data16
fistps
mov
test
inc
xchg
int3
adc
mov
enter
xchg
jge
xchg
inc
adc
les
stc
push
cltd
sub
mov
push
mov
add
pop
incl
lret
or
xor
outsl
and
dec
nop
das
stos
pop
push
insl
and
add
inc
lea
fiaddl
xchg
loop
mov
fwait
pusha
loop
dec
xchg
lds
data16
testb
stos
sbb
sub
sub
push
sub
mov
dec
sub
in
sbb
shr
cmova
jb
sub
sbb
lret
ljmp
jge
push
sub
cs
rcr
mov
sub
mov
sarl
lahf
cmpsl
fldt
aas
loope
mov
iret
stos
pushf
push
adc
cld
int
xor
jecxz
sub
mov
jmp
fildll
sub
inc
cmp
call
pop
pop
fnstenv
jg
mov
ret
sub
xchg
jns
adc
mov
std
mov
fadds
sarl
inc
jge
in
bound
jbe
pusha
inc
cs
push
xor
pop
cwtl
sub
shrl
mov
fiaddl
mov
lea
mov
in
push
jmp
adc
mov
scas
push
mov
scas
sub
jp
addl
add
jmp
jo
sbb
mov
lods
imul
shlb
movsb
test
addr16
popa
sub
push
mov
scas
sub
dec
and
jmp
cmc
movsl
sub
int3
mov
cmc
std
test
jg
xor
sub
jl
sbb
lods
lods
fiaddl
sub
jmp
sbb
xor
daa
push
jp
movsl
mov
mov
ss
and
mov
mov
cmp
mov
sub
out
repz
outsl
jnp
cmp
lods
in
stos
jbe
lods
jp
mov
sub
mov
scas
sub
mov
rolb
push
pop
fldt
mov
addl
and
xor
sub
mov
call
orb
gs
jle
xor
mov
out
sub
repnz
sub
sub
sub
xchg
mov
and
xlat
sub
mov
jg
movsb
mov
add
cmp
sub
xchg
mov
icebp
or
shlb
jge
adc
scas
bound
jl
mov
dec
adcl
sub
push
es
adc
sub
faddl
pop
mov
ss
jmp
hlt
test
leave
repnz
test
roll
adc
mov
add
cli
cmpsb
mov
ffree
pop
scas
leave
roll
int
outsl
add
adc
nop
sub
iret
ljmp
sbb
push
ljmp
stc
in
adc
shr
fidivl
push
scas
cwtl
sub
call
xchg
cmpsb
push
push
insb
sub
cmp
subl
inc
fprem1
mov
sbb
in
ljmp
sub
lock
ja
ss
pop
sub
sub
out
out
lahf
repnz
aaa
in
stos
or
adc
sbb
andb
mov
xchg
cmpsl
icebp
out
sbb
cmp
imul
ja
mov
andl
push
push
sub
cs
andl
pusha
arpl
out
sub
movsl
pop
cmp
test
incb
ficoml
push
jmp
sub
pop
or
mov
aaa
pop
push
int3
sub
push
mov
out
cld
arpl
adc
mov
cmp
xchg
aad
int
mov
sahf
fcomps
add
fcmovb
ret
adc
lods
ljmp
adc
add
pop
nop
lock
jp
add
aas
outsl
pop
cmpb
cltd
stos
lods
nop
jecxz
mov
cmp
and
and
cmp
pop
test
imul
xor
lods
sub
lock
sub
idiv
push
jne
push
or
imul
sub
or
lods
lret
ret
sti
and
stos
sub
sbbb
inc
xor
ja
data16
stc
mov
push
sub
shlb
cmovl
mov
xchg
push
inc
fstl
sub
ret
test
call
addl
cs
add
leave
movsl
push
xchg
xor
pop
sub
lods
bound
ss
out
rol
les
xchg
pushw
push
in
ds
fadds
sub
xchg
sti
dec
pop
xor
sub
adc
in
sub
out
cltd
jno
stos
divl
fcmovu
aaa
sub
inc
push
imul
jle
sub
in
mov
sub
aam
adc
cs
decb
and
out
insb
push
sub
js
sbb
inc
ljmp
dec
sub
lods
gs
jne
push
push
out
or
js
dec
arpl
sub
adc
dec
dec
sub
stc
dec
sub
sub
pushf
and
sub
fs
push
xor
add
je
negb
rcll
and
stos
add
mov
lea
stos
adc
fs
andb
pusha
dec
and
pop
push
push
sub
sub
sub
xlat
popa
ss
cmpsl
dec
jo
mov
dec
shlb
pushf
arpl
les
lea
test
mov
mov
fimull
call
loop
mov
enter
lods
jmp
jmp
jl
les
mov
mov
mov
jmp
out
sub
nop
sub
xor
push
pop
out
sub
sbb
mov
es
sub
add
fisubrs
pop
popf
pop
imul
aaa
mov
out
inc
cmp
add
dec
in
loop
test
sub
lods
out
loopne
push
ss
add
cltd
clc
loop
inc
lods
stc
cld
mov
and
out
jg
stc
xchg
fsubs
and
xchg
xchg
inc
js
xor
stos
mov
xor
lahf
sub
adc
xchg
jae
test
pop
scas
in
sub
or
xor
fimull
stc
sti
add
notb
rolb
inc
pop
hlt
lods
outsb
loope
ss
dec
js
inc
pushl
mov
movsb
mov
and
jmp
inc
sbb
lock
and
xor
sub
push
ficomps
cmp
pop
push
pop
fdivl
imul
or
in
push
or
cmp
push
mov
fucom
xchg
decb
in
inc
cmp
das
insb
and
lcall
mov
sub
sub
dec
or
pop
out
aaa
lret
call
mov
inc
ss
mov
nop
mov
fstps
xor
push
mov
sub
cs
and
cli
mov
fistpll
inc
mov
fldcw
dec
lock
sub
insl
in
and
push
dec
cmp
inc
out
imulb
ret
std
mov
sub
jmp
aad
mov
jno
test
mov
dec
daa
fisubl
adc
movsl
pushf
xchg
lahf
sub
movb
inc
test
pop
out
pop
outsl
pop
sub
or
iret
imull
sub
mov
rcr
inc
adc
mov
xchg
mov
xchg
push
pushf
cmp
push
sub
jp
sbb
in
fstpl
mov
pop
sub
std
js
dec
xor
pop
inc
or
or
dec
stos
out
sub
inc
scas
push
jecxz
test
pop
subl
mov
pop
mov
or
or
roll
loop
pop
enter
fbstp
scas
call
repnz
adc
or
or
push
or
stos
inc
pop
sub
js
xor
popf
inc
inc
in
xchg
xchg
imull
push
sub
xchg
cmp
ficomps
cvtps2pi
lret
stos
mov
add
and
int3
ret
mov
outsl
out
mov
inc
mov
orb
cs
or
rep
sub
loope
xor
sub
lock
js
cmp
imulb
test
fwait
insl
flds
ret
sub
and
pop
mov
in
aas
ret
sub
adc
rcrl
inc
cmp
push
push
outsl
scas
loopne
fidivl
jns
test
sub
out
sub
gs
cmp
dec
inc
ljmp
int
sub
pushf
lahf
sub
jecxz
xchg
pusha
mov
pop
push
inc
jnp
mov
add
dec
sub
pusha
ds
lock
mov
mov
jae
jmp
sub
cs
sub
loop
cvtdq2ps
fwait
sub
push
nop
dec
sub
push
fldcw
mov
cmp
cmpsb
in
xor
scas
jp
test
pop
or
sbbb
call
mov
mov
or
test
lds
repz
cmp
lea
cld
sbb
in
jge
das
stos
dec
gs
cmp
in
loop
dec
and
icebp
notb
faddp
lods
jb
js
sub
mov
add
sub
pushf
dec
subb
inc
adc
jmp
aam
pop
sbb
adcb
jno
mov
call
mov
daa
push
loopne
xchg
mov
add
pop
and
aad
jns
enter
imul
mov
aad
stos
jmp
mov
inc
loope
dec
dec
xchg
in
repnz
xchg
scas
in
mov
outsl
test
xor
leave
inc
mov
xor
in
int3
es
stos
addl
repnz
and
xor
dec
cmc
loop
dec
mov
aaa
adc
sub
clc
test
sub
daa
outsl
xor
pop
lods
cwtl
mov
sbb
sub
or
aad
int
or
js
in
pop
add
incb
cmp
inc
cs
and
std
fildll
stos
stos
repnz
addr16
lods
or
cltd
cs
dec
add
sbb
fs
outsl
stos
mov
ljmp
xor
pop
mov
add
int
sub
add
div
outsb
ss
data16
lock
push
jmp
jne
mov
inc
inc
stos
mov
sbb
repnz
mov
adc
lret
inc
fsubrl
mov
pop
push
or
jmp
fimull
xchg
lahf
daa
sub
or
repnz
outsl
dec
xor
clc
aas
sub
fldenv
sub
lds
mov
and
test
or
dec
jae
adc
sub
int
sub
ret
mov
mov
fwait
xor
xchg
repnz
insb
in
repnz
in
dec
fidivrl
pop
jg,pn
movsl
fwait
cmc
scas
inc
xor
mov
xchg
sub
loopne
pop
aad
std
stc
or
xchg
in
mov
dec
pop
bound
xchg
sub
cltd
push
ret
add
cs
das
std
negl
fwait
int
fxch
fmuls
sub
outsb
jl
dec
lds
rorl
mov
enter
ljmp
leave
repnz
aaa
xchg
xor
jne
xchg
sub
mov
sbb
sub
pop
inc
jmp
jb
push
repnz
push
mov
mov
pop
mov
add
sub
jecxz,pn
sub
xor
aaa
adc
inc
push
adc
arpl
fldl
xchg
mov
lods
sbb
stos
call
push
and
notl
and
lods
cmp
mov
leave
ret
loop
pop
sub
xchg
scas
std
mov
xchg
add
pop
test
sub
push
and
mov
pop
mov
mov
pop
idiv
fwait
es
xor
jmp
das
sub
jle
mov
sub
cmp
test
fsub
sub
adc
fldenv
inc
mov
add
add
orl
mov
jle
test
das
aas
std
fisttpl
push
fsub
loope
xor
in
and
jne
and
insl
test
mov
jno
push
sub
in
es
out
shrl
sub
addl
sub
mov
data16
and
sbb
out
mov
mov
inc
lret
mov
data16
imul
out
or
fsubrl
hlt
rclb
mov
sub
lds
mov
imul
sub
aas
cli
insl
arpl
pop
inc
jge
cmp
bnd
subl
jecxz
xchg
sbb
push
add
pop
adcl
rcrb
xor
jne
pop
out
sub
dec
mov
sub
push
pop
paddusw
addr16
movsl
sub
mov
xor
fwait
jbe
or
pop
mov
cld
dec
adc
aad
mulb
sub
xchg
or
pop
addl
mov
aam
inc
inc
sub
das
imul
dec
cmp
mov
movsl
sbb
sub
jmp
mov
xor
movsb
cli
and
lods
stos
dec
in
sub
fnsave
subb
xor
std
lret
fsubrl
adc
cltd
mov
push
cmp
and
sbb
cmp
repnz
sub
leave
enter
push
lcall
inc
xlat
add
stos
cmp
pop
jp,pn
in
sub
pop
test
ret
lock
mov
inc
or
movsl
aaa
push
aas
dec
scas
lea
xchg
jbe
dec
test
xor
sub
fldt
sub
dec
es
sub
call
and
jbe
push
mov
sub
arpl
rcrb
popa
dec
or
push
nop
cmp
sub
inc
in
xor
fidivrl
into
cmp
hlt
ret
sub
mov
lahf
mov
aad
ret
mov
sub
xchg
into
incb
insl
jno
mov
mov
mov
or
rcr
ret
mov
loope
cmp
scas
inc
fisttpll
test
out
mov
mov
add
das
inc
movsl
sub
mov
push
cmp
scas
icebp
or
sub
nop
adc
sub
pop
aad
fistl
or
insl
lret
pusha
cmp
mov
pop
nop
mov
sub
mov
xor
sbb
inc
jns
enter
out
add
adc
lds
rcr
mov
adc
or
das
test
shlb
cmp
stc
xchg
fwait
sub
mov
or
clc
sub
scas
jnp
add
sub
enter
rcr
lds
orb
or
scas
cmpb
pop
ljmp
movsl
sub
mov
inc
fwait
hlt
sub
xchg
test
decl
push
pushf
popa
leave
fcmovnb
or
push
mov
or
js
mov
sub
or
mov
mov
sub
out
cmp
sub
lret
loope
fs
in
stos
sbbb
push
adc
shr
dec
jne
test
xchg
ljmp
inc
testl
sub
cmp
and
addr16
jo
sbb
inc
pop
mov
adc
pop
ljmp
dec
loopne
test
push
and
mov
sub
hlt
cs
pop
and
jmp
loop
sub
pop
inc
stos
xor
cmp
xor
popf
ljmp
mov
inc
jl
mov
leave
orl
mov
es
rol
lods
or
test
popf
std
mov
inc
dec
pushf
lods
inc
sub
ret
xor
mov
pmullw
sub
sub
xor
cs
test
xchg
cli
sub
sti
lods
sbb
enter
loope
jae
scas
mov
in
pop
ljmp
sbb
pop
loop
call
xlat
jnp
mov
sbb
outsb
mov
pop
push
pop
ret
adc
jl
loope
test
scas
repnz
ljmp
sub
xor
rorl
test
pushl
stos
test
sub
xchg
or
push
mov
stos
xor
sub
sbb
rcrb
mov
mov
cld
sub
outsb
sbb
or
sub
loop
adc
push
movsl
sahf
shll
cmp
orl
add
loope
imulb
inc
or
jae
ss
bound
mov
fcmovu
sub
cs
mov
xchg
mov
bound
dec
lcall
jbe
addb
dec
push
cmpsl
or
lods
pop
jae
fisubrl
inc
mov
jnp
popa
lret
sub
or
lods
jno
jle
jae
cs
jb
jbe
jp
or
dec
jae
jnp
ficompl
push
adc
fwait
das
and
or
or
cwtl
inc
adc
bound
jmp
stos
scas
cmp
or
mov
xchg
in
cmp
or
jmp
sbb
sub
pop
std
int3
outsb
ficoml
inc
push
jbe
cmp
subb
popa
push
out
and
pop
mov
int
mov
pop
data16
imull
mov
adc
mov
jp
aaa
rorb
call
dec
and
pop
add
stos
pop
call
sti
sub
shrb
or
jb
pop
jp
and
mov
data16
add
js
xor
jp
hlt
sbb
push
push
inc
xor
test
sti
aaa
dec
jbe
or
jmp
mov
outsb
addr16
jb
sub
push
pop
mov
shll
cltd
adc
dec
das
dec
push
mov
mov
cld
and
xor
jb
call
xorb
inc
pop
jno
push
inc
sub
pop
stos
sub
push
outsb
les
and
cmpb
jmp
dec
pop
push
push
pop
test
jle
roll
jbe
in
mov
pop
pop
xchg
dec
sub
mov
push
mov
fsubrs
or
jp
mov
xchg
dec
xchg
or
or
scas
stos
cs
jb
xchg
insl
jmp
dec
cmp
push
push
pop
add
idiv
mov
sub
mov
cmp
dec
arpl
rorl
lods
cli
into
mov
ficompl
jb
inc
adc
cmpsb
jp
scas
das
lea
or
repnz
sahf
pop
lock
icebp
adc
mov
ljmp
pusha
outsb
mov
jp
lahf
stc
cmp
mov
outsl
push
jle
popf
orb
cmpsb
dec
adc
fildl
dec
push
mov
rcll
pop
xlat
bound
stos
lret
push
jle
sub
bound
cmp
sub
ljmp
cmp
dec
cmp
cmp
push
sbb
pop
jecxz
xchg
aaa
movsb
bound
ret
sub
lret
push
scas
mov
enter
jle
dec
or
das
push
push
or
sub
xchg
dec
fimull
test
je
sbb
clc
push
pop
pop
or
adc
pop
sub
jb
jp
jle
xchg
pop
dec
mov
pop
mov
mov
lahf
xchg
xor
and
jb
sub
mov
dec
and
inc
dec
sub
mov
and
sub
push
stos
in
outsb
inc
jle
lret
out
test
aad
push
xchg
cwtl
sbb
inc
jbe
ljmp
pop
jae
jnp
mov
mov
lds
adc
or
ss
jae
sbb
mov
jb
loope
inc
jbe
movb
pop
ja
push
cwtl
pop
cltd
xor
push
or
cmp
stos
bound
ficoml
dec
int3
ds
inc
stc
jb
jbe
cs
aad
sub
cli
ror
mov
push
rcr
push
mov
bswap
push
cmc
setg
bts
push
rcr
shr
mov
btc
add
mov
rol
mov
cmp
call
xor
mov
clc
cmp
test
movb
pushl
jmp
ret
and
mov
mov
mov
adc
push
sub
ja
mov
push
jb
jbe
sbb
pop
adc
negl
out
mov
fcomi
in
test
sub
ds
test
popf
pushf
cld
sti
and
push
lods
lods
lods
push
scas
hlt
ljmp
mov
mov
inc
test
cmp
aas
cmp
cmp
aaa
cmp
mov
cli
leave
vpaddq
sub
hlt
push
mov
mov
leave
xor
fcmovnu
data16
mov
outsb
insb
push
jg
pop
inc
jns
leave
or
cld
push
pop
sub
test
popf
into
mov
hlt
loop
pop
mov
rcl
adc
cmp
adc
gs
push
sbb
sbb
push
cld
jnp
xor
fldenv
bound
inc
mov
ds
ret
les
cmp
jnp
xchg
mov
inc
sub
mov
in
inc
lods
push
stos
mov
les
stc
je
int
sub
enter
sbb
mov
aas
add
dec
pop
pop
pusha
je
push
jae
div
mov
test
xor
cmp
cmp
je
mov
push
inc
dec
mov
mov
jmp
lahf
and
sbb
jno
fs
rcl
rcll
rclb
mov
in
test
jecxz
leave
add
xor
leave
int3
enter
xor
aaa
xor
repnz
call
pop
sbb
lahf
add
mov
inc
les
adc
test
pop
fstl
or
in
insb
xchg
add
sub
stos
ror
mov
or
fisttpll
test
ret
and
push
mov
sub
loope
and
mov
dec
jo
sub
shrl
rcl
mov
pop
pop
sti
pop
les
inc
jmp
bound
inc
in
jne
adc
jns
push
inc
loopne
daa
sub
sarb
sub
cmp
daa
rcll
fs
stos
and
push
dec
inc
fiadds
mov
lock
cld
mov
je
mov
pop
mov
cmp
mov
fsubrp
inc
cwtl
sbb
push
or
adc
insl
xchg
sbb
andl
sub
mov
push
mov
mov
icebp
push
test
push
sub
cmp
ficoml
in
jg
cmp
add
add
or
inc
xor
jmp
stc
icebp
scas
mov
lods
int
fs
in
in
inc
mov
test
stos
in
mov
xchg
popf
aam
test
push
test
xor
add
int3
pushl
ret
lods
movb
clc
add
mov
lea
js
push
pushf
ror
pushf
dec
bt
neg
call
call
setl
add
shld
mov
mov
sub
and
lea
mov
sub
test
test
pushl
popl
test
cmp
call
fnstcw
in
push
pop
pop
add
clc
loop
mov
or
jne
or
add
adc
push
jmp
ljmp
out
scas
xchg
fstps
lods
jmp
jmp
movsb
mov
test
push
add
movl
clc
jmp
pusha
call
pusha
mov
jmp
inc
pop
pushf
sbb
cmc
repnz
or
add
or
imul
loope
ss
repnz
lret
scas
push
stos
fmull
inc
ja
mov
or
push
inc
mov
loopne
cltd
push
fsubrl
fcompl
adc
addb
jecxz
ret
mov
cmpsb
jo
xchg
outsb
je
xchg
cmc
cmpl
add
in
out
mov
jecxz
pushf
fcoms
pop
lods
adc
push
mov
pop
pushf
sub
movb
lea
ja
rep
push
call
ffree
xor
jne
sbb
loopne
sbb
jmp
out
mov
cmc
push
ret
and
aaa
pop
lahf
and
aam
es
fisubs
fcmovu
ficomps
rcrl
cmp
push
push
stos
out
stos
in
scas
jmp
fcomps
push
movsb
div
mov
pushf
lea
ja
or
inc
sub
jmp
push
lea
jp
push
pushl
popl
pusha
mov
pushl
ret
pushl
movl
push
pushf
movw
lea
jmp
lea
jne
call
pusha
lea
jne
mov
jmp
pushf
pushl
repnz
pusha
jmp
fdiv
pop
add
xor
add
popf
pop
add
icebp
pop
add
adc
add
icebp
pop
add
popf
pop
add
loopne
jne
dec
mov
mov
mov
dec
dec
mov
lock
xchg
jns
push
cmc
outsb
jo
ja
aad
aaa
mov
pop
sbb
xchg
sub
out
or
push
outsl
pop
or
and
insl
push
outsl
sub
sahf
stos
adc
push
adc
test
test
mov
push
jmp
xor
sar
mov
cmc
cmc
bt
and
pusha
pushf
clc
pushl
add
pushf
push
lea
jmp
add
cmp
pushf
movzwl
lea
dec
sar
mov
pusha
push
test
clc
add
cmc
pushf
cmp
mov
push
test
mov
lea
je
pusha
add
test
cmc
pushf
clc
cmp
pushf
call
or
and
incb
and
and
jle
and
stc
jge
and
jns
add
and
test
jle
jns
andl
std
incl
and
add
cmpl
cld
xor
dec
sub
add
pushf
mov
lea
push
pushf
lea
call
call
push
cmp
stos
mov
cmpsl
sbb
inc
sub
lods
dec
cmp
xlat
sub
insb
nop
insb
imul
inc
fcomp
incb
arpl
lret
jmp
test
out
jne,pn
cld
inc
test
rorl
add
lock
mov
test
popf
loope
loop
mov
mov
mov
xor
inc
lods
push
cmpsb
mov
sbb
es
and
push
pop
inc
ret
out
xchg
xchg
and
add
call
add
fstpl
jne
pop
push
adc
in
loopne
in
jecxz
sbb
stos
test
mov
sbb
push
cld
sub
and
fcomp
fistps
mov
mov
sbb
shrl
test
xor
aad
sub
mov
cmp
cmp
dec
inc
dec
jge
pushf
fchs
adc
shrl
mov
scas
stos
or
cmp
push
call
or
cmp
ficoml
clc
cmp
leave
cltd
addr16
inc
xchg
add
cmp
stos
int
js
mov
call
sbb
sub
mov
cmpsl
out
add
hlt
cli
leave
icebp
mov
int
lds
add
aad
jne
mov
dec
inc
inc
dec
mov
scas
mov
imul
incb
inc
testl
mov
mov
adc
xchg
push
imul
pusha
pop
jbe
dec
mov
dec
mov
test
dec
jne
imul
sub
pushf
ret
frstor
sub
mov
and
addb
mov
insb
sub
scas
js
push
stc
lret
shlb
movsl
xor
stos
pop
clc
cmp
add
and
add
lock
push
stos
lods
dec
jnp
lret
sti
push
pop
pop
or
push
push
cli
lock
cmp
add
cmpsb
jle
cmp
push
insb
pop
pusha
movl
pushf
movl
pushf
pushl
mov
pushl
lea
jmp
pusha
pushl
call
movsbl
pusha
lea
lea
lea
pop
movsbw
movzwl
bswap
mov
push
movsbw
lea
mov
pop
movw
call
push
push
lea
jae
call
bt
shrd
mov
cmc
push
cmpb
pushl
lea
js
pushf
lea
jne
rcl
cwtl
bsr
sub
aas
sub
add
mov
test
js
add
stc
xor
adc
pushf
mov
pusha
cmc
test
jmp
mov
xor
jle
and
push
pusha
xchg
pop
movsb
cltd
sbb
mov
repnz
testl
adc
stos
dec
dec
outsl
xchg
enter
and
pushf
andb
fisttpl
incl
imul
pop
frstor
pop
nop
inc
jns
cmp
push
scas
add
xor
bound
cli
in
enter
push
xor
loop
call
push
sbb
outsl
push
imul
sub
mul
cld
call
push
pop
stc
out
ret
xor
fsubl
pop
xchg
pop
push
inc
es
sbb
call
in
adc
in
in
call
loope
mov
pop
push
push
sbb
sbb
and
sbb
push
jne
pushf
xchg
popf
popa
sahf
xchg
outsb
xchg
popf
fistpl
mov
das
mov
scas
lods
sbb
adc
loop
pop
jmp
repnz
in
push
jge
repnz
pop
jbe
jb
cmp
ss
lret
push
or
dec
mov
cwtl
outsb
xchg
xchg
aad
and
mov
sub
rorl
loopne
out
popa
mov
fs
inc
inc
jecxz
inc
dec
mov
daa
xor
push
adc
push
sar
add
xor
mov
jb
mov
push
lea
push
popf
pop
mov
addb
pop
sbb
lcall
ret
cmp
aad
inc
dec
mov
mov
dec
or
xor
dec
or
push
pop
shll
fldt
mov
and
je
shl
and
bts
sub
daa
daa
sbb
pushf
mov
movzbw
bts
mov
cmc
stc
movzbw
sar
shr
sub
neg
cmp
mov
stc
cmc
jmp
jg
xchg
adc
icebp
cmc
or
incl
stc
std
or
inc
or
ret
push
sub
and
mov
notl
sbb
rol
test
fwait
std
pushf
jmp
or
jmp
jge
repnz
mov
aam
bound
in
arpl
push
mov
cmpsb
out
popf
cmpl
cmp
mov
mov
mov
mov
xlat
adc
dec
add
sub
add
divb
adc
and
fisubrs
rcl
sub
das
sub
fst
xchg
aam
jg
cltd
lahf
cmc
mov
pop
cs
movsb
cs
pop
adc
pushf
mov
fs
addl
or
sub
outsl
push
adc
push
sbb
sbb
in
stos
lcall
mov
jmp
add
jns
lea
je
call
push
push
lea
je
rol
add
test
neg
rol
bswap
sub
pusha
shr
pushl
ror
xor
shrd
mov
or
sar
add
rcl
add
shr
rcl
bsr
mov
movb
bt
test
jmp
stc
pushf
ror
push
pushf
mov
dec
pushf
call
call
pushf
movb
movl
jmp
adc
adc
aam
sub
rcl
insl
push
fldenv
inc
sub
xchg
xchg
xchg
and
arpl
nop
xchg
push
outsl
and
pop
push
jbe
sbb
push
subb
ja
mov
das
adc
dec
sbb
push
repnz
aad
out
push
jecxz
out
cld
or
testl
out
adc
mov
insb
cs
sahf
arpl
daa
mov
jns
fbld
adc
mov
ret
pop
call
dec
imul
mov
mov
mov
push
pop
mov
mov
cmc
add
jno
insb
sub
push
sub
in
pop
mov
cmp
ja
dec
cltd
stos
push
or
aaa
loope
sub
lods
inc
xchg
cmp
sub
stos
lea
inc
mov
fs
adc
cmc
xor
mov
xlat
pop
pop
lcall
push
sbb
add
dec
adc
mov
add
dec
mov
out
and
xchg
mov
pushf
sahf
cmovl
cltd
pusha
and
add
mov
xor
ss
ja
test
adc
in
ljmp
xor
adc
jno
jbe
aas
xchg
insb
scas
jmp
into
mov
xor
aam
jno
adc
loope
dec
mov
jns
pop
mov
mov
ror
sub
jae
xchg
adc
mov
stos
cmp
and
dec
jne
lret
ficoms
inc
insl
fsubl
xchg
push
bnd
mov
mov
mull
pop
movsl
cmpsl
sbb
arpl
and
pop
lods
pop
enter
xor
or
fs
call
call
add
fstl
jne
jp
jge
shrb
stc
test
add
lods
inc
sub
fwait
sbb
or
cmp
rcl
sub
sub
sub
rcl
rcl
xlat
xchg
sbb
sbb
cmc
add
mov
sbb
mov
pop
sbb
push
sub
clc
mov
in
push
enter
mov
fcompl
fcoml
pop
push
cwtl
and
jmp
adc
dec
loop
dec
dec
jg
and
call
adc
out
pmuludq
lock
std
mov
adc
jne
adc
nopl
jl
cli
push
stos
insl
mov
andl
pusha
jns
fcomip
in
adc
cmp
inc
flds
and
sub
jb
in
jmp
imul
mov
stc
mov
test
inc
cmc
pushf
lea
jne
pushf
movsbw
mov
pusha
pushf
mov
lea
jmp
test
or
call
and
adc
cmc
cmc
repz
sti
lock
sti
add
testb
imul
leave
lahf
stos
lar
jo
cmp
lds
dec
dec
mov
cmpsb
ffreep
fldenv
pop
jbe
lahf
aam
xchg
hlt
emms
aam
add
stc
mov
cmp
repnz
mov
repz
mov
push
loopne
leave
sbb
adc
cmpsb
std
jecxz
push
shl
cmp
idiv
ret
mov
test
lock
push
push
xlat
sti
loop
push
xor
sub
lock
sub
xlat
shlb
and
and
and
insl
and
cmp
xchg
xchg
aad
fsubr
clc
and
adcl
gs
jecxz
adc
loope
sbb
adc
sbb
movsb
mov
js
xchg
out
mov
sbb
outsb
sub
mov
cld
loop
pop
mov
pop
out
outsl
out
or
fcmovu
outsb
xchg
xchg
rclb
xchg
test
lods
out
push
pop
xchg
stos
xchg
xchg
rcll
mov
xor
and
jmp
ds
pcmpeqw
daa
fbld
daa
fisubs
fiaddl
pop
out
jns
inc
repz
test
icebp
pop
or
fbstp
iret
leave
xor
into
iret
into
sbb
sbb
sahf
incb
lods
movsb
in
inc
or
mov
mov
cmpsl
push
sbb
mov
ja
call
push
call
aam
lods
xchg
test
rcrl
lea
jmp
mov
dec
pcmpeqw
xchg
ffreep
lds
sarb
movsb
mov
fsts
imul
xor
divl
dec
jno
cld
hlt
ljmp
into
je
jmp
pusha
rcl
and
sbb
and
fldt
or
push
xor
xor
ret
adc
sub
sarl
or
jmp
ret
xor
js
xchg
in
enter
mov
jge
mov
rol
pop
add
lret
movsl
jnp
jp
jl
mov
xor
js
pop
sub
jne
push
jecxz
subl
cmp
and
add
dec
dec
push
or
fisubrs
mov
ljmp
scas
into
jg
enter
leave
mov
mov
stc
inc
les
cmpsl
xor
jo
xchg
stos
lret
jne
mov
dec
mov
dec
mov
mov
mov
int3
sub
mov
imul
pop
push
outsl
push
loope
jge
mov
or
and
and
fsubrl
push
adc
insl
das
sbb
sub
sahf
stos
cs
mov
lea
push
pushf
jmp
test
neg
bt
bt
push
stc
xor
mov
call
sub
cmp
cmp
aas
cmpb
cmpsl
inc
sub
fwait
mov
push
add
idiv
add
or
sti
cld
cld
add
fisttpll
xchg
xor
push
inc
arpl
addb
outsb
mov
push
dec
xchg
lea
cmp
mov
pop
inc
inc
inc
and
pusha
and
adc
dec
mov
mov
cld
add
pop
cmp
ja
cmpb
daa
fsubs
xor
sahf
pop
jg
xor
xor
dec
jae
cmovne
or
pop
cmp
inc
jae
int3
test
jmp
lea
call
test
test
cmc
bt
cmp
jmp
mov
mov
lea
jmp
pop
lret
xor
inc
aas
cmp
je
mov
dec
xchg
std
sarl
shrl
cltd
lahf
bound
popa
pusha
lahf
lcall
add
pop
movsb
ljmp
mov
iret
or
mov
rcl
aas
cmp
jg
jge
js
jl
add
xor
stos
push
insl
adc
shr
pushf
call
mov
pusha
pushf
movl
pushf
lea
jmp
bt
pusha
test
jmp
or
and
jl
jle
jge
mov
stc
jge
and
jns
add
and
test
jle
jns
andl
std
incl
and
add
cmpl
cld
xor
or
call
call
movl
sub
pushf
call
cmc
test
pushf
call
rep
not
pusha
lea
mov
pushf
lea
jmp
push
hlt
pop
or
rol
sarl
fwait
imul
xchg
mov
lahf
add
pop
mov
je
jno
jb
jae
jns
and
fwait
pop
sahf
pusha
inc
inc
cld
push
in
das
enter
pop
movsl
pop
call
or
leave
iret
mov
mov
lahf
test
cmp
daa
or
into
iret
arpl
cmc
lea
jbe
out
add
lea
pop
pop
addr16
rorb
and
fucom
cmpsl
pushf
fucom
fcoml
orb
inc
add
jne
je
jns
jge
addl
jle
sub
enter
call
push
into
mov
push
fsubrs
mov
fsubs
inc
sub
xchg
popl
jo
jae
jp
ja
jb
jb
sahf
andl
xorb
call
pushf
lea
jne
ror
sbb
xor
ror
aaa
mov
stc
test
and
test
add
pusha
clc
neg
mov
mov
cmc
lea
js
push
test
call
not
test
clc
shr
sbb
movzbw
mov
rcl
add
jmp
pusha
movb
movl
pusha
pushl
pushf
pushf
lea
jmp
mov
adc
jne
mov
inc
inc
inc
mov
mov
inc
mov
imul
mov
inc
push
xlat
subb
add
sbb
insb
outsb
pop
push
aaa
lock
adc
jl
mov
idivb
mov
add
insl
inc
and
pop
sub
or
sub
loopne
popf
push
stos
push
pop
dec
inc
inc
mov
leave
ret
pop
shlb
je
dec
push
xor
fldt
xchg
push
adc
outsl
cs
pusha
jle
lea
and
bound
jmp
pop
sahf
or
mov
call
mov
dec
adc
repz
xchg
std
sar
add
dec
dec
dec
mov
dec
dec
dec
dec
mov
mov
cli
push
inc
mov
sbb
lock
and
push
xor
int
mov
and
mov
pop
push
push
gs
dec
pop
shlb
out
add
pushf
jo
pusha
push
pop
sbb
push
adc
pop
outsb
jo
xchg
xor
daa
fnstsw
scas
add
and
jne
setb
cwtl
mov
pusha
pushf
movb
lea
jmp
pushl
movl
push
movl
movb
pushl
lea
jmp
lea
call
jmp
pushl
pushl
shl
movb
pusha
jmp
add
jecxz
out
mov
add
inc
sub
daa
inc
inc
lahf
or
in
adc
pop
mov
stos
push
test
adc
dec
imul
adc
push
test
shlb
mov
and
inc
jb
jne
inc
mov
bound
push
jp
ds
xor
addl
sahf
pop
jle
xor
into
idivl
cli
mov
fldt
mov
lcall
cmc
add
jne
outsb
xchg
insb
xchg
sahf
popf
push
cwtl
sahf
fcompl
les
shlb
sub
cmp
cmp
cmp
mov
xor
enter
inc
and
mov
lret
mov
sbb
loop
jnp
cwtl
push
aas
cmp
mov
cmpsb
push
push
adc
sub
scas
pop
test
cli
cld
out
or
jno
jno
lea
ja
je
lahf
mov
push
scas
les
add
sub
loop
out
ljmp
repnz
out
fistpll
mov
mov
enter
cmp
cwtl
lahf
loopne
xor
push
sti
jns
xor
pop
stos
push
mov
icebp
push
outsb
adc
mov
jbe
in
and
pop
pop
imul
pop
ja
jns
add
sarl
mov
mov
inc
xchg
xchg
popa
push
out
sub
movsl
mov
pop
push
adc
mov
mov
lcall
jb
jns
jbe
jae
push
aaa
jo
push
dec
sub
outsb
pop
cmc
or
mov
lcall
add
add
lock
pusha
lea
pusha
xor
sub
add
dec
bts
rol
push
or
sbb
push
setbe
xor
shl
push
shr
bts
xor
lea
jmp
xchg
push
movl
movsbl
movzbl
cwtl
lea
pushf
call
or
pushf
lea
je
pusha
mov
lahf
call
lea
call
jmp
lea
call
call
call
data16
push
jne
sub
and
in
sub
int3
mov
inc
sub
sahf
ljmp
inc
inc
mov
mov
dec
or
jo
sbb
or
pop
movsl
jmp
or
int3
negb
pop
jmp
push
mov
jp
mov
sub
inc
lret
dec
daa
or
dec
push
loop
xchg
push
loopne
mov
test
pop
add
inc
xchg
popl
mov
pop
mov
mov
test
cmp
add
dec
addb
mov
adc
add
mov
mov
dec
dec
mov
mov
fisttpll
cs
fldpi
jne
push
pusha
shl
cmp
pop
in
in
pop
test
stos
mov
jnp
xor
or
cmovs
ja
or
xor
inc
repnz
mov
or
mov
gs
sbb
sbb
in
out
loope
jmp
mov
push
pop
pop
cmpsb
mov
insb
pop
mov
movsl
mov
addr16
scas
inc
movsl
nop
fcoms
fsub
mov
movsl
jg
add
test
test
cmp
test
push
lea
je
pushf
clc
push
sub
cmc
cmp
call
pushf
pushl
movl
movb
lea
jmp
push
pushf
pushl
lea
jmp
cmc
jmp
add
cmp
cmpl
das
imul
sub
fs
xchg
nop
cltd
cltd
lahf
gs
pushf
fwait
pusha
ret
and
test
ljmp
andl
in
icebp
cmp
cmc
inc
inc
and
or
je
mov
mov
mov
push
in
ljmp
out
pop
sub
es
xchg
imul
ficomps
movsb
in
movsl
sbb
lcall
pusha
lea
jbe
push
sete
inc
rol
mov
rcr
add
rol
mov
sbb
not
rcr
neg
add
and
bsr
movl
bsr
pusha
lea
mov
cmp
clc
jmp
xor
inc
add
orl
lea
shll
insl
pop
andb
mov
pusha
lea
cmp
shll
sbb
fnstsw
and
gs
or
sub
pusha
sahf
movsl
jmp
cmpsl
loopne
popf
fstpl
xchg
sahf
stos
mov
loop
dec
and
jmp
xlat
int
add
mov
mov
add
enter
fstps
lock
push
adc
push
pop
jmp
loope
fbld
cmp
add
das
cmp
cmp
pushf
add
fcmovnu
pop
inc
ficoms
and
pusha
shrl
adc
adc
cs
sub
fcom
test
addb
ss
xor
into
xor
int
ss
fs
aaa
fcmovnbe
ret
add
inc
dec
pop
inc
ficoms
push
mov
pop
add
dec
mov
sub
icebp
pop
or
jne
sahf
pop
mov
cltd
xor
add
popa
pop
push
and
cltd
xchg
fcompl
jl
jb
sahf
mov
scas
popa
cltd
or
call
and
sub
enter
xor
fs
testb
push
sbb
call
fcomps
scas
xchg
repnz
in
xor
iret
and
add
dec
xchg
lea
lea
pop
mov
call
lea
je
movsbw
push
pushf
movw
mov
lahf
mov
pusha
pusha
cwtl
lea
push
movl
pushf
mov
push
pushl
popl
movb
push
pushl
ret
mov
gs
push
push
pop
pop
pop
cmpsb
mov
popf
xor
cmpsb
cmc
mov
jns
push
cld
xchg
xchg
js
xchg
cmp
cmc
out
cmpl
shr
adc
jmp
rorb
dec
lods
ss
xor
cmp
sarl
dec
mov
jbe
and
sarl
inc
icebp
inc
mov
sub
jmp
cld
push
adc
stos
out
add
fadd
les
loop
out
cmpsb
insb
into
inc
lret
lods
jb
xor
sbb
pop
push
inc
dec
inc
inc
or
inc
adc
push
lods
mov
pop
gs
mov
jae
xchg
xchg
and
loope
jecxz
cltd
cmpsl
jecxz
in
fwait
ror
cmp
enter
sbb
push
xchg
jne
sub
rcl
and
xlat
das
sub
xlat
sub
outsl
and
adc
out
shrl
adc
lret
sbb
pop
test
fwait
out
pop
inc
rcll
div
ljmp
push
lods
scas
lods
xchg
fistl
movsl
lcall
stos
addr16
mov
push
mov
push
pushf
lea
jmp
pushf
mov
lea
je
jmp
cmc
cmp
movb
push
lea
je
cmc
pushf
cmp
movb
lea
je
pusha
pusha
pushf
lea
jmp
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
pusha
pusha
cmc
ror
call
lea
jne
jmp
pushf
dec
movw
not
call
call
pop
inc
mov
jne
lahf
addr16
cwtl
fwait
sahf
cltd
fiaddl
shr
cmp
adc
inc
mov
sub
shrb
and
rcr
into
pusha
sahf
sahf
out
mov
jb
mov
xor
mov
cld
loop
mov
lcall
mov
into
aaa
je
push
dec
jno
jae
je
jae
popf
adc
cmp
or
pop
mov
jno
jbe
fmul
cmp
xchg
repnz
add
cwtl
sub
and
sub
rcl
aad
and
add
xor
cs
das
sti
inc
data16
fcmovbe
push
cmp
fisubrl
nop
gs
aas
cmp
aad
pusha
pop
adc
push
push
pop
sbb
dec
jl
fisubs
and
ss
pushl
xchg
push
xchg
outsb
les
push
data16
incb
inc
pop
in
sub
outsl
pushf
xchg
xchg
imul
sub
sbb
pop
sbb
xor
test
ja
add
call
jmp
jp
jne
jb
jno
jb
jge
jns
jle
add
mov
cmp
leave
push
orb
out
cmp
sbb
sub
push
adc
mov
insl
insl
jae
sub
outsb
insl
xchg
lods
xchg
rclb
stos
out
scas
out
or
lcall
fs
jae
push
movw
lea
jne
call
cli
jp
pushl
in
sbb
jmp
sbb
ja
into
xor
outsb
xchg
cltd
push
mov
jbe
mov
xor
xor
cs
jae
inc
mov
pop
call
adc
das
sub
das
and
sti
xor
jno
sbbl
testb
mov
ret
push
push
mov
jp
push
mov
pop
add
cmp
or
xchg
lahf
lds
lods
pop
pop
sbb
adc
adc
out
in
push
pop
push
ss
jb
mov
gs
cmp
push
pop
pop
sbb
fsubs
add
mov
mov
dec
push
lret
popf
lret
iret
xchg
inc
or
add
or
fcoms
xchg
xchg
loop
sti
in
push
sub
test
test
xor
mov
fstpl
and
mov
mov
test
test
repz
xchg
push
xor
xchg
out
rcrl
cmc
push
mov
stc
push
push
test
test
adc
int3
xchg
lea
int
adc
iret
iret
ds
mov
mov
stos
jp
dec
cmpsb
pop
pop
inc
std
adc
dec
inc
imull
inc
mov
sbb
jns
mov
and
pop
pop
movsl
lods
in
in
lods
repnz
push
push
popf
and
mov
xchg
lods
dec
sub
cmpb
int3
mov
bnd
cmc
in
pushf
test
fs
ja
pushf
pusha
lea
jbe
or
add
btc
mov
dec
and
add
btr
and
inc
mov
cmp
push
lea
add
lea
movl
shl
bswap
bsr
bswap
mov
lea
stc
cmp
jmp
movl
pushf
pushf
mov
pushf
lea
jmp
call
in
jbe
je
sbb
push
push
push
adc
loop
adc
jae
sbb
mov
addb
ret
push
pushl
stc
mov
lds
lahf
insb
mov
hlt
xor
aaa
movsb
aaa
ret
xor
sub
or
repz
push
push
ficoml
lea
or
inc
stos
in
stos
xchg
fsts
cmpsb
cwtl
lea
add
jae
popa
addr16
outsl
js
add
inc
and
xchg
dec
sbb
push
lea
jmp
jmp
pushf
lea
jne
not
cmp
mov
pushf
mov
jmp
pop
mov
movzwl
call
pushf
lea
je
push
jmp
mov
sub
pusha
jmp
cld
out
adc
je
fisubs
fneni(8087
dec
mov
pop
in
dec
mov
int3
cltd
adc
or
inc
dec
dec
mov
mov
mov
inc
add
dec
dec
add
lahf
sarl
jg
cmp
aam
push
dec
inc
mov
les
push
cmpsb
movsb
pop
xchg
pop
add
test
cli
jmp
popf
fists
aad
fsub
mov
popf
dec
lods
push
sbb
inc
call
pushf
pusha
movw
lea
jae
not
mov
jmp
lea
jne
neg
jmp
push
pushf
push
push
pusha
lea
jmp
mov
push
sti
je
cmp
les
ds
cmp
shrb
pop
test
pop
push
aas
mov
add
sti
add
cld
add
push
ljmp
push
mov
jae
cmp
add
jmp
fstl
fxam
test
fisubrl
clc
movzbw
mov
mov
pop
pushf
mov
lea
movl
mov
call
not
mov
cmp
push
test
pushf
cmp
call
add
inc
gs
outsl
fs
gs
imul
add
or
je
stos
mov
pop
pop
pop
mov
popf
sub
push
mov
scas
push
sti
xor
cmp
mov
testb
mov
mov
ret
xor
push
popa
push
jecxz
dec
mov
jns
xchg
fwait
push
pop
sbb
mov
sbb
fidivrl
lcall
push
test
push
push
adc
ds
sbb
adc
push
push
push
rorb
shrd
mov
test
sar
add
rcl
ror
mov
clc
test
pusha
movl
lea
je
bt
sub
pusha
cmp
jmp
pushf
pusha
pushf
lea
jne
call
and
gs
fiadds
je
in
mov
in
mov
push
xor
jl
test
jl
jge
jb
out
or
push
lods
adc
push
aaa
and
inc
jb
push
pop
icebp
or
ret
xchg
lret
cmp
cltd
xchg
sahf
addr16
jo
or
ss
scas
sub
mov
divb
mov
rcl
andl
mov
ret
stc
je
scas
push
stos
add
sbb
cmp
sub
sub
fsubrs
adc
pop
pop
push
mov
scas
test
jno
fnsave
test
jae
mov
mov
dec
insb
cmp
jne
cmp
ficoms
mov
sub
sbb
inc
dec
push
fcompl
popf
pop
jmp
mov
call
cli
add
and
lret
sahf
pop
je
xor
ja
jo
add
lods
add
inc
jg
mov
btr
setg
clc
jmp
jmp
push
xor
clc
je
mov
pop
mov
inc
mov
push
jecxz
mov
insl
pop
xor
jecxz
adc
loope
loopne
cwtl
repnz
arpl
and
and
and
iret
sbb
hlt
adc
mov
and
or
xchg
imul
in
incl
aas
push
ljmp
adc
adc
add
push
inc
mov
lods
push
cmc
repz
xor
cs
jmp
in
lock
loope
ja
inc
inc
cwtl
xchg
iret
ljmp
lods
movups
inc
inc
inc
aaa
sti
je
inc
inc
pop
adc
xor
push
add
sub
and
outsb
inc
fcomps
mov
fsub
mov
outsl
int3
cmp
mov
out
or
lods
aas
test
aaa
into
push
pop
push
cmpsl
movl
and
pop
in
mov
insb
test
pop
pop
lods
in
pop
stos
mov
push
pop
xor
lea
inc
jle
jns
or
cmp
out
push
aad
sahf
aad
call
test
divl
dec
dec
dec
or
cs
mov
sub
leave
mov
or
sbb
lods
test
push
stos
push
pop
pop
pop
popa
add
sarl
cltd
inc
jns
daa
je
aas
or
dec
lcall
pop
pop
ljmp
pop
xchg
cwtl
pop
or
lods
and
fstpl
mov
mov
or
jb
jg
lret
iret
jle
push
inc
dec
add
dec
mov
sbb
push
push
push
insl
push
push
push
insb
push
dec
mov
cmp
or
mov
push
lea
jmp
push
pushf
pushf
lea
jmp
bt
clc
call
ret
divb
cmp
aas
ret
lret
ss
stc
repz
jecxz
mov
sbb
mov
push
mov
out
in
sbb
jmp
adc
pop
sbb
es
and
sbb
test
pushf
fnstcw
inc
icebp
decl
ds
mov
lea
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
or
je
ss
cmp
imul
dec
adc
add
jmp
push
cld
mov
mov
mov
test
pop
jge
and
xlat
pop
int
adc
insb
popa
popa
pushaw
lcall
cltd
cmpsb
loopne
sahf
sahf
ficompl
mov
repz
fwait
outsl
popa
loop
movsl
adc
mov
pop
adc
movsb
sub
adc
and
cmc
je
or
std
hlt
testl
mov
jmp
js
sub
arpl
pop
loope
adc
in
out
call
adc
pop
push
movsl
mov
inc
jae
ja
jne
or
jbe
jno
or
jge
lahf
mov
add
jmp
jge
xchg
cmc
je
pop
push
pop
scas
test
lods
push
push
lods
push
adc
loope
mov
pop
or
fistpl
push
push
xchg
mov
xchg
dec
pop
xchg
lea
pushf
leave
mov
dec
push
pop
or
inc
mov
cmp
jno
or
inc
jnp
pop
lods
sbbb
fisttpl
je
add
cltd
outsl
or
add
jmp
pushf
adc
pusha
push
lea
jmp
mov
bt
ror
pushf
pushl
call
rcr
push
shl
mov
das
cmc
sub
add
push
clc
push
pusha
mov
bswap
pushf
mov
sbb
das
bsf
mov
cmp
test
pushf
lea
je
shrd
sbb
mov
adc
and
add
btc
btc
sar
mov
stc
jmp
arpl
hlt
je
dec
mov
mov
adc
push
jne
cmpb
mov
mov
add
add
repz
add
sti
aad
aad
fcoms
dec
test
pop
add
mov
sbb
mov
popf
or
or
inc
mov
jmp
rcl
cltd
movsb
lcall
ficoml
dec
shl
out
loope
not
lods
stc
add
cmc
bt
ror
pushf
dec
movb
clc
bt
cmc
neg
pushf
pushf
movw
push
xor
call
push
movsbw
not
movsbw
pushl
not
not
push
jmp
add
pusha
bt
mov
cmp
movzwl
movzbl
shr
xor
mov
call
dec
sub
repz
add
dec
loopne
push
sbb
sub
fdivrl
push
mov
jl
orl
adc
jmp
adc
add
or
push
stos
test
pop
pop
pop
sbb
bound
sub
xchg
add
test
jmp
jmp
adc
jmp
push
lock
std
std
mov
xchg
ret
jnp
jns
enter
cs
xor
pop
cmp
xor
imulb
sub
orl
inc
aam
push
lret
add
out
adc
test
push
fstl
add
mulb
in
xchg
push
jbe
add
cmp
add
adc
enter
filds
cmp
pushl
pushl
movl
jmp
repz
pushf
pushf
movb
movl
pusha
pushf
call
lahf
setae
jmp
popa
jnp
bnd
jbe
xorl
xor
jl
xor
call
sahf
or
mov
or
adc
fcomps
mov
xchg
xchg
dec
dec
repz
jecxz
jge
jg
mov
ss
xchg
stos
cmp
mov
dec
mov
jl
out
mov
xchg
mov
sub
mov
or
pop
pop
mov
pop
inc
dec
movsbl
mov
adc
loop
inc
cmc
cmc
cmc
mov
mov
rorl
fldcw
pop
xchg
push
xor
cmp
or
iret
sub
je
add
push
pop
and
movsb
mov
das
aam
icebp
xchg
xchg
push
xorb
cmp
cmp
xor
iret
lret
xor
cltd
dec
push
jno
jb
or
inc
push
inc
push
movsl
icebp
je
lea
jb
shrl
mov
dec
mov
in
pop
aad
or
inc
mov
mov
dec
dec
mov
mov
and
cs
mov
mov
fadd
jnp
xchg
xchg
push
jmp
fmul
xor
dec
sarl
cmpsb
jae
mov
pop
xchg
psubusb
insl
or
mov
sub
pop
push
sub
lret
push
std
sub
aam
inc
pop
pop
icebp
xor
inc
adc
push
pop
push
dec
cli
mov
int3
xchg
or
repz
addr16
lahf
test
mov
cmp
and
jp
stos
stos
scas
out
lock
repnz
dec
dec
cmpsb
pop
pop
push
pop
sbb
bound
and
fmull
or
pop
mov
lea
jae
clc
cmp
cmc
test
sub
jmp
xor
sub
je
add
sti
sti
push
or
or
or
jg
cli
pop
push
rcll
sub
or
adc
jle
push
fcmovbe
mov
push
pop
adc
or
dec
dec
dec
rdpmc
ja
jb
jle
jge
jge
and
mov
popl
pushf
push
movw
pusha
pushl
ret
mov
shrl
and
fcomp
fcomp
and
daa
ficomps
add
inc
mov
jecxz
gs
pop
sub
loope
add
fwait
mov
shll
pop
or
jmp
loope
cltd
fstpl
stos
xchg
aas
push
sahf
stos
lahf
pusha
and
notb
lock
loope
in
out
out
jecxz
in
push
sbb
pop
arpl
dec
cld
lock
dec
stc
cli
imul
and
mov
and
arpl
adc
out
call
and
test
fistps
xchg
xchg
stos
test
rcl
or
inc
fisubl
lods
sub
ret
jns
out
mov
mov
add
popa
data16
fimull
xorb
xchg
inc
or
dec
jbe
jb
jns
add
ljmp
scas
lahf
call
ja
mov
je
out
loopne
loopne
push
in
out
ljmp
pop
cmp
xchg
cmc
mov
add
push
cld
inc
inc
icebp
push
or
or
stos
loope
in
fistps
dec
testb
stos
orl
xchg
bt
dec
fmull
vorps
lea
mov
cli
int
inc
pop
push
mov
scas
stos
jnp
mov
ret
push
fsubr
adc
pop
dec
xchg
and
sbb
sbb
imul
fnstsw
and
jp
jne
cmp
pusha
push
push
and
push
popa
out
lret
inc
mov
inc
jle
fs
pop
sub
mov
and
xor
mov
mov
lret
jp
cmc
testb
cmp
in
sbb
aam
jle
lret
or
shll
pop
into
adc
stos
pushf
lahf
in
idivb
adc
cmp
dec
dec
cmp
aam
arpl
xchg
add
pop
pop
mov
out
imul
sub
pop
pop
mov
sbb
ss
jne
or
icebp
pop
cmp
mov
fsubr
pop
lahf
push
adc
mov
cmpb
sti
sub
clc
cmpsl
ret
xchg
fcmovnu
test
lret
add
xor
xchg
test
shl
jg
sub
push
adc
jo
add
int
fsubrs
sub
xchg
mov
cmc
mov
push
adc
adcb
mov
mov
add
jg
mov
scas
xchg
scas
pop
sbb
xchg
push
push
mov
xchg
xchg
rcrb
scas
jmp
jmp
pop
mov
je
push
pushf
stos
pushf
mov
mov
mov
lea
push
pusha
call
lea
jne
pusha
pushf
pusha
mov
pushl
lea
jno
push
mov
mov
call
insb
jbe
in
je
loope
in
loopne
dec
mov
arpl
lret
pop
loopne
stc
pop
aas
pop
push
push
sahf
es
xor
lret
ror
ss
lret
xor
fildl
rorl
repnz
xlat
inc
inc
inc
ja
jmp
push
imul
push
daa
cmp
pop
loopne
popa
imul
es
add
test
imul
or
je
les
cmp
jno
in
pusha
pop
loopne
xor
sub
mov
pop
pop
push
movsb
mov
cmpsb
pop
adc
leave
mov
xchg
imul
xlat
aam
inc
mov
mov
pop
jbe
lea
arpl
or
scas
or
sub
dec
packssdw
loope
jno
cmp
mov
xor
pop
add
jne
sahf
cs
adc
ja
das
das
sub
gs
je
les
add
fsubr
out
in
and
cli
clc
mov
stc
push
fsubs
mov
in
jecxz
stos
call
aam
scas
call
and
call
test
pusha
stc
test
cmp
pushf
call
mov
call
and
gs
stos
scas
stos
mov
mov
aaa
sbbb
mov
out
inc
loopne
jmp
daa
push
and
stc
mov
stos
sarl
sbb
inc
shlb
xor
jno
push
aad
in
xor
out
jle
loop
mov
test
add
add
mov
and
xchg
cwtl
adc
imul
mov
mov
mov
daa
mov
dec
adc
pushf
lea
jae
jmp
mov
pushf
push
pusha
pushl
ret
mov
jmp
gs
out
sbb
sbb
xchg
enter
sub
test
pop
iret
pop
or
pop
pop
mov
dec
mov
dec
inc
dec
xchg
pop
popf
es
enter
insb
inc
mov
int3
loop
iret
dec
je
aas
insb
xlat
push
cmpb
ljmp
sbb
shrb
dec
mov
mov
xor
dec
or
dec
jnp
sti
xchg
fs
outsb
push
xchg
push
push
fs
and
xchg
xchg
xchg
sub
test
inc
xchg
mov
clc
cmpsl
mov
push
push
std
sti
push
jb
jo
cmp
add
arpl
fsubs
mov
pop
sub
ret
xor
ja
or
cmp
xor
dec
push
mov
cmp
adc
decl
and
jne
pushf
mov
inc
pusha
inc
push
push
movl
pushl
lea
jmp
jmp
pusha
movb
mov
lahf
mov
bswap
pusha
lea
push
pushf
movw
movl
push
movb
call
pushf
lea
call
call
clc
cmp
jmp
xlat
pop
mov
inc
mov
dec
mov
mov
mov
sub
mov
cwtl
arpl
mov
sbb
lcall
lcall
xchg
enter
adc
pop
lock
mov
add
dec
rolb
daa
ds
add
xchg
pop
cmpsl
loopne
into
mov
mov
hlt
mov
mov
mov
mov
mov
sbb
add
lea
ja
jo
pushf
imul
jmp
movl
jmp
call
push
jmp
movw
lea
bswap
bswap
bswap
mov
call
pusha
lea
jae
dec
pushf
mov
jmp
push
movb
movb
movl
jmp
movb
jmp
pop
mov
mov
push
sbb
outsb
or
std
cltd
lret
mov
enter
push
loop
dec
pop
xor
in
pop
inc
stos
mov
mov
pop
or
mov
inc
add
xor
or
js
or
stos
dec
xchg
sarl
and
adc
lea
cmp
jmp
cmp
gs
push
push
push
test
push
scas
test
pop
stos
mov
repnz
fcmovnb
xchg
jmp
inc
pop
outsl
push
test
clc
add
test
ds
js
or
jb
lret
ret
enter
sar
xchg
cld
mov
stos
popf
stos
ja
xor
aas
sahf
mov
je
jns
jnp
jne
mov
out
jl
sbb
pop
decb
mov
mov
mov
mov
push
mov
adc
adc
mov
jns
stc
out
sbb
xchg
rcll
mov
or
test
rorb
add
inc
and
or
add
movzbw
lea
movb
jmp
mov
bound
sub
inc
cmp
inc
andl
fsubrs
mov
test
popa
aas
rorl
mov
inc
jb
inc
out
sub
and
and
mov
sub
or
xor
inc
or
cmp
scas
push
ss
or
repz
cs
ljmp
xorb
dec
stc
es
and
call
xchg
loope
lcall
and
dec
adc
ret
in
pop
inc
lahf
xor
inc
jmp
addl
lds
xor
ljmp
sub
ljmp
in
adc
bound
sbb
jbe
scas
sub
mov
mov
frstor
in
in
or
jo
outsb
into
test
inc
rorl
jmp
inc
icebp
test
push
std
sub
das
add
out
stos
test
lods
enter
pop
std
or
clc
inc
lea
outsb
fstpl
test
dec
addl
jmp
dec
fnstcw
fld1
inc
mov
adc
adc
aas
cs
outsb
sbb
inc
push
fidivrl
sub
inc
out
mov
mov
or
cmpsb
cmp
xchg
sbb
pop
or
ljmp
cmp
cmp
adc
adc
push
cli
cs
clc
imul
sbb
sub
xorl
mov
xchg
jb
adc
or
adc
push
into
imull
shlb
xor
fsave
lret
out
dec
cmp
sbb
fucomi
dec
sbb
cmp
or
notl
xchg
or
jmp
repz
mov
rcrb
test
out
jbe
ud2
ja
hlt
lock
add
notb
push
ljmp
out
leave
fisttpll
sub
loopne
ret
fildll
ss
imul
stos
jp
lret
shll
dec
and
dec
sahf
fs
xor
jecxz
mov
inc
mov
nopl
out
jl
aaa
mov
pop
sbb
into
fsts
inc
sub
xor
sahf
xor
xchg
jp,pt
pop
fdivrs
mov
ret
cli
jmp
inc
cmp
push
das
jecxz
sti
aaa
inc
dec
adc
or
testl
fisubl
aaa
lret
pop
and
fwait
ja
mov
add
mov
xor
mov
adc
adc
sub
mov
push
decb
invd
lock
sbb
cli
stos
jp
outsb
or
cmp
cmp
fmuls
int3
dec
dec
push
mov
into
push
push
leave
sbb
int3
ljmp
push
cmp
sub
sbb
sub
enter
sti
das
mov
dec
in
mov
sahf
xor
sub
sbb
push
icebp
sbb
leave
push
loope
mov
xchg
out
fidivl
stos
add
lret
sub
ljmp
or
jp
jmp
or
repnz
in
cmp
or
xchg
or
sbb
lret
mov
jle
dec
sbb
into
mov
push
mov
js
imul
add
scas
mov
push
sbb
in
dec
and
mov
or
pminsw
aas
ljmp
enter
ss
cmp
pop
fisttps
cmp
lods
rclb
rdtsc
cmp
fisubrl
lret
fisubrl
mov
mov
and
jns
int3
push
stos
adc
dec
mov
fisubl
out
lret
fcmovu
cmc
lock
xor
inc
out
sbb
or
sbb
sub
mov
mov
and
orl
and
enter
adc
test
cltd
mov
test
adc
scas
sbb
dec
mov
mov
dec
adc
ljmp
mov
sub
or
out
lret
or
jb
push
test
lret
outsl
imul
sbb
scas
or
out
pop
mov
add
into
mov
clc
dec
cmp
test
dec
or
subl
xchg
cmp
or
repnz
xchg
push
sub
sub
sub
int3
scas
js
cltd
in
sub
out
cs
push
fisubrl
jp
imul
cmp
sub
repnz
xchg
jp
stos
cwtl
jle
leave
insb
lret
fisttpll
push
stos
mov
cmp
push
jbe
out
mov
scas
dec
push
or
stos
out
or
sbb
out
mov
enter
inc
sub
adc
push
sbb
mov
je
jb
jnp
sbb
jmp
int
push
sti
repnz
cmp
stos
mov
cmp
mov
dec
push
js
mov
pop
pusha
sti
adc
and
int3
mov
ret
sub
scas
push
ret
rorb
into
sti
push
out
call
mov
mov
mov
aaa
cmp
enter
push
ljmp
fnstenv
pop
or
or
ljmp
sub
and
jp
ljmp
xor
imul
cmp
cmp
jbe
fstpt
fwait
clc
adc
stos
sub
scas
adc
push
or
outsb
dec
scas
into
pop
mov
mov
mov
repnz
dec
scas
push
add
or
lret
call
lcall
out
clc
or
in
scas
lret
rcrb
pusha
fcmovnb
outsb
test
notl
dec
int3
out
or
push
fdivs
loop
push
cli
dec
lret
mov
call
sub
lret
mov
dec
push
test
outsb
jmp
mov
mov
leave
adc
cwtl
or
dec
cltd
ror
mov
inc
inc
or
mov
or
fldenv
iret
cmp
dec
jae
loop
fstpt
fldt
and
out
pop
mov
shr
sub
jbe
adc
mov
inc
sub
mov
call
lret
xor
sbb
aaa
cli
cmp
mov
mov
mov
and
push
mov
mov
repnz
dec
leave
fidivrl
inc
in
mov
or
mov
cmp
ds
out
mov
stos
mov
mov
mov
imul
mov
mov
jae
aam
sbbb
stos
outsb
stos
or
imul
sbb
adc
dec
imul
out
imul
test
adc
cmp
or
in
cmpsb
mov
cmp
xchg
or
repnz
mov
and
push
sub
inc
mov
repnz
cmp
sub
call
lret
test
mov
daa
push
stos
lods
fsts
es
cs
jmp
sub
sti
sub
adc
dec
pop
cmp
jns
pusha
or
sbb
fcmovbe
sub
cs
fcmovu
sub
cmp
fwait
data16
lcall
xor
std
mov
js
out
sbb
pop
repz
push
outsl
mov
xorl
cmp
stc
jno
cld
stos
int
or
pop
mov
out
adc
sbb
xor
bound
xchg
leave
jmp
cli
movsb
fmuls
out
sbb
xor
ret
pop
jbe
push
sbb
cli
call
scas
ficoml
mov
sbb
mov
pop
xor
pop
or
scas
or
mov
jae
or
dec
add
xor
cmp
bound
mov
lret
das
cmp
xor
jp
lcall
call
mov
xor
enter
cmp
fdivs
test
push
mov
js
xchg
push
dec
mov
imul
scas
mov
push
xor
jb
aas
sub
mov
imul
xor
pop
fsubrs
mov
cmp
int
inc
xor
outsl
cli
sti
sub
lret
lcall
clc
cli
dec
jmp
nop
sbb
pop
jle
cmp
mov
push
xor
cs
pop
cmpsl
mov
outsb
dec
inc
push
jae
imul
dec
xchg
push
and
xor
js
jmp
mov
adc
pop
test
test
out
inc
repz
testl
inc
pop
inc
lret
inc
iret
inc
sarl
scas
dec
push
mov
mov
scas
imul
data16
and
imul
or
imul
xor
xchg
fimull
push
insb
ljmp
jp
jp
lock
mov
xor
push
fcomps
cmp
dec
jae
inc
fwait
jbe
stos
into
fs
popf
or
mov
sub
test
push
sub
jnp
gs
or
cwtl
addr16
jno
cmpb
fdivs
xor
mov
cmpsl
xchg
jnp
iret
sub
or
sub
mov
mov
scas
rorb
push
repnz
mov
xor
dec
aas
dec
negl
cmp
cmp
adc
jmp
mov
sti
mov
scas
lods
jmp
cmc
mov
ja
and
xor
mov
lret
and
sub
xchg
imul
imul
iret
inc
mov
testl
mov
cmp
aaa
fwait
cmpsl
rorl
scas
ljmp
inc
mov
imul
inc
cltd
sub
push
subl
sub
jge
loop
das
test
mov
push
jnp
pop
fidivl
pop
pop
cmp
mov
or
sub
ljmp
sub
and
dec
jbe
mov
lds
or
ja
dec
out
jb
sub
int3
mov
cmp
sbb
out
sarl
aas
or
add
mov
pop
sbb
aas
pop
add
mov
int3
and
mov
jge
mov
sbb
ret
ffreep
test
stos
addl
js
test
sub
fmuls
jg
mov
scas
pop
cld
cmp
repnz
ret
das
mov
xor
push
testl
xchg
lret
or
xor
andb
sbb
stos
sub
test
ljmp
jbe
jl
xlat
ljmp
sub
dec
daa
pushf
jbe
int3
ret
and
nop
repnz
cmc
hlt
lock
add
out
lret
jbe
jle
das
aas
loopne
mov
mov
adc
jmp
push
adc
inc
leave
pop
cld
sti
push
adc
ret
cmp
ljmp
test
aam
pushf
push
cld
xchg
fcomps
sub
test
test
orb
les
std
lea
aad
or
in
leave
xor
mov
pop
or
mov
iret
fcmovnb
dec
fsts
stos
mov
ja
pop
mov
dec
jnp
add
loope
data16
in
cmpsl
fldt
push
pushf
es
sbb
addr16
push
inc
ja
clc
jb
sbb
fadd
dec
cmp
sbb
xchg
fcoms
jl
mov
sub
dec
xchg
jne
sub
les
cmpsl
ficompl
pop
push
mov
daa
pop
neg
ja
cwtl
sub
lahf
loop
mov
fisubrl
push
stos
dec
sbb
scas
adc
mov
and
sbb
sbb
mov
mov
mov
xor
jp
clc
imul
mov
dec
jbe
xor
or
jmp
jmp
jae
dec
negl
scas
jb
jbe
jle
inc
sub
cmp
adc
aas
jbe
lret
in
data16
scas
jae
adc
mov
xchg
jno
call
scas
call
hlt
push
xchg
fisubl
fcmovu
mov
or
jbe
adc
fldcw
adc
mov
cli
sti
jae
or
pop
in
sub
or
repnz
mov
mov
imul
dec
xor
ljmp
mov
mov
ror
pop
mov
adc
lcall
adc
outsb
add
pop
mov
add
lret
clc
adc
push
cli
repnz
les
cmp
pushf
or
cmpsb
add
sbb
repnz
or
scas
sbb
decb
or
out
call
mov
or
sbb
mov
cmp
cmp
jg
cmp
add
pusha
mov
mov
adc
push
push
lods
repz
lret
iret
jnp
adc
clc
pop
inc
push
jecxz
adc
lcall
movsl
sbb
and
out
std
adc
lcall
aam
mov
aas
mov
imul
out
inc
repz
xor
jmp
inc
sbb
xlat
ljmp
fstps
push
mov
push
xchg
adc
outsl
xor
dec
mov
insl
and
fwait
icebp
push
sbb
imul
fisubl
cmp
mov
or
adc
dec
xchg
cmp
dec
in
cli
pop
cltd
lcall
mov
push
fmuls
outsl
lahf
lahf
sbb
or
loope
icebp
sbb
jnp
fsubr
psubd
xor
push
sbb
sbb
pop
dec
sub
lahf
out
rorb
inc
mov
imul
lods
jno
and
es
sti
scas
push
lock
test
or
xchg
call
into
cld
jle
ljmp
push
sub
add
sbb
jns
add
add
jae
mov
cmp
repnz
bnd
stos
leave
xorps
jnp
push
inc
jnp
sti
lock
subb
stos
jp
cli
cs
iret
dec
fistpl
pop
and
sbb
adc
loop
fisubrl
add
or
add
arpl
cld
pop
push
adc
ss
stos
dec
mov
or
push
dec
seta
push
dec
mov
sbb
jp
lcall
adc
mov
cmp
and
lcall
mov
inc
call
sbb
jns
adc
mov
mov
jmp
sarl
arpl
mov
jp
clc
mov
mov
mull
ljmp
add
jecxz
int
pop
or
imul
mov
cmp
xor
jmp
jp
cmc
mov
mov
outsl
mov
stos
sub
repz
out
fcmovu
push
push
lea
ljmp
jg
scas
push
sti
adc
adcl
testl
mov
call
mov
mov
rclb
cmp
jae
sub
dec
or
lahf
sti
sbb
xchg
sti
xchg
test
inc
sbb
cmp
cmp
adc
cmp
pop
push
outsl
leave
stos
pusha
mov
ret
aad
ret
out
call
dec
or
lret
js
mov
ja
scas
cmp
add
xchg
in
fwait
dec
jae
jns
dec
cmp
and
push
sti
jecxz
shlb
cmp
adc
out
or
or
xor
adc
xor
repnz
adcl
jle
adc
lret
sbb
push
push
sbb
popf
iret
push
push
and
iret
cltd
repnz
test
push
dec
lret
jecxz
lret
mov
testl
pop
jae
out
sub
push
std
adc
xor
loop
add
add
xadd
jae
mov
mov
cltd
jge
pop
sub
fimull
movsb
jle
icebp
movl
mov
mov
lahf
push
fwait
sbb
push
mov
call
pop
jae
repnz
push
jns
mov
jo
arpl
imul
jae
aam
mov
or
mov
pop
fidivrl
add
xchg
popa
cmp
pop
imul
lret
shl
lret
push
scas
xor
call
fwait
mov
cltd
test
daa
sub
stc
sbb
bound
std
lock
push
ret
mov
shl
lret
rcr
mov
pop
sub
aam
mov
pop
icebp
fldl
sub
imul
cmp
push
ljmp
jns
fiaddl
stos
mov
inc
enter
out
repz
fldt
sbb
mov
cmp
stc
fcomps
cmpsl
dec
and
inc
dec
sahf
xchg
sbb
jo
mov
fstpt
push
out
pop
xchg
jb
ja
or
sbb
jno
mov
clc
mov
mov
xor
arpl
or
lret
xor
shll
fcomp
lock
sbb
push
push
call
xchg
cmp
jmp
and
mov
roll
push
scas
sti
push
enter
fcomp
loop
xor
xor
inc
enter
and
jnp
mov
ljmp
mov
sub
test
mov
test
push
cmp
xor
mov
pushf
lcall
fdiv
sti
loope
add
add
stos
mov
push
push
jnp
adc
or
pop
gs
adc
pop
or
mov
push
test
int3
cld
adc
ds
into
cs
xorb
fwait
daa
or
bnd
sbb
dec
sub
or
pop
out
stos
shr
inc
mov
and
mov
sub
test
mov
loopne
push
scas
adc
inc
sub
stos
or
push
mov
jbe
xor
lods
and
and
xlat
hlt
cwtl
sbb
xor
and
in
stc
enter
or
stos
sbb
dec
ljmp
in
xchg
sbb
leave
fildll
lret
lcall
dec
inc
dec
push
lds
stc
push
sbb
or
fimull
mov
push
mov
je
or
sahf
fxch
fsubr
imul
and
or
pop
fsubrp
aaa
mov
jnp
push
mov
in
jbe
sbb
outsl
jp
or
cwtl
sbbb
mov
and
inc
sbb
enter
leave
pop
sbb
mov
adc
or
clc
rorb
or
sub
rorb
or
cmp
fldl2t
das
imul
stos
arpl
jmp
mov
js
mov
or
push
test
cltd
iret
inc
or
outsl
dec
stc
fdivs
scas
push
add
fsubrs
lret
lret
fdivs
iret
mov
sbb
or
jmp
inc
sbb
and
sbb
jle
loop
mov
rcl
in
mov
mov
decl
int
sbb
js
dec
mov
or
and
jp
dec
bnd
iret
add
pop
out
or
fmuls
mov
push
sbb
jb
mov
add
xchg
cltd
inc
int3
stc
or
adc
add
cld
or
jp
das
dec
fsubrs
add
fldcw
push
dec
fsubrs
and
and
jmp
stos
loop
or
lret
in
lret
jbe
bound
add
and
mov
call
into
dec
dec
add
inc
add
int3
dec
cld
int
fadd
or
add
mov
shrl
mov
mov
scas
sub
mov
xchg
repnz
loope
fmuls
call
add
mov
mov
dec
ret
inc
jnp
insl
insl
test
lods
xchg
mov
xor
sbb
stos
sbb
shrl
or
mov
cli
stc
stos
or
outsb
mov
jmp
cli
stc
adc
xor
mov
mov
leave
cmp
test
stos
lcall
dec
jmp
ror
ficoml
jg
rcr
or
icebp
dec
sti
stc
clc
sub
sbb
add
dec
add
ror
push
incb
xchg
or
and
dec
jmp
sti
add
or
stos
jnp
lret
fidivl
shr
arpl
addr16
and
gs
cmp
lods
fcmove
xor
ja
lods
out
push
outsl
inc
lods
out
cmpsb
fcmove
inc
push
mov
xor
into
and
arpl
and
unpcklps
popa
sub
and
aas
inc
fisubl
movsb
cmp
out
imull
cmp
lret
into
sub
cld
push
inc
sub
and
pop
push
cmp
aad
sub
mov
jmp
cmpsl
sub
out
add
push
pop
jle
sbb
push
sub
or
mov
xor
ret
mov
xor
add
mov
jnp
imul
popa
mov
imul
repnz
sub
mulb
dec
xlat
and
adc
lret
pop
adc
arpl
adc
inc
or
mov
or
out
ds
divl
lods
fisubs
cmp
sub
add
jmp
sub
or
mov
fisubl
inc
shll
cmp
imul
push
adc
test
sbb
cmp
sbb
addr16
jl
adc
and
mov
xor
cmp
cmp
inc
dec
call
adc
inc
and
sbb
xchg
rolb
fisubl
fisubl
inc
inc
push
fnsave
xor
hlt
ds
mulb
orl
cmp
or
into
es
pop
lret
xor
out
cmp
cmp
mov
dec
or
mov
jmp
sub
inc
jecxz
nop
leave
dec
mov
enter
push
stos
or
inc
subl
inc
cld
aas
and
mov
mov
xor
hlt
sysenter
and
scas
mov
mov
jb
adc
xchg
ds
push
and
push
test
imul
pop
bound
popa
nop
pushf
xor
mov
push
nop
sub
mov
leave
sub
lock
xor
and
ret
rcrb
xor
addb
gs
and
lret
into
xor
fcoms
inc
mov
xchg
and
push
lret
cmp
popf
pop
push
and
out
add
xor
notb
fsubrl
dec
in
jg
mull
idivb
ss
dec
notb
sbb
test
xor
lret
int3
xor
ss
imul
jmp
xor
add
into
sub
scas
sbb
aam
adc
aas
cmp
cmp
test
mov
jl
fxch
aas
hlt
cmp
scas
pop
mov
into
xchg
mov
into
aas
rclb
lret
ljmp
mov
fidivrs
dec
in
lock
cs
out
pop
loopne
cmp
push
das
ror
xor
mov
jnp
jle
lods
movsb
push
adc
xchg
dec
outsl
mov
or
sbb
jae,pt
push
bound
xor
mov
cld
mov
push
and
mov
mov
mov
jmp
mov
mov
cli
dec
ss
fcmovb
pop
pop
push
repnz
ljmp
cld
sub
lock
push
push
jb
add
inc
push
sbb
mov
and
hlt
jle
adc
dec
dec
jge
xor
aas
cmp
cmpsb
xor
hlt
and
out
and
sbb
adc
or
sbb
movsb
fiadds
pop
cltd
and
in
jns
and
mov
repnz
into
les
mov
lds
cs
sbb
pop
jecxz
lods
sbb
pop
xchg
cltd
push
pop
xchg
dec
adc
jmp
mov
das
pop
lret
dec
das
aam
loope
sbbl
and
pushf
mov
jl
test
mov
into
out
jb
mov
jg
aas
cltd
out
adc
ds
or
enter
sub
lret
lret
adc
dec
inc
mov
inc
aad
gs
in
xchg
stos
xor
mov
test
xor
lret
push
cli
add
pop
ret
xchg
scas
cmpsb
fldenv
or
sub
fisubrs
xor
and
out
into
cmp
pop
and
adc
into
out
add
and
dec
add
adc
jmp
mulb
cmp
dec
sub
sbb
movsb
jl
out
sub
fimuls
sbb
xor
out
and
add
lods
adc
shl
cmp
cmp
adc
into
dec
fsin
aam
test
dec
jl
fs
inc
adc
jb
mov
iret
sbb
dec
xchg
in
pop
pop
insb
test
and
or
cli
push
cld
addr16
cmpsb
ds
lods
pop
xchg
arpl
into
pop
fidivrl
mov
and
cmp
jecxz
cmp
repnz
and
sbb
sbb
stos
mov
dec
rol
sbb
inc
sub
ss
cwtl
testb
repnz
and
xchg
imul
roll
cmp
mov
xchg
xor
in
jg
cmp
into
push
arpl
sbb
rcll
sub
aam
jb
inc
push
mov
sbb
or
scas
pop
ds
adc
pop
and
push
je
cmp
sbb
in
std
pop
ljmp
mov
cmpsb
adc
mov
aas
mov
adc
and
mov
xchg
push
cmp
insb
dec
loope
loope
and
out
fcmove
out
out
cmp
repnz
xor
or
ds
ja
fidivrl
cld
jno
cmpsb
sbb
push
cmp
leave
loope
or
lock
scas
add
adc
dec
sahf
add
iret
psubq
xchg
shr
pop
mov
push
hlt
or
out
ds
mov
dec
aam
out
sbb
cmpsb
into
hlt
inc
and
inc
hlt
adc
aaa
in
lds
jmp
out
imul
sub
push
cmp
popa
mov
clc
mov
xor
inc
and
or
jbe
imul
mov
xor
or
out
cmp
sbb
mov
into
stos
pop
das
adc
nop
gs
xor
jp
cltd
rcr
dec
lea
repz
in
sub
lret
cmp
or
inc
adc
and
xor
out
inc
sbb
nop
or
cmp
mov
popa
sahf
sbb
lds
and
cs
mov
inc
cmpsb
jle
loope,pt
into
sub
xchg
jmp
mov
or
sub
and
pushf
and
adc
xor
and
fiadds
or
repnz
clc
inc
inc
and
cs
add
leave
mov
cli
frstor
dec
mov
outsb
inc
jb
loope
adc
xor
fmulp
mov
xorl
imul
add
in
es
hlt
test
rcr
loopne
adc
adc
cmp
add
jg
ficoml
sarl
xchg
and
dec
enter
sbb
adc
add
insl
jno
int3
fisttps
mov
cli
xlat
xor
adc
shlb
and
pop
aam
loopne
clc
or
lahf
xor
and
mov
leave
cmp
fcmovnbe
adc
inc
or
cmpsb
sbb
loop
fdivrs
push
dec
push
cmp
sub
mov
or
xor
adc
mov
adc
pop
sub
or
cmp
cmp
xchg
dec
orb
repz
int3
jge
xchg
push
mov
push
rcr
not
mov
and
mov
nop
dec
lods
push
and
push
push
lods
fimuls
bound
fldcw
outsl
xchg
adc
add
mov
add
lds
inc
push
jnp
or
hlt
push
sub
push
movsb
add
push
mov
mov
sub
nop
cli
inc
cmpsb
sbb
cwtl
in
or
ljmp
cmp
pop
push
mov
or
sub
flds
pop
adcb
push
fdecstp
add
xor
mov
mov
cli
sbb
sub
or
and
adc
cmovns
xor
cmp
lahf
cld
mov
jb
fmuls
and
add
cmp
sahf
mov
mov
repnz
mov
cwtl
and
push
cmpsl
lahf
jp
dec
test
sbb
mov
cmp
push
cmp
adc
pop
adc
xor
ficoml
or
sti
mov
out
arpl
or
iret
push
push
enter
inc
incl
lret
cmp
mov
sub
pop
mov
repnz
dec
negb
lret
push
frstor
adc
popl
push
rcl
sub
xchg
and
adc
mov
mov
jnp
es
fdivp
and
js
pop
imull
pushf
aam
add
sbb
ds
xor
repnz
js
inc
orb
popf
cmc
jnp
movsb
addr16
push
mov
jnp
int
dec
xor
inc
scas
out
sbb
add
nop
repz
outsb
sbb
test
repnz
sbb
ds
xchg
dec
cmp
lret
enter
out
into
xlat
push
ljmp
bnd
inc
fsubrs
push
sbb
or
test
lods
inc
adc
arpl
jecxz
es
sbb
cli
and
arpl
push
adc
test
pop
clc
push
sti
cmp
out
cmp
or
addr16
mov
arpl
push
push
lcall
mov
cmp
inc
arpl
xor
imulb
fs
enter
inc
out
and
fimull
fdivs
sbb
or
aas
testl
mov
sti
mov
inc
outsl
push
mov
xor
xchg
pop
add
testl
cmp
sub
push
cmpsb
out
cmpb
cmp
loope
push
adc
push
add
jecxz
mov
mov
push
add
test
inc
pop
imul
mov
fbstp
sub
aam
imulb
jo
cwtl
sub
cmp
call
lret
pushf
and
aas
fwait
adcb
insb
pop
test
adc
xchg
pop
addr16
xchg
inc
mov
sub
push
mov
cwtl
mov
mov
pop
xorl
add
mov
sub
cmp
nop
push
fstp
shll
or
stos
inc
scas
jg
jge
push
cmp
or
shll
pop
mov
mov
fimull
mov
daa
stos
sbb
cld
divb
cs
or
stc
inc
popa
mov
aam
ss
shrl
popf
call
xchg
lock
adc
add
cmpsb
xchg
pushf
sub
push
and
jecxz
pop
push
inc
loop
cltd
inc
mov
fisttpll
ja
mov
cmp
adc
and
inc
das
out
hlt
mul
sub
lea
cs
lock
sub
adc
or
imul
mov
test
push
mov
pop
xor
or
cmpsb
data16
subl
cmp
lods
cmp
dec
xor
ss
xor
mov
mov
jecxz
or
popa
inc
and
inc
popa
inc
xor
sub
sub
xchg
xor
pop
xor
lds
lods
and
xor
loop
stos
dec
sub
out
cs
pop
xor
jmp
mov
or
xor
in
insl
adc
ljmp
mov
inc
lret
ljmp
push
or
cmc
sbb
inc
popa
into
and
dec
cmp
ss
lods
xor
xor
inc
pop
cmp
dec
dec
mov
fmuls
cli
dec
insl
sub
out
or
mov
dec
sub
dec
ficomps
stos
xor
pusha
imul
popa
outsb
repnz
aam
cli
out
and
xchg
mov
cmp
or
daa
or
mov
xchg
sub
dec
jb
cmp
test
and
lock
mov
mov
ljmp
cmp
mov
pop
push
ljmp
or
mov
shrb
lcall
add
pop
jns
scas
dec
inc
test
ljmp
cs
ljmp
sub
pop
add
cwtl
pop
adc
popa
ret
ljmp
jmp
ljmp
ljmp
and
xor
pop
lds
scas
xchg
cmp
and
sub
in
outsb
xor
outsl
in
xchg
aaa
inc
imul
mov
test
shrb
mov
xor
sub
es
jmp
xor
lods
xchg
popw
ljmp
stos
and
fsubs
adc
cmp
pop
jae
iret
out
shrb
stos
cwtl
adc
sub
stos
jbe
ss
mov
pop
cs
call
and
ljmp
ljmp
add
cmp
ljmp
xor
xchg
jne
jp
fidivrl
lret
fcoms
int
sbb
push
es
push
xor
fldenv
ljmp
adc
scas
cmp
inc
xchg
add
dec
xchg
scas
mov
ljmp
mov
stos
adc
ljmp
mov
ret
inc
ljmp
out
es
and
xor
push
stc
mov
int3
repz
and
mov
and
cmp
jae
mov
test
cwtl
call
jmp
insl
mov
bound
jne
popa
cmp
arpl
fwait
xor
lods
cmp
sub
loopne
add
mov
push
cmc
inc
push
fimuls
mov
fmuls
inc
ja
cmp
and
bound
mov
shr
stc
cltd
fisubl
sahf
lcall
mov
ja
jbe
add
es
ficoms
out
mov
add
dec
and
push
lea
dec
push
lds
mov
in
push
aas
mov
test
ss
int
or
js
adc
mov
int3
imul
pop
lret
fwait
sub
mov
sbb
dec
sub
sar
fiaddl
sbb
std
lods
sbb
xor
mov
ljmp
rcrb
push
insb
lret
outsl
outsb
and
pop
jbe
leave
subb
sub
ljmp
xchg
add
dec
jle
stos
outsl
and
jmp
data16
cmpsb
jns
xchg
mov
dec
or
enter
or
ljmp
mov
outsl
sti
mov
int3
test
push
ret
icebp
lods
stc
out
dec
int3
int
out
leave
fdivs
push
in
test
lahf
lods
jmp
mov
add
stos
outsl
mov
add
in
sub
out
cmp
pushf
push
jb
push
push
psubsw
mov
aas
in
jb
dec
das
jne
push
leave
jp
cmpsb
jnp
or
push
mov
jp
in
cmp
aaa
xchg
mov
or
repnz
lcall
sub
sbb
jp
jb
cli
or
inc
xchg
push
sbb
lea
sbb
rcrb
xor
cmp
mov
stos
testb
xchg
mov
xlat
ret
mov
pop
jbe
or
sub
dec
icebp
or
repz
sbb
cmp
mov
imul
mov
or
insl
sbb
shrb
sbb
lock
stc
mov
int
lcall
ret
pop
rcrb
repnz
iret
jmp
add
adc
sti
and
and
inc
stos
shr
inc
pop
cli
mov
or
mov
dec
out
in
stc
mov
pop
stos
add
push
outsl
lock
cmp
cwtl
sbb
cli
cmp
sub
insb
sub
stc
jp
sarb
std
arpl
cmc
push
icebp
push
rcr
pop
fwait
stos
insb
loop
out
push
outsl
arpl
add
sbb
push
lahf
push
add
adc
ljmp
lods
cmc
sub
inc
and
sub
mov
add
fcmovnu
jecxz
or
stos
loop
mov
leave
pop
adcb
xlat
js
add
sub
mov
cli
sahf
jmp
pop
xor
inc
xor
sub
sbb
daa
mov
mov
or
pop
mov
xchg
xor
fldz
adc
push
arpl
add
aaa
inc
cmp
out
lcall
aaa
insb
push
cmp
outsl
aas
inc
mov
jl
lcall
mov
lods
repnz
ljmp
addb
fiadds
fcomp
adc
pop
cmp
mov
outsb
bnd
mov
jb
data16
pusha
mov
xchg
lcall
jle,pt
mov
push
out
cs
mov
in
sub
loop
out
push
dec
scas
and
xchg
or
sub
inc
push
and
ljmp
dec
std
push
mov
mov
notl
inc
cmc
sub
ds
ss
pop
xor
mov
sti
dec
lods
cmp
xor
cmp
sub
es
push
pop
loope
out
lret
daa
pop
in
dec
loop
cmpsl
inc
fbld
shll
mov
aaa
jmp
adc
fsubrl
fst
into
and
adc
out
inc
sbb
and
insl
insb
je
pop
cmp
or
fwait
cwtl
fmuls
push
jmp
or
jae
outsl
out
clc
push
stc
or
mov
sbb
and
andb
mov
repnz
cmp
sbb
dec
or
sub
into
inc
mov
lcall
lcall
das
dec
mov
sbb
icebp
dec
in
loope
mov
jae
sub
add
jnp
mov
movsl
cwtl
lock
jmp
mov
rorb
fidivl
cmp
or
push
ret
adc
mov
jnp
xchg
and
icebp
out
and
mov
fcmovne
test
out
sbb
or
fwait
push
and
fstpt
gs
dec
jno
sbb
lahf
push
imul
sbb
cli
rcrb
sub
dec
mov
popf
adc
jbe
push
jp
and
clc
es
adc
mov
repnz
cmp
cli
mov
xchg
add
test
mov
cli
and
test
movsl
or
mov
dec
push
fcomps
push
fwait
or
mov
cli
sbb
pop
cmp
jae
movsl
and
inc
into
mov
subl
sbb
cmp
test
clc
rorb
je
mov
mov
aas
cmp
push
and
inc
mov
fistl
ljmp
cld
ljmp
mul
cmp
cmp
push
cli
mov
fistps
fistl
push
fcmovnu
test
loop
mov
mov
sarb
sbb
lret
sti
pushf
push
sub
cmp
cli
out
sbb
scas
or
mov
ss
out
push
push
push
outsl
fiaddl
mov
push
push
xlat
add
xchg
add
inc
push
divb
xchg
cmpps
hlt
roll
rorb
cmp
mov
dec
push
mov
fs
push
in
push
dec
sub
cmp
test
cs
cs
push
mov
jne
ss
cli
outsb
pop
gs
adc
cltd
sbb
stos
jl,pn
movsl
push
sub
cmove
testl
outsl
and
outsl
sti
mov
xor
mov
test
lret
jnp
push
pop
in
cmovnp
scas
fwait
es
lret
cmp
ss
int
data16
dec
cmp
sub
xchg
js
cmp
xor
js
dec
and
pop
pop
fcomps
fldcw
fs
clc
mov
mov
add
cmp
gs
test
ss
loope
push
xchg
cli
mov
enter
cld
mov
fisubl
inc
add
jmp
into
iret
test
xor
mov
sub
jno
sub
mov
add
sub
or
mov
shll
jb
add
cmpl
or
je
adc
std
mov
add
dec
jnp
repnz
sub
sub
gs
aad
cmp
or
xchg
and
adc
insw
sub
sub
add
mov
mov
cmp
and
icebp
jmp
imul
stc
gs
cmp
mov
dec
push
sbb
cs
jae
sbb
lret
stos
mov
lods
cmp
cmp
fsubl
decb
outsb
xor
xor
aad
mov
fstpl
adc
pop
sti
imulb
jmp
outsl
jle
mov
dec
mov
leave
add
mov
loop
or
sub
or
add
jnp
in
jp
jns
divl
add
std
cmp
shrl
dec
dec
fidivl
daa
lahf
add
mov
imul
mov
jg
sub
lret
dec
fidivrl
mov
icebp
push
pop
sbb
cmp
ss
std
mov
sbb
sbb
dec
and
adc
pop
add
cmpsb
sub
roll
sub
mov
xchg
in
push
pop
ss
into
xchg
cwtl
xor
xor
in
sub
insl
lods
mov
cltd
divb
ljmp
stos
cmc
jl
call
or
pop
dec
ret
repnz
jle
lret
jecxz
sahf
aaa
mov
xor
xchg
stc
test
je
pop
fsts
adc
jmp
jl
cmp
jmp
pop
mov
cmp
mov
enter
adc
iret
cmp
pop
dec
inc
dec
ficompl
add
lret
sar
int
insb
xor
lret
lods
pop
lods
xchg
ret
adc
clc
xor
stc
insl
jmp
or
add
adc
sub
xor
sbb
or
imul
lret
push
sarl
lock
sti
pusha
test
div
sub
leave
or
cmp
jae
icebp
out
sub
cmp
add
test
jecxz
fsubs
ljmp
xchg
fcmove
fisttpl
ds
aad
jbe
fstps
sbb
lea
cli
bnd
stos
mov
cs
push
push
xor
fnstenv
or
cmp
movsl
mov
cmp
mov
xor
stc
call
fwait
repnz
aas
cmp
mov
sbb
dec
fmuls
pop
scas
fnsave
cwtl
fisubrl
add
lret
pushf
jecxz
cmpsl
lock
dec
mov
test
sahf
sbb
cmc
aam
fidivl
jmp
int
outsl
lahf
jnp
test
leave
pop
lret
aad
add
add
fs
dec
adc
stc
cmp
dec
inc
mov
test
or
sti
jmp
mov
xchg
add
jmp
imul
xor
jmp
add
fisttpll
and
sbb
addb
mov
orb
adc
jl
cmp
add
pop
std
lret
push
clc
and
pop
and
pushf
jmp
clc
mov
cwtl
ret
xor
lea
xchg
test
and
push
std
push
sub
jecxz
jnp
inc
pop
sbb
stos
outsb
sbb
mov
cmp
cli
ljmp
scas
add
fnstsw
mov
sub
xor
adc
add
pushf
cmp
sbb
sbb
outsl
pop
cmpsb
add
js
or
leave
cmp
imul
fcmovnu
stos
add
push
pusha
sti
sbb
ret
xor
cmp
lods
mov
out
in
cmp
outsl
mov
test
and
in
icebp
dec
xor
leave
cmp
mov
xchg
sahf
push
or
mov
xor
dec
inc
dec
pop
mov
fiaddl
mov
inc
stos
in
out
mov
cmp
cs
add
xchg
ljmp
cs
imul
rcrb
and
repz
pop
invd
cwtl
push
sbb
adc
jmp
jmp
pand
dec
lods
mov
aam
jae
fwait
push
mov
jp
cmp
fwait
jbe
mov
push
mov
test
sbb
clc
das
mov
lea
lods
scas
lcall
add
sti
fildl
sbb
imul
mov
cmp
or
cmp
sub
fmull
mov
mov
sbb
add
and
xchg
dec
push
mov
pop
or
fwait
xchg
xchg
sub
xchg
ss
lock
mov
mov
sbb
jge
cmp
push
imul
fistps
mov
inc
sub
inc
lret
sub
ds
int
or
call
cli
add
sbb
fisttpll
out
push
stc
pop
or
cli
add
push
loop
cmp
aad
push
std
fisubrl
test
add
test
xor
cmp
add
or
dec
mov
lret
dec
sbb
lcall
clc
sbb
and
into
sub
lret
xor
or
xchg
jmp
jns
in
jmp
push
jnp
popf
cltd
push
stc
dec
ss
scas
daa
dec
imulb
fcomps
pop
mov
xor
mov
out
inc
pop
sub
sbb
xor
js
fxch
enter
enter
pop
mov
jmp
xor
inc
outsl
lods
mov
dec
mov
cmp
lea
rcl
or
xor
popa
ds
mov
imul
xchg
sub
js
iret
or
movsb
iret
mov
mov
inc
lods
ss
mov
inc
cmp
mov
push
jae
mov
addb
fmuls
jne
lret
or
xor
test
lret
in
jne
int
or
jge
ljmp
jg
cs
pop
jecxz
shrb
ret
ss
pop
adc
pop
popa
cltd
sahf
cmp
pusha
dec
outsl
sarb
stc
cmp
js
imul
imul
lret
pop
or
pop
fadds
mov
mov
fisttpll
cmp
enter
fwait
cmp
test
mov
dec
fdiv
std
cmp
je
or
add
mov
sbb
xchg
inc
mov
mov
adc
dec
pop
mov
mov
ss
lcall
or
shrl
sbb
imul
xor
xchg
sub
sbb
shrb
fisubrl
test
dec
lods
lret
call
or
and
sub
ss
xchg
dec
addr16
lods
inc
add
test
ss
push
mov
adc
scas
sbb
xchg
mov
stos
mov
stc
lock
xchg
adc
js
sbb
jns
dec
add
lods
push
or
pop
sub
imul
cmp
adc
out
sahf
push
lret
mov
mov
mov
cmp
cs
cmpsl
mov
and
dec
rorl
sub
rorl
lods
lods
or
notb
mov
xor
and
mov
loopne
mov
outsl
repnz
cmp
or
negb
repnz
sbb
mov
icebp
sub
push
jno
sbb
pop
mov
push
btc
xor
and
push
popa
stos
or
mov
cmp
cs
mov
imul
clc
jmp
scas
gs
aad
jmp
fistpl
dec
cvtpi2ps
rorb
dec
pop
xor
sbb
outsl
ljmp
sbb
jmp
inc
cmp
jecxz
adc
aam
adc
cmp
sbb
out
or
rorb
xor
imul
cmp
cltd
inc
mov
cmp
add
popf
or
aaa
lcall
sub
sub
lret
imul
pop
mov
lcall
adc
push
or
mov
adc
inc
mov
add
xor
lods
test
fidivrl
add
int
or
mov
push
or
dec
push
aas
mov
lea
mov
cmp
clc
mov
repz
push
mov
pop
cmp
or
xor
and
sub
or
in
aad
sub
stc
mov
sub
pusha
mov
xor
stos
stos
imul
lret
fistpll
mov
fwait
dec
rorb
sbb
jns
add
sti
mov
clc
scas
femms
fisttpl
sub
lods
fwait
jae
dec
sub
fcmovne
out
mov
imul
and
fimull
aas
call
inc
out
mov
lret
sub
rclb
push
leave
imul
cmp
fsubrl
int
sahf
mov
lea
dec
or
sbb
jl
push
lock
dec
stc
push
dec
fdecstp
lret
mov
testl
xchg
push
fwait
lods
stos
pop
aad
push
or
mov
add
leave
jnp
dec
mov
inc
inc
sub
outsl
xlat
jnp
mov
fisttpll
aas
cmp
cltd
cli
add
pop
jmp
or
scas
or
inc
outsb
jecxz
cwtl
or
imul
or
in
fdivl
mov
and
ds
cs
call
aaa
xor
mov
xchg
sahf
cmp
mov
mov
pop
lret
leave
out
int3
pop
in
jecxz
call
imul
iret
sub
sub
sahf
and
lock
sar
cmp
popa
hlt
push
pop
cld
leave
js
and
ret
imul
cmp
pusha
add
test
adc
jnp
xchg
xchg
mov
das
mov
xor
leave
fwait
inc
sub
ret
loope
dec
mov
pop
cmp
push
mov
jp
jmp
or
cs
hlt
ljmp
inc
fsub
repz
fs
xchg
cmp
idivb
sti
inc
jb
js
int
fsts
sbb
mov
jge
lret
in
or
push
mov
sub
cli
cltd
mov
sbb
sub
mov
lret
pop
ss
cli
fdivs
mov
in
cli
mov
loope
pop
fsubrl
jmp
js
and
xchg
rcrl
pusha
cmp
mov
out
xchg
addr16
or
out
ljmp
test
sub
mov
xor
or
cli
lret
xchg
repz
pop
insl
sbb
mov
mov
mov
adc
imul
shr
outsb
add
mov
cs
leave
sahf
mov
out
fsubrs
jle
push
js
iret
cwtl
int3
xchg
pop
cwtl
mov
dec
jb
xor
mov
ret
repz
or
cs
push
sti
test
or
add
mov
cmpsb
fcmovne
pop
clc
lret
std
cltd
adc
jbe
xor
xorb
and
das
bound
and
cs
aad
enter
sarb
mov
std
outsl
cmp
inc
xchg
repnz
cmp
and
sbb
orb
add
loope
jnp
call
imul
and
rorl
lcall
jmp
mov
sar
mov
call
imul
sbb
fcomps
add
dec
mov
mov
fisubrl
add
pop
rcrb
iret
movsl
enter
sbb
add
push
inc
sub
mov
loop
cltd
js
and
cmc
jnp
cwtl
mov
loop
pop
and
std
pop
mov
mov
std
sbb
xor
fdivrl
stos
shl
imul
push
xchg
mov
je
or
sub
in
mov
add
call
mov
mov
push
adc
cmp
sbb
add
adc
cmp
and
cmp
stc
orb
dec
mov
pop
adc
lods
cmp
ss
stc
test
and
jno
pop
sub
loop
pop
mov
add
dec
mov
std
xchg
filds
fisttpll
icebp
xchg
fcmovbe
sbb
xchg
inc
pop
mov
mov
ljmp
jmp
daa
adc
xor
fstps
pop
test
sub
and
push
mov
gs
push
imul
pusha
sbb
xor
enter
es
fisttpl
sbb
and
shrl
and
lock
negl
clc
test
adc
jg
dec
fcomi
sbb
mov
lcall
cmpsb
rorl
sbb
lahf
dec
setnp
dec
outsl
test
mov
sbbl
sbb
jecxz
idivb
cmp
daa
mov
jnp
sbb
ss
lret
dec
cltd
mov
cmp
jo
sbb
push
ss
mov
xchg
mov
call
dec
push
jmp
or
pop
push
pop
lock
xchg
push
cs
mov
es
sub
lret
dec
les
popa
xchg
enter
dec
push
mov
sub
das
sub
mov
outsl
inc
scas
lret
add
mov
jno
iret
cltd
sahf
mov
stc
mov
aad
mov
sbb
and
mov
movsb
lock
dec
imul
or
and
add
or
xor
mov
fnstcw
mov
or
push
inc
pop
and
sub
dec
mov
stc
jmp
jmp
push
jecxz
cltd
xlat
dec
insb
mov
push
pop
outsl
fisubs
in
cmpsl
mov
add
and
cmp
add
push
jmp
scas
stc
lcall
jnp
mov
sub
nop
js
cli
shll
or
jno
in
dec
push
icebp
sbb
push
leave
out
dec
xor
sbb
xlat
aad
lret
and
clc
ljmp
pop
pop
or
cmp
iret
fnstsw
pusha
rorl
lock
xor
das
mov
cs
dec
mov
xor
loopne
hlt
nop
xor
fisttpl
push
int
jg,pn
jnp
enter
jl
js
dec
jl
stc
fdivrl
or
push
sub
ss
cmp
fldenv
outsl
bswap
lret
rcrl
dec
pop
and
mov
shll
mov
dec
sti
test
or
sub
or
xor
test
test
pop
inc
mov
lds
out
dec
in
pop
jnp
ljmp
es
push
out
and
and
out
pop
ljmp
in
adc
dec
inc
push
out
pushf
ljmp
jne
sbbb
out
push
imul
mov
mov
push
lea
lods
xchg
ljmp
das
dec
imul
loop
lods
sub
jne
scas
mov
sub
dec
dec
xchg
or
sbbb
mov
pop
sub
lret
stc
or
mov
lds
movsl
xchg
orl
insb
mov
mov
popa
roll
mov
int3
out
xchg
push
inc
xchg
add
stc
push
jp
jl
shrl
fldenv
push
test
add
jbe
add
mov
jecxz
out
jns
xor
in
aad
jmp
or
sbb
lret
les
test
pop
dec
cs
nop
in
cld
pop
pop
shl
xchg
fidivl
or
inc
jb
repz
cmp
inc
cs
mov
repnz
cwtl
leave
enter
sub
lea
inc
mov
jmp
or
or
or
test
call
cs
fcom
push
mov
mov
enter
lds
lret
sti
fdivr
sub
dec
dec
inc
stos
fnstcw
inc
mov
pop
std
mov
dec
lock
mov
mov
cld
or
test
lods
pop
cmpsl
cs
jne
push
sub
mov
sub
mov
push
jns
lods
cli
jp
hlt
pusha
test
cmpsb
pop
stos
dec
das
lds
add
clc
or
std
cs
fsts
cli
xor
stc
leave
jmp
and
or
insl
subl
pop
add
sti
leave
push
in
icebp
pop
fsubrs
testb
add
lods
mov
imul
aam
mov
cmpsb
das
mov
cmp
leave
insb
stos
mov
int3
roll
into
mov
adc
jge
xchg
push
test
or
sbb
aas
std
push
add
cmp
push
clc
int
leave
and
or
xchg
adc
pusha
clc
push
cmpsb
xor
lods
imul
shrl
and
orb
test
mov
jnp
pop
aad
stos
test
push
push
sub
cmp
cli
sub
dec
cmp
inc
repnz
jnp
push
enter
clc
cmp
call
cmp
lcall
mov
or
adc
std
mov
or
stos
mov
or
or
in
add
gs
xor
push
ljmp
aaa
dec
stc
mov
rcrb
js
dec
clc
imul
fnstcw
lods
call
fs
outsl
ficompl
mov
repz
fsubl
cmp
adc
lret
bound
jnp
call
loope
movsb
cmp
out
cmp
imul
sbb
sub
or
das
dec
in
cltd
imul
fstps
xor
jmp
push
or
cmc
fisttpll
cmovns
jb
stos
std
xchg
or
fdivs
pop
cmp
in
mov
insl
fldcw
cmp
into
in
test
sub
or
or
or
ss
push
outsb
pop
sbb
jp
sub
sub
jmp
leave
jmp
leave
add
or
pop
stos
repnz
mov
test
lods
push
enter
cmpsb
dec
add
stc
imul
or
mov
mov
int3
cli
test
lods
mov
fidivrl
or
push
iret
imul
mov
fnstcw
push
cmp
shr
mov
cmpl
add
pop
ss
lock
int3
test
stc
jns
inc
cld
ds
adc
pop
lea
mov
jp
push
push
sub
push
mov
or
les
or
int3
jno
jp
sbb
imul
enter
mov
stc
sbb
aam
xor
add
mov
pop
and
arpl
or
sub
stc
sub
dec
xor
into
aas
sbb
sub
dec
in
mov
ds
sbb
cs
xchg
mov
fadds
out
neg
mov
cwtl
enter
or
push
jge
or
and
jnp
mov
mov
xchg
push
test
lea
daa
xor
cs
pop
hlt
adc
ret
sbb
sti
jl
pop
imul
mov
das
test
iret
jns
mov
cli
jb
adc
sbb
imul
leave
dec
cli
mov
cmp
subb
pushf
adc
stc
imul
push
cmp
das
stos
fistpl
mov
sub
inc
sbb
pop
leave
outsb
dec
bound
cli
lods
dec
mov
pop
andb
and
mov
mov
and
push
stc
xor
jns
in
dec
jbe
push
cmpsb
dec
bound
cmp
cmc
or
sbb
push
add
int
outsb
mov
aaa
mov
insb
mov
in
mov
into
popf
imul
lret
in
lahf
mov
mov
jnp
rorb
cmc
sub
cs
ds
jp
insb
aaa
lcall
mov
hlt
pop
cld
jp
cwtl
dec
cmpsb
pop
push
out
pop
mov
xchg
or
mov
dec
sbb
fs
repz
cli
mov
dec
cmp
mov
jb
fisubl
xor
inc
or
fimull
sub
movb
jmp
mov
fnsave
outsl
hlt
aas
mov
stos
push
add
jbe
out
mov
mov
and
addps
push
adc
pop
cmp
test
dec
cmp
std
scas
std
jmp
ret
add
mov
lret
lret
call
jmp
sbb
push
mov
and
int
push
aad
dec
mov
out
stos
call
stos
sbb
push
repz
inc
sbbl
flds
or
sarb
into
cmp
fistps
dec
idivb
inc
sbb
push
int3
fnstcw
pop
insb
jnp
adc
lods
mov
inc
sti
jp
into
rorb
sti
xor
adc
popa
dec
fadd
adc
cmp
cltd
std
out
xchg
cmp
subl
ss
test
dec
sti
lock
add
insb
sbb
or
ljmp
fldt
inc
cmp
jmp
dec
shlb
xor
pop
mov
mov
jo
call
xchg
cmc
sub
int3
fsin
orl
inc
test
stos
add
cwtl
push
sbb
mov
push
sti
imul
lock
aam
cmp
or
ret
lret
pop
js
or
out
mov
jmp
subb
mov
pushf
punpckhwd
jp
pop
jl
jp
sti
sbb
mov
mov
cmpxchg
call
imul
stos
cs
and
cmp
das
js
imul
sub
repz
xchg
sbb
add
fistpl
mov
mov
addr16
dec
stos
femms
sub
shrb
bound
loopne
movsb
inc
jmp
mov
mov
lods
repnz
rorb
sti
bswap
outsb
mov
push
xor
lods
ret
mov
aas
mov
sub
xchg
mov
lock
bswap
mov
xchg
sub
shl
push
sbb
hlt
jnp
sbb
sbb
mov
mov
or
mov
jle
sbb
ljmp
lret
push
or
dec
lret
cmp
and
test
outsl
pop
and
cmp
xchg
and
sub
fdivs
mov
or
call
std
lock
jns
clc
mov
leave
sbb
adc
cs
jmp
cmp
or
subl
add
jns
add
xchg
test
mov
pop
ljmp
pop
or
jnp
enter
aas
cmp
ret
mov
cmp
dec
pop
shll
pop
mov
loopne
test
ret
rsqrtps
cmpsb
add
sub
repnz
xchg
sbb
inc
je
jb
stos
in
xor
jmp
sbbl
xchg
inc
lret
int
leave
repnz
imul
cld
aaa
cmp
jo
push
fsubl
lcall
add
mov
cmp
gs
addps
lock
lcall
imulb
push
mov
call
mov
cmp
sbb
pop
std
popa
sbb
add
lcall
stos
outsl
scas
mov
dec
mov
jbe
stc
sbb
repnz
add
or
jbe
lods
ds
or
push
sbb
push
call
sti
pushf
xchg
mov
cli
cli
std
cmp
add
pop
stos
mov
ljmp
push
fiaddl
add
mov
js
pop
or
jmp
es
push
sbb
bswap
mov
dec
sub
out
xor
jmp
outsb
push
add
leave
mov
xor
mov
dec
lods
mov
sti
push
cmp
call
or
add
jl
jns
xor
enter
or
inc
pop
jnp
imul
sub
adc
push
lods
lods
pushf
lea
insb
push
dec
lcall
sub
push
jbe
insb
hlt
dec
mov
adc
adc
call
cmp
pop
xor
sbb
mov
mov
orb
cmpsl
lret
sub
aam
sbb
mov
mov
cmp
imul
out
dec
ret
scas
push
mov
test
jo
sarb
pop
into
out
jle
mov
call
test
pop
mov
dec
cmp
or
xchg
lock
xchg
push
mov
or
repz
cmp
sbb
into
mov
sbb
jmp
jp
jns
push
or
sbb
filds
mov
sub
sub
pop
pop
jmp
jp
mov
or
lock
stc
jbe
mov
cwtl
push
jp
or
push
or
add
sbb
cld
fsubrp
cmpsb
jmp
mov
or
stos
jmp
movsb
lock
or
dec
mov
adc
ror
sub
repz
cltd
cmp
sbb
jp
sti
mov
adc
imul
adc
lret
lret
stc
pop
out
pop
inc
push
sub
cmp
jp
mov
cmpsl
dec
in
mov
jb
sbb
sahf
mov
into
or
or
xor
xchg
out
jg
mov
cmp
js,pt
cmp
sbbl
jb
mov
loopne
out
xor
testl
cmp
add
add
fnstenv
ficoms
xor
jle
inc
cs
and
pop
ss
outsl
imul
and
ss
jl
jmp
sti
mov
dec
mov
gs
or
mov
dec
xor
mov
sahf
xor
jbe
and
loop
pop
lea
add
cmp
pop
incb
or
cs
ss
inc
sbb
sbb
jns
gs
mov
adc
adc
lods
adc
pop
pop
jmp
inc
inc
cs
inc
rclb
enter
jge
ja
xchg
mov
int3
mov
mov
bound
jb
cmp
sbb
inc
pop
dec
mov
push
xor
das
mov
jmp
int
lods
ja
adc
aaa
divl
add
sub
mov
inc
jle
fs
mov
jp
jecxz
mov
cs
cmp
xor
sbb
dec
mov
mov
jns
dec
pop
ret
gs
cmp
popa
dec
fisttpl
or
jmp
or
fwait
mov
aaa
stc
push
out
pop
rorb
outsl
ss
and
nop
sub
xchg
into
cmp
or
xor
push
ja
mov
mov
push
es
and
and
push
mov
insl
cs
scas
in
and
ljmp
icebp
sbb
sbb
jbe
cld
das
or
or
mov
mov
mov
test
fstl
sbb
in
lods
lret
fnstsw
outsb
insb
stos
lret
push
mov
std
dec
fdivp
jp
insb
fsubrp
inc
pop
enter
sbb
jno
ret
jbe
out
pop
out
repnz
sub
out
scas
divb
inc
cli
in
lods
insb
xor
mov
repz
jae
in
aaa
inc
mov
lods
insl
mov
jle
mov
jo
ret
sti
mov
jnp
push
icebp
pushl
cmp
jne
xabort
cmp
cld
sub
stc
mov
std
sub
inc
add
sub
xchg
movl
test
mov
clc
test
xchg
jle
xor
scas
outsb
repnz
sub
idivb
jb
scas
in
cli
sub
mov
sbb
jae
pop
jp
mov
inc
ret
icebp
mov
mov
sub
cmpb
mov
in
xor
les
sarl
loope
jmp
adc
adc
sti
lock
add
scas
test
dec
cli
mov
ja
mov
cmp
jle
pop
pop
pusha
mov
and
push
popf
into
inc
pop
bound
addl
sub
loopne
andb
repz
jbe
jns
loope
in
xlat
sub
outsl
and
inc
out
mov
jbe
sbb
sub
sub
lahf
lea
scas
fadds
fsubrl
sub
xchg
pop
out
retw
lret
cs
lahf
mov
leave
jns
shl
outsb
dec
and
push
sarl
mov
repz
jb
repnz
imul
xchg
mov
iret
adc
jle
stc
ss
sti
cmc
in
ja
mov
shrl
pop
filds
push
pop
stc
sub
adc
or
dec
in
sub
add
cmp
lods
ljmp
push
addr16
testb
push
lret
mov
mov
test
data16
pop
dec
push
btr
jecxz
pop
pop
xchg
dec
shrl
fcmovbe
in
in
shrb
popf
aam
ret
cltd
aad
je
daa
mov
mov
int3
lret
mov
test
inc
or
dec
popa
xchg
aaa
sub
mov
add
in
mov
push
es
enter
sub
ret
sub
iret
and
add
add
cmp
and
dec
cwtl
jns
dec
movsl
add
addr16
add
in
jmp
out
sub
pop
or
sahf
cwtl
inc
push
sub
js
sub
test
mov
cmpsl
stos
pop
repnz
sbb
sub
lods
add
mov
and
xor
and
and
push
into
daa
cmp
pushf
sub
xchg
mov
push
mov
mov
push
dec
cli
cs
dec
movsl
dec
cmp
addr16
aaa
xor
in
shrb
sub
lret
scas
div
sub
inc
pop
pop
and
pslld
hlt
jmp
ja
fldt
mov
les
lds
jle
mov
hlt
dec
xor
mov
ret
sahf
and
fiadds
cmp
pop
sub
inc
int
nop
inc
outsb
push
sub
je
cs
cmp
cmpsl
xchg
inc
ljmp
mov
push
test
loope
mov
out
bound
insl
cmp
pop
jl
aad
es
or
les
sub
add
sub
movsl
xchg
add
sub
pop
repz
lods
ret
repnz
fcmovb
sbb
dec
test
aad
and
inc
in
lcall
daa
jmp
sub
test
imul
sub
test
xchg
fcomps
jl
xor
pushf
addl
jl
subb
and
xchg
xchg
and
std
xchg
inc
xchg
int
jg
jns
icebp
pop
add
xchg
mov
test
test
mov
jne
ret
add
xlat
cs
jmp
and
push
jns
cmpsl
sub
mov
add
jns
lret
mov
jae
and
xchg
loopne
sub
in
out
lea
mov
add
add
in
mov
insb
movsb
sub
mov
pop
push
inc
mov
fs
jnp
dec
sub
std
jecxz
inc
dec
cltd
push
adc
addb
push
inc
pop
pop
jecxz
fldl2e
rcll
cmp
fstpl
mov
and
in
jge
aam
cltd
subl
dec
enter
jecxz
loopne
xchg
add
ds
xlat
sub
or
lret
add
sub
aam
sub
pop
or
sub
mov
sbb
dec
popa
test
sub
xchg
je
pop
adc
out
test
cltd
std
xlat
loope
dec
push
jl
sub
pusha
add
xor
cs
xchg
jo
push
sub
mov
lds
imul
push
lods
in
adc
aad
push
xor
push
rol
sbb
xchg
add
sub
in
or
inc
repz
test
sub
cmp
add
pop
xchg
bound
xor
and
mov
outsl
cmp
out
sub
out
fs
jne
push
pop
xchg
push
dec
ret
mov
sub
lahf
pusha
jl
mov
popa
ja,pt
add
and
dec
popf
push
loopne
rcrl
xor
add
xor
rcll
xor
cmp
push
xchg
in
loop
inc
mov
add
mov
xchg
arpl
add
in
xlat
fwait
dec
sbb
mov
push
aad
xchg
xchg
ret
dec
sub
xchg
fstpt
flds
mov
loop
repz
push
dec
mov
es
mov
inc
pop
mov
mov
or
jmp
inc
dec
in
adc
jmp
ret
lea
jne
push
iret
mov
push
shl
es
pusha
xchg
fstl
sub
movsb
jns
sbb
xchg
aaa
jecxz
xchg
addl
sub
mov
dec
mov
repz
jl
push
sbb
je
std
jle
push
les
fs
mov
ja
sbb
cmp
stc
mov
fmuls
lds
in
push
xor
sub
cwtl
push
fwait
push
jae
lea
jecxz
sub
pop
ljmp
or
mov
sbb
cmp
in
sub
bound
in
jge
sub
jnp
push
xor
xchg
aad
jg
sub
ja
data16
cmp
std
daa
icebp
xchg
sub
or
dec
sub
pop
or
push
xchg
jmp
mov
fstpt
js
inc
subl
sub
cwtl
sbb
mov
sub
stos
call
lret
lock
sbb
pop
push
mov
enter
pop
jns
loop
jae
dec
sub
xchg
and
sti
cmp
sub
leave
inc
outsb
lods
cwtl
fimull
adc
inc
lcall
jo
ja
xchg
jecxz
popa
orl
pop
out
xchg
dec
sub
push
data16
stos
idivb
js
pop
cmp
sbb
sub
rorl
popa
add
mov
cmp
daa
rclb
jns
in
out
mov
addb
aad
ss
or
sub
jge
mov
or
and
and
fdivs
dec
dec
pop
cwtl
and
and
mov
outsl
cmp
mov
stc
lock
or
xor
loop
sub
push
out
in
ja
out
jo
xchg
pop
sub
sbb
and
lret
dec
jp
dec
and
mov
push
icebp
sub
dec
pusha
mov
popa
pop
flds
sub
fildll
adc
mov
or
xchg
fadds
cmovns
lcall
repz
test
adc
ja
stc
push
sub
movsb
dec
mov
icebp
xchg
jns
jb
or
and
pop
mov
cs
aad
sahf
outsl
sub
jo
xchg
xchg
fnstcw
sub
bound
movsb
adc
mov
jno
gs
popf
xor
dec
xor
mov
jecxz
sti
sub
ss
sbb
cmp
dec
ret
dec
data16
lock
loop
ljmp
push
dec
cli
adcb
push
mov
cld
call
or
ss
out
cmpsb
ret
sarl
testl
int3
ror
jb
inc
rorl
sahf
fimull
dec
sbb
sub
imul
fildl
or
pop
js
mov
sub
aas
subb
xchg
cs
lds
pop
or
push
cwtl
mov
jo
jns
cli
xor
popl
mov
arpl
push
mov
mov
add
in
outsb
mov
xchg
mov
mov
arpl
push
lahf
and
push
repz
inc
ja
fsts
push
add
in
stos
mov
repnz
inc
mov
mov
jae
mov
lds
jae
lds
lahf
ficomps
aas
jmp
jle
xchg
cli
adc
inc
push
hlt
jae
and
mov
pop
jb
adc
repnz
setg
stos
pop
sub
out
jg
inc
sti
aas
lret
dec
pop
pop
sbb
xor
ja
mov
fwait
jnp
cli
cli
jno
sbb
outsl
jmp
ja
adc
sbb
iret
push
es
mov
push
das
push
movsl
cli
xchg
inc
es
or
outsb
movb
adc
push
cmp
cmpsb
add
push
push
mov
aaa
pop
mov
fistpll
or
push
mov
mov
or
shlb
cmovle
add
mov
pop
clc
out
pop
lret
mov
mov
lock
ljmp
scas
out
add
jae
cli
cmp
sbb
push
mov
and
adc
or
cld
add
std
fchs
xor
stc
jo
xor
mov
and
jmp
mov
jnp
push
ja
add
or
mov
mov
inc
and
mov
cmp
push
cmpsb
cmp
ja
scas
mov
lahf
scas
push
popf
imul
lea
xor
sbb
jnp
movsb
jp
arpl
movsl
push
push
xor
pop
jle
push
imul
pop
mov
or
fdiv
inc
and
mov
xchg
push
mov
adc
push
mov
imul
jbe
stos
ljmp
into
ss
cmpsb
aas
or
lret
pop
jmp
push
inc
mov
test
imul
xchg
inc
add
mov
mov
inc
aam
mov
imul
xor
int
lret
aaa
jo
jg
pop
push
jae
sahf
fnstsw
inc
ja
mov
stos
mov
outsb
dec
lret
lods
mov
mov
xchg
xor
mov
popa
repnz
stos
push
ljmp
jg
push
test
mov
cmp
push
mov
jb
pop
jbe
dec
jp
call
pop
scas
jg
or
xchg
stos
ljmp
mov
dec
jb
jno
addb
fidivl
arpl
fwait
lret
cmp
cwtl
bound
xor
sarb
jbe
inc
push
jp
mov
mov
stos
dec
imul
loop
inc
sbb
sbb
mov
mov
lods
push
or
dec
bound
jne
inc
ret
packsswb
jle
mov
es
jecxz
add
outsb
in
cli
mov
mov
dec
jg
jbe
or
xlat
lret
sahf
iret
out
iret
lea
cli
dec
jg
bound
pushf
pop
pop
jo
add
push
ficoms
push
cltd
dec
cmpl
cmp
cmp
movsl
dec
jp
das
je
xchg
inc
pop
adc
cmpsl
mov
dec
xchg
stc
xor
push
xchg
inc
pop
fisttpl
mov
lods
lcall
fwait
repnz
mov
lcall
inc
pop
push
in
or
lret
cmp
cmpsl
mov
in
pushf
jnp
mov
adc
xor
push
loopne
xorl
adc
out
movsl
and
mov
out
mov
dec
bound
ret
push
mov
ja
insl
xchg
mov
ret
pop
lahf
inc
call
mov
stc
mov
add
push
jp
icebp
push
adc
mov
out
adc
mov
push
sub
dec
cs
cmp
jl
ds
orl
movsl
xchg
xor
test
adc
shll
aam
adc
push
jae
mov
mov
fiaddl
dec
ficoms
in
ljmp
cmp
push
lods
popl
jecxz
or
lds
aam
pusha
push
push
ja
int3
dec
out
cwtl
mov
pop
imulb
in
lods
inc
jnp
stos
lods
jbe
mov
imul
lock
mov
xor
cmp
hlt
mov
addb
sub
or
xor
cwtl
lret
clc
aas
sub
js
cmc
decl
jne
mov
cld
push
jp
movsb
bound
mov
enter
or
mov
dec
sub
iret
dec
or
mov
int
dec
xchg
push
adc
sub
push
adc
mov
mov
mov
inc
sbb
cld
das
ds
jo
inc
je
in
jb
insb
imul
xor
sub
mov
insl
jbe
jp
sub
add
idivl
xor
icebp
jle
cmp
insb
hlt
or
aas
rol
xor
xchg
inc
xor
movsb
or
je
inc
push
dec
fcmovbe
js
je
mov
dec
adc
xchg
sub
pop
mov
xchg
cmp
gs
jmp
or
and
add
mov
dec
ja,pn
out
cld
arpl
jmp
push
aam
es
loope
sub
xchg
scas
sub
jbe
aaa
lcall
mov
dec
stos
std
inc
fwait
sub
xchg
push
push
bound
jo,pn
lea
and
leave
sub
mov
lods
sub
mov
mov
into
xor
push
mov
pop
mov
dec
sub
imul
ss
adc
mov
js
sub
add
inc
cld
sub
mov
out
sub
or
add
xchg
jb
mov
pop
dec
subl
rcrb
loop
cli
jo
xlat
cmpsl
scas
xor
jp
pop
push
jno
ss
jae
lret
pop
cmp
stc
add
sub
test
dec
fildll
mov
shll
jecxz
js
inc
imulb
mov
mov
sub
in
cmc
pop
mov
dec
dec
cmp
pushf
nop
popf
stos
es
inc
mov
mov
sti
and
scas
or
cmp
jo
and
imul
dec
aam
icebp
jl
push
adc
pop
inc
sbb
mov
test
cwtl
lea
lods
sbb
sbb
adc
jnp
mov
loope
jbe
das
sub
inc
mov
xchg
out
xchg
sub
scas
into
pop
jl
push
sub
pop
aam
pop
sarl
hlt
and
mov
sub
fisubl
sub
jge
mov
mov
dec
ss
xor
movsb
mov
outsl
punpcklbw
push
in
cwtl
mov
dec
sub
std
int3
push
or
sub
adc
icebp
sbb
inc
sub
mov
roll
dec
sub
insb
call
sub
clc
sbb
nop
or
sub
in
mov
sub
outsl
add
jae
xchg
sbb
mov
test
call
lods
sub
mov
movsb
inc
pop
mov
rol
sahf
and
mov
sub
out
pop
xor
inc
push
not
cmp
jp
fistl
xchg
adc
xor
mov
popf
pop
loop
hlt
sub
jne
or
push
test
mov
movsb
imul
cli
enter
mov
bt
cmp
sub
dec
inc
call
jae
push
dec
jns
sub
sbb
fbstp
rorl
call
xchg
sub
sahf
movsb
dec
jl
sub
aad
inc
cmp
jmp
sbb
jecxz
adc
bound
mov
push
sub
leave
push
fidivl
sahf
dec
push
fs
pop
clc
adc
in
xchg
sbb
mov
xor
testl
arpl
or
test
cmpsb
clc
mov
mov
sub
mov
xorb
aam
call
ret
fimull
test
pop
loopne
stos
push
sub
pop
sub
jns
cmp
or
jmp
sub
dec
and
lods
cs
clc
ret
imul
pop
jne
push
dec
cs
or
and
lods
dec
mov
push
xlat
jecxz
iret
sbbl
sub
in
cmpsb
fs
mov
dec
cmp
push
lcall
out
and
add
lods
dec
sub
push
ficomps
loopne
push
fwait
int3
jbe
ret
ret
fidivl
sti
mov
push
xor
pop
add
push
xabort
addr16
mov
ljmp
pop
xchg
aaa
cmc
cwtl
loop
add
sub
fistpl
sarb
sub
dec
js
sub
fdivs
sub
dec
in
out
adc
je
andb
push
ljmp
lods
mov
and
add
out
pop
sahf
cs
mov
aam
jno
adc
sub
xorb
rcll
sarb
add
inc
fmull
inc
inc
ljmp
xchg
ret
or
rorb
fldl
loop
xchg
ss
mov
push
out
or
into
flds
ss
dec
sub
push
fisubrs
outsl
in
sub
outsb
cmpsl
jp
and
jb
sub
inc
sub
xchg
pop
addr16
int
out
call
sub
pxor
add
mov
push
sub
xchg
into
imul
icebp
sbbl
sub
insl
lods
adc
inc
stos
in
adc
inc
xchg
leave
jbe
jno
jnp
in
or
pop
lahf
outsl
rcrb
ja
mov
or
sbb
mov
das
push
call
pop
cli
aas
ja
leave
sub
mov
jno
dec
sub
mov
loope
cld
mov
and
sbb
pop
in
jl
mov
cmp
fwait
mov
push
dec
dec
jae
sub
ds
inc
in
fildl
pop
xchg
ror
mov
mov
outsb
out
sub
shlb
or
ud1
lahf
ss
add
jne
mov
mov
sub
outsb
arpl
cmp
loop
in
sub
lcall
xor
insl
into
sub
sbb
add
aam
cltd
sbb
ret
sub
cmp
xchg
jle
adc
sub
in
sub
mov
inc
push
out
data16
adc
aas
in
stc
sub
push
lods
ja
mov
cwtl
test
jmp
pop
xor
xchg
xchg
dec
xchg
add
sub
mov
movsb
fisubrs
jp
xchg
xor
push
cwtl
inc
stc
inc
lcall
pop
stos
es
inc
push
fwait
adcb
outsb
inc
shlb
adc
mov
mov
xor
adc
loope
js
sub
pop
scas
mov
sub
xchg
aad
lods
jmp
fidivrl
loop
sub
and
imull
aam
mov
sub
push
cmp
daa
es
insb
inc
test
fwait
jno
lds
and
jp
pop
ret
sub
sbb
stc
dec
push
cmp
pop
nop
sbb
sub
das
bound
push
push
jns
repnz
xor
push
arpl
faddl
rcr
out
mov
icebp
sub
movsb
and
fstps
push
aaa
sub
iret
mov
dec
sbb
sbb
ret
xor
or
imul
ljmp
addl
mov
loope
sub
inc
mov
nop
pushf
fcoms
adcb
sti
popf
mov
mov
mov
mov
stos
mov
addr16
dec
cmpsb
mov
mov
test
out
inc
loopne
ficomps
mov
fildl
cs
mov
test
out
pop
mov
xchg
pushw
shlb
loop
push
test
subl
jne
int
sub
out
ljmp
sbb
mov
inc
mov
push
push
orb
cs
icebp
sub
and
out
sub
int3
mov
sbb
cmp
fldl
jns
pop
sbb
iret
mov
add
jle
dec
inc
xchg
jg
mov
in
sub
jmp
ja
inc
out
outsl
xchg
pop
negl
inc
add
add
mov
cmp
aaa
push
cmp
push
pop
sub
xchg
in
jns
sbb
std
ret
pop
inc
test
stos
test
fisttpl
iret
je
mov
push
add
mov
sub
adc
loop
ret
aam
call
mov
cltd
ja
push
sub
lret
pop
dec
ficompl
cmp
cs
mov
jne
repnz
addr16
cmp
out
push
mov
inc
mov
or
pop
sub
jge
ret
push
adc
mov
imul
fs
pop
jb
lea
stos
das
test
out
or
movsb
and
jbe
inc
pop
sub
inc
test
dec
jle
sub
and
xchg
push
sub
jge
fadd
sbb
jno
mov
adcl
dec
mov
lds
jae
stos
movsl
subb
sub
lcall
sub
into
or
mov
js
mov
pop
notl
mov
icebp
or
imul
sub
sub
jp
mov
xchg
fsubrl
jo
jne
inc
adc
push
cmc
lds
mov
loopne
and
mov
cmpsl
mov
sub
jmp
cmp
xor
lcall
mov
and
mov
sbb
pop
scas
stos
sub
xor
push
xchg
mov
arpl
in
pop
aad
shl
jge
pop
ror
sub
push
loope
jp
mov
adc
in
xor
sub
repnz
xchg
outsb
dec
adc
int3
loop
dec
sub
push
pop
xchg
jl
push
pop
cmp
mov
dec
pop
lret
outsl
fadds
inc
dec
lock
inc
push
jg
gs
test
mov
fcmovnbe
and
sub
shl
stos
lods
lock
ret
inc
push
shlb
and
jg
or
rcr
fcmove
xor
stos
lock
inc
cs
cmpsb
and
aad
sbb
jno
daa
xor
sub
in
outsb
dec
loopne
pop
add
dec
sub
xchg
addr16
sti
js
jo
loopne
cmp
xchg
fsubrl
cmpsl
mov
jne
cmp
aas
sub
jmp
inc
cmc
leave
and
mov
test
int3
xor
jecxz
bound
pop
cmp
decl
cmpsb
call
add
rorb
lock
pop
insb
cmc
sbb
mov
inc
inc
std
mov
stos
sub
pop
or
into
cmpsl
cmp
cmpsb
pop
lods
push
ds
test
adc
inc
adcb
in
leave
nop
jnp
es
jae
out
fmuls
or
jmp
movsl
hlt
scas
lret
pop
insb
lret
jnp
mov
jne
je
jno
test
xchg
add
push
jnp
aaa
adc
inc
push
scas
adc
cld
push
mov
xor
jle
cltd
sbb
test
call
sub
imul
xchg
inc
mov
and
mov
shl
jecxz
or
jg
or
push
sti
test
jne
inc
cmpsb
clc
sbb
add
lds
shrl
sarl
out
int3
add
stos
mov
mov
fsts
bound
pop
cwtl
sub
test
ficoml
sbb
cltd
cmpsl
mov
push
inc
sub
test
ret
outsb
push
mov
inc
sub
sub
and
pop
jne
fidivs
pop
jmp
sub
push
out
in
jp
in
das
aad
and
rcrb
adc
jecxz
dec
adc
xor
inc
mov
cli
insl
mov
outsl
mov
fidivrs
pop
lahf
sub
xchg
popf
andb
and
jno
jae
jmp
nop
and
sub
addr16
cli
outsl
mov
data16
fs
pop
mov
xchg
aaa
hlt
pop
jl
sub
pop
dec
add
jnp
sbb
sbb
adc
fs
aaa
jg
sub
in
add
test
lcall
adc
call
mov
pop
stos
fxch
push
xlat
mov
jnp
xchg
dec
data16
and
sbbb
lret
insl
pop
cmp
mov
cld
hlt
xor
push
cmp
push
dec
xor
sub
inc
enter
add
sub
push
lock
inc
jno
cmp
xchg
inc
sub
xlat
pop
xchg
inc
repz
jns
out
mov
sub
sub
adc
dec
jo
sub
inc
outsb
or
mov
mov
xchg
xchg
cmpsb
dec
decb
cmp
insb
mov
outsl
push
mov
cmp
enter
jne
fisttps
cwtl
sub
mov
stos
cld
push
sub
jp
movsb
sahf
dec
push
sbb
push
out
das
lcall
ds
sub
sbb
repnz
sahf
fbstp
aaa
and
push
and
push
jl
jmp
mov
inc
xchg
push
daa
orb
mov
fidivrl
xchg
ljmp
or
nop
push
mov
out
jbe
mov
jae
sub
addb
ret
sub
add
addr16
xchg
add
cmp
sbb
jae
in
int
ja
imul
push
out
jno
pop
dec
add
xchg
jge
inc
rcl
pop
enter
testl
dec
sub
xchg
cs
stos
stos
mov
and
mov
sub
cmc
dec
adc
push
enter
icebp
xlat
test
adc
or
cs
dec
dec
inc
xchg
sub
repnz
bound
jmp
outsl
sub
inc
or
xor
and
sbb
imul
and
xlat
arpl
dec
xor
and
add
loope
xorb
fimull
fimuls
mov
out
pop
sub
int3
and
sub
sub
aad
cmc
popf
lahf
dec
cmc
sub
inc
mov
mov
inc
fisttpl
push
ss
loopne
sbb
dec
push
adc
inc
subb
or
xlat
fldt
xchg
mov
pop
scas
pushf
es
jge
add
imul
pop
in
push
mov
je
mov
in
out
mov
push
cltd
and
jb
sahf
mov
or
dec
stos
arpl
sub
jge
fidivrs
push
sub
and
das
inc
imul
fisttpl
push
sub
leave
lods
gs
push
jns
icebp
inc
sub
cmp
push
insb
fldt
repz
mov
es
inc
aad
cmp
shll
xor
add
adc
mov
cvtpi2ps
js
mov
pusha
sub
sub
xchg
movb
or
sub
sub
mov
int
xor
cmp
and
addr16
clc
sub
mov
sub
rol
mov
pop
test
and
addr16
xor
leave
stc
inc
cmpsl
sub
xor
xchg
mov
sub
push
std
xchg
test
test
loop
divl
ss
adc
or
jbe
jo
out
inc
dec
roll
lds
pop
push
push
cmc
lcallw
adc
or
jnp
cs
lcall
sbb
sub
push
jo
adc
lods
inc
je
or
inc
sub
jnp
sub
popa
cmp
cmp
or
fdivs
addr16
dec
and
push
mov
cmp
sub
frstor
ljmp
test
cmpsl
lea
sbb
in
test
or
test
neg
loop
add
sub
sub
sub
mov
pop
cmp
fldenv
fisubrl
jge
dec
add
clc
adc
outsb
inc
sub
cmpsl
dec
jle
xchg
imul
rcrl
sub
lods
mov
add
out
cmp
lock
push
stos
inc
or
push
std
sub
push
aaa
popa
sbb
call
andnps
leave
cmp
popw
push
pop
sub
xlat
popf
inc
flds
lcall
jns
ret
inc
int3
mov
sbb
adc
xor
dec
push
scas
sub
mull
pop
lods
dec
es
inc
or
inc
sub
and
jp
push
push
movsl
testl
sub
shr
loop
cmp
inc
mov
or
add
sub
inc
add
out
pop
lods
xchg
pop
xor
daa
je
cmpsb
cmpsl
mov
test
cmp
adc
loop
sbb
sub
jge
xchg
mov
pop
test
xchg
sbb
mov
pop
adc
les
jno
and
leave
mov
out
enter
es
addr16
daa
pop
das
test
ljmp
addr16
sub
out
fisubl
cwtl
mov
pop
cmp
dec
inc
sub
in
and
dec
inc
jnp
and
adc
icebp
inc
pop
mov
lret
xlat
lahf
adc
loopne
sahf
xor
dec
xchg
mov
sub
jne
icebp
mov
sbb
pusha
test
add
cmp
insb
movl
test
rcrb
testb
ret
jno
xchg
sub
dec
lahf
dec
adc
or
mov
mov
dec
mov
or
movb
cs
fisubrs
push
cwtl
pop
and
push
shrl
fstpl
push
outsl
out
ljmp
mov
fisttps
aaa
jne
add
shrb
sub
inc
or
ds
loopne
cmp
daa
push
sub
stos
jmp
jecxz
mov
xchg
mov
sub
sbb
jae
test
sub
dec
sub
lret
mov
cmpsl
icebp
sub
movsl
iret
sub
in
stc
push
adc
inc
int3
jns
xlat
call
imul
inc
aad
jecxz
sbb
mov
jp
ljmp
adc
inc
xchg
aas
cwtl
adc
dec
pop
daa
fidivrl
sub
and
fisubrs
cmpsl
or
arpl
sbb
pop
sbb
jg
pushf
or
and
sub
xor
pop
xchg
movsl
aam
push
daa
mov
aaa
adc
insb
popf
sub
addl
mov
push
sub
xchg
popf
les
sub
leave
das
ficomps
insb
adc
lahf
cmp
xor
jb
pop
add
adc
mov
fwait
pop
in
dec
rcr
sub
es
testl
mov
pop
cli
dec
xchg
mov
mov
add
out
cltd
inc
test
mov
or
inc
sbb
and
nop
in
mov
out
xor
or
imulb
xor
xor
xor
or
call
cmpsb
out
mov
add
imul
das
push
jge
ljmp
outsl
lahf
mov
in
test
rcrl
jmp
cs
insl
gs
arpl
xchg
cmp
aaa
data16
imul
sub
cmp
cs
es
popa
addr16
cs
mov
mov
jbe
shll
cmp
lods
sub
inc
or
test
stos
into
popa
scas
cs
ret
iret
push
push
jne
popa
ss
dec
or
jnp
repz
xchg
pop
sub
inc
push
aas
inc
repnz
std
ficoms
push
inc
test
in
inc
inc
cltd
cmp
in
cmp
xchg
adc
ljmp
sub
inc
adc
scas
push
cmp
popa
cs
stos
pusha
cli
loop
sbb
jbe
cmp
ss
or
out
push
inc
arpl
sub
push
js
enter
mov
mov
push
sbb
repnz
push
and
push
inc
dec
orl
mov
incb
arpl
es
xorb
ljmp
or
mov
movsl
cmp
mov
push
outsb
scas
hlt
ss
ja
cmpsl
push
jns
adc
sub
xor
iret
cs
imul
mov
push
sbb
pop
sbb
into
fiaddl
cmpsb
addl
ret
ljmp
aas
leave
xchg
lea
pop
rcll
mov
lods
mov
jnp
mov
mov
fidivrs
jle
mov
std
jle
xchg
adc
xchg
jmp
jnp
mov
iret
jae
dec
sti
add
mov
call
push
inc
jns
and
mov
push
dec
mov
cs
or
repnz
outsb
fcomps
add
sub
mov
inc
js
mov
cmp
inc
and
inc
mov
xchg
xchg
fsubl
mov
icebp
out
lahf
push
pusha
lea
mov
dec
shl
fimuls
push
mov
ja
jae
mov
mov
iret
adc
adc
js
pop
mov
aam
pop
pop
and
xchg
lea
push
cmc
lock
jae
add
cmp
adc
jl
push
test
mov
sub
repz
or
cmp
test
test
pop
call
cmp
adc
mov
jno
data16
ds
inc
imul
xor
scas
repnz
fildll
aas
or
out
or
inc
xor
jb
popl
jnp
out
push
sub
cmp
lret
inc
mov
push
sub
mov
push
sbb
dec
lcall
out
or
cli
filds
push
jnp
sahf
sbb
or
ljmp
adc
popf
cmp
xchg
cmp
inc
jmp
jnp
push
orb
inc
out
jns
sbb
sbb
jb
out
xchg
repnz
add
and
mov
mov
jo
cmpb
into
jbe
xor
sub
push
xchg
imul
fwait
xor
das
call
sub
clc
or
clc
adc
adc
ja
clc
cli
xor
data16
mov
cltd
bound
mov
and
dec
hlt
imul
add
ljmp
or
gs
jmp
jbe
sarb
inc
mov
jp
mov
mov
loope
test
and
ss
dec
cltd
or
sarl
ljmp
cmpsl
dec
pop
mov
xchg
test
fstpt
mov
or
xchg
lcall
sahf
mov
test
cmp
push
and
adc
and
lret
adc
lock
jnp
jo
add
in
jmp
sub
pop
xor
scas
sbb
lods
cs
jge
inc
dec
fidivl
fcomps
adc
sarl
hlt
and
sbb
mov
repz
jmp
push
mov
jp
ljmp
dec
scas
cwtl
sbb
test
push
outsl
stos
jle
dec
dec
or
pop
mov
lret
das
xor
fsubp
xchg
je
stos
ss
push
rorl
add
stos
ret
cmp
stos
outsb
sub
addb
mov
repnz
xor
mov
iret
sub
push
dec
fldt
ds
jmp
or
imul
fwait
ljmp
push
add
test
adc
ss
in
aam
xchg
pop
sarl
into
mov
lds
xor
aaa
fidivrs
ret
pop
imul
mov
int3
mov
push
cltd
mov
stos
bound
pop
popa
sbb
gs
push
sbb
mov
into
cmp
push
xchg
mov
jnp
inc
or
imul
sub
xor
mov
call
adcb
sbb
add
dec
mov
dec
lcall
jb
push
fwait
mov
in
push
fisubl
scas
dec
or
dec
mov
or
popa
xor
or
or
arpl
cmp
xchg
inc
inc
mov
mov
iret
aaa
aam
enter
imul
int3
jnp
jb
mov
xchg
loop
pop
addr16
fcmovnbe
data16
push
inc
aaa
mov
xor
pop
or
cmp
stc
loope
fisttpl
jmp
mov
subl
push
cli
daa
or
push
jb
psrld
pop
stc
sub
jp
or
xor
stos
sub
lret
adc
or
mov
jecxz
mov
imul
sahf
jne
pop
sub
ljmp
loop
pop
sbbl
nop
add
aad
cwtl
outsb
mov
stc
decb
cmp
cmp
xor
les
sti
stos
pop
fisttpl
push
lret
in
sti
mov
cmp
mov
mov
outsb
ds
sub
mov
jp
adc
cltd
and
jb
adc
mov
test
imul
mov
or
mov
fcom
cli
repnz
jb
addb
push
sar
pop
inc
loop
sub
pop
out
mov
lret
cli
repz
mov
clc
ds
mov
mov
hlt
mov
dec
lahf
mov
stos
mov
and
ljmp
test
mov
cmpl
movsb
repnz
sub
mov
je
rcll
xor
inc
repz
jbe
xchg
sbb
dec
pop
xchg
test
jns
insb
xchg
mov
stc
lcall
sub
imul
into
loop
xchg
outsb
mov
test
mov
aaa
dec
xlat
imul
aaa
fisubrl
jnp
pop
mov
mov
xor
nop
int3
push
and
fdivrs
cli
or
shrb
push
cwtl
jle
pop
xor
gs
test
sarb
sub
dec
inc
pop
push
lods
mov
jg
sub
inc
inc
push
scas
sti
lret
xchg
inc
pop
add
jle
sbb
xor
repnz
cli
xchg
fwait
or
inc
fsub
mov
push
divl
jb
jns
pop
dec
push
dec
and
cli
mov
mov
mov
js
mov
leave
dec
pop
movsb
loope
iret
mov
or
xor
xchg
lcall
loopne
jge
ljmp
cmp
cmp
adc
sbb
sbb
mov
xlat
cmpsl
push
sbb
sahf
aas
lcall
and
push
pop
int3
sub
push
or
divb
mov
in
mov
inc
loop
ret
jb
adc
sub
fistpl
jle
push
cli
insl
fwait
mov
mov
adc
sbb
or
bnd
push
lcall
sarl
jp
pushf
js
push
mov
inc
or
dec
int3
sub
cli
mov
jmp
stos
iret
cmp
pushf
out
sbb
sub
cs
push
jae
ret
push
add
sbb
ficompl
add
inc
incb
mov
loop
lock
jb
lret
jle
jp
xchg
cs
insb
sub
jmp
adc
ljmp
inc
pop
loop,pn
out
sbb
mov
movsl
lret
push
sub
stos
mov
pop
or
mov
dec
test
scas
in
and
cmp
jecxz
jae
pop
out
jecxz
mov
push
mov
aam
stos
imul
cs
jbe
sarl
stos
je
es
lret
popa
pop
mov
es
cmp
sub
bnd
mov
jb
mov
lahf
mov
andb
push
inc
cmp
and
jne
cltd
push
jp
shlb
sbb
mov
in
insl
sbb
pop
pop
and
int3
mov
leave
push
stc
or
repnz
mov
lret
and
add
lcall
inc
push
sbb
push
aad
out
or
es
jp
lods
xchg
adc
mov
ljmp
push
das
mov
pop
mov
mov
jp
insl
add
enter
mov
push
mov
cmpsb
insb
cmpsl
jecxz
sub
fdivs
rcr
out
imull
daa
scas
push
pop
mov
ficoms
rorl
aaa
inc
lds
popa
pop
mov
shrl
dec
push
cs
pushf
lds
repz
out
idiv
xchg
adc
into
xor
adc
inc
inc
sti
add
mov
sarl
sub
sbb
add
bnd
cmp
sub
mov
and
inc
shlb
jge
iret
into
mov
cltd
out
jp
xor
or
pop
mov
mov
jo
outsl
out
mov
or
loop
mov
jb
pop
loop
ret
outsl
mov
leave
adc
mov
sbb
out
mov
xor
or
pop
inc
leave
lcall
out
lds
mov
xchg
mov
fidivl
ret
and
mov
mov
xchg
dec
js
mov
rcll
dec
ljmp
les
cmp
fstpt
sub
lock
jmp
mov
incb
js
test
stc
aad
inc
push
jg
stos
xchg
xchg
sub
inc
push
iret
sti
sub
or
xchg
jns
inc
cmp
or
cld
cmp
cltd
mov
mov
clc
jne
or
or
jge
lock
mov
mov
cltd
aam
fsubrs
out
cli
or
inc
jge
push
shlb
stos
jp
xlat
imul
dec
repz
xchg
pop
out
cmp
push
punpckldq
mov
jns
xor
loop
xor
pop
and
cmp
ljmp
stos
adc
xor
cmp
sbb
xor
imul
pop
xor
pop
outsl
jns
mov
fdivs
into
push
sbb
clc
ss
shl
cltd
cmp
jns
jnp
stc
aas
stos
or
clc
repnz
outsl
fldl
ficompl
and
mov
fidivs
rol
loop
inc
adc
stos
push
mov
popa
cmp
adc
ljmp
cmpsb
cmp
mov
push
mov
push
xor
lret
scas
stos
out
pop
stos
test
sbb
cs
stos
imul
repz
jle
insb
xor
aad
pop
repnz
insl
imul
push
cmp
jb
shrl
bound
nop
lahf
pop
call
repz
scas
cs
test
xchg
fisubrs
in
and
jne
cmp
fs
and
fwait
test
hlt
loopne
scas
adc
cmp
mov
jmp
fs
pop
sbb
dec
sti
aaa
xor
sub
repnz
fiaddl
jecxz
loop
cli
clc
sbb
jbe
imul
out
mov
cmp
jmp
xor
add
mov
stos
in
cmp
cli
add
xor
arpl
pop
leave
pop
ret
sub
cmp
shl
rcl
ss
mov
cmp
lea
lea
adc
hlt
mov
push
movsl
cmp
sub
or
out
fcmovu
mov
lret
inc
jnp
or
mov
adc
xorl
loop
mov
pmulhw
sarl
rolb
js
sub
mov
pop
popa
and
dec
js
mov
hlt
popa
maxps
lock
adc
and
jle
pop
test
loopne
dec
shr
notb
dec
int3
mov
fmul
repnz
sub
dec
call
lock
xor
adc
sti
and
out
sti
in
cs
xor
sbb
ss
clc
es
sub
repnz
push
and
call
scas
mov
dec
pop
out
xchg
shrb
jge
popa
sub
push
cwtl
negl
movsl
mov
mov
jmp
insb
xorb
mov
testb
shr
mov
mov
aam
mov
add
lock
fstpt
or
cs
xor
js,pt
imul
cmp
lret
mov
mov
sbb
jnp
adc
clc
cmp
or
test
or
leave
in
dec
xchg
lret
xor
ljmp
and
aas
roll
sar
xor
mov
out
jge
jp
outsb
sbb
or
sbb
cmp
xchg
adc
dec
adc
cli
lds
lret
adc
or
cmc
test
pop
rolb
pushf
mov
movsb
or
sbb
inc
repnz
jb
lock
ds
xchg
fsubrp
fcmovbe
nop
cmp
decb
fwait
mov
jp
inc
call
call
mov
and
mov
cld
dec
mov
mov
aaa
push
or
xor
inc
add
pop
pop
adc
mov
pushf
aaa
jns
fwait
inc
pop
or
sbb
subl
cmp
cli
out
stos
inc
or
or
mov
scas
sub
or
fdivrs
stos
pop
xor
sub
cmp
jo
std
sbb
shlb
mov
inc
or
sbb
pop
stos
or
lret
popa
mov
dec
repnz
dec
loop
fidivrs
sub
sub
mov
lcall
addb
je
ljmp
or
cmpsb
and
mov
stos
add
pop
fcomps
sbb
ljmp
fsubrs
cmp
sub
push
pop
hlt
lds
sahf
fistpl
cmp
push
inc
dec
jl
jmp
or
xchg
jnp
in
sbb
imul
pop
in
test
jecxz
mov
inc
or
stos
lret
and
popf
and
inc
cli
push
in
sbb
jns
add
dec
cmc
inc
mov
and
orl
mov
mov
popa
mov
mov
jle
outsb
xchg
adc
or
leave
lret
pop
adc
test
loopne
outsl
loope
scas
test
push
and
jno
lea
into
outsl
ljmp
inc
sbb
jns
lods
popf
mov
fwait
or
cmp
adc
sahf
js
ret
jp
adcl
ret
inc
jnp
mov
push
aaa
data16
dec
mov
mov
andb
popf
mov
cmpb
aad
cmp
and
cs
cmp
xchg
rcl
lock
dec
push
add
xlat
add
mov
mov
fwait
shll
ficoml
popf
jnp
jb
jp
loopne
mul
cmp
push
mov
inc
and
idivb
cmp
or
xchg
or
add
xchg
inc
scas
push
subb
fiaddl
cli
mov
test
push
stos
gs
scas
fwait
mov
ss
lahf
sahf
push
out
pop
scas
mov
inc
in
in
jnp
or
sbb
out
push
lret
clc
popa
mov
iret
adc
lret
add
cmp
fistl
fdivrl
adc
pop
outsb
xor
lret
scas
xor
jg
push
pop
jp
and
ds
cmp
xor
cmp
outsl
jbe
and
arpl
mov
not
popf
sbb
push
cs
cmpl
lock
or
xor
mov
roll
dec
imul
dec
mov
dec
mov
mov
repnz
sub
xchg
ret
dec
pop
insl
add
jge
sarl
lcall
aas
imul
sub
dec
push
fsub
and
and
and
sbb
xchg
xlat
and
fwait
add
fisubrl
mov
stos
add
jp
push
test
inc
ret
mov
sub
jae
pop
push
aaa
mov
scas
mov
or
cmp
mov
push
inc
sub
repz
fwait
inc
mov
jle
xchg
lcall
jmp
or
stos
loope
mov
ljmp
dec
cmp
inc
fidivrl
inc
rolb
dec
fwait
inc
mov
add
jbe
or
fdivrl
jmp
int3
cmp
arpl
jae
mov
and
jmp
lret
xor
sbb
rolb
clc
mov
js
pop
mov
push
sbb
sub
shl
fsts
mov
jnp
out
fsts
add
fs
push
dec
int
inc
imul
mov
subl
mov
dec
dec
jecxz
lock
nop
or
aas
xchg
fwait
cmp
cmpsb
mov
ds
push
aad
cmp
dec
cli
push
xchg
je
xor
ss
dec
xchg
lret
jecxz
dec
xchg
lret
lods
nop
mov
cvtpi2ps
pop
pop
imul
lahf
setns
ss
jbe
ja
std
dec
or
xlat
call
inc
insb
mov
je
mov
dec
out
cmp
inc
sub
cli
push
mov
jns
lea
insl
movsb
mov
jns
push
adc
mov
aaa
pop
movsb
jo
sti
sbb
push
adc
mov
inc
fiaddl
push
pop
push
sti
jbe
xor
repz
test
ljmp
jecxz
pop
out
enter
or
imull
jge
aad
sbbb
and
icebp
xor
dec
jno
jb
ss
pop
sub
sbb
arpl
fisubrl
push
cli
in
out
js
push
cmp
inc
into
repnz
inc
cwtl
push
sahf
mov
aaa
addr16
add
inc
add
inc
push
addr16
xchg
ljmp
movsl
cmp
mov
and
stc
inc
inc
aas
arpl
scas
faddl
icebp
add
mov
loopne
sbb
aas
add
or
fimull
xlat
or
cmp
jnp
je
push
mov
push
ffreep
test
mov
sbb
jle
sub
pusha
and
ja
xor
stos
fwait
aaa
stos
test
ljmp
mov
mov
push
les
jae
push
mov
pop
adc
pop
push
orl
mov
out
aam
cmp
ljmp
mov
xor
bound
pop
mov
adc
bound
adc
ret
mov
dec
dec
push
cmp
lock
data16
decl
imul
pop
scas
push
decl
aaa
sbb
or
pop
scas
xor
jecxz
mov
mov
sbb
out
dec
sarl
nop
fdivrl
xchg
cmp
cmp
sub
mov
mov
fcmove
dec
outsb
loopne
daa
or
xchg
jg
cmp
in
ror
jnp
or
xor
popa
xlat
jmp
and
add
jb
orb
mov
idiv
or
fcmovu
js
and
dec
cmp
push
pop
popf
xchg
sti
jnp
push
jge
mov
mov
stc
push
inc
mov
xlat
lcall
cld
mov
sbb
roll
fnstsw
fwait
stos
or
popa
sub
in
push
fmuls
push
sbb
call
int3
imul
push
or
cmp
repz
ljmp
jecxz
cmp
dec
mov
sbb
rclb
mov
jecxz
lock
in
and
push
adc
lret
inc
sti
xor
mov
push
lret
inc
repnz
jns
mov
cmp
pop
dec
loop
sar
adc
sbb
sbb
scas
adc
push
leave
or
fcmovnb
cs
jge
mov
pop
fsubr
movsl
ds
xchg
xlat
inc
and
mov
sub
add
nop
shlb
rcll
or
repz
mov
fcomps
sub
jbe,pt
inc
add
push
fidivrs
notb
mov
inc
mov
loop
push
xor
scas
cli
pop
inc
out
imul
push
or
jnp
out
mov
pop
inc
cmp
popa
outsl
or
ljmp
push
fists
or
push
mov
leave
xor
inc
dec
out
add
jecxz
jmp
arpl
mov
adc
fnstenv
pop
hlt
insb
push
or
push
test
lret
pop
jbe
sub
in
xor
inc
mov
push
ficoml
push
push
in
call
mov
rolb
les
scas
adc
xchg
int
and
ds
aaa
inc
scas
mov
jo
pop
push
nop
cmp
mov
ljmp
repnz
test
push
pop
popf
out
leave
lcall
addl
test
mov
inc
cmp
adc
pop
addb
and
xchg
sub
jle
mov
mov
adc
sub
add
dec
movsb
scas
fsts
push
dec
cmp
aas
push
lret
rcll
or
lret
icebp
mov
mov
in
dec
fsubs
imul
js
dec
out
out
outsb
stos
lret
sti
or
dec
sub
repz
lret
cmp
dec
orb
repnz
dec
bound
int3
xchg
add
push
cwtl
lahf
loopne
xor
adc
das
in
mov
xor
icebp
push
popf
rcrb
add
pop
jmp
pop
sbb
ljmp
fisttpll
jg
fidivrl
cltd
out
or
pop
pop
mul
pop
cmp
jle
inc
mov
sbb
push
add
cmp
and
adc
mov
cmp
int
cmp
jmp
cmp
ss
jo
bound
rorb
vpshufhw
outsl
int
dec
pop
fnstcw
enter
dec
xchg
nop
add
push
mov
lahf
paddb
out
xchg
pushf
adc
fwait
imul
sbb
es
outsb
cwtl
push
shll
ljmp
cmp
push
lods
enter
popf
mov
pop
push
pop
mov
fsubrs
xchg
fldenv
cli
jne
cmpsl
jns
pop
ja
push
push
pop
loope
jle
lea
sti
in
stos
jo
dec
scas
mov
in
mov
or
bound
push
frstor
pop
iret
mov
inc
mov
xor
mov
fidivrl
jge
orl
aaa
inc
xchg
or
clc
cli
repnz
mov
rolb
lahf
js
or
shl
pusha
jmp
outsl
out
or
jg
xor
inc
ja
arpl
dec
scas
inc
outsl
scas
out
lret
jg
mov
scas
mov
inc
mov
lret
insb
ljmp
call
mov
test
pop
aaa
mov
push
movsb
push
loop,pt
cwtl
adc
fwait
mov
dec
stos
cmp
fcmovne
jmp
sbb
xlat
inc
mov
cmp
mov
or
out
sti
jno
out
mov
mov
sbb
pusha
scas
scas
sti
inc
lret
or
pop
add
or
out
pop
loop
mov
xor
aaa
in
bound
js
aam
cmp
jmp
sub
stc
mov
and
mov
mov
ljmp
mov
or
push
call
push
pop
and
mulb
lsl
dec
lods
sahf
cmp
lahf
adcb
sbb
repnz
in
call
cli
mov
adcb
sbb
pop
std
scas
and
jo
push
sbb
add
xchg
cs
mov
insb
rcrb
xor
idivb
cli
and
repnz
stc
dec
out
and
dec
ficoml
enter
pushl
ja
mov
cli
cmpsl
test
fwait
cmp
jmp
push
inc
pop
xchg
or
ljmp
lods
ljmp
pop
out
out
hlt
adc
call
sub
ljmp
or
adc
pop
mov
cli
inc
dec
xor
or
orl
stos
push
pop
sbb
jge
mov
mov
iret
mov
mov
jbe
shll
ficompl
adc
mov
pop
push
xor
mov
dec
and
sbb
mov
and
nop
jo
pop
push
sti
repz
and
ljmp
in
jb
mov
pop
xchg
sbb
lahf
cmp
adc
into
clc
cmpsb
les
jns
cli
iret
stc
lret
xchg
push
jmp
sarl
push
sub
fidivl
cmp
lret
rorb
nop
mov
xchg
pop
mov
lcall
push
stos
push
out
add
mov
repz
lret
mov
xchg
and
test
push
push
loope
or
and
lret
fisubl
pop
add
mov
mov
push
pop
adc
mov
call
or
add
fmul
push
int
rcrb
jecxz
shr
and
or
orl
ret
jle
jle
mov
pop
add
sti
icebp
adc
xor
dec
out
outsb
jbe
pop
fsubrl
sbb
dec
test
ljmp
enter
pop
push
call
push
int
mov
cld
stos
inc
push
test
inc
pop
clc
jnp
fstps
or
lcall
fimull
repnz
mov
and
sbbb
cmp
mov
or
or
dec
jg
leave
repnz
mov
lret
mov
repz
or
sub
mov
and
cmp
into
call
sbb
sub
jb
repz
idivl
push
mov
aas
and
or
out
cli
or
loopne
dec
push
ret
lret
mov
sbb
inc
into
out
push
stos
in
sbb
mov
pushf
xchg
mov
es
dec
sub
icebp
jbe
mov
es
sub
add
mov
add
mov
orl
out
xor
pushf
adc
lcall
addr16
stos
jns
fimull
ret
sub
mov
es
cmpsb
sbb
scas
jp
sarl
addl
and
and
lcall
lea
popa
fdiv
sbb
xor
or
movb
out
mov
pop
pop
cmc
dec
ss
fdivs
jmp
lret
mov
cs
stos
sub
mov
je
pop
pop
call
push
out
sbb
pop
sbb
add
ss
addr16
in
add
xchg
adc
fdivp
inc
pop
jb
out
lock
inc
sub
sub
or
mov
or
add
hlt
mov
int
mov
mov
rorb
pop
sti
lock
pushf
jmp
dec
push
movsb
pop
je
mov
lea
xorl
jbe
imul
push
shr
fxch
iret
and
fcomp
fisubs
inc
mov
fists
add
pop
stos
pop
pop
cmpsl
out
dec
inc
add
es
pop
jecxz
xor
and
xchg
outsl
insl
nop
lock
and
sub
xor
enter
pop
nop
iret
mov
add
rcl
sbb
je
or
cmc
or
shrb
push
neg
filds
repnz
call
mov
mov
enter
roll
jae
in
out
xchg
cmpsb
mov
test
call
sub
lea
call
stc
popf
pop
pop
je
ss
xor
xor
cmp
push
test
xchg
stc
pop
cmp
jns
push
popf
mov
outsb
lcallw
mov
cmpb
sbb
leave
into
stos
cmp
inc
hlt
add
jg
jge
jnp
add
lret
pop
mov
inc
and
testb
pusha
lea
jmp
call
jle
jns
cmpl
cmpl
jle
cmpl
push
xor
arpl
pusha
sahf
lahf
xchg
xchg
push
pop
inc
mov
lahf
xor
scas
xor
inc
jno
dec
dec
std
add
aas
jns
add
add
inc
or
push
movsl
and
cmovne
pop
add
pop
mov
lea
xchg
test
mov
dec
pop
loopne
cmp
leave
cmp
pop
or
popl
cmp
xorb
or
ja
xchg
mov
mov
repnz
je
lahf
stos
add
cmp
call
not
jmp
mov
gs
xchg
xchg
outsl
insl
outsb
pusha
arpl
cltd
addr16
push
mov
call
mov
push
nop
push
xchg
out
scas
cwtl
adc
lahf
xchg
out
fistps
daa
pop
ja
nop
pop
push
adc
fwait
test
data16
add
and
mov
test
sub
test
inc
xor
jbe
xchg
jp
cltd
ljmp
addr16
daa
or
sub
ret
negb
mov
jo
add
adc
addr16
repz
mov
inc
dec
in
repnz
push
xchg
add
dec
aaa
fmull
insl
sbbb
sbbb
dec
push
rcrl
xchg
xchg
jne
or
sub
sarl
fwait
add
fcmovnbe
cmc
ss
je
prefetch
mov
mov
lods
out
jecxz
cltd
mov
mov
adc
pop
mov
lret
aad
pop
test
lods
jge
lret
ss
and
test
jnp
xchg
xor
inc
xor
orb
out
jmp
pop
cmp
and
es
clc
pushf
arpl
hlt
cwtl
xchg
movsb
movsb
mov
cmpb
daa
and
sbb
dec
push
sbb
repnz
inc
mov
aad
and
shrl
and
sub
shl
add
repnz
add
ds
fdivrp
inc
pushf
push
sbb
cmpsl
xchg
lods
xchg
xlat
nop
xlat
loope
mov
addl
gs
sbb
lea
jmp
xchg
not
mov
push
push
not
lahf
not
lea
pushl
movl
push
call
adc
push
je
inc
inc
inc
out
push
adc
out
xchg
incl
sub
imul
cld
roll
imul
bound
arpl
leave
rcr
xchg
pop
leave
push
xor
push
xor
subb
hlt
cmp
hlt
or
mov
and
into
aam
sub
and
add
daa
sahf
pop
in
ljmp
pop
bound
insl
sbb
cmp
cltd
scas
scas
in
lods
cltd
insb
jb
push
je
dec
mov
mov
inc
inc
dec
mov
mov
dec
inc
into
pop
add
push
pushw
push
dec
inc
in
and
ljmp
and
je
stos
movsb
notl
jl
int3
sub
test
dec
ja
or
in
xor
movsb
movsb
movsb
test
mov
mov
mov
int
lret
lock
lret
test
cmp
pusha
lea
jb
test
cmc
pusha
test
cmp
mov
pusha
lea
jae
push
mov
pushf
bts
or
mov
sar
shl
mov
push
mov
sub
jmp
dec
lods
dec
push
je
cmp
cmp
sti
push
test
mov
arpl
rcrb
enter
addb
mov
jne
cmp
iret
xor
outsb
outsb
and
cmp
cmp
inc
fs
mov
push
popf
push
int
add
enter
ds
in
addr16
adcb
ret
aas
jne
jbe
mov
test
inc
xor
and
lds
sbb
ds
mov
sarl
jb
push
inc
jnp
add
inc
and
sub
push
test
shl
mov
pusha
pushf
lea
jae
push
pusha
pushf
pushf
lea
call
jmp
pop
pusha
mov
push
pushl
ret
pushf
movl
pusha
call
inc
pop
mov
sub
fsubrl
daa
and
inc
jecxz
cmpsl
pop
movsb
pop
lret
ffree
inc
lods
mov
test
sbb
xchg
xchg
sbb
jle
push
inc
jl
add
xor
inc
and
dec
mov
push
decl
and
mov
push
mov
mov
mov
pushf
lods
pushf
jmp
str
pusha
movl
push
pusha
jmp
in
pushf
mov
movl
jmp
sub
mov
test
movsl
mov
mov
jp
pop
test
push
fidivs
mov
rcl
and
fcmovu
daa
outsl
xchg
rclb
ss
out
push
jne
xchg
rcll
ret
addb
in
rcr
call
and
ret
add
and
xor
sub
push
je
push
insb
xchg
xchg
xchg
imul
aaa
cmp
mov
fldl
lret
dec
sub
push
jae
or
pop
cmpsb
pop
pop
fsubrs
pop
push
scas
arpl
jo
mov
cltd
xchg
mov
lcall
or
decl
push
jg
aam
aaa
int
mov
mov
scas
movsl
sbb
out
movsb
in
out
jmp
jmp
jmp
xchg
sub
push
push
in
lds
cmpsl
push
je
dec
dec
dec
dec
mov
mov
pop
jecxz
lds
sub
jnp
lahf
push
jae
lea
leave
iret
cmp
cmp
push
mov
clc
sti
xor
scas
dec
cmp
dec
jge
jg
or
or
mov
fucomip
push
lods
popa
sbb
inc
mov
movsl
lock
mov
mov
or
jecxz
sti
or
fadd
cmp
cmpsb
pop
scas
mov
or
and
cmpsb
adc
adc
outsl
push
adc
push
sub
mov
outsb
dec
xchg
je
jg
jnp
push
dec
inc
sbb
loopne
cwtl
fstpl
stc
imul
cmp
sarl
xor
iret
sub
adc
mov
cmp
and
fisubl
mov
bound
jmp
xchg
xlat
jecxz
lcall
adc
leave
jae
adc
testl
loop
push
and
mov
gs
out
mov
adc
or
jae
into
xor
xorb
ret
cmp
ds
shlb
int
sbb
push
cwtl
mov
addr16
mov
inc
sbb
jmp
cmpsb
or
stos
lret
xor
adc
mov
lahf
push
andl
mov
in
movsb
aam
mov
cmc
in
sub
gs
or
or
jnp
dec
pop
or
scas
xor
rcl
rcll
push
sbb
mov
loop
aam
sub
out
dec
mov
or
and
ficoms
add
pop
xor
repz
mov
cli
sbb
sbb
sub
push
adc
push
add
pop
xchg
xchg
xlat
cwtl
pushl
lea
ja
call
stc
call
inc
pop
pushf
push
je
hlt
push
add
lock
mull
out
and
mov
mov
inc
mov
push
pop
pop
mov
cmp
xchg
scas
mov
mov
xchg
mov
mov
or
ret
dec
les
jg
xchg
sub
add
movsl
mov
fsubrp
xor
cmpl
cmp
or
jns
fwait
lea
jl
push
lea
je
pushf
pusha
cmc
cmp
pushf
lea
je
cmc
cmp
push
pusha
pushf
pushl
lea
je
push
pusha
lea
jmp
stc
sub
clc
cmp
pushf
pushf
lea
jae
pusha
pusha
push
lea
jmp
fs
push
je
jmp
in
sbb
in
loop
mov
jns
jns
out
jmp
dec
je
add
ret
xor
adcl
dec
cmp
cmpsl
movsl
movsb
pop
push
pop
cmp
fsubl
cmpsb
in
mov
leave
fs
int
sub
mov
inc
dec
inc
inc
inc
add
mov
inc
dec
cltd
ret
stos
xchg
popa
lret
mov
xchg
xlat
out
scas
jmp
out
test
scas
loop
mov
insb
outsb
push
adc
fs
ja
push
pushf
imul
cmc
bt
add
push
pusha
lea
jmp
inc
pop
fwait
dec
je
cmp
xor
cmp
les
outsl
fsubs
int3
int3
sarb
mov
or
cmc
ret
call
mov
mov
bound
mov
popa
jg
js
dec
adc
ljmp
test
or
xor
icebp
stos
mov
push
out
out
dec
addl
fsubl
sti
ficoms
loop
push
aaa
jge
inc
mov
pusha
push
and
movsb
xor
push
lods
in
or
xor
aas
add
iret
jle
xchg
test
add
mov
iret
repz
lds
jae
movl
movl
call
or
mov
inc
inc
inc
mov
dec
inc
mov
les
inc
add
or
repz
les
jle
adc
cmp
or
rclb
aam
outsl
cmpsb
test
int3
xor
jle
xor
add
aam
movl
loopne
mov
add
pop
sub
lock
mov
mov
mov
lret
stos
pop
jl
out
jo
aas
jne
mov
mov
movsl
push
push
stos
lods
push
scas
push
pop
adc
iret
cmp
add
inc
aas
mov
and
test
xchg
add
lret
inc
push
push
sti
aas
add
pop
jecxz
and
test
pop
in
aad
mov
cltd
out
mov
xchg
push
sbb
call
lods
xchg
and
xor
hlt
je
inc
push
adc
adc
sbb
push
push
adc
add
stos
push
adc
mov
push
movw
pusha
pushf
lea
jmp
jmp
not
sub
mov
pusha
cmpb
mov
pushf
jmp
setnp
pop
mov
pusha
pusha
lea
jmp
pushf
stc
add
mov
lea
jmp
pusha
mov
pushl
lea
je
push
call
pusha
rol
add
pushf
call
mov
dec
je
sub
cs
rcr
and
and
and
in
xchg
mov
int3
movsb
xchg
int
jp
gs
cmp
mov
jg
cmp
nop
xchg
sbb
mov
jecxz
nop
test
ret
pusha
aaa
cmp
jo
pop
inc
jmp
inc
mov
je
popf
cltd
xchg
rcr
xchg
and
ret
inc
sub
or
cmp
addr16
cltd
pusha
arpl
sahf
fs
daa
push
out
out
das
insb
xchg
std
xor
xchg
sbbl
cli
add
gs
add
mov
sub
sti
cld
out
adc
and
sahf
pop
mov
in
test
ficomps
fcompl
inc
cmp
push
adc
arpl
test
je
rcl
cs
and
jmp
pop
and
out
std
lods
sub
mov
jno
lock
pop
popa
fistps
push
hlt
push
push
or
sub
push
or
dec
push
xor
jg
jge
add
lock
dec
jbe
inc
es
je
mov
inc
mov
inc
mov
pop
popf
repz
popa
jge
out
ret
jno
mov
push
pushf
add
stos
insb
stos
stos
lea
mov
mov
scas
test
ss
mov
adc
pop
xchg
sbb
nop
popf
lock
inc
call
movsl
test
cmc
mov
repz
push
adc
fwait
mov
scas
ljmp
stos
xchg
jmp
loope
jmp
sahf
repnz
lea
call
pop
ret
je
adc
loop
cmp
repnz
dec
xor
mov
cmp
arpl
pushf
popf
arpl
push
std
cmp
jge
les
and
das
sahf
xchg
jne
mov
mov
in
stos
jae
arpl
adc
cmpsb
jecxz
dec
dec
and
sbbl
xchg
lret
xor
jl
in
fsubrs
les
add
movsb
movsb
or
fcmovu
loopne
pop
jnp
arpl
imul
gs
jae
jns
je
push
inc
add
cmp
sbbl
fndisi(8087
inc
add
gs
add
cld
repnz
push
add
ret
lock
and
push
and
xchg
ror
cmpsl
dec
dec
mov
mov
das
inc
out
inc
jge
xchg
dec
je
pushl
fsubl
shlb
addr16
ror
lea
gs
sbb
sbb
insl
jae
dec
je
in
jecxz
sbb
loope
adc
cli
clc
sbb
shll
pusha
nop
xchg
ror
xorb
xor
ss
ss
enter
cmp
sti
ja
les
movsb
pop
add
mov
or
xor
sub
int3
sub
and
mov
not
lods
cmc
ror
push
call
fistpll
mov
dec
dec
mov
mov
inc
dec
inc
inc
mov
push
insb
daa
fmulp
out
jp
in
pop
or
aam
inc
ds
mov
cmp
incb
jmp
mov
inc
aaa
mov
rolb
imul
je
je
dec
fisubl
sbb
sbb
add
cmp
mov
test
mov
xchg
mov
fnstenv
dec
cmc
lret
test
int3
or
lret
lea
push
xchg
rcll
dec
je
jecxz
ljmp
test
std
jecxz
add
sbb
ret
pop
mov
cwtl
sahf
jbe
lea
jb
iret
sahf
push
popf
rorl
in
cld
cmp
addl
daa
and
adc
iret
shl
mov
outsl
jno
jo
xchg
mov
addr16
sahf
aam
test
adc
jecxz
sbb
pop
and
pop
sbb
pop
adc
repnz
or
push
lea
jnp
push
jmp
mov
push
movl
pushl
ret
jne
call
and
rorb
test
mov
push
mov
jne
inc
sbb
movsl
aaa
ret
mov
mov
pop
movsb
sub
outsb
ljmp
sbb
mov
lods
push
roll
mov
fstl
mov
pop
out
movsl
out
lods
jecxz
mov
push
test
cmpl
push
push
lods
test
test
push
xchg
shlb
gs
mov
lret
xor
enter
mov
gs
dec
inc
dec
rdtsc
cld
hlt
jnp
enter
es
sahf
adc
lds
pop
cmpsb
mov
or
xchg
ret
negb
js
shlb
push
mov
das
das
loope
jo
outsl
lahf
pusha
fwait
mov
and
jo,pt
in
and
mov
ss
aaa
aas
ret
xchg
xchg
cli
mov
cs
test
dec
mov
pop
stc
test
mov
jmp
call
jne
and
clc
dec
pushf
mov
pushl
call
pop
out
inc
je
jo
jbe
lea
jl
push
out
add
out
cmp
adc
jmp
xchg
insb
xchg
nop
insb
sub
push
test
jae
iret
imul
cmpsl
dec
inc
mov
mov
inc
jne
mov
and
push
adc
push
and
mov
scas
lret
arpl
fildll
mov
cwtl
addb
fisubl
inc
mov
je
ds
ds
mov
rol
inc
rcr
lret
mov
adc
lret
xor
and
xchg
xchg
insb
push
cwtl
adc
cmc
jbe
sub
sub
adc
push
dec
lahf
outsl
jg
mov
lea
int3
xchg
lea
ss
adcb
add
cli
cli
adcl
sbb
test
jne
pop
push
pop
aad
daa
and
push
xchg
push
rcrl
push
test
jae
insb
insb
jne
iret
dec
addb
fucomi
adc
push
out
fdiv
push
pop
pop
and
mov
aam
bound
mov
out
sbb
ficomps
jns
sub
jmp
push
sbb
push
adc
sti
je
addb
lds
jnp
pop
push
jmp
cs
xor
lcall
push
stos
inc
mov
cmp
add
aaa
push
outsb
pushf
sub
pushf
dec
jns
inc
jl
push
jmp
mov
pusha
pusha
pushl
push
lea
jmp
mov
pusha
push
lea
jmp
add
gs
addl
cmp
mov
shr
fildll
arpl
pusha
insl
xchg
imul
lods
out
push
popf
mov
inc
ja
pop
iret
sahf
mov
psubw
add
mov
test
shrb
ja
popf
adc
bound
or
cmp
adc
dec
jg
xor
das
imul
pop
push
sbb
xor
fwait
ss
add
inc
add
outsl
shlb
inc
je
rol
cmp
cmp
aas
leave
cmp
lret
idivl
rcl
pop
stos
jge
jns
rorl
bnd
sbb
pop
cmpsl
mov
ja
cmpsb
addr16
cmc
addb
add
test
push
xor
movsl
addr16
inc
and
arpl
lds
add
stos
push
sub
orb
in
addr16
fistps
mov
cwtl
cli
or
daa
fs
loope
fwait
stos
pushf
call
call
jecxz
cli
inc
je
push
push
push
scas
movsl
stos
push
lods
movsb
mov
ds
jno
lea
jle
int
cltd
faddl
mov
ror
mov
mov
adc
and
outsb
and
pop
loope
mov
aaa
adc
xchg
cmpsb
lea
ja
push
ror
mov
pushf
dec
clc
clc
push
test
neg
stc
xor
mov
cmp
std
pushw
popfw
call
pushf
call
push
dec
scas
inc
je
lcall
ljmp
add
mov
shrl
daa
rcl
xlat
sub
aad
sub
fisubs
and
outsb
fnstsw
sub
aad
fstp
fnstcw
dec
adcb
aad
loopne
inc
aas
sub
push
enter
cmc
ret
int3
cmp
push
mov
xchg
out
iret
and
add
jb
xchg
pop
into
jg
lret
mov
mov
add
leave
xor
sbb
je
xchg
ja
xor
lret
mov
inc
sub
xchg
cmc
dec
daa
pop
or
pop
adc
push
out
in
gs
xor
sub
div
mov
pop
pusha
jb
shrb
ficoms
mov
cmpsl
jno
mov
test
cld
mov
std
ret
xchg
push
cbtw
gs
fs
dec
ss
push
fmul
sbb
mov
sbb
add
lock
enter
mov
mov
dec
inc
pop
push
movsb
adc
in
in
pop
jnp
cmp
pop
sbb
sbb
mov
nop
fs
repnz
sbb
cmpsb
sbb
test
cmpsb
loop
xchg
rcrb
out
adc
incl
sbb
inc
je
mov
mov
mov
mov
out
out
mov
in
packuswb
and
push
pop
out
sbb
les
cmp
add
sub
xchg
test
fistps
cmpsb
fwait
mov
add
movl
pushl
call
mov
movb
lea
setge
sets
push
mov
cwtl
lea
call
lea
jae
pusha
cmp
call
movl
pushf
push
pushl
movb
lea
jmp
pusha
pushl
lea
jne
or
sub
mov
clc
stc
clc
test
add
clc
push
movzwl
xor
sub
not
rcr
mov
jmp
movzbw
mov
movb
pushf
lea
ja
pusha
jmp
sti
loope
inc
je
mov
inc
inc
inc
mov
fcmovnb
aas
aas
pop
mov
push
or
in
rcll
mov
lods
lods
push
push
test
stos
out
inc
test
sbb
fcmovb
aas
lahf
mov
xchg
mov
jns
hlt
leave
fstpt
dec
fcmovbe
xchg
daa
fistpl
inc
add
jp
loopne
decl
sti
cli
sti
mov
cmpb
std
pop
mov
xchg
cmpsl
movl
push
movl
push
pushl
lea
jmp
lea
jae
bt
jmp
pusha
pushl
popl
push
pushl
ret
cmp
bt
add
call
clc
jmp
imul
addb
add
jle
pop
add
add
add
mov
adc
add
add
inc
adc
add
in
clc
pusha
cmp
pusha
or
push
lea
je
clc
test
test
cmp
cmp
pushf
call
jmp
pusha
dec
cmc
not
mov
call
popf
cpuid
nop
pushf
jmp
call
pop
pushf
push
call
bt
cmp
stc
cmc
add
call
stc
pushf
clc
imul
bt
cmp
add
pushl
push
pusha
lea
jmp
mov
into
shll
clc
or
rol
xor
inc
sub
fsub
stc
xchg
or
xchg
and
and
aam
sub
dec
stos
cwtl
fwait
aam
fcompl
aad
rol
pusha
call
cmp
jmp
not
not
mov
cmp
push
pusha
clc
shl
jmp
pushf
jmp
pop
dec
shr
dec
ss
xor
push
outsl
gs
xor
sub
decb
lcall
js
sbb
sub
sti
mov
jae
mov
inc
mov
mov
movsb
and
inc
cmp
arpl
ss
cmpsl
mov
adc
adc
adc
cmp
bound
mov
loopne
dec
mov
sarb
repz
mov
out
stos
pop
cmp
aas
sbb
ss
lock
push
pop
mov
test
hlt
inc
xchg
stos
adc
ret
repnz
mov
add
ljmp
mov
std
xor
mov
ja
or
pop
pop
sti
sub
push
mov
xor
xchg
cs
mov
cmp
stos
int3
mov
sub
jnp
pop
push
mov
or
mov
mov
xchg
jge
ljmp
rcl
adc
movl
test
push
cmp
mov
test
in
ss
hlt
mov
dec
push
or
mov
lods
aam
ss
lret
pusha
test
push
xor
scas
pop
stos
xor
int3
jae
push
mov
xor
ds
outsb
or
fmull
or
push
inc
ss
cmp
or
sbb
mov
aam
add
push
sub
fistps
clc
or
loope
orl
lret
ss
into
or
lret
or
es
jg
xchg
inc
in
mov
ljmp
dec
sbb
cs
mov
scas
mov
ljmp
dec
sbbl
mov
das
adc
ljmp
lret
mov
cltd
xchg
sub
dec
pop
push
xor
inc
pusha
and
and
cmp
out
sbb
out
push
add
out
ret
cmp
cmp
mov
cmp
inc
mov
inc
inc
outsl
stos
dec
xchg
jbe
xchg
or
ljmp
mov
test
sti
into
pop
sbb
aaa
fisubrl
cmp
pop
sbb
inc
aaa
mov
scas
call
into
imul
push
inc
aaa
leave
scas
pop
call
cmp
into
jmp
lret
cmp
imul
sbb
fwait
call
jp
push
inc
aaa
dec
scas
cli
call
test
jb
into
or
or
sbb
jmp
adc
imul
sub
sub
repnz
jg
lock
fdivrs
ja
dec
scas
jae
sbb
sbb
pusha
and
popf
adc
sub
fwait
mov
out
xchg
mov
sub
pop
nop
pop
lods
adc
or
inc
push
daa
pushf
jbe
int3
ret
and
nop
sub
jnp
dec
push
cmp
fidivrl
ss
cmpsl
jae
negb
push
sub
dec
pop
jmp
insb
and
cmp
ss
sub
sahf
cld
filds
cli
xchg
ss
dec
mov
cmpsl
lahf
mov
jbe
mov
adc
andb
xor
lcall
ds
cs
and
call
inc
inc
mov
inc
out
stos
or
aas
jmp
mov
je
call
outsb
or
sub
xor
imul
mov
ja
mov
sbb
mov
cmp
pop
lret
imul
lock
mov
lea
sbb
inc
mov
insb
cltd
bnd
dec
scas
arpl
or
dec
jnp
jp
ds
into
enter
loop
pslld
imul
stos
faddl
adc
dec
mov
cmp
ss
test
mov
mov
into
cltd
jb
stos
cmp
jae
lods
or
dec
cmp
outsb
pop
scas
cmp
and
sub
or
dec
push
lret
idiv
lret
out
adc
adc
shrb
ss
or
sub
imul
sbb
out
shl
jle
outsl
clc
pop
clc
adc
fwait
mov
lea
cmp
or
cmp
and
stos
adc
inc
test
push
push
into
jns
mov
out
inc
clc
fstpt
das
inc
cmp
out
enter
sub
push
repz
jmp
jns
push
lret
arpl
adc
sub
xchg
sub
and
ja
inc
xlat
scas
inc
jae
and
and
mov
sbb
lcall
mov
ss
mov
dec
xor
les
push
dec
out
xor
dec
adc
sbb
scas
push
cmp
or
sbb
sbb
js
aas
pop
dec
pop
pop
test
stos
cmp
xor
cs
call
test
fwait
div
xor
inc
sub
notl
xor
push
mov
jo
sbb
xchg
xor
cmp
aas
mov
imul
pop
sub
push
test
ljmp
xor
aaa
push
fucomi
jns
sub
fwait
mov
mov
ret
jnp
add
xchg
je
in
cmpsl
fisttpl
dec
stos
dec
push
andb
cld
dec
inc
cmp
sbb
jb
sub
pop
and
lock
out
mov
jbe
stos
jb
mull
xorl
stc
pop
sti
lret
push
sub
jnp
gs
iret
imul
repz
clc
lcall
mov
dec
push
mov
cmp
mov
sarl
mov
and
cmovg
jns
stos
fisttpl
ljmp
imul
mov
ljmp
or
icebp
loopne
cmp
mov
jmp
mov
jecxz
cmp
dec
jmp
mov
iret
mov
mov
ljmp
das
orb
mov
leave
mov
pop
jae
incl
das
dec
imul
aas
gs
xchg
int3
ss
ret
fwait
xor
pop
jnp
xchg
mov
fiaddl
pusha
adc
jg
ficoml
inc
jae
lods
daa
jae
sbb
and
xor
mov
aaa
cmpb
ljmp
imul
mov
jbe
lds
lahf
imul
lods
pop
popf
das
es
jp
mov
xchg
fwait
jnp
xchg
sub
mov
loopne
stos
and
xchg
icebp
jbe
mov
cltd
lahf
mov
imul
mov
das
pop
cmpsl
xor
ljmp
bt
pop
jp
hlt
fmull
fdivrp
test
cs
daa
inc
lcall
push
loop
jns
fcmove
sub
xlat
mov
shlb
adc
mov
call
mov
sub
dec
lret
or
lret
imul
enter
sbb
inc
call
xor
sbb
lods
mov
or
pop
jno
pushf
inc
aas
outsb
dec
ljmp
pop
adc
or
ja
gs
cmp
lcall
loop
or
ljmp
aas
fwait
sub
cli
sub
cmp
or
test
inc
adc
testb
outsb
out
out
mov
push
cmpsl
sbb
or
out
test
mov
sub
decl
jmp
call
ret
xchg
cs
into
dec
jmp
stos
mov
pop
jle
or
sbb
mov
dec
inc
leave
out
repz
mov
cli
xor
cmp
aam
arpl
xchg
movb
repz
mov
test
jns
cltd
out
call
xlat
adc
fbstp
inc
push
lea
insl
xor
nop
sub
cltd
jg
xchg
mov
imul
cs
jns
mov
lahf
fimull
sti
dec
repnz
not
out
repnz
stc
sub
lock
sbb
cmp
mov
int
inc
enter
jl
mov
or
pop
sahf
mov
clc
inc
mov
push
adc
call
sub
jns
mov
movsb
xchg
lcall
cmp
jmp
pop
gs
aad
push
inc
cli
pop
es
pusha
fistps
jp
dec
push
jmp
jbe
repz
test
mov
dec
adc
mov
leave
jmp
in
add
out
in
cli
stc
cmp
mov
mov
push
jmp
rcr
out
out
push
sub
int3
loop
lret
adc
dec
cli
repz
je
fwait
or
sub
cmc
repz
xor
jmp
lret
stos
or
mov
das
in
dec
inc
inc
xlat
cli
pop
repnz
jg
loope
negl
clc
hlt
sbb
add
sbbb
xor
jmp
sub
cli
into
and
stos
jb
or
jg
mov
push
mov
mov
adc
clc
cmpsb
testl
add
adc
fdivp
repz
fucomi
fstpt
mov
adc
out
dec
jae
push
mov
shll
aaa
jp
pop
call
push
xchg
aaa
imul
sar
cld
cmp
dec
or
sti
inc
cli
mov
loop
imul
dec
adc
mov
and
loope
out
push
sbb
idivl
repz
es
sbb
out
sub
or
jl
fwait
in
or
insb
adc
sbb
xchg
xor
push
lret
xchg
pop
adc
dec
sbb
out
int3
xchg
xlat
popf
ja
pop
lret
aas
repz
clc
lret
cmp
hlt
pushl
or
mov
leave
cmp
stc
sbb
sqrtps
cmpsl
sbbb
lret
fdiv
jmp
dec
adc
scas
jne
xchg
mov
negb
sbb
or
xchg
and
cmp
dec
repz
adc
rclb
xchg
mov
stc
xor
mov
pop
ljmp
pop
ljmp
xchg
cwtl
pop
rclb
mov
inc
or
xchg
mov
jmp
int3
mov
pop
out
mov
cmc
jnp
dec
clc
sahf
dec
mov
or
rorb
pop
sub
dec
add
or
popf
out
inc
into
stos
into
or
jne
or
or
sbb
inc
xor
enter
out
inc
add
cmp
adc
xor
addb
pop
mov
popa
push
dec
bound
aas
mov
cmpsb
or
lods
or
push
fisttpll
or
lea
or
xor
jl
hlt
mov
or
outsb
mov
cmp
aam
and
push
xchg
pop
pop
xchg
push
bound
xor
xchg
push
cmp
js
dec
dec
rclb
push
and
jecxz
push
cmp
and
lahf
jmp
push
in
or
adc
mov
push
and
shll
out
and
or
jbe
repz
mov
inc
mov
or
adc
sbb
popf
scas
pop
imul
cmc
jle
subb
adc
jmp
xchg
test
aaa
inc
ja
push
jmp
push
jno
or
pop
scas
in
ljmp
sub
out
cli
push
stc
out
mov
call
and
push
jle
sbbb
cmovns
imul
cwtl
dec
popa
in
ret
inc
mov
mull
ficoml
stos
mov
mov
sbb
sbb
add
sbb
ss
pop
sbb
sub
pop
and
dec
enter
xor
mov
dec
ljmp
orb
sarl
out
xor
lock
cmp
mov
div
jo
cmp
cmp
test
mov
das
mov
out
loopne
jp
xor
lret
jnp
or
mulb
push
clc
cmp
in
or
or
cmpsb
or
add
mov
or
mov
fwait
mov
pop
push
out
cmp
cmp
xchg
or
dec
mov
ss
decb
sub
aaa
movzwl
mov
imul
mov
jns
fstpt
adc
cmpsb
lock
cmp
mov
lahf
dec
cmpb
push
icebp
lds
call
mov
and
pop
cmp
jb
test
push
outsb
adc
repnz
sti
or
mov
int3
popa
xchg
inc
rorb
imul
aas
add
sti
out
paddw
stc
das
mov
ret
daa
sarl
inc
jg
mov
cmpsl
add
pop
pop
mov
js
in
insb
xor
outsl
jae
js
cmp
jg
jae
pop
insl
scas
sbb
scas
mov
fcomps
or
mov
jno
loope
xorb
lods
imul
cmc
mov
mov
jl
repz
int
push
jnp
push
loop
movsb
cwtl
divb
xchg
call
mov
pushf
out
xchg
mov
dec
cmp
pushf
mov
xor
nop
xchg
js
adc
xor
mov
sub
ljmp
mov
call
outsb
jg
test
or
repnz
lcall
inc
or
jnp
lret
out
dec
ljmp
cmp
shrb
sub
push
adc
mov
scas
mov
xor
cmp
mov
fidivrl
inc
scas
sahf
stos
into
cs
sub
push
aas
into
repz
sub
scas
ret
push
inc
lret
pop
cmp
clc
js
pop
or
movsb
repnz
shll
pushf
jns
jb
jg
inc
mov
sbb
cmp
pop
scas
sahf
ja
das
ljmp
cli
or
xor
sbb
pop
mov
mov
jp
xor
and
lods
inc
idivb
cmc
pushf
push
mov
fwait
jmp
sbb
jmp
sahf
jb
lcall
push
push
loopne
in
sbb
cmpl
jb
push
or
stc
adc
pop
mov
rorb
dec
pop
mov
or
repnz
fimuls
stc
jp
push
and
stos
mov
int3
pop
mov
or
jbe
or
push
mov
and
sbbl
rcrb
rcrb
mov
pop
repz
das
xor
push
outsl
sub
lahf
xor
xor
xor
imul
inc
jl
ljmp
out
or
rcr
lret
test
hlt
inc
popf
adc
cmp
and
sub
sub
cs
or
push
or
inc
push
cmp
mov
cmp
xor
and
inc
imull
enter
shr
or
push
push
stos
inc
ljmp
mov
mov
xchg
ficoml
shr
or
cmc
inc
or
xorl
inc
pop
lcall
inc
mov
mov
gs
sub
gs
dec
out
xchg
cs
mov
cmpsb
push
inc
cwtl
in
push
add
add
int
push
addr16
stc
arpl
scas
xor
cli
xchg
push
sbb
lods
jecxz
xchg
popf
push
lds
pop
sub
ret
or
pop
aaa
ljmp
mov
cs
xor
adc
or
ljmp
dec
or
das
imul
inc
test
inc
ds
pop
imul
ljmp
sbb
shlb
out
push
sbb
jns
adc
and
jo
mov
or
jmp
mov
sarl
or
fstpt
sbb
jnp
or
or
stc
sbb
test
mov
xor
xchg
dec
stos
imull
gs
xor
pop
adc
mov
mov
js
or
repnz
or
pop
out
loop
jp
inc
add
int3
outsb
adc
push
repnz
pop
push
out
xchg
mov
cmp
or
repnz
ret
mov
cmp
or
repnz
or
in
or
or
repnz
sbb
or
push
or
jno
out
mov
push
or
repnz
sbb
dec
in
mov
or
repnz
mov
dec
cmp
or
in
cmp
or
repnz
in
push
mov
cmp
int
push
icebp
repnz
mov
sbbl
push
dec
sub
mov
aas
xchg
xor
lret
push
cmp
rorl
repnz
ljmp
mov
cmp
xchg
or
repnz
mov
cmp
rorl
repnz
mov
mov
or
out
cmp
cli
mov
cmp
sbb
push
loopne
js
cmp
sub
push
mov
cwtl
pop
push
stos
or
repnz
xor
sub
stc
mov
mov
add
adc
jae
xchg
xor
push
mov
xorb
jae
stos
mov
mov
outsb
cli
push
popa
cmp
sarl
rorb
repnz
mov
cmp
and
xor
in
stc
out
sub
mov
and
pop
lret
jecxz
and
or
or
leave
inc
out
xchg
mov
sti
ret
pop
lret
or
inc
in
jp
ret
cmp
jno
sub
repnz
mov
cwtl
mov
cmp
inc
or
repnz
in
push
fidivrl
or
mov
push
dec
in
js
mov
lock
bnd
mov
sub
or
out
andl
sub
push
sub
repnz
repz
in
dec
mov
cmp
repnz
out
sbbl
in
push
cmp
bnd
mov
xor
test
mov
push
mov
jmp
dec
in
mov
or
mov
or
cli
sbb
pop
outsb
xor
adc
push
sbb
mov
or
mov
repnz
mov
mov
cli
mov
cmp
lret
out
mov
test
mov
adc
or
hlt
or
repnz
mov
cmp
adc
in
into
sbb
out
push
ret
cmp
or
repnz
jmp
scas
enter
ljmp
xor
mov
jns
mov
or
push
mov
repnz
jnp
push
cmp
enter
pusha
icebp
or
bnd
xor
in
xorb
dec
repnz
mov
sub
adc
sbb
mov
mov
cmp
mov
mov
jo
pusha
cmp
rorl
bnd
cmp
in
dec
mov
cmp
xchg
or
repnz
or
or
idivl
cmp
or
cli
push
cs
fldcw
out
sbb
pop
jmp
jg
cli
inc
ljmp
jbe
mov
decl
ds
fisubl
lret
or
testl
pop
sub
jbe
xor
inc
dec
or
or
inc
and
cmp
repnz
inc
jmp
aaa
mov
lcall
repz
jb
lret
into
inc
sbb
jmp
jp
adc
mov
fcom
fbstp
or
xchg
ljmp
cmp
adc
std
outsl
mov
or
dec
pop
xchg
dec
adc
cmp
shrl
add
adc
rorl
shl
enter
sub
out
dec
cmp
push
push
dec
call
fstl
in
repnz
cmp
cs
ja
ds
jecxz
jle
inc
mov
fisubl
and
mov
mov
jnp
push
add
adc
or
mov
and
arpl
bound
jnp
jbe
aad
jecxz
arpl
or
adc
and
inc
sub
add
xor
lcall
gs
add
nop
or
dec
imul
sub
jnp
jmp
mov
test
push
dec
lods
nop
mov
jmp
pop
imul
out
nop
sarl
testl
imul
adc
mov
or
push
sub
lds
pop
dec
adc
out
xchg
imul
cmp
mov
inc
ljmp
dec
inc
inc
fidivrl
lea
icebp
stos
xor
push
out
push
stc
dec
mov
ficoms
pop
sbb
jb
jb
xchg
xor
pop
jnp
mov
pop
mov
das
push
cmp
sub
test
cmp
mov
cmp
hlt
xchg
adc
daa
inc
add
repnz
mov
outsl
sbb
loope
and
mov
sub
test
mov
cmp
inc
aaa
rorb
pop
mov
or
out
adc
insl
cmp
repz
xor
ljmp
xchg
jmp
lahf
cmp
jmp
lret
out
xor
mov
sahf
lods
mov
int3
fcom
cmp
push
adc
pusha
mov
mov
xor
popa
jbe
testl
mov
cmp
push
mov
pop
popa
jmp
call
sbb
sbb
inc
cmp
addr16
orb
mov
push
mov
inc
shl
pop
sub
sbb
insb
jmp
mov
or
or
mov
push
push
imul
insl
out
scas
fdivrl
insb
sbb
jno
or
pusha
outsb
shr
push
cmp
mov
ret
aas
mov
test
stos
sub
out
or
lods
xchg
stos
fists
add
jb
cs
xor
cmp
out
insb
stos
mov
fisubrl
cmp
ljmp
mov
xchg
and
dec
jno
bound
pop
dec
pop
out
bound
in
das
jno
bound
push
jp
bound
stos
adc
je
ljmp
pop
push
cld
ljmp
int3
imul
shll
or
popf
test
aaa
inc
or
mov
or
jle
dec
scas
out
mov
js
das
inc
sbb
jl
andb
or
syscall
lods
pop
adc
mov
mov
in
and
bound
testl
mov
mov
mov
jns
ret
repz
sbb
lock
mull
sti
test
fnstenv
rcr
clc
es
mov
in
ret
imul
mov
fnsave
inc
dec
stos
inc
test
ljmp
jnp
fstps
jecxz
faddl
pop
xchg
mov
stos
in
pop
inc
out
stos
lods
mull
ficoms
mov
nop
xor
mov
mov
imul
add
popf
test
dec
popf
cltd
jg
pushf
jg
xchg
mov
fstpt
in
inc
jp
xor
jo
mov
cmpsl
ds
mov
in
sub
repz
imul
gs
push
lret
testl
mov
mov
sbb
icebp
dec
rcl
repnz
andb
push
mov
cmp
jnp
in
scas
push
pop
andps
outsb
add
cld
dec
std
pop
mov
bound
fcmovu
mov
call
jecxz
loop
inc
jl
or
mov
jmp
xor
aaa
mov
sarl
rorb
or
or
es
add
rcr
mov
jmp
or
mov
pop
ljmp
mov
jg
jnp
mov
adc
adc
popl
js
sti
pop
loop
cmp
mov
adc
or
ja
ljmp
mov
mov
in
pop
mov
in
pop
test
cmp
mov
and
shrb
fsubs
lcall
xchg
hlt
cmpsb
pop
lret
dec
fwait
outsb
dec
dec
mov
fisubl
ds
nop
xor
and
xor
aas
sbb
pop
imul
mov
pop
push
sub
jmp
out
sub
sbb
jecxz
xor
lods
loop
pop
push
jg
jbe
or
ljmp
test
cmc
jnp
data16
out
dec
pop
dec
jbe
or
jecxz
test
mov
fimull
arpl
and
pushf
mov
jbe
cs
push
dec
out
stc
inc
mov
xor
mov
aam
das
pop
push
sbb
mov
jno
in
into
sbb
out
inc
or
dec
out
cmp
pop
mov
cmp
leave
outsl
sti
rorl
cmp
out
shrb
mov
mov
inc
push
out
sbb
xchg
xchg
pop
jne
cmpl
div
cmp
xchg
gs
iret
inc
and
mov
lret
cmp
pop
popa
pusha
mov
mov
lods
addb
pop
loope
inc
sub
sahf
add
sub
and
jmp
mov
shrb
cmp
sbb
outsl
and
cs
mov
adc
mov
loope
xlat
pop
xor
jp
jl
mov
push
aas
add
adc
mov
movb
in
or
or
test
lea
mov
stos
cmpsb
repz
or
inc
repz
das
ja
int3
lea
ror
sub
xchg
insb
adc
ljmp
aas
cwtl
jmp
cmp
mov
sbb
repnz
aaa
add
fs
out
testl
pop
inc
cmp
fs
jle
pop
lea
fildl
into
addr16
mov
mov
enter
addl
mov
ja
mov
out
sbb
clc
xor
inc
mov
ljmp
jp
vcvttss2si
pusha
loope
lea
sbb
or
jbe
out
loopne
sub
xor
sbb
or
pop
rorl
xlat
cmp
mov
push
loop
mov
jbe
or
aaa
in
aaa
div
test
insl
daa
and
fdivrl
stos
jp
cmp
cli
dec
mov
popa
lret
adc
mov
fidivs
xchg
call
ret
mov
cmp
pop
loop
xchg
imul
out
insb
jle
mov
daa
mov
or
sub
cmp
lods
jno
or
rcr
call
fmuls
inc
mov
ljmp
sbb
loop
xchg
push
adcb
cmpps
repz
sbb
lret
jmp
data16
xchg
loopne
ss
add
fidivrs
xchg
push
dec
hlt
sub
mov
fidivrl
sub
mov
pop
mov
dec
imul
pop
lea
mov
lods
adc
mov
stos
repnz
repz
scas
xor
ljmp
dec
jmp
ja
or
dec
cld
dec
push
xchg
cs
xchg
loop
mov
test
inc
sti
cmp
inc
aaa
ds
and
mov
mov
cli
dec
jmp
aas
ljmp
push
xor
xor
scas
out
cmpl
movsl
bnd
dec
ret
mov
ret
and
test
jmp
or
xor
roll
cmpsb
add
pop
lea
xchg
inc
and
adc
sahf
cs
jnp
repnz
outsl
adc
and
jmp
cmp
popf
popa
pop
cmp
ljmp
ss
mov
fs
pop
and
mov
stos
and
and
gs
jp
stos
lret
cmp
jg
cmpsl
dec
inc
fwait
loopne
cmp
ud2
ret
paddsb
mov
into
daa
and
xchg
jl
sbb
cmp
hlt
sub
sbb
jno
mov
and
mov
sbb
jg
insl
adc
xchg
sbb
das
sub
outsb
xor
push
shll
lret
push
xor
ljmp
popa
jns
cmp
loop
xchg
sub
mov
in
arpl
inc
pop
cld
xor
mov
aaa
clc
ljmp
lea
xor
mov
mov
mov
in
in
popa
jecxz
dec
lcall
shr
xchg
mov
ljmp
xor
xlat
cld
cmpsl
xchg
out
psadbw
sbb
mov
iret
test
enter
or
xor
jg
addr16
or
inc
or
xchg
in
pop
inc
push
cmpsb
lret
xorl
mul
outsb
fcom
cs
ficoml
shll
sub
sbb
adc
repz
xchg
adc
push
sbb
pop
mov
lods
inc
pop
push
adc
inc
das
add
inc
mov
sbb
iret
lret
scas
sbb
scas
clc
ds
lcall
dec
push
minps
jno
mov
sbb
sub
sub
lds
cmp
fcompl
stos
shrl
or
push
dec
mov
int3
rorl
fildl
jb
negl
jmp
cmp
aad
lret
outsb
subb
dec
adc
sbb
xchg
mov
scas
mov
cmp
or
and
add
xor
cmp
inc
dec
xchg
rcl
lds
out
lods
sub
xor
imul
sub
test
pop
cmp
xor
or
call
sub
jo
rclb
daa
repnz
dec
adc
leave
inc
cmp
lret
mov
mov
sub
cmp
aaa
shrb
ljmp
out
lahf
repnz
repnz
inc
xchg
in
mov
imul
fwait
adc
les
dec
cltd
call
xchg
stos
cmp
jb
push
and
lcall
out
xchg
jne
repnz
or
fwait
iret
lret
or
es
mov
xchg
xchg
mov
cmp
lret
pushf
mov
xor
pop
cld
pop
adc
popa
daa
dec
dec
xor
xor
ljmp
insl
jl
or
cmp
inc
inc
sbb
or
and
dec
mov
cs
insl
xor
ret
out
pop
jg
notl
adc
fwait
pop
mov
mov
cs
sbb
jnp
ret
imul
insl
stos
movb
push
in
or
call
es
xchg
xchg
ret
das
or
addr16
data16
imul
into
repnz
jecxz
cli
lods
loope
push
sub
das
popa
ds
arpl
cld
add
int3
push
lock
jo
bound
adcl
push
ficompl
dec
sub
inc
stos
push
adc
sahf
lcall
adcl
jg
xchg
out
xchg
addr16
inc
sub
jnp
lods
sti
aad
icebp
xchg
icebp
imul
jmp
mov
cmp
and
repnz
sub
jge
ficoms
cltd
cmp
mov
dec
sbb
cmp
mov
call
pop
lret
mov
cmp
mov
sub
bound
push
out
clc
cmp
xor
push
inc
dec
mov
xchg
sub
sahf
or
add
xor
pop
xor
cli
stos
inc
push
xor
call
xor
pop
sub
lds
push
xchg
xor
mov
orps
xor
rorb
or
cmp
pop
push
iret
jo
jg
sub
lods
sbb
mov
ljmp
loope
push
lods
xchg
jmp
adc
test
aaa
xchg
test
xor
std
and
insl
mov
push
cmp
mov
cwtl
fisubrl
push
insl
out
push
fdecstp
out
lods
xor
mov
cmc
xor
xor
nop
stos
adc
mov
adc
push
lahf
or
dec
fs
or
jg
sbb
iret
mov
cmp
mov
mov
in
fisttps
push
dec
add
call
sub
pop
push
pop
iret
int3
repnz
pusha
or
popa
sbb
sub
xor
sub
adc
mov
out
out
fisubl
cltd
push
lret
jns
scas
push
cmp
stos
xor
cmp
cmp
xor
test
cmp
xor
sub
mov
cmp
adc
sbb
cmp
xor
or
loope
adc
jp
test
and
and
in
cli
aam
jmp
jecxz
xor
dec
push
repnz
mov
xchg
mov
cli
call
sub
ret
push
test
insl
and
leave
jno
mov
mov
stos
imul
repnz
jbe
push
dec
repz
jle
mov
xchg
shlb
hlt
pushf
jmp
stos
sub
jb
int
xor
and
cmp
ret
jecxz
rcll
cmp
stos
push
dec
rdmsr
cmc
push
ret
dec
cli
jnp
xchg
repz
or
mulps
push
mov
sub
or
das
outsb
xchg
stc
jp
ficoms
lea
mov
xlat
sub
pop
ds
cli
jg
push
ljmp
imul
loopne
ljmp
sti
and
lods
cs
in
adc
jg
jne
fdivr
jno
sub
stos
xor
stos
sub
aad
mov
adc
mov
mov
fistpll
leave
jmp
shld
lret
or
sub
outsb
scas
inc
lea
addr16
clc
outsb
bound
ja
nop
flds
sub
pop
pop
or
ljmp
insb
jg
test
cmp
sarb
outsb
lods
dec
jp
shrb
jg
insl
jmp
mov
loop
sbb
andl
push
lret
inc
fs
jmp
mov
decb
inc
mov
xor
cli
shlb
inc
cwtl
fildll
dec
or
add
pop
and
sbb
mov
mov
jmp
add
scas
mov
add
dec
xchg
pop
in
shlb
mov
ret
je
pop
push
into
pusha
out
push
dec
adc
loopne
cmp
dec
pop
mov
push
aaa
and
sbb
mov
sahf
adc
rolb
in
cs
out
rolb
mov
and
rclb
test
jno
fbld
mov
push
scas
test
repz
xchg
xor
call
out
std
nop
pop
adc
aad
xchg
int3
mov
cmpl
adc
or
dec
mov
cmp
das
cmp
xlat
cli
xor
aas
ficomps
cli
mov
xor
in
into
lea
cs
repz
push
inc
jbe
cmp
xchg
je
scas
jg
sbb
or
lret
stos
xor
jmp
out
scas
cmp
fldcw
adc
pop
adc
fstpt
push
lods
pop
addr16
pop
add
mov
jecxz
push
push
add
mov
and
leave
sub
or
mov
ljmp
add
xchg
or
lods
add
jo
or
xor
shrl
adc
or
and
jo
cs
adc
inc
aas
test
jle
sub
cmp
lret
inc
andb
mov
cmp
push
in
xchg
xor
or
dec
adc
push
xor
lret
dec
cltd
xor
push
mov
sbb
push
xor
andb
pop
data16
dec
mov
lea
sub
and
push
push
or
imull
mov
sbb
repnz
ret
mov
mov
lret
cld
imul
mov
aad
int3
lcall
iret
sbb
aas
sbb
sbb
xor
lret
push
mov
pop
mov
sub
pop
lcall
sub
pop
fdiv
aas
cltd
mov
cmp
mov
ljmp
sub
pop
stos
sub
sub
push
cmpsb
and
and
and
rolb
add
jno
adc
scas
xor
imul
gs
xchg
ljmp
cs
loope
pop
cltd
sub
adc
in
pop
jae
push
sub
xor
leave
xor
mov
push
xchg
pop
inc
addb
xchg
sub
cltd
daa
or
les
stos
lea
xchg
jns
mov
lahf
xor
and
push
jae
or
or
adc
sub
lret
leave
or
lods
loop
jne
repnz
mov
in
or
call
push
and
addb
push
cmp
jle
xor
lods
into
xchg
inc
jbe
into
nop
xchg
mov
out
push
push
rorl
dec
dec
mov
ret
sub
mov
sbb
fs
ret
or
repnz
movsl
out
mov
push
adc
jbe
push
mov
scas
cmp
mov
and
repnz
push
xor
lods
xchg
rolb
or
cmp
in
or
rorb
add
movsb
xor
inc
or
mov
mov
push
jg
lcall
dec
xchg
xchg
jne
adcb
lods
xor
rorb
stos
dec
mov
push
lods
pop
rcrl
stos
pop
push
in
and
ljmp
in
into
lods
das
aaa
mov
push
mov
cmp
ror
xor
sti
xor
push
shr
ret
cmp
insb
jnp
inc
sbb
shlb
mov
push
ret
test
outsl
rcl
add
sbb
mov
sbb
movsb
out
push
pop
xor
lret
pop
pop
in
mov
add
inc
jge
mov
inc
fidivrl
mov
lcall
add
mov
insl
sub
or
mov
mov
cmpb
mov
cli
cld
inc
inc
inc
jno
cmp
dec
aad
sbb
mov
mov
jbe
cli
ljmp
cmp
inc
jnp
js,pt
out
imul
mov
sbb
lds
stos
es
adc
lcall
xchg
lahf
imull
adc
std
sub
dec
lret
pop
dec
or
pop
in
sbb
xchg
dec
into
stos
stos
cmp
add
rclb
and
jg
scas
dec
mov
jb
ret
mov
roll
lret
xor
repnz
fs
out
fistpl
icebp
out
mov
pop
lods
cld
xchg
mov
or
jnp
out
mov
test
sahf
inc
pop
fistpll
jecxz
xor
inc
or
push
xchg
push
mov
popa
mov
adc
or
mov
jo
and
lcall
lods
subl
cmp
sbb
outsl
rcrb
dec
sbb
dec
orb
xchg
mov
cwtl
or
ret
cmp
jbe
test
mov
xchg
xchg
sbb
ficoms
iret
or
inc
and
mov
test
push
cli
cs
adc
ss
pop
jnp
lret
jae
repz
mov
mov
loope,pn
rcr
or
mov
pop
lret
or
cs
or
ss
ljmp
cmp
cmp
add
mov
push
test
lea
out
lds
pop
lcall
adc
cmp
xor
mov
sbb
mov
ret
sbbb
push
adc
inc
iret
rcrb
or
mov
mov
jbe
mov
jnp
add
jmp
dec
jb
cmp
popf
jnp
or
repnz
fwait
enter
ljmp
inc
out
dec
outsb
roll
enter
cli
xchg
sub
and
sahf
das
mov
pop
adc
dec
and
xor
fldt
mov
and
cmpsb
stos
inc
cmp
sub
cmp
addb
jnp
xchg
ror
cmp
ljmp
push
bound
jns
inc
cmp
mov
adc
push
ds
inc
jmp
scas
popl
add
cmp
add
jg
adc
push
arpl
sbb
pop
pop
mov
fsts
lods
mov
xchg
cmpsb
mov
pushf
outsl
add
jo
repnz
mov
cltd
sub
mov
test
push
arpl
or
cmp
mov
cmp
sub
jbe
jp
jle
adc
ret
xor
fsubrs
lret
xchg
loopne
adc
jp
push
jnp
neg
push
mov
sbb
xor
pop
sbb
jmp
pop
stos
lret
jg
or
outsl
scas
pusha
push
cwtl
sbb
jnp
sahf
int
shlb
sub
mov
cmpl
dec
sbb
inc
add
ljmp
xor
into
lret
push
or
jnp
push
sub
fwait
push
ja
jl
leave
jmp
xlat
adc
into
adc
adc
js
cli
lods
lret
out
xchg
inc
xor
xor
repnz
mul
hlt
aas
cltd
jns
cmp
stos
add
fsubrl
pop
add
push
or
dec
and
xchg
scas
mov
mov
jl
and
mov
aas
sub
pop
push
inc
inc
fwait
clc
jae
orl
enter
out
jns
arpl
out
cmp
mov
push
in
scas
inc
in
xchg
or
ss
sbb
test
sub
ljmp
pusha
stos
push
xor
mov
fnstcw
inc
xor
push
or
es
dec
in
shrl
outsb
or
jg
jb
xorb
xchg
push
adc
jmp
mov
lret
pop
aas
pop
inc
arpl
hlt
das
and
data16
and
cli
icebp
cli
jecxz
cli
pop
repz
sub
jnp
ja
xor
jo
lea
add
jmp
adc
dec
and
imul
pushf
xlat
leave
stc
jmp
jnp
add
push
repz
mov
lahf
fwait
adc
xor
pop
lods
data16
dec
dec
das
inc
mov
psadbw
or
jp
jecxz
jbe
pop
push
rcr
in
aad
adc
xor
dec
mov
sub
jp
pop
movsb
movsl
mov
add
cmp
cli
sbb
jg
cmp
rol
ret
test
sbbb
jg
stos
scas
xor
fcompl
sbb
out
or
divb
jg
clc
mov
mov
xchg
mov
xor
inc
loopne
movl
shlb
cmp
jnp
add
jo
cmpsb
test
mov
ret
testb
add
or
push
sub
test
push
adc
dec
out
jno
stos
mov
adc
xchg
xor
pop
iret
mov
neg
lock
xchg
mov
xor
pop
addr16
test
pop
jge
rolb
pop
or
insb
mov
ljmp
push
test
push
pop
or
push
inc
jg
jns
ret
int3
dec
dec
fwait
out
mov
or
cmp
jp
sub
frstor
mov
mov
test
je
imul
adc
sbb
imulb
inc
cmp
cmp
inc
idivb
mov
fwait
cmpsb
mov
insb
lret
push
mov
add
or
scas
inc
xchg
push
fdivrl
mov
lock
cmp
lock
cmc
cmp
jp
insl
pop
mov
dec
cmp
cmp
or
push
jmp
jecxz
mov
mov
jbe
fldl2e
mov
jb
mov
in
push
push
push
sti
mov
sub
or
out
popa
fisubrl
xor
call
inc
jg
sub
stos
testl
xor
xchg
sub
cmp
test
loop
loopne
decb
mov
jae
idivb
fwait
test
lret
and
push
fidivrl
aad
mov
and
lock
sub
pop
mov
sub
ss
mov
jmp
mov
jg
xchg
lea
dec
aas
cmp
cmpsl
jle
xor
push
cli
jmp
and
ds
inc
es
sbb
jg
sub
jmp
ja
ljmp
jnp
and
mov
clc
mov
addb
mov
push
jae
xor
xchg
inc
es
inc
leave
es
pop
bound
sbb
inc
or
scas
in
lea
subl
scas
sbb
jbe
test
lret
insl
cmp
adc
inc
add
nop
mov
xor
pop
popa
mov
out
mov
or
inc
outsb
mov
jb
mov
pusha
hlt
je
mov
cli
in
push
ds
push
jg
inc
cmpsl
in
or
data16
sub
xor
test
pop
xorl
sub
ret
movsl
incl
in
push
xor
mov
or
fs
int3
inc
inc
sub
sbb
adc
pop
add
lods
pop
pusha
mov
cmp
ljmp
dec
push
popf
sbb
cld
sub
movsl
jg
cmp
roll
mov
fimull
repnz
and
adc
push
daa
or
das
cli
sarb
dec
cmp
lods
xor
xor
shrl
mov
movsb
in
ss
sbb
fadds
mov
jns
ljmp
mov
inc
mov
jne
dec
hlt
mov
lahf
sub
dec
mov
push
int3
or
pop
idivb
aas
fimull
out
je
mov
mov
mov
into
jmp
sbb
xor
mov
mov
scas
ret
js
xor
mov
lock
lret
int
sub
add
daa
cmp
sbb
xor
mov
push
ljmp
mov
shlb
push
adc
add
nop
push
imul
movsb
jl
xor
adc
loope
pushf
stos
nop
pop
mov
sub
repnz
xor
mov
ljmp
sub
out
movsl
add
es
test
push
or
jae
inc
sbb
gs
adc
cmp
adc
xchg
stos
and
leave
add
add
pop
cmp
push
or
sbb
subl
adc
xchg
xor
sub
jg
sbb
jns
mov
push
movntq
xchg
das
jne
add
or
sbb
and
pop
dec
loope
adc
cmp
mov
iret
jno
pop
push
mov
push
stos
imul
jp
xor
pop
shrl
stc
test
in
mov
lods
or
xchg
jae
or
insb
xchg
jle
or
dec
cs
repnz
adc
std
test
or
popa
int
mov
movsl
scas
mov
les
out
clc
call
mov
leave
push
adc
xor
cld
in
add
xorb
cwtl
out
push
rorl
arpl
fnstsw
dec
bnd
dec
int3
fnstcw
cwtl
pop
subb
cmc
mov
lret
push
push
dec
push
jb
mov
sub
jmp
arpl
sbb
mov
sub
pop
push
jmp
mov
ret
imul
push
sub
push
sub
add
gs
add
sbb
rcrl
pop
jmp
imul
fwait
jmp
call
or
dec
repz
inc
xor
or
negl
lcall
imul
or
or
or
mov
dec
or
xchg
jge
loope
inc
push
mov
in
push
or
pusha
and
xor
push
arpl
out
sub
xchg
pop
or
stos
test
adc
repz
lods
mov
insb
pop
shll
dec
dec
xchg
enter
push
pop
mov
lock
sub
pop
pop
mov
xor
mov
add
roll
push
sbb
xchg
mov
lods
cld
inc
arpl
cmp
cmc
or
jmp
repnz
addl
jecxz
jge
sub
pop
scas
js
lret
jno
or
push
inc
jnp
scas
pushf
in
mov
sub
xor
shr
mov
popa
nop
xlat
ss
sub
mov
aaa
lret
sub
xor
shll
cld
jmp
push
jno
fwait
push
mov
aad
enter
add
mov
push
jmp
in
cmp
and
lods
stos
ljmp
pop
flds
test
and
and
fs
ret
sbb
inc
pop
test
out
outsb
xor
test
in
sbb
shll
jg
push
sbb
lret
jnp
out
lret
jmp
sarl
cmp
xor
mov
lcall
or
aas
pop
cmp
sub
mov
push
in
adc
mov
out
push
jne
cmpsb
mov
cli
in
insb
aam
loop
xor
mov
orl
jbe
cmp
repz
pop
sahf
or
pop
aas
and
fwait
xor
stos
mov
cli
or
ss
ret
or
imul
nop
dec
sbb
jecxz
addr16
and
arpl
sahf
xchg
hlt
cmpl
sbb
push
leave
imul
cs
mov
or
jo
loop
js
jp
push
adc
hlt
sahf
sub
mov
xorl
and
shlb
mov
adc
mov
mov
xor
jg
add
xor
push
icebp
test
jb
into
push
pop
xor
cltd
inc
mov
lods
push
or
or
sbb
mov
mov
cld
fimull
pop
xorl
test
sbb
push
cmp
gs
adc
pop
aad
adc
in
fmuls
mov
or
cmp
xchg
or
imul
out
subb
add
leave
into
cmpsl
dec
sahf
in
pop
call
enter
jnp
aad
fs
mov
pop
cltd
imul
imul
aam
arpl
inc
sbb
imul
push
flds
or
add
push
jg
ljmp
push
cmp
dec
loopne
or
add
das
repnz
inc
push
ds
mov
lret
inc
in
jbe
les
ret
shrl
fisubrl
sub
lods
aam
psubq
cmpsb
neg
mov
test
sub
gs
push
mov
mov
sbb
cmp
or
in
mov
idivl
jmp
sbb
sbb
pop
int3
data16
imul
push
fdiv
sub
test
movsl
pop
or
fst
fdivp
arpl
stc
jns
jnp
iret
into
mov
mov
dec
fisttps
scas
or
cld
sbb
test
jp
cmp
sub
mov
jp
movlps
adc
sub
ljmp
sub
lcall
rcrb
inc
cmp
xchg
sub
cli
mov
es
cmp
pop
cli
dec
int
xchg
or
sub
xchg
sbbl
push
jecxz
mov
ret
or
inc
cmp
mov
cmpsb
xlat
or
mov
shl
shll
sub
jnp
sar
cmp
cmp
hlt
fmul
daa
outsb
adc
ret
mov
sub
lea
jecxz
mov
or
jns
testl
xchg
push
mov
sbb
fcmovb
ljmp
cmp
es
fcmovbe
mov
pop
movsb
xchg
inc
outsl
mov
mov
mov
cmpsl
scas
sub
cwtl
cmpsb
cltd
daa
mov
nop
fsubr
lock
mov
push
cli
daa
in
cmp
jl
inc
in
sub
mov
ljmp
xor
xchg
iret
adc
add
cmp
xor
xlat
stos
or
aas
add
cmp
cmp
stos
dec
xchg
in
xor
or
jg
mov
jge
sbb
fstpt
sbb
inc
push
jnp
mov
or
push
mov
add
pop
mov
jl
and
pop
movsl
cmp
xor
ret
clc
fists
in
xor
sbb
bound
and
outsl
sub
cmp
lods
scas
inc
xchg
adc
xchg
scas
and
xor
xor
into
or
dec
jae
stc
fisubrl
and
mov
lcall
sub
inc
sub
mov
mov
adc
test
jg
jo
orl
pop
inc
leave
test
xchg
stos
arpl
or
out
cmp
add
testl
mov
pop
test
sub
push
into
and
mov
int3
cli
push
pop
lret
add
sub
nop
inc
sub
add
mov
push
push
ljmp
adc
pop
out
mov
inc
ljmp
inc
or
fdivl
repz
mov
cmp
cmp
subl
sbb
xchg
lods
lock
call
mov
add
mov
bound
imul
notl
xor
or
jmp
mov
jle
inc
mov
ss
jg
mov
jmp
dec
repz
fdivrl
push
add
or
iret
xor
scas
repnz
in
xor
or
ljmp
mov
sbb
stc
mov
mov
sbb
leave
mov
adc
push
ljmp
xor
push
fimuls
repz
and
lret
lea
mov
mov
mov
divl
scas
jle
mov
clc
jb
mov
inc
cli
sbb
dec
xor
mov
mov
imul
loop
das
mov
sbb
dec
mov
fimull
xor
xor
xor
inc
push
mov
jp
repz
sahf
dec
loopne
or
sbb
inc
or
mov
sub
dec
das
pop
mov
sti
loope
imul
out
in
or
bound
aad
das
popa
add
sub
imul
pop
pop
jg
daa
mov
sbb
mov
push
cmpsl
push
inc
mov
ljmp
add
sbb
jge
das
xchg
push
mov
jmp
test
jne
push
jnp
call
bswap
out
inc
icebp
test
inc
cld
mov
xor
push
lea
jg
pop
scas
hlt
pop
dec
cmpsl
shlb
pop
jae
push
inc
and
aas
lcall
push
push
cmp
imull
jno
jl
push
sub
stos
in
subb
and
cmp
mov
push
in
je
or
push
mov
cwtl
in
divl
cmc
notb
sub
mov
cmp
or
cmpsb
jnp
push
call
aad
shlb
ds
push
mov
mov
js
xchg
jl
xor
mov
or
xchg
rorl
sub
jg
ret
aam
sarb
push
sub
adc
dec
aam
nop
pop
and
cmp
inc
sub
push
sbb
dec
lret
int3
and
popa
stos
int3
test
or
dec
cmp
xlat
and
loope
mov
xor
cli
add
mov
xor
jge
cwtl
xor
jbe
pusha
scas
sbb
mov
jb
ficoml
mov
inc
lcall
pop
sub
cmpb
pop
cli
imul
subl
mov
and
and
repnz
das
sbb
cmp
mov
in
pop
ds
dec
cmpsl
dec
mov
sub
sbb
sbb
mov
testl
or
push
inc
in
xor
shl
xchg
cmp
rol
out
and
arpl
pop
jnp
pop
gs
test
aaa
dec
pop
leave
and
sbb
sub
add
adc
cmc
inc
add
scas
loop
xor
test
cli
mov
repnz
or
xchg
pop
xchg
push
fisubrl
jnp
xchg
xchg
add
xchg
ds
mov
stos
es
js
lea
mov
inc
hlt
mov
out
push
add
or
xor
or
inc
push
adc
push
loop
and
lea
scas
xlat
cmp
popa
ds
sbb
push
call
xchg
std
adc
movsl
decl
out
sbb
cmp
test
xchg
stos
mov
add
xor
mov
gs
out
ja
dec
xor
cmp
outsb
mov
loope
stc
adc
xor
sub
mov
xchg
lret
lods
pop
repz
mov
add
test
adc
adc
push
jmp
jg
cmpsl
lods
icebp
mov
enter
sbb
or
lock
out
stos
stc
xchg
adc
and
clc
cwtl
xor
rorl
mov
mov
push
pop
mov
fildll
mov
lods
cmc
rcrl
lods
push
jg
xchg
cltd
nop
adc
ds
jmp
sarl
repz
jnp
mov
hlt
leave
aaa
xchg
and
stos
jmp
cwtl
pop
int
mov
dec
or
push
ljmp
int3
aas
cmp
mov
movsl
lar
cmp
dec
push
jmp
fsubrs
sub
das
or
mov
cmp
rep
sahf
dec
or
imul
sbb
pop
inc
pop
fwait
sbb
sub
loope
sahf
icebp
cwtl
mov
inc
adc
push
iret
or
pushf
push
and
ss
divl
jnp
or
xor
fcomip
in
sub
push
iret
xor
repz
pop
xor
inc
xor
les
or
repnz
add
or
push
lcall
jo
push
mov
xchg
repz
pop
pop
call
adc
adc
sub
in
dec
imul
mov
pop
or
ret
mov
sub
pop
inc
sub
sub
stos
cmp
push
iret
aaa
orl
sbb
hlt
push
pop
mov
inc
inc
mov
dec
cltd
aaa
xchg
inc
ljmp
outsb
sub
ljmp
jmp
cmp
dec
mov
mov
stos
call
fmuls
or
mov
aaa
dec
mov
cmp
cmp
lock
lret
scas
mov
push
mov
es
mov
inc
push
mov
mov
and
jmp
push
mov
mov
mov
xor
mul
scas
and
ret
mov
sbb
sub
scas
clc
mov
enter
aas
test
mov
nop
sub
jns
pop
sahf
cmp
mov
mov
punpckhbw
sbb
push
lcall
or
push
mov
inc
inc
dec
jmp
sbb
pop
aaa
push
sub
or
leave
mov
sbb
imul
sti
or
aaa
dec
ljmp
xor
push
sbb
repnz
mov
mov
xchg
fimull
inc
or
inc
xor
lret
inc
scas
cmp
or
sbb
shrb
sti
sub
lret
aaa
push
stos
or
imul
gs
mov
jnp
dec
es
mov
inc
jae
sti
mov
notb
adc
test
call
sub
into
dec
sbb
or
add
int3
jmp
scas
popa
out
or
imul
fisttpll
clc
sub
testl
mov
or
mov
mov
rcrb
pop
jb
fiadds
xchg
mov
jmp
into
and
push
je
jns
inc
shll
shll
ret
test
add
stos
fcmovbe
ret
cli
mov
lcall
test
sub
out
imul
or
jb
ljmp
ljmp
sub
xor
cmp
fidivl
mov
es
mov
int
imul
inc
out
pop
adc
ljmp
push
fisttpll
inc
arpl
es
dec
mov
push
lret
sbb
daa
sbb
test
stc
sbb
lds
mov
and
mov
xchg
pop
pop
inc
sti
lcall
cmp
jecxz,pn
les
jnp
xor
shlb
inc
cmp
jae
das
ljmp
negl
repz
ljmp
cld
sub
aaa
push
stos
mov
mov
pop
cmpsb
adc
push
pop
imul
push
ret
dec
call
jb
aaa
cli
xor
pop
lods
pop
leave
dec
pop
and
into
pop
sbb
jecxz
jbe
ljmp
mov
insl
jne
imul
lea
repnz
lret
stos
jns
push
cmp
push
add
or
lea
fistpl
dec
and
xor
dec
pop
sub
ljmp
cmp
jecxz
pop
scas
std
pop
clc
jle
mov
sbb
lret
call
repnz
mov
fiaddl
pop
es
out
sub
ret
ss
xchg
dec
sub
jnp,pn
push
ljmp
xchg
adc
sub
mov
dec
ljmp
pop
cmp
add
iret
jge
ret
mov
ds
mov
push
push
xorl
arpl
mov
jg
mov
out
adc
pop
sub
sub
xor
mov
in
das
lret
sub
jbe
sbb
adc
xor
pop
lock
xchg
pop
lods
jmp
scas
inc
dec
dec
xchg
cmp
dec
inc
cmp
push
loop
das
fcmove
cmp
int
daa
inc
dec
push
call
scas
jp
jnp
pop
dec
pop
in
loope
aam
lock
mov
test
dec
into
loope
xor
cs
mov
cmpl
cmpsl
sub
popf
xchg
mov
adc
stos
cmp
in
xchg
addr16
idivl
lods
push
mov
sbb
sbb
xchg
mov
dec
jge
sub
push
inc
cmpl
inc
push
xchg
imul
repnz
pop
idivb
add
dec
insb
sahf
inc
mov
adc
xchg
add
mov
lret
sahf
fldt
add
mov
orl
test
fcoms
ljmp
sub
pop
jmp
add
in
mov
repz
inc
sbb
or
push
into
sub
cmp
xchg
lcall
ljmp
push
push
sub
or
mov
push
arpl
add
movsb
jmp
adc
loope
in
insb
jnp
mov
cmp
adc
lret
inc
inc
mov
ljmp
or
and
gs
sbb
jns
xchg
xor
sti
sub
lret
mov
pop
aas
cld
xchg
push
test
adc
arpl
cmp
cld
insl
bound
scas
mov
pop
jg
mov
sbb
mov
or
sbb
ljmp
clc
into
xchg
jg
lea
or
xchg
lods
mov
cmpsl
daa
repnz
cmpsb
jle
jno
dec
testl
and
xor
cmc
ljmp
scas
call
inc
inc
inc
adc
add
aas
sub
pop
leave
mov
xlat
push
jp
sub
jno
cmp
js
jne
xchg
sbb
rorl
and
xor
lods
pop
mov
and
sub
xor
jnp
iret
es
bound
sub
insb
adc
xor
imul
adc
dec
push
popf
adc
inc
sar
and
dec
in
sub
sbb
jns
cmpsb
adc
xchg
bound
push
sbb
cmp
cmp
mov
mov
mov
and
xor
or
xchg
push
mov
and
or
sbb
mov
imulb
clc
sbb
jb
or
enter
mov
sbb
add
cmpsb
or
inc
inc
sahf
imul
dec
dec
out
scas
pop
leave
or
mov
popa
lret
inc
ljmp
outsb
lret
sub
push
mov
or
lcall
sub
inc
mov
mov
xor
sub
push
popf
ficomps
imul
loopne
xor
inc
fxch
mov
repz
pop
or
inc
cmovae
cmp
push
or
adc
sub
out
mov
push
in
sarb
ret
sbb
pop
inc
imul
and
shll
dec
pop
inc
push
ljmp
jmp
out
inc
scas
lret
mov
sbb
lahf
mov
cmp
sti
popa
push
dec
scas
cmp
sub
scas
adc
lahf
lret
out
inc
jmp
cli
add
xor
mov
popf
decb
gs
cmp
icebp
cmp
imul
cmpb
sahf
mov
mov
or
sub
outsl
repnz
add
filds
test
inc
inc
xor
dec
jo
cmc
js
imull
push
ret
sub
mov
mov
mov
adc
dec
sub
out
xor
mov
pop
pop
bound
cltd
lea
or
fcoms
mov
aaa
xor
xchg
mov
sahf
or
jb
mov
dec
popa
addr16
ja
pop
loope
cmpl
sub
jmp
push
iret
xchg
adc
pop
jecxz
and
nop
push
jp
mov
xchg
jo
insb
xor
shr
sbb
or
jp
inc
xchg
pop
shrb
cmpl
jb
inc
or
jge
fisubrl
cmpsb
pusha
mov
mov
jg
cs
ljmp
jae
subl
xor
cmp
add
pusha
imul
repnz
cli
dec
outsl
adc
das
pushf
cmp
push
jg
jbe
inc
fsubl
adc
cmp
jle
cmpsb
out
test
dec
push
jns
shlb
push
shrb
rcll
scas
xchg
je
imul
daa
pop
mov
js
fstpl
adc
ljmp
mov
dec
inc
ds
int3
fbld
ret
pusha
test
and
cltd
dec
in
jmp
fwait
hlt
iret
cmp
out
cmpl
mov
xchg
cmpl
pop
mov
movsl
xchg
jge
jno
bound
xor
rorl
jns
leave
adc
jmp
mov
leave
mov
dec
dec
sbb
insb
icebp
xor
lcall
test
mov
xlat
ljmp
es
in
sub
mov
push
xchg
test
push
push
fistpll
lcall
stos
jle
pop
add
mov
xor
fdivl
sbb
or
inc
ficomps
aaa
sbb
enter
sahf
sbb
xchg
pop
sbb
and
lock
icebp
cmc
stc
shr
outsl
faddp
xor
dec
cltd
push
jecxz
sbb
enter
ret
inc
inc
or
push
sahf
and
inc
outsb
mov
loopne
or
mov
mov
call
mov
mov
cli
mov
clc
sbb
ffreep
inc
test
dec
pop
xchg
ja
fucom
pusha
pop
mov
cmpsb
xor
jmp
jne
dec
sub
jno
mov
sub
ss
cs
jecxz
jno
jp
fidivs
stc
cmpsb
sti
scas
add
dec
pop
iret
mov
sbb
jbe
int
aaa
test
fucompp
lret
add
add
push
cs
bound
outsb
leave
test
repz
jns
mov
call
sub
ficoml
jmp
jecxz
cmp
xlat
jecxz
push
mov
aas
jle
or
xchg
ficoms
or
mov
repnz
cmp
test
loop
sti
jmp
and
xchg
mov
ljmp
mov
test
jo
sub
call
jp
cli
stos
loope
cmp
stos
jbe
mov
push
or
xor
fucompp
insb
sbbl
arpl
sbb
shrl
ficompl
jno
mov
jns
addl
pop
or
push
cmpsb
out
jg
imul
cmp
dec
das
fwait
xor
in
xchg
out
push
jmp
dec
cmpsl
xor
pop
stos
mov
pusha
lds
mov
push
jmp
jnp
stos
pop
cmp
aaa
aaa
adc
pop
int3
pop
mov
xor
in
mov
leave
sbb
pop
in
hlt
negb
xchg
push
mov
and
loop
inc
inc
add
jnp
aaa
mov
pop
stos
sbb
pop
ret
inc
roll
in
or
or
test
nop
sbb
dec
clc
in
add
sbb
repnz
mov
es
ds
push
or
mov
add
xchg
test
xchg
fldenv
cmp
and
mov
jns
xor
and
shlb
inc
mov
fnstcw
or
inc
test
in
fisubrs
cmp
or
sbb
arpl
sbb
fiaddl
cmpsb
add
pop
clc
push
xor
jl
adc
mov
cmp
dec
cmp
pusha
cmp
pop
mov
add
in
test
cs
sbb
aad
mov
jmp
fsubrl
das
xor
jmp
push
mov
shrb
ss
repnz
sub
push
test
cmp
sub
rcrl
dec
aam
int
repnz
pop
mov
movsb
scas
js
bound
sub
inc
cli
fadd
push
xor
mov
add
test
out
sbb
mov
dec
pop
cli
mov
and
out
xchg
or
out
xor
dec
jecxz
sbb
pop
clc
or
call
xchg
data16
dec
fstpt
outsb
int3
mulb
cmc
xor
xor
xchg
adc
or
jnp
or
xor
inc
stc
xor
lret
outsl
in
jae
mov
mov
jp
fimull
xchg
sub
sbb
push
cmp
dec
out
pop
movsb
or
test
test
cmp
fisttps
xchg
xchg
xor
jmp
fwait
sbb
jnp
sbb
jge
xchg
inc
rolb
mov
stos
add
jmp
cmp
mov
cmp
cmpsb
leave
dec
sbb
jb
xchg
mov
mov
inc
fwait
sub
addl
and
sbb
test
mov
or
push
mov
sub
inc
stos
add
pop
pop
jo
add
call
sbb
jns
jge
stos
fs
sub
push
and
pop
or
dec
je
and
mov
arpl
or
xchg
and
bnd
sbb
aas
idivb
cmpl
cmp
inc
or
rcrl
loop
push
outsb
dec
enter
lock
adc
mov
inc
sbb
cs
jne
pusha
repz
jnp
xchg
ficomps
int
jae
pop
cli
mov
adc
sub
mov
sub
lret
jno
pusha
hlt
sub
pop
repz
and
stos
mov
inc
arpl
and
mov
lock
xchg
add
sbb
xor
imul
cmc
mov
or
jne
or
mov
xchg
xlat
push
push
mov
insl
lds
aas
shrb
add
xor
push
leave
pop
shl
or
jmp
bound
jbe
cmp
pop
mov
lods
jp
adc
or
test
jg
xchg
or
pop
mov
test
jae
lret
adc
mov
out
lret
stos
mov
cmp
push
xor
addr16
imul
cli
xor
jl
inc
jmp
hlt
enter
rcll
mov
add
jno
sbb
int3
call
jo
scas
cli
adc
mov
mov
leave
inc
inc
popa
xchg
jp
ljmp
enter
xchg
push
cmp
fcomp
leave
mov
popa
push
mov
out
ror
jmp
push
sti
cwtl
cltd
mov
sahf
add
cmp
jb
jno
subb
mov
pop
loope
repz
push
sahf
mov
adc
jecxz
push
adc
jmp
pop
push
cmp
stos
push
lcall
loop
cmpsb
adcb
sbb
rcrl
pop
nop
jno
ret
arpl
call
push
das
pusha
jbe
xchg
xor
xchg
mov
jp
sti
jl
test
jp
movsl
pop
repnz
jle
cmc
aam
lods
dec
sub
sbb
cli
inc
xchg
rclb
pop
or
add
hlt
cmc
sbb
inc
into
add
imul
call
outsb
repnz
and
xor
ret
call
clc
aas
add
lea
sub
cmp
mov
mov
or
cli
jae
jmp
push
loope
mov
das
xor
sub
push
lds
mov
sbb
mov
xor
sbb
inc
push
adc
adc
lcall
xor
adc
sub
ja
les
inc
shlb
in
xor
stos
or
mov
loop
test
xor
push
dec
arpl
stc
imul
mov
sub
pop
es
xor
cmp
mov
jb
mov
lock
xor
sbb
fwait
imul
lock
arpl
or
lea
cltd
pop
mov
das
test
jg
push
out
and
clc
in
scas
xchg
sub
sbb
jbe
es
stos
xchg
in
push
cli
xchg
popf
cmp
jns
push
jbe
jecxz
mov
ror
mov
pop
xor
loope
mov
adcb
cli
mov
paddsw
ds
push
jne
mov
adc
jl
mov
call
inc
repz
fsts
fimull
jl
dec
insl
stos
inc
aaa
aas
data16
inc
jnp,pt
xchg
xchg
push
cs
cmpsb
mov
push
test
in
pop
cmp
cmp
push
mov
xor
and
loope
push
loope
jns
and
sbb
out
inc
icebp
xchg
in
pop
xchg
pop
jns
pop
mov
shlb
aaa
orl
jo
sti
pop
xor
sub
je
sahf
cltd
rolb
mov
les
sub
fisubl
push
xor
mov
stc
fs
dec
repz
and
jnp
or
mov
or
fistps
or
mov
lea
xchg
mov
mov
dec
add
cmp
hlt
pop
xor
cmp
ja
ret
dec
sbb
jg
push
loopne
ja
mov
add
negl
xchg
push
ds
jo
sbb
jmp
push
fsubr
out
xchg
mov
icebp
sub
mov
fs
lcall
inc
mov
or
push
mov
push
adc
mov
fsubs
jb
inc
pop
stc
push
or
adc
mov
jp
cmp
dec
lahf
xor
and
cmp
push
cltd
fs
adc
sbbb
les
adc
or
pop
pop
sbb
jl
testb
xor
adc
loopne
out
push
or
mov
push
ljmp
int
jnp
ficoml
ljmp
jmp
jae
pop
jb
or
mov
mov
jecxz
jne
xchg
out
sub
lea
popf
push
mov
ficomps
sub
je
in
xor
cli
mov
jmp
pop
testl
jmp
sbb
dec
call
mov
lods
sub
push
negl
test
inc
lret
adc
or
mov
jne
sub
push
scas
stos
xchg
icebp
shlb
lods
or
lret
mov
mov
cmp
push
xchg
out
mov
pusha
mov
xchg
ss
stos
sarl
xor
pop
daa
mov
sbb
mov
push
mov
pop
gs
push
mov
scas
fchs
out
cmp
test
cli
aad
jmp
int
cmp
not
imul
xor
or
ljmp
clc
les
cmpsb
test
ret
loopne
xor
sbb
fisttps
fwait
stc
cmpsl
rcl
into
add
push
bound
sbb
test
push
movsl
jnp
leave
xchg
addr16
xchg
in
test
pop
mov
jae
out
mov
and
insl
xor
xor
adc
jns
sub
adc
mov
mov
sarb
lahf
jge
fistps
xchg
scas
dec
aaa
sbb
and
ret
subb
and
xor
mov
cmp
push
rorb
pop
cmp
pop
adcl
sub
jmp
out
aam
in
outsb
mov
lea
in
repnz
rcrl
xor
sub
jl
test
or
cmp
nop
pop
sbbl
stos
aaa
mov
add
push
orl
and
sbb
inc
adc
jmp
std
push
mov
sbb
inc
or
jmp
sub
fdivp
ljmp
push
clc
pop
mov
jp
sbb
lret
sti
mov
cmp
sbb
divb
cmp
inc
jmp
dec
cmp
lret
jbe
cmp
or
dec
mov
cmp
repnz
outsb
jmp
sbb
aaa
push
aaa
stos
ljmp
ljmp
sahf
cmp
push
mov
aaa
or
aas
mov
loope
lds
out
stos
xchg
mov
loope
jmp
adc
dec
sub
cmc
xchg
sbb
sub
or
xor
in
loope
test
es
jb
into
lret
inc
aaa
stos
scas
mov
and
sbb
jnp
mov
fiadds
and
fnsave
dec
xchg
jo
in
cmp
jb
push
or
daa
or
push
mov
or
jmp
xchg
inc
lret
xchg
xor
sbb
sub
jmp
xlat
int3
sbb
mov
subb
in
jecxz
adc
pusha
mov
stos
stos
dec
mov
mov
repz
lret
inc
enter
cltd
push
shl
insb
xor
or
pop
lcall
das
mov
add
lret
popa
jl
mov
dec
in
mov
enter
adc
test
leave
rcrb
incl
lock
xchg
repz
or
imul
xor
out
sbb
addr16
xchg
gs
adc
adc
xor
fistl
lods
inc
sub
test
or
or
adc
jbe
dec
cmp
int
lds
ret
jmp
pop
pop
xchg
mov
popa
popf
arpl
adc
or
push
nop
cmp
or
lods
cmp
add
lahf
push
mov
jne
push
test
cmpb
pop
idivl
ljmp
leave
cmp
inc
or
pusha
jns
sub
lds
xchg
sbb
daa
cmpsl
icebp
mov
imul
mov
push
cmpsl
push
sbbl
scas
mov
adc
mov
outsl
negb
xor
jp
ja
mov
push
mov
in
int
inc
dec
pop
lcall
loop
es
in
inc
jo
shrb
mov
xchg
push
std
and
out
xchg
push
fs
xor
adc
lods
ljmp
into
pop
clc
pop
mov
test
fidivs
popa
sti
mov
imul
xor
cmc
lods
lcall
mov
popa
and
xchg
dec
mov
jae
jg
out
scas
push
adc
lock
outsl
pop
or
dec
and
ljmp
shrl
sub
sub
pop
enter
jns
cld
neg
pushf
popa
mov
ss
sahf
popa
fmull
ss
sub
subl
push
adc
sbb
std
test
and
jl
das
sbb
or
arpl
test
pop
mov
xor
cmp
pop
cmp
pop
inc
xor
inc
jecxz
add
xor
xor
xor
dec
push
std
adc
dec
pop
lret
cmp
popf
xlat
cmp
movsl
and
ficoms
fisttpl
add
fmulp
loope
in
jmp
xchg
pop
das
test
pusha
dec
or
sbb
fs
jo
jnp
scas
stos
fisttpll
jbe
add
pop
fimuls
subl
add
sub
out
clc
js
mov
or
pop
rol
jns
dec
push
jp
das
pop
mov
inc
add
mov
and
test
outsl
aam
adc
fisttpl
mov
add
mov
popa
inc
fwait
stos
push
mov
outsl
xor
fmuls
mov
mov
xor
cld
push
mov
lret
or
dec
sub
leave
xor
xchg
imul
push
lret
lods
sub
push
aad
pop
sbb
aas
or
push
clc
adc
or
xchg
or
xor
cs
ljmp
jnp
ss
jmp
inc
mov
xchg
adc
daa
mov
jmp
stos
cli
push
add
pop
outsl
in
fwait
xchg
dec
out
cmp
push
xor
cmp
xor
xchg
xor
sub
aas
adc
ficoml
ljmp
fimull
pop
js
mov
fiadds
movsl
cmp
std
lea
mov
gs
divl
jae
lods
jp
fsts
movsl
sbb
das
cmovs
aad
mov
sbb
in
jecxz
or
inc
mov
pop
mov
pop
and
inc
mov
or
dec
loopne
push
in
cmp
sbb
sbb
stos
xor
pop
push
call
stc
je
inc
jmp
lret
aas
xchg
xor
lea
xchg
or
lods
mov
and
mov
out
mov
sbb
ds
jg
push
jg
jno,pt
negb
sub
push
lea
dec
aas
aam
cwtl
jns
sbb
lret
pop
mov
shll
jbe
loopne
add
push
mov
fdivr
dec
lds
pop
insb
xchg
out
orl
add
imul
inc
or
cmp
mov
mov
clc
xchg
xor
mov
out
cmp
mov
insl
popa
insl
mov
shll
scas
lea
loopne
or
and
mov
pop
ss
inc
pop
nop
ds
mov
ss
stos
lock
stos
test
popf
ret
dec
movsb
sahf
mov
dec
mov
out
outsl
xor
int
cmp
dec
jp
push
xchg
stos
inc
push
sub
jbe
pop
test
sub
cmp
push
int
sbb
scas
mov
jmp
mov
enter
inc
scas
fisttpl
stos
scas
or
xlat
ja
lret
or
ljmp
or
je
dec
jmp
enter
stc
xor
fwait
stc
xchg
mov
mov
out
repz
jbe
mov
cwtl
adc
dec
xor
imul
or
push
or
sahf
test
xor
inc
cmp
adc
shl
push
sub
inc
or
cmp
in
push
or
jle
stos
mov
or
mov
ja
mov
push
inc
cmp
rclb
xor
pop
ret
or
fwait
jo
jnp
mov
das
punpckhdq
lock
xchg
ret
jb
xor
into
out
xor
push
in
subb
cmp
pop
add
xlat
loope
hlt
jmp
rcl
pop
icebp
mov
xrelease
lret
js
jmp
cld
cmp
and
into
sub
ss
mov
push
idiv
push
inc
ljmp
add
rorb
cli
jnp
xlat
aam
xor
outsb
mov
addl
daa
int
scas
repnz
xchg
pop
add
jns
not
cwtl
push
sub
add
and
adc
cmc
xor
in
inc
or
scas
shll
mov
jmp
cmp
cmp
mov
or
data16
ret
mov
pushf
pop
loope
lcall
cmpsl
add
call
sbb
mov
fsubrs
jnp
sub
shlb
jmp
imul
jo
or
pop
jbe
fdivl
add
cmp
mov
sub
popl
orps
clc
mov
lret
dec
cmp
and
xor
add
outsb
flds
sbb
sbbl
jb
repz
stc
lcall
gs
ljmp
rcll
iret
cli
lock
test
pop
xchg
or
hlt
dec
xchg
mov
mov
imul
inc
stos
sbb
or
inc
ss
stc
sub
dec
or
pusha
test
je
sahf
into
push
cmp
mov
mov
mov
push
or
je
and
daa
mov
rorb
or
dec
pop
adcl
inc
inc
fcmove
jnp,pn
pop
xchg
xor
or
negl
fs
mov
lret
leave
sahf
fs
pop
push
loop
mov
jo
and
mull
xor
sub
push
sti
leave
inc
jnp
dec
ljmp
xchg
sahf
cmpsb
adc
jmp
xchg
enter
leave
adc
cmc
xchg
dec
call
jmp
or
shl
inc
addr16
xor
imul
shrl
fisubrl
or
mov
add
rorb
call
gs
sti
gs
fcmovnbe
aas
fcoml
ficompl
dec
stos
sub
ljmp
cmpsb
sbb
mov
and
or
sbb
add
xchg
cmp
xchg
dec
cld
jp
inc
xchg
sbb
mov
cli
daa
jg
mov
inc
jge
sub
pop
fbstp
push
jmp
jo
call
jp
ljmp
mov
and
and
punpcklbw
pop
dec
hlt
add
sbb
xchg
mov
mov
inc
out
fwait
in
out
sbb
lods
sub
sub
push
ja
cmpsb
push
sub
imul
lea
insb
and
mov
dec
mov
mov
or
mov
or
push
test
popa
mov
push
aas
cld
pop
sub
lods
push
cmpsb
jns
jae
cwtl
stos
out
leave
push
rcr
xor
hlt
pop
adc
sbb
sbb
arpl
mov
xor
imul
push
jmp
sub
inc
nop
cli
sbb
enter
repnz
das
popa
add
inc
jns
fcompl
rolb
pop
push
bnd
mov
xchg
inc
repnz
sahf
cltd
nop
jle
dec
insl
cli
and
bnd
pop
xor
test
jb
sub
sbb
mov
mov
mov
mov
pop
sub
mov
cmp
orb
int3
cmp
iret
dec
cli
popa
sub
jb
or
dec
or
adc
dec
inc
jno
data16
sbb
imull
mov
aaa
mov
push
push
mov
lods
mov
sti
jl
int
inc
test
jne
ret
dec
sti
lods
cmp
or
push
dec
shll
xor
dec
ret
lret
jne
push
sub
in
and
sbb
push
lods
pop
lock
in
mov
mov
push
test
mov
inc
adc
pusha
jecxz
divl
nop
outsl
cmp
lock
fscale
loope
sbb
cli
decl
push
jp
or
sub
out
dec
das
fcmove
mov
mov
cmp
or
adc
mov
push
ljmp
ficoml
mov
push
arpl
xor
lret
cmp
dec
mov
mov
sub
add
neg
xor
push
jg
das
aaa
repnz
inc
sub
mov
pusha
test
subb
mov
aaa
mov
inc
enter
pusha
xor
inc
bound
mov
or
mov
dec
sub
mov
cli
jo
cli
add
adc
imulb
pop
cmp
push
das
cmp
mov
push
leave
pop
jg
in
clc
ljmp
repz
add
xor
out
add
ds
imul
test
fidivrs
ljmp
sar
pusha
inc
pop
cwtl
or
fidivrl
pushf
daa
sbb
test
inc
sub
or
jbe
ret
dec
dec
add
imul
dec
adc
push
imul
xor
mov
and
push
enter
xor
out
xchg
fbld
cmpsl
jp
jmp
into
clc
mov
mov
enter
and
int3
loop
jg
imul
inc
sbb
cmp
test
mov
jae
mov
mov
and
push
mov
add
jnp
lcall
cmpxchg
repnz
stos
mov
inc
or
daa
stos
lea
sbb
mov
pop
inc
mov
into
loope
ret
inc
hlt
push
ret
sbb
js
cld
pop
mov
popf
sahf
sub
lea
div
sahf
stc
inc
popl
pop
jnp
insb
mov
xor
cmpsb
mov
inc
out
xchg
sahf
jae
mov
fimull
xchg
dec
lret
add
cmp
inc
movsb
xor
dec
es
add
mov
adcl
icebp
lret
push
push
xor
cmp
decb
outsl
push
test
sar
dec
sbb
xlat
sbb
fimuls
icebp
repnz
leave
mov
adc
and
popa
jmp
iret
adc
ret
inc
add
enter
clc
repnz
dec
jl
cmp
cmpb
test
arpl
mov
jmp
xchg
jne
add
cmp
scas
add
pushf
loopne
or
cmp
stc
scas
movsl
jae
mov
mov
cld
outsl
ret
pop
std
push
push
out
add
and
jb
xchg
repz
stos
xlat
jecxz
cmp
adc
in
xchg
cli
sbb
sbb
aas
shrl
pop
mov
imul
pop
arpl
or
ds
or
cmpsl
icebp
inc
xor
and
dec
fisubl
test
sub
lret
jmp
or
call
subl
fucomip
add
aas
cli
sub
jnp
ret
jp
push
std
pop
aad
sbb
cli
shl
incl
cmpsb
mov
rorb
cmp
clc
cmp
xchg
add
mov
dec
cmp
jmp
iret
cmp
sbb
ss
stos
or
and
mov
cli
inc
loopne
and
movb
insl
pop
sbb
arpl
iret
dec
jb
inc
test
or
pop
sbb
out
stc
xchg
mov
fisubl
cwtl
sub
cli
dec
arpl
adc
dec
or
mov
into
into
fimuls
mov
add
in
orl
push
xchg
inc
pushf
sbb
lcall
test
fsubrs
or
adc
xor
out
sbb
repnz
push
stc
and
add
or
push
cli
lea
push
cmp
xor
addr16
cmp
cmp
or
fcmovb
sbb
pop
nop
mov
mov
or
pusha
js
sarb
add
and
test
popa
call
jnp
lea
into
jp
lds
xchg
call
xor
xchg
int3
pop
cmp
stos
mov
inc
aam
test
fildl
call
mov
jecxz
xchg
arpl
int3
test
push
movsb
and
sbb
push
mov
out
mov
sbb
aas
stos
loope
xchg
les
mov
cmp
cwtl
mov
outsb
loop
mov
push
mov
cmp
mov
sub
imul
jg
inc
and
lcall
aaa
mov
dec
frstor
sbb
mov
push
pop
pop
inc
sub
iret
es
xchg
ret
sbb
mov
inc
inc
mov
add
sub
pop
xchg
jl
scas
idivb
pushf
incb
out
inc
shl
xchg
movsl
pop
lret
mov
das
inc
mov
xor
stos
xlat
pop
or
inc
dec
negb
push
or
jns
imul
jl
mov
add
sub
adc
fistpll
ljmp
aas
je,pn
mov
push
repnz
xor
repnz
jae
jno
scas
out
mov
sysret
js
ds
lcall
sub
add
in
pop
movsl
lock
dec
aam
js
adc
lods
ss
xlat
push
xchg
mov
sub
jnp
adc
jbe
dec
inc
lcall
pop
pop
cli
mov
stc
jmp
rorl
sbb
ljmp
mov
in
ljmp
jne
jl
cmp
push
xchg
and
mov
testb
inc
push
js
stos
mov
inc
mov
pop
orl
arpl
outsb
mov
cmp
dec
sbb
dec
sub
jle
imul
inc
stos
mov
or
dec
xor
adc
cmp
pop
or
pusha
mov
adc
pop
fmulp
adc
xchg
int
mov
decb
test
add
push
arpl
ss
adc
mov
dec
int3
add
and
lock
call
or
push
sub
jo
cmp
dec
ljmp
sbb
mov
imul
jl
cmp
sbb
jl
movsb
pop
inc
arpl
addr16
mov
pushf
mov
lahf
mov
rcl
xor
out
into
ret
ficoml
xorl
adc
stos
or
imul
fldenv
jp
cmc
loop
sub
lcall
and
pop
rolb
xor
mov
out
push
inc
out
xor
push
scas
jno
psubb
lods
inc
testb
addr16
daa
mov
lods
xchg
xchg
jp
js
leave
je
add
mov
or
mov
add
dec
jns
aam
xchg
std
clc
aaa
movsl
aad
andl
or
inc
ret
in
data16
jecxz
sahf
mov
imul
xor
mov
mov
pop
push
outsb
jb
sbb
mov
mov
iret
mov
dec
cmpsl
in
inc
push
xor
mov
rdpmc
fisttpl
xchg
loope
or
push
je
andl
cmp
mov
inc
imul
mov
pop
ror
sub
out
in
scas
mov
nop
cmp
sub
adc
and
sbb
gs
into
imul
sbb
pop
sub
push
call
jno
or
call
cld
enter
cld
fucomi
lods
lea
sub
aaa
pop
fsubl
in
push
mov
es
mov
inc
cli
pop
dec
shlb
cli
mov
pop
fidivl
repz
ljmp
mov
xor
sbb
inc
jmp
inc
dec
jne
xor
jmp
or
pop
rol
sub
or
gs
push
mov
xorl
push
mov
clc
mov
notb
fcoml
ror
in
rolb
jp
movsb
aaa
push
push
adc
imulb
cmp
sbb
std
cmp
ljmp
cmc
xchg
mov
lahf
and
arpl
addl
xor
or
xchg
ja
sbb
movsl
adc
cld
jg
ret
xor
adc
inc
stos
dec
and
sbb
sub
popa
enter
mov
lds
add
movsl
jae
xor
dec
jae
js
jns
mov
jg,pn
adc
mov
insw
fsts
ror
add
mov
shr
stos
pusha
and
test
push
cmp
push
or
lea
popa
pop
dec
sub
out
or
fsubrp
cmp
jmp
adc
or
sbb
test
adc
add
push
sbb
dec
out
sbb
mov
or
mov
jne
push
jnp
sub
cmp
mov
xchg
fldl
push
add
out
push
sub
outsl
mov
cmpsb
int3
mov
cmp
xor
jns
xchg
jmp
cltd
or
dec
sahf
repz
imul
les
xor
mov
clc
mov
xlat
mov
sub
pop
in
xor
xor
mov
jmp
mov
mov
cwtl
test
xchg
mov
outsb
incl
enter
daa
mov
add
cmovl
xor
pop
lods
daa
int3
or
mov
cmp
pusha
jbe
pop
pop
cmp
adc
imul
adcb
push
cmp
daa
fdivl
fprem
jp
xchg
jnp
out
adc
push
fcomi
stos
cmp
jbe
fs
mov
jno
fildll
mov
repnz
je
push
lods
imul
into
aam
push
enter
sub
cmp
pop
popf
int3
inc
or
sub
or
sbb
pop
xchg
inc
inc
push
scas
cmp
cmp
ret
dec
xchg
pop
aaa
aam
mov
mov
inc
and
xor
pop
std
repnz
mov
pop
push
ret
xor
add
in
add
xchg
jne
loop
push
xor
mov
jmp
mov
jae
xlat
pushf
pop
add
outsb
mov
mov
outsb
jg
xor
fwait
or
inc
pop
pop
in
mov
out
mov
dec
testb
cmp
or
mov
jmp
insl
adc
mov
jnp
in
dec
or
sub
jo
subl
fists
mov
ljmp
push
jge
or
shrl
test
xor
sub
mov
cmp
or
xchg
adc
mov
int
mov
push
data16
dec
cwtl
mov
jno
cltd
mov
in
cli
lret
sarl
mov
out
imul
xchg
mov
lret
daa
cli
mov
xor
ds
ljmp
stos
js
lea
leave
sbb
repnz
jns
mov
push
jp
mov
clc
pusha
pop
xchg
sbb
push
jbe
mov
push
adc
sbb
mov
pop
sbb
inc
and
in
push
or
adc
pop
cmp
dec
push
cmc
mov
pop
dec
mov
jb
jle
jmp
jnp
aas
cmp
mov
pop
mov
call
ljmp
and
sahf
lret
in
fstl
jecxz
add
push
mov
popf
cmp
add
clc
cmc
das
xor
ret
sub
dec
mov
call
test
cmc
push
mov
inc
out
mov
fildll
imul
push
lret
stos
loope
push
mov
pop
and
add
sbb
imul
repnz
mov
scas
cmovp
cmpsl
je
icebp
pushf
out
mov
out
js
sbb
imul
out
mov
mov
inc
or
shl
xor
cmp
adc
clc
nop
and
stos
jg
cmpsl
push
int
inc
fnstcw
jne
pop
jno
ljmp
mov
mov
pushf
into
lret
jp
movsl
ds
sbb
or
test
mov
je
lcall
in
ja
int3
fdivrl
mov
int
lcall
inc
xor
addl
hlt
sub
xchg
mov
fdivs
push
fs
inc
cld
rolb
hlt
ret
push
test
test
xor
test
cltd
out
loope
pop
call
xchg
stos
pusha
jb
push
imulb
lcall
int
loopne
ret
mov
or
fdivrs
xor
adc
jmp
push
call
jno
inc
inc
push
cli
adc
adc
das
jle
test
mov
les
or
mov
shlb
xor
cmp
lret
sub
push
push
or
sbbb
jmp
rolb
bound
pushf
addl
lds
mov
jecxz
enter
sub
jns
or
cmp
pop
or
hlt
inc
jecxz
jnp
mov
or
int3
xor
in
sub
enter
jecxz
addl
in
jo
xor
sbb
jle
or
jp
or
dec
xor
mov
inc
xor
sbb
lds
hlt
dec
cs
es
mov
sbb
xor
lret
mov
dec
inc
and
sbb
push
sub
in
stc
mov
xchg
sbb
nop
jo
or
mov
mov
add
xchg
fidivl
mov
fstl
cmpsb
fists
mov
pop
jmp
xchg
imul
imul
and
mov
std
data16
daa
dec
sub
imul
aas
out
cmp
imul
dec
arpl
sub
pop
push
das
jmp
mov
mov
dec
xor
daa
xor
lret
addr16
sahf
add
and
push
sub
jae
out
imul
pop
jecxz
xchg
stos
pop
scas
fistpll
dec
out
dec
lods
call
sub
add
mov
notl
push
pushf
xchg
lret
rol
mov
adc
mov
sbb
jns
das
repz
jl
cli
rclb
mov
ss
sbb
pusha
stc
ds
pop
into
inc
dec
popa
ljmp
stos
inc
ljmp
push
pop
pop
loopne
aas
leave
jbe
mov
testb
dec
stos
push
arpl
push
nop
dec
jns
mov
dec
sbb
push
mov
xor
lret
sbb
lret
pop
dec
push
adc
mov
popa
mov
pop
jge
adc
xor
sub
mov
loopne
dec
ja
adc
aaa
cmc
incl
jae
arpl
xchg
ss
and
lret
cwtl
push
aas
rcll
xor
pop
inc
sti
inc
loopne
adc
push
push
dec
call
cli
xchg
dec
adc
or
mov
sub
aaa
jne
mov
int
ja
pop
ret
sub
push
cli
xchg
inc
int3
or
xchg
out
xchg
pop
shll
ficoml
imul
pusha
pop
shl
or
adc
push
pop
lods
adc
popa
arpl
xor
cwtl
xchg
fidivs
mov
mov
lret
loopne
dec
sub
sub
repnz
mov
xor
pop
outsl
jne
mov
pop
aam
mov
xor
lcall
daa
xor
insl
xchg
test
lock
jnp
aad
fisttpl
mov
repz
movsb
xchg
jae
push
dec
cmpsb
dec
push
scas
and
cmc
in
mov
xor
outsb
mov
push
add
in
clc
mov
cmpsl
pop
hlt
sub
int3
aas
imul
ljmp
je
or
gs
hlt
bound
leave
out
test
adc
fcomps
in
mov
and
jg
xchg
and
das
ficomps
sub
or
clc
int3
adc
pop
mov
mov
icebp
mov
xchg
pop
popa
leave
jne
in
inc
stos
xor
push
add
add
xchg
dec
lcall
and
cs
dec
mov
jg
inc
ret
xor
dec
mov
clc
std
ret
arpl
repnz
cwtl
dec
ffree
int3
xor
out
inc
adc
mov
in
stos
push
pop
iret
push
xchg
in
jecxz
icebp
pop
incb
lret
arpl
pop
cmp
int3
cmp
stc
cmp
pop
xchg
stos
mov
inc
pop
repnz
je
jno
mov
imul
roll
push
pop
mov
outsl
aaa
xor
idivl
mov
leave
sbb
bt
cmpsl
push
adc
dec
inc
loop
and
mov
xchg
mov
push
iret
mov
fidivs
mov
xor
mov
mov
mov
aam
cmpsb
fildl
inc
rcr
scas
into
push
loope
mov
mov
in
stos
into
add
ljmp
mov
xor
mov
inc
les
mov
rorb
into
jg
andb
xor
pop
sbb
fdivl
add
pushf
pop
imul
add
xor
lahf
push
or
cltd
cmc
sub
adc
add
jnp
add
jmp
cmp
mov
mov
shll
cltd
enter
xor
insl
jl
dec
clc
pop
in
ret
arpl
add
sub
add
and
mov
testl
add
adc
inc
jmp
jge
inc
lods
lret
pushf
jns
aas
cmp
movsl
ficoms
sahf
test
lds
jecxz
xchg
int
push
mov
mov
sti
push
insb
shr
pop
xchg
lock
add
mov
xchg
lds
pop
inc
ss
dec
cmp
popa
jbe
pop
ret
sub
shrl
jecxz
lret
mov
mov
test
cmp
sbb
dec
out
add
sbb
adc
stc
xchg
mov
das
push
add
lret
outsb
in
add
ljmp
push
jae
dec
sbb
stc
mov
pushf
jae
pop
adc
xchg
cmc
sbb
hlt
mov
xchg
call
imul
daa
dec
scas
lock
leave
stos
add
jne
pop
in
fcmovu
jae
out
xor
pop
cmp
sub
cld
cmpsb
fcmovu
mov
mov
mov
das
rolb
xchg
sahf
xorl
or
scas
push
mov
or
sahf
cmpl
pop
mulb
gs
punpckhdq
je
aaa
lret
shlb
incl
mov
or
mov
test
xchg
pop
cmp
pop
adc
mov
mov
xchg
xchg
push
or
jle
xchg
test
sbb
and
jp
imul
out
cmp
add
push
cmpsb
mov
fsubrp
js
add
mov
rcll
leave
ljmp
call
sar
aaa
jecxz
std
add
pop
scas
rcrl
pop
mov
mov
outsl
stc
mov
mov
and
mov
add
icebp
inc
sub
inc
inc
jmp
sbb
mov
jle
cmp
jecxz
sbb
jmp
add
xchg
out
loop
dec
xor
stos
sbb
pop
adc
pop
jg
lret
adc
rclb
adc
cmpb
in
or
cmp
jg
inc
jp
mov
sub
mov
adc
pop
push
fwait
sub
add
sbb
decb
xor
jno
lock
mov
cmp
mov
sbb
in
jno
add
fstps
inc
inc
in
pop
jg
mov
mull
js
push
xor
out
jno
gs
testb
femms
das
cmp
sub
or
push
cmp
xor
push
or
inc
push
sub
inc
or
sbb
jae
push
jg
int
cmp
xchg
mov
rclb
xor
mov
cmp
and
dec
add
loope
repz
xor
ljmp
push
or
jnp
idivb
mov
add
add
mov
cwtl
xchg
bound
stos
roll
scas
dec
fildl
out
mov
movsl
sbb
mov
and
push
adc
jecxz
into
push
ljmp
xor
ljmp
sbb
push
add
inc
test
fdivrs
pushf
popa
fstpl
cltd
or
cmp
aas
mov
arpl
icebp
mov
faddl
xchg
adc
lret
and
mov
cltd
pop
cmp
or
sub
je
test
mov
xorb
iret
testl
sahf
pop
fnstcw
cli
mov
dec
insl
mov
lds
stc
jp
push
sub
jns
sbb
lods
add
push
push
sub
jle
popf
xchg
pop
mov
push
adc
cmp
daa
int
arpl
or
dec
pop
inc
shrl
xchg
int3
pop
xchg
repz
mov
cli
movsl
sti
cmp
stos
call
je
add
aaa
scas
movsl
push
xor
mov
lret
sbb
jg
sar
js
stos
cmp
fidivrl
pop
mov
mov
jp
iret
insl
add
jl
lahf
rclb
mov
mov
add
out
mov
stc
hlt
divl
mov
and
sub
jnp
mov
rcll
enter
mov
arpl
imul
dec
pop
dec
pop
sti
adc
jns
inc
jne
aam
rcll
or
test
lods
push
cs
xor
push
jp
fwait
rcl
sbb
sti
pop
push
lea
jmp
mov
mov
dec
lods
or
push
mov
or
adc
lods
ss
ljmp
out
or
stos
adc
or
inc
in
jnp
sbb
mov
inc
in
adc
sbb
adc
dec
ss
cwtl
xor
mov
clc
cs
pop
out
jns
jne
dec
xchg
adc
sub
and
in
test
testb
dec
dec
add
fs
cli
add
aas
lds
test
xchg
add
push
lock
adc
dec
and
jmp
es
cs
bnd
ud2
insb
sahf
cmp
adc
inc
int
andl
or
aas
ljmp
fcmovnbe
xor
inc
test
pop
out
pop
inc
fimull
mov
leave
popa
loop
mov
and
shl
stos
pop
lea
pop
sub
cmp
mov
jmp
daa
test
dec
cmp
inc
cmpsb
jno
repnz
in
ds
pop
lea
int3
sbb
xlat
jle
mov
pop
jnp
mov
xor
fdiv
adc
imulb
xor
nop
jb
mov
mov
or
jns
mov
add
xor
xchg
jg
rcrl
or
clc
jne
and
or
sbb
bound
ljmp
dec
sbb
mov
sub
out
mov
adc
filds
out
lret
push
stc
aaa
cmp
insb
or
adc
stos
pop
sub
jae
xchg
int
ljmp
push
pop
fstpt
lret
aad
push
lods
xchg
push
sub
call
std
fisttpll
jnp
sub
or
and
inc
inc
fimull
jb
out
stc
inc
xor
jnp
push
pop
sub
pop
hlt
cld
xchg
xchg
mov
or
ss
push
dec
stos
mov
lret
jmp
cmp
or
js
mov
mov
imull
or
push
or
xchg
push
dec
xchg
lea
stos
inc
imul
adc
shlb
or
mov
mov
aaa
mov
fdiv
test
icebp
movsb
push
sbb
sub
lret
out
xor
and
sbb
mov
es
fwait
lcall
popl
cwtl
xor
lock
ljmp
cli
movsb
or
imul
std
test
fdivrl
push
mov
pop
xor
lret
sub
mov
xchg
sub
xchg
mov
push
shlb
inc
shll
mov
fs
das
or
xor
pushf
ljmp
repnz
push
xorl
jmp
add
adc
ss
sbb
addb
cwtl
das
enter
sti
sbb
adc
pop
das
xlat
push
test
repnz
imul
xor
iret
dec
aas
cs
aas
jg
xchg
jmp
push
mov
add
and
popa
mov
outsb
sbb
mov
iret
imul
stos
cmp
dec
mov
cmp
jle
lods
jmp
addr16
sar
loop
xchg
fadds
add
orb
adc
sbb
cltd
dec
add
mov
cmpsb
or
pop
add
in
jbe
mov
sbb
cltd
xlat
xchg
incb
cmc
sarl
ljmp
test
pop
in
les
inc
imul
leave
insl
stos
int
stos
pop
pop
enter
dec
int3
pop
push
andl
mov
clc
sbb
out
mov
aam
mov
ret
shll
xchg
aaa
sbb
or
xchg
push
cmp
jnp
xchg
or
pusha
jne
cmpsb
imul
cmpsb
insl
add
or
in
ljmp
cs
std
xchg
and
icebp
dec
dec
cmpsb
sbb
loope
ljmp
push
gs
cmpsb
or
roll
dec
mov
fists
jno
sbb
cmpsb
push
scas
out
pop
mov
adc
jno
cld
mov
and
mov
sbb
jp
lea
pop
or
int
test
pushf
or
jns
mov
mov
cmp
xor
xor
into
aas
push
insl
or
jle
rcll
fistl
and
leave
pop
das
mov
or
pushf
lock
xchg
jbe
dec
sbbb
sub
mov
fldl2t
sub
mov
push
or
xor
test
sbb
lds
push
pop
sub
cmp
pop
cmp
stc
adc
and
xchg
inc
inc
xchg
test
outsb
mov
sete
aas
outsl
push
or
pop
cld
sub
pop
jno
xlat
push
jle
gs
lock
jns
hlt
scas
cs
push
sbb
fnstenv
pop
call
mov
mov
sub
sti
jnp
flds
push
xlat
add
gs
cmp
sarb
cli
adcb
stos
repnz
nop
fdivrl
pop
leave
stos
jne
pop
in
push
int3
cs
jno
sbb
inc
stc
dec
lret
rsqrtps
pop
jecxz
sub
mov
scas
test
cli
data16
cmp
xor
sub
push
xor
xor
shrl
stc
outsl
shl
test
mov
es
xor
arpl
cmp
xlat
jnp
mov
sti
mov
add
lods
bound
sti
fildll
jbe
cli
xor
cltd
dec
sbb
push
das
ljmp
sub
add
mov
cmp
cmpsb
add
push
push
pop
xchg
sbb
fdivr
test
jno
sbb
cmp
mov
cmp
push
dec
mov
lea
fbstp
inc
mov
pop
enter
mov
arpl
lds
stc
gs
aad
cmp
repnz
add
daa
mov
pusha
jmp
insl
xor
out
int
xchg
or
test
xlat
js
inc
shrl
arpl
mov
xchg
int
inc
adc
mov
or
lods
push
outsb
lret
test
cmp
popf
sbb
hlt
cs
and
or
jmp
mov
sub
xor
xchg
and
xor
subl
mov
fidivl
pushl
mov
rcrb
hlt
pop
rcrb
pop
push
or
divb
dec
cltd
sub
je
dec
outsl
xlat
inc
or
in
mov
cmp
and
lret
bound
mov
sub
and
adc
in
dec
mov
inc
inc
mov
loopne
incl
cmp
repnz
in
lods
mov
cmp
pop
pop
jle
arpl
jle
sub
or
add
dec
pop
xor
cmp
out
jne
mov
dec
and
cmpsl
pop
es
sub
out
jg
xlat
nop
sub
or
add
mov
imul
mov
ss
cltd
imul
decl
jne
popa
cwtl
mov
jg
cwtl
sub
fisubl
mov
jmp
and
adc
adc
or
ffree
cmp
test
test
dec
mov
lahf
insl
mov
fadd
push
int3
in
cmp
inc
lahf
les
adc
lret
and
roll
jle
into
testb
cmp
test
mov
sbb
mov
cmpsl
or
jecxz
adc
xchg
add
push
and
cltd
adc
mov
cmp
push
cmp
push
push
inc
std
pushf
dec
pop
test
scas
add
jmp
dec
sbb
scas
test
and
test
mov
mov
adc
fdivrs
xor
stc
pop
inc
cmp
inc
sbb
mov
ljmp
and
xor
out
xor
iret
sbb
loopne
cmpsl
push
and
call
ds
icebp
mov
mov
cmp
call
adc
sti
cmpsl
mov
repnz
pushf
aam
adc
arpl
xchg
hlt
outsl
inc
adc
mov
pop
adc
inc
adc
or
aaa
mov
mov
add
lods
lock
or
aaa
sub
inc
push
in
or
ljmp
js
lea
cs
jnp
push
dec
cmp
les
es
and
scas
int3
fildl
or
mov
aas
daa
stos
stos
or
jnp
xor
sub
add
cli
or
loope
mov
lcall
in
jmp
inc
jbe
add
aas
pop
xchg
lret
mov
or
cli
inc
mov
or
addr16
shlb
jbe
xor
or
jge
mov
sbb
sub
aas
cmp
jp
jecxz
mov
in
arpl
subb
add
or
xor
pop
xchg
jns
lret
aad
arpl
ljmp
pop
inc
cmp
fldt
jle
cld
in
lret
dec
pop
orl
out
daa
inc
outsl
insb
push
scas
push
adc
cmpsb
mov
iret
add
mov
das
and
fwait
js
or
jp,pn
testl
sub
pop
pop
repnz
dec
fisubs
shll
mov
or
lock
sub
dec
ja
popa
test
adc
in
pusha
popa
call
or
push
jnp
pop
lcall
inc
or
sbb
add
jns
jns
pushf
sub
push
cwtl
lods
icebp
hlt
adc
jp
sti
fmull
shrb
cmp
cmp
fidivrs
fwait
addr16
adc
push
ret
fsubr
lods
mov
cld
loope
xchg
pop
pop
loopw
sbb
clc
rcll
rol
stos
jae
inc
scas
imul
call
fwait
ljmp
cmp
dec
xor
and
dec
cs
lods
lret
pop
incl
test
pop
lods
stc
loope
cmpsb
pop
or
dec
xchg
addl
mov
jmp
add
sbb
jp
mov
sti
test
cmp
cli
cmpsb
sub
pop
mov
or
cli
cwtl
push
mov
in
mov
leave
pop
lret
daa
enter
nop
icebp
mov
mov
stc
icebp
call
xor
gs
mov
push
sbb
and
mov
jp
dec
push
push
popa
sub
xor
push
imul
push
mov
push
or
adc
ljmp
inc
nop
push
xchg
xor
adc
push
inc
add
ljmp
mov
mov
jnp
cs
sbb
xor
cmp
insl
into
icebp
sahf
lods
cmp
sti
mov
pop
jecxz
jno
xchg
sbb
or
addb
ss
jecxz
mov
adc
sub
jnp
int3
push
mov
sti
call
ljmp
into
movsb
adc
mov
pop
xchg
scas
jns
insl
addl
and
push
add
and
xchg
push
push
fsubrp
imul
dec
mov
fimull
imul
jle
insb
ret
sbb
ds
lret
jge
cmp
push
leave
push
sbb
scas
std
int3
ror
addl
stos
inc
sub
mov
aam
into
test
sahf
cmovnp
jecxz
dec
push
in
adc
mov
idivb
mov
cmp
mov
jnp
cmp
push
aaa
ret
xor
daa
cmp
fadds
dec
adc
push
sub
mov
outsb
dec
sub
adc
sti
pusha
inc
addr16
xor
dec
jp
cmp
pop
mov
insl
leave
mov
aas
mov
mov
pop
mull
jnp
xchg
loop
loopne
out
in
out
cmp
sub
inc
popa
outsb
in
push
test
jge
jb
sub
or
pushf
nop
xlat
sub
inc
ds
mov
je
push
ja
inc
inc
adcb
jecxz
leave
ret
push
ret
inc
mov
push
insl
jae
adc
lret
mov
inc
ret
dec
pop
cmp
subl
mov
popf
xchg
decb
fstpl
dec
adc
sbb
or
aas
xor
cli
ss
fisttpl
xor
cmp
cwtl
lea
nop
mov
outsl
popf
fs
adc
cwtl
pop
jns
mov
or
pop
xor
jo
mov
push
hlt
push
scas
cmpsl
bnd
sub
mov
jl
xlat
mov
xor
ret
ljmp
repnz
push
sbb
sahf
stos
aaa
fsub
push
adc
jns
dec
lret
mov
dec
in
mov
icebp
dec
mov
dec
dec
jbe
jmp
xor
inc
pop
mov
popf
push
decl
xchg
das
jp
sub
sub
jp
fsubr
les
test
out
mov
int
repz
imul
pop
cli
int3
inc
jns,pt
icebp
pushf
push
in
push
cmp
jo
neg
or
cmp
mov
lret
add
bound
mov
or
cmp
add
lods
test
lret
data16
jmp
inc
sbb
ret
mov
mull
cld
xor
fisubrl
cs
xor
mov
cmp
rclb
xchg
sbb
cli
and
jnp
pusha
sbb
or
ljmp
mov
inc
aas
ljmp
push
lret
pop
or
add
sub
push
repnz
push
mov
push
ss
stos
adc
sub
cmpl
adc
enter
xchg
shr
cmp
mov
pop
cmp
int
stos
lods
cmp
stos
jnp
mov
sti
popa
push
push
pop
xor
push
xor
or
lcall
xchg
sub
out
enter
arpl
cld
in
fdiv
sub
sub
sub
jg
xchg
jns
and
test
adc
leave
sbb
add
fldt
in
inc
clc
xor
push
in
lea
sub
inc
adc
aaa
lea
xchg
cli
mov
subl
xchg
sub
lret
or
jnp
xchg
std
mov
adc
mov
enter
in
bound
repz
pop
mov
sbb
sub
and
or
jmp
or
sub
inc
int
iret
lret
aad
sub
jo
rolb
xchg
xchg
or
ss
lret
stos
std
or
stos
gs
out
outsb
inc
fldcw
cwtl
adc
stos
xchg
xlat
and
push
out
cmp
or
xor
sub
sub
jg
sbb
pop
jl
outsb
repz
bound
mov
and
xor
adc
inc
xchg
fstl
pop
lods
sbb
cmp
es
inc
sbb
xlat
sbb
mov
push
or
sub
mov
adc
adc
inc
stos
or
pop
in
mov
adc
fidivrs
adc
mov
sub
aaa
sub
xor
sti
fistl
cli
mov
add
cmp
insb
leave
mov
ficoml
mov
inc
mov
push
mov
jbe
or
mov
push
lods
jb
cmp
add
jbe
jnp
test
xchg
mov
fimuls
gs
lfs
adc
sbb
aas
stos
pop
dec
stos
dec
sub
sbb
xor
sub
inc
dec
dec
push
loop
pop
inc
lods
mov
mov
or
sbb
subb
into
pop
mov
es
out
jp
mov
loop
sub
push
jle
cmp
stc
inc
push
mov
jecxz
push
call
xor
push
jecxz
cmp
fisttpl
dec
cmc
mov
loopne
add
and
cmc
mov
mov
jp
cmp
cs
inc
mov
test
stc
xchg
jns
test
ds
test
push
cmpsb
jmp
pop
mov
inc
out
mov
test
das
push
les
loopne
cmp
xlat
pusha
mov
dec
js
cmp
sti
jmp
jnp
adc
or
jecxz
mov
jnp
pop
cli
repnz
and
inc
jnp
xor
jg
imul
sub
mov
push
ss
jecxz
mov
sub
ficomps
ljmp
pop
or
adc
scas
ja,pt
loop
xchg
or
jmp
pop
xchg
adc
mov
mov
adc
push
xor
out
adc
test
ja
mov
and
pusha
push
jecxz
mov
shr
dec
cmp
lods
xchg
cmp
in
fs
ljmp
fmul
rcll
dec
rorl
sbb
xchg
sbb
repz
sub
dec
inc
outsb
cs
test
push
add
mov
pop
fs
gs
and
pop
mov
jecxz
repnz
add
cltd
fsts
jl
out
popf
arpl
cmc
jns
test
mov
cmp
jl
pop
dec
out
fdivr
jb
dec
inc
decl
cmp
xchg
pop
xorl
mov
xchg
addb
jae
repz
mov
mov
mov
cmp
jo
xchg
icebp
test
mov
push
addr16
sbb
jmp
jnp
cmp
in
data16
or
jns
repz
mov
movsb
pop
jbe
cmp
fisttpl
push
or
rdmsr
jg
das
sub
or
xor
inc
and
push
jnp
push
std
mov
mov
frstor
or
pop
pop
xlat
test
sahf
jmp
push
into
dec
sbb
add
mov
sbb
inc
push
cmpsb
das
std
sbb
mov
jp
pop
int3
cwtl
dec
psubq
add
dec
inc
rolb
daa
push
pop
fs
bound
inc
mov
or
cmpl
mov
ds
dec
fwait
adc
push
popa
jae
or
xor
or
xchg
jns
out
cli
loop
add
sbb
jecxz
jl
ret
addr16
sub
daa
sbb
ja
push
xchg
sub
adc
push
out
es
add
add
pop
push
push
jno
and
das
adc
adc
mov
xchg
adc
sbb
pop
ss
iret
test
rcrb
sub
scas
push
or
inc
lods
xor
or
jno
cli
dec
cmp
adc
inc
xchg
mov
sbb
cmc
xor
dec
int3
add
xor
cld
mov
fstpl
jp
or
or
push
dec
sarb
sub
xor
out
mov
or
cwtl
aaa
sub
mov
jle
jge
in
inc
mov
les
das
stc
sub
mov
jecxz
mov
dec
sbb
inc
or
push
jmp
pop
sbb
pop
and
adc
xchg
clc
or
pop
pop
jmp
mov
stc
pop
data16
pop
popa
ds
es
lret
loop
stc
repnz
lods
mov
mov
mul
mov
add
fs
pop
int
aas
mov
mov
mov
sub
addl
imul
push
cmp
xchg
aam
jmp
mov
pop
lods
mov
adc
notb
xchg
adc
test
imulb
mov
xor
movsb
mov
out
push
les
sbb
inc
lock
sar
mov
pop
xor
mov
xchg
or
int
adc
sti
popa
push
sub
das
lret
lods
mov
fstps
imul
xor
iretw
jp
sub
adc
cmpsl
lret
stos
jecxz
pop
hlt
jno
and
jns
pop
adc
or
dec
mov
mov
dec
fsubs
leave
jl
std
pop
mov
ret
push
ljmp
add
lods
and
add
pop
fildll
lods
clc
in
rolb
je
mov
or
dec
xchg
adc
call
push
jb
into
popa
ds
or
repz
mov
ffreep
addr16
xorb
stos
stos
cld
outsl
pmulhuw
sysret
lret
add
mov
dec
and
movsl
jnp
fildl
xor
jmp
pop
cmp
fiaddl
mov
lock
lahf
ljmp
addr16
xor
imul
pop
mov
into
sub
mov
cs
ljmp
aas
push
cmp
xchg
sub
jbe
cmp
xchg
mov
xchg
add
sti
jb
adc
sub
or
daa
mov
in
aas
out
lahf
sahf
cld
sub
cmp
mov
int3
das
outsl
xor
jmp
das
or
aaa
inc
dec
or
fucomip
xor
jp
sar
loop
mov
jmp
ljmp
dec
mov
dec
imull
inc
cli
jp
in
jmp
ret
incl
sbb
rcrb
ljmp
jbe
imul
mov
xchg
or
adc
lret
shr
cmc
ljmp
push
outsb
pop
ficoml
jmp
lods
stos
ret
stc
bnd
cmp
mov
jnp
push
mov
or
int
mov
mov
sbb
mov
out
jmp
in
lret
out
cmp
push
out
add
or
notb
push
mov
pop
into
test
adc
cs
das
inc
enter
cmc
testb
mov
or
lret
lret
dec
jp
or
or
mov
cs
sahf
mov
jmp
mov
push
sbb
dec
pop
cmp
movsb
bound
mov
movsl
jp
jl
es
cs
sub
sbb
or
scas
mov
out
jnp
into
sar
sbb
mov
sti
mov
lret
out
daa
adc
cmc
imul
orb
fsts
jo
xchg
lods
adc
pop
adc
in
out
pop
push
mov
sub
cmp
dec
scas
sti
call
sti
cs
pop
inc
repnz
aas
or
jbe
cmp
mov
dec
dec
xchg
cmpsb
out
decl
orb
fisttps
fwait
xor
inc
add
daa
shrl
negl
fdivl
test
test
or
push
cmp
adc
sbb
out
add
inc
pop
mov
pop
data16
adc
add
scas
pop
cmp
add
cmp
testl
cs
stc
les
ud0
movsb
pop
cmpsb
cs
mov
ja
test
popa
push
push
and
mov
in
data16
aas
mov
dec
mov
fbld
das
lods
xchg
insb
fdivs
cltd
xchg
cltd
inc
es
mov
test
test
pop
sbb
and
jo
pop
sub
test
mov
out
insb
mov
lock
and
scas
repnz
stos
or
ficoms
or
stc
or
pop
mov
dec
inc
or
es
testb
mov
push
cmpsl
lcall
mov
push
inc
ds
adc
mov
dec
add
sahf
mov
cmp
push
cmp
push
shl
pop
sbb
sbb
jecxz
pop
pop
sub
ss
mov
or
in
sarb
jbe
xor
and
xchg
jne
bound
mov
adc
loope
xor
subl
pop
ret
addl
ljmp
mov
outsl
daa
pop
comiss
ds
inc
jl
push
inc
pop
imul
dec
mov
adcl
lea
or
jns
cli
fimull
cltd
inc
pop
or
out
imul
cmp
pop
mov
fs
sub
arpl
sub
adc
int
das
mov
scas
loop
adc
mov
stos
jb
xor
pop
mov
and
push
sub
xor
sub
mov
fucomp
adc
pop
clc
and
cmp
push
les
lock
cli
mov
or
dec
lcall
pop
hlt
mov
lahf
pop
or
mov
iret
pop
cmp
fs
clc
jmp
popa
rcl
icebp
xchg
jecxz
stc
lea
in
inc
cmp
xor
sarb
leave
jb
cmp
and
push
xlat
dec
xchg
inc
push
imul
cs
dec
out
inc
xor
ds
dec
or
mov
push
cmp
sub
inc
lods
pop
in
lret
dec
int
into
cmpsl
add
mov
inc
jle
sbb
cmp
sbb
inc
mov
inc
in
xor
xor
jns
or
ljmp
popa
adc
jae
sbb
rcr
mov
fstl
mov
pop
push
repnz
mov
and
mov
or
mov
cmp
enter
lock
imul
inc
sub
cld
testb
sbb
inc
clc
lds
sub
and
repnz
or
xchg
mov
orl
cmp
jnp
push
sub
aam
add
idivl
out
mov
enter
in
xchg
or
dec
das
adc
sbb
xchg
xor
dec
call
lret
or
mov
clc
add
jnp
icebp
jns
fcomip
lods
out
sub
xchg
cmpb
mov
mov
xchg
lods
fsubs
push
data16
stos
incl
mov
aaa
in
push
inc
or
xchg
ljmp
orb
adc
pop
testl
sbb
add
mov
xor
lea
ficoml
sbb
stos
and
divb
xchg
fists
mov
sub
or
out
xor
sbb
into
xor
or
mov
mov
xor
mov
sub
mov
in
in
pop
adc
mov
inc
lea
dec
adc
push
cmp
jnp
xchg
cs
mov
cmp
repz
iret
ds
in
ret
mov
divb
jmp
daa
mov
push
cli
jg
lock
push
call
sti
aas
hlt
push
adc
lcall
hlt
loopne
xchg
mov
pushl
lret
int3
dec
push
add
sub
sbb
cmpsl
pushf
stc
shl
out
sub
cmc
imul
test
insl
call
cmpsb
test
es
rcrl
ffree
fdivr
cmp
jmp
inc
mov
cmpl
xchg
jmp
or
jg
pop
or
cmp
push
cmp
mov
push
mov
adc
mov
cmp
dec
xor
inc
je
pop
jbe
add
rclb
rclb
fldcw
inc
es
xchg
ljmp
fisubs
rcl
mov
lcall
aas
dec
mov
subb
repnz
lret
ljmp
imul
andl
add
sbb
sub
lea
add
mov
into
or
mov
mov
bound
jbe
pop
sub
adc
jl
mov
sub
aas
adc
push
push
sub
jp
cmp
cmp
sub
lret
loope
mov
jb
fisubs
push
adc
testb
pop
data16
sarl
in
push
mov
xchg
test
aaa
sub
inc
sub
mov
adc
push
outsl
into
mov
mov
les
mov
jo
fsubrs
lods
leave
xlat
sti
scas
or
mov
test
fldt
or
lret
sub
bound
pop
aas
xchg
outsb
adc
lea
pop
adc
ds
or
sarb
or
and
ljmp
or
add
ja
mov
pop
jae
lock
lahf
decl
aas
lcall
xlat
mov
adc
mov
cmpsl
mov
call
std
rol
clc
fsubrp
rcl
add
nop
and
mov
out
cmp
ljmp
xor
xor
add
sub
dec
xchg
call
sub
dec
or
or
sti
mov
sub
xor
add
adc
aad
or
sbb
pop
test
enter
loopne
lea
out
mov
dec
cmp
test
adc
ret
ss
das
ja
pop
in
xor
cmp
dec
lea
int3
mov
stos
rclb
imulb
leave
pop
repnz
cmp
nop
push
pop
sbb
push
xor
aas
insb
lods
dec
push
leave
jbe
ss
rcrl
push
scas
divb
xchg
popf
adc
jg
jb
lret
into
adc
movsb
shl
xlat
jle
jo
adc
xchg
cli
mov
xchg
pop
mov
in
cli
inc
add
or
dec
loop
xchg
dec
in
rol
das
pusha
cmpsl
inc
out
xorl
xchg
mov
cmp
mov
mov
mov
out
jae
xchg
cltd
jmp
arpl
in
sbb
shrl
dec
cld
fbstp
outsl
mov
sub
sbb
fdiv
sub
and
add
cmc
push
inc
cltd
out
xchg
push
mov
in
mov
cmp
dec
ss
movsl
sbb
jne
insl
or
hlt
sub
xor
push
mull
sbb
scas
test
outsb
rorl
or
stc
int3
dec
mov
mov
push
push
mov
out
ret
inc
mov
ljmp
ret
cwtl
push
out
dec
jmp
clc
shr
js
das
inc
push
jmp
in
push
test
push
xchg
sahf
das
fidivrl
or
sub
loopne
js
cmp
sbb
int
sbb
or
pop
cmp
paddusb
mov
fbld
mov
xor
fildll
sub
into
pushl
inc
cli
inc
inc
push
nop
fsub
arpl
and
add
in
pop
stos
or
ljmp
lret
mov
out
test
out
jp
push
into
shrb
bound
scas
jnp
jge
rorb
and
jle
fs
push
mov
jg
fnstsw
mov
add
or
push
fucomi
and
stos
fisubrl
sbb
xor
add
cmp
sub
sub
jo
insb
scas
rcll
leave
push
sub
pop
stos
xchg
cmp
cmp
pop
add
xchg
fs
jg
or
dec
mov
out
adc
pop
sbb
lds
out
icebp
nop
jnp
lret
push
sub
mov
xorl
or
stos
sub
gs
push
mov
loope
xchg
ret
call
inc
sbb
fcomps
push
call
call
inc
or
lods
iret
sub
pushf
cmp
sub
dec
sbb
or
pop
cld
cmpb
jmp
outsl
bswap
jb
shrb
sahf
cmpsl
add
fcomps
mov
aas
mov
fidivrl
bound
jnp
pop
test
enter
lea
nop
mov
dec
cmp
add
xor
out
jmp
dec
dec
pop
xor
cmc
adc
pop
stos
cmp
mov
adc
loop
jb
cmpsb
stos
ljmp
mov
jmp
mov
jmp
outsl
fidivrl
push
arpl
call
dec
sub
and
inc
notl
bound
sbb
mov
test
sbb
popf
scas
add
xchg
ljmp
in
jecxz
dec
stc
imul
dec
push
pop
mov
pop
add
mov
imul
out
loope
mov
adcb
xor
out
daa
pop
xchg
mov
dec
lret
push
subl
jg
testb
xchg
or
inc
fdivrl
pop
add
or
arpl
out
fs
lret
mov
sub
subb
repnz
test
ficomps
or
add
mov
in
mov
or
fwait
and
test
repnz
out
jno
cmp
movzwl
mov
pop
ljmp
imul
and
push
fildll
or
in
jecxz
dec
ss
out
jno
cmp
mov
dec
mov
inc
pop
outsb
add
out
xor
cmp
xchg
xchg
ds
ljmp
inc
div
faddl
outsb
popa
mov
fs
sub
orb
popf
imul
mov
mov
sbb
shr
dec
test
mov
mov
dec
aaa
js
cs
shlb
cmp
adc
add
sub
pop
push
aam
xchg
movsl
shrb
ljmp
fdivrl
stc
push
sub
jno
push
jp
daa
andl
add
mov
xchg
shll
aaa
arpl
repz
add
dec
xchg
test
pop
cmp
mov
ret
or
and
xchg
sbb
lds
pop
jmp
mov
arpl
jns
mov
aas
pop
xor
fists
cmp
call
mov
fsubrp
sar
fsub
lcall
mov
lcall
dec
fs
push
push
lret
mov
push
or
jg
cmp
in
gs
xchg
push
jecxz
mov
pop
ljmp
outsb
sub
push
iret
xchg
daa
lds
push
cmpsb
outsb
filds
mov
push
lods
mov
scas
cmp
mov
stos
arpl
test
pop
enter
sub
ljmp
js
sbb
rcrl
orl
or
test
lds
fisttpl
int3
mov
xor
or
in
jmp
jo
cmp
imul
push
lret
mov
stos
mov
insb
jl
cmp
mov
and
and
xchg
stc
sbb
cwtl
not
test
in
aad
push
push
orl
inc
sub
sub
cltd
aas
fcoml
mov
or
or
addr16
xchg
xor
push
gs
mov
pushf
lret
subl
xchg
sbb
psubq
data16
xchg
xor
sub
ljmp
sbb
test
rcl
push
or
out
or
cmp
xchg
cmova
or
pop
ds
pop
add
xchg
mov
hlt
jo
repnz
enter
mov
test
adc
test
insb
movsb
inc
adc
push
cmp
add
leave
lods
test
adc
sahf
mov
fmuls
in
hlt
aad
jo
jmp
sarl
sahf
pop
mov
cmp
adc
dec
push
jmp
xchg
lret
or
push
jp
push
adc
cmp
aaa
mov
pushl
out
out
xor
mov
and
pop
scas
movsl
jne
sub
lret
pop
or
loop
jl
push
pop
xor
xchg
ja
add
jg
push
lea
add
push
das
insb
nop
inc
cmp
push
out
pop
mov
aam
popa
or
push
mov
int3
jmp
lret
inc
lds
mov
ds
push
int3
hlt
cmpb
int
js
push
push
mov
movsl
push
or
pop
mov
add
ret
sub
push
cmpl
push
push
sbb
add
cmovns
int
sbb
sbb
loopne
sub
or
xchg
xor
xchg
pop
cmpsb
mov
xor
cmp
mov
mov
movsl
int3
gs
adc
into
repz
mov
inc
sahf
mov
push
jp
repnz
push
push
xchg
inc
sub
cmp
mov
push
iret
scas
xchg
enter
lret
shlb
push
adc
mov
arpl
mov
stos
lods
fwait
test
xchg
xchg
push
mov
push
cmp
pusha
mov
repz
and
cmp
std
movb
popa
fistpl
jg
ficoms
jno
aaa
cmp
or
push
inc
sub
jg
aam
cs
jb,pt
mov
in
cmpsb
or
stos
loope
fidivrl
mov
repnz
sub
xchg
add
out
jg
mov
test
or
cmp
call
in
mov
fs
pusha
cmp
mov
ljmp
inc
test
pop
and
jge
xchg
mov
jp
push
sbb
inc
stos
enter
jge
mov
loopne
ja
sarb
cmp
mov
test
vmread
push
cmpsb
jnp
add
insb
cmp
data16
outsb
mov
push
pop
stos
xlat
ss
adc
stc
push
cmp
mov
inc
icebp
add
ljmp
orb
sbb
mov
push
pop
in
pop
int3
scas
enter
xchg
imul
push
cmp
out
mov
dec
cmp
out
mov
push
rorb
cmp
mov
xchg
jb
jp
cmp
inc
mov
dec
outsb
es
push
jl
test
stos
notb
outsb
repnz
dec
mov
cmp
xor
das
les
push
cmp
or
sbb
rcrl
into
jo
adc
cli
sbb
repnz
mov
jmp
push
jbe
adc
push
cmpsb
dec
mov
out
les
cmovb
jo
pop
push
cmp
xchg
lret
stos
stos
sub
ret
lcall
push
push
mov
loopne
or
mov
dec
or
lret
or
adc
mov
adc
or
mov
push
ja
sub
into
cmp
sub
mov
push
je
push
lret
clc
jg
sbb
pop
push
xchg
mov
sahf
hlt
xor
gs
int
clc
jl
rorl
or
js
jmp
pop
sub
rclb
pop
cmp
ret
outsb
or
sub
jmp
or
mov
ljmp
sti
jmp
pop
or
inc
out
pop
stos
jg
sub
movsb
cwtl
int
xchg
out
jmp
sbb
sub
cmpsb
mov
mov
call
es
rorl
mov
enter
lret
in
imul
cmp
js
adc
push
ljmp
aaa
pop
mov
push
fildl
jns
call
or
xrelease
pop
lea
sbb
or
out
or
sub
sbb
xchg
into
fsub
push
mov
imul
fnstenv
adc
jbe
testl
and
imull
push
rep
imul
call
jnp
cli
imul
in
and
mov
sub
stos
sti
mov
xchg
xor
scas
pop
push
les
out
out
addl
mov
mov
adc
push
jl
lods
pop
fildll
cmp
out
jbe
dec
fdivrl
push
insl
xchg
xchg
adc
mov
stos
lds
mov
cmp
cli
xchg
sub
cwtl
xchg
mov
cld
sub
pop
mov
push
scas
jmp
leave
cld
or
push
adc
movsb
mov
mov
xor
roll
and
cli
xor
inc
ss
orb
and
imul
lcall
jg
ret
sbb
xor
popa
push
loopne
cvtps2pi
filds
xor
adc
dec
out
mov
mov
out
sbb
sarl
dec
mov
leave
xchg
sbb
add
lret
inc
in
sbb
jl
aaa
or
lret
inc
push
fisttpl
fwait
dec
fildll
outsb
pop
jne
push
mov
dec
sbb
push
movsb
rclb
pop
sbb
into
ljmp
hlt
stos
add
lea
and
fcoml
popf
int3
push
popf
jp
push
xchg
xchg
mov
mov
sbb
push
inc
sti
cmp
mov
push
cmp
push
push
lret
insl
xor
mov
inc
sub
inc
stos
inc
into
mov
pop
mov
enter
xor
iret
stos
cmp
bound
out
test
out
outsb
xlat
push
aas
mov
mov
outsb
scas
xlat
or
cmp
xchg
jb
adc
jmp
sub
xlat
stos
push
fisttpll
les
add
add
sub
mov
popf
fs
nop
negb
jl
in
bound
sub
push
push
cmpsb
ss
jnp
sub
and
or
rcrb
mov
addr16
stos
jo
imul
lcall
or
xchg
mov
adc
jmp
fmul
mov
addr16
pop
or
shl
leave
sbb
fwait
ljmp
out
mov
inc
add
push
cltd
pop
call
cmpsl
test
lods
lcall
jecxz
rcrb
sub
xchg
mov
lods
idivb
mov
inc
cli
xchg
out
mov
jecxz
repnz
push
sub
cmp
loopne
xor
or
inc
fmul
mov
push
ficomps
sub
or
xchg
sbb
cmp
push
jns
sbb
or
push
aas
jns
gs
or
lea
mov
jmp
pop
into
sbb
push
sti
jg
adcb
add
cmp
dec
cs
les
bound
fsubr
jb
in
mov
push
lret
addr16
mov
pushf
jnp
and
pop
cltd
movsl
jae
pop
cmp
xor
xor
xchg
shll
cmp
push
and
sbbl
jp
xor
xor
mov
stos
icebp
push
jp
daa
in
sub
fsts
fs
lcall
repz
inc
fmull
adc
js
enter
sub
andl
in
adc
in
rcrb
xor
cli
adc
mov
addr16
push
sub
adc
push
repnz
sbb
lea
iret
ror
inc
mov
dec
fs
pop
rcll
es
cmp
push
pop
mov
pop
cmp
push
nop
jno
jp
pop
and
fwait
inc
out
divb
popf
adc
push
pop
pusha
inc
mov
loope
ljmp
sbb
add
scas
cmp
outsb
hlt
pop
push
and
ljmp
insb
and
pop
test
mov
xchg
insb
int3
pop
jns
data16
jp
popa
sbb
dec
mov
pop
push
cmc
flds
inc
movsb
lret
cld
insl
dec
or
pop
cmp
test
mov
enter
arpl
mov
add
dec
mov
iret
pop
mov
imul
add
or
nop
mov
push
sub
aaa
je
dec
inc
or
xchg
pushf
pop
lret
xor
sbb
idivl
xorb
in
mov
xor
xor
cmc
xor
jp
sub
fsubrs
lods
popa
data16
out
mov
add
xchg
mov
pop
std
dec
enter
das
sub
cli
pop
andb
xchg
fimuls
mov
lds
mov
js
and
mov
mov
and
loopne
lcall
scas
pushf
icebp
arpl
inc
loope
ficoml
push
aas
xor
hlt
add
pop
shl
or
xchg
mov
dec
dec
jbe
sub
dec
flds
cs
add
lret
and
lahf
push
or
add
enter
inc
xchg
mov
aas
mov
mov
shlb
test
push
mov
pop
into
imul
and
das
cs
pop
fwait
adc
imul
mov
das
aas
stos
rorl
adc
out
mov
and
and
test
cmp
mov
push
cli
and
jmp
pop
lock
outsl
xadd
fdiv
inc
ds
xor
cmp
cmp
jnp
dec
lock
cmp
movsb
cs
aas
xchg
inc
cmpsb
jg
xchg
into
add
lock
daa
repnz
pop
sbb
mov
jmp
xchg
inc
fiaddl
jp
movsl
leave
xor
xor
subl
and
inc
movsb
outsb
in
cs
loop
lret
ret
pop
jns
mov
push
outsb
pushf
jnp
adc
lods
xchg
pushl
mov
inc
mov
aaa
mov
xchg
xor
push
mov
iret
cli
fidivrs
mov
cltd
dec
mov
jmp
mov
test
cs
lret
jae
stos
fisttpll
les
sub
xchg
jg
ret
lock
clc
negb
jnp
lds
stc
call
clc
xchg
sub
cli
jp
sti
test
mov
cmp
out
je
adc
loop
sub
push
jnp
sahf
mov
ds
in
ret
lret
out
mov
push
inc
xchg
jb
pop
sbb
out
aad
cld
cmovl
lret
popf
shl
outsl
shrl
jnp
sub
cmp
outsl
es
fimuls
lret
inc
call
pop
outsb
stos
mov
pushf
xchg
mov
pop
sahf
xor
ljmp
iret
ret
outsl
push
popa
mov
add
lds
fwait
mov
mov
outsb
lea
testl
in
jbe
movsl
adc
lret
scas
mov
stc
and
cmpl
movsb
fisubs
aaa
lret
mov
fs
sbb
pop
or
pop
sub
add
ljmp
inc
adc
mov
pushf
jns
and
xchg
sbb
or
orb
fwait
int
pop
mov
int3
rorl
or
outsb
ret
in
lret
sbb
push
stos
loopne
into
lea
in
leave
mov
ret
imul
stos
push
xchg
mov
rclb
jb
mov
dec
mov
or
dec
cmp
pop
push
jnp
mov
sub
aad
or
rcll
push
jmp
out
sbb
dec
in
or
mov
ret
es
push
ret
xchg
xor
stos
jp
cmp
xor
fcmovnu
in
push
mov
fldpi
aam
outsb
mov
jl
fldt
dec
hlt
jns
dec
mov
rorl
push
aas
and
mov
jno
cmpsl
add
push
xchg
cli
dec
imul
sub
test
or
imul
int3
outsb
dec
push
xor
dec
imul
scas
rorb
mov
jno
pop
sbb
sbb
into
loope
push
mov
outsb
or
jno
imul
and
ljmp
sub
push
fldt
out
das
dec
rsqrtps
sbb
sub
or
cwtl
mov
das
jbe
ljmp
cmp
scas
imul
sbb
push
out
lret
pop
mov
bnd
data16
imul
adc
add
syscall
lock
iret
jle
lcall
fs
in
das
int3
or
xchg
gs
mov
stos
cmp
lock
or
imul
or
repnz
ljmp
lods
lea
jle
in
push
pop
ljmp
arpl
lret
cmpsb
or
jecxz
lcall
mov
mov
push
aam
cmc
decb
or
hlt
insl
sbb
pmuludq
add
leave
sti
jb
cld
push
btc
sbb
or
dec
int3
cld
inc
cmp
das
jbe
gs
ljmp
pop
add
ljmp
fwait
push
or
jbe
pop
inc
mov
xchg
dec
or
jmp
mov
or
iret
aad
mov
dec
push
std
mov
dec
dec
cmp
ret
stos
das
cmp
mov
gs
xor
push
stos
mov
arpl
jg
or
xlat
call
imul
jnp
aas
lret
iret
js
cmpsl
or
sbb
jnp
and
js
xor
dec
push
lea
xchg
hlt
push
xchg
ret
cmp
mulb
add
sbb
out
lret
dec
rolb
adc
jo
pop
cmp
stos
dec
push
inc
pop
push
fnstenv
xchg
xchg
cmp
dec
dec
sbb
jns
scas
mov
rol
pop
test
gs
and
mov
sbb
out
xor
sbb
sarl
rorl
out
movl
repnz
mov
mov
adc
jecxz
xor
mov
xchg
mov
mov
imul
cmp
icebp
nop
dec
adc
cltd
or
js
push
xchg
pop
jecxz
add
jg,pn
jbe
dec
lock
ret
sub
mov
lret
dec
dec
or
mov
cs
popa
push
add
out
rorb
es
aam
cmp
jecxz
sub
adc
cmp
cmp
adc
jg
add
xor
loop
sub
test
pop
mov
mov
sub
faddl
sbb
out
or
int3
lret
dec
in
push
inc
mov
sbb
adc
cwtl
sbb
inc
sbb
orb
int3
or
cld
in
and
inc
test
pop
mov
inc
mov
icebp
jmp
and
dec
adc
fisttpl
int3
dec
dec
and
stos
ret
loop
call
sub
lret
push
and
fldcw
push
popf
or
adc
and
insb
stos
jne
int3
int
sar
test
sbb
dec
push
inc
adc
test
hlt
icebp
outsl
and
outsb
enter
js
cmp
test
hlt
aam
jbe
outsb
imul
or
scas
repz
js
xchg
sbb
jp
bound
shrl
push
aas
stos
sahf
test
xor
scas
ljmp
lea
and
lds
fwait
insl
mov
mov
mov
push
and
mov
rorl
push
mov
das
pop
or
inc
mov
cwtl
pop
ret
fadd
movb
push
lret
stc
icebp
ja
pop
or
inc
enter
cmp
xor
mov
cwtl
inc
sub
ljmp
mov
lret
xchg
sbb
int
jmp
pop
sbb
loope
addr16
mov
ljmp
mov
iret
jae
sub
or
into
mov
push
sbb
add
stos
or
cli
jo
pop
add
loope
push
mov
ret
cmpsl
sub
push
mov
popf
lods
int3
or
jo
mov
push
iret
lock
pslld
jbe
scas
addr16
mov
outsl
mov
test
sbb
loopne
lock
jp
pushf
outsb
push
sub
and
ficomps
mov
jg
adc
and
jne
outsb
imulb
fidivrl
pop
movsb
call
sub
cmpsb
outsb
rclb
mov
inc
aam
stos
cmp
pop
in
lret
pop
loop
push
mov
lods
xchg
or
pop
gs
sub
jp
fwait
sarb
inc
mov
sbb
daa
testb
xchg
mov
loop
cmp
gs
dec
add
cli
in
test
arpl
testl
pop
cld
sub
mov
mov
inc
sub
fmuls
mov
jb
fistpll
pop
xchg
jno
sahf
sbbl
out
mov
mov
mov
push
and
and
imul
jbe
push
sub
dec
sbb
fdivs
je
leave
adc
lea
push
xlat
js
lods
mov
jmp
xor
fs
das
push
jbe
decl
sbbl
and
fwait
add
push
cld
movsb
mov
lea
xchg
push
cmp
xor
pop
test
jnp
inc
adc
dec
push
and
and
out
dec
sbb
xorl
jge
clc
pop
addl
or
cmp
filds
mov
jl
fwait
inc
ret
mov
jecxz
sub
lcall
adc
add
dec
rclb
push
jle
jecxz
testl
mov
das
mov
pop
xor
xchg
in
sbb
das
scas
sbb
mov
xor
jg
xchg
xchg
scas
sbb
mov
and
push
lret
mov
mov
testl
sbb
jecxz
inc
hlt
iret
xor
dec
imul
scas
jae
ds
add
scas
mov
add
imul
sbb
out
popa
sbb
mov
lock
xor
pusha
jbe
and
shlb
pushf
push
pop
xor
mov
ret
mov
test
jns
icebp
or
mov
ds
mov
push
aas
add
sti
iret
lret
ficoms
sbb
sbb
add
push
ja
test
je
jge
dec
gs
pop
push
mov
loopne
das
sbb
dec
mov
push
outsb
add
stos
push
addl
sti
iret
mov
cmp
movsl
sbb
push
icebp
or
sbb
adc
mov
scas
std
fs
jb
imul
push
dec
sbb
and
incb
imul
jbe
imull
mov
push
jne
push
push
sub
mov
out
xchg
fisttpl
dec
ret
test
cwtl
push
mov
enter
cmp
imul
mov
ja
jbe
cs
cmpsl
mov
cmp
leave
push
enter
in
in
dec
ss
dec
or
imull
aas
or
ret
aaa
sub
pop
sub
lea
and
iret
dec
sbb
push
decl
add
and
sbb
push
lahf
or
repnz
mov
lret
div
adc
lret
lahf
jmp
out
aaa
in
lcall
mov
or
mov
add
dec
or
in
iret
sub
adc
outsb
cld
push
int3
scas
in
js
push
in
mov
cld
bound
push
mov
aaa
jb
push
mov
out
shll
enter
cs
stc
subb
sub
or
mov
bound
icebp
add
fs
test
int
stc
shr
or
jl
js
jnp
add
rorb
lcall
pop
in
cmp
ss
inc
cmp
pop
pusha
xlat
sbb
lret
ret
pop
add
jge
outsb
call
push
mov
fs
adc
in
movsb
or
mov
nop
sbb
ficoms
dec
jge
adc
insb
add
mov
add
addl
cmp
mov
add
lret
push
mov
mov
test
adc
jle
push
xor
in
popa
inc
cli
pop
in
aaa
pop
cmp
sub
mov
test
mov
adc
mov
or
std
rclb
sbb
out
scas
pusha
movb
jg
push
out
jl
cltd
decb
insl
cli
mov
push
lret
add
aam
dec
dec
mov
pop
idivl
pop
fidivrl
or
fisubs
stos
lahf
inc
jae
sub
dec
mov
adc
dec
sbb
stos
or
clc
sub
bound
loopne
stos
dec
xchg
xchg
xor
imul
xor
sub
sbb
push
fstpl
adc
jp
shrb
mov
aaa
mov
mov
scas
push
push
lock
sahf
dec
shl
ljmp
loop
test
mov
adcl
in
inc
lea
push
inc
imul
xlat
outsl
into
pop
lock
mov
lea
inc
cmp
out
mov
jmp
in
dec
jge
dec
lea
daa
cs
enter
pop
pop
mov
test
or
lret
gs
cmpsl
cltd
jmp
clc
cmp
sub
and
loopne
mov
out
in
daa
push
cmp
sbb
mov
jmp
aas
xor
insb
ss
sub
idiv
fwait
push
lea
dec
dec
pusha
fsubrs
lds
push
xchg
hlt
daa
ljmp
cld
call
pop
push
mov
dec
xchg
xchg
lea
cmp
lcall
xchg
cmp
mov
fisubrl
scas
push
imul
and
daa
jge
pop
aad
adc
xor
jg
mov
cltd
mov
sub
andl
loop
notl
imul
cs
push
ds
inc
mov
es
push
sbb
xchg
aam
rcrb
pop
cmp
add
xchg
pop
cmp
xchg
add
fisubrl
pop
mov
jbe
sbb
in
xchg
pop
inc
je
lret
mov
das
sub
lret
mov
or
mov
jp
mov
adc
mov
or
jle
aas
clc
adc
loop
fimuls
mov
push
mov
fistpll
lahf
pop
xor
mov
testb
fdivl
pusha
pop
sub
push
xor
mov
cmp
repz
fldenv
inc
push
mov
sbb
popa
mov
por
xchg
cmp
sub
add
arpl
inc
mov
das
mov
pop
add
cmp
gs
adc
mov
ljmp
inc
insl
pop
mov
sub
pop
cli
popf
dec
in
adc
push
hlt
je
push
in
jge
jne
cli
mov
adc
lock
fdivrp
lret
popa
sbb
inc
pop
jnp
or
in
addl
xor
dec
or
in
dec
out
aaa
fistpl
pop
jne
push
adc
push
stos
popl
xor
cmp
fwait
sbb
push
out
or
adc
xchg
adc
mov
xchg
std
sub
shlb
push
cmp
loopne
or
sub
loopne
ret
shrl
push
jnp
sub
lods
inc
imul
jle
pop
sbb
mov
cmpsb
bound
or
lods
icebp
mov
sub
cmpsb
or
rcrl
mov
or
or
out
mov
aas
mov
sti
insl
cmc
inc
arpl
mov
sub
repz
incl
push
stos
repnz
cmp
sbb
pusha
and
ljmp
jno
lea
pop
std
jecxz
adc
xorl
or
cmp
push
inc
or
dec
ljmp
out
dec
mov
into
push
mov
xchg
mov
lret
mov
popf
jbe
movzwl
push
mov
into
rcrl
mov
in
push
and
or
sbb
push
adc
insl
dec
dec
fadd
inc
or
push
jns
test
ljmp
inc
push
jmp
jo
pusha
and
test
daa
aam
jbe
outsb
loopne
push
mov
loopne
ret
subl
sbb
lret
out
mov
push
fwait
les
cmp
and
popf
or
das
bound
pop
adc
mov
or
push
adc
out
push
mov
es
das
jno
fsubrl
int
sbb
mov
test
mov
into
out
cmp
and
pop
mov
enter
cmpsb
sub
les
int
jmp
test
daa
push
or
bound
int3
inc
scas
pop
mov
pop
imul
or
mov
insb
int3
or
xchg
dec
xchg
sbb
jle
ljmp
mov
mov
mov
icebp
and
popf
jmp
jmp
sbb
lret
jo
out
outsl
nop
lods
pop
imul
scas
mov
lods
mov
push
sub
dec
mov
pop
sbb
or
daa
ret
mov
out
xchg
sub
ret
or
inc
das
ret
repz
push
mov
lahf
ljmp
add
aas
mov
adc
js
test
pop
jge,pn
imul
pop
cmc
push
sub
call
stos
mov
loopne
cmpsb
mov
mov
mov
dec
popf
add
add
fs
cmp
dec
push
scas
inc
and
std
popa
stos
ljmp
mov
push
in
hlt
dec
or
push
into
dec
out
inc
fisttpl
mov
push
inc
add
notb
loop
sbb
sub
dec
mov
sti
arpl
or
dec
or
adc
nop
and
cli
or
add
ljmp
xor
pop
hlt
imul
inc
dec
repnz
nop
cmp
push
jo
cs
fsubrs
js
sub
mov
inc
or
shrb
or
ljmp
scas
inc
or
sub
sub
in
push
test
inc
ljmp
push
cmp
push
sub
mov
push
in
mov
mov
or
inc
leave
dec
mov
adcl
or
mov
mov
outsb
xchg
lds
ljmp
or
mov
clc
mov
xor
sub
cmp
jb
inc
push
jae
or
in
imul
dec
push
jnp
push
mov
or
or
cmp
rcll
cld
or
mov
ret
push
mov
push
cmp
jg
sbb
test
cli
cmp
addl
and
sub
out
mov
mov
cli
xor
jbe,pn
mov
gs
dec
mov
adc
sub
cmp
or
jmp
fadd
cmp
adc
mov
push
cmp
faddl
nop
add
out
sub
lcall
int3
out
push
in
xor
scas
mov
pop
lods
repz
sub
adc
xchg
pushf
gs
test
out
sbb
or
outsb
pop
ss
sbb
adc
adc
cli
fs
gs
daa
mov
inc
js
int3
mov
bound
push
test
jbe
imul
cmp
leave
sub
xchg
lea
mov
mov
sbb
mov
mov
push
enter
or
jnp
jge
fwait
jnp
lret
adc
mov
loopne
repz
jbe
and
fwait
sub
xchg
pop
sbb
mov
and
adc
push
test
or
in
jg
mov
mov
imul
nop
stos
mov
xor
push
jmp
sarl
imul
lods
mov
mov
mov
sub
aaa
sbb
sarl
dec
cmp
daa
popf
xchg
mov
jecxz,pt
shr
test
mov
pop
loope
repnz
xor
das
fcoms
repnz
or
lret
test
hlt
sub
sbb
push
pop
es
mov
shrl
test
pop
loop
dec
out
sbbl
and
add
jb
or
stos
aaa
push
xchg
cmc
add
inc
xor
xor
aad
leave
call
dec
xchg
out
sti
sub
adc
xor
sbb
dec
xchg
dec
xor
mul
adc
out
sub
ja
adc
xchg
ss
inc
loopne
bnd
cli
loop
adc
push
das
or
jge
xchg
inc
mov
inc
inc
add
pop
imul
rorb
cs
add
test
inc
lods
add
aam
and
jmp
out
or
test
mov
push
sbb
arpl
sahf
xchg
popf
test
lea
and
xchg
mov
xor
jmp
fistpl
mov
xchg
xor
aaa
mov
xchg
fdivrl
iret
ret
sbb
inc
into
adc
jle
mov
out
sahf
add
mov
pop
repz
jmp
out
xchg
mov
ljmp
or
js
push
in
imul
stos
cmp
lret
jmp
and
xor
cmp
gs
test
adc
inc
mov
pop
ficomps
test
pop
inc
push
or
sbbl
cli
ja
subl
jg
ret
jo
pop
or
jae
adc
xchg
enter
mov
loopne
or
loop
fdivrp
sub
or
adc
lcall
sti
mov
push
test
mov
xor
mov
cli
ja
decl
fnstcw
adc
xchg
movsl
insb
movq
jb
sbb
jae
sub
xchg
adc
pop
scas
sub
mov
mov
mov
mov
in
inc
or
das
out
sub
mov
jmp
jecxz
xor
jg
pop
iret
lods
jb
mov
out
jp
gs
vorps
push
loopne
rol
xchg
lock
jmp
ljmp
loop
lods
clc
xor
jle
mov
jg
push
cwtl
mov
mov
cmp
jnp
decb
pop
arpl
into
or
pop
mov
or
push
mov
pushf
iret
adc
jo
arpl
adc
ja
and
jae
push
jbe
mov
pop
push
and
call
cmpsb
pop
cmp
das
fisubrl
inc
fsubrs
sbb
pop
lea
scas
jp
sub
cmp
mov
aas
or
and
arpl
repnz
jle
repnz
mov
pop
repnz
es
sub
sbb
subl
xchg
push
cmp
into
cld
adc
into
sbb
mov
icebp
push
in
jecxz
sahf
fildll
and
xor
cmpsb
mov
and
jp
into
jecxz,pn
dec
shll
xor
sub
dec
xlat
push
sub
lods
xor
gs
adc
or
inc
adc
loop
cmpsl
sbbl
test
jne
adc
imul
adc
insl
dec
cmpsb
into
mov
jmp
dec
bound
xchg
mov
loop
adc
jg
push
jmp
or
ds
pop
jp
push
add
pop
fbld
sbb
test
push
mov
jmp
cmp
push
pop
fs
dec
add
dec
mov
sahf
cmp
aad
mov
pushl
dec
arpl
adc
mov
out
pop
addl
adc
movsl
daa
out
jne
sbb
int3
jb
mov
push
mov
and
dec
test
push
jl
push
pop
scas
mov
xor
pop
cmp
mov
in
jbe
cmp
inc
xor
imul
cld
xchg
ss
sbb
pop
sub
xor
adc
fwait
pop
int
ljmp
dec
shlb
stos
fists
cmp
add
pop
sbb
sti
fwait
cmpsb
dec
cld
ja
pop
inc
cli
inc
pop
fidivl
sub
add
repnz
dec
and
dec
in
jnp
lds
pushl
and
addr16
in
les
in
xchg
ret
and
inc
sub
imul
lea
add
sbb
sahf
sbb
gs
cmc
push
mov
cmp
mov
dec
imul
jmp
scas
sub
scas
or
sbb
enter
cmp
or
dec
sbb
aaa
mov
stos
ljmp
mov
out
adc
scas
dec
in
or
or
mov
fistl
mov
enter
inc
ds
jmp
or
cmp
pop
jmp
lret
inc
scas
or
sbb
scas
jmp
ss
aaa
or
lret
dec
cmp
mov
call
dec
mov
cmpsb
inc
jg
mov
sahf
lea
xor
inc
xlat
aaa
shrb
imul
xchg
out
inc
inc
mov
js
inc
xchg
xchg
in
test
jle
sub
cmp
sbb
mov
rcrl
push
sahf
sub
mov
call
cltd
popa
cmc
push
inc
and
imul
jne
xor
scas
sub
fidivl
xchg
mov
xor
pop
inc
stos
imul
push
mov
inc
sbb
rcrb
stos
xor
add
aaa
imul
outsl
dec
and
jb
insl
and
dec
mov
mov
cwtl
and
mov
or
adc
jl
add
mov
in
pop
pop
mov
dec
jge
adc
fld
iret
iret
lds
jle
push
jo
adc
add
pop
rclb
or
iret
pop
mov
push
gs
out
arpl
jle
fdivrl
imul
push
lret
lcall
stc
xchg
mov
into
jb
pop
cltd
inc
xor
in
inc
icebp
or
inc
jnp
or
in
push
icebp
xchg
repnz
or
repnz
or
xchg
jnp
dec
and
add
lret
jmp
outsb
test
rolb
cmp
loop
shrl
inc
adc
or
std
call
or
xchg
or
push
aas
and
test
js
and
in
repnz
jnp
xchg
push
daa
sets
mov
push
push
push
arpl
test
jb
jg
push
arpl
mov
mov
push
or
dec
scas
adc
xchg
repnz
sbb
dec
xchg
cmp
xor
pop
inc
outsl
sti
ja
stos
sbb
cmp
ljmp
push
data16
inc
jns
sub
or
and
adc
mov
dec
arpl
lcall
loope
popf
push
sub
dec
mov
fs
arpl
mov
jnp
adc
repnz
xor
sub
sbbb
sbb
es
push
mov
loope
mov
repnz
sbb
jp
loop
xchg
lods
sbb
inc
test
in
jb
into
dec
stos
mov
cmpsb
mov
add
mov
cmp
add
ja
jb
xchg
cmp
lods
push
sarl
and
decl
mov
xchg
incl
push
hlt
fisubl
mov
xchg
pop
test
das
aad
dec
xchg
cmp
or
fnstcw
jae
jle
jbe
ret
ljmp
ss
sbb
pop
hlt
sub
push
push
aaa
daa
pop
std
mov
jp
sub
mov
push
loope
scas
adc
cmc
sbb
cmp
jecxz
cmp
ds
popa
mov
dec
in
add
dec
arpl
scas
push
insb
and
mov
aaa
popf
mov
mov
out
les
mov
lock
add
inc
push
fdivrs
mov
mov
addr16
aaa
push
jp
pop
les
xor
add
lret
add
mov
inc
scas
bnd
out
xor
das
fidivrl
inc
stos
test
mov
sbb
inc
jl
icebp
sbb
aas
stos
fldt
lods
or
fcmovu
lret
test
cmp
jl
les
lret
mov
in
and
jecxz
pop
sub
xor
push
add
pop
pop
push
stc
add
testl
movsb
mov
insl
subl
pop
sbb
sbb
out
push
jno
and
fcmovnu
and
aam
push
in
ljmp
mov
and
arpl
or
jmp
cmp
push
pop
add
push
xchg
add
jnp
mov
bound
sti
sbb
dec
or
xor
lret
or
xorl
mov
es
push
cmc
dec
cmp
out
dec
mov
gs
stos
inc
mov
gs
add
adc
test
sub
jnp
into
lea
in
cwtl
dec
jbe
xorl
pop
push
sbb
mov
and
popa
mov
xor
notb
fstl
sbb
add
cld
addr16
or
hlt
cwtl
dec
test
push
out
fidivrl
xor
sahf
in
cmc
cmp
jecxz
sbb
or
inc
jp
add
sahf
sahf
xchg
add
push
and
cmp
cmp
sbb
sub
repnz
sub
and
sub
sub
ss
add
addr16
imul
xchg
jae
or
in
int
cmp
or
inc
jp
cli
push
push
jno
imul
mov
sub
mov
fdivs
lea
stos
je
rcrb
push
stos
addl
push
push
mov
addr16
idivb
mov
in
insb
mov
clc
call
xlat
lea
jmp
and
xor
add
mov
in
sub
mov
jle
or
xchg
sub
adc
mov
cld
xor
xor
neg
or
popa
and
lea
test
mov
lea
hlt
cmp
mov
addb
cmpsb
and
into
scas
or
or
cmp
loop
cmp
stos
bnd
int3
rcll
cwtl
pop
or
jns
enter
cli
xchg
and
mov
inc
mov
mov
dec
xchg
lea
icebp
pusha
xor
imul
jecxz
xchg
cmp
and
push
incb
inc
sbb
jmp
sub
mov
mov
lcall
cmpsl
insl
adc
jl
fstpt
pop
sub
lods
pop
or
fdivs
cmp
repnz
ret
jbe
aas
inc
xchg
lds
and
aas
push
mov
xor
mov
lods
jnp
fidivrl
test
imul
push
adc
push
cmp
out
mov
test
xchg
sbb
ret
jl
push
mov
xchg
mov
daa
out
push
push
cmp
mov
add
cltd
lret
cmp
es
push
xchg
cmp
xchg
ss
xor
orl
sbb
jmp
inc
sub
sub
dec
push
push
jnp
xchg
xor
pop
shlb
dec
orb
sahf
inc
adc
sbb
in
adc
cli
mov
ret
mov
fcompl
rorb
sbb
push
jg
jg
addr16
nop
pop
adc
movsl
xchg
cmp
and
add
adc
mov
movsl
dec
mov
cli
ret
pop
dec
mov
xor
or
nop
mov
ficomps
mov
outsl
lcall
xchg
inc
bound
into
sbb
lea
jecxz
xor
fimuls
or
in
sti
cmp
test
jg
sahf
lcall
pop
xor
out
adc
inc
push
sbb
fnstenv
loopne
bound
fstpl
inc
jns
lret
push
push
sub
fs
sti
sbb
test
sbb
mov
add
sbb
xchg
add
incl
das
jae
mov
mov
fisubrs
jl
jmp
push
pop
sub
mov
inc
cmp
addl
xor
insl
stos
push
xchg
pop
int
js
pop
shll
out
mov
and
out
shlb
or
mov
enter
push
lea
icebp
addr16
les
dec
and
daa
push
push
jmp
popa
cwtd
out
mov
adc
mov
shlb
loop
pop
mov
cmp
sbb
xchg
mov
jmp
jns
inc
test
inc
lock
mov
push
xlat
dec
push
jne
push
push
sbb
sub
loopne
pop
adc
out
inc
test
out
clc
mov
cmp
mov
in
es
das
out
sbb
shlb
call
daa
cs
push
gs
and
inc
jmp
dec
dec
xchg
dec
pop
daa
cs
push
arpl
ss
pop
imul
or
push
sub
mov
jmp
or
cld
fdivs
icebp
out
out
mov
data16
xchg
in
push
xor
js
cmp
push
sar
stos
sub
adc
in
pop
mov
xor
xlat
lods
sub
jp
repnz
popf
daa
xchg
dec
xchg
pop
in
add
call
fcmovne
add
fisubrs
dec
cmp
adc
movsb
mov
adc
cmp
adc
iret
andb
xchg
popa
cmpsb
add
out
xchg
pop
add
movsb
push
test
pop
pop
or
lret
or
adc
ljmp
mov
fmull
dec
sub
clc
mov
lea
mov
out
push
jmp
cwtl
adc
sahf
and
pminsw
xor
xchg
inc
ret
stos
mov
jne
scas
subl
scas
inc
lret
xchg
cmc
cmc
popf
add
cmpsl
pop
lea
outsl
loop
xor
dec
push
shl
mov
outsl
loopne
repnz
cmp
inc
fs
add
sbb
iret
scas
adc
push
mov
cmp
dec
jbe
add
ljmp
inc
cli
xor
cmp
or
lret
adc
shl
lods
cli
out
add
xor
push
gs
imul
imul
mov
push
ja
stos
fs
ljmp
cmp
or
ljmp
sub
mov
cmp
mov
jg
cmp
iret
xchg
mov
sbb
jl
add
jmp
cwtl
pushf
test
and
aaa
add
push
sbb
sbb
orb
incb
mov
lahf
pop
in
rorb
mov
inc
pop
repnz
in
pop
jl
dec
mov
xor
cmp
add
inc
jg
fwait
mov
sarb
push
xor
enter
push
sub
mov
xchg
js
repz
mov
imul
pop
insb
ss
jp
inc
dec
mov
repnz
ljmp
sbb
mov
sarb
sbb
dec
adc
sub
inc
lea
test
cmp
xor
jmp
add
mov
or
dec
dec
pop
xor
push
ljmp
outsb
xchg
loope
repnz
mov
divb
push
push
faddl
mov
sub
xlat
sti
mov
adc
js
mov
push
fstps
sbb
sub
shr
lea
dec
pop
imul
out
nop
loop
neg
xor
cltd
xchg
sub
push
test
push
dec
pop
fs
xchg
aas
call
pop
repnz
jb
and
push
stc
jns
jb
testb
cmpsb
mov
sub
dec
xchg
in
shrl
stc
pop
out
sub
xchg
or
stos
xchg
or
xchg
jbe
std
div
mov
add
lret
cli
xor
fimull
push
push
loope
ret
das
adc
pop
dec
or
mov
mov
outsb
loopne
mov
mov
data16
mov
mov
cmpsl
cmp
push
jne
jle
popf
mov
xchg
sbb
adc
jmp
ss
rolb
adc
push
mov
movsb
pop
cltd
orb
jno
ja
dec
js
ss
add
mov
stos
mov
pop
cwtl
mov
mov
cmpl
dec
bound
add
push
mov
ret
nop
dec
sbb
dec
outsb
rcrb
mov
repz
xor
jb
or
call
and
pop
or
out
shrl
ds
cmp
aaa
dec
xor
mov
dec
mov
lock
ds
xchg
out
in
jb
pop
push
jmp
mov
push
and
inc
mov
mov
mov
clc
inc
jecxz
cld
dec
mov
arpl
cs
stos
pop
adc
popf
xchg
and
fsts
out
nop
pop
mov
call
jle
nop
or
jecxz
pop
sbb
test
mov
inc
sbb
mov
push
inc
adc
cmp
push
jno
jmp
push
add
repnz
jo
sub
sbb
sbb
out
jo
jns
and
test
sbb
loopne
pop
dec
or
adc
out
test
mov
cmpsb
nop
enter
call
mov
lret
dec
lret
add
or
mov
not
mov
add
movsb
sub
cwtl
iret
bnd
inc
sbb
xchg
shr
mov
cmpsb
xlat
push
mov
adc
imul
xor
push
ss
mov
adc
stos
mov
dec
xchg
orb
bound
sub
dec
xor
test
pop
xchg
leave
mov
repz
mov
outsb
pop
xchg
fistpll
fstpt
mov
adc
loopne
lods
dec
inc
orl
enter
push
dec
aaa
or
or
push
aad
bnd
xchg
mov
sysenter
dec
pop
lea
lret
out
or
movsl
jne
dec
add
add
xor
sbb
stos
jmp
pop
into
jne
jbe
mov
gs
in
mov
repnz
popa
add
roll
add
mov
test
hlt
push
enter
subl
pop
and
jnp
addb
jns
dec
bound
xchg
shlb
xchg
call
jmp
scas
mov
jo
or
lret
mov
andl
add
movsl
inc
arpl
stos
lcall
cli
or
sbb
inc
dec
arpl
fcomip
xchg
lds
pop
add
repnz
fucomi
cmp
xor
mov
push
fsts
jmp
jb
ret
inc
daa
inc
bound
adc
adc
pop
in
or
stos
lods
daa
testl
sub
pop
popf
pop
mov
pop
mul
fisubrl
push
xchg
or
cmp
xor
or
movsl
leave
testl
jo
fistpll
mov
mov
jno
icebp
in
test
sbb
popf
roll
cmp
add
mov
call
pop
push
jbe
popf
sbb
adc
push
fs
rcll
push
mov
mov
leave
xchg
pop
aaa
out
or
add
jecxz
icebp
in
popa
jae
lret
mov
sbb
cld
ljmp
dec
add
mov
mov
xchg
mov
mov
fcmove
adc
sub
or
lods
sbb
adc
jecxz
sub
out
push
xchg
jmp
jp
subl
sbb
shll
hlt
jb
xlat
and
inc
inc
stos
idiv
mov
or
mov
and
cmp
jp
repnz
out
jle
addl
add
push
push
stos
jg
scas
repz
and
enter
jnp
mov
orb
ret
fiadds
mov
cmpl
push
jb
jmp
out
les
scas
jae
fcomi
cmp
push
outsb
push
call
push
in
dec
lcall
ror
ds
sub
test
loope
shl
sbb
loope
insl
xchg
push
and
xor
add
loope
and
push
sbb
or
cmp
xchg
dec
fldl
in
popa
sub
push
adc
and
sub
out
nop
lret
lret
notw
testl
jnp
adc
jp
pop
cli
push
orl
inc
stos
fstps
inc
adc
test
ret
lret
loopne
into
imul
add
cmp
xor
leave
xchg
call
sub
dec
jge
mov
sbb
repnz
push
lret
sub
addr16
int
sti
cld
mov
push
negl
out
ds
inc
out
pop
imul
push
fnsetpm(287
cmpl
sub
dec
xchg
stc
fisttpl
gs
stc
repnz
push
subl
loope
mov
or
push
jbe
loopne
or
and
push
jg
cwtl
cmpsl
int
cs
shl
call
arpl
sbb
int
cmpsb
xchg
ret
xor
mov
mov
dec
mov
stos
xor
sub
rolb
dec
xor
mov
fimull
inc
repnz
cmpsb
movsb
jnp
xor
ret
lock
cmpsb
xchg
repz
mov
int
jl,pn
insl
les
out
xchg
cmp
cwtl
push
fdivrs
aam
mov
or
xor
push
cmp
xchg
daa
pop
movsb
add
xchg
xlat
add
lea
sbb
test
scas
mov
in
dec
jl
dec
ss
jecxz
mov
fisttpll
inc
stos
and
mov
cmp
inc
or
scas
rorl
xor
lods
inc
lods
xchg
dec
std
and
xchg
jge
lcall
repnz
push
stc
aad
jo
sbb
rcll
test
mov
mov
rcl
or
adc
cmpsl
in
jmp
in
xor
pop
subl
lods
leave
in
sbb
nop
stc
push
mov
fnstenv
and
or
mov
pusha
out
push
xor
xchg
lods
or
push
sub
fistpll
lods
mov
loope
mov
mov
mov
mov
jmp
sub
test
pusha
popa
sub
dec
filds
dec
or
jnp
hlt
mov
adc
lods
cmp
xchg
xchg
pop
push
or
das
mov
sti
mov
or
xor
orl
push
jmp
test
repnz
push
jmp
adc
sub
in
xchg
pop
or
js
push
inc
leave
ljmp
jecxz
xor
add
cmpsb
or
dec
pop
clc
repnz
aas
repnz
test
iret
mov
add
pop
xor
in
out
imul
movsl
xchg
iret
daa
cmp
mov
fs
lret
lods
mov
in
cmp
push
push
sbb
sbb
push
lods
ljmp
inc
or
stos
daa
fmul
les
mov
mov
outsb
decl
jp
lods
fwait
xchg
popf
push
pop
jmp
repnz
sbb
lcall
into
xchg
push
stos
cmp
lods
cmp
test
cmp
jb
lea
ljmp
push
jbe
mov
xchg
popf
xchg
mov
movsb
xchg
stos
push
arpl
shlb
fwait
out
repnz
add
mov
scas
mov
xchg
cs
push
imul
mov
add
mov
mov
into
pop
or
outsb
rolb
xor
pop
adc
mov
fcmovnu
jg
lret
int3
xchg
pushf
dec
inc
jl
dec
clc
data16
pop
enter
lret
sbb
scas
cmp
mov
scas
xor
lcall
cmp
lds
mov
jmp
mov
push
xor
or
xor
cli
es
mov
daa
sub
cmp
cmc
bnd
sbb
sbb
mov
les
out
push
test
or
dec
xor
jg
mov
fucomp
out
ljmp
loopne
inc
out
mov
pop
subl
lcall
popa
sub
sbb
lea
mov
imull
sahf
in
loopne
mov
push
sub
cmc
push
jbe
subl
ss
dec
cli
mov
es
adc
adc
xor
in
push
push
test
dec
inc
cs
insl
jae
adc
rep
das
or
inc
int3
ss
je
and
pusha
mull
mov
xor
dec
scas
pusha
push
mov
sub
cmp
out
out
sub
mov
in
inc
jmp
mov
jp
lcall
inc
ljmp
test
or
mov
xchg
dec
cmc
sub
jbe
xchg
or
ljmp
xchg
jne
addr16
cs
ss
push
xchg
cli
data16
or
cmp
sub
imul
dec
sbb
insb
out
mov
pop
xchg
bswap
inc
pop
mov
lods
xchg
cmp
mov
mov
or
pop
xchg
add
jbe
std
lret
and
cld
gs
pop
dec
cmovp
dec
mov
dec
ja
jnp
out
add
imul
ss
mov
movsb
outsl
mov
popa
add
out
shll
mov
jl
bound
pop
sbb
and
fnsave
adcb
dec
cmpsl
outsb
cmpl
dec
or
leave
cld
lock
adc
ret
or
pop
ja
or
into
inc
gs
mov
xchg
and
mov
inc
in
or
lret
leave
push
mov
sub
jb
or
imul
inc
popa
sti
lock
lcall
daa
cmp
addr16
mov
jbe
mov
push
mov
dec
jmp
fisttpll
lods
push
iret
in
inc
popa
jb
inc
scas
popa
lcall
xchg
mov
cmp
push
scas
jg
xchg
test
popl
sbb
jmp
xchg
jns
or
dec
mov
mov
jge
jmp
cwtl
ret
xchg
or
out
xor
fidivl
inc
mov
aas
push
mov
sub
repnz
scas
mull
std
enter
xor
movsb
cmp
push
shlb
push
cmp
push
cld
pop
cli
mov
jmp
in
lea
sub
int
cwtd
xor
inc
out
js
ficompl
mov
enter
adc
sahf
dec
sti
pop
into
mov
psubd
sub
cltd
jp
xchg
sarb
rcrl
shll
andl
cmp
sbb
rep
test
stos
or
jo
jl
popf
insl
xchg
movsl
scas
sbb
pusha
dec
mov
pop
mov
mov
sbb
adc
mov
stos
push
mulb
or
push
push
lods
stos
xor
test
adc
inc
sbb
inc
into
xor
or
popa
or
or
mov
mov
jmp
fiadds
jbe
inc
sub
cli
inc
dec
dec
adc
out
push
jo
add
out
xor
xor
in
push
or
mov
cmpsl
xor
aaa
mov
es
and
sbb
add
cmp
cli
sub
in
call
or
sub
out
cmc
mov
dec
pop
sarb
cmp
call
mov
sbb
or
std
and
mov
pop
pop
cmp
cmp
sub
or
adc
pop
or
movsl
mov
pop
cmp
push
adc
pop
push
out
and
out
in
pop
pop
idivl
negl
ds
sbb
lcall
push
fsub
xor
mov
mov
adc
popf
loop
mov
lret
jmp
in
jmp
xchg
jo
xor
int
add
and
dec
enter
das
stos
push
sub
in
or
sub
sbb
int
cmp
and
lods
out
and
or
add
and
aaa
jb
scas
mov
push
data16
sahf
pop
add
mov
in
xor
outsl
push
push
mov
fstl
notl
jle
shl
imul
push
or
pop
imul
aam
jo
push
sub
jnp
cmpl
dec
stc
xchg
popf
iret
pop
out
mov
std
inc
stc
stos
or
test
push
sbb
aad
or
mov
ja
ret
dec
test
push
or
fcmove
xchg
test
sub
dec
stc
iret
shl
pop
cmp
xchg
mov
and
xchg
ret
sahf
lea
rcrl
out
or
pop
and
jo
int3
mov
or
rcrb
inc
jp
adcl
into
stos
add
xchg
mov
jecxz
pushf
fcmovnu
mov
xor
xchg
push
or
lea
add
pushf
orb
add
loop
test
mov
cwtl
xacquire
das
adc
mov
jnp
jg
mov
cmp
dec
inc
cmp
pop
cltd
shlb
mov
dec
jg
mov
add
cli
sub
dec
mov
addr16
xchg
jnp
pop
or
mov
ja
mov
cli
imul
push
test
fsts
iret
les
mov
push
push
outsb
mov
ret
pop
les
rcrb
jecxz
mov
inc
hlt
shrl
in
inc
repnz
jbe
pop
repz
cmp
sbb
or
fnstsw
or
gs
xchg
ds
cmpsb
pop
xchg
in
jecxz
sbb
mov
inc
sbb
out
sbb
sbb
xor
leave
out
push
xor
arpl
xor
ljmp
mov
cmp
fidivrs
ljmp
das
push
or
xor
ds
lods
xchg
cli
test
imulb
mov
lock
test
stos
fadd
adc
jns
aas
or
jecxz
push
test
popa
andl
mov
arpl
movsl
mov
pop
movsb
xor
mov
insl
mov
xor
pop
mov
mov
mov
fisttpl
andl
sbb
push
jae
xchg
mov
inc
das
cmp
and
xchg
or
into
ret
and
jo
es
movq
cmp
adc
cmpsl
lock
test
cmc
repnz
je
ja
aaa
xchg
aad
xchg
push
and
sbb
xor
cmp
repnz
mov
jmpw
mov
sub
lret
xor
xor
mov
clc
adc
inc
xchg
cmpsl
stos
dec
ss
sbb
out
jmp
mov
iret
arpl
stc
xchg
mov
adc
jmp
jmp
mov
jle
fsubr
push
add
mov
lods
add
inc
cwtl
dec
add
scas
push
out
mov
sti
scas
pop
outsb
pop
scas
dec
sti
ja
dec
fimuls
mov
pop
int
adc
pop
sbb
imul
xchg
jne
movb
sub
repz
push
fwait
cli
cli
pop
dec
lret
push
jg
jge
push
imul
cmp
mov
in
jbe
and
mov
sbb
rcl
popf
jmp
push
xor
scas
in
fnstsw
dec
and
aaa
mov
push
or
loope
fs
pop
mov
jns
lea
pop
jb
in
std
movsb
in
test
adc
mov
in
jecxz
out
pop
xchg
cmc
fdivrs
dec
decl
pop
out
dec
lret
das
pop
mov
out
push
rclb
or
repnz
movsb
sbb
add
xor
or
fstpl
mov
repnz
pop
negb
insl
adc
cmpsb
mull
cs
sub
inc
dec
cmpsl
jns
xor
pop
mov
adc
cltd
xor
shrb
pop
ljmp
out
push
cmp
add
adc
push
xor
xchg
out
mov
repnz
mov
daa
fs
mov
pop
clc
lahf
out
jl
xchg
push
mov
push
push
test
adc
mov
adc
push
mov
or
cmp
adc
jmp
lds
pusha
fimull
call
sub
out
jns
repz
push
mov
xchg
inc
push
fs
or
movsl
adc
xor
lds
xchg
int
mov
or
mov
pop
fs
add
jnp
cmp
arpl
pop
sbb
ljmp
fbstp
repnz
lods
xchg
test
mov
push
rorl
pop
leave
mov
mov
pop
jns
xor
mov
dec
outsb
mov
mov
mov
mov
outsb
or
icebp
adc
add
cs
pop
out
mov
fstps
divl
sar
sysret
mov
mov
out
sbb
sbb
jmp
imul
dec
iret
sbb
pusha
mov
pop
mov
es
inc
dec
outsl
jbe
and
and
pop
jo
sub
pop
fimuls
int3
test
out
not
aas
xor
outsl
mov
js
mov
icebp
pusha
mov
sahf
popa
mov
icebp
sub
sbb
and
in
lock
test
fidivrl
or
xchg
push
mov
inc
loop
jne
test
xor
and
stos
ljmp
sbb
xchg
jecxz
xchg
xchg
imulb
push
pushf
cmp
cmp
push
out
mov
mov
outsb
cltd
frstor
or
pop
and
adc
ljmp
mov
adc
mov
stos
cmpsb
xchg
dec
jg
andb
xchg
inc
xchg
push
and
adc
sti
ret
mov
xchg
cmp
sahf
pop
imul
jnp
lret
lret
cmpsl
and
js
jb
cmp
add
and
fwait
xor
fisubrl
and
loopne
jae
loope
test
unpcklps
iret
pop
ret
jle
test
andb
daa
clc
push
out
repnz
outsl
fwait
cli
mov
push
mov
mov
jo
add
xchg
jl
leave
cltd
stos
pop
adc
dec
mov
outsl
sbb
inc
push
dec
addr16
stc
inc
sbb
dec
sahf
pop
mov
sub
or
dec
and
jge
push
jmp
xchg
xor
lea
fsubl
in
sbb
shrl
dec
xchg
add
mov
pop
enter
sbb
into
jmp
data16
jp
inc
popa
cmp
mov
pop
xor
jne
dec
pop
insl
push
inc
mov
pop
push
shr
addr16
sbb
sub
add
jae
mov
xchg
adc
sub
insl
mov
out
push
stos
push
push
cs
pop
push
mov
dec
jae
dec
mov
and
repnz
mov
imul
popa
xchg
cmpsl
and
or
cld
iret
stos
or
mov
hlt
int
lcall
xor
xor
pop
cmp
test
or
add
out
mov
out
addr16
sahf
sub
pop
cmp
loop
cmp
add
jo
xor
or
test
cltd
or
push
mov
push
dec
or
ljmp
mov
mov
call
lcall
xchg
mov
sbb
into
and
imul
ret
fs
pop
or
push
loopne
mov
lock
jmp
addr16
test
pop
out
in
adc
mov
stc
xchg
or
cli
mov
sahf
and
mov
sub
scas
mov
hlt
jb
es
mov
cli
iret
mov
sbb
das
jl
dec
rclb
pop
iret
sbb
enter
hlt
or
daa
push
jns
sbb
jb
push
das
sub
cli
jmp
sbbb
push
xchg
push
inc
jno
cmp
mov
push
mov
dec
shr
jb
dec
test
pop
xchg
xchg
dec
push
or
ss
fistpl
or
mov
test
iret
mov
jnp
das
or
nop
jnp
les
lods
movb
pop
or
mov
pop
sbb
cs
jns
mov
cmpsb
cmp
adc
inc
cmp
jp
cld
pop
scas
ss
mov
xor
ds
shlb
sahf
imul
subl
scas
ss
hlt
mov
xchg
lcall
push
aas
jmp
cli
mov
stos
loopne
lods
push
mov
fiaddl
pushl
cmp
xchg
pushf
addl
jg
cwtl
pushf
lock
pop
jno
inc
jo
and
dec
jecxz
cmp
mov
and
add
negl
mov
inc
jmp
xor
mov
outsb
mul
or
xor
or
jg
push
xlat
or
in
pop
sti
aaa
add
pop
sbb
mov
dec
lds
and
movsl
or
or
inc
data16
jnp
dec
xchg
or
rcrl
add
inc
mov
repnz
jae
out
xchg
pushf
jge
hlt
mov
mov
inc
ror
jg
pop
std
lds
push
addr16
mov
xorb
pushf
jnp
dec
pop
dec
and
mov
mov
test
inc
mov
cmp
std
jg
fs
push
add
jnp
cwtl
adc
cmc
add
arpl
fwait
cmp
cltd
addr16
lods
xchg
sbb
xchg
jae
cli
push
jg
inc
rclb
add
sub
dec
mov
push
call
inc
lea
adc
cld
adc
stos
ljmp
mov
xchg
loop
clc
es
lcall
xor
inc
das
imul
adc
adc
dec
push
pop
outsb
mov
std
idivb
push
xchg
sahf
sub
xor
mov
sub
add
pop
das
cmp
inc
or
in
roll
mov
pop
jno
scas
cltd
in
ljmp
xor
jl
rorl
or
mov
lds
pop
or
mov
repnz
adc
outsl
cwtl
and
mov
cmc
and
jbe
sbb
cmpb
imul
xor
ds
mov
nop
adc
mov
mov
aaa
ljmp
mov
sbb
adc
or
enter
lret
ret
or
push
mov
sbb
cmp
push
mov
mov
sti
out
stos
imul
repz
sbb
es
jmp
test
xchg
jecxz
pop
mov
das
jg
xchg
testb
xor
pop
xor
inc
cmp
imul
pushf
mov
xor
insb
jnp
jae
popa
xchg
sbb
mov
cmp
xor
sbb
push
mov
cmp
mov
fsubrl
xlat
mull
sbb
notl
ficompl
xchg
dec
ss
dec
push
and
ret
mov
xor
or
sbb
inc
dec
cmp
jp
lcall
cvtpi2ps
out
mov
or
jns
jb
ss
adc
pop
push
or
aas
cmp
incl
cmc
add
outsb
sbb
xchg
jmp
add
test
pop
out
cli
add
sbb
jmp
lahf
add
loopne
mov
mov
jb
in
add
es
mov
adc
gs
xchg
or
and
or
ret
cmp
and
movsl
scas
cmp
sarb
cmp
jmp
sbb
repz
mov
movsb
add
sub
clc
xor
cmp
push
cmpxchg8b
out
pop
repz
nop
cmpsb
mov
icebp
xchg
into
iret
fsubr
ret
mov
jmp
dec
pop
mov
push
push
jp
test
dec
arpl
xlat
mov
dec
jno
cli
test
repnz
jmp
loop
rcrl
mov
push
push
popa
or
mov
jecxz
ljmp
inc
in
lcall
notb
xchg
repnz
dec
pop
xor
mov
js
lret
xlat
or
sub
sub
inc
bound
cli
or
lret
iret
dec
fisubrl
inc
sbb
dec
repz
mov
fsts
mov
sub
push
xor
or
mov
pop
jae
test
lock
pop
sbb
xor
adcl
inc
jbe
aad
cltd
mov
es
pop
inc
and
into
pop
cmp
jge
inc
scas
sub
xor
push
lock
cmp
faddl
mov
ret
outsl
fdivs
sub
pop
xor
movsb
sbb
dec
repz
xor
mov
push
jno
adc
sub
pop
pop
push
add
pop
leave
mov
adc
loopne
sub
dec
stos
jl
and
dec
fwait
dec
cmp
jns
imul
mov
mov
mov
fstpl
xor
fwait
mov
shll
iret
dec
jle
push
mov
dec
pop
outsb
push
mov
fdivrs
out
and
lods
cmc
scas
dec
push
fwait
cs
arpl
movsl
pop
adc
add
xchg
enter
cmp
mov
rorl
in
daa
jp
movl
cmp
int
inc
cmc
ret
shrb
stos
adc
jnp
and
mov
jmp
jg
push
or
pop
push
or
mov
dec
mov
xor
cmp
dec
rolb
inc
push
daa
mov
cmp
test
pop
mov
mov
daa
or
mov
dec
mov
pop
es
mov
mov
mov
dec
clc
jae
xor
xor
jns
pop
mov
fmul
scas
xchg
imul
decl
xchg
iret
clc
mov
out
dec
mov
mov
mov
jmp
xor
cmp
test
jno
cli
dec
pop
mov
in
dec
jl
out
xchg
sets
pop
testb
insb
jp
ret
xchg
sbb
stc
int3
cmpsb
xchg
test
ret
test
pop
das
jecxz
stc
inc
mov
ficompl
sti
pop
xchg
pop
mov
push
fiaddl
call
or
pop
lea
fcomp
and
or
mov
mov
push
ss
push
xchg
xor
test
in
sbb
pop
xor
mov
ds
shll
adc
stos
int
cmp
outsb
or
dec
mov
repnz
jl
sbb
mov
ja
fldlg2
push
dec
xor
and
or
cmp
sbb
and
orb
sbb
jmp
xchg
fnstcw
mov
std
incl
in
pop
clc
or
call
jae
push
fwait
test
enter
cmp
or
jmp
sbb
movsl
sbb
sbb
pop
or
xor
sub
mov
mov
lea
mov
pusha
pop
add
add
push
sbb
imul
ret
mov
dec
shll
cld
ficoml
lods
ljmp
nop
adc
pop
cld
inc
out
leave
mov
addb
sub
push
xchg
or
push
aaa
adc
mov
in
jl
and
hlt
mov
mov
fistpl
xor
inc
xchg
scas
negb
dec
inc
repnz
inc
loope
push
rcrl
jb
mov
mov
xchg
mov
mov
addr16
test
gs
lea
add
lds
dec
fisubrs
jnp
in
cmpsb
mov
in
pop
or
sti
inc
sbb
popf
lods
or
orl
push
dec
lea
icebp
in
mov
add
in
ret
or
ficoms
dec
daa
dec
mov
and
imul
sub
test
xchg
rcrl
in
jg
mov
aaa
addl
or
loopne
fcmovnbe
mov
or
out
bound
adc
fisubl
pop
leave
mov
lret
imull
dec
xor
push
cltd
xchg
sub
imul
add
xchg
sbb
rclb
arpl
add
inc
mov
es
rcl
pop
sbbl
dec
mov
xchg
jg
stos
fistps
inc
stc
mov
ja
pushf
xor
or
cmp
dec
nop
jne
dec
cmp
fstpt
mov
cli
mov
outsl
shll
call
push
fs
ficomps
or
lret
xor
xchg
das
adc
mov
push
mov
repnz
jg
push
jl
bound
ljmp
mov
jmp
movsb
fcomip
ljmp
jnp
nop
mov
mov
push
mov
sbb
sahf
lea
popa
imul
jns
mov
cmc
pop
mov
lret
call
ss
sub
testb
rcrb
arpl
xor
pop
outsl
or
adc
repz
in
inc
cli
xchg
mov
sbb
enter
loopne
lea
ds
shll
push
pop
mov
xor
incb
fs
cld
imul
or
dec
inc
or
div
es
out
cmp
aam
pop
cli
pop
sub
mov
pop
mov
ja
dec
lds
scas
les
pop
adc
adcl
ret
push
sbb
push
or
dec
mov
xor
add
fstl
jg
pop
fldcw
mov
push
push
mov
dec
inc
mov
pop
lret
dec
es
xor
bound
jp
push
mov
cmp
inc
xchg
enter
mov
push
sbb
gs
shrb
inc
das
mov
mov
mov
pop
repz
movsl
call
jno
mov
xchg
mov
and
clc
cmpsb
pop
enter
ss
lret
aas
ljmp
jnp
jnp
xchg
push
or
fisttpll
loopne
cs
sbb
cmpsb
dec
mov
and
repz
lds
outsb
mov
cs
fnstcw
xor
ss
jle
push
mov
popa
lock
data16
or
push
add
into
rorb
out
xchg
jb
aad
outsb
jecxz
add
incl
fsubl
inc
sbb
or
das
xchg
test
push
xchg
or
cmp
lret
mov
inc
dec
dec
mov
mov
ret
sub
mov
repnz
ret
lods
cmpsb
pushf
mov
or
imul
cmp
stc
mov
inc
pop
das
mov
xor
push
jnp
arpl
push
movsb
inc
mov
push
daa
lret
cmp
int3
mov
int3
sub
add
outsl
mov
dec
pop
stos
sahf
pop
xor
mov
jg
les
mov
mov
sub
insl
dec
push
push
xchg
mov
jbe
inc
fstpt
mov
clc
adc
popa
call
arpl
push
shl
lret
and
jae
inc
push
repnz
inc
pusha
or
jg,pt
inc
sbb
ljmp
arpl
jle
aas
aaa
lea
sbb
test
sub
xor
inc
jne
cmpsl
xor
das
push
ds
lods
out
jo
mov
cli
lea
mov
push
repnz
mov
data16
xchg
sub
or
jbe
push
call
pop
push
push
mov
ret
push
cmp
xchg
lret
mov
adc
or
pop
iret
xchg
lret
bnd
jns
inc
rep
xchg
ret
mov
inc
pop
mov
jnp
cmpsb
aas
movsb
or
fimull
mov
lods
add
cld
dec
push
sbb
xchg
ret
inc
xchg
cmpl
jnp
pop
out
push
fidivl
dec
adc
mov
push
das
push
pop
addr16
xor
jbe
rolb
dec
popf
ret
jle
fldt
popf
or
dec
addb
jb
outsl
xchg
cmpsb
sbb
ds
aam
ja
lret
aas
daa
xchg
adc
dec
add
pop
int3
lcall
push
add
or
subb
mov
fadds
inc
divb
or
xchg
popa
out
add
lock
mov
rcll
jae
out
or
stos
sub
jmp
rcl
or
pop
sbb
inc
stos
jns
xor
in
adc
shll
mov
pop
lret
sub
cmpsb
out
pop
stos
stc
jnp
sub
imul
push
inc
xchg
mov
ss
in
shr
cmpsl
test
pop
inc
pop
cmpsl
ret
outsl
xlat
js
jnp
ljmp
mov
ljmp
xor
xor
int3
mov
mov
xor
xor
cmp
lds
inc
push
lcall
addr16
jb
pop
pop
lahf
hlt
xor
scas
out
lret
inc
int3
faddl
lahf
mov
pop
insl
jmp
popa
fildll
sbb
cmp
sbb
ss
fsubrl
sub
cmp
adc
pop
push
jbe
sets
scas
movsb
jne
jge
mov
fwait
add
loopne
or
inc
dec
cmp
jbe
and
push
mov
jg
inc
enter
in
fcom
jl
std
fucomi
cmp
jg
je
or
xor
and
lret
mov
xor
inc
or
jl
push
stos
xor
mov
jnp
jmp
dec
xchg
and
sbb
lock
adc
pop
xor
gs
push
pushf
xchg
xchg
xor
xor
cmp
mov
add
add
or
jmp
ret
adc
notb
push
jl
pop
roll
mov
adc
mov
add
and
cmp
scas
int
stos
xchg
add
imul
loope
xchg
xchg
xchg
push
fucomp
jb
mov
stos
add
ja
add
sub
push
movsl
jl
out
push
inc
pop
or
pushl
add
xor
or
mov
mov
pop
scas
sahf
cmp
or
xchg
cltd
pop
cmc
sbb
pop
sub
xchg
sbb
out
push
push
mov
pop
pop
hlt
xor
dec
inc
stos
pop
int
negb
cld
ss
in
cmc
jg
xchg
mov
mov
aas
pop
movsb
and
jecxz
jo
dec
jno
jle
cmpsb
addr16
es
mov
scas
jnp
shrl
jne
ljmp
dec
or
ja
xor
pop
jg
pop
stos
push
xor
mov
ficoml
mov
pop
stc
mov
arpl
or
inc
stos
xchg
sbb
aam
sub
mov
bound
push
cs
addr16
xor
mov
repnz
inc
push
icebp
clc
push
lahf
sub
adc
sub
arpl
dec
jmp
movq
sbb
ret
arpl
les
cmp
daa
jmp
inc
jp
scas
or
sbb
jg
xchg
xchg
or
pop
mov
popf
lods
ds
dec
jecxz
dec
xor
fmull
mov
aad
scas
notb
and
mov
shrb
cs
inc
xlat
test
sub
jnp
add
fs
xchg
jnp
mov
sahf
call
and
pop
add
xchg
lret
repnz
adc
and
add
jns
pop
dec
mov
dec
rorb
in
cmpsb
jg
push
mov
mov
xchg
mull
fs
jg
stos
adc
movsb
or
pusha
xor
xor
repnz
xchg
jp
stos
or
mov
cmp
mov
xchg
mov
nop
in
inc
sbb
jne
cmp
cli
inc
out
jns
cmp
mov
mov
jecxz
loop
xchg
repnz
scas
loope
xlat
imul
jbe
mov
cmp
mov
cmpsl
lret
or
inc
mov
jnp
jb
jg
das
ret
test
test
jmp
lods
cmp
mov
test
fdivl
je
xchg
dec
dec
mov
int
ljmp
ss
dec
cmp
jb
or
lock
addr16
dec
dec
int3
outsb
cmp
and
into
jp
or
push
dec
dec
jbe
das
loopne
push
xchg
test
or
outsl
ja
outsb
pop
push
inc
fs
dec
mov
cmp
pop
outsb
decl
push
out
pop
dec
dec
sahf
int3
scas
xchg
das
fs
dec
es
into
push
mov
addr16
push
push
xlat
mov
dec
cltd
lds
addr16
in
dec
loop
bound
inc
testb
ret
fucomp
xchg
test
adc
movsb
stos
sub
or
sbb
cmc
das
xlat
push
sub
icebp
in
dec
int
int3
sub
push
or
sbb
lahf
pop
addr16
mov
lods
mov
sub
fwait
stc
daa
insl
cmpsl
orl
ja
fsubs
ret
hlt
into
sbb
mov
sub
mov
dec
cwtl
mov
fmuls
push
push
xor
dec
movsb
xor
imul
rorb
enter
push
out
or
inc
lds
mov
jno
outsb
mov
stos
outsb
mov
push
test
cltd
lret
push
out
xchg
mov
mov
insl
movsb
loope
out
xor
iret
jbe
sub
jb
xchg
push
mov
mov
packuswb
xor
mov
sbb
dec
lret
jne
ljmp
mov
jmp
imul
xchg
jno
mov
outsl
inc
cmpl
scas
seto
lret
push
loope
jbe
scas
popf
cmp
mov
insl
pop
repnz
ret
mov
push
addr16
pop
enter
movsb
push
inc
testb
int
push
cmc
dec
xor
inc
imul
out
subl
test
mov
push
ds
ds
sbb
out
js
outsl
fisubrs
pop
jo
ja
cmp
ret
jl
int
push
pushf
das
or
xchg
sbb
or
ja
adc
int3
aaa
push
pop
repnz
call
insl
enter
mov
push
cmpsb
leave
ljmp
into
fcmovne
iret
jo
clc
in
push
and
add
addr16
imul
dec
mov
shrl
insl
lret
stos
inc
fimull
mov
inc
ljmp
cltd
add
cmp
mov
cld
dec
je
push
into
out
push
mov
loop
lret
push
rol
lret
stos
sbb
ret
cli
gs
push
scas
in
xor
cmp
cmp
xor
shll
pop
loope
jno
hlt
add
popa
ljmp
mov
in
mov
xchg
ds
cmp
std
divb
int3
lret
mov
dec
jecxz
sbb
inc
ss
iret
mov
clc
ljmp
rcrb
push
add
xchg
lret
inc
ljmp
outsb
sub
or
jmp
loopne
sti
jmp
or
push
mov
imul
outsl
cmpsl
jmp
mov
stc
sahf
sub
ss
in
cmp
decb
push
dec
outsb
hlt
push
stos
mov
mov
imulb
mov
mov
mov
xchg
sbb
cmp
ljmp
shl
sbb
push
fidivrl
pop
xor
icebp
jnp
mov
pushf
jns
mov
push
and
test
pop
cli
inc
mov
jmp
jmp
or
decl
dec
cli
sbb
pushf
popa
out
or
lods
push
inc
dec
or
adc
mov
stos
shlb
icebp
xchg
les
or
pop
addr16
or
or
and
jbe
iret
push
cmp
pop
call
xchg
pop
push
mov
or
mov
outsl
jmp
pop
xor
popa
lcall
aas
not
push
mov
gs
inc
or
mov
and
sub
jbe
cld
jns
jo
ds
adc
pop
and
mov
and
cmpl
pop
mov
dec
inc
ja
ja
testb
sub
fisttps
mov
aam
cmp
xchg
mov
ljmp
xlat
cmp
sub
pop
xor
or
fcomp
imul
dec
imul
mov
outsb
push
stc
and
xor
rorb
jbe
push
in
sub
jmp
adc
std
in
nop
xor
xchg
int
jge
push
inc
xor
push
jns
inc
cli
mov
pop
lock
iret
mov
rclb
in
sbb
jecxz
imul
sbb
imul
push
push
ret
lock
push
aaa
in
mov
ljmp
jno
dec
frndint
cltd
cld
test
and
call
xlat
jo
fists
inc
adc
xor
cmp
test
jl
adc
movsb
sbb
test
rcll
and
mov
mov
divb
cmp
sbb
pop
out
adc
aad
add
inc
stos
push
mov
jge
adc
pop
mov
inc
and
jp
call
js
sahf
in
movsb
imul
add
leave
or
or
stos
mov
sti
inc
mov
inc
lret
out
div
sub
xor
mov
xchg
aam
test
movsb
sbb
inc
xchg
jg
das
lret
xchg
push
ficompl
push
push
ret
ja
out
adc
lcall
adc
insb
hlt
mov
xor
hlt
or
pop
push
ffreep
pop
jmp
jo
fsubr
sub
cmp
mov
sub
mov
fstl
push
xchg
inc
pop
or
inc
sub
push
jmp
inc
jge
jge
jmp
out
movsb
gs
mov
add
lcall
pop
lods
jo
jnp
out
xchg
test
push
inc
mov
mov
inc
push
or
hlt
sti
adc
inc
sub
out
or
enter
xlat
and
mov
xor
inc
lret
pop
cmpsb
xlat
sbb
sbb
mov
pop
xchg
mov
push
cmc
add
mov
es
xor
cmp
out
sti
ds
mov
rorl
lret
fstps
adc
icebp
stc
fisubrl
mov
dec
mov
xchg
int3
xor
xor
jg
movsb
in
or
sub
insl
fmul
out
xor
inc
inc
or
adc
bound
cmp
daa
gs
pop
cmpsb
sub
inc
pop
mov
mov
or
jb
fmull
push
dec
xor
loope
nop
pop
addl
dec
sbb
in
jno
fcompl
xor
cmp
movsb
dec
call
sub
jle
int
sahf
mov
inc
jno
add
and
or
cmp
out
imul
cli
jnp
mov
cmp
shlb
out
shrb
rclb
inc
push
stos
pusha
negb
mov
pop
add
or
cmpl
adc
mov
push
ss
gs
sahf
push
dec
inc
idivb
mov
push
pop
xor
aad
adc
xor
ficompl
pop
out
andb
mov
pusha
stos
pop
test
repnz
sbb
pushf
mov
idiv
bound
and
iret
out
inc
iret
repz
fidivl
call
push
sub
inc
mov
dec
out
pop
push
outsb
lock
loope
pop
mov
addl
imul
cmp
fdiv
push
repz
xor
fbstp
js
jne
movsb
das
and
xchg
sub
bound
sbb
cli
rcrb
sti
pmulhw
mov
dec
bound
clc
repnz
cmp
stos
add
and
sarb
or
es
push
mov
add
mov
xchg
fsts
mov
and
xchg
push
lahf
and
movsl
in
mov
mov
inc
xor
bnd
xchg
pop
mov
sahf
out
call
call
popa
pop
addl
or
or
dec
add
jo
mov
outsb
aas
or
jg
fldt
insl
test
jb
cld
add
inc
sub
sub
push
shll
cmp
pop
out
fstps
lea
pop
mov
mov
sub
xchg
cmp
pop
xchg
or
lahf
xchg
jge
outsb
and
add
cs
imul
loopne
sub
or
lds
fistpl
xchg
xchg
js
imul
pop
or
push
cmp
pop
mov
mov
xchg
jne
jno
mov
jecxz
push
pop
ljmp
les
pop
cmp
adc
jg
mov
icebp
mov
jecxz
movsl
mov
jecxz
add
rolb
lret
js
mov
cmp
cld
pop
sbb
lock
dec
ret
jns
cmpsb
ja
inc
cs
gs
mov
sbb
mov
xchg
jnp
push
xor
cmpsl
outsl
lcall
aaa
pop
jp
dec
movsb
or
or
cmp
cltd
fwait
cli
aas
xor
sub
cmpsb
pop
sub
idivl
fwait
and
add
lods
pop
xchg
orl
clc
mov
mov
pop
jae
bound
xchg
mov
pop
adc
hlt
pop
push
mov
mov
or
out
pop
es
pop
add
cltd
or
cwtl
or
xor
mov
cmp
mov
mov
dec
ret
fsts
cld
jmp
dec
repnz
push
push
in
fdivrp
mov
xor
push
push
sub
cltd
push
add
addr16
icebp
movsb
cmpsb
jl
pushf
cli
pop
inc
testb
xchg
and
inc
data16
sbb
pop
cmp
call
testl
iret
adc
mov
sbb
ljmp
mov
ja
fucom
hlt
and
mov
call
dec
mov
and
push
loop
cld
imul
int3
xor
pop
cwtl
adcb
adc
push
or
std
and
cmp
cmp
inc
and
inc
mov
pop
mov
lock
and
ljmp
push
mov
shrl
cmc
loopne
mov
lahf
dec
dec
pop
jo
ljmp
and
jl
enter
mov
jp
testb
xchg
andb
std
add
call
and
dec
inc
call
pop
cmp
pop
pusha
or
call
int3
aam
pop
icebp
mov
sbb
mov
pusha
clc
outsl
inc
and
pop
inc
xor
aas
icebp
jl
xchg
xchg
jp
xor
push
nop
inc
pop
jno
or
mov
dec
add
insb
mov
daa
bound
aas
push
jns
xchg
lods
push
sub
jl
orb
hlt
stos
fiaddl
push
xorb
dec
jb
cli
rcrl
xor
int3
or
das
out
ret
add
je
pop
xor
out
push
cmp
sbb
xchg
xor
iret
add
jbe
jb
scas
sbb
in
mov
pop
xchg
sbb
das
jb
testl
pop
adc
add
lds
mov
stos
fs
xor
and
pop
cli
stos
fadd
orb
sbb
cmp
fdivrl
adc
mov
or
insl
jp
and
les
sub
and
push
stc
pop
push
pop
repnz
pop
lret
lret
cmpsl
mov
out
hlt
sbb
scas
push
push
and
fsubrl
je
xor
rorb
xor
fistpl
into
sbb
lods
test
fcoms
fsubl
les
inc
loop
ds
xor
mov
pop
jno
add
or
and
in
je
mov
xor
and
or
mov
cli
jmp
push
xor
cmp
call
repnz
lea
scas
sbb
xchg
lods
jbe
mov
xor
test
pop
in
jle
into
push
jp
test
sub
jmp
js
fxch
mov
pop
sbb
or
adc
add
xor
pop
mull
lret
sub
dec
dec
inc
cmpl
ret
loop
aas
add
aad
mov
cmpsb
test
mov
andl
out
cs
pusha
dec
xor
mov
cmp
mov
mov
xor
adc
fimull
out
push
data16
or
lret
movsb
stos
adc
pop
and
mov
clc
subb
pop
or
or
bound
or
mov
cmc
jp
xor
sbb
gs
mov
jb
and
js
or
jmp
jl
clc
fcompl
jo
popa
gs
sub
mov
push
std
sbb
rorb
add
cmp
sahf
jecxz
mov
jb
in
fwait
dec
sub
cmp
lock
ljmp
xchg
enter
sti
sub
test
xchg
repnz
pop
leave
xchg
xchg
pop
cmp
or
add
mov
mov
dec
orb
xlat
or
inc
pop
ret
iret
leave
sub
les
mov
lock
mov
ja
mov
cli
lea
xchg
push
cwtl
dec
adc
lods
or
xchg
das
cmpsl
leave
mov
mov
push
mov
adc
adc
push
add
jmp
popa
andl
mov
mov
push
jns
jl
pop
push
cmp
mov
fs
xor
adc
sub
insb
test
gs
daa
imul
out
xorl
fs
fidivrs
push
mov
lea
pop
sbb
jnp
adc
sarl
jecxz
mov
pop
xchg
cltd
subb
cli
cmp
mov
fdivr
dec
rcrl
cmp
mov
dec
pushf
ret
pop
sub
or
nop
outsb
mov
repnz
jecxz
pop
test
inc
and
pop
mov
jmp
adc
leave
xchg
lcall
outsb
cli
sbb
cmp
add
mov
push
sbb
fs
wrmsr
add
sbb
mov
mov
lahf
out
subb
lods
jbe
pop
jbe
jns
imul
xor
lea
cmp
or
inc
ret
dec
sbb
icebp
sub
movsl
loop
cmc
daa
xchg
sub
test
pop
ds
or
bound
in
inc
fidivrl
adc
fimuls
push
in
xchg
pushf
jmp
mov
mov
inc
stos
leave
outsb
mov
push
xchg
fucomi
cli
imul
cmp
or
imul
test
jnp
xor
jne
push
xor
fwait
push
and
stos
jp
jmp
jbe
popf
jne
mov
inc
mov
push
sbb
inc
cmpsb
addr16
imul
lods
fistl
mov
cmp
sub
mov
inc
mov
push
xchg
repnz
fs
daa
sub
clc
scas
dec
pop
jmp
idiv
push
mov
xlat
shl
cmp
xchg
mov
ljmp
das
push
xchg
stc
mov
cmpsb
sarb
stos
push
rol
sbb
cltd
jne
ds
rol
mov
mov
xchg
and
add
dec
dec
add
je
sbb
adc
dec
push
sbb
hlt
js
mov
aas
jl
xchg
cs
or
mov
mov
addr16
fucomp
pop
inc
imul
dec
mov
fucom
mov
shlb
mov
push
xchg
mov
orl
ljmp
jmp
mov
inc
mov
push
lret
jb
sub
jle
pop
popf
jge
repz
sbb
inc
jg
adcl
mov
xchg
or
cmc
sbb
pop
jl
cmp
push
jns
dec
in
xchg
mov
add
jnp
idivl
mov
mulb
push
push
out
adc
imul
lcall
es
fcompl
jg
xor
dec
arpl
into
or
jecxz
iret
cmp
repnz
mov
dec
shll
jg
sar
jg
sbb
mov
jb
inc
pop
mov
pop
add
lods
add
pop
adc
push
jmp
lcall
repz
lods
outsb
mov
xchg
mov
push
xor
inc
rcl
femms
shr
cmp
mov
pop
sbb
gs
in
fnstenv
dec
loop
cmp
mov
dec
mov
inc
xchg
in
aas
dec
test
orl
pop
js
xor
gs
mov
pop
cltd
xchg
test
sbb
call
mov
in
mov
lods
imul
mov
daa
mov
daa
into
rcl
jmp
imul
enter
xchg
jae
adc
std
mov
fdivrl
adc
out
repz
mov
dec
lea
xchg
sbb
popa
cmpsb
cmp
hlt
stos
fnstsw
or
addr16
fisubs
mov
push
lea
cli
xchg
data16
push
push
sbb
xchg
fidivrl
pop
mov
faddl
decl
repz
push
idiv
push
fcmove
sub
test
mov
mov
adc
mov
repnz
or
xor
lret
inc
imul
or
iret
jb
mov
int3
sahf
cltd
dec
shl
adcl
sbb
or
push
pusha
mov
lea
ljmp
inc
mov
ljmp
lock
loop
mov
inc
in
mov
mov
sub
sub
push
cli
add
add
cmp
or
xchg
pushf
jge
mov
ss
inc
adc
sahf
cmp
cld
out
or
and
mov
push
cmp
into
add
adc
mov
sahf
out
stc
add
je
push
mov
mov
add
sub
pop
popf
fcmovnb
push
sbb
out
test
or
sbb
movsl
xchg
cmp
jmp
adcb
mov
out
shl
cs
sub
stc
adc
ss
lret
enter
dec
cmp
xchg
or
xchg
xor
jg
fnstsw
lea
and
xor
stos
cmpsl
mul
psubb
xor
adc
pop
outsb
or
xor
cld
fs
testl
mov
push
out
or
adc
rorb
cmp
ljmp
mov
in
ror
popa
in
cli
push
adc
imul
ss
push
jnp
push
in
jg
push
or
test
insl
lds
adc
fdivrs
xor
mov
inc
cmp
and
gs
inc
xor
xlat
test
mov
xchg
ret
cmp
push
xor
cltd
js
jbe
inc
mov
jl
mov
fidivrl
xor
sub
sub
lea
cmc
lret
mov
and
xor
into
hlt
push
pop
inc
mov
mov
mov
ljmp
cmc
or
sbb
into
scas
dec
pushf
sahf
roll
jmp
inc
inc
adc
adc
jle
rcrb
sub
subl
nop
mov
xchg
into
inc
inc
cmovo
mov
pop
into
inc
add
mov
popa
sub
insb
sahf
mov
xchg
cld
or
out
out
sbb
enter
loope
ret
pop
cli
fstpt
inc
xchg
push
lods
add
jb
cmc
cmp
jnp
mov
or
or
dec
sbb
or
xchg
ds
out
movsb
outsl
loopne
mov
mov
sub
lcall
outsl
adc
cmp
mov
mov
mov
out
mull
aas
cwtl
xchg
shll
and
popf
xchg
jmp
in
or
push
cmp
mulb
mov
out
jmp
xchg
ljmp
inc
insl
or
in
sbb
out
pop
sti
mov
aad
xchg
movsl
icebp
or
int
lea
pop
cmp
push
in
in
out
aas
add
mov
push
aas
inc
mov
inc
or
lcall
xchg
shll
loopne
fs
sub
dec
mov
enter
mov
pop
mov
out
aaa
push
mov
push
push
popa
outsb
dec
and
cmp
ljmp
add
sti
scas
mov
loope
call
repnz
insb
jb
adc
leave
lea
mov
test
addr16
aaa
out
data16
jp
rorl
dec
outsb
pushf
stc
push
xor
xchg
xor
cmp
mov
cltd
xchg
and
add
cmp
pop
push
das
cli
dec
in
leave
dec
push
addr16
jbe
add
sub
inc
dec
decl
jns
addr16
stos
jecxz
in
mov
test
lret
mov
jp
pop
push
pop
arpl
jnp
sti
aaa
xor
sbb
adc
fwait
ret
jnp
adc
pop
add
mull
test
cli
in
insl
push
add
fs
cmp
or
pop
mov
and
pusha
xchg
rcl
jecxz
sti
mov
pop
in
aad
add
pop
dec
xchg
insb
xchg
push
movsb
stos
xchg
xor
mov
or
in
inc
daa
cwtl
jae
call
or
add
jge
pop
out
push
jp
lods
ss
adc
jecxz
dec
xchg
jno
mov
stos
orl
aaa
fdivrl
test
xor
cmp
lahf
inc
cmc
xchg
insl
into
cmp
into
repnz
and
stc
fsubp
in
inc
sub
dec
arpl
es
mov
ss
out
aad
push
add
jbe
insl
push
shl
mov
jno
jp
movsb
mov
dec
or
sti
ja
cmp
mov
insb
cmp
add
jae
push
cs
pop
xchg
add
mov
cltd
pop
call
sub
lret
sbb
add
push
sti
add
pop
clc
xchg
adc
imul
in
jae
push
jge
xor
xchg
sti
xchg
in
loop
in
cltd
jge
outsl
incl
mov
mov
mov
jb
push
jmp
lds
jb
push
test
roll
stos
lret
cmp
sub
arpl
xor
out
loope
mov
jge
push
ret
je
cwtl
mov
cmpsb
mov
fld
mov
subl
pop
lods
pushf
mov
gs
hlt
inc
inc
fisubrl
dec
int3
out
scas
cld
mov
mov
inc
lahf
and
xor
stos
cmp
push
notl
faddl
dec
movsl
xor
sbb
lahf
mov
lds
xor
pop
mov
lods
cltd
cmp
fimull
pop
or
fistps
add
pop
stos
sub
push
pop
dec
or
mov
push
push
cmp
ficoml
jmp
leave
or
xorl
inc
sti
xor
xor
sbb
jmp
ds
subl
jp
cmp
testb
aam
pop
lret
lret
inc
cmp
mov
pop
test
jl
dec
ljmp
push
pop
or
int
xor
pop
and
cmp
loopne
jl
pop
lods
or
jns
or
daa
mov
mov
mov
stos
jae
xor
xor
mov
ret
jb
mov
adc
lea
imul
jne
push
or
out
pop
fs
cmp
or
repz
movsb
xchg
push
std
mov
mov
das
xchg
lret
dec
pop
inc
pop
xchg
cmp
add
xor
xchg
xor
dec
test
xor
in
mov
pop
pusha
push
jbe
or
mov
push
sti
stos
leave
test
sbb
outsb
adc
pop
push
xor
ljmp
test
insl
out
or
mov
cmp
xchg
add
lret
mov
pusha
mov
xchg
mov
enter
pop
jle
out
sbb
dec
dec
inc
gs
mov
xor
cld
mov
inc
out
xchg
out
lods
jbe
cwtl
andnps
aas
dec
or
and
arpl
addl
cmpsb
push
in
sub
call
ud2
sub
mov
push
cmp
jge
sub
xchg
push
insb
xor
in
lods
sbb
push
push
ror
jg
arpl
gs
dec
push
gs
dec
movsl
and
lret
imulb
or
add
inc
add
mov
jmp
stos
es
mov
jbe
imul
pop
adc
icebp
and
sarb
or
jecxz
dec
and
jecxz
push
xlat
pop
psubsb
mov
sub
fldcw
shrl
mov
mov
dec
jnp
lea
cmpsb
add
pop
fisubrl
jmp
push
jo
mov
push
sbb
test
mov
or
imul
pop
pop
or
ja
mov
pop
pop
inc
jecxz
fnstcw
mov
add
and
fidivrl
out
int3
fistpll
dec
fwait
popa
nop
dec
lret
scas
xchg
popa
inc
mov
mov
xchg
lods
jns
jp
lret
pop
jmp
cwtl
sbb
ljmp
imul
ret
scas
cmp
insb
pusha
lock
jle
es
imul
inc
add
je
cmp
outsl
mov
pop
stos
mov
test
call
imul
xchg
dec
xor
cmp
scas
adcb
fsubs
ljmp
mov
leave
cmp
fdecstp
push
dec
mov
sub
in
sarb
dec
add
sbb
test
or
add
in
out
cs
and
mov
daa
repz
mov
subb
dec
gs
pop
aam
dec
out
sub
dec
jns
mov
cmc
cmp
mov
lret
push
or
cli
push
xchg
and
leave
sahf
jnp
fucomp
sbb
cli
xchg
leave
xchg
addr16
xor
push
mov
cmp
jecxz
xchg
push
or
xchg
fst
pusha
jg
add
or
pop
movb
dec
adc
fiaddl
pop
ljmp
cmc
push
sahf
mov
cmp
mov
divl
pop
xor
cmp
sub
xchg
cli
sbb
inc
repnz
pusha
mov
xor
xor
push
jns
dec
push
adc
mov
ss
push
or
fcompl
outsl
cmovae
out
neg
repz
pop
lret
pop
and
lea
clc
cmpsb
push
leave
mov
xorl
or
push
push
xchg
enter
adc
mov
lahf
je
sbb
or
mov
adc
xor
mov
hlt
adc
push
or
fwait
out
jae
sbb
dec
fbstp
pop
rol
push
lcall
lods
add
cmp
scas
push
mov
psrld
sub
cmp
pop
mov
push
bnd
flds
stos
xchg
out
xchg
das
inc
mov
sbb
push
cmpsb
insl
mov
xor
push
iret
or
mov
test
push
stc
call
sbb
mov
les
dec
rcrl
and
hlt
pop
cmp
and
pop
inc
or
jle
psubq
xor
inc
lret
cmc
jmp
subb
xchg
dec
sbb
xchg
jp
adc
xchg
testl
pop
sbb
add
mov
lcall
mov
les
or
pop
add
mov
aas
les
mov
sbb
bound
repnz
sahf
add
mov
imul
cmp
adc
sub
mov
jmp
cmc
mov
push
stos
mov
dec
add
push
stos
add
or
in
sub
cmp
pop
adc
ja
dec
sbb
add
in
sub
mov
pusha
mov
mov
add
ss
pop
sub
dec
or
shrb
jns
mov
testl
xor
jno
mov
xchg
lcall
push
pushl
sbb
int
xorl
sbb
hlt
xor
cmp
hlt
mov
in
sbb
notb
imulb
mov
xchg
jp
push
pop
push
push
int
les
sub
pop
cmp
daa
push
inc
outsl
shrb
mov
loopne
out
mulb
push
sub
pop
cmp
inc
cli
jg
lcall
test
ja
add
cmp
pop
ljmp
hlt
mov
imul
sbb
imul
test
enter
add
xchg
or
test
mov
loope
cmp
scas
in
pop
jns
or
aas
mov
push
mov
mull
dec
add
xlat
mov
or
jns
fs
xchg
xchg
cmp
jl
maxps
jg
dec
mov
das
out
lods
cli
lods
mov
aas
mov
int3
add
mov
mov
add
cmp
cli
and
sub
insl
push
add
sbb
add
sahf
fldenv
pop
shll
sub
lods
jmp
jp
mov
and
pop
mov
push
into
shl
mov
mov
cmp
push
fs
sub
mov
jge
je
cli
dec
push
add
mov
cs
cmp
gs
push
test
xor
lcall
mov
pop
push
popa
pop
sub
mov
popa
rorb
fmuls
xchg
hlt
adc
idiv
and
rorb
shll
bound
mov
xchg
aaa
pop
push
ljmp
push
sub
movsb
popa
add
inc
mov
sub
cs
idivl
xor
xchg
in
popf
mov
adc
pop
leave
mov
mov
movsl
loope
rorl
cld
pop
pop
jl
jmp
leave
inc
push
adc
jp
in
out
push
loopne
xor
test
fisttpl
xchg
add
push
ret
mov
cld
adcl
test
sahf
pusha
push
jmp
fsubrl
dec
cs
xchg
jae
inc
jne
jnp
push
mov
jmp
roll
xor
das
les
mov
iret
fwait
sahf
mov
dec
or
pop
clc
cmp
aaa
test
add
cli
cmpsb
cmp
dec
fdivrl
std
arpl
dec
cli
fidivrl
xchg
cltd
cmpsb
xor
xchg
xor
inc
adc
lods
aas
arpl
lret
stos
ss
inc
aas
popf
scas
les
icebp
jecxz
jmp
jg
or
iret
fsubrl
ja
pop
xchg
or
jg
es
ret
push
jecxz
or
push
sub
xchg
sbb
pop
add
ret
sbb
jb
icebp
test
add
iret
xchg
jp
cmp
fcmovu
stc
mov
xor
pop
stos
cmp
adc
cmp
int3
jmp
xorb
test
lea
testl
jns
out
into
lea
jb
mov
sbb
mov
xchg
add
outsb
pop
mov
mov
mov
iret
mov
cli
ret
sbb
sbb
pop
lock
nop
mov
pop
mov
fidivs
jmp
int
or
and
mov
stos
mov
test
test
insl
mov
add
orb
mov
testl
inc
xor
ret
push
jg
xor
xchg
mov
push
add
and
sub
mov
dec
pop
rclb
cmp
mov
int3
aad
add
and
les
cmp
xchg
jmp
imul
fstpl
call
xchg
mov
outsl
call
fnstsw
sbb
or
lods
push
xchg
cmp
mov
movsl
in
orb
or
test
arpl
je
push
sbb
in
leave
das
inc
fnsave
enter
mov
out
mov
iret
xor
outsb
stos
test
jb
or
out
adc
fsubl
sti
add
push
in
into
jle
mov
or
dec
pop
lret
fidivrl
or
sub
push
ljmp
cli
mov
cmp
mov
cmp
mov
cli
xchg
cmp
sub
or
mov
mov
in
lcall
stos
subl
out
sub
fwait
pushf
mov
xchg
cmp
movsb
sbb
adc
scas
sti
jns
adc
out
icebp
imul
out
or
or
push
dec
ret
ss
outsb
mov
mov
or
repz
ret
das
mov
mov
and
outsb
imul
cmpsl
fucomi
cwtl
xchg
enter
pop
or
outsb
or
repz
loop
ret
stos
scas
xchg
push
aas
jp
mov
sbb
add
decl
mov
ja
dec
rcll
das
dec
vmread
mov
je
mov
dec
mov
jmp
ljmp
mov
or
jmp
data16
push
or
in
xor
push
lcall
sub
or
mov
scas
rorl
mov
xchg
jno
mov
xchg
in
and
push
or
arpl
outsl
mov
scas
lock
paddd
lcall
jbe
movsb
mov
mov
lcall
int
sub
scas
xchg
jne
ljmp
lods
aas
fistpl
mov
out
rolb
or
and
sub
lcall
rclb
int3
sub
and
adc
jbe
cmp
and
lret
mov
or
mov
dec
es
pusha
outsb
sub
outsb
int3
mov
je
hlt
pop
push
dec
or
mov
push
xor
xchg
ja
jnp
xor
mov
and
inc
push
stos
jb
mov
insb
dec
push
out
pop
xor
stos
fwait
push
pop
idiv
repnz
lahf
mov
out
xchg
mov
lods
mov
push
push
cmpsb
and
mov
ret
inc
mov
push
scas
sub
dec
imul
shrl
cli
push
cmpsb
aaa
lret
or
das
sbb
sub
int3
out
scas
xor
dec
sbb
sub
push
cltd
clc
mov
int
xchg
adc
inc
push
sub
and
sub
jo
lods
jge
jno
push
cld
jno
jbe
push
es
lods
mov
cmp
mov
cmpsb
mov
mov
cs
mov
sahf
popa
lcall
cmp
pushl
cmpb
cs
push
adc
inc
push
mov
jb
sub
or
call
adc
push
cmp
test
ret
dec
outsb
repz
bound
cs
ffreep
js
push
aad
aam
ficompl
ds
xchg
mov
imulb
sbb
add
push
pop
or
divb
mov
mov
psrlq
inc
jnp
ret
lods
push
sbb
cmp
clc
xchg
inc
ljmp
inc
inc
xor
push
adc
sbb
in
sub
and
ljmp
add
lret
add
pop
xchg
dec
cmp
mov
push
mov
pop
pushf
push
xor
jmp
addr16
popa
gs
dec
negl
sub
adc
test
cli
xchg
inc
push
push
dec
pop
cltd
rcll
push
mov
test
stos
sub
dec
or
neg
ja
cmc
in
scas
add
bound
pop
mov
sub
and
mov
inc
add
movsbl
xchg
lods
dec
cmp
in
inc
mov
push
inc
arpl
pop
into
push
jbe
mov
stc
lcall
ffree
sbb
mov
push
xlat
push
movsb
sbb
xlat
xor
mov
mov
into
or
dec
push
into
mov
inc
jmp
ljmp
adc
fucomip
adc
push
cld
jne
cmp
sbb
imul
mov
sub
or
cmp
stos
test
jno
outsb
js
xor
inc
mov
inc
push
lahf
repz
sar
xor
insl
addr16
jle
fldt
out
call
adc
pop
icebp
cmp
dec
lret
pop
xchg
shll
mov
adc
xor
xor
add
sarl
into
out
popa
ljmp
jb
inc
ret
push
inc
inc
xchg
pop
cmpb
inc
in
fcomps
sub
xor
mov
popa
cmp
call
cli
stos
pop
fldl
ret
iret
mov
or
mov
insl
sbb
add
jmp
cwtl
pop
inc
push
cmpsb
sbb
icebp
add
cmp
mov
cmp
inc
mov
or
movsb
ret
pop
and
add
ss
mov
mov
movb
ds
pop
pop
in
fcomps
add
mov
jecxz
mov
roll
sbb
sbb
ljmp
dec
mov
and
mov
cltd
aam
cmp
out
mov
adc
pop
mov
xor
inc
sub
iret
ds
test
or
add
ljmp
adc
stos
xchg
or
decb
rcrl
ret
xchg
cmp
cmpsb
adc
fistl
mov
sti
jecxz
sbb
sub
mov
xor
sahf
push
arpl
out
dec
clc
mov
add
xchg
jp
or
repnz
shl
into
or
dec
jo
xor
pop
adc
lret
mov
cmp
stc
sub
nop
scas
dec
dec
pop
jne
cmp
shl
scas
xchg
sbb
or
xor
xchg
xor
push
and
leave
les
imul
inc
xor
pusha
cmpsl
mov
fiaddl
stos
fmulp
mov
sbb
push
fidivrl
mov
lret
push
mov
popa
push
or
jge
movsb
xchg
inc
or
mov
xchg
sub
sahf
cmpsl
sbb
add
test
pushf
loop
inc
sbb
add
mov
or
into
mov
imul
or
mov
jp
scas
sub
popa
hlt
or
sub
xor
sub
shll
mov
xlat
cmp
sarb
stos
andb
cs
xchg
fisttps
cmc
mov
es
ss
ret
mov
jmp
sbb
or
pop
scas
mov
test
fcomps
mov
or
xchg
jns
stos
aam
push
subl
ds
dec
rol
daa
mov
mov
fimuls
in
push
push
pop
push
cmpl
mov
xchg
daa
imul
and
push
ljmp
push
and
cmp
xchg
mov
pop
sbb
mov
sbb
inc
lret
and
sbb
cmpb
je
and
xlat
mov
or
int
pop
rcrl
rcl
dec
ret
aas
mov
nop
jae
sahf
pop
loope
imul
test
inc
cmp
jbe
mov
jg
xchg
cmp
or
rorl
mov
and
dec
sub
inc
sbb
mov
ljmp
xchg
dec
or
cmp
jl
jge
je
out
imul
and
data16
mov
cmp
lcall
mov
mov
test
aas
push
push
push
dec
jg
push
xchg
jns
xchg
lods
test
mov
xor
adc
mov
jp
testl
insl
adcl
bound
or
dec
ds
cld
and
or
mov
mov
outsb
lahf
stos
push
stc
jmp
add
mov
xchg
les
test
mov
inc
test
scas
inc
mov
push
popa
fbstp
adc
adc
pop
push
xchg
in
out
scas
push
jne
daa
xchg
and
xchg
lock
jp
cwtl
adc
insb
sub
movsb
push
xor
std
rcrb
popa
ja
pop
call
es
mov
pop
icebp
xorb
sub
xor
fisubs
adc
jge
push
sbb
pop
and
ljmp
dec
or
xchg
jnp
mov
sbb
inc
or
sbb
cld
cmp
pop
xchg
les
sti
dec
dec
arpl
std
or
dec
mov
stos
data16
movsb
and
push
push
adc
push
aas
mov
cmp
dec
sbb
scas
pop
push
ss
rcll
loope
mov
ret
push
cmpsb
sub
outsl
xor
loop
mov
clc
stos
jecxz
aaa
in
or
or
into
movsb
or
mov
scas
jae
dec
dec
fimull
lret
xchg
jo
or
ljmp
dec
lret
int3
xor
scas
and
lahf
ljmp
lods
fstps
dec
cmpsl
jb
or
sub
or
xchg
adc
sbbl
cmp
jmp
stc
lret
mov
lret
into
push
cmpl
or
xchg
mov
push
in
mov
xchg
roll
popf
sub
or
jg,pt
ror
je
cmp
popa
and
rcr
push
xchg
and
mov
movsb
mov
lock
inc
popa
xorl
inc
arpl
cs
lcall
imul
xor
out
inc
xor
cmp
rcl
inc
xchg
push
xor
repnz
pop
pop
lahf
stos
scas
aas
lret
adc
add
js
adc
sbb
incb
add
xchg
ret
rolb
aaa
xchg
sub
adc
lock
imul
xchg
adc
pop
push
popa
xchg
push
mov
pop
stc
in
inc
push
in
inc
mov
testl
mov
pop
sub
lret
xlat
ljmp
add
ja
jg
push
push
sti
push
dec
scas
adc
mov
pop
fwait
sarl
xor
add
pop
mov
out
fwait
ret
sbb
dec
sub
pop
jg
push
cmp
push
sub
cmp
ja
shrl
and
mov
and
pop
jnp
push
jle
jmp
push
ss
dec
int
xchg
xchg
mov
inc
jb
or
cld
add
aam
mov
and
jnp
cli
or
in
push
ds
das
xor
or
mov
or
xor
mov
pop
sbb
flds
stc
push
mov
xchg
cmp
fldt
in
push
out
mov
enter
jmp
and
jnp
sub
leave
cmp
icebp
pusha
cmp
insl
lret
jb
cmp
in
pop
out
call
sbb
lret
arpl
aam
mov
mov
jns
fidivrl
pop
inc
push
jno
xor
in
inc
pop
jmp
das
stos
push
cmpsl
call
add
push
mov
daa
insl
inc
push
or
int3
mov
mov
enter
repz
fstl
cld
add
or
mov
movsb
or
mov
sti
rorb
lcall
adc
stos
mov
mov
mov
xor
and
lcall
xor
xor
inc
add
sti
jnp
mov
repnz
clc
mov
rcll
testb
inc
jns
cltd
xor
aam
dec
insl
es
fidivrs
int
into
cld
push
or
xlat
mov
loop
ret
nop
push
jl
and
mov
pop
cli
sbb
fwait
jno
push
sarb
pop
ds
push
fnstsw
mov
sbb
and
mov
mov
xchg
clc
xor
mov
stos
pop
cmpsl
adc
xchg
es
push
mov
or
dec
jle
inc
imul
addr16
jbe
sub
rep
sarl
gs
jg
xchg
jp
inc
int3
xchg
adc
xchg
inc
sub
adc
fdivrs
xor
ds
lock
mov
js
mov
inc
cmp
or
lea
out
dec
aam
dec
in
dec
pop
imulb
ljmp
es
sbb
inc
or
out
icebp
sahf
xor
in
arpl
dec
scas
ret
fdivrs
sarb
hlt
mov
xor
push
sbb
sbb
lret
xchg
push
scas
fwait
inc
mov
add
xor
push
push
aas
scas
xchg
and
mov
add
xor
aaa
test
cwtl
repnz
mov
pop
push
mov
sub
dec
sub
cmp
push
stos
sub
jnp
lods
sbb
xchg
imul
mov
fidivl
or
pop
and
int3
inc
push
fnsave
pushf
and
jg
xor
cmp
add
popa
ss
mov
mov
out
xor
loop
cs
sub
flds
or
lcall
pop
or
xor
rorb
popa
in
test
xor
mov
mov
and
or
adc
inc
pop
jo
mov
ljmp
or
iret
outsb
xor
lods
enter
sahf
cmp
jnp
out
stos
push
sbb
jae
outsl
jge
xchg
xchg
mov
in
dec
es
scas
stos
or
jp
movsb
xor
or
inc
push
int3
loop
test
inc
push
dec
xchg
pop
mov
sarl
jmp
or
cli
mov
dec
pop
xor
sbb
xor
pop
ret
or
rep
arpl
mov
mov
or
inc
dec
and
pop
cmp
push
inc
bound
and
mov
xor
and
adc
sbb
jg
push
mov
xor
pusha
pop
cmp
shlb
or
mov
flds
call
cmp
adc
or
jmp
loopne
sub
inc
das
cmpsl
push
in
pop
xchg
cltd
or
mov
sub
ss
and
add
sbb
lcall
cmpsb
cltd
sub
pop
cmp
sbb
pop
stc
enter
xlat
dec
pop
out
inc
sub
fsubrs
cmpsb
jg
loope
mov
xchg
jb
imul
xor
addr16
xlat
xor
repnz
sbb
sti
push
sbb
in
call
sub
mov
repnz
sub
sbb
mov
outsl
jmp
lret
cmp
bound
imul
jb
into
cmovp
adc
fimuls
mov
dec
arpl
xchg
inc
jle
stos
in
sbb
sub
adc
jl
mov
stos
jp
mov
add
arpl
jmp
mov
jb
or
inc
lret
jmp
pop
into
or
xor
mov
xor
xor
shrl
xor
lea
ret
cli
mov
push
xor
or
fst
lods
test
out
xchg
imul
inc
aad
mov
xchg
add
clc
hlt
jecxz
mov
inc
xchg
mov
adc
aas
ret
xchg
ljmp
inc
sti
mov
jl
push
adc
jb
sbbb
ja
loopne
xor
sub
xchg
jne
int3
push
jecxz
fildll
pushfw
imul
dec
mov
cmp
xor
mov
inc
push
xchg
mov
jmp
inc
or
add
push
into
fwait
in
aas
push
cmp
inc
inc
aam
ret
mov
sahf
jns
cmovnp
ja
in
xchg
addr16
scas
test
or
jp
lret
or
nop
subl
or
int3
cmp
mov
ljmp
sbb
jmp
test
ja
cmpsl
jo
mov
stos
jmp
xor
cltd
mov
jnp
leave
push
sahf
push
xchg
mov
xor
push
imul
jnp
push
xlat
push
mov
pop
stos
adcl
push
xchg
mov
xchg
jecxz
dec
pop
jmp
jbe
jle
data16
lcall
xchg
adcb
mov
mov
sarl
push
mov
scas
sbb
jmp
and
mov
int
sbb
lds
je
xchg
add
cmp
xchg
lcall
gs
mov
lahf
iret
data16
xor
pcmpgtb
les
mov
cli
fldenv
mov
in
in
lahf
ja
xchg
leave
mov
sub
jge
icebp
aas
dec
iret
adc
imul
inc
repnz
faddp
xor
adc
push
stc
ljmp
and
insl
or
cmp
or
aas
lret
ss
jne
mov
cmc
and
lret
sbb
and
lock
outsl
xor
sbb
cmp
or
xor
xchg
popf
mov
and
jns
cmpl
cmp
jmp
and
in
imul
xor
or
out
repnz
pop
and
dec
repnz
outsl
popa
cmp
dec
leave
shll
push
int3
test
cmp
jg
cmpsl
mov
mov
push
add
add
xchg
icebp
addl
mov
shlb
pop
dec
testb
scas
lods
daa
mov
jecxz
xchg
push
sbb
add
mov
push
push
pop
or
xchg
jmp
pushf
jge
pop
imul
sub
movsb
aad
or
jg,pn
xchg
pop
mov
add
xor
fs
lret
mov
sti
scas
loopne
fdivrs
or
mov
adc
mov
mov
add
lret
es
loop
xor
sbb
repz
in
fdivl
sub
mov
lahf
jge
mov
sahf
or
fmuls
idivb
pusha
add
or
jle
fimuls
daa
mov
sub
pop
stc
idivb
loope
ret
dec
add
dec
or
pop
test
add
xchg
pop
mov
mov
add
gs
jl
xchg
add
ljmp
movsb
fstps
inc
fnstenv
int
jge
shl
call
mov
push
xlat
daa
cmp
cmp
fidivrl
aas
push
pop
mov
cmpsl
jmp
adc
insl
xor
or
imul
dec
xlat
sub
cs
or
push
mov
test
mov
dec
and
repnz
jle
negl
into
outsb
outsl
xor
ss
pop
jle
ljmp
inc
fnstcw
jecxz
imul
jp
mov
jb
sub
or
xlat
sbb
ljmp
dec
testb
push
fstps
mov
aas
fnstsw
sti
push
rcrb
cli
sub
inc
xchg
shrb
mov
cmpsl
xchg
fldcw
stos
imul
cs
in
mov
jns
test
insl
xor
pusha
ret
sub
ficoml
inc
or
mov
add
mov
mov
mov
popa
stos
push
xchg
mov
shll
jns
push
mov
mov
dec
jbe
and
test
push
pop
push
mov
cmp
sub
fisubrs
inc
and
popl
shr
jns
int3
lret
xchg
outsb
in
add
ljmp
je
outsl
sbb
mov
dec
scas
das
jno
dec
cltd
push
xchg
mov
fadd
sbb
or
into
add
lea
mov
stc
out
lret
ffreep
mov
outsb
jo
or
imul
mov
enter
push
and
jbe
scas
outsl
mov
arpl
or
adc
pop
cli
mov
and
outsb
mov
sub
sbb
xor
imul
incb
push
mov
sbb
push
popf
adc
mov
dec
sub
out
les
sub
hlt
das
invlpg
testb
sub
and
aaa
sbb
imul
jge
fimuls
inc
sbb
das
sub
or
sub
pop
or
sbb
out
test
xchg
ret
scas
scas
stos
gs
push
jge
or
dec
sbb
cli
push
xor
adc
inc
mov
stos
cmp
mov
out
notb
test
lcall
sub
mov
and
icebp
test
popf
sub
ljmp
bound
jb
push
scas
mov
iret
into
inc
fcmovbe
sub
or
out
inc
outsl
int3
sub
xchg
jae
cli
push
ljmp
or
enter
test
xor
mov
push
aaa
or
testb
rorb
mov
xor
push
jecxz
ja
test
sbb
jmp
ret
sarb
sbb
inc
repnz
add
dec
push
shll
mov
dec
lods
jmp
pop
test
push
or
mov
mov
jmp
lret
xor
lret
or
fisttpl
stos
test
mov
dec
lock
and
jecxz
loopne
pop
inc
pop
push
and
lret
cs
sub
aas
xor
lcall
mov
jmp
lcall
loope
adc
add
mov
repnz
rcrb
and
mov
cmp
xor
loopne
popa
fildll
xorl
pop
pop
je
aas
push
shrb
movsb
add
repnz
dec
jo
enter
leave
cmp
dec
mov
sbb
aad
cmp
sub
mov
rclb
fists
mov
adc
pop
push
jns
adc
mov
add
int
scas
mov
jne
xor
cmp
mov
pop
dec
enter
cmp
fldcw
ljmp
xor
test
jmp
add
push
push
adc
jns
pop
jecxz
clc
xor
xor
pop
ss
mov
cmpsb
dec
or
int3
mov
mov
call
test
in
sbb
repz
or
xor
sbb
dec
fsubrp
pop
nop
fnsave
xchg
mov
add
fdivrp
and
sub
mov
or
pop
ljmp
fimuls
fchs
mov
out
dec
fsubrl
xchg
in
fadds
push
adc
push
stos
cltd
roll
test
lea
xchg
jns
dec
shrl
fidivs
sub
xchg
shll
push
mov
and
fcomp
adc
int
mul
add
pop
mov
mov
iret
cs
sbb
mov
and
xor
jne
mov
jecxz
inc
daa
dec
aam
and
add
pop
fnstsw
xchg
xor
cmp
mov
cmpsb
or
pusha
cmp
fstpt
xor
cmp
mov
dec
and
insb
inc
pop
xor
add
js
test
js
push
out
loop
mov
fs
imul
xchg
test
arpl
adc
adc
loopne
lea
test
popf
pop
incl
add
cmpsb
fstl
imul
movsl
inc
leave
xchg
jb
cmp
int3
cmp
cmpsb
repnz
insb
rolb
mov
mov
add
mov
in
mov
ret
dec
popa
ret
aas
cmpsb
mov
shr
fcomps
inc
jnp
sub
pop
mov
push
popf
enter
pop
sub
jg
sbb
out
or
out
dec
push
xchg
or
mov
cmp
or
out
fnsave
in
arpl
out
sbb
dec
lcall
bound
or
sbb
scas
cmp
aad
repnz
dec
out
aad
out
mov
in
stos
cli
loopne
ret
mov
fadd
loop
sub
mov
fnstenv
xchg
lcall
mov
sahf
test
push
imul
xor
leave
testb
or
and
mov
inc
xchg
sbb
icebp
sbb
and
out
inc
shr
sbb
push
insl
pop
in
lods
pushf
dec
push
sbb
mov
pop
sar
jmp
sahf
and
out
mov
jge
rcl
xchg
xor
ficomps
xchg
inc
lea
cmp
repnz
ljmp
xchg
or
adc
mov
das
movsb
mov
adc
push
addl
icebp
scas
movsb
and
pop
popa
out
icebp
inc
xchg
shrb
addr16
in
es
cmp
and
inc
xor
and
in
pop
push
cltd
inc
xor
jmp
lods
push
in
cld
repz
push
or
mov
movsb
and
call
cwtl
pop
mov
pop
xor
lret
in
clc
dec
ljmp
sbb
mov
adc
jmp
mov
pop
jle
movsb
in
cwtl
int
insb
es
sbb
out
repnz
and
rcrl
lods
cmp
cmp
out
and
psrad
mull
outsb
lret
lods
lcall
push
xor
repnz
pop
pop
jne
cmp
push
mov
in
fstpt
xchg
xchg
jnp
repnz
fadds
xchg
idivl
xorl
lret
sbb
jnp
fldenv
popa
mov
push
adc
stc
test
jg
test
jl
dec
dec
and
gs
jmp
xor
enter
rcl
ret
dec
mov
mov
lods
nop
loop
dec
jno
ja
xchg
cmp
dec
cmp
xchg
xchg
mov
sbb
shl
cmp
gs
test
imul
cmp
dec
ljmp
mov
loope
std
test
scas
dec
ljmp
push
jnp
js
es
std
dec
outsb
stos
hlt
sbb
dec
movsl
fistl
cmp
adc
sub
clc
fs
stc
scas
adc
mov
sbb
iret
xor
cmc
mov
fmuls
lea
cmp
rolb
lea
es
or
jecxz
icebp
pushl
or
sbb
repnz
ds
xor
jg
leave
jnp
mov
stos
xor
inc
xorb
imull
sbb
out
dec
xor
pop
mov
inc
test
cld
push
mov
cli
fs
divb
lods
dec
and
dec
loope
repnz
mov
int
mov
push
scas
push
dec
mov
out
jnp
testl
mov
movsl
xchg
sbb
daa
xchg
xchg
call
xor
pop
sbb
mov
push
mov
jne
jnp
cmc
aam
add
lret
or
xor
pop
popf
lods
cmpsl
mov
push
lock
stc
cmp
notl
fadds
bound
xor
decb
cld
push
mov
inc
fsub
jnp
bound
dec
inc
es
mov
out
out
push
cwtl
lea
xor
and
stos
jnp,pn
and
fisttps
cli
jb
fcmovnu
mov
xlat
cmc
fiaddl
mov
or
rorl
testb
sub
mov
cmp
inc
pop
pop
pop
adc
mov
fstpl
imul
push
jne
stos
or
lea
cs
sub
cmp
test
cld
out
jl
mov
leave
mov
push
mov
out
pop
add
adc
aad
mov
jbe
in
mov
ficompl
push
sub
lcall
jg
xchg
mov
jnp
xchg
mov
ret
stos
adc
push
out
sbb
jg
rorb
inc
idivl
mov
dec
pop
xchg
clc
cmp
aas
mov
inc
cld
inc
xchg
mov
mov
push
scas
in
pop
aas
sbb
pop
xor
mov
stos
notb
push
xor
fisubrl
out
data16
push
mov
das
cwtl
push
sarl
repz
pusha
andl
xchg
cld
stos
insl
or
sbb
mov
out
rcr
pop
adc
loope
xchg
dec
sbb
lret
adc
jne
push
jnp
fldl
inc
push
jmp
adc
mov
fdivrl
add
gs
cmp
mov
add
scas
nop
xchg
sti
out
or
cmp
mov
scas
pop
ljmp
add
hlt
adc
prefetch
mov
and
inc
arpl
xor
enter
xlat
add
jp
or
mov
pcmpgtd
or
push
insl
rcll
pop
cmp
push
sub
cld
xor
pop
ret
mov
add
jge
fwait
sbb
adc
xchg
lods
adc
xchg
mov
jg
pminsw
xor
pop
out
out
or
lret
lea
das
xchg
and
or
sbb
add
xchg
sub
xchg
and
lcall
nop
xor
std
outsb
jle
fidivs
inc
add
pop
push
lret
daa
repnz
dec
push
ljmp
pop
subl
sub
sub
jp
push
in
insb
outsb
jmp
fstl
sub
out
mov
xchg
cmp
cmp
mov
jb
daa
push
push
mov
mov
mov
filds
sub
add
fldcw
add
cmp
cmp
out
xor
mov
xor
aaa
sbb
lods
inc
pop
mov
negl
lock
lea
loopne
sbb
lock
sbb
test
out
mov
jp
pop
push
dec
scas
cmp
popa
cmp
ljmp
lcall
or
addr16
jno
push
sub
mov
sahf
jecxz
inc
mov
push
fldt
xorl
jo
push
aaa
ljmp
js
xor
shr
ss
adc
xor
jns
and
pop
xchg
sub
mov
test
out
cwtl
in
jmp
xor
das
loopne
push
pop
adc
adc
cmp
in
dec
sub
scas
fisubs
pop
cltd
lret
adc
or
jo
pop
lcall
push
sbbl
jge
fidivl
shrl
xchg
push
cmp
imul
aad
add
cmp
fwait
mov
scas
push
lcall
gs
push
sub
push
mov
enter
or
mov
pop
jp
cmp
or
test
and
pop
xchg
mov
lret
test
adc
mov
push
inc
dec
filds
js
lock
cmp
pop
subb
repnz
dec
jg
jle
or
jp
sbb
pop
in
repnz
or
xchg
insb
xor
scas
cs
mov
jns
sub
lret
repnz
test
xor
and
insb
add
or
mov
xor
daa
stos
mov
xchg
in
into
push
xchg
cltd
cli
push
les
nop
pop
pop
dec
mov
cmp
mov
cltd
sbb
mov
jns
clc
jnp
mov
add
and
mov
mov
xchg
out
mov
dec
inc
jnp
call
and
sbb
cld
xchg
imul
mov
repnz
cmp
jg
mov
jb
mov
dec
or
xchg
pop
xor
mov
jge
ss
push
shll
or
test
xor
out
xor
dec
mov
cli
sbb
adc
dec
xor
jmp
imul
push
pop
insb
stos
xlat
cs
dec
jbe
popf
mov
and
pusha
sbbb
jns
mov
lcall
cmp
xchg
mov
push
fidivs
jnp
add
xchg
dec
mov
mov
test
outsl
ds
adc
push
clc
xor
out
adc
stc
mov
fimull
sbb
pop
xchg
pop
pop
or
or
xor
push
imul
add
add
or
sarl
xor
jns
jp
lret
pop
mov
imul
lret
lcall
sbb
xorps
cs
push
xor
das
mov
jmp
mov
xor
out
sbb
push
sbb
addr16
gs
mov
sbb
and
add
jo
cmp
xor
fnstenv
stc
fists
xorl
stc
xchg
mov
mov
fdivrl
movsl
or
fimull
movsl
cli
arpl
bound
pop
gs
imul
xor
xor
enter
sbb
icebp
jg
xlat
pop
jns
sbb
xor
in
or
jns
adc
and
sub
or
push
inc
mov
fbld
ror
push
mov
into
ss
ds
cmp
addr16
push
popa
cmp
mov
inc
repnz
mov
dec
cs
and
pop
xchg
jg,pt
ljmp
jb
pop
fst
xchg
push
hlt
repz
test
aam
nop
cli
imul
divb
fs
xchg
pop
inc
cmp
shrb
testl
nop
xor
xor
xchg
arpl
jecxz
push
mov
cmp
xor
lock
mov
jge
mov
pop
outsl
or
push
jbe
lahf
jns
addb
sbb
mov
mov
rolb
test
pop
adc
fbld
lcall
pop
push
sbb
or
cs
fistl
fmull
sbb
cs
xorl
lea
push
or
test
xchg
inc
ljmp
inc
lret
lcall
js
cmpsl
inc
mov
into
cltd
inc
fnstenv
mov
xor
cmpsb
out
ret
sub
jecxz
mov
or
mov
add
mov
mov
dec
or
adc
ficompl
jne
or
mov
cmp
in
xor
loop
or
test
push
pop
aas
adc
negl
ret
sub
pusha
mov
adc
mov
lcall
cmp
or
jnp
jp
add
repnz
push
push
into
or
push
data16
xchg
stc
out
testb
pop
inc
mov
les
daa
popa
push
negl
gs
jg
fdivl
dec
insl
sbbl
push
jg
mov
imul
mov
sbb
rol
arpl
jg
dec
or
cmp
into
mov
test
pushw
daa
adcb
addr16
sbb
cmp
aas
mov
setbe
jno
in
int3
cmp
notl
fistl
roll
or
sbb
cmpsl
jne
push
icebp
cmp
outsb
sub
push
xor
pop
xchg
jle
push
ror
gs
sub
out
and
repz
and
cmc
fs
add
or
shl
hlt
and
jmp
xor
addl
mov
push
or
inc
mov
cmp
repnz
lcall
jmp
loopne
sbb
repnz
sbb
pop
nop
push
les
out
mov
outsl
mov
push
cwtl
push
or
cli
mul
mov
mull
nop
mov
or
mov
adc
push
movsl
stos
xchg
dec
dec
loop
test
cmp
push
jg
dec
jg
lods
lods
stos
cmp
inc
pop
cmp
insl
push
cmpl
xchg
faddp
inc
roll
pop
jg
js
and
loop
cli
cmp
xchg
dec
popf
out
in
cli
mov
xchg
jno
pop
inc
sub
insl
into
mov
mov
sahf
cmp
bnd
hlt
mov
out
xlat
cli
jl
lret
lods
adc
scas
aas
lods
xor
cli
sbb
dec
das
cmp
jo
testl
xchg
ss
pop
adc
scas
loopne
mov
mov
lods
xor
in
pop
ds
or
sbb
sbb
sub
xchg
xor
loopne
or
xor
clc
adc
cmp
test
ret
inc
push
and
lods
cmpsb
cmp
mov
ds
call
jg
fisttpl
add
clc
repnz
sar
mov
loope
jle
push
outsl
or
stos
xchg
fmull
cmp
cmp
sbb
das
bound
ljmp
push
inc
les
push
xor
loop
in
add
fwait
adc
xchg
ficoms
outsb
fistps
add
mov
add
repnz
jg
mov
lret
sbb
xor
inc
push
or
sbb
scas
inc
in
and
sub
cmc
jnp
pop
leave
imul
cli
adc
idivb
repnz
nop
jno
push
dec
jo
sub
mov
stos
cmp
jmp
sub
jecxz
push
pop
push
ss
xchg
lock
and
mov
mov
cmp
xor
cmp
push
xchg
mov
xchg
or
mov
stos
in
addr16
pusha
mov
adc
int
add
mov
inc
arpl
adc
cmpsb
push
lock
or
sahf
mov
and
notb
call
cltd
add
fdivrl
call
pop
jb
push
jbe
mov
lock
sbb
add
fdivrl
sbb
jp
mov
std
cmp
mov
pop
and
and
pop
ret
inc
pop
adc
dec
and
xor
gs
repz
mov
adc
sub
fwait
inc
ss
data16
fdiv
fsubr
ljmp
pop
xchg
mov
push
lods
cmc
ljmp
insb
cs
subb
hlt
adc
stos
inc
sarb
jne
lret
inc
sbb
out
enter
shrb
mov
or
ljmp
add
orl
lods
mov
cmp
repnz
lea
push
pop
dec
jb
xchg
sti
ljmp
jg
and
or
insb
pop
ja
mov
sbb
and
xor
ret
push
out
movl
gs
jmp
cmpsb
sbb
orb
mov
push
mov
sbb
jg
push
mov
inc
jp
jg
aas
add
lcall
sub
push
mov
jb
inc
sbb
mov
decl
in
jo
xor
and
enter
outsb
sbb
inc
push
or
sti
adc
dec
or
sarl
aaa
out
in
ficoms
sbb
inc
xor
out
out
popf
or
cmp
add
xor
xchg
rcrl
mov
push
pop
jmp
cmc
push
pop
or
call
out
pop
outsb
andl
dec
add
jmp
add
loope
enter
fmuls
cmp
pushf
in
cmp
shr
mov
gs
dec
pop
sbb
or
sub
enter
xor
mov
xlat
adc
loopne
es
or
lret
enter
dec
mov
or
aas
pop
push
daa
lods
daa
inc
addr16
inc
xlat
shll
jno
jns
inc
scas
xlat
arpl
notb
lods
dec
into
pop
movsl
mov
push
add
sbb
adc
or
push
jl
mov
das
xorl
mov
cmpsb
sub
and
jmp
cld
fidivrs
jnp
sbb
clc
fcoms
and
xor
in
std
sub
jmp
das
pop
mov
jne
and
decl
repz
jo
scas
inc
xchg
jo
or
or
push
mov
adc
pop
arpl
sub
pop
push
push
dec
and
outsb
int
inc
sub
das
push
push
xor
cwtl
pop
jmp
lock
insb
pop
popf
out
sub
jg
lea
xchg
pop
jmp
repnz
inc
xor
sbb
rcll
es
sub
pop
mov
pop
adc
clc
aam
mov
aaa
imulb
push
int3
cltd
mov
scas
mov
fdivrs
mov
lods
popf
xor
sbb
bound
pop
addl
cli
xchg
mov
out
nop
sub
push
adc
cli
ljmp
out
push
mov
mov
test
insb
cmp
pushf
mov
rorl
lret
imulb
mov
ret
repz
pusha
and
seto
mov
jmp
es
mov
cmp
daa
push
pop
imulb
nop
mov
mov
pushf
mov
xlat
adc
decl
mov
mov
repz
adc
lcall
outsb
loopne
icebp
inc
push
aas
cmpsb
xchg
int
data16
dec
adc
jne
ret
sub
mov
sbb
loop
or
mov
adc
jmp
test
xchg
cltd
push
test
lds
sbb
sbb
into
inc
imul
popa
mov
cmp
mov
adc
out
leave
jmp
clc
data16
inc
aaa
imul
pop
mov
pop
jg
pusha
lods
add
loop
cmp
call
push
pop
dec
popf
mov
test
xor
mov
decl
outsb
mov
push
pop
push
pop
push
cmp
in
mov
rolb
inc
push
sbb
sub
pop
ret
sub
jg
xchg
int3
clc
int3
outsb
jb
jnp
jne
sbb
enter
mov
pop
out
mov
mov
or
sub
push
dec
mov
xlat
popf
pop
leave
rcr
cmp
add
xchg
in
jo
jp
cs
dec
aaa
sahf
repnz
or
pop
insl
ficoml
std
cltd
jno
rcrl
or
daa
dec
fmuls
sub
pop
clc
leave
sub
mov
add
mov
add
jl
dec
adc
inc
push
inc
andl
push
jns
cmp
arpl
add
xor
dec
bswap
xchg
adc
and
insb
adc
mov
xchg
dec
out
or
out
xchg
jae
scas
jp
mov
mov
xor
pop
and
xlat
jo
jecxz
add
mov
test
or
inc
imul
xor
push
add
mov
dec
shl
lods
push
mov
movl
and
push
sbb
inc
cmpsb
xor
jns
popl
push
xchg
mov
push
mov
inc
fisttps
cmpsb
in
in
and
jg
cmp
lock
out
movsb
sti
lret
mov
mov
aaa
jecxz
push
inc
mov
add
scas
mov
cmp
sub
adc
sub
add
lret
repnz
mov
xlat
mov
mov
sbb
adc
push
pop
cmp
jbe
popa
mov
or
jp
cld
push
sbb
add
mov
push
push
push
sub
negl
dec
cmp
into
dec
sbb
std
into
sub
imul
jmp
mov
jo
mov
pop
sub
out
loopne
push
mov
lea
xlat
int3
out
mov
cmpsl
sub
outsb
movsl
mov
cmpsb
cwtl
or
jl
adc
icebp
or
jmp
push
ljmp
shrb
subl
iret
out
cltd
out
lds
mov
xchg
sub
mov
mov
sub
sub
xlat
push
jbe
in
jmp
cmpsl
sub
test
hlt
scas
dec
inc
sbb
ret
mov
cs
cmp
dec
mov
jle
in
lcall
mov
adc
sub
stc
sub
adc
sub
and
sub
mov
inc
dec
cmp
cltd
pop
mov
cmp
jmp
or
ret
mov
inc
sbb
lods
cmpsb
mov
addr16
lret
out
fisttpl
or
aad
push
push
cltd
sub
mov
scas
roll
xchg
stos
mov
push
xor
push
mov
pop
jp
test
or
vpcomb
outsl
int3
xchg
xor
or
push
jmp
sbb
push
cmp
popf
iret
jb
outsb
adc
addl
push
orb
or
or
ret
rorb
adc
incl
cmp
jbe
add
aas
xchg
cwtl
cmp
push
shll
hlt
dec
mov
sub
enter
repnz
or
in
dec
ljmp
and
lret
in
popa
out
adc
xor
cmp
push
int3
fdivrp
push
fmul
outsb
inc
push
xchg
and
dec
jb
sbb
xchg
mov
mov
leave
test
sbb
xor
push
add
int3
mov
daa
pushf
mov
movsb
lods
int3
rorl
or
dec
leave
pop
testl
cmp
push
repnz
mov
or
add
lods
dec
or
or
xchg
int3
scas
stos
das
inc
enter
dec
mov
ljmp
mov
push
or
int3
scas
testb
out
jne
lret
jmp
mov
ljmp
into
lcall
sub
mov
ljmp
push
or
fcoml
cli
sub
ljmp
pop
outsb
sbb
push
iret
or
ljmp
enter
dec
jle
out
out
sbb
sbb
testb
cltd
in
dec
leave
sub
inc
xor
ret
jmp
dec
sub
inc
arpl
dec
in
cli
in
stos
outsl
or
in
add
cwtl
call
add
dec
push
stos
mov
leave
int3
dec
outsb
rclb
or
call
ret
lret
scas
xor
jno
mov
xor
mov
ret
outsb
sbb
dec
leave
push
dec
jecxz
cs
sub
out
ja
jns
pop
ss
fwait
jmp
enter
add
addr16
mov
fsubrs
pop
js
fimuls
push
mov
sbb
jge
sbb
push
xor
or
or
or
adc
out
lret
cmp
ret
test
insl
push
ret
or
push
cmp
icebp
ret
subb
mov
enter
pop
in
push
pop
mov
aas
xlat
gs
or
loop
lea
xor
into
or
or
clc
into
push
or
in
out
or
dec
int3
lret
scas
dec
in
shrl
cmp
or
int3
outsb
or
movsl
int3
dec
mov
aas
push
xchg
into
iret
outsb
or
mov
int
ror
dec
mov
popa
stos
dec
aas
dec
in
paddsb
idivb
iret
das
int3
push
ror
scas
cli
out
cwtl
cmp
add
sbb
xchg
out
movsb
jnp
mov
add
lret
stc
gs
mov
pop
cmp
movsb
or
popf
and
push
xor
sti
sahf
sub
rclb
cltd
jmp
lods
sbb
cmp
add
outsw
ret
ss
sbb
je
outsl
mov
bound
nop
ja
mov
ficoml
lea
cwtl
ljmp
mov
cmp
pop
ss
dec
lea
and
imul
add
push
fs
gs
or
add
sbb
jno
lret
addr16
ja
dec
std
pop
lods
adc
cmp
jns
adc
cmc
push
jne
pop
adc
stc
pop
rcrl
jnp
sub
bound
movsb
rclb
out
pop
movsl
mov
add
test
jmp
nop
call
jnp
jne
push
adc
popa
movsb
fwait
cmp
pusha
cmp
call
mov
or
inc
mov
jecxz
push
adc
gs
push
mov
jne
cltd
add
xchg
lcall
push
mov
jecxz
jno
out
in
fs
lret
dec
adc
test
inc
dec
sub
pop
aaa
stos
pop
scas
imul
or
sbb
or
lret
or
fisttpl
jp
stos
test
mov
sbb
enter
cmp
jge
pop
imul
lret
pop
mov
cmp
xchg
decb
cmp
pop
lds
or
fldcw
mov
test
leave
and
scas
or
mov
push
adc
xor
jns
imul
pop
sbb
popa
jp
mov
jmp
and
jmp
jmp
scas
lods
test
out
pop
je
ljmp
mov
sbb
popa
lret
insl
xchg
and
outsl
in
or
es
mov
gs
xchg
xchg
and
push
pop
mov
sahf
push
leave
fsubrs
outsb
sub
out
push
and
mov
mov
repnz
fsubr
out
jb
testb
jp
jmp
ljmp
testb
mov
pop
xchg
stc
lret
mov
lret
adc
lret
xchg
cs
pop
fs
test
mov
hlt
test
outsl
insb
scas
or
or
or
push
mov
testb
add
push
into
or
cs
cmpsb
pop
xor
xor
and
mov
out
fcomps
loopne
sti
add
xlat
out
nop
in
stos
out
xor
std
or
test
pusha
sbb
push
sbb
sbb
data16
in
sti
mov
into
xchg
sbb
jmp
pusha
inc
shlb
into
repz
jb
add
dec
ret
testl
popa
push
or
js
divb
mov
lods
and
sub
push
fwait
in
stos
cld
stos
inc
mov
mov
xor
inc
adc
gs
or
test
or
mov
ds
das
es
outsb
or
enter
push
call
jno
inc
lods
mov
push
lods
mov
fwait
xlat
mov
into
out
pop
push
sbb
and
push
loop
add
mov
icebp
mov
repz
scas
out
popa
je
daa
cltd
push
aad
nop
out
jae
sub
jmp
aaa
cmp
fwait
mov
lret
cmp
inc
adc
push
inc
pop
stos
sub
sbb
in
adc
nop
scas
loope
push
cmpsb
movl
push
mov
pop
push
rorl
stos
int3
pop
es
inc
mov
incl
mov
xchg
imul
dec
inc
mov
or
out
mov
jg
popa
aas
stc
mull
cmpsl
das
xchg
pop
mov
xchg
data16
or
jmp
shlb
and
xchg
add
cmp
scas
stc
out
sub
rclb
ds
popf
fld
mov
xchg
mov
sahf
sar
jp
testl
outsb
push
lret
sbb
stos
xor
lea
jmp
and
push
cmp
xchg
push
adc
push
repz
xor
sarl
mov
out
les
jmp
push
mov
inc
testb
ja
stos
or
jno
call
test
or
or
cs
mov
mov
inc
push
popa
fisttps
sahf
into
adc
xchg
ds
jbe
fldl
lret
ret
dec
cs
and
cld
xor
fs
lahf
lcall
sub
shll
leave
sub
adc
mov
sub
gs
xor
or
addb
pop
or
in
add
scas
push
out
adc
mov
cmp
mov
in
push
sbb
loop
fs
and
scas
stos
cmp
leave
in
mov
outsl
cmp
sbb
mov
out
in
ret
push
inc
repnz
adc
mov
adc
bndldx
sub
and
stos
xlat
push
adc
jecxz
or
or
mov
xor
in
push
pushf
gs
sbb
scas
repz
lcall
icebp
pop
pushf
fldl2t
scas
mov
cmpsl
adc
out
hlt
out
pop
cs
fldenv
mov
push
inc
ret
mov
leave
pop
rorl
pop
repz
mov
xchg
mov
pushf
sti
xchg
cmp
xchg
iret
repz
pop
jb
lcall
outsb
es
outsb
dec
xor
sbb
pop
sbbl
xor
movsb
sub
mov
xchg
in
add
jno
cmp
mov
jecxz
adcl
push
pop
and
push
bsf
incb
push
sub
sbb
mov
mov
pop
inc
sub
dec
cmp
jl
xor
mov
xor
test
adc
cmp
sbb
mov
add
lret
pop
iret
mov
xor
jecxz
xor
and
xchg
push
and
subb
mov
test
mov
and
xor
mov
cwtl
subl
xchg
push
pusha
test
mov
xchg
mov
in
out
mov
push
sti
out
sbb
repz
adc
sbb
mov
cmp
sti
inc
pop
sub
or
adc
cli
gs
or
adc
jns
xor
fcoms
mov
pop
pop
imul
imul
scas
mov
icebp
pop
sahf
jb
push
dec
sbb
jp
dec
or
mov
lods
mov
mov
iret
xor
sub
inc
cs
xchg
mov
mov
popa
jge
cs
mov
push
mov
fistpll
xchg
xor
mov
xchg
cmpsb
and
arpl
xchg
pop
ds
test
dec
xchg
mov
cmpsl
pop
or
xlat
jo
sbb
test
cli
mov
js
jmp
xchg
sahf
mov
mov
jge
xchg
or
enter
or
lret
mov
or
push
test
push
call
cmp
cmp
mov
or
push
and
sub
ficoms
adc
cs
jg
adc
pop
idivl
ficompl
out
int3
lahf
popa
dec
push
or
adc
fnsave
jp
push
lds
push
int3
add
mov
add
test
repz
cmp
dec
adc
fcmovb
push
or
scas
ficompl
push
mov
push
mov
imull
js
mov
mov
jno
shll
pop
test
push
hlt
lcall
jmp
rclb
push
fld
sbb
loopne
cli
inc
and
bound
imull
int
cmpsl
ss
sbb
xlat
or
mov
nop
out
xor
ret
stos
inc
sbb
ror
cs
repnz
add
mov
mov
dec
mov
rcll
lock
xor
lcall
mov
sbb
and
mov
mov
lods
mov
ljmp
and
pop
adc
push
mov
pop
mov
mov
cmp
dec
inc
mov
test
or
cmpsl
push
dec
mov
push
das
mov
lods
add
mov
push
pop
xor
sarl
repnz
adc
inc
dec
sub
fisttps
repz
push
dec
sbb
and
cmpb
div
sbb
shrb
sbb
cwtl
mov
sub
das
iret
nop
loopne
into
jmp
cs
push
sete
stos
pusha
mov
ret
push
lds
call
cmp
inc
xchg
imul
or
dec
jnp
insb
gs
dec
ss
mov
fs
and
jae
fsts
mov
addr16
pop
lcall
mov
idivb
mov
cmp
fs
in
and
rcrl
xorl
jbe
jge
stos
cmp
movsb
mov
jb
mov
aas
push
lret
repnz
cmp
pop
sbb
adc
out
jno
pop
mov
aaa
xlat
mov
in
pop
push
pop
pop
popf
jl
adc
cmp
sbb
xor
aad
xchg
hlt
jnp
inc
fidivrl
iret
and
out
pop
hlt
push
dec
cmp
out
pop
ljmp
test
xlat
sub
mov
shll
std
lret
pop
syscall
cmp
filds
out
repnz
mov
aaa
cmpsl
fwait
arpl
mov
mov
shll
xor
cli
mov
jecxz
lods
mov
repz
jg
int
cmp
sub
sbb
xor
ljmp
push
jmp
data16
data16
aaa
ljmp
enter
jmp
dec
jmp
ljmp
pop
mov
jge
pop
dec
xor
jmp
or
scas
dec
fistl
pop
mov
ss
push
imul
fldenv
test
int
ja
loopne
daa
iret
repz
ret
xor
jge
xor
add
adc
sub
push
stos
or
xor
hlt
int3
mov
test
push
jle,pt
push
cmp
mov
pop
mov
pop
xor
mov
test
dec
dec
cmp
out
sub
sub
lock
aaa
daa
cmp
mov
sub
jecxz
inc
pop
xchg
sti
adc
push
sub
push
and
lds
or
pop
mov
pop
or
xchg
or
mulb
push
mov
push
add
dec
stos
pop
test
jae
inc
lret
ret
sbb
jecxz
sub
inc
pmulhw
add
int
hlt
divl
dec
ljmp
mov
jmp
inc
cltd
icebp
stc
push
adc
or
push
adc
pop
ret
bound
push
mov
cmc
dec
xor
call
inc
and
adc
fidivrl
dec
call
xorb
add
xchg
sbb
out
push
and
and
lcall
std
dec
cmp
cmpsl
xchg
cmp
add
jmp
xor
push
push
xchg
jnp
jae
or
jnp
mov
enter
xchg
dec
out
push
mov
bnd
insb
nop
xchg
jl
sbb
push
mov
mov
jno
jg
mov
andl
jne
ss
mov
push
jne
or
pop
js
mov
xor
xor
lods
push
jne
inc
loope
xor
pop
test
push
add
sbb
pminub
inc
xchg
je
push
movsb
sub
jge
cmpsb
xor
testl
adc
adc
adc
or
dec
or
jg
ss
shll
add
out
add
loop
cmp
add
jmp
sbb
xchg
repnz
inc
nop
cwtl
ja
inc
fsts
mov
or
mov
int
pop
lock
mov
mov
jbe
jns
rcr
cli
cmp
loop
pop
sbb
adc
add
adc
stos
jmp
lods
fiaddl
mov
out
jmp
mov
cltd
outsl
cmp
mov
xchg
cs
add
int
punpcklwd
lea
arpl
and
cmp
dec
dec
or
out
gs
fcmove
adc
push
add
in
cli
and
or
decl
pop
sbb
pop
test
cmp
xchg
popf
jmp
testb
dec
mov
popa
add
sub
jo
pop
jnp
sub
mov
mov
test
jg
addl
aas
or
sbb
fdivl
psubsb
int
dec
sub
stos
loope
mov
xorb
stc
das
fmull
mov
lret
sbb
mov
xchg
aad
test
mov
adc
sub
fsubl
incl
rorl
fsubl
or
std
add
pop
cltd
jp
sub
ljmp
cmp
cld
adc
fs
cli
ja
adc
pop
cltd
xor
fidivs
pop
or
jnp
add
or
fxch
es
jecxz
sbb
insb
into
ret
fidivl
sub
pop
xor
inc
ss
or
data16
loope
ficoms
cld
jnp
inc
jg
pop
sar
cmp
fwait
cwtl
mov
mov
dec
test
notl
or
sbb
aaa
or
jmp
push
out
xchg
jb
cmp
sub
xor
mov
das
pop
pop
cmp
negb
sbb
cltd
daa
inc
jp
push
push
int3
ret
lds
addr16
ljmp
or
inc
xlat
mov
aas
sti
pop
pop
mov
inc
dec
xchg
mov
cmp
outsb
cmp
xchg
aas
outsl
jle
lods
xchg
pop
js
jmp
scas
rcl
or
sub
into
imul
cmpsb
mov
clc
pop
lods
pop
xchg
and
inc
in
stos
orb
adc
or
loopne
mov
mov
cli
popa
sub
cwtl
mov
push
inc
cmp
imul
mov
ret
inc
scas
in
mov
fldenv
sbb
idivb
push
mov
dec
jecxz
das
xor
mov
sarb
sbb
xchg
out
scas
sub
scas
stos
fisttpll
mov
push
sub
push
add
push
imull
in
push
lahf
daa
mov
lcall
loope
int3
ds
repnz
push
out
test
mov
lods
lds
push
fmull
add
imul
outsb
or
lds
lods
scas
xchg
in
push
jl
jns
xor
out
sbb
add
xchg
push
out
mov
movsl
mov
and
icebp
bound
ljmp
into
out
cld
out
jp
mov
mov
pop
push
inc
ljmp
shrb
sbb
push
pop
adc
das
into
xlat
and
hlt
mov
jb
scas
stos
rorb
in
imul
cld
in
mov
shrb
pop
fcmovnb
cmp
sbb
and
lcall
enter
mov
lods
in
xor
jmp
pop
out
das
mov
pop
sub
mov
shrb
dec
push
push
data16
insl
and
cmp
pop
push
jmp
sbb
pop
xor
mov
iret
or
adc
test
decb
pop
adc
or
jle
clc
lods
pop
cs
sbb
sub
loope
bound
pop
lret
aad
pusha
pmulhuw
fstl
cmpsb
xor
cltd
dec
stos
lods
mov
cmpsb
pop
inc
xorl
stc
or
lret
lods
cmp
inc
inc
add
add
cmp
jl
or
aaa
imul
test
sub
mov
push
jmp
mov
ss
or
fnstcw
iret
lea
das
notb
test
cltd
fistps
jmp
push
add
mov
cmp
pop
aas
mov
imul
pusha
sub
jnp
imul
add
orl
fistpl
pop
mov
imul
cltd
clc
inc
dec
imul
ja
shrl
mov
mov
or
push
or
push
out
insl
iret
jmp
popf
mov
jmp
test
push
insl
mov
mov
xchg
cli
ret
mov
xchg
jg
mov
pop
scas
cmp
push
adc
cmp
dec
out
cmp
jg
dec
dec
push
fimull
xor
flds
xor
or
or
ljmp
mov
xor
adc
cs
mov
orb
inc
pop
sbb
popa
or
fsub
mov
mov
daa
adcb
adc
pop
adc
out
jecxz
cmp
or
xorb
cltd
ds
jbe
leave
ljmp
andb
dec
cmp
pop
fxch
out
or
inc
mov
test
lret
ss
sbb
pop
mov
mov
cmp
add
ljmp
rorb
imul
xlat
or
outsb
fistl
add
add
leave
jmp
mov
test
lret
shlb
ret
add
lea
nop
adc
lcall
xchg
mov
cmp
jae
push
push
mov
int3
movsl
mov
mov
jno
addr16
jne
lcall
dec
mov
add
mov
out
seta
mov
out
jo
jmp
push
dec
or
or
sahf
jnp
pop
jg
pop
cld
aas
cs
mov
lret
jnp
jnp
push
adc
daa
test
imull
push
mov
sub
dec
dec
jb
ss
cmp
jmp
into
rcrl
xchg
mov
xlat
mov
das
js
inc
outsl
adc
xchg
aas
loope
push
and
je
xchg
adc
int
push
das
mov
ret
sub
sti
mov
ss
or
jg
push
push
popa
pop
and
dec
push
push
mov
cmpl
es
je
dec
aaa
pop
or
in
push
or
push
or
sub
or
imull
and
stc
cbtw
dec
xor
sbb
pop
jg
sbb
repnz
jns
lods
repz
nop
xchg
imul
add
movsb
or
pop
or
out
imul
cmp
add
or
mov
out
inc
cmp
mov
pop
jb
push
mov
cmp
cmpsb
jb
outsb
sbb
out
or
loop
jmp
out
test
data16
pop
adc
jge
test
out
sub
mov
dec
pop
roll
mov
mov
push
cld
push
mov
imul
or
pop
int
cmpsl
sub
add
mov
xor
lret
push
pop
sbb
jmp
ds
push
xchg
inc
pop
mov
outsb
mov
adcb
mov
or
ljmp
adc
das
inc
xchg
pop
andl
ss
push
pop
nop
faddl
adc
gs
cli
aad
dec
stos
cmp
xchg
loope
ret
lahf
popf
push
fstpt
repnz
dec
mov
sub
add
dec
sar
inc
mov
mov
ds
movsl
out
bound
dec
jb
jle
ljmp
lds
sub
or
call
icebp
dec
movb
sbb
cmp
cli
jecxz
fs
testl
imul
jecxz
sar
push
sub
mov
sbb
mov
cli
out
cli
push
movsl
pop
mov
aad
test
inc
dec
fcomps
push
xor
pop
xchg
sub
mov
faddl
lahf
inc
or
leave
pop
mov
adc
cmp
pop
in
sbb
loope
shrb
icebp
sbb
pop
pop
sub
dec
pop
jnp
inc
ret
push
mov
mov
enter
movd
aad
push
test
cli
sub
ljmp
test
dec
inc
data16
js
inc
inc
cmpsb
gs
xor
xor
stc
mov
or
mov
sub
testl
popa
lds
push
std
jae
xlat
push
xchg
mov
ds
xor
and
negb
test
sub
ljmp
enter
jmp
repnz
out
cs
aaa
add
in
adc
jnp
xchg
or
scas
aas
cmpsl
lds
fnstcw
bnd
mov
mov
xor
mov
ja
std
mov
add
sub
mov
pop
cwtl
sub
xor
dec
jg
add
jge
mov
cs
jg
adc
adc
pop
push
jge
call
das
xor
mov
cwtl
in
aaa
rcrb
adc
outsb
call
stc
and
test
sub
rorl
sub
jno
jp
nop
xchg
sub
or
dec
fcmovu
sbb
pop
jmp
push
clc
aad
aad
dec
jecxz
fcomip
push
imul
pop
sbb
stc
fmuls
or
sub
xchg
xor
push
iret
jp
push
push
out
dec
std
push
mov
pop
or
mov
in
jb
inc
xchg
push
or
sbb
sub
jg
mov
xlat
xor
mov
push
sbb
add
repnz
out
mov
pushl
inc
pop
fwait
xchg
pop
add
jno
push
ljmp
fldt
les
inc
mov
mov
cmp
pop
lock
jge
xlat
jb
fiaddl
jg
mov
mov
push
sbb
push
add
pop
inc
outsb
xor
cmpl
sub
adc
lds
dec
ja
imul
and
jecxz
andl
jecxz
aas
ds
mov
xchg
fistpll
inc
xor
adc
cmp
mov
jnp
xor
push
clc
jg
mov
ret
shl
fdiv
hlt
ja
or
adc
ds
jmp
sbb
jbe
je
jmp
in
out
xor
mov
or
idivb
cmpsb
stos
test
mov
loop
ret
cwtl
fadds
add
mov
test
testb
dec
xor
pusha
out
lret
inc
push
mov
cmpsb
adc
cmp
sbb
cwtl
dec
cs
in
call
mov
sahf
das
lcall
sbb
xchg
pop
hlt
mulb
pop
push
inc
mov
cs
test
sbb
enter
or
or
dec
sbb
addr16
xchg
cs
ficoml
push
pop
mov
push
clc
cli
cli
out
pop
inc
push
push
sarb
inc
xor
ljmp
cmp
fwait
cmp
sbb
jbe
and
cli
push
cli
jmp
js
mov
je
and
gs
push
xchg
pop
mov
adc
scas
enter
mov
adc
jnp
dec
rcr
sbb
jg
jmp
sarl
cltd
xor
mov
jnp
xor
imul
sub
sbb
lret
adc
rcrl
jp
adc
popa
cmp
xchg
adc
cltd
adc
negb
adc
sub
lea
sub
mov
mov
ss
idivl
sbb
mov
out
ja
fmul
xchg
mov
or
mov
push
pop
mov
jnp
sub
daa
mov
jecxz
sbb
dec
cmp
jle
pop
dec
repz
fistps
rcrl
or
inc
sarl
lds
xchg
addl
mov
mov
cld
stc
push
dec
stos
insb
pop
mov
sbb
scas
mov
mov
sti
sbb
xor
scas
aas
dec
push
mov
testb
es
dec
mov
popa
frstor
icebp
sbb
mov
adc
pop
inc
lds
lret
fisttpl
mov
adc
les
scas
cmova
mov
and
iret
pop
ffreep
xchg
push
pop
ljmp
xor
and
dec
mov
mov
push
ret
cmp
pop
xor
pop
cmpsb
jl
mov
dec
mov
push
or
test
jg
loope
scas
pop
xchg
pop
inc
push
dec
sub
xchg
xor
sti
push
imul
in
push
test
dec
mov
imul
popa
stc
pop
push
in
subb
and
mov
ret
mov
mov
fsubrs
pop
stos
repnz
into
adc
inc
xchg
mov
fdivrl
mov
xchg
imul
sub
scas
fisubl
jg
cvtps2pd
stos
test
lods
mov
aas
repz
mov
orb
add
adc
jge
outsl
in
pop
int
cmp
lcall
jb
cmp
adcb
lret
or
ficomps
dec
je
lods
cwtl
xchg
aas
cmovge
or
in
das
imulb
xchg
or
add
fwait
xchg
jmp
xchg
mov
cmp
lret
or
mov
xlat
adc
ss
subb
pop
xor
cmp
sbb
mov
pop
lods
aaa
xchg
cmpb
jbe
dec
in
popl
add
jae
add
add
subb
jbe
imul
aaa
js
mov
push
push
aas
mov
adc
and
arpl
pop
fwait
xchg
pop
sti
mov
popa
adc
dec
pop
xor
cli
xor
stos
mov
or
mov
loop
xor
stos
iret
outsl
inc
mov
sub
cli
sbb
xor
addr16
sar
scas
xchg
ret
push
mov
cltd
pushf
adc
sti
jle
pop
push
and
xchg
jecxz
add
loope
jbe
stc
callw
adc
popf
je
adcb
popa
rcrl
push
jb
mov
aaa
das
mov
push
mov
mov
or
adc
mov
or
sbbl
fadd
adc
sbb
xchg
rcrb
les
imul
dec
jns
adc
cltd
mov
test
xchg
jne
mov
mov
popa
sub
xchg
out
out
xchg
or
or
pop
lret
sub
mov
push
in
xor
sub
insb
jg
inc
xchg
incb
cmp
and
or
ja
pop
sbb
test
xor
aas
cmp
lret
inc
inc
push
jmp
sahf
repz
out
mov
test
in
sub
cmp
sub
out
icebp
rolb
mov
and
gs
jmp
mov
mov
pop
mov
jne
jecxz
pushf
out
into
test
sbb
adc
sub
in
sbb
push
add
sub
repnz
adc
sub
push
test
cwtl
in
leave
mov
cmp
jmp
mov
cmpl
xlat
loopne
into
clc
push
rorl
xchg
stos
ret
inc
mov
pop
data16
fcompl
ljmp
je
mov
stos
arpl
or
adc
les
cmp
sub
xchg
inc
jmp
stos
xchg
ss
test
out
and
ss
sub
mov
push
out
pop
xor
iret
nop
dec
lods
fidivrs
lock
fstps
fdiv
out
add
leave
sub
ficoml
test
repnz
fsts
cmp
subl
add
idivl
lea
mov
or
xor
pop
cli
lret
cmp
es
sub
pop
iret
cmc
mov
repz
test
movsb
xor
push
movsl
lcall
insl
hlt
xor
aas
adc
inc
iret
sahf
cltd
push
mov
dec
lods
fmull
data16
das
dec
xchg
fwait
add
fcom
pop
sti
xchg
mov
dec
pop
xor
je
jmp
fisttpl
loope
ljmp
or
mov
sbb
stos
add
cmpl
lret
je
lret
sub
push
inc
orb
and
cmp
mov
mov
int3
cltd
imul
cmp
aaa
call
ja
ret
adc
sbb
daa
or
mov
rorb
adc
jnp
xchg
loopne
push
pop
dec
lret
or
fisubrs
xchg
mov
and
int3
mov
xorl
xor
dec
sbb
cmp
dec
xor
xchg
test
mov
pop
jns
xorl
jmp
mov
jl
sbb
repnz
adc
fisubrl
mov
cmp
es
out
add
shrl
aad
adc
xchg
xor
and
js
xor
neg
lahf
add
lret
mov
sti
fs
ficoms
fdivs
loope
repz
fldenv
mov
lock
cvtps2pi
clc
push
pop
mov
mov
scas
and
jno
ret
jb
adc
xor
push
addr16
cmovge
or
mov
decb
pop
push
pop
adc
lcall
int
inc
ret
cmp
bound
push
adc
or
or
sar
xor
movsb
dec
enter
mov
adc
mov
cwtl
nop
or
insb
test
pop
fldt
dec
js
cmp
dec
jp
cwtl
in
or
mov
sbb
sub
lahf
imul
xchg
fldcw
xchg
cmpb
jne
mov
cmp
mov
push
mov
push
popa
das
rorb
hlt
repz
jge
arpl
daa
push
mov
aam
repnz
data16
out
xchg
fs
mov
mov
xor
push
inc
pop
dec
inc
or
dec
ret
jno
cmpsb
add
sbb
adcb
rcll
jp
loop
fs
stos
and
push
ret
or
lret
xchg
push
nop
mov
xchg
shll
push
sahf
les
add
jge
lea
xchg
or
ror
aaa
jnp
dec
sti
sub
shll
add
pmaxsw
jnp
or
popa
dec
test
sub
or
cltd
popa
lret
icebp
ja
stc
out
pusha
mov
push
and
mov
xchg
loope
cmp
mov
shrb
mov
add
and
stos
sub
fists
pop
xor
sub
shrl
scas
mov
rorb
adc
shr
out
add
movsl
leave
aam
mov
add
lods
popa
adc
test
bound
and
stos
insb
mov
or
popa
inc
fwait
ret
push
pop
jmp
js
hlt
sbb
ljmp
mov
arpl
dec
or
xor
aad
cmp
push
ret
lds
sbb
and
ljmp
cmpsl
ljmp
mov
int
arpl
xchg
pusha
inc
mov
mov
xchg
pop
cmp
imul
sub
into
aaa
cmpsl
outsl
stc
adc
jp
movsb
adc
and
xor
gs
sahf
mov
ss
add
adc
cmp
fidivrs
in
insl
dec
repz
mov
ljmp
mov
xchg
xlat
jb
scas
push
jno
rcrl
inc
or
stc
jl
decb
jmp
jg
jle
ret
xor
dec
ja
jl
notb
repnz
clc
fs
cmpsb
imul
dec
dec
push
mov
cmp
movsb
mov
int3
stc
mov
mov
xchg
adc
insb
or
orb
pop
mov
enter
mov
sub
idivl
rorb
aad
pop
adc
rcll
rcrb
in
pusha
ljmp
lahf
xchg
pop
jp
sub
ljmp
addl
pop
cmp
jae
pop
dec
scas
scas
daa
dec
dec
into
pop
push
or
xor
lret
bound
cld
ja
sbb
ret
dec
pop
push
mov
clc
popa
mov
jno
orl
stc
mov
sbb
or
push
test
sub
cmpsl
sub
out
push
repnz
pop
idiv
pop
lods
lods
adc
in
sbb
push
aas
dec
jle
push
cmp
loopne
mov
or
movl
ficompl
ljmp
in
into
lret
cmp
xchg
sbb
rorb
repnz
push
subb
jnp
fldenv
inc
cmp
fsubs
imull
fwait
add
sti
movsl
ljmp
pop
mov
pop
sbb
aad
popf
scas
jb
cmp
inc
xchg
stos
or
dec
fmulp
repz
sub
in
jp
cli
das
xchg
or
mov
add
sub
push
cmp
ljmp
shlb
sti
cmpsb
mov
scas
mov
mov
push
jae
sbb
xchg
mov
push
das
lret
test
cmp
pop
popa
push
mov
xor
movsl
or
mov
aad
push
cmc
mov
mov
test
out
mov
inc
pop
jmp
xor
cmp
xor
mov
sub
cmp
cmp
popf
cmp
scas
cmp
inc
and
mov
ret
mov
femms
rcr
sti
iret
mov
or
pop
xlat
cmp
lea
das
es
sarl
hlt
sarl
ljmp
aas
cltd
sbb
dec
jecxz
and
imul
ret
pop
hlt
jle
mov
insb
or
es
insl
daa
out
mov
sub
or
lcall
jbe
fistpl
lret
imul
cmp
cmpsb
lock
xchg
lods
cmp
mov
cmp
push
sub
inc
fcomps
leave
cmc
outsb
arpl
xchg
jge
and
jl
ficoms
pop
ret
adc
gs
out
out
popf
stos
inc
xor
adc
lea
cmpsb
jmp
adc
inc
pop
xorb
popa
cld
scas
roll
jns
test
sub
and
or
push
xor
rsm
jbe
xor
add
xor
push
jno
add
lcall
aaa
lods
popf
cmpsb
xor
mov
mov
loopne
pop
or
xlat
pop
ret
sti
movb
rolb
repnz
jnp
popa
stc
inc
xor
pop
icebp
mov
lock
push
testl
test
jmp
loopne
fwait
dec
jle
outsl
adc
xchg
pop
inc
add
mov
into
sub
dec
repnz
call
inc
inc
push
xor
out
or
dec
out
inc
sarb
pop
push
mov
pop
cs
insb
push
inc
push
insb
jns
inc
mov
and
iret
dec
sbb
pop
out
lcall
pusha
enter
sbbb
mov
pop
insl
mov
movb
mov
jnp
es
leave
aaa
push
push
jecxz
arpl
lods
dec
jp
ds
push
nop
sub
cmc
popa
push
jb
aam
cwtl
push
fs
mov
push
les
push
adc
jnp
sbb
lods
cli
dec
xlat
lahf
mov
mov
xchg
or
mov
mov
inc
pusha
cvtpi2ps
jnp
adc
push
jle
push
push
repz
jnp,pn
in
add
and
sub
fcmovnb
jp
repnz
into
pop
dec
inc
push
cmpsl
popf
nop
sub
mov
xchg
push
push
and
loope
cmpsl
pop
addr16
out
xor
xchg
icebp
cmp
cs
cmp
repnz
xor
cmp
xor
or
repnz
adc
add
sub
fs
push
push
scas
aad
test
xchg
mov
xchg
pushw
jno
aas
dec
stos
push
cmp
daa
sbb
sbb
xchg
push
dec
in
mov
or
xchg
or
jne
jle
push
in
jno
pop
sub
mov
pop
mov
rorb
sahf
ss
push
jno
pushf
push
pop
mov
fsubs
cmc
lahf
les
mov
testl
xchg
push
cmp
test
and
mov
imul
and
nop
sub
push
push
ds
pop
shl
add
fisubrl
in
mov
xor
lock
mov
movsb
cli
pushf
xchg
icebp
dec
ss
lods
js
mov
pop
xor
stos
xchg
pop
cmpsl
dec
dec
sahf
adc
addr16
bound
leave
jmp
or
rorl
xchg
jne
add
nop
std
cltd
inc
push
jle
outsl
mov
ljmp
movsb
ss
sub
sbb
xchg
or
test
out
movsb
repz
add
push
fimuls
clc
pop
sbb
stos
fidivrl
stc
negl
xchg
cld
dec
inc
add
loopw,pn
orb
push
adc
mov
pop
xor
pop
in
add
scas
dec
mov
fmulp
add
ljmp
xchg
adc
int
pushf
pop
sbb
push
mov
dec
sarl
lret
out
push
sub
pop
repz
push
mov
int3
push
stc
arpl
pop
jg,pn
lea
sbb
inc
les
leave
arpl
sub
pushf
addr16
sarb
sbb
mov
jl
mov
pop
nop
lock
cli
dec
int3
mov
mov
imul
or
pop
cmp
mov
mov
sub
pop
in
sub
dec
or
lcall
orl
nop
xor
mov
sbb
cmp
mov
or
inc
jb
mov
mov
mov
pop
sub
push
adc
cltd
and
fiadds
sbb
xor
subb
push
mov
xchg
gs
stos
mov
bswap
lds
cli
ror
js
and
jg
mov
mov
imull
jo
xorl
insl
xor
sbb
cmpsb
testb
repnz
test
xor
incl
mov
jl
andb
sub
push
fwait
add
mov
bound
adc
ret
out
pop
fidivl
mov
jg
push
hlt
push
movsb
lds
fucomip
and
inc
orl
add
xchg
sbb
pop
imul
daa
ljmp
xchg
dec
or
add
lods
cmp
add
pop
sub
test
inc
adc
mov
repnz
push
adc
jge
clc
enter
push
fcoms
scas
jo
mov
jmp
sub
out
add
popa
das
notb
mov
sysenter
lods
xor
pop
and
mov
dec
lds
sbb
dec
sbb
sub
sbb
nop/reserved
inc
jnp
xchg
ljmp
xchg
cmp
or
arpl
gs
das
loope
and
mov
and
imulb
cmp
jno
hlt
xchg
jp
xchg
pop
subl
fsts
inc
cmpsb
inc
shl
shlb
or
fbstp
jbe
in
fdivl
dec
pop
push
sub
in
or
jnp
mov
jmp
test
inc
test
cmp
jg
xchg
cltd
daa
or
add
sub
daa
bnd
mov
pop
cmp
call
adc
clc
call
pop
xchg
mov
xchg
cli
rorl
mov
mov
jnp
jnp
xlat
cmp
add
icebp
inc
jnp
pop
lret
cli
pop
mov
pop
mov
lahf
push
jnp
mov
xor
cmp
pushf
mov
or
lea
in
mov
imulb
cmp
mov
xchg
iret
ss
mov
popa
pop
fadds
pop
lods
add
or
daa
adc
or
push
cmp
cmpb
loopne
cmpsb
aam
divl
stos
cmp
incl
and
repnz
push
or
inc
or
out
push
jnp
in
testl
cs
pop
push
aad
sbb
outsl
sub
or
jns
or
sbb
add
pusha
sbb
pop
mov
jns
mov
insl
int
mov
pop
incb
pop
cmpsb
or
and
out
push
dec
cmpb
ja
xchg
cltd
fs
fistpl
xchg
add
pusha
or
jle
xchg
jns
lret
or
data16
cs
mov
mov
div
ds
inc
push
lret
mov
ret
stos
jnp
loop
stos
into
mov
cmp
mov
fstl
xchg
jne
stos
xor
lret
jns
pop
roll
pusha
mov
stos
cmp
jne
pop
les
js
fisttps
push
cld
in
xchg
scas
sahf
mov
in
mov
mov
and
or
pop
adc
or
mov
adc
xor
jb
lcall
cmp
fisubs
data16
dec
xchg
push
mov
sbb
ss
sbb
mov
out
inc
js
and
pop
sbb
rcrb
insb
dec
adc
sti
rorb
xchg
imulb
cmpsl
shlb
jl
dec
cmp
xchg
out
xchg
clc
pop
jmp
adc
pop
cltd
test
gs
push
adc
mov
loopne
pusha
cmp
dec
sti
inc
cmpsb
arpl
cmpsl
xor
jae
dec
cmp
inc
jp
push
jne
push
imul
dec
jns
push
mov
dec
insl
dec
lret
pop
rorb
pop
pop
movsb
mov
enter
psubd
push
cmp
cli
hlt
sti
fisttps
push
mov
pop
adcb
jg
dec
fnstcw
cli
adc
sbb
jnp
xor
adc
pop
cld
out
je
cli
xchg
orb
push
or
pop
jno
xchg
popf
arpl
or
push
mov
pop
push
and
hlt
testl
test
stos
call
out
pop
xchg
out
adc
call
dec
test
jbe
xchg
in
sbb
sub
cmp
pop
lret
enter
out
stos
roll
cs
push
sbb
xchg
mov
sbb
jnp
cmp
jge
pop
push
cli
fisttps
cmp
push
jnp
sub
es
dec
jecxz
lret
fidivl
pop
mov
fwait
jno
push
ljmp
sub
fldl
mov
sub
cli
push
xlat
xchg
or
jg
out
dec
loopne
je
cmpl
mov
test
and
pop
jo
pop
out
arpl
loop
sbb
lret
cmp
mov
mov
pop
subl
adc
sbb
mov
fdivl
inc
adc
std
int
push
arpl
roll
xlat
push
push
push
xor
sub
adc
mov
int
sbb
sbb
push
adc
jg
adc
std
es
loop
push
xor
dec
inc
xor
cli
rorl
and
test
in
cld
or
lret
jecxz
adc
or
xchg
or
cld
jmp
out
cmp
movd
push
cmp
pop
cmp
push
inc
arpl
dec
pop
push
push
out
mov
sub
sbb
push
lea
repz
mov
enter
sub
aaa
imul
jg
xor
cmpsl
into
fcmovnb
arpl
jge
sti
add
or
movsl
mov
cmp
out
xor
mov
fs
loopne
test
cld
jge
rcrl
mov
mov
outsb
pusha
or
xor
push
test
pop
jecxz
mov
fmul
js
jne
xchg
inc
jmp
xchg
or
out
xor
mov
xor
inc
and
cs
xchg
addb
pop
sbb
aaa
fcoml
leave
xchg
sbbl
mov
dec
push
mov
loop
xor
cmpsl
lret
fldz
jmp
shl
pop
dec
sbb
fimull
into
adc
and
in
mov
cmp
movsl
enter
icebp
or
push
add
add
cmp
xor
dec
rclb
add
mov
dec
add
push
sbb
mov
lods
mov
arpl
sti
lret
mov
sbb
cmp
mov
ja
cli
jns
lcall
xchg
xor
stc
jmp
or
faddl
xchg
adc
push
mov
add
push
popa
roll
dec
mov
or
add
sub
dec
test
jg
xchg
cmp
xchg
or
out
insb
add
loop
dec
sbb
fiaddl
call
cltd
sbb
mov
jo
mov
jnp
xchg
mov
out
and
mov
arpl
fisubrs
stos
icebp
ja
pop
pop
pop
push
lock
sbb
inc
divl
pop
movsl
pop
cmpl
cmp
jo
outsb
das
cmpsl
mov
fstl
lahf
adc
adc
sbb
imul
adc
add
xchg
lcall
sub
or
lret
scas
jns
cmpsb
adc
mov
cli
xor
cmpl
gs
cmpsb
pop
inc
aaa
push
scas
lahf
out
cmp
stos
loopne
adc
in
jo
mov
stos
mov
sti
mov
dec
dec
fwait
testb
mov
dec
xchg
in
jge
aad
ss
adc
sahf
cs
bound
or
cmp
xchg
xor
je
inc
jne
es
cltd
lea
stos
dec
js
push
pushf
and
xchg
or
call
repz
jge
mov
arpl
daa
je
shll
xchg
lds
into
sub
data16
loope
nop
mov
mov
ficoms
loop
call
rcrl
ret
add
mov
and
xor
mov
sub
adc
aaa
jb
insl
pop
pop
addb
rcll
sub
jp
xchg
movzbl
mov
call
cli
sbb
sar
repnz
jae
push
adc
jmp
mov
shl
daa
jle
js
out
jae
push
adc
cld
sbb
sub
cs
jg
mov
cmp
xor
lcall
cmp
xchg
add
ret
test
pop
or
imul
jnp
out
scas
mov
out
push
add
push
fdivr
add
pop
out
pop
pop
int3
xchg
in
dec
outsb
leave
iret
inc
mov
int3
jno
cmpsb
and
stos
movsl
jnp
push
add
push
dec
in
mov
push
lods
les
std
mov
and
lcall
push
pop
testl
push
or
push
inc
jp
add
pop
cmp
es
stos
pop
sbb
pop
inc
jecxz
stos
xchg
jbe,pt
cli
iret
test
push
xchg
jl
cmpsb
mov
rclb
test
push
dec
mov
loop
out
mov
jne
rcr
pop
test
sti
jno
cwtl
xchg
mov
mov
sbb
pop
rol
and
xor
cltd
hlt
cs
loop
mov
shl
sbb
ret
xchg
loopne
push
cmp
icebp
pushf
add
push
xor
fidivl
notb
lret
mov
add
lea
je
ret
leave
in
add
mov
dec
fstl
fmul
fnstsw
js
pop
jg
arpl
pushl
and
mov
stc
cltd
or
add
das
dec
mov
push
out
in
sbb
rorb
cltd
fstpt
mov
xchg
mov
pop
xor
out
inc
sbb
pop
fxtract
push
jg
mov
sbbl
push
push
mov
jb
loopne
notb
icebp
mov
push
movsb
sbb
fildll
jbe,pt
xchg
push
add
push
pop
fmul
xchg
mov
aas
bound
cld
jp
mov
mov
test
add
jp
push
fildl
mov
push
jl
pop
push
push
mov
inc
dec
jbe
clc
adc
test
and
fadd
jg
xor
scas
inc
ja
pop
mov
stc
xchg
adc
jnp
mov
data16
scas
js
cs
jecxz
xrelease
addr16
aas
mov
int3
cltd
call
mov
mov
cmpsb
arpl
pop
cli
insb
mov
dec
cmp
repz
lea
push
inc
dec
jns
sbb
testb
xor
pop
call
jae
sbb
inc
xor
xlat
mov
pop
rep
out
cwtl
xchg
add
shll
inc
test
xor
or
pop
rcll
add
pop
fisttpl
add
jnp
das
mov
inc
loop
mov
mov
fcmove
bound
test
test
aad
sub
loopne
fs
and
pop
mov
pop
or
mov
jne
test
cmp
mov
push
xchg
movsb
xor
dec
cmp
cli
in
mov
jg
fcmovb
xchg
xchg
insl
fsubrl
idivl
gs
cmp
fldenv
lret
jle
mull
lods
inc
and
fidivl
clc
adc
ds
jg
sahf
cmp
pop
lea
ficoml
addb
jb
cmp
cmp
xlat
push
addb
lds
test
fdivr
dec
orl
xor
popa
mov
adc
popa
add
shrl
sbb
dec
xchg
test
jp
jb
cmp
mov
push
out
add
imul
mov
add
aas
jge
ret
movsb
jno
daa
movsb
or
adc
mov
xchg
sahf
pop
mov
jae
sbb
call
jmp
call
sbbl
test
mov
or
orl
iret
mov
aad
push
xor
int
cmpsb
pminub
jb
out
imul
mov
fsubrl
popa
pop
xlat
dec
shrb
mov
stos
mov
negb
psubsw
ss
test
lret
or
cmp
data16
in
sti
xor
cmpsb
iret
mov
ss
mov
pop
inc
sub
mov
adc
imul
or
shll
mov
cmpsb
mov
pop
and
mov
pop
pop
cmpb
ret
pop
lods
add
testl
lcall
inc
xor
jle
out
cmp
jg
jl
adc
cmp
add
jp
mov
imul
ljmp
lret
xlat
push
lods
lcall
jge
add
push
imul
push
jb
jmp
dec
push
loop
mov
lret
je
or
sbb
leave
mov
push
and
pop
or
repz
sub
sub
es
lods
mov
adc
aad
cmp
bnd
mov
push
xchg
cmpsl
jnp
mov
in
bound
adc
imulb
push
sarl
outsl
mov
lea
fsincos
add
loopne
push
mov
loopne
test
int3
ret
push
das
movb
cmp
lret
out
sub
cli
popa
xor
push
call
shll
mov
pushf
mov
clc
xchg
cld
xor
div
jae
stos
aas
xor
jb
fnstenv
push
xchg
mov
pop
test
cmc
adcl
jno
hlt
loope
xchg
mov
push
jecxz
pop
xchg
mov
cmpsl
jb
and
mov
mov
pop
mov
xor
push
push
pop
inc
scas
push
push
and
pop
mov
arpl
sbb
shll
xchg
cli
lcall
xchg
add
and
test
rolb
pusha
cli
repz
xchg
icebp
loope
mov
scas
xchg
xor
into
out
mov
sbb
mov
jecxz
xor
xchg
loope
mov
loop
push
jecxz
les
mov
mov
sahf
sahf
cltd
jecxz,pn
cmp
pop
test
or
lea
or
mov
jae
out
xor
call
test
xor
jecxz
add
adc
scas
leave
das
mov
xor
pop
cmp
pop
add
pop
xlat
jnp
mov
insb
xchg
pop
rep
lret
test
shlb
adc
shll
pop
gs
or
and
jg
int3
sbb
jge
adc
mov
js
and
cmp
and
and
pusha
divl
in
js
negl
cmp
adc
outsb
and
mov
or
jno
mov
cmp
clc
sbb
xchg
mov
test
cs
test
mov
mov
call
and
pop
decb
inc
cmp
out
mov
cltd
stc
or
sbb
out
add
test
cmp
int3
out
adc
arpl
jg
mov
xor
les
iret
jnp
cmp
add
pop
insb
sbb
xchg
cmp
mov
popf
mov
out
inc
pop
aad
or
push
mov
cmc
ret
data16
pop
roll
movsb
rclb
push
mov
cld
or
dec
pop
pop
in
clc
xlat
hlt
adc
add
call
xchg
adc
jp
jp
outsb
out
xor
lret
sub
add
xlat
mov
add
sbb
sbb
or
jmp
notb
std
jecxz
pop
leave
outsl
xorb
sti
jne
scas
cli
or
pop
or
dec
mov
cmp
sbb
sbb
or
in
or
dec
repnz
call
sahf
leave
adc
mov
xor
addr16
or
sbb
sbb
call
mov
pop
movsb
ficomps
add
push
mov
pop
fdivrs
xor
pop
mov
mov
xor
or
mov
hlt
mov
hlt
shlb
or
mov
hlt
imul
scas
mov
push
lret
add
sarl
inc
repnz
cmpl
cwtl
push
in
xchg
mov
add
sbb
push
dec
test
lods
sbb
push
dec
daa
ljmp
imul
ljmp
stos
dec
cmp
mov
cmp
ficoms
sbb
dec
mov
mov
cmp
adc
imul
ror
inc
sbb
fidivs
add
arpl
inc
and
jg
cmpsl
and
sub
push
in
xlat
jbe
pop
jl
leave
jmp
or
jg
in
mov
mov
adc
imul
mov
repnz
mov
pop
mov
add
pop
jnp
mov
adc
mov
idiv
in
push
mov
test
xchg
fsubl
div
sub
mov
push
mov
sub
push
repnz
lea
andl
scas
jo
jno
cmp
sahf
jle
mov
xchg
mov
fcmovb
fcomip
ficoms
popa
jnp
dec
xor
inc
adc
rorl
jnp
in
sti
mov
jmp
or
test
mov
pop
ret
js
call
fsubl
cli
mov
dec
les
daa
es
mov
xchg
inc
pop
pop
add
inc
popa
mov
lock
sub
lods
test
sub
or
div
mov
leave
bound
push
adc
shl
or
sti
jae
sarb
fimull
xchg
adcb
pop
adc
int
jmp
push
jl
sbb
ret
out
inc
inc
decl
mov
mov
test
sbb
daa
js
js
jmp
jno
faddl
int3
loope
hlt
scas
push
pusha
or
loope
fistpl
pop
push
shll
xlat
out
add
sub
sub
fs
jmp
sub
inc
das
inc
xchg
stc
pop
faddl
fistpll
mov
ljmp
add
pop
and
xchg
pop
or
call
fs
inc
cmp
imul
mov
and
mov
xor
sbb
jg
inc
or
rcll
mov
out
ret
pop
inc
xor
aaa
lret
jb
or
xlat
test
adc
filds
aad
adcb
ret
mov
adc
adc
stos
xchg
negl
sbb
roll
movsb
mov
dec
lock
decl
das
xor
clc
hlt
cld
mov
inc
or
iret
cmp
push
sub
in
loop
adc
fcomps
mov
addb
call
add
jp
adc
sahf
into
adc
pop
cmp
cmpl
inc
xor
jb
in
sbb
xor
add
adc
cmp
in
test
call
call
scas
mov
aam
dec
ljmp
inc
sbb
sbb
push
mov
faddl
fmul
xor
inc
add
hlt
dec
mov
pop
mov
lock
cwtl
enter
hlt
jno
test
add
lds
cli
mov
sub
loop
or
xchg
adc
pop
ds
lret
leave
xorb
xor
stos
popa
adc
lret
add
insb
adc
adcl
adc
daa
mov
jecxz
push
cmpsb
inc
cmp
xchg
add
jne
cltd
out
add
xchg
aaa
scas
aaa
jp
bound
pop
imul
xor
lock
cli
inc
pop
xchg
jp
imul
jle
mul
insl
lods
lahf
dec
push
or
mov
cmp
xchg
movsl
sbb
mov
xchg
cmp
shl
in
hlt
clc
je
adc
push
sub
mov
mov
push
jbe
in
push
fistl
scas
pop
mov
repnz
out
jmp
jns
popa
push
inc
add
ljmp
lods
inc
jns
mov
fidivrl
xor
movntq
or
and
cmc
icebp
jno
outsb
sub
adc
inc
or
jmp
test
ret
shrl
add
jp
pop
fdivrl
inc
jns
lret
or
or
push
or
inc
xor
dec
pop
sbb
jnp
ljmp
sbb
or
xor
ljmp
and
dec
outsb
int3
sbb
cmp
out
dec
pop
repnz
push
out
fstpl
cmp
sub
mov
dec
stc
lds
sbb
icebp
dec
cmp
push
clc
xor
lret
xchg
nop
mov
add
mov
xor
jnp
xor
stos
fildll
pop
cmp
mov
cmp
fucomip
sbb
pop
xchg
sbb
sub
ret
cltd
mov
inc
sub
cmp
ljmp
mov
loop
fnsave
mov
cli
mov
ds
add
pop
or
jb
out
adc
cld
cli
out
clc
inc
out
mov
dec
push
adc
inc
adc
cmp
jb
leave
fwait
mov
lret
pop
ret
outsb
ret
mov
shlb
enter
dec
loopne
jb
ret
gs
jle
mov
test
lods
cmpsb
ret
jb
ss
and
ljmp
jnp
cmp
repz
fmull
inc
xor
mov
and
sahf
push
ljmp
loope
pop
mov
push
xor
or
jae
ret
mov
dec
sub
sbb
lea
jae
stos
stc
hlt
repz
mov
sbb
ja
enter
adc
mov
xor
push
mov
nop
pop
test
mov
js
add
inc
lods
xchg
out
dec
xchg
mov
cmp
test
inc
add
jl
negl
mov
xor
fisttpll
jnp
xorl
int
fsub
lock
fs
leave
adc
subb
cmp
enter
add
test
dec
add
mov
movsb
add
jg
add
dec
call
adc
loopne
mov
shr
pop
xchg
dec
mov
fsts
imul
hlt
out
repz
mov
mov
mov
xor
sbb
repnz
push
xor
mov
push
add
loop
jmp
mov
or
mov
in
dec
stos
outsl
sub
inc
pop
pop
insl
sub
and
jmp
adc
inc
ljmp
or
cmpsb
add
xchg
sbb
test
cmp
pop
push
jae
insb
xor
xchg
test
movsl
dec
scas
push
inc
in
loopne
xor
push
adc
lret
lea
iret
lock
mov
icebp
js
jbe
orl
cmp
and
adc
jle
dec
cmp
movsl
mov
jecxz
mov
adc
jns
test
add
jnp
mov
lahf
les
push
adc
dec
aas
fs
pusha
jns
jae
pop
adc
jnp
cltd
adc
iret
or
sbb
jp
scas
mov
push
pop
xlat
shrl
adcb
jecxz
sahf
sti
inc
mov
stos
call
cmp
adc
repnz
das
dec
xor
aad
xor
cmp
lea
out
dec
pop
push
enter
or
lea
inc
mov
add
shlb
cmp
push
ret
les
jg
les
xchg
mov
jmp
sub
cmp
cli
cmp
cmpsb
and
into
pusha
xor
or
inc
jg
or
mov
jle
out
movb
xor
pop
xchg
insl
sub
repnz
mov
xor
or
pop
push
in
mov
cmp
imul
out
mov
cmp
cwtl
adc
dec
sbb
push
cwtl
mov
outsl
jb
dec
push
mov
clc
cs
xlat
xchg
popf
lods
inc
push
popa
jnp
inc
loope
out
jge
push
or
sub
and
shll
push
or
sub
paddd
sub
cmp
or
repnz
andl
iret
jae
loop
mov
pop
pop
mov
fsubl
mov
outsb
filds
sub
inc
sahf
fidivrl
mov
testb
adc
and
gs
mov
sahf
fimull
in
dec
lret
adc
sub
cmp
cli
cmp
sbb
cld
xchg
mov
xor
in
inc
dec
add
xor
into
idivb
rcrb
jae
sar
inc
jg
inc
out
enter
add
xchg
andl
or
iret
mov
bound
cli
sbb
sbb
mov
cmp
pop
movsb
jg
xchg
or
ret
adc
mov
add
inc
add
pop
pop
stc
rcl
mov
xor
adc
push
add
mov
push
sbb
insb
mov
xchg
xchg
or
stc
or
inc
outsb
sub
dec
inc
lret
lds
sub
ss
push
ljmp
or
xchg
or
sbbl
lret
mov
gs
adc
fs
sbb
mov
cmpsb
loope
or
jno
in
lret
pop
push
mov
imul
jmp
mov
mov
stc
movsl
clc
lcall
xchg
lret
ret
mov
xchg
movsb
repz
pop
in
jg
fdivr
sti
stos
rsqrtps
or
jnp
stos
xor
addb
loop
subl
jmp
sub
jp
inc
ss
mov
xor
inc
mov
jne
ss
mov
movsl
cmp
dec
fstl
call
cld
int
lock
sbb
xor
jmp
rcrl
xor
adc
xchg
inc
out
ss
or
int3
dec
adc
cmp
inc
in
gs
or
mov
notl
pop
adc
lret
cmp
mov
xorb
nop
push
sub
or
or
lock
bnd
dec
sbb
adc
jg
or
decb
ss
ljmp
out
xchg
xchg
in
sbb
push
push
jae
fdivp
xchg
mov
fistpll
or
mov
adc
sbb
jbe
jg
sti
pop
clc
push
cmp
push
and
enter
imul
cmc
mov
fcom
push
stos
test
or
ror
pop
cli
cwtl
cld
pop
pop
test
loop
jne
jle
pop
add
lret
shrb
or
sub
sbb
es
imul
mov
pop
mov
dec
jo
mov
add
cmp
stos
mov
mov
loopne
fsubs
movsb
and
imul
mov
dec
mov
repnz
mov
lock
mov
jp
sub
dec
mov
ret
filds
aad
ds
testl
pushf
icebp
mov
xchg
and
cmpsb
leave
xchg
stos
jmp
repnz
jp
or
bound
test
mov
fcmovu
out
lock
xor
xchg
push
movsl
repz
sub
aaa
lock
mov
sub
add
sbb
pop
lods
out
jno
xchg
inc
push
pop
pop
lret
test
xlat
lret
jae
jmp
pop
dec
cmp
adc
jnp,pn
mov
inc
xchg
movsb
lcall
mov
jb
or
repnz
add
or
adc
mov
inc
jo
push
or
movsl
lea
les
add
xlat
in
cmp
lods
mov
pop
pushf
scas
mov
sub
pop
out
push
sbb
cld
pop
fs
mov
or
cs
adc
pop
or
inc
imul
inc
sub
cmp
test
cmp
stos
sub
cmc
es
mov
icebp
insb
stc
inc
xor
int
mov
mov
add
or
pop
xor
test
sbb
inc
mov
inc
mov
andb
or
imul
loope
jmp
into
push
inc
inc
or
es
ret
dec
lods
in
or
pop
inc
add
fdivr
rcrl
gs
push
sbb
mov
mov
and
scas
pop
pop
fwait
jl
xor
addr16
xchg
sar
iret
mov
out
push
mov
pop
out
leave
xlat
mov
push
xlat
cmpsb
std
push
fisubrl
inc
dec
stos
xor
nop
lcall
inc
ds
xadd
add
cli
out
hlt
mov
cmp
mov
mov
icebp
call
leave
or
icebp
pop
add
xor
mov
xchg
fsts
mov
mov
pop
push
sbb
jmp
mov
inc
dec
movsb
pop
mov
sbb
std
or
and
pop
dec
pop
lea
std
rclb
cld
sarl
mov
mov
inc
push
addl
cmp
push
shrb
mov
mov
xchg
and
mov
push
and
jg
lret
test
push
les
fwait
std
nop
int3
jmp
sbb
loope
mov
cli
cltd
mov
xchg
cmp
cwtl
lds
out
xlat
push
cmp
movsb
jmp
pop
pop
filds
aaa
cmp
ret
push
cmp
push
stos
cs
adc
pusha
xlat
adc
adc
ljmp
popa
movsb
inc
testl
stc
sbb
arpl
cli
add
push
aaa
les
lret
repz
fdivrl
and
adc
daa
sbb
call
movsl
popa
add
mov
mov
pop
mov
lcall
pop
mov
lahf
xor
mov
out
cmp
cmp
rorl
ljmp
cmp
dec
sti
adc
addl
pop
dec
addb
jnp
and
jmp
mov
imul
arpl
adc
rcrb
dec
aad
jnp
rep
cld
lret
aad
sti
dec
mov
pop
repz
lret
dec
jbe
in
mov
and
mov
call
cmp
inc
outsb
pop
xor
imul
push
push
ljmp
and
cwtl
imulb
lea
xchg
xchg
addr16
mov
enter
lock
fwait
push
jae
stos
cmp
xor
inc
rclb
xchg
mov
arpl
inc
cmpsb
adcl
sub
addr16
jp
mov
push
pop
adc
or
repz
sbb
loopne
cmpsb
test
aam
and
jmp
inc
sub
dec
sbb
lcall
jbe
popa
test
ljmp
xchg
fldcw
es
adc
and
scas
lret
out
push
pop
pusha
in
loop
arpl
mov
mov
mov
adc
ljmp
int
rorl
fsts
pop
sbb
sub
or
jae
or
push
add
push
pop
arpl
push
pop
xchg
test
pop
mov
lods
cmpsb
mov
push
jl
dec
xchg
and
push
push
in
mov
test
pop
out
sbb
jnp
pop
adc
movsl
mov
pop
sbb
pop
push
das
out
enter
xor
aas
sub
jle
push
or
stos
test
or
sub
fidivs
rorl
test
adc
cmp
inc
fiaddl
fsubrl
cmpsl
ret
lret
rcrb
adc
lea
dec
push
test
lahf
cmpsl
push
in
push
cltd
xchg
cmpsl
in
scas
jecxz
jnp
jns
cli
test
idivl
jmp
ja
jno
testb
sbb
cmovnp
movsb
cmp
sub
add
or
repnz
mov
enter
pop
push
jmp
hlt
out
inc
push
adc
xor
dec
in
xor
cmc
or
sub
mov
xor
icebp
adc
cmp
mov
pop
out
ds
pop
lret
ret
xlat
mov
cmpsb
nop
ret
jnp
pop
daa
xor
cmp
push
bound
movsb
inc
or
inc
mov
jge
loope
push
je
jecxz
enter
mov
pushf
or
sbb
pop
or
hlt
test
sbbl
push
pop
test
test
and
cltd
sub
out
jmp
dec
ljmp
cmpsb
js
cmp
ljmp
fptan
js
test
add
mov
or
mov
push
stos
xchg
notl
xor
rorb
in
outsl
mov
sbb
mov
cmp
cmp
inc
push
mov
loopne
jae
aad
mov
mov
sahf
fxtract
push
jecxz
lock
movsb
sbb
test
outsl
test
xchg
or
add
into
pop
fdivrl
int
adc
xchg
dec
xor
arpl
push
inc
mov
test
pop
int
sbb
inc
add
cmp
ljmp
push
cmp
mov
xlat
mov
arpl
flds
add
pop
call
fucomi
pop
push
inc
js
dec
mov
lock
sub
push
dec
sbb
pop
and
mov
lcall
insb
or
adc
pop
and
or
jns
lret
and
jnp
test
inc
add
mov
aaa
sbb
ss
dec
ljmp
bound
fidivl
add
mov
push
inc
call
jns
jns
movsl
inc
xchg
fsubs
jne,pt
data16
icebp
xor
mov
xchg
push
sbb
mov
sub
xchg
cmp
ret
outsb
pop
sbb
mov
xor
mov
jnp
xorl
push
gs
dec
xor
stos
inc
sbb
adc
daa
fcoms
push
lret
lea
gs
jmp
adc
mul
mov
addr16
stos
std
inc
sti
xchg
adc
fucomp
xchg
cmp
lods
into
inc
bound
in
pop
fwait
ret
mov
roll
dec
gs
sbb
orl
or
ljmp
sub
into
cwtl
mov
and
sti
push
dec
out
fstpt
xchg
enter
jmp
jo
sti
mov
or
das
lret
or
jp
xchg
jb
xlat
clc
dec
nop
mov
sbb
test
fsub
ljmp
push
xchg
lret
stos
xor
push
or
roll
stos
addr16
add
pop
cld
imul
call
pop
dec
shrl
inc
inc
cld
lcall
sbb
or
dec
punpckhbw
rolb
lret
add
insb
xor
mov
mov
mov
mov
jp
js
or
adc
cmp
cmp
outsl
imul
bound
out
xchg
ds
pop
mov
and
cmp
loop
mov
out
ds
mov
ja
movlps
mov
fiadds
inc
push
mov
outsb
add
stos
inc
push
mov
cmp
jo
inc
add
cli
or
add
lock
sub
in
fwait
in
cmp
xchg
xor
pop
fsubrl
add
pop
sbb
icebp
cli
sbb
mov
pop
xor
dec
daa
pusha
cmp
insl
outsb
fstl
add
or
mov
jb
fxam
inc
xchg
mov
in
mov
cmpsb
mov
xchg
jl
gs
cmp
insl
push
xor
cs
jmp
in
enter
xchg
push
divb
pop
xchg
cmp
cli
inc
or
mov
xor
ljmp
mov
jmp
movsb
scas
adc
jo
jb
adc
xor
cmp
out
into
push
rorb
lods
jmp
out
cmp
aas
stc
mov
fidivs
aaa
fiaddl
pop
std
lds
or
or
jo
pop
cmp
push
adc
cs
jnp
sub
test
filds
sbb
jmp
mov
in
cli
loope
loopne
adc
js
adc
xor
push
int
sar
daa
inc
sbb
mov
decb
and
or
aaa
dec
cmp
lret
stos
sbb
ret
popf
cmpsb
jp
jg
pop
divl
push
add
inc
add
call
cmp
xchg
dec
add
rcr
jmp
fdivs
sbb
lea
testb
lret
xchg
out
lea
push
aaa
adc
negb
imul
cld
ret
stos
cmc
mov
insb
jecxz
lcall
pop
in
jg
ret
xchg
nop
lds
mov
push
cli
push
movsl
inc
pop
ljmp
pop
or
mov
jns
add
and
jb
pop
out
jge
cld
pop
js
pusha
das
mov
push
cmp
jg
fs
ret
mov
cmpxchg
xchg
popf
mov
xor
leave
xchg
sbb
xchg
mov
pop
xor
lahf
ret
mov
stos
mov
stc
sti
int3
add
popa
sbb
or
stc
or
sub
stos
test
cmp
pop
ds
out
sub
jg
sbb
fisubrl
jnp
dec
or
popf
xchg
push
adc
jns
add
pop
jnp
add
or
lock
adc
mov
lods
pop
sbb
push
jbe
aas
aas
hlt
cmpsl
cltd
push
jmp
aaa
cmp
fdiv
xlat
fidivs
jnp
push
mov
jg
mov
pop
mov
sbb
out
dec
xchg
cltd
bound
pop
sub
testb
loope
push
das
mov
push
jns
add
out
and
rorb
or
cmp
xor
xchg
test
fldt
mov
loop
dec
sbb
cs
mov
loop
aas
inc
xchg
xchg
outsl
dec
xchg
test
pop
xchg
xor
push
fistl
push
repz
mov
mov
cmc
jne
xchg
jae
push
fadds
aas
popa
cmpsb
int3
lea
xchg
sub
inc
cltd
mov
pusha
movsl
dec
jge
or
push
sub
sub
lret
push
push
bnd
mov
out
cmpsl
jg
enter
cmp
jecxz
cmp
cs
adcl
or
pop
mov
mov
jge
mov
cmp
cmp
and
jb
adc
jne
jno
mov
add
add
imul
jecxz
in
dec
scas
test
sbb
dec
outsl
into
push
push
xchg
cld
cli
mov
sub
xchg
outsb
aam
cwtl
or
and
add
int3
cli
cmp
popf
cmp
fs
rcrl
mov
mov
sbb
in
pop
cmp
jmp
mov
lret
sbb
ja
mov
mov
in
scas
dec
mov
mov
mov
cmp
cs
jp
cmp
pop
xor
repz
jb
inc
or
shlb
cmp
cltd
mov
fwait
dec
daa
lret
shll
xchg
or
lods
lods
pop
out
push
lock
fistpll
add
movsl
add
daa
sbb
push
mov
xor
sub
push
cmp
mov
cmc
mov
pop
movsb
comiss
cmpsb
mov
fcmovnbe
divb
push
add
shr
lret
cli
jne
addr16
push
jno
lods
jp
jno
idiv
sbb
or
dec
and
or
in
xchg
cli
cmp
dec
mov
int3
fucomp
push
pop
push
adc
arpl
jnp
out
icebp
or
cs
pop
ret
ja
dec
lods
xor
pop
inc
push
mov
ret
sbb
ret
dec
xchg
ljmp
clc
jge
lret
cmp
lds
mov
bound
mov
dec
xor
rcrl
imul
ret
js
iret
add
imul
lret
out
subl
pop
dec
and
popf
outsb
push
mov
out
jmp
dec
loope
jl
js
pop
xchg
test
add
movsl
mov
sbb
or
mov
xor
arpl
mov
xchg
xorb
imul
pop
rcll
ds
insb
test
push
testl
lods
push
enter
push
and
xchg
xchg
ljmp
shrl
inc
stos
jae
sbb
dec
jne
daa
sbb
stos
mov
adc
daa
and
adc
add
inc
decl
pop
xchg
or
sub
fildll
arpl
out
repnz
push
inc
into
inc
or
aas
push
lcall
sub
cmpb
nop
fcompl
loope
mov
insl
mov
xchg
mov
push
mov
arpl
adc
xor
xchg
daa
in
jmp
or
xchg
pop
clc
mov
addr16
adc
ficoms
bound
mov
or
pop
sbb
pop
lret
aam
int
out
xor
jmp
xchg
shr
sub
mov
sbb
adc
mov
sbb
cmp
adc
sti
jecxz
push
pop
ss
lcall
xchg
adc
loope
lock
lret
pop
stc
es
stos
mov
pop
cltd
cmp
lret
xor
jb
inc
xchg
scas
in
cmp
sbb
inc
lret
sub
stos
lcall
xchg
scas
psraw
xchg
pushf
xchg
out
jmp
xchg
add
add
jns
jl
xor
repnz
mov
inc
adc
test
rcl
push
sub
adc
fdivrp
jae
cmp
ret
or
xor
sub
sbb
out
xchg
fmull
stos
cltd
cli
mov
pop
scas
repnz
adc
aaa
cli
and
push
push
push
pop
pusha
sbb
inc
orl
in
and
xor
lea
cmp
cmp
sbb
xor
xorl
pop
inc
into
jg
lret
xor
or
repz
inc
dec
fstl
or
aad
outsb
sbb
roll
or
js
xor
rcll
jp
inc
outsb
out
shrb
cwtl
dec
test
lock
fildl
mov
push
push
sub
cwtl
push
rorl
enter
add
int
sahf
adc
in
ficomps
add
repz
test
xchg
aas
mov
or
stos
add
and
roll
mov
ja
push
and
std
pop
pusha
jbe
cmp
sub
ljmp
xchg
pop
adc
lret
lret
push
push
scas
js
dec
fimuls
pop
sub
mov
dec
stos
ret
int3
xchg
mov
outsl
add
test
insl
sbb
negl
pop
addl
push
mov
clc
stos
xor
and
mov
in
ljmp
mov
shlb
sub
pop
call
rorl
lret
pop
addr16
or
xor
incl
stos
push
sbb
pop
stos
repnz
aam
xchg
push
fildll
xchg
pop
aaa
xchg
mov
cmp
push
cmp
aam
adc
dec
daa
shld
fstpt
jnp
pop
mov
add
push
xor
cltd
inc
in
adcl
cs
push
movsb
ficoml
adc
rolb
aaa
stos
pop
or
nop
mov
adc
and
dec
jecxz
es
adc
in
cmp
xchg
pop
into
imul
std
pop
mov
sub
out
pop
rcll
jb
pop
repnz
adc
stos
test
das
mov
push
fwait
out
aam
int
push
jmp
jg
xchg
pop
pop
cmc
or
adc
jb
cmp
cwtl
mov
pop
or
xchg
cmc
jo
xor
cmp
or
imul
das
cmp
xor
ss
enter
jb
jecxz
sbb
cmc
mov
mov
ljmp
mov
push
sbb
pushf
add
xlat
dec
sub
pop
aad
sub
js
imul
aaa
in
loopne
xchg
mov
xor
xchg
mov
insl
je
and
dec
push
testl
fcoms
mov
arpl
jnp
push
mov
arpl
fwait
mov
pushf
cmp
push
add
or
jecxz
js
cmp
mov
fs
xlat
jbe
pop
pop
add
sub
cli
inc
push
sbb
adc
sbb
add
insl
cmp
and
frstor
mov
lods
mov
rclb
out
or
mov
lcall
xor
imul
ja
and
lret
push
lret
jnp
jns
add
out
cmp
ljmp
fstpt
int3
mov
add
mov
mov
inc
inc
mov
aaa
sti
cmp
xchg
sti
fcmovne
push
pop
out
loop
mov
outsb
dec
cmp
fcoml
cli
add
nop
or
jge
xchg
mov
pop
imul
mov
pop
push
mov
repnz
dec
stc
mov
push
imull
daa
lock
adc
fs
repz
lahf
mov
jo
cmpsb
push
imul
lods
add
fld
punpckhbw
jbe
sbb
lds
cmp
cltd
and
and
andb
into
js
imull
push
adc
xlat
loopne
loopne
cmp
or
sahf
inc
or
test
gs
xchg
xlat
sbb
fildl
jbe
inc
xor
lods
push
jmp
inc
cmp
cmp
add
aaa
stc
scas
or
das
sbb
popa
insb
mov
in
mov
ficoms
cli
or
mov
addl
daa
and
rcrb
sub
fldl
loopne
divb
xor
or
push
stos
xchg
aaa
mov
ljmp
fidivs
lcall
mov
ss
into
cmp
inc
mov
pop
mov
push
idivl
clc
jmp
in
and
psubusb
sbb
dec
in
into
stos
ror
test
sarb
dec
mov
sub
lock
pop
lock
mov
stc
pop
lret
arpl
fcomip
rorb
xor
xchg
outsb
clc
xor
dec
clc
mov
call
cld
cmp
or
pop
pop
out
jecxz
repz
jnp
gs
push
addr16
inc
jns
lret
test
sbb
cmp
and
roll
cwtl
cltd
icebp
pusha
xor
je
daa
push
dec
imul
sub
or
leave
push
or
sub
arpl
mov
pop
in
xchg
mov
jne
scas
cld
sti
mov
mov
out
push
cs
out
inc
jecxz
cltd
test
cmp
dec
push
mov
xor
mov
fidivrs
aam
pop
jno
lods
mov
or
bound
xchg
sbb
movsb
cmp
dec
push
jbe
pop
fmull
mov
jmp
flds
pop
cld
adc
mov
test
sub
and
in
imul
push
cs
ret
pop
movsl
or
das
maxps
mov
mov
push
sti
adc
dec
or
inc
movsl
xor
testb
or
imul
outsl
je
jnp
out
mov
push
dec
popf
call
les
cwtl
sub
pop
mov
lock
cmp
pop
imul
jg
mov
push
addr16
shrl
daa
dec
inc
rorb
cmpsl
std
push
jno
dec
insl
fsts
pusha
pop
std
cmp
or
mov
or
pushl
sahf
iret
add
pop
push
pop
rclb
popa
and
lods
ficomps
popf
out
or
into
cs
cmp
xlat
gs
neg
adc
sbb
aam
jb
int
adc
inc
in
add
data16
lea
push
setb
mov
leave
repnz
sub
fwait
mov
lret
add
xchg
mov
imul
push
repnz
adc
aad
mov
ja
mov
fbstp
adc
int
aad
xor
ss
push
or
repz
enter
shrl
dec
xchg
push
cld
sti
lea
imul
mov
mov
jmp
test
inc
push
push
jmp
mov
out
mov
adc
stos
lea
xchg
mov
mov
fbstp
pop
leave
std
mull
mov
outsb
dec
mov
xchg
pushf
mov
mov
clc
pop
push
or
push
popa
jnp
push
outsb
jae
sbb
mov
xchg
push
repnz
sbbl
std
push
lahf
in
int
lea
pop
sub
dec
insl
icebp
mull
fwait
sub
jp
loop
and
push
popa
xor
ficomps
xor
xor
lcall
lahf
ss
mov
jbe
dec
mov
icebp
mov
imul
mov
lret
mov
mov
into
pop
orb
stc
shl
lock
add
ret
mov
cmpsb
pop
icebp
outsb
inc
ficoms
call
and
mov
jnp
push
filds
sub
arpl
es
mov
pop
sub
pusha
test
dec
jns
sarl
xor
and
add
sbb
add
daa
add
out
daa
loop
jmp
and
fidivrl
inc
notb
or
pop
adc
sbb
push
rcll
mov
xor
xchg
push
pop
mov
push
pop
push
mov
ret
or
push
and
into
negl
in
push
jmp
cli
jl
inc
adc
lock
test
inc
sbb
pop
outsb
add
sub
aas
xchg
aaa
mov
jo
pop
in
push
jmp
xchg
fsubr
mov
cmpl
jo
rcrl
aas
xor
mov
pushf
test
cmpsl
cs
subl
or
movsb
add
stc
cmp
leave
jns
or
sbb
roll
cltd
ficompl
rcr
idivb
and
jb
mov
sbb
rcrb
push
repz
add
es
sub
mov
adc
or
or
mov
testb
repz
or
xor
inc
fnstenv
cltd
push
jno
int3
cld
sbb
decb
add
repz
add
orl
int3
push
jle
inc
mov
add
mov
pop
sarl
xchg
aas
add
adc
cmp
inc
gs
mov
add
cli
cld
jg
mov
adc
xor
push
push
int
dec
in
fbld
arpl
in
call
xchg
push
xor
inc
sub
ljmp
sbb
mov
repz
fdivrl
cmpsb
inc
push
mov
pop
xchg
mov
popf
push
push
cwtl
mov
push
repz
adc
inc
pop
inc
sub
das
cmpsb
test
dec
test
or
xchg
notb
cwtl
fsub
sub
iret
int
fsub
inc
push
arpl
es
xlat
adc
pop
inc
cltd
adc
dec
and
adc
xchg
jo
cmp
mov
jo
jns
cwtl
int3
lods
and
mov
lods
push
sub
popf
repnz
jae
enter
mov
lret
mov
mov
cmp
and
jo
mov
push
pop
test
popa
imul
fcoml
call
ljmp
test
push
mov
mov
jecxz
cli
lock
xchg
lret
xchg
repnz
pop
sbb
inc
or
lret
jbe
jl
rcr
cli
sub
hlt
lods
out
dec
arpl
push
inc
mull
jle
mov
and
push
loope
andb
call
sub
rol
add
or
lock
lret
inc
popf
mov
pop
xlat
jno
repz
jb
mov
loop
add
cmp
push
sbb
sbb
fldenv
dec
imul
push
mov
mov
inc
je
add
in
pop
rclb
push
jg
xor
inc
dec
sahf
dec
mov
mov
dec
xor
outsl
cli
or
mov
imul
or
cmp
movsb
adc
pusha
mov
or
jnp
or
sbb
stc
in
sbb
sbb
imul
lods
push
sahf
lock
xchg
sub
push
mov
out
push
mov
pop
push
enter
dec
nop
cltd
ds
pop
mov
mov
and
out
mov
pop
mov
or
sub
mov
sub
or
push
mov
es
dec
ljmp
sub
pop
push
pop
inc
sub
mov
scas
push
xor
notl
aam
sbb
idivb
mov
dec
jns
int3
or
ret
pop
xchg
xor
push
sub
mov
and
hlt
xor
ljmp
stos
sub
shll
or
lds
enter
decl
sub
andb
lcall
xor
or
sbb
int
push
mov
repnz
lret
adc
mov
mov
sbb
sub
xor
bnd
rolb
hlt
push
jb
push
out
lret
or
sub
pop
outsl
fisubs
pop
add
sub
adc
xor
ret
sub
mov
adc
stos
stos
sbb
xor
jg
cmp
cmp
fidivrl
inc
xor
add
call
mov
ljmp
ss
push
arpl
jp
arpl
loop
xor
and
and
sahf
fisttps
jge
or
das
jmp
arpl
inc
movsl
sub
cltd
pop
gs
imul
arpl
pop
test
cmp
adc
mov
sbb
out
mov
xor
cmp
mov
mov
jg
inc
inc
cmp
or
jo
inc
fadds
add
jo
push
cli
cmp
mov
test
ljmp
or
imul
scas
xchg
mov
movsb
jbe
cmp
sub
jns
or
push
xorl
pop
lock
dec
loop
cmp
push
bound
mov
adc
sbb
pop
mov
pop
nop
call
mov
sub
lea
pop
jno
into
jnp
push
sbb
out
and
push
cs
push
mov
das
sub
jmp
mov
arpl
fisttps
adc
inc
pop
sbb
test
test
sub
repnz
sbb
aam
cmpsl
cmp
or
mov
das
lret
mov
insl
pop
push
sbb
jmp
fldln2
lret
mov
or
mov
add
xchg
sub
daa
cmp
jp
inc
ja
add
mov
sbb
dec
dec
in
jmp
xor
mov
mov
hlt
xchg
jo
ret
jl
fcmovnbe
fwait
clc
into
ds
jne
rorb
push
outsb
fwait
subl
outsb
add
add
aas
movsb
mov
mov
mov
push
mov
adc
into
testb
fstpt
jmp
jnp
shll
cmp
dec
push
insl
add
pop
loop
or
sub
test
arpl
in
es
cmp
sbb
xchg
frstor
or
mov
addr16
xor
ljmp
cmp
add
ljmp
mov
jmp
lret
xor
pop
push
jmp
jge
push
sbb
ret
jg
and
cli
mov
jp
add
out
push
das
fiaddl
mov
and
repz
cmp
pop
mov
mov
adc
or
push
xor
enter
repnz
ljmp
add
or
pop
push
lea
out
dec
or
mov
fistpll
test
cmp
adc
add
xchg
test
ja
fists
lret
sub
mov
mov
push
cltd
lods
sti
mov
xor
cwtl
aad
mov
aad
dec
mov
std
sbb
push
lcall
jp
mov
jecxz
sub
mov
push
shrb
mul
sub
xlat
stos
or
pop
mov
orb
dec
loope
js
adc
scas
push
xor
pop
ss
xor
out
sub
nop
sbb
cmp
add
mov
fldt
stos
adc
push
jo
push
call
das
cli
mov
cltd
mov
xor
inc
fisubrl
test
adc
push
push
pop
jns
stos
xor
sti
idivb
mov
inc
pop
jge
jle
fcmovne
jnp
fcoms
fcoml
mov
mov
ret
or
ds
fs
adc
cmp
xchg
mov
sti
xchg
cld
pop
xchg
ljmp
add
jbe
scas
fmulp
repnz
filds
stos
repnz
push
fnstenv
stc
push
inc
lds
test
stos
lea
mov
mov
mov
stos
cmp
mov
roll
divb
dec
out
mov
sbb
cmp
cmp
popa
cmp
jg
shlb
mov
cmp
lcall
mov
lea
inc
pop
mov
jno
mov
int
repnz
mov
dec
arpl
pop
and
shl
push
xor
fistps
sbb
ss
dec
xchg
je
sbb
jecxz
rep
popa
lods
adc
jbe
call
fidivrl
jbe
xor
imul
iret
mov
sbb
ljmp
mov
xchg
or
jmp
pop
xchg
pop
adc
scas
mov
sub
pop
sub
les
cmpsb
sti
movsl
outsb
jmp
scas
outsb
cs
repnz
add
mov
orb
and
ss
lcall
aaa
cmpsl
mov
cmp
mov
ret
sub
push
sub
fwait
add
pop
mov
aam
add
adc
pop
sbb
popa
or
ss
lods
leave
call
add
mov
jno
shr
xchg
xor
mov
mov
mov
sub
push
loopne
adc
inc
mov
leave
pop
dec
xchg
sub
jg
cmp
ficoml
dec
enter
xlat
pop
je
cmp
ret
sbb
testl
mov
repnz
xor
push
inc
jp
pop
pop
or
popf
xlat
adc
jae
and
inc
mov
cltd
cld
aas
fistl
fdivrs
jnp
jp
mov
sub
xchg
dec
mov
and
gs
mov
fmull
xor
or
out
or
pop
push
ficoml
dec
leave
mov
dec
cli
aas
leave
sbb
and
mov
movb
pusha
cmp
ds
mov
inc
jp
into
mov
mov
cmpsl
xor
in
sbb
imul
fsubrs
ljmp
imul
jns
sahf
enter
icebp
dec
xchg
aas
xchg
in
fs
loopne
xor
cmp
fwait
cmpsb
bound
sub
pop
fld
sub
xor
or
push
std
sahf
cli
das
push
repnz
ljmp
xchg
cwtl
jne
repz
enter
adc
js
adc
or
or
rcr
and
and
fs
push
aas
and
pmaxsw
adc
mov
push
fcomi
xor
lock
lret
push
testl
adc
out
iret
pop
das
jmp
sub
mov
bound
xchg
jmp
lcall
sar
aaa
cmp
pushf
loop
jmp
inc
in
jo
adc
jp
pop
stos
repz
enter
pop
add
in
je
and
shlb
lods
cmp
cmp
scas
sbb
xor
incl
invd
xchg
sbb
sub
dec
scas
push
repz
sbb
jae
adc
cmp
jbe
cmp
scas
std
call
out
jno
xor
ljmp
negb
repnz
or
xor
stos
lret
das
mov
sbb
gs
in
fptan
aam
pushf
or
mov
xlat
out
fcompl
adc
mov
hlt
je
inc
cmpsb
cmpsb
or
fwait
sbb
movsb
test
fsub
stos
adc
xchg
addl
inc
add
test
arpl
sbb
xor
in
mov
jnp
negb
pop
fisttps
push
popf
jmp
jne
popf
aam
out
ljmp
lcall
push
loop
mov
out
add
add
decl
dec
sbb
daa
pop
or
subl
nop
sbb
cld
fs
out
lret
rclb
loop
shlb
fisubrs
enter
cmp
sbb
ljmp
pop
rolb
scas
adc
jge
es
mov
dec
mov
repz
out
cmp
punpckldq
mov
mov
xor
and
dec
sarl
icebp
push
xor
fsubr
adc
aaa
sbb
dec
inc
mov
xchg
xchg
fs
dec
add
sub
inc
inc
lret
adc
lret
ret
sub
sbb
ljmp
cli
cs
jne
jnp
pusha
cltd
dec
loopne
out
insl
push
cwtl
mov
mov
and
mov
movsb
and
dec
jle
fistpll
lret
aam
mov
stos
in
jb
ds
mov
ret
add
repnz
and
lret
or
push
fcomip
sbb
cmp
je
cltd
xchg
jns
xor
jo
xchg
in
test
les
push
xor
es
xor
sub
hlt
cmc
pop
popf
stc
mov
outsb
add
adc
mov
out
jnp
int3
cmp
repnz
sbb
xchg
push
mov
fs
pop
in
add
or
imul
mov
mov
cltd
mov
outsl
xor
flds
or
push
fisubrl
or
sahf
lret
push
lret
or
cmp
sbb
inc
cli
or
xchg
push
outsb
imul
mov
inc
test
neg
xchg
out
ljmp
test
push
stos
mov
mov
and
out
jmp
or
enter
les
orb
mov
jge
or
leave
xrelease
sub
test
ljmp
adc
iret
add
out
scas
jmp
pop
push
je
jecxz
and
add
fdivrs
mov
fists
int
cmp
cmp
inc
xchg
inc
dec
out
xor
sub
push
dec
bound
fwait
shlb
into
dec
mov
loopne
push
arpl
dec
add
outsl
push
add
fucomip
sub
cmp
mov
and
adc
std
jb
scas
jecxz
mov
xchg
jecxz
mov
flds
divl
jmp
xchg
dec
outsl
push
cmpl
sahf
or
out
sbb
mov
gs
push
mov
mov
shl
or
movsl
lods
inc
insb
and
add
push
divl
and
insl
mov
stc
xor
pop
arpl
push
push
sbb
sub
fmull
push
jb
mov
mov
xchg
ja
push
pop
clc
inc
jl
mov
movsl
pop
enter
out
jbe
and
pusha
fiadds
daa
dec
fs
pop
out
inc
pop
in
mov
fs
movsl
scas
fildl
or
sub
dec
mov
iret
popa
mov
cmp
cmpsb
arpl
shlb
out
leave
xlat
pusha
jns
sub
rcr
jnp
jl
stos
add
and
or
mov
jg
sub
outsl
js
lock
pop
in
pushf
or
into
mov
sbb
pop
adc
cmp
dec
push
lret
xor
iret
fistl
aaa
push
jno
pop
mov
adc
adc
aas
imul
es
add
cli
inc
sub
dec
xor
xchg
cld
sub
push
cli
out
sub
mov
scas
divb
push
fcoms
cmp
ss
xchg
pmaxsw
hlt
inc
movsl
aad
scas
mov
push
xchg
sub
xchg
stos
push
xchg
fsubrs
cmp
adc
mov
gs
pop
divb
mov
ss
test
sub
inc
xlat
pop
mov
test
stos
daa
push
lret
sub
movsl
xor
test
xor
adc
push
cmpsb
push
xchg
sbb
sub
repnz
cmp
cmp
lret
pop
ljmp
test
push
and
in
popf
loopne
add
xchg
ds
mov
out
push
mov
dec
ret
push
mov
jmp
int
ja
fcompl
or
push
ja
add
jecxz
neg
ja
adc
sbb
fs
or
repnz
in
arpl
push
dec
jp
es
psubusw
cmp
jnp
insb
and
cmpsb
mov
in
mov
adcb
inc
loope
fstps
mov
daa
pop
xor
gs
add
adc
mov
ljmp
mov
lea
movsl
mov
cmpsb
ljmpw
push
sub
ja
jmp
dec
cmp
fs
pop
mov
jmp
mov
pop
out
pusha
push
je
cmp
out
jg
ljmp
mov
stos
or
mov
mov
ljmp
xchg
repnz
out
mov
addr16
jns
cmp
insl
add
call
enter
jle
bound
clc
sbb
pop
decl
or
xor
test
pop
sbb
push
mov
icebp
xchg
inc
xchg
inc
pop
push
add
aas
jp
push
mov
push
fiaddl
pop
movsb
cmp
ret
enter
mov
xchg
xor
pop
mov
cmp
sbb
mov
aaa
in
loop
or
lcall
cmp
jmp
add
push
ret
xor
cwtl
sub
clc
and
cmpsl
insl
andb
mov
xorl
jno
push
ljmp
xchg
push
icebp
mov
cmp
fsubrl
fdiv
hlt
push
mov
dec
push
les
popf
xchg
arpl
xchg
cmp
jecxz
icebp
mov
mov
push
out
inc
mov
inc
test
or
ret
ja
aas
test
sbb
popa
push
cmp
shrl
repnz
lret
aas
xchg
cmp
fisttps
cmpl
into
and
xchg
cwtl
in
sbb
das
stos
cli
cli
gs
jns
xlat
inc
cmp
daa
dec
mov
dec
sti
mov
imul
mov
xor
jle
ja
jecxz
lea
jnp
sub
xor
pop
inc
lcall
or
stc
pushf
xchg
cwtl
pop
in
sahf
int
xor
shlb
inc
jo
jae
stos
out
fisubl
ljmp
popf
pop
in
fisubrl
nop
mov
and
xchg
filds
push
testl
cmp
adc
push
bound
testl
xchg
or
cmpsb
jno
std
push
pop
cwtl
rorb
mov
xchg
cwtl
lods
mov
mov
out
sti
xor
call
cmp
repnz
cs
mov
push
push
imul
and
mov
adc
mov
in
out
mov
int
cmpsl
shlb
pop
dec
xor
dec
push
test
pop
cli
or
xor
mov
dec
cltd
adc
movsb
inc
int
jnp
xchg
fidivrl
orl
jp
sub
adc
dec
movsl
lods
mov
push
idivb
dec
cli
pushf
mov
std
mov
or
sub
adc
insb
aas
mov
inc
dec
lret
sbb
jmp
roll
call
xor
mov
push
fucomp
xor
aas
add
call
outsb
mov
pop
or
or
inc
stos
dec
gs
mov
xchg
std
xchg
jne
cli
pusha
jle
out
push
scas
or
jg
jb
sub
test
xor
and
jnp
add
inc
bound
lock
cmp
subb
xor
pop
aad
mov
fucomp
enter
sub
sub
cmpl
cmpsb
mov
cmp
ret
mov
pop
and
lcall
stc
push
ret
dec
imul
pop
int3
cltd
arpl
repnz
aam
mov
das
in
es
jge
or
jnp
adc
loope
xchg
push
push
pop
lods
sbb
gs
mov
push
int
inc
cwtl
mov
loope
or
cmp
ds
pop
ljmp
or
stc
inc
loope
mov
in
leave
push
mov
mov
popl
xor
stos
mov
out
test
aam
sbbl
stc
sahf
lahf
pusha
xor
bound
cltd
mov
dec
fistpll
jbe
cli
mov
jb
outsb
ljmp
sbb
or
mov
jmp
cltd
push
stos
daa
imul
jmp
pushf
jcxz
wrmsr
add
lea
inc
aaa
cmp
dec
inc
fmuls
aas
add
xor
and
test
fsubrl
test
divl
dec
add
xchg
adc
mov
or
rol
cmp
cmpsb
lea
fs
ret
xchg
sti
lret
push
jb
xor
dec
cmp
je
xor
push
repz
pop
or
dec
mov
jle
lcall
jns
pop
sbb
sbb
mov
stos
fisttpl
adc
fcomps
aas
mov
loope
or
inc
out
in
inc
push
pop
lret
push
pop
idivl
shll
sub
dec
lret
enter
out
notl
push
adc
mov
xchg
or
aaa
push
lret
lods
in
sbb
lret
hlt
cmp
std
aam
lock
sub
push
inc
movsb
inc
lret
stc
mov
xchg
out
xor
xor
scas
jecxz
in
cmp
sub
mov
into
repnz
ljmp
push
nop
imul
pushf
push
or
inc
xchg
cmp
sarl
clc
sahf
leave
testb
add
sbb
jg
jp
mov
mov
pop
jns
xchg
and
sub
addb
inc
bnd
xchg
in
push
or
inc
xchg
mov
mov
out
jl
jno,pn
push
xchg
sbb
push
rcrb
pop
cmpsb
leave
pop
sub
pushf
push
mov
stos
inc
mov
mov
inc
jl
es
xor
jecxz
xlat
fdivr
cmpb
xchg
nop
jecxz
iret
in
add
insb
les
add
lock
in
fwait
popf
cmp
cltd
dec
nop
jle
inc
sub
xchg
je
iret
lods
movsl
mov
iret
sbb
lret
dec
mov
mov
jg
filds
sub
dec
adc
pop
das
sti
lcall
arpl
in
call
int3
lret
sbb
movsb
cmp
adc
dec
and
mov
xchg
or
cld
das
mov
or
out
int
pop
lret
adc
fsubrs
adc
cmp
xchg
sysret
cmc
pop
in
testb
call
lods
push
xor
test
pop
mov
mov
popa
or
sub
pop
push
and
outsl
cmp
dec
call
sbb
aas
cmc
adc
int3
sbb
das
int3
iret
adc
pop
stos
ss
notl
mov
add
mov
aas
jge
sub
add
mov
nop
fnstcw
or
mov
jmp
and
imul
sub
sbb
arpl
xchg
call
and
movsb
lock
repnz
or
dec
call
mov
xchg
fsubs
xchg
mov
mov
pop
fstpt
sub
mov
pop
orl
xor
xorl
js
add
cld
jne
cmpsb
xor
out
adc
xor
call
pop
in
cli
sub
pushf
mov
cmc
loope
jae
call
lods
push
mov
jl
or
and
xchg
movsb
push
jl
dec
lret
notb
inc
pop
leave
hlt
mov
shrb
inc
pop
push
mov
pop
mov
pop
pop
dec
mov
dec
cmp
pop
dec
lods
nop
xchg
cmp
dec
mov
iret
inc
jb
sbb
cwtl
jmp
fwait
xchg
ss
push
inc
popa
cmpsl
cmp
test
mov
ret
adc
outsb
out
mov
xchg
ljmp
xor
lahf
add
shll
repnz
fimull
arpl
cmpsl
sbb
into
pop
insl
icebp
jge
addr16
xchg
fldt
mov
xchg
lea
mov
inc
ljmp
mov
push
popf
and
sub
jbe
sarb
int
out
sub
into
lahf
jns
lea
mov
or
sub
mov
cld
jae
sahf
jnp
pop
sahf
push
xor
sti
lret
popf
jle
push
mov
mov
mov
pop
push
test
pop
into
daa
rcrb
add
jp
cmp
xchg
ret
xchg
lar
xor
push
adc
mov
test
out
in
cmpsb
mov
fimull
adc
dec
sbb
jecxz
lds
sbb
lcall
in
sbb
ss
push
lcall
pop
xor
or
sub
or
stos
or
es
loopne
mov
sbb
xchg
adc
int3
mov
push
cld
scas
out
js
xlat
mov
or
sbb
jg
lret
jno
ljmp
push
call
jbe
sarb
andl
ljmp
xchg
sbb
jmp
aam
push
repnz
push
scas
inc
jg
jns
roll
sbb
insb
push
mov
push
jge
imul
movsb
mov
adc
dec
or
dec
cli
ljmp
sbb
rcr
jle
push
into
test
cmpsb
pop
xchg
fstp
lahf
fs
mov
packuswb
push
rclb
mul
call
cwtl
sub
xchg
xchg
jnp
mov
push
pop
pop
iret
mov
subb
xchg
mov
sub
sub
xlat
mov
lret
xor
and
movsb
jmp
xlat
sbb
add
imul
xchg
cmp
add
xchg
xor
xor
mov
inc
mov
mov
xor
pushl
out
push
mov
scas
adc
lcall
pop
sbb
add
cmp
out
shll
mov
pop
pusha
sbb
stc
mov
dec
or
and
sbb
subb
fwait
and
sahf
mov
ficomps
and
loop
in
add
in
ljmp
dec
xchg
sbb
push
dec
gs
pop
loope
and
dec
or
negb
mov
mov
test
add
pusha
cmpsl
fsubrs
repnz
cld
test
hlt
divl
xchg
fwait
xchg
push
mov
pop
cmp
and
xchg
dec
mov
cmp
mov
mov
pop
aad
jnp
add
sub
shr
or
jmp
out
adc
cmp
stc
jmp
js
pop
mov
adc
and
xlat
jne
jmp
cltd
pop
push
pop
mov
sbb
out
popa
mov
repz
fs
ljmp
shlb
mov
cs
cmpsb
xor
sub
push
cmp
add
jnp
and
pop
mov
xchg
hlt
fisubl
sub
call
inc
inc
jb
or
mov
pop
shl
pop
jl
xor
dec
or
add
xchg
push
sub
mov
cs
hlt
and
xchg
xor
xchg
pop
in
cld
mov
pop
sbb
or
xchg
jne
dec
mov
adc
cwtl
in
lret
jo
push
mov
push
push
movb
xor
cs
test
fstps
out
dec
pop
xchg
sbb
cmp
enter
arpl
insl
or
adc
repnz
jmp
xor
xchg
sbb
sbb
mov
mov
addr16
pop
testb
xchg
dec
jl
popa
or
or
add
mov
and
ret
xchg
scas
icebp
addr16
jnp
cmc
jle
cmp
dec
popf
jge
mov
out
add
mov
add
pop
in
out
pop
out
lock
ljmp
mov
dec
dec
test
add
adc
mov
mov
iret
add
sbb
dec
out
fdivp
xchg
and
iret
andb
cli
fnstsw
inc
sub
ljmp
mov
loop
cmp
sub
mov
xchg
ljmp
rcll
cmp
push
mov
dec
or
jb
mov
push
or
cli
clc
loope
jns
sub
mov
ljmp
xchg
in
int
je
push
jo
sarl
pusha
sub
inc
mov
fdivrl
in
arpl
adc
mov
lcall
jnp
fs
rcl
or
sub
push
or
das
divb
mov
cmpsb
sub
fcomip
out
nop
out
aam
mov
mov
cmc
pop
pop
mov
addl
cmp
stos
xchg
dec
dec
add
lret
ljmp
mov
inc
les
ja
stc
aaa
jg
lea
sar
inc
sbb
scas
faddl
enter
jg
out
fistps
ret
xor
pop
stos
mov
pop
cmp
mov
jae
cmpsb
mov
shrd
loopne
jnp
test
enter
int
adc
xchg
add
cld
xchg
les
jb
and
stc
mov
sbb
sbb
xchg
mov
in
mov
xlat
cmp
imul
sbb
lcall
dec
xor
pop
repz
sub
or
adc
jns
loop
inc
push
testb
push
sahf
xorl
lods
stos
daa
loop,pn
lret
data16
cmp
cmp
iret
inc
mov
es
repnz
aaa
clc
xchg
fcmovnb
les
push
xchg
ljmp
mov
xor
pop
popf
and
jmp
notb
add
or
sub
adc
mov
fsubrl
ljmp
stos
lods
mov
addb
sbb
lahf
jmp
shlb
pop
pop
mov
push
mov
adc
sub
aaa
fcmovbe
fimull
aas
test
ljmp
jmp
xor
pop
jecxz
adc
mov
sbb
sbb
cli
lret
lods
test
jo
jle
leave
push
ret
pop
xor
or
ret
xchg
or
cmp
mov
mov
push
lret
cmp
or
movsb
mov
cmp
les
cwtl
aam
cld
rorl
push
icebp
xchg
in
cmp
in
in
jle
pop
rcl
imul
mov
lock
mov
add
out
out
lret
mov
hlt
popf
cmp
add
add
mov
adc
clc
clc
and
dec
test
addr16
outsl
fiaddl
call
dec
lock
push
call
mov
dec
push
sarb
jmp
in
and
xchg
mov
pop
xchg
inc
mov
add
sbb
rolb
cmp
xchg
push
push
lods
mov
stos
shll
ret
cmp
dec
inc
out
dec
xchg
xchg
insl
push
lods
sbb
xchg
mov
sbb
pusha
push
mov
sbb
adc
dec
fisttps
lret
shrd
push
adc
pop
mov
call
movsb
aad
roll
sub
adcl
sub
inc
dec
push
jecxz
add
lcall
sbb
pop
out
adc
jo
enter
aaa
les
pop
imul
mov
imul
and
mov
cmovg
loopne
push
push
lock
mov
adc
mov
xor
fimull
xchg
lret
ds
lea
jge
inc
pop
inc
push
out
pop
mov
or
cmp
insb
cmp
fstl
sub
mov
cmc
push
scas
dec
out
into
dec
sub
shl
push
test
aas
mov
fidivs
mov
fmul
sarl
inc
pop
pop
notb
cmp
jecxz
cmp
arpl
leave
push
test
pop
cmpsb
mov
sbb
xchg
loopne
out
call
push
push
sub
jb
mov
in
aaa
dec
inc
push
sbb
das
push
sbb
repnz
xchg
arpl
repnz
lods
setb
and
psadbw
jb
pop
push
iret
fcmovnb
fstpl
jb
ja
mov
mov
push
push
inc
push
lret
ss
inc
jl
sbbb
pusha
sahf
pop
inc
loopne
mulb
popa
movsl
fcomps
xchg
cmp
mov
xor
dec
addr16
mov
lahf
and
xor
mov
imul
xchg
mov
jecxz
cmp
or
inc
inc
inc
stc
ljmp
mov
cmp
mov
pop
pusha
arpl
outsl
push
loop
insl
test
sub
pop
push
ret
pusha
aaa
sub
sahf
pop
xor
or
fucomi
test
jns
ss
loopne
jo
pop
fistps
popa
xor
xchg
call
shl
adc
nop
pop
std
js
ljmp
aad
rclb
aad
xor
test
ljmp
fs
add
inc
adc
aas
sub
in
cmc
ret
push
ljmp
not
andb
in
pop
mov
popl
push
repnz
test
pop
imul
and
or
dec
scas
mov
lret
xor
jge
pop
mov
scas
fisttpll
mov
add
or
dec
adc
dec
cmpsl
push
cmpsl
dec
add
xor
sub
lret
push
stos
inc
add
lock
cmpl
or
jb
push
jp
int
dec
jnp
cmc
adc
clc
enter
pop
negl
mov
sbb
inc
ljmp
jge
dec
mov
mov
ljmp
ljmp
into
lahf
push
sbb
sti
mov
ficomps
scas
into
adc
dec
adc
jns
das
push
mov
repz
mov
jbe
push
xor
es
ljmp
fidivl
ror
inc
and
jnp
mov
push
insl
mov
xor
enter
sub
push
adc
out
push
stos
stos
dec
cmp
imul
fwait
into
outsb
add
cmp
call
into
int3
cld
mov
adc
dec
or
or
xor
repz
outsb
push
cmp
sbb
out
push
sbb
push
mov
das
mov
mov
push
inc
repz
int
cmp
enter
mov
int3
sub
out
es
add
cmpsl
mov
dec
outsb
push
lock
pop
sbb
jmp
mov
push
xchg
jo
outsb
pop
push
inc
push
push
add
jne
iret
or
imulb
dec
pop
mov
or
push
hlt
mov
stos
add
test
fs
stos
inc
shr
cmpsb
inc
dec
std
pop
imul
stc
outsb
ss
lods
lret
push
mov
mov
mov
mov
xchg
sub
clc
popa
jbe
test
mov
testl
fmuls
xor
inc
enter
xchg
pop
test
xchg
outsl
test
or
lcall
fucomi
jecxz
jb
push
xchg
or
filds
out
ret
movsb
push
add
aas
loop
mov
mov
adc
subb
push
or
sbb
or
dec
in
das
insb
jp
or
inc
loopne
stos
jnp
into
hlt
push
arpl
push
jb
push
push
scas
mov
sub
sub
ret
adc
sub
sarb
push
mov
mov
adc
mov
inc
pop
into
or
push
not
jecxz
ljmp
jp
mov
push
leave
out
loop
ss
outsb
int3
imul
dec
fmul
ret
jmp
mov
inc
sub
ljmp
jo
outsb
pop
push
inc
adc
push
or
push
out
divb
int
push
cld
ret
fsub
cld
mov
pop
pop
aas
push
mov
push
push
xor
repnz
xor
xchg
or
cmc
cmp
test
pop
push
jno
cmp
jbe,pt
imul
add
addr16
out
cld
ja
sahf
fistpl
sub
add
sub
jg
filds
xchg
adc
out
cmpsl
sub
cmp
or
push
bnd
imul
xor
dec
mov
or
adc
pop
pop
xor
in
jecxz
ds
mov
gs
pop
mov
sbb
ret
test
jg
mov
mov
jnp
sub
xchg
shr
mov
cld
je
ds
xchg
adc
ds
pushaw
ds
addr16
mov
or
mov
inc
mov
fildll
ds
adc
or
ds
mov
lds
aad
sbb
inc
out
ljmp
jns
jg
pop
add
sbb
les
shl
or
movsl
mov
push
test
mov
ljmp
jnp
lahf
sub
xor
fcoms
sub
and
adc
cmp
sbb
adc
jae
xlat
or
nop
repz
fs
cltd
sbb
test
movsl
adc
adc
ljmp
shlb
and
mov
pop
add
fnstenv
cmp
mov
xchg
int3
sbb
mov
fnstenv
loop
pop
mov
addb
inc
push
lock
mov
shrl
pop
out
or
jl
fmul
pop
cmp
add
out
cmp
mov
pop
jecxz
stos
inc
jnp
pop
ficomps
movsl
mov
and
shll
cld
dec
loope
lcall
ljmp
xor
inc
sahf
out
push
pop
aad
cmpsb
xor
pop
mov
push
enter
mov
cld
mov
mov
push
xor
mov
daa
ljmp
pop
das
lea
and
inc
ljmp
mov
es
sbb
sbb
mov
aam
xchg
das
and
ret
cvtpi2ps
mov
cmpsb
adc
mov
push
sbb
cmp
dec
cmp
pop
dec
outsb
push
mov
les
out
mov
jbe
out
scas
arpl
setns
cmpb
xlat
stc
sahf
stc
inc
mov
repnz
popf
fwait
xor
daa
dec
imul
int
aas
xchg
xor
out
or
push
popa
in
stos
iret
jmp
or
mov
arpl
stc
inc
add
in
pextrw
push
lea
lcall
imul
lret
ja
popa
sbb
loope
in
out
pop
testl
sahf
dec
mov
mov
fcoms
jne
mov
dec
les
les
lock
mov
cmpsb
lcall
out
inc
out
and
or
arpl
bound
test
mov
lret
push
or
jns
fucomip
shlb
push
in
ja
dec
or
lock
xlat
mov
jnp
in
push
pop
mov
nop
negb
xor
cli
pop
or
mov
imul
cmp
sbb
inc
pop
icebp
mov
push
clc
dec
pop
push
pop
push
sarl
jmp
or
inc
jl
mov
fistpl
mov
decl
mov
aas
stc
jg
xchg
adc
das
or
mov
push
inc
cld
sub
and
cmp
sub
mov
push
std
mov
and
xorl
push
int
in
mov
pop
sub
pop
add
pop
ss
pop
xor
fdivl
or
sti
sbb
rclb
pop
shrb
dec
outsb
sub
cmpsb
jno
pop
jmp
xchg
into
mov
sbb
cld
or
cmp
data16
push
mov
xchg
idiv
jle
jmp
cs
pop
mov
pop
pushf
dec
cmp
je
push
xor
imul
mov
xchg
jge
jnp
inc
sbb
test
testb
stc
shlb
mov
pop
and
inc
les
xchg
in
push
hlt
scas
std
ljmp
jmp
push
loop
cli
or
test
sub
jecxz
incl
int3
inc
xchg
js
aad
ret
inc
ljmp
cmpsb
adc
jnp
lods
mov
jl
popa
jb
sbb
into
jne
adc
push
jecxz
in
jo
sub
cmp
notl
dec
sub
movsb
cmp
pop
pop
shrb
mov
repnz
push
sbb
xchg
daa
mov
ljmp
adc
mov
jle
or
push
mov
bnd
fwait
add
ror
jl
or
push
js
loop
jno
sub
sub
sarl
mov
into
sub
imul
div
jnp
adc
cmp
xchg
out
mov
repnz
xchg
add
dec
sub
jp
daa
movsb
or
cmpsb
mov
xchg
xchg
dec
push
sub
fxch
call
or
in
add
cmp
jmp
imul
hlt
pop
out
lock
shrb
iret
inc
nop
pushf
call
push
sub
dec
stc
daa
xchg
cli
jg
clc
pop
dec
cmp
jl
fisubrs
aaa
sub
xchg
and
sbb
or
sarb
call
cli
popa
in
sarl
add
sub
jg
adc
lcall
iret
jnp
mov
sbb
jae
or
add
push
rclb
cwtl
jae
dec
jmp
xor
or
xor
pop
adc
pop
out
loopne
xchg
cmpsb
pop
in
xor
cltd
push
pop
dec
adc
and
pop
aam
cli
jmp
jg
mov
jns
pop
mov
mov
jg
jg
icebp
lret
mov
jnp
mov
mov
push
imul
das
js
lods
lcall
cmpl
xor
pop
sahf
xor
inc
int3
out
repnz
inc
loop
pop
insb
push
mov
das
idivb
inc
xor
add
pop
outsl
push
lcall
xchg
ds
decb
idivl
inc
sub
js
mov
mov
cmc
add
lea
mov
mov
push
mov
mov
out
mov
sbb
xorl
mov
repz
stos
scas
xchg
inc
pop
cld
mov
cs
sub
xor
pop
test
bswap
test
in
fs
mov
xchg
lret
addr16
ljmp
out
lret
pop
popa
or
fildll
xlat
cmpsb
xchg
pop
out
jecxz
ds
stc
leave
sub
xchg
rcrb
adc
dec
fld
in
pop
mov
dec
xchg
popa
add
or
sahf
sbb
pop
xchg
stc
cmp
es
push
dec
in
int3
sbb
jb
dec
xchg
jb
nop
shlb
push
cmp
jnp
cmp
lret
insl
sub
cmp
and
in
jmp
ficomps
dec
and
mov
into
sbb
rcrb
outsl
fisttps
add
popa
pop
jg
inc
jmp
in
das
sbb
pop
lret
in
sahf
lods
adc
jo
mov
or
std
and
xor
xor
mov
mov
sub
cmc
xchg
pusha
add
mov
jns
mov
insb
or
add
flds
fistpll
mov
or
cli
sbb
add
mov
pop
sti
adc
pop
push
jnp
jl
icebp
paddusw
cli
cmc
pop
xchg
mov
jp
incb
pop
sbb
jo
ret
fcomps
lock
or
mov
xchg
fmuls
das
fistps
and
jo
popa
ja
xchg
lahf
imul
scas
xchg
xor
mov
jecxz
and
nop
test
adc
sbb
mov
mov
mov
push
addr16
jmp
or
adc
test
bnd
roll
std
mov
imul
push
scas
dec
out
ljmp
xor
mov
mov
mov
jmp
sub
mov
fildll
insl
jae
mov
push
cli
mov
out
addr16
or
mov
cmp
ret
es
fs
in
imull
jae
xchg
leave
or
subl
cmp
pushf
mov
add
or
xchg
outsl
pop
jb
inc
cld
inc
cltd
mov
or
jnp
repz
adc
add
jbe
lcall
aaa
notb
cmp
les
mov
push
dec
xor
add
fwait
push
es
sub
and
or
jle
bound
insl
inc
push
pop
popf
cld
mov
inc
xchg
push
mov
pop
cwtl
inc
jns
lea
sbb
adc
daa
nop
inc
out
es
mov
jmp
push
adc
out
pop
xlat
or
xchg
es
cmp
fcoml
negb
mov
jecxz
negl
fs
jp
add
sbb
repnz
cmp
mov
adc
rolb
out
jbe
push
ret
inc
nop
cli
clc
gs
fidivrl
dec
inc
xchg
or
inc
and
arpl
imul
fwait
mov
stos
mov
sbb
cmp
adc
sub
ret
stos
out
int3
dec
push
test
xchg
dec
cmp
bound
insb
lcall
rolb
cltd
insl
fwait
mov
dec
stos
mov
xchg
dec
insl
jbe
mov
push
mov
inc
xchg
xor
sbb
pop
adc
insb
mov
rcrl
push
bound
sub
leave
push
test
add
and
jg
dec
fistpll
jmp
popf
xchg
sbb
bound
mov
and
xor
sarb
mov
cmc
cmp
repnz
inc
dec
cmp
push
adc
fdivl
xchg
sub
and
xor
pop
lret
add
pop
test
jmp
int
clc
loope
jo
out
or
cltd
mov
add
sti
andb
ss
push
es
out
cmp
repnz
lcall
adc
push
push
in
fistpl
cli
push
push
xor
cmp
movsl
cmp
push
and
scas
addr16
enter
sti
gs
mov
lret
imulb
mull
sti
pusha
lret
jecxz
dec
jo
cmp
mov
jmp
iret
into
cmp
stos
jp
cli
pusha
cli
mov
dec
push
sbb
sub
pop
jnp
inc
jbe
and
popa
lock
sbb
addr16
imul
imul
push
and
cltd
push
fucomp
popa
ret
leave
repnz
test
sbb
or
jbe
xor
cmc
pop
push
sub
inc
in
sub
imul
ss
sbb
mov
xchg
push
add
jo
dec
outsl
jns
adc
pop
mov
mov
mov
lods
xor
in
adc
call
xchg
aas
lea
push
ret
test
pop
mov
xor
sbb
xor
mov
stos
cmp
lcall
fnstenv
inc
push
mov
jae
xchg
int
pop
push
mov
leave
cld
test
add
shl
movsb
cvtps2pd
arpl
mov
cs
mov
ficompl
ficoml
lock
mov
cld
push
or
push
inc
rorl
lcall
fmuls
test
pop
ds
pop
push
loope
ljmp
adc
in
pop
popa
loope
repnz
jno
and
xchg
lcall
das
xchg
adc
xchg
mov
test
jbe
pop
inc
dec
sbb
fistps
insl
pop
mov
lods
push
push
popa
jns
mov
fcmovne
repz
sahf
mov
outsl
testl
jp
mov
icebp
pop
lret
inc
jecxz
out
pop
addl
stos
cmp
cwtl
sbb
mov
ss
cmp
add
add
jnp
inc
testb
shl
and
in
sbb
or
push
ljmp
or
or
imul
sahf
out
or
ret
mov
mov
adc
adc
sahf
fs
mov
adc
inc
pop
mov
adc
out
das
or
bound
bound
xor
jnp
psubw
movsb
jno
inc
inc
pop
sahf
out
and
sub
out
imul
xchg
lods
pop
cmp
push
das
andb
mov
aaa
xchg
movl
in
rcl
out
mov
mov
out
xor
lods
xorl
dec
ret
jne
repz
lcall
jg
sti
add
sub
sub
or
aad
neg
imul
pop
mov
mov
xchg
sbb
xchg
das
mov
xor
mov
pop
push
pop
or
cmp
add
dec
xchg
sbb
pop
cmp
testb
jecxz
nop
loope
arpl
js
lret
sbb
rorb
inc
cmovo
pop
cltd
out
pop
xlat
decl
or
ret
jns
pop
es
lret
and
xor
push
dec
xor
pop
push
dec
int
and
mov
jmp
push
adc
xchg
shlb
clc
pop
xor
adc
mov
cmp
into
cmp
mov
int
xor
fildll
jp
xchg
adc
addr16
cltd
cli
negl
cli
ljmp
daa
cmp
aad
lret
ret
cmp
push
mov
xchg
jle
pop
pusha
or
jmp
ss
add
lods
xor
jmp
cmp
dec
out
idivb
mov
orl
add
xor
fstl
mov
and
les
outsl
imul
lret
pop
mov
popa
mov
stc
mov
imul
das
mov
mov
std
fs
sub
and
push
shlb
and
dec
pop
or
jmp
pop
cmp
sbb
jmp
dec
lret
pop
pop
rorl
xor
aaa
les
adc
jbe
leave
ljmp
xor
loope
xor
in
push
and
mov
aad
xchg
gs
ret
js
and
shl
dec
sbb
movsb
push
in
cmp
scas
add
mov
fcomip
pop
ds
movsb
dec
xor
ret
mov
testb
fs
xor
pusha
mov
jecxz
mov
data16
aam
cwtl
mov
pop
cmp
bnd
clc
adc
inc
push
inc
test
mov
pop
insl
and
call
mov
call
shll
xor
jno
in
out
push
adc
push
movsl
clc
mov
in
aas
mov
dec
iret
ror
lret
xor
stc
iret
xchg
xchg
xchg
stc
out
fdivrl
cltd
fwait
lock
mov
movsl
inc
jl
mov
mov
mov
cmp
sbb
sbb
sahf
push
repz
mov
mov
stos
cmp
idivl
pushf
cmp
ret
gs
sub
test
or
test
lcall
mov
imul
test
cmp
ds
loop
cli
xor
lret
sbb
sbb
popf
mov
jle,pt
movsb
sbb
stos
dec
loope
mov
mov
and
mov
scas
or
add
inc
sbb
mov
es
aas
jmp
mov
xor
dec
repz
sbb
scas
mov
mov
jl
mov
cmc
faddp
push
jecxz
out
mov
adc
pop
jb
outsl
xorb
cmp
or
movsb
add
dec
rorl
jmp
mov
out
stc
das
arpl
aad
nop
lods
adc
imul
or
imul
adcb
or
idivl
mov
in
mov
add
cmpsb
lahf
mov
repnz
imul
or
adc
push
ret
dec
sbb
insb
sub
fdivl
push
movsl
je
lcall
cmp
nop
rep
data16
jg
and
cmp
adc
or
out
lcall
xor
daa
cmp
cmp
iret
push
xchg
cmc
add
out
mov
push
sahf
outsl
jmp
das
cmp
repnz
push
sub
fs
xor
out
cltd
and
aam
xor
sbb
push
xchg
lock
iret
and
dec
jne
cltd
ret
rclb
mov
stos
push
das
mov
jg
xor
adc
loope
add
push
push
jmp
xchg
adcl
push
and
lock
ss
cmp
inc
jae
xchg
leave
xchg
faddl
gs
pop
xor
mov
lcall
mov
add
clc
xchg
dec
mov
cmp
loop
lods
push
push
jge
daa
xchg
or
adc
cmpsb
cmp
or
dec
push
pop
sub
push
insb
aad
sti
adc
cvtps2pd
fs
adc
call
xchg
cmpsb
into
pop
ds
xorb
cmpsl
sub
inc
xchg
push
nop
out
lods
inc
cli
repnz
pop
pop
or
sbb
gs
mov
clc
loopne
repz
mov
fcoms
in
imul
sbb
cmpsb
jbe
cmc
nop
or
into
cli
in
loopne
outsb
add
iret
xchg
push
movsb
add
jp
popa
xchg
int
xchg
or
or
xchg
sbb
add
cmp
iret
sbb
leave
nop
sub
fildll
in
cmp
pop
fbld
sub
aas
mov
xlat
push
adc
xor
mov
addr16
std
out
dec
test
in
repz
ljmp
push
mov
mov
cmpsl
scas
xchg
ljmp
add
int
js
lods
xchg
sahf
sbb
rcl
pop
and
dec
mov
cmp
pop
pop
add
or
add
repz
adc
je
push
sbb
sbb
sub
mov
jecxz
clc
jns
cli
sbb
xchg
mov
in
pop
mov
jns
push
xlat
in
adc
mov
fsts
adc
ds
push
sbb
xor
lcall
fisubrl
cli
xchg
enter
push
jae
pop
les
gs
cmp
push
sub
shlb
cli
inc
and
xor
mov
mov
das
push
dec
test
cmp
mov
pop
or
enter
pusha
push
jg
mov
jnp
lods
xor
sub
orpd
int
jb
das
or
jns
stos
idivb
pop
adc
loopne
clc
lock
lcall
sbb
jo
inc
push
adc
mov
xor
and
jnp
xchg
mov
lret
and
jo
scas
mov
mov
dec
mov
cltd
mov
or
adc
push
in
mov
ja
sti
jno
into
mov
stos
fisubrs
loop
jp
xorl
imul
dec
test
adc
cld
loope
or
jecxz
cmc
stos
or
cltd
pusha
outsb
push
adc
stos
pop
jg
mov
add
dec
xchg
mov
repz
pop
or
incb
mov
add
mov
xor
mov
jmp
jg
fsubr
dec
pop
xchg
pop
mov
lock
xchg
sbb
stc
test
push
sbb
adc
das
shll
mov
sbb
or
adc
add
or
icebp
xchg
xchg
pop
test
lods
enter
mov
fstl
das
test
mov
or
ljmp
jb
add
pushf
lret
add
std
push
enter
mov
loop
test
rclb
and
int
call
out
out
imul
sub
roll
fsubs
xor
pop
shll
ljmp
js
fcom
sti
aas
mov
bnd
push
pop
shr
out
adc
push
sub
stos
mov
out
sbb
aad
push
jecxz
push
pop
scas
stos
mov
adc
lea
stos
sbb
jo
jecxz
mov
adc
jge
in
mov
dec
imul
test
out
xor
lcall
shlb
mov
dec
add
cltd
cmp
or
jp
testb
push
cld
je
mov
xor
xchg
push
out
fucomi
and
or
mov
and
mov
sub
aas
test
mov
dec
xchg
call
sahf
imul
adc
mov
sbb
push
inc
stos
lret
repnz
lret
sbb
xor
push
int3
pusha
lcall
adc
push
pop
aas
dec
push
cwtl
lret
mov
jb
lret
inc
add
xchg
out
jge
insl
addr16
pop
fdivr
jmp
jg
mov
xrelease
dec
or
sarl
mov
push
ror
test
mov
mov
sbb
jecxz
dec
call
lret
dec
popf
lds
pop
add
fisubrs
fnsave
pusha
fs
jae
or
gs
stos
fistpl
mov
out
das
fisubl
push
or
pop
mov
or
mov
mov
and
push
pop
test
xor
sub
sbb
xchg
es
cs
cmp
dec
repnz
mov
icebp
addb
aaa
decb
xchg
xchg
fmuls
mov
cli
cmp
adcl
ja
mov
test
inc
enter
in
sahf
arpl
cmp
dec
inc
pop
mov
ja
push
dec
stos
ds
test
xor
xchg
xchg
sbb
jmp
mov
mov
cwtl
fnstcw
dec
mov
js
fcomps
fisubrl
cmp
call
mov
add
cwtl
jp
push
mov
stos
sbb
cmp
dec
movsl
js
ljmp
mov
test
xor
lret
add
cli
aas
xchg
je
pop
adc
shll
cmp
xor
test
jmp
ljmp
cwtl
mov
mov
pusha
xlat
mov
stc
xchg
xchg
das
shl
sbb
add
outsb
xchg
iret
cs
sbb
push
ljmp
push
jb
cli
ret
pushf
ret
push
rorb
stc
clc
jns
xor
cli
pop
into
jge
data16
and
push
add
neg
stc
call
shlb
fldenv
icebp
js
sub
pop
push
dec
jno
cmc
pusha
test
dec
push
mov
das
or
pusha
adc
stc
fiaddl
and
xchg
test
dec
jae
mov
xor
sbb
enter
jle
xor
rol
mov
inc
fdivrs
mov
es
gs
pop
test
testl
dec
pusha
mov
jg
mov
mov
nop
or
dec
call
dec
and
push
mov
cli
pop
int
push
lret
repnz
push
dec
push
enter
jno
or
aas
hlt
js
ljmp
pop
adcl
inc
mov
mov
loopne
sbb
inc
or
imul
mov
cmc
bound
cmp
or
mov
leave
or
xor
in
in
lock
jo
lcall
and
sarl
orl
xchg
xor
cmp
adc
nop
dec
sub
cmp
cmp
add
mov
cmpsb
insl
inc
or
push
fldl
sub
sbb
adcl
mov
dec
ja
push
mov
idiv
arpl
jno
pop
out
mov
xchg
negl
pop
ljmp
mov
movsb
add
call
adc
xor
bound
out
jle
pop
dec
jl
pop
pop
push
adc
xchg
loop
xchg
pop
div
fsubrp
out
push
in
clc
xchg
hlt
lcall
ret
add
andl
mov
jns
cli
insb
icebp
or
adc
int3
lret
ljmp
sbb
repnz
or
rcrl
jno
push
out
ljmp
mov
in
scas
xchg
xchg
repnz
mov
push
dec
xchg
jo
pop
mov
iret
out
push
out
inc
test
xchg
daa
shlb
inc
cltd
shll
adc
xchg
fnstsw
stos
std
aam
push
mov
pop
add
or
push
adc
add
notl
or
loopne
mov
pop
or
sbb
xchg
xchg
jmp
cmp
enter
inc
pop
xchg
inc
mov
sti
pop
inc
stos
cmp
mov
les
inc
mov
out
cmp
je
mov
xchg
jle
or
xor
adc
js
fs
push
lds
in
sbb
lret
mov
cltd
cmpsb
mov
adc
dec
pop
mov
or
in
pop
dec
adc
and
daa
xchg
inc
jno
in
shll
inc
mov
fdiv
jecxz
mov
or
insl
inc
fisubl
xor
rclb
lcall
inc
outsb
xlat
mov
fiadds
and
adc
or
lcall
jge
fwait
shl
adc
pop
or
out
pop
pop
mov
decl
rcrb
jnp
xlat
pop
cmp
pop
imul
outsb
cmp
cs
movsl
shlb
jmp
pop
xchg
add
dec
push
das
rcll
or
mov
jge
jae
int3
xor
out
movsl
pushf
adcl
pushf
orl
adc
sahf
cmp
pop
mov
das
push
cmpsl
je
mov
mov
and
fdivrl
cmpsl
je
idiv
cmc
cltd
inc
jge
clc
xlat
sbb
inc
frndint
arpl
mov
jnp
in
pop
xchg
jecxz
leave
push
fs
and
mov
xor
sarl
outsb
pop
orl
add
movsb
push
inc
in
xor
lea
aas
je
arpl
je
or
cmc
xor
jmp
aas
aas
dec
test
xor
test
jb
sahf
pop
aas
fistpl
mov
mov
ljmp
pop
sub
xchg
mov
nop
lea
pop
mov
loop
add
pop
insl
jecxz
jg
inc
cmp
or
cli
add
movsl
sub
andb
repnz
clc
cmp
out
pusha
sbb
sahf
sbb
movsl
sbb
mov
icebp
jge
mov
mov
mov
sti
out
xchg
pop
hlt
mov
cltd
jl
push
mov
scas
mov
jmp
or
ljmp
negb
dec
lcall
and
lret
add
push
fcomp
ljmp
jl
mov
cmp
fnsave
or
cmpsb
sub
xchg
and
xor
or
mov
outsb
adc
and
sbb
add
pop
call
ret
add
mov
jmp
or
and
jno
out
outsl
push
sbb
out
or
rcrl
xor
jecxz
cli
addr16
lahf
pushf
iret
dec
hlt
cs
mov
aas
sub
cs
xor
adc
adc
xchg
loope
sbbl
cmpsb
inc
add
xchg
repnz
mov
inc
sbb
in
test
fwait
stos
xor
inc
es
out
cli
jl
and
decb
mov
testb
xor
sahf
daa
std
ljmp
filds
sbb
inc
mov
and
ficoml
lock
arpl
cmp
and
fucom
xor
jge
xor
cli
mov
pop
xchg
and
pop
nop
lock
dec
add
cmp
aaa
frstor
scas
popa
or
in
lret
push
aaa
jmp
push
xchg
aas
jnp
add
xor
and
sbb
cli
test
adc
loope
jno
inc
inc
or
pop
xor
addl
xor
lahf
dec
xor
cmp
pop
std
push
pop
pusha
ret
int
push
push
rclb
and
dec
jl
ds
cmp
sbb
sbb
nop
aas
pushf
xor
fstl
dec
push
xchg
push
adc
add
fistl
jb
mov
add
mov
movsb
sbb
jle
pop
cs
out
pop
test
add
ljmp
mov
sbb
push
std
jae
xor
cli
stc
out
adc
jg
inc
nop
je
pop
xchg
jge
in
jo
pop
push
jnp
into
and
mov
lret
es
jecxz
mov
arpl
xchg
cmp
insl
jg
dec
and
xchg
icebp
fisubl
mov
scas
bound
pop
mov
xor
ljmp
dec
cmp
push
jae
into
xchg
mov
test
fld
int3
mov
sbb
jne
lds
add
mov
movsl
lret
inc
mov
or
cli
dec
add
pop
shl
mov
jecxz
lcall
xchg
sti
gs
js
les
add
adc
gs
into
sbb
mov
inc
enter
pop
insb
pop
sbb
sbb
cmp
sub
inc
mov
sbb
xor
lcall
adc
es
cli
xorb
sbb
fistpl
fisubs
adc
mov
out
add
cmp
jmp
xor
inc
out
adc
xchg
push
jns
ss
inc
loope
out
mov
mov
and
imul
iret
xor
lret
fnstcw
stos
lret
and
add
ljmp
iret
cli
sbb
cmp
add
push
iret
lret
cmp
rorb
push
iret
ficompl
and
loop
es
stos
sbb
cmp
xor
jb
add
ret
scas
mov
sub
inc
xlat
fimull
mov
mov
pop
insl
pop
adc
dec
jno
andl
adc
cmp
ja
hlt
repnz
lock
cvtps2pd
sub
dec
out
adc
add
dec
stos
out
outsl
pop
addr16
xlat
lods
sbb
jns
dec
test
xor
cmp
xchg
cmp
stos
add
les
adc
ficompl
push
push
sub
jbe,pt
cmp
push
mov
hlt
sbb
rclb
jbe
dec
sar
xchg
filds
pop
sub
mov
mov
and
in
sub
je
pop
ret
mov
add
dec
push
sti
sbb
fstps
and
pop
xchg
aad
pusha
dec
xchg
mulb
cld
xchg
sub
xchg
outsb
mov
mulb
in
lds
insl
add
push
cmpsl
dec
loope
addb
sub
mov
fcmovb
sbb
dec
mov
out
add
movsb
movsb
mov
ljmp
mov
lret
push
aas
cli
mov
out
lahf
clc
pop
imul
outsb
mov
mov
scas
stc
out
fisttps
repz
mov
xor
adc
loopne
inc
add
pop
mov
inc
test
dec
idiv
loop
mov
aaa
mov
aad
gs
pop
pop
lea
scas
jae
dec
mov
mov
pop
jno
or
fdivrl
pop
sti
jno
lret
imul
adc
sti
ret
arpl
push
in
mov
dec
xor
pop
ja
pushf
pop
push
lds
cmc
outsl
xchg
push
lock
sbb
fldenv
sub
out
pop
pop
cs
push
enter
and
nopl
daa
mov
add
loopne
sbbb
sub
xchg
bnd
sub
pop
outsb
dec
add
out
sti
jae
adc
sbb
imul
cmpsb
mov
out
sbb
clc
sub
xchg
sub
test
mov
scas
pop
mov
push
or
mov
mov
mov
jbe
dec
fmuls
inc
das
test
xor
mov
inc
ret
clc
rorb
rcrl
test
shrb
adc
hlt
cltd
decl
pop
sub
mov
fcomi
test
rorb
es
pmaxsw
cli
mov
sub
into
out
add
inc
or
aas
stos
shll
test
mov
jbe
out
jle
insb
andl
inc
push
mov
ror
xor
fisubs
mov
xchg
daa
jb
mov
mov
hlt
aas
mov
fbld
push
cli
cmp
and
jb
inc
push
adc
rcll
jb
inc
ret
or
push
loop
jbe
in
xchg
ret
lcall
pop
fisttps
cld
pop
push
shll
mov
mov
pop
fldenv
imul
das
pop
popa
sbb
adc
jl
enter
add
jb
dec
aaa
aas
cli
push
mov
lock
pop
adc
pop
push
jecxz
scas
sti
out
mov
add
push
es
jmp
test
jle
push
mov
inc
push
jno
ljmp
aas
xchg
rcr
jecxz
push
sar
pop
les
or
xor
mov
sub
into
push
je
loop
ret
dec
daa
nop
scas
fcoms
repz
xchg
jae
stc
pop
jnp
mov
movsl
fimuls
ficoms
fimuls
jle
pop
or
jne
scas
pop
mov
adc
pushl
xchg
lcall
ror
icebp
and
and
xor
popa
and
fdivrp
bnd
pop
popa
jnp
nop
or
push
lret
pop
dec
stc
mov
push
nop
negl
movsb
cmp
popa
in
add
push
mov
or
sub
cmp
push
in
ds
popa
push
subl
pop
add
dec
sub
jnp
cltd
xlat
sub
xchg
leave
shrb
lret
sbb
loopne
dec
in
sub
popf
js
jp
adc
or
fwait
ret
in
xchg
mov
xchg
pop
ljmp
mov
scas
clc
sahf
jnp
addr16
sub
out
stos
insb
or
xchg
xchg
stos
test
inc
jecxz
mov
rcll
int3
out
daa
cmove
sbb
ljmp
pushf
into
bnd
push
adc
add
fisubs
aaa
dec
jnp
jbe
lea
adc
fidivl
or
pop
xor
xorb
sahf
and
pop
std
cmp
jg
loope
mov
mov
fbld
push
pop
loopne
sub
jnp
negl
mov
sbb
inc
xlat
mul
stc
or
sbb
inc
jnp,pt
adc
iret
push
in
push
testl
jge
stos
add
in
jnp
aas
cmp
imul
xchg
vpsadbw
jnp
jge
sbbl
or
in
mov
push
outsl
movsl
fimull
mov
pop
jg
xchg
fsubrs
sub
mov
in
adc
bound
add
pop
test
mov
pop
jecxz
vpmulhw
shll
cmp
xor
pop
inc
repnz
inc
ss
aaa
inc
cs
outsb
jno
es
xchg
fbld
lods
ja
push
pop
out
mov
add
pusha
mov
cmp
xchg
dec
fwait
pushl
cmp
mov
xlat
in
lret
js
mov
aam
les
mov
repz
and
rclb
inc
cmc
rcrb
subl
pop
and
loop
shlb
call
jmp
cmc
in
rcrl
cmpsb
jno
gs
pop
or
bound
ljmp
adc
lods
sahf
xchg
rcr
pop
ret
cld
inc
stos
jle
jl
xchg
les
cmc
pop
bound
jle
sbb
dec
xchg
ds
jo
lcall
jmp
xor
addr16
xchg
stos
mov
je
repnz
cmp
fmull
mov
xchg
idiv
popf
jecxz
test
insb
out
cmp
adc
pop
ljmp
dec
cmc
jnp
push
sbb
mov
pop
dec
adc
hlt
movsb
cmpl
add
out
cmc
pop
mov
mov
push
ret
fimull
or
dec
js
xchg
jae
cmpsb
inc
cmp
ds
ljmp
in
shll
cli
test
testl
bound
inc
repz
and
stos
xlat
push
incl
dec
pop
in
and
or
mov
pop
jne
cmpsb
jns
mov
cs
inc
xlat
test
and
ja
mov
adc
std
pop
pop
in
lcall
sti
push
movsb
adc
xor
push
pop
es
repnz
movsb
mov
adc
in
sti
dec
sbb
mov
push
inc
insb
sub
fwait
ss
mov
inc
sbb
pop
pop
mov
lods
push
ds
mov
pop
push
rolb
fadd
inc
repnz
add
jnp
je
mov
add
cmp
xchg
pop
scas
stos
adc
rcl
push
adc
adc
dec
jbe
jbe
mov
xchg
xchg
testb
mov
out
sbb
pusha
sbb
xor
push
rorl
testb
aam
and
or
repnz
or
in
mov
xchg
ds
lea
jo
stos
lret
ret
pop
testl
lea
xor
cmp
arpl
shl
roll
fistl
mov
mov
pop
xchg
add
je
fidivrl
cs
clc
add
inc
push
or
mov
push
jbe
and
pop
in
pop
and
lcall
mov
fwait
mov
inc
pop
in
in
sbb
hlt
inc
ficoms
rcrb
loop
or
ret
xlat
cli
adc
xabort
lods
pop
or
jne
leave
fdivl
pop
or
stos
pop
jg
xchg
or
add
popa
mov
sarl
aad
xor
adc
mov
xchg
cmp
mov
jnp
dec
dec
sbb
inc
testl
xchg
sbb
sub
dec
stos
sub
jg
sbb
outsb
xchg
or
xchg
and
aam
addl
addr16
repnz
cwtl
ret
icebp
insl
sahf
xchg
movsb
xor
imul
repz
xor
adc
push
adc
es
pop
add
outsl
or
xchg
fistpl
xor
jbe
icebp
fwait
jp
xchg
call
outsb
iret
pusha
add
lock
dec
movsb
xchg
mov
cmp
daa
sub
dec
sbb
sub
data16
jnp
push
jg
lods
lds
enter
jecxz
pop
sbbl
test
inc
inc
pop
jnp
push
aam
mov
add
cmp
repnz
add
mov
jo
jmp
scas
aas
sbb
int3
jecxz
jo
aas
ja
jo
jnp
add
jge
mov
push
call
push
rorl
sub
ljmp
rolb
cwtl
jmp
addl
jns
xchg
xchg
jb
adc
iret
xor
lods
daa
in
or
cmp
or
xor
sbbb
add
xor
jno
mov
call
or
sahf
cmpl
aaa
xor
xchg
or
repnz
sbb
scas
dec
leave
jl
add
push
shll
pop
mov
jmp
push
dec
stos
mov
xchg
movsb
add
xor
pusha
sub
sbb
push
movsb
subb
stc
shll
sahf
pop
cmp
xor
sar
mov
jbe
fs
in
inc
jbe
jo
loop
rorl
xchg
add
mov
scas
push
notb
cld
insl
mov
call
adc
cmc
and
fisubrl
and
sbb
mov
cltd
sub
push
popl
cmp
in
clc
out
push
mov
hlt
xor
int
adc
fimuls
push
xlat
mov
jl
xor
adc
cmp
dec
or
in
subl
ds
or
and
or
out
pop
xchg
cmp
cmp
leave
in
jo
mov
push
jnp
cmp
pop
pop
jg
dec
xor
mov
add
ljmp
lock
inc
scas
mov
add
rorb
jmp
sti
mov
sahf
mov
inc
or
xor
adc
sbb
arpl
in
sbb
out
and
fs
fildl
addr16
xor
lret
xchg
lods
ja
fiaddl
xor
fisubrl
jno
call
sub
lock
pushf
xchg
pop
aaa
xor
push
push
enter
pop
push
scas
sbb
inc
push
bndldx
mov
cmp
push
mov
sahf
or
inc
pop
push
and
jge
js
pop
enter
cmp
mov
jle
mov
cld
stc
sti
les
fnstenv
cmp
xchg
outsb
mov
imul
mov
xchg
jmp
pop
lret
xchg
push
outsl
ret
adc
popa
and
cmp
insl
push
cmp
lcall
inc
or
cli
cmp
addr16
das
jns
xchg
mov
jp
mov
movsl
jp
mov
movsl
mov
lea
adc
pop
fwait
cmp
add
xlat
lock
decb
and
jns
jle
xchg
test
jnp
or
sbb
sbb
bswap
add
pop
lods
fadd
mov
insl
scas
sahf
ret
ljmp
inc
std
ficoml
pop
repnz
sbb
stos
and
enter
popa
shll
sahf
push
jmp
mov
shr
arpl
mov
sti
mull
lcall
xor
xchg
out
cmp
cmp
jnp,pt
test
bound
gs
rorl
adc
scas
es
in
push
mov
outsb
mov
outsl
stos
sub
es
scas
sub
ror
sub
fisubrl
xchg
sahf
cltd
shl
and
and
bound
cmc
sahf
pusha
sbb
mov
adc
repnz
pop
daa
or
rcl
xchg
inc
add
mov
sub
inc
or
in
push
jae
dec
outsb
mov
xchg
shll
ja
jle
mov
dec
pop
call
scas
add
xchg
or
pop
push
ss
sbb
lock
shl
cmpb
jmp
clc
or
fwait
mov
xor
int
or
or
adc
std
mov
jmp
mov
cmc
jp
inc
mov
imul
cmpsb
loopne
out
inc
xorb
cmc
nop
call
test
sub
test
daa
dec
inc
repnz
cmc
stos
sahf
sti
adc
in
inc
aas
pusha
bound
nop
jno
mov
fbstp
sbb
cmpsb
jo
cmp
pop
cld
inc
mov
out
mov
add
pop
fcmove
test
mov
cltd
lahf
test
pop
cmc
fdivs
mov
xchg
cmp
mov
cmp
and
push
fucomi
test
imul
sub
xor
xor
pop
fstl
jnp
cmp
adc
dec
repnz
pop
add
aad
daa
cmp
std
and
pop
xor
addr16
sti
adc
xor
testb
pushf
push
fisttpl
mov
add
fsubr
mov
cmp
es
test
push
pop
sub
mov
arpl
or
jmp
mov
stc
mov
sbb
imul
ss
stc
cli
out
push
ret
push
sub
mov
daa
or
jb
mov
ret
fdivrs
hlt
jge
or
push
xchg
dec
pushf
out
sub
dec
jmp
sbb
loope
insb
mov
xor
iret
or
xor
je,pt
ljmp
sbb
pop
imul
xchg
sub
mov
sub
ja
dec
arpl
cs
jns
mov
xor
repnz
in
mov
jp
insb
ror
push
sahf
test
mov
or
cli
mov
xor
jg
cli
mov
rorb
pop
leave
sbb
push
xchg
pop
out
hlt
mov
mov
mov
xlat
inc
gs
pop
sbb
fcomip
xor
xor
dec
xchg
lods
jbe
push
roll
inc
repnz
adc
dec
repnz
pop
lds
cmpsb
bound
ljmp
cmp
pop
mov
std
daa
push
out
ss
stos
loope
loope
add
nop
sahf
imul
xchg
rcrb
jne
cmp
mov
shll
push
mov
jl
sti
adc
jnp
test
sub
xor
jno
rorl
ds
das
mulb
aam
xor
jle
fnstenv
or
in
cs
test
outsb
les
dec
and
jns
xchg
mov
mov
adc
jmp
enter
xor
test
ss
cli
sub
sub
cltd
cld
data16
fucomi
ret
mov
aaa
shll
cmp
lods
scas
out
xchg
sbb
in
sarb
idivb
clc
sub
cld
dec
scas
fistl
clc
arpl
rcl
out
jle
aad
stos
mov
add
jge
push
xchg
stos
aas
mov
das
loopne
cmp
pop
cltd
and
mov
lcall
cmp
sbb
fdivs
ds
mov
or
into
push
xor
adc
test
cli
xlat
sbb
popa
mov
pop
gs
into
enter
push
leave
xor
dec
push
scas
cltd
stos
test
loop
add
cli
cmpsl
pop
push
xlat
xchg
std
daa
outsl
fmuls
imul
gs
pop
aam
popa
inc
sbbb
sbb
and
xor
pop
test
repnz
mov
pop
lds
mov
call
outsb
enter
adc
fcomi
js
mov
ret
clc
imul
xor
imul
lret
xor
or
int
push
xchg
pushf
movsbl
add
pop
enter
popa
std
in
mov
lock
mov
pop
or
lea
cltd
sbb
inc
aas
arpl
dec
pop
xlat
mov
mov
push
es
and
xlat
stos
pop
nop
pop
lret
loop
arpl
push
pop
jmp
or
push
jp
add
cltd
mov
aas
push
jnp,pn
dec
pop
mov
dec
hlt
inc
xchg
cmp
jae
xor
xchg
sbb
push
data16
adc
sbb
sub
jmp
push
mov
adc
test
scas
aad
and
repnz
inc
xchg
xor
or
movsb
mov
xchg
popa
xor
das
mov
or
pop
fs
add
mov
mov
orl
xor
fildl
mov
dec
dec
jno
out
ljmp
mov
pop
push
push
sbb
out
dec
add
adc
dec
fists
insl
jl
push
and
aas
push
outsl
jl
jmp
jl
push
movsl
jge
pop
gs
cmpsl
sti
cli
adc
mov
pop
jmp
xor
xor
insl
and
adc
imul
and
push
cmc
jb
repnz
lcall
jb
adc
ficomps
sub
xor
jnp
das
mov
sarb
adcb
or
or
dec
add
outsl
or
add
sar
xchg
jno
sbb
xlat
scas
in
mov
sub
xchg
mov
fists
xlat
xor
cli
adc
sbb
jbe
mov
ret
and
jg
test
xor
jmp
fsub
aad
cmpsb
pop
push
add
or
xchg
sub
xor
mov
lcall
add
sbb
js
jo
call
or
mov
jecxz
inc
sub
iret
jb
pop
pop
push
cmc
xor
fdivrl
or
fdivr
cmp
push
pop
cmp
inc
pop
jne
leave
aaa
or
mov
popa
mov
or
cld
and
push
in
fcmovne
ret
push
mov
add
in
dec
icebp
es
loopne
cmpsb
fs
and
gs
xchg
sahf
pusha
enter
cmp
movb
ret
cwtl
jns
test
xlat
mov
push
inc
cli
and
insb
mov
sub
daa
pop
inc
jmp
pushf
fdivrl
int
push
lret
mov
dec
inc
inc
inc
ljmp
cmp
pop
dec
or
or
test
sub
jmp
cmp
imul
sbb
aaa
jmp
aaa
dec
ljmp
xchg
mov
adc
or
sbb
adc
jb
mov
call
lods
lahf
dec
std
or
pop
pop
mov
arpl
jge
adc
inc
fldenv
dec
xchg
dec
cli
add
sbb
lods
cmp
cmp
adc
inc
sub
neg
mov
inc
stos
or
dec
or
xchg
les
pusha
stc
jmp
push
mov
xor
in
leave
mov
imul
inc
inc
jo
iret
dec
enter
xlat
dec
jne
orl
scas
dec
xor
pop
jb
into
cmp
or
sbb
stos
pusha
push
or
ret
mov
or
or
xchg
xchg
scas
cs
mov
sub
jno
pop
push
jecxz
inc
popa
out
insl
cmp
and
roll
sbb
xor
dec
outsb
loop
out
imul
cwtl
testb
xor
jmp
lock
jg,pn
push
xchg
mov
or
out
cmp
push
and
cmp
out
mov
or
idivb
push
or
add
ljmp
sbb
mov
dec
sbb
mov
push
adc
cli
jno
add
les
in
push
or
adc
cmp
cmp
enter
push
push
mov
adc
sub
pusha
push
stos
lea
out
adc
loopne
push
jae
xchg
int3
pop
xchg
movsl
pop
call
push
aam
or
pop
dec
sbb
adc
jmp
lcall
push
mov
iret
lret
rcrl
mov
lcall
or
push
add
add
fdivrl
ds
cmp
mov
cmpsb
xor
xor
sub
cli
int
shlb
push
jmp
arpl
jp
xchg
pop
xchg
aaa
ret
lods
sarb
mov
jmp
gs
shlb
lock
mov
outsl
add
sahf
cmp
jbe
push
mov
dec
push
mov
jno
fidivrs
loope
cs
in
mov
movsl
pop
jbe
xchg
cs
and
test
sub
stc
clc
sub
xor
pop
push
cmp
sub
push
mov
pop
nop
pop
pusha
int
xchg
push
cmpsb
int
out
in
dec
repnz
sub
ja
and
arpl
into
lret
adc
jnp
repnz
popa
mov
in
add
sub
std
xor
sbb
stos
test
push
es
add
sub
sbb
ja
push
iret
rcl
mov
sub
xor
adc
lret
xorl
adc
sub
or
into
into
fs
into
push
push
and
push
out
scas
push
sbb
mov
mov
stc
incl
or
popa
sub
adc
jnp
cld
insl
stos
pop
dec
pop
test
in
pop
mov
rcll
inc
mov
sub
xchg
add
test
sbb
push
hlt
lcall
aas
sbb
dec
lret
cltd
sbb
adc
adc
test
push
test
clc
and
fcomp
cmp
jns
jl
cmp
push
addb
push
cmp
xor
imul
clc
jns
or
and
and
inc
lods
in
lahf
js
xchg
dec
ficomps
fcoml
mov
push
xlat
xchg
inc
out
popa
sub
xor
in
pop
xchg
lea
push
or
mov
cmp
test
sub
lea
test
popf
jmp
fdivr
out
or
xor
stos
cmp
sbb
lea
ds
xchg
adc
push
int3
pushf
add
xor
jnp
clc
sbb
push
pop
xchg
xchg
jg
sub
or
sub
dec
loopne
adc
add
imul
xor
fs
sti
out
mov
dec
je
adc
popa
ljmp
cs
or
add
xor
adc
enter
adc
daa
out
inc
xchg
mov
lea
sub
jbe
out
mov
inc
sbb
push
push
iret
or
and
jbe
lea
lea
xor
or
mov
in
push
xor
dec
push
test
jnp
xor
inc
sbbl
rcrb
fldl
cli
cs
adc
scas
jae
das
mov
or
mov
in
loopne
sub
xor
jb
push
mov
into
inc
mov
pop
sub
pop
popa
in
fimuls
inc
fists
mov
or
jg
lret
mov
out
out
lret
mov
mov
rorb
and
lock
sub
pop
jge,pn
cmpsb
mov
mov
adc
out
arpl
pop
lea
and
fstpl
leave
push
mov
mov
adc
fidivrl
inc
fs
andb
or
lea
mov
fidivrl
inc
ljmp
jp
or
in
pop
sbb
xchg
push
rcl
add
repnz
push
cmpsb
jo
jle
es
push
push
dec
push
mov
rorl
movsl
imul
fdivp
xchg
xchg
insb
dec
mov
call
out
and
lea
out
das
mov
xchg
jo
push
fiadds
cld
sub
or
testl
ds
lea
in
sub
out
cmp
mov
lea
cmp
pusha
popa
ljmp
out
mov
cli
pop
pop
cld
loope
or
mov
enter
mulb
cmc
insl
push
fmul
xchg
mov
pop
add
cmp
mov
xchg
add
ss
inc
xchg
repnz
xchg
jno
pop
pusha
jb
and
lret
mov
sti
loop
dec
jmp
dec
xor
or
in
out
stos
jg
jb
xchg
xchg
mov
sbb
mov
push
scas
lret
cmp
btsl
sahf
ds
or
nop
enter
pop
idiv
dec
mov
loope
mov
or
xlat
sahf
or
mull
es
lret
adc
lret
stos
xchg
in
pusha
orl
movb
das
adc
sub
lods
stos
mov
sbb
std
add
cmpsb
in
jae
incl
adc
push
in
insb
ss
adc
push
add
jb
mov
pop
pusha
sbb
and
and
imul
sbb
push
add
inc
lcall
in
insb
lods
or
mov
mov
ljmp
in
push
repz
mov
cli
push
or
or
add
movsl
add
das
rorb
in
mov
push
faddl
mov
push
movsb
mov
xor
mov
sub
addb
xor
pop
jnp
fmull
stos
ficomps
in
mov
xchg
pop
out
add
movb
lcall
jne
pop
mov
cmc
push
sub
cmp
pop
push
adc
sti
jnp
pop
rolb
or
pop
xchg
jo
out
and
ss
inc
xchg
sti
mov
cmp
lods
scas
cmpsl
mov
ljmp
outsb
mov
mov
and
mov
mov
sbb
inc
pop
sbbl
inc
inc
sub
ljmp
cmp
push
negl
shll
sub
inc
jnp
adc
or
jg
leave
mov
and
mov
and
sub
das
es
aad
inc
add
sti
pusha
sbb
or
jp
insb
shlb
jg
add
mov
jb
sub
fbstp
sbb
xor
inc
insl
sahf
fistps
roll
daa
hlt
or
sub
addr16
fidivl
and
adc
testl
aaa
push
inc
or
xchg
push
psubw
pushf
fidivrl
shll
shl
xchg
out
jl
jbe
arpl
dec
jmp
idivl
add
ljmp
xchg
mov
push
test
pushf
sbbl
ret
sbb
pop
inc
movsl
mov
sbb
rolb
iret
xchg
iret
sub
aad
mov
lds
call
push
jnp
xor
push
mov
sahf
pop
mov
frndint
cmc
xor
call
popa
mov
push
jg
leave
lea
mov
addr16
repnz
scas
jae
mov
movsb
inc
fwait
mov
jns
xor
into
ret
mov
stos
mov
int
ja
hlt
lea
dec
sbb
pop
rolb
push
jp
mov
ret
fimuls
js
inc
insb
or
imul
or
mov
or
xor
dec
mov
in
mov
jl
pop
mov
lock
fdivrl
inc
mov
in
mov
roll
mov
daa
jnp
adc
pop
outsl
out
pop
push
adc
fsts
jle
and
fldcw
fisttps
shr
cltd
cmp
ss
mov
xchg
xor
pop
inc
fs
pop
stc
pusha
jb
dec
xchg
and
add
cmp
xor
xchg
lea
and
fstpt
aaa
dec
cmp
xchg
add
xchg
int
jle
mov
icebp
xchg
sbb
int3
and
mov
shrb
xlat
xor
mov
or
or
repnz
popf
push
lock
incl
sti
out
adc
or
in
repz
sub
pop
pop
mov
cmp
xor
popa
inc
cwtl
mov
movsb
pop
orb
adc
xchg
hlt
jg
and
mov
xor
dec
fwait
dec
repz
or
push
imul
sbb
fwait
sarl
aaa
dec
loopne
sub
mov
xchg
mov
adc
jnp
xchg
iret
loop
hlt
add
or
jmp
cs
pop
mov
fs
lods
xchg
out
test
lret
lahf
loop
mov
in
bound
mov
inc
xchg
add
mov
push
repnz
or
jns
mov
es
lods
popa
mov
pop
pop
and
sahf
rclb
add
pop
mov
das
pop
pop
xchg
imul
xor
jmp
insb
fdivrl
xchg
push
mov
mov
pushf
pop
cmp
pop
jbe
das
cwtl
outsb
adc
add
xchg
sbb
cmpsb
adc
cmc
dec
pop
fs
sbb
or
xor
sub
mov
dec
clc
daa
or
cmp
mov
xchg
pop
pop
mov
dec
ficompl
inc
xor
idiv
or
cmc
or
and
mov
call
dec
mov
add
popf
sbb
lock
daa
pusha
mov
adcb
add
aam
loop
repnz
mov
ljmp
pop
pop
out
lock
sub
and
adc
testb
sub
cmp
jb
or
sub
test
sub
mov
sub
add
or
adc
or
adc
inc
inc
mov
cs
jns
fldt
cmp
pop
inc
cmp
sbb
pop
mull
cmp
jbe
cmp
xor
mov
ret
imulb
jbe,pn
aaa
dec
adc
sbb
pop
nop
fcoms
addl
cmpsb
movsb
imul
push
jmp
xor
inc
das
adc
fidivrl
sahf
out
into
cmp
xor
ljmp
jecxz
mov
jns
xor
jnp
cmp
sbb
iret
or
xor
push
repz
insb
jl
adc
fstps
in
or
sbb
xchg
ret
sbb
pop
in
mov
sbbl
test
mov
andb
add
jg
sub
jg
or
test
dec
pop
mov
xchg
inc
out
dec
shl
subl
scas
test
mov
dec
hlt
dec
sahf
cmp
cmp
ja
das
cmp
popf
inc
pop
movsl
xchg
insb
mov
sbb
jo
mov
or
imul
sbb
sub
xchg
add
lahf
mov
cmp
add
cwtl
cs
mov
push
adc
stc
pop
decl
stc
shlb
jbe
movsb
jge
movsl
push
sbb
inc
or
loopne
ret
movsl
test
cs
cmpsb
std
push
jle
cmc
clc
addr16
or
mov
pop
or
testb
cltd
mov
subb
js
jbe
and
dec
pop
shll
arpl
push
xlat
call
ret
and
cmp
hlt
jle
js
or
mov
pushfw
xchg
mov
adc
movsb
mov
aaa
xchg
or
jecxz
stos
inc
lret
inc
jns
xor
dec
jmp
sub
aaa
rorb
pop
mov
dec
lcall
out
push
testb
add
call
jb
jae
imul
imul
ljmp
mov
in
repnz
repz
jecxz
cli
dec
mov
divb
sub
adc
or
cwtl
and
inc
jmp
dec
cmp
push
push
leave
xchg
pusha
std
dec
cs
mov
jae
ljmp
fs
or
push
mov
dec
xchg
adc
ret
inc
mov
scas
in
mov
mov
sahf
jbe
in
out
sbb
mov
jae
mov
sbb
fisubl
shlb
lret
jmp
mov
sbb
in
aam
imul
mov
leave
fdivs
mov
adc
addl
lea
mov
les
bnd
shll
in
mov
and
xchg
lock
jns
repz
pop
fcoms
test
sbb
pop
iret
xchg
dec
repnz
aas
test
cmpsl
fld
leave
adc
xor
push
sbb
push
lock
jne
dec
jb,pt
mov
call
mov
out
in
popa
lea
insl
inc
int
xchg
mov
std
repnz
leave
clc
stos
xchg
addr16
sbb
sbb
mov
mov
mov
iret
adc
pop
lea
xchg
cltd
mov
stos
push
mov
icebp
rolb
test
das
mov
cli
xor
cmp
jnp
enter
popa
pop
cmp
mov
adc
in
jb
adc
cmp
inc
jle
decb
stc
cltd
xchg
mov
jne
test
repnz
cmp
dec
lods
or
bound
mov
mov
dec
jmp
xchg
out
adc
mov
mov
pop
out
pusha
in
pop
jb
stos
xchg
movsb
jo
orb
pop
sbb
cmp
dec
cmp
xchg
mov
jl
inc
mov
push
jmp
mov
jmp
push
pop
push
sub
faddl
add
push
xor
fists
fbstp
in
dec
iret
sub
jae
ljmp
cld
sbb
push
out
loopne
dec
inc
dec
out
and
pop
movb
xor
push
bound
mov
jbe
xor
lds
mov
or
rorb
push
mov
loope
and
movsb
or
fldenv
mov
insl
jb
and
in
stos
cwtl
repnz
pop
mov
push
sbb
mov
sbb
loopne
cmc
mov
outsl
sbb
test
mov
jns
into
addl
cmc
rclb
ja
sbb
mov
cmc
sbb
jge
sub
add
js
scas
jns
pop
and
data16
subb
inc
pop
repnz
push
mov
inc
sahf
inc
je
jno
fisubs
sti
cwtl
loop
in
std
in
push
mov
mov
jl
sahf
out
jnp
in
jmp
mov
insb
xor
inc
push
loop
dec
out
cmp
imul
adc
sbb
rclb
cmp
adc
jbe
xchg
or
cld
add
out
inc
mov
mov
lcall
das
js
sti
mov
shll
fdiv
xchg
xchg
popa
sub
cltd
test
outsl
sbb
push
or
arpl
mov
insl
push
jle
xchg
sti
mov
clc
fidivs
lock
jo
inc
lcall
inc
xchg
lock
in
outsb
stc
lds
push
xor
pop
mov
jg
loope
hlt
das
push
mov
dec
daa
fmuls
stc
icebp
das
clc
bound
xchg
jnp
push
popa
fisubs
or
xor
test
jp
jmp
ret
sub
pop
push
clc
call
adc
mov
outsb
test
out
lods
or
enter
leave
lret
dec
adc
fsts
dec
xchg
subb
divl
dec
and
or
pop
dec
push
jmp
sub
jne
and
adcl
ret
stos
or
cli
jnp
adc
out
pop
icebp
xorl
xchg
sub
mov
jae
imul
fldenv
out
jbe
sbb
sbb
mov
roll
pop
cwtl
hlt
in
stos
sbb
fisttpll
imul
into
cmpsl
shr
testb
sub
jo
arpl
cli
adcb
or
or
hlt
shrb
sbb
inc
push
pop
xchg
cltd
xchg
lods
xchg
xor
cmpsl
stos
cmp
mov
dec
jae
push
sbb
je
sub
xchg
or
negl
popf
fs
adc
jecxz
jns
push
sbb
mov
pusha
mov
pop
add
sti
and
ljmp
xlat
loop
lods
dec
mov
mov
repz
jb
xchg
fcoml
mov
pushf
pop
push
mov
sub
sub
mov
jle
jmp
add
push
mov
cmp
movsb
mov
jg
push
sti
pop
xor
add
sub
incl
jns
repz
push
lcall
or
enter
mov
mov
mov
xchg
push
lcall
xchg
test
xchg
mov
jp
xor
addr16
xchg
or
dec
enter
lret
add
outsb
adc
stos
mov
and
add
movsb
iret
or
xchg
test
and
mov
pop
out
mov
pop
sbb
fmuls
out
out
cmpsb
movsb
testl
adc
jge
faddl
xchg
cli
ljmp
cmp
outsl
xor
or
pop
lds
add
xchg
shr
dec
jno
out
mov
sbb
sti
xchg
push
adc
aas
xor
clc
push
mov
out
add
mov
popa
and
ss
loop
cmp
mov
or
test
dec
and
mov
push
cwtl
fisttpl
sub
ret
imulb
inc
push
mov
imul
xor
mov
sbb
cmp
cltd
mov
push
mov
adc
xor
sub
push
and
jb
fistl
stos
add
insl
sub
enter
adc
dec
sbb
dec
jmp
mov
lods
frstor
adc
fs
jnp
xor
test
add
ds
pusha
mov
ljmp
push
movsl
ret
cmc
ret
adc
mov
jb
jecxz,pn
lcall
mov
jmp
insb
add
es
loop
add
jns
aas
adc
jne
mov
sub
mov
mov
push
mov
cmp
xchg
jg
xor
sub
jb
enter
sbb
mov
outsl
xor
mov
insl
ret
out
ds
sbb
dec
movsl
cmp
mov
mov
gs
addr16
sti
add
cmpsl
mov
or
mov
mov
add
mov
imul
mov
out
or
out
push
mov
inc
pop
cmp
inc
xor
push
jnp
scas
or
nop
xchg
jg
ficoml
sarl
xor
jae
inc
jnp
stos
jno
xor
insl
lea
inc
mov
inc
stos
or
mov
movsb
add
enter
pop
mov
call
ds
cmp
push
push
aaa
ss
sar
push
cmp
shl
imul
cmp
out
push
pushf
lret
xchg
pop
cmpsb
xchg
lret
or
movsb
inc
xor
cmp
xor
jecxz
mov
add
mov
jns
pop
arpl
or
push
cmp
in
dec
jne
mov
js
xlat
jecxz
fcos
mov
addl
xor
mov
adc
mov
nop
jnp
lods
lret
ret
xchg
xchg
cs
ljmp
imul
xor
popa
test
pop
mov
imulb
push
mulb
mov
push
rorb
outsl
data16
sub
inc
mov
mov
xchg
out
lock
jae
pop
int
mov
mov
mov
xchg
jg
sahf
xchg
popf
adc
lds
jmp
frstor
xor
stos
notb
hlt
popf
xchg
pop
jg
loop
loope
outsl
or
sub
add
pop
or
stos
hlt
dec
out
jae
cld
and
mov
jecxz
comiss
push
jg
out
cmp
sub
jle
adc
xchg
xor
mov
call
push
jecxz
adc
jg
aam
xor
popf
sbb
mov
jge
push
rcll
lock
dec
sub
ret
mov
pop
inc
add
movsl
adcl
das
cmpsb
cmp
mov
cmp
mov
outsb
xor
cli
fs
jno
dec
pop
mov
pop
xlat
stos
mov
int3
cli
ljmp
leave
fsts
xor
out
or
call
sbbb
jp
fdivr
shlb
enter
int
popa
es
cld
int
aas
cli
mov
call
sub
lock
or
xchg
lret
xor
add
cmpsb
cmp
leave
and
xchg
push
xchg
add
flds
cs
lretw
out
fimull
arpl
cmp
adc
mov
in
dec
in
xchg
sar
popf
pushf
testb
mov
xor
sti
es
stos
sub
aas
mov
xor
push
sbb
xor
lods
and
pop
push
outsl
repz
sub
ret
pusha
pop
ljmp
inc
loopne
loop
xor
xchg
enter
or
pushf
nop
pop
mov
jae
rolb
fisubrs
cmp
push
rcrb
out
dec
sahf
push
bound
xchg
cltd
leave
aaa
cmp
inc
xchg
mov
xchg
popa
fwait
repz
jp
cmc
aaa
or
cmp
hlt
popf
dec
xchg
cmp
sbb
and
jle
inc
push
jns
adc
inc
ds
popl
cmpsb
arpl
push
mov
cmp
ds
pop
add
lea
andl
lea
lock
mov
push
fdivl
int3
cld
data16
dec
je
and
cmp
subb
dec
mov
gs
pop
test
mov
les
xor
imul
push
jo
outsb
xchg
push
xor
in
pop
lods
dec
mov
ss
scas
adc
mov
push
ror
push
cmp
pop
push
ja
sbb
mov
sub
lea
ss
push
xor
pop
or
cmp
jmp
push
inc
or
ljmp
inc
jge
cli
xchg
dec
sub
repnz
stc
cmp
xchg
icebp
xchg
ljmp
ficoml
stos
cmp
pop
mov
push
outsb
inc
lret
mov
dec
push
ljmp
popa
pop
add
cmc
mov
dec
dec
mov
xor
cmp
pop
repz
idivl
shl
pop
fs
sbb
int3
ljmp
xchg
adc
scas
mov
pop
mov
xchg
test
mov
mov
dec
xchg
sbb
adc
and
outsl
bound
pop
inc
cmp
mov
rcrb
clts
jae
leave
mov
inc
push
add
daa
jl
inc
sar
push
aas
pop
cmp
scas
pop
insb
adc
out
cmpsb
sbb
inc
or
fucomip
jecxz
arpl
test
mov
addr16
jg,pn
pop
mov
popa
jp
aas
mov
xor
sbb
aaa
cmp
shll
enter
std
rdpmc
test
pop
ja
mov
sbb
out
sub
addr16
popa
cli
xor
jge
lcall
xlat
outsb
sbb
push
adc
leave
icebp
lret
jne
dec
pop
adc
sbbb
leave
push
add
or
mov
out
outsl
xor
scas
icebp
add
test
leave
dec
adc
lea
add
or
cmp
ljmp
maskmovq
negl
stos
mov
mov
or
cmp
stos
xchg
leave
mov
sbb
subb
gs
mov
dec
mov
xor
scas
pop
scas
sbb
aam
jbe
sub
leave
in
ret
pop
push
or
cltd
shrx
jo
mov
int
push
and
mov
mov
scas
bound
push
popa
xchg
pusha
scas
ret
enterw
cs
lahf
jecxz
popf
mov
or
out
out
push
mov
bound
mov
stc
and
and
out
mov
sbb
cltd
mov
jns
mov
adc
pushf
rorl
or
jg
mov
sahf
call
sub
fwait
adc
and
leave
sub
pop
stos
adc
mov
dec
cmpb
push
dec
pop
inc
cmp
mov
iret
hlt
bound
call
pushf
or
push
push
sahf
jle
les
sarl
ljmp
jmp
and
push
out
enter
cmp
fcmove
ret
stos
sbb
mov
leave
aad
imul
fmuls
cli
xchg
mov
cmp
outsl
mov
addr16
leave
lock
out
xchg
cs
sbb
shrb
dec
cltd
inc
jg
clc
mov
jo
mov
mov
mov
mov
mov
jne
mov
gs
fsubs
aas
sbb
dec
scas
out
pop
mov
mov
das
pop
sbbb
aas
daa
dec
jns
fs
cs
shrl
pop
negl
das
mov
jge
cmp
repnz
or
leave
or
loopne
sbb
push
pop
jg
push
dec
hlt
pop
imul
pop
xchg
cmp
ret
leave
clc
jns
into
push
and
ss
gs
ljmp
inc
or
push
sub
xchg
and
in
add
mov
ret
pusha
rcrb
push
add
addr16
dec
sub
fs
mov
out
cli
push
xchg
xchg
mov
test
cmp
pop
or
je
add
dec
pop
and
jbe
ret
in
or
ficoml
scas
es
mov
aas
sbb
test
in
sti
out
jl
nop
stc
shl
dec
out
xor
stc
fidivl
popa
dec
add
push
idivl
arpl
jne
out
cli
sbb
inc
out
ja
pop
pop
sar
or
insl
ja
or
sbb
inc
jbe
push
in
pop
daa
add
adc
test
fdivrl
arpl
jmp
pop
push
inc
popf
dec
sub
mov
jmp
jnp
out
fs
and
out
adc
out
mov
xor
mov
popa
aaa
or
iret
rcll
rorb
sub
stos
cli
aaa
xchg
cld
std
mulb
addl
mov
jno
xchg
fistpll
dec
mov
ja
jmp
push
xchg
xchg
notb
cmp
ret
in
xchg
lock
mov
add
rcll
mov
test
stc
xor
inc
test
pop
lea
sbb
imul
and
xchg
hlt
dec
inc
sbb
popf
subl
sbb
sbb
stos
mov
push
xor
ret
push
imul
or
sbb
add
sti
popa
cmp
addr16
mov
xchg
lret
sub
sarl
rcrl
test
xchg
mov
movb
ja
mov
jl
mov
push
adc
sbb
fdiv
addr16
push
inc
mov
in
or
movsb
dec
pop
xor
mov
xchg
mov
cs
jl
jecxz
or
and
jmp
lret
xor
call
addb
test
stos
add
jbe
ror
xchg
push
into
or
lret
push
mov
push
or
cmp
repnz
cwtl
sbb
flds
sub
jns
lret
leave
push
pushf
lret
or
int3
and
das
mov
cmp
mov
or
call
and
and
stos
xchg
push
arpl
enter
xor
jp
jne
push
pop
stos
inc
outsb
pop
lret
push
sbb
fiadds
imul
jl
push
pop
in
jb
ljmp
mov
push
js
ror
subl
ljmp
mov
jp
jp
into
push
push
mov
xor
scas
and
mov
or
movsl
lret
je
mov
dec
mov
outsb
mov
out
inc
sbb
dec
cmpsb
and
mov
pusha
push
jbe
pop
outsb
inc
mov
call
mov
pop
int3
scas
mov
jae
xchg
int3
mov
out
adc
push
sti
cmp
out
jb
lcall
sub
or
rorb
or
dec
pop
jmp
pusha
mov
mov
push
inc
sub
jo
rcll
mov
and
mov
repnz
into
lahf
ds
dec
mov
jge
inc
gs
mov
dec
push
mov
repz
push
xor
jmp
into
jo
push
adc
cli
sbb
xorb
push
insl
cs
nop
dec
cltd
lods
int3
adc
cmpsb
bound
js
or
jl
inc
fs
sbb
lret
stos
ljmp
gs
stos
push
inc
jmp
xor
lret
shr
sbb
dec
mov
mov
dec
or
rorl
cmp
pop
dec
idiv
xchg
lret
mov
adc
lret
cmp
and
dec
jmp
cmp
dec
or
sbb
push
je
lret
jbe
jg
xchg
jb
pop
push
xchg
mov
dec
adc
push
out
ljmp
and
mov
mov
scas
iret
adc
adc
into
mov
pop
sub
mov
ds
sub
in
push
iret
stos
and
aaa
cmp
into
mov
ficoml
sbb
jo
ud1
jnp
ljmp
inc
sti
push
pmaxsw
addr16
stos
pop
sub
add
or
pop
inc
mov
adc
and
nop
inc
or
ss
lock
rcrl
jo
scas
mov
mov
cmp
aaa
lods
ss
jb
xor
loopne
std
cmpsl
sub
faddl
mov
inc
mov
push
cmp
enter
pop
mov
stos
mov
mov
mov
mov
mov
popa
dec
add
pushf
xlat
enter
mov
sbbb
test
out
jb
cltd
das
hlt
mov
xorl
pop
je
int
fisttps
fsubr
and
or
or
stos
gs
mov
or
pushl
out
adc
sub
xlat
adc
and
sub
out
lcall
mov
pop
jne
mov
lret
hlt
fsubrl
cmp
stos
cld
cmp
fidivl
or
mov
clc
dec
out
lret
in
push
xchg
rdpmc
ret
cmp
sbb
mov
and
cmp
adc
cmp
inc
or
mov
adc
arpl
lret
or
test
or
add
mov
fldcw
lahf
or
lret
lock
imul
sbb
push
push
inc
bound
ljmp
outsb
mov
sub
jno
xchg
mov
push
js
lcall
movsl
push
ret
sbb
cmpsb
push
fucomip
decb
mov
jbe
std
int3
iret
xchg
push
inc
int3
iret
xchg
push
push
jp
loop
popf
push
out
mov
sub
out
pop
dec
out
dec
ja
out
inc
push
mov
push
ret
mov
or
jbe
push
xor
fisttpll
lret
rcrl
fbld
lahf
pop
repz
dec
js
ret
mov
pop
inc
int
push
leave
ficomps
scas
push
fwait
jo
pusha
inc
fnsave
mov
sbb
jecxz
into
ja
adc
jg
movb
repnz
push
stc
fs
bound
movsb
jno
insb
or
rcrl
add
aas
int
inc
cli
imul
repnz
daa
adcb
or
lcall
call
or
mov
sbb
adc
cmp
loop
cmp
xor
arpl
lock
xchg
mulb
cmpl
xor
loope
xchg
cmp
jecxz
pop
pop
push
xchg
push
pop
mulb
aaa
cmp
mov
fiadds
lahf
sti
ljmp
idivb
cli
lahf
push
in
jg
pop
xchg
iret
xor
fsubrp
in
cmp
or
add
fwait
mov
divb
mov
push
enter
ds
mov
popa
movsb
enter
xor
xchg
inc
jnp
push
or
fmul
loop
inc
outsb
ret
adc
cmp
call
jno
leave
add
jns
mov
inc
js
push
clc
cld
clc
mov
fstpt
nop
sub
imul
inc
push
xchg
push
inc
mov
insb
xchg
dec
jp
mov
andl
cltd
test
adc
sbb
jg
and
and
pop
jnp
scas
imul
xor
sbb
mov
mov
mov
lods
mov
xchg
lret
jnp
adc
xchg
fsubrl
xor
test
pop
int3
rorb
addl
or
jg
push
push
rorl
jns
mov
sub
mov
pop
cmp
mov
add
fs
push
mov
subl
sbb
repz
inc
pop
test
lcall
jl
ljmp
push
imul
rcrb
jne
pop
dec
jle
inc
cmp
and
push
sbb
pop
ss
add
nop
mov
push
pop
and
inc
ficoml
or
stc
jne
or
lahf
sbb
mov
lret
sub
dec
lret
jmp
test
je
ljmp
fistl
dec
cmp
test
sbb
inc
add
xor
pop
inc
arpl
dec
sahf
add
jb
jnp,pn
lock
cmpsb
mov
cmp
repz
fisubl
lods
or
mov
cmc
fimuls
repz
loop
mov
rolb
gs
aas
add
xchg
cltd
data16
out
push
or
mov
mov
jg
xchg
push
jnp
lret
scas
jle
xchg
add
iret
mov
in
sub
int3
sar
mov
icebp
neg
cs
adc
comiss
sbb
xor
int
jecxz
and
jecxz
or
cs
testl
mov
mov
repnz
xchg
mov
push
cmp
scas
adc
pop
mov
push
jg
xchg
sub
and
push
mov
std
add
jecxz
push
jp
scas
xor
ret
imul
inc
cli
dec
add
cmp
pusha
and
clc
inc
pusha
pop
pusha
rcll
xchg
fcmove
ljmp
out
lods
fwait
xor
loop
fnstsw
test
jmp
mov
arpl
arpl
pop
icebp
pop
iret
js
test
insl
int3
sbb
pop
sub
repz
jg
add
push
push
mov
movsl
clc
xchg
jo
xlat
jnp
movsb
cwtl
pop
xchg
sbb
adc
add
ret
mov
and
fs
pusha
or
push
pop
and
jl
fisubs
sub
in
or
xor
or
cmp
rep
or
mov
pop
or
outsb
movsb
lahf
xchg
mov
add
inc
or
pcmpgtd
jns
inc
mov
mov
jecxz
mov
cmp
sbb
fs
push
sub
pop
stc
into
adc
dec
mov
cmpsb
or
mulb
xor
pop
jp
ret
test
icebp
cmpsb
add
cmp
jl
xchg
mov
fstps
pop
lret
mov
fs
or
js
adc
jecxz
push
sbbb
cltd
dec
ret
outsl
mov
lods
xor
scas
daa
arpl
mov
sub
cs
or
lods
push
push
push
cmpsl
int3
dec
cmp
fwait
lods
lret
testb
or
mov
mov
inc
ja
xchg
mov
stos
or
adc
lods
push
jg
andl
cmp
mov
leave
sarb
stc
jmp
test
xor
push
sbb
mov
dec
out
or
ret
jns
xor
scas
mov
inc
in
dec
aaa
insl
test
lea
jo
out
xchg
loop
fnstenv
cmp
lods
jle
and
outsl
xchg
jbe
cmp
enter
push
js
xchg
or
cwtl
push
sbb
inc
xor
into
dec
sub
jnp
hlt
in
lea
dec
pop
jecxz
jecxz
jp
dec
out
loopne
sbb
arpl
mov
sub
imul
xchg
xchg
cmpsl
cwtl
push
adc
cs
popf
cli
xchg
sbb
int3
iret
test
add
xchg
lahf
jmp
int3
inc
jle
mov
hlt
push
mov
cmc
push
outsb
gs
loope
call
rclb
cmp
pop
mov
push
push
std
xor
push
mov
mov
int
cs
and
push
les
vunpcklps
ret
aas
push
mov
pushw
push
testl
movsl
mov
xchg
loop
cltd
sbb
mov
fidivl
add
mov
jg
inc
add
xor
jnp
adc
cmp
mov
fsubl
pushf
adc
shr
popa
subl
fldcw
or
adc
mov
in
push
adc
andl
mov
pop
andl
push
sub
jmp
mov
cmp
cltd
loopne
adc
int
xor
mov
fs
xchg
lcall
xor
cmp
mov
add
cmpsb
test
hlt
inc
push
jbe
sub
dec
and
lea
xor
mov
addr16
pop
mov
push
push
sub
addr16
insb
es
into
cmc
pop
fs
cmp
fcoml
jp
lods
lcall
into
sbb
dec
lcall
mov
lock
add
mulb
add
aaa
cmp
out
xchg
out
xlat
adc
loope
cld
div
loopne
jp
or
pop
push
daa
push
sbb
mov
jbe
es
mov
xchg
and
scas
sub
stos
jnp
cld
pop
cli
rolb
mov
xchg
aam
xlat
adc
adc
imul
aam
rclb
xor
aad
dec
mov
stc
out
cmp
xchg
adc
shrb
iret
pop
outsb
adc
popf
test
bound
out
fwait
shlb
int3
xrelease
out
and
pusha
cmp
xchg
ds
mov
mov
jne
pop
out
sarb
test
mov
or
in
or
dec
call
loop
mov
jne
pop
jb
jle
cmp
xor
inc
fildl
mov
das
stos
add
inc
inc
jb
fsubrl
xor
hlt
rorb
mov
sbb
iret
pop
dec
int
sub
jmp
dec
fisubrs
push
pushf
clc
xor
xchg
iret
les
cld
xor
xchg
push
icebp
jbe
jl
push
add
push
push
xor
popl
jg
mov
sbb
sub
out
sahf
cld
subb
loop
push
nop
fdivrl
loop
scas
nop
je
and
and
cli
ret
in
push
jmp
push
adc
stc
mov
pusha
adc
mov
cmc
mov
lea
ljmp
call
sbb
scas
jmp
and
cmp
rorl
aad
testl
and
pusha
std
enter
inc
sbb
fdivp
in
mov
cli
mov
mov
in
adc
and
push
mov
push
or
push
dec
push
cmp
call
lret
adc
jae
pop
add
ds
scas
push
cli
push
cltd
inc
push
sub
test
aas
lds
xchg
lcall
or
or
xor
mov
int3
neg
lods
adc
or
and
cmc
int3
call
in
push
inc
loopne
inc
adc
jle
cmp
mov
rcll
pop
cmpsb
add
push
or
ror
or
add
cli
adc
ret
jmp
jmp
cmp
imul
push
stos
ljmp
pop
inc
and
mov
add
lret
add
and
adc
pop
add
cmpsb
jg
orb
mov
add
pop
push
cmp
scas
or
stc
cwtl
cmc
int3
sbb
push
jae
mov
xor
stos
les
pusha
cmp
push
bndldx
arpl
push
cwtl
outsl
fwait
push
or
mov
popa
jns
xor
sbb
mov
testb
les
mov
dec
test
push
stos
cltd
and
dec
lret
fwait
push
mov
frstor
fisttpl
fisttps
cmpsb
add
out
adc
sub
cli
push
cs
faddp
adc
loopne
outsl
das
jb
sub
pop
icebp
lods
mov
scas
ljmp
push
mov
iret
scas
enter
cli
inc
cmp
lret
sbb
das
mov
adc
pop
cltd
mov
pop
sbb
lcall
xchg
xor
insl
xchg
outsb
js
scas
add
push
jmp
mov
jno
aas
or
test
test
imul
and
or
sbb
fs
xchg
lods
in
lret
push
es
cmpsl
fcmovnu
loopne
loop
jmp
fcompl
cmpsb
imul
cmp
dec
or
mov
ret
repz
cmp
push
or
insb
sub
sbb
mov
loopne
out
jno
in
and
nop
push
mov
arpl
mov
mov
or
cmp
lcall
cltd
dec
add
rorb
push
jmp
ret
mov
pop
cmp
mov
sub
aas
xchg
adc
stos
cmpsl
rcrl
xchg
push
mov
jns
sbb
add
xor
bt
jb
fs
test
push
ror
sbb
cld
ss
daa
pop
mov
idivl
xor
jno
sub
mov
sti
out
fs
add
pop
pop
lds
mov
test
sahf
pusha
bound
and
push
pop
xchg
not
fwait
out
pushf
xor
and
xor
mov
inc
xor
mov
and
cmp
sti
repnz
hlt
movsb
fld
lcall
mov
sbb
test
mov
stc
add
pop
dec
or
dec
adc
sub
test
std
enter
roll
or
mov
inc
xor
add
mov
push
enter
mov
adc
ljmp
or
es
or
inc
repz
mov
add
jle
cmp
negl
cmp
cmp
jmp
inc
cmp
sub
or
test
pusha
mov
adc
pusha
or
cmp
aaa
lcall
xchg
inc
cli
cmpl
mulb
mov
jns
mov
fwait
leave
rorl
stos
loop
das
xor
mov
sti
cli
cmp
pop
negb
inc
das
adc
xor
jecxz,pn
popa
adc
mov
jb
xchg
cmp
pop
icebp
jns
push
outsb
mov
add
xchg
sub
jg
fisttpll
xchg
adc
lods
ljmp
jns
xor
sub
popa
mov
ret
xchg
push
fsubl
jmp
cmp
jg
lods
mov
pop
xor
nop
sub
mov
cmp
mov
ds
mov
or
dec
test
ljmp
cmpsb
into
cli
ficomps
push
or
jp
pop
sbb
xor
cmp
scas
inc
sbb
incl
pop
repz
rclb
test
inc
cld
jb,pn
cld
popa
shrl
dec
mov
ljmp
out
dec
xchg
inc
popa
cmp
dec
mov
jne
stc
aas
idivb
dec
jns
cmpsb
jl
inc
hlt
cs
insl
aad
and
push
lret
gs
jecxz
mov
stc
data16
jnp
mov
mov
bound
cmp
jmp
sub
mov
stc
xchg
stos
test
mov
pop
in
sbb
sub
xchg
cmp
in
mov
lea
cmpsb
lods
lcall
pop
fists
adc
mov
jnp
and
rcrb
xchg
gs
and
jg
xchg
or
adcb
out
jbe
mov
mulb
stc
sub
enter
gs
rcrb
mov
loopne
dec
jg
sbb
std
cli
and
sahf
btc
xor
jno
inc
cmpsb
mov
mov
popa
sub
dec
outsb
pop
es
jge
dec
mov
jmp
sub
add
lock
mov
aad
inc
daa
lret
xchg
js
mov
pextrw
cmc
mov
fidivrl
and
scas
xchg
pop
in
add
mov
dec
imulb
sub
es
lock
divb
sahf
mov
test
xchg
sti
filds
aas
fistpl
inc
jle
sbb
push
ss
fwait
out
test
sbb
ja
pop
test
in
mov
sbb
adc
push
push
loop
lea
cmp
mov
stc
push
xchg
adc
push
mov
ss
mov
and
imul
cld
cmp
push
xor
xlat
lret
test
xchg
inc
test
lock
sbb
cwtl
imulb
ret
test
push
add
mov
shl
into
call
jl
popf
scas
push
mov
enter
add
fwait
sti
test
addr16
int
jmp
sub
mov
stos
sub
leave
mov
push
mov
pop
sbbb
into
sbb
sti
push
lds
mull
cmp
out
ret
and
mov
insb
pop
xor
cmp
les
mov
push
fs
je
iret
int
jle
cs
leave
xchg
cwtl
jle
popa
pop
and
mov
push
testl
int
mov
inc
les
into
or
sti
lret
dec
test
xlat
test
jge,pn
das
mov
cmp
mov
cmp
les
aaa
push
mov
xor
mov
mov
adc
ds
shlb
cmpsl
repnz
shrb
push
push
or
or
push
sub
mov
popf
outsl
mov
mov
nop
mov
sahf
mov
add
mov
mov
out
adc
sarl
pop
mov
inc
pop
mov
int
cli
dec
mov
push
mov
and
mov
sbb
sti
call
cwtl
mov
dec
jb
inc
mov
cmp
sub
sahf
lret
cs
out
and
pop
into
in
leave
sbb
pop
pop
jb
icebp
popa
pop
push
adc
add
sbb
mov
fisubrs
ljmp
sub
dec
mov
sub
aaa
push
dec
outsl
pop
addr16
jg
mov
sti
movsb
ret
jbe
lret
jp
cmp
add
push
stc
sub
enter
nop
int
test
mov
mov
ds
dec
mov
or
xor
aas
dec
sub
add
adc
cld
imul
fxch
iret
xlat
stos
xchg
sbb
cmp
pop
or
pop
ljmp
leave
mov
jbe
mov
pop
jbe
das
sbb
cmp
sahf
push
movsb
cmpsl
pop
mov
cmp
movb
sahf
sahf
sub
jae
cs
jo
std
aam
mov
sbb
fsubrl
push
dec
sub
ss
out
insb
inc
outsl
mov
or
mov
adc
push
sbb
adc
arpl
mov
in
inc
xchg
jne
or
mov
dec
ret
xchg
aas
lods
push
cmp
clc
push
enter
ljmp
test
stos
fisttps
mov
cwtl
add
daa
aas
mov
out
or
icebp
addr16
scas
pushf
rcl
fs
xchg
mov
mov
int
push
adc
or
repz
sarl
adc
pop
popa
mov
add
or
fs
daa
push
or
out
aaa
sub
jmp
sbb
add
cltd
orl
cmp
ds
fcmovnb
push
repnz
adc
add
adc
pop
push
cwtl
and
es
push
push
fcoml
xchg
mov
cmpsl
inc
adc
aas
mov
icebp
mov
push
cli
das
ret
neg
hlt
nop
or
push
lahf
push
xchg
and
popa
add
ljmp
push
add
loop
popf
jecxz
add
adc
inc
faddl
pop
push
std
aaa
bound
xor
outsb
adc
fwait
sub
or
aas
rclb
fldenv
popa
xor
jge
scas
dec
xor
mov
mov
fwait
and
mov
sub
pop
test
sbb
mov
xchg
out
shr
push
cmp
inc
test
mov
loop
add
cmpsb
cwtl
jle
xor
fdivl
popa
sbb
bound
jge
int3
int
mov
dec
mov
call
mov
inc
and
ss
jns
testb
sbb
andb
rclb
idivl
jb
xchg
ljmp
dec
inc
pop
mov
or
jnp
sbb
mov
fldt
and
lds
fwait
push
ljmp
mov
fisubrl
or
negb
ret
scas
sub
and
push
or
mov
cmp
xchg
and
cmpl
rclb
repnz
dec
out
mov
in
outsb
rcrl
fstpt
cmp
in
mov
fimull
sbb
xchg
push
or
por
or
jg
ds
jp
enter
out
mov
pop
cmp
mov
popa
aas
scas
ljmp
or
jmp
jo
es
in
cwtl
cmp
push
ss
pop
push
mov
orb
sub
stos
inc
push
jecxz
add
add
cmp
lret
orl
dec
ret
mov
add
add
out
fstps
adc
adc
sbb
repz
leave
mov
lcall
in
es
fbld
out
xchg
or
pop
mov
add
mov
or
pop
test
loop
pop
inc
popa
cwtl
adc
add
xchg
fwait
mov
add
arpl
lahf
lret
dec
mov
jb
sub
addr16
cmp
cli
mov
sahf
add
pop
int3
push
scas
dec
hlt
mov
xchg
adc
cld
mov
add
incl
pop
add
dec
cmp
lret
jle
and
in
sbb
jno
in
outsb
daa
notl
or
lea
fdivs
enter
sbb
jbe
pop
inc
or
and
lea
jnp
stc
cmp
xor
lods
out
or
cmp
mov
ja
lods
enter
cmp
sbb
ret
adc
jl
popa
mov
pop
dec
mov
icebp
stos
mov
lret
jl
subb
mov
jo
mov
adc
out
roll
or
popf
jb
call
mov
stos
jnp
cmpl
stos
rdtsc
lds
in
int3
mov
jp
movsb
mov
inc
daa
dec
inc
cld
pop
icebp
popa
jo
out
mov
cli
adc
cmp
andb
enter
das
ljmp
xor
mov
cmp
hlt
out
or
dec
icebp
ljmp
jne
xchg
jmp
in
mov
add
test
pop
imul
sbb
stos
sbb
cltd
jo
sub
adc
cmp
jge
pop
imul
pop
in
push
addr16
out
cmpsb
stc
addb
or
jle
fwait
jnp
sbb
add
push
lock
or
aam
sbb
enter
mov
jl
fsubr
mov
xor
mov
in
lret
sub
arpl
cmpsb
arpl
sbb
cmp
sub
cli
push
and
daa
or
gs
cltd
sahf
test
test
subb
sub
mull
xor
mov
sub
test
mov
movsl
mov
aaa
in
mov
sbb
loope
ljmp
mov
stc
push
nop
pop
add
dec
into
inc
sbb
popa
mov
push
adc
cmp
clc
pause
jns
cmp
jmp
pushf
sbb
daa
jecxz
adc
cmpl
mov
mov
push
mov
idivl
inc
dec
mov
out
jge
ds
inc
dec
pop
ss
les
test
cmpsl
cli
mov
push
addr16
out
sub
pop
or
scas
inc
cwtl
mov
pop
rclb
cmc
stos
mov
adc
mov
ds
leave
pop
mov
hlt
push
or
xor
dec
or
cmp
aam
subl
inc
and
adc
lods
mov
jmp
sarl
stos
sub
movsb
mov
icebp
mov
mov
lret
sub
add
jb
adc
jae
or
cmc
sbb
testl
icebp
jnp
lret
inc
jle
rorl
mov
sbb
sbb
cmp
lret
xchg
int3
push
in
mov
shl
scas
lds
or
adc
push
pop
xor
sbb
cli
fs
testb
push
adc
mov
or
jl
repnz
push
mov
cmpsb
divl
loopne
cmp
push
fs
and
je
mov
in
mov
push
mov
dec
fucomi
push
arpl
idivl
cmp
adc
inc
add
shlb
jnp
xchg
aad
cld
cmpsb
out
gs
popa
inc
dec
jnp
adc
cmpsl
shl
cmp
xlat
jns
add
push
or
into
xorl
mov
jno
popa
aad
imul
adc
lock
repz
repnz
inc
sbb
ljmp
ljmp
mov
push
dec
gs
int
mov
and
cmp
xor
add
mov
push
dec
push
cltd
ds
cmp
out
add
mov
jnp
sub
mov
sub
fsubrl
cmpsb
mov
add
testb
int3
sub
call
movsb
sub
sbb
fstpt
das
ljmp
int
stos
xchg
pop
mov
jg
jb
dec
fs
icebp
push
cli
mov
fwait
lcall
aas
xlat
xchg
sbb
mov
mov
dec
dec
inc
std
mov
cmp
loope
sbb
xchg
dec
dec
shrb
jnp
cmp
imul
inc
jnp
imul
jno
mov
in
pop
fisttps
fld
sti
xor
lods
in
icebp
out
jmp
adc
stos
imul
sti
adc
ret
mov
faddl
cmp
gs
mulb
fidivrs
mov
cmp
pushf
xchg
ss
lret
dec
outsb
inc
push
dec
and
cli
mov
pop
dec
cmc
pusha
adc
aaa
pop
or
inc
mov
sbb
adc
mov
mov
stos
addb
jb
pop
or
xor
lret
jmp
movsb
int3
mov
xchg
sbb
xor
decb
das
sbb
pop
das
cmp
push
mov
dec
leave
rol
cmp
call
cmpsb
or
dec
adc
push
imul
xor
dec
imul
mov
sbb
cs
cmpsl
xor
cmp
xorl
cwtl
jns
mov
int
jns
fdiv
mov
cmp
pop
stos
dec
or
cmp
or
repnz
mov
pop
movsl
or
mov
enter
nop
jge
dec
pop
mov
jmp
hlt
sub
xchg
iret
icebp
nop
xor
loop
sahf
xchg
cld
jle
xchg
inc
lods
adc
iret
add
xchg
cmp
dec
or
ljmp
into
push
adc
cmp
lret
gs
sbb
das
or
mov
ret
inc
sarl
jmp
insl
mov
out
enter
lret
sbb
stos
jmp
xchg
dec
adc
lcall
call
in
lods
pop
push
imul
push
pop
mulb
adc
adc
cmp
fs
icebp
nop
int
aas
dec
or
jns
gs
push
adc
mov
jmp
sub
ljmp
sub
jnp
push
aaa
cmp
jns
sbb
dec
adc
into
in
cmp
or
pop
stos
cli
sub
lret
out
xchg
inc
cmpsb
in
push
sub
aas
lret
loop
adc
sbb
negb
pop
stc
pop
jb
xor
sub
or
daa
mov
cltd
pushf
adc
mov
stc
xchg
bound
mov
mov
popf
sub
stc
and
nop
scas
fidivs
push
jne
push
jbe
cwtl
push
inc
cmp
sub
pop
popa
scas
cmp
jg
inc
cmpsb
ljmp
int3
cmpsb
lock
leave
out
or
xor
xor
repnz
cwtl
fstl
fistl
cltd
mov
mov
adc
ret
jns
xor
call
jle
pop
mov
std
or
and
pop
ret
xor
cmp
push
movsb
sub
cmp
lcall
jl
xchg
imul
mov
pop
fidivl
push
mov
mov
sbb
sbb
mov
xchg
in
cmp
or
or
pop
cmpsl
pop
inc
aaa
or
mov
je
sub
ljmp
sahf
cmp
mov
fsqrt
int3
push
sbb
cmp
pop
or
cli
jl
jle
stos
mov
push
pop
pop
js
sbb
sub
xor
cltd
adc
std
pop
xchg
pop
add
mov
or
xor
mov
xchg
loop
repnz
xchg
and
mov
push
je
ret
xchg
sub
sub
cltd
xor
or
incl
push
insb
xor
dec
aam
ret
loopne
stos
in
ror
xchg
mov
inc
pushl
and
mov
push
js
cmpb
lcall
or
lret
test
ljmp
out
cltd
outsb
test
ss
xchg
cli
decl
aas
cmp
addl
loop
pop
push
fdivr
int
mov
sbb
fistpl
and
insl
jo
add
in
jns
pushf
pop
mov
dec
or
xchg
mov
ja
sahf
adc
outsl
movl
jnp
das
or
sub
cs
cld
jecxz
jno
jb
repnz
outsb
xchg
adc
jo
iret
shll
mov
mov
or
jo
sbb
sub
fnstenv
fstp
in
js
push
lret
inc
adc
xchg
out
repnz
test
xor
jmp
aam
sub
xchg
lret
pop
pop
loopne
movsb
aaa
xor
add
loop
inc
clc
into
inc
push
aas
mov
cmp
repnz
pusha
lcall
lods
lock
or
lds
fistpl
out
xchg
ljmp
call
loopne
outsl
push
inc
fldenv
cld
negb
cmp
hlt
test
inc
push
mov
add
subb
fdivl
xor
and
cmc
adc
cmp
lret
daa
jp
push
sub
and
test
sub
arpl
pop
addr16
jge
push
out
mov
mov
adc
jecxz
das
mov
fdivrl
xor
scas
cli
out
pop
in
inc
or
in
lret
stos
jns
lds
in
imul
es
xchg
mov
or
jecxz
jns
div
fcmovu
adc
jg
sbb
popf
cli
pop
dec
mov
cmp
repnz
sbb
cmp
aaa
divb
mov
jecxz
imull
sbb
dec
xchg
jg
or
sarl
mov
popf
ja
or
fiaddl
lret
hlt
pop
scas
in
push
fildl
cmpsl
sahf
bound
dec
fisubrl
test
repz
jmp
push
ret
enter
ficompl
fcoms
jnp
inc
jl
out
sub
mov
cs
or
out
mov
sbb
sbb
lods
pop
fcmovnb
and
jb
loop
arpl
sbb
pop
dec
jne
jno
pop
mov
or
inc
lret
and
mov
cmp
mov
and
sbbl
cld
call
add
xchg
push
jmp
or
mov
cmp
leave
pop
jg
push
mov
fsubrp
sbb
jmp
aas
fwait
or
shll
cmp
xor
xorb
lret
leave
out
or
int
xor
push
jl
data16
push
fimull
scas
mov
stc
push
mov
ja
fsubrs
push
sub
xorl
test
lods
lret
xchg
repnz
xchg
leave
movb
rcll
mov
lods
dec
imul
dec
test
int3
push
ret
negb
inc
jnp
xor
mov
lea
xchg
sarl
loopne
mov
dec
in
mov
pop
dec
pop
ficomps
mov
xor
bnd
add
or
pop
repz
xor
jge
add
push
in
mov
cmpsb
cli
pop
or
fidivs
push
lret
sub
arpl
imul
pop
or
test
xor
aad
mov
cmp
jmp
insl
jo
and
stc
sub
cli
ret
push
or
incb
adc
add
mov
mov
ljmp
imul
and
cmp
es
mov
mov
rdmsr
cmpsb
lcall
fs
mov
add
add
and
or
sbb
mov
jns
icebp
inc
xchg
adc
jb
xchg
pop
sub
jne
pop
add
xchg
xchg
movsl
xchg
adc
mov
push
cwtl
inc
ret
cmp
mov
shll
cmp
divb
orb
pusha
cltd
or
lock
jbe
cmp
mov
imull
xchg
adc
int
dec
cltd
in
shrb
cmpl
test
mov
call
push
out
push
push
negl
aad
sub
leave
push
cmpsb
imul
iret
inc
xlat
or
pop
les
test
insb
cmpsb
loopne
mov
sahf
and
cs
dec
xor
mov
gs
xor
adc
xor
daa
dec
scas
adc
push
push
and
je
adc
lret
mov
cmp
addl
iret
sbb
lret
mov
in
sti
test
and
cli
and
daa
pop
pop
adc
jecxz
xor
mov
xor
sub
ret
and
sub
pop
cltd
call
mov
leave
in
gs
cmp
adcl
or
push
aas
jno
xchg
ret
mov
xchg
push
push
xor
stos
pop
ret
adc
xor
inc
or
inc
les
roll
xchg
fstl
push
divl
mov
and
lea
cli
or
jnp
mov
outsl
and
sbb
sub
ret
adc
xor
in
or
ss
jmp
clc
pop
nop
clc
mov
xor
pop
popf
mov
mov
outsb
int3
inc
pop
in
into
fldt
jge
testl
adc
call
push
cld
xor
xor
xchg
pop
out
xor
cmp
xchg
pop
test
xchg
jae
aas
shlb
add
dec
ds
dec
jg
stc
leave
xor
popa
dec
or
pusha
ljmp
insb
insb
mov
mov
testb
jnp
daa
in
leave
cmp
pop
adc
mov
sub
fdivrs
sub
mov
push
lods
scas
imul
dec
loopne
and
sub
out
mov
or
pop
cmp
sbb
lock
sub
sub
mov
cmp
pop
out
or
or
cmp
push
aas
cmp
sub
repnz
jnp
iret
mov
cmp
cmpsl
inc
or
add
call
lahf
in
pop
mov
sub
or
iret
xor
pop
mov
pop
int
mov
lods
inc
test
add
dec
xchg
mov
stos
ficoml
sub
pop
sub
cltd
cmp
mov
push
scas
cmp
mov
icebp
insl
jge
cltd
jg
and
push
es
add
inc
cltd
sub
jge
cmpsl
adc
cmp
ss
and
out
jno
add
insb
pop
comiss
sbb
jb
ss
inc
dec
adc
jmp
sti
dec
mov
aam
ljmp
dec
adc
bnd
jbe
xchg
inc
sar
sub
fidivrs
inc
mov
adc
or
jo
sbb
in
imul
in
test
cld
and
xor
mov
push
fs
lds
sbb
js
xor
xor
ljmp
push
mov
out
push
jne
ljmp
es
xchg
js
push
push
popf
pop
js
stc
pop
into
fimull
lret
mov
cmp
fimull
or
inc
and
xchg
pop
and
inc
sub
cmp
pop
sarl
fsts
mov
cmp
xchg
or
sub
sub
enter
mov
xor
fdiv
out
mov
pop
out
xor
mov
jecxz
inc
movsb
pop
cmp
out
and
jmp
xchg
mov
lcall
mov
jl
mov
cmp
mov
stos
or
imul
jne
popa
gs
fsubrl
in
out
jl
jmp
cmpsb
jns
push
inc
add
mov
stc
out
sbb
mov
iret
xchg
xor
out
mov
sti
test
dec
jl
mov
jmp
in
adc
lret
loop
repz
push
xchg
imul
sarl
mov
fisttps
out
sbb
xchg
mov
ficomps
mov
add
cli
jnp
xchg
mov
hlt
jge
jae
sub
test
push
adc
push
or
pop
das
pushf
xchg
js
loop
mov
push
mov
in
cs
ljmp
es
cli
sbb
sub
mov
or
dec
into
cmpsl
mov
lds
incl
or
sbb
or
addl
or
pop
aad
xchg
or
test
out
adc
dec
push
fistps
xchg
and
add
nop
or
notl
arpl
add
aas
in
sub
movsb
push
hlt
jmp
xchg
mov
stos
mov
jns
stos
jmp
pop
or
stc
rolb
arpl
add
fistps
add
dec
push
leave
cmpsl
mov
cmp
sub
lret
mov
fimull
inc
push
sti
in
adc
jmp
mov
pop
shll
xchg
dec
shll
dec
scas
stc
pop
imull
add
fsts
push
pop
push
sub
adc
aad
sbbb
mov
inc
push
inc
or
ficomps
test
loop
lret
cmc
addr16
and
adcb
out
push
cmp
jg
dec
xchg
push
adc
push
nop
xor
xchg
mov
mov
gs
inc
sti
imul
mov
es
xor
imul
mov
inc
cmp
xor
repnz
or
in
push
aas
call
outsb
or
push
pop
pushf
adc
adc
cwtl
out
sub
jle
mov
mov
pop
jmp
mov
dec
mov
sbb
push
stc
ja
fstps
push
adc
xchg
and
jg
ss
xor
mov
adc
pop
mov
popf
push
and
iret
xor
std
dec
es
cs
inc
jg
inc
xchg
rcr
sub
jp
xchg
pop
cld
lods
ljmp
clc
or
or
call
fcompl
push
jle
cmpsl
inc
je
loop
subl
test
mov
je
sahf
stc
push
cmpsb
xchg
or
pop
dec
or
jle
adc
div
gs
lods
inc
cmp
insb
adc
sub
ds
aam
std
mov
mov
sahf
lret
adc
mov
jo
xorb
add
inc
mov
and
and
cmp
fsts
or
and
sub
sub
and
in
and
ret
shlb
push
cmc
adcl
cmc
pusha
in
xor
test
push
and
cmp
daa
push
testb
xchg
mov
sbb
out
rclb
dec
pop
ljmp
sub
dec
mov
cld
bound
cwtl
jnp
aaa
mov
add
xor
int
mov
mov
movsb
icebp
jp
lock
insb
cmp
popa
fimull
insl
lcall
jmp
test
mov
sub
dec
push
shlb
fisubrs
pop
fcmovbe
cmp
and
jo
das
and
daa
pop
loop
cmp
lret
inc
cmpsb
pop
adc
cltd
xchg
push
ss
xor
dec
inc
gs
sbb
sbb
pop
xor
popa
insl
fsubrs
pop
lret
imulb
into
mov
lret
inc
inc
inc
xchg
cmp
push
adc
cmp
add
cli
cs
out
negl
daa
push
lahf
xchg
out
pop
ljmp
jno
dec
xchg
jle
xchg
sub
dec
iret
out
mov
gs
dec
xor
daa
xor
fidivl
cmp
cmp
push
sub
mov
loop
imul
or
cmp
imul
sbb
ficompl
int
pop
push
jg
push
shufps
fwait
gs
or
mov
lcall
inc
inc
leave
mov
mov
xchg
hlt
icebp
sbb
divb
nop
or
fcoms
cmp
fwait
or
negb
xchg
enter
lods
push
sbb
dec
testl
cltd
mov
fdivrp
jmp
or
dec
cltd
out
xor
stos
xchg
lret
addr16
mov
xrelease
add
cmp
test
cltd
push
push
push
pop
arpl
ret
lods
push
pop
int
daa
rcrl
lock
les
or
adc
sub
sub
sbb
in
cmc
mov
push
jp
jb
mov
out
mov
jmp
lret
and
mov
xchg
imul
stos
imul
jnp
xchg
mov
in
fmull
mov
nop
loopne
insl
push
loop,pn
es
shlb
jg
inc
inc
in
aam
sub
cmp
mov
ja
or
pop
scas
lock
ficomps
xchg
dec
pop
pop
mov
ja
inc
cld
fwait
arpl
mov
ljmp
out
mov
lret
and
jle
mov
mov
pop
jnp
mov
dec
fdivr
push
out
adc
dec
push
sar
je
jg
int
push
add
lret
and
cmp
xchg
in
ljmp
fisubl
dec
xor
imul
lret
push
repz
or
imul
les
scas
dec
sbb
in
scas
pop
mov
outsl
dec
mov
push
push
dec
leave
out
mov
xor
sub
scas
stos
mov
push
sbb
lret
xlat
lds
inc
mov
jne
std
stos
insb
shll
addl
push
inc
ss
loopne
sub
loope
mov
mov
adc
pop
dec
mov
and
cld
jns
or
or
imul
pop
sbb
or
cmp
cmpsb
jb
aad
jne
mov
imul
inc
or
mov
aas
popf
popf
pop
push
add
jnp
std
mov
scas
aaa
dec
adc
xchg
xchg
mov
lods
decb
rclb
mov
mov
jb,pt
inc
ljmp
mov
lret
xor
and
lcall
mov
push
or
pushf
pushf
insl
loope
jnp
in
jle,pn
and
sub
lret
cli
outsb
mov
daa
notb
cmpsb
pop
jmp
test
push
mov
jg
dec
mov
packuswb
or
add
pop
jp,pt
in
sti
gs
jge
jp
xor
sti
ja
inc
lds
loopne
and
push
add
pushf
cld
stos
scas
lret
pop
dec
mov
xlat
out
cltd
fidivrl
mov
fildll
push
mov
pop
lea
shr
jl
addr16
nop
dec
sahf
fiadds
cmp
add
push
mov
orl
cmpsl
sarl
aas
pop
out
inc
lods
mov
shll
fildll
pushf
jmp
pusha
or
and
pop
into
loope
xor
pop
stc
push
cwtl
pop
add
xchg
cmpsb
imul
mov
pop
mov
mov
int3
mov
lea
fs
pop
adc
rcr
sbb
int3
fistps
test
sahf
pop
mov
cli
mov
cmp
mov
dec
inc
ljmp
add
mov
cmpsb
cli
mov
mov
dec
mov
cmpsb
adc
sbb
jnp
push
cmp
jb
sub
xchg
leave
mov
insb
cmp
call
jg
xor
mov
hlt
std
add
pop
cmp
sbb
jbe
lea
and
mov
repnz
jne
push
xchg
pop
nop
mov
or
mov
lea
pop
fisubl
mov
or
inc
mov
mov
ljmp
sahf
mov
jp
mov
sbb
or
and
sbb
dec
adc
sub
shlb
cmp
jmp
ljmp
sarl
mov
push
dec
icebp
dec
shl
lock
lret
pop
xor
popf
xor
xchg
mov
addl
lea
mov
xlat
popa
pushf
imul
mov
out
lock
neg
push
fnstsw
pusha
outsb
je
mov
cmp
mov
jge
loope
or
shrb
dec
fstpt
mov
sub
in
sbb
out
ljmp
lock
neg
divl
push
pop
jnp
test
divb
mov
cmp
lret
adc
mov
fimuls
bnd
stos
xchg
xor
iret
in
push
cmp
add
stos
and
sub
testb
sub
xor
jo
sub
in
repnz
sub
lods
adc
js
aaa
ljmp
insl
packuswb
add
leave
lds
push
jno
or
out
xchg
imul
fidivrs
mov
push
mov
mov
es
gs
ds
lcall
jnp
lods
cmp
push
jle
mov
sub
incl
shlb
jg
push
jmp
cs
cmp
shl
sub
loop
aaa
sbb
cmp
add
pop
sti
dec
les
xchg
sbb
or
sub
mov
xchg
push
xchg
adc
arpl
into
pop
loope
popf
pop
stos
outsl
shlb
mov
mov
mov
jns
test
incl
or
enter
test
inc
dec
lock
aam
cwtl
es
sti
add
mov
xlat
mov
inc
dec
arpl
in
cmp
or
add
test
imul
mov
adc
inc
lret
lods
mov
cs
adc
clc
sub
cmpsb
imul
cmp
and
add
insb
push
xchg
push
movmskps
sub
xchg
cltd
push
dec
jecxz
ljmp
hlt
jg
div
into
lcall
addr16
ret
imul
push
adc
cltd
movsl
dec
pop
pushf
mov
sbb
mov
xor
xor
xchg
jecxz
out
adc
bnd
mov
xlat
xor
ja
stos
add
imul
xor
sub
test
lret
das
sbb
fistl
mov
xchg
xor
addr16
add
fcoms
jnp
or
idivb
add
out
popf
xchg
sbb
out
sub
push
dec
arpl
pop
arpl
and
pop
scas
lret
xchg
xorb
cmpsb
mov
xchg
adc
mov
outsl
jbe
out
mov
push
icebp
outsl
cmp
lcall
cmp
jg
xchg
mov
stc
sbb
lcall
pop
and
jecxz
push
lcall
jnp
dec
ds
xchg
inc
cmpl
mov
in
fs
xor
test
dec
lret
lds
pop
sbbl
in
pushf
sub
cmpsl
mov
testb
cmpb
scas
xor
push
and
repnz
adc
popa
mov
cmp
push
loop
add
fimuls
mov
notb
nop
or
fstpt
ret
mov
xchg
xchg
push
cli
dec
sub
sbb
pop
xchg
or
jno
clc
dec
ret
popa
inc
lcall
xchg
je
mov
in
push
push
addr16
dec
lock
std
pop
xchg
or
pop
arpl
sbb
test
cmpb
and
push
scas
mov
mov
mov
mov
pushf
insl
jno
and
scas
jp
mov
mov
pop
push
or
out
movsb
add
pop
lcall
push
inc
aam
cmp
clc
push
add
jbe
ds
mov
jb
hlt
and
gs
out
mov
scas
fldl
mov
imul
add
jmp
inc
xor
jnp
dec
xchg
test
stos
xor
xor
add
mov
mov
mov
mov
pusha
cmpsb
pop
cmp
cwtl
pop
aaa
mov
les
adc
cmp
sub
pushf
xchg
es
xor
adc
aas
pop
cmpsb
mov
bound
inc
cmp
popa
and
orb
mov
inc
addr16
add
xchg
fstpl
push
cwtl
aas
dec
xchg
sarb
jmp
dec
jecxz
mov
cltd
pop
outsl
testl
repnz
xchg
jb
lods
jp
cmp
cli
or
xor
jle
addl
sbb
stos
adc
daa
or
jb
rorb
stos
inc
lret
stos
pop
ss
sub
cli
cmp
insb
and
xor
or
sbb
jmp
sti
cli
ljmp
push
sbb
xchg
or
outsb
inc
imul
out
insb
xchg
adc
xor
into
xchg
cmp
add
mov
mov
xchg
dec
out
scas
lods
adc
testb
cmp
push
mov
sahf
push
jp
add
lds
cmp
jmp
outsb
pop
push
sbb
sbb
mov
pop
or
jnp
xchg
divb
xlat
add
je
mov
idivl
add
push
fldcw
addr16
repz
mov
enter
xchg
sbb
movb
adcl
outsb
sbb
ds
ss
out
aaa
push
insl
xchg
xor
out
dec
xchg
je
cmp
pop
sub
sub
ret
lods
lret
in
adc
and
xor
push
xchg
mov
es
jnp
out
inc
cmp
xchg
mov
sub
mov
mov
push
loopne
mov
filds
mov
mov
xlat
fnstenv
mov
and
lds
test
faddl
or
shlb
add
orb
mov
ds
imul
xor
mov
or
push
push
cmp
xchg
cwtl
sbb
or
xchg
push
xor
pop
xchg
push
lods
fsubl
out
add
cli
pop
cmpl
ret
push
pop
xchg
sbb
mov
cmpl
xor
in
stc
clc
xor
jnp
jl
cmp
cmp
mov
movb
testb
int
lods
push
lods
clc
inc
push
jmp
sub
pushl
jmp
mov
dec
mov
cli
sub
leave
in
pop
mov
cld
jns
sbb
inc
lea
lea
outsl
lahf
cmp
mov
cmp
clc
add
or
push
adc
sbb
iret
iret
xchg
pushf
and
bt
jg
cmp
pop
in
push
psraw
dec
cmp
in
xchg
xorl
scas
shlb
shll
fstpl
and
fnsave
jle
adc
mov
cmp
mov
inc
minps
xchg
sbb
mov
pop
push
aas
repnz
jnp
cmp
jmp
or
or
or
push
add
stc
mov
movsl
jg
mov
xchg
adc
int
and
imul
xchg
mov
fcoms
mov
repnz
jbe
jb
neg
mov
ficomps
inc
push
cmc
daa
push
dec
outsb
cli
insl
jmp
fdivs
fisttpl
mov
ds
test
jl
xchg
sbbb
push
notb
adc
or
movb
add
and
pop
mov
sbb
add
ret
inc
push
dec
pop
mov
mov
mov
cmc
push
mov
cmpsb
shl
add
mov
mov
mov
subl
sbb
xlat
dec
imul
mov
loop
xchg
xchg
push
lret
xchg
adc
loopne
outsb
jmp
mov
or
sub
inc
dec
mov
cltd
pop
jne
ljmp
xor
mov
inc
adc
testb
mov
bound
or
push
fldt
outsl
fsts
inc
or
adc
imul
cmpsb
test
hlt
jne
cmp
enter
xchg
or
aam
adc
repnz
xchg
int3
xchg
mov
getsec
cmc
movsb
or
mov
mov
mov
adc
pop
and
scas
pop
mov
sub
xor
xlat
dec
or
add
fisttpl
xor
int
popa
lret
cmp
out
jns
push
or
arpl
arpl
and
cld
jge
cmp
int3
adc
fidivrs
pop
cmp
add
and
pop
add
pop
addl
ret
daa
mov
and
cmpsb
mov
add
or
scas
wrmsr
sti
lods
daa
add
inc
out
ljmp
mov
imul
dec
jns
add
scas
cmp
jno
lcall
mov
adc
and
outsl
adc
in
mov
testl
inc
add
inc
rcll
in
outsl
pop
and
lds
xchg
aad
or
daa
popa
imul
or
xor
and
test
jecxz
xchg
iret
icebp
push
xchg
sub
jmp
in
rcrb
mov
sub
and
xchg
fldt
je
sub
push
int
cmp
dec
pop
lock
and
jg
sbb
pop
lcall
jp
faddp
push
jecxz
lcall
shl
mov
fs
and
jg
popf
rcl
stos
pop
stos
xor
fs
lock
sbb
inc
mov
int
or
pop
jecxz
and
push
cmp
out
ret
outsb
mov
xchg
xor
inc
xchg
andl
pop
lret
jae
cld
xchg
mov
sbb
mov
popa
jbe
popf
jge
je
mov
jmp
cwtl
imul
js
dec
mov
ja
cltd
bound
jmp
push
mov
cmp
mov
les
jmp
mov
xchg
jp
lret
repz
or
jge
std
jge
pop
sahf
add
idivl
aam
repnz
ret
cmpsb
call
shrb
xchg
dec
mov
popf
xchg
jns
mov
inc
in
shlb
stc
cmp
inc
lock
push
push
push
add
xor
sbbl
pop
pop
lods
div
sbb
sbb
pop
ljmp
pop
cli
xor
leave
adc
daa
fidivl
push
jl
push
sbb
ljmp
ljmp
out
xor
fisttpll
sbb
lcall
stc
push
test
gs
add
push
xor
inc
or
add
push
cmc
sbb
push
or
dec
inc
mov
mov
add
adc
fcomi
push
pop
cmpb
pop
repnz
pop
cmpsb
xchg
xlat
das
and
mov
outsb
jl
cmp
ror
jecxz
or
lahf
out
les
jmp
stc
dec
cli
ror
icebp
jb
or
stc
rcll
in
out
rol
outsb
or
out
add
xor
in
cmc
es
or
push
loopne
fidivrs
sahf
aad
mov
xchg
fld
outsb
pop
mov
push
out
xor
mov
test
mov
fsubl
pop
or
adc
mov
mov
stos
xchg
decb
xchg
call
cmpsb
push
ljmp
les
std
xchg
dec
je
out
sub
cs
pushl
test
arpl
push
cld
adc
ss
iret
aam
in
cmp
into
mov
dec
and
clc
adc
call
inc
mov
or
jge
jae
out
mov
sbb
mov
faddp
mov
imul
pusha
cltd
cmp
cmp
mov
mov
addr16
sbb
gs
pop
sarl
jae
or
repnz
dec
rcll
push
enter
mov
add
outsl
push
cli
out
xchg
inc
notl
or
and
std
inc
and
dec
popa
push
pop
loope
mov
lea
lea
xchg
clc
daa
pop
cli
lcall
and
out
insl
in
or
data16
or
or
arpl
cmp
adc
rol
jg
sti
imul
xchg
repz
jae
mov
xor
outsl
lds
jns
sub
xchg
and
cli
add
test
sbb
pop
test
mov
sahf
pop
cmp
aam
addr16
out
xlat
stos
adc
popa
popa
and
lret
and
aas
lret
or
push
lock
add
pusha
add
clc
out
and
out
ss
popa
push
mov
mov
sarl
adc
jno
repnz
or
loop
sbb
test
lret
scas
sbb
xchg
mov
movsl
sub
hlt
jl
fdivrl
fsubrp
add
inc
mov
or
jmp
xor
clc
mov
fs
sub
or
sub
std
adc
in
mov
sub
inc
mov
aaa
cmpsb
call
sbb
rolb
mov
jb
and
push
cmp
xchg
cltd
pop
aad
test
mov
cltd
sub
sbb
cmpsb
cltd
inc
repnz
outsb
mov
add
cmp
pop
icebp
mov
iret
outsl
xchg
dec
jo
dec
inc
jge
adc
icebp
sub
jmp
jle
pop
adc
es
andl
mov
jo
cmpsb
clc
leave
inc
fdiv
sub
jge
ret
or
mov
jg
ljmp
je
or
push
mov
shr
std
int
cmp
jo
jo
add
sbb
add
cmp
mov
cmp
mov
xor
ret
add
fimuls
jmp
mov
icebp
stos
pusha
in
mov
add
cmc
cmp
out
dec
xor
in
into
cltd
movsb
mov
add
dec
xchg
das
fdivl
mov
imul
das
sbb
ljmp
sbb
cltd
push
xchg
inc
ffreep
push
outsb
int3
dec
mov
add
add
ret
popa
mov
mov
inc
pop
aad
pusha
mov
das
xchg
add
xchg
push
in
cmpsb
adc
jmp
jecxz
add
shr
lret
pop
in
mov
cmp
in
xchg
add
push
cmc
jo
pop
movb
mov
outsb
test
repz
sbb
cmp
cmp
adc
ljmp
mov
xchg
mov
lcall
push
aad
mov
pop
insb
fmuls
mov
mov
outsb
jmp
ss
sub
in
and
test
jb
mov
xchg
jns
dec
cmp
sub
inc
ljmp
js
insl
in
or
add
or
cmp
mov
pop
fs
push
pop
push
pop
inc
fucomp
pop
add
jae
int3
addb
sahf
icebp
popa
add
cmp
stos
scas
sbb
in
daa
jg
adc
int3
push
daa
mov
push
out
jno
push
mov
fldenv
sbb
adc
out
repnz
xchg
fs
and
add
add
into
mov
add
sub
push
fcos
jns
ret
xor
push
imul
aas
and
jmp
cmc
cmpsb
call
in
push
pop
xchg
imul
out
aas
xchg
in
lods
ljmp
scas
scas
mov
pop
dec
jl
jo
adc
pop
jp
xchg
in
arpl
leave
sti
mov
jge
or
fldenv
mov
rcrb
mov
and
sbb
enter
xor
sub
xor
dec
adc
neg
mov
xor
push
mov
mov
nop
arpl
xor
cmpsb
imul
test
push
loop
pop
dec
cmp
fwait
stc
sbb
jmp
cmp
popa
arpl
imul
out
inc
push
addr16
pop
leave
cltd
cmp
or
andb
cld
xor
dec
enter
add
popf
cmp
cmp
jp
clc
push
mov
mov
inc
fsts
inc
xchg
push
cltd
or
pusha
repnz
add
push
mov
in
pop
fs
push
out
jo
mov
jns
xor
jo
add
pusha
fdivs
inc
and
std
push
xor
sti
test
loope
jp
add
mov
xor
stos
push
jne
jo
test
test
movsb
jb
xor
ror
ret
xchg
leave
cmpsl
out
xor
mov
jbe,pn
mul
lea
stos
jmp
std
mov
sbb
call
cmp
pop
or
xor
fwait
pop
add
lods
push
ljmp
push
and
or
pop
xchg
xchg
xor
cmp
decl
aas
xor
xor
sub
sbb
cmp
cmp
cmp
daa
cmp
sbb
in
jl
cmp
ljmp
mov
clc
cs
imul
int
repnz
cmp
sub
inc
inc
lahf
xor
adc
lds
cmp
repnz
cwtl
repnz
stc
pop
out
aaa
push
jmp
or
or
mov
dec
inc
lods
mov
push
push
cmp
mov
bound
add
ror
out
inc
int3
xor
or
add
xchg
and
ljmp
gs
jmp
cmc
out
pop
jmp
sbb
push
mov
or
jno
jp
cmpsl
cwtl
lock
popa
dec
mov
test
ja
cli
push
jne
add
mov
sti
xor
sbb
leave
das
js
cmpsb
xchg
mov
xor
xor
stc
sub
jnp
add
cmpsb
push
jb
ljmp
cmpb
mov
mov
pop
subl
inc
icebp
mov
xchg
push
mov
pushf
hlt
push
nop
jb
rorb
push
mov
out
jge
in
xor
dec
inc
rcrb
or
jl
mov
push
int3
daa
pop
outsl
sub
push
push
jp
rorb
jnp
movhps
scas
lret
lret
gs
mov
add
stc
cmp
test
cmp
inc
adc
sbbl
add
xchg
inc
iret
stos
add
lods
cmp
push
and
sub
add
mov
push
pop
or
inc
jp
xchg
sub
jg
mov
jg
mov
push
and
imul
mov
sahf
mov
ds
lock
xor
xchg
xor
mov
xchg
xchg
inc
popa
jns
xor
xchg
sub
jge
bound
mov
repz
orps
mov
decl
sbb
pop
dec
inc
xchg
aad
popf
push
cmpl
pop
push
repz
mov
in
jg
pop
sbb
sub
sub
push
mov
or
and
jo
and
or
mov
mov
xchg
pop
mov
das
sbb
push
insb
ret
inc
fimull
cvttps2pi
mov
sub
sbb
sub
xchg
cmpsb
fisubrl
loop,pt
and
mov
lds
and
sbb
lods
mov
jecxz
pop
push
leave
movb
push
mov
ffree
cmp
or
lcall
in
ds
add
hlt
in
xor
test
mov
or
sub
jo
cmp
xor
jp
push
jo
fisttpll
jne
or
xor
imul
sub
ror
add
xchg
or
xchg
icebp
jle
xchg
xorl
inc
push
repnz
andl
push
shl
fbld
cmc
push
jnp
pushf
or
pop
mov
mov
mov
fldl
mov
mov
negl
int
dec
out
jno
sahf
or
mov
dec
addr16
loope
shl
inc
add
dec
xchg
loop
lods
mov
call
out
or
jb
jns
repnz
out
or
inc
pop
into
jne
cmp
jnp
fwait
xor
out
jnp
repz
push
lcall
in
xor
xchg
out
mov
and
in
dec
iret
and
xchg
cmpb
in
popa
repz
mov
notb
les
out
and
stos
out
rol
in
mov
pop
mov
pop
insb
addr16
call
lret
cs
push
dec
sub
cmp
in
adc
movsl
pop
or
adc
enter
sub
stc
mov
ljmp
push
shrb
sub
push
ret
jne
add
pop
dec
insl
sarb
adc
fwait
inc
jmp
out
dec
or
iret
mov
mov
frstor
test
fcmovnb
mov
pop
mov
out
or
outsl
ljmp
insl
or
insl
scas
jmp
lea
mov
xchg
dec
loope
repnz
pop
push
push
jno
cmp
mov
clc
sbb
mov
out
mov
jno
xchg
xchg
iret
ds
jnp
push
dec
mov
xchg
insb
test
mov
or
push
jge
cmpsb
sti
inc
add
xor
scas
pminsw
cmc
cmp
test
dec
popa
mov
int
es
fs
mov
jl
cmp
cmpb
mov
inc
adc
es
jbe
mov
sbb
adcb
mov
xchg
xchg
enter
push
fs
arpl
pop
push
sbb
movb
std
insb
inc
lods
movsb
cli
add
push
adc
testb
leave
fimuls
in
lods
outsl
xchg
jg
bound
xchg
jecxz
sbb
xchg
jge
jmp
out
adc
lock
nop
push
popa
and
pop
out
or
std
cmc
pop
test
jo
and
stc
movsb
aam
cmp
mull
bound
test
daa
cld
xor
xor
mov
lret
dec
or
test
xchg
stc
add
xor
je
mov
dec
mov
jae
nop
fisttps
add
in
and
jo
subl
sbb
stc
jmp
nop
dec
ss
and
cwtl
cmp
pop
or
jge
fsubr
xchg
cmpsl
jb
divl
push
mov
sub
mov
or
lret
push
popa
cmp
mov
or
sbb
pop
xchg
mov
aas
pop
data16
lret
sub
adc
and
mov
adc
lret
jg
bound
outsb
xchg
dec
das
jecxz
adc
adc
enter
xchg
dec
shr
cmp
fisubl
push
ljmp
imul
push
jle
push
or
addr16
lret
add
stos
jno
sub
sub
xchg
enter
jecxz
inc
adc
jbe
lret
or
jg
loope
adc
out
imul
push
dec
pushf
pop
jecxz
ret
cmp
mov
les
jo
dec
into
subb
stos
enter
push
into
pop
aaa
lods
dec
jg
mov
mov
lcall
or
pop
stos
jmp
and
icebp
lcall
or
ljmp
jge
hlt
sbb
mov
cmp
mov
call
in
in
jbe
je
mov
add
icebp
add
cwtl
inc
xchg
or
out
and
arpl
xchg
add
loop
xor
fs
cwtl
and
or
lret
or
outsb
leave
adc
int
imul
cmp
dec
or
cmp
mov
cwtl
pop
fnstsw
sub
ret
xor
add
sbb
adc
fcompl
cli
or
mov
xor
adc
or
jb
hlt
cmp
ss
sbb
dec
jo
xchg
adc
cmp
add
add
je
stc
cltd
sbb
sub
push
fsubrl
addr16
movsb
into
loope
call
mov
mov
shl
jns
fwait
or
and
ds
out
cmc
inc
mov
or
enter
adc
jl
es
or
loop
loop
loop
clc
pop
add
inc
cs
aas
rcr
fptan
addr16
testl
lods
sbb
xchg
jg
mov
gs
fmuls
mov
mov
cmp
sbb
pop
add
outsl
ficomps
sbbb
mov
rcll
mov
or
stos
enter
xchg
cltd
ds
or
rclb
repnz
sbb
mov
inc
out
dec
lods
shl
ss
fwait
cmp
ljmp
adc
inc
loope
xor
cmp
mov
xor
sub
decl
out
inc
mov
xor
out
rorb
jg
int3
and
sbb
mov
in
push
cltd
push
lock
inc
sti
and
pop
jb
test
jge
add
dec
xor
dec
xor
js
repnz
out
rclb
ficomps
loopne
dec
popa
xor
mov
out
cs
jp
ljmp
pop
enter
fs
sti
insb
add
dec
jg
addr16
sub
test
adc
notl
fisttps
hlt
push
cmp
fistl
inc
out
adc
movsl
aaa
in
lods
fs
sbb
cmp
or
pop
jl
mov
jle
rolb
test
es
ficomps
dec
idiv
loop
pop
lea
or
push
sub
xchg
and
in
test
aas
stos
inc
mov
push
rcrl
repz
jno
test
outsb
adc
fdivl
jge
sbb
push
jnp
inc
xchg
sti
test
push
xchg
mov
sub
adc
mov
out
je
push
cmp
dec
mov
add
enter
int
sbb
xlat
add
mov
pop
mov
cld
xor
jnp
pop
and
push
gs
add
sti
mov
ss
or
js
cli
ljmp
lret
mov
fwait
leave
jb
daa
push
and
rclb
pop
xchg
mov
sub
adc
push
sbb
jne
test
and
scas
lret
rcrb
ret
shll
out
mov
xchg
sbb
push
mov
aaa
pusha
jbe
xor
mov
adc
mov
cs
pushf
jnp
and
jmp
inc
xlat
xor
cmpsb
xchg
imul
pop
stos
cli
adc
lahf
clc
es
sbb
or
add
adc
jecxz
sti
push
inc
jle
lret
push
push
mov
cmp
adc
shrb
mov
jge
out
cmp
pop
mov
out
outsl
testb
jg
cmpsl
mov
mov
adc
sbb
es
sub
mov
rcl
fimull
notl
pop
or
imul
mov
bound
movb
clc
adc
aas
inc
mov
jmp
fldcw
test
mov
cmp
mov
xchg
pop
pop
sbb
cmp
or
and
xchg
in
out
cmp
scas
lret
lods
dec
sbb
xor
lods
sbb
lcall
div
dec
push
cwtl
jecxz
pop
ret
push
cmp
or
pop
stc
add
mov
pop
mov
out
popf
sbb
mov
jnp
mov
sub
in
test
or
out
ret
xor
mov
xchg
jnp
jmp
mov
mov
jp
test
or
imul
and
cltd
outsb
pop
mov
das
out
push
outsb
adc
adc
fcmove
sbb
repnz
ss
or
and
aas
cmp
mov
mov
cli
xor
jmp
decl
outsl
mov
or
fbld
pop
jecxz
add
repz
sti
push
jg
cld
xor
ljmp
lcall
xchg
push
sub
and
out
das
xor
dec
add
mov
repnz
mov
pop
inc
jecxz
out
jo
repnz
xlat
mull
je
dec
xchg
lds
push
cmc
movsl
sub
repnz
lods
fwait
and
and
sub
cmp
sbb
sub
lret
cwtl
pop
add
add
lret
xor
xor
xor
fs
ret
lcall
inc
push
xorl
rorb
push
das
in
jp
xlat
in
pusha
lret
mov
dec
mov
mov
add
adc
sbb
cli
in
mov
push
or
test
pop
jecxz
mov
push
sbb
xchg
mov
inc
jl
jge
mov
sub
stos
movsl
insw
repz
cmpsb
mov
pop
ficompl
das
jl
jecxz
mov
test
out
lock
adc
sbb
cmovnp
lods
xor
xchg
outsl
test
jmp
mov
jo
jns
cmpsl
in
mov
addb
aam
sbb
jbe
xor
imul
mov
sbb
into
dec
push
sar
or
push
adcb
dec
add
push
in
or
icebp
ret
sub
fimull
cli
jae
push
inc
pushf
into
jns
ret
pop
cmpl
pop
push
aam
xchg
mov
xchg
ds
test
test
mov
push
sub
push
add
popa
add
inc
iret
adc
hlt
enter
push
negl
sbb
jo
in
xor
repnz
aas
negb
adcb
leave
or
inc
add
dec
icebp
mov
test
push
jg
inc
mov
aas
add
lret
or
push
shlb
lret
leave
xor
subl
inc
xor
sbb
cmp
pop
fisubl
and
shlb
cmp
mov
sarl
in
ljmp
pusha
adc
fadd
sbb
adc
in
mov
push
xchg
cmp
pop
sub
out
mov
sub
mov
sbb
and
inc
adc
mov
or
sub
xchg
push
loope
jmp
clc
rdpmc
inc
sti
das
push
fmuls
xor
adcl
popa
sub
test
nop
cmp
dec
push
xor
clc
push
xchg
test
ljmp
xor
popa
aam
pop
jb
icebp
movsb
or
add
aam
push
mov
dec
add
icebp
sahf
pavgw
push
stos
lcall
add
xor
add
add
xor
mov
adcl
pop
ror
add
in
xor
jnp
mov
dec
mov
dec
sbb
fldlg2
pop
in
sbb
xchg
pop
pop
jae
jl
push
shr
in
sub
dec
sub
or
fs
stc
dec
lret
or
jg
jl
out
scas
lret
mov
stc
je
test
test
add
fcomps
icebp
adc
hlt
repnz
out
stos
dec
cmp
adc
ja
mov
fs
addr16
and
icebp
cli
jge
push
sbb
dec
jg
sub
cmp
mov
je
or
ljmp
pop
mov
lock
xor
sub
jg
loope
mov
add
mov
outsb
mov
outsb
dec
xchg
ljmp
sub
adc
mov
ds
dec
xchg
lahf
fisttpl
je
xor
jmp
xor
inc
sub
rorl
push
inc
fwait
cli
lds
push
sub
xchg
out
and
inc
and
arpl
fidivs
jnp
outsb
ljmp
sub
jnp
sbb
jbe,pn
add
dec
testl
arpl
mov
sub
in
xchg
stos
adc
and
ds
inc
or
dec
popf
sahf
mov
fcmovbe
or
cmp
jnp
cltd
aaa
pop
cmp
jle
out
sbb
or
aaa
cmp
insb
stos
adc
jmp
xlat
xchg
or
jne
dec
icebp
cli
stos
std
push
inc
pop
fcompl
sub
dec
into
add
loop
nop
daa
out
mov
cmpsb
jnp
and
or
mov
xchg
imul
mov
pop
push
clc
mov
sbb
mov
sbb
mov
cmp
stos
or
xchg
cmc
aas
push
pop
adc
mov
mov
sti
sbb
or
sub
gs
inc
add
ret
push
xor
inc
push
subl
inc
data16
jle
xor
shl
and
call
insl
pop
or
add
inc
iret
add
pop
pop
mov
roll
and
in
dec
test
and
hlt
andl
jp
dec
adc
dec
stc
loop
add
idivb
sti
decb
and
pop
cld
jecxz
arpl
push
mov
inc
shll
jno
insb
orl
xorb
fwait
bound
adc
push
sub
inc
mov
mov
xor
mov
or
iret
hlt
fidivrl
pop
jbe
jmp
movsb
cld
add
mov
sub
xlat
lea
jne
fs
xlat
mov
stos
lock
das
fildl
cmp
mov
fisttpll
dec
pop
imul
or
mov
jg
add
mov
pop
cld
addr16
pop
add
push
fldcw
cmp
rcll
mov
out
sbb
in
js
int3
mov
jno
push
jp
mov
imul
rcrl
pop
sub
lahf
and
mov
push
outsb
push
cmc
adc
jg
test
movb
cld
lea
xor
xor
cmp
push
cltd
cmp
or
jnp
int
enter
sbb
pop
ljmp
subl
dec
lds
negb
pop
aas
sub
lea
cmp
aam
cmp
lods
cmpsb
or
jne
sti
and
aaa
shrb
mov
je
add
adc
sbb
xor
sbb
dec
ficoms
test
pop
out
popa
pop
mov
insl
mov
adc
loope
cld
cli
sbb
xor
cmp
andl
repnz
imul
dec
lret
or
lret
xchg
and
leave
push
push
mov
push
push
cmp
dec
inc
bound
jb
addl
mov
in
mov
and
adc
xor
and
clc
cs
sub
fdivrl
dec
sbb
inc
or
lods
push
les
cmp
scas
test
lock
ds
and
or
push
dec
je
aam
and
fsubrl
adc
divb
xor
pop
or
push
lock
jmp
mov
add
lret
sbb
cltd
js
int3
rolb
sub
fwait
cli
pusha
negl
mov
cli
pop
cmp
adc
js
cmp
jmp
hlt
repz
test
pop
stos
xor
mov
inc
xchg
cltd
sbb
ficoml
sbb
ror
xchg
sbb
arpl
out
inc
push
setb
out
mov
pushf
icebp
cmp
xchg
pop
insb
mov
mov
xchg
jecxz
outsl
daa
jmp
test
dec
je
adc
mov
xchg
js
inc
push
push
inc
in
fs
cmp
jnp
dec
adc
mov
xor
into
ror
cmp
addb
adc
fsubp
mov
outsl
cmp
rep
jle
mov
mov
cmp
mov
add
or
fsub
sub
add
outsl
adc
push
jg
and
sbb
jns
aaa
ss
mov
out
imul
in
dec
or
int
insl
push
mov
loopne
add
push
pusha
fwait
out
xor
xchg
stc
lret
nop
dec
data16
cmpsb
pop
dec
jecxz
mov
ficoms
dec
or
scas
std
dec
imulb
mov
sbb
or
and
push
bound
xor
out
arpl
das
or
cmp
les
test
cmp
lods
sti
aad
in
int
sbb
nop
orl
movsl
fwait
test
add
popf
negb
int
xor
mov
mov
out
xchg
mov
sub
mov
dec
jg
sbb
xor
adc
mov
jnp
push
pop
cmc
sbb
cld
stos
cli
lret
gs
pushf
jle
dec
mov
cmp
testl
inc
dec
jl
fcomps
fstl
pushf
repz
jnp
cld
call
enter
pop
lea
lock
pop
xchg
insl
andb
pushf
dec
pop
add
adc
jp
add
pop
mov
popf
jmp
jns
divb
dec
mov
out
cmp
jl
int
push
int3
mov
push
mov
xchg
test
hlt
insl
or
les
insb
icebp
cmp
inc
push
jg
dec
jecxz,pt
cli
jecxz
xlat
jmp
and
aad
and
in
data16
inc
xchg
subl
mov
mov
or
js
add
shlb
xchg
mov
mov
ss
call
cmpsb
scas
pop
inc
cs
mov
call
pop
xadd
out
pop
push
arpl
push
jne
jecxz
notl
xor
repnz
bound
inc
out
dec
cmp
xchg
in
aas
inc
inc
xchg
frstor
mov
enter
cld
outsl
mov
outsb
mov
pop
adc
int
ret
stos
pop
xor
imul
aas
out
lcall
mov
push
sbb
in
jnp
mov
pusha
ss
cld
insb
subb
or
mov
mov
and
xchg
stc
mov
mov
cmc
cmp
inc
or
mov
mov
mov
iret
xchg
add
out
pop
inc
xor
push
loop
stc
adc
xchg
ret
lds
pop
mov
int
repz
mov
cmpsl
sbb
cmpsb
adcl
cs
mov
clc
out
ror
push
cmp
leave
push
aaa
popa
sbb
data16
int3
cmp
sbb
movsb
mov
hlt
xchg
jp
xchg
xor
adc
sarb
jne
daa
pop
out
mov
sti
sbb
pop
popa
adc
sub
mov
mulb
push
cmpsb
ljmp
adc
adc
adc
repnz
in
aaa
mov
pop
ret
rcl
popa
imul
cmp
add
push
dec
push
xchg
inc
jne
dec
xchg
lahf
inc
js
push
shrd
inc
test
xor
xchg
or
cmpsl
mov
pop
cmp
jle
mov
push
push
or
jae
sbb
outsb
sahf
xchg
sbb
fdivrl
stos
or
outsb
pop
cs
push
mov
xor
xor
inc
outsb
jmp
ljmp
int
repnz
cs
das
or
dec
adc
add
in
daa
mov
mov
imul
imul
out
sub
rcl
cmp
sbb
mov
ret
movsl
lock
repnz
arpl
push
popa
aas
call
mov
pop
pop
or
push
xlat
in
shll
out
daa
outsb
adc
pop
jae
testb
or
rorb
cmp
fsqrt
jne
test
xchg
out
lock
pop
xchg
adc
hlt
pusha
jle
mov
add
lea
bound
ds
adc
or
push
xchg
ret
jge
sahf
stc
gs
cwtl
xor
mov
or
fs
push
dec
sbb
adc
ljmp
adc
mov
data16
rcll
shr
dec
dec
int
fsubrp
sbb
cmpsl
shrl
mov
mov
push
or
pop
adc
inc
pushf
push
push
cmp
std
ljmp
int
jb
mov
or
xchg
aad
arpl
outsb
sahf
cs
mov
cmp
fistpll
lods
jl
push
or
inc
adc
icebp
mov
sbb
inc
pop
or
mov
adc
lret
call
das
or
mov
xlat
xchg
outsb
loop
push
sbb
shlb
nop
pop
sbb
add
xor
cmp
xchg
push
hlt
jecxz
repz
pop
and
jb
ds
lret
data16
cmp
inc
sub
jb
je
cwtl
nop
jo
add
adc
in
ficompl
cmp
in
mov
lret
loop
rorb
cmpsl
sbb
cld
add
out
lcall
mov
dec
lock
enter
pusha
push
xor
push
mov
das
mov
sub
jbe
imul
jp
stos
gs
xor
out
sub
jmp
or
jmp
push
adc
mov
in
cwtl
mov
std
aas
outsl
cli
je
add
je
imul
rcrl
jg
sbb
sub
leave
mov
pushf
hlt
leave
pop
das
adc
and
rorl
and
ficompl
inc
addr16
inc
fistl
adcl
cltd
cmp
decl
nop
sbb
insw
xor
pop
cmp
fidivs
mov
out
addl
gs
mov
cld
test
popa
imul
cld
fs
sub
xchg
dec
mov
or
cmpsb
subl
mov
or
rolb
dec
shrb
jg
sub
rorl
xchg
mov
jnp
in
jns
sbb
xor
xchg
push
jp
fs
shll
dec
sbb
jmp
cmp
inc
gs
xchg
xchg
in
push
cltd
inc
xor
and
pushf
mov
xchg
dec
xor
sbb
mov
xchg
xor
gs
dec
jge
adc
push
xor
dec
out
add
or
inc
xchg
xlat
xlat
jns
iret
ja
mov
in
test
lock
jg
add
nop
jp
stc
dec
sbb
fmulp
jae
jecxz
sub
mov
aam
stos
pop
xor
mov
sub
ret
sub
lock
add
repz
das
outsl
aas
ljmp
int3
stc
mov
out
lock
idivl
sub
pop
xchg
jmp
sbb
pop
iret
cmc
int3
xor
or
push
cltd
iret
jo
xchg
pop
stc
push
jle
out
mov
jns
js
mov
gs
adc
movb
movsb
icebp
fisttpll
mov
pop
xchg
dec
es
and
jbe
xlat
mov
outsb
shrb
xor
in
test
fistpl
jecxz
mov
pop
into
xlat
inc
mov
fs
daa
pop
popa
mov
mov
push
out
dec
aas
or
jle
cltd
pop
data16
jp
adc
call
in
add
jmp
fs
bound
movsl
ljmp
mov
xor
stos
scas
stc
mov
xor
pop
or
mov
icebp
sti
movsb
mov
mov
mov
dec
mov
in
sub
mov
cmp
push
mov
call
fidivrl
mov
lret
repnz
sub
sbb
jne
enter
mov
inc
or
push
inc
imul
pop
dec
push
fisttps
jnp
add
sahf
adc
inc
lods
in
popa
cmp
xor
adc
sarb
fisttpl
pop
out
cli
andl
repnz
fistl
mov
aam
xlat
mov
std
sub
pop
dec
xchg
mov
mov
mov
cli
jmp
mov
data16
cli
ja
mov
sbb
aaa
mov
cmpsl
mov
jnp
dec
or
pop
shrb
mov
jle
adc
es
cmpl
fsubl
jmp
lcall
test
and
inc
pop
in
sarl
adc
ret
movl
cmp
das
push
pop
pop
out
inc
push
and
incb
fdiv
mov
cmp
lret
mov
mov
jbe
mov
add
jo
xor
adc
pop
or
add
mov
pop
jmp
or
jno
out
jb
jmp
out
sub
mov
push
pop
sub
pop
jmp
or
ss
test
pop
sbb
aam
jae
or
into
xchg
cmp
sbb
orl
mov
jnp
or
and
dec
inc
repnz
dec
pop
mov
push
jg
ljmp
mov
lods
mov
ja
repnz
push
jb
adc
dec
adc
pop
je
mov
test
mov
sar
repz
xchg
cli
xchg
aad
mov
pushf
mov
or
or
jle
cmp
mov
add
popf
dec
adc
jb
out
or
mov
stos
out
rcll
or
jae,pt
add
loopne
xor
loope
mov
add
pop
pminsw
cwtl
pop
jge
scas
pop
movsl
mov
pop
jl
inc
add
mov
jecxz
adc
or
rcll
mov
mov
dec
fisubrl
inc
idivb
sbb
mov
jmp
decl
mov
jle
xor
mov
push
out
cli
xchg
test
arpl
xor
popa
rclb
xchg
and
pop
cmc
sbb
imull
sbb
inc
sub
popf
loope
pop
test
add
rcrb
mov
cmp
cmp
xchg
outsb
gs
and
jne
adc
imul
ds
push
outsl
lock
cmp
enter
lock
or
out
or
cmpsb
pop
push
sahf
jmp
jmp
out
or
sbb
pop
or
xchg
iret
cmovae
lcall
repz
or
test
push
sbb
fnsave
mov
and
pop
cmp
cmp
mov
call
sti
mov
test
pop
inc
sub
aaa
out
das
push
xor
arpl
mov
cmpsb
and
test
mov
enter
fistps
xchg
adcb
jb
cmp
nop
mov
in
and
mov
call
mov
xor
fcmovu
sub
adc
mov
jmp
lods
clc
adc
fstpt
dec
pop
and
dec
pushf
sahf
imul
or
shll
sahf
call
mov
fs
aas
shrb
cmpsb
std
jb
mov
daa
les
push
rorl
inc
cmpsb
mov
scas
out
xchg
xor
cmp
jl
mov
sbbb
ja
jnp
cmpsb
insl
and
pop
xor
arpl
push
cltd
push
je
and
sahf
or
fldcw
out
mov
shrl
mov
mov
xor
jo
xlat
addb
je
cmp
jb
test
sub
and
push
or
cmp
scas
adc
jmp
lds
fnstenv
mov
or
xor
stos
sar
hlt
int3
ja
jae
ds
test
lods
jnp
xor
jbe
test
stc
shlb
cmp
test
lret
mov
adc
jmp
adc
fistpl
stos
dec
leave
sahf
pop
jp
cmp
push
dec
addb
cmp
imul
shll
add
out
gs
repz
jge
jae
pop
testl
ret
fnstenv
stc
and
push
clc
out
pop
clc
mov
lock
ljmp
call
or
mov
or
testb
fs
sub
cli
sub
inc
dec
aaa
add
and
fmuls
sub
inc
pop
mov
mov
push
sub
lret
flds
or
adc
gs
sub
aaa
daa
inc
test
pop
pop
scas
jns
or
cmp
cli
jns
cs
ss
mov
sub
xlat
inc
sub
cmpsb
sbb
and
push
mov
jae
mov
xchg
inc
mov
xchg
jle
pusha
sbb
repnz
mov
cmovle
stos
and
out
push
fninit
sub
push
mov
pop
ljmp
lods
xor
xor
gs
sub
fs
iret
les
cwtl
cmp
push
add
or
or
ja
shll
jge
ss
mull
inc
xor
jns
pop
dec
push
or
or
gs
cld
mov
pop
orl
mov
idiv
test
mov
hlt
sub
xor
cmp
or
jae
jg
lcall
push
push
mov
lea
testl
stc
mov
jo
pop
jo
ljmp
cmpsb
arpl
out
push
cmpb
xchg
shl
xchg
jp
mov
iret
inc
popf
xchg
pop
aam
or
les
mov
jl
push
cmp
lcall
out
push
lods
rorb
test
movsl
test
inc
jnp
xchg
mov
mov
daa
mov
dec
jbe
sub
hlt
orb
je
decl
subb
sbb
xchg
stos
mov
arpl
sub
aas
mov
pop
and
mov
pop
cmp
cmp
daa
push
sbb
mov
mov
jnp
shlb
loop
sub
pop
push
mov
orl
or
xchg
push
cli
cli
and
mov
cmpsb
add
xor
ret
test
dec
in
shr
mov
push
adc
inc
popa
jo
xor
inc
lret
in
aad
out
ljmp
fimull
push
arpl
or
cli
lock
or
aas
leave
adc
addr16
test
in
mov
xchg
scas
xor
test
cmp
mov
icebp
imull
std
in
sub
test
cs
xor
loopw
lock
pop
ficoml
push
cli
xchg
aas
lods
repnz
jne
xor
xchg
loope
aad
mov
test
mov
cs
inc
les
jl
sub
loope
cltd
dec
xchg
sub
dec
push
adc
sub
mov
jp
push
gs
cmp
int
popa
lea
sbb
mov
push
lahf
shl
xor
ret
adc
or
ljmp
cli
sub
sbb
cs
cltd
xchg
or
jnp
subl
xor
in
inc
mov
ljmp
fistl
mov
outsl
dec
subl
sahf
xchg
xchg
outsb
mov
xor
and
push
mov
or
test
mov
bt
jae
idivl
jbe
sub
adcb
inc
push
sub
pop
mov
cs
mov
push
ds
mov
or
cld
jmp
or
sub
imul
not
into
out
out
pop
in
mov
out
pop
jge
mov
or
jp
outsl
rorb
gs
dec
xor
cli
dec
xor
dec
incb
mov
test
decb
cmp
cmc
cmp
shll
xlat
xor
outsl
dec
sub
mov
and
jno
mov
or
pop
testl
cmp
jno
jnp
xorl
jo
push
mov
movsb
fistpl
mov
pusha
lahf
push
push
cmpsl
mov
pop
xchg
repnz
pop
and
jb
push
pusha
movsb
xchg
aas
ja
loop
clc
xor
mov
test
push
out
bnd
pop
call
dec
popa
mov
xor
in
fsubr
add
out
push
leave
cld
iret
xor
stc
sbb
movsl
testb
sub
call
jg
xor
cmp
sub
sbb
jp
je
mov
adc
lods
sub
xchg
fsubrl
or
call
sbb
ljmp
shrb
scas
fstp
cmc
enter
aad
inc
or
inc
ljmp
sbb
daa
lret
cmpsb
jmp
and
movsb
incb
mov
push
inc
neg
add
xchg
cltd
clc
mov
fstpt
mov
push
mov
mov
out
cli
or
add
into
or
mov
sub
mov
nop
repz
repz
popa
testl
mov
lds
insb
test
insb
cmpsl
inc
stos
ror
ret
add
lret
push
popl
push
out
mov
cli
ss
cmovnp
arpl
pop
cli
mov
mov
popa
fcompl
mov
in
adc
subb
mov
shrl
push
xorl
xor
shlb
js
dec
jb
leave
imull
lods
mov
daa
and
scas
mov
add
shrb
jo
out
jecxz
ljmp
lea
nop
adc
stc
cmpsb
sbb
sub
cmp
repnz
into
test
clc
lea
inc
dec
cld
repz
test
or
xlat
aad
or
xor
sbb
xchg
call
and
fcompl
stos
mov
mov
xor
ja
fadds
cmp
lret
pop
adc
stc
cmpsb
cli
cwtl
mov
xchg
std
xor
or
and
addl
pop
jp
mov
adc
bound
pop
dec
stc
cs
pop
pop
dec
jmp
es
or
mov
rcr
loope
mov
adc
outsb
insl
xchg
movsb
sahf
pop
cmp
jge
pusha
add
lock
xor
push
jns
mov
popa
and
lret
jns
outsl
pop
mov
inc
mov
xor
jl
cmpsb
fbld
outsb
fs
insl
iret
cmpb
outsb
xchg
fsubr
dec
dec
cli
push
ds
cli
inc
jmp
cli
push
ficoms
cmp
and
push
test
and
adc
xor
sbb
and
fnstcw
in
je
mov
push
pop
mov
pop
push
repnz
mov
mov
pop
or
lods
mulb
lock
push
mov
ss
mov
cli
push
pop
scas
bnd
movsl
js
push
stos
jno
rolb
ret
pop
sbb
xchg
popf
inc
lds
repnz
push
dec
cwtl
stos
scas
cs
add
bound
ss
push
jo
xchg
int
cs
nop
jg
adc
dec
pop
out
cmpsb
dec
cmp
sbb
sub
push
sub
dec
push
xor
pushw
add
or
fs
cmc
dec
add
inc
pop
pavgw
push
imul
and
psubw
xor
js
cli
daa
out
pop
icebp
out
sub
xor
cmp
xor
js
fisttpl
mov
repz
xchg
push
add
dec
pop
or
lea
inc
ljmp
je
adc
push
mov
in
or
mov
out
dec
decb
cli
dec
push
mov
iret
jbe
fwait
ds
es
clc
xchg
loop
loop
inc
sti
mov
xchg
cmp
cmp
nop
in
scas
imul
lea
ret
mov
lret
or
or
dec
ljmp
arpl
or
mov
inc
adc
mov
push
into
or
mull
clc
call
jns
int3
ret
lcall
pop
sbb
pop
stos
pop
or
or
mov
jnp
scas
sbb
sbb
inc
lods
cld
dec
mov
mov
cli
adc
stc
mov
in
sub
sub
push
mov
cmp
jp
lea
push
cmp
jmp
adc
or
nop
jbe
xchg
and
cmp
push
adc
cmp
add
mov
and
push
mov
cmp
aaa
pop
imul
repz
movsb
cmc
adc
das
push
adc
pop
movsb
mov
lret
in
insb
sbb
daa
ja
ss
mov
xchg
mov
ret
mov
inc
mov
mov
out
jmp
ljmp
out
or
sarb
sbb
sarb
arpl
inc
rcll
pop
out
stc
jmp
insl
cld
ss
loop
imul
push
ret
or
mov
ljmp
andl
sbb
fsubl
or
inc
xchg
sarb
js
jmp
out
pop
sbb
aad
and
inc
addr16
jne
jle
out
dec
insb
xchg
xchg
outsl
or
call
mov
fs
cmc
mov
jg
sbb
lods
lahf
in
mov
stos
lods
aad
xchg
adc
out
mov
fs
jne
mov
daa
sbb
sub
in
repz
and
adc
int
sbb
lea
xor
enter
inc
dec
ret
sub
add
loop
push
leave
adc
jne
ljmp
jp
inc
mov
push
idivl
or
insb
or
jle
rolb
xchg
inc
pop
jbe
push
mov
leave
and
fnstenv
jmp
jecxz
fimull
insb
sbb
cmp
mov
test
or
test
mov
movsl
jl
aaa
adc
sbb
sbb
xchg
movsb
pop
sbb
jbe
and
add
gs
or
ja
fisubs
cmp
sbb
mov
out
insl
mov
call
in
mov
pop
pop
xor
cmpl
xor
sub
cmp
dec
pop
and
out
divb
ljmp
ljmp
adc
cmp
lret
out
aad
push
mov
mov
in
sbb
test
out
out
sbb
ljmp
xor
scas
mov
inc
rcrb
repz
repnz
stos
cwtl
mov
decl
jns
push
jge
call
and
sub
sets
adc
lret
stos
gs
ljmp
push
add
jecxz
xchg
add
test
sbb
sbb
xor
pop
xor
xchg
adc
mov
add
ret
fwait
imul
in
mov
pop
cmpsb
mov
push
mov
sbb
in
insb
or
ljmp
mov
inc
insl
push
add
push
xor
bound
aaa
loopne
aaa
sbb
loope
xchg
and
je
fisubrs
dec
stc
mov
daa
sub
sbb
lock
or
sub
stos
xor
mov
inc
dec
out
lds
jg
mov
scas
push
inc
mov
dec
add
xor
mov
dec
aas
scas
lret
ljmp
iret
push
pop
cmc
out
sbb
xor
dec
xchg
xchg
inc
call
jbe
lret
arpl
mov
add
jg
movsb
scas
sub
mov
inc
lods
ret
mov
stos
push
sub
mov
xor
popa
cmp
or
aam
ret
fs
jno
inc
mov
roll
xchg
test
test
stos
mov
int3
dec
or
out
cmp
push
mov
daa
mov
cmp
mov
xchg
mov
inc
mov
mov
addr16
pop
jnp
arpl
test
cmp
sbbl
or
and
js
scas
aas
cmpsb
leave
pop
out
xor
testb
out
pop
iret
jl
arpl
cmp
pop
insb
int3
inc
ljmp
adc
jp
and
pop
sub
dec
loop
shl
aam
cwtl
adc
or
xchg
repz
and
xor
xchg
and
xchg
mov
dec
sbb
hlt
fisubs
gs
jmp
std
and
lret
add
insb
aaa
lcall
fmulp
cs
jmp
inc
lods
dec
fisttpl
dec
sub
add
xor
jg
or
ficompl
or
mov
mov
call
xlat
xor
push
fistps
scas
mov
mov
cmp
xchg
ljmp
sbb
leave
cwtl
push
movsb
sub
dec
mov
push
dec
pop
imul
adc
stos
mov
sahf
jnp
inc
test
cli
mov
icebp
cmpsb
popa
jo
xlat
mov
sub
or
push
pop
sub
or
mov
iret
jmp
fldt
adc
cmp
jo
jecxz
ja
pop
gs
mov
clc
mov
test
test
ret
mov
lock
lea
mov
ss
mov
repnz
cmc
cwtl
add
mov
out
sti
notb
sub
jge
ss
mov
lret
sbb
sbb
jecxz
pop
jmp
push
cld
and
lea
adc
mov
pop
in
pop
repnz
mov
pop
aaa
shl
in
fmull
push
aaa
inc
xchg
push
xor
pop
push
xor
push
hlt
call
imul
xor
fistpl
pushf
add
or
mov
in
xchg
and
lea
cmpsb
cmp
cld
jge
les
cltd
jp
ret
sub
fldt
das
jmp
stos
and
inc
movsb
fwait
and
lret
xchg
push
out
scas
clc
and
mov
cmp
mov
sub
mov
and
sub
out
ss
mov
ljmp
or
mov
scas
jo
mul
dec
or
pop
jg,pn
sbb
arpl
push
scas
jg
lea
int
mov
daa
xchg
inc
in
lds
std
fs
jae
int
push
stc
scas
or
imul
cltd
fucomip
add
push
shrl
mov
rcl
jnp
dec
sub
stos
sbb
push
xchg
xor
arpl
leave
mov
clc
loopne
inc
repnz
dec
lcall
sbb
inc
insb
jo
test
dec
mov
imul
inc
push
adc
fistpll
push
xchg
lock
ljmp
sbb
in
rol
mov
cmpsb
stos
popa
fstpt
ss
mov
mov
bound
lea
jg
fnstcw
push
int
test
sub
or
push
cli
jmp
in
sbb
adc
adcb
test
test
and
cs
or
ljmp
inc
sti
mov
in
in
sbb
pushf
insl
idivb
push
and
mov
pop
adc
pop
pusha
movsl
pop
sbb
icebp
jo
mov
dec
popf
cli
xchg
dec
mov
lea
adc
sti
sbb
mov
lret
push
aas
jmp
out
lret
stc
pop
pop
or
popa
jp
pop
shr
sbb
cli
loope
ret
sub
cwtl
jmp
cmp
cmc
xchg
pushf
icebp
lret
lea
dec
rclb
add
mov
sarl
ja
mov
out
stos
push
inc
leave
std
dec
dec
test
imul
lahf
pop
shll
sbb
pusha
les
push
mull
ret
dec
in
cli
fistpll
nop
xchg
inc
jle
inc
mov
pop
add
ror
test
ljmp
sbb
clc
mov
fwait
add
scas
dec
cmp
lods
std
adc
and
inc
fidivrl
out
mov
push
pop
pop
es
mov
idivl
int3
mov
cmp
repz
popf
mov
mull
mov
push
test
iret
loope
fwait
adc
loop
sub
ret
sub
sub
or
icebp
ja
loope
out
adcb
enter
pop
pop
inc
pop
testl
add
pop
inc
push
ljmp
xor
mov
pop
jns
scas
cmc
push
inc
lcall
mov
and
xlat
inc
xor
pop
fstps
js
add
ds
fistpll
int3
pop
das
inc
call
lock
aaa
js
mov
jecxz
or
add
notl
and
cli
in
loopne
push
mov
lret
mov
or
xchg
mov
fs
jg
adc
and
hlt
sbb
fs
cmp
push
jb
xlat
popf
push
sbb
lret
ljmp
jb
dec
dec
arpl
mov
das
push
std
imul
jecxz
aam
xor
adc
lods
jge
stos
popa
pop
push
jmp
or
or
clc
movsb
xor
pop
jmp
cmc
inc
idivb
sbb
fisubs
jb
or
into
fld
mov
in
cltd
add
sbb
mov
or
in
xlat
mov
loope
cs
xlat
fs
stc
ds
pop
or
fdivp
push
and
push
add
jbe
and
dec
pop
imul
xchg
and
adc
cwtl
iret
cli
clc
pop
lea
and
adc
lcall
pop
jb
jmp
dec
daa
adc
cwtl
push
lea
nop
enter
sub
mov
add
std
icebp
mov
test
xor
xchg
fldenv
or
cmc
mov
addr16
repnz
push
add
insl
xchg
cmp
mov
insl
stos
sub
int3
stos
and
inc
pop
add
rorb
and
adc
mov
or
mov
mov
and
mov
je
inc
mov
mov
pop
imull
sub
ficomps
mov
rorl
lds
fiaddl
cmpsb
mov
inc
lock
sar
xchg
xchg
les
sub
sbb
insb
ja
outsb
sub
lea
arpl
sub
add
sbb
imulb
pushl
push
imul
pop
fwait
leave
inc
mov
mov
rorb
jbe
pop
stos
clc
mov
cltd
sti
inc
and
adc
inc
movsb
in
in
cmp
divl
dec
out
insb
rorb
xchg
mov
in
mov
cmp
cs
add
in
push
xlat
orb
sub
imul
insl
int3
imul
or
add
xchg
leave
sahf
shr
mov
cli
fisttpl
bound
dec
out
enter
push
call
sub
add
mov
adc
or
adc
popa
jb
sbb
mov
lea
scas
sbb
test
push
arpl
in
enter
pop
jbe
ljmp
or
or
loop
ss
pop
arpl
inc
sub
sub
js
or
into
mov
inc
mov
imul
inc
cmc
pusha
jl
cmp
xchg
hlt
sar
mov
sarb
sahf
or
adc
xor
jecxz
mov
leave
hlt
inc
daa
xor
clc
push
jmp
das
or
cs
rorb
jle
xor
aad
mov
and
mov
push
ljmp
jns
test
inc
cli
cltd
and
adc
clc
adc
cmp
jo
insl
in
xchg
fdivrl
pusha
mov
push
pop
push
jns
icebp
dec
lea
lock
lret
call
pop
push
xor
push
or
or
xor
into
jnp
sub
or
pop
pushf
cmpsl
out
popa
cs
lods
stos
inc
inc
mov
lods
sub
or
imul
and
add
das
rcll
fcomps
dec
cmp
dec
div
inc
sbb
fsubrl
leave
shlb
fsubrs
jnp
pop
dec
cmp
scas
lods
xor
into
jnp
fcomi
inc
push
add
repz
push
aam
cmp
add
sub
add
push
lock
mov
pop
fnop
inc
adc
xchg
gs
cmpsb
mov
sbb
push
leave
movsb
je
push
aad
fistps
pop
adc
adc
ret
mov
adcl
or
add
jo
inc
cmc
shll
jg
testb
mov
mov
roll
in
or
xchg
loope
mov
sti
pop
fildl
dec
hlt
pop
mov
pop
or
fisttpl
imul
xchg
xor
xlat
add
pop
xchg
jg
movsb
outsb
jns
cmp
subb
or
xchg
cmp
xchg
cld
xor
jnp
add
push
cmp
das
push
outsb
cld
jnp
xchg
or
scas
jmp
pushf
jbe
lcall
scas
sub
push
mov
sahf
cmpsl
mov
addr16
jle
inc
mov
cs
adc
sbb
pop
inc
mov
or
clc
mov
mov
les
push
sbb
mov
pop
mov
xchg
xor
jne
and
cmp
pop
js,pn
push
shlb
fdivl
mov
sbb
add
lret
fdivs
sub
sbb
pusha
addb
mov
lea
inc
jle
pop
stos
mov
shl
incb
dec
inc
push
lea
fcompl
xlat
mov
pusha
jb
int
dec
scas
cmp
cmp
jle
rclb
test
xor
scas
lret
dec
pop
or
mov
aaa
lea
jb
test
fs
or
imul
cmpsl
das
insb
pop
dec
fists
xchg
ljmp
repnz
movsb
aaa
push
sbb
dec
dec
and
or
repnz
lret
adc
push
sar
push
ret
dec
ret
adc
repnz
insb
cwtl
test
or
aas
out
or
push
and
pop
lods
pop
popa
and
in
push
ficomps
cltd
mov
mov
sahf
mov
cmp
add
sub
mov
sarl
dec
sbb
cmp
ss
pop
fmuls
imul
inc
lret
jge
or
mov
fisttpll
inc
fcmovnu
push
fnsave
mov
adc
out
call
popa
pop
bound
xor
jnp
mov
lcall
adc
push
mov
sbb
xchg
push
dec
cmp
dec
out
or
loop
scas
mov
pop
xor
or
fmulp
push
icebp
ljmp
pop
jo
clc
pop
pop
lea
push
call
iret
outsl
sar
orb
xchg
mov
cmp
xor
inc
lcall
dec
cmp
clc
cmp
mov
push
or
cmpsb
xor
test
push
stos
dec
stc
add
pop
mov
icebp
jmp
jge
xlat
mov
cmp
mov
sub
adc
xorb
imul
xor
push
jb
lret
push
add
out
push
je
jg
jmp
not
jecxz
stc
jl
lea
iret
sti
rcrl
outsb
fucomi
adc
gs
sbb
xor
pop
xchg
fisubrl
add
push
adc
imul
lods
mov
fidivs
sbb
sbb
cmp
aad
mov
repnz
mov
adc
inc
xor
das
ret
dec
cmpl
in
push
cmp
testl
mov
cmp
xchg
rclb
movl
cmp
cmp
lahf
shlb
cmp
mov
sbb
pushw
mov
xchg
cmpsl
push
lock
xchg
mov
bound
pop
repnz
inc
and
push
add
cld
inc
mov
es
insl
adc
or
cmp
mov
out
or
cmp
jg,pt
out
mov
arpl
sub
stc
cmp
and
pop
push
scas
sub
lret
mov
outsb
mov
sbb
stos
je
mov
cli
xchg
shlb
ds
popf
clc
ljmp
lea
leave
gs
shll
lret
cmp
clc
daa
sub
sti
cmpl
xchg
add
sbb
or
mov
dec
adc
mov
out
cld
or
or
testb
cs
xchg
imul
repnz
push
in
pop
and
stos
div
or
clc
pop
fimull
jl
stos
popf
push
pop
xchg
mov
cmp
movsb
je
jp
data16
js
mov
cmp
ja
fcomps
sahf
cmc
out
cld
scas
jle
push
pushf
adc
add
stc
fildll
lcall
es
out
inc
pop
jb
push
xchg
sahf
xor
ja
push
js
cmp
fidivs
adc
jmp
xchg
mov
pop
dec
mov
xchg
sbb
lock
aas
xor
sbb
jecxz
or
test
outsl
pop
push
fnstsw
sti
rcrl
out
jo
mov
push
aaa
push
test
pop
mov
add
or
cmp
pop
and
or
in
jg
push
inc
fdivs
push
test
push
push
cmp
push
adc
adc
test
pop
lods
xchg
lods
mov
sub
jg
xchg
cmp
pop
jle
es
cmp
xor
mov
popf
dec
xlat
lods
xlat
xor
addl
jp
push
jecxz
dec
jp
js
aaa
mov
repz
xchg
fwait
int
cmpl
jnp
pop
xorl
cmpsb
fidivrs
hlt
jo
pop
ret
into
dec
xchg
faddl
add
ret
push
js
cli
xor
sbb
add
icebp
popa
dec
test
xor
ret
mov
xor
xlat
das
mov
in
push
dec
mov
mov
test
xchg
cmc
add
ficomps
outsb
sbb
jno
test
jae
dec
enter
pop
xchg
mov
mov
pop
movsl
cmp
aas
mov
iret
add
leave
adc
mov
hlt
rep
popa
xor
cld
adc
pop
jne
imul
out
jmp
pushf
lods
ljmp
repnz
cmp
xor
test
mov
les
aaa
imul
sub
or
cmpsl
mov
jl
gs
dec
push
jmp
cmp
cmp
mov
insb
cmp
les
mov
inc
leave
lea
or
mov
addr16
pop
sub
mov
push
in
xor
dec
inc
jmp
push
pop
inc
mov
arpl
cmp
pop
scas
sbb
into
rcrb
negl
sbb
ss
inc
outsb
inc
sbb
mov
cmp
pop
imull
lods
or
arpl
cwtl
repnz
imul
icebp
lods
mov
idivl
jae
cmp
sbb
cmp
jns
dec
enter
jg
gs
inc
call
loopne
xor
into
pop
push
outsl
aaa
lea
and
xchg
jo
cmpsb
dec
fidivl
xor
push
in
inc
mov
test
call
xor
ljmp
jmp
inc
fcmovbe
dec
aas
outsb
in
pop
lahf
xor
lea
imul
mov
sbb
sbb
cs
sub
cli
cmpb
mov
mov
lcall
adc
dec
int
adc
cmp
idiv
imulb
sub
fistpll
cmpsb
and
in
repz
idivb
or
pop
adc
jg
js
push
movsb
mov
adc
pop
aaa
push
mov
pop
add
ret
mov
add
dec
mov
out
loop
inc
cmpl
sub
in
mov
pop
sbb
pop
js
and
lea
in
push
addr16
scas
xor
and
popa
icebp
pop
cmp
ljmp
xor
lret
lret
or
xchg
xor
add
ljmp
mov
in
les
xchg
test
rol
loopne
rclb
stos
xor
inc
jo
mov
into
xor
inc
dec
pop
cmp
call
xor
jne
mov
mov
or
sub
lahf
pushf
cmc
add
sbb
hlt
outsb
cli
cmp
xchg
push
mov
add
test
or
xchg
pop
mov
sbb
sub
mov
repnz
imul
in
dec
mov
or
cmp
push
shll
dec
das
lea
les
das
repz
out
leave
and
mov
mov
je
xchg
or
stos
or
cmp
addl
pop
jl
popf
and
jmp
push
lea
push
dec
inc
test
xchg
idivb
cmp
and
dec
lret
and
pop
idivl
xor
ljmp
shrl
mov
lret
jmp
inc
sbb
push
push
fisubrs
mov
sbb
in
sbb
mov
push
ljmp
ljmp
lods
adc
dec
movsl
mov
outsl
bnd
sub
dec
mov
pop
xchg
out
pop
mull
add
sub
out
mov
mov
test
mov
xlat
negl
aaa
orb
pop
fnstsw
dec
pop
in
decl
shlb
or
pop
iret
lock
mov
imul
push
ret
xor
push
cmc
pop
pop
pushf
sbb
jmp
int3
xchg
xor
fs
call
filds
rcll
sbb
xchg
outsl
sbb
lea
cmpsl
pop
mov
push
sub
add
addr16
add
ret
in
popa
or
addl
repz
dec
pop
push
test
daa
jl
psrld
jg
sbb
inc
mov
xchg
push
stos
dec
mov
adc
or
jl
clc
xchg
cltd
cwtl
cltd
mov
mov
push
fs
jp
xlat
stos
pop
cmp
mov
sub
inc
cmp
push
loop
push
jle
int
jp
lea
jno
add
cli
cmc
add
mov
clc
mov
lea
cltd
int
cmp
cltd
cmp
or
cmp
mov
leave
mov
cltd
pusha
inc
pop
or
arpl
fsts
cmp
sbb
mov
xchg
test
pop
insb
or
iret
lock
lods
popa
add
fisttpll
adc
ret
xlat
xchg
add
mov
repz
adc
and
inc
imul
mov
mov
pop
and
mov
cmp
or
rcr
xchg
inc
or
inc
lea
aaa
dec
das
jbe
jmp
mov
and
xor
mov
cmp
idivl
call
mov
fisttpll
mov
jo
push
fsubrp
inc
movsl
push
bound
scas
jns
jns
movsl
and
xchg
fnstsw
test
or
ret
push
and
mov
xchg
or
dec
or
insl
aas
jns
mov
mov
cld
mov
xor
mov
jne
cli
leave
xor
ljmp
aad
mov
ljmp
cmp
lret
in
pop
in
ret
jge
xor
popa
xchg
dec
adc
pusha
inc
mov
push
stc
cwtl
testb
inc
dec
aas
and
insb
fs
in
and
or
cmpsl
pop
add
lea
or
mov
repnz
push
inc
cwtl
xorl
aaa
fildl
sub
add
and
push
xchg
loop
into
arpl
inc
jne
dec
clc
push
push
xchg
imul
pop
jne
daa
xchg
scas
negb
add
dec
roll
push
jmp
mov
out
pushf
add
add
gs
xor
fs
pusha
cmpsb
inc
movsl
popa
rorb
pop
mov
cmp
push
popf
call
cmp
push
sbb
imul
mov
jecxz
cltd
mov
je
stc
dec
mov
negb
js
mov
int
and
orb
xor
xchg
inc
pop
fwait
xlat
adcb
out
sbb
repnz
lcall
jmp
pop
stc
cmpsb
push
xor
stc
adc
sub
int
cli
cmpsb
addb
out
sub
cmp
xor
jg
lea
das
jmp
pop
dec
push
mov
jp
iret
push
jno
push
cs
xor
shlb
lahf
sub
or
dec
outsl
sub
lret
leave
xor
push
xor
push
xchg
iret
jne
cli
cmpl
imul
add
imul
xor
test
in
out
test
inc
addl
adc
or
and
movsl
dec
rcr
iret
xchg
adc
ljmp
cmp
sub
dec
ljmp
pop
xor
cs
ss
cmp
fdiv
and
repnz
xchg
ss
lea
jnp
addr16
jle
sbb
aas
adc
cltd
xor
in
jo
xchg
add
or
popa
adc
fdivrl
cmp
or
cli
dec
cmp
stos
sub
lods
call
mov
jecxz
test
xor
cmp
push
out
stc
adc
ret
sub
and
aas
sub
arpl
inc
es
cmp
adc
or
pushf
push
jp
dec
out
xor
dec
push
or
lods
dec
sbb
imul
pushw
lret
es
cmpsb
mov
ljmp
push
imul
adc
fildll
mov
mov
fsub
call
xchg
mov
ss
push
push
cli
xor
aad
push
popf
lahf
push
fisttps
in
call
pusha
addl
add
addl
jne
out
sbb
ljmp
mov
mov
mov
mov
stos
in
stos
inc
jns
or
xor
daa
xchg
pop
jp
js
shll
fdivr
insb
xchg
xor
cmp
cmp
push
adc
lea
sbb
mov
pop
movsl
rcrb
mov
addl
mov
cmp
mov
js
pop
jb
pop
addr16
repz
mov
mov
pop
sbb
inc
out
lea
push
mov
pop
and
dec
stos
xchg
xor
in
push
sub
leave
enter
ficomps
les
inc
adc
mov
jo
jl
les
push
ja
stc
daa
stos
mov
dec
psrld
cmp
pop
mov
ds
jl
stc
push
push
lds
sbb
lea
push
push
fcomip
leave
jecxz
les
mov
adc
jp
hlt
pushf
test
or
jl
js
jg
or
icebp
push
mov
push
outsl
inc
notl
mov
sbb
mov
lock
es
fbld
mov
leave
stos
call
out
mov
cwtl
jae
mov
add
xchg
mov
lds
in
in
lret
sub
in
divb
ljmp
add
stos
cld
dec
pop
call
push
sahf
cli
jne
mov
mov
icebp
sti
scas
addl
pop
add
xchg
out
dec
mov
dec
mov
fisttps
add
or
aam
ljmp
inc
aaa
iret
push
dec
lods
inc
push
push
addr16
ss
or
lret
mov
shlb
jmp
sbb
in
fcmovu
xor
sub
daa
jg
push
and
xchg
pop
cmp
add
lea
scas
cli
add
rcll
fdivrs
mov
pop
adc
jbe
mov
mov
push
push
sub
ret
inc
inc
imul
xchg
jecxz
xor
sub
xchg
out
rcrl
inc
inc
js
mov
push
fistpll
add
sub
xchg
push
or
add
or
cmp
adc
arpl
push
jnp
addr16
out
push
adc
enter
fdivrs
cltd
push
jmp
or
mov
inc
jnp
out
mov
in
shll
adc
inc
or
aaa
dec
jg
int3
or
pop
aaa
out
add
mov
dec
add
cld
sbbl
pop
in
jle
push
mov
mov
js
mov
dec
imul
mov
cmp
sbb
or
int
push
push
push
push
loop
bound
xchg
inc
imul
shl
adc
mov
cmp
cltd
jo
into
cltd
shr
int3
int
call
aaa
cltd
or
mov
mov
pop
icebp
or
out
and
inc
pop
jb
in
xor
jmp
pop
jmp
xchg
mov
cwtl
push
mov
lock
gs
pop
mov
sahf
cli
movsl
subl
pop
and
jbe
scas
fldenv
xor
adc
dec
push
inc
imul
push
dec
pop
popf
jge
mov
imul
aas
sahf
mov
jno
insb
lea
ljmp
xor
ret
imul
and
mulb
hlt
pop
mov
push
adc
and
stc
icebp
repnz
pop
and
sbb
mov
dec
pop
negb
mov
adc
push
aam
rep
add
int3
cli
clc
xor
sbb
mov
push
push
mov
pop
movsl
sbb
mov
ds
and
aad
xor
test
push
imull
bound
or
xor
lret
mov
mov
mov
pop
pop
cmc
sbbl
or
aaa
cmp
jno
inc
lea
jl
push
inc
sbbl
iret
xchg
lea
dec
cmp
mov
das
inc
dec
sbb
shlb
rorl
push
das
imul
and
icebp
jle
dec
fucomp
cmpsl
push
cmp
into
cmpsb
out
mov
jle
lcall
jns
lret
or
into
cmpl
sbb
scas
enter
scas
mov
mov
mov
pop
or
dec
andb
out
mov
xchg
and
cmp
xor
jle
cli
mov
push
adc
jb
repnz
mov
cmpsb
stos
icebp
mov
out
xchg
or
mov
jne
pop
or
cld
mov
mov
add
jecxz
push
or
jne
ficoms
leave
ljmp
mov
fisubrs
cmp
and
push
xchg
in
out
js
inc
push
out
sbb
jae
push
or
aad
mov
adc
inc
jecxz
lods
in
ss
js
fisttps
cmpsl
and
jnp
and
mov
cmp
adc
popa
mov
imul
sub
dec
jno
imul
fcmovb
cltd
aas
mov
imul
outsl
in
pop
in
ret
jne
push
xor
mov
cmpsl
ljmp
in
mov
xchg
xchg
fisubl
jp
xchg
arpl
and
and
imul
jg
icebp
cmp
push
push
movsl
lds
rolb
sbb
or
pop
mov
or
ljmp
test
lock
pop
scas
sub
pushf
in
lock
cmp
xlat
mov
clc
popf
pop
mov
xor
aas
lret
cmpsb
icebp
mov
inc
pop
or
popa
adc
xchg
sbb
fs
cmp
dec
arpl
jge
loope
cwtl
shl
je
cmpsl
or
push
or
or
and
push
dec
shll
in
xor
cmpsb
dec
adc
lock
and
add
lea
test
mov
or
cli
xchg
mov
pop
imul
scas
leave
sbb
mov
inc
xchg
scas
cmp
jno
cmp
inc
imul
outsl
lahf
test
ljmp
aas
inc
pop
dec
xor
mov
aas
js
jo
incl
loop
cli
xchg
jo
test
mov
in
inc
leave
imul
jnp
push
test
xchg
push
scas
sbb
sbb
jb
push
xchg
push
xlat
mov
adc
std
outsl
add
mov
hlt
push
out
push
dec
call
push
xor
out
hlt
orl
cmp
adc
jp
or
aas
hlt
inc
lods
sahf
pop
popa
fnsave
cmp
out
loopne
fisttps
inc
or
faddl
mull
xor
dec
inc
ljmp
nop
or
jns
scas
inc
test
sbb
and
ret
lahf
cmp
stos
and
dec
ret
jp
shlb
mov
mov
cmpsb
pop
push
lea
jae
outsb
cmp
pusha
jb
lahf
lock
into
pop
rorb
pusha
inc
xchg
sub
aaa
imul
lea
aad
repnz
into
and
data16
cltd
cmp
mov
fs
les
push
xchg
lret
cli
cmc
sub
adc
scas
pop
cli
mov
jns
out
faddl
jne
and
and
fidivrs
lret
inc
cmp
jnp
dec
icebp
xchg
sahf
adc
jp
jg
orl
or
cs
orb
adc
cs
cli
in
mov
dec
push
push
or
jno
sahf
orb
cmp
repz
push
xor
fld
shlb
lea
out
leave
adc
mov
ja
out
les
or
out
xchg
repz
mov
int3
and
js
xchg
pusha
ffreep
adc
lahf
cmp
lahf
daa
mov
xor
daa
ret
push
mov
mov
div
xchg
mov
push
or
xor
xchg
rcl
outsb
std
lea
sahf
sub
add
ret
adc
mov
loop
xor
xor
out
pop
dec
cli
add
xchg
sti
fidivrs
mov
das
add
orl
cs
mov
add
cmc
push
lods
popf
mov
in
push
dec
lds
xor
jmp
bnd
jg
outsb
fistps
add
adc
jne
cmp
add
call
test
push
xchg
repnz
add
push
jae
gs
inc
push
scas
cmp
aas
lea
cmp
fstl
cmp
sub
cmc
mov
sub
cmpsb
out
scas
popa
mov
lea
xchg
or
mov
stos
xchg
xchg
push
jmp
jge
sbb
aaa
or
push
mov
push
push
sub
enter
add
jns
scas
ljmp
xchg
lods
aas
xorb
insl
jg
fwait
rcrl
inc
cmp
popa
xor
jns
repnz
xor
lds
or
mov
rolb
mov
mov
mov
push
out
adc
mov
cli
lcall
sbb
sub
add
sub
stos
push
ror
mov
mulb
in
mov
jo
mov
fmuls
cmpsb
and
cmpsb
out
jae
and
jmp
push
jbe
xchg
roll
push
cmp
push
xor
dec
sub
xor
xor
cmpsl
dec
test
jl
movsl
shlb
jns
dec
jnp
xchg
fstps
cmc
and
mov
add
arpl
arpl
mov
test
shl
testb
jno
ret
scas
lea
xchg
mov
popl
out
push
shlb
repnz
push
mov
add
imull
jbe
cmp
leave
push
xchg
mov
loopne
push
sub
pop
xor
aad
mov
lcall
xchg
cmp
fnstsw
ds
xlat
mov
ja
adc
iret
xchg
std
mov
dec
push
mov
lods
lea
outsb
pop
stos
fdivp
lret
push
inc
shll
gs
ret
pop
fs
out
jmp
das
icebp
xchg
cmp
out
dec
por
lea
cmp
sbb
push
mov
jb
negb
cmp
jmp
stos
popa
adc
pop
jl
aas
ljmp
xchg
enter
shlb
inc
xor
je
in
stc
xchg
cmp
push
int3
xor
mov
or
cmp
mull
test
cmp
ljmp
cmp
sti
or
std
lock
add
adc
sbb
movl
xchg
fsubr
pop
push
mov
cmpsb
leave
lea
push
inc
pop
push
push
mov
scas
in
cld
fcompl
mov
ret
dec
popa
int
movsb
cld
cld
addr16
ja
gs
mov
jno
stc
jo
mov
and
mov
stos
or
test
sbb
adc
lret
or
imul
push
cltd
cmp
inc
dec
call
lret
pop
dec
xor
ret
mov
inc
xor
imul
outsb
pop
sti
mov
dec
add
and
fldt
repz
jecxz
jns
inc
sub
jmp
jg
movsl
add
adc
pop
xor
aad
aad
sub
imul
sub
outsb
push
pop
push
push
gs
es
jnp
hlt
decl
pop
aad
lods
and
add
mov
cs
stos
adc
testb
lret
push
lock
seta
and
fs
repnz
scas
dec
and
jno
pop
dec
mov
jge
xchg
ret
dec
lret
sbb
rol
sti
inc
movsl
jb
leave
in
dec
ss
cltd
mov
sbb
dec
xor
arpl
cmp
int3
cli
test
int
inc
stos
shll
jbe
inc
out
mov
jg
jnp
xchg
add
jg
sbb
lea
adc
iret
sub
sbb
dec
in
jge
lods
orl
add
push
fsubl
add
imull
inc
mov
mov
mov
pop
sti
fs
pop
fisttps
jnp
mov
pop
xchg
xchg
mov
aas
push
mov
or
jns
outsb
adc
push
movsb
fwait
jnp
rorl
add
mov
mov
add
in
and
sub
repz
or
or
xor
loop
lahf
out
imul
fdiv
sub
icebp
test
lret
stos
out
mov
out
addl
mov
dec
cmp
sub
cmp
sbb
jmp
add
arpl
popa
cmpsl
mov
jmp
pop
icebp
fimull
add
das
mov
arpl
or
adc
xor
mov
enter
mov
jne
inc
and
pop
cmp
xchg
daa
xor
cmp
mov
mov
inc
and
addb
xchg
rorl
std
adc
add
mov
xor
out
dec
movsb
loop
add
pusha
mov
imul
test
addr16
cmp
xchg
add
cwtl
inc
outsl
inc
push
ja
prefetch
dec
mov
ja
ret
mov
push
mov
cltd
mov
or
test
psubsw
adcl
repz
mov
shrb
cli
push
or
xor
stos
adc
xor
pop
xchg
ljmp
popa
and
scas
imul
mov
test
push
and
test
fstps
or
mov
push
mov
in
test
xchg
divl
jns
fistl
mov
or
mov
gs
subb
and
mov
jae
insb
inc
mov
cwtl
mov
mov
sti
gs
xor
cmp
cs
pop
mov
testl
fisubrs
mov
inc
push
movsb
cs
divb
jne
int3
sub
mov
lea
ljmp
dec
jo
jecxz
mov
cmc
dec
dec
mov
das
mov
mov
mov
and
xor
scas
pop
jmp
dec
sub
inc
cmc
sub
shl
sub
cmp
xchg
mov
sbb
mulb
dec
in
pop
cmp
lret
add
int
leave
arpl
cmp
test
cmp
mulb
xor
ja
pop
cmp
negb
aaa
repnz
mov
repnz
sbb
in
mov
into
mov
mov
mov
aas
pop
cmpsl
scas
ja
popa
inc
in
push
adc
inc
xor
test
mov
inc
xor
fs
xor
mov
push
stos
imul
mov
gs
outsb
inc
add
pop
or
cltd
mov
fnstsw
push
nop
pop
lret
pop
sbb
cmc
mov
push
testb
sar
shrl
cmp
sbb
mov
outsl
paddusb
loopne
xor
loope
sti
ljmp
adc
popa
mov
aas
inc
mov
jle
adc
jge
je
outsb
sbb
pop
aaa
and
pop
stos
loop
pop
inc
and
gs
stc
into
movb
fmull
adc
repnz
fcmovnb
push
iret
jle
mov
mov
lahf
rcrb
pop
add
xor
mov
incb
out
jle
cli
sub
mov
fimull
shrl
push
mov
jae
dec
int
in
mov
data16
aaa
mov
repz
xchg
mov
mov
lret
testl
pop
add
addr16
push
jb
xchg
imul
scas
xor
and
push
add
out
out
shr
mov
mov
scas
in
and
ja
test
repnz
cmp
ds
scas
cmpl
push
mov
push
pop
idivb
sbb
push
int3
sbb
jg
cwtl
lea
or
push
das
jg
or
notb
add
ljmp
adc
or
ret
test
scas
adc
add
sbb
cli
sub
add
pop
push
mov
push
aaa
mov
sbb
fistpl
cmpsb
pop
movsb
sbb
call
pop
xor
stos
and
jmp
out
adc
mov
mov
stos
jecxz
inc
push
test
xchg
dec
movsb
iret
or
and
out
xor
mov
mov
sub
call
mov
loop
jne
out
mov
fidivrl
or
add
sbb
mov
mov
popf
in
jns
movsl
aas
push
sbb
out
loopne
je
stos
sbb
xchg
repz
in
mov
stos
push
mov
ficomps
movsb
push
cmpsl
mov
cmp
jo
adc
outsl
iret
dec
inc
dec
push
sub
inc
scas
popa
xor
xor
inc
test
call
adc
lock
jg
xor
in
sub
test
mov
out
jmp
jmp
cs
ja
leave
cmp
jae
ljmp
fnstenv
or
mov
sbb
out
cmpsb
jg
pop
mov
or
call
push
mov
inc
mov
adc
addr16
or
sbb
dec
add
xor
xchg
pusha
js
cmpsb
fistps
cltd
jmp
imull
mov
imul
sahf
jg
add
mov
test
xchg
lcall
pop
fmul
or
addl
shlb
lea
stos
pusha
fwait
lods
ficomps
mov
jmp
jnp
iret
xor
lahf
stc
mov
cli
out
mov
add
clc
sbb
mov
inc
adc
sbb
out
jp
out
adc
scas
loopne
lret
cmp
pusha
icebp
adc
pop
add
not
xchg
mov
cli
iret
mov
push
mov
sub
jecxz
sarb
adc
out
pop
fstpt
div
pop
sbbb
scas
inc
rcll
ret
ljmp
inc
cmp
or
and
adc
mov
loop
ss
insb
adc
icebp
mov
negb
and
push
mov
push
fmull
xor
or
int3
jge,pt
push
inc
out
inc
pop
xchg
pop
fistpl
pop
mov
pusha
mov
pop
inc
mov
jbe
mov
adc
scas
ds
push
out
jmp
mov
pop
outsl
fldl
or
test
mov
rcll
lcall
mov
fdivrs
cmp
jo
jle
adc
sub
push
cld
cmp
or
stos
jnp
xchg
mov
fsubrl
push
loope
stos
pop
lea
and
negl
cwtl
xchg
mov
mov
out
jl
mov
or
test
fsts
js
out
jne
pop
lret
pop
adc
add
mov
movsb
jg
xchg
je
pop
push
xlat
stos
mov
rol
adc
mov
test
bound
pop
das
mov
ret
addr16
or
jg
cmp
jns
mov
repnz
sub
sbb
imul
imul
fs
push
and
cmpsl
cmc
sarb
arpl
pop
mov
jbe
mov
pop
adc
popf
arpl
imul
xor
leave
imul
andl
int3
or
ljmp
inc
lods
xchg
cltd
test
imul
push
mov
divb
jae
cmp
mov
iret
jecxz
ret
fdivs
or
clc
pop
sti
push
push
iret
inc
push
dec
mov
sbb
pop
or
mov
jno
sbb
divl
fistpl
jmp
mov
pop
mov
aas
int
jg
fists
xor
fs
das
lret
fidivrl
xchg
or
sti
cli
shl
stos
in
outsl
shll
repnz
mov
add
mov
aaa
dec
sub
in
adc
out
pop
mov
cmp
xchg
adc
lock
stos
test
dec
push
hlt
lcall
sti
lods
push
adc
mov
lret
cltd
fnstsw
out
ret
pop
pushf
in
add
mov
fcmovbe
enter
sti
sbb
pop
and
stc
mov
jecxz
xchg
scas
test
scas
jbe
lcall
add
inc
xor
mov
cmpsb
and
sahf
mov
xchg
sub
push
fsubs
push
mov
dec
cmp
inc
cmp
adc
repnz
mov
outsl
dec
mov
jecxz
and
cmpsl
rcrb
out
fists
lea
dec
cmpsb
mov
ljmp
lret
sub
js
leave
and
push
and
cmp
data16
mov
in
adc
and
into
imul
mov
mov
mov
popa
and
hlt
lret
pop
jmp
dec
or
push
mov
test
andb
mov
or
xchg
xor
fiadds
push
mov
fmull
push
adc
sahf
dec
adc
dec
sbb
push
mov
or
dec
call
dec
js
inc
mov
jbe
mov
lods
xchg
outsb
test
push
adc
bound
adc
xor
pop
push
mov
cmp
adcb
aaa
mov
or
in
adc
in
scas
or
push
jns
and
sub
pop
mov
fimuls
stos
mov
cmp
and
fwait
and
sbb
mov
mov
mov
xor
clc
mov
jmp
mov
lock
shlb
das
sbb
jno
scas
imul
push
xchg
lods
inc
dec
jne
cmpsl
and
dec
adc
test
or
in
or
mov
imul
js
pop
jecxz
mov
or
pop
mov
pusha
pusha
test
or
or
add
xchg
jmp
loopne
test
sub
rcll
dec
or
xor
or
xchg
out
xor
xor
pop
mov
arpl
or
mov
test
aas
popa
push
mov
jmp
xchg
mov
pop
pop
movsb
jg
aas
aas
mov
clc
insl
in
jp
cwtl
xchg
cld
xor
roll
pop
xchg
mov
mov
out
or
mov
inc
mov
addr16
adc
test
push
ret
scas
fs
xor
out
pop
cmc
and
mov
push
mov
popa
out
ljmp
test
and
scas
fcmovnbe
xlat
insl
filds
sub
dec
popf
je
test
jnp
cmp
dec
lret
xchg
jb
ds
mov
dec
fsubrl
hlt
mov
jl
cld
dec
sub
rcrl
sbb
lret
jo
and
mov
and
sub
fwait
lods
into
cmp
mov
enter
xor
jp
add
dec
xchg
cmp
jmp
mov
dec
adc
sub
mov
dec
pop
imul
rclb
mov
sti
push
hlt
mov
lret
cmp
mov
sbb
movb
cs
shrl
lret
mov
pop
jmp
sub
out
push
rclb
out
repz
dec
and
outsb
sbb
xchg
adc
mov
mov
fcoml
pop
loop
mov
dec
fistps
add
cmc
scas
rcll
hlt
sbb
xchg
push
insl
bound
cmp
xor
inc
mov
popf
lds
loope
stos
in
or
sbb
call
mov
int3
or
adc
xchg
pop
jmp
js
mov
test
test
mov
es
imul
loop
pop
mov
test
xor
pop
push
fnstcw
or
aaa
imul
imul
aaa
stc
jl
outsl
je
pop
mov
pop
inc
jle
test
mov
or
es
sahf
lahf
push
ret
nop
push
popa
mov
cmp
popa
jae
ljmp
sbb
cmp
pusha
fwait
cmpsb
ja
jnp
cmp
jbe
lea
fmull
xor
add
push
popa
dec
pusha
scas
push
popa
leave
push
push
xor
cwtl
sub
aam
call
iret
repnz
dec
addl
pop
mov
push
testl
repz
jle
sub
push
fildll
fwait
add
push
and
int3
pop
andb
dec
dec
add
and
dec
repnz
and
shl
and
mov
ljmp
stc
pop
pop
sub
pop
bound
xor
cmp
es
cmpsb
or
test
jae
add
xchg
push
outsl
cli
cltd
mov
push
adc
dec
lock
or
inc
int
cmpsl
inc
cld
iret
or
test
ljmp
repz
lahf
cmc
inc
and
in
and
mov
mov
int
mov
adc
xor
pop
popa
cli
popf
movsl
mov
hlt
loopne
xor
pop
push
jge
aad
add
xchg
mov
pop
push
pop
ds
imul
jnp
or
and
cmp
jl
or
aas
in
dec
or
shll
xor
sub
frstor
jecxz
mov
jnp
cli
or
mov
push
icebp
or
movsb
fcmovu
cld
mull
or
movsb
cmp
adc
jge
jno
mov
inc
loop
xchg
push
add
lret
ljmp
iret
lea
aad
jae
dec
fcomip
push
out
inc
xchg
rclb
or
lods
seta
or
inc
xor
mov
in
inc
add
jb
pop
jbe
pop
mov
rclb
push
sub
mov
mov
cmp
outsb
pop
cwtl
lret
or
stc
dec
cmp
or
sbb
stos
mov
cmpb
scas
clc
out
xor
lcall
enter
inc
jae
loopne
scas
faddl
aas
push
out
adc
loopne
out
push
adc
in
jo
jns
out
mov
fnstcw
mov
gs
cltd
mov
rcll
fidivs
daa
push
scas
or
scas
jno
push
mov
and
ljmp
in
sbb
cmp
pusha
adc
dec
push
jecxz
shll
jg
aas
and
fsubrs
pop
inc
xchg
or
ljmp
jno
pushl
dec
popa
insl
cmp
test
pop
pop
aas
mov
jb
inc
lock
cld
mov
dec
ja
lock
inc
inc
lahf
jne
jle
or
aad
sahf
adc
das
fnstenv
jns
popa
inc
adc
push
gs
loopnew
aaa
cmp
lret
lret
push
xor
imul
pop
mov
xor
xor
leave
sub
and
mov
sbb
outsl
mov
icebp
and
ja
addr16
sbb
lods
aad
aaa
pop
repz
jo
hlt
cmc
je
into
or
ljmp
repz
add
add
sub
or
rolb
test
xor
sub
lcall
cmp
and
into
cli
out
scas
and
daa
out
mov
aam
and
cmpsl
pop
mov
pop
lret
int
dec
push
popf
push
mov
inc
jmp
lea
cmp
les
lods
sbb
or
mov
adc
sarb
inc
bound
push
stc
dec
jbe
mov
and
inc
adc
inc
daa
and
rcrb
ljmp
or
pop
dec
cmp
stos
and
mov
jg
ss
es
fidivs
jmp
push
ds
xor
and
scas
bound
inc
mov
cmp
mov
push
mov
les
rorb
mov
jp
lock
sub
lret
push
lret
mulb
sub
or
sub
out
add
add
jmp
pop
jo
outsb
cltd
pop
lcall
fildl
popf
fs
xor
fldl2e
xor
fidivrs
mov
pop
lret
mov
sub
fdivp
lods
or
dec
ss
fcoms
pop
bound
ret
jae
insb
push
cmc
fnstsw
fbld
mov
lcall
xor
dec
xor
outsb
fs
adc
out
inc
inc
mov
pop
adc
xchg
and
clc
std
mov
stc
cmp
or
popa
pusha
jmp
ljmp
xchg
jne
lcall
idivb
jb
repnz
mov
dec
cmp
or
mov
and
lret
popf
push
pop
popa
xchg
mov
popf
pop
cmp
sub
lahf
mov
mov
das
out
lret
inc
inc
or
xor
xor
inc
or
cmp
cmp
add
aaa
push
cmp
fcoml
fcompl
xlat
push
mov
mov
push
lret
je
inc
fidivl
es
fs
adc
lods
mov
movsb
in
cmp
dec
xchg
sub
andb
mov
jg
scas
fadd
sub
shr
ljmp
cwtl
or
cmpsl
decl
cs
push
or
mov
movsl
mov
fdivrl
pop
dec
sbb
je
or
dec
mov
mov
addl
mov
mov
testb
insl
mov
mov
fidivl
sub
mov
addl
fs
cmp
shll
in
sti
fucomip
icebp
gs
loope
fwait
and
aas
xchg
sub
mov
sbb
outsb
imul
xor
fwait
add
pop
les
push
push
xchg
orl
daa
imul
insl
adc
push
cli
repz
scas
dec
sub
lods
dec
push
jg
adc
jb
sub
scas
xor
or
jmp
out
dec
push
jecxz
xchg
sbb
add
xchg
push
stos
dec
sub
cmpsb
xchg
fiaddl
xchg
rorb
cmp
nop
rclb
xor
sub
data16
daa
andl
mov
out
push
outsl
sbb
mov
inc
mov
push
dec
push
or
test
nop
icebp
mov
xchg
jp
ret
xchg
push
or
xchg
test
lea
jb
mov
mov
inc
push
xchg
mov
or
stos
lea
pop
xchg
fwait
cmpxchg
dec
js
mov
xlat
push
dec
adc
push
jmp
push
and
cmp
or
mov
fsubrs
lret
and
and
inc
pop
enter
cmp
dec
xchg
dec
ret
xlat
gs
cmp
dec
jo
pop
sbb
and
lret
dec
dec
adc
dec
fwait
mov
out
push
xchg
push
pop
cmc
repnz
pop
lcall
inc
sbb
into
clc
decb
sbb
in
xor
or
leave
shr
pop
lret
iret
and
jae
inc
clc
xchg
fnstenv
shll
or
fs
lods
or
add
stos
mov
in
mov
popa
aam
pop
cli
outsl
dec
jns
or
setge
daa
push
mov
sbb
mov
jo
in
testb
scas
and
add
inc
cmp
xchg
insb
pop
pop
sbb
sub
mov
pushf
cmp
mov
pop
mov
jg
xor
mov
add
dec
or
mov
cs
or
jmp
push
leave
in
dec
mov
fstps
mov
insl
jle
testb
mov
rcr
popa
push
sbb
pop
dec
scas
sub
sbb
mov
push
jno
cs
cmp
lret
sbb
fwait
enter
mov
in
ja
ffree
adc
clc
mov
test
pop
pop
xor
jae
push
pushf
mov
imul
cmp
lret
mov
cli
push
mov
sub
jbe
adc
lea
mov
jns
dec
xchg
push
std
sbb
cmp
dec
xchg
arpl
lea
or
or
cs
int3
lds
push
cltd
xchg
inc
repnz
icebp
call
lea
pop
xchg
sub
mov
decl
cs
pop
imul
dec
jecxz
out
out
stos
test
pop
xor
jg
and
out
insl
adc
xlat
mov
sahf
bound
fisttpl
sbb
inc
mov
inc
mov
inc
flds
push
sub
inc
pusha
inc
sahf
out
dec
imul
or
shrb
inc
pushf
jbe
hlt
scas
or
lea
cwtl
std
xor
jmp
push
scas
mov
cmpsb
jns
xlat
inc
dec
fisttps
ret
fstpt
or
pusha
inc
pop
pop
pop
push
ret
addr16
sbbl
lods
repnz
cli
sbb
lcall
sub
shl
mov
stos
adc
jmp
test
sub
test
add
outsl
dec
sbb
je
mov
xchg
decl
lret
pop
es
inc
mov
ret
jecxz
inc
inc
push
addr16
mov
int
out
push
push
xchg
mov
pop
into
cltd
push
in
sti
adc
les
out
ljmp
xchg
mov
jg
repnz
or
jecxz
pop
leave
fs
orb
adc
xchg
pop
push
stos
leave
sbb
call
push
and
jle
pushl
incb
sti
addl
outsb
fidivrs
outsb
lds
jl
cmpsb
dec
loopne
repnz
pop
mov
pushf
imul
lea
arpl
push
rolb
test
dec
mov
sarb
dec
mov
jp
ljmp
inc
es
lock
in
or
fs
mov
jecxz
enter
push
mov
leave
mov
xor
fucomp
fcompl
inc
repnz
push
fldenv
push
lahf
sub
add
out
orl
adc
jno
adc
push
cld
jae
ds
sbb
shll
xrelease
mov
je
test
push
push
mov
sub
lcall
add
mov
cs
fwait
pop
pop
ds
cs
adc
xor
xlat
and
stos
aas
ljmp
ret
push
pop
or
imul
outsl
push
jne
cli
in
call
pop
xor
sub
dec
call
lret
imul
aas
ret
js
push
pop
lock
mov
jnp
jmp
or
mov
pusha
ds
sbb
in
add
jmp
mov
cmp
stc
hlt
dec
xchg
adc
mov
inc
dec
adc
jmp
fimuls
mov
iret
jnp
push
gs
stos
ljmp
push
mov
in
jne
lea
ds
xchg
int
testb
lea
mov
repnz
pop
out
mov
bnd
mov
and
push
sbb
arpl
sbb
cmp
mov
imulb
add
push
mov
or
mov
ds
shrl
mov
jnp
push
fisubrs
das
mov
mov
sbb
mov
andb
inc
dec
lea
or
sub
icebp
fs
adc
jnp
xchg
adcl
adc
ret
push
int
mov
fcmovu
mov
mov
mov
mov
xchg
in
mov
ljmp
mov
pop
cmp
add
inc
in
outsb
mov
push
adc
pushf
jle
jbe
fwait
sbb
testb
arpl
sbb
cmp
into
mov
dec
mov
sub
or
xor
insl
push
test
enter
push
scas
jecxz
pop
jae
cmp
psubq
add
loope
js
add
push
mov
lea
mov
and
rcr
or
jecxz
push
in
div
clc
iret
adc
lret
cmp
stc
lea
jg
adc
add
cwtl
dec
pop
repnz
dec
adc
into
adc
in
dec
mov
sub
fs
adc
jle
lds
adc
outsb
mulb
mov
pop
xor
pop
xor
movsb
adc
mov
lcall
push
cli
xchg
icebp
cmpsl
or
jmp
test
jns
stc
xchg
xchg
jbe
and
xchg
shll
cmp
sbb
imul
cmp
ljmp
xchg
ret
inc
xor
jnp,pt
push
addl
adc
jecxz
inc
xor
jmp
nop
out
das
push
sbb
pop
fldl
scas
sub
adc
stc
jle
mov
sub
sbb
mov
ds
rcrb
icebp
es
dec
jno
lods
or
cwtl
aaa
fdivrp
pmaxub
std
mov
mov
sub
das
pop
add
fiadds
jg
loop
notb
mov
shrl
jb
push
mov
ljmp
in
xor
or
pop
sbb
outsl
jp
outsb
out
push
repnz
dec
ret
pop
scas
or
cmp
xchg
mov
insl
or
stc
lret
xor
push
lods
das
shr
add
icebp
enter
scas
adc
inc
push
dec
cmp
inc
mov
fidivl
push
or
sub
ds
jecxz
jb
js
repnz
gs
andl
add
xor
adc
dec
sbb
adc
cmp
mov
iret
pop
push
mov
into
cmp
add
lret
cmp
lret
dec
rcrl
scas
or
out
in
cs
cli
test
pop
dec
lret
rcrl
cwtl
ficoml
mov
das
call
or
adc
lret
sub
int
mov
mov
das
out
daa
or
mov
mov
fstpl
add
das
mov
das
inc
and
in
leave
cmp
xor
and
imul
enter
push
stos
enter
das
or
sbb
addr16
dec
ljmp
mov
sub
jg
sbb
adc
mov
xor
mov
mov
out
ljmp
cmp
mov
jbe
in
dec
xchg
cmp
inc
lock
rorb
out
mov
push
cmp
popf
and
mov
jo
push
jnp
imul
xor
pop
daa
xchg
and
dec
clc
adc
loopne
jb
dec
adc
shlb
addb
wbinvd
sub
jnp
add
cmp
adc
cmpsl
or
ljmp
pop
mov
mov
cli
adc
pop
adc
repz
cmp
jae
pop
popa
jo
inc
lea
push
in
das
add
jg
nop
jmp
loop
mov
cmc
or
cli
sbbb
inc
cwtl
cld
lret
in
js
sub
andl
int3
cmpsl
es
cmpsb
rolb
mov
popf
lock
push
push
test
xchg
imul
mov
clc
shufps
push
mov
mov
cli
lea
pusha
add
push
add
ljmp
jo
cmp
mov
hlt
inc
add
cmp
sti
pop
sub
scas
movsb
dec
inc
xor
in
int3
or
lods
pop
das
pop
mov
ficoms
in
out
sbb
lret
stos
lea
cmp
dec
push
sbb
enter
test
ljmp
sub
jbe
out
push
or
mov
fs
mov
das
mov
mulb
and
sbb
hlt
dec
cli
push
mov
push
push
addl
cmp
mov
enter
in
inc
xchg
aas
lret
fimull
mov
xchg
sbb
xchg
repnz
jp
ljmp
outsl
dec
repz
ds
sub
cmp
cmp
mov
pop
dec
inc
sbb
mov
es
lea
inc
enter
mov
jp
aaa
dec
jbe
push
movsl
inc
and
mov
push
xor
flds
push
xorl
call
cmpsl
adc
lcall
xchg
or
movsl
adc
sbb
jp
daa
push
test
pop
adc
sahf
jmp
sub
adc
push
add
notb
ja
adc
lods
imull
or
push
and
sub
dec
mov
xor
cmp
xor
push
movsl
sbb
or
jp
stos
popa
and
xchg
arpl
ja
fstpt
setg
scas
pop
into
mov
adc
mov
add
xor
in
dec
xor
sahf
push
repnz
mov
sbb
pop
nop
mov
push
pop
mov
cmp
dec
cmpsb
add
xlat
movb
daa
cmp
jb
pop
outsb
add
lea
add
sti
inc
jmp
push
xor
pop
cmp
push
lods
lcall
arpl
mov
test
je
adc
idivl
out
push
push
mov
jne
adc
xor
mov
or
cli
and
ret
call
jp
sub
jnp
mov
test
and
lds
shr
pop
jp
sub
mov
jecxz
scas
dec
xchg
f2xm1
arpl
jmp
movsl
adc
aas
out
xor
xchg
jo
arpl
pop
fisubs
add
mov
xchg
pop
dec
in
cltd
cmpsb
rcll
sub
xor
inc
jo
out
pushf
cmc
clc
adc
lret
sbb
pop
xor
sti
pushf
adc
inc
pop
xrelease
cmp
pusha
cli
jnp
push
in
mov
cmpl
mov
cli
lea
pop
adc
mov
mull
pop
aaa
push
cmpl
test
mov
out
lea
cmp
cli
jnp
jg
imul
push
aas
ret
mov
je
pop
stos
js
or
loop
xor
nop
sti
and
mov
repz
popa
outsb
stc
int
xchg
icebp
mov
and
ja
call
cwtl
adc
sub
mov
sub
push
jns
icebp
push
dec
cltd
enter
dec
mov
shll
bnd
int3
fidivs
std
inc
pop
ret
repz
cltd
adc
addl
pop
add
or
pop
out
cltd
loop
pop
sarb
and
and
fmull
stos
adc
jp
pop
fiadds
repz
jnp
lea
cmp
jp
adcb
pop
loopne
std
and
das
outsl
inc
hlt
inc
mov
adc
xor
or
cli
jmp
icebp
repnz
call
xor
pop
or
mov
xor
fimuls
adc
ret
in
or
mov
movsb
loop
test
mov
mov
roll
les
mov
stc
push
repnz
fistl
and
out
stc
pop
sub
outsl
sahf
inc
test
loopne
mov
clc
incb
or
rep
cwtl
mov
sub
adcl
or
inc
sahf
psraw
pop
rcll
xor
inc
cli
push
mov
shl
in
sahf
cmp
mov
jmp
mov
cmc
stos
xlat
inc
cmp
mov
mov
mov
push
je
push
mov
push
or
adc
cmp
xlat
push
pop
dec
ret
add
mov
popa
inc
insb
push
push
bound
mov
push
inc
dec
jmp
in
ret
insb
inc
xchg
xlat
fdivrl
mov
mov
push
add
dec
ret
lea
jo
mov
pop
fildl
mov
daa
mov
or
xor
mov
decl
inc
xor
stc
ret
ret
outsb
mov
xchg
loop
out
testb
mov
je
dec
xchg
or
mov
in
in
jp
mov
cli
ljmp
mov
sbb
mov
cmp
cmp
out
mov
cmc
push
xchg
mov
add
fucomi
cmp
xor
in
adc
sbb
inc
mov
mov
add
pushl
pushf
popl
adc
in
adc
or
scas
inc
push
mov
jge
jl
ss
stos
push
lods
sti
adc
xlat
arpl
ljmp
pop
or
cmp
stos
adc
adc
cli
xchg
mov
adc
mov
jecxz
ret
push
push
sub
inc
cli
push
jne
jg
adc
xlat
pop
mov
mov
jne
rorl
jg
pop
mov
mov
pop
das
mov
mov
xchg
lret
inc
cltd
in
pop
jnp
dec
cmp
in
dec
add
and
daa
insb
aaa
sahf
leave
das
addr16
mov
test
pop
xor
aad
inc
jb
jp
mov
or
ret
push
enter
add
filds
or
out
or
sub
dec
pop
arpl
ljmp
and
cmpsb
mov
aam
in
cmp
push
pop
pop
xor
enter
movl
sbb
xlat
movsb
stc
cmp
or
sub
mov
cli
fdivl
int3
cmp
sbb
addr16
push
mov
and
aas
cmc
movsb
in
mov
and
xchg
inc
test
dec
mov
mov
subl
arpl
sbb
repz
xor
mov
pop
sarl
adc
inc
sbb
ret
iret
sub
dec
push
out
and
xchg
sbb
es
xchg
xchg
push
mov
call
arpl
imul
pop
enter
mov
neg
jle
clc
sbb
xchg
lcall
fdivrl
into
push
aad
cmp
sub
inc
dec
xchg
cmc
je
cmpsb
lret
stos
or
mov
test
sbb
xor
xchg
cmp
ret
pop
xor
pop
int
push
and
pop
push
mov
sub
dec
sbb
push
inc
xor
push
popa
out
push
cli
popf
in
xchg
enter
mov
ss
test
and
sub
clc
push
popa
in
xor
sub
lea
cmp
pusha
roll
sbb
out
shlb
push
shlb
cld
mov
xor
pop
lds
test
xchg
rorl
icebp
ficoml
popf
das
adc
mov
jg
dec
mov
imulb
popa
or
mov
stos
pushf
inc
outsb
jbe
mov
inc
or
jmp
inc
test
mov
test
adc
or
outsb
ljmp
jb
jne
shll
push
mov
js
xor
xor
enter
cmp
scas
pop
mov
sbb
bound
adcl
mov
jmp
je
jle
movsl
fidivl
arpl
stos
add
icebp
fbld
rclb
inc
cmp
addr16
pop
adc
inc
mov
fsubrl
stos
sbb
xor
ret
mov
push
adc
stos
adc
aam
jnp
push
add
stos
pushf
dec
mov
jb
sub
addr16
mov
bound
cmp
jg
cld
fdivr
and
dec
lret
add
es
pop
cmpsl
sti
insb
or
cmpsb
mov
and
testb
xor
out
add
pop
loope
insl
fsts
cmpsl
ljmp
xchg
xchg
pop
push
cmp
rolb
and
add
mov
xor
cmp
add
fnstenv
cli
xchg
dec
push
sub
imul
xor
testl
dec
mov
decl
das
inc
ljmp
sti
rol
lock
out
roll
pop
idivl
pop
mov
fsubrl
or
sbb
jnp
bound
adc
mov
pop
cli
icebp
in
fcmovu
adc
ds
jo
dec
cmp
cmp
call
mov
out
fs
push
lcall
sbbl
mov
andl
fmulp
andl
cmp
sub
xor
rcrb
jbe
js
adc
daa
subb
jp
movsl
insb
cltd
mov
sbb
scas
call
cmp
or
sbb
scas
into
sub
gs
sub
add
out
pushf
or
mov
popf
in
and
xchg
mov
pop
or
xor
lods
dec
push
das
xchg
xor
pop
fmuls
push
lods
mov
cmp
cltd
ljmp
jecxz
dec
mov
push
das
out
xchg
scas
movsl
ret
sar
lea
sbb
pop
das
lods
jnp
movsb
jg
std
jle
or
jbe
jns
inc
mov
ret
repnz
sarl
xchg
ljmp
ljmp
push
mov
sbb
inc
xchg
push
data16
or
jg
lea
cmp
inc
ds
xchg
xor
lea
mov
clc
mov
or
jbe
fwait
mov
or
ret
mov
icebp
loop
inc
bound
aad
inc
out
mov
jl
pop
or
cmp
cwtl
jnp
xchg
jo
insl
fstpt
outsb
sub
sub
es
push
xor
mov
pop
aaa
stos
out
mov
out
outsl
mov
popa
lea
movsb
outsb
test
inc
sbb
xchg
loopne
pop
jmp
push
out
scas
ds
xor
xor
mov
or
mov
jnp
push
aaa
sub
ficoms
sub
xor
lret
cmp
pop
mov
cs
mov
movsb
fsubl
fdivrl
cld
cmp
sbb
das
adc
xchg
push
inc
push
or
push
dec
mov
jb
mov
cmp
sub
dec
call
or
ss
stos
or
scas
sbb
in
ret
sbb
ss
pop
addr16
in
mov
sbb
es
cmc
jns
mov
stc
fwait
rorb
inc
insl
shll
negl
loop
and
mov
nop
nop
insl
enter
insb
in
dec
jbe
xor
into
lea
xchg
mov
test
jae
mov
dec
pop
xlat
stos
pop
sbb
pop
inc
sub
test
pop
cmp
bound
mov
out
mov
jnp
into
int
mov
mov
xchg
or
mov
repz
in
add
sbb
cmc
jg
mov
adc
cmp
mov
mov
pop
cmpsb
pop
sbb
testb
movsl
xlat
jecxz
sub
mov
adc
insb
sbb
add
push
sub
cmp
inc
dec
xchg
repnz
mov
adcl
js
mov
fwait
jg
pslld
inc
fiaddl
sahf
or
mov
test
mov
cs
or
sbb
mov
add
cmp
jg
push
test
clc
loop
jno
arpl
xchg
faddl
xchg
xor
in
xchg
adc
pop
xchg
add
lea
ja
xlat
jecxz
mov
or
pop
cmp
xor
xchg
out
dec
nopl
mulb
jmp
xchg
inc
es
dec
inc
pop
nop
xchg
clc
jg
outsb
inc
das
mov
mov
stos
insl
lea
mov
adc
lcall
jl
mov
mul
push
mov
xor
or
push
sti
push
mov
mov
xor
rorl
ffree
int
sti
xor
pop
adc
sti
and
addr16
pop
clc
jecxz
jns
jmp
cmp
repz
cli
lret
adc
data16
mov
sbb
xor
ficoms
push
scas
or
test
js
jnp
notl
push
push
or
ret
add
xlat
xorl
jmp
jae
es
jnp
xor
loope
cmp
pop
adc
adc
inc
std
or
orl
insl
das
mov
adc
or
testb
jnp
or
fwait
inc
out
fstpt
or
cli
pop
jg
data16
cmpsb
jmp
pop
loopne
das
lea
or
andb
in
dec
inc
or
ljmp
and
push
or
jge
xor
inc
mov
arpl
insb
jb
jns
mov
push
pop
push
sbbl
and
add
bound
cmp
push
jnp
cld
stos
mov
xchg
adc
negl
xchg
sub
arpl
push
inc
push
push
and
in
jae
lret
mov
int
leave
jecxz
in
loopne
fisubl
in
in
sub
cmp
mov
mov
outsb
mov
push
jnp
psrad
and
mov
andl
adc
xor
cmp
adc
cmp
push
sub
add
sub
mov
or
outsb
mov
fmuls
jg,pt
mov
ret
adc
pop
cmpsb
call
into
pop
inc
inc
fisttpll
push
sti
lea
bound
mov
insl
pop
lock
jno
xchg
shl
pop
and
ds
iret
pusha
imul
mov
dec
dec
mov
es
loop
inc
test
fcmovne
sbb
jecxz
das
imul
push
int
xchg
clc
cmc
shlb
push
pop
mov
cwtl
push
icebp
push
or
mov
xchg
xchg
movsl
push
fwait
cmc
sti
sub
repz
mov
xor
and
fsts
rcr
xchg
fildll
inc
sbb
data16
sbb
idivb
mov
and
jnp
mov
inc
add
xchg
into
sub
adc
pop
dec
sbb
and
clc
movsb
js,pt
stos
dec
movsl
jb
loop
xchg
repz
inc
outsb
cmc
and
jns
or
in
cwtl
popf
loopne
mov
xor
andl
mov
dec
dec
pop
lret
sbb
cli
mov
daa
repz
push
add
mov
xchg
or
fucomip
in
les
ret
dec
jle
enter
dec
jmp
pop
lea
or
sbb
cltd
xor
and
push
movsl
mov
jbe
mov
cli
xor
scas
dec
cmp
mov
cmpsb
lock
scas
jb
lea
and
popa
jo
mov
inc
dec
or
sub
jmp
ja
xor
dec
sub
cli
cmp
add
xlat
xor
mov
aam
cmpl
call
jne
dec
pop
add
xchg
mov
jmp
add
mov
sbb
jnp
sub
jecxz
add
fistpl
or
or
inc
cmp
xchg
or
test
inc
fimull
das
and
inc
mov
mov
ds
jno
icebp
pop
add
fs
ds
mov
jbe
jmp
test
jo
aas
es
repnz
ds
push
jle
dec
xchg
xor
xchg
inc
rolb
or
jns
mov
jp
add
mulb
ret
adc
ljmp
stos
mov
add
jmp
mov
xor
pop
ret
push
push
mov
jae
mov
push
sti
mov
mov
cmp
rcrl
mov
add
push
dec
mov
xchg
cmc
pusha
cmp
scas
cmpsb
sub
or
lahf
enterw
jne
xor
insb
fprem
jp
es
in
sahf
divb
sbb
mov
or
mov
xchg
scas
es
jl
mov
test
aaa
mov
cli
ficoml
pop
pop
in
iret
add
xchg
and
adc
popf
rclb
adc
inc
xor
sbb
and
test
ljmp
ret
movsl
cmp
fwait
aaa
sub
xor
cmp
push
insl
es
push
out
inc
addr16
mov
stos
sti
call
es
cmp
push
xor
xchg
mov
push
ret
add
in
pusha
aas
and
xchg
pop
cmp
sub
pusha
mov
jns
es
pop
cmpsl
inc
sub
cmpsl
out
lret
ds
std
sub
sbb
xor
repnz
and
adc
fbstp
adc
xor
push
stc
push
sbb
call
into
out
sub
inc
dec
cmp
or
or
add
out
jae
lods
xor
adc
pop
roll
stos
mov
dec
call
mov
mov
and
jl
std
mov
cli
jg
out
loope
clc
mov
scas
mov
sub
out
cli
gs
std
sub
test
push
mov
or
or
push
or
adc
ss
inc
xor
or
lret
in
movsb
mov
cld
xor
in
adc
and
dec
adc
es
std
cmp
pop
pop
cmp
mov
lock
out
or
and
mov
xchg
les
sub
or
sub
dec
mov
fimuls
or
push
push
int3
int
das
mov
xchg
pop
pop
push
adc
or
or
es
ds
test
push
dec
mov
or
cmp
inc
push
inc
sub
jg
add
ljmp
int3
mov
or
scas
rep
pop
lcall
or
mov
push
cmp
pop
repz
fs
sub
stos
add
cmp
mov
push
xchg
adc
adc
xchg
xchg
enter
adc
sub
mov
shll
pop
sbb
data16
decl
flds
loop
add
sbb
mov
test
ss
jle
mov
jnp
mov
jle
or
int
jmp
sbb
orb
push
leave
inc
sbb
repz
xchg
nop
cmp
mov
jne
dec
lock
out
dec
jge
or
and
or
cmp
push
or
mov
lea
or
or
cmp
pusha
mov
mov
mov
mov
sub
pop
xlat
cltd
movsb
insb
hlt
imul
or
mov
imul
mov
imul
sbb
ror
mov
pop
inc
jg
lods
cltd
xor
test
out
lret
xor
lea
fldenv
and
mov
xor
or
pop
lods
mov
lret
xor
add
adc
sbb
xor
pop
outsb
ljmp
xor
pop
sbb
cmp
jg
testl
and
sub
sub
test
mov
mov
mov
imul
add
fwait
dec
stos
sbb
jge
scas
fsubrl
stos
jmp
sbb
scas
cmp
push
ljmp
push
mov
mov
cmp
fnstenv
cmp
lahf
inc
push
mov
mov
or
xchg
movsl
stos
jp
outsb
les
cmp
sbb
adc
inc
div
sbb
inc
test
mov
sub
lea
int
loop
adc
sbb
sub
or
call
pop
ljmp
xchg
lea
sub
out
add
sahf
xchg
jnp
xchg
pushl
xchg
xor
sub
push
adc
ficoms
lcall
out
jns
out
lret
push
ss
imul
ja
jmp
out
jecxz
adc
negl
jle
das
xchg
jno
ja
or
push
xchg
inc
or
jae
pusha
push
repnz
sti
ss
mov
sub
int3
iret
fdivrs
ljmp
xor
lahf
cmp
insb
push
add
pop
jb
les
test
adc
jmp
inc
or
out
push
imul
mov
vmwrite
fisubrl
adc
shl
call
or
push
push
add
pop
mov
into
test
dec
leave
add
dec
mov
fwait
pop
push
and
mov
gs
lds
in
popa
mov
jbe
xorb
pop
push
sbb
addr16
sub
jnp
cltd
inc
xchg
cmp
and
imul
repz
jp
lock
lcall
jb
inc
jge
test
pop
repnz
sub
testb
cltd
das
jb
insl
es
xor
or
mov
bound
cmp
stos
iret
sahf
sbb
dec
gs
inc
lret
or
sbb
out
rcll
lods
adc
inc
stos
sbbb
out
repnz
es
aam
ljmp
pop
mov
movsb
leave
fistl
ja
repnz
or
sbb
inc
mov
inc
sub
xor
xor
xor
jg
or
cmp
sbb
xor
es
mov
nop
cmpsl
xor
jge
shll
pusha
mov
sbb
rorb
mov
imul
ja
xchg
or
shll
xor
icebp
jae
push
mov
xchg
movsb
in
adc
fnstsw
repnz
sub
or
inc
add
mov
lcall
enter
sub
daa
push
inc
es
inc
pop
pop
sub
fmuls
push
mov
pusha
push
cmpsb
mov
mov
cli
das
mov
outsb
pop
lea
mov
movsl
mov
cmp
mov
cmp
sub
mov
rorb
lods
cmp
or
sub
xchg
pop
and
mov
or
add
aas
lea
enter
insb
cli
insb
pop
xor
repz
add
push
lock
dec
cmp
jo
pop
lea
add
jl
inc
ljmp
das
repnz
arpl
cmpsb
jmp
or
xrelease
inc
cmp
jg
mov
dec
push
mov
test
mov
xor
mov
lea
mov
subl
dec
pusha
cmp
sub
cs
cmp
mov
fnstcw
dec
stos
pop
rcll
mov
dec
jmp
jnp
jge
in
push
out
call
mov
out
xorb
stos
jae
lcall
cmp
sbb
jmp
push
mov
mov
xchg
mov
scas
mov
cli
stos
or
xor
fidivrl
ret
jle
stos
cmp
decb
int
aam
ds
or
xchg
ds
push
sub
sbb
sub
mov
or
stos
repnz
cmp
xchg
xor
or
mov
aaa
fsubrs
enter
xor
iret
cltd
int3
and
dec
jecxz
les
ljmp
xor
test
cmpsb
sbb
mov
add
sub
arpl
adc
lcall
jb
loopne
adc
pop
sahf
das
jp
sbb
scas
adc
mov
and
sbb
mov
addl
push
in
fs
sti
inc
jge
sub
jmp
inc
imul
int3
jp
scas
inc
in
mov
mov
scas
in
add
ret
xor
or
cmpsb
mov
leave
inc
or
or
loope
idiv
jl
inc
scas
mov
jo
imul
mov
xchg
outsl
dec
lods
repnz
or
pop
or
push
repnz
ret
adc
lret
cmp
adc
push
xor
mov
jmp
pop
adc
xchg
jp
cmp
jg
mov
lods
adc
scas
and
movsb
adc
subl
std
pop
leave
pop
sbb
arpl
gs
das
or
or
add
and
xor
xor
leave
repnz
add
push
out
push
loope
lods
or
xchg
mov
sub
add
nop
or
mov
cld
and
stos
sbb
fs
call
push
daa
cmc
cmp
xor
dec
shlb
cmc
mov
out
cmp
inc
mov
jecxz
cmp
fxch
push
pushf
out
inc
mov
test
mov
inc
xchg
jne
mov
adc
enter
sub
jne
and
xchg
or
ret
loopne
mov
dec
hlt
sbb
jg
scas
lret
cmp
out
or
fs
xchg
cwtl
and
push
push
dec
cmp
int
repnz
idivb
repz
sub
add
pop
cmc
scas
mov
dec
insl
inc
repz
cmp
rcll
or
and
pop
out
jp
mov
sbb
mov
ret
pop
aas
inc
push
mov
cmp
push
ret
lds
or
mov
aaa
shlb
sbbl
fs
adc
in
imul
jnp
js
xor
ret
cmp
mov
scas
mov
adc
xor
add
ficompl
repz
inc
rcrl
xchg
or
mov
adc
subb
mov
jnp
xchg
aas
std
push
sbb
lods
push
aaa
or
dec
inc
mov
jecxz
jns
insl
adc
jbe
mov
xor
sub
es
sub
out
jmp
lock
call
outsl
stos
sub
cli
or
repnz
popf
adc
sbb
leave
sbb
dec
ljmp
sub
es
push
mov
xchg
test
pop
fidivrs
popa
pop
or
das
sbbb
add
jne
sub
sub
dec
mov
sbb
sbb
inc
cmp
push
je
cs
push
and
and
les
imul
sbb
xchg
adc
dec
push
out
inc
push
rclb
mov
or
mov
sbb
jmp
add
imul
pop
mov
push
add
push
shlb
pop
jecxz
push
dec
push
fnclex
cmp
negl
xor
test
and
popl
cmpsb
add
or
cli
jae
movsl
mov
jmp
xchg
mov
cli
adcl
lods
test
stos
xor
or
in
scas
sub
sub
and
jno
mov
stc
into
jp
inc
idivb
push
scas
pop
jg
popa
inc
or
es
fiaddl
xor
inc
adc
pop
ss
mov
pop
scas
aam
lods
sarb
pop
dec
sbb
outsb
sbb
adc
or
sub
push
ss
cmp
fwait
or
push
das
bnd
int3
test
inc
lcall
jbe
dec
adc
fdiv
inc
cmp
cmp
cli
jns
sub
mov
ret
repz
jecxz
js
cmp
test
inc
das
cmp
cld
js
lods
mov
xor
lahf
mov
sub
cmpsl
mov
mov
mov
sbb
decl
jle
test
lea
sub
scas
fsts
jmp
add
inc
inc
push
jnp
xlat
movsb
out
int3
jbe
push
cli
inc
add
jbe
enter
xchg
mov
or
out
fimull
jle
stos
pop
in
sub
adc
push
fidivl
jns
dec
xchg
bound
outsl
out
jmp
rolb
push
adc
cmp
clc
cmp
sbb
xchg
movsl
mov
jle
es
testl
adc
dec
bnd
mov
pop
xor
popa
loope
lods
lea
lock
cmpsb
jle
mov
or
ficompl
xor
ret
jecxz
mov
xchg
push
jge
test
and
xor
addb
pop
mov
call
cmp
jecxz
pop
sysret
add
rcll
dec
fisubl
lods
inc
cmp
mov
outsl
rolb
adc
ret
ret
mov
xor
lret
dec
pop
jge
fdivrl
movsb
pop
fdecstp
iret
jno
cmpsb
pop
enter
and
jg
out
add
mov
jle
cs
sbb
jnp
cli
movsb
jo
push
jbe
test
sbb
xchg
push
push
fcoml
sbb
iret
push
lret
lret
mov
sub
sub
rcll
or
rclb
repz
outsb
adcl
or
lcall
jp
call
inc
mov
lea
sbb
loop
mov
cmp
mov
pop
jge
cmp
and
test
or
int3
xlat
mov
push
lock
add
cli
xor
idivl
fisttps
fimull
adc
mov
cmp
addr16
test
cs
and
ljmp
mov
rorl
mov
sbb
jnp
inc
jnp
sub
or
jmp
hlt
pop
add
fucomp
jp
inc
nop
push
jmp
jmp
adc
loopne
adc
bound
repnz
sub
and
jecxz
scas
inc
icebp
test
into
xor
or
inc
lock
xor
cwtl
mov
stos
push
sarb
xor
and
mov
iret
and
lcall
inc
test
sbb
dec
push
pusha
outsb
sbb
xchg
push
lds
push
and
push
mov
adc
mov
inc
in
scas
or
lea
aaa
pmaxsw
inc
jle
roll
ret
loop
xor
adc
and
push
int
lods
in
imul
mov
add
shrb
out
inc
lret
stos
hlt
cmc
repz
das
xor
jp
mov
test
dec
es
in
ja
jo
sbb
mov
inc
xor
fnstenv
jno
sti
iret
push
cmp
fmuls
int3
mov
and
out
cmp
xor
pop
mov
jno
add
and
inc
cmp
inc
movsb
pushf
int
test
sbb
mov
icebp
pop
xchg
inc
aam
fidivrl
ljmp
call
lret
adc
ret
xchg
sub
jge
add
repnz
out
cmp
cmpsl
lret
sbb
xchg
mov
test
arpl
jno
dec
pop
popa
adc
pop
mov
xor
stos
cmp
popf
push
cmp
or
out
imul
push
pop
jnp
pop
je
add
repnz
inc
in
xchg
dec
mov
pop
ds
insb
xorl
cmp
out
cmp
cmp
cmp
insb
push
icebp
push
in
mov
or
sarb
cmove
test
inc
push
ljmp
cli
cmp
xor
test
pop
ljmp
ljmp
inc
push
ss
ficoms
add
test
and
add
xor
inc
out
cwtl
test
rcl
push
fucomip
ss
outsb
cmp
mov
xchg
daa
mov
pusha
movd
jg
popa
sbb
std
mov
lret
lock
add
addr16
sar
lahf
mov
jne
add
cli
sbb
gs
call
arpl
fiadds
jo
or
cmp
inc
mov
push
mov
cmp
lret
cmp
or
pop
call
jb
cmp
pop
in
mov
adc
push
ret
imul
pusha
lahf
icebp
fistpll
push
test
dec
stos
sti
je
mov
shll
int3
dec
out
cld
divl
ljmp
je
es
lret
and
fiaddl
lcall
ds
jg
adc
iret
dec
adcl
aad
mov
pop
sbb
test
outsb
loop
mov
jmp
or
xor
inc
dec
ss
not
cltd
sbb
dec
testb
mov
in
jne
jg
rcrb
mov
dec
out
dec
out
pop
mov
xor
or
push
xor
and
std
rorb
out
jmp
sub
dec
or
imul
shll
es
xor
cmp
out
or
scas
jge
mov
aas
jnp
pop
nop
mov
cli
dec
jns
into
imul
in
sbb
mov
ret
push
cmp
jno
sbb
add
sahf
fimuls
movb
mov
mov
xchg
jnp,pt
add
lret
xor
pop
cli
sti
mov
xor
mov
icebp
sub
pop
testl
arpl
stos
fninit
lods
jae
lock
insb
mov
and
xchg
adc
scas
add
inc
push
dec
stos
stc
mulb
shlb
lret
push
in
mov
xchg
ss
int
fwait
or
inc
into
mov
cli
les
mov
jbe
push
push
xor
xchg
cltd
out
decl
fiadds
xor
mov
push
mov
jecxz
push
xchg
imul
adc
fisubrl
testb
arpl
lcall
mov
stos
pop
mov
jbe
imul
xchg
jmp
call
sbb
mov
jg
or
pop
mov
mov
orl
data16
jnp
lret
shl
adc
lock
mov
out
int3
cld
jp
xor
mov
mov
or
ss
sub
xchg
mov
lods
and
sbb
imul
imull
pop
xor
cli
push
pop
pusha
pop
xchg
into
mov
push
rcrb
lea
add
cmp
mov
jbe
dec
mov
and
scas
imul
loope
sbb
arpl
or
fistl
pop
rdtsc
decb
dec
pop
or
test
fdivl
mov
jbe
push
ds
into
xor
push
jg
adc
scas
and
add
jle
sub
push
cmpsl
lcall
dec
cwtl
loope
mov
aaa
mov
call
or
out
push
in
xor
mov
jmp
pop
sti
out
sub
jg
gs
aad
sbb
jo
xchg
fsubrp
dec
pop
mov
push
mov
jl
insb
loop
mov
or
and
out
or
das
jmp
xor
jp
out
adc
into
mov
out
leave
out
lea
in
or
pop
sbb
test
xchg
shll
bound
xlat
pop
cmp
popa
mov
pop
cmp
or
add
jnp
add
fwait
idivl
xorl
ds
mov
lock
sbb
mov
mov
jecxz
es
xor
adc
xchg
dec
mov
ljmp
push
sbb
cli
in
iret
adc
push
popa
cmpb
adc
cmp
mov
and
jbe
repnz
or
add
out
adc
push
out
jg
and
xchg
movsb
pop
adc
fwait
outsl
arpl
in
ret
cld
enter
pusha
scas
mov
jp
shll
xchg
xchg
inc
fldenv
testl
repnz
cmp
cmpsb
push
sub
arpl
push
mov
cld
sub
jp
adc
xchg
xor
imul
and
sbb
sub
jns
popf
ficoml
cmp
rol
aas
mov
bound
sub
cmp
icebp
jne
push
lea
xchg
loopne
mov
sub
cltd
repz
imul
or
or
sahf
fldt
cwtl
dec
or
and
xor
or
jno
xchg
dec
or
repnz
hlt
inc
inc
dec
out
notl
movsb
jno
adc
xchg
pop
jbe
lcall
jg
xchg
and
mov
add
cld
addb
lcall
call
lcall
out
xchg
lea
inc
pushf
sub
pop
add
sbb
pop
or
out
test
add
jae
push
rolb
fsubl
inc
jmp
fldl
outsl
sti
xor
xchg
xor
inc
or
pop
enter
dec
push
and
fmuls
jno
lods
mov
mov
repnz
xor
sub
push
lock
mov
lea
pop
sub
jp
xchg
cmpl
fwait
idivl
lea
fisubl
sub
test
mov
sub
lret
ja
inc
loopne
xor
mov
mov
adc
cmp
mov
mov
push
outsb
and
pop
std
add
mov
lret
mov
sbb
mov
mov
pop
ss
cwtl
fcoml
cmp
mov
iret
arpl
adc
lcall
lret
aaa
or
popa
push
and
xor
ss
xor
pop
cmp
or
out
mov
mov
xchg
into
outsb
cli
subb
push
push
xchg
inc
mov
jae
sti
into
mov
mov
icebp
pop
je
daa
jg
mov
ja
scas
incl
sub
inc
sub
or
dec
sub
or
xor
testl
lahf
inc
stos
ljmp
jge
jb
or
adc
inc
mov
popa
push
js
pop
jg
es
test
adcl
ds
jne
test
push
xchg
pop
sub
mov
fbstp
sbb
fisubl
and
add
push
scas
cmpsl
arpl
test
jo
adc
xor
mov
jp
dec
add
inc
mov
push
dec
cmp
jg,pn
ret
xchg
cld
dec
inc
test
and
fmull
adc
inc
aam
daa
cmp
mov
jne
loopne
test
or
mov
xor
jl
sarl
bound
daa
inc
mov
sbb
jns
ficoml
lret
nop
enter
push
sub
jl
mov
inc
xchg
mov
sbb
sbb
or
sub
xor
mov
cmp
lods
pop
xchg
cmp
push
imul
inc
sbb
cld
popa
cmp
xor
pop
das
imul
std
mov
pusha
movsl
lea
or
xor
cmp
mov
loop
hlt
xchg
mov
das
stos
out
nop
mov
mov
xchg
inc
out
into
mov
mov
jmp
and
movsb
pop
lahf
and
inc
push
xlat
dec
sub
sti
mov
je
in
ljmp
mov
push
jl
sbb
stc
xor
daa
addr16
push
xor
ljmp
lret
in
mov
jp
sbb
sub
xchg
cli
push
int3
jecxz
popa
sbb
jp
leave
pop
sbb
stc
lds
fsubrs
pop
int3
mov
dec
jns
and
jnp
mov
leave
mov
ds
pushf
insl
xor
inc
dec
aad
fwait
jg
xor
imul
mov
mov
addb
adc
jmp
and
or
and
stc
mov
jge
push
in
or
test
pop
push
popa
in
push
xchg
push
mov
dec
int
and
test
scas
hlt
ss
fimull
popa
and
scas
int3
iret
test
fimuls
insl
adc
push
adc
in
cmp
pushf
cmpsb
mov
in
mov
mov
scas
mov
data16
decl
clc
ss
aaa
or
stos
lret
push
sub
push
popa
jno
loope
add
scas
mov
inc
pop
ret
xor
jo
in
push
orl
adc
aaa
cli
divl
repz
xchg
push
or
lret
inc
imul
int
ss
icebp
cli
sub
mov
dec
cmp
adc
xorl
or
cmp
andl
or
iret
jne
push
ficomps
push
je
arpl
inc
xorb
inc
pop
mov
sahf
cmpsl
adc
fwait
adc
lret
ljmp
or
push
sahf
sub
mov
lea
stos
and
or
xor
mov
push
xlat
out
repnz
xchg
pop
xor
mov
push
fwait
mov
fistps
dec
lret
scas
cmp
ds
push
ja
dec
test
out
repnz
outsb
sti
push
dec
push
add
pop
mov
sti
pop
sbb
pop
shll
leave
xchg
js
adc
fldcw
inc
insl
pop
inc
jl
pop
push
push
cmp
push
cmp
fidivs
xor
xor
or
push
adc
or
lcall
dec
arpl
or
push
sbbl
lea
leave
outsl
mov
push
mov
xchg
repnz
js
ljmp
sub
lcall
mov
dec
test
loope
cwtl
aas
ret
ffree
push
and
sub
xchg
sub
sub
xchg
ds
lock
inc
mov
jg
ja
inc
mov
jmp
ss
xchg
stos
cli
mov
insl
xor
insb
daa
pop
popf
repz
adc
cmp
and
push
aas
sarl
xchg
sbb
adc
xchg
xchg
sub
aaa
lock
shll
dec
fisttps
test
das
rorb
sbb
adc
fisttpll
xor
xor
xchg
dec
cmp
repz
jnp
out
or
or
mov
dec
xor
shlb
pop
add
jle
sbb
mov
js
mov
jecxz
xchg
and
addr16
xchg
inc
repz
mov
inc
call
xor
sti
test
pop
cmp
adc
add
sbb
arpl
mov
or
mov
add
push
dec
mov
add
dec
aam
incl
aam
rclb
ficompl
jnp
mov
ficoms
icebp
ljmp
or
inc
xchg
jge
xchg
movsb
stc
jle
xlat
and
fdivs
inc
daa
out
movsb
adc
inc
add
pop
mov
dec
adc
xchg
cmc
out
decl
or
adc
add
or
mov
aaa
ds
sahf
push
jg
add
add
stos
leave
mov
jmp
movsb
or
cmp
sub
xchg
pusha
mov
sbb
ljmp
int3
shrl
mov
mov
cltd
jnp
lock
jmp
in
mov
repz
lretw
mov
dec
mov
ja
ret
aam
fadds
loopne
mov
dec
xchg
add
sub
push
add
dec
in
xchg
in
adc
mov
fiadds
xor
cs
les
push
daa
push
inc
aaa
sarb
outsl
in
mov
adc
repnz
dec
popa
roll
sbbl
shrb
mov
xchg
insb
int
sub
inc
dec
cltd
push
or
insl
jo
fsubrs
or
mov
movsl
pop
inc
mov
adc
or
movsb
cmp
cmp
out
ret
out
xchg
incb
scas
nop
jb
jg
jb
xor
out
aam
cmpsb
pop
jmp
mov
pop
fadds
rorb
mov
nop
jmp
loop
enter
lds
or
sub
in
je
testb
out
cmp
jp
out
cmp
sub
mov
mov
mov
sub
int3
and
or
or
addr16
push
or
into
xchg
cmpsb
out
xor
scas
ljmp
arpl
push
push
xchg
cli
mov
xchg
jnp,pt
pop
pop
or
xchg
ret
stos
aad
enter
imul
and
loop
push
mov
loop
add
ret
or
cld
movsb
pop
sti
mov
in
mov
push
hlt
adc
xor
lret
mov
pop
int
jns
orl
ljmp
daa
mov
lock
pop
es
xchg
ret
lcall
sub
lret
jnp
mov
pop
inc
insb
imull
jge
xchg
dec
jle
add
out
hlt
ljmp
out
mov
cld
adc
add
push
leave
out
mov
or
dec
test
add
xor
in
fcomip
cmp
lods
es
scas
and
xor
cmpsb
aaa
xchg
and
lret
adc
stos
out
nop
sbb
subb
or
lea
push
arpl
outsb
xor
or
push
and
lea
in
jo
cmp
in
mov
add
fs
lods
push
pusha
sarb
cmc
push
out
jp
jno
outsb
les
sbb
in
add
push
inc
mov
xchg
push
fbld
push
stc
mov
add
push
sahf
mov
xchg
imul
sub
sahf
cwtl
stos
inc
xchg
popf
test
cmp
inc
aam
loope
mov
ja
mov
js
divb
fisubrs
dec
shr
js
ror
pop
das
sub
push
jo
lods
bound
mov
adc
xchg
mov
and
pop
and
outsb
pop
stos
call
mov
pop
int
push
ficoml
lock
in
rorb
imul
mov
movsb
lea
sti
push
or
cmp
in
stos
jmp
sub
mov
mov
mov
jg
repz
jmp
adcb
pop
fsubrp
jae
sti
adc
or
lea
fisttps
bound
mov
out
into
in
fbstp
mov
test
pop
mov
stos
lods
fmull
cltd
lods
xchg
repz
adc
out
push
and
add
mov
arpl
sarl
jge
notb
cli
int3
push
inc
push
mov
mov
add
xchg
cwtl
out
xor
xchg
jnp
or
gs
int3
xchg
mov
sahf
daa
cmp
dec
fs
lea
inc
outsb
inc
mov
and
fs
xchg
loop
jge
sbb
outsl
nop
repz
shrl
and
mov
repz
das
xchg
shl
dec
stos
orb
mov
cmp
or
out
pop
push
cs
dec
xor
in
aad
pop
ret
and
push
enter
dec
pushf
push
mov
in
out
daa
add
lret
xchg
ds
push
xchg
shr
add
fdivl
lahf
jnp
push
lds
mov
inc
test
inc
sti
lret
push
sub
rcll
adc
jge
cmp
xlat
mov
sbb
fwait
out
or
fmull
jmp
iret
push
jno
ds
mov
mov
cmp
pxor
out
mov
sbb
movsl
add
push
xrelease
mov
push
repnz
test
bound
xor
test
or
fs
nop
inc
or
sub
lods
sub
lea
adc
ret
aam
pop
shl
in
push
mov
jns
sbb
jecxz
jecxz
test
xchg
sbb
sbb
sbb
hlt
addb
incb
or
insb
adc
es
mov
cmp
loopne
fldenv
jmp
and
loop
jle
imul
jbe
push
ds
and
cmpsb
adc
mov
adc
cmp
inc
daa
ss
das
inc
or
jg
push
mov
and
fcoms
xacquire
jmp
popa
je
bound
and
psubsw
jnp
scas
mov
xchg
xor
pop
jnp
cli
divb
dec
ds
sub
xor
insl
mov
cmp
fs
popa
sub
bnd
jnp
clc
sub
xor
cmpsb
inc
cs
arpl
mov
jbe
fimull
adc
ret
sub
lret
and
sub
imul
fwait
fs
adc
sub
lahf
cmp
inc
or
xor
mov
neg
mov
mov
movsl
push
cmp
fidivs
out
mov
sub
cmp
mov
loope
add
push
mov
sbb
or
add
aas
repnz
inc
les
mov
dec
repz
pop
pop
out
mov
or
add
pop
ss
in
xchg
addr16
adc
sub
ss
into
push
push
dec
inc
dec
inc
sub
mov
test
mov
dec
or
aas
mov
notb
repnz
in
loope
movntps
sub
xchg
lahf
aas
push
jecxz
inc
stos
lea
pop
sub
ljmp
in
xchg
xlat
mov
movsb
movsb
scas
jle
test
std
mov
testb
adc
mov
pop
mov
dec
out
and
pop
xchg
testb
je
mov
les
push
inc
out
inc
jg
push
inc
inc
mov
inc
add
jnp
mov
inc
jge
and
insl
inc
or
pop
out
or
lret
pop
testb
or
push
xor
cli
lcall
xor
frndint
sti
in
lret
imul
scas
pop
lret
sub
outsb
into
push
push
lea
or
and
cmp
jnp
xor
ljmp
mov
jmp
leave
jmp
mov
cld
cmp
daa
or
call
nop
mov
cmc
mov
add
lds
sub
repnz
shlb
push
icebp
outsl
sahf
ljmp
sub
jl
push
sbb
ret
inc
pushl
cmc
outsb
mov
lods
sub
mov
jge
sbb
daa
pop
loop
xor
jbe
loopne
setle
lea
push
mov
add
pop
and
push
xchg
or
sub
cmpsb
fcompp
xor
push
mov
inc
jns
arpl
add
pop
cmc
rolb
lahf
out
rolb
sbb
popa
push
imul
das
or
dec
or
sbb
inc
adc
or
pushf
jmp
rcrl
mov
jmp
add
out
push
mov
and
mov
dec
pop
cmp
jmp
aas
hlt
out
xlat
pop
testb
sbb
xchg
imul
cli
xchg
cmp
sbb
adc
clc
out
inc
cmp
pop
cmc
test
cmp
mov
inc
push
sbb
push
dec
pop
sti
mov
xchg
pop
add
insb
xchg
add
xchg
fiadds
dec
sub
sub
dec
xor
fimull
lcall
sub
push
testl
inc
ljmp
jnp
push
cmp
sub
adc
es
or
nopl
les
cmp
rcrl
bound
fidivs
sub
jmp
lods
push
xchg
sbb
icebp
xor
mov
adc
les
push
or
aam
mov
pusha
mov
in
jns
mov
leave
mov
out
jle
xchg
xchg
divb
jnp
or
loop
notb
pshufw
cmp
lcall
cli
xchg
jp
out
inc
fidivrs
inc
cs
dec
pop
sub
jbe
movsb
jp
addr16
ret
mov
cmp
cmpsb
push
mov
sub
test
js
pop
adc
or
getsec
icebp
add
stc
or
push
out
or
cmp
movsb
push
add
aas
inc
pushf
clc
gs
jp
push
lret
movsb
inc
xor
xchg
xor
and
icebp
pop
or
repz
or
shl
leave
mov
or
out
setb
out
bound
push
or
jbe
sbb
scas
adc
cmpsl
repnz
xchg
adc
fsubrp
sub
add
push
sahf
mov
repnz
mov
andl
inc
mov
mov
repnz
hlt
in
push
sarb
into
jb
aas
insb
add
mov
ljmp
movsb
imul
insb
push
sub
repz
stc
out
pop
cli
out
test
sahf
cmp
fisttps
pusha
cli
mov
add
pop
push
sbb
shrb
sub
test
push
or
add
pusha
scas
push
pop
stc
sub
mov
call
loopne
int
cmp
jnp
movsb
dec
add
and
lret
jnp
inc
jg
sbb
lock
test
cmp
adc
mov
push
and
cli
xchg
call
gs
data16
cli
fs
xor
pop
jp
xor
xchg
dec
xchg
push
adc
rol
in
dec
cld
xor
push
loope
cmc
dec
pop
popa
and
cmpsl
fdivs
sbb
xor
dec
cld
ja
sbb
mov
fisttpll
pop
lock
pushl
inc
xor
clc
clc
fsubrp
pushf
adc
lea
sbb
mov
push
xchg
lock
dec
or
push
pop
ss
std
adc
mov
jge
aaa
xor
push
movsb
dec
in
aad
inc
cmpsb
dec
outsl
or
icebp
sub
loopne
pop
mov
shll
repnz
xor
cmp
dec
pcmpeqd
jo
into
push
leave
ds
inc
lret
inc
fdiv
pop
ljmp
fs
push
and
cmp
ss
repnz
int
outsl
out
jb
icebp
push
mov
aaa
xchg
mov
jl
je
test
std
sbb
lds
subl
fucom
cmp
mov
sbb
mov
fdivl
lahf
pop
rolb
lods
pop
pop
mov
sbb
push
fistps
push
insl
add
shr
mov
mov
clc
xor
insl
popa
dec
ror
inc
xchg
sbb
daa
push
cmp
cmp
push
imull
pop
push
push
jp
add
jp
mov
es
adc
cmp
adc
pushf
imul
jnp
xor
add
adcl
cmp
or
arpl
daa
or
sub
mov
popa
mov
out
mov
cmp
nop
dec
and
mov
repz
popa
mov
addb
and
xchg
loope
jb
xchg
sub
int
or
jb
scas
ret
lahf
or
push
dec
dec
adcl
mov
daa
cs
mov
movsl
pop
int3
cmpsb
cwtl
dec
pop
pop
xchg
int3
ret
cmpsl
pop
mov
xchg
divl
or
test
and
mov
xchg
pop
daa
fidivl
loope
dec
int3
pop
adc
sbb
cmp
push
sub
lds
mov
jns
mov
adc
dec
jnp
xchg
cltd
jmp
lret
pop
addr16
pop
jp
ret
mov
push
loopne
je
sbb
inc
arpl
lcall
add
negl
lea
adc
jg
test
jl
mov
xor
xor
push
or
mov
mov
fcomps
sbb
dec
or
subl
repnz
sbb
and
push
push
icebp
and
mov
or
in
xchg
xchg
xchg
sub
orb
imul
pmuludq
mov
jae
jb
pop
push
es
js
and
jp
mov
push
xlat
out
or
add
jne
mov
rol
jmp
stos
or
jbe
cmp
mov
push
push
or
movsb
sub
inc
cld
into
cmpl
rcrb
adc
mov
sub
and
ret
inc
add
and
sub
scas
cli
sub
or
xchg
mov
add
pop
cmpsl
sbb
mov
fldcw
pop
popa
and
pop
dec
jecxz
sbb
sbb
add
addb
inc
dec
jnp
call
pop
add
pushf
inc
into
jge
inc
pop
fs
div
xor
aas
cwtl
push
dec
jo
mov
stc
push
jo
shlb
es
in
out
mov
lea
fisubrs
xor
into
lcall
or
inc
and
or
sbb
lret
dec
in
lret
mov
mov
or
movl
sub
test
push
xor
dec
jno
mov
jmp
and
cli
xorl
sahf
inc
das
lahf
jp
sbb
mov
es
aaa
pop
movsb
xor
jecxz
call
dec
add
jmp
add
push
lea
mov
dec
fldt
clc
sbb
pop
jecxz
repz
inc
xchg
mov
pushf
ljmp
or
scas
fldcw
das
adc
jp
push
add
add
mov
cld
scas
lods
vandnpd
mov
or
xlat
out
push
fsubrs
lea
xchg
add
jp
aas
push
pop
mov
cli
iret
adc
cmovno
mov
push
mull
lahf
lcall
jno
adc
adc
iret
cmpsb
stos
push
iret
dec
adc
test
xor
stc
icebp
sub
fstl
jb
pop
mov
lods
jle
data16
cmp
sahf
xchg
xchg
inc
fsubs
aaa
cs
cmp
cli
es
insl
arpl
lods
pop
fidivl
in
mov
adc
xchg
repnz
out
js
mov
add
pop
ljmp
xor
sbb
arpl
stos
push
test
mov
imul
xchg
add
cmpsb
leave
popf
add
dec
int3
mov
out
add
push
aaa
jns
inc
cmpl
fnstsw
push
jecxz
lods
pop
bound
cmc
movsl
sbb
xlat
insl
sub
daa
or
push
and
cmp
and
push
lret
pop
pop
mov
mov
mov
push
mov
test
inc
iret
mov
outsl
jbe
fcoml
jbe
outsl
mov
fildll
cmp
sub
inc
and
in
mov
pop
shlb
adc
mov
adc
clc
mov
lea
jecxz
dec
int3
enter
pop
int
sbb
xchg
inc
cld
stc
out
ret
das
mov
sbb
fiadds
sbb
pop
xchg
lock
cmc
add
repnz
and
push
sub
sbb
jmp
daa
xor
xchg
jecxz
idivb
push
int
adc
out
in
adc
push
jmp
movsb
and
fmuls
adc
cmp
cmp
adc
fnstsw
push
mov
xchg
push
jb
das
xchg
add
fistpl
or
jns
xor
ljmp
and
jmp
ds
pop
push
xor
mov
lcall
adc
cld
fistpl
pop
idivl
out
push
lret
push
adc
rorl
lods
pop
fisubrs
imulb
mov
sbb
adc
xchg
mov
loop
xchg
cmpsl
out
test
adc
frstpm(287
scas
sbb
or
cli
testl
xchg
mov
push
lcall
lret
cltd
lea
mov
pop
mov
loope
mov
mov
push
push
mov
mov
jb
cmp
in
xchg
push
repz
enter
xor
jnp
mov
adc
shlb
out
aad
insl
cltd
pop
xchg
dec
push
sub
repz
adc
push
xor
sub
jnp
xchg
adc
out
xchg
cmp
ret
mov
cli
leave
lea
cwtl
cmp
or
mov
sbb
mov
push
ret
inc
push
loope
and
scas
orb
cmp
pushf
adcl
push
lahf
cltd
aaa
xor
lea
xor
inc
mov
jns
sbb
push
lea
stos
loope
jecxz
mov
int3
rcrl
pop
mov
lock
inc
sbb
sub
out
data16
js
es
mov
ljmp
out
cmc
add
orl
enter
inc
cmp
or
jbe
push
adc
dec
or
sub
sub
pop
imul
cmp
cmp
lcall
mov
sti
cmc
cs
into
scas
out
scas
repnz
push
push
test
sbb
shrb
ss
jmp
add
mov
sarb
aaa
mov
aas
add
cmp
jg
jne,pt
cld
mov
jno
xchg
dec
jp
push
cwtl
jno
cmp
mov
push
sub
movsb
pop
cmp
fimuls
mov
ud2
imulb
or
add
jecxz
mov
repnz
iret
testl
xchg
arpl
mov
and
movsb
mov
jge
push
fmull
push
push
cltd
inc
insb
dec
sbb
aas
cmpsl
push
cmpsl
mov
xor
dec
pop
rclb
jecxz
jmp
in
pop
pcmpgtw
ret
int3
sub
leave
fcompl
pop
loope
pop
and
jae
pop
mov
pop
aas
mov
lcall
add
jne
daa
mov
aaa
inc
push
push
decb
jmp
cwtl
out
or
out
test
mov
ds
push
ljmp
sbb
cld
dec
sahf
pop
and
push
pmullw
xor
pop
aas
cs
mov
rorb
sbb
mov
xchg
dec
testb
push
jb
fisubl
push
ja
cltd
rclb
xchg
lods
pusha
mov
rorb
psrld
ss
fidivrl
ljmp
sbb
mov
bound
mov
stos
xchg
add
aam
pop
negl
pop
xor
mov
dec
xchg
fstpt
and
out
add
cltd
js
test
lods
call
pop
fndisi(8087
jp
xor
xor
pop
jb
sub
in
push
xchg
sub
dec
lods
jle
aam
jo,pt
or
fs
jle,pt
and
pop
repz
arpl
bnd
imul
pop
fidivrl
ljmp
jge
inc
bound
pop
pop
or
sub
testl
pop
xchg
and
in
adc
cmp
mov
out
sub
jnp
xchg
cmp
jo
sub
add
int
push
inc
jecxz
mov
xchg
es
lea
mov
out
test
mov
ss
jl
xchg
push
shlb
mov
mov
or
std
sub
pop
clc
fcompl
mov
sbb
adc
fmulp
cmpsb
out
cmc
add
movsl
clc
pop
mov
mov
add
sub
sub
into
addr16
xchg
xchg
cmp
pop
add
addr16
rcrl
cli
mov
es
pop
pop
mov
push
mov
loop
ja
sub
sub
loop
shr
out
cmp
mov
jle
cwtl
adc
hlt
mov
rep
add
cltd
mov
pop
sbb
std
jae
inc
mov
lock
xchg
add
into
dec
iret
inc
mov
in
adc
xor
xchg
adc
dec
idiv
push
das
pushf
ret
jo
stos
jae
pop
sub
xchg
inc
adc
cmpl
out
dec
push
mov
push
push
cmp
xchg
inc
or
mov
mov
pop
rolb
into
dec
in
mov
dec
loope
fisttpl
jno
sbb
xchg
fnstenv
cmp
and
mov
jns
inc
repz
sub
iret
lea
mov
fnsave
cmp
test
lret
pop
or
push
inc
sub
pop
push
aaa
mov
jecxz
arpl
mov
cs
out
enter
fwait
stc
sbb
mov
int3
push
xor
dec
jmp
sbb
dec
cmp
test
ficoml
mov
mov
pushf
jne
ljmp
call
pop
data16
jp
sahf
add
push
push
jmp
mov
movsl
lret
and
xor
mov
jbe
inc
es
xchg
cli
out
push
or
ret
and
sub
mov
push
cmp
notl
adc
jp
mov
icebp
and
lcall
or
or
xchg
jnp
pop
ljmp
push
mov
push
loopne
or
mov
xor
inc
sub
mov
in
jbe
in
jae
iret
jp
cld
pop
lcall
mov
lret
repz
push
loop
jecxz
pop
add
std
out
mov
shlb
outsb
mov
inc
or
stc
dec
cli
pop
movsb
cmpsb
or
pushf
push
pop
lcall
push
dec
shll
and
cmp
popa
aam
or
dec
lret
xchg
jo
xchg
jg
or
testl
lea
adc
inc
mov
mov
rcll
and
or
jns
cs
mov
xchg
cli
pop
arpl
mov
fs
mov
pop
sahf
add
fstpt
xorb
lcall
cmpsb
fdivl
sub
xor
ds
movsb
lods
xchg
jnp
les
sub
pop
mov
test
or
mov
adc
sub
add
mov
movsb
cmp
sbb
jo
dec
or
and
out
and
daa
and
add
repnz
sub
or
sbb
jmp
pushf
adc
add
mov
js
xor
mov
xor
xor
sbb
movsb
mov
scas
cmp
mov
sbb
sbb
clc
outsl
xor
xchg
es
pop
lea
idivl
push
or
out
orb
or
mov
cmpsb
mov
jge
je
ret
cmp
inc
dec
lods
xor
inc
stc
mov
xchg
pop
jecxz
mov
push
lret
les
push
xor
fwait
les
jae
add
dec
cld
pop
lret
mov
adc
sbb
or
xchg
mov
call
fildl
mov
mov
jb
or
icebp
ret
dec
cli
jno
sub
cld
xor
movsl
xor
jb,pn
add
pop
jnp
dec
or
std
or
or
add
mov
xchg
test
lods
pop
xchg
mov
or
adc
pop
jle
mov
adc
les
mov
xchg
stc
ficoms
mov
mov
xor
out
xor
arpl
repnz
sbb
sub
sbb
mov
or
sub
xchg
fists
push
or
shlb
inc
mov
dec
xlat
testl
sahf
jmp
imul
sub
sbb
clc
ret
ds
add
xchg
mov
mov
cmpsb
aad
mov
or
mov
pop
or
cmp
rclb
lods
jmp
int3
std
xor
pop
popf
cmp
testb
sub
xchg
mov
add
xchg
mov
and
fimuls
loopne
adc
jecxz
cwtl
in
pop
mov
mov
cli
insl
insb
jb
jb
jp
fimuls
aam
push
imul
sub
call
bound
les
or
push
and
mov
jb
jge
out
test
out
push
fisttps
adc
pop
in
sub
test
jecxz
lock
sahf
jnp
push
add
cmp
sub
xlat
loopne
xchg
in
mov
std
lret
xchg
sbb
fwait
dec
bnd
cmp
movsl
adc
lea
jl
push
mov
pop
dec
jno
and
cld
mov
in
pop
test
pop
push
lea
insb
aam
mov
repnz
in
dec
mov
data16
sahf
pop
inc
daa
out
fdivl
sub
inc
and
out
sub
in
mov
mov
mov
mov
inc
stos
rorb
push
pop
jg
ljmp
xor
or
push
or
add
jecxz
enter
addl
js
xor
pop
cmp
lcall
xor
in
bound
xor
xor
jmp
repz
adc
cmpsb
mov
mov
insb
lahf
cwtl
push
dec
cwtl
insb
enter
in
mov
pop
in
add
or
jne
pop
out
inc
cmp
push
sbb
dec
es
pop
inc
fidivrl
xor
and
repnz
jmp
clc
into
cmp
stos
clc
push
pop
ficompl
sub
cmp
cltd
jnp
xchg
scas
imul
jmp
xchg
movsb
andl
xchg
fildll
or
mov
inc
pop
ds
outsl
lock
mov
cmpsl
and
push
pop
lcall
shrl
mov
jbe
pop
cmp
cmp
in
sbb
dec
xor
mov
and
xor
daa
dec
cpuid
xchg
jae
mov
push
push
or
jbe
in
int3
sbb
or
aaa
xlat
mov
enter
or
ljmp
ljmp
mov
mov
cli
adc
iret
ljmp
dec
jg
inc
adc
lea
xorl
std
mov
fmull
push
out
stc
aaa
and
xor
mov
sbb
and
ss
out
adc
ret
lea
sbb
inc
cmp
mov
and
aad
enter
xchg
mov
cli
stos
rcrl
testl
cli
pop
inc
add
jge
push
lcall
mov
cmp
mov
out
xchg
adc
dec
es
popa
sbb
jmp
xchg
inc
push
and
add
jle
xor
lahf
dec
stos
pop
cli
dec
arpl
out
mov
stos
jp
aas
shll
lret
out
mov
ljmp
push
jp
inc
pop
repz
add
or
iret
sbb
or
out
push
jecxz
sbb
sbb
outsl
shll
fwait
mov
mov
out
xchg
ss
scas
add
aaa
add
dec
sub
aaa
cli
mov
loopne
jp
jne
repz
jb
xchg
push
ret
std
jo
sbb
mov
lock
push
dec
jmp
inc
idivb
test
adc
lea
sahf
setbe
clc
js
ret
loope
fucomp
push
or
cmpsb
lds
dec
mov
enter
mov
inc
iret
lret
dec
or
adc
movsl
xor
scas
dec
adc
xchg
stc
push
dec
jmp
adc
sti
in
pop
jp
data16
xlat
out
aam
ret
shll
lock
cmp
adc
notl
idivb
ss
insb
push
outsb
imul
jg
scas
cmpsl
cltd
xor
sub
jg
mov
call
cs
mov
repz
pushf
sub
pop
rcrb
adc
jg
push
xor
inc
ljmp
xchg
scas
mov
push
repz
jbe
mov
mov
sbb
mov
stos
addr16
add
scas
jb
aad
sahf
adc
xlat
pushf
jnp
out
jbe
dec
cwtl
arpl
jmp
or
ss
mov
mov
xchg
xchg
add
repnz
jo
xchg
pop
dec
mov
cmp
push
jp
aad
movsl
dec
pop
das
push
adc
or
or
out
inc
cld
shl
lods
push
push
xchg
or
jmp
in
divb
jo
xor
loopne
les
push
pop
fimuls
leave
arpl
subb
rorb
pop
stos
mov
mov
out
fs
sbb
inc
cmp
repnz
in
ret
or
xor
mov
and
pop
adc
addr16
xlat
sub
mov
rorb
mov
adc
ds
dec
es
addl
cmpsb
data16
cmpsl
je
cwtl
add
mov
lret
pop
jecxz
add
ret
add
pop
dec
test
ljmp
or
adc
fisttpll
imul
shll
lods
push
addr16
andl
sub
pop
add
lahf
fldt
imul
jecxz
or
add
add
sbb
mov
repnz
cmp
sbb
ljmp
adc
lret
dec
xlat
sub
or
call
mov
dec
add
and
pop
xor
ja
std
push
push
mov
mov
pop
imul
icebp
xchg
cmp
push
jns
push
xchg
or
and
sub
push
add
mov
scas
mov
pop
in
lret
jmp
arpl
add
push
or
or
xor
jle
into
cmpsl
ret
shll
or
adc
mov
lea
fistpl
lret
fdivrs
data16
adc
push
outsb
push
inc
fiaddl
ja
cmp
in
pop
xor
dec
cmpsl
arpl
negl
and
pop
push
sub
dec
dec
shl
cmp
mov
test
jmp
sbb
inc
cmpsb
or
repnz
nop
push
mov
adc
xor
stos
out
inc
lret
test
inc
and
scas
je
jnp
xchg
lods
sbb
ret
pop
test
mov
loop
stos
jl
mov
das
mov
cmp
jne
stos
ljmp
inc
pop
xor
xor
lcall
in
insb
loopne
lcall
dec
mov
jge
cli
and
test
repz
cmc
divl
test
sub
jg
add
xchg
ja
cltd
push
mov
mov
pop
mov
mov
cmc
ljmp
cmpl
out
test
dec
fimull
mov
call
into
sub
fsubs
movsb
push
stc
call
or
fidivrl
dec
mov
loop
xor
das
fs
imul
jb
mov
ljmp
es
jb
lods
iret
movsb
pop
stc
ret
sub
or
lock
call
mov
push
mov
add
push
ret
lods
hlt
or
sarb
mov
mov
inc
mov
adc
jle
das
gs
jmp
in
sub
cwtl
jle
mov
fmull
scas
mov
sub
andl
int
xchg
cmp
dec
or
xchg
sbb
push
mov
jecxz
xchg
xchg
rorb
and
and
cmp
mov
mov
jns
mov
and
enter
pop
rorb
inc
dec
fists
pop
jno
mov
pop
popa
pop
jmp
lods
test
cltd
jmp
push
lcall
pop
mov
sub
loop
lea
test
sbb
mov
jns
jnp
push
repnz
mov
leave
hlt
mov
jg
xchg
shl
shlb
clc
mov
jmp
push
stos
add
fcompl
fscale
cli
cltd
ljmp
sub
xor
arpl
lcall
popf
pop
int3
and
inc
or
xor
pop
inc
dec
mov
cli
fcompl
xor
sub
mov
mov
frstor
or
or
pop
mov
test
xor
sti
add
sub
hlt
lret
pop
inc
lds
pop
add
or
add
inc
imul
ss
int
jecxz
sbb
inc
mov
cmp
call
fistpl
push
mov
mov
test
push
push
cmpl
int
addb
inc
repnz
out
loop
pslld
ficompl
adc
int3
mov
xchg
jne
xchg
inc
jmp
xchg
sub
sbb
leave
jne
xor
push
cmp
xchg
mov
push
pop
into
repnz
jns
dec
mov
cmp
je
dec
aad
idiv
loope
jnp
cmc
pop
dec
xchg
mull
notb
pop
mov
ljmp
lock
xchg
xchg
scas
lret
lea
jne
cmc
mov
push
adc
inc
mov
les
sbb
sub
pop
out
xchg
or
ss
fimuls
push
xchg
cmp
scas
sub
mov
mov
ss
stos
inc
out
mov
ficoml
pop
add
ficomps
ret
jnp
push
inc
or
test
adc
xor
push
or
inc
or
jo
shl
sbb
dec
fwait
adc
dec
popa
sti
or
cmpsb
ret
and
push
leave
pop
lcall
enter
loope
pop
dec
stos
out
jbe
xchg
adc
jmp
aas
mov
mov
divl
cmp
add
push
test
or
fcomip
movsl
rcl
mov
in
push
ljmp
mov
inc
daa
sahf
pop
cmp
inc
sub
inc
call
cld
jno
and
dec
adc
inc
dec
mov
daa
sub
iret
aam
adc
div
lcall
cltd
inc
ret
jg
lock
mov
lods
jl
mov
pusha
adc
sbb
out
fistpl
daa
outsb
bnd
pop
test
jmp
mov
xlat
mov
scas
and
and
jnp
pushf
scas
out
cmp
mov
test
test
pop
sbb
xchg
scas
inc
and
mov
mov
adc
pop
xor
cmp
push
pusha
imul
sbb
inc
mov
cmp
xor
xor
push
out
jbe
jnp
das
fildl
push
inc
push
shll
aaa
xor
ljmp
fcom
push
xchg
int
inc
jo
testb
jbe
sub
jg
scas
test
fisttpll
dec
push
jnp
call
inc
fs
aas
arpl
adc
xchg
cld
imul
in
ss
out
mov
or
add
stos
cli
and
in
sub
push
negb
add
stos
cmp
clc
inc
shr
dec
nop
adc
pop
jmp
lock
dec
test
cmp
shll
xlat
push
xchg
jmp
adc
loop
fcomps
stos
add
call
mov
xor
xor
test
jge
sub
idivb
mov
stos
xchg
cwtl
inc
adc
push
mov
movsl
ret
out
aas
lods
inc
cmp
cwtl
cwtl
mov
das
les
fbstp
dec
arpl
call
sbb
pop
adc
inc
inc
adc
inc
mov
dec
test
jnp
inc
xchg
cmp
lret
mov
xlat
mov
push
hlt
test
repnz
insl
fcmovnb
std
jecxz
repz
push
or
jmp
mov
mov
mov
cmp
and
lcall
cld
jmp
repnz
loop
sub
lcall
dec
jne
sti
cmc
mov
rolb
out
push
in
xor
dec
imul
pop
test
sbb
adc
add
xchg
ds
push
pop
inc
sti
hlt
repnz
add
pop
outsl
negb
jmp
nop
in
es
ljmp
push
push
dec
in
pop
inc
les
cld
sub
cmc
inc
xor
popa
adc
adc
sbb
jnp
loop
cs
adc
insb
pop
pop
xor
ljmp
push
mov
mov
fimuls
call
ljmp
lea
adc
sbb
jmp
ficompl
faddp
jg
lods
cli
jmp
mov
adc
adc
jle
scas
xchg
shr
in
repnz
fnstenv
cmp
and
push
mov
mov
mov
outsl
imul
stos
ljmp
fisttpll
orb
cmp
push
mov
repnz
test
pop
mov
imull
lods
sub
cmp
inc
pusha
pop
and
imul
mov
fidivs
add
lds
mov
mov
fistpl
aas
lahf
push
or
push
enter
xchg
mov
fstps
rcll
xlat
push
les
sub
pop
mov
and
sbb
adc
cmpsl
cld
jb
leave
cmp
mov
clc
out
cmp
outsb
bound
nop
or
lret
jl
dec
adc
mov
insb
push
fwait
das
inc
test
lea
push
adc
push
movsb
das
pop
mov
pop
out
and
push
int3
je
cld
aaa
arpl
into
pop
rcrl
ds
or
subb
or
mov
mov
pop
gs
lods
cmp
and
pop
into
mov
push
int3
xchg
adc
inc
sbb
out
xlat
scas
out
cmp
dec
ljmp
lcall
mov
mov
cmp
ds
jae
rcrb
mov
mov
lods
mov
in
in
inc
mov
out
inc
mov
shll
imul
jne
mov
sahf
dec
cli
ljmp
cmp
lock
lret
jnp
or
fistpl
mov
iret
or
lods
push
jnp
out
filds
push
jmp
pop
in
lea
sti
sub
xchg
into
or
stos
xor
test
aad
sbb
sbb
scas
test
push
lcall
cmpsb
bound
cli
mov
cmp
int
imul
cld
aam
jle
fisubs
sub
leave
adc
lcall
idivb
fadd
scas
imull
ret
mov
adc
mov
mov
cltd
mov
cltd
fwait
inc
mov
push
mov
pushf
mov
adc
sub
pcmpgtd
fsubl
fnstsw
pop
xchg
repnz
hlt
leave
lock
mov
ds
dec
out
sbb
imul
shr
push
sbb
add
push
cli
xchg
rolb
jp
cmp
lcall
cmp
add
dec
rol
repnz
xchg
sar
or
outsb
shlb
jae
cli
and
mov
cmp
rclb
mov
dec
lcall
and
add
mov
lea
or
mov
jno
shll
or
push
add
rcll
rdtsc
mov
mov
stos
inc
or
aad
out
pop
lcall
cli
clc
and
jno
dec
fisubrs
stos
mov
cs
ret
loopne
mov
cmp
imul
cmp
scas
push
and
call
lock
mov
repnz
movsb
icebp
cmp
leave
mov
sbb
scas
push
lret
sub
inc
or
sarl
subb
out
mov
add
orl
and
xchg
xor
loopne
nop
add
popf
push
cmc
movq
cmp
dec
pushf
mov
push
ss
fsts
dec
push
inc
out
cmp
mov
cld
xor
loop
add
dec
push
jno
pop
sbb
out
fs
mov
dec
mov
insl
cmc
out
fucom
pushf
hlt
mov
mov
sbb
imul
cmpsb
adc
mov
aad
jns
sub
in
imul
sahf
pop
not
out
loopne
sbb
popa
es
cmp
mov
enter
xchg
jmp
popf
jbe
dec
push
inc
sti
cs
testb
mov
mov
movsl
and
mov
inc
fistps
repz
adc
sbb
fwait
test
sub
pusha
outsb
xchg
push
call
push
mov
lea
mov
cmp
dec
mov
xchg
test
jl
fcom
mov
mov
pop
leave
movsl
rcll
pop
sbb
xrelease
lret
arpl
mov
jle
lock
loop
imul
add
add
cmpsl
sbb
into
inc
sub
test
push
fsubp
hlt
js
mov
mov
ss
pop
adc
mov
xorl
lods
das
cmp
jne
xor
cmp
js
mov
push
xor
rcr
xchg
lods
xor
pop
lods
push
mov
push
adc
lret
cs
loopne
xchg
add
lea
fistl
das
pop
or
lahf
lret
mov
nop
pop
jp
fidivrl
leave
xor
jl
jo
hlt
cld
or
fwait
scas
cmp
sarb
fisttpl
jge
dec
cmp
ljmp
or
lahf
imul
je
xchg
filds
dec
lods
das
ret
sbb
pop
add
xchg
pop
sub
xor
stc
loop
out
mov
jl
clc
daa
aad
roll
repnz
insb
jnp
inc
and
dec
pop
mov
mov
cmp
or
movb
daa
inc
sbb
cld
hlt
or
mov
je
and
mov
into
adc
fldt
outsl
xor
lcall
dec
push
mov
sub
add
or
push
inc
sub
out
sub
inc
gs
dec
pop
adc
and
cmp
xor
outsb
jnp
xor
stos
fcmovnu
arpl
pop
cmp
mov
mov
popa
test
jb
cli
lods
cmp
xchg
sbb
push
mov
insb
mov
jmp
xor
arpl
sub
mov
loopne
arpl
out
mov
push
xchg
out
mov
shl
mov
fildll
inc
dec
lea
jle
fimuls
inc
test
add
mov
shl
mov
sub
pushf
sti
jecxz
or
lret
inc
mov
dec
jle
mov
sub
cmp
out
pop
scas
push
cwtl
xchg
in
dec
repnz
xchg
and
jns
fs
ds
pop
jecxz
mov
and
test
shl
cmpsl
push
xchg
out
cmpsl
pop
imul
cld
cmp
mov
ret
negl
adc
pop
mov
aas
sbb
insl
push
push
xchg
or
xchg
lock
xor
pop
fildll
cmp
test
cs
sti
inc
out
push
mov
adc
les
cmp
cmp
adc
mov
sarl
repz
adc
out
sbb
out
sub
xchg
repnz
mov
push
sbb
xchg
cmpsb
mov
rolb
sbb
cltd
lods
in
sub
sbbl
cmc
pop
or
sbb
or
shrb
out
pop
fistps
bound
ss
pop
sbb
xchg
sub
pop
rcr
fadds
dec
jge
sbb
sbb
mov
addr16
cmp
fiadds
and
repnz
repz
test
xchg
push
lret
mov
cmpsl
add
pop
xchg
lods
or
lea
jge
gs
pop
shl
fwait
divl
decb
add
insb
push
hlt
mov
inc
sbb
sbb
or
or
jbe
or
add
jmp
push
repnz
inc
mov
sti
push
call
and
cmp
sti
lods
test
pop
sbb
jbe
jno
shlb
mov
jnp
lock
sti
loope
nop
xchg
cwtl
add
jbe
pop
add
mov
cmp
shrb
leave
jmp
mov
inc
stc
mov
dec
sarb
iret
push
aas
ljmp
pop
aam
dec
bound
cmp
and
and
add
mov
and
sahf
int3
push
xor
or
sahf
xor
pop
adc
fistpll
mov
dec
adcb
cli
or
pop
in
cli
jmp
lods
pusha
mov
pop
ss
inc
jp
add
in
mov
xor
push
xchg
lret
cmp
or
lcall
clc
enter
or
xor
cltd
repnz
ds
lea
adc
jmp
je
stc
stos
or
jmp
int
and
lea
cld
clc
ljmp
lds
das
and
sbb
jp
icebp
xor
push
mov
inc
aaa
neg
adc
xor
and
lret
xchg
add
roll
fmuls
aad
mov
mov
adc
sbb
inc
and
pmaxsw
clc
mov
jp
sbb
das
ret
ss
add
sbb
jge
inc
inc
and
cld
fs
jg
jp
sbb
add
jbe
mov
shrb
cmp
pop
inc
or
nop
mov
scas
mov
jo
adcb
mov
es
pop
scas
push
adc
xor
cld
cmp
outsl
or
dec
insb
cli
push
cmp
movsb
mov
ljmp
cmp
push
mov
fs
cmp
adc
test
divb
stc
lea
xlat
out
sub
int3
aas
out
jo
lea
mov
rclb
call
sub
mov
jg
addl
pop
lods
mov
pop
fwait
pop
or
inc
or
out
adc
xlat
arpl
add
mov
mov
mov
ret
push
lea
in
add
mov
push
lret
pop
enter
mov
enter
mov
xor
out
cli
or
mov
sbb
xor
lock
outsb
in
fwait
repz
inc
test
adc
das
pop
jo
jp
pop
adc
lret
jno
cmpl
xlat
add
mov
adc
aam
lcall
lret
sub
ret
in
in
or
and
imul
mov
imul
xor
cmpsl
mov
adc
xor
xchg
scas
dec
icebp
xchg
sbb
jp
sti
fidivrs
pushf
std
xor
and
loopne
nop
jge
lcall
mov
sub
lods
jmp
pop
iret
or
dec
lock
adc
shlb
mov
rol
push
jae
inc
jns
push
aam
or
test
cs
xor
mov
sbb
mov
iret
dec
jg
jne
jne
push
test
pop
mov
cmc
push
lea
enter
mov
inc
ljmp
add
cwtl
clc
sbb
or
in
lret
fcomip
xor
lcall
xor
cmpsl
inc
push
fistps
jg
sahf
cmp
lods
add
lea
adc
mov
and
cmp
mov
pushf
jns
adc
mov
mov
mov
dec
nop
pop
enter
cmp
add
mov
call
cmpsb
sahf
dec
xor
negb
cwtl
push
fists
into
enter
and
mov
xor
push
adc
mov
divb
fsubr
xchg
push
xor
add
or
fcom
imul
sub
out
xchg
ret
shl
cld
push
movsb
cmp
repnz
aas
cltd
pushf
pop
scas
sbb
mov
in
push
add
mov
out
sub
mov
pop
mov
jns
push
cltd
xchg
bound
fwait
mov
call
lcall
xchg
push
loope
inc
xor
sub
in
in
dec
ds
aad
xchg
cltd
add
push
cld
int3
jp
push
mulb
adc
sub
mov
imull
fucomp
add
xor
and
mov
xchg
enter
loopne
inc
xchg
dec
test
lret
stc
push
cmpsb
mov
mov
adc
sbb
pusha
add
ljmp
xchg
out
repz
into
xchg
dec
jns
or
mov
add
sub
lock
dec
mov
aaa
lret
add
aas
popa
push
fdivs
loop
mov
ds
xchg
jnp
pop
mov
ja
aas
or
pop
xchg
dec
pop
sub
addl
jg
inc
movsl
leave
xor
jae
pop
test
loop
subl
sbb
xchg
push
sti
jg
inc
cmp
out
pop
cmp
iret
scas
jp
xchg
jns
test
out
fsts
adc
dec
test
inc
stos
adc
ljmp
das
repnz
mov
mov
fsubs
ljmp
lea
imulb
fistpll
rorb
pushf
sbb
xchg
xchg
out
adc
fnstenv
mov
test
jp
ds
mov
xchg
jmp
filds
ds
pusha
mov
dec
testb
ljmp
lock
push
cmp
jg
lea
add
jb
mov
shrd
jl
shl
dec
lret
or
pop
pop
lea
negb
sahf
and
push
sub
add
and
ss
mov
call
or
aad
lcall
xchg
cmp
sbb
fiaddl
adc
bndldx
mov
xchg
shlb
ret
cld
cmp
cmp
fs
xlat
stos
dec
jecxz
pop
mov
or
mov
rorb
fidivl
orb
ljmp
enter
imul
clc
shlb
test
jl
cmp
mov
fnsave
push
rorb
dec
mov
sub
sbb
jmp
cmp
sub
dec
xchg
pop
jg
mov
xor
xor
sarb
jecxz
lret
ljmp
adc
xor
cmp
dec
enter
nop
int3
pop
test
addr16
stos
add
icebp
or
sbb
mov
xor
cmovo
pop
inc
jg
aam
jbe
or
mov
xchg
cs
push
fcomip
lock
adc
hlt
roll
or
stos
rcrb
push
inc
pop
pop
and
xchg
or
jge
jbe
ljmp
jl
push
dec
mov
nopl
pop
mov
mov
jmp
shr
pop
into
ds
pushf
jne
pop
stos
mov
sbb
mov
pop
test
cmp
cwtl
push
cmp
and
xchg
mov
insl
mov
sub
jl
push
jae
mov
hlt
es
jnp
scas
ljmp
xchg
jmp
fwait
cli
mov
sub
mov
xchg
xor
sub
fs
popf
xor
mov
sbb
mov
mov
inc
xlat
ljmp
js
inc
adc
mov
and
icebp
jne
mov
adc
test
fwait
imul
test
gs
testb
insb
mov
inc
jbe
test
push
cmp
test
aas
andl
add
cmpsb
jbe
and
ja
cs
popa
repnz
mov
inc
bnd
mov
inc
pusha
gs
inc
test
or
cmp
and
sti
mov
insb
push
lahf
shr
sbb
repz
xchg
or
cmp
lea
mov
cmp
or
jl
cmp
mov
enter
sub
cli
repnz
push
out
or
cmp
icebp
mov
lea
cbtw
in
mov
enter
cmp
pop
mov
mov
dec
lds
adc
cld
std
call
repz
and
lea
movsl
enter
loopne
push
mov
or
sti
in
cmpsl
lcall
cmpsb
xchg
lcall
ljmp
add
sbb
inc
testl
jmp
out
sbb
cld
xorl
stos
mov
and
xchg
lea
jnp
add
rorb
add
subb
cmpl
jae
mov
fstl
mov
lea
mov
add
adc
xor
or
out
sbb
mov
add
imul
cmpsb
dec
pusha
pop
out
lods
shlb
mov
and
xlat
cwtl
mov
cmc
lock
xor
dec
jo
sbb
stc
fmull
insb
lret
int3
enter
or
stc
inc
leave
jecxz
pop
add
cltd
push
scas
dec
hlt
sbb
jmp
aaa
inc
push
xor
icebp
decb
inc
cmp
fcompl
sub
stos
push
arpl
in
pushf
mov
add
repz
inc
cli
in
inc
out
aas
sti
cmp
sbb
sti
jmp
shlb
aas
mov
push
sbb
push
lret
xor
pop
adc
push
jge
mov
pop
mov
gs
mov
cmc
cwtl
insl
in
sbb
loopne
jno
sbb
add
push
sub
push
imul
and
mov
andl
sahf
mov
mov
lods
pusha
ds
and
mov
fnstcw
lods
sbb
dec
fldcw
and
stc
aaa
ss
dec
adc
sar
in
int
jecxz
loop
aad
ljmp
int
out
aaa
negb
mov
out
pop
inc
xchg
mov
jg
mov
jmp
sbb
bound
sub
jmp
mov
adc
add
mov
ss
int3
int3
rorb
pusha
sub
scas
push
fcomps
pextrw
xor
fcomi
rclb
cmc
or
cmp
pop
or
pop
mov
into
push
fmuls
leave
pop
sbb
repz
sbb
push
int3
pop
lods
in
out
mov
repz
cmp
test
ss
add
popa
adc
add
jp
adc
clc
rcrl
in
jp
arpl
jmp
and
das
shrb
out
sbb
jae
inc
ljmp
out
mov
jnp
lock
dec
andl
dec
sub
movsb
sahf
sub
lcall
repnz
inc
mov
xchg
fnstcw
sub
ret
ret
push
jp
mov
jae
sbb
fisttps
and
or
adc
add
mov
decl
inc
mov
mov
loopne
dec
cli
cwtl
dec
mulb
or
sahf
sbb
ss
dec
lock
scas
cltd
nop
and
mov
imul
add
imul
mov
push
fdivrl
and
xchg
push
sub
call
and
jnp
addl
cwtl
adc
mov
andb
sbb
inc
inc
lea
sahf
or
dec
xor
xchg
pusha
sbb
cs
jmp
es
das
dec
xchg
dec
push
inc
add
xchg
adc
pop
inc
ror
mov
aas
fcoml
push
push
lret
aaa
sbb
sahf
mov
ret
xor
jns
scas
cld
shrb
cmp
mov
fldl
xor
mov
mov
jns
xlat
adc
subl
repz
jmp
mov
adc
jg
add
or
pop
push
sub
movsl
stc
pop
dec
sahf
loope
xor
xor
jg
and
mov
into
iret
out
lret
arpl
stc
arpl
dec
ret
xchg
pop
pop
mov
xor
cs
mov
mov
movsb
sub
ss
push
ds
aas
mov
clc
or
cltd
out
xor
lea
pushf
mov
dec
jo
inc
jmp
cmp
jp
push
out
aad
out
lret
jb
mov
scas
xor
imul
pop
mov
lods
orb
mov
call
pop
xlat
mov
stos
fwait
push
sarb
or
imul
jns
repnz
mov
xchg
repz
repnz
enter
and
xor
popf
push
push
into
mov
std
scas
inc
and
mov
push
test
mov
and
mov
push
sub
aaa
add
adc
enter
cltd
loopne
lret
add
scas
repz
push
lods
orb
push
cmp
ficoms
add
xchg
jg
ja
ss
fwait
ret
out
pop
aam
imul
les
fimull
adc
imul
sub
jae,pn
mov
ljmp
sub
leave
sbb
mov
xchg
push
push
push
xchg
inc
mov
mov
adc
mov
mov
jg
arpl
jo
inc
shrl
fbstp
push
popf
jmp
adc
sub
add
pop
es
test
lcall
stos
sub
lcall
movsb
call
lret
pop
or
add
xchg
sub
jecxz
or
push
or
push
adc
jp
xor
and
pop
add
and
fbld
xchg
sti
jne
pop
nop
sub
push
inc
test
push
ljmp
or
pop
sbb
mov
cs
xor
inc
stos
sbb
cmp
adc
ss
inc
rcrl
repnz
sbbl
or
inc
inc
or
outsb
in
arpl
push
cmp
mov
lcall
and
mov
lret
push
jno
test
cs
mov
adc
mov
mov
arpl
sub
stc
xor
xor
mov
add
sub
fnstcw
xor
in
or
and
mull
int
pop
jbe
ljmp
in
pop
jns
mov
lods
ja
stos
into
push
daa
testb
lea
jl
sti
stos
ja
cmpsb
aaa
idiv
scas
push
outsb
insb
mov
add
xchg
out
bound
outsb
pop
fwait
pop
jb
loop
mov
adc
rorb
adc
inc
inc
cmp
add
or
push
je
in
push
mov
mov
jno
inc
aad
jne
cld
sub
imul
add
lock
outsl
inc
adc
push
sub
sbb
test
cli
lret
xor
lret
fldcw
mov
dec
movntq
push
sbb
dec
mov
add
fcmovbe
lea
lret
std
dec
cwtl
mov
push
xchg
clc
loope
mov
xchg
cld
sbb
scas
push
out
popf
sub
push
add
adc
mov
mov
ljmp
mov
cmp
testb
push
push
mov
adc
mov
cmp
mov
lods
mov
pop
push
cmp
mov
lea
pop
jbe
fsts
fidivrl
cmp
pop
and
negl
sub
xor
fmuls
stos
adc
mov
cmp
test
aad
cs
dec
mov
pop
imul
push
cmp
das
dec
dec
test
lock
test
dec
test
cli
dec
popa
scas
repz
in
iret
out
sbb
ss
lret
dec
fwait
push
adc
inc
lea
ret
cs
mov
ffreep
pop
sar
cwtl
bound
and
out
or
push
cmpsl
adc
daa
mov
clc
sbb
mov
mov
repz
xor
shll
jb
movsb
scas
jne
push
insb
cmp
jle
adc
loope
push
lea
jbe
stos
mov
dec
repnz
mov
sub
push
jg,pn
cmpl
push
mov
mov
xchg
stc
fcompl
xchg
loop
ss
dec
fistpll
push
enter
enter
adc
xchg
inc
push
xchg
sub
in
or
and
adcb
iret
push
sbbl
daa
ds
std
mov
lcall
add
adc
xor
aas
test
dec
mov
push
sub
xchg
test
adc
fs
sub
or
in
mov
pop
loopne
cvttps2pi
sub
or
inc
xor
leave
adc
cmp
mov
xor
je
mov
pop
fsubrl
scas
or
mov
fwait
loopne
sbb
out
or
outsl
sub
daa
adc
jae
cmp
sbb
ss
icebp
lret
or
ljmp
out
out
lea
push
pop
sbb
sub
data16
inc
xor
xor
andb
adc
jmp
fimuls
pusha
xchg
sbb
sub
sbb
jmp
dec
adc
rcrl
lret
sub
or
pop
jecxz
jns
jae
mov
stc
cmp
pop
push
xorb
sti
shrl
cmp
cmp
mov
fidivrs
ret
cli
sbb
in
pop
pop
adc
mov
mov
es
mov
mov
scas
adc
pop
mov
pop
pop
scas
sahf
xchg
out
cld
mov
or
test
test
lea
lods
in
cld
push
dec
bnd
adc
sti
mov
ljmp
cmp
sti
mov
fistpll
es
lock
mov
sub
xor
out
dec
sub
fsubl
outsb
cmp
inc
or
testb
test
rorb
push
mov
addr16
nop
adc
mov
mov
adc
pop
dec
out
inc
xchg
mov
in
dec
mov
or
sub
out
lret
sbb
repz
mov
mov
call
out
xor
jmp
xor
in
dec
mov
cli
lea
push
jns
xor
test
ret
leave
and
mov
clc
into
or
xor
leave
xlat
or
outsb
push
xor
dec
or
loopne
repnz
insl
std
call
sti
add
xchg
nop
shl
pushf
cs
mov
aad
add
negb
adc
dec
push
inc
pop
out
mov
mov
mov
dec
mov
mov
cmc
adc
loop
ret
mov
ljmp
fcompl
outsl
pop
sub
hlt
add
dec
xchg
addr16
mov
pop
jmp
jb
cs
negl
cmp
dec
cmp
xchg
jp
dec
pop
and
lcall
gs
adc
jp
cmp
mov
push
cs
or
push
in
cli
scas
mov
pop
pop
out
ja
add
mov
cs
out
and
pop
ret
dec
fdiv
jae
adc
push
mov
scas
pop
add
mov
xchg
mov
sub
mov
fdivr
xorb
inc
sub
add
xor
adc
nop
cmc
cs
and
sbb
or
xor
push
lret
aaa
xchg
ffree
outsb
lcall
repz
adc
xor
lcall
test
push
push
and
out
mov
or
adc
dec
rcl
lea
jge
scas
mov
in
adc
movsbl
jl
push
push
loopne
aam
mov
xor
mov
pop
ret
mov
mov
mov
out
xchg
add
mov
or
pusha
arpl
push
xchg
push
in
stc
xchg
fildll
sbbl
call
insb
inc
jg
mov
cmp
divl
pop
cmpsb
xchg
and
das
mov
jo
arpl
ljmp
cld
jo
adc
xor
cmp
dec
or
push
rolb
divb
fldpi
cmp
cmp
fcompl
test
jp
leave
pop
jns
push
in
cli
and
push
das
jg
sub
pop
clc
push
jb
ret
mov
adc
cld
add
shl
sub
or
fcompl
sbb
push
int
rcrb
jnp
movsb
cwtl
cmp
ljmp
ss
cmp
cmp
dec
push
pop
adc
ljmp
mov
decb
and
and
test
aad
repnz
adc
adc
xchg
popf
pop
and
push
or
sbb
sub
shrb
dec
xchg
les
data16
rcl
adc
les
scas
aas
ljmp
sbb
jecxz
inc
xor
lcall
push
push
inc
push
ja
xor
pop
mov
insb
aam
shll
pop
adc
loope
cs
jmp
mov
mov
gs
add
adc
push
push
add
or
or
aaa
into
jb
sbb
in
mov
popa
push
and
shl
ffree
cmpsl
mov
sti
dec
xchg
mov
and
enter
sbb
imul
push
pop
cmp
scas
xchg
dec
pop
test
push
sub
jmp
into
lss
cs
div
imul
xlat
cmp
add
push
sub
daa
ljmp
add
xor
scas
lret
xor
int3
int3
or
jmp
dec
arpl
adc
movsb
sete
or
ss
push
xchg
stos
mov
shll
lret
jno
inc
jecxz
int
add
pop
pusha
hlt
js
or
arpl
inc
stos
mov
inc
lods
stos
mov
adc
pop
scas
xchg
sub
or
mov
cmp
jnp
push
pop
xor
xchg
pop
fdivrs
test
or
fnstsw
push
cli
mov
sub
cmp
fisttpl
cmpsb
adc
mov
jno
sub
call
xchg
fwait
mov
adc
popa
ja
ret
cli
out
mov
sti
xor
stc
inc
ficoms
inc
push
or
mov
jbe
sbb
xor
sub
inc
dec
xchg
repz
mov
xchg
jne
mov
jbe
dec
scas
xchg
adc
loop
pop
stos
cmp
sbb
test
adc
add
or
push
mov
push
enter
int
or
into
orl
mov
mov
sti
out
sub
fsubrp
adc
sbb
mov
mov
jle
sahf
cmp
pop
jge
lret
jge
push
mov
mov
fisttps
icebp
mov
aaa
sbbl
or
cmp
dec
add
push
out
or
sbb
gs
mov
jmp
ror
in
sub
mov
shrl
adc
mov
jns
and
cltd
xchg
fiadds
fcmovbe
xchg
ss
inc
sub
enter
sbb
scas
push
dec
adc
sbb
mov
sbb
xor
leave
pop
and
mov
inc
xor
jne
icebp
mov
inc
mov
mov
inc
mov
addl
ljmp
icebp
sbb
push
ret
sti
cmp
lea
mov
add
sbb
mov
je
or
dec
jecxz
jge
lret
scas
push
or
mov
rolb
std
mov
test
mov
stc
mov
pop
sti
xchg
xchg
cs
xor
ja
sub
test
fisttps
inc
aas
out
mov
add
add
lods
push
pop
dec
mov
stc
pop
xor
pop
or
sub
jle
mov
es
pop
movaps
sti
mov
loop
outsl
adc
mov
xor
mov
in
hlt
inc
cli
xchg
popa
lret
inc
scas
out
shrl
negb
insb
std
mov
xchg
pop
sahf
push
aas
fwait
push
push
and
push
sbb
sbb
dec
add
mov
pop
jecxz
push
sub
cs
cltd
lcall
loope
pop
add
out
and
iret
push
jae
ds
insb
or
ljmp
xor
in
test
test
lea
xor
jb
lods
stc
pop
arpl
mov
cmp
sbb
sub
test
cli
imul
add
sbb
jmp
ror
imul
sti
shl
xchg
push
test
lea
lock
xchg
repz
in
mov
lock
sub
cs
xorl
loope
mov
add
mov
sbb
jmp
mov
out
sti
clc
das
and
xchg
and
aas
ret
lds
scas
mov
adc
call
add
sub
pop
inc
xchg
lea
pop
popa
mov
xor
fldenv
imul
mov
bound
sub
test
cmpsb
cmp
fidivrl
mov
ret
daa
repnz
int3
sub
jnp
gs
jae
mov
xchg
psadbw
imul
xchg
shlb
mov
cmc
sbb
xor
loop
sti
bound
and
fs
adc
bswap
aaa
scas
dec
out
divl
dec
inc
mov
scas
test
test
rcll
jmp
jns
test
sub
sub
cmp
dec
scas
xor
or
test
ja
mov
mov
mov
jmp
push
lea
push
pop
les
or
xchg
mov
add
jl
push
jmp
into
sub
jnp
or
pushf
sti
mov
or
rolb
repnz
lret
arpl
daa
fcompl
cmpsb
leave
sbb
cli
adc
lock
mov
mov
xchg
push
push
push
and
mov
aas
sub
jmp
and
lcall
ljmp
insl
jmp
cmp
mov
out
repz
jl
lea
lock
in
mov
lea
sbb
xlat
std
cmp
lea
inc
push
cld
adc
push
xchg
ss
cmp
lea
movsb
jle
jl
push
pop
loop
into
xchg
pop
cwtl
sub
jg
sub
inc
sbb
stc
pop
aas
in
pop
sbb
cmpsb
and
les
ljmp
push
lea
shr
ds
inc
int3
add
dec
mov
mov
fildll
pop
mov
in
add
xor
push
out
enter
into
jmp
mov
leave
out
push
cmc
add
jle
cltd
mov
ret
cld
mov
cmc
inc
scas
sahf
jbe
scas
cmp
loope
hlt
cmp
cmp
xor
mov
inc
push
pop
std
addl
mul
mov
in
push
test
loopne
xor
jmp
sti
dec
repnz
jg,pn
outsb
mov
cmp
cmpsb
cmp
xchg
push
or
imul
jmp
push
outsl
or
cld
movsb
pop
jae
pop
imul
aad
sbb
mov
and
mov
xchg
add
aam
iret
cmc
jg
inc
nop
mov
popa
mov
or
in
mov
mov
jp
cmp
fwait
ljmp
ss
es
into
mov
xor
ss
out
adc
dec
push
dec
popa
std
push
push
xchg
xchg
enter
xlat
inc
sbb
adc
iret
cmpsb
ss
lea
adc
push
xchg
jno
mov
shr
imul
xor
dec
xchg
repnz
mov
add
mov
outsl
jmp
fwait
push
bound
and
in
pop
sbb
fimuls
fisttpll
jp
push
and
jg
xchg
jmp
push
add
fwait
repz
imul
mov
out
inc
imul
push
mov
iret
mov
xchg
and
xor
stos
adc
or
lret
out
or
lods
or
jb
xchg
sbb
mov
push
xchg
repnz
add
xchg
dec
stos
sarl
inc
push
lock
sub
and
mov
push
stos
mov
mov
dec
arpl
mov
mov
out
xor
dec
pop
aaa
mov
addr16
xchg
add
sbb
push
bound
jmp
stos
inc
cli
stos
jecxz
and
in
insl
add
or
cmp
or
xchg
dec
mov
xchg
mov
ficoms
out
inc
ljmp
ljmp
cmc
aaa
or
es
sbb
aad
dec
jecxz
and
jns
inc
neg
in
mov
sub
imul
cmp
pop
int
data16
or
aas
ss
dec
test
lcall
push
cmpsb
fidivs
lret
mov
xchg
mov
sbb
xchg
popf
cmp
icebp
dec
dec
rcrb
clc
inc
inc
fwait
mov
cmp
arpl
out
test
inc
add
adc
jp
cmp
cwtl
sbb
pop
icebp
add
in
shll
or
adc
push
mov
push
ret
or
jecxz
jns
cmp
popa
leave
faddp
lds
jmp
adc
push
jno
mov
inc
pusha
sbb
ja
ret
push
and
rorl
in
or
jle
decb
loop
and
mov
fwait
push
insb
movsb
ss
sbb
mov
outsb
and
adc
jg
push
enter
shll
push
xchg
sub
jp
fisubs
cmc
add
or
mov
xchg
data16
cmp
ror
arpl
in
out
out
jecxz
jmp
cmp
outsb
push
jl
jnp
out
cld
xchg
sar
pop
inc
push
mov
ror
out
pop
sub
pop
cmp
cmp
cmp
add
xor
ret
les
inc
adc
clc
jmp
js
xchg
jno
or
mov
sub
ja
out
xchg
ss
xchg
inc
lock
add
mov
xchg
jle
or
cltd
mov
aas
dec
lea
add
pusha
jns
xchg
imul
mov
mov
xchg
lods
dec
push
lock
xchg
adc
mov
and
cmp
add
test
xchg
adc
fisubrl
mov
roll
sub
addb
repz
add
mov
jnp
pop
sub
sub
add
repnz
cli
dec
das
xor
sbb
mov
test
sub
movsb
xchg
in
jge
fdiv
lea
jno
sub
or
jg
adc
decb
enter
and
call
pop
dec
call
movsb
jns
into
cmc
into
mov
fidivrl
repnz
andl
dec
dec
xchg
sbbl
negl
mov
push
iret
pop
pop
jl
mov
inc
mov
daa
sti
or
and
and
popa
lret
out
inc
mov
fstps
push
cmp
mov
sub
mov
fs
mov
push
or
les
in
push
xchg
and
fbstp
jne
add
xor
sbb
aad
dec
mov
out
mov
icebp
vandnpd
jecxz
mov
lea
cmp
movsl
dec
jne
movsb
outsb
sbb
push
xor
mov
shrb
cli
sahf
cltd
inc
dec
iret
test
lcall
and
add
inc
divl
in
cwtl
push
pop
xchg
sbb
and
andb
jnp
in
add
sti
fidivrl
mov
cmpsb
lea
adc
adc
pop
mulb
adc
lea
mov
xchg
xor
xor
push
test
sbb
adc
and
mov
ror
lea
scas
aaa
push
cmp
cmp
stos
or
add
cmp
or
jnp
mov
cmpsb
pop
mov
add
xor
in
and
mov
xor
cs
leave
add
test
xchg
imul
xor
sub
rcrl
shlb
jg
push
jg
mov
std
das
addr16
movl
xor
sbb
inc
shrb
and
pop
xchg
in
testl
pop
clc
sub
mov
mov
xor
mov
cli
sub
test
mov
out
div
add
sub
enter
mov
dec
push
sahf
jecxz
aas
mov
mov
testl
sbb
mov
adc
mov
jmp
cltd
jb
imul
fs
cmpsl
push
testl
jb
cmpsl
add
out
mov
repnz
jno
and
imul
and
cmpl
lret
stos
or
cmp
jmp
in
jmp
fcmove
dec
and
dec
and
in
sti
mov
mov
repnz
cltd
jle
push
xchg
mov
inc
mov
fadds
mov
fisubrl
mov
cmp
sbb
or
mov
push
push
jnp,pn
pop
je
xor
outsb
por
out
mov
add
mov
ret
mov
add
in
fidivl
sub
ret
xchg
rorb
shll
cmp
mov
ss
imul
mov
xchg
jns
out
dec
sbb
ss
cli
sbb
push
or
dec
mov
subb
or
fistpll
dec
pusha
mov
adc
add
xchg
mov
mov
mov
rcll
mov
fdivr
dec
fistpll
add
lahf
mov
sahf
add
subl
jle
adc
mov
and
filds
bound
xchg
pushf
push
subl
test
add
or
insl
inc
adc
gs
aad
pop
cs
sub
mov
test
sbb
add
xor
adc
jle
clc
subb
test
push
pop
test
cmc
push
mov
addr16
dec
mov
lea
and
les
es
pop
xor
lods
daa
shll
lahf
cld
mov
jecxz
xor
xor
arpl
xor
xchg
or
push
pop
lods
or
lods
add
jmp
cmp
jecxz
sti
aas
cmp
pop
push
jle
jne
and
sbb
push
aas
cmp
je
sbb
ss
cli
movsl
push
ljmp
into
es
xchg
aas
std
test
jb
cmp
stos
inc
lea
in
sbb
out
cwtl
mov
push
mov
inc
sub
xchg
cmp
int3
subl
or
add
out
fisttpl
fs
cmpb
dec
test
outsl
data16
cltd
dec
add
imul
add
xor
sti
cmp
aaa
test
and
stos
mov
mov
imul
mov
pop
mov
cmp
jb
aaa
inc
jl
or
or
push
int
mov
mov
xchg
out
imul
icebp
or
mov
jae
mov
xor
mov
add
mov
rcrl
idivb
xlat
mov
sbb
pop
les
xor
cmp
and
sbb
cmp
or
mov
sub
int3
mov
mov
ss
ljmp
rolb
push
ret
mov
dec
jb
or
out
add
pop
loope
loope
mov
sub
sbb
add
xchg
push
jecxz
pop
leave
dec
sub
daa
fisubrs
ss
mov
jae
enter
adc
out
inc
lea
mov
xor
jecxz
jno
ret
je
inc
negb
inc
or
ret
sbb
adc
push
dec
xor
adc
sub
sub
mov
mov
push
xor
inc
cli
push
leave
xchg
aas
push
addl
ss
push
shrb
movsb
jns
or
inc
lea
lock
stos
push
cmp
inc
nop
add
je
add
adc
jg
into
ds
gs
fimull
lret
push
dec
adc
inc
mov
push
sbb
repnz
pop
mov
cmp
jle
daa
pop
dec
mov
ss
out
test
idivb
xchg
jl
mov
ss
cmp
sahf
xchg
daa
xor
xor
pop
imul
inc
lea
inc
lea
stos
mov
sahf
getsec
mov
int
jb
out
sbb
ret
lret
sbb
jb
cld
add
neg
mov
lock
or
call
pop
add
adc
das
lret
aaa
cs
movsl
testl
pop
or
repz
in
mov
repnz
add
cli
xor
ss
ficompl
sub
notb
cmp
cltd
popa
jno
dec
retw
adc
imul
sbb
pop
scas
sbb
aad
inc
lea
in
xchg
cmpsb
or
out
xor
out
mov
imul
inc
mov
sub
aaa
sub
es
mov
in
cmpsl
cltd
inc
mov
jmp
sar
xchg
dec
pop
jno
xchg
sub
sbb
or
jg
and
pop
fcmovnb
loope
sbb
pop
adc
popa
inc
or
aam
lea
scas
fisubrs
es
fwait
jmp
adc
xor
imul
es
mov
jbe
mov
dec
subb
notb
sbb
ss
sub
push
lods
and
jmp
pop
sbb
jnp
dec
incl
divb
push
repz
inc
push
pop
fwait
je
inc
sub
sbb
dec
adc
setb
in
pop
scas
pop
ljmp
lcall
lock
sub
mov
xchg
adc
jbe
inc
jo
xor
xchg
cmp
mov
arpl
xchg
sbb
jae
jbe
dec
and
clc
xor
js
ds
cli
in
hlt
pop
lds
lods
or
cmp
cmpsl
pop
fwait
popf
out
stc
rcll
pop
or
pop
mov
daa
lea
lods
mov
scas
push
xchg
cmp
jmp
sbb
sbb
pop
cltd
out
movsl
mov
das
inc
pop
xchg
shrl
outsb
xor
aaa
test
call
or
jns
sub
mov
inc
add
jp
icebp
int
das
cmc
ljmp
or
into
out
shll
mov
inc
das
lret
or
pop
lock
mov
pop
imul
cli
xor
cmp
cmp
adc
lea
add
pop
mov
inc
sub
hlt
lea
mov
xor
jmp
push
xor
fwait
xchg
sti
jno
outsb
or
sbb
imul
addl
mov
idivb
or
fs
shld
cld
icebp
sqrtps
or
int3
testb
xchg
mov
out
aaa
xor
mov
inc
jb
xor
or
fsubrl
lea
sbb
cmp
in
jb
notb
cmc
stos
cmpsb
push
xor
jae
rclb
or
cmp
lret
or
dec
les
push
sbb
mov
pop
test
ret
mov
push
push
mov
iret
add
js
jo
jb
dec
xchg
mov
cmpsb
ja
push
sub
out
cmp
cltd
addb
notl
sbb
push
cmp
cmp
cli
cs
cmc
ds
inc
loop
jecxz
dec
mov
fwait
iret
fxch
sbb
fisttps
inc
lahf
cs
sbb
repnz
out
popf
cmp
push
and
mov
or
cmp
popa
xor
lcall
xchg
pusha
xor
fistpl
mulb
add
ficoms
or
mov
popf
xchg
sbb
imul
pop
pop
ss
notb
es
add
mov
into
or
outsb
add
fiaddl
and
out
pushf
dec
sub
dec
mov
in
mov
sbb
adc
add
push
hlt
shl
fstpt
push
sbb
adc
orl
or
mov
call
repz
push
inc
jns
push
fnstenv
sub
jg
subb
xchg
ret
add
push
dec
into
jg
ds
mov
les
jl
inc
js
loope
gs
xor
xchg
adc
ljmp
mov
mov
popf
cs
lcall
cmp
jnp
mov
mov
test
ds
negl
jmp
mov
dec
lods
add
mov
out
idivl
or
pop
repz
jmp
and
mov
or
dec
fdiv
mov
cmp
cmpsb
xor
jbe
adc
repz
xor
xchg
add
adc
les
int
repz
xchg
sub
movsb
mov
mov
dec
rcrl
pandn
sbb
cli
jmp
mov
xor
xchg
cli
inc
push
push
jnp
pop
inc
pop
xchg
aad
mov
clc
hlt
negb
adc
mov
lret
pop
notl
out
dec
frstor
insl
adc
ja
imul
dec
mov
aas
lds
mov
out
cltd
push
pop
mov
ja
mov
sbb
jecxz
mov
push
ficoms
xor
cmp
inc
push
sub
mov
adc
outsl
hlt
mov
pop
arpl
rorb
mov
stos
mov
add
inc
or
dec
sbb
out
push
nop
movsl
imul
sarl
out
or
lea
mov
mov
sbb
and
pop
daa
dec
cmc
push
fnstenv
cs
mov
aam
pop
or
or
lret
adc
test
dec
repnz
std
enter
jo
repnz
sub
pop
sub
xor
or
mov
imul
cmp
dec
jo
cltd
xchg
repz
mov
mov
cmp
adc
pop
sti
push
inc
xor
jecxz
leave
jecxz
jne
cmp
out
fcom
orb
adc
pop
clc
in
cmp
cmp
add
or
pusha
in
call
push
repnz
mov
jecxz
xchg
cmpb
movsl
mov
xor
insb
jne
repnz
mov
pop
repnz
dec
sbb
xchg
jmp
mov
or
mov
mov
lea
sub
mov
test
mov
cmp
xchg
or
lock
lea
ficoms
fiadds
pop
mov
insb
lea
mov
push
orl
or
pminsw
movsb
lds
jae
jmp
cltd
or
int3
add
jae
call
adc
jns
mov
imul
aas
xor
cwtl
dec
add
sbb
sub
and
pop
xchg
stc
or
mov
jnp
or
sbb
scas
lahf
or
das
jb
add
pop
jge
filds
outsb
xor
cs
or
lahf
sub
lock
and
xchg
or
cld
push
mov
mov
std
and
xor
mov
or
stos
cld
sub
mov
mov
or
ret
sub
das
mov
push
push
xchg
cli
sahf
ret
mov
cmp
ljmp
rep
mov
mov
mov
iret
cmp
or
std
xor
shl
in
cmp
lea
mov
mov
lret
cmpsl
or
data16
in
in
push
jb
mov
fsubl
fidivrs
pop
movsb
xchg
mov
xchg
stc
ljmp
sbb
xchg
pop
add
mov
fiadds
xor
cs
xorl
lods
push
mov
fdivrs
jae
nop
jo
cli
lea
jae
push
add
adc
mov
or
mov
shl
pop
jbe
movsb
sbb
or
outsl
push
sub
sub
cmp
sbb
jmp
mov
repz
aaa
aas
xor
loop
pop
mov
or
adcb
out
xor
out
insb
dec
stos
or
ss
mov
insl
mov
mov
pop
mov
loope
sub
xor
lcall
or
cmpsb
stos
mov
int3
lahf
dec
cmp
into
testl
add
lock
push
cmc
jnp
sbb
add
out
add
push
or
jge
insb
push
cmp
mov
shll
scas
cmp
fistpll
andl
dec
adc
push
or
bound
out
out
sbb
sahf
insb
ficomps
xor
das
sub
ret
cs
cli
popa
test
repnz
sub
cmp
cltd
mov
push
xchg
pop
jle
xor
popa
xor
lods
fwait
cli
bound
test
out
pop
divl
sbb
shll
sub
xor
dec
adc
mov
cmp
test
mov
lret
fcoml
cmp
xor
jecxz
in
and
lea
mov
out
push
dec
lret
add
mov
adc
mov
push
ljmp
xor
mov
arpl
inc
insl
or
sub
cmpsl
push
notb
inc
cmp
push
or
xor
pop
sbb
adc
fwait
std
in
pop
xor
mov
or
aam
xor
ficompl
mov
dec
negb
cwtl
xor
jbe
mov
enter
arpl
dec
xor
jg
mov
jmp
xchg
pop
lods
mov
push
icebp
mov
stos
push
push
xchg
ret
ret
xchg
lea
notb
addr16
fisubs
adc
push
push
cmp
lret
xor
cmpsl
push
or
push
sbb
mov
out
cmp
cwtl
add
xor
lret
aas
mov
mov
hlt
pop
shrl
loopne
aad
push
mov
adcl
inc
in
std
pop
sahf
pop
imul
dec
add
mov
fnsave
jmp
out
or
out
cmpb
jp
nop
imul
out
push
das
push
push
and
dec
pushf
mov
lods
cmpsb
push
inc
or
test
add
jmp
inc
in
mov
cmp
jb
pop
push
cmpsb
xchg
xor
cmp
rcll
mov
into
cwtl
movb
pop
dec
inc
inc
dec
inc
gs
popa
in
je
rcrl
mov
sub
pushf
inc
out
mov
mov
jnp
call
andl
prefetch
or
daa
js
ret
jo
mov
inc
or
mov
inc
xchg
push
sub
test
xorl
mov
fisubl
movb
imul
mov
roll
loop
stos
shl
sti
xchg
cld
sub
out
cmc
fmul
or
repz
sbb
xor
or
lret
push
out
xchg
mov
dec
cmp
dec
add
jbe
dec
in
jns
xor
add
imul
dec
popa
fs
and
test
lret
and
loope
sub
push
shl
in
imulb
repz
dec
jae
test
dec
stc
jns
aas
fldenv
dec
mov
loopne
scas
xor
mov
or
push
fimull
out
scas
xchg
lea
xchg
dec
xor
adc
iret
cmp
xlat
cmpb
imul
rcr
cmp
scas
xor
lods
cmp
data16
mov
xchg
adc
xor
jb
mov
adc
xor
adc
lea
xchg
repnz
mov
mov
je
or
lods
pop
pop
aaa
es
ljmp
pop
stos
add
push
lods
inc
mov
and
sbb
ljmp
lea
xchg
out
in
ret
pop
mov
jmp
out
aad
sahf
dec
or
and
adcb
lret
mov
or
push
xor
out
ficomps
inc
test
std
ds
loope
xchg
outsb
call
adc
or
ss
or
fldl
mov
das
fs
lods
lock
mov
push
sbb
imul
loop
das
repnz
arpl
mov
hlt
mov
sub
lret
outsb
adc
mov
xchg
popa
mov
mov
daa
sub
jae
push
xor
test
test
addr16
sub
xchg
mov
or
push
test
fs
iret
jecxz
dec
sahf
cmp
incb
pop
sbb
ss
arpl
push
bound
sbb
notb
divl
xchg
dec
icebp
pop
hlt
pop
stos
cmp
or
lret
sub
pop
out
cwtl
inc
addr16
adcl
out
stos
pop
in
adc
mov
ret
test
popf
inc
xchg
popl
imul
mov
jle
sub
xor
ss
mov
adc
int3
ljmp
adc
inc
aaa
sbb
push
adc
scas
sahf
add
sti
movb
pop
mov
ret
push
pop
fldt
dec
mov
inc
aaa
outsl
es
cmp
stos
push
sbb
sbb
ja
xor
dec
pop
sbb
mov
adc
test
mov
fmuls
sti
lret
test
dec
movsl
inc
into
xchg
jno
test
aaa
mov
repnz
cli
nop
clc
dec
mov
jns
push
pop
or
xchg
add
hlt
loopne
sbb
jno
fildll
mov
push
push
fimull
adc
stos
sub
popf
jnp
or
xchg
in
leave
ss
sub
lret
out
inc
inc
adc
cwtl
cli
xor
aas
dec
mov
mov
cmp
mov
and
inc
or
xor
or
out
dec
repz
or
mov
inc
cmpsl
shlb
fiadds
mov
cmp
cld
roll
dec
fidivrs
sub
pop
push
inc
mov
mov
jbe
xor
add
shl
pop
sub
mov
mov
sub
imul
lret
mov
cs
push
xchg
ret
xlat
scas
push
divb
loop
pop
xor
jge
mov
cld
fs
es
cmp
mov
adc
repz
xchg
mov
add
call
scas
sub
and
ds
push
ja,pt
adc
pop
ficompl
sub
cmpsl
add
fcompl
daa
sbb
dec
xchg
movsl
xor
ret
enter
lods
iret
or
and
mulb
pop
or
add
xor
mov
jecxz
nop
push
iret
xor
repnz
cmp
lret
xchg
mov
dec
fists
hlt
jns
or
lods
push
ss
adc
sub
aas
mov
mov
and
and
or
mov
inc
push
inc
push
jmp
es
mov
mov
or
popa
pop
fwait
push
and
dec
xchg
repnz
sub
ret
enter
ja
mov
add
loop
mov
lods
mov
testb
icebp
lea
jno
out
adc
mov
stc
xchg
push
cmp
je
jp
adcl
ja
fwait
shlb
adc
ljmp
xchg
mov
mov
das
jecxz
lret
xor
cmc
leave
nop
or
scas
mov
xor
inc
out
popf
jns
ret
dec
mov
stos
in
scas
inc
push
cltd
mov
in
cwtl
aas
imul
sbb
es
push
nop
adc
sub
mov
in
mov
push
pop
xchg
icebp
paddsb
cmp
test
mov
fstpl
cs
dec
add
adc
test
out
sub
cli
inc
mov
lcall
push
lea
inc
enter
or
jp
or
push
nop
inc
sub
sub
lret
cltd
sub
dec
xor
test
shr
out
mov
sbb
into
or
out
cwtl
pop
test
jno
in
mov
in
leave
mov
repz
js
mov
mov
into
nop
out
push
or
xchg
adc
xor
loope
push
and
sub
pop
mov
movsl
or
repz
shlb
mov
sar
mov
add
add
mov
in
cld
or
sbb
mov
ljmp
loop
jno
aaa
bound
enter
cmp
sbb
repnz
sub
cs
xchg
insl
mov
scas
sbb
mov
xor
das
pop
push
and
sub
adc
pop
sbb
in
das
orl
out
push
or
push
fnstcw
fwait
or
cmp
call
lret
xlat
cld
mov
pop
xchg
pop
xchg
fsubrs
das
mov
sub
std
mov
sbbb
cwtl
inc
and
jbe
mov
shlb
pop
outsb
les
shlb
push
popf
lret
xchg
cld
xchg
fs
xor
cmp
aas
sub
mov
popa
push
jbe
cmp
sub
jbe
data16
mov
inc
push
cmp
pcmpgtb
mov
fimull
es
lods
es
or
sti
shlb
nop
cmp
xchg
gs
adc
testb
paddd
cld
cli
dec
mov
cltd
fldcw
fiadds
dec
cmc
adcb
loop
xor
push
push
cmp
mov
adc
inc
ss
inc
jg
ljmp
lea
mov
and
inc
xor
add
push
push
loopne
xchg
xor
jnp
repz
mov
cs
imul
test
in
or
mov
adc
and
ss
mov
mov
pop
push
push
lret
jp
testl
cmc
cmpsb
pop
mov
std
push
cwtl
in
dec
gs
insb
pop
push
cmp
push
xchg
in
test
mov
lds
into
jp
push
mov
arpl
in
adc
cli
lods
and
out
imul
leave
add
mov
sbb
inc
hlt
scas
mov
inc
xchg
notb
jne
fwait
jp
jmp
orl
daa
pop
adc
or
adcb
fidivl
stos
lcall
cmp
jp
cmp
sub
xor
xor
test
or
xorl
cmc
pop
repz
adcb
syscall
cs
push
outsb
adc
mov
mov
lcall
push
xchg
inc
mov
mov
addr16
mov
lcall
bound
lock
je
cmpsb
movsl
sub
push
xchg
lret
iret
rcrl
imul
mov
cmp
jns
dec
cmc
aas
push
and
and
lea
cmp
sub
mov
pop
notb
add
pop
lret
in
loop
inc
fidivs
and
or
inc
inc
dec
je
pop
mov
push
stos
ret
xchg
lods
xor
sbb
clc
mov
sbb
inc
pop
daa
lods
cmp
pop
fs
push
in
jae
lret
jecxz
add
jle
cmp
outsb
call
or
into
call
and
lods
adc
cmp
adc
jo
and
les
das
cmpsb
fidivrs
inc
mov
rcll
push
dec
ret
negb
mov
cmp
jp
cmp
push
xchg
mov
repz
inc
xchg
cwtl
adc
pop
add
mov
sub
or
jg
dec
pop
lock
xor
dec
push
scas
or
inc
jg
call
xchg
or
ss
and
push
xchg
xchg
jge
inc
cs
sbb
pop
pushl
dec
mov
sbb
add
dec
jno
jnp
cmp
sahf
mov
xchg
lcall
or
jns
sub
dec
repnz
stos
out
imul
ror
xor
cli
cmp
xchg
mov
mov
out
mov
inc
add
push
jbe
js
mov
adc
clc
arpl
cmp
jo
xchg
sbb
iret
jmp
aas
inc
xchg
notl
lds
mov
push
and
shrl
pop
repz
test
sti
jmp
push
inc
rcrb
out
nop
mov
inc
cmp
int
fisubrs
mov
jnp
sahf
pop
imul
pop
mov
sahf
sub
push
inc
pushf
mov
icebp
fcoms
orl
in
enter
pop
add
inc
lret
fwait
test
in
jbe
adc
sbbl
fs
pushf
xor
ret
sub
cmpl
mov
and
dec
decl
mov
mov
rorb
out
testb
xor
popa
clc
dec
xchg
jne
dec
stc
popf
std
lods
into
mov
cmp
fnstsw
inc
cld
cmp
pop
pusha
fisttpll
mov
cmpsb
or
or
mov
jns
ljmp
sbb
insl
aad
cmc
btr
pop
and
dec
pop
dec
adc
stos
mov
daa
sub
int3
or
in
push
sub
fimuls
adc
aad
xlat
lods
and
mov
shlb
imul
xor
stos
pop
call
cmp
xor
test
mov
lret
jp
sbb
cmp
repnz
stc
out
loopne
addr16
mov
divb
xor
gs
daa
sub
cs
repnz
sub
and
pop
test
bound
push
add
jmp
pop
jmp
lahf
repnz
stos
bound
jp
test
xchg
or
inc
jns
cmp
outsb
adc
pusha
sbb
ss
xor
sbb
cmp
pop
jne
add
cmp
dec
fadds
imul
jo
in
icebp
loope
cli
pop
cmp
negl
push
or
jmp
sub
pop
pop
mov
push
aaa
and
ljmp
xor
jbe
in
out
pop
arpl
ss
pop
dec
adc
call
sbb
pop
cmpsb
pop
hlt
scas
pop
js
mov
fistpl
cwtl
ss
int3
cmp
in
jbe
xchg
mov
pop
mov
test
xlat
and
gs
push
loopne
lock
adc
lock
cld
jnp
jl
test
shll
pusha
dec
mov
sahf
fnop
cmpsl
xchg
daa
nop
lret
cli
rcll
jg
push
or
aaa
ljmp
or
ljmp
inc
dec
repz
ret
mov
sarb
or
or
lods
push
push
mov
and
aam
xchg
stos
xlat
imul
push
sub
pop
and
sti
pusha
clc
push
add
push
std
mov
lret
sbb
lea
xchg
sbb
ss
adc
or
leave
jl
jp
test
jp
into
dec
sarl
xchg
insl
mov
fcoml
and
jnp
push
jmp
xchg
jg
mov
xchg
test
inc
lcall
mov
mov
inc
aas
aam
inc
sbb
sub
in
jnp
mov
dec
xchg
call
inc
xor
push
mov
ja
lods
out
or
inc
mov
jmp
push
loopne
adc
mov
rol
call
fs
sub
icebp
xor
cmp
add
pop
or
sbb
setne
mov
jp
movsb
inc
pop
mov
sbb
jle
inc
xchg
out
mov
inc
adc
andl
or
jl
jne
into
mov
dec
jb
jns
out
inc
das
out
jmp
xor
add
mov
es
hlt
fiadds
sbb
or
cmp
sbb
jmp
mov
mov
or
mov
pop
mov
and
ljmp
add
js
mov
out
cli
adc
lret
jmp
test
lahf
sub
xchg
mov
pop
push
int
or
add
xchg
rcl
pop
lock
sbb
pop
hlt
mov
or
sbb
and
mov
out
cmp
cli
inc
stos
iret
jmp
fidivs
pop
mov
push
or
adcl
femms
mov
push
std
mov
sbb
xchg
loop
fdivrs
mov
inc
test
sbb
vmwrite
mov
mov
xor
mov
test
push
jg
add
and
shll
lcall
or
shll
sbb
sub
test
jmp
lret
and
mov
mov
sub
push
or
push
ljmp
mov
push
pop
and
jb
subl
mov
push
sbb
mov
cmp
fldcw
in
in
or
push
mov
pop
rcrb
dec
xchg
je
push
mov
lea
jbe
icebp
push
jg
aad
fidivrl
out
mov
aas
xor
ja
push
ds
out
or
arpl
les
lods
js
mov
fildll
xchg
xchg
loopne
add
ss
xor
sub
arpl
cltd
push
nop
popa
ds
jmp
inc
or
dec
sub
jl
scas
out
pop
fdivs
xor
js
mov
add
cs
add
fwait
cmp
sahf
notb
icebp
cmpsb
repnz
xchg
into
lock
sti
in
add
lea
mov
leave
das
xchg
and
mov
pop
js
mov
in
les
cmp
dec
sbb
push
adc
je
mov
jbe
xor
test
mov
inc
mov
mov
clc
pop
repnz
jns
xchg
insl
add
aas
inc
lock
movsb
lods
cmp
outsb
add
sahf
aam
cmp
or
jecxz
dec
pop
cmpsl
and
sbbl
icebp
jae
mov
cmp
lret
sub
out
ss
arpl
and
iret
sub
mov
in
icebp
pop
das
mov
sti
aam
xor
or
popl
aam
mov
or
inc
mov
out
mov
xor
xor
jne
push
aaa
jmp
dec
das
es
rcr
mov
push
test
testl
mov
mov
lret
das
repnz
jb
push
pop
push
enter
outsl
mov
and
pop
cs
mov
ss
jg
cmp
inc
push
sbb
pop
fcompl
xlat
imul
or
pop
mov
ljmp
adc
sbb
hlt
jbe
xchg
sbb
or
xor
cltd
sub
jmp
or
pop
movsl
out
cmpsb
sub
add
xchg
xchg
mov
mov
cmp
cs
idivb
movsb
hlt
les
lods
notl
aas
push
stc
dec
insb
cltd
cmpsl
fstl
pop
cli
add
mov
pop
pushf
dec
xlat
call
add
mov
jnp
jge
stos
cltd
pop
jp
in
sbb
mov
xlat
xchg
jns
test
cltd
mov
mov
sub
and
setns
add
adc
lcall
ds
mov
jns
movsb
sbb
add
adcl
iret
jl
jnp
fisttpll
and
jae
jle
push
push
jno
ljmp
mov
xor
cli
cli
mov
icebp
scas
call
je
addl
fdivrs
cmpb
ret
inc
aaa
ljmp
mov
xchg
sbb
enter
push
mov
cmp
cmp
in
add
stos
addr16
cld
popa
testb
subb
or
push
jp
outsb
xchg
lea
xor
adc
jmp
or
ror
stos
testb
or
fcoms
mov
adc
jbe
xchg
inc
cmp
sbb
or
repz
inc
das
xor
jp,pn
into
pusha
sub
sbb
scas
iret
lds
sbb
dec
nop
outsb
jmp
int
test
aaa
sbb
sbb
idivl
pusha
push
sbb
stc
mov
test
add
cmp
mov
mov
adc
cmc
mov
adc
cmp
jg
je
xchg
pusha
inc
orl
push
aas
lret
xchg
add
sbb
mov
xchg
dec
gs
test
xchg
mov
in
mov
insb
dec
push
repnz
repnz
jns
test
jo
mov
lea
lcall
mov
aam
icebp
sar
add
out
shll
lea
jmp
push
sbb
sti
rorb
or
adc
pop
rol
movb
fsubs
cld
into
jbe
push
js
push
fsub
adc
repz
les
cmpb
ss
les
stos
mov
sbb
sub
ret
sub
shlb
jg
add
jmp
or
inc
and
pusha
popf
adc
cmpb
popa
inc
aas
ja
pop
popa
popf
fwait
es
lods
int3
lea
xor
or
push
add
mov
add
or
inc
loop
xchg
loopne
push
mov
jno
out
push
fwait
imul
or
es
cli
fdivrl
or
adc
pop
sbb
fistps
xchg
hlt
xchg
mov
and
in
sub
sarl
ss
or
gs
inc
jle
push
mov
sti
sahf
mov
mov
shll
rep
js
iret
jne
add
mov
pop
dec
adc
out
fcoml
cmp
mov
xchg
repz
ss
movsb
pusha
test
call
lret
lea
loop
mov
adc
mov
jle
mov
xchg
mov
jno
add
dec
push
pop
xchg
mov
dec
out
in
add
lods
ljmp
pop
idivl
mov
sbb
jp
hlt
movsb
lret
mov
xchg
or
outsb
mov
data16
sbb
in
cmp
ss
mov
repnz
mov
and
je
and
ret
add
inc
sub
mov
imul
push
aam
inc
mov
pop
lods
jb
adcb
inc
inc
jbe
dec
mov
xchg
sub
sbb
ss
in
cmpb
xlat
ds
cmp
dec
decb
sbb
bound
notb
push
pop
push
adc
fs
shlb
pop
icebp
xor
mov
pop
jmp
ds
pop
push
push
subl
xorb
insb
cmp
push
mov
fimull
sbb
mov
and
pop
mov
jb
pop
jnp
lcall
ficoms
ljmp
mov
fidivl
shrl
cmpl
xor
mov
inc
jb
cmp
add
inc
movsl
sbb
jl
fists
das
lea
or
sub
inc
mov
lret
push
enter
enter
xchg
jae
inc
push
test
cmp
out
xlat
push
cmpsl
xchg
inc
mov
cmpsb
ja
xor
mov
pmuludq
xchg
fisubrs
stos
sub
or
xchg
xor
rcll
mov
lock
gs
xchg
xchg
addr16
xchg
scas
sahf
pusha
xchg
push
sbb
ljmp
cli
mov
push
xchg
xchg
cwtl
xlat
cmp
outsb
divb
jne
lods
dec
pop
in
enter
sbb
ret
or
xchg
rclb
idivb
data16
loop
adc
sbb
rcl
xor
test
mov
xchg
or
jne
cld
stos
addb
push
adc
int3
cmp
xchg
sbb
lds
out
ror
out
mov
mov
sbb
inc
xor
loop
test
sub
dec
pop
popf
add
mov
adc
icebp
into
movsb
add
mov
hlt
mov
nop
xchg
imul
rcl
cmp
or
ljmp
push
sbb
lea
andb
cli
shrl
fimull
lret
xor
imul
divl
in
fxch
mov
out
sub
push
fimull
push
ds
dec
xchg
loopne
adc
and
jg
pop
into
jl
fucomip
ffree
test
adc
cli
xor
stos
das
arpl
aaa
push
pop
jae
lods
cmpsl
mov
xor
xchg
pop
push
mov
and
cmp
xor
rcrb
pop
xchg
push
repz
inc
lcall
lcall
leave
sar
and
adc
outsb
sub
ror
fwait
ljmp
imul
fdivr
enter
and
sub
mov
movsb
inc
es
std
sbb
ret
jnp
cmp
cmp
lock
mov
sbb
pop
ss
sbb
xor
jg
and
cmp
shlb
xor
inc
sarl
cli
adc
xor
sbb
jmp
shlb
scas
out
cmp
setae
mov
rorl
fdivrs
cmp
cmp
mov
pop
pop
dec
pop
sub
sub
mov
fs
xlat
or
dec
xchg
in
add
xchg
ljmp
fmull
pop
fisubl
push
movsb
cmp
mov
jecxz
popf
mov
jb
or
pop
cmpsb
and
jmp
inc
sbb
or
xorb
jae
rcl
mov
mov
push
lods
out
shrb
movsl
xchg
lea
xchg
mov
jge
push
fmull
xor
or
pop
movsb
enter
movsb
pop
jne
push
out
xor
xor
cs
xor
adc
pop
jl
shrl
cld
push
in
or
stos
jg
popa
jl
gs
leave
out
sub
xorb
fdivrl
jg
sub
xchg
inc
daa
lcall
int3
test
pop
scas
cmp
jnp
push
mov
jmp
incl
or
cmc
add
insb
and
cld
outsb
inc
push
stos
pop
cmp
imul
xchg
jle
xchg
sbb
out
adc
sarb
jae
or
and
mov
xor
sbb
shr
xchg
sahf
jg
call
mov
mov
jle
cs
sbb
lret
ret
shr
mov
inc
shlb
sbb
scas
add
inc
mov
xor
sub
ljmp
scas
pop
push
mov
aaa
pop
jp
sub
and
sbbl
and
push
jg
js
dec
cli
xchg
and
test
mov
pop
mov
add
lea
jg
inc
daa
mov
xchg
push
stos
shll
mov
test
loope
xchg
neg
out
mov
arpl
push
fndisi(8087
aam
into
mov
jne
js
js
pushl
xchg
mov
mov
shll
pop
xorb
out
jns
jmp
mov
stos
fs
cmp
cmp
mov
movb
cs
sbb
lahf
mov
pop
pop
flds
shrb
fidivs
push
aas
sbbl
mov
adc
push
dec
imul
inc
add
pop
or
cmp
inc
sbb
and
repnz
xor
test
and
orl
xchg
stos
ljmp
inc
ret
int3
jle
cli
nop
jmp
lods
mov
mov
ret
or
pop
testl
data16
xor
mov
fisttps
mov
addr16
pop
imul
push
std
mov
jmp
jnp
or
sbb
pop
rcrb
fcomps
dec
addr16
xor
xchg
cmc
lcall
insb
push
lar
mov
das
xchg
pop
es
ja,pn
jnp
pop
or
in
loopne
sbbl
incb
out
aaa
cltd
mov
adc
lods
add
jo
imul
xchg
shll
dec
popa
mov
fisubrs
and
mov
ret
aam
shlb
xchg
and
adc
pop
sub
out
dec
jg
mov
shr
je
lods
jl
ljmp
or
cltd
sbb
inc
aas
sbb
sahf
dec
loop
push
xor
jno
cmc
iret
mov
jp
push
sub
or
push
idivl
cltd
stc
add
mov
mov
cmpsl
pop
or
sub
mov
or
jmp
mov
mov
pop
jp
ss
xor
cmp
dec
fwait
push
std
mov
outsb
xchg
push
orb
and
stos
or
shl
loop
lret
adc
daa
jmp
push
xor
out
fmuls
push
mov
jno
jnp
push
les
cltd
inc
push
adc
fwait
ljmp
mov
mov
out
out
mov
mov
sub
pusha
or
fwait
test
pusha
std
mov
cmpsb
cltd
or
mov
mov
ret
cmp
push
mov
xor
sbb
and
in
scas
testb
adc
mov
jo
or
add
push
testl
cld
loopne
je
jmp
pop
roll
mov
jnp
jle
sbb
iret
stc
mov
lcall
mov
pop
dec
mov
push
cli
jg
mov
jg
aaa
mov
mov
cmpb
lret
ret
subl
test
sahf
test
repnz
mov
in
xlat
xchg
mov
scas
jmp
push
lods
mov
scas
je
lea
sti
aas
ljmp
add
push
ret
inc
out
adc
or
xchg
xchg
pop
mov
call
push
ljmp
mov
push
adc
popf
dec
popf
add
push
es
pop
push
jp
std
ja
popa
xlat
in
jp
sbb
xchg
push
or
decb
xchg
adc
stos
fcoms
xchg
scas
mov
out
rcrb
imulb
xchg
mov
sub
xor
adc
mov
inc
into
adc
dec
cmp
mov
ja
xchg
fs
add
dec
imul
cmp
sbb
pop
xor
into
imul
add
mov
test
iret
jl
push
sbb
mov
sbb
fwait
push
mov
lret
sbb
in
mov
xor
ss
in
subb
push
cmp
inc
push
xor
push
inc
fwait
pop
cmc
xor
xorb
cmpsb
adc
adc
pop
aad
je
loope
lods
jbe
jbe
adc
fwait
push
add
pop
mov
sbb
lock
ds
sub
adc
test
mov
nop
sub
andl
xor
pop
repz
andb
pop
push
push
mov
xor
pop
xchg
test
int
or
stos
inc
inc
adc
mov
mov
sti
sbb
cmp
mov
xchg
dec
fs
mov
into
mov
mov
aas
outsb
cli
inc
test
test
iret
mov
pop
das
add
and
test
add
sti
cltd
pusha
or
pop
mov
inc
pop
adc
pusha
pushl
les
add
ljmp
dec
mov
cli
movsb
xlat
test
dec
adc
clc
fcoms
dec
mov
aaa
aaa
jl
int3
mov
jno
and
jge
repnz
push
test
cwtl
enter
out
pop
mov
enter
sub
das
mov
cmp
aaa
xor
mov
push
mov
jp
or
push
popa
pop
jl
loopne
repz
mov
mov
pop
fildll
mov
mov
cmpb
push
mov
xor
mov
pop
adcl
enter
xor
imul
dec
mov
dec
pop
stos
fdivr
push
sbb
lea
push
xor
inc
push
mov
sti
mov
xchg
imulb
jmp
jg
fldt
adc
adc
rcl
out
fildl
cwtl
push
daa
js
je
or
cli
xchg
test
leave
pop
add
jg
repnz
nop
mov
adc
fiaddl
js
mov
push
inc
sti
imul
negb
and
ror
cmpl
cmp
rorl
sahf
add
pop
xchg
push
scas
arpl
xor
subb
jnp
enter
mov
out
add
ss
xchg
mov
cmp
or
lds
jnp
and
stc
lds
fst
mov
jmp
sbb
std
lods
rorb
addr16
imul
or
stc
pop
xchg
cmp
imul
mov
movsb
in
xor
int
ljmp
leave
push
popf
dec
or
push
sub
mov
add
pusha
or
dec
inc
lock
jp
mov
mul
out
add
cmc
pop
call
push
add
jmp
xchg
inc
cmp
imul
mov
adc
lock
into
lea
pop
mov
lods
sbb
and
jno
mov
inc
or
adc
mov
inc
in
add
or
sbb
cmp
inc
sub
pop
mov
or
mov
daa
lahf
dec
or
pop
lds
divl
daa
cmc
enter
cmpsl
mov
andl
jnp
fiadds
jg
loope
loop
loopne
push
mov
lcall
adcl
mov
fdivs
daa
mov
les
es
popa
pusha
int3
jae
inc
cmpl
repnz
cli
ljmp
cmp
or
imul
sub
dec
cmp
stos
insb
sub
imul
das
inc
or
dec
and
jo
imul
bound
test
loop
lods
or
test
dec
and
inc
rorb
dec
mov
mov
lods
jmp
sbb
lock
lds
movsl
cmp
aaa
and
cmp
bound
mov
sub
cs
ljmp
inc
idivb
jmp
sub
es
outsl
sub
mov
ds
out
and
test
es
enter
sub
mov
jno
sub
cltd
or
adc
inc
mov
cmp
arpl
sbb
dec
pop
push
hlt
sub
pushf
stos
cld
sti
ljmp
mov
and
add
enter
push
xor
nop
cs
and
add
dec
cs
ds
pop
xor
cmp
ljmp
cmpsl
lahf
push
mov
loopne
xor
adc
pop
in
push
rorl
or
or
mov
mov
or
into
ljmp
dec
out
lar
in
mov
add
dec
add
scas
fwait
test
sbb
mov
dec
or
mov
cli
lds
adc
out
imul
ljmp
mov
push
cmp
pop
test
lods
pop
adc
jbe
sub
clc
outsb
pop
es
mov
out
cmp
jb
push
and
push
mov
cmp
dec
or
into
stos
cmp
or
push
decl
out
jnp
in
cmp
sub
hlt
or
repnz
mov
shrl
xchg
push
pop
cli
or
dec
or
adc
inc
jbe
push
scas
push
into
dec
rep
mov
cmp
sub
stos
dec
push
fisttpl
scas
xor
add
iret
insl
ds
outsb
es
into
out
adc
enter
arpl
test
ror
stos
adc
lret
test
ret
mov
add
sbb
lret
and
stos
dec
jp
add
push
cmp
cmpsl
fisubl
jg
fwait
and
int3
push
jnp
cmpsl
sub
push
je
stos
ja
mov
push
jp
add
push
and
sbb
mov
out
imul
jle
ljmp
das
jp
mov
lret
ljmp
mov
push
push
sub
out
mov
xor
cli
idivb
out
or
cli
dec
push
sub
sub
stos
into
or
dec
lods
push
push
mov
sub
aaa
fisubl
cmp
stos
shrl
dec
loopne
scas
lods
inc
mov
fnstcw
es
jb
pop
sub
mov
icebp
jle
xor
xorb
sub
sub
scas
outsb
inc
insl
jae
outsb
outsl
daa
sub
in
push
in
stc
cmp
add
xor
js
or
fdivr
imul
mov
inc
xor
call
outsb
outsw
in
or
lock
inc
or
or
push
dec
cmp
dec
movsb
cmp
out
mov
pop
aaa
jg
adc
cltd
cld
inc
xor
xor
cld
daa
dec
mov
out
push
mov
enter
xor
cwtl
mov
fsubrs
shrl
and
push
lods
push
sbb
jb
pop
sub
mov
sub
sub
testl
aad
int
test
and
add
cltd
mov
or
in
mov
or
jb
orb
ljmp
push
mov
mov
into
mov
xor
lock
inc
ss
lahf
mov
out
mov
dec
inc
mov
sub
call
ljmp
daa
mov
ss
or
dec
imul
or
bound
cmc
mov
lret
or
inc
or
or
mov
outsb
into
fidivl
lahf
sub
stos
sub
mov
cmp
jmp
stos
cmp
outsb
sub
push
test
pop
out
adc
sub
mov
pop
ss
pop
ljmp
cmp
sub
xchg
mov
nop
inc
xchg
and
pop
ja
imul
mov
mov
ss
or
subb
xor
test
adc
ljmp
std
sub
ss
shr
sbb
sub
fwait
ljmp
bound
sub
add
cmpsb
push
cmp
sbb
stos
and
cmpsb
push
sub
jns
ljmp
mov
movsb
test
adc
jo
bound
cmp
pushf
adc
in
imul
inc
mov
adc
xchg
sbb
shrl
sub
psubsb
cmp
push
orb
lock
jg
mov
xlat
sbb
out
stc
cmp
outsb
out
sbb
sbb
lods
adc
jbe
scas
pop
mov
jnp
add
sub
cmp
pop
mov
jns
dec
sub
xchg
jbe
iret
rcll
dec
gs
daa
ret
push
pop
mov
or
js
or
sbb
cmp
fisttpl
mov
mov
sti
es
into
or
mov
sahf
cli
cmpl
hlt
sub
or
cmp
test
and
mov
cmp
mov
fstps
in
cmpsb
orl
or
adc
fucomi
jge
dec
outsb
or
repnz
in
or
mov
cmp
push
cs
sbb
jbe
shll
test
inc
mov
ljmp
fcoml
aas
dec
jnp
mov
pcmpeqd
mov
ds
testl
aam
sub
cmp
cmpsl
push
cli
push
loope
push
mov
push
sbb
jae
mov
mov
dec
mov
or
sbb
divl
es
and
fsubs
pop
mov
ret
repz
jb
repnz
stos
xor
scas
mov
ss
std
xlat
adc
fimull
dec
xor
fwait
jnp
adc
mov
ja
add
or
dec
jnp
mov
pop
scas
dec
and
mov
sbb
jle
imul
lret
orl
mov
out
mov
lds
mov
jp
pop
out
add
dec
push
cmpsb
test
inc
xor
repnz
stos
outsb
dec
movsb
dec
dec
push
imul
scas
mov
iret
dec
into
js
adc
xor
mov
xor
out
fwait
pushf
mov
jmp
mov
pop
xchg
push
lret
jle
and
out
inc
mov
cmp
ret
xor
adc
addr16
xchg
push
pushl
leave
cmp
lcall
or
ja
stos
adc
xor
in
xor
cmpsl
sbb
xchg
mov
mov
sbb
lcall
aaa
xchg
push
pop
rep
cmc
insl
lods
cmp
sbb
adc
es
scas
mov
jmp
mov
xor
lods
int
rcll
bound
push
push
sbb
ss
das
movsb
jg
mov
ljmp
ja
arpl
imulb
test
les
adc
stc
sub
mov
stos
into
xor
push
aam
fdecstp
jb
jne
lret
stos
inc
dec
mov
ljmp
enter
fistpll
lahf
ja
mov
enter
mov
mov
lret
mov
ficoms
aaa
cli
rcl
cmpsl
mov
xchg
sahf
sbb
negl
aas
xor
jmp
cmpsb
xchg
fildl
popf
xchg
xchg
xchg
das
inc
ja
sti
xchg
stos
sbb
mov
pop
ljmp
imul
repnz
aas
mov
xor
cwtl
pop
inc
je
or
cmp
cmp
xchg
mov
mov
adc
fwait
or
cmp
xor
lret
mov
inc
sub
push
push
mov
mov
lds
lods
scas
dec
imull
cmp
xchg
test
push
jnp
push
and
cmp
pop
sub
ds
mov
mov
add
movsb
stos
hlt
mov
cmp
or
out
sahf
popf
cmp
xchg
mov
add
out
adc
pop
aas
das
xchg
jb
push
sbb
push
or
ss
and
or
repnz
or
mov
cmp
and
or
mov
sub
repz
in
and
and
fadd
sub
pop
dec
out
cmp
xchg
scas
ljmp
mov
fcmovnb
inc
xchg
jmp
es
inc
das
jp
jle
pop
out
stos
insb
or
dec
or
push
fs
pop
xor
out
jg
jmp
jge
sbb
xlat
dec
imul
push
call
loop
adc
cmp
mov
or
call
adc
pop
lahf
lret
gs
cs
or
cmp
dec
idivl
add
mov
pop
pop
pop
push
sbb
imul
lods
cmp
sbb
xor
test
push
or
push
ds
loope
xor
push
inc
jmp
cmp
pop
stc
mov
scas
or
sbb
jbe
mov
pushf
fldcw
or
lods
xchg
stc
add
pop
sti
xor
fstpl
rclb
or
inc
push
push
fcmove
or
mov
inc
lods
sbb
insl
mov
pop
push
cmp
mov
adc
xor
aas
or
jecxz
or
jno
xor
mov
xor
and
mov
cmp
punpckhdq
cmc
lds
xor
dec
rorb
scas
add
jmp
adc
and
nop
or
and
movsb
aam
arpl
inc
dec
stos
mov
or
mov
dec
lds
push
sbb
sub
les
stos
jecxz
mov
mov
xor
xchg
call
ficompl
xor
sub
jns
jmp
xchg
mov
mull
loopne
imul
and
addr16
or
adc
add
ja
adc
jecxz
xchg
push
cld
dec
cmp
jmp
xchg
mov
mov
imull
test
push
xchg
jo
es
adc
xchg
outsl
mov
fstpt
leave
push
sbb
adc
jge
cmp
idivb
mov
pop
es
repz
fistps
and
cwtl
jge
xor
daa
lods
dec
add
mov
cltd
xchg
xchg
cmc
jge
test
sbb
xchg
push
sahf
adc
push
ss
adc
xchg
ficomps
mov
pop
leave
fcmove
cmp
mov
mov
push
cmp
cmp
mov
outsl
int3
fcmove
mov
bound
addb
inc
scas
pop
dec
leave
xchg
jo
push
lret
adc
stos
jo
sti
pusha
mov
mov
mov
mov
dec
pop
shrl
into
fidivs
xchg
and
cmpsl
hlt
insl
scas
ss
dec
or
testl
and
mov
popa
lds
sbb
xor
jmp
frstor
and
cmp
mov
inc
cmp
or
cmpsl
cmp
mov
dec
jecxz
jg
stos
xchg
inc
pop
lods
test
xchg
test
sbb
sbb
mov
pop
dec
repz
ss
dec
mov
arpl
mov
adc
dec
mov
decl
xchg
mov
xor
xor
lcall
lcall
or
and
inc
ffreep
jecxz
push
inc
xor
or
add
repnz
test
xchg
mov
aas
sub
push
xchg
cmp
jecxz
lcall
fs
dec
push
nop
lcall
inc
into
sbb
cmp
xor
rcll
adc
cmp
or
addps
add
jg
daa
cli
sub
mov
jb
stos
inc
mov
mov
sbb
in
lcall
push
mov
dec
nop
mov
adc
xor
in
daa
lock
test
test
sub
and
jb
out
mov
add
idivl
shlb
xor
push
mov
pushf
and
hlt
xchg
push
pop
inc
push
or
jp
or
aas
cli
mov
lcall
pop
std
push
out
repnz
inc
pop
inc
fildll
push
mov
inc
inc
imul
dec
repnz
out
loope
adc
pop
inc
add
jns
popa
mov
adc
or
lret
mov
cs
icebp
call
jp,pn
outsl
inc
in
adc
mov
sub
movsl
dec
fdivl
sub
insl
sub
and
dec
sti
mov
sbb
add
add
lret
into
popa
or
aas
sub
mov
sti
mov
pop
jnp
mov
xor
sub
lret
sbb
mov
fisubl
enter
push
pop
mov
enter
xchg
jl
scas
sbb
leave
jnp
adc
sbb
mov
mov
and
xor
mov
jg
dec
jae
add
or
lea
nop
adc
pop
push
decb
test
fimull
push
cmp
mov
das
je
jp
xchg
sti
gs
imul
mov
nop
or
stc
fidivrs
or
sub
or
inc
hlt
pop
icebp
rclb
add
cmp
cmp
cmp
xchg
out
sti
adc
and
jns
out
cmp
mov
cmpsb
xor
mov
enter
movsl
push
sub
repz
ja
sbb
cmp
push
cmc
push
stc
insl
or
inc
int3
outsb
cmp
pop
cmp
adcl
pop
xor
xor
sub
out
ficoms
fs
daa
pop
cmpsb
jae
insl
ss
xor
cltd
cmp
sbb
add
movq
sbb
sbb
jnp
xchg
inc
push
cltd
stos
dec
sbb
ds
lea
in
xor
xor
stc
or
cmp
in
xchg
adc
cmp
inc
jmp
fdivrp
mov
in
lret
jmp
adc
inc
pusha
stos
lcall
mov
dec
adc
push
mov
clc
stos
in
popf
dec
xchg
hlt
jne
scas
push
adc
inc
mov
add
push
fnsave
or
jecxz
jae
dec
dec
mov
mov
push
cmpl
fisubrl
pop
in
push
push
or
mov
push
pop
or
pop
pop
test
mov
mov
sbb
fcoms
mov
jge
xor
xlat
mov
out
mov
fiaddl
addr16
jecxz
arpl
fcomip
pop
rclb
lock
gs
pop
jno
inc
xor
rol
sub
out
cmp
dec
mov
dec
incb
xor
imul
push
mov
mov
int
les
xchg
mov
rcl
mov
xor
lods
repnz
xchg
lret
cltd
dec
fstp
or
test
jge
sbb
sahf
iret
fidivrs
ljmp
add
or
pop
mov
fdivs
aad
dec
ljmp
pop
or
push
push
mov
js
xchg
into
push
or
and
stc
aad
cmp
mov
jp
inc
pop
dec
mov
test
clc
add
bound
mov
mov
pop
inc
lock
inc
ud0
and
push
jmp
adc
stos
arpl
mov
lods
push
pop
or
mov
cmp
cmp
and
jecxz
cmp
mov
xor
in
pusha
pop
jns
sub
and
enter
pop
dec
out
mov
dec
pushf
mov
mov
out
das
stc
cmp
jbe
xchg
inc
or
or
shlb
in
xor
jae
xchg
ds
ss
pushf
clc
push
loopne
push
and
push
xor
outsl
fcmovnb
test
sub
aaa
push
xor
xor
cli
sub
jns
das
aad
push
jns
dec
dec
mov
pushf
push
xchg
cmp
inc
pop
add
rorl
outsl
ljmp
sarl
dec
and
or
rcrl
dec
lods
dec
ss
mov
or
xor
or
mov
in
xor
cli
jae
sbb
inc
cmpsb
in
gs
inc
iret
es
lret
cltd
inc
mov
pusha
sub
mov
cmp
adc
nop
lea
mov
xchg
push
ljmp
lret
sbb
pop
out
adc
or
shlb
les
add
stc
and
filds
adc
in
push
or
xchg
testb
or
mov
popf
repnz
out
mov
xchg
ret
dec
ljmp
repnz
bound
fstpl
push
xor
adc
pop
imul
push
je
mov
xchg
decl
ror
cmp
sahf
cmpl
cmp
out
and
and
lods
es
lcall
fdivrl
repz
xor
dec
mov
mov
lret
mov
mov
inc
sqrtps
xlat
loopne
aam
pop
pop
movsb
adc
inc
push
cld
cli
pop
mov
adc
aam
pop
mov
fcmovnb
mov
ja
movsl
repz
insb
mov
add
jnp
xchg
daa
jae
pushf
xor
pop
imul
cli
jmp
shrb
out
and
movsb
adc
mov
aas
xchg
sarb
mov
loopne
cmp
into
sub
movsb
cli
outsb
push
mov
push
sbb
mov
and
mov
adc
xor
add
ficompl
es
icebp
mov
in
mov
adc
dec
iret
ja
mov
or
adc
or
pop
cld
out
ficompl
xchg
sbb
dec
orb
lea
ljmp
sub
sub
lock
movb
xor
and
sbb
push
push
and
cmc
cmpsb
mov
rcrb
ds
fistpll
pop
add
lods
rolb
or
add
dec
call
rclb
or
inc
cmp
aaa
ljmp
or
aam
cmp
addr16
mov
or
xor
mov
movsb
cli
negl
cli
mov
je
clc
cmp
ds
lea
daa
out
sbb
negl
xlat
pop
mov
mov
pusha
sub
lods
dec
jle
mulb
insb
fucomi
sbb
inc
cmp
jg
rsqrtps
int
lret
out
fbld
movsb
or
xor
mov
shr
ljmp
icebp
int3
arpl
add
clc
cli
nop
jge
push
fcmovb
cmc
push
ds
nop
add
push
ficomps
clc
add
mov
sbb
je
jp
cmp
cmp
enter
ret
pop
or
xor
sub
adc
pop
pop
adc
stos
cmp
pop
or
daa
in
leave
mov
xchg
mov
dec
fdivrl
clc
in
push
adc
cmp
or
sub
mov
mov
adc
mov
inc
jns
icebp
lods
jnp
lock
mov
or
sarl
xchg
inc
jo
shlb
push
mull
sbb
inc
push
xchg
ljmp
xor
cmp
sbb
clc
arpl
and
dec
imul
push
cmpl
inc
xor
push
mov
sbb
mov
pop
mov
and
idivl
loope
cmp
and
neg
sub
jb
cld
std
aaa
leave
fdivs
pop
aaa
mov
inc
call
cmovne
push
or
or
mov
dec
jnp
clc
jae
cwtl
dec
lcall
xchg
sub
ljmp
mov
push
adc
cli
xchg
nop
mov
int3
cli
sbb
in
sbb
pop
in
jmp
mov
nop
insb
adc
ficoms
loope
adc
cmp
jo
lcall
cwtl
xorl
scas
and
lret
addr16
das
nop
mov
lcall
mov
test
out
xchg
pop
push
sbb
aas
stc
pop
push
xchg
sub
pop
xor
arpl
arpl
mov
adcl
enter
xor
stc
filds
dec
pop
insl
lods
cmpsb
iret
push
das
add
pushf
scas
arpl
mov
cli
or
mov
jp
nop
mov
insl
jge
sti
mov
xor
addr16
sub
inc
mov
clc
paddusw
cltd
dec
push
or
xor
jns
ja
push
cmc
dec
mov
cltd
mov
push
fcoml
jp
or
movsl
jmp
ret
mov
sbb
push
aad
leave
aaa
fstp
fisttpll
aaa
inc
add
out
popa
pop
mov
stos
notl
pusha
fwait
out
xchg
xor
mov
cmp
test
pushf
xor
mov
testb
jmp
or
lods
pusha
push
sbb
call
das
push
cli
popa
push
or
test
sbb
xchg
jo
xchg
jne
mov
sbb
jg
jno
ljmp
idivb
xchg
test
push
push
call
fsub
pop
ss
cmp
or
lods
sbb
test
clc
adc
and
stos
mov
inc
bnd
lods
jmp
scas
leavew
or
in
outsb
mov
dec
fistps
mov
sbb
and
or
cmp
inc
or
loop
push
pop
xchg
jno
cli
xor
inc
push
stos
mov
and
popf
cltd
or
int3
mov
inc
in
sbb
xor
sub
cmp
sarl
jle
adc
movsb
mov
add
lcall
jecxz
pop
mov
xchg
xchg
jg
cltd
adc
xor
dec
xor
sbb
inc
adcl
xor
sub
mov
and
push
pusha
xchg
jne
mov
out
add
mov
sahf
sarl
lds
jg
adc
adc
imul
repz
adc
or
rclb
fimull
mov
in
and
dec
xchg
lds
inc
je
add
pop
push
sbb
out
aad
xor
sub
mov
test
test
ja
or
int3
and
test
lea
push
mov
out
insb
cmp
mov
adc
and
movsl
adc
cmp
fistps
or
xor
or
test
push
inc
pop
jnp
ret
push
dec
xchg
and
add
xchg
inc
sub
sub
dec
lcall
jo
pop
ss
sbb
push
shll
push
sahf
inc
imul
in
inc
lcall
mov
jbe
add
cmp
push
mov
ret
mov
out
sbb
fdivs
xchg
push
push
ror
cmp
push
jmp
jbe
jle
mov
sahf
stos
push
sbb
sbb
ret
aaa
jp
cltd
jg
mov
ret
pusha
stos
push
sub
sub
pop
sbb
jmp
jg
or
lret
pop
sbb
mov
out
test
fistpll
sbb
and
cmpsl
sbb
fwait
mov
cmp
shrl
cmp
mov
or
icebp
push
xor
jl
ljmp
pop
cmp
or
jb
and
mov
or
fcoms
roll
adc
jne
mov
mov
gs
dec
jle
out
decb
rorb
mov
inc
or
aas
dec
lretw
fidivrs
adc
pop
sub
repz
lret
cli
mov
jno
lret
adc
ja
sub
lea
mov
or
stos
push
xchg
adc
js
mov
jne
lret
push
sub
lret
filds
xor
or
pop
push
mov
xor
xor
adc
xor
clc
jne
sbb
add
cmpsl
aas
inc
leave
int3
es
sahf
cmp
push
cmc
mov
scas
mov
je
jno
and
push
int3
mov
jge
movsb
int3
inc
fcmovu
cli
out
jns
xchg
or
xor
imul
pop
leave
pop
mov
inc
or
mov
cltd
arpl
add
ret
in
repnz
inc
ret
cmp
mov
mov
lret
or
fiadds
push
dec
cwtl
nop
jmp
jge
faddl
movsl
mov
int3
dec
pop
mov
outsb
clc
scas
lret
outsb
mov
sbb
call
inc
jmp
not
lock
cmpb
ret
mov
pop
ds
fwait
xchg
icebp
xlat
call
dec
aas
jmp
cmpsb
jno
aaa
cli
adc
lods
rorl
mov
aam
lds
xor
mov
mov
popa
dec
setns
ficompl
and
adc
sbb
test
add
faddl
push
fimuls
xchg
imul
ffreep
push
cli
es
fisubrs
adc
stos
sub
inc
dec
pop
lea
cltd
cli
add
test
mov
lods
cli
pop
dec
cli
mov
adc
cmp
mov
add
or
sub
add
adc
addr16
mul
push
or
in
mov
cwtl
cmp
or
in
pop
fisubrl
inc
out
ljmp
jne
lret
cli
cmpsl
test
callw
out
dec
xor
in
inc
mov
or
adc
sbb
pop
push
mov
cmp
shlb
loopne
cmp
pusha
xor
sub
or
dec
push
movsb
or
icebp
sub
pop
repz
cs
cld
or
or
xor
sub
in
jnp
jns
cld
icebp
xchg
ret
or
repz
fsubr
xchg
jo
lcall
and
and
fbld
jg
orl
push
sbb
cmp
dec
inc
mov
hlt
mov
mov
mov
iret
lret
pop
sub
pop
fimuls
mov
test
arpl
inc
movsl
or
daa
aas
pop
adc
aam
aas
push
jnp
out
and
and
jnp
fbstp
xor
mov
jnp
mov
add
aad
add
sbb
nop
sub
mov
insb
push
dec
adc
xchg
loope
jb
iret
sbb
dec
push
testb
fnstcw
jnp
and
mov
pop
cli
cmp
mov
mov
jecxz
scas
inc
xchg
sub
arpl
pop
mov
xor
add
pop
and
outsl
out
pop
fs
test
add
hlt
rorl
ds
imul
dec
repnz
inc
lret
mov
jg
subl
movsl
xor
fsubl
icebp
cmc
dec
adc
or
fldl
xchg
stos
add
lcall
mov
mov
cmc
std
cmp
mov
addr16
mov
dec
movsb
lcall
testb
sbb
cmpsb
dec
arpl
push
sbbl
inc
je
inc
imul
push
ja
mov
jg
xchg
imul
out
lods
jecxz
enter
sub
mov
cmp
psadbw
mov
or
add
cmp
ljmp
mov
mov
sar
out
push
mov
mov
jo
jg
cli
jg
lods
xchg
xor
dec
or
sub
lret
pop
mov
dec
popf
push
mov
decb
mov
int3
cmp
ficoms
movsb
or
cmp
pop
push
xchg
mov
mov
cmp
dec
or
das
mov
jp
mov
mov
cmp
sti
mov
in
testl
or
hlt
shlb
add
cmp
insl
dec
call
jns
inc
sub
or
mov
cli
shlb
push
pop
and
jg
int
fs
or
arpl
jno
clc
pushl
pop
mov
and
jmp
inc
xor
jnp
ret
push
lret
in
jmp
inc
ljmp
sbb
inc
pop
xlat
fisttpl
pop
sbb
or
inc
sbb
sbb
xchg
push
dec
enter
or
fisubl
push
loop
or
cwtl
adc
xchg
pop
jb,pt
aad
scas
push
call
mov
fisubrs
add
cmc
hlt
xlat
or
movsb
cmp
leave
mov
decl
adc
mov
inc
into
jl
add
movsl
inc
lahf
cli
push
mov
incb
push
jae
in
ret
mov
push
call
call
mov
pop
mov
lahf
out
and
es
fldcw
push
out
sarb
cmpsl
fwait
arpl
ljmp
mov
or
jg
out
sub
sub
rcll
adc
rorb
nop
push
in
pushf
jmp
pop
mov
mov
xchg
cmp
adc
mov
fcmovbe
js
xchg
mov
out
cmp
dec
mov
das
cwtl
nop
pop
jae
testb
dec
sbb
jns
mov
movsl
sub
add
or
iret
push
mov
gs
repz
jl
cmp
testl
xchg
mov
insb
jb
or
sbb
shr
cmp
mov
pop
add
mov
cmp
orl
mov
xorb
jno
push
cmp
xchg
les
jmp
lcall
jb
scas
xor
xchg
out
pop
push
adc
je
pop
mov
add
adc
sub
lock
out
loop
sub
mov
add
cmp
inc
testl
popf
and
packssdw
jnp,pt
test
inc
push
or
mov
scas
or
jb
hlt
adc
mov
insb
lret
pop
ret
shrb
pop
mull
out
add
pop
xor
jnp
xchg
sbb
inc
lea
ficomps
idivb
cmpsb
mov
xor
subb
xchg
je
push
addr16
jnp
out
cmpsb
fs
cmpsb
into
jg
jbe,pn
pop
cwtl
pusha
pop
imul
out
xor
sbb
jno
mov
add
dec
popf
mov
mov
add
cmp
pop
and
fadd
cmp
ret
sub
inc
pop
mov
pop
cld
sub
subl
pop
fsubrl
in
xor
and
sbb
add
call
cmp
fs
gs
dec
fisttps
sti
jnp
mov
push
out
cmp
mov
xor
fldl
add
imul
sbb
cmpsl
add
jge
leave
xchg
mov
cli
fsubrp
ret
rclb
sub
jg
inc
push
sbb
outsb
sbb
push
test
push
stc
or
mov
stc
jmp
inc
sbb
or
xor
add
out
cmp
leave
or
or
fldcw
lret
or
xor
add
xor
fisttpl
jp
ljmp
mov
lret
ja
mov
mov
stos
push
pop
xorl
out
jecxz,pn
scas
and
test
arpl
jnp
cmp
test
push
leave
sub
fists
repnz
mov
jmp
mov
jnp
mov
mov
lret
imul
sbb
idivl
inc
mov
push
ffree
ret
gs
imul
aad
movsl
idivl
push
lock
in
repz
adc
jae
das
pop
inc
push
je
cmp
or
or
cwtl
int
stos
das
loopne
sbb
dec
inc
jbe
imul
and
fsts
dec
mov
shrl
jmp
aas
adc
out
popa
sbb
cltd
xor
arpl
jmp
data16
mov
cmpsl
or
adcb
out
sbb
jo
add
lea
pop
xchg
imul
ss
test
addr16
pop
lret
xor
inc
or
lret
data16
xlat
inc
movsb
jp
in
sbb
mov
out
inc
sbb
lret
arpl
jbe
mov
xchg
cmp
jle
cmp
es
addr16
int3
xor
xor
pusha
inc
orl
lods
adc
aaa
es
pop
push
cmc
insl
dec
xor
movsb
jmp
add
insb
test
stos
mov
add
cmp
xor
and
mov
stos
jnp
repnz
pop
icebp
daa
ret
sub
nop
xor
sbb
sti
in
or
sbb
xchg
cmp
jae
sahf
or
gs
push
sub
cs
xor
loop
sbb
xor
shrl
push
lock
ljmp
loope
jae
jo
or
jmp
adc
popa
mov
xchg
jo
mov
fisubrs
lret
xchg
xor
mov
leave
adc
xchg
sahf
jmp
sbb
pop
jbe
testb
sbb
mov
iret
das
stos
test
push
ja
repnz
and
mov
cltd
stos
ficompl
inc
lds
mov
push
mov
and
pop
pop
mov
and
and
mov
mov
dec
pop
xchg
push
adc
xchg
sbb
ss
shr
sbb
cli
adc
movsl
into
pop
cli
add
push
cwtl
jno
stc
cmp
incl
mov
jl
and
in
inc
jne
dec
adc
dec
and
xchg
push
mov
int3
mov
or
je
xlat
jo
mov
mov
pop
push
inc
xchg
fscale
insl
ja
lcall
mov
fidivl
stos
dec
roll
out
mov
adc
mov
jbe
inc
xchg
mov
sbb
pop
clc
sbb
insl
sub
cmp
inc
lret
test
pop
mov
cmp
mov
mov
sbb
dec
jno
repnz
add
mov
mov
cmpl
jnp
int
mov
jg
xor
imul
pop
inc
insb
push
jb
cmp
mov
lret
fisubrl
add
adc
cltd
push
test
push
cld
inc
dec
in
into
sbb
jnp
lea
int
add
test
fistps
push
pop
lods
das
xor
jp
jnp
imul
scas
ret
std
inc
xor
fneni(8087
pop
push
orl
jg
mov
jl
pop
insb
cmc
cltd
rcrl
or
pop
test
and
test
jg
xchg
adc
adc
jnp
pop
xor
lret
pop
jle
mov
mov
xchg
jno
cmpsl
add
sbb
fmuls
idivb
inc
outsb
cld
mov
jmp
pop
pop
mov
leave
cvtps2pd
mov
fidivrl
pop
mov
and
test
dec
rorb
and
add
movsl
jb
cli
fistl
movsb
inc
or
jne
out
movsb
or
cld
scas
adc
dec
lea
sbb
pop
loopne
inc
dec
xchg
test
in
ljmp
dec
inc
out
jmp
mov
stc
sahf
xchg
call
test
mov
mov
and
dec
pop
or
fcmovnbe
cmp
pushf
dec
inc
adc
dec
adc
call
sbb
repz
or
dec
hlt
and
je
popl
js
xchg
notb
mov
jecxz
pop
xor
push
aaa
stos
test
or
call
cwtl
xor
lcall
mov
bound
mov
repnz
xchg
clc
pusha
or
leave
mov
jnp
or
push
mov
sub
fimuls
dec
add
mov
xchg
cmp
out
sti
testl
dec
cmp
jmp
xor
push
mov
dec
loopne
test
fcos
sti
push
pop
mov
push
cwtl
xchg
scas
mov
inc
mov
xchg
lock
fimull
stc
sub
and
mov
mov
jmp
out
sub
lret
pop
dec
data16
cmp
out
clc
sbb
xlat
cmp
xor
arpl
fwait
dec
mov
ret
jg
das
out
in
jns
sbb
sbb
in
pop
mov
sub
es
jne
repnz
orb
rclb
out
ds
cmp
or
cmpsb
push
repz
xlat
xor
pop
scas
or
cmp
pop
stos
inc
dec
fcmove
and
xchg
in
dec
mov
cld
mov
jmp
ret
repz
rcrl
jbe
sbb
adc
test
dec
popa
adcb
add
inc
sbb
mov
jecxz
jno
push
dec
jnp
popa
and
adc
cmp
pop
xchg
cmp
lds
fidivs
mov
out
push
dec
pop
lret
pop
out
adc
adc
imul
mov
call
mov
pop
cmp
cmpsb
xchg
mov
push
mov
test
repnz
outsl
and
jecxz
dec
xchg
jnp
insb
dec
or
inc
out
cmp
stc
aaa
rorl
mov
arpl
or
loop
cli
out
mov
mov
movsl
sub
out
aaa
mov
lahf
mov
mov
mov
ljmp
add
adc
inc
sbb
mov
loopne
in
dec
loope
jns
xor
ret
add
jae
cltd
inc
pop
jbe
jmp
dec
in
fwait
and
mov
cli
push
in
or
repnz
mov
loopne
call
adc
fs
adc
add
mov
sbb
sbb
and
cli
mov
mov
adc
js
out
mov
dec
dec
push
sbb
imul
addr16
adc
push
out
out
dec
cmp
or
addr16
adc
orl
sarl
dec
dec
push
mov
inc
jl
ljmp
mov
enter
dec
mov
push
sahf
hlt
cli
push
testb
sbb
mov
pop
out
daa
mov
adc
inc
push
adc
pop
pop
xchg
inc
imul
push
sub
mov
imul
dec
push
stc
inc
and
mov
call
rorb
xchg
lds
leave
mov
inc
cli
jecxz
addl
int
push
mov
jecxz
xchg
xchg
lock
inc
jae
cs
adc
or
add
push
xor
rolb
cmp
cld
cs
mov
push
push
mov
pushw
xchg
sub
inc
push
xor
dec
push
loop
or
and
in
cmp
inc
lret
xor
test
stos
leave
or
xchg
adc
jg
sub
inc
dec
ffree
pop
lods
xor
jne
jb
clc
subb
cmp
jg
fdivrp
xor
and
mov
aaa
and
push
or
xlat
adcl
push
scas
sbb
lret
jae
or
pop
xor
pop
int
mov
mov
js
mov
dec
lret
lods
call
ljmp
adc
mov
add
or
mov
mov
je
cmp
jmp
mov
jecxz
push
ss
or
xor
sbb
and
lret
push
cmp
test
lods
add
fisubl
out
jae
cmp
push
mov
movsb
add
lea
loopne
push
cmp
cmpsb
cli
dec
xchg
sbb
out
pop
sub
test
pop
pop
jnp
ljmp
testb
mov
push
inc
call
fcoml
clc
cmovnp
sahf
adc
ret
push
test
arpl
xor
sub
call
xchg
sbb
test
push
jne
push
dec
fwait
mov
dec
scas
xor
cmp
insl
sub
pop
add
mov
push
dec
mov
jno
daa
xor
or
cmp
cs
iret
sbb
mov
fwait
cwtl
stos
xor
jle
scas
out
std
ds
jnp
or
ljmp
or
aas
test
icebp
faddl
into
out
pop
cmp
fisubrl
push
mov
add
jp
add
in
lock
pshufw
sbb
mov
cwtl
mov
mov
repnz
cmc
ret
arpl
jg
repz
insb
scas
pop
call
and
enter
fs
jl
shlb
in
jnp
stos
adc
sbb
pusha
fsin
xchg
imul
imul
imul
les
ljmp
loopne
mov
cmp
push
sbb
sub
stos
int3
in
jg
je
mov
sub
mov
push
in
out
or
push
rcll
sub
xchg
mov
xchg
xor
xchg
or
test
cmp
cmp
sar
stc
adc
xor
xor
adc
mov
mov
push
jmp
or
andb
pop
in
inc
mov
sbb
mov
sbb
pop
loopne
int
imul
xor
mov
cmp
push
add
sti
cs
pop
sub
or
adc
jg
bound
popa
adc
mov
psubusw
add
pop
mov
cmpsb
sbb
cmp
jl
cmp
mov
jl
repnz
and
aas
cli
stos
ficoml
jp
testb
inc
jp
xchg
jo
xor
add
sbb
cmp
sub
pusha
fnsave
fldl
es
jno
xchg
and
lcall
or
and
mov
inc
mov
fs
scas
xchg
fs
cmp
cmp
sti
fidivl
mov
pop
stos
in
sub
adc
inc
testl
loopne
pop
cmp
mov
std
int3
mov
push
sub
int
xchg
dec
jge
xchg
inc
xchg
imul
cs
andl
mov
push
bound
push
leave
fmulp
in
in
loopne
mov
mov
lahf
jge
jg
or
xchg
inc
push
adc
sbb
pop
or
mov
mov
pop
add
movsl
or
pop
pop
or
movsl
insb
or
sahf
repz
jmp
aas
outsb
xchg
pop
das
push
mov
pop
fimull
jae
out
cltd
xor
cmp
aas
out
in
movsb
lea
shll
jp
outsb
pusha
lahf
xor
pop
lods
daa
add
push
cli
adc
mov
cmp
movsb
mov
jnp
inc
mov
pop
ja
loop
lods
inc
mov
dec
jns
cmp
inc
jo
dec
pop
lea
sub
icebp
enter
or
lcall
mov
loopne
call
mov
adc
imul
cwtl
xor
ja
testl
bound
loop
out
loop
imul
stos
push
mov
push
jne
pslld
out
xor
dec
jnp
jno
lret
clts
inc
push
pop
push
mov
lret
int3
ljmp
xchg
mov
mov
jge
xor
cli
in
clc
fidivrl
xchg
popf
xchg
push
inc
pop
dec
lret
mov
jno
add
or
jmp
mov
xor
mov
xlat
cmp
add
pop
enter
pop
scas
or
add
adc
dec
cmp
jb
dec
push
cmp
xchg
xlat
inc
leave
mov
mov
xor
or
cmpsl
mov
cmc
ss
dec
fisttpl
pop
sbb
arpl
xor
cmp
jmp
jecxz
jp
sub
testb
push
pop
repz
add
add
mov
cld
movsl
mov
dec
jns
sbb
lea
cmp
push
cmp
es
mov
push
sub
mov
mov
inc
testl
scas
push
es
adcb
aas
inc
xchg
repnz
cltd
outsl
jmp
out
dec
jle
xchg
adc
cld
pusha
mov
repz
cmp
lret
fs
mov
cmp
sbb
sti
sbb
mov
daa
cmpb
imul
mov
lea
fdivrl
dec
pop
shl
jbe
inc
movsl
cmpsb
jbe
nopl
fwait
pop
imul
shll
ret
clc
imul
mov
xchg
cmpsl
pop
add
lock
lcall
dec
mov
mov
pop
arpl
cmpsl
jae
jnp
adc
push
mov
movsb
add
scas
inc
aaa
lods
push
pop
fiaddl
fwait
scas
lret
jae
sbb
pushf
pop
mov
cmp
movsl
pop
jecxz
mov
out
sbb
and
mov
es
in
dec
roll
sub
add
call
arpl
fwait
mov
testb
test
adc
fdivl
daa
mov
cmp
or
ljmp
xor
xchg
xchg
cmp
jmp
sbb
push
jle
cwtl
pop
leave
divl
daa
cmp
xor
xchg
or
pop
js
xor
pusha
or
xrelease
aaa
and
outsl
add
mov
pop
and
sbb
or
js
adc
jmp
arpl
bound
or
or
dec
adc
adc
pusha
shlb
and
outsl
adc
cmc
cpuid
notl
lahf
in
pop
or
mov
dec
dec
push
or
call
idivb
jb
fistps
jp
pop
pop
inc
cmp
in
cmp
scas
inc
push
cmp
inc
pop
mov
stc
test
jo
inc
xor
xchg
dec
xor
xchg
sbb
inc
stos
int3
xchg
idivl
ljmp
mull
mov
loopne
cs
adc
push
or
xlat
mov
cli
ret
mov
lock
dec
adc
sbb
scas
pminsw
cmp
jbe
shrb
adc
mov
insb
mov
enter
repz
or
repnz
xor
pop
and
gs
push
gs
pop
test
popa
add
push
cmp
mov
sub
mov
xchg
jb
push
sbbl
xchg
rcll
mov
in
sbb
or
popa
mov
out
hlt
into
jl
push
jmp
xchg
adc
add
lods
jo
xor
sub
adc
xor
mov
mov
adc
add
fisubrl
xchg
mov
lods
add
fisttpll
in
jno
pop
out
xor
mov
outsl
or
push
dec
or
dec
sahf
dec
fisubs
sub
and
in
pusha
aaa
sbb
jnp
gs
jbe
push
adc
cmp
mov
ret
dec
dec
out
stos
icebp
scas
mov
pop
xchg
or
fildl
dec
jmp
mov
add
mov
mov
inc
sahf
dec
arpl
sbb
ss
pop
and
not
jmp
mov
mov
mov
data16
sub
mov
into
imul
cmp
cmp
divb
mov
imull
sti
outsb
ss
scas
inc
lock
ljmp
mov
jp
mov
mov
cmp
inc
jnp
adc
xchg
scas
jo
ret
mov
jae
ljmp
ffreep
adc
push
xorb
ljmp
mov
adc
icebp
out
xchg
ficompl
outsl
imul
adc
mov
inc
or
call
cmp
shll
dec
cmp
mov
dec
lds
mov
in
lcall
or
dec
ds
pop
add
and
ljmp
or
subb
push
and
das
add
ret
adc
outsl
cmp
lahf
imul
outsb
push
outsl
inc
cli
fs
adc
pop
inc
cmp
push
inc
xor
fmull
xchg
push
inc
ret
fwait
or
mov
pop
jbe
and
sbb
push
or
pop
push
sbb
shll
sbb
cli
or
adc
adc
imul
bound
mov
repnz
xor
data16
stc
pusha
pop
imul
inc
sbb
cmp
sbb
push
or
inc
and
push
ds
mov
sarl
and
add
cmp
test
ljmp
into
mov
stc
pusha
sbb
stc
iret
or
pop
xor
fsubl
jno
arpl
mov
orl
or
mov
fiaddl
push
inc
jecxz
pop
sub
push
ljmp
rcr
scas
or
mov
mov
dec
or
mov
cmp
push
push
or
adc
mov
mov
mov
movsb
add
pop
xchg
dec
push
push
outsl
jns
loop
dec
jmp
mov
dec
jmp
mov
pop
adc
int
enter
mov
js
inc
xchg
stos
es
lret
or
xchg
inc
inc
or
xor
bswap
es
stos
test
pop
adc
adc
pop
add
fisubrl
inc
or
ljmp
mov
stos
xor
mov
xchg
out
pop
dec
dec
lret
adc
and
push
pop
mulb
pop
pop
cmpsb
jne
sarl
add
push
decb
pop
je
and
hlt
push
out
mov
pop
pop
fidivl
mov
sbb
xchg
inc
sub
aaa
sahf
in
inc
inc
fistl
push
movsl
leave
call
inc
pop
out
or
push
sub
mov
xor
adc
icebp
fdivrs
xor
fwait
stos
sbb
das
push
imul
jle
pop
xchg
fcompl
dec
adc
add
add
and
mov
jl
pop
jp
jo
mov
sub
mov
dec
jne
adc
int
shl
add
sbbl
sti
lock
sahf
xchg
ss
mov
inc
jns
rorb
outsb
pop
mov
fwait
nop
pop
add
cld
cli
or
ret
fisttpll
push
jmp
push
push
lahf
or
sbb
imul
int
mov
aas
inc
imul
or
ds
aaa
mov
pop
mov
idivb
pusha
mov
xor
cvtdq2ps
mov
sbb
adcb
sahf
adc
repz
dec
pushf
xchg
jmp
rcll
jg
dec
lahf
aas
adc
and
sub
and
dec
jl
adc
adc
in
lock
in
daa
cld
jnp
pop
xchg
out
rclb
cmp
fistpll
adc
orl
push
cltd
cmp
gs
cmp
sbb
mov
mov
xchg
xchg
fwait
push
push
jg
testb
out
push
jns
into
out
btl
push
pop
pop
ljmp
pop
xchg
push
push
jmp
mov
jmp
testl
pop
call
stc
push
jb
inc
aaa
mov
inc
xchg
cld
xchg
pop
nop
cmp
mov
cli
inc
ss
lods
aas
clc
xchg
mov
cmp
add
cwtl
jge
push
aaa
daa
jmp
pop
imul
xchg
out
sub
xchg
addr16
aaa
sub
pop
inc
or
jns
cltd
jp
idivb
add
mov
pop
xchg
inc
or
push
xchg
inc
in
ret
imul
movsb
out
dec
and
sub
iret
adc
mov
mov
mov
jg
mov
jbe
lahf
mov
dec
mov
jg
pop
push
add
mov
mov
push
icebp
pop
ret
imul
xchg
rol
scas
pop
in
push
mov
lock
pop
xor
aaa
mov
mov
sti
push
repz
mov
push
dec
or
dec
aam
insb
mov
xchg
test
cmpsl
repnz
je
lock
cli
xchg
mov
aaa
cli
and
mov
scas
jg
add
aam
mov
xchg
cs
sbb
jle
bound
scas
das
cltd
les
and
push
in
mov
ljmp
sbb
push
or
jnp
adc
ja
mov
pushf
inc
fs
fisubl
push
scas
or
aad
jmp
sub
stos
sbb
xor
sbb
mov
jl
testl
push
add
inc
inc
inc
xor
sub
mov
jecxz
add
pop
imul
push
push
xlat
cmp
lea
in
or
sub
rorb
adc
xchg
imul
xchg
nop
and
or
mov
and
sbb
xchg
xor
imull
pusha
xchg
scas
sbb
mov
pop
lods
adc
sub
lret
out
testl
sarb
lahf
lods
fdivrl
push
pop
jne
sahf
pushf
xlat
mov
es
and
jmp
fs
jnp
mov
add
sbb
inc
jmp
mov
mov
and
mov
mov
in
mov
dec
mov
jge
or
xchg
push
out
mov
out
jecxz
andl
pop
loop
fdivrl
movsb
or
sub
cmc
push
rcrl
lret
or
xchg
inc
jge
mov
stos
out
inc
fdivrl
mov
stc
jne
jne
cmp
push
leave
cmp
psubusw
in
fists
or
pop
out
mov
xor
xchg
sub
ds
inc
or
jg
push
push
mov
divl
mov
fcoms
pop
arpl
mov
sub
pop
lret
jb
jg
xchg
xchg
sbb
out
push
and
cwtl
leave
xor
insb
aad
xchg
mov
add
rclb
xchg
es
mov
in
out
jnp
popf
mov
adc
das
dec
inc
mov
lea
cmp
xchg
mov
or
cld
iret
inc
push
mov
loopne
call
inc
das
out
ret
xchg
pop
outsl
dec
cmp
fwait
mov
mov
dec
mov
aas
test
mov
stos
mov
sbb
mov
add
jo
shl
iret
dec
loopne
inc
xor
lea
mov
scas
mov
arpl
mov
or
pop
dec
es
pop
push
in
stc
sti
repnz
decl
adc
cld
sahf
adc
in
mov
or
cmpsl
aam
cmp
xchg
xchg
xor
mov
xchg
jp
enter
adc
imul
in
sti
mov
dec
adc
je
push
xlat
mov
push
pop
xchg
adc
inc
cmp
push
mov
lods
sub
aas
push
cmp
flds
add
jp
scas
add
xor
inc
mov
or
push
aad
pop
cli
jl
push
add
or
ljmp
xor
jg
xchg
lcall
mov
xlat
jge
out
stc
dec
hlt
add
notb
sbbb
stos
jle
leave
xor
sub
or
sbb
adc
mov
es
xchg
add
or
lahf
dec
dec
jmp
add
shll
and
inc
xchg
sbb
jecxz
dec
clc
dec
pusha
mov
lock
mov
dec
pop
mov
pusha
testl
xchg
imul
inc
cli
mov
fcmovb
lods
add
and
mov
or
repz
sbb
jg
addl
cmp
push
popf
and
adc
sub
push
pop
lret
cmpsb
outsl
or
adc
loope
and
push
xor
and
ret
cmp
push
lcall
jp
adc
subl
inc
negl
dec
mov
outsb
mov
mov
daa
cmp
fstl
je
mov
push
subl
repz
cli
scas
dec
out
cmp
ja
icebp
mov
xor
or
cmp
adc
xor
sub
adc
cld
sbbb
dec
jns
cmp
jecxz
adcl
and
adc
cmp
lret
add
jbe
adc
push
pop
cmp
fisubl
sbb
jmp
jns
aas
loop
push
out
push
iret
dec
and
bound
mov
cmp
mov
and
push
dec
or
mov
or
dec
dec
and
mov
pushf
pop
dec
or
test
pushf
pop
sbb
in
pop
in
pop
xor
imul
add
adc
or
lret
push
or
pop
outsb
dec
sbb
sub
ret
sbb
hlt
pop
pop
mov
dec
test
xchg
lock
pop
mov
cmp
cmp
sub
pop
pop
fs
popl
imul
js
add
insl
pop
pop
arpl
jmp
es
inc
iret
adc
gs
out
mov
sbb
xlat
stc
cmp
movsb
pop
mov
push
push
pop
lock
dec
loopne
in
push
add
std
mov
or
call
cmp
int
dec
mov
repnz
and
test
dec
dec
cwtl
inc
pop
sbb
out
push
rclb
in
mov
cmpsb
cltd
rorl
test
sub
sbb
mov
cbtw
push
loope
sarl
loop
scas
stos
aaa
cmp
push
or
push
in
imul
push
mov
mov
jp
dec
dec
fstpl
mov
loop
push
inc
pop
mov
out
or
imul
push
xlat
push
mov
jo
fnsetpm(287
dec
test
pop
fsubrl
adc
out
leave
andl
push
pusha
mov
mov
pusha
jge
or
mov
fildl
adc
imul
lret
pop
popa
adc
add
iret
mov
fstpl
out
pop
call
adc
push
push
mov
call
sahf
pop
adc
pop
adc
cmp
idivl
xchg
or
dec
shrl
cmp
enter
add
add
jnp
cmpl
mov
stos
dec
inc
leave
push
shr
or
mov
mov
mov
in
mov
repnz
inc
push
cmc
push
jmp
mov
daa
jno
sahf
dec
sub
clc
data16
rcl
ljmp
ljmp
imul
pop
sbb
or
or
cmp
dec
push
mov
sbbb
mov
xor
test
push
xchg
jo
mov
pop
int
inc
inc
pop
cvttps2pi
loop
sbb
add
sub
scas
cmp
lock
jns
out
jns
cmp
in
stos
xlat
out
xchg
cmp
in
out
pop
mov
add
xchg
pop
xor
add
loop
inc
mov
jl
enter
pop
add
mov
sub
ja
or
scas
or
lret
xchg
rcrl
sub
jmp
repz
mov
jae
insb
push
cmp
sti
es
pop
movsl
mov
jmp
mov
std
xchg
das
push
insl
push
sbb
jl
add
icebp
and
jae
sbb
inc
outsl
and
pslld
movsb
adc
adc
dec
inc
pop
dec
pop
or
jns
or
sbbb
mov
lock
pop
nop
mov
shlb
mov
mov
ret
pop
push
pop
mov
cmp
je
cmpsl
dec
lods
inc
or
outsl
jns
cmpsb
inc
int
mov
push
xlat
xor
xor
ret
addr16
fistl
jecxz
dec
ret
dec
xchg
xchg
sbb
loop
dec
outsb
nop
ret
jae
cmc
stos
mov
add
movsb
insl
jo
xor
mov
out
mov
ljmp
push
mov
fadds
call
neg
test
mov
cmc
xchg
in
stos
fxch
cmp
fcomps
jl
or
mov
jp
cmpl
xchg
ja
jo
js
pop
aaa
mov
mov
push
mov
mov
mov
push
pop
jg
xchg
push
and
lcall
mov
out
data16
enter
lods
rolb
xchg
inc
cs
sbb
sub
ret
mov
sbb
mov
out
fsubl
in
mov
leave
icebp
xchg
popa
inc
subl
dec
cs
sbb
insl
test
ret
cmp
icebp
xchg
mov
nop
arpl
cmp
cmp
mov
inc
aaa
ret
push
rcll
pop
lds
gs
pop
or
adc
cmp
xor
sbb
or
sbb
and
imul
repz
dec
jb
cmp
mov
sbb
mov
cs
xor
in
lock
mov
movb
sbb
mov
cmp
pop
dec
push
fcomip
add
gs
ds
sbb
push
pop
sarl
xor
fstps
or
imul
lods
outsb
pop
ss
push
cmp
es
sbb
lret
popl
push
psrad
add
fdivrl
stos
in
mov
int3
inc
xor
aaa
mov
aas
inc
call
sarl
jnp
out
imul
imul
or
push
xchg
sbb
scas
shrl
sbb
inc
jns
ljmp
test
xchg
mov
in
sub
adc
mov
mov
shrb
dec
daa
addb
movhps
addl
iret
sbb
lcall
xor
cmpsb
aas
dec
ljmp
push
sbb
mov
adc
cmp
aas
mov
jle
inc
pop
fs
sbb
fincstp
mov
fcmovnu
jno
clc
sbb
sar
push
add
mov
lret
lea
rclb
daa
repnz
stc
pop
xor
ljmp
mov
cmp
push
cmp
aad
adc
dec
in
adc
dec
mov
in
in
and
xlat
push
mov
mov
or
fisubrs
xor
or
adc
test
cmp
es
out
adc
cmc
xor
mov
call
cwtl
mov
add
sub
ljmp
inc
mov
mov
jp
jo
out
xlat
cmpsl
cmp
mov
fstl
inc
cli
push
inc
jge
mov
mov
out
inc
mov
mov
jb
fwait
sbb
cmp
lret
cmp
or
stos
mov
pop
out
ss
mov
mov
pushf
addr16
mov
add
lret
sti
mov
sub
jmp
icebp
push
jecxz
cmpsl
inc
mov
inc
or
jle
cmp
push
sahf
push
mov
in
sub
jmp
out
fsubrl
cmpsb
cmp
lea
adc
sbb
mov
mov
fs
arpl
jg
sbb
out
rcll
dec
test
movsb
iret
imul
fsubl
daa
jae
dec
or
mov
cmp
negb
mov
pop
or
imul
mov
dec
adc
icebp
adc
ljmp
and
or
or
popa
and
jnp,pt
push
pop
push
dec
jecxz
inc
data16
push
push
test
popf
and
sbb
incl
outsb
mov
daa
cmp
repnz
repnz
loope
jo
pop
cmp
add
arpl
inc
stc
cli
mov
das
dec
mov
pop
arpl
sbb
lcall
jp
fwait
idivl
mov
xchg
mov
push
and
sbb
jp
mov
and
mov
cmpsl
push
adc
negb
inc
sbb
inc
or
xchg
fmull
mov
jo
hlt
pop
cmp
out
idivb
push
into
out
cmpb
stos
cmp
sub
testb
pop
dec
add
add
mov
dec
adc
rcr
jp
faddl
sarl
adc
fnstenv
dec
jecxz
pop
pop
cmp
pop
lods
aas
aaa
jbe
lcall
adc
sbb
fmul
mov
push
adc
pop
jo
add
mov
in
call
scas
fldt
in
adc
es
mov
fmul
int3
mov
mov
clc
lock
fimull
mov
jae
out
xchg
shr
int
jno
dec
push
mov
test
or
push
dec
sub
push
mov
mov
mov
add
sbb
inc
insl
mov
xchg
insl
or
out
mov
add
xchg
sub
ljmp
mov
pop
repnz
ljmp
mov
lock
jecxz
push
ret
push
stos
fisttpl
jle
adc
xchg
xchg
add
push
cmpb
fdivr
mov
xor
dec
pminsw
xor
jbe
lret
dec
jbe
popa
mov
mov
sbb
mov
cmp
sub
repnz
adc
ret
xchg
sahf
mov
sbb
es
in
mov
dec
loope
cs
jmp
mov
insb
popf
rcrl
cmp
cmpsb
daa
testb
and
jmp
and
adc
push
mov
rorb
outsl
lods
inc
mov
fists
scas
ds
jle
adc
xchg
inc
sbb
push
dec
adc
or
cli
js
fistl
xchg
cmp
xor
jmp
in
push
adc
aam
mov
mov
jp
jnp
mov
or
dec
jp
pop
scas
cwtl
out
mov
out
jp
ret
out
push
cmc
fwait
or
inc
push
fmuls
in
imul
inc
or
dec
sbb
loopne
lock
xchg
mov
add
iret
cmpsb
inc
ss
sbbb
pop
dec
jecxz
xchg
clc
imul
mov
inc
cli
stc
push
mov
arpl
jnp
ror
movsl
mov
sub
or
jne
movb
cmp
jecxz
repz
orb
inc
add
test
dec
xchg
in
cltd
push
repnz
or
mov
aad
sub
pop
or
sub
mov
pushf
pop
inc
xchg
xchg
adc
jp
pop
pop
das
out
pop
or
xor
xor
adc
jmp
or
inc
push
xor
dec
sbb
shlb
xor
scas
in
imul
sti
pusha
xchg
movsb
jecxz
cmp
repz
sbb
mov
sbb
pop
in
lock
cmp
ljmp
pop
xlat
push
jbe
push
addl
jbe
stos
xchg
jmp
and
dec
push
popa
testl
push
sahf
mov
mov
and
mov
pop
pop
fstpl
stc
inc
cmp
cmp
aas
adcb
sub
mov
push
or
sti
leave
cmp
adcb
in
icebp
xor
or
mov
stc
test
js
and
jmp
test
mov
mov
stos
xchg
pop
cmp
xor
or
adc
in
cmp
mov
jb
mov
loop
cli
pop
cli
adc
inc
jb
loope
add
in
test
mov
inc
sbb
mov
push
or
movsb
popf
popa
in
dec
inc
scas
or
lcall
jmp
outsb
mov
sar
sbb
test
fidivrl
test
xor
push
sbb
dec
inc
popf
push
push
loopne
xchg
lock
dec
dec
and
inc
leave
xlat
mov
outsl
add
int3
inc
sti
out
or
xor
pop
add
out
cwtl
sahf
psubusw
movsb
or
gs
push
push
clc
aaa
push
cmp
stos
inc
sbb
mov
sbb
mov
inc
jge
jg
lret
ljmp
mov
bound
fidivrs
sahf
add
shll
out
cltd
and
xchg
xchg
pop
out
cmpsb
lcall
int3
loop
push
and
hlt
cwtl
cmpsb
lock
pop
out
outsl
lea
sub
into
pop
test
cmc
add
loopne
sub
add
fiaddl
xchg
mov
adc
cmpsl
imul
or
les
cmp
and
mov
pop
sbb
xor
scas
insb
and
mov
jl
xor
xchg
inc
add
gs
addr16
push
sub
jg
call
or
mov
jg
xchg
or
xchg
hlt
lds
das
mov
repz
stos
pushf
nop
es
xchg
sbb
sbb
cld
pop
dec
cmp
imul
cmp
xchg
pushf
call
mov
mov
pop
jl
lods
mov
mov
pop
sti
mov
pushf
xchg
cmpsb
fists
imul
mov
or
xor
das
adc
mov
dec
push
or
ss
out
call
dec
add
sbb
movb
enter
mov
in
inc
cwtl
test
es
and
adc
fstpt
cwtl
jo
test
sub
loop
jo
test
fptan
in
mov
dec
sti
insb
cld
add
sub
inc
imul
or
cmpsb
mov
ret
ljmp
movsl
mov
fidivrl
in
or
aaa
cmp
inc
lods
lret
push
icebp
out
mov
fnstcw
add
pop
add
fidivl
mov
stos
leave
push
push
loope
iret
dec
or
xchg
nop
cld
shrb
pop
sub
mov
cmp
inc
add
jg
cmc
mov
mov
repnz
fdivl
pop
sub
addl
inc
andb
fldcw
push
ds
or
add
push
xchg
jmp
inc
xchg
je
lret
inc
lods
mov
or
cmp
pop
pause
pop
scas
pop
dec
mov
add
pop
mov
jae
cmpb
jecxz
mov
das
out
or
nop
sbb
jb
jmp
xchg
xlat
popa
out
pop
mov
inc
imull
sub
push
cltd
cld
mov
jno
cltd
loop
test
int
ret
mov
addl
imul
inc
push
fsubrs
push
gs
and
sub
add
inc
pop
add
nop
jno
idivb
xor
aaa
loope
or
mov
sti
xchg
rcll
sub
in
pop
or
mov
loopne
pop
lea
andb
mov
jp
mov
add
icebp
shll
loop
insl
clc
or
in
pop
xchg
fdiv
sub
xor
or
mov
std
dec
clc
je,pn
xchg
add
push
xor
or
cmp
mov
push
push
ret
pop
fidivrl
add
fadd
sub
xchg
scas
mov
adc
ljmp
popf
cmp
adc
rol
fdivs
jno
mov
in
sub
push
xor
xor
and
or
adc
jo
xchg
sti
int3
sahf
outsl
cli
jmp
jge
jb
roll
mov
cmpsb
pop
jnp
push
movsl
test
mov
addr16
cmp
aas
mov
sti
cld
dec
aas
or
xor
add
push
scas
jnp
mov
test
out
sub
push
and
mul
push
cmp
mov
xchg
decl
jnp
lret
sahf
out
mov
jg
sub
ljmp
ljmp
sub
repnz
fdivrp
aas
or
out
iret
daa
mov
lret
shll
cld
repz
pop
xchg
pop
testl
mov
arpl
jmp
pusha
sub
inc
fimull
pop
adcb
jo
popa
out
stos
cmp
jg
push
mov
cmpl
aas
aas
adc
mov
cli
movsb
repnz
mov
xchg
cmp
cmp
inc
rorl
cltd
mov
mov
pop
pop
fisubrl
cmp
aas
xchg
daa
dec
lcall
sbb
in
out
bound
mov
cli
imul
sbb
push
adc
out
or
adc
shl
jns
jle
or
pop
decl
les
orps
xor
imull
push
xchg
cs
cmp
fimull
cmp
sbb
test
or
or
dec
jl
dec
or
gs
fsqrt
lret
jns
test
scas
notl
arpl
stos
lret
std
inc
push
or
inc
push
cli
lret
ljmp
push
sub
pop
mov
in
imul
mov
xchg
scas
jle
and
sub
push
inc
cs
xor
ljmp
scas
sahf
divl
das
bnd
ljmp
cmp
scas
cmpsb
push
xchg
inc
imul
xchg
out
pop
dec
add
shr
sub
test
test
sub
pop
mov
jo
push
xor
dec
jae
mov
inc
push
insl
jo
scas
in
dec
arpl
ss
pushf
jmp
mov
xor
psubb
aas
mov
inc
mov
cs
jg
gs
add
pop
cmp
sarl
push
ret
xor
mov
cld
lret
xchg
inc
testb
mov
jns
sbb
push
add
lock
dec
add
fs
into
mov
mov
test
int3
push
inc
stos
ss
lret
test
xchg
repnz
jo
xor
push
adc
push
jge
sub
ja
imul
inc
ljmp
and
movsbl
jge
pop
jmp
xor
pop
scas
mov
mov
mov
aaa
lods
xchg
lret
or
fs
out
leave
ljmp
lods
adc
lea
push
js
ret
adc
and
gs
pop
and
dec
sub
stos
test
test
leave
daa
nop
add
jb
sub
sbb
or
cmp
mov
dec
xor
outsl
clc
pop
out
cmp
rclb
or
arpl
sub
imul
dec
pushf
sbb
test
pmaddwd
or
loope
es
push
in
dec
dec
cli
cmp
jb
push
stos
xchg
addr16
cmp
sub
bound
lods
lds
push
adc
sbb
mov
sub
adc
gs
lods
push
int3
sbb
shrl
icebp
mov
rorl
mov
push
sub
gs
addr16
jp
add
jg
out
repz
inc
sub
xchg
inc
xor
mov
push
push
imul
es
jge
stos
es
ljmp
or
mov
push
sbb
or
jg
cmp
jmp
xchg
sbb
or
mov
xor
jmp
lods
and
push
icebp
hlt
adc
imul
jnp
adc
imul
aas
pusha
icebp
sti
aam
sub
mov
cmp
hlt
xchg
mov
leave
sub
ljmp
stos
sbb
test
iret
stos
mov
lea
imul
mov
sub
imull
push
or
xchg
adcb
inc
pop
je
imul
xor
lcall
aad
mov
cs
push
scas
push
das
push
mov
and
sbb
in
loope
pop
dec
lret
shll
cwtl
sarl
xor
bound
push
pop
adc
testl
mov
cmpsl
fildll
dec
pop
roll
push
popa
ja
sbb
popa
lock
scas
iret
ss
add
enter
add
out
cmp
arpl
cmp
fs
fiadds
test
sub
xchg
push
pop
lea
idivb
mov
sbbl
inc
cmp
or
cmp
fcoms
push
icebp
ror
or
mov
adc
ss
fiaddl
ljmp
jle
mov
sub
ds
ret
mov
repnz
repnz
sbb
or
ljmp
ficompl
lcall
int3
lods
jb
lret
cwtl
mov
lcall
push
sbb
pop
push
jnp
jbe
je
loope
cmp
nop
dec
negb
push
fimuls
mov
es
xchg
jmp
cmp
ljmp
xor
cltd
push
clc
in
jmp
dec
int
jmp
xor
fcomip
and
or
xor
or
inc
repz
sub
cwtl
adc
dec
cmp
decb
es
cmp
mov
repz
in
adc
adc
jle
test
and
and
sbbl
lret
orb
cmp
pop
and
sub
repnz
imul
jo
add
jae
cmp
or
cmp
ljmp
jg
es
fimull
dec
aas
mov
cld
add
stos
inc
inc
pop
sbb
push
test
mov
push
mov
ljmp
xchg
notb
popf
cld
movsl
lret
pop
cmp
xor
aad
inc
imull
mov
movsb
add
dec
cmp
mov
inc
pop
push
and
out
xchg
mov
cmp
pop
cmp
lods
add
inc
jg
xchg
mov
arpl
cmp
movsb
insb
mov
add
sub
jns
and
loopne
imul
call
and
test
cwtl
and
mov
arpl
enter
mov
mov
or
pop
inc
imul
pop
loope
movsb
scas
cli
test
or
or
and
outsb
jp
or
dec
inc
out
xchg
test
jbe
icebp
xlat
stc
rcl
pop
mov
adc
popa
pusha
jg
sbb
inc
or
sbb
lcall
mov
inc
stos
pop
fbstp
inc
push
mov
mov
das
into
loope
ljmp
sbb
mov
fisubrl
fdivrs
lret
cmp
jmp
xor
lahf
mov
add
mov
jl
inc
dec
mov
pop
into
push
sbb
sahf
mov
cmp
mov
add
xor
idivl
jbe
cwtl
cmp
mov
and
add
js
mov
xor
int3
rcrl
leave
fisubs
inc
mov
or
jae
lea
pop
cld
sbb
jb
repz
out
rep
add
stos
outsb
mov
xor
movsl
adc
lcall
clc
cmp
or
iret
mov
in
pop
cmp
mov
mov
push
mov
ljmp
adc
mov
inc
insl
or
imul
cmp
add
outsb
dec
push
scas
push
mov
xor
sahf
icebp
add
jg
mov
push
out
push
or
out
pop
mov
scas
fucomi
cmp
stos
mov
das
aaa
mov
into
xchg
and
stos
and
mov
mov
test
test
add
repz
gs
pop
outsl
dec
fwait
sbb
aas
dec
mov
ljmp
push
sbb
cmp
mov
repz
jmp
clc
pop
push
xchg
out
or
bnd
jae,pt
inc
pusha
cmp
inc
inc
es
sbb
enter
jmp
lret
cli
gs
lock
mov
mov
icebp
cmp
mov
cmp
fimull
jno
outsb
jns
fcmovnu
xor
sti
sbb
imul
cltd
jmp
mov
ljmp
or
leave
add
test
xchg
test
insl
ret
lret
sub
scas
xchg
sti
inc
mov
or
out
xchg
or
ljmp
fwait
inc
jmp
xor
inc
mov
cs
ljmp
lcall
cmp
or
sub
pop
leave
loope
and
xorl
cmp
dec
lret
sbb
scas
fwait
sti
inc
push
addr16
pop
mov
add
sbbb
adc
lret
mov
in
pop
mov
clc
cli
cmpsl
stos
pop
mov
dec
fsubrl
cli
inc
imul
outsb
lret
mov
test
fistpll
cs
dec
mov
push
ds
mov
pop
pop
fnstenv
mov
ljmp
loopne
inc
scas
sbb
fiaddl
mov
scas
cmp
jp
jno
xor
adc
ljmp
insl
cmp
mov
loop
icebp
xchg
dec
dec
cs
daa
jnp
dec
xchg
popa
push
lock
mov
dec
stos
or
or
test
inc
lea
and
xchg
ds
sarl
dec
inc
sbb
pop
xor
jnp
mov
call
xchg
rcrb
arpl
push
xor
push
es
out
int
pop
sub
push
out
jb
sbb
jnp
or
shlb
rclb
lds
adc
inc
xchg
lea
adc
jne
pop
adc
lea
mov
jmp
std
cmp
out
adc
xor
lea
aaa
imul
addr16
jnp
pop
jb
mov
scas
mov
jbe
mov
cmpsb
dec
scas
mov
repz
sarl
inc
xor
jne
mov
sbb
push
mov
adc
sbb
lea
adc
xor
push
xor
int3
out
jb
xor
push
xor
mov
mov
xor
or
lea
jb
push
mov
pop
sub
mov
mov
adc
stos
daa
movsb
es
popf
pop
dec
push
pop
pop
out
popa
inc
xchg
int3
hlt
stos
fisttpll
cld
sub
mull
jnp
sbbb
jg
sub
negl
sbb
cld
lock
mov
or
inc
dec
xchg
xchg
mov
mov
lret
lods
push
push
sahf
inc
repnz
mov
out
inc
xlat
lea
js
or
lret
jnp
push
or
sub
sti
cmp
ret
lea
sbb
lods
dec
popa
out
ljmp
and
mov
test
cmp
es
mov
ljmp
sbb
mov
pop
dec
scas
or
dec
mov
cli
addr16
or
mull
sbb
sub
sbb
cmp
leave
mov
cmp
out
dec
mov
jmp
dec
ss
jle
mov
cld
stos
cmp
mov
cli
inc
jmp
fucomi
xchg
xor
and
scas
loop
ret
mov
jbe
dec
cmp
mov
mov
js
imul
pop
and
mov
sub
insl
jb
repnz
cmp
outsb
int3
sbb
call
jle
sarb
repz
sti
add
stos
aas
dec
mov
and
enter
or
cmp
dec
mov
out
ficoml
mov
ljmp
out
mov
jp
fldl
or
imul
mov
cli
inc
fisttpl
xor
sub
lea
add
pop
jmp
mov
dec
inc
stos
scas
or
stos
pop
push
add
sbb
mov
fidivl
mov
fisubrs
fildl
push
stos
xor
movsb
mov
mov
mov
in
ss
jle
mov
mov
clc
sbb
mov
jmp
push
mov
push
xchg
mov
cwtl
loope
inc
addr16
and
push
movsl
push
xor
ljmp
adc
pusha
cld
mov
sbb
cld
add
pop
mov
test
push
ljmp
ljmp
push
ss
fisubs
cmp
push
pop
or
mov
lock
push
lret
cmp
mov
addb
scas
ljmp
pop
dec
mov
addb
sarb
cmp
mov
mov
xchg
push
sbb
sbb
sahf
push
or
xchg
rolb
inc
or
mov
fistpl
lret
jb
dec
push
pop
aad
pop
mov
mov
jnp
add
jcxz
int
mov
jns
cmp
outsl
cmp
cs
mov
jg
mov
mov
dec
add
dec
out
or
ret
or
or
imul
dec
xor
cmp
push
jg
movsb
cli
stc
cmp
in
cmp
lods
mov
lret
dec
es
xor
adc
inc
xchg
mov
lret
pop
cli
dec
pop
out
dec
or
mov
stc
pushf
and
fs
jmp
adc
cmp
mov
pop
sahf
inc
xchg
mov
mov
call
sub
loop
rorl
je
repz
pusha
loope
inc
cmp
lea
insb
cmpsl
mov
mov
push
adc
jg
aas
pop
and
mov
inc
xchg
or
jo
xchg
jae
mov
pop
inc
push
outsl
lret
lahf
fisubrl
fnstenv
sbb
scas
sbb
arpl
pop
jns
inc
xchg
pop
push
insb
testl
out
sti
cwtl
inc
sbb
mov
mov
jmp
mov
dec
out
xor
arpl
adc
lcall
loopne
mov
lock
mov
daa
xlat
cmp
stos
aaa
and
ljmp
mov
clc
pusha
and
dec
push
cmp
add
cmc
mov
pop
jg
jbe
negl
or
addr16
add
xor
sub
rcll
cld
negl
pusha
and
jp
fisubl
dec
pop
loopne
sbb
pop
mov
dec
fsub
pop
popa
xor
dec
pop
out
lea
mov
adc
mov
lea
pop
fisttpl
cmp
xor
std
xor
mov
enter
add
js
rorb
or
mov
std
sub
shlb
push
mov
mov
cmpsb
xchg
sarb
out
cld
mov
scas
lods
push
xor
dec
movsl
push
ljmp
fisubl
mov
insb
addr16
xor
ret
sub
and
ljmp
lret
sbb
in
add
stos
das
jmp
xchg
mov
or
in
push
or
sar
rorl
and
adc
pop
jae
cmp
popa
ljmp
pop
fs
inc
jge
sbb
push
mov
mov
cld
mov
add
test
enter
lcall
scas
cmp
pop
mov
inc
add
pop
jo
scas
cmp
inc
sbb
lret
pop
iret
jbe
sbbb
scas
sbb
xchg
jg
or
mov
ret
inc
cmp
lcall
lahf
xor
or
imul
scas
call
sbb
push
mov
orb
or
ja
pop
lcall
mov
xlat
sbb
jns
adc
popa
notl
ljmp
fiadds
fidivrs
cmp
and
jg
mov
cld
xchg
adc
pop
pop
out
int
dec
push
and
in
stos
cmpsb
jg
jns
push
jbe
cltd
rcl
push
pushf
push
and
or
mov
push
inc
dec
clc
aaa
clc
fwait
and
jmp
ret
lret
mov
cmp
cmp
adc
xor
and
stos
cmpsb
xchg
lea
into
mov
add
xor
mov
adc
mov
sarl
ret
cmpsb
inc
inc
jmp
fcoml
jg
lret
stos
inc
fldt
stos
mov
sti
rorl
movsb
xor
push
xchg
outsb
inc
jmp
xor
aad
fmul
icebp
out
jne
mov
scas
shrb
cmpsl
jmp
mov
jo
mov
leave
add
stos
mov
movsl
popf
or
dec
out
push
scas
adc
notb
push
dec
lods
in
imul
jo
add
pop
popa
cmp
xlat
mov
insb
lock
test
lcall
lret
sbb
lds
pushf
nop
mov
xor
adc
add
or
dec
xor
cli
movsb
adc
xlat
mov
sti
enter
subb
xor
cmp
add
jl
and
mov
mov
je
inc
or
fcmovnb
xchg
scas
and
mov
push
pop
xchg
mov
ja
xchg
pop
aaa
add
mov
or
out
dec
add
jb
lret
cmp
cltd
push
lahf
out
sbb
imul
sub
aaa
cli
into
xchg
cmp
sub
push
adc
xchg
sbb
out
lcall
pop
cli
or
mov
jmp
in
push
mov
xor
ret
jne
jle
adc
push
lret
xchg
ss
cmp
xchg
frstor
fs
jmp
push
fwait
cmc
lss
or
out
jg
mov
ret
xor
int
aas
std
mov
ljmp
mov
cltd
jge
xchg
test
shlb
cmp
cmc
loopne
pand
bound
out
cpuid
stos
test
lret
callw
js
stc
cli
cmp
stos
das
add
jnp
cmpl
or
out
mov
mov
mov
fcoms
mov
jnp
cld
lret
stos
icebp
mov
fsubrl
fcmovne
add
fidivrs
mov
push
mov
lret
out
sbb
xchg
jg
int
xor
clc
adc
mov
fldl
mov
shrb
sarl
mov
mov
sete
cwtl
push
sub
out
imul
lea
mov
lea
cli
add
loope
xor
or
xlat
pop
cmp
bound
gs
push
dec
xor
dec
test
scas
nop
xchg
pop
xchg
or
push
rorb
loop
scas
xchg
xchg
mov
jmp
and
sahf
dec
cmp
mov
mov
mov
pop
fdivs
ret
mov
pop
push
rep
cmp
in
add
dec
stos
push
dec
add
cmp
andl
fstpt
xchg
dec
scas
inc
ljmp
aam
pop
int3
hlt
add
fwait
pop
inc
mov
jp
lea
pushf
ljmp
push
sahf
mov
divb
and
fsubrs
inc
cmp
in
xor
xor
test
or
call
push
push
mov
mov
lods
shlb
jp
xor
fdivl
cmc
test
mov
and
test
and
ljmp
clc
fwait
cmp
sbb
cmp
pusha
ss
xchg
sub
clc
sbb
push
in
mov
mov
test
mov
dec
test
loope
adc
push
xor
and
push
loopne,pn
and
dec
outsb
test
inc
and
les
dec
mov
cs
pop
dec
les
ficomps
imul
cmp
ret
inc
mov
cmp
or
call
or
lahf
pop
repnz
repz
cmp
sbb
out
loop
xor
leave
aaa
fwait
ret
pop
xchg
fldcw
sub
or
mov
in
push
fnstenv
sbb
gs
jmp
jns
pop
orb
mov
out
stos
pop
xchg
or
dec
push
adc
subl
xchg
dec
pop
inc
or
lret
jge
xchg
xchg
mov
aaa
xchg
mov
or
pop
negb
or
jl
sbb
mov
push
ja
cmc
jmp
mov
test
push
fmul
add
in
add
xchg
loop
push
mov
xchg
cmpsb
mov
or
jnp
stc
adc
adc
ror
decl
mov
pop
cmp
fcmovu
test
loop
cwtl
xor
movsb
scas
jo
or
inc
mov
cld
xor
sbb
xchg
mov
and
dec
mov
mov
outsb
pop
outsb
mov
inc
add
adc
mov
jnp
mov
test
adc
push
pop
or
testl
cmc
pusha
pusha
ret
pop
aam
es
in
daa
popa
xor
xchg
repz
cli
xor
mov
lret
mov
nop
xchg
leave
and
mov
push
pop
dec
inc
sbb
sahf
jmp
xchg
jnp
or
push
int3
bound
sbb
or
sbb
sbb
jmp
popa
into
ja
addr16
adcl
xor
insb
xor
and
ret
cmp
enter
xor
outsb
xchg
pop
mov
sub
or
dec
xor
dec
jno
cmpsb
mov
or
dec
sbb
rol
aam
mov
or
and
aaa
lea
mov
cmp
mov
bound
fwait
and
sub
in
ss
sbb
jp
and
sbb
rcll
push
and
arpl
sbb
sar
fistpl
jecxz
subl
sarl
add
inc
xchg
pop
rorl
or
fisttpl
test
push
push
in
es
insl
mov
xchg
ss
call
fwait
pop
outsb
pop
arpl
or
sub
hlt
xor
xchg
test
jg
inc
std
cli
mov
repz
insl
loope
mov
or
hlt
orb
notl
addr16
sub
les
adc
sub
outsl
adc
pop
push
popa
hlt
hlt
sbb
xor
jno
into
fdivrl
lea
add
add
pop
out
sbb
or
inc
ljmp
and
dec
push
sub
stos
cmpb
mov
push
aaa
push
adc
stos
divb
int
das
jo
imulb
push
inc
lea
fsubrl
nop
push
sti
popa
subl
mov
mov
clc
mov
mov
call
mov
adc
jmp
out
xlat
cli
mov
sub
cmp
jmp
or
cmp
dec
add
and
stos
std
cmp
xchg
bound
stc
psllw
push
inc
roll
outsb
aaa
mov
mov
pop
cmp
sub
push
inc
push
push
pop
lret
aaa
cmp
lock
sahf
push
jp
stos
fdivs
or
shl
test
xchg
sahf
xor
jns
out
notl
in
cmpsb
mov
inc
cmpsl
outsl
lret
push
adc
mov
adc
out
lods
bound
adc
or
stos
jnp
pop
repz
xchg
xchg
mov
aas
inc
pop
xchg
dec
and
mov
imul
jmp
int
or
jne
sub
xchg
jnp
pop
ret
jne
inc
aas
sub
xor
ljmp
mov
out
and
jae
in
ljmp
cs
add
js
mov
test
cmp
and
ljmp
mov
ljmp
or
mov
js
out
ljmp
cmp
jmp
and
fs
ret
daa
mov
sahf
out
jmp
mov
xor
mov
lea
movsb
test
adc
das
rclb
or
popa
mov
dec
stos
cmp
imul
or
fcmovnbe
outsl
or
pushf
pop
or
sub
ficoms
jnp
xchg
pop
dec
outsb
es
or
sub
pop
daa
js
or
jg
or
aas
imul
ljmp
mov
cmp
push
mov
add
xchg
cmp
inc
mov
xor
repz
lret
adc
scas
xor
dec
jb
add
mov
xchg
das
cmp
xor
or
lods
fcmovu
inc
jno
cmp
loope
stc
into
cltd
cmp
sbb
jns
mov
pop
cmp
scas
hlt
cmp
jb
dec
pop
arpl
testb
rclb
mov
push
call
out
jle
hlt
imul
out
lods
adc
ret
ss
fcmovbe
lea
mov
mov
xor
repnz
jnp
push
and
xchg
sbb
aam
cmp
ljmp
push
adc
bswap
test
or
inc
loopne
lock
daa
repz
and
xchg
out
sti
push
inc
test
or
mov
int3
scas
js
mov
stos
jmp
imul
cmp
jnp
ljmp
mov
shrl
ljmp
cwtl
ljmp
stc
fimull
imul
rorl
lods
mov
pop
movsl
lret
ficomps
mov
cmpsl
xor
lods
mov
push
mov
cli
xor
stos
enter
sbb
and
jnp
mov
orl
adc
mov
rcrb
movsb
add
pop
mov
cmp
pop
mov
cmpsb
dec
xchg
test
cltd
loopne
test
pop
pusha
shll
add
pop
cmpsb
pop
fidivrl
jmp
test
out
js
div
sub
mov
call
add
dec
call
js
cli
es
pop
lods
push
pop
xchg
fldt
mov
popa
out
adc
dec
into
gs
dec
shll
push
test
insl
lods
sbb
cwtl
iret
inc
sahf
dec
divl
inc
jmp
enter
fnstcw
scas
pop
stc
cmp
mov
sbb
mov
cmp
add
pop
leave
stc
cwtl
xor
mov
cmp
stos
nop
out
faddl
cltd
scas
mov
outsb
sahf
push
lock
out
push
xor
andb
pop
mov
test
pop
jns
test
arpl
repz
cmc
inc
pusha
xchg
rcrb
push
sub
fcmovne
cmp
popf
push
scas
jecxz
das
loope
cmp
outsb
mov
arpl
add
arpl
fsubrs
mov
mov
ljmp
test
pop
xor
dec
cs
pop
loopne
scas
pop
arpl
xchg
in
or
imul
push
jae
sub
sbb
add
test
js
or
jns
test
popf
jno
ret
mov
xor
cmp
push
xchg
imul
mov
xchg
cmp
mov
jo
add
cmp
push
xor
xchg
jnp
xchg
or
subl
sbb
popa
pop
mov
xchg
or
mov
ss
out
push
and
cmp
es
or
mov
mov
out
mov
inc
fidivl
lea
test
sti
push
jnp
movsb
mov
inc
insl
popf
push
adc
xchg
repnz
addr16
lds
cmp
pop
lret
mov
ja
pop
scas
outsb
int
xor
loop
mov
jnp
lret
xchg
sbb
adc
test
and
fstpt
imul
dec
jnp
jle
push
rorb
dec
dec
jl
cmpsl
jo
insl
fdivrl
cmp
jg
movsl
jne
xchg
dec
sahf
mov
addr16
xor
dec
loopne
sbb
cmp
mov
cmp
in
js
inc
mov
adc
inc
ljmp
fucomp
cs
sbb
or
imul
cmp
imul
sbbl
push
scas
sahf
in
mov
jns
or
jb
sarl
jecxz
scas
hlt
andb
das
sti
jns
xor
add
add
pop
mov
aaa
sbb
mov
jle
pop
sbb
mov
pop
repz
mov
jae
mov
push
fidivrs
adc
std
cli
and
insl
xchg
les
push
fisubs
clc
ljmp
lret
xchg
push
push
mov
mov
shrb
push
or
xor
add
ljmp
sbb
inc
xor
aaa
cli
jecxz
js
cmp
int3
testb
out
cmp
addl
test
stos
xor
test
xchg
sub
mov
cmp
or
lcall
or
std
iret
xchg
inc
cs
dec
ja
mov
adc
jnp
pop
inc
fistpl
loopne
rorb
out
xor
or
sub
imul
cmp
inc
mov
ds
pop
or
out
sub
xor
pop
add
gs
xchg
mov
cld
and
popa
cmp
dec
sbb
add
imul
out
cmp
cli
repz
test
sahf
cwtl
clc
cltd
shr
mov
lock
inc
ficoms
int
movsb
cmp
cmp
sti
mov
insb
inc
andl
mov
adc
test
or
loop
xor
sub
add
lock
fwait
xchg
lds
loop
in
sbb
xor
out
jl
cmp
xor
or
ficoml
out
nop
or
mov
inc
cmp
mov
lock
adc
xchg
pop
cli
or
fnstenv
out
fcmovnu
insl
mov
add
mov
mov
add
add
cwtl
add
into
xchg
cmp
aas
sbb
scas
cmpsl
aas
stc
or
mov
repnz
xchg
cli
aaa
js
jmp
inc
xor
and
or
cli
aaa
leave
scas
mov
jmp
imul
xor
call
stc
or
sahf
call
cltd
sub
adc
leave
inc
sbb
jne
loop
testl
pusha
imul
and
stos
dec
mov
out
inc
ficoms
mov
movsl
mov
or
cltd
cmp
scas
jo
jbe
mov
jns
jno
in
mov
push
sbb
pop
xlat
inc
and
pop
sub
mov
mov
in
or
lret
call
xor
dec
iret
cmpsl
lahf
scas
xchg
jnp
nop
inc
aam
cld
clc
mov
dec
fisubrs
ljmp
test
mov
cli
adc
dec
mov
stos
add
iret
jecxz
psubw
sahf
imulb
push
popl
inc
xor
lods
das
bound
mov
add
movsl
test
insl
xchg
adcl
jl
lcall
lahf
mov
push
push
adc
lea
fucomip
push
xchg
sbb
push
mov
and
icebp
xchg
jp
dec
fcompl
in
repz
fucomip
pop
daa
jp
mov
hlt
popa
or
pop
sub
scas
ds
cmp
mov
lods
and
push
add
xchg
xor
idivb
loope
xchg
movsl
or
jb
stc
dec
mov
add
mov
js
add
loopne
sar
cli
ficoml
insb
js
nopl
cmp
mov
mov
test
leave
cli
aaa
fiaddl
repz
sbb
jns
insl
jns
outsb
cwtl
sbb
inc
adc
out
loop
jb
xor
or
and
push
ret
popa
cltd
xchg
push
push
inc
addr16
jnp
mov
push
inc
lods
jmp
and
dec
xchg
scas
cmp
sbb
xchg
aas
inc
fstp
mov
dec
shlb
and
jno
mov
stos
adc
ja
xor
dec
insb
jnp
mov
les
ljmp
hlt
dec
iret
mov
mov
subl
pop
mov
mov
pop
sbb
sub
xlat
push
adc
inc
sub
popa
fcmovne
xor
subb
outsb
aas
scas
lahf
mov
pop
or
ja
xchg
insl
aam
lea
rcll
or
shrl
in
xor
js
push
orl
and
mov
add
popa
es
cmp
cwtl
xchg
cmp
cmp
aaa
and
gs
or
iret
cli
mov
pop
pop
addr16
and
lret
mov
or
inc
fildl
lea
movsb
adcl
iret
or
in
mov
lds
das
or
out
mov
ja
jle
mov
mov
jle
mov
lods
iret
cltd
ss
sbb
cmpsb
cwtl
mov
je
or
jmp
mov
sub
jnp
mov
jns
sti
jo
pop
inc
adc
shll
lea
sbb
push
sub
mov
cli
stos
mov
dec
jo
andb
sbb
mov
out
enter
jle
inc
ljmp
or
jae
mov
enter
mov
mov
mov
ficoml
insb
jle
cltd
and
and
imul
dec
jb
cmp
mov
jns
out
out
aaa
js
loop
jb
dec
inc
cli
mov
jno
out
cmp
pop
jmp
fmull
cmp
insl
out
mov
outsb
into
dec
push
sub
adc
inc
cmp
jbe
out
fdivs
jp
idivl
sti
and
mov
pop
xchg
mov
enter
xchg
call
test
cmp
test
xchg
add
jb
mov
jmp
inc
inc
mov
addr16
lahf
mov
xor
sbb
sub
clc
or
fwait
mov
xor
adcl
sub
test
xor
cmp
mov
lret
sub
movsl
loope,pt
and
jmp
jbe
arpl
pop
push
shll
hlt
mov
dec
add
decb
push
sidtl
shll
mov
sbb
arpl
shll
dec
ja
add
movsb
lock
enter
adc
jge
outsb
insl
push
dec
fcomi
js
or
add
xchg
ss
sahf
and
or
ljmp
adc
ret
jg
jg
jb
add
insb
lret
mov
sbbl
cli
adc
or
push
or
fcmovnbe
shr
add
xchg
xchg
mov
inc
aas
ljmp
sub
and
cmp
push
pop
add
sar
das
mov
popa
ret
sbb
fimull
push
outsl
iret
xchg
adc
scas
fs
mov
mov
push
xor
inc
cli
cmp
jmp
sbb
repz
xchg
or
out
pop
or
int
out
mov
jle
push
jmp
ret
push
or
pop
xor
leave
jl
xchg
push
push
test
sbb
out
cmpsl
stc
push
daa
push
dec
loopne
ds
and
push
dec
push
test
cmp
pusha
cmp
cwtl
cmc
xchg
adc
ret
push
imul
jle
divb
repz
cmp
mov
jle
mov
push
cmc
outsb
arpl
fbstp
cwtl
fwait
xchg
arpl
enter
jge
xchg
rol
inc
pop
cmp
repz
mov
pop
jbe
in
xchg
inc
mov
mov
fnstsw
mov
test
cmp
pop
push
jno
out
es
push
sub
or
inc
inc
add
mov
inc
pop
jno
sbb
adc
mov
fimuls
imul
pusha
loopne
mov
out
aam
jmp
xlat
aam
divl
pop
or
xchg
cmp
mov
in
sbb
mov
clc
pop
fstpl
aas
sub
lea
test
xchg
push
repz
add
lea
cmc
xchg
sahf
cs
mov
std
int
por
shlb
sub
cmp
fsubl
fldenv
xor
xor
popa
fistpll
fs
cmp
aad
mov
sub
popa
push
repnz
arpl
repz
and
and
push
leave
mov
adc
mov
adc
jmp
adc
or
jle
xor
dec
jge
xlat
add
movsl
sbb
pop
pop
fdiv
int
pop
stc
gs
cmp
inc
pop
imul
or
sbb
stos
adc
das
dec
sbb
aaa
icebp
mov
cmp
test
mov
lock
lcall
fdivs
sbb
leave
cmpb
aas
cmp
scas
leave
rol
mov
pop
mov
mov
push
xor
popa
or
leave
mov
cmc
scas
es
addr16
pop
movsb
xchg
dec
pusha
lods
pop
aaa
dec
les
push
loope
push
fldenv
push
lea
mov
jmpw
pop
mov
mov
mov
jmp
test
gs
loop
mov
lret
cld
call
leave
stos
shrd
push
sub
cmpl
es
or
stos
adc
jmp
sahf
cli
dec
roll
jg
cmp
xor
scas
adc
popa
jge
mov
add
sbb
mov
pop
hlt
sbb
fstps
xchg
pop
outsb
and
in
mov
jmp
mov
std
jb
fsqrt
mov
pop
call
lret
shll
inc
cs
fildl
outsb
mov
out
pop
mov
or
jae
and
and
pop
rcrl
mov
add
movups
inc
sub
into
rorb
and
int3
call
mov
mov
es
xorl
in
push
mov
mov
push
pop
in
xchg
push
arpl
jns
xor
lea
jne
mov
cmpsl
jno
dec
test
add
add
cs
sarb
xchg
inc
dec
in
or
cs
stc
rol
xor
push
ret
test
pop
cli
sbb
aaa
mov
lock
call
les
xor
mov
and
push
das
insb
add
cmp
push
mov
add
mov
sti
sbb
aas
orl
push
imul
cmp
adc
push
adc
pop
scas
lea
add
es
xchg
jns
mov
pop
aad
mov
sub
js
fisubl
add
sub
loop
dec
or
fstpt
bound
add
pushf
and
jae
pop
jle
insl
xchg
and
cmp
sbb
jl
adc
in
inc
cmp
add
pop
repnz
js
inc
enter
aas
jecxz
cmp
sbb
jecxz
inc
scas
sub
shlb
mov
xchg
xor
sbb
cmp
cmpsl
push
cmc
scas
mov
imul
enter
sbb
movsl
pop
pop
dec
dec
loope
mov
push
icebp
shrl
pop
pusha
loopne
mov
mov
int
and
ljmp
push
cmp
cld
xor
xlat
mov
mov
or
mov
or
cli
inc
into
lods
jno
lret
lea
mov
int3
loopne
lea
idivl
popf
xor
out
lods
adc
cmp
mov
pusha
adc
out
cld
gs
stos
mov
add
fiaddl
inc
jg
push
pushf
or
fdivrs
stos
add
fstpl
jno
push
pop
inc
or
xchg
mov
mov
jae
insb
push
jg
push
outsb
cmpb
sahf
or
jl
jg
fildl
sarl
fsubrs
out
cmpsb
xor
cmp
fnstcw
push
sub
sub
jmp
sub
inc
les
cmpsb
mov
jg
inc
jns
imul
sbb
and
cli
dec
mov
inc
push
jg
adc
loopne
inc
push
cs
pusha
imul
add
pop
loope
or
or
cmpsb
mov
scas
gs
shl
pop
into
popa
aas
cmc
jne
xor
inc
popa
es
imul
into
lret
cmp
cld
mov
mov
sbb
add
or
lods
mov
loope
adc
fnstsw
push
call
loopne
inc
and
mov
xchg
inc
data16
aas
push
push
leave
jno
adc
push
xchg
cmp
dec
or
jae
mov
pop
push
cli
mov
arpl
idivl
lods
jp
push
mov
adc
test
ret
and
ret
cmp
mov
inc
push
pop
mov
adc
sbb
push
adc
push
into
xlat
pop
loop
es
mov
add
out
or
jmp
inc
adc
add
xchg
cli
and
out
or
imul
and
sub
sbb
repnz
ljmp
dec
and
enter
xchg
adc
add
js
jns
push
mov
mov
popa
mov
adc
fnstcw
jo
xchg
repnz
fbstp
iret
jb,pt
jns
fisubrl
scas
das
cmp
mov
out
mov
mov
stc
cmpsb
pop
xor
jnp
mov
mov
cmpl
repnz
aaa
stc
mov
ljmp
push
cmp
sbb
cmp
jmp
out
lret
mov
leave
mov
xor
stos
add
in
mov
into
sahf
jae
repnz
sub
pop
mov
ret
xor
cmp
xorb
adc
xlat
cmp
jb
cld
into
ljmp
mov
sbb
push
xchg
fwait
sarl
or
dec
enter
sub
fs
testl
fs
cmp
or
jmp
mul
repz
je
adc
outsl
imul
aaa
adc
mov
mov
mov
adc
inc
lss
mov
jae
out
pop
fdivs
lret
cmp
gs
dec
sbb
mov
mov
das
ficoml
gs
outsl
mov
iret
dec
xchg
daa
repnz
or
addr16
ljmp
xchg
cmp
fwait
call
ljmp
dec
lret
dec
lock
xchg
dec
mov
xchg
and
adc
je
in
imul
fcmove
push
mov
in
enter
int
cmp
cwtl
sub
addr16
mov
sbb
lcall
popa
adc
xor
pop
or
insl
adc
or
or
xchg
push
test
rclb
out
cmpsl
call
xchg
or
sub
ss
add
jp
ficompl
and
lds
adc
xchg
jae
pop
cli
cld
xchg
and
jmp
jb
cmp
mov
adc
mov
push
push
push
ljmp
or
xor
gs
sarb
dec
jns
mov
sub
in
sbb
mov
fsubrl
mov
das
imul
push
jmp
or
imul
leave
mov
cld
or
jmp
outsl
test
mov
pop
sub
imul
ljmp
xor
fcomip
repnz
xor
leave
mov
repnz
cmp
out
lods
push
mov
sbb
mov
loop
mov
pop
push
xlat
call
fdivl
test
mov
fsubs
pop
mov
ret
cmpsl
enter
and
dec
into
jl
or
xchg
fwait
jmp
jl
test
cmp
into
xorb
inc
outsb
jns
push
lret
xor
push
scas
ret
movsb
mov
dec
cmp
jnp
sahf
fsubl
push
or
jl
test
add
imul
movsl
mov
pop
dec
mov
nop
mov
iret
jne
addr16
ds
arpl
lods
cli
sub
jnp
xchg
int
cltd
and
inc
push
xchg
jo
adc
lret
sbb
dec
ljmp
arpl
cmp
stos
xor
push
sub
sub
or
sbb
lea
adc
jbe
pusha
jne
push
dec
jbe
imul
xchg
mov
cli
jns
daa
mov
pop
addr16
outsb
movsb
inc
rcll
hlt
adc
cltd
sub
jg
insb
insl
xchg
rcl
out
lret
dec
add
sub
icebp
and
cltd
cli
pop
pop
sbb
loope
push
popf
mov
xor
xchg
adc
fildl
mov
pop
cmp
xchg
adc
cmp
int3
xchg
adc
pop
ljmp
mov
xlat
and
ja
or
pushf
mov
pop
push
xlat
divl
dec
jp
out
orb
jp
add
jbe
lds
pusha
popa
call
sbb
push
in
jnp
int
and
dec
push
xor
js
inc
testl
mov
or
ljmp
std
jo
add
xchg
call
or
dec
rcrl
cmpsb
add
mov
js
inc
outsb
jmp
sahf
pop
jl,pt
cmpsl
or
xor
outsb
neg
mov
cld
xlat
xchg
mov
in
inc
jo
out
xchg
out
leave
in
xlat
je
cmp
dec
enter
jecxz
mov
loope
cmp
adc
dec
mov
pop
dec
mov
and
stc
inc
testb
stc
jl
hlt
mov
dec
fcompl
pusha
add
lret
mov
xchg
lea
xor
dec
xor
ljmp
jmp
fwait
mov
xchg
mov
adc
in
popf
dec
push
lock
pop
lret
out
and
pusha
mov
xor
mov
pop
aaa
add
xor
or
jmp
mov
push
push
mov
xor
fiadds
cltd
and
mov
out
cwtl
sbb
fcmovnbe
or
or
in
out
sub
testb
int
xchg
xchg
sahf
movsb
cmp
push
xor
inc
xchg
and
adc
dec
pusha
cmp
jge
dec
ficompl
inc
pop
lods
repnz
pop
push
mov
fnstenv
cltd
jae
add
mov
into
push
in
mov
scas
fidivs
outsl
addr16
jb
ss
pushl
idiv
or
es
jae
cld
cmp
in
cmp
inc
cwtl
aas
cli
jmp
stos
jmp
negl
leave
sub
pop
pop
cmp
or
jnp
arpl
in
xchg
add
jl
in
dec
loopne
mov
mov
daa
xor
inc
mov
mov
dec
sbb
mov
add
testb
cmp
mov
or
inc
sub
jbe
dec
aad
jmp
scas
sbbb
lahf
sub
or
ss
lea
or
jb
scas
ret
sub
outsl
sbb
mov
scas
cmp
pop
clc
sub
fsubl
in
sub
je
sub
xchg
sub
pop
daa
ljmp
jb
loope
mov
sub
cmp
dec
dec
add
stos
stos
xlat
xor
sahf
mov
or
fsub
mov
lods
or
out
mov
pop
push
jb
dec
pop
rorb
cmpsl
cltd
xor
mov
lods
jecxz
pop
aas
adc
dec
jb
jns
addr16
out
idivb
cmp
jne
dec
push
cmp
leave
sbb
pop
sub
addr16
mov
lock
mov
adc
cs
inc
imul
insl
popa
or
jo
into
movsb
test
cmp
lods
add
cmp
xchg
add
pop
mov
dec
inc
cmp
fstpl
stos
test
inc
flds
jns
adc
push
xchg
mov
out
and
sub
out
imul
sti
pop
mov
adc
mov
sub
and
pop
imul
mov
sbb
scas
add
adc
pop
xchg
outsl
loope
pop
out
sbb
mov
or
pop
cmp
pop
in
sarl
push
enter
adc
mov
test
xor
adc
std
xor
inc
mov
xor
loopne
pop
imul
in
mov
xor
stc
sub
mov
add
stos
hlt
xchg
dec
xorb
jo
cs
out
push
mov
cmp
adc
jns
mov
fimull
pop
xor
jo
lds
outsl
dec
jg
aam
pop
xor
mov
cmp
xchg
sbb
xor
dec
out
pusha
push
jb
push
sub
sub
daa
cmp
repz
hlt
mov
jno
cmp
sub
lahf
dec
adc
push
xor
out
xor
aas
fisubs
test
jg
outsb
sbb
cmp
mov
pusha
mov
jb
or
js
push
orb
lea
jecxz
testb
pop
repz
in
push
adcl
fmul
push
fisubs
adcl
lahf
push
pop
pushf
repnz
pop
dec
push
mov
mov
hlt
stc
test
cmpsb
sbb
xchg
inc
fwait
and
jno
lret
lods
cli
xchg
lods
aaa
dec
dec
repnz
fnstcw
mov
cmp
movsb
sbb
pop
aam
xor
mov
out
xor
inc
out
pop
inc
mov
sbb
shrb
push
gs
or
aaa
cmc
sbb
out
dec
cmp
mov
gs
scas
or
push
fisttpl
ds
pop
fisttpl
sbbb
xor
in
xchg
rcll
ljmp
in
mov
push
jmp
jne
push
mov
andl
fisubrl
mov
pop
mov
dec
bound
mov
cmp
xorb
js
lcall
lret
mov
scas
or
pop
dec
jne
or
dec
lret
mov
adc
std
mov
jb
cld
idivl
xchg
sub
nop
mov
xor
push
cmp
aas
xchg
enter
dec
data16
mov
adc
push
int
and
pop
mov
push
jl
mov
into
add
adc
movb
or
rorl
js
and
fs
xchg
fildll
notb
ret
sbb
stc
fisttpl
js
push
out
js
dec
idivb
sbb
pop
mov
push
add
jp
scas
stc
cmp
pop
outsl
repz
jg
lahf
cmpsb
dec
push
arpl
inc
jp
push
js
mov
fstpt
out
rorb
or
pop
inc
or
aad
insl
inc
lret
mov
xchg
mov
add
mov
shlb
pop
cmpsb
clc
cmpsl
rcll
mov
aam
js
pop
cmp
pop
insb
jp
repnz
lcall
pop
repz
mov
mov
repz
jns
pop
das
sbb
and
repz
outsl
inc
pop
cli
scas
stos
ret
push
fmull
stos
jecxz
out
jecxz
divl
pushf
add
push
mov
pop
lds
mov
inc
add
jg
lret
loope
push
stc
xchg
out
push
sbb
push
repnz
mov
fildl
lea
sbb
sahf
sub
xchg
add
test
push
mov
hlt
mov
dec
or
ds
pop
cmc
push
or
push
adc
cltd
pushf
cmp
cmp
and
push
jg
jns
es
in
mov
mov
pop
jno
add
loop
and
fxch
adc
adcb
push
test
jmp
decb
and
sbb
cmp
repz
ss
add
or
adc
out
or
insb
icebp
xor
movsb
mov
adc
lahf
or
push
jmp
mov
fists
sbb
cmp
call
push
aaa
shrb
hlt
sbb
push
xchg
mov
out
jbe
fstl
bound
cli
stos
pop
adc
in
push
iret
mov
pop
sti
and
pop
xor
add
jmp
cs
mov
cmp
xchg
popa
sbb
xor
fidivrl
and
push
mov
movb
aad
adc
leave
ss
push
and
xchg
sbb
xchg
lock
out
add
adc
mov
mov
pop
xor
stc
xchg
pop
maxss
divl
or
je
lcall
push
dec
lock
jno
fisttpll
out
lahf
push
lock
testb
cmp
cmp
cmp
pop
mov
call
imul
gs
loop
pop
jns
xlat
and
aam
pop
push
xor
ja
mov
out
mov
nop
add
and
decb
clc
mov
dec
sar
mov
mov
ficoml
fcmovbe
lods
repnz
cli
repnz
xchg
add
cli
jmp
dec
jbe
pop
aam
jecxz
out
lods
mov
int3
pop
fstps
fucomi
mov
sbb
jnp
fs
stc
aam
fiaddl
cmc
adc
cmp
push
icebp
mov
in
and
lret
pop
jecxz
mov
xor
dec
hlt
dec
lods
pop
stos
lret
cli
pop
jns
xlat
xchg
jns
inc
xchg
aad
int
sbb
adc
hlt
test
incl
dec
add
repnz
jp
mov
cmp
cmp
cmp
test
out
pop
xlat
test
pop
xor
iret
idivl
lcall
sahf
dec
add
cltd
inc
pop
mov
mov
xor
fstp
popa
cld
paddusw
cltd
jnp
pop
mov
outsl
mov
arpl
in
sbb
pop
jp
daa
test
stc
jo
lea
pop
cmp
pop
jnp
popf
loop
icebp
mov
pop
cmpsb
jns
enter
iret
scas
mov
or
lret
ret
scas
dec
jb
pop
xlat
or
mov
add
mov
xchg
repnz
std
loopne
cld
std
cld
mov
cmp
call
sbb
scas
mov
or
mov
loopew
xor
in
add
cwtl
icebp
push
addl
cmp
fisttpl
dec
jmp
xor
movb
pop
in
or
popa
adc
cmp
loopne
outsl
or
test
icebp
in
cmp
xchg
jge
clc
sbb
sti
lret
sbb
sti
or
cs
cltd
inc
add
and
adc
dec
outsb
mov
push
push
ljmp
xchg
xor
mov
outsl
stc
adc
jno
jo
jp
es
mov
leave
fdiv
mov
leave
jg
and
jmp
inc
stc
or
mov
bnd
orb
pop
jns
test
sti
popa
cmp
and
mov
adc
jmp
stc
sbb
pop
pop
iret
xchg
aaa
mov
cmp
jmp
call
cmp
lods
psubw
jmp
call
test
mov
cmp
cmp
xchg
cs
lcall
out
mov
jb
imul
hlt
pop
cltd
aad
xchg
mov
or
adc
jns
adc
daa
inc
inc
cmp
cmp
cmp
inc
mov
inc
lret
xor
cmp
out
mov
push
inc
cltd
cmp
push
or
pop
in
out
lret
imul
dec
push
or
scas
imul
jnp
rcrl
xchg
cmp
inc
xchg
or
lret
xchg
ljmp
xchg
pushf
lods
daa
mov
leave
jno
pop
inc
dec
or
sti
xor
enter
popf
stc
js
fnstcw
or
push
fs
in
cmp
pop
cmp
mov
std
adc
lcall
daa
pop
icebp
push
cmp
lds
mov
or
js
scas
ss
movb
insl
xor
fwait
mov
add
cmpsb
test
idiv
sub
add
cmp
daa
jmp
in
insb
push
adc
adc
inc
mov
push
pop
mov
testb
or
stos
je
ljmp
mov
es
mov
call
xor
sbb
lea
cmp
mov
scas
push
add
test
out
inc
dec
out
adc
dec
inc
or
pushf
dec
mov
scas
dec
out
fmull
in
mov
movsb
jg
mov
out
cmp
mov
mov
imul
inc
jg
add
mov
jp
mov
mov
arpl
jae
lahf
in
inc
add
push
jb
ficoml
arpl
xor
xor
ljmp
push
mov
notl
in
ret
test
inc
cwtl
pop
mov
call
and
cmpsb
das
dec
loope
cmp
jp
pushf
push
cmp
sahf
jns
push
or
dec
xchg
sub
andb
adc
dec
pop
sub
pop
push
adc
gs
xchg
push
push
mov
cmp
jnp
jecxz
mov
test
out
ljmp
pusha
stos
dec
in
adc
mov
or
xchg
pop
mov
xor
pushl
cld
xchg
sub
inc
idivb
jo
imul
repnz
fiaddl
iret
push
shlb
xchg
or
aad
repnz
cmp
scas
jnp
adc
pop
push
push
adcb
scas
xchg
pop
xchg
pop
push
add
add
jnp
out
push
pusha
xchg
idivl
dec
xchg
fs
sarb
mov
js
inc
sub
jbe
and
inc
or
xchg
pop
fimull
lea
dec
imull
add
mov
push
jecxz
push
adcb
cltd
es
push
or
push
pop
jecxz
sbb
cmp
or
fs
lods
mov
xor
iret
shl
fisttpll
dec
cmp
xor
cwtl
and
push
sub
lea
aam
fisttps
xor
xor
out
xchg
int3
xchg
xor
hlt
or
fs
cmp
dec
ret
in
mov
outsl
hlt
jns
or
daa
inc
pusha
mov
xor
mov
sti
andl
xchg
pop
sbb
aaa
imul
imul
ficomps
sub
jecxz
lods
or
rorl
sar
mov
or
adc
daa
or
in
jno
lods
mov
jg
insl
jb
sbb
mov
mov
xchg
repnz
sub
mov
adc
syscall
lret
fldenv
adc
inc
sbb
xchg
xor
push
ret
dec
adc
jbe
pop
insb
push
jmp
inc
cltd
lods
lret
mov
mov
pop
popa
xchg
pop
mov
mov
cmp
ljmp
rorl
cltd
xchg
call
lret
mov
pop
lock
icebp
mov
dec
sahf
add
aas
push
ljmp
mov
adc
mov
mov
xchg
push
mov
mov
pop
fnstsw
imul
add
mov
or
cwtl
repnz
sub
lods
adc
sbb
adc
lcall
lret
icebp
pop
inc
sbb
sbb
pop
mov
push
dec
mov
testl
cli
adc
xchg
test
imul
xchg
cmp
jbe
add
xchg
push
and
dec
sbb
push
leave
add
scas
inc
push
aaa
outsb
push
jb
lds
rorl
sti
mov
out
fbstp
mov
sbb
dec
and
mov
mov
jmp
dec
mov
adc
pop
dec
lret
jp
lret
adc
jg
fs
and
mov
jl
and
into
dec
scas
pop
push
jg
dec
add
jne
notb
pop
out
xchg
in
xchg
mov
loop
dec
int3
dec
xchg
mov
out
cmpl
sbb
outsl
sub
xchg
jnp
dec
add
sti
xchg
add
cmpsl
movsl
mov
shll
scas
notb
xchg
and
aad
in
js
pop
fcoml
and
je
push
mov
pop
sub
mov
add
mov
or
es
jg
cmp
rclb
movsl
cmp
and
sbb
jg
test
cli
test
jbe
hlt
movsl
ljmp
pop
es
ljmp
movsl
jnp
mov
lcall
outsb
repz
sbb
sbb
jl,pt
popa
mov
push
mov
mov
add
cmp
sub
or
push
int3
dec
insl
fidivs
in
bnd
push
adc
adc
mov
jg
sub
mov
cs
pushf
cli
push
popa
into
aam
shlb
push
or
mov
mov
sbb
mov
add
outsb
mov
inc
movsl
adc
sbb
ficoms
loopne
iret
lock
andb
cld
mov
test
out
xchg
movsl
add
sbb
clc
dec
call
or
fstp
xor
lret
lcall
adc
scas
pop
cmc
cs
and
jg
adc
inc
pop
rorl
aad
enter
les
test
jmp
xchg
sub
das
jmp
jg
and
cli
inc
lret
fldt
ds
test
dec
push
pop
push
leave
mov
dec
jne
dec
push
movsl
addr16
ds
idivl
sub
xchg
out
xchg
adc
add
cmpsl
add
push
lcall
or
or
insl
adc
or
inc
inc
fdivrl
push
pusha
pop
xchg
sahf
test
test
cld
jmp
cld
into
pop
jp
cmpsb
pop
mull
xor
test
les
ljmp
mov
cmpsb
pop
mov
mov
dec
or
add
sub
sub
test
or
xor
mov
cmp
cmpsb
jp
jne
arpl
insl
or
aam
imul
xchg
pop
or
fists
sub
jb
daa
mov
je
mov
push
inc
jge
dec
pop
cld
or
mov
repnz
cmp
notl
cmp
ljmp
subl
xchg
mov
sub
jg
movlps
push
outsl
push
inc
push
icebp
sahf
inc
mov
adc
inc
or
cmc
mov
das
dec
push
jne
lock
push
addr16
jbe
or
sbb
push
inc
push
in
int3
fidivrs
cmc
mov
mov
es
rcll
xchg
adcb
adc
xchg
add
or
stos
add
cmp
mov
mov
ficoml
repnz
jb
jnp
jp
xor
lds
ja
icebp
sub
push
test
xchg
pop
fs
or
gs
cmp
leave
int3
sub
stos
sub
mov
inc
pop
stos
ja
jg
mov
or
leave
movsb
outsl
inc
add
repz
sti
orl
imul
out
mov
xlat
scas
leave
push
aaa
cld
add
iret
mov
jge
lret
xchg
push
cmp
jg
aas
pandn
sbb
dec
and
lods
xchg
jle
dec
hlt
js
xchg
mov
and
push
shlb
in
xchg
test
jl
add
cmp
cwtl
mov
loop
in
enter
stos
inc
mov
sub
cmp
xchg
sbb
outsl
clts
add
xchg
xchg
mov
stos
push
adc
mov
pop
mov
insb
sbb
adc
jp
test
mov
in
int
movsl
js
adc
adc
jg
jns
push
scas
mov
push
sbb
push
inc
cmp
fwait
aaa
pop
outsb
sbb
pop
jle
adc
jno
test
in
lret
sub
pop
sbb
nop
or
pop
jne
xor
jae
mov
mov
push
lahf
adc
cmp
in
or
fsubrs
fadd
dec
sub
enter
popa
les
mov
das
mov
xchg
mov
ja
lahf
mov
into
inc
in
lret
jo
sbb
lods
cltd
or
lock
sbb
xor
pop
sbb
pop
clc
lcall
push
repz
cltd
mov
rorb
sbb
sub
cli
inc
lods
les
loop
and
pop
lea
mov
xchg
mov
xchg
mov
mov
sub
jmp
dec
enter
nop
in
call
fucomip
or
add
cmp
sbb
jge
xchg
pop
pusha
hlt
pop
movsb
xor
test
xchg
and
dec
xor
pop
or
repnz
loopne
dec
jmp
test
addb
sbb
sbb
je
cs
adc
add
or
popa
sub
notl
push
jl
or
ret
call
out
adc
ljmp
jecxz
sbb
fistl
push
clc
dec
jmp
andl
jg
or
rclb
mov
dec
lock
fmull
leave
jmp
jae
inc
dec
loop
push
sbb
dec
mov
sub
add
cltd
das
or
sti
pop
or
push
sub
xor
mov
pop
pop
jmp
rcl
jmp
lret
mov
sbb
in
popf
mov
pop
add
jnp
mov
out
in
repz
sbb
sbb
cli
inc
dec
jl
movsb
mov
adc
cmp
jnp
pop
mov
arpl
dec
xchg
sbb
cmp
out
xor
xor
mov
mov
cwtl
push
lea
repz
cmp
dec
lods
mov
div
xchg
leave
push
mov
cmpl
stos
or
xchg
jg
inc
adc
lcall
cmpsb
pop
pop
enter
adc
pop
cmp
ud2
insb
es
inc
fildl
cmp
push
dec
cmp
sbb
enter
jmp
test
cld
loop
test
and
stc
push
enter
imul
dec
lods
fs
repz
jne
je
clc
cmp
push
outsl
stos
fiaddl
dec
loop
insl
pop
jmp
jno
pop
and
icebp
inc
popa
testl
clc
sbb
add
fsubrs
dec
out
pop
lock
pop
sub
jns
nop
jge
pop
les
mov
decb
cmp
sbb
stos
add
and
repnz
add
inc
cld
divl
adc
adc
or
push
icebp
mov
in
fstpt
jns
mov
jns
movsl
stos
fsubrs
bound
dec
jnp
add
push
mov
fiaddl
repnz
mov
jmp
or
jns
insb
adc
xchg
mov
push
shl
sti
cmp
outsb
fcmovbe
pop
mov
insl
dec
insl
fisubl
sarl
ret
arpl
mov
cmpsl
repnz
cwtl
sub
jnp
xor
test
adc
ds
add
cmpsb
cmp
ss
cmpsl
std
loope
fidivrs
das
pop
pop
arpl
repnz
jecxz
adc
inc
xchg
clc
inc
fwait
mov
imul
add
decb
cmp
cli
jmp
out
adc
or
inc
lret
out
push
dec
int3
test
out
pop
mov
lods
fstl
mov
sbb
dec
inc
adc
jecxz
pop
sub
ss
jg,pn
xchg
es
lret
mov
iret
jne
jle
jecxz
loopne
stc
dec
or
repz
cmp
xor
inc
dec
xchg
or
in
xchg
inc
mov
ss
push
adc
pop
push
or
loope
rorb
mov
mov
xor
xor
jnp
jbe
pop
stos
mov
data16
cld
in
mov
fbld
mov
test
orb
cs
jo
sbb
subb
mov
adc
mov
and
jmp
insb
or
jne
push
sbb
inc
sbb
ret
mov
jmp
sub
aad
jns
cmp
mov
and
jns
movsb
loop
pop
inc
inc
add
mov
les
inc
pop
xchg
mov
test
mov
pop
push
fld
jmp
xchg
into
dec
fldenv
jnp
out
dec
mov
xor
push
xor
inc
mov
fistpll
jle
adc
insl
lock
idiv
adc
lds
popf
adc
test
xchg
mov
fsubrp
pop
jmp
pop
lret
fisubrl
fisttps
and
cmp
add
cmpl
xchg
andl
sbb
addb
mov
movsl
xor
into
popa
orl
fcomip
lea
lock
jmp
and
mov
fwait
sbb
test
stos
mov
xlat
gs
mov
push
ficoml
mov
inc
int
fisubrs
imul
jmp
mov
jmp
cmp
fisubs
or
dec
ret
push
xchg
enter
mov
push
mov
xor
cmp
sbb
mov
cmp
and
lock
mov
lea
or
mov
arpl
mov
iret
sub
push
clc
adcb
mov
mov
add
jo
frstor
out
fcomps
mov
or
cmp
sbb
xchg
push
sahf
pop
lret
fsts
add
and
dec
pop
cli
jne
cmp
out
out
fildl
repnz
jnp
dec
rcrb
out
aas
mov
in
jmp
dec
cltd
add
push
adc
xlat
sbb
push
pop
and
pop
add
mov
mov
iret
adc
push
sbb
fdivrl
xor
cs
bound
in
cs
adc
jg
cwtl
out
fstp
mov
jg
sbb
jns
pop
xor
push
lahf
mov
mov
repnz
iret
pusha
movsb
pop
push
dec
pop
es
mov
mov
adc
add
push
sub
push
mov
or
add
and
adc
mov
cli
fwait
inc
ret
add
inc
or
aas
mov
dec
mov
xor
ds
pop
jo
repnz
rcll
arpl
sub
repnz
jg
std
fimuls
mov
negb
mov
jae
jge
dec
aaa
or
xchg
mov
cmp
idiv
mov
or
sbb
and
aas
or
pop
movsb
or
pop
xor
jmp
mov
dec
xor
inc
sub
pop
fcoml
inc
pop
sete
sahf
pop
pop
sahf
sbb
jecxz
aad
ja
in
iret
mov
filds
test
std
fbld
or
pop
cli
cmp
rcrl
pop
xor
adc
popf
lods
js
outsb
repnz
and
ficompl
xchg
inc
adc
movsl
or
or
pop
outsb
addr16
addr16
pop
xor
or
dec
pop
dec
sbb
popf
inc
cmp
inc
rorl
imul
outsb
xchg
lds
inc
int
clc
scas
jmp
sub
mov
or
call
arpl
outsl
call
dec
pop
out
xor
pop
in
push
movsb
aas
rolb
jb
jecxz
packsswb
negb
push
or
dec
inc
repnz
or
dec
jae
cmp
inc
ror
or
cli
xchg
and
enter
jecxz
dec
rcll
mov
mov
adc
jo
into
scas
or
inc
inc
stos
or
lea
scas
dec
call
mov
imul
movsb
add
pop
aas
xor
inc
jb
push
sbb
jp
decl
inc
mov
mov
jl
pop
test
pop
test
mov
fcmovnu
popa
xchg
adc
repnz
loop
shrl
jg
mov
jp
pop
adc
fsubr
sub
jg
xlat
mov
out
mov
xchg
call
xchg
pop
ret
out
imull
scas
cmp
cltd
jb
push
mov
dec
push
call
outsl
xlat
cmp
xor
pop
push
sub
push
test
jg
mov
xchg
arpl
sbb
cwtl
shr
adc
js
lea
shlb
pop
push
scas
aas
stos
jb
imul
xchg
rcrb
ljmp
cmp
push
stos
add
clc
popa
ss
jns
cld
pop
or
imul
mov
jmp
sub
dec
scas
mov
scas
outsl
cmp
jbe
icebp
lea
sbb
fs
inc
pmaxsw
mov
xchg
jl
jmp
sub
xor
jae
out
cmp
mov
in
adc
mov
aas
daa
xchg
lret
daa
sub
gs
cmp
xor
outsl
pop
push
or
xlat
mov
mov
js
negl
loopne
dec
jp
je
sbb
mov
cmpsb
fildl
jno
mov
pop
jne
mov
jns
outsl
inc
sahf
fnstcw
icebp
xchg
add
sti
imul
dec
mov
xor
mov
and
lods
stos
or
fnstcw
into
dec
lahf
leave
add
iret
pop
inc
cmp
pop
push
cs
hlt
push
fs
outsb
out
arpl
jge
daa
jg
and
mov
sbb
push
call
data16
fdivrl
mov
pop
inc
dec
add
xor
aaa
shrl
cmp
mov
cli
jp
pop
popf
popa
adc
cmp
pop
lea
sub
in
jle
pop
lahf
pop
push
cmp
iret
or
mov
out
lock
jnp
push
inc
adc
es
add
adc
xchg
movb
xor
xor
ja
cmp
cld
mov
fwait
scas
sti
inc
aaa
test
sbb
add
or
mov
jge
pop
mov
xchg
stc
pusha
enter
mov
ljmp
mov
ljmp
xchg
xchg
or
ljmp
jecxz
ljmp
adc
dec
fimull
dec
int
outsl
add
pop
xor
fnsave
cmp
in
jg
sbb
inc
mov
and
pop
dec
pop
xor
pop
mov
decl
mov
xchg
sub
xor
test
jae
out
inc
inc
data16
mov
cmpsb
add
pop
fmulp
push
into
xchg
adc
mov
in
test
or
dec
lock
aas
iret
or
iret
inc
adc
cmp
pop
outsl
iret
enter
dec
adc
out
mov
repnz
in
imul
push
cmp
push
adc
in
stc
adc
jge
loopne
add
out
lea
mov
or
mov
arpl
push
and
pop
push
inc
out
int
sbb
mov
xor
pop
into
popa
fistps
mov
sub
xchg
pop
xchg
mov
arpl
mov
jns
mov
pusha
lret
dec
ljmp
pop
iret
push
imul
fdivrs
push
xchg
leave
pusha
notl
xchg
cmp
fiadds
mov
faddl
push
pop
icebp
or
arpl
mov
es
pop
fstpl
scas
cmp
aas
push
push
adc
lea
cli
int
ret
push
cmp
je
mov
lock
loop
movsb
jmp
add
ret
mov
ds
push
or
into
xchg
cmp
and
and
jg
pop
pop
fucomi
cmp
dec
push
aas
adc
mov
cmp
out
pusha
out
xchg
inc
mov
cmp
fadds
test
fiaddl
xchg
or
jae
or
cmp
pop
sbb
lret
jb
or
call
dec
pop
shlb
into
dec
push
mov
inc
into
sub
pop
dec
push
cmp
xchg
loope
scas
in
xor
cld
in
xor
jae
add
adc
mov
add
arpl
cmp
inc
add
jmp
xchg
repnz
or
out
push
imul
jno
ret
cltd
cli
push
cmp
xchg
mov
test
gs
fldt
popa
aas
pop
insb
aaa
mov
mov
aas
mov
bound
cmpsb
mov
add
sub
cmp
adc
push
out
lret
fdivp
popa
divb
popa
jae
leave
jp
push
ret
and
stc
loop
jmp
push
dec
mov
xor
js
sbb
cltd
out
mov
add
adc
enter
push
mov
mov
cmpsb
in
sub
int3
test
sbb
adc
testl
movb
jnp
movsl
push
addr16
cmp
dec
mov
popf
lret
and
and
mov
pop
jnp
push
xor
jo
dec
sub
in
sti
addr16
xchg
adc
dec
sahf
mov
iret
mov
mov
mov
mov
rcll
aas
cli
jp
add
jae
or
out
push
nop
mov
fstps
cmpsb
mov
xchg
lods
mov
and
adc
and
inc
test
jo
jno
adc
sahf
mov
clc
cmp
imull
les
in
cmpsl
lahf
icebp
pusha
sarl
mov
dec
mov
ljmp
in
or
add
mov
sahf
enter
sub
mov
out
bound
lret
push
inc
imul
sbb
repnz
out
and
js
loope
pushf
mov
push
or
rcl
lea
dec
repz
push
out
adc
cmp
push
subb
cmp
femms
outsb
jb
pop
divl
and
cmpsb
xchg
adc
pop
cmp
or
jg
push
in
or
movsb
sahf
xchg
jne
aas
mov
lcall
fs
jecxz
lods
pusha
cltd
stos
popa
call
xor
mov
inc
and
mov
inc
jnp
fcoml
inc
shll
insb
popl
mov
imul
ss
outsl
in
jno
inc
shufps
inc
int
or
push
add
fisubs
push
mov
dec
sbb
ds
push
int3
nopl
pop
sub
aad
ret
ret
dec
xor
cmp
outsb
mov
or
and
mov
xchg
popa
pushf
frstor
or
xchg
lcall
cltd
mov
xchg
ret
fstps
scas
lret
fmul
lods
dec
arpl
adc
cwtl
mov
adc
aas
bound
and
sbb
rcr
cli
xor
cmp
arpl
sbb
add
clc
ret
add
xchg
jge
xlat
fnsave
and
push
pushf
imul
jg
outsl
ret
xor
cmp
mov
push
mov
fs
arpl
scas
or
sub
out
cmpb
mov
xchg
cltd
mov
data16
jb
bound
mov
or
out
xor
mov
jo
cmp
adc
jb
push
out
and
mov
rcll
mov
out
imul
cmp
sahf
and
pop
xor
pop
mov
clc
nop
or
call
aaa
dec
mov
inc
out
jb
sub
and
cmpsb
mov
jns
inc
mov
insl
jecxz
jg
jge
aas
push
add
mov
cmp
push
frstor
fistl
mov
add
int
mov
ror
xor
lea
cwtl
in
loop
ljmp
sub
call
push
or
pop
sub
cmp
pop
scas
addl
hlt
hlt
jg
cmp
sti
mov
xchg
ljmp
add
pop
loopne
jne
rolb
out
mov
push
sarl
hlt
adc
jbe
and
sbb
pop
fs
mov
out
mov
xor
pop
das
lahf
add
pop
mov
int
mov
mov
les
or
jle
mov
add
andb
rorb
cmp
fwait
outsb
xchg
or
stos
jnp
pop
sbb
or
call
movsl
divb
movb
aas
xor
ljmp
mov
imul
lods
in
in
lea
mov
push
cmp
or
ja
xor
popf
ds
out
adc
mov
fnstenv
rclb
mov
test
or
test
xchg
and
mov
xchg
mov
test
pop
or
push
mov
cltd
cmp
sbb
mov
push
xchg
push
adc
cmp
fsts
stos
mov
orb
or
pop
jnp
mov
xor
lds
addl
dec
jp
mov
fwait
mov
pop
push
adc
or
cli
mov
sbb
pop
iret
dec
outsb
mov
in
repz
mov
cmpsb
and
cmp
inc
lahf
js
jo
popf
fisttps
adc
outsl
xchg
jo
push
push
sbbb
stos
in
xorb
orl
inc
js
jp
ljmp
int
das
cli
jg
adc
add
cmp
ljmp
adc
mov
mov
pop
adc
cmp
pop
fstl
sub
mov
mov
jge
sub
aam
jb
incl
subl
jmp
jo
shlb
jns
fwait
jb
mov
add
mov
fnsave
push
outsb
sbb
int
idivb
pop
aaa
in
fistpl
add
aad
mov
pop
sbb
mov
lret
mov
mov
or
dec
jbe
add
ret
dec
mov
lahf
jb
add
add
pop
and
xchg
and
mov
aad
or
mov
mov
adc
movsl
in
jb
lock
js
inc
into
or
add
mov
add
lret
cmp
sub
sbb
sub
mov
xchg
dec
inc
push
scas
jp
lahf
xchg
sahf
dec
loope
push
loope
adc
cmpsb
jmp
hlt
cli
jp
dec
mov
mov
hlt
pop
cltd
bound
outsb
sbb
mov
or
lock
push
fistl
mov
adc
jmp
sub
bound
inc
test
mov
fs
mov
or
movsb
adcl
inc
and
push
adc
dec
call
pop
xchg
xchg
cmp
aas
nop
bound
adc
mov
mov
call
cmc
jno
rorb
dec
fs
adc
push
and
and
add
pop
int3
pop
ja
rep
dec
push
insb
call
scas
mov
lcall
mov
sbb
int
fstpt
xor
mov
xchg
lahf
adc
inc
in
dec
mov
out
pop
mov
jp
in
out
lods
pop
cli
jmp
xchg
js
das
int
in
outsl
cmc
mov
add
cmp
xchg
or
ds
dec
lods
inc
mov
sbb
add
dec
lea
adc
mov
xchg
dec
in
repz
sbb
jns
or
fistpll
rcr
sub
sbb
arpl
cmp
cltd
fst
js
sbb
push
int
repz
push
sar
js
subb
push
stos
xlat
push
div
push
mov
out
je
rolb
mov
test
scas
js
ret
mov
mov
pop
lds
out
js
cmp
xchg
mov
mov
mov
scas
outsb
dec
xchg
adc
testb
jnp
subl
aaa
inc
xlat
ljmp
mov
sbb
popf
xchg
jle
pop
mov
fldl
mov
xor
std
out
mov
lds
or
jge
sti
insl
scas
icebp
mov
call
dec
sbb
icebp
mov
pop
outsl
inc
mov
cmp
movsb
dec
inc
dec
fdivl
add
cwtl
cld
leave
imul
jg
in
mov
sbb
lea
imul
pop
xor
jnp,pt
inc
inc
inc
jnp
movsl
and
int
scas
pop
call
notb
in
jno
bound
or
push
jp
repz
mov
aad
pop
push
jg
cs
xchg
nop
jle
and
bnd
inc
dec
imull
jb
pop
cmp
ljmp
mov
cli
mov
lods
mov
aas
cmp
ret
jle
lahf
stos
sbb
inc
in
in
lret
mov
loopne
cmp
int
aas
int3
jle
ret
pop
mov
ret
or
jnp
jbe
jecxz
mov
test
cmp
ja
mov
in
mov
lahf
jb
andb
xchg
xchg
lea
pop
iret
fwait
dec
call
adcl
mov
insb
testl
jns
or
dec
stos
pusha
mov
mov
cltd
cmpsb
push
cmp
addb
icebp
cmp
mov
add
fdivr
repnz
pop
outsl
lods
xchg
or
xchg
test
mov
sbb
mov
movsl
mov
add
mov
pusha
mov
lock
fisubs
push
adc
jmp
std
movsl
adc
push
jg
push
pop
imul
adc
ficoms
cltd
rcll
jecxz
push
pop
aaa
jecxz
leave
out
test
popa
cli
push
jecxz
sub
push
pop
popf
ror
pop
aaa
push
push
adc
cmp
leave
jmp
sarl
pop
test
insl
mov
sub
lds
push
int
scas
jmp
add
rcr
cld
sub
shll
mov
mov
test
repnz
adc
sub
es
xchg
jp
or
into
xchg
push
pop
add
lret
push
mov
loope
sbb
or
jmp
push
mov
hlt
or
cltd
lea
xor
cltd
sub
int3
mov
pop
testl
or
inc
out
sub
js
push
or
fildl
cmp
pop
orl
mov
pop
mov
ja
mov
jge
pop
pop
inc
dec
jbe
stos
add
lea
mov
push
add
popf
xor
push
xchg
add
mov
push
jae
mov
jo
and
das
cli
pop
xchg
cs
push
hlt
outsl
sbb
test
sbb
out
dec
ret
push
mov
dec
decb
dec
cmp
dec
mov
add
imul
fsub
xchg
inc
and
dec
stc
rol
mov
into
mov
loope
jo
jle
stc
cmpsl
imul
xor
mov
and
mov
cmp
jmp
push
hlt
lods
jbe
dec
xchg
mov
mov
mov
cli
and
push
mov
fmulp
xlat
jmp
mov
sbb
pminub
icebp
loop
mov
xchg
enter
lret
inc
mov
das
into
loope
jge
pop
inc
and
test
iret
jnp
push
outsb
mov
jb
orl
pop
sarb
cmp
arpl
insl
insl
aas
daa
lret
lods
sbb
in
psubw
jae
rcr
adc
jnp
push
inc
out
push
and
and
mov
pusha
jae
in
in
xchg
mov
adc
sbb
out
fcomi
pushw
jns
testb
lret
mov
inc
or
xor
clc
and
ret
sbb
add
mov
xchg
and
push
pop
jmp
mov
repnz
mov
cmp
jo
cld
call
mov
dec
adc
jl
das
nop
scas
nop
icebp
mov
jl
pop
inc
fistps
shll
stos
cmpsb
das
rorl
faddl
pop
sahf
roll
add
ret
sub
movsb
mov
dec
out
pop
dec
inc
test
scas
xchg
fdivs
xor
inc
fcomi
mov
xorb
sbb
dec
xchg
mov
lods
mov
nop
stos
mov
dec
test
pop
rolb
cli
inc
mov
add
xchg
repnz
lret
testl
out
iret
stos
icebp
and
mov
push
dec
in
loopne
sti
cmp
push
jl
out
add
sbb
xchg
aaa
ffree
aaa
push
inc
rclb
mov
push
cltd
xlat
pop
push
jg
movd
jnp
or
pushf
pop
mov
or
sti
inc
nop
and
xlat
mull
sahf
xchg
popa
mov
mov
xchg
cwtl
cltd
jl
xchg
pushf
dec
sbb
mov
xchg
inc
pop
cmpsl
movsl
dec
les
mov
push
dec
fiadds
dec
mov
dec
xor
dec
push
mov
aam
jle
dec
inc
mov
push
por
mov
push
mov
push
fbstp
mov
xor
xor
fisttpl
or
out
scas
push
and
push
or
cmp
mov
out
push
or
sub
pop
inc
or
enter
mov
mov
xchg
ja
adc
sbb
jno
cmpsb
jae
add
iret
xchg
push
les
push
fcompl
sbb
pop
xchg
roll
out
jge
cmp
adc
sbb
fidivl
les
stos
mov
mov
or
clc
fstpt
add
sub
jb
cld
and
in
lods
vaddpd
mov
ficoml
out
xchg
cmc
ret
sub
inc
xchg
cs
insl
inc
xchg
ret
jae
or
sbb
test
mov
cmc
daa
rcr
cmp
icebp
push
jne
cmpb
add
or
ficomps
inc
jnp
xchg
adc
aad
jbe
in
ljmp
movsb
call
dec
jb
cli
loop
mov
lret
cmp
lea
mov
jmp
cmc
xor
add
cmp
mov
jecxz
mov
mov
xor
cmp
mov
adc
enter
cmp
and
push
mov
xor
mov
cmp
in
mov
dec
sub
repz
test
add
aam
inc
and
gs
jo
into
sbb
ficoml
nop
xchg
cmp
mov
jp
add
or
push
pop
mov
insl
fistpl
clc
cmp
mov
and
jl
add
or
add
in
cli
int
aas
ret
or
arpl
scas
mov
scas
xor
sbb
out
dec
lret
insl
ljmp
cs
pop
std
les
push
cli
mov
cs
in
pop
mov
adc
fwait
scas
or
push
cs
loop
sarb
mov
and
pop
ret
aaa
imul
ljmp
jnp
sub
cmp
jnp
mov
test
data16
aaa
dec
mov
pop
mov
push
jle
and
insb
call
mov
push
ljmp
out
sub
mov
jb
xor
xchg
out
jl
call
jecxz
loopne
mov
aam
fwait
pop
or
mov
cli
in
push
push
scas
movsl
mov
out
ja
lock
enter
jp
xchg
mov
add
adc
lock
xor
pop
lcall
popf
iret
icebp
mov
lret
xor
jmp
pop
out
notl
dec
scas
push
dec
ret
dec
fistps
mov
xor
and
mov
in
add
xchg
jp
push
inc
xor
insb
inc
sub
or
xor
popa
cmp
adc
imul
inc
or
cmpsl
sbb
mov
cs
call
dec
jb
or
jmp
lcall
fmuls
mov
dec
out
cltd
adcb
hlt
pop
int3
xchg
addl
dec
clc
repz
lock
xor
lods
mov
xchg
stos
xchg
mov
push
fcomps
or
je
cmp
push
adc
xor
mov
data16
push
arpl
fildll
mov
cld
lcall
dec
imul
outsb
xor
gs
xor
cmp
inc
out
xor
dec
add
mov
pop
sub
jl
push
rcr
mov
out
test
js
insl
test
or
popf
es
mov
iret
cli
imul
int3
in
lock
leave
fcmovnbe
pop
pop
aad
cmp
mov
insb
pop
dec
xlat
mov
push
mov
out
add
pop
ret
repz
ds
test
mov
pop
or
dec
into
mov
jg
nop
je
xor
adc
sbb
push
les
insl
movsb
shl
lods
xchg
int
pusha
testl
dec
hlt
das
mov
sub
ljmp
dec
mov
jg
dec
imul
add
adc
repz
push
loopne
fs
sbb
cmpb
dec
pop
dec
xorb
stos
out
xor
ljmp
jbe
sahf
out
pop
repz
jno
sbb
hlt
mov
xor
aas
cli
sbb
cmp
imul
or
add
out
iret
out
jb
sbb
repz
test
std
jecxz
clc
out
or
dec
or
sti
js
or
pop
mov
jae
sbb
addl
and
cmovb
add
js
jns
adc
ljmp
lock
mov
iret
mov
inc
and
xor
xchg
enter
testb
ficoms
cmpsb
js
daa
xchg
sbb
xor
fcmovu
push
and
cmpb
fisttpll
fs
pop
sub
icebp
das
adc
dec
cmp
addr16
lret
test
sbb
ds
mov
sbb
aad
xor
dec
stos
and
xchg
mov
loopne
dec
mov
adc
cmp
inc
add
sti
adc
scas
arpl
cwtl
jb
mov
ljmp
jns
add
shl
inc
inc
jecxz
cmpsb
jns
inc
add
mov
mov
mov
repz
cmp
or
add
cli
dec
bnd
mov
fcomps
mov
rorb
iret
idivl
lret
cmpsb
and
in
adc
cmp
mov
pop
wbinvd
or
and
inc
ret
push
or
dec
adc
mov
pushf
pop
ret
pop
sbb
dec
xor
add
mov
sahf
cmc
adc
pop
xchg
mov
cmpsb
and
dec
push
push
jge
mulb
pop
sbb
enter
xor
cmp
les
pop
mov
mov
stos
in
jnp
mov
hlt
test
dec
pop
call
or
xchg
or
aas
sub
xchg
cltd
xchg
xchg
mov
pop
pusha
sub
mov
inc
scas
pushf
adc
out
pop
into
xor
lods
bound
outsb
push
jp
push
mov
sbb
inc
xchg
sbb
jge
mov
adc
add
push
sub
push
pop
mov
dec
mov
cmp
mov
leave
push
fadds
imul
call
stc
mov
lahf
test
or
add
aad
bound
inc
lock
jno
inc
popf
popa
pusha
or
mov
adc
cli
mov
or
xchg
add
fisubl
or
push
cltd
jae,pn
sub
stos
cmp
ds
jns
jecxz
fildll
jg
fwait
add
xor
rcrb
enter
dec
mov
ret
pushf
cmpsb
inc
rorb
cmp
daa
mov
xchg
mov
adc
sub
lock
xchg
je
push
sbb
popa
sub
dec
bound
mov
push
out
leave
mov
loope
ljmp
shll
mov
jb
push
cmp
test
adc
into
jmp
jns
popf
test
mov
and
pop
pop
jnp
jecxz
outsb
xchg
mov
pop
push
inc
imul
neg
mov
test
mov
and
movsl
xchg
shrb
and
push
adc
xchg
cmpb
xor
cwtl
dec
jae
jg
subb
mov
jbe
mov
add
mov
mov
insb
jg
mov
adc
xchg
xchg
jp
fwait
mov
cmp
mov
mov
decb
mov
cmp
jmp
mov
xchg
dec
adc
ret
pop
jnp
sti
adc
sbb
gs
ret
add
mov
and
test
fst
fsubs
and
call
ret
fmull
orb
and
jl
nop
mov
sbb
push
and
std
dec
icebp
push
xchg
jge
xchg
or
aas
dec
call
das
mov
push
dec
pop
lods
sar
je
shll
sahf
jne
jmp
jns
out
popa
mov
out
arpl
pop
fisttpl
jns
imul
add
cmp
xor
ljmp
mov
push
dec
int3
sub
mov
es
dec
xor
loope
or
out
xchg
mov
sbb
or
jg
jg
incl
stos
lock
or
cmc
or
add
pop
xor
or
testb
clc
mov
mov
xor
rolb
and
pop
movsb
adc
mov
jg
xor
jns
insl
cmp
loope
jg
pusha
test
push
sbb
movsb
pop
mov
mov
or
dec
sbb
sub
sub
out
pop
out
push
mov
inc
xlat
adc
push
sub
pop
lahf
aas
mov
mov
cmc
out
repnz
and
jl
xchg
jno
dec
or
mov
mov
bndstx
inc
adc
clc
enter
inc
loop
mov
bound
push
fstps
arpl
mov
jbe
xor
cs
das
jge
pop
or
jnp
xchg
mov
push
icebp
add
bswap
cs
xchg
xchg
jle
xchg
adcl
subl
mov
jle
int3
pop
test
ret
popa
gs
fs
addr16
cmp
ss
xor
or
mov
ja
or
jb
pop
lret
movsl
mov
dec
cmp
sbb
mov
lods
lret
cmp
and
std
add
gs
jg
sar
sahf
stos
cmp
or
mov
adc
imul
les
out
xor
cmp
pusha
sbb
lcall
cmp
mov
jg
pop
inc
mov
push
test
add
push
jbe
dec
arpl
cmp
ljmp
stos
in
int3
or
dec
jnp
ljmp
xlat
les
repz
mov
imul
insl
out
dec
mov
repz
pop
push
sbb
ds
cmp
jb
cmp
sub
cs
inc
cmp
in
inc
pop
repnz
and
repnz
sub
cmp
add
pop
lret
sbb
or
daa
add
dec
in
out
popf
xchg
xchg
adc
imul
sub
rcrb
cmp
sub
dec
sahf
jmp
and
xchg
jp
mov
sbb
xchg
pop
dec
fwait
pop
outsl
dec
mov
or
mov
ljmp
dec
out
xor
inc
pop
lods
popa
out
loopne
jns
imul
sub
pop
enter
jns
adc
sbb
addr16
out
ljmp
mov
jg
call
adc
push
cmp
mov
mov
mov
inc
xchg
loop
lds
ljmp
out
mov
test
call
mov
enter
out
fs
mov
pop
mov
arpl
stos
xor
out
cmpsb
adc
mov
into
push
mov
stos
dec
jg
dec
ficoms
fcompl
adc
mov
jnp
stos
lret
das
das
pop
shl
loop
xlat
fiaddl
jmp
sbb
cltd
stc
popa
xor
cli
adc
dec
outsl
mov
sti
scas
cli
lock
mov
sub
cmp
outsl
pop
pop
or
dec
fdivrl
scas
cmp
xchg
insl
std
fstpl
push
pop
fdivl
test
insb
dec
xor
js
or
imul
push
pop
out
aaa
vpmaxub
jno
aaa
adc
pop
add
pop
push
add
loope
adc
inc
jg
dec
fmuls
lock
sub
out
inc
mov
sub
or
lahf
test
jp
cmp
sbb
loopne
inc
sbb
jp
cmc
dec
sub
cmp
mov
jbe
mov
call
rorb
xlat
xchg
psubusw
inc
orl
xchg
add
roll
push
popa
sub
imul
add
aad
pop
mov
lock
mov
jp
cld
das
cli
jmp
data16
es
mov
dec
push
xchg
popl
into
or
xchg
mov
pop
jmp
test
cmp
xchg
or
stos
sub
push
push
cmp
pop
ljmp
push
cmp
xchg
inc
and
sbb
push
repz
fs
xchg
dec
xor
push
out
xor
jns
lcall
hlt
negl
mov
fmulp
movsl
or
ficomps
mov
lret
or
fwait
pushl
adc
imul
neg
sahf
lds
shlb
mov
xor
adc
push
int3
and
enter
fmull
sbb
lods
cwtl
adc
jns
out
sbb
cli
stos
jge
dec
adc
scas
cmp
mov
mov
dec
dec
cli
jmp
mov
jo
lcall
clc
and
jecxz
mov
loopne
call
inc
lret
push
jns
scas
push
ret
scas
dec
jae
add
pop
scas
or
repnz
pop
sub
stos
out
jns
cmp
mov
scas
adc
adc
mov
or
mov
adc
fs
adc
and
dec
in
push
xchg
nop
cli
in
adc
inc
idiv
cli
mov
sbb
or
and
insb
ret
arpl
or
jno
pop
sbb
cmp
sbb
test
mov
xor
es
fstl
pushf
mov
sub
xor
push
das
jp
cmpl
es
jbe
test
sub
test
pusha
ret
dec
push
dec
adc
cwtl
mov
dec
push
call
mov
cmpsb
push
xor
jmp
cltd
in
lcall
out
dec
sub
insl
push
fdivl
mov
fcompl
cmpsl
repnz
dec
xchg
ljmp
dec
jne
inc
imul
pusha
call
ljmp
cmpsl
mov
lods
mov
mov
enter
sub
repz
std
leave
bnd
jo
add
or
movsl
sub
lahf
loop
or
rcrl
lret
mov
mov
adc
ja
testb
mov
or
pop
inc
mov
lea
cmpsb
dec
mov
cld
sar
clc
in
arpl
call
push
mov
mov
dec
inc
pop
mov
xor
imul
pop
mov
cmp
sbb
pop
ljmp
inc
cmp
pop
xchg
ljmp
or
ds
mov
inc
cli
xchg
insl
xor
lret
mov
fnstenv
or
push
dec
imul
jbe
xchg
and
mov
push
inc
jae
adc
fisubrl
addl
int
cmpsb
fs
push
call
xor
das
mov
and
mov
inc
test
sbb
ret
lods
subl
push
adc
xchg
and
adc
mov
xchg
outsb
popa
xor
sub
cli
cmp
cld
out
mov
add
push
out
fcomps
sub
je
clc
repnz
mov
and
and
dec
pop
repnz
jb
add
push
pop
inc
mov
lock
test
mov
icebp
movsb
jmp
pusha
sbb
in
cmc
loop
lods
adc
sbb
or
out
test
popw
push
jne
push
sub
fildll
xor
std
out
es
adc
pop
jns
or
pop
stc
in
fistpll
mov
mov
fbld
xchg
push
in
xchg
repnz
popa
or
bswap
sti
jle
inc
lock
push
loopne
aas
fcom
dec
addr16
pop
sub
push
adc
dec
or
scas
mov
out
adc
icebp
sbb
lcall
dec
shrb
idivb
gs
shll
mov
outsb
fidivrl
push
add
jmp
or
xchg
out
pop
jo
or
rcll
fs
cmp
pop
or
orl
clc
dec
repnz
ficoml
add
sub
dec
jmp
clc
sub
push
sahf
xor
mov
push
mov
cwtl
or
ljmp
cli
stos
mov
jmp
js
or
pop
mov
and
or
dec
cmp
jnp
jp
lea
sarb
cltd
shrb
leave
lods
push
stos
cmp
cmpsl
out
xchg
scas
int3
cmp
jnp
jmp
xor
sbb
cmp
stos
xor
dec
sbb
out
xchg
js
cs
ss
call
jecxz
add
adc
syscall
cmp
sub
cli
or
hlt
out
scas
fwait
popa
fs
roll
lea
pushf
adc
jns
xor
or
cmp
xchg
adc
repnz
push
addr16
jno
push
xlat
mov
pop
sub
push
jb
or
mov
insb
lods
jg
pop
lret
jnp
div
push
mov
cmp
or
adc
mov
pop
pusha
mov
push
or
and
cmp
fisttps
xor
jnp
repnz
adc
roll
lret
cli
adc
cmp
pop
fisubl
jle
fsts
sbb
dec
hlt
xchg
jnp
pop
cld
test
xchg
cmp
sbb
push
xchg
pop
lea
or
fdivs
mov
pop
or
lock
inc
adc
push
adc
mov
or
add
or
or
xchg
mov
mov
lret
test
push
mov
stc
cmp
mov
outsl
loopne
add
imul
popl
fwait
scas
jp
jle
imul
popa
cmp
jb
cmpsl
data16
jns
pop
ja
jmp
repnz
xchg
push
movsb
add
sbb
pop
icebp
mov
stos
jmp
pop
and
das
push
sbb
sub
xorl
iret
les
mov
mov
xchg
leave
push
sub
jecxz
add
jecxz
andb
add
in
jmp
idivb
gs
or
cs
jg
dec
fmull
in
aas
push
mov
xlat
fwait
mov
pop
pushf
and
mov
cltd
push
push
ljmp
or
pop
scas
sub
adc
data16
xchg
lods
dec
jl
pop
insl
push
aas
push
daa
dec
inc
or
sub
xchg
pop
cld
xchg
test
mov
dec
push
xor
xor
add
inc
pop
push
rcr
push
or
scas
pop
adc
sti
daa
xor
cld
rorl
inc
cwtl
shll
xchg
adc
jecxz
dec
cmpl
xchg
in
hlt
adc
imul
fucom
inc
xor
mov
or
stos
pushf
dec
jmp
stos
ljmp
sub
xor
ljmp
or
inc
xchg
cmp
out
mov
movsl
or
aad
ds
mov
xor
outsl
pop
xchg
cld
jge
cmp
pop
xchg
dec
lret
out
jg
bswap
jno
sub
jg
push
pop
push
pop
mov
test
push
mov
shll
mov
xchg
nop
pop
dec
loopne
movsb
push
mov
jge
sahf
lea
pop
stos
pop
sbb
cltd
jl
dec
jle
in
repnz
pusha
push
lods
or
mov
jg
mov
or
imulb
xor
aad
mov
mov
xchg
fildl
movsb
pop
add
stc
mov
pop
mov
mov
jne
mov
or
jmp
testl
xchg
dec
out
cld
enter
dec
mov
add
subb
cmp
popa
xor
jne
jno
jmp
dec
mov
pop
stc
lret
clc
cmpsb
iret
lret
and
inc
ljmp
insl
mov
mov
dec
arpl
imul
inc
cli
cmpsb
cli
cmc
mov
lret
subb
outsb
push
cs
adc
or
pop
ficoms
sahf
or
lret
out
xchg
fcmovb
fcompl
sbb
ficoms
sbb
ret
ret
push
stc
or
xlat
std
mov
adc
shl
jb
inc
inc
mov
lcall
or
pop
inc
aad
leave
xchg
jg
loopne
sub
test
adc
movsl
leave
cmp
jnp
mov
outsb
pop
and
enter
int3
adc
mov
ljmp
leave
aas
xchg
mov
xlat
rcll
clc
in
clc
pushf
rcrl
xchg
or
lret
into
sbb
xchg
xchg
mov
addr16
xchg
dec
mov
jmp
popa
mov
pop
jge
out
mov
pop
xor
jb
popa
movd
cmp
fucomip
aam
cmp
out
xor
in
lea
mov
cmpl
ficomps
mov
inc
xor
jno
hlt
das
lods
cmpsl
add
frstor
iret
jecxz
das
inc
fistps
cmp
cltd
dec
xor
repnz
lcall
mov
add
jo
jb
mov
sbb
daa
jnp
fsub
inc
mov
and
inc
mov
adcl
fsubrl
dec
loopne
dec
scas
rcrl
dec
push
mov
scas
jl
jae
testb
adc
mov
push
push
fcomps
es
and
sahf
pop
adc
push
fdivrl
cmpsb
adc
iret
jecxz
mov
xlat
jnp
pminsw
jne
decl
push
scas
dec
or
mov
popa
test
fs
out
call
cmp
mov
cs
or
xchg
mov
jb
jecxz
lds
mov
mov
lret
jae
call
and
or
push
jnp
add
incb
inc
or
push
jnp
dec
pop
add
gs
or
add
xchg
inc
or
bnd
jns
aaa
cld
xor
dec
jge
mov
int3
cmpsb
cs
cmp
movsl
or
aaa
cmp
inc
sub
or
mov
sahf
lcall
inc
and
add
pop
lods
and
mov
mov
adc
sub
push
pop
idivl
mov
jo
call
push
repnz
testl
loope
mov
add
add
jae
mov
fsubrs
mov
cmp
sbb
and
dec
aas
lret
jg
jp
addr16
scas
inc
cmpsb
jo
jmp
mov
or
pop
sbb
fiaddl
xor
fists
push
std
dec
inc
out
rcrl
jnp
clc
cmp
xchg
and
or
ja
fs
push
inc
mov
adc
add
jo
lock
int
scas
xor
addr16
xchg
imul
inc
xor
lret
lret
push
testl
inc
add
out
lcall
push
push
outsb
rorb
imul
out
sbb
cmp
or
inc
stos
or
fucomip
fs
lret
cmp
sbb
jns
ljmp
sbb
jb
push
pop
mov
aas
sub
dec
mov
jle
add
xchg
push
jb
push
mov
cli
lock
cmp
jmp
enter
pop
mov
clc
or
push
xlat
sbb
sbb
out
mov
mov
xchg
rcrb
xchg
push
push
imul
arpl
lcall
sbb
mov
mov
arpl
mov
ret
mov
or
xchg
iret
ss
fildll
scas
mov
and
lods
xor
or
fimull
lock
test
add
sub
mov
mov
outsl
out
mov
inc
ja
imulb
xchg
sbb
sub
push
test
repnz
jne
es
lret
sbb
jmp
dec
cmp
push
xchg
insl
jne
stc
sub
mov
repz
mov
jmp
repz
shlb
xor
das
dec
pop
out
push
ss
inc
xor
jp
cmp
hlt
aas
insl
mov
xor
xor
jno
sar
mov
lcall
mov
stos
cli
jp
push
pop
push
adc
inc
ds
cs
sub
push
sahf
xchg
je
jae
mov
movsb
int
sub
test
sbb
cli
pop
inc
inc
inc
jmp
mov
inc
inc
or
inc
push
sbb
lret
mov
adc
push
dec
or
out
sbb
sbb
lret
pop
out
ss
mov
mov
mov
xor
fwait
mov
jnp
fidivrs
adc
mov
inc
mov
mov
jmp
insb
push
xchg
std
fcmovnbe
mov
push
push
inc
jg
xor
jbe
iret
imul
jle
aaa
push
pmullw
fdivs
add
lock
xchg
sahf
and
divl
dec
mov
hlt
or
jns
test
push
arpl
lret
and
xlat
or
mov
pusha
cmc
fidivrs
cmp
pop
sub
add
leave
inc
push
mov
and
aad
xlat
neg
dec
pop
add
sbb
jecxz
or
dec
adc
cmp
arpl
push
loop
addr16
lret
cmp
mov
jle
push
add
imul
jb
stc
rolb
push
test
loopne
int
mov
fists
jecxz
dec
dec
ljmp
cli
jecxz
cmp
xchg
lods
pop
push
or
push
cld
lds
sbb
cltd
add
decl
add
push
out
xor
inc
cli
or
out
or
sbb
pop
pop
cltd
xchg
dec
pop
or
inc
std
mov
leave
cmp
mov
and
fs
fadds
or
add
adc
testb
push
xor
or
call
jmp
lea
das
repnz
adc
loopne
ljmp
gs
xor
xchg
cltd
notl
mov
negb
nop
sahf
or
push
cmp
pop
mov
xchg
daa
cmp
sbb
pop
mov
mov
jl
push
or
cmpsb
loopne
out
test
xchg
sub
xor
dec
js
jae
lods
or
jge
in
das
cmp
jp
push
inc
mov
xlat
scas
or
cmp
dec
repnz
not
call
call
dec
add
leave
xchg
lods
in
notb
cwtl
out
frstor
mov
cmp
xor
cmp
xchg
test
mov
and
sub
fwait
mov
jg
mov
cmp
mov
aas
flds
add
push
les
in
add
adc
cwtl
loope
xor
cmp
cs
or
jnp
lds
fs
pop
mov
cli
fnstenv
mov
push
cmp
xor
fdiv
push
jl
clc
xor
mov
test
test
divps
scas
ret
mov
xchg
adc
stc
pop
mov
and
add
add
data16
or
rorb
sub
lods
js
test
push
push
mov
and
add
aaa
xor
or
ljmp
push
mov
out
xchg
sarl
imul
mov
push
jle
xor
xor
andl
add
in
inc
jecxz
mov
pop
arpl
jno
cmp
inc
jno
pop
jns
test
add
and
sub
imul
loope
xor
fdivrs
jecxz
das
or
xor
fmull
les
sarl
sub
sbb
and
or
into
or
into
push
inc
sub
loopne
xor
jns
xchg
dec
push
adc
mov
bound
mov
out
int
insb
scas
in
fcmovnu
gs
popa
push
int
add
pusha
xchg
ljmp
ret
sbb
add
pop
scas
cmp
dec
sub
shl
push
mov
out
insb
mov
lahf
dec
adc
ja
jle
insb
fwait
daa
jns
por
wbinvd
fxch
inc
leave
inc
cmp
sahf
mov
mov
aam
mov
repnz
lea
sub
sub
imul
jg
xor
inc
xchg
movsl
call
pop
stc
lahf
or
jmp
out
or
adc
in
lods
mov
bound
sbb
pop
xchg
pop
dec
cmp
mov
inc
add
jg
mov
dec
xchg
fwait
jecxz
pushf
test
mov
ret
imul
pop
adcl
sub
xchg
xchg
ljmp
dec
cs
daa
ja
sub
test
loopne
daa
mov
fs
lret
ret
fs
je
fistpll
lods
jecxz
jecxz
cmc
and
push
scas
test
push
inc
jmp
rcrb
jbe
jns
sub
xor
push
add
xchg
aam
sbb
mov
sti
mov
xchg
push
aaa
iret
das
pop
pop
fnsave
popa
mov
xchg
xor
jae
loope
lds
xchg
or
mov
outsb
or
ljmp
lret
mov
or
pop
cwtl
cmp
nop
mov
xchg
push
sbbl
add
repnz
jmp
test
loop
adc
xor
loop
jmp
loopne
sbb
mov
ljmp
sahf
and
cld
mov
mov
loopne
call
mov
mov
dec
fnsave
or
cmp
fmuls
cmc
neg
out
pusha
or
mov
adc
sub
cmpb
xchg
push
inc
sub
jb
fmul
or
push
jg
mov
addr16
repz
shrl
push
pop
popf
shr
call
jecxz
push
push
mov
paddusb
push
jl
pop
fnsave
mov
ljmp
mov
dec
cs
std
push
aas
shlb
pop
xor
dec
push
in
in
iret
repz
scas
and
cli
sub
mov
jge
pop
pop
in
and
je
scas
and
scas
lock
mov
imul
sub
sbb
fs
cmc
or
in
sub
adcb
pusha
or
lods
hlt
pop
popf
call
jp
pop
jecxz
cld
fwait
xchg
inc
out
xor
outsb
loop
pusha
test
dec
test
rcll
mov
mov
inc
dec
pop
ret
loope
sti
xor
or
xchg
das
and
jmp
add
cmpsb
xchg
pop
std
mov
sbb
and
adc
xchg
shrl
mov
mov
xchg
push
sub
dec
in
mov
popa
sbb
dec
enter
cli
add
jl
pop
mov
or
adc
mov
cli
mov
in
add
cltd
xchg
iret
or
mov
lret
enter
mov
cmp
test
leave
xchg
push
cltd
mov
repnz
sbb
pop
incb
inc
int
shrl
je
fcmovnbe
into
dec
jl
cmpsl
imul
adc
cli
cmp
add
ds
pop
or
imul
idivb
packssdw
test
scas
pop
sub
mov
xorl
mov
push
jmp
lcall
call
push
and
pop
ljmp
dec
adc
adc
repz
jl
insb
mov
sbb
call
ss
mov
pop
adc
cmc
mov
push
ljmp
jae
pop
outsl
cmp
subl
imul
mov
test
xor
lret
nop
adc
addl
repnz
gs
mov
push
mov
enter
aaa
pop
mov
mov
repz
mov
decb
adcl
cli
sub
stos
jmp
add
call
lods
jnp
sbb
and
xor
push
in
aam
bound
lds
mov
pushf
add
gs
leave
jnp
cwtl
mov
cmp
cli
push
or
jnp
lret
mov
shlb
aas
push
pop
repnz
cs
cli
sbb
pop
daa
lret
test
popf
lock
lret
aaa
rorl
lods
dec
sub
ja
cli
int
mov
push
idivl
xor
sbb
repnz
addr16
mov
lret
leave
sbb
xor
hlt
xor
stc
les
and
loope
scas
pop
iret
out
mov
jmp
pop
push
push
ljmp
push
shll
mov
fimuls
xchg
sbb
comiss
sbbl
cmc
sarb
insl
sti
mov
jl
call
pop
cmp
pop
mov
shl
loop
les
mov
cmp
pop
call
ds
fmuls
xor
iret
cmp
sub
iret
sbb
cmp
icebp
aas
cli
cmp
mov
mov
add
iret
mov
pop
vmptrld
add
stos
cmp
mov
out
sub
or
inc
xchg
lods
in
mov
push
adc
or
sub
sub
gs
pop
inc
or
mov
add
xor
cs
or
icebp
xchg
test
clc
fstps
push
pop
jp
push
xor
and
xor
rcr
dec
mov
dec
xchg
lea
mov
int
jbe
xor
test
jnp
or
xor
sub
decb
xor
sub
jecxz
pop
dec
cmp
jnp
jb
das
or
repz
rcr
cwtl
cwtl
xor
scas
xor
fadds
cmp
push
add
inc
out
loopne
adc
fs
loope
js
in
cmp
ja
repz
bound
repz
fs
dec
into
loop
jbe
frstor
cli
inc
lea
xchg
call
or
cmp
jns
repz
movsl
lock
push
insb
lock
and
add
pop
add
mov
mov
mov
aam
xchg
and
clc
sbb
pop
add
mov
inc
mov
cltd
jg
pop
cmp
adc
std
int3
inc
flds
js
movsb
repnz
test
arpl
dec
push
lods
xchg
scas
mov
sub
sbb
inc
inc
dec
inc
push
pop
shll
push
jnp
push
cmp
push
gs
aaa
dec
xor
icebp
in
rcrb
mov
pusha
push
imul
bound
sarb
sbb
xor
das
lds
loopne
xchg
test
scas
mov
inc
loopne
das
aaa
cli
sub
dec
stos
jns
fs
mov
lret
or
pop
xchg
pop
in
out
iret
adc
adc
js
push
or
push
pop
dec
in
in
push
loopne
lods
pushl
jnp
mov
adc
loope
repnz
hlt
or
sub
jnp
sub
loope
mov
push
insb
jl
add
dec
mov
cld
popa
jb
sub
inc
xchg
jmp
pop
xor
sub
ja
ss
cmp
push
rol
push
lret
in
pop
in
mov
cs
dec
hlt
inc
int
inc
xchg
call
popa
pop
ret
and
fs
jmp
iret
fsts
stc
pop
inc
mov
or
inc
icebp
xlat
jo
call
ja
daa
mov
push
mov
addl
lcall
mov
fpatan
and
or
jecxz
out
les
inc
out
pop
mov
adc
fisubl
imul
mov
loopne
scas
into
ljmp
jne
dec
sub
jns
sbb
dec
bound
repnz
xchg
sbb
sbb
out
and
repz
imul
jae
subb
mov
aaa
jle
sbb
sub
mov
ss
sbb
pop
adc
mov
inc
mov
mov
jns
pop
and
mov
cld
repz
xor
xchg
lret
pop
es
sub
mov
mov
fiaddl
ljmp
stc
jp
jp
xchg
pop
jo
pop
mov
mov
das
les
fsts
lcall
cmp
ss
test
lret
push
jb
lock
jl
inc
clc
jno
add
in
movsb
ss
andb
mov
adc
popa
nop
xor
jg
popa
xor
xchg
push
mov
dec
sti
cmp
push
data16
into
mov
icebp
inc
loopne
sti
jo
pushf
add
pop
sub
or
popa
mov
push
mov
repnz
pusha
into
xor
jge
lret
scas
jb
lret
push
push
xor
sbb
loopne
int3
repz
cmpsb
xchg
dec
mov
pop
outsb
or
ficompl
jp
sbbl
jb
cmp
insl
bound
or
out
shll
pop
inc
add
cld
push
mov
fstpt
shll
ss
loop
rorb
sbb
and
dec
mov
add
pop
mov
lret
ret
call
dec
mov
xor
scas
jbe
push
js
cwtl
stos
dec
jns
ss
push
mov
push
cmpsl
ret
xchg
imul
sub
imul
out
repnz
cmp
inc
xor
lock
pop
out
push
inc
stos
cmpl
mov
or
push
jle
push
xor
add
push
out
jle
pop
cli
call
jmp
dec
mov
js
cwtl
aaa
dec
cli
stos
repnz
xchg
push
sbb
xchg
cmp
popf
shll
jmp
and
cmp
scas
rorb
cmp
lret
repnz
out
movl
je
or
pop
xchg
pop
inc
mov
or
lret
cli
sub
dec
vunpckhps
xchg
xor
std
pop
xchg
adc
push
mov
mov
cmp
stos
cli
add
rorl
mov
sti
cmpsb
inc
push
pop
repnz
lock
sbb
push
repz
and
jae
fdivr
cli
mov
pop
mov
adc
sbb
xchg
hlt
lock
pop
test
push
pop
cmp
arpl
lret
or
fwait
repnz
fucomi
cli
mov
add
out
adcl
out
ret
push
sbb
out
fldcw
jmpw
leave
push
sbb
add
lahf
sub
jmp
add
mov
xor
sti
ss
gs
call
jns
fldenv
movsb
mov
int3
xchg
dec
xchg
loopne
ss
push
jo
repz
dec
in
cmpb
popa
pop
pusha
jl
bound
repnz
sub
lret
hlt
lods
leave
cmp
sbb
jmp
enter
int3
push
repnz
or
fsts
insb
mov
push
dec
inc
ficomps
imul
dec
mov
pop
mov
js
xchg
mov
icebp
jnp
pop
dec
fcoms
pushf
or
out
imull
jg
addr16
nop
sbb
inc
sbb
pop
fdivrs
roll
sbb
lock
dec
sbb
rclb
imul
js
cmp
cmpsb
adc
add
xor
add
add
or
dec
negl
jge
xchg
adc
rclb
cmp
hlt
dec
gs
dec
cli
mov
or
in
imul
or
mov
or
cmp
mov
daa
dec
mov
pop
ljmp
lods
loop
shl
imul
repz
testl
daa
das
push
cmp
test
movsl
idiv
arpl
and
cmp
imul
dec
jnp
aad
repz
rorl
fistpll
jns
mov
mov
mov
pushf
into
adc
mov
mov
jmp
sbb
fistps
movsb
imul
cwtl
xchg
mov
lret
and
cltd
cmp
shrb
adc
adc
sbb
aas
or
loop
rorb
scas
sub
data16
cmp
push
cmp
xor
js
mov
popf
add
mov
dec
pop
ss
test
cltd
pop
fwait
push
enter
pop
push
pushf
test
inc
mov
mov
sub
ljmp
push
repnz
aad
add
outsb
xchg
inc
jmp
test
mov
movhps
rolb
mov
mov
pop
int
add
mov
or
sarb
int3
jbe
repz
ret
cmpsl
enter
sub
inc
inc
lret
arpl
loope
pop
lcall
xor
jnp
dec
cwtl
push
xchg
fistpll
cmp
push
test
cmp
jmp
and
xlat
in
test
push
sarb
jnp
inc
pop
sub
pop
lods
mov
out
jmp
cmp
test
pop
das
mov
add
dec
shll
jo
fiadds
out
inc
add
sbb
das
sub
inc
or
xor
cmp
jmp
stos
pop
sub
pop
xchg
xchg
icebp
repnz
or
jecxz
fisttps
js
push
push
cmp
or
and
push
mov
enter
xchg
hlt
jl
sbb
mov
test
cli
cltd
xchg
loopne
ret
jg
dec
or
ret
bound
adc
pop
xor
sub
stos
or
leave
fists
pop
sbbl
int
or
adc
xchg
repz
nop
mov
xor
sbb
stos
pop
xchg
ret
cmp
dec
or
into
clc
cld
jmp
xor
popa
mov
jge
ja
mov
int
std
mov
cwtl
out
or
ljmp
mov
in
sub
nop
mov
add
add
mov
fcompl
imul
mov
mov
adc
stos
pop
cmp
insb
call
mov
lods
pop
adc
fwait
xor
in
cmc
insl
mov
jbe
jecxz
in
mov
push
lret
jecxz
xor
or
xchg
sub
lret
or
je
lea
icebp
mov
aaa
push
xchg
enter
xchg
aam
jp
test
inc
mov
sub
inc
mov
mov
sbb
div
push
mov
jns,pn
stos
int3
sbb
icebp
push
jbe
xchg
nop
inc
pop
dec
daa
jg
xorl
xchg
decb
jmp
cld
sbb
adc
bound
jg
add
aaa
dec
movsb
adc
out
sub
xor
mov
pop
pop
out
jae
push
je
pop
scas
mov
xchg
mov
mov
pop
inc
orl
and
xchg
repz
push
pop
push
arpl
inc
xchg
fdivl
lock
dec
mov
mov
ret
cmp
lret
fnstcw
sub
push
cmp
dec
push
in
test
jmp
aad
pop
dec
adc
sbb
cmp
js
movsl
lds
and
ljmp
inc
mov
lahf
cmp
cmp
dec
mov
andb
test
repnz
jl
xchg
aaa
mov
pop
pop
mov
inc
int
push
mov
add
mov
sti
sarb
xor
daa
xor
int3
mov
fs
sub
cmp
nop
jbe
add
pop
mov
hlt
jp
mov
jmp
pop
arpl
iret
pop
mov
mov
shll
insb
cmc
mov
mov
cmp
and
imul
lret
incl
mov
jp
movsb
test
loope
pop
xchg
ss
push
clc
inc
push
mov
adc
add
data16
jnp
jl
mov
inc
pop
ret
fimuls
jecxz,pn
jecxz
arpl
sub
push
jnp
push
sub
inc
int
mov
movsl
mov
test
add
push
imul
hlt
cwtl
mov
test
push
mov
jns
into
mov
or
dec
call
imul
shll
inc
out
push
shll
xchg
shr
addr16
sbb
fdivr
add
xor
or
arpl
pop
or
add
push
mov
in
cmp
pop
shl
xlat
sahf
push
data16
popf
pop
xchg
mov
out
xchg
sub
adc
jg
fs
cmp
iret
pop
push
arpl
aad
sahf
sub
mov
dec
repnz
testl
addr16
or
aas
shlb
frstor
cli
test
sbb
clc
inc
in
test
dec
xor
repz
dec
xchg
jno
add
pop
push
and
push
repnz
add
jns
or
cwtl
jecxz
xlat
lret
jecxz
sbb
jnp
js
mov
push
or
ret
push
jb
and
fwait
stos
cmp
jns
push
pcmpgtw
repnz
mov
xchg
pop
out
ja
lahf
push
incl
push
leave
flds
ds
ss
jnp
adc
or
pusha
dec
rclb
subl
mov
mov
xor
call
push
cld
leave
adc
les
mov
inc
out
jns
inc
loope
sbb
push
sub
test
jle
cmp
pop
sbb
jecxz
repnz
mov
add
dec
js
jmp
lods
jmp
jns
mov
jmp
jae
outsb
or
rep
arpl
or
mov
push
les
xor
icebp
sahf
add
or
pop
dec
mov
jmp
sti
sub
or
push
sti
xor
mov
xor
into
lcall
scas
idivb
aas
sub
push
mov
stc
cld
and
icebp
inc
xchg
lods
lret
mov
mov
stc
std
or
push
xchg
int
fadd
cmp
movsb
mov
mov
or
add
inc
dec
call
mov
ds
cld
jmp
out
cld
pop
clc
addr16
das
add
frstor
xor
inc
push
fnstcw
or
pop
xor
xchg
inc
scas
fstps
dec
clc
idiv
das
pop
test
cmp
xor
fstp
jg
pushw
pop
out
xchg
or
or
mov
pusha
nop
jae
sbb
or
adc
push
and
adc
cli
das
mov
lds
add
sub
dec
mov
lcall
and
pop
loop
fldt
daa
push
es
or
dec
movsl
cmp
pusha
jno
cld
lcall
dec
jno
scas
daa
push
jne
mov
stos
xor
ljmp
fnsave
imull
icebp
jle
add
int3
pop
leave
ljmp
popf
sbb
or
sahf
mov
sti
add
decb
je
into
fnstcw
lock
popa
cmp
pop
dec
cmpsl
push
push
lods
sbb
jo
dec
stc
fs
mov
fildl
cmp
dec
jecxz
or
adc
stos
add
dec
push
mov
or
std
xor
cmp
sbb
cld
jmp
icebp
loop
sarl
fldlg2
lret
pop
mov
in
sahf
and
sub
pop
outsl
pop
xchg
mov
sahf
fidivrs
out
mov
pop
pop
xchg
test
ss
iret
pusha
aas
push
mov
cmp
add
adc
js
push
mov
push
mov
js
idiv
fs
ss
ret
jmp
fisubl
mov
repz
js
ret
adc
mov
test
mov
stc
lcall
or
icebp
cmp
scas
mov
sbb
lea
adc
lock
fwait
in
sub
pop
or
push
nop
add
loopne
xchg
repnz
popa
dec
and
sub
dec
lock
iret
add
jns
sarl
pop
mov
lret
push
mov
in
pop
cmp
or
fcmove
in
in
jge
inc
arpl
mov
fistl
dec
shl
lea
push
push
popf
mov
sbb
push
jge
pop
addl
mov
outsl
mov
das
mov
xchg
jne
xor
jle
mov
sbb
mov
xor
mov
mov
sbb
jp
orl
mov
xchg
mov
movsb
cmpsb
jp
arpl
xor
xlat
enter
cmpsb
inc
sbb
inc
jns
cmp
lods
leave
and
hlt
lahf
cli
test
sbb
mov
sbb
mov
push
sahf
cmc
mov
adc
daa
push
push
pop
jne
jle
pop
fs
push
pop
xchg
and
xchg
js
lods
ss
mov
push
or
into
sub
push
dec
push
enter
xchg
jp
xchg
fdivrs
addr16
mov
mov
call
fwait
xchg
and
lcall
mov
roll
in
scas
adc
jg
into
xchg
cmp
mov
outsb
jg
adc
sub
and
mov
js
jnp
sti
fsubl
jae
adc
out
mov
das
pop
ficompl
jmp
xor
pop
stos
rcrb
fwait
or
pop
xchg
sar
insb
inc
cwtl
adc
es
or
jo
loopne
xlat
stos
dec
pop
and
test
insb
out
dec
xchg
jge
pop
ljmp
nop
inc
test
or
lock
dec
rclb
cmpsl
xor
jno
test
pop
mov
aaa
mov
cmp
cmp
dec
sahf
pop
mov
push
jb
push
cli
mov
inc
jg
mov
and
inc
inc
jl
sub
lret
ret
out
pop
mov
adc
push
lret
cmp
movsb
popa
mov
imul
rcll
cltd
iret
in
scas
adc
cwtl
jbe
in
pop
push
mov
ret
sub
mov
push
out
sbb
jecxz
loop
push
sbb
mov
xchg
in
mov
fs
sub
pop
cmp
add
ljmp
notb
sub
xchg
push
fucomip
fs
xor
or
das
cmovne
int
ret
pushw
int3
add
mov
inc
pop
repnz
or
stos
mov
inc
fs
fmul
add
arpl
addr16
push
fbstp
imul
sub
adc
and
dec
ljmp
cwtl
mov
xchg
add
mov
mov
ficoms
mov
cld
push
movsl
mov
or
xor
lret
sub
mov
or
lock
fidivrl
ljmp
into
fs
loop
xchg
and
mov
inc
jo
or
insb
or
cmp
mov
add
dec
mov
jp
mov
imul
cli
or
jp
xchg
mov
or
and
sub
push
daa
jbe
mov
jae
sbb
out
pop
pop
in
mov
jno
repnz
repz
fsubrl
or
adc
cmp
add
xchg
movsb
test
cmp
xor
dec
dec
jnp
pop
push
push
sbb
sub
repz
push
or
xor
and
push
mov
ljmp
xchg
mov
cld
sub
jecxz
outsl
sub
xchg
ss
or
cmp
dec
and
mov
into
xor
sbb
or
pop
pushf
sbb
lret
mov
inc
aam
or
ljmp
aas
mov
sbb
xor
cmp
mov
ljmp
shlb
mov
pop
and
xchg
lods
mov
mov
imul
cmpsb
test
sub
pushf
subb
mov
rcll
jl
test
or
dec
mov
repnz
test
xchg
mov
out
sub
sub
call
adc
cmp
mov
mov
inc
repnz
and
insl
inc
xchg
in
push
or
jns
jnp,pt
out
in
cltd
scas
dec
jb
leave
inc
ljmp
aam
push
out
ljmp
testb
mov
in
xor
dec
fwait
sarb
insl
cmp
mov
pop
cmp
cmp
sbb
jmp
push
add
insl
cmova
add
lock
mov
inc
mov
fs
adc
jle
pop
inc
jbe
or
mov
js
neg
lcall
loopne
fwait
sub
les
mov
loope
lret
mov
mov
xchg
test
add
sbb
ds
cmc
outsb
paddusw
cs
sbb
sub
repnz
into
or
or
sub
xor
ds
xor
and
daa
gs
mov
jmp
inc
pop
mov
imul
jge
pop
mov
sub
sahf
mull
push
cmp
mov
cli
xor
cmp
cmp
lcall
lret
imul
out
or
gs
xor
mov
or
push
test
jecxz
fidivrl
and
inc
sbb
adc
jns
out
or
stos
pushf
in
sahf
imul
mov
int3
adcb
cmp
cmp
scas
pop
cmp
xchg
pop
clc
xorb
das
xor
in
mov
xlat
jo
mov
loopne
popf
xor
inc
xchg
arpl
add
je
add
jae
mov
ljmp
pop
add
jo
in
outsb
scas
lcall
aas
inc
out
or
jb
sbb
jmp
dec
or
pop
xchg
push
jmp
dec
mov
lock
lcall
popa
add
jg
jecxz
sahf
inc
cmp
inc
cmp
int
repnz
int
or
push
push
jp
lds
cmp
test
jmp
xor
out
xchg
or
sub
pop
or
or
enter
enter
in
imull
sub
arpl
addr16
dec
shl
push
fstpt
sub
xchg
pop
imul
and
lds
pusha
add
adc
sti
sub
or
ja
cmp
xchg
add
mov
daa
gs
lret
stc
jg
pop
or
jmp
or
push
mov
cwtl
int
ljmp
jg
push
mov
pop
cmc
jbe
jg
sbb
in
cmp
jmp
hlt
inc
push
and
popa
adc
je
pop
rcr
xor
outsl
pushf
mov
or
xchg
leave
lret
pushf
push
adc
jbe
adc
pop
or
pop
decb
cmp
adc
decb
movsb
xchg
xchg
mov
jecxz
je
adc
pop
clc
out
dec
or
xchg
bnd
lds
cmp
repnz
mov
push
dec
push
hlt
jl
mov
or
lea
dec
jnp
or
pop
pushl
pop
pop
mov
addr16
andl
jle
jmp
cmp
inc
mov
out
or
mov
xor
lret
test
hlt
jl
popa
or
testb
ret
test
das
cmp
mov
addr16
mov
xchg
ds
int3
sbb
adc
or
loopne
sbb
xchg
jnp
inc
lret
sub
out
pusha
jecxz
mov
mov
push
and
leave
das
ja
out
mov
push
repnz
call
sbb
dec
xchg
outsl
cmp
test
pop
or
stos
push
mov
or
cmp
cmpsb
push
cmp
ficomps
ljmp
jmp
inc
mov
mov
jmp
mov
test
sbb
dec
in
add
ljmp
inc
jmp
daa
jnp
adc
push
inc
push
jecxz
repz
cmpsb
in
add
xchg
sub
cmp
or
mov
adc
sub
stc
ljmp
jne
sar
mov
mov
orb
fidivrl
mov
xor
mov
sbb
mov
lcall
movsb
sti
sbb
ret
movsb
xor
inc
insb
sti
in
fisubs
adc
es
add
lods
std
xchg
int
xchg
movsb
xor
cltd
cmpsl
gs
pop
mov
mov
sub
cmp
pop
push
sbb
jnp
push
incl
jmp
push
cs
cli
mov
mov
ds
sub
sbb
aad
mov
mov
xchg
and
mov
es
outsl
xchg
dec
xchg
sti
shrl
cld
dec
xchg
rorb
jl
inc
mov
bound
mov
movsb
cmc
and
stos
fsts
or
push
jmp
xor
lea
ret
sti
mov
jg
nop
pushf
mov
cmp
or
std
push
lea
cli
call
mov
pushw
jg
mov
jg
insl
in
inc
shlb
xchg
notb
sbb
cmp
fisubl
ljmp
pop
leave
popf
std
test
pop
cli
adc
arpl
sub
std
adc
push
icebp
cmp
and
stos
aad
jg
out
mov
pop
decb
lcall
cld
lret
dec
pop
pop
xor
mov
rcrl
std
jle
lock
sub
out
push
mov
insl
sub
mov
ljmp
lods
push
out
mov
xchg
cmp
sub
das
jmp
int3
xchg
outsb
jbe
pop
push
cmp
mov
adc
cli
sub
lock
cs
pop
ljmp
adc
addl
ljmp
das
jne
sti
xor
repnz
idiv
mov
das
ljmp
les
pop
mov
lret
ret
in
mov
jmp
fiadds
cmp
pop
lcall
add
jmp
cli
roll
adc
insb
cmp
cmp
dec
clc
daa
sbb
adc
xchg
and
sub
call
je
aad
push
das
mov
pop
inc
mov
sahf
adc
mov
jns
mov
inc
mov
jb
testb
ljmp
out
mov
mov
test
popa
jns
cld
sti
into
inc
xchg
adc
cmp
rorb
in
shll
stc
xor
fwait
scas
sbb
xchg
jp
movsl
clc
jg
cmp
in
adc
push
loope
sahf
lods
cld
sub
mov
or
adc
rcl
adc
in
vcmpsd
mov
enter
pop
sub
xchg
or
pop
fisubl
push
sub
mov
in
in
cmp
sbb
sbb
adc
cs
xor
dec
imul
js
push
loope
pop
mov
in
js
dec
jne
imul
loop
lahf
sub
mov
lret
lret
push
loopne
inc
pop
push
shll
or
repz
pop
mov
xchg
adc
jp
jg
sub
mov
dec
fnstenv
mov
mov
cmp
fs
jnp
inc
lahf
mov
inc
stos
inc
inc
xchg
xchg
jl
xor
lret
lret
and
lock
in
out
ss
imul
xor
rorl
mov
sub
std
and
addr16
xor
sub
cmpsb
cltd
outsb
mov
loopne
fs
cmp
addb
cli
stc
mov
cwtl
aad
pop
mov
mov
dec
inc
mov
jl
movsb
fstpl
push
xor
inc
ljmp
push
or
pop
fimull
push
jle
loop
test
pop
cmp
paddusb
mov
mov
insl
dec
iret
push
lcall
pushf
adc
mov
sbb
ss
jg
xchg
ljmp
xchg
sbb
xchg
xor
cmpsb
jb
sub
xchg
push
nop
adc
xchg
fcmovb
jecxz
cmpsb
mov
testl
fildll
xchg
mov
and
inc
andl
into
xchg
sti
sub
pushw
cmp
or
xchg
mov
xor
test
or
inc
or
ret
xlat
xchg
lret
lret
rolb
lret
or
sub
push
sub
in
push
xor
jne
stos
add
rorl
or
cmp
ja
cmp
loopne
mov
scas
push
cmp
ret
lea
out
mov
or
popa
and
into
pop
push
cmpsl
test
in
je
insb
jbe
jl
adc
negl
leave
sub
test
xor
cld
aas
cmp
dec
jae
or
test
mov
inc
sbb
mov
lea
lcall
adc
mov
sahf
inc
ss
adc
push
sbb
scas
mov
jns
dec
jbe
jbe
loope
ja
add
mov
xchg
jns
or
aaa
jmp
xchg
out
adc
or
xchg
cmp
cmp
das
sbb
cli
mov
xchg
loop
popa
xor
xchg
clc
add
cmp
adc
test
icebp
pop
push
sub
mov
sti
jecxz
mov
xchg
ja
aam
sti
ljmp
add
pop
stos
test
fs
jp
push
shr
cli
xchg
cmp
lret
int3
push
dec
sub
push
jg
jae
mov
test
pop
mov
addr16
or
cmp
jg
inc
in
dec
into
mov
addl
fnstcw
imul
jmp
jecxz
fcmove
add
test
leave
std
add
imul
sbb
add
add
or
jl
or
or
test
xchg
mov
pop
mov
imul
cmp
mov
jns
sbb
shl
fldpi
stos
cwtl
jl
dec
int
sarb
ljmp
jecxz
fstpt
cmp
mov
and
xchg
adc
or
sbb
add
ljmp
pusha
outsl
dec
cli
pop
jl
pop
push
inc
xor
icebp
movsl
enter
cli
push
dec
repz
call
jo
cmpsb
dec
in
adc
pusha
inc
pop
push
or
lea
cmp
in
sbb
test
into
call
iret
scas
sti
out
mov
daa
push
call
jnp
adc
lock
add
ficoms
cmp
xor
call
dec
push
cmp
shll
in
sbb
sub
push
adc
ss
pusha
sbb
test
ss
je
test
int
dec
or
push
popf
jne
mov
jle
arpl
test
dec
adc
inc
mov
xchg
out
fcoml
cmp
pop
or
sub
mov
lea
in
push
fwait
mov
push
add
cmp
std
fcoms
jmp
in
add
xor
repnz
sub
xchg
mov
or
xchg
notl
mov
jae
inc
test
test
in
std
pop
xlat
notb
mov
sbb
gs
xor
jmp
aaa
fsubl
pop
and
and
sub
pop
sbb
jbe
push
fdiv
loopne
stos
push
imul
inc
call
add
dec
mov
mov
insl
pop
shr
xchg
mov
in
mov
dec
sbb
jl
in
xchg
add
leave
loop
pop
call
xchg
ret
jmp
mov
xchg
mov
push
jg
pop
jb
aas
in
bound
es
xchg
sub
jb
lock
pop
and
sbb
sbb
and
xchg
fwait
push
icebp
aaa
inc
stos
inc
or
sbb
pop
sbb
cli
in
inc
ss
lea
xor
ds
cld
sbb
dec
dec
repnz
das
cwtl
inc
xor
das
sahf
push
ljmp
ljmp
mov
stos
pop
mov
sbb
or
dec
pop
cmp
in
xor
jae
adc
xchg
sbb
test
popf
add
add
fbld
push
or
ljmp
fs
or
aas
jle
lret
adc
nop
sbb
jl
sbb
adc
mov
shlb
push
or
mov
inc
mov
scas
push
xchg
jne
adc
outsb
fdivrp
out
scas
xchg
lods
add
fwait
xchg
dec
mov
sub
jecxz
xor
mov
mov
iret
movsb
xor
sbb
sub
inc
sub
xor
clc
jmp
arpl
and
and
and
xor
xchg
insb
and
shr
inc
xor
xor
mov
xor
jnp
jmp
pop
sub
xlat
or
mov
or
xchg
loopne
push
pop
pop
dec
icebp
pop
int3
orb
adc
xor
dec
adc
jbe
or
sbb
mov
cmp
je
and
cli
shlb
jl
lods
pop
sub
aaa
mov
repnz
arpl
jmp
dec
or
sub
sub
ja
mov
xchg
adc
pop
fidivrs
or
ljmp
inc
dec
or
xchg
lcall
push
inc
cmc
xchg
xor
int
mov
jg
rclb
in
xchg
aas
lret
lods
mov
cmp
sub
mov
mov
sbb
mov
sub
outsb
jmp
xchg
lea
mov
inc
mov
test
mov
jmp
bswap
jns
aad
sarb
xor
and
dec
cmp
or
shl
lret
call
ja
or
les
lea
xchg
sbb
ss
push
mov
sbb
stc
jbe
or
xor
mov
adc
push
fdivrl
repnz
push
repnz
loop
jp
sub
or
cld
mov
fadd
shrb
negl
fdiv
out
testb
test
push
jge
adc
insl
enter
push
test
sub
mov
xchg
fdivrl
mov
daa
push
dec
cltd
ss
clc
xlat
popa
sbbb
cmpsl
and
testb
arpl
repnz
in
lahf
mov
out
dec
jg
es
fprem1
and
sbb
into
sbb
ds
cmp
sbb
ja
lret
xchg
mov
pop
mov
inc
add
mov
xlat
test
or
and
inc
sub
das
stos
test
cmp
xchg
cmp
es
clc
sbb
es
mov
xchg
test
out
lcall
out
stos
push
stc
sarl
shl
movl
arpl
add
mov
movsb
pop
add
notb
mov
or
and
fistpll
and
out
mov
xor
decb
xlat
cmp
ds
dec
lcall
iret
jb
or
into
data16
loop
push
ret
ss
mov
adc
xorb
cli
scas
xchg
testb
js
ficoml
mov
in
loop
bound
push
shll
fcmovbe
xchg
fcompl
aaa
sti
mov
lret
or
repnz
ljmp
or
or
fldl
movsl
jns
mov
sbb
clc
mov
lock
stos
dec
dec
sub
mov
mov
pop
xchg
lret
cmp
mov
daa
dec
cltd
jae
shrl
dec
adc
sti
mov
dec
pop
testb
jl
mov
inc
fildll
pop
lret
add
push
push
pop
or
inc
icebp
lret
mov
jbe
adc
push
in
mov
pushf
mov
sbb
jl
mov
sub
mov
clc
xor
sti
cmp
add
out
or
adc
and
lret
inc
fldt
sub
pop
xchg
gs
mov
and
push
push
or
outsb
mov
adc
cli
xchg
fldt
out
cmp
imul
jae
fildll
clc
sub
shl
arpl
xor
scas
add
or
lahf
sub
sbb
in
xchg
adc
nop
mov
cmpsb
mov
xor
bound
imul
loop
mov
mov
clc
inc
cmp
bnd
cmp
or
or
jmp
mov
stc
mov
inc
mov
js
mov
sbb
repz
adc
sub
jg
pop
stc
test
fwait
pusha
lret
out
repz
out
mov
sti
and
arpl
movnti
xchg
cli
adc
stos
scas
mov
rcl
cmp
icebp
and
bound
icebp
dec
pop
addr16
sbb
sub
pushf
dec
stos
mov
aas
sub
adc
or
sbb
sub
in
pop
jg
fcoml
or
mov
mov
or
fidivrl
data16
test
sub
jmp
ljmp
cli
and
test
in
sub
add
lret
mov
out
fcoml
lock
jg
jnp
or
ja
icebp
mov
mov
xchg
test
shlb
int
mov
mov
mov
out
andl
mov
setb
imul
mov
xor
fimull
xlat
fidivrl
pop
mov
in
dec
sti
sub
push
or
int3
cli
push
cmp
push
int
xor
int3
cltd
push
js
pop
ds
mov
jecxz
lods
add
addr16
inc
cmp
outsb
xchg
loope
cmpsb
repnz
aaa
jg
sub
ljmp
popa
mov
pop
js
add
mov
addr16
dec
rcrl
leave
shl
pop
shr
imul
xor
inc
jb
or
add
arpl
mov
mov
rcrb
mull
jnp
mov
lods
jg
cmpsl
jmp
add
xor
push
loopne
sub
jno
js
sbb
int3
cmp
stos
stc
lcall
in
xchg
sbb
cmp
sti
or
and
mov
cmp
xor
inc
mov
add
call
ljmp
sbb
add
dec
lock
cld
or
push
into
sub
push
scas
sbb
mov
mov
les
enter
mov
inc
push
or
xchg
inc
outsb
or
aad
push
push
ror
into
push
jns
pop
xchg
xor
and
dec
xor
mov
cmp
in
cmp
push
pop
dec
xchg
gs
sarl
mov
dec
cmp
in
add
dec
fisubl
mov
stos
ss
adc
or
add
push
jp
pop
or
xchg
jnp
fs
sbb
in
dec
popf
aaa
adc
and
mov
jbe
add
ljmp
jnp
or
repnz
fmull
push
cmpb
dec
jl
sub
mov
nopl
sbb
inc
xor
cmp
xchg
xor
ljmp
xchg
in
imul
adc
in
adc
or
adc
into
push
nop
rcrb
jae
arpl
aam
sahf
clc
inc
ret
dec
cmpsb
jecxz
jg
and
mov
xor
push
std
cmp
and
fldl
add
mov
mov
das
popf
addl
test
lret
inc
dec
imul
imul
mov
dec
es
or
push
pop
sub
rcrb
stos
mov
ljmp
add
test
jle
mov
sbb
lcall
ds
add
pusha
add
lock
mov
lock
in
cltd
xchg
jnp
cmp
or
mov
pop
xchg
cltd
push
jl
inc
push
test
fldenv
push
aaa
sub
push
and
or
cld
cmp
lea
push
pop
out
nop
sahf
xor
inc
dec
shl
ds
lcall
add
stos
cli
add
fmul
pavgw
mov
adc
push
ss
pop
aad
cmp
aaa
addl
std
adc
cmp
fildll
cmpsb
add
into
mov
out
dec
ss
pop
add
fldl
enter
lcall
test
cmp
mov
dec
pop
mov
xlat
repnz
xchg
lock
sub
mov
cwtl
sbb
push
or
inc
mov
push
aad
js
pusha
mov
mov
add
jl
fdivrs
mov
mov
mov
test
pop
pop
push
mov
lock
repnz
dec
sbb
add
repnz
testb
in
ds
dec
cmp
into
lcall
or
xor
and
stc
jo
int
iret
sub
cmp
xchg
inc
or
cmpsb
cmc
push
jl
push
inc
mov
xor
dec
xor
adc
pop
hlt
mov
stos
fs
cwtl
sbb
add
fs
adc
es
mov
mov
mov
sub
lret
lock
fs
xlat
es
repz
iret
lds
sub
or
adc
jbe
shrl
jmp
add
jns
mov
ss
das
push
or
imul
jge
adc
adc
movb
jno
mov
mov
jb
cmp
push
and
js
shlb
out
and
dec
or
xchg
or
lret
dec
jne
mov
mov
cmp
into
mov
add
addb
cmp
es
sub
fs
dec
jecxz
rcr
outsb
cwtl
push
out
mov
pop
or
xchg
mov
mov
xor
and
xor
inc
sbb
repnz
fwait
into
mov
mov
xchg
sub
mov
ret
pop
dec
nop
stos
cld
xchg
or
xchg
mov
test
push
repnz
clc
clc
mov
and
jne
lock
sbb
aaa
cli
mov
popf
mov
imul
dec
xor
sbb
push
xor
scas
aam
mov
xchg
mov
xor
xchg
push
or
mov
pop
insl
mov
push
inc
jl
jo
jmp
nop
stc
popf
cltd
or
cmpsb
push
incl
jmp
push
pop
loope
add
xchg
dec
repnz
or
cmpsb
jmp
pop
xchg
mov
imul
movsb
cmp
mov
fsubs
loopne
push
mov
sbb
out
lret
in
clc
jg
outsl
idivl
jne
dec
xor
or
cs
lret
fwait
pop
add
imul
jb
push
add
pop
dec
mov
hlt
out
jl
jp
push
pop
test
xchg
cmc
xor
repnz
xchg
shlb
and
xchg
jns
dec
ror
sbb
hlt
out
call
push
add
cmp
jmp
cmp
inc
call
popf
es
into
sbb
mull
push
stc
imul
adc
les
inc
rol
insl
cmp
or
jmp
fldt
xchg
push
inc
js
lret
enter
mov
push
mov
push
ret
mov
test
repnz
jne
imul
ljmp
inc
scas
push
stos
repz
in
or
xchg
sbb
ljmp
pop
cltd
cmp
xor
sub
fstpt
dec
pop
xchg
ljmp
int3
fsubrl
pop
xor
mov
fsqrt
cli
lret
add
add
test
adc
scas
and
fs
dec
ds
xor
mov
mov
push
mov
in
or
sti
push
inc
dec
int
pusha
sub
and
push
pop
scas
add
rcll
pop
pop
or
fwait
mov
mov
adc
ds
pop
test
aas
push
pop
pop
xorl
or
mov
data16
ljmp
shr
mov
popf
jecxz
std
outsb
jns
jnp
subl
mov
inc
xchg
daa
xchg
jne
imul
shrl
inc
add
test
and
arpl
push
into
mov
lret
dec
pop
fwait
pop
jmp
adc
and
add
sbb
nop
pop
out
or
enter
jne
mov
js
and
adc
sbb
push
inc
cmp
jbe
or
xchg
out
cltd
cmp
push
mov
daa
popf
jo
add
cmp
fisubs
scas
mov
cmpsb
jb
mov
aad
lret
call
pop
mov
cmp
xor
or
stos
lcall
xor
push
test
mov
ljmp
jge
adc
jmp
pop
cmp
test
inc
cmc
sbb
jbe
mov
popa
inc
mov
aam
test
xchg
jno
lock
stc
inc
popa
int
sarl
dec
ret
mov
lahf
rolb
into
push
aaa
cmp
adc
outsb
adc
and
lret
pop
icebp
add
mov
adcb
jno
jbe
and
cwtl
fs
adc
jns
addr16
jmp
xchg
push
pop
movsb
popw
ljmp
rclb
push
or
bound
gs
fisttps
jmp
sbb
xchg
aad
sub
inc
xchg
inc
push
test
in
adc
xchg
lret
pusha
dec
sbb
pop
dec
push
adc
loope
bound
inc
or
xorw
ljmp
scas
mov
dec
loopne
lret
inc
xchg
pop
mov
repnz
cmpsb
imul
mov
adc
xor
adc
xor
sbb
dec
iret
repnz
clc
fsubs
adc
jle
ljmp
mov
aas
or
sbb
dec
fst
pop
es
cltd
dec
ds
es
cli
aaa
pop
cld
aas
popa
sub
mov
jge
mov
arpl
jmp
jecxz
dec
lahf
adc
adc
xorl
aaa
jg,pn
mov
pusha
clc
add
xor
insl
mov
testb
sbb
mov
mov
mov
jo
lods
or
mov
pop
mov
dec
lds
sub
adc
mov
push
pop
je
ss
jne
test
xor
loope
jmp
jo
pop
stc
stos
icebp
sub
out
rorb
in
sbb
mov
dec
cwtl
fmuls
jbe
mov
gs
inc
lret
inc
push
sub
mov
jnp
inc
cmp
mov
add
push
insl
inc
xor
ljmp
lret
ret
lods
jp
jmp
idivl
jns
mov
sub
xchg
adc
mov
testl
repnz
stc
test
push
aad
push
or
cmp
call
mov
cmp
insb
dec
in
cwtl
mov
sbb
mov
xor
jmp
push
out
aam
icebp
negl
push
stc
sbb
mov
loopne
bnd
test
pop
imul
in
iret
pop
stos
inc
inc
lahf
stos
lea
xor
in
fisttps
ds
push
or
cmp
dec
jmp
adc
adc
inc
push
dec
jae
and
or
xchg
decl
or
sbb
or
notb
inc
das
and
or
or
inc
cmp
pop
jae
popf
adc
jmp
outsb
cld
xchg
xor
das
lock
xchg
pop
mov
scas
or
out
idiv
push
or
fstpt
ja
orl
inc
xchg
pop
lcall
push
sub
xchg
dec
push
stc
fdivs
mov
ss
iret
mov
nop
inc
xchg
roll
aas
lods
test
pop
div
icebp
push
data16
jo
adc
inc
incl
mov
mov
adc
pop
xchg
es
mov
mov
ret
jecxz
and
xor
test
gs
fildll
ret
cld
and
add
stc
mov
push
jmp
mov
sti
lods
mov
jns
es
mov
xor
popa
inc
aam
hlt
testl
loopne
cli
adc
div
and
test
fcoms
mov
pop
cltd
xorl
out
xor
sbb
jg
gs
sub
std
mov
cli
frstor
pop
outsl
adc
push
push
adc
pusha
das
jae
testl
lock
loopne
data16
or
in
adc
mov
dec
out
mov
mov
lods
test
mov
sahf
cmp
jmp
lods
insl
sbb
cmp
jle
rclb
outsb
adc
xor
or
imul
out
hlt
sarl
and
sub
jbe
mov
push
push
stos
stos
xchg
push
into
es
and
xor
pop
lods
dec
jg
push
cwtl
adc
sbb
mov
outsb
xrelease
fidivrl
jle
shrb
or
sub
ja
or
repnz
cltd
daa
cltd
pop
adc
test
rol
stos
inc
and
sbb
jp
fcoms
xor
sbb
lret
pop
jl
dec
enter
sub
xor
jnp,pt
push
scas
call
cmp
inc
push
mov
pop
das
popf
pop
sub
cmc
mov
mov
mov
adc
or
inc
insb
andb
adc
sub
or
adc
sub
inc
sub
cli
xor
lret
cmp
in
xor
add
dec
jne
lods
inc
lea
in
bound
mov
pop
jle
xchg
xor
dec
sbb
adc
add
and
nop
inc
cmc
mov
add
adc
cmp
adc
lea
xor
and
cmp
mov
pop
cli
aad
push
test
mov
fldt
cmp
mov
stc
adc
das
pop
in
mov
mov
xchg
imul
inc
in
xor
xchg
lea
inc
lock
test
pop
jno
cld
adc
xor
sub
pop
cmpsl
dec
inc
mov
ss
xchg
imul
mov
mov
pop
sub
xor
sub
xor
shlb
jno
leave
fisubrl
sbb
xchg
lods
xchg
xlat
and
sbb
leave
add
sub
pop
mov
or
pushf
std
mov
or
add
jle
pop
aam
es
gs
xchg
push
xchg
mov
cmp
xor
das
sub
jae
push
inc
mov
outsl
bnd
icebp
pop
pop
int
ss
in
ja
sub
add
xchg
adc
or
add
movq
sub
cmp
mov
fwait
in
sbb
xor
xchg
mov
push
movsl
pop
and
sbb
gs
mov
lret
xor
jno
and
roll
daa
and
or
cmp
mov
ficoms
test
fwait
inc
xchg
dec
insb
lcall
sub
or
dec
icebp
mov
dec
ror
mov
movsl
popf
mov
mov
xor
mov
gs
fisttpl
jp
adc
je
add
je
push
imull
pop
jg
mov
inc
and
rcrb
out
imul
mov
pop
mov
fnstcw
or
pop
inc
aaa
cmp
lods
cmc
xlat
push
jae
or
in
in
sub
movsb
push
or
push
aas
ljmp
cmp
push
or
sub
and
out
add
push
xchg
ljmp
push
inc
sub
dec
pop
pop
push
adc
pop
add
cli
xor
cmpsl
mov
add
xchg
push
push
pop
jp
xchg
lods
pusha
sti
jne
jl
adcb
or
and
fbstp
xchg
pop
cltd
sub
mov
sbb
ljmp
cltd
cmp
inc
jg
xchg
jnp
mov
mov
cmp
push
sub
adc
push
or
or
push
push
mov
mov
aad
pop
add
ret
dec
test
and
push
clc
push
xor
mov
movsb
aad
cmp
cli
mov
or
cmp
dec
or
out
cmp
mov
pusha
repz
aaa
sbb
cmp
int
jno
cmpsb
ds
sub
adc
sbb
lods
mov
es
out
nop
addr16
push
mov
inc
repz
inc
mov
das
mov
mov
mov
pop
adc
lret
xor
fiaddl
dec
sub
inc
sbb
xchg
nop
cli
out
mov
inc
add
mov
out
imul
mov
aam
scas
mov
sbb
mov
push
lods
cltd
xor
or
gs
adc
and
std
rcll
dec
jbe
push
push
or
aas
pop
or
ret
adc
popf
fidivrl
jb
inc
mov
fimuls
mov
mov
dec
sbb
leave
mov
or
xchg
lods
cmpsb
mov
jg
dec
cmp
mov
sbb
mov
xchg
adc
sbb
fmuls
or
repz
imulb
setae
adc
sbb
scas
mov
mov
int
mov
scas
sbb
pusha
imul
mov
mov
jecxz
jg
push
sub
dec
sbb
aad
push
fisttpll
notb
lock
mov
sti
inc
ds
stos
cs
jne
fs
lods
xor
insb
xchg
mov
sbb
outsl
mov
or
bound
pop
mov
jbe
mov
jmp
mov
std
das
inc
mov
cmp
sub
repnz
scas
dec
imul
stos
mov
sahf
enter
cli
filds
sbb
mov
xchg
fnstenv
mov
mov
enter
femms
fs
fmulp
enter
add
sahf
and
pop
testb
fisubl
clc
lea
je
jo
rol
mov
nop
pop
push
inc
push
and
sbb
jle
mov
jg
in
push
jmp
push
sub
popa
or
fnstsw
mov
push
xor
cmp
mov
data16
adc
mov
out
insb
lcall
pop
sbb
cli
aas
test
loopne
pop
test
stos
ljmp
bound
scas
jg
adc
fnstsw
ja
inc
ss
cmp
adc
adc
imul
rcl
sbb
xor
sti
jle
xchg
pusha
or
sub
sub
bound
xor
xor
pop
das
and
jbe
lret
jnp
cmpsb
push
cmp
mov
es
stos
sbb
push
subl
sub
pop
imul
mov
mov
push
push
and
and
repz
fnstsw
dec
jl
and
pop
jg
mov
pop
cmpsb
mov
mov
fcmovnu
sbb
jno
jmp
cmpsb
jnp
testl
dec
xchg
xchg
mov
sbb
dec
sub
lods
pop
or
ds
div
repnz
pop
cmp
add
imul
or
mov
hlt
scas
dec
sbb
data16
stc
test
inc
notl
mov
jge
sub
inc
inc
mov
mov
pop
enter
mov
lret
scas
sahf
jg
test
xchg
lods
es
mov
repnz
test
inc
fidivrl
call
xor
in
xchg
repz
pop
xlat
push
and
or
or
fwait
mov
gs
mov
enter
jmp
xor
add
mov
jnp
cmp
and
lock
test
jb
gs
mov
or
jg
inc
push
inc
or
adc
adc
adc
inc
cmp
mov
mov
lret
add
sbb
inc
lods
divb
mov
das
iret
pop
mov
mov
movsb
push
enter
addl
sbb
loopne
mov
mov
mov
inc
lret
cli
call
pop
push
dec
inc
in
push
and
mov
push
repz
fwait
jno
mov
xlat
mov
mov
inc
pop
nop
cwtl
push
dec
ficompl
inc
mov
ds
gs
push
push
dec
ja
dec
lods
mov
lcall
test
dec
jp
sub
push
outsb
cmp
xor
dec
ja
jb
cmp
sbb
cmp
push
jbe
push
mov
mov
push
in
push
nop
fistl
gs
inc
gs
xchg
mov
stc
mov
sub
je
jo
push
ja
add
hlt
sub
sub
cmp
call
repz
mov
or
mov
inc
int3
pop
mov
or
xchg
out
dec
cmp
leave
mov
cs
mov
cs
push
fldl
xchg
xor
ljmp
stc
enter
or
mov
jbe
pop
and
dec
dec
clts
and
es
repnz
stos
es
xchg
lods
out
mov
push
inc
subl
sti
mov
outsb
inc
clc
mov
pop
cmpsb
inc
xor
pop
mov
xchg
sbb
adc
inc
sub
and
sub
test
or
mov
mov
xchg
in
sub
rolb
pop
imul
sbb
push
xor
pxor
sub
cli
mov
gs
imul
jbe
aaa
fisubs
xchg
cmp
sub
cli
xchg
jp
mov
mov
mov
ss
inc
cld
int
mov
nop
aas
loopne
call
in
push
mov
push
enter
sub
rcrb
mov
sub
jno
cmpsl
arpl
lods
out
outsb
stos
out
sub
xchg
or
jl
jle
adc
sbbl
orl
lahf
enter
aas
push
push
sub
pop
mov
sarb
mov
outsl
in
scas
mov
ljmp
jnp
xchg
fsubp
sarl
adc
bound
sti
or
pop
repz
jnp
mov
sti
leave
jg
and
dec
sbb
shl
aam
sbb
lods
jmp
inc
cmp
pusha
ret
cmp
mov
and
sbb
jg
xchg
or
shll
dec
mov
inc
scas
add
inc
pop
out
rolb
fistpll
jno
jg
inc
add
mov
jecxz
dec
mov
or
ja
mov
js
push
push
adc
loop
dec
jnp
push
jne
cmp
jnp
xor
dec
popf
sbb
js
fdivrl
dec
mov
mov
cmp
lret
cmp
inc
inc
cmp
fsub
ja
xor
mov
mov
in
decl
dec
lods
fcmovbe
xor
adc
clc
das
push
sub
aas
push
xor
sbb
adc
subl
out
push
mov
add
sub
xchg
jp
xchg
fidivrl
lds
adc
push
cmpsb
out
cmp
mov
mov
mov
negb
sbb
subl
fiadds
mov
aam
sahf
sbb
rcrb
mov
loopne
das
mov
jl
icebp
jnp
jecxz
add
inc
rorl
inc
pop
imul
std
repnz
mov
test
xor
in
jmp
jae
out
adc
xchg
lret
add
jge
in
orb
das
jno
adc
testb
sahf
xchg
push
clc
ror
xchg
jg
stc
std
mov
test
xor
cld
repz
sub
aam
ret
testb
gs
dec
pop
cmp
and
seto
rorb
lods
pop
or
int3
inc
lods
jno
mov
in
jmp
or
cmpsb
adc
aaa
sbb
outsb
inc
idivb
jnp
sub
xlat
fildl
sub
lods
fimull
add
repnz
push
lods
mov
xor
add
jb
clc
jns
out
push
xor
push
xchg
sti
shll
insb
and
stc
cs
jne
cmp
dec
sub
jp
fldl
or
repz
mov
mov
mov
adc
mov
dec
inc
push
arpl
adc
imul
ret
adc
add
cmp
adc
mov
rcrl
cmp
xor
jnp
in
lcall
jmp
or
fxch
fdivp
xchg
mov
loopne
push
mov
push
xchg
and
clc
enter
outsl
repnz
lahf
and
push
inc
jnp
xor
mov
and
add
mull
dec
stc
cmpsl
sub
or
cmp
inc
or
int3
cmp
loope
or
jecxz
mov
ret
xchg
mov
sbb
mov
mov
jle
mov
xchg
xchg
and
movsl
lcall
mov
xor
orl
pusha
add
gs
pop
sbb
sbb
loopne
stos
mov
popa
or
add
cmp
jecxz
jbe
ljmp
into
jge
sub
pop
or
ficoml
scas
or
mov
xor
push
xor
mov
dec
jle
jl
fidivs
mov
ds
xor
pop
daa
gs
push
mov
jnp
mov
adc
lret
mov
xchg
mov
mov
fisubrs
ds
and
inc
mov
mov
xchg
lret
jp
jb
movzbl
data16
out
push
adc
sahf
adc
aad
lret
sub
out
lods
inc
int3
push
mull
or
adc
cmp
sub
or
add
jnp
cmp
jb
idivb
nop
push
rorb
bound
movsb
push
xor
outsb
mov
push
adc
mov
cmp
mov
mov
jne
jb
cmp
imul
mov
dec
mov
adc
popa
and
sti
push
test
add
and
and
aas
or
int3
test
inc
mov
insb
mov
cmp
push
or
out
lds
pop
sub
es
sbb
mov
jb
movsb
ljmp
xor
fnstenv
sbb
push
inc
sub
push
mov
mov
dec
stos
inc
nop
xor
cmp
cld
imul
xchg
mov
ss
jbe
fmulp
test
or
adc
mov
sub
xchg
adc
loop
inc
xor
pop
pop
jge
and
gs
or
jecxz
sbb
xchg
pop
mov
in
add
test
in
lods
daa
dec
jns
mov
push
cli
dec
jmp
mov
lock
pop
jnp
push
aaa
mov
jp
repz
pop
aas
xlat
dec
push
add
add
mov
xchg
fnstenv
imul
jns
sbb
cmp
xor
subb
add
pushl
xchg
int
cwtl
sub
xchg
inc
lods
out
xchg
sub
xor
or
mov
adc
fmull
xor
fldcw
dec
dec
arpl
inc
js
push
or
add
mov
mov
scas
mov
mov
push
xchg
mov
ss
cmp
imul
pop
testl
enter
pushf
in
adc
stc
into
push
inc
daa
lret
sbb
sbb
insl
sbb
add
lret
idivb
orb
xchg
stos
mov
sub
je
cmc
clc
mov
adcl
lret
xchg
mov
lds
adc
or
sub
test
or
jns
mov
mov
and
stos
repnz
ret
sub
pop
mov
push
sbb
ret
inc
cmc
cmp
sti
dec
inc
pop
sbb
ds
mov
ficoml
adc
imul
cmp
arpl
les
call
pusha
mov
in
dec
mov
enter
or
xor
daa
jg
xchg
enter
sbb
fcompl
xor
and
stos
lret
mov
ljmp
leave
sub
test
adc
in
ss
xor
mov
push
ss
and
aam
inc
pusha
and
sbbl
push
inc
pop
xor
leave
pop
xchg
ja
or
xor
iret
loopne
cs
push
ret
cli
sbb
mov
stos
in
shrl
lea
push
ljmp
xchg
repz
jle
push
int3
jns
outsb
dec
mov
scas
push
or
and
mov
mov
jg
mov
push
les
fnstsw
fwait
add
fs
pop
dec
imul
jb
pop
inc
jb
fsubrs
mov
inc
pop
mov
cltd
int
por
dec
ja
cli
ficoml
int
test
rorl
jo
movsl
stos
mov
push
sbb
cli
div
push
mov
lods
jmp
xor
cli
pop
lret
add
and
mov
ret
mov
jmp
sti
gs
adc
add
xchg
addl
addr16
or
jnp
ret
dec
aas
push
xchg
push
dec
addr16
adc
jg
push
add
dec
int3
inc
mov
pushf
sbb
ljmp
xchg
inc
jl
or
push
hlt
rcrb
scas
adc
int
mov
mov
sbb
or
out
adc
mov
sub
push
in
jo
mov
outsb
lret
mov
imul
shl
pop
test
punpckhwd
sbb
int3
lcall
or
add
icebp
sub
rorb
pop
icebp
mov
mov
jo
imul
cmpl
or
pop
jnp
xchg
and
cmc
arpl
and
add
add
in
mov
or
test
sub
cs
outsl
mov
mov
cmp
mov
adc
pop
dec
inc
mov
xor
xchg
pusha
xchg
xlat
je
xchg
arpl
cli
mov
or
leave
cltd
sub
push
fnstenv
cli
or
mov
xor
sub
mov
out
dec
mov
adc
inc
mov
leave
lods
xor
sbb
pop
adc
xchg
fsts
sbb
push
out
aas
stc
push
push
mov
pop
out
jmp
negb
sub
stos
mov
and
xchg
sbb
mov
push
fstps
in
inc
cmpl
das
imul
pop
ror
mov
lret
cmp
ds
cmpsl
sbb
push
sbb
pop
stc
mov
ss
adc
sbb
bound
or
dec
addl
sbb
sub
jmp
and
xor
leave
pop
adc
scas
inc
lcall
inc
rdmsr
scas
adc
or
push
mov
sub
js
mov
or
ja
lods
bound
fnstcw
mov
popf
cmpsb
sub
cmc
mov
cltd
cltd
sbb
dec
xchg
lret
mov
xchg
orps
fdiv
mov
popa
ret
add
idivb
add
jmp
adc
stc
ljmp
pop
sub
jb
sbbl
mov
push
jp
ret
or
leave
pop
int
cmpsb
stc
xor
or
pop
mov
enter
xchg
cmp
sub
cmp
mov
xor
mov
mov
daa
ss
aaa
xchg
mov
xchg
pop
sub
stc
cmp
pop
icebp
shll
jae
jmp
out
jo
or
or
mov
aaa
in
insb
xchg
in
sbb
cmp
push
jo
mov
scas
loop
pop
or
arpl
or
ja
mov
lock
inc
xchg
xor
stos
shlb
cmc
cmp
in
or
or
adc
leave
sub
sub
push
add
mov
add
add
push
inc
mov
and
jnp
fistpll
adc
cli
sbb
ficomps
jp
xor
mov
ss
jp
cs
fst
sti
lock
xlat
adc
jbe
test
sbb
jae
dec
pop
mov
adc
sub
sbb
lret
dec
mov
mov
pop
cwtl
daa
add
xchg
or
pop
cmc
xchg
xchg
fcoml
jg
jno
cmp
xor
fwait
dec
lods
ret
cmp
cmp
pop
repz
add
fdivrl
pop
dec
in
shrb
xchg
fiaddl
mov
hlt
mov
jnp
or
jne
xlat
out
push
lods
call
leave
int3
and
dec
daa
mov
xor
jp
lret
icebp
outsl
inc
mov
stc
pop
xlat
xchg
decl
cmc
dec
add
jecxz
cmp
push
jnp
jl
jbe
adc
int3
nop
addr16
mov
icebp
jecxz
mov
repnz
push
jmp
stos
xor
adc
in
cmp
cmp
push
lods
mov
push
ds
bound
mov
movsb
mov
cld
cwtl
pop
ret
dec
mov
sbb
mov
jp
mov
add
test
or
jnp
popf
add
cmp
bswap
adcl
rcrl
vrsqrtps
into
lcall
push
add
out
call
sub
test
sti
xchg
pop
enter
les
sbb
inc
or
test
cmp
mov
mov
or
mov
push
inc
fs
mov
inc
lods
pop
lahf
cmp
js
cmp
jo
xlat
cwtl
pop
loope
ficoml
pop
jns
test
popf
out
lods
adc
or
cmp
xlat
subps
cli
int3
lret
imul
ss
xor
out
lret
jge
xchg
push
into
inc
je
dec
sub
jl
mov
mov
dec
mov
jns
out
sbb
pop
push
mov
push
inc
fwait
orb
sub
mov
pop
out
sbb
addr16
push
fistpl
out
sti
dec
xchg
lock
test
das
testl
cmpsb
pusha
mov
ljmp
xchg
dec
push
cs
cs
add
ljmp
rclb
jmp
lsl
in
add
cwtl
jecxz
test
ficompl
lret
sbb
jmp
jo
fsubrl
hlt
pop
adc
lods
imul
jne
jns
pop
popa
sbb
mov
push
sub
xor
es
out
shll
shlb
jl
pop
push
imul
scas
lock
idiv
movsb
stos
push
repnz
xchg
jp
mov
stc
xor
add
outsb
mov
jns
loopne
and
mov
lods
adc
shr
sbb
sbb
mov
xor
dec
adc
aam
and
iret
mov
or
xor
loopne
es
jbe
mov
push
bound
icebp
repnz
push
mov
and
adc
jbe
jb
pop
add
jbe
enter
pop
and
in
sub
or
sub
cs
mov
cmp
mulb
in
out
mov
outsb
iret
fs
push
or
hlt
adc
repnz
popf
pop
stos
jmp
xchg
daa
test
mov
sbb
std
outsl
daa
push
outsl
movsb
ret
lahf
insl
add
jge
fwait
jp
imul
jbe
sti
fisttpll
push
fmuls
cld
aad
or
in
mov
fldt
ljmp
cmp
les
jl
xchg
adc
daa
pop
das
test
into
pop
xchg
popa
mov
lcall
mov
cmp
call
in
cltd
inc
pop
xor
lret
and
inc
or
sub
jp
bnd
fldl2e
orb
pop
mov
xor
push
xchg
jno
adc
out
cmp
outsb
jg
loop
mov
lcall
out
shrl
stc
les
stos
jae
decl
pop
or
pop
mov
xchg
push
shr
add
lcall
and
ficompl
fwait
orl
scas
jge
cmp
pushf
jge
aaa
test
mov
stc
jo
adc
add
mov
mov
pop
push
lods
mov
in
jecxz
dec
test
test
dec
inc
inc
stos
jg
jmp
xchg
outsb
aas
push
pushf
iret
out
loope
int3
or
out
insl
add
pop
cmp
or
mov
jmp
jno
pop
push
shl
imul
xchg
popf
mov
or
je
outsb
dec
push
pushf
adc
push
jg
jecxz
adc
mov
xor
lock
mov
or
mull
dec
addr16
sbb
cmp
mov
stos
jp
cmp
cmp
leave
jmp
adc
out
push
jp
adc
jns
or
mov
int
fld
cmpsb
or
push
sbb
xorl
jo
aaa
lret
pop
inc
xchg
ljmp
sub
imul
in
push
insb
dec
mov
xor
out
xchg
xor
jp
loope
mov
or
lods
shrb
loop
out
jg
call
jle
cmp
pop
ss
test
subl
xor
es
stos
roll
adc
sub
mov
lods
out
pop
hlt
call
fs
rclb
jmp
dec
loop
jle
sti
jae
adc
ds
ss
xchg
lds
sbb
cmp
out
inc
scas
jl
jmp
dec
inc
ljmp
lock
into
inc
jnp
adc
icebp
inc
or
mov
testb
pop
cmp
outsb
mov
xchg
or
or
out
stc
je
or
outsb
repnz
mov
or
out
dec
cwtl
lcall
lea
aam
ds
lea
repnz
xor
xor
test
fbstp
dec
sbb
jg
out
in
xor
mov
push
xor
ljmp
imul
jnp
jae
inc
jmp
jecxz
into
std
sub
movsl
lock
enter
mov
or
pop
xchg
pop
jo
adc
ret
idiv
cmp
movsl
ljmp
ljmp
outsb
xchg
mov
insl
std
sbb
ret
cmpsb
sahf
add
inc
push
repnz
xchg
mov
pop
push
sbb
dec
push
mov
and
dec
and
subl
or
push
inc
ficompl
fisttpll
sbb
rclb
or
stos
ja
enter
dec
icebp
mov
loopne
sub
dec
gs
jns
jb
cs
sbb
ja
xchg
test
xchg
test
mov
clc
les
ret
adc
test
jbe
xchg
enter
imul
adc
dec
arpl
cmp
add
out
dec
push
or
stos
rorl
insl
dec
arpl
imul
and
xchg
lock
mov
jg
xchg
pop
xchg
or
shl
out
pop
sbbl
test
test
mov
fmull
hlt
mov
jl
or
xchg
stos
sbb
dec
imul
mov
mov
push
ds
adc
xlat
pop
test
aaa
or
mov
push
loope
mov
mov
pop
nop
out
aaa
test
add
cmp
mov
xor
pop
sbb
pop
lret
movsb
pcmpeqd
ror
mov
fwait
cmpb
add
js
daa
mov
sbb
adc
sahf
xchg
cli
test
xlat
cmp
enter
stos
ds
and
or
cltd
push
jl
pop
mov
pop
out
lods
movntq
movsb
loope
mov
enter
sahf
loopne
jbe
lcall
xchg
ljmp
stos
cltd
fistpl
sbb
sub
fstps
jbe
jle
addb
ds
das
or
push
jmp
mov
sbb
xor
loopne
add
mov
sti
stos
std
aam
out
sbb
xchg
push
loop
out
add
cli
nop
je
outsb
aad
push
push
mov
repz
mov
dec
fstpl
jge
cli
xchg
xor
lcall
pop
add
cltd
aas
mov
jg
inc
mov
cmp
cmc
leave
pop
dec
dec
repnz
sub
fwait
xchg
adc
or
dec
mov
jae
imul
push
test
pusha
dec
repz
adc
push
jmp
inc
stos
xchg
push
arpl
imul
fs
in
movsl
jb
inc
cmp
inc
mov
insb
out
mov
pop
xchg
sub
cmp
aad
mov
repz
rcrb
incl
add
mov
rorb
ds
mov
jbe
mov
cwtl
xor
xor
push
adc
mov
sbb
push
jns
xchg
pop
lock
cltd
pop
inc
cs
xchg
test
cmp
or
pop
add
pop
mov
inc
dec
inc
clc
push
adc
push
inc
sarb
cmp
iret
aad
mov
loope
jmp
cmp
ljmp
cltd
mov
xchg
cmp
mov
mov
and
pop
lods
or
or
fstpl
sar
mov
push
mov
and
insb
adc
jns
jnp
lahf
inc
repnz
lahf
scas
sbb
push
shrb
inc
sbb
cmp
cmp
dec
jecxz
xor
lret
adc
into
testb
xchg
xchg
gs
dec
jns,pn
xor
dec
dec
or
loop
jne
fprem
add
js
mov
lods
push
or
stos
imul
outsb
js
rolb
pop
in
inc
call
xchg
psrad
or
lahf
or
arpl
int3
test
mov
adc
popa
mov
lret
js
mov
das
es
cmp
call
push
mov
xchg
sahf
daa
outsb
je
jo
jb
and
add
scas
imul
mov
xlat
and
test
aaa
clc
hlt
ds
dec
sub
mov
cmpsb
movsb
and
pusha
and
out
aas
mov
cwtl
fldt
pop
adc
aaa
cmp
int
outsl
test
sbb
pop
adc
bnd
insb
rcll
mov
in
lcall
mov
or
xchg
dec
pop
push
jg
dec
mov
jmp
sbb
mov
fwait
cwtl
rcll
in
in
sub
into
cmp
inc
mov
cmpsl
jno
xchg
imul
jecxz
dec
xor
or
jo
ljmp
stos
lds
lret
ret
aas
mov
xchg
pusha
negb
dec
shrl
in
cmp
popa
xor
inc
rcr
test
mov
test
mov
mov
xor
ss
inc
xchg
mov
xor
adc
mov
idivl
add
sti
int
aaa
ds
scas
outsl
aas
loop
imul
or
rorb
mov
dec
mov
jecxz
jo
and
out
mov
sub
imul
subl
mov
lds
dec
add
xchg
insl
inc
fisubl
or
test
jge
les
cmp
mov
addl
ret
popa
push
inc
ss
pusha
jecxz
ljmp
repnz
mov
scas
and
addr16
in
int3
divl
out
ret
loopne
das
adc
cmpsl
jb
xchg
cmc
mov
lcall
sbb
xorl
push
js
mov
inc
cmpsl
negl
xlat
sub
cs
adc
addl
insl
mov
jecxz
jp
scas
mov
aas
mov
pop
dec
cmpsl
and
repnz
xchg
pop
mov
mov
test
fs
push
lahf
call
in
adc
in
add
push
sub
jmp
lock
inc
sbb
lods
pushf
cmpsl
cltd
mov
add
das
jg
cmp
xchg
pop
rcll
ss
pop
or
jp
sbb
rclb
hlt
stos
insb
dec
insb
aam
pop
mov
jge
in
js
push
in
xlat
sarl
lock
inc
or
jp
sbb
ljmp
in
mov
stc
fadds
outsl
stos
xchg
adc
sar
iret
adc
and
imul
das
mov
jns
imul
mov
mov
iret
mov
rcrb
mov
insl
sbb
jecxz
push
mov
idivl
xchg
icebp
mov
jp
pop
cmp
sub
or
mov
nop
push
loop
test
mov
sbb
xor
xor
inc
aaa
inc
loopne
sbb
jl
cmp
xor
xlat
lds
push
sub
aaa
mov
repnz
adc
mov
lods
cmpsb
aad
loopne
fs
or
test
jbe
imul
sbb
clc
in
movsb
mov
sti
sub
pop
lahf
lcall
aaa
jp
add
jnp
punpckldq
mov
xchg
mov
cmpsl
insb
or
into
push
mov
adc
pop
rcrl
push
sbbl
mov
and
xor
push
xchg
push
push
test
lea
mov
cmp
je
inc
icebp
push
xor
pop
jmp
or
sahf
call
rorb
jns
ja
cmpsb
aad
outsl
add
cld
or
dec
ljmp
notb
push
stos
jnp
mov
inc
sub
mov
sti
js
mov
lcall
out
mov
mov
dec
clc
xorl
addb
lret
lods
xor
mov
ret
test
cltd
outsb
mov
mov
aam
add
pop
xchg
xlat
shr
arpl
or
ret
sti
cmp
pop
push
sub
dec
pop
mov
xchg
testb
aas
and
xor
aas
xchg
shr
xor
push
add
fcomps
mov
scas
fcomip
mov
cmp
add
mov
jbe
sbb
mov
mov
jno
int3
jl
or
leave
outsb
jg
mov
adc
into
dec
call
outsl
sbb
sub
xchg
push
sub
lea
inc
decl
sar
sbb
pop
mov
loopne
movsb
pop
sti
sbb
cwtl
imull
in
scas
cmp
es
or
addr16
jb
stos
enter
push
cmpsl
push
push
movsb
mov
andl
and
xchg
mov
mov
fwait
xor
loope
mov
cltd
or
pop
fistps
out
xchg
mov
cs
out
cmp
addr16
add
data16
mov
xor
push
popa
dec
dec
or
push
out
xchg
cmp
andl
lods
jns
mov
es
aam
push
aas
dec
stos
and
xchg
xor
sub
cmp
sarl
add
cli
xor
or
ret
movsb
push
lock
mov
sub
and
mov
rclb
imul
or
sti
adc
or
mov
fildll
jmp
sbb
xchg
inc
dec
dec
pop
xchg
add
inc
mov
push
mov
aaa
jl
inc
and
mov
mov
xor
les
sub
rorl
fnstsw
xor
clc
or
xor
test
dec
inc
inc
xchg
in
or
sbb
mov
test
add
fxch
dec
cs
cli
stos
jnp
mov
ss
cmp
jns
dec
popa
fcomip
mov
das
push
cmp
xor
scas
sbb
popa
push
jns
dec
mov
sub
stos
aas
xor
mov
push
mov
jg
popa
idivl
jnp
mov
in
repnz
lea
mov
pop
push
jp
movsb
dec
xor
in
or
std
ret
push
imul
mov
fwait
sub
loope
inc
lea
adc
pop
inc
inc
xchg
stos
enter
lock
pop
sbb
shrb
mov
lcall
repnz
cmp
pop
aas
adc
ficompl
sub
lea
jb
scas
push
arpl
pop
mov
cmp
in
jns
pop
mov
sbb
fldcw
testw
dec
jae
repnz
test
insl
repz
jecxz
pop
xor
mov
sub
in
xchg
popa
sti
std
loop
fbld
pop
sub
fwait
xchg
cli
hlt
scas
mov
push
inc
add
repz
ss
inc
jnp
inc
inc
sbb
jecxz
or
in
push
cmp
ficomps
outsb
or
ret
mov
pop
push
repnz
lock
data16
sub
mov
add
js
shlb
dec
and
jle
lea
jg
fimuls
cmpl
mov
cs
cli
cmp
sbb
xchg
dec
sub
push
ret
push
jbe
pop
mov
rcrb
cwtl
cmp
ret
mov
jle
ror
mov
mov
mov
dec
add
aas
push
stos
inc
mov
jmp
lods
jp
or
lods
out
or
test
cmc
leave
pop
hlt
fstps
cltd
inc
fisubl
mov
sbbb
sbb
call
xbegin
pop
das
add
sbb
stc
fldt
aas
dec
mov
add
fistpll
jnp
popa
xor
mov
mov
lock
push
sbb
cld
jns
push
push
and
pop
test
pop
scas
add
cmpsl
xor
imul
jl,pn
gs
pop
or
aaa
sbb
adcb
rcll
jmp
adc
sub
adc
xlat
xor
jns
in
clc
inc
jl
dec
in
inc
adc
mov
cmp
sub
dec
jecxz
dec
ret
push
xchg
pop
sub
xor
pop
mov
dec
addr16
bound
lahf
pusha
push
sub
repnz
enter
and
repnz
clc
and
cltd
fildl
imul
mov
push
mov
adc
and
faddp
stos
das
popa
bound
or
xchg
mov
pop
jle
mov
imul
cltd
addr16
push
outsb
inc
sub
or
ljmp
xchg
repz
pop
dec
add
push
call
sub
es
notb
lock
push
or
in
iret
mov
pop
xor
cs
gs
dec
jg
push
adc
cmpl
repz
pop
rcrl
xchg
xchg
jbe
jecxz
push
nop
add
xor
mov
push
inc
cmpb
adc
or
pushw
jle
test
inc
arpl
xlat
dec
push
or
cli
gs
loopne
xchg
xchg
pop
push
sahf
mov
xor
inc
sbb
jg
add
or
sub
xchg
push
gs
xor
leave
daa
adc
pop
idiv
xor
inc
xchg
xchg
jns
sub
pop
xchg
mov
sbb
stos
sbb
sbb
lret
cld
cmp
jnp
and
xor
ja
xchg
mov
xchg
movsb
mov
sub
dec
or
mov
xchg
fiaddl
cmp
mov
dec
sub
hlt
in
stos
pushf
out
mov
mov
sahf
inc
rcll
div
mov
daa
cmp
cmp
push
out
ds
fistpl
pop
daa
jg
sti
push
or
lret
or
mov
rep
push
mov
ret
mov
push
sti
jp
jg
xor
add
pop
pop
add
adc
xor
mov
or
out
scas
mov
decl
aaa
call
add
xor
mov
sahf
jmp
cmp
mov
xchg
insl
inc
ret
jno
xchg
sbb
shlb
popl
cmp
lea
mov
jo
negb
out
scas
mov
mov
or
adc
add
ss
sub
xor
test
add
cmp
sbb
scas
cmp
xchg
ret
loop
repnz
stos
mov
popa
inc
mov
bnd
daa
repnz
xchg
sarb
pushf
scas
cmp
mov
pop
je,pt
mov
cmp
mov
fistl
aas
adc
dec
push
pop
pop
cmp
cmpsb
ret
xchg
mov
mov
mov
test
sbb
pop
sub
insl
xor
fwait
push
ss
jl
adc
xlat
add
sub
mov
inc
xor
mov
jno
hlt
sub
lret
or
or
push
push
sbb
xor
mov
push
imul
inc
out
es
mov
sub
into
aas
cmp
adc
inc
addb
add
inc
dec
fs
shll
cmp
mov
lock
jg
nop
outsb
data16
xchg
or
inc
mov
jecxz
jmp
mov
add
in
ds
loop
sbb
or
lret
sub
das
sbb
scas
jecxz
mov
pop
mov
cmpsb
pusha
sbb
cli
mov
fs
xchg
lcall
or
push
ret
mov
jg
lock
stos
ljmp
jmp
jns
movsb
iret
cwtl
adc
xchg
icebp
pop
mov
daa
mov
xchg
cmp
int3
jbe
stos
das
mov
in
ret
scas
repnz
or
popa
repz
xor
xor
push
push
xchg
sub
bnd
das
xchg
out
pop
outsl
lret
dec
inc
pop
in
leave
xchg
adc
lahf
jle
fwait
xchg
add
loop
xor
fsubp
int3
test
jmp
out
pop
sahf
dec
pushf
imul
mov
lcall
das
clc
dec
adc
add
inc
pop
adc
in
cmp
test
jnp
add
or
je
cli
aas
movsl
rcr
sti
adc
repz
mov
sub
cmp
sub
sbb
lret
sub
xor
cltd
xchg
jne
pop
or
cmp
das
xor
hlt
das
movsb
push
lea
lret
jmp
or
lock
cli
shrb
xor
sub
imul
in
repz
pop
mov
loop
and
lea
out
enter
xor
test
ret
and
ljmp
jnp
inc
rolb
sbb
clc
pop
mov
das
lcall
gs
test
mov
dec
jno
les
sbb
fidivs
stos
mov
repz
xchg
das
cmc
call
cltd
sbb
xor
push
sti
push
jle
push
std
xor
repz
je
inc
ret
mov
add
mov
in
push
stc
push
mov
sbbb
scas
sub
imul
test
jmp
mov
or
nop
fcoml
xchg
adc
adc
leave
jle
xor
jp
xor
dec
push
push
fucomp
clc
mov
or
testl
cmp
test
add
push
mov
inc
push
and
mov
fwait
aaa
sub
cmp
adc
pop
push
jae
adc
out
jmp
lret
mov
pop
inc
xchg
or
testl
enter
mov
enter
push
jl
into
push
xor
ss
xor
and
popf
imull
inc
inc
jmp
out
lock
mov
arpl
adc
add
inc
add
aam
mov
jecxz
nop
mov
mov
stc
test
jmp
sbb
mov
cmp
mov
addl
jb
jnp
pop
cmp
pop
adc
xor
dec
lds
jo
xor
in
inc
int3
sbb
xor
jae
dec
shrb
add
mov
mov
xchg
and
and
mov
popa
xchg
or
xchg
out
gs
inc
sbb
mov
fildl
or
stos
mov
filds
in
pop
enter
xor
adc
adc
dec
push
outsl
lods
xlat
cmpsb
sarl
jbe
inc
out
dec
add
clc
dec
ret
jg
out
push
insl
jo
add
cmp
cmp
cmp
paddsb
mov
mov
mov
jae
xor
xchg
in
or
mov
dec
adc
rolb
cmp
or
push
repnz
adc
lea
fistpl
xchg
outsb
push
cmpl
pop
xchg
cltd
jmp
adc
inc
pop
mov
inc
lret
mov
cli
mov
dec
and
movl
inc
mov
jae
jb
ret
test
mov
sbb
mov
sahf
lds
mov
or
adc
cmp
mov
sbb
aaa
xor
or
pop
inc
push
jno
ret
int3
add
ja
je
mov
aaa
fisttps
jns
les
push
mov
xor
ljmp
arpl
into
cmpsl
cmp
add
rorl
mov
or
in
pop
mov
xchg
inc
mov
adc
push
add
mov
mov
aaa
stos
int3
fdivrs
adc
dec
sub
mov
pop
negl
xor
es
rorl
leave
movsb
xor
cmp
cld
sbb
scas
in
repnz
adc
jp
or
ret
lahf
icebp
int
push
ljmp
cs
push
dec
xor
mov
mov
popf
cmp
jecxz
jbe
mov
and
imul
jne
call
lret
jp
and
mov
insb
and
out
or
jmp
dec
aas
fildll
jnp
in
xlat
add
cli
or
aaa
cltd
arpl
fnsave
xlat
or
dec
pop
bound
dec
shlb
or
push
stos
mov
test
pop
and
xor
and
leave
cmpsb
jbe
leave
add
push
pop
sub
out
orb
xor
imul
das
xor
add
stos
adc
mov
jns
push
push
js
adc
or
or
jns
loopne
icebp
testl
gs
jne
pop
or
xchg
inc
leave
test
rcrb
inc
jmp
das
inc
adc
adc
in
jmp
jns
dec
lret
add
pushf
cmp
adc
arpl
fidivrl
mov
xchg
sbb
add
stc
arpl
stos
and
and
gs
and
adc
jnp
push
adc
sub
inc
lret
fdiv
lock
stos
adc
adc
or
jne
dec
dec
xchg
and
cltd
adc
inc
lds
push
sub
imul
xor
xor
das
out
in
add
push
lcall
xchg
xchg
cmpsb
idiv
push
int3
dec
lods
stos
add
lahf
xchg
lcall
sub
fwait
xchg
cwtl
xor
push
or
mov
mov
das
inc
jp
sub
adcl
cmpsb
cwtl
pushl
mov
ljmp
pusha
cs
push
inc
pop
lods
mov
pop
outsl
iret
xchg
dec
mov
jl
rorl
mov
adc
xchg
inc
call
xor
cmp
stos
add
lea
decl
inc
fwait
stos
icebp
jb
cmp
jmp
xor
mov
mov
adc
les
pop
test
push
pop
lret
xchg
lret
inc
push
xor
inc
insl
inc
jns
loope
jmp
fdivr
mov
das
mov
inc
inc
push
lea
lock
pop
rcll
or
add
xchg
cmp
add
pop
fldcw
repnz
cmp
bound
jl
je
sbb
push
iret
pop
call
jnp
cwtl
or
lret
or
repnz
pusha
push
mov
push
nop
xchg
cs
and
inc
cs
cmp
cmp
sub
test
push
or
repnz
fildl
xor
xor
xlat
inc
adc
outsl
sahf
xchg
in
in
push
xchg
clc
inc
lcall
jmp
jmp
xor
cmp
int3
mov
call
lahf
inc
sbb
popa
mov
inc
shrb
bound
sti
inc
mov
popf
mov
sub
mov
rolb
cmpsb
jo,pn
mov
lcall
dec
arpl
lret
shlb
pop
cld
popa
into
inc
jns
jmp
cmp
inc
dec
stos
cli
lea
popa
shlb
xor
jbe
dec
jge
pushf
stos
imul
and
xor
add
adcb
xor
jmp
push
push
adc
pusha
cwtl
out
lea
adc
mov
add
leave
movsb
and
xchg
lods
sbb
out
xchg
call
fnstsw
jae
xchg
pop
sarb
lea
mov
jns
aaa
loope
sbb
call
dec
push
sub
inc
es
rcll
in
es
mov
int
xchg
negb
jecxz
sti
add
mov
jns
shrb
mov
jg
xor
cmpsl
push
push
cmc
loop
in
iret
xchg
pop
add
jmp
sbb
xchg
push
push
jno
sub
push
dec
int3
fidivrs
sbb
in
xchg
lds
push
fisttps
push
je
stc
push
fs
lret
out
cmp
and
repz
mov
imul
mov
mov
pop
adc
gs
imul
shl
inc
lock
repz
lea
and
es
cli
nop
xor
jnp
imul
insb
cmpsb
add
popa
sub
adcl
bound
pop
fisttpll
xor
mov
stos
fwait
cmp
ss
cld
xor
or
sub
push
stos
push
out
mov
int
arpl
mov
dec
rclb
mov
rolb
cli
jg
mov
push
fdivrs
repz
push
mov
mov
dec
repnz
mov
push
sbb
jg
xchg
jp
mov
inc
insb
mov
out
add
test
jmp
and
in
lea
jle
adc
push
loop
aaa
scas
out
sbb
mov
outsb
add
clc
hlt
cli
add
into
outsl
adcl
xor
mov
pop
out
push
scas
pop
cmp
or
or
adc
dec
imulb
mov
xor
rep
enter
push
or
xor
gs
xchg
and
push
xlat
or
daa
mov
enter
or
insb
into
lock
repnz
scas
dec
lret
lret
or
rol
or
sub
lods
push
dec
add
mov
call
inc
adc
mov
cmp
mov
clc
push
ljmp
mov
dec
test
fs
adc
mov
inc
pop
sub
clc
bound
lret
test
mov
mov
xor
push
jle
out
hlt
mov
jne
push
pop
xchg
aas
lcall
call
lret
jne
xor
outsl
push
sub
imul
pop
inc
mov
lds
sub
popf
divl
testl
mov
ficoml
int3
cwtl
mov
imul
xchg
xor
test
aaa
or
hlt
pop
sub
xchg
divb
sbb
add
lret
xor
xor
sub
dec
mov
cmp
cmp
xor
xrelease
add
mov
jle
fdivp
out
or
psllq
outsb
or
mov
mov
lret
outsl
sub
lret
push
jl
push
mov
adc
adc
mov
stos
push
test
or
sarb
jmp
mov
fidivrl
jge
sub
imul
int3
icebp
test
incb
lods
pop
or
sbb
push
xchg
or
stos
aas
cmp
loop
cmp
iret
jns,pt
xchg
mov
push
or
sub
push
cltd
mov
out
xor
push
cmp
jmp
sbb
jns
mov
ret
lea
popa
push
arpl
in
push
imul
cmpsb
roll
cmpsb
aas
out
in
sbb
xchg
fisttpll
mov
ss
movsb
jb
or
popa
outsb
adc
cmp
jle
jge
mov
arpl
and
out
adc
fildl
lret
andb
ljmp
lds
shlb
pop
jb
imul
cmp
decb
dec
pop
xchg
mov
mov
cmpsb
jmp
decb
jmp
aas
push
mov
mov
repnz
inc
clc
andl
add
loop
adcb
ret
pop
mov
out
add
lods
in
sub
lcall
xor
pop
in
lcall
mov
mov
jnp
icebp
dec
push
jo
mul
popf
into
xchg
sti
dec
stc
test
jmp
arpl
xor
pop
or
stos
hlt
ret
push
jnp
or
cmpsb
lcall
outsb
xchg
push
fildl
je
mov
dec
mov
jnp
dec
ljmp
xchg
cmp
lea
add
sti
cli
xor
jg
mov
or
inc
pop
pop
cmp
outsl
sub
mov
cmp
andl
adc
adc
push
fdivrl
jne
shrw
lret
filds
mov
into
or
or
mov
sbb
add
rorl
or
sbb
or
dec
mov
sub
or
mov
cmp
pop
push
orb
pop
or
rorb
scas
pop
xchg
pop
jns
pslld
or
or
fwait
dec
stc
lods
inc
and
jge
dec
fs
push
inc
ja
mov
pop
je
bnd
lret
sbb
nop
push
out
or
sbb
inc
call
cmp
jne
jp
out
addb
test
cli
xchg
xchg
or
mov
jg
and
mov
jno
inc
pop
cmp
testb
or
pusha
xor
xor
xchg
leave
neg
jp
cmp
sub
js
sub
lea
test
mov
mov
cltd
mov
mov
lods
cli
test
cmp
mov
add
lret
out
push
ljmp
call
inc
ret
pop
jo
repz
enter
clc
xor
lods
xor
lds
jmp
mov
jnp
jg
into
ljmp
sbb
xchg
sbb
cmp
imul
hlt
dec
outsl
lret
sarb
arpl
jno
lret
decl
icebp
add
add
dec
inc
jmp
cmpl
xor
repnz
jl
jbe
mov
fistpll
sbb
shll
mov
dec
js
int3
push
xchg
push
and
cld
notb
lea
stos
jnp
sub
ljmp
addr16
icebp
out
or
clc
adc
add
mov
stos
or
filds
pop
dec
xchg
ja
cs
stos
idivb
sub
sub
xor
loope
pusha
out
stos
cmp
or
jge
or
mov
mov
mov
mov
or
or
outsb
xchg
scas
mov
cmp
or
or
cmpsb
jle
pop
push
icebp
cmp
push
outsb
or
cli
xor
pop
pop
rolb
or
cmc
adc
xor
cmp
out
stos
sbb
movsb
dec
loop
add
test
test
xlat
fcomps
testb
lret
adc
adc
mov
sub
test
enter
sub
jmp
insl
aas
sahf
cmp
dec
pop
lret
jnp
jo
mov
pop
mov
fcoml
out
mov
sahf
add
or
rcrb
sbb
cmp
adc
add
je
xchg
jmp
mov
dec
cltd
pop
or
in
inc
add
inc
xor
out
imul
divb
call
leave
inc
sbb
push
mov
or
icebp
pop
fmul
xor
xchg
out
mov
pop
ljmp
sbb
inc
add
aas
inc
js
setle
jbe
inc
push
and
aam
out
mov
dec
test
mov
cwtl
mov
rcrl
or
movsb
dec
call
mov
push
popf
jno
mov
inc
pop
jmp
cmp
dec
hlt
das
lret
cli
ror
push
cli
pop
push
inc
ljmp
stc
repz
sub
mov
scas
xchg
xlat
push
mov
fucomi
out
push
jb
out
push
add
test
lea
pop
imul
cmp
repz
jbe
sub
mov
test
inc
sub
testl
mov
repz
leave
dec
sbb
cmp
add
pop
xor
mov
cmp
pop
pusha
lret
mov
xor
add
mov
add
je
jecxz
inc
dec
dec
sbb
jecxz
jl
add
sub
pop
movsb
in
mov
addl
outsl
inc
xor
xor
sub
xlat
loopne
scas
sbb
dec
jle
or
jmp
loope
add
mov
or
add
push
out
add
adc
mov
xchg
ud1
pushf
push
inc
cmp
cld
stc
mov
stos
add
jmp
das
fldt
mov
dec
std
cmc
mov
in
inc
add
popf
shr
mov
fs
enter
mov
jmp
xchg
mov
dec
movsb
dec
lsl
add
sti
ljmp
dec
lret
lods
cltd
or
or
xor
or
cwtl
int3
fs
jl
decl
xlat
ss
jb
ficompl
push
andb
mov
fldt
std
cli
xchg
jecxz
cmp
xor
call
shl
mov
sbb
pop
imul
sti
insl
xor
lret
push
popf
test
jmp
push
cmp
inc
in
push
decl
int3
ds
and
pop
push
push
cmp
push
jno
ds
sub
mov
push
shll
mov
xor
scas
adc
repnz
add
and
adc
xor
cltd
pop
test
adc
cmp
lret
ds
fldt
mov
mov
or
stc
push
sti
mov
fwait
mov
shrb
dec
xchg
addl
adc
shrb
add
cmp
dec
cmp
pop
adc
cmp
push
cmc
xor
fnstsw
fiaddl
mov
xchg
pop
mov
jbe
sub
mov
cld
les
out
dec
ds
int3
shl
nop
pop
dec
cmp
sbb
mov
ss
sbb
adc
xchg
pushf
xor
testl
inc
mov
cmp
jl
ficoms
mov
or
idivb
xlat
fdiv
mov
ljmp
sub
in
push
ss
and
das
push
mov
inc
sbb
jb
shrb
test
pop
lret
sbb
or
jg
in
sub
mov
inc
push
scas
sub
ret
sbb
test
pop
ss
dec
adc
shrb
and
add
daa
repz
test
jns
or
or
lods
cmpsl
mov
push
repnz
hlt
in
fs
or
stos
jns
jmp
sbb
jl
adc
jno
or
adc
pop
bound
or
mov
lcall
or
rcrb
or
jns
jo
cmpl
sbb
sbb
adc
sbb
push
xor
jg
hlt
sahf
cmp
sub
mov
sub
mov
fsubrs
shrb
movsb
jp
mov
or
or
cmpsb
pop
test
xor
sbb
add
cmp
sub
lea
pop
mov
adc
repz
mov
sub
fbld
or
ss
mov
xchg
and
notl
or
sub
dec
aam
stos
sbb
in
mov
std
ds
testl
aas
and
push
mov
repnz
sti
sbbb
clc
in
mov
or
lods
sbb
xor
push
mov
loope
xchg
mov
in
mov
cmp
pop
pop
or
into
inc
mov
xor
cmp
test
fldcw
popa
shlb
into
mov
dec
mov
sar
ret
and
push
das
add
and
int
mov
adc
arpl
lret
stc
push
jnp
je
stos
ret
jbe
fdivr
ror
sub
push
sub
add
adc
stc
jmp
sbbb
sahf
in
xchg
inc
xorb
mov
outsb
sbb
add
stc
popa
ret
push
cli
pop
inc
push
xchg
into
pop
cld
jmp
xor
dec
push
leave
lret
sbb
es
sbb
xor
push
es
fs
addr16
stos
clc
pop
lods
mov
arpl
in
jbe
fstps
fldenv
out
aas
imul
int
mov
or
shrl
push
xlat
cli
lock
jb
or
fnstenv
daa
pop
ror
adc
sub
add
pop
cmp
mov
icebp
dec
stc
in
and
pop
mov
pop
je
aaa
popf
cmp
negb
sbb
xchg
lods
das
sarb
pop
mov
sti
shlb
out
push
push
mov
dec
jg
inc
lods
repnz
mov
out
icebp
icebp
add
mov
xchg
icebp
inc
add
cwtl
ret
add
push
mov
xchg
inc
xor
jbe
ret
and
mov
jno
hlt
mov
sbb
je
jp
fmul
out
in
dec
xlat
mov
rcr
sub
cs
xor
pop
into
mov
enter
cmp
stos
jns
mov
add
in
pop
hlt
in
into
push
mov
repnz
lock
xorb
daa
add
sub
ret
push
jo
sti
js
xor
xor
adc
jmp
mov
mov
mov
pop
xor
stos
insl
xorb
cmc
mov
jbe
or
jmp
je
mov
outsb
or
cmpsl
cli
decb
enter
rcr
fdivs
adc
mov
stc
fbld
xchg
icebp
push
mov
add
js
adc
inc
lock
dec
rcll
pop
push
rolb
and
fsubp
clc
pop
stc
mov
js
sbb
ss
jmp
push
and
jg
scas
xchg
cmp
cli
mov
repnz
sbb
push
mov
mov
and
repz
mov
ss
cmp
pop
xor
add
inc
add
xor
push
or
inc
lods
or
lds
jns
or
cld
ss
out
dec
enter
add
xor
xchg
mov
insl
jmp
fnstcw
cs
jl
jne
into
xchg
cmp
ja
repnz
loope
mov
adc
imul
mov
sti
call
iret
push
lahf
ficoml
add
out
in
xchg
xchg
xchg
xor
daa
xor
cmpsl
call
jno
add
jmp
dec
and
sub
icebp
add
inc
mov
xor
aas
pop
jo
hlt
cmp
out
fstpl
jo
inc
ljmp
les
out
daa
sbb
xchg
ret
dec
cmp
sub
adc
addb
xchg
out
or
leave
and
repnz
push
jne
push
sti
cmp
xchg
add
cmp
ficompl
dec
xchg
sbb
add
mov
pop
iret
dec
leave
hlt
aas
cs
les
mov
iret
xor
xchg
sarb
cli
mov
sbb
pop
pop
or
lods
clc
call
daa
mov
dec
dec
rclb
in
mov
mov
fprem
sbb
int3
psubusb
xchg
sbb
rolb
bound
sahf
dec
lea
xchg
lret
inc
das
ret
add
or
cli
mov
pop
pop
or
add
dec
hlt
jnp
mov
mov
jnp
lcall
mov
stc
ljmp
sbb
push
xchg
jns
adc
jge
sarl
ds
push
test
jl
clc
jge
jle
sbb
out
leave
xor
adc
arpl
or
mov
fisubrl
mov
xor
sbb
xchg
movsl
rcrb
por
dec
repnz
lret
div
inc
pusha
arpl
mov
add
jbe
imul
jae
push
in
cmp
jmp
mov
sti
stc
pop
enter
and
int3
adc
add
sbbb
xchg
mov
xor
incb
pop
clc
daa
test
or
stos
lea
cwtl
in
sahf
das
push
mov
fcmovne
adc
ja
xor
sti
jmp
lods
pop
cwtl
test
xchg
jmp
je
dec
push
xchg
in
das
lea
xchg
pop
popa
mov
test
pop
in
ds
test
loope
lcall
test
xor
out
addl
imul
dec
cmp
jnp
sub
inc
or
jle
outsb
popa
wrmsr
adc
add
cs
xlat
xchg
and
repnz
jb
xor
outsl
mov
mov
movsl
icebp
and
add
ficomps
stos
rorl
shl
mov
sbb
mov
jge
pop
push
lea
das
push
xchg
out
add
stc
add
pop
fs
inc
push
les
sub
cmp
cmp
sub
xor
sbb
and
mov
xor
mov
daa
out
push
cmp
mulb
mov
dec
in
maxps
pop
in
inc
out
dec
call
dec
lret
faddl
in
mov
or
xchg
jae
xchg
stos
sbb
mov
xchg
mov
or
and
fmull
pop
xor
cmpsb
xor
ror
sub
xchg
push
fnstcw
test
push
xor
mov
jno
stos
sbbl
ljmp
xchg
fisttpll
hlt
out
adc
inc
xor
jns
mov
or
ds
cli
inc
xor
or
sarl
fdiv
adc
sbb
xor
push
mov
js
out
mov
sbb
pop
push
insb
pop
xor
jns
lods
xchg
xchg
jb
popa
popa
cmc
lcall
xlat
icebp
push
andl
lret
into
push
sub
insl
cmp
repnz
mov
out
add
jb
adc
mov
out
dec
adc
pop
cmp
jp
clc
int
fdivrs
test
idivl
arpl
hlt
lea
cmp
dec
sbb
add
xor
cmp
pop
cmp
int
out
les
test
push
or
add
inc
xchg
xor
leave
fs
xor
mov
jp
xchg
push
mov
and
push
cvtdq2ps
or
sbb
test
inc
ds
jne
testb
mov
rcrb
sbbb
inc
subb
jns
imull
push
sarb
data16
mov
daa
xor
fsubrp
cmpb
mov
push
jp
jno
leave
outsb
push
shll
enter
shrb
mov
dec
fsubr
jmp
dec
leave
dec
pop
icebp
movl
mov
inc
test
nop
enter
sti
inc
dec
inc
jae
sub
jnp
faddl
ss
xor
call
repz
fmuls
xlat
test
imul
inc
jle
call
mov
push
icebp
jp
ret
push
xchg
loope
inc
or
repz
jnp
xchg
mov
adc
push
cmp
pop
xor
dec
mov
add
outsb
inc
cmp
cs
sub
jmp
pop
out
lahf
jb
xor
or
xor
sub
negl
inc
mov
ss
pop
inc
mov
inc
mov
inc
and
sub
ljmp
jne
ror
push
inc
mov
mov
arpl
movsb
adc
movsl
cmp
inc
in
mov
jnp
push
sub
adc
jnp
iret
mov
inc
ss
mov
jg
test
out
scas
test
or
sbb
and
jle
call
inc
stos
xchg
and
lret
jb
cs
ficomps
js
rcrb
ljmp
aas
pop
or
mov
bound
sti
cmp
mov
add
mov
mov
add
jnp
or
mov
and
push
outsb
cs
cwtl
jmp
mov
or
xor
idivb
mov
pop
add
jle
and
iret
adc
push
fldz
jg
push
or
cs
repnz
loopne
mov
xor
jbe
ret
ss
xor
sbb
push
mov
cwtl
data16
sub
sti
cli
mov
out
rcrl
mov
inc
mov
ljmp
lret
and
adc
pop
pop
push
xor
adc
arpl
mov
cmp
int3
jmp
mov
js
aas
pop
cmp
in
outsl
jo
sub
stos
adc
repz
sub
out
sbb
out
dec
fadd
sub
pop
in
iret
mov
mov
dec
xchg
xor
test
jmp
movsl
xchg
jne
fadds
pop
test
lret
mov
and
psrad
shl
mov
mov
clc
cmp
sub
add
add
xchg
inc
xchg
push
lcall
arpl
jp
or
pop
test
aas
clc
insl
xor
sub
mov
fsubrs
mov
test
lret
xchg
nop
xor
data16
sbb
cmp
divb
adc
mov
inc
inc
inc
pop
aaa
xor
loop
sbb
dec
xchg
or
mov
or
stos
add
das
jnp
xchg
push
push
pop
sub
push
mov
add
test
and
cmp
dec
mov
xchg
cs
fistpll
nop
mov
mov
mov
data16
inc
adc
xor
or
subl
test
xchg
xchg
je
pop
mov
or
loopne
repz
mov
jnp
pop
xchg
push
iret
cmpsb
adc
ud1
arpl
push
pop
into
mov
push
lret
jnp
cmp
lds
push
xlat
orl
cltd
add
movsb
adc
pop
xor
movb
ficoml
and
and
xchg
and
mov
dec
in
out
addr16
add
mov
mov
adc
outsb
dec
sbb
pop
sub
xor
pop
cmpsl
lods
push
xor
scas
sarl
jmp
xchg
cmc
mov
ret
cli
in
adc
leave
pushf
push
pop
or
jae
cld
sbb
or
aas
in
hlt
sbb
ret
insb
sahf
inc
test
int
push
mov
shrb
fimull
xchg
push
add
ficoml
sbb
test
pop
and
pop
icebp
lahf
mov
push
and
orl
int3
mov
lret
adc
repz
int3
mov
mov
out
push
mov
inc
inc
test
jno
enter
or
dec
repnz
aas
mov
jb,pn
cmp
test
mov
cld
sub
push
inc
mov
mov
push
lock
sub
jecxz
mov
sbb
cmp
outsl
in
sub
fsubrp
jle
cmp
inc
or
or
imul
aas
loop
js
push
inc
loopne
push
pop
scas
dec
stos
addr16
push
or
outsl
outsl
push
or
cmp
aaa
or
jno
in
das
daa
lahf
negb
push
mov
int3
clc
fcom
sbb
jnp
xchg
mov
outsb
mov
pop
mov
xlat
pop
mov
sub
jecxz
adc
ljmp
or
inc
and
aas
cli
push
or
xlat
paddsb
ds
jae
movsb
push
imul
mov
jnp
add
lds
mov
sahf
inc
jmp
pop
pusha
lock
jecxz
mov
sbb
adc
shlb
addr16
notb
icebp
mov
mov
add
or
mov
push
in
stos
pop
xchg
mov
sar
loope
out
mov
adc
mov
dec
fwait
scas
test
fcmove
xchg
ss
pusha
ret
loope
ret
fstl
xor
into
out
lret
cmpsl
adc
xor
in
mov
dec
cs
insb
leave
lret
repnz
mov
sbbb
aas
insl
push
lcall
pop
adcl
or
aad
stc
push
cmp
addl
xchg
xchg
fbld
add
rolb
mov
push
adc
pop
std
pop
cmp
xchg
icebp
sub
sbb
xchg
jp
and
pop
ss
insl
sarl
sbb
jb
outsb
xor
stos
lock
stos
xchg
jg
ss
dec
cmp
fs
fnsaves
mov
pop
mov
mov
xor
jns
imul
jl
xchg
mov
adc
sbb
stos
or
pop
mov
fsubs
xor
push
js
fistl
fsts
repnz
loopne
jmp
stos
mov
aam
xchg
inc
jmp
push
stc
cmpb
xor
mov
ljmp
rolb
lea
and
lcall
mov
xor
test
repnz
dec
add
int3
push
push
mov
es
icebp
dec
adc
mov
push
sarb
mov
push
pop
bnd
push
xchg
sbb
je
mov
push
sbb
data16
das
mov
push
xlat
out
cmp
fstpt
jbe
int
lret
fdivrl
pop
cli
pop
mov
pop
mov
adc
mov
cltd
cmp
repz
pop
push
add
jnp
arpl
jae
push
mov
stc
inc
lret
push
sbb
dec
sub
xor
add
cmc
pushf
mov
ret
cmp
push
dec
inc
xchg
lods
dec
sahf
sbb
mov
jg
dec
jmp
add
or
mov
or
sbb
loopne
pusha
or
xor
push
repz
pop
cmp
cmp
sub
stc
or
clc
repnz
pushf
push
clc
fwait
xchg
aaa
inc
or
cwtl
and
testl
mov
push
ss
cmp
dec
jmp
push
lock
int3
lcall
push
ret
adc
pop
adcl
iret
imul
ret
mov
iret
mov
popf
and
adc
ss
test
add
inc
and
dec
or
jmp
mov
xorb
add
repnz
mov
movsl
sti
jnp,pn
ror
inc
mov
xor
adc
jmp
and
cmp
mov
call
pushf
imul
cld
scas
push
inc
mov
lea
xor
adc
inc
into
jno
rcrl
adc
lods
inc
xchg
or
sbb
repnz
jb
sbb
push
fdivs
cmp
popa
mov
mov
xchg
mov
lds
mov
call
jmp
pop
hlt
pop
push
jne
lcall
mov
imul
fidivrs
fidivs
in
sarl
xchg
divl
daa
fimuls
movsl
sbbl
or
in
aas
xchg
repz
pop
mov
insb
sub
add
mov
sti
or
mov
xor
push
dec
ret
div
stos
and
imul
push
cli
or
cmp
mov
pop
dec
and
fisubrl
notl
or
insl
jno
cmpb
test
cld
xchg
add
or
xchg
mov
addb
fsubs
inc
aam
mov
jb
pop
jge
ss
mov
xorl
int3
ds
push
out
rorl
mov
jo
ss
in
xor
jne
iret
lea
or
and
mov
lods
mov
pop
add
adc
je
mov
xchg
mov
xchg
pop
lahf
in
mov
jecxz
sub
inc
mov
out
add
dec
xchg
sub
lea
or
add
xor
pop
adc
cmovns
jnp
popa
pusha
dec
popa
sahf
lcall
dec
repnz
or
push
test
mov
pop
fistpl
clc
out
push
xor
sub
ljmp
jmp
cmp
lea
adc
sbb
mov
dec
xor
cwtl
out
test
and
push
bound
addr16
push
pop
mov
pop
rorb
orl
sub
stc
xor
fnstenv
dec
test
cmp
push
std
xchg
ja
out
mov
xor
or
pop
out
xchg
imul
pop
cli
mov
mov
aaa
xor
xor
ds
in
jmp
cmpsb
cmp
pop
test
mov
sti
test
mov
jl
shlb
rcl
sub
jl
sahf
jns
and
push
jo
dec
xchg
lcall
dec
and
insl
mov
pop
add
xlat
out
sbbl
cmp
jg
push
and
or
daa
adc
or
sub
clc
xor
mov
lds
mov
sub
out
xlat
imul
pop
push
fdivrl
test
nop
in
add
jmp
mov
mov
add
out
fldl
cmpsl
adc
mov
sti
adc
repnz
pusha
xchg
add
add
sti
mov
dec
inc
out
pop
into
push
jbe
mov
inc
arpl
pop
into
dec
xchg
testl
xlat
mov
jno
cmpsb
mov
pop
ss
stos
scas
fs
adc
sahf
lea
out
insl
int3
sbb
jp
pop
jb
push
subb
push
mov
hlt
fst
push
scas
pop
dec
in
pop
cwtl
out
adc
dec
js
test
jp
pop
pushf
jno
notb
mov
sub
xchg
lcall
loopne
nop
scas
and
jo
cli
dec
fsubs
or
shrb
adc
jne
out
fnstenv
dec
sbb
jbe
stos
xchg
pop
repz
pop
out
mov
cmpb
repz
jecxz
fmull
push
sahf
imul
dec
repnz
and
in
cmc
jp
fs
or
sbb
xor
punpckhwd
dec
push
test
cmp
mov
les
push
add
mov
push
int
push
cmpl
jl,pn
lock
arpl
push
inc
insb
ret
inc
or
lret
dec
sub
mov
push
push
sub
jns
sub
sub
cmp
je
ss
push
repz
and
or
sub
lea
mov
jg
leave
insl
xchg
imul
bnd
icebp
pop
pop
sub
lret
add
cli
cmp
push
jle
sbb
mov
xor
or
out
dec
jnp
in
bound
or
outsl
pop
dec
adc
inc
mov
idivl
fs
and
repnz
sub
lcall
mov
scas
jg
movsl
dec
mov
jnp
je
sub
sti
dec
insb
jmp
adc
jmp
and
outsl
inc
jg
divl
add
xor
mov
insl
adc
push
loopne
or
subl
cmp
mov
loopne
cmp
mov
mov
pop
mov
add
push
cmp
add
hlt
and
xchg
iret
mov
decb
in
mov
and
fimuls
pop
shlb
jbe
jecxz
inc
pop
sub
sbb
xchg
adc
out
inc
xchg
add
cmp
pop
inc
adc
imul
jo
pop
add
mov
lret
cmp
sbbb
xchg
cmp
shll
push
pop
in
mov
ljmp
in
jnp
pop
xchg
lock
dec
mov
or
clc
sub
repz
mov
mov
mov
fwait
mov
orl
inc
ljmp
xor
ret
pop
cmp
paddsw
mov
sub
mov
in
test
mov
in
xchg
jle
xor
pusha
out
test
cmp
pop
dec
loopne
shr
enter
aas
imull
mov
mov
scas
enter
enter
pop
adc
scas
stc
lods
push
xchg
out
push
cmp
add
scas
or
cs
adc
lret
or
sbb
std
or
call
scas
lcall
stos
pop
das
adc
insl
xchg
mov
xor
sub
inc
xchg
or
pop
xchg
xchg
jecxz
xchg
xchg
jo
lods
cmpsb
xchg
cmp
jnp
ret
divl
cltd
push
inc
outsb
mov
dec
cmp
scas
jno
mov
adc
std
pushf
and
sarb
nop
stc
push
jnp
push
push
cld
outsl
outsl
cmpsl
imul
jmp
fiaddl
mov
mov
xorl
cmp
scas
idivl
push
jne
xor
xchg
add
std
push
xor
cmp
lahf
push
inc
push
add
mov
push
cmp
idivl
in
repz
jnp
test
lock
rep
je
lock
out
loopne
adc
sahf
aas
mov
fidivl
orl
cmp
addl
jp
sahf
jmp
lret
cli
cli
mov
rolb
inc
test
repz
and
aaa
lea
jge
les
adc
mov
cli
mov
inc
lea
popf
nop
or
add
xchg
out
fbld
repz
mov
jae
imul
or
or
jmp
and
nop
lock
push
scas
mov
dec
mov
xchg
filds
inc
cmp
cmp
xchg
test
mov
inc
pop
les
and
movsb
mov
xchg
mov
xor
xchg
push
scas
push
push
jnp
xchg
test
fidivrl
pop
adc
lea
xchg
inc
pop
sub
mov
scas
imul
cmp
jbe
outsl
sub
addr16
sbb
pop
xchg
sbb
push
sbb
xchg
addl
adc
xchg
ds
pop
cmp
jno
mov
or
push
adc
sub
aam
pop
lcall
mov
jge
dec
cli
mov
enter
and
sbb
sbb
js
xorb
sbb
inc
cld
addr16
jmp
xchg
shlb
repnz
inc
stos
into
dec
ret
adc
or
or
test
jecxz
inc
sub
xchg
repnz
mov
test
push
sbb
pop
mov
nop
shll
push
rcl
mov
fstps
inc
mov
add
xchg
inc
sbbl
jno
mov
or
xor
jp
icebp
or
shlb
xchg
in
pop
push
push
xor
inc
lods
sbb
dec
xchg
js
xchg
cs
mov
push
fisttps
push
ds
mov
and
mov
mov
cltd
stos
out
pop
dec
xor
xlat
dec
lods
fsubl
outsb
aaa
jmp
imul
jl
inc
pop
fucomi
stc
mov
mov
idivb
aas
push
or
push
pop
jmp
ja
je
inc
jno
fstpl
les
cmp
out
adc
fisttpll
push
sub
mov
inc
or
dec
lea
movsl
or
in
stc
fisubs
mov
aaa
out
mov
fsubrl
daa
and
jg
inc
es
fidivrs
dec
leave
cmp
mov
adc
jmp
out
jns
lds
popa
push
int
nop
cli
test
pop
sarb
push
pop
scas
rorb
cmp
cld
push
dec
fisttpll
emms
push
dec
jmp
popa
in
jae
scas
mov
pop
pushf
ret
repnz
jns
sbb
dec
adc
dec
lea
mov
dec
mov
jmp
xchg
adc
rclb
push
push
mov
mov
es
inc
sub
into
push
push
push
adc
mov
push
jl
stos
add
gs
inc
imul
dec
cs
jge
in
inc
ss
idivb
jmp
fwait
hlt
xchg
xor
jmp
sub
dec
rcrb
cmpsl
xor
jne
stos
sub
add
adc
call
jg
fucomip
cmpsl
and
fdivr
test
dec
inc
xchg
imul
push
sub
dec
mov
lcall
jg,pn
sbb
xchg
or
or
cli
sahf
inc
inc
jge
jno
fidivrl
sbb
and
ret
out
pushf
push
or
aaa
inc
mov
loop
mov
bound
adc
sbb
mov
xchg
cmp
sub
ss
call
or
inc
pop
imul
ss
jns
mov
lock
hlt
lea
pop
sub
ret
mov
sbb
push
cwtl
cmp
scas
fiaddl
in
stos
mov
cmp
mov
mov
sub
xor
xor
pop
push
pusha
jp
mov
lahf
cli
das
jb
add
sub
or
xchg
cmp
inc
arpl
or
cmpsb
call
add
mov
cld
stos
adc
pop
mov
cs
jg
es
stos
inc
cmp
jnp
fstl
ds
xchg
mov
inc
sbb
call
lock
fistpll
outsb
push
enter
pop
xor
inc
sbb
pop
jb
push
inc
out
into
out
push
mov
dec
sub
ds
or
cmp
push
sub
inc
mov
int
jmp
call
add
inc
jg
push
mov
lods
inc
cs
mov
push
sbb
adc
into
add
clc
sub
xlat
stos
loop
rorb
mov
mov
push
jg
gs
adc
movsl
out
xchg
insl
adc
lret
pslld
das
jmp
pusha
add
jg
adc
xchg
adc
cmp
jns
inc
stos
dec
mov
cli
gs
sarl
push
mov
ror
xor
lock
jle
pop
into
aaa
xchg
mov
repnz
add
cld
jg
ljmp
jae
push
xor
in
das
fdivrl
lahf
push
pop
or
test
icebp
jge
push
pusha
xlat
cwtl
into
sbb
into
out
push
push
in
inc
pop
or
xchg
adc
jnp
js
push
xor
pop
lods
mov
mov
xchg
ss
mov
mov
jmp
or
ja
jnp
xchg
adc
loopne
mov
adcb
add
scas
pop
rclb
sbb
cli
cli
sub
cs
push
xor
cs
or
push
jmp
iret
jle
adc
ljmp
push
push
add
push
or
mov
loope
stos
jmp
int3
add
push
arpl
push
jno
jne
push
push
dec
cmpsb
jg
mov
insl
out
pop
pop
lods
pop
xor
pop
xor
sbb
add
xchg
stc
or
push
int
cmpsb
insl
jns
mov
mov
arpl
inc
cmp
jmp
fsubs
jae
push
ljmp
xor
mov
mov
nop
sub
xor
xor
jl
lcall
jae
test
js
xchg
or
cltd
adcb
jbe
dec
pop
stos
ljmp
aaa
xchg
push
hlt
inc
les
pop
add
mov
rcl
push
ret
cwtl
mov
data16
inc
jge
mov
cwtl
jle
adc
fisubrs
sub
test
or
popf
or
in
sub
push
mov
push
cli
pop
mov
or
jmp
xchg
ljmp
mov
imul
adc
xlat
pop
push
cmp
adc
mov
cmp
movsb
jp
mov
call
and
push
or
call
into
sbb
adc
push
testb
loop
mov
sbb
sti
inc
repnz
mov
add
pop
jp
fnsave
add
sbb
mov
push
ljmp
cli
divl
lock
push
adc
enter
and
daa
cli
or
scas
mov
xor
xorl
pop
mov
mov
xor
inc
dec
std
jo
stos
jne
es
mov
jecxz
repnz
or
add
loop
xchg
or
xchg
push
jmp
iret
stos
cld
sub
cmp
arpl
movsb
arpl
push
imul
lret
mov
sub
and
xchg
shll
sbb
into
cs
dec
xchg
movsb
push
ja
inc
lret
sbb
xchg
xchg
fnstsw
lods
xchg
cmc
repz
xchg
int
jmp
push
jo
int
inc
mov
out
pop
pop
sahf
test
dec
lods
push
mov
pop
dec
shlb
cmp
repz
jecxz
negl
jecxz
or
sub
inc
jbe
fldcw
or
or
imul
cltd
mov
out
cmp
int
mov
pop
mov
mov
pop
test
push
push
insb
push
cmp
int3
xchg
jno
mov
mov
cmp
jns
or
notb
adc
das
add
mov
mov
es
push
xchg
push
xor
fdivrs
mov
or
jns
inc
xchg
adc
add
jmp
jno
lcall
or
dec
mov
mov
push
shlb
xchg
push
xor
sub
inc
mov
push
adc
ret
ret
fs
xchg
cmpsl
sbb
and
xchg
push
repnz
mov
popf
repz
addb
das
push
aaa
mov
out
dec
fisttps
dec
jg
mov
lea
and
lock
xor
sbb
je
pop
scas
pop
xchg
adc
xor
pop
lea
jg
mov
jae
dec
adc
cmp
pop
fwait
insb
call
cwtl
xor
add
stc
xor
pop
sub
mov
xor
scas
int
or
fdivs
test
xchg
cli
addr16
mov
mov
mov
fsubrp
sbb
mov
inc
pop
loopne
mov
adc
movl
jae
ja
pop
fwait
dec
dec
sbb
aas
jns
pop
ret
in
pop
insl
sbb
lret
adc
addr16
xchg
jnp
mov
jbe
cltd
stos
es
sub
pop
in
js
mov
jg
ret
cmp
jg
xor
pop
pop
dec
push
jl
popa
repz
and
scas
mov
fucompp
icebp
imul
inc
fucomi
jnp
test
fsubrs
cmp
orb
jge
xchg
xchg
mov
jle
test
sbb
xchg
dec
daa
pusha
scas
sub
push
push
stos
in
jmp
pop
xor
jmp
enter
pop
enter
scas
mov
cmpsl
or
cmp
sub
lcall
mov
add
xchg
sbb
pusha
mov
leave
pop
jmp
add
xlat
mov
dec
inc
sbb
xor
xchg
enter
push
data16
mov
push
adc
pop
pop
adc
mov
push
dec
lea
movsb
jne
mov
into
das
js
test
in
nop
push
bound
pop
mov
jmp
icebp
dec
cmp
push
out
dec
pslld
es
or
xchg
dec
fs
out
pop
stos
lret
mov
dec
push
outsb
mov
push
cmpsb
addb
out
dec
jecxz
cltd
idivl
jg
mov
clc
cli
dec
mov
das
mov
mov
ja
jge
clc
dec
mov
gs
lret
ljmp
imul
imul
jno
or
movb
movsl
dec
add
pop
enter
loopne
mov
sbb
andnps
mov
or
in
jae
je
mov
add
dec
out
xchg
das
pop
adc
push
sbb
cmp
in
movd
cmpsb
imul
xchg
lods
scas
bound
cld
mov
rcl
in
sahf
push
sbb
pusha
and
sbb
fs
insb
pop
test
orl
mov
or
mov
shll
out
scas
push
arpl
shrb
mov
and
dec
mov
adc
lea
and
popf
mov
adc
inc
pop
jecxz
pop
sbb
mov
repnz
jnp
aaa
jmp
inc
pop
pop
inc
cmp
mov
mov
inc
jns
cld
outsl
aad
push
cli
movsl
imul
push
push
lds
cmp
xchg
adc
xchg
add
mov
loop
xor
mov
dec
mov
xor
inc
hlt
hlt
lea
xchg
mov
aaa
mov
jp
push
in
enter
fists
push
or
fwait
jb
imul
aas
cmp
sub
sub
sub
orl
add
mov
cs
cmp
and
filds
subl
ret
shr
or
fldcw
mov
mov
jae
jg
loop
test
add
scas
jns
call
xchg
jg
push
xorl
jnp
stos
inc
sub
add
sbb
cvtps2pi
in
arpl
push
repnz
test
cli
jecxz
mov
call
xchg
xor
xor
xchg
sub
adc
data16
out
mov
and
mov
sub
xchg
out
pop
inc
xchg
jmp
in
xor
mov
or
or
loop
jg
add
sub
push
jmp
cmp
int3
enter
cmp
test
adc
xchg
mov
daa
and
movsb
cmp
jp
adc
mov
xchg
lret
out
test
insl
dec
fdivs
shl
lea
hlt
push
lcall
es
and
cmp
fwait
lcall
loop
sub
cmp
repnz
scas
ljmp
add
and
mov
or
jb
pop
mov
aam
jg
pop
test
cltd
cmp
and
mov
fimull
in
sub
xchg
negl
xor
mov
jnp
jmp
or
dec
mov
idivb
jmp
sti
clc
jno
jmp
add
mov
add
jg
call
jb
fidivs
sahf
xchg
paddb
mov
add
inc
lods
push
push
push
testl
stos
cwtl
dec
insb
xchg
jo
jae
mov
sbb
lods
movsb
lcall
cs
lea
xchg
sbb
lods
shr
sub
repnz
or
sbb
sub
mov
faddl
jbe
adc
jns
jb
hlt
repnz
cli
and
jge
or
jnp
or
imul
adc
enter
je
mov
lcall
out
pop
push
sub
sti
test
and
inc
xor
push
mov
pop
stc
lret
dec
lea
in
pop
cwtl
rolb
lock
adc
outsb
dec
loope
scas
pop
pop
push
sbb
mov
and
mov
imul
inc
push
mov
mov
inc
cs
idiv
shlb
lock
cwtl
je
sbb
pushf
out
and
cmp
test
sbb
cmc
jmp
leave
in
sahf
pushf
popa
fs
jnp
dec
aaa
jp
orl
mov
std
scas
mov
dec
out
mov
sarb
cli
mov
sar
sbb
ret
aas
jb
aam
xor
outsb
ret
aas
sbb
add
enter
pop
sarl
push
jnp
mov
inc
arpl
aas
mov
sub
mov
pop
lea
ljmp
repz
xor
xlat
jne
leave
ret
sub
negb
addb
and
mov
sarl
mov
pop
clc
mov
inc
and
inc
adcb
ret
ret
jnp
cltd
outsl
mov
jae
mov
out
cmp
stos
adc
or
xor
cltd
imul
popf
xchg
or
ja
sub
mov
sbb
ret
xor
aas
mov
push
pushf
sbbl
dec
pop
cwtl
xchg
pop
cmp
leave
outsl
loop
cs
jge
fcoms
lea
mov
push
loop
fistpll
and
mov
pop
inc
mov
pushf
loope
sub
xchg
cmpsl
outsb
mov
pop
and
repnz
jnp
ficomps
cmp
pop
enter
pop
add
std
pusha
stc
cli
mov
adc
pop
data16
add
push
sbb
pop
or
aad
nopl
jb
push
inc
jg
scas
std
dec
scas
xor
cmpsb
push
cmp
push
aam
xlat
adc
add
push
jp
movsl
adc
ficompl
jns
pop
xchg
call
mov
adc
push
jg
adc
push
aas
fsub
sub
not
jg
fs
mov
out
in
or
scas
dec
xor
cmp
fstpt
cwtl
mov
lods
stos
clc
push
adc
and
aad
push
adc
xchg
test
inc
jmp
ret
xor
or
fldt
jle
mov
lods
popf
pop
icebp
adc
insl
push
xor
or
jge
stos
adc
xor
inc
cmp
hlt
mov
in
leave
mov
lea
sub
mov
xchg
jne
xor
mov
mov
jmp
lods
insb
inc
mov
or
push
jge
mov
sub
sub
mov
xor
test
bswap
test
lods
lods
cmp
mov
adc
data16
jmp
mov
adc
adc
mov
sbb
pop
or
in
pop
lea
add
movsl
loop
and
push
cmp
or
xor
pushf
sbb
xor
jae
xor
cmp
add
outsb
lret
pop
pop
ds
mov
stos
mov
adc
jbe
mov
cmpsb
dec
call
mov
jmp
xor
or
mov
add
ficoml
sti
add
dec
mov
dec
test
or
sbb
scas
xlat
fidivrl
jmp
adc
stos
xchg
lea
push
leave
cmp
lea
cmc
mov
or
es
scas
out
lods
aas
aaa
das
ret
jmp
jmp
push
testl
aad
inc
popa
or
mov
repz
sub
repnz
mov
push
mov
add
mov
cmpsb
or
sub
add
dec
or
nop
mov
cmp
lcall
mov
mov
sarb
dec
adc
and
loop
xor
sbb
or
roll
add
jbe
int3
push
ds
sub
sbb
enter
sub
inc
push
or
sti
dec
and
ss
imull
fiadds
sbb
popl
subl
fistl
sbb
dec
orps
dec
inc
sub
and
push
or
or
mov
stos
mov
leave
inc
or
xchg
mov
mov
xabort
jmp
push
clc
orb
cmp
aas
xor
sbb
seto
jnp
push
divl
push
mov
or
push
jo
out
pop
popa
pop
xor
jg
dec
adc
ljmp
jmp
sbb
jae
cmc
lret
test
movb
mov
dec
popa
and
cmp
cmp
xchg
cmp
pop
jmp
pop
daa
sub
xchg
repnz
jb
sub
test
inc
test
jae
lret
mov
xchg
stos
xchg
std
and
adc
filds
lock
mov
xor
nop
stos
divl
xor
inc
packuswb
lea
or
lahf
sbb
jl
push
ffreep
inc
add
push
jle
or
mov
test
xchg
and
jl
jne
ja
push
cmp
mov
xor
jnp
dec
cmp
mov
jg
push
adc
inc
xchg
mov
fbstp
or
mov
arpl
mov
cli
sarb
cld
xchg
pop
leave
mov
jne
lret
xchg
dec
in
xor
cmp
daa
pop
mov
test
or
adc
scas
incb
test
add
cltd
sbb
cli
mov
xchg
jmp
adc
mov
js
xor
mov
mov
lret
ja
repnz
out
mov
add
cmp
fimull
test
adc
pop
fimull
dec
or
test
loopne
mov
sbb
movsb
inc
adc
in
add
movsb
xchg
xor
dec
enter
cld
sbbl
sub
mov
pop
adc
shrl
movsb
out
stc
cmp
sbb
or
sub
fmull
cmp
movq
shr
and
or
xchg
adc
jmp
in
dec
sahf
fmuls
cmpsb
mov
mov
mov
mov
push
inc
mov
jge
pop
cli
push
aas
mov
and
test
mov
lea
nop
mov
rorb
push
cld
mov
sub
mov
lock
cmp
xchg
push
insl
rcl
test
mov
movsb
je
or
adc
dec
push
inc
aas
lahf
pop
jnp
iret
sub
jmp
loop
test
jg
sarb
and
stos
dec
or
pop
in
scas
shl
das
push
jno
mov
cltd
pop
or
shrb
pop
fcomip
push
popf
push
mov
cmpl
ja
ficoml
pop
push
jg
leave
das
push
jg
xchg
cmp
dec
inc
outsl
xor
out
cmp
flds
pop
in
jo
sbb
fdivl
push
add
or
jge
mov
pushf
xor
mov
jnp
or
push
cwtl
es
lret
push
aas
push
adc
xchg
push
cmp
push
or
and
xchg
mov
pop
ds
pop
repnz
hlt
jle
jmp
cmp
mov
jecxz
and
inc
mov
and
ds
fsubr
inc
inc
and
sub
idivl
sub
pop
test
roll
add
xor
lods
or
and
add
fwait
mov
out
sub
addr16
inc
sub
dec
jg
xor
ljmp
jmp
mov
in
stc
mov
mov
ljmp
lahf
mov
mov
enter
xor
test
scas
icebp
jbe
rcrl
add
movsl
test
fldenv
iret
cli
dec
and
lods
mov
push
iret
scas
into
repnz
cltd
jp
subb
insl
imul
add
pushf
cli
jns
stos
fsubrl
dec
ss
gs
lods
ljmp
outsl
rclb
dec
test
jnp
icebp
ljmp
inc
jmp
push
outsb
inc
out
cs
stc
jnp
in
shl
dec
daa
ja
cmp
push
or
out
push
fnstsw
out
bound
or
bswap
pushf
daa
adc
and
lea
shll
jl
fdiv
push
mov
pop
hlt
insl
jns
xchg
jg
jns
popf
arpl
sbb
xchg
jecxz
in
push
outsb
arpl
in
mov
mov
sub
mov
jecxz
xchg
insl
fisubrl
or
and
pop
push
mov
adc
add
xrelease
cmpl
pop
xor
jns
iret
scas
mov
loopne
imulb
jg
or
rolb
sbbb
sub
xor
leave
sbb
icebp
shll
mov
into
pop
cli
test
mov
pop
mov
jbe
mov
add
addb
mov
mull
daa
leave
cmp
lods
fisttpll
ljmp
inc
fists
testl
xchg
mov
ficoms
enter
adc
ficoms
dec
mov
jg
xchg
arpl
or
jnp
in
push
inc
push
int
dec
out
sahf
xchg
mov
das
popl
mov
enter
xor
push
or
cmc
in
mov
int
sbb
jnp
inc
and
sub
push
push
f2xm1
imul
dec
lds
mov
rcll
mov
jb
jle
mov
movsb
or
adc
cmp
add
sub
mov
js
and
mov
dec
xor
and
push
out
aas
in
ss
mov
or
pop
or
je
fs
out
and
out
shr
jmp
subl
xchg
push
jmp
stos
cmp
stos
xchg
or
push
pop
xor
repnz
lret
mov
stc
adc
hlt
outsl
xchg
jmp
mov
sub
pusha
mov
or
cmp
rcrb
dec
sbb
jl
sub
das
xor
jmp
dec
punpckhdq
push
mov
xchg
bound
or
pop
aas
or
popa
ljmp
jo
popf
dec
mov
shrl
sbbb
xor
movsb
enter
out
or
jo
sbb
jb
pop
mov
mov
jb
push
cmc
pop
mov
stos
lods
lods
or
inc
mov
lea
jo
xchg
loopne
adc
adc
pop
insl
dec
xchg
jg
mov
pop
mov
cltd
lahf
cmpsl
xlat
push
cmpsb
sbb
sub
lods
xchg
mov
frstor
shl
out
aas
push
xor
pop
dec
hlt
push
push
pusha
movsb
lods
xor
mull
fdivr
or
sub
xchg
inc
mov
mov
fadds
movsb
jecxz
sub
lds
sbb
je
daa
or
xor
or
jge
inc
int3
mov
pop
xchg
add
insb
and
jmp
sbb
pop
mov
mov
pop
nop
enter
push
scas
mov
out
cmp
push
sahf
decb
dec
scas
enter
xchg
lods
mov
xor
call
mov
xor
mov
loope
mov
outsb
sub
xchg
jno
lock
add
xlat
cmp
pop
cwtl
jle,pt
mov
or
out
push
ret
mov
adc
or
cmp
scas
jg
cmpsb
xchg
mov
sbb
xchg
std
shl
jle
cmp
inc
js
inc
aas
cmp
push
cmp
or
mov
inc
mov
adc
lods
sbb
xchg
sbb
lock
iret
inc
fs
xor
jns
adcl
mov
mov
ds
push
and
xchg
sbb
mov
sub
stos
sub
xchg
dec
adcb
xor
dec
sahf
adc
inc
cmp
xchg
jg
add
lods
lret
pop
scas
repnz
push
xchg
popa
aas
sub
jmp
xor
sahf
pop
jg
test
xchg
jg
scas
scas
mov
fwait
mov
dec
dec
or
inc
movb
ret
pop
cmpsl
ds
into
add
stos
jge
movsb
jmp
pop
mov
sbb
inc
push
xchg
push
mov
and
add
dec
mov
or
rclb
andl
out
xchg
lcall
cmp
je
stos
sbbl
das
mov
lret
jne
push
mov
iret
ret
sub
mov
das
xchg
iret
xchg
or
pop
push
ss
and
mov
out
mov
cmp
ret
push
jno
sub
jnp
fdivs
movsb
scas
inc
ss
xchg
mov
mov
jp
jecxz
xchg
or
mov
rol
jg
scas
cmpsl
jae
mov
rcll
cmp
jbe
inc
mov
outsb
inc
mov
add
lret
push
jecxz
xor
out
outsb
js
dec
adc
mov
mov
add
jmp
leave
pop
cmc
xchg
mov
test
clc
xchg
mov
jmp
or
adc
sub
fidivrs
or
cmp
mov
jmp
scas
sbb
cs
scas
or
shlb
adc
jmp
pop
inc
stos
and
mov
sub
sub
call
cmpsl
mov
arpl
pop
fdivl
in
mov
pop
cmp
push
in
jb
rorl
mov
inc
fcoml
mov
adc
mov
mov
sbb
lcall
dec
scas
xor
bound
pop
cmp
mov
insl
push
sub
mov
es
cmp
orl
emms
addr16
dec
mov
dec
fcomi
cltd
mov
fs
je
divb
cs
test
xchg
fucomip
inc
imul
mov
xchg
sub
inc
or
cvtdq2ps
popf
push
dec
jg
loop
adc
or
mov
inc
sub
cli
and
rol
jno
dec
sbb
sub
dec
mov
push
add
cmp
scas
lcall
sub
xchg
icebp
inc
jmp
out
sub
icebp
push
rolb
adc
push
adc
pushw
sbb
daa
push
dec
mov
jecxz
mov
jmp
inc
filds
aas
adc
xor
jg
sbb
inc
lock
jns
test
mov
sbb
or
ret
pop
jnp
ja
mov
xchg
mov
movb
add
clc
clc
or
xchg
add
add
nop
adc
lret
lea
arpl
lods
pusha
pop
inc
add
lea
mov
addr16
scas
repnz
or
fs
test
cmpsb
cltd
pop
icebp
popa
fstps
jns
out
sub
or
push
or
xchg
in
inc
sub
ficomps
cltd
arpl
push
movsb
adc
imul
push
mov
fwait
cmpsb
push
shr
adc
push
push
sub
and
jecxz
lock
cli
fcoms
push
sbb
cmpsb
jnp
pop
and
js
or
sarl
adc
fwait
inc
sbb
jp
add
mov
add
lock
loop
sti
mov
cmpsl
test
sbb
aas
into
or
xor
add
int
or
or
pop
sub
or
sbb
xchg
gs
lret
cmp
mov
cld
jnp
movntq
mov
jnp
dec
push
sub
add
mov
pop
movsl
mov
adc
mov
mov
push
cmp
hlt
push
lcall
add
ds
sub
int3
xchg
cmp
mov
cmpsb
cmc
jo
cmp
add
popf
vmwrite
xchg
push
and
addr16
push
mov
icebp
cmp
popf
into
pop
repz
sbb
in
push
clc
movsl
call
sbb
mov
or
insl
cld
mov
ja
pop
out
xchg
cltd
jecxz
cmp
adcb
out
repz
or
outsl
js
cmpsl
es
add
sahf
popa
ljmp
add
movsb
mov
or
or
pusha
lret
adc
and
cmp
adc
pusha
adc
out
cmp
std
dec
xlat
cmp
addl
iret
pop
pop
daa
fdiv
pop
cmc
sbb
lret
add
ret
sbb
movsl
test
addl
push
mov
ret
int3
lock
fs
xchg
mov
push
xor
mov
jo
lods
jmp
mov
pop
mov
scas
mov
inc
push
call
outsl
xchg
mov
cltd
idivl
cmp
pop
add
lods
and
arpl
or
les
or
jns
in
push
pop
ss
dec
dec
push
jbe
add
push
jecxz
pop
xor
aad
push
dec
test
add
idiv
pop
aas
stos
jns
adc
inc
shlb
in
jns
dec
mov
add
inc
xor
fistpll
pop
scas
or
popa
xor
movsb
fs
push
subb
add
lcall
mov
jnp
adc
or
xor
adcl
out
sub
cli
cltd
xor
repz
or
or
push
out
insl
sarb
fisubl
sub
add
pop
add
mov
icebp
mov
mov
sbb
insl
pop
xchg
jp
push
mov
orb
mov
fst
push
shlb
xor
jnp
addr16
lock
jg
popa
sahf
add
or
popf
xor
mov
lcall
sub
lods
sbb
and
cmp
inc
mov
fs
pop
lock
inc
mov
cld
xor
add
fcompl
iret
inc
nop
or
rcrl
add
inc
aas
sbb
xchg
xchg
leave
or
dec
add
jnp
pop
sbb
xor
inc
lock
in
pop
sub
push
js
push
mov
in
xchg
fwait
adc
jb
pop
cmp
or
xchg
adc
cmp
mov
xchg
pop
pop
insl
jecxz
pop
and
ss
inc
sbb
push
mov
out
movsl
mov
jl
push
adc
jg
xor
lea
cli
xchg
jnp
cmp
aam
fldl
inc
mov
push
pop
arpl
adc
repnz
pop
mov
xchg
sbb
mov
dec
cmpsb
or
or
push
pop
jg
fs
push
push
popa
sub
adc
sti
es
mov
or
clc
clc
adc
or
inc
inc
popa
xchg
adc
sbb
cmp
mov
mov
cmc
push
movsl
xchg
jnp
les
lret
pop
dec
sbb
jb
hlt
repnz
hlt
in
popf
loope
ret
int
mov
cld
inc
fcomps
sbb
pcmpgtw
xor
lods
inc
mov
leave
pop
or
testl
inc
jl
adc
push
add
nop
movsl
mov
or
add
pop
xor
sarb
pop
iret
or
inc
adc
iret
add
push
pop
push
jg
cli
mov
add
add
pop
out
ja
testl
mov
lods
push
fists
leave
push
jnp
mulb
pop
ljmp
mov
inc
or
or
adcb
hlt
and
dec
fistpll
pop
mov
repnz
pop
dec
rclb
scas
stos
xchg
pop
xchg
xor
add
ljmp
pop
imul
xor
or
inc
jae
xchg
push
pop
pop
mov
out
or
aaa
cmp
fsub
inc
push
ds
cmc
cwtl
cmc
hlt
pushf
stos
mov
adc
insl
push
pop
cld
loope
xchg
dec
push
inc
adcl
fsubl
sbb
cld
lret
fnsave
aaa
and
pop
shr
testb
repnz
lods
sbb
mov
dec
mov
aas
xchg
dec
xor
jl
shlw
add
test
xchg
int
mov
cmp
pop
pop
in
add
mov
aaa
jg
pop
arpl
xchg
cmp
cmpsb
sbb
leave
sub
mov
out
mov
xor
push
mov
ss
int3
hlt
sub
add
loope
aad
adc
mov
fisubrs
mov
out
loope
xor
push
mov
xchg
jnp
mov
loop
cmp
ds
das
sub
cmp
repnz
mov
cs
or
ljmp
leave
insb
dec
lret
xchg
es
dec
xor
dec
mov
add
out
idivl
fcmove
or
add
or
sahf
pop
ljmp
sbb
jle
loope
ret
ljmp
inc
pop
popa
loope
icebp
sbb
stos
aad
or
mull
daa
leave
movsb
or
mov
notb
xchg
iret
cli
jp
fildl
xchg
adc
adc
jno
int3
out
ret
pop
xchg
inc
les
add
imul
jmp
cmpsl
xor
mov
popf
push
jle
je
jno
dec
xor
rcll
cmc
lret
or
add
xor
sbb
stc
add
xchg
in
sub
add
jb
mov
push
loopne
filds
adc
xchg
sahf
mov
and
lods
push
jmp
mov
lea
inc
cmp
das
pop
out
popa
stos
push
cmpsl
jnp
sub
jg
mov
iret
or
je
cltd
loope
jbe
jnp
ljmp
mov
mov
sbb
mov
cmc
cld
shlb
mov
ds
xchg
into
or
push
iret
lea
ljmp
ficomps
out
lret
adc
xchg
jnp
addr16
inc
mov
popa
and
pop
mov
cmp
inc
es
shrl
jnp
sub
out
xor
mov
xor
dec
or
popa
nop
xchg
jp
xchg
inc
nop
pop
out
xlat
lods
daa
push
sbb
cltd
cmp
push
adc
dec
inc
pop
mov
jns
push
lcall
in
xlat
pop
sbb
adc
sub
mov
stos
xchg
inc
bound
cmpsl
mov
push
push
adc
jmp
push
push
mov
call
push
movsl
or
or
repz
pop
mov
sbb
ds
orl
mov
mov
out
cmp
inc
dec
cmp
movb
or
in
mov
sbb
cmp
orb
sub
rolb
fmull
aaa
sub
out
ret
mov
ljmp
add
push
mov
jmp
ror
xchg
sub
repnz
jnp
inc
stos
sti
push
push
mov
xchg
xchg
pop
fimuls
fildll
cli
mov
leave
cli
add
add
dec
fisubrs
push
mov
lret
mov
dec
pop
lcall
js
popa
add
add
add
cltd
dec
bound
js
jne
scas
adcl
pop
movb
sti
sarl
gs
jecxz
and
sub
data16
loopne
mov
sub
push
ljmp
fisubrl
int
xlat
mov
cmc
cs
divl
dec
pop
popf
xor
add
imul
mov
fisubl
adc
shlb
stos
paddsw
push
dec
fadds
daa
sub
fimull
dec
pop
jnp
testb
inc
dec
test
mov
adc
push
xor
dec
xchg
mov
and
inc
xchg
lcall
or
in
mov
cwtl
loope
testb
cmp
push
mov
xor
subl
add
push
stos
or
fcomps
pop
jp
mov
insb
xor
lahf
push
mov
ljmp
dec
repz
cli
push
call
inc
cwtl
mov
popa
jmp
mov
sub
test
movsl
push
xchg
lods
idivb
cmp
cmpsb
push
or
mov
mov
lret
push
xchg
adc
sub
pusha
sub
ja
pop
in
mov
and
lea
dec
push
lret
mov
int3
sbb
lret
lea
mov
pop
add
inc
addr16
ss
mov
fisubrs
addr16
add
mov
xor
sbb
stos
out
lcall
add
push
jae
lret
cs
cmp
fiaddl
sub
cmovnp
sbb
and
dec
loop
andl
xchg
std
das
cmp
in
aad
jp
hlt
dec
xorl
test
push
test
pop
pop
push
sti
lods
popa
das
xor
iret
cmp
pop
lea
test
jecxz
mov
jb
xor
push
jns
gs
pop
mov
mov
andl
leave
or
int3
test
push
cltd
bound
pusha
arpl
imul
push
adc
push
sbb
push
enter
add
jnp
sub
sbb
mov
push
add
inc
cmp
scas
xchg
in
notb
push
mov
jle
popa
jns
fidivrs
or
lock
or
das
add
movsb
mov
fidivl
or
add
fstpl
xor
loop
test
jno
cmp
mov
mov
sub
jns
cmpsb
cmp
xchg
add
xor
fnsave
dec
sub
out
xchg
sub
and
fldl2e
sbb
pop
pop
xlat
fiaddl
or
xor
xchg
dec
push
and
cmp
dec
scas
push
imul
popa
pop
ljmp
xor
lahf
out
in
dec
in
push
cwtl
aaa
mov
cs
lret
pushf
out
pop
xrelease
cmp
jmp
cs
arpl
and
jo
dec
pop
mov
daa
mov
mov
out
dec
stc
mov
imul
mov
in
adc
xor
mov
xor
xlat
repz
mov
fnstcw
jns
out
mov
lea
xor
inc
fistps
ret
xor
into
stos
push
xor
jnp
cmp
out
push
ret
aas
xchg
testl
leave
and
mov
push
inc
push
jnp
cld
push
dec
sub
repz
dec
repz
lret
mov
stc
imull
int3
out
pop
mov
sbb
dec
xlat
adc
jg
push
scas
jbe
fimuls
xor
gs
mov
push
adc
mov
pop
scas
jge
xor
xchg
pop
mov
inc
test
or
jg
push
pop
xor
in
or
jp
out
repz
arpl
sbb
dec
sub
mov
clc
sub
pop
dec
mov
adc
arpl
mov
icebp
xchg
mov
mov
cmp
cmp
adc
lcall
xchg
ret
mov
pushf
push
imulb
sbb
ror
xor
mov
xor
xor
sub
xchg
jo
or
mov
push
sbb
lea
xchg
dec
mov
test
sub
lods
stos
xchg
sarl
out
jmp
dec
sbb
cs
xor
adc
rclb
out
lds
mov
jmp
imul
cld
xor
lods
pop
rcll
enter
or
jmp
ss
mov
push
and
sbb
movsb
jnp
add
mov
xchg
cltd
xlat
pop
lcall
ret
test
daa
adc
mov
scas
push
test
call
add
ret
adc
sbb
push
push
imul
xchg
and
loop
inc
pop
jl
movsb
fdivs
call
mov
cli
les
push
adc
jno
push
adc
cmpsl
jmp
enter
out
lret
fimuls
hlt
out
jno
lock
les
jo
or
and
mov
ljmp
pop
ds
jno
add
stos
jae
stos
mov
inc
xchg
aad
push
pop
stc
mov
fwait
cmp
jno
ljmp
pop
stos
xor
dec
sbb
roll
sbb
imul
mov
inc
push
inc
mov
lock
pop
pop
push
cmp
push
lret
xchg
add
xchg
fnstsw
stc
andl
stos
cmc
mov
pop
pop
or
add
sbb
icebp
stos
call
cwtl
push
lcall
mov
cld
dec
andnps
arpl
adc
repz
mov
inc
sbb
fiaddl
xchg
insl
jmp
lret
pop
loope
mov
or
lret
adc
jmp
lods
addb
repnz
adc
or
dec
jb
push
xor
adcl
inc
push
adc
dec
enter
movsb
cmp
ljmp
cmp
push
mov
nop
pop
pop
mov
pop
sub
and
mov
cmpb
and
arpl
add
add
mov
jne
outsb
in
pop
sbb
jg
pop
push
jmp
incb
mov
int
icebp
jbe
dec
arpl
pop
or
jbe
cmp
in
or
adcb
and
push
cmp
imul
jp
pop
add
or
daa
mov
ljmp
and
push
adc
push
out
idivl
push
ret
fs
mov
sbb
xchg
add
movsl
jno
ret
push
xor
sub
in
in
sbb
or
adc
sbb
out
dec
jns
sar
push
mov
jle
pop
mov
out
jno
jg
loop
xchg
push
mov
sub
fistps
xchg
inc
jns
or
test
pop
ds
cltd
movsb
jl
lcall
sbb
mov
push
pushf
jmp
repnz
cmp
mov
pcmpeqw
pop
inc
cmp
sbb
repnz
inc
cld
push
cli
jecxz
xchg
pop
shrb
xor
cmpsb
jne
mov
rorb
mov
hlt
lret
or
xor
adc
cwtl
cli
fbld
and
add
pop
push
xchg
call
std
jae
test
push
fisttps
pop
repnz
clc
in
jb,pt
js
adc
dec
and
push
and
outsl
in
mov
cwtl
push
repnz
mov
pop
div
add
mov
push
dec
rcrb
leave
mov
pusha
stos
mov
ret
sub
pop
xor
inc
addr16
add
sbb
push
das
and
lret
mov
xor
pop
xlat
mov
sub
pop
cmp
sbb
scas
push
push
jns
sbb
cmp
dec
mov
clc
sub
mov
lret
scas
push
sub
fiaddl
adc
push
out
ljmp
in
pop
xchg
stos
or
dec
das
cmp
cmpsb
cltd
cmp
bound
mov
pushf
push
jecxz
or
leave
xor
cmp
shr
pop
adc
cmpsl
ds
adc
gs
mull
xchg
cli
jecxz
cs
mov
jmp
jg
pop
jge
jns
jo
stos
test
jns
push
xchg
and
xbegin
orl
pop
mull
or
ljmp
mov
jnp
mov
lret
loope
push
shrb
xlat
jbe
cld
fs
xchg
ret
loop
jns
ret
or
stos
scas
or
pop
or
es
inc
insl
ss
jg
imul
test
clc
mov
or
out
pop
sarb
jnp
xchg
push
es
mov
rol
or
jecxz
cmp
sbb
stc
jl
lods
lcall
or
mov
xor
mov
xor
aaa
inc
int3
mov
stos
inc
es
jae
rolb
pushl
sub
jecxz
push
xor
and
inc
shlb
sbbl
sbb
ljmp
jge
mov
stos
xchg
out
in
jnp
jns
xchg
add
rcll
dec
repz
inc
lods
push
sahf
pop
cmp
testb
jecxz
setbe
push
xchg
fmuls
std
movsb
mov
inc
xor
les
xchg
in
jl
fadd
stos
les
daa
or
lret
cmpb
stos
leave
add
fstps
sub
sbb
cmp
loopne
push
aaa
pushf
fldcw
stc
dec
xor
cmp
xor
push
xor
mov
xchg
lods
add
cmp
mov
out
imul
mov
lcall
mov
loop
and
pop
xor
sub
daa
in
push
adc
pop
add
das
popa
repnz
mov
mov
push
test
adc
add
addr16
jnp
or
jecxz
cmpsl
add
jo
cmp
jns
pop
insb
and
test
popf
mov
hlt
sahf
push
iret
int
pop
mov
and
xchg
pop
lea
pop
inc
js
jg
inc
or
addr16
push
es
add
push
pop
jo
push
orl
pop
add
push
stos
aam
and
out
cmc
push
inc
jns
loop
inc
dec
ret
outsl
xor
xchg
iret
mov
push
adc
sbb
jnp
out
xor
xchg
mov
inc
mov
jg
sbb
pusha
cs
lock
dec
xchg
mov
push
mov
jne
add
pop
daa
popa
jb
fimull
fbstp
es
jge
push
bsf
mov
xchg
stos
sbb
jnp
adc
faddl
inc
movsb
gs
dec
adc
jmp
xlat
or
stos
lret
mov
inc
icebp
xchg
and
ret
jae
int
add
repnz
add
fcmovnu
shlb
or
fnstsw
xor
lcall
scas
daa
mov
jno
adc
lret
decb
inc
es
nop
xchg
xchg
out
test
or
insl
cmpsb
push
add
shr
cld
cmp
mov
iret
xchg
insl
in
sbb
mov
sbb
sbb
and
loop
dec
cmp
ja
movsb
rclb
out
mov
sub
movsl
cmp
cltd
repnz
push
or
or
push
jg
push
pop
add
xlat
cmp
sbb
jecxz
xchg
mov
in
stc
push
mov
pop
and
jae
pop
arpl
push
pop
lods
xor
bound
mov
push
sub
inc
out
pushf
mov
jbe
mov
testb
loope
xchg
mov
int3
mov
and
mov
xchg
jae
or
repnz
stos
popa
sarl
test
aaa
jecxz
cltd
inc
mov
pop
xor
sub
sub
mov
notb
sub
jo
xchg
xchg
cmpsl
xor
push
insb
cmp
xchg
jnp
gs
ret
sahf
xchg
inc
cmp
movsl
fs
dec
fwait
cmp
cli
in
dec
dec
cmp
cli
pushf
in
int3
jb
xchg
arpl
out
popa
lock
and
push
lods
sub
cmp
ja
lea
cmp
cmp
mov
inc
mov
imul
test
lret
jmp
push
stos
cli
sbb
or
push
neg
out
es
add
pop
out
jns
jne
pop
cmp
pop
jbe
subl
or
cmpsb
cmp
cmp
and
push
or
cmp
into
stos
jo
cmpsb
fidivl
stos
test
in
enter
jae
add
in
divb
stc
clc
ds
orl
mov
lret
push
fstps
mov
push
cmpl
cmp
aaa
jns
enter
idivb
jne
xchg
jge
ss
popa
imulb
push
jo
mov
push
int3
xchg
mov
leave
int
pop
dec
pop
push
sub
arpl
sbb
xor
negb
add
xchg
or
cld
mov
and
aam
mov
cld
data16
sub
and
aad
cmpsb
inc
fwait
adc
xlat
pop
adc
and
xor
mov
ret
mov
test
and
in
push
mov
or
stc
dec
nop
outsl
cmp
jmp
push
mov
fsubl
push
lret
mov
clc
mov
xchg
nop
add
dec
or
mov
cmp
jl
imul
xlat
incl
decl
mov
mov
dec
add
push
outsb
mov
in
inc
and
call
imul
sbb
add
push
aas
jb
pusha
mov
inc
pop
cmp
inc
nop
mov
ds
xchg
ja
aam
adcb
leave
push
mov
jnp
lock
mov
mov
add
ja
loope
cwtl
inc
repnz
dec
scas
ja
push
mov
or
es
popf
add
mov
stos
push
imulb
test
imul
pop
jmp
ret
out
test
jo,pt
addr16
lcall
lret
xlat
leave
mov
testb
mov
cmp
xchg
test
lds
lods
jp
adc
or
inc
aas
cmp
or
pop
mov
cmp
ret
inc
mov
cmp
imull
cmp
cli
mov
sbb
and
int
mov
movsb
jb
add
pushf
insl
adc
xor
push
sub
sbb
mov
jg
cwtl
sbb
xchg
aad
imul
xchg
lock
mov
nop
popa
push
jmp
cmpsl
inc
or
fwait
mov
cmc
outsl
push
rorl
in
ficoml
out
lock
fsubrs
jmp
ss
cmpsl
out
jno
mov
jl
or
call
fisubl
out
roll
insl
jle
nop
fcomip
stos
aam
xchg
mov
xor
add
pop
jmp
imul
jnp
sahf
xor
xor
cmp
sahf
jmp
out
out
push
jb
sbb
ja
jns
in
push
lcall
stos
sbb
jmp
incl
lret
pushf
cmpsb
test
aaa
int3
or
pop
clc
fimull
or
xor
push
pop
sahf
es
adc
bound
push
pop
add
ljmp
lret
je
pop
cmp
xor
in
rorl
cmpsb
test
dec
out
ficoms
xchg
pushf
lret
xlat
xchg
push
icebp
or
addr16
stc
insb
xchg
dec
mov
ret
jmp
ss
or
adc
push
cmp
pop
mov
and
dec
push
mov
divb
or
test
cmp
dec
aad
sbb
jg
data16
jp
sbb
pop
pop
ret
add
out
and
pushf
bound
in
and
adc
fsubs
cmp
jg
gs
fsub
or
out
stc
or
dec
pop
xchg
sub
stos
mov
ret
lret
lods
popa
fnstsw
shl
jae
jnp
imul
in
or
repz
or
inc
stos
pop
movsl
xchg
pop
test
push
and
clc
cmp
dec
aaa
jnp
xor
insb
mov
and
fs
add
add
and
adc
mov
or
movsb
or
int
ja
into
push
mov
hlt
cmp
popa
sub
dec
sub
daa
mov
jg
xchg
pop
dec
cmp
jns
mov
adcb
addr16
pop
idivl
mov
cmpsl
dec
inc
sti
jg
lret
andb
lret
sbb
dec
xchg
xor
lcall
out
add
xor
das
cmp
int3
ret
dec
jae
leave
xor
adc
push
testb
mov
or
fisttps
pop
cmp
test
ret
xor
ljmp
mov
clc
sar
imul
out
popa
adc
dec
or
data16
rcll
or
mov
test
test
push
xchg
fnstcw
jp
sub
mov
pop
sbb
push
cltd
jmp
mov
nop
clc
das
mov
mov
jge
outsb
dec
scas
add
popf
xchg
cmp
mov
sbb
das
scas
aad
out
fsts
or
xor
cmp
mov
add
push
xor
sbb
repz
cmp
xchg
dec
sub
push
push
sbb
icebp
dec
sub
push
cmp
cs
fidivl
outsb
add
gs
cltd
push
cmc
out
es
ljmp
add
jno
das
adc
mov
ljmp
fucompp
cmp
sbb
xor
lret
or
pop
and
outsb
lret
lock
xchg
call
jmp
loope
jns
hlt
iret
push
mov
repz
and
mov
mov
mull
jb
das
lods
stos
mov
pop
negb
dec
pop
fiadds
scas
lret
xchg
cltd
cmc
push
testb
out
cmp
gs
mov
mov
jns
push
adc
and
sub
dec
jnp
mov
sbb
ja
js
jmp
jg
jp
xor
add
out
and
adc
jnp
sahf
xchg
shrb
jmp
pop
xchg
testl
insb
test
out
lea
mov
aaa
pusha
scas
int
popa
or
dec
push
and
adc
push
mov
cmp
cmp
mov
mov
addl
das
loop
mov
cli
cli
push
pop
push
mov
scas
inc
push
dec
out
negl
push
xor
cltd
rorl
test
xchg
and
test
xorl
cld
popa
daa
mov
pop
xchg
inc
dec
dec
lcall
or
insl
inc
jb
push
jnp
and
jmp
adc
push
icebp
cmc
mov
mov
fadd
xchg
je
add
inc
subl
or
add
roll
loopne
aas
sbb
imul
xchg
push
mov
jp
and
ds
jge
scas
push
out
pop
lret
pusha
adc
test
sub
push
sub
push
and
cmp
xchg
repnz
sbb
xor
jnp
xor
mov
add
repz
inc
pop
xlat
inc
or
rclb
mov
pop
add
xchg
jg
inc
jne
pop
jo
ss
jp
scas
adc
pop
insl
push
mov
dec
xor
xchg
cld
cltd
inc
lods
pop
jnp
cmp
cli
sub
push
test
lret
ret
mov
ljmp
lds
xor
and
stos
ds
pop
repnz
pusha
cmp
jmp
push
cmp
push
push
sbb
cs
repz
les
push
jno
mov
add
stos
ljmp
sahf
incl
int
lea
addr16
movsl
mov
das
dec
sub
dec
cmpsl
jnp
xchg
imul
dec
jg
scas
push
imul
loopne
dec
andl
test
cmc
leave
pop
loop
clc
pushf
ljmp
mov
jg
mov
loope
aam
int
jecxz
je
lahf
dec
mov
push
cli
fidivs
sbb
cmp
mov
inc
cmovp
addr16
mov
jnp
lcall
push
or
enter
add
negb
inc
shl
clc
fisttpll
out
test
xchg
pop
int3
or
and
add
jl
lret
push
xchg
icebp
cltd
aam
jle
push
jle
or
cmp
dec
xchg
xor
bound
ss
cmp
or
adc
out
fsubrs
pushf
adc
jo
mov
sahf
pop
push
push
ljmp
sbb
xor
adc
xchg
jp
sub
mov
pop
scas
fsts
into
mov
inc
add
push
jg
push
call
mov
mov
mov
pop
push
jne
or
sti
mov
ret
fiadds
and
jp
scas
mov
xchg
jns
adc
insb
xor
sub
stos
cmp
arpl
xor
fs
stos
popa
clc
xchg
push
daa
cmovne
mov
cmp
rcr
call
sti
pop
out
movsb
or
mov
push
outsb
mov
adc
jnp
add
or
pop
lret
mov
mov
sarb
leave
add
xchg
cmp
add
mov
roll
dec
sbb
cmc
lock
or
push
test
jl
scas
les
sahf
lods
nop
ljmp
dec
mov
pushf
xor
ret
fsubs
cwtl
call
jl
jo
dec
cmp
shl
dec
fwait
mov
dec
push
sarl
fldt
mov
mov
repnz
dec
push
jmp
xor
pop
fcompl
jb
and
aaa
cwtd
push
and
mov
es
rorb
arpl
jl
cmp
jno
and
push
enter
ljmp
sub
pop
sbb
push
cmp
xchg
cmp
imul
rep
repnz
sub
adc
cmp
adc
sub
xchg
inc
xlat
add
sbb
lcall
push
shll
jmp
xchg
cmp
pop
repnz
scas
lea
sbbb
cmpsb
sbb
dec
push
cmc
pop
sahf
mov
mov
push
cmp
dec
jae
and
out
xchg
mov
jmp
into
xchg
or
es
sbb
lea
or
sbb
pop
dec
fisubrs
in
push
inc
daa
movsl
pop
cmp
popa
dec
mov
mov
mov
push
xlat
sub
test
xor
fs
popf
test
push
les
jae
out
sti
rcrb
push
lods
cld
jno
xchg
push
and
aam
out
mov
fsubr
xchg
mov
pop
fadds
iret
xchg
mov
cmp
mov
xor
inc
pop
shlb
mov
xchg
xor
xor
inc
pslld
ss
pop
cmpsl
clts
push
cli
pop
ja
int3
and
mov
stc
in
stc
adc
ljmp
pop
push
sbbl
and
les
andb
jnp
push
jg
shrl
leave
jecxz
pop
pop
mov
in
sbb
gs
xacquire
mov
push
cmp
lcall
inc
jmp
ja,pn
and
je
sbb
aad
xchg
pop
add
xor
or
mov
in
cmp
jmp
and
sub
scas
mov
ljmp
call
dec
mov
mov
lea
ljmp
clc
xor
int
rclb
mov
and
xor
cs
popf
push
out
cwtl
sub
mov
mov
pop
or
pop
fdiv
xlat
icebp
dec
test
or
dec
push
sti
ds
cmpsb
inc
lret
test
in
sbb
negl
adc
sub
and
lret
xor
int
loope
ret
ljmp
jecxz
jo
fdivrl
mov
adc
add
repz
xor
jle
mov
paddusb
imul
nop
es
cmp
iret
pushf
sbb
insb
adc
dec
add
mov
inc
pop
push
jnp
mov
lods
sbb
sub
cld
in
add
gs
or
xor
jg
je
int
xor
gs
cmp
xchg
jp
cmp
or
cmp
push
xor
repz
in
mov
push
into
cmpsb
sti
xchg
jg
lcall
sbb
xchg
xchg
push
jg
test
jns
jo
scas
pop
mov
inc
movsl
pop
or
es
lock
cltd
mov
jecxz
sbb
fistl
arpl
gs
jnp
mov
xlat
mov
flds
adc
leave
scas
rcll
push
popf
movhps
mov
mov
iret
je
leave
pop
jb
ss
cmp
mov
mov
sub
push
push
or
cmpl
fsubl
xor
push
jg
icebp
add
xor
add
push
cs
jbe
xlat
arpl
hlt
ljmp
dec
into
fsubrs
insb
pmaxsw
pop
mov
jecxz
xchg
and
aad
xchg
adc
mov
in
lock
pop
add
xor
scas
js
leave
jg
in
mov
into
imul
jne
ljmp
leave
sbb
pop
in
sti
enter
mov
iret
rclb
inc
cmp
lods
test
fnstenv
add
dec
pop
cmp
sbb
mov
clc
adc
add
xor
cmp
xchg
inc
and
push
sub
test
cmp
adc
or
pop
push
push
xchg
jmp
pop
aaa
xor
sub
push
sbb
cmp
or
icebp
dec
xor
or
sub
dec
sbb
shrl
lea
sub
arpl
pop
push
aad
pop
in
int3
pop
lcall
sub
jno
sahf
jns
scas
int
inc
ja
cmpsb
jbe
add
dec
pop
sbb
cmp
mov
or
push
xor
cld
ds
or
or
loop
mov
test
aas
mov
pop
xchg
stc
out
cmpsb
mov
fistps
pop
xor
or
or
cmp
addr16
lahf
lea
mov
mov
pop
in
mov
cs
in
movsb
sbbl
cmp
mov
pop
inc
into
dec
testl
jg
call
mov
add
lods
pop
ret
cmp
imul
or
fstpt
mov
jne
sbb
arpl
jp
movsl
clc
dec
jb
or
hlt
scas
xchg
mov
shll
divl
mov
jp
sbb
mov
xor
ljmp
pushf
testl
imul
jbe
ss
add
mov
icebp
push
js
sbb
jbe
jg
jp
addr16
mov
inc
jns
and
mov
mov
es
mov
fstl
aaa
stc
andl
add
inc
stos
mov
paddusw
sbb
xchg
mov
mov
push
push
adc
out
xor
or
incl
mov
je
sbb
mov
mov
stos
xlat
in
xchg
or
idivb
dec
and
mov
mov
inc
enter
sub
test
loop
in
imul
or
jns
test
sub
push
pusha
or
rclb
mov
xchg
xor
lret
lods
push
dec
test
aaa
dec
sub
cli
test
mov
repnz
mov
cmp
mov
sub
sub
jns
mov
xor
mov
push
jecxz
mov
outsb
mov
scas
mov
push
adc
lods
cmp
outsb
test
inc
scas
lret
aas
cli
int3
push
mov
sbb
push
imul
cwtl
inc
jno
xchg
std
ds
fidivs
xchg
and
movsb
mov
mov
je
mov
std
xchg
inc
sbb
test
arpl
mov
leave
adc
add
mov
mov
cli
ret
mov
jbe
xchg
jnp
nop
pop
push
sub
ljmp
aas
sub
inc
fildl
pop
sbb
fsubr
test
jmp
xor
sub
inc
lods
jge
xor
dec
arpl
or
adc
out
dec
fldl
inc
stos
into
mov
inc
in
push
xchg
or
dec
iret
push
call
cmp
ss
sub
push
lret
adc
push
dec
dec
mov
or
xorl
dec
or
sbb
push
xor
mov
frstor
push
movb
jg
cld
hlt
sbb
cli
add
dec
adc
adc
in
shrl
or
jnp
in
or
xchg
stc
push
lods
xor
sar
pop
aaa
and
mov
jns
lods
orl
mov
cmp
lea
int3
add
xchg
nop
adc
pushf
dec
cmp
inc
fdivr
mov
mov
jnp
adc
stos
idiv
daa
dec
insl
sub
mov
repnz
mov
xchg
mov
xchg
lret
inc
push
subb
pop
push
and
movb
add
pop
dec
subl
xor
pop
push
and
pop
xchg
cli
xor
mov
pop
lret
sbb
pop
fwait
test
lds
pop
dec
leave
loopne
hlt
imul
fistpl
ljmp
mov
pop
or
mov
iret
fwait
jb
fwait
xchg
push
call
inc
sahf
push
loopne
push
lods
setnp
mov
stc
add
notb
cld
sbb
sub
jnp
pop
jbe
xor
aad
mov
fwait
or
mov
or
lods
repnz
add
xchg
jno
dec
add
mov
mov
insb
adc
mov
mov
lock
push
xchg
mov
test
sub
mov
pop
xchg
dec
loopne
push
icebp
pop
cwtl
push
pop
dec
inc
dec
and
cltd
or
rcrl
test
xchg
jp
fwait
scas
cmp
dec
xor
jl
dec
or
pop
xor
ficomps
lea
or
in
enter
movsb
iret
popf
cli
js
pushf
mov
scas
notb
push
es
xor
int3
push
cmp
xlat
pusha
adc
std
inc
or
pop
fisubrs
jg
loope
dec
pop
mov
inc
stos
cmpsb
xchg
stc
add
cwtl
daa
notl
xor
jl
sbb
stos
mov
xor
dec
cld
shrl
inc
mov
stos
add
rcrl
sub
lret
or
cmp
out
out
sub
xor
sub
xchg
pop
add
mov
xlat
xchg
in
test
inc
scas
ds
and
jle
lods
es
or
cltd
adc
or
mov
add
cltd
sbb
inc
ljmp
mov
fisttpl
mov
ret
cli
pop
adc
jge
inc
or
testb
popf
xor
lret
push
pushf
shll
cmp
fadds
pop
and
pop
and
jge
loop
inc
sub
cltd
pop
lret
iret
jecxz
jb
or
in
cmp
bound
sub
mov
sbb
inc
cmp
cmpsb
adc
xchg
adc
xchg
mov
mov
cltd
scas
or
nop
aam
testl
sti
or
mov
dec
mov
imul
aaa
xchg
fdivr
push
cmp
mov
jns
pop
adc
mov
adc
push
mov
rorb
fldenv
sub
lods
lret
aas
push
or
das
mov
cmp
jae
testb
add
push
pop
xor
pushf
repnz
push
or
jg
cmp
notl
xchg
arpl
jmp
mov
adcl
push
adc
pop
vpshuflw
sti
data16
mov
imul
and
fs
testb
out
xor
sbb
inc
sub
testb
sahf
jp
call
fdivrl
imul
rclb
ljmp
jmp
out
and
repz
inc
sbb
or
xchg
aaa
push
je
or
jb
popa
jmp
pop
or
lret
mov
dec
shlb
sub
sbb
or
adc
fucomp
sub
cmpsl
daa
lret
dec
dec
sahf
add
icebp
fdivr
mov
mov
leave
push
sbb
and
mov
xor
ror
xor
xchg
inc
cmp
cmc
cmp
into
xor
js
ss
fstps
dec
xchg
or
add
pop
aam
shl
scas
stos
mov
leave
add
or
pop
and
lock
push
fdivl
pop
out
adc
outsl
add
imul
ret
repnz
xchg
dec
fdiv
push
xor
dec
cmpxchg
cmpsl
dec
dec
lock
jns
sub
jmp
les
mov
xchg
jle
pop
sahf
mov
dec
mov
mov
fisubrl
lea
mov
sub
xor
xchg
arpl
bound
inc
arpl
push
cmpsl
dec
aad
mov
add
inc
cmpsl
sahf
jmp
lock
mov
in
pop
sbb
mov
pop
subb
repnz
lds
xchg
enter
mov
and
jecxz
inc
inc
imul
mov
xor
adcb
jbe
in
sbb
jmp
std
inc
das
dec
out
cmp
leave
outsb
push
pop
mov
or
xchg
fwait
mov
in
xchg
mov
pop
pop
out
pop
lcall
stc
int
xchg
push
mov
and
repz
cs
xchg
or
jne
add
and
cli
sbb
loopne
adc
nop
cmc
push
daa
push
movsb
or
addr16
jg
xchg
or
push
fsubrl
inc
adc
fdivs
sbb
push
pop
jg
dec
mov
or
es
mov
mov
scas
xor
sbb
cli
inc
jno
mov
int3
pop
stos
jge
out
cmp
repnz
dec
sub
sar
mov
jg
adc
xor
cmp
mov
repnz
pop
int3
cmp
pop
pop
inc
sbb
repz
scas
mov
call
ss
or
sub
xor
jecxz
adc
sub
cltd
in
dec
ss
out
sbb
idiv
mov
inc
xor
stos
lods
adc
pop
push
or
hlt
xchg
testb
lret
sub
lea
movb
mov
sbb
jecxz
out
idivb
cmpsl
sbb
mov
push
dec
adc
add
push
data16
rorl
imul
sub
je
repnz
imul
mov
add
dec
fiadds
adc
lock
bound
xchg
out
add
aas
inc
xchg
jmp
push
and
pop
pop
testb
lea
push
testb
xor
leave
cli
subb
ds
cli
out
mov
out
mov
xchg
mov
push
dec
mov
push
movl
xchg
dec
or
push
mov
sahf
and
sub
fsubrp
ljmp
inc
xor
fisubrs
in
clc
insb
stos
xchg
jl
pusha
pop
test
cmp
stos
jnp
incb
add
push
xor
xchg
aaa
push
out
xchg
or
mov
test
iret
adc
dec
fs
and
dec
out
das
cmp
push
dec
cld
mov
or
dec
adc
push
out
test
sbb
lahf
hlt
movsb
push
xchg
mov
push
xor
cmpsb
outsl
dec
push
add
dec
pop
inc
dec
dec
sub
std
sahf
or
xchg
mov
jmp
mov
jns
mov
lds
push
ss
cltd
jge
jno
pop
outsb
dec
xchg
pop
lret
push
or
and
adc
sbb
xchg
jmp
adc
cmp
lea
pop
cmp
mov
sub
push
jnp
stos
dec
test
push
dec
std
xchg
xchg
xor
xchg
fpatan
fs
leave
gs
sbb
and
mulb
sub
lods
adc
rcrl
lcall
test
andl
xchg
mov
cmp
out
pop
mov
mov
out
aaa
inc
cmp
cwtl
mov
dec
inc
ret
xchg
jmp
or
pushf
out
lcall
xchg
mov
hlt
lods
lock
xor
adc
mov
sbb
mov
js
sbb
inc
jp
cs
sbb
add
xchg
jp
jp
add
out
repz
dec
push
stos
jg
fwait
pop
hlt
icebp
lahf
jns
adc
outsl
aas
jmp
call
in
sub
xchg
or
movsb
pop
hlt
cs
test
clc
out
fnstcw
jns
mov
movsb
dec
mov
mov
pop
jmp
sarl
adc
dec
test
mov
mov
or
inc
adc
nop
mov
lea
xchg
dec
push
icebp
pop
sbb
adc
mov
cwtl
pop
mov
and
jmp
jl
sbbb
out
push
mov
jge
xchg
sbb
sbb
mov
inc
out
fisubrs
or
mov
adc
fistps
add
push
xor
mov
popa
xchg
dec
dec
jmp
push
jno,pn
cld
add
push
xchg
icebp
mov
pushf
jno
out
push
mov
rolb
jne
pop
cmp
pop
pop
dec
pop
jnp
jp
sub
bnd
push
stos
sub
imul
mov
adc
fcompl
mov
movsb
inc
pushf
mov
pop
in
add
mov
sti
test
pop
out
imul
mov
xor
pop
push
or
call
lods
adc
testb
jmp
daa
pop
out
in
cli
xchg
jp
and
ss
pop
leave
dec
fidivrl
and
xor
iret
pusha
mov
aas
push
imul
loop
ret
arpl
call
cltd
xchg
xchg
lcall
ss
out
adc
jns
adc
adc
mov
cmp
xchg
clc
repz
cs
dec
xchg
adc
mov
fiaddl
push
mov
xor
iret
repnz
cmp
xlat
leave
push
xchg
xlat
fdivl
push
push
push
push
aam
test
aas
shll
jge
jae
dec
xor
pop
in
xor
xchg
mov
orl
lea
inc
mov
idiv
int
jmp
push
or
lret
cmp
adc
outsb
mov
jnp
xor
mov
xchg
repnz
sub
push
sub
imul
xor
lock
mov
out
xor
sbb
or
push
and
idivl
cmp
inc
sub
cs
dec
divl
jne
insl
or
or
int
jle
xchg
push
ss
cltd
push
dec
mov
mov
sbb
mov
push
adc
fwait
cmp
lcall
pop
lock
or
add
jbe
int
mov
xor
mov
test
cmpsl
xor
pop
add
mov
jae
dec
sbb
incl
cld
xlat
pop
xor
mov
xchg
mov
arpl
imul
ljmp
jg
add
aas
testb
lods
mov
pop
sub
cmpb
stos
xchg
loope
pavgb
pop
ss
cmp
adc
fisttps
addl
pop
sbb
cmpb
fs
shll
shll
ret
dec
das
pop
in
mov
cmp
adc
cmp
xchg
dec
fcmove
rorl
cli
sbb
scas
inc
pushf
mov
out
dec
outsb
test
mov
inc
lea
lods
mov
mov
dec
mov
push
mov
mov
arpl
lock
mov
xchg
cmpsb
push
add
push
shrl
icebp
or
xor
cmpsb
rclb
mov
sbb
ds
clc
adc
scas
jecxz
insb
inc
insb
les
dec
popa
adc
lods
pop
mov
ljmp
insb
and
in
inc
daa
inc
sub
and
mov
lods
xor
mov
scas
loopne
fbld
push
xor
and
or
xor
pop
insb
sub
lock
cmp
push
pop
mov
daa
lea
or
popf
in
pop
push
nop
mov
sahf
sub
or
lods
insl
add
cmpsl
push
test
in
dec
out
sbb
xor
xchg
xlat
adc
cmp
cmp
fldenv
pop
sub
stos
sahf
aaa
xor
xchg
jmp
pop
int3
mov
addr16
int3
cmpsl
enter
imulb
sti
pop
push
adc
mov
daa
xchg
mov
dec
pop
out
pop
push
adc
sub
test
mov
add
dec
popa
xchg
clc
jns
sbb
inc
enter
push
cltd
pop
push
xor
push
add
inc
inc
inc
cli
push
arpl
js
ljmp
inc
mov
mov
es
xchg
std
xchg
movsl
cltd
nop
sub
mov
lret
aas
stc
push
sub
das
sbb
jge
stc
adc
fdivl
push
enter
xor
or
jecxz
jge
xor
fcomps
cli
aam
testb
stos
fadd
add
mov
and
inc
inc
mov
int
loope
lock
sbb
push
push
pop
push
jne
sbb
dec
add
and
jg
pop
pop
lret
push
cmpl
jae
scas
bound
or
dec
in
aaa
push
push
into
xchg
sbb
push
subl
push
sahf
adc
popf
int
dec
sbb
push
test
leave
pop
xchg
dec
test
fmuls
or
mov
mov
fcoml
add
icebp
lret
xchg
or
cli
pop
push
and
push
sub
jo
push
push
xchg
ljmp
mov
pop
cld
shll
pop
cli
cmp
push
jbe
clc
xor
inc
xor
gs
cmp
add
cwtl
lock
mov
fildll
repz
adc
idivb
sub
fwait
testl
mov
adc
adc
call
jecxz
je
in
xchg
ret
xor
repz
cli
push
icebp
dec
mov
dec
sub
test
push
outsb
mov
andb
fdivs
push
lods
pop
test
test
xchg
and
dec
pop
xchg
je
mov
into
movsb
cmp
or
jns
sbb
test
adc
ds
xor
cmp
aaa
or
xlat
stos
cmc
xor
mov
repnz
adc
adc
jns
sbb
out
dec
sub
cmpsb
adc
orb
stos
xchg
xchg
push
cmp
dec
or
addr16
inc
insl
xchg
mov
mov
rcl
add
lcall
or
add
roll
jg
cltd
cmp
xchg
repnz
inc
push
jnp
dec
inc
pop
push
push
xorl
dec
add
mov
and
pop
xor
aam
mov
popa
dec
mov
lret
mov
stos
cmp
or
jmp
ret
push
les
mov
test
push
mov
daa
nop
mov
das
mulb
sahf
xor
cmp
rolb
xchg
jle
xlat
pop
rcl
cwtl
hlt
dec
repnz
mov
test
ret
sbb
pop
repnz
and
jns
mov
adc
mov
dec
scas
adc
jne
xor
enter
and
jnp
xor
popf
rcr
out
mov
push
pushf
rcll
mov
add
jge
mov
fldt
js
clc
cmp
mul
add
aam
and
mov
sub
add
jmp
pop
adc
lock
call
fwait
jmp
stc
cli
cwtl
rcrb
leave
sbb
in
push
dec
push
mov
out
mov
imul
xchg
call
pop
or
movsb
incb
push
inc
test
jmp
arpl
rcr
shlb
and
push
or
cltd
or
leave
aaa
mov
in
adc
in
popa
cld
dec
mov
sbb
push
and
fadds
aas
das
dec
insb
ret
int
leave
mov
cmpsb
cld
test
jnp
rolb
mov
out
arpl
scas
dec
cmp
in
xchg
cmpsl
out
pop
je
scas
popa
call
xor
je
jbe
mov
cmp
aas
push
xor
mov
jb
jbe
or
mov
mov
lods
pop
add
bnd
std
add
cmc
xor
add
sub
test
push
daa
push
jmp
or
sbb
imul
jl
cmp
adc
jle
cmp
and
mov
sar
push
testl
in
adc
je
push
xor
dec
dec
das
dec
adc
lock
and
or
insb
and
popa
cli
adc
daa
xor
sbb
lret
gs
es
pop
mov
push
cmpsl
rcr
dec
pop
hlt
stos
add
and
dec
dec
bound
sbb
jecxz
push
jns
imul
push
adc
xor
daa
inc
pop
xchg
pop
bound
js
test
xor
cltd
xor
insb
adc
lcall
aam
jp
add
mov
popa
lret
add
push
xlat
sub
out
push
fdivs
xchg
cwtl
lret
cmpsb
xor
jmp
enter
movsb
cmp
add
popa
cmp
ljmp
xor
add
jb
scas
dec
sbb
inc
inc
add
push
testb
gs
ds
loopne
sbb
ss
mov
dec
inc
pusha
xchg
test
repnz
add
push
imul
pop
pop
pushf
sub
cld
pop
es
sbb
es
shll
and
imul
stc
pop
jo
xlat
xor
push
or
sub
inc
or
xor
cmp
jecxz
mov
jmp
aaa
ror
jmp
pop
pop
popf
outsl
hlt
push
subl
in
add
decb
insl
repz
sbb
out
mov
pop
ss
pop
loopne
jp
xor
xchg
loope
pusha
xchg
repz
jns
xchg
mov
mov
leave
rorb
xor
es
add
adc
repz
fidivl
popa
mov
mov
sub
fistps
lcall
out
add
into
cmp
add
ljmp
sbb
and
pop
cmp
int3
xchg
stos
popf
push
lods
fimull
cmpsb
xchg
mov
data16
push
ljmp
or
add
or
mov
jns
rorb
pop
pop
push
xchg
repz
out
pop
cmp
arpl
jno
inc
inc
addl
aaa
repnz
dec
rcr
rcll
pusha
mov
cld
and
inc
stos
ret
jg
lret
sub
ror
imul
cmp
ljmp
adc
mov
sahf
loop
sbbl
sbb
xchg
loop
or
xor
sarl
cld
cmp
add
sbb
jno
out
xchg
sbb
mov
in
push
insl
arpl
lea
lret
popa
xlat
dec
or
clc
mov
mov
outsb
fists
call
mov
cmp
pop
cmp
xchg
sub
mov
sahf
jnp
add
roll
in
movsb
and
push
cld
adc
testb
loop
mov
int3
sahf
arpl
mov
mov
lea
push
and
fldl
push
lock
mov
add
sbb
arpl
mov
ret
cmp
mov
pop
flds
in
push
ljmp
sbbl
out
in
imulb
scas
pop
xchg
insl
or
call
js
int
adc
xchg
sbb
repnz
cmp
and
inc
movsl
jp
gs
rcrb
mov
das
cld
add
int3
cwtl
lcall
stc
pop
and
rclb
xchg
add
cwtl
dec
das
inc
data16
repz
mov
adc
and
jmp
popa
jecxz
out
sbb
xor
mov
test
roll
paddw
or
sub
pop
mov
cmp
cmp
unpcklps
push
sub
jp
fisubrl
data16
add
int
sub
push
adc
push
or
sbb
cmp
mov
dec
push
add
scas
jnp
popa
shl
frstor
sbb
lock
lods
jno
scas
decl
nop
mov
jmp
sti
pushw
mov
mov
jnp
mov
sbb
jo
repnz
jnp
mov
lock
int3
ja
xchg
test
add
test
and
pop
cmp
es
repnz
call
idivl
pusha
enter
and
inc
jg
sub
cmp
mov
xor
mov
push
cli
dec
mov
out
movsl
movsb
ret
mov
pop
xor
testl
clc
rcrl
dec
mov
orb
adc
xchg
lret
negb
rorl
cli
and
cmp
inc
inc
inc
or
mov
push
xor
cmp
jg
scas
mov
clc
into
sbb
test
movsb
ja
mov
mov
mov
clc
sbb
mov
pop
jp
incb
notb
cmp
es
inc
sbb
test
jb
cltd
sbb
sub
out
push
jmp
mov
add
push
out
mov
movsb
inc
aad
loop
jge
pop
jl
das
iret
jbe
push
repnz
shrb
in
insl
dec
mov
stos
ljmp
mov
cmp
subl
in
in
lret
mov
repnz
ljmp
push
or
pop
add
loope
or
les
and
adc
dec
mov
repnz
xor
test
scas
pop
lret
mov
sbb
sub
into
xchg
and
sbb
sbb
testl
xchg
cmp
mov
int
cmp
inc
xlat
imul
mov
cmp
or
mov
out
pushf
imul
dec
pop
imul
jae
daa
pop
inc
dec
out
pop
mov
sar
negb
push
stos
aaa
addr16
or
repnz
sahf
cmp
test
lahf
jmp
jb
or
cmpsb
mov
fistl
push
cmp
sarl
sbb
call
mov
pusha
sbb
repnz
push
sbb
loope
ss
mov
or
jo
add
dec
jge
or
cli
adc
xchg
fisubrl
jg
fmull
lret
or
insb
cmpsb
add
mov
adc
mov
push
xor
cmp
or
es
mov
and
jmp
ror
pusha
jne
jecxz
jle
decl
cltd
out
les
jbe
xor
push
sti
les
aaa
mov
dec
outsl
mov
cli
lods
mov
sub
cmp
inc
mov
adc
mov
xchg
or
jns
dec
ss
xchg
shl
sbb
adc
mov
xchg
jle
pusha
push
sub
loope
movsb
lret
into
xlat
xchg
mov
sub
adc
cmp
call
sub
cmp
test
mov
jnp
pop
push
adc
popa
ja
pop
cld
das
and
adc
mov
in
jb
jmp
out
in
mov
push
push
notl
xorl
jb
add
pop
push
mov
pushf
int
ret
imulb
sahf
xchg
imul
mov
shlb
sub
push
jnp
test
dec
pop
xor
dec
test
cmp
int
dec
xchg
fisttpl
mov
ret
mov
dec
adc
outsb
fiadds
stos
les
mov
in
lret
cmp
call
jmp
jl
pop
loopne
in
and
xchg
bnd
jle
cli
push
cmp
mov
cmpsb
imull
jae
xchg
fucomip
mov
fadds
cwtl
cli
sahf
insl
sti
out
aas
pop
push
cli
xchg
inc
call
jo
or
pushf
push
sub
xor
sub
adc
testl
jmp
inc
cmp
jp
cltd
pop
adc
xor
adc
lock
insb
cmp
idiv
lret
cmp
jp
lods
mov
dec
outsb
notl
movsl
pusha
stc
bound
scas
je
pop
out
std
ret
add
divb
enter
jge
popl
jno
adc
lock
cs
pop
out
mov
pop
roll
pop
adc
fidivrs
cmpl
mov
inc
sti
sti
adc
and
sbb
sarl
sbb
jmp
sbb
jnp
xchg
cmp
insb
jnp
jg
push
jb
xchg
sbb
jecxz
xor
testl
mov
add
or
adc
aad
mov
add
xchg
sub
nop
or
test
movsb
xor
int3
lock
mov
mov
mov
add
mov
cs
leave
sub
outsb
inc
repnz
pop
out
aad
dec
jecxz
cmpl
arpl
pop
out
jne
push
cmp
xchg
sub
fxch
xlat
dec
lds
cmpsb
aas
or
out
in
das
idivl
xor
dec
imull
or
push
push
scas
adc
ljmp
mov
dec
mov
sbb
notb
sbb
adc
cs
outsb
or
dec
lret
adc
mov
adc
ret
dec
out
insertq
jns
mov
gs
inc
loop
push
dec
mov
dec
cs
stos
jnp
adc
mov
xchg
sub
sbb
gs
adc
mov
cmp
movsb
cmp
jns
push
jp
das
push
cmc
in
and
stc
cmp
push
das
mov
or
inc
sub
stos
sbb
cmp
add
addb
dec
pop
in
das
cmp
mov
adc
push
lcall
aaa
in
pop
cmp
insl
jno
sbb
sysret
mov
mov
repnz
hlt
bound
pop
lret
mov
imul
or
mov
ljmp
mov
ret
ljmp
xchg
jg
or
aam
fwait
aaa
jnp
leave
and
mov
enter
call
fistps
sub
jns
xchg
cmp
in
pop
lds
lcall
mov
aad
pop
xchg
sahf
std
mov
sub
jae
shrb
call
cmp
xchg
jmp
shrb
cmp
inc
mov
out
pop
mov
dec
or
in
jge
enter
inc
sbb
gs
inc
paddw
inc
bnd
pusha
mov
xor
dec
adc
push
clc
sbb
adc
sub
xchg
hlt
add
sbb
sub
popf
icebp
pop
inc
and
push
daa
mov
pop
scas
lea
ret
leave
sbb
cs
jbe
lret
sub
jns,pn
lea
jge
jb
lahf
les
add
push
test
inc
divb
lcall
jnp
push
jo
adc
xor
pusha
into
pop
scas
mov
mov
mov
rorl
or
loop
das
add
rorl
ljmp
mov
and
cmc
mov
ljmp
jg
pop
int
cmpsl
test
mov
adc
addr16
bound
lret
or
fucomip
cmp
pop
mov
fdivrs
sub
cmp
jnp
mov
mov
in
cmp
insl
dec
cwtl
fwait
inc
push
dec
repnz
or
cmp
inc
sub
loope
push
cmpsl
jno
hlt
mov
inc
push
sub
push
adc
arpl
cmpsb
std
adc
add
ljmp
pop
shll
imul
sbb
pop
mov
mov
xor
aad
shl
sbb
sbbl
stos
sbb
or
ja
jl
mov
xchg
adc
out
adc
jb
pop
cli
mov
sub
mov
pop
mov
out
test
fcoml
dec
xor
into
cmp
jp
mov
sub
mov
sbb
xor
shr
dec
jp
push
cmp
enter
in
testl
scas
lret
negl
xchg
ret
xor
push
sub
ljmp
xchg
xchg
inc
and
out
jb
dec
daa
pop
add
jb
or
ret
sub
cmpsl
js
rorb
aad
test
insl
mov
dec
mov
lods
cmp
push
mov
mov
and
stos
ret
pop
lret
pop
lahf
mov
and
push
fnstsw
or
jmp
dec
cmpsb
or
mov
negb
hlt
jg
ss
xchg
or
fisubs
pop
jne
cs
mov
jns
popf
les
sub
lods
pop
or
pop
mov
ss
ljmp
rol
and
sbb
rorb
cli
xchg
imul
cltd
mov
es
setne
inc
pop
incb
xchg
push
cld
jecxz
shll
lcall
push
inc
cmp
shl
push
daa
in
and
push
pop
add
ljmp
jnp
adc
jns
mov
mov
or
ret
mov
aaa
fistpl
jo
xorb
push
scas
cs
cmp
bound
pop
mov
cld
std
mov
jmp
cmpsl
hlt
repnz
pop
adc
lea
out
mov
adcl
mov
outsb
jns
and
mov
and
xchg
je
inc
cmpsb
sbb
insb
aam
sub
rolb
push
pop
xchg
jb
dec
std
in
dec
mov
loop
inc
mov
pop
jne
movsb
adc
test
fcomip
pop
mov
lea
sti
mov
fwait
icebp
lea
jb
and
pop
addl
scas
cmp
xor
jg
jp
jmp
call
popa
int3
fs
js
adcl
cmp
cmp
xchg
cmp
ljmp
test
test
nop
mov
mov
jl
dec
js
scas
adc
dec
jbe
push
neg
inc
mov
dec
adc
repnz
in
in
imul
daa
jae
mov
pop
scas
outsl
les
pop
imul
cmp
aaa
mov
mov
jne
mov
mov
and
lea
lret
out
ficoml
clc
aad
adc
mov
jne
shr
pminub
push
js
fwait
int
mov
mov
add
mov
aas
test
movsb
sbb
stos
movsl
jbe
mov
movsl
and
stos
or
scas
mov
xor
add
idivb
dec
lahf
insb
sti
outsl
mov
sbb
stos
scas
out
mov
repz
push
mov
mov
jno
lock
push
inc
dec
mov
or
jno
rcrb
jo
mov
mov
rorl
xchg
ds
mov
out
or
fsub
shlb
push
or
test
imul
or
les
decb
jge
mov
mov
outsb
sbb
sbb
mov
lods
adc
notl
hlt
ret
push
imul
sub
pusha
pushf
repz
aas
push
test
std
jb
or
stc
pop
sbb
stos
mov
fmull
add
or
pop
mov
insb
and
cwtl
and
fistps
leave
xor
xchg
sbb
mov
repnz
lods
or
leave
push
jecxz
mov
xchg
add
data16
fsubl
dec
arpl
push
cld
lcall
pop
daa
ds
pusha
add
cmpsb
jnp
sub
inc
sub
inc
sbbb
mov
or
dec
pop
into
cmc
outsl
inc
js
sbb
jg
mov
stos
test
and
xchg
lret
in
and
sti
daa
idiv
jns
pusha
xchg
push
out
and
dec
cmp
push
adcb
bnd
scas
mov
mov
out
xor
pop
sahf
mov
push
ficoms
cmp
cmp
leave
repnz
out
push
mov
cltd
jno
and
in
rcrb
cmpsb
aam
es
xchg
int3
pop
mov
pop
fistpll
jp
bound
and
or
popa
dec
mov
jo
pop
rorb
xor
xor
mov
and
push
out
sub
fsubr
dec
rol
sub
ds
cmpsb
pop
scas
pushw
or
push
gs
sti
xor
sarl
adc
jne
push
mov
or
insb
sbb
cmpsb
jge
push
sub
arpl
shr
adc
inc
sub
pop
cltd
bound
and
mov
pusha
inc
out
das
mov
mov
in
xor
outsb
movsb
fsub
out
mov
mov
aam
shll
mov
or
stos
dec
mov
sub
lea
mov
das
and
jns
sub
dec
dec
xlat
lea
cmc
push
mov
out
push
jg
or
mov
push
in
cmpl
sbb
mov
iret
pushf
push
ja
mov
fldenv
inc
fidivrs
xor
out
test
sub
decl
fcmovnbe
inc
out
lods
xor
xchg
pop
fdiv
dec
adc
test
in
mov
mov
sbb
wbinvd
mov
in
popf
arpl
sbb
fildll
dec
fildl
in
lock
inc
jg
and
cmp
fcoml
or
pop
arpl
stos
call
addl
xor
sub
imul
daa
aam
push
xor
pop
inc
das
loopne
or
mov
shr
or
dec
sub
cli
ss
stos
jnp
cmp
sbb
cwtl
add
mov
stc
cmp
test
push
sar
and
push
and
sbb
sub
pop
mov
dec
sbb
cld
mov
xchg
inc
mov
sahf
lea
xchg
inc
dec
xchg
add
daa
rorl
ss
mov
mov
addr16
es
in
testb
in
pop
sbbl
cmp
dec
into
cmpsb
addl
dec
icebp
xchg
or
push
fnstcw
outsb
add
pop
shrb
dec
dec
sbb
in
imul
hlt
xchg
lods
sbb
test
das
imul
dec
add
jns
in
mov
add
adc
aas
or
aad
mov
dec
cltd
jns
jbe
push
or
lods
repnz
adc
in
cli
repnz
lret
dec
or
jg
xchg
push
stos
sub
push
add
xchg
push
cmp
cmp
ret
gs
dec
pop
sbb
inc
dec
call
xchg
inc
pop
xchg
lret
cltd
das
add
push
out
mov
icebp
cmp
pand
dec
push
mov
pop
adc
mov
dec
or
mov
jbe
or
push
shrl
xchg
add
es
sub
and
or
es
or
sub
inc
stos
pop
jg
cld
dec
pop
jecxz
out
inc
hlt
or
jle
mov
or
xchg
cmovg
mulb
mov
iret
leave
cmp
jb
xor
cltd
es
sahf
ret
mov
into
pop
icebp
jo
adc
dec
xchg
cltd
fidivl
test
sbb
mulb
cmp
test
xchg
mov
or
add
idivl
leave
sarl
scas
pop
cmc
out
neg
cs
and
rorb
lret
andb
jnp
push
lret
sbb
sub
ss
xor
enter
xor
sbb
insb
jmp
xchg
push
add
sahf
push
nop
aam
or
pop
insb
ret
sbb
inc
fildl
fsts
jmp
loopne
std
fisubrs
mov
mov
int3
pmullw
call
mov
ss
cwtl
scas
sbbl
jg
adc
cmpsb
je
inc
pop
in
mov
lret
sub
push
dec
stos
lcall
add
cmp
lea
lahf
or
icebp
pop
mov
repnz
xchg
cs
es
xor
jmp
out
dec
ret
cmp
fldt
lret
dec
lret
sub
iret
sbb
clc
jne
jg
push
add
orl
sub
shrl
sbb
je
mov
mov
xadd
into
cmp
pop
jg
and
sbb
lea
pop
dec
js
or
adc
ss
iret
aad
dec
fidivrl
cs
in
or
jg
xlat
aaa
bound
ja
xchg
pop
sub
dec
fistpl
test
scas
test
mov
jp
push
lret
inc
fstpt
lret
decl
dec
sub
sub
jle
imul
mov
xor
in
je
mov
lock
imul
adc
mov
addr16
movsb
jae
and
push
rolb
cmp
mov
cmp
xor
ss
xor
stos
or
sub
jae
subb
cs
inc
push
xor
imul
ds
stc
xlat
mov
sub
push
jecxz
in
inc
mov
cmp
jl
mov
aaa
movsb
xchg
mov
sub
aam
jbe
mov
mov
mov
es
sbb
rorl
iret
push
ss
adc
sahf
sub
cmp
or
lods
mov
out
push
addl
cmp
jb
aam
mov
test
push
dec
call
fisubrs
fs
add
xchg
sub
pop
jns
dec
mov
xor
imul
popa
das
cmp
sbb
cmp
and
data16
fwait
aad
orl
sub
inc
xchg
in
pop
outsl
mov
pushf
xor
or
lea
into
test
jmp
loop
jle
ror
mov
out
cs
lret
test
xor
stos
addl
push
add
cmp
repz
mov
cmp
jae
jmp
gs
mov
daa
lock
xchg
mov
imul
xorl
cs
push
jp
add
push
mov
pop
test
jns
cmpsl
xchg
ljmp
jge
pop
mov
sbb
add
gs
mov
dec
out
push
pop
jp
sub
stos
stc
shll
adc
cwtl
push
arpl
cmp
cmc
inc
mov
pusha
cmp
push
xor
pop
ja
fcmove
mov
jns
movsl
inc
sbb
into
pop
mov
outsb
sub
leave
jmp
cmp
mov
lret
test
adc
xor
popa
pop
pop
shrl
pop
out
pop
in
add
test
push
cmp
mov
std
mov
xor
mov
adc
cmpsb
jecxz
cmp
sub
xchg
f2xm1
outsl
ret
add
into
push
sahf
popa
lock
xchg
sbb
inc
mov
adc
sti
movsb
cmp
iret
xor
cmp
notl
insl
dec
push
mov
int
pop
xor
or
mov
push
cmp
mov
mov
fcmovnb
xor
ret
fimull
or
aas
cmpsl
js
jg
dec
fwait
and
cmp
xchg
imul
push
icebp
lcall
ret
push
mov
adc
out
mov
mov
arpl
inc
ret
xlat
shrl
scas
clc
sbb
adc
xchg
stc
addr16
icebp
in
dec
inc
lock
gs
std
sbb
ret
dec
mov
pop
bound
jae
aaa
lret
insb
jl
cmp
mov
retw
xchg
popa
lcall
or
mov
cmpsl
cmp
xchg
or
call
cmpsl
push
xchg
adc
add
lret
lcall
jo
cmpsb
fisttpl
push
push
cmp
xchg
or
out
mov
jg
sbb
xor
stos
fmul
imul
js
clc
call
mov
push
mov
ds
push
negl
push
shlb
sbb
ret
fisubs
inc
sub
and
popa
das
aas
lret
ret
fs
lcall
mov
pop
inc
xor
jg
sbb
cwtl
mov
out
jmp
mov
cmp
fs
jmp
dec
jge
dec
sub
sbb
pushl
fsubrs
jge
pop
je
push
mov
mov
sub
aam
sar
add
aam
pop
mov
mov
jne
sti
out
ja
add
mov
add
push
push
add
je
fs
enter
jb
fmuls
mov
adc
pop
shl
jne
or
sbb
shll
xor
mov
aam
mov
inc
sbb
jno
lock
enter
sub
cmp
and
lret
dec
mov
shll
cmp
dec
pop
jb
lcall
in
pop
jo
pop
sbb
and
cmp
sarl
jmp
mov
pop
push
cli
jecxz
pushf
ja
mov
aam
lret
rorb
shl
cs
pop
mov
xchg
mov
subl
mov
pop
out
add
inc
jp
imul
div
jmp
outsb
nop
sub
mov
js
aaa
jg
inc
cs
rol
xor
lods
sahf
or
ret
shlb
leave
cltd
popf
mov
push
mov
icebp
mov
imul
or
call
cmpsl
fidivl
sbbb
iret
mov
mov
addr16
push
sbb
inc
add
push
negb
add
movsb
notb
clc
xchg
or
aaa
aaa
dec
daa
push
inc
in
mov
cmp
mov
add
aas
test
or
or
mov
out
cwtl
add
ror
adc
lahf
mov
pop
sbb
lcall
fdivrs
outsl
push
int3
out
xchg
out
mov
mov
cmpsb
out
cwtl
setbe
sub
fs
cmpsl
pop
cwtl
subl
ds
js
sahf
cld
jmp
xchg
dec
pop
mov
into
push
lahf
mov
cmp
in
xor
imul
xchg
test
leave
jb
mov
mov
pop
lea
pop
mov
sub
cbtw
mov
out
hlt
push
or
or
test
aaa
pop
imul
xchg
fldl
ret
cli
mov
push
js
and
shr
cli
aad
aaa
cmp
lea
call
fists
call
mov
push
mov
xor
mov
add
adc
inc
sbb
dec
arpl
js
or
movsb
pop
cmp
pop
jl
movsb
repnz
stos
sbb
and
sbb
xor
xor
cld
mov
xchg
cmpsb
arpl
adc
jge
test
cs
jg
in
mov
movsb
outsb
ja
jp
outsl
push
test
ret
out
pop
iret
mov
inc
inc
jbe
test
push
ss
inc
mov
inc
and
mov
btcl
movsb
cmp
add
subb
jb
sti
rol
arpl
call
leave
aad
rorb
out
fnstcw
pop
xchg
inc
cmp
mov
jmp
pop
cmp
out
cwtl
mov
xchg
add
jo
jp
enter
ret
pop
outsb
cli
xor
pop
ds
bound
imul
xchg
and
popa
loopne
mov
mov
adc
xchg
in
lret
lahf
fbstp
in
add
mov
push
mov
fistpl
xchg
pop
cmp
clc
xchg
cmp
mov
ret
push
sub
inc
jp
decl
adc
sub
ss
xchg
mulb
scas
fcompl
jge
stos
xchg
arpl
mov
incl
mov
fs
aam
xor
pop
add
xchg
adc
cmp
pusha
lcall
mov
cmp
out
aaa
mov
repnz
cs
cmpsb
xor
xchg
arpl
jns
jb,pt
push
dec
cmp
pop
rclb
test
jae
add
pop
cmp
ss
jns
add
pop
pop
xchg
std
cmp
jnp
or
aas
movsl
movsb
sbb
mov
xor
repnz
mov
ljmp
mov
stos
or
jae
push
cltd
fs
pop
shlb
mov
andl
leave
popf
pop
push
jbe
xchg
test
les
push
js
jae
ret
dec
xchg
cmp
cwtl
pusha
cmp
mov
movsb
lods
jmp
mov
or
push
mov
sub
mov
out
stos
or
outsl
inc
cmp
dec
movsb
aas
jge
inc
jnp
fimuls
daa
jp
jmp
rcrl
fs
out
mov
daa
fists
push
popa
and
lods
xlat
dec
lcall
sbb
sbb
imul
addr16
inc
gs
daa
rol
jo
mov
lret
xor
mov
test
inc
mov
xchg
lock
popa
cs
xor
lcall
cmp
test
xchg
das
fists
mov
ljmp
xchg
or
xchg
mov
out
add
inc
sbb
jle
jno
xorl
jl
adc
cmp
fisubl
sbb
xor
popa
movsl
mov
push
mov
lcall
push
in
mull
mov
cs
in
push
shl
mov
mov
and
lea
aad
mov
and
pop
loop
out
mov
in
cmpsl
jnp
shl
cmp
inc
xor
mov
or
mov
lea
push
xchg
int
cld
pop
push
jne
lods
sub
inc
mov
sti
aam
cli
dec
inc
aam
fistpl
insl
movsl
xchg
push
imul
test
dec
sbb
push
lea
xor
cwtl
arpl
ljmp
shl
mov
mov
dec
xchg
ja
cmp
push
in
es
push
push
pop
mov
jmp
and
ss
lahf
sub
xchg
and
cmc
dec
or
daa
or
sub
aad
lds
adc
mov
cmp
mov
dec
jns
addr16
add
cs
xchg
jbe
stos
adc
dec
jmp
mov
push
mov
cmp
cmc
add
sbb
fwait
sbb
jmp
pop
inc
addr16
cmp
xchg
call
or
add
lock
imul
mov
cmp
arpl
pop
and
mull
cmp
push
test
ljmp
dec
fs
arpl
test
adc
or
cli
push
push
jmp
sbb
cmp
out
mov
add
or
into
inc
cli
cwtl
fidivl
ljmp
push
and
or
mov
mov
sub
mov
ljmp
das
lcall
push
sbb
jp
cmp
fstpt
and
sub
out
xchg
repnz
das
mov
scas
inc
adcl
lret
push
daa
sbb
shl
and
xor
xor
das
xchg
clc
xchg
jnp
lret
ja
jl
call
out
adc
or
sbb
aas
lods
imul
inc
sub
jmp
idivb
inc
enter
jle
rcll
mov
jne
xchg
movsl
mov
push
add
mov
sub
shlb
aaa
mov
jp
addr16
cmp
cmpsb
pcmpgtb
xchg
test
xchg
xlat
add
ds
out
repz
dec
popa
les
xlat
pop
xchg
enter
push
out
jns
lods
mov
fldenv
sub
lea
add
lret
sbb
xlat
jne
call
or
jbe
push
clc
or
sbb
push
pop
add
mov
imulb
arpl
jns
or
adc
jnp
sub
mov
cmp
xor
popa
cmp
scas
ds
shlb
lods
dec
and
stos
xchg
dec
mov
add
std
out
dec
lcall
adc
in
insb
mov
aas
cmp
xor
sbb
inc
shl
or
sub
ss
xchg
jbe
dec
ret
adc
adc
sahf
lret
mov
stos
jb
jb
addr16
ficoml
icebp
mov
sub
mov
popf
insl
dec
xchg
shl
aam
cmp
mov
fistl
xchg
stos
push
and
jle
shrb
add
mov
xchg
or
inc
adcb
test
inc
rcll
sub
pushf
inc
movb
or
xchg
ds
mov
stos
push
jno
sbb
adc
push
shrl
and
stos
fidivs
pop
or
add
cmp
jb
outsb
lret
or
dec
stos
dec
dec
cmpsl
ja
ljmp
fimull
or
sub
loop
adc
lret
inc
sub
sbb
aas
xchg
sbb
mov
enter
hlt
mov
ss
popf
mov
add
inc
adc
adc
jbe
inc
ficoml
cvtps2pi
sub
jg
daa
cmp
sub
sbb
sub
lods
xchg
sti
out
fsubl
loopne
xchg
push
outsb
pusha
jno
hlt
pop
stos
repnz
dec
cmp
add
sbb
pop
fistpl
and
and
lahf
mov
ljmp
rcll
test
imul
adc
aaa
dec
add
xchg
testb
mulb
mov
mov
cmp
jecxz
mov
lea
cli
push
psadbw
loop
jne
aas
mov
push
out
jl
scas
pop
test
cld
add
lods
loope
xchg
dec
nop
test
sub
sar
jp
sbb
sbb
shll
out
pop
shlb
push
dec
lea
add
in
fs
cmp
lods
mov
xchg
xchg
mov
pop
pop
mov
inc
dec
icebp
pop
out
jbe
xchg
inc
stos
out
or
cld
repz
lcall
ljmp
or
mov
icebp
cmp
add
call
push
repnz
push
jl
adc
ret
ds
jecxz
or
xchg
inc
das
pop
xor
pop
dec
jnp
das
mov
mov
imul
dec
mull
inc
rcrl
loopne
pop
sbb
test
mov
outsb
push
jne
in
push
add
pop
push
pop
cmp
js
pop
int3
xchg
xchg
fnsave
inc
sbb
cli
and
xchg
int
mov
sub
notl
mov
cmp
mov
mov
ss
aaa
jmp
jmp
sbb
fldt
jmp
inc
divl
popa
mov
aad
mov
out
cmp
xor
push
jbe
roll
jmp
and
test
xor
nop
sbb
mov
add
mov
shlb
mov
nop
mov
xor
les
out
mov
mov
aas
sub
xlat
jecxz
cmp
sub
inc
adc
jno
scas
push
pop
or
or
dec
jg
testb
clc
ss
into
ja
mov
mov
fidivrl
testb
inc
xchg
dec
inc
and
mov
clc
or
js
or
lret
mov
out
test
je
out
pop
mulb
xlat
adc
gs
in
xor
sahf
jge
into
sti
in
inc
imull
mov
jle,pn
leave
pop
sbbl
into
xchg
or
xchg
push
outsb
loope
repz
push
or
pop
test
popa
subl
or
popa
dec
aaa
mov
int
ljmp
cli
pop
pop
inc
jmp
xor
adc
pop
sti
ficompl
lret
xchg
call
inc
scas
fisttps
movhps
out
xchg
sahf
jle
add
test
mov
jge
fsubrs
mov
and
xor
ljmp
sarb
jne
out
mov
mov
call
aas
push
mov
cltd
xchg
pop
dec
push
scas
mov
repnz
mov
mov
cwtl
jp
es
sub
xlat
movsb
dec
xor
cltd
sti
and
sti
aas
sbb
addr16
popa
int
mov
xchg
xchg
xor
jbe
cs
jne
test
cmp
sbb
test
movsb
orl
and
jae
inc
ljmp
movsl
xor
adc
cmp
out
sub
popa
test
cli
mov
out
jecxz
inc
mov
mov
ljmp
xchg
ljmp
push
and
jecxz
add
jp
xchg
imul
lahf
jns
xor
jecxz
cmpsb
in
das
and
into
lock
int
inc
into
mov
adc
mov
stos
inc
push
lret
stos
out
aad
xlat
cmpl
ljmp
adcl
add
mov
adc
dec
leave
xor
ret
in
lret
addr16
gs
pop
mov
fisubl
sbb
jnp
xor
shlb
repnz
or
ss
dec
xchg
int3
fbstp
in
or
repnz
cmpsl
adc
out
jge
xlat
jg
mov
jg
imul
sahf
mov
pop
lahf
ljmp
int3
jmp
into
stos
lea
add
push
aam
pushl
inc
push
ss
dec
jnp
xchg
nop
cmp
and
imul
jne
psubsw
repz
xchg
mov
push
bnd
pop
mov
test
imul
push
xchg
out
dec
mov
or
mov
mov
outsl
cli
jnp
xchg
mov
mov
popa
xor
dec
mov
sub
arpl
test
cli
test
jnp
mov
pop
rcrb
in
orb
fistl
call
cmp
mov
clc
femms
in
push
add
scas
icebp
lret
aad
xor
out
dec
int
out
jle
fwait
add
loope
sar
jbe
push
pop
fistl
inc
sub
xlat
add
cmp
xchg
or
adc
stos
sbb
inc
mov
mov
ljmp
pop
je
mov
jg
je
sbb
add
lods
inc
mov
jg
mov
jnp
mov
adc
jmp
je
xlat
dec
pusha
jns
mov
push
loop
xchg
push
push
inc
add
sahf
jecxz
adc
clc
inc
mov
std
lods
xor
pop
ja
mov
mov
ds
jecxz
push
add
and
pop
add
mov
dec
mov
mov
xor
mov
xor
pop
and
out
pop
insl
jl
sub
jmp
jns
adc
xchg
xor
std
cmp
mov
inc
daa
push
cmpsl
fisttpll
add
mov
popl
ja
push
cltd
adc
xchg
xchg
test
cmp
inc
pop
cmpsb
jmp
test
and
ss
leave
push
fidivrs
shr
mov
inc
adc
mov
push
cmpsb
pop
pop
and
es
add
cltd
scas
loopne
pop
cmp
daa
rcrl
pop
adcb
adc
mov
inc
xchg
out
pop
rclb
ds
outsb
mov
jg
pop
sub
test
cli
mov
sahf
add
out
pop
or
enter
ljmp
stos
das
push
repnz
sub
adc
call
add
mov
ret
int
sub
or
dec
roll
enter
adc
lret
xchg
lcall
loopne
pop
mov
push
cmp
push
stos
push
cmpsb
xchg
ss
ret
adc
dec
xchg
push
jne
or
jl
daa
lods
arpl
xlat
out
pop
mov
mov
cmp
pop
mov
and
addr16
push
arpl
xchg
adc
sti
bound
cld
xor
or
imull
scas
xor
pop
stos
mov
in
std
fmull
faddl
cmpsb
jg
lods
leave
movsl
add
stos
add
jnp
and
or
ret
fisubl
sub
cs
jno
jbe
sub
sub
pop
fucomp
neg
sbb
and
mov
bnd
icebp
mov
fstpl
fstpl
lods
xchg
pop
or
cld
out
or
sbb
subl
add
mov
dec
mov
mov
inc
ret
xlat
sbb
sbb
lret
jp
gs
push
lret
cs
lret
mov
lock
mov
xchg
int
mov
fxch
cmpsl
adc
aas
cmc
cmp
or
jbe
jmp
sub
mov
gs
pop
out
or
fists
out
test
cli
fidivrs
leave
sub
pop
pop
gs
hlt
mov
pop
xorb
jge
mov
push
loope
into
xchg
push
pop
inc
mov
push
pop
aaa
insb
lcall
adc
shrb
cmp
mov
icebp
mov
jp
dec
xor
lea
fiaddl
pop
jp
sahf
inc
mov
jg
testl
cmpsb
mov
lods
pusha
and
fstpl
cmp
pop
in
pop
sub
addr16
pop
in
pop
sub
adcb
add
orl
daa
fistl
mov
xchg
idiv
iret
jg
test
xchg
sbbl
fdivs
ja
cmp
aad
aam
and
adc
ret
ds
aas
jne
sbb
pop
repz
pop
push
pop
jg
pop
dec
mov
pop
sbb
mov
inc
addr16
push
sbb
nop
push
lcall
xchg
clc
mov
inc
fisubrl
jmp
dec
jo
xor
and
jns
outsb
movsl
cmp
pop
jg
cmpsb
push
daa
push
jp
cld
aad
cwtl
fwait
movb
out
pop
aam
ret
mov
add
aas
les
and
jg
inc
lds
jge
mov
scas
mov
gs
jp
or
es
jb,pt
or
loopne
out
out
data16
sub
testl
into
push
xchg
lds
pop
push
negl
inc
pop
ret
pop
xchg
cmc
mov
ss
xchg
mov
mov
pop
dec
push
xchg
adc
in
fidivl
add
push
js
pushf
je
mov
xchg
cmp
push
sbb
pop
cs
aaa
ja
jge
mov
mov
int
dec
out
xor
jbe
xchg
addr16
pop
xchg
sub
push
dec
in
mov
in
flds
sti
adc
or
sub
inc
jb
jecxz
and
jecxz
adc
jl
in
xor
xchg
daa
dec
mov
adc
sub
insl
in
and
movsb
pop
and
mulb
mov
mov
cmpl
push
enter
jne
mov
or
shrb
mov
push
mov
add
adc
sub
pop
push
in
adc
sbb
or
or
mov
mov
aad
xchg
std
pop
jbe
movsb
mov
adc
fistl
push
js
push
and
scas
out
lods
sbb
test
sbb
jae
mov
inc
xchg
enter
xchg
cmpl
aad
cwtl
testl
mov
shrl
ljmp
out
jmp
pop
ror
hlt
adc
add
mov
push
sahf
cli
xor
xor
cmp
xor
sti
sbb
add
rcll
xchg
mov
or
movsb
xor
fisubrl
lret
dec
xor
sub
xchg
sbb
loop
xor
push
ljmp
bound
xor
scas
fisubrl
aam
push
call
je
cmp
mov
cmp
loope
and
sub
xchg
jno
loop
in
call
rcll
dec
or
testb
push
pop
sti
sub
arpl
or
gs
lods
addr16
mov
mov
xor
sarl
pop
xor
mov
push
adc
sub
jecxz
inc
adc
dec
call
fildll
inc
mov
pop
imul
xchg
xchg
add
adc
dec
out
fimull
mov
or
fcompl
or
pop
ret
shll
mov
jp
mov
cmpsb
push
mov
sti
mov
das
stc
inc
mov
cmp
in
push
jp
xor
sbb
mov
das
jnp
pop
cmp
sahf
mov
repz
jne
or
sub
add
sub
inc
dec
add
call
imul
jno
add
ret
clc
movb
daa
mov
cltd
arpl
adc
pop
sahf
push
cmp
lea
test
sub
faddl
lods
adc
imul
cmpsb
in
cmp
lock
mov
addr16
fsubrl
data16
shr
aam
in
insb
scas
dec
ret
inc
out
pop
pop
cli
cmp
lret
dec
pushf
ficomps
xchg
ret
ret
xor
jmp
das
cvttps2pi
popf
xor
sub
dec
mov
jns
cmp
or
or
leave
idiv
or
sub
lret
stos
daa
add
cmp
adc
add
cld
or
stos
shll
mov
popa
adc
into
in
pushf
jecxz
push
movsl
push
sahf
insb
fisttpll
dec
cs
push
pop
add
leave
adc
dec
mov
cmp
hlt
stos
jg
adc
jns
xchg
adc
mov
push
pop
mov
insb
repnz
out
add
jmp
in
cmp
addr16
dec
mov
mov
cmpsb
test
int
push
or
repz
jecxz
ret
mov
lods
add
test
cmpl
out
dec
fisttpl
aaa
cmp
push
fdivs
outsb
repnz
popa
mov
mov
push
int
cmp
push
mov
mov
add
dec
hlt
adc
inc
iret
mov
dec
mov
fdivs
fucomip
fisttpll
loope
rcl
jmp
jne
jmp
enter
pop
lret
push
inc
inc
in
mov
popf
jmp
inc
push
sub
test
or
jp
test
sub
fs
mov
mov
test
lods
mov
jp
push
in
jnp
cli
xor
les
lods
sub
xchg
add
jp
sub
or
jnp
mov
das
cmp
das
or
adc
dec
push
sbb
adc
fwait
jno
std
out
or
push
sbb
or
push
and
lret
imul
jb
out
mov
inc
das
and
lods
js
in
add
sbb
sub
jnp
add
inc
mov
and
jno
xor
stc
inc
stos
jl
xor
xor
mov
mov
or
stc
cmp
xor
addl
shll
out
jg
jnp
and
pop
add
stos
sahf
dec
jnp
cmp
or
xchg
mov
push
mov
cwtl
notb
mov
push
add
aam
das
cli
xchg
es
les
xchg
rcrb
mov
fsubp
int3
pop
hlt
cmpb
xchg
jg
add
add
inc
repnz
mov
imul
dec
adcl
sbb
cmc
jb
adc
mov
adc
mov
xchg
stos
into
xchg
rolb
mov
push
inc
adc
pusha
arpl
or
repz
lea
rclb
xchg
std
sbb
repnz
dec
jmp
add
mov
test
inc
enter
popa
xor
pop
cmp
sahf
cmp
movsl
jne
and
xor
loopne
cmpsb
adc
addr16
push
sbb
aam
popa
cmp
mov
and
loop
cli
xor
ljmp
cmp
xor
add
jb
jnp
and
xchg
loopne
adc
test
ficoml
mov
pop
enter
dec
out
fdivrl
ret
mov
push
stos
dec
sahf
jecxz
mov
push
std
sbb
aas
xor
cli
cmp
pop
in
pop
xchg
mov
dec
fists
jp
lods
decb
idiv
pop
push
cmp
imul
xor
fldt
push
add
dec
ret
sahf
push
sbb
adc
fstps
icebp
jecxz
pop
arpl
mov
dec
mov
lods
mov
ja
xchg
add
xchg
or
dec
jl
or
xchg
jno
sub
or
xchg
test
or
mov
rcll
cmc
popa
cmp
xor
pop
lock
add
jp
xor
inc
or
mov
cmpsl
dec
xchg
test
outsb
sbb
mov
add
cs
push
adc
cmp
std
jp
mov
sbb
mov
loope
pop
stc
cwtl
push
xchg
mov
dec
es
push
test
mov
adc
testb
adc
lock
test
repz
xor
mov
jnp
scas
jnp
jo
jb
divb
cmp
xchg
push
repnz
mov
sbb
ljmp
push
lods
mov
in
adcl
mov
aam
adc
sbb
mov
loope
inc
lret
cmp
mov
out
cltd
mov
dec
jbe
cmp
pop
jl
jmp
add
stos
jmp
cmpsb
outsl
mov
cmpsb
mov
jne
or
stos
adc
insl
mov
scas
loope
or
mov
aas
pop
movsb
xchg
imul
mov
addl
jae
fsts
ds
sbb
sub
xor
or
push
jp
mov
leave
sarl
jmp
sbb
sti
jmp
loop
sub
add
ror
inc
jg
adc
sub
ss
outsl
push
int3
lcall
xchg
bound
repz
jmp
stos
sarb
dec
push
std
xlat
pop
int3
leave
push
cld
and
roll
movzbl
xchg
ds
pop
push
dec
rcrb
push
call
test
mov
add
lret
icebp
dec
fs
jbe
stc
clc
or
xchg
jbe
lock
mov
sbb
xor
into
call
sbb
mov
adc
dec
or
mov
jg
rorb
cmp
movsb
mov
xchg
adc
fwait
mov
jmp
fmuls
loopne
sub
xchg
jecxz
pop
ljmp
push
jo
fisubrl
jg
mov
lcall
je
cli
orl
ret
xlat
add
mov
or
dec
lret
xchg
imul
dec
sbb
add
mov
pop
in
loope
or
adc
jmp
call
loopne
enter
stos
add
add
lret
popf
int3
sbb
push
shrb
mov
call
sbb
xor
jnp
dec
fidivl
cmpsb
jnp,pn
adc
xchg
push
testl
dec
dec
adc
fsub
mov
pop
mov
out
imul
xor
out
mov
xchg
cltd
jnp
push
insl
out
xchg
in
sahf
xor
imul
lret
cmp
in
out
popa
mov
pop
test
mov
mulb
lods
out
frstor
xchg
rcrl
adc
lock
cmp
mov
sub
popf
int3
mov
lods
in
or
mov
loope
adc
jo
push
clc
sub
in
aas
lahf
or
repz
cld
mov
or
aas
sti
pop
or
cmp
inc
dec
mov
push
mov
or
aad
mov
dec
leave
repnz
repnz
sbb
mov
cmp
loope
and
mov
push
adc
adc
outsb
out
cmp
dec
ss
fidivs
repnz
sbb
addl
andb
mov
dec
add
outsb
lods
jp
sbb
arpl
jg
pop
add
add
test
fildl
adc
xchg
lret
rcrb
xchg
pop
pop
mov
scas
iret
out
push
pop
sahf
das
mov
out
adc
push
stc
mov
or
add
cs
jmp
pop
or
out
jp
ss
adc
in
scas
cmp
jl
adc
push
add
sbb
lcall
out
or
divb
outsb
dec
jmp
mov
int3
jmp
push
mov
lock
stos
mov
mov
lret
mov
sti
or
push
mov
ds
pop
es
xchg
test
sub
lods
enter
push
sbbl
dec
pop
xchg
fsubl
mov
fldenv
pop
ljmp
sub
and
aad
sahf
subb
mov
imul
fwait
add
sub
sub
inc
xchg
and
mov
ret
test
and
xlat
out
or
shl
popa
fcoms
out
imul
mov
jg
cld
jbe
xchg
jns
shlb
push
jle
lods
inc
dec
push
push
adc
jp
repnz
or
lods
xchg
and
cmp
das
out
addr16
push
mov
push
dec
rcr
ret
divl
fdiv
adc
jecxz
lret
cmp
push
xchg
mov
shl
pop
mov
inc
push
rorb
adc
jae
sahf
xor
xchg
push
mov
andl
mov
or
cld
jne
lds
adc
lcall
lock
cwtl
jg
mov
mov
push
pop
push
sbb
sub
sbb
repnz
mov
jmp
test
push
leave
std
lods
mov
cli
lods
cmpb
sbbb
jb
in
mov
pop
jnp
mov
aaa
ret
xlat
push
dec
leave
add
sbb
pop
push
in
adc
test
xchg
add
push
push
popa
daa
sbb
xchg
push
jo
jecxz
div
push
mov
andb
jae
das
jne
pop
push
cs
lds
xor
xchg
sub
cld
mov
shll
xchg
adc
dec
out
fwait
es
xor
xor
xchg
nop
inc
mov
add
mov
into
mov
insl
out
les
sub
mov
and
sbb
dec
imul
js
popaw
mov
mov
gs
pop
jl
mov
adc
and
or
jne
in
popa
sbb
or
jnp
daa
icebp
out
push
add
and
pushl
pop
mov
popa
decl
jbe
test
nop
add
dec
insb
ja
mov
mov
fsqrt
mov
rsqrtps
fcmovnbe
mov
fcmovnb
imul
sbb
sbb
fcmovnu
dec
dec
daa
gs
or
mov
jo
adc
adc
or
or
sbb
mov
in
ljmp
mov
sar
test
jns
rorl
inc
inc
sahf
iret
inc
cld
jns
sar
mov
imul
mov
mov
test
icebp
lret
xor
jmp
sub
jp
leave
mov
inc
jge
repz
push
sbb
inc
stos
gs
inc
negb
inc
dec
aaa
lock
into
dec
sbb
sub
mov
or
movsb
pop
fucom
mov
cmp
enter
int
mov
push
push
adc
sub
pop
or
into
add
xor
or
cltd
lahf
xchg
ss
aad
and
jnp
xor
stos
xchg
mov
push
or
ljmp
repnz
mov
mov
add
mov
subl
inc
out
jns
xchg
xchg
push
push
fisttpl
adc
mov
jno
enter
int
cmc
das
push
mov
cmp
in
adc
insl
test
mov
fnstsw
stos
jno
dec
xlat
test
and
inc
pop
or
cmc
test
xchg
add
sbb
inc
dec
xchg
adc
push
pop
adc
xchg
rolb
out
sbb
cmpsl
cmp
cmp
mov
push
adc
sar
inc
sub
fwait
pop
fmuls
sub
sbb
adc
jnp
bound
adc
xor
mov
inc
repz
iret
push
lret
in
push
adc
pusha
shrb
scas
mov
iret
dec
pavgw
mov
movb
outsl
pop
icebp
movsb
out
rcll
andl
data16
movsb
lret
lock
cli
loope
mov
sbb
dec
inc
faddl
dec
popa
mov
jg
outsl
scas
dec
xchg
or
cmp
xchg
inc
insb
or
stc
pusha
xchg
jg
add
cs
out
add
cwtl
rdmsr
arpl
jnp
or
hlt
shrl
es
wrmsr
loopne
das
in
or
sub
xor
aas
lock
aaa
push
inc
enter
sbb
jno
dec
repnz
iret
test
aas
add
add
pop
dec
mov
pop
stc
add
xlat
popa
inc
and
fldl
bound
ss
or
mov
mov
arpl
adc
xchg
sbbb
pop
mov
ljmp
test
cmpsb
loop
aam
scas
push
adc
mov
add
ss
cs
ss
loopne
ret
pop
cmp
cmp
xor
stc
and
or
lret
sbb
shll
fldcw
push
and
dec
neg
repnz
mov
test
lahf
adcl
cld
pop
jne,pn
xlat
cmpsl
jno
stos
mov
clc
in
push
faddl
or
ss
xchg
mov
mov
rolb
lods
adc
ret
bswap
cld
loopne
out
iret
push
aas
or
jo
mov
xor
sub
lret
push
or
ljmp
dec
or
xor
sub
or
jmp
pop
inc
or
cli
push
ss
pop
jne
pop
lock
xor
push
adc
adc
mov
mull
or
das
sahf
push
adc
mov
or
mov
push
out
add
mov
sbb
testb
jecxz
mov
cmpsb
push
dec
orl
pop
sbb
cmpl
xchg
fisubrl
push
xchg
divb
push
insb
dec
ljmp
aam
fsubr
add
in
xchg
xchg
testb
push
add
mov
xorl
lret
fmull
cld
fstpt
push
jb
aaa
dec
popa
and
stos
gs
xchg
pop
scas
lcall
sbb
into
dec
out
jle
fs
fnsave
sub
pop
stc
hlt
mov
cli
pop
sarb
mov
mov
xchg
pop
add
add
popf
ljmp
jns
sti
and
stos
cmpsb
lock
dec
lcall
xchg
jecxz
cmp
sti
xor
mov
mov
xor
mov
ja
or
sbb
repz
xor
repnz
es
jmp
or
pop
sbb
ljmp
cmp
add
mov
adc
jecxz
iret
jle
mov
push
xor
mov
add
clc
enter
mov
sti
shll
rolb
in
rorl
mov
arpl
add
ljmp
stos
insb
cs
jns
or
cmpb
jle
mov
mov
cli
dec
and
pop
rep
cmp
mov
arpl
gs
ljmp
add
cli
es
jo
push
out
xor
jnp,pn
imul
pop
lret
sbb
test
dec
sub
repnz
decl
xchg
pop
mov
dec
adc
xchg
jne
mov
xchg
ret
jmp
pop
popf
mov
pop
push
inc
mov
mov
or
or
jb
cmp
nop
inc
sub
xor
sbb
mov
test
inc
dec
cmp
movsb
adc
pop
or
mov
xchg
outsl
sub
cwtl
lahf
dec
bound
xlat
imul
in
mov
repz
and
push
xor
pop
and
pop
dec
insl
lea
mov
jns
out
stc
inc
cmp
jmp
movsb
jg
aad
ds
jecxz
inc
data16
jmp
aad
scas
sub
pop
dec
fsubrp
dec
lock
push
data16
sub
aad
mov
sbb
sbb
push
rclb
add
gs
je
ficomps
or
mov
jnp
and
jns
int
fwait
push
xchg
lods
and
xchg
fldenv
dec
mov
push
mov
inc
push
sub
jp
sub
inc
aaa
fdivrl
fisttps
fmuls
arpl
adc
mov
cli
inc
sub
imul
push
bound
stos
or
pop
and
idiv
mov
adc
jne
mov
xor
push
cli
inc
push
xor
or
gs
imul
hlt
pop
js
sub
pop
test
or
mov
add
push
jmp
jecxz
xor
stos
ffreep
jno
cmp
jg
xchg
xchg
sarb
test
sbb
or
stos
sbb
adc
cltd
mov
addb
add
cmp
or
inc
push
cltd
push
jo
xchg
fs
inc
add
loopne
int
add
cs
ss
in
or
pushf
add
dec
lret
pusha
mov
inc
push
aaa
xor
mov
sbb
daa
mov
das
dec
xchg
jmp
aas
and
inc
and
mov
lret
hlt
imul
xchg
inc
clc
cltd
dec
addr16
push
mov
repnz
pop
and
adc
cmpsb
or
ds
pop
out
jno
arpl
std
or
shlb
adc
inc
push
dec
xchg
in
cld
xor
sbb
or
cmp
jae
jnp
add
cltd
cltd
xor
das
or
out
outsb
jnp
add
jb
and
adc
popf
cmp
push
or
mov
scas
adc
jo
ret
add
cmp
mov
pop
dec
xor
adc
lret
lds
sbb
sahf
stc
jge
xchg
out
cmp
mov
cmp
call
mov
ljmp
dec
cmp
cmp
mov
out
pop
and
leave
adc
stos
pop
mov
lret
jno
les
fists
lods
pop
mov
xor
adc
out
adc
jle
jnp
ficoms
test
xchg
stc
mov
into
sbb
adcl
ret
sub
imul
pop
xor
jo
arpl
or
xor
adc
aam
sbbl
mov
mov
dec
fcmove
mov
push
test
dec
or
dec
sub
dec
mov
xchg
arpl
loopne
pop
jmp
adc
repnz
stos
sub
hlt
leave
adc
test
jecxz
ljmp
xchg
sbb
outsb
xchg
jo
cli
fs
add
cmp
bswap
fwait
lock
mov
or
pusha
out
adc
ljmp
pusha
jno
nop
xchg
inc
fstl
sbb
repnz
aaa
pop
out
or
add
adc
rcl
or
mov
jmp
pop
and
outsb
stos
incb
icebp
mov
fwait
repz
test
push
pop
mov
xchg
ret
movsb
lock
cmp
add
add
or
pop
dec
ret
es
leave
mov
xor
fstpt
aad
inc
mov
xchg
arpl
or
cmp
cmp
sub
xor
mov
mov
testb
and
add
jecxz
dec
lret
jo
aaa
xchg
push
ret
xchg
push
shll
pop
lahf
jae
mov
sub
cltd
dec
mov
jbe
icebp
mov
bound
sbb
not
sbb
pop
leave
mov
add
sbb
loopne
movsl
lds
fwait
lock
cmp
sbb
es
sub
call
dec
add
adc
jg,pt
ds
out
jnp
sub
aaa
push
int
inc
xchg
sbb
ljmp
xchg
shll
sbb
cmp
pusha
fdiv
cmp
pop
or
out
pop
or
xor
arpl
daa
ljmp
rclb
sub
sub
ja
sahf
imul
into
sarl
pop
mov
xor
inc
inc
decb
push
out
notl
xor
jecxz
jmp
mov
dec
mov
sub
cli
pop
popa
mov
clc
jl
sub
push
mov
scas
mov
jmp
push
and
sbb
cwtl
rol
arpl
das
aas
adc
mov
dec
cmp
pop
pop
mov
xchg
mov
hlt
dec
ljmp
jnp
dec
inc
and
xor
or
rcrl
cmp
sub
jmp
lahf
and
mov
insl
out
xor
jg
repz
cmpsb
hlt
in
test
in
xchg
movb
mov
xchg
sbb
add
enter
and
dec
dec
cld
pop
nop
sbb
cmp
insl
xchg
mov
idivb
push
jp
xchg
xor
mov
jmp
xor
jecxz
lret
outsb
insl
cld
inc
rorb
lea
jae
or
mov
lret
fisubs
out
test
mov
cmp
iret
pop
cmpsb
imul
sbbb
lret
lods
or
arpl
cmp
imul
sub
mov
sti
and
add
shlb
or
and
cmp
scas
mov
shrb
rcrl
fsub
cmpsb
cmpsb
aas
out
pop
int
jle
xchg
inc
pop
xorl
inc
xor
xor
imul
add
sarb
sbb
bound
cli
out
divl
pslld
or
test
dec
js
dec
cli
cs
and
pop
ficoms
rcl
or
jb
lret
xor
imul
lret
add
mov
cmp
inc
adc
or
push
jmp
cmp
push
es
add
in
insb
jp
dec
or
shll
call
adc
inc
stc
sahf
in
add
icebp
or
outsl
or
cltd
out
lea
ror
xor
or
add
inc
push
sbb
inc
testb
popa
jno
pop
cltd
andb
jecxz
or
sbb
stc
jge
movb
pusha
mov
fsts
out
addb
aas
sti
jbe
fwait
clc
xor
xor
ja
into
movsb
clc
sub
sbb
fldenv
subl
dec
mov
cmp
or
add
xchg
jmp
dec
pop
cmpsb
sbb
adc
mov
jle
daa
fcomip
mov
push
arpl
popa
mov
into
in
jle
xchg
int3
mov
mov
pop
in
iret
cmpsb
sub
push
jno
push
xor
in
jl
fildl
push
xchg
imul
xchg
cmpsb
leave
pop
aam
in
ret
loop
xchg
call
push
bound
dec
mov
and
int3
rcrl
lea
jg
ret
jno
push
mov
fistpll
out
push
push
sub
les
jb
or
pop
dec
inc
mov
or
jge
push
cmp
cmp
xor
dec
pop
not
or
popa
ds
mov
out
cmp
push
mov
and
test
pop
lret
xchg
mov
cs
pop
hlt
fsts
lret
scas
mov
mov
aas
mov
pop
xchg
xor
test
dec
mov
arpl
adc
pop
jns
push
push
rep
xor
cmp
aad
sbb
pop
inc
rorb
jg
in
or
inc
cli
mov
lret
or
jnp
add
xor
jecxz
jo
dec
xchg
lret
aaa
xlat
call
sub
sbb
jge
aaa
xchg
xchg
pop
rorb
ss
jb
cs
mov
popa
loopne
mov
xchg
push
or
add
or
dec
adc
imul
inc
or
mov
repz
cld
in
dec
mov
int3
mov
pop
aad
std
lahf
xchg
dec
pop
bnd
xchg
das
jge
pop
xchg
jmp
test
inc
or
xor
pop
or
icebp
add
add
jbe
push
mov
adc
inc
enter
test
inc
jecxz
loope
pop
outsb
clc
out
or
inc
cli
mov
pop
mov
fsts
rcrl
jmp
and
pop
dec
push
add
nop
jecxz
divl
in
inc
rcrl
mov
rcr
icebp
add
sbb
pop
jnp
inc
jo
fwait
sub
arpl
add
jge
cmp
and
push
sahf
sub
inc
cli
daa
out
jbe
sub
nop
jb
sub
movsb
cmp
ss
add
or
aaa
push
sub
push
das
add
xchg
aad
stc
fcompl
mov
pop
inc
sarl
jl
pop
mov
sbb
ficompl
inc
decb
rorl
mov
nop
cmp
push
lds
add
xchg
pop
or
jae
popf
mov
mov
inc
or
stc
lcall
movsl
in
cmc
push
sbb
cmc
loop
punpcklbw
in
addr16
xchg
xor
cs
test
xchg
movsl
nop
jg
sahf
enter
adc
mov
arpl
sub
dec
xchg
sbb
fidivs
loop
icebp
pop
mov
sub
cmp
xchg
mov
loope
iret
pop
repnz
pop
adc
push
sbb
rcrl
pop
cmp
mov
jge
pop
pushf
or
test
xchg
les
rcrb
into
pop
xchg
mov
test
pushf
iret
shlb
clc
mov
mov
mov
cmp
sahf
rcrl
idivl
lcall
in
and
xchg
mov
push
xchg
pop
cld
addr16
imul
adc
and
adc
cmp
es
sub
cltd
sub
mov
jo
xchg
fistps
jo
mov
add
fdivrl
stos
fistpl
jne
lret
cli
jge
or
sbb
inc
adc
mov
jl
jg
cmp
nop
adc
push
or
jle
std
inc
addr16
xor
pop
rcll
xchg
shrb
aad
out
mov
pop
or
xchg
jno
sub
pop
lret
icebp
adc
jmp
sub
adc
mov
push
cmc
adc
call
outsb
imul
pop
xor
or
lret
or
arpl
movsl
pop
cli
mov
shr
ss
xchg
pushf
or
adc
inc
test
add
adc
jecxz
pop
adc
cmp
mov
inc
add
inc
sub
or
jecxz
das
xchg
push
mov
adc
add
sub
scas
repnz
out
push
jo
addr16
cli
aad
sub
mov
or
pop
xchg
inc
lods
sbb
jge
push
loope
scas
push
jle
packuswb
add
cld
sbb
sbb
add
idivl
and
cltd
sbb
outsl
fstpt
xchg
xor
jbe
testl
xchg
pop
mov
mov
inc
or
punpckhwd
fistl
jle
push
dec
pop
popa
movsb
inc
jbe
mov
ss
sbb
fwait
mov
fdivl
lods
pop
mov
mov
sbb
rcrl
stos
repnz
lret
cli
repz
mov
imul
sbb
sahf
lea
pop
fiaddl
inc
or
out
sbb
hlt
or
daa
mov
push
cmp
and
xor
fwait
dec
aaa
stc
and
dec
out
xor
iret
mov
jb
leave
push
inc
jnp
cmpsb
cmp
and
gs
cld
sti
loop
out
add
mov
shlb
inc
jp
sbb
push
les
mov
daa
push
in
punpcklwd
rorb
jg
andb
das
adc
xchg
push
sbb
dec
sbb
js
cmp
xor
xchg
lds
pushf
push
mov
xchg
ds
loop
cltd
pop
xchg
mov
add
and
or
xor
lods
inc
adc
push
mov
mov
sbb
stos
pop
inc
mov
xor
jle
pop
add
cs
ficomps
aaa
movsb
mov
mov
sbb
sbb
jp
xchg
inc
push
mov
add
out
cmp
cmovne
or
push
jmp
jg
ss
in
and
ljmp
out
push
iret
dec
adc
mov
decb
pop
cli
or
scas
cmp
mov
lret
cmc
ss
or
or
cwtl
ret
push
mov
out
gs
adc
dec
fimull
cmpsb
mov
mov
in
cmpl
pop
mov
jnp
inc
jg
arpl
push
xor
mov
sbb
ljmp
mov
push
xchg
les
and
xchg
ds
es
cmp
lods
mov
fmull
andl
ret
jno
lods
cld
xchg
imul
pop
mov
xor
mov
pusha
lea
mov
mov
jns
in
test
rcr
xor
addl
jns
jecxz
add
push
cmp
lret
mov
into
mov
mov
or
adc
cli
out
adc
scas
mov
fidivrs
push
jmp
jecxz
loope
jge
mov
data16
outsl
xchg
popf
dec
inc
cmc
pusha
jo
shlb
aaa
lcall
inc
out
mov
jg
divl
mov
xchg
cli
pop
out
pop
xor
stos
aas
push
pusha
divb
sahf
cwtl
cmpsl
sbb
cmpsl
lods
pop
pushf
pop
popa
psubw
jmp
or
and
nopl
test
lock
xchg
clc
in
sub
pop
sbb
push
sarb
inc
movsb
jno
cmp
aas
cmp
jecxz
jg
jno
xlat
lea
cwtl
nop
dec
stos
add
push
push
pop
shr
stos
fdivrl
push
shll
or
push
or
cmpl
lea
jb
pop
ss
scas
push
xchg
inc
mov
push
cli
sbb
dec
push
cmp
pop
pop
inc
add
jge
and
jnp
scas
ss
mov
adc
pop
inc
call
sbb
inc
stc
es
out
ja,pn
fbstp
mov
insb
inc
pop
ljmp
push
sub
jnp,pn
mov
or
adc
cmp
in
test
xchg
repz
adc
out
jo
xor
dec
popa
mov
sti
inc
aaa
jns
or
xor
mov
imul
jns
cltd
xor
scas
mov
push
bound
mov
stc
leave
repnz
es
pusha
insb
stos
movsl
xchg
sbb
pop
sti
pop
push
and
cmp
add
add
addl
jl
mov
jg
lret
cmp
ja
sti
push
sub
cmp
cli
jp
stos
dec
lea
mov
xchg
jmp
data16
sbb
cmp
push
push
lods
xorl
sbb
fwait
repz
pop
sbb
mov
aaa
sbb
sub
push
adc
xchg
stos
fs
iret
dec
push
xchg
or
xchg
icebp
loope
xchg
jmp
cmpsl
enter
lcall
aaa
jle
mov
lea
js
mov
sahf
add
pop
cld
insl
popf
add
xchg
mov
movaps
mov
cs
std
mov
dec
gs
sar
outsb
call
push
call
and
xor
or
and
lret
les
bound
into
iret
jnp
adc
adc
inc
pop
xchg
jne
add
shlb
idivb
mov
mov
or
mov
ljmp
push
imul
cld
xchg
jmp
int3
cmc
insl
lret
cs
or
dec
mov
pushf
insl
pushf
fsts
push
mov
cs
xorb
cli
mov
inc
sub
or
lret
push
scas
fsubr
inc
cs
fistps
fs
push
inc
enter
mov
sub
imul
xor
out
iret
pop
test
pop
cs
sub
pop
and
lock
push
gs
xor
nop
mov
pop
xlat
inc
add
dec
loopne
inc
pop
call
ss
es
sahf
cld
inc
xchg
cmp
adc
in
jmp
cmp
fisubrl
pop
or
ljmp
popf
mov
xchg
or
ss
aas
and
icebp
cmp
sahf
fs
jmp
sbb
cmpsl
jge
adc
jl
and
fdiv
jnp
mov
into
jecxz
repnz
andl
xchg
pop
or
enter
mov
pop
cld
add
out
cwtl
test
xchg
movsl
mov
scas
lods
xor
stos
mov
add
jb
std
orl
dec
in
pop
pushf
lock
push
inc
and
lods
ret
mov
push
or
insl
cmpsl
jns
ds
jecxz
fidivrl
mov
movsb
or
cltd
jmp
cli
xor
pop
add
pop
lock
stc
cwtl
add
cli
add
mov
inc
pop
gs
mov
mov
jo
movsb
scas
sti
mov
inc
lcall
sarb
sbb
ret
in
lds
lcall
xchg
sbb
test
adc
fisttpll
push
das
lea
scas
dec
adc
outsl
cmp
xor
or
ret
mov
jmp
test
cmpsb
push
fsubl
das
dec
jnp
push
out
mov
push
pop
fiadds
pop
call
ljmp
out
xor
cmp
hlt
cli
xor
test
daa
sahf
mov
or
cmc
rep
or
mov
pop
pop
out
bound
pop
sbb
cs
sub
cmpsb
adc
and
add
enter
movsb
int
xor
test
dec
adc
sbb
and
jmp
dec
ss
cmp
jb
xchg
std
neg
cmp
iret
jg
jle
sub
lret
das
addr16
lret
mov
pop
jmp
pop
jmp
out
fs
xchg
inc
rcr
cs
repnz
adc
xchg
or
rolb
out
out
push
xchg
test
sub
test
outsl
outsl
jle
inc
xchg
mov
and
lret
sub
pop
jge
movsb
push
es
xchg
in
ret
jne
push
mov
shll
je
pusha
sbb
outsb
data16
xchg
or
xchg
inc
out
pop
stos
push
je
aad
xor
push
pop
cmp
push
popf
int
aaa
popa
push
jne
je
mov
adc
sti
lcall
mov
add
repz
es
xorl
xchg
addl
and
ss
adc
pop
call
xor
and
arpl
xor
gs
sub
inc
aaa
out
inc
mov
mov
mov
inc
test
push
or
in
sahf
xchg
sub
rcl
psubd
dec
or
scas
push
add
sub
out
icebp
and
jg
sahf
xchg
push
pop
les
sbb
cmp
mov
out
call
shlb
or
xor
lea
inc
sbb
outsb
xor
sbb
arpl
out
pushf
xchg
icebp
sahf
fcompl
add
sub
jae
xchg
es
jmp
pop
outsl
lea
add
mov
btr
jo
ds
and
cld
cmp
xrelease
aaa
popa
sahf
or
inc
push
xor
mov
aas
or
clc
outsl
aas
adc
in
sbb
mov
inc
cmp
inc
or
xor
mov
adc
in
sub
dec
sbb
and
or
enter
push
xor
stos
adcl
push
es
add
fdivrp
xchg
test
int3
filds
and
pusha
out
dec
mov
popa
fisubrs
mov
xchg
pop
scas
mov
jne
out
gs
in
lahf
ss
aaa
data16
rcll
shlb
sbb
shlb
pop
in
adc
inc
jle
jae
sub
adc
and
mov
call
das
gs
sub
sahf
call
dec
leave
inc
mov
icebp
sub
jge
lret
mov
adc
cld
push
repnz
xor
repz
mov
arpl
loop
dec
add
js
cmp
dec
fwait
bound
sbb
xchg
movsl
mov
fists
jg
sub
push
arpl
jecxz
pushf
mov
push
test
lret
stos
or
sbb
enter
int3
cmpsl
xchg
imul
movsb
mov
cmp
push
push
sub
test
pop
loop
cld
xchg
clc
push
or
mov
jle
out
mov
jecxz
popa
in
mov
xor
xor
lea
mov
icebp
xor
push
add
cmpsb
test
xor
inc
ret
dec
jecxz
or
push
cs
or
lods
and
loop
add
test
aaa
mov
repz
sbb
xchg
inc
add
lock
ss
jl
pop
insl
pop
mov
adc
ret
movsb
rcr
push
pop
pop
and
ret
pusha
mov
out
add
jno
xchg
jl
push
into
jp
sahf
lea
or
arpl
jbe
or
and
cmp
inc
jp
push
ss
xor
jnp
lea
test
adc
mov
rolb
jo
adcl
adc
insb
adc
push
jo
xlat
mov
cs
or
xchg
and
adc
push
call
mov
dec
mov
inc
xor
or
and
dec
ljmp
arpl
shll
pushf
scas
cmc
sub
and
pandn
inc
call
fcmovnb
out
xchg
sub
mov
inc
or
push
js
sbb
popa
out
repnz
popa
int3
inc
xchg
pusha
mov
orb
xchg
aad
sbb
ljmp
je
andl
inc
ja
pop
xor
int3
ds
push
sub
push
inc
inc
push
sub
jg
dec
jmp
aam
push
mov
push
daa
in
cld
dec
mov
scas
add
mov
mov
pop
xchg
fxch
xchg
push
mov
in
dec
test
bnd
lods
add
or
cwtl
rol
sub
repz
test
popa
xchg
sub
ss
pop
push
loopne
bound
call
data16
pminub
mov
sub
add
add
sub
xchg
ret
addb
stc
test
stc
test
lcall
add
jmp
mov
in
ljmp
jg
popf
push
xlat
clc
mull
mov
and
and
pop
add
in
test
fldenv
dec
jmp
cmpsb
sbb
xor
lret
sub
cli
push
and
or
movl
out
mov
xor
cmp
leave
pop
movsl
push
push
daa
andl
mov
mov
test
add
xchg
sbb
mov
sbb
xchg
int3
test
fs
in
and
jb
cld
daa
jecxz
mov
out
stc
pushf
fwait
pop
repz
push
and
dec
xlat
in
daa
scas
xchg
fs
xlat
jg
insb
insb
scas
sub
mov
and
xchg
aas
xorb
xorb
fildl
mov
mov
in
dec
pop
out
insb
mov
xchg
or
xchg
shrl
and
jbe
or
mov
add
lea
xor
and
xchg
add
sahf
stos
and
aas
bound
sub
sub
repz
cmp
sub
push
das
add
sub
sub
push
outsl
pop
xchg
or
sbb
cli
ret
push
mov
lret
pop
addr16
pop
cltd
sbb
jb
sti
add
ljmp
hlt
cwtl
leave
scas
orl
add
push
dec
add
aad
inc
mov
jmp
cmpsl
bound
ja
and
pop
push
fisubrl
sbb
cmp
pusha
cwtl
add
ss
stos
iret
jae
or
push
or
in
arpl
mov
into
out
mov
imulb
repz
inc
inc
fiaddl
mov
in
mov
test
cmpsb
or
cmpsl
pop
or
mov
popf
dec
mov
ficompl
movsl
insb
scas
adc
cmp
cli
lret
mov
lea
repnz
inc
into
sbb
mov
mov
push
xor
mov
out
xchg
inc
jae
das
or
pop
jp
add
out
lea
and
pop
xor
movsb
sub
push
mov
pop
push
mov
inc
pop
sub
push
inc
aas
fsubrs
jnp
int
lahf
cmpsl
call
inc
mov
or
loope
andb
mov
es
fwait
push
sti
sub
subb
sub
in
sbb
add
xor
add
mov
shll
subb
lods
or
or
in
insl
xor
pop
or
in
sbb
dec
jnp
dec
repz
fs
lods
mov
arpl
jno
lret
jg
arpl
xor
push
add
pop
insl
mov
and
negl
dec
aam
pop
ret
or
bound
lods
ds
sub
sbb
jl
xchg
gs
into
push
push
add
jmp
mov
inc
inc
rcrl
mov
xchg
movsl
test
dec
and
test
xchg
pop
das
insb
shll
inc
mov
xchg
xchg
lret
push
sahf
icebp
jae
pop
xor
xchg
push
sub
ret
jb
shlb
xchg
ljmp
imul
sub
in
insb
xchg
inc
and
adc
or
add
out
lret
jmp
push
sbb
lret
jg
xor
scas
cmp
or
gs
test
inc
inc
stos
xchg
addr16
sti
es
push
pop
dec
lods
pusha
xor
add
out
mov
jg
pop
cmp
test
mov
pop
les
into
jg
add
adc
stos
add
push
imulb
mov
xor
inc
xchg
lea
cmp
div
pop
popa
sub
mov
divl
stos
cltd
arpl
jae
test
xchg
mov
or
iret
movsb
arpl
jnp
dec
arpl
xlat
lods
lahf
xchg
or
push
add
repz
xchg
push
jmp
mov
xchg
dec
icebp
dec
xchg
adc
push
aam
jae,pn
sub
pop
std
xchg
add
enter
mov
xor
jg
sbb
inc
add
ret
repnz
sub
jnp
xchg
imul
xchg
mov
or
roll
enterw
fnstcw
jecxz
cmpl
hlt
or
jecxz
aas
rcrl
push
jmp
sub
shl
ficomps
push
stc
aam
pop
jecxz
add
cmp
mov
or
mov
xor
mov
add
jnp
test
leave
sub
sbb
or
cmp
pushf
cmp
rcr
mov
inc
es
mov
shrl
insl
enter
pusha
cs
sub
ljmp
add
pop
adc
mov
cmp
mov
andl
ss
es
repz
ds
jns
or
jecxz
out
cmp
test
jnp
out
movsb
out
lea
outsl
mov
lret
cmp
repnz
add
lds
inc
call
push
arpl
inc
leave
mov
add
mov
cs
scas
push
pop
dec
jg
fmuls
ret
dec
sti
sarl
cmpsl
cmc
push
add
test
push
call
mov
lcall
stos
inc
gs
xchg
lret
inc
js
gs
mov
pop
cmp
lcall
add
push
ret
cmp
inc
xchg
sahf
aam
cmp
popa
cmp
dec
mov
sbb
jno
sbb
popf
xchg
test
mov
int3
mov
push
cli
mov
pop
pop
cwtl
mov
add
or
xchg
iret
xchg
in
frstor
dec
mov
sahf
shll
lods
lock
xchg
add
sbb
movsb
lcall
fst
or
sbb
mov
push
rorb
add
sbb
popl
fsubs
cmp
cmp
dec
lret
lcall
ss
js
jns
mov
insl
stc
mov
lock
daa
sbb
jns
sarl
inc
xor
cmp
outsl
in
cwtl
pop
mov
pop
addr16
dec
xor
or
xchg
push
add
out
push
dec
push
std
arpl
dec
add
push
lock
loop
push
mov
insl
stos
xchg
pop
or
leave
les
ret
cmp
or
stos
imul
mov
mov
lock
or
sub
icebp
cwtl
xchg
insb
jns
addl
std
or
std
mov
popf
lret
xor
pop
sub
push
pop
std
popa
sbb
cmp
mov
pop
scas
ret
outsb
ds
stos
popf
popf
mov
mov
dec
ret
das
shll
inc
loope
cmp
adc
cs
sbb
sahf
inc
imul
xor
sub
mov
and
sub
lret
or
pop
movsl
enter
pop
lret
in
dec
jbe
test
add
lcall
out
mov
lret
mov
push
dec
cmp
out
in
subb
std
mov
xchg
or
push
test
das
lods
inc
mov
lret
xchg
testb
cmp
mov
add
lret
sub
sbb
addr16
fnsave
aas
pop
mov
dec
add
xor
ss
xor
inc
jns
test
sbb
popa
xor
or
add
pavgw
cld
and
cmp
shll
adc
or
xchg
mov
jns
divb
pop
lret
lcall
outsl
fcoms
jmp
faddl
mov
cwtl
pop
inc
aaa
cltd
jecxz
adcl
notl
mov
add
sub
cltd
jnp
mov
sub
pop
in
int
push
sub
repz
mov
pop
inc
push
repz
pop
fucomip
xor
xchg
sub
dec
mov
cmp
cltd
xor
cltd
or
nop
mov
xchg
stc
movsl
cltd
jns
xchg
cmp
test
adc
jge
test
dec
jbe
movsb
mov
dec
ret
cmp
aad
sub
adc
sub
lret
in
enter
jb
jp
cmp
lret
sbb
or
cmp
pop
dec
push
add
inc
pop
xchg
or
mov
into
push
roll
movsl
jge
jle
xchg
pop
push
jbe
mov
or
xchg
xlat
pop
cmc
mov
mov
adc
and
push
or
addl
dec
inc
cmpsb
add
jmp
pop
repz
and
jno
inc
popa
and
ss
or
mov
inc
stos
rol
ss
mov
aaa
sbb
cmc
cli
hlt
sbb
out
nop
rcr
cs
stos
or
or
jg
ds
in
mov
insb
dec
xor
cmp
cmp
repnz
mov
test
in
adc
push
inc
jl
or
jb
ficompl
call
jg
stos
rolb
push
jne
push
or
lcall
jne
int3
test
out
and
xchg
sbb
cli
cmp
xchg
pusha
lret
ds
test
push
add
xchg
mov
ud0
xchg
iret
out
lldt
adc
in
pop
push
jnp
cmp
pop
adc
cltd
js
jg
jmp
mov
or
dec
adc
pop
xchg
lcall
mov
jg
imul
jg
jnp
repz
jmp
stos
scas
ss
sbb
scas
ret
flds
inc
or
sbb
inc
lods
std
push
mov
jne
mov
sahf
fnsave
loop
test
test
sbb
adc
movsb
or
repnz
dec
loopne
sarl
cltd
mov
test
sbb
sbb
adc
inc
and
jg
orb
pop
push
icebp
jbe
movsb
dec
mov
push
stos
mov
push
push
cmp
inc
test
out
lods
ds
jle
or
cmp
into
push
sub
push
sbb
mov
in
stos
add
out
xchg
dec
sub
imul
icebp
cmp
inc
nop
or
arpl
and
xor
cmp
push
add
and
ret
cli
adc
dec
dec
adc
pop
mov
int3
scas
pop
test
outsl
test
addr16
pop
movsb
add
ja
fwait
std
cltd
add
mov
nop
incb
movsb
push
jmp
mov
adc
mov
xor
cmp
xchg
jnp
mov
fisttpl
and
test
cmp
pushf
in
stos
sbb
adc
xor
sbb
lods
hlt
xor
mov
ss
aaa
or
ja
sub
sbb
cmp
das
test
pop
inc
adc
dec
mov
rol
aaa
icebp
dec
pop
cmp
cmpsl
push
or
inc
outsl
push
test
jecxz
test
push
cld
lods
mov
xchg
shrb
cmp
inc
jnp
lods
xor
repnz
cmp
loope
fiadds
or
call
call
daa
pop
lods
std
sbb
xor
mov
ljmp
loop
hlt
inc
inc
push
fdivr
push
add
pop
xlat
xchg
push
push
or
or
dec
jg
sbb
mov
and
add
hlt
leave
ljmp
out
cli
adc
mov
test
adc
and
adc
jns
notl
or
pop
shll
lahf
mov
pop
add
mov
sbb
jo
inc
movb
cmp
sub
pop
andb
add
in
pop
or
sbb
jmp
shll
mov
sub
jg
xchg
push
mov
decl
pop
mov
or
jg
sbb
sahf
sub
cmp
shr
dec
fisttpll
fildll
mov
xchg
pusha
inc
data16
sbb
popa
ret
aam
add
mov
jne
add
std
jg
fs
xor
cmp
cmp
add
cld
inc
cmp
dec
mov
subl
rcr
jge
decb
add
jbe
int
dec
jmp
lds
or
add
xchg
hlt
incl
call
fs
sbb
push
or
scas
pop
push
jno
pop
in
mov
lods
ljmp
int3
in
push
pop
xchg
cld
dec
adc
jmp
adc
in
adc
xchg
adc
add
lods
sbb
aas
cli
movsb
jo
or
or
inc
adc
push
mulb
inc
lea
cmp
or
push
or
add
in
cmp
lret
movsl
or
adc
inc
fistpl
mov
cmp
and
xchg
jno
sbb
xchg
scas
mov
fists
dec
mov
sbb
and
mov
push
daa
mov
inc
push
cmc
pop
outsb
loope
inc
jns
dec
int
pop
loopne
dec
xor
sahf
imul
add
hlt
scas
adc
add
adc
cwtl
fxch
mov
xor
xchg
ds
or
fisttps
pop
push
ljmp
out
sbb
lock
jmp
and
xchg
and
dec
push
sysret
mov
jns
addr16
sti
imul
arpl
sahf
fstps
adc
cld
sbb
ja
imul
adc
pop
leave
push
or
xchg
mov
arpl
dec
sbbl
out
or
lea
int
jo
inc
jbe
xchg
lret
push
aaa
sarl
add
inc
jno
jmp
pop
push
std
or
lea
out
inc
cmc
pop
filds
dec
in
and
mov
scas
and
lea
mov
aas
out
cmpb
gs
lds
mov
mov
imul
lods
lret
fs
jmp
out
in
pop
nopl
add
jg
dec
mov
testl
push
stc
movq
mov
arpl
add
sarb
pop
push
fisttps
sbb
es
xlat
pop
mov
and
lahf
xor
arpl
adc
clc
movsl
xor
in
dec
adc
push
mov
rcrl
mov
lea
push
test
testb
clc
repz
dec
out
inc
pop
rcll
pop
in
push
xchg
repnz
mov
fcmovnb
lahf
add
mov
xor
push
mov
adc
sbb
inc
mov
ficompl
adc
mov
or
dec
fnsave
jmp
add
mov
pop
lea
dec
and
fsubrs
aaa
xchg
dec
push
pop
into
cmc
jb
mov
iret
mov
push
cmp
iret
adc
add
adc
xor
sbb
ljmp
cs
mov
cmp
jbe
adc
mov
xor
mov
mov
pusha
repz
test
sbb
ss
xchg
or
mov
jb
movl
andl
mov
pop
and
mov
pop
adc
je
xor
add
adc
sahf
xchg
test
into
mov
stos
fstps
add
rcrl
ja
in
xor
test
clc
jbe
pop
mov
xchg
sysret
fsubs
xchg
stos
imul
scas
adc
orb
add
repz
pop
sbb
add
inc
xchg
mov
in
or
fcmovu
or
or
fimull
and
aam
jno
cmc
js
sbb
pusha
idiv
xchg
add
dec
fsubs
jge
sub
push
xchg
subl
insl
sti
xor
hlt
enter
xor
pusha
in
outsl
adc
mov
cli
lds
push
divl
cmp
mov
add
push
mov
xor
jbe
sub
lcall
fcmovne
add
stc
fs
jge
rcrl
mov
fstpl
stc
mov
outsl
xchg
rorb
lock
cmp
ljmp
cmp
int3
call
sub
or
pop
insb
cmpsl
adc
outsb
mov
cmp
and
mov
pop
cli
cs
in
jg
add
sbb
scas
cwtl
xchg
imulb
xchg
adc
mov
xchg
and
pusha
std
pop
jge
xchg
xor
mov
cld
popa
adc
pop
sub
out
fisttpll
insl
and
jnp
repz
out
test
pop
add
add
popa
cmovae
sbb
adc
daa
and
imul
xor
dec
mov
sbbl
jbe
jnp
repnz
jg
loop
adc
rorb
cmpsl
rol
arpl
testl
fdivs
insb
cmp
or
sub
fisubrs
xchg
or
ret
fs
lods
or
pop
lret
repz
xor
inc
jo
lret
sbbl
mov
push
ljmp
sub
add
jb
imul
or
add
push
ss
data16
xchg
es
add
call
clc
mov
cmp
ret
inc
movsb
ljmp
pop
push
pop
cmp
dec
mov
or
pop
sbb
cmp
mov
pop
or
push
out
out
cmpsb
aad
pop
cmp
cmpsl
aas
out
jl
and
xor
jge
dec
test
or
jg
pop
loope
stc
xor
xor
pop
adc
push
cli
jae
in
inc
xor
mov
clc
jnp
push
inc
cmp
int
popa
xchg
stc
or
iret
cmpsw
jp
xchg
mov
cli
jo
sub
stos
lcall
adc
enter
pop
sti
push
cmp
pusha
xchg
scas
pop
pop
fldenv
das
xchg
and
or
mov
arpl
sti
jnp
in
inc
fnstenv
icebp
call
pop
jle
outsl
push
out
sub
lods
jno
dec
xchg
push
sub
out
adc
out
addr16
mov
scas
inc
aad
jmp
add
push
in
jmp
cmpl
inc
sub
lret
jg
repz
ss
sub
mov
addr16
mov
xchg
add
insb
stc
or
adc
fstl
adc
jae
sub
outsb
adc
aas
sbb
insb
adc
xchg
dec
loop
cwtl
repnz
cli
sub
lods
loop
or
in
into
pop
or
jmp
rclb
mul
mov
sbb
sarl
and
cli
adc
repnz
mov
push
push
in
cmpb
push
inc
xchg
jo
and
push
repnz
jo
xor
inc
mov
inc
mov
cmp
mov
and
dec
push
jnp
pop
mov
mov
pushf
cmp
jmp
xor
push
lcall
and
push
push
sbbb
addb
sbb
mov
push
std
or
clc
das
or
jge
inc
cmc
fs
addr16
cltd
ss
outsb
push
mov
mov
push
adc
dec
mov
sub
mov
shlb
scas
cli
ljmp
clc
insb
adc
lcall
dec
bound
mov
sub
adc
jecxz
sar
mov
push
jnp,pn
movsb
mov
lcall
sbb
adc
dec
fdivl
scas
sbb
dec
mov
mov
cld
mov
cltd
cmc
jp
inc
psubb
ret
rolb
mov
sahf
imul
sub
std
sub
push
dec
fisubs
fimuls
cmpsl
cmpsb
fcomps
out
in
mov
jb
mov
stos
dec
cld
mov
adc
jle
popa
int3
cs
inc
arpl
inc
jge
ljmp
shl
jecxz
rolb
repz
mov
or
jle
movsb
fadd
sbbl
cwtl
pop
fsub
mov
daa
sbb
test
pop
fld
bound
adc
jbe
mov
cmp
movb
pop
adc
dec
xchg
je
iret
out
repnz
dec
jne
xlat
movsl
jle
sbb
inc
nop
mov
scas
mov
push
inc
sbb
lcall
imul
mov
insl
xchg
movsb
mov
xchg
push
jb
or
aad
data16
jmp
test
jecxz
stc
sub
fsubrp
xor
mov
popa
pop
jnp
notb
jmp
arpl
xchg
sti
push
sarl
push
xchg
into
dec
or
cmp
mov
sub
push
xchg
into
ret
xor
xor
jbe
loope
or
xchg
mov
pop
sub
cmp
add
add
or
ds
sub
test
dec
test
stos
push
xor
es
inc
jmp
xchg
test
pop
lret
mov
loope
cmp
or
in
inc
aaa
push
fistpll
mov
xchg
loope
push
fdivrs
mov
cs
sbb
cs
insl
xor
add
mov
rorl
sbb
or
inc
bound
in
daa
movsb
fnstsw
in
sahf
cmp
scas
mov
jp
push
loope
or
sub
inc
jle
inc
mov
xchg
pop
dec
mov
lret
sbb
jae
pop
loop
sti
or
adc
push
xor
pop
ret
pusha
cmc
adc
ss
sub
test
jmp
cli
clc
repnz
ljmp
inc
enter
jge
aas
push
or
adc
inc
scas
adc
mov
xchg
into
js
or
dec
gs
push
fisubrl
cltd
or
mov
ret
lahf
hlt
xlat
movb
xchg
cmp
push
xchg
jo
push
test
test
xor
stc
lahf
jp
fildll
xchg
stc
out
mov
in
cmpsl
fimull
sbb
and
push
mov
sbb
jnp
push
sub
xor
xor
push
cmp
cld
sbb
mov
imul
jg
mov
lcall
in
and
stos
mov
insb
in
fiadds
ljmp
dec
mov
adc
sarl
pusha
inc
cmp
cmp
inc
pop
inc
call
cmp
add
cwtl
out
mov
sub
in
mov
hlt
mov
int3
jb
mov
and
mov
jecxz
mov
imul
cli
xchg
jge
xchg
sbb
add
push
adcb
xor
sbb
bndcn
or
test
jge
adc
dec
ss
jns
in
aaa
xor
pop
xchg
sbb
push
enter
gs
inc
lcall
cmp
cmpsb
mov
fwait
and
xchg
jle
mov
mov
mov
or
pop
out
mov
mov
fdivr
call
xchg
ss
loope
hlt
fwait
mov
stc
sub
xor
fwait
jge
sub
pop
sbb
adc
push
fildll
nop
pop
xchg
sub
fisubrs
pop
push
rcll
sub
or
test
adc
std
inc
loope
xchg
mov
imul
sub
push
lahf
popf
mov
jne
mov
or
xor
notl
mov
sbb
and
adc
imul
xor
call
ret
bound
call
adc
sub
fwait
mov
pop
pop
jge
mov
out
mov
stos
inc
dec
pop
mov
cmp
mov
jmp
adc
pop
push
sub
push
pop
sbb
outsb
adc
mov
cmpsl
outsl
xchg
loop
imul
out
aad
test
inc
xchg
sbb
pusha
pop
minps
mov
fcomip
fdivl
mov
clc
push
sar
pop
ljmp
push
sub
and
pop
pop
int3
cli
add
adc
sahf
jecxz
in
mov
mov
mov
push
test
xor
or
pop
icebp
ficompl
cmp
or
mov
imul
sub
mov
fsubrs
mov
fldcw
inc
mov
jp
push
jecxz
mov
repz
cmpsb
dec
jns
test
les
mov
cmp
add
pop
jl
cli
cmp
testb
mov
dec
push
int3
in
xchg
fists
stos
inc
and
add
xchg
adc
js
ss
repnz
push
cmp
cmpsb
stos
jge
insb
call
push
test
or
adc
scas
xor
jo
sub
and
pusha
or
inc
lock
aas
mov
adc
xor
out
push
addr16
jns
lcall
test
push
notl
adc
and
clc
repz
mov
jmp
loop
or
arpl
pop
inc
add
sti
out
mov
icebp
mov
push
cmp
lea
repnz
out
dec
cmp
ja
lret
popa
into
fstpl
inc
sbb
cltd
push
mov
out
orb
pop
insb
cmp
push
pop
xor
cli
movsb
pop
xchg
mov
in
cmp
inc
das
xor
dec
fstpt
notb
jbe
adc
and
pop
aas
add
sub
mov
dec
inc
in
icebp
or
sbb
push
test
dec
jo
pop
mov
inc
imul
addr16
rcll
xchg
pop
stc
mov
lret
imul
add
jl
sub
cld
sarl
jmp
mov
or
mov
fwait
jnp
mov
jbe
cltd
sahf
xchg
add
es
inc
clc
pop
pop
movsb
mov
orl
xchg
aaa
fsubrl
rorb
loop
lods
lods
and
divb
mov
test
stos
dec
inc
in
ror
jg
xor
mov
push
roll
sub
lret
lock
inc
sar
pop
sahf
andl
xchg
jb
sbbb
mov
adc
jb
in
loop
or
xchg
out
das
aas
inc
testl
bound
dec
in
dec
into
out
test
loop
out
lcall
insb
addl
mov
aam
push
cmpsb
jg
loope
rcr
adc
lret
sub
or
or
or
or
movsl
repnz
xchg
xor
lret
mov
ja
sub
shr
cmp
lods
arpl
fcmovb
decl
icebp
call
jbe
stos
push
cmp
rorl
cli
jns
out
call
cli
add
rcrl
push
cld
dec
cmp
xor
dec
and
xchg
aad
sahf
sbb
pop
imul
sub
out
outsb
aas
cmc
xchg
sbb
jge
sarl
mov
xchg
add
add
lcall
shl
sub
add
mov
out
incb
repnz
ffreep
jmp
orl
mov
mov
jge
xor
and
cmp
push
dec
es
hlt
jbe
cld
push
imulb
lods
mov
hlt
mov
imull
mov
mov
setle
jno
aam
sub
fwait
xchg
in
div
pop
andl
out
jno
lcall
sbb
jmp
pop
cs
sub
pop
lret
jl
stos
sarl
sub
and
insb
cmpsl
dec
or
adc
pop
xor
loop
sbb
jbe
mov
aaa
sbb
adc
xchg
or
and
xlat
popa
mov
data16
je
lods
cmp
mov
xchg
mov
mov
addr16
pushf
sub
ss
dec
and
mov
mov
jb
lret
gs
imul
fs
aas
std
xchg
jp
push
mov
adc
xchg
add
mov
loopne
popf
lcall
mov
outsb
cltd
dec
cmp
int3
das
adc
jbe
mov
hlt
cld
xor
fdivrp
push
sbb
jmp
mov
fs
jnp
inc
mov
sbb
sub
or
dec
daa
mov
or
or
jg
adcb
xchg
xor
xchg
cli
jmp
pop
adc
adc
lock
lcall
daa
push
pop
nop
in
xchg
mov
jnp
les
or
xchg
jne
clc
mov
xor
inc
xchg
cmpsb
add
mov
test
jnp
aaa
loopne
mov
add
ljmp
push
dec
movsb
ljmp
lock
ja
dec
pop
dec
xlat
pop
sub
shlb
repnz
mov
sbbb
cmp
syscall
imul
jg
mov
dec
cmp
adc
shl
jge
das
sahf
xor
mov
adc
xchg
xor
ds
inc
push
mov
adc
sub
mov
xchg
add
sub
xor
repnz
mov
jecxz
dec
stc
rorl
add
adc
mov
jle
out
and
leave
fildll
dec
lret
jmp
sbb
push
xchg
cmp
adc
out
and
adc
sbb
or
mov
pop
pop
test
es
xor
repz
mov
jp
adc
pop
inc
cmp
scas
test
mov
push
shll
dec
mov
cli
sti
inc
into
sub
andb
or
sub
sub
jmp
push
inc
sbb
gs
mov
das
jo
and
aas
test
inc
add
dec
mov
jg
or
or
xorl
repnz
fwait
cltd
xor
cwtl
idivb
xchg
xor
xorw
jge
gs
pop
test
xchg
hlt
test
xor
xor
ljmp
or
int
adc
divb
push
sbb
dec
andl
push
insl
pop
mov
lret
and
inc
mov
test
push
lds
lret
xor
inc
xlat
insl
mov
shrb
dec
mov
inc
or
cmp
ss
push
jge
or
enter
or
cmp
mov
test
mov
push
notl
in
test
pop
jl
jno
adc
cmp
sbbl
xor
xchg
int
insb
jmp
stc
pop
cltd
leave
xlat
sub
add
xor
stos
idivl
test
lods
ss
xor
mov
mov
mov
outsl
fidivrl
jle
inc
jbe
hlt
push
inc
mov
inc
jnp
out
jle
mov
inc
mov
adc
dec
call
aam
mov
out
xor
dec
or
ss
push
fists
sub
cmp
xchg
or
xor
les
dec
ljmp
inc
or
adc
arpl
stos
add
sub
inc
or
xor
push
inc
pop
into
cltd
jmp
and
mov
push
jbe
bound
pop
and
outsl
xor
ljmp
and
icebp
mov
out
adc
fldt
mov
and
xor
mov
rorl
in
cmp
cli
dec
fisubs
pop
repnz
imul
sti
das
cmovg
dec
and
test
pop
and
or
xchg
fildll
sub
and
mov
or
push
imul
sti
or
lret
push
ss
out
shll
and
fimull
das
or
inc
cld
push
in
adc
pop
xchg
sbb
or
outsb
lds
mov
cltd
xrelease
leave
mov
fidivs
cmp
push
jnp
popa
inc
lahf
and
sub
cmp
pop
insl
pop
xchg
popa
xchg
fildl
xchg
push
dec
cmp
mov
hlt
scas
adc
jg
fdivrl
push
jge
cmpsb
cltd
imul
adc
or
out
inc
xchg
and
inc
jge
out
sahf
xor
ljmp
push
hlt
or
pop
and
jmp
out
es
je
xchg
add
cmp
jg
add
mov
mov
add
pop
les
and
aas
notb
pop
xor
das
ja
add
mov
mov
out
cltd
popa
sahf
fistpll
mov
mov
jge
jecxz
daa
dec
pop
fistl
mov
pop
mov
imul
dec
xor
adcl
cmp
xchg
ljmp
cld
mov
or
adc
test
imul
int
imul
sub
pop
push
mov
sub
movsl
adc
cli
sub
stos
push
and
cs
jb
into
xchg
cwtl
mov
cmp
mov
adc
add
mov
jb
add
arpl
inc
xchg
sbb
jmp
sbb
stc
lock
jnp
mov
stos
sub
in
repnz
sbb
jmp
fisttps
jecxz
push
xchg
insl
stos
and
stos
dec
or
xor
jg
loope
sbb
cs
inc
mov
pop
popa
jg
pop
aad
jae
fimull
fistps
pop
dec
fisttpl
lcall
or
lock
out
mov
repnz
sets
lcall
inc
std
xchg
fcomi
pop
jne
push
xor
pop
sbb
add
jmp
jno
pop
vmovdqu
mov
push
push
sbbb
js
or
aaa
add
hlt
test
imul
fsubs
fimuls
ret
adc
mulb
cld
and
add
mov
jmp
sub
fs
fbld
mov
xchg
cmp
movsl
pop
cli
data16
adc
fnsave
or
in
xor
adc
lret
push
ljmp
out
cli
fisubrl
lcall
test
es
or
lea
int
les
mov
jmp
scas
insl
sbb
outsb
or
add
ret
add
sbb
insb
testl
pushl
shrl
adc
mov
test
popa
dec
mov
scas
adc
add
or
push
jnp
pop
pop
sub
sbb
gs
push
sti
xchg
cmp
mulb
cs
xchg
mov
test
mov
shll
dec
inc
xchg
dec
pop
movsb
aaa
clc
out
mov
dec
jge
jnp
mov
push
xor
jmp
xor
insl
push
jns
arpl
adc
push
mov
mov
adc
repnz
or
jl
dec
dec
mov
gs
and
sbb
sbb
or
js
or
cmp
sbb
aam
xchg
ljmp
mov
rorl
clc
push
mov
add
scas
test
icebp
xchg
js
mov
cwtl
mov
out
mov
cmp
stos
dec
sarb
dec
adc
fistpl
adc
pop
ds
sti
cltd
push
cmc
add
hlt
dec
lock
jb
fwait
imul
and
in
or
cmp
mov
cmp
pop
pop
dec
movsb
jns
mov
stc
or
into
or
ss
lea
sahf
movsb
arpl
cli
jno
add
mov
loope
sar
fcoml
nop
shlb
adc
pop
ljmp
jns
xchg
sub
ret
es
pop
insb
clc
gs
scas
fistl
fdivrl
cltd
pop
jnp
inc
into
call
mov
cltd
adc
xlat
and
xchg
xor
xchg
les
mov
leave
inc
iret
test
bound
mov
in
mov
jmp
mov
fs
je
or
cmp
repnz
mov
add
adc
xor
mov
pop
repnz
les
sbb
xchg
adc
dec
movsl
adcl
xchg
cmp
enter
xor
lahf
xchg
add
adc
sub
lahf
dec
cld
fstps
fwait
add
add
data16
or
dec
adc
adc
cs
xchg
xorps
sti
cmpl
lret
xchg
dec
gs
xchg
movl
bound
imul
xchg
sub
jmp
pop
and
fisubrs
sbb
ljmp
or
sbb
in
lcall
sarl
pop
jnp,pt
cwtl
lock
fwait
into
mov
imul
inc
orb
rclb
push
push
jecxz
mov
sbb
daa
mov
rcll
mov
dec
cli
popa
ret
lds
adc
stc
xchg
lock
inc
xor
or
and
sbb
das
sbb
or
ljmp
xor
sub
push
pop
es
lahf
add
pop
testl
enter
mov
cmp
je
add
mov
lea
xchg
mov
mov
fstpt
mov
sahf
or
int
mov
push
xchg
mov
lock
push
out
pop
shr
test
shr
adcb
lret
arpl
mov
inc
jno
mov
js
adc
or
adcl
jb
xchg
enter
insb
adc
lea
lret
popf
dec
jecxz
push
cmpsb
push
scas
sbb
stos
pop
push
mov
jmp
aad
mov
xchg
or
clc
fwait
aam
xor
dec
cli
xor
scas
hlt
pop
mov
mov
orb
pop
icebp
pop
dec
dec
pushf
icebp
test
pop
enter
lds
mov
aaa
push
jg
repnz
push
dec
jl
pop
pop
mov
shlb
mov
cmp
lock
push
adc
enter
daa
or
loopne
into
repz
jl
inc
or
sub
test
bound
inc
jb
sub
dec
cmp
notl
ret
jb
inc
repz
cmc
push
pop
dec
or
xchg
out
cmp
sub
mov
cmp
mov
or
or
ljmp
xor
pop
add
repnz
mov
iret
jp
xor
daa
push
aas
ret
or
sahf
mov
pop
ljmp
testb
adc
dec
jp
sbb
or
inc
out
mov
mov
lret
insb
bnd
pop
mov
push
mov
push
stc
icebp
ds
lea
add
jmp
iret
sub
fs
sub
repnz
cld
sub
mov
push
cmp
repz
fistl
enter
push
aaa
mov
ss
bnd
or
adc
or
scas
xor
mov
negl
ror
ret
xor
stos
cmp
sub
out
push
out
vmptrst
push
push
push
and
lock
fnsave
insl
mov
rorb
jg
inc
scas
inc
push
mov
push
stos
pop
in
mov
hlt
and
sbb
test
sub
mov
out
mov
xor
and
popf
shll
sub
shrd
imul
incb
or
lret
pop
fnsave
sar
repnz
xchg
jne
sub
inc
jno
xchg
lea
aad
ret
hlt
jnp
loopne
insl
stc
pop
cmp
out
push
insb
mov
or
adc
cmp
das
mov
push
mov
subb
xor
lret
mov
es
inc
mov
in
or
pop
lret
les
xchg
adc
mov
xchg
or
push
inc
sub
xor
sub
sbb
mov
ljmp
pcmpgtw
mov
shlb
mov
fildll
sub
inc
and
cmp
ljmp
pop
clc
insb
insb
imul
xor
lea
xor
lahf
repnz
movsb
mov
sbb
or
scas
adc
pop
stc
xlat
xor
fnsave
xchg
inc
lock
inc
cmp
or
xchg
mov
test
jae
xchg
mov
xchg
notb
fisubrs
es
cmp
mov
sub
outsb
dec
fs
sub
pushf
ret
rcl
stc
push
movsl
fadds
add
pop
mov
pop
call
mov
into
idivl
adc
stos
push
or
jmp
push
adc
inc
add
or
cmp
popa
xchg
jmp
inc
inc
jns
push
das
sbb
ret
jecxz
jne
repnz
cli
movsb
mov
in
cmp
sbb
xchg
or
mov
scas
cli
out
movsl
adc
loope
inc
cltd
mov
out
or
add
out
dec
lock
lcall
cmp
cltd
bound
pop
into
cmp
mov
stos
lret
ret
jecxz
pop
xchg
test
jmp
sub
cmp
jne
push
inc
push
inc
fstpt
imul
lret
stc
mov
xor
or
mov
out
test
xchg
mov
cmovg
rorb
xchg
xor
divl
mov
inc
cmp
fldl2t
lods
cmp
clc
sub
mov
and
dec
imul
sbbb
lret
repnz
sub
pop
push
dec
jnp
or
and
fistpll
out
or
jmp
mov
mov
lret
xor
fisubrl
out
cs
cmpsb
pop
cwtl
sahf
loope
push
jnp
sub
cmp
test
push
ss
and
icebp
lret
cmp
mov
mov
aas
jb
cmp
popa
sbb
jg
cli
push
adc
mov
cmp
es
pushf
xchg
inc
pop
stc
ljmp
xor
xchg
push
cmp
cli
add
xor
cmp
xor
dec
add
inc
sub
jmp
or
insb
mov
mov
mov
mov
mov
add
call
mov
ljmp
aaa
gs
ficoml
sub
xchg
cli
pop
in
sub
dec
divl
js
sarb
push
inc
cmpsb
lods
fimuls
sahf
sbb
mov
sub
les
loop
negb
lock
pop
insb
cmp
jno
aas
aas
mov
add
mov
lock
ret
out
std
cmp
daa
imul
push
jmp
xchg
cmpsb
add
add
mov
repnz
add
or
xchg
adc
pop
pop
xchg
xchg
jno
xchg
mov
mov
lcall
setne
jl
adc
out
mov
mulb
mov
xchg
lret
shlb
dec
jle
mov
mov
mov
ja
mov
adc
sbb
xor
push
and
cmp
or
push
add
xchg
adcl
and
in
mov
add
mov
hlt
dec
negb
pop
push
std
xor
mov
or
jp
adc
add
cmp
cli
xchg
cwtl
lods
call
jb
sub
mov
flds
jnp
pop
fimull
xchg
xor
outsl
mov
inc
icebp
or
sbb
add
mov
or
add
pop
mov
mov
pop
gs
jg
pop
in
xor
inc
or
in
pop
rorl
add
push
into
jg
ljmp
mov
movsb
loop
dec
pop
mov
mov
push
lock
sbb
inc
push
and
ja
mov
inc
arpl
stc
ds
jmp
addr16
sub
nop
cmp
push
cwtl
hlt
fs
or
test
mov
push
mov
loopne
aaa
push
arpl
fcomip
or
insb
int3
mov
stos
movsl
jle
subl
xchg
testl
adc
jp
push
sbb
dec
jecxz
out
fs
lcall
cmp
xchg
pop
imul
pop
xchg
jbe
push
dec
sbb
inc
or
sub
xor
pop
jge
mov
hlt
mov
add
pop
movl
add
push
cmp
cli
ss
inc
loopne
adc
test
jmp
push
jns
in
dec
xchg
popa
push
bound
in
out
or
add
jmp
inc
repnz
addr16
jns
dec
cmc
inc
or
inc
hlt
xor
mov
mov
or
arpl
stc
jne
add
testl
dec
add
dec
or
js
xchg
es
jno
add
fwait
jne
jp
pop
test
mov
jg
dec
enter
ret
jbe
adc
cmp
xchg
cltd
arpl
cmp
adc
ljmp
ljmp
pop
cmp
or
sbb
pop
dec
les
call
pop
xor
dec
loopne
xchg
jnp
mov
jecxz,pt
mov
pusha
sbb
or
enter
jp
xchg
stos
push
pushf
inc
pop
and
sbb
sbb
push
mov
in
and
mov
out
and
dec
jnp
cmpsb
test
xor
jmp
lods
gs
frstor
les
scas
sub
sub
jl
enter
paddsw
call
out
mov
mov
adc
test
or
cltd
shrb
mov
rcll
mov
and
jno
shll
dec
lret
imul
imul
mov
arpl
cmp
mov
and
ljmp
adc
out
lock
push
mov
mov
into
jno
cltd
imul
das
and
gs
ret
sub
sbb
inc
addr16
adc
and
or
popf
notb
int3
push
insl
cld
stos
mov
pop
imul
repnz
ss
and
bnd
mov
cli
jmp
mov
sbb
in
xchg
cmp
shll
dec
dec
into
xchg
lock
xchg
arpl
mov
push
fldl
movsb
or
pop
repz
cmp
cli
xorl
testl
dec
stos
dec
xor
push
test
dec
sbb
or
push
xlat
pop
mov
jle
pop
int
xor
mov
and
cmp
add
je
or
xor
mov
lcall
imul
iret
daa
mov
rcrl
scas
cmp
mov
mov
pop
or
xchg
xchg
data16
lret
scas
in
ror
or
addr16
mov
icebp
cmp
bnd
mov
add
mov
jmp
in
dec
or
cmpsb
int
jno
jg
lret
xchg
fistpll
mov
cmp
push
fstpl
clc
arpl
imul
cli
inc
or
in
shlb
movsl
pop
xchg
lahf
pop
clc
roll
movups
lods
inc
xchg
pop
imul
xchg
and
or
xor
mov
ds
fstpt
rorb
add
sbb
cli
ds
movsb
dec
les
out
addl
cs
inc
sub
xlat
lock
inc
or
sti
sbb
and
sbb
push
cld
ds
adc
mov
add
out
adc
sub
dec
cld
pop
cmp
and
xor
cli
inc
pop
push
jecxz
arpl
push
adc
addl
add
xchg
and
arpl
cmp
sbb
xor
push
sbb
mov
inc
add
dec
out
add
sub
dec
outsb
cmpsb
or
cmp
subb
cmp
lcall
xor
xor
mov
cmp
stos
or
xchg
push
xor
arpl
add
scas
xor
ret
push
mov
lea
test
mov
mov
outsb
loop
and
sbb
xor
cwtl
mov
pop
pop
pop
mov
xor
test
call
pusha
scas
daa
xchg
inc
mov
inc
sub
pop
clc
push
jo
or
data16
repnz
stc
push
xor
cmp
jb
mov
dec
mov
int3
mov
lcall
mov
pop
pop
inc
loope
jp
ret
mov
or
mov
push
adc
xchg
push
inc
sbb
mov
add
jle
je
add
repz
cmp
adc
dec
popa
cwtl
icebp
mov
xchg
push
mov
fs
ret
sahf
jmp
push
testl
btsl
mov
repz
ljmp
jg
pop
push
or
add
test
jbe
into
bound
cmp
enter
fbld
or
jnp
sub
faddl
mov
mov
jle
cmc
cli
sbb
ljmp
sub
stos
addr16
jnp
je
leave
sbbb
sbb
stc
popa
lea
pop
sub
loop
pushf
lcall
out
xor
xor
dec
xor
or
lret
jb
ljmp
inc
xor
scas
lea
ret
popa
or
xor
fcmovu
xor
inc
daa
repnz
or
sti
push
adc
sub
icebp
jg
add
xchg
xchg
fildll
push
imul
leave
push
lcall
lock
xchg
push
lea
bound
aam
inc
inc
iret
sbb
sbb
test
stos
or
mov
xor
loope,pt
push
and
push
dec
xchg
fimull
es
adc
xor
lret
inc
and
sbb
xor
repnz
lds
and
pop
push
mov
push
fisttps
into
sub
mov
pop
push
fcmovb
xor
test
dec
fimull
cmc
sbb
xor
enter
sbb
sub
lea
push
or
ss
in
mov
inc
mov
das
or
mov
roll
pop
cmc
adc
cmc
lcall
in
jp
shll
xor
push
adc
pop
jo
pop
rclb
xchg
aaa
aas
dec
fs
out
stc
mov
or
aaa
pop
mov
sbb
dec
push
scas
fbld
dec
adc
inc
shll
adc
das
cmpsb
xlat
mov
xchg
mov
mov
xchg
hlt
mov
std
mov
mov
pop
cmpsl
dec
cmp
xchg
imul
lock
mov
fisttps
out
popa
jnp
pusha
icebp
xor
cmp
pusha
pop
add
loopne
mov
fmuls
pop
push
das
cmp
addl
sar
test
jg
mull
sbb
adc
fnstsw
cmp
ret
mov
jne
inc
xor
jg
lea
mov
dec
xor
add
sbb
addr16
sti
mov
leave
cmp
add
int3
adc
xchg
ret
or
rclb
ds
dec
dec
or
or
movswl
scas
jmp
push
or
mov
push
imul
insl
sub
mov
sti
pop
pop
push
dec
dec
out
cmp
sbb
mov
loopne
cwtl
xor
in
jecxz
popa
pop
dec
in
mov
pusha
mov
or
or
lcall
lea
sbb
imul
das
test
int3
stos
pop
push
lcall
xlat
sub
pop
push
lret
xchg
and
test
sarb
divb
jg
push
imul
jecxz
push
pop
xor
ss
jae
mov
test
push
adc
es
mov
add
fildl
lea
pop
push
push
cmp
sbb
mov
repnz
mov
les
pop
in
gs
pop
lods
ja
lock
jno
mov
push
pop
test
adc
xchg
and
pop
mov
mov
in
add
cmp
sarl
mov
daa
test
jecxz
ret
sbb
jno,pn
jecxz
mov
movsb
mov
lea
outsb
out
mov
notb
sti
cltd
jle
inc
lods
mov
repnz
adc
jp
daa
scas
orb
xchg
out
addr16
mov
push
mov
bound
xchg
jno
cmpsb
jl
dec
cli
jmp
or
pop
mov
mov
jl
mov
xor
and
aam
or
imul
inc
mov
jo
inc
in
adc
cmp
xchg
and
fldpi
dec
arpl
or
xchg
es
inc
adc
dec
adc
leave
add
sbb
mov
clc
nop
cwtl
xor
ret
fnstcw
mov
mov
push
pop
dec
je
in
outsb
push
jae
xor
fildll
pushf
xchg
das
and
and
jp
lret
push
adc
mov
dec
and
and
jns
pop
jmp
xchg
adc
dec
lcall
or
xor
and
mov
cmp
xchg
dec
ja
cmovs
dec
test
jl
fs
xorb
andl
mov
pop
int
imul
cmp
push
lea
dec
ja
jnp
lods
and
push
jb
xchg
ds
ljmp
push
test
test
mov
jecxz
popf
sbb
cs
mov
mov
or
ret
push
leave
sbb
dec
imul
or
jmp
sbb
xor
arpl
mov
add
mov
pop
sahf
out
mov
dec
enter
fucomp
xor
pop
outsb
jae
or
cmp
pop
add
mov
mov
xor
repz
ss
leave
pop
sahf
jl
xchg
ficoml
in
push
pop
mov
inc
pop
dec
sbb
push
int
pop
cmp
pop
out
dec
rcr
mov
lock
pop
or
xchg
test
push
pop
sbbl
lcall
jnp
std
rclb
dec
iret
icebp
cmp
or
and
dec
jns
repnz
stos
test
jnp
xor
pop
mov
cli
loopne
ljmp
je
sub
and
add
adc
mov
cmpsb
mov
xor
jmp
stos
mov
lcall
mov
pop
push
mov
lcall
adc
xor
das
xchg
pop
xor
lods
outsb
jmp
push
add
cmp
sarl
inc
out
lcall
dec
cmp
adc
enter
xlat
int3
int3
pushf
decl
bound
lods
push
xor
into
mov
adc
jg
push
in
jnp
data16
out
dec
push
imul
push
push
movsl
or
push
out
jo
mov
push
lods
mov
out
jbe
test
lods
cmp
mov
test
or
in
cmp
lcall
fs
lods
ret
xor
mov
push
jno
loopne
jmp
xchg
xchg
mov
inc
sbb
and
jp
push
add
div
ret
es
adc
xchg
loop
popf
scas
mov
je
cltd
scas
add
pop
mov
adc
out
push
outsb
or
jg
cmp
push
pop
sbb
mov
pop
out
pushf
sahf
xchg
push
xchg
inc
iret
insb
pop
jne
cmpsb
pop
push
test
or
xchg
cmp
into
xor
pop
cli
mov
test
imul
push
inc
xchg
mov
adc
es
jbe
repnz
mov
inc
ss
pop
or
subl
es
inc
sbb
mov
sub
mov
pop
add
repnz
inc
aam
jmp
rorb
add
in
and
jbe
jnp
out
lcall
ret
or
out
lcall
jg
add
push
mov
out
and
adc
xor
xor
dec
mov
jbe
aaa
cmp
jle
shlb
bound
mov
outsl
sahf
lret
cmpsb
sub
gs
mov
int
push
mov
adc
sbb
dec
lea
dec
mov
dec
mov
jmp
xchg
and
sub
dec
mov
adc
xor
fidivl
pop
mov
adc
enter
decb
pusha
and
ljmp
in
pop
mov
shll
and
pop
xchg
jp
out
ljmp
nop
dec
loopne
xor
cmp
and
ljmp
out
mov
and
xor
push
fistl
sbb
jo
testb
cld
lods
in
jmp
fsubs
push
test
enter
in
mov
inc
in
pusha
fwait
add
mov
jmp
and
and
imul
stc
cmp
xchg
js
jecxz
push
cwtl
nop
iret
stos
sbb
into
jg
xchg
fs
mov
in
mov
push
dec
sub
negl
js
leave
insl
fistl
pop
pop
sahf
fyl2x
jmp
loop
nop
insl
mov
sahf
adc
cmpsb
ljmp
add
mov
pushf
adc
cmp
sbb
or
push
push
push
je
sarb
mov
push
fiadds
iret
rorb
stos
dec
repnz
mov
push
mull
in
aad
xor
pusha
dec
testb
adcl
jno
test
inc
pop
dec
fwait
ljmp
leave
mov
mov
sti
mov
jnp
cmp
jmp
sbb
jge
adc
pushf
pusha
or
cs
ds
pop
pop
and
aam
shrl
test
jb
pop
das
mov
sub
mov
xor
adc
push
test
jmp
mov
mov
add
jb
xor
push
test
cmpsb
xchg
add
or
filds
or
sub
ljmp
jnp
add
xchg
mov
or
sub
in
mov
inc
enter
mov
inc
cmp
shlb
aas
lahf
cs
out
mov
imul
mov
test
mov
cmp
ret
cli
outsb
lcall
jne
lods
mov
pusha
sbb
add
mov
lock
pusha
sahf
inc
dec
dec
mov
es
sbb
inc
mov
sbb
repnz
dec
push
mov
jle
sahf
cmp
xchg
ret
popa
mov
js
xor
out
scas
mov
jmp
sbb
fisubs
jnp
xor
addr16
cs
jmp
xor
movsl
push
mov
sub
mov
gs
sub
jae
mov
call
js
in
clc
in
pushf
daa
out
cmp
push
add
or
mov
in
leave
jmp
cs
lret
sub
push
push
or
jg
aam
dec
xchg
out
loop
cmpsl
sub
ret
and
push
std
ficompl
movsb
jl,pt
push
pop
push
jmp
gs
repz
or
pop
adc
add
jge
bound
movsb
ret
pop
test
aam
out
cmp
test
or
and
or
inc
mov
jnp
mov
jnp
imul
pop
cmpsb
sub
jmp
push
out
cmc
icebp
scas
cmp
leave
cmpsb
pop
cmp
sub
addr16
arpl
or
aam
jbe
or
xor
fsts
mov
aam
ds
scas
push
and
xchg
mov
inc
cmp
adc
add
mov
jb
and
aad
push
pop
push
xor
int3
sub
adc
jnp
stos
arpl
sub
adc
jmp
xrelease
fs
icebp
dec
test
enter
imulb
xchg
movsb
stos
sbb
adc
jg
jno
mov
sbbb
stc
dec
xor
imul
mov
sub
add
xor
sub
fisubl
xor
push
lret
repnz
sub
and
stc
int3
sti
push
scas
shlb
lods
xor
sbb
mov
adc
aaa
arpl
test
pop
cmp
jp
div
iret
push
mulb
icebp
xchg
and
cmp
push
mov
aad
loope
mov
stos
xchg
ss
adc
pop
sbb
mov
jle
test
fistpll
xchg
fs
xor
push
push
std
push
lea
sbb
cmp
dec
jl
xchg
cmp
sub
cwtl
mov
or
cmp
add
ficompl
das
adc
in
push
pop
jecxz
int
mov
ffree
neg
ret
ret
mov
push
sbb
movsb
inc
addl
divl
pop
iret
mov
push
or
and
loop
cmpsb
popf
or
ficoml
stos
sbb
xor
scas
push
sbb
jg
test
mov
or
xor
imul
pop
mov
lret
mov
jg
cmpsl
adc
mov
out
lods
jmp
inc
cli
icebp
es
test
pop
cmp
add
or
jmp
mov
pop
sbb
adc
cmpsl
fisubs
dec
into
addr16
testl
leave
lods
push
xchg
fmul
sbb
mov
sub
sbb
repnz
add
mov
cltd
lret
test
daa
cwtl
or
push
xchg
test
icebp
cltd
ja
repnz
cmp
addr16
sbb
mov
sub
jecxz
cs
dec
or
mov
cmove
repz
and
or
add
stc
pmaxsw
sub
scas
int3
pusha
js
pop
mov
insl
add
jg
dec
or
mov
xor
pop
dec
pushf
imulb
cmp
hlt
push
ljmp
jmp
jno
pop
sahf
jp
lock
mov
xor
lea
adc
xor
pushf
jmp
adc
hlt
push
enter
in
sbb
cli
mov
jne
xor
mov
pop
mov
les
jecxz
mov
push
aad
mov
push
mov
test
cmp
mov
hlt
mov
mov
pop
insl
ret
idivb
movsl
scas
pop
pop
mov
and
mov
jb
into
ds
mov
mov
inc
jmp
stc
orb
fldt
lea
adc
clc
mov
mov
add
push
xchg
bound
hlt
xchg
mov
lock
push
xor
jno
cli
pop
mov
inc
sahf
aad
and
std
or
fisubrs
aaa
cmp
mov
jbe
cmpsb
jge
ds
aam
rcll
or
bnd
mov
add
jae
enter
xchg
jp
ljmp
addb
xlat
adc
dec
test
das
or
mov
pop
dec
jae
jbe
sub
xchg
stc
jbe
mov
fs
push
es
orl
mov
mov
pop
xchg
and
repz
ficompl
or
mov
in
mov
outsb
inc
jle
inc
pop
mov
inc
sbb
adc
stc
adc
fwait
pop
int3
pop
testl
mov
and
adc
lea
inc
test
jno
cmp
and
data16
out
out
xor
xor
test
dec
dec
xchg
push
pop
rolb
add
or
lret
cli
mov
out
push
pop
sti
adc
movsb
mov
and
jnp
sbb
out
call
iret
mov
nop
jbe
lret
mov
jl
js
push
cmp
ljmp
dec
adc
sbb
iret
ret
add
lret
and
mov
push
mov
cltd
sti
stc
adc
pop
inc
fsubr
pop
pop
repz
mov
push
lcall
mov
std
add
dec
hlt
pop
xchg
jmp
cld
ljmp
into
ljmp
dec
mov
out
shrb
jl
jp
ret
push
adc
cmc
inc
inc
or
cli
arpl
inc
insb
mov
imul
inc
push
lret
cs
xchg
adc
jmp
lods
jp
das
rclb
pop
aas
pop
imul
movsl
push
lods
scas
stos
unpcklps
mov
xor
add
or
fnsave
pop
lret
xor
ljmp
or
mov
daa
aas
out
nop
xlat
and
push
adc
xlat
cli
sbb
inc
xor
sbb
sti
cmp
addl
mov
sub
enter
and
fwait
mov
and
push
mov
pushf
jne
jecxz
adc
int
pop
mov
mov
inc
call
mov
mov
add
scas
cs
adc
mov
cmp
ljmp
fidivrl
xor
rcl
or
aaa
fimull
or
int3
sub
sti
xor
inc
testb
push
ss
scas
stos
push
cmp
sub
aas
or
stos
dec
test
shrl
packssdw
sub
cs
push
test
xchg
sub
mov
test
ljmp
cli
cmp
pop
cmp
repnz
cmp
or
lret
jl
out
test
lcall
cs
pop
aas
repz
jbe
mov
testl
mov
add
punpckhbw
daa
sbb
xchg
sti
and
cmpsl
lahf
ljmp
jmp
dec
mov
js
cmp
or
out
and
mov
add
outsb
adc
fimull
out
pop
push
xor
in
xorb
sub
ret
mov
shlb
sub
or
repnz
enter
xor
stos
repnz
stos
mov
lods
out
jno
xor
in
push
mov
cmp
sbb
repnz
dec
mov
cmp
dec
sub
or
repnz
adc
or
repnz
mov
ljmp
icebp
cmp
or
out
sbbl
push
dec
xorb
mov
mov
out
push
push
or
shll
cmpl
repnz
in
xchg
mov
cmp
or
repnz
mov
shll
or
repnz
test
inc
cmp
mov
mov
lcall
loopne
js
cmp
sub
stc
push
mov
pop
in
push
stos
mov
cmp
stos
or
repnz
pop
sub
cmp
xor
repnz
add
adc
arpl
scas
push
cmp
cmpb
mov
cmp
mov
sbb
push
stos
popa
cmp
rcl
nop
in
shlb
or
repnz
xor
in
stc
jb
orb
mov
lret
repnz
ret
push
leave
inc
xor
pop
int3
lret
push
inc
bnd
ret
in
cmp
jno
mov
cmp
sbb
repnz
mov
inc
mov
cmp
push
fimull
or
dec
fs
mov
mov
sub
or
repnz
loop
sbb
icebp
or
repnz
in
sub
or
repnz
mov
repnz
stos
sbbl
push
in
cmp
sub
cmp
cmp
mov
or
repnz
or
mov
leave
mov
sub
pop
or
adc
push
sbb
enter
push
rorl
or
push
mov
sub
mov
inc
sub
push
into
or
repnz
mov
cmp
mov
test
into
push
push
mov
adc
lods
mov
cmp
add
in
iret
cmp
sbb
mov
push
or
in
push
inc
mov
cmp
xor
cli
jo
xchg
adc
sbb
and
fwait
or
fisttpl
jp
out
ret
cmp
jns
mov
repnz
mov
lock
ret
mov
cmp
or
repnz
mov
jno
xor
orb
add
inc
mov
cmp
or
repnz
sbb
or
repnz
mov
xor
or
repnz
jns
cmp
dec
or
repnz
lock
cmp
or
repnz
repnz
mov
cs
bt
stc
push
mov
mov
add
jg
ljmp
in
xchg
lret
xor
jae
inc
sbb
sub
xor
repnz
pop
jbe
mov
sti
cmpsl
pop
jg
rcr
xor
scas
sub
xchg
gs
outsb
or
mov
cmpsl
mov
and
sbb
andl
fidivl
andb
cs
xor
jmp
cmpl
mov
mov
push
aam
xchg
lahf
sbb
push
fmul
xor
arpl
jge
sub
aam
sub
mov
mov
bound
dec
xchg
and
add
mov
aaa
cmpsl
lahf
xchg
xor
mov
push
mov
mov
and
add
jo
dec
jg
sbb
mov
scas
mov
add
repz
or
xor
add
push
ljmp
sbb
inc
cld
fwait
pusha
pushf
add
sub
lahf
test
mov
js
mov
cmp
sbb
sub
adc
push
inc
inc
adc
xchg
sysret
adc
mov
cs
mov
or
scas
mov
jb
and
stos
stos
sub
mov
cmp
pop
push
xor
jno
call
jns
scas
addl
in
loopne
and
int3
xor
mov
mov
mov
cmp
sti
mov
cmp
subl
out
mov
mov
fcomps
aas
jae
inc
pop
push
sbb
mov
cmpsl
repz
jo
repz
xchg
idiv
clc
xor
and
inc
mov
mov
jb
mov
cmp
aaa
testl
rdtsc
add
cmp
fidivl
push
sub
repz
stos
pop
mov
cmp
fcmovb
inc
jmp
xor
outsb
aas
sbb
pop
cmc
dec
mov
out
pop
cmp
push
nop
aam
outsl
xchg
sbb
mov
test
loop
ret
ss
sti
sbbb
div
pop
ret
lret
stc
jmp
mov
jg
xchg
or
hlt
out
mov
sbb
push
loop
imull
inc
mov
adc
or
fadds
jg
bound
mov
movsl
jns
sti
dec
imul
mov
jg
idivb
and
adc
sbb
das
rorb
daa
aas
pop
sbb
mov
inc
or
pop
add
rorb
adc
fdivr
mov
rep
fwait
inc
subl
dec
xchg
xchg
and
xor
pushl
gs
jne
add
rolb
dec
mov
lock
mov
xchg
push
mov
repnz
xor
mov
cli
fxch
call
xor
jb
inc
add
iret
sub
iret
cmc
sarl
out
bound
push
aad
mov
mov
adc
cltd
lret
or
push
xor
adc
cmp
enter
cli
aas
int
scas
mov
adc
mov
clc
ret
ret
cmp
mov
and
lahf
mov
bswap
xor
dec
mov
mov
cmpsb
sbb
dec
dec
cmc
jmp
push
ret
adc
vmsave
out
mov
xlat
mov
mov
jle
jmp
divl
scas
gs
daa
mov
out
xor
fstps
lods
add
aad
insb
and
es
cld
pop
adc
scas
lret
dec
adc
stos
subl
lahf
cli
lcall
mov
maxps
call
jge
pop
in
scas
dec
mov
mov
dec
loop
scas
dec
fsubr
aad
push
setns
aas
inc
mov
jl
jle
mov
and
or
mov
xchg
cmp
lret
xchg
dec
xchg
jg
sub
mov
pop
jge
subl
or
mov
mov
aas
mov
cmp
clc
pop
inc
fdivrs
mov
jmp
aaa
lock
xor
adc
scas
cwtl
xchg
mov
stos
or
pop
pop
into
xor
sti
xor
xor
adc
jnp
xchg
xchg
add
pop
rdtsc
jp
into
pop
push
sub
jmp
fistpll
or
mov
ss
dec
cmp
inc
fnsave
pop
xor
lret
cs
jge
sbb
lret
xor
sbb
mov
dec
sbb
lds
jp
mov
pop
imul
repnz
mov
ss
xor
mov
jp
jnp
ret
lret
leave
shl
mov
int3
jmp
aas
xor
in
mov
fwait
mov
sbb
sbb
mov
or
das
data16
ret
xlat
xor
mov
and
cmp
sbb
push
pusha
lods
pop
add
mov
int3
int
fdivrs
hlt
cwtl
mov
pop
clc
jo
mov
aas
lahf
call
jae
imul
or
mov
sub
rcl
imul
mov
fdiv
jecxz
lret
or
sub
nop
xchg
cld
cs
nop
aaa
adc
std
xchg
lahf
or
or
sbb
mov
lret
and
cmpsb
imul
out
out
or
sub
js
stos
cmp
and
and
in
add
int3
mov
hlt
mov
cli
push
push
cs
cs
scas
sti
pop
ljmp
push
and
inc
sbb
lock
fwait
aaa
push
fcomp
mov
loopne
cmpsl
sbbb
pop
ds
fnstsw
sbb
rorl
xchg
lds
js
cmp
fbstp
jns
ret
movq
ret
sub
or
leave
rolb
clc
mov
xor
push
or
mov
xchg
and
mov
insl
aaa
call
mull
mov
outsb
mov
movsb
shl
jmp
xor
jb
or
or
or
lret
cmp
cmc
pop
adc
sti
add
jecxz
mov
pop
sbb
pop
push
ss
cmp
sub
and
lret
xor
xor
addr16
shlb
fsubl
jb
jmp
mov
sarl
lds
imul
stos
mov
add
clc
stos
out
mov
and
cmp
cli
mov
or
lcall
out
cltd
icebp
push
jnp
mov
xchg
into
cli
jle
add
mov
and
inc
xor
xchg
or
mov
pop
sbbl
xchg
clc
stos
pop
fbstp
shrb
adc
mov
clc
insb
sbb
pop
lds
mov
adcl
mov
scas
or
stc
or
cmp
mov
jmp
mov
and
jle
xchg
or
push
sub
mov
lcall
sbb
push
adc
mov
jp
jg
lahf
mov
mov
out
punpckhbw
sub
lcall
sbb
stos
mov
test
mov
mov
mov
movsw
fdivs
dec
mov
or
xor
nop
sbb
mov
ret
jo
mov
mov
cmp
nop
jne
or
cmpsb
scas
mov
inc
mov
push
es
ficompl
shrb
adc
mov
int
notb
nop
or
mov
mov
lcall
clc
mov
negl
mov
inc
inc
sbb
cmp
xor
mov
add
repz
adc
mov
jbe
mov
clc
jb
js
in
pop
stos
inc
jo
xor
push
xor
es
push
pop
ja
aaa
sahf
pop
sbb
inc
cld
lock
jbe
packuswb
mov
dec
sbb
mov
rorb
sbb
test
xor
jo
xchg
adc
imul
jle
add
push
xor
and
push
mov
push
pop
test
add
imul
out
dec
mov
int
mov
lret
lea
aaa
mov
mov
aas
sub
clc
adc
stos
and
scas
jnp
ret
dec
mov
or
fadds
inc
repz
or
dec
push
dec
sahf
sub
movl
xor
add
push
loop
clc
movsl
xlat
pop
mov
pop
or
mov
ret
push
lahf
pusha
sub
cmp
add
jnp
mov
lret
dec
and
or
or
idivl
movb
aas
imul
das
jnp
cli
lret
shlb
push
daa
mov
fnstenv
das
cli
orl
pop
or
sarl
mov
call
aad
int
mov
jg
xor
repz
mov
aas
aas
stos
imul
mov
adc
mov
cmp
imulb
scas
decl
adc
mov
or
loop
sti
or
mov
mov
aaa
stos
scas
or
loopne
push
clc
add
jle
int3
mov
loop
or
cmp
dec
jne
mov
rclb
cmp
adc
ret
pushf
jbe
mov
mov
mov
ja
fcmovnb
or
cs
sbb
sar
ret
xor
cmpsl
mov
xchg
jno
mov
ljmp
mov
idivl
test
mov
cld
or
clc
or
sub
push
sbb
loopne
out
mov
das
inc
dec
or
jae
pop
cli
dec
add
and
test
adc
pushf
mov
sub
jecxz
inc
pop
adc
out
inc
mov
cli
push
xor
pop
dec
mov
movsl
or
xchg
push
fstps
mov
shlb
jns
cmp
xor
outsb
das
pop
xor
das
daa
jg
or
out
lea
ljmp
push
sbb
scas
add
adc
push
push
mov
cli
loop
mov
repz
and
add
sbb
push
fwait
cmp
lock
js
stos
and
dec
xor
push
daa
cmp
mov
mov
loop
outsb
sbb
incl
fcoms
bswap
out
scas
sbb
nop
ljmp
jle
cmpl
xchg
ret
mov
add
aas
xchg
ljmp
mov
and
mov
popa
mov
sarl
cli
or
enter
jg
pop
mov
add
pop
cmp
mov
insl
das
jmp
dec
mov
mov
xchg
shrb
repnz
fwait
out
pushf
lret
mov
push
mov
ja
cmpsb
cmovne
jb
xchg
inc
sbb
test
mov
jnp
cmc
inc
jb
sbbl
fwait
and
mov
mov
fbld
cli
in
sub
push
pop
lock
cwtl
jp
add
repnz
enter
mov
das
test
lcall
jbe
and
dec
addb
or
loopne
adc
stos
fistl
std
or
mov
xor
mov
ficoml
sbb
jo
out
or
pop
mov
push
cs
jp
xchg
sub
mov
lods
push
dec
sub
adc
ss
jnp
or
fwait
cmpsl
out
or
dec
mov
dec
xchg
mov
inc
or
jnp
movsb
jmp
adc
jmp
out
ljmp
ja
xchg
dec
mov
dec
jns
hlt
or
rorl
mov
inc
or
xchg
dec
pop
or
mov
dec
sbb
dec
outsl
call
jbe
shll
mov
lcall
stos
jmp
dec
xlat
enter
mov
dec
and
mov
adc
jmp
xchg
das
mov
or
push
xor
mov
jmp
sbb
ljmp
or
loope
or
loope
jns
mov
sbb
sbb
lods
cltd
outsl
or
sub
mov
scas
lods
ss
enter
mov
mov
jmp
add
int3
mov
cld
outsl
imul
imul
or
fwait
or
mov
push
scas
repz
jbe
das
or
lock
mov
stos
cld
dec
fsubrs
das
mov
sti
sbb
das
mov
scas
ret
dec
lret
imulb
scas
mov
loope
cwtl
dec
jo
xchg
test
push
dec
mov
outsl
clc
rorl
or
bound
outsb
cmp
dec
or
fwait
lret
mov
mov
imulb
scas
sub
jecxz
lret
stos
enter
out
sbb
inc
sbbl
call
mov
aas
lret
arpl
loop
dec
cltd
aaa
stos
cmp
stos
out
cs
call
cmc
test
mov
dec
or
aas
jnp
shl
cs
mov
or
inc
in
mov
jmp
xlat
js
sub
fcomps
loop
inc
xor
repz
or
stos
insl
sub
lret
jg
adc
cmp
sbb
mov
ficoml
loop
dec
aaa
or
lcall
and
mov
out
into
pusha
clc
pop
pop
mov
mov
mov
lods
outsb
xor
sub
mov
or
sub
mov
es
jge
xor
inc
mov
repnz
mov
scas
inc
stos
inc
ret
insl
or
xor
and
or
call
lret
inc
test
stos
icebp
or
mov
cmp
icebp
or
stos
mov
mov
lret
in
cmp
jmp
sub
test
mov
sub
jmp
sbb
or
imul
jmp
lret
stos
add
mov
or
mov
or
sub
cli
stos
leave
dec
or
jae
dec
sub
out
ss
sub
or
dec
stos
int
inc
or
sub
lret
inc
stos
mov
in
push
aad
gs
dec
mov
mov
into
mov
scas
mov
and
mov
repz
cli
add
stos
or
or
hlt
call
mov
mov
sbb
rorb
mov
sub
shrb
pop
outsb
fcmovb
pop
sbb
clc
mov
lods
loop
shlb
mov
mov
clc
mov
nop
adcb
nop
data16
xorl
fcmove
ss
das
repz
sti
sbb
cmpsl
sub
iret
mov
and
pop
shrl
cli
out
inc
popf
mov
and
inc
bound
or
stos
sbb
ret
lret
ljmp
or
inc
mov
pop
or
fimull
mov
stos
and
clc
jmp
push
scas
fmull
ljmp
scas
stos
dec
cli
ljmp
ljmp
dec
ja
sbb
insl
xor
cmpsl
cmp
mov
stos
and
jb
insb
lret
ljmp
mov
gs
jnp
fwait
or
pop
andl
pushf
mov
or
cltd
cmp
sbb
push
dec
mov
or
cs
mov
xor
lods
cmp
mov
dec
mov
imul
pusha
sbb
mov
pop
out
cld
cltd
push
xlat
cld
and
cmp
or
stos
cli
pop
cmp
lods
adc
nop
nop
mov
sbb
imul
stos
decb
jo
bound
xchg
test
mov
sarl
xlat
stos
jmp
scas
cmpl
outsb
negl
gs
cmp
mov
pop
jg
mov
mov
mov
call
lcall
push
rcrb
fidivrs
and
add
sbb
or
and
es
call
inc
call
mov
dec
or
repz
out
lods
mov
pop
or
scas
arpl
enter
mov
rcr
out
sub
in
or
fidivrl
int
fiaddl
mov
dec
mov
js
call
ds
shll
and
out
xchg
or
cmp
leave
loope
dec
inc
outsb
arpl
cltd
pop
gs
push
or
cli
scas
cli
ja
push
aad
sbb
and
jp
jo
cld
jmp
jae
add
imul
or
cs
pop
negb
push
inc
out
ja
scas
xor
sbb
jmp
mov
addr16
jle
pushf
outsb
pop
jo
cmp
std
mov
out
aas
inc
xor
imul
cli
scas
iret
fadds
cmpsl
into
jae
aaa
cld
out
fwait
sbb
cs
xor
dec
mov
xchg
lret
pop
or
cmp
pusha
jle
outsb
das
inc
imul
aam
jae
cmpsl
dec
imul
jbe
scas
jg
ja
jmp
decl
es
iret
mov
xor
dec
sbb
xor
daa
repnz
mov
or
jo
imul
sbb
stos
imul
fwait
or
jp
in
call
jnp
jg
jnp
scas
jnp
mov
adc
lahf
jae
stos
pop
jbe
mov
lret
int3
push
decb
sahf
push
xchg
in
jmp
lcall
jmp
cmp
mov
pop
icebp
jle
jp
push
fidivrl
out
clc
jp
lret
inc
fs
jb
mov
dec
lock
ja
mov
test
xchg
cs
aam
clc
scas
clc
jno
inc
push
or
ret
mov
mov
aad
pop
mov
popa
mov
push
add
cs
cmpsl
ret
das
imul
lock
or
scas
mov
jb
mov
add
repnz
bound
imul
les
mov
dec
pop
jge
xor
lret
loope
call
dec
mov
repnz
mov
ja
lret
cmp
cld
and
mov
mov
sub
sub
fistl
push
enter
mov
dec
daa
imul
stos
incl
cmp
cmp
sub
enter
xchg
mov
test
shll
adc
lods
imul
jg
sarb
rcll
out
add
jmp
repz
cmovg
xchg
idivl
lret
insb
xor
or
sarb
or
cmp
scas
dec
jnp
scas
stos
mov
xor
add
dec
push
mov
mov
or
shrb
sub
mov
or
fidivl
add
aaa
or
add
clc
sbb
dec
repz
ds
out
ja
push
xor
cli
pop
ja
cltd
mov
loop
add
imul
sar
stc
scas
dec
mov
pop
or
jno
dec
jno
xor
test
jnp
sub
cmpsl
sbb
jmp
jmp
cs
ljmp
push
pop
lret
stos
mov
add
pop
imul
adc
dec
xchg
ljmp
ss
dec
add
or
sbb
mov
into
adc
imul
aaa
xlat
cmpsl
dec
cmp
lcall
shl
or
ficoml
lret
xchg
xchg
add
mov
jo
adc
into
lahf
rcpps
mov
add
cmc
outsl
cmpsl
fldt
pop
jo
jp
and
xchg
fmuls
fidivrl
dec
imull
and
adc
inc
inc
int3
push
or
lret
out
mov
fwait
sti
mov
mov
call
ljmp
mov
dec
dec
repnz
push
in
call
sbb
mov
push
cmp
fimull
cwtl
mov
ret
stos
xchg
cmp
jae
xchg
aaa
daa
jg
sbb
jg
lahf
aam
jo
mov
push
aas
adc
sub
daa
mov
lret
ret
arpl
xchg
sub
scas
adc
pop
fistl
inc
mov
inc
in
sub
or
or
mov
pop
jmp
jno
bnd
inc
mov
mov
lock
mov
sbb
adc
ja
stos
sqrtps
rolb
or
or
lahf
das
xorl
jnp
pop
push
dec
addr16
test
daa
xchg
push
fistpl
arpl
ja
std
movsb
int
mov
cltd
and
inc
aas
dec
imul
cmp
stc
lret
push
loope
pop
mov
sahf
imul
dec
adc
jae
jo
inc
sbb
jg
add
out
mov
call
outsb
cmp
stos
int3
dec
outsb
or
cmp
xchg
lret
scas
ljmp
or
mov
lret
out
push
xor
fsubp
into
test
stos
jae
insl
mov
cld
push
sub
loopne
mov
cmp
je
cld
dec
int3
lret
dec
mov
adcl
xlat
mov
adc
cld
sub
scas
dec
jmp
push
call
or
jecxz
sub
ud2
inc
in
call
sbb
cltd
push
mov
je
mov
cli
adc
mov
xchg
push
jno
push
cs
lock
jnp
inc
insb
rclb
sti
cmp
test
add
icebp
mov
push
mov
mov
ret
sub
mov
or
sbb
sub
leave
ja
icebp
adc
jno
inc
cmp
mov
mov
adc
mov
lret
mov
lret
rcll
lcall
inc
insb
test
outsl
jg
mov
out
jb
clc
xchg
aad
or
or
cpuid
call
mov
or
or
mov
or
enter
adc
mov
outsb
clc
or
jecxz
or
mov
mov
sub
shr
test
call
push
dec
fwait
lret
sahf
sbb
addr16
push
push
mov
orb
testl
int3
dec
stos
xchg
test
bt
es
negl
inc
jg
imul
cmpsl
jne
imul
arpl
clc
fwait
ljmp
sub
jg
loopne
stos
mov
mov
call
pop
push
push
mov
mov
movb
out
bnd
out
cmp
sub
sahf
cli
rorb
cmpsl
lds
pop
scas
dec
jg
sahf
outsb
lret
outsb
xor
stos
inc
inc
in
loopne
fidivs
sub
push
mov
mov
sbb
mov
mov
or
aas
sbb
pop
sbb
cwtl
fdivrl
mov
adc
fs
and
dec
sbb
add
repz
pop
and
pop
and
jo
jno
movsb
mov
jbe
loop
cmp
mov
fnsave
xor
push
mov
maskmovq
sbb
or
sbb
testl
dec
repz
inc
rep
and
shlb
adc
int
xchg
out
or
push
rorl
sahf
addl
sbb
cmp
push
repz
lret
iret
mov
lods
nop
cli
sahf
popa
lahf
mov
popf
mov
add
mov
aas
mov
add
push
lahf
mov
jl
dec
cld
addr16
mov
subb
fisubl
pop
arpl
fdivrl
add
push
or
dec
rcl
in
xlat
orl
out
add
jp
repz
mov
cmp
faddl
cmp
lock
std
inc
adc
int3
cwtl
pop
stos
mov
aad
aam
dec
and
loope
xchg
das
push
mov
sbb
aas
mov
loope
xlat
pop
call
sbb
mov
sti
inc
ljmp
sbb
cwtl
jecxz
or
imul
clc
lock
push
ss
mov
scas
sti
fmuls
dec
mov
mov
cli
mov
scas
rclb
lret
dec
sahf
xchg
aaa
sbb
jbe
fistl
cmp
mov
xchg
dec
sbb
lea
jae
lret
lcall
aas
in
test
shrb
cmpsl
fimull
scas
ljmp
mov
aaa
push
imul
pop
or
cmp
out
repz
fs
pop
mov
outsb
mov
push
popf
ss
cld
test
jae
stos
outsb
pop
mov
shll
and
jne
mov
jmp
aad
mov
adc
sbb
movb
repz
dec
adc
aaa
or
das
cwtl
add
jb
push
jp
jle
cmpb
fisttpll
sbb
lret
cld
cmp
dec
xchg
mov
cs
into
or
fisubrs
lret
jecxz
lret
mov
pop
xor
mov
jno
mov
pusha
adc
cmc
mov
mov
cmp
cwtl
imul
imul
push
lret
stos
adc
mov
leave
insl
imul
call
mov
stos
cs
mov
jl
pop
mov
mov
dec
cmp
or
testb
int3
jb
out
lret
dec
out
push
jle
imul
in
stos
ljmp
sub
mov
inc
cmp
enter
mov
repnz
push
cli
mov
sbb
loop
dec
mov
test
dec
jae
call
dec
das
inc
ss
mov
ljmp
dec
or
or
sub
stos
in
ljmp
call
outsl
xchg
or
out
repz
in
jmp
dec
mov
jmp
rorb
cmpsb
dec
insl
imul
sub
dec
or
repnz
stos
xchg
stos
jmp
inc
int3
cmp
and
cltd
pop
sub
xor
jns
inc
clc
push
lret
inc
and
stc
je
in
or
mov
or
sub
push
and
cmp
sbb
add
or
ljmp
ss
and
push
cwtl
cmp
mov
outsb
lret
rorb
call
clc
into
jmp
or
stos
mov
movsb
sub
ds
into
adc
xor
cmp
mov
lret
ss
imul
out
adc
or
repnz
imul
jns
mov
aas
pop
ss
clc
mov
sarb
fcmovnbe
or
repnz
repz
out
dec
or
repnz
mov
or
or
mov
mov
int3
or
xchg
mov
ds
ljmp
push
sbb
cmp
or
inc
jnp
mov
add
pop
cmp
mov
out
or
pop
cmp
lret
jle
ljmp
jp
repz
or
int3
pop
fwait
sbb
lahf
hlt
cltd
in
imul
push
sub
sub
mov
dec
cmp
or
or
repnz
ljmp
inc
les
stos
or
sbb
add
pop
mov
ja
cmp
jp
mov
loop,pn
out
or
repnz
mov
sbb
out
jb
push
and
mov
xchg
xchg
mov
jg
cwtl
lock
inc
mov
int3
scas
imul
xor
sub
ds
repnz
out
xor
sbb
or
in
ljmp
or
jmp
stos
lret
into
dec
cli
es
out
sbb
jmp
pop
enter
out
inc
mov
test
dec
fimuls
lret
lret
out
adc
lret
mov
cmp
or
repnz
mov
dec
mov
cmp
pop
or
repnz
je
cmp
lret
mov
or
pop
inc
mov
and
negb
mov
push
dec
icebp
dec
jb
out
push
mov
sub
or
repnz
xchg
push
enter
inc
dec
out
cmp
jmp
div
mov
imul
pop
cmp
or
int3
push
mov
cmp
adc
ljmp
in
in
sub
sub
imul
or
repnz
cmp
jmp
mov
into
add
lret
mov
or
or
out
fiaddl
call
in
loop
sub
out
or
repnz
mov
cmp
or
decb
daa
int3
sub
sbb
or
sub
mov
push
or
into
test
mov
or
in
mov
or
repnz
mov
or
sub
dec
or
bnd
in
dec
imul
push
or
out
inc
xor
inc
or
push
cmp
mov
pop
mov
cmp
sub
repnz
mov
daa
ljmp
out
or
repnz
mov
mov
push
lret
or
repnz
mov
ljmp
repnz
jecxz
imul
or
repnz
scas
or
mov
jmp
mov
cmp
or
cmp
or
repnz
mov
dec
mov
cmp
imul
outsl
mov
leave
mov
cmp
or
repnz
repnz
mov
xchg
or
push
leave
in
push
mov
cmp
or
repnz
arpl
stos
ljmp
insb
or
out
jo
xor
mov
dec
mov
in
mov
dec
adc
jmp
lcall
aas
mov
lret
in
push
xchg
cmp
fwait
or
repnz
mov
mov
mov
mov
int
sub
sarl
imul
loope
dec
mov
mov
mov
pop
inc
xor
xchg
add
clc
push
cmp
xor
dec
mov
or
scas
or
insl
lret
mov
dec
jno
out
lret
pop
mov
dec
data16
or
or
mov
leave
jno
out
dec
pop
or
push
mov
out
mov
inc
mov
dec
mov
or
aaa
or
out
mov
inc
movsl
jmp
mov
dec
dec
or
inc
cmp
data16
mov
or
arpl
lret
jno
out
dec
pop
or
enter
dec
dec
es
dec
leave
or
or
es
arpl
mov
out
or
inc
mov
dec
or
or
arpl
mov
out
aaa
jno
out
mov
inc
mov
shl
ljmp
data16
or
or
or
call
mov
mov
dec
dec
cmp
bound
or
aaa
or
out
mov
inc
mov
dec
mov
or
pop
es
arpl
mov
out
or
pop
aaa
lret
out
dec
pop
or
lret
data16
mov
or
arpl
enter
call
call
mov
fimuls
inc
mov
dec
or
or
arpl
mov
out
or
inc
mov
push
jns
scas
leave
dec
mov
or
scas
or
insl
lret
mov
dec
jno
out
lret
pop
mov
dec
data16
or
or
mov
leave
jno
out
dec
pop
or
out
lret
mov
inc
mov
dec
mov
or
aaa
or
out
mov
inc
movsl
jmp
mov
dec
dec
or
mov
repnz
loope
push
lret
jbe
or
jp
sbb
or
cwtl
imul
mov
or
insb
imul
or
sub
inc
adc
aam
jmp
mov
imul
enter
sub
mov
lods
fnstenv
inc
and
imul
cmp
ljmp
mov
and
cmp
push
repz
imul
jo
aaa
cs
test
das
cmp
adc
lods
and
dec
pop
imul
shlb
inc
pop
dec
adc
cmp
mull
fwait
sub
pop
xchg
stos
xchg
pop
sub
lcall
cmp
dec
or
jmp
jp
sub
insl
pop
sahf
or
shr
ljmp
jnp
loopne,pt
jmp
push
xor
pop
stos
into
mov
cli
mov
mov
push
pop
jmp
ljmp
push
jns
or
or
sub
and
cmp
stos
test
ljmp
stos
jmp
dec
call
inc
or
or
es
sti
cmp
rcrb
inc
or
sbb
subl
stos
jae
ljmp
sub
push
jmp
in
pop
scas
jecxz
stos
imul
add
nop
sub
es
pop
sub
es
sub
mov
jns
cli
push
ljmp
jne
ljmp
xor
loop
sub
xor
sub
xorl
mov
push
sub
iret
xchg
push
out
test
and
mov
ljmp
xor
ljmp
or
mov
je
cli
ljmp
stos
sbb
cmp
cmp
std
adc
lret
or
or
insb
mov
mov
repz
ss
sub
mov
push
push
stos
inc
aaa
cmp
lret
lret
sarb
stos
jo
dec
sbb
mov
aaa
cs
mov
mov
stos
xor
insb
cmp
mov
sub
ljmp
lret
test
sub
pop
ljmp
mov
fbstp
jae
fidivl
or
insb
pop
xchg
lcall
stos
cmp
sub
hlt
test
sbb
shrb
lret
js
sub
daa
imul
xor
jecxz
xor
leave
lahf
test
fldt
xor
inc
pop
jmp
pop
call
sbb
xor
imul
or
fnstcw
mov
rorb
les
pop
push
inc
or
and
push
push
pop
sub
and
ljmp
sub
fmuls
mov
js
jb
mov
xchg
loop
push
or
push
test
ret
ss
add
lods
stos
outsl
xor
popf
jmp
iret
jnp
adc
sub
adc
push
ljmp
pushf
imul
movsb
imul
insb
imul
clc
imul
lods
imul
and
mov
and
jmp
inc
and
mov
dec
lret
mov
stos
test
fisubrl
mov
aas
add
mov
push
ret
add
daa
repz
pop
jle
into
add
scas
iret
test
mov
sarl
cmp
mov
inc
fsubrs
cmpsl
je
fidivl
mov
inc
jae
pop
mov
popa
adc
int
ja
mov
sahf
aad
stos
mov
clc
dec
ret
mov
or
aaa
shrl
xchg
das
lock
mov
mov
scas
jp
stos
int3
push
js
fbstp
outsb
cmp
sti
mov
mov
out
dec
mov
jo
rep
cli
std
ljmp
lcall
cmp
cmpb
sub
rclb
fistpll
sub
popa
dec
daa
xchg
jg
adc
ret
arpl
mov
jecxz
push
push
jo
sarb
xor
pop
mov
cltd
push
jecxz
jne
sar
loop
pop
mov
icebp
rcrb
stc
add
jb
ret
ret
andl
xchg
rcr
in
dec
mov
add
js
jns
dec
push
mov
jo
mov
adc
mov
xor
push
jnp
mov
xchg
mov
jo
add
negb
push
sbb
nop
dec
jbe
jl
mov
xor
repz
scas
das
jmp
int3
adc
jnp
mov
sbb
push
push
sbb
shlb
and
cmp
movsb
int
sti
and
repnz
jg
add
test
dec
repz
les
outsl
and
lcall
rcrl
ljmp
arpl
pop
ja
mov
fistpl
rcrb
loop
mov
inc
js
mov
push
mov
xchg
roll
call
mov
arpl
add
mov
push
mov
adc
pop
cmpsb
les
int3
xor
rclb
orb
out
mov
aaa
sbb
push
repnz
inc
ret
sarb
into
dec
cwtl
fcomip
mov
jl
jno
pusha
daa
lock
pop
xor
jg
jp
rol
dec
add
adc
lahf
xchg
pop
repnz
cmpsl
mov
lret
out
jnp
and
xor
adc
fisttpl
lret
cmpsb
jne
stc
and
ds
mov
or
out
mov
push
sub
sub
mov
inc
sbb
imulb
shll
ljmp
or
inc
or
stos
idivb
test
adc
push
lock
rcr
cmp
inc
ljmp
aas
sub
xlat
imul
ret
cmp
mov
in
shl
inc
adc
das
cmp
idiv
xchg
mov
fcomp
pop
or
mov
adc
bnd
cmp
int3
pslld
mov
nop
cmp
jnp
mov
loop
xor
lret
scas
aaa
push
push
rcrl
stos
stos
sbb
mov
shr
ficomps
sarl
into
es
imul
mov
imul
shrb
lcall
jae
cltd
subb
add
mov
mov
add
pop
fwait
and
push
pop
mov
add
pop
pushf
out
or
popa
or
pop
out
imul
es
sbb
mov
cmpsl
stos
sbb
hlt
mov
out
movsl
in
and
mov
stos
jnp
adc
mov
add
lods
mov
lcall
jo
outsl
cmp
push
cmp
ljmp
jmp
cs
add
clc
jnp
cmpsl
push
xor
inc
xchg
or
cmpsb
cmp
sub
rcrl
cmp
and
adc
add
ss
stos
or
push
jb
adc
pop
add
mov
stos
jl
jae
mov
int3
and
mov
sbb
push
insb
repz
jnp
mov
xor
ret
fwait
jb
mov
call
repz
mov
scas
mov
sbb
sub
and
pop
pop
roll
fisttps
xlat
sbb
jo
dec
mov
cmp
lock
mov
orl
fwait
clc
cltd
cld
push
mov
bound
out
out
insb
sub
test
sbb
stos
xchg
sbb
ret
jmp
out
repz
xlat
mov
pop
cmp
fcomi
aad
mov
and
in
subb
inc
push
mov
push
sbb
int3
xchg
jmp
fwait
rcrl
pop
mov
cmove
dec
loope
sti
dec
jecxz
adc
pop
xchg
insl
sub
mov
negl
incb
jmp
ss
adcl
xchg
push
imul
repnz
add
or
pop
insb
stos
fcmovnbe
test
jecxz
stos
outsl
mov
jmp
dec
xchg
push
push
sub
add
push
gs
pop
bnd
fs
add
imul
call
ljmp
add
fiaddl
inc
sub
pop
data16
jmp
cmp
mov
iret
imul
ror
rorl
jnp
mov
rcrl
jl
push
scas
aad
movsl
lret
jnp
and
test
cs
xchg
dec
fcoml
add
shl
movl
push
inc
pushf
sub
ja
lods
cmp
jecxz
jl
imul
add
push
jnp
leave
add
or
jnp
or
js
mov
push
icebp
dec
jbe
shr
mov
mov
icebp
sbb
fsubr
mov
inc
daa
testl
jmp
out
ljmp
ljmp
ljmp
call
out
cs
mov
sarl
icebp
fidivl
mov
cmpsb
mov
mov
dec
push
testl
cmp
mov
or
push
jle
mov
es
cmp
test
adc
andb
imul
sbb
outsl
inc
int3
insb
imul
or
test
and
aam
aas
cmpsl
mov
std
mov
or
imul
inc
ljmp
mov
inc
fisubrs
jnp
dec
stos
jecxz
pop
or
push
cmp
push
xor
pop
js
jnp
ret
or
cs
ljmp
in
in
and
or
mov
xchg
sbbl
mov
inc
push
xchg
loop
lods
inc
mov
xchg
adc
push
cltd
sub
xor
imul
jge
inc
mov
out
test
and
ja
push
push
rcr
push
push
sub
adcb
lods
add
push
test
scas
jmp
ljmp
dec
inc
and
addr16
sbb
mov
fs
push
xor
stos
cmc
out
rorl
rorb
cmp
jmp
pop
or
out
and
xor
or
or
or
jl
loope
ljmp
mov
sub
dec
nop
pop
cs
xchg
jl
mov
sub
xor
call
stos
dec
push
insl
pop
push
push
push
orb
cmc
dec
out
loope
fimull
xchg
stos
sbb
add
lahf
cmp
cs
test
out
pop
stos
mov
xlat
pop
push
push
shl
lods
cmp
arpl
nop
pop
out
nop
idivl
dec
dec
repz
pop
jb
and
push
dec
xor
enter
mov
cs
aas
or
inc
jmp
pop
mov
mov
sbb
rolb
dec
add
jg
ljmp
movsb
cmp
cld
fsubrp
lea
sub
movsb
add
and
jmp
rcrl
lret
add
es
mov
mov
mov
add
cmp
pop
jp
pop
imul
int3
loopne
ljmp
sbb
mov
or
sub
inc
or
sub
not
cmp
test
push
popa
xor
test
xchg
out
or
es
les
or
iret
dec
stos
xchg
nop
sub
sti
dec
sub
cs
stos
sti
lea
ljmp
ds
jns
sti
inc
sbb
jmp
out
mov
stc
ljmp
test
pop
or
popa
cmp
imul
stos
mov
call
sbb
cs
cmp
jo
xor
sub
pop
dec
out
cmp
cmp
ja
ss
cmp
inc
or
sub
dec
sbb
test
cmp
iret
push
sbb
test
adc
cmp
push
js
dec
push
push
mov
out
or
cli
int3
ss
inc
repnz
addr16
or
push
mov
jno
push
roll
push
cmp
pushf
cmp
into
ret
mov
add
sti
cmp
sbb
xor
cmpsl
call
cmp
ror
inc
lret
sti
addr16
nop
cmp
sbb
clc
or
mov
jmp
jmp
add
xchg
std
push
and
mov
xor
xor
or
pop
es
cmp
mov
push
mov
mov
mov
loop
add
xor
ljmp
lock
add
or
das
data16
dec
mov
stos
cmp
clc
das
jge
mov
sbb
scas
sub
mov
jp
popa
pop
xchg
or
imul
sub
inc
inc
popa
scas
es
out
push
push
cmp
sub
or
repnz
xchg
push
imul
cs
cmp
sbb
test
mov
ljmp
push
pushw
dec
insl
dec
mov
mov
sbb
mov
or
mov
or
jnp
mov
push
stos
daa
cmp
cs
in
and
dec
daa
xchg
adc
mov
add
in
scas
cs
lods
xor
push
or
cli
mov
mov
pusha
sbb
cmc
xor
pushf
sub
or
push
cmp
mov
or
jne
jne
imul
insl
and
loop
test
aam
adc
xchg
mov
push
or
pop
cmp
fstpl
mov
in
popf
enter
jbe
fildl
inc
int
arpl
push
pop
and
xor
fcomps
or
js
cmp
cmp
push
std
ret
lahf
imul
pop
gs
cwtl
xchg
ret
cmp
fimull
addb
pop
jbe
sbbb
and
xor
les
hlt
icebp
pusha
lret
and
jp
or
inc
inc
loop
mov
ja
shrl
ja
xchg
mov
or
imul
mov
pop
jno
loope
ljmp
ljmp
es
or
jl
popa
jb
and
sub
mov
sub
inc
repz
mov
fsubr
orb
pusha
sub
adc
sub
or
adcl
jae
stos
inc
aas
sbb
lods
sub
lods
imul
cmp
sub
adc
inc
inc
xchg
jmp
cmp
adc
lods
and
cmp
dec
lret
xchg
push
in
clc
add
test
xchg
push
mov
add
inc
sbb
push
stos
int3
lcall
loop
adc
dec
mov
scas
jb
cmp
out
lock
bound
fcmove
mov
inc
testb
mov
or
cmp
mov
mov
mov
lock
or
mov
sbb
sbb
mov
repz
push
bnd
loop
loop
lods
in
xchg
inc
push
xor
cmp
add
sbb
inc
jecxz
jno
inc
aas
mov
adc
inc
cmpsb
test
sub
and
dec
lcall
shlb
dec
in
mov
or
mov
sbb
bound
in
cmp
je
add
adc
adc
mov
test
xchg
pop
call
rcll
shll
loop
mull
pop
or
cmp
fcom
sbb
pop
sbb
es
adcl
repz
and
psrld
mov
sbb
div
rcrb
xchg
enter
fwait
inc
sub
loope
mov
mov
lods
sarb
jp
push
clc
adcb
loopne
int3
dec
mov
loopne
inc
inc
mov
clc
cmp
in
mov
mov
mov
adc
pop
bound
and
mov
xor
add
sbb
cmp
or
ret
push
dec
mov
cmp
sti
cmpsl
in
xchg
out
adc
imul
mov
mov
mov
mov
inc
fwait
lock
and
sub
cmp
movsb
push
subl
and
inc
call
add
xor
stos
xorl
das
mov
inc
pop
pushl
pop
cmp
mov
add
jnp
repnz
mov
arpl
dec
aam
sub
push
lret
sbb
mov
hlt
out
lret
imulb
xor
movsl
inc
xchg
ss
out
inc
dec
cs
dec
in
cli
sbb
cmp
xor
and
es
clc
xor
push
inc
push
cmpl
push
sbb
ds
push
inc
ljmp
push
and
clc
js
add
iret
or
fmul
fbstp
or
sbb
cli
dec
jo
cmp
mov
or
daa
inc
adc
cli
push
cmp
mov
cmp
sbb
int
push
add
imul
into
inc
jle
jmp
ljmp
jmp
dec
add
icebp
push
nop
inc
notb
es
cltd
xor
or
stos
dec
inc
lods
lods
ljmp
or
push
adc
aad
inc
adc
cmp
shlb
ds
je
dec
cli
imul
sub
imul
cli
cmp
or
repz
mov
ja
rclb
xor
inc
add
xor
in
sub
cmp
ss
mov
pop
sub
push
aam
ljmp
or
aaa
inc
int3
dec
ds
adc
int3
ss
dec
enter
wbinvd
aam
negb
clc
lods
icebp
add
inc
ljmp
jo,pt
scas
or
xor
mov
stos
int
jbe
sub
decb
push
dec
daa
repz
push
push
push
clc
adc
jmp
mov
inc
xor
ret
das
icebp
pop
xchg
add
lock
out
fs
aam
stc
mov
int3
add
mov
sub
inc
mov
push
inc
push
cmp
jnp
ret
add
sub
mov
or
xor
cmp
rol
cmp
mov
mov
arpl
mov
rorb
in
rclb
mov
or
mov
mov
mov
test
lret
leave
adc
fcomps
mov
cmp
dec
jmp
rorb
cmp
repz
jno
and
adc
sub
adc
aaa
inc
xchg
dec
or
xchg
push
outsl
xchg
and
or
js
sbb
sbb
aad
std
outsb
and
sub
inc
lcall
icebp
and
insl
mov
sub
or
in
mov
ljmp
lods
imul
bound
lcall
clc
stos
cmp
outsb
lret
inc
out
pusha
jg
es
out
fdivs
jnp
xchg
xlat
fdivrs
cwtl
pop
lock
push
ljmp
add
and
scas
mov
mov
stos
push
in
js
xchg
test
mov
mov
es
lock
or
clc
mov
bound
mov
inc
pusha
lcall
sub
push
lock
inc
lcall
lock
addr16
inc
mov
shrb
cmp
stos
addr16
lods
dec
mov
mov
stos
repnz
mov
insb
xchg
jns
imul
xor
jmp
ret
sbb
or
dec
loopne
lret
scas
scas
mov
mov
jmp
rorb
adc
push
pop
pop
es
or
repnz
push
cmp
dec
int3
sarb
sbb
sub
add
cli
jp
cld
cwtl
clc
or
jae
inc
push
push
cli
mov
insb
xchg
lods
fsubs
imul
cmp
test
xchg
lds
inc
mov
jmp
xor
mov
inc
mov
xor
in
xor
push
sub
push
es
daa
ljmp
inc
scas
mov
push
xor
pusha
shr
mov
aaa
sub
push
stc
sarl
lds
xor
cmp
add
das
jmp
ja
xchg
ljmp
ret
enter
add
call
cmp
and
or
call
mov
or
cmp
leave
mov
mov
pop
insl
adcb
call
xor
xor
cmp
push
jns
mov
adc
mov
into
call
das
out
lods
fdivs
mov
fstl
mov
push
cld
sub
jae
adc
cmp
shll
sbb
cmp
push
push
ja
into
adc
mov
dec
nop
cwtl
inc
add
dec
inc
sbb
fwait
stos
mov
imul
adc
xchg
lahf
stos
pop
aaa
xchg
push
mov
and
cld
ljmp
vpunpckhwd
pop
cmpsl
mov
xchg
ror
adc
sbb
das
stos
sti
mov
sbbl
sbb
adc
cli
fdivl
stos
popf
out
out
popl
xchg
fcmove
sbb
adc
mov
mov
sub
jmp
imul
jg
arpl
push
lret
outsl
push
xor
adc
pop
gs
mov
pop
lods
cmp
add
out
push
jp
sbb
add
xor
and
clc
ljmp
mov
jae
or
adc
pavgw
xchg
repz
enter
pusha
loopne
sub
push
xchg
push
lock
jmp
mov
fsubrs
xor
inc
cmp
mov
fsubrs
repnz
frstor
daa
pushf
mov
mov
adc
ret
icebp
imul
or
sub
sub
sub
mov
stos
loopne
clc
inc
mov
ror
adc
mov
or
jo
loop
jo
sbb
mov
or
inc
sti
ljmp
imull
mov
imul
push
mov
xor
jecxz
mov
sub
outsb
cli
cmp
jbe
cwtl
pusha
or
and
push
jns
arpl
mov
popf
mov
rcl
sbb
cmp
jmp
popf
insl
call
jo
call
cmp
sarl
imul
or
add
adc
mov
fcomi
out
addr16
inc
into
test
sub
xorl
stc
imul
jnp
roll
cmp
stos
add
push
out
test
and
icebp
inc
rorl
ficompl
xchg
xor
addr16
fmull
test
mov
ljmp
mov
mov
cmpsl
cmp
stc
js
mov
sbb
ljmp
sub
std
sub
in
test
out
cmp
push
jns
fimuls
mov
jo
fcoms
stos
scas
cmp
jnp
insb
jo
xor
jecxz
popf
xchg
adc
imul
xchg
fldl
xchg
rorl
xchg
iret
sbb
lret
cmp
pusha
dec
xchg
push
adc
mov
jne
push
jecxz
idivl
jns
aas
repz
push
ret
mov
dec
fcmove
repz
inc
jb
adc
pop
bound
mov
mov
inc
fiaddl
into
popa
xchg
sbb
add
cmp
imul
jg
into
add
inc
loop
mov
push
das
bound
rorl
fnclex
jp
adc
mov
leave
stc
sbb
sub
jns
sbb
leave
push
inc
sbb
pop
add
lea
pop
cmpsl
and
daa
mov
mov
add
lods
cli
fidivrl
fmuls
cwtl
jmp
xchg
sbb
xor
push
ljmp
cli
cmp
pop
lea
ljmp
or
jns
in
adc
xchg
xor
xchg
sbb
into
cwtl
push
mov
or
mov
mov
js
mov
mov
cmp
or
dec
inc
imul
rorl
inc
repz
xchg
adc
jmp
mov
gs
fmul
inc
dec
xchg
jecxz
adc
jecxz
mov
addl
sbb
jecxz
imul
loopne
sbb
and
mov
push
sbb
mov
out
or
mov
cli
mov
pop
dec
sub
mov
jl
aaa
xor
sar
repz
push
out
or
jo
add
out
addr16
ret
or
pop
jb
adc
sub
xor
andb
add
adc
mov
cmp
push
push
mov
scas
cmc
inc
cli
pop
push
pop
les
fs
icebp
adc
push
inc
shlb
adc
sbb
out
rclb
push
lock
lret
lret
or
jne
mov
add
mov
xor
imul
orb
cmpsl
cmpsb
stos
cmc
negl
sbb
cmp
sbb
or
pop
mov
pop
add
jno
insl
inc
xlat
cmp
and
adc
add
sub
ljmp
btc
testb
inc
dec
adc
stos
jnp
out
roll
stos
push
jmp
cli
mov
cli
sub
mov
lret
in
adc
repnz
icebp
mov
cwtl
pop
pop
hlt
leave
or
roll
pop
mov
add
repnz
or
les
jnp
cli
jmp
hlt
leave
or
push
insb
inc
jmp
ljmp
es
aad
out
icebp
hlt
cmp
adc
pop
add
test
cmp
shr
cmp
pop
dec
adc
or
pop
bound
dec
inc
or
repnz
or
jnp
cmp
sti
stos
js
xchg
pop
ljmp
jecxz
cmp
dec
mov
cld
jmp
jmp
add
and
mov
mov
sbb
jg
mov
adc
xor
pop
arpl
js
addl
lret
jecxz
sbb
and
jmp
mov
sbb
jns
fisubrs
data16
jns
cld
fwait
mov
push
decb
lret
pop
push
ja
inc
int
push
push
pop
pop
es
fsubrs
dec
imul
mov
cltd
shl
movsb
cmp
sbb
inc
scas
popf
pop
lret
mov
ret
cmc
cmp
pop
out
sti
ss
pop
mov
sbb
fimull
test
sbb
mov
cmp
mov
cmp
daa
jmp
inc
shrb
pop
outsb
sub
xchg
fldl
cwtl
cmp
pop
jno
adc
push
popa
test
pushf
sbb
inc
mov
xor
dec
mov
mov
push
stos
mov
lock
lock
push
adc
nop
lock
mov
ljmp
dec
dec
loopne
cmpsl
adc
into
shrb
jp
daa
mov
or
and
lods
xchg
ss
mov
xor
adc
popa
mov
ljmp
cmp
ss
mov
mov
fiaddl
test
dec
mov
mov
hlt
aaa
in
inc
lss
mov
lcall
inc
and
lods
mov
mov
sub
cmp
or
push
rdmsr
or
clc
and
adc
dec
js
fistpll
clc
addr16
xchg
ljmp
or
sti
and
ljmp
dec
repz
or
pop
or
das
mov
imul
or
or
or
rcll
mov
jb
inc
aas
xchg
lods
inc
ja
mov
xor
mov
in
xor
repnz
inc
es
bound
arpl
sub
pop
adc
push
rcrb
les
add
dec
pop
mov
lock
mov
cmpsl
arpl
mov
inc
mov
call
rolb
pop
lcall
and
or
aaa
cmp
dec
inc
das
or
adc
push
adc
adc
ljmp
test
jp
add
fdivrs
into
repz
cmpsl
xor
sbb
dec
cmp
popa
xchg
jp
push
add
push
jnp
sbb
mov
push
lds
inc
addl
mov
push
dec
pop
or
push
fdivs
sbb
add
movsb
psubsw
mov
mov
mov
pop
loop
push
pop
lea
jo
xor
rol
mov
jmp
test
push
leave
mov
int3
stc
sbb
sti
jmp
jge
leave
cmpsb
out
and
outsb
push
in
jmp
jb
mov
fsubrs
or
mov
sbb
sti
ret
imul
movl
xor
and
dec
ljmp
and
ja
imul
sbb
xchg
stc
imul
aas
scas
push
leave
repnz
push
add
jae
shrb
adc
mov
sar
xchg
jae
xor
inc
cmp
icebp
and
dec
addpd
rcrb
insb
dec
jmp
jne
or
pusha
dec
mov
adc
mov
mov
es
add
das
xor
cmp
cmp
mov
dec
mov
addr16
jae
imull
jmp
mov
cmp
mov
sar
mov
jl
dec
hlt
or
jg
jmp
push
cmp
daa
sti
lods
lcall
imul
fsts
cmp
outsb
sub
imul
fidivrl
lcall
lret
sub
ljmp
mov
add
std
cli
mov
sub
mov
fwait
cmp
jp
xor
mov
or
or
imul
or
out
or
xor
jnp
leave
or
out
test
cmp
mov
cmp
push
out
clc
or
out
fcomi
xor
mov
idivb
or
cltd
or
cli
out
js
lret
pop
cmp
or
push
sub
repnz
mov
lret
fucomi
into
mov
cmp
lcall
lret
xor
stos
fidivrl
cmp
mov
sbb
out
push
dec
cmp
sub
out
or
stos
sub
bnd
enter
stos
mov
cmp
mov
sti
sub
sub
repnz
cwtl
cmp
or
leave
ljmp
mov
mov
or
sub
repnz
mov
xchg
cmp
cmp
cli
ss
mov
mov
pop
xor
cli
ljmp
stos
in
out
cli
sub
aaa
push
hlt
xchg
stc
fisttps
aaa
sub
aas
inc
bound
mov
dec
push
fmull
lret
outsl
cs
or
pop
lret
outsb
dec
or
xor
fs
jecxz
ss
jmp
sub
sbb
stc
pop
popa
mov
adc
mov
mov
mov
js
xchg
cs
mov
in
nop
sbb
or
cli
xor
or
sbb
jp
xchg
cwtl
or
out
stos
or
stos
mov
mov
inc
mov
dec
or
lea
and
mov
pop
xlat
xchg
ds
pop
or
cmp
mov
jae
dec
mov
out
jp
and
nop
jmp
or
or
dec
lret
pop
add
test
mov
push
add
or
fwait
repnz
callw
mov
mov
ljmp
xchg
rcrb
fimull
or
adc
out
leave
or
push
push
xor
mov
and
jmp
mov
mov
fistl
fwait
or
icebp
fs
push
cs
adc
mov
stos
clc
or
je
jnp
movsb
mov
or
push
shll
out
add
dec
fstpt
out
sub
adc
clc
push
or
mov
aas
or
imul
mov
and
dec
jnp
les
and
mov
mov
lea
js
add
mov
dec
sub
mov
xor
pop
out
clc
mov
shrl
enter
mov
and
lret
enter
or
adc
mov
dec
sbb
mov
xor
or
push
fadds
push
stos
cmp
mov
or
pop
mov
xor
lret
adc
mov
dec
test
jne
sbb
xor
or
dec
mov
sbb
sub
imul
mov
dec
sub
ljmp
dec
or
mov
lods
test
dec
fwait
push
jb
dec
ret
or
lcall
mov
ss
or
cmp
or
inc
jp
stc
mov
icebp
aas
lcall
enter
pusha
mov
mov
or
push
mov
mov
mov
dec
or
cmp
lret
or
in
dec
sbb
pop
or
push
dec
imul
or
insl
jmp
sbb
dec
inc
or
inc
add
or
out
or
xchg
lcall
adc
mov
sub
fimuls
and
sub
cmp
xor
dec
add
cmp
jae
dec
fptan
mov
and
cmp
and
stos
repnz
adc
mov
jns
mov
imul
es
fsubrp
ss
mov
mov
or
mov
scas
hlt
lret
pop
cmpsb
pop
lock
mov
jmp
out
stos
adc
jg
enter
lea
insb
cmp
mov
sub
mov
lret
or
sbb
dec
les
or
repz
mov
or
mov
sbb
cmp
or
push
xor
push
shll
stos
mov
repz
mov
mov
clc
jp
or
or
push
cmpsb
or
mov
inc
repz
je
inc
or
mov
push
in
sub
mov
sub
in
fmuls
out
leave
adc
arpl
sti
xchg
xchg
or
fdivrp
cmp
or
jmp
test
push
sbb
stos
inc
outsl
rclb
cmp
data16
push
pop
clc
mov
cmp
mov
push
jns
js
pop
mov
mov
orb
push
lahf
out
dec
cmp
push
mov
jmp
lcall
shrl
cmpsb
stos
inc
imul
les
cld
lret
shrb
insl
sub
mov
out
ss
sbb
mov
sarb
inc
icebp
inc
jb
cmp
jae
mov
mov
or
mov
es
addr16
jae
fdivrs
cmp
push
inc
ljmp
mov
icebp
cmp
lret
mov
cmpsb
lret
or
cmp
imul
stos
cwtl
cmpb
inc
ljmp
leave
in
clc
ljmp
call
imul
push
pop
sub
push
sbb
imul
push
mov
jb
mov
dec
sub
sbb
inc
bound
lret
sbb
dec
add
lret
sub
mov
jle
hlt
jo
mov
or
jb
adc
mov
push
xor
or
pusha
mov
mov
out
cmpsb
clc
mov
and
out
mov
in
test
sbb
inc
jns
pop
pop
sub
sbb
dec
pop
cmp
dec
fstps
sarb
sbbl
ljmp
fcompl
cli
cmp
jmp
mov
xor
mov
int3
pop
dec
sub
cmp
mov
mov
or
sub
and
or
pop
adc
out
scas
sub
mov
adc
ljmp
sub
cwtl
xor
cld
ficompl
dec
or
movl
or
aaa
dec
jl
sub
mov
clc
dec
mov
jae
je
sub
jl
mov
int3
mov
out
int
or
aas
idiv
adcb
dec
inc
ficomps
mov
xor
or
fiaddl
jns
adc
jno
aam
cmp
cmp
or
dec
aas
mov
inc
adc
mov
lea
je
xor
add
mov
cwtl
aam
inc
sub
add
cltd
leave
sarb
mov
lea
je
xor
push
cld
jns
imul
and
ljmp
or
mov
xor
push
call
adc
ret
sbb
mov
sub
sbb
adc
mov
sbb
or
jp
arpl
cld
add
lds
or
cmp
stc
je
ljmp
jmp
cmp
mov
andb
scas
cmp
je
mov
das
mov
mov
daa
or
jno
add
dec
mov
mov
push
push
jb
xchg
cmp
mov
pop
mov
mov
sub
fstl
lods
enter
les
or
repz
push
or
mov
push
cmp
or
arpl
div
mov
mov
call
mov
and
scas
push
dec
test
ret
sti
out
int
fstpt
pushl
cltd
dec
sub
or
lret
mov
xchg
or
lret
call
or
mov
in
dec
mov
lea
scas
dec
dec
pop
push
jno
or
or
imul
mov
xchg
or
inc
sub
push
clc
fwait
and
cmp
mov
pop
jns
imul
mov
icebp
subl
sub
or
sarl
ds
flds
aaa
mov
sub
dec
push
mov
dec
jns
mov
adc
fwait
push
mov
push
lret
fwait
jp
adc
sub
repnz
mov
call
dec
pop
adc
xchg
push
inc
daa
and
xor
jp
cmpsb
cmp
or
sbb
out
mov
cmp
cmpsb
mov
stos
imull
scas
test
aas
mov
xor
sbb
out
sbb
ljmp
or
cmp
inc
jmp
mov
push
cmpsb
xchg
push
call
call
mov
ds
or
mov
xor
stos
mov
mov
fwait
mov
adc
mov
xor
push
mov
push
ds
cmpsl
add
pop
insl
pop
sti
fcmovnb
mov
call
or
push
xor
push
outsb
mov
or
mov
leave
insb
cmp
sub
negb
xor
mov
je
cli
mov
jo
lea
pop
clc
ret
lret
or
in
ret
or
cmp
sbb
f2xm1
mov
push
fwait
or
dec
lcall
pushf
sti
or
or
lret
into
or
imul
cmp
sub
or
xchg
mov
or
cwtl
or
sub
mov
sub
or
stos
adc
fdivrs
mov
mov
dec
dec
fisttpl
js
stos
cli
sbb
xor
pop
pop
incl
mov
out
jmp
sbb
dec
sbb
cmpsl
cmp
mov
mov
mov
jp
add
lret
jmp
dec
push
mov
adc
sbb
ret
fwait
out
jb
lea
or
outsl
mov
cmpsb
jl
mov
sbb
sub
sbb
call
les
jne
mov
jae
or
or
cmp
mov
push
sub
sub
sub
dec
das
jmp
fdivs
cmp
stos
stos
jno
push
mov
or
push
mov
imul
sbb
sbb
pop
stos
pop
pop
ret
call
sub
out
fistpl
icebp
out
mov
lods
popa
repz
mov
outsl
and
push
nop
adc
xlat
lret
in
je
or
out
lcall
dec
cmp
lret
xchg
lcall
lret
mov
mov
xor
xor
cmp
cmp
cmpsb
jnp
call
outsb
jno
add
or
in
mov
or
mov
out
dec
movsl
repnz
ds
pop
lret
inc
or
dec
mov
or
hlt
pop
fwait
or
cld
insl
clc
lret
mov
jp
je
incb
lret
mov
pop
or
stos
push
mov
int3
bound
shlb
data16
ret
mov
push
pushf
lret
mov
mov
push
outsb
mov
mov
in
mov
mov
rorl
lds
or
cmp
leave
cld
lret
and
mov
cmp
xchg
pop
leave
ror
cltd
cmp
push
mov
in
test
icebp
fldenv
ljmp
and
mov
mov
lods
or
sbb
or
out
push
call
clc
add
testl
repnz
lret
jg
inc
les
mov
aas
or
stos
mov
or
out
jmp
mov
inc
xchg
or
push
jle
loop
lret
lret
jne
mov
cmp
mov
inc
xor
add
add
mov
sbb
sub
bnd
cmp
or
out
stc
cmp
lret
andb
dec
sub
test
stos
into
cmpsl
or
adc
ljmp
sbb
mov
pushf
push
or
mov
or
rol
pop
pop
sub
in
pop
adc
mov
das
lret
in
test
xor
cld
aaa
lret
mov
stos
fisubrl
repnz
bound
cmp
xchg
inc
lret
pop
mov
or
fsubrp
jmp
testl
cli
loop
or
adc
cld
pop
lret
mov
sub
xor
mov
mov
mov
stos
push
shrl
fwait
int3
dec
scas
jmp
mov
fmull
sub
test
fcoms
out
push
enter
scas
repz
lret
cmp
mull
stos
mov
stos
add
lret
mov
lret
mov
icebp
imul
lret
ljmp
in
inc
push
aas
adc
scas
lret
popa
add
mov
or
repnz
sahf
fidivrl
lret
in
mov
jmp
ret
ret
adc
lret
repnz
scas
jmp
sbb
lock
mov
xchg
out
lret
or
in
repz
mov
mov
test
imul
lret
repnz
idivb
mov
mov
mov
stos
rcr
clc
pop
sbb
pop
pop
cld
scas
lret
xchg
xchg
jb
mov
lret
fsubr
mov
adc
xchg
iret
stc
cld
lret
xchg
cmpsb
jb
mov
call
jecxz
push
or
stos
mov
cmp
idiv
out
les
or
stos
mov
divb
jmp
xor
pusha
shr
adc
jmp
xchg
mov
lret
mov
or
or
cs
pop
cmpsl
xchg
cmp
or
or
rep
cmp
cmp
push
ljmp
out
sub
mov
or
ljmp
test
imul
cltd
adc
stos
jmp
jmp
imul
negb
pushf
sub
stc
push
outsl
push
testb
cmc
xor
daa
sub
mov
testb
sub
stos
pop
add
ljmp
mov
mov
sbb
imulb
sub
ljmp
mov
jp
mov
mov
inc
xchg
cmp
xchg
dec
sub
lods
mov
add
inc
push
sbb
jo
rcrb
cmove
mov
repz
scas
mov
cmp
mov
mov
push
inc
call
aaa
and
fmuls
pop
sbb
lcall
loop
add
push
dec
lret
into
mov
mov
fiadds
push
loop
or
call
aaa
scas
adc
sbb
lcall
mov
aaa
mov
xchg
dec
xchg
es
lcall
cmpsb
call
aaa
outsb
adc
iret
jbe
sbb
add
xlat
sub
ja
mov
xchg
xor
clc
jle
paddsb
dec
out
jp
stos
ljmp
sub
mov
aaa
or
test
sub
or
sub
aas
sub
enter
dec
push
sub
int
iret
mov
dec
sub
stos
iret
sbb
sub
scas
call
mov
cwtl
cmpsb
inc
sbb
aam
fcmovne
mov
xchg
stos
jns
sti
js
lcall
jge
or
insb
jnp
mov
stos
into
dec
jmp
sbb
scas
into
pop
sub
or
js
push
dec
cld
into
dec
cwtl
xchg
bndstx
jns
cmp
int3
sub
in
cmp
push
sbb
dec
sti
mov
int3
mov
ljmp
mov
sbb
sbb
js
mov
dec
mov
jbe
pop
scas
sub
enter
mov
imul
jmp
leave
sbb
or
cmp
scas
mov
sbb
adc
jmp
call
sub
or
cmp
int3
dec
mov
sub
push
into
stos
or
or
push
mov
push
pop
int3
outsb
sub
mov
or
push
cli
orb
cmpsb
aad
lahf
pop
divl
cmpsl
sti
mov
lret
outsb
rclb
imul
pop
cs
lsl
cmp
push
jnp
adc
ss
jae
jnp
repnz
lock
loopne
ret
outsl
shlb
jnp
test
movsb
faddp
and
dec
cli
dec
sub
xor
idivl
dec
jb
cmpsb
pop
cmpsb
js
mov
mov
pop
stc
pusha
mov
clc
push
testb
jge
mov
jae
mov
aaa
mov
pop
stos
xor
dec
andl
jp
mov
fcoml
xor
nop
neg
sti
sbbl
in
cmp
mov
popf
add
test
or
clc
mov
dec
daa
rcrb
aas
cmp
cli
bound
cwtl
fisubrl
imul
xchg
dec
xor
daa
sbb
cli
ds
enter
pop
mov
pop
scas
cli
dec
fldcw
ret
inc
adc
add
dec
inc
int3
aas
jae
cmp
sub
mov
mov
or
jmp
and
dec
daa
fcompl
cs
jnp
sahf
scas
push
cmp
mov
cli
pop
cli
jl
sub
mov
enter
sbb
scas
imul
jp
dec
fyl2x
ds
mov
mov
testb
rorl
decb
cmc
hlt
test
ds
mov
hlt
test
sbb
shl
mulb
or
or
cmp
imul
mov
scas
leave
out
bound
ds
test
mov
inc
cwtl
hlt
test
jmp
push
out
push
jmp
mov
sbb
ds
cmc
repnz
mov
lcall
and
les
aaa
mov
test
rorl
mov
sub
pop
xor
sbb
xor
jb
pop
rcrl
jne
or
mov
nopl
jno
or
mov
pop
ljmp
mov
xchg
and
stos
inc
dec
rol
shl
bound
sbb
testl
sub
lret
mov
push
insb
pop
test
lret
jp
push
pop
cmp
jae
loopne
xchg
push
test
mov
or
lds
cmpsb
pop
xchg
sbb
clc
andnps
xchg
xor
mov
mov
stos
mov
dec
adc
xor
out
mov
jbe
lock
pop
sbb
jns
test
jmp
inc
clc
xor
dec
fiaddl
mov
fmul
push
dec
dec
std
cli
pop
nop
lods
hlt
jl
cmpsl
stc
cmp
mov
push
es
push
or
mov
xor
inc
test
scas
repz
or
addb
dec
jmp
mov
loope
enter
int3
imul
cld
jge
cmpsl
cld
mov
jmp
cltd
ja
mov
cli
fisttpl
cli
sub
test
mov
pop
cmp
stos
dec
aaa
loopne
push
mov
mov
clc
sub
mov
cli
or
sbb
push
cmp
ret
inc
punpckldq
cli
or
stos
jle
sbb
fbstp
mov
imul
stc
push
jae
cmp
out
negl
shl
icebp
lret
rolb
lret
and
imul
xor
cmc
aam
xor
aas
sbb
xchg
xor
and
pushf
mov
rorl
repnz
mov
or
sub
pop
cmp
call
out
xlat
pop
cmp
xchg
bound
insb
dec
pusha
jns
ror
std
repz
movl
push
dec
outsl
loop
stos
jmp
popl
mov
mov
cmp
cmp
imul
mov
or
out
mull
cmove
fisubl
leave
cmpsb
sub
fimull
ljmp
imul
xor
rorb
jmp
push
in
push
les
push
cmp
cmpsl
xchg
cmp
clc
cld
adc
sti
mov
shrl
mov
fcomps
push
sub
mov
inc
iret
fsubl
push
mov
stos
cwtl
dec
xchg
push
movsl
push
outsb
fwait
mov
cmp
push
mov
jp
mov
sbb
cmpps
or
jp
scas
stos
sub
dec
xchg
enter
and
pop
dec
in
dec
pop
jp
mov
stos
mov
cmp
cmp
idivl
mov
sub
and
adc
xchg
lods
and
stc
fldenv
lcall
pop
in
flds
clc
shrb
scas
cmp
lods
or
push
lock
dec
das
xor
sbb
js
mov
dec
xor
push
push
push
cld
orl
mov
mov
inc
dec
sbb
xor
cmp
mov
lret
ret
ljmp
cwtl
stc
mov
cmp
lcall
xor
das
mov
sti
stos
pop
xchg
dec
mov
fcoms
jbe
mov
jp
cmp
mov
cmp
fmull
idivl
stos
jecxz
sub
sub
std
jp
adc
mov
outsl
cmpsb
fnstcw
stos
ds
in
and
sub
xor
icebp
mov
iret
lahf
ja
aam
adc
mov
push
dec
clc
and
std
repz
xchg
in
sub
push
add
mov
and
repnz
mov
mov
inc
sti
adc
pop
mov
fdivrl
mov
or
jg
xchg
cmp
mov
aaa
jmp
push
mov
cmpsb
mov
add
pop
dec
stos
mov
fcoml
inc
jnp
or
push
in
subl
and
dec
inc
xchg
mov
sub
iret
out
mov
pop
imul
mov
jnp
sbb
sub
push
or
fnstcw
dec
mov
dec
jmp
mov
jnp
jecxz
cmp
xchg
push
xor
xor
int3
decb
xor
sbb
cmp
stos
xor
fnstenv
repnz
xchg
mov
ja
cmp
lret
adcl
out
jmp
ds
push
and
test
mov
or
cmpb
stos
inc
mov
sbb
or
mov
orl
mov
insb
mov
shll
sub
dec
repnz
out
sub
mov
jmp
mov
xchg
mov
call
inc
push
bound
mull
adc
push
push
mov
ret
idiv
mov
fwait
xchg
jns
xchg
xchg
movsb
dec
jge
inc
ror
lret
fimuls
cmpsl
xchg
mov
sbb
ret
pop
mov
into
aam
rdpmc
adc
push
xchg
lods
mov
leave
sub
mov
cmp
adc
cmp
rcrb
test
or
xor
lret
cli
sbb
in
pop
mov
or
xor
aas
out
cli
jnp
or
cmp
ljmp
pusha
push
lcall
sbb
xor
daa
cmp
jp
or
cltd
call
int3
dec
fsubrl
fisubrs
fimull
stos
es
frstor
sbb
call
sbb
lret
outsb
jmp
inc
lret
call
pop
mov
push
mov
lds
aaa
jg
outsb
jnp
jg
cmp
jne
sbb
jnp
shr
jg
sub
push
push
adc
mov
lock
xor
jl
sub
imulb
cmc
test
insb
jbe
jmp
bnd
stos
lcall
and
pop
fldt
push
push
icebp
icebp
sub
jno
lret
fwait
mov
das
cwtl
adc
pop
sbb
xor
lret
xchg
mov
pop
inc
cmp
pop
adc
pop
mov
repnz
sbb
ret
lahf
sbb
dec
cld
mov
cltd
es
stos
mov
fs
pop
fdivrl
adc
pop
fimull
fldcw
sub
mov
aas
pop
out
cli
jns
push
ljmp
adcl
push
out
cld
mov
jmp
lock
pop
inc
repz
icebp
cli
adc
sub
sbb
push
aaa
cmp
mov
cmp
cli
js
cmp
cmp
ss
dec
rdmsr
mov
lods
or
jge
jno
lret
sbb
aas
aas
mov
ljmp
pop
repz
ljmp
dec
dec
dec
push
js
ljmp
push
clc
jb
stos
ljmp
aaa
adc
dec
stos
or
sbb
xor
or
outsl
enter
jecxz
stos
rcrl
pop
pop
pop
adc
jmp
subl
add
mov
push
out
in
inc
popf
jb
pop
mov
adc
sub
and
fldenv
pop
pop
ja
pop
repz
ljmp
sub
or
cli
lods
das
cmp
scas
mov
add
shr
das
and
sahf
stos
call
shl
push
push
push
lcall
adc
jnp
stos
out
xchg
mov
pushf
bound
push
xor
mov
sbb
je
cwtl
mov
fsubrs
repz
fimull
clc
cmp
mov
xor
lods
or
icebp
pop
xor
mov
xlat
jmp
sbb
cli
xchg
sub
stos
and
cli
add
cmp
dec
imul
mov
jg
push
test
sub
pop
enter
xor
daa
fwait
rcrl
repz
sub
mov
ljmp
sbb
movsl
das
stos
test
jae
aam
sub
rcl
iret
jns
mov
mov
lea
xchg
and
mov
pop
enter
fs
mov
pop
push
and
aas
enter
aaa
mov
outsl
lods
ficoml
clc
dec
pop
push
daa
sub
sbb
adc
push
jl
lea
jae
xorb
sub
sbb
xor
push
das
or
div
mov
mov
mov
xchg
xchg
lahf
clc
mov
cmp
test
fwait
mov
pop
and
jnp
mov
lock
mov
sub
xor
icebp
jae
ja
push
stos
repnz
mov
sub
scas
fcompl
xor
lret
ljmp
fwait
add
out
stos
stos
repnz
repnz
pop
sub
xor
or
sbb
mov
adc
ret
or
pop
in
mov
fisubrl
sti
push
mov
mov
add
imulb
leave
dec
jl
ljmp
dec
cli
add
dec
add
fsubrp
sub
scas
dec
int3
xor
or
fimull
jp
stos
fdivl
jb
into
cltd
adc
sahf
fnstcw
sub
push
rol
pop
cmp
or
xor
adc
xor
jecxz
xor
push
repnz
dec
inc
cmp
adc
inc
pop
inc
push
dec
loopne
sqrtps
push
test
mov
cs
imul
dec
rcrb
mov
shrb
dec
mov
lret
int3
and
in
sti
js
xor
add
sti
cmp
aas
push
or
sbb
cmpsl
push
jp
adc
ljmp
clc
test
scas
imul
test
mov
pop
mov
jp
dec
ds
and
mov
fisubl
or
push
xchg
fiaddl
daa
pop
lods
cmp
fcmovnbe
clc
mov
arpl
jmp
fcmovnb
aad
mov
mov
pop
jmp
xor
or
idiv
ljmp
sub
push
testb
loop
out
das
cmpsb
sub
mov
imul
mov
sbb
int3
scas
mov
mov
scas
mov
shlb
push
jmp
inc
cmp
push
xor
mov
push
call
mov
ljmp
imul
adc
lret
sbb
xor
imul
add
mov
das
sbb
xor
ficompl
js
call
loop
xor
cli
ljmp
dec
scas
stos
into
or
int
loop
xor
push
call
fnstsw
les
rorb
push
dec
lret
mov
jmp
jns
in
mov
shl
xor
out
xor
mov
add
icebp
xchg
jbe
mov
mov
ss
jg
aaa
stos
sar
lcall
mov
or
int3
movsb
pop
pop
aaa
mov
lock
mov
jcxz
and
xor
enter
mov
fcmovbe
sbb
pop
decb
mov
imul
mov
cli
fsubrs
jp
repnz
push
sbb
in
test
mov
stc
sub
sti
mov
and
jb
outsb
push
xchg
cmp
jo
adc
sbb
jmp
pop
cmp
push
clc
and
xchg
mov
test
sahf
sub
push
adc
and
clc
mov
test
dec
and
xor
and
clc
adc
mov
sbb
and
loope
and
cli
pop
insl
sub
imulb
or
dec
test
cmc
orb
mov
xchg
cmp
fldt
ds
shr
stc
sarb
das
jp
int
popa
inc
xor
jp
adc
jp
jl
das
es
jae
icebp
outsl
cmp
or
imul
lahf
pop
fidivs
cmp
ljmp
imul
jmp
push
scas
jp
mov
ljmp
mov
cs
sbbb
mov
inc
mov
sti
fwait
dec
cmp
or
aad
test
mov
repnz
leave
push
clc
mov
or
mov
push
sub
lds
scas
push
in
xor
or
jns
lret
adc
sarb
scas
dec
jbe
cmp
mov
cli
or
shrb
pop
mov
push
stc
cli
enter
out
jmp
jae
add
das
das
ja
popl
mov
out
xor
jo
cmpsb
mov
and
stos
or
test
ja
insb
and
mov
ljmp
dec
dec
dec
cltd
xor
orl
or
mov
push
js
sbb
lret
cli
lock
loop
xor
jnp
arpl
jnp
aas
insl
cmp
fwait
sub
add
sbb
in
fldt
rcll
add
es
pop
jmp
mov
insl
add
ja
adc
notl
inc
dec
cmp
cmp
movd
fldpi
jmp
sbb
pop
xor
adcl
dec
shrl
ss
mov
push
xor
daa
dec
adc
and
sub
push
test
push
adc
repnz
or
or
add
mov
lock
push
scas
mov
push
sti
fisttpl
lods
pop
loop
lcall
lcall
scas
cmp
pop
test
fsubrs
sub
cmpsb
mov
lcall
std
sub
fwait
add
mov
push
xor
xchg
es
aaa
cli
repnz
fidivrl
mov
mov
cmp
fisubrs
mov
push
dec
sub
add
jnp
sbb
push
stos
fmuls
fmul
lret
cltd
imul
out
jl
push
mov
jp
ljmp
cmp
sbb
ss
ret
lcall
inc
mov
out
insl
fs
fs
jnp
push
popa
xchg
xor
rol
sbb
xchg
sbb
fsubrp
sub
xchg
mov
mov
call
sbbl
mov
cli
sahf
mov
jmp
and
mov
sub
or
ret
add
cltd
adc
or
mov
cmp
sub
jle
adc
fld
or
add
loop
lret
dec
stos
sbb
lock
in
inc
leave
lret
sbb
fcmovne
mov
xor
cmp
mov
movsb
ret
lods
js
add
lcall
xchg
cli
cmpsl
std
ljmp
int3
sbb
stos
sub
adc
shlb
mov
pop
test
mov
jae
js
lret
js
repz
outsb
aaa
mov
call
rcl
mov
inc
orl
test
fisttpl
sub
jp,pn
ficompl
xor
add
jp
sub
xor
push
loop
in
dec
mov
outsb
js
das
sbb
ljmp
movsb
sub
stos
add
repz
adc
fcmovnu
or
popf
aad
mov
dec
fcom
ret
orl
dec
mov
mov
mov
sbb
aad
test
stos
jns
out
push
les
push
push
mov
adc
xchg
filds
iret
int3
sub
out
fldt
sarb
or
jmp
cltd
inc
cmp
mov
shrb
loop
fiaddl
dec
mov
mov
std
ds
in
jp
cmp
inc
lock
push
add
mov
mov
movsb
inc
push
xor
push
out
imul
mov
inc
adc
repz
shrb
sbb
gs
inc
and
mov
call
cmp
pminsw
mov
cld
es
nop
add
ljmp
sarb
dec
adc
mov
rorb
ss
mov
call
inc
fidivrl
call
test
pop
cmp
repnz
imul
loop
dec
push
jmp
inc
cmp
inc
jne
ljmp
stos
into
into
daa
mov
xor
mov
jo
mul
or
jecxz
xchg
lret
rdpmc
and
pop
mov
movsb
pop
mov
pop
fwait
xlat
or
test
or
insb
jae
mov
stos
fsubs
test
push
outsl
pusha
push
cmpsb
lock
loop
testb
and
xchg
repnz
cmp
out
xor
push
into
int3
lret
jnp
xor
jns
mov
repnz
and
sub
stos
in
ficoml
cmp
imul
xor
add
sbb
shrb
cmp
fdivrs
mov
testb
dec
cmp
inc
pop
push
outsb
test
and
js
jns
and
lcall
cmp
mov
fimull
icebp
repnz
clc
fidivl
adc
cmp
jp
in
lcall
lds
insl
mov
lods
sbb
lcall
stos
jp
stos
mov
ret
test
or
push
xor
pusha
stos
cmp
mov
rol
mov
imul
cmp
mov
push
test
lret
inc
adc
mov
or
adc
mov
repz
imul
pop
imul
call
fiaddl
test
mov
cmp
sbb
xor
cmpsl
dec
stos
push
mov
mov
cmp
sbb
insb
sbb
loope
dec
push
add
adc
mov
fwait
push
pop
add
test
sub
inc
ja
sahf
jae
mov
push
sub
repnz
lahf
imul
jle
or
ret
inc
jnp
or
and
stos
xor
jmp
call
lea
push
jl
repnz
push
sbb
in
gs
lret
repnz
jne
pop
mov
jp
or
pop
cmpsb
int3
push
ss
iret
cmp
incl
lret
add
sub
sbb
cli
mov
daa
cwtl
lea
sbb
xchg
mov
lock
cmp
mov
repnz
pop
imull
mov
mov
aaa
mov
lret
cmp
or
mov
push
push
or
icebp
dec
test
scas
xor
dec
loop
or
xorb
lret
fimull
cmp
stos
cmpsl
push
bound
dec
or
cmp
stos
sbb
or
pop
lret
out
stos
cmp
mov
xchg
scas
or
cmpsb
or
rclb
dec
xor
adc
jmp
enter
push
lea
fwait
int3
cmp
imul
mov
cli
cmp
mov
add
cmp
cld
in
pop
cli
or
xor
cli
xor
ljmp
adc
sbb
cmp
or
cmp
add
push
cltd
or
scas
out
xlat
xor
je
lret
dec
outsl
xor
pop
cmpsb
and
cmp
ror
cmp
int3
js
out
dec
push
mov
pop
sti
stos
test
ljmp
or
ret
mov
mov
cmp
lret
or
aas
cmp
jo
stos
je
repz
leave
mov
and
or
scas
rorl
fs
mov
mov
mov
sub
dec
ljmp
loope
imul
push
or
outsb
mov
and
fsts
iret
cmp
add
scas
or
mov
nop
fisubrl
adc
cs
xor
arpl
mov
dec
out
and
cmp
je
dec
xor
jmp
ds
jno
loope
outsb
stos
mov
and
pop
dec
pop
js
sbb
push
es
xchg
repz
lret
call
outsb
dec
ret
hlt
cwtl
lcall
jae
pushf
cmpsb
adc
or
xchg
xor
arpl
lret
dec
dec
js
cmp
daa
psadbw
mov
pop
lods
lret
and
aas
inc
fistps
ja
das
fidivl
out
mov
pop
fsubrl
adc
add
dec
or
push
orb
xchg
sbb
pop
or
push
adc
test
jae
das
sub
dec
jmp
into
push
notl
pop
call
stos
push
and
pushl
mov
iret
movsb
pop
adc
cli
mov
and
mov
mov
cli
mov
and
sub
out
incl
inc
stos
sti
stc
add
lret
cmp
mov
sub
mov
cmp
sahf
or
outsb
loopne
movsb
mov
mov
shll
and
imul
jmp
inc
ja
lret
add
dec
mov
lret
outsl
imul
out
fcomps
mov
jmp
mov
jmp
sarb
fwait
jecxz
scas
sbb
rclb
aaa
mov
pop
stos
sbb
in
repz
scas
sbb
fsubrs
xchg
test
fs
push
shlb
push
loop
pop
inc
jle
pop
xchg
adc
pushf
aaa
jp
fwait
in
cli
leave
push
scas
sub
test
iret
push
mov
sbbl
mov
add
mov
xor
mov
lret
jo
fimull
imul
sarb
pop
dec
shrb
dec
inc
stos
sbb
jmp
scas
jecxz
xor
push
jnp
jb
sti
jo
iret
cwtl
jns
out
mov
jns
fwait
jns
dec
ljmp
jl
scas
cs
mov
sbb
insl
and
sbb
outsb
enter
test
test
ljmp
mov
xor
mov
test
cld
inc
mov
call
cmp
mov
lret
push
xlat
test
mov
xchg
xchg
mov
and
pop
js
sub
out
cwtl
push
inc
lods
sti
adc
outsb
dec
sub
push
jnp
in
jp
dec
fnsave
fisubrl
repnz
ret
cmp
dec
or
lods
xchg
leave
repnz
ja
stos
jp
sbb
push
inc
jg
roll
sarb
mov
add
ret
mov
repnz
scas
or
scas
or
mov
mov
insl
pop
hlt
orl
js
xchg
cmp
add
ljmp
mov
add
shrl
fnstcw
adc
inc
std
sbb
sub
cmp
inc
lock
mov
stc
xchg
repnz
cmpsb
mov
cli
out
or
cli
fdivr
lcall
cmp
dec
push
cmp
lcall
test
scas
fmuls
jp
or
ljmp
jmp
ds
ja
sbb
mov
jp
jmp
pop
scas
rorb
jp
cwtl
mov
enter
and
add
into
sbb
xchg
scas
cmp
fisubrl
test
mov
imul
lret
std
dec
cmp
fbstp
jp
icebp
imul
xchg
xor
push
and
mov
lret
mov
sub
fcoms
mov
mov
cltd
hlt
mov
fucomi
adc
aas
lcall
insb
dec
out
jmp
scas
or
movsl
inc
mov
push
cwtl
addr16
adc
mov
mov
jb
dec
pop
mov
insb
inc
cmp
ss
pop
xor
lret
lret
adc
xchg
adc
arpl
stc
cli
test
jmp
dec
ret
stc
xor
xor
mov
lret
stos
pop
jbe
stc
sbb
mov
jmp
imul
sbb
jns
inc
imul
outsl
or
xchg
mov
xchg
inc
mov
jb
mov
mov
sbb
sahf
lret
xchg
adc
mov
cmp
jl
push
push
lods
pop
mov
adc
sbb
ficompl
sbb
daa
push
pop
mov
jns
mov
mov
fwait
mov
scas
cli
testb
fcmovnu
daa
fwait
loopne
xchg
cmp
sub
dec
stos
pusha
stos
adc
insl
sahf
repz
xor
cmpsb
aas
lret
or
shr
lret
xchg
icebp
js
lock
fcmovbe
stos
int3
inc
cmp
in
stos
fimull
cwtl
and
pop
cmp
shl
jnp
enter
mov
pop
andl
jmp
cmp
aas
mov
dec
cli
sbb
ljmp
iret
mov
repz
out
mov
into
adc
fstpt
or
mov
sub
cmp
push
or
xchg
movsl
cmp
push
lret
js
icebp
dec
outsb
pop
cld
call
jp
dec
decl
bnd
fmuls
xchg
das
jl
jbe
stos
outsb
fimull
xor
push
push
push
ficoml
xor
fldenv
imul
dec
pop
cmp
cld
icebp
fwait
int
mov
or
and
jbe
lret
jbe
xor
or
adc
add
sbb
into
mov
jl
leave
mov
sub
inc
pop
pop
js
in
pop
sahf
rorl
adc
rcrb
js
mov
mov
or
mov
shrl
add
repnz
in
dec
pop
mov
mov
push
sbb
js
pushf
xlat
or
push
lcall
call
sub
pop
scas
sbb
fistpl
movsb
mov
cli
jp
xor
push
push
shr
sub
dec
sbb
negb
ds
ljmp
xlat
arpl
cmpsb
dec
cltd
sti
out
mov
lock
daa
or
jmp
mov
jecxz
mov
dec
xchg
mov
jbe
mov
ja
lret
dec
cmp
pushf
mov
jmp
ja
lret
bound
enter
dec
clc
or
insb
cmp
lcall
jmp
mov
mov
orl
jmp
sub
fldcw
cmpsb
jae
and
imul
cwtl
fldt
das
dec
cmp
jns
lret
das
lcall
dec
or
jbe
cmp
clc
sbb
push
mov
jns
mov
int
cmpsb
fwait
or
pop
or
ret
ret
mov
test
mov
mov
cmp
jo
fisttps
jb
jle
leave
add
or
lret
out
and
stos
mov
cli
dec
mov
pop
jecxz
aaa
dec
pop
shrl
sahf
cmp
lret
or
mov
loope
scas
ja
loop
mov
mov
mov
rorb
jns
add
stos
dec
or
push
notb
cmp
pop
lods
test
cmp
scas
push
lods
mov
or
adc
xchg
aaa
xchg
pop
adc
leave
jmp
and
dec
push
movsl
pop
push
and
shrl
imul
jb
jp
fidivrl
in
fsubrs
fisubrl
mov
mov
fwait
int3
or
stos
adc
jp
push
int3
mov
stos
ror
jnp
imulb
ja
mov
push
scas
pop
cmp
mov
sarl
lret
xor
mov
ljmp
jno
ret
jmp
enter
xchg
mov
cmp
ret
xor
arpl
cli
or
inc
imul
fs
cmp
sbb
pop
adc
mov
cmp
dec
imul
mov
rol
xor
mov
insl
clc
or
cmpsb
ret
lret
xchg
mov
or
rorb
pop
adc
pop
cli
fiaddl
mov
jns
stos
shrl
fs
js
pop
xchg
out
outsl
imul
lret
jnp
test
in
cmc
mov
stc
add
in
call
sahf
lcall
sub
push
xchg
xor
mov
adc
dec
push
adc
jmp
fadds
pop
pop
mov
push
xor
xor
add
dec
dec
idivl
pop
ds
dec
movsb
imul
test
xchg
mov
fildl
mov
cmp
lret
outsb
imul
push
sbb
lods
pop
iret
add
sub
repnz
jmp
push
mov
inc
fcomip
push
into
imul
mov
cwtl
sub
cli
fsubrl
outsb
js
sub
sub
sbb
fsubrl
lret
dec
lret
lret
mov
arpl
jp
repnz
xor
mov
jne
mov
rclb
jp
cmp
push
int3
loope
lcall
shll
cli
shrb
cmp
sub
ja
fsubr
cltd
bound
mov
adc
sbb
inc
popa
pop
mov
cwtl
test
lret
enterw
sbb
cli
cmp
fsubs
call
cmp
or
mov
stos
cwtl
int3
cli
hlt
mov
gs
pop
call
shlb
call
push
xor
jg
fwait
scas
ret
fld
pop
outsb
mov
daa
dec
lret
sarl
or
ljmp
bound
xchg
stc
jmp
adc
add
scas
sub
aaa
stos
push
pop
fstpt
inc
stos
jae
push
stos
mov
mov
or
rorb
jnp
xchg
push
sbb
fisubrl
push
sarb
dec
in
imul
inc
push
jo
jp
mov
jns
xor
fwait
stc
sub
lcall
out
and
lret
js
mov
pop
mov
mov
cmp
data16
dec
mov
test
dec
clc
cmp
sub
mov
sbb
arpl
add
ficompl
pop
lret
and
xor
mov
cmp
mov
push
ljmp
pop
mov
scas
rorl
sbb
pop
and
mov
pop
add
or
sahf
pop
imul
scas
jns
push
jbe
outsb
out
repz
xor
idivb
ljmp
cmp
lds
ret
sahf
or
mov
aas
mov
imul
pop
adc
mov
stos
mov
cs
dec
or
push
jno
call
xor
into
xor
mov
pop
push
push
inc
adc
lods
jmp
mov
sahf
push
mov
loop
dec
adc
dec
cmp
or
leave
lock
or
cmp
cmpsl
jp
ds
cwtl
push
scas
mov
xchg
in
cmpb
pop
sub
js
iret
call
push
mov
sub
mov
loop
clc
pop
aas
dec
mov
in
or
inc
push
imul
clc
lcall
pop
js
dec
stc
sahf
mov
nop
je
dec
pop
or
repnz
out
cmp
inc
stc
sub
aaa
scas
or
add
or
cli
das
sub
push
ficoml
push
jnp
out
mov
cmp
push
or
loop
xchg
stos
mov
insl
adc
sub
inc
call
xor
loop
dec
mov
sub
sbb
or
into
sub
leave
add
fwait
imul
rol
mov
fiaddl
pop
add
jp
push
sub
sub
clc
push
xabort
sti
cld
mov
mov
xor
mov
lods
dec
mov
mov
ljmpw
aas
test
cmp
add
in
stos
loope
xchg
out
gs
andb
jg
dec
or
and
cmp
push
ljmp
dec
mov
cmpsb
inc
lahf
push
stos
mov
xchg
out
add
js
cmp
sahf
aas
mov
testb
jle
push
push
pop
xorb
scas
inc
lret
ds
mov
stos
arpl
out
dec
pushf
mov
imul
in
mov
jge
mov
out
in
cmp
mov
imul
cmp
aaa
push
cmp
outsb
das
loop
inc
lahf
and
inc
pop
and
add
and
hlt
cmp
mov
cmp
call
movsb
mov
or
mov
and
cwtl
imul
lret
js
inc
fdiv
jp
xchg
push
jae
imul
mov
test
push
mov
push
mov
pop
pop
icebp
mov
shr
dec
xchg
mov
cmp
sub
jg
jmp
mov
cmpsl
xor
ret
cwtl
rorb
pop
negb
add
cmpsl
inc
mov
test
shrl
mov
ljmp
shrb
jle
or
imul
lcall
repz
out
jne
repnz
mov
pop
lret
mov
fidivl
dec
mov
push
fidivrl
cmpsb
xchg
dec
scas
mov
lret
or
mov
aas
cmpl
sbb
sub
mov
or
xor
js
fisubl
pushf
cli
cld
imul
js
jae
repnz
lret
pop
decb
cli
push
sbb
xchg
fstpl
mov
cmc
das
xor
incb
push
jle
jnp
ficoml
adc
fimull
shll
jmp
clc
dec
fidivrs
xor
adc
mov
lock
mov
sti
pop
or
out
jae
jno
cwtl
pop
mov
out
mov
add
pop
push
cmp
and
jnp
add
jb
hlt
loop
mov
add
frstor
mov
adc
push
pop
sbb
or
mov
or
jb
push
int3
test
xchg
mov
js
cmp
dec
add
das
sbb
lods
jmp
mov
pop
adc
jecxz
mov
jmp
inc
dec
lret
pop
bndldx
into
add
and
imul
repz
clc
mov
mov
jnp
mov
mov
xlat
jnp
fwait
xor
call
mov
mov
jno
dec
fimull
cmpsl
mov
jp
push
orb
jg
sub
lea
mov
or
push
jp
stc
pushf
mov
cmp
adc
lock
xchg
sahf
nop
mov
xchg
nop
adc
adc
or
jne
adc
testl
int3
scas
and
ja
hlt
pop
out
mov
rorl
in
push
mov
btc
add
fisttpll
loope
mov
insl
cli
scas
or
lods
mov
aas
add
mov
lret
imul
ficompl
iret
stos
movups
test
cmp
jmp
outsb
adc
clc
mov
fs
push
mov
sarl
mov
inc
cld
mov
pop
inc
jmp
sbb
pop
push
mov
jg
int3
stos
xchg
shlb
clc
popf
fsubrs
mov
cmp
inc
aaa
lea
testb
xchg
push
sbb
jmp
mov
popl
and
or
iret
sbb
mov
stos
jmp
out
mov
lahf
and
jbe
or
jge
ret
mov
jmp
push
jp
mov
jmp
xlat
jns
repz
dec
push
out
rcrb
dec
push
jmp
jp
cli
jo
mov
mov
sarb
jle
mov
roll
dec
jae
xchg
fistpl
mov
mov
leave
mov
pop
dec
push
pop
testl
in
and
pop
jmp
xorl
xchg
mov
jl
dec
mov
mov
pop
cmpsb
mov
mov
or
inc
sub
pop
fsubl
icebp
pop
xchg
jnp
std
xchg
add
aas
adc
sahf
aaa
das
xor
mov
pop
jg
je
cli
cmpsl
loope
xchg
repz
ret
jno
ja
les
cmpl
lret
mov
in
icebp
fstl
movsl
pop
lret
out
sub
pop
mov
hlt
mov
and
movsb
jo
mov
jns
fnstcw
mov
fldt
orb
pop
mov
add
dec
filds
sbb
mov
jg
sub
cmp
or
stos
add
pushf
fadds
fldcw
cmp
stos
lahf
adc
dec
repz
lret
movhps
sbb
push
inc
rolb
xchg
mov
lret
aas
adc
pop
cmp
pop
fisubrl
aas
out
sbbb
mov
fistpll
mov
mov
scas
hlt
mov
pop
repz
cmp
xlat
mov
roll
pop
add
je
lret
and
test
mov
stc
xor
repnz
dec
jne
push
mov
lods
mov
int3
jmp
xor
cmp
fnstcw
xor
jecxz
mov
decl
cld
in
cmc
mov
or
or
mov
xchg
cmp
mov
pushl
mov
movb
movswl
mov
and
mov
mov
mov
mov
sbb
jp
dec
mov
mov
stc
inc
xchg
adc
sbb
pop
fiadds
inc
pop
shl
cmp
xchg
mov
dec
mov
insl
repnz
xchg
clc
bound
sub
cmp
orb
mov
es
sbb
mov
lret
add
sbb
fcompl
mov
and
xchg
sbb
dec
add
hlt
imul
divb
mov
test
adc
ds
mov
push
add
fildl
mov
dec
adc
jg
in
xor
adc
into
or
add
pop
sub
test
sub
cmpsb
xchg
aaa
jmp
out
in
insl
ror
clc
nop
ja
in
push
dec
add
aam
adc
cmp
dec
lods
cmp
inc
vmread
lahf
fcmovne
xchg
mov
sti
mov
push
out
push
es
rcrb
pop
pop
sbb
xlat
fstpt
add
repnz
add
stos
movsl
rorl
fcmovu
mov
jb
adcl
sbb
clc
call
mov
ljmp
mov
scas
xor
je
mov
mov
jge
les
mov
scas
mov
cli
scas
pop
mov
cmp
sti
adc
mov
sub
sti
das
es
clc
sahf
outsl
or
bnd
adcb
cmp
dec
jne
mov
adc
mov
dec
mov
pop
dec
repz
xchg
icebp
andb
xor
mov
mov
pusha
and
sbb
jns
mov
push
arpl
xchg
xchg
stos
fbld
or
ret
add
shrb
adc
xchg
xchg
and
xor
jae
and
mov
mov
jae
shrb
leave
mov
jl
mov
ja
mov
mov
icebp
jg
jo
in
or
mov
dec
jae
or
iret
mov
int3
stos
xchg
pushl
inc
imul
repz
adc
lea
sbb
cmp
pop
jmp
mov
dec
and
or
int3
aad
lods
imul
ffreep
push
xchg
mov
imul
shll
push
adc
or
ja
lock
mov
cltd
mov
add
ret
mov
jg
push
out
int3
fimull
jmp
pushf
dec
add
adc
sbb
stc
push
js
jo
pop
sar
jecxz
mov
out
push
xchg
js
mov
lock
mov
das
inc
cmpsb
inc
add
jecxz
sbbl
sbb
sbb
in
mov
pop
add
mov
xor
push
fimull
negl
add
fcomps
xlat
add
push
pop
xchg
ret
cld
js
rcrb
or
cmc
das
loopne
movsb
push
push
sub
jmp
stos
xchg
ficompl
or
rorb
aas
xor
sahf
fistpl
lcall
fwait
add
cli
mov
icebp
push
mov
out
fcmovnu
add
mov
inc
mov
push
inc
add
adc
mov
out
ds
jnp
cmp
push
sbb
inc
lods
mov
cwtl
pop
iret
ffreep
ss
pop
int3
ljmp
mov
icebp
mov
jns
push
adc
imul
rclb
jecxz
add
rorl
rol
scas
push
in
or
aam
cmp
sahf
inc
jnp
add
sti
jns
out
add
popa
mov
mov
add
jo
cmpsb
mov
movl
test
xorb
sarl
pop
add
xlat
inc
push
dec
cmc
subb
add
std
fldt
mov
jg
mov
jl
fisubrl
jmp
sbb
mov
fmul
mov
testl
pop
insb
and
cmc
sub
out
adc
dec
in
mov
pop
mov
jbe
fsts
rcll
cld
rclb
data16
mov
fisubrs
or
sar
adc
mov
cmp
sub
es
jno
loopne
les
cmp
call
sbb
popa
dec
imull
out
ret
data16
push
dec
and
cmpsl
orl
mov
jmp
insb
mov
pop
aam
mov
or
cmp
jecxz
sbb
cmpsb
cld
sub
push
cmc
mov
mov
lea
iret
cmpsb
xor
push
mov
rclb
xchg
pop
or
push
push
mov
sub
push
fdivr
lahf
inc
dec
es
xor
mov
test
clc
sbb
or
and
mov
xchg
lret
lea
mov
jnp
ret
mov
mov
inc
ljmp
repz
cwtl
aaa
imul
xchg
ja
sahf
loop
test
cmc
inc
addr16
push
or
xchg
and
jmp
push
mov
xchg
push
jnp
add
jnp
jb
scas
xchg
jae
xchg
pop
xor
or
sbb
dec
mov
dec
out
call
pop
int3
fmull
cmp
data16
cmpsl
xchg
hlt
mov
xor
push
leave
iret
sub
add
sbb
mov
pop
popf
mov
je
and
mov
lock
stos
ljmp
jg
mov
add
pushf
stos
or
mov
xchg
mov
das
jmp
in
pop
cli
nop
loopne
xchg
xor
ret
bound
xor
repz
and
xor
and
bswap
hlt
clc
xor
es
xor
sbb
inc
adc
jmp
cmp
pop
pop
pop
es
mov
xor
rsqrtps
pop
add
xchg
push
and
cmp
jnp
adc
add
mov
jo
mov
push
stos
mov
pop
add
mov
sbb
cmp
std
cmpsl
test
jbe
inc
jns
aaa
fwait
dec
or
adc
and
repnz
rcll
mov
jns
dec
pop
dec
adc
fs
push
cli
fdivrl
mov
jae
sub
and
xchg
scas
and
scas
in
fcomi
in
dec
jo
loope
es
mov
lcall
in
call
adc
lcall
sub
bound
pop
hlt
notl
pop
jno
adc
jp
aas
repnz
repz
xlat
es
adcb
sub
int3
jmp
mov
pop
rcrb
dec
in
jg
mov
mov
aas
std
repnz
pop
push
js
sub
cld
cmpsb
jp
pmulhuw
jmp
pushf
xor
mov
lret
lea
inc
adc
in
dec
daa
dec
out
xchg
ja
pusha
adc
ss
data16
lahf
cmp
mov
and
xor
adc
std
mov
adc
sbbl
jl
mov
in
loop
insb
imul
jae
cmp
fwait
dec
mov
lahf
mov
out
mov
popl
out
loope
adc
je
icebp
rorb
pop
test
mov
xchg
repnz
hlt
or
adc
cmc
idivl
lock
hlt
ds
pop
xchg
push
push
std
js
cld
or
pop
add
movsl
xchg
bnd
out
popa
add
jmp
loope
movsb
mov
mov
push
push
mov
rcrl
push
les
cmp
mulb
sbb
push
js
daa
js
scas
jbe
cmp
adc
or
fisubrs
adc
pop
fiadds
adc
or
jnp
lahf
push
mov
mov
int3
push
adc
mov
or
popf
xchg
sbb
fcmovnb
popf
int
mov
xchg
mov
addb
push
jg
mov
mov
addr16
in
sti
or
jb
dec
sahf
push
movsb
aad
testb
and
in
cmp
cmp
or
sbb
aas
movsl
pop
insb
hlt
pop
es
les
push
js
xchg
mov
and
clc
mov
mov
pop
lret
in
pop
mov
cmp
and
mov
jp
xchg
cld
stos
cmpsb
dec
and
mov
int3
ss
scas
adc
mov
cs
lahf
loope
daa
adc
xor
into
mov
or
ja
popa
push
cmp
call
inc
dec
or
hlt
pop
shll
out
repz
sbb
repz
mul
dec
mov
aam
loope
jb
out
or
int
std
xchg
daa
jnp
xchg
xor
fiaddl
pop
sbb
or
repnz
fiadds
dec
xchg
pop
cmovb
movsl
andb
cmp
xor
pop
subb
push
xor
lods
fcomps
ror
ret
icebp
mov
out
scas
icebp
subl
mov
dec
daa
push
add
lds
jge
movsl
icebp
mov
call
add
xchg
notb
and
icebp
mov
hlt
dec
jge
int3
push
sbb
mov
xchg
jg
adc
mov
mov
loopne
test
mov
int
fidivl
or
xlat
dec
jp
mov
add
idiv
push
icebp
jb
out
jl
mov
add
sbb
call
and
shrb
inc
rcl
sbb
sbb
mov
sbb
pop
lahf
aas
mov
int3
push
cmpsb
repz
cmp
and
adc
shl
pop
add
iret
mov
push
fimull
pop
cmp
xchg
inc
jp
dec
xor
xor
jmp
pusha
fwait
pop
js
dec
pop
jb
xlat
mov
addr16
les
mov
jmp
mov
in
testl
int
xchg
adc
mov
sbb
nop
mov
stos
jno
cmp
adc
in
out
shll
xchg
push
jns
bsr
clc
fidivs
mov
cmp
cmp
mov
or
arpl
lea
adc
fmul
es
negl
scas
in
jnp
dec
test
adc
mov
xchg
aas
mov
into
out
les
xchg
push
fbstp
mov
sub
fldenv
lret
add
mov
dec
dec
imul
in
js
mov
push
mov
add
mov
andl
mov
mov
call
cli
mov
lret
daa
cmc
out
push
ret
fmull
mov
les
mov
shrl
mov
lea
mov
movb
mov
jmp
dec
lock
imul
dec
nop
and
mov
ja
aad
sbb
icebp
dec
or
pop
hlt
mov
aas
inc
ret
test
adcb
pop
mov
test
adc
leave
xor
aas
out
sti
jnp
sbb
std
int3
enter
lret
cmp
mov
and
leave
push
mov
int3
mov
lock
mov
cwtl
out
mov
daa
test
cmpb
je
mov
inc
sbb
pop
js
fistpll
fninit
adc
dec
jno
xor
pop
call
adcl
movsb
jp
lahf
cmpsb
cmpsl
mov
sub
push
dec
lcall
dec
add
orl
in
add
bound
stos
jae
pushf
mov
xchg
loopne
mov
mov
int
jae
adcl
pop
dec
in
jae
out
cmp
xor
aas
rcrb
adc
incl
and
insl
iret
inc
xor
rcl
push
jno
sbb
das
bound
lock
cmp
ljmp
jns
testb
ja
push
test
cwtl
adc
repnz
mov
lock
stos
cmp
aas
push
stos
xor
jge
mov
ja
mov
sbb
lret
or
push
pop
add
imul
int
add
pushl
arpl
roll
mov
or
popl
into
jmp
dec
mov
mov
dec
xlat
ret
pop
fs
movsb
cld
repnz
jg
and
cmpl
test
pop
aam
sub
hlt
xchg
sahf
roll
jmp
out
pushf
ret
push
ret
sub
fwait
ss
xlat
or
pop
pop
dec
clc
pslld
fstpt
aaa
dec
mov
jns
dec
add
add
js
out
add
pop
jnp
pop
lods
mov
cltd
sub
mov
xchg
ficoml
sti
xlat
mov
add
cmpsb
mov
xchg
mulb
adc
add
leave
lret
lea
jns
add
push
mov
lock
dec
fisubrs
popa
mov
cmp
lock
xlat
dec
int
aas
enter
adc
dec
pop
sahf
scas
sbb
icebp
fisttps
mov
cwtl
es
or
cmpl
out
mov
test
mov
popf
jbe
mov
mov
mov
outsl
sti
lods
xor
dec
xor
xchg
dec
cmpsl
push
or
and
imull
mov
sub
xchg
arpl
dec
int3
call
fsub
fwait
pop
andl
jl
cmp
sarl
icebp
jno
pop
or
fs
leave
mov
ja
pop
add
loopne
xchg
in
insb
and
test
out
test
mov
xor
dec
stos
mov
scas
mov
or
dec
pop
test
jg
cwtl
jg
cmp
test
fwait
int
clc
cmp
mov
and
inc
pop
jg
in
hlt
jnp
xchg
cmc
sti
jl
imul
mov
sarb
push
push
xchg
sbb
mov
pusha
mov
dec
stos
mov
add
clc
js
icebp
cltd
aaa
pop
orl
or
pop
repz
dec
mov
les
xchg
je
rcrb
stos
mov
sub
data16
jae
push
and
cmp
jbe
jne
and
push
loopne
lahf
cmpsb
dec
dec
mov
jnp
repz
or
mov
aas
dec
pop
nop
pop
and
aam
mov
lds
mov
aas
cmp
mov
dec
mov
add
mov
jb
rcl
push
out
stos
adc
flds
adc
ds
pop
js
xor
push
std
ja
xchg
mov
mov
xlat
stos
in
pop
add
push
xchg
cmpsb
bound
pop
jl
xchg
dec
mov
mov
adc
fwait
mov
jb
mov
push
outsl
pop
lret
cmpsb
xlat
jge
pop
rcll
das
dec
fxch
sub
outsl
pop
xlat
cmp
lods
dec
jnp
dec
adc
adc
sub
into
lods
cmp
movsb
cmp
hlt
and
lea
mov
sarb
or
fldenv
jp
popa
jg
mov
mov
popf
inc
pop
imul
ljmp
jecxz
nop
xchg
push
push
negb
mov
shld
lcall
movsb
and
sahf
cmp
pusha
cmp
aas
sti
add
pop
or
jnp
dec
mov
sbb
sub
mov
jns
ss
pop
aas
adc
test
cmpsb
push
out
shll
mov
mov
push
pop
push
cmpsl
cwtl
push
adc
pop
test
xor
fsubs
fistpll
mov
jb
loopne
imul
movsbl
push
mov
mov
jmp
stos
out
mov
vmovdqa
dec
jb
sub
fdivrl
mov
sti
cmpsb
repz
out
cmp
and
mov
cmp
dec
cmp
cwtl
mov
push
js
xchg
sbb
inc
lods
mov
daa
cwtl
mov
cwtl
sbb
pop
mov
add
data16
shlb
daa
jmp
ja
mov
and
mov
je
inc
addr16
out
subl
shll
pop
js
cld
fs
fsts
add
cltd
call
inc
mov
xchg
daa
fbld
stc
cmp
mov
dec
cmpsb
les
dec
pop
mov
jmp
ret
in
mov
lahf
pop
mov
stos
mov
mov
or
sar
dec
mov
xchg
add
mov
call
mov
mov
mov
stc
nop
sahf
lret
push
mov
rclb
add
sbb
loopne
push
push
dec
hlt
mov
shrb
stc
jns
push
int
icebp
insl
popa
add
add
ja
and
mov
lret
add
add
fimull
pop
sub
adc
and
stos
mov
lret
pop
mov
and
aas
xchg
mov
adc
ja
arpl
pushl
sub
jp
lods
pushf
data16
jno
pop
jo
icebp
mov
cltd
scas
popf
mov
dec
mov
or
ret
mov
test
into
ret
mov
pop
aam
or
bound
hlt
repz
nop
mov
push
or
ljmp
push
jne
push
shlb
ret
lock
jnp
dec
jl
sahf
jnp
sahf
cwtl
xchg
adc
mov
mov
mov
jnp
int
xchg
ja
push
test
mov
fstl
push
sbb
mov
jl
pusha
and
adc
push
dec
cmpsb
ja
adc
sahf
cli
pop
add
lret
or
js
add
loope
sahf
call
or
rorl
loopne
arpl
and
mov
loop
nop
mov
push
cmp
mov
mov
and
icebp
push
mov
xor
ljmp
mov
pop
dec
dec
cmpsl
cmpsb
clc
pop
scas
aaa
xor
inc
ret
adc
lds
js
mov
fstpt
and
ja
aas
and
pop
mov
fimull
cmc
test
std
add
jae
in
and
fsubl
pop
mov
pop
jecxz
int
sahf
mov
mov
lret
or
xchg
imull
in
pusha
push
push
jns
shll
hlt
push
pop
jae
xlat
into
and
js
aad
in
push
pushf
push
les
fadd
imul
pop
or
jmp
fistps
js
fdivr
push
inc
decb
mov
mov
hlt
mov
or
mov
mov
pushf
insl
sbb
neg
gs
adc
mov
jmp
adc
or
jmp
mov
jecxz
jb
xchg
pop
ficoms
xchg
out
sbb
xor
mov
jl
sbb
mov
push
push
push
or
adc
stc
pop
jns
cmp
incl
mov
jge
imul
mov
xlat
jae
mov
jo
in
stc
sbb
lods
mov
out
arpl
fistpll
adc
and
mov
out
cmp
push
push
jo
out
lods
dec
xchg
jns
ret
scas
dec
sbb
xlat
loopne
jno
sti
pop
pop
add
imul
int
adc
aas
pop
xchg
mov
mov
xchg
mov
sub
cmp
mov
push
rcrl
pop
push
inc
cmpl
jae
out
mov
jmp
int3
loop
int3
push
adc
fs
mov
jp
cmpsb
jg
pop
or
ret
sub
cmp
mov
xchg
rcrl
xlat
cwtl
aaa
in
mov
push
sub
sbb
pop
ja
mov
xchg
mov
jmp
adc
or
mov
mov
mov
jmp
push
or
add
fdivrl
sti
or
js
or
lcall
adc
mov
mov
lcall
dec
shl
sbb
dec
mov
dec
inc
arpl
jp
sub
aaa
pop
xor
add
add
popf
mov
subl
cmp
pop
or
fcoms
mov
pushf
lock
mov
xchg
out
lods
pop
jmp
movsb
int
and
mov
cmpsl
adc
inc
dec
and
mov
in
aad
mov
xchg
out
mov
add
cmpsb
push
pop
daa
or
je
xchg
cmpsl
stc
popa
adc
int
push
or
cli
sub
sbb
push
sarl
insl
repz
aas
stos
ja
fidivl
add
mov
adc
das
mov
add
jl
ja
test
divl
mov
cmp
jnp
cwtl
mov
and
mov
outsl
and
popa
ss
mov
add
xchg
jp
nop
adc
cmpsb
jmp
pop
daa
push
sbb
cltd
ja
jo
jge
dec
arpl
int
mov
adc
outsl
scas
mov
sahf
or
int3
repz
std
ret
js
aaa
mov
jae
mov
jp
cmp
sahf
dec
xor
popa
fisubl
int
pop
aad
mov
mov
jmp
dec
mov
les
repz
popa
and
into
cltd
sti
icebp
pop
add
pop
push
stos
pop
data16
xlat
fwait
cmp
adc
test
pop
pop
shrl
pop
pop
pop
jl
popa
loopne
adc
xlat
cmp
in
rcr
rcll
push
xchg
or
jb
jecxz
lahf
out
sbbl
out
push
clc
insb
cltd
enter
stos
push
cmp
lcall
jnp
cmp
sbb
sbb
mov
and
js
and
je
jge
aad
pop
fs
jl
sbb
fildl
push
sbb
out
mov
fs
test
movsl
fidivrs
sbb
mov
mov
mov
cli
mov
cmpsl
fwait
sbb
ja
push
sti
std
jle
sarl
iret
popw
insl
icebp
mov
xchg
ja
push
out
xchg
repz
sub
dec
movsb
loopne
cmpsb
dec
inc
js
mov
sbb
dec
push
add
movsb
aam
movb
or
cwtl
lret
mov
iret
add
jo
test
add
out
sub
lock
addr16
pop
mov
stc
sub
push
mov
imul
pop
jge
leave
inc
cmp
lock
xchg
mov
test
adc
sti
jecxz
inc
mov
push
push
sti
lock
je
sahf
aas
nop
pop
pop
insl
hlt
sub
cmpsb
mov
in
out
shrb
mov
push
shrl
je
hlt
daa
jno
add
in
mov
jae
mov
addr16
xor
mov
cld
sub
outsl
inc
cmp
cld
jnp
or
and
jp
mov
and
inc
sbb
lcall
test
inc
fisubrs
or
mov
lret
mov
inc
sahf
or
out
push
dec
mov
push
pop
or
sub
mov
cli
push
ljmp
lret
imul
mov
outsb
clc
call
mov
ljmp
mov
test
inc
xor
iret
or
inc
lret
test
or
lret
lret
dec
push
mov
cmp
lret
xor
cmp
sbb
or
mov
in
fwait
or
fwait
imul
mov
scas
or
lret
or
lret
xor
sbb
nopl
or
mov
mov
mov
fisubrl
imul
in
dec
adc
ljmp
call
ljmp
or
lret
mov
sub
mov
cmp
ljmp
or
mov
out
imul
sbb
int3
dec
leave
fisubrl
and
or
out
test
or
mov
ljmp
out
sub
or
in
or
leave
jae
int3
lret
imul
inc
ss
in
ljmp
and
mov
out
js
or
jmp
or
dec
jmp
or
sub
push
sub
ljmp
or
sub
and
enter
dec
mov
dec
cltd
and
mov
insl
mov
dec
pop
fisubrl
ljmp
lret
fidivrl
mov
ljmp
sub
jmp
mov
int3
ljmp
decb
imul
scas
mov
dec
call
test
dec
testl
mov
or
dec
cs
imull
imul
ds
lcall
lret
cmp
mov
mov
lret
sub
lret
stos
mov
stos
cli
lret
dec
or
imul
sub
mov
clc
call
mov
dec
jg
sbb
dec
or
cmp
dec
leave
sbb
stos
inc
fimull
adc
mov
sub
xor
push
mov
pop
fimull
and
lret
inc
jnp
jae
mov
ljmp
pop
inc
scas
mov
ljmp
std
int3
jmp
sbb
and
lret
mov
scas
outsb
leave
fisubrl
imul
inc
fsubrl
mov
lret
sbb
stos
or
dec
dec
or
sbb
jmp
negl
mov
dec
lret
outsb
ljmp
aaa
call
mov
push
or
dec
leave
sbb
jnp
inc
mov
sbb
or
jle
ljmp
das
clc
mov
or
mov
lret
dec
inc
jmp
iret
clc
stos
lret
mov
ljmp
fistl
fisubrl
dec
fs
int3
ss
cmp
push
cmpsl
into
cmp
imul
cmc
jp
fisttps
hlt
xorb
sbb
or
lahf
stos
adc
sub
push
idiv
add
push
sbb
frstor
adc
call
call
jp
insl
cld
out
or
rcrb
or
push
dec
mov
sub
or
cli
stc
mov
sbb
push
lret
cmp
xchg
cmp
fwait
mov
or
cli
repnz
push
sbb
xor
mov
jb
lret
or
enter
push
hlt
sub
call
lock
or
jmp
enter
pop
inc
cli
ds
sub
push
dec
or
pop
sbb
sbb
sbb
or
int3
xor
bnd
or
out
mov
cld
js
stc
or
sbb
jp
cs
cmp
js
aas
aam
dec
jle
scas
mov
fdivrs
mov
ds
cld
sub
sbb
cld
ds
push
or
xor
xlat
leave
mov
cmp
in
push
mov
out
jns
mov
sbb
pop
sbb
xor
hlt
fwait
hlt
add
bnd
xor
sbb
mov
ljmp
or
es
ljmp
les
adc
repz
testl
inc
xor
mov
sti
or
sti
fnsave
aaa
stos
or
mov
add
dec
dec
add
ds
cmp
adc
pop
pop
inc
inc
inc
in
cmp
test
call
jns
iret
call
or
arpl
repnz
loop
shll
xlat
aaa
imul
push
mov
dec
fildl
push
in
cmp
stos
inc
call
jns
jecxz
pop
jno
into
push
arpl
repnz
loop
out
and
dec
or
mov
scas
sbb
sbb
mov
mov
dec
or
xor
in
mov
cmp
inc
or
repnz
push
mov
cmp
and
repnz
dec
or
in
test
js
or
jb
stos
push
dec
mov
sub
pop
cmp
shrb
imul
loop
stos
pusha
push
jns
push
push
lret
in
sub
mov
daa
dec
lcall
repnz
repz
fwait
xor
pop
sub
bound
or
subb
repz
fnstsw
or
fwait
cmp
jle
push
cmp
inc
outsb
repz
mov
ds
out
jmp
jnp
stos
dec
xorb
cmp
bound
iret
dec
cli
mov
enter
or
dec
jno
out
pop
ljmp
stc
imul
fistl
cmp
repnz
icebp
stos
and
in
outsb
cwtl
add
sbb
dec
dec
loopne
mov
test
or
call
test
dec
aas
xor
cli
and
or
clc
lret
cmp
mov
mov
mov
leave
out
inc
clc
outsb
sbb
mov
inc
adc
mov
inc
sbb
dec
sti
mov
mov
inc
or
mov
mov
or
jnp
push
cmp
or
repnz
mov
xchg
imul
mov
sbb
mov
or
cmp
data16
repz
dec
mov
repz
cmp
push
repnz
mov
stc
cmp
xlat
push
xor
add
jmp
adc
push
repz
or
xor
add
insl
xlat
push
out
cmp
inc
call
pop
cs
push
repz
ret
arpl
repnz
aaa
arpl
mov
sub
addr16
mov
sbb
sbb
adc
sub
scas
adc
push
jo
mov
lods
jb
cmpb
icebp
mov
inc
push
or
and
test
rorb
mov
add
sbb
out
icebp
mov
and
mov
repnz
es
mov
fwait
mov
lret
inc
inc
out
cmp
adc
push
xor
add
repnz
out
mov
mov
sbb
sbb
idivb
cli
into
inc
ljmp
mov
mov
lahf
push
mov
add
cmpb
icebp
mov
inc
lret
push
cmp
inc
call
rolb
or
js
rcl
js
jnp
mov
sbb
sbb
cli
jnp
imul
jo
mov
mov
into
arpl
or
sbb
out
or
es
out
inc
or
call
jns
mov
sbb
cmp
mov
mov
inc
mov
mov
push
or
xlat
xlat
scas
xchg
mov
jb
push
cli
mov
push
mov
cmp
rorb
repnz
out
stos
cmp
adc
push
cmp
test
mov
jmp
imul
mov
adc
movsl
sbb
or
decb
imul
mov
mov
sti
sbb
or
sbb
dec
mov
cmp
or
out
stos
add
or
in
push
jecxz
dec
jno
test
push
dec
push
jne
mov
aas
imul
test
stos
push
or
out
push
jl
sbb
adc
dec
cld
dec
or
inc
inc
add
dec
mov
add
or
mov
add
or
ljmp
mov
mov
aaa
call
ror
inc
call
xchg
insl
lret
repnz
mov
roll
sub
insl
xchg
pop
add
mov
mov
lds
dec
outsb
repz
iret
test
cmp
push
dec
imul
clc
int3
stc
in
in
pop
scas
test
push
cltd
sbb
icebp
jnp
cli
push
push
pop
push
sbb
sti
pop
cmp
test
or
test
lret
mov
cmp
pop
mov
sub
cs
xor
sbb
mov
cmp
cltd
inc
call
dec
dec
dec
fistps
or
sub
lea
mov
xchg
jbe
arpl
add
pop
call
test
dec
fistpl
shrb
pop
adc
int
push
dec
mov
call
fwait
pop
js
cli
or
mov
mov
cld
inc
pop
pop
sub
dec
lock
adc
in
clc
out
cli
jb
xchg
jns
cld
push
pop
adc
js
imul
dec
jno
add
cmp
inc
sub
push
iret
or
test
push
stos
xor
adc
pop
mov
pushf
pop
lea
pop
push
pop
xchg
jmp
aaa
and
or
cmpsb
ds
add
sti
xchg
push
pop
dec
or
imul
lret
sbbb
leave
cld
dec
pop
dec
or
iret
fistpl
es
pop
shll
inc
imul
repnz
arpl
xchg
js
call
out
xlat
pop
adc
jmp
cli
or
push
cli
fmuls
pop
sti
fwait
dec
negb
imul
dec
call
sti
jno
dec
lret
ljmp
pop
in
dec
mov
add
dec
scas
lret
mov
mov
xor
or
push
cmpsl
pop
inc
dec
or
xlat
cwtl
jb
into
repnz
bound
pop
cmpsl
push
cmp
jge
pop
inc
dec
or
add
sti
or
inc
cmp
cli
sub
push
pop
xchg
sbb
pop
jno
lahf
lret
cld
ficomps
call
mov
fstpt
cli
js
sbb
clc
mov
push
cmp
out
ror
dec
sub
jo
add
fdivrs
scas
add
pop
mov
push
scas
test
stos
pop
pop
xchg
mov
mov
xchg
sbb
push
dec
xor
cmpsl
pop
fistpll
lock
or
mov
sbbb
stos
cld
push
stos
dec
adc
sti
xchg
ret
lret
fidivrl
ret
js
js
mov
mov
mov
lcall
out
cli
push
push
clc
js
mov
pop
pop
in
lcall
js
push
mov
sub
fdivrs
mov
fnstcw
cli
stos
dec
inc
cli
stos
xor
jbe
xchg
insb
or
cli
lcall
or
js
aas
stos
cli
sbb
sahf
mov
xchg
call
fidivl
cmp
cli
pop
sahf
pop
mov
imul
ficoml
mov
dec
cmpsb
mov
arpl
dec
cmp
cmpsb
jo
into
mov
mov
aas
dec
cld
outsb
in
addr16
lret
scas
mov
fwait
mov
xchg
test
jno
lahf
clc
clc
jb
jo
mov
mov
imul
mov
jb
pop
mov
jp
scas
cltd
call
mov
cmp
lock
dec
jle
pop
imul
mov
xor
out
call
jmp
fimuls
xchg
dec
sbb
aam
scas
dec
mov
xor
out
jns
jo
aam
cmp
cmp
stos
xor
xor
cmp
into
xchg
out
push
inc
jae
dec
or
push
and
push
in
sbb
xor
inc
ss
cmp
rol
or
out
xor
out
data16
sarb
repnz
in
cli
or
mov
scas
mov
inc
dec
scas
fnstenv
fisubrl
jmp
push
mov
adc
out
mov
mov
loop
pop
mov
cmp
leave
or
fisubrl
in
or
dec
mov
push
push
sbb
lret
mov
lcall
ficompl
leave
and
enter
outsb
jmp
pop
mov
cmp
cltd
mov
cmp
ljmp
int3
test
sbb
push
sub
testb
jp
or
cwtl
mov
stos
mov
or
repnz
mov
cmpsb
sbb
in
fcompl
inc
dec
push
cmp
add
mov
mov
orb
jp
jge
or
mov
test
cli
push
add
les
dec
fwait
xlat
push
movsb
insb
jnp
jmp
imul
pop
fisttps
ss
sbb
sbb
or
push
push
or
pop
mov
into
insb
repnz
insb
jne
xor
add
aas
jnp
inc
pop
mov
lcall
cmp
lret
icebp
lcall
mov
aaa
ds
inc
pop
or
inc
test
mov
mov
pop
sub
mov
mov
hlt
mov
loop
mov
or
cmpb
mov
daa
je
loop
les
lods
sbb
push
add
sarl
mov
mov
push
cmp
adc
testl
in
pop
leave
or
ficompl
push
cmp
lcall
icebp
pusha
call
cltd
push
out
imul
jo
aas
cli
mov
or
mov
aaa
leave
or
out
dec
ds
lcall
lcall
cmp
stc
push
or
in
push
mov
mov
lods
add
and
fmuls
push
repnz
ret
jp
or
cmp
cwtl
or
repnz
mov
push
or
in
test
lcall
mov
fcomi
pop
out
dec
cmp
lods
mov
mov
sbb
cmp
dec
dec
imul
add
les
pop
lret
jns
push
mov
leave
push
and
test
or
or
push
cmp
jae
mov
fisubrl
cmp
xor
and
or
sub
stos
ljmp
fadds
call
dec
outsl
mov
insl
leave
ja
stos
push
cmp
cmp
or
dec
subl
out
enter
adc
sub
cmp
fwait
pop
sbb
cmc
and
mov
push
lcall
sbb
loop
jns
stos
and
lea
leave
cmp
out
stos
rolb
xchg
pop
lret
sti
in
pop
pop
fidivrl
repz
bound
inc
test
jns
push
outsl
push
adc
xchg
sti
or
pop
test
stos
cmp
cs
ret
or
sub
pop
mov
cmp
lds
pop
icebp
add
shl
pop
jle
cwtl
or
pusha
or
xlat
pop
mov
stos
aad
jp
dec
xchg
pop
dec
sbb
cmp
xchg
push
or
xlat
pop
mov
stos
jne
dec
es
lock
jmp
sub
add
mov
push
shll
pop
pop
movsb
mov
push
into
sub
mov
call
jns
dec
adc
sbb
sahf
or
xor
xor
or
push
ds
sbb
shll
inc
cmp
or
roll
or
dec
and
je
jmp
cmp
bound
fwait
xchg
iret
or
pop
rorb
and
inc
cmp
cmp
cmp
mov
repnz
loope
dec
ljmp
inc
or
out
inc
cltd
sub
dec
dec
scas
mov
pop
mov
jo
into
push
sbb
fstps
jl
adc
dec
xor
dec
add
lret
cmpsl
jmp
jp
dec
cmp
outsb
cwtl
pop
pop
imul
imul
fstpt
and
fsubrs
add
mov
outsl
stos
mov
mov
sbb
js
leave
outsl
sbb
jmp
sbb
add
sahf
dec
dec
inc
sub
ljmp
cltd
arpl
js
aad
out
fnstenv
or
or
or
out
cmp
or
sub
repnz
mov
call
adc
adc
adc
sbb
add
mov
mov
test
and
test
iret
and
xchg
push
rcrb
push
cmp
stos
mov
dec
sti
pushf
xchg
and
adc
sbb
pop
jnp
jmp
or
push
aaa
stos
fmuls
outsl
sbb
gs
imul
repz
fwait
cmp
xchg
or
adc
fistps
test
pop
mov
les
mov
lea
fwait
push
fsts
rcrl
or
inc
cli
or
stos
mov
sbb
cmc
fimull
push
mov
mov
fcmovbe
out
lcall
mov
pop
roll
test
sahf
push
dec
mov
enter
dec
inc
inc
cmp
mov
push
or
jle
lcall
or
sub
pop
push
pop
inc
add
jge
lcall
mov
push
mov
lret
idivl
cmp
push
pop
jno
fistpll
add
adc
jae
cli
jmp
js
roll
or
mov
mov
xlat
pop
or
in
fcmove
movsl
xchg
adc
enter
addl
sti
enter
mov
cmp
enter
js
pop
adc
pop
mov
pop
add
push
pop
add
pop
hlt
insl
jg
push
imul
cld
mov
adc
pop
cld
mov
jno
pop
pop
rorl
cli
mov
mov
sbb
jno
cld
mov
jne
fcomps
in
cmp
adc
pop
mov
imul
pop
int
dec
sub
movsb
xor
int
jae
or
mov
sbbb
dec
scas
mov
pop
or
pop
pusha
mov
sub
sahf
mov
stc
pop
xor
lods
pop
jne
jne,pt
mov
adc
pop
push
push
cli
xchg
pop
fucomp
cmp
adc
out
loope
orb
scas
or
pop
or
fidivrs
aaa
mov
test
sbb
mov
or
xchg
mov
mov
dec
adc
mov
scas
fidivrl
push
lcall
imul
or
mov
push
push
jno
fistpll
cmp
pop
mov
mov
add
pop
mov
mov
cmp
sbb
add
mov
cmp
test
or
xchg
push
mov
and
lcall
mov
mov
cmpsb
cmp
add
sahf
icebp
pop
or
pop
insl
jecxz
sti
lods
push
or
les
cmpsb
push
mov
js
push
lock
cwtl
jns
cli
ljmp
or
pop
or
xor
outsb
cmp
test
out
add
stos
dec
or
push
scas
mov
lret
add
lods
pop
cmp
jns
xchg
push
cmp
pushf
sbb
or
lret
cmp
and
jns
pop
sti
adc
frndint
and
mov
imulb
mov
dec
and
push
jecxz
roll
push
stos
mov
dec
lret
mov
out
fisttpl
call
push
pop
loop
stos
lcall
dec
or
test
mov
pop
out
mov
or
in
dec
mov
cmp
push
test
sub
pop
movsb
mov
push
or
test
imul
pop
push
jp
inc
cs
out
add
fcmovne
in
jp
xor
pop
pop
add
stos
cli
adc
mov
popa
dec
cmp
sbb
pop
fidivrs
dec
jno
add
ja
xchg
cmp
xchg
pop
cmp
pop
js
aaa
jp
cs
stos
xor
or
jp
aaa
fwait
adc
call
call
push
jno
add
mov
or
sbb
aaa
push
sbb
adc
push
sbb
cmp
outsb
dec
cs
sub
cs
cmp
mov
stc
repnz
stc
ret
dec
lock
jae
mov
pop
lcall
jl
enter
xchg
push
jp
loope
out
clc
ret
or
out
fwait
mov
repz
pop
or
dec
outsl
or
inc
cwtl
repnz
cmp
cmc
cmpsb
jmp
pop
insl
sbb
test
in
push
jmp
movsb
xchg
pop
or
jecxz
stc
xor
mov
dec
cmp
mov
jecxz
std
or
dec
pop
pop
add
cli
repnz
mov
mov
pop
in
pop
inc
testl
jb
mov
add
js
or
dec
dec
into
inc
or
scas
adc
or
pop
cmp
cmp
arpl
sbb
xchg
or
jecxz
int
es
lock
or
jno
push
mov
cld
cmp
mov
imul
pop
or
or
fsts
jecxz
sti
cld
inc
or
cld
cmp
adc
sub
cld
inc
or
or
xchg
adc
sub
cld
inc
or
dec
or
jb
in
test
lcall
xchg
or
jecxz
fistl
test
lcall
movsb
mov
lods
mov
or
or
mov
adc
dec
or
pop
decb
cmp
mov
dec
repz
fimuls
lods
pop
jne
insl
mov
mov
fisubrl
cli
mov
sub
cld
movsl
or
pop
cld
inc
or
mov
cli
dec
xor
mov
jl
lcall
imull
add
in
shr
jbe
shll
repz
mov
jmp
push
cmpsl
sub
sbb
mov
jge
jmp
mov
jmp
lock
or
repz
jmp
dec
jge
jmp
xchg
cmp
lcall
jmp
mov
pop
dec
or
test
mov
mov
xchg
imul
icebp
lea
pop
push
jnp
push
jmpw
cmp
leave
pop
xchg
mov
mov
mov
mov
mov
icebp
fcmovnb
stos
push
fmuls
out
leave
ljmp
inc
or
stos
cmp
cmp
lret
cld
xchg
scas
cld
xchg
pop
adc
out
cltd
and
xchg
jp
dec
out
mov
or
cld
decb
or
out
enter
cli
stos
lahf
stos
mov
sti
mov
cmp
sub
mov
out
push
mov
cmp
ljmp
pop
jg
cmp
cmpsb
aam
mov
test
pop
mov
dec
ds
cmpsb
fadds
lds
pop
dec
jle
pop
ljmp
rorl
ljmp
ljmp
dec
jp
pop
das
cli
mov
fimull
mov
das
aaa
pop
mov
ljmp
mov
dec
push
dec
ljmp
mov
out
sub
test
mov
cld
pop
ljmp
scas
cmc
xchg
xchg
out
mov
bound
and
jnp
mov
iret
sub
mov
cmp
cmp
mov
les
dec
xchg
jle
loopne
daa
xchg
dec
stos
dec
xchg
or
pop
mov
xchg
fldcw
orl
ds
sbb
mov
pop
cmp
fdivr
lods
pop
jno
imul
pushf
pop
stos
cli
out
stos
mov
mov
cmp
lds
sbb
cli
cmpsb
mov
loope
call
mov
and
ljmp
imul
add
jmp
jae
cli
mov
push
xchg
pop
jno
xor
out
fimull
mov
xchg
jmp
cmp
les
fsubr
lods
pop
jno
mov
out
insb
insl
jle
or
or
mov
dec
xchg
lock
push
jmp
mov
xchg
jns
movsl
jmpw
js
inc
or
inc
jnp
loope
addl
mov
outsl
lcall
nop
xchg
lret
stos
lds
push
test
sub
pop
push
add
jmp
sub
pop
pop
jmp
mov
push
sub
sar
aaa
push
idivb
mov
pushf
xor
push
jns
cmp
arpl
scas
into
mov
cmp
mulb
sub
jnp
movsb
jnp
mov
pop
jmp
jo
icebp
or
mov
movsb
pop
pop
xchg
adc
pop
xchg
jne
icebp
pop
mov
cmp
xorl
fisubrl
lea
and
sbb
pop
test
js
dec
test
stos
lea
mov
fdivrs
dec
jle
xchg
fldz
dec
jle
adc
je
adc
vpsrlw
push
xchg
adc
call
sbb
fbld
icebp
mov
pop
cmp
pop
xchg
xchg
add
call
xor
inc
sti
pavgw
int
jno
pop
sbb
push
enter
dec
neg
push
or
call
or
dec
es
lock
pop
nop
fisttps
mov
fnstenv
or
mov
mov
rorb
xlat
sub
mov
imul
or
leave
or
orb
xchg
mov
mov
or
jmp
inc
imul
xor
les
faddl
pushf
orl
int
dec
jmp
sub
dec
pop
les
arpl
cmp
leave
outsl
cmp
out
dec
adc
pop
cmp
mov
dec
or
leave
cmp
js
aam
cmp
sub
repnz
lret
adc
xchg
push
stos
xor
and
aaa
jno
mov
mov
and
xchg
dec
enter
mov
cs
cmpsb
sti
jmp
ljmp
mov
aaa
cmp
stos
pop
fmull
imulb
pop
mov
mov
mov
clc
outsb
fisttpl
cli
int
clc
outsb
mov
dec
cli
int
clc
outsb
fwait
mov
fnstsw
lret
call
or
repnz
xchg
adc
cltd
insl
inc
xchg
push
imul
dec
mov
cli
mov
cmp
popf
sub
add
les
into
xchg
out
jmp
dec
dec
stos
xchg
jl
imul
out
mov
cli
mov
dec
sbb
pop
adc
sub
cmpb
mov
pop
dec
xchg
repnz
js
js
fisubl
imul
fsubrp
xor
pop
add
imul
jne
xchg
out
sub
loop
lea
es
lock
xchg
or
out
cwtl
pushf
pop
clc
out
cmp
xchg
fs
sub
pop
mov
sti
ret
stos
out
add
test
test
jns
cmp
cli
pusha
sub
out
lret
pop
sub
sub
xchg
pop
dec
cmpsb
and
jmp
jp
shrb
or
cmp
add
sub
xchg
or
js
mov
popf
es
lock
testb
mov
or
pop
or
out
sub
mov
xchg
mov
dec
lea
addl
mov
sub
into
mov
push
out
sub
jle
lret
sbb
sbb
jmp
cmc
push
or
fmul
xchg
aad
popa
add
sbb
sti
lea
dec
push
ficoms
imul
or
sbb
inc
dec
jecxz
or
popf
stos
in
xchg
cmp
enter
cmp
dec
pop
mov
mov
dec
cmp
scas
jnp
xchg
mov
xor
jp
dec
push
dec
inc
fcompl
pop
mov
insl
mov
mov
out
mov
rorb
cmc
and
insl
outsl
sti
sti
adc
mov
or
cmc
push
mov
pop
mov
jp
out
or
mov
imul
pop
pop
dec
lds
mov
pop
scas
fcoms
mov
hlt
mov
je
jns
pop
mov
push
mov
jp
adc
jl
mov
leave
outsl
adc
sar
sbb
pop
cmpsb
sub
mov
aad
push
mov
pop
mov
pop
call
dec
sbb
fwait
lret
dec
or
es
lock
or
mov
or
jg
stos
shrl
mov
aad
insl
push
push
jecxz
lret
daa
data16
lahf
xchg
dec
pop
mov
adc
lcall
dec
dec
in
jp
mov
pop
icebp
inc
cli
mov
sahf
js
addl
lret
icebp
lock
mov
mov
inc
pop
cli
les
cmp
push
mov
jns
jg
dec
cmp
nop
jae
dec
sarb
incl
and
mov
lcall
outsl
pop
pop
in
mov
or
or
push
or
ljmp
mov
pop
cmp
add
or
jnp
data16
call
mov
andl
in
int3
cmp
stos
mov
jecxz
push
fwait
scas
jp
cs
stos
xor
or
in
fwait
push
push
mov
or
fs
aaa
fwait
jecxz
pop
js
and
add
pop
or
rcrl
dec
sbb
push
xchg
pop
jge
jnp
cltd
imul
mov
mov
sub
mov
xchg
pop
mov
int3
dec
mov
mov
repz
fisttpl
fwait
or
out
mov
mov
inc
pushf
mov
ljmp
outsb
fiaddl
stos
cwtl
mov
push
iret
jb
xchg
xchg
mov
add
mov
add
mov
mov
adc
mov
jo
je
mov
mov
cmp
leave
or
out
cli
mov
or
mov
mov
dec
dec
mov
jno
mov
mov
dec
push
inc
mov
iret
pop
mov
jno
mov
in
lcall
push
jmp
cli
arpl
cmp
mov
add
bound
data16
scas
mov
cmp
mov
pop
lea
jnp
add
inc
cld
or
pop
loope
xor
loopne
adc
push
ja
xchg
out
mov
sti
adc
js
pop
push
lcall
lahf
dec
cmc
fmuls
jle
iret
sti
xlat
and
dec
jns
or
popf
sub
xchg
xlat
and
sbb
out
cmp
sub
das
pushf
mov
fsubr
pop
dec
xchg
add
mov
mov
adc
or
xor
jmp
xor
cmpsb
loope
addl
popa
mov
pop
ss
stos
add
cmpsb
test
js
pop
fcmove
cmp
orl
push
lods
jle
cmp
jno
pop
jnp
add
sti
or
sub
dec
cmp
jns
test
call
out
jp
and
or
inc
pop
cmp
lahf
push
mov
or
iret
inc
lock
imul
jnp
cli
js
pop
fsubs
pop
inc
mov
push
sbb
cmp
das
pop
in
cli
dec
out
enter
fdiv
mov
js
pop
sarl
or
lret
or
out
fcmovne
or
call
push
popf
mov
xchg
xor
out
sub
adc
jae
push
mov
mov
adc
jmp
js
sub
sub
pop
loopne
test
fsubrs
test
in
in
xchg
leave
js
cli
lret
or
pop
fsubrs
add
push
mov
popf
push
mov
fwait
notb
jle
imul
js
mov
push
fwait
aaa
pop
mov
fdivs
pop
jle
imul
push
pop
test
or
jecxz
pop
fwait
pop
xor
sahf
pop
dec
pop
outsl
pop
xchg
adc
or
iret
dec
sbb
pushf
pop
lea
xor
xchg
sbb
jl
sbb
cli
or
fldl
pop
loope
dec
lret
jo
add
cmp
mov
mov
ds
xchg
adc
js
sbb
jl
or
scas
lcall
pushf
iret
cmp
sti
ds
jae
jmp
cmp
out
imul
pop
jmp
imul
pop
add
testl
cld
mov
dec
cmp
cli
add
fcompl
cmpsb
or
mov
out
sti
aaa
pop
mov
rolb
aaa
push
testl
outsb
mov
mov
into
outsb
sbb
aad
or
add
mov
jae
mov
aaa
jp
cmp
xchg
clc
mov
pop
outsb
xor
push
scas
cltd
cld
jbe
pop
jle
imul
push
es
mov
dec
imul
cmpb
mov
cmp
dec
mov
inc
test
inc
test
sbb
dec
xchg
dec
xlat
sub
or
inc
aas
or
mov
outsb
cli
xor
cmp
mov
test
dec
cmp
or
pop
mov
inc
cmp
or
sbb
xchg
push
pop
push
fimull
xchg
mov
pop
xchg
shr
mov
rorl
adc
insl
jp
sti
cmc
mov
lcall
or
cmpsb
cmp
inc
or
cmp
pop
jecxz
ljmp
or
loop
push
test
bound
cmp
in
adc
ret
pop
outsl
jmp
fsubrs
cmp
js
mov
sti
or
cmp
ss
dec
clc
add
call
sbb
cmp
cmp
out
in
pop
jb
push
js
imul
pop
rcrl
cmp
xchg
sub
inc
rorl
inc
dec
add
xchg
mov
adc
jnp
int
out
cmp
fidivl
dec
jecxz
push
sbb
sarl
cli
lret
dec
inc
mov
sbb
cmp
cmp
inc
dec
pop
cmp
outsl
or
lret
in
pop
jno
bound
xor
cmp
cwtl
cmp
jle
rcl
pop
scas
imul
pop
cmp
jns
xlat
jle
stos
test
aaa
jnp
or
push
adc
pushf
leave
call
sbb
jl
pop
jnp
inc
sub
jecxz
adc
pushf
insl
enter
push
cs
sbb
aaa
out
mov
or
sti
movsb
out
sbb
cli
movsl
and
mov
xchg
or
pop
test
cmp
lcall
cmp
sub
ljmp
out
and
add
or
jo
into
notb
or
rolb
jge
stos
mov
xlat
mov
stos
jb
jp
or
fistpl
dec
push
cmp
cmpsb
iret
pop
jmp
adc
mov
cmp
cmp
mov
stos
sbb
cmp
enter
lret
jecxz,pt
sbb
mov
call
push
aaa
pop
mov
and
or
xlat
cmp
mov
inc
cmovo
adc
add
lds
iret
test
cmp
xchg
mov
scas
mov
dec
inc
jb
js
mov
lods
mov
fimull
push
mov
testl
mov
mov
xor
ret
jle
fmuls
and
cmp
sbb
dec
flds
cmp
fwait
rorl
jb
rorb
insb
sub
pop
std
fcom
jo
mov
int
dec
ljmp
aaa
pop
mov
xchg
out
sbb
pop
mov
pop
or
pop
jbe
fadd
sub
mov
jmp
pop
xchg
aam
adc
jbe
or
out
sahf
lret
fstps
ljmp
pop
fwait
hlt
test
or
add
pop
cmp
mov
add
adc
stc
jbe
or
out
sahf
int
jecxz
mov
bt
or
pushf
int
sti
mov
add
mov
mov
pop
dec
mov
mov
jle
mov
jge
mov
mov
mov
out
lcall
scas
fidivrl
cmc
or
pop
bswap
xlat
je
mov
pop
cmp
imul
mov
call
jmp
imul
or
iret
pop
push
push
into
ja
js
xor
cltd
mov
test
dec
lea
sti
cmp
jnp
imul
adc
jp
or
dec
shlb
in
ljmp
mov
rorb
add
jmp
imul
cld
or
movsb
mov
cmp
or
test
cld
mov
pop
js
xchg
cwtl
jp
pop
or
idivl
dec
addr16
dec
mov
shl
pop
mov
aas
or
jp
dec
pushf
aad
popf
mov
fwait
jecxz
or
pop
dec
loop
jecxz
or
push
or
insl
push
xchg
or
or
pop
iret
push
dec
scas
mov
push
out
pop
jb
mov
call
pop
mov
or
sti
push
push
jne
out
pop
out
lcall
adc
iret
xchg
push
sahf
or
cmp
or
pop
fstpt
insl
push
dec
or
repnz
push
adc
mov
inc
cli
sub
stos
jle
fmull
insl
dec
arpl
icebp
xchg
adc
adc
jp
pop
aas
adc
cwtl
cmp
jle
push
pop
imul
pop
xchg
xchg
push
sbb
fcomps
sbb
dec
push
push
pop
mov
cwtl
mov
mov
hlt
mov
test
push
jo
call
jecxz
dec
push
das
cmp
adc
pop
xchg
add
push
int3
cmp
fcmove
and
repnz
mov
cmp
pop
cmp
sbb
sub
mov
scas
cmpsb
xlat
pop
mov
jp
cmp
pop
mov
fisttpl
or
mov
scas
or
adc
pop
arpl
aaa
dec
in
fmuls
or
mov
jns
push
mov
mov
fisttpl
cmp
stc
or
cmpsl
mov
or
enter
sbb
roll
insb
roll
mov
gs
mov
jle
addb
stc
jle
aad
ljmp
mov
sub
in
out
xor
push
dec
enter
push
push
lret
fcoms
arpl
cmp
lock
aaa
test
lret
ljmp
and
mov
rcrb
or
or
scas
or
adc
outsb
fmuls
or
imul
in
pop
mov
punpckhwd
nop
jo
dec
cmp
ljmp
jns
cmc
sub
mov
or
jmp
fwait
in
or
lcall
test
adc
mov
aaa
adc
mov
js
sbb
pop
mov
sbb
adc
jmp
out
sbb
adc
adc
clc
testb
or
daa
stc
or
clc
sbb
in
in
ljmp
sti
sub
fsts
push
dec
mov
hlt
jecxz
jmp
hlt
data16
clc
scas
sbb
cmp
data16
repz
cld
test
cli
aam
mov
cltd
out
test
or
add
mov
pop
enter
mov
dec
ret
sti
int
mov
lret
sti
cwtl
int3
or
and
cli
stos
jmp
sahf
clc
dec
and
in
mov
rclb
call
mov
mov
sbb
imulb
dec
cmp
lcall
lret
cmp
pop
sbb
cmp
lock
inc
test
dec
mulb
pop
jmp
js
jno
sbb
out
jmp
leave
ficompl
dec
hlt
mov
icebp
xchg
adc
aaa
pop
mov
and
je
out
lcall
in
sbb
jecxz
repz
mov
ud0
sbb
loopne
sbb
pop
sahf
loopne
pop
and
sbb
mov
fldt
mov
out
or
lcall
out
in
test
enter
dec
in
sbb
cmp
jl
mov
test
mov
cmp
dec
pop
sbb
fldenv
in
or
fnstcw
lods
pop
jno
ficompl
fnstenv
add
xor
sub
xor
arpl
addl
mov
xchg
push
pop
dec
test
fstps
mov
enter
dec
cld
jnp
loope
pop
adc
cli
xlat
adc
movsb
pop
fnstcw
or
mov
scas
pop
jno
mov
cmp
call
out
mov
pop
mov
idivl
ficoml
scas
sbb
ficomps
outsl
mov
cmp
pushf
pop
popf
xor
sbb
sar
pop
jo
in
imul
stos
pop
jns
subb
dec
or
pop
lock
and
or
dec
cli
outsl
les
fnstcw
add
push
adc
or
mov
sub
push
pop
pushf
popf
sub
inc
sbb
mov
cli
ljmp
adc
sti
sub
mov
mov
sub
cmp
pop
cmp
pop
das
fisubrl
out
sub
adc
mov
dec
jns
add
sbb
mov
in
sbb
pushf
dec
mov
jnp
out
xchg
mov
pop
jne
or
scas
jmp
mov
movsb
push
jns
cwtl
mov
cmp
test
pop
jno
leave
mov
pushf
mov
stos
dec
lret
push
adc
jns
pop
mov
and
adc
fbld
mov
dec
xchg
sarl
or
iret
movsb
mov
ljmp
cmp
jle
pop
or
push
and
cmp
mov
iret
call
insb
mov
sbb
xor
cwtl
cmp
pop
xlat
mov
adc
cwtl
cmpsl
rcrb
stos
sbb
jo
out
stc
js
jo
scas
pop
cwtl
push
mov
xor
sbb
mov
push
cmpsb
cmp
jnp
xor
insb
push
lcall
jmp
fistpl
push
dec
pop
iret
clc
add
cmp
sbb
inc
sub
and
call
sub
rcrb
jo
mov
into
pushw
xchg
lret
data16
mov
subl
add
inc
ljmp
push
ret
push
jle
ret
mov
inc
stos
dec
xchg
pop
cmp
stos
push
mov
cmp
mov
aas
xor
cmp
sti
lcall
and
xor
sub
aas
push
scas
push
add
mov
cmp
jp
inc
mov
dec
dec
and
jnp
inc
iret
dec
sbb
pop
mov
or
pop
inc
aaa
lss
out
push
call
aaa
sub
dec
xor
or
mov
or
and
cmp
pop
iret
or
adc
push
push
inc
aaa
pop
mov
inc
sbb
pop
mov
call
loope
dec
ljmp
pop
or
out
pop
or
pop
out
daa
push
scas
lret
cld
and
rorb
jmp
fldt
sti
repnz
sub
push
loop
cli
sub
inc
push
jo
or
iret
stos
add
add
pop
jno
xlat
sti
cmp
lcall
pop
in
stos
jo
add
mov
adc
imul
add
cs
test
mov
incl
aaa
imul
popf
mov
jno
add
pop
pop
dec
mov
add
dec
js
lcall
xor
adc
mov
in
jns
cli
sub
or
lret
xor
dec
in
lcall
dec
push
popa
pop
loope
loopne
fs
cmp
push
movsb
push
idivl
testl
pop
cmp
jmp
fs
fidivrl
inc
loop
stos
mov
lret
push
jecxz
clc
cmp
xchg
outsl
fsubr
dec
adc
out
dec
or
fdivrs
movsb
jo
mov
mov
cmp
addr16
sbb
stos
push
sbb
xchg
push
leave
movsb
out
dec
push
popa
test
enter
push
pop
xchg
mov
mov
fdivr
push
cmp
or
mov
and
mov
and
enter
inc
pop
scas
sbb
inc
dec
ffree
addr16
or
mov
enter
jbe
pop
lcall
stos
push
dec
jl
sub
imul
mov
out
xor
mov
sbb
out
or
or
sub
xchg
pop
push
cltd
add
test
fptan
clc
test
test
add
lret
dec
jp
xor
push
jge
fwait
in
push
xchg
clc
pop
mov
lret
cmp
mov
ljmp
push
dec
push
push
and
add
jecxz
mov
mov
pop
call
inc
jb
push
call
call
pusha
cmpsb
mov
sbbl
mov
outsl
call
push
sub
cld
adc
cmpsb
sub
push
push
and
fldt
or
stos
scas
fwait
movsb
idivl
xor
or
push
cmpsl
add
sarb
add
es
dec
ljmp
or
iret
cmp
out
sbb
jecxz
shrl
lahf
test
lret
cmp
in
jecxz
lcall
imul
iret
mov
pop
mov
lock
jns
cmp
insb
or
push
enter
aad
test
call
stos
rorb
mov
iret
cmp
rorl
add
arpl
sbb
or
add
pop
adc
cmp
gs
ss
sbb
cmp
imul
push
sbb
inc
jge
mov
inc
add
jns
jno
adc
add
orb
or
out
or
mov
sub
lcall
test
cld
fistpl
movsb
out
call
in
stc
fidivrl
push
sahf
jns
std
aas
cmc
nop
mov
bound
jl
or
out
jle
xchg
adc
mov
out
sub
pop
mov
pop
push
pop
inc
or
mov
adc
adc
sub
pushf
or
lret
or
js
aam
mov
or
pop
pop
pop
xor
jg
ljmp
sbb
cmp
jecxz
addl
mov
test
jno
popf
es
add
or
and
jecxz
or
pop
xlat
pop
cwtl
movsb
sahf
jmp
jb
js
push
pop
aaa
pop
mov
or
in
hlt
cmp
in
int3
lret
roll
fcompl
pop
jno
lret
pop
push
cwtl
iret
loop
icebp
jl
or
xlat
pop
cwtl
popf
es
shrb
push
cwtl
dec
stc
jle
sti
mov
psubw
lds
popa
cwtl
pop
push
std
jle
cmp
dec
clc
add
shl
pop
scas
dec
cmp
push
mov
or
mov
out
cli
sarl
out
mov
sbb
push
sar
dec
sti
mov
cmp
jno
popf
cmp
sahf
add
cli
dec
inc
push
call
ljmp
fstps
leave
fimull
imul
jp
out
mov
js
subl
xchg
fistpl
xor
jmp
fcompl
add
sbb
pop
dec
push
pop
pop
pop
cli
jne
xchg
out
mov
or
lret
push
cli
aaa
pop
mov
jno
popf
mov
mov
in
test
jns
rorl
in
cli
shl
pop
mov
cli
enter
xlat
cld
pop
pop
mov
mov
popf
es
lock
adc
add
sbb
jo
xchg
xlat
sub
sarb
or
pop
mov
cmp
jp
cmp
mov
popf
mov
cli
pop
cmp
popf
stos
icebp
xchg
enter
cmp
mov
cmp
push
push
subb
push
dec
js
imul
mov
and
push
jb
jmp
mov
shll
sti
jmp
dec
jmp
mov
bound
sub
or
xlat
and
aad
ljmp
and
jmpw
dec
or
cld
sub
mov
xchg
loope
scas
loope
cmp
cmp
pop
jbe
mov
iret
dec
mov
flds
mov
fistl
mov
mov
stos
jno
push
call
mov
test
cli
or
push
call
out
lcall
lods
mov
mov
sti
imul
fisubrs
adc
fcomi
mov
sti
mov
xchg
sti
or
out
jp
mov
xchg
imul
stos
jmp
adc
stos
mov
mov
fistpl
mov
push
stos
aaa
pop
mov
dec
repnz
xlat
mov
cld
dec
mov
pop
cld
insl
mov
out
mov
sub
pop
nop
mov
dec
iret
and
xchg
and
dec
pushf
mov
sti
mov
push
mov
xorb
xlat
imul
psubusb
or
mov
lock
sti
loopne
xchg
inc
ljmp
cwtl
mov
jnp
jne
insl
mov
cmp
cmc
fisttpll
mov
bound
in
push
add
loope
mov
mov
loopne
addr16
inc
out
cltd
test
dec
nop
cld
insb
dec
fwait
orb
outsw
leave
pop
mov
dec
ljmp
lods
cwtl
xchg
imul
pushf
xchg
mov
cmp
fistps
jne
mov
dec
mov
pop
icebp
mov
pop
dec
dec
daa
ds
mov
jl
fstps
mov
pop
pop
pop
call
mov
mov
sahf
mov
ffreep
fimuls
outsl
mov
jmp
pushf
mov
fmuls
ds
xchg
or
mov
js
pop
aas
imul
icebp
xchg
sbb
fimuls
test
pop
pop
mov
lcall
dec
jl
imul
mov
jns
ja
adc
data16
push
cmp
icebp
adc
test
pop
loop
rcrl
mov
pop
pop
mov
cmpsl
jl
pop
cmpl
call
mov
ret
push
cmp
fwait
jl
push
cld
ja
xor
push
fcmovne
outsl
add
enter
test
fstpt
pop
jecxz
or
push
jae
out
or
jae
dec
sbb
clc
push
inc
pop
sbb
outsb
ja
ljmp
push
pop
pop
inc
pop
or
subb
pop
inc
sub
push
in
adc
cld
fstps
cmp
mov
cmp
pop
stc
pop
es
or
cmp
stos
pop
mov
gs
cltd
mov
inc
cmp
pop
dec
sub
imull
cmpl
sub
xorl
cwtl
test
bound
test
add
inc
jmp
xchg
js
xchg
mov
adc
sbb
stc
fmul
add
adc
lret
lock
stc
pusha
cmpsb
test
mov
in
cmp
in
or
jle
xor
js
mov
out
sbb
and
in
hlt
dec
ficompl
fwait
gs
fcompl
fldcw
jp
jno
pop
mov
aas
rcr
xor
dec
fdivr
in
dec
mov
fcomps
and
or
jae
mov
cmp
fisubrl
xor
pop
call
push
mov
fldenv
pop
push
xchg
stos
mov
mov
cmp
or
or
xchg
stos
in
fsincos
scas
pop
jp
pop
mov
cltd
add
imul
cli
mov
icebp
stc
aaa
pop
mov
in
cli
add
mov
cwtl
pop
push
sbb
pop
mov
into
sub
cltd
push
push
lods
pop
jno
cmc
push
sti
push
mov
xchg
lcall
and
pop
mov
jns
or
rcrl
pop
ljmp
sbb
xor
das
call
ftst
xor
fists
lea
test
stos
sarl
cli
enter
sub
cmp
in
jmp
clc
jmp
aad
lock
mov
imul
dec
dec
jns
fdivr
jecxz
sahf
sub
loope
xchg
stos
mov
jle
imul
insl
or
ds
mov
add
sbb
repnz
mov
push
pop
sub
or
pop
mov
sti
cmp
in
cmpsb
stos
pop
idiv
insl
imul
stos
stc
dec
outsl
adc
mov
aaa
stos
cmp
mov
or
adc
sbb
push
cltd
das
out
fisubrl
pop
mov
push
lea
cmp
xor
jmp
pop
dec
pushf
insl
cld
fadds
out
add
pop
adc
dec
mov
mov
fyl2xp1
out
push
xchg
fstps
push
jb
mov
sbb
inc
pop
adc
and
inc
mov
and
pop
sahf
cmpsb
push
sbb
pop
shrl
sbb
out
add
jmp
imul
xor
sbb
pop
sahf
ljmp
or
ljmp
fcomps
cmp
nop
dec
adc
jmp
mov
shl
pop
jle
mov
mov
mov
mov
stos
aaa
push
push
sbb
pop
shrl
stc
idivl
push
shll
cli
mov
jmp
fsubl
dec
test
pop
push
sub
out
mov
scas
cmp
pop
sbb
mov
mov
shr
and
insl
fyl2xp1
pop
pop
sti
cltd
clc
mov
out
or
cli
or
inc
mov
fstpt
scas
aaa
pop
mov
push
test
jns
mov
dec
test
cwtl
mov
add
mov
mov
fs
mov
out
dec
or
pop
cwtl
jae
pop
ret
outsl
pop
iret
cmp
add
movsb
adc
cld
dec
ljmp
pop
dec
sti
into
mov
jg
stc
push
rclb
push
mov
js
pop
pop
pushf
ljmp
imul
mov
jmp
scas
mov
sbb
cli
call
into
ret
or
and
fimull
jl
pop
outsl
fdivrp
dec
stc
push
ficoms
mov
loop
ljmp
out
test
lcall
fcom
pop
out
lcall
xchg
cmp
pop
pop
pop
pusha
enter
pop
ret
ja
add
imul
pop
call
rcrb
push
addr16
test
fadd
stc
pushf
pop
pop
leave
cld
ja
pushf
pop
fmuls
mov
jl
push
cltd
mov
repz
cmp
xor
cwtl
neg
cmp
mov
in
or
aaa
cmp
mov
mov
push
add
push
pop
add
or
js
or
fs
cmpsl
outsl
fimull
ss
imul
cwtl
repnz
cmp
mov
or
int
push
sbb
jnp
out
jle
xor
jle
or
jle
mov
jle
scas
mov
imul
jle
push
jle
imul
jle
push
jp
sub
ret
ljmp
nop
rorl
scas
jp
cs
push
mov
cmp
or
push
iret
lcall
scas
push
aaa
pop
push
cmp
jp
push
jge
and
popa
xchg
enter
movsl
sbb
sbb
outsb
sbb
test
rcrl
popa
lcall
neg
mov
pop
pop
xor
out
stos
ret
loop
cld
in
sub
jge
leave
inc
out
jb
out
call
xlat
ds
leave
push
push
fcoml
loope
push
add
clc
cmc
fmull
xchg
enter
test
fistps
sbb
aas
sbb
push
adc
jp
pop
in
push
enter
push
push
sbb
pop
mov
push
filds
jp
mov
push
xchg
sbb
mov
mov
popf
es
hlt
pop
sub
lcall
and
jmp
lret
dec
enter
add
pop
or
inc
sbb
faddl
sub
mov
mov
sub
sub
pop
packuswb
mov
out
add
or
out
mov
out
mov
cli
les
push
jne
clc
cmp
decb
fisubrl
scas
out
dec
cmpsb
add
cmp
mov
jo
movsl
adc
cli
push
lcall
pop
xchg
or
test
in
push
or
sub
aaa
popa
sub
dec
cmp
out
lcall
hlt
cltd
mov
std
insl
jns
inc
out
imul
imul
cmp
fcomi
in
or
pop
pop
movsb
sbb
cmp
mov
cmp
sbb
sar
insl
cmp
aas
push
or
mov
adc
mov
push
test
xchg
jae
fidivs
fwait
sub
pop
jp
movsb
dec
cmp
dec
mov
xchg
jnp
xchg
jne
or
fldl
jle
cmp
leave
dec
jle
in
cmpl
repz
mov
pop
pop
sbb
mov
mov
cltd
adc
clc
pop
daa
dec
cmp
cmp
xchg
loopne
mov
cs
and
es
hlt
adc
movsbl
fwait
pop
subps
cmp
push
adc
repnz
pop
mov
popf
es
lock
mov
or
xchg
jmp
cli
stos
stos
or
int
fisubs
pop
cmp
push
xchg
sbb
das
cmp
loope
sub
xchg
push
call
xchg
pop
mov
test
sub
jg
call
mov
cmp
int
cld
out
jnp
jo
xchg
xlat
ljmp
mov
push
dec
fwait
pop
out
scas
cmp
or
xchg
sbb
daa
push
adc
movsb
rcr
and
pop
pop
pop
push
lods
adc
dec
sub
jg
lret
fbld
out
pop
enter
cmp
shl
pop
sahf
or
jge
sub
xor
xchg
cli
sbb
cli
or
or
cmp
notb
pop
loope
jmp
cmp
out
cmp
fyl2xp1
aas
fs
sub
repz
xor
xchg
imul
add
xlat
mov
sub
cmp
lods
stos
insl
call
dec
imul
mov
cmp
gs
push
loopne
call
arpl
push
je
jl
adc
sti
mov
mov
push
adc
popf
xchg
mov
cli
pop
cli
fidivrl
jnp
test
push
orl
mov
int
sar
xchg
lret
pop
mov
pop
movsb
cmpl
ds
pop
dec
cltd
sbb
add
jge
pop
mov
mov
cmp
pop
shrl
cmp
cmp
cmpb
pop
loopne
sti
pop
pop
out
cmp
pop
out
cmp
imul
clc
iret
js
mov
or
cli
ret
sarb
fisubrl
cmp
enter
pop
sbb
pop
cmp
adc
pop
int
mov
or
or
pop
ljmp
sbb
or
fldcw
sub
add
mov
sub
mov
sub
in
movsb
lds
mov
in
push
or
insl
or
sbb
pop
lcall
stos
arpl
cli
cmp
loop
xchg
sbbl
dec
dec
data16
icebp
mov
push
scas
cmp
aas
into
push
cmpsb
dec
daa
cltd
cmp
arpl
pop
aas
or
dec
inc
into
call
popa
cmp
ss
in
in
or
inc
in
fistps
cmp
xlat
mov
pop
out
fwait
ss
or
stos
xchg
cwtl
cmpsl
rorl
mov
mov
pop
add
jnp
scas
xchg
cli
aad
mov
xchg
mov
in
sub
cmpl
arpl
mov
dec
sbb
ret
xchg
push
push
pop
push
add
fbld
popl
iret
ljmp
sub
sbb
pop
js
inc
pop
pop
mov
subl
jnp
add
imul
fldcw
ret
aas
push
sahf
mov
in
or
adc
push
call
imul
sbb
test
xorl
das
xor
es
mulb
mov
test
fisubrs
dec
push
out
mov
push
test
mov
or
and
dec
mov
dec
sbb
xor
or
and
cmp
or
fmuls
xor
mov
ss
inc
test
clc
mov
inc
cmp
sbb
arpl
and
loop
sub
push
cs
popa
ss
das
ss
cmp
jp
idivb
xor
sti
xor
jl
mov
cs
jb
jp
mov
or
mov
aas
cld
sub
sub
inc
sbb
imulb
shll
ljmp
and
inc
es
mov
nop
aam
cmp
aas
xor
ljmp
or
sub
sub
xchg
shll
or
pop
jg
or
dec
cmp
int
cmp
imul
testl
mov
test
ret
test
xor
jnp
mov
or
xor
push
and
sti
sub
pop
or
mov
scas
inc
or
loop
loop
es
scas
adc
sub
sbb
xchg
lcall
and
aaa
adc
dec
jmp
sahf
into
mov
and
lcall
cmp
jmp
lods
call
jb
int3
daa
mov
mov
mov
imull
lret
push
mov
dec
push
sbb
mov
loop
sub
cld
ret
add
cmp
loop
dec
scas
mov
mov
jnp
lahf
repz
push
fisubrl
ret
or
rcrl
mov
lcall
jo
fsubr
adc
je
mov
push
bound
push
scas
mov
adc
xor
pop
sub
into
cmpsl
es
sub
jo
and
adc
lcall
jmp
sti
cmp
repz
mov
mov
dec
cli
repnz
mov
imul
in
outsl
jg,pt
mov
sti
xchg
mov
push
imul
sbbb
in
cwtl
int
lret
dec
decl
mov
adc
aas
jns
cmp
jnp
repz
jg
cmp
stos
sub
xchg
jmp
es
pop
sti
jmp
xchg
dec
shl
jmp
and
inc
cmp
sarb
sti
cmp
lahf
adc
xchg
push
mov
stc
test
dec
adc
dec
dec
movsb
jb
lods
mov
dec
xchg
repnz
mov
inc
sbb
gs
int3
lret
mov
dec
ja
or
nop
data16
inc
sub
sti
clc
or
fsts
or
cmp
mov
or
or
mov
mov
dec
scas
sbb
or
sub
imul
mov
sbb
pop
sbb
mov
sub
mov
adc
or
mov
scas
xchg
cltd
sti
cmpsl
test
add
popa
mov
or
pop
imul
sbb
mov
lea
call
push
mov
int
cmpsl
sbb
inc
mov
dec
call
jecxz
mov
into
mov
mov
cltd
or
sahf
pusha
sbb
lods
cmp
test
les
cmp
sbb
hlt
inc
jl
out
mov
mov
pop
cmp
sti
dec
inc
lcall
or
add
mov
jmp
cmp
pop
cmpsl
icebp
dec
cmp
mov
insl
cmp
mov
and
jg
sbb
xchg
jmp
xchg
dec
or
adc
xchg
sub
repz
cld
fidivl
jo
int3
jns
insb
pop
fadd
cli
fwait
dec
js
stos
and
fstpt
cli
adc
orb
xchg
or
dec
mov
add
ret
ss
mov
test
ret
cltd
or
lret
lcall
cli
sub
in
sti
aad
jb
int3
repnz
sbb
imul
or
ss
cmp
movups
mov
stos
clc
imul
loopne
mov
push
aaa
ror
sub
lahf
mov
jp
lcall
arpl
jp
adc
hlt
stc
and
adc
cmpsl
test
inc
adc
ret
xor
or
mov
outsl
lret
sarl
cmp
dec
movsb
sub
sub
dec
add
mov
sub
clc
lods
jmp
incb
in
push
cmpsb
jp
imul
jg
mov
mov
clc
xor
jno
mov
mov
jg
or
stos
pop
repz
mov
fmull
sti
int3
fwait
sbb
ja
mov
mov
add
fwait
enter
js
jb
ret
mov
dec
xlat
js
mov
cmp
or
mov
cmp
repz
or
enter
sub
pop
sbb
cld
dec
mov
ret
jnp
cld
outsb
repz
xor
inc
or
out
xor
movsl
cmp
or
or
or
cmp
nop
xor
aaa
jae
mov
and
inc
jb
pop
pop
cli
dec
sub
or
lcall
xchg
movsb
lcall
jnp
mov
mov
pusha
mov
leave
cmp
or
cmpl
add
inc
add
mov
pop
pop
and
push
cwtl
stc
pop
inc
push
add
scas
sbb
aas
imul
pop
mov
stc
add
mov
sub
pop
adc
lret
mov
inc
sub
lods
or
jnp,pn
xor
lcall
rclb
scas
xor
rcrb
ljmp
cmp
cmp
js
mov
jb
out
into
out
notb
jo
ret
orl
xor
mov
out
dec
icebp
dec
mov
mov
cmpl
adc
int
mov
out
out
mov
stos
enter
bnd
jb
ud0
js
sbb
daa
call
jg
cmp
outsb
mov
cmpsb
cmpsb
or
jns
cmp
ds
clc
or
mov
cmp
inc
jmp
lods
scas
or
insb
add
jb
or
mov
and
push
lcall
xor
dec
dec
mov
jns
clc
das
mov
cli
in
jmp
icebp
lock
out
add
fwait
sub
fcom
ret
icebp
outsb
lcall
mov
iret
xorb
repz
sti
adc
or
mov
dec
mov
pop
lock
add
dec
ljmp
mov
and
cs
das
cmp
mov
push
adc
mov
mov
fcmovb
rclb
ret
sbb
out
nop
dec
or
push
ret
mov
ret
and
scas
test
fisttpl
mov
rdpmc
fxtract
xchg
cmpsb
fisttpl
sbb
cmp
or
lret
cli
lcall
add
icebp
mov
fdivl
mov
ret
mov
hlt
dec
lahf
cmp
push
loopne
sarb
cmp
fidivl
cmpsb
daa
pop
mov
fstp
lret
dec
push
call
xor
lcall
dec
jbe
jb
pop
lcall
mov
js
pop
lcall
icebp
out
xor
sti
jnp
dec
call
loopne
sti
fcmovnu
mov
xor
mov
sbb
jp
aaa
push
mov
pop
stos
jecxz
adc
pushl
ljmp
cmp
fwait
mov
fwait
cmp
cmp
mov
jnp
icebp
mov
aaa
lcall
stc
daa
ret
in
lcall
in
push
mov
mov
mov
jecxz
fiaddl
lock
inc
adc
add
mov
xor
lcall
fnstcw
inc
enter
inc
mov
dec
lea
fcoms
pop
push
dec
cmpsl
call
xchg
cwtl
dec
xor
pop
and
push
test
stos
xchg
sub
sbb
inc
mov
imul
pop
rcr
cmc
icebp
out
stos
fmul
dec
cmp
call
sub
sub
cmpsb
out
dec
or
ljmp
mov
ja
jno
loop
add
and
int
sbb
inc
mov
dec
lret
ret
dec
mov
jb
fld
add
ljmp
shll
add
cmp
lcall
sub
imul
and
mov
test
nop
leave
cmp
mov
enter
popl
cmp
pop
bound
xchg
cmp
dec
or
insl
dec
sbb
pop
or
jnp
mov
into
ret
rorl
orb
push
cwtl
imul
jb
cmp
orl
fstpt
xor
ret
lock
insb
mov
shr
xlat
scas
push
push
cmp
and
xor
jp
xor
bswap
enter
xchg
push
dec
sbb
sbb
sub
ret
xlat
add
scas
pop
inc
dec
cmp
xor
into
adc
int
xchg
sti
mov
mov
rclb
iret
imul
mov
inc
rorl
or
pop
mov
xchg
lods
mov
inc
fcmove
rcr
xlat
fidivl
popa
push
sti
sahf
add
mov
repz
clc
test
dec
jo
add
fs
jo
mov
xlat
daa
or
mov
cs
add
xor
inc
orb
and
adc
or
adc
imul
cli
push
fcomps
mov
imul
fsubrs
popf
rolb
jl
mov
push
add
or
push
adc
push
lock
inc
sahf
imul
imul
jae
sbb
mov
into
dec
jle,pt
cmp
jp
sahf
lods
and
mov
sub
mov
mov
aad
ss
adc
repnz
cmp
xor
xlat
clc
cmp
jae
out
ds
sbb
ret
dec
add
mov
inc
fs
imul
sub
and
pop
pop
in
mov
mov
cli
int3
mov
pop
mov
jne
test
lcall
mov
mov
fisttpl
sbb
out
clc
fwait
test
inc
scas
mov
loopne
out
or
mov
inc
aaa
cmpsb
add
adc
add
cltd
adc
adc
push
mulb
sbb
mov
jmp
bnd
and
mov
cmp
jo
mov
stos
dec
ret
jno
sub
add
test
add
and
adcb
jmp
cmp
bnd
xchg
jns
sbb
jo
daa
in
or
stos
push
jecxz
sarl
aaa
loop
cs
inc
push
and
jbe
add
repz
add
out
imul
scas
punpckldq
sahf
hlt
jns
stos
xor
mov
adc
fdivr
pusha
movsb
daa
add
inc
push
test
xchg
adc
add
mov
xchg
iret
lcall
and
lret
dec
or
jmp
repnz
mov
mov
lret
inc
fidivl
leave
fs
mov
and
dec
add
iret
lret
dec
xchg
xchg
inc
push
not
lea
mov
ds
push
lea
mov
cli
pop
sbb
xor
out
and
or
fmul
out
out
or
cmpsb
and
sub
dec
lea
sub
mov
lret
xor
dec
cmp
fdivs
test
adc
sub
sbb
add
jmp
add
pop
ret
shrb
scas
xor
and
push
add
lods
jp
adc
xchg
test
jb
sbb
or
repz
in
sub
stos
les
mov
or
inc
pop
stc
or
sbb
jnp
jp
inc
inc
mov
rol
mov
inc
aaa
andb
sbb
lds
lret
lock
push
cmpsb
fisubl
and
xor
loopne
stos
lcall
shl
imul
adc
push
stos
jae
mov
icebp
popf
cltd
pushf
stos
cltd
pop
fs
js
cs
push
xchg
enter
movsb
pop
lret
popf
fmuls
dec
fstpt
ljmp
mov
jmp
sbb
ror
adc
mov
insl
jnp
dec
pop
adc
imul
incl
pop
fdivr
and
ljmp
xchg
lds
cmp
sub
es
repnz
pushf
imul
fmuls
cli
mov
inc
aad
mov
sub
pop
sbb
lds
jae
ret
jp
out
xchg
pop
adc
pop
ret
xchg
fwait
pop
cld
rorl
mov
lcall
mov
ljmp
sub
ljmp
and
pop
repz
inc
mov
movsl
dec
xchg
mov
and
lret
mov
cli
and
push
push
add
jo
ret
in
mull
cmp
fadds
loopne
aam
inc
sti
or
push
aas
sub
and
adc
rcrl
mov
inc
add
lods
shrl
outsb
xchg
inc
sbb
dec
or
cmc
fwait
dec
dec
int3
in
cmp
cmp
insb
jb
xchg
cmp
dec
jmp
push
cltd
adc
push
rorb
mov
dec
cmp
mov
or
cmovp
xchg
loopne
ret
roll
and
sub
ja
adc
out
movntq
out
jp
insb
js
mov
testl
cmpb
dec
pop
jmp
rcrb
ja
inc
jp
sub
push
xchg
sbb
fidivrl
xor
cmp
mov
inc
repz
mov
add
or
push
cmpsb
mov
cltd
test
jo
add
fbstp
imul
mov
pop
stos
outsl
dec
adc
fisubl
inc
cmc
or
imul
fsubs
mov
stc
int
sbb
pushf
push
clc
arpl
jp
push
and
cmpsb
ret
cmpsb
cld
mov
mov
dec
call
int
repz
jecxz
mov
push
call
gs
add
ret
push
add
pop
hlt
mov
dec
jmp
data16
dec
add
sub
add
sub
mov
push
cmp
xchg
or
jno
xchg
xchg
movsb
mov
dec
push
and
scas
in
jp
or
aaa
add
movsb
fwait
sub
mov
jb
xchg
push
dec
in
cs
mov
sti
out
imul
es
shl
sti
and
cli
or
subl
ljmp
mov
addr16
movsbl
mov
ds
mov
int3
rorl
xor
repnz
pop
dec
es
imul
pop
sbb
fs
jg
stos
ds
pop
stos
lods
sub
and
jmp
sub
push
in
stos
addr16
xor
jb
jne
stos
push
push
jmp
jmp
push
pop
ljmp
jp
pop
stos
inc
jmp
pop
movsl
stos
sub
cmp
loopne
push
das
mov
add
and
scas
jno
xchg
ljmp
mov
fisubrl
sahf
adcb
aas
jecxz
mov
fdivl
mov
out
shlb
xorl
add
mov
sbb
add
cli
xlat
inc
jo
mov
and
and
adc
lock
ret
imull
int
aaa
fists
test
sahf
test
sub
repnz
dec
sbb
ret
sub
ret
inc
fsubs
add
or
pop
pushf
jb
add
aaa
pop
scas
aas
add
pop
out
sbb
mov
mov
test
cli
mov
push
leave
and
lcall
call
mov
mov
loopne
inc
adc
cvtps2pd
mov
dec
cmpsl
divb
fwait
jns
insl
stos
mov
xorl
pop
in
mov
jg
adc
add
enter
daa
sbb
mov
mov
dec
adc
mov
in
inc
stos
movsb
decb
jne
or
sti
out
mov
or
cmpsb
in
cmp
or
jge
mov
mov
lahf
jo
int3
lcall
jae
sub
inc
adc
xor
sahf
push
loop
aas
or
lret
popf
inc
dec
mov
pop
fwait
sbb
mov
stc
xor
pop
and
or
mov
int3
mov
dec
push
cmp
mov
mov
dec
lahf
mov
mov
dec
push
insb
cmp
or
lcall
add
out
or
sbb
xchg
shl
fstpt
inc
js
ja
jno
int3
rcll
add
mov
pop
jp
sbb
adc
mov
shlb
sub
fucomi
icebp
mov
jp
add
imul
cmp
dec
in
push
add
pop
shlb
imulb
jo
mov
cli
clc
rdmsr
inc
dec
cmp
lcall
pop
shl
push
nop
dec
enter
cld
imul
fsubs
enter
cmpb
xchg
pop
and
pop
jae
inc
mov
mov
les
data16
mov
sarb
ret
cli
mov
ret
inc
sarl
pop
fldt
lahf
add
xchg
scas
add
mov
push
mov
add
movb
loop
xchg
inc
stos
pop
pushf
inc
mov
pusha
jl
push
sbb
lcall
xchg
in
push
jo
xchg
cltd
sarl
inc
jnp
mov
push
jp
mov
lret
in
lret
push
stos
sarb
inc
rclb
push
sbb
or
sbb
sbb
inc
jo
and
ja
mov
or
aas
mov
outsl
jle
ljmp
or
sbb
sti
rcll
stos
iret
mov
call
fdivs
les
aas
repnz
nop
sahf
mov
sbb
dec
cmp
sbb
ja
js
push
rcll
inc
mov
lahf
loopne
mov
xchg
adc
pop
pop
mov
sbb
mov
cmp
jp
jae
adc
jl
push
in
in
and
inc
ret
fcoms
mov
xor
test
lcall
ror
mov
popf
cli
lock
cltd
inc
test
cmpsl
dec
cmpsb
mov
mov
mov
mov
mov
out
mov
cmp
inc
in
xorb
sub
das
test
seto
fdecstp
adc
bound
mull
add
orb
push
ret
ljmp
loope
mov
jnp
pop
cmp
cmp
jae
and
call
push
sti
mov
ret
pop
call
insl
and
sahf
imul
xor
sarb
icebp
mov
adc
clc
add
mov
rcr
mov
xchg
add
call
jo
cmc
or
mov
js
rol
leave
pop
and
push
dec
ret
test
stc
in
lret
cs
xchg
mov
pop
iret
pop
adc
rol
rcr
cwtl
xlat
orl
xor
cld
push
call
jecxz
ror
jo
jnp
mov
mov
or
adc
fcomi
jb
mov
enter
inc
mov
sbbl
sbb
xchg
sub
mov
test
ja
icebp
mov
je
add
adc
adc
lcall
int
mov
sbb
pop
enter
js
add
xchg
and
mov
pop
aas
and
mov
lock
loopne
into
or
icebp
lock
adc
push
adc
ja
mov
arpl
jae
fidivrl
mov
daa
ret
cltd
or
stos
pop
mov
mov
and
mov
clc
imul
mov
daa
fimull
and
mov
mov
stc
pop
sbb
mov
sbbl
out
push
icebp
mov
dec
rcll
hlt
scas
jnp
mov
sub
test
imul
out
jo
jnp
nop
int
out
lcall
negl
out
and
add
or
fimull
mov
jecxz
sbb
cmp
shlb
xor
jle
adc
and
add
fdivrs
pop
and
jo
mov
ret
repnz
lds
jecxz
xchg
jno
lock
xlat
mov
dec
adc
lea
repz
mov
lock
sahf
cmp
jmp
ljmp
aam
inc
pop
ds
clc
jge
or
xchg
xchg
mov
pop
xchg
clc
stos
mov
fdivrs
imulb
addl
pushf
inc
fadds
mov
push
pop
enter
and
xor
cli
xor
mov
cmp
mov
inc
mov
jle
out
aaa
loop
add
dec
stc
or
cmpsl
dec
sbb
clc
lret
ficompl
or
call
mul
mov
xchg
push
xor
stc
in
sbb
pop
jb
mov
mov
sahf
fwait
test
outsl
jg
adc
int
ret
or
mov
mov
test
or
xchg
mov
or
ljmp
rcll
sar
bound
push
ja
ret
mov
daa
notl
lock
out
icebp
sbb
pop
dec
mov
testb
jns
mov
repz
add
cmp
mov
xchg
jmp
stos
punpcklbw
push
xchg
lea
mov
stc
popa
icebp
pop
popa
movl
adc
test
pop
cmpl
add
loop
sub
fimull
stc
adc
out
or
icebp
lcall
mov
lea
shr
test
pop
pusha
nop
mov
push
mov
sbb
pusha
shlb
or
imul
repz
clc
arpl
xor
add
cmc
jo
dec
shrb
xchg
mov
or
add
pop
adc
xchg
outsb
jnp
or
orl
adc
lock
icebp
fidivl
in
push
pop
adcl
mov
cld
lret
hlt
cld
cltd
xor
sahf
jb
data16
mov
mov
div
xor
xchg
popa
inc
add
cmovge
psrlw
mov
cmp
or
mov
shrb
daa
notl
push
lret
or
ret
fmuls
jae
cs
jbe
jns
mov
mov
jmp
push
adc
ja
lcall
mov
mov
insb
test
mov
ret
in
sub
pushf
cwtl
in
nop
pop
mov
fcom
loopne
mov
xor
outsb
xor
and
dec
xchg
in
js
adc
lret
sar
mov
pushf
xchg
xchg
mov
outsl
loop
aas
jae
ja
push
xchg
xchg
mov
sub
aas
sti
mov
stos
pusha
adc
jne
repnz
mov
inc
mov
mov
mov
cmp
loope
jae
sar
cmp
mov
cmp
xorb
jnp
sar
cltd
and
repz
ret
xor
loopne
enter
fcom
jo
xor
stc
rcrb
sti
and
mov
mov
adc
movsl
cmc
adc
jne
mov
jmp
mov
loope
xchg
cwtl
rcrl
jge
sub
add
pop
fs
jecxz
xchg
xchg
and
push
pop
fmull
cmpsb
pusha
add
mov
pop
jb
push
inc
shll
nop
mov
mov
cli
adcb
repnz
add
icebp
filds
sbb
adc
add
fdivrl
fwait
and
sti
insl
out
push
adc
mov
mov
rol
iret
sub
pusha
jl
push
sbbb
xchg
rclb
and
hlt
imul
les
imul
or
cmp
icebp
rcll
aad
and
cmpsb
mov
and
mov
xchg
jmp
dec
xor
aas
ja
adc
and
aad
pop
addl
jmp
movsl
jno
mov
mov
xor
mov
sti
adc
fsubs
mov
dec
mov
dec
xor
xor
add
pusha
mov
xchg
icebp
loopne
cmc
enter
in
sar
pop
adc
jns
fwait
or
add
or
mov
pop
nop
jecxz
fldenv
add
mov
out
testl
divl
nop
pop
jp
sbb
call
js
adc
add
shlb
mov
xchg
pop
ljmp
mov
andl
fdivl
push
push
and
xchg
sahf
imul
stos
jae
jb
ret
test
cmpsb
mov
mov
hlt
nop
jnp
dec
sbb
xor
orb
jl
repz
dec
hlt
cmp
jo
adc
loopne
nop
jns
pop
cmpsb
loop
in
jb
sar
js
adc
sahf
and
cmp
fcoml
mov
es
adc
out
ret
and
pushf
aaa
inc
mov
pop
fdivrs
jl
test
fwait
jo
mov
addb
mov
in
xor
mov
mov
jo
and
jo
fadd
xlat
fwait
lea
xchg
sahf
int
outsl
out
mov
int
xchg
mov
dec
jge
xor
jmp
jmp
jmp
pop
int3
lret
jecxz
or
imul
xlat
shlb
in
hlt
mov
jo
jnp
or
cmp
negl
mov
adc
mov
push
ret
jge
mov
add
mov
cmpsl
shlb
xlat
mov
xchg
cmpsb
mov
ret
sahf
add
test
mov
dec
mov
insb
push
lock
adc
mov
add
scas
enter
mov
xchg
int
and
xor
mov
mov
jmp
testl
pushf
push
sbb
jg
popf
xor
cmc
adc
std
mov
fadd
add
scas
jae,pn
sarb
enter
push
stos
iret
jmp
xlat
sbbb
rclb
rorl
jl
or
lret
sbb
out
arpl
push
sub
adc
subl
call
cmp
rclb
mov
fs
jge
mov
mov
or
xor
imul
jge
pusha
dec
sahf
clc
movsb
adc
mov
cmp
sbb
xor
aad
out
cmpsb
rcr
and
aas
loop
lds
dec
rcl
inc
add
icebp
jge
cli
pop
ja
adc
lret
test
mov
notl
xor
push
cmpsb
or
mov
jl
cmp
stos
je
mov
cmpsb
lahf
aad
adc
pop
jp
inc
cmp
cltd
mov
ds
lcall
or
sbb
xor
pop
jecxz
fnstsw
cmp
mov
and
mov
mov
arpl
push
cmp
add
add
mov
dec
jae
aam
jecxz
adc
dec
cmp
cmpb
mov
or
sbb
ffree
push
jo
fbld
push
data16
subl
fsubr
jb
rcr
pop
mov
clc
mov
cmp
test
dec
fldt
setb
adc
dec
mov
jmp
sbb
dec
add
xor
mov
mov
pop
mov
lcall
imulb
push
and
std
dec
pop
mov
add
jl
and
daa
cmp
rcr
imul
cwtl
in
mov
jg
data16
out
adc
adc
pusha
in
sub
dec
pop
fwait
adc
int3
cmp
inc
sub
notl
xor
out
xchg
mov
jle
out
or
mov
push
cld
xchg
fadds
jo
pop
xchg
mov
jge
pop
push
sahf
scas
mov
mov
or
xlat
cmp
sti
or
add
fcomi
scas
jnp
clc
call
inc
dec
ret
jno
push
icebp
xchg
xchg
cmp
and
mov
mov
pop
mov
xchg
mov
xor
mov
scas
add
jae
dec
scas
add
xchg
sti
cmp
jae
adc
or
std
push
push
jae
stos
dec
adc
shl
or
loopne
and
xor
js
or
fisttps
mov
pop
pop
pushl
jno
jns
jnp
test
iret
dec
sbb
mov
outsb
mov
mov
jns
cld
cltd
and
adc
cmpsb
cmp
xor
int
dec
sti
xlat
jmp
lods
push
jmp
jnp
cmp
mov
mov
cltd
sarb
adcl
pop
icebp
cltd
clc
sub
fsubs
pop
iret
loope
cmp
mov
jns
js
sbb
push
pop
add
fs
ja
aas
cmpsl
dec
dec
mov
aaa
add
mov
jg
cmpsl
mov
add
adc
push
jg
std
add
fnstenv
and
loopne
push
mov
out
adc
lock
pusha
data16
lock
cmp
les
jo
icebp
mov
xor
call
mov
or
out
sbb
adc
movsb
and
cmp
fadds
add
mov
imulb
outsl
pop
bnd
jae
jp
xchg
repnz
cmp
push
psraw
in
ret
movsb
and
jae
jb
ret
dec
pop
mov
mov
pop
mov
aad
jp
fmull
lods
repz
js
sahf
cmp
cmpsb
imul
testb
fwait
jecxz
adc
js
mov
cli
std
cmp
movsb
test
sub
orb
pop
and
daa
sbb
fwait
fs
add
inc
in
or
lock
and
mov
fs
mov
daa
pop
lea
pop
shl
mov
movsl
pop
xchg
pop
jo
shlb
xchg
push
push
add
mov
inc
pop
rorb
jl
lcall
lods
popl
fneni(8087
and
xor
movsl
dec
fwait
lret
cld
clc
sbb
push
mov
fiaddl
lahf
clc
repz
and
xchg
mov
ror
jp
popf
add
xchg
imul
jne
hlt
cwtl
inc
pop
xchg
and
pop
in
shll
ja
or
lods
stos
xchg
mov
mulb
dec
inc
add
push
jnp
push
jnp
sbb
imul
dec
xchg
push
cmp
add
lea
sub
insb
mov
mov
iret
or
mov
push
pop
cli
clc
sbb
jle
pop
add
fists
mov
cmp
dec
adc
adc
pop
arpl
cmp
repz
mov
arpl
fildl
mov
jmp
pop
stc
cld
insl
or
jmp
add
sbb
icebp
jle
mov
in
daa
mov
lahf
push
pushf
pop
inc
test
pop
clc
les
sti
mov
jae
mov
sub
xchg
and
jne
mov
out
xchg
xlat
stos
xchg
and
mov
mov
loopne
adc
stos
adc
faddl
xchg
push
imul
ret
and
or
cmp
movsl
and
icebp
jne
add
xchg
repz
mov
lret
sar
mov
cld
lahf
and
cmp
mov
bound
push
jmp
cmpsb
sbb
mov
les
lds
cmp
in
ret
add
outsl
rorb
popa
xlat
dec
popl
mov
xor
lock
jae
mov
mov
fistpll
mov
leave
or
pop
testl
xchg
inc
daa
xchg
sbb
jp
fs
insl
and
lret
push
dec
mov
sbb
dec
xchg
loopne
cld
out
popa
repz
jl
pop
icebp
and
sbb
icebp
xchg
jns
xor
mov
cmpl
cmpsb
push
mov
lret
loop
mov
loopne
push
jo
outsl
inc
outsl
ja
mov
jecxz
push
inc
sbb
mov
jecxz
and
mov
shlb
icebp
adc
xchg
adcl
addl
jo
shl
leave
add
js
and
sub
mov
pop
loope
and
sub
adc
inc
mov
lock
shl
bound
ret
mov
mov
inc
jge
popa
jnp
push
xorl
dec
in
aas
fnstcw
mov
movsb
lahf
inc
xchg
adc
lds
lods
cmpsl
xchg
push
add
inc
xlat
mov
mov
lret
in
roll
js
popa
jl
test
out
adc
fdivl
jmp
fdivl
fdiv
cmp
sub
repz
jmp
add
mov
mov
pop
mov
adc
xchg
pop
sbb
outsl
jb
insl
ljmp
fcmovu
push
pop
pop
jecxz
test
loope
fwait
jae
dec
pop
shll
push
push
or
mov
enter
sar
int
and
and
adc
jo
jae
pop
sti
test
jae
daa
push
xchg
int
shll
out
clc
pop
adc
pop
pusha
pusha
sub
jp
jecxz
adc
pop
jp
cld
cmp
repz
add
add
or
cmp
sub
and
loopne
jl
sub
cmpsb
mov
rol
cli
add
add
je
mov
mov
mov
dec
xchg
pop
fcmovnbe
frstor
lock
mov
in
mov
mov
mov
shll
dec
and
adc
stos
std
cld
cmpsl
lret
fldt
mov
insl
dec
sti
fdivl
mov
out
or
decl
jecxz
sarl
rcrl
sub
pop
shlb
jnp
fsubp
call
cmp
add
pop
mov
ljmp
fistpl
cmpsb
add
jo
mov
sbb
bound
cwtl
aaa
cmp
pop
out
dec
rcll
xchg
in
daa
dec
clc
pop
lahf
push
jns
and
arpl
cmpsb
loope
adc
sahf
loopne
aas
rcrb
repnz
scas
add
icebp
fidivs
ret
jb
jg
and
xchg
add
pop
or
xchg
jecxz
mov
mov
mov
pusha
jl
pop
lcall
lcall
out
adc
add
icebp
mov
in
jb
mov
pusha
icebp
push
repz
int3
cmp
repz
xchg
mov
mov
pushf
jno
fisubs
and
popa
mov
xor
les
dec
sti
aad
mov
and
mov
cwtl
mov
or
stos
xchg
pushf
cli
xchg
inc
sti
mov
aaa
test
pop
mov
lahf
sbb
adc
inc
shl
ret
push
popl
adc
add
xchg
je
mov
or
test
adc
mul
iret
inc
roll
jmp
sbb
and
lea
hlt
push
lcall
dec
and
jmp
mov
fcoml
pmullw
lea
add
sbb
pop
add
in
push
in
inc
js
lcall
in
shlb
lock
loopne
adc
lcall
adc
and
rorl
dec
rorw
sysret
mov
ret
outsl
sti
sar
mov
pop
daa
ret
mov
mov
nop
xlat
sahf
fsts
sub
push
mov
dec
scas
push
cmpl
push
cmp
xchg
mov
cmp
cmc
stc
xchg
push
or
sti
add
mov
les
xchg
dec
stc
lea
movsb
sbb
jnp
scas
push
jecxz
adc
insl
push
xchg
fld
push
mov
roll
jae
mov
ja
mov
pop
adc
cmp
in
roll
add
lret
xchg
nop
jecxz
mov
sbb
mov
lock
stos
arpl
xor
adc
adc
sbb
jns
adc
or
cmpsl
inc
cwtl
addb
cld
insl
pop
addr16
cmpb
iret
push
xorb
jg
lcall
mov
mov
xor
pusha
jecxz
arpl
push
cltd
repz
jnp
out
lea
mov
iret
fwait
lea
add
dec
cmc
fnstsw
call
mulb
sub
push
jp
push
repnz
push
in
dec
inc
xchg
pop
stos
sti
jg
lret
push
std
sbb
push
out
sub
repz
inc
mov
out
neg
mov
movsb
jmp
push
jae
daa
pushf
and
addr16
add
stos
mov
jb
jmp
fwait
and
cmpsb
popa
orb
push
incl
sub
fwait
mov
mov
mov
pop
cli
loop
pop
push
add
and
mul
movsb
mov
outsl
arpl
add
or
test
jns
jb
jnp
pop
repz
mov
sarb
shl
imull
xchg
dec
jmp
mov
mov
cltd
test
cmpl
icebp
mov
jecxz
popa
xchg
rclb
aad
aaa
jp
push
adc
adc
rcrb
mov
sbb
mov
cmp
push
and
pop
icebp
pushf
fidivrl
fcoms
cmp
push
push
sarl
adc
loop
out
in
mov
addr16
mov
pop
push
arpl
mov
lea
loope
cmp
adc
cmp
mov
xchg
and
pop
bound
jecxz
and
jp
cmp
cmp
cmpsb
cwtl
lock
jnp
and
add
cmp
push
xlat
into
les
lock
adc
add
pop
dec
gs
testb
push
js
out
lcall
fwait
mov
cld
popa
sbb
lret
mov
test
cmp
xchg
in
pop
cmp
shll
iret
imul
adc
stos
xchg
pop
add
lret
dec
insb
sbb
or
mov
xchg
mov
mov
pop
mov
hlt
fwait
cmp
inc
mov
mov
xor
movsl
pop
mov
imul
fisubl
stc
cmpsb
cwtl
mov
mov
dec
add
stos
rolb
adc
and
imul
cmpsl
fwait
shlb
mov
jl
in
std
mov
xchg
add
lea
cmp
cli
ja
push
add
mov
cwtl
add
xor
fsubs
idivb
sub
loopne
sahf
push
add
jno
addb
iret
cli
xlat
add
sbb
mov
insb
add
loope
add
mov
push
xchg
rcl
pop
nop
add
xlat
fcmovnu
cmp
mov
or
cmc
popa
push
push
pusha
test
add
jb
adc
icebp
pusha
and
popa
and
mov
lsl
add
negl
frstor
int3
lret
adc
mov
add
add
mov
hlt
and
incl
xchg
lds
shrl
push
cmpsl
loop
cli
mov
fnstsw
jae
inc
and
add
cmp
testl
jmp
adc
icebp
mov
ret
aas
stc
sarl
dec
dec
push
int3
cli
arpl
call
add
aas
outsl
pop
icebp
lock
and
pop
push
mov
mov
dec
xchg
out
sub
das
lahf
arpl
jae
pop
jg
cmp
pop
outsl
mov
cmp
cmp
adc
dec
jb
dec
aas
pushf
orl
popa
xchg
add
add
xor
sbb
repnz
pop
sub
sahf
popf
jo
mov
jbe
and
mov
add
jno
push
or
push
pop
stc
sahf
loopne
add
fcomi
inc
dec
mov
cmpb
jecxz
aas
mov
jg
rclb
mov
je
mov
mov
xor
ret
call
rcl
in
icebp
pushf
out
xchg
or
sti
fsub
test
mov
jnp
out
ret
push
pop
js
cmpsl
jge
dec
rcrl
pop
decb
cmpsb
das
fnstsw
cmp
stos
cmpsb
pop
rcll
rcll
rol
jo
xchg
sahf
mulb
mov
dec
mov
adc
sarb
addr16
sti
jmp
xor
std
cmc
mov
add
in
bound
mov
shl
dec
mov
into
push
je
add
lds
pop
js
int
enter
mov
aad
mov
aas
pop
push
dec
xor
add
mov
inc
out
and
xchg
jb
pusha
repz
mov
in
cld
mov
test
add
leave
fs
jp
pop
js
les
into
push
xchg
mov
push
pop
icebp
add
sahf
sti
stos
push
out
stos
jp
jecxz
mov
pop
push
dec
sbb
adc
cmc
pushf
pop
push
jno
jge
ret
adc
sahf
xchg
and
adc
pop
fdivl
iret
jno
xchg
or
fadd
jno
repz
jne
pop
ja
cmp
sub
aas
js
xchg
bound
dec
sahf
jl
hlt
and
mov
xchg
repz
stos
add
call
inc
loopne
add
pop
movsl
dec
mov
clc
jge
test
dec
adc
call
mov
mov
jnp
push
xchg
cmp
cwtl
sbbb
sbbb
pusha
jecxz
mov
imul
xchg
or
faddl
outsl
enter
fwait
jno
and
add
xchg
mov
lret
pop
mov
add
ljmp
repz
mov
lock
dec
mov
mov
inc
push
fisubl
mov
pushf
add
mov
jl
add
jns
jg
pop
fimuls
dec
or
js
cmpsb
loop
data16
test
fldenv
icebp
dec
fistl
mov
inc
pop
or
pop
call
js
pop
push
push
lds
js
jnp
popa
xchg
ret
jo
xchg
cltd
aaa
hlt
imul
mov
mov
out
cld
jp
popf
jb
mov
sti
lock
cmpsb
cmp
gs
daa
jo
popa
mov
lret
fldt
jns
jge
xor
or
adc
sti
nop
and
mov
call
jg
pop
movsb
push
les
adc
pop
in
int
repz
cmp
push
jge
leave
icebp
cmc
cmp
icebp
mov
loope
arpl
dec
dec
mov
and
daa
dec
test
jmp
popa
mov
pop
lock
les
or
xchg
loop
mov
mov
lahf
std
in
nop
popl
jno
jle
sbbl
xchg
fldl
inc
iret
aaa
lret
popa
pop
push
xchg
sbb
mov
cwtl
mov
scas
add
mov
cmpsl
popa
jecxz
shl
jno
pop
jle
loop
add
loope
and
mov
xchg
pop
jae
mov
xchg
out
mov
rcl
xor
fstp
or
addr16
mov
jl
xchg
add
cld
add
cld
inc
xchg
out
stc
ffree
jl
arpl
ljmp
jns
mov
mov
cmpb
into
mov
and
push
pop
arpl
sti
jl
adc
arpl
jns
fidivrl
adc
cmp
xchg
ja
mov
jnp
aas
push
mov
dec
inc
mov
loopne
insb
call
cli
in
mov
adc
lahf
cmpsl
rcll
mov
or
cmp
rcl
icebp
pop
and
arpl
stos
gs
jg
lea
mov
movsb
pop
cld
mov
jecxz
jae
inc
mov
jnp
clc
incl
pop
in
push
gs
dec
adc
add
mov
push
enter
std
sarb
cmp
stos
jl
lret
xor
arpl
mov
cmp
rclb
mov
xchg
rorb
adc
dec
pop
push
push
push
lret
aam
repz
add
imul
or
in
mov
mov
rorb
lock
or
pop
js
inc
add
pop
ficompl
mov
sbb
or
fistl
pop
jp
pop
add
ds
les
out
adc
cwtl
and
les
ja
cli
aaa
cmpl
ss
xor
mov
icebp
fwait
sti
mov
cmp
popa
out
xchg
xchg
or
push
nop
mov
aas
lcall
lcall
xchg
into
add
je
hlt
cltd
mov
mov
adc
popf
xor
pop
cmc
jmp
cmp
adc
mov
mov
mov
mov
jl
fdivs
add
mov
in
jmp
out
dec
popf
adc
mov
mov
js
mov
pop
sub
sub
fucomip
push
xchg
push
mov
fucomp
push
shl
mov
dec
jp
mov
frstor
xchg
out
jo
xchg
cmp
sarb
xor
cmp
sbb
mov
sar
add
lret
cs
push
pop
sbb
testl
xchg
jecxz
ljmp
aaa
test
add
adc
mov
insl
arpl
pushf
and
add
push
out
push
icebp
pop
pop
rcr
xorb
lcall
fs
push
pop
pushf
cmpsl
mov
sbb
aad
mov
dec
mov
xchg
and
ret
sbb
push
add
test
jecxz
mov
sahf
loope
xchg
lea
adc
dec
or
dec
push
push
jecxz
sub
sar
jmp
mov
xchg
mov
mov
pop
pop
or
out
ret
mov
dec
test
adc
call
in
mov
lret
fnstsw
pushf
cwtl
mov
nop
cmpsb
cmp
mov
xor
mov
fwait
add
aas
mov
and
adc
adc
cmp
push
gs
fstpl
add
in
adc
mov
call
push
fxch
sbb
push
arpl
mov
insl
adc
aad
xor
int
in
jb
seta
or
mov
jo
mov
sbb
mov
punpckldq
dec
mov
cmpsl
shl
dec
stos
pushf
shrl
jno
jp
pop
shlb
loop
sbb
sbb
sbb
or
or
pop
mov
enter
and
push
lret
xchg
scas
dec
shll
xchg
add
pop
rorl
pop
addr16
pop
pop
loopne
xchg
jno
jl
ret
int
cmpsb
xchg
jno
push
jecxz
jo
out
pop
jns
mov
cwtl
add
sbb
cld
push
dec
mov
push
cld
out
mov
call
fistps
dec
out
xchg
pop
mov
sub
stos
jg
xlat
pusha
push
lret
jecxz
jmp
inc
jae
iret
ret
sbb
addr16
mov
mov
cmp
mov
movsl
add
add
push
je
cmc
sbb
dec
push
mov
repz
xchg
pop
jne
xchg
adc
jno
add
test
xor
xchg
cmp
icebp
pushf
inc
mov
sub
lret
in
cmp
jae
jge
adc
mov
add
sbb
mull
xor
daa
ljmp
data16
addr16
in
xchg
divl
jnp
add
xchg
sbb
in
push
pop
mov
stos
sahf
pusha
aad
inc
lock
jno
bound
sub
xor
mov
lahf
pop
mov
mov
jl
mov
pop
lahf
loope
aas
rol
lods
cmp
and
and
cmp
movsb
xorl
cltd
adc
cli
adc
push
loopne
sbb
jo
cmc
mov
mov
cmp
in
js
cmpsl
add
adc
ja
adc
pop
ljmp
mov
mov
pop
or
mov
cmp
pushf
data16
xlat
insb
jns
push
push
sarb
jno
lock
ror
xchg
in
xchg
sahf
push
aad
or
xorl
mov
xchg
frstor
stos
push
addr16
shrl
pop
movsb
add
sti
push
jmp
repz
inc
adc
iret
push
cmc
mov
pop
push
mov
ret
pop
jns
mov
cli
adc
dec
jl
or
mov
dec
mov
lds
lock
mov
jmp
cmpsb
pop
test
outsl
or
sub
lcall
dec
mov
ljmp
int
adc
pop
push
dec
loope
xchg
mov
and
cwtl
adc
rorb
fdivrs
daa
mov
pop
stc
inc
les
dec
ret
pop
orb
orl
mov
in
and
gs
cwtl
push
jl
dec
stc
and
mov
in
lret
xchg
aad
dec
adc
add
sarl
ret
ja
jmp
fwait
jns
lcall
push
jno
mov
mov
pause
and
pushf
mov
xor
andl
dec
rcr
in
pop
daa
je
dec
xchg
ja
js
in
sub
lahf
rol
sahf
test
jge
arpl
xchg
in
cltd
adc
lock
jne
fs
push
rcrl
cmc
test
jns
sub
dec
shll
mov
mov
mov
mov
pop
mov
roll
push
or
movsl
sbb
movsb
out
stos
jge
es
pop
mov
popa
dec
pop
cmpsb
push
mov
jge
ret
in
aaa
pop
xor
loop
xlat
pop
lea
mov
add
mov
ja
adc
jnp
push
dec
pushf
rorl
sahf
data16
fistpl
fistps
adc
jmp
in
pushf
push
mov
lahf
test
shl
fldl
push
pop
frstor
jns
pop
es
xor
xchg
xchg
jmp
data16
xorb
addr16
add
xchg
add
daa
jae
fimull
les
push
inc
stos
cmpsb
pop
faddl
pop
or
arpl
pop
data16
cmpsb
or
lea
frstor
mov
mov
aad
inc
test
jae
xchg
aas
scas
aad
repz
sahf
sub
mov
test
mov
jo
inc
cmp
mov
add
or
pop
popf
sbb
add
jo
addr16
sub
mov
xor
xor
loope
mov
test
adc
shrb
lcall
out
xchg
sbb
xchg
stc
add
mov
push
and
lock
icebp
xchg
jo
mov
pop
fwait
jmp
dec
mov
sbbb
mov
or
pop
mov
xorb
stos
fiadds
sub
xchg
adc
mov
cmp
dec
ret
fs
push
jnp
push
sbb
mov
or
push
rolb
nop
loopne
mov
dec
jge
fidivrl
bound
fistpl
fistpl
fcomps
mov
or
clc
and
mov
cli
pop
add
jge
pop
jb
adc
adcb
push
shl
mov
xchg
nop
cmpsl
or
loopne
and
movsb
and
in
jb
adc
inc
pusha
mov
int
inc
push
gs
call
add
and
mov
xchg
in
stc
dec
ljmp
cli
add
testb
push
mov
push
mov
mov
sar
nop
lcall
fcompl
lods
jmp
mulb
gs
or
aas
mov
aad
jae
add
into
nop
pushf
pop
xor
hlt
xchg
cmp
jle
mov
cli
js
jp
in
xor
lea
mov
jne
or
jne
xor
pop
mov
outsl
inc
dec
sbb
mov
push
add
lock
lods
sbb
rclb
sbb
fwait
jmp
sbb
jg
stos
pop
rcrb
adc
roll
pop
gs
jno
ret
cwtl
sarl
sti
push
add
mov
shlb
cmpsb
pushf
inc
js
cmp
mov
jp
sahf
and
lret
push
ljmp
popa
xchg
xchg
out
inc
pop
ret
mov
movsl
aad
cmp
ffreep
cmpb
push
adc
mov
hlt
push
icebp
daa
cmp
cs
sbb
jmp
andl
mov
bound
inc
and
cs
jmp
pop
push
repnz
xlat
dec
or
lock
js
fs
pop
cmpsb
aad
and
orl
andb
ja
aas
rorl
add
jb
cmp
mov
int
enter
and
inc
cli
dec
scas
cmp
sbb
push
jae
jnp
addl
xor
inc
arpl
and
hlt
arpl
aam
in
mov
les
arpl
push
arpl
arpl
adc
arpl
arpl
sub
dec
cmpb
push
and
dec
push
call
mov
mov
sub
inc
enter
jmp
lahf
mov
push
jp
dec
popf
gs
or
jne
jne
jne
jne
jne
jne
jne
imul
mov
jns
dec
add
pop
mov
pop
push
pop
pop
pop
sub
pop
push
dec
data16
mov
stc
cmp
fadds
sub
outsb
jae
lea
or
jae
and
aaa
aaa
jle
hlt
add
mov
into
dec
push
ficoms
push
mov
bound
jle
dec
pop
data16
data16
pcmpgtd
out
jmpw
data16
mov
data16
outsw
data16
dec
pop
data16
cmp
or
sbb
in
data16
data16
data16
mov
pushfw
mov
js
loope
dec
pop
hlt
pop
mov
stc
sbb
lock
pushf
lods
push
pop
out
inc
rol
stos
inc
fs
leave
inc
xchg
les
jmp
add
xor
dec
jbe
and
and
inc
jle
call
xchg
mov
cmp
jns
dec
xchg
pop
mov
bound
or
jo
das
bound
dec
jae
jnp
orl
jnp
dec
arpl
sub
arpl
cmpsb
xor
call
inc
lcall
test
jb
inc
or
mov
pushf
and
or
adc
in
push
aam
cwtl
pop
jno
gs
daa
mov
mov
dec
xor
cmpsl
pop
mov
dec
jbe
push
les
pop
xor
push
xor
pop
jmp
mov
jle
fsubr
repnz
or
cwtl
or
push
dec
cmpsl
mov
sub
cmp
ljmp
jge
push
ficompl
and
xor
pop
fwait
hlt
imul
and
bound
mov
mov
lock
arpl
arpl
arpl
arpl
push
and
data16
and
and
jp
sub
xor
lret
mov
inc
sarl
les
inc
pextrw
pop
mov
lds
roll
pushf
lds
push
lds
lds
shl
xchg
outsb
jg
and
test
inc
jb
fcoml
xor
inc
loop
in
fdivs
fcompl
fsubrp
loopne
cli
enter
mov
arpl
dec
arpl
sub
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
jns
dec
arpl
jp
cmp
sbbl
ljmp
arpl
out
lcall
pop
sub
pop
or
pop
jmp
sti
pop
lret
pop
fistpl
pop
mov
pop
imul
dec
pop
pop
pop
sub
pop
or
pop
call
pop
stos
jae
pop
mov
pop
push
pop
pop
pop
sub
pop
or
lock
or
inc
jne
jne
jne
test
jle
hlt
or
cmc
lret
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
imul
and
fsubl
pusha
and
sub
or
in
mov
je
xor
inc
jne
jne
jne
jne
jne
imul
jo
dec
js
test
imul
adc
out
and
and
sahf
and
int
xor
dec
add
dec
ret
dec
lahf
dec
xchg
dec
mov
dec
lea
loop
pop
jae
jnp
gs
lods
or
add
pop
sub
sarb
enter
arpl
arpl
pop
fsubs
mov
cbtw
pushw
dec
pop
sub
or
jmpw
leavew
fldenvs
mov
cwtd
imul
imul
push
or
pop
ljmp
mov
in
add
lcall
pop
push
sarb
call
pop
dec
rcll
pop
inc
arpl
arpl
ds
sti
and
adc
mov
popf
add
cmp
jmp
dec
shl
fwait
dec
stos
pop
adcl
lods
mov
outsb
ljmp
out
or
pop
and
pop
shll
push
cmp
fimull
data16
loop
hlt
sbb
mov
ss
hlt
mov
je
xor
data16
jne
jne
jne
jne
jne
jne
jge
xchg
fs
push
lods
dec
lds
dec
icebp
or
repz
and
cmp
shrb
roll
and
push
push
adc
scas
xchg
xor
adc
inc
push
dec
mov
mov
ficompl
lock
aaa
stos
xchg
hlt
mov
bound
mov
or
sbb
mov
je
xor
dec
loopne
lds
lds
jbe
or
mov
xor
test
arpl
arpl
arpl
sti
imul
dec
jp
dec
mov
sbb
clc
jns
dec
mov
mov
pop
rcrl
rcrb
jle
fmul
fsubp
loopne
loop
in
inc
push
sub
mov
sub
nop
inc
mov
lret
or
mov
xchg
in
sub
cmp
or
sbb
jmp
sti
daa
sbb
and
imul
sub
dec
or
dec
call
dec
fmuls
dec
mov
dec
push
dec
pop
dec
sub
dec
or
dec
jmp
dec
dec
mov
imul
lret
lds
lds
lds
pop
lds
lds
lds
mov
jne
jne
jne
jne
jno
out
imul
or
sbb
call
popa
jnp
adcl
push
pop
fsub
fidivs
lcall
inc
rcrb
mov
sahf
inc
pop
inc
xlat
mov
jne
jne
jne
jne
jno
lret
stc
arpl
arpl
arpl
arpl
pop
fiaddl
ljmp
inc
shll
and
fists
dec
inc
push
and
mov
or
hlt
push
and
push
and
shl
scas
mov
jo
jecxz
insl
pop
push
sub
cmp
ljmp
dec
mov
dec
push
jp
scas
dec
pop
dec
sub
dec
or
dec
jmp
sti
dec
lret
dec
fisttpl
dec
mov
imul
dec
pop
pop
pop
sub
lock
arpl
arpl
pop
clc
es
fsubs
mov
cmc
ljmp
dec
sbb
dec
stc
dec
leave
jp
test
pop
cltd
mov
jns
dec
pop
imul
ret
mov
lret
hlt
stos
mov
les
lds
dec
lds
sub
jne
jne
jno
pop
stos
dec
mov
stos
xor
rcl
jp
lock
xor
lahf
xor
mov
jne
jno
imul
push
rcr
aad
xchg
cltd
adc
sbb
jle
push
aaa
push
pop
pop
repz
lock
daa
shrb
push
or
pop
imul
sbb
dec
add
dec
dec
sbbl
cmp
adc
clc
data16
inc
data16
push
bound
stos
fwait
loop
movsl
or
inc
cmp
call
mov
sbb
jns
add
out
in
in
hlt
mov
mov
dec
arpl
sub
cmp
push
push
mov
fidivs
loopne
loop
cld
bswap
push
out
mov
cmp
test
pop
inc
add
hlt
mov
mov
loop
loop
lock
xor
mov
mov
fwait
arpl
fidivl
orb
es
shl
inc
jp
insl
scas
pop
dec
divl
gs
andl
fsubs
arpl
arpl
js
dec
arpl
sub
mov
das
hlt
lfs
je
xor
pand
dec
jnp
les
ret
loopne
inc
adc
mov
sub
ljmp
pop
ss
jle
orb
or
ss
fidivrs
dec
and
push
pop
push
jl
pop
xor
pop
loop
mov
cmc
in
cwtl
dec
mov
push
and
lcall
bound
fmull
add
daa
repnz
daa
lret
movb
lds
and
arpl
arpl
arpl
arpl
arpl
arpl
rcr
es
and
mov
mov
es
push
jb
dec
jbe
cmp
push
push
dec
jae
jnp
testb
mov
or
sbb
mov
call
dec
push
jbe
jp
les
pop
mov
dec
in
pop
mov
sar
repz
pop
sbb
add
arpl
arpl
arpl
fcmovb
orb
fildll
dec
and
push
and
and
daa
mov
xor
dec
push
xchg
xor
mov
pop
clc
pusha
mov
inc
dec
mov
mov
jns
lock
or
ficoml
inc
jecxz
or
clc
inc
test
movsb
cmp
push
cltd
ret
imul
rcrb
xchg
repnz
and
fidivrs
daa
leave
sub
sbb
xchg
mul
jne
jne
jne
jne
jno
rcll
or
jle
sbb
mov
arpl
or
pop
lods
pop
push
push
jmp
inc
cmp
push
push
les
test
sbb
and
imul
lcall
jb
add
daa
push
adc
add
ffreep
xchg
outsl
lds
push
inc
inc
mov
inc
arpl
add
in
test
pop
mov
lock
jmp
xor
jmp
sub
shll
jno
dec
pop
arpl
fdivrl
xor
dec
mov
jecxz
loopne
scas
loop
xchg
or
mov
insl
testl
cmp
pop
in
mov
in
in
in
dec
fimull
faddl
fidivs
in
add
imul
add
movb
push
je
pop
lds
icebp
hlt
dec
jne
imul
and
push
adcl
and
dec
loopne
pop
stos
pop
sub
bound
repz
add
lret
adc
jmp
sub
sub
ret
jmp
nop
sub
clc
jbe
mov
jecxz
xor
adc
lcall
fldenv
arpl
jecxz
push
dec
stc
sub
dec
mov
dec
imul
push
lcall
push
les
lds
dec
stos
push
fcomps
pop
jo
in
movsl
fidivrl
jecxz
cmc
call
loopne
add
lods
adc
cltd
and
push
lock
je
xor
arpl
dec
add
cmp
jmp
adc
dec
cltd
dec
imul
push
cmp
pusha
dec
out
repnz
pop
pop
fwait
dec
pop
inc
rcrl
pop
add
out
movsb
add
lods
inc
cmp
sbb
mov
clc
in
in
in
hlt
mov
jmp
negb
jno
les
inc
test
in
xor
jmp
lods
imul
mov
lds
pop
lods
and
loopne
pushf
jmp
jnp
adcl
or
scas
mov
shll
pop
sahf
mov
test
jnp
dec
and
cmp
mov
fsubs
mov
push
mov
ret
mov
pusha
mov
stc
icebp
push
shl
cmpsb
enter
cmp
roll
cli
pop
lret
pop
stos
es
push
jp
mov
pop
and
and
dec
jmp
sti
dec
lret
dec
stos
dec
mov
dec
imul
pop
pop
cmpb
sbb
call
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
lock
push
mov
imul
mov
jmp
lret
fildll
push
rcr
pop
daa
fstpt
adc
lret
mov
add
mov
mov
jae
dec
sbb
clc
pop
enter
test
mov
or
dec
dec
pop
dec
sub
dec
sbb
jnp
leave
pop
fstps
pop
mov
pop
imul
rorb
mov
loop
pushf
cld
flds
pop
loope
rcll
cmc
rolb
add
imul
mov
bound
imul
leave
mov
mov
or
ljmp
lds
lcall
xorl
or
sti
addr16
arpl
arpl
and
pop
imul
cmp
mov
pcmpgtd
and
ljmp
ja
push
js
ret
outsb
lahf
jb
insb
adc
out
push
pop
add
jb
jns
add
clc
dec
lock
cmpsl
clc
hlt
lcall
pop
add
clc
outsl
cmp
icebp
push
clc
mov
clc
pusha
imul
cwtl
iret
cmp
dec
sbb
leave
inc
or
imul
dec
ficoml
fmull
ficomps
loopne
loop
in
out
in
in
in
in
lock
ficompl
or
inc
jno
sti
fcmovnb
stos
lds
lds
jnp
dec
lds
sub
cmp
or
sbb
fdivr
add
mov
cmp
jnp
adc
scas
push
iret
cmpsb
stos
sbb
push
lcall
dec
imul
or
sbb
pop
frndint
cmp
mov
imul
int3
ficompl
stos
push
int
add
and
mov
jnp
loope
pop
data16
cmp
sbb
call
data16
sahf
mov
mov
stc
lods
mov
mov
cmp
adc
dec
inc
add
data16
ficomps
loopne
loop
hlt
lret
mov
pop
push
inc
clc
dec
lds
lds
lds
lds
mov
lret
data16
lcall
in
in
in
in
in
in
in
in
in
in
in
hlt
mov
push
lds
sub
sbb
leave
mov
pop
mov
pop
imul
ljmp
cmp
ljmp
jne
jne
jne
jne
xorl
xor
arpl
arpl
arpl
daa
sbb
jno
jnp
out
add
dec
jno
sti
leave
or
sbb
stc
pop
leave
pop
fstps
pop
mov
out
in
in
in
dec
fisubrl
fmull
negb
test
cli
jge
enter
pop
mov
fcoml
cltd
cmp
dec
mov
sub
cmp
jno
dec
jmp
lret
dec
fistl
jns
and
imul
and
sbb
push
arpl
shrl
cwtl
jne
jno
stc
dec
out
in
in
in
in
in
in
in
in
in
in
in
lock
inc
mov
xor
adc
add
sarb
dec
pop
adc
cmp
mov
cmp
and
and
and
fildl
adc
pop
ror
push
dec
mov
mov
lds
and
or
push
lcall
mov
mov
xorb
push
jae
jnp
cmpl
ret
sahf
xor
push
loopne
les
adc
ret
cld
out
jb
pop
mov
push
jnp
cmp
in
or
fs
in
hlt
cmp
arpl
and
jns
icebp
bound
and
mov
push
lahf
test
push
loopne
and
add
xlat
push
dec
adc
jnp
pop
mov
cld
xchg
lea
pop
mov
xchg
lods
outsl
mov
data16
data16
js
hlt
arpl
cmpsl
addl
sti
movsb
cmc
adc
or
push
out
xor
popa
arpl
mov
cmp
dec
lods
mov
lods
es
rcll
pop
mov
mov
dec
cmc
dec
jbe
and
inc
and
xor
mov
je
xor
cmp
subl
xlat
shlb
les
jno
imul
int
sbb
jno
pop
bound
data16
aas
mov
mov
test
pusha
lds
test
pop
push
dec
jnp
sub
out
scas
inc
es
into
outsl
cmpsb
lcall
mov
rcr
xor
mov
into
and
push
dec
mov
xorl
adc
sbb
sbbl
jne
jno
or
mov
push
lcall
insl
fldcw
inc
mov
mov
xchg
outsl
and
mov
pop
mulps
fsubr
adc
push
xor
jle
xchg
mov
jg
loopne
jne
jno
shl
dec
rorb
js
xor
push
cmpsb
sbb
enter
and
popf
lock
arpl
jae
or
xor
and
pop
mov
aas
mov
cltd
imull
jns
js
out
in
add
mov
int3
jmp
icebp
push
test
and
icebp
popf
xor
aaa
mov
jo
adcl
shlb
and
inc
sti
adc
arpl
inc
out
es
xlat
adc
dec
xchg
mov
lock
pusha
rclb
push
leave
jo
mov
xchg
jecxz
xor
jnp
dec
mov
sub
cmpsl
push
outsb
idivb
mov
mov
test
ret
jnp
xorl
cmp
xor
and
xchg
repnz
dec
xchg
and
dec
inc
lds
in
lds
pop
lea
out
inc
push
mov
mov
jns
aas
int3
mov
add
lcall
jle
jno
ret
in
pusha
xlat
movl
mov
pop
push
pop
fdivs
sets
test
dec
mov
ljmp
leave
push
fstpt
js
or
ljmp
mov
fidivs
adc
lock
xor
jmp
mov
xchg
int
jnp
mov
popa
pop
test
pop
fwait
mov
add
mov
fs
inc
xchg
push
and
and
cmp
xorb
jb
pop
inc
add
movntps
out
stos
push
movsb
push
pop
fstpl
pop
movsl
pop
jge
mov
notb
xchg
shl
dec
cmpsl
dec
dec
dec
sub
and
jnp
mov
pop
popa
pop
inc
lcall
mov
fdivs
out
push
adc
leave
test
jbe
push
xor
popa
push
pop
popl
cmp
fs
js
push
and
sbb
dec
sti
out
xor
imul
inc
bound
movsb
mov
push
sub
jno
ljmp
xlat
adc
mov
outsb
jae
jnp
adc
sbb
test
iret
push
dec
push
addr16
out
add
out
hlt
mov
andl
sbb
jle
mov
lret
sub
int
sub
and
hlt
and
fnstcw
add
cmp
pop
andb
pusha
leave
and
and
dec
sahf
inc
sub
bound
lock
pop
imul
repz
dec
jae
or
inc
popa
mov
dec
and
data16
aas
xor
sub
pop
shrl
addr16
jge
fisubrl
lock
es
and
add
or
mov
jns
sarb
cwtl
fidivl
jp
cmp
jle
dec
cmp
fiaddl
fs
loope
mov
dec
movsb
mov
inc
pop
mov
push
mov
or
js
or
pop
sti
test
ds
pop
push
sahf
cli
scas
shll
or
jmp
pop
pop
mov
sbb
push
push
pop
xor
mov
jmp
inc
cli
arpl
cmpsb
iret
cmp
test
cmp
and
lea
lds
xor
pusha
cli
fidivs
shll
xchg
loopne
call
mov
ds
out
repnz
xor
ret
test
leave
imull
pop
scas
imul
mov
jno
in
scas
mov
pop
mov
mov
push
push
add
sub
mov
rorb
mov
js
cmp
test
cmp
movsl
shll
rcll
dec
icebp
popa
enter
add
js
xchg
out
jns
pushf
loop
xlat
sub
xchg
imul
out
jno
jle
push
fwait
add
fwait
aam
enter
mov
cmp
shll
add
out
in
inc
sbbb
push
nop
es
push
jb
addr16
daa
adc
dec
sub
inc
arpl
xor
rcr
cmp
sti
loop
mov
test
sahf
dec
inc
inc
cmp
dec
lahf
push
push
mov
push
sub
jmp
pop
rcr
int3
fisubrs
test
mov
and
loope
sbb
sbb
imul
jnp
iret
fiaddl
xchg
pop
jae
mov
cmp
push
xchg
inc
hlt
and
adc
addl
xchg
pop
sar
ret
loopne
repnz
push
lcall
jae
daa
sbb
jb
es
jge
mov
adc
popa
or
cmp
shr
and
sti
jo
xor
xor
cmc
cltd
jmp
push
pop
out
lret
adc
pop
arpl
inc
mov
jns
push
or
aam
mov
loope
cmpb
dec
fs
sub
push
or
js
add
mov
mov
test
add
repnz
into
mov
mov
adc
dec
jecxz
mov
mov
shlb
add
rcrb
sti
cmp
lock
in
add
imul
ficompl
loopne
notb
sub
pushf
jp
jb
sub
test
or
imulb
icebp
cmp
xchg
pop
mov
push
xor
cmp
sub
xor
pusha
cmp
push
cvtpi2ps
add
testb
cltd
divl
call
jp
lret
mov
out
ret
pop
daa
and
cmp
or
sub
xor
sarb
mov
flds
sub
mov
cmpsl
push
rclb
jmp
xor
aaa
ret
lock
lea
cmpsb
xor
and
gs
aaa
int
mov
jo
enter
imul
jp
insb
and
xor
lock
and
les
fdivrl
loop
inc
sub
jl
pusha
cmp
and
dec
sub
in
mov
mov
add
mov
push
das
and
mov
sbb
cwtl
xchg
pop
mov
jno
xlat
call
in
ret
data16
pop
and
mov
xlat
lock
lock
sbb
or
call
sbb
iret
and
sbb
xor
cltd
jo
dec
cmpsb
fcoml
xchg
and
xchg
sbb
dec
mov
mov
xchg
mov
xchg
dec
or
repnz
xor
sub
jecxz
push
lret
stos
jecxz
loope
mov
jne
jno
fistpll
sti
add
popa
fs
sbb
xchg
push
sub
push
mov
dec
cltd
pop
imulb
cld
mov
cltd
jg
or
pop
adc
out
cmp
dec
rcrb
push
push
cmpsb
xor
jmp
pop
mov
push
mov
dec
add
sbb
xor
and
imul
xor
sub
adc
mov
sub
das
lock
jmp
repnz
or
add
mov
imul
push
add
sbb
scas
xor
add
xlat
add
sbb
lods
hlt
movsb
xor
dec
imul
jle
dec
loope
testb
rcll
xor
std
inc
cmpb
iret
mov
pop
dec
ja
or
add
mov
shl
stos
test
int3
cltd
insb
imul
sub
xchg
and
sub
icebp
and
pop
and
xchg
shrd
xorl
stos
xchg
mov
les
les
pop
sub
jp
pop
add
adc
imul
sbb
roll
or
lahf
add
lock
and
add
pmullw
push
pop
imul
flds
jnp
out
adc
fldl
push
jb
inc
inc
jmp
pop
test
mov
xor
es
or
fsubrl
in
lcall
lds
and
pop
fisubs
ret
das
mov
lea
insl
hlt
xchg
xor
xor
jecxz
idivb
das
loopne
xchg
cmp
xor
add
out
and
and
pop
or
outsl
xor
xchg
jne
pop
mov
fsubs
adc
arpl
adc
rolb
int
out
leave
xor
mov
inc
iret
cwtl
add
cs
lret
outsb
mov
sbb
or
pop
dec
sahf
dec
mov
push
mov
jp
xchg
push
dec
pop
out
dec
mov
push
test
cmpsb
data16
jnp
js
repnz
xchg
outsb
add
sbb
jbe
cmp
push
mov
lods
xor
imul
xchg
iret
push
adc
sub
xchg
pop
push
push
dec
into
push
arpl
xor
lea
rcll
addr16
mov
cmpl
sub
lods
popa
mov
jb
bound
sub
out
enter
popl
outsl
sar
mov
pop
xor
xchg
pop
sbb
lret
gs
cmp
mov
lret
jmp
test
ljmp
nop
imul
pop
inc
add
mov
lret
add
test
dec
add
arpl
cmp
popa
arpl
jge
push
data16
xchg
aas
add
cs
loop
in
push
lea
mov
mov
testb
mov
cmpsb
out
in
in
in
lock
push
test
dec
sbb
mov
shlw
ds
mov
scas
mov
lahf
inc
pop
dec
lds
cmp
rclb
test
and
rolb
mov
and
adc
arpl
pop
jp
jecxz
xor
jp
enter
mov
adc
pop
mov
dec
gs
loop
jae
jnp
fiaddl
mov
jecxz
repz
dec
sub
sahf
ret
sub
popa
ja
cmp
xor
lea
not
pop
jno
jecxz
hlt
xor
arpl
mov
push
or
adc
jmp
ljmp
mov
rcr
pushf
pop
leave
movsb
fs
xchg
xor
jo
lret
xchg
jecxz
adc
mov
push
enter
mov
ret
push
lret
cmp
daa
shll
jmp
jnp
adcl
add
add
sti
rcll
lods
add
imul
add
push
pop
jge
mov
jno
stc
loopne
rorl
arpl
pop
or
mov
jl
push
les
or
pop
adc
ds
cs
pop
fs
fwait
and
arpl
fistpll
pop
sub
mov
dec
mov
cmp
jb
hlt
mov
mov
inc
pushf
lds
das
test
in
dec
mov
pop
sub
stos
rcrb
or
sahf
jle
sbb
cltd
inc
data16
lcall
stc
popa
or
out
mov
arpl
rorl
sar
xor
pop
and
jno
push
xchg
repnz
xor
jmp
cmp
fsubs
repnz
jno
dec
pop
ljmp
lods
inc
pushw
jns
dec
test
pop
ljmp
push
sbb
pop
dec
mov
sbb
push
lock
popa
outsb
jae
push
jae
cld
cltd
adc
adc
loopne
repnz
imul
jle
lods
xor
in
xor
push
push
pop
lret
arpl
and
mov
out
shrb
push
jae
iret
out
jnp
cmpsb
outsl
sub
cmpsl
xor
cmc
mov
fnstsw
mov
sbb
sbb
mov
cltd
sub
gs
das
jnp
pop
dec
push
mov
and
mov
jmp
arpl
cs
sbb
xor
xor
leave
push
lds
xor
fcompl
adc
mov
popf
jnp
xor
push
push
imul
add
pop
xor
adc
outsb
jle
addr16
stc
lock
jmp
jnp
dec
xchg
push
jne
dec
mov
jl
sbbb
hlt
push
leave
or
or
sbb
pop
ds
cli
imul
xchg
cmpsb
fdivrs
pop
clc
icebp
xor
or
nop
or
dec
outsb
jbe
push
ds
test
xor
inc
filds
add
push
jmp
hlt
and
mov
push
sub
inc
xchg
test
jo
mov
xchg
or
mov
or
and
mov
cmp
rol
add
shlb
mov
push
mov
pusha
jp
cmpb
lret
ljmp
push
mov
fdiv
push
fsub
ljmp
fnsave
mov
add
xor
insl
xor
mov
jecxz
jmp
xlat
mov
inc
es
mov
into
std
dec
cltd
jne
ds
sbb
inc
out
stos
xorb
jecxz
ds
push
pop
in
roll
adc
faddl
inc
mov
aaa
test
sarb
inc
rorb
arpl
roll
mov
leave
dec
jecxz
pop
bnd
xchg
inc
negl
mov
lds
sbb
sub
bound
push
aas
data16
cmp
sub
mov
jo
enter
jb
hlt
inc
xor
pop
loope
idivb
sbb
jo
movsw
mov
jbe
xor
lock
adcl
and
jle
fbld
mov
mov
mov
dec
sbb
cmovg
jecxz
lods
pop
or
in
mov
push
iret
aaa
cwtl
pop
popa
ret
add
xor
jle
call
dec
daa
or
xorb
or
cld
push
xor
push
sbb
sub
dec
mov
pop
pop
sub
iret
dec
dec
push
xor
jo
push
es
xor
xchg
or
sbb
ds
mov
sub
imul
xor
and
add
bound
lret
cmp
xchg
aas
in
pusha
hlt
outsb
insb
push
dec
fdiv
jb
test
sbb
idivb
cmp
jae
repnz
scas
mov
xchg
jle
loope
ret
enter
and
imul
push
dec
push
push
inc
call
mov
mov
cmp
arpl
ss
test
adc
dec
cld
inc
sub
xchg
cmpb
pop
shrb
fisttpl
cmpsb
stc
push
jbe
lret
dec
int3
stc
fisubrs
pop
xchg
pop
cld
or
shll
fstpt
dec
dec
ss
adc
adc
cwtl
push
mov
lods
imul
add
or
xor
fiaddl
hlt
pushl
cmp
push
xor
jmp
pop
mov
cmp
jbe
pushf
lock
adc
stc
mov
mov
cmpsb
cmova
add
pop
mov
push
ret
test
mov
test
out
in
mov
adc
pop
xchg
fsubrl
push
cld
inc
jo
les
faddl
dec
mov
popa
lods
arpl
mov
mov
jge
mov
ss
adc
sub
rcll
and
pop
insb
and
inc
mov
jo
pop
lret
lcall
xor
dec
test
imul
push
scas
dec
mov
movsb
pcmpgtb
xor
pushf
lret
lcall
int
cmpsl
in
dec
xchg
xchg
lock
mov
xchg
adc
js
and
adc
rolb
repnz
cmc
lds
push
fdivrp
inc
mov
lods
gs
ss
push
xor
mov
cmp
and
push
orl
bound
push
lods
mov
fcoms
fldpi
out
cmp
xchg
xor
dec
add
sub
sarb
dec
pop
in
mov
jnp
jecxz
and
adc
sub
xchg
or
lcall
dec
push
scas
outsb
imul
mov
jp
jo
iret
adc
sbb
add
stos
adc
cs
mov
repz
arpl
test
add
cmp
mov
stos
mov
gs
mov
jp
icebp
andb
add
push
mov
pop
mov
mov
mov
in
divb
xor
xchg
stos
enter
dec
sahf
push
inc
shll
lahf
mov
xlat
mov
and
jno
mov
or
cmp
or
das
call
jecxz
fidivl
scas
dec
pusha
aaa
in
sbb
leave
xor
jo
mov
stos
out
andb
push
adc
mov
test
js
out
lock
repnz
rol
pop
mov
push
idivb
test
mov
cwtl
cmp
push
andb
jae
pusha
stos
ds
data16
sahf
rcrb
dec
mov
mov
shrb
jb
jbe
lcall
arpl
stos
loopne
outsl
jecxz
xor
mov
data16
mov
ljmp
lock
mov
hlt
xor
and
jmp
sub
dec
pmullw
push
test
call
mov
cmpsl
push
push
pop
test
cltd
mov
imul
lahf
bound
dec
bound
sti
mov
insb
test
cld
ds
mov
fdivr
call
lock
pusha
stos
repnz
nop
jle
iret
lock
into
mov
ds
test
jns
mov
add
jge
jo
les
inc
loopne
les
jecxz
ret
lea
dec
jnp
lock
bnd
jo
subl
or
push
mov
repz
ret
or
sub
jmp
jge
add
popa
fidivs
dec
repnz
inc
xchg
jmp
data16
jp
cld
loopne
push
sti
xor
addr16
leave
stos
sub
mov
push
pop
outsb
mov
lret
cltd
int
push
xor
aaa
hlt
push
mov
leave
pop
jnp
enter
pop
mov
mov
leave
jle
clc
and
lock
shr
outsb
push
shr
cmpl
testb
cltd
repnz
adc
and
sub
data16
dec
jl
shrl
or
push
and
xchg
jno
pop
lcall
cmc
sbb
jne
cmpsb
mov
mov
fs
xor
adc
pop
lret
lods
rol
push
xor
inc
lret
inc
mov
pop
cmp
xor
xchg
sbb
bound
xor
lods
xor
push
jg
xor
dec
movsb
mov
cmpsb
jl
dec
loope
ret
cltd
add
call
dec
lret
stos
cmp
sub
fdivr
cmp
arpl
lret
xor
imul
add
and
or
arpl
sub
call
push
outsl
jp
cmpsl
jb
add
stc
push
jecxz
xchg
addl
fists
mov
ror
mov
pushf
aas
push
mov
lcall
add
iret
out
or
fildll
popl
jae
outsl
daa
orb
imul
xor
or
mov
rep
dec
stc
mov
sub
sbb
gs
mov
push
addr16
cmpsl
ror
dec
cmp
repnz
stos
sbb
int
addr16
pop
add
out
cmp
lock
adc
jns
push
xchg
arpl
push
push
push
lcall
and
addb
cwtl
mov
xor
dec
out
ss
mov
inc
ret
lcall
push
ss
pop
mov
jo
fstpt
adc
or
addr16
jle
arpl
adc
hlt
dec
shlb
jmp
sub
shrb
bound
fisubrl
outsb
push
hlt
inc
mov
stc
push
add
jo
test
lret
add
mov
lock
xchg
loop
sahf
or
inc
rclb
lret
fstpt
loopne
xor
jo
xchg
xchg
inc
add
fsubrl
cmp
mov
dec
fstl
lret
movsl
xor
and
xor
enter
sub
int3
loopne
call
mov
jbe,pn
aas
inc
daa
scas
insl
jp
jnp
jl
lods
leave
loop
repnz
add
dec
shlb
ret
mov
insb
mov
jnp
mov
pop
icebp
and
cmp
stc
icebp
lret
jns
cmc
cmp
mov
push
push
mov
lods
push
into
or
imul
daa
test
dec
pop
rol
push
repnz
imul
movd
xor
add
mov
aam
aas
mov
mov
adc
adc
in
xor
cmp
mov
ret
in
in
movsl
scas
nop
xchg
xor
xor
jo
int
jp
jl
pop
cltd
mov
stos
divb
lret
mulb
sbb
stos
adc
sahf
outsb
mov
test
data16
cli
xchg
lret
mov
jle
bound
mov
mov
inc
add
jmp
test
popf
in
out
andl
in
bnd
cmp
sbb
mov
add
rcrl
inc
cmp
pop
cld
setno
out
mov
push
es
repnz
negl
or
inc
call
test
xchg
fsubs
sub
jp
lea
xchg
jle
mov
hlt
in
je
rclb
xor
dec
xchg
mov
push
push
cs
sub
lret
jno
jl
jno
or
dec
cmp
mov
mov
xor
movb
cmovb
jo
xchg
cmp
jp
test
neg
imul
sahf
cltd
mov
inc
lock
adc
loop
jp
inc
dec
dec
data16
test
stos
push
push
test
mov
push
stos
cmpsb
push
xor
rcl
fldcw
xchg
jo
fdivl
mulb
out
push
push
mov
xchg
stc
flds
xchg
sub
stos
or
push
test
ret
gs
outsb
stos
fwait
cmpb
xor
jecxz
add
imul
jae
sbb
push
sbb
test
cmpsb
and
inc
or
cmp
xor
pop
and
ror
fstps
fsubrl
jmp
outsl
cmpsb
outsl
stos
xchg
push
outsb
jecxz
and
cmp
hlt
jbe
lock
xor
or
cltd
in
inc
sub
pop
or
jae
out
outsl
fidivs
decl
and
loopne
push
stos
cmp
pop
add
push
pop
adc
cli
mov
dec
jbe
jp
mov
out
inc
dec
mov
orl
aad
repz
das
sbb
cmpsl
xor
xor
imul
testb
aas
or
std
lods
aad
cwtl
dec
lods
sahf
sti
das
cltd
cli
jp
jnp
dec
notb
subl
inc
xchg
mov
inc
dec
pop
push
cli
sub
lret
mov
mov
insl
loope
push
and
adc
les
test
addr16
jo
cmp
iret
sub
or
dec
pop
push
xor
loopne
cmp
jle
mov
xchg
movsb
jns
and
js
repz
and
push
push
add
and
mov
dec
pop
icebp
xor
fisubs
push
subb
cmp
ss
push
adcb
flds
or
add
sahf
mov
adc
scas
xor
fsub
in
out
in
add
sub
dec
xlat
mov
je
sub
xchg
pop
das
and
pop
xor
and
inc
and
popa
adc
push
inc
mov
xor
fdivrl
repnz
imul
push
xchg
lret
lcall
dec
dec
jae
jecxz
shlb
ss
outsb
lock
leave
cwtl
jecxz
sub
bound
push
push
cli
jae
jmp
or
icebp
jno
cmp
pop
mulb
mov
test
cmp
scas
mov
push
fwait
jo
test
arpl
adc
add
mov
push
inc
jle
fsubrl
test
pop
add
xchg
hlt
shlb
jg
pusha
add
inc
cmp
js
jp
loope
mov
je
sub
push
and
cmp
mov
and
hlt
mov
mov
into
fsubp
add
daa
push
daa
or
mov
shl
test
mov
outsb
mov
stos
sub
jns
jo
stc
sbb
and
stos
imul
lret
adcb
mov
jecxz
xchg
cmp
push
xchg
and
mov
std
lcall
push
push
push
mov
mov
xor
pop
bnd
pop
rcl
inc
mov
repnz
stos
push
and
dec
std
adc
xor
cmp
push
out
add
sub
sahf
scas
lret
fcom
sub
jbe
and
mov
lahf
lock
and
popa
aas
jmp
enter
xor
xchg
add
xlat
js
lret
mov
cld
cmp
test
bound
addb
push
mov
xor
push
xchg
xor
mov
das
arpl
faddp
test
cltd
pop
jp
cmp
lock
out
push
in
or
rclb
pop
xor
jnp
xor
cli
push
rclb
adc
dec
mov
jb
cmpsl
xor
xorb
imul
or
fcmovne
and
push
and
push
lock
lea
imul
or
test
cli
dec
dec
push
loopne
adc
fcmovnu
push
jae
loope
pop
jbe
out
mov
fdivrl
fisttps
xor
jmp
test
idivb
pop
sarl
addr16
dec
ret
loopne
loop
hlt
cs
mov
dec
pop
xor
roll
sahf
push
dec
das
adc
leave
push
roll
xchg
scas
add
or
pop
and
dec
mov
leave
mov
imul
cmp
adcb
aas
js
inc
bswap
dec
xor
int
bound
jbe
jp
jle
lock
orb
cmpsb
imul
loope
repnz
push
push
bound
sub
sbb
test
std
lods
cli
dec
mov
in
push
jge
lea
data16
imul
lock
mov
add
mulb
adc
hlt
sbb
add
pop
mov
and
lock
aad
test
outsb
mov
push
adc
mov
ret
loopne
push
cmp
repz
dec
xorb
por
push
push
push
xor
mov
xor
stc
mov
leave
and
lcall
xchg
fsubrs
mov
pop
hlt
xorb
out
mov
push
repnz
and
jae
arpl
loop
loop
add
insl
mov
ljmp
iret
push
pusha
xor
pushf
popa
shll
fincstp
jge
inc
mov
jp
jp
push
sahf
jle
jmp
push
cmpb
dec
test
push
jecxz
xchg
xor
fsubr
test
dec
jmp
enter
xor
call
xorps
pop
das
mov
pop
and
mov
stos
push
jg
cmp
mov
cmpsl
and
or
cld
sub
shll
pushw
lock
sub
cltd
mov
dec
mov
mov
bound
outsb
add
adc
xor
add
inc
xor
mov
inc
scas
rcl
dec
jae
mov
cli
xor
stc
mov
into
fadds
or
cld
cmp
sahf
pop
ret
sahf
xchg
inc
dec
les
test
out
dec
cmpsb
mov
rorb
adc
xchg
clc
sbb
loop
lock
jo
dec
cmp
pusha
imulb
sub
pop
push
ret
lods
ljmp
sti
cmp
jnp
mov
je
push
sarl
push
dec
sub
add
loopne
repnz
fwait
jno
dec
xchg
arpl
sub
stos
test
mov
repnz
pop
pop
xor
repz
mov
fsts
xchg
or
push
and
shl
push
push
fldcw
jmp
packssdw
movb
gs
jecxz
test
adc
bound
and
pop
xor
add
jae
sarl
pop
roll
push
jns
sub
leave
stc
lock
push
sarb
jb
sti
and
out
test
lret
bound
mov
mov
jle
xor
sub
ret
imul
add
inc
xchg
jnp
int
add
out
dec
mov
imul
loopne
xacquire
cmc
cmp
mov
pop
mov
imul
mov
mov
iret
lahf
or
loopne
data16
dec
cmp
xchg
xor
mov
pop
inc
cmp
mov
jmp
out
imul
cmp
adc
test
mov
cs
jns
iret
inc
and
sub
sub
dec
push
push
lea
bound
sahf
cmp
in
lock
jb
repnz
popf
popa
dec
add
jecxz
or
mov
pop
dec
add
notb
xor
aam
mov
add
je
enter
cltd
push
mul
and
push
lar
loop
bnd
imul
and
add
loope
dec
cmp
fs
es
addl
xchg
xor
aam
inc
inc
mov
ret
cmp
pop
ljmp
sti
negb
data16
out
xor
popa
arpl
incb
stos
cmp
and
mov
xor
jns
idivb
fcmovbe
pop
rcll
pop
lods
icebp
sub
test
push
add
bnd
and
or
or
sar
xchg
dec
inc
ljmp
popa
rcrb
lock
pop
in
stos
push
insl
cmp
and
test
sbb
loopne
mov
loopne
nop
in
or
cld
clc
notb
cmp
and
mov
lock
lret
or
rol
repnz
shl
test
shr
lock
cltd
pusha
cmpsb
cmovne
pop
lock
xor
sti
loopne
nop
push
xrelease
and
push
pop
rclb
xor
inc
push
adc
add
arpl
arpl
rcrl
stos
or
daa
add
call
and
fimuls
and
lods
jns
mov
aas
pop
jae
push
mov
jae
mov
repnz
mov
jnp
lcall
dec
xchg
adc
xor
leave
and
cmc
xor
jecxz
incb
cltd
cmp
sub
iret
xchg
pusha
pop
sbb
xor
sahf
imul
in
and
jnp
int3
mov
mov
sarb
add
arpl
mov
fdivs
test
mov
mov
dec
mov
bound
pop
xor
std
pop
cmp
mov
cmp
add
mov
ret
add
dec
icebp
pop
ffree
mov
inc
fimuls
pop
lods
scas
es
or
loopne
xchg
es
xor
push
loop
leave
daa
xchg
add
repnz
ds
data16
mov
mov
add
cmpsb
sub
dec
mov
loopne
popw
imul
xor
inc
jle
lock
xor
inc
add
mov
jbe
popf
lds
rorb
mov
shrl
push
shlb
mov
xor
cltd
icebp
addr16
aaa
std
test
sti
arpl
daa
int3
jno
data16
imul
adc
clc
in
fmul
subb
out
sub
xchg
mov
iret
xchg
xorl
dec
mov
add
sub
jae
sbb
xchg
cmp
lds
ja
shrl
jb
or
das
test
lahf
adcb
xor
lea
dec
or
mov
cs
jbe
push
sub
cwtl
push
ret
imul
cmp
nop
sub
out
dec
fisubl
and
jno
mov
out
sub
xchg
and
cmp
push
adc
mov
push
sti
mov
setg
std
insl
xchg
dec
test
int3
test
ljmp
scas
cltd
cmpsb
js
out
add
mov
data16
pop
das
inc
sbb
sbb
scas
mov
cmpsl
xor
js
insl
cmc
dec
mov
cmpsb
push
sub
jg
adc
lods
fidivl
inc
dec
aas
pop
mov
int
mov
mov
insb
mov
cmpl
stos
pop
flds
add
cmp
fwait
repnz
popa
cmp
dec
scas
cwtl
mov
pop
mov
lock
push
pop
fbld
xchg
xor
fcomi
bound
cmpsl
and
cmp
add
xor
adc
sub
and
rolb
adc
push
imul
cmp
shlb
cmp
filds
dec
or
lods
jo
in
nop
pop
inc
pop
adc
inc
and
push
push
pop
fucom
mov
shrl
mov
pop
push
or
stos
ss
push
hlt
pop
mov
pop
ljmp
or
pop
cmp
mov
repnz
enter
lea
mov
jns
add
fidivrl
cmp
movsl
out
sahf
sub
or
dec
push
dec
test
ficomps
jmp
mov
push
cmp
sbb
adc
adc
in
push
inc
cmp
pop
stc
or
jecxz
cmp
fld
andl
ret
and
in
imul
lock
lret
pop
test
out
into
dec
mov
filds
call
js
push
jae
xlat
jnp
leave
add
cmp
cwtl
hlt
leave
sbb
imul
xor
negb
jb
stc
inc
loop
push
push
pop
rcll
sub
jmp
push
push
dec
cmp
pop
push
cmp
mov
out
stos
pop
stos
pop
inc
or
aas
test
cltd
outsb
icebp
and
xchg
dec
cmp
push
and
sub
cltd
leave
push
jecxz
fmull
jle
sbb
mov
mov
inc
mov
jmp
mov
xor
popf
xor
xor
pop
repz
push
pop
lret
imul
addr16
popa
sarb
or
pop
in
bound
mov
push
cli
sar
adc
stos
sti
flds
push
sbb
push
es
sarb
xor
cmpsb
fs
mov
xor
fsubs
lods
jb
int
lods
jns
nop
sar
inc
mov
adc
insb
scas
pusha
in
mov
cmp
mov
jns
dec
and
push
rcrb
scas
or
xchg
push
pop
xor
xlat
or
xor
jl
shlb
ret
add
test
dec
imul
pop
ret
and
and
lret
lret
cmp
mov
jp
dec
pop
pop
clc
pop
out
in
in
add
cmpxchg
lods
lret
stos
dec
mov
or
jnp
sub
rclb
call
fsub
cld
cwtl
repnz
sbb
push
push
sti
test
xor
stc
or
shl
arpl
shll
and
add
outsl
push
arpl
and
jne
roll
adcl
jns
incl
dec
pop
dec
sub
jecxz
fnstcw
xchg
imul
inc
pop
mov
mov
fprem1
dec
sarl
push
leave
and
xor
cmpsl
push
adc
movsb
pop
pop
dec
popf
data16
daa
lds
jl
cmpsl
add
dec
stos
gs
mov
add
adc
icebp
cltd
cmpl
jnp
popf
repnz
mov
fwait
pushf
arpl
out
ljmp
pop
xchg
pop
les
push
push
mov
lea
rcr
adcb
and
jecxz
call
push
adc
popf
push
jo
pop
addl
lock
dec
addl
or
add
movsl
lret
ficompl
scas
punpcklwd
add
inc
js
pop
dec
push
sub
loope
sti
mov
push
jp
push
adc
cltd
and
add
xor
in
push
dec
xchg
test
testb
pop
test
sbb
and
ja
int
dec
dec
push
cmpsb
subb
lea
or
das
cmp
adcl
or
outsl
dec
cld
push
pop
inc
jmp
mov
mov
xor
cmpsl
bound
test
jge
or
sbb
sbb
outsl
fsubs
xchg
push
js
sarl
fdivrl
cmp
imul
jo
and
jmp
pop
pop
repnz
sti
mov
mov
mov
cwtl
bound
jmp
push
push
jl
cmpl
cmc
push
rol
fists
xor
repnz
push
mov
xor
jp
dec
and
in
fcmovnb
test
xor
loopne
clc
fdivrp
adc
mov
jb
lods
test
cmp
adc
add
and
cmp
xor
rclb
scas
test
or
sti
out
xlat
xor
jbe
clc
and
imul
adc
std
dec
shl
dec
cld
pop
and
push
mov
out
test
repnz
test
cld
inc
pop
xor
lret
data16
or
adc
mov
mov
lock
inc
xor
inc
jb
dec
loope
cmc
dec
nop
dec
in
mov
push
rcrb
adc
push
push
ljmp
pop
xor
adc
pop
mov
sbbl
xlat
ss
push
or
in
mov
jne
inc
ljmp
int
and
xor
hlt
jo
xchg
dec
mov
orb
pop
push
add
pop
add
cld
int
push
mov
xchg
repz
fmull
rclb
fsubl
hlt
push
jo
lods
mov
dec
xor
psubq
fwait
cmpsb
jno
data16
mov
or
and
mov
sti
sahf
mov
clc
sarl
test
cld
cmp
aaa
icebp
rcrl
lret
decl
inc
call
ret
xchg
push
mov
popa
push
lock
test
mov
cmc
lcall
in
add
sti
jns
dec
xor
and
adc
dec
jns
mov
push
xchg
push
xor
cmp
insl
jp
daa
mov
sbb
xchg
cmp
or
repnz
xchg
das
mov
jmp
daa
add
mov
xchg
and
loopne
sbb
or
xor
lret
inc
cmpb
insb
dec
sub
and
add
push
pop
aad
ret
sahf
jmp
dec
outsb
sub
repz
cmpl
or
cld
cmp
cltd
stos
mov
lcall
aas
inc
jecxz
cmp
jmp
jbe
or
fstpl
cmp
mov
adc
leave
cwtl
pop
rorb
push
scas
lret
jno
mov
jne
xor
mov
lods
push
aam
adc
adc
leave
sub
fcoms
push
pop
test
bound
dec
testb
fsubs
ret
js
inc
sahf
aas
pop
cltd
inc
mov
fxch
jp
adc
aad
cmp
or
add
lcall
jmp
cmp
jo
cmp
sbb
xor
jns
arpl
mov
and
adcl
loop
pushf
jmp
ficompl
pop
repnz
repnz
test
dec
mov
add
and
testb
or
xor
outsb
out
push
daa
push
test
jb
loope,pt
cwtl
stos
and
es
pop
jg
mov
jle
dec
add
jp
sbb
push
push
mov
dec
test
adc
bound
inc
js
mov
gs
pop
pop
or
imul
mov
jo
jg
inc
adc
outsb
sbb
push
mov
mov
test
push
dec
test
enter
sahf
popw
cmp
pop
mov
out
or
jnp
adc
loopne
bnd
ljmp
in
sub
pop
jbe
mov
mov
mov
cltd
inc
imul
dec
push
push
mov
pop
xor
jbe
and
out
and
dec
sub
xchg
pop
jb
in
mov
jmp
inc
xor
jo
leave
js
ljmp
cmp
mov
test
lcall
cmp
and
mov
jo
jmp
mov
add
adc
add
add
cwtl
push
jmp
or
fsts
adc
lock
aas
mov
pop
push
loop
cmp
dec
iret
cltd
or
insb
scas
mov
inc
adc
call
in
xor
setp
dec
mov
scas
adc
lcall
out
es
adc
cs
mov
out
xor
imul
cmp
lahf
or
lcall
cltd
rcrb
jo
xor
or
xor
adc
jecxz
cmpsb
test
adc
push
xchg
fwait
dec
lea
cmpsl
out
push
arpl
inc
mov
mov
xor
mov
push
add
jns
rorb
mov
mov
jl
subb
inc
jno
inc
inc
fwait
aad
daa
inc
or
xor
jmp
rcl
pop
cwtl
dec
sahf
insb
cmp
xchg
push
imul
in
add
cmpl
push
fs
jnp
dec
adc
dec
andb
or
into
clc
jns
insl
xor
xlat
rclb
and
cli
cmpl
add
sbb
mov
rclb
or
in
push
lret
leave
xchg
daa
mov
sar
lods
mov
push
ret
xchg
mov
repnz
vmptrst
mov
lods
loopne
sbb
popf
xchg
popa
jge
and
and
jp
repz
or
fs
lret
push
mov
mov
pop
adc
inc
dec
add
mov
inc
jmp
loopne
idiv
xor
xchg
cmp
xor
arpl
sub
adc
fisubrs
xchg
jo
pop
shll
cmp
repnz
mov
fcoml
gs
shll
js
mov
out
cli
loopne
push
mov
xchg
sub
push
outsb
and
xlat
or
stc
imul
flds
test
push
in
xor
mov
inc
leave
pop
psrlw
into
jle
mov
inc
insl
lods
inc
subb
push
dec
mov
pop
mov
shlb
test
jb
getsec
leave
cmp
mov
clc
add
repz
cmp
sbb
cmp
mov
in
xchg
int
lods
lcall
in
mov
mov
dec
les
das
and
jge
mov
mov
dec
bnd
inc
mov
mov
add
sub
mov
test
sbb
dec
inc
outsl
dec
fs
leave
mov
sahf
sub
jmp
cld
cmp
push
cmp
out
xor
icebp
xor
sub
clc
out
inc
js
aas
xchg
xchg
or
cmp
inc
push
fstpt
or
xchg
daa
out
mov
les
arpl
js
fidivrs
sbb
jo
cltd
add
pop
add
adcb
ja
loopne
lock
xchg
mov
scas
dec
xor
mov
inc
adc
sbb
push
lock
bnd
pop
adc
test
cltd
in
and
in
dec
dec
ret
or
push
scas
dec
jle
mov
pop
sarl
test
sub
dec
push
xor
push
hlt
mov
addl
cld
data16
int
push
cwtl
add
fidivl
xor
jns
push
xor
jge
dec
jle
mov
addb
mov
fsub
push
mov
mov
sbb
scas
cmp
imul
mov
loope
xchg
sti
hlt
ja
xchg
mov
in
xchg
dec
dec
dec
pop
movsl
push
fcoml
mov
div
mov
mov
test
pop
imul
stos
out
xor
sbb
jl
mov
fcmovne
js
stos
cwtl
cmp
mov
fdiv
mov
ljmp
mov
pop
and
lret
adc
jmp
daa
push
sub
mov
push
or
data16
and
clc
and
cmp
adc
xor
imul
sub
mov
push
aas
hlt
idivl
icebp
movsl
leave
sbb
add
xor
fdivrl
dec
cmc
popa
mov
sub
aaa
mov
add
push
stc
xor
insb
loopne
dec
popf
xchg
sbb
push
enter
push
adc
dec
dec
mov
jb
push
push
rolb
jmp
mov
call
pop
sub
subb
cltd
sar
mov
popf
rcll
scas
push
fwait
pushf
jmp
out
xor
mov
out
xor
sub
and
or
sti
mov
mov
add
cli
addr16
cmp
lcall
push
jo
push
cltd
test
or
out
cmp
ja
sarl
mov
sahf
xchg
cmp
dec
pop
sarl
push
jp
icebp
addb
pop
mov
dec
test
inc
inc
pop
mov
dec
lret
push
cmpb
daa
sub
loope
ficoms
test
jmp
mov
cltd
cwtl
test
jp
mov
mov
xchg
fidivrl
sub
sub
data16
mov
bnd
out
mov
fidivrs
mov
outsb
jae
imul
xor
es
imul
sub
scas
in
dec
fwait
ret
mov
and
jb
rcrb
cmpl
out
sahf
cmp
jg
push
call
adcl
lret
mov
sub
add
or
pop
xor
jp
aad
dec
repnz
pop
xor
cmp
lcall
dec
add
out
ret
rcrl
mov
dec
adc
push
imul
sbb
cmc
push
fildl
jo
push
sbb
jmp
cmp
jnp
add
imul
add
loopne
mov
icebp
jno
jnp
stos
xor
push
and
andl
rolb
andl
sub
data16
arpl
dec
insl
xchg
and
or
imul
adc
mov
mov
incb
mov
add
nop
and
int
sbb
add
mov
lods
xor
sbb
test
push
lock
lcall
int
xor
jecxz
xor
lea
aas
mov
shl
in
in
adc
push
pop
test
daa
jmp
mov
mov
lods
mov
adc
loop
add
add
cmp
data16
adc
arpl
arpl
mov
rcrl
push
jle
andb
pop
or
dec
int3
fwait
cltd
sahf
pop
lods
enter
cld
dec
adc
jmp
jnp
pop
stos
arpl
imul
mov
jecxz
mov
imul
das
push
dec
adc
jbe
mov
fxch
dec
shll
and
sub
lds
bound
xchg
in
inc
xchg
mov
das
or
or
lock
aam
jecxz
in
ficoml
mov
test
xor
out
sub
popa
or
sbb
adc
xor
pushf
leave
fistl
sub
loope
mov
add
cltd
add
data16
aas
daa
push
test
cmpsb
push
cmp
jns
xor
push
pop
shlb
or
dec
pop
add
repnz
xor
dec
xor
or
adc
inc
ss
into
mov
imul
out
push
arpl
or
mov
bound
mov
test
adc
cmc
repz
dec
sub
out
ljmp
jae
addr16
les
popf
inc
repnz
xor
cmp
inc
sahf
adc
cli
pop
mov
ljmp
push
nop
sbb
and
xchg
lock
and
shlb
dec
pop
dec
xchg
movzwl
push
imul
cmp
ret
cmc
dec
xor
cwtl
mov
mov
xor
adc
sub
mov
dec
push
push
subb
test
push
jae
adc
test
cli
ljmp
mov
scas
lret
lock
dec
mov
mov
push
dec
dec
leave
mov
xor
les
inc
sahf
jns
sbb
dec
arpl
mov
push
or
jnp
repnz
xor
pop
mov
add
xor
cwtl
or
mov
cltd
arpl
xchg
dec
sub
mov
cmp
mov
push
dec
xor
dec
push
cld
cltd
nop
cmpsb
lods
lods
pop
jl
xor
mov
cmp
js
add
scas
andl
push
stos
jns
repnz
or
rolb
xor
into
incl
jbe
repz
arpl
and
sub
sbb
xlat
and
mov
stos
pop
xchg
xor
gs
lret
aas
mov
leave
cld
scas
mov
jnp
push
pop
out
jl
xchg
shrb
jns
test
mov
mov
add
idivb
test
jb
cltd
ljmp
mov
mov
mov
imul
imul
repnz
push
cmp
xlat
stc
mov
mov
lods
dec
dec
cmpl
jl
mov
mov
pop
out
mov
mov
push
pop
push
lods
mov
add
es
cwtl
lea
jmp
adc
es
mov
cmp
sub
mov
push
lret
adc
and
push
xchg
pop
ss
jmp
test
stos
jo
lods
ja
cmpsb
or
imul
lret
mov
nop
xor
cmpsb
or
cli
int3
and
adc
mov
jmp
or
adcb
stos
jmp
cmp
jnp
mov
movsb
imul
rcl
and
jo
mov
nop
xor
icebp
dec
ljmp
outsb
sbb
push
xor
jge
loop
mov
sbb
imul
cmp
mov
pop
xchg
mov
push
push
and
fwait
daa
or
stos
push
daa
add
xchg
jge
pop
fnstcw
int
xchg
add
push
xchg
dec
mov
push
shr
push
cltd
mov
and
addr16
dec
cmpsb
insl
scas
sti
or
and
sub
movsl
mov
jb
xchg
mov
cltd
loopne
cmp
pop
push
mov
loopne
push
addr16
cmp
push
adc
pop
inc
lret
or
lods
and
iret
xor
jp
cmpsb
jl
fisubl
or
dec
stos
orl
push
bound
cmp
into
fdivrl
enter
inc
loope
add
imul
cmp
sub
fidivs
fdivs
cmp
add
pop
push
clc
or
jb
lret
or
dec
dec
mov
movsl
and
and
sti
inc
adc
icebp
jo
lret
dec
daa
mov
pusha
gs
and
cmp
xor
push
and
fidivrl
add
fld1
dec
adc
pop
dec
pusha
daa
lea
stos
cmp
leave
or
shr
cmp
fistps
dec
mov
cmpsb
sahf
pop
lods
jae
jnp
jne
fmulp
mov
scas
mov
mov
lret
not
push
dec
mov
mov
sahf
xor
jb
jmp
push
xor
xchg
jecxz
loop
add
adc
mov
adc
stos
xor
imul
push
out
xor
out
or
xchg
xor
popa
sbb
scas
push
add
push
repnz
jmp
or
in
sbb
dec
push
mov
add
in
mov
lods
out
loop
push
push
mov
leave
mov
add
dec
add
rcll
stos
std
jmp
pop
mov
mov
cmpsb
dec
and
push
adc
inc
pop
fdivrl
icebp
adc
jnp
add
pop
into
mov
dec
dec
lcall
cmpsb
jmp
outsl
dec
and
test
pop
push
addr16
xlat
cmpsb
and
rolb
out
outsb
dec
pop
pop
fistpll
test
dec
xchg
adc
imul
data16
mov
pop
xchg
movb
ljmp
jp
xchg
aas
mov
push
xorb
sbb
outsb
push
bound
pusha
mov
pop
push
mov
es
cltd
xchg
pop
inc
mov
cmp
mov
ror
fisttpl
and
sbbl
pop
jl
sbb
sbb
jecxz
inc
pop
cmp
lock
movsl
jmp
xlat
push
xor
xchg
jmp
adc
test
jg
loopne
cmp
jo
adc
test
test
and
cmp
int3
mov
xchg
adc
ret
add
xor
fmuls
pop
imul
push
mov
cmpsb
cmp
mov
push
loope
imul
jne
fxch
imul
jbe
push
iret
xorl
test
adc
addr16
leave
mov
and
fnstenv
pop
inc
pop
in
pop
dec
call
sahf
insl
sub
pop
jecxz
pop
cmp
jecxz
push
mov
bound
sarb
fsub
cmp
dec
sahf
arpl
jno
imul
arpl
adc
xor
stos
fimull
out
test
sbb
mov
insl
jnp
mov
mov
bound
inc
outsb
xchg
leave
sbb
xorl
add
xchg
sti
mov
add
push
push
mov
mov
leave
and
push
test
sub
or
mov
mov
dec
jns
mull
pusha
addr16
in
imul
hlt
divl
cmp
into
lods
or
push
or
int3
test
ret
push
sti
cmp
xlat
mov
push
arpl
test
cmpsl
pop
push
lock
lcall
jnp
mov
and
sub
int
mov
xchg
mov
je
xor
add
fsub
xor
ret
fs
mov
or
outsl
push
or
inc
or
pop
icebp
cmpb
testb
cvtdq2ps
push
pusha
inc
leave
enter
inc
jmp
push
addb
nop
push
dec
sti
jae
xor
mov
sub
push
add
ss
xchg
cmp
into
popa
or
cwtl
push
loopne
and
or
sbb
stc
inc
idivb
mov
bound
arpl
push
or
pop
stc
jl
inc
mov
push
mov
out
cwtl
mov
adc
jnp
aas
pop
test
add
fcoml
arpl
xor
psllq
push
and
mov
pop
sahf
int3
jmp
repnz
stos
test
ret
aam
push
push
xor
pop
les
test
sub
pusha
shl
popa
cltd
leave
cltd
and
dec
adc
pop
xor
sbb
repnz
mov
mov
dec
cltd
pop
cltd
stos
push
bound
mov
jp
lods
lea
dec
cmpsb
jo
push
aaa
pop
shufps
bound
imulb
cltd
repnz
and
mov
dec
sub
jno
pusha
imul
fidivrl
jl
cmp
inc
call
push
mov
icebp
sbb
inc
aad
mov
mov
cmpsb
in
cs
mov
inc
dec
orl
push
push
int
cmpsl
and
or
scas
mov
sbb
add
cmp
pop
pop
mov
jb
jmp
andl
push
cmpb
mov
andb
xchg
fsubrl
or
bound
cli
idivl
pop
lods
push
xor
xchg
cmp
ja
or
wbinvd
shll
into
xchg
jb
es
pop
mov
fsts
xor
mov
sbb
mov
nop
xor
cmp
fildl
ss
sahf
pop
sub
jl
stos
loope
popa
jae
inc
loope
mov
imul
jmp
sub
enter
push
adc
clc
jmp
jle
lcall
push
hlt
mov
leave
lret
adc
xchg
call
inc
pop
inc
mov
dec
scas
fcomps
adc
xor
fildl
xchg
add
push
cmpsb
xchg
inc
pop
cwtl
sbb
push
xor
lahf
jmp
push
pop
dec
into
imul
sti
xor
adc
and
inc
push
sbb
pop
cmp
and
arpl
cmp
mov
and
jle
mull
and
cli
mov
sbb
repnz
cmp
push
mov
and
cltd
jo
inc
repz
push
idivb
inc
pop
dec
icebp
inc
lea
mov
mov
dec
or
dec
lcall
es
mov
imul
cmp
push
jmp
das
pop
int
arpl
pop
cmp
and
jg
movsb
loopne
idiv
xor
lret
clc
addps
adc
addb
push
mov
mov
xor
loop
test
mov
mov
mov
jnp
addl
xor
fistl
xor
mov
dec
cltd
pop
mov
sub
dec
push
xchg
mov
jecxz
movb
fcmovnb
fsubrl
ljmp
mov
pop
ljmp
lods
mov
sub
or
mov
and
add
iret
das
loop
lea
repnz
pop
fisttpl
mov
lret
mov
adc
push
out
xchg
lcall
xorb
xor
shlb
scas
push
jns
pop
ljmp
cmp
mov
or
mov
adc
imul
fnsave
dec
sub
jno
out
ds
dec
push
xor
mov
faddp
add
lods
pop
stos
js
clc
jo
cvttps2pi
push
rcr
push
fsubl
jmp
pop
loope
jecxz
cli
aas
mov
out
repnz
nop
ss
mov
mov
cli
push
xchg
fwait
jp
push
sbb
movsb
cmp
arpl
mov
push
mov
inc
sbb
ret
incl
mov
push
ljmp
jmp
popa
xor
repnz
mov
nop
cwtl
lock
cmp
or
or
pop
mov
adc
xor
jns,pn
bnd
and
xor
jmp
arpl
xor
xchg
leave
fiadds
push
test
push
push
lock
fnstcw
and
aaa
mov
and
push
and
and
stos
fdivrs
clc
negb
mov
stos
repnz
loopne
hlt
xor
dec
mov
push
mov
xchg
push
mov
lock
push
jl
mov
or
xchg
push
rclb
out
xor
lock
cmp
lret
cmpsb
pop
popa
add
inc
add
cltd
loopne
push
xchg
xchg
cmp
jns
fdivrl
xchg
inc
pusha
xor
mov
dec
cmp
cmpb
push
pop
call
jnp
shl
xor
jg
jns
hlt
xor
sub
ret
fmulp
repnz
cltd
and
push
xor
adc
xor
imul
add
ljmp
mov
icebp
add
insb
mov
ficoms
add
xor
pop
pop
adc
inc
shll
xorb
fwait
xor
add
out
add
pop
loop
imul
pop
cmp
fcoml
mov
mov
sbb
test
add
add
adc
ret
arpl
in
shlb
lcall
mov
pushf
xor
or
push
mov
add
xor
test
div
xchg
jnp
loop
mov
adc
sub
sarl
outsb
push
xor
imul
rcrb
jmp
notl
push
xorb
push
icebp
call
cwtl
ds
enter
test
xchg
shrb
mov
cmp
cld
scas
push
mov
sti
sahf
call
add
sub
stos
gs
push
pop
cld
sub
popa
jle
in
mov
leave
ljmp
outsb
push
cmp
insb
clc
add
jbe
fcoml
jnp
fisubs
nop
jmp
daa
ljmp
cmp
adc
pop
repz
jnp
notb
sbb
pop
outsl
mov
inc
sub
push
mov
in
mov
pop
pop
jg
jo
sahf
push
dec
mov
pop
add
mov
pop
cmp
movb
sub
sahf
dec
or
bound
sub
lret
xor
outsb
fwait
ret
mov
imul
sahf
subl
imul
pop
add
in
sbb
cli
test
lcall
mov
lock
mov
ljmp
mov
cmc
shlb
adc
enter
cltd
xor
dec
lock
adc
sub
call
cltd
mov
cltd
cmpsb
sub
gs
icebp
inc
xor
fdivl
in
xorl
imul
lcall
out
mov
and
or
push
pop
out
adc
fistpll
mov
pop
mov
bound
sbb
ljmp
or
inc
andb
lret
jp
dec
cmp
ljmp
icebp
loop
hlt
iret
imul
xor
add
push
aaa
push
stos
dec
jno
and
cmp
sti
push
cmp
mov
push
push
cli
push
imul
mul
pop
jae
dec
sahf
loope
loopne
adc
xchg
and
sbb
jnp
adc
imul
ja
sub
xchg
es
test
sbb
and
xlat
mov
cltd
xlat
das
inc
ja
mov
pop
mov
mov
dec
inc
or
adc
fchs
test
js
dec
out
bnd
loopne
cld
cs
add
fcomps
popfw
push
mov
adc
inc
inc
push
bound
jns
mov
mov
pop
push
mov
and
jns
fs
or
xchg
repnz
push
xor
xor
jns
loop
neg
sub
and
xor
aaa
loope
idivl
nop
outsl
mov
scas
push
addr16
xor
outsb
pop
sbb
pop
insb
inc
xor
imul
loopne
stos
dec
dec
push
and
sahf
outsl
inc
sbb
sub
jae
mov
add
pop
ja
sbb
dec
clc
testb
pop
hlt
or
outsb
les
inc
cld
and
push
popa
mov
push
xchg
push
call
hlt
cmp
adc
push
cmp
ret
jmp
fs
addb
mov
pusha
clc
jnp
xchg
add
or
mov
add
call
pop
ret
pop
mov
jb
push
pop
adc
pop
or
hlt
push
and
cld
adc
lret
popa
jnp
sub
push
jecxz
test
repz
sub
pop
adc
xor
or
mov
push
push
loop
jns
inc
sarb
imul
xor
lock
xchg
cmpsb
dec
das
pop
lea
xor
jecxz
das
dec
jnp
insb
pusha
inc
cmp
or
iret
push
xchg
in
mov
scas
ds
pop
add
mov
cmpsl
push
arpl
data16
xchg
adc
aas
repz
jmp
jns
inc
mov
mov
jb
xor
xor
and
pop
repnz
rorl
and
fmuls
push
bound
xor
movlps
inc
and
mov
ret
mov
push
push
es
inc
dec
jb
and
repz
rol
push
lods
lds
mov
mov
int
add
lods
jecxz
int
bound
xor
int3
xchg
sbb
popf
fistl
dec
test
add
push
adc
aas
out
dec
stos
adc
dec
out
jp
add
jbe
dec
cwtl
push
dec
jle
std
sub
or
or
mov
or
mov
mov
mov
dec
xchg
xor
and
test
cmpsb
loope
mov
add
sbb
xor
jno
pop
inc
call
xchg
xchg
push
mov
jo
cli
stos
jle
js
test
repnz
cwtl
lock
stc
inc
cmp
icebp
nop
xchg
fidivl
sub
inc
inc
mov
orl
inc
mov
mov
pop
loope
repnz
xor
sti
add
mov
mov
mov
cltd
scas
stc
push
xor
mov
xor
mov
pop
fstpt
mov
leave
dec
pop
cmp
andb
xor
mov
xor
and
dec
lods
cltd
es
rol
sbbb
cltd
mov
in
mov
and
xlat
xchg
imul
jnp
sub
cli
or
push
push
jecxz
push
push
lods
xchg
jmp
test
pop
mov
hlt
imul
sub
mov
adc
call
in
mov
lcall
icebp
rcr
ret
enter
cmpb
sub
jbe
rcrl
jb
fsubrl
out
add
push
jnp
cmp
fcoms
mov
mov
mov
push
mov
adc
sbb
sbb
sbb
pusha
sbb
int
ret
clc
mov
sti
lods
lock
in
dec
aam
push
fcmovnb
lret
lcall
inc
loop
loop
hlt
test
negb
pop
popa
push
int
insb
in
test
push
outsb
xchg
cmp
fbld
imul
sub
add
out
es
or
push
and
and
sub
arpl
jge
out
imul
mov
mov
pop
inc
test
lods
xchg
dec
inc
mov
push
xlat
pop
jecxz
add
pop
test
xchg
push
mov
rclw
xor
mov
jnp
dec
and
fdiv
jns
lcall
js
xor
add
push
push
dec
test
cmp
popa
pop
pushl
jecxz
cmp
sahf
and
jnp
xorl
xor
jnp
out
in
aam
push
mov
cmc
imul
inc
adc
fucomp
pop
adc
adc
fldt
xacquire
rolb
imul
lods
clc
xchg
cmp
inc
jb
iret
sbb
xchg
push
push
mov
or
mov
xchg
xor
call
pop
jae
push
int
cli
xchg
montmul
cmpsb
les
dec
rcl
imul
jae
stos
sysexit
enter
mov
cmp
mov
cmp
jns
imul
mov
pop
outsb
shrb
stc
jbe
lock
jno
sub
fs
pop
xchg
xchg
push
sub
lret
jp
aas
push
arpl
dec
push
jecxz
xor
mov
jl
imul
fcmovne
adc
inc
sub
pop
add
loopne
or
push
sub
fucomi
aas
pop
push
sbb
nop
and
pop
xchg
test
xor
mov
mov
lock
mov
cmpsb
dec
cmp
cltd
fcmovnb
sti
cmp
cld
out
jp
dec
cmp
mov
cltd
pop
add
adcb
xchg
mov
loopne
mov
andl
jecxz
mov
push
sbb
lods
loopne
or
push
add
fisubrs
cmp
or
cmpsl
in
add
adc
leave
cs
jp
pop
push
mov
subl
add
ret
test
fdivrl
mov
xlat
mov
inc
scas
bound
cmpsb
push
cmp
or
daa
insb
sti
mov
lret
pop
bound
adc
stc
sub
cmpsb
push
ret
and
mov
cmp
mov
push
and
mov
xchg
arpl
mov
shrl
imul
imul
ret
pop
dec
repz
and
xchg
pop
and
hlt
das
xor
mov
push
inc
mov
push
push
pop
test
es
cmpsb
lods
dec
xchg
mov
mov
fdivrs
pop
daa
addr16
loopne
xor
push
popf
test
cld
loope
loopne
cld
out
xchg
xor
and
and
ret
pusha
cmpsb
mov
ljmp
sub
imul
add
enter
cmp
cltd
imul
imul
dec
sbb
or
leave
test
jns
cmp
icebp
loop
add
xor
imul
mov
ljmp
adc
fwait
add
sub
adc
ficoml
mov
jnp
cwtl
xchg
mov
lcall
dec
cltd
sub
punpcklwd
clc
nop
push
sarl
aas
cltd
icebp
dec
ljmp
sub
or
call
cmp
imul
mov
js
or
ljmp
out
lock
push
mov
call
dec
adc
jb
test
test
and
push
sub
dec
lock
adc
mov
test
loop
dec
rorl
mov
sahf
stos
fisttpl
or
imul
mov
sub
adc
dec
jae
shll
xor
lea
fistl
and
pop
cwtl
mov
sbb
mov
pop
cmp
out
add
xor
sti
mov
sbb
ficoml
mov
cltd
sti
cmpsb
xor
jnp
js
cmp
pop
clc
pop
fsub
scas
xchg
cwtl
mov
jle
push
lahf
push
mov
ljmp
inc
js
mov
add
bound
mov
xlat
cltd
jo
xlat
mov
mov
sbb
adc
dec
push
mov
mov
push
add
jb
or
stos
dec
cli
pusha
pop
inc
jnp
jnp
cltd
ficoml
test
imul
mov
xchg
sbb
mov
sahf
mov
sbb
mov
jno
push
dec
push
xor
xchg
std
mov
mov
cmp
push
repnz
js
pop
sbb
pop
icebp
or
mov
pop
stos
testb
mov
stos
bound
notl
fwait
mov
jmp
lret
xor
repz
cmp
ljmp
imul
shrb
cwtl
pop
cmp
pop
dec
int3
ljmp
stos
fadds
call
jns
mov
sbb
cwtl
dec
pop
jb
js
cmp
xor
pop
adc
sti
mov
lock
sti
mov
loope
sti
arpl
arpl
pop
mov
mov
cmp
or
push
cmp
cs
jne
push
push
ljmp
fistpl
sub
mov
data16
push
xor
push
sub
inc
push
xchg
inc
or
inc
xor
dec
in
daa
outsb
and
rclb
and
arpl
dec
adc
xor
dec
push
mov
es
ss
test
mov
dec
sub
xchg
pop
xor
daa
xchg
pop
mov
jmp
xor
stos
pop
sub
ljmp
arpl
orl
mov
cmp
into
icebp
dec
sbb
fidivrl
sub
mov
push
pop
movsb
mov
xor
loopne
out
fiadds
pop
ljmp
adc
add
mov
loop
stos
sti
inc
jg
jnp
and
xchg
push
scas
push
scas
mulb
das
lcall
outsb
mov
into
cli
mov
les
jnp
and
repnz
mov
cmpsl
ljmp
mov
stos
sbb
das
ja
inc
adc
iret
movsb
and
aas
jmp
fwait
cmp
outsb
sarl
push
push
push
push
xchg
bound
rcrl
in
pusha
adc
jb
imul
popa
fsubrl
jnp
clc
xor
sub
or
xor
stos
inc
imul
jo
sub
test
push
pop
shl
leave
inc
jg
or
orl
call
aad
sub
dec
sbb
fsubrl
sub
xchg
pop
lret
ljmp
pop
inc
mov
jecxz
cmp
mov
sbb
adc
outsl
clc
std
mov
cmpsb
sub
cli
cmp
js
adc
pushf
add
arpl
sub
inc
add
js
cmp
loop
sahf
cmc
cmp
xor
sti
ss
and
inc
lock
out
ljmp
jno
mov
sub
arpl
sub
loop
iret
movsl
sbb
cs
clc
sbb
and
push
inc
pop
jmp
push
in
sub
andl
mov
popl
mov
adc
nop
mov
sub
sbb
and
sub
add
dec
mov
sub
fldenv
xor
shrb
ljmp
inc
mov
sub
daa
cmp
incl
pop
lret
or
xchg
ja
push
or
push
lahf
cmp
lods
cli
lret
cmp
jb
dec
pop
cmp
test
adc
in
rorl
push
add
push
push
cmp
sub
lds
cmp
push
cmpsb
add
push
or
mov
mov
xor
ljmp
popa
jno
and
mov
or
ret
sbb
adc
or
sub
ret
xor
xchg
rorb
fisubrs
sub
lock
dec
xchg
cmp
dec
mov
inc
ret
or
rol
imul
loopne
test
and
imul
negb
lret
push
add
pusha
mov
add
adc
int3
fisubrl
ss
sbb
mov
and
mov
ficomps
mov
loop
sub
inc
mov
scas
lret
sub
daa
int
cmpsb
cmpsl
mov
test
adc
push
xor
pop
pop
mov
subl
test
data16
rcll
push
inc
popa
cmp
dec
pop
cltd
dec
sub
rolb
or
jcxz
inc
call
mov
rcrl
stos
pusha
xor
nop
daa
call
mov
in
decb
lods
sub
xor
xchg
xchg
inc
xor
sbb
cld
pop
cs
dec
inc
cmp
in
jns
inc
lret
outsb
pop
xor
sbb
inc
adc
and
mov
in
outsb
fistl
inc
mov
rolb
push
or
out
dec
das
pusha
push
mov
imul
pop
mov
stos
sub
dec
aas
cmc
and
enter
fisubl
inc
loop
cmp
call
jbe
ss
push
fisubl
cmp
xor
sahf
jne
mov
lcall
repz
xchg
sbb
sub
mov
and
push
and
jne
push
stos
sub
lret
push
lock
xor
imul
push
mov
scas
sub
adc
pop
mov
inc
sub
push
adc
clc
mov
sub
sub
neg
or
or
mov
sub
pop
gs
cltd
xor
in
and
push
mov
mov
das
adc
repnz
push
mov
adc
stos
or
in
bound
sub
ds
imul
mov
push
mov
aaa
cmpsl
mov
repnz
outsb
dec
or
jae
ja
fcmovbe
ret
out
sub
loop
fcmove
pushf
sarb
es
test
out
into
cli
lret
or
push
jg
mov
fwait
aam
cmp
jl
add
fcmovu
cmc
lea
mov
add
mov
pop
sub
sub
mov
add
jecxz
sub
out
popa
and
sbb
bound
std
aam
and
sub
in
xor
orl
inc
sub
and
cmp
je
xchg
sub
mov
ficomps
sub
lock
cmp
outsl
shlb
mov
int3
jmp
jl
jno
ss
lds
bound
mov
sysenter
xor
rcrb
pop
sub
int3
js
mov
inc
or
lret
enter
lret
ds
xchg
inc
test
movsl
sub
xor
cmc
fs
aas
fidivs
inc
push
cltd
sti
imul
push
lahf
jnp
movsb
lret
push
mov
sub
call
pop
repnz
add
push
mov
shl
push
pop
jecxz
sub
mov
push
shrb
jae
pop
adc
or
cmp
xor
xchg
jo
and
mov
popa
aaa
push
jne
sub
add
ljmp
jae
mov
arpl
jo
pop
and
lods
or
xchg
sub
mov
sub
popf
dec
xor
leave
xchg
rcr
sub
bound
in
or
jno
pop
hlt
lcall
movsl
pop
add
rorl
out
or
loope
pop
sbb
in
imul
lret
pop
jmp
shrl
movsb
nop
sub
or
mov
sub
mov
test
fisubrl
dec
scas
or
cwtl
sub
xor
dec
sub
sbbl
cmp
sub
push
or
mov
std
sub
mov
sub
jns
fisttpll
pop
mov
repz
subb
repnz
arpl
cmp
mov
mov
imul
icebp
adcb
es
repnz
mov
fidivrl
fmull
sub
shll
mov
mov
adc
out
inc
sbb
aad
push
cs
hlt
jg
icebp
test
add
ss
loope
out
cs
leave
sub
mov
jae
mov
push
in
dec
add
xor
jb
or
out
lods
cmp
divb
xchg
notl
xchg
out
inc
push
or
adc
scas
ja
mov
jnp
in
ljmp
das
repz
repz
adc
sbb
pop
xchg
dec
inc
cmp
push
mov
rcr
rclb
mov
test
jno
xchg
sbbb
loopne
ljmp
leave
test
and
cld
gs
xor
push
and
icebp
sbb
inc
xor
mov
sti
cltd
push
arpl
jnp
xchg
aad
lret
add
es
mov
sub
sbb
sub
mov
jns
dec
push
sbb
mov
adc
data16
mov
mov
lahf
fmull
and
sub
xor
lret
int
hlt
int3
aas
sub
js
push
sub
adcb
push
lret
lods
inc
sbb
or
sub
jl
sub
push
push
mov
jp
adc
aam
pop
rcr
ds
stos
sub
cmp
int3
sub
add
das
call
fcmovnbe
sub
mov
and
sti
shrb
enterw
lds
mov
test
je
or
push
xchg
xchg
and
mov
inc
pop
cli
insl
insl
inc
mov
and
daa
mov
sub
or
cmpsb
stos
outsl
dec
mov
cmp
repnz
sbb
mov
dec
add
sub
sbb
loopne
pop
test
push
jp
xchg
into
outsb
adc
xor
loop
pop
ret
cmp
aaa
daa
das
dec
out
inc
xchg
in
or
xor
mov
test
lret
mov
shrb
addr16
fsubl
mov
sub
int
into
cmp
pop
sub
lods
aas
xchg
dec
iret
dec
dec
sub
fcomps
mov
mov
cmpsb
xchg
ss
xchg
dec
fs
aad
or
mov
cmc
stc
sub
mov
clc
lcall
sub
mov
sub
mov
sbb
sub
sti
clc
lods
ficoml
xor
pop
mov
sub
jl
push
jecxz
sti
pushf
jg
in
and
push
aad
push
or
fidivl
outsl
shrl
in
sbbl
push
std
mov
xchg
sub
sub
pusha
and
rclb
gs
adc
sub
pop
sub
les
xchg
mov
lea
negb
sub
fs
fsts
sub
pop
mov
mov
pusha
sub
outsb
jge
int
in
dec
push
push
push
popl
cs
sbb
fs
sbb
xchg
imul
test
adc
cmp
jp
sahf
pop
cmp
and
lret
popa
int3
pop
jle
add
xchg
leave
jp
dec
popa
ljmp
or
je
neg
data16
xchg
inc
sub
sub
jns
pop
push
sbb
pop
xchg
sbb
xor
push
jnp
hlt
stos
test
sub
and
daa
rorb
insl
sub
sbb
inc
mov
stos
dec
movsl
jno
out
test
push
popa
lret
or
jb
jmp
in
ljmp
mov
inc
fidivs
push
and
cwtl
sub
xchg
adc
shll
ss
xor
imul
jp
jne
sub
and
xor
shrl
cs
loope
inc
jl
xor
dec
iret
adc
pop
incb
mov
cmpsl
aam
dec
sub
sub
pop
xor
cmp
cmp
adc
pop
pop
sub
add
mov
inc
inc
gs
lea
lret
imul
and
pop
std
sub
xchg
dec
popa
cld
aad
sub
mov
mov
ss
out
cmovno
jmp
cltd
loopne
scas
inc
mov
mov
shll
sub
repnz
cmc
idivb
mov
emms
push
mov
or
stos
imul
mov
jo
inc
repz
add
loop
add
sub
push
lods
jnp
daa
push
fsubrs
es
aaa
jbe
popf
data16
xor
dec
sti
cmc
sbb
fwait
xchg
mov
push
imul
mov
popf
or
jb
pop
xchg
jp
jbe
rcr
sub
pop
idiv
sub
fldcw
sbb
push
es
les
sub
push
mov
push
not
test
adcb
xchg
xor
pop
cli
adc
push
inc
add
stos
mov
aaa
xor
fildll
sub
pop
repnz
and
mov
aas
incl
in
popl
dec
jne
sub
jl
sub
sub
cmp
adc
and
mov
or
fisttps
or
sub
dec
shlb
adc
cmpsb
push
jl
les
sub
mov
sub
inc
cs
adc
pop
cmc
lcall
push
gs
jno
aas
jnp
stos
or
cmpsl
sub
push
add
xchg
sub
and
xor
push
in
addr16
inc
sub
adc
and
sub
mov
loop
xor
pop
mov
adc
sub
mov
mov
sub
shlb
xchg
sub
fcoml
xor
dec
js
add
cmp
pushf
sbbl
sub
in
mov
add
push
or
ljmp
clc
dec
fidivrl
outsb
repnz
jge
adc
push
pop
add
cmpb
dec
pushf
push
lcall
shrl
out
dec
int3
aaa
lahf
push
ds
push
pop
clc
ja
lods
mov
stos
dec
inc
xchg
mov
xchg
add
test
pop
cld
scas
rcrl
mov
dec
xchg
test
loope
sub
jl
dec
or
sub
aad
out
or
repnz
ss
cmpsl
cld
daa
sbb
stc
int
sub
jns
sub
mov
mov
jne
mov
xchg
sbb
sti
icebp
test
push
into
fs
add
xor
ficoms
sub
out
in
sub
movsl
leave
idivb
fwait
pop
xor
push
shl
mov
scas
dec
jns
jbe
fcompl
xchg
shlb
lcall
mov
sub
pop
lods
lds
lcall
notb
aaa
addb
stos
jmp
inc
add
xor
push
sbb
call
sahf
cmpb
sbb
pop
inc
orl
or
and
sub
xlat
fisubrs
andb
dec
jl
fisubl
fisubrl
lret
fsubrl
movsl
jg
mov
daa
lcall
sbb
mov
inc
rcrb
loop
ret
sub
mov
pusha
xor
push
lahf
pop
push
push
adc
cli
fcmovbe
test
outsb
fcoms
jae
je
inc
jp
sarl
dec
icebp
cmpsb
dec
sub
aam
int3
ret
jmp
fiadds
push
sub
inc
dec
sub
ror
repz
jns
std
jo
inc
sub
adc
mov
jp,pn
mov
inc
js
stos
inc
cmp
mov
rclb
xor
push
jecxz
sub
adc
loop
into
std
xchg
or
jmp
mov
cpuid
mov
mov
lods
add
mov
sbb
fnstsw
add
data16
cmp
xor
inc
rol
or
dec
int
sarb
movsl
out
leave
jmp
ss
sub
push
dec
xor
and
in
shlb
lret
dec
inc
imul
outsb
pop
inc
mov
sahf
pop
pop
mov
pop
call
das
sub
cmpsb
cmp
call
mov
sbb
mov
es
mov
xchg
jle
sub
dec
repz
or
sti
sub
gs
fnstenv
shl
push
mov
mov
popf
data16
jnp
lahf
mov
fimull
stos
dec
imull
gs
sub
movl
push
jmp
pop
jnp
mov
in
ljmp
push
cmp
and
add
out
pop
cmpsb
lods
stos
cmpsb
mov
mov
jb
xchg
notb
inc
clc
mov
adc
testb
add
pinsrw
dec
insl
push
out
loopne
adc
mov
or
das
notl
sub
xor
test
dec
pop
shrl
insb
xchg
xchg
pop
cltd
sub
jns
dec
dec
push
pop
pop
pop
push
out
out
push
xor
inc
je
mov
stos
flds
sbb
icebp
into
add
divb
jns
push
es
jb
push
clc
cmp
call
pop
inc
mov
xchg
insl
xor
lds
int
cmp
fs
add
rcrl
arpl
popf
pushf
sahf
and
fadds
movsb
xchg
inc
inc
pop
mov
lret
jge
push
fistpll
call
pop
push
add
imul
push
jg
lea
push
mov
jno
or
sbb
test
lea
arpl
sub
xchg
xchg
testb
int3
xor
cmpl
inc
or
xor
push
aas
add
add
fsubrs
mov
adc
pop
lcall
sbb
pop
mov
aam
rcl
inc
dec
push
sbb
sbb
jmp
jbe
jge
js
jg
js
add
repnz
xchg
xorb
stc
jge
mov
push
push
sub
imul
adc
sub
adc
pop
push
jl
jmp
xchg
fidivrl
and
inc
pushf
pusha
movl
call
mov
gs
aam
xlat
xlat
xchg
inc
mov
packsswb
lret
adc
call
test
test
jne
dec
pop
xchg
pop
xchg
xchg
shl
push
sub
shrb
in
cmp
xlat
push
sti
mov
or
incb
xor
xor
push
cli
cli
stos
scas
imul
enter
in
add
mov
lods
pushf
cltd
mov
scas
add
enter
adc
sub
sbb
pop
xchg
das
or
fnstcw
and
loope
stos
jns
jg
pop
loopne
inc
mov
out
ss
jns
std
stos
lcall
xchg
sahf
stos
adc
out
js
xlat
xlat
jnp
js
mov
pop
pop
call
test
lock
aad
sub
or
lret
add
inc
add
dec
add
add
cmpb
xlat
jecxz
aas
idiv
mov
pushf
pushf
pushf
pushf
lea
jmp
call
push
jmp
add
dec
outsl
arpl
inc
jb
add
cmpb
call
in
setg
mov
sub
cmp
cwtl
xor
test
lea
addl
decb
subl
lea
mov
std
mov
cwtl
xchg
bound
bound
mov
adc
not
std
xor
aas
cmp
or
aas
and
aaa
mov
push
xor
clc
push
or
hlt
adc
cmpsb
cmpsb
mov
xchg
ficoms
lods
mov
inc
cmp
push
sbb
jb
gs
xor
cs
insb
add
mov
je
int3
fcmovbe
jle
out
mov
sbb
fwait
sub
sub
xlat
das
sub
add
sub
mov
pop
jnp
fsubs
mov
rcr
sbb
subb
repnz
mov
lret
mov
lea
outsl
jmp
lods
ljmp
add
inc
push
mov
xchg
aam
aad
lea
mov
cmp
rcr
xor
mov
pushf
movw
mov
jmp
movw
call
lea
jne
not
pusha
mov
pusha
lea
jmp
movb
cmp
neg
bt
xor
clc
call
lea
je
bt
stc
test
add
clc
test
jmp
xor
cmc
cmp
clc
repnz
pusha
call
push
dec
mov
insb
gs
pusha
arpl
fisubl
fsubp
adc
imul
das
adc
lret
jp
jo
jnp
test
mov
mov
and
es
xchg
insl
or
add
mov
inc
push
mov
call
jno
lret
hlt
cmp
inc
into
into
mov
frstor
clc
pop
dec
cmc
or
push
sbb
insl
call
ljmp
je
int3
das
imul
push
sarb
push
incb
sti
lock
into
jae
xchg
add
test
xchg
insl
ja
sbb
out
int3
jno
popa
popf
arpl
pop
and
push
pop
mov
pop
bound
lea
jbe
or
or
sub
sbb
clc
bsr
mov
bts
mov
bswap
shr
add
shl
bts
ror
shl
shr
btr
pusha
mov
test
add
pop
call
idivb
es
inc
cld
mov
jmp
pusha
pushl
push
xchg
lea
jns
pushf
pusha
dec
cmc
movb
shl
not
lods
stc
stc
jmp
or
gs
adc
jmp
out
in
out
ljmp
jae
cmp
jl
dec
and
push
xchg
test
xor
hlt
repnz
or
ljmp
ss
xchg
aaa
xor
xchg
mov
out
fsubs
test
push
lret
lret
jnp
cmp
js
cmp
into
shr
cmp
pop
mov
xchg
dec
insb
push
cwtl
pushf
fistl
loopne
xchg
fmul
inc
mov
fsubp
movsl
into
push
bt
imul
test
jmp
pushf
pushf
clc
xor
lea
push
inc
lea
push
pushl
mov
call
pusha
movl
mov
pushl
movl
movb
pusha
pushl
push
lea
jmp
movb
jmp
sarb
adc
jecxz
sbb
dec
pop
push
adc
loopne
push
nop
push
cmpb
loop
mov
aam
sub
sub
fcompl
cmp
sbb
ljmp
frstor
pop
xchg
or
test
xor
fucomp
jmp
pop
leave
stos
fisubl
cmp
shl
in
pop
pop
cmp
or
mov
jns
add
js
inc
mov
shlb
jne
adc
jge
pop
mov
xorl
ja,pt
push
or
aas
jp
jbe
lock
lcall
movsbl
push
lahf
movl
cwtl
bswap
lea
pusha
push
mov
movl
push
mov
mov
push
pushl
popl
pusha
pushf
mov
pushl
ret
pushf
movl
push
pusha
push
pushf
mov
pushf
movl
pushl
pushf
pushl
ret
pushf
pusha
pushfw
popw
seto
pushf
mov
jmp
clc
call
lcall
call
jmp
adc
in
sbb
movsl
out
fsubs
dec
andl
clc
scas
addr16
adc
loope
or
cmpb
dec
mov
xchg
xchg
cs
decb
adc
cld
div
or
aas
jg
or
aaa
jno
fwait
add
pusha
stos
mov
cltd
insb
gs
jecxz
adc
adc
ret
xor
popl
cmp
lods
mov
imul
or
addl
scas
test
hlt
scas
sarl
cmp
or
jg
jmp
in
scas
sbb
jle
mov
or
cld
stc
inc
int3
xor
jp
pop
dec
dec
dec
lret
out
arpl
clc
add
jb
jge
add
or
jl
sbb
shr
test
cwtl
lea
pushl
jmp
lea
ja
not
mov
not
inc
inc
jmp
call
dec
jmp
push
pushf
jmp
jecxz
js
insb
gs
fsubl
sbb
rcl
mov
xor
xorl
push
adc
cld
add
lock
or
or
cmpsb
out
scas
jmp
out
lods
xchg
fsubr
scas
mov
mov
pop
cmp
lods
push
movsl
push
stos
test
push
pop
push
push
pop
pop
lea
push
loop
adc
push
mov
xor
jle
dec
loop
sub
cmpsb
mov
cmc
xor
dec
dec
ds
mov
xor
lods
js
es
inc
loopne
in
mov
xor
bound
scas
and
ds
imul
inc
pop
adc
in
xchg
out
ret
jg
imul
jo
mov
stos
mov
in
xchg
jmp
or
sbbb
aam
lret
ss
pop
adc
std
popa
shll
js
add
cmp
push
pop
xchg
dec
mov
loop
jbe
sbb
daa
pusha
ret
cmpsl
xchg
jbe
jmp
ds
scas
gs
in
fisubl
scas
iret
mov
sbb
out
insb
jbe
pop
loopne
fimull
pop
scas
lods
daa
inc
loopne
jg
cmp
xor
aaa
add
cmc
insb
or
dec
fsts
dec
ret
flds
cs
es
ss
je
pop
add
js
icebp
xchg
fsts
mov
insb
adc
inc
mov
sbb
stc
iret
rcrl
test
push
dec
push
mov
cmp
jecxz
mov
movsl
pop
stos
lods
test
xchg
fcompl
decl
mov
popf
fcomps
adc
out
cmp
pusha
xchg
inc
mov
sub
je
bt
push
test
sub
pusha
pushl
rep
call
pushf
pusha
push
lea
ja
and
add
test
push
movb
shr
mov
clc
jmp
and
gs
popa
imul
fwait
push
notl
shlb
ljmp
push
push
pop
lods
test
stos
ljmp
std
hlt
inc
dec
stc
inc
xchg
push
mov
sbb
jmp
int3
cmp
cwtl
dec
add
xchg
xor
cmp
cmp
pusha
mov
js
pop
adc
aaa
push
pusha
outsb
rclb
jbe
push
mov
jp
lahf
mov
xor
loop
outsl
sub
pop
push
jmp
jmp
outsb
or
testb
push
push
adc
lea
das
and
sbb
cmp
mov
xchg
jle
divl
outsb
pop
hlt
cmpb
mov
aam
fwait
sbb
inc
mov
lret
cli
mov
sti
ret
repnz
js
imulb
adc
out
push
sbb
gs
decl
or
dec
inc
call
mov
loope
mov
das
xorb
and
aam
aam
xchg
dec
jmp
mov
repnz
mov
pushf
loopne
adc
xchg
xchg
shrl
in
stc
sub
xor
xor
jb
cmovnp
xor
cs
sub
adc
pushf
add
call
push
add
jmp
push
movl
pushf
lea
jmp
jmp
lea
call
push
pushf
mov
lea
jae
stc
xor
jmp
mov
call
movzbw
call
add
add
jle
pop
add
add
add
mov
adc
add
add
inc
adc
add
add
fmull
add
mov
push
mov
lea
jmp
leave
shll
insb
gs
or
cmc
icebp
div
or
push
testl
xchg
sub
jmp
cmp
add
or
sub
push
and
outsl
fstl
js
jmp
insl
test
dec
iret
in
dec
push
aas
pop
outsl
in
cmc
ja
in
cmp
dec
aam
loop
and
mov
push
pop
loop
inc
xor
js
mov
jae
sub
popf
fwait
xor
dec
lea
hlt
leave
xorb
lods
into
stc
cmp
pushf
mov
setns
not
movzbl
mov
push
mov
call
pushw
popfw
pusha
inc
pushf
adc
movb
pushf
pushf
movb
pushl
ret
btc
mov
pushf
stc
shr
pushf
pushl
pushf
push
cmp
call
dec
clc
neg
cmc
cmc
xor
jmp
call
pusha
mov
not
pop
pusha
pushf
pushl
pushl
ret
call
cmc
add
pushf
mov
pusha
lea
jmp
push
adc
jb
test
jnp
xchg
mov
popf
hlt
clc
add
jns
dec
mov
push
mov
lods
aaa
pop
scas
out
pop
sbb
mov
stc
cltd
pop
push
or
addl
movb
fsubrs
fwait
lea
test
lea
jmp
jmp
ret
xchg
insb
gs
in
jmp
sbb
mov
sarb
dec
mov
mov
inc
pop
mov
loop
xchg
mov
int3
xor
lret
mov
test
lea
dec
repnz
jmp
stc
mov
out
movb
cmc
add
test
cmc
lea
jae
test
jmp
mov
gs
insl
bound
push
lcallw
ss
test
out
lret
icebp
pop
lea
mov
sbb
or
repnz
sub
and
mov
test
call
mov
sbb
scas
cmp
or
idivb
add
pop
in
push
cwtl
imul
sub
add
ret
push
pusha
cld
into
leave
add
mov
push
jecxz
incb
pop
fs
jl
fisubrs
fcompp
xchg
ficoml
movsl
jecxz
lahf
push
mov
and
movsb
cmp
pushf
rep
movsbw
movsbw
call
add
dec
outsl
popa
fs
imul
add
ret
not
inc
stc
seto
neg
xchg
add
btc
xchg
daa
mov
cmp
mov
call
fdivrs
mov
mov
mov
inc
inc
inc
dec
or
pushf
mov
int3
shlb
jbe
mov
push
testb
pop
mov
iret
mov
adc
decb
les
xor
jne
or
pop
dec
add
inc
jle
mov
mov
call
xchg
sbb
aam
sub
sub
in
test
orb
mov
fisubrl
js
test
jmp
sahf
xchg
loop
jge
sarb
jb
out
in
cltd
xchg
xchg
xlat
rclb
fistps
mov
loopne
pusha
loopne
pushf
ljmp
pop
es
cli
inc
mov
mov
call
rol
test
or
mov
mov
mov
scas
in
lods
jmp
lea
call
pusha
jmp
pusha
or
movb
pushl
mov
lea
je
bswap
mov
jmp
movl
pusha
lea
jmp
pushf
pusha
pushf
lea
jb
pushf
cmp
call
jmp
push
lea
jne
cwtl
lahf
bswap
mov
pushf
pushf
lea
jmp
mov
bound
popf
xchg
lcall
add
pop
inc
icebp
push
aaa
sub
je
or
inc
push
pop
push
scas
scas
movsl
mov
out
call
fstpl
mov
xchg
cvtdq2ps
testb
sbbb
call
xchg
sti
xlat
bound
hlt
dec
sub
decb
lods
mov
es
pop
clc
mov
xorb
sub
pop
loopne
push
sub
loopne
lahf
sti
jge
push
xchg
jecxz
cmp
cmp
inc
push
and
iret
inc
xchg
mov
xchg
cmpsb
mov
fs
or
outsl
xor
mov
int
jne
rolb
inc
pop
mov
jnp
addb
fs
js
mov
enter
mov
jnp
pop
inc
int3
iret
fstpl
cmpsl
cltd
fistpl
lods
or
test
insl
jae
insb
gs
mov
pusha
nop
lcall
sub
add
out
loopne
pop
movsl
pop
pop
pop
pop
mov
push
jne
xor
push
ret
push
fsts
test
sysret
cmpsb
std
mov
jne
cmp
add
sub
sub
pop
pop
clc
hlt
ljmp
mov
adc
cmpsl
dec
mov
fsubl
test
cmp
and
sub
insb
aaa
sub
loope
pop
dec
xor
and
faddp
shrb
lahf
insl
outsb
fcmovnbe
xlat
sahf
mov
call
negb
mov
pop
popa
sub
mov
mov
das
sub
aad
xlat
sub
fcmovbe
rcl
int
test
repnz
sbb
addb
lods
push
test
pop
pop
popa
sub
pop
sbb
pusha
and
mov
test
sub
cmc
cmp
pusha
lea
jae
pushf
cmc
pushf
movb
add
movb
pusha
jmp
pushf
jmp
lods
xor
mov
lods
cmpsb
std
addl
inc
dec
pop
daa
add
mov
sysret
sti
sti
push
add
add
div
std
push
xor
je
pusha
mov
loopne
cld
or
and
and
sti
pop
jg
mov
sbb
cmp
jmp
cwtl
int3
pavgb
xor
add
out
es
pop
scas
stos
pushf
popf
in
sbb
or
int3
xor
xor
dec
push
cmpl
inc
inc
std
mov
mov
cmp
mov
jbe
insb
gs
sub
das
sub
rcr
rcl
shrb
rcll
dec
pop
cmp
jae
clc
pop
ljmp
pop
mov
out
mov
mov
data16
jle
sub
or
sarb
into
add
ret
cmpl
out
pop
xchg
stos
mov
add
movb
pushf
movb
jmp
mov
and
lods
push
scas
push
stos
scas
lods
push
test
cmpsl
test
arpl
daa
shlb
adc
enter
xchg
xchg
lods
stos
xchg
test
pop
adc
cltd
dec
inc
or
mov
fdivrs
lods
fwait
lcall
cmc
sub
std
mov
inc
inc
mov
sub
mov
daa
fistl
repnz
and
insl
sub
push
xchg
sub
adc
test
xchg
mov
and
sbb
push
add
je
add
xor
inc
and
add
ret
rol
add
cmc
and
mov
cmc
mov
pusha
cmp
test
repnz
jmp
push
lea
ja
pushf
stc
stc
imul
stc
test
pushl
pushf
add
pushf
pushl
push
lea
jmp
mov
lods
push
push
stos
nop
stos
push
loopne
jg
cmp
ss
and
push
loop
push
push
repz
or
push
add
sub
movsl
push
sub
fnsave
imul
mov
mov
mov
out
lcall
rcl
hlt
cmp
push
insl
clc
clc
loop
sbb
push
and
fstp
pop
and
and
in
pop
in
adc
adc
push
adc
pop
gs
and
push
sbb
stos
lods
sbb
push
dec
scas
mov
cmp
int3
push
or
shlb
jb
xchg
add
cmp
xor
mov
inc
inc
inc
int
sub
sbb
mov
mov
pop
inc
xchg
mov
rcr
cltd
std
sub
pop
push
and
push
sbb
aas
iret
pop
mov
scas
xor
mov
xchg
popf
xchg
fwait
gs
imul
xchg
outsl
jno
mov
mov
or
imul
insb
outsb
outsb
push
push
mov
outsb
stc
push
pop
pop
push
pop
pop
pop
scas
test
lock
jp
inc
and
xlat
cmp
ja
xor
push
inc
je
repnz
mov
jb
in
push
mov
cmpb
orb
cmp
dec
loopne
lock
xchg
les
je
and
lret
into
lret
shlb
leave
cmc
pop
dec
hlt
divb
lea
xorb
push
fsts
push
lahf
cmpsb
xchg
imul
popf
mov
outsb
movsb
test
mov
aam
dec
dec
je
push
jecxz
xchg
mov
leave
les
rcrb
vrcpps
fstl
aaa
aaa
xchg
xor
repnz
inc
fcoml
xor
incb
nop
cmp
jl
xor
xor
dec
or
dec
push
xor
jp
decl
movsb
mov
mov
test
call
push
movl
jmp
cmc
add
clc
xor
test
cmp
bswap
jmp
pushf
movl
mov
lea
jmp
cmp
pushf
lea
jbe
cmc
xchg
add
rol
sub
bt
mov
clc
stc
bswap
mov
xadd
shr
jmp
lea
je
pushf
mov
call
pushf
movl
pushf
pushl
popl
mov
push
movb
pushl
ret
cmp
pushf
pusha
push
call
cmp
pusha
pushf
movb
push
lea
ja
setns
jmp
lea
jne
movzbw
call
mov
jmp
mov
gs
int
cmp
into
leave
aas
xor
shlb
adc
adc
add
jbe
in
lods
push
in
pop
push
sbb
and
push
or
lods
popw
popf
pusha
and
mov
sbb
push
adc
adc
adc
adc
sbb
mov
jle
or
and
popf
add
hlt
out
imulb
and
add
inc
dec
cmp
sub
add
cmp
stos
inc
or
mov
orb
adc
mov
inc
sub
mov
mov
leave
mov
repz
mov
mov
pop
dec
cmc
insl
rcl
adc
jl
fisttpl
dec
inc
dec
mov
inc
mov
mov
adc
cs
out
rcll
mov
fcoml
mov
mov
mov
insb
repnz
pop
push
xor
sarl
lods
aam
scas
cltd
sbb
cmpl
mov
xchg
fnstcw
jg
adc
sarb
cmp
gs
jns
cmp
test
jns
dec
or
jbe
jb
jno
add
insb
lcall
add
in
testb
insb
gs
popfw
pusha
pop
repz
inc
pop
and
cmp
shlb
jecxz
pop
adc
adc
push
sbb
out
push
sbb
test
jge
jge
in
and
mov
mov
mov
cltd
stos
test
in
movsb
out
js
jo
xchg
jb
add
push
xor
push
stos
out
in
and
inc
fisubl
mov
popl
add
hlt
hlt
mov
mov
lret
outsb
push
xorb
dec
jb
xchg
aad
push
xchg
nop
xchg
icebp
push
mov
pop
pop
adc
adc
sub
xchg
insl
movsl
lock
dec
aas
cmp
add
jb
push
xlat
lahf
and
xor
or
xor
fstps
inc
add
inc
pop
or
add
fsubrl
and
adc
xor
iret
xor
mov
push
out
in
inc
push
neg
adc
lock
mov
incl
mov
lea
inc
inc
cld
aas
or
ss
bt
cmp
jmp
not
not
lods
inc
adc
rol
add
pushl
rcl
pusha
seta
ror
inc
dec
dec
neg
sbb
xor
jmp
cmp
or
pusha
push
mov
lea
jne
adc
shld
shr
mov
bt
cmc
or
push
movw
pusha
lea
je
lea
lea
lea
push
pusha
movzwl
mov
lea
pusha
jmp
movb
movl
call
into
scas
dec
xchg
pop
adc
out
adc
jmp
adc
pop
sub
mov
jecxz
div
push
imul
cmpsb
pop
pop
mov
push
adc
enter
addl
cmc
mov
mov
lret
mov
rcll
stos
inc
dec
or
or
call
lcall
out
adc
mov
movb
call
lea
jb
clc
pushf
cmp
pushf
pushl
pushl
movw
lea
ja
pushf
pushf
clc
add
pusha
jmp
cmc
shl
call
lea
jb
test
cmp
push
lea
jae
movzbl
pusha
xadd
mov
lea
mov
cmp
sbb
mov
jmp
add
adc
add
add
add
add
add
in
lods
pop
add
lods
pop
add
lods
pop
add
add
add
add
lods
pop
add
cmp
sbb
or
xor
sub
rcrb
lds
subb
rcl
xor
mov
pop
pop
test
add
mov
push
mov
mov
sub
jne
push
xor
add
push
int3
int3
sahf
cmp
sub
icebp
mov
mov
les
or
mov
push
arpl
pop
xchg
sbb
arpl
cmc
mov
pop
shll
mov
js
pusha
cmc
jle
sbb
inc
mov
add
jecxz
adc
or
ds
lock
sub
mov
in
cmp
adc
rcll
xlat
leave
mov
test
push
cwtl
mov
or
adc
cmp
sub
ljmp
in
pushf
xor
jns
movsl
aad
pop
sub
sahf
aam
mov
lret
roll
lods
lret
and
pop
pop
in
mov
xor
and
mov
or
cmp
daa
andl
repz
cmp
cld
mov
jne
mov
add
lods
dec
or
repz
inc
push
dec
pop
jmp
decl
popl
jle
jecxz
cmpb
aad
lods
dec
xor
jle
shll
mov
mov
rcrb
inc
dec
push
stc
push
lret
dec
xchg
mov
test
mov
mov
or
cmpb
jns
lods
sub
dec
hlt
out
or
add
and
and
sub
xlat
ljmp
hlt
mov
std
and
dec
and
aaa
jbe
pusha
in
sub
enter
and
int3
and
data16
add
movsl
pop
int
jne
jns
punpckhbw
xlat
lock
mov
xchg
fidivl
push
leave
rolb
daa
pop
je
cmp
mov
imul
dec
mov
pop
mov
ret
push
mov
sub
sub
sbb
jnp
rcl
push
pop
cltd
ficomps
pop
int3
or
sti
inc
inc
cmp
shll
or
divl
add
mov
popf
mov
outsb
or
mov
jp
dec
push
idivb
and
aaa
dec
sub
fwait
dec
rorl
jnp
stc
cli
dec
push
nop
fdivr
negl
jg
xor
jnp
dec
cmp
nop
inc
clc
icebp
stc
hlt
add
test
cmc
mov
js
push
sbb
inc
mov
or
jle
pop
shrl
cmp
jns
in
adc
nop
add
sub
dec
mov
cmp
loopne
jecxz
sbb
outsb
add
movsl
cli
sub
xlat
imul
jbe
clc
cmp
das
mov
dec
or
shll
stos
dec
and
cmpsb
dec
icebp
into
sbb
cwtl
pushf
xchg
sar
or
pop
cmp
mov
test
add
mov
sarb
mov
or
mov
dec
mov
test
or
sub
pop
or
cmp
leave
out
ss
mov
jne
xchg
jb
xchg
pop
out
stos
insl
inc
jle
stos
test
mov
mov
mov
pop
adc
aaa
loope
or
sub
mov
mov
mov
dec
imul
xchg
test
scas
mov
pop
loopne
ficomps
push
push
scas
pusha
jge
sti
test
iret
mov
adc
mov
popf
dec
cmp
cwtl
pop
fbstp
dec
loopne
mov
sti
pop
test
sbb
add
lcallw
jmp
push
mov
in
dec
or
mov
cli
pop
in
xchg
popf
jno
jg
cmp
les
xor
xchg
repnz
xchg
bnd
cli
aad
pop
pop
stc
jmp
das
xor
mov
call
add
pop
scas
pop
sbb
mov
int
dec
bnd
out
sbb
mov
fistpll
mov
ror
je
jns
jae
xchg
pusha
inc
int
add
out
sub
jbe
cmc
jmp
rcrl
shll
sbb
xchg
adc
rcrb
and
mov
jg
nop
loopne
add
mov
xchg
push
in
push
mov
jns
mov
xchg
xchg
fdivrs
mov
data16
add
mov
mov
mov
loop
dec
gs
dec
push
lret
jl
push
sahf
movsb
orl
and
iret
pop
cmpsl
cmc
xor
test
mov
aas
adc
loope
xchg
xchg
in
movsb
pop
dec
mov
sub
mov
int
arpl
mov
lret
xchg
hlt
push
mov
lret
pusha
and
cmp
xchg
fwait
xor
add
mov
xchg
xor
jno
xchg
cmp
pushf
xchg
ret
hlt
mov
inc
ds
mov
pop
adc
les
xlat
aam
and
xchg
inc
nop
fildl
mov
clc
clc
and
and
inc
adc
pop
push
dec
mov
mov
adc
mov
sub
xchg
xchg
push
mov
into
out
mov
sbb
push
cli
gs
push
mov
fisubs
and
ja
into
clc
sbb
repnz
fs
gs
pusha
call
popf
cmp
cltd
xor
pushl
jp
dec
pop
cwtl
dec
or
push
pop
in
psrld
inc
imul
ret
clc
sub
outsb
xor
xorb
or
mov
push
cmp
push
sub
fnsave
adc
and
push
push
scas
mov
pop
das
scas
xor
jmp
dec
insl
test
mov
movsl
pop
sub
pop
mov
xor
std
and
pushf
cmc
or
out
rorl
mov
lret
test
addr16
inc
je
xor
mov
jmp
inc
out
push
out
or
repnz
cmp
and
xchg
adc
jge
cltd
pop
cmp
movl
jg
out
loope
xor
mov
cmpsb
shl
fsts
rcr
sbb
push
icebp
push
jo
pop
cmp
arpl
jmp
dec
cmp
mov
adc
lods
mov
rcll
jmp
xchg
inc
mov
stc
enter
inc
pushf
out
fs
xchg
inc
fisubrl
jb
roll
hlt
sub
cmp
cmp
jl
lret
cmp
in
dec
fimuls
sub
push
mov
lock
sbb
movsb
mov
cmpsl
enter
sbb
pushf
dec
loopne
fwait
out
sbb
dec
in
mov
orl
iret
mov
jp
push
add
xor
insl
inc
mov
stos
sub
jmp
add
ss
or
mov
and
cmpsb
dec
xchg
scas
pop
sbb
aas
dec
outsb
cld
push
push
cmp
xchg
ja
mov
xchg
arpl
ds
push
xor
loopne
xchg
icebp
pushf
jae
mov
pop
cwtl
xor
sub
mov
ss
dec
adc
shll
adc
mov
fstp
mov
arpl
fs
sahf
xchg
mov
sub
bnd
mov
xchg
in
push
pop
mov
sub
push
jg
sbb
call
xchg
int3
std
and
xchg
fsubrl
xchg
out
test
jns
es
aad
icebp
sahf
inc
movsb
push
hlt
pop
dec
sti
push
dec
xor
pop
sahf
lods
xchg
ret
jb
pop
aaa
lds
imul
and
adc
push
mov
lods
mov
daa
aaa
dec
jne
test
sub
test
xlat
add
negl
out
test
mov
mov
cmp
push
ficompl
std
push
int
sbb
lret
mov
inc
xchg
sti
lret
xchg
pop
pop
pop
shll
fwait
add
jb
cmp
cmp
sub
movsl
repz
and
test
pop
mov
imul
mov
mov
cmpsb
ds
mov
sub
stos
ja
les
add
scas
xchg
lahf
pop
push
outsb
shr
mov
pop
repz
or
fsubr
in
fcmovnb
jne
btsl
or
dec
ret
cmp
xor
ljmp
dec
std
dec
dec
add
lcall
lock
sub
push
sub
sbb
std
add
pop
jecxz
dec
xchg
jne
out
sbbb
xchg
int
pusha
dec
mov
xchg
mov
mov
adc
aaa
out
and
cli
into
sti
mov
pop
jmp
lods
jno
jg
adc
bound
rolb
mov
xor
or
cmp
pop
and
test
mov
sub
rorl
adc
into
notb
inc
andl
xchg
push
fs
cmp
jb
jmp
repz
mov
mov
pushl
add
pop
jg
and
push
leave
insb
cmp
fsubrl
sbb
mov
hlt
pushf
jg
stc
mov
popa
test
dec
cli
push
sub
jl
xchg
jl
or
push
mov
push
xor
mov
mov
or
adc
pushl
xchg
pop
dec
outsb
das
filds
pop
ja
in
arpl
lods
je
adc
pushf
jle
out
push
mov
push
pop
subl
sub
pop
insb
mov
test
adc
mov
sbb
lock
imul
xlat
scas
sub
xor
xchg
lcall
jl
cmp
notl
xor
je
dec
cmp
imul
xor
fisttps
mov
and
aas
cmc
mov
je,pt
mov
push
xchg
jg
negl
stos
add
andl
pop
cs
sub
jecxz
lahf
aaa
addr16
cld
pop
les
js
movsb
or
test
pop
lahf
xchg
cmpsb
imul
dec
aam
stos
iret
ret
mov
mov
xchg
mov
pop
cmp
movsl
rcr
mov
pop
insl
push
insl
int3
je
pushfw
inc
jns
ss
cwtl
int
sub
out
mov
push
cmc
xchg
sub
sbb
mov
ljmp
repnz
or
fdiv
rcrb
mov
inc
outsb
adc
repz
mov
sub
pop
xchg
out
mov
sub
test
je,pt
xchg
mov
insb
mov
lcall
cli
int3
inc
pop
cltd
fs
cwtl
push
pop
xor
mov
jmp
adc
stos
jo
sbb
faddl
mov
ss
adc
mov
push
adc
xchg
jp
je
mov
cli
nop
imul
scas
ja
call
add
movl
call
mov
pushf
lea
ja
bt
stc
push
imul
cmp
add
jge
add
push
jmp
jmp
call
lea
call
call
movl
pushf
push
pushf
jmp
jmp
stc
cmp
call
pushf
lea
jne
bsr
bts
movsbw
bsr
mov
pushf
pusha
clc
or
pushl
lea
je
not
jle
movzbw
lea
jb
bswap
lea
movzwl
call
mov
jmp
out
outsb
lea
gs
in
in
out
sbb
loop
loop
sbb
jns
clc
lahf
sub
lret
aas
hlt
jo
cmp
jge
loope
jns
hlt
mov
test
cld
mov
mov
add
movsb
xchg
insb
sub
insb
gs
xor
xor
xor
iret
xor
std
jb
dec
loope
dec
inc
cld
sti
sarl
popa
aam
mov
sub
and
lds
cwtl
jo
inc
dec
adc
orb
sbb
mov
ror
or
adc
jecxz
std
jle
loopne
mov
in
add
repz
ljmp
out
inc
dec
push
outsb
xchg
inc
insb
pusha
data16
or
jne
xor
cmp
je
cmovno
dec
jbe
je
jne
fwait
hlt
lret
ss
je
add
push
movl
jmp
movl
pushf
lea
jmp
or
jecxz
insb
gs
dec
mov
mov
mov
dec
dec
dec
ja
push
mov
scas
in
mov
and
int
cmp
dec
lea
jmp
mov
lods
or
mov
and
rcl
cmpsb
out
lret
dec
or
pop
cmpsl
pop
sub
sbb
fisttpl
jnp
aaa
sub
in
xor
push
hlt
inc
inc
cmc
hlt
dec
int
mov
into
mov
clc
mov
mov
stos
xchg
fninit
jle
pop
jbe
gs
xor
sahf
cwtl
cmpb
enter
in
sub
sahf
cwtl
xchg
lahf
push
nop
xchg
xchg
xchg
popf
insb
nop
cltd
jle
xchg
outsl
ja
jg
jns
add
dec
add
jae
mov
arpl
xchg
adc
pusha
or
aaa
xchg
movsb
jb
in
fadd
xor
shrl
mov
fnstcw
jmp
sarl
stos
mov
movsl
pop
pop
pop
pop
adc
inc
mov
ds
aas
out
and
sahf
push
cmp
movsb
xor
popl
ss
mov
sbb
pop
mov
cmp
dec
stos
and
sbb
or
adc
adc
pushf
add
js
mov
push
sti
xchg
push
mov
repnz
adc
repnz
les
leave
sub
hlt
rcr
gs
pop
mov
jle
sahf
rcrb
out
or
cltd
outsl
imul
or
or
mov
lods
loopne
jecxz
adc
jo
mov
pop
add
mov
push
push
pusha
push
icebp
into
repz
shl
mov
ljmp
pusha
mov
pushf
lea
jmp
lea
call
pushf
jmp
bsr
cmc
mov
clc
and
clc
test
pushf
add
pushf
lea
jmp
mov
pushf
bt
cmp
pushl
lea
ja
bswap
pushf
pop
pop
pushf
mov
movb
call
cmpb
jge
jmp
pop
cmp
xor
xor
lret
ror
adc
push
in
jg
scas
mov
adc
jmp
or
or
lock
iret
mov
repz
xor
sar
mov
dec
sbb
jno
sbb
movsl
pop
sub
adc
sub
lods
pop
addr16
push
outsb
ja
jp
in
out
ror
jg
orl
jne
lds
addl
jae
movsl
and
adc
adc
out
adc
aam
add
adc
mov
test
dec
dec
add
inc
dec
or
and
pusha
mov
jmp
cmp
add
inc
add
stos
imul
add
shlb
ljmp
int
ljmp
inc
push
push
pushf
pusha
lea
jmp
movb
movl
movb
lea
jmp
stc
call
rep
movl
mov
mov
mov
movb
mov
pushl
lea
jmp
pusha
and
jmp
lahf
test
insb
gs
and
sub
xlat
insb
sbb
pop
scas
scas
iret
repnz
inc
mov
push
or
xchg
fwait
es
cs
sub
sti
in
push
pop
shr
mov
push
push
lods
push
or
in
pop
sbb
stos
scas
add
or
out
fisubs
mov
mov
cli
imul
jne
cmp
ret
mov
push
dec
xor
inc
add
fisttpll
inc
dec
dec
cli
cli
cli
mov
clc
ret
ret
cld
rorb
lods
lods
jmp
or
cmp
mov
or
cmpsb
sub
sub
add
or
add
out
inc
or
stos
testl
icebp
and
add
enter
pusha
lea
cpuid
stc
sub
stc
pushf
cmpl
mov
pushf
movb
mov
pushf
call
pusha
movw
call
mov
pushf
mov
pushl
mov
push
lea
jmp
push
mov
movb
mov
push
pusha
repz
popl
jmp
not
rol
movzbw
sar
mov
stc
clc
bt
add
pushf
push
pushl
lea
jmp
mov
pusha
call
sar
mov
jmp
push
pushf
pushl
mov
call
xchg
movzbl
pushf
bts
sub
pushf
shl
sub
add
rol
sbb
shrd
sub
bswap
movsbw
btc
cmc
rol
pushf
not
sub
shr
setp
shr
sub
or
mov
pusha
call
pushf
popl
jmp
inc
stc
pusha
stc
add
clc
jmp
or
push
sub
aad
mov
add
rol
shr
shl
mov
jmp
push
mov
pusha
pushf
push
pushf
lea
jmp
pushf
movb
div
jmp
bswap
bswap
lahf
mov
call
call
mov
pusha
movb
mov
movb
pushf
mov
push
pushf
movb
lea
jmp
clc
bsr
mov
neg
adc
mov
shrd
shr
call
xor
push
pusha
cmc
xchg
stc
mov
stc
sub
call
push
jmp
pusha
pusha
movb
repz
popl
call
push
loopne
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
rcrl
fcmovnbe
pop
add
pop
add
loope
add
ficomps
dec
pop
add
ficomps
out
pop
add
into
pop
add
pop
add
pop
add
fistpl
sbb
pop
add
fstps
out
pop
add
lret
pop
add
pop
add
rcrl
aad
add
fistps
sahf
in
add
lret
pop
add
pop
add
ficomps
inc
loop
add
pop
add
into
pop
add
pop
add
lret
pop
add
enter
lret
xchg
pop
add
ret
pop
ficomps
mov
pop
add
pop
add
pop
add
pop
add
pop
add
rcrl
int3
pop
add
fistpl
add
pop
add
fistpl
add
pop
add
fistpl
add
pop
add
fistpl
add
pop
add
fistpl
add
pop
add
fistpl
add
pop
add
fistpl
add
pop
add
fistpl
add
pop
add
rcrl
xor
fstps
ror
add
pop
add
rcrl
rcrb
xchg
into
pop
add
xlat
pop
add
ficomps
pop
fcomps
and
fstpl
add
pop
add
pop
add
iret
pop
add
pop
add
rcrl
sahf
in
add
enter
fstps
add
pop
add
rcrl
jecxz
add
pop
add
pop
add
loope
add
fcomps
sub
pop
add
pop
add
pop
add
pop
add
rcrl
fistpl
adc
fstpl
sub
pop
add
ficomps
ror
add
pop
add
iret
pop
add
in
add
rcrb
ficomps
fucom
pop
add
fstps
out
pop
add
pop
add
enter
int3
pop
add
enter
aad
add
fcomps
movsl
fstpl
pop
fistpl
stc
lret
and
pop
add
ficomps
mov
fstpl
sub
pop
add
ret
out
pop
add
lret
pop
add
lret
pop
add
iret
pop
add
rcrb
jb
pop
add
enter
pop
add
ficompl
das
into
pop
add
pop
add
pop
add
iret
pop
add
fcomps
cmp
pop
add
loopne
add
iret
pop
add
ficomps
movsl
fstpl
daa
iret
pop
add
loopne
add
lret
mov
into
pop
add
pop
add
rcrl
jecxz
pop
add
pop
add
loope
add
in
add
iret
pop
add
loope
add
pop
add
pop
add
fstps
lods
fstps
xor
rcrl
movsl
fstpl
das
into
pop
add
aam
add
pop
add
rcrl
fcomps
call
pop
add
jecxz
add
rcrl
mov
in
add
fstps
fcmovnbe
pop
add
int3
pop
add
ficomps
out
pop
add
iret
pop
add
pop
add
jecxz
add
pop
add
rcrb
ficomps
vmaxpd
test
pop
add
pop
add
in
add
rcrl
fcomps
jb
pop
add
int3
pop
add
ret
cmp
pop
add
pop
add
rcrl
enter
ficomps
or
xlat
pop
add
xlat
pop
add
into
pop
add
rcrl
pop
add
jecxz
add
xlat
pop
add
pop
add
pop
add
fcomps
mov
lret
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
mov
sldt
push
setae
movzbl
movsbw
call
pusha
jmp
movw
pushf
mov
push
mov
pushf
mov
pushf
lea
jmp
pushl
mov
pushl
pushf
pushf
pushf
pushl
ret
rol
mov
xor
shld
ror
mov
stc
cmp
test
add
pushf
call
inc
mov
movzbl
jmp
mov
pushf
movb
mov
push
pushf
lea
jmp
rcl
mov
cmc
mov
movb
add
movb
push
jmp
clc
test
cmpl
movb
pushf
call
pusha
jmp
sub
rcr
mov
stc
test
add
pushf
pusha
mov
lea
jmp
pusha
mov
mov
pushl
jmp
mov
pushf
lea
jmp
mov
pushf
lea
jmp
bswap
mov
pusha
movl
lea
jle
mov
jmp
inc
rol
mov
pusha
cmp
add
movb
lea
jmp
movw
movb
mov
mov
call
add
pushl
movb
pushf
mov
mov
push
movw
pushf
lea
jmp
pusha
mov
mov
mov
lea
jno
push
pushf
movw
pushf
popl
jmp
cmp
and
mov
btr
bsr
neg
mov
stc
push
pushf
mov
stc
pusha
bt
cmc
add
movl
shld
push
jmp
mov
setae
movzbw
pop
mov
push
push
call
pushf
mov
push
mov
sub
jmp
jmp
pushf
pushf
popl
call
pushf
lea
push
mov
push
pushl
lea
jmp
repz
popl
pusha
mov
pushl
mov
jmp
movb
mov
call
pushf
mov
mov
pushf
push
lea
jmp
mov
mov
lea
jmp
mov
lea
jp
pushf
call
mov
lea
push
mov
call
call
mov
movb
lea
jmp
rcl
mov
dec
btr
btr
mov
stc
pusha
jmp
mov
pushf
mov
jmp
not
mov
pop
movzbl
lea
dec
dec
lea
movsbw
not
push
call
inc
setge
lea
clc
xchg
rcr
sub
stc
stc
dec
mov
bsr
mov
bt
add
add
mov
adc
xor
sar
neg
not
pusha
bswap
not
mov
dec
sets
add
bts
sub
sub
sar
clc
movzbw
xor
call
pushl
popl
pusha
movw
push
movl
lea
jmp
movzbw
add
jmp
mov
lea
jne
rcr
xorb
bswap
pop
pushf
pushf
pusha
lea
jmp
mov
pushf
jmp
mov
pusha
mov
pushf
jmp
pushl
popl
pushl
pushl
push
pushf
lea
jmp
call
btc
movzbw
mov
pushf
cmc
ror
bt
mov
call
inc
pusha
pushf
push
xor
jmp
mov
mov
lea
jmp
movb
pushf
popl
mov
pushf
push
pushl
popl
pusha
push
lea
jmp
pusha
mov
movb
movw
mov
mov
mov
mov
repz
popl
jmp
rcr
and
adc
sar
mov
bsf
dec
mov
pushf
jmp
sub
stc
test
add
cmc
cmp
bt
cmp
cwtl
stc
sub
pushf
lea
jle
push
mov
mov
movb
pushl
push
lea
jmp
pushf
mov
cmp
add
movb
mov
pushf
popl
push
call
rcl
btr
test
mov
test
add
call
call
call
push
push
lea
jne
shl
mov
clc
and
cmp
test
cmc
cmp
call
pushf
popl
mov
mov
pushl
popl
push
push
lea
jmp
pusha
mov
mov
jmp
pushf
jmp
shl
mov
shld
mov
pusha
add
pusha
pushf
lea
jmp
add
pusha
pushf
popl
mov
pushf
pushl
popl
push
mov
push
lea
jmp
mov
push
pushf
pusha
mov
jmp
pushl
lea
js
mov
pushf
pusha
pusha
push
lea
jmp
pushf
popl
mov
call
sar
and
inc
mov
or
dec
shl
seta
mov
cmp
add
pusha
jmp
pusha
mov
mov
pusha
call
movb
mov
mov
lea
jmp
stc
add
pusha
jmp
pushl
popl
pusha
pushf
lea
jmp
call
jmp
push
inc
pusha
clc
stc
stc
xor
jmp
shld
daa
movzbw
cmc
mov
cmp
call
mov
rep
cmp
cmc
stc
mov
mov
adc
mov
clc
movw
cld
pushl
popf
movb
mov
lea
jmp
mov
pusha
mov
mov
mov
movb
jmp
pusha
pushl
popl
push
pushl
pushl
lea
jmp
push
cbtw
test
push
movb
cwtl
test
clc
cmp
pushf
sub
jmp
call
pushf
popl
movb
movw
call
xchg
call
pusha
mov
mov
push
pushf
popl
movb
pushl
jmp
pushl
repz
popl
movl
push
mov
pushf
pushf
call
jmp
push
call
shl
daa
btr
lahf
notl
shld
mov
push
clc
bt
clc
sub
movb
and
call
not
sbb
rcr
mov
not
bt
pushf
mov
cmc
clc
test
pusha
sub
mov
shr
pusha
pushf
mov
jmp
cmc
mov
push
sub
cmp
sub
push
mov
mov
movb
lea
jmp
call
lea
call
inc
sbb
stc
mov
pusha
cmp
cmc
xor
bt
neg
pushf
inc
push
not
pushl
jmp
jmp
stc
add
push
stc
pushf
neg
pushf
cmc
bt
bt
ror
cmp
pushl
add
cmc
bt
sub
push
mov
pusha
pushf
movl
lea
jmp
jmp
call
pushl
mov
pushf
pushf
pushf
mov
lea
jmp
mov
call
lahf
movsbw
jmp
seta
and
lea
mov
mov
test
ja
pushf
cmc
sub
push
movb
mov
pushl
mov
lea
jmp
movb
cmp
sub
call
repz
popl
mov
mov
call
test
mov
pushl
or
pushf
mov
lea
je
clc
pusha
cmc
jmp
mov
push
lea
jmp
xor
add
rcl
movzww
jmp
pusha
mov
push
lea
jmp
movw
call
lea
jne
clc
xorb
pusha
call
mov
jmp
neg
sub
aam
mov
mov
bt
bt
sub
pusha
pusha
cmc
add
jmp
push
sub
call
movw
mov
lea
jl
pusha
pushf
pushf
popl
pusha
pushl
popl
movb
pushf
pushf
lea
jmp
mov
mov
movb
push
lea
jmp
cmc
movsbw
mov
pushf
bt
pushf
add
pushf
mov
pusha
lea
jmp
sub
jmp
mov
lea
jle
pushf
pushf
movl
mov
movw
mov
jmp
call
sub
movw
pusha
movb
mov
pushf
mov
lea
jmp
jmp
mov
push
call
mov
add
bt
jmp
call
call
push
movl
mov
call
movb
lea
jne
pusha
mov
call
pushf
pushf
pusha
mov
pusha
jmp
pop
stc
pop
call
call
sub
lea
jl
push
movw
mov
push
lea
jmp
test
sub
movb
mov
mov
pushf
mov
lea
jmp
pushl
jmp
aad
pushf
mov
bt
pusha
sbb
mov
bt
cmc
cmp
stc
sub
jmp
not
btr
call
jmp
call
or
movsbw
mov
or
call
push
add
test
stc
call
inc
pushf
mov
decl
pushl
movb
jmp
not
call
pushf
movb
pushl
popl
pushl
pushf
mov
lea
jmp
inc
pushf
pushf
movl
movb
lea
jmp
pushf
pushl
popl
push
pushf
lea
jmp
push
mov
jmp
call
pusha
mov
mov
mov
movb
lea
jmp
pushf
pushl
popl
pushf
add
sub
jnp
stc
cld
cmc
popf
pushf
push
push
pushf
lea
jmp
push
pushl
popl
pushf
movb
lea
jmp
push
mov
movb
mov
mov
lea
jmp
call
movw
mov
lea
jns
pushf
pushf
popl
call
pushf
call
repz
popl
jmp
mov
movb
mov
pushf
lea
jmp
jmp
pushf
push
jmp
mov
pusha
mov
pushf
pushl
mov
jmp
movw
pushf
mov
push
mov
lea
jmp
sub
call
pushf
call
push
pushf
mov
push
pushl
jmp
mov
mov
pushf
mov
mov
lea
jmp
cmp
not
test
not
clc
and
pusha
jmp
pushf
mov
jmp
movsbw
mov
pushf
popl
jmp
jmp
xadd
inc
mov
shl
mov
inc
sub
setbe
add
bsf
dec
neg
sub
bts
mov
cmp
stc
clc
shl
cmc
shr
jmp
pusha
pushf
popl
pushf
jmp
add
push
lea
jmp
call
sub
mov
stc
pushf
clc
shl
add
jmp
mov
pushf
lea
jmp
mov
pushf
lea
jmp
push
movb
pushf
movb
mov
jmp
mov
movb
pushf
mov
mov
lea
jmp
mov
movw
pushf
pushl
movb
lea
jmp
sar
add
mov
bts
and
sub
aad
mov
call
movw
mov
pushf
movl
push
pushf
popl
mov
pushl
popl
pushf
lea
jmp
cmc
rol
movzbl
pushf
btr
xor
shr
neg
movzbw
pushf
bt
lea
rcl
rcr
ror
push
not
mov
rol
not
sar
xor
test
ror
push
mov
movb
test
cmp
bt
add
pushl
mov
pushf
pusha
mov
lea
jmp
jmp
ror
call
btc
mov
sbb
rol
and
cmc
sub
bswap
mov
bt
clc
test
add
push
jmp
pushf
mov
jmp
call
call
pusha
call
pusha
and
pusha
mov
cmp
cmp
mov
pushf
lea
jne
dec
sub
xorb
movsbw
bswap
pop
pusha
pushf
pusha
lea
jmp
jmp
mov
push
mov
pushf
mov
jmp
add
bt
call
pushf
pushl
push
mov
pop
mov
call
mov
call
call
btc
mov
pusha
cmc
bt
movb
add
pusha
push
movl
pushf
lea
jmp
push
pushf
mov
push
lea
jmp
push
movb
mov
mov
mov
jmp
pusha
jmp
clc
test
sub
cmc
sub
pusha
stc
clc
mov
cmc
sub
call
mov
pushl
lea
jge
pushf
pushf
popl
call
pushf
jmp
jmp
inc
bt
jmp
shr
call
pushl
popl
movb
lea
jmp
lea
ja
cmc
mov
clc
lea
clc
bts
rcl
jmp
mov
pushf
call
bsf
mov
call
jmp
inc
test
add
test
cbtw
pushf
mov
cmp
cwtl
pushf
bt
stc
bt
sub
pushf
push
mov
movw
lea
jmp
pusha
mov
pusha
mov
mov
lea
jmp
lahf
shl
mov
pusha
clc
add
pushf
mov
call
aas
pop
rcr
pop
pushf
aas
mov
cmc
mov
xadd
daa
lea
pushl
popf
setbe
mov
jmp
mov
dec
cmc
bt
mov
clc
neg
mov
jmp
sbb
sar
mov
shrd
stc
mov
call
call
cmc
sub
push
cmp
pusha
mov
sub
bt
stc
rol
stc
pushl
clc
jmp
mov
push
mov
jmp
pushf
pushf
popl
mov
push
pushl
popl
pusha
mov
push
pushl
lea
jmp
jle
not
mov
bt
sub
pushf
pusha
cmc
sub
push
cmc
jmp
mov
lea
jp
pusha
pushf
mov
jmp
movsbw
mov
bswap
mov
pushf
pusha
mov
jmp
movb
call
pushf
pushf
movw
mov
pusha
pusha
mov
call
call
pushf
push
pushl
popl
mov
push
lea
jmp
sub
movsbl
test
bsf
mov
clc
sub
call
mov
pushf
lea
jne
jmp
pusha
mov
mov
movb
mov
pushf
push
repz
popl
call
pushf
call
push
mov
pushf
jmp
mov
pushf
mov
push
mov
pushl
mov
pusha
mov
lea
jmp
jmp
movzbw
seta
call
mov
movsbw
bswap
xchg
lea
pusha
xchg
dec
pusha
movzbw
pushl
mov
setge
pushl
popl
jmp
aaa
mov
push
stc
mov
pushf
push
test
sub
bt
stc
cmp
shl
mov
call
pushl
mov
pushf
call
jmp
jmp
pusha
pushl
popl
pushf
pushf
push
movb
lea
jmp
bt
sub
cmp
pushf
test
shl
movb
push
pushf
call
bt
add
pushf
push
mov
mov
push
mov
lea
jmp
sub
mov
pushf
sub
call
rcr
mov
cmc
pushf
bt
add
pusha
mov
pusha
pushl
lea
jmp
call
sub
jmp
jmp
rol
clc
cmc
cmc
xor
movb
mov
pushf
sub
call
jmp
movzbl
clc
cmp
and
bsr
add
cmc
adc
clc
bsr
sub
push
pushf
pop
xor
movsbw
dec
mov
inc
add
sub
add
bt
neg
shl
add
btr
shld
movzbl
jmp
and
shld
rcr
bt
add
sbb
btr
movzbl
xor
movsbw
rol
movzbl
ror
bt
and
dec
rol
sub
xor
mov
pusha
bt
jmp
clc
mov
jmp
mov
jmp
jl
pushf
mov
pusha
movb
pushl
lea
jmp
call
mov
push
pushf
mov
lea
bswap
pusha
lea
pusha
call
xor
mov
push
jmp
jmp
stc
shl
push
jmp
mov
push
jmp
lea
jl
push
pusha
pusha
pushf
mov
lea
jmp
pushf
movw
pushf
mov
pushf
call
pushf
pushl
popl
mov
mov
push
push
lea
jmp
divl
pusha
pushl
pushf
call
bt
call
mov
call
call
pushf
add
movb
dec
call
mov
call
shr
pusha
pushl
push
mov
pushf
pushf
popl
pushl
lea
jl
pusha
push
pushl
popl
push
push
mov
push
lea
jmp
pushf
pushf
popl
pushf
pushl
popl
pusha
push
mov
lea
jmp
mov
pushf
pushl
popl
push
pushf
movb
lea
jmp
clc
add
clc
js
sub
jmp
call
repz
popl
call
movb
mov
mov
pushf
movl
lea
jmp
bswap
mov
movb
pushf
lea
jo
lea
pusha
mov
movb
pusha
push
lea
jmp
ror
mov
pushf
clc
cmp
add
pushl
push
pushl
pushf
lea
jmp
repz
popl
push
pushf
push
mov
pushf
pushf
mov
pushl
movl
pushf
lea
jmp
mov
call
pushf
pushl
popl
pushl
push
pushf
pushl
lea
jmp
jmp
movb
add
jmp
call
pushf
jmp
pusha
cmc
mov
mov
pusha
cmc
sub
cmp
push
pushf
sub
call
mov
mov
mov
movw
pushl
pusha
mov
movb
jmp
pushf
movzbw
pushf
mov
lahf
movsbw
xchg
pop
setnp
jmp
mov
call
das
push
call
and
shld
daa
cmp
mov
dec
lea
inc
shrd
mov
cmp
jmp
jmp
push
bsr
mov
pushf
clc
clc
jmp
pushl
movb
mov
pusha
mov
mov
pushf
push
lea
jmp
mov
mov
pushf
movb
mov
jmp
mov
pushl
movb
push
call
call
mov
pusha
pushf
pushf
pushf
lea
jmp
pushf
bt
cmc
jmp
stc
mov
test
pusha
cmp
cmp
add
movb
lea
jmp
pusha
cmc
cmp
add
movb
pusha
mov
mov
movb
pushf
lea
jmp
rol
and
movzbl
test
add
call
pushl
call
add
add
push
lea
jne
push
push
call
mov
movw
movb
lea
jmp
mov
pushf
movb
push
jmp
rol
add
jno
cmc
test
test
sub
cmp
jmp
pushf
lea
jne
test
cmc
pushf
xor
call
mov
pushf
pushl
repz
popl
pushf
push
pushf
movw
mov
jmp
cmp
not
movw
not
pusha
sub
cmc
movb
call
jmp
jmp
pushf
bswap
mov
pusha
pushf
xchg
movzbw
push
repz
popl
setns
jmp
pushl
popl
push
pushl
lea
jmp
pushl
popl
mov
movb
pushl
pushf
lea
jmp
push
jmp
cld
call
push
jmp
movsbw
sar
neg
add
and
sbb
xor
ror
stc
ror
ror
neg
js
push
and
rcl
lea
push
mov
pushf
stc
bt
push
add
push
mov
pushl
pushf
push
lea
jmp
sub
movb
mul
lea
jl
push
push
mov
jmp
clc
ror
mov
sub
cmc
cmp
mov
jmp
mov
pushf
mov
pushf
jmp
pushf
popl
jmp
call
pushl
mov
mov
call
clc
mov
stc
cmp
call
jmp
bsr
shl
mov
rol
mov
pushf
bt
cmc
stc
add
pushf
pusha
push
mov
pushf
lea
jmp
jmp
stc
and
stc
pushf
stc
stc
cmp
push
pushl
call
jmp
call
pushf
mov
movb
movb
lea
jmp
push
mov
pusha
call
mov
pushl
mov
movb
movl
lea
jmp
jmp
pushf
pushf
pushf
pushf
popl
push
pushl
popl
mov
pusha
pushf
movw
lea
jmp
stc
xor
pushf
call
pushl
test
movw
add
pushl
pusha
pushf
lea
jmp
call
jmp
pushf
pushf
popl
pusha
jmp
shrd
push
call
pushf
rcl
rdtsc
stc
cmp
sub
call
sub
stc
test
movl
sub
pushf
call
dec
test
pushl
bt
cmc
add
pushf
pushl
call
pushf
xchg
mov
movl
call
cmc
pusha
push
sub
mov
call
pushf
call
pusha
dec
cmp
add
movb
jmp
movsbl
lea
clc
cmc
clc
cmc
cmp
pusha
call
call
mov
mov
push
call
pushf
mov
movb
lea
jmp
pushl
popl
mov
mov
lea
jmp
mov
push
jmp
dec
and
movzbl
jmp
pushf
popl
mov
jmp
pushf
sbb
shld
mov
ror
and
add
mov
pushl
setns
jmp
push
mov
mov
pushf
call
mov
pushl
jmp
sub
test
rol
lea
btr
cmc
rcr
and
bts
sub
btr
sub
pushf
pop
mov
call
pop
mov
mov
push
push
push
pushl
ret
pushf
jmp
mov
movb
movb
movb
movb
lea
jmp
mov
pushf
movw
lea
cpuid
test
call
bt
add
cmc
clc
xor
push
pushf
push
neg
stc
bt
movl
ror
clc
cmp
call
pushf
push
pushf
pushf
popl
mov
movb
call
mov
jmp
pushf
push
mov
pusha
pushl
ret
bt
mov
bt
pushf
mov
test
stc
sub
add
jbe
shr
call
cmc
pushl
add
pushf
xor
clc
call
pusha
adc
mov
stc
stc
clc
sub
test
cmp
jmp
bswap
movzbw
mov
pushf
bswap
pushf
mov
call
mov
call
shr
stc
mov
stc
stc
sub
jmp
cmc
or
pushf
mov
pusha
push
xor
movb
pushf
jmp
cmc
cld
bt
popf
pushf
pusha
lea
jmp
pushf
pusha
mov
mov
pushl
pushf
lea
jmp
bswap
jmp
jmp
