push
mov
sub
push
push
pushl
push
call
add
pop
sub
mov
add
ret
add
andb
add
add
push
mov
sub
push
pushl
push
call
add
pop
sub
mov
add
ret
add
add
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
sub
mov
add
ret
add
add
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
sub
mov
add
ret
mov
add
push
push
pop
add
mov
shl
lea
mov
ror
add
add
xor
xor
test
jbe
pop
push
mov
sub
jle
pop
sbb
ja
jmp
mov
call
push
pop
loop
int
add
leave
fidivl
cmp
add
or
in
sub
push
pushl
push
call
add
pop
sub
mov
add
ret
add
add
in
sub
push
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
in
sub
push
push
push
pushl
call
add
pop
sub
mov
add
ret
add
push
mov
sub
push
pushl
push
push
push
call
add
pop
sub
mov
add
ret
add
in
sub
push
push
pushl
push
pushl
call
add
pop
sub
mov
add
ret
add
add
push
mov
sub
push
push
pushl
push
push
call
add
pop
sub
mov
add
ret
add
push
mov
sub
push
push
push
push
call
add
pop
sub
mov
add
ret
add
add
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
sub
mov
add
ret
add
push
mov
sub
push
pushl
push
pushl
call
add
pop
sub
mov
add
ret
add
in
sub
push
push
pushl
pushl
call
add
pop
sub
mov
add
ret
push
mov
sub
push
push
pushl
pushl
call
add
pop
sub
mov
add
ret
push
mov
sub
push
pushl
push
call
add
pop
sub
mov
add
ret
add
add
push
mov
sub
push
push
pushl
push
call
add
pop
sub
mov
add
ret
add
push
mov
sub
push
push
push
pushl
call
add
pop
sub
mov
add
ret
add
push
mov
sub
push
push
pushl
call
add
pop
sub
mov
add
ret
add
add
in
sub
push
pushl
push
push
push
call
add
pop
sub
mov
add
ret
add
push
mov
sub
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
push
mov
sub
push
push
pushl
push
push
call
add
pop
sub
mov
add
ret
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
push
mov
sub
push
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
decb
push
push
mov
push
mov
push
subl
mov
push
mov
push
mov
inc
mov
call
add
mov
sub
sub
mov
pop
mov
mov
lea
lea
mov
mov
xor
sbb
sbb
lea
push
pop
sub
or
sbb
add
mov
pushl
sub
sub
pop
mov
rol
and
ror
and
add
sub
test
jne
xor
push
xor
mov
nop
call
sub
ret
push
mov
sub
push
pushl
push
call
add
pop
sub
mov
add
ret
add
add
push
mov
sub
push
push
push
call
add
pop
sub
mov
add
ret
push
mov
sub
push
pushl
push
pushl
call
add
pop
sub
mov
add
ret
add
push
mov
sub
push
push
pushl
call
add
pop
sub
mov
add
ret
add
add
jmp
xorb
cmp
std
daa
mov
cmp
outsb
mov
push
mov
push
lods
push
add
cmp
iret
adc
inc
xor
push
sub
push
fdivp
imul
das
dec
arpl
sub
fldcw
adc
movsb
mov
mov
jo
pop
cmpsb
mov
pop
pop
xor
xor
cli
xchg
xor
adc
mov
mov
xchg
mov
enter
sub
mov
mov
mov
data16
lea
sub
outsl
dec
mov
cld
dec
push
xor
roll
or
push
xor
iret
pop
cmp
fsubs
fs
fiaddl
loop
ss
mov
add
fs
scas
fwait
aad
pop
adc
push
stos
decb
sub
stos
aas
fistpl
jge
into
arpl
cmp
mov
ret
cmp
sub
cmp
negb
rdpmc
repnz
ss
clc
enter
inc
aaa
pop
mov
pop
fimull
jg
mov
xchg
and
sarl
out
xchg
fcmovu
add
jg
and
das
aam
leave
cmp
inc
cmc
sbb
popf
lods
adc
mov
negb
sub
xchg
cmp
adc
or
imul
and
cmp
fs
xchg
xchg
cmp
mov
pop
cs
insb
mov
movsb
pop
idivb
mov
std
enter
push
mov
add
inc
sar
push
cmp
jb
test
mov
cmp
dec
lds
stos
popa
cmp
fwait
dec
adc
sahf
arpl
insb
fildl
stos
sti
add
in
or
loopnew
sub
loop
lock
and
mov
loope
mov
add
pushf
filds
ljmp
dec
fs
pop
xchg
repz
sub
add
shr
mov
ficoms
arpl
nop
lods
or
clc
jge
pusha
adc
shlb
jnp
loope
inc
and
dec
mov
and
mov
xlat
xchg
xor
fs
mov
dec
lods
int
lds
and
mov
xor
mov
or
dec
dec
addl
jmp
adc
nop
std
cmp
push
ret
addl
mov
outsl
aam
push
subb
hlt
sub
loope
mov
sub
dec
xor
sub
and
pop
add
jo
push
divl
leave
pop
mov
adc
mov
outsl
stos
mov
ds
addb
lock
rcll
int3
jp
clc
cmp
adc
sbb
frstpm(287
enter
adc
aam
leave
cmc
pop
xchg
jl
lock
outsb
pop
packuswb
push
mov
das
jno
int3
mov
mov
inc
dec
fisttpll
das
mov
stc
test
lahf
lea
dec
div
mov
scas
mov
adc
mov
jb
or
or
cmp
ficoms
inc
aas
mov
cmpsl
pop
or
push
sbb
ljmp
cmp
das
sbb
clc
bound
hlt
inc
imul
outsb
jo
jo
stc
orb
push
xchg
cmpb
aaa
cmp
dec
cmp
leave
int3
mov
call
cmc
push
call
sbb
and
cmpsl
jecxz,pn
pop
push
std
into
nop
popa
loop
sahf
mov
jmp
push
std
dec
shlb
adc
mov
in
cwtl
cmc
xor
push
adc
loope
gs
cmp
and
fwait
sbb
in
testb
sbb
sub
cmc
or
xchg
int3
xchg
mov
popf
add
cld
cs
sub
adc
in
fidivl
mov
pop
adc
insl
movsl
pusha
xchg
pop
adc
sbb
pop
jmp
nop
jbe
and
xor
cmpsb
dec
jno
xchg
mov
pop
repz
and
in
pop
mov
cmpsl
push
pop
stc
sub
es
mov
mov
push
stos
test
loopne
sub
mov
arpl
inc
sub
jne
addb
jle
stos
sbb
je
push
std
add
sbb
fs
mov
icebp
fsubl
stos
scas
push
push
nop
pop
repnz
xchg
or
push
das
xor
frstor
popf
shll
pop
xchg
cmp
pop
into
imul
pop
or
pop
hlt
adc
xor
inc
ucomiss
jno
icebp
mov
lcall
rorl
pop
xchg
push
push
pop
mov
std
pop
mov
dec
cmp
jmp
into
jbe
mov
jns
cmp
pop
sbb
mov
mov
or
dec
mov
or
inc
adc
inc
aam
push
mov
jae
inc
fdivs
stos
mov
mov
push
xorl
repz
mov
jl
pop
adc
adcl
pop
push
sbb
push
psrld
movsb
data16
jle
cmpsb
repz
fs
jnp
dec
jle
mov
ss
xor
js
mov
shrb
and
cli
mov
lods
fwait
push
xor
mov
in
mov
or
mov
loop
in
cmpsb
jb
loop
call
insl
mov
lods
or
neg
push
add
cld
rcll
cmp
rcll
lods
cmpl
dec
xchg
adc
scas
out
jge
dec
insl
fiadds
fimull
mov
push
mov
xor
movsl
or
inc
mov
jecxz
cs
das
mov
iret
inc
dec
scas
dec
mov
pop
push
ret
lods
aaa
sbb
test
mov
inc
mov
add
fidivrs
and
and
fdivl
in
and
out
adc
sub
out
dec
jl
jbe
mov
mov
adc
mov
mul
jmp
adc
leave
cltd
stos
daa
push
xor
or
imul
and
mov
bound
cmp
mov
adc
sbb
hlt
xchg
xor
xchg
mov
jns
push
addb
cmp
pop
jge
xor
hlt
xor
outsl
cmp
xchg
inc
push
lods
mov
inc
push
scas
mov
inc
push
mov
outsb
in
xchg
inc
dec
mov
mov
dec
mov
int3
loope
outsl
loop
or
nop
fistps
mov
mov
adc
jle
jb
cld
mov
sub
jnp
pop
in
xor
lret
out
